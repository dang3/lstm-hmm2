push
call
ret
ret
sub
sub
hlt
repz
in
xchg
mov
jo
testb
lods
push
and
xchg
cmpl
cld
inc
clc
inc
jmp
in
adc
mov
sub
cmp
leave
test
xchg
lds
mov
lahf
rclb
dec
shrl
inc
and
ds
jp
cmpb
xchg
orl
push
js
repnz
mov
cmpsl
mov
push
pop
mov
jp
mov
std
sub
dec
push
jmp
repz
cmp
cmpsb
loopne
adc
rorl
arpl
aaa
test
clc
sbb
ljmp
scas
xchg
push
sub
mov
adc
es
adc
xchg
lahf
aad
jb
cmc
xor
add
pop
mov
add
mov
add
adc
xor
das
mov
sbb
ja
cmpsl
mov
lea
mov
out
pusha
mov
push
and
inc
add
jp
mov
pop
mov
mov
insb
add
push
aaa
std
leave
mov
mov
lds
adc
pop
cld
lds
pop
mov
dec
scas
mov
dec
daa
test
or
pop
pop
stc
imul
aas
pop
mov
das
push
fisttpll
cmp
cmpsl
std
and
lret
sub
pop
dec
out
push
sub
pop
sbb
test
adc
inc
mov
or
mov
mov
mov
mov
mov
adcl
fdivs
outsl
dec
jbe
jg
scas
iret
test
pop
push
adc
test
loope
push
aas
fdivrs
add
add
and
mov
mov
imul
ja
inc
pushf
cltd
adc
mov
push
fsubrp
and
and
mov
add
xchg
xchg
sub
fisubrs
xor
fistl
cmp
out
adc
sbb
mov
jecxz
cwtl
in
cltd
add
mov
icebp
add
inc
inc
sbb
inc
inc
rcrl
push
leave
push
repz
or
inc
mov
repnz
jb
cld
lret
int
gs
jl
xlat
lcall
sti
adc
in
xchg
push
inc
push
cmp
push
cld
sbb
jnp
pop
imul
lods
push
dec
mov
fwait
lcall
and
push
mov
add
das
lret
xchg
xor
push
cmc
movsb
and
fistps
subl
stos
out
jb
outsb
push
cmc
outsb
inc
push
mov
lds
adc
int
gs
jl
lock
idivl
inc
in
movb
jecxz
adc
mov
sti
fstps
ret
nop
hlt
xor
adc
in
mov
mov
outsb
jle
cmpsb
outsl
rcrl
mov
fldt
orb
inc
gs
adc
jb
pop
lods
xorl
sbb
rcrb
add
xchg
lret
lcallw
xchg
lcall
fnstenv
arpl
push
dec
lret
adc
push
dec
test
rolb
aad
repz
pop
push
ds
xlat
out
adc
xchg
inc
add
std
ret
test
push
sbb
pop
fsubrs
or
adc
xor
xor
cmpsb
mulb
mov
cmp
mov
pop
aam
adc
test
incb
into
shr
push
adc
pop
jg
inc
fsubl
cs
pop
xor
mov
clc
enter
mov
jl
iret
inc
push
push
or
leave
ficoms
lret
les
outsb
lahf
nop
shll
cli
mov
push
lret
mov
jmp
push
xchg
xor
js
cmp
fxch
mov
scas
mov
mov
xor
and
mov
repnz
xchg
bound
cmc
mov
mov
push
in
loope
test
clc
pop
sub
mov
mov
xlat
push
push
lods
xor
xor
sub
xor
movsb
dec
test
fdivrp
fbstp
and
mov
es
lock
aad
add
mov
push
pop
pop
out
call
jne
mov
jle
cmp
test
xor
loope
scas
rcll
push
insl
ja
dec
repz
decb
and
les
cmp
inc
in
sbb
jecxz
push
lcall
flds
push
add
mov
sub
movsb
ja
ss
push
mov
pusha
push
mov
je
jl
dec
lahf
or
faddp
cmp
mov
xchg
xchg
cmp
js
xchg
in
sti
ret
mov
stc
out
cld
mov
push
stos
xchg
outsl
mov
sub
sbb
lahf
mov
mov
je
pop
sbbl
mov
push
dec
sahf
cmp
mov
xchg
lods
loop
and
fldcw
sbb
sub
cmpsb
jl
xchg
push
lea
inc
call
jmp
lds
loopne
out
cld
mov
leave
std
lretw
inc
inc
stos
push
mov
out
out
pop
xchg
and
inc
icebp
fbld
adc
stos
das
add
push
divb
mov
rcrl
sub
pop
push
jno
cmp
rcl
mov
push
and
cmp
nop
daa
lds
cmp
pop
cli
add
shlb
xor
sbb
aad
cwtl
insl
lahf
sub
push
out
insb
sarl
ds
insb
mov
cmpl
out
fimuls
add
pop
fnsave
adc
stc
sub
mov
cmc
inc
pusha
and
call
fmull
sti
mov
push
or
jecxz
xlat
ljmp
jp
lock
xlat
rclb
xchg
stos
dec
in
and
sub
pop
jge
jo
mov
sbb
dec
lock
pop
fadd
lret
fidivrs
mov
push
fisttps
adc
lock
shrb
jo
sub
jno
mov
dec
xchg
outsl
pop
imul
fistpll
lods
in
js
movsl
repz
sbbl
aas
cmp
add
jg
cmp
int
and
sbb
push
mov
test
cltd
xchg
or
in
test
inc
lea
dec
das
add
lods
pop
rcrl
test
mov
sbb
jb
jns
mov
mov
fimull
lret
or
sub
scas
mov
pop
jmp
mov
inc
test
cmpsb
fsubr
fistpl
aas
xor
jns
mov
stc
sahf
mov
push
stc
loope
lds
and
adc
adc
or
fs
ljmp
jp
fcompl
pop
inc
dec
jae
dec
mov
mov
push
push
stos
mov
leave
mov
mov
test
test
cwtl
add
lret
out
sarl
jmp
mov
cmp
stos
inc
push
imul
xor
dec
and
xchg
in
sbb
pop
xchg
ret
loop
mov
push
xor
push
inc
div
mov
adc
xchg
out
lret
inc
push
addr16
adc
and
pop
xchg
jae
mov
pop
int3
mov
adc
popf
loop
mov
xchg
push
icebp
pop
xor
and
lahf
jnp
or
xor
into
cld
cmp
xlat
dec
xchg
bound
jge
or
out
mov
push
push
loop
popf
mov
add
jno
adc
adc
mov
loop
sbb
push
test
inc
mov
jmp
xchg
inc
stos
rorl
shrb
sbb
out
stos
inc
sbb
sbb
sub
sti
or
shrl
in
shrl
test
and
adc
jecxz
dec
cli
sub
xchg
jmp
xchg
add
dec
xor
dec
dec
dec
push
repnz
inc
jecxz
cmpsb
and
mov
pusha
lods
leave
jne
das
adc
mov
xor
imull
in
adc
lds
shll
push
sbb
cmp
xchg
mov
sub
mov
push
int
shrb
adc
add
les
xchg
jg
fcmove
adcb
add
je
ds
jge
mov
lcall
push
js
dec
mov
jp
inc
cmp
jl
add
cli
cwtl
scas
aam
js
cmpsl
cs
enter
negl
xor
cmpsl
sub
cwtl
scas
enter
mov
lods
mov
ss
mov
xchg
lahf
hlt
pushl
cltd
push
stos
push
sub
ror
push
jo
xor
sub
int3
jno
mov
dec
xor
test
sub
and
les
xchg
jb
add
and
mov
ret
ljmp
mov
loop
in
adc
rorl
add
mov
mov
jb
jmp
adc
mov
fdivp
mov
inc
xor
cli
and
scas
xlat
mov
and
std
lds
andb
mov
push
aas
pop
sarl
nop
xchg
lods
cmpsl
xorb
jecxz
shrl
bound
xor
dec
repz
or
sbb
sarb
push
fiaddl
xlat
xchg
imul
push
cmp
test
in
and
mov
sbb
loope
das
cmpb
xchg
out
sub
in
fmuls
rcrl
and
ror
xor
sub
pushf
in
pop
insl
jge
in
movsb
add
fisttps
jo
pusha
pop
out
movsb
jbe
mov
movsl
mov
sti
inc
push
aad
pop
mov
push
test
sub
ficoms
sbb
outsb
xchg
dec
jle
xlat
loope
lahf
cmp
pop
pop
ret
push
aam
lock
mov
clc
jp
lret
orb
mov
mov
sub
mov
test
xchg
adcb
jmp
clc
decb
sbb
test
scas
and
int
xor
movsb
inc
or
add
andb
hlt
stos
in
pop
jl
inc
fimuls
sti
adc
hlt
aaa
outsl
dec
stos
jge
mov
scas
sahf
cmpsl
xor
cmpsl
fldlg2
enter
adc
jle
pop
dec
lods
lret
bound
xchg
adc
bound
into
dec
add
fsts
sbb
outsl
fcom
iret
mov
pop
scas
call
sbb
bound
adc
mov
scas
insl
pusha
filds
mov
js
sbb
scas
mov
and
fmull
xchg
pop
orl
mov
lock
ret
pop
push
and
lds
std
leave
std
dec
mov
daa
adc
jmp
pop
xor
mov
pop
jge
repz
push
jne
scas
fldl
rorb
scas
or
filds
out
push
mov
fdivr
mov
sbb
push
dec
lock
movsb
adc
test
call
and
and
add
call
movsl
inc
jl
lea
jmp
push
mov
adc
fucomip
mov
dec
imul
fbld
pop
stc
add
cmp
iret
ja
sbb
dec
repz
in
and
out
lcall
cs
fldcw
pop
inc
popf
cmp
mov
pop
or
and
lock
mov
xor
stos
xor
push
fcomip
cs
mov
outsl
jmp
loop
dec
inc
adcb
mov
or
and
jge
jbe
enter
sbb
mov
xchg
xor
pop
cmpsb
es
sub
jl
pop
sub
mov
push
sbb
mov
dec
ds
ds
lahf
enter
dec
stc
negb
or
call
mov
inc
xchg
pop
and
xlat
inc
fnsave
mov
daa
xor
aaa
clc
mov
repz
xchg
mov
movsl
cmp
jnp
cmpsl
mov
pushf
outsb
out
outsl
shlb
cmpsb
jnp
adc
decl
loope
push
nop
sub
push
xor
mov
leave
movl
jnp
cs
adc
mov
inc
fwait
cs
jae
jae
sarl
mov
mov
jno
push
lock
push
xchg
jae
adc
sbb
sti
ljmp
and
dec
leave
aas
sahf
sub
mov
mov
and
mov
adc
push
xchg
insb
mov
push
stc
mov
push
inc
imul
loopne
push
adc
jmp
add
scas
nop
aas
popa
dec
xchg
xchg
pop
or
push
and
fsubrs
jecxz
add
lret
outsl
scas
dec
iret
leave
andl
add
fabs
xorl
cmp
mov
xchg
cltd
leave
add
jns
and
mov
push
test
scas
jle
movsb
push
and
cmp
push
daa
adc
cmpsl
jp
fidivrl
pop
stc
xor
test
push
je
jmp
xchg
aaa
jecxz
add
jns
stc
cmp
push
popl
lock
popf
cmpl
in
mov
lock
and
icebp
xchg
jbe
orl
lret
sub
inc
aam
adc
pushf
aad
mov
xchg
pop
xchg
in
setne
sbb
pusha
push
inc
inc
or
aam
out
pushf
push
outsl
shl
movsl
cmp
imulb
movsb
mov
popa
mov
and
cmpl
loopne
push
cmpsb
push
add
popf
je
mov
mov
push
outsl
add
mov
sub
dec
pop
push
jnp
xchg
cmp
adc
pushf
popf
iret
add
and
push
fwait
add
jno
cli
daa
aad
mov
mov
outsb
jnp
mov
push
mov
xchg
mov
out
scas
loop
cs
addr16
cwtl
push
shlb
and
in
mov
pop
jge
repnz
cmpsl
push
lods
mov
mov
fidivl
cmpb
push
or
adc
sbb
push
outsw
jmp
out
data16
pop
aas
xor
xchg
mov
xchg
bound
jne
jl
mov
sub
mov
dec
jle
dec
push
jecxz
adc
or
movsb
orl
jg
les
movsb
dec
andl
push
pop
push
jb
sbb
lock
xchg
cwtl
lahf
pop
ds
adc
inc
andb
mov
xor
aam
adc
pushl
push
aad
das
pushf
mov
cld
stc
ret
out
fcmovnb
xchg
gs
js
cmp
fstl
movsb
jo
dec
and
dec
adc
js
fidivl
daa
pop
ret
xor
mov
movsb
fwait
sub
bound
daa
mov
shll
adc
hlt
and
cmp
cwtl
shlb
mov
imull
pop
imul
mov
data16
xchg
outsb
inc
popl
lods
add
in
fdivl
js
leave
mov
mov
or
icebp
mov
stc
cmp
xorb
sub
mov
jnp
lahf
jo
fadds
repnz
inc
pmaxsw
mov
lret
xchg
mov
jl
xchg
daa
xchg
in
jb
cmp
and
or
cmp
sub
cld
push
scas
mov
mov
mov
jl
sub
lods
subb
popa
jno
shll
movsl
mov
shr
inc
rorb
mov
int
fisubrs
daa
test
repz
fcmovnbe
adc
cmp
fstp
sahf
imull
add
adc
inc
mov
sbb
mov
bound
ret
xchg
pop
xchg
cmp
push
sub
or
gs
cld
inc
xchg
mov
sbb
call
mov
in
push
in
xbegin
mov
cmp
ret
mov
adc
jge
in
int
stc
fidivl
mov
addr16
adc
stc
icebp
dec
shrb
rcrb
repnz
jecxz
xchg
ffreep
pop
mov
cs
lods
xchg
xchg
int
gs
outsl
gs
movsb
fs
js
push
cli
jle
inc
stos
imul
pushf
mov
sbb
sbb
jb
mov
cmpsb
lods
fnstcw
dec
mov
rorl
mov
clc
xor
mov
cmp
jb
sub
shl
cmp
cld
roll
push
xor
and
hlt
sbb
in
jb
neg
in
pop
jecxz
outsl
fcoms
int
mov
mov
pop
cmp
and
adc
dec
sub
enter
and
divb
or
cld
cld
add
stos
add
mov
shrd
mov
and
or
pop
mov
xchg
sub
negb
add
and
pushf
repnz
or
push
ljmp
sbb
negb
mov
out
and
xchg
and
mov
insl
stos
xor
sub
mov
es
sarl
jl
lock
cmp
aaa
and
and
lcall
xchg
insl
and
aaa
repnz
mov
insl
outsl
push
or
xlat
sub
insb
jne
pop
jp
fbld
leave
imul
hlt
xor
test
faddl
aam
and
push
out
je
mov
test
mov
and
clc
cmp
sbb
adc
cmp
dec
cmp
inc
ficoml
outsl
pop
xor
cmp
lcall
lods
or
jmp
fcoml
pop
das
aam
in
imull
jecxz
clc
das
es
sbb
mov
sbbb
sbb
inc
shlb
std
stos
push
jno
sti
subl
push
push
lods
and
and
popf
test
les
cwtl
data16
jne
mov
aam
cltd
pop
mov
push
bound
add
imul
movl
adc
inc
jl
loop
adc
out
push
add
xor
cmpsl
dec
push
sub
push
movsb
jne
psrad
cmp
cmp
pop
jae
orb
xchg
lods
je
daa
inc
or
or
adc
xor
mov
lahf
hlt
addr16
and
pop
shlb
mull
cmpsl
pop
outsl
add
test
dec
pop
xchg
add
rorb
xor
dec
mov
outsb
adc
jns
dec
dec
jae
mov
mov
cmc
ret
decl
sub
mov
shlb
arpl
mov
cltd
sarb
jge
jb
cltd
add
mov
adc
xor
xchg
aaa
jmp
dec
gs
std
pop
cs
push
dec
mov
and
xor
int
ja
adc
imul
mov
lret
movsl
jnp
movsb
add
stos
sbb
cmp
sub
idiv
xchg
inc
subl
xchg
enter
dec
mov
packssdw
add
mov
sub
sub
or
xor
inc
negb
xchg
scas
orb
mov
outsl
sub
test
and
into
pop
adc
loopne
js
pop
arpl
nop
dec
and
fstpt
stos
arpl
enter
dec
orl
and
cld
xor
movsl
in
ror
xlat
add
sbb
sub
clc
fdivrl
cmp
xchg
aad
rcll
inc
jle
jo
aas
addr16
stos
lret
mov
in
pop
jg
out
sbb
push
mov
dec
and
and
sub
jb
xlat
inc
mov
out
es
cmp
inc
cmp
push
sbb
nopl
push
pop
in
mov
hlt
cmpsl
mov
arpl
jp
bswap
mov
jae
int3
sarb
das
cwtl
in
add
sarl
inc
je
cld
add
add
daa
xchg
out
pop
je
sbb
push
dec
rcrl
mov
mov
ja
mov
cmp
pop
adc
bt
xorb
ret
push
shl
xchg
xlat
cld
xor
mov
sub
mov
sahf
loop
sbb
jno
pop
aam
aaa
insl
ja
mov
jae
cli
jno
sub
sbb
jnp
pop
mov
jge
and
push
stc
aas
dec
xor
data16
mov
ret
out
out
mov
out
add
enter
pop
rclb
hlt
movsl
mov
movsb
test
lods
xlat
ss
sub
adc
inc
mov
mov
into
imul
gs
je
push
push
jo
and
xchg
popl
mov
dec
dec
inc
in
notb
jne
outsb
ficoml
jnp
imul
jns
icebp
das
pop
cltd
jns
xchg
lods
inc
inc
je
test
stos
mov
cmp
dec
ret
data16
sub
ret
stc
int3
cmp
rcrl
int
cmpsl
dec
outsl
and
movsb
lret
xorl
mov
loope
jne
cmp
mov
or
fimuls
sbb
xchg
movsl
xchg
jg
cld
fdivrs
fdivr
and
xor
fidivrl
aad
divb
ljmp
fwait
jbe,pn
and
iret
sub
jecxz
aaa
lds
mov
int
shll
les
scas
or
or
aad
cmc
push
sar
scas
decb
ljmp
add
mov
mov
lahf
pusha
lods
inc
cmp
out
push
push
and
leave
popf
pop
sbb
jb
mov
jmp
rol
mov
icebp
aas
pop
scas
mov
shlb
jge
sub
xor
mov
mov
xchg
mov
sbb
or
dec
lock
pop
mov
ds
cs
xchg
xor
dec
pop
lea
icebp
mov
das
and
enter
loop
ss
or
in
cmpl
int3
jo
pushf
and
jb
aam
fsubp
cmp
out
jo
mov
aad
xchg
jmp
fsubrs
fsts
sbbl
inc
xchg
lea
and
ret
mov
xchg
stos
xrelease
adc
and
movsl
add
pushf
push
sbb
cmp
pop
or
adcb
lods
mov
and
rcr
dec
inc
test
cmpsb
xor
stc
sbb
push
pop
fsts
jge
mov
jbe
cmp
cmp
sbb
fwait
mov
and
addl
cmp
adc
data16
xchg
mov
mov
fldl
jns
and
es
ss
fwait
dec
movsl
and
scas
mov
into
in
mov
cmp
addr16
pop
mov
imul
jnp
or
add
sbb
inc
fmul
inc
cmpsl
outsb
lds
fs
scas
pushf
js
xor
bound
insl
and
imul
shl
jb
andb
sub
std
push
and
in
insb
inc
lea
out
aad
or
adc
icebp
xchg
mov
lods
in
or
roll
push
jecxz
decl
inc
outsb
mov
inc
mov
add
fwait
inc
push
push
or
jbe
push
filds
int3
into
movsb
rcrl
test
jnp
inc
dec
push
imul
mov
inc
and
mov
cwtl
clc
lea
fnsave
scas
sahf
stos
lea
inc
addr16
sub
mov
add
fdivr
cmp
push
movsb
pop
fsubrs
xorb
aas
sub
cmp
jbe
push
scas
negb
xchg
pop
sarl
and
pop
xbegin
inc
testl
xor
decb
jae
rcr
jmp
scas
push
or
scas
icebp
das
cmpsb
mov
push
mov
ss
ljmp
pop
dec
sub
push
stos
xor
inc
add
jmp
das
sbb
add
iret
jp
ds
jp
cmp
jnp
dec
sub
testl
iret
cmp
cmp
mov
hlt
mov
add
push
or
pop
negl
rcr
mov
sub
inc
leave
and
mulb
inc
loopne
push
ljmp
in
cmpsb
into
inc
dec
lret
lock
mov
fisttpll
cmp
mov
sub
xor
sub
imul
and
sbb
sub
inc
outsb
adcl
xchg
sub
jns
enter
lret
pop
fstl
sub
call
lods
scas
cmp
fsubrs
mov
shlb
mov
int3
inc
add
data16
sub
test
mov
push
mov
mov
cmp
negl
mov
push
inc
sub
repz
pop
lock
cwtl
cmp
adc
iret
jecxz
sbb
adc
or
iret
mov
scas
and
xchg
cmp
ret
lods
mov
aad
jl
dec
fs
sahf
repnz
mov
stc
xor
mov
push
std
cltd
add
daa
js
ljmp
add
dec
jne
xchg
cmp
adc
fwait
push
jp
or
or
add
jnp
jbe
mov
xchg
or
and
fnstsw
call
sbb
mov
dec
cmp
test
sti
or
clc
dec
pop
in
inc
jo
sub
add
xchg
lods
xchg
inc
dec
int
loop
jb
jbe
sti
inc
jp
cmc
push
xchg
and
andl
bound
xchg
pop
mov
jb
flds
mov
dec
push
lret
jno
bound
scas
push
in
out
loop
or
xchg
mov
pop
fisttpll
fsubrl
mov
leave
lods
and
scas
xor
jb
dec
notb
pop
adc
jae
out
jmp
mov
add
push
pop
lret
fldl
std
sub
add
mul
enter
bound
inc
pop
das
repnz
addr16
push
sub
xchg
cmp
sbb
cli
adc
pop
pop
xor
sbb
and
jle
imul
add
cmp
aam
or
mov
dec
aam
xor
icebp
popa
movsb
inc
or
dec
jp
mov
xchg
arpl
stc
adc
sub
cld
insl
sahf
aas
stc
jle
fsubl
add
ljmp
jl
mov
mov
push
dec
ljmp
lds
fcoml
inc
sarb
mov
loop
push
and
xchg
mov
fwait
mov
testb
outsb
jp
push
movsl
dec
sahf
mov
rcr
mov
mov
test
jo
mov
pop
test
jo
rcrl
sbb
dec
cmc
mov
xor
xchg
add
pop
cmp
xchg
jno
shr
mov
mov
sbb
leave
shrl
jmp
sahf
insb
or
outsl
ds
aad
stos
rclb
js
fdivrs
sbb
jle
stos
mov
dec
fbld
push
xor
mov
xchg
lods
jae
adc
adc
clc
out
push
push
xchg
xlat
mov
imul
fisttpll
fstps
lret
jb
or
lret
lds
xchg
lret
jmp
pop
test
mov
dec
mov
cltd
sbb
or
rcll
outsb
dec
movsl
dec
sbb
sbb
push
call
and
lock
fidivrs
lcall
fld
scas
or
mov
lods
imul
mov
test
aam
loope
enter
sbb
gs
nop
hlt
jbe
stc
rcrb
scas
popa
cmpsb
hlt
test
int
addr16
fisttps
adc
jbe
fwait
ja
lea
ficoml
dec
dec
push
lahf
cs
push
clc
mov
push
mov
push
cmp
cwtl
das
pop
test
ror
xchg
shl
xchg
dec
movsb
mov
jmp
xor
mov
pop
or
push
cmpsl
fstpl
data16
mov
dec
gs
out
inc
push
je
xchg
jbe
stc
lods
loope
sub
loope
push
fwait
mov
adc
sub
mov
pop
gs
cmp
inc
out
popl
and
lods
scas
jno
jnp
into
mov
push
jg
lock
push
fwait
push
shlb
sbb
std
add
sbb
repnz
dec
loope
aad
test
push
xor
fcom
jecxz
lods
gs
arpl
sub
xchg
add
pop
mov
shrb
or
and
jp
xor
mov
imul
ljmp
adc
adc
sbb
xchg
mov
movsb
fs
add
test
xchg
rolb
ret
adc
push
into
hlt
and
add
roll
into
sbb
ljmp
rcr
mov
cltd
cld
imul
movsl
out
test
pop
ret
push
lret
ret
das
or
data16
imul
pop
insl
cmp
and
sub
xor
das
rcl
in
jae
stos
sub
pusha
pop
push
mov
lea
aad
cltd
addr16
push
shll
push
out
mov
mov
nop
mov
test
cmp
in
and
add
push
pop
pop
jp
mov
mov
rorl
movsb
sbb
or
cmpsl
repz
mov
jecxz
cli
push
cltd
mov
and
sub
iret
cld
add
push
js
out
push
fwait
xor
inc
pop
inc
aaa
sbb
add
out
das
mov
push
jmp
lcall
inc
adc
push
std
inc
mov
dec
fdivrs
pushf
hlt
push
sbb
jl
loopne
mov
push
or
mov
adc
add
fistpll
add
or
and
mov
cmp
hlt
aam
mov
loopne
cmpsb
ljmp
inc
cltd
pop
push
int3
clc
mov
pop
aam
les
or
jecxz
outsb
pushf
sbb
pop
test
jecxz
jmp
mov
add
inc
loope
pop
mov
subps
imul
test
and
and
sbb
sub
adc
iret
idivl
push
rolb
jo
pop
ror
xchg
push
orl
outsb
cmp
sub
xor
mov
mov
out
adc
and
out
lret
xchg
sbb
mov
data16
int
jnp
sub
jp
fnstenv
dec
aad
mov
dec
cmp
andb
jg
mull
std
int
fs
cmpsb
mov
inc
jne
sti
cli
stc
push
mov
out
scas
leave
pop
push
rcr
mov
rolb
mov
adc
or
cmp
jbe
push
insb
or
pushf
mov
call
fstps
dec
jno
sub
jmp
inc
add
xchg
mov
inc
outsb
ret
inc
out
mov
xchg
push
sbb
xchg
cmp
ret
mov
rcll
lret
pop
mov
mov
mov
xchg
popa
mov
icebp
aad
cmp
into
lock
rolb
cmpsb
or
mov
mov
fwait
sbb
and
dec
fstpl
mov
or
nop
add
push
cmpsb
cwtl
lock
pop
jae
sub
repnz
imul
mov
inc
mov
xor
push
bound
scas
fmull
ja
rolb
repnz
sub
pop
jg
stos
jecxz
leave
push
leave
data16
test
sub
jmp
test
sbb
outsb
mov
inc
pop
aas
jae
lods
cmp
ljmp
pop
mov
mov
lea
imul
das
pop
cwtl
iret
test
jae
ds
std
ds
shll
cld
sub
outsl
push
mov
pop
jmp
xor
roll
test
push
arpl
out
inc
push
and
ds
or
pop
dec
xchg
push
in
lcall
cmp
and
fstpl
xorb
adcb
xchg
cld
sub
out
or
xor
mov
arpl
and
mov
xchg
adc
test
add
xchg
movsl
inc
fdivrl
ror
sub
jo
das
push
mov
dec
es
fcomps
mov
jmp
nop
rol
sti
loopne
popf
jae
mov
sbbl
mov
pop
pop
sub
dec
aam
ret
fdivr
dec
xor
and
int3
jno
mov
int3
cli
sarb
cmp
adc
mov
cmp
pop
les
shr
push
pop
jne
mov
sbb
jbe
adc
xor
adc
push
sub
fsubrs
out
push
push
sub
jmp
subl
push
cmpsl
clc
rcll
sbb
pop
xchg
std
mov
sbb
daa
jns
mov
je
lret
insb
xchg
iret
dec
ret
jl
arpl
int
ds
popf
outsl
jnp
mov
aas
push
push
mull
movsb
loop
ss
push
inc
test
je
aad
push
xchg
incl
cmpsb
adc
ficompl
add
popf
add
pusha
lods
or
xor
push
aas
push
gs
mov
and
mov
cmp
call
cs
and
outsb
cmp
stc
xchg
push
xchg
repnz
adc
loop
cmp
ss
sub
gs
loop
int
out
fbld
inc
inc
inc
or
in
jp
addr16
andl
divb
shrl
in
mov
js
imulb
xor
or
repnz
lods
push
loope
icebp
adc
cmpb
and
mov
mov
adc
stos
call
pop
loope
jnp
add
rclb
inc
mov
fwait
shlb
lret
test
adc
and
lea
inc
add
inc
mov
shlb
adc
jns
jne
hlt
stos
loop
ds
or
stc
pop
push
shrl
mov
jne
ss
cmp
jecxz
xchg
imul
jmp
ret
cmp
or
mov
pop
cmp
cs
mov
mov
gs
xor
pushf
or
and
mov
adc
dec
repz
and
cmp
adc
inc
xchg
sbb
push
sub
imul
dec
popl
rcrb
mov
lods
xor
test
lock
adc
push
testb
sub
push
mov
mov
push
repz
jbe
xor
es
aas
mov
jo
leave
mov
rorl
jmp
xchg
mov
out
hlt
xchg
test
lods
mov
pop
imul
mov
pop
adc
dec
mov
shlb
xor
out
cmp
lahf
xchg
xor
xchg
loope
loope
mov
and
mov
lret
jne
jbe
jns
pop
loopne
nop
inc
push
xchg
repnz
popf
cmp
fwait
pop
fidivrs
stos
lea
push
mov
scas
loopne
mov
mov
and
fstpl
mov
pop
out
inc
jmp
inc
fsts
pop
daa
pop
xchg
sub
sarl
fcoml
gs
jge
rorl
mov
mov
aam
inc
push
cmpl
jmp
pop
mov
jecxz
pop
repz
jle
mov
mov
int3
cmp
ret
loope
or
xor
ljmp
pop
mov
adc
mul
movsl
ss
cmpsb
movsl
sub
ja
pop
xchg
add
jecxz
js
lea
sub
jae
insl
cwtl
in
jns
adc
jns
pop
push
push
mov
inc
insb
in
mov
data16
shlb
test
enter
je
push
cmpsb
pop
xor
ja
cmp
dec
fldl
xor
hlt
mov
ret
pushf
out
sar
push
dec
ss
test
push
and
push
dec
in
add
jae
jl
hlt
outsb
es
dec
and
repnz
push
mov
or
mov
ds
enter
cmpsb
inc
les
cwtl
pop
or
and
and
testb
clc
mov
stc
lahf
jae
in
cmp
push
inc
fcompl
sub
jns
dec
mov
lods
push
and
arpl
test
mov
jno
jecxz
loop
or
scas
lea
dec
mov
and
jge
pop
lret
out
movsl
xchg
adc
ljmp
or
jb
loope
inc
dec
push
dec
mov
lcall
aas
mov
push
insb
push
enter
stos
cli
mov
inc
repnz
inc
rclb
xorl
jg
add
mov
lods
hlt
daa
pop
mov
inc
jmp
sbb
in
aam
push
push
mov
mov
cmpsb
aas
call
jle
mov
popa
mov
subl
dec
jbe
sahf
inc
outsl
aad
or
cwtl
xlat
and
sbbb
mov
loope
cmpsb
mov
loop
fadds
sub
into
mov
fsubl
icebp
jnp
lods
cmp
xchg
cmp
push
cmpsb
out
mov
inc
out
push
mov
fnsave
test
in
sbbb
pop
adc
mov
subl
mov
mov
cwtl
lods
add
and
pop
jne
mov
mov
loopne
sbbl
lea
bound
adc
add
aad
mov
xchg
out
fsubs
icebp
leave
cmp
pop
jo
into
or
jg
mov
in
sub
cltd
fs
inc
or
test
sub
mov
sbb
stc
jle
jp
mov
cmp
sub
push
roll
add
gs
and
cwtl
push
jne
pop
or
js
rorl
gs
and
insl
pop
cmp
xchg
iret
sbb
adc
das
sub
hlt
dec
orb
imul
out
popf
insb
test
sbb
scas
and
dec
pop
mov
rcll
sub
add
out
jo
xchg
or
mov
mov
shl
sbbb
stos
push
and
jge
popf
push
fistpll
sahf
out
lds
lret
inc
mov
pushf
mov
test
mov
sbb
scas
jo
fidivrs
dec
xor
icebp
cwtl
adc
adc
sbb
mov
and
pop
aaa
sub
loop
mov
push
je
mov
fmull
jmp
adc
adc
jb
xor
dec
aad
add
and
mov
das
add
inc
mov
int3
sub
fcoms
cs
and
mov
into
data16
pop
js
dec
xor
xchg
push
sarb
stc
and
and
xor
push
loope
mov
sbb
xchg
lods
cmp
cmp
fnstcw
das
fnsave
idivb
addl
leave
lods
arpl
sarl
test
mov
sub
dec
jo
in
pop
inc
js
push
pop
pusha
adc
jmp
sti
xor
jg
pop
jmp
nop
fimuls
adc
sbb
adc
loopw
mov
jmp
or
cli
iret
rcr
or
inc
ljmp
icebp
mov
adc
xor
arpl
add
roll
in
lods
xchg
push
mov
outsl
and
xchg
out
sub
jle
cwtl
dec
and
shll
sub
rorb
jbe
aam
push
call
inc
addr16
mov
pop
leave
test
jle
fwait
xchg
mov
xchg
jge
push
loop
dec
testb
ficompl
jecxz
push
mov
ret
jnp
test
pop
ret
xacquire
shlb
roll
adcb
or
les
and
cwtl
xchg
xlat
arpl
cld
ja
xor
aad
mov
fcmovnbe
mov
xchg
pusha
shll
jmp
dec
mov
sbb
dec
jae
lcall
adc
mov
fidivl
subl
and
mov
sti
add
mov
pop
pop
rcrb
lret
add
call
pop
mov
je
push
adc
push
add
inc
lds
repz
add
sub
test
call
into
ja
xor
pop
mov
sbb
int3
movsl
sub
xchg
jno
dec
mov
shll
test
in
loope
jae
rclb
pop
imul
dec
loop
jp
bound
fcoml
ja
jp
imul
cmp
sub
iret
bound
andl
or
jl
fiadds
push
fwait
push
test
and
mov
jae
rorl
imul
or
mov
mov
push
sbb
addr16
out
sub
dec
lds
sub
int3
div
pop
sbb
or
mov
add
push
in
rol
cmovg
or
in
popa
ds
push
xor
stos
hlt
sahf
int
jl
cmp
shr
sbb
add
sbb
jae
jg
xchg
cmpsl
idivb
pop
inc
sub
sub
mov
push
insl
std
jg
push
adc
add
int
lret
mov
fisubs
dec
mov
adc
orl
add
dec
in
and
mov
in
jbe
sub
sbb
or
negl
fistl
or
dec
add
pushf
push
adc
sahf
add
cmp
icebp
cmpsl
aad
pop
mull
cli
shrb
gs
sti
cmpsl
push
pop
ja
adc
and
dec
ljmp
scas
addr16
std
and
jae
rcl
mov
sbb
je
adc
xorl
popa
popa
lahf
sub
push
sbb
gs
fildl
repz
sub
movsl
mov
icebp
out
orl
pop
mov
jg
cmpsb
jl
fsubl
sub
mov
out
lock
cmpsl
pusha
fs
and
data16
or
dec
lahf
xlat
icebp
jp
adc
fists
xor
mov
xlat
ds
mov
aad
cld
or
out
mov
fstpt
mov
rcl
add
sub
sub
dec
nop
popf
addr16
mov
jmp
mov
in
sub
jl
or
arpl
xchg
int3
je
cltd
jbe
and
and
loop
inc
cwtl
shll
out
shlb
cmpsl
push
scas
xlat
mov
push
cmp
adc
pop
movsl
jnp
lcall
push
pop
sti
in
pop
jl
lds
adc
sub
cmp
jge
and
test
adc
jg
fbstp
dec
imul
fcmove
setne
jmp
mov
fstpt
cmp
push
shlb
push
mov
jae
cmp
bound
jnp
test
dec
daa
jp
test
mov
cmp
sarb
stc
js
cld
int
fdivrs
notb
and
xor
jno
cmp
stc
pop
pop
repnz
lahf
insb
mov
fs
cmc
fisubl
jecxz
call
popa
arpl
pop
insl
pop
in
cmc
pop
in
pop
mov
mov
dec
icebp
inc
inc
mov
sbb
and
add
decl
faddl
inc
or
cmp
push
stc
icebp
inc
mov
sarb
xchg
mov
out
cmp
mov
add
mov
jns
out
inc
or
dec
pushf
mov
ret
xor
xchg
scas
pop
cli
fsubs
cwtl
ljmp
or
inc
icebp
in
int3
jo
scas
jae
rcll
fs
cli
in
mov
out
cwtl
stc
push
mov
mov
mov
fs
sti
inc
das
lods
dec
lock
mov
mov
daa
test
mov
sbb
dec
jmp
std
repnz
mov
mov
into
sbb
rcll
fsts
adc
int
mov
and
leave
pop
jb
xor
stos
sarb
das
int3
fs
push
fstl
lcall
jle
mov
sbb
arpl
scas
imul
jae
lock
stos
outsl
subb
cmp
cmp
jb
mov
bound
sbb
push
orps
aaa
mov
into
ret
repz
dec
jg
push
add
mov
mov
cmpsb
dec
ds
faddl
ret
mov
xorb
js
test
in
jne
dec
ret
lds
test
mov
sub
jns
data16
rcr
loopne
sbb
mov
dec
dec
or
dec
or
std
inc
faddl
mov
and
ret
mov
fucomp
inc
fmuls
dec
pop
test
dec
xchg
les
arpl
gs
pusha
dec
mov
pop
add
dec
sahf
sbb
ja
mov
adc
test
std
test
data16
dec
stos
sub
scas
inc
lods
popa
push
push
fdivs
and
cmove
into
sahf
inc
push
shl
fbld
stos
test
or
pop
xor
lds
lcall
les
out
add
sbb
jge
cli
lcall
mov
outsl
sub
ja
push
mov
cwtl
inc
xor
mov
test
in
ret
ds
scas
test
popa
dec
inc
popa
jne
jo
jl
fdivl
pop
in
lds
dec
inc
and
mov
cwtl
lcall
dec
enter
xchg
jle
inc
or
adc
dec
fwait
jnp
mov
pop
mov
jmp
xchg
sar
fidivrl
dec
lods
in
sarl
push
jno
sub
outsl
aam
mov
and
fwait
mov
in
pusha
xor
bound
and
es
add
and
jg
jl
pcmpeqb
data16
push
and
cmp
sub
push
xchg
sbb
xchg
dec
or
stc
lock
add
jo
mov
adc
inc
cli
mov
mov
daa
iret
fdivs
mov
pop
sub
cmpsb
and
enter
inc
shlb
arpl
xchg
jmp
fs
aam
ja
or
push
arpl
and
adc
repz
sti
ret
test
rcr
pop
stos
fidivrs
add
sub
jo
std
mov
cltd
into
dec
pushf
mov
into
push
fsincos
nop
orb
sub
sub
out
mov
mov
faddl
sarb
das
fdivr
mov
scas
xchg
jns
out
out
xchg
xor
cmp
sarl
aam
or
sbb
xchg
loope
sub
xor
mov
gs
outsb
mov
jmp
mov
xlat
test
push
sahf
fs
clc
or
in
adc
sub
inc
scas
xchg
std
aad
ret
addr16
inc
inc
mov
push
and
mov
scas
repz
xor
jge
pop
pop
pop
inc
adc
fbld
subl
rol
adc
xor
xchg
das
xchg
dec
xchg
add
mov
push
test
sbb
mov
mov
mov
in
scas
cmp
mov
rol
decl
test
setae
shrb
insb
pop
mov
jg
lods
and
dec
mov
xlat
psubd
xchg
mov
jno
and
data16
mov
mulb
enter
data16
pop
pusha
ret
jo
shl
mov
jns
dec
sub
xor
mov
add
inc
sbbl
jp
xor
mov
cmp
lods
add
stc
aam
push
sbb
aaa
ror
jl
push
cmp
xchg
mov
xor
xor
jne
orl
or
in
and
adc
shr
popa
scas
pop
mov
fwait
and
mov
fldcw
xchg
inc
xchg
shrb
leave
mov
jbe
stos
ret
jae
mov
inc
sub
mov
cmp
mov
aam
mov
aad
mov
cltd
xor
jnp
cmc
out
sub
xchg
add
fwait
jne
loopne
in
nop
pop
notb
push
into
or
sbb
pushf
stos
xorb
lahf
pop
sub
push
adc
je
subb
inc
dec
pop
lea
pop
into
int3
rcrl
xor
cmp
loopne
push
inc
sub
jno
mov
es
aaa
sub
xchg
mov
or
cltd
aam
enter
fsubs
cmpsb
fcomip
pop
xor
pop
flds
dec
fisttps
add
cli
cmpsb
push
stc
lea
pop
inc
xor
add
scas
sbb
loopne
popf
adc
mov
pop
sbb
inc
pop
add
notb
jno
xchg
je
mov
jecxz
jle
js
sub
dec
movsl
iret
popf
jno
add
push
mov
and
loop
insb
mov
fistl
push
dec
repz
mov
setp
rolb
pop
loop
cwtl
cmp
sbb
push
jns
mov
dec
jmp
imul
add
rorl
sbb
xor
data16
in
rorl
mov
into
loope
rcll
sbb
add
mov
sub
stc
jmp
push
pop
or
mov
mov
jo
iret
and
outsl
rol
push
inc
stos
and
mov
push
fidivrl
stos
jnp
cmp
push
pop
cltd
mov
aaa
cmp
ja
je
ljmp
data16
out
inc
ret
in
out
in
dec
xor
push
and
adc
dec
cmc
fcoml
dec
fcoms
lea
jmp
mov
inc
xlat
sahf
mov
out
xchg
pop
imul
je
sbb
ficomps
push
sbb
push
add
std
in
cld
mov
sarb
jmp
cmp
imul
data16
out
jbe
jecxz
je
loope
pusha
movsb
cmc
xchg
rcl
sarb
out
cmc
jno
mov
call
cmp
fmull
cmc
pop
je
mov
ret
insl
and
add
jae
ja
jno
sahf
iret
enter
add
sub
popf
mov
push
in
in
sahf
adc
pop
test
shlb
sahf
cmc
cmp
push
add
mov
dec
sbb
adc
sub
pop
in
rorb
jecxz
fmuls
outsb
push
jecxz
sub
lea
xlat
or
dec
mov
gs
dec
je
dec
lea
mov
and
shlb
xor
xor
test
cmpsl
jae
jl
inc
or
scas
int3
scas
std
xchg
in
cmp
push
mov
cltd
jbe
test
jno
adc
scas
stc
or
pause
incb
fcmovnu
jnp
and
ljmp
push
iret
adc
or
inc
orl
ljmp
in
aad
es
les
inc
inc
xor
popa
sbb
stos
cltd
fstl
sarl
sub
jmp
pop
cmp
std
dec
pop
dec
jg
ficoml
dec
stos
ret
add
ret
xchg
daa
icebp
xchg
mov
inc
test
inc
lahf
inc
cmp
mov
dec
pop
cmp
sub
add
xor
jb
sbb
adc
cmpsb
add
mov
xor
dec
mov
cltd
shrl
in
dec
loopne
mov
cmp
mov
testb
push
jg
xchg
aas
rcrw
incb
sub
mov
push
popa
sbb
inc
or
adc
aaa
pop
sbb
mov
mov
sbb
jo
into
add
cltd
insb
les
dec
adcb
push
mov
sub
dec
ljmp
pushf
mov
dec
lcall
inc
je
or
sbbl
in
push
mov
icebp
dec
loope
scas
mov
mov
es
jmp
fnstenv
mov
adc
xchg
add
and
sahf
insl
int3
in
imul
iret
lahf
jns
bound
in
paddusw
shl
inc
adc
cmp
lock
or
push
add
cmp
and
inc
pop
push
dec
dec
les
push
xchg
das
in
addr16
xchg
lret
sbb
sahf
push
nop
pop
aas
jp
adc
out
push
or
jecxz
out
fs
test
nop
popf
pop
aaa
push
xorb
out
jle
push
jmp
mov
int
or
idiv
jns
cmpb
pop
push
pushf
push
xor
loope
negb
push
add
mov
stos
pop
xchg
fdivl
lahf
cmp
mov
aaa
xchg
or
cs
inc
add
sbb
jo
inc
enter
or
inc
xchg
sub
std
inc
and
inc
ret
push
fsts
pop
js
mov
mov
push
xchg
lods
cltd
mov
mov
cli
cmp
lea
push
mov
xchg
push
mov
aaa
pusha
cmpps
cltd
mov
enter
inc
xor
pusha
fisubl
pop
cwtl
inc
cmpsl
mov
or
dec
mov
add
hlt
sub
pop
stos
mov
mov
sarl
mov
push
dec
mov
lcall
iret
scas
push
and
fildl
adc
sbb
mov
inc
and
jno
mov
js
repnz
movsb
arpl
ljmp
inc
ss
push
popa
jno
xchg
pop
stos
sub
outsb
sbbl
imul
xchg
ds
pop
mov
in
jnp
push
sub
jb
xor
pop
mov
bound
aaa
out
cmp
jnp
jno
cltd
mov
decb
daa
in
mov
mov
fs
fldt
cmpsb
dec
sbb
out
or
mov
scas
out
add
push
pop
loop
adc
scas
adc
popa
inc
inc
ret
xchg
inc
push
mov
add
xrelease
and
inc
mov
cld
lret
cmp
xor
pop
es
mov
push
hlt
adc
fidivl
jb
dec
mov
jge
vmread
mov
xchg
cmp
stc
pop
jbe
sub
mov
shlb
je
adc
lcall
leave
or
mov
fsub
gs
test
cli
pop
lcall
fisubs
push
dec
subl
ss
pop
loope
fcmovnu
lahf
mov
xchg
insb
mov
or
int3
adc
and
leave
fists
adcb
cmp
cwtl
test
addr16
test
cli
mov
or
fs
sub
movsb
mov
fistl
xchg
mov
fidivrs
dec
push
div
push
xchg
xchg
push
pop
fxch
push
fs
dec
aam
out
dec
ficompl
sub
daa
xchg
sub
xor
rcll
push
cmpl
loop
add
jecxz
faddl
daa
mov
jns
or
scas
lret
inc
aam
add
arpl
push
sbb
aas
jns
push
xchg
push
pop
mov
ret
out
les
jno
mov
cmp
jne
mov
mov
ret
test
les
fs
lahf
add
or
mov
pop
cmp
cmp
cmpsb
jp
in
lea
mov
decl
enter
out
dec
aaa
addb
mov
sub
sar
push
inc
jle
fwait
lcall
sub
call
jl
jne
lret
flds
xchg
in
or
leave
mov
or
fcmovnbe
in
or
sti
adc
sbb
unpcklps
mov
push
sbb
inc
repnz
stos
repz
mov
mov
aad
lcall
adc
paddd
push
jg
faddl
cli
add
test
inc
xchg
mov
mov
cld
mov
cmp
inc
notb
cwtl
dec
xchg
lcall
pop
out
out
jo
repz
loop
pop
inc
fildll
adc
push
ljmp
jg
inc
js
jle
pshufw
ss
cwtl
in
test
iret
testb
push
xchg
dec
cmc
lret
jmp
mov
sub
xchg
and
pop
in
and
adc
mov
add
xor
push
popf
call
in
out
mov
xor
xchg
pop
std
in
xchg
xchg
outsb
lods
pop
pushf
jno
mov
ja
push
addr16
aam
cwtl
and
fcoms
lods
scas
lea
addl
pop
arpl
cmpsl
repz
mov
inc
inc
mov
mov
movsl
daa
fwait
adc
xchg
push
inc
lret
inc
xchg
dec
in
ja
pop
jae
aad
and
pop
or
sbb
pop
cmpsb
notb
dec
pop
aam
jne
cmp
jg
lret
fs
loop
outsl
lea
sti
fadds
call
pop
pop
xchg
mov
movsl
mov
movsb
jo
inc
enter
xor
sub
in
add
fadds
fucom
pop
dec
in
ret
rol
push
into
aad
ss
jbe
orb
fldt
mov
sbb
test
pop
mov
outsb
jle
jecxz
sbb
pushf
jge
jle
mov
pop
add
sub
jbe
jp
in
jecxz
fmuls
js
in
lods
inc
cs
lock
out
mov
in
xor
pop
fdivs
mov
add
popa
int
push
loop
nop
adc
mov
jg
decb
adc
fisttps
sub
aad
lods
jge
addl
lds
push
data16
and
out
jle
mov
adc
orb
or
cmp
mov
dec
jmp
mov
mov
loop
and
push
ss
mov
movsl
cwtl
leave
cli
fisttpll
popaw
add
mov
test
fisttps
xor
test
mov
jl
cmpsl
ficomps
and
out
xor
xchg
xorl
sub
repz
pop
add
mov
lret
hlt
cmpl
mov
orb
pop
xor
call
sub
ret
sbb
pop
gs
jne
fidivrl
gs
dec
xor
test
or
push
sub
pop
jb
and
push
mov
lds
jl
loopne
stos
mov
xchg
nop
sbb
and
dec
sbb
sub
jns
sbb
push
movsl
dec
cmp
jmp
adc
pop
addl
cltd
push
mov
in
test
jb
xchg
fsub
or
pop
pop
aas
rcrl
cld
jp
jns
pop
divl
mov
mov
arpl
cld
jl
mov
loopne
cld
or
mov
adcb
cmp
sub
sub
mov
cltd
int3
pop
int
push
add
cmc
cltd
gs
pop
cmp
andb
cltd
jecxz
es
push
cmp
or
fs
jl
cli
cli
mov
aaa
xchg
push
xchg
repnz
js
insl
dec
push
and
xchg
fxch
mov
js
aam
scas
push
xchg
pop
scas
pop
or
cmc
sub
unpcklps
sbb
nop
mov
dec
repnz
divb
jg
pop
test
cmp
add
sbb
cmp
rcr
fdivs
push
mov
jb
or
mov
xchg
pop
xor
and
rcrl
xchg
inc
xchg
out
sub
pop
push
and
mov
jle
or
cmp
lret
aaa
pop
xchg
adcb
cwtl
xchg
iret
shl
xor
int3
adc
movsl
cltd
jg
dec
sub
jb
sti
pop
inc
and
xor
and
and
call
repnz
adc
gs
ret
in
xlat
gs
add
into
mov
sbb
test
repz
out
sbb
cmpsb
scas
mov
dec
int
mov
arpl
add
je
cltd
mov
clc
dec
sti
pop
mov
data16
mov
arpl
test
int3
mov
test
lods
add
shlb
pop
adc
pop
ret
sbb
inc
mov
rcrb
or
cmp
pop
in
inc
jo
xor
es
push
sub
lds
mov
mov
lahf
cmp
inc
aad
jle
test
out
inc
xchg
clc
jae
sub
pop
cmp
test
cmc
mov
mov
in
sub
out
loope
xlat
mov
addr16
jecxz
test
clc
in
out
xor
push
cs
testb
mov
dec
or
and
gs
sub
inc
pop
movsb
or
leave
inc
gs
sbbb
dec
jb
fistpl
mov
add
adc
int3
lret
hlt
sbb
neg
adc
loopne
shll
mov
pushf
push
cmp
pop
loope
mov
mov
jb
movsb
push
xchg
dec
lods
add
fs
pop
inc
rcrb
gs
das
cmpb
loop
xchg
adc
jmp
cltd
out
mov
pop
mov
add
loopne
inc
fisttpll
data16
insb
push
es
inc
xor
sub
test
scas
loope
dec
cltd
pop
in
cld
pop
leave
lods
add
leave
push
in
into
xor
rcrl
jnp
xor
movl
pop
mov
bound
push
xchg
in
xlat
pop
push
rol
adc
mov
sahf
pop
icebp
inc
pop
adc
mov
and
shl
adc
push
push
adc
subl
inc
cld
jbe
push
vmwrite
je
sub
add
mov
lds
pop
inc
inc
out
rcl
push
rorb
xchg
shll
push
dec
xlat
test
sbb
in
mov
popa
cli
addr16
fcmovnb
dec
into
mov
sbb
hlt
jnp
sar
xchg
jbe
scas
fdivl
into
mov
dec
xorb
shll
in
adc
mov
ret
fprem1
lcall
mov
adc
xchg
mov
inc
jge
mov
js
xchg
ret
and
jb
adc
xchg
cmp
xchg
push
out
or
pop
jg
add
cmp
int
pushf
bnd
pop
insb
das
dec
push
or
pop
push
adc
test
call
adc
out
test
sbb
or
and
mov
scas
cmp
int3
and
mov
in
dec
sti
or
push
push
in
nop
jns
xchg
push
bound
and
nop
call
daa
inc
push
inc
outsl
xchg
xor
shl
jecxz
adc
adc
jle
add
cmp
pop
repz
sbb
adc
pop
jmp
scas
notl
jge
jnp
push
ffree
insl
data16
mov
fidivrl
in
lds
fs
cmpsl
out
mov
int3
fwait
loopne
daa
or
or
mov
cs
pop
ja
shr
pop
jecxz
adc
sahf
inc
mov
dec
je
jo
fsts
repnz
popf
out
fmul
insl
enter
xor
inc
cmpsb
xchg
inc
jle
insl
mov
xor
mov
sahf
push
loop
shlb
ret
pop
call
adc
push
scas
xchg
lea
ds
js
pop
leave
aas
sub
sub
nop
addr16
xor
mov
hlt
imul
je
jo
cmpsl
jne
stos
scas
std
mull
mov
or
enter
sarl
jle
pop
dec
mov
xchg
repnz
scas
mov
mov
lahf
les
mov
cmp
fldl
imulb
stos
in
mov
adc
push
test
mov
imul
stc
insl
xor
and
cmp
sbb
stos
xchg
shll
ret
push
dec
adc
test
fincstp
in
mov
insl
andl
mov
xchg
xor
add
adc
mov
push
cmp
cmpsb
cs
jmp
std
push
and
adc
xchg
aaa
stos
int
xchg
xor
jne
jmp
pop
sub
push
pusha
mov
repnz
adc
loopne
mov
push
filds
in
cmc
lods
js
lds
aam
and
sbb
sub
sbb
insl
push
cld
int
stos
cmc
mov
sahf
rcrb
sbb
jmp
out
dec
enter
aad
lret
aaa
gs
mov
lods
add
add
pop
mov
add
imul
cmc
add
dec
pop
inc
or
mov
or
dec
mov
cmp
mov
cld
or
inc
dec
mov
imul
xor
mov
in
xchg
btcl
imul
and
mov
xchg
shlb
inc
mov
in
jp
aas
jb
mov
mov
mov
mov
sub
push
mov
and
sbb
imul
push
sbb
cmp
cwtl
and
fs
push
adc
stos
outsl
push
mov
inc
inc
rcl
mov
test
aas
push
mov
lret
es
cld
cmp
cmp
add
sub
test
mov
cltd
out
xchg
jne
movsb
inc
pop
xchg
test
fdivs
test
repz
add
inc
or
addl
fistpl
addr16
sti
pop
add
push
lret
mov
push
xchg
jle
dec
xor
sbb
iret
outsl
or
stc
test
daa
xchg
leave
mov
mov
and
pop
mov
lret
xor
add
mul
shl
mov
faddl
daa
sub
lods
hlt
jecxz
dec
inc
enter
ljmp
mov
inc
jno
std
aad
adc
adc
insl
paddd
subl
imul
sahf
cltd
cmc
adcb
test
loope
hlt
inc
lock
pop
aaa
clc
fimull
sub
sub
inc
or
cmp
pop
sbb
test
mov
addr16
cmp
sub
jno
mov
pop
iret
lcall
out
lcall
push
out
ljmp
bound
jg
lret
jbe
in
scas
pop
shll
push
or
punpcklbw
jne
sub
lret
xchg
addr16
adc
scas
xor
bound
test
psrlw
shlb
sti
mov
xchg
neg
movsb
jl
mov
jo
sti
repz
cmp
xchg
inc
aad
out
add
fsubrs
mov
hlt
or
lret
pop
lock
pop
adc
jmp
hlt
jbe
in
mov
in
sbb
clc
sbb
sti
nop
test
mov
fisttps
pop
popf
jne
add
pop
cmp
arpl
jae
cs
test
neg
sub
xchg
xor
xor
out
inc
and
or
cmc
and
loope
lock
lahf
adc
mov
rcll
mov
subl
pop
lods
pop
repz
jg
add
xlat
popf
mov
out
mov
add
xchg
xlat
sub
cmp
mov
mov
das
inc
fisubrs
push
jmp
out
sub
ljmp
jmp
fs
out
ss
push
and
das
hlt
vcomisd
jp
pop
adc
cmpsb
ret
cmc
pop
cmp
mov
mov
or
mov
stc
mov
sbb
push
shlb
xlat
sbb
push
mov
scas
xchg
arpl
xchg
adc
rorl
xor
cwtl
or
add
and
pop
je
pop
call
pop
fidivrs
sub
xor
fwait
stos
mov
add
inc
aaa
pop
xchg
pop
rcll
pop
mov
movsl
js
ss
leave
mov
pop
pop
hlt
jge
call
das
sbb
xor
inc
jnp
fidivrl
inc
cltd
inc
movsb
cwtl
or
fstl
das
inc
pop
jge
or
lcall
daa
and
xor
inc
shll
lods
dec
sbb
movsb
fsin
xor
shrb
adc
and
stos
mov
adc
adc
adc
sbb
xor
xchg
and
sbb
xchg
aas
arpl
cmp
mov
jbe
decl
popa
push
cltd
or
fiaddl
pop
pop
negb
or
lods
push
push
fisttps
mov
mov
fidivrl
int3
inc
outsb
rol
fwait
add
cltd
jo
movsb
mov
xor
mov
test
jmp
fnstsw
inc
sbb
dec
or
notb
ljmp
dec
jp
js
psubw
mov
aam
inc
pushf
dec
fwait
push
sub
mov
xchg
leave
xchg
shll
push
test
lret
pop
cmp
rcrl
cmp
pusha
outsl
push
xchg
xor
mov
pop
xchg
mov
loop
and
mov
ret
insb
stos
fistpll
xchg
inc
lcall
imul
push
insb
pop
adc
or
sub
ror
leave
push
dec
cs
test
push
push
lods
push
js
inc
mov
mov
xor
dec
inc
mov
jno
sbb
pop
lahf
push
test
ds
aaa
cmp
mov
lods
pop
int3
aam
rcl
xor
sbb
mov
ds
adc
ja
inc
and
in
in
out
cmc
mov
add
dec
cltd
shlb
push
addr16
int
inc
fucom
mov
aaa
pop
xchg
pop
outsb
mov
sbbl
push
pusha
fnstenv
outsl
sti
aad
orl
cmp
pop
popf
mov
shlb
repnz
shlb
add
push
mov
jns
sbb
imul
push
cmp
adc
xchg
scas
mov
cmp
mov
loope
mov
pusha
enter
adc
les
add
ljmp
or
in
ja
sbb
arpl
or
pop
fstps
jl
int3
pop
or
mov
jno
das
test
jae
mov
outsl
test
shll
push
mov
icebp
iret
nop
xchg
add
daa
ljmp
insb
decb
inc
or
mov
test
xchg
hlt
hlt
lods
and
fsubs
push
nop
pushf
or
or
out
mov
mov
xorb
in
pop
movb
sti
mov
shll
int3
in
or
jl
dec
daa
in
sbb
xchg
add
stos
push
cmc
sub
push
in
popa
cmpsb
mov
mov
xchg
xchg
pop
inc
fdiv
ds
cmp
daa
les
lret
inc
mov
mov
scas
aam
lret
mov
hlt
inc
orb
and
ds
mov
leave
xchg
or
out
xchg
and
jae
fwait
sub
pop
movsl
lret
adc
sbb
pop
clc
lahf
and
add
add
dec
pop
xor
pop
dec
cmpb
mov
xchg
ljmp
add
push
and
mov
clc
xor
out
popf
and
adc
jg
fcomi
arpl
jp
ljmp
mov
outsb
jns
push
inc
adc
subl
inc
out
pushf
xor
jnp
xchg
popf
cmp
cmpsb
add
and
mov
out
mov
call
sub
mov
mov
ljmp
pop
dec
add
shr
lock
sub
adc
dec
xchg
into
std
in
test
mov
das
pop
pop
cld
inc
dec
push
rorb
xor
sarb
sbb
stc
ss
in
lcall
aaa
mov
cli
inc
nop
sbb
sub
dec
lret
pushf
cltd
or
and
mov
pop
insb
cs
jae
dec
mov
mov
pushf
mov
ljmp
out
pop
adc
shrb
push
dec
xlat
adcl
outsb
and
jmp
or
data16
xchg
clc
inc
int3
or
jmp
add
dec
sti
pop
mov
add
inc
lea
sub
cmp
int3
dec
hlt
aas
enter
fistps
stos
call
inc
icebp
jle
adc
sub
imul
in
mov
lret
ljmp
jg
cmc
cmc
andb
inc
jl
xor
frstor
mov
pop
xor
mov
cmp
pop
orl
out
jg
push
jg
mov
inc
stc
loope
cbtw
push
jne
mov
outsl
mov
popa
and
and
pushf
mov
mov
xor
popa
push
out
nop
push
data16
fidivl
fsubs
adc
std
pop
add
jp
das
outsl
sbb
call
push
xor
shlb
lods
js
fcmovnbe
loopne
mov
ds
dec
sub
mov
lcall
dec
mov
stos
cmp
inc
push
jns
xor
dec
leave
aas
xor
aas
daa
xlat
inc
pop
sti
push
jno
fsubrl
hlt
insb
dec
mov
adc
dec
stos
sti
mov
mov
iret
adc
inc
shr
cwtl
decl
jae
or
lret
imull
inc
int3
mov
imul
mov
enter
int
sahf
xor
test
and
or
dec
sbbl
pop
mov
xchg
outsl
xchg
xchg
daa
mov
insl
ds
lea
mov
jge
inc
add
mov
iret
dec
andb
mov
popa
sub
shlb
aam
loop
cmc
mov
cmp
mov
xor
js
aad
jnp
lock
sahf
ds
jge
mov
mov
adc
pop
and
sbb
inc
sub
xor
fcmovne
dec
dec
addr16
add
xor
xlat
and
push
ja
lcall
dec
dec
mov
sbb
xchg
mov
dec
pop
jle
sbb
cmpsb
out
loop
fisttpll
insb
sbb
inc
insl
lods
xchg
mov
cmp
out
jae
aam
and
jne
mov
jp
data16
outsl
or
mov
insb
push
outsb
or
ja
and
add
stos
movsl
xor
dec
sbb
fnstcw
mov
xchg
loop
andl
loope
imul
mov
fbld
mov
addr16
sarb
mov
xor
mov
or
jle
mov
mov
sub
repnz
decb
sub
mov
stos
fwait
leave
loope
push
sub
jle
dec
xor
jb
add
popa
inc
jg
das
push
enter
add
arpl
pop
dec
sti
mov
pop
mov
arpl
xor
ret
jle
mov
cltd
int
and
ljmp
shr
mov
ds
push
push
add
mov
addb
in
mov
inc
push
xchg
inc
gs
in
and
cmp
sub
xchg
jnp
sub
and
sar
jae
rolb
jge
inc
pushf
push
jbe
repz
stos
jo
and
adc
push
nop
add
shlb
push
ret
jg
jecxz
pop
in
and
ret
insb
ret
inc
divl
rcll
pop
outsl
pop
adc
and
and
sahf
es
and
data16
sbb
inc
pusha
lods
jb
cli
pop
inc
aam
mov
in
dec
push
into
jo
iret
jne
xchg
das
xor
sub
pusha
jle
fnstsw
icebp
fdivp
pop
popf
or
fildll
sbb
int
into
aas
add
cltd
xlat
mov
ljmp
movl
xchg
adc
out
adc
add
sub
mov
xor
pop
int3
nop
sahf
xchg
jp
sub
lods
sarb
inc
in
addr16
rcrl
popf
addr16
std
stos
or
out
adc
jecxz
cmp
mov
sbb
push
addb
jp
mov
data16
dec
insl
inc
mov
outsb
outsl
int
movsl
push
rcr
stos
push
bound
xor
daa
adc
leave
xchg
leave
es
dec
subb
and
adc
sahf
pop
jne
or
mov
arpl
and
xchg
fbstp
add
out
and
add
xchg
jle
push
jecxz
sbb
out
hlt
inc
lcall
sub
std
push
mov
mov
int
push
shll
fs
cmpb
pusha
outsb
nop
lods
test
pop
daa
sti
leave
inc
loopne
push
mov
pop
pop
loopne
push
push
mov
js
pop
push
mov
mov
sbb
sbb
jle
fnstenv
bound
xchg
xor
test
mov
imul
jns
loopne
test
pushf
sbb
shll
ret
xor
sub
rclb
cmp
clc
leave
and
shl
mov
stos
lret
adc
xchg
pop
int
push
sarb
mov
jecxz
pop
scas
notb
pop
sbb
imull
subb
and
sbb
sub
push
cmp
add
mov
jmp
sbb
push
gs
loopne
ljmp
fs
or
or
scas
cmp
push
mov
xchg
icebp
jmp
and
mov
addr16
xor
xchg
inc
std
in
cmp
push
mov
jl
insl
cli
add
movsb
adc
push
push
mov
jnp
push
pop
movsb
mov
xchg
add
je
dec
lret
mov
add
fcoml
inc
cs
out
jb
push
jb
adc
xorb
sarb
dec
ljmp
rclb
jmp
sti
dec
push
xor
pusha
hlt
into
sarb
ret
jne
dec
fsubrl
or
iret
adc
sbb
lock
loop
shrb
xchg
fcmovnbe
outsl
cmp
xor
xchg
inc
sbb
add
dec
outsb
jle
jp
push
lock
shrb
inc
mov
or
dec
fidivrl
dec
lret
loope
loope
scas
adc
daa
inc
fstl
jno
and
out
push
add
rorb
cltd
dec
adc
repnz
lds
sbb
aaa
lds
adc
xchg
ja
add
inc
jmp
xor
and
sbb
int
in
push
mov
mov
rcl
mov
push
mov
ljmp
push
je
bnd
and
fnstenv
ffree
mov
cmp
cwtl
push
shll
lods
ss
fwait
mov
mov
nop
mov
out
das
xor
mov
daa
push
loop
ja
inc
cmpb
jbe
scas
fsubrl
hlt
clc
mov
xor
xor
pop
and
inc
sti
test
incl
lcall
jl
psubsw
rcll
dec
repnz
xor
emms
bound
or
xchg
rclb
jo
add
push
cltd
fdivrs
scas
subb
dec
xor
fistl
outsl
call
fldcw
xor
push
or
cwtl
sbb
outsl
cmp
in
mov
shlb
cmp
xchg
mov
je
out
in
push
pop
lret
mov
fadds
mov
or
insl
xor
sbb
xchg
mov
add
adc
adcb
mov
xor
scas
orl
sbb
and
stos
xor
in
mov
scas
cmp
lds
mov
aaa
mov
ret
testl
pop
add
mov
jp
dec
pop
mov
in
jmp
mov
xchg
mov
push
push
fs
mov
xchg
cmp
int3
loope
xchg
inc
sahf
popf
xor
in
shlb
mov
pop
xor
das
adc
in
jl
dec
repnz
stos
push
mov
push
adc
inc
dec
andl
xor
dec
jne
insb
daa
sub
mov
push
fisubl
sub
adc
cld
cs
mov
dec
add
push
pop
and
mov
or
cmp
int
test
sub
mov
icebp
add
lret
lret
mulb
adc
and
cli
test
adc
daa
pop
mov
jns
inc
fdivl
jmp
popa
or
dec
push
in
cmp
sub
sub
outsb
mov
or
popf
push
pop
movsb
leave
stc
and
inc
sbb
xchg
daa
pusha
xor
or
aad
sbb
aas
filds
imul
inc
jo
stos
orl
loopne
sbb
cmp
push
addl
daa
mov
jns
and
shl
in
pop
mov
xor
or
std
inc
fstl
pop
jnp
sbb
shrb
pop
or
mov
lret
jecxz
mov
rcr
mov
xor
sbb
xchg
adc
out
sti
std
cmp
popf
jnp
or
jle
jg
outsl
or
dec
aad
in
fmull
mov
jb
ds
fsubr
add
cmp
and
arpl
sahf
cs
aam
out
dec
gs
ss
popa
arpl
push
mov
mov
mov
stos
dec
fcmovnu
sub
lods
push
push
xchg
adc
daa
stc
push
pop
xlat
outsl
je
pop
xchg
fmull
lcall
ret
pusha
pop
js
push
test
cmp
cmp
aam
insb
jns
mov
ljmp
pop
lahf
push
fwait
adc
fwait
mov
jns
jl
adc
ss
movsl
xor
stc
syscall
cmc
xor
and
cmp
push
add
addb
cmp
aam
or
inc
push
cwtl
xor
xchg
inc
mov
dec
xchg
insb
ficomps
ret
xchg
xchg
adc
subb
gs
and
mov
sub
cmpb
xchg
push
xor
or
mov
xor
lahf
pop
out
clc
aam
inc
jb
xor
aam
rcrl
mov
lds
jae
loopne
mov
stc
inc
out
push
sbb
es
dec
sbbl
pushf
mov
inc
xchg
testl
insb
push
scas
mov
sbb
mov
xchg
inc
mov
aaa
mov
hlt
rolb
lock
xchg
jae
scas
push
xlat
mov
adc
pushl
pusha
daa
lea
in
lret
dec
int
and
ljmp
clc
cmpb
jno
push
es
sub
xor
and
mov
cmp
into
mov
shll
and
int3
ret
fs
enter
sbb
push
aaa
inc
xchg
dec
sbb
je
shlb
cwtl
add
das
stos
jle
mov
push
dec
add
imul
xor
addr16
out
jl
iret
imul
xchg
sbb
es
lret
bound
xchg
stc
ret
rol
jle
cs
arpl
iret
lcall
mov
repnz
popa
bound
repz
mov
adc
fidivrs
outsl
inc
and
adc
shlb
jle
sti
adc
enter
mov
aaa
jmp
leave
in
and
xchg
push
pop
mov
pop
daa
mov
jl
push
test
xor
stos
mov
fistpl
dec
inc
les
cmp
xor
inc
leave
jne
inc
shrb
fildll
loope
outsl
pop
aaa
dec
sahf
mov
cmp
pop
or
pusha
fs
nop
das
dec
lea
push
fstpt
pop
fcomip
pop
shll
jecxz
insb
adc
mov
pop
sahf
pop
hlt
inc
or
adc
std
jl
pop
sbbb
dec
pushl
cwtl
jbe
sbb
out
out
stos
mov
fcomp
fsub
or
and
mov
fwait
cmp
stc
inc
lahf
jg
scas
jge
pop
pop
lea
popa
popf
jno
inc
repnz
scas
dec
jae
les
movsb
mov
idiv
ja
rcrl
mov
aad
icebp
cli
sbb
lods
fdivs
inc
jp
pop
in
push
mov
inc
xor
cmp
popf
pop
stos
scas
or
sub
test
mov
loop
shll
or
push
push
pop
fmull
int
pop
mov
add
je
mov
dec
mov
fstpl
push
add
mov
ret
cld
call
add
imul
ja
inc
mov
jbe
dec
in
mov
push
scas
mov
inc
push
iret
lea
push
mov
lahf
leave
cld
adc
jmp
repnz
mov
mov
xchg
push
mov
sub
inc
in
jmp
cmpsb
sub
xor
mov
bnd
cmpsl
bound
cmc
jge
jmp
mov
sbb
mov
in
mov
dec
enter
jle
into
cmp
movsb
adc
mov
mov
sbb
jge
push
pop
out
mov
aad
and
add
cli
push
int
push
jns
into
jne
fs
mov
lds
jno
rcrb
mov
stos
sbb
cmpsb
cwtl
mov
push
sub
lahf
jae
and
or
aaa
out
aam
dec
lahf
sub
mov
lock
xor
div
repz
pushf
sbb
xchg
cmpsl
sbb
mov
jns
dec
cli
out
lret
in
push
aaa
loope
int3
sar
outsb
sbb
cs
lret
aad
imul
cmpl
xor
or
mov
or
sarl
test
lret
pop
sti
cmc
scas
dec
or
sbb
mov
call
or
push
xor
fldlg2
lock
pop
jbe
add
xchg
imul
cmp
rcll
push
push
xor
mov
jge
adc
inc
cmp
sbb
mov
jo,pt
mov
mov
in
jecxz
addr16
int
sbb
xchg
daa
nop
or
subb
gs
mov
in
jo
sti
adc
out
insb
in
pop
jb
sub
jae
outsl
jecxz
pop
negb
cmc
push
cmp
xchg
fnstcw
and
pop
cmpl
inc
lret
and
dec
sbb
imul
loope
movsl
and
fcomps
jp
sbb
cltd
mov
add
sbb
dec
mov
or
out
pop
out
jmp
sti
cmpl
subl
dec
fs
addr16
aas
dec
int3
imul
mov
inc
loope
pushf
lahf
xor
push
push
mov
dec
ret
sbb
xor
sub
mov
das
sahf
aad
inc
movsl
sbb
call
inc
dec
test
inc
xor
add
sbb
mov
pop
or
sahf
mov
push
shr
adc
frndint
xor
in
xchg
pop
paddw
popf
add
or
jecxz
xchg
mov
loope
xor
mov
loopne
mulb
dec
push
es
jl
pusha
fists
mov
or
pop
inc
mov
add
out
pop
lahf
xchg
pop
adc
js
jl
bound
and
jecxz
push
push
out
sarb
adc
gs
loop
std
adc
leave
add
mov
and
jbe
jmp
lods
or
dec
les
sti
js
or
jecxz
ret
mov
add
fldl
outsb
fwait
cmp
je
and
out
ds
jns
mov
xlat
pop
push
movsl
sbb
push
or
movsl
dec
lret
icebp
pop
push
mov
sbb
fnstsw
dec
es
stc
xchg
sub
mov
cli
shrl
pusha
jmp
ss
cmp
popa
pop
mov
mov
int3
jg
mov
adc
repnz
and
shl
mov
sbb
or
jnp
cli
lahf
lea
out
shl
outsb
jae
in
push
aaa
or
fbstp
out
inc
mov
lret
inc
hlt
ret
dec
outsb
mov
dec
inc
outsb
xor
sub
xchg
cwtl
add
mov
mov
mov
mov
sub
scas
cvtps2pd
ja
inc
sub
add
ja
sahf
adc
sbbl
or
enter
ds
imul
fstpl
js
jnp
jne
shr
int
jge
leave
jne
hlt
or
xor
cltd
test
adc
pop
sbb
imul
ja
adc
adc
lods
mov
inc
jp
add
jb
mov
push
inc
test
cmpsl
inc
xor
lock
les
inc
movsl
pop
scas
cmp
mov
pop
cs
dec
sarb
lods
rorl
test
jno
addr16
push
pop
adc
lds
icebp
insb
int
scas
mov
mov
push
jo
and
sbb
cwtl
mov
popf
aam
lods
test
ja
ss
jecxz
xor
mov
icebp
fs
pop
test
inc
test
mov
jae
pop
in
push
test
aad
xor
jg
hlt
lods
sub
mov
mov
ss
orb
std
xor
mov
xor
adc
xchg
les
popa
repz
das
sahf
push
xorb
lods
ficoml
std
in
push
or
inc
jg
push
xor
mov
adc
ds
imul
insl
movsl
sbb
xlat
add
jp
and
cmp
mov
mov
cmp
shlb
lret
xchg
ja
xorl
stc
mov
mov
and
outsb
or
outsl
in
in
add
xchg
loope
sbb
add
orb
push
or
push
pop
aam
out
sbb
popa
mov
ds
push
sub
mov
ss
push
lcall
dec
insb
cwtl
cmpb
adc
rclb
mov
jp
jp
dec
daa
and
test
sub
or
xchg
add
xlat
fdivrl
ret
push
adc
sub
std
adc
into
pop
adc
push
sbb
clc
ret
gs
lret
jb
push
in
jp
or
les
in
mov
popa
xor
stc
into
xor
jmp
mov
ret
ja
push
out
jecxz
sub
pop
fcoml
repz
cmp
mulb
push
mov
mov
fistl
jnp
arpl
or
scas
jne
out
lahf
sub
jp
sbb
push
aas
cmp
orl
jmp
jne
xor
movsb
push
push
jmp
mov
mov
cli
sbb
out
outsb
pop
fsubrl
dec
aam
xchg
pop
lea
push
adc
movsb
and
jno
push
fcmove
pop
fsub
xchg
mov
out
in
lock
lret
mov
xor
push
cli
test
inc
inc
sbb
pop
insb
pop
dec
cmp
mov
jnp
push
cmc
incl
rolb
jbe
scas
cmp
popf
mov
fildll
fcompl
mov
je
mov
sub
fidivl
out
dec
orb
push
inc
popa
sbb
jb
leave
jp
insb
sbb
rcll
gs
mov
fcmovb
push
incl
jne
mov
xchg
shll
mov
sti
push
fwait
ja
js
add
aad
push
subb
jns
sub
fstl
adc
inc
mov
inc
jle
pop
sub
sbbl
xor
mov
aad
and
lret
and
out
ret
decb
jb,pn
js
not
mov
jnp
jbe
mov
lret
inc
dec
add
pop
arpl
jge
pop
mov
data16
pop
adc
lahf
stos
pop
sub
neg
push
popf
xor
mov
lock
inc
fs
and
sbb
and
loopne
stc
push
lods
addb
jge
movsl
jl
fwait
notl
mov
ds
in
mul
shrl
cmp
mov
dec
cmp
jnp
and
push
add
or
jns
inc
sbbb
mov
jecxz
mov
call
fadd
sbb
shll
lcall
nop
pushf
add
dec
in
and
mov
mov
icebp
adc
ja
fstl
mov
les
fdivl
sub
cli
insb
out
fiaddl
pop
iret
dec
testl
xor
addr16
sbb
mov
pushf
das
mov
insl
lret
jae
pushf
repnz
add
xchg
jle
jb
jge
loopne
cmpsb
ret
pop
dec
or
sbb
xchg
mov
mov
lods
add
pop
enter
push
ret
cltd
addb
or
xchg
ja
pop
sub
add
push
jmp
popf
movsl
push
test
cli
int3
sub
adc
push
push
aas
aaa
adc
cmpb
jns
xor
mov
fildll
adc
mov
arpl
sub
bound
xorb
mov
xchg
test
lea
sub
bound
dec
inc
xor
loopne
jl
popl
inc
xorb
cmpsl
mov
jbe
inc
imul
xchg
pop
push
mov
sub
ds
pop
enter
sub
cmp
push
test
mov
add
test
jnp
jo
mov
loope
rorl
sbb
cmpsl
xor
mov
xchg
mov
xor
cmp
popa
mov
jge
hlt
das
outsb
ficoms
push
cmp
rorl
stos
inc
mov
and
movl
in
inc
or
les
sbb
inc
js
adc
push
adc
xchg
mov
and
and
mov
test
and
int3
mov
push
mov
insl
xchg
cs
lret
fidivl
mov
fidivrl
add
lahf
mov
repnz
and
out
lods
sbb
lret
cmp
movsl
dec
inc
nop
movsb
imul
sahf
imul
leave
dec
xchg
aas
sti
inc
ds
cltd
shl
jne
sbb
or
mov
sbbl
sbb
mov
stos
outsl
lret
jae
sbb
jecxz
daa
mov
stos
sbb
push
xor
imul
push
sbb
pop
testb
sub
adc
or
or
mov
or
nop
dec
imul
lcall
adc
mov
daa
xchg
push
aad
dec
lock
cmp
leave
outsb
adc
fisubs
cmpsb
popa
or
insb
mov
scas
aad
andl
push
mov
lcall
inc
mov
inc
lret
cmp
xchg
and
pop
xorl
daa
dec
push
enter
inc
movsb
add
stos
fcompl
push
sti
int3
call
or
repnz
repz
out
fisubrl
or
ret
pusha
cmp
cli
inc
movsb
call
inc
mov
movsb
xlat
pop
lods
pop
sub
cmp
aas
addr16
and
mov
jno
popa
pop
cmc
cs
mov
xchg
and
sti
add
iret
cmpsb
mov
lods
cmp
out
ret
xchg
sti
jno
lea
ror
sbb
pop
subl
mov
rolb
inc
mov
shlb
and
xor
inc
cmc
cmp
and
into
loopne
dec
out
mov
les
jnp
adc
sub
jno
dec
jne
push
pop
nop
jl
out
je
mov
push
or
mov
arpl
movsl
fsubs
cmp
outsl
sbb
daa
lock
shl
mov
adc
push
fisttps
jne
add
pop
stos
insb
xchg
sub
adc
cmpsl
xlat
dec
movsb
sub
mov
cmp
sti
add
dec
lock
mov
lds
test
aaa
sub
enter
sti
addr16
xchg
and
mov
shl
lcall
xchg
fisttpll
negb
leave
push
sbb
fsubrs
and
out
movsb
hlt
orb
imul
test
dec
stos
cmp
or
sbb
cmp
lret
cmpsl
mov
movsb
inc
mov
insb
pop
int3
rcrb
sub
push
push
mov
push
mov
jle
setge
add
ljmp
jle
ret
xorb
cltd
and
out
movsl
mov
adc
int
ret
je
xor
loop
mov
inc
shll
lods
icebp
add
insl
insl
orb
aaa
scas
fnsave
xor
int
sbb
fbstp
or
popf
bnd
jns
leave
xor
mov
pop
insb
push
pop
and
add
loope
mov
sbb
fisubl
xor
dec
pop
repz
pushf
jns
mov
mov
pop
inc
int3
jl
lahf
test
fisubl
or
subb
cmp
pop
pop
mov
and
shlb
cltd
punpckhwd
and
loope
sarb
scas
jl
add
lcall
jmp
xchg
lock
jle
inc
sbb
mov
cmpsb
shrl
fwait
jge
mov
jge
popa
into
mov
ffree
mov
inc
subl
dec
push
push
js
mov
mov
sub
sbb
mov
enter
push
adc
sub
push
cmp
cmp
jbe
outsb
dec
cmp
mov
or
or
mov
sbb
cmpsb
and
ds
sub
cmp
and
push
imul
popf
jge
pop
das
cs
cwtl
mov
arpl
lods
adc
into
jnp
lahf
dec
repz
ds
and
mov
jmp
inc
pop
pop
mov
popf
ljmp
test
lahf
jl
in
xchg
adc
rcrl
xor
call
aad
jle
lea
in
sub
push
cmpsl
push
aam
mov
sbb
push
push
cmp
sbb
idivl
mov
stos
pop
das
fstpt
pop
pop
sub
push
push
in
mov
jnp
test
jp
cmp
mov
add
jmp
cmc
or
dec
inc
lret
xchg
arpl
clc
outsb
push
or
xor
movsl
loopne
push
mov
shrb
and
push
fidivrs
xchg
jmp
dec
imul
test
dec
sub
jnp
shl
jne
add
insb
jnp
imul
push
mov
sbb
jno
xchg
lods
adc
or
mov
jg
mov
xor
xchg
lahf
addr16
or
jmp
test
lods
lods
leave
loopne
movsb
xor
cli
mov
mov
dec
add
and
jns
xlat
les
or
jge
mov
jge
inc
adc
and
or
jae
dec
pop
popf
mov
add
xor
dec
jge
inc
push
ret
cmp
sbb
hlt
sbb
push
imul
sub
jno
lods
and
sub
pushf
cli
call
dec
inc
push
xorl
xchg
imul
mov
negl
outsb
xchg
and
ljmp
fistps
push
pushf
dec
and
movsl
js
fs
ret
jmp
sub
cwtl
pop
repz
lock
imul
jmp
pop
outsb
mov
imul
pushf
xor
or
insl
lds
subl
cmp
sar
dec
mov
fimuls
cmp
imul
ss
movsl
repz
push
adc
loope
xchg
mov
mov
sbb
dec
cmpsl
xor
cmc
mov
in
ret
imulb
andb
cli
cmp
jl
clc
iret
je
cmp
ljmp
xchg
nop
mov
jmp
xor
std
mov
push
loope
lret
xchg
das
call
ss
pop
mov
mov
out
add
sbb
ds
data16
jecxz
cmpsb
pop
mov
adc
push
mov
push
pop
mov
loopne
fisubrs
pop
fdivrl
pop
shll
mov
loop
in
adc
daa
insl
xlat
fiaddl
sbb
cmp
xchg
outsb
inc
out
insb
adc
outsl
nop
addb
out
das
out
xor
jb
bnd
loope
das
add
imull
pop
ja
lds
mov
out
jbe
icebp
aas
lods
enter
add
mov
addr16
in
lahf
jne
mov
out
ja
push
shl
enter
cmp
cld
lds
scas
jl
fists
loop
inc
mov
pop
stc
sub
call
and
add
xchg
sbb
jmp
scas
lds
outsb
dec
mov
push
filds
das
xchg
push
dec
add
dec
imul
inc
roll
out
mov
inc
stc
inc
lret
in
mov
jb
xchg
dec
mov
test
mov
jne
ret
loopne
mov
xor
pop
mov
pop
xor
mov
jns
stc
dec
sarb
mov
popa
adc
pop
in
push
cmp
jo
push
mov
dec
mov
jnp
push
mov
xchg
push
shlb
lock
sbb
fs
lock
fistpll
mov
stos
push
loope
jmp
sub
and
pop
inc
inc
cwtl
pop
sbb
lcall
icebp
stos
popa
push
sub
sbb
icebp
cmpsl
add
stc
fs
inc
inc
xor
test
pop
stos
cli
mov
xchg
loop
pop
push
jl
cmc
fimull
call
addr16
jmp
push
or
push
fwait
mov
xorl
and
movsb
dec
lahf
subl
xchg
int3
jns
add
stos
pop
sub
xchg
adc
pop
mov
ja
test
push
jg
sar
and
jge
mov
xchg
cmpsb
shl
movb
scas
in
imul
and
mov
mov
or
push
pop
mov
sarl
dec
add
adc
repnz
bound
ja
dec
rorl
mov
inc
add
fadd
sub
push
repnz
orl
hlt
fstps
pop
orl
add
fmul
out
in
std
cmpl
shrb
mov
pop
pop
push
push
jle
daa
push
jp
add
enter
popa
ret
xor
mov
mov
loope
pop
ds
fisubrs
or
fs
frstor
cld
scas
mov
jns
movsb
test
test
aad
dec
out
pop
fcoms
mov
aas
inc
dec
jbe
sub
and
mov
cmpl
jecxz
jb
rcr
cmp
stos
or
insb
mov
ja
mov
push
cmp
xor
subb
adc
test
or
enter
mov
shlb
test
mov
and
into
cmp
sbb
xchg
pop
jmp
push
sbb
data16
sub
or
ret
jae
sub
mov
dec
jg
sysenter
bound
adc
out
sub
stos
push
or
cmp
sbb
hlt
adc
add
or
adc
ljmp
adc
lods
push
jns
inc
addb
xor
and
pusha
outsb
inc
test
push
ror
es
mov
dec
add
add
mov
push
loop
call
test
adc
bswap
push
frstor
push
push
cmp
add
addr16
add
bound
jo
clc
mov
clc
pop
lret
popa
mov
out
movb
dec
and
mov
lea
imul
jne
stc
js
mov
inc
in
jnp
icebp
stos
lods
cwtl
test
fistl
sub
ja
repnz
daa
push
into
mov
imul
lock
dec
imul
dec
push
jecxz
fbld
inc
jp
bound
jbe
push
sub
cmp
dec
ret
jnp
push
bound
xchg
jb
decb
cmp
shlb
sub
stos
popa
dec
ret
ret
jp
ror
pop
stc
and
stc
mov
scas
push
xor
in
xor
neg
cmp
sub
add
stc
bound
sbb
jg
jp
stos
movsl
pop
or
jae
mov
jp
adc
push
sahf
and
shl
daa
dec
jnp
pusha
ds
pop
mov
mov
xchg
jbe
cli
fiadds
inc
iret
sbbl
push
inc
shrl
pushf
aas
dec
mov
popa
and
ss
adc
popf
or
inc
test
mov
aaa
adc
addb
ljmp
adc
int
sub
ret
pop
jnp
sbb
add
pop
orl
sti
mov
dec
out
jle
sbb
pop
jnp
notl
gs
lods
inc
fsubs
into
add
push
je
mov
lods
fsubr
lret
inc
xor
jle
mov
jno
push
test
fidivl
pop
popf
daa
add
add
xchg
add
je
sub
ror
dec
sbb
xor
inc
mov
dec
dec
jbe
das
ret
inc
sbb
mov
popa
scas
ljmp
pop
cmc
dec
insb
cmp
xchg
cmpsb
push
mov
lea
sbb
out
punpcklbw
fsub
stos
inc
decl
shrl
push
jmp
fnstcw
dec
pop
pop
mov
push
icebp
btc
sub
outsb
imul
ja
js
mov
sbb
in
mov
fs
mov
aad
in
mov
test
mov
or
ror
xchg
idiv
xchg
push
mov
jno
pop
std
or
popf
lods
xor
int3
add
test
leave
je
add
shlb
not
or
out
leave
mov
inc
xchg
mov
pop
jnp
sti
mov
and
mov
test
mov
popf
stos
inc
outsb
cld
lods
test
and
shr
aam
push
shl
xor
out
fstpl
in
ja
push
stos
jecxz
push
mov
jo
sti
popf
pop
push
inc
sti
rol
cmp
inc
insb
push
dec
ds
inc
je
jae
mov
std
cli
pop
mov
push
mov
xchg
test
xchg
movsl
sub
dec
jecxz
dec
mov
jle
outsl
dec
or
imul
movsl
inc
into
jnp
aam
test
jb
jne
push
out
add
fistps
mov
sbb
and
dec
movsb
das
dec
cmc
mov
lock
xor
cld
mov
lods
pushf
decb
and
mov
xlat
push
in
mov
lds
pop
daa
jbe
jo
mov
adc
fisubs
pop
fs
mov
cmpsb
sbb
push
xor
lret
out
and
pop
push
arpl
fst
daa
testl
sub
daa
sbb
xchg
ret
lea
push
jp
and
es
out
fistps
mov
aaa
ret
stos
push
pop
add
subb
and
dec
sub
inc
imul
xor
sbb
mov
or
xchg
or
popf
jnp
rcrb
inc
add
aaa
push
or
cmp
dec
imul
scas
mov
mov
addr16
and
ljmp
nop
bound
iret
cmp
test
ficoml
shll
sbb
cs
fnsave
arpl
pusha
and
jg
add
lret
ja
jmp
insl
sbb
rol
or
cmp
mov
jp
or
xor
ficoml
cmpsb
call
insb
movsb
push
aad
lret
mov
lret
push
adc
mov
iret
rorb
pop
mov
cwtl
mov
or
push
and
cwtl
call
pop
pop
stos
dec
cmpsl
out
or
int
add
je
sub
ds
adc
push
repnz
or
pop
in
das
in
mov
cmp
cmp
sahf
shrb
pop
ljmp
xchg
jle
test
lahf
in
push
and
and
jae
jle
lret
pop
sbb
aam
shll
movsl
jne
inc
fwait
xor
sbb
ds
sahf
pushf
bound
mov
scas
cmp
sar
push
iret
mov
push
sbb
lods
mov
dec
cmp
mov
ja
pop
xchg
std
mov
fisttpll
sti
aad
sub
das
and
push
mov
gs
sahf
mov
out
add
out
mov
dec
add
sbb
je
add
clc
int3
addr16
daa
jecxz
fildl
lods
outsb
or
adc
in
push
in
outsb
dec
dec
inc
mov
imul
mov
insl
push
mov
mov
and
pusha
mov
add
inc
lahf
test
dec
test
scas
mov
in
xor
sub
jns
xchg
es
mov
or
mov
pop
insb
arpl
rcl
out
mov
xlat
mov
shl
cltd
sbb
mov
jl
cld
int3
jno
pop
jo
mov
pop
jle
cltd
in
and
cwtl
add
ret
xor
dec
aaa
dec
stc
scas
movsl
adc
cmp
fsubl
dec
mov
jg
pop
dec
or
mov
sub
cld
mov
mov
in
gs
popa
imul
jae
adc
rclb
add
mov
in
jle
cli
mov
cmp
fnsave
sbb
lcall
aad
xchg
mov
out
mov
lret
mov
cwtl
mov
inc
je
filds
xchg
or
xchg
mov
xchg
xor
jne
jne
sub
outsb
mov
mov
shll
add
cmp
je
fnstsw
xchg
shrl
push
adc
fdivrl
sbb
aad
movsb
cld
jp
adc
adc
dec
push
dec
jo
daa
arpl
pop
cld
loope
inc
out
std
movsl
jbe
fwait
sub
xor
cli
jle
push
lds
cwtl
adc
jmp
ljmpw
jnp
leave
xor
lods
jecxz
and
stos
movsl
mov
data16
aam
xchg
cli
dec
cmpsb
sub
adc
and
dec
movsb
fisubl
xchg
rcll
cmp
xlat
loopne
dec
cmpsl
ret
insl
dec
xchg
or
mov
mov
aad
call
das
xchg
inc
sbb
gs
faddl
dec
mov
jle
jns
cmp
and
pop
fwait
cmpb
je
pop
mov
mov
lret
mov
in
mov
and
or
addb
push
pop
jb
cs
xchg
aam
xor
repz
push
mov
insb
push
jle
pushf
loopne
add
mov
insb
cli
ljmp
adc
sar
jmp
aas
xchg
mov
lahf
rolb
and
mov
cmpsb
rorb
cltd
outsb
aam
imul
xchg
jecxz
leave
pusha
mov
xor
clc
sahf
push
jns
jns
bound
push
push
cmpsl
iret
and
and
lcall
and
test
popf
xor
jecxz
cmpsl
scas
xchg
jge
pop
sarl
out
mov
mov
in
and
aaa
mov
mov
xchg
dec
push
pop
xchg
cs
lods
or
pop
mov
push
nop
push
sub
pop
lds
xor
pushf
data16
add
mov
mov
aam
xchg
aaa
inc
jnp
mulps
fidivs
popa
cmpsl
cmp
jns
cmpsb
enter
in
outsb
sbb
xor
push
adc
aas
sbb
xor
dec
mov
sti
lods
lods
sub
and
cmp
lcall
fsts
mov
rcr
cmp
into
mov
mov
push
push
aaa
fiadds
jle
shll
loop
push
sub
je
and
push
les
jg
shrl
movsb
add
ret
stos
push
inc
mov
insb
sahf
push
in
add
mov
push
xor
sub
mov
cld
inc
push
xchg
ffreep
cwtl
orl
cli
daa
cltd
xchg
and
ret
ret
push
mov
hlt
inc
test
mov
cmp
and
mov
test
or
jecxz
pusha
mov
inc
sti
movsb
push
push
or
outsl
fiaddl
inc
inc
inc
js,pn
push
lock
inc
jno
shl
xor
loope
ret
mov
mov
and
cmp
rorb
jnp
addr16
cmc
jle
jne
clc
orl
pop
mov
xor
inc
lods
mov
dec
mov
fsubrs
sbb
mov
pop
add
jnp
mov
add
jae
adc
ret
inc
pop
xchg
lock
dec
jnp
test
addr16
push
bound
gs
dec
mov
movsl
fwait
rclb
inc
xor
or
lea
imul
mov
repnz
cli
sbb
testb
outsl
xor
jo
repnz
cmp
iret
xor
inc
int3
nop
inc
stc
cmp
scas
mov
push
or
xchg
test
fstps
stos
push
fcoml
data16
cmp
into
mov
mov
fisubrl
movsl
add
dec
mov
inc
ret
out
gs
mov
xchg
push
mov
fwait
icebp
cmpsb
add
push
sub
jg
das
jg
and
pop
cld
cli
jbe
sbb
pop
push
loop
dec
xchg
xchg
aaa
xor
fcoms
ljmp
pop
sahf
leave
mov
and
xor
repnz
push
fisttps
es
cmc
mov
pop
dec
add
test
aas
mov
jo
lcall
push
lcall
sub
test
setl
mov
cwtl
inc
sub
cmpsl
and
outsl
jmp
imul
outsl
adc
push
fstpl
mov
push
stos
daa
sub
add
xor
xchg
xchg
or
ror
add
loope
mov
fbld
adc
push
push
cmpb
adc
mov
sbb
adc
dec
sbb
imul
iret
dec
mov
mov
inc
sbb
inc
mov
popl
lods
daa
aad
sahf
sub
out
cmp
fs
fcmove
movsl
pop
insb
pop
add
mov
dec
call
test
xlat
or
lds
shll
out
test
adc
fisubrs
xchg
shlb
jno
leave
lahf
mov
cmp
jge
dec
das
mov
dec
cmc
imul
mov
iret
pop
ds
xlat
pop
push
and
je
out
test
pushf
sahf
jbe
filds
in
pop
shrl
in
pop
push
mov
rcrb
sub
rorl
int3
out
xor
call
jl
inc
xchg
das
push
pop
push
jbe
pop
bound
js
xchg
adc
subb
xor
mov
in
popa
pop
ret
lcall
mov
push
cwtl
xchg
sahf
inc
out
cmp
mov
sti
stos
jp
inc
stc
cmp
sub
popa
or
insl
jns
or
sbb
leave
jae
sub
adc
sbb
sub
xchg
out
xlat
call
pop
sbbb
adc
data16
idivl
jbe
inc
in
dec
pop
out
outsb
sarb
cmpsb
in
andb
daa
test
sub
pop
out
xor
pop
lret
pusha
int
push
mov
mov
jge
mov
mov
inc
jecxz
fs
negb
or
mov
test
add
fcomp
cmp
add
xlat
dec
pop
mov
dec
nop
andl
push
add
lds
inc
je
fnstsw
ja
xchg
mov
lods
mov
mov
jge
pop
dec
jg
addl
xchg
in
or
jmp
jecxz
ja
adc
cmpsb
push
pop
cmp
fcmovbe
pop
push
inc
lods
pop
push
inc
push
pop
mov
into
push
adc
pop
lcall
out
push
addr16
cs
cli
cwtl
enter
pop
inc
cwtl
or
fldenv
fbld
shl
ljmp
jp
add
and
mov
mov
or
add
lahf
and
mov
xchg
test
loop
or
dec
enter
xor
xor
fisubs
pop
or
fwait
pop
dec
aam
push
cmp
in
out
mov
jnp
inc
push
sbb
xor
and
pop
test
or
je
cmpsl
xchg
outsl
pop
mov
repz
xchg
rorb
mov
shlb
inc
movsb
push
push
and
or
lock
lret
or
pop
jmp
xchg
cmpl
adc
sub
sbb
popa
sbb
daa
lcall
repz
dec
dec
aaa
and
push
into
into
lods
scas
test
sahf
stc
add
adc
sbb
push
mov
xor
xlat
push
jle
ret
test
dec
mov
leave
xchg
lods
xchg
push
mov
dec
and
and
pop
ret
add
mov
fstpl
or
lcall
mov
xor
sbb
and
shrb
mov
mov
lahf
mov
or
ror
movsl
xor
jb
add
dec
je
leave
inc
mov
pop
cmp
push
jne
xchg
fisubs
xchg
push
rclb
cs
or
adc
enter
fadds
push
pop
sub
imul
xor
aam
inc
mov
jle
out
addr16
dec
test
push
ret
aad
mov
pop
lods
mov
jle
int3
in
addr16
dec
ljmp
lret
rorl
movsl
dec
rcrl
fsubrs
and
jo
xchg
jg
dec
jae
dec
push
leave
ljmp
fs
add
int3
fldt
lods
jno
test
mov
roll
fcoms
insl
ret
inc
or
push
aaa
add
xchg
push
mov
dec
rolb
fbld
ret
test
enter
cld
test
loope
sahf
xor
addr16
test
aad
cmp
mov
arpl
mov
sbb
fxch
movsb
cmp
push
enter
mov
dec
xchg
ja
sub
idivb
lret
movsl
lret
lock
xchg
sbb
push
leave
cmc
cmpsl
mov
jb
sub
pop
les
mov
fs
sbb
mov
push
sbb
xchg
fwait
sub
das
push
dec
jge
adc
xchg
cli
test
cmp
fwait
les
loope
lods
pop
aam
js
cld
fst
pop
sub
push
sub
xchg
dec
cmpsb
jnp
fnstcw
jae
and
adc
jbe
adc
mov
ror
neg
mov
mov
push
sbb
mov
jb
icebp
pop
xor
cwtl
leave
dec
shl
pushf
ds
lea
int3
adc
add
out
sub
mov
and
mov
ja
fs
inc
movsb
inc
sub
push
imul
xlat
ficomps
xchg
shll
sbb
gs
push
inc
mov
add
mov
dec
mov
lods
mov
dec
lea
mov
xchg
std
loope
xorl
jmp
lds
xchg
or
imul
outsl
ljmp
lret
int3
push
mov
xchg
rorb
pop
adc
fidivl
inc
xorl
and
and
lods
lea
and
push
push
inc
ret
cmp
push
ja
xchg
push
jmp
fidivrs
out
xlat
dec
push
aas
popf
cwtl
mov
xor
iret
jno
inc
into
out
sbb
mov
dec
push
popf
push
jl
jge
arpl
pop
aam
or
or
mov
cs
rcrl
or
fisubrs
lds
dec
test
loopne
or
hlt
imul
imul
shll
roll
inc
mull
push
shr
sub
jle
adc
inc
pop
pop
movsl
inc
or
mov
xchg
out
test
aaa
pop
lock
and
and
pop
sbb
jae
jb
pusha
push
push
xor
mov
push
mov
out
cmp
sbbl
push
pop
jb
iret
out
test
sbb
pop
fs
repz
jecxz
cmp
ja
pop
imul
pop
push
cmp
loopne
insb
mov
repnz
push
add
fstpt
out
mov
mov
xchg
mov
pop
int
into
jge
jns
sti
aad
lds
aad
xchg
fidivl
in
jg
fcompl
enter
xchg
pop
arpl
icebp
dec
test
insb
jmp
pop
mov
rcr
pop
popa
arpl
jp
pop
in
sbb
orl
ret
in
clc
jmp
aad
mov
and
hlt
jne
pusha
bound
pop
adc
pop
lret
cmp
xor
js
xor
mov
je
out
ret
xchg
sbb
push
call
leave
stos
cmp
push
mov
sub
push
xchg
rcll
xor
scas
jecxz,pn
mov
loopne
push
jg
mov
mov
shr
xor
imul
dec
adc
ret
repnz
int
leave
stos
lods
xchg
jmp
xchg
push
add
daa
and
xor
clc
adc
adc
jl
sbb
sub
nop
push
leave
jnp
inc
mov
ror
mov
lods
adc
in
inc
inc
xchg
sbb
dec
mov
dec
cmpsl
imul
rolb
jl
rcrb
push
fisubrs
xor
xchg
and
sbb
sahf
mov
rcll
push
push
jmp
fidivl
mov
out
push
push
clc
and
repnz
imul
mov
fwait
daa
aas
fsubrl
and
rcrb
push
outsb
cmp
xor
test
jp
jo
mov
jecxz
stos
xor
inc
out
pop
pop
js
xchg
mov
testl
fwait
shlb
and
jg
fsub
es
or
scas
mov
mov
mov
in
cwtl
mov
jle
jb
jo
mov
andb
xor
push
sahf
daa
outsl
lods
sub
inc
dec
popf
mov
jmp
lods
sbb
mov
imul
jge
sub
pop
cmpsl
mov
sub
nop
inc
fisubrs
push
fst
add
shr
or
stc
sub
mov
sub
dec
jno
scas
int3
outsb
or
pop
fxch
jne
je
mov
mov
scas
mov
outsl
push
sub
cld
in
xchg
xchg
adc
mov
push
cmp
rcrb
into
fnsave
mov
pop
mov
das
lret
sub
pop
push
je
sbb
into
add
imull
inc
fcmovb
aam
lods
pop
add
adc
dec
adc
adc
mov
jnp
sbb
sbb
out
std
repz
xor
mov
dec
mov
adc
aaa
repz
in
add
aam
mul
pop
data16
mov
cmp
mov
ficompl
mov
push
pop
test
adc
xchg
push
incb
out
pusha
add
push
xor
stc
mov
outsb
lods
aam
aas
scas
dec
pusha
aaa
mov
sahf
pop
and
dec
jp
popa
and
iret
ljmp
dec
mov
int
movsb
movq
jmp
mov
pop
adc
cwtl
loopne
pop
ret
sarl
in
push
adc
out
mov
js
aad
mov
cltd
xor
mov
inc
out
mov
addr16
mov
hlt
decl
jl
jp
lea
and
mov
adc
push
icebp
pop
mov
push
xor
jbe
fs
sub
das
and
cwtl
xor
mov
or
jecxz
sub
clc
cmp
xchg
add
mov
call
mov
stos
jae
xchg
fs
add
sub
xchg
xchg
rcrb
leave
insl
mov
sbb
dec
xchg
shll
and
pop
aas
cmpl
sub
aad
xchg
cmp
xchg
jl
mov
mov
cmp
jge
leave
outsb
ljmp
sub
pop
cmp
cld
in
daa
cmp
or
sbb
xchg
js
jge
mov
jle
add
fsubl
fsubrs
out
je
push
movsl
and
js
jnp
mov
cld
into
cmpsb
out
ficoml
inc
stos
push
test
arpl
popa
add
xor
out
add
popa
cmp
mov
leavew
pop
and
out
es
mov
jmp
push
mov
std
adc
lock
les
imul
outsb
out
jmp
out
dec
xor
shr
and
adc
mov
push
fdivr
inc
and
jmp
loopne
scas
adc
add
and
xchg
adc
adc
in
outsl
leave
dec
lock
mov
mov
pop
cmp
xchg
mov
pop
fisubrl
cmpsl
add
sub
mov
pop
push
cmp
das
daa
dec
cmp
or
fists
mov
push
icebp
sahf
jno
int3
mov
jae
cmc
scas
or
rol
test
xor
mov
rcll
xchg
adc
mov
aaa
movsb
pusha
or
push
push
mov
push
pop
loopne
sbb
mov
or
enter
incb
lock
mov
nop
pop
adc
sub
pop
lret
leave
adc
rclb
outsl
add
jae
into
sbb
push
xor
jno
sbb
or
sarb
xchg
inc
mov
push
jo
add
fisttpl
gs
test
xorb
roll
and
dec
cltd
jmp
popf
sbb
push
scas
add
out
push
xchg
sbb
fbld
pusha
lahf
pop
aaa
pushf
xchg
push
aad
enter
pusha
fbstp
loopne
push
mov
test
add
cmc
ja
mov
cmc
mov
aad
add
popa
dec
ret
ret
testb
daa
test
lahf
enter
pushf
js
std
out
aas
dec
fnsave
pop
cmc
dec
icebp
test
dec
sub
pop
dec
and
test
sbb
mov
cmp
fbld
jecxz
ss
lret
loop
add
div
pop
push
xchg
ljmp
sbb
mov
aas
add
pop
test
clc
cli
lods
ss
xchg
and
arpl
rorl
outsb
mov
fbld
bound
notl
mov
test
jns
inc
fcoml
jne
mov
lock
test
test
inc
jecxz
mov
xchg
dec
mov
push
mov
out
insb
mov
sub
mov
push
cltd
or
and
xor
mov
in
fsubrs
shr
xor
mov
xchg
and
xlat
and
pop
mov
imul
dec
push
es
jno
pop
sti
adcb
add
inc
jg
dec
call
cmp
inc
pop
popa
jle
adc
and
sub
popf
pop
push
out
stc
sahf
xchg
cs
push
add
aaa
mov
pop
cmp
popf
add
pop
push
or
jns
in
jge
xchg
push
mov
mov
xor
les
rolb
inc
mov
mov
fisttpl
mov
rol
sbb
or
cli
subb
jne
and
and
cmp
mov
jp
es
mov
punpckhbw
mov
pop
pusha
dec
jbe
and
lea
nop
xor
sub
mov
inc
xchg
and
cmp
test
pop
lods
and
ret
jge
and
inc
add
push
test
push
int
ljmp
xchg
and
addr16
mov
fidivrs
rorl
jns
sub
sub
fs
xor
pop
cs
lea
mov
pop
xchg
push
xchg
mov
rorb
pusha
xchg
les
jae
cld
jp
sbb
inc
sahf
ficoml
jl
rcr
pop
call
cmp
repnz
into
jl
fimuls
in
jecxz
jno
push
xchg
in
xchg
adc
sub
adc
sahf
jp
scas
pushf
pop
cmpl
out
outsb
sbb
orl
fisubrl
clc
and
in
loop
or
xor
mov
int
call
sti
xchg
mov
gs
inc
cwtl
xchg
or
cltd
push
movsb
and
xor
clc
adc
nop
inc
repnz
pop
pop
loop
jno
shll
fnstcw
cmpsl
and
into
push
int3
nop
mov
loope
dec
les
and
push
frstor
adc
push
in
xor
push
in
cmpsb
popf
adc
test
sbb
or
aas
inc
mov
lods
divb
rcll
mov
jbe
lea
xor
sub
test
sti
ds
out
push
mov
xchg
hlt
int3
ret
jcxz
sbb
pop
ljmp
push
sbb
ja
movsl
mov
jns
lret
push
fsubrl
jae
fistl
cmp
fiaddl
sub
loopne
sub
sub
xor
out
xchg
fcompl
mov
dec
xchg
in
inc
movsb
out
fld
sbb
xor
mov
cmpb
dec
lret
mov
and
xchg
jb
add
aas
pushl
pop
int3
inc
adc
cmp
xchg
mov
mov
add
xor
aad
lahf
in
add
mov
lds
lods
rclb
enter
lods
pop
dec
xchg
je
int
cmp
add
sub
dec
mov
out
cli
fists
mov
pop
popa
outsl
daa
sbb
ret
add
mov
mov
pop
in
add
or
push
push
xor
push
ret
sbb
ja
mov
lret
jmp
jo
lret
cwtl
clc
sarl
pop
inc
lcall
imul
jle
xchg
push
sub
sarl
stos
lcall
jge
movsb
punpcklwd
jno
mov
outsb
dec
xlat
sub
enter
adc
inc
mov
pop
xor
neg
or
bound
push
dec
out
cmp
out
scas
add
rcr
idivl
or
jns
mov
mov
sub
push
mov
cmc
inc
inc
mov
stos
aaa
mov
imul
jae
sbb
repnz
insb
aad
movsl
mov
mov
pop
pushl
push
push
xchg
imul
adc
fucomi
pop
lahf
push
add
and
mov
jae
push
jp
and
xor
push
mov
outsl
hlt
out
lds
in
les
test
test
scas
sbb
and
inc
mov
mov
and
rclb
mov
or
mov
nop
fnstcw
add
jmp
cmp
cmpsl
pop
sub
lahf
and
push
or
adc
inc
test
ret
jnp
into
dec
add
mov
mov
jne
mov
scas
shll
test
out
push
insl
loop
call
cltd
aad
fidivrl
dec
mov
push
dec
or
cld
cmpsb
fcmovnbe
bound
dec
jecxz
in
stos
jmp
adc
cli
fildl
xor
xlat
inc
fsubrp
dec
subl
stos
mov
fwait
lods
jl
jecxz
fdivrs
pop
xchg
pop
inc
ja
pop
jne
outsb
mov
stos
mov
fcmovne
mov
sbb
xor
xor
gs
test
jbe
push
mov
inc
jl
push
pop
adc
and
mov
adcb
mov
jp
xor
inc
inc
pop
cmp
dec
subb
cwtl
mov
and
out
push
sbbl
inc
pop
push
rorb
fnstcw
push
push
adc
adc
fcomip
dec
leave
and
cwtl
jle
into
mov
dec
jns
mov
shlb
jne
mov
mov
ss
bound
push
jl
insl
sub
in
push
shlb
pop
enter
or
ret
popa
lods
inc
popa
sub
cmpsb
push
mov
mov
enter
sub
dec
adc
test
inc
or
adc
loopne
sub
cwtl
rcrb
popf
dec
inc
dec
dec
inc
pusha
repnz
sub
dec
jecxz
sbb
xchg
pusha
xor
jle,pn
icebp
add
leave
cmp
xchg
adc
stc
lret
outsl
xor
pop
jl
call
lcall
daa
inc
xchg
dec
clc
lds
inc
pop
imul
inc
out
pop
sub
ljmp
inc
jl
cmp
imul
xor
flds
vmptrst
loope
or
mov
fstpl
fcoms
cmp
xor
iret
ja
dec
addr16
jbe
mov
or
call
mov
ds
outsb
push
add
call
add
sub
xor
mov
pusha
loope
push
mov
in
sub
ror
fisubl
inc
or
mov
in
fnstcw
xchg
stc
popf
lcall
mov
mov
lods
iret
sti
adc
in
adc
push
data16
xlat
dec
push
inc
mov
adc
ja
movsl
and
push
popf
pop
cmp
addl
sub
pushl
out
out
call
pop
xchg
idivb
call
mov
insl
add
js
out
and
sub
jp
adc
xchg
xor
cmp
outsb
push
jle
sub
ret
cmp
inc
enter
pop
in
xchg
insb
test
lret
test
xorb
mov
ret
mov
sub
inc
fcompl
jge
jno
jbe
cmp
cltd
cmc
lods
sbb
mov
int3
test
icebp
mov
dec
pop
mov
rorl
adc
lcall
inc
and
xchg
in
jo
cmpsb
xchg
mov
sahf
lret
outsl
mov
or
or
popa
clc
mov
adc
subb
aas
jno
sti
add
divl
jno
mov
loop
outsb
repz
sub
cmp
aaa
sti
enter
fs
loope
push
fdivrp
add
repz
addb
shll
fs
or
in
xchg
pop
mov
and
inc
daa
aaa
jo
test
enter
mov
ljmp
adc
loop
ds
mov
cmpsb
scas
lahf
mov
sbb
pushf
push
lods
push
add
inc
movsb
xlat
add
addr16
pop
push
out
dec
mov
jnp
pop
adc
mov
lcall
xor
pusha
xlat
adc
push
mov
in
and
fidivrl
loope
in
pop
loopne
scas
fidivrs
mov
jne
daa
and
xchg
pop
cmp
ficoms
rcl
dec
clc
ja
or
jo
push
mov
or
and
jnp
or
aaa
jbe
push
repnz
shll
sub
hlt
adc
sbbl
cs
and
addr16
pop
es
xchg
dec
xor
ret
push
pop
pop
addr16
cmp
shrl
movsb
dec
add
dec
inc
pop
mov
sub
or
cli
lret
jns
and
stos
lahf
pusha
push
scas
add
psubsw
cmpsl
mov
into
notb
out
dec
mov
push
pop
idivb
mov
cld
cwtl
mov
out
adc
inc
test
in
cmc
movsb
mov
push
scas
push
push
addr16
fldcw
je
xor
sub
cmp
lods
in
pop
js
ja
push
and
out
test
dec
vcvtps2dq
lret
loope
lret
stos
push
in
loope
cmpsl
cmp
icebp
inc
adc
outsl
inc
xchg
and
inc
sbb
jg
icebp
lods
sub
jge
xor
xor
and
or
notl
jmp
bound
es
je
adc
ficoms
ficoml
sarl
xchg
inc
lret
ljmp
je
scas
and
add
lret
stos
mov
int3
lds
and
cwtl
hlt
inc
or
sbb
sti
movsb
pop
enter
cmp
push
xor
lock
adc
ss
push
mov
out
shlb
andl
push
fwait
pop
test
pop
cmp
cmp
iret
lret
pop
sub
notl
and
pusha
stc
lods
dec
int3
mov
mov
push
repnz
orb
in
mov
outsb
adc
cmp
add
loopne
ljmp
cs
xor
int
lret
shlb
jo
hlt
mov
lock
push
lods
insb
outsb
dec
sub
idiv
add
test
decb
add
jne
outsb
sbb
nop
add
daa
lret
scas
mov
pop
add
push
movsb
lcall
pop
xchg
je
mov
adc
movhps
xchg
dec
lret
push
push
je
clc
cltd
stc
stos
cltd
xchg
xor
sbb
sarb
rolb
cmc
pop
add
shll
push
shrb
std
rolb
jbe
insl
push
mov
push
xor
mov
sbb
mov
sbb
inc
xchg
adc
mov
popa
dec
pop
add
mov
xchg
sbbb
popa
test
cwtl
dec
or
inc
lcall
dec
lret
daa
popa
call
fwait
pop
sbb
mov
jbe
xchg
popf
cmp
iret
adc
movsb
xchg
adc
mov
repz
add
and
dec
dec
mov
nop
rorl
ret
dec
mov
movsb
mov
test
test
cmp
emms
add
push
popa
sub
cli
dec
mov
je
je
sbb
mov
das
mov
out
mov
mov
mov
sti
fisttps
inc
cmpsl
add
out
xchg
arpl
add
push
xor
pop
in
cs
and
jne
add
in
daa
push
mov
xchg
fnstcw
dec
dec
pop
stos
fisttpll
enterw
inc
xor
lret
mov
outsb
inc
cmp
adcl
jge
aas
nop
loop
and
js
imul
cli
inc
cltd
pop
adc
dec
outsl
lcall
stc
adc
loopne
fistl
xchg
icebp
repnz
outsl
out
mov
sbb
jnp
loop,pt
xor
mov
mov
or
mov
sbb
sub
cltd
inc
enter
mov
xlat
cmc
cmp
out
sub
in
je
and
stos
cmp
daa
jne
adc
adc
call
inc
jns
std
jmp
cmp
dec
pop
icebp
mov
popf
push
add
lret
movsl
insb
cmpsb
and
int3
jl
test
mov
lret
inc
popl
hlt
mov
inc
inc
fiadds
mov
aam
inc
push
dec
cwtl
and
xorb
insb
adc
insb
sbb
xor
xor
cmp
sbb
into
mov
int3
mov
sub
cmp
mov
push
xchg
cmp
ficoml
in
cmp
lods
add
in
mov
and
sub
cmpsl
mov
aad
movb
stc
jns
push
mov
cmp
and
outsb
lock
add
int
out
cmpsl
cltd
mov
adc
rcrb
mov
xorl
je
cld
loopne
test
lock
rcr
jmp
clc
jns
and
jge
jne
aas
cli
add
sarl
mov
cmpsb
xlat
mov
xchg
adc
xor
loop
sub
fidivs
mov
add
sbb
inc
jge
daa
push
sub
pop
fwait
xor
mov
push
and
push
pop
test
dec
add
sub
ficoml
daa
js
test
mov
movsb
mov
imul
loope
dec
mov
push
incl
test
fiadds
jae
out
cld
or
mov
idiv
jmp
sbb
inc
loop
insb
fadds
clc
icebp
cld
idivb
imul
cmp
sbb
pushl
pushf
xor
je
test
xor
adc
xchg
cmpsl
aas
mov
xchg
lahf
pop
ss
lea
xchg
mov
cmp
repnz
mov
xlat
jbe
pop
les
aam
sbb
clc
adc
popf
pop
addr16
test
js
jb
inc
ss
repz
xlat
sbb
sbb
xchg
test
out
sub
lret
filds
xchg
ljmp
dec
mov
or
and
push
mov
mov
dec
stc
xor
lea
addps
mov
in
jg
icebp
add
xchg
pop
xchg
int3
dec
mov
fisttps
icebp
std
lea
nop
xor
popa
or
jb
cs
xor
negl
sbb
stc
mov
loop
fidivl
loopne
jecxz
pop
inc
cld
adcl
dec
les
and
mov
sti
pop
mov
leave
cli
in
push
add
push
ds
fisttps
add
pushf
xlat
adc
push
adc
push
daa
test
dec
dec
and
cltd
push
dec
sbb
lret
mov
shl
inc
enter
jg
sbb
mov
movsb
test
ljmp
mov
daa
sbb
cs
and
mov
add
jbe
negl
and
sbb
fucomp
stos
xor
sub
mov
aam
or
add
js
jg
stos
inc
add
xchg
jae
pop
xor
cmp
cmpsl
imul
adc
bound
push
xor
cmp
mov
cmp
pop
ja
in
mov
cmpb
adc
add
pop
dec
xor
jne
dec
lcall
decl
bound
mov
std
add
jns
adc
cmp
packuswb
lds
cmc
pop
idiv
rcrb
xchg
or
in
pop
cmc
subl
cmp
int
outsl
push
out
into
movsb
xchg
stos
stc
rcr
das
mov
icebp
sub
daa
sbb
push
gs
cltd
xchg
fadd
mov
test
or
mov
and
adc
mov
xchg
int
adc
mov
mov
sar
jne
pop
xor
jae
loope
rolb
popa
push
lret
ds
loope
add
pop
movsb
adc
outsl
mov
cwtl
cltd
sbb
adc
pusha
xor
jae
xlat
repz
sub
leave
gs
leave
bound
inc
sbb
je
out
push
and
mov
adc
adc
std
xchg
inc
push
cmp
out
fs
and
pushf
adc
in
jecxz
js
lret
sub
xchg
lods
insl
shlb
jmp
stc
xor
cmpsb
loopne
stos
mov
mov
test
cmp
jecxz
add
rorb
movsb
fisubrs
sti
adc
pop
jbe
cs
push
mov
push
imul
dec
out
mov
in
cmpsb
mov
cmp
scas
dec
or
in
xchg
out
cmpsb
jecxz
xchg
repnz
sbb
jmp
and
aam
shrb
cmp
mov
test
fists
inc
cmp
lock
cli
pop
pop
gs
jg
mov
shll
stos
push
xchg
rclb
xchg
lods
pop
inc
enter
jecxz
test
ret
jle
xor
aas
xchg
adc
inc
inc
loopne
jle
mov
mov
adc
movsb
fistl
inc
or
mov
pop
cmpsb
fwait
cmp
jmp
push
loope
faddl
add
adc
dec
clc
jge
xor
inc
dec
outsb
test
pop
js
add
mov
push
sub
pop
inc
aas
jle
stc
or
lea
aas
mov
xchg
jecxz
rcl
fbld
ja
jge
adc
sti
inc
dec
bound
dec
push
orb
fwait
or
incl
push
pushf
rcl
lret
inc
fstpt
int3
cmp
jmp
xor
jno
jo
sbb
jnp
imul
mov
push
sar
and
add
fsubl
out
mov
lahf
add
jno
and
pop
mov
lea
int
pop
std
iret
lods
xor
mov
pop
cmpsb
call
fwait
mov
cmp
xchg
pop
jne
mov
dec
push
jbe
pop
add
out
popf
jb
add
bound
mov
jnp
mov
mov
ds
imul
sub
push
adc
movsb
sub
and
push
hlt
stos
dec
mov
mov
adc
push
lret
push
or
gs
shll
pushf
push
xchg
push
bound
mov
xchg
cltd
jne
rcrb
mov
push
movsb
dec
inc
sbb
enter
mov
mov
aad
loopne
ljmp
push
imul
imul
inc
add
notb
fbstp
mov
xchg
dec
movb
std
cs
pop
int3
out
in
pop
sbbb
dec
test
stos
pop
and
fwait
or
and
iret
adc
add
repz
out
xlat
lret
jl
pop
scas
mov
mov
aad
mov
mov
add
aaa
repz
lock
popf
out
or
loopne
filds
adc
xor
inc
cmc
mov
add
jl
ret
rorb
pop
sub
test
iret
xchg
ret
je
adc
out
testl
inc
sahf
sbb
aas
insl
pop
int3
mov
push
scas
lods
pusha
add
adc
sbb
jns
call
mov
xor
cld
sbb
cs
roll
in
cmp
fsubs
cltd
scas
adc
gs
subb
fs
mov
stos
inc
pop
lea
cld
mov
xor
test
xor
loopne
mov
mov
dec
in
insl
or
add
leave
mov
cmp
mov
push
mov
xor
push
lahf
cmc
daa
cmp
jge
mov
sbb
repz
or
mov
mov
rorl
mov
cld
adc
dec
shll
cmp
xchg
int3
cmp
fadd
mov
popf
movsb
sbb
or
cmc
pusha
aam
push
add
cld
xor
push
insl
popa
pop
loopne
gs
pop
xorb
ret
sti
outsb
int3
dec
sub
push
xlat
ljmp
and
loopne
mov
aad
insl
adc
dec
adc
sti
scas
jbe
add
mov
in
inc
push
adcb
mov
push
or
mov
mov
lods
or
movsl
mov
call
xor
aam
out
or
pusha
dec
mov
cld
xor
data16
loope
fsub
jle
mov
pop
aam
sub
jnp
jns
adc
inc
add
push
xchg
dec
inc
sbbl
mov
mov
cli
fisubs
xor
cmp
popf
fwait
sub
mov
imul
mov
xor
fwait
dec
int3
js
or
loope
xchg
push
aam
loope
dec
fistpll
add
andl
sub
xor
aam
and
pop
push
and
cmp
sbb
int
repz
xchg
sbb
jp
lahf
jae
stc
pop
and
push
mov
fstpt
out
fstp
aad
mov
loopne
jmp
jnp
lret
sub
jl
rorl
cmp
push
push
out
cmp
mov
sub
mov
jmp
pop
pop
adc
inc
xlat
outsb
test
dec
int
mov
aam
rcl
push
mov
mov
add
mov
test
shll
sbb
dec
ljmp
sub
dec
and
les
inc
cld
rolb
bound
push
and
sub
out
xchg
hlt
sub
das
es
outsl
add
out
repnz
add
pop
pop
or
mov
pop
adc
mov
pop
jno
shll
in
sbb
jae
sbb
in
xchg
loope
repnz
insl
and
test
or
jle
cli
mov
xchg
lods
sahf
cwtl
or
xchg
adcb
sbb
or
cli
out
cld
sbb
adc
pop
jns
pop
mov
out
daa
add
sub
xchg
andb
sub
sbb
pop
jo
adcl
cmp
inc
js
movsb
pop
jne
cmp
jae
sar
dec
out
jge
sbb
sbb
sbbb
add
ret
stos
add
stos
cltd
int3
inc
dec
repnz
es
cmpb
lcall
jns
add
in
or
lods
dec
out
out
push
xchg
fisttps
push
stc
add
mov
shlb
mov
jbe
insb
mov
push
and
push
cmp
ds
scas
addb
fcomps
sub
mov
xor
or
add
inc
test
popa
or
in
hlt
or
adc
sbb
aas
test
test
or
fsubrl
adcl
fnsave
add
scas
jne
repz
mov
and
push
lret
sbb
ret
loop
data16
xor
orb
call
adc
jne
jo
push
js
sar
pop
mov
cmp
movsl
pop
mov
sahf
call
loope
cltd
in
punpcklwd
inc
negb
cmpsl
lahf
cli
divl
movsb
ficoms
sub
es
pop
lds
mull
mov
popf
push
out
int
dec
in
dec
out
outsl
ljmp
dec
and
testb
adc
mov
push
push
jmp
addr16
aas
and
mulb
sahf
pop
xchg
in
push
or
pop
int3
ror
or
cmp
mov
xchg
and
push
loope
push
dec
jge
hlt
push
xchg
clc
jne
cmc
daa
xchg
push
aaa
mov
clc
fwait
or
xchg
mov
les
out
push
out
mov
pushl
push
mov
or
push
mov
out
test
das
es
mov
fimuls
out
lret
lahf
and
jg
jne
cs
cwtl
std
dec
mov
mov
xor
lds
rcr
push
pop
xchg
repz
jne
lods
mov
sub
pop
and
xchg
clc
out
ljmp
mov
inc
cwtl
inc
fsubr
jmp
aam
scas
mov
inc
lcall
cli
pop
xor
xor
pop
popf
test
enter
and
jg
mov
repz
xchg
cmp
adc
lods
les
jmp
jb
or
mov
push
push
mov
fldl
adc
mov
jle
jno
sbb
in
data16
testb
shll
sub
bound
adc
pop
dec
add
mov
adc
xchg
adc
and
int3
clc
mov
jns
shrb
sbb
fucomi
or
lea
nop
inc
aam
int
in
and
gs
dec
call
loopne
mov
in
shrl
mov
inc
fnstsw
xchg
outsb
push
rcrl
or
call
lahf
shl
in
sub
sbb
div
mov
add
out
in
xor
cmp
cltd
daa
push
inc
xchg
pushf
inc
jp
test
or
filds
xlat
sarl
ss
mov
andb
jb
sub
push
xchg
cmpb
and
aaa
sbb
sbb
sbbb
and
dec
dec
jg
mov
test
bound
sbb
inc
cmp
push
jg
loop
les
movaps
and
push
out
mov
jmp
test
cmpsl
xchg
sahf
sbb
jb
lcall
icebp
add
push
xor
and
inc
enter
cmp
cmc
adc
xchg
xor
loope
inc
xor
xchg
notl
inc
inc
scas
scas
push
jno
pusha
cmp
psadbw
leave
hlt
xor
sub
jle
aad
out
pop
scas
xchg
jae
loopne
cmp
movb
mov
shl
jle
jb
insl
jmp
jb
mov
mov
push
xchg
lret
loope
sub
mov
inc
loope
jnp
mov
into
int3
jp
jle
insl
push
sbb
xchg
or
and
mov
and
bound
ja
mov
je
mov
dec
pop
ret
ds
push
inc
or
sbb
push
sbb
int3
add
sarb
jo
mov
fscale
inc
clc
pop
pop
and
mov
pop
dec
or
rcrb
mov
push
scas
xor
inc
in
xchg
or
adc
xchg
int3
clc
xor
xchg
jecxz
or
ret
mov
add
std
cmc
push
stos
mov
clc
mov
stos
call
fnstsw
out
movb
std
mov
cmp
inc
xchg
std
cmp
mov
lcall
jecxz
xchg
imul
shrl
mov
xchg
nop
push
adc
xchg
xchg
mov
mov
mov
jno
lcall
inc
mov
jbe
or
mov
xchg
inc
dec
cmp
jno
in
sti
ja
mov
mov
jns
pop
mov
daa
mov
dec
sub
pop
pop
pushf
push
inc
sub
fdivs
sub
cs
xchg
mov
outsb
jp
xchg
sarb
add
mov
sbb
or
aaa
sbb
scas
and
cmp
lret
fildll
icebp
repnz
int
or
and
xchg
and
xlat
sub
pop
daa
andb
jp
mov
mov
cli
lock
addr16
xor
adc
fbld
movsl
test
insl
notl
std
clc
pop
sahf
loop
or
outsb
xchg
adc
pop
fucomi
or
aaa
into
jp
add
adc
add
call
std
jnp
xchg
imul
lret
mov
scas
inc
jp
movups
fldt
mov
lods
cld
les
and
lcall
lods
push
aas
das
sub
out
lock
lods
mov
sbb
in
ljmp
ja
test
xor
jne
in
add
ja
lods
les
or
mov
inc
decb
dec
mov
cs
lcall
and
scas
push
cmp
ljmp
out
push
cld
out
cmp
mov
ficoml
imul
push
or
push
sbb
jecxz
fistpll
jecxz
cmpsl
mov
incb
xor
jg
repnz
jns
mov
jg
pop
inc
push
adc
pop
dec
inc
sub
mov
xor
insl
aam
aaa
jg
insb
inc
cs
subl
xchg
scas
cltd
mov
in
jle
xlat
es
es
push
lea
xor
push
jno
add
sub
mov
inc
lahf
and
cmpsl
mov
xor
aaa
and
push
xchg
scas
out
test
gs
es
or
idivb
mov
xlat
cmp
loopne
lods
push
inc
sbb
test
movsl
xor
fs
lret
pop
sar
ja
loope
in
int3
inc
and
out
cld
sbb
sub
loop
testb
mov
sbb
fistl
fistl
mov
push
in
gs
dec
cwtl
ficomps
jecxz
dec
mov
lahf
push
mov
mov
adc
ret
call
das
jne
pop
xor
and
daa
aas
or
mov
rolb
mov
shl
sti
cmp
in
sbb
orl
xchg
sahf
outsb
push
in
xchg
sub
ds
pop
pop
out
pop
mov
test
nop
push
outsb
or
fwait
jle
mov
sbb
cmpsb
mov
jge
mov
sbb
jb,pt
shll
mov
ja
add
cmp
in
daa
mov
shrb
inc
cmpl
mov
inc
or
add
daa
dec
int
mov
xor
mov
iret
sbb
cmpl
popf
sbb
sbb
jmp
push
pop
fdivl
cmp
mov
fildll
lds
sbb
lahf
rclb
cmp
push
pushl
in
sbb
ja
leave
cmp
add
loope
ret
bound
movsb
lods
fsubl
sbb
cld
xor
insb
lahf
pop
pop
push
mov
push
lret
ljmp
cmp
pusha
dec
stos
jecxz
xor
dec
in
aaa
xchg
das
or
mov
push
lahf
movsb
in
outsl
jecxz
mov
popf
outsl
mov
andl
or
dec
sub
push
xchg
lods
sub
pop
sbb
shlb
lea
and
pop
clc
fnstenv
jecxz
fdivs
nop
add
mov
and
int
popf
push
xchg
cwtl
lods
gs
inc
mov
or
jl
loope
pop
ss
stc
mov
test
dec
iret
pop
ss
scas
jb
clc
cmp
call
addb
xchg
out
insl
insl
jo
jecxz
outsb
cmp
xchg
mov
jne
popa
insl
mov
test
mov
insb
sbb
adc
pushf
mov
push
dec
mov
sysenter
test
lods
jno
int3
rcrl
xor
adc
mov
addr16
sbb
xchg
ja
xchg
push
mov
test
stc
jnp
loopne
adc
imul
and
adc
push
mov
inc
inc
rcrl
orb
dec
ret
adc
jbe
outsl
mov
rol
ret
adc
ljmp
sbb
daa
add
adc
push
cs
fwait
loopne
stos
les
xor
or
es
int3
mov
pop
es
loop
mov
lock
adc
add
arpl
dec
ficoms
xor
adc
sub
mov
stc
mov
ss
fcompl
sbb
pushf
rorl
or
mov
xchg
in
test
sarb
lret
jecxz
jb
popa
dec
sub
es
dec
fadds
mov
aad
pop
pop
insb
or
icebp
lret
cmp
les
fsubrl
sbb
inc
imul
pop
in
add
daa
push
les
or
mov
sub
or
cmp
repnz
rcll
or
icebp
xchg
stos
jno
adc
test
andb
pushf
test
cmp
adc
add
push
adc
and
inc
xor
rorl
popa
add
ffreep
imul
or
daa
jg
popa
repnz
xchg
xor
mov
jns
and
cld
pop
loopne
sbb
jge
leave
mov
push
xchg
in
call
mov
stos
rorb
outsl
or
fnstsw
pop
cmpb
sbbl
fidivs
mov
lods
pop
test
push
jbe
push
sub
pop
ja
cmp
adc
cmp
in
jns
jle
push
mov
inc
stos
ss
jns
into
ss
sub
das
jecxz
inc
in
sbb
lret
xchg
dec
cmpsb
popa
pushf
outsb
out
mov
fisubs
sbb
lods
pop
cmc
mov
adc
jmp
add
mov
cli
fwait
sti
and
dec
movsb
icebp
add
int3
test
out
cmp
sub
adcb
in
pop
leave
mov
mov
lcall
outsl
mov
or
fsubrp
fdivr
adc
mov
movsb
add
jle
mov
mov
mov
push
push
mov
mov
mov
and
mov
pop
add
push
inc
dec
pop
push
pop
jp
sub
pop
cmp
imul
push
jns
leave
fld
sti
pop
add
je
add
push
and
in
mov
movsl
cwtl
mov
ret
inc
stc
lods
out
push
cmp
sub
adcb
xchg
ret
outsb
pop
aas
std
rcrl
ja
cmp
pop
mov
insb
lret
jne
add
icebp
hlt
rcrb
jno
sbb
imul
inc
jno
enter
insb
mov
add
and
dec
adc
or
jge
xlat
outsb
mov
sarb
daa
and
sub
inc
cmp
cmp
dec
stos
and
pop
ljmp
enter
mov
jae
mov
pop
push
scas
stc
pop
hlt
sbb
mov
lods
adc
outsb
outsb
add
cmp
mov
leave
mov
inc
ljmp
outsb
fimuls
cltd
in
out
pop
sbb
or
out
cld
xchg
lcall
int
mov
pop
xchg
or
add
repnz
xchg
ret
imul
sub
mov
xor
mov
mov
dec
cmpsl
or
mov
btc
loop
push
int3
aas
add
fucom
pop
xchg
push
sbb
movsb
repz
mov
mov
inc
pop
ror
push
out
inc
sub
xchg
je
cli
mov
daa
xor
jno
mov
sahf
pusha
inc
mov
sbb
lret
nop
loope
or
cli
idivl
or
test
push
push
into
fdivs
or
push
stos
sbb
enterw
lea
scas
ret
fistl
push
dec
paddusw
hlt
pop
rcll
xchg
push
jnp
mov
stc
pop
mov
inc
xor
fbld
cmp
insb
aad
nop
cli
pusha
xchg
cmpsb
nop
lods
mov
xchg
mov
push
cld
test
sbb
adc
sarb
mov
pop
lahf
pop
cmp
fcom
adc
data16
and
jnp
pop
or
sar
xchg
mov
or
aaa
mov
mov
and
sbb
in
ss
and
xchg
fisttpl
pop
mov
cwtl
sub
push
mov
gs
push
mov
xor
cmpsl
test
and
mov
mov
pop
xchg
clc
or
addl
lods
out
repnz
dec
out
xchg
push
add
sub
mov
pop
mov
jge
stos
clc
jle
outsl
cltd
adc
loope
mov
adc
ficoml
sub
pop
xchg
mov
xor
fs
sub
call
loop
pop
cmpsl
rorl
lret
jns
pusha
pop
popf
imull
repnz
sbb
xchg
out
push
or
or
insl
faddl
jmp
ret
insl
mov
cld
pop
cmpsl
xchg
fimull
outsl
cli
loope
mov
shrb
pop
mov
jae
iret
sbb
ss
insb
jmp
filds
fwait
push
cmpsb
lock
pop
mov
mov
xor
push
popf
mov
je
jmp
push
lock
dec
je
popa
insb
adc
push
push
or
neg
mov
stos
sbb
jmp
push
mov
loope
test
mov
or
jae
cmp
das
mov
addr16
dec
and
mov
adc
test
loop
shr
ja
cwtl
xchg
dec
lret
fisttpll
inc
dec
mov
je
xor
aam
icebp
lock
inc
jae
fs
dec
pop
movsl
cmc
mov
jae
adc
popa
inc
fs
xchg
and
dec
push
std
jae
adc
out
mov
cmc
xchg
sarl
out
pop
roll
adc
test
aaa
rol
leave
cmp
adc
sbb
push
dec
sub
jecxz
adc
and
xchg
lea
sub
jb
inc
jl
pop
mov
and
pop
sti
lret
test
es
push
xchg
imul
outsl
add
inc
push
mov
push
adc
ljmp
pop
or
add
lds
mov
sti
sbb
xor
mov
je
incb
stc
in
adc
mov
clc
cltd
adc
sub
mov
adc
popf
cs
push
mov
nop
cmp
icebp
push
xor
data16
into
mov
jo
loope
pusha
std
test
xchg
dec
inc
inc
ljmp
aas
inc
int
das
adc
clc
dec
push
jo
mov
push
jne
sbbl
mov
sub
adc
loope
push
push
or
mov
inc
cmpsb
inc
push
sbb
sbb
push
out
lock
and
pop
and
scas
add
sbb
mov
jmp
sub
inc
int
inc
sub
and
dec
jbe
push
aas
sbb
jl
lcall
fildl
pop
test
and
mov
mov
jge
jge
push
sub
imul
xorl
add
js
inc
push
inc
mov
adc
and
aaa
fmull
xchg
mov
jecxz
mov
shll
and
aad
adc
test
dec
add
movhps
sbb
rol
sbb
jmp
push
mov
mov
sbb
add
and
aaa
sbb
insb
aas
rcl
fidivl
call
rcl
inc
insb
xor
fwait
cmp
lret
cmpsl
or
jno
mov
lods
fsubs
xchg
imul
pop
bound
inc
pop
es
mov
mov
jmp
loop
xchg
inc
lcall
aas
mov
pop
mov
xchg
inc
and
jo
rcrb
pop
shll
push
add
jne
and
jae
jecxz
iret
roll
ror
and
stc
mov
test
addr16
das
mov
xchg
jae
pop
or
subl
mov
shr
loopne
mov
outsb
pop
stos
addr16
in
xor
dec
je
pop
out
xchg
and
pop
mov
push
out
mov
adc
fwait
mov
enter
mov
test
jmp
out
ss
push
call
sbb
sbb
dec
into
dec
fs
and
cs
push
jmp
push
sahf
xor
lahf
mov
adc
js
sub
repz
test
or
jbe
jle
loop
inc
push
ret
add
mov
sub
cmp
push
das
sarl
mov
dec
hlt
jl
cmp
test
addr16
hlt
ljmp
daa
es
in
pop
jecxz
ret
cmpsl
add
cmpsl
adc
movsl
cmpsb
fcoml
mov
mov
ljmp
aad
cmpl
jl
mov
popa
and
cwtl
pop
test
or
fistpl
jecxz
jo
dec
je
js
sbb
sbb
sub
adc
fcoms
adc
and
int
xchg
add
loopne
sub
xchg
and
xchg
stos
sbb
xor
push
jl
bound
stc
or
sub
mov
imul
shll
lcall
fistpl
mov
xor
cwtl
mov
add
adc
sahf
out
fisttpl
mov
push
push
in
not
aaa
inc
sbb
repnz
sbb
mov
out
in
adc
js
ja
inc
xchg
inc
sahf
ficomps
arpl
add
adc
flds
xorl
and
jmp
out
repnz
jnp
divl
js
lcall
imulb
push
dec
out
imul
scas
add
xchg
loope
mov
ja
mov
cmpsl
cmp
sub
cmp
mov
orl
cli
and
ljmp
add
es
rcll
mov
aas
sbb
mov
ja
xor
lods
mov
movsl
mov
stc
cli
out
sbb
pusha
push
mov
fwait
out
mov
mov
pop
insl
cs
iret
jno
or
mov
aaa
inc
fwait
push
sbb
jp
lods
and
or
cli
outsl
and
jb
repnz
jmp
mov
cmc
mov
pop
lcall
leave
lods
cwtl
pusha
popf
mov
mov
ficomps
ja
mul
or
mov
stos
xchg
pop
imul
mov
or
dec
pop
lds
outsl
or
scas
or
pop
lcall
das
xor
mov
in
sub
pop
arpl
xchg
cmpsl
xchg
test
xchg
test
jo
lock
or
pop
jo
incl
dec
stc
idivl
and
inc
pushf
hlt
stos
add
ss
inc
inc
test
xchg
test
aaa
cmp
repnz
cmp
inc
jbe
arpl
sub
addl
outsb
aad
sahf
or
xor
scas
andl
iret
cmp
sar
in
lret
popa
xor
inc
push
push
aad
ja
addb
bound
fs
lock
or
das
int
xchg
xlat
dec
aam
mov
cmc
pusha
xchg
mov
pop
subl
jl
scas
std
push
mov
pop
fisubl
dec
imul
add
call
xor
cs
xorl
cmp
pop
test
xor
push
rcl
or
mov
das
jmp
enter
add
out
cmp
fwait
dec
fistpll
mov
xchg
cmpsl
clc
jnp
cmpl
or
cmpsl
or
hlt
jp
sub
adc
les
aaa
or
stos
ljmp
hlt
pop
leave
pop
js
mov
jmp
mov
xchg
cmp
add
test
xchg
ja
pop
sub
call
jl
jmp
test
inc
js
int
xor
push
in
push
int
inc
lea
cld
outsl
add
test
test
stos
xlat
pop
outsb
dec
dec
cmp
push
push
subb
mov
js
imul
fcompl
shll
loope
lahf
ret
cmpsb
mov
mov
sbb
lcall
imul
inc
les
pop
pop
notl
xchg
xchg
data16
addr16
leave
xchg
test
lds
pop
mov
sub
jne
cmc
xor
xchg
dec
jmp
push
jo
xchg
pop
pop
xchg
inc
into
or
jp
xor
cmp
mov
jp
lock
jge
div
in
mov
pop
cmpsb
pop
xor
cmpsb
scas
repnz
pop
cmpb
cmpsb
fdivl
fs
pop
stos
xor
or
inc
cmc
jle
movsl
pop
aaa
cltd
adc
push
push
or
scas
fidivrl
dec
cmc
cmc
das
mov
xor
and
inc
push
loopne
stc
inc
jecxz
es
rorb
gs
xorb
je
mov
sbb
push
mov
call
daa
xchg
sarl
add
or
pop
popf
call
shll
fiaddl
add
dec
loop
pop
gs
movsl
iret
lods
sbb
mov
lods
shl
jae
cmc
fistpll
dec
test
in
jmp
sahf
xchg
mov
outsl
adc
jnp
sub
aam
loopne
lods
je
or
and
sbb
add
push
jb
jne
inc
cmpsb
lret
in
ss
aad
jb
addr16
sub
stos
or
lods
jno
push
fsubl
sub
shrb
rcr
dec
movsl
adc
dec
push
and
push
ficoms
clc
cmp
pop
push
xor
movsb
js
aas
mov
cmpsl
push
aad
cmp
sbb
mov
pop
cwtl
fsubp
inc
add
or
insb
aam
mov
or
push
or
ret
loope
or
lret
push
adc
jp
mov
je
aad
mov
test
inc
into
xlat
pop
call
rcl
pop
iret
or
test
arpl
ficoml
sbb
cmpsl
movsl
jne
shrb
sarl
jg
jge
cmp
cmpsl
into
shrl
lahf
push
inc
mov
mov
inc
mov
or
test
xchg
ret
xor
mov
mov
roll
push
adc
cmc
add
inc
iret
sbb
adc
lret
and
mov
xor
loop
aas
icebp
inc
inc
in
pop
add
in
mov
push
or
mov
and
pop
cmp
inc
pushaw
mov
sub
xchg
lret
dec
xor
fistps
dec
add
xor
sbb
in
pop
add
stc
xchg
push
pop
cld
or
repnz
jns
pshufw
dec
jg
sahf
xchg
cmpb
jae
xor
movl
dec
mov
adc
cmp
jno
aaa
imul
push
or
das
mov
mov
or
sbb
jge
or
lods
data16
jns
xchg
sar
ds
rcrl
sbb
lret
or
jg
mov
adc
popf
iret
dec
test
adc
ljmp
ficompl
dec
adc
mov
mov
mov
iret
jb
mov
adc
cs
mov
icebp
bound
fsubrs
in
movsl
dec
roll
out
test
popf
cwtl
lahf
incl
fwait
jne
in
or
cmpsl
je
mov
sti
movb
xor
pop
in
sahf
in
stos
jmp
dec
adc
fsubp
cmpl
les
sub
or
ja
and
or
sub
mull
mov
pop
push
add
rcl
pop
lea
imul
pop
sbb
out
mov
pop
inc
xor
push
out
pop
sub
test
dec
dec
dec
ret
mov
jbe
cmp
sbb
pushf
mov
mov
inc
sbb
sbb
and
jbe
mov
mov
dec
stos
inc
cmp
scas
daa
lds
movsb
popf
stc
sahf
cld
adc
lcall
mov
mov
or
loope
out
pop
aad
outsb
cmp
cmpl
dec
inc
push
jmp
push
dec
clc
je
mov
pop
into
fwait
addr16
mulb
outsb
sti
pop
push
out
xor
jne
idiv
push
mov
sbb
jge
div
jnp
sbb
movsl
mov
aam
sub
xor
mov
out
and
decl
mov
out
dec
pop
hlt
call
sub
test
sbb
scas
jno
jmp
add
push
mov
sti
dec
mov
push
std
je
cmp
dec
in
sbbl
pop
xchg
test
fdivrp
fisttps
xchg
or
add
push
lahf
in
push
jbe
xchg
jne
jae
inc
pop
test
jge
mov
es
sub
jle
jae
xor
sbb
adcl
jnp
sub
fbld
dec
es
jb
mov
adc
movsb
hlt
adcb
cmc
sbbl
out
cmpsl
jmp
dec
xchg
popa
push
xor
adc
adc
loopne
data16
push
or
adc
xchg
xchg
add
and
pop
in
push
pushl
sub
fcmovu
imul
jns
pop
jb
and
cli
leave
cmp
lahf
or
out
mov
add
and
sahf
push
adc
push
and
cmpsb
cld
mov
lock
mulb
clc
cmp
dec
mov
sub
jne
cltd
shlb
ror
bound
push
std
sub
cwtl
dec
es
push
mov
mov
dec
outsl
pop
cwtl
loop
cli
sarb
or
mov
jp
xor
xchg
jmp
shll
push
fistpll
mov
pop
data16
xorb
inc
enter
test
jle
mov
das
es
lods
xor
stos
jnp
pusha
push
enter
outsb
cmc
xchg
pushf
jb
mov
mov
push
xlat
fadds
pop
testb
lahf
inc
adc
insl
dec
fs
and
dec
adc
mov
sub
orl
sbb
pusha
mov
idivl
adc
and
push
mov
test
fs
sub
gs
insb
mov
add
cmp
sbb
inc
mov
push
pop
adc
mov
dec
dec
pop
nop
sar
imul
imul
lahf
inc
popa
in
cltd
pop
pop
inc
mov
mov
addr16
ljmp
mov
lahf
fcoms
lret
xor
mov
mov
cmpsl
or
inc
inc
cmc
mov
leave
sub
sub
out
pusha
mov
sbb
imulb
pop
cli
jae
inc
fdiv
and
adc
in
or
cmp
jnp
insl
lahf
xchg
fcoms
fisubs
movsl
sbb
xchg
addr16
ret
add
sub
inc
cmp
inc
cmp
inc
add
addr16
jo
lahf
pop
mov
inc
xor
jne
lret
fcompl
insl
pop
inc
mov
repz
sti
xchg
sub
rcrb
arpl
mov
fbstp
pop
arpl
add
ret
scas
inc
push
inc
pop
dec
aad
int3
in
mov
imul
and
lea
sub
lods
or
mov
and
lods
xchg
popa
insb
shrl
das
pop
clc
sub
stos
movb
shll
sahf
inc
and
testb
loop,pn
xor
cmp
sub
je
subb
xor
xor
sub
popa
inc
mov
mov
out
out
jmp
cwtl
lea
add
ljmp
push
subl
std
jp
cmpsl
hlt
pop
pop
fsubrl
mov
aas
mov
mov
jge
or
push
cmp
dec
or
sub
hlt
push
jl
and
xchg
lods
test
push
inc
std
lds
xchg
out
jg
pusha
shlb
icebp
xchg
sahf
adc
imul
pop
sahf
fwait
mov
out
scas
add
negb
test
xor
into
lahf
leave
and
aas
nop
mov
sbb
add
push
stc
sub
dec
pusha
das
movsb
pop
addr16
xchg
add
shrb
out
fdivr
je
cmp
aam
dec
add
shlb
pop
or
push
mov
mov
dec
cmpsb
cli
xor
mov
nop
jmp
or
pop
popf
les
push
adc
jmp
fstpl
and
roll
scas
dec
cmp
fnstsw
or
int3
aaa
frstor
out
nop
mov
jbe
dec
jecxz
fcmovne
jmp
jb
dec
xchg
dec
addl
jmp
mov
sub
jo
xlat
aas
sub
jg
insb
fildll
pop
imul
call
cmpsb
mov
movsl
dec
imul
lods
mov
fistpl
mov
sub
movsb
in
dec
into
jae
aas
pop
ja
movsl
pop
fimuls
ret
data16
sub
pop
dec
push
cld
inc
test
outsb
out
test
test
ret
fwait
adc
ja
jle
rcll
out
mov
adcl
dec
setne
and
aas
sbb
cmc
cmp
xor
aas
stos
mov
sti
lods
leave
mov
stos
insl
adc
mov
scas
dec
in
enter
xchg
jle
push
jmp
fdivrs
adc
ja
push
add
inc
jno
pop
and
mov
mov
std
sbb
and
mov
pop
pushf
mov
add
jecxz
or
jbe
into
jmp
push
pop
addr16
lods
xlat
out
cmp
mov
mov
cmc
pop
dec
cmp
sbb
dec
dec
jl
push
inc
in
push
jecxz
pop
movsb
cmp
push
add
lret
or
mov
fsubp
jecxz
lret
jo
pop
xchg
xor
das
shll
add
push
sub
cwtl
mov
lcall
out
ret
ret
cmpsb
add
add
adc
or
adc
jb
sbb
aad
or
cmp
fcmovne
xor
lret
mov
mov
xor
jp
jl,pn
mov
jmp
lret
leave
lods
adc
imul
pop
adcb
fdivp
mov
fwait
out
mul
inc
lret
fnstsw
cmp
and
cmc
scas
stos
mov
leave
push
popf
pop
fcompl
jnp
mov
popf
addr16
jg
dec
cmp
pusha
call
inc
arpl
aaa
adc
shrb
icebp
push
leave
cld
in
jb
lock
xor
sbb
insl
gs
int
jg
gs
inc
movsl
push
fistl
sub
cmp
sbb
xchg
and
outsl
repnz
push
cmpsb
add
sbb
push
push
mov
dec
cltd
ja
pop
cmp
rol
jg
mov
sbb
jge
push
pushf
fidivrl
int
jg
mov
pop
in
jle
inc
sbb
jge
stos
pop
mov
pop
xchg
mov
fwait
in
scas
nop
push
xor
movb
sbb
movsl
test
js
mov
in
jecxz
push
xchg
xchg
push
aad
mov
push
inc
pop
add
sbb
dec
pop
pop
out
pop
inc
mov
adc
idivb
pusha
das
push
lret
shr
mov
xchg
add
lcall
sub
lea
add
fwait
loop
cmc
test
lret
neg
or
push
pop
daa
sub
xor
jo
enter
xchg
dec
mov
add
push
jbe
mov
stos
sub
add
jbe
popa
cwtl
inc
cmp
fiaddl
inc
in
xor
into
cmpsl
jl
ret
cmp
sub
push
pop
cwtl
sub
xor
xchg
bound
add
repz
bound
sbb
roll
pusha
icebp
aad
pushl
imul
push
rcrl
mov
push
lods
int3
jne
ss
push
repz
mov
jbe
fsts
sahf
push
imul
in
cltd
or
or
out
pop
cmpsb
add
inc
xchg
jne
xor
mov
inc
dec
push
push
sub
test
sub
scas
cwtl
mov
lds
sbb
in
rolb
xlat
inc
icebp
mov
test
movsl
push
jo
fisubrs
cwtl
mov
xor
push
fstpl
mov
fisubrs
dec
test
mov
imul
lock
add
add
cmp
lret
dec
arpl
cmc
rorl
xor
xor
dec
sbb
fdivrs
jge
loopne
cmpsb
cmp
push
call
rol
push
and
loope
clc
dec
andl
or
and
insb
jae
xor
aam
lret
repnz
fwait
dec
add
and
outsb
loop
mov
ret
add
pop
arpl
out
pop
jle
ss
xor
aas
iret
xor
jg
ljmp
stos
or
mov
xchg
bound
jp
mov
xchg
fstps
push
cmp
imul
dec
fnstcw
fldenv
push
test
popa
pop
into
int
popa
fisubs
icebp
das
arpl
jno
ljmp
mov
bound
inc
fists
mov
xor
xor
in
shr
insl
or
loop
or
add
jne
js
lret
and
cmp
addr16
fisttpl
out
insl
jae
mov
pop
int
push
or
or
sbb
int3
mov
rcrl
jge
xchg
lret
mov
lods
xchg
icebp
out
insb
repnz
out
push
outsl
test
inc
jae
mov
sbb
sbb
jbe
lahf
es
outsl
repz
push
push
sbb
sbb
cmp
in
lret
cmc
dec
cmp
push
shll
mov
mov
out
fsubrs
pop
xor
lcall
pop
mov
mov
jl
test
mov
lahf
or
jne
test
sahf
in
rcll
subb
test
pusha
and
not
xor
fwait
rcll
pop
test
aad
mov
pop
push
xor
stos
fidivs
test
sarl
sub
pop
dec
notb
insl
jb
insl
mov
movsl
and
outsl
mov
and
xchg
mov
lods
lahf
lahf
imul
jp
cmpsl
cmp
lods
xor
fidivrs
xchg
and
andb
dec
imul
xchg
dec
in
sub
or
scas
gs
data16
and
sub
adc
mov
mov
paddusw
push
cmp
jne
inc
rep
xchg
movsb
daa
xor
push
mov
iret
out
cld
sub
push
test
les
pushf
bound
mov
pop
insb
sub
mov
dec
xlat
push
sti
xchg
out
nop
push
cmp
xchg
push
fwait
push
and
enter
cmp
fnstenv
push
fdivp
out
iret
gs
add
add
cmpsl
pop
cmp
mov
xchg
and
mov
lods
adc
scas
xchg
les
jl
enter
add
push
or
scas
pop
je
stc
xlat
fadds
pop
in
inc
and
fimuls
mov
sub
mulb
lods
cli
xchg
dec
ss
push
insb
cmpsb
inc
cli
cmp
pop
popa
cmpsl
gs
clc
ret
lret
mov
lcall
xchg
fsubs
or
sbb
scas
cli
das
mov
loopne
mov
repz
adc
sarb
add
mov
jns
test
gs
leave
mov
cmp
repz
pop
fcomip
call
iret
xchg
fsubrp
adc
out
jbe
cmp
pop
mov
aam
sub
push
fwait
leave
inc
push
rcl
inc
mov
adc
rclb
fs
mov
popa
shrd
ret
jmp
lea
mov
stc
lods
std
cmp
inc
out
add
pop
mov
les
dec
shrb
mov
add
in
fwait
pushl
jmp
push
mov
add
push
push
bound
popa
or
in
cld
mov
sbb
cmp
cld
adc
movsl
pop
add
jns
pop
pusha
out
sar
popf
cmp
jno
movsb
or
inc
sti
adc
lahf
pushf
ret
frstor
mov
xchg
mov
push
and
or
in
andl
inc
imul
lods
jp
xchg
mov
xchg
pop
mov
imul
sub
and
push
test
sub
cmp
aad
adcb
or
adc
dec
les
int3
and
addr16
repz
push
mov
rolb
jae
sub
andl
movl
mov
mov
mov
aaa
cmp
movsb
push
cmp
sub
pop
ljmp
aam
adc
or
and
lea
lcall
pop
inc
cld
lea
bound
push
orl
cmp
mov
xchg
fsubs
cmp
jge
push
sbb
cs
rorl
testl
pop
sbb
cwtl
popa
xchg
jle
scas
das
out
cmp
or
and
clc
xorl
xchg
inc
notb
and
mov
lods
bound
daa
and
inc
adc
lcall
sub
out
popa
fwait
insb
or
xchg
testl
adcb
les
dec
xchg
push
jnp,pt
pop
xchg
push
push
sbbl
std
or
jge
cmp
ljmp
outsb
jmp
ret
lret
mov
int3
cli
ror
or
out
fdivr
std
jecxz
jl
inc
and
loop
jae
and
jb
fstpt
mov
add
pusha
xchg
lret
sub
sarb
stos
xchg
cld
cmpsb
das
xor
leave
insb
cmp
movsb
cmp
sub
add
xor
pop
add
imul
inc
mov
xor
push
ds
fcompl
mov
mov
shrb
sub
loop
fdivrs
fs
or
jmp
out
jmp
xchg
enter
pop
loop
fimull
call
cmpsb
pop
sbb
insl
inc
add
push
imul
xor
dec
nop
lods
mov
test
mov
enter
loope
ss
cmp
shl
cmpsl
and
inc
and
add
mov
xchg
push
add
call
test
pushf
fs
outsl
cmp
mov
push
adc
imul
int
xorb
mov
shl
push
outsl
xor
sahf
inc
jae
sbbb
inc
test
cs
test
stos
scas
cmp
aam
xchg
push
popf
push
out
test
xchg
mov
xchg
pop
js
add
sbb
push
mov
clc
or
movsb
or
popa
je
adc
scas
jecxz
lods
and
jmp
fcom
nop
lods
nop
push
xor
jl
sub
xchg
icebp
imul
pusha
xchg
and
cmp
lea
lea
jb
sarb
or
or
int
adcb
push
cmp
dec
pop
in
aam
dec
incl
xor
out
testb
movsl
mov
sbb
mov
rcrb
lahf
mov
out
xor
sbb
jbe
cmp
xchg
pop
pusha
ds
lods
out
mov
mov
push
xchg
loopne
outsl
sub
sarl
lea
int
mov
lcall
pop
je
in
xchg
xor
push
add
jp
add
mov
scas
adc
jecxz
jbe
ja
sub
fwait
pop
dec
repz
push
popf
cmp
push
cmp
cld
in
add
add
sub
test
mov
add
loopne
dec
enter
repnz
lock
or
in
sahf
mov
mov
and
stc
fiaddl
cmp
or
and
mov
mov
mov
sahf
mov
mov
pandn
mov
push
sahf
add
repz
popa
out
out
ret
int3
sub
cmpb
rcrb
xor
push
lahf
icebp
pop
pop
pop
in
push
pusha
leave
xchg
adc
dec
push
out
xchg
rclb
or
leave
mov
adc
pop
jno
mov
sahf
cmp
lret
xor
jae
test
xor
dec
mov
fnstsw
stos
outsb
insb
in
aas
xor
outsl
repnz
daa
xchg
dec
cld
dec
xchg
ror
mov
inc
pop
adc
test
jp
xor
dec
mov
jo
xchg
mov
jno
negb
icebp
cmp
jae
fnstcw
mov
adc
xchg
or
call
or
or
sub
jg
push
jg
push
repnz
fsts
jmp
pop
in
pop
mov
push
jmp
sbb
lea
cmp
sub
pop
push
pusha
dec
cwtl
mov
icebp
sub
xor
push
cltd
jnp
negb
adc
xlat
int3
lcall
sbb
mov
push
xchg
push
mov
sub
fs
sbb
sbb
mov
pop
inc
and
or
sub
push
lret
lods
mov
adc
jo
mov
cmp
or
shlb
mov
les
push
push
xor
aas
shlb
push
inc
jecxz
ljmp
lahf
push
add
jle
mov
mov
dec
fsubrp
pop
push
xchg
out
or
lcall
out
cmc
fwait
cmpsl
cli
or
rorl
add
dec
mov
xor
mov
in
dec
pop
jge
or
aad
mov
lahf
nop
sub
dec
mov
inc
call
xlat
inc
sub
push
push
sub
mov
sbb
cmpsl
dec
pop
fwait
lock
add
cmp
mov
lea
ja
pop
jns
stos
sub
push
call
rcll
fs
mov
pop
imul
add
cmp
outsl
and
mov
mov
ja
mov
in
lock
and
mov
das
and
mov
inc
push
rol
aas
xor
fcoml
sbb
data16
out
addl
cmpsb
mov
xorl
leave
sub
push
pop
pop
push
dec
sbb
mov
add
ja
push
and
mov
repnz
push
add
bound
add
lcall
add
leave
xchg
mov
ljmp
lds
push
iret
pop
jl
push
push
int
push
jge
or
inc
xchg
mull
cli
cmp
push
pop
sbbl
in
repnz
outsl
dec
xchg
dec
sbb
sbb
push
sub
nop
in
pop
ja
adc
mov
cli
gs
fwait
adc
pusha
pop
aaa
jns
push
cmpsl
push
scas
xchg
fcmovu
push
lods
enter
push
add
jns
lcall
mov
outsb
xchg
push
add
add
mov
add
stos
vmovups
shll
pop
test
cmp
sub
je
xor
dec
mov
imul
jnp
sub
or
mov
mov
sbb
call
movsb
scas
mov
repnz
inc
filds
or
fstps
lret
pmulhuw
mov
push
xchg
xchg
xchg
pop
jp
ja
out
mov
lock
stc
cmpsl
stc
outsb
add
je
pop
sbb
aas
pop
out
test
mov
scas
mov
or
pop
xchg
inc
test
cs
out
jbe
js
push
add
xchg
push
popl
and
xor
out
mov
dec
lods
fisubrs
mov
data16
push
imul
movsl
pushf
jmp
pop
addr16
in
shlb
or
mov
push
inc
add
repz
test
out
loope
or
icebp
pop
lret
insb
sub
mov
enter
push
repz
ss
ficoms
int
dec
xor
mov
add
aad
jbe
outsl
mov
sahf
sbb
into
mov
push
jnp,pt
and
push
inc
addl
aad
add
cli
jb
std
in
xchg
mov
xchg
iret
mov
dec
cli
and
test
dec
in
push
mov
mov
push
rcrl
xchg
test
push
inc
and
pop
mov
adc
xor
ds
push
mov
sub
cmp
adc
push
dec
and
sub
aad
fmuls
test
or
scas
mov
jnp
scas
hlt
mov
das
pushf
mulb
out
in
or
mov
sbbl
push
cs
inc
negl
push
mov
jp
sub
dec
lret
and
mov
jnp
cmp
clc
xor
push
mov
test
cli
imul
in
filds
mov
lock
xor
cltd
cmp
iret
and
or
push
pop
adc
je
mov
xchg
popf
test
movsb
sub
sub
arpl
xchg
insl
mov
or
adc
or
cld
mov
or
sbb
xorb
add
or
cmpsl
arpl
push
mov
and
test
jbe
sahf
nop
sub
push
arpl
push
leave
das
cmc
icebp
rcrb
test
jmp
notl
cltd
pop
mov
sbbb
lret
mov
push
mov
in
mov
sub
in
das
mov
inc
mov
sbb
pop
inc
xchg
sub
sub
push
jmp
mov
fdivl
or
fmuls
adc
into
call
mov
mov
rorl
xor
inc
dec
xor
push
js
mov
cmc
mov
inc
ja
lret
lahf
push
pop
adc
xchg
xlat
rcr
sub
out
fucomi
cmp
cmpsb
decl
nop
dec
push
aaa
sub
insb
arpl
mov
fistpll
jmp
fwait
jl
add
fs
or
sbb
inc
je
scas
mov
xchg
and
mov
mulb
push
stos
sahf
xchg
addr16
lods
cmpl
xchg
ret
jne
in
stos
adc
pushf
mov
adc
and
lea
and
xor
mov
ss
dec
dec
in
es
fsubl
lock
adc
pop
bnd
pop
jge
sbb
xor
test
xor
jns
mov
rcrb
mov
inc
lret
and
mov
dec
and
std
call
mov
xchg
out
and
mov
cmp
leave
push
adc
pop
xor
ljmp
daa
add
sbb
sbb
gs
scas
mov
xchg
inc
xchg
pop
inc
add
inc
jg
pop
addr16
ja
lock
rcrb
movsl
add
xor
stos
into
add
out
loopne
pop
inc
adcl
stos
mov
dec
adc
daa
loope
xchg
addl
adc
in
mov
loop
loopne,pn
xlat
dec
scas
mov
arpl
jl
jns
or
js
aas
mov
pop
fwait
jnp
lea
addr16
cmp
jne
rolb
icebp
xor
fldl
pop
cli
xorl
insb
jge
mov
push
pop
mov
or
mov
adc
push
stos
dec
sbb
mov
fs
call
movsb
xchg
sti
test
lcall
inc
xor
xchg
push
add
insl
sbb
ja
stos
pop
mov
into
jecxz
fisubs
nop
sbb
nop
dec
mov
or
mov
imul
push
imul
mov
aas
sbb
movsb
das
inc
jbe
je
inc
push
mov
cmpb
gs
xor
push
mov
test
dec
xchg
arpl
pop
add
into
imul
adc
dec
push
lock
or
xchg
inc
mov
repnz
fsubrp
dec
sbb
mov
hlt
sbb
sti
xchg
cmpsl
inc
push
movb
enter
cs
mov
loope
add
mov
leave
das
sub
and
or
sbb
push
or
movsl
mov
inc
std
jb
add
pop
aad
xchg
lock
into
push
pusha
cltd
ljmp
pop
pop
sub
mov
xchg
lret
dec
inc
inc
ret
ret
or
test
push
sub
adc
cmpsl
ljmp
cmc
cmp
xor
adc
fidivrs
mov
pushf
pop
pop
sub
jo
gs
hlt
fisubs
fldenv
push
xchg
orl
lret
or
repnz
arpl
test
scas
jb
insb
adc
cltd
cmpsl
je
sahf
andb
addr16
sub
mov
movsb
fsubl
push
xor
sbb
push
iret
push
jae
or
push
insl
xchg
pop
and
mov
pop
test
repnz
mov
int3
pushf
rcll
dec
pop
inc
push
test
mov
mov
stos
into
in
jne
and
lahf
push
or
andb
or
mov
mov
gs
and
sub
sub
mov
jg
add
mov
les
in
push
outsl
mov
test
stos
enter
jbe
mov
iret
mov
jmp
sub
out
sbb
mov
xlat
dec
push
pop
scas
and
jo
and
mov
xor
pop
add
addr16
aas
fucomp
mov
ja
int
fsubrs
adc
jb
cmp
insl
aaa
mov
pop
iret
gs
inc
mov
insl
sarl
xchg
clc
mov
mov
or
setns
pushf
push
ss
scas
jne
imul
mov
xor
in
fsubs
rcll
imul
scas
bound
sbb
repnz
cmp
sbb
jo
fdivl
jb
loope
sub
scas
xor
xchg
pop
jp
cmp
iret
or
sub
lea
movsl
hlt
fcompl
stos
rcrb
bound
push
xchg
gs
add
and
mov
jp
outsb
add
jo
lods
lret
hlt
inc
ret
cld
test
xor
negl
xchg
ljmp
test
bound
dec
jns
jl
insl
out
int3
mov
fnstcw
lds
sub
xchg
ja
out
pop
xchg
jno
icebp
dec
in
stos
inc
cmpsl
clc
enter
adc
mov
movd
jo
sbb
das
stos
push
loope
and
adc
pop
int3
adc
mov
and
stc
push
movsb
stc
fisubl
stc
iret
fsubs
lds
jbe
cmc
lcall
mov
mov
out
mov
aas
cmp
test
das
clc
mov
cmc
imul
in
dec
sbb
hlt
mov
lds
add
aas
cmpsb
sbb
orb
sbb
cmpsl
ljmp
pop
cmc
jle
lcall
cmpsl
in
cmp
push
pop
adc
mov
jne
sub
stc
mov
inc
pushf
fmull
cmp
popf
add
mull
xchg
inc
mov
dec
cltd
lret
ja
fs
mov
or
daa
aam
cmp
dec
ds
mov
pop
fistl
lods
outsl
mov
fcmovb
test
pop
inc
xchg
rorb
test
xchg
je
and
fs
push
std
loop
cld
mull
lods
iret
aam
je
cmp
ljmp
rclb
mov
mov
or
mov
pop
ja
scas
sub
test
pushf
mov
pop
roll
scas
lcall
pop
xchg
sub
andb
add
adc
addl
cmpsb
in
scas
js
push
xchg
xor
sub
ljmp
in
andl
dec
jg
and
dec
sbb
pop
ja
jge
out
and
or
inc
mov
push
jns
xchg
cmp
in
and
mull
rcrl
mov
ljmp
xor
scas
ljmp
mov
aas
pusha
push
icebp
jno
jg
pop
mov
jecxz
repz
inc
lret
stos
test
roll
cmpsb
aad
xchg
test
dec
scas
rcll
pusha
or
inc
xchg
mov
jg
icebp
pop
std
sti
jmp
xchg
out
pop
nop
sub
movsb
jns
or
imul
clc
je
cli
pop
and
ret
das
andl
add
roll
leave
scas
std
cltd
mov
or
ja
pop
pop
mov
push
aad
popa
or
aas
xlat
mov
xor
xchg
dec
sbb
dec
insl
lods
lds
lret
scas
inc
or
mov
cmp
flds
imul
insl
push
pop
stc
xor
aam
dec
inc
xor
data16
repnz
scas
test
lret
cmp
push
add
cmpl
ret
push
inc
mov
and
jo
rcll
pop
xchg
adc
push
sbb
xchg
leave
test
pop
bound
push
scas
push
mov
or
lret
insl
aas
mov
int3
jp
jae
or
dec
dec
push
cltd
out
out
inc
fwait
mov
sarb
dec
mov
pushl
bound
fcmove
jns
cmp
xor
pushf
inc
lds
leave
add
int3
fistpl
mov
sbb
loop
imul
pop
push
cmp
cmp
push
mov
mov
xlat
repz
adc
xor
incl
mov
and
sub
int
mov
mov
mov
and
mov
scas
xor
mov
icebp
push
std
pop
jno
add
outsl
adc
jp
dec
jl
stc
jge
dec
int
mov
inc
push
lea
out
outsb
lahf
add
ljmp
shrl
stos
out
pop
and
out
mov
lea
or
icebp
sbb
mov
mov
jne
and
mov
mov
aad
pop
pop
xchg
pushf
mov
push
gs
jne
scas
cmp
push
loopne
and
in
sub
cltd
sti
mov
inc
stos
inc
xchg
repnz
in
mov
gs
jp
stos
mov
repnz
inc
sub
popl
outsb
pop
scas
mov
aas
in
stos
aas
lds
dec
mov
mov
lds
cmpl
les
xor
cmc
jg
scas
dec
notl
push
outsb
dec
leave
es
cmp
sbb
jo
insb
jae
mov
jp
imul
test
testl
call
push
ja
repnz
mov
bound
dec
ja
loopne
in
test
add
xor
clc
test
inc
outsb
ffreep
pop
ss
jne
sub
inc
xchg
popw
mov
mov
or
adc
push
fdivrp
call
sub
jb
inc
pop
mov
lahf
shlb
js
insb
mov
mov
addr16
pop
sbb
lahf
mov
jo
movb
push
lods
dec
daa
mov
inc
ret
test
xchg
and
rcrb
sbbb
test
dec
cmp
push
xchg
gs
mov
pop
or
xchg
cmp
ja
iret
test
adc
push
inc
cmc
fisttpll
adc
repz
push
mov
test
ret
add
leave
inc
stc
inc
pop
jae
adc
shll
and
rcll
sub
outsl
fbld
xchg
mov
rcll
imul
push
jb
out
jecxz
sbb
dec
add
stc
cmpsb
xchg
aad
ljmp
fnstcw
add
and
iret
fsub
scas
and
inc
xchg
ret
lret
inc
adc
and
fwait
mov
fisubrs
mov
add
jb
xchg
pop
xor
sti
mov
pusha
les
imul
out
and
dec
xorl
xchg
test
mov
lahf
mov
pushf
adc
cmpl
dec
insb
push
fnsave
aas
xor
or
mov
xchg
mov
sbb
inc
xlat
mov
subb
pop
lcall
leave
stc
add
shl
mov
rclb
pop
xorl
adc
lahf
ds
jae
mov
dec
std
mov
lock
and
minps
fstps
sbb
sub
int3
ljmp
aad
push
xchg
outsb
mov
outsl
andl
fimull
mov
inc
xor
shrb
mov
mov
xor
xchg
dec
sahf
dec
lahf
add
cmpsb
gs
inc
ss
xor
add
push
push
xchg
int3
mov
adc
out
cli
xacquire
mov
outsb
inc
pop
cli
or
adc
inc
adc
orl
hlt
jmp
daa
jg
insb
stos
idivb
rol
mov
shl
push
icebp
aam
dec
adc
adc
xlat
push
fwait
in
jnp
stos
push
les
test
inc
inc
pusha
popf
push
je
cmpsl
sbb
mov
jge
js
lahf
pop
loop
mov
push
pop
mov
pop
inc
call
lret
mov
mov
fisttps
lahf
inc
aam
sti
scas
pop
loop
mov
cmpsb
inc
or
popa
or
cmp
xlat
and
push
jmp
divl
inc
inc
jb
mov
xlat
cmp
repz
fcomp
pusha
xor
ror
dec
or
xor
mov
mov
mov
iret
and
sub
jo
inc
pusha
sbb
inc
outsl
mov
pusha
dec
sahf
mov
xor
and
dec
loope
psraw
or
arpl
mov
mov
out
xchg
sub
xchg
js
push
cmp
add
fcoml
stc
outsl
dec
inc
inc
jmp
shlb
cmp
inc
shrb
out
test
push
inc
inc
and
fadds
scas
fldt
mov
out
negl
enter
jl
xchg
daa
push
in
mov
int
add
stc
into
or
cltd
jp
mov
repz
aam
or
mov
loop
and
push
xlat
mov
push
inc
test
push
mov
mov
aad
xchg
adc
add
add
sbb
fs
or
or
test
jbe
repnz
xor
dec
bsr
and
dec
xor
pop
cmp
lcall
lods
inc
and
mov
add
xchg
clc
jb
es
xor
pop
add
iret
das
jecxz
push
mov
jne
sbb
jno
pop
xchg
mov
fwait
push
insl
mov
mov
add
mov
push
sbb
lcall
push
shll
pop
pop
xlat
mov
jae
mov
test
subb
pop
and
adc
sbb
test
fidivrl
jb
push
inc
mov
cltd
add
mov
icebp
das
mov
inc
fs
sbb
inc
ja
daa
lahf
in
push
add
ret
dec
in
dec
jle
lods
sbb
hlt
aam
jo
jae
sub
mov
into
aam
pop
jmp
push
adc
mov
loope
imul
dec
inc
movsl
movsb
pop
iret
sbb
insb
pop
xchg
mov
jno
inc
jo
push
jg
push
xchg
loop
movsb
adcb
mov
xor
movsl
es
cmpsl
addr16
ss
clc
inc
mov
dec
mov
jne
outsb
push
rorb
scas
push
dec
xchg
jg
inc
cmp
stos
aam
sub
sbb
push
push
mov
in
out
push
pop
mov
xlat
pop
dec
pop
das
jmp
fidivs
outsb
lret
not
dec
jae
push
pop
xorl
cmp
mov
xchg
cmp
andl
adc
dec
movsb
in
outsb
push
jp
cmp
addr16
mov
cmc
aam
sub
and
test
sub
jb
arpl
xchg
shrb
in
fstps
mov
in
inc
jg
xchg
cli
inc
pop
hlt
inc
cmp
test
jns
add
xlat
add
rorb
mov
jb
dec
ror
dec
int3
push
jp
pop
mov
cmp
pop
mov
lret
xorl
aaa
out
roll
dec
add
fidivl
sarl
dec
cltd
pusha
cmc
pushf
jge
xor
pop
shrl
jno
andl
pop
or
pop
add
idivb
test
mov
inc
leave
into
pop
scas
jmp
adc
hlt
add
or
pop
out
adc
icebp
mov
fistps
sbb
inc
push
iret
mov
adc
sbb
lcall
xchg
jmp
xor
arpl
mov
aaa
xchg
sbb
inc
add
mov
ljmp
fnstenv
mov
mov
imul
in
js
xchg
clc
xor
push
fisubs
loop
push
data16
das
push
cs
sbb
push
arpl
push
adc
mov
pusha
into
jge
es
mov
fwait
jge
test
sub
insl
out
daa
jg
and
dec
mov
push
mov
fdivr
movsl
aas
xor
mov
cmp
lret
cmp
mov
inc
and
cmp
mov
inc
push
notb
lods
aas
jle
push
inc
push
pop
cmp
or
test
sub
sub
bound
mov
push
or
push
or
arpl
sbb
adc
les
add
pop
pop
dec
test
push
stc
pop
outsl
cmp
mov
sub
rol
add
fildll
clc
push
or
jge
push
jbe
insb
dec
cmp
out
roll
or
adc
inc
sub
jge
mov
nop
sub
xchg
add
push
pop
adc
cmpsl
jns
imul
xchg
pop
inc
in
mov
cmp
pop
dec
shll
adc
add
lds
xorl
pop
sbb
not
and
jb,pn
into
pop
push
dec
outsb
pop
ret
pop
dec
sbb
in
inc
ss
inc
cmp
data16
repnz
ror
fadds
das
popa
add
push
add
fsubr
shl
bound
adcl
mov
arpl
jae
clc
push
adc
xor
adc
std
inc
xchg
std
pushf
pop
pusha
rolb
aad
sub
sub
data16
push
dec
stos
aad
stc
ret
pop
xor
jbe
adc
or
adc
mov
fbstp
scas
add
loope
ss
xlat
xchg
push
divb
xor
mov
xchg
mov
in
dec
stc
rcl
movsb
push
idivl
cmp
lret
lods
xlat
nop
or
je
push
in
pmullw
scas
xchg
jo
in
jne
mov
xor
dec
push
or
cmpsb
outsb
jne
std
mov
push
repz
bound
xchg
adc
in
fildl
cmpsl
push
inc
add
mov
loopne
lahf
rclb
iret
mov
dec
movsl
rcrb
and
xchg
rclb
jo
lret
testl
sarb
fmull
pop
in
notl
in
push
xrelease
test
inc
cltd
mov
aad
imul
movsl
and
pop
cmc
mov
js
mov
popa
stc
xor
dec
vmovdqa
mov
lods
and
and
icebp
repnz
cmp
sbb
push
bnd
movsb
adc
cli
fildl
mov
out
cmpsb
push
xchg
mov
cmpsb
je
gs
add
jae
iret
sub
sbb
movsb
les
sub
pop
pop
push
xchg
jno
int
popf
mov
mov
adc
mov
xchg
or
mov
or
test
pop
inc
jnp
out
jmp
popf
push
in
aas
stc
daa
push
pop
out
xchg
mov
sti
jg
and
add
or
adc
mov
add
sbb
xor
add
int
stc
mov
jae
push
sbb
mov
and
lods
inc
push
lods
sbb
xchg
inc
fistpl
xchg
scas
mov
inc
push
jne
jbe
sub
pop
adc
mov
movsb
push
outsb
aaa
inc
test
out
xor
dec
es
adc
cmp
sarl
lret
ljmp
mov
jle
data16
xchg
outsb
add
xor
adc
ret
dec
add
in
rol
inc
adc
movsb
leave
push
xchg
push
cmpsl
dec
dec
pop
lahf
pop
hlt
pop
and
cmp
jnp
movsb
mov
push
data16
cmp
lcall
sbb
sub
adc
cmp
mov
inc
push
fidivrl
cwtl
and
insl
mov
iret
push
push
xor
movl
insb
sub
push
mov
and
fstp
ret
jmp
je
sbb
sbb
fdivs
cmp
pop
adc
cld
imul
xor
incb
scas
xor
push
clc
shlb
imul
sub
add
push
mov
jno
push
popf
fsubp
std
clc
dec
fldcw
pushf
movsl
mov
dec
jae
je
xor
movsl
mov
xor
mov
and
cld
test
call
dec
add
bound
cmp
mov
ja
clc
xorl
dec
data16
ret
iret
cmp
xchg
push
add
sub
pop
push
ja
vpunpcklbw
leave
mov
xor
cli
mov
ret
adc
inc
ficoms
push
mov
pushfw
data16
orl
popa
dec
dec
pop
fwait
cmp
rorl
inc
jbe
mov
dec
or
jne
dec
sub
repnz
movsl
sub
mov
mov
aad
mov
fimull
mov
push
pushf
or
fstl
xchg
mov
pop
or
loope
inc
xor
mov
dec
cld
fdivl
mov
pushf
aas
sbb
imul
sub
lret
pop
xor
lds
lret
push
cmp
rclb
ds
int
fildll
shl
xchg
cmp
and
xchg
sahf
cmpsl
sarl
repz
sbb
aas
mov
inc
dec
xlat
pushf
push
cli
mov
mov
jge
sbb
push
jbe
fcomps
js
and
cmp
sbb
mov
add
mov
xor
daa
movsb
jle
fstps
fwait
add
mov
lret
xchg
add
cmc
xor
mov
rorl
xor
insl
and
and
mov
push
mov
xchg
mov
jle
aas
shr
movsb
call
sbb
in
arpl
clc
mov
sub
xchg
sub
mov
fldcw
jge
cmpsb
scas
mov
mov
pop
dec
fs
push
bound
pop
mov
mov
fisttpl
xchg
dec
and
sbb
add
out
in
shlb
sub
xor
shl
cli
or
mov
aad
addr16
push
pop
sahf
push
insb
icebp
enter
sti
cmp
xor
hlt
push
mov
ror
jo
push
test
sti
aad
mov
xchg
jmp
add
pop
xchg
mov
rolb
sti
mov
cmp
adc
dec
xchg
shlb
int3
inc
adc
dec
push
adc
in
aaa
and
fimuls
pop
ret
pop
into
jno
mov
insl
and
ljmp
movl
jne
pusha
aas
cmp
add
mov
or
int3
gs
mov
hlt
or
mov
mov
mov
mov
lods
push
std
es
imul
ss
lds
and
or
xor
push
dec
adc
push
inc
decb
or
cli
jmp
in
jnp
cmp
cld
xchg
inc
jge
fdivs
roll
popf
xor
mov
in
scas
xor
lods
mov
sbb
shlb
mov
daa
mov
jns
adc
jnp
inc
pop
mov
xlat
sti
push
out
frstor
xor
ljmp
pop
cmp
rcll
cs
shlb
mov
out
sbb
enter
add
xor
push
or
lret
mov
xor
aas
cmpsl
js
fisubrl
push
mov
or
fnstsw
adc
ljmp
pop
pop
jp
sti
push
cld
movsb
sub
lock
dec
sarl
sbb
gs
push
sbb
pop
adc
sub
add
outsl
xor
xorb
rcll
imul
xchg
das
fnstsw
aam
inc
cmp
repnz
xchg
xchg
rolb
icebp
sbb
pop
adc
ljmp
insl
push
fs
add
mov
pushf
dec
sub
sbb
cmp
je
fidivs
cmp
cld
imul
push
xchg
mov
lahf
pop
jns
gs
out
rcrl
push
ljmp
sbb
inc
repz
out
adc
adc
mov
stc
std
fisttpll
xchg
int3
and
sbb
shr
and
rcrl
pop
in
jecxz
imul
mov
xor
sbb
test
sar
bnd
sbb
and
icebp
sub
pop
dec
repnz
fcomp
pop
dec
mov
aad
push
movsb
mov
fcmove
loope
push
sub
xchg
mov
pop
sti
dec
adc
inc
jae
lret
je
jbe
ret
dec
and
mov
stos
dec
nop
sub
dec
and
sbb
aad
and
loop
mov
mov
rorl
mov
test
bound
pop
cmp
cld
int3
xlat
dec
xchg
mov
adc
stos
pop
lods
ret
adc
scas
lods
jno
add
lea
mov
adc
ret
push
outsl
dec
xor
xchg
je
cmpsb
imul
lods
xchg
adc
mov
std
out
in
or
mov
mov
add
pop
jne
fs
cwtl
sub
ss
sbb
roll
rcl
lock
rorb
xchg
jae
sbb
rorl
or
sbb
mov
add
sbb
adc
sbb
mov
mov
sbb
add
mov
xor
sti
dec
js
push
enter
add
arpl
loope
jns
icebp
insl
fildll
cmp
insl
cmp
test
nop
dec
dec
daa
ret
sub
dec
and
mov
dec
cmp
out
pushf
cmpsb
lock
dec
test
push
mov
lcall
dec
cmpsb
mov
push
sahf
jmp
shr
fisubl
mulb
cmpsb
dec
mov
mov
push
sub
subb
mov
sub
lds
xor
lret
mov
fwait
push
js
rorl
outsl
addr16
mov
inc
es
or
imul
pop
jge
push
sub
pop
mov
jbe
inc
jmp
push
push
test
add
cmpsb
das
add
in
or
repnz
repnz
aad
loop
cmp
fdivr
ds
gs
ret
popf
sbb
xlat
rolb
mov
gs
cmp
ret
cli
push
sub
ds
outsb
cmpsb
leave
mov
xor
push
cmpsb
pop
jmp
xlat
daa
pushfw
push
ds
dec
jge
jp
andb
lret
jecxz
cmpb
fcompl
out
lods
jecxz
sete
pop
je
and
sbb
xchg
fildl
rcl
adc
xchg
aas
pop
push
das
sub
xchg
inc
xor
push
out
dec
dec
ret
jg
xlat
add
jne
sub
mov
pop
std
mov
mov
jmp
and
es
push
jmp
mov
pop
ja
cmpsl
dec
and
push
icebp
dec
adc
and
jp
pushf
hlt
push
pop
and
repz
mov
hlt
mov
daa
fadds
pusha
imul
dec
adc
fcomps
pop
or
cmp
je
stos
or
or
and
lock
or
xor
pushf
int
mov
jnp
aam
sti
dec
mov
lahf
and
sbb
pop
jl
mov
shl
lcall
punpcklwd
iret
idivl
enter
dec
add
sar
add
movsl
push
inc
inc
adc
push
sahf
xor
stos
xchg
pusha
out
and
movb
jae
test
test
out
inc
mov
inc
icebp
outsb
aaa
sub
cmpsb
sti
sbb
in
jne,pt
sbb
xchg
out
xor
imul
sti
sub
mov
xor
aam
sub
stos
out
add
push
push
push
hlt
push
arpl
jbe
xlat
bound
loop
stc
pop
push
jg
popa
adc
and
cwtl
in
pushf
cmp
lcall
orl
mov
movsb
push
jmp
pop
rclb
mov
push
rclb
add
in
sti
pop
mov
inc
ss
pop
cmp
sub
ds
movsl
jns
xor
push
and
xchg
mov
ret
stos
gs
popf
scas
push
movsl
mov
sbb
call
stos
sbb
pop
jns
jl
in
fwait
cmp
fs
loopne
cmp
pop
pushf
jmp
sbb
pop
xchg
cmp
cmp
push
int3
nop
pop
push
mov
out
inc
mov
pushf
sub
or
sbb
add
dec
mov
mov
cli
add
push
aad
es
jbe
cmc
arpl
inc
test
bswap
xchg
adc
insl
bound
mov
or
mov
into
jecxz
push
xchg
stc
movsb
dec
imul
bound
stos
cwtl
jecxz
mov
push
ljmp
pop
ja
mov
movsl
cltd
xchg
adc
pop
stos
movb
repz
jno
loope
gs
aaa
stc
jnp
mov
mov
jns
xor
pop
add
fdivr
pop
and
aam
mov
and
aas
mov
icebp
out
xchg
pop
int3
and
dec
adc
mov
pop
imul
loopne
jns
push
sbb
int
daa
pop
ret
aam
cmpsl
xor
cli
cmp
test
fnstsw
addr16
adc
jae
inc
inc
test
add
xor
popf
cs
fisttpll
sub
adc
cmp
push
adc
xchg
loop
cmpsl
iret
sbb
mov
jecxz
mov
mov
push
mov
mov
fisttpl
jb
mov
lret
xchg
aad
pop
inc
jne
vmptrst
lret
push
cmpsb
divl
in
fwait
add
outsb
jge
mov
dec
out
ds
movsl
fldcw
andb
call
push
xlat
adc
or
fdivr
iret
out
jnp
jbe
mov
fldl
les
pop
inc
movsb
inc
sti
push
or
xchg
sub
insb
fwait
mov
pop
repz
sbb
outsb
dec
loope
out
inc
xchg
insb
mov
and
xchg
dec
xor
sub
mov
out
repnz
ficoml
sahf
jb
addr16
pop
es
adc
cld
xor
data16
or
xor
cmp
cmp
xchg
mov
sbb
jmp
addr16
adc
subl
adc
xor
cmp
les
xchg
cltd
push
xchg
ljmp
pop
outsb
test
add
push
dec
mov
pop
test
loope
cld
jl
je
jmp
mov
subb
int
movsb
add
sbb
loope
movsb
rclb
or
js
fbstp
hlt
push
aad
in
push
mov
xchg
add
movsl
add
pop
cmc
jg
jecxz
add
push
xor
xchg
xchg
idivb
cltd
jl
xor
pop
push
cwtl
scas
clc
leave
xchg
mov
sub
cltd
dec
sub
adc
push
mov
push
pop
pop
pop
inc
imul
test
pusha
xor
jmp
sti
bswap
mov
sbb
pop
andl
lcall
loope
or
dec
cld
icebp
aas
mov
ret
lds
scas
adcb
add
enter
test
repnz
in
pop
jge
lods
and
xchg
cli
testl
inc
popf
scas
adc
ljmp
xlat
push
mov
push
push
pusha
mov
sub
xchg
cmpsb
data16
lret
into
loopne
fsubs
ljmp
mov
push
add
mov
lret
data16
pop
jno
sub
mov
dec
bound
xlat
push
daa
ret
movsb
std
testb
addr16
movsb
movsb
pop
loop
in
mov
jecxz
push
insl
jl
rorb
xor
iret
in
sub
xor
pushw
dec
lock
adc
cmp
xchg
popa
cmc
mov
scas
aam
or
aad
mov
inc
dec
pop
out
cmp
inc
outsl
inc
mov
xchg
adc
push
dec
sbb
cmpsl
adc
mov
push
into
xor
fnstenv
scas
or
and
mov
mov
push
push
fimull
aas
fcomip
xor
dec
xchg
ljmp
fs
dec
jg
icebp
jmp
xchg
xlat
lahf
pop
enter
mov
imul
add
adc
adc
loopne
icebp
add
mov
mov
mov
sti
jb
xor
cwtl
sub
push
mov
out
ljmp
sub
arpl
and
sbb
mov
test
fisubl
jge
jp
popf
add
xchg
sub
aad
adc
sahf
mov
cmpsl
push
or
jge
cmpsb
pop
sub
cmp
jl
jae
push
mov
pop
leave
leave
mov
jnp
inc
adc
dec
es
xor
inc
loop
scas
lret
or
mov
cmc
push
loop
sti
imul
jge
mov
icebp
jne
call
mov
push
test
pushf
cmp
dec
push
movsl
aad
or
ret
and
div
clc
adc
sub
inc
add
cli
push
cmpsb
fistpl
mov
add
or
push
ror
xchg
enter
je
push
rcll
xor
iret
xchg
imul
adc
js
enter
mov
lret
sub
lock
jnp
fcmove
sbb
cmc
pop
sbb
xorb
push
push
pop
stos
mov
ljmp
xor
jnp
and
or
mov
adc
inc
outsb
add
sbb
or
lock
negl
jb
adc
cmpsb
shl
mov
repnz
mov
xor
movsb
add
movsb
pop
cmp
xor
jno
inc
mov
mov
dec
lret
cmp
add
mov
jnp
xchg
adc
dec
inc
iret
sbb
div
adc
inc
loop
into
or
dec
outsl
nop
sub
fildl
in
in
je
mov
lret
adc
or
lds
fwait
adc
loope
adc
in
adc
sahf
mov
adc
push
test
jg
nop
sub
inc
cwtl
mov
mov
mov
js
js
dec
stos
sbb
addb
cld
add
mov
cmc
inc
mov
mov
add
mov
cmpsb
mov
lds
stc
lds
test
lock
and
aas
sbb
das
icebp
sub
jecxz
sbb
fcoms
loopne
test
bound
lods
icebp
stc
jge
mov
mov
and
push
ja
data16
jb
mov
jns
cld
fiadds
dec
xchg
and
ds
loop
jbe
cmc
jecxz
inc
mov
aaa
push
jae
shlb
pop
mov
mov
das
and
xchg
mov
push
ss
fcoml
cmp
pushf
xor
sub
push
xchg
sbbl
or
mov
cmc
push
lock
mov
inc
xor
bound
fcomp
ret
inc
cmp
stos
cmpsb
loopne
push
jbe
popa
cld
cli
xor
shll
cmp
mov
mov
push
fwait
add
mov
mov
inc
push
xrelease
mov
cmpsb
testl
stos
and
sbb
cs
mov
aas
pop
lret
inc
inc
cmp
mov
enter
inc
testb
sahf
push
in
adc
dec
mov
push
pop
cmp
pop
test
enter
sub
clc
adc
jle
aaa
xor
cli
inc
shrb
jecxz
enter
aam
xchg
repz
and
push
aaa
adc
shlb
sbb
loop
stos
mov
clts
xchg
in
je
imul
pusha
adcl
sub
and
jne
push
stc
pop
and
xor
scas
push
loop
sbb
pop
pop
scas
movsb
push
das
mov
xchg
scas
clc
stos
mov
repnz
fwait
add
sbb
testl
in
push
jecxz
lods
pop
lret
ds
adc
mov
data16
mov
stos
add
jmp
outsb
fldl
ds
jns
inc
inc
lea
or
sbb
in
sub
adc
jne
mov
iret
pop
mov
cli
out
xchg
nop
in
pop
leave
jb
fstpt
jne
pusha
fs
inc
mov
in
popf
mov
dec
mov
gs
daa
out
add
fldl
enter
or
out
sub
jb
dec
ret
rolb
cmp
mov
clc
iret
xchg
dec
dec
cmp
movsb
xchg
cmpl
aad
lds
push
inc
xor
inc
cmp
mov
mov
das
insl
into
xchg
aas
cmp
sbb
sbb
mov
sbb
jb
sub
insl
cli
dec
sub
cmp
and
icebp
out
mov
out
pop
mov
xchg
sbb
cmp
sbb
xchg
sub
aas
and
add
jecxz
jecxz
cld
call
clc
dec
jmp
jge
dec
add
ljmp
mov
add
faddl
out
inc
fisttps
out
out
mov
test
into
push
out
mov
adc
push
aas
and
dec
and
sub
aas
xor
mov
pop
insb
loopne
loope
cmpsb
scas
xchg
shrb
aam
lret
dec
sbb
mov
cmp
daa
sbb
jecxz
icebp
push
cli
mov
daa
dec
jns
cli
loop
sarl
inc
dec
mov
test
insb
jb
frstor
push
fstl
repnz
dec
cmp
add
mov
push
imul
adc
lods
sbb
lock
out
shl
jns
and
xchg
push
test
insl
clc
add
sahf
dec
cmp
push
cli
imul
sbb
loopne
ljmp
fcmovb
cmp
xlat
mov
std
jnp
add
push
divl
mov
ljmp
stos
add
mov
jnp
pop
imul
pop
mov
aaa
mov
dec
mov
jp
dec
or
int3
pop
push
xchg
loopne
adc
outsb
xor
outsl
sbb
mov
xor
pop
and
adc
addr16
dec
lock
icebp
cld
stos
push
lods
xchg
cld
iret
dec
arpl
xchg
int3
stos
jbe
mov
outsl
mov
repz
pslld
mov
inc
dec
push
movsl
add
push
insb
mov
adcb
xor
es
push
aad
pusha
rcl
jae
mov
shl
mov
loope
adc
jge
sbb
imul
lds
xor
adc
push
add
inc
mov
fcmovnu
fs
jge
insb
loopne
movups
aas
out
lock
inc
jb
sti
jp
sahf
scas
and
mov
xchg
es
fwait
sbb
mov
lods
push
or
mov
call
and
ret
and
movb
stos
mov
dec
push
cli
aaa
aaa
stc
test
pop
jg
idivl
mov
lods
pop
push
inc
push
gs
insb
das
pop
movl
mov
mov
jns
rorb
imul
sub
enter
cwtl
pop
xchg
in
sub
stc
adc
aad
lahf
cs
pushf
inc
movsb
aas
ja
movsl
frstor
pusha
decl
test
adc
mov
int3
xor
pusha
repnz
dec
loop,pt
pusha
cmp
call
ret
adc
shrb
leave
push
xor
outsl
xor
ja
je
mov
push
fsubl
ret
out
pop
inc
mov
clc
cmp
sbb
ret
leave
mov
inc
dec
je
jo
ljmp
sbb
lahf
jg
shlb
sarl
data16
inc
cmp
or
loope
jp
lret
hlt
jo
jg
sbb
into
jle
shl
dec
repz
scas
andl
xor
and
xor
mov
xchg
cmp
nop
outsl
mov
in
pushl
pop
imul
xchg
stos
cmpsl
push
adc
rcl
sbb
inc
rolb
adcl
in
std
mov
adc
pop
push
xchg
or
lds
xor
pushf
rorl
mov
imul
movsb
add
int
std
loop,pt
test
push
or
stos
add
and
and
lods
orl
ss
mov
shll
mov
ds
test
out
mov
jge
dec
aas
and
pop
iret
jg
mov
jae
xchg
mov
dec
push
or
adc
in
cwtl
adc
mov
jo
movsl
push
je
pop
mov
fldcw
int
dec
jbe
aaa
test
cmc
or
cmp
cmp
aam
fnstenv
fisubl
sub
pushf
clc
and
scas
push
push
adc
sbbl
test
dec
lcall
push
add
std
jg
fdivl
push
into
or
sub
fmull
in
xor
sbb
fs
push
stos
push
dec
into
enter
mov
out
add
mov
xchg
xor
xor
add
mov
jbe
or
cmc
mov
icebp
push
mov
mov
ja
ja
push
or
ds
in
sbb
jp
mov
and
cwtl
adc
pop
and
jecxz
mov
sbb
aas
push
loop
fwait
dec
jecxz
mov
rorb
pop
adc
lods
add
sbb
sti
sub
lcall
lret
clc
inc
shlb
imul
scas
pop
movsb
mov
jp
pop
jmp
in
mov
aam
dec
les
fmull
inc
and
xchg
inc
es
loopne
cs
iret
imul
pop
dec
fdivl
lods
dec
and
hlt
jmp
cmp
lahf
call
sti
fsubs
mov
cmp
mov
xor
pop
mov
int
stc
out
nop
sbb
push
sub
mov
insb
sub
aad
xor
popl
fimuls
je
fldl2t
adcl
pop
jne
popf
andl
add
mov
xor
adc
int3
mov
add
xchg
in
pop
sahf
mov
or
dec
inc
xor
into
add
mov
pop
daa
int3
dec
lret
hlt
imul
cli
stc
pushf
xor
cmp
cmp
gs
incb
pop
add
sbb
js,pn
mov
jns
shll
ss
bound
sti
pusha
and
mov
aaa
bnd
int
imul
sbbb
in
clc
push
and
test
roll
imul
push
in
icebp
push
das
stc
int
xchg
xlat
shrl
mov
sub
and
xor
inc
push
arpl
mov
cli
out
jae
cwtl
mov
in
cwtl
push
adc
xchg
mov
cmp
sub
mov
ret
fldt
sub
fbstp
add
imulb
out
xchg
push
mov
ds
addr16
jg
loop
push
insb
jg
xchg
push
jnp
xchg
shrb
stos
jne
dec
shlb
enter
out
ljmp
adc
mov
cmpsl
icebp
lahf
xor
push
pop
mov
or
orl
mov
popa
adc
daa
aad
stc
je
sub
decb
jle
sub
jo
xlat
insb
jecxz
sbb
xor
sbb
popa
test
sub
lret
mov
pushf
not
push
pushf
push
push
sub
sahf
push
pop
add
addl
fcomps
insb
bound
xchg
dec
push
iret
xor
jp
cmp
mov
in
mov
fs
or
stc
clc
in
in
or
inc
aaa
das
pop
sub
int3
test
mov
imul
sub
loope
shl
ja
out
xor
mov
andl
and
fcmovnb
shl
xor
jecxz
mov
testl
jbe
and
sub
fidivrl
cltd
pop
fsubl
jle
or
jge
or
lods
fnstenv
or
rorl
dec
leave
jns
ret
dec
pop
or
sub
test
xchg
dec
inc
test
iret
or
das
lahf
sbbl
jecxz
pushf
call
mov
js
jmp
jbe
mov
xchg
fdivrl
stc
sub
push
jg
inc
xor
push
jno
hlt
mov
add
jl
imul
popw
outsl
pop
and
mov
inc
sbb
jne
cmp
imulb
ja
sbb
sbb
insb
mov
popw
insl
push
push
sbb
lret
inc
pop
pop
mov
xor
sbb
xchg
or
mov
fwait
out
and
lret
sbb
fidivrl
in
adc
lret
pop
negb
add
jmp
in
or
xchg
pop
mov
adc
in
arpl
ss
loopne
sbb
mov
fsts
mov
lock
ret
mov
adc
fstpl
scas
dec
mov
insl
jb
sub
stos
or
notl
inc
dec
sbb
cmp
dec
arpl
xchg
ss
lods
pop
xchg
inc
test
sbb
inc
jnp
jmp
fidivl
bound
push
sub
ud0
sbb
outsb
jno
dec
loope
flds
inc
mov
push
push
stos
jmp
arpl
dec
imul
mov
loop
gs
sahf
add
mov
mov
movsb
push
cmp
lock
push
in
jns
pop
mov
cli
xchg
lds
xor
push
jp
inc
pop
or
mov
fsts
inc
jge
imul
test
shll
lea
lods
leave
dec
stc
dec
and
call
and
fmul
dec
test
sub
fs
insl
fistps
xchg
idivb
sti
pop
aad
out
int
or
testl
idivb
les
dec
push
push
xor
xchg
leave
lret
mov
add
mov
in
jns
xor
lea
adc
add
lea
adc
not
js
movsb
js
cmp
jbe
imul
cmp
jg
insb
mov
cmp
dec
enter
adc
sahf
sbb
notl
sbb
ss
mov
dec
jno
jne
into
pop
imul
je
and
mov
aas
jo
dec
mov
fisubs
pop
js
push
or
hlt
mov
sub
inc
adc
add
mov
xchg
inc
mov
jno
adc
lods
fs
gs
cmc
fsubrs
subb
push
imull
in
xchg
sub
adc
fistps
inc
les
fidivrl
and
imul
testb
dec
jle
pop
adc
sbb
repz
adc
cmc
sbb
stos
hlt
lds
pop
pop
jg
bound
cmc
cmp
testl
mov
int3
dec
mov
dec
add
cmp
sub
je
stos
movsb
test
popa
mov
lds
jl
dec
push
adc
es
or
nop
push
jmp
fsts
test
mov
xchg
int3
xchg
lcall
test
or
or
stos
das
mov
push
jmp
outsb
xor
cmp
icebp
les
lds
das
adc
push
xor
push
loop
outsb
sbb
popa
sbb
es
lret
negl
mov
push
xchg
dec
xorl
ret
data16
mov
jg
xor
imul
orb
cmp
or
or
push
mov
out
adc
scas
outsl
jo
adc
add
fmuls
sbb
adc
xchg
out
popa
cmp
imul
cltd
or
mov
lock
mov
clc
sbb
stc
js
and
xchg
repz
or
mov
mov
test
pop
out
xchg
sahf
and
and
xchg
mov
int
inc
dec
sbb
pushf
sub
test
cmp
lcall
mov
enter
leave
pop
stos
mov
aam
in
sub
lret
ss
sbb
mov
jmp
pop
int3
or
stos
notb
cmp
insb
das
js
mov
cli
sbb
mov
popa
mov
lret
mov
repz
xchg
adc
sub
inc
sarl
inc
sbb
jno
call
test
jnp
push
or
jmp
jno
pusha
or
mov
adc
mov
rclb
frstor
sbb
sub
add
orl
test
sbb
sub
in
cmpsb
xchg
lods
in
mov
rcrl
jb
lods
lea
pop
push
in
pop
fistl
cmp
sar
mov
pop
scas
jno
mov
lds
mov
cltd
jp
xor
ljmp
jae
fsin
in
sub
pop
loopne
hlt
jns
movsb
push
fistpll
dec
and
cmp
aam
mov
outsb
xor
ret
sbb
in
xor
jbe
xchg
push
rol
sub
add
mov
mov
stc
add
pop
or
lea
add
addr16
jg
cwtl
mov
mov
lret
pushf
call
loope
data16
inc
mov
sarl
xor
mov
push
adc
xchg
mov
push
xchg
inc
push
ss
cmpsb
xlat
sti
pop
int
push
imul
call
jg
mov
fisubrs
dec
mov
enter
and
mov
lods
pop
outsb
and
enter
mov
ror
pop
aaa
sub
push
mov
insl
mov
loop
fcomps
test
dec
cmp
cmp
fwait
rcrb
and
xchg
dec
rcl
cmp
ror
stc
call
cmp
push
push
fidivrs
clc
inc
stos
mov
ret
in
add
dec
lret
mov
sub
or
add
mov
loope
lcall
push
popf
lock
mov
or
inc
adc
sub
in
xor
xor
mov
insl
dec
fcoml
insb
sub
sub
mov
adc
movsb
add
cmpb
ljmp
andb
add
aam
pop
ss
repz
xchg
ds
fistpll
push
scas
add
adc
mov
sbbl
jle
xor
in
lods
pop
add
ljmp
mov
dec
js
arpl
fisubrl
cli
shr
insb
sbbb
cwtl
jmp
jo
dec
mov
xchg
imul
shlb
adc
mov
mov
pushf
outsb
mov
xchg
pop
jno
mov
mov
sbb
ljmp
das
test
mov
xchg
sub
lret
inc
aas
lods
and
cmp
dec
addr16
mov
xor
fimull
in
sub
mov
mov
jg
shrl
int3
loop
in
dec
inc
inc
adc
sbb
sbb
cmpsb
stc
lds
push
mov
pop
leave
inc
shll
out
xchg
cmc
xchg
rorb
push
cltd
int
add
lock
push
sti
nop
pop
stc
sbb
jge
cmpsl
mov
js
cmp
inc
sub
and
xor
cmc
imul
add
or
mov
xor
inc
loop
inc
cmp
sarl
enter
cmc
or
sbb
fisttps
mov
adcb
shlb
rcll
push
fbstp
into
in
movsl
mov
cmpsl
inc
test
mov
mov
mov
ret
pop
dec
xor
lahf
add
ds
fwait
into
faddl
push
adc
push
decb
data16
add
pmaxub
mov
mov
adc
or
divl
lods
cmp
sub
rorb
ret
xor
and
mov
rol
jmp
ror
lret
cmp
loop
cwtl
jns
mov
inc
imul
mov
dec
sub
inc
dec
std
lods
adc
push
dec
outsl
sbb
sarb
xchg
jnp
mov
sti
insb
and
jle
xorps
jle
cwtl
iret
pop
ret
ror
push
mov
jno
jne
pop
cli
out
mov
sbb
xor
sub
sub
cmp
xor
data16
xor
pop
push
xor
stos
loop
dec
insb
push
popa
mov
push
mov
roll
fdivrl
add
hlt
stc
or
jae
outsl
push
pop
adc
dec
cmp
mov
push
sub
and
pop
out
push
sbbb
or
push
mov
popa
push
bound
js
negb
adc
dec
mov
pushf
or
into
ret
mov
pop
imul
test
ficoms
sbb
repz
insb
xor
mov
insl
jmp
cmp
js
loopne
cld
add
imul
aam
or
loope
jle
xor
stos
icebp
das
pop
adc
mov
cli
sbb
pop
xor
cli
jae
dec
xchg
aaa
sub
mov
insb
and
sbb
jge
sbb
sahf
mov
mov
push
adc
popa
in
imul
dec
shll
mov
subb
add
mov
cmp
addr16
lret
loop
jp
repnz
lcall
jp
aam
jno
imull
add
jbe
in
jno
add
jg
and
xchg
xor
push
cld
push
nop
in
xchg
stos
cli
cmpsb
sahf
xor
das
sub
xchg
jl
jecxz
imul
pop
in
mov
jae
mov
and
mov
push
das
out
cld
dec
frstor
jae
and
call
xchg
push
push
leave
out
into
js
cmp
clc
outsl
sar
outsl
in
sub
jbe
add
inc
xor
push
sub
js
adc
inc
xor
xchg
and
push
sbb
jle
ret
fimuls
adc
mov
xchg
mov
jp
dec
jge
fildll
cs
mov
test
test
out
push
bound
mov
aad
mov
ja
mov
sbbb
fisttps
cli
sbb
aam
fidivrl
and
and
sub
out
addr16
and
push
add
jle
das
add
loope
fldl
icebp
scas
dec
pop
jg
fsubrs
lret
stc
ss
lcall
xor
sti
dec
push
jg
and
add
clc
cmp
add
xchg
enter
roll
pop
test
fstpl
repnz
push
dec
xchg
jo
jle
xor
test
pop
push
sti
pop
sub
pop
push
cltd
push
pop
adc
mov
sbb
dec
js
fnstenv
jg
adcl
sub
xchg
and
out
jle
imul
mov
nop
ret
xchg
mov
sub
cmp
jne
sbb
out
test
shlb
mov
dec
mov
loop
in
std
inc
mov
inc
test
xchg
into
rorl
mov
mov
adc
sbb
xchg
adc
aaa
mov
xlat
mov
cmc
xor
leave
mov
jmp
dec
ror
lret
movsl
test
lret
push
jns
sbb
mov
pop
push
stos
jnp
push
out
bndldx
pop
dec
mov
cltd
test
enter
rolb
pop
jne
orl
gs
fiadds
or
inc
shll
adcl
ret
jo
pop
jge
inc
mov
jge
mov
mov
mov
incl
shll
addr16
and
pop
pop
pop
xchg
jl
sbb
ljmp
fstps
jb
lods
push
insl
push
xchg
stos
mov
mov
jno
clc
dec
mov
push
mov
rcll
fisubrl
or
xchg
fcoml
cmp
xchg
sbb
pop
push
push
clc
push
rorb
adc
mov
jg
cmp
lods
sbb
sbb
and
test
adc
cmpsl
inc
pop
mov
xlat
and
dec
sbb
jno
sbb
cltd
fcomps
pop
stc
ret
sbb
xor
mov
mov
add
mov
push
jnp
or
adc
inc
aaa
fdiv
mov
or
sub
mov
popf
and
iret
cmpl
cmpsl
jl
sbb
es
stos
sub
mov
cmp
cmp
mov
adc
jmp
repnz
cld
outsl
ret
jle
sbb
fldenv
adc
movsb
dec
cld
lahf
cli
andl
in
les
push
ror
imul
xchg
sti
mov
es
sbb
xchg
orps
loopne
fdivl
dec
fiaddl
lea
lock
adc
inc
lea
nop
std
jg
mov
popf
adc
inc
jnp
in
mov
mov
mov
inc
je
aas
cwtl
xor
or
add
push
loop
imul
jae
xor
cmpsl
fldenv
lcall
jl
test
cmp
adc
daa
cmp
sbb
add
jp
sbb
ss
popa
test
cmc
ljmp
gs
mov
xor
xor
aas
inc
dec
push
jbe
leave
bound
mov
sbb
fs
add
xchg
popf
push
cld
dec
xor
inc
leave
rolb
xchg
jno
into
mov
notl
jnp
aaa
aam
push
in
mov
add
clc
out
cmpb
lcall
mov
das
mov
loop
dec
mov
daa
shll
andb
dec
pop
sti
aad
pop
rclb
mov
shr
xchg
or
test
adc
pop
or
mov
ret
push
imul
stc
cmp
xchg
xor
call
fstpl
lret
mov
mov
push
lret
scas
xor
inc
rclb
xchg
dec
lret
and
mov
inc
pop
iret
lret
leave
lods
call
pop
sub
pop
dec
in
push
add
cmpsl
mov
jne
cmpsb
repz
dec
push
xchg
push
cmp
inc
leave
xor
cld
jg
in
sub
aam
lods
mov
outsl
sbb
push
xchg
pop
sbb
push
mov
sbb
push
cmp
scas
sti
pop
jmp
leave
push
push
outsl
stos
stc
popa
sub
adc
mov
jo,pn
andb
sbb
scas
test
mov
enter
inc
sbb
test
fsub
fiaddl
pop
stc
rolb
jne
dec
sub
out
sub
js
lret
cmpsl
inc
fstps
in
sub
addl
aas
lock
jnp
dec
enter
sub
inc
fcos
aaa
or
xor
adc
push
sbb
jle
adc
cli
daa
push
lret
int3
jb
test
call
fstpt
lods
sbb
stc
add
push
icebp
and
jnp
inc
jnp
jbe
xor
push
rcrb
aas
shll
xorb
stos
scas
xchg
xchg
outsb
cltd
xchg
aaa
inc
es
movsb
popa
add
shr
mov
cmpsb
nop
repnz
lcall
inc
push
mov
shrl
push
add
xor
dec
mov
lret
fdivs
adc
or
and
mov
cltd
lock
inc
jo
adc
xor
cltd
jge
arpl
push
insb
out
jnp
mov
adc
lcall
push
jns
adc
cmp
outsl
jno
icebp
movb
mov
mov
movsl
jae
dec
sub
repnz
push
dec
in
mov
outsb
ret
outsb
mov
cmp
adc
fsubrl
int
movsb
rol
dec
push
mov
xor
das
cs
out
inc
andl
hlt
jecxz
sub
pop
sar
mov
xlat
mov
into
xor
int3
fsubr
lret
ss
fwait
cmp
mov
sub
int
nop
and
std
ja
outsb
movsl
jge
movsb
sti
cmp
pop
or
sbb
sarb
mov
clc
lret
out
xchg
adc
push
idivb
sub
xor
daa
cmpsb
aam
dec
xor
mov
xchg
sbb
pop
adc
push
add
pop
aas
into
or
add
push
pop
fstl
sub
sbb
fldenv
xchg
jge
mov
xchg
or
call
das
and
sahf
mov
cmp
add
outsb
int
pop
fimuls
xchg
sbb
mov
call
mov
popf
ret
adc
push
push
push
or
inc
push
jae
pop
aam
stc
sahf
in
xchg
movsl
mov
mov
mov
shr
adc
mov
fst
faddl
mov
xor
lea
jne
fs
push
lds
cs
cmpsl
mov
test
jo
sbb
insb
push
xchg
cli
popf
fidivrs
pop
into
aas
test
in
inc
addr16
sub
mov
and
mov
jae
push
fnstenv
jl
mov
lret
fwait
xor
pop
sar
loop
pop
push
imul
sbb
mov
inc
test
ljmp
mov
daa
repnz
adc
jge
adc
sub
xchg
psllq
jnp
cld
sub
jb
nop
dec
sbb
out
mov
stc
add
or
push
add
fidivrs
dec
xor
add
or
and
lock
push
mulb
stos
popf
mov
cmp
and
orl
push
aas
push
pop
in
lods
loop
mov
xchg
sub
add
push
fs
out
roll
repnz
mov
repz
stc
push
jne
mov
setg
inc
mov
xchg
push
popa
sbb
movl
stos
out
pop
aas
in
sub
xchg
orl
mov
inc
xor
leave
popf
push
sub
cwtl
adc
mov
xor
add
pop
gs
xchg
aas
inc
arpl
dec
xchg
movsb
adc
mov
data16
repz
cmp
mov
int
xorb
dec
cmp
and
ret
imul
popa
daa
xchg
sub
cmp
fisttpll
and
add
xorb
pop
sub
stc
pop
sub
sub
pop
movsb
out
xor
fldcw
cwtl
adc
pop
rcll
int
mov
or
or
into
pop
shl
push
loope
sarb
test
fildl
aaa
cwtl
ja
addr16
and
gs
jbe
dec
xchg
out
js
out
shll
lcall
gs
sbb
movsb
push
add
sub
adc
lods
into
cli
adc
jne
and
shll
int
adc
movsb
xor
movsb
sbb
test
shr
mov
orb
shll
leave
bound
popf
mov
jmp
out
lods
popf
lea
push
push
rolb
xchg
shl
sbb
push
and
test
vminps
sub
xor
lret
push
push
je
pusha
jle
xchg
in
xchg
mov
mov
or
testl
sarl
insl
scas
in
xor
insl
add
test
or
add
test
push
js
inc
jno
in
push
pop
ja
sbb
sahf
ljmp
xor
add
inc
xchg
add
mov
jle
andb
mov
jae
jg
push
jbe
mov
ret
jae
jo
mov
push
adc
sub
mov
dec
fs
test
add
daa
mov
mov
xor
cli
lods
xchg
and
lret
fwait
jbe
dec
lods
cs
sub
adc
icebp
mov
stos
repnz
outsb
pop
repz
cmpsb
iret
and
out
imulb
dec
jno
scas
cmp
pushf
test
pop
sbb
jae
jb
pop
dec
dec
xchg
aas
xor
iret
sub
sbb
cmp
out
int
imul
jp
xchg
dec
shlb
inc
dec
push
sbb
fistps
mov
adc
les
pop
cs
fmull
xor
gs
fsts
test
and
adc
icebp
cli
int
lods
mov
and
lret
aas
and
add
xchg
mov
fistps
into
popf
aaa
sbb
fdivrs
push
mov
call
push
aad
lcall
pusha
ror
rcr
ja
mov
xor
sahf
aad
les
stos
sub
mov
mov
popf
lret
out
xor
mov
cmpb
mov
repnz
nop
mov
or
jge
fwait
cmp
adc
add
xor
in
add
xor
pop
mov
push
iret
je
lcall
sub
iret
ret
pop
shll
je
enter
addr16
pop
popa
pop
mov
in
push
mov
stc
dec
call
sbbb
mov
fs
bound
lods
mov
add
shrb
mov
mov
icebp
imul
add
hlt
push
xchg
mov
enter
mov
xchg
jns
aam
outsl
stc
sbb
pop
sbb
sub
mov
lea
adc
inc
mov
sahf
cltd
stc
xchg
mov
dec
push
mov
cmpsb
fcomps
add
and
jnp
jno
loopne
ja
ds
loop
repz
cltd
adc
adc
mov
inc
cmp
fs
push
orl
sub
in
cmp
loope
inc
aam
sbbl
aam
dec
dec
in
adc
dec
cmp
imul
push
stos
iret
cmp
add
mov
xchg
adc
pop
orb
add
adc
pop
sti
xor
mov
mov
shrl
sub
js
cmp
push
mov
jp
pop
sub
jo
aaa
jg
cmpsl
shll
or
inc
loop
cmpb
in
dec
dec
jge
or
andb
mov
xchg
ficoms
xchg
fisttpl
sbb
les
popa
adc
and
push
xchg
or
sbb
cwtl
jmp
jg
adc
push
mov
sub
cmp
adc
dec
or
aaa
mov
div
cmp
push
popf
adc
mov
lret
xchg
int3
cmpsb
lahf
out
popa
ja
das
out
jl
in
stc
or
sarl
arpl
dec
sub
jno
sahf
push
jnp
pop
cld
es
xor
sub
das
sbb
mov
clc
inc
mov
xchg
out
shlb
ret
push
add
loop
mov
test
xchg
hlt
or
push
int3
ret
add
xor
mov
fldt
pop
and
cmc
in
mov
mov
fucom
leave
fs
jne
shl
sub
or
ret
stos
jmp
lcall
sub
sbb
cmpsl
pushf
sbb
sahf
les
out
mov
aam
and
inc
sub
imul
jb
mov
imul
cli
xor
and
inc
inc
lret
mov
jmp
or
and
inc
leave
shll
andb
mov
mov
push
out
dec
push
jg
insl
xor
jo
mov
decb
pop
dec
dec
inc
push
mov
xor
leave
jg
push
mov
inc
icebp
popf
pop
push
sbb
les
mov
push
scas
cwtl
add
js
xchg
ljmp
dec
pushf
test
xchg
sbb
aam
insb
andb
dec
sbb
rcl
mov
mov
inc
loope
jg
rol
sti
jle
add
in
mov
lea
shr
je
push
lcall
mov
cmp
and
leave
xor
cmp
xchg
faddl
adcb
jne
add
dec
pop
out
lahf
sbb
xchg
ret
adc
or
xchg
sub
loope
and
dec
in
icebp
add
mov
add
int3
test
nop
pop
push
pop
outsb
dec
xor
aad
ret
int3
xor
shl
enter
inc
fisubrs
rcll
inc
jmp
jns
paddsb
sbb
dec
bound
ss
and
cli
repnz
scas
int
inc
leave
sti
sub
imul
stos
push
imul
sbb
shll
adc
jle
push
icebp
xor
inc
pop
cmpsl
and
cmc
jge
pop
aad
and
jae
cmp
and
dec
mov
xchg
sub
test
lret
xchg
gs
inc
mov
push
subl
push
daa
cmp
repnz
and
into
imul
and
cmpsb
pop
lods
mov
rclb
lret
inc
mov
lock
lret
out
jle
outsl
mov
test
into
aaa
loope
cvttps2pi
ret
arpl
pop
mov
xchg
adc
dec
in
push
fs
out
repz
dec
sbb
cli
hlt
jp
cmp
cmp
add
mov
pop
in
add
sub
adc
test
sub
imul
push
outsl
std
cmp
add
xchg
lods
pop
mov
iret
movsl
pusha
scas
or
push
in
call
cld
sahf
movsl
out
sbb
or
sti
jae
sbb
aas
mov
dec
inc
inc
mov
jp
and
jbe
leave
jecxz
daa
jb
mov
mov
push
push
jae
clc
movsl
add
movsl
and
ljmp
test
nop
lahf
pop
add
lods
ss
ljmp
fstpt
dec
sub
xchg
int
out
ljmp
cmp
mov
out
scas
inc
repz
lock
xchg
les
push
and
or
cmp
fdivrp
int
scas
leave
sub
or
mov
dec
add
pusha
and
loopne
notl
jne
adc
out
int
loopne
dec
jecxz
pushf
xchg
jne
pop
cmc
xchg
stos
xor
outsb
push
ljmp
into
popf
in
add
push
lcall
xlat
sbb
or
hlt
fldcw
push
sti
push
shl
xchg
daa
shrb
mov
fiadds
push
fisubrs
push
ret
push
loop
xchg
in
hlt
push
ret
add
notl
and
sbb
xchg
pusha
xchg
adcb
sbb
stc
push
pop
std
ds
push
mov
mov
or
adcl
and
xchg
out
mov
mov
repz
test
add
mov
inc
cli
push
popf
lds
daa
mov
inc
adc
push
dec
push
fists
test
into
mov
mov
mov
push
in
arpl
jnp
lret
out
fisubs
daa
lock
xchg
insl
mov
repz
popa
ss
push
imul
mov
fcompl
clc
mov
pop
or
frstor
scas
in
shl
icebp
stos
in
leave
xchg
jmp
adc
arpl
into
ret
mov
call
xchg
mov
or
cwtl
movsb
in
test
or
in
call
cmp
call
push
popf
push
inc
mov
int
shll
or
xchg
movsb
outsb
mov
imul
adc
xlat
insb
mov
sahf
push
cld
sub
or
dec
lods
mul
ss
mov
test
call
or
cli
xorb
imul
mov
movsb
ja
cmp
shr
iret
inc
enter
xchg
aas
dec
push
enter
adc
jg
cld
sbb
mov
mov
mov
jne
aas
xor
outsb
cmp
lds
enter
jnp
fs
test
or
enter
xchg
fisubrs
jb
push
inc
adc
and
mov
inc
cmp
inc
pop
hlt
aad
inc
pushf
dec
jp,pn
push
aas
mov
iret
cwtl
mov
ficoms
stos
imul
leave
push
pop
lds
je
push
pop
dec
or
sub
out
into
sbb
adc
add
jmp
inc
shrb
mov
ss
ret
mov
xchg
cmp
mov
pushf
lahf
bound
cmp
jns
loope
repnz
imul
adc
mov
sub
pusha
fs
mov
jle
cs
mov
stos
movsb
add
or
adc
inc
inc
lret
aam
ljmp
test
cmc
add
std
stc
xor
lret
dec
cmp
lret
lods
fsubrs
divl
scas
lahf
push
sub
scas
jle
std
int
jae
imul
sahf
mull
push
jmp
add
mov
test
sub
das
mov
mov
stc
das
mov
mov
adc
icebp
adc
sti
cs
stos
pushf
shlb
mov
cld
mov
loopne
cmp
loopne
xchg
inc
insl
cld
xchg
iret
outsl
push
jae
mov
jne
lds
pop
mov
adc
add
push
outsl
cmc
movsb
out
cmp
mov
xchg
sbb
data16
repnz
xchg
cmp
mov
das
mov
adc
inc
push
hlt
inc
pop
inc
lret
in
addr16
cltd
push
loope
xchg
inc
or
les
sahf
out
mov
fistpll
out
lret
cli
hlt
add
xor
mov
int
jb
dec
push
addr16
add
out
test
sti
mov
mov
mov
int3
push
sub
xchg
xchg
sub
push
and
pop
xchg
insb
mov
jnp
ss
push
mov
mov
pop
mov
clc
mov
scas
cltd
push
mov
outsl
and
add
cmp
sub
aas
loop
mov
mov
mov
mov
cmp
xchg
pusha
out
jmp
ret
cmpsl
jb
xor
nop
sbb
lcall
sahf
negb
int3
out
andl
movsl
lods
fisttpl
mov
imul
jbe
push
mov
js
mov
aas
sti
pop
rorb
in
dec
repnz
in
sbb
dec
dec
jle
jns
push
jne
call
inc
loope
add
and
xchg
mov
and
jno
int3
mov
pop
add
insb
add
or
iret
lods
mov
sti
cwtl
sbb
add
mov
inc
aad
scas
data16
sbb
hlt
fidivl
imul
mov
or
ficoml
mov
addr16
mov
ret
fs
das
cli
jp
nop
jl
push
ds
jg
fs
dec
push
test
dec
pop
sub
add
fdivrs
adc
sub
jae
sbb
mov
jl
mov
sbb
jecxz
insl
lock
jno
xchg
loope
dec
out
test
lods
cmpsl
pushf
into
dec
cmpb
xor
push
adcb
xor
cmc
out
push
imul
fwait
hlt
push
mov
jnp
mov
icebp
jbe
ret
inc
lds
out
out
lcall
jmp
in
jmp
fwait
jle
gs
mov
pop
xor
ss
sub
cmp
loopne
sbb
mov
outsl
push
add
push
xor
insl
mov
pop
shrb
into
push
fidivrl
mov
cmp
dec
dec
mov
and
sub
pushf
push
clc
sbb
shrl
inc
mov
dec
cmp
test
fdivrl
les
mov
add
cmc
repz
jb
popf
lds
imul
push
xor
movsb
pop
cli
mov
test
aad
popa
call
loope
mov
and
cmpsb
push
testl
pop
addr16
jl
loope
outsb
mov
sbb
lods
and
add
push
addl
hlt
mov
test
or
mov
fs
lds
and
call
ja
sbb
jae
js
mov
mov
xchg
nop
xchg
mov
shlb
add
lahf
sbb
xlat
dec
mov
mov
cwtl
xchg
push
mov
idivb
xor
addr16
cmc
testl
sahf
dec
jp
cmp
jg
jmp
lcall
fistps
cmpsl
and
push
lock
fnsave
jae
sbb
inc
sub
cmpsl
fs
sub
rcll
stc
mov
adc
mov
cmpb
addr16
stos
negl
icebp
ret
and
ficomps
xchg
lods
lods
js
lcall
mov
imul
dec
fsubs
pop
cmpsb
fldl
mov
not
hlt
rorb
sti
inc
mov
sub
adc
rcrb
inc
enter
or
jne
mov
jecxz
test
outsl
call
dec
and
dec
ficomps
cmp
testl
sub
and
imul
xchg
les
xchg
in
mov
repz
daa
push
fs
push
mov
or
mov
mov
add
popl
loope
into
mov
dec
std
icebp
movsb
or
aad
into
pop
sub
repz
fnstcw
jg
adc
sbb
push
mov
movsb
mov
pop
sub
and
jp
sub
js
cwtl
sub
dec
push
dec
shlb
mov
jmp
rolb
fcoms
pop
sar
jp
add
sbb
scas
inc
jo
xchg
mov
and
insl
jp
cs
push
lret
pop
into
arpl
nop
dec
jmp
jns
inc
test
mov
bound
jae
outsl
je
xor
jae
rcr
add
bswap
in
jne
pushf
push
cmpsb
in
out
popa
pop
xchg
dec
je
sarb
adc
addr16
cmp
lods
int3
xor
hlt
mov
pop
pusha
cmp
addr16
pop
dec
movsl
fdivrp
lret
pop
jl
fs
adc
or
inc
inc
dec
adc
push
test
pop
and
dec
lea
xchg
insl
bound
int
push
jle
cmpsl
out
push
ljmp
stos
mov
pop
gs
ss
inc
mov
add
lds
fistpll
xchg
mov
lret
das
in
mov
leave
jp
push
xlat
mov
das
push
mov
stc
in
repnz
arpl
aam
scas
inc
test
andl
mov
inc
js
shrb
jp
jno
inc
out
dec
in
popf
out
js
lock
adc
ret
fmull
and
fisubrs
mov
jg
aad
adc
imul
cmp
jmp
pop
aad
pop
aas
mov
shl
inc
mov
daa
cmp
or
cmp
clc
pop
pop
lcall
iret
lods
cmp
mov
bound
sub
les
rcrl
push
sbb
jge
pop
xor
in
inc
fwait
mov
test
sub
mov
push
jmp
pop
mov
cwtl
movsl
push
inc
je
or
adc
xchg
rcr
push
outsl
jno
les
aas
mov
sahf
inc
dec
in
xchg
mov
call
jge
pop
addr16
adc
pop
pop
mov
push
mov
out
loop
clc
gs
mov
stc
mov
js
jmp
mov
or
mov
lods
push
insb
mov
test
jmp
cmp
aaa
loope
sub
scas
pop
jno
mov
scas
push
dec
cmp
cmp
mov
insl
mov
mov
mov
lret
dec
xchg
loope
popa
aam
mov
clc
push
pop
add
je
repz
pop
dec
xchg
out
pop
out
or
sbb
imul
dec
insl
sbb
data16
lret
jb
or
out
fimuls
fstl
std
xor
or
nop
xor
and
cli
sbb
or
cmp
inc
jno
imul
xchg
dec
lock
xchg
outsb
adcb
pop
inc
pop
aaa
les
dec
or
int3
mov
pusha
rep
push
movsl
mov
jmp
pop
in
or
sahf
and
imul
mov
dec
or
pop
loopne
push
pop
mov
ffreep
pop
cmc
aas
dec
daa
inc
lahf
loope
sub
inc
cli
jb
into
andl
inc
jecxz
divb
ss
mov
push
push
jecxz
aaa
mov
pop
pmulhuw
cmc
out
dec
data16
dec
shrl
add
pop
jle
pop
adc
stos
mov
and
mov
mulb
mov
jecxz
fadds
or
pop
xlat
pop
adc
lret
mov
mov
push
aas
mov
rolb
cmp
add
in
lret
addb
sub
scas
or
std
push
mov
out
mov
adc
jo
mov
mov
add
mov
aam
stc
fmul
sbb
jnp
pop
mov
in
aaa
add
mov
sub
adc
ja
jmp
dec
add
rcll
inc
push
push
aaa
mov
lods
dec
ficoms
push
sbbl
scas
icebp
dec
mov
dec
shrl
in
mov
dec
cld
mov
sbb
push
pop
pushf
xor
push
les
lret
jg
mov
xchg
test
repnz
dec
test
xchg
inc
scas
sbb
scas
jmp
fisttps
pop
mov
xor
sub
jns
mov
in
test
scas
and
lea
push
jge
mov
daa
repz
dec
dec
mov
imull
inc
push
out
testl
cmc
cmp
xorl
or
fsts
popf
leave
mov
push
xor
dec
inc
xchg
ds
inc
mov
cmpsl
imul
or
lret
cwtl
sbb
out
dec
add
movsb
lods
hlt
aaa
xchg
out
fnstcw
leave
jne
or
sbbb
and
mov
cmp
fiaddl
xor
movsl
outsl
fwait
mov
cmp
paddusb
cmp
push
shll
fs
jns
out
adc
ret
lds
sahf
faddl
mov
pop
sbb
cmp
clc
out
cmpsb
or
xor
sete
sahf
cmp
dec
mov
stc
les
stc
cltd
dec
cwtl
mov
adc
pop
pop
dec
mov
bound
fs
dec
jno
cld
mov
cmp
mov
in
push
ret
add
aas
repnz
sub
pop
imul
clc
lods
aaa
pop
pop
loop
insl
pop
shll
sbb
loopne
push
jmp
gs
sub
pusha
xor
lods
xchg
repnz
inc
test
ds
xor
pushf
icebp
shrb
add
outsb
orb
jge
cli
mov
insl
dec
adc
fwait
jnp
push
mov
xchg
repz
cmp
rcll
shl
xchg
mov
cmpsl
dec
insb
xchg
ret
mov
mov
cmpsl
xor
or
insl
lret
out
fs
ljmp
jnp
into
pop
arpl
add
jmp
add
xchg
cmp
rcll
adc
outsb
mov
pop
lret
push
mov
mov
push
xchg
xlat
jo
imul
mulb
loopne
cwtl
jecxz
add
mov
dec
pop
mov
lea
inc
and
leave
jbe
lea
icebp
pop
leave
aas
fwait
xor
popa
pop
es
jne
adc
add
imul
inc
dec
frstor
pop
rclb
and
sbb
push
out
in
fisubrl
cltd
orb
dec
jmp
jge
sarb
or
popf
addr16
jnp
movsb
icebp
repz
sbb
setle
mov
inc
lea
adc
fildll
fstl
sub
mov
imul
loope
das
andl
loope
inc
pop
stos
mov
out
ljmp
lods
lds
jns
ljmp
mov
jle
std
mov
mov
mov
movsb
pushl
icebp
outsl
ja
adc
negl
mulb
cmp
enter
jecxz
call
xchg
push
stos
pop
out
add
lcall
inc
cwtl
push
outsb
ljmp
gs
mov
add
mov
push
incl
loopne
pop
call
jmp
je
stos
mov
mov
jbe
std
push
lret
outsb
jl
ficompl
sbb
je
mov
xor
and
and
dec
mov
and
loope
jbe
xchg
jl
mov
sbb
xor
xchg
dec
test
lea
push
int3
adc
fwait
orl
sub
outsb
lods
cmpl
insl
pop
and
jno,pt
mov
bound
ds
roll
and
sub
mov
out
push
sub
data16
xor
fistpl
dec
ljmp
gs
mov
lret
xor
ds
aad
xor
int
insb
lcall
cmc
xor
leave
push
mov
inc
aad
sbb
push
inc
lods
adc
scas
fs
xor
gs
scas
popf
xorb
fcoml
xchg
jp
in
sahf
int3
fwait
mov
or
in
adc
mov
roll
aad
imulb
adc
out
test
dec
scas
aaa
enter
ficompl
in
mov
mov
sbb
mov
mov
popf
incl
dec
pop
and
push
or
leave
add
fwait
ss
mov
repnz
dec
adc
pop
dec
xchg
inc
or
clc
jae
sbb
mov
pop
idivl
jg
cmpsb
cwtl
out
lock
daa
or
adc
movsb
lds
xchg
movsl
inc
stc
mov
iret
push
lret
and
xor
add
dec
pusha
or
xchg
xor
movl
mov
mov
aad
ds
mov
xchg
push
push
sbb
xchg
push
lea
popf
daa
lcall
adc
xchg
mov
loop
jp
jns
push
mov
cmc
stos
xchg
cmpsl
leave
add
pop
inc
fs
inc
movsl
pop
or
jmp
fwait
aad
jl
pop
cmp
cmpsb
testl
aas
negl
mov
pop
out
shlb
pop
cmp
pop
mov
pop
dec
pop
out
movsb
in
pop
aas
insb
lret
or
push
jno
stos
pop
cmc
adc
inc
jno
test
rcrb
arpl
ret
push
fidivrl
or
repz
xchg
inc
jnp
pop
add
pop
hlt
xchg
popf
adcl
shl
pop
inc
add
inc
mov
push
or
xor
mov
stos
and
mov
or
hlt
pop
pop
outsb
mov
inc
push
cmp
mov
sub
shrb
inc
repnz
jno
ret
or
sub
insb
rcrb
push
std
mov
jge
jle
pushf
sbb
mov
gs
and
call
daa
cli
inc
pushf
push
or
into
mov
xchg
fs
or
xchg
jle
sub
test
test
ss
insb
xchg
aad
lret
lock
aas
mov
sub
dec
mov
or
insl
mov
sti
pop
cmp
or
mov
adc
mov
out
ficoml
inc
nop
jg
dec
jl
fsts
cltd
cmp
adc
push
xlat
pop
push
gs
pop
push
leave
imul
add
xor
xor
repnz
jns
test
fsubs
ja
xchg
ss
not
fwait
sbb
cmp
rcll
push
adc
and
and
popf
push
or
enter
jne
call
mov
jbe
js
inc
stc
psraw
daa
xchg
xor
rorb
and
xor
xchg
loope
in
push
mov
mov
sti
hlt
cwtl
jecxz
fisubl
sub
les
and
lahf
push
add
stos
imulb
je
xor
xchg
mov
adc
sahf
loope
leave
ret
mov
jg
nop
cwtl
inc
cmpl
cmp
xchg
sbb
mov
cmc
jle
cmp
jmp
mov
test
jg
int
stos
sub
xlat
pop
mov
xchg
gs
andb
mov
ja
jb
mov
push
fbld
dec
mov
lcall
add
loop
mov
cmpsl
in
fnsave
cmp
int
inc
sbb
pop
jo
and
mov
cmp
loopne
lods
jmp
push
adc
xchg
cltd
lcall
fcmovbe
faddl
scas
cmpsl
dec
out
add
xchg
stos
dec
inc
ret
scas
les
cmp
pop
lds
push
out
es
pop
push
dec
lret
xor
insl
mov
arpl
adc
mov
pushf
hlt
mov
lock
loope
xlat
arpl
mulb
adc
lods
pop
mov
daa
imul
popf
mov
inc
jnp
in
movl
je
lods
push
push
dec
mov
add
inc
paddb
hlt
and
shrl
das
lret
and
test
movsl
jmp
andb
imul
stos
xor
ja
outsb
add
cmp
xor
imulb
xchg
pop
mov
sarl
xlat
dec
and
push
scas
dec
in
out
cmp
inc
xorb
iret
sub
dec
out
movsb
rorb
nop
and
hlt
inc
data16
in
aad
inc
add
xor
test
add
inc
mov
in
cltd
mov
cmc
in
sub
sub
cwtl
and
notl
jge
nop
and
arpl
je
popl
popf
add
cmp
ret
pop
into
out
dec
push
adcb
sbbl
mov
fwait
xor
test
cmp
add
lret
mov
lcall
push
outsb
mov
inc
mov
loop
addr16
ret
cmpsl
fcompl
dec
jnp
insl
cmp
or
repnz
sub
jns
push
test
push
inc
inc
int
out
jle
je
out
negl
cmp
cmp
cmp
fisubrl
jns
mov
xchg
and
loop
pop
insl
out
mov
mov
inc
enter
ficoms
cs
add
lea
mov
ficoms
aad
push
enter
cmp
pusha
mov
repz
sbb
scas
jbe
push
push
cs
gs
mov
test
in
hlt
int
test
and
xchg
pop
cmp
dec
mov
pop
repnz
lcall
iret
push
lods
jbe
xchg
shll
pop
es
xor
mov
vpsubsw
cmp
cli
push
popa
fidivrl
stc
and
stos
cmp
jge
cwtl
mov
jno
cli
xlat
jmp
add
push
imul
jb
imul
rcl
out
push
dec
ss
inc
dec
into
std
mov
mov
push
call
add
push
lret
pop
lret
inc
aas
push
xchg
cmp
dec
adc
mov
mov
std
adc
aaa
and
sbb
cwtl
push
bound
push
pop
jne
jmp
data16
loop
mov
push
add
popa
mov
hlt
xchg
js
outsl
das
ja
shr
cmp
leave
mov
jo
gs
les
cmp
mov
es
jecxz
and
xor
sbb
mov
lods
andl
push
das
jg
dec
dec
lock
push
test
decb
add
inc
mov
jecxz
fstpl
add
aam
jns
push
adc
adc
adcb
xor
sbb
push
xchg
fildll
or
je
mov
shlb
out
sgdtl
push
inc
repnz
add
mov
mov
pop
rolb
dec
xchg
push
rcrb
aas
data16
jp
cmp
xor
xor
lds
in
pop
dec
push
and
jl
sbb
jg
dec
sub
repz
cmp
fists
bnd
fstp
out
and
and
mov
in
adc
inc
xchg
xor
jb
cmp
pop
pushf
mov
scas
inc
frstor
rorl
std
stos
push
mov
lahf
add
aad
pop
je
cmp
cli
mov
fimuls
xor
dec
int3
add
jns
mov
aam
xchg
mov
jb
nop
mov
jmp
popf
movsb
cmpsl
lcall
jl
mov
and
inc
cmc
clc
popf
and
ret
jle
mov
push
fisubrs
push
inc
cmp
test
js
neg
and
cmp
jae
xchg
add
pop
or
xor
scas
into
je
stos
leave
xor
lea
push
adc
loop
mov
call
aam
dec
aad
jmp
push
in
aaa
xchg
rcrl
shll
add
pop
insb
dec
push
sub
sbb
jns
or
sub
mov
cmp
jo
jb
out
pushf
lods
xchg
into
or
mov
cmp
cmpsb
jmp
out
push
test
xchg
ljmp
test
mov
inc
xor
xchg
shrl
mov
cmp
adc
inc
fucomip
sbb
mov
stos
gs
cmp
mov
insb
sti
push
xorl
xor
faddl
sbb
jbe
int
popa
cmc
int3
test
mov
and
cmp
jne
lret
outsl
mov
std
enter
cs
movsb
push
pop
pushf
pusha
popf
mov
mov
sub
dec
mov
sub
insl
jbe
outsl
sbb
mov
adc
lahf
fsubrs
roll
ret
push
sbbl
cmp
pusha
mov
cli
call
stos
xchg
js
cltd
bound
cli
in
add
fs
jge
imul
stos
lods
xchg
divl
repz
mov
push
or
cmp
adc
adc
pop
ss
mov
mov
pushf
int3
adc
stos
repnz
mov
adc
inc
outsl
jnp
jne
loop
out
cmpsb
dec
in
mov
mov
push
popf
inc
mov
popa
push
lds
jae
js
sub
mov
xchg
cld
idivl
push
xor
lahf
sub
push
inc
inc
movsl
sub
or
dec
popf
lcall
insb
and
dec
jg
push
fdiv
ds
js
mov
pop
cmp
and
aaa
das
pop
cmp
in
call
jns
xchg
dec
add
sbb
loope
bound
cmpsl
aam
mov
pop
cmp
pop
dec
inc
ret
shlb
pop
loopne
insl
sbbl
adc
pop
adc
mov
or
pusha
cli
pop
aas
pushf
sbb
sbb
aad
cli
sub
mov
mov
enter
jp
mov
dec
lcall
dec
push
imul
aaa
inc
in
jb
push
pop
xchg
loopne
and
aad
roll
lods
cmp
xchg
mov
fwait
or
fxch
iret
pop
push
lret
cmp
cld
sbb
pop
push
xchg
sub
push
movsl
pop
mov
dec
dec
dec
fsubs
sub
movsl
xchg
hlt
inc
inc
nop
or
aaa
hlt
and
jmp
mov
clc
cmp
jae
pop
aas
mov
sbb
pop
add
dec
in
pop
sbb
push
pushf
adc
sub
jne
add
sti
jae
cld
out
jbe
xor
test
aas
adc
out
xor
cmp
das
pop
ror
pop
inc
push
das
aam
divb
int3
daa
cmp
xchg
mov
xchg
out
call
add
cwtl
push
sub
mov
lock
pop
sub
out
xchg
inc
dec
mov
mov
mov
sub
and
xchg
or
pushf
sarl
cld
rclb
xchg
adc
rcll
popa
daa
jb
fs
clc
inc
xor
or
lahf
cmp
mov
dec
add
push
push
sbb
push
addr16
jle
mov
xchg
gs
xchg
ljmp
fbld
xor
mov
insb
sbb
aaa
xchg
or
xor
mov
xchg
and
cltd
es
mov
mov
jbe
sbb
outsb
adc
inc
mov
shrb
xchg
xor
negb
jge
lcall
mov
hlt
mov
adc
call
hlt
pop
imul
jp
dec
rclb
out
test
and
js
sarl
mov
mov
dec
xor
nop
das
mov
ja
jb
adc
lcall
shl
mov
lds
sub
pushf
loope
punpckldq
sbb
push
movsl
test
repz
xlat
mov
ljmp
xor
push
xchg
loop
data16
into
sbb
addr16
out
popf
push
mov
ficoms
cmp
xchg
test
frstor
or
jge
mov
aas
push
add
sbb
cmpsb
decb
lods
or
arpl
insl
rclb
sub
lods
hlt
cmp
push
rolb
cmp
inc
jmp
add
lods
xchg
inc
push
movsb
loopne
push
les
mov
push
push
pop
or
xchg
mov
sbb
pop
scas
jmp
inc
sahf
movsb
sub
jp
push
shlb
jb
sbb
push
sub
inc
xchg
gs
aaa
add
mov
or
mov
xor
insl
cmp
fcoms
and
je
aas
jb,pt
add
and
cmpsl
shrl
jmp
scas
and
mov
jp
xchg
cmp
test
enter
pop
mov
stos
sub
stos
add
loopne
fistl
shlb
push
add
aas
push
mov
jb
sbb
jg
add
pop
and
push
push
mov
inc
fistpl
fsubr
xchg
aam
mov
and
xor
push
movsl
add
and
mov
mov
leave
cmp
jae
jmp
lret
shrl
cli
jbe
stos
fiaddl
jl
cmp
enter
jg
jno
mov
dec
imul
int3
aaa
mov
pop
cmpsl
mov
jne
mov
jecxz
xor
gs
loop
mov
dec
lret
mov
test
sar
sti
mov
and
and
inc
ret
faddp
subl
xorb
or
jmp
mov
push
mov
roll
xor
ss
sub
sbb
test
xorl
in
xchg
push
push
jb
sbb
insb
or
nop
icebp
cmc
xor
cwtl
movsl
mov
add
xchg
push
lret
cli
pusha
fistps
adc
jns
hlt
mov
or
inc
xchg
outsl
jnp
mov
mov
jp
jo
sub
xorl
bound
sbb
pop
popf
repz
aam
andb
adc
scas
adc
pusha
or
dec
xorl
std
cwtl
xlat
bound
repnz
xchg
lea
or
cmp
daa
add
cld
popa
ret
mov
or
add
addr16
bound
lods
loopne
inc
imul
in
dec
jg
pop
call
and
add
out
pop
popw
sub
aas
fistps
pop
fistpll
pop
fmulp
adcb
incl
enter
into
push
lea
adc
sbb
imul
out
xchg
jnp
pusha
subb
inc
sub
and
dec
and
aam
cwtl
cmpsl
mov
xor
xorl
repz
push
in
je
or
shrl
pop
flds
in
mov
xchg
mov
xor
adc
pusha
sbb
mov
mov
mov
nop
lods
pop
mov
rcrb
ds
bound
mov
push
pop
pushf
lods
pop
lock
fildll
sarb
out
inc
lret
fnstenv
int3
sub
jge
and
out
scas
jmp
add
dec
mov
jo
lock
jge
mov
cmpsb
push
jbe
icebp
std
pop
push
aad
xor
xchg
lcall
cmp
clc
lds
daa
xchg
adc
jmp
jge
add
push
jp
add
lods
std
add
fstps
and
rolb
arpl
dec
xchg
repz
inc
xor
fisubrs
mov
pop
sbb
xchg
aad
add
or
jne
aas
pop
adc
sbb
cmp
mov
jp
dec
enter
icebp
pop
lret
sarl
andb
xchg
add
xchg
jo
jg
cmp
stc
sub
pop
aas
popf
mov
fmul
xchg
mov
lcall
pcmpeqb
insl
cwtl
imul
sub
push
shrl
and
push
dec
xor
dec
addb
sbb
dec
std
pop
nop
push
dec
lods
out
adcl
xor
cmp
test
xchg
movsb
fstps
mov
mov
ja
popa
and
jp
or
xchg
int
inc
int
xor
xchg
cmp
cmp
add
gs
mov
outsl
icebp
pop
pop
xbegin
in
inc
add
cli
xchg
cld
roll
cmp
inc
lahf
aas
cmpb
rcr
dec
cmpsb
sbb
bound
dec
dec
js
sahf
mov
jecxz
arpl
loop
inc
nop
iret
pop
clc
dec
mov
daa
or
mov
dec
aaa
ss
xor
js
pop
dec
inc
leave
in
lahf
push
inc
adc
mov
pop
fstpl
pop
adc
cwtl
dec
stos
pop
mov
sbb
shl
and
out
pop
imul
xchg
sbb
jle
sbb
xor
fcmovbe
add
mov
ja
mov
adc
sti
jge
lods
scas
adc
dec
clc
sbb
repz
testb
sarl
mov
pop
les
outsl
sbb
popl
sbbb
test
mov
cltd
lods
pop
or
scas
push
mov
insb
lcall
pop
test
xchg
add
popa
xchg
std
push
inc
bound
out
lock
adc
or
arpl
pop
pop
mov
lret
push
jae
mov
in
xor
lea
and
jbe
sub
cmp
inc
xor
iret
sbb
xchg
je
push
inc
hlt
dec
adc
sbb
dec
push
fdivs
sbb
icebp
xchg
adcb
adc
hlt
xor
fstpt
inc
pop
adc
xor
jo
clc
test
mov
mov
stos
dec
sub
sub
or
adc
jae
call
pop
das
jle
daa
adc
cwtl
push
data16
aad
pop
cmpsb
jmp
xorl
xor
adc
and
pop
lret
scas
lock
sarl
cmp
in
dec
xor
add
or
and
jbe
pop
fdivrs
or
and
inc
pusha
mov
cmp
icebp
inc
rcrl
mov
out
in
inc
sbb
ss
cltd
lcall
jp
gs
in
pop
jae
outsb
cmp
jnp
lcall
mov
pop
jns
mov
mov
pop
pop
notb
lods
pop
adc
push
and
xchg
cs
daa
fdivrl
sbb
outsl
jne
aas
inc
add
sbb
push
popa
je
dec
add
loop
std
pop
jecxz
pop
push
fnstenv
mov
jbe
or
mov
mov
loop
xchg
rcrb
fisttps
stc
ror
test
inc
sbb
mov
xor
mov
pop
push
and
dec
sub
popf
in
pop
xchg
adc
movsb
or
jle
jle
jecxz
ljmp
shl
enter
aam
jns
mov
pop
fwait
add
xor
xor
xlat
xchg
lret
aad
std
sub
xchg
stos
in
xor
pop
and
insl
loopne
jle
jnp
and
pop
nop
icebp
jg
loop
add
xor
scas
lahf
cmpsb
and
inc
pop
stos
push
popa
in
aaa
push
pop
mov
outsl
shlb
xchg
pushf
sbb
lahf
sahf
xor
cltd
adc
xchg
add
js
loop
pop
push
cmpsb
aam
mull
mov
rcrl
add
cld
mov
ret
int
pop
jbe
mov
es
push
sbb
push
xchg
inc
pop
dec
xchg
int3
jb
jmp
cmp
pop
cmp
sbb
mov
je
negb
insb
loope
js
imul
pop
dec
adc
sub
adc
orb
loopne
inc
mov
test
push
push
cltd
pushw
ljmp
call
icebp
ja
and
xchg
into
je
adc
jle
insb
xchg
xchg
jno
adc
and
rcll
fistpl
cmp
cmp
pop
xchg
mov
jmp
cmp
mov
xlat
inc
mov
imul
js
inc
ds
jnp
and
fdiv
fcmovnu
mov
mov
ds
shr
xor
xchg
shl
idivb
and
cmp
adc
push
push
sub
les
aas
mov
bound
and
ljmp
or
jge
loope
fmull
cmp
sub
cmpsl
ret
int3
push
ret
push
pop
or
mov
sti
fistpll
addl
dec
lods
and
out
sub
xchg
or
lret
jge
daa
mov
rcrl
or
call
xor
addr16
test
cmp
cmpsb
dec
in
pop
outsl
mov
xchg
pop
or
push
jno
inc
ret
popa
jp
ss
out
dec
sbb
xor
sub
int3
sahf
or
sbb
in
cmp
jle
lret
cmp
jge
cwtl
arpl
andl
outsb
jl
std
nop
lcall
fwait
dec
test
jge
push
repnz
testl
mov
dec
inc
mov
into
sub
popf
or
jnp
cmp
push
xchg
xor
fbstp
ret
mov
test
imul
adc
push
in
fwait
push
cmpsl
or
ds
test
adc
ds
insl
loop
inc
out
sbb
adc
fwait
cmp
sbb
add
mov
jmp
in
in
jmp
lea
add
mov
loope
je
push
mov
inc
pushf
sbb
aam
and
stc
test
stos
movsl
aaa
rorb
inc
sub
xor
or
xor
out
cwtl
push
xchg
addr16
insb
shl
mov
les
andb
out
xchg
inc
pop
mov
inc
cmpl
xchg
icebp
movsl
fsubrp
jbe
jns
out
dec
pop
adc
pop
cmc
fcoms
xor
jns
hlt
xor
insl
jb
test
inc
push
jo
sub
out
mov
lret
lods
mov
mov
push
sbb
out
test
or
iret
lret
mov
pop
cltd
dec
int
dec
or
xor
mov
fcoml
xor
cmp
or
fsts
dec
out
xchg
les
or
or
addb
xor
loopne
and
xchg
data16
dec
sbb
repz
idivl
mov
test
pop
fldenv
es
jp
cmp
xchg
icebp
dec
rcll
rcll
orb
test
lea
lock
cli
ret
cs
jae
jge
mov
push
sub
cmp
mov
aaa
adc
rorb
mov
sbb
pusha
jg
jl
mov
test
mov
fidivl
sub
das
jg
jge
int3
icebp
popa
out
mov
clc
test
bound
xchg
xchg
lret
loopne
ds
lock
fildll
subl
cmp
inc
pop
mov
loopne
dec
push
xor
das
bound
pop
mov
test
aad
movsb
adc
in
mov
jecxz
push
and
sbb
xor
and
sahf
addl
aas
loop
aaa
ss
pusha
aam
sbb
push
inc
cmp
jbe
insb
iret
add
jae
mov
ljmp
pop
pop
repz
mov
xchg
mov
jns
sbbb
out
aas
out
sbb
dec
sub
lcall
sbbb
and
cmp
xlat
xchg
add
mov
shlb
rcrb
sti
xorb
adc
int
mov
mov
cli
adc
jno
xor
fwait
mov
adc
adc
imul
lds
inc
mov
movsl
jecxz
leave
mov
loopne
jecxz
inc
ud2
imul
cmp
std
test
cmp
popl
mov
dec
aad
sbb
inc
repz
sub
mov
test
lock
mov
mov
inc
and
divb
push
push
inc
mov
in
or
js
pop
sbb
movsl
scas
mov
idivb
xor
cmpb
divb
fs
xchg
mov
dec
enter
ret
lods
and
fisttpll
lret
sub
sbb
jmp
loop
lret
inc
or
les
pop
mov
xchg
cmp
sbb
hlt
inc
lret
dec
aad
arpl
shlb
in
lahf
xchg
cld
ret
fcompl
icebp
and
or
mov
pop
into
call
lods
or
inc
jmp
data16
xor
scas
cli
xor
test
pop
push
sbb
in
test
mov
jae
and
out
jg
ror
fs
sub
fcomps
shll
and
add
xchg
cmp
in
jecxz
insl
jne
lcall
sbb
mov
orb
fstps
daa
sub
test
xchg
xchg
inc
mov
xor
push
subl
stos
jns
ds
aam
jp
out
fwait
add
dec
add
cmp
lods
icebp
dec
rcrb
stc
pop
mov
xchg
outsb
dec
into
imul
cwtl
mov
adc
punpcklbw
sub
aaa
das
lahf
iret
ja
loope
mov
jmp
ja
rcrl
loopne
cmp
addr16
push
addr16
sbb
outsb
in
neg
jne
jg
cld
pop
or
jbe
pop
xchg
outsb
hlt
mov
sub
bound
cmpsl
jns
xchg
pop
dec
cmpsb
in
stos
into
cmp
lahf
push
test
cmp
or
add
roll
loopne
cmpsb
mov
mov
repnz
mov
jecxz
daa
push
xor
mov
jae
push
add
movhps
sarb
inc
jb
mov
in
add
cmp
lea
es
fdivrl
lock
pop
dec
push
lods
add
mov
and
cmpb
loope
lock
sti
inc
or
mov
aad
xchg
mov
xchg
cld
fbstp
push
sub
popf
test
jp
mov
adc
into
push
popf
push
data16
fsubp
dec
adc
push
mov
dec
push
out
int
inc
sub
lock
fmuls
pop
les
scas
loop
cld
mov
jne
xor
ret
cmc
les
in
mov
popa
arpl
mov
aaa
ss
addr16
pop
es
in
movsb
std
sbb
in
sub
jb
mov
fiaddl
lds
pop
jb
fnstcw
cmp
adc
inc
xor
loope
iret
mov
adc
or
out
add
sbb
lahf
xor
sahf
dec
mov
jnp
push
test
mov
cli
rclb
loope
pop
pop
sub
lds
cmpsb
xchg
mov
jmp
push
add
dec
cmp
mov
loope
lea
stc
xor
and
js
mov
int
adc
jo
push
dec
mov
dec
and
or
call
mov
mov
pop
xor
sbb
mov
mov
stos
xchg
or
adc
outsb
or
test
and
add
ds
cwtl
fimull
in
lods
cltd
push
adc
aas
pop
test
or
add
mov
sbb
push
sub
add
int
mov
iret
push
lea
arpl
dec
sub
or
or
sbb
lds
sar
or
int3
cmp
adc
sbb
jg
and
sarl
mov
sub
mov
inc
roll
cmc
insl
inc
test
xor
mov
movsb
xchg
icebp
push
inc
incb
popl
sbb
push
pop
repnz
jae
enter
mov
jnp
hlt
and
ljmp
pushl
test
cmp
add
mov
push
dec
cmpsl
add
imul
mov
inc
pop
dec
or
push
in
mov
cmp
push
out
push
call
mov
sahf
pusha
rcll
into
push
jle
pop
ret
addr16
mov
sti
leave
dec
inc
jns
dec
cmp
xor
mov
lods
popa
sub
movsb
jb
clc
in
shlb
mov
into
cmpsl
jb
sbb
pop
out
mov
into
pop
cmp
xor
in
jno
das
dec
pop
ror
repz
push
lock
mov
ljmp
imul
xchg
pop
lods
cmp
push
mov
and
mov
or
mov
pop
scas
lret
jb
fcmovnb
jbe
cmpsb
scas
fwait
push
xlat
pop
nop
fisubs
into
bound
sar
outsl
adc
imul
sbb
cmpsb
out
inc
test
mov
icebp
aam
sahf
jmp
xchg
into
sbb
push
imul
xor
xchg
mov
sbb
jnp
xor
ficoml
insl
scas
xchg
push
mov
inc
enter
jp
xor
pop
call
leave
pop
bound
sbb
or
dec
mov
pop
mov
lds
pop
fwait
adc
push
cwtl
sbb
or
dec
cmpsl
jmp
xchg
fwait
andl
adc
and
pop
mov
ffree
lret
and
dec
add
sub
icebp
lea
out
mov
and
sbb
into
fisubrl
xchg
pop
sti
or
adc
ret
scas
mov
nop
sub
add
push
cmp
jle
inc
cmp
incl
fdivs
les
add
or
cmp
aas
fs
rcl
mov
xchg
xor
icebp
and
out
mov
je
xchg
cli
es
aad
sbb
mov
dec
nop
push
mov
in
push
out
pop
cmp
add
dec
dec
mov
fnstsw
repnz
js
dec
out
pop
push
mov
inc
lahf
dec
push
inc
int3
bound
mov
sub
out
mov
pop
xor
fdivrl
sbb
cmp
push
lods
pop
push
dec
lcall
adc
jne
push
stos
popa
fstpt
mov
cmp
inc
cmovo
call
mov
jne
or
pop
add
mov
decb
sub
mov
mov
inc
sub
xlat
pop
mov
lods
shl
cmp
xor
int
mov
xchg
cli
jecxz
inc
lcall
out
cmp
push
inc
inc
xchg
pop
mov
repz
add
clc
xchg
mov
sbb
xor
imul
nop
pusha
std
dec
test
pop
xchg
sub
add
insl
cli
push
loope
pushw
bound
iret
call
sub
pop
inc
add
cmp
jb
add
imul
cli
cmp
push
je
or
iret
adc
rorl
push
aas
push
aam
adc
js
test
push
jmp
push
lea
std
and
test
sub
xchg
cmp
movsl
xchg
dec
fsts
shl
mov
push
mov
lock
jns
sub
out
push
and
icebp
push
cmc
xor
xchg
ss
fcompl
inc
out
mov
and
xchg
sub
push
mov
jno
cltd
fisttps
mov
mov
mov
adc
pusha
dec
stos
xchg
pusha
inc
push
lock
add
out
ret
add
cwtl
lods
int
test
dec
mov
add
cmpsl
out
xlat
fcoms
add
ficompl
out
popa
or
fsubrl
arpl
icebp
mov
das
cmp
xor
sbb
nop
in
mov
or
mov
rclb
cmp
ja
mov
shlb
or
insb
daa
add
sub
mov
mov
sti
pop
imul
dec
mov
pop
sahf
leave
popa
adc
rcrl
jg
mov
pop
les
aad
out
xchg
shlb
sbb
test
ret
mov
jb
ja
das
lds
push
ds
adc
rclb
jecxz
scas
and
adc
pop
cmp
frstor
pop
aad
mov
stos
lret
dec
adc
xchg
and
rcl
mov
mov
stos
test
lods
add
adc
out
sbb
lods
in
push
sarl
dec
pop
sti
jns
lret
std
fcom
adc
or
jne
lea
imul
cmp
jp
iret
fs
adc
or
in
sahf
xlat
pop
push
mov
sbb
lock
hlt
sbb
movsb
mov
mov
sarb
xor
in
sarl
adc
dec
push
adc
pusha
adc
adc
inc
out
in
and
push
std
push
sbb
jmp
mov
add
sub
push
cmpb
mov
iret
jecxz
add
xor
sub
inc
lea
sbb
cmpsb
sub
jb
stos
insl
iret
pop
sub
xor
ds
adc
sub
aam
mov
cmp
adc
mov
das
cmpsl
mov
movsb
sbb
mov
add
js
test
pop
into
insl
xchg
push
into
stc
and
shlb
addl
loop
or
stos
shlb
insb
cmp
aad
xlat
imul
call
fs
pushl
das
pop
inc
mov
push
inc
clc
sarl
push
push
inc
in
jno
fucom
shll
mov
jle
xor
mov
inc
arpl
or
movsb
sbb
mov
out
inc
push
dec
mov
das
iret
cmp
xchg
sbb
add
es
mov
in
aas
lahf
ret
push
sub
fisubl
fxch
inc
ja
mov
mov
dec
pop
in
leave
loope
lds
enter
das
jp
and
arpl
adc
rcr
adc
call
xchg
es
gs
rcll
inc
dec
es
xchg
xlat
pop
lds
pop
and
jno
mov
stos
jae
or
dec
adc
scas
sbb
out
ficoms
push
ret
jge
mov
sbb
mov
add
mov
xchg
sahf
ss
ds
sbb
mov
leave
sub
imul
pop
sbb
scas
push
repz
xchg
ja
sarl
mov
mov
xchg
xchg
jmp
xchg
icebp
push
int3
daa
mov
jno
push
data16
bound
add
negb
push
push
cmc
and
jae
add
std
inc
shlb
jnp
in
jno
pop
or
ljmp
mov
dec
iret
insl
fwait
cmp
or
fbld
insb
aas
imul
jecxz
push
aad
xchg
out
dec
sahf
aam
inc
and
ds
dec
and
xor
xor
xchg
jne
push
loope
in
rcrb
lret
pop
ss
inc
pavgw
jo
fs
dec
lea
jne
mov
or
imul
push
pop
mov
mov
cmp
mov
in
xchg
movsb
cmp
fwait
and
push
cmp
mov
pop
orl
and
test
loope
xor
popa
mov
stos
fistps
adc
mov
adc
pop
jle
mov
pop
push
enter
lahf
fidivrs
mov
cmp
movsl
jl
sbb
out
mov
ljmp
call
xor
stc
pop
shrb
nop
dec
xor
sbb
loope
test
mov
fdivl
stos
jno
xorb
mov
in
shll
jle
jno
dec
pop
loopne
fwait
cmp
dec
sub
lods
xlat
inc
stc
rcrl
in
pop
in
adc
cmp
push
loopne
adc
js
movsb
push
or
add
arpl
push
jmp
je
mov
mov
mov
movsl
out
pop
xchg
inc
cmc
std
filds
movsb
jne
xchg
popa
pop
jae
addl
nop
lret
sub
loop
cli
dec
mov
lds
push
movsl
cs
mov
daa
mov
or
test
lods
cwtl
xor
cli
pop
xchg
scas
xchg
sti
mov
mov
sbb
fnstcw
xchg
movsb
sub
dec
notb
dec
xor
xlat
xchg
mov
mov
loope
pop
mov
sti
and
pop
test
cmp
pop
mov
xchg
stos
xchg
loopne
bound
jle
or
arpl
inc
rcr
xchg
jae
cmpsb
sarl
daa
lods
icebp
push
bound
push
in
jmp
pop
xor
imul
push
popa
aam
imul
mov
ljmp
cltd
lcall
and
push
movsl
out
xor
into
push
adc
jae
xorl
and
dec
out
mov
cmp
and
pop
push
xor
or
adc
push
js
imul
inc
dec
xchg
scas
xor
test
out
adc
outsb
fcmovnu
test
cmpsb
dec
pop
sub
mov
cmp
xlat
dec
dec
mov
jmp
sub
jns
pop
call
call
gs
arpl
gs
push
int
insl
xchg
inc
rorb
hlt
in
xchg
js
jmp
ret
ja
popa
jo
pop
mov
cmp
insb
js
xor
aas
stos
mov
pop
push
ss
pop
outsb
jmp
xchg
xor
pop
pusha
cmp
cmp
ret
loopne
sbb
cmp
stos
js
jnp
out
rcr
xor
andb
daa
ficompl
sarl
pop
lock
mov
fdivs
lret
add
or
or
add
xor
push
in
in
cmp
scas
dec
cmp
and
mov
add
xchg
push
rorb
add
leave
fiaddl
inc
mov
mov
and
loope
aam
das
jmp
dec
jl
mov
fstpt
lods
lcall
icebp
inc
or
imul
fcompp
add
outsb
mov
movsl
jg
lods
cmp
popf
jb
pop
cld
aad
sarl
xchg
or
inc
push
cmp
inc
gs
ss
sub
push
inc
xor
hlt
pop
jge
fisttps
jns
lahf
into
push
push
add
pop
xchg
adc
mov
shlb
aaa
test
hlt
cwtl
fiaddl
pop
lea
daa
in
icebp
adc
push
insb
leave
dec
adc
sbb
repnz
dec
lret
push
icebp
add
xchg
andb
xor
cld
push
lret
icebp
mov
in
lock
mov
cmp
sbb
xchg
sarl
cltd
shll
sahf
dec
gs
jl
mov
sahf
in
or
popf
rcl
fs
push
add
push
jne
push
sub
fs
xor
add
shlb
les
adc
push
std
incl
scas
lea
cs
inc
scas
mov
mov
ljmp
mov
mov
adc
insb
mov
adc
jecxz
cmp
ljmp
pop
inc
lar
outsb
gs
rorl
sar
cmp
pop
ja
sbb
push
aam
sbb
dec
mov
js
mov
xlat
sti
mov
sub
enter
sub
fs
lcall
sbb
sbb
aaa
and
aaa
push
mov
sub
movsb
imul
leave
cld
pusha
xchg
movsl
xor
mov
addl
pop
adc
mov
xchg
sub
xor
inc
pop
pop
sbb
repnz
aam
sub
aam
pop
mov
and
hlt
ljmp
pop
lods
rorb
mov
jp
rolb
cli
mov
int3
imul
mov
and
push
inc
movl
cmp
std
movsl
daa
pusha
stos
clc
iret
repz
orl
dec
and
rcll
push
sub
add
add
adc
pop
movsb
movsb
mov
jo
adc
sub
in
push
repnz
popf
test
divb
stc
ss
sbb
mov
cli
sahf
outsw
int3
repz
push
shrl
fwait
inc
adc
orb
xor
popa
and
inc
cmp
mov
and
and
and
sbb
jns
mov
dec
push
cwtl
mov
lds
scas
mov
xchg
into
popa
mov
sub
push
jo
xlat
cmpsl
cmp
loop
mov
aas
pop
sbb
outsb
orl
jne
sub
inc
adc
push
addr16
bound
or
xchg
pop
add
ffreep
push
xlat
in
mov
lds
push
inc
outsb
stos
cwtl
sbb
fistl
mov
dec
and
icebp
fdivrl
pop
test
ret
and
sub
imul
test
jnp
out
mov
jmp
stos
sub
mov
mov
negb
xchg
int
rcrb
or
pop
ljmp
test
js
in
roll
or
pop
outsl
ret
mov
testb
loop
rcll
adc
roll
add
fbstp
xchg
int
and
sub
mov
mov
or
pop
xchg
cwtl
jg
jg
pop
push
jg
out
or
mov
popa
hlt
sub
fsubr
pop
div
push
aam
mov
or
pop
dec
fldl
sub
imul
xchg
stos
mov
sbb
gs
ret
es
enter
mov
shll
push
adc
mov
out
movsb
lds
dec
jmp
decl
xchg
adc
adc
xor
rol
mov
iret
test
rorb
nop
jmp
add
inc
in
xor
add
cmp
or
cmp
iret
pop
mov
adc
push
imul
sar
cs
sbb
dec
stc
cmp
aaa
ds
aaa
addr16
and
and
mov
pushf
xchg
push
adc
icebp
sbb
pop
in
ljmp
mov
mov
ret
mov
dec
adc
je
jl
dec
add
xor
xchg
add
push
insb
es
call
lret
outsl
insb
cli
push
or
add
mov
into
lret
mov
sbb
fimuls
jle
fimuls
sbb
add
aaa
ja
push
fwait
clc
movsb
es
jns
pop
cmp
divb
gs
clc
sub
adc
out
in
repnz
cs
shll
xchg
sbb
das
mov
mov
mov
jecxz
dec
jno
cmp
movsl
add
icebp
out
inc
stos
stos
les
fsubp
mov
fcmovbe
stos
movsl
adc
xor
mov
mov
pop
adc
sbb
in
popf
pop
out
sbb
mov
inc
mov
scas
add
add
rcr
pop
icebp
fwait
jnp
lcall
mov
jne
mov
fmulp
arpl
es
out
ret
mov
inc
rcrl
mov
addr16
mov
and
es
lahf
adc
loop
loop
ret
mov
push
popa
scas
rclb
stos
shrl
pop
cmc
or
pop
lock
leave
js
or
lret
loop
xchg
shr
imul
cmpsb
mov
mov
stos
pop
or
jne
adc
adc
fs
xor
pop
push
jmp
jge
xor
adc
cmp
sub
in
in
sbb
cmp
mov
cmpb
sahf
push
xchg
mov
cli
jns
and
mov
dec
test
rcll
xor
add
mov
addr16
idivb
xchg
mov
push
inc
cmp
xchg
out
dec
shrb
int3
scas
shll
pop
dec
fdiv
push
mov
xor
arpl
std
mov
push
sub
cmp
inc
arpl
jmp
mov
lret
in
push
pop
subl
mov
fildl
jae
xchg
push
pop
cmp
xchg
cltd
testl
ja
stos
outsl
insl
hlt
subl
push
mov
cmp
cmp
jae,pn
jbe
sbb
inc
mov
arpl
mov
orb
adc
adc
jb
dec
ret
adc
add
mov
mov
addr16
test
mov
and
int
push
add
dec
cli
jns
push
lock
lods
or
add
fistpll
pop
and
shrl
into
or
dec
jnp
xchg
xlat
test
or
es
lahf
jb
repz
sti
notl
shll
mov
ret
test
aam
inc
sub
outsb
xor
adc
cmp
mov
fcom
jmp
cwtl
fwait
sti
fisttpl
leave
jae
sbb
dec
das
scas
imul
sarb
inc
mov
pop
pusha
lahf
shrb
mov
xchg
repz
lods
aaa
and
stos
adcb
gs
mov
jp
mov
cmp
sar
xchg
add
dec
jno
cmp
sub
insb
mov
jecxz
jae
pop
sub
xor
jg
xor
mov
mov
sbb
in
int
popa
xchg
jns
sbb
mov
sub
shrl
xchg
ret
inc
xor
insl
mov
into
push
jno
adc
sub
sbb
loopne
out
rorl
aam
add
jle
fdivp
jg
daa
add
add
mov
das
jne
out
mov
stos
inc
lret
es
cmp
rorl
jl
push
lods
jae
int
xor
jne
or
xor
inc
insl
movsl
out
dec
inc
push
pmaxsw
popf
jecxz
ljmp
mov
mov
adc
sti
inc
int3
pushf
pop
out
jge
jns
inc
pop
pop
subl
ja
pop
xor
int
mov
cmp
arpl
dec
insb
mov
js
ja
add
adc
xchg
dec
xor
xchg
xor
mov
movsl
insl
das
xor
imul
ficomps
xor
sbb
push
inc
fistps
data16
lods
in
das
daa
push
jns
sahf
decb
or
adc
lcall
and
popf
fdivrs
aas
sub
popa
xor
or
sbb
mov
test
push
cs
bound
push
sub
pop
fwait
xor
insl
or
data16
outsl
xchg
push
faddl
pop
insl
insb
mov
sbb
ljmp
push
popa
xor
icebp
dec
and
push
dec
sbb
add
stos
mov
fcmovnu
mov
cmpsl
jg
out
cmp
jbe
idivb
xchg
mov
cmp
xor
mov
lret
call
lret
or
aad
jb
or
mov
add
repnz
cli
nop
and
jo
xor
or
mov
addr16
call
enter
jae
jmp
dec
lods
outsl
pop
stos
pop
fildl
lcall
pop
jmp
enter
pop
inc
dec
scas
mov
dec
inc
fadd
imul
or
xchg
adc
mov
mov
dec
sbb
aas
jmp
dec
stc
push
and
dec
rorb
and
lcall
cli
aad
cmp
and
testl
out
cmp
jecxz
push
jecxz
mov
adc
test
je
inc
lret
into
cwtl
jle
loope
push
jb
xor
inc
bound
bound
xor
and
outsl
sbb
das
pop
pop
pop
icebp
movsl
mov
lea
and
mov
pushf
inc
mov
push
lret
inc
mov
or
push
mov
push
outsb
xchg
and
cmpsl
aad
sbb
xor
xchg
subl
in
push
and
shll
pop
jge
outsl
nop
jno
popa
mov
inc
sti
inc
mov
cmp
popf
pop
lods
sbb
inc
cltd
es
mov
es
mov
mov
nop
mov
jg
mov
or
inc
sahf
arpl
jo
dec
incl
add
fsubrs
int3
add
add
shll
and
pop
lcall
mov
inc
shll
fs
in
mov
int3
fnstcw
sbb
enter
lds
repnz
mov
jb
movsb
mov
mov
jmp
jno
and
outsb
ljmp
in
adc
or
aaa
adc
jg
fstl
icebp
inc
sbb
inc
mov
sbb
xor
xor
leave
insl
bound
lods
adcb
popf
mov
inc
lock
in
hlt
mov
mov
es
dec
mov
jae
pushl
fisttps
mov
sbb
push
or
out
fldl
stc
into
sti
aad
test
push
push
inc
loope
or
jbe
dec
gs
jg
xor
inc
aad
call
pop
inc
loope
adc
js
push
in
inc
sub
leave
divl
push
pop
mov
sbb
inc
adc
xor
sti
inc
test
jnp
sbb
in
out
in
test
xorl
popa
test
jp
pop
call
add
hlt
js
push
shlb
sbb
jg
movsl
ror
aaa
cvtps2pd
loope
sbb
push
cmp
xchg
and
jp
push
popa
rcrl
and
add
dec
mov
lahf
mov
rclb
xor
mov
callw
adcl
dec
jbe
scas
in
out
scas
jmp
add
sub
icebp
mov
test
pop
aad
adcl
mov
ret
jecxz
mov
lcall
pushf
je
jp
jno
fisubrl
mov
cwtl
into
fsts
cwtl
dec
mov
sbb
mov
shl
or
andl
push
or
lods
cmp
inc
jo
push
xor
pop
ds
and
xor
add
sub
shlb
inc
les
push
inc
mov
ficoms
xor
frstor
les
mov
inc
push
pop
mov
adc
or
sbb
je
hlt
pop
and
lock
cmpsb
and
lods
or
jbe
mov
or
out
in
sbb
outsb
jb
mov
jle
mov
and
decl
cmp
jmp
push
stos
jmp
push
test
int
stc
mov
ss
orb
movsl
push
pop
mov
loop
int3
ja
lock
adc
mov
jo
jno
inc
pusha
mov
jnp
push
cmpsb
dec
pop
jbe
jnp
pop
into
xchg
dec
jmp
ljmp
xor
jne
or
sub
pop
imul
mov
mov
jns
adc
fisttps
ret
cmp
mov
push
push
sbb
cmp
push
sbb
xchg
call
xchg
les
cli
inc
ss
mov
dec
mov
loopne
jmp
mov
adc
and
cltd
mov
mov
mov
xchg
sbb
add
jbe
add
subb
cmc
testb
and
aas
loopne
enter
cld
jmp
dec
enter
dec
cld
pop
fcmovbe
inc
out
test
sub
push
ret
lahf
lods
out
push
mov
mov
sub
sub
add
cmc
lods
rcll
adc
pop
fbld
mov
jmp
lods
push
xor
sub
or
xchg
loop
xchg
sbb
cmpl
popf
mov
dec
jecxz
push
movsl
fidivs
sbb
adc
push
xchg
lcall
mov
push
lea
movsb
mov
lret
pop
or
gs
loop
fidivl
rolb
je
hlt
or
aaa
dec
xchg
sub
mov
dec
fcmovnb
lods
mov
lcall
and
jno
das
push
push
lcall
pop
cmp
mov
fldenv
dec
loope
mov
arpl
mov
pop
or
xchg
mov
fildl
aad
into
push
into
or
es
stos
mov
adc
push
lds
addr16
sub
mov
jg
sbb
inc
xlat
xlat
jl
push
es
mov
scas
fs
in
fsts
neg
xlat
rcll
xchg
jecxz
fcoml
roll
cmp
pop
mov
sbb
lods
in
sahf
out
es
jns
insb
jo
jb
in
and
add
repnz
cli
shl
sbb
sbb
insl
xchg
jbe
fwait
mov
push
lea
sub
xchg
sub
mov
int
inc
push
adc
or
stc
sbb
adc
push
bound
pusha
and
sbb
bound
inc
orl
mov
incl
inc
xchg
pop
fsubrl
mov
mov
mov
std
push
in
int3
mov
cmpl
inc
push
aad
rolb
cmp
xor
hlt
mov
jbe
in
sub
insl
dec
pop
ret
jns
add
jns
mov
xchg
inc
cli
ss
std
notb
inc
scas
pop
add
lcall
adcl
xor
arpl
dec
rorb
jae
decb
mov
out
es
push
add
out
mov
loop
sub
fadds
shl
or
add
in
pop
test
push
mov
lahf
inc
test
loop
mov
sahf
push
dec
jge
sahf
not
jl
arpl
push
jbe
out
daa
jo
sbb
or
stc
in
pop
sub
push
icebp
jge
xchg
xchg
icebp
inc
ja
mov
mov
mov
pop
and
sbb
dec
pop
lret
imul
xchg
js
mov
fndisi(8087
mov
data16
mov
pop
pop
out
loopne
and
out
fiaddl
scas
lcall
push
fidivrl
pop
cmp
jno
dec
std
out
adc
push
mov
shrl
mov
pop
in
push
testb
out
test
adc
cltd
sub
xor
outsb
enter
out
or
jmp
push
sub
push
lahf
jb
cmp
mov
mov
push
add
test
adc
faddl
out
stos
mov
jle
mov
add
idiv
ds
mov
test
jmp
rcr
pop
scas
ja
insl
int
repnz
in
ja
lds
lea
insl
adc
rolb
test
je
loopne
out
xor
mov
inc
in
ret
mov
hlt
push
or
sbb
mov
xor
dec
jp
mov
xchg
les
xor
call
pop
fisubrl
lods
loopne
sub
jl
xadd
fiadds
outsl
iret
addb
push
sbb
dec
pop
loopne
cmp
mov
mov
roll
es
aam
mov
jp
cmp
leave
cmp
add
ficoms
xor
addr16
in
mov
mov
andl
pop
sub
mov
insb
imulb
lock
ljmp
mov
pop
shrl
bound
sub
enter
std
imull
rorb
fwait
leave
pop
jmp
cmpsl
fcomps
shll
cmpsb
and
mov
adc
sub
mov
sbb
or
ds
sahf
push
in
mov
push
test
lahf
xor
in
out
movsl
and
shll
andb
cmp
pop
jmp
sub
and
loope
cwtl
mov
mov
outsl
jae
jns
jo
fdivl
sub
pop
adcb
sbb
jnp
pusha
add
push
and
push
dec
ret
in
pop
inc
and
adc
and
movsl
pop
sub
mov
repnz
push
and
imul
push
punpcklbw
inc
dec
out
sub
loope
das
xchg
sub
js
cmc
xor
cmc
add
jbe
and
test
lea
rorb
out
or
pop
notb
repnz
ficoms
es
jo
aaa
popf
jecxz
add
sub
insb
and
pop
test
jge
xchg
dec
sub
mov
inc
xchg
sbb
pop
mov
cmc
mov
pop
imul
popf
dec
or
arpl
adc
and
jmp
andl
orl
dec
adc
or
ljmp
cmp
pop
lods
ficoml
leave
pusha
sbb
mov
adc
insl
movb
mov
mov
cli
xor
jo
sbb
mov
jl
add
sti
xchg
mov
nop
xor
cwtl
nop
inc
cmc
les
xor
lods
sub
mov
scas
cmpsl
jo
sbb
ret
xor
out
pop
int
frstor
mov
mov
xchg
sbb
iret
pusha
lcall
in
andl
fimuls
lahf
xchg
pop
ja
push
mov
mov
push
push
popf
ljmp
add
adc
pop
jns
or
add
pop
insb
decl
xchg
push
pushf
cmpsb
lahf
fidivs
add
adc
and
xchg
sbb
repz
enter
repnz
sub
cmc
mov
mov
sub
xchg
cmpb
into
mov
cmp
insb
push
mov
push
in
jnp
sub
cmpsb
mov
xor
nop
jge
adc
sub
into
mov
insb
je
mov
dec
js
mov
outsl
iret
and
sbb
xchg
xor
or
cmp
icebp
stos
or
dec
pop
mov
stos
mov
icebp
orb
push
cmp
je
or
jp
sbb
sub
sub
or
push
xchg
sbb
popa
xchg
outsl
xor
loopne
dec
insl
ret
call
insl
nop
insb
xchg
cwtl
cli
add
mov
sub
adc
das
sub
ss
or
mov
or
in
scas
jle
jecxz
sub
or
daa
outsb
ficoms
push
add
sbb
xor
push
cmpsl
jno
pusha
xchg
adc
xchg
jns
lock
add
cld
mov
out
aad
rorb
faddl
push
xchg
popf
lahf
in
mov
in
fsubs
sbb
cmc
cld
pop
mov
popa
mov
mov
sarl
aam
xor
test
add
lea
jl
and
inc
adc
hlt
xchg
outsb
pop
or
dec
pop
test
sahf
push
arpl
mov
sti
lea
push
xor
mov
aas
mov
push
mov
and
icebp
jmp
xchg
xchg
xor
dec
fcmovne
sub
les
mov
lock
lods
mov
push
pop
dec
loop
xchg
mov
in
fwait
clc
mov
sti
pop
jg
outsb
std
sub
xchg
dec
into
jae
stc
xchg
aas
xorb
xor
xchg
push
push
jg
in
pop
or
sub
js
add
or
fwait
out
scas
xchg
xor
imul
dec
imul
aas
fwait
mov
mov
lds
jl
test
pop
hlt
arpl
pop
je
lahf
andl
push
add
and
jo
jns
jle
loope
dec
ror
shrb
dec
js
dec
icebp
aaa
daa
ret
loop
push
movl
sbb
loope
adc
jecxz
out
pop
push
and
int
pop
inc
test
or
lret
mov
cmp
je
lods
and
rolb
push
shr
adc
dec
push
cltd
inc
jmp
js
dec
movsl
imul
or
fisubl
enter
jp
pop
test
xor
sub
test
aad
ret
scas
add
in
mov
inc
add
inc
iret
mov
push
mov
movsl
xchg
jecxz
cs
nop
or
ret
test
or
sbb
mov
out
fiadds
pop
shr
rcll
loopne
mov
push
pushf
outsb
gs
fisubl
add
lods
jmp
mov
push
icebp
nop
in
and
cmpsl
in
jne
loop
sub
popf
div
les
xor
cmp
mov
ret
mov
fisubs
push
popf
jl
xor
or
xlat
inc
sbb
pop
outsb
aas
iret
mov
loop
clc
lea
jg
outsb
loop
dec
pop
add
jecxz
pop
js
popa
pop
xchg
pavgw
iret
pushl
jb
add
sub
or
aad
mov
filds
repz
insb
xchg
xchg
jp
mov
mov
bound
dec
push
cmpl
out
aas
sub
pop
iret
dec
call
push
dec
sub
aas
jge
dec
loopne
stc
hlt
pusha
add
and
test
xchg
adc
sbb
mov
mov
cld
cmpsl
sarl
sub
icebp
sbb
sub
xor
mov
in
lahf
lods
mov
sub
add
ljmp
stos
movsl
mov
push
pop
or
imul
fcmove
lods
lock
push
lret
jns
inc
loope
in
pop
add
fisubl
sahf
jo
jge
lcall
idivl
push
leave
inc
mov
fidivs
jb
out
loop
dec
daa
or
fmul
or
jmp
aam
es
push
adc
and
xchg
outsb
stos
fistps
outsl
mov
inc
imul
insl
xor
ja
add
outsl
ret
mov
sahf
pop
inc
repz
dec
shrl
xchg
aam
es
dec
lods
sub
pop
jbe
dec
inc
mov
dec
jae
daa
cltd
imul
movsb
xor
xor
rcrb
sbb
or
jecxz
xor
dec
jbe
pop
sbb
mov
outsb
sub
clc
movsb
or
jns
push
imul
add
mov
sar
outsb
leave
ss
in
call
sbb
je
add
add
pop
push
jg
sub
jns
addr16
cmp
mov
dec
out
inc
lcall
test
jecxz
adc
ja
inc
in
adc
jecxz
lret
adc
adc
out
dec
push
or
enter
xchg
add
dec
xchg
sub
jae
ret
aam
dec
xor
sti
fldl
xchg
push
cs
xor
sub
je
xchg
sbb
stc
push
sahf
add
jge
lret
mov
cld
filds
and
jno
cmp
cmp
and
out
xchg
or
loop
pop
mov
xor
ljmp
adc
sbb
inc
mov
cmpsb
mov
loope
lahf
loop
lahf
cmp
sbb
aad
fldl
pop
push
pop
add
push
inc
mov
adc
inc
jnp
mov
aaa
cmp
jne
into
shlb
shlb
out
push
test
mov
out
xlat
sbb
in
jge
loopne
cwtl
mov
lret
mov
aad
ret
xchg
jle
dec
xchg
shlb
pusha
sbb
add
push
in
insl
les
and
and
push
test
scas
push
aas
cmp
and
xchg
xchg
dec
pop
cli
mov
fildl
push
fstpt
fs
mov
push
int3
aad
fadd
iret
jns
fstl
aad
pop
lahf
cwtl
dec
xor
imul
ror
inc
rcl
test
sti
js
sarl
negl
jle
pop
nop
jmp
add
pushf
jecxz
jns
pop
push
in
inc
xchg
cmpsl
xor
and
jb
mov
and
sbb
ret
mov
scas
add
xchg
aam
in
or
insb
inc
mov
in
nop
out
out
inc
xchg
out
cld
dec
in
mov
fsub
push
jecxz
jae
pop
xor
mov
jmp
jmp
sbb
outsl
addl
aas
lret
or
js
movsb
mov
gs
popf
inc
adc
mov
push
inc
or
dec
fwait
mov
dec
shlb
sahf
hlt
sahf
sub
out
pop
gs
mov
mov
mov
or
cmpsl
pusha
pextrw
mov
inc
imul
sub
adcl
sahf
cld
in
sti
sbb
and
filds
lea
dec
aas
std
cmp
or
sbb
rcrl
ret
xor
push
out
lret
loop
inc
popa
mov
adc
in
es
push
jo
sbb
outsb
hlt
pop
cs
xchg
cs
mov
mov
pop
cs
mov
sbb
or
inc
adcb
push
enter
xlat
push
mov
push
sub
sbb
dec
in
and
pusha
mov
fistpll
cld
sub
mov
inc
jnp
jp
bound
sahf
paddd
cmp
sbb
jo
cld
jnp
shr
pop
fs
stc
lock
rorl
into
mov
rol
movsl
negl
mov
push
pop
lods
aad
out
and
dec
cmp
push
pop
jp
mov
cmc
daa
out
pop
repnz
or
dec
or
shr
test
icebp
pop
jo
push
js
mov
out
push
rolb
sbb
scas
and
mov
pop
xchg
stc
lea
scas
dec
mov
test
push
inc
push
jmp
mov
jbe
sub
test
loop
bound
daa
or
subl
push
js
add
sti
fnstcw
jae
pusha
test
ds
jecxz
fldt
popa
lds
sbb
sub
mov
inc
repnz
mov
aas
dec
mov
dec
movsb
iret
jle
adcl
pop
xor
mov
fnstenv
adc
out
push
xchg
ja
xor
cmp
andl
mov
mov
fldt
test
dec
aas
mov
pop
dec
jmp
dec
leave
or
out
pop
pop
pop
loope
push
push
cmpsb
cmpsl
mov
sahf
popf
sarl
mov
xchg
adc
or
xchg
sub
divl
mov
push
jge
sub
dec
in
aad
sub
lods
adc
fidivrl
and
xchg
call
dec
xor
bound
cld
jo
sbb
pop
fidivrs
bound
add
dec
or
pop
insb
cmpsb
mov
jg
sbb
inc
mov
sub
mov
jmp
mov
xchg
mov
rclb
cmp
cmp
enter
addr16
pop
sbb
js
jne
push
push
jns
push
fbstp
fs
push
mov
push
lcall
xlat
pop
pop
mov
rcll
sbb
xor
dec
push
push
mov
jne
push
mov
jo
inc
jp
lret
out
push
inc
sbb
mov
es
cmp
fldt
jno
or
pop
and
out
cwtl
xchg
cmpsl
sub
fnstenv
into
cmp
into
in
outsb
mov
sbb
or
enter
lret
iret
xchg
mov
jmp
clc
mov
lock
aaa
scas
adc
inc
mov
push
sbb
bound
pusha
pop
jb
lret
test
fneni(8087
mov
lea
leave
addr16
pusha
bound
and
push
or
xchg
cmp
lret
jg
and
icebp
cmpsb
mov
scas
push
mov
dec
in
mov
mov
sahf
punpckhbw
aam
push
xor
fstpl
cmp
adcb
mov
xchg
mov
pop
addl
insb
out
jecxz
dec
inc
cltd
jbe
filds
je
jle
fidivl
stos
data16
add
push
scas
jb
popa
pop
ficomps
les
jp
dec
cmp
arpl
dec
jl
and
xor
fs
into
cld
pop
lahf
pop
mov
add
pop
into
mov
xor
dec
pop
lock
out
hlt
jp
out
out
sti
mov
mov
push
lock
in
fucomi
pop
mov
sub
outsb
pop
mov
jmp
mov
cmp
dec
test
adc
pop
fmuls
and
mov
sbb
scas
mov
loopne
and
inc
jp
clc
add
push
loopne
jecxz
or
jnp
mov
and
cmp
inc
pop
mov
mov
int
adc
jbe
xor
jnp
shrl
mov
popa
mov
jbe
cmp
add
mov
push
popa
adc
lds
in
push
sti
adc
pop
xchg
sti
iret
xchg
arpl
jbe
add
rol
loope
imul
adc
jno
cmp
hlt
cvtps2pi
jecxz
jg
mov
stc
mov
aaa
cmpsl
adc
je
sbb
sbb
ss
cmpsl
add
add
jl
jae
jb
aad
sub
lcall
mov
lret
mov
les
xchg
and
lds
stc
sub
lcall
or
xchg
aam
fwait
hlt
popa
divb
push
mov
stos
and
push
ret
dec
mov
fldcw
popa
mov
mov
cmp
or
int3
lods
or
push
cmpsl
and
movntps
leave
into
jmp
adc
pop
leave
mov
sub
ret
sub
inc
sub
mov
inc
inc
sub
outsl
or
adc
push
scas
inc
cmpsl
xchg
mov
sbb
testb
add
lahf
fmuls
add
push
xchg
fidivs
xchg
mov
inc
test
fwait
cmpsb
and
mov
push
mov
mov
fstpl
or
out
inc
shrb
les
mov
sub
push
pop
xor
lods
push
lds
in
xchg
inc
in
js
add
sbb
roll
iret
push
in
mov
aas
xor
push
adc
shl
jl
xchg
push
add
jmp
fistl
fldl
push
push
jp
cs
pop
jge
dec
out
mov
mov
jo
call
insl
frstor
and
sti
mov
xor
popa
aaa
or
lea
movsb
nop
cmp
push
in
test
sub
cmp
xchg
mov
setl
or
add
dec
push
sub
add
subb
data16
in
adc
and
in
aad
out
mov
pop
mov
clc
push
fiaddl
in
hlt
fdivrp
and
sbb
add
adc
js
or
outsl
test
push
cmpsb
add
jns
loopne
lods
dec
aam
xchg
inc
jecxz
jp
add
in
mov
mov
cmp
or
add
add
mov
jo
in
sub
sbb
sub
mov
adc
sarb
enter
es
mov
and
jge
mov
dec
call
outsb
xchg
sub
mov
cmc
dec
sti
jmp
add
idivl
mov
sbb
xor
mov
add
push
cli
ficompl
std
jecxz
push
jb
rcll
mov
mov
test
xrelease
ret
mov
dec
fidivl
mov
mov
rclb
lock
mov
scas
cmp
stos
push
cmp
daa
das
js
add
push
lds
mov
push
push
mov
pop
test
gs
scas
add
cmp
hlt
in
xor
sbb
cs
hlt
mov
push
fs
inc
mov
mov
dec
int
push
movsb
aad
cmp
fstpl
and
xchg
lcall
push
pop
pop
or
fsts
dec
ret
mov
jl
cmpsb
adc
cmp
add
push
pop
sbb
inc
subb
loopne
movsl
addb
xrelease
aaa
test
push
xorl
idivl
add
pop
int
cmp
out
or
push
movsb
dec
int
mov
adc
add
mov
mov
jnp
sub
mov
daa
or
jl
bound
test
mov
mov
lcall
arpl
push
inc
dec
dec
dec
sbb
xchg
jl
sti
jmp
jp
push
adc
imul
out
dec
dec
inc
out
lret
mov
push
xchg
pop
or
out
dec
pop
repz
and
add
js
pushf
into
add
mov
jecxz
push
xchg
jmp
xlat
mov
das
xlat
jl
cs
jecxz
pop
jns
sbb
jg
aaa
mov
sti
fidivrl
fnstcw
mov
insb
fwait
cld
jle
jmp
aaa
and
sbb
mov
loopne
movsl
sbb
sahf
adc
enter
movsl
lds
mov
mov
repnz
out
pop
dec
addl
jge
xchg
mov
dec
inc
push
movsb
sub
js
push
cmpsl
ret
lods
or
cmp
cmp
sbbb
mov
ffreep
or
jne
inc
imul
fnstcw
cmp
pop
xor
test
mov
adc
jl
pop
cmp
push
xchg
and
mov
pop
add
cmc
loop
imul
es
xor
dec
mov
icebp
mov
push
out
add
enter
add
mov
ds
xor
cmp
out
popf
or
stos
xor
scas
sbb
add
rorb
stos
rol
or
std
mov
nop
mov
xchg
fsubs
fdivrl
mov
jae
adcl
inc
or
mov
test
cmp
or
inc
xor
imul
stos
ror
test
mov
lcall
repz
or
fimull
mov
sbb
mov
or
xor
inc
jg,pn
sub
push
insb
and
jne
mov
pop
dec
mov
ljmp
std
js
xchg
mov
jg
mov
cli
inc
push
cli
lods
rorb
fisttpll
sti
mov
xlat
mov
xchg
or
or
repnz
jecxz
popa
inc
syscall
xor
jno
shlb
lret
mov
es
icebp
cmc
lret
and
and
add
push
movsl
cmp
jmp
jmp
sti
fiadds
mov
repnz
sti
jle
mov
fiadds
mov
loop
test
loop
adc
jg
lods
add
pop
pop
pushl
push
popf
or
jb
andb
sub
add
ljmp
out
pop
lods
outsl
xor
inc
and
mov
insb
pop
add
cmc
movsl
push
mov
mov
mov
sar
dec
adc
nop
repz
scas
pop
mov
cld
add
jne
dec
cwtl
test
jbe
xchg
mov
pop
jae
mov
mov
mov
sub
or
ds
mov
fsubrs
cltd
pop
xchg
cmp
mov
mov
and
popf
push
push
mov
in
mov
addb
pop
mov
scas
lods
cmpsl
xor
mov
scas
adc
and
mov
cmp
out
pushf
push
cmc
adc
test
xchg
aaa
flds
cltd
aas
fwait
jl
movsl
dec
test
mov
lret
sbb
cmpsb
mov
cmp
mov
filds
xor
stc
ja
mov
adc
nop
and
mov
pop
sbb
dec
jecxz
inc
ss
mov
jg
xor
out
repz
dec
movsb
cmp
lret
mov
adc
ret
and
orb
in
icebp
mov
adc
cmpl
mov
and
mov
inc
call
adc
cs
pop
call
fisttps
push
and
les
lock
dec
jns
xlat
clc
pop
xchg
in
cltd
push
sub
jl
or
sub
xchg
sub
mov
pop
shlb
test
xor
xchg
xor
push
dec
repz
xchg
mov
sub
cltd
pop
xlat
and
in
shrl
out
fsubp
inc
pushf
add
cmp
movsl
cmp
dec
add
xor
mov
mov
sysexit
adc
jns
rolb
mov
xchg
push
mov
pop
sub
ret
aam
mov
mov
and
pop
push
imul
sub
sbb
xchg
or
jnp
enter
cmovge
popa
push
mov
xchg
mov
cld
lret
sub
fsubrp
fcmovnbe
xor
stc
pop
cmp
xchg
push
mov
cld
lret
and
insl
test
jmp
jnp
ss
dec
inc
daa
insl
cmp
jae
and
add
fisubrl
loope
mov
mov
rcrb
pushf
mov
cmp
sarb
jle
mov
inc
cmp
push
clc
xchg
dec
add
add
jge
mov
outsb
push
test
test
pop
out
nop
push
lahf
in
repz
mov
jecxz
aaa
mov
mov
cmpsb
add
or
movsl
jg
add
or
mov
adc
mov
loop
inc
in
daa
dec
and
in
fs
inc
add
jmp
adc
outsb
stc
mov
js,pt
lret
in
adc
inc
xchg
xchg
cli
cmp
loop
inc
jne
addr16
pop
nop
imul
js
in
push
sbb
lock
jb
call
mov
push
sti
call
out
imul
iret
testl
mov
sbb
cmc
stos
cmc
jnp
xchg
xchg
push
xor
out
jle
add
push
lret
lock
mov
mov
cmpsb
and
sub
lock
mov
mov
lock
jmp
push
jle
adc
xchg
popf
insl
rcl
fdivrs
enter
push
ficoml
mov
mov
pop
xor
es
push
and
mov
pushf
daa
adc
test
pop
sbb
clc
daa
shl
pop
cs
fcomps
pop
aas
cmp
imul
xchg
mov
mov
sarb
int
push
iret
xor
push
mov
xor
pop
dec
push
pop
sub
ret
jl
callw
pop
outsl
mov
xchg
aas
repnz
push
push
dec
nop
or
lcall
xchg
jge
leave
mov
mov
fsts
repnz
icebp
adc
sub
push
jg
pop
clc
xchg
fisubl
jle
mov
add
dec
and
mov
xorl
jle
sbbl
push
loop
andl
cmp
sub
sbb
inc
iret
stc
std
test
pop
add
xor
and
insb
gs
and
push
pop
jo
cmp
cli
js
imul
mov
push
fidivrs
stos
mov
repnz
shlb
xchg
aas
sub
push
bound
mov
jne
xlat
sub
repz
sti
std
fcmove
xchg
inc
jl
sub
movsl
dec
jno
loopne
ja
sbb
inc
sub
mov
push
in
push
dec
imul
push
int
dec
shll
fcmovnbe
dec
xlat
lcall
pop
sahf
xchg
aaa
pushf
adc
inc
adc
pop
sub
pmaddwd
push
rcll
loop
cmpsl
call
sahf
mov
imul
fdivrl
adc
dec
jb
mov
pop
and
add
lock
fistl
aaa
repz
dec
cmp
and
xlat
push
cmpsb
cld
in
xor
sub
xor
movsl
aaa
xor
js
mov
pop
cmpb
jo
cmp
mov
in
cli
jbe
push
and
xchg
sub
xchg
movsl
cmc
sbb
ljmp
test
lret
add
dec
out
inc
scas
pop
push
xchg
andl
loop
sub
cmp
jbe
mov
pop
xchg
push
mov
inc
int
mov
imul
pushf
call
pop
stos
js
rorl
mov
out
or
mov
adc
sub
push
sbb
add
int
jmp
and
sub
filds
jb
xor
arpl
movsb
pushf
push
pop
cmp
adc
add
xchg
in
inc
add
repz
shrl
and
adc
cltd
dec
pop
repz
lods
mov
sbbl
gs
inc
push
mov
add
dec
cs
repnz
out
or
push
scas
iret
sbb
jno
cwtl
dec
and
sub
dec
cmp
push
sahf
mov
test
out
subb
jmp
std
sar
xlat
sub
mov
jmp
sbb
xor
adc
enter
loopne
addr16
cli
out
add
std
mov
jmp
push
int
add
stos
aad
pop
push
movsl
inc
test
lock
add
into
inc
fistpl
mov
lds
lcall
lret
test
scas
xchg
testb
pop
fstpt
sub
push
imul
sbb
scas
cli
loopne
nop
jge
xchg
dec
data16
inc
mov
inc
push
notl
mov
shl
fmulp
push
int3
addr16
into
ret
arpl
push
or
xchg
ret
push
dec
pop
sbbb
stos
xor
xchg
adc
sarb
xor
add
and
xor
fildl
jo
mov
xlat
mov
xchg
sbb
inc
inc
push
xor
mov
xor
pop
jecxz
xor
cmp
lock
inc
push
xor
dec
or
and
mov
dec
pop
jbe
mov
sar
push
push
aaa
cltd
in
or
testb
push
sub
xor
fwait
dec
ljmp
jbe
insb
ret
ret
pushf
cmp
mov
je
xchg
cmpb
mov
dec
into
mov
insl
jb
dec
inc
xchg
mov
jb
sbb
push
pop
repnz
popf
mov
mov
gs
cmp
mov
mov
outsb
mov
inc
lea
cs
cmp
leave
xor
push
into
daa
or
dec
lods
or
mov
sbb
push
adc
xchg
loopne
cld
dec
or
dec
inc
pop
push
ss
aad
pop
pop
imul
xor
and
pop
stos
sti
jmp
mov
adc
popl
or
jno
stc
int3
sbb
jg
and
pop
xchg
shrb
test
inc
add
in
ficoms
dec
pushf
je
push
leave
dec
mov
or
ficoml
jnp
pop
in
jp
xor
dec
sub
jb
aas
imul
aad
mov
nop
jnp
movnti
xchg
ss
test
mov
std
das
rcrl
clc
inc
mov
xor
cli
push
xchg
xor
sahf
mov
cs
cmp
dec
scas
xor
adc
sbb
and
enter
mov
mov
sbb
shll
in
jle
xchg
nop
loope
mov
mov
ss
in
test
pop
cmp
fwait
out
pop
test
mov
push
push
roll
push
sahf
sub
jbe
repnz
stc
jns
test
addr16
jns
outsb
or
add
sub
and
mov
dec
or
mov
pop
sub
arpl
xchg
mov
mov
fdivs
mov
lods
in
arpl
movsl
sbb
mov
fstpl
xchg
dec
jo
frstor
push
stos
das
xor
hlt
std
clc
int3
jmp
fstpl
sub
pop
adc
shl
mov
es
out
fildll
ss
adc
mov
mov
stc
cmp
fistl
in
sbb
iret
xor
mov
insb
push
scas
loopne
xchg
sbb
sahf
sbb
push
cmpsb
stos
xchg
inc
lret
mov
cwtl
and
add
imul
cmp
fldt
xor
aad
xor
movsl
lcall
xchg
dec
call
add
incb
pop
arpl
out
in
lret
test
cmp
test
out
inc
pop
leave
push
jne
fisubl
push
jbe
or
jns
and
scas
xchg
fwait
enter
fs
cmc
jmp
cltd
mov
sub
push
lret
xchg
jmp
mov
mov
add
icebp
fidivs
and
mov
adc
push
sbb
out
add
lds
enter
arpl
push
int3
iret
adc
xchg
xchg
es
cmpsb
daa
mov
xor
sbb
sbb
xor
clc
repz
lahf
js
addb
push
xor
fists
mov
outsb
in
lahf
dec
jg
cmpsl
ja
mov
pop
iret
sbb
or
rol
push
pop
and
xlat
ljmp
dec
es
jp
xchg
dec
add
jae
addr16
in
aas
dec
jmp
mov
stc
jp
cs
add
into
jecxz
out
cmp
xchg
pushf
adc
xchg
movups
mov
ret
in
lea
sti
icebp
cwtl
xor
fimull
sahf
shlb
imul
nop
lock
pop
pushf
mov
add
imul
dec
adc
inc
jne
dec
xchg
outsb
aad
pop
jb
outsb
xchg
in
jns
adc
fmull
sbb
xchg
in
jbe
jae
divb
jno
ret
loop
ret
mov
jbe
adc
outsb
push
cmpsb
fsubs
fwait
and
icebp
cmc
inc
xor
clc
mov
ljmp
out
dec
addb
mov
mov
jmp
push
aas
hlt
xor
cmpl
js
sub
adc
ljmp
add
scas
mov
in
in
repz
ss
or
test
imul
push
dec
cwtl
inc
sahf
sbbb
adc
and
test
scas
cltd
and
pop
ljmp
repz
push
loop
das
rorb
jnp
xchg
xchg
push
sarl
inc
adc
jecxz
or
sbb
mov
lods
dec
push
lcall
movsb
sbb
ds
add
sbb
lods
jg
orb
stos
xchg
outsb
int
sbb
mov
pusha
clc
dec
out
repnz
jp
ljmp
sbb
insl
iret
pusha
in
pusha
je
in
leave
ret
or
jnp
pop
dec
mov
icebp
scas
pop
loopne
xorb
jmp
add
lods
fimull
nop
mov
xchg
cmp
adc
daa
xchg
jg
mov
xchg
mov
lahf
pop
cmp
loope
outsl
out
jns
jb
add
xchg
leave
xor
lock
call
sahf
mov
lret
pop
lret
not
lea
lret
dec
fstps
jp
into
jge
jbe
jp
cld
je
divb
and
lock
jecxz
icebp
addr16
in
ficomps
ss
xlat
push
jbe
pop
cli
fidivs
iret
push
mov
mov
gs
ret
jmp
pop
jmp
mov
xchg
push
jne
pop
push
add
mov
jne
dec
cltd
fidivrl
divl
ret
hlt
and
fadds
jae
inc
and
add
mov
adc
xchg
sub
jae
cmpsb
mov
cmpsl
ss
xchg
inc
testl
add
xor
call
loopne
inc
out
lcall
xor
add
jmp
in
fcomps
jo
xor
out
ds
in
add
adc
mov
jg
addr16
xor
outsb
pop
and
ret
enter
scas
xchg
sahf
lea
movsb
mov
or
mov
sbb
movsb
out
sub
out
push
ss
cmp
scas
pop
pusha
sub
xchg
fcmovu
outsb
xchg
mov
in
mov
pop
fdivrl
ljmp
sbb
sub
add
fwait
add
cld
xchg
daa
jo
xorb
jns
lahf
hlt
jnp
insl
and
push
xchg
clc
fsubrl
and
pop
mov
cmpsl
ret
mov
jo
xchg
int
adc
inc
clc
mov
xchg
popa
jmp
cwtl
icebp
in
out
mov
add
aam
jp
add
sub
fimull
dec
sub
push
movsl
daa
std
sub
negb
mov
in
push
fdivrs
nop
inc
faddl
std
mov
es
adc
sbb
add
sub
clc
cmc
dec
push
gs
clc
mov
mov
orl
sbb
repnz
dec
aam
stos
stos
sub
mov
mov
stos
xor
js
sbb
or
inc
insb
pop
stos
xchg
inc
outsb
sub
frstor
cld
cltd
cmp
test
push
cmp
jns
mov
mov
xor
jno
pop
xchg
scas
push
or
pop
mov
aam
popa
in
mov
add
inc
jnp
lods
fimuls
or
cmpl
fdivrp
and
and
insb
pop
cmpb
pop
push
shlb
les
pop
dec
or
clc
fimuls
out
ss
test
mov
cmp
cmpsb
into
lds
mov
insb
pop
pop
jae
sbb
lcall
rsm
pop
xorb
dec
fs
mov
cmpsb
xchg
lods
push
adc
arpl
rcll
adc
shll
jp
pushf
and
out
sub
icebp
mov
cmp
pop
cmp
xchg
inc
add
sub
sbb
sub
arpl
cmpsl
mov
cltd
mov
pop
add
loop
loop
xor
mov
or
gs
push
jge
es
std
mov
mov
aad
leave
mov
mov
mov
push
sub
ja
in
adc
inc
lret
mov
sub
fwait
mov
mov
cmp
mov
cmp
mov
jb
mov
mov
jmp
std
xchg
xchg
add
insb
hlt
inc
inc
shl
test
jno
jne
add
adc
inc
push
mov
pop
es
jle
inc
mov
xor
xchg
lcall
or
idivl
cmc
call
mov
jns
pop
test
pop
dec
lahf
pop
ret
cmp
mov
das
xchg
jae
or
lock
push
cs
loope
loopne
add
sti
pop
sub
ja
arpl
adcl
imul
push
add
pop
es
ret
push
aam
bound
dec
lahf
clc
jmp
adc
ret
sbb
or
or
outsb
shrl
testb
inc
mov
or
cmp
mov
imul
dec
notl
fsts
mov
jl
mov
mov
xchg
cmp
sahf
inc
mov
cld
test
sbb
jg
imul
jno
sub
aam
std
inc
push
push
stc
rclb
shrb
clc
push
shrb
ret
mov
gs
sti
ret
rolb
outsb
cmp
inc
aas
scas
jo
push
or
hlt
add
fbstp
adc
sub
dec
mov
cmp
mov
mov
lods
fsubs
xor
sub
std
cmp
repnz
sub
fistpll
push
fidivs
xor
adc
adc
jmp
shlb
fdiv
jmp
push
xchg
push
lods
mov
fdivs
outsl
in
add
out
sbb
or
adc
or
insl
nop
sub
pop
mov
dec
andl
mov
add
jbe
ss
inc
lods
inc
mov
addb
loop
std
rclb
pop
mov
cli
les
lahf
sub
xor
out
adcl
mov
imul
cmpsl
adc
loop
and
add
xor
insb
mov
ret
sahf
jb
inc
icebp
adc
mov
imul
fs
shll
pop
dec
out
in
sarb
mov
fdiv
aaa
ficompl
dec
mov
lret
cmp
andl
pop
data16
movsl
neg
into
xchg
jmp
data16
dec
jnp
fs
and
in
or
aam
sbb
std
add
push
or
push
inc
and
mov
out
clc
out
sub
adc
insl
xchg
aaa
lods
jmp
cmp
ja
push
or
jmp
mulb
sbb
rcrb
and
orb
mov
dec
mov
push
fwait
popa
push
cld
push
sbb
out
dec
lock
jp
cmp
ret
or
pop
add
repnz
icebp
in
cmpsl
sub
and
push
xor
jne
out
and
mov
and
pop
cmc
popa
out
rorb
mov
ljmp
cld
add
les
rcll
pop
out
or
inc
scas
sub
loopne
xor
ret
enter
jne
lods
nop
xchg
hlt
popa
pop
fisubrs
lret
mov
mov
pop
sbb
ds
aas
mov
and
int3
xor
adc
sar
mov
mov
in
sbb
inc
pusha
add
sbb
xchg
test
jle
rorl
or
aas
imul
mov
aad
xchg
daa
push
or
cwtl
mov
sub
pop
loope
cmpsl
stos
lret
lock
jle
movsl
xor
loope
pop
mov
dec
rclb
faddp
shl
or
mov
sahf
jg
jecxz
mov
test
test
inc
inc
adc
mov
jecxz
push
cld
into
push
jg
sbb
test
fnsave
add
out
inc
test
lahf
out
dec
sbb
or
xchg
popa
dec
cmp
mov
loope
shlb
mov
or
push
loop
and
push
inc
lods
add
loopne
jg
xchg
stc
inc
aad
jp
or
lret
loope
xorb
push
push
sub
jne
mov
or
cmc
inc
xor
pop
mov
push
adc
ss
das
jecxz
dec
nop
cmp
rclb
orb
fildll
cmp
in
sbb
stc
std
jnp
xchg
dec
pop
dec
icebp
xor
pop
xorb
mov
cmp
push
ja
popf
das
in
mov
idivl
jp
jbe
imul
leave
mov
pop
sub
mov
jno
dec
mov
ds
aas
ficompl
pop
mov
mov
xor
mov
jl
cmp
in
push
js
shlb
loope
dec
addr16
push
test
cmc
adc
push
xchg
fildll
xor
xchg
jae
pop
cmp
scas
jge
cmp
pop
xchg
sahf
xchg
fwait
sbb
int3
xor
lods
mov
aam
mov
cmc
shrl
jne
jo
cld
xor
add
fs
mov
cmpsl
fldlg2
sub
cmp
bound
stc
lods
adc
and
ficompl
outsl
loope
pop
xchg
movsl
or
sub
sbb
stos
jno
cli
aad
jb
xlat
adc
gs
mov
mov
sub
cmovno
mov
sbb
pop
adc
cmp
rcr
fisttpll
adc
fdivs
dec
stos
xor
xchg
imul
icebp
sti
mov
test
mov
pop
ljmp
icebp
lods
int3
xchg
repnz
icebp
mov
sub
lret
jno
sub
arpl
and
mov
xchg
out
rclb
mov
div
adcb
add
gs
lret
jl
into
cli
push
or
lods
scas
xchg
popa
pop
dec
mov
addb
mov
jg
fs
js
icebp
lret
and
addb
or
dec
or
mov
jbe
ret
icebp
inc
mov
mov
inc
xchg
sbb
sahf
xor
test
test
cmpsl
out
sbb
dec
sti
mov
mov
mov
out
and
adc
cmp
sbb
cmp
movsb
lcall
jns
out
or
push
test
sti
lea
loopne
or
pop
push
pop
cwtl
in
jne
mov
ror
pop
mov
xor
cmp
clc
loopne
xchg
into
es
andl
dec
pop
aam
jg
cld
mov
es
pop
jl
inc
dec
push
cmp
pop
bound
fsubr
add
push
fwait
icebp
mov
sub
dec
dec
repnz
and
or
in
fidivrl
mov
push
mov
mov
mov
mov
lock
into
jg
jns
in
test
jo
add
mov
repnz
in
inc
pop
scas
sub
cwtl
movsl
pusha
dec
gs
sub
mov
dec
bound
aaa
sub
das
loop
jg
loope
es
dec
stc
andl
mov
jge
in
mov
lds
inc
cmc
dec
lret
adc
in
imul
inc
loop
inc
dec
pop
lods
addb
jg
in
ljmp
fimull
lock
shll
rorb
pusha
fwait
nop
repz
lds
les
xchg
sbb
xchg
fiaddl
sarl
nop
repz
push
sbb
aam
sbb
sub
ss
mov
bound
add
push
lds
xchg
mov
imulb
mov
mov
xor
cwtl
call
int
and
push
mov
push
stos
dec
sbb
out
repz
mov
mov
push
fldln2
mov
jnp
add
xor
jne
sbb
sbb
xor
insl
cwtl
sar
hlt
sbb
or
sub
lods
loopne
stos
outsb
xchg
mov
dec
inc
cld
movsl
lea
push
dec
jo
stos
imul
fmul
imul
cmp
cmp
test
xor
adcb
in
mov
dec
sarb
int
mov
loop
sub
or
or
push
test
mov
icebp
mov
push
inc
rcl
mov
or
push
clc
adc
adc
outsl
pop
or
jno
pusha
sbb
nop
add
je
pop
sub
pop
xor
out
mov
and
jo
xchg
mov
repnz
data16
lret
mov
inc
xchg
jo
mov
scas
mov
inc
aas
or
dec
pop
mov
shrl
cmp
mov
js
pop
push
lock
call
rcrl
sbb
jp
pop
push
xchg
aam
mov
cld
jb
mov
or
loope
adc
mov
mov
std
add
mov
push
adc
sqrtps
jecxz
test
lcall
lods
hlt
ss
mov
mov
adc
or
fidivs
mov
sub
dec
mov
mov
mov
add
test
and
mov
xor
xchg
pop
add
push
fldt
int3
cltd
add
or
sub
jg
fcompl
jo
push
call
cmc
es
icebp
cmp
mov
stc
jp
je
movsl
and
repz
jno
adc
stos
cmp
fstl
bnd
push
or
jne
jno
pop
jno
inc
or
jecxz
xchg
sub
rcl
dec
imul
or
cmc
cmp
aad
pop
movsl
sub
pop
rclb
call
sub
pop
mov
iret
maxps
call
int
movsl
sbb
push
mov
dec
cmp
add
mov
jg
cwtl
cld
push
daa
pop
mov
stos
cmc
sub
inc
std
pop
mov
jns
setns
std
leave
sub
and
mov
mov
fstpl
dec
in
stos
mov
cmpsl
push
cld
sbb
sub
testl
cmp
aas
mov
adc
std
pop
adc
push
sahf
add
movsb
sub
xor
cmp
repz
imul
sbb
ja
enter
sbb
das
mov
xchg
sbb
sub
pushf
cmpsl
xor
stos
xor
add
fsin
aaa
arpl
xchg
mov
nop
mov
movsb
jg
push
mov
mov
fsubrs
jle
adc
dec
cmpsb
ss
mov
xchg
dec
inc
jno
popa
in
inc
jecxz
lret
ja
jmp
sbb
cmc
aaa
jge
and
aam
ss
sahf
xchg
popf
nop
or
cld
and
je
mov
push
xchg
ret
mov
push
hlt
test
incl
arpl
lahf
add
mov
cs
xchg
adcl
push
insb
fwait
jmp
pop
dec
cld
cltd
lds
mov
pop
jno
adc
popf
enter
fistl
push
xor
adcb
adc
pop
stc
lret
jns
imul
inc
outsb
push
fwait
xor
jl
adc
pop
daa
or
and
mov
push
or
test
and
xor
cmp
cmpsb
mov
push
dec
adc
ret
dec
aaa
scas
scas
sub
dec
hlt
ljmp
fyl2x
pop
sbb
pushf
in
xor
mov
lds
pop
icebp
pop
lods
test
cmp
outsb
jl
xchg
push
rcl
cmp
pusha
and
icebp
fildll
gs
pop
mov
sub
mov
roll
inc
ret
adc
fwait
add
mov
xchg
ljmp
jbe
rclb
mov
test
jbe
lcall
fldl
mov
in
pop
push
cmp
xchg
xorb
sbb
leave
lods
flds
mov
int3
add
xchg
adc
mov
pop
data16
leave
jmp
sub
iret
rorb
lret
adc
mov
es
enter
mov
movsb
cld
cmc
add
jge
and
subl
jns
test
and
or
xor
scas
js
jne
mov
jecxz
mov
je
daa
scas
adc
dec
fnsetpm(287
rcrl
jnp
faddl
mov
dec
inc
mov
out
lock
mov
nop
adc
jbe
sbbl
mov
cmp
jge
lcall
xor
ljmp
add
mov
sub
insl
adc
lret
pop
add
cmc
cmpsl
cltd
fmul
inc
out
add
loop
cld
lock
and
insl
sub
loopne
fisttpll
sub
jecxz
pop
stc
mov
and
ret
pop
cmp
rcrl
pushf
mov
dec
and
xchg
mov
push
and
jns
adc
negb
push
fiaddl
lods
xchg
pushf
mov
jg
cmp
inc
inc
xlat
cli
iret
mov
repz
sub
adc
pop
or
testb
mov
xchg
dec
out
sub
out
aad
cld
rorl
pop
or
ja
mov
pusha
ret
les
fdivrp
mov
lods
repz
int
mov
insb
dec
adc
inc
fwait
int
jbe
fildll
sarl
imul
jnp
ret
lds
ss
mov
cmpl
lcall
mov
lahf
xchg
fisttpl
or
les
inc
out
or
push
repnz
xor
adc
outsl
cmpsb
shlb
jp
out
mov
and
push
sub
sub
dec
xor
pop
popl
mov
loop
sub
ljmp
mov
cld
jmp
jno
xchg
fs
fbstp
mulb
cmc
add
pop
fstl
mov
arpl
enter
cmp
test
xchg
xchg
pop
jno
test
dec
mov
mov
pop
ljmp
jbe
insb
or
mov
and
push
or
xor
xlat
mov
inc
sbb
pop
xchg
mulw
jp
cmp
add
fstpl
xor
xchg
fdivrl
sbb
xchg
hlt
pusha
mov
jnp
mov
mov
xlat
addr16
xor
dec
cwtl
dec
jb
mov
add
mov
inc
push
adc
cmp
inc
push
pop
jo
cmp
movsb
in
inc
cmp
loopne
arpl
out
imul
aas
and
cmp
pop
cmp
and
shrl
aaa
cmp
mov
xor
xor
fadds
xlat
cwtl
xor
lds
ljmp
inc
inc
jo
int
jp
pop
xchg
push
out
adc
das
push
add
je
or
int
or
out
push
aaa
xchg
iret
push
shll
cmpsb
push
jmp
cmp
dec
out
scas
sar
lret
sub
xor
jecxz
gs
incl
fildll
ret
cmpb
sbb
or
mov
cltd
cmc
sub
jmp
popf
lcall
inc
pop
and
lds
xor
aaa
dec
fs
sbb
cmp
xchg
mov
sub
inc
sub
fsubrl
into
iret
pop
and
sub
inc
pop
mov
pop
pop
orl
inc
and
mov
xchg
cmp
mov
or
and
ds
mov
testb
pop
clc
jg
test
mov
cld
mov
daa
cmc
cltd
test
arpl
or
rorb
cld
addr16
xchg
or
repnz
sub
dec
arpl
add
loop
pop
daa
jmp
cmp
inc
xor
xlat
pop
cmp
in
xchg
sub
pop
sbb
jo
pop
pop
sti
add
pop
mov
mov
xor
test
jb
ljmp
rolb
sub
inc
xchg
sbbb
mov
jle
hlt
fcompl
addb
xor
clc
mov
ja
cs
mov
or
test
xchg
push
ret
adc
pop
add
push
ljmp
dec
jmp
pop
dec
icebp
mov
rorb
jmp
mov
mov
fnstcw
lret
jns
lahf
les
in
fs
mov
cmp
mov
adcb
in
inc
int3
fmuls
fsubl
push
mov
push
sub
pop
add
std
clc
dec
stos
imul
jno
dec
icebp
ja
xchg
shll
cli
xchg
sbb
ljmp
push
out
outsb
outsb
push
cwtl
mov
ss
ss
cmp
pop
loop
push
mov
cwtl
inc
rcrb
fsubrs
or
cmp
inc
shrb
cld
or
mov
ret
jmp
jmp
mov
pop
inc
cs
push
enter
sbb
jns
leave
mov
incb
mov
xchg
mov
movsl
jae
adc
add
and
push
inc
dec
mov
xchg
icebp
inc
sub
addr16
das
les
movsb
sub
xlat
cmpb
push
test
ret
icebp
ds
lret
insb
aas
loopne
in
das
jns
scas
out
fldenv
pushf
mov
dec
push
adc
sub
out
sbb
aaa
insl
cmc
pop
add
inc
scas
sahf
test
dec
mov
add
stos
mov
pop
int
fstpl
and
push
flds
hlt
xchg
fnsave
inc
jmp
adc
clc
adcb
inc
adcl
sbb
movsb
sub
add
pop
pusha
icebp
out
mov
lock
push
repnz
mov
imul
cmp
lds
ret
xchg
adc
add
aad
loop
rclb
push
xchg
aad
xchg
push
add
scas
shll
sub
subl
push
add
movsb
pop
adc
and
xcrypt-ctr
cmpsl
pop
out
mov
adc
sub
xor
outsb
dec
jbe
in
enter
enter
jmp
in
sub
push
sub
movsb
lea
sub
add
inc
mov
ss
and
adc
mov
adc
jp
inc
xor
sub
and
inc
adc
inc
test
add
add
sub
repz
add
xor
sub
inc
into
sbb
scas
inc
repz
xchg
mov
sbb
and
inc
adc
iret
xchg
nop
xchg
ret
xchg
mov
popf
mov
sub
add
leave
push
sbbb
push
jmp
adc
push
pop
mov
repz
das
xor
and
xor
cmp
adc
push
popf
call
loop
scas
jbe
mov
movsb
mov
mov
bound
lahf
sti
js
xor
mov
jge
sbb
xor
scas
cs
sbb
dec
bound
and
sub
mov
xchg
inc
dec
push
int
gs
ss
insb
stos
pop
jle
cwtl
jne
sbb
add
fildll
mov
fs
dec
mov
clc
stos
xchg
inc
or
xor
xor
mov
ds
xchg
in
add
pop
sbb
jecxz
js
cmp
cmp
inc
icebp
and
jae
fldl2t
dec
mov
movsl
or
in
sbb
adc
lods
jge
mov
lahf
push
lods
push
scas
rclb
xor
cltd
cmp
inc
pushf
inc
mov
xchg
stos
jno
push
and
cmp
and
das
adc
mov
jns
popl
fcmove
or
imul
test
dec
jne
in
jmp
neg
sub
push
inc
sbb
jbe
and
adc
push
cmp
shll
das
mov
add
idivb
mov
aas
pusha
jg
sbb
sub
pusha
cmpsl
cmpsb
push
insl
sbb
loopne
subl
popa
cmc
xor
mov
mov
or
dec
pop
rcll
push
dec
xchg
xchg
shlb
sbb
loope
es
sbbl
mov
shl
cmp
loopne
push
add
sub
mov
pop
je
movsb
push
mov
into
sti
outsl
sub
pop
adc
inc
xchg
push
cmpsl
in
stos
aaa
shl
imul
push
outsl
cmpsl
out
outsb
xor
hlt
cltd
dec
and
es
dec
out
mov
cld
mov
jg
push
adc
sub
xor
jnp
nop
lret
aam
pop
mov
loopne
insl
les
ljmp
xor
cs
lahf
rcll
and
out
repz
in
push
inc
fiaddl
or
shlb
inc
decl
inc
test
or
push
cmc
cmpsl
xor
lret
cmc
sahf
gs
dec
mov
enter
adc
jne
mov
test
mov
pop
xor
fsubr
sbb
lcall
in
cmc
mov
pop
sbb
inc
mov
fcoms
je
pop
hlt
in
in
sbb
insl
leave
pop
mov
faddp
add
insb
mov
jb
and
fcomip
popf
jnp
push
cmp
add
loopne
jnp
or
push
push
scas
aad
mov
xor
ror
add
cmp
mov
sbb
daa
and
cli
data16
dec
scas
push
xchg
mov
adc
push
push
mov
or
ljmp
scas
and
jbe
daa
add
stos
inc
jo
jbe
jae
push
gs
cltd
rcll
dec
cwtl
push
into
sub
or
repz
lods
push
mov
popf
lds
inc
movsl
xor
jnp
push
lods
es
les
xor
in
dec
shrb
sarb
add
jne
pop
inc
and
inc
jae
aam
adc
shll
aas
fldt
scas
mov
dec
xchg
xor
xchg
andb
iret
mov
lds
add
cwtl
cmp
shrb
mull
std
jp
mov
ds
ja
mov
pop
mov
pop
mov
fcmovnu
scas
push
mov
daa
call
inc
mov
mov
shlb
dec
shll
cmpb
add
or
loope
pop
cmp
cmpsb
leave
jbe
fidivl
stos
cmpsb
gs
jb
nop
jle
outsb
scas
leave
loopne
sbb
ret
push
imul
adc
test
orl
push
push
sti
jbe
iret
mov
mov
mov
jecxz
stc
rcrb
cli
jge
cwtl
add
clc
and
stos
mov
insb
adc
js
adc
lock
pop
xchg
cs
push
dec
and
jg
std
jg
mov
pop
dec
insl
call
xchg
adc
xchg
push
mov
rcr
dec
jno
loopew
sub
outsb
and
ss
cmpsb
push
call
adc
call
push
lea
mov
aad
ss
popf
fdivrp
adc
jge
jp
xor
aam
pop
xor
mov
mov
and
mov
sub
jae
jbe
adc
adc
leave
push
jle
sarb
ret
repz
out
or
push
sub
and
mov
push
push
sbb
or
sbb
add
repz
inc
mov
cld
jns
mov
aaa
jo
xchg
mov
xchg
xchg
jns
push
test
cmpsl
jne
sbb
jp
nop
loope
dec
rorl
or
mov
popa
dec
sub
xchg
loop
push
daa
test
jg
ss
cmp
cwtl
mov
and
adc
sbb
in
movsl
ljmp
test
ljmp
inc
fcmove
push
sub
pextrw
inc
int3
test
subb
pop
lods
insl
mov
cs
loop
mov
or
data16
cmp
fnstenv
aam
inc
jo
rol
aad
inc
pop
xchg
mov
decb
popa
pop
dec
outsl
mov
or
lds
sbb
push
stos
add
sbb
and
mov
popf
cmc
jg
xchg
test
loopne
fildll
bound
push
addb
xor
xor
in
dec
test
mov
mov
decb
test
cs
movl
subb
adc
sbb
or
mov
stos
push
mov
mov
into
dec
mov
jge
mov
test
mov
cwtl
xlat
lds
repz
xchg
xchg
lods
push
in
sub
flds
sub
push
dec
cld
sub
fisttps
xchg
xchg
xchg
mov
pop
out
stos
test
ret
pop
cmpsl
push
fnstenv
stos
clc
cmp
fadds
add
mull
loope
les
xor
mov
xchg
cmc
arpl
adc
fistps
fcom
mov
testl
sbb
or
add
or
xor
or
fwait
sahf
rcll
mov
std
adc
pop
mov
and
cmpsb
and
jl
lcall
int3
insb
int
bound
dec
push
mov
xor
adc
loopne
stos
fdiv
or
bound
dec
sarl
out
inc
into
xor
sarb
fcompl
jg
scas
push
push
fsubs
push
into
in
inc
arpl
out
mov
ss
movsl
inc
xor
ja
sbb
shll
movsl
pop
and
mov
pop
add
jmp
imul
and
xchg
pop
adc
cmpsb
xchg
cld
push
enter
adc
gs
pop
and
pop
lahf
cmp
pavgw
and
addr16
jl
lods
xchg
pop
fisttps
and
movsb
ss
cltd
jnp
jae
sub
xchg
xchg
xorl
in
addl
imul
imul
mov
push
leave
adc
or
jg
jne
sti
push
adc
rcrl
subb
xchg
mov
mov
popa
iret
cmp
jb
cmp
aaa
js
push
xchg
jb
loop
add
or
into
sub
inc
mov
sahf
push
adc
stc
sbb
fs
mov
pushl
cmc
jae
repz
sbb
mov
ja
pop
clc
jmp
hlt
sbb
out
loop
push
pop
pop
fucomp
xchg
or
loope
or
insb
in
mov
mov
dec
cmp
scas
and
jb
jecxz
sbb
adc
or
or
sti
insl
add
sub
mov
mov
std
xor
xor
sbb
pusha
je
cmp
xchg
mov
lret
test
mov
les
aad
scas
ljmp
stos
sbb
cli
jb
push
loope
insb
xchg
je,pn
pop
les
jmp
mov
sahf
xlat
sub
push
mov
fcmovnbe
out
cwtl
and
xchg
fwait
stos
aaa
jecxz
sub
outsl
int
imul
add
js
mov
add
aas
andl
imul
shlb
orb
jbe
xchg
cltd
loope
sbb
lods
or
and
test
cmpb
pop
inc
inc
xchg
mov
movsl
inc
cli
fldt
jnp
sbb
lods
jno
jbe
insb
mov
jge
adc
mov
cmp
jge
cmp
aaa
inc
imul
sub
fbstp
dec
clc
jp
dec
jbe
and
rcl
ja
in
sbb
and
push
test
hlt
pop
es
rolb
or
cmp
xor
xor
orb
pop
pop
sub
and
movsb
inc
cltd
xor
fld
out
jl
test
cmpsb
cmp
out
mov
mov
pop
add
fistpll
call
les
in
add
lds
pop
aaa
cltd
aam
push
rcll
pop
sub
mov
fists
mov
add
jmp
mov
or
and
mov
xor
test
enter
and
add
arpl
int3
mov
out
or
cmp
adc
out
mov
lcall
test
cwtl
movsl
xchg
adc
sbbb
push
and
loope
xchg
cmc
pop
inc
mov
jecxz
into
pop
imul
das
cmp
sub
ss
ljmp
fstps
mov
loope
dec
out
out
mov
lret
pop
icebp
loop
insl
mov
xchg
sub
mov
push
and
xchg
popa
adc
divl
lcall
inc
dec
xor
clc
inc
push
xchg
jb
out
adc
push
sbb
cwtl
mov
xchg
pop
and
cld
xlat
sub
iret
mov
jbe
mov
mov
fisubs
pusha
mul
psubw
neg
lock
hlt
inc
lods
jmp
fs
decl
mov
xor
jle
std
adc
orl
daa
xchg
insl
fidivs
mov
pop
xor
sti
fiaddl
fisubs
pushf
stos
ljmp
mov
jnp
adc
push
inc
es
pop
xchg
cmp
fildl
inc
rolb
jle
call
inc
or
popf
jno
xor
pop
movsl
push
loopne
sbb
call
jle
sbb
cmpsl
xchg
sub
inc
xor
sbb
fiaddl
push
lahf
jg
xorl
imul
jb
inc
imul
jmp
les
sarl
pop
mov
fnsave
aad
jae
pop
cmpsl
lea
xchg
jecxz
push
adc
ret
testb
aaa
add
int3
loopne
in
rcrl
jl
and
sub
roll
pop
and
mov
push
dec
inc
pop
sbb
jnp
dec
jns
push
xchg
mov
sbb
inc
fsubrl
xchg
std
cmpsl
je
aad
cli
mov
repnz
mov
js
rcrl
add
repnz
int3
or
mov
mov
lcall
inc
loopne
call
and
mov
inc
loop
loopne
and
xchg
lret
in
pop
lea
rcr
rcr
out
jns
jge
out
sub
inc
imul
dec
pop
add
stos
fstpl
imul
dec
push
add
inc
xorl
adc
vminsd
pop
xor
adc
inc
pop
adc
jge
in
fwait
int
xor
out
fs
inc
int
ss
mov
fdivl
in
cltd
ret
cmp
int
pop
ret
inc
stos
jno
mov
pop
fiadds
or
test
and
movsl
jg
aaa
cwtl
cli
addr16
or
lcall
daa
orl
inc
cmp
inc
js
pop
mov
std
in
out
incb
fabs
pushf
jp
push
dec
nop
shrb
inc
negl
in
stc
ljmp
lock
lahf
push
xchg
xchg
and
push
cmp
inc
insb
cmp
shl
xchg
movsb
aam
mov
inc
jecxz
insb
push
fldt
into
fcoml
in
push
or
incl
les
popl
adc
add
scas
mov
push
jo
jo
fwait
sahf
stos
cmpsl
stc
out
jecxz
ja
dec
cs
cmp
inc
dec
test
lock
ds
mov
jb
fildl
pop
cltd
aas
cmp
lods
loop
mov
enter
inc
fldl
ljmp
loope
ja
jbe
xchg
push
push
fcomi
or
xchg
pop
lahf
and
jecxz
dec
addb
mov
dec
pusha
in
push
pop
dec
loope
sub
xchg
call
bswap
lret
insl
dec
push
add
cmp
and
dec
negl
leave
mov
add
fists
out
xchg
add
fnstsw
cmpsb
bound
sub
mov
and
out
bound
popa
or
ret
jge
jne
mov
popa
fsubr
or
cmc
call
inc
jg
pop
cmp
sbb
push
addr16
inc
ffreep
xchg
fldt
imul
mov
push
mov
enter
pop
data16
popf
sahf
or
mov
insb
cld
loopne
int3
lcall
sbb
mov
cmp
add
in
test
jo
lock
inc
dec
js
clc
clc
ja
jbe
enter
adc
out
pop
xor
in
pop
pop
outsl
mull
inc
sub
mov
imul
sbb
es
jecxz
mov
jnp
mov
dec
ret
pushl
sub
pop
test
iret
push
xorb
cltd
adc
mov
push
inc
movsl
push
js
dec
jecxz
push
adc
ss
lret
adc
sbb
pop
popa
das
out
mov
mov
aaa
mov
loop
cs
pop
or
gs
fwait
jmp
jp
mov
and
push
movsl
test
into
adc
pop
movsb
lods
sub
pop
mov
mov
popf
lahf
pop
xor
mov
ja
add
out
adc
rolb
push
sbb
sub
and
mov
out
daa
fisubl
popa
and
arpl
mov
pop
mov
ss
xor
sub
sbb
mov
cmp
cmp
xor
cmovno
inc
xchg
push
data16
cmp
nop
in
push
jae
mov
and
xor
rolb
test
fstl
int3
out
sub
int3
mov
pusha
inc
adc
out
in
pushf
mov
jns
lods
ret
or
jmp
mov
dec
pop
scas
xor
mov
push
mov
sub
stos
mov
push
ret
push
pusha
and
movsb
cltd
xlat
and
mov
mov
leave
push
fistps
lods
mov
roll
jb
dec
xchg
push
bound
ljmp
mov
aad
pop
jp
xchg
mov
mov
testl
jae
clc
ficoms
ds
fldl
sahf
pop
sbb
dec
mov
xchg
mov
add
pop
jl
inc
sti
imul
dec
xchg
add
push
pop
outsl
call
xor
xchg
cmp
fmulp
push
in
mov
pushf
mov
dec
sub
pop
cmp
sub
movsl
aaa
mov
xchg
xchg
mov
call
push
cltd
xchg
dec
pop
ljmp
in
out
mov
cld
movsb
inc
cld
je
icebp
jno
adc
flds
dec
js
pop
dec
call
or
lret
enter
addr16
lds
pop
push
push
es
adc
in
xchg
jge
mov
mov
bnd
cmp
sub
lret
pop
mov
push
and
inc
bound
jmp
mov
je
imul
lret
push
pop
jno
fnstenv
pop
xor
sbb
icebp
lods
ret
pop
or
cs
xchg
mov
gs
int
ds
push
imul
fcompl
push
out
icebp
jno
and
lcall
shl
das
mov
mov
xchg
loope
sub
cmp
in
lret
stos
bnd
aas
and
sbb
inc
add
ja
xchg
loopne
mov
cmp
pusha
push
mov
xchg
push
pop
shrb
popfw
inc
push
and
adc
pop
gs
ds
in
outsl
lret
negl
pop
mov
dec
sbb
sbb
out
cld
sub
dec
movl
add
mov
repnz
inc
test
sahf
cmp
dec
rclb
xchg
cmp
and
cltd
push
push
fstps
dec
cwtl
enter
push
inc
ljmp
aas
mov
pop
repz
xchg
ficomps
or
or
lret
sbb
repz
ret
ret
mov
adc
fs
mov
out
loope
jae
cli
or
js
jno
xor
adc
fdivl
repz
inc
add
jnp
pop
lret
cltd
xchg
outsb
mov
aad
scas
andl
mov
insl
inc
arpl
mov
jns
mov
jmp
in
inc
sub
pop
inc
bound
dec
imul
sub
adc
push
jae
imul
dec
cltd
jl
lret
add
lret
jg
and
data16
ds
out
jl
int
imul
jmp
push
clc
test
cmp
cmp
ss
mov
or
bound
and
dec
out
mov
lds
fcomi
inc
mov
inc
xchg
in
xor
pop
out
xchg
mov
mov
movsb
insl
ljmp
outsl
push
pop
xchg
push
fbld
mov
insl
mov
call
jbe
mov
sbb
movsl
cmp
cmp
cmp
fs
inc
mov
int
add
jbe
arpl
push
iret
out
fs
jnp
add
add
pop
push
mov
and
mov
dec
push
or
jg
repz
icebp
mulb
loopne
imul
bound
and
jl
daa
daa
pop
cltd
loopne
jl
xorl
adc
sti
mov
cmpb
clc
mov
fiaddl
cmc
sub
notb
dec
jmp
xchg
andl
mov
mov
leave
dec
out
xlat
mov
cmp
sahf
pusha
push
cltd
pop
test
les
pop
imul
stc
cmp
and
into
sbb
bound
call
xchg
cmp
pop
mov
xchg
in
mov
ret
xchg
subl
sub
int
mov
inc
movsl
call
ds
xor
sub
and
gs
dec
sbb
push
xchg
sub
mov
jl
loope
mov
pop
sbb
mov
inc
xlat
mov
je
lret
shl
pushf
leave
stos
cmpb
incb
mov
xor
test
cmpsl
std
cmp
cltd
sub
pop
loopne
enter
roll
inc
das
movsb
aas
dec
mov
sub
and
stos
gs
cmpsl
cld
outsb
fldcw
jmp
xchg
daa
mov
aaa
pusha
daa
mov
imul
xor
in
sub
loope
jecxz
movsb
out
pop
rcrb
dec
cs
push
push
fwait
push
sub
add
enter
add
xchg
add
add
mov
mov
loopne
jp
mov
jnp
jne
test
cld
fwait
jmp
inc
jg
inc
push
sti
sbb
ss
mov
adc
sub
mov
jg
testl
xchg
outsb
push
adc
lret
jns
xchg
adc
aad
mov
arpl
jne
mov
scas
xor
outsb
clc
inc
enter
fidivs
mov
xchg
pop
and
test
inc
rcll
jmp
cli
cmp
dec
dec
test
mov
int3
mov
bnd
not
mov
and
push
lods
sar
mov
outsl
test
mov
or
ret
movsl
js
in
pop
call
inc
mov
stos
int
sbb
loope
pop
fdivrl
shl
lcall
push
inc
lret
add
sub
push
scas
adc
sub
shlb
push
adc
movlps
cmpsl
xchg
test
add
fidivrl
dec
fmul
negl
inc
push
jb
sub
pop
out
adc
jp
push
mov
jbe
div
push
arpl
pop
cltd
push
xchg
cli
imul
scas
cwtl
insl
loope
or
and
pop
outsb
popa
xchg
fisttpll
ja
push
into
test
fmul
mov
mov
jmp
clc
lcall
fs
mov
cmp
mov
jge
lods
pop
hlt
sahf
outsl
mov
xchg
rcrb
je
sub
jno
test
in
jecxz
lcall
repz
je
cmpb
scas
shrl
cltd
pop
sbb
inc
mov
sbb
dec
out
sub
add
mov
or
lods
cwtl
jns
xchg
jg
inc
or
in
xchg
scas
sub
jl
push
xor
shll
hlt
push
insb
fnstsw
fldt
and
jg
pushf
leave
icebp
ret
loopne
adc
fld
into
ficomps
gs
test
pusha
sbb
leave
inc
mov
call
fucomi
in
push
adc
add
sahf
icebp
scas
repnz
mov
sub
test
lods
add
pop
fsubs
and
sub
adc
test
xchg
jo
lret
scas
fdivs
icebp
add
int3
jmp
lahf
mov
push
xchg
inc
bndldx
clc
cwtl
push
adc
pusha
add
inc
stos
pop
leave
addr16
inc
lahf
fmuls
xchg
or
test
lcall
dec
dec
sbb
pop
xchg
cmp
roll
xor
xchg
test
push
push
in
mov
repnz
inc
adc
adc
rcr
out
stos
cli
adc
dec
iret
adc
hlt
sub
sbb
cmp
aas
inc
inc
xor
enter
cmp
xchg
sarl
mov
jo
lds
std
mov
or
dec
scas
adc
sahf
shlb
and
divl
stos
andb
ja
adc
movsl
push
test
pusha
stos
ret
xchg
jecxz
and
lods
sahf
xchg
je
stos
cwtl
test
jmp
int3
mov
cmc
mov
rcrb
xchg
sbb
xchg
mov
cmp
inc
shll
push
jnp
repnz
push
add
dec
lahf
pop
xchg
and
in
dec
adc
mov
leave
mov
cmpl
fwait
loopne
xchg
nop
andb
push
or
push
aas
push
fsubrl
test
mov
mov
mov
movsb
in
sbb
stos
bt
sub
xorb
inc
push
or
inc
push
add
lds
ret
add
jmp
jle
sbb
push
mov
jg
add
or
ljmp
and
jmp
lret
mov
repnz
mov
and
sar
in
test
pop
nop
mov
mov
xor
imul
js
xor
sahf
frstor
insb
lock
nop
mov
into
xor
ljmp
pop
mulb
loop
push
sbb
xchg
sbbl
sbb
ja
lock
cmp
mov
fisubrs
mov
sarl
lcall
and
mov
lret
dec
lods
test
jnp
inc
jnp
cmc
ds
aad
mov
jl
jmp
xchg
mov
fbld
cmc
mov
mov
mov
shrb
adc
cmp
mov
lods
rcll
in
xor
fimuls
jo
jp
call
fists
jge
jb
stc
xor
dec
lcall
in
add
cmc
inc
subl
fcmovb
sub
cmp
mov
lret
add
and
push
mov
jns
lods
dec
insl
pop
pop
mov
sbb
add
mov
notb
push
xor
pop
cli
cmc
cmpsl
cmpsb
jle
xchg
jnp
adc
hlt
sbb
xchg
add
leave
fdivrl
pop
popa
shll
mov
cs
les
inc
cwtl
or
cltd
sbb
jne
subl
ret
out
mov
mov
jae
adc
xchg
inc
push
dec
adc
dec
loop
addl
movsl
mov
insl
aad
cmp
sbb
and
mov
mov
fs
xor
or
enter
mov
sub
lret
cwtl
cmp
fildll
test
jae
idivl
movl
sub
sub
out
push
cld
pop
ljmp
jl
xor
sbb
and
pop
scas
and
sbb
arpl
push
push
pop
jge
push
jns
popa
mov
mov
sbb
xchg
mov
fistps
mov
cwtl
cmp
push
ss
dec
insb
push
out
inc
out
mov
xor
rorl
adcb
mov
lods
or
aad
ds
aaa
sbb
pop
call
je
inc
sub
push
dec
inc
push
stc
andb
and
out
fmull
cld
push
int
mov
jp
or
ficoms
jnp
das
mov
adc
outsl
call
test
sti
sub
popl
pop
pop
push
arpl
call
leave
je
or
fisttpl
fprem
popa
pop
fwait
sti
cld
mov
outsb
call
les
imul
push
call
test
add
jbe
call
jo
bound
test
mov
movq
fsin
repnz
orb
cwtl
cmp
mov
inc
mov
cmp
jg
in
stos
incw
dec
mov
sar
jecxz
mov
cld
outsl
cwtl
dec
sub
push
dec
je
loopne
sbb
std
mov
push
pop
pop
pop
add
mov
inc
sarl
sub
addr16
notb
es
push
ljmp
loope
fadd
repz
pop
push
in
or
cmp
adc
dec
into
jg
cmp
ljmp
xchg
cmp
inc
sbb
pop
xor
jns
je
or
xchg
inc
xor
xchg
adc
inc
push
ds
sub
jnp
js
or
pop
fwait
outsb
daa
lods
fisttps
jecxz
sub
dec
cmp
jp
clc
push
loope
xchg
push
sbb
leave
stc
fwait
xor
iret
mov
add
repz
lods
cs
mov
xor
fnstenv
jl
insl
fiadds
xchg
xchg
mov
std
inc
outsb
data16
or
mov
das
push
pop
lcall
push
gs
and
xor
mov
gs
lret
cmp
cld
or
or
xor
push
dec
mov
loop
push
sub
int
or
js
sub
inc
dec
fwait
fs
icebp
stos
cmp
stos
jb
mov
adc
inc
lret
add
or
icebp
jo
inc
shlb
cltd
jo
jns
jns
mov
pop
cmc
jecxz
cwtl
sub
pop
mov
or
or
sub
jg
sub
fmulp
xchg
loope
and
jae
pop
loopne
and
mov
pop
inc
je
aaa
dec
icebp
xchg
and
das
mov
jl
imul
dec
movsb
xchg
dec
subb
testb
in
mov
push
dec
leave
jo
add
lods
fadd
gs
out
xor
pop
fs
jp
cs
lods
sbb
cmp
and
cld
inc
popw
orl
add
xchg
jnp
outsb
subl
int3
push
negl
arpl
xor
mov
pop
test
lret
mov
push
lods
bound
push
cmc
subb
pop
sbb
enter
arpl
or
lea
adc
fcompl
psubsw
xor
loopne
xor
enter
fs
cwtl
jne
xchg
shlb
jne
ds
mov
pop
int3
and
cmp
adc
jle
fpatan
into
mov
cli
fnstcw
xor
adc
jmp
push
mov
adc
ljmp
add
push
cmp
jno
ja
add
inc
mov
jge
xlat
fs
int3
mov
dec
xchg
pushf
mov
movsb
xor
or
rcr
jle
insl
xchg
add
or
pusha
loop
test
adc
push
orb
movsl
push
lds
mov
hlt
cmp
outsl
push
jne
mov
test
lds
sbb
or
cmpsl
stos
fwait
push
push
xlat
das
sbb
leave
mov
icebp
adc
aad
ljmp
xorl
adc
inc
std
mov
sbb
cmp
push
bound
test
adc
cld
mov
sbb
xchg
xor
push
cmpsb
jns
push
mov
lds
xor
or
sar
test
adc
push
sub
repnz
push
sub
inc
dec
dec
scas
xbegin
jnp
addr16
scas
icebp
pop
dec
pop
sbb
xlat
jmp
mov
mov
jl
jle
stos
adc
jnp
filds
mov
mov
insl
sahf
adc
lahf
mov
test
pop
sub
icebp
stos
jmp
lret
inc
lcall
mov
dec
fs
stc
fstl
clc
mov
xrelease
cmp
lret
push
jo
xchg
int3
nop
rcrb
outsl
jne
sbb
mov
fcmovbe
inc
sub
cli
mov
mov
lcall
rol
or
mov
mov
mov
add
lods
sbb
pop
mov
inc
test
shlb
mov
fists
mov
mov
pusha
jo
push
ss
out
jb
mov
test
or
sub
lcall
mov
pushf
addl
push
loop
dec
lcall
mov
nop
insl
lret
testl
mov
out
mov
sar
nop
jns,pt
movsl
ror
hlt
jmp
std
mov
in
popa
mov
ficoml
or
add
cmc
mov
push
jl
test
andl
pop
pop
jmp
out
add
xor
jmp
ret
imul
jge
inc
pop
fwait
cmp
outsb
push
fcompl
fsub
adc
lahf
lahf
lcall
pusha
and
or
iret
pop
cmp
lret
sub
gs
inc
inc
xlat
inc
mov
int3
push
lea
test
jae
adc
inc
xor
cmpsl
sbb
sbb
fstpt
cmp
jbe
or
cmc
fistl
cs
xchg
add
add
scas
jns
out
cmpb
out
aam
adc
push
sbbl
push
sahf
lret
repnz
in
pop
jg
aaa
bound
mov
xor
xchg
je
ficompl
jo
jbe
mov
mov
fcmovnu
data16
add
movb
lcall
push
cmp
stos
push
lds
cmp
out
push
lock
mov
mov
mov
je
in
mov
roll
icebp
jae
pop
inc
test
sbb
adc
add
out
clc
out
addr16
ss
ror
or
push
in
outsl
jno
ja
bound
or
push
mov
jl
testl
scas
cmp
mov
insl
cmp
lahf
push
enter
xchg
adc
sub
rcr
andb
cli
jge
imul
lods
iret
pop
or
sbb
push
push
add
push
push
inc
sbb
lds
xchg
push
ret
mov
stos
push
jmp
and
add
loopne
sahf
in
cli
ret
xchg
jmp
mov
push
movsb
sub
fstpt
in
stc
je
rcll
dec
push
in
rorb
fs
popf
mov
mov
lods
test
add
lret
or
dec
pop
cmpsb
ljmp
push
sub
adc
pop
icebp
lcall
gs
test
arpl
add
mov
mov
push
rorl
mov
push
pop
loopne
imul
ss
and
push
cmpsl
mov
dec
cwtl
jb
lods
insb
xchg
pop
mov
inc
xchg
out
mov
push
sbb
push
frstor
push
xchg
sub
in
push
fisttps
sbb
and
xorl
mov
test
xchg
and
mov
sbb
test
push
push
pop
push
jnp
mov
adc
out
mov
push
inc
pusha
les
lcall
es
xchg
inc
inc
mov
adc
push
push
sub
xchg
push
stos
out
xor
iret
fwait
test
ja
mov
mov
push
inc
scas
and
push
aas
int3
sub
jo
cwtl
mov
roll
jns
loope
test
xor
mov
mov
cs
rclb
ja
cli
das
bt
ffreep
xchg
daa
ficompl
jbe
mov
mov
test
icebp
loop
add
insl
into
fstpt
lds
add
outsb
addr16
sub
lret
sti
cmp
outsb
fmuls
pop
cmp
push
or
fsubrp
stos
adc
fistps
xor
sbb
mov
mov
lds
sbb
push
bound
movsb
insl
fisttpl
cmc
jb
daa
and
push
mov
fidivrs
mov
sbb
xchg
jecxz
xchg
movsb
push
cld
fxch
out
cli
movsl
mov
stc
jmp
sbb
imul
and
gs
bound
adc
fldl
fisttpll
jno
pop
popa
jnp
mov
mov
fbstp
and
inc
jb
aad
adc
mov
sbbl
dec
jle
int
leave
push
aad
arpl
hlt
movsl
cmp
and
adc
or
stc
test
cmp
pop
inc
jge
in
inc
ds
inc
data16
leave
push
stos
loopne
call
cli
les
mov
lods
sub
add
jne
or
out
lret
jge
leave
mov
or
jp
xorl
pxor
loope
clc
repz
mov
bound
push
push
inc
xor
jne
adc
cmp
mov
ret
fdivl
aas
dec
inc
dec
cmp
popf
popa
add
icebp
add
cli
addr16
jb
psubsw
and
mov
repz
add
loope
dec
xlat
test
add
imul
hlt
cld
push
loopne
cmp
mov
outsb
fwait
movaps
lods
sbb
lds
mov
test
xchg
fldl2t
or
and
pop
sbb
xchg
sarl
lahf
movsl
mov
and
cmpsl
pop
out
sahf
mov
sbbb
cs
push
ja
pusha
sub
sbb
dec
pop
mov
enter
lock
and
scas
add
in
cmp
and
call
mov
sbb
mov
iret
inc
jnp
addl
and
push
in
or
jne
popa
pop
test
cmp
mov
xchg
cltd
cltd
mov
mov
inc
or
xchg
sbb
xor
sbb
lret
cmc
outsl
ret
mov
pushf
pushf
cmpsl
addr16
dec
push
xor
dec
cmp
inc
mov
imul
fsubs
and
inc
aaa
xchg
pop
jnp
movsb
mov
fs
loope
fisttpll
je
rcrb
andl
adc
ja
cmp
xchg
ret
int3
push
lret
sub
pop
xchg
mov
aam
sub
add
add
out
add
ja
nop
mov
mov
andl
loop
out
into
cmp
dec
lret
repnz
xchg
lea
xor
cli
xchg
xchg
jnp
add
mov
leave
jl
icebp
or
cmp
inc
jl
mov
push
pushf
adc
in
mov
cmp
sbb
insb
rclb
lds
jecxz
div
fmul
mov
outsb
push
and
cmpsl
mov
nop
pop
aad
cmp
das
sbb
push
test
popa
cli
fwait
jno
incb
out
cs
ret
dec
push
pop
sub
test
jno
or
out
mov
pop
mov
push
addl
adc
bound
adc
data16
fs
ret
push
sbb
push
ljmp
movsb
lret
xchg
cmpsb
pusha
int3
jmp
dec
shll
cmp
inc
mov
xchg
xlat
enter
pop
add
and
icebp
mov
fistpl
outsb
xchg
mov
mov
pop
fmull
out
mov
jp
jle
pop
or
icebp
pop
and
gs
imul
xor
in
int
pop
in
push
push
lret
inc
cwtl
repnz
sti
sar
mov
popf
mov
fcmove
sahf
fadd
inc
and
imul
mov
jmp
lock
cmp
scas
or
stos
fnstsw
test
rcll
inc
cmp
xchg
jle
jecxz
inc
dec
movsl
dec
fisubs
and
jp
les
ret
inc
add
lcall
pushf
or
sbb
xor
jo
setnp
fmul
rclb
divl
enter
and
in
mov
ss
mov
pop
inc
stc
xchg
and
xchg
mov
xchg
in
fstps
mov
xchg
push
lret
jmp
jmp
jp
daa
out
icebp
out
push
insb
and
push
cmp
aam
pop
lds
mov
sarl
push
sbb
clc
les
sub
xchg
pop
add
cs
test
je
cli
mov
jns
jg
add
cmp
mov
mov
hlt
jo
adcb
stc
jae
or
insb
or
mov
ss
clc
adc
imul
loope
jb
icebp
jp
std
inc
std
std
outsl
mov
pushf
xchg
and
xor
mov
in
ret
std
xchg
sti
or
enter
cwtl
aam
jo
cld
xchg
jo
adc
inc
push
test
push
xchg
cmp
cltd
cltd
das
push
push
andb
js
xor
pcmpeqw
add
mov
lds
pop
dec
push
pop
pop
cmp
push
lret
push
insb
test
mov
mov
push
movsb
mov
out
adc
movsl
movsl
and
mov
and
mov
xchg
xchg
dec
ja
cvtdq2ps
push
mov
std
cs
iret
pop
mov
lods
push
jbe
mov
add
mov
mov
cli
fnstsw
mov
outsb
pushf
faddl
sahf
push
shrl
and
out
insb
adc
pop
call
bound
cmp
inc
hlt
dec
xchg
lods
rcrl
inc
mov
xor
mov
mov
sahf
outsb
pop
mov
sbb
imul
hlt
shll
cwtl
aas
or
pop
loopne
and
popf
inc
add
outsb
mov
packuswb
sahf
and
jnp
dec
loopne
lds
imul
adc
cs
loope
adc
cmp
cmp
sub
daa
sub
pushf
icebp
das
in
cli
fsubl
cltd
flds
mov
jl
jmp
pop
jmp
pop
or
sbbb
inc
cmp
pop
adc
mov
pop
std
add
movb
stc
and
push
add
xlat
js
add
mov
push
jnp
mov
adc
pop
loopne
mov
jmp
mov
imul
pusha
sarl
jo
mov
pop
aaa
out
sub
mov
stos
aad
inc
into
movsl
int
mov
in
and
cmp
sahf
inc
dec
jo
shll
mov
divb
pop
sbb
bound
add
in
fildll
out
out
mov
mov
push
shl
cs
push
lods
aam
mov
cmp
xchg
push
insb
rorl
sbbb
cmp
ret
movsl
pop
enter
cs
fdivp
mov
xchg
jb
inc
stos
mov
dec
sbb
sub
jl
ljmp
and
btc
mov
test
sti
int3
mov
sub
arpl
loopne
out
sarl
or
cmp
xor
mov
mov
jno
sbb
pop
pop
test
cmp
jns
add
xchg
push
xor
and
in
ss
dec
xor
popf
fcmovne
and
jecxz
mov
mov
dec
xchg
cmpl
stc
div
jae
and
loop
into
sarb
stos
cmp
aad
cmpsb
dec
sti
into
shll
mov
push
insl
adcl
ljmp
insb
test
sbb
popa
sub
inc
dec
jne
push
push
aam
cmp
jb
adc
cmp
js
xchg
ja
mov
aam
mov
mov
cmpsb
jo
xor
sbb
mov
and
je
aam
test
pop
jl
xchg
outsl
movsb
or
ret
addr16
xchg
sbb
lcall
mov
sbb
popf
insl
fsubl
js
pop
jl
int3
or
or
ss
add
fnstcw
imul
pop
mov
sbb
and
addr16
pop
clc
mov
out
push
add
dec
test
lea
in
pop
ljmp
aas
cmp
out
jae
mov
stc
xor
fdivrl
aad
mov
sbb
fldt
or
mov
scas
test
aam
xchg
rcrl
out
push
mov
pop
or
and
jg
dec
inc
stos
sarl
mov
xchg
push
lret
jo
scas
arpl
push
arpl
stos
aaa
pop
mov
push
dec
xchg
test
aas
jbe
xchg
xchg
inc
mov
add
jecxz
mov
adc
sub
incb
inc
pop
fnstsw
push
xor
pop
inc
repz
decl
inc
int
jecxz
mov
test
lcall
sahf
mov
xchg
lods
mov
sbb
push
movsl
mov
pop
popa
mov
shrd
std
loop
dec
pop
aaa
push
stos
sti
push
cwtl
pop
inc
nop
adc
sbb
pushf
mov
mov
sub
xchg
mov
rorb
mov
out
bound
stc
in
xchg
dec
je
inc
sbb
jg
hlt
lahf
mov
cltd
loope
adc
jno
push
add
push
cltd
outsl
pop
adc
ja
mov
iret
add
jle
sbb
dec
and
xchg
xor
std
mov
dec
jne
ljmp
xchg
xor
mov
insb
push
jae
sti
cs
push
xor
lcall
sbbb
adc
jb
mov
inc
nop
mov
inc
dec
push
mov
mov
inc
bnd
imul
popf
out
scas
lds
lcall
mov
add
dec
out
mov
dec
sbb
mov
adc
dec
cmp
lods
in
stos
subb
negl
lahf
or
mov
jge
push
aam
ss
hlt
inc
out
pusha
arpl
in
loope
sbbb
adcl
in
push
enter
fnstenv
lea
add
lea
fbld
arpl
int
sub
loopne
and
inc
adc
cmp
daa
repnz
and
lea
or
cmpl
outsl
pop
int3
push
push
imul
roll
mov
push
lods
fdivrp
jne
adc
stc
into
ja
and
xchg
xor
and
xor
xchg
aas
jge
lret
pop
xchg
daa
sbb
scas
insl
inc
and
mov
call
mov
xchg
adcb
je
dec
cmpsl
add
gs
rclb
nop
mov
and
xchg
adc
xor
inc
negl
push
add
push
dec
fs
and
xor
outsl
push
push
adc
jmp
jmp
loope
mov
or
jo
mov
add
mov
mov
fnstenv
mov
jp
push
pop
aaa
pushf
jmp
les
adc
ret
mov
push
inc
lret
xor
push
stos
mov
and
or
cmpsl
jns
and
xchg
adc
jns
outsb
xchg
popa
sti
in
push
push
out
test
stc
mov
fs
mov
repz
jb
push
inc
add
dec
ret
fwait
or
dec
mov
outsl
fs
enter
sub
push
ja
sbb
mov
mov
int
push
sti
outsl
in
xchg
dec
je
xor
fimuls
loope
test
test
ljmp
sub
xchg
imul
or
iret
jl
sub
icebp
sbb
popa
and
push
notb
sub
jmp
cmp
bswap
inc
inc
pop
ret
fldcw
and
push
not
and
and
lods
cmpsl
or
jae
cld
lret
xchg
div
sahf
mov
mov
insb
jnp
fcomp
adc
adc
jge
cli
test
lahf
fdivp
push
mov
lcall
or
add
pop
push
addb
lret
lods
adc
lds
jle
imul
adc
cmp
jg
add
int3
inc
aad
cmp
ds
inc
fwait
or
scas
hlt
das
movsl
rorl
lock
cli
cld
mov
jbe
push
pop
subl
pop
adc
arpl
into
dec
push
cs
cmp
popf
cmp
mov
lods
push
insb
insl
mov
jnp
sbb
scas
mov
je
rorb
cmp
cs
pop
lea
dec
aaa
fildll
std
fdivl
push
mov
inc
pop
push
mov
inc
jne
cmp
sub
xchg
inc
sbb
popf
je
xor
movsl
nop
push
js
cmp
sub
insb
movsl
xor
ss
test
mov
int
sbb
push
loop
aas
out
inc
push
mov
sbb
jb
add
shll
gs
enter
dec
out
mov
or
movsl
sahf
mov
pop
lcall
jecxz
inc
push
sub
shlb
mov
adc
mov
jnp
fcomps
mov
lret
xchg
mov
sub
outsb
xchg
jle
push
xor
add
mov
sbb
scas
inc
outsl
fstpl
shlb
imul
mov
adcb
les
sub
hlt
inc
loope
ficompl
mov
test
jae
push
push
idiv
jb
stos
lret
test
out
or
ljmp
jge
sbb
sub
or
xlat
in
mov
lods
test
in
xor
pushf
sbb
cmp
inc
gs
mov
push
cmp
pmaddwd
out
and
xor
incl
inc
repnz
leave
mov
cli
cmp
test
pop
cmp
inc
xor
dec
loopne
push
sub
cmp
jbe
sub
dec
mov
cmp
mov
inc
mov
pop
lock
lret
jns
xor
popf
jmp
int3
mov
add
and
popa
add
pop
js
push
cmp
push
mov
mov
mov
cmp
dec
mov
mov
mov
jbe
inc
fdivs
push
les
jecxz
test
std
mov
mov
dec
dec
iret
cmc
jb
in
xor
jle
mov
dec
ds
sub
sub
add
mov
loope
jl
ret
lahf
mov
mov
ljmpw
dec
clc
lret
or
add
repnz
pop
shlb
dec
and
ljmp
adc
mov
dec
repz
lods
xchg
dec
cld
popf
je
push
shrl
les
sarb
push
sub
mov
in
or
insb
stc
mov
sbb
cli
fidivrs
push
insb
movsb
and
imul
clc
cmc
into
imul
or
lcall
out
ja
in
mov
xlat
push
loope
add
ss
or
xchg
adc
adc
into
cli
ret
ss
mov
and
lret
cli
pop
pop
test
lret
andb
repz
inc
pusha
cmpsl
xor
add
add
sbb
fs
loop
jo
inc
or
arpl
mov
fs
stos
in
popa
cmp
sbb
or
pop
and
cmp
push
int3
popa
es
loopne
jns
jb
jo
add
xor
std
lea
add
imul
xchg
pop
stos
pusha
mov
lret
cli
and
in
aas
js
das
lea
jbe
inc
cld
fs
add
lret
push
xchg
into
and
jl
jnp
jbe
enter
pop
repnz
dec
jmp
adc
cmp
idivl
test
xchg
pop
aad
lock
andb
dec
mov
mov
lock
ds
rcrl
add
add
mov
sub
sbb
testb
iret
jl
daa
pushf
xchg
scas
jae
pop
mov
sbb
jb
shrb
pop
cmp
negl
mov
cmp
xchg
lock
or
or
call
icebp
into
pop
adc
mov
pushf
test
dec
mov
aad
mov
add
lret
in
pop
xor
loope
jne
mov
aas
cmp
aas
xchg
iret
mov
scas
xor
inc
scas
rorl
repnz
sub
mov
loopne
jae
popa
pop
adc
cmp
mov
xorl
lret
add
pop
mov
fisubrl
pop
xchg
addr16
jo
push
sbb
shll
testl
cmc
sbb
cmp
pusha
mov
fs
fidivl
dec
pushf
jo
outsb
aas
mov
inc
cmp
pop
stos
pusha
enter
dec
add
fsubrs
mov
add
pop
push
testl
inc
cmp
jecxz
shll
xchg
dec
lcall
inc
dec
insb
inc
mov
sarl
fiaddl
dec
sub
or
jl
test
pop
cmp
sub
ficoml
and
fchs
es
jle
mov
out
mov
fstpt
pushf
es
in
pcmpgtd
inc
fildll
mov
imul
in
inc
sahf
or
out
push
sbb
out
enter
sub
loopne
ja
and
dec
icebp
rcll
test
mov
push
jle
loopne
cmpsl
movsl
in
pop
call
push
std
mov
fcmovu
int3
or
pusha
or
rcl
inc
xlat
sbb
std
and
jo
pop
hlt
xchg
test
and
movsb
mov
xor
orb
rep
adc
divb
jns
pop
mov
fsubrl
shr
cmp
xor
ret
jmp
test
mov
or
scas
fldt
aad
cwtl
xchg
out
jle
or
inc
mov
or
ffreep
fnstenv
daa
aaa
pushf
inc
out
dec
mov
out
sub
insl
pop
sbb
sub
daa
inc
ret
xchg
sbb
cmp
bound
mov
pop
sub
push
ret
dec
stos
int
addr16
xchg
cs
add
cmc
movsl
mov
add
cmp
outsl
into
add
push
rcrl
add
push
into
xor
daa
jl
sub
paddw
aas
or
ret
fcompl
fildll
cmpsb
jnp
dec
or
lock
repz
arpl
pusha
xchg
dec
and
gs
pop
movsb
or
mov
int
rcr
iret
ss
pop
or
stc
jno
or
loope
sbb
icebp
test
or
mov
into
fpatan
out
es
into
ud1
fldl
imul
jne
mov
push
cmp
arpl
jae
ret
push
cwtl
mov
pusha
jg
imul
cmpsb
xchg
enter
lea
push
ja
ds
lret
add
lcall
xor
shl
xlat
xor
call
sti
xor
lahf
in
sub
in
cs
pop
mov
sub
icebp
je
fisubrs
pop
dec
add
push
jg
lods
aad
push
xchg
or
inc
lahf
xlat
mov
les
lock
pop
mov
hlt
pushl
jns
aad
cmc
push
orb
and
lahf
push
sub
adc
push
cld
mov
mov
cld
jne
enter
ret
sbb
cltd
loope
adc
sbb
lcall
rorb
adc
lea
mov
insb
int
add
push
add
iret
xchg
fwait
outsl
movzwl
shr
mov
inc
mull
cs
mov
gs
dec
inc
push
mov
jae
popf
in
mov
ss
push
pusha
cld
mov
stc
scas
popa
rorl
push
pop
cmp
jo
addr16
or
std
push
xor
insl
and
adc
ljmp
test
mov
repz
dec
inc
mov
dec
movsl
ret
xor
in
aad
sub
jo
adc
sti
dec
aas
mov
xor
jle
sbb
popf
mov
xchg
les
jb
xor
mov
jne
dec
fimuls
aaa
push
sahf
cmc
leave
mov
cmpsl
xchg
mov
cmp
mov
dec
xlat
sub
pop
adc
and
xchg
xor
lret
push
inc
imul
mov
pop
push
daa
scas
mov
sub
mov
xor
js
insb
mov
aas
jp
and
cmp
pushf
add
mov
dec
push
xchg
push
dec
xor
dec
int
jecxz
xchg
call
clc
rorb
mov
or
mov
not
lds
mov
or
push
mov
test
sbb
js
out
sbb
jno
test
adc
out
mov
stos
push
lock
push
add
xchg
das
rol
test
cmp
add
jns
in
mov
dec
mov
mov
mov
fldcw
xchg
sbb
pop
repnz
ret
mov
in
sub
sbb
js
xchg
push
insl
ret
daa
icebp
xchg
scas
push
pusha
pusha
fsts
xchg
cli
gs
xor
lock
lahf
xchg
inc
pop
mov
jge
test
jg
data16
inc
bound
pop
fnsave
rcrb
push
stc
aam
pop
lods
js
push
mov
mov
imul
push
and
mov
gs
sub
lods
je
add
imul
jo
jl
push
in
sub
loopne
pop
iret
sti
fiaddl
mov
sbb
push
movsl
aaa
outsl
in
fnstsw
push
pop
push
out
testb
rol
xor
into
sbb
aas
pop
xchg
aad
iret
cmp
pop
out
dec
lret
jle
insl
or
dec
sbb
or
cmpsb
xchg
pop
jl
sub
sbb
nop
cli
daa
rcll
pop
jg
jo
mov
out
sbbl
cmpsb
sub
fldcw
or
xor
jns
push
leave
sub
sub
dec
cwtl
out
jno
mov
pop
lret
fsubs
mov
mov
mov
cli
or
imul
dec
xor
pop
xchg
add
nop
jno
lret
lods
test
add
xorl
dec
jnp
sub
ja
gs
cs
lods
mov
punpcklbw
fisubrs
push
adc
mov
mov
inc
pop
pop
xor
jbe
bound
adc
repnz
cmp
jnp
pop
dec
es
mov
sub
sub
add
cmp
adc
scas
int3
out
ret
add
cmp
cli
mov
xor
jge
sbb
js
cs
cmp
fldl
mov
cmp
aam
and
sbb
jb
sub
add
inc
inc
lsl
mov
sub
push
pop
scas
mov
rcr
out
xchg
leave
xchg
leave
es
testl
fdivrs
rcrb
push
ss
add
andps
sbb
mov
inc
sub
div
jo
cmp
addb
cmpsb
std
sub
outsb
push
xchg
dec
adc
cltd
pop
push
lods
adc
cwtl
pop
cmpsl
cmpsb
inc
dec
mov
outsl
sub
lcall
lret
iret
fs
negb
sub
push
leave
xchg
adc
xchg
and
gs
push
mull
mov
dec
pop
mov
inc
mov
pop
xor
mov
xor
and
sbb
fldcw
cltd
in
xchg
and
mov
subb
leave
lods
ret
pop
int
repnz
mov
into
fsubrs
stc
cmpl
push
jmp
mov
cmp
mov
rcrl
in
xchg
jbe
data16
mov
cmpsl
ret
inc
jnp
or
aaa
sbb
repnz
jl
test
fisttpl
mov
fiadds
repz
inc
cli
jg
add
or
jo
add
pushf
pop
mov
pusha
pop
mov
ss
fildll
jg
inc
adc
jae
pop
sbb
sub
xchg
and
add
jnp
pusha
icebp
jo
fs
pop
mov
xchg
loopne
sbb
iret
fimuls
les
std
mov
test
sub
jp
lret
mov
imul
movsl
jecxz
push
sbb
scas
pop
imul
outsl
mov
in
stos
xchg
pop
out
test
data16
cltd
ss
outsl
jo
push
in
popf
jbe
leave
sub
mov
mov
rolb
mov
lods
xchg
or
rol
fstps
loope
or
xlat
leave
xlat
xchg
lea
inc
cmpsl
insb
mov
mov
pop
cmc
jge
icebp
jle
mov
rcll
sub
and
xchg
iret
mov
xchg
aas
ja
das
push
ljmp
cmp
mov
pop
mov
mov
dec
nop
dec
sub
jns
pop
ss
lock
mov
inc
push
je
pop
sub
inc
cmp
pushf
pop
subl
xchg
pop
inc
aaa
mov
push
jbe
sub
nop
cmc
pop
mov
xor
mov
popa
lret
or
jmp
cmp
jnp
sbbl
scas
icebp
or
xlat
cmpsl
gs
adc
ja
sub
mov
xor
mov
xor
call
jmp
in
in
mov
cmp
ret
dec
sub
cmp
mov
rcr
lret
pop
jl
and
and
divb
fstp
mov
jbe
aas
xor
xchg
fcmovnbe
inc
pop
mov
cli
ficompl
xchg
dec
bound
xor
and
daa
shl
add
mov
push
sbb
iret
inc
int3
iret
test
imul
dec
push
mov
xor
mov
dec
sub
test
hlt
and
push
sahf
in
nop
fidivs
pop
push
repz
ljmp
dec
push
jle
push
loopne
push
in
loop
shlb
aaa
lods
lock
ret
and
jle
push
sahf
lock
add
adc
mov
or
outsb
sub
pop
push
sarb
dec
dec
push
pop
sub
xchg
dec
mov
pop
push
movsb
xor
sbb
repz
pop
mov
pop
in
fstl
in
mov
fsubrp
incl
mov
stos
test
pop
mov
or
push
imul
in
sti
loope
in
jne
in
sti
jmp
mov
cmp
jecxz
or
out
mov
lret
js
sbb
and
sub
pop
rolb
jge
popf
pop
inc
pop
sbb
insb
sbb
or
lods
and
repz
loope
pop
insb
aam
inc
push
in
rcl
fnstenv
in
daa
jge
mov
fwait
xchg
in
add
lcall
dec
pop
mov
mov
xlat
out
pop
cmpb
mov
inc
jg
push
push
and
lock
mov
cmp
xor
into
int3
mov
gs
mov
es
push
stos
loope
das
push
dec
xor
mov
out
orb
jno
aas
jns
icebp
cmpsl
bound
mov
push
jmp
pop
mov
sbb
pushf
hlt
repz
mov
jmp
push
mov
inc
ret
lahf
dec
popa
rorb
js
mov
sub
cmp
sti
inc
sahf
inc
ljmp
es
fwait
mov
arpl
xor
loope
xor
js
daa
or
imul
dec
fwait
icebp
rol
jle
mov
icebp
xor
mov
push
jne
add
add
sub
jae
nop
jne
fcmovu
mov
mov
or
or
aaa
or
subl
or
mov
mov
nop/reserved
xchg
pop
sub
jg
out
mov
ret
cld
add
mov
mov
adc
xor
cmp
cmc
lea
xchg
pop
int3
xchg
xchg
in
and
or
ss
dec
out
add
daa
out
adc
movsl
xchg
lcall
mov
lea
and
rcll
js
dec
out
push
out
ss
outsl
gs
xor
aam
xchg
push
out
xchg
add
sahf
arpl
popf
jmp
jp
outsb
add
sub
xchg
cmp
mov
js
lea
add
mov
push
stc
xor
movsl
and
cmp
pop
pop
sub
add
bound
pop
lds
mov
mov
mov
adc
arpl
jo
xchg
jae
sub
hlt
inc
out
pushw
xor
outsb
jp
jg
shlb
mov
push
stos
test
mov
push
adc
cmp
leave
popa
xchg
addb
lcall
inc
movsl
xchg
dec
sub
lahf
mov
into
push
mov
fnstenv
iret
outsl
sub
or
pushf
cmp
lds
lret
xor
and
mov
test
fs
gs
add
cli
inc
dec
or
sbb
es
icebp
lea
in
and
adcb
sbb
xor
xchg
xor
sub
push
cmpsl
push
mov
fsts
push
bound
mov
xchg
loopne
test
push
dec
fucomp
fisubs
dec
inc
pop
inc
sbb
cmp
dec
les
mov
sbb
popa
jae
push
xchg
sub
mov
cvttps2pi
mov
mov
aas
ud0
cmpl
and
aam
and
mov
mov
out
xor
int
mov
lods
aas
aas
test
sub
and
ss
test
mov
adc
rclb
xlat
ret
loope
mov
mov
or
shl
popl
ficoms
nop
sbb
fsts
dec
in
mov
adc
mov
sub
andl
iret
adc
or
xor
xchg
jle
pop
loop
lret
xchg
stos
aaa
mov
imulb
aad
mov
jns
inc
and
cmp
adcl
mov
rorb
push
mov
dec
ficomps
adc
mov
xchg
aas
sti
fmull
sti
cmp
daa
add
cltd
dec
testb
movsl
jl
lea
outsb
xor
cmp
add
and
nop
repnz
aaa
rcl
addr16
dec
lods
mov
and
dec
pusha
inc
jle
pop
outsl
cmp
mov
add
hlt
je
xchg
add
sahf
pop
idivb
cmp
dec
sub
iret
xchg
lcall
and
xor
mov
jo
push
data16
push
xor
cmp
loope
push
xchg
ljmp
mov
imul
test
push
andb
hlt
sub
dec
mov
sbb
cmpsl
out
and
push
std
push
fildll
aam
pop
jle
int
xchg
movzwl
mov
repz
pusha
movsb
bound
insb
jns
jecxz
xor
out
int
daa
mov
push
lret
je
outsl
clc
out
sub
pop
lods
rorb
xorb
mov
mov
inc
mov
and
gs
pushf
sbb
push
add
inc
fs
xchg
cmp
into
push
cwtl
mov
push
fwait
sub
inc
loop
jmp
xchg
sbb
jl
js
adc
dec
mov
shll
push
xlat
or
or
ljmp
cmp
fwait
shrb
popa
arpl
mov
aad
mov
testb
and
adcl
clc
rorb
les
xchg
or
push
adc
ficoms
fstps
jmp
std
mov
sahf
and
std
or
in
mov
jns
xlat
test
pop
test
mov
lock
sbb
sub
int
cmpsb
in
mov
push
pop
jb
sub
sub
aas
jecxz
bts
mov
jo
je
and
dec
into
into
or
sti
mov
test
push
lods
adc
stos
xchg
jne
out
hlt
mov
nop
les
cmp
inc
sbb
scas
inc
jae
xor
popa
popa
popf
std
xor
mov
out
lcall
jp
jno
sbb
or
test
push
xchg
sbb
mov
fnstsw
push
add
xchg
fldt
mov
pop
shll
pop
ljmp
inc
sbb
or
pop
loopne
cmp
and
mov
adcl
loopne
rorb
decl
pop
xchg
adc
shl
xor
mov
test
out
imul
fcomp
adc
inc
push
cmp
enter
and
packssdw
ss
or
gs
fdivrl
push
and
cltd
in
add
shll
push
or
insl
push
fsubs
stos
add
mov
fistpl
lods
mov
pop
movb
dec
punpcklbw
sub
fwait
mov
ret
mov
add
fucomi
jmp
adc
inc
arpl
mov
pop
insl
arpl
insl
int3
push
inc
or
sbb
dec
xchg
roll
ja
mov
mov
push
scas
sarl
fisttpll
xchg
test
test
sub
sbb
push
jmp
dec
xchg
cwtl
popa
addr16
xchg
dec
cmpsl
lcall
sbb
insl
jbe
decl
icebp
dec
jge
out
mov
cmp
pop
jns
mov
movsb
or
outsl
push
test
outsb
dec
aaa
hlt
repz
cmc
das
push
lds
push
mov
gs
je
push
lret
enter
aas
jne
das
insl
mov
or
stc
mov
mov
xlat
in
out
sub
or
add
and
inc
ficomps
cmp
mov
mov
ss
jbe
inc
xor
cmpsl
subb
shlb
popf
scas
sbb
addb
dec
icebp
push
lods
mov
jge
aaa
xchg
cwtl
je
fisubl
pop
xlat
out
outsb
in
out
push
fmulp
cmp
jae
mov
jecxz
sub
mov
rol
enter
xor
sbb
loop
popl
std
shll
pusha
sbb
lcall
pop
inc
popf
imull
xchg
jl
arpl
or
or
mov
xlat
imul
mov
mov
push
insl
dec
pusha
inc
loope
add
add
dec
stos
lea
or
and
jmp
inc
jne
adc
fcoms
or
int3
repnz
xor
jne
ror
add
push
inc
pop
inc
ret
add
test
dec
rcr
cwtl
mov
sbb
sbb
daa
xor
push
test
js
loop
cmpsb
outsb
popf
imul
mov
fnsave
imul
das
dec
pusha
and
add
mov
shl
je
data16
pop
jle
jns
mov
mov
xchg
aas
xor
or
push
xor
in
mov
jne
in
std
popa
xchg
into
jns
into
testl
cmp
mov
ret
test
xor
pop
lret
arpl
in
inc
int3
and
pushf
mov
sahf
leave
inc
jp
jae
mov
fldenv
arpl
lock
stc
fdivl
insl
inc
in
dec
mov
cld
cmp
push
sahf
dec
push
and
xor
ficompl
dec
leave
mov
and
push
and
xchg
out
cmp
or
outsl
push
cli
jg
ret
cwtl
leave
pop
pop
mov
xor
cmp
fs
dec
cmc
jmp
mov
les
dec
mov
adcl
outsb
leave
xchg
cmp
jbe
cwtl
and
stos
dec
jb
sub
jnp
adc
cmc
fstps
imul
jnp
fdivl
mov
xor
ret
sar
xlat
in
cmp
insl
fnstcw
sub
push
cs
shrl
add
ficompl
out
dec
dec
out
lcall
test
jo
adc
inc
shlb
cmp
scas
imul
sar
cwtl
push
clc
mov
xchg
add
lods
sub
xor
mov
mov
or
or
ja
mov
sub
xor
stos
cld
icebp
cli
or
test
shr
mov
dec
dec
or
scas
in
dec
push
stos
cmp
rcll
aas
cmc
je
test
mov
aaa
jecxz
lea
ljmp
fcmovu
aad
flds
inc
rcrb
gs
hlt
dec
jbe
mov
int
inc
cmpsb
sub
push
sti
dec
fnstsw
push
fcmovu
jge
jnp
inc
dec
pop
mov
add
dec
inc
aas
cmp
lods
push
sbb
lcall
inc
leave
sbb
xor
add
fistpl
push
outsb
inc
ds
es
xor
sbb
out
adc
fwait
pop
push
icebp
mov
sub
xchg
xor
in
dec
mov
lret
mov
inc
pop
and
mov
inc
es
shlb
cmpsl
test
inc
dec
push
sbb
mov
hlt
xchg
sbb
adc
mov
notl
jle
adc
or
arpl
and
clc
icebp
mov
jecxz
fbstp
mov
jg
mov
xor
sti
push
fcoms
pop
xor
push
test
xchg
bound
sti
lret
sub
sub
subb
sbb
adc
adc
imul
lods
in
sub
inc
pop
stc
movsb
pop
shlb
dec
orb
ljmp
mov
mov
int3
dec
push
sub
outsb
pushf
sub
cs
jne
outsl
mov
rcrl
ds
cmpsl
push
movsl
mov
inc
fisubs
je
push
pop
inc
mov
xor
adc
mov
xchg
out
loope
push
daa
mov
stc
jg
popf
dec
sub
mov
jbe
ja
mov
pop
aaa
xchg
pop
mov
push
leave
jnp
mov
mov
lcall
xchg
arpl
leave
xchg
pushl
cmp
xchg
daa
and
cld
rorl
mov
pop
mov
push
cmpsb
rorb
adc
aam
out
mov
inc
repnz
insl
jb
add
add
pop
cmc
sub
and
or
pop
or
fisubrl
cmpl
pop
mul
addr16
test
popa
mov
test
and
jns
ljmp
push
lret
cmp
fs
pop
popa
sbb
popl
mov
mov
mov
inc
ret
les
stc
mov
bound
add
cwtl
lods
add
lds
push
mov
sub
pop
cmp
pop
imul
dec
iret
xor
and
sahf
and
fdivrs
or
cltd
dec
and
icebp
push
scas
and
jb
sbb
xchg
lcall
sti
into
daa
lods
xchg
fildl
sub
fimull
lods
and
mov
xchg
nop
clc
int
insl
cltd
rclb
sub
pop
push
cmc
push
inc
mov
sbb
and
jo
mov
test
xchg
gs
jne
dec
sub
mov
mov
mov
jb
and
repnz
adc
imul
fidivrs
jbe
sahf
xchg
push
mov
fistpl
xor
and
popf
addr16
mov
lea
mov
xchg
stc
dec
or
add
cmp
cmp
adc
and
jae
out
dec
sahf
xchg
jns
inc
cmp
mov
push
repnz
stc
fbstp
jns
mov
xor
dec
addr16
insl
in
push
cmp
js
fdivs
push
push
dec
xchg
push
sti
std
loop
push
clc
jns
insl
pop
cmp
pushf
mov
fwait
dec
xchg
popa
stc
inc
push
js
sub
adc
ja
scas
xchg
pushf
sahf
sub
adc
aaa
push
cs
jg
xchg
fldt
inc
es
adc
cmp
lret
in
adc
popf
mov
or
pop
inc
scas
sbb
sbbl
stos
mov
xchg
xlat
bound
into
aad
mov
mov
jl
test
sti
test
imul
pop
ret
and
push
inc
sub
cli
mov
fistpl
adc
inc
outsl
ss
addr16
nop
push
xor
xchg
or
mov
pop
jne
arpl
and
mov
mov
add
sub
movsb
inc
sub
nop
aam
pop
ficompl
add
sub
loop
add
push
and
sub
adc
lret
clc
jno
into
insl
ljmp
movsl
cwtl
fs
mov
push
push
inc
out
fwait
or
hlt
dec
sub
push
shrl
sbb
out
add
out
cld
fimuls
aas
adcb
sarb
pop
xor
jmp
sub
inc
adc
mov
cli
mov
js
insb
jo
aam
push
lock
shll
js
mov
inc
test
call
out
sub
push
sbb
repnz
jns
xchg
arpl
sub
imul
popf
dec
and
inc
jbe
lods
mov
into
std
cmpsb
daa
xor
arpl
std
mov
xchg
lea
fxch
aas
inc
fcmovbe
cmp
push
dec
out
sub
push
fistps
pop
push
mov
sub
jle
andl
loopne
andb
mov
cmp
jecxz
dec
mov
ret
and
aam
dec
pandn
xchg
xor
xchg
xor
pop
dec
call
mov
repz
out
hlt
cmp
data16
mov
jbe
jp
sub
dec
adc
mov
in
aam
pushf
xor
movsl
xor
jae
movsb
push
and
xchg
repz
int3
adc
pop
das
shrl
inc
push
call
loop
mov
and
push
dec
push
jge
pop
movsl
mov
out
and
adcb
dec
daa
xchg
dec
rcll
pop
roll
or
daa
xor
mov
dec
clc
push
push
cwtl
sub
push
dec
jb
leave
jecxz
jno
mov
mov
pushf
and
movsl
rcl
mov
rorb
add
inc
pop
cmp
jmp
fildll
cmp
inc
mov
mov
adc
add
or
test
repnz
mov
rclb
mov
xchg
inc
push
jge
dec
mov
idivl
inc
dec
push
mov
pop
xor
pop
mov
and
aaa
add
jl
clc
ja
outsl
cmpsb
xchg
mov
and
push
pop
pop
push
push
inc
xchg
push
mov
sbb
addr16
fisttpl
negb
mov
sbb
aam
jnp
pop
jmp
lock
cli
mov
jbe
inc
mov
push
lret
jmp
push
xchg
mov
jg
cmc
test
jb
jecxz
test
xor
dec
sub
pop
push
mov
rcll
repnz
rol
imul
lock
dec
jne
enter
xchg
push
sarl
mulb
inc
xlat
pop
lock
fwait
mov
aaa
mov
stos
cmp
in
adc
or
cmpsb
sbb
iret
mov
mov
jl
lahf
sub
mov
xor
es
sbb
dec
hlt
in
push
movb
movsb
inc
shlb
adc
inc
movsb
mov
push
ret
mov
dec
adc
hlt
jb
aaa
out
scas
imul
pusha
add
ja
and
aas
movsb
xor
push
mov
addr16
lret
push
push
cmp
xchg
mov
shl
sbb
cmc
pop
xor
xor
xor
mov
jg
std
cli
stos
push
in
clc
push
mov
lock
shl
or
pop
in
andl
xchg
leave
inc
into
pop
cmp
dec
mov
icebp
iret
cmp
mov
xor
jae
mov
xchg
shr
pop
mov
pop
insl
jns
pop
or
fs
inc
cmp
call
int
dec
bound
xorb
jecxz
aaa
sbb
popa
std
mov
aad
sub
push
hlt
int3
or
lahf
das
mov
mov
xchg
loope
test
addr16
lret
ret
mov
mov
push
testl
push
push
push
imull
add
jb
jae
out
test
mov
lock
add
enter
mov
pusha
lods
and
stos
pop
dec
repnz
sub
mov
or
cmpsl
jg
inc
lods
or
xchg
xchg
jae
xor
mov
add
sbb
mov
subl
cmp
mov
and
test
ljmp
popa
mov
stc
adc
push
adc
cmp
fwait
lock
dec
pop
dec
xorl
shl
jbe
orl
dec
call
test
outsb
dec
cmpsl
mov
ret
mov
jne
cmp
jecxz
pop
jp
mov
fcoms
movl
xchg
movsb
jg
push
outsb
mov
fs
sub
push
sbb
push
cltd
jns
aas
shlb
mov
ss
loope
inc
fcos
popa
inc
sub
jbe
xor
out
or
jnp
pop
pop
popa
test
sbb
sbb
pusha
lods
scas
inc
xchg
shll
ljmp
movsl
mov
loop
xchg
dec
mov
test
dec
mov
ljmp
add
fdivl
push
insb
sbb
fcoms
mov
shr
jb
sbbl
sub
call
mov
vxorps
push
scas
in
orl
mov
mov
fsubrs
lahf
xor
mov
jge
jb
add
mov
inc
sub
push
addr16
iret
mov
fnsave
or
ljmp
jno
and
jns
lret
xchg
pop
and
jge
scas
cmp
pop
jg
data16
lahf
dec
mov
dec
sbb
mov
and
fldl
out
add
adc
pop
pop
dec
sbb
test
fiadds
aad
mov
lret
jnp
or
mov
mov
cmc
ds
ret
xor
stc
jge
mov
aaa
dec
stos
mov
xlat
rcrl
dec
and
mov
mov
pop
xchg
inc
jmp
add
cltd
cmc
mov
stos
incl
xchg
scas
movsl
mov
jbe
fnstcw
cmp
xchg
sbb
jae
rcrb
dec
out
push
mov
sbb
mov
test
inc
mov
and
sti
and
in
mov
out
mov
fsubs
repnz
shr
popa
js
addr16
js
bound
aas
add
pop
push
shll
adc
das
add
xor
stos
xchg
insb
fxch
out
cmpl
stos
push
push
mov
or
xorl
cltd
movsl
imul
mov
jns
mov
mov
sub
inc
xchg
adc
xchg
jae
pop
popf
or
imul
inc
arpl
dec
jmp
lock
mov
sbb
lds
shrl
out
fcoml
popf
adc
cmpsl
mov
xor
fwait
outsb
test
out
mov
out
xor
xchg
aad
outsl
ficoml
xor
shrl
mov
outsl
mov
sub
jne
mov
in
mov
jbe
and
fisubrs
mov
lahf
test
push
mov
fwait
xchg
movsb
or
pop
arpl
mov
dec
xchg
decb
sub
sbb
jae
xor
call
or
inc
into
rcrb
mov
je
xchg
popf
enter
cmp
fdivrl
lcall
cwtl
inc
jns
sbb
add
icebp
in
xchg
mov
or
fistl
sub
jae
add
mov
outsb
cmp
cmp
dec
sbb
repnz
aaa
dec
xor
sbb
rcll
dec
and
inc
js
add
jecxz
mov
mov
inc
sarb
das
js
jno
sub
nop
nop
mov
cli
ljmp
pop
add
sub
loope
loope
imul
push
or
repnz
push
adcb
lahf
push
jae
and
mov
push
add
dec
jne
cmpsb
scas
push
push
pop
and
fdivs
cmp
inc
ficoms
call
xor
imul
xor
es
fstpl
mov
inc
cmp
fimull
adc
pop
mov
mov
aas
in
pop
dec
loop
movsb
pop
add
dec
push
testl
popf
mov
cmp
out
mov
lret
cltd
fsubs
sahf
ja
pop
push
xor
push
jbe
jae
mov
mov
inc
dec
and
mov
mov
jae
mov
jmp
leave
dec
jne
xchg
cs
arpl
mov
in
mov
cmp
mov
test
popa
gs
imul
movsb
or
fdivr
sbb
in
mov
and
into
js
mov
test
loop
data16
sub
addb
movsb
sub
outsb
out
push
add
inc
pop
outsb
mov
add
scas
addb
xchg
mov
je
dec
pop
sbb
sub
out
pusha
popa
lcall
jae
dec
push
orl
aaa
cmc
stos
sub
sub
ja
lds
lea
sbb
pusha
jle
mov
fidivl
std
push
push
inc
and
js
loope
sbb
pop
and
fiadds
xchg
aam
mov
cmp
jne
push
loop
cmp
push
les
data16
fdivl
ljmp
pop
xor
xchg
xlat
fimuls
addr16
cmc
adc
push
fs
repnz
jb
push
addr16
imul
add
rorl
mov
cltd
fldcw
outsl
imull
push
adc
or
loope
fidivs
or
sbb
cld
adc
stos
jle
mov
orb
cmp
scas
lods
jbe
call
scas
je
bound
inc
icebp
iret
jnp
jle
xchg
push
adc
mov
in
push
or
mov
lods
test
addr16
rclb
aad
pop
push
fwait
cmpl
clc
or
mov
ljmp
nop
stc
cmp
subl
orb
and
jg
pop
cmp
and
pop
arpl
call
dec
sub
mov
dec
cmp
lret
jl
xchg
aam
xchg
or
rcr
xchg
xchg
xor
dec
sub
scas
push
test
test
sub
repnz
cmp
ss
jle
inc
xchg
xor
mov
loope
ljmp
call
ret
inc
push
or
scas
push
mov
pop
add
aas
sbb
sub
pop
cmp
mov
call
inc
and
lea
cwtl
sub
in
das
xlat
mov
jg
inc
test
enter
mov
lock
mov
fcomps
xor
stc
mov
add
fs
mov
jge
mov
lds
leave
std
mov
imul
push
stos
movsb
inc
loopne
pop
fs
dec
scas
jno
icebp
jno
jb
sbb
mov
adc
out
jo
cmpsb
push
sbbb
popf
cli
lcall
fcomps
sub
lods
push
stos
inc
mov
outsb
aaa
pop
or
es
and
movsl
add
leave
arpl
daa
les
and
xchg
loopne
int3
xlat
test
lods
xchg
or
adc
aas
repz
out
iret
orl
mov
sahf
gs
mov
enter
xor
sub
dec
jecxz
pop
loop
xor
movsb
jo
pop
out
mov
jl
adc
dec
mov
adc
mov
or
lds
mov
scas
jno
fstp
test
push
mov
xor
mov
fmuls
push
pop
aas
out
loopne
or
es
mov
rclb
ds
shrb
div
pop
jbe
cmp
adc
sahf
pop
sub
and
leave
pop
xor
int
and
jns
test
add
repnz
aad
push
scas
mov
cwtl
mov
and
xchg
push
mov
jg
jnp
xchg
lea
mov
sub
ljmp
repnz
pop
js
mov
cld
jo
pop
jbe
test
add
aas
mov
push
lods
jnp
xor
popa
inc
push
cmp
mov
adc
cmp
pop
push
push
jle
push
jnp
mov
clc
inc
ss
mov
pop
adc
lahf
addl
inc
call
xchg
lcall
add
jle
data16
ds
mov
idiv
jl
add
mov
jno
sbbl
sbb
pop
pop
inc
pop
dec
xchg
push
push
push
fcmovnu
ss
sub
jp
test
in
insl
ja
mov
dec
test
xchg
loope
in
cmp
cmp
push
insl
cmp
adc
lcall
push
js
add
or
iret
push
xchg
sbb
push
mov
mov
testb
push
add
jl
incb
add
sub
add
sbb
or
leave
fidivrs
call
lret
sub
arpl
rcll
orb
mov
mov
mull
lret
mov
sbb
mov
je
cs
sbb
cli
cmp
push
xlat
dec
mov
nop
fs
stos
iret
adc
jge
ret
sahf
dec
sti
sub
test
mov
jmp
inc
push
ds
jno
adc
pop
pop
pusha
dec
jne
gs
pop
enter
pop
pushw
push
dec
test
or
rorb
aad
jns
cltd
adc
imul
sub
sub
pop
jo
mov
adcb
xor
pop
or
arpl
push
pop
in
mov
mov
or
aam
mov
inc
iret
leave
mov
pop
icebp
adc
test
lcall
pop
jecxz
lds
fucomi
pop
cmp
pop
mov
xchg
filds
insb
dec
stos
aad
add
popf
push
cmp
mov
cmp
and
mov
inc
into
loop
js
lahf
xchg
jge
push
dec
pusha
cmp
outsl
lret
sbb
sub
xchg
lret
fdivrp
sub
mov
popa
das
ret
push
movsb
push
aam
out
cmc
adc
out
add
and
ret
daa
outsl
idivl
mov
mul
mov
and
lods
xchg
xchg
jl
mov
insl
jmp
mov
jle
pop
nop
insl
loope
xchg
int
fisttpl
fadds
push
lods
scas
push
stc
lret
dec
mov
pop
inc
dec
mov
cmpl
mov
gs
cmp
cli
cmp
cmp
mull
rcl
in
push
pop
arpl
mov
xchg
add
or
push
std
scas
adc
fsubs
call
add
push
adc
jae
xor
stos
and
out
stos
movsl
or
in
pop
push
cli
push
dec
mov
mov
aaa
adc
fnstenv
movsb
setne
pop
in
xor
sbb
add
add
bound
pop
mov
fdiv
jmp
mov
jns
aas
enter
pop
jle
xchg
inc
mov
jp
call
dec
leave
sahf
fsubl
lods
xor
add
mov
jno
mov
sub
lds
pop
adc
lods
pop
aas
fadd
hlt
fmuls
outsl
push
xchg
mov
sbb
add
inc
mov
test
cwtl
int3
scas
sbb
mov
and
aaa
adc
adc
imul
js
in
mov
lds
int
jb
test
rclb
fwait
les
std
add
into
outsb
scas
push
jo
dec
add
adc
inc
sbb
in
aas
cmpsl
imul
sar
cltd
test
fnsave
lock
cmpb
fwait
adc
mov
or
xchg
lea
cld
data16
lods
mov
mov
add
adc
push
inc
add
sti
jbe
arpl
pop
sbb
push
or
gs
cmpsl
lock
aaa
iret
mov
loopne
push
cmp
lock
in
in
fildl
sbb
test
xchg
fdivl
jns
rcll
imul
cmp
lds
xchg
xor
enter
dec
lock
negb
enter
dec
mov
jg
mov
jb
sub
and
pop
sbb
shll
xchg
and
test
out
xor
fld
push
mov
mov
es
rolb
push
lcall
mov
mov
fsts
icebp
je
cmp
lret
arpl
mov
lock
mov
sarl
jg
mov
adc
or
jp
arpl
mov
js
add
sub
push
jno
dec
pop
pop
imul
xchg
inc
adc
jb
test
pop
mov
fsts
push
mov
addl
and
ljmp
pop
mov
je
dec
ds
in
leave
xor
scas
inc
loope
push
xchg
inc
dec
adc
cmp
mov
fsub
insl
or
push
shll
iret
pushf
arpl
fcoml
insl
int3
inc
js,pn
push
dec
add
rorl
sbb
lret
fstpt
mov
ja
cld
mov
sub
push
push
cmp
dec
sbb
pop
pop
pushf
loopne
shll
mov
cmc
xchg
xchg
add
ficomps
cli
mov
dec
mov
roll
sbbb
xchg
mov
or
xchg
lods
mov
add
xchg
iret
jae
test
imul
in
cmp
aam
fdivl
shr
xorl
lods
dec
enter
pop
popf
ljmp
mov
sbbl
mov
add
mov
mov
jno
outsb
aaa
into
lds
notl
enter
hlt
mov
sahf
punpckhwd
repz
or
int
fstpl
add
testb
mov
in
cs
pop
adc
call
dec
ss
sub
push
and
and
leave
ds
ret
pop
inc
std
mov
ret
lds
pop
jne
fs
jae
in
insb
fisttps
enter
xchg
lods
push
cltd
pop
xchg
xor
inc
int
mov
pop
cmp
inc
rclb
pop
ja
mov
push
into
jnp
mov
adcl
ret
cmc
sub
andl
bound
ljmp
xlat
ss
daa
add
and
inc
pop
xlat
push
xbegin
ds
imul
test
out
xor
xchg
imul
rorl
mov
cwtl
clc
in
gs
add
dec
cs
das
ja
adc
mull
and
int
notl
mov
pop
and
sbb
cmp
push
inc
inc
mov
or
les
inc
sarb
movb
aam
or
mov
es
and
hlt
sbb
nop
and
fnstenv
adc
and
add
ljmp
dec
data16
cmpsl
ds
push
jne
jge
aad
pop
xchg
xor
rolb
in
popf
out
add
pusha
dec
mov
mov
loopne,pn
mov
addr16
ds
stos
ret
xor
lahf
jle
iret
test
and
jno
or
inc
aam
mov
or
inc
xchg
add
sbb
aad
push
push
inc
sub
adc
pop
and
int3
popf
adc
sbb
jnp
pop
loop
aas
pushf
mov
lret
aaa
ss
lret
dec
jg
cmpsl
imul
xlat
js
inc
testb
gs
mov
je
inc
adc
push
pusha
pop
pop
sti
pop
or
mov
popf
jge
dec
cmpsl
pop
addb
xor
imul
inc
mov
pushf
inc
push
sub
fnstsw
imul
aad
dec
ja
xchg
push
out
dec
pop
call
add
jnp
sub
adc
inc
popf
inc
jl
aam
es
mov
stos
push
subl
inc
decb
daa
sti
and
adc
cld
and
movsl
fdiv
ljmp
loop
mov
push
jnp
jbe
mov
roll
shl
pusha
aas
clc
xchg
xchg
adc
push
jb
adc
fcoms
jbe
daa
insb
fisttps
sub
mov
int
aad
cmp
lods
sbb
cmp
fisubrs
sahf
xchg
xchg
je
fidivrl
add
mov
test
jp
xchg
pop
pop
xor
and
mov
or
mov
jnp
xchg
push
mov
sbb
popf
fidivrl
or
dec
stos
push
movsl
xor
mov
jecxz
in
and
notb
xchg
add
mov
int
in
inc
mov
push
loope
or
out
cmp
and
add
sar
dec
sbb
mov
fwait
pop
mov
sub
nop
hlt
fs
cmp
add
dec
cld
sub
js
lods
sbb
mov
xchg
lahf
xor
stos
xor
insl
aam
mov
jmp
and
cmpl
cmpb
clc
fdivp
mov
mov
pop
and
std
xchg
xchg
int3
and
cs
dec
pop
imul
push
hlt
pusha
jne
xor
std
gs
mov
out
xor
pop
push
pop
pop
test
pop
pop
mul
cmc
jmp
cltd
iret
or
les
icebp
and
inc
lock
pop
adc
push
test
rcl
arpl
fldl
sub
sbb
das
and
stos
popf
and
sahf
fwait
hlt
clc
out
std
push
push
scas
test
test
daa
mov
mov
loop
out
sbb
lds
xchg
stc
or
cmp
or
pusha
and
mov
mov
inc
mov
mov
add
sbb
hlt
outsl
and
push
jge
or
jno
mov
lret
cmpsb
sbb
pop
aad
ret
ret
mov
mov
push
aam
sbb
gs
sub
into
pop
mov
scas
jmp
hlt
ret
in
sub
lds
sbbb
jmp
les
stos
faddl
les
push
mov
mov
data16
andb
mov
outsb
sub
cmc
mov
xor
andb
mov
xorl
ret
loopne
aaa
cwtl
sbb
lods
mov
leave
jbe
cmpsb
std
lods
fs
neg
in
xchg
decl
pop
repz
xchg
ret
in
adc
arpl
inc
test
in
dec
cvtps2pd
aaa
or
xchg
adc
rclb
pop
jno
mov
xorl
inc
push
mov
ret
mov
enter
cmp
xor
push
mov
jecxz
mov
fcmovne
xlat
outsb
push
pop
hlt
enter
lock
int
out
or
push
adc
add
sbbl
or
xchg
mov
jl
jb
mov
and
push
clc
sbb
mov
xchg
mov
call
rcrl
xchg
push
jb
pop
clc
stos
jne
pop
adc
sarl
xor
dec
pop
inc
aad
xchg
enter
cmp
sahf
lods
cs
loop
call
inc
or
test
xchg
pop
inc
jne
mov
inc
push
xlat
push
dec
int3
mov
push
xchg
cmpl
scas
imul
cmp
cmp
pop
push
lods
jnp
xchg
sub
frstor
mov
insl
cmp
and
lea
clc
cmp
ds
call
mov
mov
push
lods
xchg
nop
mov
cwtl
movntq
in
loopne
mov
fstps
dec
popa
push
push
adc
jb
mov
fs
test
mov
xchg
int3
inc
pop
and
jnp
fdivrl
stos
pop
outsl
pmaxub
or
and
xlat
loop
or
adc
test
popf
or
or
dec
stos
mov
std
test
or
ret
jno
xor
adc
loope
hlt
fs
sbb
out
mov
int3
imul
cwtl
jmp
popf
aam
sub
inc
xchg
mov
and
out
fnstenv
inc
cmpsb
into
in
mov
adc
jns
sub
loope
pop
mov
imul
inc
jp
mov
out
fildll
insb
sub
cltd
out
sub
movsb
jecxz
cmp
aam
or
cwtl
fistpl
movsb
push
lret
xor
inc
mov
ffree
test
iret
add
sub
mov
cwtl
cmpl
aad
jne
int3
rcll
xor
pop
ret
out
pop
imul
or
shr
mov
xor
les
pop
jl
or
fisubrs
les
and
jp
mov
in
xor
in
and
fldt
pop
push
leave
xchg
cmp
mov
jno
pop
lods
dec
mov
inc
andb
sub
pop
cld
jbe
add
sti
push
notl
les
scas
or
pop
push
cld
mov
rclb
pop
dec
test
loope
jmp
jmp
aam
outsl
add
pop
fidivrl
sub
xor
dec
adc
loopne
mull
pop
and
insb
xor
mov
push
or
lock
push
xor
xor
in
and
xor
dec
in
sarb
push
fdivl
movl
jg
mov
xor
sar
std
loop
or
mov
cld
jnp
mov
test
push
test
lds
sub
xchg
aas
mov
fstpt
and
outsb
mov
xor
dec
clc
push
andb
inc
pop
psrad
call
decb
loope
push
fsts
or
mov
shlb
cmp
cmpsb
or
int3
push
xlat
std
or
mov
or
lcall
pop
xor
pop
daa
jne
adc
mov
and
sub
push
pop
sahf
add
and
cwtl
xor
lock
movsl
aam
sbbb
and
divb
pop
imul
out
call
in
shl
mov
leave
out
fwait
mov
pushf
mul
idivb
out
and
xor
and
xor
adc
call
gs
leave
push
pop
cs
insb
pop
int3
add
loope
mov
inc
push
and
cmpsl
and
jg
dec
fidivs
sbb
xlat
push
xor
xchg
ds
add
xchg
sbb
stc
jmp
cli
sbb
cmp
jge
push
adc
fstpl
ss
jg
and
dec
cmp
sahf
popf
jmp
cltd
mov
mov
or
add
xor
push
xchg
out
cmp
imul
test
fldt
adc
out
adc
cmpb
out
mov
popf
dec
sub
ds
lcall
scas
orl
loop
fmull
test
jnp
sub
cmp
mov
daa
enter
test
and
ds
fisubrs
push
fwait
and
test
aaa
push
pop
add
push
cmpsb
inc
je
shlb
shll
je
mov
lret
mov
mov
mov
and
stc
mov
dec
fs
push
xchg
add
sub
pop
test
jmp
add
pop
orb
ret
mov
out
lods
test
and
dec
scas
cltd
lret
xor
lods
cmp
dec
add
dec
mov
sub
arpl
sahf
mov
bound
mov
jo
in
sbb
sub
in
mov
lcall
cs
mov
inc
sbb
loop
dec
rcll
stos
fldcw
mov
fbstp
orl
icebp
dec
push
ja
inc
das
pop
out
mov
cmp
ljmp
mov
xchg
out
arpl
cwtl
popa
xor
cmc
jb
xor
nop
andl
jmp
test
cwtl
sub
andb
fisubrs
aad
cmp
stos
stos
sbb
insl
cmp
xchg
jge
daa
test
mov
jb
inc
into
ficomps
push
pmuludq
pop
lods
shrl
das
xlat
sahf
loop
or
idivb
fstps
ja
dec
mov
add
lcall
inc
jns
xor
jbe
cmpsl
add
fisubrs
idivl
pop
imul
cmp
ss
es
lret
ss
lret
pop
or
push
ffreep
push
rol
repnz
dec
cmpsb
sti
aad
dec
fisubrs
aam
dec
sti
jb
xor
xchg
pop
and
out
adc
addl
xchg
ret
pop
and
fs
lock
std
pop
add
lea
mov
dec
pushf
dec
xlat
lea
xchg
js
mov
or
dec
adc
in
std
adc
adc
addl
sbb
mov
xlat
andb
fs
dec
xchg
movsl
sub
cli
jno
add
adc
sarb
outsl
ljmp
lcall
xchg
sti
push
mov
daa
jno
or
daa
call
and
in
or
call
ret
xor
or
adc
sub
inc
cmpsl
sub
repz
mov
jl
fmuls
xchg
cmc
adc
jae
push
ja
clc
mull
cltd
cmpb
push
gs
dec
pop
idivb
push
pop
int
push
or
out
ja
mov
mov
mov
jns
mulb
out
pop
sahf
test
push
outsb
rcr
or
les
sbb
aas
data16
fsub
rcr
jle
adc
fs
pop
mov
popa
sahf
fildl
jl
lds
in
loopne
xor
jbe
shll
mov
in
jns
push
mov
sub
ljmp
icebp
cmp
xorb
push
xchg
leave
mov
or
mov
ret
mov
daa
push
inc
push
pop
pushw
xchg
repnz
popa
out
xchg
mov
out
test
jl
call
es
std
mov
lock
mov
add
inc
mov
test
or
lock
dec
icebp
fimuls
ja
ret
mov
js
pop
insl
inc
jmp
pop
dec
xchg
and
cmp
ja
js
adc
jbe
inc
in
loope
aas
je
test
inc
jg
out
sarl
xlat
cli
jecxz
pop
inc
loop
cmp
or
xor
stc
cmp
enter
ja
shl
stc
inc
lods
adc
cltd
rcrb
cmpl
lock
jo
mov
mov
in
js
mov
sbb
xchg
rcrl
xchg
lock
iret
sbbl
and
repnz
je
mov
mov
push
dec
lahf
int
out
popf
pushf
push
stc
sbbl
dec
in
mul
fiaddl
pushf
lods
cmp
pop
push
add
jge
jnp
sahf
jo
out
enter
clc
clc
jmp
dec
mov
jmp
ror
push
inc
dec
pop
add
mov
aas
or
test
xchg
jp
xor
cmpsl
mov
inc
push
popf
ljmp
std
movsl
pop
ds
mov
fisubrs
iret
enter
outsb
push
outsl
clc
pop
adc
aaa
stc
and
sbb
xor
add
inc
nop
arpl
pop
jp
cwtl
mov
sub
jecxz
bound
inc
sub
mov
icebp
xor
lds
pop
cltd
test
mov
fiaddl
cmpsl
dec
addb
popa
mov
test
pop
rcrl
and
push
jae
xchg
popa
mov
enter
mov
arpl
push
inc
push
cmp
mov
adc
xchg
xchg
adc
push
insb
insl
insl
inc
insb
pop
and
shl
or
pop
xchg
push
andl
test
arpl
mov
dec
cmp
pop
add
mov
in
leave
dec
pop
or
mov
scas
lock
outsb
fcom
push
xor
rorb
xor
push
divb
xchg
cwtl
dec
das
out
lret
inc
and
scas
lret
xchg
jb
cs
lods
mov
jnp
paddsb
pop
sub
fsqrt
mov
sti
inc
mov
or
or
or
mov
xor
ljmp
fdivp
mov
sahf
and
test
mov
jecxz,pn
or
daa
inc
adc
testl
shr
scas
ror
outsb
fmulp
leave
jle
int
popa
xor
and
sub
push
test
clc
push
mov
xchg
addl
cs
aad
insl
push
je
fstp
mov
mov
repz
test
push
pop
mov
and
iret
fwait
aas
lods
clc
jb
mov
add
lret
cmp
adc
imul
mov
xchg
xchg
jo
iret
movsl
mov
or
stc
inc
cltd
push
sbb
cmpsb
addl
or
les
ret
dec
pop
movsb
pop
rcrl
add
xor
inc
rcrl
arpl
mov
nop
outsb
rorb
or
ret
cwtl
lcall
push
push
or
inc
call
shr
cltd
jbe
push
fstl
push
mov
insb
call
cmpsl
test
icebp
jg
push
dec
mov
pop
sbb
arpl
movsb
stos
jo
xor
data16
fnstsw
add
outsb
inc
scas
icebp
pop
xor
fdivrl
lods
roll
jo
inc
in
mov
pusha
rcrb
lea
cmp
xor
idivl
test
push
sbb
cwtl
cmp
jge
add
jecxz
cmpsl
pop
pop
add
ja
stos
inc
pop
lea
in
fdivrs
ss
xor
mov
jns
fsub
mov
xlat
push
add
push
jp
mov
lahf
or
xchg
xor
cmpsl
mov
mov
xor
inc
dec
cmp
neg
movsl
xchg
out
inc
cmp
fisttps
push
repz
sahf
cwtl
lods
push
es
cli
cwtl
rorl
or
xor
rcll
sbb
cmp
aas
fisubrl
cmp
movsl
jb
arpl
daa
ret
and
popa
xor
sub
subb
sbb
jl
push
cld
xor
sub
jg
lds
dec
xlat
dec
fstpl
jecxz
pushf
adc
movsb
fwait
out
imul
ljmp
mov
gs
inc
jecxz
lods
xchg
pop
int
outsb
loope
xchg
add
pavgw
and
filds
popa
jmp
inc
fsubs
outsl
cmp
and
clc
aaa
mov
cmp
sbb
jge
out
mov
les
adc
cld
push
test
cmp
movsb
or
pop
or
mov
test
jle
xchg
iret
and
xor
or
jl
inc
add
loope
jle
inc
mov
xor
ret
push
out
fbld
sub
mov
or
sub
enter
push
imul
add
sbb
cmp
lods
xchg
inc
push
outsl
mov
scas
push
jae
fstpt
inc
mov
cmp
popa
xchg
sbb
or
sarl
jmp
mov
fists
shlb
outsl
orl
inc
dec
stos
jno
outsb
insb
ret
push
dec
test
mov
jle
outsb
sub
xchg
es
pop
xor
adc
xchg
mov
push
sub
add
ljmp
cmp
add
int
push
cmp
jge
jg
xchg
or
and
js
sbb
cmp
inc
test
lret
in
inc
cmc
dec
scas
mov
leave
jg
cmp
lret
mov
sub
pop
xor
sub
inc
add
in
and
stos
movsb
adc
lds
pop
aaa
mov
aad
xchg
das
out
daa
dec
stos
es
orl
sub
lret
aas
jo
mov
mov
imull
jo
push
mov
and
or
pop
arpl
rorl
mov
pusha
leave
repnz
adc
in
insb
xor
inc
jnp
jle
popa
lds
cld
std
rcl
lea
imulb
outsl
addr16
inc
sbb
add
sti
fimuls
xorb
mov
repnz
sbb
adc
aaa
cwtl
daa
lret
add
or
addl
lcall
lods
xchg
push
popf
scas
icebp
shr
shr
jbe
mov
lods
mov
mov
dec
inc
sbb
test
enter
mov
cmp
push
inc
insl
add
mov
pop
lret
or
or
jecxz
jge
lahf
ss
imul
ret
mov
sub
loopne
inc
jne
mov
push
cs
pop
int3
imulb
test
push
shrb
mov
adc
insl
movsl
or
imul
loope
push
fadd
mov
sahf
or
or
aad
push
jns
mov
ss
mov
js
scas
ret
orl
and
adc
das
in
lds
out
add
xchg
cs
mov
inc
out
pushl
mov
lods
adc
mov
mov
js
sub
sarl
in
jp
mov
es
xchg
movsl
lahf
arpl
inc
pop
cmp
rcrl
dec
push
cmc
mov
fsubrl
jecxz
lock
rcr
sub
sub
sbb
leave
push
loop
cmp
pop
mov
cwtl
pushf
and
jg
xchg
jae
loope
sub
addl
pop
adc
into
push
outsb
lods
cltd
or
sub
cmpsl
pop
sub
mov
mov
and
sahf
dec
lret
in
adc
mov
stc
cmpsb
push
add
das
iret
js
fildll
xchg
mov
mov
or
mov
or
xor
inc
inc
jl
pop
jnp
cmp
lahf
push
lds
jns
mov
xor
cmp
sahf
fdivr
mov
cmp
pop
mov
int
xchg
jbe
sub
rorl
lcall
cwtl
in
dec
cmp
xor
sbb
aas
shr
rcrl
jp
push
push
add
sub
ret
inc
icebp
cmp
sbb
pop
rcll
pop
aas
adc
fildl
mov
pop
sti
divl
jb
jno
mov
cli
xlat
cmp
adc
mov
ja
add
cltd
inc
mov
sub
mov
stos
jle
repz
mov
ffreep
xchg
xor
stos
xchg
pop
or
rorl
cwtl
cwtl
cmpsl
lods
push
lcall
mov
lret
sbb
xchg
add
xchg
add
imul
mov
mov
repz
addr16
push
fistl
adc
jg
lods
push
xchg
mov
sub
inc
into
pop
push
jnp
inc
push
and
jg
xor
cltd
jo
push
and
pop
pusha
mov
nop
adcl
loopne
add
xlat
mov
cld
mov
rclb
stos
mov
aam
pop
pop
rep
add
ret
sub
jle
daa
mull
dec
xor
and
inc
js
xchg
stos
fsubrl
iret
std
call
insl
cmpsl
in
pop
xchg
les
sub
mov
shlb
je
inc
mov
xchg
in
rcll
stos
fisttpl
xchg
jne
xor
scas
push
xor
xor
mov
adc
ss
push
aaa
nop
pop
dec
push
ss
jo
sti
mov
push
out
orps
push
mov
scas
lea
sbb
nop
arpl
push
ficomps
stos
jne
fstp
push
test
cmp
orb
es
jae
aad
cmp
sub
int
decl
cli
shlb
adc
mov
outsb
test
lcall
lock
out
inc
ret
rorl
mov
inc
push
dec
iret
hlt
lods
mov
popf
shlb
popa
ret
lret
cltd
dec
arpl
inc
outsl
mov
mov
imul
ret
mov
mov
and
cmpsl
jbe
mov
call
mov
inc
sbb
jne
clc
add
orb
les
mov
es
sbb
cmp
cmp
xchg
pop
lahf
xchg
mov
inc
int
xor
call
jno
xor
lret
inc
xchg
mov
mov
stos
rorl
cmp
xchg
mov
xchg
mov
inc
call
lods
incb
mov
es
sahf
cmp
mov
shll
fs
push
subl
xlat
ss
outsb
dec
xor
mov
je
test
mov
leave
dec
xchg
imul
add
mov
adc
xchg
call
out
or
sbb
fcmovu
push
test
fadd
movsb
lret
mov
pop
das
imul
movsl
xor
xor
lods
dec
into
insl
imul
aad
mov
sbb
out
mov
js
dec
stos
stos
adc
out
jmp
iret
and
lret
pusha
mov
idivb
mov
and
add
es
jmp
and
fcoms
push
sbb
xchg
push
mov
mov
popf
cmp
dec
xchg
xchg
arpl
pop
pushf
mov
pop
cmpsl
in
and
enter
fnstsw
mov
inc
int
out
push
out
inc
aad
sbb
sti
insl
jae
sbb
pushf
ret
movsl
xor
cli
cmp
enter
adc
ret
mov
cmp
pusha
jl
and
shrb
bound
inc
and
rorl
mov
push
or
mov
or
xor
push
int
xchg
mov
ja
pop
insb
push
es
mov
popf
stos
inc
pop
pop
cld
stc
sbb
leave
pop
adc
daa
addb
sbb
xchg
cmp
scas
pusha
cmp
orb
dec
and
lea
popf
in
mov
xchg
imul
sbb
or
and
xchg
pop
roll
push
std
lcall
push
push
fstpl
je
aad
mov
loopne
outsb
jae
add
push
mov
jmp
mov
sub
lret
loop
adc
mov
lds
pop
add
adc
popa
into
push
pop
imull
addr16
mov
je
pop
mov
in
jns
in
mov
insl
notb
js
hlt
cltd
enter
lahf
sub
sub
imul
insl
test
test
push
dec
or
out
testb
xchg
adc
call
sar
subb
es
cli
mov
dec
or
out
in
test
mov
jo
inc
xchg
mov
jp
cmp
hlt
cmc
pop
rorb
add
rorl
xor
out
fyl2xp1
int
mov
adcb
mov
xchg
jo
add
mov
sub
test
rcrb
je
xchg
xor
inc
mov
add
inc
addr16
int3
negb
cmp
push
pusha
arpl
jbe
or
push
sbb
mov
pusha
adc
fldz
rorb
fildl
js
sub
dec
pop
inc
jp
sti
jmp
cmp
pop
lret
add
cmp
scas
add
xchg
jmp
outsl
push
test
push
outsl
mov
out
fimull
inc
push
out
xchg
js
scas
add
inc
arpl
aaa
xor
and
jno
inc
jge
cmp
add
pop
in
je
loopne
lock
sub
and
mov
cmpsl
or
mov
iret
cmp
sti
dec
imul
sbb
es
jp
aaa
xchg
scas
test
frstor
jno
xchg
or
sti
movsb
clc
cld
cmp
test
mov
incb
xchg
aam
arpl
or
mov
or
js
sub
js
push
cmp
push
fwait
popa
pop
enter
in
jnp
push
iret
xchg
mov
call
jb
and
add
xchg
jno
repnz
loop
push
rcrl
and
inc
test
mov
cmp
mov
ficompl
rcll
and
jne
test
mov
jle
mov
add
mov
sahf
ja
push
jne
ficompl
xor
add
sbb
sbb
add
in
in
jnp
nop
mov
inc
xor
out
sbb
sub
int
push
stos
rcrl
or
xor
fldl
xlat
jp
fisubrl
xlat
sub
push
es
dec
xor
hlt
jbe
ret
xchg
mov
and
fnstsw
mov
insl
aaa
out
outsl
cmp
inc
test
pop
push
push
ja
xor
out
ret
sbb
and
pop
push
cmp
int
mov
outsl
aaa
pusha
cltd
stc
mov
and
sub
pop
jecxz
gs
inc
sbb
pop
mov
out
out
pop
cmp
dec
std
subl
dec
fisubl
push
sub
inc
jne
aas
xchg
fcoml
addr16
js
sub
and
lcall
test
scas
jg
jno
jnp
jge
mov
cwtl
mov
dec
sbb
mov
or
pop
insb
push
mov
jno
test
subb
bound
mov
mov
mov
icebp
or
push
imul
mov
fdivr
pusha
cmpsb
imul
negb
lds
insl
mov
jg
fwait
mov
mov
aam
add
mov
in
dec
adc
mov
cmp
push
jbe
std
xchg
sub
movsl
lret
mov
in
cltd
loop
jge
stos
push
movsl
fbld
cmc
ss
je
sub
mov
movsb
mov
mov
and
cmp
mov
rclb
sub
lcall
aaa
or
sbb
xrelease
test
cmc
enter
pushf
out
dec
clc
icebp
cltd
inc
or
icebp
or
or
xor
cli
adc
insb
shr
jne
lock
or
cmpsb
pop
jmp
movsl
and
jnp
repz
and
test
xchg
dec
mov
adc
mov
call
or
popf
cmp
xor
add
mov
and
sbb
dec
lea
enter
imull
sti
inc
xchg
adc
push
cltd
pop
sti
lret
pop
dec
js
jbe
scas
in
xor
aam
mov
pop
pop
dec
cmovb
add
and
push
out
pop
cmp
mov
fildl
dec
aaa
mov
pop
xchg
push
mov
push
ljmp
mov
in
loopne
xchg
fimull
ja
addr16
mov
sub
aad
jo
sbbl
jbe
pushf
fwait
push
or
out
scas
pop
fstpl
mov
sbbl
xor
add
jns
or
inc
inc
pop
outsl
inc
inc
aad
add
and
andb
push
aad
push
daa
addb
aas
or
jle
negl
sbbb
jge
dec
pop
mov
or
int3
lock
jmp
mov
mov
jns
xchg
repnz
lds
stos
fbld
mov
dec
cmpsb
out
mov
xor
mov
test
pop
fdiv
inc
add
push
cmp
out
bound
inc
jno
mov
shll
mov
shlb
in
icebp
in
and
and
pop
cltd
inc
scas
and
nop
or
in
les
mov
xchg
jg
mov
and
xor
add
repnz
jl
pop
call
jns
mov
jle
jmp
mov
mov
sub
push
mov
adc
mov
jl
fadds
xchg
daa
lahf
xchg
jae
insb
xor
jmp
jl
xor
xchg
ja
lds
addr16
add
js
mov
scas
orl
add
sub
add
adc
iret
mov
lods
pop
jmp
das
jmp
jb
mov
pop
std
adc
xchg
fld
lods
fs
inc
jecxz
leave
xchg
nop
jno
lea
fstps
subl
mov
cmpsl
push
imul
bound
hlt
and
fidivs
dec
ficomps
rcll
add
mov
rolb
cs
and
imul
sbb
fbstp
aas
xchg
popa
inc
testl
mov
mov
add
ret
mov
adc
repnz
mov
popa
pop
and
jns
xchg
xor
push
cmpsb
pushf
dec
shll
aas
pop
repnz
inc
cs
xor
mov
push
mov
dec
sub
dec
cmp
dec
xlat
add
dec
sbb
icebp
push
movsb
inc
movsb
inc
xor
mov
sub
lods
xchg
daa
xor
das
dec
lret
subb
xchg
inc
jnp
inc
int
sbb
mov
fisttpll
mov
push
fiaddl
inc
mov
cmp
ds
divb
adc
cmc
imull
aas
aaa
test
sti
sbb
inc
scas
add
enter
ljmp
push
add
ja
adc
mov
js
das
mov
push
dec
cltd
in
cmp
mov
pop
loop
incb
mov
cmp
arpl
xorb
and
js
dec
sahf
ret
fidivl
movsb
dec
je
out
lods
jnp
xor
subl
add
jo
push
inc
into
clc
xchg
mov
xchg
sbb
add
sub
and
push
push
cld
int3
mov
xor
out
cmp
xor
fwait
cs
dec
add
jbe
add
mov
pop
push
aam
pop
fsts
sub
and
test
fst
lds
pop
mov
pop
push
ret
outsl
push
jecxz
push
cmp
adcb
mov
add
cmc
sub
push
not
out
sub
mov
xor
popa
fldl
pop
arpl
in
cmp
push
arpl
movsl
xchg
adc
mov
sti
test
enter
pushf
inc
sbb
lret
mov
lret
pop
push
sti
or
ret
mov
pop
pop
xorb
ja
xchg
pop
pop
mov
and
sub
inc
pop
repnz
mov
stos
iret
jl
mov
js
adc
test
rcll
push
movsl
fildll
xor
leave
adcl
inc
push
xchg
or
lcall
jnp
nop
sbb
inc
stc
clc
js
mov
or
pop
aad
insb
mov
mulb
xchg
out
sti
push
pop
scas
insb
in
lods
repnz
sbb
ficomps
popf
pop
bnd
jecxz,pt
mov
stc
sub
fnsave
push
mov
and
sub
mov
ret
jns
adc
push
es
popf
outsl
loopne
jecxz
xor
aad
xorb
xchg
aad
and
mov
lahf
cwtl
repz
xor
sub
pop
fidivrl
xchg
mov
int
xor
js
mov
mov
imul
or
lock
or
sub
sub
pop
mov
xchg
jb
cld
scas
pop
xchg
clc
scas
sbb
aam
testl
mov
mov
or
cmpsl
push
enter
insl
in
sti
xchg
push
lcall
push
xchg
inc
out
fildll
jbe
shlb
dec
frstor
cmp
arpl
xchg
sbb
or
cmp
out
mov
push
outsl
mov
in
movsb
push
cmp
loopne
bound
sbb
lahf
mov
rol
icebp
cmp
xor
loop
mov
push
mov
push
add
sub
xchg
add
and
jnp
pop
shr
lods
rcll
mov
inc
and
in
cmpsb
dec
imul
lret
cmp
cmp
fistl
les
cli
mov
les
fwait
adc
add
ss
out
int3
push
inc
jecxz
in
pop
fstps
fstpl
jno
addl
lds
jo
mov
scas
in
mov
hlt
add
sub
and
xor
shr
sub
outsb
out
cli
inc
xchg
lods
xchg
insl
push
dec
cmp
in
ret
fistps
pop
mov
lret
sub
xchg
cmp
adc
mov
lret
add
push
test
pop
lods
lods
int
sbb
test
js
sti
mov
sub
cmc
mov
mov
movsb
cmp
add
out
insb
out
xchg
mov
mov
pop
bound
movsl
pop
jle
adc
dec
stos
add
pop
xchg
dec
ja
aad
push
call
sub
mov
testb
add
mov
mov
fwait
mov
and
xor
jo
test
xchg
ljmp
add
add
icebp
imulb
dec
jns
dec
mov
cld
mov
mov
cmp
push
in
adc
push
and
sub
lock
rorb
arpl
inc
inc
lods
lods
scas
mov
addr16
int
clc
mov
in
sub
in
test
lret
mov
sbbb
pop
ljmp
sub
mov
rclb
std
lahf
xor
dec
repnz
ss
adc
pop
imul
lods
dec
fldcw
hlt
add
xor
pop
xlat
leave
rcr
push
dec
adc
lea
ss
xor
fmull
cmp
int
jge
in
pop
sbb
sahf
test
xor
sub
je
push
or
sub
mov
push
cmp
ljmp
pop
mov
fs
sub
xor
and
fisubrs
mov
mov
in
movsl
arpl
cltd
movsl
adc
dec
inc
cli
and
cs
sbb
cmp
scas
mov
inc
sahf
shrl
sbb
jp
into
cmc
popf
mov
loope
out
inc
pushl
mov
xor
sbb
mov
xchg
add
adcb
fisubl
pop
lret
cwtl
ret
pop
adc
sub
in
jae
scas
inc
add
cmp
jns
add
out
sbb
ds
fld
fsub
sub
cli
pusha
leave
sarl
int
and
lds
xor
jnp
mov
ss
data16
incl
lcall
into
xor
or
and
lock
xor
jno
mov
jns
mov
inc
in
insb
in
mov
sti
push
sbb
rclb
or
insb
or
repnz
ret
stos
jmp
add
mov
cmpsb
xchg
lahf
xor
jge
pop
sub
pop
cmp
xchg
xchg
in
pop
dec
push
lahf
gs
daa
sahf
push
or
movsl
jl
and
or
rorl
ljmp
mov
jg
mov
lahf
mov
mov
cltd
mov
mov
mov
dec
adcb
push
out
adc
movsl
out
aas
jbe
imul
inc
pusha
sbb
cmp
icebp
mov
stos
hlt
pop
and
push
push
mov
or
icebp
push
andl
jns
notl
adc
int3
push
insb
cmp
and
lahf
addb
loop
ss
aam
scas
lock
xchg
sbb
push
jmp
lea
les
lock
or
mov
inc
pusha
hlt
lods
testb
cmp
pop
cmp
mov
cltd
std
inc
in
dec
push
out
fwait
xor
adc
mov
rolb
jl
mov
repz
outsb
fwait
cmp
sarb
cld
test
fcomip
adc
adc
data16
sbb
xor
or
popa
daa
movd
fincstp
outsl
das
pop
mov
sti
pop
inc
ret
cld
lock
lock
fadd
pop
imul
adc
add
jnp
sbb
push
testb
jmp
cmc
pusha
xor
lock
pushf
inc
test
dec
dec
mov
lock
jb
gs
dec
add
xor
add
test
movsl
insl
jae
inc
cmp
adc
data16
cli
idivl
lcall
cld
jg
mov
ljmp
into
and
dec
das
adc
sub
mov
adc
sub
mov
cmp
mov
sub
out
or
xor
or
dec
push
add
iret
adc
pop
add
push
out
xchg
int3
adc
jns
inc
or
pop
je
arpl
movsb
jmp
or
pop
jmp
sarl
or
xchg
cmp
jo
mov
lods
addr16
inc
pop
lcall
cld
loope
loope
sar
adc
jb
xchg
and
push
mov
jno
cmc
loop
jne
xor
push
cli
das
push
out
addr16
sti
pop
in
sub
sbb
xor
lock
or
das
daa
inc
in
idivb
or
stos
mov
les
pop
push
xor
inc
ss
lods
inc
jge
jge
clc
adc
xor
fwait
mov
loop
pop
ljmp
cmp
mov
mov
mov
mov
push
daa
js
sbb
lock
sub
mov
sti
jbe
add
dec
sub
mov
xor
and
imul
scas
jle
xchg
imul
inc
jns
add
repz
test
sahf
sbb
and
js
add
dec
imul
mov
jbe
inc
popa
lret
loop
mov
mov
pushf
dec
and
notl
out
mov
inc
popl
ss
adc
sbb
leave
xor
and
neg
bound
outsb
lods
cmp
inc
push
imul
xchg
aad
notb
jecxz
mov
insl
sbb
mov
insl
out
pusha
cld
fnstsw
into
outsl
xchg
out
jmp
inc
sahf
leave
ljmp
and
mov
lret
ret
xlat
fisubrs
xor
arpl
movsl
sub
aaa
push
pop
in
xchg
jle
pop
imul
lret
adc
aas
imul
lods
jo
jle
in
jb
adc
and
aam
addb
xlat
mov
dec
fld
mov
dec
sub
mov
push
cli
xor
aaa
icebp
daa
mov
adc
xchg
or
dec
push
sbb
jg
aad
pop
or
int
pop
loopne
xor
out
cmp
loop
pop
xor
ud2
xlat
xchg
roll
out
in
fidivrl
dec
mov
imul
sub
out
std
sub
call
dec
dec
inc
loopne
jle
or
fistl
cmp
mov
iret
inc
mov
sub
lds
cwtl
xchg
js
add
jns
xchg
cmp
test
das
add
outsl
add
pop
sub
push
in
loop
gs
orb
lds
mov
sub
pop
inc
aam
cmp
xchg
icebp
dec
mov
aam
xchg
add
stos
push
imul
test
adc
lret
lret
aas
add
xchg
xor
inc
rcll
in
imul
ja
scas
jne
pop
leave
hlt
push
pop
in
shr
ljmp
add
or
jmp
xor
dec
movsb
inc
loop
inc
pushf
mov
or
stos
rclb
outsl
sti
rolb
and
imull
cmp
shr
loop
out
shrl
in
add
push
jecxz
lods
sbb
shl
in
xchg
scas
push
adc
addl
cmpsb
out
leave
stos
cmp
adc
xor
xchg
jecxz
andl
xor
js
cmp
std
add
mov
inc
stos
mov
fiaddl
cmpsb
xchg
repnz
test
mov
mov
outsl
sbb
lret
imul
std
ficomps
fldl
dec
jge
pop
lret
ret
inc
sub
push
or
sub
aad
adc
inc
or
subb
daa
fmull
xchg
cmp
popf
or
pop
adc
and
fsubrs
pop
mov
mov
mov
sub
sbb
and
xchg
js
loope
cmpsl
mov
adc
mov
ljmp
in
movsb
in
adc
mov
faddl
imul
push
in
aam
mov
imul
daa
mov
fwait
loop
cmp
pusha
mov
xor
push
iret
push
std
inc
pop
mov
xchg
xchg
jae
jne
and
fldl
dec
sub
jle
out
sbb
add
push
cld
mov
sbb
push
inc
push
cmp
leave
inc
dec
sti
out
xor
addr16
fidivl
scas
popf
pop
inc
or
js
xchg
arpl
add
or
arpl
and
cmc
sub
pusha
rcl
adc
int3
or
cmpl
pushf
xor
cmpb
rorl
stos
xor
xor
cmp
andb
sar
push
mov
jmp
sub
into
jns
outsb
enter
pop
jmp
cmp
div
mov
fldt
scas
out
div
nop
clc
mov
mov
xchg
sub
stos
les
fcomps
adc
shll
aaa
icebp
mov
add
jp
add
in
cmp
pop
mov
in
cmp
or
ficomps
imul
testl
bound
lods
pop
cmp
addr16
int3
dec
rcr
push
aam
shlb
jecxz
loopne
imull
outsl
test
jecxz
mov
push
fcomp
out
and
sub
pop
imul
xor
dec
and
push
lret
pop
scas
push
loope
lret
jnp
fnstcw
aad
imul
ret
inc
mov
shr
mov
popf
and
call
pop
xchg
sbb
pop
test
mov
in
sbb
popa
adc
pop
out
jp
xchg
int
adc
push
mov
lcall
data16
int3
sub
mov
ret
mov
fdivrs
xchg
sub
push
jnp
in
outsb
stos
popf
repz
inc
and
adc
push
lods
jmp
mov
pop
loope
rcrb
and
lret
dec
cli
outsb
rorb
sub
loope
mov
clc
stos
jns
inc
and
cmp
xor
mov
cmp
sbb
or
in
scas
pop
sbb
sub
out
je
xor
mov
imul
sbb
in
sbb
call
mull
outsl
popa
out
mov
xchg
mov
js
or
fwait
test
les
test
dec
push
dec
or
or
daa
pushf
fcompl
dec
testb
hlt
fdivrl
inc
aaa
xchg
cmpb
cwtl
push
jp
test
fcompl
mov
inc
or
pop
test
cmp
negb
dec
dec
sub
adc
fs
jle
aaa
xchg
sub
or
pop
jl
enter
test
cmp
data16
adc
test
jg
cmpsb
mov
push
pushf
xchg
aam
fnstenv
pop
or
scas
in
pop
mov
adc
ljmp
mov
xor
mov
add
jl
jo
push
push
aam
ffreep
rclb
jo
jb
in
enter
daa
push
ds
and
xor
dec
add
fs
inc
or
add
cwtl
jne
sbb
sbb
push
call
outsb
or
enter
pop
aas
cmp
imul
pop
fidivl
cmp
xor
les
push
pop
loopne
cmp
xor
and
mov
sub
cmpsl
inc
call
in
and
or
add
sbb
addb
iret
lret
out
mov
js
dec
test
ret
inc
std
mov
cli
mov
or
xchg
hlt
stos
movsb
test
clc
mov
mov
int
in
dec
mull
push
arpl
pop
mov
in
push
cli
push
mulb
fst
lahf
sbb
fsubs
pop
out
push
add
dec
jns
pop
in
lahf
cld
push
enter
push
in
sub
das
sbb
xchg
lahf
add
xlat
mov
jmp
adc
lret
stos
test
lret
mov
mov
mov
mov
mov
push
dec
xchg
js
cli
add
mov
enter
clc
sbb
inc
aad
cmp
and
fcoms
test
ret
mov
fsubs
lock
shll
movb
cmp
add
sub
lea
arpl
cmp
jg
adc
mov
adc
lock
inc
dec
cmp
xchg
inc
ret
jge
lcall
pop
out
imul
add
xchg
stc
sti
add
je
mov
hlt
cmc
jp
cmpsb
sahf
sbb
lret
xlat
inc
push
sti
inc
inc
mov
pop
add
push
push
sar
or
fdivrs
lcall
add
push
aam
adc
xchg
mov
xchg
ret
pop
das
pop
xchg
iret
insl
sub
inc
ret
arpl
ds
out
push
ja
mov
into
aad
pushf
clc
or
js
and
sbb
leave
xchg
cmp
jmp
into
or
cmpsb
and
cwtl
in
add
fnstcw
out
and
mov
mov
shrb
mov
or
cmp
push
das
andb
scas
add
inc
ds
or
adc
movsl
fldcw
inc
icebp
push
jno
and
lahf
mov
loope
and
jmp
push
jb
adc
cli
ds
in
sub
and
scas
or
push
jne
pop
xor
jecxz
sbb
data16
fiaddl
ds
mov
mov
push
xchg
jmp
shl
inc
mov
cli
inc
outsl
jbe
repz
push
gs
test
stc
xor
mov
addr16
push
sbb
add
in
mov
dec
pop
jle
je
outsl
mov
loop
inc
xchg
idivl
mov
pop
pushf
sub
scas
stos
inc
mov
mov
mov
clc
dec
insb
jbe
push
data16
ret
jbe
adc
adc
pushf
movsb
lods
popa
adc
mov
mov
movsl
lds
dec
push
jbe
shlb
push
cmc
lods
sbb
xchg
cmp
xchg
xchg
inc
into
sub
aas
xchg
xlat
or
sbb
or
or
pop
push
mull
pop
sbb
pop
pop
mov
jo
xor
sub
scas
adc
ret
shll
inc
into
mov
dec
xchg
adc
mov
adc
push
enter
int3
pop
testl
cs
xor
pop
mov
xchg
and
repnz
mov
jno
ljmp
jmp
add
and
mov
sbb
aad
fcmovnb
addb
jb
insl
sub
sysexit
xchg
jne
xchg
fldt
imulb
out
popa
les
mov
in
mov
lcall
lods
jmp
in
mov
pop
ficoms
mov
roll
int3
push
nop
pushf
mov
sbb
cltd
jne
jge
push
jg
jecxz
fs
or
ds
int3
mov
lods
iret
sar
js
sbb
cmp
xor
stos
jne
adc
ss
insl
stc
mov
movb
das
clc
les
add
shl
testb
or
jle
push
xchg
jnp
xchg
cli
les
lcall
jnp
sub
fmulp
ror
clc
adc
lods
mov
rcll
ret
dec
gs
fisubrs
adc
sub
inc
inc
out
inc
jne
inc
aas
test
sti
add
push
out
scas
pop
icebp
loopne
cmp
mov
sbb
mov
cli
add
mov
or
adc
cmp
mov
inc
ljmp
xor
ss
pop
enter
test
test
scas
pavgb
mov
pusha
daa
mov
std
out
xchg
movsl
pusha
loope
xorb
scas
lea
sbb
lock
and
in
and
lret
dec
test
lret
pushf
into
nop
lds
jnp
adc
popf
sti
adc
adc
lret
loop
dec
pop
iret
and
stos
imul
arpl
fwait
mov
out
jbe
popf
lds
dec
fistpl
test
mov
fdivp
ret
pushf
andl
out
inc
jb
push
mov
pushf
shrb
out
jmp
fcomp
push
das
jbe
sub
nop
mov
mov
pop
sub
or
cmp
adc
push
shr
scas
sub
dec
std
addr16
es
je
inc
lahf
in
lods
pop
fs
pop
sahf
bound
les
jecxz
or
faddl
push
fs
int
leave
mov
lods
and
cltd
mov
mov
pop
test
daa
adc
mov
jns
pop
jg
fisubs
fistpl
test
loop
stos
adc
bound
sbb
aaa
pop
fsubr
fsubs
dec
xor
add
leave
gs
jno
mov
xchg
lea
in
out
adc
sbb
enter
mov
cmp
xchg
clc
iret
add
cwtl
mov
jle
pop
jno
mov
mov
xchg
jle
pop
jmp
adc
xchg
into
ret
or
test
aas
in
hlt
mov
jnp
fcmovb
jg
cwtl
sar
jmp
and
loopne
push
inc
xchg
lock
cli
push
int
xor
in
mov
fisubrl
int3
in
nop
orl
ss
scas
push
ret
jo
callw
xor
inc
pushf
mov
cmp
and
pop
push
out
mov
lret
jnp
xchg
inc
jmp
cmpsl
push
filds
ja
iret
sub
jl
movsb
cli
add
jp
adc
mov
mov
fcomps
sub
xor
inc
gs
out
data16
and
sbb
or
in
out
int3
outsb
pushf
cmp
and
mov
add
cltd
jecxz
popf
out
int
add
xor
int3
jp
out
cwtl
aam
stc
ja
jae
in
pop
push
js
jo
jno
testb
jl
insb
pop
mov
add
xor
mov
inc
pop
cs
stos
scas
gs
cltd
in
in
fsubl
stos
xchg
mov
scas
jmp
add
leave
jno
mov
adc
jmp
add
mov
jg
adc
add
fbld
nop
pop
test
xchg
outsl
push
xchg
pop
mov
icebp
jge
outsl
jnp
cmp
sub
inc
jl
mov
rcrb
sarl
inc
movsl
sub
das
enter
loope
popf
adc
lods
dec
sub
or
inc
mov
out
insl
mov
add
lcall
pop
cmpsb
push
add
mov
popf
xor
rcrb
rcrl
test
faddp
jge
out
push
xor
xchg
pop
add
fstpt
xchg
and
insb
mov
mov
push
inc
out
daa
scas
push
cld
cmp
mov
aas
fwait
xor
add
jne
lahf
fwait
sub
scas
imul
jecxz
sbb
push
outsl
add
push
popf
pop
pop
push
je
inc
adc
and
out
inc
cmpsb
test
mov
mov
dec
pusha
rcrl
mov
add
xor
xchg
in
pop
xor
sbb
adc
into
fincstp
mov
inc
pop
pop
jle
ds
cmpsl
jl
imull
stos
mov
dec
mov
insb
mov
mov
ss
push
popa
fcmovne
mov
cmpsl
mov
out
inc
mov
xor
es
dec
cmc
pop
in
stc
add
sub
xchg
mov
mov
pop
jae
das
in
mov
mov
shrb
mov
xchg
mov
sbb
sub
mov
mov
sub
xorl
add
call
jmp
jns
sub
movsl
pop
jmp
sub
cmp
mov
inc
cmp
lock
ljmp
xchg
in
dec
loopne
sbb
mov
cmp
inc
sub
nop
push
pushf
syscall
std
cld
out
in
jb
mov
push
xchg
jp
sbb
pushf
jno
popf
or
jo
dec
je
shl
dec
add
sbb
mov
lahf
test
cs
imul
out
addr16
call
lds
pop
lret
insl
dec
leave
add
pop
inc
mov
fs
and
xchg
loop
push
or
incl
icebp
sub
pop
fstpl
sbb
ret
fwait
das
push
inc
xor
add
mov
mov
and
adc
inc
rol
js
mov
in
sbb
arpl
divl
push
ret
jo
bound
std
inc
lods
lock
out
stos
test
popf
dec
pop
cmp
add
popa
mov
xor
mov
enter
jae
or
dec
out
cmpsl
cld
out
les
jbe
dec
out
mov
push
aas
push
test
xchg
js
sub
dec
aaa
xchg
add
fld1
and
repz
xchg
call
and
or
imul
mov
adc
bound
add
dec
mov
adc
sub
mov
jle
mov
fsubs
cmpsl
jmp
mov
pop
mov
shrl
mov
mov
sbb
or
xchg
lods
adc
jg
mov
in
dec
ficoml
clc
xchg
aas
jae
bound
lock
and
jl
push
push
mov
mov
lret
arpl
fildl
insl
push
dec
sbb
fcoml
popa
dec
les
jl
mov
ds
jne
dec
sub
imul
arpl
xchg
jno
nop
insb
repz
push
pop
shrl
dec
adc
mov
jo
psubd
sbb
sub
dec
fstpt
loopne
gs
loopne
jl
jns
fimuls
mov
into
fimull
rorb
ret
xor
adc
pop
jno
lods
push
out
int3
cmpb
mov
add
dec
lahf
xor
push
jo
pop
dec
pop
or
mov
lret
cmp
sbb
pusha
lods
push
inc
xchg
cld
lea
pushl
in
cmp
dec
jb
das
cmp
mov
mov
inc
enter
out
lea
call
insl
pushf
push
or
pop
pop
out
jmp
popa
cmp
jae
or
jo
sbb
gs
ds
mov
sub
pop
or
jnp
push
xlat
stc
sbb
dec
les
inc
cmpsl
mov
xchg
and
ljmp
or
cmpsb
aad
push
mov
mov
inc
inc
cmp
addr16
aam
mull
in
popf
divl
sub
push
cwtl
fidivs
icebp
popa
aas
leave
pop
dec
fadds
xlat
das
push
dec
xchg
and
cmpsb
rclb
fsubr
lret
inc
stos
fs
lds
push
addr16
mov
call
ficompl
mov
inc
jg
cltd
and
sbb
movsl
sbb
lea
pushf
cmpsb
jbe
adc
inc
loop
cmp
xchg
sbb
mov
dec
add
or
add
mov
mull
aam
pusha
cmp
ficomps
scas
fidivrs
js
imull
scas
cmp
or
into
outsl
jnp
daa
into
xlat
pushf
enter
movsl
mov
dec
cmp
sub
repnz
push
push
sub
push
pop
adc
pop
cli
jno
pop
dec
lods
stc
movsl
sbb
sbb
nop
imul
xor
pop
jb
icebp
mov
push
je
xor
mov
mov
push
dec
js
shll
daa
xchg
xchg
sbb
mov
enter
and
mov
pop
mov
inc
outsl
dec
daa
pop
mov
cmpsl
cmc
mov
push
or
inc
lret
push
mov
push
int3
subl
mov
adc
lahf
or
andb
xor
idivl
xchg
fsts
adc
and
xchg
mov
push
fnsetpm(287
inc
repz
jp
inc
mov
int3
in
push
pop
repz
enter
xor
incb
and
in
pusha
pop
in
imul
cmp
sarl
ret
mov
push
and
jecxz
dec
lret
jbe
mov
sahf
cmp
filds
je
mov
cmc
xchg
jecxz
subl
scas
or
xchg
out
push
inc
imul
enter
fidivl
ss
mov
jbe
shll
aaa
scas
loope
ds
push
pop
lods
mov
xchg
in
mov
neg
fisttpl
jno
cmpsb
imulb
sub
bound
insb
imul
push
rcll
inc
in
mov
not
xchg
arpl
sbb
xchg
push
pop
loope
test
cmp
fsubr
leave
and
cwtl
sarl
jns
ret
add
mov
clc
cmpl
mov
jno
out
push
orl
call
pusha
rolb
mov
inc
push
add
enter
push
fdiv
dec
cmp
subb
mov
and
inc
rorl
test
mov
outsl
mov
int
mov
mov
lret
outsb
mov
pusha
sub
ss
pop
adc
inc
loop
cmp
jae
popf
pop
pusha
dec
mov
pop
test
test
xchg
out
lcall
aaa
aaa
inc
popa
sahf
inc
or
in
jl
sub
push
cmpb
push
fadd
icebp
imul
mov
stos
mov
repnz
js
adc
hlt
sub
jb
mov
in
es
or
outsl
add
jno
mov
ret
mov
xchg
cltd
xor
enter
sub
je
xchg
cmpsb
std
cmp
aaa
lods
sub
xchg
sbb
mov
jg
arpl
lret
dec
inc
js
cmp
not
nop
xchg
adc
cmpsb
jle
outsl
stc
js
out
nop
add
addr16
adc
ror
mov
dec
popf
xor
mov
popa
dec
pop
out
fisubrs
mov
call
jae
repz
xchg
mov
jge
jno
dec
lods
notl
jecxz
push
add
and
sbb
jl
sub
insb
es
fldenv
nop
je
lret
cmpsl
jns
out
stos
dec
scas
and
jb
fwait
or
nop
mov
in
rolb
fiaddl
jae
andl
movsl
mov
xchg
inc
push
jmp
pop
mov
stos
jo
je
push
popf
ja
mov
leave
stos
repz
movsl
in
mov
sahf
sbb
lret
xchg
xor
fldenv
out
pop
hlt
jb
xchg
cltd
aad
sbb
iret
mov
iret
mov
mov
sub
ret
mov
aas
out
sbb
sub
movsl
jl
lods
daa
mov
pop
pop
and
jb
sbb
sub
divb
and
hlt
xchg
aam
imul
mov
clc
mov
jmp
out
in
popa
int3
dec
idivb
ret
or
mov
pushf
pushl
rcrb
mov
rcr
mov
mov
lods
in
ret
icebp
outsb
mov
lahf
lods
sub
cmpsl
mov
inc
fadd
mull
pop
shrl
les
push
cmp
fnsave
push
and
mov
cld
xchg
jge
sbb
mov
mov
adc
push
popl
xchg
sbbb
cmpsb
xor
pop
hlt
inc
mov
ja
pop
lret
ljmp
aaa
and
in
fs
inc
std
arpl
call
cmp
clc
add
dec
stos
aas
jmp
mov
pop
movsl
shr
jo
gs
jecxz
sarb
addr16
adc
jecxz
sbb
sub
mov
xchg
pushf
cli
dec
test
xchg
es
xor
inc
add
mov
adc
xchg
popf
test
sub
sub
pop
cmp
loopne
rcrb
or
jne
mov
mov
in
add
out
xor
stos
mov
adc
adc
popf
popa
cwtl
push
cs
out
add
xchg
mov
mov
dec
ret
icebp
stos
or
test
addl
or
sub
mov
dec
cs
inc
int3
xchg
push
adc
int3
push
jb
push
fs
mov
stc
inc
cmp
and
rcrb
xchg
fdivrs
scas
mov
es
pushf
mov
xorl
rcr
icebp
adc
mov
cmp
sub
jmp
sub
imul
push
stos
sub
cmpsl
and
test
pop
push
fisubrs
into
gs
jmp
xchg
jle
shl
inc
xchg
aaa
cmp
xchg
lahf
mov
jl
aas
ret
leave
cmp
sbbb
je
out
add
jo
movsb
cwtl
inc
inc
insl
nop
cs
dec
dec
or
or
into
sub
mov
xor
pusha
in
fwait
aad
mov
popf
fstl
out
ds
or
inc
lea
and
fsubrs
mov
xorb
mov
stos
lret
addb
aad
bound
push
xchg
out
inc
xor
cmp
lock
push
lods
outsb
rcr
lock
pop
insb
cmp
repnz
sbb
add
sbb
call
mov
add
or
shr
add
mov
push
and
push
cmc
fdivrs
pop
rcrl
loopne
sub
lcall
pop
mov
lods
sub
xor
xchg
mov
pusha
add
xchg
push
or
sbb
cli
and
cmpsl
sbb
xor
icebp
fpatan
pop
cli
add
incb
pop
mov
cmp
loope
mov
jnp
out
lods
idivl
push
jmp
aam
mov
lds
aas
xchg
mov
mov
and
and
mov
xchg
cwtl
jae
aaa
cwtl
or
imul
pushf
movsl
lea
and
fcompl
loopne
fwait
cmp
adc
popf
push
les
ret
aam
jb
lcall
adc
imul
mov
pop
fildl
dec
je
add
sub
cmp
cltd
push
loop
movsl
cmc
cs
pop
and
cld
cmp
js
sahf
es
mov
fnstcw
arpl
adc
cwtl
cwtl
popf
and
mov
pushl
and
leave
lds
xchg
or
add
fbld
dec
mov
mov
sub
lods
int
or
bound
xor
mov
pop
xor
push
dec
imul
fs
iret
sti
sbb
clc
js
rorl
push
adcb
add
lods
movsl
xchg
sub
stos
or
outsl
inc
push
jne
mov
aaa
or
pop
add
push
movsl
aad
xchg
xchg
adc
ds
jns
and
jns
dec
lcall
jae
add
movsb
sub
push
pop
das
ljmp
arpl
fwait
jo
jbe
mov
mov
lret
daa
bound
add
jbe
out
pop
add
add
jl
push
scas
fadd
loopne
js
cmpsl
into
jae
cmpsl
outsb
popf
jl
sbb
jg
mov
add
pop
cmp
jbe
or
xchg
push
lret
scas
dec
mov
in
movsl
adc
push
lods
dec
inc
dec
xchg
mov
call
xor
and
js
stos
inc
inc
xor
pop
es
mov
mov
sub
and
cmpsl
aam
loop
xor
out
stc
xlat
pop
call
mov
ret
sbb
pop
clc
and
movsb
jl
mov
and
pop
jb
sbb
jle
rorl
and
sbbl
xchg
leave
dec
adc
mov
sbb
mov
inc
in
aam
adc
lret
or
andl
sbb
mov
cltd
push
mov
arpl
lcall
jne
lret
movsl
cmpsb
adc
or
or
test
idivb
lret
dec
cmp
and
mov
dec
and
mov
xor
or
xchg
jbe
jge
push
xor
arpl
in
out
inc
cmp
jne
outsl
scas
rorl
subl
and
lds
mov
cwtl
lret
data16
fsubrs
inc
and
mov
xlat
dec
insb
aad
sub
xor
jp
jne
in
cmpsl
add
mov
xor
mov
inc
fildl
and
mov
lahf
ljmp
out
xlat
sbb
lret
xchg
sbb
adc
imulb
lahf
jnp
sbbb
and
pop
mov
xchg
outsb
call
cmp
pop
inc
xchg
hlt
stos
push
xchg
xor
jp
mov
jnp
lret
insl
scas
cmp
aam
sub
outsl
push
or
xchg
aam
jbe
adc
adc
in
stc
pop
sbb
pop
adc
int
jp
inc
ss
movsl
pop
mov
dec
jp
out
das
lods
and
shll
les
aad
sub
add
out
jecxz
cli
or
inc
xor
and
dec
and
cmp
mov
nop
call
sbb
pushf
push
cwtl
push
xchg
adc
dec
mov
sub
pop
lahf
xchg
push
loop
mov
clc
lods
jmp
dec
ret
ss
clc
xor
jo
mov
mov
insl
jl
push
jb
bound
fidivs
rorb
dec
ret
lcall
int
or
sbb
daa
je
jle
or
in
pop
movsl
push
pop
xchg
jle
xchg
pop
mov
dec
dec
stos
or
add
dec
nop
add
mov
dec
lret
popa
stos
mov
mov
cli
mov
inc
std
lret
or
lret
dec
rcll
iret
xor
pop
adc
dec
dec
bound
fists
mov
out
test
sub
test
pop
mov
cli
jecxz
cs
movsl
mov
mov
test
aaa
fnstenv
test
xor
popa
sbb
and
push
push
pop
lahf
repz
sub
repz
stos
arpl
insb
lods
in
mov
adc
xchg
push
mov
clc
dec
add
inc
sbb
adc
in
mov
aad
sbb
ret
mov
sbb
mov
cmpsl
mov
pop
or
negl
xor
mov
push
push
mov
pop
out
loopne
add
adc
xchg
or
dec
sub
int3
jecxz
sarb
loope
mov
add
mov
fwait
ds
outsl
dec
scas
stos
shl
xlat
or
jns
and
fwait
push
loopne
xor
lea
mov
aam
cmp
aaa
xchg
mov
mov
mov
movsl
mov
andb
mov
cmp
stos
movsl
pop
pop
adc
cwtl
iret
jl
sti
daa
aam
inc
jl
xor
in
stos
sub
test
stc
pop
dec
rcll
stos
mov
repnz
or
aam
fmul
pushf
dec
pop
add
pop
add
fstpl
stos
fs
ret
jecxz
mov
pop
lods
fisubl
push
sar
inc
subl
cmp
pop
jg
xor
mov
add
in
leave
cmpsl
mov
mov
fdivr
rol
or
lret
lods
push
jle
dec
out
push
and
dec
lods
mov
xor
mov
or
repz
dec
pop
cltd
dec
jg
sbb
test
scas
outsl
adc
sub
shrl
cltd
or
mov
aam
negl
xor
test
mov
scas
push
mov
sarb
bound
jnp
jp
cli
fisttps
or
adc
inc
add
dec
cmp
lret
cmp
pushf
mov
cmp
in
call
inc
push
shll
outsb
out
popf
scas
sbb
ds
mov
pop
lahf
sub
xchg
add
xchg
test
jecxz
mov
inc
imul
mov
mov
mov
stc
aaa
leave
inc
pop
mov
pusha
andnps
fcoml
xor
test
testb
popf
sub
dec
scas
mov
test
or
stc
ret
and
test
jbe
inc
insb
pop
push
jo
cwtl
sub
add
pop
xor
rcl
push
movsb
repnz
mov
data16
sahf
push
jno
jecxz
pop
iret
and
xor
sub
pop
fstpt
xchg
test
test
add
clc
or
nop
je
icebp
pop
jbe
insl
mov
xlat
mov
sbb
outsl
jo
inc
arpl
jle
repnz
xor
movsl
pusha
sub
sub
pop
repz
push
sub
iret
mov
ret
iret
and
call
mov
fsubrl
pop
cltd
in
push
nop
sti
popa
je
andl
jmp
add
addl
sbb
jge
out
jmp
xchg
test
int
mov
rol
int3
cmp
mov
leave
xchg
and
adc
fucom
lahf
pop
and
cmp
and
inc
pusha
mov
jnp,pt
rcrl
std
movsl
sbb
pop
lds
pop
pusha
test
ror
fisubs
das
cld
andb
jp
ljmp
mov
jo
dec
fcmovu
xchg
and
inc
dec
jge
sbb
add
repz
repz
aas
mov
inc
int3
dec
jge,pn
fld
daa
ds
fsubl
enter
addr16
lcall
ss
lahf
mov
clc
mov
dec
adc
jo
cmp
dec
dec
icebp
imul
pop
jae
and
mov
sti
outsb
push
jmp
mov
cmp
mov
insl
mov
jno
loope
xchg
mov
jecxz
dec
mov
aad
notb
frstor
imul
fadds
lods
nop
mov
arpl
xchg
testl
ficoml
push
fldt
inc
and
jge
pop
xchg
pop
pop
aaa
cli
add
jecxz
int3
nop
sub
fidivrs
push
aaa
mov
enter
fdivp
cmp
les
das
aam
enter
test
cmp
lea
xor
scas
xor
lock
add
jl
out
inc
push
cmp
jb
xor
push
js
test
add
xchg
xor
mull
aam
mov
adc
and
nop
cld
pop
stos
fwait
test
out
gs
aas
dec
jg
stos
xor
pop
in
lods
andl
cmp
fstps
movsb
xchg
pop
jl
lds
xchg
rorl
cmp
jb
pop
leave
mov
push
loopne
xchg
or
stc
negb
ja
xchg
add
sub
inc
fimuls
xlat
pop
dec
push
or
dec
subl
jns
nop
test
leave
testb
jbe
adcb
test
sahf
sbb
lcall
cmp
aas
fsubr
push
das
mov
out
adc
cmp
mov
call
out
jge
add
subl
xor
imul
leave
lods
push
pop
push
sbb
adc
push
add
dec
add
rcr
arpl
add
inc
jl
sbbl
push
cmp
arpl
pushf
in
fdivrs
inc
roll
movb
decb
pop
push
mov
or
inc
movsl
out
loop
or
dec
clc
cltd
mov
cmp
lods
movsb
imul
nopl
push
es
pop
cwtl
repnz
jnp
jmp
push
sub
push
sub
push
mov
mov
lret
mov
pop
sbb
insl
ret
stc
push
inc
or
and
icebp
dec
jl
jmp
jl
cmc
lods
dec
adc
stos
mulb
test
adcl
cli
arpl
sbb
cli
sbb
dec
mov
aas
ja
enter
cmp
jmp
add
adc
sub
out
cmp
mov
or
mov
and
inc
mov
pop
sbb
adc
out
js
lods
inc
add
ja
xchg
pop
pop
xchg
or
adcl
inc
leave
push
add
mov
xlat
fdivrl
rcrb
xchg
out
shll
cmpsl
bound
std
pop
test
add
pop
ret
xchg
pop
inc
ja
sbb
outsl
add
call
lret
or
sub
add
cld
jnp
ret
push
call
xor
xchg
xor
dec
mov
scas
inc
pop
pop
sbb
xor
outsb
test
mov
shlb
mov
call
mov
dec
subl
shrb
into
jae
push
cmp
cli
mov
push
and
shrl
inc
xor
mov
lret
jne
xor
mov
mov
mov
mov
add
iret
push
adc
cmp
fcoms
sahf
lcall
dec
enter
inc
sub
push
xchg
mov
mov
fwait
add
rcrl
popa
shrb
insl
xlat
ds
fs
dec
mov
pop
popf
sub
push
inc
dec
ret
cmp
loope
in
push
mov
fcomip
mov
inc
test
loope
je
fcompl
nop
test
clc
test
jmp
jnp
rol
pop
loope
sbb
jl
lea
mov
mov
xlat
mov
sub
dec
mov
add
dec
je
in
push
fstl
or
push
data16
leave
test
add
outsb
aaa
sub
adc
jae
popa
mov
add
scas
iret
test
pushl
or
cmp
cltd
je
push
fs
lret
outsb
negl
clc
inc
popl
cmp
imul
pop
fsubs
rorb
mov
or
push
movsb
lcall
cmp
jnp
jb
cltd
pop
push
shl
inc
lods
sbb
jo
mov
out
out
lods
mov
sbb
dec
and
dec
hlt
shrb
sbb
pop
out
fstl
cmp
test
loope
jmp
xchg
mov
push
scas
out
inc
add
outsb
push
movsb
popa
imull
add
xor
mov
scas
xchg
xchg
mov
out
inc
movsl
sar
xor
jns
sbb
inc
out
ja
int3
call
out
pop
ja
mov
sbb
push
pop
mov
mov
and
fdivrs
iret
mov
or
out
adc
loop
xchg
sbb
jnp
aas
lods
mov
adc
mov
or
cmp
out
movsb
lahf
xchg
jl
and
cmp
and
into
int3
outsl
push
int3
sbb
mov
push
adc
inc
outsl
xor
inc
mov
adc
iret
addb
test
mov
mov
in
aaa
int3
xchg
fidivrs
mov
stos
nop
cmc
inc
or
sbb
dec
aaa
xor
pop
adc
mov
pop
frstor
mov
mov
add
enter
adc
and
movsb
push
and
adc
adc
imul
cmpsl
dec
jmp
into
add
mov
mov
xlat
dec
in
push
inc
xor
jo
in
lods
and
dec
pop
jne
mov
cmp
fxch
sub
dec
push
stc
dec
sub
xchg
je
sbb
in
sarb
call
fstp
mov
std
and
jne
ljmp
scas
mov
int3
xchg
xchg
aad
jmp
inc
cmp
mov
data16
ret
cld
dec
fcomps
pusha
adc
inc
leave
sbb
xchg
icebp
ljmp
jge
add
inc
les
shrb
push
lahf
fsubp
push
sbb
xlat
mov
xor
pushfw
inc
and
cmp
sub
shl
sub
and
mull
inc
js
aas
movsl
out
loop
test
ljmp
inc
mov
icebp
mov
outsb
mov
stos
mov
scas
pusha
mov
stc
push
call
es
inc
xchg
scas
inc
loop
test
xchg
dec
push
adc
pop
push
cmp
xchg
pushf
sbb
xor
test
test
fdiv
push
std
cltd
inc
leave
jbe
insl
cmp
jnp
or
push
lret
add
ficoml
lahf
ja
negl
scas
sub
sub
mov
shl
mov
jne
sbb
xchg
andl
cmp
aaa
adc
cmpb
fcomps
xchg
sbb
or
mov
and
mov
test
jno
pop
cmp
aam
mov
mov
xchg
and
push
xchg
push
and
arpl
lods
mov
in
push
std
lcall
iret
dec
aaa
cmp
pusha
std
or
movsl
lds
enter
mov
or
fidivrs
adc
sbb
aad
shrb
fstps
xor
push
mov
out
or
adc
mov
sub
or
mov
xchg
mov
in
jae
pop
inc
pushf
push
mov
ds
add
sbb
mov
xlat
pop
mov
jno
outsb
xchg
mov
js
push
dec
xor
sbb
dec
pop
adcb
lock
xchg
xchg
testl
cmpl
add
inc
pop
leave
mov
rorl
jecxz
fdivrl
mov
jae
jns
cwtl
dec
fbstp
psadbw
sbb
push
xor
les
cmp
lea
aas
loop
jg
xor
cltd
cmc
cmpl
and
neg
sbb
adc
push
cltd
push
test
iret
sub
loopne
in
add
mov
lea
pushf
leave
rcll
push
xor
fs
inc
das
sub
ja
pop
popf
xchg
pusha
mov
xchg
dec
test
inc
in
pushf
pop
icebp
and
mov
fimull
call
xor
fdivr
adc
and
xchg
adc
aas
cmp
arpl
inc
daa
pop
xor
addr16
pop
daa
stc
cmp
iret
add
enter
xchg
call
and
add
pop
sbb
push
lret
leave
loop
insb
pop
out
sub
fscale
test
inc
mov
in
in
dec
jbe
aas
jo
jne
mov
push
inc
aas
sub
cmpsb
add
stos
loopne
lret
loopne
call
scas
into
adc
rcrl
out
push
aam
xchg
mov
insl
cmp
stc
lcall
push
int
in
inc
xor
ljmp
cmpb
fs
fdivrl
test
adc
mov
sahf
ss
loop
inc
inc
out
cmp
push
inc
push
xchg
in
xchg
and
insl
push
mov
stc
sbbb
inc
ficomps
lcall
push
scas
inc
cmp
jecxz
icebp
xchg
dec
adc
lret
imul
adc
out
mov
mov
ret
sti
adc
loope
shlb
xchg
sbb
fisubrl
sbb
nop
fadds
add
add
push
lret
es
inc
mov
les
fstps
imul
adc
mov
pop
stc
mov
pop
das
push
repnz
ret
repnz
mov
dec
sbb
stos
adcb
das
loope
jns
ljmp
sub
pop
sub
xchg
stos
mov
pop
dec
pop
sbb
jg
repnz
scas
fimull
push
mov
push
mov
push
hlt
xchg
lea
cwtl
mov
cwtl
imul
ret
jmp
sbb
cmovp
mov
iret
pop
add
mov
xchg
insb
movsl
cld
mov
dec
or
cmp
in
ret
mov
jmp
in
das
inc
xchg
testl
xchg
push
and
sbb
repz
pushl
outsb
jns
push
das
nop
fs
jns
aad
in
fadds
jp
push
mov
adc
sub
and
lret
mov
sbb
lahf
mov
dec
pop
cld
lret
lock
dec
sbb
jge
and
xchg
mov
xchg
sub
ja
lcall
sub
insl
sbb
ds
ret
sti
js
mov
mov
cmp
dec
add
lahf
das
mov
jno
loope
subl
clc
xchg
test
jo
fiadds
jbe
insl
das
shll
jns
xchg
jge
pop
sub
and
test
mov
in
push
jb
jp
mov
xor
movsb
xor
sbb
pop
je
inc
les
fs
mov
adc
loopne
es
lret
xchg
xchg
push
pop
mov
repz
test
mov
add
mov
lret
inc
jl
push
dec
ret
enter
test
jnp
pop
jnp
in
imul
xor
adc
mov
mov
std
or
add
dec
nop
jnp
sub
jb
addr16
mov
jl
mov
and
mov
mov
cmp
sub
shrl
lcall
adc
add
jae
cli
ss
adc
xchg
loop
push
dec
mov
xor
insb
mov
leave
aaa
rol
or
sbb
stos
movsl
nop
test
dec
daa
jmp
push
punpcklbw
lds
inc
xchg
imul
mov
leave
aas
cmp
adc
push
sarl
mov
add
scas
fwait
pop
shl
enter
subb
sbb
shrl
jb
outsl
and
repz
push
jmp
arpl
loope
pop
ss
mov
bound
call
addr16
add
cmpsl
mov
cmpsb
nop
sub
sahf
test
push
xchg
mov
repnz
inc
lret
cli
leave
lcall
sbb
add
insb
dec
dec
xor
mov
or
repnz
ficoms
ss
loopne
leave
xchg
and
xchg
inc
jge
inc
xchg
sahf
addl
cmpsb
arpl
popa
mov
ja
sbb
mov
std
mov
or
insl
fdivrs
out
dec
cs
jae
fs
iret
test
std
ss
mov
scas
lcall
cld
test
sub
xchg
in
adc
cmp
cmp
leave
rorl
aaa
jmp
dec
push
into
mov
sbb
xchg
stos
sub
cmp
sbb
xor
and
push
push
push
pop
mov
mov
mov
xor
mov
cli
add
jo
popa
jne
icebp
lods
jo
jno
scas
fldenv
mov
loope
ja
movsb
jecxz
xchg
out
int
js
loope
add
ret
incb
data16
stos
pop
inc
jno
rcl
mov
sub
cmp
pop
ret
and
inc
daa
push
cmp
ds
and
ljmp
out
cli
add
jle
and
fwait
mov
jg
push
stos
imul
or
movsbl
dec
cmp
jae
rorl
xchg
in
movb
in
cltd
aad
mov
add
sbb
adc
mov
leave
negl
push
iret
into
lret
cltd
mov
jno
cmpsb
lret
lods
jg
mov
subl
mov
xchg
inc
mov
xlat
je
mov
aaa
add
jecxz
mov
jl
mov
adc
push
cs
xchg
test
insl
popf
jb
iret
pushl
jmp
adc
int
stos
call
test
mov
jg
add
pop
rcll
int3
cmpb
mov
mov
cmpl
insl
sar
adc
andl
outsb
and
ret
hlt
stos
xchg
stos
and
div
xchg
and
ljmp
pop
stos
mov
push
xor
xchg
rorb
or
fdivrl
sbb
xchg
aad
je
ror
ja
add
lahf
iret
cmp
adc
hlt
inc
out
dec
test
out
aad
pop
add
ror
lret
insl
repnz
inc
mov
xor
arpl
ror
and
cmp
mov
mov
rorb
mov
sti
stc
xchg
push
aad
mov
mov
and
pop
pop
sbb
push
adc
inc
orb
fistl
jns
add
call
cmp
mov
sahf
push
cld
add
iret
adcb
fs
std
lds
jmp
cltd
lret
sbb
mov
push
sub
iret
scas
jmp
fld
dec
pop
lret
daa
out
pop
ret
cld
jo
rcll
scas
ds
inc
ss
in
adc
sub
push
xor
je
xchg
xor
jge
popf
ret
daa
dec
push
push
adc
sub
in
lcall
sbb
pop
lret
xchg
cmp
aas
xchg
lcall
lds
add
push
xor
pop
push
fldt
inc
scas
mov
or
mov
cmc
lahf
sbb
lcall
or
jl
push
sbb
scas
clc
cmp
or
test
adc
mov
loopne
mov
lock
inc
out
adc
aas
mov
enter
sbb
jecxz
mov
cld
inc
in
pop
stc
bound
xchg
sub
sub
pop
cmpsl
out
sahf
add
in
inc
mov
imul
nop
bound
subl
in
leave
scas
lret
add
hlt
cmp
or
pop
inc
aad
mov
out
aam
pop
mov
je
loope
xchg
repz
jge
sub
out
rclb
es
call
loop
jbe
mov
xchg
mov
sub
adcl
test
mov
jmp
insb
ffreep
stos
lods
inc
out
icebp
pop
sbb
adc
pop
inc
sbb
xor
jl
es
mov
mov
subl
jle
inc
xchg
repnz
xor
inc
pop
aad
and
sbb
lods
lcall
aas
jb
sbb
shlb
cmp
arpl
dec
ss
cmp
add
cmpsl
pop
xchg
mov
lds
pusha
lock
das
jo
or
sbb
xchg
jno
and
out
push
out
insl
jecxz
mov
repnz
add
inc
lods
inc
pop
movsl
mov
jno
cwtl
cmp
push
stc
xor
pop
arpl
shl
or
fstps
mov
mov
push
mov
xchg
and
and
notb
aas
push
call
and
outsb
mov
mov
nop
lcall
lret
out
jmp
in
mov
hlt
push
xchg
or
mov
push
call
jmp
and
dec
pop
xor
aam
addb
sub
adc
mov
outsb
lahf
loop
jmp
cmp
jmp
insb
pop
dec
cmc
xor
mov
inc
mov
outsb
imull
xorb
rorb
insb
into
sub
pop
cmpsl
mov
cmp
cmc
add
cmpsb
lock
cmpb
mov
out
jne
mov
rcrb
and
call
mov
adcb
out
dec
les
pop
pop
push
sub
fldenv
dec
popa
cmp
test
repnz
data16
xor
movsl
in
clc
sbb
or
movsl
js
and
les
push
fstpt
les
inc
jb
adc
pop
mov
int3
mov
sahf
sbb
pop
mov
adc
jg
orb
or
xchg
imul
es
fcoml
dec
out
and
cltd
push
test
lods
sbb
repz
push
and
fnstenv
aam
stos
add
loope
pop
mov
cmp
imul
lock
pop
jecxz
inc
xor
lret
xlat
int3
ss
gs
es
fstp
mov
insb
push
lcall
scas
arpl
inc
je
push
push
rorb
xchg
xchg
xor
stos
push
xor
int
push
ds
shl
xor
mov
shll
fwait
jns
fwait
loope
dec
lods
fsubl
je
aad
or
jle
lcall
aad
les
pop
inc
jne
and
imul
pop
adc
inc
faddp
mov
lods
cmc
xlat
rclb
add
sbb
mov
into
in
fnstcw
lock
pop
fnstenv
sbb
inc
inc
mov
mov
ret
jmp
roll
lock
jmp
andl
mov
out
jmp
xchg
pop
inc
pop
daa
arpl
add
sbb
mov
push
stos
push
add
or
dec
std
jge
mov
inc
lods
popa
mov
jle
into
mov
pusha
xchg
fwait
ret
mov
or
je
sahf
int3
clc
dec
outsl
fsubl
jg
test
push
mov
mov
or
hlt
leave
add
sbb
inc
or
add
daa
loop,pn
ljmp
dec
aas
push
fwait
cmp
push
dec
jp
arpl
pusha
movsb
xor
out
addl
cmpsl
jns
insb
pop
shll
aaa
je
push
cld
rclb
mov
mov
mov
test
pop
push
inc
icebp
adc
cltd
add
sbb
outsb
or
dec
sub
sub
and
xor
mov
test
leave
lret
flds
addr16
mov
mov
sbb
fnstenv
push
lock
jecxz
adc
push
sub
push
xchg
mov
in
push
fisubs
push
std
mov
fiaddl
mov
fstl
outsl
sub
arpl
mov
jns
sub
mov
ljmp
rclb
ja
xchg
pop
sarb
ja
pop
jae
dec
insb
cmp
mov
mov
imul
repz
add
ret
cmp
pop
inc
or
ljmp
popa
movb
lret
adc
ja
outsl
hlt
mov
enter
lahf
cmpsl
sarl
pop
lods
ficomps
xor
popl
and
xor
mov
xlat
fnstcw
cmpsl
cmc
imul
jno
cmp
bswap
stc
mov
in
dec
ficompl
and
dec
jle
add
mov
pop
mov
dec
mov
int
lock
xchg
mov
lahf
cmp
dec
shr
lods
in
jnp
out
push
sbb
dec
and
xchg
mov
mov
mov
popa
push
sti
scas
xor
int
jecxz
push
and
jle
movsb
in
jge
jecxz
iret
incl
jl
movsl
mov
jge
cmp
arpl
push
cmpsl
mov
push
adc
adc
dec
pop
in
dec
lcall
gs
sbb
jle
movsb
mov
add
insl
frstor
fs
mov
push
mov
mov
ret
xchg
shrb
xlat
jp
and
or
adc
in
scas
popf
test
mov
sbb
fistpll
cmp
iret
in
sub
push
push
cs
inc
inc
sbb
ret
pop
stos
lock
sub
roll
aam
add
clc
push
jns
std
cld
pop
jp
das
repnz
inc
adc
cli
jns
sub
dec
adc
mov
in
out
adc
inc
lcall
and
ret
jp
fldcw
dec
into
sub
fidivs
icebp
movl
stc
inc
cmp
add
sbb
lea
ja
mov
mov
rcrb
xchg
jnp
gs
fdivrs
leave
je
pop
fcoml
daa
jp
mov
cmp
fcomps
mov
imul
shlb
js
mov
movsb
pop
sub
bound
lret
in
loop
cmp
out
mov
sbb
iret
jmp
icebp
iret
addr16
or
mov
add
addl
aad
subl
rcrb
jecxz
xor
ljmp
lcall
mov
push
push
xor
jecxz
jns
pop
xor
sbb
arpl
js
and
xor
inc
pop
rcrb
addr16
xor
sbb
xchg
fcompl
dec
mov
mov
cmp
cwtl
adc
sahf
pop
dec
imul
vphaddubq
push
fildll
cmpsb
and
push
jne
lret
add
push
xor
cltd
je
xchg
and
popa
add
add
push
sub
cmpsl
pop
mov
js
mov
in
push
jmp
f2xm1
imul
mov
stos
mov
stos
mov
dec
pop
push
in
outsl
int3
jle
pop
inc
iret
lds
iret
stc
push
cmpsb
ja
or
push
mov
scas
jae
cmp
pushf
aas
sbb
fwait
adc
xchg
iret
mov
cmc
mov
xor
mov
scas
mov
out
fisttps
ret
push
outsl
cmp
imul
dec
mov
shlb
jle
push
mov
arpl
jmp
outsl
inc
push
enter
sbb
pop
ret
ficoms
push
notl
jo
mov
mov
out
and
sub
mov
jge
fmull
adc
mov
mov
mov
jmp
mov
addr16
adc
pmaddwd
lea
mov
inc
inc
push
loopne
adc
fimull
ret
mov
adc
loop
push
push
xchg
inc
fnstcw
pop
inc
jae
out
sub
jp
std
call
fcomps
es
fstl
pop
jns
movsb
add
orb
pop
addb
mov
loop
mov
push
push
push
pop
mov
jmp
xchg
cs
fs
sbb
in
lds
lret
xchg
ss
xchg
jo
bound
pushf
mov
push
mov
mov
lock
imul
or
xor
add
ljmp
out
push
cmp
sti
sbb
ds
outsl
divl
xor
cmp
dec
dec
mov
dec
cmp
fdivl
sbb
test
jno
jg
in
out
pop
cmp
jns
pop
push
call
movsl
lcall
repnz
jnp
mov
xchg
xor
movsl
daa
ret
or
mov
pop
lea
xor
dec
mov
pushf
and
adcb
daa
fiadds
lea
dec
sbb
lea
sbb
mov
mov
lock
xchg
notl
fdivrp
mov
or
sbb
scas
or
iret
pop
insb
cmp
add
fninit
adc
add
jg
push
push
cmp
sbb
mov
mov
xchg
bound
ljmp
rcll
pop
or
push
mov
hlt
inc
sbb
xchg
cld
in
push
sahf
add
jle
dec
sub
in
stos
subb
inc
out
sub
or
leave
pop
fdivr
sub
push
jle
adc
loopne
out
ds
pop
dec
or
orl
adc
iret
mov
cs
psllw
out
fidivs
cmp
ds
in
outsb
lret
inc
dec
push
lret
mov
adc
shll
inc
or
imull
sbb
push
pusha
inc
ret
pop
aad
mov
adc
cmpsl
mov
jge
cltd
fldenv
or
jmp
jne
inc
jmp
lret
shr
data16
in
pop
fwait
clc
cmp
out
loop
cwtl
insl
fcmovb
cmpsl
int3
xchg
jae
test
movsl
out
stos
dec
sub
cmpsl
and
push
cli
cmc
daa
pop
test
lods
mov
xchg
leave
pop
or
inc
dec
xor
or
push
add
add
add
das
add
aaa
leave
mov
in
pop
bswap
out
sbb
gs
sbb
cmc
push
add
inc
popa
cmp
lods
iret
add
sbb
mov
jmp
cmp
shrl
imul
jle
sub
call
cmp
fnstsw
inc
stos
fistps
fsubrs
or
add
pushf
dec
cmp
xchg
cmp
jae
mov
lds
repz
pop
pop
ljmp
pop
addr16
pop
cmc
in
rorl
or
jecxz
iret
and
aas
pop
mov
pcmpeqd
daa
jnp
pop
mov
jl
and
in
xor
loop
out
std
sub
dec
mov
sahf
adc
jg
popf
inc
int
pushf
movsl
jge
mov
aas
or
mov
push
int3
mov
lret
test
pop
mov
ficompl
and
lret
cmp
lahf
daa
clc
cld
pop
mov
adc
jmp
cmc
stc
ret
fisttpl
pop
cmp
clc
jecxz
mov
mov
dec
loope
bound
fucomp
into
jb
mov
mov
mov
sbbl
cmp
stos
pop
sub
mov
fwait
sbb
jmp
scas
out
fcom
mov
push
in
iret
sub
in
xor
dec
adc
repnz
sbbl
lods
push
add
inc
sbb
outsb
cld
and
pop
jmp
lods
cmpsl
aas
clc
les
jecxz
cld
mov
mov
jnp
mov
lods
loope
outsb
flds
or
pop
scas
push
shrb
inc
subl
dec
lods
sub
mov
cmp
adc
scas
cmpsl
sahf
lock
add
outsb
popf
cmp
xor
sbb
mov
testb
enter
into
adc
mov
lods
push
cmp
mov
fdivr
aad
add
cmp
and
xor
jns
jns
cwtl
add
dec
pop
jl
lock
xchg
push
fildl
ljmp
cwtl
push
pop
jne
repnz
cltd
insl
in
jbe
aam
jg
xchg
test
repnz
imul
pop
mov
add
aas
pop
shl
not
and
mov
xchg
push
sbb
subl
or
dec
add
out
push
mov
xor
add
sub
imul
cmp
jmp
mov
std
iret
mov
mov
dec
xchg
or
inc
jb
adc
testb
outsb
fisttpll
popa
stos
stos
jle
and
cmc
bound
fistpll
dec
and
addr16
cli
sbb
mov
out
and
and
dec
jmp
icebp
jmp
mov
call
push
ljmp
xchg
cltd
mov
divb
or
jmp
out
jg
loop
or
mov
push
lahf
out
xchg
xor
es
push
mov
out
lods
imul
stos
pop
ret
jge
aas
stc
iret
movsb
mov
adc
inc
mov
idivl
xor
xchg
jl
sub
mov
jg
cmp
lret
xchg
dec
adcb
stos
pop
pop
cmc
push
clc
mov
gs
faddp
xchg
ss
ficomps
push
loop
clc
inc
cmp
jmp
pop
adc
xor
adc
fs
aaa
cmpsb
std
insl
jl
push
and
and
dec
jge
sbb
adc
xor
mov
aaa
mov
lea
testl
jbe
mov
fxch
call
ret
adc
sbb
mov
jmp
test
pminsw
rcrb
ret
pop
scas
xor
arpl
in
inc
dec
movsb
sti
and
test
sarb
fdivrl
imul
roll
popa
ret
mov
xchg
and
pop
lods
pushl
stos
or
jge
jae
cmc
sbb
mov
in
lock
jae
loope
mov
shl
out
mov
dec
fists
adc
dec
lds
jp
dec
aas
mov
call
adc
and
outsb
inc
fnstsw
and
pop
xor
mov
inc
jae
andl
dec
mov
sbb
jmp
sbb
push
sbb
cltd
dec
adc
or
push
pop
mov
in
roll
sahf
clc
xor
test
dec
cltd
ja
xor
rcrl
pop
jecxz
push
inc
push
xor
ret
test
mov
fisttpll
sub
rorb
xchg
fs
mov
iret
test
push
popa
test
gs
cmpl
mov
jne
lods
js
loope
mov
jmp
cs
adc
cli
push
inc
sbb
cltd
rcrb
das
sub
dec
loopne
vrsqrtss
sti
aad
dec
xor
xor
lods
xchg
mov
sub
imull
mov
cmp
mov
shll
nop
scas
je
dec
xor
popa
mov
mov
es
mov
jge
cwtl
lds
push
sub
sub
jb
push
inc
mov
popf
sub
les
aaa
sub
je
popa
push
mov
push
std
fwait
inc
test
lcall
rcl
push
leave
mov
add
fisubs
jne
call
std
adc
jbe
cmp
repnz
and
int
sub
push
xor
jns
xchg
loope
popf
sti
stos
jnp
and
or
outsl
xchg
lret
or
add
insb
mov
and
into
adc
push
cltd
popa
mov
arpl
sub
sbb
mov
mov
add
arpl
mov
inc
push
add
pop
bound
fdivl
andl
flds
out
insb
cmp
and
ds
inc
xchg
rolb
ret
inc
dec
sub
push
stos
fwait
stc
jnp
add
adcb
add
mov
test
in
jo
ds
and
ja
pop
or
ja
ljmp
aad
or
stos
xchg
loopne
lods
xchg
int
addl
push
test
sahf
shll
enter
sub
ja
shlb
and
xchg
in
sub
mov
cmp
pop
loope
testl
dec
int
xchg
ret
adc
sub
mov
sarl
mov
push
push
cmp
jae
xchg
fiadds
pop
push
fdivs
lods
add
cmp
lds
mov
jne
ds
aad
insb
shl
sub
subb
test
push
mov
adc
adc
or
xor
dec
push
jae
fdivrl
push
cmp
lds
dec
mov
add
pusha
movsb
inc
nop
inc
lods
dec
lds
sti
out
and
push
jmp
add
test
mov
pop
outsl
or
dec
and
pop
inc
test
dec
loop
and
dec
scas
test
into
jmp
movsb
lock
lock
adc
cmp
sarl
adc
and
jecxz
cli
call
xor
sbb
sub
dec
mov
mov
test
rorb
outsb
gs
jns
imul
mov
outsb
dec
push
push
sbb
ss
lret
idiv
add
int
call
add
shll
inc
mov
inc
mov
into
jp
sbb
and
aad
sbb
jo
sub
or
pushf
adc
pop
repz
idiv
adc
mov
mov
stos
test
sub
pop
sahf
in
xor
dec
mov
mov
xor
out
jle
iret
mov
negl
std
dec
imulb
jg
and
push
lea
addr16
and
inc
iret
je
scas
or
sbb
dec
daa
imul
sbb
jp
push
in
je
jge
pushf
stc
nop
or
sub
mov
xchg
decb
pop
out
std
inc
ljmp
adc
stc
jne
stos
push
scas
cmp
xchg
jnp
frstor
pop
fs
jb
or
jge
repnz
or
sbb
nop
stc
mov
shl
ljmp
inc
movsl
xchg
mov
aas
call
adc
jno
mov
xor
sub
add
in
cmp
sub
aam
clc
inc
xchg
sbb
fs
inc
hlt
or
jb
fsubrp
ds
sbb
inc
mov
xor
xchg
or
lock
mov
aad
mov
cmc
shll
and
pop
popl
clc
xor
pop
dec
ret
fimuls
cs
sbb
push
es
mov
dec
cmp
into
adc
test
call
lret
incl
mov
mov
cmp
mov
test
jae
push
lret
cmpsl
pop
imul
lret
sub
xor
addr16
sahf
sti
lea
xor
movsb
adc
sahf
mov
sub
dec
sub
in
lahf
fs
cld
sbb
pop
jne
jo
into
test
shr
push
jmp
icebp
push
push
xor
mov
lds
dec
lret
adc
cmp
sbbb
insb
fstpl
xchg
jl
add
in
dec
out
adc
mov
mov
dec
mov
mov
mov
pushf
mov
outsl
test
ja
es
out
fs
les
cld
repz
addb
lock
rcll
movb
mov
outsb
pop
xchg
rol
data16
sbb
dec
push
lea
gs
mov
adc
inc
ljmp
cmp
dec
jae
iret
jmp
mov
daa
mov
fisubrs
sbb
out
sub
scas
mov
mov
test
stc
mov
inc
popa
push
sub
or
imul
cwtl
push
mov
daa
std
dec
dec
test
stos
aaa
inc
fstpt
enter
outsb
pop
jb
push
dec
cmpsl
dec
xlat
cli
push
xchg
or
sbb
jle
fadds
xchg
fisubs
pop
mov
pop
shll
pop
lret
adc
xchg
or
inc
push
into
sbb
push
shlb
inc
sub
incb
sbbb
test
and
fistpl
mull
xorl
in
ljmp
rol
fisttps
pop
stc
sub
mov
mov
icebp
sti
jge
andl
pop
sub
pop
lock
pusha
cmp
pop
lcall
dec
aaa
inc
cmpsb
scas
repnz
inc
sub
mov
or
adc
jmp
shrl
fdivs
int
insb
sub
mov
sbb
mov
lods
jmp
shrl
mov
sub
mov
or
rclb
out
jnp
dec
mov
adc
jbe
rcl
divb
jg
mov
xchg
jnp
lret
mov
ss
jb
pop
cmpsb
aaa
cmp
xlat
adc
ret
dec
ja
xchg
test
mov
mov
iret
cld
cmp
cmp
dec
out
int
test
outsl
fs
cmp
popf
or
and
sar
push
push
push
mov
and
sbb
and
in
int
outsl
mov
or
or
stos
fdivrl
test
mov
xchg
xlat
push
fldenv
jge
lahf
adc
addr16
lcall
xor
add
mov
cmpsl
into
imul
jge
sahf
and
iret
fstpt
pop
dec
pop
jp
mov
jl
push
dec
hlt
xchg
test
lret
imul
xorb
jecxz
adc
jns
dec
push
repz
outsl
pusha
xchg
cmc
dec
add
fucomi
sti
inc
pusha
gs
push
cltd
and
adc
jp
lds
stos
pop
dec
xchg
shll
mov
dec
mov
call
mov
xor
mov
iret
fsts
sarb
shlb
insb
loopne
jmp
rcll
fstpt
sbb
add
or
mov
and
mov
pop
jbe
fucomp
jnp
xor
ss
insb
cs
popa
loopne
sahf
fcoms
mov
rorl
and
or
mov
addl
push
mov
je
push
mov
jp
push
xchg
mov
gs
add
pop
gs
dec
xchg
jne
mov
push
in
jecxz
cli
int
aas
inc
pop
add
lods
test
mov
lahf
cmpsl
dec
cli
jmp
sub
or
sub
inc
jle
lcall
arpl
xor
arpl
ror
outsl
fnstsw
aad
cmpb
sti
push
cmpsb
cwtl
stos
les
in
or
mov
mov
mov
outsl
mov
std
inc
mov
push
in
pop
add
stos
sub
adc
jae
and
mov
fcmovnbe
fucompp
notb
test
lret
leave
ds
sbb
fisttps
aam
push
pop
mov
jp
pop
xor
push
add
dec
adc
mov
in
pop
loopne
dec
add
or
cmp
ret
inc
or
add
lods
xor
inc
mov
hlt
sub
jecxz
ss
sbb
mov
sub
pop
or
leave
push
pop
push
push
push
cmp
cmpsl
sub
aam
daa
inc
cld
xchg
lods
mov
mov
fwait
sbb
push
sbb
pop
imul
mov
xchg
push
int3
xchg
ss
jne
cmpsl
aas
aas
cld
ret
lods
or
mov
roll
lods
and
or
scas
mov
mull
jae
daa
lret
dec
cmpsl
mov
lock
jno
ljmp
inc
pop
pop
fistpll
mov
and
sbb
xchg
repnz
aad
dec
data16
ffree
sti
loopne
scas
inc
out
leave
add
and
out
pop
repnz
jmp
loopne
ficoms
repz
in
or
and
subl
lret
hlt
mov
cmp
adc
jmp
jne
fwait
int
jnp
negb
test
cmp
inc
pop
sub
rorb
lds
loop
mov
daa
nop
adc
cwtl
test
dec
das
pop
jg
pop
testl
pop
stos
cmpsl
movl
lea
pusha
sub
mov
sti
push
push
lret
add
cmp
imul
fs
mov
cli
inc
inc
add
cmp
mov
lds
xchg
xchg
mov
push
xlat
mov
jo
jg
inc
xchg
fidivs
aas
add
mov
test
mov
sahf
dec
mov
imulb
repz
sbb
sub
dec
fisubrs
lcall
ret
test
testl
or
sbb
dec
xor
js
or
jbe
sub
pop
lret
xor
rorl
cmpl
imul
mov
jae
lcall
xor
rcr
xchg
xor
cvtpi2ps
xor
out
sti
xchg
into
xchg
in
cmp
gs
sub
sbb
mov
stos
mov
dec
mov
jb
sbb
cltd
jne
fcoml
pop
negb
outsb
or
mov
loope
dec
jmp
out
imul
jae
lahf
lods
outsb
sbb
adc
inc
dec
out
jnp
test
fcmovu
cmp
jmp
inc
xchg
nop
sahf
icebp
pop
push
stc
stc
add
insb
pop
cmp
dec
push
or
rorb
mov
mov
sti
push
sub
mov
popa
pop
pop
test
loop
lret
in
adc
addr16
sbb
mov
ret
mov
xor
jl
fwait
jnp
xchg
jae
rorb
xor
call
jo
cmp
sbb
mov
pop
mov
push
in
fcoms
icebp
pop
test
xor
imul
pop
push
sub
inc
xchg
test
inc
mov
and
jmp
mov
js
cmc
xchg
pop
hlt
jns
xor
es
rorl
ja
push
push
mov
sub
hlt
mov
pop
into
in
pop
jne
les
cltd
and
pop
in
add
jnp
mov
inc
pop
movsb
lret
and
fdivrl
aas
gs
mov
test
fwait
mov
jge
pop
dec
inc
fildll
lret
mov
lods
sbb
inc
adc
test
add
sbb
xlat
scas
cmp
outsb
sbb
jo
cs
nop
aam
daa
cmp
jno
sbb
add
xchg
mov
sbb
aam
xchg
inc
or
in
dec
sbb
movsl
cmp
sti
repz
dec
dec
mov
sub
push
sub
adc
xchg
sub
psrlq
leave
in
test
and
lret
xchg
das
mov
and
push
scas
iret
dec
je
imul
ds
and
cs
pop
pop
ror
cmp
out
jl
test
cmp
cmp
inc
cmp
sbb
or
sub
test
mov
add
ret
mov
scas
mov
add
ds
jmp
stc
std
cmp
enter
mov
scas
js
ret
fimuls
data16
fisubs
pop
test
sub
loopne
and
or
ss
xor
inc
scas
push
aam
and
mov
shrl
or
hlt
mov
add
lods
and
popf
push
loopne
out
or
mull
inc
jp
adc
jae
stos
sbb
jns
pop
add
scas
dec
int3
daa
mov
adc
or
iret
mov
imul
jl
jecxz
push
cmp
stc
sub
jns
add
push
jp
hlt
jo
sti
push
je
decl
xor
es
or
add
lret
subl
ljmp
cmc
pop
xor
sub
and
mov
mov
lods
imul
fdivrl
out
and
movsb
pop
js
pop
shl
cmp
daa
data16
shrb
std
popa
dec
xor
cmp
sbb
cmpsb
out
pop
dec
mov
fisubl
pop
fs
in
add
pusha
into
movsb
dec
aas
jp
sbb
subb
in
into
or
movsl
push
sbb
jns
fmul
xchg
xor
arpl
popf
fwait
mov
push
popf
fmuls
cli
insb
mov
mov
ret
or
sbb
aaa
nop
sahf
sub
jae
popa
and
stos
ja
repnz
shrb
dec
sub
mov
inc
sbb
movsb
in
mov
mov
mov
mov
jg
popa
lods
dec
mov
xor
mov
mov
fcomps
jecxz
sbb
lret
shll
insb
ljmp
sbb
jne
push
inc
dec
fcmove
test
sbb
lahf
leave
aam
dec
loopne
out
pop
jecxz
push
mov
mov
js
in
sahf
xchg
xchg
mov
xlat
mov
or
sub
xchg
jmp
daa
cmp
aad
inc
sarb
test
xchg
sub
insl
mov
adc
movsb
rcrb
push
xor
add
rcrl
push
mov
daa
mov
xor
xchg
pop
mov
pop
test
int
mov
jno
pop
mov
xor
inc
das
movsl
in
movsb
mov
data16
cld
adc
cmp
push
lcall
mov
sahf
dec
xchg
mov
subb
in
jecxz
movsl
mov
int3
mov
cmp
jno
xlat
jne
bound
stc
xchg
fisttps
je
sub
cs
outsl
push
cmpsb
jecxz
jo
imul
das
mov
test
push
daa
dec
xchg
mov
repz
mov
push
and
adc
add
imul
mov
inc
out
cmp
cwtl
jnp
ss
lcall
aaa
push
xor
mov
mov
rcrb
arpl
dec
pop
push
les
stos
aas
cwtl
dec
jae
mov
scas
ja
ss
fs
outsb
int
adc
cmp
xchg
ret
mov
adc
xchg
stc
insl
in
scas
pop
or
ret
js
mov
jl
fcmovnu
sbb
jno
int
cmp
pop
inc
and
mov
xor
adc
notb
mov
sub
loope
sti
dec
pop
leave
fdivr
test
ret
and
mov
lods
sbb
aaa
push
and
outsb
lret
pop
push
xchg
and
fcomps
pusha
push
fdivrl
sti
pop
mov
pop
inc
jns,pn
ja
stos
fisubs
and
mov
xor
mov
mov
push
sbb
jne
jl
jbe
fsubrs
inc
mov
lods
push
popl
adc
jp
stos
in
addr16
pusha
ror
mov
cmpl
cmp
xchg
lods
xchg
jne
and
xchg
xor
shrl
dec
fldt
adc
push
dec
xchg
jae,pn
leave
stos
imul
sbb
mov
cli
in
inc
sar
jle
into
aad
adcb
add
sbb
or
mov
adc
xchg
nop
xchg
mov
xchg
sub
repnz
xchg
cmp
pusha
rcll
dec
loopne
scas
movsl
data16
mov
ss
popf
pop
std
xchg
inc
mov
push
xor
sbb
ss
pop
mov
pop
leave
addr16
fcoms
ljmp
pop
xchg
xchg
es
add
adc
pusha
jbe
ret
push
aaa
pop
rorl
cmp
pop
dec
inc
nop
mov
push
clc
sarl
xor
pop
pop
adc
test
inc
pusha
in
outsl
rcl
in
xor
popa
xor
and
adcb
sahf
pop
inc
enter
cli
sub
fmull
adc
imul
imul
jg
mov
pop
sbb
fimull
dec
lcall
xchg
inc
push
loopne
loopne
lret
sub
outsb
lcall
pop
push
int
push
fidivrl
shrl
in
xchg
sub
xchg
pushf
stc
movsl
mov
lret
push
inc
and
enter
enter
out
loope
xchg
shll
sbb
pop
sbb
push
mov
jne
lret
jmp
add
jecxz
push
cmp
xchg
sahf
lods
dec
popa
rcl
pop
out
add
mov
out
movsb
xor
ret
sbb
mov
sub
gs
and
push
dec
xor
je
sub
jns
xchg
loope
cltd
add
lret
enter
push
and
test
clc
pop
sbb
cmp
inc
mov
dec
pop
inc
push
cmp
xchg
push
in
mov
dec
nop
xchg
stc
outsl
xchg
jge
jb
shrb
lea
in
mov
jecxz
out
push
test
or
nop
loope
mov
adc
xor
cmp
popa
aaa
in
je
and
sub
cmpsl
cmpl
int
testl
jle,pt
sub
adc
sahf
int3
scas
and
push
dec
in
popf
sarb
pop
cld
pop
pop
js
jle
cmp
lret
cmc
add
test
inc
frstor
inc
nop
leave
outsl
add
dec
in
imul
gs
aam
shll
aam
cmpsb
jnp
inc
fldl
or
imulb
mov
in
mov
and
fidivl
xlat
and
outsb
ljmp
push
inc
in
mov
js
dec
mov
inc
adc
pop
sub
push
lods
shlb
out
ss
into
mov
aad
out
cmpl
out
push
scas
mov
shrb
dec
mov
sub
xlat
mov
or
xchg
ljmp
jne
jnp
add
jmp
icebp
addr16
jnp
mov
mov
mov
ss
fisttps
jnp
mov
sub
lahf
stc
adc
pop
in
clc
mov
jg
lea
cvtpi2ps
sub
pop
push
movsb
int
pop
sub
pop
test
adc
mov
daa
sub
testl
pavgb
cmpsb
jb
xor
les
or
mov
movsl
call
stos
or
jp
and
ficoms
mov
jno
hlt
mov
fidivrl
sbb
xor
pop
aam
jb
jne
call
lea
cmp
jae
pop
jnp
test
pusha
ds
xlat
xor
jbe
loopne
dec
mov
rclb
mov
fldenv
jno
jns
inc
jle
out
into
je
jno
in
fidivs
xor
decb
mov
jecxz
adc
jno
es
lods
cld
mov
xor
pop
sbb
fisttps
xor
jno
pop
into
out
mov
cmp
cld
ja
test
rorb
std
or
divb
out
std
cmp
inc
mov
cmp
ret
mov
push
jns
jns
scas
add
into
inc
xor
lds
push
cltd
jb
popa
mov
negb
movsl
sub
sub
les
dec
and
push
fwait
lret
mov
jbe
sub
stos
push
lret
call
add
test
int3
jbe
les
xchg
jne
mov
or
insl
cmp
fsts
fimull
es
or
and
jg
add
and
movsb
movsl
dec
or
cltd
popa
xor
inc
lahf
es
xor
mov
and
and
cmp
or
sahf
and
mov
push
push
and
mov
adc
shlb
and
repnz
dec
cld
and
mov
stc
and
bound
test
sbbb
sbb
fidivs
jns
cmp
cmc
data16
out
dec
filds
pop
shl
pop
cmpl
in
test
bound
jno
int3
lcall
dec
loopne
add
sub
mov
jl
adc
add
arpl
jnp
inc
pop
inc
bswap
pop
ds
pushf
call
inc
idiv
insl
cmp
rol
clc
jg
jae
les
daa
pop
in
out
jne
mov
xorl
sub
int
and
adc
test
jbe
shr
and
cmp
movsb
or
inc
cmp
mov
lock
jae
repz
test
push
jbe
je
xchg
cmp
std
loopne
xlat
dec
int3
push
gs
cwtl
add
adc
iret
pop
xchg
pop
and
dec
je
and
adc
jnp
cmp
cltd
imul
je
nop
lret
nop
lods
xchg
dec
adc
jns
dec
std
stos
daa
and
fsubl
or
and
out
mov
popf
in
dec
xlat
xor
xchg
adcb
jle
inc
and
pop
mov
xchg
mov
repz
mov
pop
jno
mov
mov
lahf
and
out
sarl
mov
fsts
cwtl
jbe
lea
jne
pop
inc
sbb
jo
movsb
jecxz
fdivl
outsl
je
loopne
stos
sub
outsl
in
gs
xor
lcall
es
inc
and
imul
xlat
call
movsl
cmc
scas
pushf
sbb
cmp
xor
and
jns
js
mov
inc
push
fs
push
inc
sbbl
cs
out
inc
outsl
jl
inc
pop
loopne
into
mov
or
pop
push
pop
xor
push
ja
pop
stc
nop
fs
rcr
sbb
loope
pop
je
lea
mov
ret
adcl
loopne
les
das
mov
subb
dec
stos
aaa
les
and
sbb
mov
adc
data16
jp
xor
pop
or
mull
cli
fldl
mov
and
xchg
jbe
jo
rolb
pop
mov
or
sub
dec
nop
adc
inc
iret
icebp
cmp
mov
mov
mov
inc
and
lea
ss
lahf
pop
sub
aas
adc
xor
or
mov
in
dec
lcall
pop
int3
add
mov
mov
jnp
nop
sub
pop
mov
sbb
imull
popl
xlat
push
push
add
cmc
test
adc
add
std
mov
aam
out
lret
add
arpl
or
push
mov
stos
das
or
jecxz
pop
fdivr
or
daa
out
je
push
out
pop
inc
pop
cmp
push
or
xor
lods
js
adc
pushf
cmpsl
push
in
imul
hlt
shll
movsb
subl
pop
jmp
adc
stc
push
sub
in
arpl
dec
mov
push
xchg
jl
ja
movsl
mov
xlat
into
jge
mov
xor
and
or
sahf
addb
push
and
jbe
enter
xchg
dec
push
mov
mov
sub
jl
sub
out
enter
xchg
outsb
lods
stc
mov
je
lret
and
inc
test
cli
or
in
cmp
out
adc
dec
xchg
pop
ja
fs
xchg
xchg
pusha
xor
in
cmp
cltd
jle
or
mov
push
loop
and
mov
js
jle
mov
sub
rorb
push
push
daa
mov
mov
or
dec
push
pop
and
std
ds
cmpsb
cltd
das
std
roll
jne
jnp
imul
or
orb
lock
inc
mov
scas
sub
mov
mov
es
hlt
ficoms
fisttps
lret
sub
and
mov
sbb
jno
stos
sbb
gs
lods
mov
aas
or
shrb
in
push
les
cmpb
push
mov
jne
push
sbb
jmp
add
cmp
fstl
jnp
cmp
cs
jecxz
jae
mov
sbb
pop
mov
xchg
pop
lea
sbb
fwait
clc
push
cmp
xor
jbe
cmp
pop
dec
xchg
dec
scas
and
jle
les
repnz
shrl
lcall
xchg
push
stos
adc
scas
test
and
jnp
fadds
cmp
cmp
push
sub
push
inc
bound
jmp
ja
and
push
sub
mov
arpl
adc
push
movsb
cmp
push
adcl
outsl
mov
cmc
movsb
mov
adc
inc
mov
ret
cwtl
mov
stos
scas
xlat
repnz
and
stc
rclb
inc
sti
pop
mov
fidivrl
out
or
jno
frstor
or
adc
dec
lods
js
and
sub
jmp
and
sarl
mov
iretw
or
sti
adc
js
add
aaa
adc
stos
das
mov
pop
lahf
or
nop
popa
pop
in
pop
push
mov
js
pop
enter
fildll
and
cs
repnz
fidivs
push
testl
out
mov
sbb
mov
int3
mov
xchg
sbb
jb
ret
and
push
sbb
mov
aam
popf
pusha
lret
sbb
outsl
loopne
fnstenv
aad
lods
out
int3
stos
dec
shll
pushf
enter
negb
enter
push
mov
xlat
daa
je
and
popf
mov
and
jb
dec
jmp
fs
push
sub
stos
and
xchg
pop
push
cld
jb
push
mov
outsb
inc
ja
movsl
mov
jae
lods
or
mov
push
aas
test
out
mov
add
jno
mov
sbb
loope
sub
std
lcall
test
push
mov
xchg
push
mov
les
and
add
xchg
xor
aam
sarl
jbe
pop
and
cmc
dec
push
mov
cs
dec
mov
movb
aaa
ficomps
mov
or
addr16
push
pop
lea
dec
into
xchg
shlb
mov
psubsw
jge
jne
mov
hlt
lcall
call
fisttpl
lds
mov
sti
push
and
xchg
rcll
xor
repz
movsb
inc
sbb
mov
aas
bound
sbb
rcll
push
jp
mov
adc
aam
mov
les
mov
push
xor
pop
pusha
mov
xchg
movsl
lds
lock
rcr
xor
andl
int3
fnstenv
shlb
js
into
in
in
mov
push
loope
cmpsl
inc
jns
lcall
sbb
inc
dec
aad
test
js
fadds
add
push
adc
mov
imul
dec
push
jmp
jmp
push
fnstcw
push
leave
xchg
add
and
lock
stos
mov
aad
mov
ss
dec
nop
or
sahf
jl
addr16
push
jno
pop
inc
mov
ss
inc
data16
andb
push
pop
pop
and
mov
jl
lret
aam
insl
adc
adc
icebp
aam
sub
es
sbb
movsb
inc
sbb
mov
sbb
insl
jmp
loop
or
mov
push
cli
xchg
xlat
mov
call
ret
and
mov
int
pop
scas
mov
insb
cmc
loope
xlat
adcb
mov
xchg
pop
mov
xchg
mov
pusha
inc
jge
out
scas
in
push
imul
lcall
inc
dec
inc
loop
add
or
push
adc
bndldx
fisttps
ss
into
and
or
sbb
mov
stos
and
pushf
repz
mov
sub
pop
pop
int
mov
and
jp
call
pop
xor
insb
gs
in
add
in
in
mov
inc
icebp
aad
mov
fs
outsb
cmp
jle
test
xor
mov
add
inc
in
push
push
repz
pop
jnp
jmp
jge
cmc
mov
in
out
jp
pop
stos
or
pop
jl
stos
jo
mov
xchg
outsb
xor
arpl
dec
lock
cmpsb
in
mov
jg
stos
sub
adc
das
out
ss
and
js
mov
scas
js
repnz
and
cmpl
mov
loope
jnp
mov
or
data16
movsb
addr16
jl
bound
sahf
jns
in
sbb
aam
ret
out
rclb
ljmp
scas
cli
lock
mov
mov
iret
cmpsl
daa
repz
enter
jge
sub
dec
jae
cli
xchg
popa
aad
xchg
or
jae
push
les
bound
inc
and
call
mov
xor
bsr
dec
mov
mov
nop
fimuls
ds
mov
pop
or
test
jle
pusha
in
mov
push
loopne
iret
in
mov
fwait
push
fcomp
cmp
ljmp
cmp
mov
add
cmp
pop
aas
ljmp
mov
mov
push
sub
adc
add
sub
popa
je
xchg
inc
aad
daa
jno
pop
les
push
es
or
cs
add
inc
dec
enter
mov
sbb
lods
cmp
add
push
sub
call
call
fnsave
lret
shll
mov
incb
fstpt
stc
xchg
lods
adc
xchg
jl
fnstenv
loope
imul
cmp
or
nop
lcall
mov
mov
push
int
cwtl
leave
pop
cmp
push
adc
jecxz
and
das
or
fs
insb
add
ljmp
cmpsb
iret
inc
xchg
dec
ja
push
push
jb
js
mov
gs
orb
cmpsb
dec
inc
testl
mov
dec
dec
clc
shll
pop
and
dec
push
mov
mov
cmp
and
dec
cld
push
mov
std
cs
mov
push
cmp
sub
data16
mov
sub
leave
xchg
mov
mov
and
hlt
pop
xor
or
orb
xchg
xchg
roll
popa
mov
in
mov
lret
mov
mov
inc
testb
xor
mov
test
scas
dec
stos
cmp
loopne
mov
inc
and
and
fwait
push
adc
scas
fbstp
and
pop
or
add
test
push
es
ret
std
ds
push
insb
push
cmpsb
jns
and
mov
call
xchg
stos
pop
xor
rcrl
cmp
fdivrp
xchg
inc
leave
fnstenv
outsb
mov
lret
inc
insb
icebp
add
cmp
push
arpl
fsub
gs
test
pop
test
ret
mov
mov
das
into
rcrl
jl
insb
dec
sub
push
mov
add
andl
add
pop
xchg
int3
jne
push
loop
adc
mov
icebp
pushl
mov
call
sti
addr16
mov
neg
inc
push
ret
in
pop
cmc
add
ja
lds
jp
dec
mov
stc
dec
lcall
ror
pop
xlat
lret
cltd
adc
jnp
and
cmp
mov
push
mov
jo
jb
add
pop
xchg
xor
mov
sbb
aaa
nop
dec
bound
push
scas
test
mov
cltd
fcoms
pop
sub
mov
insl
xchg
dec
outsl
cmp
mov
sbb
std
int
or
mov
pop
stc
cli
jg
pop
xor
mov
jbe
out
adc
xchg
sahf
and
cmp
cltd
dec
xor
mov
stc
cmc
sbb
aad
jge
and
jb
popf
movsb
and
fsub
shll
ds
pop
dec
lods
lea
push
js
cmp
mov
push
stc
sbbl
je
icebp
std
out
mov
pop
leave
mov
inc
mov
std
fbstp
nop
add
add
icebp
xchg
cld
xchg
fidivrs
xchg
add
bound
cli
stc
lret
lods
pop
ja
cmp
push
xchg
mov
flds
je
push
cli
loopne
adc
call
in
sahf
xchg
xchg
imul
aaa
movsb
inc
push
out
xchg
imul
in
jl
jmp
fs
hlt
rcll
mov
fcoml
sahf
mov
push
lods
shl
mov
pop
cwtl
fcmovbe
and
xlat
mov
mov
cltd
adc
mov
mov
clc
pop
repz
cmpsl
mov
lret
push
lret
push
jge
popl
imul
add
xlat
arpl
inc
out
lea
jo
push
adc
and
xchg
sti
jecxz
mov
fwait
cmpsl
add
xchg
les
pop
lret
or
xor
cmp
mov
idivb
xchg
lds
sub
sbb
pop
clc
popa
out
fisubl
jns
scas
stos
xchg
loop
rorb
xor
xchg
aaa
add
xchg
hlt
mov
xor
icebp
xchg
xor
jne
cmpsb
sbb
jp
mov
sub
mov
inc
and
xchg
push
mov
mov
in
in
insl
add
jmp
sub
in
test
jmp
dec
or
cmpb
adc
dec
jmp
or
mov
add
addr16
test
jns
aas
ja
xor
mov
adc
mov
jne
jmp
int
in
inc
adc
push
ljmp
push
addr16
xchg
cmp
fstpt
jle
and
aaa
hlt
push
fisttpl
dec
ret
shrl
aam
fcompl
cs
lds
push
in
dec
xchg
adc
dec
mov
fs
scas
call
mov
stc
lret
outsl
in
fdivrs
adc
mov
mov
adc
arpl
sbb
int3
test
mov
and
mov
jecxz
enter
xor
add
iret
push
test
mov
xor
sub
scas
int
shrl
fldcw
or
stos
test
xor
repz
xor
xchg
add
pop
jecxz
loope
sbb
stos
ss
call
aaa
or
mov
dec
mov
lods
clc
jle
jecxz
cmpsb
jnp
ret
adcb
mov
aad
push
adc
insb
in
mov
hlt
sub
cmp
mov
scas
push
xchg
sub
mov
int
out
insl
fsubrs
dec
cltd
mov
and
cmp
aas
pop
xor
lds
or
add
dec
add
aas
dec
bound
xchg
xor
int3
lds
xor
jp
pmulhuw
mov
adc
mov
mov
adc
xchg
xchg
rcrb
out
movsb
aas
mov
inc
cmp
and
clc
inc
in
xor
sbb
inc
in
pushf
pop
jge
fists
or
das
lahf
add
and
inc
dec
mov
in
popf
inc
pop
dec
lods
cmp
ss
mov
test
mov
andb
pop
jns
les
dec
outsb
pushf
insl
mov
sbb
ja
fwait
pop
inc
mov
movsb
lods
sbb
mov
loop
hlt
xor
aad
inc
cmp
jne
dec
stos
lcall
fwait
pusha
loope
inc
ret
mov
xor
pop
call
sub
jbe
xchg
les
sbb
mov
fwait
mov
pop
or
scas
mov
insb
lods
xchg
xor
lret
mov
pop
dec
and
and
jnp
xor
lds
popa
iret
insb
pop
repz
sti
aaa
mov
cmp
in
fiaddl
out
mul
aad
adc
and
bound
cmc
mov
or
xchg
push
jb
mov
push
pop
sub
cwtl
psllq
dec
scas
sbb
decl
pop
test
mov
pop
cmp
mov
lahf
mov
adc
les
fstp
imul
pop
lea
jo
mov
cmpb
lea
xchg
mov
mov
or
xlat
les
pushf
and
jle
sub
lret
pop
fiaddl
jbe
rolb
jns
pop
jecxz
imul
xchg
cmp
and
sub
jl
sar
aad
mov
sahf
jae
or
sti
scas
scas
ja
dec
push
das
mov
and
je
add
mov
shrl
aaa
mov
lds
push
jnp
sub
jno
out
test
push
or
outsl
push
icebp
fnstenv
lock
xchg
fisttpll
filds
cli
loope
rcr
xor
jbe
outsb
jl
push
mov
and
insl
out
iret
inc
hlt
pop
push
adc
cs
push
dec
sbbb
mov
popl
fwait
mov
and
sub
jo
push
inc
sahf
inc
ss
jae
lods
cmp
cwtl
pop
stos
dec
ret
popf
add
out
add
test
jno
nop
jg,pn
mov
add
pop
and
fnstsw
xchg
add
xchg
push
pop
xchg
mov
sahf
add
jne
stc
fsubrp
in
push
cmpsl
pop
fnstsw
fwait
je
jnp
clc
adc
cmp
adc
addl
cli
scas
idivb
mov
data16
pop
inc
add
fsubl
push
imul
int3
mov
testb
neg
pop
cli
pop
mov
in
inc
cmc
fld
data16
inc
lds
push
insb
icebp
out
mov
inc
out
icebp
adc
stos
mov
test
popa
out
lds
xlat
sbb
in
inc
or
sub
sbb
into
loop
ss
and
inc
outsb
cwtl
movsl
cli
ja
mov
fisttpll
push
aam
popa
aam
rclb
sahf
stos
cmpsb
jae
jns
xorl
push
rep
or
mov
xchg
data16
pop
rorb
test
aaa
lahf
sub
and
mov
imul
push
divb
loopne
cs
xchg
repnz
dec
xchg
jb
dec
dec
dec
push
jo
fld
mov
mov
xor
loope
je
xor
lahf
in
pop
sahf
std
repnz
pop
inc
inc
fsubrl
sbb
stos
xchg
arpl
shlb
sub
adc
lods
mov
iret
and
and
out
xor
fwait
cmp
stc
enter
aas
sbb
stc
fildll
jmp
lock
or
push
push
jmp
jge
pop
inc
pop
mov
aam
les
in
loope
inc
mov
lea
aad
fmull
fistps
sbb
mov
aam
inc
ret
sti
arpl
jl
cs
loope
xlat
fbstp
and
jg
push
jae,pt
or
xor
jecxz
gs
call
push
out
adc
insl
push
insl
mov
xor
sub
loopne
shrl
jp
fucom
sbb
mov
dec
xchg
mov
roll
lcall
in
hlt
cs
lret
cld
mov
jecxz
test
out
dec
mov
cs
push
mov
sbb
dec
cmc
jno
or
enter
mov
jge
inc
mov
fistps
sti
push
push
call
in
outsl
add
dec
inc
in
jnp
and
xor
call
jle
sbb
push
inc
ja
cmp
test
hlt
mov
pop
mov
mov
jno
cmpsb
push
mov
pop
sar
das
dec
int
jae
ja
es
loope
xor
cmp
add
hlt
jl
push
dec
jb
add
xor
imul
mov
mov
and
lcall
adc
pusha
shl
movsb
addr16
les
sbb
addl
loopne
les
cmc
bound
xor
ret
inc
xchg
pop
popa
mov
fwait
add
fidivrl
fdivl
xchg
sub
sbb
dec
outsb
sti
fisubs
mov
popa
mov
and
testl
push
sbb
sbb
push
inc
insb
jl
dec
es
xchg
aaa
aam
testl
lds
dec
jbe
and
enter
push
xchg
cltd
xchg
pop
inc
cmpsb
aaa
adc
push
jmp
ret
and
out
popf
addr16
adc
movsl
imul
cmp
push
inc
aam
xchg
ja
cmp
sbb
pop
mov
and
dec
and
aam
jns
jae
dec
scas
aaa
mov
xor
push
or
fbld
js
cmpsb
fwait
jl
mov
sar
ret
inc
push
pop
xchg
pop
and
dec
push
shlb
dec
mov
std
sub
or
ret
sub
fimull
dec
push
pop
rorb
inc
and
pop
adc
mov
jecxz
jge
movsl
xchg
shrl
lods
pop
mov
in
in
daa
subl
decb
adc
push
jecxz
das
push
cwtl
out
push
jl
xor
notb
mov
lret
ds
inc
test
cmc
insl
xor
out
xor
call
jle
nop
loope
push
cmp
push
jg
fisttpll
nop
push
cld
mulb
jp
sub
into
pop
or
mov
or
imul
pop
xor
cltd
in
scas
test
jnp
clc
push
mov
inc
mov
outsb
addr16
push
clc
xchg
fsubl
mov
addr16
clc
test
cli
hlt
add
jl
gs
loopne
jbe,pt
pushf
xor
data16
mov
mov
jns
ret
inc
aad
jno
push
js
lcall
mov
sbb
sti
mov
pop
mov
int3
repnz
stc
imul
scas
in
xchg
or
stc
dec
pop
lret
icebp
mov
and
mov
nop
lahf
push
push
fstps
pusha
pop
push
sbb
jne
mov
cmp
and
loope
jg
inc
mov
and
nop
or
mov
mov
dec
and
pop
aaa
icebp
push
push
cli
sbb
testb
ja
int
mov
aad
and
jmp
stos
shl
jg
mov
imul
sbb
daa
leave
cmp
imul
fldenv
aam
mov
jecxz
push
daa
shrl
cli
popa
push
inc
jmp
cmp
mov
dec
pop
or
lods
and
mov
inc
aam
sbb
daa
enter
or
dec
jae
sbb
in
xchg
repz
push
sbb
imul
mov
test
cltd
and
inc
les
imul
xchg
dec
insl
dec
pop
out
aad
bound
subb
and
sbb
fwait
push
cs
pop
xor
int
jne
pop
sti
in
call
pand
or
cmp
add
jmp
js
mov
xchg
push
mov
push
push
decl
in
mov
orb
lret
push
enter
push
loop
dec
out
xor
push
aas
ljmp
xor
leave
les
ljmp
in
and
dec
cmp
sub
repz
lcall
popa
pop
js
bnd
adc
mov
xchg
pop
mov
cltd
sti
dec
add
loopne
mov
dec
jmp
sub
xchg
adc
xchg
mov
cmp
mov
rcll
dec
jne
jmp
and
out
cmp
inc
ss
adc
mov
xor
sub
xor
icebp
cs
mov
inc
scas
ret
arpl
int3
adc
dec
ss
mov
or
dec
xchg
gs
push
dec
incb
mov
mov
sbb
xor
or
ljmp
mov
adc
je
xchg
sbb
stos
xor
iret
ret
mov
movswl
sahf
or
pushf
jp
push
sbb
aas
sub
hlt
inc
push
rcll
jecxz
mov
cld
xchg
insl
out
add
push
push
xchg
mov
add
cwtl
mov
and
xchg
aas
or
xor
lret
xor
out
xlat
inc
movsl
push
mov
push
sbb
inc
jg
jp
shlb
ds
pop
cmp
mov
mov
cmp
cli
mov
scas
jmp
out
shrl
pop
rorl
sahf
aam
incb
or
aas
or
sbb
hlt
popf
dec
sub
push
or
rcrb
pop
mov
cwtl
push
ret
sub
bound
repnz
fnstcw
jmp
sbb
subb
outsl
adc
xor
sbb
rolb
xchg
or
pop
dec
dec
test
sbb
mov
dec
hlt
repnz
incb
in
ret
andb
and
and
scas
add
dec
inc
lods
inc
mov
jmp
cmc
sahf
fwait
jmp
mov
xor
xchg
ds
ja
lods
adc
xor
dec
and
jle
test
cmp
jns
xor
hlt
xor
ljmp
add
pop
sbb
das
popf
jmp
cmp
rorb
mov
dec
mov
cmp
cwtl
gs
mov
rcll
pop
inc
call
lods
ss
xchg
repz
or
insb
add
scas
adc
leave
adc
rcr
scas
ret
aam
dec
jno
movsl
and
or
fiaddl
dec
and
mov
subb
inc
lahf
fldenv
out
add
imul
fbstp
aam
cwtl
sti
mov
std
nop
jle
cmp
imull
js
sbb
scas
popf
stc
pop
out
cmp
int
test
and
adc
mov
jo
push
pop
adc
bound
mov
ja
sub
jns
push
arpl
mov
test
push
cmpsl
jl
jo
push
xor
fs
or
clc
addr16
cmp
sbb
cld
sub
shrb
cli
jns
or
mov
sbb
push
dec
mov
int
in
inc
sbb
mov
xor
mov
or
movsb
cmp
insl
add
xchg
or
mull
add
cmpsb
mov
xchg
outsb
stc
stos
test
cmp
mov
pusha
xor
repz
push
adc
aaa
sti
sub
es
adc
cmp
jge
out
subps
add
lock
xchg
xchg
adc
jno
push
sti
fmul
jg
enter
sub
xchg
jg
pop
cmp
jecxz
je
inc
add
add
insl
call
sbb
ljmp
dec
add
loop
sub
test
icebp
cmpsl
faddl
into
outsl
xor
lods
push
mov
inc
outsb
dec
roll
jnp
xor
and
mov
dec
fmuls
pop
out
pop
test
outsb
xor
lcall
popa
push
inc
divb
mov
pop
cmp
addr16
mov
lods
jp
mov
pop
cltd
insl
inc
arpl
dec
xchg
xor
dec
popa
jo
fs
mov
popa
add
jb
pop
dec
iret
cmp
jmp
shl
dec
mov
cwtl
sub
xorb
and
push
xchg
xchg
adcb
cmp
sbb
test
into
mov
pop
es
cmp
push
xchg
hlt
mov
pop
jne
mov
lods
dec
inc
mov
or
mov
adc
and
inc
pop
add
or
jns
mov
ja
push
popf
mov
xor
mov
int
in
movd
xor
andb
and
sub
sbb
jb
pop
icebp
faddp
lcall
out
jno
ja
cli
insl
jo
clc
je
dec
xchg
in
jge
pop
cmpsl
es
nop
mov
or
cli
jns
push
adc
inc
inc
hlt
pop
fistps
and
lret
mov
mov
movsl
dec
into
enter
jecxz
les
or
int
ficoms
pusha
dec
push
sar
test
pop
or
filds
mov
push
cmp
sbb
mov
add
mov
cmp
aad
cmpsb
sbb
xor
in
mov
insb
sub
push
sub
lret
push
mov
or
lock
mov
lds
sbb
aad
xor
inc
xor
rorl
xlat
sbb
push
loop
push
sub
pop
aam
loope
mov
bound
loop
bound
lea
dec
jle
stc
jns
subb
out
call
pop
xchg
mov
je
mov
push
xor
bound
addb
int3
lcall
jle
mov
jle
push
call
pusha
lea
in
ret
mulb
imul
push
sarb
sbb
xchg
cmp
nop
negb
cmpsb
cld
fistpll
nop
jp
jnp
cmp
fcomps
mov
dec
push
cmp
mov
or
jne
cmpsl
xchg
test
and
sbbb
ss
fcmovu
adcl
xor
inc
int3
mov
jp
and
fcoms
and
popf
jp
and
testb
hlt
jno
gs
loop
or
pop
dec
rol
fists
arpl
insl
mov
mov
fcompl
shld
popf
insl
or
add
repnz
pushf
xor
hlt
aad
mov
pop
fcomi
sub
push
loope
pop
int3
fsubs
and
pushf
adc
inc
hlt
divl
aaa
push
mov
inc
das
dec
dec
clc
mov
mov
inc
and
sahf
mov
mov
outsb
mov
xchg
sub
imul
mov
cmpsb
loop
movsl
pop
fadds
out
mov
shlb
dec
pop
mov
push
inc
popf
aaa
aas
sahf
data16
repnz
push
pop
out
out
add
mov
jno
nop
cmc
xor
push
sahf
sbb
sub
jl
jg
push
scas
cmp
sub
out
inc
int3
iret
cmc
mov
or
mov
xor
test
test
mov
dec
mov
jmp
insb
xor
adc
jae
movsb
in
mov
in
add
arpl
js
xor
dec
add
arpl
mov
icebp
pop
pop
sub
dec
fsub
mov
xor
push
pushf
cmpsb
shlb
outsb
insl
in
pop
adc
push
mov
jge
loop
xchg
sbb
stos
sub
push
sub
fs
sti
jl
xor
insb
daa
or
aam
pop
ljmp
push
pop
dec
push
cld
xor
push
sarl
js
imul
mov
fiaddl
pop
add
inc
push
mov
inc
mov
cmp
in
ss
push
mov
cli
inc
aad
and
sarl
cli
add
xchg
mov
test
mov
mov
mov
cmc
and
fs
cli
xchg
or
subb
add
cltd
lcall
aam
mov
sarb
sub
mov
sar
pop
jbe
dec
mov
fnstenv
push
packuswb
shll
dec
push
mov
xchg
ss
pop
inc
popa
or
mov
jecxz
mov
sbb
mov
mov
int3
int3
jge
sub
xchg
pop
adc
mov
or
and
push
and
adc
mov
push
aas
inc
pop
jae
fwait
fsts
dec
loopne
sub
daa
addr16
dec
aad
inc
test
inc
out
mov
mov
rcr
les
mov
xchg
test
jge
adc
shrl
add
subl
sbb
fsubrl
dec
popa
gs
mov
xchg
xchg
pop
or
mov
pop
sub
add
out
jo
clc
mov
push
enter
ss
imul
cwtl
push
in
push
mov
imul
dec
iret
xchg
lods
pop
mov
adc
loopne
notb
jae
movsl
stc
sub
addr16
add
inc
dec
or
sub
scas
jg
lds
fs
mov
mov
dec
xor
out
cmc
jg
inc
add
ret
cwtl
adc
mov
add
inc
fsubrl
xor
push
and
add
mov
mov
jbe
prefetcht1
pop
mov
mov
aam
cmp
and
int3
aam
lock
sbb
aas
xchg
cld
out
leave
mov
cwtl
and
inc
jae
jo
in
mov
fmull
popf
xchg
mov
mov
leave
ret
inc
bnd
call
mov
popa
ds
outsl
and
push
negl
mov
jo
test
test
std
dec
js
mov
pop
mov
jae
cmp
in
lcall
jge
pop
mov
dec
sub
aaa
lods
cmp
repz
lock
stos
out
cmp
pop
xchg
dec
call
sbb
or
jmp
cmpsl
mov
or
xchg
dec
jno
fs
inc
and
push
or
test
push
xchg
push
cmp
out
add
mov
xchg
mov
mov
fwait
or
imul
jns
push
ja
idivl
cltd
insl
add
mov
pop
inc
idivl
push
push
shrb
popa
js
or
insl
jo
in
xor
xchg
ja
fwait
or
fisubs
or
in
cmp
mov
pop
sub
sarb
cmp
or
pop
xchg
add
das
pop
or
movsl
fs
je
adc
pop
push
les
inc
pushf
outsb
pop
push
add
dec
into
nop
mov
fimuls
and
add
loope
adc
sbb
xchg
or
test
inc
ljmp
add
rclb
add
add
jnp
dec
jmp
adc
fdivrs
dec
pop
movsl
jmp
push
adc
xorl
pop
dec
nop
in
imul
popf
dec
add
jns
mov
or
pop
dec
cmp
mov
and
out
add
js
out
sub
pop
cld
jg
test
out
adc
js
mov
sbb
jecxz
xchg
adc
mov
loope
lea
adc
leave
mov
je
mov
inc
push
push
xchg
push
xchg
or
push
arpl
mov
or
call
sub
ljmp
sbb
pop
jbe
loope
inc
inc
cmp
pop
inc
inc
dec
loope
ljmp
js
into
add
in
popf
inc
pop
push
clc
xor
mov
lret
jo
shll
mov
leave
sub
fmul
neg
push
lea
pop
decb
mov
in
in
dec
rcll
test
pop
lds
xor
in
mov
mov
push
andb
repz
cmpsl
xor
sbb
sbb
jb
sub
scas
add
rcrb
xor
dec
xchg
cmp
sub
or
mov
xlat
fs
inc
jb
push
popw
js
shlb
mov
push
push
xor
dec
jge
pop
leave
and
adc
mov
mov
mov
fistpl
sbb
les
xor
aad
pop
shlb
inc
and
xor
test
mov
adc
sbb
dec
sub
jle
add
dec
gs
push
push
imul
push
pop
lods
add
or
jnp
scas
lahf
sbb
ret
push
dec
je
push
sub
pop
pop
pop
sub
lock
xorb
shlb
and
mov
int
jle
ljmp
mov
mov
pushf
mov
pop
repz
in
pusha
xor
sbb
adc
jae
fadds
xchg
in
xor
out
cld
movsl
insl
mov
mov
lahf
call
inc
cmc
cs
cmp
and
leave
test
jo
push
ss
test
add
cmp
add
loop
scas
loopne
sub
xor
cmp
ret
arpl
cmpsl
cmp
dec
dec
sub
xor
mov
adc
divb
push
cltd
inc
mov
repz
lret
fs
adc
cld
rorl
xor
cmp
push
jg
ljmp
in
xchg
daa
iret
cmp
fldcw
inc
jle
fstpl
xchg
js
pop
adcb
loope
mov
cmpl
je
sub
pop
fwait
bound
xchg
jnp
xor
int3
arpl
testb
mov
or
lods
enter
add
lock
fstpt
imul
shll
sub
jecxz
sub
loopne
cmp
int
mov
and
pop
repnz
jnp
int
inc
ljmp
mov
mov
push
imul
xchg
add
cmp
xchg
and
pop
mov
out
aam
cmp
push
nop
push
sbb
mov
loope
sbb
int3
decl
out
cmp
or
cmpsl
std
mov
mov
mov
lret
testb
mov
clc
test
or
insl
push
pushf
fwait
inc
out
movsl
push
jnp
adc
mov
and
push
xchg
scas
pop
mov
cmp
into
inc
jb
in
jmp
leave
popa
xor
xlat
faddl
mov
sar
fistpl
sbb
adc
push
xchg
fldt
jns
imul
cli
ljmp
dec
xchg
ret
inc
mov
stc
push
sub
testb
adc
inc
xchg
call
popa
mov
out
scas
and
scas
cmpsl
lods
mov
xor
iret
add
mov
scas
nop
std
dec
arpl
repz
sbb
sbb
sub
sarl
and
adc
mov
xor
jo
popa
inc
mov
pop
mov
cwtl
mov
sbb
dec
xlat
and
mov
or
push
rclb
adc
js
out
mov
xchg
sti
aam
lock
jg
push
ss
iret
xchg
rcrl
xchg
sub
les
pop
enter
lock
mov
pop
push
test
les
jge
out
rcrb
sub
xchg
mov
or
push
sub
std
pusha
daa
loop
sbb
dec
adc
stos
cli
sahf
repnz
pop
jae
mov
mov
bound
aad
mov
pop
jo
adc
cmp
ret
into
mov
cmp
aas
addr16
dec
and
jne
stos
push
add
dec
mov
push
ljmp
popf
pop
jo
lea
pop
ret
mov
dec
lods
imul
lret
js
add
or
push
out
add
inc
jg
es
stos
flds
cld
pop
jg
jb
mov
cmp
stos
data16
aam
scas
push
or
sub
test
mov
fs
sarl
push
and
xchg
push
sub
and
dec
outsb
cs
sbb
jle
mov
sbb
jbe
adc
mov
pop
push
repz
xor
push
cmc
mov
push
mov
rcr
pusha
add
insl
daa
jb
jmp
mov
gs
insb
and
insl
dec
iret
xchg
fsubrs
jbe
add
and
sub
inc
push
mov
xor
mov
mov
fiadds
xchg
shrl
sub
mov
stos
sub
pop
fnsave
cwtl
pop
loope
ljmp
pop
stos
cmp
xor
ss
fisubl
std
jp
gs
dec
mov
push
adc
ja
ret
fdivl
or
pop
mov
add
fstl
lods
divl
es
leave
add
cmp
sub
inc
mov
pop
pop
sahf
mov
add
xchg
lea
push
cltd
bound
add
add
mov
xchg
incb
das
inc
in
std
pop
iret
jge
pushw
mov
mov
inc
mov
mov
jg
sub
cs
mov
mov
push
and
enter
push
xchg
in
adc
addr16
rolb
movsb
mov
fistl
cli
mov
scas
ljmp
fwait
and
cmc
bound
push
sarl
add
mov
xchg
xchg
or
sti
repnz
mov
xor
in
dec
rcll
test
mov
orl
inc
adc
push
jnp
and
sub
add
das
add
cwtl
adc
and
mov
push
cmp
pop
fs
stos
adc
popf
sub
mov
sarl
cmc
dec
dec
pop
mov
jno
ss
add
push
aam
cmp
or
loop
fld1
add
push
pop
in
cwtl
dec
push
mov
xchg
mov
add
loopne
ja
outsb
mov
jb
dec
mov
sbb
test
addr16
jmp
push
xchg
push
loopne
cmp
in
cmc
rcr
fwait
jmp
jl
inc
push
add
push
xor
je
out
iret
cmp
push
aad
sub
push
aas
mov
scas
mov
xchg
fadds
inc
insl
mov
pop
jns
push
out
pop
xlat
es
and
icebp
aaa
ret
in
adcl
sbb
mov
pop
dec
xlat
scas
roll
stc
fbstp
xor
inc
mov
shlb
push
sbb
push
jns
ret
aas
scas
pop
and
lock
cmp
push
sub
sbb
sbb
xor
sub
mov
jle
nop
pop
sub
adc
xchg
mov
clc
adc
lods
add
sbb
xchg
fcomps
mov
testl
popa
adc
in
mov
jns
dec
dec
and
hlt
or
inc
movsl
adc
shlb
fucomp
sbb
clc
clc
add
xchg
jb
call
insl
enter
das
sbb
pop
insb
andb
inc
stc
lcall
divb
cmp
push
dec
sbb
sub
lcall
jmp
inc
outsl
stc
and
adc
and
jmp
or
jl
cli
adc
push
mov
fisttps
push
cmp
and
mov
imul
lret
popa
and
addr16
insb
cmpsb
mov
aas
mov
xchg
dec
in
out
sbb
jge
mov
xlat
fidivrl
lret
stos
dec
ret
in
xchg
loopne
addr16
xor
push
lret
mov
or
push
add
clc
movsb
jb
or
and
add
stc
fstpt
push
aaa
adc
scas
ljmp
cld
shll
mov
mov
sbb
or
dec
pop
mov
sbb
test
push
mov
das
fs
in
ds
jb
jmp
adc
in
fiaddl
ss
pop
sarb
fadd
sub
add
cltd
addr16
sbb
iret
popa
push
and
push
sbb
fsubs
and
out
push
xchg
push
push
scas
jge
stos
or
subb
push
push
add
xor
and
bnd
inc
pop
inc
sbb
sets
out
xchg
xchg
rcrl
add
repnz
imul
sub
jae
cltd
sub
lcall
fnstsw
rolb
mov
xor
jnp
fsubl
shll
pop
and
jl
jge
add
and
sbb
dec
push
pop
int
add
scas
adc
mov
add
adc
fcom
jmp
test
insb
sbb
inc
xchg
add
and
xchg
aad
aaa
pop
jb
les
mov
rcrl
pop
repz
scas
mov
inc
movsl
sbb
mov
mov
imul
push
sarl
lods
cmpl
mov
jo
das
xor
sahf
cmp
cwtl
sub
pop
les
dec
mov
lcall
push
popa
icebp
fwait
or
jl
sti
xchg
fwait
std
addl
inc
stos
or
out
mov
test
and
cltd
mov
into
test
sbb
arpl
insb
pushf
xorl
mov
cmp
jge
fnsave
fs
ss
dec
mov
outsb
and
rcr
dec
out
add
pop
jp
jecxz,pn
enter
out
mov
xchg
pushf
data16
jle
pop
cmp
mov
mov
fsubp
ljmp
pop
imul
mov
std
cmpsl
sub
sbb
cmp
push
dec
ret
lock
leave
fsts
fdivs
arpl
popa
dec
pop
sub
ffree
out
aas
lret
mov
mov
adc
or
icebp
imul
sbbl
aam
addl
mov
sarl
popf
dec
and
pop
mov
sub
pop
sbb
pop
std
push
pop
test
jns
addr16
push
dec
mov
je
test
push
push
out
je
jle
pusha
int
mov
jno
inc
xchg
xchg
adc
sete
cmc
push
clc
dec
adc
sarb
arpl
fcomp
inc
dec
jg
pop
add
xchg
sti
imul
rcll
lret
nop
push
addl
es
shrl
jg
or
push
ljmp
sbb
pop
cmc
sub
mov
call
fcmovnu
or
xchg
sti
push
mov
sarb
cmovns
push
cs
push
stos
outsl
dec
into
mov
adc
mov
repnz
rcrb
lock
adcl
xor
gs
inc
inc
rcrb
xchg
jecxz
add
sub
loopne
scas
aad
sbb
xchg
add
lret
out
inc
ljmp
shlb
cwtl
lods
add
mov
push
jnp
mov
xor
ds
mov
leave
in
pop
xlat
cmpsl
sbb
popa
sbb
cmp
xchg
sub
imul
clc
fidivrl
mov
pop
les
lret
andb
addr16
inc
inc
pop
jns
jb
cmp
imul
repnz
loop
mov
sti
dec
cmp
pop
or
and
call
addr16
push
in
aaa
and
movsl
in
out
mov
cltd
jmp
lret
and
cmp
push
sti
ja
inc
enter
movsb
loope
popa
out
push
add
mov
ret
pop
pop
pop
or
cmp
push
jns
nop
add
dec
and
and
loop
fucom
popf
cmp
add
movsb
mov
dec
push
mov
xor
push
dec
iret
mov
sub
sbb
mov
inc
or
pop
or
rorb
pop
mov
pop
into
mov
ss
sub
addps
fwait
xor
or
xlat
push
cmpsb
sbb
add
mov
push
jb
shll
repz
xchg
mov
icebp
dec
arpl
cltd
add
push
out
and
sbb
dec
movsb
lret
fisttps
xchg
push
bnd
jae
mov
popf
insb
fadds
add
xor
sub
inc
or
mov
fs
pop
cwtl
xor
xor
push
dec
les
ja
xlat
sub
inc
lret
or
jo
fmuls
or
popf
fnsave
pop
enter
das
cmp
mov
pop
xchg
mov
xor
movsb
pusha
sbb
es
subl
inc
sub
outsl
js
call
mov
cmc
xacquire
and
lds
xlat
mov
lcall
and
push
jp
push
in
and
sbb
pushf
sbb
std
shlb
jo
aaa
aaa
mov
jns
mov
add
out
outsb
adc
and
aas
mov
mov
testl
jecxz
lret
lcall
adc
ja
inc
int
push
aaa
mov
mov
mov
dec
sbb
inc
fwait
mov
mov
sub
add
mov
fstpl
mov
dec
mov
cmp
fsts
cmp
jae
ds
outsl
mov
adc
mov
pop
mov
cmp
xor
bound
inc
out
loop
jmp
into
cld
mov
adc
adc
cld
ds
or
xchg
nop
fiaddl
lea
dec
sub
mov
lret
into
test
and
jnp
lcall
xchg
ljmp
stos
mov
fmull
push
cmp
inc
in
xchg
xor
fisttps
in
mulps
stc
lahf
jae
push
sub
fidivl
mov
mov
and
cmc
testl
imul
incl
push
mov
shll
xor
and
cmp
stos
or
mov
rcr
mov
sti
mov
das
pop
cmpsl
and
xchg
mov
mov
fnstcw
dec
mov
in
mov
lret
test
sarb
xor
mov
in
lret
call
sub
mov
sbb
pop
xor
icebp
jp
cmp
jae
je
dec
jecxz
repz
mov
imul
test
xchg
inc
arpl
rorb
sub
mov
inc
adc
xchg
insl
xchg
xor
sub
dec
fsubl
inc
xchg
pop
push
scas
aas
or
fstpt
mov
insb
cltd
in
inc
fwait
icebp
jae
inc
hlt
or
arpl
xor
inc
sub
mov
jno
pop
and
mov
stos
ret
ds
pop
stc
test
mov
jb
test
iret
into
mov
std
movsb
popa
nop
mov
inc
fstl
sub
clc
fiadds
rcll
imul
stos
subl
fnsave
sub
lea
pop
xchg
pop
ja
and
iret
ret
add
and
fnsave
arpl
loopne
lcall
fimuls
adc
xchg
xchg
icebp
fdivl
movsb
mov
fisttpl
mov
and
lahf
xchg
cmp
mov
sbb
cmc
mov
lods
push
insl
cmpsb
xor
fsubrl
lea
in
subb
pmuludq
mov
inc
sub
sub
popa
pop
pop
push
cmp
xchg
pop
loopne
scas
out
jle
cmp
das
push
mov
shlb
cmpsl
or
sbb
rol
ficoml
leave
xor
jmp
cli
inc
mov
push
cmpsb
xchg
mov
out
cmp
adc
stc
mov
stos
lods
enter
setno
and
addr16
scas
mov
jnp
dec
inc
test
addr16
cmp
xchg
test
insb
dec
cmp
inc
inc
inc
xor
pop
rclb
lock
push
jno
dec
adc
mov
and
pop
jl
lds
xor
fistps
adc
push
std
push
adc
std
lods
movsb
leave
out
adc
inc
push
dec
pop
jmp
test
add
movsb
dec
xor
in
out
jge
aam
fs
mov
dec
sbb
jnp
jmp
movsl
dec
pop
cli
std
add
push
jp
test
and
xlat
nop
xor
fsubrl
test
xchg
add
and
dec
test
mov
cltd
test
or
lea
int
out
out
leave
push
and
test
lock
stc
mov
xchg
sahf
dec
outsb
pop
jno
pop
xchg
mov
push
sbb
int3
xchg
inc
jle
cld
rcll
sub
ja
scas
xchg
ljmp
aas
stos
ds
dec
lahf
adc
imul
idivb
inc
and
jge
jecxz
mov
jle
or
sahf
out
aas
sbb
aas
adc
mov
push
xchg
adc
inc
push
test
push
leave
enter
or
movsb
js
add
aam
les
in
dec
cmpsl
xchg
repz
pop
push
mov
in
push
or
push
test
mov
inc
xchg
cmc
es
adc
repz
mov
push
cmpsl
add
dec
and
mov
loop
lock
push
out
fnstsw
dec
mov
cmp
scas
push
enter
fidivrs
bound
cmp
loope
stos
push
popa
cltd
inc
jmp
xchg
push
fcmovnb
and
lea
clc
dec
xchg
dec
ret
shll
fwait
lock
inc
fwait
pop
and
pop
dec
out
xchg
hlt
les
cld
mov
popa
mov
stos
cmp
push
sub
cmp
movsb
mov
mov
jl
jbe
mov
pushf
loop
dec
out
push
lcall
cmp
and
sarl
xlat
or
xchg
shl
jp
rol
jmp
idivb
stos
jbe
sbb
pushf
lret
sub
fcom
jae
stos
sbb
icebp
sub
or
enter
jne
push
push
mov
mov
xor
mov
pop
and
mov
out
shll
mov
xchg
mulb
xlat
popa
mov
scas
push
sahf
adc
sti
lcall
lahf
jle
dec
repnz
loopne
ja
or
adc
jno
adc
lret
insb
xor
sub
push
mov
cmp
or
mov
movsb
push
pop
dec
xchg
xor
sbb
ss
stos
xlat
cmpsl
pop
push
mov
push
xchg
xor
mov
shl
pop
mov
lock
jbe
lods
add
push
dec
jle
mov
icebp
int3
pop
bswap
nop
push
loopne
aad
dec
xlat
xchg
cmpsl
xchg
out
jns
jbe
inc
cmpsl
mov
arpl
leave
pop
fidivl
repz
push
inc
dec
hlt
pusha
add
aaa
sub
mov
arpl
aam
push
shll
inc
lahf
sbb
jl
jecxz
and
and
fbstp
xor
push
stos
lcall
je
push
nop
xor
dec
mov
push
add
out
jne
cld
inc
sub
lcall
sub
adc
scas
or
mov
icebp
mov
aam
lret
jnp
fstl
movsl
mov
dec
or
lcall
into
loope
adc
jnp
xchg
arpl
cmp
jecxz
sub
outsl
imul
shrb
pushl
sbb
jecxz
imul
sub
mov
dec
outsb
das
fimuls
outsl
aam
lcall
lods
push
aaa
push
pop
sbb
movsl
jns
ljmp
xor
xchg
xor
adc
fbld
pop
js
sbb
mov
xchg
int
fistpl
adcb
movsb
pop
shlb
cld
dec
stos
aas
pop
pop
jmp
mov
jecxz
add
jae
repz
jno
cmpsl
jp
mov
insb
outsl
push
xor
add
loopne
rorb
mov
pushf
or
mov
fidivl
test
adc
jecxz
inc
jnp
out
inc
mov
jmp
jp
push
lret
mov
add
and
loop
int
pop
or
dec
dec
pop
mov
in
in
negl
arpl
int
mov
xor
enter
in
fnsetpm(287
imul
fnstcw
insl
push
test
add
cwtl
nop
test
arpl
nop
in
test
nop
loop
rorb
dec
stc
inc
shlb
pop
jo
aad
jmp
stc
mov
mov
std
out
sub
test
sarl
lds
aas
rcrb
es
or
mov
inc
flds
sub
stc
jne
popa
lods
sti
cmp
cmp
mov
cs
gs
scas
in
lea
outsl
adc
movsb
ljmp
scas
mov
jmp
or
adc
lock
sub
adc
push
mov
mov
add
xchg
cmp
xchg
sub
and
outsb
push
ret
in
mov
push
imul
mov
es
sub
filds
mov
cmp
pop
mov
movsb
outsb
outsl
pop
icebp
xor
leave
outsl
adc
pusha
mov
movsl
dec
enter
enter
neg
add
mov
or
add
cmp
js
pop
cmp
dec
fistpll
add
ljmp
sub
insb
add
push
je
fadds
pop
adc
push
xlat
sarb
add
add
add
xchg
ljmp
push
adc
or
mov
add
clc
push
dec
mov
sbb
cltd
out
mov
outsl
icebp
aad
inc
sahf
imul
int3
repz
xchg
xchg
dec
sbb
and
dec
cmpsb
std
sti
int3
repz
test
push
xchg
adc
push
adc
movsl
lahf
lock
mov
or
push
inc
jge
mov
jecxz
lods
testb
mov
ljmp
outsb
outsb
lahf
pop
sbb
mov
xor
jecxz
out
mov
cmp
mov
call
mov
cld
push
les
pushf
or
pop
push
dec
lahf
cmpsb
mov
loop
add
cmc
and
pop
xor
cmp
dec
sbb
push
sahf
cltd
movsl
pop
sub
dec
jo
pop
loope
arpl
gs
jl
pop
shrl
xor
xchg
out
out
jno
mov
sub
sbb
xor
into
mov
cmc
pop
mov
mov
mov
inc
scas
loop
xor
xor
add
cwtl
push
cwtl
adc
cmpsl
imulb
and
testl
mov
inc
aas
cmpsl
int
cmpsl
xlat
jle
enter
inc
cmp
dec
mov
or
ret
ret
repz
ja
push
popa
jno
and
daa
out
pop
sbb
xor
adc
cmpsb
dec
fdivrs
jo
hlt
pop
sub
mov
xor
xchg
outsb
testb
bnd
mov
je
fcmovnbe
inc
jle
std
lods
aam
fmull
addl
mov
push
jg
mov
loop
outsl
rclb
push
push
pop
jno
pop
cld
or
dec
lds
or
pop
add
mov
vprotw
lods
jns
cmp
xchg
fs
pusha
mov
cltd
test
cmpsl
ljmp
movsb
ret
xlat
in
pop
lods
jbe
and
and
sub
clc
pusha
es
cs
in
pushf
fld
pop
imul
inc
rclb
adcb
pusha
test
dec
mov
mov
addr16
add
test
sbbb
add
push
test
sti
cltd
jno
fiaddl
dec
mov
mov
mov
nop
mov
adc
xchg
mov
inc
daa
lret
mov
mov
imul
sar
xchg
rcrl
js
popa
cmp
jbe
out
test
dec
out
add
mov
leave
push
xchg
adc
fistpll
std
data16
jbe
xor
je
xchg
insb
scas
das
inc
push
inc
ds
xor
mov
mov
notl
dec
shrl
movsl
int3
jbe
cmc
stc
call
loop
mov
jae
dec
rorl
mov
rorb
lods
out
add
pop
add
cmp
push
clc
test
adc
xchg
fistpl
arpl
idivl
inc
fwait
jns
cmp
jp
mov
sub
jno
xchg
adc
mov
inc
add
fs
push
or
sbb
mov
das
dec
ret
push
cld
test
faddl
movsl
jge
pop
jl
or
mov
adc
xchg
aaa
sbb
add
lea
bound
inc
xchg
iret
jle
ficoms
std
in
lods
mov
dec
mov
pop
lods
das
mov
sti
sbb
shlb
ljmp
push
sub
outsb
push
aas
sbb
jae
shl
xor
icebp
and
jge
popa
xchg
movsb
shll
out
and
out
frstor
test
out
pop
movsl
movsl
adc
mov
bnd
pop
movl
pop
pusha
ret
lret
mov
out
pusha
cmp
out
fldt
adcb
jmp
in
out
sub
mov
int3
sbb
lods
ljmp
aam
inc
xor
and
xor
or
inc
mov
mov
push
lahf
jg,pn
push
adc
icebp
xchg
push
jl
xor
jecxz
ss
lock
cmp
pop
mov
test
enter
push
test
test
ret
push
rcl
fdivl
inc
xchg
adc
and
jl
or
js
and
pop
repz
xchg
into
shrl
xchg
sub
inc
out
in
aad
aam
out
mov
inc
sub
sub
or
into
das
xchg
pop
in
insb
dec
cmpsl
aaa
xor
pop
or
mov
dec
inc
mov
and
es
js
insb
xchg
inc
jge
mov
rorl
roll
jae
hlt
xlat
mov
outsl
pop
push
jno
mov
pop
dec
aad
pop
faddl
mov
xchg
fwait
jg
mov
xchg
sbb
cmc
hlt
cld
adc
adc
sbb
push
mov
sbb
fistpl
fucomi
adc
cmp
jl
or
das
imul
addr16
xchg
sub
popa
leave
aam
mov
cmc
xor
rcll
scas
cmpsl
je
sub
cld
inc
mov
idivb
push
ljmp
repnz
loope
je
xor
and
subl
push
xchg
mov
adc
es
ret
push
outsl
inc
lahf
xchg
incb
and
push
fbstp
mov
sub
jecxz
pop
aam
cs
cmp
jl
lahf
xchg
ljmp
xchg
xchg
push
adc
jnp
jns
test
divb
xchg
in
jge
push
stc
shrl
inc
or
cs
shrl
mov
les
decl
mov
es
icebp
or
test
inc
mov
rcll
pop
xlat
push
mov
stc
in
notl
or
sub
xchg
das
lods
jo
dec
ret
scas
pushf
jge
or
orb
and
pop
scas
cld
xor
stos
outsl
popa
shr
or
pop
sbb
dec
inc
mov
xchg
loopne
add
mov
popa
mov
mov
in
jmp
mov
push
add
fidivs
cs
cmp
fldcw
adc
es
stos
fsubp
push
dec
insl
jnp
mov
out
andl
cmp
xor
mov
stos
data16
and
push
dec
pop
xchg
add
lcall
jecxz
cmp
setnp
sarl
adc
test
adc
std
adc
dec
jo
sbb
add
mov
add
lret
mov
fstp
mov
pop
mov
fwait
push
sub
scas
pop
mov
add
mov
es
cli
mov
notb
in
pop
mov
jne
pushf
jnp
inc
insb
add
jno
and
sub
or
push
ss
pop
lds
jb
rcrl
adc
pop
aas
xlat
jp
pop
sbb
cwtl
ljmp
pop
std
xor
ja
xor
mov
in
enter
scas
xchg
jns
xor
adc
mov
mov
ret
inc
xor
repz
mov
out
push
xchg
pushf
push
stos
fucom
jnp
pop
loop
xchg
mov
inc
sub
mov
push
fstpl
jge
inc
mov
mov
mov
jecxz
movsl
notl
aad
daa
pop
dec
outsl
or
jb
and
adc
push
jmp
jns
jne
push
adc
or
test
lret
dec
mov
in
xor
sbb
cmp
pop
popf
add
xor
std
jb,pn
dec
insb
mov
push
xchg
mov
push
pop
xchg
jno
jmp
enter
aad
es
add
lods
pop
ficoms
cmp
push
push
jnp
adc
loop
and
in
mov
push
icebp
ret
xlat
and
lea
repz
or
jmp
mov
fstpl
xchg
add
insb
jbe
bound
jns
jb
push
lcall
shlb
leave
inc
mov
ret
fs
push
push
subb
jno
xchg
into
mov
addl
jmp
and
dec
xchg
in
lahf
push
xor
and
mov
xchg
dec
cmpsl
popf
lock
lods
shrb
xor
pop
inc
fcompl
pop
ss
jns
lods
pop
push
pop
std
aam
repz
scas
shll
arpl
or
cmpsl
cltd
adc
adc
cltd
jo
popa
cltd
ja
jg
jmp
std
xchg
push
outsl
fisttps
mov
lods
testb
mov
daa
sbb
or
pop
dec
mov
test
not
sbb
fists
stos
dec
sbb
xor
enter
stc
mov
out
int3
js
cwtl
or
cmpsl
rorl
movsb
sbb
lds
ja
push
lods
sbb
sbb
lock
xor
stos
mov
jg
mov
insl
les
sbb
xchg
mov
in
and
jae
aam
ret
aaa
xor
cmp
dec
lahf
push
cmp
or
sahf
push
xor
jle
or
jns
or
sub
cld
sbb
add
scas
push
test
dec
jecxz
sub
mov
push
add
nop
inc
and
js
loope
jg
xor
dec
or
push
xor
cmp
mov
or
shrl
insl
xchg
or
cwtl
test
dec
dec
jns
sbb
int3
fidivl
in
and
add
mov
jnp
xchg
test
xchg
jo
test
popf
xchg
push
push
popa
sbbb
mov
jge
mov
add
scas
lods
lea
dec
loopne
xor
repz
or
repz
xchg
outsb
fsubrl
push
jge
sub
cmp
push
iret
insl
das
or
and
xchg
inc
aad
setb
cmp
les
aas
sub
mov
jo
mov
aaa
nop
fcom
inc
adc
out
dec
addb
fucomi
fildl
ret
cs
sub
rcrb
or
cli
out
shr
cmp
push
je
jmp
jae
insl
xor
mov
jmp
cmc
pop
fcmovnbe
dec
aam
clc
xchg
clc
out
test
dec
in
ja
jno
stc
int3
call
pushl
xchg
sahf
fwait
xor
xchg
jle
push
mov
aaa
mov
arpl
pop
mov
leave
xchg
jle
sub
or
rolb
mov
mov
xchg
dec
daa
pop
add
insb
rclb
test
ror
dec
fsubrs
mov
xor
cmpsb
sbb
insl
add
adc
fimuls
mov
fcomp
aaa
jns
cmp
push
lea
test
shl
jg
add
xchg
cld
sbb
sbb
cmp
iret
lret
pusha
mov
push
and
test
testb
mov
xor
mov
add
insb
pop
sbb
add
dec
orl
js
ret
jg
mov
push
dec
sbb
jnp
pop
loopne
pop
inc
outsl
repz
mov
and
sub
or
xor
mov
testl
pop
mov
popa
pop
subl
mov
cmp
xchg
push
push
sbb
add
lods
mov
ja
xchg
out
addl
data16
adc
pop
inc
mov
or
adc
mov
ja,pn
push
adc
jne
or
pop
in
out
imull
jne
xorl
loope
push
dec
mov
adc
cltd
sbb
adc
sub
gs
mov
or
mov
mov
dec
sub
nop
push
cld
push
cs
orb
fnstenv
stos
sub
mov
std
imul
dec
pop
jb
sub
and
push
aas
sbb
movsl
scas
shlb
sbbb
out
xchg
cmp
loop
lock
sub
mov
shrl
push
mov
jo
popa
sub
in
mov
push
pop
xor
push
aas
cmpsl
jno
stc
insl
pop
mov
xchg
out
push
xlat
sbb
pop
popf
mov
mov
xchg
shl
fwait
out
xchg
cld
and
insl
jg
mov
cmc
imul
mov
icebp
fs
test
imul
scas
or
mov
pop
or
fildll
hlt
out
inc
outsl
mov
ret
imul
outsl
and
adc
mov
sbb
mov
push
sahf
inc
xchg
cltd
faddl
mov
dec
ror
pop
mov
adc
repnz
lock
mov
or
je
lcall
repz
mov
ret
fisttpll
dec
add
aas
imul
or
inc
nop
or
sbb
nop
xchg
inc
cmp
repz
push
cld
out
dec
andb
pop
inc
iret
or
inc
shll
call
mov
dec
shrl
adc
repz
and
lcall
mov
roll
cltd
sub
adc
adc
fs
push
cmp
push
cmc
mov
pop
push
rolb
cmp
lock
inc
pop
dec
dec
jge
cltd
pop
fisubl
jns
jp
les
add
repz
rcrb
xchg
lret
das
flds
pop
xor
pop
mov
pop
andl
in
mov
and
push
fwait
jne
mov
sub
mov
fxch
in
aad
pop
test
xlat
cwtl
popf
lods
lds
or
aam
mov
jnp
outsb
jecxz
dec
aam
out
push
jg
out
and
sbb
subl
aam
pop
and
lret
ret
lock
insb
sbb
dec
xor
lahf
rorb
into
mov
jb
inc
dec
roll
ljmp
out
dec
rclw
testb
jmp
cmp
repnz
lods
push
push
in
in
lret
mov
mov
inc
or
xor
call
fnstenv
add
jo
icebp
or
loopne
lods
dec
and
test
cmp
jp
push
and
in
xor
popf
loopne
sub
inc
mov
mov
data16
jl
negl
insb
inc
xchg
scas
xor
aas
scas
scas
and
fs
addl
inc
pop
lods
dec
sub
sahf
pop
data16
sbb
mov
fcompp
ficomps
xchg
and
test
push
add
xchg
push
lods
xor
popa
or
icebp
ret
push
inc
rorl
popf
ja
imul
pop
addl
adc
or
jp
das
mov
iret
cmp
or
lea
sub
cmp
jns
xor
add
addr16
shlb
insb
das
inc
mov
in
mov
js
sub
out
movb
push
pop
xor
jb
and
test
cmp
das
daa
add
ret
mov
or
push
add
push
push
scas
dec
jecxz
pop
jns
jo
mov
cmp
add
jne
call
cs
sbb
lock
adc
sub
mov
outsl
dec
pop
mov
add
cmpsb
fidivrs
mov
scas
int3
or
ja
addr16
adc
jp
loope
iret
popa
dec
xor
es
xchg
movsl
add
jae
roll
jnp
mov
mov
inc
lods
mov
test
ficomps
pop
mov
mov
aad
mov
out
pop
sbbb
lret
in
mov
push
mov
shl
sub
or
lods
jmp
xchg
dec
jmp
imul
fcoml
jne
jg
cmp
jb
loope
xchg
pop
fiaddl
loopne
inc
cltd
xor
or
hlt
mov
jae
clc
imul
clc
push
popa
and
push
loope
mov
repnz
popl
test
out
fwait
aaa
mull
cli
mov
shr
mov
or
mov
or
inc
mov
es
sbb
and
jp
add
add
pop
test
insb
adc
push
pop
loopne
cmp
xchg
mov
popf
arpl
jnp
jl
pop
dec
xor
ss
dec
lret
or
imull
cmp
mov
rolb
ja
dec
insl
add
pop
ja
addb
xchg
movsb
dec
in
and
ljmp
jmp
jmp
mov
and
bound
adc
sbbl
cmp
add
mov
mov
cmpsb
adcb
fsubr
divl
addr16
gs
stos
shl
push
cwtl
fprem1
gs
pop
imul
xchg
in
aad
mov
aad
cmovg
cmpsl
scas
mov
out
shlb
push
cmp
inc
and
jo
sub
push
xor
jecxz
sbb
cmp
sbb
pop
sub
cltd
push
adc
sbb
out
test
js
mov
xor
popa
test
mov
dec
icebp
mov
fld
and
std
sub
mov
test
adc
scas
adc
in
pop
dec
scas
xchg
pop
fcmovu
loop
mov
pop
lds
stos
pusha
cwtl
and
loopne
outsb
jbe
pop
xchg
scas
or
xor
adc
adc
ret
xchg
push
lock
rcr
ss
icebp
adc
mov
mov
push
in
pop
stos
jae
ds
leave
incl
cmp
mov
jmp
cmpsb
jp
inc
mov
out
jbe
cmp
inc
pop
mov
mov
sbb
out
xor
or
movsl
test
fcmovnu
out
inc
and
pop
addl
mov
jb
add
mull
stos
aas
sahf
aam
adc
in
inc
call
arpl
cmp
cmp
cmc
mov
pop
jge
je
mov
cmpsl
mov
pop
mov
movsb
xchg
out
jne
push
jle
xor
cmp
in
mov
fldpi
outsb
xor
or
sarb
addl
mov
mov
mov
sarb
vmwrite
call
mov
jb
cmp
fadds
push
lcall
sub
gs
xchg
inc
fsincos
adc
xor
dec
test
jno
shll
nop
xlat
imul
xchg
aam
in
or
cmp
stc
popa
mov
mov
sbb
xchg
jnp
push
sub
imul
loope
cmpsb
mov
inc
pop
xchg
mov
ret
add
movsb
cmp
aam
pop
fwait
cmp
inc
cmp
mov
mov
mov
ret
inc
repz
clc
and
int
inc
data16
decb
mov
or
mov
and
mov
frstor
test
xchg
push
and
cmp
imul
lds
rcll
dec
push
js
add
mov
jp
sahf
notb
and
inc
sbbb
insb
cmp
in
or
dec
sbb
cmp
inc
stos
dec
cmp
das
js
jae
aam
mov
dec
jb
push
and
fnstenv
push
repnz
or
or
cmpsl
outsl
mov
rclb
sarl
mov
out
push
ljmp
jge
test
stos
or
cwtl
pop
or
loope
adc
jno
or
cmp
lcall
jb
scas
fs
pop
es
pop
inc
scas
out
xchg
test
cmc
shr
mov
xor
xchg
or
enter
loop
add
pop
or
pop
xchg
jg
dec
fistpl
out
ret
inc
sub
cmp
push
ret
or
pop
and
mov
or
out
sbb
add
adc
sub
pop
cwtl
mov
mov
je
push
sub
mov
fisubrl
mov
test
sbb
fstpt
lret
sub
pcmpeqw
testb
jecxz
cmp
ja
xchg
dec
stos
pop
data16
adc
or
cld
rclb
cmp
mov
sbb
mov
mov
call
testb
sbb
dec
ljmp
sub
mov
aaa
in
fmull
int
mov
icebp
nop
inc
fcomip
sbb
dec
push
sbb
adc
push
push
xchg
ficompl
push
xchg
dec
lcall
js
fsts
ja
sbb
lock
fstpt
fwait
jb
sub
mov
je
mov
add
popf
jne
jno
frstor
push
mov
fmuls
outsb
mov
nop
sahf
repnz
xchg
data16
insl
inc
cltd
pop
cmp
inc
or
std
mov
nop
loop
clc
or
jp
xor
or
insl
mov
mov
inc
push
or
adc
cwtl
jbe
shlb
lods
pushf
adc
fcoms
cmpsl
in
call
loope
cmpsl
fbstp
and
mov
mov
js
fcmovne
ret
xlat
sahf
insl
add
xchg
push
sbbl
lods
mov
out
nop
iret
ds
stos
imul
shll
sbb
cmc
fstpl
pop
jns
and
push
scas
ja
in
adc
insb
jb
scas
test
outsb
orb
into
movsl
js
mov
pushf
rol
fmuls
pop
mov
outsl
cli
insl
movsb
jne
out
andb
ret
pop
aas
mov
sti
xor
pusha
sbb
dec
int
or
adc
sub
jp
js
lods
sub
jp
jne
pop
aam
adc
jecxz
mov
ror
cmp
stc
shrl
inc
nop
push
pushf
inc
stos
or
loope
adc
inc
in
jle
sbb
add
pushf
cs
jbe
mov
popf
and
mov
pop
imul
out
imul
lock
inc
inc
int3
stos
jmp
jb
stos
add
in
push
lods
adc
xor
stc
gs
mov
out
lret
pop
fcmovnu
push
cltd
jg
mov
enter
fdivr
fmul
pop
lds
stos
inc
subb
loope
insl
jae
mov
sbb
xchg
and
fistpl
aad
rorl
hlt
shrb
clc
lret
shlb
and
xchg
xor
cmp
push
scas
xchg
push
rorb
sub
insb
fld
jle
pop
pop
inc
imul
or
in
scas
jnp
pusha
orb
sbb
aas
add
jnp
dec
pop
xchg
cmp
sbb
pop
cmc
add
jmp
loope
repz
cmp
mov
push
and
add
out
pop
or
or
mov
stc
aas
pop
aad
mov
out
pushf
inc
pop
icebp
int
mov
xor
lods
ret
pop
cmp
pop
cmc
or
movsb
addb
outsb
cwtl
jp
and
pop
je
or
iret
lods
loopne
and
sbb
xchg
cmp
rcrl
ret
loopne
xchg
inc
mov
imul
ja
adcl
adc
lea
xchg
dec
and
mov
mulb
scas
pop
push
data16
sub
cs
pop
sub
imulb
arpl
add
stc
subl
ss
or
sti
popa
xchg
mov
fistpl
sbb
xchg
int3
popa
add
js
lea
ljmp
pop
pop
xor
int
adc
fistl
dec
xchg
mov
lret
in
add
lcall
cld
mov
ss
cmp
sub
mov
aam
js
and
inc
movsb
cmp
outsb
pop
xchg
inc
fimuls
int3
inc
ret
and
lds
mov
or
cmpsb
addb
loopne
xor
aas
xor
cmp
or
shl
sub
popf
scas
insl
packuswb
lahf
dec
mov
test
shlb
add
notl
js
sub
push
xchg
into
and
enter
cwtl
test
xor
fimull
push
push
sbb
mov
push
sbb
mov
add
insl
pop
fwait
scas
mov
andl
or
incw
inc
xchg
aaa
mov
js
add
fsts
dec
shld
inc
xor
inc
rclb
insb
xor
xchg
mov
repnz
pushf
call
cmp
inc
mov
test
pop
js
jp
cmp
sbb
mov
pushf
lret
bound
mov
add
jne
faddl
jo
xchg
fldcw
mov
or
bound
leave
in
js
aam
xchg
stc
dec
xor
ljmp
sbb
adc
lret
mov
mov
ja
clc
je
cs
jo
adc
adc
cmp
adc
sub
je
insl
mov
and
lret
xchg
and
mov
lods
aad
shr
and
clc
mov
inc
xchg
cwtl
ss
ficomps
and
cld
add
push
aam
adc
push
inc
fsubs
mov
xor
fnstsw
pop
fldcw
cmp
cwtl
fs
loopne
xchg
fnstsw
add
fstpl
mov
mov
mov
rorl
mov
lret
inc
sbbb
push
popa
inc
movsb
decl
pop
in
add
mov
cmp
scas
jb
or
mull
pop
and
sub
inc
or
jo
stos
inc
sbb
les
cmp
adcb
jg
mov
pop
div
ret
mov
sbb
xchg
test
push
push
clc
inc
jp
test
repnz
lods
and
sub
inc
dec
pop
fistps
fs
lea
mov
je
pop
std
in
scas
pop
imul
test
cmp
xchg
cmpl
imul
das
dec
cs
std
mov
mov
shll
ds
adc
scas
jo
pop
std
sar
daa
mov
leave
shll
pop
push
insb
retw
xchg
or
leave
mov
xor
sbb
jo
stos
pop
pusha
push
rclb
mov
daa
cmpsb
test
mov
jge
and
addr16
arpl
cs
xchg
test
xchg
aas
mov
arpl
cmpsb
arpl
pop
inc
call
inc
mov
xor
ret
inc
xchg
jmp
frstor
flds
cltd
inc
cmc
mov
imul
orb
shrb
shll
sbb
pop
or
js
mov
int3
cld
inc
sub
jmp
or
mov
sti
xlat
jb
nop
xor
mov
xchg
data16
in
jae
cs
sub
push
test
mov
cmpsb
cmp
nop
mov
sub
cmpsb
pusha
pop
sub
mov
mov
or
outsl
add
shrl
jg
pop
push
bound
sub
pop
rcr
out
sbb
xor
or
test
sub
std
div
fdivrs
mov
lea
repnz
dec
and
imul
aam
jb
rcr
aaa
pop
adc
inc
mov
add
fwait
mull
daa
jbe
sti
cmp
dec
xchg
push
pop
scas
push
popf
imul
pop
imul
xchg
shlb
iret
dec
xchg
fcmovnbe
mov
push
sbb
or
mov
ds
rcl
pop
aas
test
pop
icebp
stc
sub
and
add
xchg
mov
mov
popf
pop
pop
arpl
mov
push
out
jp
pop
add
mov
pop
arpl
in
pop
mov
mov
aaa
push
in
into
inc
jno
and
loope
das
jmp
xor
icebp
or
into
daa
hlt
das
sub
pushf
cltd
pusha
sbb
mov
xor
or
adc
or
mov
shl
push
mov
push
jae
mov
rol
insl
lea
lea
les
ja
adc
jne
popa
xchg
ret
sbb
iret
fcmovnb
lods
rcl
push
mov
fisttpll
inc
mov
sub
ljmp
loop
cmc
jmp
jo
pop
fucomip
enter
xor
mov
rclb
repz
mov
adc
lods
loope
cltd
jo
jmp
push
aas
or
filds
lcall
hlt
scas
jle
cli
mov
jb
xchg
sarb
cmpsl
mov
les
xor
mov
out
jle
mov
add
mov
mov
sarb
push
lods
xor
jae
cmpsl
repnz
push
jmp
cmpsl
push
jg
sub
and
mov
inc
std
pop
push
les
mov
mov
test
pop
mov
push
in
sub
adc
adc
addr16
push
movsb
in
sbb
cltd
sbb
jl
mov
int
aas
push
pop
mov
push
inc
pusha
sub
xor
dec
cmp
adc
addr16
push
imul
add
pop
pusha
mov
aaa
xlat
cwtl
lds
mov
dec
jle
fdivs
daa
out
push
mov
out
iret
in
push
das
into
fstl
out
cmp
jmp
lods
jmp
add
pusha
add
subb
iret
mov
and
cmpsl
inc
out
fucomip
lret
scas
test
imul
ja
lods
jmp
test
lahf
adc
testb
icebp
in
jnp
xor
dec
imul
dec
pop
sbb
mov
sbbb
ljmp
stos
insl
out
out
stos
mov
sub
xchg
xor
movsb
test
dec
cmpsl
and
movsl
les
stc
in
fs
or
xchg
mov
cmpsl
popa
cld
pop
sldt
or
push
shrb
lret
sub
pop
loopne
dec
icebp
push
mov
shr
and
outsl
pop
insb
mov
add
fcmovnbe
or
push
jns
jo
or
lret
jbe
and
pop
jmp
js
pop
outsb
stos
cmp
push
repnz
scas
cmp
popf
int
mov
sbb
stos
mov
add
stos
lcall
pop
jne
cs
add
pop
pop
mov
imul
insl
dec
hlt
in
adc
xadd
jo
jns
and
mov
pop
push
push
test
fdivrl
jg
xor
jns
pop
jbe
bound
inc
out
std
sub
sar
ja
lds
fcomps
or
push
stos
mov
mov
inc
pop
es
cli
inc
adc
fwait
jne
jg
inc
mov
lods
test
mov
jle
mov
sbb
faddp
iret
loope
push
push
test
pop
arpl
sub
jmp
ja
imul
test
jns
mov
inc
and
test
and
xchg
fdecstp
xchg
and
lcall
dec
scas
loopne
sbb
incl
scas
jns
or
mov
test
jno
aam
data16
call
jmp
lret
in
cli
xor
push
dec
mulb
add
mov
gs
and
hlt
xorb
sbb
int3
cmp
cltd
mov
mov
fimuls
loopne
les
cmp
jne
fcomps
imul
mov
cmp
jnp
and
clc
sbb
arpl
std
cmp
decl
sub
xor
fcoml
leave
int
cs
xchg
mov
addb
das
inc
dec
cmp
lcall
lds
fcoml
sub
ljmp
loopne
mov
jle
adc
mov
mov
addr16
div
mov
leave
cwtl
aam
aas
cmp
dec
xor
addl
mov
sbb
and
mov
cmpsb
out
test
push
test
mov
les
and
loop
lret
lret
mov
pop
sbb
adc
out
std
pusha
pop
pop
inc
orb
dec
mov
aad
push
push
mov
cmp
icebp
hlt
inc
dec
adc
xchg
push
sbb
and
sub
adc
mov
push
adc
jno
fdivrl
pushf
scas
loop
xchg
mov
es
negl
jne
mov
outsb
aad
les
sub
lds
and
cmp
mov
cmp
out
dec
xchg
mov
jmp
and
jnp
pop
mov
lds
mov
mov
mov
mov
cmpsl
pop
in
dec
jne
cmp
add
dec
jp
and
lahf
cmp
imul
test
jle
aad
xchg
scas
sbb
aam
lret
pop
sub
iret
mov
push
sub
inc
rclb
xchg
pop
mov
enter
mull
mov
pusha
cmp
leave
aaa
fdivrs
cmpsb
add
push
fstps
cmp
mov
fucomi
ja
nop
pop
rolb
cmp
push
idivl
mov
lods
cmp
mov
push
jo
sbbl
pop
sub
jp
or
jno
xchg
call
xor
fstl
je
fidivl
push
add
inc
lock
xor
adc
mov
jmp
jge
push
insl
jns
insb
xchg
mov
insb
xor
dec
nop
mov
cld
adc
lds
loop
pop
jge
adcb
es
push
cmp
push
sub
jmp
ret
and
repz
xlat
inc
aad
xchg
mov
sbb
test
iret
mov
adc
dec
cmp
mov
sub
roll
dec
inc
sub
pushf
pop
cltd
sub
xlat
adc
inc
lfs
jmp
cmpxchg
bound
sbb
mov
pop
lcall
or
pop
je
and
jl
in
xor
loopne
pop
adc
ja
inc
sbb
or
mov
cmp
jl
leave
inc
sub
add
lds
jns
in
js
and
sbb
popf
jnp
cmp
dec
fsubrl
dec
add
and
in
jle
push
jl
loope
ficoml
xchg
outsb
mov
sahf
mov
jno
jmp
or
mov
fldl
ss
inc
ljmp
mov
pop
nop
add
inc
mov
stos
lea
mov
sarl
jne
iret
test
das
in
lods
roll
test
out
imul
test
enter
enter
push
mov
testl
and
popf
dec
movsb
inc
stos
adc
scas
mov
add
inc
dec
ljmp
nop
in
stos
call
hlt
xchg
mov
test
mov
sub
xor
into
pop
mov
loope
xchg
inc
shrl
adc
pop
lcall
xchg
push
or
outsb
fimuls
lods
push
xchg
dec
jae
stc
movsl
cmp
std
cmp
xchg
imul
ret
stos
test
sub
mov
and
int
push
lds
add
mov
mov
movb
xor
stos
mov
shlb
fsubrs
add
cli
subl
dec
int3
xchg
es
xchg
jnp
mov
or
dec
enter
fisubrs
or
mov
dec
mov
jl
enter
and
mov
xchg
xor
xor
jg
fidivrl
jns
test
inc
int3
stos
in
pop
fdivrl
jg
jnp
add
mov
pop
mov
call
mov
shlb
scas
jns
lcall
and
hlt
xor
jo
dec
loope
mov
pushw
cmpsb
push
mov
mov
sbb
mov
repz
xchg
push
mov
dec
outsl
out
mov
pusha
addb
fists
sahf
out
movhps
pop
idiv
and
shll
les
jbe
jne
xor
out
xchg
in
movsb
inc
in
daa
push
dec
and
fists
xor
jne
and
lods
add
aad
in
cmp
fcmovbe
arpl
loope
mov
sbb
mov
inc
push
or
addr16
cmp
cmpsl
mov
xor
xor
sub
mov
repz
xor
xchg
testl
inc
mov
mov
dec
or
testb
push
push
or
mov
gs
jg
test
pop
lcall
cld
mov
popa
fistpl
pop
mov
mov
repz
xor
mov
ss
push
cmp
xchg
pop
fiaddl
lds
clc
jg
test
mov
inc
gs
outsb
inc
cld
dec
sub
mov
push
ss
mov
fdivrs
sub
imul
jae
cmpsl
lahf
jge
mov
mov
in
jae
ret
and
clc
xchg
int3
int3
mov
imul
cmp
mov
inc
insl
ret
jno
lods
fdiv
adc
adc
mov
cld
adc
das
xor
xchg
and
jmp
stos
mov
cltd
xchg
call
inc
outsl
inc
xorl
jle
lods
repz
je
shll
sti
sub
sub
fisttpll
hlt
sub
jae
xchg
jl
rcll
mov
and
sbb
pop
popa
cli
mov
sahf
lock
jnp
sub
jns
insl
mov
mov
add
shrl
xor
enter
xchg
cmp
inc
popf
pop
sub
ja
aad
test
jo
test
fbstp
mov
push
stos
xor
call
ficoml
inc
jge
cmp
dec
jo
adc
or
mov
lret
mov
inc
sbb
sbb
push
test
jnp
push
stc
mov
rcll
push
jg
cmp
aam
aas
dec
sub
je
sub
xlat
fcomp
pusha
je
xchg
push
mov
pop
pop
popa
jecxz
or
rcr
subl
lret
jno
and
inc
jnp
pop
cld
lods
out
pop
orl
pop
test
mov
cmp
add
std
stos
add
inc
mov
xor
mov
xchg
dec
jg
icebp
pusha
cmp
pop
jno
fisubrs
add
cmc
loope
sub
adc
push
out
pop
adc
mov
xchg
push
mov
push
mov
mov
xor
shl
cld
testb
add
jg
mov
pop
sub
pop
and
and
cmc
sub
fwait
sub
or
sbb
pop
xchg
mov
jmp
imul
lock
divb
dec
and
mov
into
and
sub
subb
mov
xchg
push
xchg
mov
in
add
mov
repz
inc
add
mov
lods
pop
inc
pop
test
test
xlat
inc
cmpsb
ret
loopne
push
xor
leave
jp
cli
cmp
jl
jecxz
jg
test
scas
inc
mov
aad
adc
outsl
cmp
repz
jl
ljmp
andl
mov
push
test
adc
mov
lahf
and
lret
xor
outsb
test
add
sahf
jo
cmp
push
xor
scas
xchg
in
sahf
fnstcw
scas
push
imulb
out
lret
cmp
fwait
movsl
jne
lret
ret
pop
cs
pop
ds
ja
pop
pop
inc
pop
sbb
pop
aam
sbb
or
jnp
stos
inc
fimuls
mov
iret
cld
stc
push
fs
push
cltd
jp
gs
sbb
pop
test
mov
xchg
pushf
or
mov
jmp
aas
sbb
in
ds
mov
pop
aas
cld
cs
xor
cmp
jne
push
aad
mov
push
adc
out
repz
hlt
andl
mov
subl
loopne
pushf
cmpsl
push
mov
shlb
cmp
arpl
cmpsb
push
xchg
aam
mov
pop
adcb
pop
enter
and
push
and
xchg
sbb
scas
xlat
into
popa
jle
adc
mov
dec
cmp
inc
int3
outsl
pop
std
xchg
clc
mov
mov
lret
lock
outsb
fmull
and
push
outsb
fcoml
movsl
sub
ret
in
jecxz
fcom
inc
es
dec
data16
sahf
mov
inc
or
push
mov
dec
ret
push
or
jnp
push
les
cmp
pop
into
fnstenv
rcrl
lret
jecxz
xorl
cwtl
cli
sub
cmp
imul
mov
adc
ja
xchg
add
inc
mov
and
adcl
sbb
sub
and
and
mov
mov
pop
pop
test
inc
gs
movsl
mov
repnz
push
xchg
adc
fwait
pusha
lock
mov
mov
push
sbb
ss
outsl
leave
adc
lods
idivl
inc
sub
scas
mov
stc
xchg
rol
mov
inc
pop
fcoml
mov
mov
in
mov
jno
repz
adc
sub
push
outsb
lcall
addb
xor
mov
mov
das
jp
pop
mov
into
jl
stos
jno
xchg
movl
add
sar
in
fildll
sbb
mov
dec
adc
into
lds
jge
movsl
jb
inc
sbb
and
push
mov
inc
adc
cld
mov
sahf
ljmp
in
cwtl
test
dec
mov
and
adc
pop
dec
sub
or
shl
xchg
mov
cmp
insl
or
repnz
out
lcall
data16
jl
add
inc
pop
add
scas
sahf
hlt
ljmp
outsl
aaa
and
inc
sbb
lret
pusha
ds
out
outsl
cmp
push
xor
in
push
sub
mov
pushf
insb
mov
sbb
call
jecxz
or
xchg
add
fs
shll
daa
sub
fisubs
cltd
sahf
adc
je
es
repz
mov
adc
scas
push
push
jg
ja
adcl
test
std
rorl
leave
test
fcomi
and
sti
cmpsb
and
cmpsb
inc
mov
cmp
bound
inc
popa
mov
pop
jle
and
dec
icebp
xchg
daa
sbb
lahf
push
or
cli
fcomip
mov
movsb
pushf
pusha
sbb
in
dec
js
adc
imul
mov
js
popa
pop
dec
inc
out
push
jg
out
push
lret
js
mov
cmc
nop
adc
push
repnz
lahf
sub
lret
movsl
push
lods
out
and
scas
fdiv
sarb
or
mov
mov
popa
ja
ss
sub
mov
add
xchg
xchg
imul
sbb
hlt
jae
imul
or
cmc
into
jb
jo
aaa
addr16
dec
inc
in
and
and
pop
mov
jge
dec
and
notl
mov
daa
ficompl
inc
hlt
aad
lea
xchg
jb
xchg
das
in
jmp
add
jae
insb
push
outsb
out
rcrl
les
add
sbb
xchg
xchg
shr
inc
mov
push
iret
xlat
rcr
cmc
cmpsb
jge
cld
add
mov
out
or
jl
jae
fsubl
pop
popa
or
fnstcw
push
lds
iret
icebp
adc
das
lock
cmp
lcall
popa
xlat
test
sbb
ljmp
lret
sub
out
xchg
vmovq
stos
inc
pop
out
sub
pop
cmpsl
cmp
jnp
std
cmp
or
cmp
ljmp
or
xchg
add
stos
lods
popf
sub
push
sahf
cli
dec
stos
mov
mov
lea
adc
jge
cmpsb
inc
arpl
sbb
cmc
faddp
xchg
pop
jge
push
xor
clc
mov
add
js
xorl
int
inc
rcrb
sub
xor
or
inc
inc
hlt
lods
sbb
jmp
add
xchg
inc
xchg
jle
loop
add
pop
sbb
enter
pop
in
mov
or
push
and
xor
loopne
add
mov
lret
xchg
dec
repz
shll
inc
test
movsb
sahf
push
dec
mov
sbb
cli
call
cmpsl
cmp
cmpsl
cltd
es
outsl
mov
sub
push
sbb
js
mov
out
pminub
add
insb
and
dec
jp
je
cld
jle
lea
out
add
flds
movsb
rcr
aam
push
cmp
mov
loop
sti
loopne
cmp
mov
pop
es
lock
mov
std
xchg
xor
dec
and
dec
adc
xor
jg
fwait
rcrb
inc
adc
push
cmc
jg
cs
in
xor
cli
pop
in
jne
adc
enter
fstpl
iret
xor
add
adc
dec
rcl
test
in
movsb
cmc
in
ret
push
xor
bound
push
dec
addr16
call
push
or
out
xchg
sub
aaa
mov
aaa
subb
xchg
std
pushf
inc
adc
aas
pop
fisubrs
jmp
popa
xchg
jp
cmp
in
push
jp
jle
das
and
xchg
rorb
addr16
jne
cmp
outsb
ret
addr16
mov
repnz
pop
hlt
out
sub
sub
cmp
mov
loop
sub
test
cmp
mov
int
cltd
mov
lods
xor
lahf
mov
incl
fists
xlat
addr16
jle
dec
rol
cmpsl
adc
dec
cmp
ss
dec
pop
dec
push
jno
pop
inc
jge
stos
aaa
adc
lret
add
iret
test
gs
jo
ss
cmp
or
mov
add
mov
adc
arpl
add
shl
sbbl
sahf
cmp
lcall
xor
sbb
outsb
scas
mov
mov
mov
ficomps
or
loop
loop
ficoms
lcall
loop
sbbl
stos
xchg
mov
mov
jo
sti
jge
shr
lret
lods
push
ret
lcall
loopne
fstps
push
add
std
in
pushf
add
mov
pop
pop
jle
fdivrs
xchg
jbe
aaa
test
pop
mov
jnp
out
cmpsb
mov
jbe
mov
ds
hlt
jg
in
rcrl
xrelease
in
addr16
out
and
cmp
or
xor
sbb
inc
jp
mov
or
jge
cld
xchg
mov
pop
ja
push
dec
sbb
fldcw
aam
das
ja
pop
sbb
lods
fisubrs
sub
add
jnp
jno
xlat
in
adc
mov
jmp
bts
mov
popa
ss
in
mov
lahf
rclb
inc
nop
int
mov
andl
pop
pop
jb
popa
jp
adc
jge
loop
into
out
js
xchg
and
xor
lods
dec
lret
jp
push
enter
push
adc
je
add
inc
cmp
sub
or
std
adc
mov
lret
or
rcl
push
hlt
cld
enter
imul
rol
das
dec
inc
outsb
push
in
inc
cmp
dec
iret
daa
in
xchg
mov
arpl
dec
add
push
inc
adc
fdivs
loop
or
dec
mov
mov
xor
and
xchg
dec
sbb
xlat
xorb
jb
jae,pn
push
fstpt
imul
scas
xchg
fwait
movsl
bound
sbb
add
sbb
mov
xor
xlat
or
mov
or
std
test
adc
push
shll
shlb
sbb
adcl
mov
hlt
leave
sarb
sub
fs
out
pop
sbb
add
dec
imul
or
test
xchg
repnz
icebp
addl
push
pop
mov
dec
stos
cmc
ds
fmuls
mov
std
insl
mov
xchg
out
push
xlat
lds
in
mov
xor
ljmp
jnp
mov
mov
push
and
cld
sub
adc
fsubrp
pop
cmp
or
fbld
outsl
sbb
adc
pop
lcall
sbb
fcoms
adc
xchg
xchg
shrl
xor
repz
repnz
jns
movsl
mov
push
or
pop
out
imul
rorl
inc
mov
jmp
or
mov
xor
mov
pop
pusha
hlt
or
add
sbb
xchg
add
cmp
clc
mov
es
mov
dec
mov
sbb
imul
pop
xchg
mov
shr
addb
dec
jmp
hlt
fwait
lea
jae
mov
fxch
jae
and
cmp
sbb
or
xchg
cmp
pop
jp
jae
or
xchg
imul
insl
scas
xor
cmp
cli
fwait
pop
mov
mov
aaa
ss
stos
jecxz
imul
fdivrs
xchg
addb
sahf
xor
sub
mov
call
xchg
scas
push
adc
jae
and
adc
out
outsl
aad
lret
mov
push
jge
into
cli
arpl
stos
push
daa
mov
bound
scas
push
aaa
sub
es
daa
and
jae
xor
cmp
mov
fmul
pop
mov
in
and
ja
add
aaa
mov
cmp
jae
popf
mov
fbld
mov
insl
sub
mov
sub
vunpcklps
jb
sarl
inc
jne
sub
mov
adc
xchg
sbb
xorb
mov
adc
outsl
ret
xor
lds
ss
xchg
add
cmp
sub
mov
jb
cmc
inc
xchg
xchg
repz
mov
xchg
xor
push
mov
lret
jmp
movsb
cmpsb
frstor
adc
cmp
aas
sarl
cltd
cmc
daa
sahf
fadds
inc
aas
lods
jne
xchg
das
data16
cld
dec
jle
ljmp
aad
xchg
cmp
mov
xchg
std
popa
add
inc
pop
movsb
in
and
mov
sub
mov
sub
jmp
cwtl
test
call
in
add
cwtl
cwtl
imul
xor
imul
outsl
mov
adc
pop
pop
cli
pop
adc
mov
ficomps
cs
cmp
sub
hlt
pop
pushf
push
int3
push
pop
arpl
mov
data16
test
adc
movsb
adc
rcrb
mov
faddp
fisubrs
hlt
lahf
lret
imul
es
dec
mov
xor
shr
push
inc
movsb
cmp
xchg
mov
int
daa
or
push
mov
sub
and
cmc
mov
xchg
push
imul
lods
imul
and
mov
lods
incl
into
repnz
cli
mov
lds
dec
shlb
push
mov
lcall
mov
sahf
cmp
cmpsl
incl
aaa
and
cli
and
das
and
or
pop
pop
push
or
cmp
insb
gs
jbe
mov
mov
inc
xor
xchg
jmp
ret
dec
xchg
outsl
aam
ret
xchg
xor
popa
pop
push
mov
fcoms
add
rep
adc
scas
xlat
ss
aad
push
adc
xchg
inc
fnstsw
push
lock
mov
cltd
filds
lret
pop
xchg
mov
push
adc
xchg
push
aad
xlat
jl
scas
call
or
mov
jge
je
mov
inc
and
mov
jmp
pop
jle
into
lcall
pop
test
push
imul
je
push
fmulp
cld
pop
pop
ror
iret
xlat
dec
cmpsb
or
stc
mov
cmp
add
sbb
test
mov
subb
sub
nop
jg
jne
inc
pop
mov
idivl
cmpsb
aaa
call
les
dec
add
mov
jae
or
xor
and
mov
mov
add
push
dec
mov
push
and
jmp
jo
pop
aaa
outsl
cmp
xchg
mov
es
adc
scas
adc
insb
scas
fimuls
add
pop
das
outsl
scas
add
popa
in
fildll
sbb
pushf
sbb
in
shrb
inc
sar
and
fdivs
or
test
sbb
adc
aad
ljmp
test
cmp
sti
push
repnz
mov
sbb
sbb
lods
sub
mov
or
jno
jnp
in
fadd
sbb
loop
push
pop
imul
inc
mov
sbb
je
and
ret
cmp
mov
xor
ja
fnstenv
lahf
cmpsl
sarb
ficomps
mov
gs
into
mov
dec
add
and
mov
out
sub
jbe
cmc
out
ds
outsl
test
lret
mov
push
insl
aam
les
mov
rorl
pop
mov
mov
inc
arpl
ja
fucomi
xchg
popf
pop
and
jnp
inc
adc
aad
aas
sub
pop
out
lret
pusha
loopne
and
sahf
sbb
js
dec
xor
xchg
mov
cwtl
mov
mov
lcall
and
enter
xchg
scas
insb
mov
repz
iret
dec
inc
or
addb
sub
icebp
inc
loope
lcall
flds
out
xchg
sub
arpl
dec
fwait
or
mov
dec
cmpsb
xchg
in
cmpsb
mov
mov
psrld
decl
pop
iret
or
jbe
jge
lret
mov
sub
or
imul
cmp
push
sub
std
cmp
adc
sub
mov
sub
orb
cmc
cli
pop
iret
jmp
push
test
scas
test
xor
mov
jp
popa
xor
sub
loop
fstpt
or
ret
mov
mov
outsb
dec
faddl
xor
int3
fcompl
ljmp
shlb
jg
jne
shlb
pop
xchg
xor
lcall
push
mov
push
sub
dec
rcrb
test
jo
push
shrl
clc
and
out
dec
inc
mov
in
ds
add
mov
push
xor
loop
fnstsw
std
sbb
movsl
dec
and
loop
iret
in
je
mov
or
mov
lods
pushf
add
rcrl
fwait
jne
jmp
dec
sub
scas
scas
mov
leave
mov
jmp
pop
fldt
hlt
leave
mov
repnz
rcr
or
jge
ja
dec
lods
loope
pop
insb
addr16
dec
int3
push
sub
or
jle
popa
je
negb
add
imul
popf
mov
pusha
les
outsb
push
nop
pop
jge
call
xchg
or
xchg
cmp
mov
add
fwait
xchg
lods
leave
add
loope
pop
mov
pusha
int
jne
jns
test
sub
sub
sub
xor
cli
xor
mov
mov
mulb
jb
cs
test
or
xor
lret
roll
xor
pop
mov
inc
push
lods
sbb
mov
push
pop
fcomp
ret
pop
movsl
push
test
cmp
hlt
fimuls
adc
lret
cltd
and
mov
mov
loop
ljmp
cwtl
jmp
lods
sti
addr16
clc
imul
nop
push
fstl
mov
jno
cmpl
inc
dec
testl
xchg
mov
aam
cli
push
push
dec
lcall
stc
mov
jp
fadd
outsb
dec
add
xchg
lods
adcl
mov
ret
mov
mov
push
ret
jne
sti
sti
or
mov
add
xor
xor
mov
push
xlat
insb
inc
or
stos
lret
cltd
cmpsl
xchg
movb
mov
mov
cmp
icebp
mov
push
inc
test
pop
or
sub
adc
push
movsl
pop
jae
mov
out
mov
addr16
inc
sub
jge
mov
or
add
popf
xor
dec
inc
imull
fsincos
dec
xlat
mov
or
gs
adc
pop
mov
inc
mov
inc
stos
fmuls
mov
adc
or
pusha
or
fildll
insb
push
inc
and
or
repz
ret
test
ret
repz
pop
in
xchg
fwait
push
xchg
xchg
sub
sub
sbb
shlb
pop
pop
inc
enter
in
mov
xchg
lret
movsb
or
daa
xor
scas
stc
cmp
inc
jo
mov
ds
ss
cwtl
adc
sub
into
in
add
js
xlat
add
arpl
push
cmp
sbb
ficomps
mov
adc
dec
rcl
lret
push
or
and
test
test
cmp
push
mov
mov
or
loop
inc
dec
jp
push
cmpsl
test
ficoms
sub
repnz
inc
scas
dec
fwait
sub
test
or
mov
cmp
lock
pop
mov
sbb
mov
adc
cld
repz
mov
adc
cmp
push
mov
cld
sbb
mov
pop
or
rolb
and
pop
mov
jp
jg
out
ja
cmc
lahf
xchg
lahf
incb
push
repnz
std
hlt
or
jne
jb
and
jo
insb
hlt
in
cmp
xchg
pop
jp
jge
mov
addl
cmp
int
adcb
psrad
pop
jno
xchg
dec
xor
mov
in
loope
pop
push
push
mov
dec
push
ds
push
outsl
mov
fisubs
push
xchg
xor
sub
popa
mov
cli
call
cmp
js
outsl
faddl
mov
mov
jb
rol
xchg
loopne
sti
aam
scas
imul
repz
pop
movsb
mov
dec
iret
or
pop
inc
and
mov
push
in
hlt
or
cli
loop
sub
sub
repnz
out
pop
lret
addb
dec
roll
stc
mov
scas
mov
dec
lret
gs
addl
sub
test
mov
add
loop
xorl
and
sbb
or
xchg
jge
pop
adc
sahf
test
mov
loopne
mov
shl
popf
inc
repz
pop
inc
inc
sbb
pop
cld
xor
test
cmp
pop
stc
jns
insl
fstpl
xchg
xchg
imul
and
fldt
in
pop
pop
dec
jbe
jne
sub
negl
sbb
jmp
int3
fsubrs
lods
cmp
xor
push
cmp
mov
mov
cmpsl
adc
and
das
jb
repz
xchg
xor
cmc
lahf
mov
loope
movsl
rcll
jge
stos
stc
call
fcmovbe
enter
lock
jmp
in
sub
fs
or
je
push
push
lds
shll
nop
fdivrs
aam
loopnew
hlt
aam
loopne
icebp
shrb
push
lods
imul
out
add
loope
and
test
jns
mov
dec
int
in
ljmp
negl
sub
shlb
jge
testw
hlt
push
add
jmp
iret
sbb
dec
in
jg
nop
mov
cld
in
ret
mov
xchg
outsl
push
int3
lret
pop
mov
cmpsl
rorl
dec
sbb
xchg
fcoml
mov
or
lcall
mov
pop
shll
test
xchg
xor
or
xchg
test
pop
pop
or
lea
cmc
in
and
shll
sti
xor
mov
dec
int
dec
js
xchg
or
enter
pop
push
clc
inc
cmpsb
ret
icebp
mov
add
mov
pushl
add
jb
push
mov
push
pop
mov
push
test
push
lret
mov
adc
rolb
sub
inc
jl
in
int3
push
sub
or
das
xor
sbb
sbb
or
repz
mov
pop
aaa
stc
jnp
or
mov
out
dec
rcr
cmp
in
insl
ljmp
push
adc
lahf
imul
std
pop
xor
sub
jg
shr
push
mov
enter
jmp
jne
lret
imul
inc
xor
jmp
xchg
sbb
sub
aaa
int3
mov
mov
stos
pop
lods
scas
shr
xor
pop
mov
fistps
pop
hlt
and
pop
sub
xchg
ret
cmp
js
pop
out
push
inc
jl
shlb
push
cmp
adc
push
daa
in
xchg
xor
adcb
xor
bound
int
mov
aaa
ljmp
fs
sbbl
je
sub
sub
mov
adc
dec
fists
xor
inc
push
fidivrl
aad
int3
adc
dec
test
jle
dec
rorb
sbb
dec
lahf
paddw
sbb
inc
movsl
add
out
jmp
shll
push
inc
dec
das
cmp
in
out
insb
xchg
pop
jo
call
and
loopne
lds
bound
pop
into
pop
add
sbb
xchg
movsl
mov
adc
jg
int
pop
fadds
fs
adc
sbb
mov
out
cmp
iret
xor
stos
add
shll
cmc
pop
scas
sub
mov
jmp
movsl
push
loop
stos
rorb
mov
js
shl
xor
repnz
jmp
sbb
and
leave
xchg
ret
fisttpll
cwtl
adc
mov
jecxz
outsl
sub
stos
sbb
mov
xchg
xchg
xor
imul
stos
sub
imul
jae
xchg
add
push
popa
mov
xchg
das
fists
dec
mov
mov
popa
jnp
pop
ljmp
push
mov
sbb
lret
mov
icebp
mov
push
cmpsl
adc
dec
lret
push
or
cmp
mov
sbb
test
push
aas
fistpll
pop
std
clc
push
movsl
aam
jp
data16
or
fldl
xchg
dec
call
aas
or
cs
pop
jecxz
lods
xchg
loopne
ret
sbb
push
ret
mov
cmpsl
imul
aas
test
fwait
push
nop
sub
in
mov
stos
lock
fs
test
or
pop
les
dec
in
xor
pop
add
push
pminub
test
scas
fimuls
jo
xor
xchg
addr16
loopne
and
inc
mov
adc
xacquire
lahf
pushf
xchg
dec
add
cmc
mov
fisubrl
sbb
lret
sbb
mov
insb
hlt
ja
aad
cmpsl
xor
mov
popa
jp
sub
lds
aam
jae
lods
sub
inc
xor
shll
inc
test
sarl
icebp
mov
inc
lods
jb
jns
adc
clc
add
and
cltd
jmp
pusha
or
cmp
mov
sbbb
sub
mov
pop
fmulp
mov
popa
dec
xchg
push
test
push
mov
add
inc
es
gs
test
add
xor
jp
cmp
movsl
ds
lahf
outsl
shll
shl
inc
cmp
xchg
cmp
imul
adc
loopne
adc
add
mov
imul
icebp
push
inc
call
and
mov
test
or
je
push
data16
xchg
in
or
jecxz
sarl
push
cmpb
out
fdivrs
or
jg
or
stos
shrb
outsb
addl
inc
push
fists
jno
cmpb
or
fdivr
xlat
add
sti
lcall
fwait
scas
inc
mov
pop
mov
in
cs
in
and
out
adc
inc
mov
lret
jnp
in
or
lcall
ljmp
inc
fcoms
insb
cmpsl
lock
enter
pop
daa
cld
dec
nop
mov
ljmp
jbe
iret
pop
mov
enter
stos
mov
std
xchg
inc
lret
js
adc
mov
pop
push
push
dec
aam
sbb
dec
sbb
stc
icebp
jo
or
xor
pop
cmc
add
testl
and
jns
inc
hlt
fstpl
cwtl
mov
iret
fldt
rolb
or
adc
iret
lods
mov
adc
xor
rcrb
xchg
ljmp
repz
data16
fwait
loope
iret
ret
pop
push
pop
repz
xchg
mov
icebp
clc
mov
add
sbb
test
xchg
jns
mov
pop
dec
and
outsb
jae
push
daa
shll
or
inc
jno
pusha
sub
ret
cmp
in
lahf
pop
jg
jo
aas
sub
mov
daa
scas
xor
scas
jge
jb
sbb
xor
sbb
jno
xor
lods
dec
or
je
mov
mov
mov
leave
shl
sub
or
stos
add
or
cmp
jg
jae
ret
in
push
je
sub
xchg
aas
pop
gs
test
adc
dec
fsts
jbe
adc
decl
imul
xchg
push
or
push
or
test
ret
xor
leave
add
xor
adc
jp
movsb
scas
mov
xlat
hlt
sbb
nop
push
repz
scas
sar
gs
dec
cltd
jnp
cmpb
fbld
pop
cmp
pop
mov
push
imul
pop
aaa
push
pop
out
inc
icebp
negl
add
sbb
inc
ljmp
sbb
mull
pop
jo
dec
or
repnz
scas
jne
or
pop
mov
insl
push
sahf
lods
and
add
fstpt
or
dec
xchg
xor
add
imul
scas
push
push
pop
stos
test
repz
icebp
cwtl
aad
enter
jne
dec
push
sbb
aaa
out
push
push
mov
aas
xchg
and
cmpb
mov
fadd
lea
addl
sahf
mov
lret
lods
xor
sub
fwait
xor
sbb
sbb
fwait
bound
out
add
in
adc
ror
sub
jg
add
in
or
dec
gs
sub
push
repnz
hlt
and
lds
adc
out
jp
mov
mov
incb
outsb
push
mov
mov
dec
push
xor
pop
and
mov
inc
out
dec
enter
arpl
std
xor
or
sub
insb
outsl
mov
jno
loopne
cmpsb
daa
and
cmp
arpl
or
push
sarl
push
out
xchg
push
out
or
in
or
sarl
adc
insl
das
sub
xchg
or
jne
jge
push
jmp
cli
pushf
push
in
cltd
arpl
rorl
xchg
mov
jmp
pop
lea
cld
jg
stos
dec
test
jle
xor
test
clc
aad
es
cli
dec
mov
fldcw
add
pop
ret
mov
mov
sub
push
mov
inc
xor
xacquire
jno
mov
aam
jne
loope
data16
ret
add
pop
cvtps2pi
dec
ds
jg
ds
popf
dec
into
and
je
pop
sahf
jl
mov
mov
fcomps
es
cmpsb
mov
or
mov
ret
gs
lea
push
and
mov
sub
push
pop
stc
adc
lcall
jnp
push
scas
xor
leave
and
loope
mov
stos
jecxz
sbb
xchg
jbe
lcall
out
dec
out
sbb
push
aaa
es
insl
adcl
push
shrl
mov
insl
jbe
int
xchg
jne
int3
xor
xchg
pop
lds
push
fidivrs
push
sub
sbb
add
inc
cwtl
and
add
or
les
loope
dec
fucomip
mov
lsl
pop
pop
inc
dec
xor
sbb
mov
repnz
or
or
and
lahf
sub
push
push
mov
subl
adc
or
cmp
pop
shrb
mull
dec
xor
popa
outsl
pop
in
sub
xchg
adc
cmp
pop
inc
or
bound
cmc
pop
xchg
dec
lret
leave
jmp
cmpsb
jg
jecxz
dec
jne
stc
sbb
inc
cmp
and
cmp
pop
clc
lcall
outsb
push
mov
cwtl
stc
ljmp
sbb
inc
jg
inc
test
inc
nop
mov
jb
and
clc
sbb
and
fdivrl
jle
mov
dec
adc
adcl
sbb
lods
pop
xchg
lds
aad
xchg
lahf
inc
add
call
add
fcoms
pusha
or
pushf
sti
adc
push
stos
dec
sbb
test
outsl
test
ret
adc
fistl
add
sub
ret
add
imul
arpl
addr16
lgs
sub
mov
rcll
out
jne
imul
enter
lret
data16
test
pop
inc
inc
clc
std
lods
jge
dec
loope
adcl
and
or
xor
sbb
xchg
xchg
mov
sub
pop
pop
or
mov
dec
push
cmovbe
pop
out
aaa
jle
pop
or
daa
adc
jns
loopne
jecxz
jle
imul
mov
or
loop
inc
mov
mov
xchg
fisttpll
fisttpll
loopne
inc
imul
and
pop
dec
test
jg
out
fs
std
dec
icebp
cmp
pop
push
or
mov
fs
lds
test
loope
add
mov
call
xchg
inc
jge
mov
daa
jp
fldcw
sub
pop
lcall
mov
mov
sbb
fs
fwait
insb
dec
adc
in
push
aas
int
inc
cs
dec
aaa
push
imul
int3
xchg
sti
aas
mov
loope
leave
pop
mov
fwait
test
or
push
fucom
push
jg
xor
in
mov
pusha
mov
decb
pop
pop
ret
adc
jg
dec
mov
jmp
pop
or
fwait
aad
cmp
add
daa
pusha
pop
loopne
mov
aas
mov
mov
mulb
adc
xor
ret
cmp
out
inc
xor
pop
sub
xor
sub
out
mov
movsb
cmc
sbb
pop
xchg
lods
mov
loop
inc
bnd
xchg
lods
or
icebp
popf
adc
push
push
xchg
mov
out
insl
jecxz
int3
or
or
pop
roll
push
aam
mov
or
jg
stos
mov
test
outsl
lcall
jg
push
insb
arpl
imul
mov
and
lock
add
add
push
out
dec
add
push
xchg
sub
decb
jo
add
rorb
push
cwtl
out
dec
and
mov
sarl
sub
or
outsb
cmp
mul
sti
and
or
lahf
add
and
sub
enter
mov
push
call
mov
jo
flds
push
cmpb
scas
xchg
std
inc
mov
jb
jae
fbstp
dec
inc
aad
imul
pop
rcll
dec
dec
mov
movsb
pop
sbb
cld
cmpsl
mov
fxch
adc
fisttpl
sbb
lock
xchg
jbe
mov
ficomps
xor
xchg
jecxz
push
dec
mov
or
or
fwait
mov
cmp
ror
or
clc
mov
and
push
loop
add
test
add
jnp
daa
mov
add
mov
pop
adc
fdivs
mov
dec
std
sub
shlb
mov
push
mov
imul
xchg
test
lock
pusha
shr
xchg
add
int
stc
sub
cmp
add
dec
push
mov
aaa
pop
ljmp
rolb
adc
xchg
outsl
nop
sub
imul
mov
mov
add
stos
and
cwtl
jge
jae
lea
ds
push
shlb
icebp
test
push
jae
cmpb
mov
shrl
jmp
or
cmp
cwtl
adc
subb
enter
mov
inc
aad
jnp
inc
mov
pop
adc
mov
dec
inc
sbb
inc
hlt
bound
or
pop
mov
jmp
mov
clc
bound
inc
jae
xchg
adc
std
fistpl
mov
cmp
push
out
js
daa
pop
enter
pop
mov
cmc
xlat
xor
adc
pop
ss
push
mov
bound
pushf
mov
adc
mov
lods
adc
imul
xchg
les
dec
cltd
addb
xor
imul
aam
mov
pop
mov
push
pop
popf
jbe
mov
inc
add
mov
es
jle
cmp
cmpsl
push
icebp
das
cmp
mov
je
cmpsb
jp
jl
or
insl
mov
fidivs
xor
repnz
arpl
test
mov
bound
movsl
and
fdivs
imul
insl
xor
jo
mov
ja
scas
loopne
int3
mov
mov
nop
cmpsb
mov
or
daa
xor
cs
pop
add
cwtl
sub
hlt
adc
scas
sbb
sub
mov
pop
adc
aaa
jno
sub
xor
mov
inc
addr16
lds
xor
aam
mov
lahf
or
sub
shll
sub
shrl
mov
push
lea
xchg
adc
jno
and
dec
jne
cmp
sti
dec
cltd
cmp
mov
inc
mov
mov
fsubl
loope
repz
test
sub
inc
push
insl
xchg
ret
xchg
js
inc
movsb
adc
xchg
and
fdivl
cwtl
lea
jo
cltd
loopne
push
dec
lea
popa
push
jns
dec
lret
mov
aam
xor
fimuls
inc
rcr
jle
jbe
out
outsl
and
je
jae
inc
mov
lock
mov
sub
aaa
imul
lods
xchg
xorb
jmp
pop
mov
xchg
inc
xorl
mov
dec
enter
lock
dec
cwtl
les
aas
sub
shrb
sub
inc
aas
fiadds
and
outsl
mov
sbb
mov
jne
and
nop
lock
inc
pop
pop
mull
imul
outsl
fcompl
xchg
mov
test
cmp
jbe
ret
jp
xor
inc
sahf
jnp
mov
addr16
add
fbstp
sbbl
out
je,pt
fcoml
ret
and
pop
mov
and
push
cmp
call
jge
jno
add
pop
stc
test
inc
mov
pop
cs
sbb
pushf
outsl
xchg
into
add
sbb
mov
mov
adc
stos
add
test
stos
or
insl
xchg
add
push
cmp
in
lock
mov
add
push
push
cltd
xor
mov
sbb
add
mov
or
leave
mov
outsb
mov
pop
in
lock
jbe
pusha
addr16
in
mov
mov
ret
adc
mov
dec
in
push
stos
adc
mov
call
iret
add
sub
mov
rcrb
sub
std
jl
icebp
push
popa
cs
sahf
inc
jae
out
clc
dec
jae
cmp
idiv
xor
pop
test
cmp
add
out
jle
bound
das
xor
lret
inc
mov
rorl
lods
push
leave
push
sub
lret
pop
stos
jl
popa
sbb
add
cmp
lock
movsb
es
adc
push
int
ds
mov
pop
mov
enter
fs
loope
xlat
dec
int
jge
js
push
inc
mov
inc
pop
inc
jmp
sbb
xorb
enter
xorb
les
add
std
pusha
imul
scas
imul
or
push
call
mov
rcrl
sbb
stos
pop
fidivrs
sbb
mov
xchg
pop
jbe
pop
shll
pop
test
mov
hlt
test
mov
mov
stc
pop
xchg
cld
mov
inc
int
repnz
jp
scas
sahf
mov
fisttps
jp
call
lret
sub
add
pusha
into
cmp
and
insl
add
add
sbbb
stos
jae
filds
in
movsl
popf
js
mov
in
sbb
and
fmulp
adc
fisubl
mov
addr16
push
jl
sub
dec
mov
imul
add
lahf
lret
mov
lds
out
ror
push
sahf
call
or
das
jbe
push
loop
cmp
sbb
xor
and
insl
outsb
and
sarl
push
dec
sbb
mov
sub
jo
imul
loope
mov
rcr
cmp
pop
xchg
xchg
jg
jae
cmc
pop
dec
adc
sub
xchg
dec
and
push
das
lea
mov
ret
pop
sahf
loop
gs
sbb
test
mov
pop
bound
pop
insb
lcall
cmpsb
cmc
sbb
jae
lret
xchg
xchg
inc
add
push
mov
sbb
shll
fidivl
cmp
adc
imul
scas
xor
pop
call
aad
dec
call
sbbl
out
lret
lret
nop
dec
cwtl
push
cmp
aam
mov
adc
or
leave
js
cltd
mov
ds
ja
sti
add
push
dec
outsb
or
icebp
pop
cwtl
inc
jp
jbe
insl
inc
clc
sub
ficoms
push
das
add
xor
mov
shrb
les
int
lahf
sub
in
cmc
mull
jns
cmp
jle
push
jb
mov
or
add
mov
sti
sarl
insb
fmuls
ds
sbb
sbbl
aad
out
sbb
in
push
mov
cmp
add
cld
jle
pushf
scas
ficompl
sti
cmc
les
jo
repz
push
jno
in
ss
dec
ret
sub
jg
xchg
aam
idivl
pusha
mov
dec
or
push
movsb
out
scas
imul
xor
cmp
outsl
jl
mov
fdivs
inc
jae
in
gs
subb
testb
sbb
xor
fldcw
lea
lock
rorb
fisubl
sbb
mov
push
lret
adc
mov
mov
sbb
add
in
adc
inc
aad
std
popa
add
sbb
out
bound
push
sbb
dec
dec
outsl
ja
mov
mov
push
and
jp
test
dec
rcr
scas
sti
inc
lea
dec
sbb
push
dec
push
fcoms
test
sbbl
pop
xor
mov
xchg
shll
insb
mov
push
imul
daa
mov
mov
lea
incl
xchg
movsb
repnz
mov
iret
dec
pop
push
pop
daa
adcl
cmpsb
fsts
dec
call
stos
jo
icebp
mov
or
lret
je
fsubr
sbb
rorb
cli
push
push
fiadds
movsb
xor
shll
xor
add
sub
and
inc
xor
xchg
cmpsl
inc
sti
lahf
add
mov
push
pop
imul
sbb
sub
loopne
inc
jle
push
dec
jecxz
or
and
pop
dec
adc
leave
sub
push
ror
shl
cmp
xorl
or
in
test
js
imul
ds
add
jle
loopne
cmp
and
pusha
into
xor
mov
mov
lea
neg
jle
enter
push
outsb
xor
and
mov
aad
pushf
add
and
shr
rorb
cmc
cwtl
ljmp
and
adc
xor
dec
shll
pop
mov
lds
and
jp
jle
pop
dec
jbe
mov
dec
in
and
les
into
and
dec
insl
sbb
je
cltd
je
sbb
pop
mov
sahf
out
mov
xor
imul
daa
in
cmp
aaa
jg
rcrl
arpl
sub
inc
fildll
xchg
mov
lds
notl
mov
std
jnp
cs
fstpl
call
dec
push
mov
adc
xor
faddp
out
test
int
lahf
cmpsb
jge
jne
jnp
ljmp
push
mul
fiadds
mov
out
in
out
and
leave
nop
inc
push
fidivrl
popf
mov
pop
std
in
dec
add
push
out
inc
xlat
loop
in
jle
cmp
mov
testl
adc
aaa
sbb
pop
xchg
mov
mov
das
jno
ss
scas
ret
int
in
jb
and
fisttpll
jmp
andl
sahf
mov
xchg
jp
insl
or
sbb
call
loop
jo
jl
push
stc
lahf
adc
stos
lods
and
ljmp
fidivl
mov
icebp
std
jmp
adc
and
cs
ljmp
in
push
or
dec
mov
mov
ljmp
add
mov
xchg
mov
add
leave
pop
imul
fists
jns
in
sbb
dec
dec
leave
push
pop
or
pop
shll
add
sub
xlat
and
lret
sti
and
cmp
mov
jbe
sbb
jae
push
inc
mov
rcll
fcoms
pop
dec
lock
test
aam
xchg
shll
scas
cmp
xor
jge
pop
lock
jl
cmp
fldcw
data16
jmp
test
adc
out
and
cs
sbb
adc
scas
stc
fdivp
mov
adc
aam
rcl
fcompl
mov
push
push
testl
lret
test
push
pushf
xchg
sbb
mov
xor
xchg
lea
outsl
sbbb
mov
lret
addb
push
lahf
cld
in
sbb
lods
subl
jmp
cmp
test
in
scas
cld
daa
mov
inc
push
push
bnd
mov
add
divl
js
cwtl
mov
pushf
lahf
fistl
jmp
xor
rcll
mov
into
xchg
xor
push
je
ja
add
lods
add
and
sub
into
ljmp
inc
inc
mov
add
lods
lcall
jb
icebp
popa
fdivs
loop
lods
push
ss
push
dec
jbe
fwait
clc
push
out
lahf
aas
jae
into
insb
jo
xchg
fadds
or
push
jg
stos
inc
push
jmp
int3
and
jno
and
jnp
jmp
push
pop
test
mov
sti
adc
roll
je
sbb
mov
sbb
arpl
ljmp
lods
rcrl
xor
in
push
lcall
push
shrl
movsb
cltd
pop
sbb
daa
xor
jns
cmp
es
andb
mov
push
into
in
xchg
scas
mov
out
push
dec
fst
dec
jge
cmpxchg
std
cmpsb
popf
mov
les
add
add
aam
push
jno
cmp
out
push
lods
scas
adc
sbb
adc
outsb
jp
sub
lret
add
jae
xchg
fbld
pop
and
rorl
into
add
adc
xor
push
cld
mov
out
testb
outsb
jo
cmp
jle
sahf
movl
idiv
mov
push
mov
xor
gs
mov
das
jbe
lret
mov
dec
inc
fstpt
test
das
jo
mov
jg
sbb
adc
imul
inc
xchg
in
push
pop
out
fsubp
cmpsb
sub
push
sbb
xchg
stc
insb
inc
cmc
ficompl
in
arpl
dec
icebp
sti
in
mov
mov
jmp
push
ds
push
push
movsl
push
ffree
mov
sbb
adc
movsl
movsl
mov
xor
push
xchg
leave
mov
xchg
sbb
and
gs
int
jbe
push
add
call
jecxz
sarb
pop
mov
fisttpl
jae
cmp
ret
add
mov
cmp
rorl
lds
mulb
outsl
sti
out
fs
cmp
jbe
and
jecxz
mov
cmp
jb
sbbb
mull
lods
xor
jle
cmp
insb
pop
adc
add
fcomip
xchg
out
call
mov
pop
loope
jae
pop
subl
addb
lahf
in
cwtl
cwtl
sbb
test
sti
mov
iret
mov
sub
out
or
and
push
rclb
and
pusha
cmp
aam
aam
xor
nop
outsl
mov
push
mov
shrb
pop
addr16
scas
xchg
push
subw
ret
inc
into
cs
jns
aad
hlt
fisttps
push
push
lea
popa
ljmp
xchg
xchg
mov
mov
lea
adc
jbe
sbb
je
leave
cmp
push
sbb
sub
aas
mov
sahf
and
dec
mov
fadds
data16
jmp
outsl
cmp
rol
es
mov
add
mov
andb
cmpsb
xchg
fidivrl
test
sbb
sub
imul
imul
mov
out
subb
lods
push
xor
mov
mov
test
dec
aam
in
test
fcomps
dec
sbb
test
mov
or
cwtl
sub
orb
sarl
lcall
daa
fdiv
jbe
rorl
xchg
lods
push
lret
popa
rolb
mov
mov
lret
xchg
push
addr16
mov
or
push
jg
movsl
lods
test
popf
cmp
sar
mov
sub
in
add
inc
adc
push
iret
je
pushf
pop
lock
jb
sub
add
ja
adc
test
mov
ficomps
stos
lea
mov
cltd
cmc
les
popa
sub
rclb
mov
jbe
pop
jle
pop
mov
cmp
cmp
mov
ret
mov
daa
dec
pusha
ret
cmc
and
jp
jg
lea
mov
and
xchg
das
sbb
dec
xor
cmp
daa
jmp
fsubrl
adc
push
jl
repnz
in
pop
int3
sbb
mov
jbe
lds
mov
sbb
mov
cli
mulb
mov
ljmp
mov
out
cwtl
ror
lret
jno
adc
pop
test
jg
mov
daa
sub
pop
xchg
mov
popl
push
pusha
add
movsb
jmp
fs
outsb
popa
mov
add
mov
aad
jns
cmpsb
sbb
sbbl
pop
xchg
push
roll
call
mov
dec
mov
push
add
ficomps
int
mov
in
add
lcall
mov
jns
push
pushf
lock
ret
xchg
pop
out
inc
adc
dec
decl
and
cmpsl
pxor
ret
pushf
or
rcll
je
stos
sbb
shrb
mov
cs
xchg
xor
adc
mov
roll
adc
lock
mov
push
icebp
popf
or
inc
inc
sti
lea
push
insb
cltd
cwtd
cmpsb
neg
sub
aas
loopne
mov
and
out
enter
leave
dec
test
lret
int
xlat
out
sub
lahf
dec
fisttpll
stos
loopne
int
out
out
xchg
cmpsl
ljmp
bound
leave
adc
push
pop
pop
add
inc
lret
adc
mov
jb
cmpsb
push
lods
pop
aas
jle
in
and
out
pop
roll
stc
adc
call
notb
xor
or
mov
shlb
dec
int
mov
sbb
cltd
outsl
or
popa
push
insb
inc
lret
ja
rcll
insb
mov
pop
mov
mov
inc
rcll
lds
loope
push
pop
xor
loope
popf
mov
pop
mov
mov
sti
dec
xor
lock
rclb
mov
pop
lcall
aaa
xlat
adcl
movsl
or
andb
aaa
clc
ja
cs
popa
mov
jecxz
push
pop
xchg
jb
inc
scas
pop
outsl
and
jp
fstpt
cmp
add
push
push
lea
xor
pop
push
cmpsb
test
cs
sbb
mov
ss
dec
out
sbb
inc
jns
fwait
sbb
repz
lea
push
pop
dec
add
int3
mov
and
xchg
fstp
fcmovnbe
pusha
mov
xchg
pushf
popf
shlb
push
in
sahf
mov
hlt
xor
insl
cmp
out
cmpsb
dec
fisttps
mov
and
mov
lock
or
jl
fbld
jle
ret
call
mov
mov
out
aam
add
cmp
xor
inc
cmpb
test
mov
dec
xor
inc
daa
xor
adc
js
mov
cmp
out
subb
mov
stc
jae
scas
xlat
xor
inc
sub
mov
lock
nop
sti
movsl
lods
or
jae,pn
stos
jecxz
lret
dec
ja
test
mov
dec
jns
mov
adc
daa
sub
inc
push
pushf
lcall
sbb
and
cmp
mov
dec
pop
and
loop
ds
mov
and
add
pop
mov
pop
test
and
mov
jmp
mov
mov
fisttpl
aaa
dec
mov
std
xor
or
xor
dec
mov
sbb
add
imul
push
cmpb
xor
cltd
jns
outsl
pop
mov
mov
push
push
loop
imul
int
or
into
xchg
lcall
jb
out
xor
sub
jae
incl
adc
out
sarb
lea
aad
fs
fcmove
lret
xchg
mov
and
shrl
jmp
pop
cmpsb
cmpb
cmp
js
dec
mov
mov
sbb
sahf
pop
pop
dec
out
fs
jg
jge
lods
rorl
fs
hlt
xor
xchg
push
mov
pop
push
and
ds
aas
fisubs
add
test
sub
xchg
sahf
mov
mov
and
insl
inc
cmpsl
mov
imul
arpl
sar
icebp
imul
cmpsb
leave
cld
push
jg
xor
mov
pop
sub
ss
fs
lock
out
mov
inc
cwtl
push
mov
in
cmp
mov
fwait
loopne
xchg
cmp
daa
add
aad
or
insb
push
inc
out
shlb
sub
es
xlat
aaa
push
mov
repnz
fistps
test
aad
lock
or
pop
cmp
and
into
stos
aam
sbb
jl
fwait
push
arpl
sub
add
inc
aas
mov
cmpsb
xchg
push
adc
stos
repz
jge
iret
iret
fs
jge
jecxz
insl
cmp
fs
jno
das
ss
pop
sub
and
aad
cmpsb
push
pop
dec
lds
dec
or
inc
jae
fldpi
lea
mov
leave
into
cld
cld
inc
xor
cmp
and
xchg
inc
std
mov
fnstcw
stos
dec
push
fwait
shlb
data16
addl
insl
xor
sti
sbb
out
sub
pop
in
lea
loope
shrl
sub
aaa
sub
jno
notl
jae
lods
xchg
fiadds
or
inc
mov
daa
inc
adc
pop
mov
lea
scas
xchg
mov
fs
lret
and
nop
in
sti
jp
clc
iret
xchg
jne
jb
cmp
mov
insb
xchg
in
add
jge
cmp
pop
out
mov
fstpl
sub
pop
cltd
out
aam
pushf
jge
xchg
jns
sarb
inc
jns
mov
imul
xor
loope
call
mov
xor
mov
push
ret
cmpsb
sub
stos
cltd
inc
ljmp
std
int
xchg
sar
repnz
and
les
dec
mov
xor
fsubs
hlt
dec
push
in
sub
add
rorl
mov
sbb
test
sbb
xchg
xchg
popa
mov
inc
xor
add
idiv
int3
insl
mov
mov
push
inc
mov
dec
mov
int
jb
sub
jae
test
add
movsl
push
adc
pop
int
jae
xchg
insb
lret
das
sub
push
mov
adc
jecxz
pop
lret
and
test
jge
movsb
and
je
in
mov
das
fsubs
sbb
pop
fnsave
pop
dec
mov
dec
dec
xlat
jnp
push
and
mov
lods
repnz
sbb
cmp
ja
loop
pop
mov
lods
mov
cwtl
js
jno
mov
sub
addr16
push
mov
jo
mov
sti
sub
cmc
sbb
jnp
jo
mov
pop
dec
out
ret
in
or
sbb
test
xlat
clc
xlat
jbe
pop
fsts
mov
loope
pusha
jo
pop
movsl
dec
les
mov
nop
insb
icebp
hlt
in
fidivrs
xchg
cmp
pusha
aad
xor
pushl
sti
test
mov
adc
cmp
cmc
cmc
cli
cld
in
pop
jbe
adc
jnp
push
mov
xorl
pop
mov
push
sub
or
sahf
xchg
arpl
cmpsl
test
push
gs
sub
rorb
push
push
imul
pop
stos
jmp
jp
sbb
mov
out
pusha
popf
jmp
in
mov
push
in
stc
stos
sahf
cwtl
repnz
sbb
inc
jg
jl
shll
data16
jle
cs
push
fstps
icebp
xchg
data16
sti
lret
add
jnp
sahf
mov
dec
data16
ss
mov
jnp
pushf
dec
sbb
test
jo
shrb
and
inc
cmpsb
push
pushf
std
cwtl
cmp
mov
cmpsl
mov
fsubp
ljmp
push
jl
cmc
cmp
jno
mov
rcr
or
sub
push
outsb
and
jo
pop
mov
inc
pop
loope
popf
fiaddl
push
std
pop
jne
insb
jb
loop
cltd
js
arpl
or
enter
mov
mov
xchg
outsl
or
xchg
in
sbb
dec
mov
es
and
pop
dec
dec
fistps
mov
add
sahf
inc
jae
call
mov
sub
es
pop
popf
call
cs
cmp
or
aad
pop
inc
add
fnstcw
cmp
bound
loope
adc
add
xor
inc
jo
xor
mov
inc
and
xor
sub
add
dec
popf
les
insl
aas
movsb
aas
in
dec
xor
push
dec
jg
sub
add
repz
mov
pusha
in
int
mov
sarl
mov
loopne
push
pop
ret
sub
adc
cmp
xchg
out
jno
cmp
sub
lods
pop
xchg
ret
mov
arpl
repz
int
sub
or
sti
xor
popa
cs
ret
repnz
push
repnz
xchg
test
cmp
test
jno
sbb
aam
fistpl
push
repnz
loope
pop
add
mov
and
xor
push
stos
and
les
mov
jb
xchg
sbb
push
cmpsb
pop
add
inc
add
mov
sub
cmp
roll
repnz
out
xchg
adc
mov
sarb
xchg
inc
mov
into
outsl
jg
add
cmc
das
xor
cltd
or
jl
lret
out
lret
inc
pop
pop
xor
jge
scas
mov
js
stos
repnz
jmp
sub
fcomps
mov
test
jge
daa
stos
shll
std
jno
movsb
mov
mov
pop
fmulp
stc
mov
popa
inc
mov
jmp
icebp
pop
xchg
dec
mov
pushf
inc
adc
loopne
sub
ret
mov
mov
sub
or
ficompl
gs
xor
in
lret
movsb
xor
jmp
mov
mov
sub
sbb
lock
dec
in
rorl
loop
into
mov
sub
mov
daa
inc
icebp
add
lret
popa
int3
or
pusha
jge
notl
scas
lds
xchg
push
fcomip
insb
in
or
pop
mov
push
scas
ljmp
std
in
mov
sbb
shl
pop
mov
xlat
sahf
add
xor
fsubr
nop
pop
ret
and
outsb
jno
jmp
mov
and
mov
sbb
les
mov
xor
cli
mov
stos
test
jl
inc
scas
mov
je
xor
pop
daa
adc
repnz
push
jle
subb
add
mov
daa
dec
cmp
cmpsb
sbb
jae
cmpsb
sbbb
pushf
out
test
jecxz
dec
les
mov
stos
popf
js
addr16
ret
xlat
movb
dec
mov
mov
jb
fildl
and
std
jp
lret
push
fsubr
xor
lea
push
push
pop
inc
adc
mov
incl
mov
mov
jb
push
jl
into
xchg
loopne
sbb
mov
ds
lock
push
jo
stos
or
sbb
insl
and
mov
sbb
inc
sub
shrl
lcall
bound
sub
mov
test
mov
lods
adc
xchg
sub
hlt
in
pop
jle
add
std
or
sahf
ret
ss
add
inc
sub
aas
lahf
sub
dec
pop
pop
imul
lock
fs
hlt
mov
push
xor
xchg
icebp
popa
xchg
ds
gs
and
mov
lock
pop
jnp
mov
iret
aaa
vmovd
cltd
add
mov
stos
dec
xchg
jmp
jnp
cmp
sbb
and
inc
gs
inc
cmp
mov
enter
into
sar
int
shlb
lea
jbe
arpl
fists
int
outsb
addr16
or
test
xchg
test
sti
pop
mov
ja
movsl
dec
testl
movsb
pop
and
push
bound
fs
pop
loop
jle
out
sbb
cld
or
test
dec
ljmp
call
insl
jae
bound
sti
or
outsb
cmpsl
bound
dec
cmpsb
pop
push
mov
push
ljmp
or
arpl
seta
and
inc
out
jg
in
pop
push
ret
mov
inc
push
xor
or
and
hlt
mov
xchg
mov
xor
fidivs
adc
mov
das
clc
push
das
and
dec
dec
cs
xor
xor
ds
push
imul
gs
pop
gs
jmp
ja
cmp
push
xor
outsl
in
add
mov
jecxz
dec
test
pop
sbb
xchg
dec
inc
xchg
sbb
fisubl
xchg
or
xlat
add
push
je
inc
fidivl
clc
jp
jmp
sahf
mov
in
mov
jno
out
scas
mov
movsb
arpl
pushaw
and
into
jnp
xlat
xor
fdivrl
mov
jle
sbb
nop
je
jg
rorb
jae
lcall
jecxz
pop
jl
jne
not
sti
xchg
add
and
dec
mov
jl
lods
sbb
jb
mov
jmp
arpl
fwait
std
jmp
sub
sbb
ss
nop
sub
mov
in
sbb
mov
adc
repz
andl
pop
fcomps
mov
xorl
xor
rep
add
call
xor
lcall
or
test
xor
fldt
sbb
cmp
pop
pusha
stc
inc
leave
inc
add
cmpl
jle
loopne
and
scas
addr16
sub
cmp
dec
ja
adc
lds
in
fwait
les
out
sbb
add
dec
sub
inc
or
mov
xor
ljmp
sub
add
push
sti
jmp
push
jns
mov
xchg
shrb
sub
mov
add
sbb
xchg
out
pushf
popa
push
std
pop
enter
push
dec
orb
inc
mov
arpl
push
mov
cwtl
je
scas
aam
cmp
out
iret
add
push
xchg
int3
add
or
aaa
inc
adc
mov
add
cmp
fisttps
xor
ret
in
mov
inc
shll
dec
and
aad
iret
leave
xchg
scas
lret
inc
jle
xor
jbe
sub
rclb
xchg
rcll
sub
test
sti
add
mov
sub
mov
jnp
scas
jnp
jae
outsb
add
cmp
jp
fcmovnbe
nop
xchg
inc
iret
bound
pop
mov
xchg
inc
fwait
dec
xor
in
cmp
mov
cmpsb
gs
inc
adc
and
inc
inc
mov
in
jo
lcall
dec
cmpsl
push
ds
out
rclb
mov
dec
clc
int3
gs
and
push
and
jns
mov
xchg
pop
jno
in
insb
inc
outsl
sub
imul
mov
mov
int
and
scas
insl
mov
xor
lret
push
outsb
mov
imul
mov
repz
imul
adc
loope,pn
sahf
jb
pop
repnz
ret
mov
pop
mov
dec
mov
cli
aad
sbb
ret
or
std
push
data16
repnz
push
inc
inc
in
mov
push
test
daa
cmp
xchg
xchg
shrl
cmpsl
loope
xor
aas
adc
dec
fnsave
pop
jmp
test
popf
inc
jb
jecxz
sti
add
bound
xchg
or
or
bound
adc
inc
cmp
xchg
sbb
aas
cs
lcall
mov
ret
or
insl
sub
dec
loopne
jle
jno
mov
xchg
pop
mov
cmpsl
dec
mov
fiaddl
sahf
test
out
in
xchg
cmpsb
mov
xchg
test
cmp
cmp
xor
mov
cltd
or
jnp
sub
daa
ljmp
cwtl
fwait
js
test
push
or
dec
ds
push
int3
out
xchg
and
fadds
hlt
inc
push
loopne
int3
inc
xchg
int
fxch
cwtl
mov
cmpb
ficompl
dec
es
add
ret
jge
lahf
dec
ds
out
mov
je
mov
sti
dec
cmp
ret
cmc
and
xchg
pop
sahf
jle
mov
add
mov
add
pop
aam
push
lock
out
pop
call
mov
sbb
jp
inc
sub
pop
push
push
jp
daa
frstor
out
xchg
test
orb
aam
mov
sbb
mov
and
mov
es
mul
cld
mov
pop
repnz
out
sub
ret
in
pop
sub
sbb
adc
mov
out
push
seto
popf
inc
and
negl
mov
movsb
sti
xchg
jg
pop
push
lahf
ror
mov
cltd
sbb
and
mov
fisubl
adc
mov
inc
test
addl
insl
dec
mov
and
outsb
fsubrs
fldt
mov
shrl
and
addl
data16
hlt
cli
push
sub
in
loop
sbb
adc
pop
sbb
bound
gs
and
or
mov
xchg
aad
out
mov
and
add
enter
pop
jbe
rorb
aas
cmp
jae
or
push
je
aas
xor
jbe
ja
push
and
aad
iret
cmp
dec
mov
iret
shrl
nop
stos
bound
nop
roll
jns
iret
or
leave
dec
jg
dec
pop
lcall
imul
hlt
dec
cmpsb
cmc
in
dec
cld
or
jp
jne
xchg
test
inc
mov
jp
imul
fwait
push
mov
pushf
xchg
dec
iret
pop
add
out
dec
sahf
xor
dec
leave
lds
dec
aam
inc
loopne
sub
or
sbb
add
mov
icebp
xchg
mov
lret
repz
test
cmp
mov
xorl
cmp
rcrb
mov
dec
stos
adc
lcall
int3
and
jnp
mov
dec
dec
add
lahf
addl
inc
sub
arpl
jbe
sbb
clc
jl
out
scas
int
fwait
or
push
mov
call
xchg
push
push
lahf
mov
xor
cmp
mov
dec
pop
and
in
rolb
movl
xchg
fidivl
jge
ja
repz
pop
sbb
jle
jp
jecxz
fs
outsb
fildl
xchg
mov
cmpxchg
dec
mull
jne
pop
imul
cwtl
outsb
addr16
insb
lcall
xchg
xor
fisubl
inc
pop
add
push
inc
jmp
inc
stos
mov
jns
bound
rorl
mov
adc
pop
add
dec
xchg
ljmp
sbb
getsec
ret
movsb
rcrb
out
lea
mov
sbb
addr16
push
js
lds
scas
outsb
insb
inc
pushf
lods
rorb
add
mov
mov
cmpsb
xchg
push
hlt
fisubrs
mov
mov
mov
jecxz
shrl
mov
nop
mov
xor
dec
adc
sbb
or
stos
add
popf
cmc
pop
inc
adc
in
enter
test
jmp
roll
push
xor
xchg
leave
xor
cmpsb
mov
pushf
xor
lret
hlt
xor
es
xlat
dec
adc
popf
sub
pushf
jmp
int3
stos
sbb
xor
xchg
pop
daa
pusha
scas
inc
xor
jl
jp
mov
lock
pusha
pop
xchg
lcall
out
lods
mov
and
movsl
ljmp
sbb
fdivs
int3
das
fildl
mov
add
push
cs
mov
out
out
mov
mov
sub
pop
enter
and
xchg
or
mov
divb
mov
push
fisttpll
test
dec
jb
cmp
test
fbld
cwtl
das
es
or
cmc
sti
in
sahf
and
pop
xor
das
and
fmull
mov
mov
jnp
fldenv
mov
add
pop
pop
ss
icebp
or
push
sub
aam
into
xchg
insb
iret
lahf
sbb
test
fs
popa
jl
pop
shrb
lahf
ds
sub
outsl
in
fiadds
sahf
lcall
std
and
adc
mov
push
jle
mov
mov
sub
dec
daa
push
dec
iret
cmp
jo
stos
shlb
out
popa
sub
pop
adc
xor
cmp
insb
jno
pop
xlat
jp
sbb
mov
aad
add
in
inc
jp
mov
das
aaa
push
popf
push
push
and
dec
sti
jp
outsb
push
rcl
jecxz
das
addr16
and
xor
outsl
and
orb
mov
dec
sub
pop
test
xor
cmpsb
lret
sub
iret
scas
fsubrs
cli
xchg
push
inc
or
push
sbb
call
or
addr16
arpl
dec
std
xlat
in
gs
ficompl
adc
and
and
adc
scas
pusha
adc
aaa
or
leave
rorl
std
fwait
inc
or
pop
jb
mov
push
call
test
lods
idivb
lahf
dec
mov
ja
loopne
out
mov
adc
int
cmpsb
dec
int
inc
cmp
mov
xchg
es
adc
pop
pop
mov
jae
mov
xor
push
hlt
pop
ret
dec
mov
mov
xor
in
into
mov
cmpsb
jmp
out
das
inc
loope
movsb
adc
adc
mov
cmovne
outsb
mov
aam
movsb
add
popf
cmpsb
notb
aaa
jbe
imul
mov
lahf
push
xchg
dec
fsubr
sbb
xlat
adc
xlat
inc
push
out
mov
and
cmp
jg
das
cmpsl
scas
ret
xchg
jg
and
push
fdivs
repnz
xor
xchg
std
je
sbb
push
and
sahf
ljmp
in
cli
int
and
pop
add
pop
mov
fwait
pop
jg
lds
imul
push
adc
rcrl
and
andl
inc
sarl
cltd
dec
and
push
insb
loope
imul
fwait
inc
hlt
fbld
xor
pop
adc
sub
iret
mov
iret
inc
out
xchg
add
mov
sbbb
dec
add
stos
xor
test
push
sub
or
pushf
pop
shll
test
add
or
fcmovbe
imul
xor
arpl
push
pop
adc
xchg
stc
pop
aad
lahf
xchg
add
loopne
repnz
cmpsl
mov
mov
xchg
xlat
int3
sbb
aad
jmp
leave
inc
daa
jns
xlat
jle
ljmp
inc
adc
gs
mov
mov
repnz
rorb
and
pusha
dec
loop
movsb
movsb
cmp
repnz
outsl
dec
mov
out
xchg
push
clc
inc
fsubrp
mov
cwtl
inc
xchg
incl
jae
mov
shlb
cmp
ret
loopne
addr16
std
cmpsl
add
repnz
pusha
stos
mov
xor
in
cmp
stc
jl
mov
fidivs
mov
inc
ret
js
mov
lret
sbb
and
in
sbb
test
lahf
in
in
mov
jo
add
iret
push
sbb
addr16
out
push
adcl
dec
xchg
idivb
aad
fwait
lret
and
shl
bound
pop
sub
mov
lods
dec
ds
fwait
push
fwait
test
or
mov
or
loopne
mov
dec
xchg
les
fsub
mov
cmp
sub
adc
lods
mov
inc
mov
aaa
sbbl
jl
popa
mov
pop
push
mov
jg
sbb
mov
sahf
ja
lods
fsubl
cmova
lds
pop
push
adc
lret
shlb
jg
push
mov
scas
dec
xor
scas
push
and
push
int3
push
ficomps
dec
enter
inc
popa
inc
subb
pop
sti
in
adc
push
call
jno
cltd
mov
cmc
rolb
xchg
sub
mov
cmp
adc
nop
in
cmp
jge
paddd
mov
roll
xchg
and
fldenv
lods
data16
push
jne
and
lock
ret
pop
stos
loopne
pop
jo
sub
jae
xchg
outsl
sub
scas
addr16
sbb
daa
add
out
mov
daa
push
sarl
fdivrs
cmp
push
in
fwait
out
xchg
jecxz
jecxz
or
jne
ret
out
popa
loopne
mov
xor
insl
xchg
inc
icebp
cmpsl
and
sbb
cmp
je
jle
cs
lahf
pusha
cwtl
jbe
lea
test
inc
dec
test
and
inc
inc
test
pop
leave
andl
in
sahf
outsb
mov
xchg
inc
or
fisubrl
cmp
int3
test
push
dec
jge
imul
les
inc
mov
ds
adc
shr
shll
xor
out
cwtl
or
jg
mov
pop
repnz
push
out
push
bound
imul
sub
aam
xor
jbe
mov
mov
sub
inc
jmp
js
int
sbb
xor
sbb
cmp
mov
shll
jns
cmp
lret
stos
push
xor
or
pop
jecxz
aas
mov
mov
fdiv
pusha
xlat
jne
sub
jns
out
pushf
fs
aam
scas
inc
movsb
pop
pop
out
mov
mov
sub
dec
cmc
int
sbb
loop
mov
lret
mov
lea
out
je
pop
xor
or
out
jns
add
or
sub
test
outsb
into
add
mov
adc
xor
repnz
mov
cld
mov
fwait
pop
movsb
flds
push
and
jb
jo
pushf
test
lock
adc
gs
push
inc
arpl
pcmpeqw
or
cmp
lret
push
shl
dec
cwtl
sbb
mov
fdivs
adc
pop
sbb
int
xchg
adc
xchg
xor
mov
bnd
loop
push
mov
leave
dec
lea
fidivrl
cmp
mov
add
cmp
stos
adc
and
pop
xor
iret
mov
inc
enter
mov
imul
or
pop
sbb
jle
loop
out
lods
pop
popf
sub
mov
stos
es
pop
fistpll
jne
dec
imul
movsb
mov
shlb
test
xchg
aad
adc
jge
fildll
mov
pop
sbb
pop
cmp
ror
push
ja
inc
add
or
xor
negb
mov
leave
mov
imulb
adc
idiv
popf
mov
aas
imul
mov
in
dec
popa
mov
xor
push
cmp
out
dec
in
mov
sbb
mov
xchg
outsb
loop
mov
mov
push
cmp
mov
dec
icebp
std
inc
int3
cmp
mov
xor
xlat
cmp
int3
outsb
clc
loope
mov
aam
int
push
rcl
filds
and
imul
cs
enter
shl
scas
fs
xchg
in
in
cmpsb
jp
pop
into
stc
ja
mov
jnp
mov
flds
incb
sbb
stos
ja
sahf
sub
iret
leave
jmp
ffreep
pop
pusha
xor
mov
test
push
or
sbb
ficoml
out
cmp
add
in
sub
lcall
imul
pop
xor
into
es
pop
orb
xchg
xor
stc
jmp
mov
aam
loopne
out
jns
push
mov
stc
jnp
shrl
and
pop
jne
bound
pop
push
mov
xchg
shrl
cld
inc
add
mov
fisttpll
adc
movsl
xchg
pop
mov
outsb
std
fdivrs
push
ds
push
push
jb
push
andl
jns
lret
sub
aas
dec
mov
enter
push
push
imul
sub
or
jbe
pop
xchg
mov
xchg
sbb
push
jae
pushf
xor
pop
sbb
rorb
jnp
mov
adc
test
lds
pop
std
test
lret
jg
jbe
imul
or
bound
xor
pushw
push
ja
fcmovnb
xchg
add
imul
cmpsb
rol
xorb
test
lahf
inc
or
cmp
mov
imul
std
cmp
fstpl
ret
lret
jge
xor
push
dec
nop/reserved
mov
jle
dec
movsl
lret
add
ss
mov
rorb
je
xchg
add
pop
fwait
and
mov
sbb
scas
sti
mov
sarb
inc
lcall
loop
add
add
or
jmp
add
xor
and
jle
popa
or
sub
lcall
mov
cmp
or
aad
adc
test
dec
add
pop
pop
dec
xorb
sbb
mov
mov
gs
inc
xor
in
iret
out
sahf
and
jp
inc
jl
jmp
mov
pop
pop
loop
stos
daa
fscale
jmp
mov
mov
inc
inc
ror
icebp
xor
push
dec
sbb
insl
dec
enter
mov
lcall
cmp
cwtl
add
add
push
pushf
mov
cltd
les
xchg
add
inc
ljmp
mov
jmp
roll
les
lods
sbb
push
shll
addr16
push
mov
fldt
add
leave
icebp
add
subb
pop
hlt
and
xchg
cltd
lahf
incl
daa
adc
int
add
sub
jo
aad
outsl
mov
cmp
cmpsb
movsb
xor
jne
imul
loopne
mov
test
or
into
bnd
daa
jmp
inc
inc
jge
enter
xchg
sbb
xchg
shl
loop
cwtl
neg
sbbb
dec
movsb
rol
or
sub
cmc
inc
les
sbb
mov
mov
out
sub
xor
inc
in
inc
shll
sub
outsl
in
jno
jno
or
jmp
adc
stos
cmp
add
rclb
outsb
jle
rol
add
and
jae
xchg
and
fucomip
fmuls
lods
push
ljmp
lods
push
or
xor
cmpsl
sbb
rclb
adc
lock
pop
dec
out
sub
sub
ja
adc
jns
dec
add
jno
subb
cmp
fs
in
xlat
fnsave
test
imul
xchg
and
lret
mov
push
pop
mov
clc
fiaddl
in
stos
ja
and
cmpb
add
xchg
adcb
ja
xorb
mov
or
xor
sti
leave
fisubs
cmp
fucomp
das
sub
lret
dec
jl
adc
call
cwtl
lret
xor
sbb
dec
repz
enter
mov
in
xchg
mov
lret
adc
mov
incl
push
mov
inc
dec
aad
dec
adc
ja
sub
or
int3
add
dec
jmp
cwtl
ljmp
test
stos
in
push
sub
lret
push
cmp
pop
push
inc
in
das
cs
fwait
jbe
add
or
xorl
or
mov
jg
je
sub
adc
or
xchg
xchg
jae
dec
arpl
cmp
jne
mov
mov
fwait
jne
rcll
shll
inc
lret
xor
fcomp
pop
adc
xor
mov
or
movsl
aas
pushf
in
xchg
lods
std
fsubrs
sti
das
mov
or
gs
mov
inc
adc
fisubl
mov
dec
mov
jl
in
xlat
in
cmp
inc
jns
sub
sbb
movsb
daa
pop
fldt
inc
addr16
gs
mov
sti
popl
mov
and
sbb
xchg
loope
mov
pop
mov
mov
sub
mov
in
push
dec
push
out
ja
lds
out
mov
out
aad
cmp
aad
jp
mov
or
sahf
sub
testb
lcall
loope
and
push
pop
push
imul
sbbl
inc
nop
jl
fbld
loopne,pn
test
sub
mov
xchg
rclb
ret
mov
dec
push
fisubl
xchg
inc
sbb
sbb
cmc
cmp
jp
and
mov
aas
in
mov
outsb
mov
and
adc
out
sub
in
xchg
mov
mov
outsb
jbe
arpl
or
inc
add
cmovge
xchg
ss
push
push
sbb
cmpsb
mov
or
gs
std
inc
es
mov
push
les
xlat
sub
mov
movsl
inc
mov
int3
xchg
and
inc
dec
jne
mov
fmuls
add
mov
lds
jle
js
mov
jae
push
xchg
inc
push
mov
mov
fbstp
push
fistl
outsb
cmp
mov
out
and
popf
mov
xchg
xchg
push
xchg
mov
stos
jmp
cmp
shr
das
xor
mov
sahf
push
jp
or
push
adc
dec
pop
daa
inc
sub
pushf
jno
sub
lods
sbb
dec
outsb
xor
movl
aaa
decl
in
jl
jae
sbbl
or
xchg
in
cmp
xchg
jae
cmpsb
aam
mov
hlt
cmp
lret
jno
cmpsl
xor
stos
daa
xor
test
out
int
inc
pop
xor
mov
imul
leave
int3
xchg
shrl
outsl
mov
xlat
jle
in
in
bound
inc
in
rcl
in
cltd
push
dec
xchg
jmp
std
fcmove
pop
and
and
repnz
lods
sub
mov
jle
adc
and
xor
dec
sub
loope
mov
es
arpl
adc
insl
mov
or
jle
repz
enter
jmp
in
sbb
pop
push
loop
decl
lret
mov
mov
sub
cmpsl
push
inc
jnp
insl
jnp
lods
enter
cmp
sub
inc
movsl
lds
popf
pop
jge
dec
insl
pop
addr16
data16
popf
xlat
pop
clc
out
aad
dec
adc
scas
push
mov
test
jge
xor
pop
lret
jl
and
dec
adc
add
fsubrs
cld
xchg
and
cmp
popf
xchg
mov
and
pop
cmpsb
pop
adc
je
mov
pop
or
shll
mov
hlt
inc
mov
jae
inc
repnz
or
loop
cmpsl
push
lret
push
and
fdivl
sbb
add
push
in
scas
in
fsub
dec
cli
mov
push
mov
daa
test
icebp
popf
nop
dec
stos
aad
arpl
push
test
sbb
pop
dec
loop
or
mov
inc
sub
xor
cmpsb
leave
nop/reserved
mov
sbb
xchg
sbb
loope
cmpsl
cmc
add
bound
cmpsb
xchg
jns
mov
nop
nop
ret
leave
mov
lods
mov
dec
test
push
rcrb
stos
test
out
mov
test
dec
clc
mov
mov
lea
pop
insb
push
dec
adc
gs
sbb
xor
je
xorb
ror
addr16
movsl
xchg
and
orb
iret
dec
fs
inc
mov
testb
jmp
cli
sahf
jno
lods
nop
es
sub
mov
in
jo
aad
test
sub
aas
mov
stos
lsl
inc
fcmovu
addl
xchg
sub
cmc
mov
sbb
mov
xor
ret
xchg
loop
adc
out
add
push
call
cmpsl
inc
cltd
mov
aaa
pop
movsb
xor
adc
add
add
imul
in
jecxz
xor
rcll
lds
jmp
lahf
mov
add
jmp
cltd
insb
xor
inc
daa
movb
xlat
sbb
xor
jae
ret
lret
lcall
add
jg
mov
push
xor
push
je
jmp
xor
scas
inc
dec
cli
lock
ja
je
aas
xchg
addr16
pusha
jb
test
fsubrl
push
pop
xchg
test
ja
inc
jecxz
adc
jno
xor
xlat
add
jne
and
outsl
mov
add
stos
jmp
pop
into
cmp
xorb
cmc
or
loope
mov
rclb
push
shr
into
push
aad
stc
pushf
js
add
or
xchg
fwait
pop
adc
xor
cmc
subl
rcll
push
pop
mov
jbe
fstps
push
psubd
and
in
jb
mov
mov
js
mov
cmp
les
out
sub
cmp
jne
sbb
jno
movsl
icebp
imul
sub
sahf
inc
mov
aas
dec
movsb
dec
xchg
lahf
getsec
inc
xor
cmpsl
mov
push
sbb
stc
xor
xchg
cmp
mov
popa
or
add
stc
fstpt
das
push
aaa
test
stos
sahf
adc
rclb
hlt
das
mov
testb
mov
add
in
icebp
pop
pop
xor
in
or
mov
inc
mov
dec
adc
xor
and
mov
xor
xchg
jp
ret
dec
and
scas
out
out
sub
add
cmp
cltd
cmp
shl
mov
out
xchg
xchg
shlb
xor
add
shlb
mov
pop
push
pop
jge
mov
pushf
adc
cwtl
mov
pop
leave
cli
fdivs
cs
stc
xor
repz
icebp
mov
xor
cmp
dec
mov
adc
aam
test
out
mov
loopne
adc
sbb
lds
add
push
pop
push
sub
mov
xor
push
and
test
mov
mov
dec
mov
aad
xchg
xchg
and
lock
leave
cmp
inc
scas
adc
inc
mov
adc
xor
out
mov
cmp
mov
mov
fmull
adc
push
xor
loopne
push
nop
xchg
loope
push
jo
cld
loopne
and
xor
cltd
arpl
push
sarb
jecxz
jae
mov
jmp
scas
mov
jle
jle
adc
inc
pop
mov
add
in
xchg
xor
movsl
test
mov
lods
sbb
clc
ja
xchg
mov
jecxz
stc
inc
add
pusha
inc
cmpsl
aas
stos
std
mov
cmpsl
sub
pop
dec
xor
int3
adc
dec
je
jne
imul
pushf
negl
shlb
add
push
ss
aaa
jg
mov
iret
enter
add
lahf
shrl
fs
repz
int3
addr16
dec
shrb
in
fs
adc
aaa
push
fildl
inc
lret
clc
aad
loop
lret
lods
les
loope
lahf
pop
xor
jae
jne
ds
popl
loope
loop
in
sub
out
subb
xor
add
push
int3
in
movsl
dec
rorb
add
add
jno
inc
lret
add
and
in
dec
mov
in
ja
sub
add
add
scas
push
mov
push
jno
dec
push
add
xlat
jmp
sub
or
mov
cmp
add
enter
popf
push
iret
mov
pop
xchg
inc
rorb
push
fidivs
es
pop
adc
mov
fidivrs
jge
sub
or
fcmovne
dec
jo
js
loopne
adc
leave
fcmovnbe
jle
mov
insb
jmp
and
lods
adc
lods
std
mov
pop
decb
mov
xchg
jp
imul
es
mov
xor
dec
mov
mull
movsb
std
pusha
push
ds
jne
arpl
aaa
xor
jmp
lods
fists
testb
inc
xchg
test
cld
repz
dec
lret
arpl
cmp
add
rcr
push
out
out
sahf
and
mov
xor
jo
and
repz
mov
cmp
daa
xchg
xorb
xor
jbe
or
gs
add
stc
sub
mov
lods
adc
in
imul
andb
mov
xor
cmp
imul
xor
mov
xchg
fisttpll
out
jmp
mov
mov
or
fistpll
xorl
push
in
je
bound
repnz
inc
xor
divl
stos
sub
out
pop
jne
sbb
push
jmp
outsl
adc
adc
call
xchg
inc
jae
xor
sahf
or
icebp
and
sbb
in
sbb
dec
mov
xor
jmp
sbb
js
pushf
subb
jg
pop
lods
aas
rcrb
xlat
or
mov
rorl
in
cli
jno
out
test
stos
stc
push
ds
and
test
stc
cmp
addr16
mov
stos
mov
inc
loopne
mov
dec
dec
sbb
inc
xor
insb
rcrl
dec
fistpl
js
inc
xchg
les
out
mov
gs
cmpsl
popa
dec
pop
ds
mov
dec
sbb
fnstenv
cmpsb
cs
or
lahf
mov
pop
rcrb
jmp
loop
sub
pop
fwait
xor
mov
adc
push
flds
dec
add
daa
xlat
clc
sahf
xor
add
clc
test
aad
icebp
fucomip
lret
iret
jo
add
shll
sbb
push
test
nop
add
mov
push
aam
arpl
js
cmp
cmpsb
repz
mov
ror
shll
push
fnstenv
mov
adc
les
mov
cwtl
mov
mov
fildl
ljmp
orw
shll
jo
inc
stos
inc
mov
stos
adcl
xchg
sub
sbb
mov
or
mov
cld
dec
jno
mov
cmp
sbb
rol
movsl
cltd
and
in
add
in
pop
mov
pop
fnsave
xor
mov
and
js
or
lret
jb
repnz
mov
push
repnz
pop
jnp
inc
cmp
dec
andl
insb
push
pusha
adc
in
negl
in
into
xchg
lock
jno
popf
or
insb
stc
dec
jg
and
cmp
popf
or
scas
loope
stc
jae
nop
loopne
stos
addr16
inc
inc
mov
subl
outsb
or
imul
out
loope
leave
ret
in
cmp
push
icebp
mov
cmc
mov
inc
jbe
fbstp
int3
mov
inc
jmp
ret
and
cwtl
inc
mov
sysexit
jae
inc
xlat
test
les
lds
inc
sahf
pop
lods
addr16
jecxz
xchg
push
add
sbb
mov
bound
xchg
lods
mov
sbb
cmpsl
add
xor
push
fwait
inc
mov
push
inc
mov
repnz
cmpb
sarb
adc
imul
pop
je
xchg
mov
jnp
test
lods
rolb
sub
and
xor
popf
mov
into
outsl
ljmp
or
dec
xor
testl
xchg
rclb
sbb
push
sbb
mov
add
sbb
and
popa
sub
fistpl
sbb
popa
cmp
js
mov
dec
mov
cmc
sub
fwait
cmpsb
inc
pushf
test
sub
xlat
aas
mov
xorb
pop
in
movsb
cmp
or
lods
aaa
pop
rcrb
push
icebp
in
les
pop
dec
std
das
arpl
outsb
push
cmp
mov
pop
gs
orb
sbb
aam
mov
in
cld
ds
pop
mov
xlat
leave
shlb
pop
dec
push
pop
xor
push
stos
or
jecxz
in
andl
inc
call
or
stos
stos
fwait
mov
xchg
mov
mov
and
loope
fsub
push
push
cld
stos
in
ljmp
adc
cmp
enter
enterw
xchg
shlb
test
fisttpl
pushf
fmull
mov
sti
dec
mov
jle
mov
push
cmp
sbb
lock
insb
add
das
icebp
call
push
push
xchg
jp
mov
push
or
aad
je
jge
insl
add
sbb
and
adc
pop
cmp
push
dec
add
sbb
dec
mov
jg
xchg
out
cwtl
out
mov
or
mov
fdivl
push
xor
lret
sbb
stos
inc
pushf
sbb
nop
popa
mov
pop
rcrl
adc
into
jl
cmp
es
fwait
aad
or
imul
push
and
fdiv
jp
push
mov
stos
mov
dec
imul
pop
push
arpl
rcrl
std
sbb
mov
adc
mov
xor
jecxz
fwait
pop
leave
and
std
push
fs
call
jns
outsb
inc
xchg
mov
hlt
inc
mov
arpl
in
in
pop
add
cmp
test
test
and
test
faddl
mov
mov
ss
cli
mov
ljmp
push
pop
arpl
std
clc
mov
fldl
aas
scas
mov
mov
xor
enter
cld
sahf
fdivs
test
dec
add
or
mov
push
les
mov
int3
bound
fisubrl
hlt
in
lock
jl
negb
rcll
mov
cmpsb
fcmovu
inc
or
pop
xchg
hlt
ror
and
sbb
adcb
inc
mov
jnp
in
in
mull
dec
ja
lds
sub
scas
out
jno
jo
jb
js
mov
movsb
fucomp
add
shrl
bound
xor
scas
pop
mov
jmp
mov
sub
mov
ret
je
in
jge
mov
or
call
fucom
and
test
cs
mov
cmp
shrl
insl
frstor
jl
shl
lcall
aad
clc
adc
pop
push
inc
sbb
xchg
test
ret
sbbl
xchg
orb
nop
sti
out
jno
and
lods
adc
sbb
mov
or
ds
imul
lock
cwtl
and
or
pop
movsl
mov
jae
and
mov
xchg
aad
xchg
lods
mov
dec
test
or
mov
aad
sub
dec
xor
ss
mov
loop
cmp
xchg
aaa
mov
jne
xor
lcall
dec
push
mov
int3
lret
xor
jp
cmp
xchg
and
push
push
int3
fcmovnu
insb
and
pop
lea
stos
scas
pop
std
push
in
mov
dec
imul
lahf
xor
jae
sahf
cmp
pushf
dec
sbb
jp
add
clc
loopne
xchg
dec
pop
sub
call
aad
js
dec
cmc
xchg
mov
jg
dec
push
test
jb
cmp
xchg
rclb
xor
test
lock
inc
jno
aam
rol
push
shrb
or
push
cmp
adcb
xchg
sbb
cld
fistps
push
sub
mulb
xor
fmuls
add
lods
in
pop
fwait
sub
dec
lcall
les
insb
add
shrl
ds
pop
cmpsl
fdivs
cld
aam
nop
insb
sub
xchg
arpl
js
fxch
add
fcoms
xor
pusha
lods
pop
jge
les
shrb
lahf
fxch
faddl
inc
mov
ss
push
add
enter
mov
rcr
pop
sub
push
fcomp
push
scas
fwait
lds
mov
outsl
cli
mov
repz
or
fwait
fs
sub
pop
popa
push
sti
test
sbb
clc
adc
cli
mov
outsb
sub
hlt
xchg
push
xor
and
lds
insl
mov
adc
test
xchg
inc
mov
pop
push
xor
and
iret
inc
icebp
fs
sub
shll
rclb
push
cltd
fwait
pop
add
ds
popf
or
jbe
mov
jo
ljmp
int3
pushf
add
rclb
xchg
popa
in
sub
jo
inc
loope
rcrl
dec
and
push
leave
stos
mov
xchg
adc
sbb
fs
adcl
int
enter
mov
xchg
in
lods
fistpl
out
rorb
fimuls
mov
shlb
or
or
mov
pop
in
jno
cmovle
xchg
stos
lock
push
pop
pop
mov
push
mov
mov
mov
movsl
nop
pop
cli
dec
outsb
out
imul
cltd
pop
add
sub
dec
roll
mov
xchg
push
icebp
lea
push
sti
dec
das
inc
jge
mov
and
ficoml
xorb
scas
xchg
mov
bound
mov
and
jmp
fisttps
sahf
sub
sub
in
add
mov
arpl
int3
mov
xchg
popl
and
je
mov
mov
xchg
sti
ja
inc
pop
jle
xchg
sub
into
orb
int
adc
xchg
jg
addb
sub
cmp
pop
daa
mov
push
mov
pop
filds
loopne
xchg
aad
sub
sub
mov
mulb
push
xor
arpl
adc
xor
sbb
icebp
outsb
popa
shl
fists
sbb
push
xchg
dec
inc
sbb
inc
add
sti
push
rorb
lcall
sub
sub
int3
imul
testl
insb
push
mov
popf
hlt
cld
idivl
adc
xorl
sbb
mov
insb
sub
sti
push
loopne
or
xchg
cmc
or
sub
repz
call
fnsave
iret
scas
jne
int
insl
jg
cmpsl
lret
mov
mov
sub
pop
nop
adc
cli
mov
mov
daa
addb
icebp
addl
icebp
movsb
mov
clc
sub
sub
gs
arpl
xchg
inc
jae
mov
loop
sbb
push
cmp
out
jmp
jae
iret
or
rclb
aaa
fmulp
loop
push
dec
inc
test
movsl
mov
incl
push
int
rclb
fld
mov
insl
cltd
push
mov
call
int
mov
cltd
sbb
add
std
dec
movsl
shlb
popf
push
sub
jecxz
data16
jo
adc
adc
pop
repnz
shlb
and
sbb
test
pop
gs
lods
insb
aas
inc
push
ficompl
and
add
int
jmp
loopne
sbb
aad
adc
mov
jo
mov
adc
sarl
mov
stc
adc
data16
sub
test
jno
xor
or
push
xor
push
sbb
inc
mov
mov
adc
inc
sahf
xchg
mov
repz
imul
int
adc
aam
mov
shr
jns
and
ljmp
std
nop
adc
lcall
lods
pop
cli
jl
xchg
movsl
jmp
pop
xchg
fstpl
in
in
adc
in
mov
int3
push
or
adc
in
cmpl
dec
cmp
xchg
and
cmp
in
addr16
adc
mov
sub
bound
and
lret
sahf
lods
push
cmpsb
addb
mov
leave
sub
xor
hlt
sbb
push
mov
mov
jns
push
shll
fldcw
mov
and
push
dec
and
imul
les
cmp
push
pop
xor
in
adc
divl
hlt
outsb
outsl
cmp
and
push
ret
or
adc
dec
lret
add
xchg
mov
cltd
push
jmp
add
or
xlat
add
inc
inc
mov
hlt
xchg
shll
repnz
pushf
jbe
lock
loop
into
pushf
enter
adc
loopne
sbb
std
mov
enter
idivl
loope
ret
ljmp
and
sbb
insl
data16
out
and
arpl
dec
or
scas
cmp
adc
xchg
out
xor
sbb
sbb
or
adc
es
push
xchg
movsl
add
jmp
xchg
sahf
int3
add
aad
das
js
sbb
shlb
pop
sbb
ljmp
sahf
mov
loope
mov
repnz
push
fwait
hlt
pushf
xchg
or
ljmp
jbe
cmp
cmp
repz
cmp
mov
cli
xor
das
daa
jmp
dec
mov
and
lock
lea
lods
inc
mov
xchg
loop
pop
xchg
loopne
mov
mov
pusha
sbb
je
loopne,pt
icebp
imul
mov
lahf
cli
stos
inc
lds
es
adc
movsl
stos
mov
in
dec
or
sbb
push
inc
fistl
call
pop
cld
cld
outsl
loopne
int3
int
int3
arpl
imul
sbb
cs
fisubrs
cmp
std
xor
cmp
cli
pop
insb
add
lods
push
mov
xchg
stos
outsb
sbb
add
lods
push
xor
xlat
gs
ds
movsl
adc
cmp
adc
pop
aas
test
scas
mov
mov
lea
push
or
enter
bound
mov
add
mov
xchg
aam
or
out
je
jnp
outsl
cltd
pop
pusha
out
inc
stc
xor
pushf
jnp
adc
dec
std
add
cld
and
jnp
shlb
add
sbb
mov
dec
dec
push
push
sbb
gs
fsubrl
jo
pushf
inc
jecxz
out
int
addr16
faddp
inc
add
lock
add
or
adc
dec
lds
xchg
pop
cmpsb
jl
jne
dec
addb
dec
cli
les
pushf
jg
fwait
addl
cmc
mov
mov
sbb
stc
pop
out
push
lods
mov
test
mov
std
push
loopne
lock
pop
or
addr16
fidivl
cmp
stos
cmp
fdivr
mov
lahf
lock
xchg
mov
stos
push
pop
xadd
fstl
dec
shlb
push
lods
dec
mov
ret
mov
lock
lods
or
xchg
int3
xchg
jo
mov
push
xor
jecxz
mov
notb
xor
and
scas
cmpsb
sti
push
mov
insb
xlat
push
add
mov
pmaxsw
scas
mov
sub
xchg
adc
lods
je
imul
push
rcl
cmp
jnp
std
stc
and
and
in
pop
mov
out
pop
lahf
inc
sbb
cmp
jae
mov
leave
lods
add
push
stos
iret
and
int
pop
fstpt
and
adc
lods
frstor
daa
cmpsb
pop
in
cmpsb
cmc
sahf
add
les
dec
scas
cmpb
push
sub
jnp
dec
mov
sbb
jae
pop
push
xchg
adc
and
fisubl
rclb
dec
pop
rcl
xor
mov
scas
stos
jmp
imul
xchg
jns
mov
outsb
xor
adc
lcall
decb
mov
subl
mov
mov
xorb
in
pop
ror
in
sbbl
adc
add
imul
scas
pop
rolb
sub
lds
adc
xchg
ss
std
out
idivb
das
std
mov
imul
mov
repnz
push
repnz
xor
jo
xlat
mov
pushf
aad
dec
rcll
test
sahf
std
bound
cmp
shrb
push
jnp
jg
push
nop
push
mov
pop
jecxz
in
jae
mov
sub
inc
xchg
pop
xor
pop
lcall
lock
fnsave
aam
mov
sbb
scas
out
jle
or
movsl
xchg
inc
jae
lret
scas
sub
mov
sub
xchg
out
pop
sbb
adc
add
xchg
leave
push
sbb
mov
mov
insl
mov
cmp
jg
xchg
mov
dec
dec
daa
add
hlt
inc
ficoms
ret
loopne
and
out
sbbb
int
and
outsl
sub
mov
std
stos
xchg
test
xchg
adc
mov
jg
mov
push
mov
or
push
mov
lods
pushf
sub
aas
scas
and
mov
or
cwtl
mov
dec
bound
adc
mov
in
lret
jno
xor
push
push
loope
dec
imul
inc
shl
sub
pusha
push
sbb
int
xchg
sbb
jmp
dec
cmp
insl
xorw
popf
das
fsubp
push
pop
fwait
jp
out
sbb
popf
sub
scas
lret
mov
jecxz
mov
mov
dec
mov
int
rclb
adcl
sahf
mov
inc
fisubrs
je
push
pusha
pop
sub
add
jmp
adc
test
push
ds
or
outsb
xor
loopne
xor
inc
jmp
pop
mov
add
in
jno
rolb
adc
jp
cld
ja
xchg
add
dec
ljmp
xor
dec
cs
and
fisttpll
xchg
sbb
add
lea
cmpsb
pop
xchg
cmc
icebp
lea
mov
scas
sbb
sub
shlb
loopne
jo
fs
xchg
or
test
into
addb
adc
jb
in
push
adc
rcll
loopne
mov
xor
in
pop
inc
mov
stos
inc
and
ljmp
icebp
fst
or
pop
popa
and
or
clc
enter
sti
in
mov
jae
mov
mov
xchg
enter
cltd
jge
cltd
je
jecxz
add
pop
or
jg
pusha
test
outsb
push
outsb
loope
jecxz
stos
xchg
and
loop
sbb
jp
xlat
mov
leave
pop
stc
push
inc
cltd
sbb
xchg
inc
ja
adc
mov
inc
inc
fildl
inc
mov
mov
sub
mov
mov
or
insl
inc
push
int3
enter
es
pop
jae
cwtl
push
insb
cmpsb
mov
enter
sub
test
mov
fwait
jl
xor
in
scas
outsl
jo
xchg
nop
nop
sub
lea
cmpsb
sbb
jbe
mov
sbb
je
cmp
and
dec
and
or
incb
add
mov
out
mov
std
lock
adc
imul
movsb
fbld
and
sbb
pop
adc
dec
push
shll
pop
mov
dec
stc
pop
and
inc
sbb
xchg
loopne
mov
or
xchg
cmp
mov
fisubrl
movsb
bound
adc
or
cltd
cwtl
push
loopne
sub
xlat
inc
test
or
inc
push
xchg
pop
jnp
sar
add
mov
ret
cmp
sbb
loop
mov
ja
dec
pop
jl
repnz
jae
rclb
movsl
dec
sbb
dec
and
inc
loopne
out
and
nop
and
repnz
add
jp
pop
dec
mov
lds
xchg
xchg
sbb
adc
cmp
or
in
test
pop
mov
sub
out
sbb
jbe
xchg
nop
cmpb
dec
aaa
int
ljmp
xchg
add
fmulp
cmp
dec
inc
mov
xchg
cmp
and
and
jnp
xor
xchg
popa
pop
daa
pop
rcl
xchg
push
scas
xchg
ja
adc
or
push
jle
mov
pop
xor
cmc
insl
fbstp
inc
lock
sub
xor
push
rcll
int
sub
rcl
scas
pop
mov
mov
lcall
pop
mov
inc
imul
jnp
or
call
mov
add
xlat
es
into
xchg
insl
gs
lret
adc
xchg
pop
pop
push
rcrb
repnz
mov
xchg
cmpsb
or
movsb
out
je
shll
call
pop
jg
icebp
push
scas
bound
push
in
xor
ds
and
inc
jne
or
mulb
leave
mov
mov
lods
cwtl
xchg
inc
sbb
sbb
jmp
jle
cli
pusha
xchg
rcr
push
dec
jge
mov
push
in
ja
push
sti
and
iret
addl
pop
fisubl
jecxz
dec
pop
out
dec
cmp
jb
pop
shl
push
sbb
sbb
test
je
cmp
cmc
cmp
cmp
mov
lret
sub
dec
push
repnz
sub
iret
xchg
and
xchg
push
mov
in
inc
add
in
xchg
mov
int
enter
add
mov
jge
adcl
lahf
add
shrb
sahf
xor
xchg
fs
in
dec
xor
mov
aaa
or
cli
nop
in
mov
inc
or
jmp
ja
sbb
es
mov
jbe
les
jnp
addb
dec
enter
stos
xchg
in
pop
int3
test
cmpsb
lret
jp
push
inc
push
lods
sbb
adc
inc
int
mov
xor
cmp
sub
cmp
inc
jg
push
jmp
inc
jo
sbb
stos
je
insl
and
fucomp
mov
or
inc
mov
add
xchg
subb
or
cmp
add
into
leave
mov
lcall
mov
dec
btr
cmc
or
fbld
sub
xor
sub
filds
mov
adc
add
jne
xor
loopne
or
adc
fstl
push
sti
mov
push
mov
das
sahf
and
xor
push
push
jge
mov
rcrl
rcll
mov
inc
mov
stos
jae
je
cmp
leave
into
mov
push
js
jne
arpl
dec
imul
icebp
cmp
lret
cmpsb
mov
or
into
xor
sub
jmp
sarl
pop
aas
sbb
push
dec
pop
enter
jne
xchg
push
sbb
sub
and
fwait
xor
out
dec
sub
and
ja
les
aaa
cli
jge
ss
jo
mov
es
imul
iret
pop
jns
inc
add
aad
jge
fst
mov
repnz
mov
test
sub
sub
fldcw
push
cmp
cltd
loopne
into
push
and
out
stos
sub
mov
dec
jmp
scas
adc
pop
cs
mov
shr
mov
call
mov
fnstenv
lret
maskmovq
xlat
mov
mov
mov
repz
and
hlt
push
stc
or
pop
std
rorl
lcall
push
cs
push
xlat
mov
jmp
lock
ret
dec
mov
repz
jae
mov
sub
or
lcall
call
xchg
add
pop
add
mov
jbe
repz
inc
xchg
sbb
popa
adc
test
cltd
pusha
jmp
fucom
inc
add
cmc
push
loopne
outsb
push
aad
clc
movsl
pop
jmp
sti
in
mov
lcall
xchg
or
pop
adc
pop
xchg
jle
mov
jno
call
mov
notl
das
out
cwtl
xchg
aad
sbb
mov
add
or
sar
mov
dec
jge
repz
dec
imul
fwait
push
imul
shll
or
dec
xchg
in
stc
sub
pop
sbb
xlat
cli
add
xchg
dec
lods
bound
clc
in
cmp
test
loope
lods
inc
test
sbb
ja
cli
add
mov
out
fucomip
jns
addl
scas
mov
cwtl
xchg
cmpsl
jbe
das
jmp
dec
mov
adc
jno
jb
enter
enter
dec
inc
nop
leave
fdivl
or
mov
faddl
jne
orl
js
mov
popa
mov
subb
ds
into
cltd
inc
jmp
addr16
push
ljmp
lock
mov
in
int3
dec
enter
popl
mov
das
sub
imul
fsubrp
cmp
mov
fbstp
jmp
clts
je
fistl
or
push
test
push
mov
in
sub
push
mov
push
nop
in
push
xchg
and
stos
sbb
xorb
xor
inc
lds
push
xor
jo
lcall
data16
or
psrlw
cmp
fwait
xchg
sbb
lret
dec
sarb
sbb
or
jo
je
pop
jecxz
cmp
fldl
push
pushf
and
cmp
cmp
mov
or
xor
lods
jmp
add
add
and
pop
xchg
inc
data16
add
push
sbb
popf
pop
ret
in
nop
insb
sub
lret
dec
pop
mov
ss
xchg
scas
mov
add
lock
and
fistps
mov
mov
pop
adc
mov
add
enter
add
dec
jl
mov
shll
mov
lods
cmp
mov
fsts
or
ret
adc
ds
push
cwtl
in
push
add
in
or
add
jle
xchg
loope
xchg
or
pusha
mov
xchg
dec
daa
outsb
mov
push
xchg
addr16
and
sti
lds
ror
lods
jae
cltd
test
lea
inc
leave
ss
jae
or
or
dec
and
or
leave
cwtl
xchg
enter
mul
popa
mov
daa
mov
out
rolb
lea
ret
adc
cmp
adc
outsl
mov
aad
cld
jbe
push
inc
xor
shll
mov
and
and
sahf
dec
add
pop
ds
cs
fmuls
popa
sub
sub
scas
xchg
jnp,pt
icebp
push
out
adc
add
mov
shrb
cmc
fcoml
mov
and
fdivp
mov
mov
gs
or
fdivrs
icebp
inc
mov
xor
jg
adc
lret
mov
bound
adc
pop
filds
clc
gs
fsts
icebp
fnstsw
mov
pop
inc
cli
mov
sarl
mov
cmp
clc
adc
push
cld
int
cmc
adc
xchg
lret
mov
jno
jmp
push
mov
lds
and
pop
lock
or
lods
mov
jp
std
sbb
ret
push
add
lcall
dec
add
in
or
or
mov
dec
bound
mov
mov
shrb
dec
icebp
scas
add
inc
int
xor
xchg
ret
lea
outsl
cltd
ret
les
rolb
dec
push
fstpl
pop
test
mov
jo
popl
sbb
andl
mov
in
jecxz
xor
inc
pop
loopne
enter
movsl
sar
notb
out
jge
inc
fldl
inc
adc
mov
and
sub
push
and
or
cmp
mov
test
in
lret
push
ja
adc
sbb
and
push
or
arpl
inc
lds
scas
inc
loop
dec
add
pop
iret
pop
aad
out
xor
in
jns
icebp
push
into
mov
cmp
and
xor
loope
jnp
mov
add
push
fmull
sub
insb
es
and
sub
popf
inc
sub
aaa
sti
push
fwait
push
push
loop
jae
loopne
dec
add
arpl
pusha
lds
xchg
mov
mov
and
add
push
mov
gs
aas
daa
rcrl
xchg
inc
and
adc
or
push
or
pusha
mov
push
insb
pusha
jne
je
mov
adc
leave
fwait
push
fnsave
ja
aas
aam
arpl
std
pop
out
push
pop
push
negb
fisubs
add
push
mov
adc
pop
sub
stc
sub
movsb
pushf
xor
push
in
lcall
sbb
push
js
insl
push
dec
rcrb
pop
cmp
push
push
mov
push
adc
aaa
pop
add
divl
jmp
in
mov
out
xchg
sbb
icebp
and
call
iret
repnz
leave
scas
cmc
sbb
push
cmp
mov
and
insb
pop
mov
or
dec
xor
jmp
push
cmp
popa
adc
push
xchg
lds
pop
xor
insb
repz
out
mov
push
insl
jecxz
aas
push
call
mov
cmp
movsb
bound
cmp
int
dec
fs
inc
into
cli
dec
rcrl
mov
lds
icebp
repnz
iret
divb
jg
loop
mov
icebp
call
cmpsb
sbb
test
pop
lret
add
jnp
in
xchg
sub
mulb
aaa
mov
mov
out
gs
push
jb
xchg
or
mov
rcl
cmpb
jb
xchg
and
pop
shufps
jo
fimull
shll
rorl
and
test
aam
mov
call
xchg
dec
add
cmp
nop
and
and
or
xchg
push
ja
lds
dec
dec
stos
lret
xchg
lods
sub
mov
nop
or
pause
adc
pop
add
dec
out
mov
lret
xchg
xchg
push
mov
nop
clc
mov
fwait
add
cmp
icebp
jo
clc
scas
sub
lods
mov
loop
pusha
sub
call
icebp
arpl
ret
stc
ret
rcrb
aad
clc
mov
aaa
or
les
dec
mov
lods
inc
xchg
mov
sub
and
inc
mov
scas
and
into
in
mov
push
sub
icebp
pop
int3
mov
andb
js
cmp
sbb
push
lcall
aas
mov
mov
inc
inc
mov
in
adc
mov
lcall
inc
add
dec
sahf
jecxz
gs
push
scas
mov
lods
adc
adc
xor
loope
call
mov
mov
icebp
pop
mov
dec
inc
cmpsb
jo
out
mov
mov
mov
jl
cli
jnp
jae
fildll
popa
inc
ja
cmc
in
insb
test
mov
pop
int
paddusw
pop
xchg
out
fs
idiv
daa
repnz
popa
mov
mov
mov
in
aaa
or
mov
leave
data16
adc
cmpsb
mov
pop
je
insl
jecxz
andl
and
mov
cmp
sbb
leave
dec
adc
popa
outsl
jle
fwait
jns
ja
int
inc
push
mov
andb
jmp
mov
push
popa
dec
dec
inc
pusha
push
rcr
mov
push
dec
mov
ljmp
inc
lds
sti
cmp
push
pop
aam
push
add
daa
cmp
and
pop
mov
and
push
sub
fs
jno
or
gs
jo
sbb
add
les
sub
scas
shll
cwtl
fimull
and
rcll
repz
dec
adc
loop
jle
mov
push
push
lea
icebp
enter
sbb
fbld
inc
push
mov
sub
or
test
cmp
insb
mov
mov
movsl
mov
mov
xorl
sub
std
mov
inc
dec
cmovb
pop
pusha
mov
dec
add
sbb
mov
fsubrp
lcall
adc
lret
cmp
ljmp
add
or
lret
into
mov
arpl
stc
dec
mov
les
popf
rorl
iret
sub
daa
dec
repnz
lds
imul
insl
loop
test
test
adc
repz
mov
test
jb
int3
or
pop
loop
les
dec
push
cmpb
arpl
imul
pop
sub
dec
xchg
shrl
or
loopne
fsubrs
cld
cld
cmpsl
loope
daa
repnz
movsl
inc
ljmp
fcomip
or
pop
popa
fs
jle
cmp
into
cmp
in
enter
mov
sub
pop
xchg
pop
sub
push
add
dec
adcl
sahf
lds
sbb
cmc
mov
push
or
lods
aam
or
push
pop
bound
dec
ss
mov
movsl
adc
in
push
cli
mov
xor
ficoms
mov
push
lcall
sbb
test
cmp
xor
adc
xor
sti
or
inc
jg
jb
push
xchg
adc
adc
adc
add
jno
jns
lcall
in
hlt
or
pusha
lods
or
mov
xchg
pop
addb
test
mov
fxch
fwait
stos
and
mov
jg
cmp
jo
mov
imul
in
icebp
jg
scas
pop
popa
and
dec
adc
inc
repnz
stos
jnp
sbb
iret
dec
dec
test
jge
and
sub
inc
cs
mov
pop
push
ret
mov
mov
xor
jl
jo
loopne
shl
shll
pop
cmpsb
into
and
outsb
in
mulb
int
cmp
mov
mov
les
mov
sbb
shll
lock
das
jns
aas
addr16
fs
mov
jbe
xchg
xchg
imul
xchg
or
mov
sub
enter
pop
pop
std
popa
inc
mov
xor
mov
stos
and
loope
push
push
mov
mov
fiadds
outsl
inc
and
shlb
mov
jg
in
add
das
adc
dec
xor
mov
adc
push
sarb
and
dec
mov
stc
dec
add
dec
xor
cs
std
aam
pop
fisttpll
mov
fmull
xlat
mov
adc
sete
insl
xchg
sbb
aad
xchg
push
sti
lret
sub
cmp
mov
arpl
dec
or
mov
jb
mov
dec
lods
mov
arpl
xchg
clc
shrl
sbb
test
mov
inc
pop
inc
ljmp
add
vpavgw
paddw
and
ss
sub
shrl
mov
xor
es
pop
pop
fistpll
out
xchg
js
push
out
xor
mov
rorb
pop
adc
add
mov
lahf
mov
xor
push
inc
cwtl
jle
ret
imul
jg
sub
mov
ja
xchg
bound
nop
jle
cmc
lock
daa
data16
mov
lcall
in
dec
mov
gs
popa
std
xor
cmpsl
jp
fsubl
int3
pop
data16
sub
and
out
lret
sbb
leave
shll
loop
xchg
xor
push
mull
call
or
out
int3
imul
data16
mov
cwtl
mov
cmp
pusha
mov
xchg
stc
lods
xchg
xchg
or
jbe
imul
shll
test
jl
push
sbb
mov
daa
mov
mov
inc
adcb
pop
jp
adc
mov
enter
cmpsb
xchg
xchg
arpl
or
sbb
lock
les
cmpsl
rcr
and
repnz
into
sbb
push
inc
sub
mov
jne
idivb
dec
adc
int3
andb
xor
cltd
insl
mov
daa
lahf
xchg
fcompl
fsts
loope
sbb
cmpsb
bound
or
insb
lock
xor
jb
mov
cmp
mov
and
jmp
push
test
sub
das
test
push
sbb
nop
sbb
cmp
mov
aas
and
xor
pop
out
and
mov
es
out
call
test
dec
mov
aas
test
sub
stc
cwtl
mov
icebp
cltd
mull
outsb
push
xchg
lcall
into
jmp
mov
mov
inc
fistpl
mov
inc
cli
mov
mov
in
scas
pop
mov
mov
leave
loop
insb
int
sahf
cmpb
push
ljmp
orb
aam
mov
dec
mov
loope
insl
sti
fstps
push
rolb
dec
add
scas
jbe
fcoml
lret
cli
cs
sub
mov
and
shrb
xchg
inc
mov
add
jp
addl
push
es
and
popa
lahf
inc
xor
sub
clc
call
gs
and
sbb
mov
js
imul
sbb
out
push
bound
jp
cmp
test
into
xor
xor
cmp
fcomps
jnp
mov
pop
mov
sbb
aas
mov
and
sti
cmpsb
in
xchg
bound
lret
iret
pop
xchg
aam
jmp
push
icebp
sub
jle
sub
cmpsb
jns
iret
pop
call
and
testb
mov
ss
or
popf
add
mov
sar
and
fcoms
mov
leave
hlt
gs
mov
les
popa
or
pop
jl
push
data16
test
pushf
int3
lods
cmp
jb
test
sbb
stos
ss
fwait
xor
out
iret
adcl
jns
push
mov
cli
pop
test
pop
cmc
mov
fistpl
popf
mov
fmuls
repz
push
xchg
js
gs
sub
mov
gs
jo
popf
call
sahf
mov
dec
ljmp
shl
loopne
push
jecxz
add
clc
popa
pop
mov
iret
xchg
data16
adc
dec
rcrb
lret
popa
adc
das
mov
fbld
test
cmc
sub
xchg
hlt
cmpsb
or
dec
pusha
in
and
sti
std
and
idivl
cmp
pop
xchg
jno
inc
add
adc
mov
sbb
mov
mov
or
dec
mov
xchg
out
jbe
imul
aaa
push
aad
or
sbb
out
pop
fwait
xor
cmp
mov
xchg
or
add
in
dec
sbb
fsubl
lods
arpl
outsl
inc
xor
addr16
scas
idivl
call
lods
or
popa
push
xlat
outsl
jmp
lds
jns
add
adc
mov
in
jnp
xlat
int3
ljmp
xchg
bound
lock
or
push
cmpsb
jbe
movsb
nop
pusha
test
mov
aas
aam
ljmp
lods
push
dec
adc
mov
insl
clc
sbb
mov
xor
ret
dec
imul
movsb
ss
std
inc
jg
fidivs
xor
outsl
in
movsb
pop
outsb
lahf
xchg
stos
lea
jbe
in
and
mov
out
jb
arpl
jle
adc
inc
sub
je
mov
sub
shrb
jne
popa
dec
dec
aas
sbb
pop
andb
fistl
adc
adc
inc
mov
cmpsl
es
lods
iret
cmp
sbb
and
push
xor
mov
mov
and
stc
sbb
push
pushf
add
gs
mov
xor
popa
test
cltd
outsl
repnz
sbb
mov
push
rcl
ja
push
loope
addb
cvtdq2ps
push
test
outsb
cmpl
les
jo
imul
or
xor
addb
cld
scas
add
sub
sarl
mov
mov
into
repz
fiadds
js
pusha
inc
inc
sub
mov
and
mov
ss
int
mov
inc
outsb
push
xchg
mov
ud0
mov
data16
jno
mov
lods
in
stos
repnz
pushf
mov
loopne
test
scas
mov
test
scas
xchg
mov
lea
mov
add
insb
pop
jmp
jb
push
inc
into
mov
aad
sbb
xchg
pop
popa
mov
or
xchg
sub
sub
inc
xor
incl
push
pop
xor
adc
push
in
clc
xor
and
stc
movsb
cmp
imul
jo
jle
inc
adc
inc
dec
addb
iret
mov
test
cmp
mov
pop
icebp
and
mov
lods
loop
lcall
scas
push
sbb
or
out
sbb
pop
mov
cmpsl
arpl
xchg
cmp
cmp
fnstenv
adc
call
pusha
fildll
out
outsl
jnp
lods
and
popa
or
cmp
lds
and
imul
jo
cmp
aad
enter
add
sub
out
sbb
sub
jns
shll
cmp
xlat
mov
add
mov
pushf
in
cmp
inc
scas
mov
adc
cmp
mov
popf
stos
bound
adc
inc
lahf
cmp
xchg
sub
scas
sarl
fsubs
jb
rolb
or
xchg
cmp
add
jnp
mov
or
and
scas
shlb
inc
add
outsl
push
sbb
je
pop
jmp
lcall
lods
push
lds
sbbb
ja
mov
insl
jmp
and
adcb
idiv
addr16
mov
pop
pop
dec
sbb
test
push
sti
lock
inc
cmp
orb
je
sti
inc
xchg
ficoms
mov
xor
call
or
jb
inc
int3
cmpsb
jb
jmp
ret
je
inc
and
pop
xchg
cmp
cmc
mov
ret
scas
data16
xchg
int
pop
cmpsl
mov
ss
call
cltd
xchg
and
cmp
rorb
pop
out
add
aas
push
fwait
enter
xchg
jmp
lret
call
lret
orb
pop
pop
into
cmp
leave
sub
jg
cli
and
inc
sbb
sbb
push
clc
mov
hlt
stc
dec
jp
not
push
stos
jle
and
addb
shrl
or
mov
je
les
std
cmp
mov
fnstsw
imul
mov
and
das
or
popf
lds
sub
sub
pop
xor
sbb
test
shufps
and
in
push
jnp
jmp
int3
andb
negb
or
ficoml
cltd
pop
js
jge
aaa
xor
in
jnp
cmp
aam
lods
sti
jne
ret
mov
jecxz
cmpsl
push
sbb
andb
pushf
mov
push
sbb
in
sbb
insb
scas
es
ss
mov
enter
loopne
ret
test
push
push
jb
inc
addr16
xchg
sub
in
inc
sub
jne
leave
jno
add
or
cs
xchg
inc
loope
scas
sbb
clc
adc
push
push
add
movsl
rolb
dec
scas
cmp
xchg
push
rorl
testl
mov
sub
inc
sub
sub
shr
pop
jp
fcoml
mov
jne
out
stc
xlat
in
push
mov
js
aas
iret
pop
jp
cmc
mov
mov
outsb
push
or
dec
xor
fstl
js
mov
fbstp
lret
xor
ja
adc
xchg
pusha
loope
adcb
int
jge
pop
pop
jne
test
mov
andb
mov
fldenv
movntq
addr16
jno
adc
cmp
mov
xchg
into
push
popa
jo
movsb
imul
and
es
mov
in
push
sbb
ss
push
sub
jg
push
or
imul
fistl
mov
push
in
push
lret
jno
jno
sbbl
mov
mov
pop
cmp
fsubrp
mov
inc
and
push
inc
sbb
adc
inc
add
inc
imul
mov
fs
fimull
sub
out
and
inc
inc
inc
xor
nop
mov
je
jp
push
adc
incl
ret
stos
lahf
pop
out
and
xchg
cmc
in
movsl
outsl
js
fildll
scas
ret
aad
sub
jmp
mov
rol
mov
adcl
inc
and
push
push
jae
lods
pop
mov
cmp
or
mull
push
pushf
xor
or
das
dec
jle
mov
stos
sub
adc
jb
sbb
test
ja
push
dec
sti
lcall
jmp
mov
inc
pop
push
cmpsb
int3
adc
stos
sahf
cmp
leave
leave
mov
clc
jae
aam
shlb
xor
jo
xor
in
cmpb
loop
xor
jecxz
xchg
mov
mov
lret
pop
pop
sar
cmovp
jb
cmp
inc
sahf
jl
je
jg
sub
lock
out
or
pop
pop
pop
es
xchg
sub
pop
stc
ljmp
test
add
mov
mov
pushf
loopne
dec
dec
imul
pop
int
mov
js
mov
out
and
neg
js
enter
mov
fwait
dec
sub
inc
and
mov
cmc
inc
sbb
lahf
loopne
inc
fs
rclb
cmpsl
adc
repnz
inc
lret
sbb
out
inc
mov
inc
sbb
pop
pop
sbb
cmp
pop
ret
arpl
inc
jo
inc
add
stos
lds
mov
hlt
push
xchg
bound
std
lods
in
jle
cli
sub
fsubrs
ljmp
cs
and
pop
or
inc
add
cmpsb
test
dec
daa
mov
jg
push
cli
lret
and
fwait
mov
clc
loope
lods
xor
out
lods
inc
push
jmp
mov
xor
repz
cmpsl
jae
add
xchg
rcrl
mov
and
movsb
cld
and
add
fstpl
dec
sbb
jl
nop
in
stc
popa
inc
inc
outsb
cmpsl
cli
mov
sbb
dec
ret
loopne
inc
fildl
lods
inc
and
out
jg
cmp
mov
cmpsl
dec
cmp
jo
stc
mov
insb
sti
sub
lock
test
mov
inc
xlat
mov
and
hlt
lret
fildll
xchg
xchg
dec
dec
adc
fidivl
call
fwait
movsb
outsl
testb
into
scas
mov
adc
dec
pop
mov
lods
in
lret
mov
insb
clc
sbb
rcll
mov
add
jmp
xor
xchg
movsb
cmpsb
fwait
pop
pop
push
mov
dec
cmpsl
in
scas
push
push
clc
stc
ljmp
mov
xchg
mov
bound
andb
push
cmpsb
xor
jp
mov
fnstsw
push
push
outsl
jae
pop
fdivr
sahf
add
or
xorb
mov
add
loope
sub
dec
out
adcl
mov
mov
jp
sub
pop
fdivrl
out
pop
dec
test
out
and
lcall
and
push
in
mov
sbb
outsl
fmuls
dec
ret
jo
adc
jmp
jbe
adc
push
lahf
pavgb
arpl
movsl
mov
pop
aaa
adc
pop
add
movb
mov
out
inc
repnz
fdivl
inc
aaa
sti
mov
sbb
cmp
inc
stos
hlt
stos
inc
into
sbb
iret
inc
pop
sub
aad
enter
das
std
cmpl
into
test
sub
or
xlat
dec
js
in
cwtl
cwtl
stos
adc
sbbl
inc
stc
aaa
add
inc
lods
insl
into
or
ret
out
dec
dec
xchg
leave
pop
xchg
sbb
xor
fidivs
adc
lahf
cwtl
push
imul
and
sub
inc
mov
or
fisubrl
and
std
sti
mov
push
jnp
or
jmp
push
push
xchg
jmp
mov
inc
fsubrl
fiadds
ljmp
jp
pop
pushf
mov
in
inc
dec
adc
fs
jnp
jle
adc
out
sub
rorl
repz
inc
fisubrl
mov
stos
push
popa
sbb
mov
sub
aad
fwait
leave
scas
movl
js
leave
jne
mov
std
gs
xchg
fxch
xchg
jnp
inc
jecxz
test
push
lret
aas
pop
in
xlat
inc
popa
sbb
enter
in
jno
add
pushf
lods
sub
ret
ss
cli
xchg
mov
popf
sbb
add
lea
adc
push
jl
adc
fcmovnb
popf
aad
mov
push
mov
xchg
push
xchg
notl
mov
or
add
jecxz
repz
inc
xchg
cli
sub
jg
aas
xchg
jns
push
nop
xlat
sbb
and
push
pop
or
sub
cmp
pop
cli
pusha
or
xchg
jle
aam
sub
call
jno
faddl
ljmp
clc
mov
nop
cmp
jbe
xchg
or
sti
pop
das
outsb
outsl
add
dec
push
xchg
data16
xchg
arpl
push
jmp
aam
lock
ja
je
bound
lcall
adc
int3
jle
cmp
lret
outsb
imul
add
sub
mov
push
lock
pop
rolb
sti
adc
adc
mov
mov
lret
js
add
and
lods
js
jne
xor
cmp
or
dec
cmp
inc
sub
lock
ja
jns
fisubrs
mov
mov
negb
cs
cmp
insl
jmp
das
inc
jno
pop
pop
int
dec
push
xor
lods
pusha
sahf
mov
sbb
roll
mov
sahf
mov
mov
mov
pop
in
adc
iret
jno
aad
stc
cmp
xor
cmp
call
aas
lahf
mov
xchg
jg
stc
cld
dec
push
dec
xor
jne
call
loopne
sub
cltd
fdivr
or
in
adc
insl
jbe
push
pop
cli
sub
gs
dec
lcall
nop
or
icebp
or
cmp
mov
pop
sub
ljmp
movsb
mov
data16
xchg
jmp
aas
xor
seta
mov
movsl
addr16
push
test
popf
xchg
pop
fiadds
pop
sbb
adc
call
sub
lods
sub
into
cmp
lret
xor
dec
inc
mov
fstl
lods
repnz
js
mov
fucom
pushf
push
fwait
inc
je
or
js
ret
dec
leave
imul
jo
xchg
mov
jb
xchg
es
push
inc
jle
test
fdivrp
data16
adc
nop
fldl
andb
push
mov
dec
lcall
imul
jg
aad
lods
mov
or
add
sti
lret
push
pushw
pop
sti
dec
sarl
mov
in
test
pop
popf
or
movsl
jae
in
rol
arpl
idivl
push
popf
test
dec
push
dec
jge
push
cmp
jno
push
fcomps
mov
jb
xorb
insb
push
xchg
push
xchg
lock
xor
mov
fnclex
sahf
mov
add
mov
adc
pop
cltd
add
cltd
ljmp
xlat
jno
sub
loop
dec
subb
iret
negb
insb
adc
pop
fmuls
loopne
pusha
arpl
xor
adc
ja
out
nop
xlat
add
fxch
jae
pop
ret
inc
push
int3
jecxz
xor
pop
sub
dec
xor
popf
adc
je
push
xor
xor
mov
inc
mov
lret
inc
stos
mov
aam
lret
outsb
andb
mov
or
mov
lods
adc
test
orb
jl
pop
xor
out
cmc
popa
imul
mov
hlt
xchg
xchg
pusha
das
cmp
mov
adc
fmuls
mov
pop
lea
push
push
add
cmp
mov
add
mov
sbb
pop
jle
mov
jb
and
loope
add
add
sbb
and
fbstp
mov
xor
inc
or
mov
mov
popf
xor
and
pushf
ja
sbb
pop
xchg
mov
sbb
pop
in
cli
es
sub
fcoms
or
stos
call
flds
pop
pop
add
cmp
test
mov
xor
push
nop
int3
cmp
aad
mov
adc
mov
mov
aaa
fistpl
or
mov
mov
mov
jg
out
inc
add
push
fstpt
gs
push
lcall
and
pop
dec
les
fs
jne
cmp
shlb
les
sub
fs
sti
data16
inc
xchg
ljmp
pop
and
das
fs
mov
leave
push
adc
pop
push
aam
insb
repz
or
add
sarl
sub
out
sub
push
fs
xorl
in
mov
call
into
bound
aas
pop
popa
shr
aam
shrl
mov
ljmp
test
or
xchg
pop
inc
jo
sbb
push
in
dec
js
shll
out
movsb
pop
call
imul
aad
divl
push
push
or
add
xor
push
pop
mov
and
adc
sub
xor
ljmp
mov
fisttps
fiaddl
movsb
dec
jne
mov
mov
insl
jb
and
cltd
mov
cmpsb
xlat
dec
stos
or
jae
sub
mov
cmp
sahf
ljmp
mov
mov
pushf
or
jo
dec
out
and
nop
dec
inc
cltd
clc
insb
add
inc
or
push
inc
mov
dec
hlt
add
sbb
xchg
out
int
adc
in
adc
jecxz
adc
mov
ret
dec
xor
cwtl
mov
jge
inc
dec
adc
fdivp
bound
lahf
mov
xor
pop
ds
adc
fdivrs
fsubs
sub
adc
or
xor
pop
fnsetpm(287
fiaddl
mov
cmp
xchg
in
inc
xor
xor
sub
das
test
mov
inc
scas
test
prefetchw
or
rolb
and
mov
push
movsl
xchg
xchg
sahf
cltd
cmpsl
mov
or
test
xor
mov
cs
dec
mov
sarb
iret
pushf
fsubs
mov
push
xor
lahf
repz
cmp
cltd
sbb
push
clc
mov
and
movsb
xor
mov
xorb
sub
das
std
fldenv
sub
mov
pop
dec
test
stos
adc
lds
mov
aam
push
pop
loop
flds
mov
pushf
rcrb
in
fcmovb
movsb
pop
enter
mov
cs
andb
mov
int3
nop
test
add
adc
pushf
dec
sbb
cmp
xor
cltd
adc
jae
jl
out
imull
and
imul
pop
push
adc
imul
jmp
dec
mov
and
push
cwtl
xor
ss
aam
inc
scas
outsl
dec
sub
sbb
jle
data16
xor
je
shr
ret
lret
pusha
test
push
and
add
dec
jne
push
push
fldcw
pop
and
jnp
and
shll
fstpt
adc
and
testb
push
jmp
in
mov
sbb
mov
imul
xchg
jmp
adc
push
or
cmpsl
lods
mov
lds
leave
call
push
mov
pop
inc
pop
mov
jp
aam
out
pop
fcmove
mov
fbstp
lods
out
lret
jo
ds
shll
push
ficoms
sbb
ss
cmp
jns
imul
xchg
notl
or
std
jmp
sti
xchg
jns
add
scas
sbb
mov
jle
ja
lods
cs
or
push
adc
xor
rcr
add
pop
scas
repnz
popaw
xchg
shr
mov
aaa
sub
insb
lds
inc
or
in
cmpsl
pop
push
sub
mov
sub
out
outsb
add
xor
shrb
jecxz,pn
push
mov
sbb
sub
pop
outsl
cmc
xchg
repz
pop
fdivrl
push
add
fidivrl
lcall
jmp
cmp
cmpsb
insl
aad
mull
xchg
or
ret
je
je
scas
test
xor
shl
fdivr
mov
pop
in
cli
out
out
xor
inc
mov
jmp
adc
test
in
mov
add
insb
aaa
aaa
jp
fcoms
pop
gs
push
sbbl
pop
popa
add
mov
stos
in
roll
movsb
aaa
repnz
mov
xchg
jo
sahf
lahf
ss
das
dec
xchg
pop
sbb
dec
lret
push
lea
ror
clc
test
and
ds
and
pop
lret
push
ljmp
jo
out
cltd
cltd
inc
into
popa
cmpsl
cmpb
sti
push
xchg
push
inc
jmp
aad
jl
stos
jae
xor
pusha
pop
sub
adc
jmp
mov
xchg
cwtl
jecxz
xchg
push
jl
int3
repz
lods
jo
dec
fwait
xchg
bound
pop
stos
shr
insl
inc
sub
push
aas
fstpl
call
xor
dec
jo
call
lret
adc
call
ficoml
stc
shlb
lret
pop
sbb
cmp
mov
mov
inc
cmp
std
or
add
sub
dec
shrd
subb
shll
enter
sbb
jnp
out
push
cwtl
icebp
mov
shll
pusha
inc
mov
pop
jo
sbb
mov
das
jo
cs
inc
pop
xchg
outsl
popf
sbb
and
or
js
mov
hlt
mov
mov
push
sbb
addr16
and
stos
sub
inc
jge
pop
pop
test
adc
cli
push
jae
imul
insl
insb
pop
xchg
xchg
fucomip
call
fldcw
icebp
mov
lret
inc
out
lret
mov
inc
sti
adc
push
xchg
dec
stos
mov
scas
fmuls
dec
lds
add
jmp
xchg
loope
stc
jp
aaa
not
stos
cwtl
outsl
js
fldt
mov
and
jne
pusha
pop
outsb
sub
lret
mov
fidivrl
adc
mov
or
test
testb
sbb
xorb
or
jnp
in
fiadds
dec
out
jno
jns
sub
jb
popf
xchg
aam
jp
add
sbbl
xchg
cmc
xor
jns
adc
jp
test
test
gs
in
push
ss
inc
cmpb
ljmp
cmp
xchg
sub
cmpsb
jo
xchg
jp
sub
sbb
or
pusha
mov
push
sub
in
xchg
pop
in
test
jp
dec
jo
dec
add
jecxz
data16
cld
mov
lods
inc
call
adc
or
pop
or
push
lcall
xchg
test
push
rorb
call
repz
lret
push
xor
sahf
mov
sbb
sub
js
cltd
stos
push
dec
call
sub
int
xchg
sub
shlb
es
pushf
rorl
cmc
loop
jb
adc
pop
jmp
lods
bound
ljmp
cmp
sub
insb
mov
jl
jnp
idivl
lcall
lret
cs
jno
cmp
dec
sub
sbb
sarb
adc
mov
mov
jge
int
mov
inc
out
pop
gs
ret
mov
add
jno
shrd
jecxz
and
add
sbb
jle
xchg
xchg
sbb
mov
adc
hlt
bound
daa
mov
outsb
push
sub
out
lret
push
rolb
sub
inc
mov
adc
loope
sub
add
loop
xchg
jb
push
subb
sbb
arpl
lea
mov
xor
mov
cmc
xor
loopne
das
mov
aad
das
mov
cli
mov
sahf
insl
and
and
fs
roll
xchg
out
sbb
adc
sub
rorl
rorb
iret
push
int
lret
sub
and
int3
ds
pop
mov
arpl
xchg
loop
aad
sub
mov
mov
xor
je
loop
sbb
jle
or
xor
ret
rcr
into
xor
sub
add
into
ret
rorl
cld
fimull
add
push
dec
add
jno
sub
sbb
jle
loopne
jo
cmp
ds
dec
cmp
inc
jge
fs
out
push
add
stc
xor
push
shrl
inc
jb
sub
cmp
lret
scas
imul
adc
imul
neg
addr16
xlat
mov
mov
lods
and
cmp
sti
dec
sti
dec
loop
and
dec
out
imul
pop
push
dec
fs
out
jle
cmp
subl
jmp
jp
jnp
jge
scas
into
push
adc
pop
aad
insb
out
daa
cwtl
rolb
jmp
mov
xor
push
add
insl
call
aad
pop
je
sub
aaa
adc
jecxz
adc
push
xor
loopne
mov
jp
adc
sbb
add
xchg
lods
icebp
mov
insl
and
repnz
cmp
insl
xor
push
xchg
std
repz
inc
stc
mov
aaa
cmpsl
cmp
dec
mov
outsb
xchg
pop
adc
push
dec
adc
xor
dec
mov
or
fiaddl
pop
mov
mov
inc
push
mov
push
std
and
idiv
sti
pop
cmp
adc
xchg
jecxz
xchg
mov
jnp
pop
insl
sbbb
adc
das
sbb
xor
pop
sub
add
mov
insb
mov
lods
les
jo
jp
fimull
pop
test
ljmp
mov
imul
push
cmp
outsb
mov
xor
sub
add
rolb
ljmp
dec
test
enter
jo
add
stc
clc
test
dec
add
sbb
repnz
mov
out
test
xchg
cltd
fdivs
mov
mov
imul
aas
jp
in
fcomip
and
xor
cmp
add
dec
mov
or
dec
loopne
push
sarb
movsb
dec
out
push
fwait
outsb
shll
leave
loopne
xchg
lock
cld
or
stos
pop
mov
jl
fcmovnbe
pusha
test
xor
sub
negl
sti
imulb
rolb
dec
cmp
inc
sub
inc
mov
in
xor
inc
in
imulb
pop
jl
daa
in
jge
xor
jnp
mov
sbb
jmp
push
aam
xchg
dec
lahf
mov
fmulp
dec
push
in
aam
nop
jecxz
lcall
or
mov
push
mov
xor
pop
mov
xchg
fwait
inc
sub
call
mov
mov
pop
test
sbb
pop
out
fisubl
cmc
pop
inc
aas
movsb
sbb
imul
aaa
popa
or
stos
pop
fisubrl
push
and
mov
dec
pop
add
adc
pop
int3
mov
mov
add
mov
cmp
rolb
idivl
out
gs
sbb
test
and
out
xchg
cmp
push
inc
mov
push
jle
daa
call
mov
mov
icebp
cwtl
jl
icebp
jmp
rcrl
and
dec
sbbb
add
dec
cld
fistpl
popa
rcrl
mov
fistpll
push
and
inc
inc
push
sub
mov
pop
push
push
addl
cmp
repz
repnz
jmp
ds
pop
add
test
mov
push
movsl
aam
ss
sahf
aaa
stc
repz
jo
into
cmp
sub
jmp
and
xchg
xchg
and
adc
test
out
hlt
pushf
mov
cmp
push
push
sub
int3
fidivl
jmp
mov
movsb
xlat
fs
cmp
mov
mov
jp
jae
xchg
xchg
std
dec
subb
aas
or
ret
and
repnz
int3
pop
xor
into
mov
mov
rolb
pop
ror
mov
jno
jne
cwtl
dec
inc
xchg
xchg
push
and
xor
imul
cwtl
add
push
loopne
cltd
adc
add
jno
xlat
fnstenv
iret
push
rol
addr16
xchg
and
mov
sbb
lret
daa
outsl
jnp
cs
pop
punpcklwd
xchg
imul
notl
xchg
and
je
or
cmp
mov
mov
pop
insb
stc
popf
pop
dec
sar
negl
sub
jmp
movsb
lea
scas
adc
lret
das
data16
pushl
xor
mov
mov
les
je
jp
js
outsl
or
pop
or
jns
adc
and
dec
push
inc
lret
les
add
push
pop
mov
stc
sbbb
into
mov
xchg
jp
or
cld
push
xor
sbb
mov
sub
std
sahf
jle
les
imul
or
xchg
and
repnz
inc
in
pandn
lret
in
adc
xchg
mov
mov
mov
ror
sbb
lods
mov
stos
fstpl
fld
out
add
pushf
cwtl
icebp
mov
data16
push
fisttpll
xor
in
inc
pushf
adc
dec
cld
add
andb
cmp
aad
out
add
cltd
inc
xor
das
push
das
fnclex
mov
push
lret
inc
inc
adc
shrl
dec
dec
lock
mov
mov
cmp
and
add
xchg
pushf
loop
rclb
mov
out
ss
push
pop
and
es
add
enter
adc
loop
xor
inc
inc
mov
inc
pop
or
fdivrs
xor
xchg
and
scas
push
inc
sub
je
imul
cmc
mov
dec
in
in
cmpsb
hlt
xchg
and
out
das
in
mov
stos
push
enter
and
in
adc
imul
movsb
add
mov
cmpsl
cmc
cmp
aaa
test
sbb
xor
mov
xor
xchg
repnz
mov
dec
adc
pushf
daa
jo
test
mov
std
fisubrs
push
int3
aam
out
jmp
mov
inc
cmc
sbb
test
mov
addr16
xchg
shrl
pusha
pop
mov
xchg
jb
jo
mov
inc
inc
sub
fsubrl
stc
test
and
mov
imul
inc
divb
lret
ja
ret
outsl
fisubl
pop
push
cmp
or
mov
shll
loopne
jecxz
aas
sbb
cmp
sbbb
sub
arpl
cltd
add
mov
into
add
lods
cmp
repnz
push
loopne
jp
jl
fnstsw
sub
xor
testl
sub
mov
and
daa
movsb
jmp
sbb
mov
xor
fnstsw
int3
mov
sbb
daa
push
adc
push
cs
and
or
dec
and
pop
xor
fcmovnbe
stos
pop
pop
sub
lea
jcxz
cmp
leave
out
faddl
cmpsb
std
insb
cmpsb
mov
lea
std
int
or
lods
xchg
jg
arpl
leave
dec
ja
xchg
mov
mov
mov
sarb
outsl
js
mov
add
sbb
imul
test
xchg
mov
jb
std
mov
dec
imul
popf
std
imul
pop
nop
mov
dec
stos
mov
add
adc
mov
push
movsb
adc
int
shlb
enter
or
lods
adc
xor
mov
rclb
and
mov
sbb
stc
xchg
xchg
testb
xchg
aam
fildl
sub
inc
jne
jb
sub
les
cltd
pop
in
sub
or
pop
pushf
sub
ret
and
jno
cmpsl
arpl
dec
add
push
roll
in
std
bound
push
fcom
lods
rclb
or
xor
sbb
lahf
sbb
mov
xor
and
or
push
pop
mov
or
imulb
jl
pop
or
xchg
dec
and
fldcw
pop
sbb
arpl
pop
mov
fsubrs
sbb
or
daa
cmp
xchg
pop
xchg
imulb
cmp
ret
into
dec
shrl
mov
add
movsl
xchg
sbb
mov
sahf
scas
adc
jbe
movsl
push
test
cmpsl
lds
xor
gs
gs
sarl
rcr
xor
jmp
and
mov
add
sbbl
inc
repnz
xchg
adc
sbb
cmp
mov
sbb
inc
xchg
bt
inc
outsb
jle
fcmovnb
jmp
or
or
xchg
loopne
lret
xchg
sub
push
and
imul
ja
mov
mov
scas
sar
xchg
test
jl
out
ficompl
push
fisubl
stos
pop
lock
add
inc
clc
pop
jl
dec
ret
mov
movsl
add
fdivrl
nop
gs
xor
mov
js
mov
inc
int
ficompl
add
into
sbb
mov
ds
jbe
push
cmp
shl
add
xchg
pushl
call
or
test
cmpsb
testl
imul
or
sub
dec
mov
adc
cmp
xor
popa
inc
scas
jo
mov
fisubs
push
divb
iret
test
mov
jnp
out
sbb
dec
bound
cmp
add
ret
les
subb
les
xchg
mov
or
imul
adc
pop
inc
shlb
lret
int
pop
push
cltd
clc
inc
adc
mov
jmp
rorl
std
ja
addr16
mov
in
in
not
jmp
and
into
rol
inc
je
ljmp
dec
push
leave
pop
jl
xchg
inc
arpl
fstpt
add
into
add
insl
mov
dec
pop
or
arpl
mov
xor
push
div
pop
push
pop
jg
dec
xor
push
mov
push
test
sub
outsb
push
std
jge
popf
mov
inc
movsl
push
mov
fstpl
lea
sti
jmp
or
xchg
out
mov
cmc
pusha
ret
lahf
cltd
outsb
xchg
mov
cmp
lahf
xchg
and
cmp
orb
and
pop
xchg
or
cmp
ja
mov
sub
dec
xor
ja
push
add
mov
repnz
and
pop
mov
sbb
adc
pusha
adc
push
jecxz
pop
mov
adc
mov
mov
jg
leave
int
shlb
ficomps
or
in
mov
sub
inc
popa
adc
cmp
sub
test
repnz
fstpt
mov
xchg
lcall
cmp
lock
rcrl
pop
int
or
ficompl
loope
das
repnz
ret
push
jge
cmp
lahf
repz
movsb
movsl
or
mov
or
cmp
push
xor
push
sbb
or
test
or
jnp
cmp
je
jmp
mov
jno
and
xor
cmp
shr
push
adc
inc
test
pop
sub
pop
fmull
or
cmc
cli
rorl
xchg
data16
pushf
jnp
push
jno
jo
xchg
mov
pop
sahf
mov
insl
aam
push
test
lret
in
scas
push
xchg
aas
mov
inc
sbb
or
sti
mov
or
sub
fisubs
pushf
mov
or
mov
xchg
adc
fisubs
mov
xchg
subb
add
in
push
xor
sub
pusha
insl
cmpsb
or
aas
pop
pushf
adc
ret
out
inc
push
sti
push
leave
stc
cmpsb
cltd
pop
scas
jmp
enter
pop
iret
push
repnz
push
ja
lods
add
add
lahf
hlt
adc
rcl
xor
sub
mov
xchg
in
shll
in
mov
adc
xlat
xorl
or
pop
subl
stos
dec
dec
mov
test
cmpsb
mov
push
lock
jno
imul
out
cs
cli
sub
push
add
outsb
fwait
cmp
add
pusha
pop
xor
sub
adc
push
pop
sub
shrl
mov
pop
pop
out
out
jbe
fs
sti
inc
adc
xchg
lahf
and
arpl
xrelease
lahf
adc
mov
mov
popa
mov
data16
imul
xchg
mov
jl
loop
mov
sub
cld
push
or
lods
xchg
dec
push
add
bound
ret
fadds
jl
sub
push
fldcw
leave
jecxz
loope
and
fidivs
cmp
mov
sub
roll
sub
mov
xchg
pop
sub
or
mov
mov
xchg
jecxz
mov
and
jnp
in
repz
sbb
jmp
push
sub
les
sub
in
fwait
and
cld
pusha
inc
lahf
and
sbb
cmp
out
clc
and
das
aam
mull
lret
push
mov
inc
data16
pop
aaa
pusha
mov
daa
push
sub
lret
adc
cli
jle
cmpsb
add
loop
mov
je
jmp
inc
int
xchg
ret
push
fcompl
jns
or
sti
mov
sub
cmpsb
xchg
int3
ds
sub
xchg
pop
sub
dec
out
push
enter
std
rcrl
push
bound
pop
hlt
sub
das
cwtl
xchg
mov
cmp
cs
in
jns
rorl
mov
xor
or
sub
es
mov
sbb
sahf
inc
add
xchg
mov
jns
xchg
insb
push
sarl
inc
dec
nop
mov
jnp
push
and
push
and
aam
jp
inc
push
cs
add
lahf
lods
fnstcw
inc
jg
push
in
mov
pop
push
jae
loopne
mov
pusha
pop
lea
sbb
sub
xchg
ss
sbb
sbb
sahf
fldcw
in
jmp
into
jp
push
popf
mov
xlat
mov
or
adc
pop
and
and
movsb
sbb
dec
cmpsl
out
insl
sbb
in
lcall
push
xchg
out
pop
lds
pushf
xor
sub
inc
cmc
add
push
outsl
cld
push
cmp
pop
pop
cmp
or
movsb
adc
mov
inc
mov
je
aas
inc
jmp
ss
fldcw
xchg
movl
inc
out
lods
xor
aad
xchg
fwait
jge
andl
inc
in
push
ja
fsubr
mov
stc
push
scas
scas
aam
sub
enter
mov
inc
pop
push
aam
andl
add
fwait
ret
leave
or
jmp
xchg
enter
jbe
std
fsubs
or
mov
mov
adc
shll
cmp
loope
lcall
aaa
call
arpl
jns
ficompl
sbb
ja
negb
xchg
pop
insl
cmp
or
lahf
mov
push
push
fisttps
rcll
dec
xchg
js
xor
imul
mov
adc
push
mov
in
mov
jmp
fmull
jl
jb
cs
stos
mov
push
or
stc
push
jl
push
sub
xchg
decl
adc
or
cmp
push
add
xchg
xchg
inc
lret
inc
test
mov
mov
cmpb
xchg
cmpsb
lcall
xor
pop
adc
loope
push
push
jno
cmp
insb
mov
sub
sbb
inc
insb
or
out
call
ret
jmp
roll
pop
xlat
test
sbb
faddl
shlb
rclb
orl
and
sub
fistl
dec
jns
inc
xchg
jne
lret
das
out
cmp
mov
cmpl
dec
xor
sbb
icebp
pusha
pop
mov
sbb
and
adc
inc
sub
int3
repz
mov
mov
loop
jo
xchg
stos
stc
in
scas
cmpsl
lret
pushf
sub
xor
in
inc
adc
popf
pop
adc
test
mov
xchg
mov
mov
ret
add
ret
jb
out
xchg
outsl
sahf
fisttpll
cmp
aaa
or
pushf
inc
fwait
ja
in
lds
push
ja
xor
pop
jb
cmp
imul
mov
gs
push
mov
cmpsb
push
fldenv
enter
sbb
clc
mov
jg
repz
fnstenv
xchg
sbb
pushf
mov
jge
jo
leave
add
inc
cmovnp
scas
dec
xor
rcr
dec
push
in
mov
inc
xchg
mov
repnz
cmpsb
nop
mov
and
fistpl
cmpsl
push
mov
inc
fisttpl
lds
and
cmp
xor
je
inc
sti
inc
xor
jo
cmp
aaa
clc
std
test
pop
mov
or
pop
mov
ds
loopne
mov
cmp
mov
insb
test
clc
mov
sub
adc
or
push
repnz
cmp
mov
mov
divb
outsl
sub
fisttpl
and
xchg
out
add
xchg
pop
push
lret
dec
in
in
jle
jns
out
xor
pop
xchg
jle
mov
dec
out
push
in
movsl
mov
fldt
push
sub
test
in
dec
pop
imul
lods
mov
lds
stos
dec
pushf
pushf
pop
or
pop
nop
fucomi
mov
fwait
sti
adc
jp
lock
cmp
aad
fcmovb
mov
cmp
jp
mov
sub
or
mov
mov
fs
jno
cmp
mov
rcrl
xchg
mov
movsb
adc
xchg
cmp
fcomps
cwtl
lods
xor
or
and
mov
fisubrs
ret
xor
aad
xlat
xor
jbe
lods
pop
sub
dec
mov
pop
cld
jmp
jmp
jns
pop
jne
mov
fmull
cwtl
inc
add
and
and
mov
xor
pop
fcomp
xchg
and
pop
das
loope
push
mov
leave
loope
test
jge
sub
push
xlat
adc
lock
adc
push
xorb
and
xchg
movsl
xchg
sub
loope
lods
clc
mov
shlb
xor
pop
adc
adc
sub
add
lods
jnp
in
mov
add
sahf
adc
mov
push
xchg
daa
pop
mov
and
hlt
xor
in
dec
fnstsw
rolb
xor
or
pusha
pushf
cltd
sbbb
dec
push
enter
sbb
ss
jmp
pop
sbb
jo
data16
push
cs
adc
imul
add
sub
xchg
fisttpll
inc
shll
mov
push
push
scas
cli
sarb
push
shlb
in
nop
or
inc
pushf
sbb
nop
int3
add
scas
bound
and
out
or
cmp
jl
loope
sub
add
shl
inc
imul
or
scas
loop
and
clc
cmc
dec
sbb
pop
push
ror
sub
in
sbb
push
lods
rclb
xchg
lods
pop
push
fiaddl
sbb
add
inc
cmpsw
add
movsb
adc
mov
adc
mov
imul
jp
pop
jecxz
push
test
popf
xlat
ja
pushf
outsl
pop
lea
inc
jge
add
fwait
adc
fcmovnu
xorb
jp
dec
push
std
sub
xor
mov
dec
rorl
outsl
jno
dec
adc
pop
lods
xchg
cmp
clc
jnp
mov
dec
sbb
je
fcomi
xlat
lahf
lahf
cli
daa
in
ret
mov
roll
lods
mov
push
jns
outsl
xchg
cmp
mov
repnz
call
fwait
jp
lea
xchg
loope
xchg
rcl
sbbl
add
das
decb
out
ss
mov
xlat
inc
ja
ljmp
mov
xchg
and
xor
bt
cs
out
loope
cmp
push
int3
outsl
push
push
add
jle
dec
adc
fcmove
test
jmp
or
mov
shr
aad
xchg
push
icebp
jg
and
pop
mov
sbbl
aam
jo
xchg
xlat
adc
frstor
cld
mov
hlt
out
movsl
push
or
or
cmp
hlt
daa
ds
subl
inc
mov
imul
fcmove
testl
mov
push
sub
mov
out
es
movsb
mov
cli
adc
sbb
pop
and
roll
mov
movsb
xchg
jbe
push
addr16
in
mov
push
sahf
mov
jo
popa
cmpsb
mov
out
mov
dec
jecxz
out
fdivs
testb
icebp
xchg
addr16
inc
lret
and
mov
sbb
inc
aas
adc
adc
add
push
js
stc
xlat
mov
loop
test
mov
jmp
orl
sbb
mov
lcall
stos
mulb
and
cmp
mov
or
pop
cs
adc
push
fists
add
jo
ljmp
mov
mov
clc
bound
push
pop
lock
push
inc
repz
movsl
pop
das
mov
repnz
and
jmp
dec
in
in
mov
mov
nop
lea
inc
dec
xor
repnz
xchg
adc
mov
gs
xor
jnp
mov
std
push
inc
lock
aad
movsl
sbb
in
les
aam
sub
sub
bound
rcrb
ja
sti
adc
mov
mov
dec
dec
push
shll
rcrl
mov
stos
bound
aad
jle
mov
inc
test
mov
mov
pop
sbb
cmp
aam
ss
fadds
mov
dec
out
int
xchg
push
ds
dec
test
sbb
cwtl
out
add
dec
jo
inc
js
js
leave
dec
jl
insb
mov
sub
and
sub
and
sub
scas
inc
mov
push
dec
jno
adc
dec
sub
dec
outsl
scas
lods
aad
and
or
jo
inc
ret
adc
pop
push
shl
add
push
dec
insl
into
rolb
push
xchg
fstl
push
fsubs
mov
cld
fisubl
inc
mov
insl
push
cmp
push
push
mov
icebp
adc
cmpsl
pop
data16
adc
out
mov
fs
jle
fisubrl
lods
ret
jmp
cmp
outsb
fs
add
push
ret
xor
cmp
mov
repnz
push
mov
mov
inc
fcmovnb
sub
aam
sahf
les
xchg
lcall
mov
ret
dec
cs
xor
lods
dec
aas
cli
popl
pop
adc
xor
sub
call
lahf
scas
movsb
fwait
mov
pop
mov
dec
jns
mov
add
loop
loope
out
sub
cli
sbbl
fiaddl
mov
mov
inc
xchg
sbb
xor
lods
in
sbb
js
movsl
lods
cmp
cwtl
and
add
push
rol
iret
insl
loopne
fldpi
dec
jo
add
push
enter
pop
xor
xlat
movsl
push
js
pop
sub
lods
das
jno
jne
mov
loop
mov
mov
sbb
xor
bound
pushf
pop
sbb
inc
bound
sub
mull
dec
pop
xchg
xor
ljmp
das
mov
sqrtps
int
dec
mov
jb
cmc
jle
push
cli
cld
shlb
in
mov
mov
sub
leave
inc
pop
cmp
fildll
xchg
aad
dec
dec
mov
iret
and
insb
int3
push
in
mov
inc
not
aam
add
test
lahf
stos
out
aad
jge
adc
push
ljmp
xorb
cmp
xor
cli
xor
pop
mov
xchg
add
or
popf
jp
fiadds
jmp
and
xor
add
inc
mov
sub
dec
sahf
shll
ret
into
jle
or
cs
mov
mov
push
test
scas
popl
mov
int
mov
jo
push
adcb
lahf
ljmp
mov
ficoml
filds
aaa
or
xchg
cmpsb
jle
mov
shll
jne
aam
inc
enter
stc
mov
ficomps
or
cwtl
adcl
pop
adc
fiadds
ds
in
xor
sahf
jnp
lods
leave
cmp
lahf
or
adc
clc
out
xchg
pusha
sbb
aam
aas
dec
adc
sub
ljmp
outsb
pop
push
xor
ljmp
jae
inc
jge
sub
out
frstor
cld
mov
sub
pop
mov
pop
test
xor
lret
sbb
mov
in
pusha
or
push
or
cmpsb
mov
loopne
outsb
push
out
arpl
push
jg
fwait
mov
xor
mov
sub
in
das
sbb
mov
mov
xchg
sbb
jl
jo
test
lahf
mov
sbb
sbb
fwait
cs
sbb
and
mov
lcall
mov
loope
push
js
jae
je
xchg
push
jo
ss
push
and
out
adc
call
mov
dec
jp
xchg
xchg
mov
cmp
aaa
je
mov
test
and
fcoms
imul
lods
cmp
push
das
mov
les
or
xor
lcall
sbb
ja
fistpll
pushf
sub
or
nop
jae
mulb
imul
std
repz
test
ss
aad
inc
add
out
ret
lock
jnp
imulb
pop
fstpt
sbb
inc
inc
addr16
or
repnz
scas
xlat
add
call
fcoms
dec
push
int3
dec
push
adc
push
pop
cmp
sbb
cmpsb
shlb
out
lea
sub
pop
xor
pop
pusha
mov
mov
xlat
mov
adc
push
sbb
std
mulb
inc
sbb
xcrypt-cbc
cmpsl
rcr
in
push
pushf
and
cmp
lret
mov
lahf
mov
cmp
xchg
lret
fwait
mov
mov
sub
ret
push
arpl
mov
js
mov
loop
dec
nop
push
ret
sahf
mov
add
fmull
xchg
mov
and
aad
dec
cmpsb
sarb
sbb
add
sub
mov
inc
cltd
mov
push
pop
inc
push
push
stos
aas
adc
sub
idiv
out
mov
mov
paddd
ja
push
arpl
mov
xchg
loope
sbb
cmp
fistl
mov
test
mov
push
fldt
sub
fildl
push
mov
outsb
push
push
ret
scas
cmp
addr16
scas
xchg
into
in
xchg
mov
mov
daa
sbb
pushf
xchg
pop
cltd
lcall
xor
jp
and
ret
mov
adc
clc
pusha
ja
xchg
pop
sub
bound
popf
push
mov
cmp
mov
int
mov
out
jp
pusha
sbb
je
inc
ret
mov
ficoms
negb
push
in
mull
int3
fsubl
dec
in
loopne
adc
dec
mov
dec
and
pop
jecxz
ja
dec
mov
fadds
or
cwtl
xchg
lcall
pop
and
pop
dec
sahf
rcll
mov
and
push
cmp
pop
sti
pusha
mov
outsl
fsubrl
mov
xchg
rorb
push
les
push
lock
xchg
inc
in
or
dec
ret
push
inc
loopne
push
mov
or
sti
sbb
push
or
lret
test
dec
mov
sbb
jl
inc
les
pop
out
mov
pop
stc
mov
push
lret
test
xor
fucomip
cli
mov
cmp
test
dec
lods
dec
sbb
sbb
pushf
mov
stos
inc
std
xchg
dec
mov
lret
mov
test
push
push
inc
imul
test
jmp
and
cmova
sbb
hlt
stos
sti
das
mov
mov
aad
std
les
leave
pop
lods
mov
mov
inc
cmp
pop
aas
mov
mov
je
ret
sbb
arpl
inc
sub
lret
enter
cmp
xlat
dec
cmp
popf
and
xchg
cwtl
cmpsb
movsl
leave
js
or
repnz
mov
test
xor
int
adc
mov
xor
cmpsb
divl
dec
lcall
jnp
cmp
sbb
pop
mov
in
rclb
cmp
or
xchg
lds
lcall
movsl
mov
mov
and
xchg
fwait
push
jns
xchg
inc
lods
sbb
mov
adc
lahf
jle
push
jne
pop
sbb
pop
xor
dec
scas
pop
mov
lahf
pop
nop
cvttps2pi
lock
mov
dec
xchg
jne,pt
push
aam
and
out
inc
push
in
out
scas
and
sub
xor
and
mov
or
inc
int3
xchg
or
sbb
gs
aaa
mov
js
push
das
stc
cld
dec
gs
pop
add
adc
mov
pop
stc
pop
pop
outsl
inc
fwait
into
ljmp
adc
hlt
or
popf
cmp
mov
sarl
add
and
jecxz
xchg
jl
cmpsl
out
scas
dec
add
lds
insl
pop
arpl
aad
mov
push
ljmp
test
and
cmp
aas
push
add
lret
outsb
clc
aad
sub
push
push
stc
mov
mov
iret
add
movsl
fcompl
cs
add
inc
mov
xor
repnz
loop
sub
popa
jecxz
mov
pop
divb
in
in
mov
push
ret
shrl
sbb
fstps
fnstsw
pop
pop
jle
and
xchg
mov
mov
push
sub
adc
pop
push
ss
sbb
cmp
jne
dec
es
mov
bound
or
mov
and
stos
xor
jl
popf
imul
cwtl
cmp
inc
cmpsb
pop
les
push
adc
cmp
mov
lea
push
shrb
mov
jl
ret
inc
sub
ljmp
jle
sbb
mov
adc
push
ss
sti
test
insl
inc
or
sub
xchg
mov
icebp
popa
sub
inc
jp
fildl
loope
loopne
xor
inc
std
jne
lret
mov
mov
loope
insl
out
inc
ret
lds
cmpsb
jne
cmp
xor
out
aad
sbb
mov
stos
adc
aaa
pushf
lret
out
out
aam
cmpsb
orl
inc
cs
jmp
push
cmp
shlb
mov
add
repz
loop
pop
fs
mov
xor
ss
jl
push
cmp
movsb
pop
push
loopne
outsl
xchg
add
pusha
pusha
loop
test
cmpsb
add
fisttpl
lret
rclb
adc
dec
cmp
cmc
mov
fstpt
lcall
and
ret
cmp
mov
sahf
mov
sbb
aas
jmp
sub
add
xchg
outsb
mov
aam
jg
inc
or
xchg
ret
loopne
test
cld
and
pop
out
jbe
jecxz
cmc
lahf
dec
jo
fs
push
loopne
push
pop
loop
fidivrl
xchg
mov
enter
add
ja
cld
inc
imull
call
out
cli
es
mov
inc
mov
fisubrs
adc
scas
lock
sub
stos
imul
adc
inc
test
pop
xor
es
ljmp
ret
cmp
clc
dec
dec
insb
xor
pop
adc
rcrl
push
xchg
cmpsl
testb
stc
add
sub
out
push
jnp
and
bound
mov
cmc
repz
cltd
jmp
test
ret
and
dec
and
jb
push
push
or
sbb
pop
out
js
ret
call
dec
stc
cmc
ficomps
pop
mov
ret
inc
mov
inc
dec
jae
push
daa
sbb
out
sbbb
in
or
push
stc
mov
jno
add
pop
cltd
jo
mov
jae
pop
push
and
jge
aad
and
pop
cmp
push
cmp
pop
adc
jp
cmp
icebp
sbbl
jge
xchg
jae
push
xor
nop
test
insb
sub
push
rcl
ret
xor
xchg
adc
mov
push
pop
sub
cwtl
out
js
in
js
aaa
outsb
inc
imul
push
into
int
xor
pop
pop
or
pop
add
xchg
shlb
push
leave
ljmp
in
inc
lret
xchg
adc
shlb
aaa
sub
pop
xor
insb
inc
popa
fldl
dec
into
arpl
pop
fists
aas
xchg
in
mov
xor
lea
imul
xor
je
xchg
nop
lahf
adc
or
psubsw
shlb
mov
lret
mov
cmp
popa
lds
adc
adc
mov
fsubrl
sub
pop
dec
cmp
test
inc
shr
dec
in
jbe
adcb
clc
js
nop
dec
fildll
lcall
fistl
fnstcw
adc
leave
xor
cmp
shrb
jmp
fwait
dec
mov
shlb
or
or
sub
ja
test
aad
sarl
hlt
sub
js
leavew
push
cmp
enter
out
add
jne
aam
xorb
or
cli
cmpsl
mov
aas
les
inc
cmp
cmp
lods
shrb
daa
fidivrs
lods
jo
add
ja
dec
add
lea
push
push
enter
decl
dec
jl
out
test
scas
arpl
shrl
aam
mov
lods
push
repz
jmp
cmpsl
cmp
stc
push
mov
out
adc
lock
or
out
mov
pop
inc
mov
lods
and
div
add
aam
sbb
jge
push
jge
lods
mov
fistpl
data16
mov
repnz
cwtl
mov
adc
sub
fdivrs
pop
push
push
cmpb
xchg
leave
xchg
mov
scas
lret
jbe
out
add
adc
dec
dec
push
jg
jle
jne
jecxz
jne
push
stos
add
ja
cmp
add
mov
xchg
loope
push
pop
pop
roll
push
hlt
subl
mov
mov
mov
pusha
enter
add
fistpll
xchg
pop
and
outsl
out
inc
mov
pop
jp
mov
pop
sbb
and
out
jmp
scas
push
fsubrl
jns
xor
pop
cmc
imul
test
pop
in
xor
adc
loopne
sbb
scas
adc
fimuls
ret
sbb
inc
mov
add
sub
push
adc
cmpsl
cld
and
jl
cmpsb
lahf
fimull
or
clc
mov
fstpt
pop
push
add
cld
fcmovnu
enter
jo
mov
pop
dec
or
or
fmull
outsl
inc
loop
fidivl
lahf
xchg
jle
int3
inc
aam
insb
cmp
adc
rol
mov
mov
sarb
pop
pop
movsb
and
pop
mov
pushf
repz
pushl
ret
pop
mov
fildll
push
sub
adc
mov
out
xlat
jl
jmp
xchg
aaa
mov
shlb
in
lcall
out
add
lods
inc
pop
mov
sub
and
push
jo
loope
mov
int
cmc
in
xor
cmp
sub
jb
mov
dec
jl
dec
sbb
stos
cmpsb
sti
cmpb
cmp
sbb
xchg
or
outsl
xchg
mov
jmp
or
or
sbb
push
enter
add
insl
ljmp
dec
and
les
sbb
xor
les
popl
int
js
pop
sbb
jnp
popf
jne
mov
fadd
jno
and
jnp
mov
cmpsl
addr16
out
pop
sti
mov
lahf
add
cmp
dec
fmulp
sbbl
fld
sub
push
imul
cmp
push
aas
in
or
mov
cltd
sti
int3
mov
rcrl
pop
push
or
lret
push
ret
xor
ret
lahf
out
or
ss
insl
popl
xchg
stos
jo
adc
shll
sbb
test
loopne
jecxz
mov
mov
pop
mov
dec
ret
insb
xchg
dec
adc
stc
jns
lods
shlb
mov
dec
mov
jo
push
ja
pop
outsl
cltd
arpl
push
cmc
dec
rcrb
loope
add
pushf
push
adc
add
jbe
mov
int3
sbb
cmp
pushl
sbbb
hlt
repz
mov
rcrb
add
mov
stos
ja
clc
fistps
fld
and
jle
sbb
or
sub
fwait
dec
and
push
scas
or
orb
ljmp
int3
jns
cmc
outsb
mov
cmpsl
test
loope
add
rorb
sbb
into
stc
mov
lret
orb
popa
sub
stc
jg
stc
jae
push
sub
push
jae
lret
je
push
popa
jae
scas
mov
std
inc
dec
adc
dec
add
sbbl
lret
shlb
push
nop
push
pushf
sub
cmc
xrelease
dec
jl
aaa
and
je
lods
xor
in
adc
push
mov
shl
cmp
test
sbb
outsb
mov
test
fisttpll
cmp
fs
xor
js
mov
movsb
out
cmp
cmp
and
push
add
mov
ret
fst
call
inc
cwtl
std
add
cmpb
add
mov
cmp
ret
lret
sub
jle
sub
fwait
sbb
cmp
jo
ret
or
leave
daa
dec
mov
pop
mov
in
inc
pop
cmp
adcl
mov
inc
pusha
pop
or
jbe
sub
shrb
jno
adc
mov
push
xor
into
dec
xchg
jecxz
sub
gs
mov
jg
mov
or
lea
loope
mov
push
mov
xor
ficomps
jecxz
scas
gs
jg
sti
lret
movsbl
sarl
test
cs
mov
mov
cmp
iret
pushf
pop
js
add
ja
inc
adc
mov
mov
inc
and
fstpl
dec
fistl
notl
test
push
jmp
xchg
xlat
loope
pop
push
int
mov
mov
ja
sub
imul
and
fildll
add
cmpb
dec
dec
jae
into
rcrl
add
sbb
add
imul
fnsave
push
dec
lods
xor
data16
cmpsb
dec
lahf
cwtl
imull
fstpl
in
outsl
jp
mov
dec
insl
je
fstps
pushf
push
inc
inc
sub
popa
imul
sbb
out
sarb
push
dec
push
inc
out
inc
xor
fmull
rcrb
mov
bound
inc
mov
dec
divb
inc
sub
dec
jecxz
jmp
push
ret
in
in
xchg
mov
adc
xor
adc
lret
jle
fidivl
xor
jg
leave
cmp
add
dec
adc
aad
loop
ret
sub
mov
or
mov
add
outsb
jp
add
repnz
push
lret
movsb
sbb
push
sbb
mov
push
and
rol
in
popf
mov
pop
push
push
lret
jbe
dec
pop
imulb
push
pusha
shlb
jo
movsl
aam
pop
mov
jecxz
mov
dec
stos
push
jmp
mov
mov
into
and
pop
and
inc
dec
int3
movsb
pop
cmpsb
ja
loope
fldt
or
mov
cs
rolb
roll
push
mov
and
fnstsw
pop
adc
fwait
repnz
fadds
cli
call
lds
dec
pop
and
stos
and
push
lods
movsl
push
aam
push
or
and
lods
out
loop
pop
push
xor
fwait
shll
sbb
in
inc
adc
push
iret
jl
mov
mov
jg
pushl
mov
shlb
push
dec
adc
leave
cld
imul
imul
shll
scas
mov
outsb
dec
pop
sahf
jne
inc
or
out
inc
cmp
ret
out
mov
add
clc
fwait
add
xchg
out
test
mov
push
and
lods
xorl
jl
cltd
aam
or
push
imul
ljmp
ss
pop
stc
mov
mov
mov
pop
sub
mov
pop
insl
xor
stos
stos
roll
movsb
or
aas
test
mov
pop
in
and
fnstsw
jecxz
out
in
jl
les
int3
fnstenv
inc
sub
xchg
ret
and
fisttps
adc
dec
out
inc
xor
lahf
mov
jo
jmp
and
push
mov
movsb
mov
rcll
inc
shrw
jne
dec
mov
int3
jnp
icebp
das
jge,pt
sarl
leave
jbe
and
rcl
ds
xor
repnz
or
clc
push
adc
xchg
es
fcoms
imul
shlb
xor
sub
jb
lret
imul
xor
lcall
pop
pop
data16
mov
push
mov
sbb
rol
and
fimull
imul
pop
xor
mov
shr
frstor
pusha
inc
cmp
sbb
leave
sbbl
dec
push
fs
xchg
push
mov
fidivrl
or
mov
fimull
or
push
jbe
pop
mov
mov
ror
pop
xchg
sbb
dec
sbb
repz
repnz
pop
jnp
ret
bound
ret
push
int3
imul
in
mov
jbe
scas
mov
bound
pop
call
xchg
and
aaa
cli
push
sub
xchg
pop
xchg
xor
add
lcall
stc
sbb
sti
add
jno
ficoml
cmp
loope
out
mov
sbb
loopne
ror
cltd
mov
dec
test
loop
jl
sub
lods
icebp
jno
out
pop
cmp
push
mov
jge
mov
shlb
pushf
sti
push
scas
dec
dec
in
in
or
fdivs
addb
and
ror
jbe
aas
and
pop
scas
mov
push
xchg
adc
sub
int
js
cs
imul
inc
movhps
inc
test
xor
or
jge
and
stc
out
lods
mov
test
scas
pop
inc
lods
out
lret
dec
inc
lret
mov
pop
add
jo
or
mov
jecxz
add
dec
mov
mov
jmp
inc
stc
mov
pop
fstpl
sar
sahf
leave
pop
dec
and
jo
xor
push
ret
jl
cltd
xor
xchg
scas
popa
sbb
test
jne
fstl
jns
notl
xchg
dec
mov
and
or
ret
sbb
or
sbb
sbb
pop
mov
in
pop
push
adc
test
mov
xor
pop
adcb
add
cli
ja
rcll
fwait
xor
push
xchg
sub
push
push
incb
gs
nop
mov
mov
mov
jo
aaa
jge
lods
pop
shll
mov
fadds
scas
test
and
xor
pop
test
mov
inc
mov
inc
daa
lods
mov
loope
fdiv
xor
pop
fs
xlat
aad
sub
bound
mov
cli
jmp
call
inc
sbb
add
adc
sahf
mov
icebp
cmp
jb
jae
mov
cltd
psrld
mov
add
push
jecxz
orb
rorl
lods
pop
or
mov
mov
insl
ret
dec
sbb
jmp
loop
movsb
out
add
mov
fsts
imul
sub
mov
pushf
rolb
inc
push
fs
cld
lret
sbb
xchg
and
pop
fs
mov
mov
mov
cwtl
mov
add
jmp
xlat
cs
inc
adc
ficoml
popf
aaa
loop
test
adc
pop
in
jnp
in
imul
sbb
xor
jecxz
js
push
dec
call
sub
leave
lea
jbe
movsl
out
movsl
or
mov
nop
xor
sbb
imul
gs
xchg
dec
test
mov
sbb
je
shlb
push
adc
mov
out
jbe
int3
loopne
loop
xor
sbb
in
xor
aas
mov
int3
push
fisubrs
test
loopne
push
rolb
mov
andb
inc
mov
cmp
fists
push
jmp
cltd
pop
pop
loope
in
mov
adc
jp
adcl
and
xchg
push
inc
xchg
lods
pop
icebp
inc
jmp
inc
jmp
or
stos
or
push
mov
push
jno
ffreep
addr16
adc
sbb
into
xchg
cmp
jg
inc
lds
ret
aad
shrb
xchg
cmp
fwait
dec
mov
hlt
mov
pop
sahf
dec
or
jno
jl
sub
mov
lea
in
jecxz
pushf
stc
enter
aaa
out
dec
je
mov
lret
mov
inc
mov
or
inc
scas
push
repz
inc
mov
mov
out
sbb
push
mov
es
addr16
jo
adc
fcmovu
pop
arpl
lcall
cmpsb
mov
orl
lret
les
and
mov
jge
clc
pusha
pop
or
push
outsb
ss
iret
mov
inc
cmpb
xchg
mov
sbb
imul
stos
inc
pop
adc
movsl
adc
xchg
sbb
call
adc
or
fmuls
fnstenv
stos
cmpb
dec
fmuls
cmp
add
leave
icebp
and
mov
adcb
inc
mov
mov
mov
sub
pop
test
add
mov
adc
mov
push
adc
mov
ffree
icebp
rcl
out
imul
into
mov
shrb
fwait
ds
lods
mov
or
je
mov
jb
psubusw
xchg
das
push
push
mov
adc
fsincos
mov
xor
mov
cmp
pop
or
ss
sbb
adc
pop
push
adc
mov
mov
repz
nop
jecxz
enter
in
inc
icebp
mov
cmp
loope
jp
lock
pop
ja
sbb
pop
fnsave
jo
push
std
or
nop
and
je
fsubr
mov
jo
mov
jns
jl
decb
adc
lcall
mov
add
fdivp
popa
out
mov
hlt
add
fsubrp
inc
xor
mov
push
jae
mov
lret
ret
int
cmp
cltd
std
imul
daa
pop
mov
faddl
out
mov
cmpsb
pop
enter
and
imul
sbb
sbb
das
cmp
pop
xchg
rorb
mov
pop
mulb
insl
sub
cmp
std
cld
leave
sbb
aam
mov
pop
cmp
in
imul
push
push
test
sub
stos
daa
lret
subb
pop
inc
loope
ss
movsb
insb
dec
xchg
out
fidivs
mov
in
cld
xor
push
cmp
fistl
sbb
loopne
lret
push
inc
and
aam
js
sahf
adc
inc
pusha
bound
inc
sub
out
add
sbb
sbbb
jg
xor
imul
rcrl
push
enter
les
sub
lcall
xchg
inc
negl
adc
jge
adc
call
imul
add
xchg
call
jp
xchg
sub
push
sub
ret
orl
cwtl
adc
jl
mov
mov
sbb
lods
js
pop
pop
mov
push
aad
int
notl
adc
push
xchg
xor
jae
push
out
jo
out
dec
sbb
ss
jo
test
jb
adc
jp
inc
lds
xor
mov
push
push
das
les
aam
repz
sbb
aaa
sbb
test
and
movsl
xchg
cltd
lcall
jecxz
aas
and
jb
inc
sub
sub
dec
lret
mov
cmpsb
push
mov
aam
outsl
repz
push
fcomp
faddl
mov
and
push
repz
adc
test
adc
sbb
dec
addb
ljmp
xchg
ja
push
loop
mov
push
aam
cmp
test
mov
jo
ds
mov
stos
scas
lock
cmp
push
stos
pop
jmp
jge
repz
pop
sahf
mov
divl
rorb
jecxz
stc
sahf
or
pusha
fwait
loop
mov
xor
scas
nop
das
push
xor
mov
sahf
int
loopne
movsb
imulb
cmp
xor
xor
cmpsb
test
test
das
sbb
jns
dec
mov
xor
jae
fs
sti
in
jno
mov
cld
mov
inc
outsl
mov
bound
xlat
repz
push
jle
xor
push
cmc
push
lret
adc
out
les
cmp
out
xor
cmp
sbb
lock
test
xlat
rorb
testl
ret
jmp
xchg
pop
pop
dec
scas
xchg
lahf
jge
adc
xchg
enter
sbb
jo
push
gs
cmp
sahf
daa
test
subl
push
adc
int
push
inc
ja
mov
fstp
mov
push
movsb
ret
add
and
xchg
or
incb
sbb
add
cmp
mov
mov
leave
nop
popa
cmp
mov
movsl
test
and
dec
cltd
xor
or
xor
sarb
cli
jle
sub
fs
dec
sub
fiadds
inc
arpl
sub
mov
scas
sbb
fsubrp
jno
mov
mov
jbe
or
mov
jo
aaa
popf
adc
fdivs
jbe
imul
int
dec
dec
icebp
leave
jmp
loop
sub
push
push
mov
jl
adc
jecxz
pushf
mov
xchg
sub
ret
fcomp
add
cmp
stos
sbb
out
imul
in
and
dec
or
ss
div
add
fs
jne
loopne
push
paddsb
lahf
dec
imul
pop
dec
bound
aas
push
shrb
imul
pop
lret
push
sub
cmpsb
pop
je
mov
jbe
push
xor
cld
mulb
xchg
xor
in
mov
mov
pop
mov
aad
adc
mov
fnstenv
dec
xchg
adc
stos
mov
add
jno
movsl
in
loopne
movsb
inc
pushf
xchg
repz
add
fs
repnz
push
mov
add
mov
cmpsl
xchg
aaa
cmp
mov
ja
fldl
insb
negb
and
lret
xor
les
sub
gs
add
jp
mov
adc
ja
ja
pop
repz
push
ljmp
jg
inc
out
xor
ret
sti
fs
pop
addb
imul
xor
jle
sub
imul
roll
leave
sub
dec
cmpsb
cmpsl
adc
and
push
cmp
lret
shll
mov
push
cmp
cmpl
or
jge
ret
sbb
mov
xor
sbb
test
outsb
in
push
inc
mov
fwait
popa
dec
xchg
jne
or
int3
jns
icebp
dec
jle
iret
lock
loop
pop
push
add
in
ljmp
pop
mov
cwtl
nop
push
xor
in
add
mov
push
ret
stc
xor
push
popa
testl
adc
loop
mov
das
mov
xor
lea
lret
in
jne
xchg
mov
dec
orb
sub
mov
negb
fidivl
jg
pop
xlat
sbb
pop
jl
push
pop
mov
int3
outsb
out
gs
test
je
aaa
jp
arpl
xchg
push
dec
das
jno
sbb
nop
int
scas
outsl
out
popa
xor
aam
and
pop
mov
mov
lods
andb
jmp
pusha
popa
dec
push
outsb
enter
sub
les
js
xor
das
mov
test
test
jp
sarl
dec
mov
das
mov
cwtl
cmp
loopne
call
dec
jne
jecxz
cli
jmp
mov
mov
xor
mov
add
sub
ret
rorl
popf
inc
mov
mov
cmp
or
das
pop
xchg
stc
repnz
sub
and
or
push
testb
or
aam
rcl
cmpsb
pop
dec
dec
adc
mov
fsubrl
cmp
mov
insb
clc
out
mov
add
out
rcll
xchg
int3
lret
mov
and
push
xor
rcll
mov
push
lods
insl
xchg
sub
ds
test
jbe
or
cmp
movsl
xorl
out
and
movsb
adc
int
out
ljmp
mov
jp
push
dec
pop
dec
addl
bound
inc
jge
popa
stos
cld
scas
in
adc
arpl
stc
inc
sub
jp
mov
add
lcall
push
cli
jne
lahf
sub
inc
loop
xor
addr16
or
mov
inc
fnstenv
mov
int
out
mov
outsb
push
icebp
fcmovnb
daa
push
jno
add
js
sub
imul
sbb
jl
stc
lcall
xchg
in
sub
loope
cwtl
mov
dec
stos
or
int
std
dec
mov
fistpl
sbb
popf
cmp
popa
push
xchg
adc
fnstenv
fucomip
xchg
push
rcll
xchg
jns
xchg
fdivs
sbbl
jp
inc
and
bound
pop
pop
or
loope
inc
xor
ret
or
jb
shrl
jl
cvtps2pd
ss
jle
pusha
or
insl
jne
push
xor
out
sub
aas
mov
sahf
loopne
dec
test
jge
lret
or
outsb
sbb
das
sbb
add
add
dec
mov
roll
add
orl
mov
xchg
and
and
jg,pn
pop
pushf
out
inc
out
out
push
push
sub
ds
sbb
pop
dec
shrl
imul
xor
mov
cmp
sbb
inc
xor
push
icebp
xor
xor
js
inc
lcall
rclb
in
lods
xrelease
std
add
dec
insb
dec
fwait
popf
cli
out
jb
orb
loope
lret
jmp
mov
cwtl
jecxz
jns
stc
call
fisubs
lds
pop
xchg
mov
insl
or
sbb
rcrb
inc
mov
and
push
and
add
out
push
jmp
push
loopne
enter
mov
cmp
lcall
dec
adc
pop
mov
std
lds
ljmp
dec
jecxz
fwait
insl
jecxz
js
pop
push
dec
inc
or
mov
jnp
cmp
dec
iret
pop
ja
jge
dec
push
dec
sbb
aad
fcomps
ret
mov
scas
push
cmp
popa
std
jge
cli
ja
dec
dec
shl
repnz
mov
cmp
mov
lret
cmp
fld
test
fisttpl
std
jnp
out
stos
cmp
push
sti
iret
adc
rcrl
inc
ja
out
shlb
daa
iret
pop
push
pop
or
je
mov
outsl
enter
and
xchg
inc
pop
mov
push
adcl
popa
inc
push
xor
lock
cld
xchg
cld
mov
inc
cwtl
aad
dec
sbb
push
push
or
inc
fdivr
adc
shlb
push
mov
xor
es
mov
or
fisubs
adcb
push
xor
and
jne
mov
movsb
aam
push
and
iret
call
mov
movsl
mov
ficoms
lcall
loop
call
pop
push
in
cmp
cmp
in
adc
fimull
sbb
xor
xchg
pusha
insl
ffreep
cmp
std
jl
sub
or
fs
cmpsl
inc
inc
push
dec
enter
je
mov
gs
mov
shrb
in
aas
in
aad
es
arpl
inc
xor
mov
cmp
jo
fcomi
xchg
jp
stos
movsl
pop
cmp
xor
dec
out
imul
cld
adc
cmp
pushf
into
and
enter
outsb
sbb
iret
jp
daa
and
pop
cmp
notl
push
ret
mov
lcall
into
add
popf
pop
inc
cmp
inc
xchg
push
and
sarl
inc
movsb
jmp
xchg
fs
mov
pop
sbb
sti
mov
cmp
loope
adc
out
rcl
sub
jno,pn
pop
and
popa
xor
lea
xor
test
sub
xlat
inc
push
fildll
inc
fwait
stos
sub
stc
and
aad
iret
js
cmp
sub
xor
dec
cmp
shlb
jl
xor
sbb
xchg
mov
and
stc
jl
jo
movsl
je
mov
js
cmp
xchg
mov
mov
aad
dec
or
in
mov
aaa
add
bound
mov
aaa
or
dec
sbbb
sahf
aas
push
or
in
add
lea
sbb
xlat
pop
inc
and
and
out
fistpll
push
movsl
imul
mov
fists
xor
mov
mov
inc
cli
orb
mov
inc
mov
mov
leave
jnp
xchg
mov
sahf
inc
xlat
pop
rcr
sbb
insb
dec
cmp
dec
fcmovnu
push
inc
xchg
xchg
sbb
sbb
je
jae
in
divb
sar
gs
xor
out
cli
dec
xor
cwtl
mov
dec
das
repz
call
inc
push
in
stos
jbe
pop
add
in
lods
cld
and
cmp
cli
pop
pcmpgtw
into
std
dec
or
xchg
adc
repz
add
inc
adc
xor
sub
mov
mov
push
testb
in
cmp
cmc
adc
and
insb
sub
mov
mov
lods
in
pop
xor
out
cmc
xchg
movsb
into
vpunpckhwd
ja
fs
fwait
pusha
sub
lahf
ja
inc
cmc
sub
and
mov
clc
stc
mov
mov
in
and
lret
dec
cld
xchg
loopne
pop
stos
lods
or
shlb
fiadds
sbb
jnp
mov
mov
sub
in
je
cwtl
cmp
jl
test
mov
lcall
lcall
jmp
adc
loope
push
ds
mov
mov
outsb
push
loopne
mov
lret
aaa
sbb
sbb
jno
sub
xchg
or
mov
xchg
icebp
cwtl
pop
mov
pop
mov
adc
stos
test
fimuls
jb
pop
pop
xlat
mov
bound
mov
jg
pop
loop
xchg
in
jge
daa
sbb
mov
add
xchg
inc
jae
mov
adc
fs
or
int
rorb
bsf
adc
sbb
pop
sub
mov
push
push
push
test
xor
repnz
jns
leave
or
pop
sti
mov
ficoml
cmc
jae
rep
imul
gs
pop
pop
test
xchg
mov
pop
cmpsl
lea
push
das
inc
sbb
js
inc
pop
sti
cmp
sub
jb
pop
jge
pop
or
inc
enter
in
aas
push
dec
and
sub
jae
jle
pop
push
in
or
fwait
lahf
je
inc
mov
xor
pop
jmp
xor
cmp
mov
imul
add
cmc
push
fndisi(8087
cmpsl
xchg
xlat
das
jecxz
and
add
mov
nop
mov
adc
popw
sbb
and
jae
std
dec
outsl
inc
adc
pop
outsl
ja
test
popa
js
mov
add
sub
shlb
jecxz
pushf
mov
stc
push
pop
rcrb
and
fisubrl
adc
aaa
pop
inc
inc
into
sbbb
mov
and
add
insl
jne
pop
ljmp
popf
cmp
mov
mov
aaa
sar
or
shll
sub
sbb
jmp
or
mov
pop
mov
pusha
daa
or
mov
xchg
ja
test
adc
cmp
fwait
shrb
ret
jp
adc
inc
add
inc
loopne
scas
adc
stos
xchg
sbb
push
dec
lahf
mov
mov
and
mov
mov
enter
add
movsl
jnp
mov
insl
call
in
pushf
pop
test
inc
sub
rol
jmp
push
or
les
inc
add
popa
mov
xchg
lret
pmaxub
push
xchg
mov
ror
jnp
daa
ds
js
imul
cmp
fdivs
outsb
iret
mov
inc
into
or
incb
and
mov
es
data16
daa
loope
cmp
out
test
push
lret
movsb
xchg
adc
cmpsl
dec
sarl
push
xchg
jnp
addl
call
xchg
xor
jae
test
daa
loope
cltd
mov
cwtl
je
mov
or
inc
mov
or
inc
push
mov
mov
shl
faddp
sbb
mov
nop
pop
pop
ret
add
imul
and
cmpb
mov
mov
gs
pop
xor
xchg
pop
cmpsl
ret
ljmp
and
cli
pop
sub
push
sub
adc
xchg
pop
aam
movsb
faddp
out
xchg
in
sub
out
and
mov
or
push
jg
adcl
mov
mov
stos
sbbb
mov
xor
test
mov
mov
dec
and
sbb
dec
mov
cltd
orl
push
jg
push
sub
jbe
iret
sub
scas
popa
inc
xchg
shrb
pushf
add
add
or
scas
push
sbbl
ss
mov
push
mov
mov
sub
testb
inc
and
cli
in
jns
rol
pop
in
xchg
lods
add
push
loope
xchg
or
add
mov
and
fsubrs
xor
daa
loop
pop
std
jmp
xor
mov
xor
test
push
hlt
jmp
add
test
mov
iret
add
dec
jne
pop
xchg
fsubrl
loope
cmpsb
add
push
popa
ret
push
xor
cwtl
imul
and
sub
jne
push
dec
push
and
cld
data16
sahf
fisubl
aam
movsb
cmc
dec
call
inc
xor
aad
mov
jge
push
pusha
or
jmp
pop
mov
in
ss
outsb
lret
push
inc
scas
pop
insb
push
or
xor
cmp
mov
es
and
fs
cld
xchg
sbb
repz
sub
xchg
stos
aas
dec
scas
fbstp
pop
mov
sub
and
movsl
mov
xchg
inc
xchg
sbb
pop
mov
cs
xor
fcoms
lret
mov
into
cs
pop
xor
xchg
in
cli
dec
outsl
sbb
stc
or
mov
mov
mov
jle
xchg
xchg
xlat
es
or
pop
mov
sub
add
mov
push
push
xor
xchg
push
aaa
xchg
pop
mov
es
sti
lret
xchg
or
xchg
loop
fisubs
add
or
sub
andl
mov
mov
lock
jge
xor
mov
jp
or
mov
push
jo
and
data16
js
mov
mov
stos
or
cmp
test
je
xor
xor
shr
and
push
push
inc
xlat
xor
icebp
xor
dec
sub
outsl
scas
jmp
cmp
pop
test
sbb
add
imul
mov
popf
pop
fwait
data16
or
dec
in
xor
aaa
clc
pushl
mov
sbb
insb
faddp
cmp
scas
mov
sub
stos
dec
filds
xchg
sbb
fs
and
imul
adc
out
pop
je
push
adc
pop
pusha
xchg
popf
adc
mov
sti
mov
inc
shrb
inc
mov
sarl
cmp
loope
mov
sbb
push
cmp
cmp
xlat
push
int3
es
mov
jecxz
dec
push
bound
sub
aad
out
int
or
mov
aam
into
cli
jnp
scas
loopne
mov
stc
sbbl
add
aad
mov
notl
bound
sub
ljmp
shll
push
cmp
push
fcmovbe
mov
iret
sbb
mov
inc
imul
int3
ror
aad
outsl
xor
lea
xor
addr16
nop
sub
in
jb
jecxz
ja
test
out
sbb
mov
aaa
or
and
xor
push
loop
mov
dec
xchg
sub
xlat
cmp
inc
mov
stos
dec
mov
inc
loopne
in
js
es
mov
sub
stc
pop
out
aaa
loopne
inc
push
fwait
repz
pop
and
dec
loopne
fadd
xor
psubusb
sbbl
push
xor
inc
stos
push
nop
pop
sub
popf
lahf
and
lret
jno
ljmp
cmp
dec
loope
mov
addr16
adc
in
sahf
mov
movsb
popf
jbe
cltd
int
sbb
jmp
jl
fwait
mov
mov
or
mov
imul
cwtl
or
mov
cmc
inc
loope
xor
out
jne
mov
insl
lods
arpl
cmpsb
add
repz
cmc
and
insb
push
add
cs
adc
scas
dec
and
push
add
cmp
mov
pop
cmp
pop
or
lret
das
xorb
ret
pop
xor
mov
jne
or
js
fldenv
ficoml
xchg
cmp
bound
fstpt
sub
mov
pushf
mov
push
in
xlat
cmp
add
in
xor
push
in
lret
out
inc
jb
rolb
test
cld
adc
jg
pop
pop
sub
ret
push
sbbl
mov
fcmovnu
pop
add
push
shld
mov
lds
imul
aad
mov
lahf
dec
jbe
jno
fimuls
adc
xor
cmp
jo
and
std
insb
insb
cld
or
dec
pop
out
subl
shr
mov
xor
ret
cmp
repz
fidivrs
mov
aas
xchg
fsubs
es
sub
and
aas
ret
jnp
stos
ljmp
add
cmp
es
xor
adc
gs
or
cmp
test
iret
dec
gs
cmp
xor
push
xor
jne
lret
loope
mov
xor
and
mov
or
pop
stos
leave
shlb
addl
xor
lea
inc
cwtl
sub
adc
mov
add
cmp
jmp
outsb
fcomps
push
mov
jge
repz
dec
fdivrs
push
inc
jne
lods
shl
inc
sub
sub
jge
xor
mov
fidivl
jo
adc
cmc
sbb
ljmp
call
pop
inc
rorb
inc
adc
jmp
push
pop
faddl
or
aas
lret
imul
jns
fstpl
adc
adc
fldl
pop
mov
stos
inc
test
xchg
dec
into
icebp
jo
cwtl
cmp
cmpsl
inc
rcrl
das
lret
adc
push
push
ja
ret
sbb
mov
popf
rolb
cmpb
filds
popa
or
cmp
iret
sti
nop
mov
cmpsb
mov
pop
das
push
inc
out
jne
test
push
jb
mov
jmp
push
pop
arpl
stos
js
outsl
repz
xchg
inc
fs
scas
lret
push
cmp
aas
add
loope
fisttps
mov
in
pusha
dec
andl
mov
mov
add
push
inc
inc
fidivrs
stc
out
and
xchg
mov
out
and
ds
pop
push
rcrl
outsb
jl
adcl
add
or
int
pusha
je
sbb
xor
jae
xchg
adc
cmp
push
ficomps
leave
mov
mov
out
fnstsw
into
jmp
push
pop
push
sub
cli
subl
int3
mov
jns
loopne
mov
lahf
call
mov
insl
insl
add
sbb
ss
imul
imul
shlb
sti
stc
cmp
in
jae
mov
ds
shrl
aaa
dec
pop
jp
in
fistpll
cmp
push
jmp
inc
mov
arpl
xchg
jb
rcrb
mov
pop
mov
and
push
dec
shr
push
insb
cld
push
xchg
push
inc
mov
lcall
add
ja
pop
sarl
sbb
jecxz
call
iret
sbb
sbb
mov
pop
xor
out
gs
jns
pushf
adc
adc
and
jmp
add
jmp
test
xchg
xor
in
es
je
fdivrl
fidivs
inc
mov
call
in
repnz
mov
test
push
jne
push
outsl
jae
xor
fsubl
or
test
sbb
xor
and
jle
imul
sub
lret
hlt
pop
js
sub
mov
push
popl
push
psrlq
push
xchg
in
fidivrs
adcl
addl
and
test
lods
out
xchg
jle
xchg
loopne
negl
aaa
in
imul
int
jae
and
aam
jae
xor
out
jp
push
add
push
xchg
sbb
stc
daa
loop
xor
nop
cmp
mov
inc
push
dec
int3
sbb
bound
jle
lods
jbe
xchg
out
cs
bound
xchg
xchg
ja
in
xchg
push
adc
out
mov
push
and
adc
clc
int3
pop
shr
push
shll
mov
push
jno
jns
cmp
cmp
sti
sarl
pop
stos
cmp
lds
in
adcb
mov
mov
lahf
mov
out
lcall
adc
mov
push
pop
loope
inc
mov
mov
fsubrs
jno
clc
jno
mov
aad
leave
out
push
jnp
fimuls
mov
pop
stc
adc
cs
ds
icebp
out
shl
int
jae
push
flds
pop
orl
dec
ss
cwtl
cld
xchg
and
xchg
adc
cmpsb
inc
mov
jo
mov
das
jmp
push
xor
mov
and
pusha
sbb
and
jge,pn
pushf
cmp
pushl
pop
mov
and
inc
test
mov
inc
mov
xchg
cmp
mov
insl
dec
in
loopne
notl
sbb
xchg
mov
fstpl
aas
stos
lret
sub
add
push
push
fnstcw
add
xchg
and
add
movb
add
add
in
adcb
inc
mov
jnp
adcl
inc
das
push
xlat
loop
pop
pop
cmp
sbb
push
xchg
fcoms
sbb
xor
fs
jmp
arpl
mov
mov
lret
in
pusha
popa
lahf
psubsw
push
mov
in
test
notl
sub
add
mov
test
mov
mov
iret
sbb
pushf
mov
fdivs
push
mov
xchg
push
mov
pop
pop
xchg
aad
push
sbb
loope
jne
sbb
test
adc
int3
cmpsb
sti
stc
add
sub
stc
xor
push
in
pop
xlat
sub
mov
mov
push
jb
xchg
add
inc
pop
fmul
js
jno
aaa
outsb
int
sar
fcompl
daa
repnz
lret
cmp
lret
mov
stos
push
btr
and
mov
outsl
sub
ss
sub
mov
sbb
push
xor
into
mov
add
popa
xchg
fsub
insl
mov
iret
into
loopne
dec
pop
je
mov
adc
outsb
shlb
sbb
lods
push
mov
adc
push
lcall
les
ljmp
jns
add
xchg
add
pop
push
mov
xor
dec
stc
jg
sbb
pop
insl
imul
outsb
cld
jne
pop
ja
jo
lcall
inc
adc
out
lock
lods
sub
sub
push
jne
rolb
inc
adc
das
fwait
aaa
test
popa
jl
sub
cmpsl
mov
js
shrb
shll
pop
and
icebp
inc
push
cmp
cli
iret
lock
mov
stc
sti
xchg
movsb
dec
bound
pop
gs
mov
lahf
jmp
fcmovne
ljmp
fwait
push
sbb
dec
and
cmp
and
sub
inc
outsl
mov
adc
inc
mov
mov
daa
pop
add
add
and
sbb
cmc
pop
xor
outsl
push
sahf
shrl
mov
out
fwait
test
stc
es
sub
pop
or
aas
mov
dec
repz
pop
jbe
imul
or
mov
pushf
clc
pop
and
popf
inc
popf
int3
adc
xlat
in
or
test
xchg
in
mov
dec
mov
jmp
sub
xor
insl
clc
add
pop
movsl
dec
xchg
dec
lea
add
add
dec
out
adc
ja
mov
pusha
push
sahf
testl
mov
dec
inc
mov
pop
int
sbb
ret
ret
ret
add
fstpl
sahf
mov
outsb
pop
sbb
sbb
mov
push
sbb
push
adc
push
inc
loopne
xchg
jge
mov
push
cmp
lea
inc
ds
mov
mov
jp
fwait
in
dec
push
jge
jb
imul
adc
xchg
stos
mov
or
and
push
dec
lods
test
or
test
sbb
jge
xchg
xchg
lds
sub
or
cmpsb
or
mov
or
dec
xchg
fxch
je
rclb
xchg
push
inc
data16
dec
ljmp
ja
inc
xchg
dec
xchg
iret
cli
rclb
scas
lock
mov
stc
dec
jmp
sub
jo
arpl
xor
push
or
aaa
pop
cmp
xlat
jge
stos
push
hlt
inc
jbe
jmp
std
inc
lds
mov
les
push
cltd
gs
loope
arpl
and
xor
ficompl
sub
xor
lods
dec
add
mov
jno
or
jo
push
les
lods
mov
mov
jmp
pop
cmc
mov
data16
push
xchg
mov
sub
mov
fcompl
push
in
xchg
aaa
int3
cld
mov
je
push
adc
dec
or
sbb
inc
mov
rcr
pop
hlt
out
push
cmp
stc
mov
fstpt
mov
xchg
jns
sbb
call
or
ljmp
jae
mov
pop
fistpll
mov
test
inc
aam
jg
aam
xchg
movsl
aaa
sbb
jge
ficoms
lret
jb
inc
mov
incb
into
xchg
movsl
jl
rorl
mov
loope
inc
push
out
aam
mov
jp
adc
xchg
mov
cmpsl
xor
cmpsb
and
ret
lea
test
insb
add
sbb
cs
mov
sub
jge
adc
out
lret
popa
leave
push
push
sbb
lahf
pushf
mov
push
stc
fldcw
xchg
add
aaa
insb
rcrl
pop
dec
sub
loope
shrl
out
icebp
add
xchg
pop
cld
shlb
lock
mov
pushf
mov
xchg
add
jo
mov
sbbb
ds
push
ss
and
mov
pop
int
sbb
add
int3
pushl
mov
ret
mov
jno
cmc
das
aaa
cli
xchg
pop
shrb
cmp
idivl
jo
jae
insl
je
push
xor
decl
psraw
adcl
out
jb
int
cld
inc
jle
mov
add
mov
push
pop
mov
into
outsl
stos
in
lods
fisubrs
cmp
scas
cmpsb
and
scas
add
push
nop
lahf
and
xchg
fnstenv
in
or
sahf
ljmp
pop
adcb
push
lret
cmpsb
mov
add
xor
and
out
adc
leave
fdivr
pop
fildll
aam
aas
bound
les
push
xchg
inc
mov
mov
idivb
stos
inc
or
pop
notb
add
jno
out
mov
cmp
fcomps
outsl
jl
cmp
aam
pop
jns
ss
or
mov
stc
sarb
insb
push
mov
mov
push
lahf
fmul
xor
shll
add
add
call
adc
pop
pop
xchg
dec
pop
lret
in
rcrb
cmp
lea
sub
je
push
pusha
shll
out
sbb
xchg
push
mov
imul
aaa
ljmp
or
stos
or
insl
gs
mov
aad
mov
sarl
pop
cmpsb
inc
mov
arpl
mov
mov
jmp
adc
mov
or
mov
sbb
test
dec
sbb
pop
aad
or
repnz
iret
inc
in
fisttpl
sbb
and
fadds
and
int3
push
mov
je
or
xchg
in
nop
add
into
or
sbb
idivl
movsl
clc
or
adcb
cmpsl
add
je
mov
adc
sub
and
add
imul
test
sub
fstpl
adc
and
out
mov
cmp
xchg
add
dec
fisubrl
cmc
nop
out
fmul
mov
adc
imul
call
and
outsl
sub
mov
es
adc
fwait
cld
pop
push
xchg
cmp
xlat
inc
adcl
xor
dec
call
sbb
xor
out
out
and
testb
imul
pop
mov
sbb
call
push
push
xor
pop
xchg
or
insl
fisubs
adc
ja
pop
icebp
test
insb
sub
adc
jle
sbb
movsb
mov
inc
pop
push
add
gs
add
outsl
mov
or
fs
dec
ret
aam
stc
jb
lods
fs
mov
popa
je
fwait
pop
jo
or
jle
lock
pop
cwtl
jno
dec
mov
nop
dec
ja
inc
stos
ret
stc
xchg
mov
dec
cmc
loope
jns
mov
push
push
call
mov
push
fwait
mov
jp
data16
mov
and
call
fs
lea
dec
sub
xchg
pop
jnp
movsl
cmp
sbb
mov
dec
xchg
fdivs
xor
insb
idivb
repnz
les
xchg
nop
mov
pop
aaa
pop
pushf
jbe
pop
xchg
ret
dec
dec
loopne
fbld
adc
cltd
jle
jmp
in
aas
in
sbb
mov
aad
or
mov
ret
iret
dec
sub
popf
cwtl
insb
mov
cmpsl
pop
jp
aam
adc
data16
pop
mov
js
loop
sahf
xlat
or
jp
jp
xchg
add
dec
dec
mov
fldl
add
enter
inc
int
and
ss
cmp
lock
push
repz
dec
test
cld
mov
and
loopne
pusha
push
cli
int3
adc
fisttpl
jge
push
pop
out
out
mov
aaa
aas
loopne
or
out
int3
incl
in
addr16
dec
idivb
jnp
xor
popf
jbe
lret
pop
mov
sub
into
fldcw
add
xchg
aam
push
inc
push
mov
jb
and
mov
ret
jo
ss
test
mov
mov
pop
sbb
orb
js
mov
mov
pop
fisubs
das
lea
jg
adc
pop
xchg
and
cmp
cmp
test
pusha
cmp
cmp
mov
and
cmp
dec
aam
jbe
xchg
adc
movsl
lods
pusha
mov
js
lock
test
test
fistpl
xor
sub
push
pop
aaa
push
xchg
das
cld
or
jl
aaa
iret
adc
cmp
sbb
push
xchg
or
cmpl
movl
xchg
call
add
xchg
xchg
fucomp
sub
or
mov
cmp
out
jmp
sbb
push
mov
pusha
or
inc
or
loop
inc
adc
lret
adc
push
int3
stos
fs
adc
lahf
jne
pop
cmp
mov
dec
sar
into
add
lahf
cld
stos
mov
xor
cmpsl
clc
enter
ss
push
mov
fadds
push
pop
negb
add
mov
and
sub
repnz
jmp
mov
lcall
mov
mov
push
sub
ret
mov
cmp
addr16
ds
fdivrs
sub
sbb
push
or
and
shl
xor
push
or
outsl
nop
das
cwtl
jns
popf
hlt
mov
inc
mov
push
mov
jl
repz
loope
and
jae
movsl
and
dec
out
jnp
add
mov
repnz
xchg
fists
scas
push
inc
fs
jl
test
mov
repz
enter
lods
fs
movsb
push
mov
es
xlat
fcmovnu
fcompl
mov
rorl
sbb
add
ret
adc
mov
gs
adcl
cmp
enter
xor
mov
xor
xchg
test
push
pop
dec
sbb
out
mov
pop
addr16
cld
add
daa
sti
pop
dec
mov
insb
cmp
adc
push
in
loop
std
inc
dec
adc
fs
sbb
cmp
mov
scas
fs
aam
adc
je
mov
sbb
push
rclb
pop
jge
pop
pop
push
push
bound
push
inc
mov
push
icebp
adc
push
or
leave
cs
les
jge
out
jg
inc
js
rcrb
scas
mov
fiadds
fisubrl
mov
cli
or
jl
adc
loope
cmp
sbbb
add
in
xchg
xor
and
push
add
or
cmc
lods
outsl
mov
sub
cltd
or
add
xor
or
pop
adc
sbb
adc
sub
sbb
fsubl
in
mov
shlb
lcall
jo
fidivl
and
inc
mov
dec
lret
sbb
xor
add
mov
into
adc
xchg
push
pop
cmp
aad
push
stc
fcom
fildl
fwait
rclb
in
icebp
enter
push
lds
inc
mov
mov
cmp
mov
rcll
iret
loop
push
imul
cli
in
xchg
fwait
jecxz
or
notl
mov
jbe
xor
lock
mov
xor
imulb
lea
adc
xchg
into
push
rorl
cmp
das
xchg
add
notb
sahf
jecxz
dec
dec
or
pop
jns
mov
jg
cmpsb
mov
std
inc
and
adc
sbb
mov
mov
mov
test
sbb
xchg
cmp
sbb
ret
cwtl
test
aad
test
inc
sahf
mov
mov
cmpsb
pop
mov
mov
addr16
add
lds
btr
add
rorl
xor
in
xchg
inc
lcall
out
xchg
sbb
dec
mov
sbb
push
rorb
hlt
pop
movsl
sub
jns
ljmp
mov
jecxz
fwait
push
jbe
mov
rolb
mov
adc
sub
xchg
sahf
jmp
call
xchg
fcom
add
adc
mov
pop
adc
das
xor
mov
lods
inc
insb
int
mov
lret
push
add
aaa
icebp
pop
roll
mov
rclb
adc
xchg
pop
sbb
scas
ljmp
sub
mov
inc
pop
xor
mov
mov
outsl
mov
xchg
leave
xlat
jo
dec
dec
adc
mov
call
fstpt
cmpl
xchg
inc
leave
mov
sbb
arpl
mov
inc
dec
int
sbb
popa
out
repnz
add
ss
orb
cmp
xlat
test
out
xor
adc
xor
lcall
mov
fcmovnbe
jp
dec
shrl
fwait
sub
movsb
fildll
or
add
lock
sub
and
movsl
cmp
dec
pop
mov
mov
lea
dec
scas
cmpsl
ljmp
out
repnz
xchg
fldt
int3
inc
sbb
jne
cmp
cmp
js
bound
in
cmp
xchg
iret
lahf
outsl
mov
fmulp
and
push
iret
pop
cmp
lret
dec
bnd
push
scas
jb
montmul
cmpsb
ret
sahf
jp
outsl
jecxz
pop
push
push
int3
mov
pop
out
icebp
adc
shrl
mov
je
fwait
adc
mull
aaa
and
stc
jle
insb
mov
cs
aam
scas
mov
mov
lds
mov
scas
movsl
imul
sahf
mov
sub
jecxz
and
insb
ret
repz
xchg
jne
inc
rorl
pop
mov
insl
insb
out
mov
cmp
movsb
xor
jns
xchg
pop
bound
fwait
dec
fsubrs
jo
xchg
inc
ficoml
addr16
sub
xor
mov
loop
mov
clc
fwait
hlt
or
test
add
lods
mov
xchg
cwtl
mov
xchg
mov
jp
hlt
fxch
mov
and
jle
aaa
mov
pop
pop
xchg
movb
test
xor
lret
xor
sti
jns
pop
and
data16
adc
in
in
lds
pop
mov
xchg
push
pushf
adc
push
xchg
xor
sbb
cmp
pop
cmc
mov
loope
mov
push
movsw
mov
pushf
jl
sbb
std
jp
xchg
stc
xchg
pop
push
shlb
int
icebp
cmp
hlt
cmp
int
or
out
or
jmp
adc
push
cwtl
push
fldt
dec
push
stc
in
inc
sahf
movsb
out
lahf
jmp
sub
sbb
fs
mov
nop
rclb
sub
cld
test
mov
adc
daa
pop
sbb
xchg
or
jno
ds
xlat
dec
mov
add
and
adc
movsb
mov
adc
out
sub
cmp
mov
fdivrl
xor
les
insl
test
test
sub
scas
xchg
lods
ljmp
jbe
pop
sub
cli
in
or
lcall
pop
dec
xor
stos
mov
test
add
je
sbb
movl
lahf
cwtl
pop
mov
jnp
call
jle
push
push
jno
mov
mov
enter
inc
scas
or
addl
adc
pop
sbb
subl
test
rorb
dec
add
mov
adcl
repnz
lods
outsb
push
inc
arpl
jb
out
in
and
in
bound
jns
add
sarb
push
int
sahf
jo
xor
mov
cmp
mov
add
ds
xchg
sbb
mov
sbbl
jmp
outsl
xor
cmp
jecxz
loopne
push
xor
lret
enter
add
push
sete
cmp
mov
in
jnp
jno
lcall
das
ss
inc
jp
mov
bound
call
push
add
inc
push
hlt
data16
xchg
idivl
shll
adc
xor
dec
or
push
cltd
and
outsl
lahf
outsl
sub
and
push
cli
dec
gs
adc
push
icebp
or
lahf
push
xor
xlat
and
call
movsl
push
sti
out
sti
adc
cli
scas
mov
cmp
out
jmp
mov
jb
mov
or
jecxz
nop
jl
pop
pop
or
and
push
shll
push
or
dec
jge
sahf
repz
and
fmull
ret
jmp
dec
addr16
adc
fucomip
or
into
jge
mov
mov
test
enter
sbb
cmp
mov
bsr
sub
aad
incb
leave
sbb
shl
push
fsubp
in
test
stos
mov
cltd
or
or
push
mov
out
negb
jnp
and
les
clc
xchg
loop
jg
xor
mov
xchg
or
sar
arpl
outsl
fcmovne
les
cmpsl
xor
dec
js
into
mov
jb
pop
or
mov
xchg
test
pop
test
push
adc
in
and
dec
mov
lea
fistpl
ds
jno
push
notl
sub
ljmp
sub
sahf
loopne
scas
pop
aad
rcrb
shlb
jo
std
xchg
int
pop
pushf
push
and
inc
jecxz
test
add
sbb
push
push
fistpll
insb
push
pop
je
mov
jg
cmp
inc
mov
gs
movsl
sub
mov
loop
std
jle
loopne
js
adc
js
test
shrb
mov
in
sbb
adc
adc
adc
mov
jecxz
mov
xchg
sbb
out
fdivr
xchg
push
scas
push
pop
push
lea
fisubrs
or
jbe
cmp
push
push
ret
notl
push
jg
popf
stos
mov
or
addr16
xor
push
das
adc
je
pop
cld
and
inc
pop
je
int
mov
ja
sub
push
inc
cmpsl
insb
jecxz
gs
mov
mov
pop
sub
pushf
mov
jb
cltd
pop
imul
and
ljmp
add
in
fidivl
lods
cmp
jno
clc
xor
aad
movl
mov
mov
mov
sbb
pop
dec
sub
cs
mov
inc
loopne
pop
popf
add
push
mov
jo
das
pop
jnp,pt
push
aas
mov
addr16
jecxz
push
sub
repnz
lcall
arpl
adc
dec
xchg
ss
es
outsb
or
or
jo
pop
std
in
push
je
inc
jns
lods
inc
test
add
xchg
sub
stc
dec
add
std
sarl
test
pushw
pop
ds
inc
fwait
test
cmp
mov
push
jecxz
sub
fadd
push
and
enter
popa
mov
gs
jno
sbb
lock
push
push
in
mov
cmp
push
adc
gs
sbb
lds
fidivl
fwait
loopne
pop
pop
add
push
stc
sbb
mov
mov
xor
mov
xor
int
popa
and
je
mov
or
jle
shl
sbb
sbb
xor
cmp
cmc
dec
insb
push
cli
fisttps
movsb
aad
mov
test
push
imul
jne
int
mov
js
xor
sbb
mov
andl
movsl
pop
dec
shlb
mov
repnz
iret
mov
loopne
lds
repz
pop
jns
mov
xchg
sub
aaa
dec
jmp
adc
push
mov
cli
xor
aam
iret
add
xchg
mov
push
out
fwait
les
leave
lock
aam
cld
ret
pop
mov
mov
mov
call
inc
and
mov
stos
sarb
jge
in
cltd
in
stos
lret
xor
or
xor
test
xchg
loopne
leave
test
lahf
leave
sub
mov
inc
stos
outsb
xchg
pop
add
mov
dec
rep
push
bound
int
cmp
and
push
dec
pop
xor
mov
hlt
inc
stc
test
xor
int
fnstenv
nop
or
loope
add
clc
call
scas
jae
clc
xorl
cmp
sub
rorb
ss
cwtl
iret
jmp
mov
mov
aad
mov
pusha
inc
test
pushf
xchg
lahf
mov
lods
fists
and
arpl
or
push
jae
mov
and
mov
sti
movzbl
xchg
nop
cmp
arpl
push
cltd
sub
xor
push
mov
push
mov
jnp
mov
adc
dec
lcall
push
sbbl
into
or
jl
add
cmpsl
aad
adc
shrl
xchg
out
cmpsl
stos
add
dec
ret
mov
push
lds
testb
std
imul
xor
add
loop
adc
pop
int3
addr16
std
std
cmp
mov
es
adc
je
fcmove
add
loop
or
pop
js
outsl
insl
pop
aas
push
xchg
scas
loop
mov
sub
dec
adc
in
push
dec
push
ds
add
leave
pop
ds
lret
movsb
test
cld
sbb
cmp
inc
dec
ss
add
jl
inc
mov
stos
jmp
push
pop
test
sahf
sbb
repnz
andl
sub
mov
rolb
mov
scas
cmp
or
or
je
insl
sub
sti
xchg
aas
hlt
ss
sti
dec
mov
pushl
js
shl
daa
sbb
gs
orb
push
daa
jl
xor
bound
mov
jge
into
pop
cli
mov
test
aaa
addr16
cmp
test
loope
loop
aam
mov
lods
cmc
or
mov
aam
or
mov
inc
pop
fdivrl
xor
xlat
test
loopne
sbb
cld
push
mov
inc
movsb
ret
sbb
mov
xchg
in
rcr
scas
fldcw
mov
push
cltd
sub
fwait
sbb
sti
movsl
mov
pop
daa
or
xchg
pop
outsb
ror
out
aam
into
rcll
loopne
inc
mov
cwtl
jecxz
cmpb
jg
inc
mov
jbe
jae
cmpsb
dec
dec
rol
in
and
fstps
push
pop
pusha
and
sbb
adc
pushf
outsb
sbbl
pop
jp
mov
inc
mov
xchg
jne
cmp
jne
ja
addb
movsb
sahf
inc
xchg
dec
sub
xchg
gs
les
lods
cwtl
pop
inc
fnstenv
ficoms
cmp
lcall
cltd
js
sbb
ret
jge
dec
outsb
sbb
fnstcw
cltd
xor
fmull
jl
mov
cli
icebp
repz
iret
into
js
sbb
jb
dec
xchg
cltd
enter
adc
mov
adc
pop
fwait
sub
and
jmp
lock
mov
pop
mov
mov
in
xchg
insb
cmp
push
stc
mov
adc
pop
movsb
cmp
mov
inc
fidivl
outsl
pop
lret
mulb
xor
cli
cltd
fildll
aaa
dec
loopne
sbb
pop
lds
sahf
push
fcmovnb
cltd
xchg
xor
ret
mov
lds
sub
test
nop
lds
jb
rcrl
or
stc
mov
pop
pop
push
std
jno
push
in
sbb
xchg
leave
into
icebp
cmp
inc
je
pop
repnz
fs
sub
fldt
jns
lock
lds
cmp
aaa
mov
pop
mov
sbb
jne
repz
lret
lds
cli
xor
lods
bound
sbb
inc
testl
pop
dec
fnstcw
mov
xor
out
test
arpl
xorb
pusha
and
les
mov
call
inc
fldenv
jecxz
fs
and
adc
mov
cmc
push
rcr
dec
les
push
out
push
arpl
shrl
push
lret
pop
xor
sbb
icebp
lock
sbb
in
xchg
nop
push
mov
bound
push
cmp
aad
insl
popf
xchg
sub
and
and
adc
add
into
adc
jp
hlt
mov
addr16
shlb
fwait
xchg
lret
mov
clc
cltd
mov
out
sbb
cmp
pop
repz
jl
or
fnsave
mov
mov
out
lret
call
jb
push
inc
scas
sbb
sbb
jmp
mov
xchg
sub
movsl
test
jge
lods
addr16
scas
dec
lea
dec
cmp
dec
movsb
repnz
in
mov
ljmp
ret
shrl
ret
adc
rorb
add
jno
aam
lcall
int3
int3
pop
push
in
sbb
jge
mov
jo
sub
or
inc
adc
pusha
pop
mov
test
pop
mov
lcall
rorb
jo
lods
cltd
pop
inc
ljmp
pop
and
cltd
dec
pop
cwtl
into
sahf
dec
or
ljmp
cmp
pop
les
adc
mov
mov
or
outsl
or
pop
mov
cmc
inc
out
stos
or
ret
sbb
movsb
stc
xor
jge
jmp
cmp
add
mov
pop
js
in
jp
jns
adc
cmpsb
or
sbb
jne
mov
jmp
push
xchg
inc
xchg
pushl
push
pop
inc
jb
popa
clc
or
mov
bound
adc
xchg
and
push
mov
mov
sub
adc
sub
xchg
cmp
sbbb
loop
call
mov
pop
and
and
popa
sub
jg
aad
pushw
clc
stos
jge
sub
jns
scas
adcl
mov
xchg
fldenv
rcrb
jne
push
and
xchg
jne
rcr
mov
ds
fcmove
ret
mov
sahf
push
adc
hlt
xchg
sbb
dec
mov
push
aas
out
clc
cmp
addr16
les
sbb
dec
adc
imul
mov
movsl
fucomp
inc
jmp
in
xlat
xchg
out
jne
sbb
iret
or
jae
andl
add
rorb
sbb
pop
lods
mov
or
dec
fsubl
xor
jno
jbe
mov
repnz
sub
sub
rolb
mov
stos
jno
movsb
repz
test
daa
loope
push
mov
cpuid
add
sbb
jl
xor
push
xchg
mov
addr16
xor
mov
mov
lods
ss
xor
stc
hlt
inc
sbb
cmp
aaa
aad
lea
dec
lret
mov
push
sbb
popa
or
fisttpll
shl
cmp
inc
test
xor
mov
std
in
dec
cld
and
shlb
xchg
and
lcall
pop
xor
aaa
lock
xor
gs
shlb
adc
popa
or
mov
and
test
mov
and
lods
outsl
dec
enter
jg
decl
push
mov
mov
jp
int
mov
pop
mov
int3
push
xchg
push
or
das
push
icebp
or
mov
sbb
popf
repnz
lahf
mov
mov
test
dec
dec
mov
xor
add
inc
test
or
add
fstpl
cmpsl
imul
mov
pop
or
pop
cmp
movsl
and
inc
and
repz
mov
mov
xchg
add
mov
jge
and
ret
fistpll
xor
dec
fidivrs
lock
bswap
data16
push
enter
mov
pop
mov
scas
ljmp
adc
jno
adc
xchg
pop
loope
daa
lea
in
clc
outsl
hlt
popf
push
call
data16
shll
dec
push
gs
dec
out
mov
cwtl
sub
xor
xor
aas
push
xchg
mov
or
mulb
flds
sub
push
gs
dec
shlb
pushf
sbb
jns
mov
mov
es
lahf
cmpsb
mov
out
fwait
imul
pushf
sbb
cmp
outsl
roll
push
adc
data16
push
sbb
testl
js
mov
lds
and
addr16
mov
popf
jle
lods
xchg
cmp
mov
rolb
push
fsubl
pop
clc
pushf
sbb
and
pop
adc
rcll
scas
scas
popf
mov
xchg
mov
daa
sbb
mov
jo
dec
mov
sti
dec
cltd
sub
sbb
mov
lcall
stos
ror
push
daa
popf
sahf
sub
roll
pop
jne
mov
fs
cmpl
lods
lods
jl
pmulhuw
out
xchg
hlt
popa
pop
jge
and
lea
test
ja
fwait
push
push
push
sbb
arpl
scas
mov
xchg
scas
pusha
dec
push
sahf
cs
ret
cmp
lahf
cmp
loopne,pt
repz
sbb
outsb
pop
mov
fidivs
push
add
lret
test
sub
cmp
mov
sbb
gs
cltd
push
pop
es
jg
inc
jp
mov
mov
insl
cmp
pop
xor
add
mov
mov
and
or
jb
jge
lret
xor
xchg
xor
push
mov
inc
imul
pop
jno
xor
cmp
cs
jo
in
lret
fcoms
int
andl
mov
cmpsl
or
flds
cmp
add
lea
fmull
stos
lock
loope
in
inc
push
shrl
cmp
sahf
xchg
fadd
clc
cmp
fimull
jno
xorb
jno
mov
scas
cld
dec
hlt
dec
insb
dec
insb
sbb
loopne
shlb
ror
mov
mov
push
ja
dec
jnp
ss
xor
lea
les
sbb
mov
sub
fbstp
in
out
jnp
test
xchg
pushf
movups
subl
inc
lods
int3
inc
jl
fimull
or
mov
or
imul
ret
repnz
das
in
and
in
jae
dec
add
or
adc
jle
mov
das
push
pop
imul
adc
lret
push
mov
sbb
shl
sbb
js
ret
cltd
jae
pop
sbbb
push
dec
dec
leave
push
cmp
cltd
inc
adc
mov
add
test
mov
and
lret
push
fisttpl
mov
test
out
xor
xchg
jnp
ds
decl
negl
out
mov
inc
out
fistpll
imul
out
inc
push
xorl
out
sahf
fwait
adc
inc
mov
cwtl
out
xor
repz
mov
adc
jns
ja
inc
pop
mov
mov
mov
or
call
inc
scas
aaa
xchg
sahf
push
in
sbb
push
xchg
mov
inc
in
pop
or
subl
insb
in
sbb
sub
cld
cltd
push
pop
mov
call
ret
jge
mov
imul
je
xchg
into
push
repz
sub
stos
fstps
and
fmuls
dec
push
js
push
dec
leave
xor
push
or
pop
mov
fdiv
dec
or
outsl
in
scas
mov
mov
call
test
pop
inc
push
lods
daa
ljmp
lods
adc
cli
js
movsl
test
jg
add
xchg
cld
pop
pop
inc
je
and
fldcw
mov
mov
test
mov
adc
or
adc
add
or
mov
je
enter
and
in
insb
sub
mov
xchg
adc
ljmp
dec
pop
pop
mov
mov
js
jae
je
loop
imul
mov
lock
shl
sahf
adc
outsb
fmuls
arpl
or
in
push
xor
loopne
insb
xor
js
iret
scas
mov
scas
push
jl
xchg
mov
xchg
jl
rorl
les
pop
mov
jge
lock
mov
xor
cmp
pop
add
adc
jae
je
mov
imul
mov
or
pushl
mov
xchg
jecxz
xchg
lds
out
mov
stc
sub
mov
leave
popa
pop
xchg
inc
aaa
scas
and
ret
adc
pop
ds
scas
cmpl
sbb
sbb
icebp
mov
in
int3
mov
fucom
fwait
divl
inc
pop
nop
and
inc
adc
jnp
push
pushl
mulb
arpl
enter
mov
or
push
cmp
pop
jle
mov
xor
jmp
clc
in
sbb
cmpsb
fs
mov
pop
out
cli
enter
dec
fistps
stc
xor
jge
jmp
xlat
xchg
popa
aas
lret
jl
sub
push
xor
add
je
cmp
test
mov
cmp
ja
jns,pn
mov
and
dec
add
mov
rcll
sbbb
cmp
adc
inc
xor
lret
mov
test
stos
sub
mov
sbb
in
dec
sbb
cltd
add
mov
sbb
enter
cmpsb
fsubrs
push
scas
dec
mov
nop
jo
jns
mov
xchg
pusha
mov
loopne
gs
cmpl
cmp
pop
mov
lock
jle
xchg
jmp
mov
adc
fisttpll
call
ret
dec
mov
adc
loope
xchg
mov
or
mov
sbb
repz
inc
in
int3
and
fsubrp
ss
inc
mov
pop
sbb
jl
scas
les
mov
mov
fwait
out
es
mov
pop
fwait
push
stos
lods
loope
bound
rolb
je
mov
sub
fwait
mov
push
xor
test
push
jb
loopne
xchg
push
lods
sub
scas
fsubrs
jo
mov
jmp
sub
xor
stos
mov
jo
pop
adc
jp
add
sub
fdivs
mov
int3
mov
cmc
adc
lods
mov
dec
sub
adc
nop
std
and
sbbl
push
and
mov
mov
jmp
cwtl
js
inc
add
sbb
push
sahf
cmp
outsb
pop
std
jo
push
in
cmc
movl
sub
outsb
negb
mov
sti
and
roll
ja
xor
add
enter
imul
addr16
mov
pop
sbb
sbb
andb
and
call
popa
fiadds
stos
adc
imul
add
sub
add
cli
dec
mov
sbb
mov
iret
mov
adc
pop
xor
mov
jecxz
add
mov
mov
scas
inc
adcl
test
orl
push
test
ds
test
sub
or
sbb
pop
fcmovbe
lds
in
insl
inc
addr16
xchg
xor
mov
mov
and
mov
pop
sbb
js
rorb
mov
dec
je
dec
add
pop
xor
fbld
xor
je
mov
ss
inc
popa
cmp
hlt
sub
imul
mov
and
pop
xchg
mov
or
mov
adc
ret
test
adc
cmpsl
movsb
leave
inc
jle
mov
push
mov
push
out
add
enter
cmp
or
jecxz,pn
pop
push
xorl
cltd
ja
pop
sbb
call
cmp
jmp
sub
clc
xchg
add
into
mov
in
fwait
and
aas
imul
loope
mov
frstor
cmpsb
mov
subb
imul
inc
je
sbb
inc
sbbl
cli
mov
mov
movsl
jne
cltd
cmp
hlt
inc
fstpl
leave
hlt
loopne
mov
mov
add
jecxz
dec
dec
or
int3
lret
jne
hlt
in
out
popa
jmp
xor
fcoms
mov
mov
in
mov
and
pop
lods
lcall
ret
inc
test
imull
iret
xchg
shll
out
pop
inc
jecxz
cmp
push
popf
repz
std
inc
sbb
xor
in
insb
outsb
inc
jbe
xor
sbb
add
mov
mov
lods
insl
mov
and
lahf
cs
push
outsb
fmul
pop
dec
mov
cmp
fcomps
and
test
rorb
outsb
cmpsl
imul
mov
adc
or
or
outsl
and
hlt
lods
jnp
aaa
dec
xlat
lret
and
ja
pop
mov
aam
test
mov
insb
test
adc
add
in
imul
int3
cmp
mov
data16
roll
bound
iret
lock
sbb
pushf
jg
out
push
aas
jecxz
cmp
repz
mov
cli
out
inc
mov
jno
mov
int3
add
mov
daa
and
sub
mov
popa
jge
add
inc
and
jmp
mov
addr16
aam
jecxz
cli
sub
movsb
aaa
xor
lods
cmpsl
pop
xchg
fildll
hlt
lahf
aaa
add
cmp
or
pusha
sub
mov
stc
xor
adc
push
mov
xor
popa
jecxz
cmpsb
and
ret
push
loop
and
dec
loopne
jbe
loopne
leave
popf
loopne
aas
xchg
lret
stc
fidivrs
or
adc
adc
push
lds
push
add
mov
gs
lcall
or
arpl
sub
lcall
out
outsb
data16
fwait
jbe
and
inc
rcrb
in
ja
js
xchg
adc
je
mov
fbld
or
test
fldl
push
enter
push
cmp
mov
fisubrs
insl
movb
es
sbb
ja
adc
call
arpl
or
mov
dec
int3
dec
repnz
shl
fisttpll
push
xor
sbb
das
out
mov
xchg
loop
push
int3
pop
mov
inc
jle
mov
call
sub
pop
mov
mov
popa
mov
shlb
mov
xchg
mov
fwait
push
mov
adc
or
ret
dec
mov
loop
add
jno
and
lods
inc
sub
inc
push
call
pop
loop
ficompl
xor
pushf
sarl
mov
nop
js
mov
outsl
pusha
stc
cmp
push
sahf
sub
pushf
inc
addl
jl
movsl
adc
mov
inc
xchg
addl
push
sahf
dec
inc
inc
inc
data16
jmp
cmp
insl
inc
xchg
ret
pusha
popa
adc
push
push
jg
add
sub
test
mov
imul
pop
fldcw
fbstp
jno
inc
dec
inc
int3
and
mov
in
mov
push
mov
call
jno
push
xchg
or
cwtl
xor
mov
inc
ja
xor
inc
or
das
sti
sarl
scas
movb
mov
mov
xchg
js
sub
cmpsl
xor
outsb
sbb
popa
test
xchg
jnp
jae
arpl
mov
adc
push
pop
cs
dec
add
pop
repz
test
aam
sub
lcall
xor
cmp
popa
cmp
dec
mov
sbb
cmpsl
clc
adc
daa
xchg
jb
shl
mov
xchg
add
lods
mov
sub
mov
sti
ret
xor
xchg
movsb
sarb
mov
pop
jecxz
cmp
xchg
or
cs
and
and
dec
in
scas
cld
pop
adc
sub
jno
imul
roll
ja
jb
pop
or
cmp
lret
loop
sbb
daa
push
mov
and
js
mov
adc
pop
add
cmpsl
mov
in
mov
mov
add
mov
loop
lods
mov
xor
retw
mov
rcr
lcall
sub
xchg
pop
add
gs
testb
outsl
mulb
xchg
cmp
add
add
popf
adc
xor
push
mov
rcll
lcall
fnstsw
je
aad
mov
ror
gs
xchg
sub
push
push
fsubl
subl
hlt
je
test
sbb
sbb
jmp
dec
xlat
push
pop
xchg
test
in
sbb
ljmp
lret
jae
fcomps
jnp
xor
and
xor
lcall
pusha
in
dec
xor
fsubrs
xchg
movsl
mov
leave
leave
icebp
xor
cmp
dec
adc
subl
lcall
pop
loopne
xor
cwtl
mov
jbe
xchg
or
out
adc
xor
shrl
mov
pop
xchg
sarb
mov
test
mov
add
jmp
mov
scas
stos
sbbb
sub
fxch
sbb
enter
sbb
mov
inc
add
lds
test
or
and
dec
add
arpl
inc
sbb
dec
xchg
lods
ficoml
mov
inc
pop
cs
push
je
pop
pop
pop
jecxz
sub
cs
mov
cmpsl
cwtl
jb
jns
out
mov
mov
fistl
aaa
xchg
or
clc
loopne
sub
test
js
stc
push
mov
or
xchg
test
dec
stc
popa
jb
push
iret
into
aas
loop
je
fcompl
movsl
sbb
xchg
syscall
aaa
inc
add
sbb
psllq
lock
shlb
imulb
aad
std
push
je
or
ds
cmp
and
cli
jl
lret
sbbl
adc
rclb
ljmp
adc
shrb
repz
jg
aas
and
popa
sub
jmp
sub
jge
cmp
jb
lea
stos
xchg
and
xchg
cmp
icebp
aam
adc
stc
mov
rcrl
and
mov
push
dec
cli
sbb
xlat
jb
or
add
adc
xor
mov
sub
sbb
cmc
testb
fistl
dec
sbbb
scas
pop
movsl
fdivs
sahf
fadds
dec
mov
jle
sub
arpl
cmp
or
dec
push
and
lock
xchg
fdivl
leave
jno
jecxz
and
inc
and
and
cwtl
mov
mov
or
sub
movaps
into
dec
dec
test
mov
push
mov
sarl
imul
mov
mov
inc
subb
hlt
adc
pop
xchg
sti
ret
arpl
and
mov
add
outsl
adc
mov
mov
mov
test
xchg
dec
pop
icebp
lods
scas
push
adc
fcoms
rep
xchg
rcl
and
mov
push
adc
mov
xchg
cmp
popa
jg
pop
xchg
fmuls
data16
pop
syscall
jle
fildl
add
xchg
or
loope
negb
mov
ss
enter
rorl
inc
popf
inc
xlat
sbb
sub
pop
lods
cmp
and
push
jne
jge
hlt
xor
lods
inc
dec
sti
sbb
insl
fs
push
ss
lcall
or
hlt
sarb
std
push
stos
lea
pop
cmp
cmpsb
mov
outsb
hlt
cmc
xchg
mov
stos
mov
cwtl
ficoml
xor
adc
shll
sbb
pushf
movsl
mov
sbb
cmpsl
jo
mov
mov
ja
loope
xchg
jecxz
iret
cli
xlat
in
mov
cmpsb
inc
call
hlt
aaa
data16
inc
mov
popf
inc
mov
inc
cmpsb
mov
xchg
push
mov
loop
scas
push
mov
mov
test
clc
aam
inc
mov
lods
jp
je
jmp
sbb
xchg
into
outsl
fwait
xor
mov
push
pop
mov
lret
mov
xchg
test
fldcw
ret
and
fnop
das
movsb
aas
lea
imul
jno
pop
in
arpl
pop
push
cmpsl
repz
fisttps
scas
xor
pop
mov
fistpl
mov
jmp
jmp
pop
sub
and
sbb
fwait
mov
addr16
lods
sub
pushf
in
pusha
xor
pop
push
shl
pushf
imul
xor
xor
aaa
stc
adc
dec
es
jecxz
xor
mov
sbb
cmp
pop
pop
or
and
test
fldcw
and
add
cmpl
sbb
jns
int3
gs
ret
push
aaa
ss
jmp
pop
mov
mov
push
cmp
sub
outsl
xchg
arpl
mov
mov
jge
pop
sahf
sbb
pop
push
dec
sbb
shl
cmp
lcall
ficoms
adc
sub
mov
mov
pop
bound
cmp
sub
int
pop
out
in
outsb
cld
iret
cmpsl
xlat
cmpsb
test
lods
cmpsl
idivb
sbb
cmp
push
stc
add
loopne
popa
and
mov
or
inc
xor
dec
movsl
loop
lods
sub
stos
into
or
adc
push
jnp
jb
pop
and
lods
push
out
sbb
test
sahf
std
push
and
add
das
insl
pop
xorl
pop
push
adc
int3
xor
sti
or
gs
hlt
inc
inc
jmp
mov
pusha
or
insb
dec
movl
lahf
rorb
jns
xor
loopne
loop
repnz
test
add
mov
dec
jbe
sbb
sbb
or
pusha
pop
inc
test
push
inc
fildll
adc
fistpll
xchg
jne
je
pop
addr16
pop
leave
pop
test
stos
jecxz
push
addr16
cltd
mov
mov
cmp
loopne
clc
icebp
pusha
scas
shll
push
push
mov
loop
pop
pop
pop
xor
adc
and
arpl
push
xchg
dec
pushf
dec
ret
loopne
push
cmp
sub
add
rorb
loopne
cmp
out
jb
adc
inc
or
pop
stos
test
rcr
push
mov
push
arpl
mov
dec
or
sbb
xchg
xor
sar
xchg
pop
mov
jg
and
xchg
mov
lods
jnp
outsb
or
clc
xchg
lret
jo
jnp
leave
imul
ja
mov
jno
dec
push
and
adc
cltd
pushf
pop
jae
dec
or
lea
popf
mov
xchg
daa
add
xchg
adc
or
and
jmp
xchg
cs
aam
jnp
lret
adc
pop
call
sbb
dec
push
lea
sti
test
pushl
pop
ja
fwait
xor
cmp
sub
mov
aad
dec
dec
ljmp
xor
push
stos
cmc
cmp
mov
nop
in
inc
outsl
iret
sub
cltd
adc
mov
jb
push
xchg
jbe
mov
mov
lcall
in
jl
arpl
push
rcrl
icebp
push
mov
jb
test
dec
cmpsb
mov
xor
stc
sar
mov
cld
out
mov
jns
push
mov
dec
aas
js
insb
out
sub
jl
push
mov
pusha
xchg
push
and
and
adc
cld
dec
xchg
jbe
push
mov
adc
jns
push
mov
test
inc
mov
or
xchg
insl
xor
mov
push
mov
cmpsl
add
push
in
fwait
test
xor
je
orl
fimuls
icebp
sbb
sbb
clc
fsub
repnz
sbb
aad
xor
xor
pushf
aad
mov
and
popf
jae
std
mov
pop
pop
pop
sub
pop
cld
pop
fsubrs
lock
cwtl
call
in
mov
dec
jge
mov
jle
mov
xor
jle
fsubr
jmp
daa
pop
xor
and
xlat
inc
testb
jb
dec
test
dec
xlat
cmp
adc
pop
fdivs
cmp
sub
mov
mov
sub
mov
push
stc
testb
fs
inc
inc
stos
or
mov
sahf
scas
dec
sbb
fisttpll
mov
inc
or
int
xchg
sub
push
aas
loopew
popa
pop
in
sub
push
or
and
cmp
fnsave
aas
cwtl
leave
push
mov
push
pop
inc
sub
clc
push
test
inc
std
and
mov
ja
icebp
mov
mov
and
fcmovbe
and
stc
fwait
inc
jp
adc
mov
fsincos
lea
into
ret
cmpsl
inc
ret
int3
mov
and
je
gs
push
mov
je
test
mov
mov
out
sub
adc
add
fwait
push
icebp
or
mov
cmp
fnsave
push
pop
dec
stos
pop
daa
xor
cli
xchg
inc
dec
into
xchg
adc
cmp
jp
push
aam
aam
push
push
sub
xchg
mov
mov
fldt
push
mov
clc
repnz
mull
jl
outsl
sahf
pop
or
cmp
push
sarl
and
push
in
adc
jg
fbld
leave
popf
push
dec
pop
pop
call
out
rcl
xor
je
push
mov
and
pop
push
cmp
lods
jmp
adc
mov
pop
dec
xorl
push
and
ret
outsl
xor
and
inc
stos
pop
mov
xor
call
ret
test
xchg
sub
push
jns
das
mov
xchg
leave
fucomip
or
and
or
repz
lahf
rcl
mov
jmp
cwtl
lcall
jge
or
xorl
out
ret
sbb
scas
jg
ss
repz
xchg
insl
in
std
test
mov
pop
cmp
mov
std
scas
sub
pop
pop
cmp
aad
aas
jmp
loope
icebp
imul
xchg
enter
popl
mov
xor
daa
fwait
jecxz
lea
lret
repz
daa
push
repz
inc
ret
sbb
ret
into
or
sbb
or
mov
push
adc
cmp
mov
mov
mov
push
in
std
push
sub
testl
sahf
pop
lret
arpl
xchg
xchg
fdiv
lahf
or
and
std
xchg
test
outsl
push
push
ja
mov
lea
xchg
mov
mov
sub
push
rorl
adc
push
insl
adc
leave
adc
inc
test
or
pop
and
movsb
jns
popl
jnp
clc
lret
test
inc
scas
jbe
jns
lods
out
ljmp
push
into
mov
mov
pop
daa
ffree
cmp
imul
fcmovnb
pop
cmpsl
push
test
pmaxub
ss
push
cmpsb
leave
lahf
sub
sub
pop
push
cmp
fucom
pop
outsl
sbb
sub
mov
add
add
or
push
jnp
jmp
sbb
add
pmullw
mov
pop
outsb
sbb
int
xlat
subl
aas
cmp
icebp
dec
adcb
jno,pt
lods
mov
mov
pop
sbb
adc
int3
sbb
xor
roll
push
ljmp
je
test
dec
mov
je
cmc
mov
jmp
sbb
push
in
movsb
dec
inc
dec
mov
inc
xchg
sub
push
or
pop
mov
sahf
or
push
or
mov
cmp
cmpsb
mov
push
xchg
dec
jmp
xchg
movsb
and
inc
mov
aas
ret
rolb
clc
aad
int3
xchg
aaa
hlt
sbb
into
pop
or
movsb
aam
fbld
fildl
sbbb
inc
inc
mov
loope
pop
jecxz
add
mov
add
sbb
add
addb
popa
xchg
jno
jo
test
push
adc
ret
jp
jb
cmp
arpl
dec
lods
cmp
cmp
dec
push
cmovl
out
popa
scas
lahf
popa
lods
iret
mov
push
cld
out
aaa
repnz
or
lahf
mov
cmp
outsb
sti
mov
fsubrs
push
das
int3
ss
repz
adc
pop
das
mov
out
fimull
out
lret
mov
in
hlt
jb
sahf
push
cwtl
aas
lcall
push
cs
stos
out
adcb
sub
pop
adc
xor
in
ror
in
shl
mov
add
cmpsl
pushf
push
sbb
mov
dec
icebp
push
out
jae
lea
jle
mov
mov
mov
xchg
sbb
popf
nop
push
jno
or
jle
call
adc
sbb
jo
mov
inc
dec
pop
iret
movsl
push
bound
test
xor
mov
repz
cli
nop
sbb
pop
scas
mov
add
jb
shl
sub
insb
or
negb
bnd
mov
hlt
xor
jle
or
cmp
out
jmp
mov
and
mov
fcompl
inc
lea
sub
in
psllq
aaa
or
mov
mov
xchg
pop
roll
add
and
repnz
mulb
ds
rclb
jl
jp
xchg
lds
cmpsl
or
adc
int3
lret
sub
fcoms
das
mov
xchg
and
data16
and
dec
cmp
sti
stos
sahf
lds
pop
stos
insl
cmp
hlt
xchg
loopne
mov
ds
aas
pop
out
mov
movntq
rcll
ss
dec
stc
outsb
out
mov
std
xchg
lods
mov
fistl
out
push
push
cmp
adc
fmuls
cmp
add
mov
int
xor
icebp
lods
jmp
mov
push
jns,pn
sbb
popf
addr16
mov
mov
imul
xchg
sub
and
test
cmp
or
cmp
mov
mov
sbb
loope
ss
lret
sbb
scas
lock
mov
add
iret
into
xchg
push
fdivrl
pop
in
dec
out
push
fiaddl
pop
scas
gs
cmp
rclb
mov
imul
pop
sbb
push
ljmp
sbb
pop
inc
in
pop
sub
cld
jae
test
imul
andb
or
xchg
sahf
pop
cmpsl
dec
aaa
mov
xor
rcr
sbbl
sbb
xor
cmp
ret
add
repnz
mov
dec
out
cmc
ss
cmp
push
outsl
xchg
jb
fsubs
add
inc
mov
sub
xchg
lds
add
xchg
out
mov
sbbl
andl
mov
dec
sub
lock
dec
xchg
cs
cmpsl
push
jp
mov
cmp
mov
cmp
sbb
mov
cmp
or
dec
xor
mov
cmp
shll
std
add
out
and
stos
pop
xchg
jb
push
cmpsl
mov
or
cmp
cwtl
cmp
xchg
cmc
or
cmc
aad
fisubrs
mov
addr16
cwtl
outsb
pop
movsb
sub
xlat
pushf
lods
dec
and
mov
sub
lock
push
and
roll
dec
add
sti
mov
daa
repz
mov
pop
cmc
inc
and
cmc
fstsw
and
repz
add
mov
push
xchg
rcl
pop
lcall
pusha
jae
and
stc
lock
lcall
ds
jne
lcall
push
xor
movsb
call
sar
cmpsl
enter
push
mov
sbb
mov
mov
out
into
clc
mov
pusha
aaa
pop
lock
sbb
push
sbb
movsb
es
xchg
test
lods
popf
jmp
pop
mov
fildl
int3
lock
pop
pop
movsb
stos
setno
mov
jecxz
mov
mov
dec
pop
cmp
popf
push
xchg
sub
sbb
push
xor
int3
stos
sub
cmp
push
push
xor
sub
sar
test
mov
pop
xchg
test
cmpsb
fs
movl
push
mov
or
xchg
bound
mov
or
adc
in
cli
test
std
jg
push
xor
cmc
inc
and
xor
mov
ljmp
insl
mov
dec
add
inc
lcall
mov
add
cmp
lds
adc
aam
test
insb
sahf
aad
push
push
or
cs
add
adc
mov
xchg
fnstcw
push
loopne
test
inc
sti
xchg
mov
lock
fs
and
sarl
lahf
xchg
dec
mov
cli
int3
fsts
iret
cmpl
pushf
cmpsl
fnsave
and
fiaddl
pop
adc
test
pop
pop
mov
push
pop
gs
test
mov
ror
adc
mov
stos
mov
stos
ss
sbb
ds
mov
lods
dec
jne
lea
mov
xchg
les
dec
lds
sti
in
push
add
jg
stos
and
aam
sub
stc
mov
add
sbb
cmp
dec
mov
sbb
outsl
inc
mov
mov
neg
data16
push
insb
movsb
xchg
pop
les
ljmp
pop
cmp
test
arpl
outsb
mov
jno
pop
jo
mov
add
jle
xor
jl
sbb
cmc
adc
adc
int
fildl
add
add
dec
jo,pn
pop
aad
and
fistps
sub
sub
xchg
outsl
pop
add
shlb
add
add
cmp
repz
imul
xlat
jo
outsb
pop
cli
lret
rcrl
loop
mov
add
pushf
mov
iret
stc
sbb
jne
mov
push
xchg
int
dec
mov
push
jmp
add
jg
sub
subl
mov
cli
jnp
xchg
mov
inc
xor
jne
dec
mul
fcompl
rcll
aam
mov
jns
lds
aam
push
fbld
inc
push
jne
and
jbe
mov
testl
pop
mov
std
mov
int3
or
cmp
cmp
cmpsl
les
aad
lock
sbb
lidtl
les
js
subb
stos
xchg
dec
mov
adc
jg
mov
inc
pop
icebp
xchg
and
and
inc
sub
mov
pop
mov
cmp
cmp
mov
gs
fldenv
mov
cmp
stos
pop
xor
imul
cwtl
test
hlt
xchg
sub
adc
aaa
pop
inc
jle
bound
or
pop
pop
dec
cwtl
jle
int
push
dec
stc
and
insl
lods
es
inc
inc
dec
fs
scas
aad
fidivrl
das
cmp
daa
add
jne
pop
mov
inc
sub
mov
xorl
clc
cmp
sub
push
imul
adc
add
psrlw
scas
mov
mov
sub
pop
jns
aam
pop
mov
ret
xchg
mov
xchg
popf
push
in
iret
pop
jg
mov
jne
pusha
cmp
pop
popf
insb
stos
push
xchg
daa
rcrl
mov
jl
icebp
jp
xor
std
inc
js
xchg
lcall
imul
cwtl
cltd
arpl
xchg
lahf
sub
in
mov
enter
leave
dec
and
out
arpl
cmc
xchg
push
xchg
mov
ss
pop
pmulhuw
mov
cmpsl
push
cli
cmp
or
xlat
lcall
cmp
adc
orl
mov
hlt
mov
mov
shlb
add
xchg
jmp
inc
or
mov
adc
and
out
enter
dec
push
in
mov
mov
inc
dec
pop
jno
mov
je
imul
xor
sub
inc
out
sub
ljmp
cld
mov
or
loop
dec
dec
repnz
pop
testb
pop
xor
scas
test
icebp
jle
and
ret
mov
pop
push
cmp
pushf
fs
jle
push
fisttps
into
jae
iret
jo
pop
int3
loopne
jo
xchg
add
ds
jle
lcall
shr
rorl
loope
orl
cmp
sbb
cmpsl
mov
aad
ret
aad
push
add
std
hlt
pop
lcall
push
fwait
jnp
mov
or
mov
inc
jp
ss
int3
repnz
dec
mov
sahf
stos
ja
sbb
sqrtps
or
sbb
or
add
cmpsb
pushf
inc
sub
sbb
add
scas
jo
cs
pop
xor
fwait
test
pop
fisttps
jl
loopne
mov
aas
test
dec
and
call
jb
cmp
and
jne
inc
jmp
inc
adcl
pop
mov
not
arpl
pop
adc
and
shlb
sbb
scas
lahf
mov
test
jo
repz
std
cmp
add
movsb
jae
stc
cmpsl
xor
sub
ret
ja
mov
pop
movsl
rorl
clc
rcr
xchg
lods
jle
sub
push
mul
rolb
push
sbb
inc
out
movsl
into
xor
add
jmp
xchg
xchg
pop
pop
or
in
sbb
lcall
and
and
adc
bound
push
mov
xchg
or
insb
jmp
insb
cmp
pop
in
out
arpl
jp
hlt
stc
mov
xchg
xchg
xchg
aas
pop
push
push
xor
and
scas
cmp
pop
roll
xor
sbb
dec
ror
shr
cmp
lock
shlb
lret
add
pop
popf
pop
xchg
mov
adc
ss
movsb
repnz
stos
cwtl
aad
and
jns
insl
popa
inc
cmp
adc
mov
mov
lods
or
jg
jo
mov
mov
sbb
lahf
xchg
ficomps
mov
push
pop
cmp
movsl
scas
or
std
iret
xlat
dec
xchg
mov
data16
roll
sub
dec
imul
push
pop
bound
fistps
leave
in
push
cmpsl
cmp
out
xchg
negl
xchg
andl
inc
pop
leave
push
lret
inc
jecxz
test
stos
fsubrs
out
xchg
mov
jno
scas
fdivl
jg
pusha
jo
cmpsl
sub
cltd
adc
cmp
bound
gs
mov
in
aam
mov
add
jle
cltd
cltd
xchg
sub
es
push
and
loopne
enter
in
pop
sbb
push
mov
inc
lds
cmp
int
int
cli
sub
gs
popa
push
pushaw
int3
imul
or
std
mov
push
insb
adcb
punpcklbw
pop
nop
mov
pop
pop
popa
and
popf
pop
lods
sbb
imul
outsl
popf
je
dec
add
jge
aam
pop
xor
arpl
std
pop
clc
add
movsb
stos
enter
sub
push
pop
dec
pop
sbb
sbb
lret
mov
mov
sub
add
mov
jp
mov
or
ds
xchg
ja
cmpb
jo
inc
imul
mull
out
sahf
pop
mov
pop
test
jae
and
pop
jp
subl
mov
lods
xor
push
les
sbb
outsl
sub
mov
mov
xor
jnp
stc
loop
lret
test
lret
loope
inc
inc
cltd
fadds
pushf
mov
cli
jge
popf
outsl
stos
or
xor
aam
xchg
shl
outsb
mov
push
xchg
rcl
cltd
shlb
push
cmp
cs
or
mov
jbe
cltd
add
outsl
push
xchg
push
cmpsl
lds
sub
out
mov
pop
pop
int
in
pop
in
aad
pop
js
in
and
mov
mov
cmp
and
or
fwait
loopne
xor
jle
pop
lretw
add
cmp
sbb
or
cmp
orb
push
adc
outsb
adc
cmp
and
insb
cli
push
imul
mov
mov
arpl
loope
out
sbb
outsb
sahf
testl
jmp
jne
negb
sbb
sahf
lods
and
and
and
xchg
repnz
dec
pop
fisttpll
push
jbe
xor
mov
jo
icebp
ret
cmp
inc
clc
movsb
push
sbb
xorb
pop
push
mov
sti
cmp
lock
mov
hlt
cmp
repz
pop
xor
shlb
cmp
ds
insl
in
jns
insb
movsb
push
fnstcw
cmc
sahf
mov
mov
jbe
or
sub
and
jns
loopne
lahf
mov
push
jne
push
int3
push
jecxz
and
notb
pop
jge
jmp
inc
es
add
pop
imul
push
adc
pop
daa
xchg
call
fs
stc
ret
aas
stos
jnp
sti
pop
sbb
in
push
bound
push
adc
fidivrl
push
mov
dec
adc
mov
and
int
mov
jns
stos
jb
cmp
sub
push
or
clc
cmp
cmp
pop
xchg
sbb
test
dec
mov
ljmp
push
cmpsb
xchg
mov
dec
and
rcrl
mov
and
stos
sub
sbb
aas
ss
bound
xor
out
dec
nop
mov
repz
lds
ljmp
jno
addb
dec
jl
push
push
inc
push
add
dec
outsb
mov
push
outsl
enter
mov
pop
inc
xchg
lock
sub
sbb
and
xchg
stc
bound
push
cmp
mov
push
es
sbb
sub
and
and
xchg
sarl
lea
je
cmp
push
enter
flds
mov
xchg
add
lcall
ds
mov
push
mov
popa
pushl
mov
mov
adc
and
jae
mov
xchg
inc
jbe
insb
xchg
lret
scas
cld
or
push
std
mov
add
mov
testl
mov
jno
dec
xchg
jo
out
fsubrs
jb
add
adc
sub
cli
xor
cmp
cmp
xchg
xchg
cmp
cmpsl
mov
inc
push
iret
sub
cmp
fs
mov
sub
mov
lods
jp
mov
mov
hlt
shl
sub
into
mov
xor
ffreep
jo
loopne
jmp
int
jge
cmp
jbe
sbb
movb
mov
movsb
in
cwtl
bound
mov
je
cltd
mov
and
pop
lret
pop
inc
lock
sub
xlat
sbb
outsl
test
outsl
aas
in
push
dec
rorb
cmp
mov
pop
sub
fistl
stos
enter
hlt
js
pop
or
or
rcl
xor
adc
ficoms
decl
aad
fnstenv
ret
mov
loope
mov
inc
test
xor
jmp
mov
test
inc
stc
out
mov
ljmp
out
jle
fsubrs
push
jg
add
adc
push
out
sahf
pop
out
cli
andb
movsl
imul
sub
pop
clc
mov
cmp
mov
into
addl
cwtl
mov
adc
xor
out
addr16
movsl
insb
loopne
insl
gs
push
adc
push
mov
pop
mov
inc
movl
test
cmp
cmp
pop
popf
es
pop
add
and
fwait
addr16
add
mov
sbb
mov
sti
push
xorl
out
xchg
adc
cmp
jmp
rorb
cmp
mov
das
inc
int3
les
das
pop
fnstsw
pop
jp
jl
add
sub
lock
hlt
sub
cmp
imul
or
sarb
sahf
or
std
fiadds
mov
repnz
lods
cwtl
ret
sub
loop
idivb
subb
mov
fucomip
leave
sbb
adc
rcl
pop
dec
into
icebp
xchg
mov
xor
cld
mov
sub
add
push
sarl
loopne
push
add
sub
ds
mov
rclb
add
ljmp
in
mov
lahf
enter
icebp
repz
scas
and
lret
mov
out
dec
ljmp
cmc
aam
lock
adc
cltd
dec
into
or
mov
lods
das
mov
andb
sbb
pop
mov
mov
lods
xorb
sbb
test
cld
and
mov
inc
and
stos
xor
xchg
xchg
out
in
std
xchg
cmp
xor
in
xchg
lods
jle
fwait
rcrb
out
jmp
or
lea
push
xor
js
xchg
ljmp
mov
sub
inc
cmp
lcall
or
ficoml
das
cmp
cmc
aad
cmpl
adcl
mov
pop
mov
sub
popf
cmp
add
lds
or
hlt
mov
inc
push
add
mov
test
mull
push
jae
adc
fistpl
xchg
orb
nop
xchg
inc
mov
xor
in
adc
xor
push
dec
out
sti
mov
xchg
leave
js
dec
loop
popf
jl
cmp
leave
sub
imul
pop
bound
xor
and
das
imul
in
pop
mov
xchg
andb
sbb
and
jp
dec
scas
dec
and
aam
test
clc
fmuls
lcall
out
js
outsl
adc
add
aad
jns
pop
loope
gs
xor
push
hlt
shlb
dec
dec
dec
jo
inc
cmpsl
xchg
ret
xchg
jl
aaa
outsb
imul
sbb
imull
and
fld1
out
mov
fs
xchg
mov
loope
mov
out
dec
loopne
leave
pop
pop
inc
xor
xchg
mov
adc
popf
into
cmpsl
xor
roll
sub
out
jno
repz
jg
fsubrl
add
inc
cmp
pop
sbb
arpl
jge
add
pop
pop
clc
add
xchg
scas
cmpsb
adc
pop
leave
sbb
int
subl
sarb
mov
nop
or
push
mov
mov
scas
jg
push
jle
iret
mov
sbb
mov
mov
daa
mov
js
mov
loop
ffree
jg
mov
pop
push
inc
leave
dec
das
fcomps
pop
jge
and
scas
imul
or
into
mov
test
int
adc
fsubrs
jecxz
and
mov
sbb
sbb
sbb
ret
arpl
dec
cmpsb
or
rcll
xchg
lret
lds
dec
jl
mov
mov
fstpt
ds
hlt
jne
jle
fcom
testb
jp
pusha
jp
push
xchg
push
imul
jns
pop
pop
outsl
sbb
adc
cwtl
sbb
ss
and
pushf
jbe
stc
call
fnsetpm(287
pop
movsl
and
xorl
pop
sbb
jb
lahf
int
inc
xchg
loop
inc
stos
outsl
lods
inc
mov
sbb
aaa
xchg
mov
movsl
popa
bound
loop
or
scas
and
inc
mov
push
int3
inc
pop
pop
push
cld
dec
loope
es
xchg
inc
jb
cli
pop
aas
jl
xchg
arpl
stos
dec
mov
movsb
das
adc
pop
pop
cmpsl
adc
cli
in
jge
xchg
mov
cs
pop
mov
inc
daa
add
add
push
mov
mov
loopne
fbld
das
or
aas
mov
inc
inc
out
dec
adc
insb
add
or
nop
inc
movl
adc
jo
push
cmpsl
xchg
stos
sub
and
push
mov
fnstsw
mov
enter
imul
adc
rclb
rcrl
lret
jmp
fcomps
jbe
add
or
cmp
imul
out
mov
int3
cmp
mov
pop
cld
lret
outsb
out
into
clc
mov
dec
mov
mov
fildl
sbb
cmp
filds
imul
mov
adc
push
mov
sbb
xlat
test
shrl
cs
push
scas
insl
mov
rorb
push
stc
push
pop
jg
dec
jle
pusha
shr
mov
cmp
dec
xor
ds
lret
imul
je
cmp
lods
js
lret
addr16
mov
aaa
lods
in
rorl
stos
sti
mov
xor
jmp
mov
and
adc
outsl
or
repnz
fnstcw
or
inc
mov
pop
stos
and
js
or
jmp
mov
cmovs
or
pop
pop
mov
stos
push
xchg
stos
pusha
push
rolb
push
push
loope
or
iret
mov
loopne
out
adc
dec
cmp
stos
lret
or
pushl
adc
popf
xchg
jnp
divb
cmpsb
add
mov
lret
xchg
loop
push
mov
loopne
jl
in
jmp
inc
cmp
movb
test
mov
out
xchg
test
and
xchg
lret
adc
stos
test
and
incl
les
lds
aam
fs
lods
sahf
sub
lcall
test
notb
cmp
or
loope
outsb
dec
in
sbb
lcall
sbb
add
adc
dec
dec
mov
adc
out
aas
ret
es
imull
ss
cmp
ljmp
xor
cwtl
jle
dec
jne
mov
inc
mov
cmpsb
push
outsl
inc
adc
aaa
movsb
int
loop
cld
jl
add
push
push
std
movsl
or
and
inc
repz
out
xor
stos
xchg
imul
clc
cmc
ret
outsb
inc
loop
lock
sub
push
shrl
push
lcall
lcall
jbe
push
or
mov
ficoms
push
subl
imul
ja
xchg
adc
addr16
addr16
and
pop
aaa
test
out
push
out
ds
sbb
sbb
inc
jge
ror
jecxz
mov
jae
arpl
or
push
jl
cli
int
mov
repz
popf
adc
lret
dec
sbb
ret
xor
mov
shrb
sahf
test
repz
in
cmp
in
xor
cs
repz
push
inc
stos
test
xchg
mov
gs
insb
pop
cltd
fidivl
ds
mov
add
jg
hlt
stos
movsb
out
rep
nop
scas
outsl
push
xor
enter
cmpsl
dec
pop
arpl
push
inc
testl
out
mov
fcompl
inc
pop
xor
add
jge
movsl
int3
sub
pop
jl
mov
andl
clc
mov
and
push
xor
enter
sub
aam
cmpsl
sbb
aas
insl
shll
xor
xor
test
fistl
sub
rcrl
scas
test
pop
pop
icebp
ja
andl
xor
mov
mov
push
ds
idivb
jle
push
jecxz
das
adc
rorb
ss
xor
insb
mov
mov
aam
adc
mov
add
outsl
sbb
mov
stc
out
ret
fcoml
or
cmp
or
and
or
and
cwtl
idivl
mov
add
scas
scas
push
mov
sti
mov
ret
sbb
jbe
std
jno
mov
pusha
pop
inc
dec
pop
js
js
shrb
mov
jb
mov
outsb
mov
lods
jge
aaa
or
and
test
arpl
loop
mov
and
sti
jns
cmpsl
iret
sbbb
push
or
bound
pop
call
jmp
mov
rcll
xor
pop
aas
idivb
movsb
mov
aas
pop
negl
and
dec
xchg
cltd
pop
add
inc
cmp
ja
dec
mov
outsl
outsb
movsb
fisubrs
hlt
lcall
xchg
aas
mov
sub
into
jge
push
jmp
popa
push
and
and
clc
jae
mov
add
xor
loopne
push
aas
rorb
in
pop
scas
cmp
rcrb
lock
mov
pushf
lea
dec
cmp
lret
push
mov
mov
push
sub
lret
push
pop
lret
insl
ss
rorl
sti
scas
fisubrs
imul
imul
lods
repnz
jle
xchg
hlt
pop
dec
insb
sti
ret
cli
out
popa
pop
mov
jle
jg
sbb
hlt
and
cmpl
xor
mov
xor
shl
movsl
daa
sub
incl
dec
cmp
xor
xchg
add
jnp
and
jecxz
sub
mov
jg
sub
push
jae
pop
cmp
in
or
cmp
pop
sbb
pop
jecxz
mov
es
shr
lret
and
cs
mov
aas
daa
lret
and
fneni(8087
subb
lock
daa
mov
pop
push
cli
pop
mov
cmp
sbb
pushf
xchg
xchg
sbb
bound
adc
add
inc
dec
repz
pop
iret
and
push
mov
pop
movsb
mov
icebp
jle
sbb
add
add
xor
adc
scas
inc
mov
pop
mov
pusha
mov
stc
lods
in
mov
push
mov
xor
addr16
sbb
cmpsl
inc
fcomip
and
sbb
or
cmp
sarl
adc
cmp
jo
xor
lea
nop
or
or
sar
inc
sub
decb
dec
mov
ljmp
adc
xlat
ljmp
adc
mov
push
sahf
decl
sbbl
pusha
shlb
mov
and
adc
inc
or
and
dec
jae
idivl
jo
fldl
adc
fs
dec
xchg
pushf
mov
movsl
mov
or
pop
stc
xchg
ja
xor
jno
jecxz
bound
dec
inc
cmp
jmp
sub
xchg
cltd
lret
int3
js
lds
mov
mov
ss
ljmp
in
repnz
movsb
add
arpl
enter
mov
imul
jmp
faddl
sbb
data16
out
pop
push
fildl
fldl
mov
scas
and
dec
std
stc
mov
push
xchg
lret
add
add
pop
pop
adc
or
or
inc
adc
int
or
jle
iret
jo
nop
inc
lret
mov
daa
enter
out
sbb
arpl
aas
xchg
mov
std
rol
mov
xchg
or
adc
cwtl
jne
fcomp
add
int3
cmp
fwait
enter
mov
push
push
ret
push
fidivrs
xlat
or
cmp
into
add
jmp
subl
leave
cmp
cltd
stc
sub
sbb
fs
dec
repnz
cwtl
or
mov
rclb
inc
mov
dec
lcall
daa
rorb
outsl
cli
mov
mov
cmp
adc
out
std
dec
xor
cmpsb
jle
push
sbb
aas
shlb
ret
stos
hlt
sub
daa
add
mov
mov
mov
dec
cmp
leave
xchg
push
jmp
xchg
xor
lock
icebp
cmp
cli
cmpsl
lods
sub
lds
imul
loopne
mov
push
xlat
dec
pop
std
xchg
mov
icebp
mulb
xor
xor
cmp
adc
dec
mov
insb
insl
dec
shlb
push
inc
subl
data16
pop
push
or
pop
nop
inc
xchg
mov
pop
and
sti
add
insl
lret
xchg
jmp
xchg
mov
sub
ret
jb
insb
dec
add
mov
pop
sub
lea
test
fmulp
aam
push
adc
inc
sbb
flds
enter
inc
bound
mov
push
inc
push
pop
pop
xor
jb
sti
jae
mov
pop
aad
or
mov
or
dec
adc
xchg
push
add
arpl
ret
imul
sub
cwtl
out
jae
mov
xor
cltd
divb
imul
lret
mov
sub
les
inc
outsb
and
in
push
gs
cmp
mov
jg
pop
pop
and
push
imul
mov
iret
aas
int
mov
lods
in
push
inc
and
dec
push
add
lcall
dec
dec
push
stos
scas
adc
xor
cltd
xor
push
pop
cld
jl
mov
sub
adc
mov
test
pop
stos
and
adc
addb
adc
mov
inc
pusha
pusha
fcomps
in
loope
rorb
dec
pop
cld
fldenv
sub
out
cltd
xchg
push
hlt
adc
push
aas
mov
or
movsb
xchg
stos
mov
in
add
in
sar
dec
testb
lea
xchg
jae
int
xchg
cmp
mov
iret
jno
push
jecxz
shl
mov
pop
loopne
xchg
fstl
add
rep
inc
mov
popa
nop
push
inc
push
clc
or
icebp
push
out
push
pop
mov
int3
and
mov
stos
add
lcall
and
push
cmpsb
inc
mov
xchg
aad
stc
jnp
xchg
jg
notl
fistl
push
ds
mov
cmp
push
mov
cmc
addl
pop
es
bound
jbe
test
xor
jns
adc
jns
icebp
cld
loope
rorb
lret
push
push
and
push
fstl
xor
adc
or
cmp
in
insb
xchg
xchg
inc
push
mov
fs
mov
pop
cmp
mov
mov
mov
cmp
push
and
cmove
iret
decb
mov
cmp
cmp
pop
addr16
jb
imul
add
adc
ds
push
sahf
lea
mov
xchg
xor
gs
fcmovb
adc
fcoml
mov
pop
bound
inc
scas
push
insb
call
pop
aad
test
outsl
xor
mov
jmp
cmp
cmp
pop
and
ret
push
lahf
fsub
loope
lds
jbe
aaa
add
and
adc
idivb
xlat
mov
sub
into
and
mov
xchg
jns
jno
mov
out
ret
inc
movl
cwtl
loope
lea
insb
mov
mov
push
rcrl
mov
mov
or
sub
jge
push
aas
lcall
mov
mov
xor
xor
fistl
mov
xchg
and
mov
inc
lahf
addb
mov
fmulp
cmpsl
mov
cmc
les
lcall
ret
push
out
add
sbb
adc
jge
movsl
imul
fwait
dec
cmc
cmp
ljmp
cmpsl
into
pop
fsubrl
jns
insl
xor
aas
orb
in
sbb
xchg
in
push
in
cmc
push
xor
mov
cltd
outsb
and
std
xlat
mov
sti
xchg
mov
inc
inc
ljmp
jp
and
adc
push
and
adc
js
inc
fstpt
mov
or
or
es
and
aas
aad
lret
sti
outsl
leave
xchg
int3
or
jmp
sbb
and
lods
insl
and
call
aad
cli
and
and
jge
insl
pushf
xor
stos
rorb
subl
movsl
ja
cmpsb
arpl
sub
mov
add
cmpl
xor
fsubs
pop
sbb
push
in
out
mov
sub
stos
inc
jmp
cmp
and
cmpsl
xor
pop
lret
popf
iret
pop
push
imul
and
push
dec
sbb
neg
sbb
inc
add
sub
je
ret
push
pop
lret
jne
mov
inc
and
jmp
and
test
mov
cmp
popf
jae
stc
xchg
stos
push
or
cmpsl
sub
mov
sub
add
cwtl
xor
ret
jnp
jle
xchg
dec
loope
mov
or
cltd
dec
inc
pusha
es
dec
pusha
sub
test
mov
aam
fimull
dec
ret
sbb
pop
les
mov
mov
mov
outsb
aaa
or
in
xor
dec
test
inc
es
out
dec
or
jecxz
imul
pop
inc
dec
cld
jbe
push
dec
dec
stc
setle
cmpsl
inc
mov
shll
xchg
and
jae
adc
lcall
out
pop
sub
lcall
mov
mov
pushf
or
sbb
or
xor
jl
fs
dec
xor
jmp
pushf
aad
inc
sbb
iret
xchg
inc
shrl
test
sti
cltd
sbb
adc
ret
pop
push
push
jmp
iret
sbb
push
lret
inc
sub
idivl
out
in
and
ljmp
js
mov
sub
out
lods
arpl
aad
andb
cli
mov
jb
shrl
sbb
das
in
loopne
fnstsw
sbb
push
dec
cs
push
mov
mov
sbb
push
push
pushf
mov
sub
fs
popa
and
jne
ss
inc
fwait
adc
cld
imul
and
sub
lds
jg
cmp
cmp
lods
ja
adc
outsl
aaa
sub
inc
inc
test
pop
cmpsb
loop
in
inc
xchg
fwait
or
jmp
ss
xor
shl
sub
cmc
or
icebp
test
sub
add
mov
pop
xor
cltd
dec
push
imul
dec
movntps
bound
jge
sti
xor
mov
pushf
repnz
and
dec
repnz
mov
out
jbe
pop
mov
out
pop
sbb
and
test
bound
mov
xor
nop
repz
clc
cmp
and
aaa
je
xor
mov
push
ja
ja
inc
push
cld
movsb
cmpsl
call
std
pop
nop
mov
add
in
ds
lcall
push
cmp
dec
xor
cwtl
push
push
dec
sub
test
movsl
jl
pop
jo
aas
push
lds
inc
xchg
and
mov
cltd
clc
and
aad
sti
jo
inc
jae
scas
stos
cmp
loopne
mov
icebp
inc
cmp
int3
xlat
test
outsl
sbbl
inc
test
xor
and
dec
sbb
jle
enter
dec
mov
mov
flds
adc
pop
inc
rcl
call
cld
jbe
dec
popf
inc
push
sub
fidivs
or
or
add
gs
mov
cmp
add
out
sahf
xchg
ja
hlt
dec
cmpsl
jmp
dec
mov
xor
fwait
jl
dec
xlat
xor
and
mov
enter
or
loope
push
pushf
ljmp
rorl
sarb
lea
cmpsb
mov
nop
les
int3
cmp
sub
test
rclb
mov
js
ja
gs
sub
out
push
icebp
ljmp
mov
mov
add
faddl
scas
ret
and
pop
cli
pop
ret
das
arpl
inc
scas
int3
sbb
pop
stos
inc
jg
xor
out
push
dec
add
ficoms
xor
or
leave
sbb
sar
cmc
xor
ret
add
sbb
cli
lahf
leave
pop
or
fmuls
dec
and
xchg
mov
and
xor
sub
cld
into
and
mov
mov
dec
inc
add
outsl
dec
addl
lcall
mov
dec
aaa
lret
sets
inc
mov
inc
and
mov
jno
mov
sahf
cwtl
xchg
je
rorb
ss
push
orb
sub
pusha
cmp
pop
sub
and
clc
inc
clc
xchg
xor
repnz
fs
xchg
dec
jno,pt
or
lret
pusha
xor
and
call
insl
arpl
mov
cmp
sub
cs
add
orl
aaa
mov
lods
movsl
aaa
subps
out
loop
sbb
inc
mulb
fcomps
lcall
jecxz
imul
and
pop
pop
int3
shlb
test
inc
into
imul
mov
and
lcall
lods
movsb
enter
cmpsl
xchg
xor
das
test
jno
cmpsb
notl
fisttpll
jle
inc
pop
pop
inc
mov
mov
pop
and
cs
dec
dec
std
adc
add
mov
mov
iret
hlt
add
repnz
lea
dec
lret
and
mov
mov
jmp
pusha
jge
pop
repz
cmpb
xchg
mul
dec
rorb
ds
test
stos
aaa
gs
in
sarl
push
adc
lods
jl
pop
pop
orb
insb
lret
negb
fidivrl
or
int
js
aas
pop
imul
leave
cmp
adc
shrb
test
cmpsl
sbb
je
xchg
rcll
mov
daa
outsl
lret
xchg
out
xor
xchg
xchg
push
lods
jo
mov
inc
or
jle
xor
out
int3
push
and
mov
mov
or
sub
and
pop
movsl
mov
add
mov
jb
loope
and
insb
dec
sub
sbb
fildll
mov
mov
pusha
sub
ss
add
push
movsb
adc
ds
inc
cwtl
pop
rcr
lods
call
inc
and
es
pop
rcll
sbb
mov
neg
std
cld
xchg
cld
dec
xor
imul
outsl
push
ja
xchg
cmpsl
sub
mov
sbb
cwtl
xor
inc
dec
cmc
imul
imul
sahf
jae
sbbb
mov
push
pusha
notb
lds
mov
and
or
adc
jnp
or
scas
adc
mov
ja
sub
loope
lods
xchg
inc
push
rorb
shr
sarb
movsb
add
shrb
pop
push
xchg
addl
inc
jns
mov
mov
adc
add
and
dec
add
in
test
fs
dec
mov
cmc
incl
dec
loop
mov
dec
xor
scas
in
cmc
gs
aam
push
repz
imul
mov
push
fildl
adc
adc
fmul
inc
pop
test
pop
fimuls
push
ret
inc
leave
inc
lods
jl
into
or
mull
cwtl
test
fbld
jmp
aas
add
clc
int3
out
jp
stos
test
xchg
mov
mov
mov
outsb
pusha
add
shll
push
add
sub
ds
aam
sbb
aad
cwtl
jg
add
int3
aam
dec
cltd
nop
mov
add
cwtl
clc
and
clc
pop
inc
outsb
movsb
push
test
push
rol
jecxz
pop
and
lds
stos
jge
and
inc
xchg
fdivl
bound
loopne
cmp
fidivs
jae
mov
or
jae
dec
and
dec
mov
stos
nop
lods
fsubrs
mov
fcmovb
push
iret
scas
jae
cmp
aas
mov
and
stos
xchg
ds
cmp
shrb
and
cmc
xchg
std
and
scas
and
shrl
and
adc
push
xlat
cwtl
loope
xor
fwait
divl
fists
mov
gs
rcll
out
out
push
pushf
iret
das
pop
fdivrs
push
es
fldt
mov
inc
test
inc
sub
jecxz
push
sub
jle
ret
mov
fistl
loopne
xchg
pusha
mov
dec
mov
jne
in
fstp
std
adc
inc
sar
data16
mov
jle
sbb
xor
sub
stc
pop
sub
insb
add
sub
mov
xorb
fs
lcall
icebp
loope
or
dec
pop
sub
mov
retw
ret
xor
stc
sbb
mov
sub
insb
ja
pop
jecxz
inc
mov
into
popf
lahf
jb
repz
pushf
xchg
rcrl
pusha
pop
aam
je
mov
das
push
imul
dec
dec
inc
fnstenv
pushl
sbb
or
insl
scas
lcall
ljmp
loope
adc
addr16
xor
sub
or
pop
sti
cld
mov
fldt
int3
jbe
popa
xor
shll
imul
notb
inc
loop
inc
adc
or
sahf
ja
es
out
aaa
stos
scas
pop
lods
mov
in
test
jecxz
movsl
fwait
into
xchg
adc
or
outsb
mov
fdivl
and
mov
or
daa
lods
add
dec
int
pop
in
int3
imul
jge
insb
lret
xchg
aas
dec
pop
lock
addr16
lcall
cwtl
popa
pop
roll
and
xchg
mov
shll
test
gs
movsb
fldenv
loope
or
and
and
xchg
mov
mov
out
pop
cmp
clc
mov
js
adc
psrlw
ja
jl
out
les
dec
decl
repnz
xchg
and
xchg
icebp
mov
push
and
inc
subb
sbb
pusha
push
push
mov
fs
mov
arpl
cltd
stos
jg
js
pushf
lock
inc
jb
shll
ja
pop
cli
cs
scas
pop
xor
and
data16
sbb
pop
and
mov
rcl
jecxz
insb
pop
scas
xchg
xchg
das
mov
push
jp
mov
test
sbb
mov
dec
jle
das
dec
rcrl
pop
jle
in
stc
loop
out
pusha
call
cltd
and
ja
test
cs
adc
fbstp
dec
push
aad
xchg
xor
movsl
cltd
imul
jmp
jl
pop
adc
repnz
mov
aam
movsb
xor
inc
mov
xchg
sub
scas
ja
fbstp
int3
sub
out
mov
jae
fs
das
push
insl
add
push
mov
cli
lret
movsb
add
add
push
mov
pop
jae
in
cltd
pop
incb
push
in
sbb
add
dec
mov
jae
sar
mov
insb
bound
push
and
dec
clc
out
push
adc
mov
aam
loopne
jg
cmpsb
or
xor
mov
je
ret
insb
test
cmp
adc
popa
push
stos
dec
cmp
iret
mulb
in
gs
jecxz
cmpsl
xor
jle
roll
out
adc
mov
xlat
xchg
sub
ds
sub
adc
jmp
sub
cs
xor
mov
adc
outsb
pop
ljmp
in
ret
pop
cld
lret
test
inc
jb
mov
ret
add
xor
jo
fldt
lea
and
push
mov
sbb
mov
inc
loope
bound
pop
mov
or
ffreep
fistpll
adc
pop
test
test
mov
pusha
addr16
gs
pop
pop
bound
repz
imul
and
loope
outsl
pop
push
out
cmc
pop
scas
popa
int3
cli
sub
inc
mov
xor
inc
or
jl
xor
bswap
stos
jns
imul
dec
sub
inc
scas
js
imul
xor
call
inc
arpl
sbb
scas
mov
fdivrs
ds
cmpsb
jnp,pt
out
fnsave
pop
aad
xchg
and
jmp
repz
sub
mov
aaa
popa
pop
dec
mov
cmp
push
pop
dec
jnp
idivl
mov
sbb
lods
or
ja
dec
scas
loope
jno
mov
adc
lods
jg
adc
daa
push
int3
stos
ja
push
pop
testb
mov
jmp
mov
jne
jo
sbb
pop
testb
adc
inc
movsl
fldt
icebp
int
push
push
push
jnp
in
test
push
rol
sbb
std
inc
jge
dec
add
out
pxor
loope
push
add
xchg
ss
pop
dec
jmp
fsts
sahf
xor
jb
and
mov
paddb
dec
scas
gs
fldl
mov
push
jl
or
jb
adcl
fwait
cli
sete
in
push
pop
sbb
push
das
pop
lret
cmp
scas
pop
out
in
inc
cmpsb
add
mov
adc
iret
je
cs
inc
and
fcomps
jno
sub
jno
xchg
adc
adc
fstl
mov
adc
pop
inc
je
stos
adc
in
sbbl
xchg
xchg
fdivl
pop
adc
clc
push
and
push
push
fisubrs
out
movsl
adc
add
cmp
push
xchg
repz
mov
int
jmp
sbb
mov
mov
fadds
stos
mov
and
push
xchg
mov
popa
mov
or
mov
rolb
inc
cs
pop
jns
int
hlt
mov
int3
push
pushf
dec
mov
cs
scas
and
or
xor
shll
inc
in
jecxz
jns
stc
addr16
movsb
ret
xor
adc
pop
es
jmp
mov
dec
les
mov
iret
jl
outsl
inc
xor
shlb
mov
outsl
or
mov
adc
dec
je
cmp
push
out
mov
jne
push
popf
test
mov
add
sbb
xor
mov
imul
fbstp
lea
pop
stc
loope
shll
out
mov
jle
pop
jbe
sar
mov
adc
jns
jo
iret
movsl
mov
dec
stc
cmpsb
adc
push
mov
fwait
xchg
xchg
call
mull
mov
jg
out
jns
cmp
push
aaa
pop
je
inc
aaa
mov
js
fwait
jnp
stc
jo
jno
mov
sub
lret
jp
push
mov
fstl
xor
xadd
scas
enter
adc
pusha
pusha
jb
popa
or
inc
fwait
pop
popf
jp
scas
leave
pop
jecxz
mov
outsb
dec
jbe
inc
inc
int3
divb
push
in
in
jp
and
and
push
adc
ror
jo
jnp
movsb
add
pop
mov
fwait
js
hlt
ficomps
xchg
lcall
in
lahf
mov
loopne
in
or
adc
push
sub
and
xchg
mov
jmp
add
mov
and
push
push
cmp
out
or
sahf
mov
add
idivl
jo
add
cmc
test
out
adc
call
adc
call
mov
leave
sub
insl
shrb
lcall
xchg
sarl
and
test
out
mov
or
mov
addl
mov
aaa
mov
movsl
mov
or
call
lds
mov
inc
inc
inc
cmp
jl
std
xor
mov
das
call
dec
push
add
stos
push
push
shrl
fstp
fcompl
jl
mov
mov
insb
nop
cmp
jns
movsb
jge
adc
mov
enter
fs
stos
imul
movsl
arpl
jmp
mov
inc
inc
in
fistpl
in
iret
jle
cmp
adc
mov
xchg
jmp
inc
mov
sbb
out
leave
jl
sub
mov
mov
lahf
sbb
sarl
xor
mov
std
jnp
incl
stos
shll
in
sti
inc
outsb
mov
aam
testb
imul
mov
adc
jl
mov
or
push
in
mov
jmp
je
sbb
and
adc
int3
xchg
jb
mov
bound
inc
mov
insb
aam
insl
and
and
pop
outsb
iret
cmp
cmp
mov
and
mov
jno
dec
jmp
aad
cmp
imul
cmpsl
mov
cmp
jns
rol
enter
sbb
ds
or
lcall
bnd
mov
shlb
sbb
and
jae
movsb
push
data16
inc
cmp
mov
nop
cmp
imul
mov
jg,pt
push
jo
stos
scas
add
lods
fidivrs
lock
adc
das
sbb
fs
pop
leave
lahf
mov
adc
xchg
repnz
imul
mov
or
adc
cmp
in
xchg
cmp
or
pop
pop
cmp
or
dec
xchg
jge
ja
push
test
popf
out
in
das
pushf
rcrl
mov
icebp
aam
cli
add
insb
mov
sub
js
sub
mov
or
mov
or
cmp
aam
daa
mov
loop
pop
scas
hlt
std
lret
and
mov
out
mov
lock
shlb
fcmovne
shl
popa
sbb
dec
pop
pop
xor
add
sub
jb
sbb
js
mov
out
dec
aam
sub
mov
inc
pop
or
mov
or
in
push
mov
adc
mov
xor
prefetch
cmpl
mov
jle
sub
out
sub
scas
push
sbb
or
test
cmc
pop
jnp
mov
int
addr16
cld
movsb
jp
pusha
pusha
in
negb
fbld
add
jbe
adc
inc
mov
jecxz
outsb
sahf
std
js
xor
adcl
mov
test
js
pop
inc
or
push
sub
mov
iret
es
sbbb
jb
mov
cmp
jg
test
dec
dec
out
stc
xchg
stos
daa
pop
pop
pop
and
daa
ss
pushf
pop
sub
sub
add
cmpsb
or
leave
xor
mov
xchg
dec
pop
sbb
int
pop
xchg
and
add
iret
xor
mov
mov
scas
jno
adc
fcomp
sbb
inc
cmpsb
daa
push
fistps
or
push
push
jno
lret
and
mov
mov
pop
mov
dec
pop
and
jle
dec
out
andb
push
jle
inc
mov
adc
cld
in
hlt
sti
mov
cmc
sbb
imul
xlat
xor
pop
fldl
xchg
adc
mov
jno
gs
aas
mov
pushf
inc
imul
pop
adc
into
sbb
xchg
lret
mov
pop
lret
pop
enter
fwait
pop
xor
and
in
je
xor
or
fxch
out
add
adc
and
lods
add
adc
dec
pop
shll
addb
cmp
add
and
sub
sub
mov
push
adc
lret
imul
push
idivl
cld
ljmp
xor
unpcklps
fbstp
push
pop
sub
cmp
cmc
sbb
jns
stc
and
jo
adc
pop
adc
xchg
mov
das
sub
ret
xchg
push
jg
xor
lock
ljmp
popl
es
sti
shld
test
adc
lahf
daa
or
sbb
out
cmp
js
mov
call
mov
js
mov
mov
movsb
call
jge
jle
xor
push
iret
pop
in
jle
and
rcrl
or
dec
pop
sar
add
nop
jne
sbb
mov
cwtl
sbb
xsaves
or
test
imul
fimull
lcall
test
and
stos
idivb
add
and
inc
cwtl
xchg
cli
mov
dec
cmp
mov
dec
ja
int3
mov
jmp
jp
out
scas
push
mov
inc
and
aaa
fnstenv
push
ds
mulb
rcrb
negl
sub
shrl
mov
gs
or
or
in
sub
sbb
ja
jne
sbb
push
sub
mov
test
cmp
jnp
jecxz
test
xchg
dec
popf
cltd
jne
mov
std
inc
xchg
insl
push
xchg
in
adc
add
lret
push
in
movsl
sti
jl
hlt
lods
push
out
jno
mov
inc
cltd
test
sbb
xor
in
jmp
shrb
ss
dec
xor
mov
mov
pop
jnp
cmp
sbb
scas
lret
cld
push
cmp
lods
dec
fadd
test
bound
lods
das
test
jae
xlat
imul
decb
in
mov
lea
in
push
cmp
es
ds
mov
or
xchg
push
sub
jno
and
jl
jae
cmc
cmc
pop
sbbb
push
sub
jbe
dec
in
mov
inc
lahf
adc
in
jmp
outsl
xchg
jg
rclb
or
mov
adc
xor
lret
add
pop
jnp
sub
fdivs
cs
jae
cmc
std
arpl
test
scas
lds
addl
js
roll
or
xor
ret
jmp
ret
dec
cmpb
sbb
outsb
int3
fmuls
push
andb
mull
cmpsl
loopne
pop
or
push
add
add
int3
cmp
mov
adc
inc
pop
cmp
hlt
mov
roll
sahf
sub
popa
repnz
icebp
adc
push
mov
or
mov
xchg
pusha
sbb
insl
test
cmp
fisttpl
or
fisubrs
adc
cltd
inc
sub
sbb
cli
popa
gs
xchg
aaa
insb
mov
inc
inc
sarb
mov
push
push
test
lods
dec
inc
inc
ss
pop
inc
jae
dec
add
cmpsl
push
add
in
mov
test
push
sub
sbbl
ja
pop
mov
push
mov
insb
jge
push
loopne
outsl
sub
fcos
test
lds
mov
cli
dec
lcall
sahf
sbb
repnz
test
push
shlb
add
mov
dec
sub
data16
cmpsb
aas
jp
outsb
push
cmpsl
adc
mov
jnp
mov
jecxz
or
inc
xor
fcmovnb
cmp
insb
lcall
pop
xchg
lods
jl
push
out
and
das
popa
ret
bound
daa
mov
jg
push
inc
addr16
jge
mov
cs
ljmp
cli
pop
dec
add
sub
mov
jecxz
gs
popf
pop
or
mov
inc
sub
mov
scas
and
push
or
ja
cmp
in
stos
pop
call
xchg
xchg
insl
ret
add
cmpsl
aas
es
inc
sbb
adcl
jae
fdivrs
scas
jmp
sti
cltd
sub
js
adc
mov
movsb
int3
fwait
xor
jae
push
clc
xchg
lret
daa
enter
lods
pop
ret
pop
insb
push
int3
inc
mov
loopne
mov
loopne
aad
sbb
shrb
mov
nop
jl
sahf
or
inc
ret
jmp
and
xchg
loop
xchg
cmp
add
add
outsb
xor
test
loopne
xor
mov
ficomps
int3
lea
clc
add
push
sbb
inc
xor
jnp
and
dec
xlat
lcall
aam
decb
adc
mov
xchg
adc
adc
fsubl
cmp
mov
jne
aaa
ret
jg
cmp
inc
popf
imul
scas
loop
xor
enter
sub
sub
popf
xor
insl
fidivl
lds
imul
aas
sbb
xor
xchg
inc
aaa
xchg
xor
add
push
dec
out
push
out
aad
mov
jns
dec
call
dec
xchg
ret
stos
popf
pop
lahf
in
dec
cmp
call
imul
xchg
mov
sbb
insl
test
loopne
popf
push
mov
sub
xchg
sub
xchg
decl
nop
in
loop
clc
sub
out
ja
and
lods
psubb
in
cmp
mov
mov
xlat
ficomps
es
rorb
cltd
fstps
cmp
push
pop
js
adc
inc
hlt
test
sbbb
mov
sti
loopne
ja
jmp
ss
nop
fcoms
inc
addr16
mov
scas
and
mov
nop
cld
cmp
jbe
inc
pop
leave
jno
pop
out
sub
jno
mov
les
adc
popf
xchg
fildll
and
ja
das
mov
xchg
filds
lock
out
jbe
dec
inc
mov
cmp
xchg
mov
sub
sub
add
push
iret
out
cmp
mov
sbb
arpl
jo
in
out
cmp
sbb
popf
je
mov
inc
sub
fistpl
inc
cmp
xchg
inc
mov
je
mov
adc
xor
or
lea
fmull
sarl
incl
iret
adcb
out
pop
dec
xchg
mov
enter
in
in
lret
inc
push
cmp
pop
push
pop
mov
in
push
push
sbb
std
jns
sti
ret
add
data16
das
cmp
ds
mov
xlat
xor
push
push
fcompl
push
aas
jp
aad
push
fldpi
add
out
aaa
mov
enter
out
sub
int3
mov
lret
inc
test
xchg
imul
lcall
ffreep
xchg
dec
icebp
adc
inc
mov
and
lea
cwtl
xor
push
es
sbb
sti
xlat
imul
jne
lds
dec
mov
cmpsb
repnz
and
outsl
push
int3
rolb
dec
ljmp
xor
xchg
stos
int3
cmpsb
mov
xor
inc
mov
xchg
or
ja
jl
imulb
fsubl
popa
lcall
je
push
or
add
lret
or
xor
push
push
inc
adc
mov
cmp
stos
mov
push
dec
push
adc
out
xchg
into
mov
lds
add
aam
inc
aad
sub
mov
jnp
fs
icebp
fnstcw
pop
and
idivb
outsl
rcrb
fwait
cmp
enter
hlt
cmc
imul
test
jnp
inc
add
jge
jnp
dec
das
pop
pop
daa
sub
mov
push
cld
inc
lods
imul
dec
pop
push
mov
bound
ret
and
outsl
stc
ret
sarb
lret
or
mov
jl
je
sub
pusha
ss
jae
sub
nop
dec
das
int
aaa
flds
mov
rorb
adc
cwtl
xchg
je
adc
xchg
out
inc
jnp
adc
gs
cmpsb
xor
jbe
repz
fidivrs
test
mov
xchg
inc
movl
outsl
fs
pop
out
jne
or
mov
aaa
divl
imul
mov
jge
pop
xor
dec
sbb
push
fstl
notl
mov
int3
push
cs
adc
test
sub
xchg
jp
jae
fsubrs
inc
add
jbe
outsl
imul
bound
jnp
imull
aas
pop
push
and
into
int3
out
sbb
dec
out
mov
popa
jmp
pop
lea
std
inc
inc
stc
jecxz
call
add
mov
dec
xor
xchg
int3
dec
mov
push
xor
int
lea
mov
jg
adc
sbbb
idivl
cmp
lret
jmp
cmp
lcall
push
sbb
divb
sbb
int3
xor
mov
shll
sahf
sub
call
cs
push
in
sbb
adc
fstps
mov
int3
ror
shll
jge
xor
aam
dec
stos
outsb
and
jb
add
out
sbb
adcl
addb
jb
ret
fs
jae
adc
mov
fdivr
jnp
ret
filds
insb
test
sahf
adc
repnz
or
out
push
inc
sbb
divl
out
hlt
mov
add
jl
mov
jno
test
stc
push
and
jecxz
fldenv
xlat
out
insb
mov
in
xchg
scas
pushf
inc
mov
pop
mov
fmul
subb
ret
out
shl
cmpsl
pop
or
pop
sti
mov
movsl
lds
lcall
aam
aad
push
shlb
and
adc
lea
add
ss
pop
xlat
nop
stos
mov
insb
repz
ljmp
jns
shl
inc
scas
popf
dec
inc
xchg
sbb
xchg
mov
push
sbb
push
leave
jl
popf
rorb
or
jo
scas
movsb
mov
sarl
and
popa
lods
adc
cwtl
popa
das
adc
xor
and
fisttps
and
xchg
or
lods
lea
icebp
cli
mov
out
mov
outsb
add
test
mov
jle
icebp
jle
call
subb
inc
sub
mov
inc
sbb
xor
out
cwtl
mov
lds
scas
sub
enter
jns
mov
jp
xchg
setbe
add
ss
imul
movsl
loop
jmp
mov
cmp
mov
sahf
int
dec
or
inc
pop
adc
add
xor
loop
mov
repnz
int
sub
je
out
push
inc
subb
mov
pop
es
xchg
jb
call
inc
sub
aaa
push
jno
movsl
cmp
flds
pop
hlt
mov
ljmp
add
or
jae
lss
nop
testb
outsb
fldenv
lods
adc
pop
inc
test
jae
jle
pop
gs
icebp
add
addr16
and
out
popa
filds
fdivr
popf
xor
js
pop
jns
dec
jmp
dec
inc
push
cmpl
sub
add
int
push
push
inc
aas
gs
inc
cmpsl
aad
mov
and
je
push
fcom
repz
rcr
hlt
inc
cmc
es
add
mov
lods
xlat
or
out
cmp
sbb
ds
inc
cld
cmp
xor
ss
add
icebp
cli
int
mov
neg
fwait
fs
pop
in
fbld
dec
xlat
and
push
das
popl
loop
pusha
mov
adc
roll
in
or
sbb
or
xor
push
insb
push
jnp
fcompl
inc
test
lock
sti
or
pop
add
seto
add
jle
fnstsw
mov
cmc
pop
into
pop
bound
xor
dec
outsb
adc
cmpsb
data16
cmp
lods
and
sub
xchg
mov
xchg
std
outsb
imul
fiadds
and
fdivs
test
sbb
je
pop
dec
push
dec
jno
jmp
dec
mov
aaa
ss
mov
daa
pop
mov
cmc
adcb
lea
inc
in
nop
rcll
jmp
iret
push
cmc
pop
insl
rclb
jp
dec
loop
sub
pop
fwait
icebp
xor
or
in
lahf
mov
rcl
cwtl
lods
mov
jb
adc
pop
mov
mov
repz
imul
mov
cmp
push
add
mov
shll
xlat
daa
adc
push
adcl
and
add
cmc
xor
cmc
clc
orb
daa
sti
or
dec
cmpsl
push
aaa
mov
cmp
iret
iret
inc
cmpsb
aaa
mov
sbb
push
mov
loope
das
pop
dec
lea
mov
shll
xchg
divl
sbb
int
mov
test
ret
fbstp
sbb
adc
pop
leave
pop
sbb
stc
cmp
fldt
adc
adc
push
cmp
aas
inc
cmp
or
sbb
cmpsb
fcmovbe
dec
dec
push
jecxz
pop
movsb
paddsw
out
xor
add
lcall
xor
xchg
js
cs
shlb
cld
add
fstps
icebp
aas
adc
adc
es
fnsaves
sbb
pusha
add
loopne
stos
scas
cmp
sbb
test
mov
mov
push
outsl
test
xor
int3
and
jae
xor
mov
xchg
xlat
int3
jge
cmp
pop
fs
xchg
in
inc
add
rorl
xchg
xor
gs
pop
rol
mov
xchg
mov
pop
sti
cmp
nop
mov
adc
pushf
fidivl
add
sub
insb
mov
jae
mov
int
push
pop
scas
cmp
lock
in
mov
stc
aaa
scas
xor
dec
inc
push
xchg
mov
jle
test
push
pop
es
test
xlat
add
mov
popf
mov
mov
mov
leave
adc
mov
vpcmov
ljmp
pop
ljmp
pop
or
daa
xchg
mov
mov
sbb
mov
das
mov
dec
inc
mov
jl
jns
or
inc
daa
fists
jge
fiadds
daa
xchg
aam
js
inc
sbb
ss
pop
xchg
fs
cmpsb
mov
enter
cmp
lret
loopne
cmp
pop
out
clc
and
jo
sarb
mov
xchg
aaa
jnp
jp
out
shrl
sti
xchg
push
call
mov
hlt
repz
and
mov
lods
add
jmp
ret
ret
fwait
iret
lods
jno
ds
xor
fst
jmp
pop
pop
insb
xor
or
test
inc
sub
cmp
lock
js
rcll
sbb
stos
add
or
and
rcrl
pop
stos
cmp
xor
pop
xchg
mov
es
pop
xor
xchg
ds
add
data16
loope
popf
jnp
xor
jbe
cmc
test
or
into
scas
fstl
out
and
ror
inc
fisttpl
cmp
pusha
cmpsl
dec
mov
pop
mov
cmp
in
arpl
daa
add
ret
mov
or
repnz
cs
in
pop
ljmp
scas
js
push
or
mov
fwait
aam
data16
jo
xlat
xor
mov
aad
orb
rol
pmulhw
cmp
insl
std
fdiv
mov
mov
pop
cltd
or
mov
jl
aas
dec
and
leave
sub
mov
mov
inc
add
dec
idivl
push
ret
shlb
sti
add
pop
es
cmpsb
pop
sbb
jo
or
aaa
les
test
inc
mov
inc
inc
pop
lahf
mov
inc
cwtl
lcall
pop
stc
push
rcrl
cltd
pusha
les
cmp
pop
imul
imul
pop
sarb
mov
orl
mov
and
or
or
aam
jecxz
lods
pop
or
mov
fs
pop
mov
fistpll
cmp
scas
pop
fwait
xchg
mov
bound
lds
jns
add
sbb
push
xor
aad
std
xchg
pop
loop
jne
push
mov
scas
es
bound
adc
jmp
push
fildl
mov
add
sub
lock
xchg
ret
mov
rcll
add
pusha
nop
sbb
das
adc
lods
mov
mov
and
ret
adc
xchg
pop
dec
adc
and
lahf
stos
and
dec
les
mov
push
stos
test
imul
dec
pop
pop
repz
in
mov
mov
cltd
jecxz
and
add
mov
icebp
sbb
fsubs
mov
stos
push
xchg
adc
adc
xor
test
cmp
iret
add
test
iret
cmp
loope
jecxz
std
je
je
jmp
xchg
test
mov
or
fsubs
repz
mov
repz
mov
adc
xor
mov
push
jl
lods
pop
popf
sbb
rorl
push
xor
scas
hlt
into
cltd
pop
add
out
pop
les
xchg
push
inc
mov
mov
std
lock
and
adc
aas
imul
push
lret
lds
and
inc
lock
fisttps
adc
sub
scas
push
sbb
cltd
and
lods
push
in
xor
pop
pop
mov
jbe
pop
roll
jno
mov
add
daa
das
cwtl
inc
pop
dec
movsl
cltd
and
ljmp
xorb
mov
mov
test
outsl
stos
jo
mov
pop
mov
not
push
or
repnz
adc
jmp
push
leave
jg
neg
and
pop
test
cmp
rcr
das
cs
push
xor
pop
mov
adc
sbb
call
jnp
mov
nop
push
testb
fisubrl
scas
out
movl
push
lds
mov
int
cmc
lods
xchg
mov
es
in
sbb
push
fdivrl
xchg
or
dec
dec
mov
popa
pop
cmc
mov
rclb
outsl
inc
xor
int3
mov
dec
ja
xchg
jae
adc
xchg
jne
push
add
jl
fiaddl
test
adc
inc
aam
decb
call
or
fs
ljmp
out
pop
mov
dec
pop
pop
aaa
cmpb
and
mov
daa
xchg
pop
mov
fadd
mov
jne
pop
mov
pop
pop
into
pop
jns
gs
lahf
jmp
adc
dec
and
lahf
dec
jl
jns
jne
xchg
mov
rcrl
cmp
mov
mov
sbb
shlb
neg
xor
xor
mov
test
or
aas
mov
jae
and
shrl
jg
xor
mov
fsubp
cmp
adc
orb
test
push
mov
add
dec
jmp
add
sub
loop
dec
pusha
into
shl
testl
stos
mov
dec
or
lcall
mov
inc
push
je
mov
arpl
mov
pop
mov
lret
pop
adc
lahf
pop
aaa
mov
xchg
mov
dec
xchg
or
and
mov
pop
gs
in
loope
xchg
adc
jg
cmp
scas
ljmp
sbb
movsb
mov
insb
shrb
sbb
jno
in
movsl
pop
xchg
ss
call
gs
jle
sbb
in
daa
sbb
fadd
fsts
ljmp
lcall
dec
test
lcall
adc
xlat
ficoms
stc
jo
push
jecxz
cmp
xor
sub
sub
and
out
push
mov
push
dec
insl
out
mov
push
icebp
or
hlt
cmp
in
ret
or
pop
std
mov
xlat
or
push
or
push
pop
jns
pusha
es
in
pop
cltd
stos
adc
xchg
push
mov
sub
ret
pop
add
incb
jae
fsubs
out
push
lret
pop
cltd
js
or
clc
arpl
mov
adc
rcrl
imul
out
negb
pop
jne
push
xchg
inc
add
nop
jmp
call
test
outsb
into
arpl
icebp
pop
rcll
dec
out
adc
adc
fcmove
popa
add
add
xchg
adc
arpl
adc
pop
sbb
mov
xor
lcall
scas
sbb
pop
in
sub
leave
sbb
inc
lea
and
test
push
mov
das
push
in
out
inc
cmp
sub
mov
lds
mov
xor
mov
out
fwait
pop
or
push
mov
add
mov
lods
fdivrs
out
jle
mov
in
aam
aas
pop
and
add
pcmpeqw
xchg
push
push
lret
iret
out
je
les
and
cmp
das
or
sbb
mov
mov
jmp
in
popa
sub
lods
sbb
test
sbb
adc
push
cmp
repz
cmc
push
stos
bound
scas
das
pop
jne
xorb
push
leave
clc
in
es
jne,pn
insl
notb
add
mov
movsb
imul
mov
push
aad
sahf
push
lret
pusha
imul
adc
mov
fidivrl
cwtl
iret
xchg
xchg
cmpsb
adcb
dec
inc
jne
adc
push
jnp
les
dec
into
sub
dec
shlb
fists
sub
js
sub
out
clc
xchg
test
insl
movsb
orb
dec
mov
sbb
push
xor
add
xchg
in
fiaddl
inc
ret
mov
shlb
jb
fldpi
xor
mov
scas
lds
icebp
cmpsb
mov
lret
jb
sub
mov
xchg
int3
clc
repz
test
int
int
inc
repz
and
xor
dec
bnd
aas
mov
sbb
jle
ss
or
xor
loop
sti
push
cld
iret
ljmp
pop
fisttps
xchg
xchg
negb
imul
sub
pop
sbb
xor
icebp
cmp
std
fildl
jmp
out
cmp
imul
mov
jo
xlat
mov
and
xchg
inc
fwait
test
jnp
outsl
xlat
adc
popa
mov
es
les
dec
xchg
dec
mov
jno
and
sti
pop
nop
ljmp
cwtl
xor
ds
xchg
inc
add
lods
jb
es
aad
daa
dec
mov
jbe
lcall
iret
adc
or
add
stc
jge
sbb
ret
push
jp
mov
cmp
pop
push
in
js
jge
pop
add
sti
rcl
pop
add
mov
leave
or
bound
jecxz
cs
or
cltd
popa
mov
cmpsl
cmp
or
imul
nop
cmpsb
jb
and
imul
push
cld
or
in
adc
arpl
xor
fsubrl
xchg
shlb
in
les
bound
pusha
jae
loop
lcall
das
test
repnz
imul
jp
sub
lcall
sub
aad
jae
xor
jb
arpl
pop
addr16
fdiv
inc
outsb
gs
xchg
push
adc
mov
imul
adc
xchg
jecxz
mov
test
adc
out
std
xchg
repz
mov
scas
int
add
adcl
jle
out
lahf
lcall
dec
add
loope
or
verw
int3
scas
add
push
pop
mov
ja
mov
mov
sbb
sbb
xchg
jle
xchg
std
xor
adc
cmp
pop
dec
aas
pop
lret
das
sub
popl
push
mov
arpl
push
xchg
jle
loope
pop
sbb
xor
into
adc
push
stos
icebp
int
out
jmp
pusha
lods
fldln2
mov
rcr
dec
jns
push
xchg
fwait
les
loopne
mov
xor
stc
and
pop
add
mov
mov
test
push
jp
mov
and
and
pusha
addr16
cmpsl
out
pop
pop
jle
push
or
adc
movl
mov
sbb
iret
inc
sbb
and
inc
mov
mov
rclb
subb
sarb
mov
ljmp
mov
jns
int3
adc
leavew
mov
lret
adc
scas
or
push
cmp
mov
pop
xor
imul
jge
nop
je
pop
addr16
dec
mov
es
xor
pushf
in
cld
or
call
push
fdivrs
mov
pushf
repz
mov
sub
and
sub
mov
mov
mov
and
pop
lret
cwtl
xchg
test
les
mov
inc
or
push
push
mov
cmpsl
aas
lahf
pusha
addb
mov
in
pop
stos
add
xchg
sbb
dec
repz
inc
out
mov
into
xchg
imul
xor
ss
sbb
or
leave
ret
cmpsl
mov
pushf
lret
cmp
mov
sub
add
xchg
test
cmp
dec
addr16
dec
inc
inc
add
push
cld
shrb
cmp
jmp
cmp
add
jl
sub
popa
mov
mov
lahf
int3
mov
cs
icebp
cmp
add
ret
in
add
popa
push
sub
movsl
cmpsl
fadds
xor
fs
repnz
push
popa
add
addr16
lret
xchg
push
andb
movq
scas
mov
adc
loope
add
pusha
adc
push
jge
lret
mov
negl
ds
push
xchg
push
or
jae
mov
das
aam
fsts
sub
mov
push
jo
jle
ljmp
stos
xchg
movsl
stos
cli
andb
sub
cwtl
sub
dec
pop
sub
fsubrs
fnstsw
insb
mov
arpl
neg
add
mov
fwait
jge
in
xor
sbb
or
test
pop
jne
lock
push
and
and
dec
mov
mov
es
aas
outsb
movsb
js
faddl
jo
repnz
ljmp
rorb
xchg
ret
jns
xchg
aas
push
jg
pop
sub
dec
push
xlat
popl
add
adc
pop
aas
xor
cmc
popa
sub
loope
into
jle
mov
mov
adc
xorb
outsl
mov
cmp
lods
add
cld
imul
ret
pop
xor
lret
lahf
ret
scas
push
scas
aam
les
fst
sbb
pop
sbb
ss
out
dec
lods
xchg
push
jo
ret
sbb
mov
mov
lock
jo
movsl
into
mov
push
xchg
cmpsl
aad
fistpll
xchg
inc
in
int
popa
lcall
divps
mov
cmpsb
jl
and
xor
mov
xor
icebp
gs
pop
add
adc
xchg
mov
out
cmpsb
lods
sbb
js
je
or
jmp
jl
xchg
call
mov
mov
jle
filds
test
add
mov
pop
dec
mov
ret
lahf
imul
jmp
jo
out
and
mov
pop
imul
cmp
shrl
xor
leave
pop
mov
xchg
imul
add
add
or
or
int3
imul
sub
push
mov
push
xchg
stos
cmp
fidivrs
repnz
or
sbbb
lods
pop
mov
sub
mov
pop
nop
xchg
mov
dec
pop
pop
mov
cs
fistpll
fcom
pop
dec
add
xchg
in
addr16
sbb
lcall
push
and
das
mov
add
das
mov
int
xor
mov
adc
mov
mov
xor
mov
out
andb
jb
fcmove
dec
arpl
lahf
and
dec
mov
cmp
xchg
out
decl
loop
lods
or
dec
rcrb
out
inc
dec
xlat
push
mov
mov
push
out
pushl
push
stc
mov
and
adc
test
iret
jp
cmp
int3
sbb
shl
mov
mov
xor
or
and
cmp
scas
sub
aad
jecxz
cmpsl
cld
cli
cmp
int3
and
lods
adc
and
shrb
fcomip
cmpb
sbb
add
inc
test
in
jmp
clc
sbb
dec
inc
int3
das
std
push
addr16
stos
stos
push
pop
pop
and
loop
testl
or
arpl
mov
and
fbld
shlb
mov
xchg
xor
aam
fxch
push
fnclex
sbb
sti
xchg
or
pop
pop
xor
stos
stos
sbb
cwtl
test
jg
repnz
mov
rclb
xchg
lds
mov
inc
xchg
lods
and
push
shl
inc
mov
lcall
out
in
xchg
lea
adc
pop
mov
in
call
xorb
push
gs
jbe
push
and
jno
xchg
dec
xchg
pop
mov
xchg
sub
in
popl
mov
inc
push
int
sbb
icebp
mov
mov
daa
mov
add
dec
add
scas
xchg
pop
cmp
clc
push
lods
addb
mov
lds
jp
cltd
call
out
iret
movsl
jne
popa
add
data16
push
push
xor
sti
add
popa
xor
ror
ja
fmul
cwtl
mov
jae
fildll
pop
nop
leave
aaa
insb
jp
mov
push
pushf
subl
push
xchg
in
out
dec
cmp
sbb
sub
ret
pop
mov
jge
and
push
push
cmc
gs
fldt
pop
dec
push
sahf
xor
jle
std
test
pop
and
jo
inc
aam
xor
jp
mov
movsb
testb
mov
ficoml
dec
dec
adc
mov
ds
jp
negb
lods
rol
lret
xchg
aam
inc
fcoms
jmp
orb
and
mov
xor
push
out
jmp
sbb
lahf
mov
test
enter
cmpsl
mov
xchg
sbbb
es
push
and
push
adc
adcl
sbb
xor
mov
lds
mov
mov
repz
add
sti
lret
fildll
jnp
mov
lock
xor
xor
movsl
fisttpll
mov
popl
in
lahf
movsb
add
xchg
popf
xchg
addr16
out
mov
test
shl
pop
pop
or
mov
sarb
cltd
loopne
cmp
std
sahf
jecxz
inc
nop
sub
push
pop
push
push
fisubs
pusha
fidivrs
pop
jl
push
repnz
mov
push
psllq
fwait
cmp
pop
in
out
retw
add
push
lds
sub
shrb
inc
loopne
outsl
jnp
mov
mov
inc
or
into
scas
jl
xchg
push
or
jbe
repz
dec
in
nop
lret
add
out
iret
js
inc
mov
inc
test
enter
test
jb
xchg
add
andb
inc
mov
ficompl
addr16
add
mov
inc
pop
add
jno
out
lods
pop
mov
cmpsb
cli
inc
pop
jno
jp
jmp
adc
mov
jl
cs
sbb
or
in
lods
xchg
and
dec
ret
out
sbb
sbb
or
lods
and
or
cmp
sbb
dec
or
test
pop
bndstx
cld
dec
cmp
scas
inc
add
fiadds
push
or
daa
or
xor
je
dec
test
xor
sbbb
rorl
inc
cmp
mov
bound
mov
int
rorb
rclb
aas
mov
fcoms
out
and
adc
mov
fisubs
ljmp
int3
mov
fdivl
rorl
or
push
sub
pushf
dec
test
xchg
cmp
nop
xchg
icebp
xor
fcmovbe
arpl
and
inc
mov
repz
dec
fwait
lcall
pop
mov
lea
pop
decb
mov
imul
stos
mov
pop
inc
xor
mov
and
cmc
loop
sbb
rol
dec
mov
fcomip
cmp
stos
repz
xor
lret
push
stc
dec
cmp
add
jo
dec
xchg
mov
add
sub
stc
xchg
lds
stos
orl
adc
push
sub
std
add
push
jne
rorb
mov
sbb
cmp
cmc
test
dec
test
fcmovu
dec
daa
stos
adc
mulb
mov
je
inc
push
inc
sbb
mov
inc
repnz
cmp
xchg
xchg
int3
dec
xchg
sub
inc
mov
add
incb
inc
in
hlt
mov
xchg
push
dec
pusha
add
cwtl
push
in
lods
mov
andl
or
out
test
push
iret
xchg
mov
mov
sarb
fs
popa
sti
dec
out
dec
add
outsl
dec
lods
call
xor
sbb
shrl
mov
jnp
roll
lret
xchg
fcom
pop
jp
xor
test
sub
pusha
pop
in
cmp
push
cmp
push
add
cmpsl
xor
mov
jb
mov
jns
push
adc
fisttpl
popa
push
test
mov
loope
ret
adcl
inc
arpl
cmp
add
outsb
enter
ss
inc
stos
enter
fnstenv
loope
aaa
aaa
fwait
push
and
push
pop
inc
rorb
pop
sub
push
leave
subl
push
jecxz
adc
and
aaa
flds
in
loop
xchg
je
flds
nop
out
into
in
mov
inc
fwait
push
pop
call
inc
fistl
in
push
repz
xchg
pop
cmc
mov
and
mov
or
and
ss
sub
or
add
sub
nop
dec
in
mov
push
mov
in
sub
dec
push
filds
ret
cmp
sub
loope
scas
inc
xor
jne
daa
adc
mov
push
mov
cmp
xchg
insl
mov
mov
xor
outsb
in
xchg
jne
jecxz
xchg
mov
stos
dec
dec
jmp
adc
sti
cmp
add
lcall
int
sti
xchg
push
push
cltd
lods
dec
lock
push
or
pop
xor
leave
inc
or
dec
fidivrs
xchg
xor
adc
pop
dec
and
and
sub
dec
inc
cmp
mov
sbb
loop
inc
jmp
sahf
sbb
or
push
stos
mov
mov
jmp
dec
or
inc
and
shr
jecxz
pop
mov
cmp
xor
xchg
cmp
push
or
xor
sub
inc
or
or
mov
std
out
out
jo
xor
xor
mov
test
ret
jge
pop
jo
jle
out
dec
xor
test
shll
mov
push
ss
sti
in
adc
sub
jae
fdivrp
fisttpll
xchg
scas
dec
outsl
ljmp
push
xor
icebp
lock
mov
inc
and
fwait
fwait
popa
pushf
push
arpl
std
ljmp
pushf
sbb
out
jg
cli
iret
jmp
and
mov
sub
push
loope
xor
icebp
adc
jo
pop
repz
rclb
addr16
test
jecxz
out
in
pop
dec
loope
aaa
xchg
daa
subb
cli
fiaddl
jo
shll
push
dec
lds
jno
in
and
xor
mov
fbstp
jns
movsl
ja
outsb
push
xor
stos
lcall
lds
dec
inc
pusha
movsl
fs
je
mov
sub
insb
sarb
call
jge
jp
add
outsl
roll
push
xchg
test
push
bound
test
es
shlb
arpl
jnp
icebp
lea
pop
jb
push
mov
lods
ds
or
adc
addr16
into
and
roll
andl
sub
pop
mov
stos
in
and
fistl
scas
cld
test
xchg
mov
aas
xor
xchg
dec
sarb
repnz
mov
hlt
mov
or
xor
mov
mov
jg
int3
lret
cmpsb
pop
mov
imul
andb
lock
jbe
xchg
inc
es
mov
ret
dec
sub
cmp
into
pop
aam
xchg
cwtl
mov
xchg
pop
fildl
js
daa
cmc
jp
or
sbbb
dec
jns,pn
int
stos
mov
test
sub
inc
test
mov
shrl
inc
dec
xchg
roll
out
fsubrs
jae
dec
mov
mov
rorb
sahf
popa
shr
incb
out
ds
fisubs
dec
test
or
jb
xchg
pop
int
inc
sub
mov
in
xorl
jns
push
sub
addr16
cmp
divl
scas
hlt
xor
pusha
dec
leave
sub
js
std
lds
mov
or
push
xor
sub
xchg
int
nop
pop
fcoms
add
enter
pop
in
imul
jle
xor
ljmp
add
fmull
dec
out
outsl
dec
fs
cmp
ja
in
push
jmp
lods
mov
dec
jns
cmp
sub
pop
pushf
imul
jne
jmp
mov
mov
xchg
inc
adc
ja
daa
dec
lret
or
mov
incl
clc
jp
test
loopne
inc
ja
popa
pop
pusha
cltd
test
daa
test
jnp
jmp
ljmp
cmpb
cmp
mov
es
cmpsl
sub
jno
int
inc
rcrl
int
dec
addr16
xor
stos
loop
dec
xchg
sub
shrb
cld
sahf
cmpsb
sub
out
test
sub
rcrb
es
jge
pop
dec
fldcw
mov
mov
jl
fs
mov
sub
mov
stos
test
jmp
xchg
repz
mov
cltd
aad
jmp
div
sbb
and
icebp
lcall
jge
jg
outsl
inc
mov
and
int3
cmp
test
insl
xor
fstp
dec
cltd
pushf
inc
aaa
fwait
gs
mov
dec
mov
mov
fsub
lret
inc
add
rorb
xor
pop
loope
subb
decb
ds
pusha
test
sti
les
mov
push
pop
ficompl
fdivrl
std
cmpl
repz
mov
jmp
stos
push
lahf
scas
rcrl
pop
inc
xchg
dec
mov
out
jno
add
cmpsl
sbb
test
in
mov
fisttpll
aam
pop
sbb
mov
rolb
mov
cwtl
aad
popa
jae
mov
dec
jbe
cmpsl
mov
les
add
pusha
or
dec
or
jbe
pop
inc
std
mov
ret
mov
adc
out
ljmp
push
inc
mov
push
inc
subb
mov
sbb
xor
push
inc
push
decl
add
pop
lret
outsl
or
mov
jl
fstpt
dec
jge
sahf
movsb
inc
cmpsb
imul
gs
call
jno
dec
lret
dec
inc
and
mov
adc
in
imul
mov
mov
adc
pop
mov
pop
push
call
inc
dec
movsl
outsl
and
cltd
add
adc
mov
cmp
mov
jb
pusha
int3
jl
push
xorb
inc
scas
fs
pop
dec
popf
stos
loope
sbb
sbb
stos
push
inc
mov
pop
add
test
xor
pusha
das
xor
fucom
lods
into
testl
mov
inc
ret
ficompl
inc
cmp
sbb
out
xchg
imul
leave
mov
ljmp
jmp
sbb
out
imul
fmulp
mov
add
jne
pusha
jl
je
jno
push
pop
xor
push
lea
xchg
pop
sbb
repz
cmp
outsl
mov
lods
fidivrl
mov
dec
mov
cmp
outsl
hlt
pop
push
push
lret
enter
mov
xchg
xchg
dec
sahf
mov
js
lret
xor
xor
loopne
scas
insl
mov
fs
cmc
sbb
ja
xchg
ljmp
popa
push
mov
pop
sbbl
hlt
add
arpl
addr16
sbb
and
xor
jmp
push
icebp
vandnps
dec
mulb
fcomps
jecxz
frstor
mov
mov
jmp
in
xchg
popa
mov
inc
xor
sbb
mov
imul
cld
dec
inc
lea
jecxz
jbe
cmp
cmp
in
mov
js
jecxz
fld
sarb
icebp
sbb
jo
dec
mov
insl
push
xlat
leave
push
xchg
cmp
add
pop
jg
mov
scas
into
dec
les
and
repz
and
dec
inc
imul
cmpb
js
iret
insb
les
cmp
sbb
lret
push
hlt
pop
pop
ljmp
test
scas
stos
pusha
sbb
mov
dec
lods
popa
out
insb
in
je
movsb
sub
lahf
jns
lcall
loopne
js
mov
addr16
into
dec
jnp
xor
push
mov
pop
mov
add
popa
add
push
pop
pop
push
xchg
js
mov
push
cmpsb
add
push
arpl
sbb
mov
loop
xor
loope
jnp
jb
enter
mov
mov
sbb
mov
mov
jae
cmpsl
scas
imul
int
aad
std
jae
shll
mov
ret
mov
push
iret
scas
pop
and
gs
jnp
pop
lahf
test
jecxz
lods
mov
mov
adc
add
sub
clc
lahf
mov
sbb
and
jmp
xchg
xor
fmuls
mov
cs
dec
flds
xchg
cmpsb
ss
test
mov
or
js
sub
or
jg
jo
stos
iret
dec
sbb
sti
insl
jle
gs
inc
es
xchg
std
push
aam
mov
xor
dec
loopne
les
into
in
orb
push
movsb
icebp
sub
fisttps
push
aaa
arpl
xor
jecxz
xlat
inc
mov
xchg
xor
fs
out
cmp
add
shl
jae
jle
adcb
ljmp
repz
xor
andl
fneni(8087
mov
xchg
stc
out
add
push
pop
jp
xchg
jecxz
mov
cmp
arpl
repz
movsl
sbb
inc
dec
lea
jp
bound
adc
xchg
loopne
xchg
push
lahf
push
and
mov
add
xchg
cld
pmuludq
add
and
or
cwtl
or
arpl
mov
jne
mov
jae
adc
loopne
rol
loop
mov
outsb
fistps
das
lea
out
pop
or
cmp
xchg
dec
cli
imul
xor
jae
repz
jbe
mov
sbb
ss
mov
arpl
sahf
lret
push
fisttpll
lods
xchg
cmp
jle
jp
xor
aas
add
outsl
mov
ljmp
add
xor
lds
rcrb
mov
xlat
sbb
mov
and
mov
xor
lock
add
cmp
ds
adc
jle
or
shrl
je
pushfw
xor
lds
xchg
xchg
leave
scas
outsl
fildll
outsb
push
jo
std
pop
pop
lods
cmpsl
xor
mov
push
sbb
arpl
mov
mov
movsb
cmp
lahf
mov
mov
pop
and
lods
jmp
jne
add
jbe
es
orb
test
in
pusha
aas
adc
inc
or
jns
mov
xor
test
pop
ljmp
dec
xchg
mov
sub
imull
je
push
ljmp
push
loopne
data16
insb
nop
pushf
jbe
xlat
fcoml
push
xchg
pusha
inc
push
imul
addr16
dec
mov
xchg
and
cmp
scas
iret
jb
and
in
leave
dec
push
adc
mov
adc
mov
decl
xchg
sub
jmp
push
hlt
pushf
jb
fmuls
push
mov
movsl
call
popf
test
shll
lds
daa
xor
mov
inc
dec
push
mov
scas
inc
rclb
and
arpl
jle
rolb
and
mov
mov
les
push
mov
inc
sub
js
add
dec
lods
decl
sahf
pop
sub
pushf
sub
ret
xchg
out
pop
pop
dec
sub
xor
outsb
mov
fisubrl
fsubrs
cmc
es
test
mov
call
stos
test
pusha
inc
dec
xor
les
xchg
jp
fidivrl
arpl
outsb
xor
call
pusha
cmp
jge
adc
add
shll
rorb
cld
addr16
pusha
sarb
dec
in
push
or
push
and
cltd
or
shll
push
mov
and
call
js
cltd
idivl
loopne
addl
mov
loop
cli
out
pop
mov
xchg
outsl
in
mov
sub
dec
aad
push
sarb
mov
sar
rclb
das
or
adc
mov
rcl
jns
scas
sbb
outsb
insb
test
sub
xor
leave
mov
out
inc
jle
icebp
cwtl
adc
subl
cmpsl
sar
adc
adc
mov
les
adcl
add
scas
inc
or
cmp
xchg
outsb
cmpl
sub
fstpt
adc
mov
jno
jbe
add
into
xchg
lods
jp
movsb
push
pop
mov
and
mov
dec
mov
add
movb
sbb
cmp
and
push
jp
pop
dec
cli
shll
dec
jo
add
or
enter
lock
and
lock
and
pop
mov
mov
sbb
fstpl
divb
cmpsl
pop
and
addr16
cmp
pop
fld
xor
enter
pop
add
int
test
or
sbb
fsubs
in
inc
add
repz
icebp
mov
mov
ds
data16
mov
fildll
loopne
xor
iret
inc
out
pop
orb
pop
fnstenv
add
mov
push
lods
and
addl
dec
or
push
repz
cmp
xchg
mov
sub
add
jb
push
fbstp
pop
cmp
pop
dec
rdtsc
add
push
adc
xor
in
mov
mov
jbe
jl
rol
sar
ljmp
in
inc
mov
mov
pop
stos
rcrb
popa
add
enter
andl
cmpl
add
jge
dec
testb
pop
lret
cmp
add
sbb
shlb
pop
and
bound
inc
cli
xchg
mov
lahf
jb
or
xor
mov
mov
loop
in
xor
aas
inc
or
das
jo
inc
pop
cmpsb
add
testl
inc
sub
popa
push
mov
jne
das
and
dec
je
outsb
and
xorb
ja
sub
insb
mov
clc
and
push
popa
xchg
xor
cltd
and
movsl
mov
insl
xor
aas
jns
lds
fists
lcall
ss
clc
xor
ret
pusha
or
xor
mov
sahf
out
cmp
pop
inc
sahf
add
lea
dec
xor
mov
fs
stos
pop
and
lods
popf
mov
ds
mov
adc
inc
cli
out
icebp
nop
sti
stc
mov
xor
cmp
jnp
adc
js
jecxz
fsub
stc
pmaxub
push
and
out
mov
inc
clc
xor
out
movsb
mov
mov
enter
mov
insl
dec
stos
lcall
inc
mov
scas
sub
pop
and
mov
out
add
out
dec
outsl
jg
add
push
leave
repz
in
pop
sbb
imull
mov
xor
push
int
mov
adcl
mov
or
inc
fmuls
push
mov
in
ret
int3
sbb
push
pop
lods
xchg
int3
push
std
cmp
pop
in
data16
les
dec
clc
loope
sarl
cld
xor
pop
mov
pusha
jl
dec
mov
mov
mov
cmp
iret
scas
fdivr
mov
iret
orb
jmp
fisttps
mov
or
in
dec
pop
mov
scas
int3
into
sub
xchg
movsb
inc
subl
sub
push
add
lods
and
lods
mov
push
add
xchg
cld
ret
repnz
push
add
push
lods
lds
ret
iret
jns
or
mov
fisubs
xor
stos
pop
std
jno
lahf
leave
push
or
out
mov
inc
ret
inc
arpl
mov
jno
adc
fsubl
xlat
jo
dec
jmp
jae
inc
aad
shrl
iret
xchg
push
jb
sub
pop
repz
jae
out
jl
or
test
stc
mov
pop
stos
pop
mov
bound
inc
cmc
cmp
gs
xchg
hlt
les
aas
mov
mov
movsb
into
mov
fcomip
jne
lret
pop
dec
cli
movsl
std
rolb
sbb
insl
mov
shll
and
icebp
std
jns
ficompl
fsubr
je
repnz
fiadds
fnstsw
jle
mov
adcb
add
pop
lea
and
xor
daa
dec
loopne
sbb
or
adc
ret
xchg
mov
push
cld
hlt
inc
mov
jns
mov
cli
into
aas
loop
sbb
aad
mov
mov
jb
sub
mov
xor
jl
aaa
pop
push
xlat
fists
add
push
jb
faddp
lahf
cmp
jp
cwtl
pop
adc
add
sub
and
push
stc
fmulp
popf
fucomi
stos
xor
cmpb
pop
fcom
sub
ljmp
out
mov
push
sub
and
in
adc
and
testb
cmp
subl
or
jl
xchg
leave
xchg
ja
mov
mov
pop
test
mov
rcrl
in
jge
push
or
lahf
push
xchg
rolb
sahf
ja
pop
push
jae
shld
lcall
mov
cmp
and
jp
sub
mov
cs
pop
aad
pop
icebp
les
and
jmp
adc
int
in
in
xor
pushf
add
fabs
inc
mov
fcoml
nop
fldl
xorb
into
femms
les
mov
push
shrd
pop
popf
stos
push
sub
mov
faddp
jbe
rcll
pushf
adc
push
int
push
fsub
xorb
push
adc
dec
push
fsts
adc
mov
aas
sub
push
ficoml
out
in
adc
inc
loope
sbb
sub
jle
gs
outsl
outsb
cmp
push
xchg
repnz
sbb
mov
mov
fists
aad
bound
mov
loop
daa
mov
xchg
cwtl
dec
fs
cmpsl
imul
jb
add
ljmp
aam
xor
pop
aaa
jno
imul
iret
cmp
jle
lea
loope
test
cli
insl
lock
ss
add
stos
flds
les
fwait
into
xchg
mov
aam
test
dec
daa
pop
jl
xor
into
cwtl
sub
repnz
dec
int3
xor
cld
and
xchg
idivl
jb
icebp
sbb
ror
aad
sub
in
and
mov
pop
mov
mov
fstpl
mov
jnp
inc
sbb
enter
in
flds
test
mov
jae
imul
sub
xlat
mov
jbe
pop
imul
add
xchg
out
scas
es
popf
push
adc
sub
jbe
pusha
or
insb
adcl
popf
dec
rol
mov
aam
js
pusha
push
insl
repz
mov
js
loopne
call
pop
mov
fistps
xchg
lret
or
inc
add
mov
jp
scas
and
mov
jno
add
add
cli
dec
xchg
nop
sub
xor
cmp
scas
inc
lea
dec
ret
jg
std
mov
xchg
test
and
shrl
insb
sub
inc
cmp
inc
outsb
sahf
shrb
inc
push
stos
lods
mov
dec
adc
mov
out
test
or
lock
mov
cmc
cmp
insl
iret
pop
orl
or
or
call
mov
or
mov
push
mov
cmpl
add
pop
fimuls
fisubrs
xor
aad
push
inc
xchg
xchg
and
pop
sbb
xor
mov
xchg
mov
adc
mov
test
cmp
aas
outsb
pop
je
cmp
pop
cmp
inc
xor
sbb
jb
movsb
pusha
pop
pop
inc
sub
imul
cmp
pushl
mov
std
je
add
pop
xchg
stc
sbb
add
out
rcrb
iret
push
and
mov
sub
dec
dec
xchg
and
add
leave
sbb
pop
or
adc
mov
test
xchg
mov
xor
push
fwait
pop
pop
fisttps
cmp
xchg
orl
and
adcb
add
test
repnz
roll
outsl
pop
inc
dec
dec
in
jmp
adc
arpl
dec
das
fnclex
dec
rolb
inc
or
and
rorl
lahf
in
daa
fcmovu
push
pop
xor
out
into
dec
ds
mov
inc
inc
cmc
lcall
js
imul
sbb
je
test
push
popf
seta
sbb
mov
inc
loope
dec
call
xchg
push
cmpsb
lret
jo
sub
rorl
mov
cmp
test
loope
cltd
dec
nop
sarb
and
arpl
call
sub
shrl
lahf
mov
mov
cmc
or
jne
gs
push
mov
mov
mov
out
push
call
repnz
pusha
push
and
jge
sahf
cli
js
test
xchg
adc
jo
xchg
jmp
test
lret
sti
rolb
insb
mov
shll
xor
mov
pop
popl
sbb
adc
lret
jo
inc
rorb
lock
sub
jg
std
repnz
outsl
pop
jge
cltd
mov
sub
adc
fbstp
stos
ja
push
cmp
pop
aam
nop
dec
outsb
stos
ret
push
dec
push
push
cltd
ds
mov
hlt
cmp
imul
xor
jbe
sub
movsb
pop
xor
mov
inc
mov
rclb
andl
and
iret
in
cmc
adc
fists
loop
inc
shll
dec
shlb
or
xchg
cs
xor
aaa
mov
lcall
gs
popa
fmul
lds
adc
pusha
and
push
lock
adc
mov
push
xchg
push
jo
sar
add
cmpsl
dec
pushf
cld
frstor
lahf
pusha
test
mov
in
adc
mov
ljmp
xchg
loop
mov
sub
cwtl
push
jl
sbb
add
test
inc
xchg
inc
shrl
xchg
movsb
aaa
call
xchg
lret
cmp
sub
pusha
mov
xor
into
jbe
mov
mov
shl
adcb
and
fstl
cmp
test
push
jmp
xor
gs
or
sbb
mov
mov
mov
cli
cs
inc
popf
jae
js
sbb
cmp
mov
mov
xor
sub
stos
pop
cli
push
mov
inc
cmp
push
jns
fnstenv
mov
insb
out
pop
cmp
add
movsl
xchg
add
push
cwtl
cs
dec
and
or
loop
sti
loopne
fmuls
int
dec
rcr
mov
xchg
outsl
xchg
dec
cmp
rcrl
jl
ret
jo
loopne
push
mov
push
imulb
inc
inc
cld
mov
stc
dec
sub
icebp
movsl
add
inc
loopne
lds
iret
sub
dec
dec
ret
hlt
add
mov
or
dec
movsb
sub
lret
leave
mov
frndint
mov
pop
or
xor
sub
sub
or
into
mov
je
bound
mov
ljmp
aaa
ljmp
or
out
mov
or
out
mov
in
mov
dec
out
scas
addb
pop
xchg
out
sbb
pushf
add
add
pusha
sub
test
pop
shll
dec
fnsave
jo
aas
stos
xchg
imul
aaa
jge
add
cmc
push
insb
adc
push
jl
imul
repnz
or
inc
orl
sub
mov
mov
insl
and
or
xchg
hlt
push
pop
lret
push
or
fs
pop
aaa
fdivrs
ja
stc
cmp
push
mov
pop
pop
mov
outsb
xchg
inc
lret
jg
test
ss
js
sbb
aaa
adc
lods
movsl
loopne
aaa
rol
ljmp
mov
adc
sub
test
push
int3
and
xor
push
push
lea
in
pop
jae
xor
push
outsl
mov
pop
jo
ret
and
clc
mov
iret
xchg
fidivrs
push
adc
fdivrs
jnp
test
cmp
xchg
clc
lcall
hlt
and
add
cltd
push
pop
shrb
xchg
nop
test
psubsb
and
cltd
jmp
sahf
add
andb
mov
mov
add
and
test
xor
sub
mov
cmc
fildl
adc
pop
inc
jbe
xchg
lahf
sbb
frstor
or
sbb
xchg
xor
sub
sbb
and
cwtl
shrl
lods
add
ljmp
jns
popw
fldenv
movsl
stos
push
mov
jecxz
xor
and
sahf
sbb
jp
dec
dec
push
popf
in
into
pusha
imul
mov
jne
cmc
in
inc
jle
ljmp
lods
out
push
and
adc
or
inc
lea
nop
and
outsb
jecxz
cmpsb
fcomp
scas
pop
sub
data16
xchg
adc
dec
sbb
inc
sarl
in
cmc
mov
sbb
outsb
stos
ret
jbe
leave
int3
fcomps
gs
outsb
test
dec
and
rcrl
xchg
add
pop
cmp
mov
adcl
arpl
jne
dec
je
mov
sahf
mov
popa
inc
and
add
mov
cmpsl
inc
xchg
add
pop
lea
lret
cli
sbbb
leave
push
popf
add
dec
data16
jbe
lret
popf
aad
sbb
mov
jno
adc
aas
fldl
push
sbbb
inc
ja
mov
sbb
leave
repz
and
idivl
add
cs
orb
fsubrs
jl
mov
inc
pop
int
dec
loop
or
cmpsb
fucomip
out
mov
mov
push
sahf
and
add
decl
shlb
cmpsb
int3
lods
pusha
scas
pop
lock
shll
mov
std
fwait
push
loop
repz
sbb
adc
insl
lret
nop
stos
shrl
iret
aam
add
cwtl
loopne
pop
inc
aas
aam
inc
lahf
add
loopne
loopne
xchg
in
push
push
rolb
data16
fldt
in
fcmovne
lods
pop
xchg
push
sbb
add
and
fstpt
mov
xchg
loopne
sub
or
sbb
pusha
mov
push
adcl
loope
mov
cmp
lret
push
repnz
jl
out
jae
mov
das
pop
jo
insb
mov
sbb
jl
push
xor
insb
rorb
sub
mov
jo
fwait
pop
lock
mov
rolb
outsl
aam
jbe
jne
cmpb
adc
cs
lret
dec
dec
sarb
cmp
jb
leave
and
icebp
cld
sub
cwtl
loope
pop
imul
not
test
jo
in
jno
xlat
jge
out
loopne
js
fs
fwait
push
mov
ret
inc
in
or
subl
dec
test
xor
fnstcw
lret
jmp
imulb
fistps
pop
nop
and
lock
mov
fimuls
pop
hlt
stc
pop
sarl
aad
xor
aad
xchg
dec
or
push
insb
adc
repnz
cli
mov
jp
jge
xchg
sbb
std
aaa
and
outsb
sub
mov
cmpsb
cltd
lods
cld
aas
sbb
mov
test
inc
pop
insl
mov
add
inc
out
pop
jne
push
add
out
jg
mov
sbb
lods
ljmp
repnz
or
xlat
cli
adc
or
mov
cmp
mov
lds
call
stos
cmp
test
push
sub
out
sahf
iret
xchg
jne
mov
mov
lret
ret
pusha
faddp
out
aas
adc
lock
adcl
cmp
cmpsl
outsb
iret
test
xor
xchg
mov
int3
cltd
cmp
out
sbb
adcb
in
cmpsl
sub
or
pop
cli
hlt
cmp
xor
inc
dec
mov
out
lea
add
xor
and
das
push
pop
ss
cmp
push
xlat
mov
jmp
push
enter
in
cmpsb
int3
iret
sbb
fldl
jne
scas
in
scas
in
pushf
adcl
inc
rolb
stos
fsincos
adcb
jmp
sub
push
iret
cmp
jmp
lds
sub
or
add
int
xchg
scas
gs
mov
adc
xchg
mov
pop
push
mov
mov
loop
mov
rcrb
or
outsl
ja
inc
lods
sbbl
cmp
pusha
rorl
ja
push
repz
inc
fimull
test
sub
xchg
or
xor
rcll
push
dec
dec
jmp
jmp
out
push
aam
into
xchg
pusha
dec
gs
lcall
push
movsb
sahf
fwait
mov
arpl
mov
sub
in
aas
stos
lds
les
or
xlat
out
mov
and
pop
es
ret
in
xchg
ss
and
movswl
out
insl
xor
ret
loop
int
xor
leave
jo
out
mov
xor
repz
xor
mov
jne
mov
rolb
pop
pushf
add
xchg
inc
jmp
dec
das
sub
data16
lret
pusha
inc
push
mov
stc
xchg
cmc
mov
faddl
dec
or
je
imul
ret
push
pop
pushf
imul
cmp
lret
int
jb
mov
cmpsb
mov
pop
leave
rcr
inc
push
imul
cmpsl
jge
das
xor
or
push
jbe
push
movsb
mov
sub
add
pop
mov
inc
or
cmp
outsl
lcall
push
xchg
mov
cltd
jae
clc
push
push
jl
cli
mov
test
ret
or
cld
xchg
xchg
cltd
cmp
pop
sarl
je
inc
and
and
aas
push
enter
dec
and
scas
mov
push
stos
cmp
aaa
jb
add
ljmp
sahf
ljmp
jb
jns
pop
mov
repnz
push
mov
inc
jno
fs
mov
jno
lods
xchg
push
fs
cmc
mov
adc
hlt
addr16
xchg
xchg
xlat
test
dec
cwtl
lret
jp
icebp
out
into
ret
jne
lret
test
xor
std
cmp
aas
fstpl
push
sbb
xlat
cmpsb
jmp
add
and
repnz
jbe
shlb
and
adc
cwtl
jae
sub
and
js
sar
sbb
sar
das
dec
popl
pop
push
leave
pushf
jp
outsl
popa
sarb
imul
lahf
int
mov
ret
jmp
movsb
push
push
jl
loopne
cmpsl
imul
imul
sbb
push
mov
mov
cmpsl
adc
cmp
and
pop
fistps
jae
or
mov
fs
xchg
sub
int
mov
xchg
add
stc
cs
mov
inc
or
sbb
adc
jo
mov
push
shrb
cmp
or
std
out
jmp
xor
cmp
dec
pop
fcompl
jl
cmpl
stos
inc
fcmovnbe
pop
xchg
fists
jecxz
push
popa
inc
loopne
xor
cltd
adc
fcmovb
mov
or
jmp
mov
add
sub
popa
cmc
in
sahf
es
in
jae
mov
div
lock
jp
sub
mov
add
xchg
jmp
mov
xchg
mov
je
loop
inc
inc
outsb
fiadds
sbb
fmuls
add
jge
out
ja
push
push
adc
mov
dec
add
incl
js
pop
jb
mov
movsb
fdivrl
fs
dec
and
cld
xlat
pop
mov
xchg
cmp
mov
jb
sbb
add
mov
or
sub
pushf
jge
jl
jae
inc
incl
or
push
push
cmp
aaa
insb
jbe
sub
xorb
mov
and
mov
pop
into
add
lea
jno
or
jo
out
lock
dec
dec
in
lret
out
fstl
insb
push
sub
fprem1
mov
cli
mov
insb
outsb
outsb
inc
adc
pop
and
xchg
mov
cltd
jl
aaa
inc
sbb
cmp
pop
jbe
fdivl
repnz
mov
push
sub
jnp
pushf
mov
pop
push
xchg
inc
inc
mov
lock
adc
mov
inc
sbb
mov
ljmp
repz
or
lods
out
mov
mov
aam
sub
jae
mov
xor
int3
push
and
es
es
shll
adc
cld
lret
movsb
add
lods
ljmp
or
jl
inc
cld
in
std
sbb
arpl
adc
das
sbb
outsb
jp
in
push
into
aad
aaa
dec
rorb
adc
test
scas
ljmp
lea
jg
inc
push
test
je
xchg
mov
mov
dec
repnz
xchg
pop
xlat
rcr
icebp
pop
jle
loop
call
jmp
mov
aaa
loop
fldl
sar
mov
sub
add
xchg
sub
fwait
sub
in
mov
mov
adc
pop
xlat
lods
hlt
xchg
cmp
imul
lret
inc
cmpsb
or
decl
push
jno
dec
xor
sbb
in
popa
inc
and
call
adc
or
pop
shlb
das
xor
mov
outsb
dec
push
jecxz
loopne
imul
ljmp
inc
xchg
sbb
inc
faddl
xchg
mov
jno
xor
and
push
cwtl
std
sti
outsb
push
xor
lea
daa
in
jmp
sbb
jmp
inc
loope
cmp
movsb
pop
ret
pop
repnz
fimuls
inc
testb
imul
lods
popf
out
popf
sbb
imul
lds
outsb
and
pop
push
jge
mov
ds
inc
andb
stc
mov
jmp
jecxz
add
ret
stos
adc
inc
rcrl
xor
ja
jg
mov
and
ret
xchg
test
mov
fidivrl
push
add
fnstcw
loope
mov
pop
int
pusha
out
pop
xor
test
jnp
mull
sti
ja
shl
sarb
sub
std
popa
iret
inc
icebp
sub
insl
leave
or
dec
hlt
sti
ret
dec
imul
push
adc
mov
mov
pop
gs
pop
je
movsl
dec
shl
mov
roll
std
xchg
push
outsl
inc
mov
outsl
xchg
add
hlt
loope
push
sbb
inc
or
aad
rorl
mov
pop
pop
inc
xor
mov
adcb
repz
mov
movsl
push
xor
xor
cltd
cmpsb
lea
or
adc
insl
mov
mov
xchg
push
xchg
dec
nop
or
inc
and
xlat
mov
sti
pop
lds
mov
incb
sub
push
push
out
rcrl
sub
arpl
cld
lods
or
adc
clc
adc
adc
pushf
lcall
test
aas
push
mov
sbb
adc
lock
mov
cmpsb
in
cmp
push
jecxz
sbb
jg
pop
fs
testb
sbb
xchg
sub
les
loop
mov
pop
xchg
lods
fildll
hlt
mov
sbb
xchg
incb
scas
mov
fsubrp
pop
dec
aam
stc
push
cmp
sbb
lods
cmp
push
mov
mov
dec
jns
push
call
xchg
popa
sbb
pop
mov
and
test
das
popf
imul
pop
movsb
inc
cmp
push
mov
xor
push
mov
mov
push
xchg
push
dec
xor
pop
inc
push
and
sub
cmp
jecxz
jbe
sbb
add
jmp
jae
jg
mov
mov
mov
cmp
icebp
cmp
mov
rclb
rorl
repz
sbb
in
mov
ss
rcl
in
pop
mov
stc
pop
ja
cmp
jp
out
testb
fcmovbe
ret
push
movsl
mov
data16
pop
into
fsubs
repz
cltd
out
cmc
ret
cmp
inc
sbb
imul
out
rcll
ret
mov
aas
in
xchg
test
xchg
aad
fimuls
jl
fstps
mov
xor
and
push
adcl
cltd
daa
and
in
add
jmp
mov
mov
xchg
outsb
mov
mov
fimull
jae
or
je
xor
jp
sahf
cmc
mov
adc
mov
inc
cld
nopl
sbb
or
movb
bnd
mov
ss
fsubr
push
mov
xor
loop
std
jo
mov
cmova
negl
mov
stos
jg
fldcw
cs
aaa
in
jnp
lret
leave
mov
enter
pop
adc
test
call
pusha
lods
xchg
nop
jp
mov
xor
les
std
jb
sub
lahf
mov
notl
out
xchg
sbb
popf
dec
or
addl
dec
mov
mov
fimull
push
jecxz
cmc
icebp
push
test
scas
out
xorb
mov
sbbl
movsb
in
movsb
repz
xlat
test
inc
cmpsw
and
sarb
movsb
shlb
pop
lea
mov
mov
ficoms
gs
xchg
sarl
fisubs
insb
jle
xor
push
inc
bound
ljmp
mov
icebp
sub
pop
add
dec
or
pop
pop
filds
sbb
int
inc
adc
testl
lret
rclb
sbb
out
jnp
rolb
jl
or
int3
push
mov
bound
shll
mov
add
jge
or
xchg
bound
inc
dec
aam
mov
lret
not
xor
sub
repz
cmp
pop
in
mov
out
int
cmp
jns
repz
pop
hlt
or
jne
loop
jno
mov
xchg
adc
dec
mov
in
dec
insb
dec
gs
out
lcall
es
dec
add
pop
adc
xor
xchg
out
loope
lret
icebp
inc
dec
dec
dec
mov
incl
mov
adc
int
movsl
in
push
cwtl
mov
mov
cmc
pop
sbb
jp
and
ret
jae
subb
jmp
jecxz
cmp
push
gs
inc
dec
fucom
js
xchg
lret
lahf
jae
or
pusha
sahf
aam
cmp
loopne
ds
jp
testl
mov
dec
mov
mov
push
shll
cmpsb
and
addb
das
icebp
scas
test
mov
pop
mov
dec
loope
inc
cmpsb
dec
cmp
jb
into
jge
dec
pop
cmp
mov
mov
push
arpl
pop
push
mov
stos
push
nop
push
pop
mov
popf
inc
cmp
andb
or
sub
xchg
bound
lret
bound
shlb
xchg
ja
filds
cmpsl
aaa
std
sbb
std
xor
fs
mov
les
jmp
adc
add
sahf
push
adc
lds
inc
sbb
test
loopne
mov
call
push
fsubl
and
lret
sbb
repnz
dec
mov
imul
mov
fisubs
sti
inc
jle
aaa
push
ret
arpl
test
lods
pop
arpl
mov
bound
jne
sti
mov
push
jb
dec
lea
sbb
xor
aad
clc
stc
cmpb
pinsrw
push
push
mov
jbe
pushf
inc
or
jnp
dec
lods
pop
mov
movsb
insl
addr16
mov
rcrl
adc
icebp
mov
icebp
out
movsb
cmp
jmp
adc
or
push
jle
movb
jns
mov
mov
and
sbb
xor
push
sub
mov
push
cmp
cmp
cmc
mov
push
ds
fidivrl
and
inc
movsl
gs
in
into
mov
sbb
js
movsb
and
sti
out
cmp
cmpsl
es
orb
imul
fildll
lods
and
mov
mov
aaa
mov
adc
roll
mov
cld
lea
rorb
imul
mov
mov
lock
mov
lock
in
sbb
sbb
mov
cmp
and
imul
or
repnz
cmc
add
ret
xchg
xor
xchg
bound
loopne
in
push
push
add
lret
mov
mov
sub
jg
lret
subl
jb
pop
cmp
rcr
mov
lcall
push
jle
cmp
mov
sti
jmp
or
lods
lock
sbb
lahf
aam
out
enter
lret
inc
jae
int3
neg
mov
arpl
mov
leave
add
jae
or
or
inc
mov
pop
pop
push
jb
and
sub
aad
arpl
mov
outsl
insl
faddl
add
inc
or
cltd
add
xor
bswap
imul
push
inc
mulb
test
push
push
pusha
mov
mov
push
fsubrs
test
xchg
jnp
incb
shll
stc
stos
cmpsl
and
mov
mov
iret
inc
add
pop
gs
mov
js
cltd
push
and
call
jbe
hlt
sub
icebp
shll
cmp
add
inc
ret
jp
and
add
mov
sbb
std
and
adc
insl
jno
mov
fucomp
les
ja
pop
adc
fsubrs
xor
inc
sahf
dec
cli
aas
cmp
cmp
inc
aaa
mov
addr16
daa
js
adc
in
or
mov
add
and
test
push
mov
and
cmpsb
insl
rolb
mov
xor
or
adc
fdivrl
push
jne
aas
mov
fdivl
pop
xchg
fadd
fstps
sbb
adc
sahf
mov
push
xor
lods
int
jmp
inc
cmc
mov
pop
popa
stc
push
imul
push
jae
or
ss
jo
in
xor
lds
ds
fnsave
xor
mov
xchg
mov
in
mov
jae
xchg
pop
push
sub
xchg
cli
pop
in
jno
sub
or
sahf
adc
and
jmp
out
insb
push
js
pop
xor
lcall
shl
fdiv
pop
mov
mov
adc
into
cmp
mov
ss
push
and
scas
test
in
xorb
je
pushf
sub
adc
cs
inc
cmp
dec
mov
add
xchg
stos
pop
inc
xor
inc
mov
mov
mov
xchg
loope
xchg
jb
push
cmp
mov
mov
loop
or
mov
mov
mov
jecxz
push
test
pusha
pop
inc
add
iret
cli
push
lgs
jns
gs
out
mov
sbb
enter
gs
ljmp
jbe
lcall
fdivrl
jns
jns
xlat
jno
or
dec
xor
jmp
lods
mov
inc
adc
jle
ss
jbe
sbb
push
xchg
lock
add
xor
jmp
pop
fldenv
jmp
or
ljmp
in
dec
push
adc
je
pop
and
jle
jbe
mov
or
pop
xchg
iret
sbb
dec
cmpsb
xchg
xchg
inc
test
inc
insl
sbb
fwait
adc
mov
lock
mov
sahf
lret
lea
sub
lock
xor
out
mov
movsb
dec
push
or
orb
xor
repz
dec
mov
xchg
xchg
int
aas
addl
dec
sub
sbb
sbb
lock
pop
mov
xchg
push
or
mov
testb
adc
das
pop
sbb
fsubrs
sbb
xchg
cmc
movsl
jl
out
mov
pop
mov
jg
mov
lcall
and
sub
push
jae
setne
sub
lds
dec
out
ss
and
jae
out
ljmp
rcll
mov
cltd
in
fistpll
mov
xlat
jge
movsl
or
sbb
rcr
aaa
cmpsb
pop
mov
jle
lret
xchg
mov
cld
cmp
xchg
lahf
into
sub
xor
and
pop
mov
or
or
fwait
dec
out
out
mov
out
gs
fs
loop
dec
and
lahf
sub
iret
fwait
fs
push
xchg
adc
int3
and
or
aam
mov
sub
lds
popa
lret
and
in
xlat
push
adc
pmaxub
shll
int3
xchg
cmpsl
in
pop
dec
lea
cld
movntq
out
push
imul
inc
out
adc
and
repnz
nop
loopne
leave
cmp
jnp
inc
cmp
add
cmc
and
xchg
cmp
lock
sbb
fbld
test
inc
push
cmp
mov
sbb
pop
add
mov
push
into
mov
mov
enter
scas
and
jecxz
pop
adc
mov
test
mov
and
fisttps
sub
mov
and
sbb
shl
jbe
xchg
lods
mov
in
jmp
dec
add
js
cmpsb
cmp
pop
pop
dec
mov
cvtps2pd
fsts
or
loopne
aad
mov
sbb
les
push
xchg
jmp
leave
and
out
push
dec
add
inc
mov
movsl
push
or
sbbb
shlb
cmpsl
dec
jns
adc
fldl
daa
nop
jo
mov
add
hlt
scas
test
jle
fs
loopne
or
mov
std
aaa
xchg
rcll
dec
pop
add
cmp
adc
xor
ja
jnp
jbe
pop
dec
stos
jecxz
iret
sub
and
aam
ret
dec
dec
jbe
lea
adc
js
repnz
adc
call
sbb
js
and
je
push
mov
cld
fwait
fwait
mov
cmp
or
jecxz
dec
cwtl
xlat
push
mov
ja
sub
mov
xchg
nop
adcl
mov
pop
inc
inc
jmp
std
loope
fs
call
es
popa
pop
test
xchg
test
data16
in
push
mov
std
mov
jno
test
adc
xor
outsl
out
mov
xchg
add
and
xor
jae
adc
mov
lahf
mov
mov
cwtl
xchg
fnstcw
push
or
cmp
cmp
jge
xor
xor
adc
shlb
popa
sub
xchg
fistpl
inc
je
into
fisubrl
cmp
adc
inc
pop
lock
cmp
add
pop
sbb
incb
xor
outsb
mov
lea
cmp
in
push
ja
cmc
call
dec
leave
fnstcw
push
shr
out
pop
xor
in
fsub
jle
jbe
sub
shr
jp
or
loope
sub
jnp
leave
lea
sahf
dec
int3
cmp
icebp
push
ret
inc
insb
in
jne
ret
scas
jne
aaa
push
ret
jmp
jo
pop
pushf
inc
imul
xchg
mov
cs
mov
xor
pushf
in
mov
ret
add
orl
scas
repz
add
arpl
ja,pn
cli
pop
in
push
nop
jge
or
rol
pop
fistpl
mov
mov
movl
fst
jno
fimuls
cli
ds
mov
test
insb
mov
outsb
pop
mov
or
dec
lret
testl
out
inc
and
aas
fiadds
jae
scas
hlt
mov
pushf
xor
xor
add
push
mov
daa
popf
pop
xchg
jge
pop
aas
pushf
mov
xor
mov
inc
test
mov
cwtl
cmp
xlat
jmp
jne
mov
mov
mov
into
dec
or
add
add
mov
mov
jo
shll
or
arpl
test
sbb
insb
inc
add
call
sub
mov
mov
sbbb
andl
lret
cmpsb
or
test
push
inc
cmp
loop
mov
mov
cmp
mov
addr16
dec
cmpsl
sub
sub
xchg
push
nop
jb
adcb
cmp
mov
sub
xor
sub
lret
cld
das
sar
xchg
and
inc
push
in
ja
test
in
push
inc
mov
es
in
mov
mov
xchg
add
ret
aas
fstpl
inc
in
xchg
and
rol
rorl
pushf
cltd
mov
add
jle
mov
dec
xchg
ret
testl
dec
add
inc
add
mov
cli
shlb
lock
xorl
insl
dec
jmp
mov
mul
mov
or
xchg
adc
sub
or
xchg
xchg
out
dec
mov
sub
pop
in
das
addr16
mov
xchg
lahf
lods
test
jl
xlat
pop
cmp
xchg
xorl
dec
lahf
xchg
mov
pop
adc
sbb
sub
sub
jmp
sub
pushf
sub
xchg
mov
xor
mov
cmp
inc
mov
in
imul
push
push
ficomps
cmp
movsb
sbb
push
cmp
push
sub
dec
enter
hlt
lods
mov
outsl
mov
mov
mov
or
push
adc
inc
addr16
out
add
jnp
imul
pop
mov
cltd
xor
pushf
icebp
aam
mov
fimuls
push
pop
int3
jns
jns
int
fldenv
push
aaa
sbb
push
mov
xchg
sub
xchg
shrl
adc
roll
xor
lahf
cmpsb
fnsave
xorl
addb
mov
pusha
lcall
das
hlt
inc
push
imul
sbb
mov
inc
int
mov
rorb
sti
insl
dec
je
xor
lods
pop
nopl
jne
fimull
cmc
pushf
setno
jne
sub
cmp
iret
fcompl
sub
cmp
push
adc
imul
into
test
dec
sub
jp
imulb
lret
xor
lret
lcall
inc
das
outsl
jne
enter
xchg
fsubl
into
cmpb
xor
add
movsb
repnz
lds
mov
lcall
pusha
jle
xchg
pop
inc
in
cmc
sbb
jl
cwtl
lock
pop
or
sbb
loope
pop
insb
xor
sbb
hlt
or
xor
fistpl
shlb
fwait
lods
in
sti
dec
fists
xchg
cmp
push
and
les
mov
add
lods
imul
mov
rcr
insl
mov
mov
jle
stos
mov
les
adc
mov
lret
push
xchg
sahf
mov
sub
inc
insb
das
aaa
loop
and
push
fidivs
ret
jp
insl
test
or
pop
mov
subl
sarl
cwtl
pop
adc
test
int
ljmp
outsb
jns
jno
div
mov
push
mov
add
idivl
ss
fldcw
push
scas
lcall
and
cmp
pop
lret
repz
xor
or
push
out
jae
imul
pushf
insb
imul
pop
xchg
and
push
adc
ss
call
fdivs
and
shll
fucomi
or
call
jae
inc
xor
mov
sbb
add
inc
and
xor
loopew
imul
sti
xchg
lret
data16
dec
push
adc
jns
stc
mov
sub
xchg
inc
je
popf
sbb
push
cmc
push
popa
insl
xor
sub
and
pop
test
dec
dec
sbb
call
pop
add
shrl
sahf
insb
push
loope
and
mov
push
push
xor
mov
xor
mov
je
les
mov
sbb
aam
in
inc
shrl
mov
dec
mov
cmp
push
shlb
fyl2x
push
sub
lea
mov
and
mov
push
jno
fsubrs
jg
lret
outsb
push
mov
cmpsb
jp
enter
lret
and
and
sbb
leave
add
movsb
pop
sbb
enter
mov
jge
popf
outsl
mov
fnstcw
xor
jnp
arpl
mov
into
push
bound
jbe
jmp
mov
fsubrl
dec
mov
sub
test
or
mov
cli
push
lret
mov
cld
into
cmp
xchg
fdivl
repz
test
push
fxch
enter
push
jno
dec
leave
test
js
outsb
out
push
dec
and
cli
cmp
nop
ret
shr
push
aaa
lret
push
cltd
je
jecxz
xchg
in
xor
nop
mov
dec
test
xor
xchg
mov
outsl
push
shrb
cltd
adc
fdivrp
cltd
das
std
out
mov
pop
roll
inc
or
and
aad
pop
xchg
das
ss
mov
or
adc
cmp
insl
push
jl
push
int
xor
cld
mov
in
aas
mov
mov
cmp
jb
fidivs
jb
and
add
mov
pop
inc
call
into
pop
mov
dec
gs
rolb
jmp
xlat
sub
xor
sbb
into
sbb
clc
mov
mov
adc
subb
xchg
repnz
in
and
cmc
xchg
dec
push
mov
fstl
jnp
pop
mov
and
adc
sub
movsb
cld
mov
test
test
lods
xchg
add
cltd
and
and
lret
mov
push
pushf
jno
mov
das
out
out
or
xor
mov
lods
adc
ss
sub
cltd
mov
mov
inc
insl
and
mov
shl
adc
adc
fnsave
insl
or
push
es
js
arpl
notb
cmp
xor
pop
addr16
xchg
jmp
outsb
movsb
mov
sub
jge
cmp
pushf
jg
jg
xchg
and
adc
mov
in
int3
iret
outsb
int
fucom
pop
jge
add
pop
imul
xor
xchg
loopne
ftst
lret
out
xchg
fisubl
test
jge
cmpsb
add
jmp
dec
cli
inc
mov
sub
inc
dec
and
xchg
or
sarb
jb
push
hlt
add
xchg
dec
cmp
mov
and
stc
sbbb
and
jnp
insl
test
xchg
ret
xor
sbb
push
pushf
iret
xlat
sub
sub
jne
jns
jle
mov
insl
xor
mov
sarb
inc
dec
sbb
pop
gs
and
int3
jmp
aad
daa
cmpsl
loope
and
sbb
lret
xchg
xchg
add
mov
out
loopne
gs
dec
xor
idivb
loop
jecxz
in
lds
popf
cld
mov
popa
push
jo
inc
dec
clc
mov
jb
in
and
pop
inc
fstps
pop
fildll
and
dec
fsubs
mov
adc
xorl
sbb
lea
push
dec
dec
or
xchg
rolb
rcll
outsl
das
mov
and
adc
inc
test
pop
or
iret
je
push
mov
test
bnd
das
enter
ja
arpl
dec
std
sbb
dec
fstpl
pop
cltd
mov
mov
pop
aam
test
xor
push
xchg
out
cld
jmp
pop
jge
lock
movsb
sub
sub
arpl
cwtl
test
xor
jne
pushf
jecxz
pop
xlat
dec
push
movsl
ss
negb
fwait
roll
mov
sbb
test
cli
sub
shlb
scas
push
mov
mov
pop
add
mov
or
bound
inc
inc
push
and
pop
outsl
mov
outsb
push
add
nop
xchg
xchg
push
xchg
mov
xor
mov
sub
mov
lds
andb
push
jnp
sbb
pop
pusha
sbb
xor
out
cmp
or
pop
into
mov
sub
add
test
bound
pop
sbb
lods
and
int3
xchg
test
sub
cmp
or
dec
inc
mov
or
and
xor
insb
test
movsb
inc
add
arpl
mov
xchg
sahf
and
insb
mov
popf
jbe
pop
mov
inc
jmp
pusha
cmp
sub
add
nop
inc
lret
xchg
cmpsl
xchg
push
pop
push
into
popf
sub
mov
mov
jmp
add
rclb
adc
push
xchg
std
movsb
out
jle
sub
rorb
xchg
push
xor
mov
adc
psrld
into
int
fcmove
push
and
push
jno
xor
shll
dec
pop
je
test
dec
add
mov
sbb
xchg
dec
xor
jge
mov
sub
notb
push
dec
inc
cmp
push
cwtl
aam
test
in
mov
aad
loope
xchg
or
or
adc
notb
jl
push
imull
in
mov
cmp
cli
xlat
mov
pop
inc
es
arpl
adc
cltd
and
mov
sub
add
pop
testb
stc
rcll
add
fwait
pushf
js
popl
aad
inc
stos
xchg
fwait
cld
cmp
cmpsl
add
mov
scas
fs
xor
pop
cwtl
inc
fidivrl
mov
and
or
dec
sub
popf
addr16
cmp
paddusw
popf
or
pop
mov
int
loop
jno
xorb
mov
setns
or
jno
test
dec
stos
sbb
sbb
push
cwtl
movsb
sbb
adc
nop
or
dec
pop
jle
jo
pop
pop
das
push
xchg
cli
cmp
push
sub
data16
xor
xor
cmp
xlat
out
mov
push
fistpll
jno
cmp
insl
sub
call
and
pop
nop
dec
out
sbb
xor
inc
shl
out
push
aam
jbe
jo
icebp
and
mov
pop
mov
scas
inc
mov
insb
xor
fildll
add
inc
cli
mov
push
cmpl
ret
inc
add
cltd
push
leave
sub
mov
loopne
mov
dec
daa
mov
lcall
inc
aam
jge
cwtl
sub
push
xchg
mov
lahf
inc
loope
jecxz
inc
daa
popf
lea
mov
iret
pop
mov
out
cs
mov
push
xorl
mov
shrb
std
popa
mov
inc
out
fmul
aas
mov
aas
mov
in
rorb
sub
cmp
or
mulb
stc
mov
fsubrl
cmp
xchg
fimuls
mov
mov
cmpsl
push
pop
add
xor
cs
push
out
es
dec
pusha
sbb
repnz
jge
movsl
or
push
test
stc
adc
xchg
popf
push
jae
adc
call
dec
cmp
das
ficoms
push
dec
cvtps2pd
nop
add
inc
jmp
fsubr
psraw
dec
sub
sub
jns
jle
jecxz
inc
xchg
push
cli
dec
lret
jge
pop
shlb
mov
fimuls
sbb
loopne
and
subb
xlat
insb
rorb
insb
push
insb
sbb
icebp
imul
inc
lcall
jl
in
inc
insb
sbb
add
shl
rcrl
push
sbb
jns
arpl
xchg
loopne
arpl
sub
mov
mov
xchg
and
dec
sti
and
add
shlb
xchg
jp
out
das
push
sub
push
aam
insl
pushl
cwtl
xchg
mov
test
dec
lods
mov
xor
xor
add
imul
popa
jecxz
lret
and
or
xchg
fisubrs
insb
dec
cmp
xchg
js
jle
ret
jg
and
jl
and
sbb
movsb
mov
fadd
pop
movb
pop
push
or
sbb
jmp
leave
dec
sahf
pop
lods
sub
inc
or
xchg
push
addr16
jle
pop
cmp
push
push
adc
xchg
ror
jmp
enter
ja
sbb
int3
daa
mov
lods
cmp
imul
sbb
pushf
ret
add
xor
mov
lea
sbb
cmc
jbe
sub
loopne
cs
mov
inc
push
and
cs
mov
aas
sub
sub
mov
rcrb
and
mov
or
dec
popf
in
jo
mov
dec
mov
jmp
and
test
lods
mov
sub
jmp
inc
mov
mov
aam
popf
jae
mov
and
sub
movsl
adc
or
outsl
int3
aas
inc
into
xchg
aad
call
pop
xchg
pop
sbb
push
int
add
jg
sub
push
data16
imul
lods
out
inc
dec
mov
rol
enter
mov
cmc
push
inc
mov
pusha
inc
jp
mov
adc
test
lret
test
shlb
sbb
shrb
insl
lret
test
fs
stos
cltd
int3
push
inc
dec
cmp
popa
rsqrtps
scas
adc
add
roll
mov
pusha
loop
adc
or
push
popf
mov
insl
mov
loopne
movsb
xor
and
sahf
int
bnd
jecxz
test
xchg
arpl
sar
xor
mov
stos
movsb
mov
cmp
xchg
pop
mov
cmc
or
and
mov
add
xor
and
add
jne,pt
mov
mov
or
adc
push
fwait
bound
iret
sti
mov
mov
jae
adc
and
vmaxss
xor
and
cwtl
dec
push
es
fmul
rcrl
dec
xor
ss
fcoms
sbb
xchg
cmc
or
pop
mov
imul
mov
cmpsl
cld
xchg
jecxz
cmpb
or
push
test
cwtl
add
ret
or
add
adc
inc
push
inc
repnz
xchg
inc
ficoms
out
mov
dec
cli
mov
cmp
cli
add
mov
sub
in
xor
or
insb
jbe
in
jge
call
std
dec
lahf
movsb
and
mov
in
xchg
jo
popa
in
cltd
arpl
sbb
dec
mov
dec
pop
inc
mov
mov
stos
xor
or
sbb
int3
pop
pop
adc
dec
test
mov
stos
mov
add
add
sarl
mov
mov
xchg
lret
repz
jb
mov
mov
pop
and
add
push
lock
lods
xchg
jge
insl
paddusw
adc
xchg
fstps
sub
pop
xchg
cli
and
mov
inc
cmp
in
pop
jg
enter
cmp
jno
ss
pop
add
sbb
inc
jmp
jge,pt
xchg
lods
les
incl
add
inc
cmp
jno
add
pop
aam
inc
push
jecxz
xor
push
push
xchg
push
cmp
fldcw
xor
mov
ja
push
push
cmp
pop
enter
xor
cmp
add
outsb
stos
das
inc
push
dec
xchg
mov
and
out
aad
and
in
testb
or
sbb
adc
shr
push
int
fisubrs
sbb
cmp
add
lods
jne
inc
nop
push
add
mov
rorl
inc
call
inc
cmp
cmp
andb
daa
xchg
xor
mov
sub
xor
inc
jns
jp
xor
inc
or
mov
and
jmp
aam
mov
cmp
loop
jnp
imul
stos
pop
fdivs
ret
ss
out
popa
mov
push
das
push
cmp
push
loope
es
mov
sarb
je
rolb
fsubrl
addb
imul
shl
mov
jmp
aam
dec
nop
or
pop
or
dec
cmp
out
or
outsb
or
adc
stc
pop
loopne
adc
subb
nop
pop
adc
add
sub
sbb
int3
decl
sub
cmp
daa
jne
in
test
sbb
in
pop
dec
mov
sub
xchg
sub
or
inc
loop
es
sub
aam
jmp
stos
data16
xchg
xchg
mov
cs
in
hlt
mov
xchg
and
pop
aam
mov
mov
or
stc
add
pop
and
xor
cmp
push
adcl
xor
push
push
call
jne
mov
mov
add
test
out
frstor
dec
jns
sar
inc
dec
cs
push
addr16
dec
xor
lods
push
fcoml
jp
inc
fsts
adcb
je
scas
lock
dec
pop
hlt
imul
xchg
popa
lret
add
sub
jmp
or
in
rclb
mov
cld
call
movsb
cmpsb
xor
push
pop
pushf
xor
cmc
dec
in
test
cmp
or
mov
and
mov
push
cmp
pop
add
hlt
negb
shll
xchg
xchg
jp
imul
push
jle
hlt
jg
dec
xor
jg
mov
adc
fwait
shl
repnz
sub
in
lds
or
stos
dec
shll
xor
rorb
jne
xchg
inc
clc
inc
imul
push
lret
cld
frstor
and
out
js
mov
adc
loopne
dec
jnp
add
stc
stos
sub
roll
xchg
dec
mov
je
outsb
push
loopne
ret
pop
inc
fsub
int3
pop
mov
xchg
jb
push
cli
hlt
push
xor
adc
ret
jmp
int
mov
jo
in
les
inc
inc
mov
mov
repz
push
and
nop
std
jnp
es
push
repz
loop
add
xchg
test
test
jno
sbb
sbb
arpl
add
push
cltd
getsec
mov
inc
in
in
in
dec
jg
add
fisttpl
dec
in
fiaddl
adc
pop
pop
inc
aas
movsb
repnz
lcall
movsb
or
mov
sbb
push
xor
adc
iret
fs
or
lahf
sets
dec
mov
push
cmp
and
push
mov
aam
cld
inc
sub
movsl
inc
notl
dec
aaa
xchg
cli
rcrl
popa
aaa
insl
xor
addb
stos
push
movsb
sbb
ja
ficompl
sahf
mov
pop
mov
loope
fwait
sbb
pop
stc
clc
pop
pop
inc
sbb
subl
sbbl
xor
pop
bnd
push
dec
and
cmp
in
mov
or
add
push
into
es
fs
sbb
push
dec
rol
orl
ljmp
cmp
mov
jmp
into
cld
sbb
adc
lds
mov
enter
push
sarl
mov
jl
lods
aas
pop
mov
adc
negl
xchg
aas
mov
xor
add
and
xchg
or
into
ss
xchg
sbb
add
shl
add
test
lea
popa
test
stc
repnz
sub
test
pop
call
add
unpcklps
dec
cmp
adc
mov
pop
rolb
jae
dec
popf
aad
xchg
dec
das
mov
pop
jle
xlat
test
xchg
imul
push
xor
xchg
inc
and
out
stos
mov
icebp
dec
jmp
add
cmp
pop
movsb
fsubs
mov
and
test
cltd
or
sub
push
les
jge
stc
out
and
mov
fnstsw
mov
dec
inc
fildl
jb
dec
lock
aad
movsb
fsubp
xor
mov
leave
fnstcw
sbb
subb
lock
mov
das
cmp
add
mov
fisttpl
imul
inc
shlb
outsb
es
jp
repnz
mov
cmp
cmp
lods
xchg
and
cmpsl
insb
stos
out
add
lock
int
je
cmp
adc
gs
inc
sub
pop
lcall
and
push
scas
pop
inc
pop
cs
and
movsb
push
cmpsl
lds
adc
into
sbb
dec
push
push
add
sub
inc
dec
mov
push
pop
dec
fnsave
les
mov
cld
test
push
jnp
mov
or
psraw
iret
les
in
add
xchg
mov
jno
sub
lcall
lods
dec
xor
xchg
clc
and
jne
mov
sbb
dec
dec
jg
shll
or
or
jmp
push
insl
nop
sub
inc
lret
std
jmp
je
push
mov
xlat
punpckhwd
or
xorb
movq
lret
cmp
xlat
nop
movsl
inc
les
clc
mov
cmp
pop
ficoms
fwait
aad
and
stos
gs
faddp
dec
in
mov
outsb
es
int3
imul
inc
out
jbe
mov
jge
mov
adc
pop
bound
add
mov
leave
hlt
mov
outsl
xchg
cmc
mov
inc
cwtl
jb
pop
or
test
imul
push
cmc
jno
cmp
sub
scas
adc
in
ss
sbb
nop
push
add
mov
fnsave
ljmp
mov
lods
pusha
pop
insl
cwtl
in
inc
jbe
jp
push
xlat
xor
lret
lods
cmp
call
cmp
inc
addb
jbe
shr
inc
es
aad
fcomi
push
dec
or
and
jg
adc
dec
repnz
push
add
into
popa
or
xor
pop
insb
push
adc
sub
mov
or
out
out
push
sub
sti
or
clc
dec
cmp
aaa
in
scas
adc
call
push
mov
xchg
dec
add
imul
cmp
or
push
stos
pop
lods
sbb
and
add
repz
icebp
cld
dec
sub
sbb
adc
fiadds
movsl
adc
adc
pop
imul
or
stos
imul
ss
push
in
dec
roll
mov
stos
add
scas
aam
pop
xor
mov
xchg
xchg
mov
clc
dec
xchg
add
dec
sbb
call
mov
mov
and
pop
or
lods
sti
inc
push
shlb
push
push
xlat
inc
rolb
int3
pop
cmpsl
pop
pop
fldcw
dec
jp
mov
lods
cltd
or
or
pop
cmp
jl
outsb
aas
jg
mov
lret
cli
mov
fmuls
je
sti
outsb
out
stos
ds
adc
cmp
iret
cmpsb
or
and
mov
mov
std
call
mov
or
or
fistpl
ficomps
cmp
call
inc
je
cltd
mov
xchg
inc
or
dec
push
ret
mov
inc
sub
cmp
stos
punpckhwd
add
lods
stc
mov
and
je
out
loop
cmp
in
mov
sbb
xchg
push
icebp
aam
xchg
lods
xor
aam
sbb
test
movsb
imul
push
inc
pop
ds
aam
and
out
xlat
packsswb
idivb
stos
fdivl
or
cmp
negl
cli
cld
dec
push
repz
push
mov
mov
negb
push
in
punpcklwd
incb
inc
push
in
jle
inc
ljmp
stos
popa
or
out
shrl
jae
jg
pop
inc
jnp
mov
shll
lock
dec
adc
lds
aaa
jno
imul
mov
pop
sarb
popf
imul
stc
cwtl
aas
lret
scas
push
sbb
ret
pusha
lea
stc
out
cmp
cli
dec
cmpb
xor
cwtl
mov
dec
mov
mov
add
mov
sub
and
clc
pop
addl
cmp
jns
xor
lcall
nop
add
xchg
xchg
cmp
mov
pop
push
in
loopne
sti
scas
mov
cmpsl
lahf
out
aad
mov
popa
pop
cld
jns
cltd
pusha
flds
int3
movsb
call
lahf
insl
lret
test
stos
push
jg
les
xlat
repnz
popf
jle
fimuls
push
xor
roll
jmp
jo
lcall
mov
daa
sbb
fucomip
cmpsl
cmpsl
aam
cwtl
outsl
jb
outsb
add
aam
testb
mov
pushf
pusha
enter
pop
test
jnp
mov
scas
mov
stos
and
mov
or
jecxz
enter
cltd
mov
aaa
ror
adc
into
scas
inc
hlt
adc
in
cli
mov
popf
add
sbb
sahf
mov
call
mov
mov
push
inc
mov
mov
push
cmc
iret
pop
pop
movsb
mov
inc
push
mov
xchg
aaa
sbb
pop
inc
stos
hlt
mov
adc
xchg
add
mov
add
pusha
dec
jbe
ss
cmp
and
movsb
stc
fsubr
push
mov
call
jmp
xchg
das
pop
stc
pop
ja
or
fcoml
int
mov
mov
push
sub
and
jne
lock
popa
ficoms
fidivrl
sub
dec
sbb
xor
movsl
rorb
adc
xor
inc
dec
mov
sbb
mov
adc
pop
add
rorl
mov
mov
cmp
lret
dec
popf
lcall
lds
cmp
lods
lods
jne
adc
jae
inc
xchg
inc
cli
cmc
xor
cmp
bound
ss
or
sub
add
dec
mov
add
push
movsl
jbe
mov
leave
aad
sub
mov
sub
jge
sub
xchg
test
pop
movsb
mov
pop
pop
dec
pop
cmp
call
inc
in
mov
bound
mov
in
pop
jg
in
insl
dec
pushf
imul
sarb
arpl
insb
loop
xor
leave
jge
sub
pop
cltd
add
sbb
mov
addr16
and
xchg
sub
sub
nop
ret
sahf
cmp
and
adc
jmp
and
add
sub
lret
mov
xchg
je
adc
subb
add
out
jnp
mov
xrelease
xor
jl
stos
js
test
fldenv
sbb
shlb
cmp
cltd
imul
rclb
push
movsl
std
push
push
mov
loope
sbb
mov
das
mov
or
sub
push
add
and
mov
shlb
xorb
sub
test
mov
ja,pn
test
cmpb
mov
lret
adc
imul
or
test
ja
sbb
lea
jge
fldcw
in
jb
mov
ja
int3
mov
add
and
inc
nop
pop
push
or
dec
cwtl
mov
push
loope
mov
cmpl
sbb
sub
mov
pop
lret
lcall
gs
clc
mov
jno
mov
insl
pop
jecxz
or
rcr
or
lods
and
popf
imul
out
add
popa
inc
xor
xchg
xorb
jae
pop
adc
lds
repnz
jno
dec
add
movsb
inc
shrl
and
sbbl
gs
mov
rolb
jne
mov
sarb
push
sub
and
clc
test
bound
stos
in
jmp
adc
imul
mov
je
daa
arpl
mov
mov
scas
ds
jns
test
into
xchg
jl
insl
enter
addb
addb
and
out
movb
mov
movsb
inc
dec
xor
push
andb
movsb
dec
lret
mov
enter
inc
stos
push
rclb
xor
pop
jg
push
insl
rorb
jnp
stos
dec
fstpt
push
addr16
sub
cwtl
arpl
outsl
es
push
test
int
xchg
movsb
in
jbe
adc
aas
adc
clc
jo
shrl
pop
jae
adc
pusha
add
outsb
cltd
aas
sub
out
or
popf
fildll
test
mov
repz
push
outsb
xchg
dec
cmpsl
adc
int3
fcoml
scas
stc
das
and
into
or
jle
jne
dec
sub
cli
int
ja
pop
test
leave
cmp
mov
dec
add
mov
negb
mov
push
cmp
fucomi
jbe
imul
sbb
out
in
test
mov
ja
dec
aas
pop
movsl
xchg
insl
jae
mov
sbb
xchg
sbbb
jmp
je
cli
addl
fdivs
test
ja
fidivl
imul
lds
mov
lcall
xor
inc
cld
rcll
xor
loop
cmp
or
xchg
or
mov
orb
mov
out
test
xchg
std
ficoml
jne
mov
jbe
daa
dec
cmp
insl
stc
inc
jne
loopne
sbb
outsl
cmp
inc
adc
scas
je
idivb
aam
sahf
sbb
scas
das
js
add
xchg
pop
cmpsl
mov
mov
enter
pop
jl
inc
lea
repz
dec
jno
fs
movsb
sti
push
gs
jmp
push
add
xor
outsl
xor
mov
cmpl
push
shl
lcall
or
test
xor
std
cltd
icebp
hlt
stos
or
push
add
out
inc
hlt
xor
test
and
add
mov
imull
xor
pop
dec
sbb
rol
or
cmp
cmpsb
mov
mov
sub
push
insb
out
lcall
and
push
add
cmp
cld
fidivrs
rorb
testb
mov
or
jne
jmp
add
dec
sbbl
sbb
aad
jns
sar
xchg
cmpsl
xchg
xor
sub
repz
jmp
push
jb
push
aad
mov
stos
cwtl
jmp
mov
jmp
arpl
adc
insb
icebp
movsl
jae
cld
inc
cli
movsl
jg
xchg
mov
xchg
outsl
out
mov
adc
ljmp
hlt
jecxz
imul
mov
pop
add
cmp
js
adc
dec
cltd
daa
pop
cmpsl
xchg
stc
fiaddl
into
lea
rcr
push
jge
add
int3
test
mov
xor
xlat
shr
xor
jo
sbb
jg
sbb
xlat
add
dec
push
add
xchg
in
aad
inc
ja
push
xchg
js
cltd
mov
mov
or
add
cmpsl
addl
cwtl
sub
aam
out
pop
fstl
jp
push
cmp
cltd
or
clc
mov
dec
sub
mov
pop
or
pusha
xchg
mov
out
sub
aaa
sbb
outsb
cld
pop
in
call
loope
add
sbb
sub
fucom
leave
iret
imul
inc
aas
ret
sub
inc
call
jne
sbb
pop
aaa
jbe
fs
xchg
pop
jns
sub
inc
push
fidivs
into
loop
inc
pop
aas
jmp
ret
shlb
int
ret
aaa
jne
push
adc
sahf
out
loop
jge
jns
xchg
adc
ror
lds
dec
jo
mov
in
fs
dec
push
or
lret
sbb
fs
mov
adc
sbb
in
jl
xlat
xorb
es
sbb
arpl
daa
push
into
sbb
jecxz
mov
orl
addb
xlat
jns
and
mov
pop
or
cmpsb
xor
push
movb
xor
movsb
mov
xor
in
jnp
fs
rcrl
call
sbb
pop
mov
mov
inc
jl
xlat
hlt
data16
repnz
bound
in
sub
sbb
lds
push
push
fucom
pop
in
or
xchg
sbb
js
das
inc
enter
arpl
mov
jg
cmp
subl
fcmovb
xor
jmp
inc
or
cmc
sahf
lea
fdiv
mov
stos
and
mov
repz
movsb
jae
fwait
dec
mov
ljmp
fldenv
dec
scas
iret
pop
jg
outsl
mov
xchg
iret
and
pop
test
jmp
ret
imul
mov
lds
ds
movsl
mov
jbe
int
cmp
cmp
jmp
in
mov
jmp
push
cs
scas
popf
mov
addr16
mov
pusha
inc
mov
shll
or
fcomp
add
mov
cmp
jae
pop
stos
addr16
sahf
out
xor
je
dec
lret
mov
cmc
je
and
pushl
inc
jp
mov
lock
and
call
mov
mov
or
mov
mov
cli
faddp
mov
fstl
popa
in
push
push
mov
adc
pop
ljmp
adc
fsubs
jle
jl
mov
xor
pop
lods
subl
fldl
std
mov
int
int
mov
test
fnstsw
in
adc
adc
sub
lods
adc
jl
pop
mov
in
popf
nop
mov
cmpsl
xlat
jnp
add
add
sbb
xor
mov
sbb
push
cmpsl
pop
divb
or
movsb
add
enter
in
adc
xchg
insb
push
push
fbstp
pop
in
mov
mov
int3
jge
mov
data16
out
xor
lock
mov
jp
nop
mov
aam
push
mov
cmp
in
jmp
jmp
push
cwtl
jnp
aad
mulb
push
nop
je
rorl
xchg
mov
dec
mov
test
inc
and
lret
cwtl
lea
cmp
mov
hlt
inc
inc
xchg
rclb
sub
imul
cmp
jecxz
push
fwait
imul
push
adc
xchg
adc
and
in
out
int3
rorb
mov
xor
mov
lods
mov
mov
lret
fisttps
sahf
cltd
nop
js
rcrl
add
fiadds
pop
loopne
dec
paddusb
or
mov
imul
fiadds
fadd
jb
push
jg
scas
lahf
outsl
int
scas
jmp
push
arpl
inc
aas
jmp
fwait
imul
lret
outsb
loope
mov
add
ret
jno
out
adcb
cmpsb
cmpsl
xlat
pop
js
jns
stc
sub
mov
jmp
int
lcall
push
dec
pop
into
je
sub
ss
call
sub
stos
leave
sbb
aas
in
pop
adc
lcall
fimull
or
push
lcall
test
hlt
jecxz
ss
add
and
jne
dec
fsubrs
pop
or
insl
rcr
inc
sbb
ret
addl
insb
js
loop
test
push
setb
push
aas
sub
out
pop
push
or
imul
vmovntdq
xchg
dec
imul
dec
scas
out
shlb
xchg
orb
lcall
mov
in
and
mov
hlt
inc
int
mov
dec
and
lods
mov
shll
lcall
test
aad
jne
push
sbb
jmp
adc
mov
pushf
cmp
mov
push
das
test
ret
jmp
icebp
dec
neg
jne
xlat
and
loop
ret
divl
imul
test
dec
loopne
fdivrs
cmpsb
nop
outsb
test
subl
jg
jle,pn
lcall
jo
fsubs
xchg
cmp
loope
loopne
inc
mov
add
ljmp
ja
in
mov
and
cld
dec
push
adc
sub
jg
xor
ret
mov
mov
stos
mov
shrl
daa
jbe
inc
cmp
fistpll
push
mov
repnz
je
jge
outsb
push
aam
jle
or
adc
mov
xchg
pop
mov
add
xchg
int
repz
scas
inc
bound
inc
shll
xchg
ss
cmp
and
ret
add
or
push
push
das
imul
data16
rcrb
push
xor
adc
sub
push
call
pop
scas
sub
bound
ss
pop
mov
add
push
xchg
lret
jo
loopne
dec
adc
ret
pop
xchg
xchg
lahf
xchg
cmp
ljmp
outsl
inc
mov
jno
addl
sub
xor
adc
cmpsl
pop
sbb
gs
cmp
test
dec
outsb
out
pop
sahf
jmp
jo
out
mov
out
xchg
dec
lods
test
jo
aam
mov
sbbb
imul
and
dec
mov
ret
add
inc
inc
push
xor
outsl
cs
dec
or
fmuls
addr16
jns
inc
les
call
xor
lods
sbb
xor
pop
sti
test
mulb
xchg
mov
icebp
fwait
movsl
jmp
loop
xor
popa
xor
xchg
adc
test
fistpl
xchg
cltd
rclb
mov
cwtl
mov
adc
ss
mov
pop
pop
jbe
sbb
xchg
cmp
push
jo
mov
dec
sti
stos
xchg
adc
pushf
push
mov
push
in
enter
add
aas
push
shlb
push
fiaddl
mov
sbb
js
cmp
fdivrl
xchg
mov
jmp
movsb
xchg
mov
add
pop
dec
aam
jne
in
jo
push
cwtl
mov
lret
loope
imul
or
sbb
xor
mov
adc
mov
adc
sub
nop
and
fcmovnb
xchg
jl
leave
and
test
addr16
fisubrl
out
push
jb
in
mov
push
mov
and
jns
or
in
in
dec
jmp
lds
xor
loopne
dec
dec
cwtl
mov
sub
call
rcll
jae
ret
lret
test
push
aaa
movsl
pop
push
push
sahf
dec
mov
out
add
loop
sub
cwtl
jnp
push
xchg
inc
fsubrl
adc
sbb
mov
movsl
fldcw
stos
lcall
sbb
xlat
jnp
gs
jne
xchg
rolb
fstps
sub
jns
xchg
xlat
dec
loop
pop
ja
mov
icebp
mov
sti
xchg
insb
adc
cmp
pop
jmp
adc
jmp
into
push
adc
dec
adc
data16
dec
push
into
roll
sbb
mov
push
mov
jecxz
loopne
icebp
lcall
mov
or
lret
mov
jg
fistpl
aad
xor
test
inc
push
and
jl
loope
idivl
icebp
fdivs
add
and
mov
xchg
ds
dec
arpl
pop
dec
fstps
leave
dec
xchg
fimull
sub
ds
iret
les
rcl
push
mov
mov
dec
jl
jne
lahf
sub
pop
add
xor
andb
mull
fstps
push
push
call
fists
xor
pop
dec
and
sbb
sub
jp
inc
out
jg
fstpl
rorb
cmp
clc
iret
add
push
adc
xor
jns
and
inc
inc
or
push
cmp
mov
pusha
push
mov
mov
pop
xchg
lea
adc
aaa
mov
jns
cmp
push
add
std
ja
sub
adc
jno
cs
mov
lods
sbb
cmc
rorl
test
testb
and
repz
mov
xchg
or
lods
sti
fsubrs
xchg
inc
clc
jmp
shll
pop
insb
mov
fnsave
ja
dec
insb
repz
and
rcrl
mov
inc
cld
push
fldcw
test
xor
sar
mov
dec
cmpl
in
out
enter
bound
nop
test
outsb
inc
xchg
pop
notb
inc
xor
repz
mov
jle
in
int
sub
cmp
mov
jb
mov
mov
xchg
push
cmpsb
lcall
inc
adc
mov
cmp
adc
aam
mov
lcall
push
outsl
outsl
add
ljmp
popa
add
pop
push
imul
in
rcrb
ljmp
test
inc
cs
test
fwait
xor
pop
adc
mov
adc
cmc
lods
inc
inc
mov
cmp
hlt
icebp
jl
pop
mov
sub
jo
adc
inc
cld
hlt
ss
mov
icebp
cmpsb
mov
out
cmp
push
fdivrs
xlat
iret
inc
push
and
addr16
push
xorl
insl
adc
in
or
lds
gs
out
mov
hlt
leave
leave
jl
adc
inc
pop
cwtl
mov
mov
leave
lret
popa
out
and
add
xchg
xchg
mov
pop
mov
jo
push
ret
mov
cmp
inc
out
xchg
aam
jo
mov
orb
sub
xor
imul
in
xor
jg
testl
dec
sub
mov
movsl
ljmp
mov
stos
add
jnp
jns
push
inc
rcrl
fnstcw
jmp
dec
stc
fldt
jp
push
fadds
ljmp
sbb
in
mov
xor
or
sbb
pop
loopne
mov
dec
and
fadd
mov
lea
jecxz
aam
xchg
mov
pop
pop
icebp
mov
popf
ficoml
xlat
push
sub
test
xchg
push
or
pop
mov
xor
std
mov
jp
mov
or
inc
dec
xor
fcoml
dec
dec
sbb
mov
idivb
xchg
jmp
or
subb
mov
les
push
xchg
fsubrs
mov
cmp
ret
push
sbb
jmp
cld
pop
shll
pop
inc
cmp
pusha
out
out
clc
add
aas
outsb
test
enter
dec
add
aas
adc
cmc
push
sbb
mov
or
pop
sub
ja
inc
enter
push
dec
pop
push
sbb
shrb
iret
stos
sub
rorl
mov
cmc
push
nop
add
imul
outsb
mov
inc
pop
fldt
jecxz
pop
nop
adc
rcrl
pop
add
in
ds
pop
cs
cmc
insb
rcrl
cltd
out
push
scas
aaa
nop
sub
cli
gs
jle
int
mov
xchg
pop
ds
add
repz
adc
call
cli
or
enter
test
test
xchg
push
xchg
push
pushf
mov
mov
mov
iret
loopne
and
pop
lds
int3
jns
mov
mov
mov
lock
leave
mov
movsl
inc
or
pop
xor
imul
divb
jae
xor
mov
mov
out
lret
inc
dec
push
ret
bound
addl
inc
pop
ss
jo
cwtl
arpl
mov
sub
in
out
daa
into
inc
push
not
pop
mov
mov
cmp
je
pop
cmc
imul
mull
or
mov
push
push
dec
nop
je
sbb
jbe
out
cmpsb
andl
and
sub
sti
popa
mov
gs
in
rcrl
cmc
xchg
add
cltd
sahf
cmc
js
into
mov
pop
cmp
icebp
mov
push
xor
add
mov
fs
jae
push
xor
add
divl
and
cmc
cmp
mov
jmp
pop
outsb
into
cmp
jbe
test
test
inc
sbb
xlat
popl
fidivl
out
jb
mov
xor
dec
fstl
pop
cmp
adc
test
mov
mov
stos
lock
loopne
sbb
ret
and
scas
dec
add
xchg
mov
je
popa
daa
add
cwtl
scas
insb
jle
cld
inc
out
js
push
out
fucomp
mov
popa
xchg
scas
jb
call
mov
test
mov
pop
loope
mov
cltd
adc
mov
push
hlt
pusha
dec
cmp
or
jp
jb
lds
arpl
cmp
out
inc
imul
push
pop
mov
adcb
call
or
pop
movsl
popf
adc
jle
xor
cmp
sbb
ljmp
hlt
pop
dec
dec
out
fmuls
jns
push
and
int
shrb
inc
cmp
daa
sub
sub
pop
leave
sbbb
or
aam
js
rorb
das
xlat
stos
notl
fsubp
popa
leave
and
jge
jo
rorl
call
inc
ja
icebp
int3
pop
add
addb
mov
xor
adc
mov
in
sti
ja
testb
xor
mov
into
adc
outsl
jmp
cs
mov
push
and
enter
pop
lock
xor
sub
ffree
into
cli
sbb
fidivrl
ljmp
sar
xor
push
mov
loop
push
push
dec
lods
hlt
je
aaa
mov
push
pop
addr16
stos
sbb
jmp
lcall
ror
arpl
cld
pop
jnp
xor
mov
out
dec
loopne
fimull
push
xchg
cld
incl
xchg
dec
mov
stos
negb
inc
dec
inc
ret
aad
mov
loop
out
add
mov
pop
or
or
inc
xlat
lret
jbe
out
aas
out
inc
jecxz
daa
mov
pop
mov
xor
cmp
shl
movsb
test
or
mov
mov
ret
int
cs
insb
cmp
add
inc
aam
jae
jae
out
cwtl
xchg
popl
in
jnp
aas
fdivs
cmpsl
sbb
jge
push
jae
xchg
pop
movsb
loopne
cmpl
xor
xchg
out
mov
fs
jne
mov
bnd
push
cli
pop
xchg
xchg
push
add
xchg
stc
sbb
aam
in
jl
push
aad
ret
insl
or
lods
push
jp
popa
xor
jbe
sub
add
aad
orb
std
sub
xor
scas
sbb
fisubrl
hlt
not
nop
cmp
stos
fnstsw
je
mov
xchg
rcll
ret
jns
cmp
rclb
add
out
lret
scas
pop
mov
xor
and
cmp
and
imul
in
stos
xchg
ret
sub
fs
jo
lcall
jne
into
jo
sub
aad
outsb
cmp
mov
cmpsb
add
xchg
es
inc
scas
dec
mov
pop
push
xor
sub
jns
cs
std
stos
jae
add
mov
mov
mov
aaa
popa
cmp
or
test
push
in
mov
ljmp
add
xrelease
pop
mov
leave
icebp
push
repnz
mov
jecxz
pop
add
dec
jo
jne
sbb
iret
jns
xlat
and
incb
lret
stos
and
repz
mov
push
lahf
dec
shlb
pop
dec
ljmp
sbb
adc
jns
mov
jne
jle
fstl
xchg
push
pop
in
inc
std
xchg
adc
push
xchg
rclb
inc
jp
cld
adcl
inc
addl
jge
in
cmp
xchg
lcall
stos
xchg
sbb
mov
dec
inc
std
cmp
ds
xchg
pushf
push
cs
ja
xor
and
push
jno
in
shlb
das
lret
in
xor
jns
cld
dec
ss
cmp
inc
ret
sub
iret
arpl
inc
shlb
adc
mov
mov
and
mov
out
or
inc
jecxz
std
and
cwtl
pop
cmp
push
out
mov
les
jo
mov
movsl
xchg
cmpsb
inc
lods
jmp
das
fwait
jmp
jmp
mov
movsl
pop
cmp
sub
sbb
mov
ret
repnz
or
cmpsb
mov
push
dec
ss
stos
mov
and
cwtl
or
in
ficompl
mov
std
inc
aad
sbb
fwait
mov
cmp
mov
jmp
sbb
pop
in
mov
lods
test
add
cmp
xchg
fisttps
dec
jmp
mov
aaa
dec
ljmp
in
enter
adc
inc
lcall
fsubl
popf
hlt
std
xchg
and
sti
scas
xor
cmp
nop
pusha
or
mov
mov
rorb
or
ficompl
popf
mov
cmp
rcl
sti
mov
xor
std
out
arpl
call
mov
dec
inc
xor
scas
imul
pop
xor
mov
aad
mov
in
rorl
cld
rolb
pop
push
aad
jae
shlb
jnp
lret
cmpsb
push
fsubs
sahf
ret
es
add
jmp
mov
push
push
movsb
lret
mov
adc
xchg
jbe
mov
lahf
aas
mov
popf
pop
push
dec
and
and
icebp
pop
sub
mov
aas
ljmp
and
push
adc
movsl
fmulp
pop
or
cmpb
mov
xor
int
leave
mov
insl
popl
or
test
sub
mov
popa
mov
cmpb
cmpb
mov
pop
cmpsl
dec
dec
test
xor
ret
sub
push
push
in
das
bound
jne
js
push
jnp
or
lcall
mov
int3
pop
mov
repz
jge
jbe
inc
test
test
hlt
fcmovnbe
jle
mov
xor
xor
test
ljmp
mov
test
lock
outsl
sahf
int3
add
mov
sbb
adc
sbb
adc
lcall
jbe
dec
add
mov
test
pop
add
andb
dec
popf
cmpl
nop
stos
mov
aad
mov
xchg
cmp
sub
push
daa
icebp
sbb
test
cmc
jae
add
adc
cmp
nop
lods
mov
jo
push
mov
jp
and
pop
loope
cmpsl
jae
mov
lds
fistpll
mov
add
imul
pop
cmpsb
gs
lods
mov
push
jge
jb
gs
inc
inc
jle
dec
test
mov
enter
cmp
sbb
cmpl
push
aaa
adc
out
jmp
dec
xor
sahf
sub
jl
cmp
add
sarl
outsb
rcrl
push
ss
jnp
lcall
mov
nop
gs
andb
imul
pop
inc
xchg
rol
jecxz
mov
pop
push
sub
and
hlt
std
push
hlt
xchg
xchg
loope
push
pop
and
add
xlat
mov
cltd
mov
adc
mov
dec
dec
sub
rcr
les
pop
sub
xor
xorl
jo
push
lahf
adc
cs
mov
mov
sahf
mov
pushf
js
fistpll
xchg
std
inc
or
scas
pop
addr16
dec
dec
orb
mov
pop
and
mov
test
dec
loope
ljmp
insl
add
nop
mov
in
ds
cmpsb
dec
insb
sub
je
lret
mov
test
mov
mov
mov
out
data16
lcall
cmp
shl
jnp
repz
mov
jmp
inc
dec
dec
push
inc
dec
cmpsb
jle
sub
sbb
mov
dec
out
pop
js
movhps
adc
mov
xchg
test
sub
xor
cmp
push
mov
pop
loopne
sub
pop
add
scas
cmpsl
lods
outsl
xchg
mov
scas
pop
nop
ret
arpl
mov
adc
popf
adc
add
and
adc
adc
ja
hlt
cmpsb
leave
pop
iret
add
sbb
sbb
es
jne
lock
mov
imul
push
test
enter
inc
test
stos
pop
add
ljmp
or
repnz
add
mov
je
xchg
mov
xchg
jl
insl
fdivrs
iret
inc
fcompl
in
push
enter
mov
or
cmp
xchg
sub
adc
mov
xor
mov
pop
pushf
aad
ja
sub
sti
jle
xchg
cs
dec
pop
inc
sbb
cmp
fiadds
outsl
scas
push
lcall
loopne
sbb
mov
icebp
inc
and
leave
int
int3
pop
outsl
call
inc
jno
mov
push
movsb
testl
mov
sbb
sarb
fwait
stos
add
mov
in
adc
push
shl
cmpsb
out
push
xchg
sbb
pop
sbb
in
in
test
pop
push
jle
lock
add
scas
sbb
je
mov
jl
pop
nop
fiaddl
movsl
push
orb
jge
call
loopne
push
in
cmp
jg
lock
movsl
jg
xor
cmc
mov
lods
pmullw
adc
inc
outsb
cmpb
mov
movsb
sbb
in
jecxz
dec
sahf
dec
xchg
fnsave
in
add
arpl
sub
mov
inc
mov
inc
fwait
or
negb
mov
or
and
pop
rolb
jo
lcall
test
jmp
cmp
mov
iret
dec
rol
jg
jp
dec
scas
adc
and
cmp
insl
fimull
sbb
leave
push
add
mov
adc
adc
and
jmp
dec
sbb
and
sub
push
mov
js
mov
call
xchg
xchg
inc
xor
inc
mov
movsb
clc
push
bound
mov
es
push
cmp
pop
loopne
and
jp
xor
loopne
push
pop
subb
das
mov
out
dec
fcomp
adcb
sbb
jb
pop
or
xor
push
hlt
and
nop
sbb
das
int3
mov
scas
cwtl
mov
imul
clc
mov
or
and
lret
lods
rolb
lcall
stc
adc
xor
add
in
ja
lea
es
jp
push
shl
fs
inc
mov
insl
inc
dec
dec
xor
scas
jmp
push
lock
xor
das
divb
sub
inc
mov
jb
cmp
push
cs
stos
mov
or
subl
adc
jle
jns
pusha
imul
mov
pop
jns
sti
pop
mov
cwtl
lods
jae
mov
mov
lret
jns
fstps
dec
cli
push
xchg
mov
pop
dec
xor
pop
fs
jmp
outsl
add
inc
inc
lods
scas
imul
inc
cld
ficomps
lods
or
shlb
in
int3
sub
push
dec
xchg
mov
jnp
pop
sbb
fdivr
mov
ret
pop
filds
jle
mov
scas
sub
rolb
fdivr
mov
repnz
dec
adc
in
mov
add
mov
xor
adc
repz
xchg
shlb
movb
in
xchg
loope
push
add
push
jno
lds
test
rol
es
test
je
xchg
pushf
sub
mov
jnp
jge
outsl
out
insl
adc
rcrl
and
insl
lds
cwtl
push
jno
adc
mov
adc
dec
cmpsl
dec
ret
sbbb
in
mov
add
repz
adc
push
jo
ljmp
cmp
shr
mov
test
pop
push
cmpsb
insb
das
es
cwtl
outsl
orb
popf
fldl
adcl
sub
xchg
xchg
lahf
int3
sbb
dec
and
inc
mov
push
jp
xor
add
mov
sub
cmp
cmp
adc
mov
fimuls
jp
data16
or
xor
enter
sub
or
pop
shrb
inc
sub
test
or
shr
ficompl
or
cmpsb
add
xchg
xchg
sarb
pop
inc
push
stos
push
xor
pop
pop
adc
rorl
xor
fsubrs
push
addr16
push
xor
inc
pop
stc
cmp
adc
xchg
scas
adc
xchg
sub
sbb
lea
jp
cmp
sbb
push
adc
popf
mov
mov
sub
sbb
sbb
xchg
xchg
stos
pop
clc
or
xchg
lods
fistps
pop
adc
movsl
push
fidivs
mov
jne
test
xchg
and
in
scas
mov
add
lods
and
push
repz
xor
negl
jb
shrb
cmp
fstpl
cmp
pop
inc
mov
adc
ret
xor
cmp
sar
cltd
fbld
cmp
lock
cmp
mov
sbb
xchg
cmp
fisttps
pop
jp
mov
or
mov
and
sahf
fwait
inc
xchg
adc
es
dec
or
push
mov
hlt
jle
js
jmp
fcmovnbe
int
lods
mov
mov
cld
imul
mov
in
test
and
stc
mov
cmp
xchg
xchg
cmp
push
enter
test
dec
and
lods
cli
push
daa
insb
cmp
sti
or
and
aad
sbb
dec
dec
loopne
mov
ret
xchg
lret
and
cltd
fiaddl
jne
mov
shrb
pusha
mov
jns
hlt
sbb
ds
xchg
or
lahf
jne
aas
or
es
mov
icebp
jl
add
mov
or
scas
out
sub
sbb
loope
mov
in
movsb
mov
cmc
cmp
jne
dec
testb
test
int
dec
int
arpl
test
xchg
inc
repz
lcall
push
gs
adc
pop
sub
ss
sbb
or
sbb
fs
shlb
or
je
loope
and
shrb
je
sub
sub
sbb
fildll
ja
cwtl
inc
add
jns
int3
inc
add
rclb
push
xor
in
xchg
subl
cmc
push
popf
lcall
lea
loop
mov
mov
and
sbb
xor
aaa
xor
jne
xor
insb
mov
pop
dec
push
aam
decb
xor
mov
push
mov
and
fcmovnu
push
xchg
push
mov
adc
mov
dec
cmp
testb
add
xor
dec
rep
jae
jp
outsb
or
or
scas
or
les
fisubrs
into
rolb
std
push
out
movsb
ret
icebp
push
or
cmp
test
xchg
xor
stc
pop
stos
cmp
xchg
sarl
daa
repnz
dec
dec
dec
repz
dec
adc
xor
inc
push
sti
test
xor
sub
stc
in
insl
jne
mov
mov
jge
jle
inc
hlt
lcall
test
cmpsb
cmp
jp
xchg
popf
cltd
gs
jp
test
popf
icebp
orb
push
insl
jne
das
pop
lds
popa
cmp
scas
addb
aaa
lds
and
clc
movsb
dec
fcmovbe
mov
insl
jmp
mov
inc
pop
xchg
xor
mov
loopne
jno
pop
push
shlb
fwait
push
dec
test
xchg
dec
and
pop
or
psubusb
mov
bswap
pusha
stc
shrl
mov
mov
push
bound
push
icebp
aas
inc
push
mov
in
jne
adc
in
fsubs
shrb
adc
push
lea
mov
call
xor
dec
xchg
mov
fdivrl
dec
negl
push
ret
div
imull
or
pop
jns
pop
dec
dec
in
lea
adc
add
nop
lret
mov
dec
mov
xchg
loop
in
mov
insl
sti
daa
and
lahf
es
loop
lods
out
ss
gs
imul
or
fbstp
mov
dec
pop
jl
xchg
dec
mov
call
ss
and
lods
xchg
push
jo
sbb
fisubrl
js
ret
lret
int3
jp
sbb
fdiv
push
ja
lods
aam
mov
js
inc
cld
mov
jecxz
xchg
aaa
push
mov
sub
loopne
aas
adc
testb
xor
mov
shll
aad
mov
push
mov
add
gs
cmpsl
vmptrst
pop
sarb
xor
fimuls
lret
cmp
dec
repnz
mov
es
pop
or
imul
xlat
mov
lahf
shll
inc
xor
mov
mov
ss
ffreep
out
xor
push
sub
and
aaa
in
jmp
dec
repnz
mov
pusha
mov
repz
mov
outsb
ficomps
mov
neg
popf
fwait
push
pop
out
les
or
jns
and
jns
or
addl
mov
push
add
das
cld
ffreep
cmp
aas
jl
push
pop
repz
pop
ja
add
mov
jg
xchg
pop
inc
adc
outsb
xor
mov
add
leave
movsb
paddusw
lcall
or
push
je
gs
jo
sti
inc
cmpsl
scas
push
mov
and
ds
xor
add
insl
pop
cmp
mov
push
xor
jo
push
inc
enter
jle
mov
push
pop
popa
xor
test
ja
inc
addr16
mov
fimuls
mov
mov
xchg
lea
sbb
repnz
stc
jge
les
addr16
in
lods
scas
or
pusha
int
sbb
mov
xchg
jl
lret
rclb
and
fwait
inc
mov
outsl
add
sub
mov
test
xchg
das
inc
xchg
push
pop
cmc
sti
dec
inc
mov
cmpsb
xchg
cmc
xchg
cmp
stos
popf
sbb
mov
and
or
nop
sub
push
shlb
mov
lcall
ret
ja
scas
ljmp
je
adcb
jno
sbb
jl
mov
push
in
ljmp
and
sub
lret
es
dec
cmp
mov
push
xor
loope
subl
lds
and
dec
xchg
out
push
mov
xor
push
insb
hlt
repz
mov
lock
rol
sub
pop
mov
pop
ds
xor
jge
mov
xchg
cmp
call
aam
mov
fiaddl
pop
ja
lahf
mov
clc
mov
cmpsb
jge
mov
dec
mov
nop
jge
les
sbb
cli
cmp
adc
jne
and
mov
jnp
jmp
push
xchg
push
popf
mov
cs
shll
xchg
mov
adc
and
pop
stos
sub
std
push
clc
shl
fnsave
adcb
les
pop
pxor
fucompp
ficompl
cld
inc
and
mov
shrb
jb
dec
jge
insb
sahf
fisttps
push
cli
cs
out
or
push
dec
out
add
jp
xchg
fldenv
les
cmc
mov
insl
cmp
daa
ja
pop
lock
stos
mov
repnz
jnp
sbb
sarb
push
fnstcw
test
out
inc
mov
cmp
add
in
leave
pop
mov
rclb
and
mov
ds
sbb
jo
and
lea
int
fcmovnbe
jg
popa
mov
jne
scas
jae
jb
jno
dec
sahf
and
or
add
mov
mov
test
leave
xchg
in
mov
lea
test
cmp
js
pop
adc
out
pop
mov
enter
dec
clc
shr
pop
test
push
mov
mov
lods
imul
fisubrs
cli
push
xor
add
ret
xchg
test
aad
push
jb
stc
sbb
das
ja
jnp,pt
lock
push
jns
lgs
inc
sub
add
mov
aam
push
les
inc
std
icebp
mov
nop
outsl
test
sub
inc
or
adc
loop
mov
add
pop
jne
pop
mov
lret
loop
sub
add
int3
mov
ret
inc
mov
dec
xor
mov
pop
xchg
cmpsb
dec
cltd
xor
sbb
loop
cmp
lds
in
stos
jp
movsl
push
pop
sbb
js
insb
jle
inc
push
test
int
mov
sbb
pop
mov
movsl
test
lods
pop
xchg
mov
jp
jb
xor
pop
fstpt
fsub
inc
inc
in
and
adc
or
mov
jge
int
and
jae
mov
out
ds
testl
xorb
mov
ss
dec
mov
sub
cli
pop
or
movsl
dec
out
out
fstp
mov
mov
add
stos
mov
cmp
sbb
out
cwtl
test
fwait
and
xchg
inc
or
push
sti
or
xchg
cmpsb
ficoml
jne
jb
adc
lods
sbb
cli
mov
and
xor
dec
ficoms
jno
imulb
out
int3
shlb
jl
mov
std
lods
into
pop
addr16
add
in
lret
dec
and
das
test
movsl
iret
xchg
inc
jae
sar
push
adcb
shr
hlt
lock
loopne
bound
aaa
mov
mov
aas
outsl
cmp
push
mov
or
mov
dec
or
inc
mov
push
inc
mov
data16
inc
lods
jae
cli
push
sbb
jp
mov
sbb
lret
xchg
push
inc
repnz
push
inc
outsl
cmp
iret
fdivp
sub
mov
xchg
add
or
xlat
in
jb
in
add
imul
pop
es
cmpsb
and
insb
in
lret
jge
adc
jb
and
lock
pop
stc
test
sahf
add
fisubrs
cli
dec
and
fisubrs
lock
cmp
push
cmpsb
push
sahf
adc
ja
jle
xchg
stos
repnz
mov
pop
fwait
ret
cli
das
stc
pop
xchg
mov
or
repnz
jp
sbb
cs
inc
shll
dec
mov
mov
call
push
stc
jns
call
push
outsb
mov
fcomps
ret
jle
icebp
cmpsb
repnz
ret
push
xchg
jnp
fists
pop
cs
pop
jle
xchg
cmp
inc
aaa
shrb
pop
int3
inc
pop
daa
xor
and
mov
cmp
mov
sbb
cmp
sarl
outsl
fwait
mov
mov
outsb
stc
clc
cmp
and
push
imul
cs
or
std
mov
mov
pop
rclb
pop
cmp
pop
cmpsb
mov
int
popf
mov
scas
dec
hlt
iret
pop
pop
add
frstor
jge
pushf
push
add
or
jb
in
inc
insb
sub
pop
into
dec
ret
movsb
mov
adc
jbe
add
mov
int3
lret
pop
push
push
pushl
push
mov
sbb
jns
sbb
lcall
pop
cmp
sbb
lret
lods
xchg
push
xor
scas
pop
clc
jge
scas
or
xchg
add
lods
push
rolb
nop
sbb
stc
jle
jl
inc
out
rorl
cmp
inc
dec
xor
or
xor
pop
add
mov
xor
out
or
adc
add
addr16
jmp
loop
and
scas
fsts
test
iret
ret
add
pop
fucom
mov
pusha
jge
sub
xlat
fistl
movsb
lahf
fcoml
mov
scas
lret
orl
xor
sub
push
xchg
leave
push
mov
adc
aas
repnz
cmp
rorb
jge
push
in
idivb
jo,pt
inc
or
jns
stos
addr16
out
push
stos
mov
popf
call
sti
iret
jne
fwait
sub
mov
test
jge
jecxz
and
cmp
fisubl
gs
arpl
sbb
out
xor
dec
xor
pop
lods
ja
dec
mov
mov
lds
stos
mov
pop
xchg
xor
out
pop
scas
movsl
cli
mov
pop
sub
or
inc
jb
pop
cld
push
test
movsb
pop
pusha
pushf
jle
fstl
sub
lea
movsb
xor
mov
add
out
adc
stos
movsl
sbb
cs
adc
pop
shrb
nop
mov
jne
fsubs
and
scas
mov
or
push
mov
sub
xchg
mov
test
mov
daa
xchg
das
adc
hlt
cli
mov
shlb
jle
icebp
outsl
mov
pop
fwait
and
pusha
sub
or
mov
out
xor
scas
sub
adc
stos
xlat
lock
mov
pop
and
pushf
pop
push
sbb
xor
pop
mov
dec
call
outsb
xchg
inc
je
leave
mov
add
lods
cmpsl
mov
jns
inc
cs
push
andl
outsl
jp
in
mov
mov
sub
adc
mov
movsb
cmpsb
roll
andl
rcrb
shlb
lcall
or
or
pushf
dec
ret
mov
cmp
pop
and
mov
pop
fs
es
hlt
or
ret
mov
adc
cmpsl
xchg
push
leave
insb
stos
cli
arpl
lods
sbb
lods
sbb
imul
add
out
cld
sbb
mov
loop
mov
or
xor
sbb
fsubl
sbb
ficoml
int3
sahf
rcl
lds
clc
stc
adc
inc
dec
add
xchg
dec
int3
rclb
add
aad
mov
adc
icebp
pop
push
fcmovbe
stos
cmc
jg
enter
sub
sub
bound
shld
and
push
mov
jne
mov
xchg
dec
daa
xchg
pop
mov
in
lock
adc
dec
or
clc
sub
je
push
push
inc
adcl
cs
lret
outsb
jecxz
jg
jb
xor
cmp
dec
out
shlb
inc
pop
out
cmp
inc
mov
pop
lret
lcall
mov
push
addr16
imul
add
fmul
inc
stc
pop
je
pop
push
mov
dec
xor
mov
lods
and
loopne
pop
inc
adc
mov
call
imul
stos
mov
out
call
jl
test
push
jne
imul
adc
or
xor
push
mov
jbe
jne
adc
mov
sub
lea
jne
fsub
xchg
je
sarl
pop
out
xchg
dec
cmp
shll
xchg
fcomp
shrl
cmp
dec
outsb
mov
sub
iret
leave
mov
cwtl
incb
in
mov
sbb
cmpb
or
aad
aas
jae
mov
jp
dec
fisttpll
movsb
idivl
repz
push
js
xchg
scas
aaa
push
cmpsb
jg
pusha
xchg
das
outsb
repz
jge
inc
jmp
les
cmp
fwait
jg
das
aas
xchg
cmp
fldcw
mov
jmp
cmp
mov
ret
mov
jp
xchg
pop
xchg
testl
inc
mov
add
xchg
mov
addl
push
xchg
push
pop
aas
jb
jp
xorl
out
mov
inc
mov
add
aam
lea
dec
in
lret
enter
mov
mov
and
inc
sbb
cld
cmpsb
ja
das
lcall
imul
arpl
jb
sbb
shlb
outsb
mov
cmp
sbb
ficoms
xchg
aam
subl
mov
daa
xlat
push
jecxz
outsb
push
int
inc
roll
cmove
mov
dec
mov
xchg
cmp
ffree
mov
subl
cmpsb
out
ja
sbb
call
add
mov
jg
jae
jecxz
movsb
inc
or
dec
fs
out
sti
shll
dec
fldcw
inc
mov
mov
outsl
in
shlb
jo
sbb
add
orl
mov
ja
movsb
cltd
jae
aam
add
xchg
std
insl
mov
lcall
jnp
mov
outsl
inc
mov
pushf
inc
dec
imul
push
fisttpl
add
test
test
and
neg
mov
gs
or
pop
or
mov
pop
popl
cmpsb
and
test
cmc
aad
out
mov
sub
mov
dec
clc
pop
jb
js
and
inc
jae
or
call
int
cld
stos
test
mov
mov
fcoml
into
flds
sbb
xchg
rcl
mov
das
lret
mov
sub
xchg
out
sbb
jae
adcb
bound
or
jle
xor
pop
mov
mov
dec
sub
mov
mov
movsl
stc
mov
stos
jnp
cmp
xchg
rcrl
ja
nop
lea
push
aam
mov
xchg
cmp
scas
test
fnsave
jl
pop
adc
sub
pop
cmpsl
jle
add
mov
xchg
jecxz,pt
jne
test
mov
movsl
ret
ret
mov
push
rorb
xchg
mov
ds
xlat
cltd
push
arpl
js
push
jg
add
stos
lods
out
lret
adc
cmp
push
shlb
clc
iret
out
pop
outsl
dec
adc
pop
cli
and
fcom
pushf
lods
sub
ret
out
cs
lcall
frstor
mov
rorl
jg
repz
adc
xor
fldenv
xchg
jno
rolb
dec
mov
cmp
rcll
jnp
ret
push
ljmp
sub
ljmp
ljmp
inc
fistpll
mov
pop
je
xchg
sbb
dec
roll
and
mov
mov
cmp
out
out
sbb
jge
cmp
negb
out
pop
mov
mov
ds
test
add
and
scas
clc
jle
pusha
stc
jb
mov
jmp
push
jmp
mov
dec
jne
movsb
stos
bnd
jge
lds
jbe
jecxz
sbbl
je
pop
rcrb
jne
fnsave
jle
ljmp
sbb
mov
inc
add
adc
sub
repnz
int3
out
enter
add
and
push
mov
or
dec
sbb
dec
pop
repnz
outsb
ret
sub
push
insl
xorl
rol
sahf
xlat
pop
inc
jmp
movsb
xchg
fidivrs
inc
cmc
pop
jl
sub
and
ret
cmc
movsb
pushf
lret
jp
or
ret
cmp
call
mov
lret
popa
jno
mov
out
xor
or
shrb
repnz
jecxz
add
popf
scas
sbb
orb
xchg
lods
imul
into
cmp
xchg
push
xchg
xchg
add
sbb
stos
dec
dec
mov
or
cmp
lahf
xchg
pop
ja
pop
outsb
xchg
sti
pop
jecxz
adc
and
rorb
and
test
cltd
fs
jle
scas
mov
in
adc
outsb
adc
or
dec
test
add
inc
aaa
loope
test
daa
mov
xchg
add
sbb
mov
arpl
out
stc
push
sbb
push
jne
sub
imul
push
cmp
mov
push
rcrl
xchg
fiaddl
lods
jne
cmp
cmpsb
dec
divb
lods
sahf
scas
jb
lock
xchg
inc
push
rcl
xorl
popf
mov
out
adc
mov
out
push
mov
insb
mov
icebp
lock
push
mov
sbbl
popf
test
lret
aaa
mov
jg
fs
ret
pop
sbb
inc
push
arpl
test
cli
sub
and
xchg
addr16
jg
cmpsl
cmp
cmp
push
pusha
scas
sbb
sub
int3
push
add
sub
sbb
mov
int
lea
andb
cs
sbb
pop
scas
adc
push
ja
pop
pusha
adc
push
out
fwait
jo
xor
pushf
insb
cmp
std
fadds
ret
fimull
add
je
fistl
js
push
pop
mov
jno
popf
jecxz
jne
les
push
ficompl
mov
out
fbstp
mov
movl
imul
out
aaa
mov
xor
loopne
cmp
xlat
inc
push
cmc
fucomip
je
xlat
cmpsb
cmp
xchg
jb
enter
add
cmp
add
in
movq
in
mov
xor
jg
cmp
jno
mov
sbb
loope
xchg
fisttps
inc
shr
and
lods
loope
js
mov
mov
mov
out
stos
add
push
cmpsb
cmp
test
lods
sub
outsb
xchg
mov
bound
dec
aam
lods
mov
jecxz
cmpsl
dec
int
cmp
adc
repnz
mulb
inc
je
ja
lock
cwtl
repz
mov
inc
mov
fcmove
lret
sub
mov
cmp
in
jmp
xor
lcall
sub
ljmp
mov
push
or
jle
and
lcall
inc
orb
ss
mov
xor
gs
and
pusha
adc
int3
rorb
enter
cmp
push
xchg
or
into
notl
xchg
mov
push
pushf
lcall
push
test
mov
adcb
xor
cs
add
mov
mov
jae
stc
mov
lds
mov
in
add
push
mov
push
add
sub
imul
sti
lcall
sbb
sbb
scas
test
push
out
jo
lods
and
or
or
testb
cmpsb
in
sub
mov
cmpsb
cmp
jge
push
adc
jmp
push
aas
or
sahf
cmp
xchg
mov
in
cmp
or
call
inc
fucom
sub
cmp
icebp
adc
inc
lock
pop
flds
inc
or
cld
daa
mov
inc
idivl
sub
fcompl
les
jns
push
shlb
repz
scas
mov
add
pop
in
pop
adc
fnstsw
pop
fs
addb
xchg
mov
mov
mov
adc
cmp
loope
adc
and
movsl
imul
fs
or
sub
inc
test
and
push
aaa
sub
xchg
mov
xchg
push
test
lret
pop
jbe
cs
add
or
mov
push
mov
sub
mov
cmp
xor
xor
jnp,pt
out
cli
pop
inc
xchg
mov
dec
add
data16
popa
lock
cmpsb
test
nop
repz
mov
mov
iret
inc
dec
lcall
inc
ficompl
sbb
push
gs
dec
fldenv
inc
sarl
xor
xor
jae
xor
iret
cmpsl
lds
lret
stos
xor
mov
or
lret
xor
pop
loop,pn
jmp
fdivrs
mov
and
mov
dec
pop
fwait
cmovo
rcrl
mov
xor
sbbb
mov
ret
xor
lgs
gs
scas
adc
stc
sti
cs
mov
sub
jg
aad
mov
into
pop
cli
fmull
xchg
loope
lcall
pop
ja
pop
jg
mov
stos
adc
call
lret
sbb
test
adc
jmp
xchg
push
iret
pop
add
mov
fwait
cs
jns
and
inc
xchg
popa
push
rorl
in
in
orb
dec
mov
inc
xchg
jecxz
imul
movsb
add
test
jmp
fucomip
pop
repnz
adc
xchg
xchg
sbb
in
cmpsb
xor
cmp
pushf
add
cmpl
jl
std
iret
lret
pop
cmp
lret
mov
cmp
inc
adc
jecxz
ret
icebp
or
pop
loope
cmp
dec
sub
pop
push
roll
leave
sbb
scas
sub
cs
xchg
fists
movsb
fs
fidivrl
mov
cmp
xchg
repnz
aas
dec
xchg
imul
or
inc
adc
push
cmp
ss
jle
and
js
je
add
cmp
jno
ljmp
rolb
mov
ljmp
push
pop
scas
dec
cmpsl
cld
in
std
xchg
stc
aas
xlat
mov
gs
push
cltd
imul
add
jbe
cmp
arpl
in
cli
stos
push
cld
adc
aas
scas
jns
push
sbb
fnstenv
out
add
xchg
xor
in
sbb
scas
jmp
jnp
sti
das
jb
fldt
sub
jg
jne
fwait
mov
mov
dec
repz
xor
sbb
call
pop
fwait
pop
pop
pop
ret
cltd
ljmp
xor
test
lods
es
sub
or
xor
adc
in
jnp
xchg
adc
addr16
xor
lods
int3
sahf
jo
dec
dec
out
in
jge
xor
test
jge
jecxz
in
ss
or
mov
in
adc
cwtl
ret
mov
fwait
jo,pn
repz
ret
sbb
stos
fisttpl
pop
push
mov
inc
fdivrp
dec
int3
subb
arpl
sub
call
stc
das
shr
cs
int3
loop
dec
loope
sub
mov
aad
jle
clc
popa
test
gs
push
add
xchg
and
addb
popa
mov
xchg
in
sti
inc
mov
lahf
add
xor
fildll
aas
xchg
bound
mov
xchg
das
push
data16
pop
push
jg
adc
loope
pop
and
push
mulb
fs
and
jmp
mov
clc
jge
add
mov
movl
lods
inc
inc
popf
adc
das
cmpb
test
jle
pusha
jo
ror
fucom
out
repz
xchg
cmpsl
pushl
sub
mov
push
push
iret
fidivl
cltd
ljmp
in
dec
cmp
ror
pop
fstps
xchg
sti
jg
mov
lods
mov
js
cmpsl
aas
addr16
add
insb
ljmp
xor
js
mov
lock
mov
les
sub
inc
loope
mov
lea
cmp
jle
and
mov
les
pop
test
fistl
mov
xchg
jns
insl
das
jb
push
scas
pop
and
mov
adc
xor
cs
and
mov
mov
movsb
outsb
mov
sub
or
jg
jecxz
enter
cltd
xchg
mov
sub
or
iret
outsl
repz
inc
jp
fcmove
inc
add
xchg
mov
cmp
inc
rcrb
outsl
mov
dec
addr16
pop
mov
cmpsb
mov
add
push
sahf
fwait
pop
aaa
inc
or
jmp
mov
lret
xor
mov
nopl
push
bound
pop
mov
dec
sub
ljmp
xchg
xor
clc
xor
loop
loopne
add
mov
jbe
or
fbld
dec
shlb
mov
mov
aad
stc
cli
mov
pop
pop
mov
xor
mov
adc
pop
idiv
in
inc
aam
test
mov
mov
or
push
xchg
pop
rorb
xchg
imul
sqrtps
jle
cs
leave
imul
mov
cwtl
stc
daa
inc
or
aas
movsb
mov
or
xchg
mov
ljmp
movsl
and
jecxz
jne
in
sbb
jb
sub
insb
sarb
dec
decb
fwait
adc
sub
adc
test
pop
sarl
push
jae
or
cwtl
dec
dec
jge
mov
jns
cmc
pusha
mov
je
push
enter
enter
nop
iret
in
push
int3
mov
lock
bound
or
int3
insl
test
mov
shl
dec
cmp
stos
std
push
stos
dec
dec
adc
loope
je
stos
cmp
pop
push
xchg
pop
xchg
int
sub
lods
pop
mov
jne
cmpb
outsb
shll
dec
xchg
mov
repz
push
sbb
lcall
adc
mov
push
fs
xchg
or
mov
popa
mov
inc
or
inc
cmpsb
pop
clc
pop
rol
jg
cmovl
pop
dec
outsb
or
sti
cmpsl
in
pop
cmpsl
cmp
sub
jp
inc
xor
popf
out
sub
int3
inc
mov
lea
push
dec
sbb
or
add
std
and
loopne
out
pop
sahf
xchg
fimull
imul
fs
out
mov
xchg
cs
ret
movsb
cmp
sub
push
and
pushf
or
cli
dec
xchg
inc
jecxz
daa
inc
mov
pop
adc
lea
mov
fisubl
lcall
pop
lret
push
f2xm1
adc
jo
mov
data16
outsb
mov
mov
fldt
push
insb
or
dec
test
dec
std
int
xchg
push
cld
repnz
xor
add
test
in
pop
orb
pusha
xor
xchg
adc
fmuls
outsl
cld
insb
and
out
imul
pop
adcl
push
push
sub
pop
adc
and
out
cmpb
sub
adc
jg
sbb
xchg
mov
dec
scas
xorl
mov
mov
add
shlb
pop
fiadds
mov
leave
sbb
sub
mov
push
pop
les
dec
and
dec
orb
push
hlt
jnp
cmp
into
jmp
test
fistl
add
mov
in
rol
scas
mov
mov
sbb
shlb
lds
adc
push
orb
add
aad
movsb
enter
adc
mov
sbb
dec
push
data16
sbb
scas
int
pop
fistps
push
push
testb
adc
cmp
push
out
pushf
push
gs
imul
or
mov
jg
jp
sub
fsub
mov
mov
adcb
inc
fs
lock
sub
jno
push
mov
or
adc
orb
clc
xchg
sub
ds
fneni(8087
lret
fistpll
iret
inc
ljmp
lcall
push
mov
and
pop
in
insb
ljmp
int
cmpsb
hlt
dec
daa
fcom
mov
int3
std
fisubl
stos
dec
and
fidivs
jno
shlb
fnstcw
xchg
mov
jp
mov
cmpl
cmp
aad
sbb
fmul
scas
test
sub
and
stos
mov
inc
add
cmc
bound
repz
shll
adc
test
xchg
jl
fmull
in
dec
add
and
dec
pop
icebp
add
pop
insb
leave
xchg
xor
shlb
or
outsb
mov
mov
xchg
jp
add
sti
mul
das
inc
loop
jge
sbb
es
mov
int3
in
imulb
xor
mov
in
xor
outsb
test
and
push
scas
lods
aas
arpl
ds
std
inc
pop
dec
insl
rcl
pop
add
ret
out
cmp
cmp
sbb
and
sub
and
into
sbb
mov
jo
in
push
mov
inc
loope
f2xm1
rorb
cmpl
ja
std
mov
mov
scas
inc
jnp
pop
aad
dec
pushf
cli
xchg
fisttpll
data16
lea
push
or
aas
loopne
lahf
jmp
fldt
cs
xor
gs
mov
out
scas
xchg
dec
je
inc
adc
push
rorb
pop
aam
out
sub
mov
sahf
iret
inc
and
pop
mov
add
aaa
xchg
push
test
pop
lds
push
in
cmp
mul
mov
iret
in
dec
or
dec
imul
arpl
sub
mov
in
mov
mov
icebp
push
gs
pop
mov
push
call
or
mov
dec
xchg
pushf
stos
lods
dec
cmp
fwait
mov
mov
lret
mov
adc
sub
mov
fwait
ja
cmp
imul
mov
fisubl
jbe
add
cmp
jae
jmp
xchg
hlt
mov
sbb
fs
loopne
pop
mov
jp
daa
pop
ds
jne
mov
add
jle
xor
and
cmpsl
outsl
cmp
xor
fists
int3
repz
jns
mov
fcomip
ret
scas
into
test
mov
and
mov
inc
jle
push
lods
jne
into
lahf
pop
into
in
and
test
mov
sub
xchg
sbb
jg
adc
sbb
shl
mov
cmp
pop
mov
add
xor
loopne
jo
adc
mov
scas
mov
scas
jb
jmp
cmp
push
cmp
add
daa
fadds
lods
rcll
xor
insl
sbb
mov
mov
pop
sbb
jbe
jecxz
test
and
test
imul
xchg
cmp
in
fcoms
mov
mov
or
push
xchg
sti
mov
jns
push
repnz
imul
shlb
lock
jecxz
addr16
enter
xchg
adc
xor
stos
push
out
cmp
inc
pop
mov
out
addr16
pop
sub
sti
or
insb
adc
adc
fs
jle
add
fcoml
jb
cs
push
push
sub
jae
inc
fwait
dec
mov
pop
lods
dec
or
jg
int
repnz
ds
movsl
imul
cmpb
fnstsw
cmp
dec
and
inc
jb,pn
sarb
jns
insb
xor
int3
mov
mov
ds
sub
arpl
ret
inc
subl
pop
aam
adc
inc
or
mov
adc
call
rcll
xchg
pop
out
les
sub
fs
mov
push
sbbb
std
mov
fcmovnu
movsb
mov
xchg
jge
fstpl
mov
dec
xchg
and
sub
cltd
add
lahf
stos
lds
inc
and
add
sub
das
add
lahf
inc
imul
repz
test
adc
xchg
xchg
inc
icebp
rorb
xor
lods
inc
subl
pop
dec
pushf
sti
test
dec
jnp
adcl
push
cwtl
in
cmp
mov
dec
fsub
or
xchg
daa
sbb
pop
xchg
pushl
pop
mov
fcoms
repz
xchg
pop
xor
test
and
cli
dec
sub
imul
les
outsb
add
push
dec
call
cs
xchg
sub
push
xchg
sub
jno
sub
cmp
push
das
or
movsl
out
add
mov
fisttpl
push
sbb
movsl
or
test
mov
ds
mov
push
dec
cmp
push
scas
incb
adc
mov
push
xlat
cmp
sbb
cmp
inc
roll
mov
icebp
xorb
sbb
push
add
mov
lods
mov
dec
rorl
daa
xor
pop
add
push
mov
ja
dec
roll
mulps
jnp
dec
outsl
jl
fsubs
mov
insb
shlb
fimull
notl
data16
ret
push
sbb
sbb
xor
movsb
shll
sbb
adc
repz
adc
arpl
and
stos
mov
dec
mov
stos
inc
or
mov
fdivs
mov
jge
sub
jl
ds
cmp
repnz
add
mov
sbb
and
push
in
sbb
mov
pop
and
outsb
stc
popa
movsl
mov
int
pop
inc
dec
inc
in
loope
jp
mov
inc
mov
fwait
inc
test
cmp
cmp
jno
inc
pop
inc
nop
sub
aaa
cmp
or
in
int3
repz
sub
add
outsl
adc
lods
in
bound
inc
mov
in
pop
dec
mov
int
jne
inc
jg
test
clc
out
push
call
dec
mov
xor
or
push
loopne
jmp
ss
sbb
dec
in
je
outsl
pop
jbe
xlat
and
add
add
xor
dec
dec
push
sub
fs
cmp
and
and
xchg
lock
xor
cli
mul
sub
add
mov
cmp
sbb
je
pop
mov
lcall
or
dec
loope
gs
pop
xchg
std
sub
jmp
cltd
ds
test
push
fidivl
stos
mov
imul
push
gs
xor
and
mov
adc
pop
xchg
push
rorb
fwait
cmp
sbb
lea
or
cmp
fs
int3
jae
jg
pop
cmp
sub
ss
dec
dec
xor
add
lcall
or
jle
push
fcomps
cmpsl
insl
and
cmpsb
mov
mov
jo
pop
mov
je
mov
sbbb
loopne
inc
lock
jnp
sahf
daa
mov
mov
stc
xor
ljmp
test
adc
cmp
jb
ret
je
not
jne
inc
sub
sbb
mov
cs
inc
pop
ja
lahf
icebp
rcll
adc
cmpsl
lods
outsl
or
cli
test
sbb
outsb
mov
and
jg
leave
sbb
xor
cmp
lea
nop
popa
call
dec
js
and
jge
test
je
mov
inc
lret
xchg
jbe
pop
mov
adc
mov
inc
inc
sbb
sbbb
fistl
sub
or
dec
pusha
bound
push
je
pop
hlt
dec
jae
nop
xchg
mov
push
cli
mov
ret
fsubs
lret
insl
adc
or
inc
mov
int3
pop
mov
cmp
xlat
xchg
aas
push
stos
imul
in
add
pop
and
pop
xor
fdivrl
adc
lock
mov
insl
inc
fdivr
sbb
imul
sbb
mov
mov
lret
xor
lahf
jmp
xchg
cmp
and
jnp
aas
aam
xchg
dec
in
out
lea
loopne
test
es
push
inc
sub
lret
addb
imul
push
add
imul
std
add
hlt
xchg
shrb
cmp
mov
arpl
xor
mov
leave
cmpl
fistpl
xor
jl
fcompl
rorb
dec
ja
nop
fidivs
test
sti
fsubrl
lret
lods
loopne
pop
dec
int3
testb
jns
jmp
test
sub
jl
aas
jns
push
lds
dec
iret
dec
ja
mov
test
insl
or
shrb
iret
push
sub
sub
pop
mov
in
cmp
aaa
push
jbe
fldenv
pop
jp
aas
dec
and
insb
repnz
out
mov
inc
sbb
xor
push
xchg
stos
std
lock
mov
mov
cmp
mov
pushf
add
cmp
xchg
and
div
je
testb
stc
inc
cmpb
mov
cmp
cmp
insb
sub
repnz
push
inc
jmp
add
push
mulb
mov
mov
mov
ret
push
out
stos
or
scas
es
daa
test
jp
sbb
loop
addr16
std
pop
mov
imul
aam
pop
iret
test
out
test
dec
push
flds
add
sbb
xchg
in
ds
push
hlt
push
andb
sub
sarl
xchg
int3
rolb
je
cmp
or
push
int3
jbe
cs
mov
push
mov
bound
ret
into
call
fldt
inc
xchg
or
mov
outsb
fisubrl
pop
imul
mov
sub
jg
cwtl
shll
jns
pop
push
fidivs
xlat
loope
push
sub
push
pop
mov
inc
push
push
jb
fildll
mov
sub
mov
data16
jne
call
xchg
pop
or
pusha
mov
lock
jnp
mov
shlb
xorb
adc
iret
mov
lahf
fistpl
xor
movsl
sub
mov
adc
ljmp
push
orl
pop
push
in
in
inc
and
sbb
push
and
pop
sub
mov
popa
inc
adc
and
jbe
lds
out
xchg
and
out
pushf
test
sub
popa
lahf
outsl
lret
mov
mov
dec
in
jb
push
aaa
int
push
or
iret
stos
jmp
cwtl
dec
test
add
mov
xchg
divl
out
jp
xchg
daa
movsl
out
pop
repz
pop
push
in
xor
inc
or
cmp
std
imul
push
sbb
daa
inc
gs
push
xor
xchg
data16
out
fbstp
scas
jge
ds
stos
xchg
xchg
xor
mov
js
mov
shrb
inc
dec
bnd
push
cs
out
movsl
cmp
loop
in
aas
jmp
or
xorb
fldcw
test
sub
push
adc
push
xchg
pop
int3
mov
add
xor
movl
mov
xor
cwtl
loope
and
cmc
stc
imul
pop
jae
sub
test
enterw
jle,pn
insl
xchg
movsl
sti
and
xchg
dec
adc
mov
push
adc
xchg
jle
test
adc
pop
addr16
dec
lahf
call
fisttpll
and
mov
stc
movb
sbb
mov
lods
adc
fcmovnbe
pop
inc
test
adc
jmp
mov
clc
push
mov
repnz
test
decl
xchg
cld
ret
insb
xchg
jp
imul
mov
outsb
stos
push
adc
or
mov
rcrl
sti
cmc
mov
aaa
movsl
insb
cltd
jae
mov
outsl
mov
mov
inc
lods
xchg
add
jmp
inc
dec
mov
mov
cs
jecxz
and
sbb
xchg
and
inc
jo
pop
xor
push
push
push
movsl
or
into
aas
lds
sarb
pop
pushf
adc
mov
lret
not
mov
scas
out
stc
repz
out
fnstsw
push
pop
cld
popf
outsl
out
nop
ljmp
movsb
cmp
inc
aad
sbb
clc
xchg
dec
stc
xor
xor
adc
sub
fidivl
frstor
stc
or
stos
les
rorb
arpl
adc
xchg
scas
and
pop
dec
push
lahf
mov
loop
xchg
call
cltd
insl
aaa
push
in
stos
sub
xchg
add
iret
fisubl
pop
or
cltd
iret
imul
test
std
xchg
add
push
imul
xlat
dec
push
or
fisubl
cli
dec
jbe
sahf
push
sarb
dec
out
in
push
lock
in
jle
ljmp
and
adc
jge
ss
orl
inc
xorl
out
arpl
cmp
int
fwait
and
movsl
scas
daa
stos
add
ljmp
test
rcll
and
jp
int
xchg
inc
scas
inc
out
xchg
mov
call
lea
push
or
push
aam
outsb
xor
out
xchg
je
cmpsb
mov
and
js
out
out
mov
nop
jno
jmp
enter
pop
push
fsubrs
into
xchg
mov
sub
jne
xor
pop
movsl
pop
int
repnz
mov
dec
lea
int3
sahf
bound
div
arpl
lock
and
cli
cld
ja
mov
pusha
jl
es
ror
mov
int3
push
push
out
daa
push
jnp
clc
adc
push
pop
aaa
ds
repnz
xchg
push
push
jno
enter
dec
add
xchg
mov
cmp
mov
mov
test
ja
push
int
fildl
push
loopne
jne
fldenv
aaa
dec
sub
ret
xchg
or
mov
dec
mov
popa
pop
jmp
in
mov
loopne
daa
nop
sbb
or
or
dec
pop
into
iret
les
sbb
out
xor
adc
loope
cmp
jnp
cmp
sub
scas
or
and
cmp
call
pushf
add
subl
push
out
cs
sub
cmp
stc
push
or
mov
or
ja
pop
xchg
inc
inc
cld
jno
sub
jp
mov
inc
push
scas
in
inc
int
aad
xchg
jmp
fcomip
jo
push
rcr
dec
fildll
cs
imul
mov
idivl
lods
aam
aaa
fs
push
push
mov
insl
sbb
rcr
loopne
or
fs
fcom
js
insb
imul
lcall
repz
daa
jl
int
mov
aas
mov
push
push
adc
sbb
lods
sti
and
cmc
or
mov
pop
popa
shll
inc
or
and
pushl
or
adc
pop
das
mov
imul
fnsave
rcll
popa
call
movsb
cmp
mov
xor
mov
negl
cmp
loopne
inc
jae
scas
sti
dec
call
lods
xor
sarl
inc
adc
shl
adc
loopne
push
push
xor
sub
xchg
addr16
ret
or
iret
ficompl
bound
pop
sbb
xor
mov
pop
xor
xor
add
lea
jo
mov
push
test
leave
nop
jecxz
jmp
cmp
aam
and
clc
mov
xor
pop
std
into
mov
fwait
in
lret
std
in
sti
xchg
and
popa
imul
sahf
pop
jl
pop
popa
lret
pop
out
mov
aaa
cmp
jmp
hlt
cmpsl
add
dec
pop
mov
xor
scas
cmp
push
mov
mov
pop
add
push
ficoms
rolb
js,pn
inc
cmp
stos
cmp
aas
push
pop
dec
repz
jle
jbe
fcomps
push
int
mov
loope
push
loopne
in
mov
mov
push
sti
cmp
aad
clc
pop
leave
shl
outsb
cs
rcrb
add
pop
cmp
sahf
adc
repz
pop
dec
mov
push
push
test
fstpl
cmp
mov
inc
xor
aam
enter
mov
mov
push
push
movsl
pop
sub
enter
out
or
push
lret
movsl
mov
dec
subl
cmpsl
enter
mov
sbb
ja
xor
inc
mov
jbe
mov
xor
or
and
fists
cmp
in
sub
mov
xor
sub
cmc
dec
out
jl
push
test
dec
cmpsl
push
insl
mov
in
or
xorb
mov
aaa
mov
shlb
inc
jns
xlat
jo
mov
pop
outsb
cmp
adc
dec
sub
jb
add
xor
cmp
cmp
ds
adc
cmp
shr
rol
hlt
pop
shll
loope
fcoms
mov
cmp
les
in
loope
into
rcr
push
addb
daa
mov
aad
clc
iret
ret
dec
cltd
jno,pt
dec
fcomp
in
dec
lds
vmovupd
and
lods
lahf
iret
mov
gs
ret
push
daa
xor
xor
cmp
das
mov
jbe
push
out
ljmp
adc
rol
test
push
dec
fsubs
or
arpl
sub
cmc
mov
mov
xchg
call
mov
jle
movsb
outsb
mov
jns
xchg
xor
pop
scas
add
pop
adc
add
rcrb
push
sub
mov
push
insl
test
repz
dec
cld
outsb
pop
test
inc
movsl
sbb
scas
jl
repnz
dec
push
psrlq
loopne
sbb
lea
sti
dec
shufps
cmc
cs
das
pop
test
sub
test
cmp
in
movsl
add
or
sub
cs
iret
loop
orb
push
cmp
ss
fidivs
mov
push
sub
andb
test
or
sub
jbe
fcmovnbe
lretw
adc
addr16
sahf
inc
lret
cmc
into
pop
fwait
scas
dec
xor
repz
arpl
dec
jl
js
sub
test
mov
repnz
mov
in
test
int
mov
shl
inc
adc
cmpsl
ljmp
stos
cmp
and
lcallw
jne
arpl
and
orl
cmp
pusha
adc
mov
mov
push
jl
jns
pop
sarl
in
or
lea
jbe
sti
es
mov
cmp
insb
out
add
cli
mov
pushl
jmp
push
sub
sbb
les
jp
std
sbb
jg
xchg
xlat
push
jne
je
shrl
insb
bound
aam
jnp
sbb
aad
ret
out
xchg
arpl
inc
lods
push
nop
jp
jmp
insb
andl
pop
rdmsr
mov
or
pushf
push
outsb
loop
dec
out
mov
out
jp
xchg
mov
push
lods
fisttpll
mov
enter
andb
out
ret
inc
pushf
scas
or
nop
in
xor
mov
push
pusha
daa
stos
push
push
into
mov
outsl
push
mov
fwait
dec
fimull
mov
pop
std
in
or
and
fmul
outsl
aaa
xchg
or
mov
inc
and
push
dec
xchg
pushf
xor
clc
sbb
cmpsb
cmp
jb
ds
aam
mov
jae
fistps
inc
shr
mov
test
or
into
xchg
mov
xchg
cmp
in
inc
dec
sub
sub
dec
inc
movsl
iret
or
loopne
out
idiv
or
sahf
xchg
fcmovu
and
mov
int
pop
scas
lea
push
push
into
jo
and
or
pop
testb
xchg
iret
imul
lcall
dec
je
adc
mov
add
push
lea
dec
loopne
mov
out
push
xchg
mov
mov
aam
add
mov
or
or
insl
add
in
pop
cmp
sub
cmp
xor
push
lahf
call
inc
mov
jno
imul
fisttpl
fiaddl
ljmp
xor
sti
pop
call
mov
sahf
mov
adc
addr16
gs
push
or
mov
jle
cmovbe
mov
push
fld
jne
enter
pop
cltd
adc
mov
ficompl
xchg
lcall
outsb
xor
lret
negl
popa
aaa
shlb
and
or
mov
inc
or
lods
mov
or
aaa
aam
das
mov
imul
add
sub
and
push
adc
xchg
lods
sbb
call
cmpsl
and
scas
mov
and
xor
mov
pushf
sbb
ret
in
test
inc
sub
cmp
das
dec
mov
dec
cmp
arpl
xchg
pop
jns
sbb
jg
adc
jae
icebp
push
xchg
push
rcrl
mov
fs
hlt
fisttpll
dec
xor
push
jns
mov
pop
pop
scas
and
lahf
or
push
add
jnp
sti
xchg
fdivp
popl
push
roll
and
in
jg
call
push
sahf
into
xor
leave
xchg
mov
cltd
nop
cli
push
or
xor
mov
jp
xor
cmp
xor
leave
or
xlat
mov
std
insl
lea
mov
fldenv
leave
or
jmp
or
xchg
hlt
xchg
or
ljmp
cmpsl
ja
test
rcr
or
pop
sbb
cmpsb
das
cmp
fisubrl
cmp
sbb
xchg
jecxz
ret
cmp
xor
xor
into
inc
push
adc
repnz
stos
push
bswap
ret
cltd
dec
test
out
mov
xor
sbb
fcoml
xchg
or
rol
push
aaa
or
sub
xchg
js
js
and
jmp
lcall
mov
enter
cwtl
inc
mov
or
xchg
mov
xor
xor
xor
dec
push
inc
mov
mov
mov
sub
test
xchg
dec
fiadds
adc
cmp
aam
add
dec
pxor
jmp
data16
dec
stos
and
out
sub
push
aaa
jge
rcr
cmc
dec
xchg
adcl
adc
in
aas
fnsave
dec
xchg
out
aad
jg
addb
int3
push
lahf
fld
repnz
mov
mov
sbb
add
ret
das
add
inc
ljmp
sbb
scas
pusha
pop
dec
ja
repz
fstl
jnp
imul
cmp
cmp
push
push
mov
mov
push
popa
xchg
cmp
mov
xchg
dec
cmp
cmpsb
mov
shr
pop
in
push
popa
jae
scas
lods
pushf
iret
mov
xor
lds
pop
xor
fnstsw
das
inc
mov
fldl
or
int
dec
sub
cwtl
pop
mov
xchg
out
inc
xchg
xchg
shlb
imul
adc
lock
enter
jae
pop
insb
dec
dec
movsb
fdivl
jmp
lret
or
pop
mov
xor
sub
dec
or
push
pop
xchg
ds
loopne
push
inc
and
inc
push
sti
lahf
cmp
mov
es
std
pushf
jl
cli
inc
sbb
into
aam
xchg
mov
cmpsb
jg
sti
popa
int3
jg
sub
loope
pop
sbb
cmpb
sar
inc
pop
clc
in
fisttpll
cmpsb
add
pop
ljmp
xor
dec
push
std
adc
or
test
adc
cmpsl
inc
rclb
divps
jmp
adc
mov
cwtl
jle
xchg
hlt
movsl
or
std
mov
add
rorl
ja
pop
sti
pop
in
mov
fdivl
pop
test
mov
ret
les
pop
pop
xor
mov
mov
add
pop
xchg
mov
leave
daa
fidivl
mov
aad
das
add
xor
in
out
enter
push
jecxz
in
cltd
dec
movsl
icebp
iret
jbe
xchg
jbe
rol
das
out
rorl
frstor
jns
test
sub
sub
and
cli
insl
mov
dec
pop
push
repz
or
xor
cli
xor
flds
push
dec
out
and
dec
movsl
adc
mov
in
mov
push
stos
divl
daa
xchg
push
and
jle
repz
sbb
xor
push
mov
test
fs
iret
imul
lock
addr16
adc
lods
dec
sbb
push
adc
adc
sbb
add
lret
and
sbb
lock
jle
cmp
call
mov
jecxz
stos
js
inc
inc
xor
in
outsl
lods
jmp
subb
dec
dec
mov
imul
mov
lds
hlt
dec
mov
lock
xlat
sar
repz
rcll
movsl
lcall
mov
movsl
mov
dec
sarl
imul
xchg
xchg
cmp
inc
outsb
jne
cmp
dec
add
xchg
add
jg
movsb
stc
outsb
jnp
cmpsl
imul
adc
and
adc
push
outsl
push
insb
pop
subl
dec
sti
add
xor
mov
xchg
mov
ss
xchg
loope
fsubl
dec
sti
fldt
cmp
inc
imul
imul
push
add
mov
stos
mov
rorb
iret
jne
int
pop
stos
xchg
push
inc
xchg
movsl
mov
add
jns
xor
jno
imul
xor
das
enter
lahf
mov
movsb
in
lds
lock
call
cmpsl
cmp
jp
mov
push
push
dec
mov
imul
jp
imul
pop
mov
aaa
hlt
imul
mov
add
jecxz
add
repnz
xor
dec
popf
jns
xchg
inc
fdivl
cmpsb
mov
repz
std
mov
rorl
sub
hlt
push
shlb
cld
mov
insb
fsubr
rcrl
outsb
xchg
sarl
mov
lret
std
xchg
insb
mov
test
sbb
clc
fsub
bswap
jnp
adc
dec
call
lahf
pop
jge
popf
js
das
mov
jecxz
stc
test
jo
or
gs
jg
lahf
dec
stos
or
fs
mov
fsubl
mov
out
dec
idivb
add
repz
push
push
pop
dec
push
xlat
outsl
mov
int3
mov
test
rcll
in
int3
inc
mov
daa
cmc
aad
mov
jge
in
sub
push
cmp
or
pop
idivb
scas
insb
inc
fistpll
xor
push
mov
add
aad
subb
and
mov
faddl
addr16
sbb
push
adc
int3
fldt
lds
dec
out
inc
aaa
xchg
movsl
dec
push
and
repnz
xlat
ret
scas
outsl
add
fs
stos
and
pop
inc
cmpsb
push
push
sub
rcll
xor
push
and
xorb
rcl
inc
in
inc
idivl
ror
sahf
test
lret
mov
mov
scas
add
sbb
and
jg
shll
lahf
insb
add
inc
rep
popa
popf
pop
sbb
inc
or
jns
fnstsw
je
push
test
mov
sbb
sti
insl
aas
dec
jb
iret
out
scas
inc
aas
xchg
cmpsb
adc
fstl
fcos
dec
pop
subl
repnz
test
and
mov
js
ljmp
lea
adc
out
popf
int
movsl
dec
mov
jae
outsb
jnp
repz
push
cwtl
int
iret
and
jo
cmp
pop
jnp
xor
movsb
add
lods
xorb
jp
dec
xchg
bound
adcl
or
pop
lahf
push
and
movsb
push
sub
in
mov
xchg
xchg
sbb
inc
jo
mov
mov
dec
adc
jp
xchg
push
push
xlat
adc
dec
sub
jnp
ficomps
push
fs
xchg
ret
into
mov
addr16
cmp
adc
imul
push
xor
adc
mov
test
cmp
ss
sarl
out
stos
aam
pop
lods
sar
jmp
rol
push
sbb
js
xor
movsb
pushf
mov
dec
adc
mov
jp
dec
ljmp
call
arpl
pop
notl
stos
call
jbe
xchg
pop
pop
ffree
lea
xor
cmp
dec
cli
adc
or
mov
sar
dec
aaa
sub
cmp
jecxz
jmp
leave
shrb
mov
popf
mov
xchg
cmp
xrelease
enter
and
push
pop
outsb
lods
pop
sbb
sub
push
push
jnp
pop
or
mov
mov
lahf
push
mov
lret
mov
xchg
sbb
into
push
or
test
push
in
cmp
rcrb
imulb
pop
cwtl
dec
mov
leave
pop
cli
das
test
inc
dec
in
fwait
xchg
dec
inc
daa
add
imul
shll
cmp
rcrl
adc
add
aaa
orl
mov
pusha
xchg
xchg
dec
mov
rcrb
addl
mov
call
xor
pusha
jge
adc
jmp
ja
shrb
loope
pop
add
dec
inc
mov
jp
mov
xchg
int
pop
inc
lods
orb
ds
inc
dec
lock
ss
jg
add
mov
pop
xor
fwait
daa
adc
or
hlt
call
pop
mov
jno
jb
aaa
sub
mov
fistl
sub
scas
lds
subb
ljmp
dec
lds
dec
lcall
clc
pushf
cli
fldl
jb
push
jecxz
pop
lret
stos
mov
jge
arpl
incl
inc
adc
jecxz
pop
pop
dec
adc
out
mov
ds
inc
sub
nop/reserved
leave
add
mov
pop
repz
sbb
inc
jp
pop
mov
cmc
ret
lret
lret
pushf
call
jg
cli
inc
fcomi
push
push
jb
sub
fucomp
jbe
lds
xor
mov
or
mov
jae
or
lret
cmpb
popa
out
ret
jns
es
sbbb
pop
pop
pop
and
mov
jg
in
cmp
mov
jmp
dec
sbb
and
xor
ds
rorb
inc
stos
mov
scas
dec
mov
dec
sarl
bound
sub
bound
push
or
pop
jae
adc
sbb
add
pop
andb
jmp
dec
inc
daa
lcall
mov
pop
stos
idiv
repz
stc
or
fidivrs
sub
in
outsl
jae
xor
je
std
add
and
ljmp
repz
fcomps
es
ss
add
imull
add
sbb
or
mov
inc
pop
sbb
mov
fcomp
mov
dec
shl
xchg
xchg
pop
dec
mov
lcall
or
cmp
test
fnstenv
test
imul
insl
aas
lret
ret
imull
mov
and
js
dec
movsl
mov
test
ret
pop
jge
push
out
orl
cmp
popa
pusha
cld
jmp
xor
jb
lar
push
ljmp
push
fs
cld
insb
mov
daa
adc
add
mov
add
cmp
jecxz
xor
lds
mov
xor
nop
mov
into
ret
sbb
mov
xor
jl
call
aaa
lcall
dec
adc
pusha
mov
pop
cmp
sahf
jb
xor
jns
add
movsl
or
push
sbb
push
mov
fstpl
dec
aas
jb
incl
pop
pop
sub
testl
lret
sbb
or
sub
dec
jno
xchg
mov
test
push
or
nop
xor
mov
inc
push
mov
push
mov
je
push
cs
movsb
mov
popa
adc
aas
xchg
mov
sbb
mov
xor
ret
xchg
rcl
jbe
push
and
and
sbb
lds
nop
lods
sahf
sub
dec
jb
neg
pushf
xchg
mov
jg
ret
fimuls
mov
stos
rolb
roll
push
fisubrs
push
mov
rol
ja
mov
mov
mov
movsb
int
fcoms
mov
xor
add
ret
loope
mov
dec
out
sbb
les
sub
mov
jno
lret
adc
add
mov
imul
divb
or
mov
mulb
mov
jg
cmp
mov
push
mov
sub
lahf
lret
fwait
mul
xor
icebp
testl
arpl
inc
daa
dec
xlat
out
lods
test
out
cmp
mov
fwait
push
arpl
stos
sub
and
mov
insb
and
fbld
int
cli
bswap
ret
xor
lret
inc
xchg
cld
adc
les
arpl
mov
mov
fimuls
xchg
push
push
loopne
inc
std
and
jne
add
push
mov
loopne
movq
aas
and
add
lcall
xor
idivb
mov
in
aad
ret
shlb
mov
inc
pop
push
pop
xchg
aaa
xor
mov
add
mov
inc
rcrl
xchg
mov
out
add
and
stos
jmp
sub
sbb
xchg
pop
clc
scas
pop
lcall
int3
sub
and
arpl
inc
add
pop
sub
cmpsl
pop
cmp
test
mov
pop
imul
cmp
lods
or
cmp
int
daa
pop
mov
and
lahf
js
fimuls
in
lods
shll
loop
cmp
ret
clc
enter
clc
testb
jb
sar
sbb
ds
sbbb
cld
sti
cmc
mov
push
jecxz
jb,pt
iret
cmpsb
loopne
sub
push
arpl
sahf
mov
lcall
adc
call
mov
fs
inc
cmpsb
sub
mov
xlat
lods
push
pop
data16
push
mov
push
test
scas
leave
outsl
jnp
push
sub
fcoml
into
pusha
cmpsb
jmp
arpl
popa
sub
std
js
cwtl
or
and
sti
mov
std
hlt
pusha
lods
mov
in
popf
mov
stos
je
xor
xorb
or
arpl
jns
mov
mov
push
cmp
mov
stos
jp
add
add
cmp
pop
mov
rcll
jo
jns
xchg
xchg
in
shrl
sbb
push
rorl
mov
or
dec
test
dec
cmp
dec
decb
cmc
divb
pop
pushf
add
fcmovu
call
xor
test
mov
mov
jg
icebp
ret
aas
cvtps2pi
fcomps
push
or
cmpsl
rorl
icebp
jecxz
into
xchg
push
cmpsb
popa
rorb
mov
xor
xchg
cmpl
mov
pop
inc
enter
sub
sbb
push
pop
and
mov
imul
stos
mov
pop
repz
jnp
mov
faddp
sub
ds
pop
fucom
insl
js
pushf
popf
xor
popa
add
loope
iret
fwait
icebp
jnp
xor
jbe
or
cmp
mov
jge
cmp
push
mov
out
xor
xchg
add
mov
inc
insb
push
shrl
or
cmovo
inc
and
jp
add
insl
dec
xchg
shll
outsb
cmp
xor
pop
pop
ds
imul
mov
mov
xlat
inc
mov
lcall
rcl
movsl
cmp
insb
out
sbb
adc
push
sbb
cmp
pop
or
push
mov
push
aad
aas
jb
rol
fucomp
xor
pushf
montmul
cmpsb
lds
xor
fs
or
imul
sbb
add
and
sbb
mov
inc
outsb
test
xor
xchg
pusha
pusha
cli
and
out
mov
ja
mov
cmp
pop
jl
imul
and
push
push
in
in
or
testl
insb
sub
dec
sbb
lahf
mov
mov
xchg
loope
inc
xchg
push
xchg
ret
dec
add
aas
xchg
mov
mov
mov
push
xlat
addr16
loope
mov
leave
call
xchg
pop
jns
xor
icebp
pusha
adc
jecxz
sahf
cwtl
push
mov
mov
and
xor
pop
push
and
sbb
add
jbe
shrl
lahf
daa
fdivrl
or
or
push
cmpsl
clc
jmp
mov
iret
shrb
push
mov
mov
cli
mov
sbb
nop
in
inc
idivl
in
dec
lds
and
sub
push
ss
pop
stos
adc
mov
test
jnp
enter
jae
sarb
cmp
jbe
cmp
notb
lods
rcr
xchg
push
loopne
ja
ret
out
push
in
mov
pushf
insb
mov
popa
mov
cs
adc
addb
sub
jp
addr16
in
ja
or
push
or
int3
pop
insl
inc
adc
sbb
pop
aad
or
mov
je
push
insb
out
je
mov
movsl
sbb
sarl
sbb
adc
mov
ds
icebp
cmp
mov
jne
add
add
std
sarb
mov
in
add
ljmp
popa
mov
js
cmp
in
or
loope
fstl
or
and
push
stc
pop
jmp
pushf
dec
cltd
outsl
mov
aam
fnstenv
loopne
cwtd
lds
test
cmc
out
scas
sbb
mov
cmp
pop
scas
lock
inc
push
pop
in
fs
fwait
popa
adc
xchg
adc
mov
popf
stos
inc
mov
fimuls
rcr
mov
and
flds
pop
aad
adc
add
pop
lcall
aam
leave
lods
lods
lahf
subb
sti
sub
test
test
mov
pusha
lcall
adc
pop
stc
push
jo
scas
mov
fwait
lods
lods
xchg
push
lcall
or
jb
and
mov
sbb
xchg
aaa
sub
imul
jo
popa
or
sbb
add
aas
test
pop
sub
in
sub
stos
inc
sbb
mov
or
pop
fldcw
push
scas
call
pop
push
push
push
fistpll
mov
xor
push
add
cwtl
and
fdivrp
nop
out
out
mov
addr16
in
add
push
cs
jp
mov
jo
hlt
mov
sahf
cmpsb
fxam
inc
aaa
in
jbe
sub
sub
hlt
fcomp
ficompl
cli
push
das
outsl
or
mov
mov
out
in
jmp
sbb
adc
dec
fsubs
and
sahf
sub
jbe
push
push
mov
dec
es
mov
jle
in
stos
dec
rcll
popa
out
jg
dec
cld
cltd
subb
sbb
sbb
jl
cmp
stos
mov
mov
std
call
cmpsl
push
loop
ret
pop
jl
sub
out
mov
sub
push
outsb
pop
movsb
ret
pop
mov
scas
andb
out
mov
push
adc
addr16
jo
add
in
fadds
add
fistpll
imul
xchg
and
fisubrs
xlat
cmp
adc
dec
mov
lods
xorb
sbb
dec
cs
aad
loopne
hlt
imul
stc
pop
imul
sub
jbe
dec
das
adc
sbb
mov
es
xchg
les
pop
push
mov
fsub
sbb
mov
xlat
add
vpmacswd
scas
or
filds
push
adc
pop
pop
sahf
or
mov
in
add
xchg
insb
pop
js
mov
es
mov
jo
loope
ret
lea
out
push
mov
shrb
bound
cmp
insl
movsb
sub
lret
xchg
fnstsw
cmc
adc
int3
imull
pop
xchg
mov
mov
ficomps
or
adc
push
xor
add
xchg
fnstcw
inc
pop
in
fnsave
lods
pop
cmp
cmp
mov
leave
repz
jl
scas
mov
mov
jecxz
cmp
inc
int3
sub
inc
test
sbb
jno
sub
insl
pop
popa
daa
cmp
stos
faddl
stc
sahf
lahf
mov
jno
jne
xchg
mov
jno
cmpsl
push
push
mov
test
hlt
xchg
rep
jecxz
inc
test
out
mov
pop
mov
push
fucomp
pop
pop
dec
cmpb
test
outsb
imul
sar
dec
adc
push
adc
fildl
shl
les
outsb
mov
jo
jge
mov
js
loopne
xor
out
xchg
daa
dec
popa
fsts
cwtl
addr16
cli
xor
popl
mov
sbbl
xchg
pop
mov
cli
in
sub
cli
fmuls
sub
mov
ficoms
popf
ljmp
add
ret
lahf
movsb
adc
dec
mov
mov
pusha
mov
push
xor
mov
add
push
mov
cmpsl
ja
cmp
push
push
add
fwait
sti
or
push
jno
add
add
gs
jbe
xor
stos
in
stc
adc
incl
and
adc
enter
mov
ret
pop
dec
jle
cmpl
out
mov
lcall
shlb
imul
push
push
or
cltd
mov
or
loope
ret
xor
mov
xor
sti
push
adc
jo
sub
dec
lcall
push
sub
dec
add
inc
pusha
inc
mov
xlat
add
or
jb
icebp
fadd
aas
xor
stos
enter
xor
fsubrl
das
push
push
loope
and
shrl
fadds
push
push
cmp
cmp
repnz
ret
lret
jge
xlat
andb
jae
xor
stc
test
pminub
push
mov
push
rolb
movsl
jmp
fs
das
movsb
leave
jecxz
add
mov
sbb
or
aad
arpl
dec
das
stc
jmp
inc
mov
xchg
ja
xor
hlt
pusha
add
jb
rorl
push
mov
xor
and
dec
push
mov
push
mov
aam
icebp
xor
lods
popf
fdivrs
mov
jle
and
push
pop
adc
mov
ja
xchg
add
adcb
out
rcrl
sbb
rcrl
inc
cmp
stos
add
xor
je
xor
rcrb
add
cmp
and
hlt
test
test
cmp
stos
xor
hlt
push
xchg
enter
stos
sbb
out
inc
pop
bswap
push
cli
fadds
arpl
inc
mov
push
or
je
sbb
xchg
lods
jne
push
inc
stos
movsb
cmp
test
ret
mov
push
lods
push
and
pop
mov
xor
dec
add
lock
test
aam
int3
lret
rolb
in
test
fldt
sbb
dec
jp
jb
jo
pop
pop
shrl
sbb
fisttpl
out
jl
add
adc
ret
sahf
mov
adc
jnp
adc
sbb
or
lock
testb
in
ja
out
cmp
cmp
vmovmskps
jne
icebp
add
lret
fs
repz
in
mov
jmp
jnp
insb
sahf
cli
lods
xor
clc
inc
into
sbb
aam
mov
inc
aaa
out
jl
mov
mov
adc
cmpsl
aaa
iret
adc
sbb
out
pop
mov
or
subb
cmp
test
ds
push
out
fisttpl
cli
push
cmpsb
cmp
cli
shl
adc
xchg
jnp
dec
bound
insl
push
dec
mov
mov
add
imul
outsl
cld
or
cli
sub
orb
lcall
add
call
gs
mov
sub
cmp
imul
imul
sub
push
push
pop
shrl
xor
arpl
mov
or
daa
fdiv
inc
mov
dec
inc
cld
inc
and
mov
fistl
loop
mov
fwait
jo
adc
imul
sub
xchg
and
stc
stos
int
xor
xchg
pop
pop
js
popa
scas
sub
sbb
mov
mov
daa
sub
pop
or
in
cwtl
test
jmp
movsl
nop
mov
mull
push
inc
das
pop
mov
mov
sub
add
ret
adc
dec
mov
sbb
stc
lea
push
mov
leave
push
out
out
aaa
mov
cmp
dec
cs
imul
sbb
pop
aas
sub
dec
adc
orl
inc
adc
pop
jmp
fcoms
lds
popa
loop
dec
jl
push
mov
or
and
push
sub
mov
cmp
dec
xor
pop
popa
xlat
rcl
xchg
lds
lret
rol
lahf
add
or
scas
and
sub
fwait
cmc
je
test
xchg
movsl
xor
in
or
call
xchg
pop
pop
out
jnp
movsl
loope
test
mov
mov
rcrl
test
mov
data16
sbb
pop
mov
aas
fwait
ja
fdivrl
add
mov
cmpsl
sbb
mov
jecxz
pop
pushf
sti
add
dec
adcb
inc
pop
or
cmp
orl
push
addr16
or
or
inc
int3
or
jno
cmc
cltd
add
or
xor
jbe
mov
pop
mov
sub
enter
mov
pop
adc
add
cmpsb
iret
mov
mov
sub
ret
pop
dec
xchg
add
shlb
dec
clc
hlt
loop
fs
sub
hlt
je
lret
inc
push
ljmp
lret
mov
lods
cmp
stos
push
mov
adc
add
jl
push
xchg
jae
and
inc
push
inc
pop
sub
aas
xor
sbb
pop
addr16
data16
mov
fs
into
mov
ud2
jb
xchg
mov
push
andl
lcall
ja
data16
adcl
xchg
rorb
xchg
cmp
xor
mov
sarl
imul
outsl
adc
push
int3
push
inc
mov
shll
out
mov
shrb
faddl
loope
mov
scas
push
push
add
insl
push
sahf
sbb
inc
aam
adc
xchg
pop
sub
cmpsb
dec
adc
xchg
push
pop
fstpt
popa
and
lea
xor
das
addl
ss
rol
or
mov
movsl
test
xchg
pop
sbb
addl
iret
test
or
mov
mov
pop
arpl
mov
mov
icebp
rcrl
loope
insl
add
fnstsw
mov
cmp
sub
stos
jbe
jnp
jnp
mov
testl
loop
sub
jo
sahf
incb
sbb
sbbb
rolb
imul
js
push
icebp
ljmp
in
out
test
inc
mov
scas
sti
scas
dec
xor
repnz
and
cli
xor
and
insb
jl
mov
repz
aas
adc
testl
mov
out
or
lret
or
xor
mov
xor
popa
fimuls
ljmp
xlat
sub
inc
add
scas
inc
pop
pop
push
jo
jno
aas
jno
dec
xchg
imul
rclb
cmp
cmp
pop
outsb
daa
xor
flds
or
and
in
or
sbbl
int3
fnstcw
inc
mov
and
xlat
decb
in
out
mov
insl
stc
scas
cld
ja
std
test
sbb
in
push
cmp
push
jo,pn
pop
sub
push
sahf
or
mov
arpl
pop
fsubrs
testb
aam
add
or
shld
lods
cmp
in
lds
mov
idiv
lcall
jecxz
mov
shrb
inc
call
pop
ss
js
in
inc
sub
mov
or
jae
pop
das
fadd
ss
je
and
adcl
cmpb
and
fcoms
out
add
dec
clc
adcl
pop
xchg
push
mov
sub
push
into
fs
mov
fisttpll
mov
jns
test
daa
jno
adc
lods
mov
repnz
mov
push
loop
mov
and
jae
cmp
ret
in
orl
or
xchg
cmp
sub
add
das
filds
out
outsl
aad
rcr
inc
pop
xor
and
movnti
xchg
shlb
or
mov
sbb
adc
pop
in
jnp
push
or
xor
rcll
daa
push
outsl
in
lds
inc
jae
testl
lods
xchg
cltd
ficoms
sub
or
and
mov
sbb
add
push
xor
mov
loopne
and
ret
jecxz
clc
je
insl
into
push
adc
inc
mov
jne
jnp
jmp
cltd
in
pop
cli
jg
iret
adc
push
sub
addl
ljmp
inc
dec
xor
test
ljmp
pop
mov
jecxz
jecxz
inc
mov
int3
inc
mov
mov
mov
pop
outsb
call
cmc
cmp
imul
sub
sub
dec
insl
inc
and
xchg
mov
jne
insb
out
sub
xchg
xchg
inc
mov
imul
lds
aaa
add
push
push
adc
ljmp
pop
in
push
sbbb
out
pop
into
pop
and
mov
pop
mov
sarb
adc
or
les
add
lcall
push
mov
add
jl
xchg
ljmp
lcall
and
and
adc
add
jo
add
ss
xor
imul
sub
daa
mov
clc
aas
xor
push
mov
mov
mov
push
loopne
sub
rorl
movsl
sbb
sbb
jno,pn
fistpll
jecxz
test
push
mov
loopne
movsb
popa
in
sub
test
test
enter
leave
add
jnp
jle
data16
shlb
lcall
mov
popa
hlt
cltd
mov
movsl
andb
cmpsb
add
je
int
xor
inc
fisubrs
fwait
xor
fistps
mov
jbe
and
cld
xchg
test
ret
pop
sahf
aam
into
jge
or
jae
outsl
les
fsubl
sub
inc
jl
mov
ror
mov
mov
cmc
add
sub
jb
mov
divb
std
inc
push
sbb
cmp
lahf
xor
aaa
pop
cmp
aad
ja
jne
mov
mov
decb
xchg
daa
mov
jns
dec
popf
inc
into
xor
adc
enter
jmp
in
cs
pop
cmp
jbe
sub
mov
cwtl
inc
repnz
push
xchg
dec
paddq
inc
js
fwait
stc
bound
dec
ret
movsl
dec
jl
lret
out
imul
loopne
push
xor
arpl
cmp
out
and
xchg
cld
test
adc
sbb
in
xchg
jmp
jge
sbb
je
loop
inc
inc
dec
icebp
fmull
jo
xchg
or
pmulhw
in
movsl
out
addr16
dec
in
pop
push
push
push
cmp
ss
in
cmp
xchg
movl
bound
jae
orb
xchg
out
jno
out
call
cwtl
aam
fisubs
jecxz
movb
mov
jl
adc
outsl
xchg
xor
jns
fcoms
int3
mov
xchg
dec
outsb
out
sbb
testb
movsb
cmpsb
cmp
jge
les
push
and
movsb
idivl
jmp
scas
decl
hlt
push
xchg
push
arpl
nop
mov
jge
jl
pop
shlb
push
sbb
sbb
dec
pop
jmp
push
cmp
decb
xchg
rcl
loope
stc
mov
or
cmp
jno
gs
inc
mov
shlb
mov
lods
pop
add
mov
test
loopne
dec
dec
scas
test
jae
inc
jbe
lahf
adc
xor
cmp
in
cmc
xchg
les
aaa
mov
sbb
aas
nop
xchg
jnp
das
outsb
mov
test
nop
jb
dec
loop
mov
packsswb
scas
mov
mov
mov
rcr
mov
mov
or
stc
mov
mov
xorb
mov
inc
out
mov
mov
inc
xor
sub
sbb
fidivrs
mov
ficomps
scas
out
outsb
sbb
mov
lock
scas
daa
and
ror
mov
jno
pusha
loope
nop
das
xchg
inc
subb
ds
cli
xor
lods
adc
cmp
das
out
cmpsl
cmp
ja
and
or
adc
adc
sbbl
hlt
dec
repz
les
inc
fbld
cmp
imulb
xchg
mov
movsb
bound
pop
push
loop
jge
inc
push
and
insl
jp
fisubrs
mov
lock
pop
stos
lret
push
xchg
jns
insl
loope
inc
jnp
cmp
xor
int
dec
mov
daa
shl
shr
pop
ret
js
scas
or
xor
sbb
fists
xor
test
stos
out
mov
mov
scas
mov
outsb
xor
xor
mov
and
loop
jns
adcl
mov
pop
cltd
lret
cmp
inc
jg
repnz
stos
jge
js
mov
sti
mov
ja
jo
inc
fwait
es
mov
divb
push
fadds
xchg
sbb
popa
mov
add
clc
stos
int
pop
pop
in
das
jo
lcall
in
incl
std
and
pop
cmpsb
idiv
xor
jno
cmp
jnp
das
sbb
fistpll
cmp
jge
push
mov
or
mov
lock
repz
fndisi(8087
pusha
and
push
ficomps
scas
mov
imul
ljmp
mov
push
outsl
xchg
pop
mov
or
add
push
inc
xor
incb
gs
mov
in
repz
inc
xchg
cld
cmp
mov
enter
pushf
inc
movsb
sub
jae
in
mov
daa
mov
mov
mov
imul
pop
sarb
jo
mov
sub
gs
stos
stos
mov
lods
jle
lret
push
shll
cmp
out
aam
inc
inc
or
in
sub
push
test
fisttpl
mov
mov
loopne
adc
xor
sbb
mov
lret
fs
ss
out
xor
pop
outsl
out
xchg
lea
bound
test
push
sbb
ficomps
cwtl
dec
iret
xor
sti
cmpl
jmp
mov
or
test
insl
mov
jl
cld
xchg
push
orl
push
inc
js
ret
mov
movsl
cmp
leave
dec
push
das
xlat
mov
push
xchg
or
cwtl
jmp
pop
cli
add
insb
out
mov
in
addr16
ljmp
mov
ror
mov
iret
mov
push
dec
cmp
sub
mov
cmp
pop
inc
test
pop
adc
jle
stos
add
jno
jno
sub
inc
dec
outsb
les
cmpsl
ret
call
fimull
jp
pop
xor
lods
ret
inc
pop
stc
rcll
push
and
adc
int3
in
mov
lret
icebp
std
add
xchg
push
and
jg
pop
and
cld
gs
pushf
out
fwait
test
cmpsb
xchg
repz
inc
mov
leave
inc
sbb
or
test
mov
push
push
mov
push
addr16
dec
bound
in
or
nop
or
xor
push
mov
leave
outsl
fisttpl
adc
pop
test
sbb
mov
mov
pusha
and
inc
sbb
leave
outsb
lret
lcall
xchg
pop
js
fcoms
pop
inc
dec
sbb
jle
les
in
imul
or
dec
dec
jge
stos
xchg
jmp
adc
in
push
popf
dec
push
iret
mov
sub
daa
push
cmc
xchg
mov
and
inc
mov
dec
jns
ja
sbb
and
sub
cmp
sbb
out
jecxz
jo
xchg
mov
or
out
jne
pop
and
jb
inc
lea
xchg
push
lea
jns
popa
adc
mov
stos
or
dec
mov
sub
movsb
pop
and
sub
jb
movsl
add
jle
pushw
sbb
push
cld
pop
aaa
bound
fbld
or
push
push
sti
sub
push
shrl
push
ja
mov
push
or
mov
test
sbb
pop
jnp
and
loopne
test
insl
dec
mov
loop
sub
idivl
cmpsb
cltd
repnz
mov
xchg
je
push
sub
mov
mov
xor
xor
cmp
roll
ja
cli
or
adc
add
pushf
mov
inc
add
mov
xchg
dec
scas
xchg
add
ljmp
arpl
jae
ja
sti
jns
xchg
dec
and
push
jne
ds
mov
push
pop
bound
cmp
adc
nop
jb
dec
inc
insl
lahf
ss
pop
fcmovne
ret
scas
sub
cltd
lahf
lock
xor
xchg
stos
inc
push
rol
push
pop
dec
and
js
dec
mov
rcrb
or
jnp
ds
dec
mov
and
ffree
popa
pusha
rorb
movsb
jmp
sbb
or
xchg
fcom
dec
lret
insb
std
xor
mov
ret
or
xchg
mov
loopne
arpl
cmp
pop
daa
jnp
lahf
xchg
or
push
push
dec
and
dec
xchg
das
xor
repnz
sub
cmp
sub
test
push
nop
inc
inc
or
sbb
xor
mov
dec
cmpsb
xchg
push
mov
jnp
in
pop
lret
cmpsl
inc
test
xor
std
sahf
or
xor
jb
insb
pop
inc
mov
inc
jl
arpl
push
or
sbb
push
sbb
mov
sbb
in
or
cmp
inc
movsb
imul
add
pop
or
jb
and
out
cmp
inc
loopne
bound
push
sahf
add
fldl
fwait
pop
adc
push
iret
xchg
dec
addr16
dec
push
test
pop
xor
fcoml
dec
push
loope
xchg
addb
orl
enter
mov
add
mov
stos
in
ds
push
pop
jg
in
lods
fisttpll
pop
leave
inc
mov
push
inc
ja
pop
adc
outsl
fisttpl
dec
movsb
cmp
pushf
imul
xchg
pop
push
or
adc
adc
data16
sub
jge
imul
int
jbe
add
fidivs
popa
iret
lods
sbb
lock
stos
lods
xor
pop
popf
xchg
sbbl
ss
sbb
push
xor
jns
inc
enter
addr16
mov
push
xchg
add
daa
cmpsb
xchg
in
xchg
ss
xchg
cmp
sbb
out
push
mov
stos
outsl
iret
cmp
dec
subl
adc
fcompl
sub
sub
push
nop
lahf
add
test
mov
popa
xchg
xor
addr16
subb
mov
fdivrl
rcl
out
xor
mov
sub
jo
les
fwait
or
movsl
jne
mov
rol
and
or
sub
xor
xchg
add
or
and
iret
inc
jl
popf
loope
in
scas
cmpsl
jnp
mov
mov
adc
enter
push
arpl
imul
lret
ja
roll
cmp
aas
aam
dec
sub
lret
stc
js
dec
inc
cmpl
fldl
push
mov
mov
sub
jge
mov
popf
stos
lahf
sbb
rcrl
or
dec
cmpsl
shr
push
sbb
inc
inc
xchg
push
lret
sbb
or
lds
insb
push
inc
push
test
out
mov
bound
test
jecxz
fstl
pop
pop
in
stos
xchg
psrld
lcall
cmp
in
jge
inc
popa
inc
rclb
loope
fisttpl
jg
lahf
pop
mov
in
std
push
mov
in
nop
push
repnz
sbb
shrb
clc
cmpsl
push
sub
rcr
lock
pop
mov
push
sti
stos
dec
test
or
sbb
lds
xchg
mov
lock
sbb
pusha
aam
push
repnz
fdivrs
xor
data16
test
or
popf
fmul
je
insl
lret
xor
loope
in
xor
aaa
add
jns
pop
sbb
sub
test
cli
xchg
push
mov
adc
test
test
mov
xchg
mov
and
push
xor
loop
out
stos
lret
shrb
mov
daa
push
xchg
fldl
enter
roll
rorl
and
inc
mov
dec
inc
rolb
addr16
gs
adc
test
xor
lock
xor
mov
rorb
sbb
mov
sub
jbe
fdivs
mov
out
sti
xchg
push
xor
cmpsl
test
dec
add
loop
dec
lock
insb
mov
cmpl
sub
or
inc
sub
arpl
jp
in
out
jle
stos
std
outsl
outsb
push
dec
stos
xchg
xorb
push
push
les
lcall
dec
inc
ljmp
and
fs
out
inc
or
push
lods
inc
scas
inc
fwait
or
aaa
cltd
mov
and
daa
pop
cmp
dec
cltd
lock
js
shll
or
and
stos
negb
jge
sbb
sub
fsubs
cwtl
nop
loop
lret
jmp
add
outsl
sbb
loope
cld
or
adc
into
mov
inc
adc
add
add
je
and
arpl
rorl
scas
push
push
lahf
scas
xchg
test
sarl
fisubs
cli
adc
push
mov
outsb
mov
xchg
mov
pop
in
jns
repz
mov
popa
loop
ds
mov
jp
jl
notb
pop
push
jle
jne
in
das
rcll
mov
notl
loopne
bound
and
cltd
aam
mov
jbe
rorb
mov
adc
add
ja
in
xor
cmp
outsl
jecxz
int
or
sub
mov
xor
jmp
mov
mov
xor
jge
jbe
pop
into
push
pop
cltd
test
jg
adc
sti
add
ror
mov
jmp
jle
jl
movsl
jbe
flds
loop
push
jmp
sub
repnz
mov
cwtl
mov
push
mov
dec
sbb
addr16
test
sbb
mov
mov
stos
mov
std
add
jl
aam
loopne
and
jl
mov
sbb
mov
cwtl
cmp
xor
and
mov
jns
iret
xor
testl
lcall
in
pop
hlt
cmpsl
fbld
ja
xchg
or
push
push
jb
lock
jb
inc
test
sti
lcall
dec
lods
jp
cli
out
scas
jmp
cli
dec
sbb
imul
jne
xchg
lock
test
fildll
mov
dec
xchg
pop
test
pop
aam
push
sbb
les
xlat
ret
lret
xchg
sbb
mov
xchg
gs
addr16
xchg
jmp
adc
cmp
shl
sub
pop
inc
mov
shll
cmpsl
push
mov
xchg
or
xor
push
or
push
repnz
inc
add
mov
ds
mov
sahf
fwait
xchg
push
jecxz
push
xor
xchg
loop
jp
and
dec
scas
shrb
mov
decb
jp
lock
cwtl
jmp
testl
mov
movb
pop
in
and
lock
aaa
shr
std
mov
out
jae
xor
jge
dec
call
lds
aam
push
pop
arpl
dec
jno
mov
and
andb
mov
and
cmp
hlt
push
dec
sbb
adc
jo
xchg
fdivrs
mov
into
sub
cmp
adc
xor
adc
out
cmpsl
das
and
scas
movsl
stos
mull
mov
sahf
fidivl
mov
dec
pop
sbb
xchg
mov
fcoms
sbb
jbe
mov
stos
dec
ja
int3
adc
pop
ds
mov
mov
push
enter
aad
fidivrs
je
xchg
repz
xchg
jbe
int3
lret
cld
jo
popa
fstps
sahf
xchg
mov
or
popf
adc
jne
jge
jae
imul
ja
test
ret
outsl
pop
insl
mov
dec
xorl
lret
mov
aaa
mov
pop
lods
dec
rolb
lahf
lret
sbb
xor
dec
xor
cmp
lahf
or
pushf
pusha
out
jns
inc
inc
lahf
fildl
mov
jo
hlt
jl
push
fisubl
or
int
imulb
push
lods
or
and
ret
popf
add
xchg
xchg
cltd
or
outsb
stc
dec
mov
xchg
xchg
arpl
das
adc
rcl
adc
and
dec
loop
loopne
xlat
call
pushf
lods
add
aas
arpl
fadd
fst
push
lods
mov
pop
jg
xor
loop
dec
pusha
roll
xor
rclb
sub
scas
leave
in
stc
cmp
rcll
adc
cmp
push
cmpsl
lcall
test
jg
sub
mov
lea
test
dec
pop
jns
clc
xor
out
std
xor
insb
push
push
jns
sbb
je
or
int3
or
fcos
in
fsubs
fildl
mov
add
jae
enter
sbb
or
lock
mov
enter
shll
movsb
inc
jo
bound
cli
pop
fsubr
repz
jge
js
mov
push
xchg
xor
mov
inc
decb
insl
jge
in
inc
rolb
adc
sbb
stc
jl
pop
lods
xchg
fcmovu
clts
popf
sbbl
mov
dec
and
sarl
pop
lods
jp
rorb
or
call
subl
nop
iret
lock
lock
cld
push
addr16
and
outsl
das
fidivrl
scas
jns
fsubr
aad
in
jge
sub
mov
dec
stc
int3
mov
mov
add
pop
push
mov
inc
dec
pushf
inc
clc
fcoml
jns
adc
es
xor
mov
sti
sbb
std
mov
dec
pusha
mov
dec
idivl
pop
fcmovbe
fs
jne
sahf
insl
bound
in
in
mov
inc
call
sub
ror
sub
mov
jg
jne
or
arpl
mov
les
iret
push
data16
lret
pop
shll
dec
rorl
mov
data16
lret
xchg
mov
int
movsb
test
mov
out
ds
jl
mov
jne
mov
loope
repnz
or
cli
nop
sub
fs
mov
add
xchg
cmp
xchg
loop
push
daa
adc
mov
xchg
leave
cmc
xor
sub
mov
sbb
test
int
ds
mov
jnp
es
sti
test
cmp
nop
dec
lahf
sub
pop
push
popf
loope
adc
mov
and
pusha
push
cld
sbb
fiaddl
aam
xchg
int
xchg
cltd
dec
call
out
decl
push
adc
cmp
push
fcoms
movsb
idiv
adc
dec
xchg
loope
sarl
aas
movsl
lods
mov
dec
rorl
stos
mov
mov
dec
jbe
lret
out
fwait
mov
push
inc
lcall
push
mov
sahf
test
vcvtsi2sdl
mov
cmp
aad
mov
jne
scas
ret
and
cltd
aas
mov
mov
sarl
sub
jp
jp
inc
pop
sar
jge
mov
icebp
or
loopne
mov
aad
pusha
push
xchg
cmpsl
xchg
test
ds
adcl
push
stos
xchg
mov
filds
push
nop
nop
cmp
ljmp
cmpsl
mov
xchg
fbld
daa
sbb
sarl
ss
pop
sub
sahf
xlat
jbe
cmpb
out
lcall
leave
inc
lret
mov
sub
xchg
dec
pusha
out
sti
in
mov
into
fdivl
push
shlb
test
movsb
sub
mov
push
cld
cmp
mov
call
push
aam
out
mov
sahf
jmp
sub
std
xor
jecxz
pop
pop
in
sbb
aaa
fdivl
jp
jne
pop
nop
call
xor
imul
mov
mov
lea
xlat
sub
xor
mov
enter
jle
cmpsl
arpl
mov
shlb
xor
int
test
xor
push
mov
or
fucomi
dec
dec
cmp
inc
inc
mov
mov
imul
cmp
jnp
pop
sbb
push
add
fs
pop
or
dec
sbb
ret
imul
nop
sahf
aam
ror
jmp
fst
xlat
icebp
mov
loop
int3
sub
mulb
insl
ficoms
sub
push
inc
nop
out
scas
ljmp
shlb
cmpl
icebp
mov
pop
rol
push
jno
mov
je
mov
in
push
jo
adc
outsl
das
mov
scas
lcall
test
pop
and
jae
adc
les
arpl
movsb
loop
shrl
or
push
arpl
je
subl
comiss
lret
je
inc
mov
into
sahf
loopne
mov
imul
movsl
aam
or
pop
shlb
fbstp
js
sbb
jle
jl
lods
mov
jle
push
iret
xchg
add
cmp
idivl
stos
xchg
mov
xorb
cmp
mov
in
push
xchg
pop
adc
lea
dec
sbb
xchg
scas
mov
dec
mov
cltd
ret
mov
hlt
das
adc
orb
sbb
outsl
push
and
pop
sbb
pop
shl
cmp
sti
xchg
test
jl
imul
adc
add
mov
push
sbb
jnp
fwait
daa
ss
push
inc
dec
dec
sarb
mov
dec
dec
mov
xor
std
jbe
push
cmp
mov
dec
pusha
imul
sbb
xor
scas
and
jg
dec
pop
inc
pop
shll
fs
mov
mov
imul
rorb
into
pop
jge
sbb
xchg
data16
pop
mov
push
add
or
add
mov
in
add
out
mov
mull
repnz
add
inc
sub
mov
add
mov
aam
ret
dec
adc
scas
subl
insl
pop
rol
and
test
xchg
mov
in
xchg
scas
das
repnz
add
sbb
mov
mov
js
mov
inc
cmp
enter
inc
mov
fmull
cmpsb
adc
dec
mov
js
mov
out
imul
or
cmpsb
xor
filds
adc
repnz
andl
shr
outsb
imul
jmp
sbb
insb
jmp
in
or
cmp
je
in
data16
mov
and
test
setge
jmp
xor
out
fbld
arpl
pop
test
addr16
mov
and
test
mov
jle
out
push
or
push
aad
sub
int3
adcb
mov
push
faddl
cs
xchg
mov
push
pop
call
aad
add
fldt
sub
mov
fisttpl
mov
mov
push
inc
push
mov
daa
xchg
subb
or
leave
sub
scas
fmull
adc
mov
adc
push
jno
mov
inc
adc
push
les
and
jg
xor
lahf
adc
enter
inc
test
fldcw
enter
and
pop
shll
fs
out
ret
xorl
aaa
in
or
dec
notl
push
std
in
fsubs
out
gs
inc
or
rclb
jl
sub
gs
mov
jmp
test
adc
lret
xchg
int3
cmp
push
in
test
sub
pop
test
cltd
outsb
push
jge
fmuls
insl
mov
mov
or
lods
loope
repz
and
stos
sti
neg
push
xor
inc
mov
shrb
subl
cmc
lret
cwtl
cmpsb
dec
es
xor
je
inc
lock
fdivr
jecxz
sub
sub
les
push
test
bound
cltd
xor
andl
jo
movsl
sbb
loop
adc
add
mov
pop
or
sub
arpl
fists
sbb
test
sub
mov
jg
lds
pop
pop
fsubl
mov
xchg
stos
cmpsb
inc
fisubl
sub
fadds
pop
mov
movsl
lds
test
pop
shlb
xorl
mov
sahf
cmp
inc
loope
imul
clc
sbbl
pop
or
mov
sub
pop
cltd
pop
aas
idivl
xor
add
xor
in
sub
add
pop
push
cmc
sbb
mov
inc
addr16
and
jge
sarb
mov
fmuls
push
sub
insb
inc
out
out
aam
inc
push
mov
jo
mov
xchg
jbe
aas
fidivl
adc
scas
int3
adc
xchg
call
or
push
ja
mov
testl
jns
out
out
clc
mov
push
adc
sub
lods
push
cmp
push
jge
ja
sbb
mov
pop
das
push
xor
jae
test
ret
shll
test
and
shl
popl
jnp
insl
sbb
flds
xchg
cmp
daa
xchg
fwait
ljmp
inc
data16
adc
pop
mov
mull
pop
pop
fstl
pop
jne
lods
adc
sub
movsb
lods
aam
cmpsl
mov
cs
dec
pop
lret
push
jmp
dec
loop
cmpsl
and
sti
cmp
mov
ret
cmp
cmp
and
ret
clc
decb
lret
push
addr16
push
and
es
int
insb
cmp
xchg
xchg
adc
dec
fisubrs
popa
xor
xchg
xor
add
dec
enter
call
inc
xchg
loope
repnz
mov
xlat
nop
xor
es
jmp
fimuls
pop
push
mov
iret
dec
scas
aas
jb
mov
xchg
aad
pop
mov
pop
adc
leave
hlt
xor
mov
dec
mov
out
aaa
arpl
jo
fs
inc
popa
jae
test
adcl
adcb
outsb
adc
mov
mov
add
repnz
or
mov
adc
dec
xchg
fidivl
in
pushf
push
add
fisttps
mov
add
fcomi
push
fsubrl
stos
into
or
mov
mov
or
inc
inc
xor
jnp
xchg
push
nop
xchg
xor
addr16
mov
lock
cmp
mov
das
fnstenv
cs
in
rclb
ja
pop
sub
cmp
addr16
mov
cmp
dec
mov
sub
mov
fisubs
cmp
jecxz
ret
pop
adc
or
sbb
cmc
mov
les
cmp
sti
cmp
dec
sub
and
inc
sub
cmp
jecxz
mov
sbb
xor
fistpl
aad
inc
add
ret
hlt
stos
pop
hlt
jb
adc
sub
andl
jmp
xchg
or
aas
in
rcl
adc
insl
jo
inc
xorl
sbb
xchg
or
cli
inc
jl
insb
es
fsubs
dec
jno
jmp
adc
sub
jno
cmp
stc
clc
pop
test
scas
cmp
fdivrs
repz
mov
cmp
js
loopne
xlat
imul
cs
fidivrs
cld
and
paddw
leave
stc
jno
loope
and
dec
imul
xchg
mov
test
push
lret
add
dec
enter
lret
adc
mov
call
popa
xor
out
mov
sub
mov
or
movsb
jb
jnp
addb
mov
jae
push
outsl
lret
loop
cmp
cli
sbb
inc
movsl
sbb
adc
sub
into
add
nop
rcrb
inc
ficomps
push
in
dec
divl
mov
in
mov
xchg
lock
ja
movsl
mov
repnz
filds
and
stos
test
inc
jmp
fldenv
or
adc
dec
or
xor
sbb
imulb
cmp
pushf
icebp
mov
push
cwtl
sbb
repnz
pop
mov
repz
mov
aas
mov
pop
dec
jbe
mov
mov
leave
out
mov
negl
sbb
cvtdq2ps
jmp
xchg
loopne
mov
xor
out
mov
sbb
inc
adc
xchg
sbb
in
dec
adc
sub
pop
repz
dec
ja
pushf
pushf
xchg
insb
and
stos
test
jns
imul
push
adc
cmp
xor
pushf
imul
das
dec
mov
mov
jg
add
test
pop
inc
or
mov
sbb
aas
inc
mov
pop
lret
loop
cwtl
push
xchg
mov
sbb
mov
adc
lahf
dec
xchg
xchg
mov
stos
push
std
adc
push
push
repz
leave
mov
and
inc
bound
adc
xor
sbb
out
ljmp
and
pop
dec
pop
jmp
fcoms
dec
fsubs
cli
gs
aad
pop
xchg
cmp
data16
jecxz
pop
xor
pop
cs
std
mov
insl
jge
jmp
pushf
cmp
xlat
or
sub
xor
jno
xchg
cli
and
xor
adc
dec
jb
cltd
notl
push
jo
add
js
shlb
mov
jbe
inc
stc
jg
imul
fcmovu
push
sbb
mov
negb
add
cmp
repnz
sbb
loope
jge
mov
cmpsb
mov
xchg
adc
xchg
push
test
mov
push
dec
jae
jge
mov
ss
jg
lahf
lods
jp
pop
jns
notl
mov
ret
mov
lret
adc
pop
inc
xlat
or
mov
imul
push
pushf
inc
insb
lods
lods
cmpsb
fidivrs
sub
pusha
dec
sub
sub
shrb
int
into
shlb
imul
cli
icebp
js
loope
push
outsl
movsl
loop
xorl
jns
rcll
add
mov
ficoms
sbb
mov
negl
adc
inc
lahf
mov
xchg
jns
cmp
sub
jecxz
lahf
adc
mov
insl
jns
imul
or
sbb
mov
xor
arpl
fsts
loope
inc
dec
jecxz
xor
cli
lret
scas
jno
hlt
xor
jle
flds
dec
inc
xor
pop
mov
cs
mov
lahf
out
push
sub
mov
adc
and
pop
sbb
out
push
lds
iret
imul
mov
jnp
jp
mov
sbb
push
arpl
dec
mov
sub
es
push
add
or
andl
pop
xchg
dec
inc
mov
xchg
inc
mov
mov
mov
lcall
xor
test
inc
gs
test
lahf
int3
roll
fsubp
iret
jg
xchg
or
arpl
pop
clc
inc
adc
or
orb
cmp
xchg
sub
cmp
sbb
mul
repz
jg
rcrb
imul
insl
mov
or
rol
mov
pop
daa
jnp
lcall
fiadds
jl
scas
sbb
mov
movsb
test
daa
test
mov
pop
outsb
in
addr16
push
xchg
dec
lods
enter
xchg
fidivs
dec
cmp
sahf
push
dec
aad
mov
sub
rorl
inc
movsl
xchg
stc
mov
or
les
sahf
and
add
xor
and
fisttps
mov
lahf
push
pop
pop
scas
mov
and
int
add
mov
sbb
push
das
add
sbb
fyl2x
in
in
fadd
xor
jge
ds
in
ljmp
in
fdivrs
xchg
mov
or
sub
loopne
rcrl
nop
test
mov
dec
rcrl
out
jo
enter
outsb
jle
mov
pop
es
mov
adc
dec
enter
es
fcompl
sbb
xchg
outsl
xor
xlat
pop
aad
nop
cmp
cmp
jns
mov
notb
cmpsb
and
dec
jecxz
pushf
andl
loope
call
push
movaps
pop
in
out
enter
pop
cmp
mov
out
out
rcrl
mov
out
or
mov
xchg
dec
sub
ret
shll
push
pop
nop
push
mov
dec
cmp
sub
xor
sub
mov
lret
pop
int
aas
out
scas
mov
dec
dec
rorl
lahf
fdivrl
mov
movsl
and
sub
popf
aas
in
add
ss
ror
in
aas
clc
ljmp
jae
test
sbb
mov
negb
pop
cmp
inc
fucomp
mov
ret
adc
inc
shlb
dec
jge
add
cli
imul
inc
idiv
xchg
ret
scas
fldcw
xchg
mov
out
mov
sub
cs
test
add
hlt
out
int3
add
mov
enter
mov
popf
lds
ror
cmp
mov
push
cmpsl
push
jle
xchg
push
mov
out
adc
sbb
stos
sub
nop
and
jno
stos
cmp
stos
adc
jp
int
sub
adc
or
mov
pop
ds
dec
xor
sbb
stc
or
dec
cmp
xorl
mov
add
push
sub
mov
faddp
cmp
pop
es
cltd
add
adc
rclb
fidivl
and
je
inc
ret
fdiv
lods
cmp
mov
andl
std
mov
outsb
jmp
repnz
sub
loop
dec
cld
loope
lahf
testb
push
mov
stos
jb
mov
jo
push
inc
ss
cs
push
xor
sbb
sub
or
popf
cltd
es
rclb
adc
mov
sbb
data16
scas
mov
mov
cwtl
call
dec
push
xchg
adc
addr16
gs
arpl
lods
push
mov
out
pop
outsb
out
sub
addr16
add
jae
ss
pop
cs
sahf
stos
stos
mov
adc
pop
cmpsb
adc
into
and
ffree
xor
xchg
shl
mov
xor
pop
adc
in
mov
fwait
into
cmp
test
rcrl
inc
and
pop
push
inc
xchg
add
int3
xor
jo
xchg
aam
add
and
shlb
add
xorl
pop
xchg
inc
pop
push
or
mov
fwait
add
aas
sub
push
mov
pop
xchg
mov
jge
jbe
jo
mov
jge
ss
mov
xchg
fimull
pop
cwtl
movsb
xor
jno
cs
sub
and
and
mov
cmp
adc
sub
xchg
test
call
xorb
sbb
lret
imul
std
jnp
jne
push
lock
repz
ss
dec
sbb
jae
mov
mov
sarl
or
xchg
xlat
ja
mov
lcall
dec
mov
adc
jb
pop
scas
cmpsl
sbb
pop
movsb
ret
jnp
idivl
add
test
lds
movsb
and
dec
repz
enter
popf
or
sbb
lods
xchg
or
scas
fiadds
leave
iret
jo
js
push
outsl
cs
jno
add
notb
cmp
decl
add
data16
or
or
push
ds
loop
jmp
pop
popa
ljmp
cs
xchg
mov
cld
adc
or
arpl
push
jb
and
aas
in
fildll
dec
cmp
mov
je
pop
test
mov
xchg
icebp
adc
push
rcrb
sbb
testb
scas
xor
popa
sbb
mov
lret
inc
adc
push
test
and
jb
dec
arpl
pop
sbb
push
pop
and
sub
inc
sti
jecxz
sbb
cld
jp
int
add
sub
aam
std
movsb
push
push
int3
and
inc
dec
push
cltd
jmp
pop
cli
mov
mov
stos
ds
movsb
xchg
jge
sbbl
pusha
push
push
xchg
jmp
cs
ss
mov
sub
out
mov
adc
mov
sahf
sub
push
jae
test
jno
sub
fstpl
loope
adc
sub
and
imul
mov
xor
lret
rclb
sbb
pop
push
or
movsl
movsb
imul
cmp
xchg
push
adc
push
dec
mov
movsl
out
inc
mov
cmpsb
or
rcrb
daa
cs
push
push
aas
adc
adc
shl
sbb
in
fs
sahf
xor
insb
inc
cmp
subl
jle
or
mov
test
int
cmp
loope
xchg
mov
sbb
ret
jae
aad
data16
or
mov
cmp
mov
push
call
popf
sub
mov
add
push
cmc
and
mov
dec
mov
jl
test
inc
dec
pusha
faddl
mov
mov
pop
pusha
clc
loop
pop
inc
jne
ja
xor
es
enter
fldl2t
outsb
jo
mov
dec
sbb
in
cmpl
loopne
pusha
mov
outsl
sub
sbb
popa
push
dec
jl
xchg
jmp
add
push
fcmovu
or
sub
fisubs
aad
xchg
pop
jle
xlat
push
xchg
sbb
jg
test
das
dec
test
rcrb
inc
rclb
sbb
cmp
and
jns
lcall
push
push
mov
fwait
mov
jp
out
and
aaa
and
mov
dec
mov
fisubs
popa
cwtl
mov
lods
iret
jg
cli
add
pop
mov
xchg
pop
cmp
scas
in
stos
and
out
adc
jb
jb
pop
movsb
push
cwtl
les
or
dec
pop
ret
and
add
and
sbb
in
jp
fmuls
mov
ds
rorb
sahf
jg
mov
dec
das
mov
or
cli
stos
mov
adc
jecxz
add
adc
outsb
rcll
popa
xor
das
jg
xchg
icebp
xchg
lcall
sbb
mov
jae
dec
inc
dec
sbb
out
shll
cwtl
pusha
xchg
lds
test
mov
pop
adc
jnp
lahf
push
imul
xor
imul
dec
inc
cmp
lret
shlb
jmp
xchg
mov
outsl
pop
cs
test
std
in
aaa
inc
jne
ja
test
lods
push
imul
xor
jp
push
arpl
push
das
fisttpll
or
loope
jl
das
fisubrl
adc
sub
xchg
lods
fnstcw
dec
lcall
fcompl
and
lret
icebp
cs
and
sbb
test
pushf
inc
rcrl
jae
js
pop
mov
xchg
insl
fstp
movsl
sbb
lods
add
out
popa
stc
push
rolb
repz
loopne
pop
jno
adc
mov
dec
and
stos
into
mov
movsb
adc
inc
lcall
iret
scas
sub
jnp
xor
adc
mov
dec
push
xor
test
xchg
shll
pop
outsb
iret
movsb
dec
data16
movsl
fadds
cmp
dec
sbb
mov
lds
mov
and
andb
les
xor
cmp
sbb
shrb
adc
add
push
mov
jg
mov
mov
jne
xchg
adc
jge
mov
pop
inc
stos
decl
cmpsl
and
or
popa
clc
lret
mov
or
jo
test
loope
subl
sbb
nop
cmp
sbb
data16
pusha
pop
repz
ret
pop
popf
jmp
sbb
cmp
mov
mov
fwait
xorl
in
and
xor
sub
es
mov
sbb
mov
or
add
push
dec
in
xchg
out
mov
nop
imul
pop
push
push
and
stos
test
sbb
cmc
dec
and
test
loope
sbb
out
outsl
adc
mov
dec
cmp
adc
daa
adc
popf
aas
lock
fists
lods
sub
stos
mov
xor
clc
xchg
loopne
sarl
pop
clc
sub
sbb
sub
jbe
adc
iret
out
testb
in
push
or
pop
mov
add
adc
sbb
imul
call
cmp
shrb
inc
mull
cmp
fcmovnb
mov
xorl
adc
dec
cmp
stos
fdivrs
ljmp
cs
sti
lret
cwtl
sub
imul
jae
mov
xor
mov
or
or
mov
aas
sub
xchg
aad
xor
std
inc
lods
into
pop
aam
testb
sbb
aas
sti
movsl
sarb
das
xor
repz
nop
mov
xchg
xor
inc
cmpsl
cmp
scas
fstp
iret
out
lds
xor
xchg
push
inc
add
pop
push
cmpsl
rorl
fdivrp
aam
push
adc
ds
xchg
or
jae
xchg
shrl
jnp
mov
sbbl
repz
xor
lods
fimull
aam
imul
ja
shl
push
imul
lahf
mov
push
xchg
adc
popa
in
sub
in
fidivl
dec
lea
fistpll
mov
into
push
mov
das
and
jmp
out
adc
in
insw
cmp
je
loopne
xor
sub
xor
xchg
xchg
lods
call
inc
fstl
shll
push
sub
mov
daa
xchg
cmpsb
jnp
jecxz
loope
lea
or
insb
add
mov
push
jae
xorl
adc
icebp
push
insl
push
bound
mov
lods
sub
sbb
inc
popa
ficoml
hlt
xchg
mov
loop
stc
pusha
orl
sub
add
insl
dec
pop
lods
sub
clc
mov
mov
mov
mov
ljmp
jae
dec
movl
xchg
test
inc
cmp
add
mov
pop
clc
fldenv
mov
jg
sub
rorl
insb
dec
jno
adcl
sbb
mov
je
mov
jle
cmp
push
jmp
add
mov
sub
adc
call
pop
loopne
pushf
fsubs
ss
daa
mov
js
inc
lock
popf
jle
or
sub
loope
cmp
mov
cmp
lds
std
jge
and
call
push
dec
mov
inc
rcl
lea
jl
dec
in
and
cmp
dec
jmp
movb
adcl
xchg
pop
adc
cmp
xlat
add
sbb
cmpb
jecxz
xor
adc
add
mov
mov
or
imul
les
out
js
mov
xorb
dec
pusha
mov
cltd
add
push
xor
pop
data16
or
jno
addl
rcll
cmc
out
xor
push
faddl
idivb
cmp
xchg
in
xchg
xchg
or
test
or
mov
call
push
lret
or
andb
insl
repnz
mov
aaa
daa
xchg
xchg
xor
popf
out
mov
jb
adc
jge
imul
test
cmpsb
gs
out
xchg
pop
faddp
divl
fcmovb
idiv
push
mov
pop
popa
adc
or
call
cli
xlat
data16
popa
in
mov
movsb
hlt
sub
addl
or
in
xor
sbb
mov
sarb
adc
push
dec
or
les
leave
scas
out
jb
sub
in
mov
mov
scas
test
jecxz
sub
add
push
orb
int3
test
xor
insb
dec
lock
outsb
fisttpl
and
mov
insb
dec
js
pushf
mov
in
and
sbb
sarb
iret
test
jl
mov
les
rorl
mov
jmp
movsb
scas
lock
mov
dec
test
fisttps
mov
lods
pop
push
jno
or
xchg
cmpsb
mov
jl
xor
pop
mov
rcrb
cmp
mov
fdiv
adc
cmpps
dec
push
sti
adc
cmp
sbb
mov
push
jmp
das
cwtl
call
lods
inc
orl
xchg
faddl
mov
repnz
pop
pop
mov
push
loope
pop
and
xor
das
mov
adc
and
mov
jle
push
ljmp
ret
adc
fisubrl
xlat
repz
mov
test
sbb
movsb
int
mov
mov
mov
sub
mov
or
mov
inc
pop
stos
cwtl
or
cs
cwtl
xor
cmp
cmp
sub
pop
insl
ret
sbb
dec
popa
loop
mov
loope
push
je
xchg
xchg
push
mov
or
fimuls
lret
jns
movsb
mov
lret
mov
in
out
mov
outsb
adc
rcrl
mov
insb
mov
dec
in
aas
or
cld
data16
ds
mov
push
inc
ret
hlt
les
sub
xchg
sbb
fisttpl
pop
mov
lea
imul
adc
insl
jecxz
dec
xor
mov
inc
xor
jae
iret
xchg
or
mov
lds
repnz
fidivrs
xor
lods
insl
shlb
cmp
cmp
sub
pop
mov
adc
jp
xor
lret
pop
lahf
pusha
dec
ds
aas
or
xchg
or
push
inc
popa
cs
xor
dec
xorb
lcall
loopne
lcall
rcrb
pop
imul
dec
jle
sbb
out
adc
and
mov
data16
mov
push
aam
mov
pop
jns
subl
inc
dec
add
loopne
dec
dec
data16
push
lcall
pcmpgtw
lcall
shl
fisubl
adc
add
mov
jne
loop
scas
xchg
enter
push
jmp
mov
cmc
inc
out
push
sarl
leave
or
orl
std
mov
jg
rcll
data16
cli
test
shrl
adc
inc
inc
cs
jb
xchg
pop
sbb
clc
mov
pop
inc
cmp
mov
push
repnz
icebp
push
xchg
cmp
and
jne
adc
push
pop
loopne
jl
loopne
repz
movsb
lds
ja
pop
adc
mov
mov
filds
cld
jge
dec
push
sub
test
scas
mov
lock
cmpsb
xchg
rorl
ljmp
lahf
fstps
rcll
arpl
hlt
ja
daa
xor
fwait
add
test
or
pop
js
add
test
mov
dec
push
xor
or
mov
test
cmp
push
mov
jp
outsl
jne
mov
cmp
and
in
cmpsb
mov
aam
call
pop
cltd
rol
or
and
or
mov
std
mov
sub
xchg
jne
lahf
mov
xchg
sub
mov
aas
pop
sub
sbb
rclb
pusha
mov
aad
dec
xor
jno
mov
popf
lds
shr
mov
cmpsl
adc
add
imul
cltd
mov
pusha
and
pushf
mov
outsl
fsubr
jno
ja
repz
push
sbb
dec
test
sbb
enter
push
testl
sbb
or
cmc
and
add
stc
cmp
add
imul
inc
divb
dec
stos
fcoml
add
and
aaa
adc
negb
lahf
lock
loopne
pop
idivb
outsb
rcll
sbb
xchg
aas
divb
mov
push
adc
outsb
dec
sbb
lcall
dec
mov
inc
pop
mov
dec
sbb
mov
das
jmp
xor
mov
cmpsl
scas
mov
das
dec
push
scas
jle
rcrb
push
dec
out
inc
pop
fpatan
cmp
mov
push
sbb
arpl
inc
cwtl
ret
xchg
faddl
jnp
mov
loopne
mov
aam
and
jg
je
test
in
stc
cs
lret
out
lock
inc
sahf
bound
dec
or
push
in
mov
mov
rcl
imul
push
add
xchg
pushf
fistps
stc
stos
out
mov
scas
cmp
add
fcompl
imul
dec
add
insb
dec
popf
adc
inc
sti
imul
aam
xchg
mov
or
sub
xor
jecxz
lret
or
pop
and
daa
into
mov
mov
out
xchg
or
push
adc
rcll
rcrb
or
loope
into
pop
ja
rcrb
push
aad
adcl
fcom
mov
xor
test
imul
es
pop
mov
pop
dec
fbstp
sahf
adc
cli
sbb
sbb
out
in
ljmp
fmul
hlt
add
cmp
inc
jne,pt
mov
outsl
dec
push
xchg
out
sbb
sahf
mov
lds
inc
add
push
add
or
cmp
jo
mov
jecxz
inc
xor
pop
cmpl
pop
add
jbe
jle
cmc
cs
fildl
mov
sarb
lods
in
into
mov
test
mov
mov
mov
xor
xchg
lret
sahf
mov
xor
and
js
repnz
jg
fisubs
push
mov
adc
sbb
sbb
fadd
fidivrl
cmp
imul
mov
into
pop
xchg
out
add
fdivrs
lock
rcr
testb
jle,pn
push
add
mov
push
dec
subb
mov
cmp
fucom
enter
loopne
or
pop
mov
pushl
sbb
shl
push
sti
xchg
sbb
daa
mov
mov
cwtl
xor
cmpsb
adc
mov
mov
outsl
jo
sbbb
rorb
movsl
push
jne
cmp
faddl
xor
in
pop
dec
or
jno
jecxz
icebp
lds
test
and
rclb
negb
inc
fcom
sti
imull
shr
cli
mov
xchg
dec
sahf
add
adc
cwtl
add
sub
pop
dec
pop
jno
sbb
jg
andl
push
xlat
mov
or
mov
add
test
jns
sub
push
cmp
xchg
cwtl
pop
sub
push
mov
pop
or
test
inc
mov
clc
pop
cmp
or
adc
and
sar
imul
sbb
pop
stos
push
sub
iret
add
inc
clc
jb
ret
cmp
cmc
call
or
sub
mov
test
imull
xor
xchg
je
lock
pop
sbb
movsl
mov
jecxz
and
xor
dec
test
xor
dec
fcom
lds
pusha
call
mov
sbb
adc
sbb
repnz
cli
popf
arpl
loopne
out
mov
dec
cmp
jbe
fimuls
add
mov
and
pop
pop
mov
int
jbe
pop
sub
mov
adc
xchg
push
inc
fisubs
aam
mov
dec
mov
mov
or
and
and
pop
xchg
bound
bound
jno
pop
add
adc
movsl
insl
outsb
pop
mov
shrl
push
sub
cmp
sbb
data16
sbbl
sub
inc
mulb
jmp
gs
mov
sub
js
cmpsb
scas
mov
and
pop
inc
mov
arpl
mov
shll
lds
xchg
add
out
movsl
ss
shll
lea
cs
negb
ficoml
dec
mov
push
lahf
dec
mov
adc
mov
in
imul
scas
loope
test
enter
aaa
sub
fnstenv
test
add
xor
and
xor
js
roll
ss
lods
sbb
inc
sbb
test
mov
sub
rcrb
jno
and
clc
pop
mov
sahf
pop
ja,pt
inc
fcmovu
lahf
jg
push
lock
sbb
mov
mov
jle
jecxz
mov
dec
pop
lahf
fimuls
pop
mulb
aas
jg
pop
inc
fsts
and
xchg
fucomp
nop
shll
cli
mov
mov
jmp
aas
push
xor
loop
fcmove
adc
jo
es
adc
push
rclb
js
or
sbb
loope
push
xor
into
mov
push
scas
mov
cli
sbb
ficomps
jmp
aad
movsl
ja
xlat
cltd
cmpsl
xor
add
jnp
out
inc
jo
or
addb
test
or
add
sbb
dec
or
and
into
xchg
movsl
adc
cmpsb
cmpsl
inc
inc
pop
fmuls
pop
jbe
jmp
or
sbb
xor
mov
or
inc
movsb
add
and
dec
js
lds
pop
push
fcmovb
pop
and
stos
jnp
mov
rolb
pop
push
xchg
xor
and
adc
movsl
call
lds
mulb
scas
push
ret
push
sub
cmp
xchg
ds
and
sti
dec
jns
and
mov
add
jns
inc
imul
mov
into
pop
pop
pusha
cmc
scas
rorl
mov
adc
dec
sub
ja
int3
mov
jns
xchg
xor
andb
mov
sbb
ret
in
dec
pop
outsb
mov
inc
mov
inc
xor
pop
fdivs
call
push
int
xchg
mov
ret
add
aaa
or
push
fadds
or
and
inc
movsb
dec
lret
inc
lds
inc
xor
int
inc
in
ljmp
or
dec
fisttps
sbb
stos
out
jno
pusha
sbb
sahf
and
aam
ja
push
ret
test
shl
mov
cmpsb
push
push
cli
std
hlt
xchg
add
xchg
or
or
psubq
movsb
pop
cmp
stc
mov
stos
ret
pop
inc
cmp
int3
and
sub
mov
fwait
mov
sub
mov
out
imul
push
xchg
jge
fimull
sti
add
in
push
lods
loopne
rcl
xlat
dec
mov
and
out
test
cli
lock
aad
pop
adc
in
cmp
pop
mov
test
jae
sar
dec
data16
repnz
jg
fcoms
push
movl
lret
lret
jns
loope
xchg
sbb
and
stc
xchg
or
push
fldpi
std
add
imul
inc
hlt
popl
je
inc
or
cmp
mov
mov
aad
cmp
cmp
dec
xor
sbb
cmpsb
aaa
insb
ss
jmp
jns
push
xchg
push
cmp
mov
lret
add
xchg
xchg
outsb
aad
adc
xchg
insb
fmuls
mov
pop
cmc
es
pop
and
or
jge
xor
notb
mov
dec
pushf
aam
dec
or
scas
out
aam
mov
int3
cmp
adc
jne
and
test
fwait
xor
imul
push
js
in
div
aaa
sub
sub
xor
popa
rclb
push
mov
imul
xor
xor
adc
xchg
pop
movsl
push
pop
sub
lcall
inc
mov
cld
loop
fdivl
andl
cmpsl
jecxz
sti
cli
lock
int
push
into
jp
gs
das
sbb
jae
leave
jge
stos
loop
pop
out
and
xchg
xchg
aaa
sbb
lcall
das
dec
lea
mov
bound
cmp
cmpsl
lods
pusha
test
clc
jo
movsb
cmp
hlt
mov
shrl
cmp
mov
add
mov
js
ret
arpl
xchg
fwait
xor
pop
mov
jl
sbb
cmp
test
psubusw
mov
mov
mov
jnp
iret
dec
add
out
push
cmp
jp
fsts
jb
aaa
fisubl
jnp
stos
xchg
dec
and
mov
bnd
jmp
aaa
out
dec
ljmp
mov
js
addl
popf
xor
test
mov
and
and
fucomi
sub
das
cmpsl
inc
and
not
leave
dec
loope
jne
fstl
xchg
aaa
or
mov
sub
mov
popa
mov
imul
rclb
mov
pop
daa
pop
roll
iret
fimull
rolb
or
bound
or
outsb
cmpb
aam
adc
pop
jecxz
xchg
cmpsb
jo
mov
mov
test
fisttpll
or
jmp
loope
mov
mov
push
push
fwait
lods
gs
inc
lea
leave
xchg
testl
ret
data16
inc
pop
jbe
pop
jo
pop
mov
mov
in
jnp
inc
fwait
push
icebp
enter
sti
repz
bound
call
test
push
inc
dec
xor
mov
dec
or
das
push
push
dec
cmp
mov
sbb
pop
sub
xchg
xorb
test
insl
aaa
jnp
stos
add
nop
sbb
and
xchg
sub
mov
sbb
mov
popl
cmp
sbb
jo,pn
call
movb
xchg
scas
adc
filds
cmp
mov
mov
and
hlt
cmp
testl
cmp
cwtl
mov
divl
add
sub
mov
lcall
mov
sub
mov
or
popf
das
add
xchg
pop
popa
jae
dec
and
xchg
dec
pop
and
data16
inc
and
cmp
pop
adc
push
xchg
lods
sbb
sbb
lods
aam
daa
aad
ffreep
jbe
jge
inc
xor
push
jle
mov
ds
shlb
mov
sbb
loope
cwtl
mov
xchg
add
iret
std
ljmp
ffree
pop
mov
pusha
push
push
xor
cltd
mov
fnsave
lahf
mov
or
scas
dec
adc
dec
cmp
test
cmp
lcall
pop
pop
sub
and
mov
adc
scas
inc
out
daa
and
mov
in
pop
sub
dec
and
insb
sub
movsb
fwait
fwait
sub
xchg
lret
in
mov
je
jbe
xor
adc
scas
std
mov
outsl
inc
test
out
dec
hlt
sbb
add
das
jmp
and
jns
cli
mov
dec
rorb
sbb
es
jne
push
add
out
mov
out
aad
xchg
inc
lods
out
insb
jae
push
sbb
sub
jbe
js
sahf
push
xchg
pop
push
clc
addl
or
int
push
push
iret
je
pop
jne
dec
ds
mov
sbb
mov
mov
cmpl
fldenv
mov
push
into
movsb
cld
sbb
inc
adc
mov
rorl
insl
inc
pop
rcll
push
testb
in
lods
into
mov
in
mov
xchg
mov
fcmovnb
leave
pop
or
mov
mov
xor
xorl
sbb
add
lods
cmp
scas
iret
xor
dec
pusha
lock
jbe
adc
repnz
dec
fcmovnb
and
idiv
pop
mov
mov
inc
xor
sbb
mov
xor
or
call
sbb
mov
mov
movsb
mov
sbb
dec
pop
jge
ljmp
dec
inc
int
je
adc
je
leave
mov
mov
je
fistpll
sbb
sbbl
xchg
xchg
adc
into
mov
jne
les
scas
sub
xor
lods
sub
mov
dec
inc
fildll
sbb
scas
mov
mov
lods
stc
adc
into
mov
dec
pop
mov
or
mov
add
shld
data16
lds
or
sti
pop
cmp
loop
outsb
aam
cmpb
ret
insb
bound
stc
insb
pop
push
dec
fwait
xchg
jae
aam
xchg
fiaddl
inc
jp
jnp
jb
roll
jbe
iret
sub
fneni(8087
cli
dec
inc
push
insb
cmpl
lcall
inc
bound
dec
adc
fistpll
clc
mov
xor
xchg
jecxz,pn
push
fs
pop
ficoml
test
test
add
fimuls
cmp
cmc
adc
xchg
cmc
dec
lods
push
mov
adc
add
cld
sbb
hlt
pop
addr16
test
xor
inc
dec
or
sbbb
xor
fisttpl
adc
sub
push
shl
popa
lret
out
into
inc
jo
fs
imul
rol
inc
inc
gs
in
stos
cmp
ja
aas
sub
jbe
lret
cmpsl
sbb
add
pop
sub
repz
fnsave
push
and
insl
xchg
addr16
xor
adc
adc
ljmp
add
mov
mov
add
push
pop
inc
sub
sti
or
jle
adc
enter
notl
adc
mov
clc
repnz
mov
jb
push
xor
pop
in
decb
loope
mov
in
pop
int
pop
xor
das
xchg
stc
fcoms
loopne
pop
xchg
pop
ds
scas
addr16
cmc
mov
adc
lods
outsb
jb
xchg
pushf
dec
nop
nop
xor
gs
or
fadd
dec
or
add
sbb
cmp
outsb
aam
jge
in
les
fdivl
xorb
fnstenv
test
adc
pushf
stos
jae
pop
sub
clc
in
xchg
lcall
pop
xchg
enter
xor
lods
inc
mov
imul
sub
ret
inc
cmpsb
dec
sub
push
jg
dec
shrb
aam
jge
lahf
push
out
mov
mov
mov
jne
aam
out
adc
mov
cwtl
sbb
add
cmp
xor
or
out
rolb
push
cmp
cs
sarl
lods
cmp
push
adc
cwtl
lea
pop
ret
sbb
test
pop
mov
inc
mov
popf
and
mov
xor
inc
cmpsb
mov
pop
pop
add
cmp
jecxz
xor
mov
in
sub
out
icebp
int
mov
fdivrs
mov
or
xor
sub
sahf
xchg
fwait
shlb
jl
cmp
inc
mov
aad
insl
lcall
pop
ja
push
arpl
dec
mov
push
mov
lret
imul
loop
aas
xchg
fsub
int3
and
jmp
sti
mov
xchg
mov
push
jecxz
flds
jns
dec
xchg
xchg
stos
stc
sub
repnz
or
stos
xor
inc
and
mov
jl
inc
push
testl
adc
jp
dec
or
mov
and
sahf
mov
insl
pop
mov
lahf
roll
sub
push
hlt
xchg
or
test
adcl
or
mov
arpl
icebp
and
and
and
stos
data16
cltd
ljmp
inc
jp
pop
das
pushf
push
fstl
lea
sub
sub
hlt
pop
call
pop
dec
xor
or
enter
fnstenv
dec
out
outsl
fbld
movsl
cltd
mov
mov
ret
popf
pop
int
or
pushf
aad
or
inc
cwtl
xchg
push
xchg
dec
data16
scas
mov
xchg
outsb
cwtl
les
je
mov
mov
xorl
or
icebp
xor
in
call
inc
push
lcall
rcll
adc
daa
xchg
aas
daa
test
stos
mov
test
shlb
ret
fmul
mov
or
nop
test
cmp
ja
mov
jle
test
push
cmp
or
leave
arpl
or
or
xchg
mov
leave
push
mov
popf
mov
int
jl
movsl
add
icebp
mov
or
dec
and
mov
sub
mov
xor
fwait
xlat
imul
insb
xchg
or
cmp
sub
fs
cltd
xor
mov
movsb
mov
pushf
and
in
mov
test
outsb
add
jmp
cmc
sbb
sub
shll
mov
loop
std
cmp
in
ja
das
jecxz
stos
scas
scas
adc
loopne
repz
repz
jg
mov
mov
leave
imul
fnstenv
mov
inc
adc
jl
outsb
shl
mov
cmpsl
rol
xlat
jge
inc
pop
imul
pop
stc
movsb
adc
pop
mulb
arpl
js
insb
rclb
or
std
jg
dec
in
xor
repz
jo
rolb
in
jbe
rcl
push
pop
push
push
repz
orb
aam
iret
outsl
cmp
cwtl
inc
cmp
das
pop
jne
test
or
inc
dec
jge
iret
cli
rcrl
pop
cwtl
rcl
cmp
and
jmp
scas
pop
out
shlb
push
xchg
aam
mov
push
xchg
mov
cmpsb
push
adc
pop
mov
sti
sub
clc
and
clc
enter
lahf
adc
lods
arpl
cmp
mov
pop
cs
pushl
or
jo
mov
mov
daa
push
xor
mov
cmp
xor
js
pop
xchg
or
mov
icebp
andl
jo
mov
push
mov
cmpsl
xchg
xchg
subl
mov
ret
fldt
cmp
pop
fisubrl
dec
fs
pop
add
jo
dec
andl
scas
add
jae
lea
push
in
add
loopne
pop
pop
pop
nop
push
push
ret
pop
pop
mov
je
mov
jl
out
mov
ret
faddl
repz
or
sub
xchg
cli
push
fisubs
jp
imul
es
fcoms
aad
adc
add
push
repz
mov
mov
call
ret
test
add
and
sub
in
mov
push
popa
popa
std
adc
ret
xchg
jg
stc
pop
and
dec
push
bound
pop
out
mov
call
dec
ljmp
pop
jne
clc
dec
xor
xor
ds
xor
fbstp
adc
pop
cwtl
xor
jmp
sbb
fs
mov
ret
pop
push
ss
dec
movsb
add
es
fldenv
push
and
add
fcmovbe
popa
loope
lret
mov
adc
push
xor
inc
mov
mov
cmc
xchg
dec
adc
sub
and
sub
fnstcw
loope
rcrb
push
jne
pusha
pop
test
test
es
add
xchg
add
addr16
ds
bound
mov
fyl2x
add
int3
out
pop
pop
cmp
repz
adc
pop
sub
in
mov
ror
fidivrs
or
and
imul
mov
adc
cmp
aam
movsl
jg
pop
jmp
mov
movsb
cli
pusha
insl
gs
arpl
xor
loope
icebp
hlt
xorl
push
cmp
call
cmp
xor
addb
mov
inc
xlat
pop
scas
nop
push
call
and
rol
pop
mov
jns
mov
and
lret
xor
mov
jbe
mov
out
ret
test
pop
imul
bnd
mov
dec
dec
rcll
lods
mov
add
sub
out
gs
enter
stos
iret
lcall
repz
fsubr
xchg
lods
imul
jns
jne
jecxz
sbb
xchg
push
outsb
sbb
je
std
fwait
sbb
push
lea
mov
imul
jo
fcomps
and
scas
cmp
and
mov
add
sbb
pop
sub
cwtl
lret
pushf
cli
sahf
jae
or
pop
lret
rcl
shld
jl
jb
inc
jle
or
cmc
adc
cmp
cmp
pop
jmp
sub
lcall
cmc
outsb
lods
xchg
stos
or
rolb
lret
xor
inc
fwait
cmpsl
pop
mov
jmp
mov
cmpsb
pop
aas
pop
dec
jge
loope
cmp
mov
xchg
adc
push
or
in
cld
out
jo
dec
jle
pop
test
and
fmul
push
repnz
outsb
and
cmpsl
sbb
mov
sbb
mov
stc
cld
gs
cld
das
ror
ds
mov
mov
punpckhwd
pop
add
das
sbb
cwtl
fildll
xchg
aam
bound
inc
ja
sub
dec
xor
or
stc
stc
rcrl
adc
fcoml
cmc
push
fnstenv
dec
in
mov
or
jg
test
cmpsb
jns
cmp
cmpsl
rorb
cmpsb
jno
cld
xor
cld
lods
mov
push
sub
xchg
std
cmp
ret
push
sub
mov
push
addb
jle
dec
push
mov
sub
mov
mov
stc
add
das
inc
outsb
jne
adc
arpl
fmull
jbe
test
pop
mov
test
dec
fcoml
adc
pushf
pop
and
or
mov
iret
out
add
leave
cld
dec
or
out
sub
test
and
test
ficoml
xchg
jp
lea
xor
mov
inc
es
push
out
enter
bound
add
cld
iret
js
stos
testl
imul
xchg
inc
aaa
jle
jo
sbb
in
and
push
and
and
cmp
xchg
and
dec
push
call
push
lods
or
std
adc
inc
sbb
icebp
subl
add
ds
jle
loopne
fistpl
inc
notl
shll
sbb
out
rep
and
lods
sub
jno
sbb
push
lret
out
fisttps
test
xchg
jne
shl
out
cmpb
push
fnsave
fdivl
cmp
sbb
std
sarb
mov
daa
xor
std
sbb
bound
pop
xchg
test
outsb
mov
jae
test
xchg
std
jp
gs
iret
push
mov
scas
add
jne
fisttps
mov
pushf
and
ret
aad
cmpb
lods
cmp
imul
cld
arpl
mov
cmp
add
or
in
and
dec
sub
call
mov
scas
adc
shr
data16
pop
sbb
cltd
stc
sahf
dec
es
icebp
stos
mov
push
cs
fidivl
popf
imul
or
xchg
mov
test
clc
sbb
jp
add
lahf
xchg
test
pop
sbb
or
bound
adcl
mov
popa
loop
mov
test
fwait
sahf
add
mov
repnz
mov
jmp
jne
popa
outsl
leave
pop
sbb
xchg
int
fimuls
fists
inc
and
cmp
int3
insb
pop
out
mov
mov
dec
popf
pop
and
arpl
mov
push
inc
jle
ret
adc
xchg
inc
mov
mov
cltd
adc
aad
orl
in
in
add
out
fdivrs
clc
stos
push
xor
cmpsb
popf
call
push
test
jnp
nop
dec
std
sbb
jae
fimuls
loop
sbb
cmpl
bound
and
fcoms
jmp
pop
aam
out
test
jne
pop
push
xchg
cs
test
repz
aas
loope
in
sbb
sub
fildl
aad
xor
dec
cmpsl
rcrl
or
push
lret
aas
push
hlt
cltd
mov
lock
and
push
dec
out
testl
jg
mov
or
mov
and
cmpsl
insb
incl
sbb
xor
stos
and
jmp
mull
das
pop
jo
je
sbb
scas
je
je
mov
push
sub
or
push
mov
xor
mov
ja
cmp
lock
jbe
imul
pop
and
test
dec
movsl
pop
jae
mov
xor
in
push
add
rolb
addl
mov
xchg
lock
adc
jne
mov
lock
mov
sub
negb
push
shl
jl
cmpsl
push
sub
xor
pusha
xchg
cmc
pop
fbstp
dec
mov
orl
and
xlat
pushf
repnz
sub
icebp
jb
es
push
cmp
jns
and
mov
pop
xchg
pop
cmc
outsb
lahf
std
or
rcrl
test
loope
pop
test
sbbb
pop
idivl
pop
xor
cli
adcl
mov
rcr
and
loop
mov
stos
jnp
mov
dec
push
add
dec
test
lahf
dec
and
adc
and
cs
jle
lea
sbb
pusha
xchg
inc
xor
testl
test
push
ja
pop
fadds
mov
dec
sbb
testl
fsubs
ja
in
mov
out
je
jo
dec
dec
pop
sbb
outsl
sbb
clc
sbb
pop
xchg
cld
dec
jns
insb
xchg
lods
out
ss
das
and
mov
pusha
and
stc
sti
sbb
mov
mov
fcomps
pop
inc
push
xor
lcall
inc
mov
mov
scas
aad
loopne
ror
sbb
fcomp
div
ret
xlat
aad
mov
iret
mov
mov
test
sub
sub
dec
pop
dec
sahf
push
push
mov
movsl
ljmp
out
aam
jp,pn
push
or
cs
aaa
ja
cmp
push
xchg
jo
lods
std
sbb
push
adc
pop
cmp
fcomp
adc
sbb
lods
and
mov
xor
adc
cmovno
sub
push
cmpsl
jge
xchg
cmpsb
pop
rcll
inc
sysret
mov
adc
das
daa
adc
xchg
fcoml
rcr
lods
dec
and
mov
push
cmpsb
pop
jb
add
pop
mov
and
clc
jecxz
xor
es
add
pop
add
adc
sub
inc
clc
xchg
push
inc
pushf
sbb
xor
test
test
lock
aaa
add
sub
sub
sahf
loopne
jae
dec
and
mov
mov
mov
and
and
pop
jbe
inc
dec
out
fisubs
fucomp
cmp
mov
fldt
add
jne
popf
cli
lret
and
lods
inc
add
cmp
out
in
cmpsl
cmp
jmp
arpl
pop
mov
xchg
fldl
out
pushf
popa
outsb
out
cwtl
adc
in
pop
lcall
fsub
imul
mov
dec
pop
je
mov
cwtl
shr
negb
xchg
testl
sub
xchg
xor
pop
push
mov
mov
add
je
mov
outsb
imul
loopne
sub
outsl
push
xchg
mov
sbb
mov
mov
bswap
sub
mov
xchg
lret
mov
popf
mov
xchg
xchg
push
out
push
lock
jo
filds
push
sti
lea
lds
xchg
cmp
test
bound
sub
inc
cmp
xlat
cmc
dec
sub
and
call
movsb
popf
add
dec
push
sbb
sub
clc
dec
add
push
xor
loopne
je
sbb
sub
or
sub
sbb
xchg
lea
loop
aad
iret
jnp
stc
and
cld
hlt
add
jmp
fdivr
or
roll
add
dec
and
xor
fdivp
mov
fistl
add
aam
imul
je
pusha
inc
push
jg
into
data16
loope
pushf
inc
dec
sub
xor
movl
inc
mov
mov
mov
sbbl
stc
pop
sub
gs
bound
or
call
negb
mov
and
add
push
mov
xchg
pop
adc
sub
jge
add
jbe
into
insb
sub
cmovnp
dec
loop
out
push
push
jecxz
cwtl
push
js
dec
add
xor
push
xchg
sbb
mov
push
ret
push
cmp
insl
mov
push
cmp
jg
push
icebp
pop
insl
and
addr16
inc
lds
mov
lea
bound
jb
xor
fstpt
andl
xchg
dec
dec
mov
jnp
push
aas
inc
mov
or
out
sub
xchg
jne
cwtl
cltd
or
jmp
sbb
mov
les
mov
arpl
jge
decl
or
outsb
cmp
dec
stos
push
lret
je
xchg
into
cmp
adc
lds
inc
cltd
out
mov
mov
pop
xchg
mov
adc
out
adc
cmp
and
push
cli
mov
outsl
notb
scas
jae
adc
je
int3
repz
imul
pop
inc
xor
mov
bound
and
pop
xchg
xor
enter
xor
int3
negl
sbb
pushl
inc
xchg
cs
ret
lret
lret
mov
xor
inc
mov
idivl
inc
push
test
movsl
repz
mov
bound
stc
ljmp
adc
inc
in
and
sbbb
pop
cmp
mov
outsl
out
mov
aam
lods
inc
int
mov
dec
inc
icebp
fcmove
or
mov
cmp
push
push
imul
fdivrs
test
mov
jecxz
mov
or
out
pop
mov
xor
inc
xor
dec
dec
xor
pushf
dec
jp
pop
in
and
mov
cmp
mov
cmpsl
jns
push
mov
xchg
cmp
jb
icebp
test
mov
adc
pop
stos
mov
or
roll
iret
daa
je
adc
out
pop
into
notl
add
push
aaa
fidivl
fmuls
test
cmp
test
ds
adc
xlat
popf
addr16
loopne
ret
leave
mov
ss
dec
adc
test
rorl
mov
sbb
dec
and
lods
das
mov
xor
insb
mov
cmp
lret
faddl
xor
mov
push
cwtl
jp
or
test
cmc
sbb
sub
pusha
repnz
lods
mov
mov
dec
xor
outsb
testl
dec
lods
into
lock
sub
fwait
inc
into
ret
sbb
cmp
or
adc
lds
xchg
rolb
aaa
jae
and
sbbl
mov
faddp
rclw
xor
push
fsubrs
sbb
daa
mov
addl
add
add
stos
aad
xchg
mov
ss
aad
push
xchg
dec
fistpll
cmp
push
or
shll
int
or
pop
push
xchg
shrb
in
push
adc
mov
push
aaa
xchg
sub
jmp
call
aas
ljmp
push
lea
test
shlb
mov
sbb
aad
mov
jbe
push
and
or
popf
push
enter
sbb
dec
adc
outsb
sti
divl
bound
dec
lock
data16
lcall
xor
shrb
push
pushl
mov
inc
mov
les
cmc
add
subb
sahf
jbe
xchg
aas
pushf
jnp
lods
cmp
mov
lahf
imul
pop
sub
cmpsb
aas
adc
mov
fstl
int3
adc
mov
ret
adc
imul
fidivrs
xchg
push
or
shrb
pusha
or
inc
rclb
cmp
or
seta
xlat
mov
shlb
pop
inc
or
fcoms
pop
mov
xor
lcall
mov
xchg
and
out
sbb
pop
pop
mov
sbb
xchg
cmc
iret
xchg
pop
aam
mov
iret
push
pusha
xor
pusha
jp
mov
adcb
mov
mov
movsb
jne
inc
sub
insb
into
and
addl
mov
sub
or
orl
sub
fwait
mov
cmc
adc
mov
outsb
lcall
jno
inc
test
dec
push
repz
or
mov
mov
xlat
movsb
mov
aaa
push
or
add
into
mov
push
xchg
out
into
xchg
test
int
adc
or
movsb
rolb
jmp
hlt
jg
rcll
fs
enter
aaa
outsb
inc
sub
popw
inc
clc
iret
outsl
mov
adc
mov
mov
imull
mov
lock
inc
mov
push
ficomps
bound
or
stos
sub
fimull
lds
xor
push
mov
rorl
or
jae
in
sarb
lock
inc
xchg
dec
jge
sbb
inc
jge
divl
or
sub
lds
sbb
aaa
pop
in
test
xchg
es
or
arpl
insl
and
shlb
andb
data16
in
mov
jge
mov
add
fwait
pop
sahf
scas
and
mov
add
hlt
jns
leave
sbb
sbb
imul
fildll
inc
xor
test
test
inc
pop
jg
cmpsl
or
inc
or
ret
push
xchg
mov
imul
cmp
cmp
adc
insl
jae
jecxz
pop
sbb
repnz
or
push
mov
icebp
xor
daa
xor
cmp
ret
xchg
dec
ljmp
push
jae
xor
std
ret
jge
lea
outsl
jno
add
test
sbb
mov
in
mov
dec
dec
mull
xchg
cli
sub
aas
pop
inc
int
and
sbbb
sub
push
push
loop
pushf
loop
pop
mov
dec
push
adc
jge
and
loope
and
mov
fildll
sub
dec
movsl
push
mov
xchg
or
in
mov
sbb
notb
cmp
cs
rcrb
mov
lock
fstps
jmp
jno
test
addr16
outsl
mov
int3
int3
push
mov
into
addl
sbb
add
icebp
pop
or
or
aas
movsl
sti
call
inc
inc
out
cmpsl
mov
repz
and
mov
leave
lret
ljmp
fistpll
push
inc
jo
mov
sub
xchg
fstps
rol
and
cmp
and
mov
xlat
or
mov
add
je
in
pop
mov
xor
dec
pusha
lods
outsl
lods
pop
sub
xchg
movsl
and
xchg
cmc
loope
imul
mov
stos
mov
push
fsub
inc
cmp
xchg
jp
pusha
sub
ljmp
inc
add
xchg
das
dec
lock
sbb
ja
iret
hlt
in
test
cmp
mov
incb
adc
xchg
and
push
insl
cmp
xchg
cmp
ss
test
scas
jle
pop
in
push
jne
aam
cmp
outsb
imul
sub
sub
outsb
jae
adc
imul
mov
lods
inc
pusha
pop
pop
xchg
lds
in
jns
rolb
sbb
inc
jnp
or
scas
rorb
outsb
daa
cmp
mov
sbb
dec
mov
mov
cmovbe
push
cmc
adc
bound
sbb
pop
adc
fcoml
movsl
sub
jnp
flds
pusha
push
fimull
.byte
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
xor
add
dec
add
xorb
add
jo
add
add
add
add
add
pusha
add
add
bound
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
addb
add
add
add
enter
fsubl
add
add
add
add
add
add
addb
add
add
add
or
add
in
pop
adc
lock
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
cmc
xor
mov
jb
lahf
imul
xchg
xor
xchg
in
push
loopne
loop
pop
inc
call
sahf
cs
ljmp
adcb
stc
push
ja
adc
push
sbb
and
add
ret
stos
xlat
inc
movsb
sbb
adc
aas
push
mov
jmp
xchg
adc
dec
popf
sub
loopne
rcll
xchg
insb
aaa
repz
adc
mov
ljmp
mov
in
mov
xchg
cmpsb
xor
xchg
sub
rolb
cld
bound
je
lock
xchg
stc
pop
cmpl
or
cwtl
adc
aas
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
push
mov
pop
call
setl
inc
pop
xor
shlb
int3
adc
add
adcb
test
push
mov
pop
pop
add
push
mov
pop
mov
je
mov
mov
mov
xor
sub
mov
sub
mov
push
movzwl
popl
mov
sub
mov
sub
jne
xor
jmp
and
movb
fstps
cmp
inc
mov
pop
jmp
outsl
jl
pop
mov
es
mov
cmpb
lods
push
mov
xlat
icebp
jge
cwtl
add
test
ret
frstor
and
push
out
enter
fldl
mov
mov
adc
and
mov
pop
mov
cmp
mov
jae
ficoms
repz
cmp
push
aas
adc
jg
cmp
mov
aam
out
pop
cmp
leave
cmc
inc
or
or
sbb
repz
inc
push
mov
xchg
sub
ret
sete
inc
mov
mov
dec
cld
mov
mov
lret
or
fstpt
xor
imul
aad
fnstcw
out
movsb
push
xchg
popa
dec
mov
mov
pop
cld
xlat
ds
movsb
sub
hlt
cwtl
shll
pop
and
aas
inc
insl
shrl
push
mov
inc
mull
cli
xchg
jle
pop
push
push
xchg
out
or
inc
inc
fstpt
out
push
push
add
mov
mov
sub
mov
sub
and
pop
pop
adc
xchg
xor
cwtl
fdivrs
out
loopne
shr
sub
adc
or
jo
adc
pop
pusha
fsubs
out
mov
mov
fmuls
xor
out
movsb
rorb
jne
push
add
std
insb
outsb
and
add
push
mov
mov
incb
fisubl
mov
les
push
shrl
adc
int
mov
cmpsl
int
loopne
pop
xchg
mov
int
bound
pop
int
inc
das
dec
inc
ficoms
andl
int
bound
ljmp
int
or
inc
vpshlw
incl
movsb
sbb
sbb
str
inc
repnz
hlt
imul
cwtl
pop
jl
inc
ja
rcll
fidivs
push
sahf
sub
pop
xor
adcl
and
sbbb
xchg
testb
cmp
popf
jecxz
push
or
insl
adc
xchg
mulb
fistps
lret
into
mov
aas
iret
adc
addr16
test
leave
and
xchg
stc
ret
jp
testb
jb
icebp
shufps
pushl
mov
xchg
and
dec
sahf
scas
pop
sbb
pop
adc
jp
repz
out
xchg
testb
adc
arpl
mov
stc
scas
sbb
sahf
cltd
xor
or
shrb
in
mov
repnz
jo
icebp
bound
mov
out
outsl
pop
leave
pusha
sti
je
inc
out
testb
cmp
xchg
testb
and
test
in
mov
add
hlt
pop
adc
push
ja
xchg
hlt
into
mov
sarl
pushf
in
rcrl
inc
out
sub
sbb
mov
pushf
test
inc
ds
adcb
fistl
mov
mov
movsb
nop
popa
xchg
push
adc
push
push
stos
sbb
pop
mov
push
rclb
aas
fnstcw
push
push
sbb
pushf
push
shlb
xchg
pop
pushf
push
mov
adc
mov
inc
les
mov
pushf
out
adc
push
xor
pushf
fucom
aam
sub
jmp
xchg
adc
push
call
pop
aaa
mov
imul
test
xchg
push
mov
movsl
mov
add
sbb
mov
adc
pushf
add
or
inc
adc
pushf
ds
or
adc
pushf
push
cmp
push
add
adc
out
mov
adc
sbb
cmp
sbb
cmp
add
mov
push
xchg
mov
mov
mov
mov
xchg
mov
adc
pushf
push
outsb
or
cmp
jne
sub
pop
push
cs
cmp
loope
mov
xchg
adc
insb
sbb
das
xchg
mov
arpl
mov
push
mov
mov
mov
lcall
lret
sbb
in
arpl
add
jb
sbb
adc
sbb
cmp
cwtl
mov
mov
adc
and
xchg
dec
pop
mov
shlb
xchg
pushf
push
rcll
andb
mov
adc
pushf
cmc
arpl
cmc
arpl
xchg
mov
les
add
inc
mov
and
push
xor
mov
popa
add
inc
mov
mov
cmp
addb
xor
mov
dec
adc
bound
add
test
stc
fwait
mov
out
movsl
add
mov
xchg
jno
les
arpl
xor
stc
fwait
mov
test
xchg
mov
je
mov
arpl
xor
stc
fwait
mov
test
mov
adc
cmp
cmc
jns
lcall
adc
push
mov
fwait
jb
out
xchg
jns
arpl
xor
lock
push
xchg
pushf
adc
push
mov
pop
mov
aas
movsl
cmp
mov
movsl
add
aad
hlt
arpl
mov
xor
mov
outsb
clc
inc
push
jae
cmp
movsl
and
xor
arpl
mov
xor
push
jo
mov
mov
cmp
sub
rcrb
push
outsb
push
pusha
mov
aas
or
mov
mov
call
xor
lcall
mov
movsb
mov
mov
adc
mov
mov
add
push
mov
adc
push
mov
sbb
outsb
pop
jl
jno
push
wbinvd
outsw
ds
mov
fwait
cmpl
xchg
inc
pop
jl
jl
cmp
cs
js
dec
lahf
popa
fs
sti
cwtl
or
mov
push
mov
test
sbb
nop
sar
out
aam
xor
repnz
mov
addb
and
cmpsl
out
jae
cmc
repnz
adc
dec
and
push
mov
adc
pushf
push
mov
adc
pushf
push
mov
or
notl
pushf
push
incl
pushf
push
mov
adc
pushf
push
mov
adc
cltd
push
mov
adc
pushf
push
mov
inc
xorb
and
loop
pushf
mov
mov
dec
mov
pop
push
sbb
cld
mov
dec
dec
je
add
es
ds
in
pusha
pushf
ss
xor
jecxz
cmp
or
vmwrite
mov
mov
imul
dec
mov
xor
ret
fs
daa
fnstenv
sub
mov
pop
fdivrs
sbb
cmp
cmp
pop
fistl
and
out
jns
add
mov
jge
cwtl
sub
mov
repnz
lret
xor
mov
enter
lahf
pop
add
cs
mov
add
mov
loope
mov
aam
mov
inc
cmp
or
sub
loop
pop
pop
and
fsubl
push
jle
fsubl
mov
and
mov
outsl
and
sbb
and
sbb
ret
lods
and
cmp
leave
add
adc
ss
jecxz
ret
shl
lret
sbb
imul
xchg
cmp
cld
pop
push
aam
fimull
xchg
push
scas
sti
cltd
mov
fldl
out
imul
dec
ret
jae
fsubs
ret
xchg
nop
sbb
mov
insl
cmp
xchg
lahf
rcrl
adc
outsl
adc
sub
in
les
sbb
mov
stos
mov
cmp
and
push
mov
mov
xchg
sbb
repz
stos
inc
push
insb
jae
ds
inc
lahf
imul
imul
sub
and
outsl
or
jb
xor
push
imul
and
aas
into
add
int
clc
xor
mov
cli
mov
sub
push
cltd
push
mov
inc
inc
push
xchg
call
jnp
lock
xchg
jecxz
jb
outsl
shll
icebp
and
xchg
dec
loopne
mov
sahf
push
aaa
add
mov
or
jo
cmp
mov
movsb
arpl
xorb
les
cmp
dec
sub
fdivrl
jle
les
push
and
adc
push
imul
add
add
fsubr
push
cltd
leave
jbe
cld
xor
shlb
movsl
push
out
mov
mov
mov
cmpsb
add
dec
jg
push
jbe
dec
sbb
adc
push
stos
xor
sbb
inc
out
mov
lods
xor
push
mov
stos
add
and
loop
int
mov
lret
mov
loope
mov
out
jnp
scas
add
add
add
or
add
adc
pop
adc
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
adc
hlt
pop
adc
cwtl
pop
adc
mov
adc
movsl
pop
adc
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
pop
adc
add
add
fcomps
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
lock
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
es
add
add
es
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
js
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
dec
add
add
sub
and
dec
add
add
popa
add
add
add
add
jns
jae
je
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
xor
mov
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
lock
add
add
add
incl
add
js
add
add
pushl
add
ja
cld
int3
pop
or
add
cmp
inc
or
ja
or
inc
or
pushl
addb
js
xchg
or
les
or
mov
les
add
jl
int3
les
add
jl
int3
les
add
jo
add
add
or
ja
js
add
xchg
ja
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
lock
add
decl
incl
incl
incl
clc
mov
incl
add
add
mov
add
jo
jo
lock
ja
addb
int3
int3
inc
ja
mov
add
add
ja
addb
int3
int3
inc
pop
jo
js
mov
add
inc
inc
jo
ja
ja
ja
mov
inc
inc
adc
decl
int3
add
inc
mov
mov
or
inc
add
add
add
or
incl
add
mov
orb
ja
inc
mov
ja
cmpsl
mov
addb
add
push
mov
add
mov
inc
testl
jo
int3
int3
int3
testl
jo
int3
int3
int3
testl
or
int3
int3
testl
or
int3
int3
int3
testl
int3
int3
int3
int3
int3
testl
in
int3
int3
int3
int3
testl
in
int3
int3
int3
int3
testl
int3
int3
int3
int3
int3
testl
add
add
add
mov
add
add
or
mov
mov
mov
add
add
or
ja
ja
ja
ja
mov
add
add
add
decl
add
or
ja
ja
ja
clc
add
add
add
add
mov
sarb
sarb
pop
rcrb
pop
rorb
inc
add
pop
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
addb
pop
ret
pop
loop
add
repnz
pop
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incl
add
incl
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
add
add
add
add
cltd
mov
cmp
add
icebp
xchg
dec
push
and
ja
add
push
mov
sub
dec
push
outsl
loopne
jmp
clc
xchg
fisubs
loopne
jb
divb
rorl
xorl
add
imul
adc
adc
xor
icebp
xor
ss
repnz
jp
xchg
cmp
cmpsb
cmpb
fcmovu
xor
and
push
cmpsb
xor
mov
push
jmp
cmp
xchg
data16
mov
mov
scas
pop
sbb
cmp
and
xor
pop
daa
testb
insb
in
out
inc
outsl
mov
stos
dec
imul
fisubrl
cmp
mov
add
imul
aas
pandn
cmc
xor
fisttps
cmp
jne
mov
enter
sub
push
pushf
rcl
inc
and
sub
pop
leave
test
xchg
in
push
test
divb
leave
mov
test
push
movsb
cmpsl
and
or
add
pop
or
dec
imul
adc
call
xor
lods
inc
lods
jp
dec
xchg
xchg
ds
xchg
add
and
lock
or
cld
push
dec
or
fstps
mov
push
jl
imul
push
cltd
push
xchg
mov
dec
inc
add
xchg
int3
lahf
imul
push
push
out
scas
rorb
ja
xchg
ffreep
in
ja
fsubr
loop
xchg
rolb
dec
pop
add
iret
aam
repnz
push
mov
inc
xchg
or
jl
add
sbb
push
pop
aad
jne
and
stos
sub
pop
jg
dec
adc
mov
jnp
ds
jle
and
jae
iret
adc
ret
inc
hlt
inc
notl
push
mov
out
popf
mov
mov
push
cmpsl
std
cmp
pop
shrb
gs
pop
out
mov
mov
xor
fistl
cs
pushf
and
cltd
es
je
sub
pop
push
adc
jne
ds
arpl
js
lock
or
movsb
sbb
mov
mov
jmp
xchg
cwtl
jmp
dec
or
out
mov
cld
pop
push
ljmp
lcall
mov
movsb
int3
orl
mov
sbb
lods
adc
shlb
out
test
cltd
or
aas
push
pop
jo
mov
jge,pt
jnp
divl
pop
push
pop
rclb
mov
xlat
xorl
sub
xchg
out
mov
test
fxch
pushl
je
mov
xchg
push
sub
int3
sub
mov
mov
pop
lcall
jecxz
xchg
subl
mov
adc
je
pop
cmp
testb
adc
cmp
dec
pop
pop
or
rcll
lcall
insl
test
sub
insl
mov
aam
aam
aad
mov
faddl
push
mov
push
jle
jne
or
lret
lock
cmp
pop
testb
loopne
test
lret
cmp
mov
xor
push
push
or
pushf
pop
arpl
mov
xor
sarb
dec
jp
push
arpl
cmp
hlt
repnz
jo
push
and
addr16
inc
mov
lahf
push
xor
outsb
mov
scas
cmp
push
adc
aas
lcall
add
mov
cwtl
enter
pop
sub
mov
nop
decl
and
inc
dec
push
std
and
mov
pop
add
xlat
dec
rorb
les
shll
jo
ret
xor
movsb
pusha
pop
xor
outsl
xchg
xlat
es
movsb
pusha
xchg
lds
lock
mov
jecxz,pt
clc
sbb
adc
lds
jmp
bound
ret
outsb
cs
push
inc
jb
add
out
push
add
xor
mov
pushf
jmp
ljmp
add
and
push
ret
in
out
orl
xchg
xor
addr16
and
repnz
inc
mov
ret
sbb
mov
xchg
loopne
or
in
xchg
popa
rcll
loop
hlt
test
lahf
sub
aaa
sub
addb
sub
dec
ret
mov
jnp
push
dec
add
sbbl
cli
dec
sahf
ds
adc
push
andl
ljmp
outsb
sub
lea
sub
stc
mov
jg
xchg
mov
lret
pop
jbe
outsb
mov
fwait
aam
mov
pop
xorl
mov
mov
xor
pop
xchg
jne
xchg
jl
pop
mov
xor
icebp
ljmp
inc
xlat
lods
jg
testb
aam
cmp
inc
adc
movsl
cmp
sub
aad
xchg
sub
or
rorl
mov
inc
mov
fwait
jecxz
lahf
and
mov
nop
ret
rcr
pop
mov
inc
sbb
mul
adc
insl
sbb
test
hlt
jge
ficoml
aad
filds
je
inc
mov
dec
imul
xchg
f2xm1
loopne
fsub
xlat
mov
jae
mov
int
xor
mov
std
cmc
push
mov
ud0
mov
pushf
pop
add
or
or
cmp
push
dec
jecxz
shrl
mov
fldt
iret
cmp
add
fsubrl
hlt
push
xlat
mov
popl
popf
add
lods
test
pop
in
out
in
mov
cwtl
mov
int
push
or
cmp
fisttpll
or
dec
sub
cs
push
pop
cmp
sub
das
pop
pop
cmp
xchg
add
pop
mov
cmp
rcll
hlt
cmpsl
adc
cmp
pop
ret
imul
mov
rorl
pop
jl
test
and
bound
pop
cmpsl
xchg
adc
je
aas
inc
jp
gs
bound
cmp
movsb
in
inc
fisttpll
inc
adc
pop
cld
sub
mov
jecxz
add
dec
ret
adc
nop
cmp
add
sub
adc
add
fnstcw
sbb
add
sbb
mov
pusha
shrl
xchg
fnsave
xchg
outsb
mov
push
sbb
fnsave
in
repnz
dec
mov
push
xlat
xorl
insl
or
xchg
ja
push
dec
fdiv
push
or
xchg
xorb
lret
test
or
jae
in
pop
jb
cli
sbb
mov
pop
xor
test
inc
mov
mov
push
and
out
jmp
ficomps
repz
dec
icebp
punpckhdq
in
dec
inc
scas
jg
icebp
or
in
mov
in
push
shl
imulb
mov
dec
imul
adc
jno
fdivr
fidivl
push
mov
sbb
movsb
stos
pop
and
jns
ja
jne
xchg
mov
xor
int
iret
pop
imul
adcl
cmovge
cs
adc
jae
ljmp
inc
sub
scas
ss
push
idivb
lahf
imul
scas
in
mov
adcl
arpl
pushf
imul
mov
stos
dec
dec
jge
das
adc
cwtl
push
cmc
lods
sahf
jle
repz
outsl
push
mov
dec
mov
adc
push
insl
fnstcw
or
mov
in
sub
pusha
mov
and
popa
testb
movsl
xchg
push
jl
push
pop
sbb
mov
dec
adc
cmc
adc
fsubrl
out
xchg
xchg
jb
fs
jle
movsb
dec
lahf
jle
lods
adc
xchg
rorb
mov
hlt
dec
push
push
dec
dec
jno
mov
cmp
inc
gs
arpl
mov
push
xor
sahf
xlat
fdivrs
jle
mov
cld
or
jp
notl
test
sub
subl
lret
je
shrl
inc
jb
xchg
arpl
mov
sub
aad
dec
imul
cmpsb
icebp
das
or
sbb
cmp
out
sub
mov
dec
dec
int
mov
jp
jle
mov
fcoml
dec
xchg
push
inc
les
add
movsl
shl
add
mov
ljmp
repnz
das
ja
movsl
dec
sahf
sbb
jge
cld
fisubrl
lods
or
repnz
call
fnsave
push
enter
mov
dec
push
shrl
test
jle
aas
add
fsubp
mov
jo
add
add
mov
fidivl
add
inc
addr16
jbe
push
arpl
dec
cwtl
andb
cmp
push
jns
fmuls
or
or
cmp
pop
xor
lods
mov
cmp
jg
in
lahf
mov
push
xchg
outsl
hlt
mov
jnp
popa
scas
fs
add
lds
out
mov
push
jg
out
fs
inc
jmp
xchg
shrb
and
add
orb
ds
xchg
jl
push
out
pop
push
sahf
gs
fldl
push
and
shll
inc
sbb
mov
jp
mov
sub
insl
int
sub
lods
jo
xchg
js
popa
push
xchg
pop
jno
xchg
sbbb
mov
sub
mov
jg
mov
mov
imul
in
xor
pop
mov
dec
xchg
xor
mov
hlt
test
xor
sub
lahf
or
loopne
push
mov
fcompl
stos
ret
xchg
leave
adc
push
sbb
fnsave
scas
loope
jb
dec
sarb
filds
jecxz,pt
adc
adc
enter
xchg
cli
jbe
mov
js
stc
jecxz
adcl
adc
ja
inc
mov
stos
adc
xchg
lds
or
push
add
pop
cmp
dec
and
in
sub
xchg
push
xlat
inc
rorb
sahf
aad
push
fcompl
push
push
lret
cld
inc
mov
mov
adcl
ja
repz
dec
and
dec
icebp
aad
xor
inc
or
repz
mov
fstpt
icebp
pop
and
pop
add
xchg
jg
ret
push
and
xchg
aad
ljmp
lods
incb
xchg
int3
mov
pop
mov
xchg
mov
and
xchg
pop
movsl
adc
nop
lret
adc
repnz
in
mov
cs
jbe
xchg
call
aam
dec
add
ljmp
loopne
or
add
fwait
mov
lock
movsl
mov
out
dec
cmc
shll
lret
mov
jmp
sbb
dec
pop
add
push
jo
data16
cmc
push
cmp
lret
push
sub
lea
loop
jge
xchg
jo
pop
leavew
lds
inc
arpl
jae
call
pop
or
or
dec
add
std
test
or
pushl
sub
lret
loopne
nop
add
xor
fs
aaa
mov
sbb
and
sti
mov
sub
add
and
lret
push
rcrb
push
gs
fstps
push
lods
sbb
jns
mov
fdivl
in
mov
mov
jae
enter
mov
and
inc
push
callw
inc
dec
ss
mov
testl
push
add
push
and
sub
aas
sbb
push
dec
pop
je
cld
dec
in
xor
adc
xchg
ret
pop
out
scas
jge
popa
je
cmpsl
cmc
outsb
out
nop
popa
nop
ret
adc
sub
jge
lret
jo
xchg
push
push
sbb
outsb
push
sub
addr16
ds
int3
cmc
inc
test
push
push
cmp
out
out
mov
xchg
adc
stos
sbb
xchg
inc
aaa
rorl
movb
mov
mov
sub
rclb
aas
das
psllq
jbe
dec
int3
inc
repz
or
mov
andl
fildl
sarl
sbb
test
movsw
push
mov
lods
dec
and
loopne
iret
inc
cmp
dec
pop
cmpsl
jecxz
int3
paddq
insl
pop
pop
and
mov
ret
cmp
push
adc
cmp
ret
scas
rol
xor
insb
or
lods
xlat
es
pop
aaa
or
pop
scas
add
lock
popl
mov
cmp
inc
pop
push
jmp
aaa
arpl
and
or
movsb
decb
out
std
inc
loop
jnp
adcl
in
xchg
rolb
outsl
or
enter
sub
rcll
inc
jno
mov
clc
push
add
push
lods
sub
xchg
or
fcomps
aas
push
push
or
jecxz
add
mov
and
int
bound
repnz
mov
imul
repnz
sti
add
and
jmp
push
and
lds
test
popa
lods
or
sbb
sbb
jg
repz
push
loopne
mov
push
jnp
cmp
xchg
push
loop
or
mov
xlat
mov
lods
test
insb
insb
aad
lret
push
sarb
fisubrl
add
jmp
add
sarl
jg
lahf
out
imulb
xor
xor
mov
mov
mov
sub
xor
ja
mov
scas
enter
inc
or
xlat
loop
fimull
and
inc
hlt
fstp
push
jb
mov
dec
test
push
add
xlat
xor
xchg
out
and
mov
jb
push
fsubrl
imul
pop
lcall
jno
jnp
gs
flds
xor
jno
adc
pop
xor
or
mov
push
mov
add
push
repz
or
pop
push
fistpll
fisubrl
cli
xchg
cmpsl
sub
dec
dec
enter
adc
jae
add
enter
xor
mov
add
stos
push
add
push
jno
mov
jnp
in
or
jb
or
nop
push
imul
push
addb
into
jle
xor
test
push
push
jbe
cmpsb
or
xchg
in
mov
pop
cld
or
test
jb
fmull
xchg
inc
push
xor
iret
popf
mov
pop
jl
mov
fwait
add
leave
mov
movsb
xor
push
xchg
outsb
jmp
jns
out
arpl
push
mov
movsb
push
jge
xor
js
add
dec
sahf
fcomps
out
xorl
loopnew
pop
xor
xlat
sbbl
lret
mov
orl
mov
dec
jae
ror
fmul
aaa
xor
das
adc
test
loopne
call
scas
insl
mov
scas
je
jae
cmc
cs
lret
inc
xorl
inc
mov
in
stos
movl
enter
mov
and
loopne
dec
dec
loop
popf
add
in
lock
inc
es
bound
out
rorl
test
or
rcrl
es
mov
sti
je
insb
sbb
inc
test
inc
aam
imul
sbb
jb
cmp
and
fs
push
or
mov
adc
xchg
inc
fldenv
xor
out
mov
adc
or
es
das
adc
int3
pop
rorb
inc
outsl
jae
pushf
and
push
out
mov
mov
mov
shrl
fistpl
cltd
out
sbb
lods
xchg
pop
jb
or
sub
popl
imul
xor
xor
inc
xchg
sbb
flds
and
ret
repz
sbb
inc
addr16
stos
xchg
mov
pop
pop
inc
jl
mov
push
outsb
sub
call
adcl
incb
test
and
lcall
out
mov
mov
push
mov
ficoml
sarl
jo
int3
add
mov
ret
fs
push
fbld
test
and
and
cmp
lret
cmc
lock
or
das
jge
inc
xlat
sbb
fimull
jl
mov
mov
std
negl
xchg
loope
jae
fcoml
dec
cmpsl
icebp
pop
dec
or
xchg
xor
lret
sbb
push
test
xor
pop
mov
pop
cmc
clc
mov
int
xchg
jns
and
pop
fwait
popa
sub
xchg
xchg
cmp
scas
repz
test
cmc
inc
jno
orb
mov
test
jmp
in
lret
adcl
mov
add
adc
add
stc
and
sahf
and
pop
cmp
xchg
ljmp
dec
mov
pusha
push
mov
mov
adc
rorl
adc
push
popa
and
pop
les
jmp
in
jmp
pop
icebp
lds
jb
into
jns
mov
add
cmpsl
popa
bound
and
movsb
imul
mov
push
or
dec
mov
add
and
pop
pop
icebp
mov
pop
int
std
pop
jae
mov
jp
or
jge
cld
cltd
out
ss
movsl
sub
xchg
dec
addr16
outsb
out
enter
jno
pop
rcl
fildl
repz
mov
dec
or
dec
arpl
lahf
jg
test
fnstsw
pop
stos
leave
pushf
call
ljmp
daa
push
or
out
mov
out
adc
pop
jns
loopne
out
cmpsl
xorl
imul
jbe
add
push
dec
loopne
inc
test
jne
mov
sub
aas
mov
mov
add
dec
ss
stos
and
xor
aam
mov
mov
xor
sbb
xchg
push
loopne
and
push
lods
pushf
xlat
es
adc
cli
aaa
add
xor
xor
adc
fcmovnb
adc
jnp
testb
outsl
cmp
mov
in
cmp
lahf
lods
push
hlt
jbe
fstpt
data16
outsb
insl
in
xchg
sbb
jbe
add
aas
jmp
add
out
push
mov
mov
mov
cltd
cmp
repz
push
shll
test
pushf
shrl
movsb
mov
cld
imul
adc
mov
jno
jno
in
leave
addr16
mov
jns
cmp
mov
fildl
mov
and
add
fmull
mov
into
cmp
idivb
test
xchg
inc
and
dec
and
or
cmpsb
rorl
outsb
outsb
mov
pop
adc
or
xchg
jge
or
inc
xchg
or
into
mov
and
jb
pop
jecxz
mov
testl
adc
mov
cmp
mov
cmpsb
loope
outsl
dec
mov
movsb
mov
jns
stos
pusha
addr16
mov
data16
adcl
div
cmp
scas
hlt
inc
ja
jnp
jle
test
xchg
arpl
pop
data16
cmpsl
pop
andb
pop
jno
push
std
cld
les
adc
inc
pop
cmp
loopne
push
insl
int
lret
mov
scas
xchg
int
lret
aam
sub
push
test
pop
clc
sar
mov
cmp
jbe
out
mov
negl
push
mov
adc
jb
das
adc
daa
test
insl
lahf
mov
xlat
sbb
idivb
xchg
inc
jo
shrb
adc
push
mov
inc
cwtl
pushf
mov
jecxz
mov
ror
lret
stos
push
adc
and
xor
mov
or
and
fsubs
loopne
je
push
imull
int3
fld
cmp
popf
mov
mov
rcll
sbb
cld
mov
jnp
movsl
and
shlb
arpl
iret
stc
lock
sub
add
xchg
cld
aad
push
push
xchg
xchg
mov
movsb
es
xor
mov
or
jecxz
jns
insb
mov
rcrb
sub
and
cmp
ljmp
xor
inc
cmp
ss
dec
iret
xchg
cmp
cmp
mov
lcall
xor
popf
lea
cmc
incl
out
icebp
shll
xor
popl
std
push
and
lret
push
js
mov
sbb
cmp
out
lahf
jl
and
fdiv
icebp
and
cmp
arpl
arpl
in
test
mov
inc
adcb
leave
js
mov
mov
bound
aam
and
jno
xchg
nop
sbb
fbld
adc
les
or
lds
pop
pop
pop
pusha
dec
insb
mov
sbb
push
sbb
jne
sub
and
cmpl
test
jmp
pop
jmp
int
mov
mov
push
cmp
cmp
sbb
or
cmp
adc
fstps
in
int
cld
cmp
movsl
movsl
aaa
movsb
add
test
pop
rolb
loope
gs
sbbl
sbb
insl
or
fadd
xchg
xor
hlt
aaa
adc
mov
cmp
add
and
mov
and
mov
out
add
ljmp
push
sub
pop
jb
jp
sub
mov
adc
out
inc
jbe
adc
xchg
mov
sub
call
mov
cmp
mov
jle
ffreep
fs
xor
xlat
jo
cs
xchg
mov
cs
mov
popf
test
sub
shl
xchg
jecxz
leave
shl
es
pandn
mov
vpcmpgtw
shrl
mov
out
and
push
cmpsl
mov
or
or
jl
scas
gs
in
or
aas
adc
ljmp
push
xor
pop
jecxz
lock
cmp
iret
mov
imul
es
sub
cmp
mov
je
cmc
xchg
outsb
mov
push
lret
push
test
repnz
add
aad
or
daa
in
imul
sbb
inc
cmp
adc
cmpsb
dec
mov
lcall
loopne
add
push
lcall
sub
push
xor
imul
jnp
xor
mov
dec
dec
mov
sbb
out
xchg
dec
inc
add
lods
movsb
mov
xchg
or
fs
mov
in
sub
fwait
nop
mov
mov
int
mov
inc
into
sbb
fadds
cwtl
cmc
inc
push
cli
push
dec
mov
dec
in
mov
xchg
cmp
dec
jb
mov
fwait
cs
cmp
into
and
xchg
in
fs
mov
cmp
dec
hlt
aas
xor
dec
je
subl
mov
dec
fbstp
cmp
pop
sub
cmp
jnp
cmp
lea
jne
push
loope
out
adc
lods
cmp
ret
out
popa
mov
dec
adc
mov
daa
push
xchg
xchg
les
loop
add
cmp
mov
movsl
dec
or
cmpsl
fsub
mov
jle
scas
imul
iret
dec
fstps
mov
icebp
lcall
in
outsb
cmp
push
fmul
jecxz
cmp
dec
sbb
add
inc
dec
mov
dec
insb
or
ljmp
dec
sar
clc
pop
fwait
movsb
pop
cmpsb
mov
imul
scas
jbe
repnz
mov
ds
cmpsl
test
xchg
dec
iret
call
inc
xchg
mov
xchg
or
leave
jbe
inc
cmp
adc
adc
mov
test
push
test
mov
adc
scas
jne
scas
xor
push
jl,pt
fisttps
add
pop
sbb
out
jl
out
mov
inc
pop
mov
stos
or
inc
outsl
movsb
lret
jbe
das
fimull
xlat
dec
sbb
ja
into
or
adc
ret
das
push
add
rcrl
add
mov
test
pushf
jle
enter
or
movsl
push
or
int
add
dec
adc
inc
stos
fimull
adc
outsb
pop
sub
fldenv
scas
mov
outsl
lcall
cmp
jbe
push
pop
es
or
push
cld
fldenv
sub
fistpl
mov
testl
sbb
push
test
mov
add
xchg
inc
inc
cmpsl
mov
xchg
add
lahf
push
dec
shll
push
or
in
addr16
inc
std
sub
adc
test
ljmp
in
aam
and
negb
test
sbbl
outsl
rcr
ret
mov
mov
pop
pop
mov
pop
inc
cmp
mov
dec
pushf
xchg
push
and
fsubrs
lret
jno
sub
xor
jp
sub
inc
cmpsb
push
arpl
lahf
loopne
sbb
icebp
dec
repnz
test
imul
xor
mov
fadds
inc
cmp
mov
xchg
and
fldenv
adc
iret
imul
movsl
lret
or
xchg
test
pop
dec
and
mov
shl
test
popa
lods
or
jnp
outsb
leave
sbb
pop
cs
xchg
divl
ja
div
scas
popf
push
sbb
bnd
push
xchg
xrelease
inc
sbb
imul
pop
pop
inc
dec
sbb
outsl
shrl
dec
js
out
pop
cmp
xor
cmp
fdivr
add
cmp
popf
or
lock
jg
mov
rorl
pop
or
aas
ljmp
es
or
pop
inc
jp
push
loope
nop
sbb
hlt
push
lock
xor
add
xor
sub
in
jp
imul
xor
add
adc
and
inc
into
jl
push
aaa
dec
sub
orb
pop
rorl
loope
sub
rcrl
pushf
dec
mov
out
cmp
or
pop
lcall
xchg
movsb
icebp
pop
cld
xchg
cmc
sti
in
add
push
rorl
push
jno
push
lock
in
out
inc
shrl
mov
xor
push
adc
cmp
stos
lret
or
fildll
sub
enter
aaa
sarb
cmp
sar
rcrb
xor
cmpsl
push
ficompl
mov
test
push
cmc
push
leave
cmp
mov
negb
scas
stc
rcll
sub
mov
xchg
mov
mov
decl
repnz
repnz
dec
push
movsb
mov
and
sahf
mov
mov
mov
ljmp
out
pop
or
out
xchg
mov
sbb
dec
xchg
adc
int3
push
sahf
jg
mov
int
mov
lret
out
fucomp
sub
nop
out
mov
das
sbb
inc
rolb
daa
add
movsl
cltd
bound
or
sub
mov
into
push
rcr
sbbb
or
lock
in
es
stos
mov
pop
lods
movsl
stos
dec
mov
mov
out
cmpsl
inc
out
pusha
scas
xchg
or
jecxz
outsl
inc
sti
pushf
push
ret
jle
sbb
inc
out
and
mov
jne
xor
outsb
push
data16
mov
lea
inc
shl
in
sbb
or
leave
dec
xor
add
leave
mov
clc
lcall
mov
data16
fwait
mov
inc
aam
daa
faddl
ja
das
std
and
lret
popl
cld
mov
cmp
outsl
nop
xor
cmp
sbbl
out
sbb
fiaddl
mov
mov
jno
in
xchg
pop
or
push
mov
inc
xchg
scas
pop
or
js
into
ja
loop
sub
lods
aaa
mov
push
movsb
addb
sub
xor
sbb
pop
iret
add
push
pop
pushl
cmp
mov
outsl
mov
jae
fistpll
rcl
jne
iret
movsl
jg
gs
sbb
mov
mov
outsb
lcall
jns
dec
push
sub
pop
push
dec
cmp
pusha
inc
leave
sbb
loopne
mov
add
in
scas
in
jne
jns
adc
insb
rcr
je
jo
or
xchg
jb
push
pop
pop
xor
or
loopne
and
add
test
inc
and
cli
pusha
lret
pop
inc
xchg
out
jo
jmp
bound
mov
push
xor
mov
or
push
scas
pusha
xchg
xor
xor
and
bound
mov
jne
fdivs
mov
mov
or
lahf
adc
or
and
push
inc
xor
ret
jo
jo
adc
rcrb
inc
sbb
mov
idivb
test
ds
mov
xchg
popa
test
call
and
mov
clc
fisttps
inc
loop
repnz
and
dec
outsb
pushf
filds
flds
jns
inc
dec
popa
in
in
das
pop
adc
rolb
cmp
pop
jge
adc
sti
mov
mov
enter
and
inc
js
inc
adc
xorl
decl
and
inc
mov
fsub
je
jne
outsb
push
sub
testl
or
xor
pop
jge
xor
sbb
dec
dec
rcll
sbbb
popa
or
jnp
fidivrs
inc
adcl
adc
xchg
rcll
shrl
push
or
dec
add
pop
adc
lea
mov
icebp
jl
cmp
xor
ss
and
sahf
and
cmp
sbb
scas
popf
subb
pop
dec
xor
les
pop
jmp
das
dec
clc
pop
or
or
cs
nop
mov
hlt
push
arpl
cmp
pushf
push
mov
leave
jg
fucomp
daa
ljmp
mov
test
or
push
sbb
test
out
push
popf
push
mov
sub
in
add
scas
cld
movsb
sbbb
pop
out
repnz
lahf
das
inc
push
das
in
or
xchg
mov
aad
xchg
pusha
ret
in
mov
daa
sahf
les
dec
out
pop
or
mov
push
mov
push
out
lods
or
mov
out
pop
iret
jl
jbe
mov
das
add
lcall
mov
out
push
mov
or
test
push
sub
xchg
add
lods
sbb
fistpl
in
shl
xor
mov
add
stc
dec
pop
add
dec
xchg
lret
sbb
ret
xchg
insl
loopne
fwait
mov
cmp
stos
div
sub
test
sbb
inc
push
insb
sbb
jle
fidivs
jecxz
mul
jbe
fbstp
inc
in
movswl
lods
fildll
out
in
popf
andl
inc
mov
jle
movsb
out
mov
sbb
clc
xlat
ljmp
loopne
mov
out
fcomps
lea
mov
jecxz
lea
jg
mov
cmpsb
add
movsb
fimuls
inc
fisubrs
jnp
jmp
cld
movl
mov
in
ljmp
jp
mov
sub
or
pop
pop
loopne
repz
jg
or
movsl
push
and
sub
lret
xchg
outsb
xchg
scas
sbb
dec
sbb
add
xchg
mov
adcb
push
add
add
jg
out
rcrb
loopne
mov
and
in
jbe
rorb
pushf
jb
ja
fcompl
and
jno
inc
sub
pop
sahf
rcl
jmp
cwtl
cmp
jnp
mov
xor
int
pop
lcall
xor
dec
jmp
cmp
cmp
xchg
nop
movsb
fisubrl
and
leave
cmp
lods
pop
push
push
fwait
xchg
pop
xor
mov
push
stc
xchg
jmp
stos
mov
aas
add
aam
lea
mov
xchg
dec
or
test
leave
pop
lea
ret
mov
push
xchg
daa
fxch
mov
mov
lret
insb
stos
scas
or
mov
mov
mov
lea
test
idivb
pop
fcoml
psubd
int
addr16
lock
out
insb
cmp
out
outsl
sub
add
mov
push
or
cld
push
xchg
mov
mov
mulb
cmpsl
scas
int
cmp
dec
sbb
sbb
jmp
mov
sarl
sub
in
jns
dec
fimuls
shlb
aaa
pop
sub
xchg
mov
or
jg
dec
sti
movsb
jns
mov
jns
push
mov
and
mov
cmc
fcoms
push
adc
sub
add
fucomp
je
ljmp
bnd
test
bound
adc
jp
and
jnp
xor
push
and
pushf
sub
icebp
push
roll
test
mov
cmp
pop
jle
adc
cmovbe
cmpsl
dec
jbe
fcompl
add
hlt
std
push
pop
std
jns
or
inc
sbb
mov
test
sub
rclb
dec
adc
add
pop
cltd
repnz
jg
jbe
jns
push
push
imul
jns
dec
sbb
popf
adc
mov
mov
lahf
sbb
or
inc
das
mov
mov
shll
fimull
sub
adc
sti
outsb
inc
mov
addr16
push
dec
push
or
je
mov
sbb
pop
leave
insl
mov
clc
sarb
mov
and
mov
jg
cld
iret
jbe
pushf
pop
imul
xchg
leave
sub
imul
sub
pop
ds
xor
or
fwait
shlb
or
insb
push
mov
sub
mov
cmpsb
loop
add
iret
adc
stc
fs
add
sbb
mov
icebp
mov
icebp
inc
loopne
rcll
adc
fsubrl
or
push
jp
cltd
sbb
mov
fs
inc
sbb
sbb
xchg
out
or
pop
inc
scas
cwtl
arpl
fwait
out
outsb
setno
add
or
mov
add
or
mov
push
dec
hlt
rcr
iret
mov
movsl
mov
testb
push
ss
sbb
cwtl
xor
pushf
mov
push
stos
dec
push
dec
adc
lods
xor
pop
fidivl
arpl
xor
outsl
pop
inc
xchg
mov
fcomps
insb
ret
hlt
out
inc
dec
xchg
pop
push
or
test
push
mov
adc
mov
negb
jecxz
sahf
pop
shlb
rclb
nop
adc
cld
jmp
mov
mov
pop
cmpb
jp
lahf
xor
push
sbb
scas
jg
xchg
cmp
jo
push
pop
pop
add
les
nop
mov
les
push
inc
int
iret
and
dec
jmp
dec
pop
mov
test
aas
mov
cwtl
jne
lret
leave
cmp
add
cmp
test
xor
daa
hlt
mov
inc
xchg
icebp
dec
xor
pop
mov
clc
push
rorb
adc
dec
or
mov
and
mov
push
mov
or
icebp
xor
mov
rdtsc
lea
mov
xchg
pop
xor
add
dec
rclb
aas
push
cwtl
inc
sbb
repnz
pop
cmpsb
xchg
push
in
cmp
negb
aam
cmp
push
inc
loope
inc
stc
mov
xorl
push
xchg
adc
out
mov
js
sub
add
mov
mov
cltd
aas
xor
xchg
mov
and
dec
push
sub
sbb
jmp
cs
rorl
sub
sbb
enter
inc
rcrb
fcoml
int
mov
ljmp
push
scas
cmp
ret
iret
adc
sbb
and
cmp
js
in
outsl
sub
cmp
mov
pop
xchg
dec
mov
mov
cmp
scas
mov
test
shr
inc
pop
pop
pop
rep
mov
imul
mov
std
fdivrs
aad
dec
sub
push
inc
or
jne
dec
push
cmpsb
pop
sbb
inc
pop
jno
stos
and
jae
mov
pop
orb
pushf
lcall
pop
jecxz
and
sbb
adc
mov
dec
rorb
cmp
xor
push
pop
loopne
xlat
dec
jecxz
ds
pop
push
sbb
and
pop
repnz
fidivs
out
lods
aas
jl
adc
popf
mov
dec
mov
test
insb
cmpl
in
pop
xor
cmp
and
insb
sub
cltd
js
jmp
sbb
out
sbb
and
fs
aaa
gs
cmp
or
xor
pusha
xor
xor
ja
fmul
jno
inc
dec
mov
in
or
xor
xor
add
or
pusha
je
std
imull
outsl
mov
mov
andl
mov
sub
push
jle
xchg
dec
xchg
jg
and
nop
movsb
mov
adc
into
test
inc
cmp
andl
push
int
mov
push
lret
fnstcw
in
mov
pop
out
incl
lahf
push
jle
add
lock
cmp
lods
sbbb
fs
in
ljmp
mov
fs
stos
mov
in
outsb
mov
add
cmp
and
in
das
xchg
sub
mov
push
lods
cmc
cwtl
arpl
cmp
jle
test
pop
adc
xor
inc
pop
add
mov
shl
xor
sbb
out
xchg
fstp
and
lock
aaa
aaa
shll
fcoml
ret
jmp
cld
cltd
or
xchg
mov
adc
fsubrl
stc
lcall
mov
and
stos
or
in
js
into
lcall
scas
mov
mov
call
lahf
outsl
loope
test
sub
jb
or
adc
orb
mov
dec
add
subl
pop
les
orl
cmpb
inc
fildl
daa
xchg
ret
popf
add
imul
push
js
cld
xchg
ds
add
dec
fnsave
clc
and
mov
lea
jp
add
push
sub
adc
fst
sub
dec
pop
insl
push
nop
loope
jp
lock
pop
bound
cwtl
vmwrite
jno,pt
push
adc
push
sub
lods
sbb
inc
arpl
and
xchg
stc
xor
pop
out
xchg
jge
cmp
and
fstl
pop
push
adc
add
xlat
mov
sub
mov
stos
mov
push
and
xor
push
xor
add
add
dec
ljmp
loopne
test
add
adc
out
mull
inc
gs
sbb
aas
mov
push
bound
addr16
je
repz
xchg
xor
fdivrs
ljmp
push
jno
sbb
push
mov
aad
xor
jl
enterw
jl
mov
in
fmuls
int
push
sbb
out
lods
int3
mov
adc
cltd
adc
jne
cmp
add
mov
icebp
mov
jnp
popa
dec
jle
sbb
sub
and
and
jbe
cmp
aas
outsb
fcompl
pusha
stos
cmp
mov
icebp
ss
mov
cmp
add
rorb
shlb
xchg
mov
sub
aaa
push
or
adc
dec
dec
xchg
inc
adc
ficoml
fisubl
mull
lock
out
sub
and
mov
xchg
push
jnp
test
cld
inc
stc
dec
sbb
sbb
pop
fwait
push
ret
push
cmp
fcomps
aas
cwtl
test
xor
xor
icebp
scas
or
mov
call
cli
push
and
adc
shll
and
and
insl
sbbb
jg
dec
adc
fildll
mov
mov
push
sbb
sbb
or
ss
lcall
hlt
sti
icebp
push
adc
pop
insl
xor
outsb
mov
adc
mov
pushf
xor
movsb
aad
push
pop
add
orl
out
push
push
arpl
mov
mov
mov
pushf
jnp
inc
inc
sub
adc
mov
nop
fsubs
nop
daa
dec
adc
xlat
stos
outsl
out
pop
mov
imul
xor
mov
movsl
ds
pop
mov
out
sub
xor
lods
test
sub
ljmp
cmp
xchg
add
cmpsb
jo
pop
shll
and
push
inc
cmpsb
test
pushf
xlat
push
rcll
jae
push
xchg
popa
xchg
mov
or
cmp
xchg
aam
out
fwait
cli
shlb
arpl
pop
outsl
sbb
test
sub
jo
hlt
adc
or
mov
stos
out
inc
test
fcmovnbe
rclb
push
pop
mov
and
insl
cmp
mov
cmp
mov
sub
and
sbb
bnd
insl
fisttpll
hlt
test
int3
inc
fs
pop
cld
add
ds
enter
sub
test
sbb
repnz
into
inc
or
push
push
xor
scas
std
inc
lret
xchg
jbe
inc
inc
inc
stos
jne
fimull
or
or
notb
and
ret
adc
lahf
ret
add
in
or
pop
push
mov
ds
mov
in
pop
push
xchg
pop
push
inc
popa
jb
jmp
fists
outsl
dec
scas
sbb
push
xchg
push
inc
inc
pop
ljmp
out
sub
or
sbbl
add
mov
xor
aaa
ds
movsb
mov
jbe
and
add
fs
cld
das
call
push
sub
call
stos
daa
inc
sbb
sbb
and
fisubrs
sub
ds
push
fmull
test
xchg
xchg
int3
push
imul
xor
ja
or
inc
cmp
fs
int3
shrb
jl
gs
ror
and
decb
cmc
mov
xchg
stc
cmp
mov
jp
insb
aad
ret
ljmp
adc
test
dec
mov
testl
cmp
mov
mov
push
push
ss
adc
out
mov
sbb
push
cmpsb
or
sbb
push
xchg
push
ficoml
test
sub
ljmp
lds
lcall
push
jg,pt
add
inc
lret
in
sub
jg
inc
push
cs
inc
xor
cmp
jnp
dec
xchg
add
push
jno
xchg
inc
jge
mov
sti
sub
fcom
repnz
dec
inc
outsl
fwait
or
lods
movsl
or
sub
pop
or
jl
out
adc
aam
pop
fmuls
and
mov
ret
add
mov
pop
into
icebp
cmp
cmp
xchg
xor
call
mov
xchg
pop
mov
fldcw
lret
xor
popf
lds
jp
popf
sub
jns
xchg
jl
test
insl
sub
dec
xor
fisttpll
mov
popa
stos
jno
jecxz
xlat
push
push
or
fs
scas
sahf
xchg
pop
xor
loop
insb
sarl
adc
push
das
adcl
jno
outsl
sbb
inc
out
repnz
sub
jmp
ja
jbe
mov
push
sub
mov
movd
loop
imulb
pop
test
iret
stc
adc
imul
jne
aas
loopne
in
aad
xchg
mov
shll
mov
dec
or
push
mov
mov
ds
cmovo
mov
sub
xchg
fisttps
xchg
or
cs
scas
xlat
push
out
sub
cmpsb
pop
mov
or
into
push
neg
test
jmp
adcl
mov
cmc
sbb
push
xor
xchg
int3
enter
mov
lcall
adc
mov
push
and
arpl
mov
mov
lret
cmp
push
rcrl
cmpsb
mov
push
mov
lret
hlt
sub
je
jge
js
adc
xor
dec
loope
xor
aaa
imul
lock
arpl
xor
cmp
std
daa
icebp
pushf
xchg
jge
in
sub
scas
or
push
in
arpl
ficompl
jb
and
sub
or
mov
in
pop
test
in
addb
loope
ljmp
scas
jno
mov
sub
push
xchg
xchg
jle
mov
aas
adc
int
sti
jmp
mov
pop
or
push
lret
jbe
push
lahf
or
jnp
lret
pushf
mov
cmp
movsb
or
or
mov
hlt
jle
fsubl
mov
test
add
out
mov
sbb
divl
jne
add
and
mov
dec
push
mov
lods
inc
or
inc
std
push
das
jmp
fisubrs
leave
jo
pop
outsb
subb
xor
xchg
lods
lcall
push
das
adc
popa
xchg
pushl
sub
stos
loop
cmp
lahf
sbb
sub
dec
mov
movsb
push
adc
lcall
or
dec
fdivrl
test
sub
outsb
adc
inc
addb
xorl
sti
iret
cmp
dec
daa
pop
mov
mov
or
inc
adc
rcll
fistpll
insb
xchg
or
sub
xor
rorl
cld
sub
mov
sub
jmp
dec
mov
repz
into
test
stc
lock
outsl
mov
adc
ss
jb
push
jns
cmpsb
cwtl
fcom
cmp
loop
ldmxcsr
xchg
loopne
jecxz
jns
push
mov
imul
and
pop
dec
test
movl
sbb
and
dec
xchg
xorl
fiaddl
ljmp
in
repnz
ljmp
adc
sbb
mov
mov
lret
fisubrs
mov
shll
or
test
ret
test
sbb
aaa
xor
mov
js
scas
xchg
adc
jae
mov
xor
inc
test
fdivl
adc
out
adc
mov
inc
insb
and
mov
dec
popa
add
imul
ljmp
dec
and
mov
jmp
mov
cmp
repnz
sub
push
xchg
add
dec
stos
adc
sub
push
add
pop
mov
sbb
adc
push
mov
test
add
mov
aam
in
cmpsl
aad
in
sub
push
add
fimull
mov
imul
cmp
sti
pop
out
rep
in
mov
movmskps
in
rcrb
pop
rorb
pop
aad
mul
mov
jmp
adc
mov
fidivl
sbb
sub
add
in
sub
adc
cmp
shlb
add
mov
mov
cmp
in
mov
loope
fnstcw
lods
imul
xor
dec
int3
mov
add
push
add
test
mov
jge
mov
int
scas
jge
icebp
test
lahf
mov
ror
in
lcall
fcmovnb
fnstcw
inc
push
test
int
xor
xor
out
sbb
adc
mov
inc
push
loope
insl
cld
push
call
bound
jmp
jmp
adc
ret
xor
inc
cltd
mov
outsl
mov
iret
movsl
fsts
fisubrs
xchg
xchg
in
lret
cmc
sarb
and
in
hlt
imul
lcall
int3
push
adc
sti
loope
imul
inc
or
dec
inc
popa
aad
jg
test
inc
dec
subb
dec
fcompl
push
cmp
orb
push
arpl
mov
int
test
jno
pop
cwtl
lods
pop
xchg
je
adc
in
mov
jbe
mov
pop
inc
add
add
dec
pop
jl
or
ljmp
loope
shll
hlt
ss
mov
fisubrl
inc
pop
loope
cmp
and
pop
stc
stc
ficoml
mov
xor
lock
cld
jl
nop
pop
adc
lock
shll
mov
popa
cmc
repnz
inc
mov
push
jmp
mov
popa
mov
xor
jns
fcoml
imull
imull
punpckldq
divl
mov
pop
pusha
shl
sbb
add
cmp
not
loopne
and
inc
jne
insb
mov
test
loopne
xchg
testb
shll
idiv
cmc
cmp
mov
push
movsl
pusha
xchg
rorb
ja
ds
out
dec
cmp
popf
mov
sub
in
jbe
pop
in
mov
repz
enter
sti
jmp
inc
cmp
loopne
imul
in
jo
add
aas
add
mov
mov
in
repz
mov
test
pop
iret
sarl
xchg
push
inc
icebp
inc
lahf
mov
scas
mov
stos
xchg
ss
mov
xchg
bound
jo
mov
jmp
jle
cli
pusha
mov
fincstp
add
pop
data16
xchg
fisubl
sub
mov
jmp
dec
lahf
cmc
adc
inc
xor
xchg
faddl
add
aad
add
lret
fs
std
sbb
test
lock
xchg
div
mov
scas
cltd
popa
lcall
imulb
dec
aam
inc
add
push
dec
inc
sbb
fisubl
ficoms
xchg
dec
stos
insb
in
imul
pop
push
and
in
test
pop
insl
dec
popa
add
out
aad
decb
cmp
dec
mov
ljmp
push
mov
ljmp
cltd
mov
adc
iret
mov
stos
ja
fs
cwtl
cld
lcall
insl
adc
cmp
xlat
test
es
mov
iret
or
sarl
inc
inc
shr
ss
popa
cmp
pop
shrl
in
leave
pop
pop
adc
lods
sub
jne
les
lahf
fimull
daa
xor
loopne
popf
cmp
out
pop
push
testl
xchg
pop
adc
call
in
cmp
jmp
jecxz
outsl
cwtl
icebp
loope
rcll
cmc
repnz
pop
stos
shll
into
or
inc
js
ljmp
mov
pop
mov
xor
cli
es
out
outsl
cwtl
das
push
enter
movsb
jb
add
inc
adc
mov
mov
pop
stos
push
fstpt
or
cmp
mov
cltd
das
lea
mov
sbb
insb
push
push
jbe
movsl
push
pop
mov
xor
inc
pop
lahf
dec
daa
jmp
lahf
push
je
adc
imul
inc
out
and
mov
jns
cmp
rorb
test
fmuls
rcr
dec
into
cmpsl
lcall
cld
xchg
pop
mov
push
and
inc
out
xchg
std
inc
pop
out
inc
testl
and
adc
pop
or
rol
outsl
push
push
fwait
pop
stc
and
and
insl
call
ljmp
add
cs
repz
dec
repnz
sahf
push
adc
inc
push
in
sub
cmp
mov
psubsb
maskmovq
imull
mov
pop
mov
mov
rorb
in
popf
or
dec
inc
stos
push
xchg
mov
pop
test
lret
testl
ss
sti
call
lretw
addr16
cmpsb
cmp
mov
dec
push
mov
subb
mov
sbbl
lods
adc
out
pusha
and
rcll
call
ret
in
and
stos
and
jnp
cmp
xchg
fsubrl
and
fisubs
sbbl
mov
and
fdivrl
push
mov
fstps
jb
jnp
dec
sbb
mov
dec
data16
das
out
outsl
outsb
dec
xor
hlt
mov
into
add
mov
add
cmpb
nop
out
mov
sbb
jmp
push
jnp
imul
push
pop
sbb
cmp
inc
mov
ret
inc
mov
push
jbe
ds
pusha
int
pop
dec
insb
movsl
icebp
inc
add
jl
inc
cwtl
cwtl
shrb
popf
repnz
xor
jo
shlb
cmp
cmpsb
add
daa
cmp
outsl
in
jmp
cwtl
arpl
loope
cwtl
mov
and
jae
pop
sahf
add
andb
mov
fstpl
in
repnz
or
and
mov
mov
jne
xchg
nopl
arpl
jl
dec
les
and
xor
mov
cltd
test
and
cmp
mov
or
pop
sahf
push
xor
jp,pt
icebp
add
xlat
int3
push
adc
jg
clc
fdiv
call
popa
and
xchg
loop
stos
sti
jmp
adc
and
mov
bnd
addr16
scas
fwait
mov
mov
jp
iret
adc
pop
cmpsl
rcl
dec
lods
mov
sbb
mov
pop
mov
jmp
or
jae
shrb
dec
sbb
adc
enter
mov
xlat
jmp
test
xor
mov
inc
imul
mov
xchg
mov
cmp
clc
and
in
leave
pop
jb
mov
pop
push
lods
mov
push
repz
cmp
cmpl
int
xchg
lods
push
out
cmp
mov
cmpsl
mov
popf
lret
or
cmc
jmp
xor
jp
repnz
sahf
push
in
into
and
inc
in
add
add
xchg
in
mov
popf
js
fnstenv
loopne
rorb
push
mov
lret
lret
sub
jo
jnp
int
xchg
repnz
shl
mov
decl
xchg
test
nop
int
lret
jne
mov
and
xor
daa
out
aas
mov
xor
xchg
and
jl
inc
inc
jmp
mov
roll
sub
subb
aam
popa
ret
dec
lret
test
ss
push
andb
mov
fmuls
xor
sub
stos
dec
cmpsl
push
insb
ss
nop
in
dec
push
push
subl
lea
mov
fsubrl
ljmp
adc
lret
and
aaa
add
minps
add
cmpsl
inc
push
mov
aaa
cmp
gs
cltd
jp
inc
icebp
jg
pop
pop
scas
cmp
push
adc
cmp
leave
mov
xchg
dec
or
mov
add
subb
iret
popf
icebp
mov
inc
out
leave
fwait
jbe
sub
movsb
xor
sub
nop
stos
adc
addb
pop
outsb
clc
sti
jb
jge
es
shrl
add
daa
and
or
insl
imul
lds
shlb
scas
mov
mov
call
push
mov
cmp
repnz
inc
dec
mov
andl
push
mov
mov
mov
and
imul
adc
icebp
adc
bound
mov
fdivs
jle
je
in
cmpsl
sbb
pop
push
movl
test
lret
bound
stos
into
mov
adc
lock
shlb
push
rcrl
cld
pop
int3
int
xchg
cmp
push
pop
imul
pop
fildl
and
inc
adc
or
call
mov
insl
ja
jns
jge
and
push
add
lods
fidivl
inc
sbb
insb
push
mov
mov
gs
repz
jno
imul
inc
mov
xor
mov
or
call
das
and
movsb
dec
jmp
paddd
stos
xchg
fldl
sbb
sbb
sbb
mov
mov
lahf
cs
sar
orb
xchg
scas
sti
push
xorl
sbbb
or
inc
sub
xchg
jmp
movsb
mov
mov
imul
fcmovb
pop
mov
movsl
mov
insb
jns
or
jb
or
outsl
adc
lcall
add
mov
lahf
mov
or
das
out
dec
fucomip
add
dec
mov
xor
cmpl
shr
and
arpl
inc
xchg
adc
sub
idiv
rol
push
mov
sarb
stos
push
jno
jne
jbe
xchg
loop
xchg
xor
pop
sbb
mov
out
je
daa
inc
insb
cmp
sbb
mov
lea
in
sub
shlb
cld
jo
jo
sub
cltd
push
loope
xchg
pop
add
pop
or
outsb
jne
pop
imul
mov
jg
popa
add
add
ja
jne
sbb
and
sbb
jp
inc
pusha
dec
ficoms
dec
pop
ja
push
adc
mov
or
mov
outsl
repnz
xor
arpl
jmp
jmp
mov
mov
jge
cli
sbb
hlt
inc
jns
fbld
mov
cmp
jg
data16
add
jns
sbb
and
enter
adc
fs
push
and
mov
or
inc
jge
sti
ss
nop
sub
lods
sahf
mov
pusha
mov
push
pop
add
aad
cmp
int3
bound
adc
add
rcll
fistl
mov
lret
push
xor
mov
popf
aas
call
lcall
jbe
jns
outsb
push
insl
in
popa
xchg
lock
push
xor
ret
adc
test
negl
add
push
jo
dec
fimuls
dec
pop
xchg
jl
sbb
pusha
mov
divl
cmp
xchg
push
repnz
dec
xchg
pop
outsl
sub
add
fwait
dec
push
adc
dec
insl
mov
das
xchg
inc
loope
mov
testb
mov
fwait
in
rorb
imul
ds
jb
inc
cld
mov
add
fwait
ds
arpl
and
cld
jb
sahf
dec
mul
sub
cld
outsl
add
mov
jne
pop
push
stos
push
aam
add
pop
hlt
rorl
jno
imul
fs
jmp
sub
nop
mov
rclb
rcll
fsubrp
push
push
inc
lret
push
cwtl
stc
dec
xor
xor
jle
adc
cmp
sbb
popa
add
push
int3
cmp
push
mov
js
dec
ljmp
jne
mov
clc
cltd
cmpsb
push
andb
cmp
aam
stos
ficoms
and
das
inc
or
push
xor
xor
jmp
mov
pop
rcll
daa
jmp
inc
das
push
cs
push
mov
shlb
xor
mov
fstpl
std
push
shrl
test
inc
fwait
out
mov
pop
pop
xor
push
xor
out
cmp
mov
dec
je
add
scas
ds
sbb
sub
popa
and
fwait
mov
das
cmc
pop
add
inc
mov
sbb
push
pop
pop
add
or
mov
in
mov
inc
out
outsl
out
insl
lock
loop
out
pusha
cmp
lahf
sahf
cwtl
dec
inc
xchg
mov
stos
xchg
lahf
xchg
je
lods
lcall
push
fcmovbe
or
jp
push
loope
int3
cmp
lahf
jno
mov
ds
mov
dec
mov
jecxz
in
outsb
mov
fists
imul
lods
pop
pop
gs
push
insl
adc
xor
testb
add
sub
dec
js
mov
repz
icebp
stc
mov
repz
mov
push
cmp
daa
mov
mov
push
mov
dec
mov
rcr
sub
mov
pop
mov
aam
or
pop
jmp
out
mov
jecxz
mov
cmp
scas
mov
or
sbb
pop
pushf
adc
pop
inc
mov
xor
jno
and
and
hlt
push
jns
fs
push
sbb
std
inc
cld
aad
push
push
in
cs
push
in
insb
xchg
iret
push
lcall
cli
shlb
pop
in
sti
dec
loop
loopne
addr16
xlat
shlb
lods
pop
jle
enter
and
out
std
xchg
pop
or
repz
inc
scas
mov
mov
mov
orb
insb
and
add
popa
add
xchg
mov
mov
subl
incb
pop
aad
fstl
sbb
mov
pusha
dec
jne
mov
shlb
sbb
push
xor
movsb
gs
xchg
ret
xchg
outsb
movsb
movsl
icebp
fstps
mov
add
push
inc
aaa
fwait
arpl
test
push
sub
push
cld
cmp
mov
mov
sub
inc
test
fcom
jns
cmpsl
test
mov
lods
fbstp
push
scas
pop
sahf
mov
loop
std
sub
in
inc
push
mov
push
inc
addl
bound
aam
push
lods
adc
pop
shlb
ljmp
fadd
int
cmp
push
xchg
push
push
mov
push
mov
icebp
mov
shlb
ljmp
mov
cmp
adc
push
sbb
adcb
push
and
lcall
adcb
inc
push
mov
push
ja
fdivs
lret
sti
popa
in
pop
sbb
jne
adc
pop
sub
and
cmp
lahf
aam
sbb
shrb
mov
lods
jecxz
mov
out
and
outsl
test
std
xor
in
adc
insl
sbb
cmp
jecxz
xor
sbb
mov
sarl
xor
dec
mov
dec
xchg
mov
cwtl
sti
rclb
bound
cltd
call
cltd
test
pop
push
xlat
in
adc
popa
inc
inc
movsl
nop
jnp
pop
dec
jp
dec
inc
test
pushf
ds
sarl
scas
loopne
adc
pushf
lock
cli
xchg
push
aas
push
pop
and
xchg
stos
daa
or
fs
outsb
dec
and
movsb
cmp
sbb
jns
scas
pop
push
pop
jae
jnp
cmpsl
mov
jl
xor
and
jb
cmp
xor
jns
insb
sbb
mov
inc
push
mov
cmpsl
pusha
cmp
push
repz
shufps
and
dec
popa
mov
das
and
xchg
in
cmp
push
je
shlb
jns
jge
cmp
lods
enter
les
fs
repz
inc
and
xchg
dec
jl
cld
mov
shll
jp
jg
test
or
outsb
or
pop
fwait
out
in
testl
inc
mov
or
jo,pn
fistl
jb
jge
movb
add
pusha
jmp
pusha
mov
xchg
lret
out
push
push
int
repz
inc
lahf
pop
pop
mov
into
cmp
cmpsl
test
jecxz
rcll
imul
jo
andl
push
inc
push
test
push
mov
adc
xor
mov
in
dec
xchg
inc
and
lock
push
xchg
sbb
ljmp
mov
add
jb
jl
movsl
pop
leave
adc
ss
pop
jae
test
mov
jnp,pn
bound
push
aaa
and
movsb
inc
sbb
adc
cmpsl
movsb
cltd
sbb
sbb
adcl
push
add
push
mov
addr16
cltd
mov
daa
xor
ja
push
mov
mov
push
dec
inc
adc
inc
adc
cmp
jp
add
aad
mov
jae
and
jns
pop
pop
ror
xor
insl
xchg
lret
incl
jge
aas
mov
mov
jmp
stos
pop
inc
dec
pavgb
push
ficomps
inc
fstpt
cs
mov
pushf
ja
cmpsl
push
sti
dec
cmp
je
lds
lahf
int
pop
movsl
pushf
lcall
lods
inc
adc
jns
jmp
dec
and
mov
sarb
inc
aam
enter
push
and
jle
lock
outsb
dec
dec
adc
jmp
xchg
mov
jge
inc
stos
xor
imull
addr16
lock
popf
scas
enter
sbb
cltd
sarb
in
outsl
push
mov
mov
push
push
adc
jge
inc
mov
xor
fldt
aaa
scas
lods
cmp
inc
mov
pushf
cli
divb
mov
pop
pop
imul
push
mov
aaa
xor
popf
test
out
repnz
dec
xchg
negw
cmp
push
sbb
add
out
xchg
aad
sarl
sub
insb
mov
cmc
or
mov
loope
sti
mov
daa
das
pusha
pop
and
outsb
sahf
setbe
in
push
hlt
push
inc
pop
out
cmp
movsl
pop
adc
out
cli
fisttps
sysexit
mov
push
pop
call
call
mov
jecxz
cld
or
andb
inc
xchg
stos
sbb
mov
dec
repz
movsl
arpl
insb
xchg
pop
stc
out
sbb
xor
ss
jg
scas
sub
inc
or
pop
pushf
sub
outsb
pop
ljmp
notb
mov
cmc
popa
repnz
adc
adc
mov
sbb
mov
hlt
lahf
mov
imul
or
lods
shlb
js
daa
rcll
out
cmp
adc
mov
cmp
lret
inc
dec
pop
pop
sub
ret
sbb
fistps
pop
mov
or
jb
add
and
sbbb
int
push
aas
dec
sbb
mov
pop
loope
aas
jne
lret
mov
xchg
lahf
aam
fs
in
stos
or
jb
jbe
pop
rorl
push
sbb
sbbb
mov
cwtl
aaa
xlat
int3
cmp
mov
sub
cmpsl
mov
out
or
xor
and
add
xor
and
lcall
jge
clc
dec
or
clc
inc
jno
pop
sub
xchg
ds
inc
jmp
mov
mov
imul
mov
jo
mov
xchg
sahf
fwait
insl
mov
cs
xchg
sub
fstpt
cmp
outsl
pusha
fdivrp
or
imull
icebp
jp
rcr
in
call
test
shlb
xchg
cmpsb
dec
or
cmp
stos
inc
dec
fdivp
int
sub
scas
sbb
mov
jns
sub
jae
das
sbb
idivb
sbb
stos
or
lahf
ror
inc
mov
dec
adc
cs
rorb
arpl
sbb
push
sbb
and
fnstcw
sub
sti
jns
xor
mov
cld
xor
inc
push
sub
push
cld
mov
sub
call
push
fdivrs
dec
pop
les
or
cli
pop
dec
ja
or
shrl
adcb
or
ljmp
push
rorl
cmp
pop
pop
sahf
outsl
movsb
es
jb
xor
pusha
pop
lcall
xchg
cmp
pop
and
add
leave
sti
mov
mov
add
out
push
push
movsb
pop
hlt
movsl
xchg
or
bound
sbb
mov
in
push
jno
and
pop
popf
push
out
jb
cmp
or
std
out
cs
ret
xchg
addr16
push
sub
mov
ret
ret
test
mov
repnz
pop
add
xchg
add
jg
or
cmpsb
push
or
jnp
outsb
adc
and
outsb
xor
push
xchg
jmp
sbb
mov
jae
pop
pop
bound
aam
xor
mov
jmp
hlt
outsb
and
shlb
cmp
push
sub
mov
ret
dec
cmp
sbb
push
mov
nop
sub
cli
push
sbbl
test
stos
jo
xor
push
test
xor
std
mov
mov
aad
xchg
mov
pop
out
add
jl
mov
jo
icebp
dec
fst
jle
addr16
sub
cmp
bound
or
sbb
arpl
mov
pop
test
sbb
sbb
push
stos
sub
mov
sbb
pop
sbb
minps
mov
mov
fadd
xchg
das
push
sub
std
sbb
jnp
ds
xor
mov
icebp
addl
and
cmp
outsl
jo
mov
mov
sbb
fs
lret
lock
xchg
pop
or
pop
push
pop
out
test
icebp
sub
addr16
pop
into
push
cld
and
mov
xor
lret
mov
rcll
pop
jne
ljmp
push
xchg
mov
and
sbb
cmp
sar
popf
push
push
aas
xchg
in
jmp
mov
add
mov
push
add
mov
add
jmp
adc
adc
xchg
filds
in
loope
sub
call
mov
daa
test
mov
movsl
loope
push
es
fs
rcrb
xor
dec
dec
cmp
daa
dec
sub
push
push
neg
jg
std
pop
lahf
or
inc
jnp
cmc
into
add
mov
sbb
lds
mov
lds
bound
fdivl
xchg
push
or
in
sbb
mov
mov
xchg
push
ret
repz
dec
sub
jl
stos
dec
jb
rorb
mov
out
daa
xchg
lret
xor
loop
je
fistpl
xor
dec
xchg
and
aaa
xchg
pop
dec
jnp
ljmp
xchg
gs
sub
test
mov
pcmpgtd
out
in
cmp
push
xor
lcall
pusha
jbe
loop
sahf
lea
mov
test
xchg
test
fisubs
pop
adc
leave
in
popf
insl
ficompl
dec
pop
ss
and
jl
push
pop
jle
dec
movq
inc
lock
jg
insb
lds
pop
scas
ret
daa
mov
popa
xor
inc
jg
ficomps
lret
push
aas
mov
out
dec
je
push
popf
fcmovu
jae
insl
jo
ja
or
nop
jl
lret
arpl
add
insb
out
scas
inc
out
popa
lods
push
cmp
dec
arpl
push
jecxz
imull
cmp
mov
roll
fisubs
testb
dec
ja
test
loopne
dec
adc
cmp
icebp
lods
jb
xchg
sub
arpl
repnz
icebp
add
mov
stos
stos
test
or
fiaddl
fldl
cmp
mov
jno
xor
cltd
lahf
pushf
lahf
cmpsb
push
ds
sub
and
jp
ja
mov
add
test
enter
pop
cmpsl
mov
imul
mov
lods
call
mov
jl
sub
loop
insb
mov
mov
out
das
and
into
insl
into
push
rcrb
pop
aam
loopne
or
adc
pop
ss
pop
fidivl
fcoms
fcomps
inc
xchg
push
int
xchg
div
fildll
dec
repnz
or
rep
jmp
push
xorl
sub
fiaddl
aad
movsb
xchg
daa
mov
lret
out
dec
and
outsb
jg
arpl
xor
jmp
testl
movsb
mov
std
jecxz
test
cmpb
cli
mov
das
xchg
das
and
shll
inc
mov
jp
inc
fdivl
xor
movsl
mov
loopne
out
xchg
jns
icebp
mov
and
or
adc
xchg
mov
sbb
call
sbb
inc
add
push
and
dec
pop
mov
in
popa
sar
pop
mov
repz
int3
jp
cmpsl
lds
push
mov
cld
sub
mov
xchg
sub
add
or
adcl
movsb
mov
or
and
xor
mov
mov
push
sbb
leave
rclb
fadd
dec
fistpll
in
and
adc
jp
clc
subb
loope
dec
jle
in
mov
insl
shlb
fdivs
and
nop
and
cld
and
mov
lods
shll
push
xor
dec
mov
mov
test
adc
push
shll
mov
fadds
leave
add
bound
jae
push
clc
call
or
out
adc
fwait
mov
jbe
xlat
call
xchg
mov
and
repnz
orb
addl
mov
loopne
mov
push
mov
test
pop
icebp
push
mov
enter
inc
aas
imul
and
pushf
out
push
fdivs
sbb
fstpl
repnz
sbb
mov
xor
js
mov
aaa
adc
shr
into
xchg
sub
data16
pop
push
dec
inc
adc
jl
mov
mov
sahf
pop
pxor
mov
shrb
cmc
fstpt
jns
aad
es
pop
jle
aam
cmpsl
pop
outsl
pop
jbe
push
pop
bound
mov
loopne
mov
and
cmp
fadds
mov
jl
mov
jns
jae
das
fwait
aad
xlat
mov
roll
sbb
fisttpll
rcl
jb
dec
pop
add
mov
mov
cmp
shll
cmp
nop
sub
sub
cmp
pop
mov
in
je
cmpsb
add
in
orl
in
rcr
daa
enter
mov
dec
cmp
rcrl
ds
aam
push
les
leave
push
inc
scas
dec
in
inc
inc
mov
lret
pop
ss
inc
int3
cs
bound
fidivs
inc
aam
rcrl
sbb
shl
lahf
lret
and
sbb
fs
aas
push
or
outsl
push
pop
insb
mov
jp
xchg
les
push
sbb
dec
into
add
xor
pushf
push
adc
arpl
arpl
and
jnp
pop
inc
fimull
sahf
sbb
testl
loopne
cmp
sub
xchg
pop
movsb
sbb
mov
xor
sbbb
movb
lods
test
xor
lds
das
cltd
sub
outsb
jle
repnz
gs
arpl
fwait
push
mov
orl
sarb
arpl
out
pop
stc
xor
pusha
lea
push
cmp
mov
test
fdivrs
adc
test
add
ficoml
push
fsubrl
hlt
arpl
sub
pop
push
xchg
dec
icebp
cmpsl
and
cmc
pop
pop
or
mov
pop
cmp
bound
fldl
cmp
test
testl
pop
iret
arpl
shll
xchg
test
adc
pop
dec
cs
dec
inc
xchg
aad
jl
dec
fsin
sahf
add
jnp
push
cmp
dec
daa
into
xor
sbb
xchg
lods
pop
pop
mov
dec
dec
sarl
sbb
push
loop
lods
scas
fisttps
dec
mov
mov
xchg
fstpt
push
cmp
sbb
adc
sub
aas
stos
pop
mov
add
fldl
push
rcrl
push
lods
bound
or
stc
mov
jle
stos
clc
mov
jmp
cltd
fld
mov
data16
or
mov
mov
jmp
xor
sub
push
test
xchg
push
imul
xchg
pushf
mov
cmp
or
mov
subb
pop
mov
adc
cmp
hlt
lcall
pop
mov
iret
roll
loop
or
in
xchg
into
cmp
stc
adc
and
dec
mov
int3
insb
scas
mov
mov
rcrb
mov
idivb
mov
jge
inc
jbe
inc
sub
movsl
and
sar
jns
jge
jns
js
popa
and
jb
adc
ret
sbb
mov
stos
pusha
shlb
mov
mov
fcoms
int
shr
push
sbb
stc
inc
cmpsl
movsb
in
sub
jmp
inc
movsl
nop
hlt
lret
dec
adc
sub
jnp
and
jae
push
je
sarl
imul
bound
add
and
lds
outsb
sub
arpl
hlt
adc
xchg
test
inc
push
xlat
dec
addr16
ljmp
dec
xchg
sti
iret
popf
hlt
daa
add
jnp
jecxz
xchg
ja
xchg
inc
jae
test
pop
shrb
fdiv
dec
dec
mov
fs
sbb
push
mov
push
lret
popa
out
dec
repz
sbb
aam
xor
mov
fldl
push
pop
cmp
cmpsb
mov
pop
out
mov
or
xchg
lods
enter
jbe,pn
push
sub
bound
and
es
mov
push
mov
sbb
jp
das
dec
nop
cmpsl
xchg
xchg
in
stos
xchg
pmulhuw
pop
xor
repnz
mov
fs
mov
xchg
sub
dec
outsl
jmp
movsl
lret
sahf
sub
ret
or
sbb
sub
mov
ret
pop
or
pop
jmp
jg
mov
adc
std
xchg
xor
add
popf
enter
negl
or
jle
sbb
arpl
pop
lods
add
fs
mov
jecxz
test
fsubrp
xor
and
xchg
jmp
jbe
mov
xor
jnp
out
push
mov
add
sbbl
xor
lcall
dec
shlb
mov
outsb
insb
gs
mov
or
sub
mov
mov
fldl
lock
loopne
cwtl
lret
adc
fildl
inc
bound
lret
int
and
pop
movsl
cmc
in
inc
or
imul
std
sub
stos
nop
sbb
push
outsb
mov
cmp
sub
sub
mov
aad
inc
bound
xchg
icebp
push
outsb
aas
popa
mov
outsl
adc
and
cld
sbbb
xor
mov
inc
fwait
mov
loopne
xor
push
in
xor
xor
out
aam
lcall
das
pop
iret
pop
ss
add
leave
add
mov
es
cmp
push
insl
jle
dec
stc
test
xor
mov
mov
xchg
mov
in
cmp
lahf
fisubrs
sbb
loopne
xchg
pop
mov
lock
cltd
mov
xor
sub
dec
mul
out
jae
add
mov
inc
inc
fstpl
inc
out
andl
popa
push
std
dec
jle
xor
imul
xor
and
int
jmp
add
pop
jg
mov
testl
jb
jnp
and
arpl
and
mov
cmp
pop
popf
test
xor
or
mov
enter
jns
adc
inc
jmp
inc
xchg
xchg
cmpsl
cmp
pop
fldt
stos
movsb
add
adc
sub
loop
fs
loop
xchg
mov
mov
inc
push
ficomps
dec
ds
mov
push
lods
cli
dec
mov
cmp
inc
movsl
out
mull
insl
mov
ja
out
pop
add
and
in
cmp
jl
shlb
mov
rorb
scas
cs
sarb
out
shlb
jp
jb
mov
jmp
insl
xchg
lahf
sbb
addr16
sub
jp
ljmp
dec
mov
gs
push
and
testb
pop
imul
cmpsb
in
stos
mov
pop
pop
adc
mov
jno
adc
or
leave
inc
lret
xor
push
mov
cmp
mov
dec
mov
or
data16
or
jnp
adc
sub
lret
jg
lds
pop
dec
loopne
ja
pop
imul
adc
mov
dec
and
jne
sarb
sbb
mov
jmp
mov
ss
test
sahf
sub
jo
shrl
sub
cmc
in
pop
imul
inc
push
pop
and
xchg
pop
push
xor
out
push
jbe
mov
scas
rcll
outsl
test
ret
mov
or
add
or
data16
testl
mov
cmp
push
or
add
add
mov
mov
test
rcrb
lods
sti
jns
inc
gs
sbb
rcr
enter
cmp
cvtps2pi
pusha
push
mov
movsb
outsb
mov
add
push
xorl
cwtl
jno
dec
push
outsl
dec
out
lcall
leave
inc
je
pop
fisttps
ficoms
leave
mov
adc
enter
leave
dec
js
clc
fisubrl
pop
inc
insl
pop
push
outsb
in
adc
inc
adc
push
gs
or
push
js
jg
lahf
sbb
jno
ds
mov
test
adc
stos
mov
dec
xor
inc
jnp
enter
dec
cltd
xor
fstpl
cmpsb
je
and
enter
in
xor
jo
adc
pushf
andb
dec
mov
inc
add
roll
sbbb
adc
push
jp
mov
outsb
mov
aad
lret
ret
mov
lret
movsl
repnz
xchg
pop
out
sub
mov
push
pop
inc
xchg
cld
adc
or
int3
popa
inc
mov
hlt
push
xchg
clc
push
adc
mov
ret
lods
mov
shr
rcl
sbb
imul
mov
cli
mov
mov
cmovs
in
jae
hlt
sbb
aam
sbb
cmc
jo
bound
adc
movsl
cli
ja
pop
xor
dec
mov
pushf
fs
stos
mov
xorb
cmp
dec
adc
xor
repz
adc
ljmp
cmp
jp
adc
jmp
out
icebp
scas
scas
faddl
addl
sbb
lea
out
ret
pop
sti
icebp
mov
cmpsb
mov
rolb
aam
out
mov
outsb
gs
dec
loop
push
mov
int3
mov
fsubs
ja
sub
jge
bound
add
inc
jns
mov
sbb
mov
sub
xchg
in
rorl
dec
out
push
test
nop
mov
add
movsb
mov
enter
sahf
xchg
sub
inc
aad
fs
push
add
mov
sarb
jb
inc
xchg
cmpsb
mov
xchg
lods
adc
fsubr
sub
adc
movsb
insl
add
test
mov
inc
xchg
xor
sbb
pop
jp
fcomps
mov
sbb
mov
jb
ror
popa
xor
aaa
mov
cld
int
mov
jae
shll
pop
mov
sti
jle
shr
mov
mov
pop
stos
iret
addr16
cmc
fmuls
add
shlb
stos
mov
sbb
ret
fcomps
and
sub
rolb
test
int
or
nop
cmp
pusha
mov
xchg
push
sbb
push
outsl
mov
incb
dec
ja
and
push
lock
mov
ds
outsb
sub
ficoms
mov
jbe
push
fidivrs
in
jae
add
mov
mov
into
das
mov
daa
pop
xchg
pop
repz
shrl
movsb
loop
lret
sarb
rolb
aam
out
mov
xor
add
popa
or
or
cmp
sbb
cltd
insb
jp
addr16
into
nop
aaa
mov
fwait
jle
in
ds
xchg
call
pop
cmpsl
fnstcw
xor
cmp
insb
or
adc
sbb
push
shll
fidivl
scas
sbb
sub
jbe
cmpsb
js
mov
repz
cmp
mov
pop
mulb
rcrb
push
dec
lret
jmp
push
mov
mov
fidivs
lock
adc
jmp
into
jl
mov
cmp
dec
nop
mov
mov
das
adc
push
push
cmp
sarl
lock
and
sub
lret
js
push
dec
pop
in
inc
mov
shl
or
jle
xchg
push
push
push
inc
aam
fsubp
int3
inc
lea
mov
cmp
aaa
inc
test
sahf
imul
divl
and
cld
push
roll
push
mov
stc
inc
mov
cltd
push
mov
pop
sbb
int
ss
stos
testb
mov
adc
in
mov
lret
cmp
cmpsb
ret
push
xlat
fistl
pop
call
std
jbe
out
mov
xor
enter
pop
repz
int
mov
push
xor
ljmp
lahf
jge
cmp
sub
lea
push
lret
pop
decb
jmp
xchg
mov
push
push
loope
iret
sbb
pop
movsb
scas
insb
xchg
lods
or
arpl
clc
cwtl
pop
sbb
mov
pop
lret
divl
xor
or
mov
shrl
sbb
sub
pop
in
shll
sub
push
sbb
addl
fldt
popa
pop
sti
cmp
cmp
and
xchg
mov
test
mov
mov
jno
std
outsl
rorl
mov
push
imul
bound
xchg
rcrl
imul
jp
adc
decb
pop
push
shll
xor
int3
cmp
xor
mov
dec
adc
loope
fxch
cs
nop
fs
fwait
pop
sub
dec
sub
jno
ficomps
lds
xchg
daa
jae
push
push
mov
xchg
lret
cmpb
es
mov
icebp
push
jno
lods
mov
imul
mov
cs
bound
or
push
dec
dec
popf
mov
sbb
xor
sti
jge
jp
insl
or
pop
aaa
unpckhps
cmp
repnz
and
loopne
pop
adc
pop
or
and
aaa
xor
inc
adc
xchg
fdivrl
shlb
push
cld
adc
cmovp
scas
pop
push
or
pop
ret
mov
jle
and
cmp
out
repnz
sbb
mov
and
inc
pop
jbe
adc
cmp
adc
inc
add
mov
fucomi
dec
imul
iret
xor
sub
and
jo
jge
out
out
add
push
adc
mov
push
icebp
xchg
out
ret
out
pop
sti
and
sahf
mov
repnz
lret
cmp
stc
ljmp
cmp
fsubrs
enter
xchg
dec
lret
add
xchg
pop
into
pop
clc
ss
push
sbb
rcrb
mov
scas
fstps
dec
ja
in
mov
pushf
pop
dec
scas
mov
pop
mov
icebp
jo
and
lahf
or
add
sub
mov
bswap
ljmp
xor
lods
mov
sub
cmp
cltd
inc
sahf
not
lock
inc
mov
sti
test
lods
fisttps
and
pusha
sub
xchg
jae
icebp
popf
sbb
mov
jl
insl
mov
clc
push
mov
addr16
jbe
aas
out
lret
xor
divl
cs
pushf
pop
push
cltd
js
sub
sbb
ds
mov
cmp
mov
roll
sbb
mov
mov
andb
pop
sbb
xchg
mov
cmp
cs
fisttpl
mov
mov
xchg
pop
sahf
ja
adc
cmpsb
scas
mov
sarb
loop
fwait
and
or
xchg
dec
jb
enter
dec
jmp
test
push
testb
mov
jno
xor
jge
inc
push
fwait
in
sub
dec
and
inc
adc
mov
cld
movsl
dec
sbb
pushf
dec
loope
fstpt
dec
mov
orb
mov
leave
push
sub
push
test
mov
or
jge
cld
stos
hlt
movsl
xchg
int
out
insb
nop
ficoml
out
jecxz
jns
pop
nop
push
and
xor
mov
xor
push
or
nop
sub
sti
int3
lods
xchg
pop
xor
xor
or
dec
add
add
add
jae
stos
mov
cmpb
popa
jno
adc
pusha
sbb
xchg
shl
std
jns
cmp
cmp
aam
push
lcall
xchg
addl
adc
pop
and
je
xlat
lcall
sti
mov
lret
inc
ds
inc
add
cltd
insb
rclb
pop
push
mov
mov
insb
adc
cmpsb
negl
rorb
into
mov
sbb
jb
sbb
fildl
lcall
das
es
movsb
inc
push
test
xchg
and
mov
mov
std
jae
pop
rcll
mov
popa
push
cs
rclb
mov
adc
push
gs
test
out
test
sub
adc
mov
mov
clc
adc
jl
push
sbb
fisttps
jl
xchg
jno
jp
into
sbb
add
pop
ja
cmp
or
les
pop
xor
xchg
lcall
mov
clc
mov
ret
mov
inc
cmp
shll
rcll
adc
lahf
and
jl
dec
movsl
cmp
pop
popf
jno
cmp
sbbb
dec
or
push
lahf
push
popa
mov
js
in
add
add
fdivrl
popf
fcmove
xchg
jg
cmp
pusha
scas
adc
xchg
xchg
loopne
stos
or
xor
incl
sbb
ret
dec
xchg
fiadds
mov
and
fs
xchg
into
mov
add
mov
fsubp
mov
push
mov
sbb
adc
lods
andb
ds
lahf
xor
inc
xor
std
and
adc
dec
iret
fidivrl
cmp
cmpsl
or
sbb
adc
leave
push
enter
shrb
jne
fld
icebp
cmp
mov
insb
sar
in
fisubl
aam
pop
loopne
push
or
pop
add
rcr
movsb
mov
xor
push
neg
push
pushf
xchg
rcll
and
dec
popf
test
mov
cmp
out
cmpsl
jne
lds
jg
das
mov
push
dec
push
lret
mov
mov
lcall
shll
test
stos
push
mov
fcomps
push
or
shlb
or
and
jge
xchg
mov
ds
outsb
inc
shll
xchg
sub
push
repz
mov
stos
pop
pop
and
push
enter
jge
cmp
iret
and
out
cmpsl
pop
or
cmc
cmp
in
daa
stos
push
test
mov
cmp
or
ret
and
cwtl
cwtl
mov
adc
pop
push
xor
xorl
es
pop
cld
ljmp
cs
cs
in
scas
mov
add
fldcw
push
inc
ret
loope
or
mov
add
dec
sbb
cwtl
in
aam
sub
pop
repnz
loop
cli
adc
call
xchg
jp
jae
aam
dec
mov
pop
insl
flds
insl
fstps
je
in
or
hlt
xor
cmp
lods
in
xchg
mov
cmp
aaa
sbb
xor
or
jns
outsl
sbb
push
aad
sbb
jp
and
adc
je
inc
enter
jo
adc
mov
int3
mov
aaa
xchg
cltd
inc
pop
std
lret
cltd
cs
sbb
push
jge
cmp
test
jmp
xchg
jb
cmpb
mov
dec
jg
cmp
andl
loopne
or
dec
inc
push
scas
pop
or
insl
mov
in
jmp
dec
add
sahf
gs
xchg
pop
fisubrl
negb
fstpt
inc
or
vorps
add
xchg
pop
hlt
dec
mov
arpl
xchg
sub
pop
repz
mov
in
fs
and
mov
lea
cmpsl
mov
jns
jns
movsl
pop
lcall
pop
in
pop
test
fiaddl
jnp
sahf
lret
push
fstl
xor
rorb
push
add
mov
xchg
cld
sbb
jle
lods
mov
imul
je
pop
mov
push
xor
adc
cwtl
js,pn
push
push
sbb
mov
cmpsb
mov
jne
inc
push
or
das
push
sbb
ret
leave
and
daa
cli
or
fucomi
inc
sahf
lcall
fists
xor
decb
sbb
jp
dec
data16
xchg
mov
pop
shrl
call
movsb
jmp
mov
cmp
add
inc
xor
jp
inc
jg
add
ss
call
pop
sub
jns
mov
das
pop
stc
jno
hlt
mov
push
sarb
sbb
enter
mov
xchg
mov
sbb
lahf
jl
ljmp
pushf
cmpsb
cmp
mov
xchg
sub
dec
lods
fisttpl
adc
mov
push
aam
outsl
rcll
lods
test
push
addr16
adc
pop
stc
popf
mov
xor
mov
adc
sbb
in
sub
inc
rcll
pop
sbb
test
mov
xchg
jns
cmp
xchg
test
jbe
pop
mov
adcl
popf
mulb
adc
aaa
jmp
fwait
and
xchg
mov
mov
jge
dec
loopne
in
fs
dec
sbb
outsb
stos
bnd
cmp
xchg
jge
mov
and
add
fwait
pop
push
stos
xchg
jbe
cld
icebp
push
or
pop
inc
ss
or
ficoms
dec
enter
xchg
mov
pop
aad
inc
push
test
sti
jmp
jmp
gs
test
add
sbb
movsb
cmpsb
or
divb
mov
ljmp
das
hlt
mov
out
mov
cmp
addl
addr16
pop
dec
dec
push
xor
bnd
push
cmp
ror
push
mov
jecxz
das
dec
outsb
fldt
repz
mov
push
lcall
insb
pop
jno
fnstcw
outsb
or
enter
in
movsb
sub
dec
add
test
call
sti
mov
int3
dec
cmp
rorl
nop
out
shll
jl
push
mov
adc
jnp
sub
jns
bound
push
adc
cmp
into
mov
xchg
add
mov
popf
and
out
add
jae
sbb
stos
in
sahf
cmpsb
mov
and
xchg
inc
add
pop
sbb
jecxz
shll
and
xlat
or
mov
or
cmp
adc
xchg
dec
into
jmp
xor
insb
call
sbb
jae
lcall
imul
fisttps
lds
lock
lock
mov
sbbb
jbe
mov
dec
sub
int
pushf
jmp
xlat
jns
shlb
adc
out
push
test
mov
leave
xchg
jle
cmp
cmpsb
sub
adc
sarb
inc
push
mov
gs
cmp
xchg
cmp
adc
mov
cmc
cmp
inc
push
and
cmp
mov
inc
xor
sub
mov
mov
push
cmp
icebp
js
int3
push
push
in
and
xchg
add
push
xorb
lcall
sub
push
call
pop
xlat
lods
je
hlt
lahf
sbb
add
xorl
shll
adc
push
inc
mov
push
fs
xchg
out
xchg
fbstp
lea
mov
fwait
adc
call
fsubrp
pusha
fwait
cmp
sub
xchg
dec
pusha
shr
mov
pop
jno
dec
mov
pusha
sbb
sahf
xchg
nop
cld
sub
aaa
sbbl
push
push
and
pop
testl
ficompl
int3
mov
ud1
loope
out
je
fisubl
sub
sbb
aad
or
or
pop
mul
push
inc
imul
pop
lods
leave
xor
push
mov
popa
push
xchg
pop
mov
into
cld
fsubrs
ret
mov
popf
or
jecxz
mov
sub
inc
and
jno
fcmovb
mov
adc
call
pop
mov
lret
jbe
es
dec
jns
pop
mov
push
cli
sahf
xchg
cld
arpl
in
imul
pop
pop
iret
pop
out
out
xchg
out
jb
outsb
rcl
mov
loope
popa
lcall
jp
sub
popf
sti
jne
mov
lret
xor
js
out
mov
cmp
shr
jb
int3
mov
mov
sti
cmc
std
shll
push
dec
sub
roll
fcoml
xor
add
lahf
out
adc
add
dec
mov
or
insl
cmp
leave
mov
xor
ja
dec
jge
outsl
pop
lods
sbb
andb
mov
popf
imul
outsl
lods
ret
negl
mov
bound
movl
out
adc
test
or
mov
out
push
lcall
mov
push
repnz
hlt
loope
cmp
das
js
nop
ljmp
imul
push
imul
sbb
mov
jp
push
pop
iret
arpl
add
sbb
push
lcall
adc
sbb
push
sub
popf
leave
add
shufps
mov
cwtl
xlat
sbb
dec
dec
fstl
pop
sbb
mov
cli
mov
mov
xchg
inc
gs
dec
cmp
adc
cmp
dec
sub
push
je
inc
je
sbb
jnp
aaa
mov
push
rcll
mov
negl
cmp
test
out
mov
ja
movsl
rorb
pop
rorl
mov
inc
cmp
mov
imul
mov
outsb
jge
xor
movsl
dec
lret
inc
pop
pop
pop
cld
push
pop
fimuls
push
aad
mov
in
jnp
cli
pop
push
test
and
xor
cvtdq2ps
in
dec
sub
mov
movsl
in
cmp
lods
repnz
dec
adc
push
push
ss
outsb
sbb
adc
pop
addr16
sbb
cmp
xchg
sbb
mov
and
fs
add
int
adc
lahf
ds
cmp
adc
call
xorl
adc
mov
fcompl
sbb
fisubrs
mov
into
cmpsb
jnp
or
imul
jle
out
push
dec
jp
pop
lods
popl
xchg
push
add
sub
imul
cld
adc
pusha
icebp
jmp
in
mov
fisubrs
jp
in
lea
pop
adc
imul
mov
mov
push
fmuls
lahf
sub
ja
out
xor
push
dec
in
mov
int3
das
lcall
je
add
cmp
pop
movsl
out
sbb
mov
dec
mov
push
adc
mov
ffree
cmp
cltd
pop
adc
f2xm1
xchg
jbe
jl
jns
pushf
rolb
rorb
cmc
mov
fildll
inc
or
in
or
rolb
adc
rcll
adc
inc
pop
inc
stos
mov
jecxz
in
push
in
inc
push
xchg
xor
sbb
outsb
cld
cmp
jecxz
pop
je
in
negb
sbb
mov
xchg
jg
jp
stos
aad
or
in
shlb
das
sti
mov
stc
mov
sbb
mov
pop
addl
scas
dec
fldcw
push
push
pop
inc
jae
mov
shl
add
loop
cmpsl
ljmp
jo
scas
jl
pop
cmpsl
inc
sub
and
mov
popf
rorl
push
cmpsl
adc
cli
jge
pusha
dec
lahf
xor
aad
movsb
jne
aaa
dec
fcoms
sbb
lahf
xor
test
sahf
push
mov
xchg
xor
mov
jne
push
jnp
and
mov
clc
mov
jnp
test
lods
ret
scas
in
inc
or
jne
bswap
pusha
lds
mov
fiadds
or
xorl
lock
loop
mov
sbb
or
dec
stos
stos
sti
lods
lcall
mov
out
push
imul
dec
dec
ja
jge
test
dec
lahf
push
cltd
jnp
push
mov
insl
or
or
insb
lcall
pop
push
push
dec
int3
mov
pop
aas
pop
adc
into
hlt
jl
sub
popa
movsl
and
sbb
jecxz
testb
and
scas
ds
mov
addl
push
test
mov
cmp
popf
jno
out
leave
push
sub
fbld
icebp
aam
mov
sub
sub
adc
jmp
imul
fwait
call
cmp
stos
movsl
pop
add
mov
loopne
add
imul
push
and
mov
cmc
repz
xchg
push
ja
mov
sub
testl
mov
outsb
or
sbb
adc
mov
dec
out
xchg
lds
lcall
nop
test
dec
inc
and
insl
cmp
inc
adc
xchg
iret
or
adc
loopne
mov
add
mov
xchg
out
sbb
sub
pop
jne
je
xor
outsb
fwait
jne
int
insl
jecxz
ret
mov
sbb
sbb
sub
aas
fimuls
mov
cmp
sbb
cmpsl
xchg
mov
and
push
mov
imul
jecxz
mov
or
push
clc
insb
mov
mov
popf
icebp
mov
cmpl
push
mov
icebp
dec
add
or
or
dec
lea
adc
or
out
int
xor
outsb
rcrl
in
lods
cmpsl
das
out
push
mov
mov
fsubrs
scas
in
out
xor
gs
mov
xchg
or
add
mulb
jnp
mov
push
push
inc
pop
pop
daa
and
mov
jne
jbe
inc
andb
and
sub
mov
or
add
mov
add
scas
testb
rcll
in
loopne
add
and
out
fcompl
cmc
pop
insw
cmp
dec
xchg
mov
aad
inc
mov
add
stc
repz
aas
shll
mov
out
xor
test
insl
xchg
push
jg
movsb
add
fs
dec
add
ljmp
jmp
call
jg
ret
setb
or
xchg
or
push
imul
es
mov
xorl
cmpsl
jl
or
cmp
xor
jno
lods
lret
cmpsl
test
int
inc
aaa
dec
mov
cs
shl
hlt
addr16
scas
inc
js
xchg
push
pop
cli
mov
ljmp
insl
pop
xchg
mov
ljmp
ffreep
testb
cmp
mov
mov
loop
les
scas
xor
pop
inc
lahf
adc
adc
mov
sti
js
mov
pushf
adc
xor
inc
mov
scas
push
mov
cmp
fpatan
lcall
aam
dec
clc
inc
pushf
mov
cmp
cmc
jne
movsb
sbb
push
imul
mov
xor
leave
dec
loopne
mov
jno
jnp
mov
shll
xlat
movb
fimull
mov
sub
fwait
arpl
fwait
cltd
xchg
sub
cmp
add
das
or
push
pop
push
xchg
orl
divl
push
dec
aad
daa
lock
leave
cmp
sub
mov
adc
cli
popf
xor
insl
pop
in
cmp
movsl
ss
sub
pop
jp
push
out
lahf
rcrb
out
push
andb
and
lock
out
or
jbe
stos
adc
mov
pop
jne
repnz
inc
xchg
jbe
jns
jecxz
hlt
push
imul
inc
or
shll
and
mov
in
mov
mov
xchg
aam
arpl
pop
stos
popl
add
repnz
adc
lds
scas
gs
aas
xor
push
test
sbb
pop
mov
jmp
mov
aas
nop
add
cmp
jge
stos
jbe
jnp
fcompl
das
nop
sbb
push
pop
aam
js
add
pop
and
mov
jae
xor
xchg
not
outsl
add
imul
pop
or
icebp
pop
mov
pop
jmp
popf
rcrl
bound
mov
and
ss
out
dec
call
repz
ror
stos
or
mov
cmc
mov
dec
sbb
sbb
ficomps
sub
mov
movsb
data16
iret
sbb
sub
and
out
xor
add
mov
ret
jmp
push
push
mov
lods
in
mov
jbe
mov
pop
inc
test
aas
xchg
jg
out
jns
test
dec
mov
mov
mov
repz
ds
mov
xchg
ljmp
rcrb
shrl
sbbl
or
pop
jecxz
push
push
push
daa
hlt
lea
shl
nop
lahf
cmpsl
test
cld
xor
push
cmpsb
sbb
ds
outsl
or
xor
clc
cwtl
xor
das
mov
or
mov
stc
cmpsb
adc
outsb
fiaddl
hlt
faddl
xchg
outsl
lahf
push
jge
repz
mov
lcall
iret
clc
xchg
mov
mov
stos
inc
movsl
lea
mov
icebp
in
bound
cmp
xchg
pop
jo
jecxz
jecxz
push
cmpsl
mov
push
adcl
inc
fisttps
fdivrs
mov
addr16
insb
xor
jbe
push
rcrb
push
lds
pusha
daa
cwtl
scas
xchg
stos
lock
mov
addb
sbb
jne
push
xlat
pop
cmc
adc
out
push
sbb
incl
and
daa
in
movsb
add
mov
das
insl
or
jnp
push
ret
stc
mov
jge
shll
sub
xchg
add
lods
in
cmpsl
lods
lcall
xchg
aaa
out
adc
ds
lahf
out
rcl
xchg
push
adc
adc
insl
in
call
pop
cmp
lcall
fs
cwtl
push
aas
imul
xor
fistpll
fs
pop
mov
jge
out
idivl
mov
arpl
cmp
pop
xor
add
rcrb
push
mov
dec
push
mov
mov
jge
dec
popf
pushf
xchg
sbb
mov
ret
int3
outsl
jbe
inc
sub
insl
arpl
ret
and
mov
sub
clc
pop
loop
push
xor
in
in
mov
push
xchg
push
mov
mov
xchg
push
add
mov
adc
pop
dec
jne
popa
push
mov
mov
add
les
pop
scas
scas
test
data16
sahf
enter
outsl
add
sbb
lret
stos
push
shl
jl
movsl
cmp
cmpsl
jp
lcall
mov
in
pop
or
movsl
stos
scas
or
int
xor
movsb
pop
push
cld
shll
stos
dec
imull
icebp
cmp
and
dec
pop
outsb
fnsave
jle
sti
inc
mov
std
xor
std
add
pop
push
test
popf
lds
mov
mov
inc
lcall
fcmovb
jne
or
mov
int3
rcrb
xchg
stos
add
mov
insl
mov
int3
sbb
pop
je,pt
adc
sub
mov
add
push
adc
cmp
jns
flds
mov
cmp
lcall
out
scas
mov
paddq
ret
xor
and
sub
div
dec
and
dec
sbb
mov
test
lret
testl
jns
lcall
hlt
and
popf
cwtl
jbe
mov
pop
mov
mov
loopne
mov
std
sbbb
lock
mov
cmp
shll
outsl
push
jbe
lock
or
cmp
inc
xorb
and
cmc
xor
sbbb
push
sahf
jmp
loope
sub
scas
push
xchg
lods
mov
mov
clc
inc
jle
xchg
rcrb
sbb
int
jl
cmp
jg
nop
mov
push
imul
fldt
movsl
enter
inc
lret
and
cmp
jmp
xchg
sub
loopne
adc
dec
mov
mov
sbb
aas
shll
push
fisubrs
inc
idivb
jl
ret
ret
push
ljmp
and
cs
mov
mov
pop
push
subb
mov
xorl
cmp
sub
fnstenv
arpl
sbb
repz
push
or
cltd
testb
mov
jbe
xor
xchg
stos
aam
pop
fsubs
xor
les
sbb
iret
jl
test
insl
lret
pop
das
lret
lret
adc
mov
xchg
push
aad
and
clc
jno,pn
mov
dec
mov
mov
daa
mov
or
movsb
sbb
xchg
adc
int
xor
sub
ljmp
ret
popa
stc
or
jp
push
or
sub
pusha
push
xor
sub
mov
loopne
cmp
lret
out
jno
jle
pop
scas
mov
int3
mov
sub
int
mov
mov
int3
sbb
data16
out
mov
hlt
jae
int3
mov
pushf
mov
clc
repnz
out
ret
push
fwait
jnp
push
js
mov
jle
and
call
cmp
and
repnz
xchg
loop
adc
out
xchg
xchg
and
jno
or
jp
jmp
xchg
lods
jnp
mov
xchg
aad
and
stc
push
sbb
and
inc
in
in
testl
jne
mull
in
test
jp
cs
mov
pop
cltd
mov
loop
push
sahf
lods
cmpsb
mov
aam
out
xor
sbb
or
test
jne
hlt
lods
pop
sub
jmp
insl
mov
sub
popf
mov
stos
cmpsb
mov
pusha
lret
jl
mov
mov
cmc
sbb
rcll
cmp
pop
jl
andb
stos
in
fdivrl
adc
fisttpll
xor
adc
fs
ljmp
mov
jp
mov
loop
add
jb
jmp
or
push
nop
test
adc
xor
mov
std
in
cmpsl
aas
jb
icebp
scas
jnp
push
mov
sbb
xchg
pop
xor
xor
testb
faddl
and
pop
adc
xor
xchg
aas
popf
push
mov
jecxz
sbb
cld
lods
sub
add
push
cmp
lret
jnp
cmp
sbb
mov
in
mov
dec
pop
scas
fisttpl
mov
inc
cmp
xchg
aam
sub
rclb
pop
fldcw
xor
das
mov
xlat
lea
sar
sub
fstpt
lods
pop
ljmp
sub
push
add
jns
mov
push
xor
push
jae
cmp
mov
and
xchg
adc
lret
mov
popa
mov
popf
xchg
sbb
imul
out
inc
icebp
out
sarl
cmp
mov
andb
test
arpl
lock
cmp
jle
pop
adcb
lods
cmpl
aam
ret
mov
add
pop
jns
iret
jnp
ljmp
inc
popf
xor
mov
ret
xor
pop
clc
push
cwtl
push
jl
mov
les
ret
jns
jge
rol
addr16
ljmp
imul
push
xchg
adc
iret
mov
inc
fisttpll
orb
shrl
xor
cmp
xor
fstl
std
mov
and
xchg
daa
pop
push
mov
mov
mov
cmp
sahf
sub
add
xchg
or
into
cmc
xor
jno
or
ja
mov
jnp
sbb
repz
out
lods
inc
cmc
dec
bound
cmp
into
adc
test
or
or
and
jl
jg
add
add
adc
cmpsb
popa
sbb
xchg
fimull
inc
das
mov
inc
pusha
fwait
cmpsb
inc
pop
add
scas
inc
sbb
adc
imull
subl
jmp
push
shrl
clc
mov
sub
sar
fisttps
imulb
mov
cld
add
inc
dec
fbstp
cs
ret
cld
inc
ret
sbb
sub
movsb
movsb
xlat
icebp
pop
je
sbb
xlat
iret
shll
inc
xchg
mov
jns
mov
movsl
jnp
xchg
in
push
gs
xchg
bound
mov
add
adc
fwait
add
adc
in
repnz
xor
fildl
inc
leave
push
scas
or
push
call
aad
ret
testl
movsl
or
icebp
jmp
int
es
push
adc
lods
or
push
out
cmp
adc
cwtl
daa
mov
lret
cmp
jbe
push
dec
subl
sub
pushf
out
push
dec
jl
fs
push
xor
adc
mov
int
out
pop
pop
movsb
aad
push
lcall
jle
sub
push
sbb
out
cmpsb
popa
ss
mov
or
jo
xchg
mov
pop
icebp
ret
jns
add
jge
jge
jge
or
cld
add
sbb
jne
ljmp
js
repnz
pushw
mov
jg
fsubrs
jp
mov
stos
jnp
jg
sbb
aam
mov
mov
pop
bound
lods
lret
add
xlat
jmp
je
and
imul
mov
and
in
mov
mov
sbbb
pop
imull
fisubrl
stos
or
andl
push
push
xchg
mov
pop
das
or
in
mov
data16
ljmp
pop
sub
aaa
mov
rcrl
shrb
cltd
dec
aam
divb
popa
and
cmp
cmpsb
jl
pop
lret
mov
jne
sbb
inc
ja
and
insb
adc
cmp
in
inc
mov
lret
addr16
inc
mov
and
pop
jg
mov
out
popa
xchg
clc
xor
ja
jle
hlt
negb
xchg
jo
adc
out
es
mov
sub
pop
mov
lds
xor
push
movsb
dec
cmp
push
cli
sub
inc
inc
push
dec
sti
or
inc
je
xor
pop
bound
mov
enter
xor
sub
mov
icebp
shl
push
inc
call
in
test
inc
or
aam
push
scas
cmp
cmc
xlat
in
imul
mov
xchg
insb
add
sar
adc
dec
cmp
and
xor
or
out
lret
hlt
ds
dec
ds
out
add
test
lret
icebp
and
mov
daa
mov
dec
inc
ss
adc
mov
mov
mov
pop
mov
push
or
add
loope
dec
mov
or
ja
mov
notl
push
cmc
jo
dec
loop
int
mov
fwait
push
inc
pop
out
jmp
rep
mov
sbb
push
sar
cmp
add
gs
mov
dec
jmp
and
adc
dec
and
xchg
movsl
add
push
mov
adc
pop
lods
incl
push
rorb
push
lcall
int
push
fbstp
add
ds
xchg
push
or
ret
es
jnp
push
jmp
sub
mov
jge
jmp
insb
cmp
jg
xchg
jl
xor
nop
xchg
and
cmpsb
jg
lret
out
and
and
mov
rclb
or
lea
data16
or
sbb
jmp
in
push
mov
in
aam
sub
out
pop
adc
and
in
lods
push
mov
push
addr16
jge
pop
aas
and
inc
push
incl
sub
xor
daa
mov
dec
out
dec
dec
dec
xor
jmp
cmpsb
loope
xchg
arpl
fildll
mov
mov
sub
and
adc
mov
sahf
loope
mov
jnp
lret
inc
js
or
enter
and
or
cld
ret
mov
rcrb
popa
sbb
mov
mov
lods
jecxz
mov
add
push
into
jmp
jbe
jne
lods
pop
gs
and
mov
inc
cmpsl
and
icebp
xor
push
add
inc
sub
inc
dec
mov
mov
std
fidivrs
fidivl
shll
mov
je
jae
loop
stos
push
mov
clc
lcall
or
in
cwtl
inc
repnz
jnp
adc
dec
ja
incb
mov
push
mov
movl
or
push
pop
push
ret
popa
mov
fcmovne
sbb
dec
push
sbb
outsb
add
and
fcmovb
pop
imul
sbb
or
mov
adc
iret
ja
cld
pop
and
dec
fs
inc
std
sub
fs
dec
pop
dec
stos
scas
jns
aam
jge
and
jecxz
mov
dec
mov
and
aam
out
jnp
fidivrs
xor
hlt
cmp
sti
sub
xor
push
shl
jge
xchg
ret
mov
and
xchg
std
ret
pop
mov
and
and
adc
and
sahf
add
mov
mov
add
xchg
test
fs
push
adc
adc
mov
in
sbb
imul
jb
inc
pop
cli
out
iret
cli
jp
or
test
jg
add
sbb
xor
or
xor
cmp
and
test
les
sub
bound
es
cs
cltd
stc
mov
sar
test
adc
xchg
xchg
xchg
inc
push
mov
pshufw
test
mov
cs
mov
stos
test
dec
add
mov
dec
mov
pop
mov
das
xor
insl
nop
sub
insb
aaa
inc
xor
and
adc
xlat
fwait
push
push
movsb
mov
jnp
fwait
leave
pop
fcoml
cmp
mov
pop
ret
pop
mov
repnz
jae
cmp
xor
xor
in
add
jg
jo
adc
cli
sbb
mov
imul
int
in
loope
mov
adc
xlat
roll
adc
ret
fidivs
test
and
inc
sbb
insb
imul
mov
sub
mov
jecxz
out
pop
xchg
dec
cmp
cli
xchg
xchg
adc
les
adc
mov
inc
push
push
push
xchg
pop
notl
insl
or
cmp
insb
scas
scas
in
add
stc
dec
jnp
ret
sbb
add
jl
mov
mov
subb
xchg
mov
cmpsb
test
cli
lcall
es
faddl
loop
inc
mov
scas
loop
adc
hlt
inc
cwtl
push
xchg
into
in
dec
push
leave
sti
icebp
imul
loope
outsl
mov
out
pop
push
fistpll
sbb
cmc
mov
scas
ss
mov
repz
int3
xchg
repnz
push
xchg
lea
stos
cs
lock
dec
pusha
cmp
push
and
call
cmp
int3
jmp
jge
mov
sti
pop
jle
pop
sbbb
rclb
sbb
shll
dec
cld
enter
not
mov
ss
dec
stc
sahf
pop
das
cltd
push
cmpsb
pop
in
shll
fincstp
lds
dec
mov
pop
xor
mov
push
push
cmpsl
les
lea
pop
jmp
adc
sub
movsl
popf
dec
ds
sub
sub
sub
lahf
push
mull
mov
inc
rclb
push
pop
jae
pushf
push
shlb
and
xchg
fsubs
mov
mov
int3
out
ret
mov
mov
inc
and
inc
loop
pop
add
cs
sub
or
iret
push
fcmovne
add
cs
jge
push
call
push
mov
ds
aaa
rcl
dec
movsb
nop
sbb
adc
jmp
js
xor
and
clc
jecxz
stc
xchg
gs
dec
jo
pop
fldl2e
jecxz
mov
lds
bound
mov
popf
push
pop
sbb
insl
or
gs
movsb
test
cld
loopne
push
dec
arpl
aad
add
std
in
inc
mov
pop
fistpll
cmp
jns
cmp
leave
cmpb
hlt
sbb
sbb
insl
mov
fmul
xor
pop
jecxz
cmpsb
popf
cmpb
decb
pop
lods
pop
lea
adc
inc
or
cmp
or
shrl
dec
dec
mov
stc
sti
stc
cmp
fdivrl
xchg
jnp
jmp
mov
sub
mov
loopne
sbb
std
inc
aaa
pop
ss
pop
push
fimull
push
fwait
mov
jge
sbb
loopne
fwait
xchg
push
scas
aaa
push
pop
or
mov
mov
rcrl
add
cmp
and
icebp
or
push
jb
xchg
fcmovnb
jecxz
pop
cld
mov
xchg
jno
adc
into
and
mov
orl
stos
movsb
pop
and
rol
mov
jo
mov
mov
xor
mov
imul
icebp
mov
lret
dec
xchg
xchg
cs
int
mov
inc
testl
gs
push
loop
xchg
inc
jo
push
xor
push
repz
push
jge
jp
xchg
lea
insb
xchg
or
xlat
out
scas
cwtl
mov
push
aas
data16
pusha
cs
xchg
inc
push
cltd
repnz
arpl
dec
outsb
call
mov
dec
js
mov
xchg
mov
cmp
dec
xchg
sub
fwait
stos
or
ds
xchg
inc
and
push
jp
mov
jbe
pop
leave
out
scas
jne
test
sbb
mov
dec
popa
xchg
or
sbb
int3
iret
mov
loopne
mov
jae
dec
dec
pop
inc
adc
sbb
mov
out
jae
arpl
inc
int
ficomps
mov
out
mov
inc
cmp
fs
add
push
je
test
sub
rolb
iret
ljmp
test
out
inc
xchg
push
int
and
fsubrl
xchg
sub
lret
xor
jno
pop
in
in
dec
mov
fistpll
out
in
xchg
mov
add
pop
pop
xor
rorb
loopne
jmp
xor
xchg
push
lret
ret
jge
jbe
jmp
pop
mov
and
mov
cli
xchg
std
pop
mov
aam
ds
shrl
out
loope
cmpsb
popa
push
loopne
cmpsl
adc
lcall
aas
jecxz
sbb
pop
into
mov
push
pop
int
movsb
decb
inc
scas
and
dec
fstpt
pop
mov
fcomp
push
sbb
pop
adc
in
int
jb
decb
mov
pop
movsl
jg
es
rclb
pop
mov
loop
push
ret
push
lcall
shll
adcb
sub
lock
mov
jns
insb
and
mov
push
jno
test
daa
sbb
push
std
imul
in
mov
or
pop
inc
mov
imulb
adc
push
pop
arpl
mov
movsl
add
sahf
push
add
and
lahf
mov
stc
sub
mov
add
js
movsl
push
or
sub
sbb
or
fsubl
mov
jb
sbb
mov
repz
shr
inc
sub
push
movb
dec
push
mov
leave
pop
insl
mov
sub
xchg
cs
adc
fmull
sbb
push
cld
aaa
mov
cltd
push
pop
sub
pop
movsl
push
scas
cmc
mov
push
or
js
sti
add
jp
out
jns
aam
cmp
sub
in
hlt
call
xchg
pop
in
shlb
dec
dec
pop
cli
xor
js
lods
icebp
push
jecxz
ds
popa
outsl
and
jo
push
pop
adc
mov
xchg
les
or
xchg
push
cmp
outsb
push
and
cmpsl
mov
mov
es
test
push
lock
cmpsb
hlt
int
mov
mov
fsub
fnstcw
jg
mov
inc
scas
stos
inc
push
adcl
out
mov
fwait
repnz
push
pushf
lahf
dec
cmp
cmp
ret
inc
test
inc
xor
inc
xor
imul
adc
sbb
cltd
mov
dec
inc
outsl
mov
cmp
cwtl
addr16
test
sub
sbb
mov
inc
add
outsb
call
and
lds
aas
jnp
push
jmp
xchg
fs
cmp
sbb
sarb
adc
aam
into
add
pop
data16
movsl
lods
daa
xor
jg
cmp
inc
mov
jmp
lods
sti
mov
mov
movd
mov
vfrczsd
mov
stos
push
fistl
push
clc
scas
pushf
push
xchg
mov
outsb
jmp
mov
push
push
pop
mov
dec
popa
mov
fcompl
popf
mov
dec
jmp
movsl
xchg
gs
adcl
sbbb
add
cmpsb
outsl
fs
nop
jns
push
xlat
lahf
divl
pop
adc
xor
sti
and
scas
icebp
mov
mov
add
hlt
adc
imul
addr16
xor
je
pop
pop
mov
data16
xor
xchg
xor
call
inc
xlat
sarl
cld
jo
fsubr
pushf
add
cmc
mov
mov
push
jb
in
stos
mov
xor
aam
scas
out
mov
add
jae
adc
cwtl
lret
or
scas
mov
lea
loop
pusha
adc
lcall
pop
add
inc
jp
dec
cmp
push
jecxz
inc
imul
into
rcll
cmpsl
pop
sbb
hlt
test
pop
add
pop
and
or
dec
sti
les
jmp
in
ret
inc
lds
mov
sbb
insl
and
test
mov
add
mov
lret
mov
fs
fildll
add
les
in
xchg
lahf
pop
xlat
cmpsl
rcrl
inc
add
popw
pusha
xor
pop
out
xor
or
xchg
imul
addl
ds
pop
add
pop
jg
jne
pop
push
ss
fucom
mov
jge
push
xchg
test
sti
xchg
jle
hlt
dec
ror
mov
sbb
push
es
or
les
movsb
xchg
lcall
in
inc
das
mov
pop
add
mov
dec
pop
mov
inc
mov
xchg
outsl
addl
add
lods
lds
push
mov
add
or
gs
and
adc
mov
push
mov
imul
or
ficompl
sub
inc
sbbb
pop
js
fsubrs
add
mov
mov
in
sub
rclb
or
inc
push
sub
push
insb
jno
mov
test
cs
sub
xchg
push
int
xchg
aad
ret
inc
movsl
xchg
cmp
pushf
ljmp
mov
repz
fldpi
sbb
cld
xchg
movsl
adc
push
cmp
add
pop
xor
cmp
sbb
sbb
aaa
mov
dec
xor
fcomp
scas
mov
adcl
daa
add
inc
mov
lret
enter
cmpsb
pop
inc
inc
or
mov
cwtl
add
fisubs
push
int3
dec
ljmp
jne
sbbb
mov
xchg
hlt
or
test
data16
inc
movsl
mov
icebp
cld
dec
lea
jp
lret
mov
sahf
js
xor
lret
pop
push
sahf
pop
cld
lret
add
inc
fmul
in
mov
mov
cmpsb
xor
testb
push
pusha
sub
lds
arpl
leave
pop
and
sahf
mov
inc
jecxz
cs
mov
sahf
in
icebp
inc
je
add
je
dec
js
jne
call
pop
out
adc
push
adc
mov
or
lods
insb
popf
push
nop
jmp
xchg
pop
cltd
out
fldl
and
dec
hlt
stc
idiv
clc
insl
push
cmp
adc
jmp
js
test
mov
and
js
sub
sub
popa
sub
pop
imulb
aad
movsl
out
xor
insl
int
jg
push
dec
pop
enter
mov
into
out
lahf
lea
ficomps
das
mov
inc
mov
adc
cltd
jo
fmull
inc
xorb
inc
enter
imul
ss
xchg
in
shlb
jbe
xchg
inc
mov
push
xor
fisubs
loopne
mov
adc
cmp
std
loopne
push
xor
ret
aas
fsubl
inc
sub
xlat
mov
loope
dec
pop
jmp
sbb
test
lret
inc
repz
dec
xor
push
test
insl
iret
arpl
mov
pop
pop
mov
sbb
addr16
lods
mov
fdivrp
push
sbb
lea
mov
xlat
mov
std
jle
daa
jne
push
xchg
aam
test
imul
push
jp
push
pop
cmp
in
orb
cmp
aas
scas
push
leave
cmpsb
je
fldenv
cmp
mov
push
bound
xor
sbb
mov
jmp
in
mov
push
aam
pop
sahf
add
decb
inc
test
mov
jg
lock
stc
push
push
test
sbb
cmp
xor
mov
sub
cmc
jne
add
out
or
ljmp
aaa
shll
mov
adc
rcrb
rol
les
fidivs
in
sub
mov
sti
adc
xor
and
push
out
bound
mov
andb
adc
and
int3
mov
fnstenv
push
jg
out
mov
push
xchg
rcll
fsubrl
fldl
pushf
mul
xchg
rol
adc
repnz
or
pushf
aam
imul
sbb
mov
out
cmp
movsb
repnz
lahf
scas
cmp
dec
and
jno
jle
sub
jp
sub
out
cld
cmpsb
scas
jl
fwait
xor
jmp
test
xor
xchg
je
push
inc
lods
adc
outsb
test
ja
shrl
fbld
pushf
lret
or
adc
mov
cmpsb
cmc
add
inc
lea
inc
pop
shr
ror
jl
cwtl
xor
bound
add
outsb
sahf
shlb
outsl
xchg
dec
popa
loop
mov
or
ljmp
rorl
popf
lea
pop
cmp
xor
les
not
call
shll
inc
mov
xchg
push
push
add
fmull
or
es
nop
mov
push
cld
out
jecxz
adc
mov
lahf
dec
jnp
test
inc
loop
insl
sbb
mov
sahf
mov
add
sub
bound
test
jbe
xchg
movsb
mov
into
push
inc
jbe
jle
test
dec
pop
dec
into
add
jo
adc
test
xchg
test
sub
lds
add
ss
cmp
mov
cmp
mov
scas
dec
and
xchg
adc
leave
fnstenv
jns
sbb
jae
adc
bound
adc
add
out
shlb
int
sub
ss
jo
and
shl
sub
cmp
sub
sbb
ret
inc
adc
scas
pop
outsl
into
xor
arpl
mov
aas
fwait
and
mov
dec
nop
jp
sbb
mov
inc
adc
cmc
fcoml
xchg
and
jno
sbb
jg
mov
mov
sti
cmpsl
and
dec
test
sub
xchg
inc
shrl
ja
jo
push
mov
add
pushf
and
xor
dec
pop
sub
push
ret
and
scas
or
sbb
push
push
adc
xchg
lcall
jmp
lret
mov
aam
jmp
pop
pushf
sbb
xchg
mov
xchg
testl
xchg
add
xchg
inc
xchg
adc
orb
js
mov
fstpl
insb
pop
fdivrl
inc
xchg
sbb
fsub
mov
adc
shl
sbb
push
call
or
sub
pcmpeqw
mov
jno
xchg
sarl
dec
pop
stos
das
jb
test
sbb
xor
xchg
sub
ret
push
cs
or
cmp
aaa
aaa
leave
scas
imul
imull
roll
pop
jo
repz
aas
pop
mov
fistps
dec
jp
loope
orl
loope
mov
dec
jmp
pop
aad
sub
xor
add
fsts
dec
xchg
mov
jo
jne
int3
das
imul
mov
rolb
outsl
rcll
mov
mov
stos
mov
dec
mov
fnstcw
arpl
mov
dec
insl
into
loope
xchg
aad
sub
aas
loopne
and
addl
lock
mov
add
sub
call
jmp
mov
iret
mov
mov
das
pusha
repz
pop
movsl
mov
lds
or
sub
sub
imul
addr16
mov
pop
insl
sbb
les
insl
add
mov
dec
xchg
mov
aas
and
lock
xor
loope
je
xchg
ret
in
xor
stc
clc
test
mov
repz
xchg
test
idivl
int
lock
repnz
cld
out
push
cmpsl
jne
xchg
push
aaa
sti
repz
out
inc
jno
xlat
jg
jl
push
lock
mov
clc
and
fnsave
mov
lock
pop
addb
aam
repnz
dec
arpl
inc
xor
jl
test
std
pop
fwait
sbb
xorl
daa
pop
add
mov
cmpsb
out
pop
pop
jne
jae
stos
add
xchg
push
ds
ret
push
adc
mov
jne
stos
lahf
xchg
cmpsb
rorb
in
outsl
pop
int3
and
popf
scas
sub
sub
xchg
push
test
lret
rcl
push
cmpsl
mov
cmp
mov
xchg
dec
pusha
jg
jnp
inc
dec
add
movsl
pop
dec
dec
jbe
stos
or
push
mov
out
popa
test
inc
pop
test
mov
push
mov
mov
lds
xor
ds
pop
sub
jno
and
outsb
or
bound
divl
mov
inc
xor
mov
imulb
sbb
mov
ja
cmp
add
pusha
test
cmp
sbb
or
jae
sub
pop
clc
aam
faddl
and
shlb
add
inc
pusha
lds
xchg
repnz
pop
pop
xor
into
fstps
dec
cmp
dec
xchg
xchg
xchg
inc
jle
cmp
pusha
rorb
xor
popf
les
pop
xor
mov
push
popf
mov
iret
jle
xor
addr16
xor
fcoms
add
jl
dec
add
loop
fists
fists
cmp
xchg
push
or
mov
jmp
lods
add
loopne
push
jo
dec
sub
aaa
clc
cmp
pop
pop
rol
add
cmp
mov
cld
fs
add
pop
test
popf
imulb
mov
xchg
inc
aad
inc
data16
mov
bound
insl
in
mov
bswap
xor
mov
fwait
jne
movsb
loop
xor
fsubs
icebp
inc
out
jns
xchg
lcall
iret
mov
mov
out
lods
out
and
jb
sub
vrcpps
mov
jmp
inc
jg
shl
int
dec
add
out
dec
fs
sahf
xchg
push
lods
mov
inc
enter
xchg
out
into
int3
jmp
pop
divb
mov
outsl
shl
lcall
cmpsb
std
pushf
xor
loopne
push
lret
or
xor
int
outsl
adc
inc
xchg
mov
pop
mov
repnz
sbb
mov
jns
out
jne
push
cmp
ljmp
mov
icebp
lods
test
popf
lahf
mov
cmp
mov
add
out
mov
jle
mov
push
pop
sahf
in
and
mov
and
or
jbe
xor
mov
aaa
pop
mov
sub
xchg
jbe
out
sbb
sahf
je
mov
jecxz
sub
std
mov
cmp
cmp
jo
jg
hlt
mov
rorb
and
push
scas
jb
jns
andb
int
or
or
fwait
sarb
mov
fists
shll
pushf
mov
cld
mov
push
cli
jo
push
jnp
sbb
in
ljmp
fs
sbb
jg
out
popa
test
ficomps
out
js
cmc
popa
push
sti
xchg
int
push
ja
sahf
fmulp
pop
es
js
pop
xchg
faddl
mov
aam
xchg
aad
push
lret
lret
sub
sub
dec
pop
shlb
mov
lahf
test
sub
ljmp
popf
incb
daa
jp
xchg
vdivss
adc
outsb
jl
iret
adc
cli
or
xchg
loope
ret
sub
sbb
shll
pusha
rorl
cmpb
ds
sti
ljmp
or
xor
xchg
or
jp
push
gs
jno
push
sbb
sbb
jmp
orb
push
imul
dec
jmp
jne
inc
xchg
xor
xor
xchg
adc
mov
and
and
jno
push
add
in
rol
jp
pop
test
xor
sti
mov
jnp
jne
and
enter
cmp
and
fisubs
test
mov
sub
rorb
lods
add
mov
inc
adc
cmp
out
jg
push
out
daa
pop
jp
push
out
mov
call
cwtl
out
mov
mov
sar
jnp
imul
js
xchg
inc
enter
jle
mov
mov
scas
xchg
sbb
rcrl
enter
movsb
shrb
hlt
in
jnp
xchg
shll
mov
lods
pop
enter
or
mov
clc
pop
or
cmp
fsubr
or
pop
mov
cmp
push
mov
fiadds
in
ret
pop
cmp
sbb
hlt
pop
cmp
stos
dec
bound
add
or
sub
cmp
ficomps
mov
xor
adc
dec
test
xor
pop
mov
add
fucom
les
pusha
push
in
or
pop
lods
push
lds
jle
jno
enter
adc
hlt
enter
mov
push
loop
mov
or
pushf
and
loopne
je
lret
stc
or
shrb
push
es
cmp
jns
xchg
sti
ret
push
sbbl
sbb
cmc
movsb
pop
andps
push
in
and
cmp
loope
fwait
rcrl
push
les
cmp
mov
push
xchg
clc
into
mov
jmp
jnp
jno
cli
and
add
add
movsb
adc
xor
lcall
inc
and
push
repz
dec
mov
jb
xchg
push
cmpsb
push
add
mov
flds
cmp
das
les
dec
and
das
les
or
ljmp
inc
adc
push
push
sub
mov
sub
and
mov
adcb
mov
sub
mov
sti
sbb
xchg
pop
or
stos
scas
pusha
jns
js
enter
push
push
mov
or
add
hlt
jb
mov
cmp
pop
cltd
jnp
lcall
add
mov
and
or
push
jb
jl
push
sbb
ret
test
dec
jbe
aad
dec
jle
icebp
lds
mov
dec
xchg
das
jno
and
inc
mov
mov
cld
cmp
xchg
sbb
xlat
insl
xchg
mov
mov
icebp
mov
mov
loop
fsubl
sbb
mov
push
dec
mov
call
jae
scas
stos
sbb
ds
sti
pop
adc
pop
cmp
lcall
andl
xchg
jo
js
bound
jl
dec
scas
mov
adc
je
mov
popa
cmpsl
flds
imul
mov
aaa
fmull
ds
adc
aaa
push
inc
lahf
cmc
cmp
dec
cpuid
push
or
mov
jg
cmp
xchg
addr16
mov
push
sbb
xor
outsl
pop
or
sub
cmp
mov
mov
sbb
fiadds
and
dec
cmc
test
mov
addr16
cmp
push
or
pop
sub
sbb
test
scas
jle
pop
outsl
hlt
push
sub
sti
sub
in
lcall
orl
cs
rorl
xchg
mov
mov
mov
add
cmpl
popf
push
mov
push
call
xor
outsb
xchg
aas
nop
shl
inc
jp
nop
repnz
push
adc
push
cmp
cmp
mov
subb
psrlq
xor
js
lods
cwtl
mov
mov
jl
lcall
loope
mov
ss
dec
stos
xor
out
fisttpl
sub
xchg
push
lds
ret
xchg
sti
repz
int3
inc
mov
sbb
lods
xor
test
out
sub
std
ds
loop
outsb
pop
mov
and
sub
xor
je
lret
sbb
push
out
shll
mov
pop
sbb
inc
lods
dec
les
cmpsb
jmp
push
push
adc
jg
sub
push
sub
xchg
jae
decb
jecxz
add
cmp
jae
sub
movsb
repz
orl
out
push
dec
cld
adc
cmc
lret
mov
stc
insb
jg
xchg
mov
xchg
fldl
shrb
jecxz
mov
gs
inc
pop
repnz
fildll
inc
pusha
popa
push
and
out
ret
fstl
pop
shrl
in
jmp
pop
add
outsb
outsb
fxch
or
aas
mov
enter
sbb
ja
mov
jno
push
leave
repnz
jb
pushl
cmp
movsb
inc
mov
scas
and
dec
clc
or
pop
mov
pushf
jecxz
cmp
mov
mov
sub
mov
adc
es
rcrb
cltd
xchg
aad
push
push
xchg
xchg
xchg
jne
add
rorl
cmp
mov
orb
inc
sbb
push
ficompl
adc
aaa
sti
push
push
lock
adc
inc
xchg
fstpt
lea
push
std
fistpll
push
pop
push
mov
rorb
pop
mov
push
xchg
adc
push
imul
mov
xor
cmp
into
xor
pop
mov
jbe
outsb
mov
push
and
mov
mov
push
in
inc
inc
sbb
loop
shlb
mov
cmp
cmp
rolb
stc
lcall
imul
and
lret
sbb
jb
sbb
mov
pop
xchg
cwtl
mov
shr
cmpsb
or
dec
roll
lret
mov
aad
les
push
adc
cltd
test
pusha
scas
imul
leave
in
dec
dec
mov
jl
int3
sbb
testl
cmp
xor
test
idivl
hlt
out
int3
inc
test
sbb
dec
enter
push
mov
cmp
test
add
sbb
push
sub
jbe
jecxz
pushf
cltd
jp
outsl
push
arpl
data16
sahf
mov
xor
pop
xor
fnstenv
cmp
xor
sbb
inc
dec
mov
andb
aad
andb
sub
test
jp
sub
es
pop
cmc
push
clc
inc
aas
mov
loop
mov
mov
sbb
mov
dec
and
popl
inc
jnp
jmp
es
aam
xor
inc
call
push
and
stos
mov
cmc
fnstenv
mov
jbe
mov
add
xchg
xchg
lods
push
aam
jp
imul
cmp
not
mov
cmp
out
sbbl
and
into
popa
cmp
or
nop
int
jnp
xor
stc
push
sbb
pop
xor
movsl
sub
inc
jmp
loop
bound
icebp
jno
rorb
sub
fistpl
xor
mov
jo
mov
mov
and
push
pop
fisubs
jo
les
pushf
sbb
mov
das
jle,pt
xchg
inc
jmp
loopne
lret
mov
sub
fisttpl
mov
sbb
sub
insl
mov
or
mov
mov
ss
and
xchg
clc
fucomp
push
cs
idiv
cli
mov
sbb
test
jnp
outsb
or
out
ja
add
or
call
jp
push
jge
or
inc
pop
idivb
stos
hlt
jecxz
out
sub
loope
push
lahf
add
jg
adc
sbb
sbb
aad
repz
outsb
mov
cwtl
test
aaa
enter
clc
incb
outsl
or
ror
cli
test
pop
ss
xchg
jae
clc
jge
into
imul
pop
sbb
mov
das
les
insb
js
pop
jae
pushf
jp
jnp
jle
loop
repz
lods
les
js
in
jge
dec
jmp
cmp
sti
mov
mov
mov
cmp
add
xchg
insl
push
insl
pop
iret
test
and
leave
mov
push
shll
test
int
popa
ret
push
add
out
outsl
lods
xlat
mul
cs
sbb
insl
test
call
lret
xorb
mov
aam
cmp
mov
xchg
shrb
lea
or
inc
stos
dec
aam
sahf
negl
aam
xchg
out
xchg
test
mov
ja
and
int3
mov
les
inc
mov
nop
push
outsl
dec
xchg
cmpb
idivl
xchg
movsb
pusha
push
scas
fldenv
cmpl
push
xor
mov
jnp
push
and
out
sahf
loope
jmp
xchg
mov
test
cltd
loopne
jo
out
popa
imul
lahf
xor
fwait
xchg
enter
sbb
sub
sti
xor
call
mov
xor
push
cmp
push
loopne
fisttpll
cltd
jle
aaa
mov
sub
push
push
and
adc
leave
rclb
sbb
addr16
and
or
inc
or
mov
mov
shrb
inc
fwait
sbb
faddl
sbb
pushf
lcall
mov
xchg
xchg
shl
dec
je
lret
stc
cmp
pop
lcall
inc
scas
loop
movsl
sub
sahf
mov
mov
stos
or
stos
jb
sub
inc
aad
xor
std
sub
stc
lods
inc
xchg
in
and
cs
adc
push
std
jb
inc
jae
mov
dec
arpl
leave
fistl
mov
or
insb
movsl
ficomps
jns
jmp
pop
test
adc
je
lahf
add
pop
adc
or
mov
mov
dec
call
popf
push
jl
popf
pushf
pop
lret
sub
insb
and
pusha
div
jp
sbb
popf
cs
inc
dec
dec
inc
cmp
inc
ljmp
fadd
pop
scas
sub
mov
sub
rclb
pop
dec
inc
aam
jmp
sbb
sub
lret
push
and
aam
lds
mov
lret
in
mov
dec
movsb
fcmovbe
in
aas
cwtl
ja
mov
cmp
mov
jbe
test
dec
mov
iret
sarl
mov
mov
add
mov
sti
xchg
or
shll
lock
popa
movsb
adc
iret
mov
iret
pop
icebp
fstps
mov
nop
jnp
in
push
xchg
notl
pop
or
cltd
lds
push
inc
stc
dec
push
or
mov
outsl
fs
add
sub
mov
sbb
sub
push
xor
xor
movsb
or
mov
or
stc
mov
clc
mov
lock
adc
jb
movsl
mov
xchg
stc
cmp
repnz
adc
xor
imul
or
jmp
outsb
adc
push
mov
or
test
dec
xchg
je
ss
cld
inc
cmp
xchg
shlb
sbb
sbb
cmp
mov
jbe
test
leave
leave
mov
sbb
and
test
sbb
inc
imul
push
movsl
jmp
dec
ss
sahf
adc
jmp
pusha
clc
push
loope
nop
adc
add
ljmp
xor
push
adc
aam
arpl
out
mov
xor
pushl
lods
jmp
jns
push
adc
xor
cmp
loop
in
mov
enter
pop
in
imul
pop
mov
xor
push
inc
adc
lods
lods
sub
xor
push
fmul
xor
push
aaa
enter
pop
jo
jo
dec
cli
and
aas
fs
jae
pushf
mov
inc
adc
ds
nop
sub
clc
push
test
push
out
sbb
dec
stos
stc
fwait
inc
fldl
sbb
out
push
cli
mov
or
mov
jb
xchg
aas
les
xor
mov
mov
scas
je
sub
jae
inc
test
movsl
dec
inc
in
aam
xlat
jmp
mov
leave
or
ljmp
cmp
int
adc
mov
ret
fisubs
fwait
insb
inc
xchg
cmp
add
lock
jae
shlb
jle
xchg
pop
add
jmp
push
jnp
push
xorl
lahf
into
ljmp
mov
adc
jp
mov
pop
push
enter
xlat
fisubrs
sti
push
arpl
int3
mov
enter
notb
daa
or
fisubrs
sub
add
cmp
cmp
xchg
xor
pop
test
mov
pop
push
jno
sbb
push
pushf
pop
mov
out
mov
ret
push
mov
or
adc
pop
frstor
fcomip
add
mov
add
push
rcrb
push
dec
jae
sub
adc
nop
and
popf
or
xor
mov
ret
pusha
loopne
fidivl
mov
data16
mov
sarl
jmp
inc
insb
mov
sub
pop
lock
popf
sbb
ret
mov
inc
sub
push
iret
iret
jb
cli
in
loop
mov
sub
push
sub
stos
fdivrl
jle
push
pop
cmp
pop
ja
jae
in
xor
inc
dec
ret
dec
fstpl
push
inc
push
call
enter
lahf
sbbl
mov
sub
push
push
push
push
jbe
mov
jb,pt
and
sbb
jae
stos
shlb
mov
and
mov
leave
scas
pop
mov
pop
inc
sub
sub
xchg
push
fs
ret
scas
cmpsb
aas
idivb
out
adc
push
sti
movsb
stos
add
xchg
sarb
clc
iret
popa
ljmp
or
lds
test
rolb
pusha
dec
dec
ja
roll
add
and
add
cli
sbb
imulb
push
xor
inc
push
dec
popf
mov
jae
int3
pusha
test
cwtl
cwtl
or
subl
inc
aaa
stc
and
loope
and
pandn
adc
pop
or
and
xchg
repz
loope
pop
push
data16
dec
xchg
ret
push
push
xor
stos
xchg
mov
repnz
xor
gs
jae
ds
js
lret
mulb
out
dec
sbb
xor
out
mov
lahf
fsubr
ja
pusha
fidivl
arpl
push
lds
jb
popf
fwait
xor
mov
cmc
gs
push
pop
push
mov
loop
jo
add
jo
adc
insb
push
jp
or
xor
dec
push
cmp
push
pop
xor
lahf
jl
push
jg
loop
xor
test
movsl
xor
xor
dec
xchg
jo
sub
lahf
popa
xor
push
data16
or
clc
jae
arpl
mov
xchg
movsl
popf
mov
js
adc
sub
lea
sub
add
mov
popf
xchg
rol
loopne
repz
push
popa
sti
jle
or
cmp
xor
mov
dec
mov
jge
add
dec
sbb
jle
push
mov
repnz
adc
adc
movsb
insb
mov
mull
xor
jl
push
pop
stos
sub
pop
mov
popf
pop
adc
into
push
pop
je
inc
aam
dec
jecxz
mov
movsb
mov
adc
sbb
je
pushf
pusha
int
insl
sbb
loope
mov
xchg
push
jno
add
adc
push
sti
int3
out
movswl
jp
aas
inc
cmp
mov
sbb
adc
sahf
cmp
ret
mov
clc
adc
in
clc
enter
dec
inc
mov
cld
arpl
pop
mov
cmp
lcall
pop
inc
int
pop
push
sbb
add
push
lds
dec
sbb
sub
mov
das
fnstsw
xchg
push
mov
jl
repz
cltd
bound
inc
lods
push
subb
or
dec
pop
sbb
imul
aaa
in
sti
test
sub
sub
mov
and
test
insl
dec
insl
sub
mov
push
outsb
and
push
loopne
les
lea
out
or
push
jle
inc
out
lahf
out
jg
test
push
push
lret
clc
and
pop
dec
mov
pop
pop
dec
out
js
adc
lds
int
in
jno
jo
cmp
mov
mov
je
rorb
aaa
fcmovb
stos
mov
xchg
inc
jo
lock
add
pop
lcall
mov
pop
iret
xor
fs
pop
and
int
or
test
add
fsubs
dec
mov
and
mov
ljmp
mov
in
jg
jne
sub
or
daa
or
and
sub
jmp
jno
dec
push
sbb
cmpsb
mov
sbb
jnp
mov
out
push
lods
icebp
and
jns
lods
mov
add
jecxz
mov
js
mov
lods
ljmp
lret
jle
outsl
cmpsb
dec
test
dec
out
negb
imul
movsl
sbb
xor
and
push
cld
push
int
imulb
sti
out
dec
sub
cmp
or
sahf
jns
outsb
fisubrs
adc
out
mov
aaa
dec
gs
fstpt
dec
je
xor
stos
push
fimull
stos
shlb
ficomps
add
cmp
lock
sar
mov
jnp
imul
or
sti
add
xorl
and
xchg
and
hlt
mov
xchg
int3
mov
inc
jns
inc
outsb
mov
mov
inc
xor
stos
and
test
push
gs
sbb
mov
jb
daa
mov
mov
adcb
pop
mov
aas
xchg
mov
adc
mov
mov
push
and
addb
or
inc
leave
mov
mov
jmp
fmuls
cmp
inc
popa
push
test
arpl
cmp
sarl
out
push
push
dec
pusha
jmp
cmpsb
add
jne
inc
sbb
sbb
out
cmp
aas
es
cmp
lea
pusha
sub
pop
ds
subb
sub
inc
xchg
cltd
loopne
adc
in
stc
mov
cli
aaa
adcl
mov
test
aad
xlat
sub
mov
inc
into
push
sbb
cmp
scas
nop
lods
ja
sbb
sti
aas
mov
jmp
lret
push
test
fdivl
repnz
or
pop
push
pop
sahf
iret
jbe
std
fldt
inc
ret
xchg
sbb
xchg
rcll
inc
mov
stos
stos
mov
mov
lods
push
and
adc
js
nop
lods
sti
sbb
sbb
int3
pop
mov
test
jno
out
lea
in
adc
cvtdq2ps
jb
xchg
clc
dec
xchg
je
sbb
imul
and
repnz
xchg
xchg
jbe
in
add
fstpt
imul
shlb
inc
rorb
lods
ret
outsl
and
sbb
fdivr
lahf
movl
dec
pop
or
lea
push
outsb
je
sub
sub
in
adc
sub
rcl
aad
into
lcall
cmc
mov
push
mov
clc
add
jecxz
loopne
cmp
fdivrl
push
mov
outsb
and
jl
mov
test
out
cmp
pop
push
xor
cmpsb
out
stc
mov
xchg
pop
out
jne
popa
xchg
add
adc
popf
adc
fimuls
mov
stc
sub
xor
ret
jne
push
out
add
hlt
pop
adc
test
aam
push
or
cmpsb
adc
ljmp
adc
xlat
mov
dec
daa
xor
pop
out
cmp
xchg
arpl
out
lahf
inc
pop
cmc
sahf
ss
imul
aad
push
sahf
mov
mov
or
ret
jbe
adc
jl
mov
pop
aas
xchg
fisubl
sub
sbb
cmp
imul
test
cmp
push
lret
repnz
cltd
lret
mov
and
enter
out
mov
ret
loopne
pop
in
cmpsb
xor
xchg
lret
loopne
dec
push
push
call
cwtl
inc
ljmp
loopne
les
lods
test
xor
mov
xchg
lcall
mov
divb
jmp
push
sbb
mov
ret
push
leave
xchg
jmp
jo
jge
adc
push
xchg
xor
xchg
jnp
daa
inc
loop
jle
repnz
dec
sarl
xorb
test
pop
cmp
or
mov
imul
adcl
cmp
loop
call
cs
shrl
mov
cltd
mov
stos
test
sub
test
jl
fiaddl
mov
leave
mov
mov
in
in
push
repz
aaa
test
sbb
cmp
andb
dec
nop
pcmpgtw
push
add
cmp
mov
dec
add
jmp
push
xrelease
hlt
sarb
jg
jge
fnsave
sti
scas
or
mov
test
fwait
in
les
repz
fyl2x
out
ds
lods
push
aad
repz
das
xor
mov
inc
xor
mov
cld
sbb
push
mov
bound
std
out
mov
add
mov
xchg
icebp
test
mov
jo
dec
fcoml
loopne
dec
dec
cmp
mov
arpl
xor
dec
mov
push
in
fidivrl
cmpxchg
repz
sahf
insb
cmp
aad
add
dec
or
push
andl
push
pop
jns
mov
das
xor
movsl
pop
popa
jnp
or
clc
inc
daa
ss
cmpsb
popa
push
xor
shll
outsb
bswap
dec
sub
in
ljmp
cwtl
fidivs
out
sbb
lods
xor
mov
aaa
jmp
fldenv
add
mov
scas
fyl2xp1
lcall
or
mov
sub
imul
sbbl
cli
inc
pop
jne
mov
xlat
and
jmp
test
cmp
cmp
xchg
xchg
push
jno
sbb
mov
test
adc
repz
movsl
scas
test
in
sbbl
stos
lods
jge
xchg
loop
add
inc
mov
and
fsubrs
es
ficomps
mov
or
pop
mov
inc
xor
push
and
inc
lods
jb
out
pop
xor
js
in
rcl
outsl
adc
mov
call
cmp
sbb
fcompl
jbe
sub
es
pop
cltd
mov
out
xchg
icebp
and
adc
add
iret
push
inc
add
inc
js
mov
adc
sbb
test
vmulps
out
sub
jnp
fldenv
inc
pop
mov
shlb
mov
cwtl
divl
fstpt
mov
mov
call
adc
dec
dec
lcall
fisttpl
mov
in
dec
mov
mov
test
fneni(8087
pop
mov
sti
adc
sub
jl
adc
das
sbb
out
roll
fldenv
je
lods
gs
xor
jo
ljmp
outsl
out
sbb
dec
cmp
notl
pop
aas
sub
insl
ss
dec
dec
xchg
leave
pop
jl
push
sbb
sahf
lods
in
mov
xchg
pop
out
push
cmp
push
js
inc
popa
sbb
sub
repnz
das
dec
aam
int3
test
out
iret
shll
push
loope
cwtl
pop
hlt
dec
aam
cmp
out
adc
test
inc
xchg
mov
dec
mov
or
mov
dec
jns
sbb
jns
inc
or
xor
mov
hlt
lods
jp
data16
mov
fadd
pusha
inc
add
in
mov
or
and
les
sarl
mov
pop
add
int
or
ss
ret
ljmp
test
rorb
pop
mov
xchg
pop
inc
data16
adc
sbb
popa
out
jle
mov
jb
jl
test
mov
jb
insb
sub
lods
call
test
int
loopne
dec
in
iret
add
arpl
jns
ja
test
push
mov
fsubl
out
mov
and
mov
into
not
sub
add
loope
mov
inc
scas
add
clc
sub
or
sbb
or
in
inc
add
jo
popf
sbb
and
mov
rclb
sbbl
and
xchg
inc
lds
fists
xchg
pop
js
mov
stos
or
in
shr
inc
and
jo
push
mov
jnp
mov
lret
jne
lds
inc
pop
bound
hlt
sub
arpl
bound
adc
scas
mov
sub
fs
loop
mov
sbb
mov
inc
push
stos
push
sbb
shl
iret
xor
flds
cltd
sbb
mov
mov
cwtl
pop
not
jl
jbe
and
xor
fistps
fwait
mov
push
and
adc
int3
sub
jbe
pop
mov
loope
mov
xchg
pop
mov
mov
aad
clc
xor
pop
jb
aas
pop
ror
clc
nop
fcom
and
stc
pop
rcll
or
mov
mov
xor
aas
movsl
scas
mov
inc
sbb
leave
ss
andl
cs
in
sti
pusha
mov
das
jae
push
cmp
popa
adc
mov
pop
sub
repnz
inc
clc
mov
ret
push
jmp
pop
mov
push
sub
ror
je
mov
rcrb
jns
js
inc
test
push
xchg
pop
cwtl
fidivrs
add
je
or
int
mov
frstor
imul
fildl
fstl
xorb
mov
fists
loopne
jns
pop
mov
movsb
orl
xor
std
lea
pop
ret
ret
lret
xchg
xor
into
sbb
aad
lcall
bound
mov
pop
adc
inc
test
int
ss
out
inc
cmpsb
push
arpl
popa
sub
inc
push
loopne
adc
pop
lods
push
adc
cmp
inc
cwtl
pop
add
add
shlb
or
xor
pop
add
xor
inc
out
scas
jmp
xlat
js
dec
lea
sub
jmp
daa
mov
pop
jmp
cmpsb
shr
jbe
pop
aaa
popa
sbb
push
adc
cmpsb
into
mov
cmc
adc
lcall
mov
insl
push
dec
mov
push
dec
push
push
ret
mov
mov
jb
xor
xor
and
cltd
or
jnp
xchg
pop
outsl
lret
sub
gs
rcll
cmp
jbe
pusha
fsubrl
sbbb
add
test
pop
sahf
or
iret
sbb
lods
mov
dec
arpl
or
or
xor
pop
push
lock
cli
repnz
fs
mov
addr16
lods
into
ss
jo
cltd
stos
cmpl
shll
mov
repz
popl
repz
popa
mov
xorb
js
mov
sub
loop
dec
fwait
push
mov
lahf
incb
addb
sub
and
fxch
push
mov
fmull
dec
adc
ffree
cmp
jbe
xchg
pop
aam
and
out
adcb
push
mov
jle
inc
inc
add
mov
jo
mov
sub
and
gs
jns
mov
add
stc
cltd
clc
icebp
movsb
shlb
lret
rclb
sub
cmp
mov
loopne
not
leave
or
push
fmulp
cmp
cmp
pop
stos
xor
xchg
and
hlt
mov
insb
or
test
in
adc
js
sbb
rol
push
xor
jno
sub
jle
shr
push
xor
ljmp
int
mov
xor
inc
jp
pop
sarl
iret
scas
fcomps
pop
ret
jge
cld
pop
scas
addr16
push
aam
lcall
mov
add
enter
inc
fxch
xchg
xor
psrld
xchg
and
mov
movsb
mov
cs
lock
lods
jle
fs
push
pop
inc
inc
or
cli
xor
fs
mov
bound
mov
test
xor
ja
daa
pop
push
mov
jmp
rcr
sub
pop
ret
jne
in
lock
or
dec
fiadds
clc
loopne
daa
push
jno
mov
mov
xor
dec
pop
dec
sbbl
cwtl
sbb
and
mov
insb
mov
xchg
in
stc
and
inc
add
adc
shlb
mov
xor
rcll
inc
mov
js
cmpsb
sti
or
stos
sbb
jnp
push
in
clc
mov
xchg
cltd
dec
das
ror
loop
mov
je
notl
cmp
fiaddl
es
rol
pop
test
les
xchg
push
ret
add
and
push
test
or
cmp
aad
xor
loop
xlat
push
xchg
mov
add
inc
scas
aaa
stos
aad
loop
add
add
sbb
mov
in
and
int3
in
cli
aam
xor
push
mov
xor
sarb
movsb
sub
adc
insb
fcompl
adc
ljmp
nop
rcll
dec
adc
xor
ss
sar
hlt
out
mov
sub
jb
sbb
sbb
movsl
repz
dec
add
ret
nop
sbb
push
cmp
mov
mov
sti
mov
ds
lods
lods
and
cmp
lock
rol
cmp
lds
xchg
pop
sub
addr16
lock
pop
sub
addr16
mov
adc
push
cmc
mov
sahf
add
adc
aaa
xor
nop
xor
das
lods
xchg
xor
push
sub
pop
test
lock
rcll
pop
inc
push
aaa
push
imul
lea
xor
test
stos
rolb
hlt
cs
mov
imul
push
pop
or
pop
jno
ret
mov
pop
mov
into
in
adc
out
aas
cld
fistl
xor
jp
pushf
sti
sub
jle
inc
lcall
lret
mov
pop
cmp
loope
es
dec
pop
jp
pop
lds
popl
inc
repz
jl
or
dec
dec
sub
adc
imul
pop
hlt
adc
mov
lret
lock
jbe
adc
lock
push
jge
fstpl
in
cmp
jb
add
fwait
imul
mov
xchg
jle
xchg
stos
xchg
cwtl
inc
outsb
jp
add
and
jg
subl
inc
je
adc
jecxz
mov
fcomps
jecxz
pushf
cmp
xor
jl
mul
or
scas
adc
mov
jecxz
sbb
xchg
dec
ljmp
adc
jecxz
or
add
stos
sahf
test
dec
add
fld
daa
inc
xchg
rorb
fst
inc
add
in
xor
add
pop
xor
and
addr16
push
jnp
inc
inc
jnp
push
push
xor
gs
push
or
xlat
jns
jge
fwait
sahf
or
or
mov
cmp
in
xchg
adc
xor
xor
mov
rclb
out
repnz
cli
pop
xchg
mov
inc
fcoml
das
fidivrs
inc
mov
mov
or
jge
xor
fisubs
pop
dec
inc
dec
xchg
inc
sahf
sbb
stos
jbe
ds
cli
dec
add
jo
or
push
mov
mov
out
outsl
mov
jbe
add
lea
cltd
and
mov
mov
mov
jle
inc
push
lcall
cld
out
div
fadds
xor
cmp
sbb
xchg
and
mov
testb
xchg
arpl
push
std
stc
rolb
mov
je
mov
cwtl
shlb
push
hlt
dec
lds
sub
repnz
aas
mov
dec
fistps
and
cltd
ds
jg
jl
push
push
or
test
stos
or
sub
sbb
push
lds
fcomi
mov
mov
std
repz
jne
add
dec
sbb
cmp
inc
mov
call
out
iret
adc
mov
sub
mov
enter
mov
push
shrl
js
cmpsl
out
or
outsl
popa
cwtl
jecxz
ret
push
inc
pop
pop
loopne
aas
fidivs
pusha
adc
push
test
add
sbb
push
lret
lds
imul
lods
mov
mov
test
sbb
out
xor
inc
inc
out
mov
fs
call
adc
add
mov
hlt
xor
repz
push
cmc
decl
dec
push
pushf
xor
or
call
inc
jge
shlb
sub
paddq
xchg
push
scas
mov
jg
dec
pop
push
push
inc
fs
xchg
test
jle
in
in
flds
enter
pop
or
js
clc
stos
pop
mov
sub
das
cli
andl
mov
rclb
in
xchg
jecxz
hlt
shlb
ds
movsb
imul
jo
mov
mov
int
sub
getsec
mov
cmpsl
pop
xchg
pop
enter
aas
inc
xchg
clc
das
jl
or
std
mov
pop
aas
mov
insb
adc
sub
gs
repnz
mov
movsl
rcrb
xorb
push
mov
js
xor
rorl
jns
insb
xorb
add
pop
jle
or
sbb
scas
xor
ljmp
dec
iret
mov
aaa
aaa
mov
add
xchg
mov
push
nop
mov
shll
clc
xchg
adc
ja
lahf
mov
inc
xchg
xor
orl
mov
jg
ss
cld
loope
popf
das
xchg
setp
lret
sahf
iret
mov
pop
add
testb
repnz
in
cmp
in
cmp
clc
out
mov
cli
test
lret
add
xchg
pusha
xchg
cld
arpl
nop
pop
mov
aas
daa
clc
shld
dec
pop
stos
inc
outsl
push
mov
scas
leave
push
mov
mov
inc
sub
jo
repz
adc
mov
or
insb
sbb
bound
jmp
sub
pop
lcall
push
js
lret
shlb
movsl
mov
jnp
rol
imul
mov
scas
cmp
dec
movl
jecxz
lahf
xchg
inc
mov
sahf
sbb
popf
dec
or
je
in
fdivr
jle
add
add
inc
or
cmp
ss
imul
jns
jp
std
pop
ljmp
or
pop
enter
hlt
cmp
jecxz
pop
pop
mov
add
data16
sub
aas
and
adc
mov
dec
movsb
outsl
fildll
pop
sbb
aam
pop
arpl
jns
data16
jns
mov
js
push
xor
push
inc
push
fistpl
xor
mov
subl
mov
stos
jecxz
jae
js
leave
sbb
test
inc
test
push
sti
in
jns
sub
push
int3
xor
fistpl
inc
and
lcall
sbb
xchg
sar
pop
pusha
mov
and
movsl
test
sbb
add
jmp
ret
add
movsl
phsubw
mov
add
mov
das
add
mov
mov
or
ds
adc
hlt
push
ficoml
push
or
inc
popa
out
fmul
aam
lods
leave
xor
loop
add
jge
call
push
clc
or
shll
stos
inc
cmpsb
movsl
sbb
mov
fs
lret
jnp
sahf
je
mov
je
movsl
pusha
stos
or
push
mov
ret
mov
cmpsl
push
sbbb
jno
ljmp
nop
pop
mov
div
leave
mov
dec
imul
fstpt
pop
mov
into
enter
or
cmp
cmpsb
mov
pop
mov
int
inc
push
inc
fidivl
pop
out
push
pop
xor
adc
repz
jl
aas
fwait
add
jns
popf
mov
ljmp
cmp
shlb
lods
icebp
lock
sbb
jns
pop
dec
cmp
push
jle
fstpl
mov
sbb
test
out
fwait
push
and
xchg
aaa
add
idiv
mov
insl
lds
test
fnsave
or
fdivrp
mov
int
jg
mov
and
jecxz
sbb
push
leave
cld
and
mov
sbb
lock
out
mov
leave
push
pushf
ss
jge
loope
jns,pn
aad
dec
inc
cmpsl
xor
mov
frstor
ja
rol
or
push
xchg
sbb
ret
mov
sbb
in
xor
sub
idivb
test
mov
add
add
iret
aam
icebp
rcr
mov
cmpsl
out
arpl
sbb
fimull
mov
jge,pn
pop
push
add
hlt
out
lods
jno
pusha
jno
imul
lds
loope
pop
out
dec
and
xor
and
jle
and
cmp
push
mov
inc
xchg
cld
pop
fs
push
xor
loope
xorb
popa
add
sbb
cmp
inc
pop
jne
repz
cmp
cmp
jmp
jno
adc
or
pop
out
xchg
xchg
adc
cmpsl
mov
pop
popf
sub
cmpsb
pop
mov
pop
push
adc
cmpsl
xchg
push
movsb
in
jg
jae
mov
sbb
mov
cs
xchg
imul
inc
pop
addb
ss
cmpl
mov
mov
sub
sti
inc
iret
or
sub
loope
test
inc
cwtl
in
xchg
test
pop
fcomp
es
aam
sarl
out
rorb
je
jnp
or
jae
and
jle
aad
filds
cmpsl
mov
insl
or
lahf
fbld
sbb
outsb
add
xchg
les
scas
mov
lods
orb
mov
mov
pop
js
aad
inc
lret
push
flds
sbb
fisubrs
negl
mov
fisttpl
roll
fwait
inc
outsb
mov
loop
lock
cli
gs
hlt
pop
out
adc
je
sbb
and
sbb
add
and
inc
cli
mov
fwait
leave
xor
pop
movsl
js
jno
lds
lods
sbb
lahf
enter
sahf
push
imul
mov
mov
addr16
add
negl
lret
jb
movsb
mov
movsb
test
js
shlb
mov
mov
or
lcall
fnsave
mov
ret
push
add
lret
lods
xchg
inc
or
nop
call
mov
xchg
or
inc
pop
repz
jnp
jecxz
sbb
movsb
inc
pop
bound
inc
xchg
dec
jmp
xchg
je
stos
or
push
mov
insl
pop
loopne
imul
sar
jl
fidivs
xchg
out
and
xchg
xor
out
aam
xchg
inc
and
or
add
test
rcl
test
call
mov
sub
mov
xchg
lret
or
push
out
jecxz
in
xlat
xchg
xor
adc
mov
mov
mov
iret
dec
push
cmp
scas
stos
mov
pop
and
fadd
and
xchg
mov
scas
jns
popa
aaa
adc
push
gs
addr16
xchg
xor
nop
push
adc
cmc
not
cld
hlt
dec
outsb
sbb
adc
test
cmpsl
inc
adc
adc
dec
mov
xlat
fucomi
ret
cmc
mov
jnp
fs
sbb
jl
mov
pop
pop
stc
out
scas
scas
jno
dec
sbb
es
mov
dec
and
out
xor
scas
xor
mov
inc
push
push
pushf
cmp
mov
mov
mov
mov
xchg
jns
mov
stos
daa
pop
and
sub
cmpsl
fsubs
hlt
add
shll
enter
inc
out
cmp
pop
dec
lea
inc
dec
aaa
cmpsl
hlt
and
cmp
std
hlt
xchg
daa
pop
add
adcl
lret
mov
sahf
int
call
sbb
movsl
stos
push
add
pop
aad
aam
fists
sub
pop
xchg
gs
lret
fcmove
pusha
int3
das
pop
jno
lds
imul
or
mov
jge
aad
add
push
cmp
fisttps
jnp
in
sbb
sbb
sub
push
lods
sub
sub
push
dec
rcrl
pop
push
xchg
mov
out
stos
dec
pop
jae
mov
andb
xor
xchg
sti
test
dec
inc
and
adc
movsl
negb
stos
adc
dec
orb
xor
daa
mov
add
add
lock
sub
xchg
mov
cmpsl
mov
jo
adc
inc
and
mov
xor
pop
movsb
out
lods
pop
repz
loopne
push
outsl
mov
mov
addr16
add
xchg
aad
ficoms
mov
jecxz
sbb
push
xchg
outsl
outsb
ds
adc
test
ret
popf
mov
lods
cmp
fstps
icebp
xor
dec
sbb
int3
dec
stos
hlt
lcall
push
mov
sbb
cmpsl
adc
inc
cmp
dec
and
cwtl
movsb
aad
mov
std
outsb
adc
xor
stos
fs
xor
pop
aad
gs
dec
mov
and
mov
mov
inc
mov
cwtl
and
sbb
enter
pop
repz
jmp
lock
mov
insl
mov
bound
ss
xor
icebp
aaa
push
jp
pop
mov
xor
push
xor
arpl
lret
ror
int
inc
or
sbb
dec
repnz
jmp
lods
in
and
in
inc
iret
dec
push
sbb
rcrl
cmp
jge
roll
subl
jns
and
inc
jnp
stos
or
rclb
push
pushf
jno
push
gs
sub
mov
outsl
inc
stos
stos
into
cmp
dec
add
mov
jo
or
cmp
inc
fldenv
mov
in
push
and
push
mov
mov
jnp
inc
and
xchg
roll
push
mov
fs
repnz
insb
push
inc
movsb
call
cld
mov
andl
test
lcall
lods
jmp
cmp
add
mov
pop
xchg
movsl
loope
nop
mov
outsb
dec
jo
cmp
or
adc
jnp
rcll
frstor
lds
stos
push
fcoms
jle
dec
ja
loopne
dec
cmp
shll
cmp
mov
hlt
or
dec
dec
pop
xchg
sbb
xchg
xor
scas
cmp
or
fucomip
arpl
aam
repnz
cmc
cmpsl
test
inc
fwait
inc
mul
dec
add
or
iret
imull
mov
xchg
clc
sub
ds
repnz
loope
cmp
sub
sub
in
pop
mov
rorb
jb
mov
pop
cmp
jge
mov
hlt
adc
popf
xchg
mov
sbb
xchg
imul
lcall
aaa
mov
jns
push
loop
push
cmc
add
inc
sub
das
pop
in
std
fwait
sarl
ret
je
adc
jg
icebp
pop
dec
pop
add
inc
scas
movsb
dec
cmp
jbe
push
into
add
adc
ja
cmp
sbb
nop
insl
jb
pusha
pop
or
xor
test
dec
push
fsubr
adc
je
push
xchg
lea
enter
pop
outsb
pop
push
into
stos
sbb
stos
push
inc
push
js
fimull
pop
sbb
dec
adc
mov
push
or
and
adc
mov
cmp
adc
cmp
test
jb
add
ja
lret
mov
add
jmp
and
mov
adc
fisubl
in
add
mov
push
mov
fdivrp
ret
sarl
fisttps
cltd
scas
inc
out
outsl
aam
repz
dec
add
sbb
ret
js
inc
ja
ret
mov
rol
lods
in
cmpsl
jo
jecxz
loope
out
ljmp
mov
mov
xor
mov
dec
dec
push
inc
push
js,pt
rorb
mov
insl
pop
and
xor
sbb
shlb
icebp
inc
fwait
mov
inc
add
dec
add
sahf
shrl
cmovae
fisubrs
push
pop
sarb
je
and
aas
xchg
fisttps
out
xchg
adc
cmp
fistl
js
add
roll
mov
or
icebp
fbld
clc
cmpl
aam
int
fcomps
push
xchg
je
dec
insl
xor
push
push
and
mov
xchg
adc
cwtl
inc
lcall
and
jnp
sarb
dec
xchg
inc
mov
mov
rorb
and
shr
fstps
mov
xchg
in
mov
add
sub
repz
inc
in
xor
pushw
xor
ds
sub
pop
mov
jl
daa
jo
out
mov
fldcw
dec
add
je
inc
xlat
imul
aaa
mov
pop
push
jmp
leave
mov
subl
push
test
or
lods
subb
pop
jle
mov
dec
mov
lret
mov
mov
xchg
movsl
adc
stos
pop
inc
xor
int
es
test
pop
adc
arpl
dec
push
imul
dec
repnz
imul
cli
adc
cmp
mov
fxch
cmc
xlat
xor
adc
ds
dec
inc
cwtl
adc
aad
jge
idiv
dec
int
scas
rcll
sub
mov
js
pop
xor
adc
mov
ja
es
cmp
adc
jmp
fldenv
les
sbb
cmc
or
sub
adc
mov
int3
xor
jg
cwtl
fisubrs
mov
push
adc
lret
mov
mov
pop
addr16
dec
pushf
or
push
into
push
es
in
addl
rcrb
push
mov
mov
leave
add
cmp
push
dec
cmp
sbb
mov
ret
ljmp
dec
jns
jle
sbb
and
cltd
xchg
inc
stos
mov
add
lock
xlat
jge
in
mov
pop
aad
mov
xchg
add
push
lea
mov
roll
add
push
xor
repnz
test
xchg
out
repnz
fldcw
fisubl
or
jnp
sub
lahf
das
xchg
and
push
fsubrp
imul
inc
ficomps
repz
mov
clc
push
pop
call
mov
push
inc
fildl
jg
lahf
pushf
sbb
lcall
add
es
lret
cmpsb
lods
imull
inc
rorb
movl
jns
pusha
mov
lret
pop
sar
in
xlat
stc
faddl
lods
pop
lret
dec
xchg
outsb
push
jmp
mov
lds
cltd
lret
sub
stos
jmp
ficompl
mov
bound
cld
inc
or
xchg
jecxz
mov
push
mov
xchg
inc
loopne
mov
xor
lds
pusha
or
ss
ret
push
lret
hlt
in
cld
xchg
inc
add
push
outsb
shll
mov
or
mov
push
hlt
cmp
or
les
sub
fs
loopne
mov
loop
fucomi
push
iret
xchg
jle
subl
out
inc
scas
jl
and
shl
mov
insl
push
adc
cs
daa
ret
insb
aad
leave
in
insb
mov
popa
mov
inc
cwtd
push
sub
out
in
cmpsb
mov
mov
lea
pop
repnz
inc
jnp
push
add
add
lret
imul
fdivs
cmp
fidivrs
leave
pop
inc
push
sub
lcall
or
test
sahf
mov
fcoml
pop
ret
xlat
sbb
enter
adc
add
mov
and
aaa
mov
jecxz
sub
add
clc
add
rcr
mov
mull
jle
rorl
shrb
sub
push
and
inc
divl
cmp
or
xchg
sub
sub
dec
sub
cli
arpl
adc
cmp
popf
je
lds
in
mov
add
clc
xchg
and
cmpsl
jno
ss
inc
mov
jmp
jp
cmp
push
and
cmc
out
and
call
xor
dec
push
and
dec
je
sub
mov
icebp
cmp
sti
lea
lea
loope
aam
adc
mov
daa
xchg
faddl
sbb
in
fstpl
les
xor
mov
test
cmp
lahf
mov
or
sub
xlat
test
add
sbb
jg
btr
adcl
add
cs
inc
dec
mov
lock
push
jb
jno
push
sub
push
jbe
out
pop
call
jnp
inc
aas
jae
jbe
shll
fldcw
and
xchg
jmp
sub
popa
ds
enter
outsb
arpl
mov
call
jae
repnz
test
repz
sub
ljmp
ficomps
movsb
adc
push
out
xchg
xchg
jge
add
jecxz
sub
insb
testb
icebp
adc
and
lods
xchg
pop
stc
pop
repnz
fisttps
xchg
jge
sahf
xchg
push
arpl
xor
into
cwtl
add
pop
pop
loope
inc
mov
pop
outsl
add
insl
mov
pop
sbb
aaa
adc
sarb
jge
sub
xor
lret
jmp
mov
push
ljmp
aam
sub
hlt
xor
jmp
sub
mov
mov
cmp
jp
addr16
dec
movsb
hlt
or
pop
out
inc
aam
outsl
sub
stc
sub
push
inc
out
and
lds
int
sub
inc
xchg
push
mov
and
xchg
das
inc
jle
insb
inc
or
fistpll
lcall
rcrb
dec
mov
mov
lcall
pop
jno
int
std
lcall
aas
in
mov
cmpsl
mov
jne
inc
adc
sbb
cmp
into
mov
or
mov
sbb
jno
test
mov
fldenv
fwait
sub
sub
ss
add
xchg
movsl
add
ljmpw
bound
jae
stc
cmpb
push
jno
or
outsb
add
push
add
mov
fldenv
les
aad
cmp
sbb
cmpsb
std
std
mov
std
inc
and
sub
movsb
or
addb
mov
jb
vpsraw
cli
lock
ffreep
sub
jae
aad
inc
mov
dec
loope
mov
call
jb
icebp
nop
fmuls
push
cmp
stos
pop
pop
or
mov
popf
mov
mov
test
out
jmp
aam
jg
mov
lods
mov
sbb
inc
testb
scas
inc
mov
pusha
pop
movsb
sbb
in
enter
out
xchg
cli
push
fcompl
or
jecxz
cwtl
insb
int
dec
mull
loope
nop
sub
mov
outsl
mov
push
adc
xchg
je
mov
push
add
jge
xchg
pop
cmpsb
imul
leave
sub
mov
in
fadd
pop
xor
pop
or
enter
mov
insl
push
lahf
call
adc
lods
or
fs
nop
jae
jle
jno
aad
in
lahf
dec
mov
and
mov
call
test
pop
adc
ljmp
dec
push
les
sub
sbb
popf
lods
jnp
inc
sub
mov
pop
xchg
fs
xlat
scas
xor
xchg
mov
and
enter
jg
mov
mov
pop
mov
std
jg
adc
ljmp
xor
mov
cli
movsb
pop
sbb
mov
stc
mov
out
test
and
add
fs
push
mov
out
push
data16
out
mov
ja
mov
lahf
cld
add
mov
sbb
out
rol
std
push
mov
xor
ljmp
lret
sub
unpcklps
movsb
outsl
sahf
xchg
cmp
push
add
push
mov
cld
movsb
cmpsl
xor
stc
mov
sub
rcrb
rorl
push
xchg
jbe
dec
jae
dec
mov
add
andb
test
sub
sbb
es
cmp
and
outsl
and
jne
sti
or
add
inc
xchg
mov
lods
ficompl
push
sbb
add
push
outsl
into
stos
xchg
mov
xchg
cmp
seto
and
mov
adc
fcomps
mov
lret
lds
xchg
lea
in
ds
mov
sub
shl
enter
out
aam
add
inc
xchg
fnstsw
jmp
xor
mov
inc
mov
pop
int
subb
sarl
mov
dec
mov
xchg
jne
mov
jae
lahf
add
mov
sub
jl
xchg
jmp
and
addr16
test
dec
out
out
imul
adc
mov
dec
cltd
and
jns
outsb
push
fmull
push
pusha
sbb
add
sub
cltd
or
std
cmp
cwtl
nop
fadds
pop
cmp
add
mov
inc
test
inc
arpl
add
sbb
loop
int3
push
lcall
ss
mov
mov
je
shlb
sub
mov
add
in
popf
movb
subb
pop
scas
daa
pop
lock
mov
js
in
pop
sub
mov
or
cmp
or
cli
inc
sarb
cmpsl
aad
xchg
jle
pop
sub
scas
xchg
sub
adc
push
lock
push
cld
insb
or
les
pop
sbb
jge
cmc
adc
rolb
push
xchg
jg
insl
lods
jmp
cmp
test
out
or
arpl
nop
xlat
xchg
mov
add
je
pop
jmp
push
repnz
inc
inc
mov
pop
mov
dec
push
mov
or
mov
test
jns
lret
arpl
scas
movsb
cmpsb
out
or
loopne
mov
mov
push
push
test
inc
lods
push
xor
adc
cmc
out
xchg
neg
fcompl
addr16
xor
mov
ds
xor
sbb
enter
jbe
mov
xor
testb
mov
mov
scas
cmp
imul
jo
xlat
lea
hlt
cmp
pop
mov
sub
adc
or
mov
es
push
ror
xorb
incb
call
std
fisttpl
movsl
push
shll
shl
je
inc
mov
cmp
cmpl
cmpsl
dec
push
mov
mov
nop
mov
mov
dec
push
dec
sbb
inc
ret
addb
incl
inc
jae
cwtl
and
lods
adc
popf
es
imul
push
repz
push
aad
xchg
sbb
mov
mov
lret
int3
pop
xor
jo
std
rclb
jno
jecxz
adc
pmaxub
loop
testl
mov
in
or
test
dec
cli
jecxz
popa
lret
inc
int3
sub
outsb
aad
cmp
mov
hlt
xor
jno
push
int3
rcl
mov
mov
cmp
sarl
xor
int3
sbb
jne
les
dec
mov
loope
test
adc
std
push
cmc
stos
or
dec
push
imul
dec
jno
lret
add
mov
aaa
insl
and
xor
addr16
insl
jb
sbb
int3
jecxz
jmp
fs
test
add
fidivs
xor
dec
or
int3
mov
imul
xchg
arpl
seto
out
mov
ds
mov
push
inc
popa
inc
movsl
stc
imul
out
sbb
push
aas
cmp
cwtl
add
jnp
xor
mov
data16
push
pop
cli
sub
push
test
int
loope
cmp
mov
xchg
xlat
add
stc
jbe
sub
aas
shll
out
adc
jbe
into
mov
xor
pop
xor
nop
fidivl
rclb
jge
iret
push
pop
pop
mov
mov
mov
xor
push
scas
push
pop
mulb
pusha
icebp
fwait
hlt
inc
cli
loope
sbb
outsb
cwtl
mov
adc
aas
jg
iret
sub
jo
pusha
mov
ja
sarb
push
xor
test
cmp
cmc
mov
push
cmpsb
loope
int
out
inc
sbb
jp
xchg
loopne
mov
outsl
xorb
daa
mov
sub
out
mov
pop
inc
inc
sub
sbb
cmp
outsl
cs
outsl
scas
arpl
jnp
sub
in
pop
decl
hlt
mov
lahf
movsl
adc
fcoms
cld
mov
mov
push
rcr
test
add
push
push
mov
or
dec
or
out
jmp
sbb
dec
in
xchg
xor
stos
adc
jae
pop
in
int
rorl
subl
adc
mov
sbbl
addl
or
dec
shll
pop
dec
fadd
push
out
mov
sarb
adc
leave
push
and
nop
mov
inc
in
stos
sbb
push
lock
out
sbb
addr16
loope
mov
mov
cmp
fidivs
sbb
iret
mov
add
cmp
fistps
pop
pop
test
sub
enter
cmpsb
addl
jl
adc
jnp
sbbl
aad
loope
fdivrs
jp
imul
repz
js
enter
push
mov
mov
xor
xor
mov
mov
pop
lahf
loopne
aaa
cmp
xchg
sub
les
stos
repnz
push
sbb
stos
jne
push
repz
in
outsl
stos
into
jle
add
or
out
dec
pushf
cmp
and
push
jg
repnz
sti
jecxz
jle
sbb
shrb
outsl
xor
lds
inc
sbb
mov
or
rorl
adcl
clc
jb
imul
test
adc
loope
iret
loop
imul
xchg
lock
xchg
jne
imul
rclb
mov
dec
sbb
js
pusha
ret
hlt
jnp
out
mov
or
addr16
outsl
sbb
push
mov
mov
std
push
cmp
inc
inc
mov
popf
dec
xchg
cli
jno
imul
insl
cwtl
jno
xlat
push
inc
mov
in
or
mov
les
xchg
mov
and
and
jmp
fwait
mov
lods
add
jae
sbb
xchg
in
adc
mov
mov
jecxz
divps
cmp
jecxz
les
push
std
daa
outsb
iret
xchg
cmc
mov
fcoms
in
cmp
shrb
icebp
inc
sub
or
addl
daa
adc
adc
aaa
sub
mov
std
movsb
sti
loope
lahf
cltd
scas
cwtl
xchg
mov
jae
nop
enter
jb
aam
adc
xchg
nop
xchg
in
inc
shrl
cmp
push
movsl
sbb
ljmp
rcr
out
shll
outsb
jmp
sub
add
fstps
inc
cmp
popf
pop
push
pop
mov
test
es
mov
xchg
push
xchg
cld
jb
shlb
lds
int
jb
int3
inc
loop
out
add
mov
push
xlat
sbb
xchg
iret
xor
mov
pop
fwait
lds
pop
jae
add
or
insl
mov
sbb
je
stos
mov
mov
xchg
adc
cs
and
stos
hlt
pop
adc
xor
in
adc
mov
clc
jmp
push
loope
and
add
orl
les
jne
xchg
xchg
adc
inc
ss
subl
aad
add
int3
ret
stos
sub
pop
in
cs
fists
jl
imul
rcll
dec
dec
pop
and
push
cmp
nop
add
adc
xchg
outsl
mov
mov
sahf
pop
add
sub
mov
repz
mov
jl
jae
std
iret
imul
pop
jns
dec
xchg
notb
cmp
sub
push
push
stos
lea
pop
aam
fwait
pop
and
cmp
jle
push
je
sub
sub
xor
rol
dec
add
imul
repnz
lods
mov
mov
push
xchg
pop
adc
addr16
pop
lret
enter
in
js
cmp
ret
push
jbe
dec
jne
enter
imul
pop
xlat
xor
call
cmpsl
out
inc
ljmp
outsl
mov
cmp
addr16
or
jp
pop
mov
pop
mov
push
lret
xchg
sbb
mov
adc
sbb
jecxz
inc
xchg
pop
sbbl
sbbb
test
jo
andl
mov
ss
cmp
cld
lock
xor
clc
out
mov
lea
mov
push
int
fucomp
call
lds
inc
jge,pt
fldenv
popa
pop
push
push
loopne
mov
jb
lods
pop
pop
out
pop
add
jecxz
cltd
fldcw
fnsave
jo
mov
push
dec
sbb
clc
out
jno
push
add
inc
add
les
adc
sub
add
jbe
test
jne
mov
pop
aam
jmp
mov
sub
pop
inc
int
fwait
sbb
lret
jbe
xor
sbb
and
test
mov
js
je
pop
shlb
and
inc
loopne
lods
cmp
xlat
pop
sub
mov
and
cmpsb
mov
sbb
jne
and
stos
add
lret
add
dec
pop
notb
or
out
lahf
mov
out
sub
inc
sti
jle
push
divb
pop
icebp
adc
fidivrl
out
cli
pop
icebp
dec
or
inc
push
movsb
gs
ds
mov
mov
dec
pop
mov
fwait
jge
repnz
mov
stos
sbb
ret
jmp
les
js
add
jnp
and
lods
xchg
mov
and
push
mov
and
push
or
push
push
push
out
bound
dec
pop
ljmp
xchg
or
cmp
sub
jnp
sti
std
lahf
mov
mov
mov
jg
mov
stc
mov
in
rcl
lods
mov
ret
shrl
sub
loope
icebp
dec
xor
inc
hlt
push
arpl
lcall
out
test
adc
stc
jno
sbb
mov
popa
das
jge
cmpb
cmpsb
push
inc
les
cltd
dec
in
ljmp
sbb
xor
aaa
inc
xchg
frstor
insb
nop
call
dec
out
push
push
sbb
xchg
fldl
imul
cmp
jge
dec
push
lock
mov
pusha
push
mov
popfw
mov
call
shl
out
cmp
sarb
div
adc
idivb
sbb
popf
pusha
subb
cwtl
pushf
sbb
scas
add
adc
lret
gs
adc
pop
std
xchg
in
clc
ret
arpl
cmp
lcall
cmp
or
movl
xchg
push
popa
addr16
jnp
daa
and
imul
sahf
mov
outsl
insb
loop
add
adc
subl
hlt
mov
jl
cmpsb
mov
lods
in
dec
movsb
push
outsb
cmp
ficompl
sbb
stos
sub
scas
lret
faddl
je
outsl
jl
dec
inc
loope
mov
add
enter
shl
test
add
add
add
cmp
lods
aas
rep
out
enter
pop
lods
xchg
mov
ficomps
mov
or
gs
je
mov
adc
cld
push
jb
dec
rcrb
push
test
scas
and
mov
pop
rcrb
add
xchg
or
mov
das
repnz
xchg
dec
sbb
and
hlt
cmp
sbb
mov
bound
mov
xchg
addr16
test
lret
jno
std
fiaddl
sbb
shll
sbb
xlat
fsubp
adc
ret
push
mov
jge
cmpsl
sub
imul
sbbb
and
xchg
stos
int
mov
jnp,pn
sbb
lock
mov
movsl
out
out
js
pop
fstpt
adc
ja
out
das
inc
leave
js
inc
sbb
les
sbb
xor
stos
mov
pop
js
out
cmpsb
inc
xchg
jp
aaa
xchg
sbb
lds
push
test
test
mov
dec
cmpsb
pop
cmp
cld
push
sub
das
xor
jge
mov
pop
test
adc
dec
sub
mov
out
mov
out
mov
cmp
xor
sub
in
adc
and
inc
in
ss
lock
data16
test
add
xor
jl
sbbl
fnstenv
pop
push
andb
sbb
lahf
js
mov
mov
sti
xlat
xor
mov
inc
mov
sub
and
ret
xchg
in
ss
addl
imul
pop
or
add
aad
xchg
dec
lcall
jne
shlb
xor
pop
cmc
in
lock
outsb
adc
nop
push
cltd
pop
sub
xchg
sbb
inc
sbb
icebp
and
fbstp
mov
mov
mov
mov
lock
add
aaa
test
pushf
xchg
push
sti
inc
and
imul
lahf
stos
inc
scas
sbb
mov
pop
test
xor
jp
jb
or
lock
mov
mov
xor
or
outsb
gs
inc
out
div
and
adc
mov
sbb
insl
andl
in
in
movsl
cmc
inc
add
jae
je
sbb
pop
pop
fldt
nop
push
mov
pop
add
pop
insl
inc
dec
mov
loop
aaa
push
lods
ss
pushl
rcr
mov
xchg
les
cmp
inc
cltd
dec
aam
mov
fdivrl
push
rolb
cmp
jb
fcmovb
nop
mov
dec
mov
push
xor
fwait
mov
stos
pop
dec
mov
shll
mov
push
repnz
inc
fdivl
pushf
enter
pop
pop
jecxz
lods
in
or
xchg
and
jo
mov
aad
enter
xchg
push
lds
add
cltd
cld
adc
and
mov
xor
scas
test
inc
fldcw
add
push
xchg
negl
sub
cld
push
repnz
lea
scas
cmp
and
mov
scas
jbe
lds
dec
stos
aas
jmp
pop
frstor
mov
movq
sbb
addr16
mov
mov
sub
xchg
call
test
fcoms
jmp
pop
aas
stos
push
adc
fyl2x
in
xchg
push
jge
dec
in
jns
enter
loopne
inc
and
sub
jle
gs
in
into
pop
popa
cmpsb
xchg
and
aad
pop
sub
adc
dec
mov
or
sbb
pop
add
bound
push
in
mov
clc
loop
cmpsl
movsb
pop
sahf
push
push
fsts
das
xor
jge
xchg
ffreep
cltd
push
loope
cmp
icebp
pop
scas
jg
imul
mov
adcb
mov
loopne
mov
pop
mov
mov
das
lcall
fidivrl
push
xchg
or
mov
mov
or
adc
sbb
pop
adc
or
adc
orl
pop
in
xchg
push
fisttps
ds
ret
cmp
inc
adcl
in
push
adc
xchg
push
enter
int
cmpb
sub
xchg
and
and
xchg
mov
inc
into
mov
insl
add
mov
inc
jg
mov
cmp
and
scas
inc
cmc
lahf
fidivl
popf
mov
rorl
add
inc
or
cmp
xor
add
and
sahf
jae
cld
pop
jb
sub
mov
push
pop
testl
cmpsb
popa
jno
lcall
lods
mov
mov
cmpsl
cmp
jp
xchg
addr16
xchg
xor
pushf
out
dec
inc
xor
or
pushf
test
mov
fwait
daa
cmpsb
das
test
leave
rcll
mov
cmp
clc
jo
outsb
ds
popf
iret
cmp
divl
add
shlb
cmpsb
sbbl
cmp
nop
jno
iret
adc
and
xchg
idiv
xchg
int3
add
sbb
lods
in
insb
push
dec
popa
cwtl
adc
std
fnsave
in
movsb
cmp
mov
cld
lds
pusha
add
pop
ljmp
add
call
sahf
mov
inc
in
dec
push
fldcw
out
jno
mov
push
jno
cmp
push
into
clc
pop
xchg
scas
enter
bound
xchg
jnp
xchg
mov
imul
les
mov
lock
imul
gs
lea
gs
test
imul
mov
movl
pop
mov
lret
jns
aad
jo
les
mov
aaa
xor
dec
dec
imul
and
mov
mov
fstl
outsl
adc
mov
sti
mov
in
mov
in
ss
lods
fcompl
mov
out
ss
ret
loope
mov
push
cmpsl
ja
adc
stos
into
adc
lods
mov
dec
pop
arpl
sbb
fbstp
rcll
sti
pop
jg
sub
and
ret
dec
hlt
test
iret
pop
ds
inc
push
js
fwait
sub
or
xlat
adcb
cli
push
cmc
out
gs
xor
jl
or
pushl
add
je
or
mov
mov
or
sub
out
adc
xchg
ss
mov
in
fcoms
cmc
into
jae
into
mov
mov
mov
hlt
dec
imul
outsb
mov
pop
jge
aas
andl
gs
jno
push
mov
xor
jnp
imul
jb
sbb
push
out
mov
mov
test
sbb
xchg
xor
dec
xor
insb
ljmp
xor
sbb
aad
iret
sbb
rcrb
jnp
inc
imul
mov
xor
inc
fs
jp
add
test
xor
or
lret
dec
adc
popa
nop
cmp
loopne,pn
push
shr
sub
adc
notb
pushf
fidivl
and
and
jae
ljmp
and
sbb
mov
xor
lret
or
inc
unpckhps
sub
cmc
cwtl
das
add
jl
cmp
fistl
dec
mov
shlb
xlat
pop
sbb
out
pop
outsl
rcrb
inc
insl
push
pop
mov
mov
sub
adc
sbb
sbb
sbb
in
imul
cmp
ja
shl
in
mov
lret
lds
mov
sahf
xor
push
xor
mulb
je
loope
test
inc
loop
test
pop
je
sbb
icebp
xchg
mov
jmp
popa
cmpsl
mov
jo
imul
or
dec
cltd
mull
in
scas
cmp
jecxz
dec
cmp
sbb
inc
outsl
mov
mov
cmp
popl
inc
ficompl
int3
or
leave
arpl
andb
mov
test
leave
fcoml
jo
hlt
sbbb
xor
inc
imul
inc
imul
xchg
sarb
lock
dec
dec
xor
dec
adc
cmc
repnz
push
enter
pusha
adc
push
or
xchg
xor
out
jnp
jmp
jns
cmpsb
adc
or
icebp
xor
lock
shll
shrl
cmp
pushf
mov
test
fisttpll
stc
cmp
mov
adc
push
jbe
out
sub
imul
es
imul
jo
jg
pop
add
inc
xor
daa
inc
add
idivb
popa
out
mov
sbb
imul
mov
jb
js
mov
push
xchg
lcall
scas
or
or
rorb
imul
dec
std
mov
cmp
repz
rolb
xchg
imul
js
ja
mov
fcomps
sub
xor
lds
cs
movsb
inc
cmpl
sahf
stos
mov
sarb
dec
pop
mov
jo
push
push
incb
fcomp
or
jge
inc
xchg
inc
bound
inc
and
mov
inc
dec
das
push
add
xlat
insl
out
mov
push
ds
aaa
xchg
shlb
lahf
stos
scas
pop
sub
hlt
call
fwait
mov
sti
add
dec
sbb
aad
es
cmp
and
mov
jle
pop
into
movsb
pop
pop
insl
popa
loope
into
lcall
or
push
dec
cmc
fwait
lods
xchg
cltd
movsb
add
jle
jnp
fmull
xchg
mov
ss
xlat
sbb
loopne
push
push
nop
ds
dec
mov
lahf
pop
cmc
sbb
sbb
cmp
mov
push
mov
jo
leave
loope
aad
cmp
aam
lret
xor
fnstenv
cmp
or
cmp
push
andl
push
mov
xor
dec
mov
inc
pop
cmp
mov
sbb
loop
jp
jo
subl
imul
rcrl
mov
js
aaa
sub
add
pop
nopl
mov
leave
add
mov
in
iret
ss
jae
stos
sub
lahf
ficomps
adc
xor
dec
cmp
scas
lea
fsubs
aad
test
pop
pop
add
out
mov
xchg
cmp
in
cs
aam
cwtl
sbb
pop
out
sbb
xor
data16
inc
or
xchg
xor
jns
adc
and
lods
adc
daa
scas
fucomip
push
mov
push
lds
inc
lods
cmp
sub
cmp
mulb
cmc
cmp
leave
in
imul
push
mov
mov
fsubrs
in
mov
mov
and
push
pushf
fildll
mov
out
inc
movsl
sbb
add
pusha
xchg
dec
loope
pushf
jne
and
inc
push
shlb
dec
xchg
ficomps
and
iret
mov
out
jecxz
add
mov
sbb
push
xor
shll
mov
negb
or
dec
ljmp
cmp
lcall
dec
into
cmp
iret
sub
iret
ret
mul
jmp
push
sub
iret
out
int
lods
mov
pop
enter
dec
mov
jo
or
std
shll
fwait
sbb
mov
inc
rcll
in
mov
adc
mov
addr16
int
or
dec
test
mov
push
pop
aas
insl
and
push
into
cmp
loop
outsl
imul
pop
pusha
sub
sti
pop
divl
pop
add
call
rorb
mov
icebp
jl
test
loopne
enter
xchg
cmp
fwait
lods
xchg
lcall
outsl
push
leave
jl
in
imul
sub
mov
cld
push
lock
cltd
push
and
into
jbe
jo
mov
xor
cmp
jle
fdiv
inc
push
iret
ret
mov
and
jg
or
sub
in
repz
lea
pop
movsl
movb
dec
scas
add
hlt
test
mov
or
outsl
xchg
push
enter
push
or
or
pop
sahf
testb
and
movsb
pop
push
fs
shrl
sbb
hlt
int
fadd
mov
mov
loope
inc
adc
and
test
mov
adc
mov
int
pop
xchg
mov
mov
fdivs
aas
inc
pop
sbb
pop
push
xchg
sahf
jne
stos
cmp
scas
loope
inc
or
popf
mov
movsl
push
sub
xor
sbb
test
mov
xchg
adc
filds
pop
das
xor
add
cmp
sbb
lahf
xlat
push
push
lds
cmp
in
loop
stc
popa
call
xchg
and
mov
dec
imul
xchg
test
and
sub
in
and
adc
imul
mov
inc
shll
repz
dec
xchg
sbb
mov
into
xchg
shlb
das
incl
aas
jb
add
fbld
fnsave
cmp
sbb
fmuls
pop
stos
cltd
xchg
in
mov
xor
or
sbb
testb
jmp
cmp
popf
adc
adc
sub
gs
cmpb
push
fcmovbe
or
and
iret
add
jb
pop
add
jno
jecxz
loopne
xchg
repnz
push
pop
ret
ljmp
pop
je
pop
or
fcmovu
inc
ja
jb
sbb
lods
bswap
mov
cld
xchg
and
mov
fs
pusha
jle
sar
cmp
cli
testb
outsl
add
cwtl
jl
lds
inc
test
call
dec
imul
scas
sbb
scas
push
push
in
sub
movsl
push
repz
mov
cwtl
push
and
mov
call
sahf
pop
jb
push
pop
sbb
movsb
dec
pop
mov
outsb
push
mov
imul
divl
inc
aas
js
or
push
dec
adc
sub
ljmp
cmovg
add
je
scas
stc
xlat
jle
xchg
mov
push
rcrl
or
pop
aas
stos
inc
nop
shl
mov
sbb
data16
mov
jo
xor
jo
xchg
push
pop
popa
ret
adc
shlb
mov
cmp
adc
lret
adc
adc
push
ljmp
xchg
into
mov
lret
push
iret
mov
aas
cltd
ss
loop
je
fwait
add
mov
and
aas
push
lea
adc
adc
jnp
pop
add
sarb
push
add
out
jp
inc
loope
lea
mov
lret
popf
arpl
inc
mov
fmul
adc
lret
jne
cwtl
xor
adc
add
aam
movsl
dec
leave
ret
or
divb
cltd
mov
pop
inc
dec
test
stos
das
sub
push
shrb
jbe
out
cmpsl
aaa
bound
inc
mov
pop
pop
movsb
flds
in
add
fildl
mov
call
or
xor
repz
stc
adc
inc
or
or
push
and
pushf
test
test
and
sub
dec
pop
mov
and
sbb
add
call
dec
cld
pop
pop
jo
lret
xor
icebp
mov
sub
push
inc
xchg
adc
inc
out
bound
push
rcl
sti
xchg
xor
ret
fidivrl
mov
sbb
lea
pop
lret
or
mov
ja
xlat
outsb
outsb
test
bound
pop
add
ret
push
fstps
sub
bound
stc
andb
hlt
mov
cli
xchg
jns
incl
adc
rcr
movsb
scas
ss
outsl
loopne
and
inc
push
lret
mov
dec
push
sub
and
outsl
mov
and
into
insb
dec
push
sbb
pop
jnp
mov
xor
test
sub
xor
lock
xor
dec
in
into
inc
repnz
pop
sti
ret
rcll
ret
mov
lea
push
cmpsl
in
negl
ficomps
or
fstl
and
sti
ja
test
scas
incb
xlat
popa
jne
inc
adc
cmp
cltd
hlt
test
add
arpl
ret
dec
mov
ja
dec
push
dec
mov
inc
pop
pop
gs
cld
test
in
mov
ss
push
pop
dec
fucomip
jp
stos
fstp
add
stc
add
loopne
das
jmp
jo
incl
stos
mov
loope
das
sub
addb
aaa
scas
cmp
test
dec
scas
insl
or
stc
lret
push
add
int3
mov
sbb
jmp
mov
cmp
mov
mov
mov
adcl
sub
arpl
fmuls
inc
mov
sub
and
adc
inc
mov
jno
movsb
mov
cmpsl
sti
cli
lret
push
pop
jne
mov
push
loop
sahf
mull
sub
jl
mov
aaa
mov
loope
and
cli
add
hlt
incb
daa
xor
gs
add
mov
out
ljmp
mov
mov
xchg
cltd
inc
push
sarb
mov
stos
es
jl
ds
sbb
pop
out
sbb
add
mov
jge
and
adc
xchg
popa
movsb
xchg
sbb
jge
adc
push
dec
sbbb
aas
lods
push
sbb
jle
ljmp
ret
xchg
inc
out
add
nop
jb
mov
int
xchg
dec
in
scas
insb
icebp
mov
jmp
test
into
and
test
sar
inc
aas
lahf
cmp
cmp
jle
xlat
add
cld
outsl
xlat
rcr
inc
cmova
add
movl
cltd
sti
fs
lahf
jno
lea
pop
inc
fisubl
pop
clc
xchg
sbb
xchg
nop
add
push
cltd
mov
daa
mov
scas
dec
stos
je
xchg
sbb
inc
std
jg
xlat
shrb
and
test
adc
and
push
orb
out
jo
cmp
shlb
and
inc
ljmp
mov
add
adc
xchg
les
xchg
repz
cmp
mov
fisubrs
lds
push
ss
pop
mov
aad
inc
xlat
xlat
mov
orb
arpl
ja
imul
movsl
mov
scas
pop
addr16
inc
xchg
jnp
sti
and
or
cmp
or
lds
mov
inc
pop
lret
icebp
jae
dec
lods
inc
mov
cmc
dec
cmpsl
gs
lds
pop
cli
loopne
movsb
mov
mov
mov
bound
jmp
test
lahf
out
mov
fstl
cmp
push
mov
fcoms
adc
push
and
scas
int3
nop
and
inc
mov
xchg
or
xor
orl
and
jmp
or
fs
jl
fs
nop
pop
dec
pop
sbb
mov
loope
sub
lcall
push
movsl
and
push
dec
push
dec
push
icebp
xchg
mov
adc
xor
data16
mov
jo
xchg
loopnew
or
xlat
dec
mov
insl
or
icebp
aaa
xor
dec
rcrb
mov
pusha
dec
mov
cs
roll
and
push
cmpsl
loope
pushf
stc
cli
in
dec
aas
out
dec
mov
xor
fst
inc
into
cmp
mov
cmp
insb
mov
pushf
rolb
mov
push
je
dec
ret
jae
fs
icebp
push
in
mov
into
dec
jge
mov
pop
jp
or
mov
js
outsb
outsb
insl
mov
adc
rcl
hlt
push
jnp
mov
dec
sbb
fstps
subb
adc
jle
std
loope
sub
outsl
sbb
adc
loop
dec
movsb
xchg
insl
mov
mov
mov
daa
mov
aad
add
or
push
sbb
or
cmc
fimull
in
fistpll
cmc
pop
jl
aas
je
cmpsl
repz
cmp
sti
test
mov
xor
jle
outsl
or
stos
sbb
pushf
icebp
sbb
xchg
cmp
iret
test
loop
mov
mov
xor
or
or
xchg
dec
add
push
mov
lods
notl
iret
sbb
mov
push
call
sub
add
xchg
jo
mov
sub
outsl
imul
in
daa
mov
lods
add
ret
stos
data16
cli
jo
jmp
xchg
mov
leave
das
repz
xor
jnp
and
pop
popf
outsl
negb
mov
aad
fisttps
mov
loop
jnp
cltd
lods
adc
lret
orl
sub
jno
and
addr16
push
jns
mov
jne
inc
mov
stos
push
enter
sbb
aas
call
popa
mov
pop
mov
fists
int3
push
mov
pushf
test
jmp
jnp
ss
fcomps
jge
push
inc
mov
out
imul
shll
xchg
dec
jp
push
iretw
leave
mov
loope
fcmovnbe
sar
xor
iret
scas
lret
daa
nop
pop
iret
mov
testl
pusha
or
push
dec
adc
xchg
xor
mov
aaa
inc
mov
mov
inc
push
dec
or
push
movsl
jl
dec
inc
jecxz
cwtl
mov
les
xor
dec
xchg
cmp
ret
lock
cmp
adcb
cmc
je
lret
mov
daa
les
cli
xor
icebp
cmp
aad
es
repz
jecxz
add
adc
aaa
int
push
aaa
roll
push
cwtl
dec
inc
fs
popa
sbb
sub
push
inc
mov
mov
jl
lcall
inc
lret
push
into
lahf
sub
aaa
fldcw
mov
dec
sub
and
xchg
sbb
and
mov
test
pop
add
xchg
loopne
bound
inc
insl
jbe
mov
xchg
add
push
cmp
lods
cmc
cwtl
pop
dec
add
dec
in
pop
inc
push
int3
inc
movl
data16
stc
sub
out
jmp
imul
adc
pop
sub
cmc
popf
test
jmp
out
repz
mov
test
cld
jnp
inc
xchg
jns
jns
mov
shlb
in
shl
pop
test
imul
inc
sub
fcmovnbe
inc
xchg
out
xchg
or
jbe
rclb
stos
sub
ret
cltd
enter
adc
cmp
cmp
mov
ja
jg
mov
cmp
xor
fsubrl
pop
jge
pusha
iret
sub
lahf
pop
inc
popa
sub
icebp
test
mov
mov
call
ljmp
ficomps
adcb
popf
xchg
jae
ds
mov
ja
lock
sarb
cmp
add
mov
xor
aas
arpl
repnz
push
stc
int
xchg
cmp
sub
xchg
jmp
fpatan
jns
sbb
cmp
jbe
data16
adc
ss
js
mov
sbb
and
mov
sub
and
lret
cmp
int
mov
bound
dec
sbb
inc
inc
mov
lea
lock
aam
lods
pop
mov
push
or
shrb
jge
and
cld
dec
data16
cli
adc
cmp
je
push
outsl
mov
gs
push
dec
ja
repnz
das
insl
adc
cmc
clc
or
mov
andb
cli
out
icebp
scas
inc
mov
lods
in
jge
das
xchg
inc
sahf
xlat
stos
das
push
jns
push
sbb
fidivrl
xor
mov
mov
jge
push
jmp
aad
cmc
cli
pop
jb
out
xlat
and
out
push
fdivs
inc
fstpt
dec
pop
gs
fneni(8087
sahf
int
pop
mov
pusha
sbb
lcall
jecxz
jp
inc
loopne
xor
in
sarl
sbbb
stc
pop
jne
cmp
roll
aaa
popa
std
mov
and
add
or
jp
popa
lcall
scas
sahf
xchg
fistps
fs
insb
xor
push
push
out
sub
cli
cmc
rolb
mov
test
ss
int3
cmp
xorb
cwtl
nop
pop
add
lods
repz
cltd
mov
fs
mov
pop
fwait
lea
insb
movsl
jge
xchg
push
adc
popa
test
push
cmp
test
cmp
in
out
loopne
and
mov
lods
lahf
mov
inc
cwtl
xchg
popf
mov
inc
mov
cwtl
bound
cltd
call
pop
pop
mov
cmp
loop
mulb
dec
mov
out
pop
lret
dec
xlat
aaa
and
cmc
mov
jmp
or
or
es
fs
xor
sub
loopne
aam
xor
repnz
inc
call
mov
cwtl
jg
popf
mov
and
fists
mov
js
imul
xlat
xchg
clc
insl
sti
xchg
mov
sahf
in
ret
add
mov
mov
sahf
cltd
das
ret
popf
adc
out
mov
or
fmuls
and
add
es
repnz
movsl
daa
mov
and
pop
mov
imul
insl
iret
xor
jge
jne
lock
mov
dec
rorl
jbe
sub
pop
cmpsb
xor
xchg
ficompl
bound
push
scas
sbb
jbe
push
mov
bound
mov
adc
and
mov
mov
push
repnz
test
punpcklwd
in
cmp
dec
lds
ja
aas
xchg
aad
sbb
adc
outsb
inc
xor
pop
popa
stos
cli
in
mov
lret
ret
and
xchg
aaa
lods
xchg
subl
pop
push
push
pop
fs
xchg
jecxz
sbb
inc
mov
rclb
leave
lods
iret
data16
and
pop
scas
adc
cltd
stos
fsubrl
xor
add
out
les
pushf
negl
dec
enter
sub
inc
lcall
sub
mov
push
jp
dec
movsl
iret
test
cmp
fsubs
or
push
popa
dec
xchg
mov
std
repz
cs
aad
push
cmpsb
mov
pop
jle,pn
xchg
mov
inc
cli
pop
les
cmpsl
sub
mov
arpl
mov
xchg
out
dec
lea
inc
loopne
ret
loop
sbb
jo
and
lret
and
test
sbb
outsb
xchg
rorl
add
inc
jnp
int3
mov
ja
lods
fimuls
int3
bound
aad
lret
in
imulb
jmp
xor
fldl
mov
jb
subl
scas
pop
test
inc
push
inc
jo
adc
insb
cmp
cmc
sbb
mov
push
push
or
js
mov
pushf
sbb
mov
inc
stc
into
push
test
and
adc
dec
out
jne
inc
rcr
jbe
push
inc
enter
lds
ljmp
mov
sbb
bound
enter
jbe
cmp
add
in
cmp
cmp
in
mov
push
mov
push
pop
sbb
ficoml
jns
dec
fnsave
dec
mov
cs
fisttpl
mov
mov
mov
inc
cli
cmp
fidivs
dec
test
mov
adc
pop
insb
mov
sbb
sub
loopne
mov
pop
bound
or
dec
lcall
jg
shl
push
push
divb
jle
aad
xchg
mov
in
js
aad
push
sbb
sbb
adc
mov
pop
adc
lret
sub
jnp
dec
into
std
lret
jl
lock
pusha
inc
push
lods
lods
je
cmp
test
test
cltd
or
nop
lds
push
mov
stc
sbb
mov
test
je
inc
sub
add
shl
int3
sub
mov
mov
jne
push
outsb
mov
and
sub
and
stc
and
roll
inc
jno
pop
call
xlat
and
dec
shlb
das
call
inc
out
xchg
sub
addr16
inc
or
aam
mov
cmp
mov
fstpt
pop
push
clc
sub
cmp
sub
sbb
mov
push
or
inc
lret
es
lods
mov
fistps
ds
cltd
xorb
pop
xchg
jae
int3
xor
in
mov
xchg
dec
dec
push
in
gs
test
sbb
shlb
xor
mov
and
outsb
scas
pop
repz
mov
aaa
cmp
sub
sbb
cmpsl
cmc
add
pusha
mov
inc
stos
adc
xchg
je
inc
pusha
jns
incb
bound
clc
gs
ds
xchg
aad
daa
cld
mov
jb
push
dec
add
pushf
push
insl
stc
pop
dec
sarl
adc
movb
mov
aas
fidivs
pusha
test
stc
iret
jmp
daa
cmpsl
mov
inc
add
sbb
out
mov
push
out
push
add
and
or
mov
add
add
jl
xchg
mov
mov
insl
adc
sbb
xchg
out
xor
lret
stos
push
sub
jo
jp
test
mov
xchg
scas
mov
xor
faddl
jmp
xchg
fcmovnbe
adc
notl
fstl
lret
faddl
xor
outsb
outsb
cmpsl
push
xor
mov
insb
push
loope
dec
sbb
addb
inc
fimull
out
jbe
movsl
push
sbb
cli
inc
inc
xchg
inc
iret
ss
and
lds
jb
dec
das
shll
insb
shll
pusha
push
or
roll
cmp
aaa
mov
sbb
pushf
es
imul
das
sbb
int
pusha
rorb
add
mov
cmp
pushf
or
push
pop
jle
rolb
inc
mov
jae
ds
mov
roll
cmp
pop
cltd
dec
push
ret
fisubs
roll
out
enter
xor
jmp
inc
fld
xchg
mov
sbb
mov
fdivs
push
shll
cmc
pop
push
push
mov
mov
xor
mov
mov
insl
cld
scas
cmp
push
movsb
test
mov
mov
or
jmp
fcmovnb
mov
aaa
insb
push
stos
inc
das
lret
xor
pop
out
sbb
movsl
mov
ret
or
xor
lahf
mov
xchg
mov
repnz
sbb
rolb
adc
rcrl
and
popa
cs
into
mov
aas
push
negb
push
hlt
inc
mov
mov
adc
shlb
test
push
mov
lods
rcl
mov
push
mov
pop
cmp
gs
cmc
adc
loope
sbb
jmp
stos
lret
repnz
lock
out
aas
jecxz
cmp
pop
jp
xchg
adc
cmp
sub
xlat
inc
xor
pusha
jl
xor
mov
subl
arpl
jl
and
jle
lea
mov
dec
movsb
inc
inc
pop
flds
xchg
push
cmp
sbb
insb
cmp
loop
mov
lods
fwait
mov
dec
scas
push
inc
popf
sbb
mov
sbbb
dec
fisttpll
jbe
mov
int3
stc
xchg
scas
dec
xor
daa
push
mov
lock
int
or
xor
push
enter
jmp
sahf
outsl
add
andl
adc
cld
lock
movsl
cmp
mov
jmp
mov
test
jns
imul
sub
push
mov
inc
sub
incb
fsubr
arpl
pop
sbb
pop
sub
add
das
inc
loop
xchg
mov
pop
aad
divl
add
jg
cld
js
mov
mov
enter
jne
xlat
lahf
xchg
in
lret
and
jge
pusha
scas
loop
lret
mov
sbb
fcompp
js
jo
jo
sub
xor
or
hlt
inc
sbb
inc
mov
imul
mov
in
mov
add
movsl
popa
mov
dec
push
xchg
adc
in
sub
call
xchg
and
movsl
mov
enter
and
cmp
das
ret
cmpsb
movzbl
shl
or
xchg
pusha
pop
xchg
out
daa
mov
jbe
dec
test
ljmp
imul
enter
adc
and
xor
test
sti
jg
push
hlt
pop
outsb
dec
fildll
in
fmull
inc
jecxz
orb
and
test
mov
inc
call
inc
and
jb
notb
pop
dec
jmp
sub
push
daa
outsb
cmp
sub
jmp
push
sar
lret
aas
pop
inc
mov
idiv
inc
das
mov
test
xchg
in
xchg
xchg
out
pop
xchg
sub
stc
cld
mov
or
push
lds
movsl
jmp
int
ret
jg
mov
pop
jg
popf
jg
scas
in
or
outsb
rcrb
push
add
push
out
fwait
sub
push
cmp
dec
or
jb
out
pop
ljmp
scas
daa
movsb
jge
cld
dec
ljmp
pop
xor
cmp
mov
pop
ljmp
push
arpl
bnd
fs
aas
stos
sbb
mov
dec
pop
xor
lock
movsl
hlt
xchg
and
pop
pop
push
mov
es
enter
into
push
std
out
sbb
inc
das
mov
into
repz
push
push
jge
sub
push
stc
dec
aam
sbb
test
out
iret
fs
daa
rorb
mov
fs
mov
jno
inc
and
dec
sti
mov
outsb
xchg
lock
push
adc
sub
inc
mul
mov
jbe
adc
out
jge
jbe
adc
jg
insl
dec
cmp
push
push
js
daa
in
ds
mov
add
sub
ret
cwtl
jp
ds
dec
adc
jno
dec
mov
mov
or
push
stos
lahf
aas
pop
mov
icebp
dec
xor
add
fists
test
fldl
pop
and
clc
mov
push
add
inc
add
push
call
fbld
testl
lods
loope
xchg
test
lcall
popf
inc
mov
mov
cmp
lret
lods
jno
xchg
push
icebp
push
add
dec
dec
ljmp
dec
cmp
jg
sub
outsl
and
stos
out
rcrb
xchg
out
xchg
pop
xchg
add
out
pop
daa
hlt
mov
cs
cmpsb
call
leave
stos
std
mov
cli
jecxz
add
ret
es
push
xchg
push
sbb
xor
mov
cwtl
push
ret
out
mov
pop
cld
cmp
and
and
nop
jl
mov
jecxz
mov
sbb
adc
push
nop
cli
jb
dec
sar
mov
cmp
ret
lret
jb
ds
cmp
insb
push
push
adc
cmc
in
cwtl
std
jmp
xchg
and
ds
ficomps
test
xchg
mov
shll
mov
cmpsb
nop
cmpsb
cli
xchg
decl
nop
and
mov
jle
xlat
insl
jp
nop
sub
cmp
push
and
push
dec
jno
mov
mov
mov
pop
xor
aam
es
lods
dec
sbb
daa
stos
int
add
sti
sahf
fisubrs
and
mov
ror
sub
sub
or
mov
iret
cmpl
ret
std
dec
adc
stc
push
jge
aas
cmp
push
fdivl
add
push
insl
mov
rorl
loopne
mov
or
repz
lret
mov
lods
mov
mulb
stos
jb
test
leave
enter
sbb
out
stos
mov
movsb
fsubrs
sub
cmp
mov
ret
xchg
cmp
popa
pop
push
add
mov
inc
mov
and
mov
jae
jl
push
add
jg
add
mov
sbb
sub
push
adc
scas
test
mov
addr16
cmpsb
mov
test
dec
cmpsb
and
ds
rorl
stos
push
mov
ljmp
sbb
pop
or
pop
pop
out
iret
lahf
pop
xor
in
aad
xchg
adc
push
inc
loope
repnz
push
int
adc
outsl
xchg
filds
inc
nop/reserved
mov
movsb
mov
daa
insb
xor
repnz
jp
dec
mov
push
faddp
adc
push
dec
outsb
sbb
mov
lcall
leave
or
inc
push
rcr
ljmp
and
cmp
or
cmp
sbb
push
imul
jne
dec
insb
nop
jb
sub
and
ret
test
xor
jp
std
adc
and
inc
sub
mov
shl
repz
mov
push
std
mov
stos
js
and
daa
out
in
push
jae
jge
cmpsb
xchg
hlt
pop
fs
sub
xlat
fcoms
shrl
jno
inc
cli
jge
into
lea
mov
adc
mulb
push
imul
outsb
push
loope
nop
mov
scas
fidivrs
xor
push
push
test
data16
pop
inc
xor
leave
xchg
mov
int3
pop
adc
pop
and
cmc
lds
push
and
jns
mov
test
mov
lods
xor
shl
xchg
xor
inc
pop
stos
inc
mov
push
sbb
add
or
out
lcall
pop
arpl
inc
adc
insl
xor
pop
cmp
int
cli
and
dec
int
test
pop
mov
or
lret
sarb
imul
aaa
arpl
sbbl
fsubr
lock
xchg
icebp
pop
push
inc
rcll
ret
movsb
jnp
mov
cmp
xchg
aam
fwait
ljmp
sbb
es
and
loope
aas
movb
repz
jg
mov
push
inc
sub
pop
and
rcll
sub
out
and
out
mov
repnz
push
test
pushf
add
pushf
out
in
sub
pop
lods
fnsave
aas
out
dec
arpl
ret
xor
or
orl
and
mov
cmp
push
idiv
cmova
lahf
pop
xchg
mov
rcll
pop
inc
out
rclb
and
xchg
test
jle
testb
mov
pop
cld
fdivrp
xchg
add
xor
movsl
dec
mov
mov
or
mov
ds
mov
and
push
dec
ss
shll
andb
int3
cmp
add
xlat
ret
mov
test
sbb
daa
adc
out
pop
add
scas
adc
add
adc
add
or
pop
jl
stos
sbbb
in
scas
cmpsl
inc
ret
dec
cmp
fs
out
jp
add
mov
rclb
jecxz
dec
and
xchg
leave
mov
in
xor
pusha
outsb
dec
and
in
push
decb
add
ret
mov
rolb
xor
pop
mov
sub
jecxz
mov
inc
xorb
shll
aas
in
sbb
arpl
stos
rcr
scas
fstp
leave
inc
test
jge
pop
cmpl
stos
adc
sub
pushf
mov
mov
pop
add
out
outsb
jl
cmpl
or
push
mov
not
scas
test
mov
sbb
and
pop
adc
or
ret
push
pop
pop
pop
fs
aas
rcrb
pop
lds
cld
lret
shrb
enter
sub
mov
repz
shl
call
xlat
add
push
xchg
mov
mov
adc
aam
fucom
repnz
cwtl
pop
icebp
nop
outsl
out
das
lcall
mov
addl
jmp
leave
xor
stos
aam
sub
jns
stos
ja
lds
xchg
xchg
xor
clc
daa
pushf
in
cmp
add
pop
hlt
xchg
int3
mov
js
pop
in
pop
leavew
push
in
sbb
push
shll
fcoml
push
push
xchg
mov
lds
mov
mov
mov
mov
insb
xor
or
push
mov
push
mov
cmp
lods
enter
mov
add
inc
andb
test
mov
cltd
negl
pushl
lds
andl
clc
in
popf
inc
cli
mov
cmp
mov
test
push
cmp
ret
add
pusha
inc
lds
pop
ljmp
push
stos
mov
sub
cwtl
xchg
push
insl
stos
pop
pop
adc
add
push
gs
xchg
mov
lods
xorb
repnz
push
movsb
adc
in
fnstenv
mov
add
bound
push
and
push
int3
pop
arpl
xchg
mov
gs
fwait
jecxz
sub
scas
sarl
out
pusha
push
mov
ljmp
pop
adc
cmpsb
xchg
add
inc
add
jb
sbb
add
stc
jmp
mov
fwait
cld
dec
xchg
daa
arpl
sbb
add
pop
cmp
pop
mov
out
sbb
xor
jp
cmp
sarb
fstpl
or
xrelease
dec
push
xor
je
paddsb
cli
jns
jno
loop
sbb
jg
sbb
push
cltd
das
push
sbb
sarl
mov
dec
fcoms
lret
pop
scas
out
mov
or
and
into
sti
in
loope
add
push
es
sbb
iret
stc
std
mov
dec
mov
push
sahf
shrl
daa
popf
pop
xchg
mov
cmp
sti
mov
jnp
push
ffreep
pop
or
negl
orl
jno
mov
push
dec
test
or
aaa
cmc
jae
dec
nop
dec
das
mov
cmc
inc
out
or
inc
inc
jns
int3
xor
mov
and
adc
push
xchg
xor
adc
lock
test
push
xchg
cld
dec
mov
mov
xlat
lret
in
rolb
orl
jne
int
lret
je
push
cmp
push
xor
xor
lcall
es
sbb
shlb
add
in
xor
mov
mov
jp
lcall
sub
mov
mov
scas
divb
xchg
outsl
js
dec
jb
dec
mov
and
or
testb
mov
cmp
or
mov
jae
mov
sbb
xor
scas
inc
jmp
inc
or
jp
xchg
popf
mov
adc
or
sbb
enter
dec
add
dec
xchg
scas
es
lea
sub
push
pop
and
int
or
xchg
mov
enter
jns
xchg
iret
outsb
test
out
sub
fcmovnb
sbb
cld
lock
inc
rcrl
xor
into
ret
aad
imul
lods
inc
std
sbb
loopne
sahf
xchg
jl
aas
push
nop
insb
sbb
nop
xchg
xlat
adc
add
sbb
sti
xchg
test
aaa
lods
andb
iret
incl
jge
dec
pop
push
mov
xchg
cmc
iret
repz
lods
jnp
cs
je
sub
pop
in
loope
push
mov
loopne
mov
add
and
push
repnz
je
pop
mov
ror
scas
out
mov
mov
in
nop
nop
mov
sub
test
xchg
jns
jno
push
mov
xor
pop
das
shll
pop
inc
and
daa
aam
lret
xchg
cld
rorl
dec
lods
push
xchg
jns
xchg
pop
shlb
jo
inc
mov
inc
je
xor
mov
add
or
xor
mov
idivl
jle
fisttpl
mov
or
mov
cmp
cmp
jno
shrb
mov
sahf
pop
push
jno
add
aam
cmp
cmp
loope
or
addr16
shl
cmpsl
les
clc
out
xor
cs
int3
mov
ret
sub
test
test
movsb
hlt
cmc
int3
fcomp
imul
cmp
xchg
mov
rcr
xlat
cmpsb
xor
loope
in
sub
mov
adc
sub
sub
ret
lcall
movsb
ret
mov
add
adc
pop
scas
sub
enter
int3
inc
rcrl
js
xchg
sbb
int3
lods
pushf
xchg
xor
jno
lcall
push
mov
push
iret
cli
and
cltd
rcll
xor
rol
pop
mov
and
mov
pop
cmpsl
xor
pop
xor
mov
jo
mov
inc
inc
icebp
jmp
and
out
cld
adc
test
mov
dec
sub
and
xchg
mov
test
inc
mov
mov
jmp
pop
xrelease
mov
fidivrl
xchg
mov
scas
and
rol
lret
push
loop
lcall
int3
pop
mov
mov
mov
cmp
ret
leave
and
xor
cli
cwtl
pop
cmp
inc
push
mov
add
sub
sbb
inc
out
addr16
cli
fisubl
inc
mov
js
pop
sti
mov
push
clc
push
andb
mov
sti
mov
pop
ss
out
lea
pop
ss
mov
lret
js
repnz
call
inc
lods
negl
push
jl
cld
daa
lahf
xchg
in
push
push
mov
xor
xor
call
fwait
fwait
fs
jp
jmp
lods
and
dec
sub
sub
adc
sbb
in
inc
xchg
inc
pop
mov
ja
mov
mov
fucomp
sub
or
adc
jl
cmc
mov
or
mov
movsb
fisubrl
mov
jo
xchg
xor
jecxz
popa
rcll
fisttpl
cltd
popa
or
or
insl
or
jbe
adc
inc
mov
lahf
mov
sarl
inc
sub
loope
hlt
shlb
insb
or
inc
xlat
push
or
out
incb
xor
sti
xchg
std
mov
popf
jbe
inc
test
add
mov
out
stos
into
lahf
inc
pushf
xlat
pcmpgtb
mov
cwtl
mov
jl
jns
xor
mov
jecxz
fwait
ja
mov
mov
pop
mov
rolb
adc
hlt
pop
mov
test
push
xor
lods
stos
push
jecxz
ljmp
sbb
xchg
pop
inc
fmull
das
fnsave
hlt
fdivs
cmp
outsb
dec
popa
jmp
mov
adc
hlt
inc
sti
scas
cmc
cltd
mov
cwtl
arpl
pop
pop
loopne
aas
add
int3
cmp
push
xchg
pop
xchg
popf
aas
repnz
jmp
out
and
mov
cmc
pushf
sbb
cmpb
add
cmp
hlt
out
dec
imul
ss
sub
adc
dec
xor
xchg
mov
inc
fistpl
dec
xchg
cmp
mov
pop
xor
sub
cmp
dec
loopne
aaa
sub
inc
adc
cli
ja
mov
dec
dec
push
sti
cmc
cmp
sbb
cwtl
adc
js
lock
and
sbb
sbb
xchg
movsb
adc
sub
add
push
cmp
add
outsb
inc
push
push
ds
add
scas
out
mov
inc
insl
sbb
and
xor
push
or
cmc
push
and
or
pop
lahf
mov
shlb
jl
rcr
mull
idivb
xchg
pop
jno
divl
int
dec
jmp
jb
stos
and
lods
cwtl
jle
dec
loop
iret
pop
push
mov
stos
or
xchg
std
jbe
mov
out
outsl
dec
jmp
and
adc
sub
add
das
test
sbbb
in
aaa
cs
adc
sub
lahf
pop
mov
test
lahf
inc
mov
inc
addr16
mov
sbb
mov
jl
das
xchg
pop
dec
cmp
jnp
xlat
lock
test
xchg
bswap
sbb
sub
and
out
testl
mov
xor
jbe
loope
and
mov
pop
or
push
fsts
xor
fisttps
sub
rolb
imul
insb
mov
xor
call
sarb
push
mov
mov
leave
ficoml
mov
jp
cmp
int
and
pop
xor
test
and
test
pusha
dec
pop
cmp
inc
in
out
sbb
sbb
mov
cld
loopne
rcr
cmp
mov
fndisi(8087
in
sub
test
test
fldenv
inc
js
outsl
xlat
pop
jmp
dec
push
jo
jmp
push
push
mov
inc
loopne
add
add
sbb
les
inc
gs
pop
sub
cmc
into
xor
ret
push
jnp
ss
cmpl
int
fcoml
rorl
dec
push
jp
in
imul
xor
int3
pop
sub
bound
push
pop
xchg
add
leave
jg
mov
xchg
in
xchg
mov
dec
test
out
insb
jl
iret
xchg
lahf
push
lock
test
add
mov
out
inc
pop
mov
mov
out
loop
scas
sub
push
jo
mov
push
mov
lret
push
movsl
mov
xlat
mov
imul
mov
mov
cwtl
mov
cmp
adc
lock
test
push
repz
inc
xor
xchg
inc
sbb
push
push
push
mov
roll
jns
jge
lods
test
in
jge
xor
pop
dec
cmp
cltd
in
add
icebp
je
test
fimull
xor
fsubrl
movsl
std
xor
inc
ss
push
jb
packuswb
mov
sub
jmp
stc
cltd
jp
or
jmp
imul
and
and
jecxz
sub
addb
outsb
cmp
dec
lods
outsb
jge
lods
enter
cmp
daa
adc
gs
scas
out
inc
xchg
mov
fs
lret
dec
insb
js
pop
enter
lds
xchg
fdivr
xor
mov
mov
mov
loope
pop
or
mov
fsubrs
lahf
add
mov
mov
sbb
cmp
mov
mov
xchg
mov
dec
fsubl
and
xchg
jle
sbb
das
iret
inc
test
stos
inc
adc
jp
mov
lods
and
shrl
popa
and
test
mov
or
pusha
pop
aam
sbb
out
arpl
sbb
sub
jp
mov
push
dec
pop
jo
lock
fidivs
adc
jns
shlb
and
add
test
pop
or
xchg
fisubrs
or
pop
jge
stc
sbb
fwait
or
popa
cmp
ret
fstpl
andl
adc
cs
fimull
xor
xchg
jne
out
std
cmp
push
mov
cmp
pop
bound
or
xchg
cmp
inc
xchg
cli
imul
mov
sbb
cmp
or
xchg
test
jp
test
sti
jl
arpl
push
scas
adc
inc
mov
mov
inc
loopne
add
aam
jnp
add
pop
pop
sbb
sub
adc
mov
stos
or
sti
or
mov
pop
mov
inc
ret
sbb
mov
jne
jae
jle
cmp
push
push
pop
mov
mov
test
dec
lods
sahf
mov
xchg
sbb
arpl
in
xchg
iret
jecxz
cmp
push
test
inc
scas
dec
push
lar
mov
jmp
inc
mov
fistl
xor
add
and
mov
dec
js
aaa
and
das
out
or
or
aas
jns
jge
cmp
rcrl
jmp
loope
dec
mov
rcll
push
mov
mov
movsl
inc
or
inc
repz
mov
enter
ds
data16
loope
mov
lcall
and
arpl
mov
xor
mov
jbe
ffreep
test
pop
cmp
xchg
pop
pop
in
and
popf
aas
out
stos
ja
cmp
or
jmp
xchg
out
cltd
outsb
fsubs
popf
mov
adc
inc
adc
push
mov
add
push
pop
insb
call
stos
and
daa
push
lcall
das
pop
or
rcr
or
xchg
ljmp
adc
jg
or
adc
stos
lods
aaa
andl
or
or
loop
loop
in
push
leave
ljmp
pop
mov
pop
add
pop
dec
movsb
jecxz
rorl
outsb
aaa
mov
mov
insl
ret
call
jmp
sahf
jmp
lret
lret
mov
cli
push
mov
cld
data16
iret
repnz
mov
or
push
inc
dec
add
andb
xchg
sub
test
idivb
and
daa
stos
or
lret
inc
add
divl
test
mov
jb
push
pop
xchg
pop
mov
movsb
test
pop
inc
gs
hlt
xor
cmpsl
xchg
add
pushf
scas
push
sbb
pushf
test
inc
mov
ljmp
push
shlb
popa
mov
cmp
mov
nop
cwtl
add
mov
adc
cmpsb
xor
aas
aas
cmp
push
adc
pop
add
dec
loop
fs
aas
gs
or
pop
lods
pop
rcrb
imul
test
inc
stos
or
pop
out
out
cmp
pushf
ret
jb
data16
mov
pop
jnp
test
xchg
sbb
aam
mov
cs
push
mov
push
scas
xchg
add
pop
ret
fadds
out
xchg
outsb
xlat
jl
cmpsl
dec
jne
icebp
movsl
push
arpl
adc
enter
jb
adc
mov
and
insb
std
pop
xchg
pop
enter
ss
mov
lret
cmp
fldl
xlat
add
call
enter
nop
imul
gs
mov
lods
nop
add
rol
mov
xchg
adc
jae
sub
sub
cmp
loop
xchg
cmp
pop
or
or
mov
lea
xor
nop
mov
push
nop
lods
inc
mov
pop
sub
mov
and
add
dec
testb
scas
cltd
dec
sbb
pop
addr16
inc
xchg
inc
jl
idivl
bound
sbb
xor
push
mov
lahf
mov
pop
cmp
pop
cmpsb
pop
cmp
insl
add
mov
shlb
movsb
mov
ds
movsl
mov
popf
cmp
pop
add
shlb
lahf
loope
xchg
imul
adc
inc
cmp
sub
inc
jmp
iret
push
inc
repnz
dec
push
adc
sbb
fsubrs
test
rcrb
jb
imul
xor
mov
xchg
mull
sub
push
ret
mov
out
add
push
xchg
and
sti
add
cwtl
test
test
ss
outsl
ss
das
dec
enter
xor
lret
fldenv
xchg
jno
push
scas
sub
inc
sbb
push
xchg
cwtl
push
cmp
and
xchg
jle
std
gs
repz
jg
fsub
imul
ja
jge
sub
into
adc
daa
nop
inc
adc
adc
pop
pop
das
add
push
dec
dec
mov
jbe
xor
or
mov
gs
pop
icebp
mov
sbb
push
inc
div
cltd
bound
cmp
test
mov
sub
outsb
jecxz
in
sti
lods
push
aaa
mov
testl
and
pop
scas
adc
sub
popa
aas
push
adc
mov
jno
test
les
out
leave
fnstsw
loop
in
fimuls
pushf
fcoml
test
insl
push
add
leave
pop
ja
outsb
mov
sahf
stos
push
pop
stos
fnstcw
mov
cmp
std
scas
shlb
sbbl
mov
or
outsb
fs
ret
mov
fadds
es
pop
push
les
inc
mov
je
in
dec
cld
pusha
fisubrs
mov
iret
sarl
repz
mov
mov
fwait
pushf
jo
cld
mov
scas
mov
mov
sbb
and
pop
loope
xchg
int3
cmp
jne
push
mov
dec
cwtl
jl
arpl
aaa
aad
fisttpll
in
inc
div
clc
fidivs
das
fisttps
sahf
adc
sub
imul
cmp
loope
std
arpl
jae
call
mov
mov
dec
dec
fwait
cmp
rclb
lcall
cwtl
xchg
cmpl
cmp
lea
jl
mov
je
cmp
out
adcl
lcall
mov
jmp
aaa
push
xor
jmp
and
lea
es
cmp
mov
add
add
dec
sbb
xor
mov
jmp
cld
sub
sarb
mov
or
lods
in
add
dec
and
ret
xor
xchg
or
jns
cmc
add
push
fnstenv
mov
sbbb
imul
or
push
mov
dec
jbe
jo
push
jl
sahf
add
ret
fsubr
icebp
inc
xor
mov
mov
and
lods
fisttpl
mov
cwtl
repz
inc
incb
jmp
iret
ss
sub
mov
das
dec
test
or
repz
jbe
arpl
call
adcb
sub
or
gs
cmovl
pop
pop
bound
mov
pop
ja
stos
stos
mov
adc
dec
mov
arpl
jl
ljmp
pop
inc
jnp
repnz
xchg
fs
jle
adc
or
or
loopne
jb
outsl
or
mov
dec
mov
mov
xor
movsl
sbb
fcompl
add
xchg
and
xor
and
aas
mov
arpl
mov
mov
xchg
data16
fcmovbe
aam
jg
pop
insl
jns
into
dec
in
jmp
rolb
inc
stos
push
adc
shll
and
aas
add
or
and
xchg
rcrl
aad
mov
ds
push
icebp
cltd
ss
cwtl
push
pop
xor
adc
sub
push
std
cltd
ljmp
pop
out
push
mov
cmc
pushf
test
sub
dec
mov
sub
test
test
lods
cwtl
clc
ss
and
fwait
mov
mov
int
cmc
loop
das
add
outsl
scas
sub
out
enter
pop
cmp
add
xchg
sahf
jne
mov
inc
fildll
push
mov
cmpsl
xor
outsb
pop
out
adc
int
arpl
ja
push
adc
mov
test
xchg
xor
push
mov
xor
rclb
xor
iret
cmp
fcoml
out
and
push
out
outsb
jge
lock
dec
add
fxch
sbb
icebp
dec
xchg
cmpb
out
icebp
xchg
lods
jbe
imull
fdivrl
dec
in
arpl
jmp
sub
adcl
xchg
pop
mov
sub
in
outsl
dec
mov
ret
xor
mov
xlat
cwtl
mov
das
les
inc
ficomps
ret
pop
pop
jnp
mov
dec
push
cmp
out
mov
dec
sbbb
fnstenv
test
int3
cmpsb
lea
lods
and
sub
sbb
push
mov
lods
mov
jg
cmp
ret
jne
arpl
in
mov
insl
cmp
cld
lock
mov
sub
cld
fstpt
or
push
pushf
aad
cmp
dec
mov
jae
xor
xchg
mov
add
xor
es
jno
imul
js
jns
sub
push
add
nop
pop
push
stos
into
xchg
mov
adc
push
push
push
push
fists
sub
icebp
aas
stos
pop
xor
mov
imul
movsb
mov
lods
mov
adc
sub
cmpsl
jmp
adc
push
jnp
dec
addr16
or
pop
push
incl
popa
mov
inc
bound
mov
xchg
call
pop
jbe
mov
sub
int
cltd
mov
gs
jb
in
cwtl
lret
mov
xlat
cltd
sub
cmp
jne
daa
lods
ss
inc
aam
push
mov
cmp
dec
xor
fldl
ret
ret
or
adc
xchg
mov
add
mov
pop
sbb
dec
fistpll
xor
daa
movsb
dec
js
dec
sub
inc
mov
sbb
gs
mov
mov
adc
or
into
push
orl
ret
sbb
inc
ret
mov
arpl
arpl
aad
popw
cli
mov
mov
inc
pop
adc
push
cmp
push
bound
jmp
arpl
stos
fidivl
icebp
adc
popa
bound
jge
imul
xchg
cmp
je
sbb
xchg
pand
pop
jne
lds
insl
pop
dec
inc
cli
loope
xlat
xlat
scas
inc
xchg
std
aam
dec
outsl
push
cltd
into
enter
cwtl
and
add
lds
std
jae
and
rolb
test
sbb
das
pop
jne
sub
mov
mov
imul
jmp
and
dec
imul
shl
sahf
in
pop
and
sub
inc
or
fwait
pusha
mov
sub
mov
cltd
add
push
xor
mov
popa
int
lods
push
mov
adc
mov
icebp
dec
cmp
sbb
fcoml
cli
sbb
mov
sub
test
repnz
and
rcrb
icebp
sbb
xor
sub
fs
outsb
mov
out
cmp
cltd
into
jmp
dec
das
mov
stos
lcall
rcl
lods
std
pop
jns
js
out
out
sub
cmc
movsl
test
in
dec
mov
xchg
push
loop
leave
adc
or
mov
xchg
cld
push
int3
dec
movsl
out
push
cmp
imul
add
shll
lods
imul
pop
mov
sub
movsb
push
shlb
enter
mov
jne
push
sub
push
mov
pop
lret
lcall
jb
or
or
sub
clc
shll
push
inc
push
in
in
xor
and
and
xchg
cli
jmp
and
pusha
dec
fiadds
stc
aam
or
mov
js
add
dec
xchg
cmpsl
pop
and
sub
sbb
fimull
adc
xor
adc
jecxz
fadd
imul
dec
fucomip
ss
sbb
sub
mov
shl
xchg
and
dec
addl
and
xor
sbb
sahf
add
sbb
inc
fwait
mov
mov
popa
jno
daa
push
xlat
dec
data16
mov
fstpl
inc
cld
and
pop
std
shlb
pop
mov
out
movsl
push
cmp
mov
bound
jno
xor
mov
jae
push
and
imul
mov
sub
push
dec
xchg
sahf
cwtl
movsl
arpl
loope
adc
ret
outsl
sahf
dec
and
sub
pop
add
sub
ret
stos
dec
mov
sbb
mov
pop
and
popf
out
mov
and
pop
or
jbe
lds
mov
aam
scas
aad
inc
mov
aam
xchg
lock
mov
movsl
jle
dec
cmp
aaa
test
push
sub
cwtl
xor
sub
pop
shll
fisttpll
xor
call
cmp
leave
push
out
sahf
dec
clc
je
or
inc
push
xchg
pop
push
push
fdivs
xlat
lods
jno
push
inc
jl
mov
mov
in
dec
mov
mov
movsl
cmp
xor
pushf
mov
out
xor
fisttpl
xchg
push
cmpb
rcll
dec
or
repz
push
fstpl
sub
lods
test
mov
or
test
xorb
repz
sbb
jge
outsl
test
push
in
ret
test
xor
xlat
ja
xor
outsb
fisttpll
xchg
or
xchg
bound
add
daa
push
jo
mov
test
cs
ficomps
mov
dec
jae
cmp
lock
pop
mov
arpl
fbstp
fdiv
das
int
dec
xlat
push
push
sub
jb
push
cmp
leave
pop
ret
jle
pop
stc
out
xchg
fs
out
sub
mulb
daa
and
xchg
mov
aad
cwtl
pop
pop
js
stos
pusha
cmc
jle
push
pop
dec
inc
xchg
jl
jecxz
dec
sbb
repz
negb
aam
and
ljmp
pop
ds
push
pushf
xlat
loope
lods
xchg
xchg
dec
subl
test
pushf
add
dec
cmp
pushf
adc
test
movsb
divb
aaa
push
fistpll
sub
jl
rol
jne
lds
jmp
push
add
adc
xor
xchg
mov
push
mov
sbb
push
pop
stos
incb
dec
pop
stos
mov
ss
mov
out
jmp
test
out
cmpsb
lods
push
out
mov
dec
js
or
insb
and
lock
insl
popa
aad
inc
dec
inc
jge
push
cmpsl
std
mov
loopne,pn
repnz
push
and
mov
inc
mov
pop
jns
add
xchg
int3
lock
sti
adc
dec
push
jne
sub
adc
push
enter
pushf
in
jle
loope
nop
mov
rclb
pop
sub
lods
in
add
or
adc
adc
jg
pushf
jmp
inc
pushf
dec
jb
mov
hlt
scas
mov
lahf
jno
adc
adc
cmp
jecxz
and
mov
add
mov
js
test
test
int3
data16
mov
or
cli
shrl
cmc
test
jno
sbb
es
mov
push
cmp
adc
sbb
pop
add
in
movsb
lock
icebp
out
stc
movsb
jo
repnz
mov
jno
scas
push
cltd
add
add
and
imul
fs
pop
aaa
mov
mov
xor
inc
cmpsb
fwait
jmp
ret
inc
nop
adc
adc
shrb
call
mov
outsl
mov
lods
and
ret
push
add
adc
adc
xor
inc
in
and
popf
sub
or
sahf
pop
aaa
mov
sahf
mov
js
or
push
mov
pop
push
jne
jae
xorl
sbb
inc
sbb
cmp
pop
aaa
into
imul
and
inc
cwtl
outsb
fcomps
push
inc
ljmp
ja
fwait
cltd
pushf
fiadds
pop
pushf
sub
gs
lcall
mov
std
sbbl
push
lds
and
cmc
mov
mov
jbe
jae
and
bound
aam
cmp
daa
mov
outsb
pop
test
in
pshufw
dec
cmp
mov
ds
push
and
dec
daa
adc
gs
or
xchg
push
sbb
xor
movsl
xor
xor
dec
jp
movsb
cmp
add
mov
push
mov
rolb
lds
cmp
jmp
jl
jmp
mov
rolb
add
or
cmp
aad
js
cmpb
js
pop
xchg
jne
mov
fcompl
adcl
lret
inc
daa
inc
cmp
push
jecxz
scas
movsb
mov
test
cld
fimull
mov
inc
or
fld
push
dec
cmp
lods
pop
and
pop
pop
adc
test
cwtl
and
jecxz
jnp
mov
inc
sahf
inc
aaa
xchg
push
and
push
nop
jns
nop
xchg
and
push
pop
addb
popf
rcl
add
mov
hlt
bound
adc
lea
and
mov
inc
mov
mov
xor
in
sahf
xchg
fsubr
mov
pop
movsl
sub
push
pop
out
es
loopne
and
adc
jmp
aad
or
jbe
sbb
ja
in
lods
pop
std
les
sbb
mov
in
cld
cmp
jecxz
sbb
imul
mov
push
dec
pop
jno
lea
pop
mov
pop
clc
les
mov
push
push
pusha
notl
movb
out
push
aas
xchg
xorb
mov
int3
test
out
jmp
or
xchg
mov
into
imul
adc
sub
test
adc
sub
dec
mov
bound
cmpsb
cmp
and
xchg
je
jp
fwait
jmp
mov
les
mov
pop
jne
jp
inc
jo
and
shr
mov
jnp
bound
sub
cmp
ret
dec
in
sbb
hlt
jmp
sbb
pmaxsw
sub
push
pop
and
cmp
scas
fucomip
mov
hlt
sbb
xor
jbe
xor
sub
mov
pop
adc
gs
push
loopne
stc
or
stos
imul
add
jl
fidivrl
stc
jno
aaa
push
gs
mull
dec
cld
jo
xor
in
mov
subb
sub
push
lock
add
aam
lret
adc
jl
jp
aad
xor
xor
xchg
call
mov
mov
pop
jbe
xor
mov
ja
jp
add
push
scas
push
adc
loopne
sub
dec
je
push
inc
fcmovu
add
and
add
imul
mov
lods
sub
test
adc
dec
pop
les
shll
push
fs
dec
out
ret
or
pop
push
and
cs
inc
xchg
push
mov
or
pop
imul
dec
jb
aad
mov
test
inc
pop
andb
sbb
xchg
es
and
cmpsl
nop
in
das
mov
popf
cmp
sub
fbld
addb
cs
push
pop
es
cli
pop
push
ja
test
test
sub
xor
mov
aam
cmp
add
inc
add
or
scas
cltd
cmpsb
scas
addr16
cmpsl
enter
inc
daa
insb
fisubrs
sub
mov
cld
xor
sub
jmp
bound
add
int3
cmp
dec
mov
fwait
and
stos
call
sbb
mov
adc
popf
test
popa
call
sub
sub
aam
jle
sub
or
divb
ljmp
pop
enter
int3
cmpl
pop
pop
out
xlat
push
pusha
add
xlat
pop
ret
adc
push
fsub
imul
or
inc
ds
je
fcmove
mov
dec
ja
sub
dec
clc
mov
repz
das
inc
inc
roll
adc
xchg
fbstp
xchg
ficoms
xor
subb
in
ljmp
dec
iret
and
ja
out
aas
out
mov
sub
sahf
out
repz
mov
out
or
cmp
std
in
push
push
sahf
dec
push
mov
out
ds
or
add
mov
jbe
repnz
sub
aas
adc
pop
test
cmpsb
jbe
idivl
cmpsl
sbb
mov
int
pop
lods
lock
push
pusha
movsb
inc
cmpsl
pusha
in
sbb
popf
aad
xchg
xor
and
push
push
or
fisttpll
dec
je
xor
adc
test
adc
lods
insb
negl
rclb
aas
hlt
lret
movsb
lock
mov
int
dec
pop
xor
repnz
push
ss
outsl
rorb
push
pushf
mov
sub
mov
mov
leave
out
lret
or
pusha
mov
imul
popf
ficoms
stos
sti
clc
cmp
test
into
movsb
cltd
arpl
fnsetpm(287
fld
out
sbb
imul
jns
pop
test
jmp
mov
adcb
pop
sub
in
adc
popf
out
mov
dec
adcl
cmpsl
push
in
stc
sub
lock
jge
push
adc
fidivs
dec
mov
out
scas
fcoms
daa
push
mov
xor
movsb
imul
aam
jp
faddl
mov
push
push
scas
sarl
cmpsl
ret
pusha
pop
cli
or
sbb
jns
mov
xchg
outsb
es
jnp
popa
fistl
jbe
je
mov
rcl
jae
xor
add
mov
mov
out
sub
pop
faddl
aam
xchg
sbb
arpl
cli
lds
movsb
xor
jnp
push
push
test
add
aaa
es
scas
push
sbb
push
dec
and
fs
aad
shll
xor
mov
lods
pushf
and
filds
mov
lret
in
or
sub
es
sbb
xchg
pop
repz
lcall
or
pop
jecxz
xchg
hlt
addr16
sub
mov
add
test
sub
xor
push
clc
es
inc
jle
cmpsb
pop
fldenv
or
fists
int3
sbb
hlt
rorl
out
pcmpgtd
pop
push
imul
jle
aaa
outsl
and
mov
jle
and
bound
movsl
adc
or
iret
fcoms
fs
in
mulb
mov
dec
test
roll
mov
mov
push
push
mov
dec
mov
xchg
gs
nop
aam
mov
cs
jo
adcb
ja
movsb
ljmp
je
idivb
lret
and
iret
push
jmp
outsl
mov
mov
enter
xchg
or
mov
jnp
jl
stos
xor
je
xchg
std
add
push
push
adc
fistps
xor
and
sbb
mov
jo
xchg
adc
clc
sahf
or
mov
sahf
dec
fsub
cmp
push
pop
jmp
out
add
inc
pop
push
fistl
or
sahf
enter
and
js
je
in
movsb
ljmp
or
lds
les
jo
lcall
xor
lock
not
push
mov
mov
mov
push
push
hlt
rclb
dec
inc
mov
mov
jnp
mov
dec
hlt
and
mov
and
xchg
push
push
mov
mov
mov
jge
lods
shlb
icebp
ror
lahf
sub
lea
inc
lock
pop
je
inc
sbb
popf
js
inc
pop
push
int3
mov
cmp
leave
test
xor
in
cltd
xchg
lret
mov
push
adc
test
push
insb
jecxz
mov
jp
fdivrl
and
xchg
ds
in
add
sbb
int3
dec
xlat
mov
cmp
into
add
or
sbb
ljmp
out
ja
xchg
pushf
mov
jbe
xchg
mov
lahf
or
sub
in
push
rcrl
adc
cli
xor
dec
stos
pop
mov
add
dec
fs
or
and
sarb
push
enter
or
sti
mov
push
out
ljmp
inc
pop
inc
hlt
mov
imul
push
inc
out
jmp
dec
mov
lret
mov
push
cs
xchg
pusha
xor
pop
leave
and
shrb
fwait
jmp
pushf
inc
movsb
add
in
sahf
adc
mov
xchg
sbb
inc
scas
pop
mov
cmc
xchg
mov
mov
adc
addr16
ret
mov
push
popf
pop
ret
dec
adc
std
cmc
push
pop
es
adcl
addb
js
shrl
xchg
adc
xchg
xor
jle
jne
fistl
fmul
cmp
dec
add
sub
add
push
dec
inc
adc
bound
hlt
out
xor
insb
push
notl
xor
mov
sbb
int
pop
pop
mov
pop
xchg
daa
push
jecxz
ja
mov
inc
lret
pop
imul
mov
jns
mov
mov
out
test
fwait
adc
push
sub
into
jno
rclb
push
or
lahf
dec
xchg
lods
mov
jae
add
add
bound
jno
push
push
sub
fildl
mov
movswl
mov
push
xchg
imul
flds
cmp
inc
inc
mov
enter
mov
xor
aaa
sub
sbb
out
sub
mov
jmp
sbb
push
lods
push
jno
cmp
stos
js
aaa
dec
and
in
jmp
repz
push
cld
fdivp
sarl
xor
negl
in
and
bound
adc
inc
cmpsb
test
ss
mov
mov
pop
fwait
call
inc
jae
insb
pop
sarl
push
int3
scas
jp
dec
mov
ja
les
cmp
sarl
adc
mov
ds
sahf
cmp
xor
and
ds
xchg
mov
dec
pop
dec
mov
jmp
movsb
stos
in
cmc
push
cmp
add
adc
sub
lret
push
lea
and
mov
stc
mov
shrb
inc
mov
stos
addr16
adc
int3
sub
sbb
loop
shrl
mov
arpl
jbe
test
pop
add
inc
sahf
mov
out
movsl
jl
repnz
sub
xor
lea
xchg
dec
jae
test
push
adc
adc
sub
mov
test
cmp
scas
dec
movsb
and
inc
sbb
dec
rorl
mov
cmc
cmpsl
add
sub
std
sbb
dec
not
jge
and
jmp
mov
enter
pushf
lret
test
cld
into
pop
dec
jae
in
addr16
xchg
mov
cmovg
test
test
faddl
mov
cmp
mov
mov
in
push
cwtl
inc
testl
dec
jp
dec
xchg
rcr
es
jbe
jns
adc
xchg
hlt
addl
decl
pop
test
scas
and
fistpl
dec
sub
mov
mov
jmp
or
fists
cmc
aam
xor
add
test
ds
jne
pop
push
or
loop
ret
mov
mov
and
es
int3
push
push
or
inc
lock
jae
push
inc
xchg
cmpsl
out
jne
sbb
mulb
mov
mov
mov
mov
sub
es
arpl
and
cmpsl
mov
ja
dec
sbb
mov
sbb
ret
mov
sub
sbb
xor
dec
push
sub
popf
xor
mov
cmp
jge
out
cmp
addr16
push
pop
xchg
add
ds
shlb
in
inc
adc
xorb
int
fstps
xchg
sub
cmp
dec
ljmp
jbe
xor
sbb
test
das
xchg
enter
push
xchg
mov
clc
mov
adc
enter
flds
sub
pop
pop
xchg
mov
outsl
adc
and
adc
jg
and
rcrb
pop
mov
movsb
mov
int
or
xchg
stos
cmp
push
pcmpeqd
repnz
mov
ret
jne
mov
sbb
xchg
inc
pop
cmovge
cmp
iret
xor
jne
inc
mov
push
loope
out
push
mov
sub
idivl
jno
mov
xbegin
outsl
adc
add
in
movsl
cmpsb
adc
pop
sub
repnz
daa
ja
pop
mov
jns
daa
fldl
push
and
mov
mov
mov
mov
pop
sub
mov
push
push
inc
test
pop
fdivr
cwtl
mov
xchg
popf
mov
push
lods
cli
and
mov
inc
xchg
aam
test
test
pop
test
movsb
scas
jmp
jl
mov
insl
mov
clc
pop
ret
dec
dec
sbb
xor
enter
push
or
notb
in
cmp
loope
fisttpl
mov
flds
pushw
loope
rorb
xchg
icebp
testb
mov
sub
xor
mov
mov
push
cmc
daa
mov
out
punpckhwd
fsts
sub
rorl
adc
insl
jne
out
fmul
cli
xchg
adc
lret
sbb
lret
sub
inc
add
aaa
adc
fs
push
aad
inc
rorb
cs
int
xchg
pushf
clc
mov
inc
aam
dec
orl
mov
pmuludq
jo
cltd
sbb
push
mov
inc
out
lods
mov
in
xor
das
jno
xlat
sub
out
push
bound
adc
inc
add
sub
jno
mov
lret
shlb
popf
xor
scas
out
cmp
mov
and
stos
sub
shll
dec
add
inc
je
xchg
push
test
pop
aam
jecxz
dec
mov
roll
flds
sbb
adc
xorl
iret
xor
dec
loope
or
sub
pop
lock
mov
and
mov
ja
bound
mov
push
out
inc
popa
enter
mov
cmp
xor
movsl
push
aaa
into
std
push
inc
data16
pop
xchg
dec
test
popf
jg
lea
jmp
shrl
mov
pop
push
sbb
pop
xchg
mov
dec
fucomp
ljmp
jle
insb
xchg
jp
aas
push
in
insb
adc
sub
lret
jmp
cmc
push
mov
push
ds
jb
mov
test
mov
js
dec
mov
das
lods
xchg
jmp
into
xor
aaa
push
cmp
xchg
or
jne
rcrb
pop
or
mov
dec
aam
mov
mov
in
movsl
fnsave
mov
jecxz
mov
xchg
or
in
pop
add
outsb
loopne
cmc
adc
pop
inc
push
push
xchg
lods
pop
leave
jle
or
das
cmp
outsb
mov
adc
je
in
dec
aas
out
cmpb
hlt
subb
stos
cmp
movsb
xor
jg
test
mov
clc
es
dec
mov
mov
repz
push
rcll
and
notb
pusha
pop
fstps
lock
stos
aaa
in
dec
fisubs
inc
out
add
mov
jae
jnp
repnz
outsb
cmp
es
sahf
mov
mov
jg,pn
pushf
mov
mov
adc
xchg
sub
sub
inc
roll
push
push
mov
mov
adc
dec
sbb
mov
add
stc
sbb
and
je
and
lds
es
mov
mov
inc
out
or
mov
addr16
sub
neg
cmpsb
rorb
int
mov
lods
mov
fstpl
xchg
cmpl
out
rorb
cld
jne
dec
xlat
push
addps
repz
pusha
dec
or
sbbb
sahf
sti
xor
cmp
aas
sbbl
fiaddl
imul
movsb
insl
lock
xchg
jecxz
arpl
sub
lods
ljmp
push
add
add
mov
inc
rolb
lcall
sar
int3
pop
mov
push
adc
xchg
scas
adc
xchg
xchg
dec
pop
dec
loop
push
or
icebp
repz
mov
sbb
mov
cwtl
push
pop
or
add
jg
fdivrl
dec
mov
nop
mov
shl
addb
add
dec
dec
xlat
jno
nop
add
mov
shrl
mov
cli
xor
or
in
adc
imul
scas
adc
repnz
mov
and
inc
mov
push
sbb
movsb
enter
mov
outsb
mov
add
jo
jno
inc
lock
out
inc
aam
clc
cmp
pop
int3
icebp
jne
adc
cmp
addl
cltd
repnz
push
jle
and
cltd
lret
dec
xor
push
sbb
sahf
and
sub
fstl
cs
ret
std
pop
movb
int3
jne
fstl
pop
loopne
and
test
repz
mov
loope
data16
pushf
insl
adc
xor
stos
dec
lahf
rol
mov
lods
in
setnp
js
test
jbe
iret
hlt
stc
outsb
xor
adc
les
or
lahf
bound
jbe
addr16
cs
adcl
sub
push
xchg
lret
xchg
or
rorb
and
inc
mov
aad
repz
dec
or
test
pop
pop
dec
and
movsb
ret
ret
jl
cvtdq2ps
dec
les
pop
sub
push
cmp
aam
mov
cwtl
stc
popf
adc
xchg
dec
fists
lcall
repz
rcrb
sub
std
lods
add
in
test
push
pop
jb
jns
dec
jno
mov
mov
add
fimull
in
pop
aas
in
inc
adc
xor
or
stc
cwtl
das
xchg
adc
xor
mov
pop
shl
in
ret
in
aas
fsubr
pop
andl
stos
jb
sbb
into
stos
mov
and
cmp
mov
test
ljmp
mov
pop
mov
add
data16
sub
pop
fstpt
adc
mov
push
icebp
xchg
fs
aas
xor
es
fists
add
jg
int
inc
dec
sub
jno
or
mov
clc
mov
pop
and
inc
sub
aam
sub
adc
icebp
test
test
lods
mov
xorl
dec
jnp
cli
pop
pop
fistps
inc
icebp
jb
push
sbbl
xorb
mov
jnp
adc
cmpsl
xor
or
in
fidivl
rol
xor
jp
xchg
inc
jbe
clc
jge
xor
sti
outsb
dec
push
push
enter
adc
jbe
shl
fs
scas
xchg
add
sti
pop
jno
sub
insb
and
in
dec
cmpl
test
sbb
inc
sbb
add
push
sbb
insb
ret
mov
pusha
jnp
mov
adc
add
jns
mov
jp
jg
pop
icebp
xchg
fbstp
testl
inc
lock
stc
push
cmp
cld
cltd
lods
out
pop
inc
xchg
cmpsb
pop
repz
sbb
or
movsl
or
loopne
aam
mov
sub
in
popa
fisttpll
xor
xchg
mov
lods
and
jge
outsl
jbe
div
mov
push
or
push
scas
push
add
js
push
mov
xchg
dec
popf
pop
int3
cmp
cmp
inc
hlt
inc
mov
and
loop
mov
jl
stc
push
mov
mov
cmpsl
lock
and
cmc
mov
fs
jne
sbb
pop
and
filds
leave
sahf
idivl
out
mov
or
sahf
push
rcrl
lcall
and
pop
orb
in
pop
mov
dec
fmuls
loope
add
in
scas
fsts
loop
pop
push
xchg
int3
sub
imul
jmp
clc
imul
sbb
call
cmpsb
popf
mov
mov
int
pop
dec
or
lahf
jg
mov
xchg
out
xchg
sbb
fsubs
testb
pop
call
rol
aas
mov
imull
filds
mov
sbb
inc
ss
leave
imulb
add
mov
adc
add
and
xchg
mov
mov
jb
inc
sbb
mov
shlb
sub
inc
xchg
testb
cmp
inc
addr16
push
out
pop
pop
inc
mov
cwtl
add
scas
arpl
loop
movsl
test
sbb
push
dec
loope
sub
jo
popa
pop
or
cmp
ficoms
cmp
push
nop
cwtl
shlb
add
sahf
mov
idiv
imul
cs
add
dec
jbe
aad
sbb
add
push
fiaddl
xor
mov
inc
aaa
sti
cmp
jb
repnz
imul
js
call
int
adc
xor
ja
xor
push
ja
add
sub
cmpsl
jns
jle
iret
pop
mov
rorl
add
test
mov
dec
mov
adc
sbb
xchg
push
andl
cltd
mov
lea
les
fisttpl
adc
mov
subl
adc
xchg
inc
pop
pop
mov
inc
mov
pop
pinsrw
ja
movsl
shlb
sbb
jl
push
pusha
in
mov
jno
ret
add
cltd
test
fwait
mov
cli
shlb
sbb
push
idiv
push
xlat
addb
xchg
lcall
sbb
add
and
and
mov
pop
fisubl
mov
add
cltd
mov
testb
notl
inc
das
mov
xchg
sbb
outsb
loope
gs
into
push
pop
loopne
inc
jb
loopne,pn
cld
jne
jnp
aam
xor
stc
loop
sahf
push
push
fnsave
or
inc
daa
mov
jae
or
and
jnp
cmpsl
nop
rorb
xchg
lcall
stos
sarb
pop
fs
push
or
cmpsl
xchg
xor
xor
push
jne
fisubl
inc
into
xor
pop
clc
dec
push
in
daa
ss
dec
xor
pop
jge
mov
mov
iret
lret
sti
jb
cmp
mov
mov
scas
fisttpll
push
int3
mov
mov
xchg
je
in
sbbb
fxch
lahf
ret
xchg
pusha
fwait
ret
ds
dec
testl
stos
cmpl
xor
cli
push
shlb
cmp
ds
xchg
lods
sub
push
lods
in
fists
cmp
outsb
push
jp
jecxz
lret
push
mov
out
jns
dec
push
movsb
jb
or
adc
in
mov
add
mov
adc
les
and
stc
inc
push
cmpsb
popf
cmp
loope
mov
pop
mov
inc
mov
xchg
mov
cli
fcompl
aam
jns
mov
in
mov
fs
dec
xor
adc
mov
flds
xor
xor
jb
pop
xor
stos
xchg
or
pop
jge
xlat
gs
movsb
cwtl
and
repnz
xor
sub
lret
inc
add
aas
mov
insb
mov
sbb
imul
mov
push
fs
or
pop
pop
je
cltd
sbb
cmp
fsubp
mov
mov
add
mov
lcall
fdivp
test
sub
addr16
jno
inc
stc
mov
dec
sbb
jg
out
andl
mov
pop
xchg
and
fwait
mov
xchg
clc
push
push
or
push
and
pop
mov
mov
mov
sub
sub
pop
ljmp
jne
mov
inc
jmp
or
mov
ja
mov
orl
adcb
adc
jo
int3
sub
pop
adc
jmp
popf
and
adc
into
sub
dec
jle
repnz
and
in
insl
adc
testl
out
iret
shrd
enter
loope
inc
sbb
dec
add
adc
xor
adc
xor
xor
ficompl
inc
dec
cmpsl
rcll
push
adc
dec
jno
mov
or
xchg
daa
rorl
cli
mov
loopne
cli
pop
mov
aad
pop
in
lret
in
xor
popf
add
mov
and
xchg
sub
das
add
popf
sbb
mov
jae
sbb
and
push
pop
aam
mov
push
adc
jae
ljmp
fadds
dec
imul
repnz
int3
mov
je
mov
push
push
std
rcll
lods
lods
repnz
dec
cmp
movsb
outsl
xchg
aaa
arpl
sti
mov
ja
daa
push
nop
pop
or
mov
shl
and
sub
es
mov
nop
insb
clc
test
push
mov
or
jae
filds
adc
jb
push
or
xchg
nop
push
sub
push
xchg
call
nop
pop
sar
std
and
sti
push
sbb
pop
adc
xchg
inc
sbb
jecxz
into
pop
jb
or
dec
jnp
repz
imulb
insb
ret
pop
jle
cs
push
clc
jb
fisttpl
sti
jbe,pt
mov
outsl
stos
xchg
ss
pop
dec
pop
in
push
jae
xor
pop
xchg
mov
daa
sar
push
inc
pop
je
pop
cwtl
adc
mov
popa
or
shlb
xlat
jo
pop
mov
jle
out
push
pop
test
leave
test
bound
cli
sub
dec
add
sub
out
ss
dec
mov
sbbb
dec
ffreep
jns
cmpsl
xchg
dec
repz
push
pop
roll
mov
push
insl
gs
andl
arpl
adc
aam
push
inc
iret
adc
shll
fsubrp
std
mov
into
mov
in
aad
leave
into
loopne
leave
sbb
inc
jb
dec
sbb
sub
mov
fcomps
and
aas
cmp
out
int3
popf
jae
pusha
adc
mov
jb
mov
push
xor
jmp
push
xor
jbe
cwtl
loop
and
inc
mov
adc
jae
cmpsl
cwtl
std
xorb
cvtpi2ps
or
or
fdivs
cmp
xchg
in
push
sahf
fadd
dec
dec
sbb
stos
sbb
push
dec
sub
jne
push
jp
cmp
call
xlat
pop
sub
std
addb
rcrb
xor
iret
lods
loop
jge
xlat
std
test
repnz
push
pop
push
testb
push
cmc
sarb
xor
pop
outsl
push
stc
push
hlt
out
jmp
not
shl
xchg
mov
lods
mov
aas
loope
sbb
test
adc
pop
push
aaa
leave
mov
popa
stos
mov
mov
mov
lcall
jae
jmp
lea
push
cmp
sahf
add
test
outsl
out
mov
cli
push
les
mov
out
dec
inc
pop
dec
loope
test
jae
dec
ss
inc
cmp
push
mov
cli
shll
inc
mov
pop
loope
push
pop
mov
pop
mov
xor
dec
jns
inc
cmp
cs
mov
sti
adc
int
inc
lods
pop
mov
leave
mov
imul
or
mov
xchg
enter
pop
or
insb
jmp
popf
scas
mov
jp
push
jl
sti
xchg
jne
xchg
xor
mov
jnp
sbb
dec
xorb
int
cmp
leave
ret
test
mov
push
xchg
mov
mov
js
ret
mov
add
out
xor
cmp
lret
scas
sub
test
inc
jae
or
cmp
std
out
jecxz
int3
push
jnp
jo
adc
bts
mov
test
inc
pop
divb
adc
xchg
or
cmpl
or
aad
stos
push
shll
stos
aaa
jo
inc
xchg
xchg
sub
js
xor
adc
push
imul
add
cmc
sub
xor
popf
sbb
push
test
adc
and
xchg
push
dec
minps
mov
popf
movsb
cmp
loop
repz
pushf
xchg
mov
sbb
in
insl
add
pushf
in
outsl
clc
add
add
cli
icebp
mov
les
xchg
mov
mov
lahf
movsb
mov
and
mov
fstl
lcall
xchg
stos
sbbb
cmpb
shrb
push
outsb
pop
es
adc
mov
not
mov
add
add
mov
int3
icebp
lcall
enter
inc
imul
jb
shl
sarb
stos
mov
movsl
mov
mov
js
enter
repz
mov
aam
pop
add
cmp
add
pop
nop
sbbl
cmpsb
int
mov
fdivs
inc
jmp
xchg
inc
jmp
dec
fildll
sbb
mov
mov
adc
xchg
hlt
pop
pop
in
cltd
jns
dec
inc
in
in
out
js
mov
jmp
jge
iret
ret
xor
xor
mov
mov
fdivrs
dec
data16
cld
jbe
aad
jecxz
push
sub
mov
and
or
xchg
pop
xor
push
mov
and
jne
mov
inc
pop
and
jmp
or
pop
jno
jg
mov
xorb
je
mov
sbb
push
int
out
add
jmp
or
cs
xlat
adc
jbe
mov
cmpsl
loope
xchg
inc
inc
pop
loopne
call
cmp
shlb
push
dec
add
fisttpl
add
lds
xor
push
sub
jns
sub
mov
xor
jp
push
pcmpgtd
mov
out
push
adc
lods
iret
sbb
sub
ret
mov
cld
xchg
jbe
push
pop
xchg
fwait
add
mov
push
pop
jl
pushf
ret
pop
loop
mov
sti
mov
mov
das
mov
je
jns
fimuls
or
push
sub
and
roll
movsl
pop
pop
pusha
push
sti
jb
sub
xor
lahf
aad
jmp
jne
roll
mov
imul
fildll
sbb
and
cmp
xchg
imul
xchg
jmp
stos
fistps
sbb
cmpsl
xor
push
sbb
pop
sub
lea
rcl
jmp
add
loop
rcll
xchg
mov
mov
pop
mov
mov
in
sub
test
inc
xor
in
mov
push
dec
pusha
fwait
mov
pop
sbb
xchg
js
mov
std
sub
jecxz
dec
dec
orb
add
mov
ret
insl
or
into
push
ret
fs
add
lea
mov
jae
std
loope
mov
xor
insl
pop
rolb
pop
mov
sub
andb
or
lret
cmp
loope
fidivrs
mov
js
add
or
mov
xchg
test
adc
fwait
or
out
fs
mov
push
pminub
lahf
mov
add
inc
testb
lahf
in
pop
xor
out
xchg
mov
mov
xor
adc
push
ja
and
adc
xor
add
push
insl
jo
mov
insb
mov
repnz
clc
push
into
data16
sarb
xchg
or
sbb
shrb
out
cmpsb
in
repnz
cmp
xchg
aaa
mov
push
add
ds
rcrl
xchg
lods
test
ja
je
fnstcw
aaa
mov
cmp
dec
addr16
push
mull
ds
divb
jecxz
jno
fildll
jmp
ja
mov
and
sub
fs
sti
adc
arpl
mov
jmp
jle
out
pop
bound
mov
mov
push
icebp
pop
or
jne
scas
mov
fsubl
jae
dec
xchg
jnp
xor
fwait
dec
inc
jg
adc
je
xchg
or
sub
je
jl
pop
pusha
lds
out
mov
jnp
ss
jecxz
cmp
jo
out
inc
inc
ljmp
pop
iret
dec
cmp
adc
out
xor
fxch
sub
loopne
mov
in
jl
xor
outsb
dec
mov
jle
hlt
faddp
inc
lock
mov
xor
jno
rcll
mov
out
jo
jecxz
daa
mov
cld
xor
ljmp
addr16
sbb
jbe
jo
fisttpl
lds
test
cmp
scas
mov
dec
pop
push
mov
inc
jb
pop
in
sarl
cld
sti
test
stos
nop
push
sbb
rolb
add
bound
sbb
cmpsb
and
push
test
jne
hlt
in
sbb
into
and
mov
add
mov
cmp
mov
adc
mov
xor
call
dec
pop
scas
test
push
mov
fucom
shll
outsb
xchg
sbb
in
fidivl
in
inc
movl
add
add
jp
xlat
and
dec
inc
fsubl
adc
clc
push
push
inc
mov
int
mov
jns
nop
stos
in
mov
nop
pop
adc
pop
daa
pop
mov
movsb
dec
mov
dec
adc
dec
aam
das
loope
sbb
or
negl
fwait
lahf
inc
or
out
sbb
inc
jb
ret
in
jns
push
pushf
hlt
es
inc
imul
xchg
push
mov
pop
movsb
or
jmp
lock
mov
xchg
adc
test
sbb
movups
push
fcoml
and
rcrb
jb
inc
or
arpl
pop
mov
lock
inc
fwait
std
jp
xor
inc
insb
mov
loope
mov
ficomps
out
das
ja
or
sub
jb
push
ljmp
mulps
in
gs
jne
movsb
push
loope
popa
xchg
out
push
popf
push
clc
add
sub
call
jmp
ret
ds
pop
sub
jns
movl
out
ffree
mov
and
iret
and
popa
fmul
lret
inc
xorb
enter
insb
test
pop
das
adcl
insb
in
not
inc
pusha
add
push
or
in
inc
cld
cmp
jae
jp
mov
aad
movsb
pop
stc
and
xchg
call
or
mov
out
jge
inc
shll
scas
cmc
pop
push
dec
lahf
mov
mov
es
push
jmp
mov
mov
or
btr
add
bound
dec
sub
xchg
fwait
sti
pop
sahf
js
aam
arpl
inc
int
cwtl
roll
xor
jnp
jle
add
pusha
dec
pop
popf
nop
mov
icebp
or
xchg
addb
or
dec
sbb
nop
data16
mov
adc
adc
mov
ror
add
imul
jbe
xor
lret
test
or
mov
out
pop
aam
inc
lds
jle
out
rcr
push
mov
jns
inc
ret
sti
inc
pop
add
rclb
xchg
and
fstpt
jl
mov
andl
and
leave
int
push
fildll
dec
addr16
imul
sbb
mov
sbb
push
not
dec
push
sub
daa
enter
inc
adc
lods
je
out
mov
rcrl
xor
or
lods
shlb
mov
daa
ss
sub
aas
sbb
mov
dec
jbe,pn
popf
mov
pop
rcrl
pop
mov
inc
jmp
push
mov
fistpll
jne
xchg
push
shll
imul
sub
sbb
in
bound
imul
lret
jbe
mov
mov
movsl
loopne
mov
lea
dec
mov
stc
cmpsl
adcb
sahf
in
and
jl
mov
xor
sub
or
push
jmp
je
push
insb
lods
pop
jecxz
add
push
insl
popf
jbe
into
pop
stos
push
int
xlat
cmpb
les
fwait
push
inc
and
fcmovu
pop
shr
sub
xchg
movsl
jbe
mov
sbb
xchg
or
adc
int3
repz
push
or
incb
or
jns
imull
cmp
jo
insl
mov
test
pop
or
mov
jl
jo
mull
sbb
in
xor
je
dec
xchg
push
fwait
inc
xor
xchg
sub
dec
mov
addb
loopne
popa
insb
inc
xchg
ret
stos
addr16
push
inc
aam
fs
stos
add
mov
adc
cld
fistps
push
sahf
fs
outsl
andl
loope
jl
fisubrl
mov
dec
and
test
ljmp
insl
pop
dec
adc
jae
cmp
xchg
sbb
outsl
or
das
mov
add
clc
dec
mov
imul
jg
js
cmp
push
mov
hlt
mov
cwtl
sub
sbb
ja
scas
cld
and
test
mov
mov
xor
mov
mov
andb
mov
xor
mov
rcll
sbb
cmp
or
out
roll
test
jae
movsl
mov
lret
cmp
cmp
add
jecxz
mov
push
dec
imul
daa
dec
sub
fstpl
mov
add
push
scas
push
stc
inc
sahf
repz
fldcw
out
mov
test
dec
mov
cli
xlat
cld
ja
mov
out
dec
insl
lcall
and
push
pop
scas
adc
adc
sbb
jge
xor
test
jge
sub
repz
mov
hlt
dec
jmp
push
popa
mov
pop
stos
sbb
fldz
or
lods
fcompl
jns
stos
dec
andb
aas
sub
sbb
out
sahf
orb
aas
mov
das
push
pop
iret
lods
push
fiaddl
pop
mov
fldl2t
mov
xor
push
push
sub
xor
das
mov
or
test
mov
mov
xor
mov
or
pop
mov
jns
xor
mov
stos
adc
repz
insb
jnp
push
rol
lahf
int3
ds
mov
addr16
mov
add
lds
push
push
mov
mov
hlt
pop
lods
into
inc
sbb
sarl
imul
test
movsl
mov
and
sbb
fidivs
shlb
movsl
cs
adc
lea
mov
xchg
jae
out
xchg
push
xor
test
int3
cs
stos
pop
gs
add
adcb
mov
push
outsl
in
sbb
mov
mov
sti
jl
stc
js
cmp
inc
fldcw
cmp
cmp
pop
stos
call
mov
ljmp
cmp
out
push
cwtl
popf
xchg
inc
imul
mov
pop
mov
mov
sub
jp
mov
xchg
inc
repnz
arpl
jne
xchg
fildll
lods
sub
sbb
xor
push
in
adc
push
inc
inc
out
testl
push
subb
or
sub
cmc
sbb
movsb
sub
cmp
loop
push
ds
cmpsl
or
adc
fists
in
lahf
pop
out
push
push
test
subl
mov
mov
mov
inc
int
scas
cwtl
mov
cmpsl
in
sbb
popf
mov
orb
pop
icebp
dec
jle
das
dec
jno
and
lret
imul
fdivl
hlt
jmp
jno
popa
pop
cltd
jmp
fimuls
xor
aam
inc
mov
dec
popa
xchg
neg
add
mov
and
pusha
cli
dec
and
daa
fwait
sti
jb
aaa
sbb
repnz
and
or
jo
pop
outsb
fimuls
dec
int
popa
stos
shl
xor
lods
push
sub
jno
test
sar
sub
ret
popf
fbld
jg
mov
mov
repz
rcrb
adc
shlb
xor
add
jmp
push
cmp
cmp
or
lahf
ficoml
sub
mov
add
dec
pop
sahf
shl
lahf
rorb
int3
out
mov
sbb
adc
cmp
jns
mov
fwait
xchg
jle
cmpsb
mov
or
mov
cmpl
push
divl
pop
dec
push
jmp
mov
mov
xor
mov
mov
add
jp
ljmp
shrb
mov
pop
pop
loopne
loopne
mov
inc
mov
jns
scas
dec
adc
jae
xchg
cli
mov
xchg
inc
dec
cwtl
push
ret
movsb
cld
ret
jno
lret
pop
and
jle
mov
das
js
jle
cmp
lods
pop
push
aas
in
dec
dec
xchg
test
test
cltd
sbb
jns
leave
aad
push
pop
push
loope
daa
cmp
push
sub
lock
push
push
dec
pop
lret
mov
int3
rclb
add
xchg
movsb
jns
cmpsl
test
out
cmc
dec
lcall
or
jae
pop
pop
mov
jno
fmuls
pop
pop
ficomps
or
mov
pop
imul
pushf
cli
das
fadds
sub
inc
or
insb
and
pop
mov
mov
mov
daa
popf
les
xchg
jmp
lea
dec
loopne
add
aam
dec
addl
shll
cltd
not
je
dec
imul
test
test
hlt
adc
mov
pusha
jne
xor
mov
fs
xor
push
and
into
mov
xchg
sti
jecxz
or
inc
cld
xor
cmp
jl
and
rorb
push
jl
adc
shl
dec
xor
adc
imulb
and
xchg
mov
dec
pop
jb
cltd
cmp
cwtl
adc
movsl
jno
movsb
lret
outsl
pop
ss
std
data16
jecxz
jmp
mov
or
aas
sbb
cmp
xchg
mov
add
adc
inc
loopne
push
add
dec
or
mov
add
shrl
and
lods
add
lcall
std
mov
cmc
or
mov
popf
arpl
mov
push
js
mov
fstl
scas
ds
stos
sbb
add
dec
jl
push
xchg
push
push
mov
movsb
imul
rcrb
jle
shll
push
aaa
rol
cmp
icebp
cmp
inc
xchg
sub
pop
jnp
movsb
add
jnp
gs
std
scas
lea
add
cmc
inc
inc
aas
cmp
repz
jl
addb
scas
xlat
jle
int3
pop
dec
or
clc
jne
fldt
daa
cs
cmp
out
repnz
aas
js
mov
lret
xchg
sub
push
sub
out
lds
xlat
or
lods
mov
and
test
in
cmpsl
dec
cmp
fisttpl
test
lahf
imul
or
sub
rolb
mov
in
int3
or
cmpsb
das
add
pop
repz
xchg
push
fs
push
arpl
repz
sbb
aaa
push
and
or
inc
inc
imull
pop
test
lods
cmp
int
iret
jmp
mov
shll
adc
roll
xchg
dec
mov
loope
out
sub
loop
loope
pop
out
adc
dec
subb
aas
jg
mov
lock
das
add
jno
inc
stos
outsb
lods
pop
popa
es
add
stos
or
mov
mov
jmp
cmc
pop
mov
int
xor
dec
inc
mov
add
jmp
cmp
aad
scas
xchg
scas
lret
cmpsb
mov
mov
mov
add
mov
add
es
jbe
xchg
push
fisttps
iret
cld
sarl
mov
sti
in
stos
loopne
adc
sti
jae
push
sub
fmull
or
or
rcrl
les
in
pop
enter
xor
std
cmp
add
push
xor
pop
imul
fiadds
jg
lods
inc
cmp
shll
inc
fistpl
lds
daa
or
jmp
xchg
and
dec
push
in
sbb
fimull
cwtl
and
pop
test
add
jg
cs
les
cwtl
sbb
push
sub
scas
jo
sarl
mov
add
push
pop
fstpt
imul
jnp
mov
sti
dec
adc
or
pusha
push
xchg
push
dec
cmp
stos
lock
push
sub
lock
add
fwait
sbb
mov
frstor
into
data16
hlt
cmp
mov
sti
fnstenv
sbb
fbstp
sub
lcall
stos
xchg
lcall
push
sbb
popa
outsb
in
inc
or
adc
mov
pop
iret
inc
mov
and
xchg
aaa
cltd
pop
xorl
fwait
mov
nop
xor
lret
push
pop
jno
dec
addb
mov
fstpt
adc
mov
or
insb
adc
stos
ret
jg
movsl
pop
sbb
leave
push
popf
divb
add
jl
inc
fsubrs
je
add
sub
pop
inc
mov
popa
xchg
push
in
adc
push
mov
push
cwtl
leave
xor
push
int3
lcall
into
sbb
rcll
sahf
mov
sbb
jbe
fstpl
sbb
popf
jns
dec
mov
mov
dec
cli
sub
push
inc
jb
pop
mov
add
data16
push
mov
lds
stos
in
sbb
shll
push
sbb
jno
clc
pop
or
roll
or
mov
adc
lods
add
xlat
lret
sub
push
jecxz
mov
push
addr16
mov
subb
or
cli
divb
sbb
call
loopne
sub
or
jp
adc
test
dec
jmp
lcall
stos
testb
jbe
dec
cmp
pop
mov
dec
inc
aas
sbb
jmp
pop
ljmp
sbb
les
movsl
pop
dec
sahf
mov
jge
subl
xlat
loop
loopne,pt
push
fistl
in
sub
xor
fisttpl
add
mov
jp
gs
mov
xchg
mov
adc
add
sahf
push
roll
mov
or
jmp
sbb
imul
sub
pop
fs
adc
aaa
movsb
push
mov
insb
outsl
clc
leave
js
daa
lcall
mov
repnz
adcb
lret
pop
mov
pop
pop
mov
mov
sub
mov
jo
push
inc
jl
sub
outsl
xchg
inc
sub
and
jle
adcl
xor
or
sbb
push
movsl
das
repnz
sub
dec
insb
cmpsl
fmul
mov
and
xchg
into
cs
aaa
in
mov
jle
jecxz
mov
xchg
mov
frstor
stc
je
in
inc
push
mov
sub
lahf
xorb
jae
clc
inc
mov
and
cmp
pushf
cmc
aas
test
xor
ja
mov
aad
imul
xor
xchg
inc
loope
add
icebp
into
ljmp
and
dec
push
enter
and
ja
test
cwtl
and
test
push
push
mov
fldcw
and
enter
dec
sarb
inc
imul
push
jae
mov
jb
xor
rorb
and
shrl
xor
push
addr16
cmp
sbb
popa
push
or
movsl
add
nop
out
jg
sbb
mov
mov
jnp
lea
cwtl
das
jno
push
mov
cltd
sub
fld1
aas
enter
sub
rclb
sub
inc
xchg
pop
xor
xchg
lods
or
shlb
popa
cmpsb
jp
cmpsb
adc
jge
cltd
in
cmp
leave
jo
jecxz
push
popf
dec
pusha
pop
je
push
adc
icebp
xor
test
or
jno
gs
popf
insl
cmp
xchg
subl
xlat
pop
testb
std
mov
notl
pop
and
out
cmp
lret
fidivs
jno
sahf
sbb
or
pop
lock
aaa
in
jb
test
std
jbe
dec
pop
push
jne
sbb
or
imul
stos
inc
shlb
and
push
mov
or
movsb
mov
sbb
movsl
movl
ret
or
dec
pop
inc
mov
shr
mov
scas
adc
leave
and
pop
out
pop
inc
ljmp
je
mov
add
daa
mov
lock
shlb
push
test
jmp
sub
dec
jnp
jle
xchg
lods
add
inc
arpl
lods
mov
pop
cmp
ja
stos
mov
xchg
cmp
xchg
test
push
in
or
inc
ljmp
xor
pop
jns
jnp
frstor
and
inc
cmp
arpl
cmp
xor
fs
sbb
int
xchg
lcall
pop
pop
sbb
icebp
inc
push
mov
out
mov
fnsave
dec
das
scas
pop
lret
cmpsb
rorb
cmp
pop
ret
mov
jecxz
adc
xor
shll
in
pop
pop
jmp
mov
sub
jl
dec
and
insb
leave
jl
sbb
push
je
dec
add
mov
lcall
push
and
daa
and
cmpb
int3
inc
and
and
ret
mov
ss
push
shr
mov
inc
fistpll
je
lods
or
mov
mov
sbbl
mov
dec
roll
jbe
xchg
nop
fstl
loop
mov
dec
orl
pusha
ret
push
or
fcmovnbe
fadd
adc
and
sbb
xlat
sahf
loop
push
insl
je
repz
push
out
jmp
or
loope
in
imul
cmp
sub
fidivl
pusha
push
arpl
or
rorl
fbld
sub
lcall
jp
mov
xchg
jnp
xchg
sbb
jns
aad
and
rolb
pop
xor
mov
inc
mov
or
cmc
popf
in
adc
imul
jl
push
cmp
into
mov
mov
nop
or
cmc
push
loop
mov
push
cli
aam
int
aad
push
mov
out
cld
imul
loope
sahf
mov
jno
lods
xlat
fdivs
call
nop
fdivp
xor
xchg
xchg
mov
aad
pop
rcr
dec
loopne
jb
aaa
leave
add
iret
mov
pop
add
cmp
sbb
lcall
addb
mov
sub
add
push
jbe
adc
repnz
push
mov
aas
jbe
mov
aas
sub
push
jmp
cwtl
nop
pop
orb
lds
in
mov
hlt
subb
mov
and
mov
jle
jo
or
arpl
adc
xor
jae
push
enter
std
mov
movsl
sbb
sub
mov
mov
ljmp
movsb
push
xchg
xor
fsubrl
mov
mov
inc
xlat
inc
dec
pop
push
ret
movsl
data16
mov
xchg
and
imul
mov
xor
clc
inc
jle
pop
in
pushf
aas
xor
jp
aad
imul
pop
in
je
cmp
adc
adc
and
mov
fs
sbb
push
mov
pop
push
jge
ja
mov
rclb
jae
pusha
xchg
sbb
or
ret
inc
lea
stc
xor
enter
ror
and
out
pop
push
push
dec
ror
dec
jne
dec
jg
mov
data16
mov
sub
addr16
xchg
jmp
stc
out
cmp
mov
test
mov
and
int
loope
testb
inc
aas
inc
cmp
add
sub
and
push
leave
divb
arpl
and
push
fsubs
orl
adc
std
add
dec
dec
fildll
jp
in
enter
mov
int
mov
fsubrl
iret
inc
pop
or
insl
cmc
addr16
packuswb
repz
repz
mov
cmc
mov
jl
movsb
pop
aam
add
add
shlb
out
adc
and
mov
hlt
ss
test
iret
inc
mov
lods
loop
adc
cmpsl
repnz
adc
test
jp
sub
mov
sub
fisubs
arpl
xlat
into
out
int3
cli
sbb
arpl
jno
cmp
adc
xorb
lret
mov
add
mov
insl
dec
push
mull
cs
aad
repnz
pop
in
in
adc
aad
into
out
cwtl
js
fiadds
mov
jp
xlat
aam
sub
div
inc
les
dec
stc
icebp
xchg
pop
cmpsl
imul
clc
mov
jmp
adcb
pop
mov
push
mov
rcll
dec
jbe
cmp
adcl
and
cwtl
in
mov
jecxz
jns
pushf
repz
dec
repnz
insl
mov
inc
sti
pop
sub
xchg
dec
mov
and
mov
fsubrl
es
dec
cmp
dec
inc
lods
jne
mov
adc
cs
pop
inc
stc
lods
push
pop
and
cmp
inc
scas
out
push
or
mov
test
mov
jl
xchg
xor
imul
imul
sbb
test
cmpl
lds
pop
data16
xchg
or
xchg
rcrl
movsb
leave
pop
mov
fildll
and
iret
jg
fldl
mov
lea
pop
out
and
fisttpl
fistl
popf
sub
shll
dec
sub
cmp
cmp
mov
mov
cmp
xchg
pop
mov
out
inc
repnz
push
in
lods
jne
outsl
jg
ret
stc
lahf
pop
popa
add
mov
dec
imul
nop
or
hlt
xor
mov
pop
std
xchg
cld
jmp
jl
mov
inc
xchg
in
mov
pop
nop
int3
or
loopne
imul
mov
add
data16
pop
pushf
movsb
mul
icebp
adcb
loope
mov
mov
addr16
adcb
inc
pop
mov
int
dec
sub
ficoml
repz
mov
rcll
xchg
test
test
push
sbb
pop
xchg
shl
mov
add
lret
xchg
lahf
nop
mov
dec
jp
sbb
xchg
clc
movsl
jl
or
jg
push
sub
and
ljmp
dec
and
not
sahf
les
filds
xor
test
mov
mov
inc
int
jle
push
cmpsl
fisubrs
xor
pop
and
xchg
sarb
and
mov
int3
xchg
sbb
sub
mov
pop
inc
aaa
xor
mov
jmp
loope
sbb
push
or
pop
bound
and
pop
inc
into
insb
in
dec
cmc
or
push
leave
or
gs
fadds
mov
xchg
dec
in
cmp
jl
xchg
negb
iret
mov
mov
jge
cmpsl
fs
scas
outsl
adc
lret
fiaddl
push
loope
push
insb
add
jnp
enter
or
aam
jo
das
out
imul
xchg
dec
or
dec
push
shl
out
enter
or
sbb
mov
scas
test
mov
jae
cmc
mov
outsb
dec
cmpl
and
pop
mov
fdivrs
inc
fdivrp
lret
and
ss
adc
jp
dec
cmpsb
out
sbb
loopne
ret
pop
pop
aad
ret
in
mov
pusha
push
fildl
aad
popf
pop
pop
dec
lret
stc
and
sub
push
iret
loopne
pop
daa
push
push
and
std
jecxz
cs
icebp
in
push
xchg
in
ds
cli
mov
insl
sbb
mov
rcl
les
testb
jg
mov
outsl
arpl
sub
ss
pusha
mov
or
xor
dec
xor
adc
rcrb
outsl
ja
movsb
cmp
shll
ljmp
sahf
or
gs
jl
test
mov
lods
into
pop
push
imul
cmp
jg
fucom
mov
popa
inc
int
leave
cmp
inc
inc
add
jae
arpl
or
xor
cwtl
jno
icebp
mov
testb
stos
pop
test
js
or
or
xor
insb
hlt
es
and
pop
xor
ret
std
jo
cmp
call
xchg
fbstp
sbb
push
loopne
lds
outsb
loop,pn
xchg
or
rorl
fistl
or
mov
mov
mov
mov
jno
jo
dec
adc
cs
out
stos
ds
fwait
hlt
leave
jne
fwait
das
mov
jb
jecxz
sub
jg
pop
jo
add
je
lcall
xor
mov
jae
stos
sub
mov
or
push
or
jne
fcomps
loope
enter
iret
subb
jno
loope
dec
mov
test
xchg
je
mov
pop
je
fsubl
pop
mov
xchg
mov
inc
mov
fdivrp
outsl
inc
dec
mov
fsub
or
push
or
mov
out
and
xchg
repnz
and
in
mov
mov
pop
andl
in
mov
ja
ret
das
call
aam
adc
sub
ja
sbb
mov
mov
cwtl
jbe
fsubp
mov
inc
andl
xor
ljmp
sbb
rcr
inc
cli
stc
pop
in
mov
outsb
stos
je
jecxz
pusha
fwait
sub
xchg
lds
mov
xor
or
adc
sbb
sub
pop
xchg
setno
ss
push
test
rcll
out
sahf
jns
inc
or
divb
inc
mov
shlb
xrelease
add
cmp
repnz
xor
mov
and
int3
jmp
stos
add
xor
dec
sahf
push
pop
lcall
fs
mov
dec
mov
jge
and
lret
adc
mov
inc
fadd
fisttpl
adc
adc
push
ljmp
stos
fstpl
jns
sbb
shll
sub
xlat
loopne
mov
inc
stos
jp
enter
or
mov
pop
pushl
push
movsb
and
shll
shrb
mov
adc
and
es
push
js
cmpsl
fimuls
dec
cmp
stos
dec
das
mov
push
cltd
enter
pop
jb
pop
cmp
mov
js
rcll
cmp
lock
pop
daa
push
pop
jnp
test
push
mov
jns
push
cltd
stos
movsb
add
jecxz
jecxz
insb
test
fimull
jp
fyl2xp1
cli
sbb
push
jno
leave
push
and
seta
cmp
cwtl
sbb
stos
xchg
push
ret
les
mov
cmp
fdivp
jo
ret
inc
sbb
in
pop
data16
cmp
adc
jmp
and
loop
xchg
hlt
inc
xor
mov
aad
jno
sub
mov
mov
push
stos
rorb
xor
add
les
dec
jl
cmp
mov
mov
sbb
daa
pusha
inc
xorl
cs
inc
sbb
aam
out
lahf
fisttps
sub
aas
xchg
xlat
int
mov
push
repnz
xchg
jmp
sbb
hlt
sbb
sarl
or
aas
les
cwtl
repnz
stos
scas
push
pop
movd
scas
jmp
cltd
imul
clc
fs
xor
lcall
sub
sub
mov
inc
repz
push
push
add
xor
sbbl
sarl
sar
loope
call
insb
cmp
lret
xchg
out
movsl
mov
adc
cmc
xchg
popa
push
lret
lret
iret
jnp
sti
mov
rcrb
cmp
loop
ret
adc
les
push
cmp
mov
pop
ret
cmp
inc
mov
cld
out
jl
sub
sub
repz
in
rcl
int3
lea
mov
loop
cmc
adc
add
shrb
adc
fdivl
stc
mov
jle
popf
add
cltd
mov
or
and
sarl
subl
sub
fildl
ljmp
lock
out
jp
mov
sbb
aaa
inc
cli
jg
fcomi
push
insb
je
lock
xchg
cmp
add
or
jge
and
fiaddl
pslld
cmp
xor
jns
shrl
and
or
mov
pushf
mov
nop
cmp
dec
addr16
jae
adc
ror
out
sahf
xor
imul
pusha
jno
pop
mov
pcmpgtd
sbb
movb
mov
or
sbbl
lock
push
pop
push
sbb
popf
add
sbb
jmp
fidivs
and
scas
pop
mov
and
adc
dec
dec
cmpsb
sub
cmp
testb
xor
xor
cmp
adc
shll
and
scas
fucomp
push
mulb
pushf
cmp
push
or
iret
sub
cltd
sub
dec
loope
mov
inc
loop
inc
addb
jge
fwait
or
push
jno
hlt
mov
mov
loope
mov
jp
pop
and
dec
cmp
cmpsl
push
sub
jmp
imul
lcall
insb
aad
cmp
popf
gs
daa
jle
mov
push
shrl
dec
jmp
jg
out
or
mov
jae
cmpsb
pop
pop
add
cmp
test
pop
xor
iret
cld
sbb
add
mov
ds
sub
sbb
test
stc
pop
ret
repz
jp
jmp
les
push
mulb
scas
test
inc
jg
or
push
cltd
or
jmp
mov
ss
sub
push
and
jae
xchg
adc
popa
dec
movsb
lds
add
inc
inc
lock
stos
rcrb
scas
outsl
pushf
add
mov
out
sbb
ret
aam
in
mov
push
pop
sbb
adc
aas
or
dec
cmp
and
cld
repnz
add
lcall
stos
in
inc
pop
jl
xor
add
out
aaa
adc
jg
sbb
fsubl
mov
mov
outsb
jns
adc
dec
or
ficoms
fstl
arpl
mov
jo
aam
pop
adc
fstps
inc
insl
push
repz
out
or
mov
aaa
jo
mov
lock
sub
jo
rcrb
mov
aas
pop
in
adc
pop
mov
sti
movsl
and
inc
mov
xchg
jle
push
push
inc
push
inc
lods
loope
jae
lret
add
es
jo
shr
jno
jo
add
dec
cmpsl
pop
ja
inc
outsl
add
push
addr16
roll
in
rcrb
mov
push
subb
int
scas
aas
mov
ficompl
iret
mov
inc
dec
pusha
popf
inc
rolb
daa
js
xchg
mov
cmp
sub
nop
jae
push
arpl
mov
push
pop
sbb
push
sti
jne
mov
pusha
and
mov
mov
sbbb
pop
inc
and
xorb
jg
add
inc
das
fmull
jne
sbb
sub
sar
outsl
das
jne
or
fsubr
ficoms
into
jge
add
dec
mov
mov
dec
mov
cmp
inc
ljmp
push
je
insb
mov
cli
mov
or
test
mov
lret
arpl
mov
xchg
xlat
inc
rcll
dec
rcrl
mov
aaa
adc
mov
cwtl
sub
fs
into
inc
or
and
xor
push
mov
or
pop
ja
inc
sub
fldenv
mov
xlat
mov
pop
push
inc
adc
sbb
inc
mov
js
lret
xchg
lret
inc
cmp
lds
mov
lods
mov
mov
popa
mov
imul
xchg
dec
jae
add
je
or
shll
stos
sbb
dec
xor
inc
push
push
mov
loopne
add
and
lods
add
testl
repnz
cwtl
lret
add
ret
bnd
test
mov
xchg
xchg
enter
mov
fimull
dec
pushf
mov
sbb
add
jno
lock
pop
inc
jnp
xchg
mov
push
sbbl
popf
lods
xchg
aas
sbb
mov
or
sbb
adc
mov
in
in
stos
iret
lock
add
sbb
mov
or
xchg
aad
jns
mov
scas
adcl
outsl
shlb
mov
mov
loop
or
pop
loopne
repnz
popf
addr16
mov
stos
cli
cmpb
lods
mov
or
aam
insb
mov
cli
test
sbb
aaa
sub
pop
outsl
popf
popa
dec
adcl
gs
scas
in
loopne
push
push
out
ret
dec
rcll
inc
pop
adc
and
xor
leave
lock
aam
or
add
jg
fcomps
divb
inc
and
jle
cmpsl
sahf
inc
mov
jae
cmp
ficomps
test
mov
rcr
pop
arpl
jmp
sbb
cs
in
xchg
and
cmpsl
mov
js
mov
adc
aas
mov
addb
fwait
or
mov
data16
or
sbb
push
vmread
fnstenv
leave
bound
imul
lcall
arpl
leave
std
adc
mov
push
xchg
mov
xchg
pop
out
jno
into
cmpsl
adc
movsl
cmp
mov
sub
mov
pop
sub
mov
test
push
pop
push
rcll
add
pop
and
outsb
pushf
fisttps
dec
or
pusha
cmp
or
std
daa
aam
outsb
pop
imulb
les
stos
fwait
leave
pop
outsl
jp
fdivr
add
fldenv
repz
loopne
int
dec
mov
es
repz
adc
int
cmpsb
scas
mov
inc
push
jbe
gs
xchg
orb
mov
stc
test
ficoml
pop
dec
ja
scas
jns
gs
dec
cmpsb
inc
sub
scas
loope
push
sbb
stos
repnz
outsb
xchg
enter
sahf
test
jg,pn
bound
mov
mov
sub
xor
mov
sbb
sub
ret
push
jecxz
sub
leave
scas
xlat
mov
xchg
xchg
push
mov
add
std
divb
outsb
mov
push
adc
xor
incl
nop
push
cmc
adc
pop
inc
and
std
imul
or
mov
out
jb
test
push
sub
sbb
sbb
adc
data16
or
lds
icebp
std
mov
cmp
aad
jns
sarb
push
test
sub
mov
lahf
and
loope
mov
xchg
push
aam
leave
xor
out
mov
mov
cli
push
jno
pop
sarl
xor
popf
jecxz
cmpsb
mov
and
loop
sub
fmul
add
mov
xchg
dec
shl
imul
cmpsl
popf
nop
popf
push
scas
rcrb
scas
push
fnsave
fnstenv
xor
mov
nop
sbb
or
fcompl
jp
pop
or
shrl
loop
decl
mov
xor
push
rolb
cli
xor
pop
lret
je
clc
fsts
cmp
fidivl
test
jle
insb
xor
movsl
push
jecxz
xchg
push
push
repnz
jge
push
daa
or
mov
adc
fisubrs
lahf
push
pop
shr
push
inc
pop
adc
adc
out
mov
test
in
addr16
mov
sbb
pop
scas
xlat
add
jo
in
and
lds
and
in
outsl
add
dec
add
int3
fisttpll
int3
mov
lret
push
lret
sub
adc
adc
push
push
pop
lea
mov
lcall
inc
dec
inc
scas
xor
imul
jge
mov
imul
mov
loope
rorl
mov
stos
xchg
mov
jmp
adc
push
cmp
fcomp
adc
xchg
pop
mov
and
jno
mov
sub
and
mov
mov
cwtl
in
sub
jns
jl
pop
jne
and
clc
out
pop
mov
mov
fisubs
in
ficompl
and
addr16
lea
iret
popf
xchg
adc
and
es
sti
jnp
imul
cwtl
cmpsl
cmp
xchg
mov
loope
adc
mov
jge
cmp
mov
popa
mov
lahf
jnp
push
imul
js
sub
xchg
mov
adc
push
sub
jno
add
outsb
pop
sub
xor
cwtl
or
push
sti
fildll
test
and
jecxz
and
imul
inc
sarl
and
adc
xchg
cmpps
iret
cmp
aam
fs
cmpsb
xchg
pop
ja
clc
mov
xlat
push
push
push
arpl
sbb
jno
mov
pop
mov
test
aad
xchg
das
and
add
jmp
push
stos
imul
dec
xor
push
add
je
iret
clc
sub
in
jp
fwait
mov
sub
imul
jle
es
xor
push
add
adc
jne
adc
inc
xor
sub
mov
push
inc
dec
and
test
mov
cwtl
xchg
jne
nop
mov
jp
sub
and
push
jns
fsubl
das
jg
dec
mov
adc
nop
cmp
xabort
adc
dec
das
mov
jne
xlat
or
daa
iret
pop
pop
fs
test
mov
sbb
sbbl
sti
mov
outsb
or
adc
js
es
or
sti
xchg
bound
movsb
in
xchg
adc
xchg
jae
pop
lahf
test
testl
lods
repz
dec
inc
mov
dec
enter
cmp
inc
leave
repz
mov
cmpsl
std
pop
clc
dec
pop
xchg
xor
sbb
jmp
xor
hlt
push
mov
sbb
fisttpl
pop
xorb
jnp
sbb
nop
mov
mov
add
adcb
rcll
xchg
mov
cmpsb
sbb
jne
mov
jge
je
dec
jp
es
addr16
push
push
mov
pop
stc
mov
xor
sahf
dec
in
jmp
fld
testl
mov
xor
pop
mov
add
xchg
test
mov
mov
fnsave
dec
stc
mov
or
xor
and
iret
cmc
and
call
dec
push
push
movsb
push
lret
enter
in
adc
xlat
mov
dec
mov
movsl
movsb
rorb
and
dec
inc
push
sub
fcmovnb
add
out
push
stc
sub
scas
xchg
shlb
xor
inc
repz
or
pop
aad
mov
int3
imulb
cmp
and
shlb
or
cld
hlt
imul
mov
jp
mov
jae
clc
jmp
sbb
push
dec
add
imull
insl
clc
or
iret
subl
cli
pop
in
cmpsb
xor
jle
notb
mov
movsb
into
inc
pop
push
xchg
cmc
hlt
mov
dec
cmp
nop
ja
inc
mov
and
mov
cmpsl
xchg
outsl
push
mov
testl
adc
mov
popf
pop
add
pop
call
je
jno
lahf
fisttpll
sbb
fisubl
clc
cmp
and
mov
std
add
sbb
sub
jle
push
lret
push
repz
push
nop
cltd
clc
lods
repnz
sbb
iret
mov
push
cmp
sbbb
cmc
push
cmp
stos
stos
nop
fs
lock
push
jbe
stos
in
in
pop
out
add
shr
xor
arpl
mov
dec
pop
andl
adc
ret
ljmp
jge
mov
or
xchg
pop
cmp
pop
or
mov
imul
fs
jge
sbb
cwtl
pop
or
sbb
mov
rcll
inc
test
test
flds
sub
aad
cmpsl
aaa
xchg
rcrb
mov
idivl
sbb
bound
xchg
nop
clc
jecxz
iret
sarl
sbb
mov
jmp
sbb
cmp
add
xchg
out
cmpsb
sarb
imul
dec
fidivrl
sti
push
mov
mov
int
xor
cmpsl
leave
mov
jmp
enter
repz
stos
outsb
bndldx
cmpsl
test
les
popf
mov
in
pop
sub
insl
cld
cltd
push
mov
mov
loop
jge
pushf
imul
and
jbe
lea
mov
rcr
fisubrs
scas
jae
nop
or
mov
dec
mov
js
lret
in
aad
fnstsw
mov
mov
std
in
fcmovu
popf
cwtl
sbb
outsb
cltd
fldt
dec
test
xchg
test
aas
pop
out
loop
sarl
ja
xchg
in
imul
cmc
adc
xchg
rcr
or
dec
inc
out
inc
mov
inc
rorb
aas
jbe
insb
pop
loop
dec
xchg
in
psrld
dec
mov
ret
insb
out
xchg
inc
pop
lea
xchg
jno
iret
lods
or
imul
sub
inc
cmp
dec
popa
aaa
sbb
lcall
mov
fdivl
cwtl
mov
mov
mov
ror
scas
mov
test
inc
pop
lods
and
lea
ljmp
orb
push
cmp
push
outsl
add
and
push
xchg
ja
inc
imul
inc
xor
and
pop
je
mov
fldcw
das
and
push
cmpsb
dec
dec
xchg
xor
lcall
jg
mov
sub
mov
popa
dec
add
aad
lahf
add
sbb
pop
inc
mov
lods
int
mov
lods
loopne
out
dec
cmp
add
sub
mov
push
cmp
into
mov
andl
cltd
jo
mov
push
shlb
in
ret
test
loopne
push
int3
les
mov
mov
mov
pop
jnp
cmp
daa
nop
pop
mov
sbb
lahf
popa
sbbb
push
int3
sbb
or
jmp
je
cmp
movsl
adc
add
mov
inc
fcmovnb
jae
mov
jecxz
cltd
ja
dec
daa
cld
xlat
dec
mov
xorl
push
mov
add
mov
mov
push
add
clc
and
call
add
nop
inc
daa
mov
mov
jns
out
mov
or
xchg
test
mov
or
test
xor
xchg
shll
sbb
mov
scas
sbb
xor
fstpl
insl
mov
sub
and
sahf
adc
fwait
data16
pop
mov
jno
lcall
mov
mov
jge
lea
rcl
fwait
outsb
popl
and
dec
rcll
cli
sbb
add
or
mov
inc
inc
push
and
jnp
cmc
arpl
cmp
fwait
shrb
cmpl
mov
jmp
mov
sti
pop
xchg
repz
inc
in
pop
add
sbb
loope
add
push
pop
and
add
pop
fisubrs
jo
sbb
mov
xchg
cld
mov
mov
pop
push
xchg
xchg
nop
aas
aaa
in
fldln2
hlt
sub
mov
xchg
test
iret
mov
mov
ret
sti
or
sub
cs
and
daa
jge
scas
lret
call
ja
jns
sbb
sbb
xchg
das
cmpsl
add
jle
or
das
push
es
pop
fcmovnb
out
mov
int
pop
inc
loopne
add
mov
mov
test
std
mov
xchg
push
dec
ret
lea
add
pushf
flds
and
pop
sbb
xor
enter
cmp
dec
aam
sbb
mov
adc
lret
cmp
sub
loope
jmp
lods
pop
in
clc
adcl
lahf
or
jmp
fs
push
jg
aad
adc
andl
pushf
mov
xor
mov
pusha
mov
add
inc
addr16
adc
push
push
push
mov
cwtl
xor
xchg
push
push
jge
jecxz
insl
pop
mov
or
fcomi
xchg
dec
daa
stos
push
pushf
loopne
dec
adc
bound
rcl
repz
mov
int
js
stc
or
gs
mov
mov
sub
orl
push
lods
cld
push
sbb
inc
sbb
ss
xchg
leave
stos
cmp
jmp
inc
cs
sti
imul
sbb
lock
lret
jbe
xchg
adc
push
cmp
ret
pop
add
push
pop
jl
jnp
div
lahf
aad
and
cmp
sbb
repnz
les
ret
pop
insl
xor
pop
les
das
push
sub
jg
jp
jle
je
fists
sahf
jp
shlb
cwtl
adc
cmp
rol
outsb
fiadds
inc
add
imul
fsubr
pop
jg
adc
sub
xchg
dec
xor
nop
roll
fistpl
add
out
cli
or
leave
out
dec
fldz
cmp
jle
jo
cmp
or
cwtl
in
jne
out
mov
jb
test
adc
outsl
xchg
pop
sti
sbb
jo
iret
sub
jb
jbe
pop
mov
aas
dec
mov
or
mov
test
lds
sahf
fadds
pop
xchg
inc
add
xchg
push
mov
fistpl
mov
adc
mov
cmp
cmp
psraw
mov
jb
push
bound
push
repz
dec
fdivrl
notb
mov
mov
test
out
sbb
popa
push
loop
dec
cmp
and
adc
jno
xchg
inc
lods
and
stos
xchg
imul
int3
nop
jno
scas
nop
imul
dec
xchg
pushf
mov
xchg
push
mov
popa
jb
pushf
in
inc
xchg
lds
cwtl
call
cmp
sub
cmp
rorb
int3
fldl
inc
add
pop
cmp
jle
repz
xor
test
inc
sbbl
shl
mov
adc
flds
xchg
and
ror
pushf
lret
mov
and
add
stos
stos
aad
xchg
jns
mov
mov
out
out
aas
xchg
dec
popa
push
mov
out
inc
mov
pop
and
jno
xchg
and
iret
dec
sub
popf
add
ja
aas
and
mov
cli
inc
push
pop
sbb
jle
mov
gs
imul
jl
ret
enter
clc
jno
imul
jae
loop
fidivl
inc
pop
and
add
filds
leave
mov
add
pop
push
or
pop
cmpsb
cmc
sbb
dec
in
pusha
pusha
lea
loopne
push
insb
jg
mov
popf
adc
out
ret
mov
jbe
pusha
in
cmc
mov
out
push
rcr
mov
add
sti
pop
pop
fisubrl
sbb
xchg
test
dec
push
inc
icebp
lahf
mov
push
push
xchg
ret
outsb
push
fcomps
push
mov
sub
cwtl
jle,pn
lock
inc
lret
lret
inc
pusha
cmpsb
xchg
jbe
mov
pop
inc
jle
fsubr
cmp
cmp
insb
scas
es
in
and
mov
push
add
out
js
repz
es
rclb
popf
xorb
fmul
xor
xchg
and
imulb
add
push
ljmp
pop
or
pop
je
sub
sbb
or
out
hlt
pop
adcl
out
rorl
jbe
push
sbb
jno
fnstcw
sbb
inc
icebp
xor
xchg
jno
ret
sbb
rolb
cmp
je
fidivs
std
ja
sub
fwait
lret
mov
and
mov
in
sbb
aas
pop
movb
xchg
pushf
sti
mov
jb
scas
mov
xchg
sbb
xor
out
push
lods
lods
daa
popf
and
mov
aas
push
xor
lods
xor
test
dec
into
jl
idivb
xor
fwait
arpl
pop
sub
ficomps
xchg
shr
pusha
les
scas
pop
imul
iret
scas
iret
nop
cmp
mov
out
cld
jnp
or
jl
mov
cmpsb
lahf
add
mov
cli
or
jnp
push
clc
sub
sbb
xchg
inc
xlat
movsl
sbb
xor
ret
mov
jge
jge
jl
aaa
loopne
outsl
jle
es
stos
bound
and
sbb
xlat
lds
sbb
bound
jp
dec
mov
sub
mov
aad
pop
call
sbb
jne
sahf
inc
insb
xor
fidivl
shll
orb
outsb
jmp
mov
data16
stc
dec
sbb
jg
bound
lret
xor
jp
ss
fisubl
mov
mov
or
cmp
add
jbe
fs
outsl
pop
scas
sahf
cmp
addl
lret
hlt
mov
xlat
add
dec
and
cmpl
dec
jo
jp
xchg
adc
aad
inc
cmp
pop
lret
sbb
adcb
mov
sub
sub
xchg
pop
or
sub
dec
loop
push
mov
out
aas
xchg
pusha
shrl
scas
cmp
insl
xchg
xor
in
adc
adc
mov
add
mov
pop
sub
sub
mov
dec
loop
lret
popf
push
or
bound
sub
jge
lds
aam
orb
sbb
mov
in
jb
sub
pop
push
fnclex
stos
adc
lret
pop
stos
push
fidivs
roll
sbb
subb
xchg
cs
lds
sub
push
lods
cld
fucomp
ds
movsl
sysenter
sub
iret
and
xlat
mov
mov
int3
movsl
loope
insl
movsl
xlat
push
hlt
insl
ljmp
lods
or
lods
cwtl
jo
push
cmpsl
andb
arpl
in
sub
aam
scas
sbb
fistpll
inc
sbb
fwait
xor
push
loopne
mov
mov
push
sahf
test
shrb
xlat
fadd
pop
int
mov
inc
test
loopne
pusha
add
sbb
sti
mov
ja
stos
mov
xor
push
pushf
dec
lahf
pop
cli
test
lahf
not
pop
jmp
sub
data16
test
pop
sahf
test
push
sub
xor
es
jle
push
ljmp
cmp
into
test
xchg
sbb
mov
cmc
mov
and
inc
fildl
out
aam
sub
cmp
je
add
call
call
xchg
dec
mov
pushf
mov
cmp
lret
pushf
pushf
cld
mov
out
cmp
ja
mov
cmp
scas
stc
push
push
sub
and
js
out
aaa
loope
jbe
ret
pushf
lds
mov
xchg
sbb
mov
mov
inc
mov
push
jbe
push
fiadds
popf
es
mov
or
out
xchg
in
mov
mov
inc
leave
ret
jecxz
push
mov
jg
out
dec
aas
sub
inc
lock
ret
pop
call
outsl
and
pop
sbb
add
iret
pushf
aam
dec
std
sbb
or
mov
xor
pop
add
jne
xor
mov
test
xlat
out
test
loope
repnz
cltd
jns
mov
xor
fldenv
add
adcb
enter
rcl
xchg
rclb
arpl
aas
add
cmp
mov
out
loope
pop
mov
lret
add
dec
mov
xor
imul
jle
xchg
jmp
push
sbb
nop
inc
pop
je
dec
icebp
mov
gs
lods
pusha
xchg
repnz
pop
repnz
divb
ljmp
or
mov
stos
in
pusha
or
mov
fnstcw
add
lods
inc
add
cmpsl
std
mov
or
xor
addr16
outsl
leave
sub
aas
dec
je
jns
xchg
jb
push
push
mov
inc
pop
inc
cmpsb
lret
ja
cmp
stos
sbb
add
aaa
xchg
jnp
scas
sub
push
insl
sbb
sub
cmc
fcoms
repnz
das
clc
xor
nop
cli
hlt
mov
mov
inc
repnz
jecxz
ljmp
lods
mov
mov
push
jno
sbb
push
fistl
sbb
sti
in
shll
mov
fists
clc
mov
into
mov
movsb
out
ja
sub
pop
dec
pushl
mov
or
push
xor
in
jnp
addl
sub
xchg
or
mov
dec
adc
cmpsl
lock
jns
test
inc
aas
lret
adc
add
xor
dec
jge
cvtps2pd
mull
leave
jmp
lea
cmp
dec
bound
dec
push
pop
jno
push
jb
xchg
add
jne
or
inc
jo
cltd
pop
and
aad
sti
and
popa
scas
iret
or
js
imul
and
test
mov
add
jbe
aas
mov
pop
imul
mov
fistpll
shr
adc
xchg
insb
jp
mov
sbb
jg
inc
popa
push
sti
jecxz
xor
sbb
pop
daa
mov
iret
sbb
popf
jo
xchg
inc
lods
scas
and
xor
cmp
push
or
lods
test
in
push
mov
cmp
mov
adcb
loopne
dec
push
cli
dec
scas
pop
or
cli
jp
mov
or
mov
pop
mov
cwtl
pop
arpl
scas
pop
fbstp
cld
push
stos
mov
adc
fistpll
sbb
cwtl
repz
icebp
in
loope
xor
idivb
aaa
mov
sub
in
rcrb
and
pop
call
xchg
scas
out
mov
and
loope
idivb
into
push
jo
xchg
dec
out
test
aad
das
sbb
or
push
and
sub
xchg
push
int
push
outsl
sahf
int3
movsl
sbb
xchg
cmp
pop
iret
and
or
ljmp
mov
sahf
mov
mov
dec
mov
bound
xchg
fwait
jne
test
jp
xor
lahf
out
ficoml
xchg
into
stos
sub
lods
incl
loope
inc
test
insb
jecxz
push
pop
call
xchg
push
inc
and
into
xchg
mov
sbb
dec
jo
inc
mov
xchg
inc
or
dec
aaa
cltd
push
out
jnp
pop
repnz
fdivp
rol
bound
and
hlt
sub
push
sub
xor
scas
sub
and
pop
pop
fstpt
imul
sbb
push
jb
add
sub
sub
mulb
outsb
cmp
adc
popf
cmpsl
shlb
add
mov
lds
hlt
stos
xchg
dec
cmpsl
lods
or
cmc
lods
pop
ret
sti
daa
insb
loope
int3
adc
movsb
push
cmp
ficompl
lods
inc
int
lock
xor
pop
mov
mov
movl
jecxz
cmpsb
fnstenv
inc
or
test
mov
xchg
int3
mov
in
pop
cmp
push
adc
or
xlat
aas
mov
dec
lods
lret
inc
data16
sbbb
sub
push
pop
mov
mov
jb
cld
out
or
xchg
pop
fisubrs
pushf
stos
clc
push
rorl
mov
imul
xchg
das
sub
mov
cmp
mov
push
mov
das
xor
stos
or
fs
push
mov
rolb
hlt
xlat
pop
sti
push
in
jbe
scas
lock
push
xchg
mov
dec
sub
int3
jecxz
addr16
addb
pop
jmp
sub
inc
dec
cs
dec
cmp
mov
aas
cltd
rorl
and
jae
movsl
xchg
idivl
dec
pop
mov
and
cmc
inc
jg
add
daa
rclb
cmpb
repz
test
jge
xor
sbb
mov
enter
xorb
iret
jb
fisttps
mov
imulb
adc
adc
fdivrs
add
push
les
pop
clc
xchg
shll
sbb
ds
cmpsb
add
lret
xlat
mov
cmp
clc
cmp
testl
fcomi
cmpsl
sahf
mov
jle
scas
shlb
mov
lds
dec
pop
cmc
fbstp
pusha
push
dec
ret
pusha
mov
push
xchg
test
scas
push
xchg
les
testl
int
out
adc
pop
adc
movsb
inc
mov
divb
xor
test
jp
mov
mov
inc
jmp
sub
fldl
inc
ret
cmpsb
xchg
pop
or
leave
popf
mov
add
adc
mov
movsl
ret
push
scas
cld
mov
shlb
ficompl
mov
and
in
sahf
and
outsb
adc
jbe
sahf
jns
xchg
adc
leave
push
aas
sbb
xchg
sub
sahf
mov
test
cld
stc
xor
xor
add
jecxz
es
punpckhdq
add
push
cltd
lods
or
fs
jge
adc
stos
or
sbbl
lcall
adc
dec
es
ret
test
sbb
add
int3
xor
loop
rcrb
pop
dec
jne
shlb
sub
dec
and
jb
xor
dec
mov
mov
xorl
cli
lds
ss
adc
mov
test
nopl
adc
adc
sbb
jb
sbb
cmp
pop
pushf
ret
rcrl
popf
lcall
jp
mulps
test
or
arpl
mov
stos
outsb
daa
lcall
inc
cmp
mov
xchg
in
or
loope
dec
fsubrl
setnp
movsl
inc
and
lods
cmp
push
pushf
or
mov
aam
leave
je
gs
or
cmpsl
scas
xor
mov
aad
stc
std
fists
add
rcrl
mov
aaa
pop
mov
stc
cmp
int3
frstor
mov
mov
sub
xor
ja
push
dec
testl
out
jo
jae
leave
pop
cmp
addb
das
div
pop
or
test
int3
int3
jno
push
jnp
mov
inc
insb
sub
test
ficoms
cmpsb
inc
outsl
fidivs
jbe
test
pop
adc
mov
mov
int3
jns
fnstsw
cmp
jecxz
and
sub
es
pushf
push
iret
pusha
jne
into
ret
mov
jmp
ret
leave
call
jmp
mov
pop
sarb
loopne
filds
movsl
mov
xchg
fmuls
sti
mov
loopne
sub
fmuls
push
sti
into
lahf
xor
mov
out
dec
mov
xchg
sub
sub
js
in
pusha
popf
dec
mov
mul
pop
mov
aaa
das
sub
dec
push
dec
mov
mov
dec
fldt
pop
push
in
cltd
orb
enter
pop
pop
inc
push
xchg
mov
xor
mov
std
cmp
xchg
cld
es
outsb
out
push
dec
out
push
adc
mov
data16
arpl
adc
clc
inc
test
jae
sub
rcrb
popa
pop
adc
mov
fcmovnbe
cld
pop
inc
push
sub
inc
sbb
les
mov
xor
lret
sub
inc
enter
push
repnz
xchg
push
sbb
pop
adc
jg
clc
or
cmp
push
rclb
mov
enter
xor
lods
inc
daa
lds
test
mov
xor
xor
ja
sub
faddp
mov
jl
popf
js
imull
add
addr16
mov
loopne
je
lret
scas
es
mov
lahf
jae
push
ja
bound
inc
es
pop
clc
iret
outsb
sbb
xor
aaa
aaa
mov
jl
into
mov
push
pop
mov
jae
or
push
test
mov
mov
int3
push
scas
push
push
fistpll
notb
xlat
mov
int
cli
push
lahf
in
dec
cld
xchg
pusha
ret
lahf
fwait
mov
or
mov
pop
in
insb
insb
insl
mov
fdivrl
cmp
push
jge
jo
and
dec
scas
lds
cltd
xchg
push
or
sti
push
lcall
push
loope
je
daa
mov
das
jg
movsb
xchg
test
cs
push
inc
pop
imul
mov
mov
xchg
dec
leave
imul
test
scas
jb
sbb
fldl
mov
or
cmp
and
std
stc
daa
pop
fwait
push
mov
imul
or
sahf
out
or
movsl
push
mov
push
add
add
clc
test
insl
decl
mov
mov
nop
test
sbb
test
shll
sahf
mull
sub
mov
addr16
inc
in
or
and
push
mov
sub
pop
xchg
hlt
jmp
mov
inc
cli
sub
nop
clc
jbe
fbld
jge
push
nop
ds
out
and
and
outsb
insb
adc
aad
in
and
ds
mov
sti
sbb
dec
cmpsl
add
stc
mov
cmc
push
mov
fwait
test
cmp
jne
cli
mov
xchg
or
out
sbb
pop
mov
dec
xchg
inc
inc
aas
imul
cmp
lcall
push
sbb
lods
mov
sub
adc
and
jnp
xchg
xor
cmp
fnstsw
mov
int
aam
out
shlb
pusha
mov
push
jnp
ds
jg
jecxz
popa
adc
xchg
cltd
insb
jmp
inc
lahf
inc
adc
cs
stos
jns
lods
fmuls
lds
mov
jmp
in
inc
push
sbb
xchg
pushf
push
pop
ret
pop
mov
or
pusha
lcall
and
stos
nop
push
mov
stos
push
and
ds
mov
arpl
mov
and
aam
adc
pop
adcb
subl
iret
cmc
push
lahf
dec
insl
repnz
fucomip
add
andb
cltd
mov
mov
adcb
xchg
or
push
xor
pop
pop
mov
xor
stc
push
mov
add
fldcw
hlt
sub
and
sub
es
outsb
pop
loopne
out
sub
xlat
out
adc
add
xor
mov
scas
movsb
mov
and
mov
movsb
adc
shll
mov
jp
aad
xor
mov
lret
adc
das
lods
lods
xchg
test
loopne
leave
js
pop
sub
rclb
loopne
pop
mov
sub
movsb
mov
lds
notb
sub
fstpt
mov
mov
sub
inc
jae
jl
inc
loop
icebp
adc
jmp
dec
out
sbb
inc
and
inc
xor
loopne
jge
xchg
and
dec
aaa
mov
divl
inc
push
repz
push
cs
push
xchg
xor
mov
aad
adc
mov
push
mov
cld
lret
ljmp
imul
ja
mov
xor
jb
sbb
pop
loope
mov
add
jp
cmc
cmc
cmp
scas
out
mov
add
fisubrs
popf
mov
je
cmc
lock
data16
lahf
orb
mov
ss
enter
jg
mov
pop
arpl
pop
jo
xchg
and
jnp
pop
lcall
xchg
cwtl
fistl
jnp
cltd
pop
mov
cmpsb
scas
in
mov
lock
repnz
adc
mov
lahf
and
fwait
inc
push
mov
imul
sbb
in
push
add
lea
icebp
lds
xor
lds
orl
cli
arpl
lea
dec
fdivs
cltd
xor
cltd
fsubrs
jp
adc
fucomi
xchg
xor
adc
test
andl
mov
xchg
pop
or
pop
test
dec
jl
mov
pop
loope
icebp
rclb
fistpl
cmp
push
inc
cmp
pop
and
loopne
jno
dec
shll
shl
and
aaa
insb
dec
ret
jne
and
fwait
ret
dec
cwtl
mov
lahf
pop
dec
dec
scas
aaa
sub
sub
and
lcall
add
dec
xchg
jmp
and
sbb
or
sbb
stos
ret
int
mov
sbb
xchg
adc
add
sbb
sbb
shrb
movsb
rcr
mov
dec
and
loopne
push
es
lret
jnp
push
in
mov
lcall
jo
cmp
push
sti
fbstp
cmp
or
xchg
inc
dec
adc
sub
lds
xor
pop
popf
test
je
sub
ror
mov
lea
jg
lcall
add
mov
push
lods
cli
adc
test
push
aaa
mov
cmp
adc
insl
repnz
cld
sbb
sub
mov
cld
aaa
push
sbb
out
mov
xor
cmp
mov
das
add
mov
or
mov
fs
mov
punpcklwd
or
sub
jb
xlat
outsb
ror
call
mov
rolb
jl
xchg
dec
shll
lock
sar
jne
push
aad
xchg
lods
lods
test
pop
divw
sbb
repnz
dec
add
cli
sub
dec
ja
sbb
int
mov
test
or
outsl
push
lea
pop
pop
mov
fdivs
jle
stos
mov
push
jns
out
xchg
daa
dec
sbb
mov
sbb
sbb
test
adc
mov
pop
fdiv
adc
xor
subl
ds
jae
dec
std
in
jno
pop
cmpsb
das
ljmp
push
jmp
pop
out
xor
sub
cwtl
or
sbb
loop
mov
cli
mov
cwtl
outsl
dec
notb
ret
and
inc
incl
jge
aam
jecxz
lock
cld
into
out
int
rclb
jne
insb
push
sub
and
pop
fisubs
sbb
aaa
sub
xor
in
xchg
test
roll
xchg
sub
out
adc
jge
shlb
inc
scas
hlt
sbb
mov
mov
sub
cmp
jo
mov
mov
enter
add
fdivs
dec
cli
pop
insl
push
pop
jg
icebp
mov
cmc
movsb
pop
mov
lea
jnp
imul
mov
int
jl
cld
popf
lods
push
adc
cmp
pop
cmpb
jle
xchg
fistpll
mov
add
scas
dec
popf
dec
in
fisubrl
jae
pop
jo
shlb
and
dec
jle
mov
dec
push
and
push
mov
or
in
ror
jb
cmc
jl
fwait
and
and
loop
jnp
decl
sbb
jne
cmpsb
icebp
add
ja
leave
add
dec
into
jle
cltd
repnz
xor
mov
mov
sub
js
lods
outsb
add
call
mov
enter
loopne
inc
pop
test
inc
shlb
inc
mov
sbb
incl
repnz
sub
mov
mov
outsl
lods
rcrl
sub
push
shrb
jl
cmp
scas
sbb
or
imul
sbb
pop
mov
mov
add
arpl
pop
sbb
jo
roll
inc
mov
sub
xchg
js
add
leave
or
rcr
mov
pop
push
fdivl
sahf
rcrb
ljmp
dec
div
iret
mov
cmp
mov
nop
in
and
pushf
dec
rcrb
adc
add
movsb
test
cld
lds
aam
sub
push
or
sbbb
xlat
aad
xor
lret
xchg
xchg
das
mov
add
mov
xchg
and
push
add
pop
shll
inc
mov
cmp
test
shll
out
scas
push
sbb
movsl
loop
ret
push
mov
cwtl
and
push
int
lcall
je
add
mov
pop
or
mov
imul
jle
adc
mov
fcom
aam
negl
ret
xor
test
adc
les
add
aaa
or
lahf
daa
insb
std
sub
imul
jno
push
dec
add
sub
test
mov
dec
cs
pop
dec
imull
mov
fcoms
cmp
lds
sahf
mov
data16
out
sub
insl
test
dec
xchg
loopne
ljmp
inc
lock
xchg
test
loop
inc
into
pop
or
or
inc
faddp
lret
or
test
sbb
pop
aas
jns
mov
push
cltd
adc
fnstenv
inc
imul
lret
js
mov
or
xchg
lods
add
mov
out
inc
xor
fsts
jae
jb
mov
out
test
fldcw
dec
sarl
fbld
push
sbb
mov
add
lea
pop
inc
lods
test
sbb
cmp
imul
dec
mov
adc
dec
pop
mov
dec
push
cltd
adc
repz
pushw
xchg
scas
inc
push
xorb
mov
pop
lea
movsl
or
leave
sbbl
imul
cmpl
decl
cmp
mov
cmpsb
dec
filds
js
xchg
cmp
lock
or
inc
fiaddl
sti
movsb
mov
pushf
cwtl
sahf
jbe
inc
outsl
inc
cmc
sub
mov
sbb
ret
mov
pop
cmp
fucom
cmp
xchg
dec
pop
es
cmp
data16
sbb
repnz
xor
clc
outsl
packssdw
in
adcb
adc
mov
lds
data16
imul
icebp
outsb
shr
into
mov
pop
ret
mov
mov
push
push
fimull
movsb
mov
loop
cmpb
psubsb
sbb
pop
and
jnp
repz
hlt
add
push
jmp
pop
popf
push
push
mov
push
test
bound
push
xchg
lea
mov
les
cmp
xchg
imul
rolb
xchg
pop
xor
aas
push
xchg
movsl
push
pop
jae
sbb
or
lods
dec
cmp
xchg
jge
pop
in
subl
gs
std
sti
push
xor
or
pop
xchg
lret
mov
sub
fisttps
test
adc
cs
xchg
je
hlt
dec
incb
add
dec
mov
add
bound
xor
pop
cmc
roll
iret
mov
mov
pop
dec
mov
jo
sub
jne
sbbb
sub
daa
ss
adc
mov
cmp
inc
insb
pop
ss
adc
sub
loop
push
xchg
pop
test
andb
call
in
hlt
sti
jo
pop
sub
and
push
jle
mov
sub
xor
or
adc
aaa
sub
scas
fisubl
sub
outsl
ja
rorb
jb
push
and
ret
mov
or
mov
sti
pop
out
outsl
mov
stc
fneni(8087
lods
fs
int
mov
out
fstps
jno
mov
out
jg
jp
bound
das
lea
jne
cmpsb
cmpsb
in
push
sahf
les
mov
xor
data16
and
mov
xlat
push
add
add
and
xchg
sub
inc
cmp
leave
inc
mov
fisttpl
jl
fwait
nop
iret
fadds
mov
aam
mov
xchg
cmp
or
js
cltd
inc
add
mov
adc
jmp
and
in
jb
dec
push
popf
stos
pop
call
sti
movsl
add
mov
xor
xor
cltd
loopne
and
mov
push
stos
nop
adc
and
xor
xor
xlat
add
xchg
sar
stos
xchg
hlt
jge
insl
je
sub
cltd
xchg
ja
mov
fsubrl
lcall
adc
sub
ljmp
rorb
cmp
jno
lods
push
test
adc
and
in
scas
jae
icebp
repz
sub
loopne
sbb
data16
mov
dec
test
loopne
jnp
inc
push
jns,pn
loop
or
push
mov
mov
adc
cltd
mov
push
jp
push
cmp
jle
loope
pop
jge
inc
leave
pop
xchg
sbb
bound
arpl
push
and
push
lods
test
add
push
dec
fsubs
out
add
pop
int
scas
cli
movsb
xchg
and
xchg
mov
jl
xchg
jo
adc
scas
sbb
sub
inc
repz
adc
sub
mov
xlat
dec
jmp
test
xchg
clc
mov
push
data16
scas
fcomp
cmp
cmpsb
xor
mov
or
adc
outsl
sbb
clc
pop
loopne
orb
cld
mov
les
ret
mov
or
sbb
mov
divb
mov
insb
out
mov
xor
jge
jmp
xchg
sub
shrb
mov
jo
jg
test
dec
aas
jp
cmp
or
dec
mov
loop
lret
inc
dec
push
rclb
jae
pop
sysexit
out
and
inc
repz
lcall
enter
shll
in
mov
fsubrs
or
pop
jns
inc
cmc
sbb
mov
je
call
add
imul
cld
nop
das
cs
add
out
ds
cmc
ljmp
out
decb
and
in
sahf
and
movsb
mov
out
inc
jl
sbb
dec
aas
xchg
mov
dec
mov
daa
dec
or
xchg
xor
xchg
test
test
adc
movlps
test
mov
push
xchg
mov
adc
mov
ds
cs
int3
pop
js
or
xor
inc
lods
leave
pop
cltd
pop
mov
scas
inc
push
cli
jg
mov
dec
fnstcw
std
push
jmp
sahf
mov
or
std
xchg
imul
lcall
mov
lods
icebp
sbb
jecxz
push
cld
lcall
movsl
push
lahf
clc
jno
jge
dec
jno
fnstsw
adc
xchg
mov
fsubl
xor
jg
insl
xchg
sub
xchg
test
mov
inc
pushf
mov
test
jne
mov
xor
jle
add
cli
mov
or
pop
loopne
lods
sti
inc
out
out
mov
sub
mov
repz
out
sbb
ret
ret
pop
aaa
shrb
adc
inc
addr16
in
inc
mov
inc
inc
sahf
in
push
add
mov
add
imul
pop
pop
ljmp
movsl
adc
mov
mov
push
mov
popf
pop
adc
mov
cmp
mov
subb
fs
scas
test
xchg
int
loop
adc
cld
sub
push
push
jnp
fmuls
xor
sbb
mov
dec
or
roll
sub
out
fs
mov
push
popf
ja
mov
mov
pusha
lods
mov
cmp
pop
femms
or
add
push
lock
in
cmp
shrb
adc
or
push
loop
sbb
push
mov
leave
ss
mov
sub
adc
js
pop
inc
dec
inc
leave
fstpl
sub
cmp
push
jmp
orb
out
aas
cli
dec
in
aaa
or
mov
jmp
fiaddl
in
mov
addr16
sbb
cmpsl
and
stc
in
or
cmp
stos
je
sbb
push
sbb
clc
jno
mov
mov
sbb
mov
sbb
xchg
icebp
std
lods
sbb
test
arpl
outsb
xchg
cmp
mov
add
cmp
in
ret
or
adc
inc
add
cmp
test
sahf
sahf
add
or
rorb
sarb
add
das
in
arpl
add
adc
dec
jb
cwtl
xchg
adc
aas
dec
insb
ret
cs
mov
ret
sbb
mov
nop
fsubrs
add
jb
ja
sbb
out
xchg
xlat
mov
cwtl
mov
add
jp
lea
andl
inc
dec
add
insl
arpl
mov
jp
scas
xchg
pop
sbb
daa
sbb
insl
repz
jp,pn
mov
push
nop
inc
cs
dec
nop
mov
jg
in
jmp
aam
in
inc
cld
scas
imul
mov
jg
les
bnd
fmull
adc
push
cmp
mov
ret
push
mov
add
mov
xchg
jo
push
push
bnd
or
movsb
call
cmc
lods
push
aad
lcall
mov
stos
xor
xchg
in
stc
in
mov
mov
sub
les
and
jns
psubusw
xor
xorb
xor
fcomps
int
fcoml
incl
add
jb
push
mov
push
mov
mov
movb
cmc
sbb
das
push
testl
out
fsubrl
sbb
addl
icebp
jne
jo
cmp
subl
push
loopne
cmp
push
aam
mov
filds
push
push
lea
loopne
mov
movsb
or
mov
pop
shll
mov
xor
dec
mov
stc
xchg
sbb
es
clc
mov
rcl
sbb
pushf
pop
imul
mov
push
sub
movsb
outsb
jb
jp
mov
mov
mov
aas
idivb
int3
mov
xchg
pop
lret
xchg
das
add
aad
fidivrs
and
add
fdivrl
lret
ljmp
dec
mov
pop
and
or
xor
jo
out
and
pop
jmp
pop
pusha
lock
mov
jecxz
popa
lahf
dec
mov
xchg
testb
jb
clc
shll
out
arpl
mov
xor
lcall
std
jecxz
shlb
into
jno
ja
fnstsw
adc
popa
pop
stc
push
iret
and
rclb
lret
dec
dec
in
xchg
repnz
sbb
addr16
inc
cli
ss
stos
mov
dec
mov
pop
mov
and
les
pop
loope
das
repnz
sub
leave
jecxz
sbb
jae
daa
cli
jae
jae
movb
xlat
es
add
jl
jbe
sbb
out
das
mov
mov
and
fisttpl
in
cwtl
std
add
cmp
scas
sbb
fcmovbe
bound
subb
lds
sbb
imul
std
lock
mov
adc
out
sbb
push
test
mov
js
sti
lea
mov
pop
push
loopne
addb
mov
shrb
lahf
dec
sbb
fistps
mov
loopne
ja
sub
xlat
mov
negl
xor
xor
jno
test
cmp
inc
mov
pand
mov
movsb
loopne
cltd
inc
dec
inc
std
enter
or
add
sub
sub
outsl
adc
and
das
arpl
pop
xor
sahf
jge
jmp
lret
mov
xorl
out
and
hlt
outsb
or
stc
cmp
push
push
pop
popf
stos
call
inc
stos
icebp
lock
adc
xchg
xchg
hlt
lahf
rcrb
lds
int
cmp
inc
and
lea
dec
inc
cld
das
push
in
lahf
insl
xchg
hlt
shll
cmc
lds
int
push
jmp
mov
mov
jl
xchg
cmp
jecxz
xchg
mov
pop
aad
repz
es
pop
int
imul
sbb
xor
adc
mov
jae
hlt
ds
add
and
xor
es
push
inc
ja
xchg
xlat
in
sub
xlat
mov
xor
sub
movl
mov
lahf
lock
and
iret
push
in
xchg
ja
inc
cmc
int
inc
mov
push
inc
clc
data16
shlb
xchg
jmp
cmovl
adc
cmp
pop
sbb
ljmp
sub
pop
sbb
test
lahf
repz
fistps
lcall
mov
popa
mov
incb
jo
fiadds
sub
in
sub
mov
ljmp
adc
push
stos
jae
cwtl
fwait
subl
jbe
mov
or
or
cmc
loope
data16
sbb
xor
mov
cld
fisubl
jp
cs
add
insl
ja
inc
call
pop
pop
mov
or
cwtl
xor
test
ss
and
ret
mov
jmp
aam
mov
adc
lods
push
pop
cld
cmpsb
inc
and
adc
aad
lds
lods
daa
jecxz
loop
jecxz
roll
test
jne
lods
sbb
pop
or
adc
insb
test
xchg
jge
or
mov
outsl
shll
mov
jg
aaa
ss
jmp
or
cmp
and
pop
out
xor
cs
scas
xlat
push
xchg
pop
mov
add
xchg
in
jmp
nop
pop
xchg
insb
jae
lcall
jl
inc
orl
in
repz
mov
adc
cs
test
aad
add
loopne
or
int3
xchg
mov
in
ret
mov
mov
repz
shrb
aam
adcl
lock
negl
stos
sbb
mov
push
fadd
add
push
into
fs
and
shl
lods
sti
aaa
test
xor
sahf
rol
push
cmp
stc
les
fstpt
pop
xchg
imul
je
loope
push
fcomip
adc
adc
mov
sbb
jp
pop
jmp
pushf
push
cmp
dec
js
test
rcrl
mov
int
xchg
push
mov
push
adc
or
cmp
mov
lds
stos
xchg
dec
push
cmp
push
pusha
fdivrl
subl
fiaddl
hlt
xor
cmp
jo
lock
mov
push
mov
push
mov
sub
popa
test
push
outsb
pop
cmc
cmp
js
add
out
push
loope
iret
mov
fs
inc
lahf
adc
popf
add
pushf
les
hlt
data16
add
inc
or
adc
arpl
addr16
enter
cld
jge
dec
xchg
xorl
adcb
push
negl
and
pusha
jg
sub
es
mov
and
xchg
punpckhwd
adc
jge
dec
loope
cmp
xor
stos
adc
shrb
sbb
xor
inc
mov
cmpsb
shlb
mov
or
jnp
xchg
movsb
in
out
mov
rcrl
test
lods
rcll
std
popa
mov
sbb
lods
add
js
mov
ja
lea
shll
aas
ss
mov
insl
xor
push
push
out
push
orb
xor
jle
lcall
lods
cmp
shr
iret
xlat
pop
add
lea
and
shlb
mov
ret
ss
mov
fcoms
incb
xor
jmp
xchg
es
lock
mov
xchg
push
in
jl
xchg
jo
xchg
jbe
enter
jmp
enter
push
insb
js
in
aam
add
xor
loopne
xchg
or
rcrl
mov
or
js
add
cmpb
adc
clc
xchg
das
loope
mov
in
jne
add
mov
mov
push
int3
jne
jns
orl
filds
cmp
push
pop
pop
jno
notb
push
dec
es
mov
loop
sbb
mov
jle
out
sbb
gs
mov
inc
cs
cmp
out
dec
adc
pop
arpl
ja
jno
sub
mov
lds
cmp
push
jbe
popf
flds
inc
rclb
push
add
mov
cmp
fimuls
testb
push
sub
rcl
movl
test
inc
mov
repz
lods
jne
xor
outsb
sbb
mov
in
out
iret
xchg
scas
inc
sbb
test
mov
pushf
sbb
mov
sbbl
hlt
ds
sahf
scas
mov
mov
shlb
add
int
inc
and
and
insb
jl
out
push
in
adcb
cmp
adc
pop
fsubrs
fwait
or
adc
leave
or
fbstp
icebp
loop
rorb
jbe
add
in
cmp
test
sub
pop
shll
xchg
out
test
sub
jle
add
aas
and
xlat
lret
shr
cmp
lcall
lods
cmp
js
push
dec
jmp
mov
scas
dec
fbld
push
jb
xor
and
wbinvd
mov
ja,pt
fidivrl
push
xchg
imul
push
mov
mov
xor
push
outsb
ja
adc
adc
jge
aaa
call
push
add
iret
sub
push
jbe
hlt
lret
scas
jp
push
pushf
add
movsb
sbb
fistpll
dec
push
dec
test
fwait
ds
out
lods
mov
sbb
or
data16
loopne
maskmovq
testl
cmpsl
pop
push
test
loopne
test
xchg
mov
jge
stc
mov
inc
je
xchg
sti
pusha
out
xor
lock
cmp
loope
pop
aad
adc
stc
and
scas
push
and
mov
push
push
in
push
jae
std
inc
pushf
dec
call
test
jecxz
xor
add
mov
mul
jne,pn
fwait
insl
mov
shlb
cli
add
lret
inc
scas
popf
push
mov
xor
mov
sub
aas
test
and
push
cli
adc
test
shl
mov
sub
jo
and
push
xchg
sti
push
in
andl
xchg
sub
cmc
mov
lahf
sbb
ficomps
icebp
ss
or
push
mov
test
das
adc
lock
mov
test
orb
xor
mov
adc
orl
sub
push
cld
bound
cld
and
ret
add
pusha
ljmp
in
xor
or
sbb
or
pop
loopne
add
push
les
mov
push
and
test
out
cmp
adc
pushf
cwtl
lret
cmp
jg
scas
movsl
xchg
mov
fdivrs
mov
repz
xor
cmc
mov
cmp
mov
and
loop
pop
dec
lret
jbe
pushf
ret
out
dec
and
std
mov
xor
repz
lods
lcall
add
jae
mov
cmp
shll
js
in
hlt
add
mov
sbb
repnz
or
mov
mov
pop
push
stos
xchg
rcrb
and
mov
or
dec
pop
xor
sub
in
jmp
mov
sbb
dec
loopne
fidivrs
loope
sbb
mov
sarl
sbb
icebp
lea
fadds
nop
jecxz
test
ja
pop
outsb
int3
or
dec
push
out
ret
andb
sub
dec
popa
lret
xchg
xchg
mov
popa
sbbl
ret
mov
das
shrl
xorb
jge
push
add
sub
inc
sub
dec
mov
xor
ja
pushf
shrb
push
test
or
ss
cmp
outsl
ret
lret
inc
push
stc
fbld
or
mov
xchg
sbbl
dec
in
sub
dec
mov
jne
sbb
leave
data16
out
or
sbb
clc
lret
pop
clc
cwtl
mov
mov
dec
je
jnp
cmp
xchg
fcompl
mov
fs
out
push
and
cmc
inc
int3
cmpb
sbb
in
adc
shl
mov
cmp
adc
pop
test
mov
repnz
cmp
nop
gs
mov
pop
pop
jb
or
dec
mov
xchg
sbb
movb
mov
mov
fwait
loop
das
pop
inc
lods
pop
xchg
mov
or
mov
ffree
sahf
xlat
insl
pop
xchg
les
mov
aaa
mov
push
ffreep
xor
test
mov
enter
dec
xor
movsl
pop
bound
xchg
data16
outsl
cmp
sti
mov
jb
jo
jle
or
jge
jp
sub
lea
test
push
jecxz
pop
outsb
adc
cmc
pop
mov
roll
pop
push
xchg
into
data16
mov
jae
mov
pop
mov
or
call
inc
js
mov
lret
das
out
xor
dec
or
or
bound
sub
insb
fwait
popf
jecxz
call
xor
push
test
xor
adc
mov
cwtl
mov
or
pop
add
xlat
dec
jno
or
sbb
or
shll
mov
xor
xor
repnz
push
ds
sub
les
adc
ljmp
int
push
mov
in
mov
lahf
and
jmp
mov
lods
push
adc
add
push
xchg
cmp
jg
aam
push
cld
and
mov
cmp
adc
push
imul
pusha
cmp
addb
lahf
js
xorl
mov
or
dec
adc
dec
stos
pop
xchg
fistps
xor
push
sbbb
and
push
out
sbb
pushf
sbb
xlat
pop
loop
or
sbb
popf
fimull
adc
test
add
out
cmp
mov
dec
mov
out
adcb
or
push
xchg
dec
mov
xchg
ret
xchg
pop
add
lock
clc
sub
mov
mov
sbb
dec
fnstcw
adc
lret
xchg
fildl
push
pop
je
cmp
test
cltd
nop
cmp
and
mov
jecxz
push
fisubrs
xor
sub
daa
insl
adc
jge
cmc
xchg
js
lcall
insb
idivl
mov
push
xlat
ror
push
pop
or
mov
into
adc
sbb
lcall
movsl
cmc
and
cs
insl
sub
outsb
testb
test
xor
dec
push
and
mov
pop
ret
add
sub
pop
xchg
xchg
cs
sbb
pushf
ljmp
icebp
incl
sbb
pop
fsts
int
dec
push
insb
mov
mov
adc
rorb
mov
int3
push
sbb
push
loopne
push
out
xchg
sub
jmp
daa
xchg
sub
dec
stos
pop
push
mov
mov
dec
cmp
jg
loopne
pop
ljmp
scas
repnz
shll
and
sub
mov
cli
push
pop
lahf
je
dec
out
out
push
mov
addr16
lcall
adc
out
mov
aad
sub
test
mov
sub
push
push
pusha
jle
cltd
das
mov
insb
in
adc
push
cmp
aad
mov
xor
stos
jnp
rcrl
arpl
push
cmp
and
sub
dec
cltd
cmp
negl
out
and
add
mov
mov
dec
in
push
dec
or
xchg
push
xchg
mov
mov
sub
adc
lcall
push
inc
mov
xor
out
aad
in
and
pushf
imul
jae
add
inc
stos
iret
xchg
popf
lcall
icebp
jmp
mov
jl
leave
and
mov
and
jne
mov
pushf
lcall
popa
xor
inc
push
inc
std
adc
push
arpl
push
lods
lock
filds
out
xchg
push
cmpsl
stos
shl
sub
cmp
or
inc
fdivs
ljmp
push
cmpsb
mov
push
icebp
js
xor
iret
xchg
inc
mov
in
test
cli
fdivs
lods
arpl
push
aaa
jbe
aas
mov
scas
pop
sub
pushf
repz
enter
dec
lahf
mov
sub
out
mov
movl
fs
addr16
sub
fists
adc
icebp
xor
cwtl
cmp
repz
xlat
or
ds
int3
add
sbb
or
add
int3
leave
jecxz
mov
add
out
ret
lds
mov
pop
jmp
das
pop
jno
cmc
insb
jge
hlt
aam
subl
cld
sub
imul
dec
int
xor
int
test
jno
dec
xchg
fs
inc
jb
rcrb
inc
cwtl
bound
bound
addr16
inc
mov
push
pop
imul
cmp
inc
outsb
inc
stc
sbbb
adc
cld
mov
pop
push
inc
mov
std
adc
jg
sbb
js
aaa
pushf
js
stos
and
adc
add
push
mov
cmp
mov
shrl
out
sti
push
pop
inc
aaa
pop
addl
fwait
mov
addr16
xchg
sarl
nop
into
lcall
inc
repnz
les
lds
jp
rorb
js
mov
cmp
mov
push
shrb
xorl
pop
call
mov
push
test
jb
or
enter
mov
call
jae
or
ret
adc
xor
or
mov
add
push
lcall
imul
cmp
cwtl
add
pop
pop
inc
sbb
xchg
pop
ffree
in
fistl
rcrb
push
mov
xchg
mov
ja
xchg
adc
mov
repnz
pop
cmp
cmp
dec
add
iret
or
test
xchg
xchg
loope
push
sti
add
pop
adc
cmp
mov
add
mov
add
loopne
sahf
insb
adc
dec
or
fwait
or
mov
mov
paddsw
mov
sbb
jcxz
adc
cmp
das
mov
and
fisubl
adc
cmp
sub
and
xor
add
and
jae
mov
leave
daa
lea
mov
add
push
vucomiss
pop
lahf
mov
sub
popa
sbb
dec
lds
add
div
cmpl
xor
dec
jb
test
arpl
adc
adc
pushf
adc
shlb
test
add
fs
dec
mov
pusha
sahf
mov
mov
xchg
push
pop
mov
pop
in
mov
arpl
test
mov
pop
dec
out
sub
sub
clc
cmc
add
mov
cmp
and
dec
hlt
dec
dec
xchg
in
les
sarl
sub
pop
loopne
dec
xchg
out
mov
and
jne
jg
mov
int
push
sbb
push
inc
arpl
jecxz
push
add
xchg
fldenv
sub
out
jg
subl
xchg
mov
mov
popl
fdivl
icebp
mov
sbb
ret
add
scas
mov
push
and
adc
pop
xor
insb
cmp
pop
add
in
cmp
jnp
xor
jge
popf
sub
dec
repz
cs
lahf
adcb
pop
sub
ss
testb
fstl
imulb
mov
clc
mov
movsb
and
ret
sahf
incl
lahf
mov
rcrb
lea
dec
popf
sub
mov
cmpsb
imul
inc
movsl
in
xor
or
imul
in
and
fisubrs
outsb
jge
inc
mov
cld
mov
xchg
pop
daa
lcall
mov
test
in
add
divl
mov
cmp
test
xlat
jmp
sub
dec
sarl
jmp
and
sti
pop
cmp
clc
andb
mov
loop
jb
mov
rorl
les
xor
xchg
scas
xor
jno
dec
mov
sub
add
cmpsl
int3
jmp
daa
lock
bnd
cmc
in
dec
pop
push
clc
jp
aas
dec
pop
negb
add
pop
in
jp
ficoml
mov
popa
mulb
leave
mov
push
dec
jno
mov
add
in
dec
push
fwait
sub
data16
lsl
inc
cld
add
mov
add
movsl
bswap
lahf
push
pop
repz
inc
jmp
arpl
aaa
and
cmp
inc
push
adc
popf
push
pop
jl
xor
cmp
out
dec
pop
sbb
inc
pusha
das
or
ret
sbb
cmp
rcr
sub
sbb
loopne
dec
jle
cli
movl
das
aad
pop
js
jbe
xor
pushf
jmp
mulb
xor
jmp
pushf
scas
xchg
push
dec
ljmp
or
xchg
movsb
mov
andl
ss
mov
test
or
popf
rorb
cmp
repnz
in
mov
insl
dec
rclb
lcall
inc
cld
sbb
mov
jge
jl
in
insl
dec
mov
and
nop
xchg
movsl
leave
jle
dec
lahf
push
dec
repz
xchg
aas
dec
leave
ret
loop
or
lods
lret
dec
iret
mov
mov
pop
test
push
dec
pop
repz
mov
outsl
daa
jg
mov
lds
std
jecxz
cmp
mov
xchg
fisubrl
pusha
fwait
gs
cmpsl
hlt
jecxz
dec
or
mov
pop
xor
shr
mul
xor
sbb
gs
and
pop
jae
mov
sbb
imul
nop
pop
xor
lret
lods
cltd
pop
addr16
mov
sub
pop
push
jo
aas
pop
aaa
or
aad
iret
adc
or
or
subb
dec
in
ret
mov
push
outsl
lds
js
mov
pop
mov
xchg
repnz
subb
xchg
lods
pop
in
das
xchg
lods
lea
fdivl
sbb
or
push
cmpsb
mov
xorl
lret
mov
sbb
sub
imul
add
xor
into
sti
test
inc
sub
jae
jle
stos
lcall
dec
mov
repnz
xor
cwtl
jne
dec
or
mov
jl
test
mov
inc
adc
in
cmp
sub
adc
cmp
out
add
push
mov
jecxz
mov
and
aam
and
into
aas
repnz
inc
adc
ds
pop
add
mov
repz
jb
inc
inc
jg,pt
mov
cmp
lock
cmp
jl
cmpsb
and
sahf
inc
sbbb
shl
lds
push
jge
mov
xchg
int
pop
testl
lcall
aad
push
frstor
adc
fistps
insb
addr16
daa
dec
dec
fisubrs
dec
cmp
enter
xor
sub
lcall
inc
dec
jbe
movlps
xchg
xchg
ss
sub
push
test
push
shll
das
test
cli
mull
mov
clc
insl
sub
push
insb
decl
mov
scas
imul
inc
sbb
jle
cld
cltd
dec
jl
adc
mov
and
lods
stc
sub
inc
inc
jns
adc
xor
pop
lods
jmp
mov
mov
jnp
popf
ror
and
cmp
mov
mov
xor
or
cmp
xor
pushf
hlt
cmp
cmpsb
fwait
sbb
out
lea
scas
mov
int3
pop
and
lcall
inc
and
jo
add
mov
loop
and
scas
cli
xchg
push
dec
out
jle
pop
mov
daa
imul
test
jae
popf
mov
jnp
enter
pop
or
mov
adc
pop
mov
xor
push
je
pushf
in
out
xor
push
mov
popa
mov
ret
std
nop
lods
xlat
lea
and
adc
and
inc
jno
aam
out
and
cmpsl
sahf
js
mov
dec
xchg
mov
inc
fmull
mov
ret
add
sbb
rclb
pop
lock
popf
loope
cmp
jge
jnp
jb
mov
lret
xchg
push
imul
mov
pop
int3
cmp
call
adc
shl
adc
inc
rolb
mov
pop
cmpsb
pop
sahf
xchg
cld
and
iret
fs
dec
ret
push
lret
test
inc
cltd
inc
int3
notl
loopne
jb
stc
push
mov
add
fstpt
lods
or
mov
js
jno
xor
or
xchg
call
das
stos
rcrl
or
push
sahf
inc
call
cs
imul
mov
lea
jge
mov
or
mov
jbe
or
lods
aaa
loopne
fisttps
shl
cmc
ss
sbb
xor
leave
sti
in
cmp
shlb
pop
adc
jb
push
sub
mov
insl
inc
fs
xor
fs
sub
mov
mov
dec
movsl
out
sbb
pop
push
pop
cltd
shlb
dec
mov
inc
xor
ret
out
out
int3
sub
cmp
outsb
jb
repnz
push
jge
out
mov
push
stos
mul
test
in
aas
push
imul
fcmovbe
mov
and
adc
jae
dec
outsl
mov
add
fwait
cmpsb
mov
and
daa
xchg
mov
cmpb
or
mov
rorb
cmc
jae
out
sarl
mov
inc
sbb
mov
push
mov
xlat
sbb
out
mov
push
jns
adc
jno
std
xchg
mov
scas
je
push
out
cmpsl
mov
jo
pop
fists
inc
sub
push
adc
or
popf
pop
xlat
call
adc
sahf
mov
inc
push
pop
or
adc
cmp
xor
cs
pop
into
push
div
fdivrl
pop
push
mov
mov
mov
dec
sti
pop
pop
mov
and
outsb
out
loop
dec
adcb
int
mov
in
or
and
inc
xchg
test
iret
inc
adc
mov
mov
sbb
js
mov
jns
mov
pop
call
adcb
inc
in
xor
outsl
pop
mov
mov
push
adc
lret
imull
je
push
aas
movsb
inc
jmp
xchg
clc
mov
sub
sti
and
mov
sbb
mov
test
sahf
or
lds
or
add
lret
cmpsl
negb
enter
adc
aaa
add
inc
xchg
jno
or
mov
loop
int
adcb
std
das
jae
fimull
cltd
push
loop
inc
les
add
jno
dec
cwtl
mov
out
das
cwtl
and
in
jne
fwait
ja
and
test
lods
sbb
and
pop
xor
scas
fildl
mov
loop
or
in
lret
push
pop
pop
int3
or
punpcklwd
cmpsb
push
stos
movsb
hlt
cmp
pop
pop
cs
jbe
pusha
jmp
inc
or
mov
je
inc
std
stc
mov
push
and
xchg
repz
rcl
out
cmpsl
push
mov
out
ret
jns
xor
or
inc
push
jne
loop
xor
mov
insb
push
sub
and
push
popa
cmpsb
mov
mov
movsl
xorl
mov
jle
jbe
inc
in
mov
push
add
and
in
shlb
mov
pop
and
mov
ljmp
jb
jae
cltd
xchg
xor
xchg
xor
xlat
fistpl
xor
mov
add
cmp
and
clc
xlat
sub
jg
jb
dec
sbb
fmull
and
jl
fs
push
xchg
aad
bound
scas
jne
test
icebp
push
jp
dec
cwtl
out
repz
bound
hlt
loop
cmpsl
clc
das
xchg
lds
sbb
mov
aas
jae
clc
push
sub
or
jo
clc
stc
sub
sub
inc
scas
outsb
ret
stos
rol
js
inc
out
lahf
pop
in
into
popf
mov
daa
test
ljmp
mov
out
mov
test
pop
sti
xor
or
outsb
outsb
pop
bound
add
mov
or
fsubs
or
sub
test
movsb
leave
cmp
insl
fidivl
xor
xchg
inc
add
push
js
adc
repz
fs
rolb
xor
icebp
cmc
loopne
incb
push
cmp
jno
es
call
xchg
sub
and
adc
stos
scas
sbb
push
jne
pop
shl
or
mov
or
push
jp
cmp
jne
push
stos
fxch
push
mov
pop
jae
adcb
or
int
cmp
xchg
inc
dec
and
mov
fcomps
xor
or
in
sbb
sub
sbb
es
sti
xchg
mov
lahf
xchg
fwait
test
mov
mov
push
add
pop
push
mov
pop
das
clc
lods
aad
push
sbb
pop
or
jl
lcall
mov
or
in
lock
out
pop
inc
xchg
aad
mov
popf
int
jmp
mov
cltd
xor
push
out
pushl
push
inc
push
jp
frstor
hlt
rclb
orl
cmp
popf
adc
mov
hlt
mov
scas
iret
push
sbb
sbb
les
cs
gs
fdivp
sbb
inc
fnstenv
gs
lcall
adc
pusha
gs
cmp
mov
add
mov
or
test
stos
das
dec
adcb
stc
pop
in
lock
push
or
xlat
into
jnp
xor
in
mov
adc
enter
jnp
cmpsb
dec
imul
idivb
int
and
dec
mov
jecxz
push
aad
outsb
cwtl
fadds
mov
sarl
ja
inc
test
sahf
insl
int
add
push
cmp
sbb
push
push
sbb
imul
xchg
jge
or
and
sub
loop
outsl
adcl
xor
cmp
sub
jo
rol
mov
inc
mov
fwait
inc
daa
fsubrl
mov
fcomip
in
add
mov
xchg
push
cmpsl
jg
iret
dec
pop
gs
xchg
cwtl
addr16
mov
daa
add
out
je
call
sbbb
xchg
mov
pop
add
dec
dec
mov
push
xchg
pop
mov
jg
aam
jmp
adc
pushw
gs
mov
mov
repnz
into
fimull
je
in
sub
push
sti
je
cli
add
sub
shll
cmp
cmp
js
dec
mov
fs
fdivrl
movsl
in
xor
addb
pop
adc
loopne
fldcw
test
or
dec
add
stos
and
test
mov
cmp
sbb
dec
dec
xchg
mov
cli
in
push
gs
jno
jp
es
and
cmpsb
push
pusha
mov
bound
test
xchg
mov
imul
jl
fistpl
mov
push
push
std
nop
test
pop
test
enter
and
imul
loopne
test
out
lock
pop
insb
mov
in
sbb
jne
xchg
mov
ds
cmp
pop
xor
dec
dec
imul
and
xorl
mov
sub
dec
mov
push
push
test
loope
mov
hlt
imul
divl
xchg
scas
sub
xor
xchg
push
jnp
adc
push
push
das
sbb
or
inc
pushf
pushf
aas
inc
in
aam
stos
lods
clc
pop
loopne
fmulp
and
ja
dec
pop
sub
xor
cwtl
cmpsl
cmpsb
or
je
fs
dec
mov
mov
imul
out
sti
xor
mov
pop
pop
jmp
in
movsb
inc
enter
sbb
xchg
aas
lods
dec
pop
sbb
repnz
subl
add
ret
les
adc
sbbl
repz
dec
push
arpl
aam
sbb
stc
or
jno
stc
lea
jae
hlt
dec
pop
mov
pop
sub
fisttps
sbb
aaa
mov
mov
mov
mov
fistpll
js
pop
and
mov
xor
mov
adcb
hlt
pop
pop
inc
fistpl
idivb
js
push
dec
std
push
mov
mull
mov
movsl
adc
inc
outsl
sub
loop
divps
lea
jle
and
adc
dec
fisttpl
addr16
ds
jle
jecxz
lds
add
dec
push
cmp
xor
fs
loope
imulb
or
ja
cwtl
js
leave
fistpll
pop
data16
scas
lcall
lret
fs
lock
test
inc
xor
add
inc
add
cld
adc
fidivl
movsb
in
aam
mov
mov
add
pusha
lods
add
pop
icebp
push
xor
jns
add
and
and
sub
pop
dec
sbb
test
add
sub
sbb
daa
scas
mov
fstpt
enter
aaa
hlt
orl
mov
cltd
cmpsb
dec
push
cli
iret
test
push
shl
fcompl
cmp
ret
pusha
pop
push
cmp
mov
xchg
or
sbb
mov
dec
inc
pop
dec
push
shlb
jne
mov
ljmp
cld
xor
call
cmp
push
addr16
add
xchg
sbb
add
call
lret
and
test
pop
mov
cmpsl
mov
fiadds
mov
push
movsb
fwait
pusha
fstpt
sbb
ret
js
mov
push
mov
hlt
push
jne
andb
fisubs
cmpsb
jle
pop
fidivs
fiaddl
dec
push
insl
push
out
mov
fidivl
pop
negl
mov
or
mov
and
sub
scas
xor
lahf
loop
imul
jge
mov
das
decb
jne
ss
add
in
iret
movsb
push
pop
jmp
stc
mov
icebp
adc
daa
rol
fistpl
imul
sbb
xlat
mov
sbb
sub
cmp
sbb
xchg
adc
pop
aam
movsb
sti
cmc
push
jecxz
inc
fcoms
xchg
rcrb
xchg
xlat
inc
and
scas
and
mov
imul
js
mov
xor
mov
xchg
xor
out
roll
ffree
in
inc
rcrl
lods
hlt
popl
js
pop
movsl
mov
stos
xchg
loop
dec
mov
cmpsb
movsb
mov
fisubrs
ds
jp
adc
xor
in
sbb
sbb
imul
mov
jb
jg
adc
inc
pop
and
xchg
push
pop
shlb
jl
fcoms
scas
sbb
sbb
ja
stos
jns
fsubrs
test
jmp
jmp
clc
movl
and
sbb
sar
sbb
sub
and
cwtl
std
dec
test
hlt
or
js
dec
lcall
in
outsb
imul
mov
xchg
aaa
or
testb
mov
sbb
arpl
and
sahf
mov
rcrb
popa
fbstp
lret
aam
mov
ja
int3
add
jae
into
roll
fidivrs
mov
movsl
sbb
insb
push
mov
rorl
fcomp
pop
cmc
mov
dec
sbb
repnz
or
mov
mov
jmp
cmp
cli
jb
cmc
int
test
mov
xchg
lahf
cmp
push
or
clc
ret
inc
fdecstp
mov
xlat
pop
xchg
dec
scas
jge
daa
cmp
lods
jge
mov
xchg
dec
mov
clc
sbb
popa
dec
scas
mov
rcll
aad
popf
cmc
js
mov
mov
je
pop
out
loop
leave
cli
xor
mov
es
daa
leave
jl
pop
pop
add
jg
std
nop
inc
xor
pop
cmpsl
pusha
jmp
pop
daa
lret
jo
mov
repz
in
shl
arpl
ret
popa
ja
or
insl
iret
cwtl
fidivrs
jbe
adc
xor
inc
data16
imul
aaa
mulb
jne
popf
mov
and
mov
mov
or
and
andb
mov
dec
stos
ja
lock
mov
out
sbb
push
fsubrs
push
inc
sbb
fldl2e
mov
inc
mov
mov
mov
xor
push
in
push
xor
xor
outsl
nop
in
fisttpll
push
mov
iret
test
popa
ret
jbe
fstpl
adc
shlb
sbb
loop
popf
stos
jmp
lret
test
jg
jb
mov
loope
imul
test
ret
adc
mov
xor
std
les
aaa
sti
insb
mov
fnstsw
jnp
shl
adc
nop
inc
out
sub
and
xchg
scas
cli
loop
loop
xchg
inc
xchg
mov
sub
lds
pop
fcompp
cmpsl
add
or
and
cli
ds
outsl
subb
sbb
pop
jge
stos
push
jne
movsl
push
push
rcrb
mov
pop
and
insb
or
mov
jb
test
xor
xchg
ret
or
xchg
or
sbb
js
repnz
jge
jae
add
sbb
outsl
jae
frstor
jb
shlb
into
sub
xor
clc
fdivs
test
cmp
sbb
mov
xchg
out
or
mov
adc
xor
sub
stc
jle
dec
inc
hlt
push
add
scas
xchg
in
adc
aaa
push
and
mov
aam
or
mov
push
fdivs
xor
jae
rcll
push
movsl
mov
push
adc
sub
scas
rcrl
ljmp
pop
inc
jmp
dec
fucom
xchg
mov
jp
dec
cmpsb
shll
adc
in
data16
ret
aas
cli
add
int3
push
fwait
push
jbe
mov
xor
mov
sti
andb
mov
scas
ja
push
adc
sub
mov
insl
outsb
lock
mov
insb
in
insb
popa
push
stos
daa
call
inc
xchg
rcrl
les
rorl
inc
adc
and
out
movsb
xchg
jmp
and
roll
popa
cli
cmpsl
fisubs
mov
inc
adc
add
icebp
xor
or
pushf
ret
jmp
out
mov
xlat
cltd
lret
sbb
or
sbb
cmpb
lret
push
andl
mov
cmp
int
or
leave
nop
in
mov
cli
xor
insb
cwtl
mov
cmpsl
lahf
gs
in
sbb
sti
pushf
in
jo
mov
mov
jb
mov
jmp
xor
loop
xchg
add
sbbb
out
mov
jge
lahf
adc
mov
pop
or
add
ss
pop
jg
outsl
repnz
lods
fistl
adc
sbb
sbb
enter
out
data16
or
loop
mov
xchg
mov
scas
xchg
add
adc
lds
or
pop
notl
mov
mov
cmp
cmpsb
wbinvd
mov
lds
stc
and
jp
loop
in
mov
cmp
xchg
loop
mov
cmpsb
outsl
inc
fisubl
cmp
xchg
pop
inc
mov
neg
jge
sbb
sub
lret
xor
cmp
jge
adc
out
dec
sub
test
pop
push
outsb
jnp
mov
pop
adc
inc
sahf
inc
ds
clc
pop
imul
in
sbb
mov
sbb
dec
aaa
into
test
mov
xchg
dec
xchg
xorl
push
popa
pusha
jae
mov
add
inc
push
mov
test
adc
into
dec
and
cmp
inc
xchg
push
sbb
imul
cmc
insl
icebp
add
lret
pop
lds
jecxz
pop
jg
ret
xchg
fiadds
int
adc
adc
int3
mov
pop
cmpl
jns
iret
aam
test
push
hlt
stos
pop
mov
test
test
cli
divb
addl
orb
sti
pop
pop
push
mov
adc
push
aam
lds
xchg
sub
mov
mov
imulb
mov
xchg
dec
sbbb
xor
add
mov
jge
push
fsubs
jecxz
mov
and
jg
mov
sbb
in
ljmp
xor
rol
push
sub
pop
mov
lcall
push
dec
inc
call
mov
int3
mov
int
mov
js
ja
sub
dec
enter
sub
lods
push
jne
jno
lret
out
nop
or
mov
push
xchg
daa
in
dec
test
aas
fcom
mov
jb
jmp
jnp
mov
mov
adc
cmp
stos
and
lods
fucomp
dec
cmpsb
sbb
leave
sahf
jl
insl
in
cltd
aad
push
add
sbb
cmpl
inc
out
mov
cmpsb
gs
enter
sahf
mov
imul
xchg
jno
repnz
iret
inc
sbb
test
or
push
test
mov
push
movsb
fiaddl
int
rcrl
lahf
mov
stos
in
stos
xchg
popa
lahf
mov
orl
adc
int
lahf
rorl
cs
iret
lret
push
add
and
loop
push
jno
imul
adc
add
push
addr16
pop
mov
add
cs
pop
dec
jecxz
pop
push
mov
inc
add
sbb
dec
jnp
aam
cmp
sbb
fnstsw
inc
insl
inc
pop
mov
add
fldenv
lahf
adc
outsb
stos
insl
loop
push
popa
outsb
in
les
cs
xchg
xor
cmp
imul
fbld
mov
test
pop
outsl
sub
cmp
loopne
lret
sbb
shll
inc
cmpb
mov
sbb
mov
mov
dec
jae
add
scas
jb
ret
add
add
inc
inc
es
pushw
test
sbbb
test
jno
push
in
call
push
sub
sahf
or
sbb
arpl
jmp
aam
sbb
scas
neg
rolb
sti
jbe
add
dec
sub
pop
ljmp
adcl
call
scas
lock
cmp
inc
rcr
mov
jle
jg
xor
icebp
jg
imul
push
insb
fwait
out
mov
enter
iret
add
add
adc
scas
mov
scas
sub
jne
in
mov
xor
repnz
inc
adc
out
or
sti
push
out
jne
fwait
stc
pop
loopne
cld
mov
sbb
in
pusha
jg
push
xor
rolb
dec
addb
sbb
lcall
sti
popa
fstps
mov
sti
jne
aam
mov
int
pop
xlat
loop
orl
lret
loopne
mov
xchg
jnp
and
xlat
int
insl
out
push
cltd
push
aaa
push
mov
dec
pop
or
fwait
jb
mov
outsl
nop
push
mov
dec
ror
pop
lock
out
loop
mov
inc
enter
stos
cltd
pop
enter
mov
add
pop
stos
jo
lret
test
fs
push
pusha
add
sub
push
cmpsl
orl
rcl
sub
or
fiadds
mov
out
sahf
ret
aam
call
xchg
loopne
dec
cmp
test
xchg
pop
push
add
lods
aam
dec
stc
xchg
or
bound
js
frstor
clc
mov
cli
lods
cmp
jae
mull
jbe
bound
jl
or
sub
xchg
decl
rep
out
stos
jo
mov
leave
push
std
aas
shlb
push
lcall
outsb
xor
xorb
enter
ja
xchg
repnz
lcall
iret
std
je
and
mov
or
mov
xor
and
in
xchg
inc
adc
and
cmp
pop
daa
jnp,pt
iret
lds
jg
fmulp
out
xor
mov
daa
or
sub
add
enter
mov
jae
push
adc
cmc
in
pop
insl
test
idivl
mov
dec
nop
es
stos
push
andl
or
mov
pop
add
pop
mov
cmp
leave
sahf
stos
dec
shrb
mov
mov
mov
jnp
adc
iret
imul
mov
mov
fisubrl
es
orb
repz
pop
jb
aas
bound
cli
push
sbb
cltd
mov
xor
stc
aaa
ja
repnz
or
cmp
push
add
sub
xor
loopne
push
jmp
mov
push
lods
cmpb
loop
test
push
mov
xchg
andb
sahf
cmp
test
icebp
sarb
jo
call
lods
int
jno
shrb
mov
jb
insb
push
mov
mov
arpl
push
push
fimuls
rcrl
fadd
push
cld
out
stos
dec
mov
sbb
std
cltd
cwtl
jle
int3
fsubrs
in
mov
movl
xchg
test
push
aam
dec
notl
inc
mov
lret
xchg
daa
sarb
xchg
pop
sar
shlb
cmc
xor
out
inc
xchg
and
sbb
xchg
out
addr16
sahf
rorb
sbb
test
and
mov
and
negb
sub
adc
pop
pop
inc
mov
cld
sub
xor
pop
cmp
add
mov
mov
notl
out
cmpsl
call
add
pop
dec
in
dec
pushf
or
push
add
dec
adc
cmp
xor
out
mov
pop
adc
cmp
xor
xlat
lret
cmp
pop
aaa
popa
pop
arpl
out
mov
inc
push
int
fisttps
adc
out
ja
sub
arpl
mov
cmp
mov
incl
mov
or
ss
pop
push
inc
xchg
cld
call
jae
out
pop
mov
pop
jecxz
out
or
mov
xlat
das
imul
adc
xchg
cli
in
sbb
xchg
xchg
push
push
jl
jecxz
insb
movsb
roll
xchg
mov
jl
mulb
pop
idiv
sub
add
imul
sbb
lret
pushf
popa
inc
test
mov
inc
jbe
repnz
pop
test
pop
in
aad
mov
push
xor
or
lret
dec
imul
test
push
adc
mov
mov
mov
stc
push
push
stos
sbb
pop
xchg
int
fisttpll
testb
mov
push
push
imul
push
call
in
rcll
loop
mov
out
mov
mov
clc
mov
aam
and
cmp
cmp
sub
fimuls
sbb
leave
call
ja
mulb
add
cmp
lods
mov
inc
je
mov
mov
imul
xchg
inc
mov
ss
enter
ljmp
imul
push
cmpsl
iret
bound
sti
out
and
test
dec
push
out
imul
pop
movl
ja
icebp
outsl
cmp
xchg
add
leave
sub
jns
popa
adc
imul
pop
jo
sti
pop
mov
push
pop
jl
sub
or
push
or
sahf
adc
add
cmp
adcl
mov
xchg
clc
nop
push
dec
mov
lea
aam
imul
out
imul
push
mov
pop
dec
std
mov
sub
xor
or
nop
into
or
cmc
fwait
push
jns
push
cmpsl
loopne
push
ds
mov
lds
dec
insl
in
jle
mov
jp
sbbb
stos
adc
stos
mov
xchg
push
dec
push
data16
pushf
sbb
cmc
mov
lret
jb
shll
or
hlt
jecxz
xor
mov
dec
sub
or
es
adc
les
aam
mov
cmp
popf
cli
clc
mov
mov
or
push
arpl
jle
insb
sahf
movsl
idivl
sub
movsl
test
into
mov
push
or
and
aam
pop
scas
jg
sbb
dec
cmp
push
loop
sbb
repnz
test
and
insb
lock
nop
pop
jno
rol
dec
sub
adc
popa
ja
add
aam
inc
xchg
test
ret
push
data16
cmpsl
fcmovnbe
dec
mov
popf
imul
adc
dec
inc
push
pop
sbb
sbb
mov
push
jle
xor
pop
xor
ret
push
adcb
inc
lahf
dec
das
movsb
add
jmp
das
lcall
cwtl
adc
das
sub
mov
inc
push
mov
pop
sub
into
fbld
enter
xor
fidivs
mov
inc
fimull
test
inc
xor
aam
cmp
jb
lods
aam
and
aaa
cmp
in
movsl
adc
loope
outsl
arpl
sbb
sbbb
cmp
test
mov
xchg
xorb
addl
lock
jp
xor
sti
mov
cmp
cwtl
mov
fstpl
lods
add
xchg
icebp
sub
jp
jecxz
aas
dec
inc
adcl
mov
adc
add
sbb
jae
mov
xor
mov
divb
sub
popf
lahf
sub
lods
xchg
mov
ret
mov
mov
push
dec
pop
aad
js
jbe
mov
sbb
mov
or
test
push
fldcw
add
out
push
jns
xor
lahf
inc
pop
jecxz
cli
insl
cmp
dec
pop
push
rorb
xor
xchg
push
xchg
sub
dec
push
jg
xor
jecxz
cmpl
fisttpl
xchg
add
hlt
ja
imul
xchg
loopne
sbb
dec
cwtl
loopne
bound
add
dec
mov
fiadds
push
fisubrs
dec
mov
push
imul
sub
adc
shlb
sub
fstps
mov
mov
data16
jmp
movsl
outsl
mov
aam
pop
mov
call
rclb
fwait
mov
scas
adc
sbb
enter
jnp
aad
or
lret
and
push
out
lret
jne
sti
repz
add
sti
fs
std
pop
push
int3
jecxz
xor
dec
mov
xor
mov
push
push
addr16
imul
dec
cltd
xchg
sub
lahf
js
clc
mov
outsb
xchg
xor
push
xchg
mov
lcall
cltd
xor
cmpsb
repz
pusha
stc
add
xor
sub
pop
ljmp
lret
in
xchg
jle
cmp
xchg
divl
icebp
jne
sbb
push
sub
xor
jne
push
sub
test
fcomi
pop
mov
fidivl
pop
std
cs
mov
pop
jg
jge
and
orb
cld
jge
pop
lea
test
dec
pop
xchg
into
jno
push
xchg
jae
mov
leave
jecxz
add
ret
mov
dec
push
lahf
dec
loop
mov
jns
js
cli
ror
mov
xor
arpl
adc
xchg
jmp
xor
sti
mov
call
call
jae
xchg
cmpsb
add
inc
xorl
stos
jne
test
hlt
mov
mov
outsl
test
push
pop
in
cld
mov
or
add
push
and
adc
cmpsl
test
push
add
xor
rcll
ljmp
mov
ret
bound
inc
xchg
ss
and
in
add
sub
jmp
fwait
sub
add
les
ret
cmpsb
shrl
jl
lds
mov
jp
jge
mov
stos
cmp
popa
xchg
pop
ret
mov
lds
mov
dec
into
dec
popa
xor
jb
push
push
orl
xchg
ljmp
cmc
jne
xchg
mov
dec
or
ss
js
jo
call
push
pop
in
sahf
inc
fmull
mov
popa
mov
repz
dec
scas
daa
fisttps
mov
xor
ror
push
mov
ret
mov
cli
lret
stc
in
mov
jo
push
dec
and
bound
loopne
repz
pop
adc
sub
xor
pop
stos
orb
xlat
das
mov
inc
mov
out
in
and
push
xchg
xor
mull
xchg
and
mov
hlt
xor
cmpsl
int
ret
sub
push
add
inc
push
dec
fnstcw
out
mov
xchg
mov
pushf
bound
push
lahf
mov
sbb
insb
aad
adc
xor
and
xchg
pop
pop
or
daa
int
scas
xchg
sbb
mov
loopne
adc
and
adc
ds
loopne
dec
cmp
lock
imul
mov
fstl
sbb
stc
ret
mov
imul
xchg
pop
bnd
insl
js
mov
pop
pop
insl
dec
pop
mov
ficomps
ror
sti
and
test
sub
cs
movsb
sbb
jle
test
xlat
jns
scas
mov
mov
sahf
add
push
int3
cmp
insl
fcompl
mov
jno,pn
into
enter
movsb
ret
push
adc
imul
mov
repnz
adcb
inc
jecxz
pop
cwtl
sbb
push
jno
roll
sbbl
sbb
inc
bnd
ja
adc
push
fs
jbe,pt
adc
lock
decb
test
fwait
add
cmpsl
cld
fcoms
stos
push
mov
pop
pop
rorl
or
jo
in
pop
jge
outsl
or
mov
dec
push
inc
push
jno
in
lods
jge
movsb
outsl
out
scas
lea
and
dec
fsubs
insl
iret
cltd
lea
mov
sar
mulb
push
push
xchg
lcall
push
adc
popf
loopne
jae
and
fdivrl
jb
leave
out
lods
mov
inc
out
shlb
and
mov
idivb
xor
sti
push
sbb
dec
sbb
into
cwtl
mov
sbb
mov
aaa
arpl
insb
out
mov
mov
xor
shlb
leave
pusha
sahf
cmp
mov
mov
push
into
cmp
xchg
pop
mov
mov
sub
out
sbb
aam
add
or
lods
push
xor
iret
push
bound
xchg
pop
adc
jns
mov
mov
mov
movd
cmpsl
push
sbb
rol
mul
push
lahf
sub
les
fwait
stc
lock
lds
test
or
rclb
push
xchg
and
jnp
loop
data16
mov
or
push
sti
jno
xlat
lahf
out
shlb
push
clc
in
imul
mov
adc
jmp
in
lret
pop
or
mov
stc
adc
push
mov
mov
cmp
pop
daa
adc
cli
dec
sub
dec
fadds
jo
cmp
nop
test
cmp
mov
inc
dec
push
nop
add
loope
push
cltd
sahf
jns
jns
mov
xchg
mov
test
lahf
fwait
add
add
ret
lcall
lock
dec
pop
decb
in
cwtl
arpl
push
in
dec
jb
pop
jl
push
fxch
stc
aas
mov
inc
ljmp
mov
mov
movsb
xchg
call
adc
jmp
inc
aad
xor
jae
mov
push
aaa
lods
cmp
add
jmp
xchg
sbb
test
inc
fisttps
inc
mov
ljmp
ss
nop
vphaddudq
push
inc
sub
arpl
inc
fwait
push
sbb
outsl
das
insl
in
sub
lret
es
ss
cmc
gs
and
lods
mov
out
fisubrl
dec
jge
dec
arpl
scas
fstps
sar
outsl
or
insl
xchg
push
dec
call
jne
in
inc
adc
test
jp
sbbl
cmpsl
loopne
cmpsl
or
lock
arpl
mov
adc
xor
int3
push
inc
mov
scas
pusha
push
push
sub
gs
mov
aas
fcompl
pushf
int3
rcrl
data16
mov
pop
cli
mov
ja
xchg
cmp
subb
jo
adc
fdivl
pop
push
mov
xchg
sbb
paddb
iret
loope
xchg
cmc
insl
sbb
ficoms
push
lcall
inc
add
ljmp
sub
or
jg
or
popf
lds
sub
addb
and
xlat
xlat
cmp
icebp
mov
adc
insb
xchg
mov
inc
shrl
idivb
ds
in
sub
add
in
mov
or
in
xchg
and
sbb
cs
mov
xchg
mov
xchg
or
cmp
mov
mov
call
cltd
call
push
pop
sub
mov
mov
and
and
push
js
ja
mov
addr16
xor
push
push
int3
test
xor
imul
pop
mov
pop
les
sub
aad
push
xor
aas
xchg
test
adc
popf
mov
cld
mov
xchg
or
das
daa
sbb
subb
enter
dec
adc
xlat
push
mov
sbb
jno
scas
incb
xchg
addr16
jo
aaa
leave
xor
sub
cld
lret
stc
jp
cs
xor
mov
inc
fisttpl
sub
adc
mov
sti
mov
orl
xchg
mov
sub
adc
xor
add
push
mov
dec
push
stos
push
jge
lret
mov
rcll
addb
std
adc
push
in
mov
pop
ljmp
lcall
mov
into
or
mov
pop
addr16
scas
cmpsb
push
push
or
cltd
jbe
andb
jno
jecxz
xchg
pusha
adc
and
dec
push
cmpsl
fmuls
aad
xchg
loope
mov
push
push
xor
pop
mov
add
or
sahf
xchg
leave
mov
in
pop
mov
mov
xor
mov
mov
fwait
push
aaa
mov
loop
xlat
shrl
adc
jae
xchg
ds
ret
outsb
adc
dec
and
fwait
mov
jecxz
out
jo
or
mov
icebp
xchg
cmp
inc
jmp
clc
das
cmp
xor
aad
push
jb
sti
or
aaa
stc
inc
call
test
mov
jp
les
or
and
pop
xchg
jl
adcb
add
mov
adc
xlat
arpl
lret
shll
insb
cmp
pop
add
aad
jmp
ja
call
push
inc
imul
inc
jae
decl
sbb
sahf
imul
mov
repnz
cmp
xchg
addr16
fcmovb
test
les
std
sbb
les
roll
dec
add
inc
icebp
movsl
mov
mov
xor
aam
test
scas
and
xchg
cltd
mov
shll
clc
pop
adc
adc
sub
sahf
fsts
stos
mov
and
xor
pusha
jge
or
shlb
sub
xchg
daa
mov
xchg
jo
sti
imul
cmp
fs
mov
push
mov
mov
pop
mov
andb
push
lods
dec
sti
mov
mov
int3
xchg
fwait
icebp
int3
jns
stos
jmp
rolb
daa
cmp
nop
aaa
xchg
sub
mov
or
mov
pop
pop
popa
fnstsw
fisttpl
nop
ds
jp
lds
popl
push
mov
jbe
lods
add
or
sub
sub
fsubrl
xchg
out
in
fmuls
xor
movsb
mov
dec
enter
stos
adc
push
cld
sub
insb
or
adc
add
add
movsl
mov
add
fildl
fs
out
pop
into
inc
dec
rcll
or
hlt
and
dec
adc
xchg
xor
loop
adcl
out
std
xchg
mull
push
adc
push
pop
mov
gs
inc
mov
pop
dec
fisubs
push
xchg
iret
aad
and
lock
daa
js
iret
imul
jg
mov
aas
arpl
popa
out
cld
lcall
sahf
inc
sarl
dec
jae
and
sub
insb
sub
push
sbb
push
push
gs
adc
in
stos
sub
ljmp
jmp
mov
sbb
sbb
js
adc
inc
push
ret
int3
push
xorb
xchg
filds
push
jmp
les
or
mov
or
pop
lea
lea
lods
test
and
mov
rcrb
mov
hlt
add
movsl
mov
cmpsl
pop
or
std
mov
jns
xchg
mov
adc
lods
sti
pusha
lods
add
imul
xor
in
leave
add
aad
sbb
stos
dec
push
dec
jmp
ljmp
sbb
mov
jecxz
cld
sub
inc
sbb
icebp
push
pop
jbe
inc
roll
dec
roll
xchg
sub
imul
aaa
repz
fs
hlt
pop
leave
xor
cwtl
aad
or
pop
pop
sbb
test
dec
xchg
call
pop
sub
bound
unpckhps
icebp
hlt
cli
inc
mov
inc
dec
pop
mov
jecxz
xchg
pushf
pusha
repnz
shll
push
cmpsl
xchg
aas
push
inc
sarl
cmp
cmp
fdiv
jge
jle
imul
xor
dec
out
enter
shr
dec
jl
mov
andb
gs
jbe
mov
add
push
push
std
cmp
sub
lods
and
add
jmp
repnz
cmp
jecxz
push
push
mov
dec
sbb
or
mov
inc
sub
test
push
icebp
andb
cmp
inc
mov
cmp
push
aam
jns
stos
out
mov
dec
jp
dec
iret
mov
icebp
mov
pushf
xchg
int3
dec
cmp
popa
xlat
jb
mov
les
ss
sub
lahf
mov
repz
mov
push
pop
xlat
sbb
cmp
sbb
lods
jo
pushf
xchg
and
cld
pusha
fwait
icebp
testb
das
jb
out
xchg
or
xchg
cwtl
adc
pop
mov
sti
xor
aad
sbb
movsb
cmpsb
and
fnstcw
sbb
lods
loopne
and
outsb
mov
mov
push
ss
aaa
pop
jl
jno
xlat
ret
xchg
fdiv
sbbl
dec
rcrb
mov
ljmp
mov
sub
lea
jge
sahf
leave
lcall
pop
push
sbb
rcll
xor
xor
in
call
aad
ds
push
ljmp
stos
sbb
dec
push
push
add
xchg
subl
xchg
loope
lea
jge
inc
sarl
js
xor
sbb
inc
or
fadd
test
aad
lods
testl
and
ret
sbbb
iret
fidivrl
cmp
push
cmp
fcoml
jmp
push
inc
je
mov
xor
sub
lcall
push
aam
push
icebp
jmp
test
movsb
mov
pop
orl
loope
hlt
popa
cmp
and
cs
mov
push
mov
mov
sbb
sbb
loopne
les
out
sahf
sub
rorb
out
push
pop
outsb
cltd
cwtl
inc
notb
push
xor
or
mov
mov
sbb
dec
push
aas
imul
pop
fs
scas
xor
std
fwait
adc
negb
loopne
xlat
xorb
loop
xor
iret
lods
pop
cmp
push
jns
fistl
pop
mov
insl
sbb
push
fisubl
mov
jmp
xchg
aaa
pop
inc
cmpsb
add
popa
sahf
outsb
push
les
movsl
mov
xor
push
xor
dec
rcl
xchg
dec
clc
xchg
jge
xor
sti
add
and
pushf
stos
adc
cmp
ljmp
add
in
mov
cmpsb
add
movsb
jno
and
adc
jg
ljmp
pop
shl
add
dec
arpl
aad
sarl
push
mov
lock
lcall
sub
ljmp
and
subb
xchg
in
test
call
ret
lret
daa
push
aas
adc
dec
push
loop
sub
iret
dec
adc
out
fsubl
call
or
insb
mov
pop
inc
pop
push
fisttpll
ret
mull
adc
roll
ja
and
push
jbe
lods
mov
push
mov
mov
inc
cld
mov
jle
jmp
inc
lods
dec
dec
inc
pop
jl
cmc
fisttps
pop
sbb
sub
cmc
andl
cmp
in
sub
lahf
cwtl
adc
fstp
iret
movsl
test
icebp
lock
lahf
mov
arpl
push
aas
loop
out
adc
adc
add
test
imul
pop
lret
outsb
outsb
mov
andb
inc
rorl
loop
xchg
pop
inc
sub
or
push
mov
clc
fidivs
xchg
push
push
outsl
in
lcall
mov
in
mov
out
andb
mov
mov
ljmp
in
sbb
push
cmp
js
mov
test
adc
xlat
jae
xor
sbb
cmc
mov
pop
add
or
and
push
xchg
add
mov
sbb
jae
nop
sub
sub
scas
hlt
and
fdivs
xor
loop
pop
jl
sbb
inc
into
xchg
push
sti
je
fmull
xor
adc
sarl
ljmp
arpl
test
outsl
call
or
adc
sub
daa
inc
movsb
jns
push
pop
les
fsubr
ljmp
ss
mov
clc
sbb
mov
addr16
addr16
pushf
out
test
mov
xchg
push
fs
out
jp
sub
jge
ret
ja
mov
jbe
xchg
adc
js
jbe
push
cwtl
in
inc
jb
lock
adc
inc
xor
pop
dec
sub
call
ja
and
push
iret
xchg
sti
mov
mov
les
or
in
or
dec
jb
or
dec
push
cmpsb
dec
dec
sub
mov
push
xorl
cmpsb
push
lods
push
cmp
push
stos
jg
or
andb
push
out
mov
test
add
test
cmpb
or
jnp
out
test
movsl
pop
push
xchg
sub
xchg
lods
stos
xor
lods
jp
jge
xchg
je
imul
movsl
fimull
xchg
jns
lret
repnz
icebp
adc
mov
or
ja
subb
xchg
sbb
cmp
mov
aas
push
jle
loop
scas
sbbb
mov
jp
in
lahf
adc
into
out
clc
sbb
and
inc
mov
jmp
mov
mov
outsb
in
ljmp
jne
add
sahf
icebp
in
icebp
jge
mov
adc
dec
jg
xchg
adc
sub
cmpb
jns
cwtl
adc
adc
pop
adc
pop
add
cmp
jne
push
das
test
jae
mov
jbe
in
rolb
das
lret
aaa
and
adc
jecxz
mov
decb
or
xor
rorb
loope
pop
stos
test
mov
inc
mov
xchg
cmpsb
fildl
in
dec
sbb
in
jp
mov
pop
mov
sbb
lds
nop
mov
imul
mov
inc
jo
mov
lcall
lret
sub
in
fabs
stc
ret
test
std
fisubrs
in
jae
mov
in
movsb
cmpsb
push
cmc
lock
xchg
pop
bound
sti
repnz
fs
xor
js
xchg
xchg
movsl
cmp
mov
xchg
ljmp
and
nop
pop
mov
les
out
shr
bound
or
and
movsl
add
xchg
xchg
dec
sub
cmpsl
dec
popl
jnp
je
jb
push
sti
lcall
inc
std
jg
addr16
add
sbb
mov
call
enter
jae
in
leave
repnz
das
sbb
jbe
ficomps
in
hlt
repz
xchg
ret
sub
sbb
mov
imul
outsl
or
or
std
mov
xchg
push
adc
inc
push
add
stos
lods
imul
pop
hlt
xchg
bound
orb
inc
aaa
xchg
movsl
loopne
lahf
jb
xchg
jb
adc
jae
adc
push
nop
mov
leave
repnz
mov
fdivrl
cmc
imul
insb
inc
imul
inc
mov
fcmovnu
and
push
fistps
ficompl
ljmp
into
add
jl
sub
ljmp
sbb
into
mov
inc
dec
cs
xchg
mov
cmp
jp
fs
in
pop
add
adc
lock
sub
lret
or
ret
jmp
insb
adc
test
scas
dec
pop
mov
pop
push
bsf
mov
or
xchg
aad
int
jb
ja
sub
pop
pop
jnp
mov
scas
pop
pop
sarl
mov
enter
jno
push
or
div
stos
dec
loop
das
popa
cmp
pop
outsl
aam
xor
fyl2x
pop
adc
fadd
mov
inc
mov
lds
jp
lret
shld
stos
mov
rol
out
jl
jmp
xchg
ja
jb
or
aad
iret
icebp
jno
cmp
fcmovne
sub
out
cmpsb
cmp
sarb
shlb
es
adc
mov
adc
or
lea
push
std
in
inc
add
fcmovnu
aas
rorb
enter
xchg
cmpsl
xor
hlt
adc
lods
ret
add
testl
adc
cmp
jnp
xor
pop
cmpsl
mov
cmpsl
mov
loop
inc
push
jmp
out
push
negl
or
movsb
imulb
in
idiv
test
fistl
cmp
aas
rcr
pop
orb
lret
mov
jmp
test
mov
sbb
scas
jmp
mov
rcl
cmp
mov
fisttps
faddl
call
das
ror
cmp
cmp
hlt
imul
shll
pop
xor
rolb
mov
out
iret
cmp
into
jp
inc
imul
dec
sarb
push
jns
fs
cmpsl
in
adc
push
pusha
shl
popf
aad
xchg
jl
mov
test
sub
les
loop
sahf
adc
sbb
jle
adc
push
inc
jno
jl
push
pushf
cmp
sub
icebp
aam
sbb
adc
sub
jnp
mov
cmpsl
fcompl
outsb
fstp
xchg
jmp
sbb
dec
pop
xchg
push
arpl
xchg
arpl
in
daa
and
xor
xchg
adc
xor
dec
stos
mov
push
repnz
mov
push
pop
les
cmp
pop
out
daa
aam
cmpsb
add
pop
xchg
push
push
cmpsb
jno
incb
fstps
inc
imull
mov
std
push
or
adcb
jnp
test
cmp
icebp
icebp
outsb
jnp
sti
xchg
lods
fldenv
inc
cmp
frstor
jbe
enter
jae
sub
jne
xlat
cmc
pop
andl
xchg
dec
insl
aas
or
fwait
fs
out
insb
jmp
lret
add
psllq
pusha
mov
lods
lock
push
cmp
pop
fstpl
es
jmp
test
adc
gs
stc
aaa
xor
and
and
push
pop
pusha
mov
jle
out
jle
or
jnp
test
push
stos
inc
pusha
pusha
hlt
enter
dec
sbb
push
inc
dec
xlat
movsl
pop
mov
mov
imul
sub
jnp
addr16
sub
movsb
aam
jge
inc
pop
shl
mov
scas
cs
mov
aam
add
pop
adc
bound
sub
imul
ret
sbb
xor
and
mov
fucomp
shlb
cmp
fadd
int
xlat
insl
mov
cwtl
cmp
dec
or
in
sub
sub
fdivrl
xchg
or
insb
jb
lahf
inc
imul
fld
std
xchg
and
std
mov
sub
les
push
loop
test
jae
fiaddl
push
sbb
or
imul
ds
mov
sbb
fnsave
sahf
xchg
lock
out
and
push
scas
sub
daa
mov
out
test
pop
xchg
test
add
dec
shl
leave
mov
aas
out
jnp
test
popf
mov
inc
movsl
sub
xor
lds
cmp
addb
sbb
imul
or
jo
and
orb
testb
mov
mov
cmp
push
out
loop
xchg
push
xchg
dec
in
cmp
mov
sbb
out
sub
adc
push
out
outsb
out
divl
mov
pop
mov
movsb
rcrb
iret
cmc
int
add
and
adc
bound
cltd
push
rcr
int
xor
dec
jl
imul
lcall
inc
pop
sub
mov
pop
int
push
push
cmp
frstor
ret
dec
mov
push
xor
test
push
call
and
ret
lods
xor
adc
iret
fsubrs
sub
imul
fs
in
sub
or
xchg
rcl
dec
sub
jg
fisttpl
sbb
in
jecxz
popl
rcrl
or
dec
stos
lret
sub
sbb
jle
jg
xchg
nop
push
fstps
add
sbb
push
cmp
xor
daa
jmp
jo
xlat
add
aaa
fdivp
mov
pop
lret
pop
lea
sbb
jge
mov
sahf
cmc
adc
push
mov
push
fisubs
and
pop
aaa
sbb
push
sub
xor
xchg
rcrl
push
leave
test
jo
lcall
xorb
dec
and
cmc
ret
inc
cmp
gs
sub
hlt
add
fldl
or
sbb
mov
mov
add
fiaddl
sti
mov
cs
xor
mov
aad
in
dec
nop
add
cmp
mov
mov
leave
sbbl
popf
mov
sahf
mov
test
divb
sahf
inc
lods
jnp
mov
adc
inc
add
jl
cld
xchg
xor
movsl
cmp
subl
cmc
lds
pushf
push
repz
mov
sub
bt
fs
or
shr
pop
ss
int
push
testb
outsl
movsl
mov
inc
fstpl
push
addl
ds
pushf
insl
inc
jne
pop
fucom
imul
mov
push
test
pushf
daa
bound
or
add
and
in
push
jno
push
jp
add
push
jb
aas
ror
leave
dec
pop
in
je
sub
inc
addr16
xchg
mov
out
and
jecxz
adc
push
sbb
data16
xor
out
scas
popf
adc
movsl
daa
pop
jp
jnp
cmp
test
or
cli
fdivrl
sbb
call
jno
testl
test
adc
or
pop
stos
das
fstl
push
or
lea
std
inc
mov
dec
les
filds
stc
ss
push
mov
cwtl
out
add
xchg
jo
pop
je
test
or
pop
or
into
and
shll
aas
js
or
movsl
nop
gs
inc
adc
cmpsl
pop
repz
daa
mov
das
mov
jge
inc
test
cld
cs
push
into
icebp
pop
sbb
inc
test
xor
inc
out
xchg
adc
ror
popf
mov
push
hlt
scas
mov
pop
repnz
or
mov
cwtl
jge
test
je
mov
int
or
pushf
mov
xchg
aad
daa
xchg
cmpsl
and
out
stc
fstpt
xchg
imul
add
mov
xchg
pushf
jb
cmc
out
pop
mov
push
lods
lock
inc
sub
clc
pop
pop
inc
jl
test
xchg
add
adc
add
pusha
sub
and
fcomip
movsl
sbbl
mov
jns
dec
inc
jmp
scas
lea
imul
call
push
out
xchg
repnz
popa
dec
scas
scas
pop
jmp
in
push
into
adc
ljmp
das
adc
enter
cld
in
jmp
add
dec
push
dec
sub
dec
loopne
dec
xlat
jne
mov
dec
clc
mov
xor
lcall
sbb
mov
lods
sarl
mov
add
mov
das
cmp
loop
test
das
lea
xlat
loope
test
clc
test
in
push
xchg
pop
insb
mov
and
mov
dec
cs
mov
or
cltd
das
cmp
and
inc
jmp
sahf
xchg
xchg
sub
xor
ja
repnz
test
test
jmp
fwait
push
adc
jno
testb
adc
jmp
cmp
xchg
jle
fbld
sbb
lcall
cmp
mov
repz
dec
lock
inc
push
nop
rorb
xor
clc
xchg
cmpsb
sbb
xlat
push
in
in
in
subb
pop
fmuls
sahf
lods
cmp
scas
imul
pop
in
xchg
cld
ds
cmp
das
sti
mov
cmc
xchg
cmpsl
dec
push
fimuls
add
sub
inc
sub
adcb
incl
push
sahf
xchg
xchg
std
cs
out
or
mov
inc
jmp
mov
inc
hlt
xor
lahf
repz
rol
cmc
pop
negb
in
loopne
jp
jl
sbbb
pusha
pop
insl
jo
add
addr16
pusha
addr16
dec
lods
mov
fdivl
or
pop
cwtl
xchg
mov
sub
xor
push
cmp
fdivrs
add
fidivs
xlat
rcrb
sub
lahf
scas
jmp
cltd
clc
fcmovnb
pop
int
cmc
loope
shll
fisubs
aaa
mov
mov
pop
mov
sub
ret
stc
add
ss
ss
call
xor
aad
fbld
mov
movsl
ret
sub
insb
std
cmp
mov
loop
rep
xchg
callw
cmp
stc
and
bound
push
push
ja
cld
jg
pop
jno
mov
or
js
cmpsl
mov
and
lcall
or
jge
test
push
jno
outsl
icebp
inc
mov
and
add
fildll
sub
fidivrs
lea
sbb
inc
hlt
mov
test
loope
ret
adc
xor
dec
outsb
push
xchg
cmpsb
mov
ss
inc
jecxz
sbb
add
ja
mov
mov
fs
iret
cltd
std
sbb
sub
sub
xor
repz
cmp
dec
jge
jmp
push
jl
push
sub
add
jg
popf
sub
ret
push
and
das
jp
outsb
or
dec
pop
mov
ret
fwait
out
cltd
jne
dec
fnstenv
jp
push
loope
jecxz
xor
jae
add
adc
test
add
outsl
or
pop
add
jge
push
sbb
daa
mov
stos
mov
dec
call
cmp
stc
vpunpckhbw
sub
sub
mov
jbe
push
jns
je
popf
sub
in
inc
jno
movsb
push
in
adcb
hlt
and
imull
xor
mov
adcb
pop
xchg
push
xchg
mov
ljmp
push
cmp
ljmp
push
mov
cmp
mov
and
mov
leave
push
pop
push
sub
out
js
xchg
fcoml
sbb
loope
xchg
mov
pop
repz
mov
push
outsb
jnp
ja
mov
gs
and
and
add
std
inc
cwtl
mov
jns
test
addr16
push
roll
scas
or
rcrb
ret
fxam
icebp
cmp
cmp
xor
test
mov
out
int
and
ss
hlt
mov
pop
jge
cvtdq2ps
inc
stos
jo
pop
pop
orb
mov
gs
push
das
dec
jo
mov
mov
clc
fwait
sbb
test
adc
les
push
cmc
shlb
dec
leave
and
loop
loop
ja
cmp
adc
pop
imul
aad
inc
adc
mov
leave
insb
pop
mov
mov
std
inc
lret
inc
js
or
or
es
nop/reserved
test
jl
mov
sub
or
mov
cmpsl
mov
sub
mov
xor
out
lahf
cwtl
adc
adc
testb
fwait
mov
shlb
inc
loopne
add
inc
enter
cld
std
mov
cmpsb
and
popf
cld
mov
jge
in
fwait
sub
mov
push
push
testb
mov
loop
jge
push
mov
lret
ret
push
cmp
popa
pop
add
out
mov
pushf
rcrl
dec
and
push
imul
clc
xchg
cwtl
je
jmp
jb
aas
test
data16
or
push
out
insl
pushf
xorl
stos
ret
pop
pop
insb
int
pop
inc
mov
xor
dec
inc
push
pop
vmaxpd
xchg
notl
sub
jnp
dec
sub
inc
mov
inc
mov
jle
test
lock
inc
cltd
mov
adc
mov
or
test
inc
fs
pushf
scas
xor
inc
push
daa
andb
pop
repz
fistpll
xorb
icebp
ficoml
or
daa
adc
xchg
jne
or
inc
and
imul
jno
pop
mov
imul
dec
cmp
or
add
arpl
push
sbb
sub
xor
pop
dec
push
test
cltd
outsl
mov
cltd
sbb
add
pusha
cltd
push
adc
cs
and
sub
roll
push
addb
add
xchg
push
and
mov
mov
fidivrl
stos
dec
jle
inc
jns
sbb
lods
repz
iret
test
ret
xor
dec
divl
loopne
rcr
xor
les
rorb
dec
inc
leave
out
mov
mov
push
ss
xchg
inc
sbbb
jp
out
mov
inc
insb
add
aad
pop
jp
dec
hlt
loopne
mov
mov
cmp
je
or
cmc
xchg
xlat
xchg
dec
mov
xor
and
add
das
jns
loope
jo
out
mov
xor
je
cmpsb
push
push
sbb
inc
cmp
loopne
mov
sub
add
insl
cmp
out
mov
adc
fnsave
cwtl
lret
movsb
mov
or
mov
pop
notl
je
push
in
or
repnz
sbb
fwait
scas
inc
imul
pop
out
inc
mov
fildl
lods
sub
dec
scas
dec
add
pusha
pop
idivl
xor
inc
jno
cmp
ss
cmc
add
pop
cmpsb
arpl
pop
rcrl
pop
je
xor
jae
icebp
pop
dec
fcmovnbe
fmuls
int3
pop
cwtl
push
xor
push
cli
push
dec
aad
aas
xchg
jno
push
aaa
and
fxch
imul
iret
je
push
stos
ret
xor
stos
inc
push
dec
dec
adc
mov
aaa
lcall
bound
mov
shll
xchg
lods
lods
in
in
les
bound
mov
out
sbb
jmp
sarb
out
inc
cltd
insb
cmp
xchg
xchg
push
je,pn
lods
fmull
xchg
shl
sbbl
pop
arpl
jl
adc
push
pop
sub
sub
leave
mov
aaa
lods
orl
cmp
adc
les
clc
xchg
outsb
pop
cltd
rcrb
popa
mov
xor
shll
sub
das
jbe
in
sbb
add
jmp
add
mov
fnstenv
mov
das
pop
dec
xchg
cwtl
jecxz
pop
xchg
insl
push
sub
fwait
sbb
loopne
sahf
mov
jnp
jns
pop
push
mov
repz
dec
dec
dec
dec
mov
xor
xchg
insl
loopne
clc
daa
sbb
inc
jecxz
fwait
add
mov
aaa
js
cld
popf
les
xor
insl
lahf
push
add
inc
into
lret
push
and
xlat
xchg
sarb
jae
fwait
cmp
pop
xor
push
sub
jnp
sahf
popa
jae
lret
cmp
test
adcl
ljmp
popf
dec
sub
subl
out
sub
pop
lds
repz
push
daa
aaa
js
gs
stos
jp
sbb
std
fnstsw
fldt
push
aas
sub
push
sub
fildll
sub
mov
mov
inc
rclb
paddusw
dec
ljmp
mov
cmp
and
daa
xlat
arpl
test
sbb
pop
mov
decl
dec
sahf
and
mov
or
pop
sahf
repz
in
fcmovnbe
fmuls
jl
xchg
cmp
or
push
dec
mov
adcl
mov
sub
push
fcomps
cltd
scas
in
jg
iret
sbb
fsts
pop
lret
inc
push
shll
add
push
test
loop
fwait
push
lea
push
push
pusha
lock
imul
ret
insl
stos
inc
sahf
jnp
bound
test
xor
cmp
shlb
pop
jl
jb
sarl
bound
out
sub
mov
inc
mov
and
imul
push
xchg
ja
dec
mov
repnz
sub
xchg
loopne
add
push
inc
push
rcrb
in
imul
xor
or
enter
scas
adc
cmp
adc
imul
cmp
adc
lahf
add
lds
aam
sub
mov
add
cs
push
xor
lret
outsl
dec
jmp
popa
call
add
lret
inc
iret
enter
dec
sbb
mov
jne
mov
imul
push
dec
inc
mov
fcomps
xor
cs
fldl
negl
mov
cmc
sbb
jns
leave
push
cli
in
pop
inc
or
sti
sarl
ja
sbb
sbb
popa
ds
icebp
mov
js
pop
test
mov
lret
push
and
mov
incl
mov
fs
cmp
dec
inc
cmpsl
rorl
xor
dec
repnz
jge
stos
mov
fwait
xchg
ret
and
loop
mov
outsl
cwtl
cmp
movsb
inc
ficompl
mov
jp
mov
add
fsubs
outsb
dec
nop
or
pop
cmpsb
inc
sbb
and
mov
js
out
enter
mov
or
or
cmp
call
shrb
in
icebp
sub
in
sahf
jg
imul
cmp
push
aaa
arpl
adc
xchg
push
imul
mov
push
aam
add
lods
out
mov
push
or
imul
in
sahf
inc
nop
xchg
mov
xchg
or
out
sub
sub
mov
or
xor
outsl
inc
jns
pop
or
test
mov
push
jl
pushf
sqrtps
pop
cmpsb
cs
cmp
and
push
test
stos
sbb
sti
mov
pushf
pop
repnz
dec
leave
inc
xchg
dec
leave
imul
pop
xchg
xor
addr16
jno
arpl
ss
adc
or
mov
mov
cmpsb
pop
mov
daa
mov
js
roll
jmp
and
dec
cmp
jb
adc
pop
or
imull
xor
fisttpl
adc
ljmp
mov
push
inc
sbb
lahf
out
out
sti
push
lods
jecxz
ret
inc
lcall
mov
ret
in
fistpl
outsb
mov
mov
push
mov
test
inc
mov
xor
adc
pop
inc
jge
jl
lret
pop
arpl
std
cmpsl
aaa
dec
loope
ret
pop
out
mov
mov
arpl
sbb
xchg
push
lret
and
xchg
pop
lods
sub
inc
arpl
xchg
test
or
repz
loope
adc
xchg
jg
push
int3
loopne
iret
leave
rcrl
jae
add
insb
imul
test
into
push
dec
pusha
dec
jp
aas
adc
stos
sbb
xchg
add
in
in
pop
shrl
decb
out
mov
ret
daa
dec
xchg
sub
repz
pop
pop
stos
sbb
inc
xchg
lret
adc
mov
add
int
xlat
xchg
jmp
xchg
jg
in
xor
sub
inc
dec
negb
cmp
popa
cs
repnz
popa
jg
mov
imulb
insl
lods
inc
out
push
popa
mov
xor
mov
push
or
lret
and
paddsb
lahf
adc
add
insb
sub
xchg
adc
xor
cmp
ljmp
push
dec
inc
shll
dec
jns
mov
cmp
pop
sub
int3
es
sub
aaa
faddl
in
test
out
das
sbb
jno
push
daa
mov
pop
insb
mov
sti
and
std
jne
test
loop
pop
push
inc
dec
cmp
fstl
mov
in
pushf
ja
les
and
sub
inc
mov
loopne
dec
lods
cmp
xor
jnp
adc
rcrb
popf
ret
sti
cmpsb
fdivl
mov
push
cmpsb
xchg
jno
arpl
and
dec
and
andb
mov
aad
adc
loop
mov
sbb
fcmovnu
test
mov
mov
insb
stos
hlt
aaa
xor
cmp
and
fnstsw
mov
cmc
adc
orb
or
jle
sti
add
inc
popa
mov
sbb
pop
fidivl
adc
je
imul
scas
and
cmc
cmp
out
mov
pop
sub
push
inc
xchg
sahf
sbb
fsts
and
mov
int
sti
pop
cmp
push
push
xchg
movsb
mov
jmp
sbb
jl
loope
mov
loopne
cmp
pop
or
stos
mov
js
adc
mov
dec
ds
xor
cmp
stos
push
movsl
push
push
movsl
cmc
jge
out
lahf
pushf
mov
mov
lea
sbb
mov
jge
addr16
adc
rclb
xchg
paddw
mov
ret
test
ds
push
jmp
mov
jg
push
test
cli
stos
jp
xor
js
unpcklps
mov
push
lods
xor
and
push
in
iret
addr16
or
mov
dec
cmp
mov
aam
pop
std
add
push
cmpl
fstps
nop
cmpsb
shll
ljmp
ret
mov
nop
fwait
push
ss
arpl
mov
dec
jo
jp
scas
fsts
cmpsb
in
lret
cmp
test
xchg
aas
jp
dec
xor
sbb
jno
add
jmp
xchg
enter
xorb
pop
dec
jns
jb
outsb
mov
fcmovb
jecxz
adc
loop
out
sbb
xor
mov
pop
sub
fcompl
outsl
sbb
aas
xchg
shrb
std
imul
ficoml
push
iret
jg
imul
adc
or
sbb
add
mov
cmp
addr16
ja
push
pop
test
sahf
and
add
xor
call
mov
lret
in
xor
fmulp
pusha
pop
insb
xor
or
lret
add
add
mov
add
mov
repz
das
or
jns
cmp
adc
xor
enter
into
xchg
popf
inc
mov
ds
xor
fildl
pop
mov
dec
iret
fwait
in
pop
out
sub
jg
call
or
sbb
divb
sub
in
cmp
push
mov
arpl
pusha
push
fst
push
mov
dec
outsl
insb
lcall
je
adc
out
pop
mov
pop
xor
sbb
xor
mov
mov
mov
sahf
jle
inc
and
fs
push
loopne
rcrb
lcall
js
and
inc
mov
mov
jge
mov
test
mov
ficompl
sbb
dec
add
scas
xchg
in
add
popl
repnz
loope
repnz
sub
jns
aam
mov
test
in
or
xor
xchg
enter
mov
mov
sbb
scas
mov
mov
popf
xchg
stos
icebp
cmpsl
xchg
adc
cltd
jl
int
cmp
xchg
bound
mov
adc
imul
inc
mov
lds
fdivp
movsl
mov
pushf
test
pop
pusha
shll
ds
jge
pusha
shrl
imul
inc
push
push
ffree
test
out
in
push
jmp
mov
xor
xchg
movb
pusha
mov
fsts
push
int3
outsl
cmp
or
add
mov
data16
out
pop
sub
jle
mov
or
mov
cld
and
jnp
int3
ja
mov
out
in
divb
call
mov
pop
inc
imul
repnz
iret
testl
test
pop
fimuls
xor
sti
mov
data16
aam
jmp
popa
lods
enter
sbb
data16
and
cli
mov
mov
push
inc
pop
sbb
dec
nop
adcb
push
pop
sub
and
test
in
rorl
les
xchg
inc
popf
aas
clc
adcb
inc
divb
inc
inc
mov
rclb
mov
push
scas
mov
outsl
les
pusha
push
xlat
das
mov
mov
jnp
int
shrb
rorl
test
hlt
push
mov
inc
outsl
cltd
xchg
or
add
dec
notl
imul
mov
aad
mov
mov
xorb
and
and
ds
test
mov
nop
sub
jb
lods
mov
inc
out
push
jbe
jns
xor
int
clc
sub
lods
sub
and
sub
cltd
inc
xadd
mov
mov
add
cld
scas
pop
mov
sub
rol
pop
or
ljmp
mov
xlat
popf
jo
orb
addr16
gs
adc
inc
rclb
sbb
imul
jb
fmul
movsb
repz
mov
fnstsw
cld
and
sti
mov
mov
add
pop
outsl
inc
add
roll
xor
out
mov
jbe
or
pop
negb
add
scas
lcall
mov
xchg
cmp
sbb
push
and
mov
jnp
popf
mov
movntq
out
outsl
test
in
adc
cmp
mov
imul
mov
ljmp
mov
outsl
loope
sbb
pop
mov
mov
xchg
fdivrl
nop
cmpsb
sub
adc
inc
jle
fisttpll
push
xchg
mov
add
jne
xlat
mov
aam
dec
mov
divb
cmp
dec
xor
mov
repnz
int
pop
sub
nop
lea
sarl
stos
sub
jae
cli
stos
pop
call
push
and
daa
out
push
sbb
xchg
xor
rorl
dec
sub
popa
rclb
movsl
stos
lods
push
icebp
push
ja
inc
push
fcomp
imul
mov
clc
and
push
push
dec
inc
push
push
fsubl
in
pop
jns
push
scas
ret
orb
sub
inc
rorb
inc
jb
icebp
test
sahf
jae
daa
scas
pop
ret
cmp
inc
shr
xor
enter
sbb
lret
roll
arpl
into
push
and
aam
aaa
fisttps
mov
lock
or
or
push
xchg
iret
popa
xor
mov
jno
cmpsl
push
dec
cmp
and
and
cli
roll
or
lahf
push
mov
mov
mov
xlat
push
fdivr
int
cmp
push
scas
jl
test
les
inc
js
inc
jns
enter
lods
add
add
in
mov
nop
fmulp
lret
add
adc
jne
dec
mulb
mov
fcoms
lret
in
xor
sub
sub
in
push
sub
std
repnz
add
jbe
aaa
xchg
adc
sbb
fbld
iret
jmp
mov
mov
out
mov
push
mov
inc
sbb
aas
movsl
xor
in
cld
arpl
int
popa
adc
jae
imul
jae
and
out
loope
inc
mov
outsl
push
incb
push
sbb
mov
ljmp
bound
add
mov
xor
cwtl
mov
dec
stos
dec
ja
shrb
pop
and
iret
stc
into
loopne
imul
call
ds
mov
adc
adc
test
inc
dec
lahf
rcl
and
out
mov
or
jb
loopne
fwait
pop
cmp
sub
mov
scas
lcall
xchg
mov
mov
loopne
pop
cmp
pop
and
stc
test
fs
pop
es
scas
or
jo
mov
lea
imul
inc
test
bnd
inc
mov
mov
jbe
and
lret
inc
sbb
pusha
add
cmp
lea
inc
mov
push
les
inc
jno
pop
icebp
stos
and
subl
cmp
jp
xchg
pop
lret
jnp
sub
inc
or
aad
out
lds
add
dec
inc
pop
das
int3
test
mov
xchg
pop
shrl
mov
shrl
cmp
sub
mov
ja
cmp
cmpsl
divl
dec
pop
aaa
rep
inc
xor
jb
les
xchg
sub
jno
jecxz
xchg
notb
rclb
push
cltd
xor
pusha
cmp
mov
cmc
cmp
bound
lea
or
mov
and
push
cmp
enter
fdiv
call
lods
and
loop
lods
int
dec
mov
adc
xchg
sbb
jecxz
out
iret
sti
scas
xchg
add
lock
cmp
mov
adc
inc
icebp
shlb
cmp
push
lea
mov
lret
clc
int
int3
mull
je
push
aaa
cmp
mov
sub
in
mov
lcall
outsb
out
ficomps
cmc
or
je
mov
dec
ret
adc
or
std
mov
in
xchg
cmp
in
cwtl
fwait
mov
and
pop
sbb
pushl
aad
lock
mov
test
push
outsb
in
jl
mov
leave
xor
stos
push
cmc
clc
push
jo
push
cmc
loopne
xor
leave
sbb
or
sbb
or
mov
cwtl
imul
ljmp
push
scas
repz
into
mov
jnp
or
movsb
sti
fadds
mov
cmove
inc
loope
mov
mov
popf
fisttpl
pop
call
mov
ror
inc
sbbl
push
fdivrs
in
dec
jmp
cld
add
dec
add
jmp
mov
hlt
xchg
cwtl
inc
xor
shll
lret
subl
inc
outsb
xor
test
mov
mov
rcrl
sbb
adc
into
cs
cmpsl
lret
adc
icebp
cmp
mov
fiadds
insl
inc
push
negl
mov
insl
mov
cmc
sbb
inc
pop
push
outsb
sub
xchg
push
xchg
frstor
and
push
sti
jmp
mov
jns
add
stc
rcll
push
inc
cs
add
pop
inc
jo
and
lret
mov
push
into
pop
dec
rcrb
lea
aad
inc
jnp
pop
mov
and
leave
xchg
std
mov
xchg
scas
mov
cs
andl
jne
mov
and
xchg
mov
mov
push
lods
xchg
cltd
das
dec
adc
mov
jl
mov
in
jno
sub
push
fs
mov
aam
xor
cmp
jg
dec
insl
fs
ret
rcrl
icebp
sbb
or
negb
jo
andb
fbld
test
ret
pop
aaa
or
pop
mov
push
mov
xor
fisttpl
sbb
mov
daa
fsubrl
push
hlt
cs
cmp
or
dec
dec
stc
mov
shll
dec
rep
stos
lods
sbb
sub
cmp
shlb
cs
add
xor
addr16
push
inc
xchg
pop
mov
ret
dec
or
addr16
cmpsl
push
pop
sub
push
or
cmp
push
xchg
mov
mov
xchg
cmp
cs
inc
iret
dec
sub
shll
mov
shrb
or
or
xor
xor
in
aas
sbb
push
push
stos
cmp
sbb
movsl
decb
dec
xchg
jbe
mov
sar
and
icebp
or
mov
push
push
hlt
rcrb
test
jle
jo
fisubrs
mulb
mov
push
gs
les
dec
arpl
cmp
lcall
xor
test
sbb
mov
loop
push
mov
mov
jnp
bound
mov
pop
fwait
jge
int
inc
imul
orb
cmp
inc
add
sahf
push
lds
rclb
add
scas
mov
push
or
subl
mov
jae
inc
adc
je
cmp
mov
nop
push
movsl
adc
pop
mov
lret
pop
mov
adc
add
or
test
ljmp
cli
lods
mov
and
mov
popl
outsl
divl
out
scas
cltd
test
xor
ja
mov
mov
aaa
jnp
jnp
sub
not
lock
sub
sbb
xchg
add
jge
push
lea
outsb
mov
lods
xchg
sbb
add
out
sub
loope
sbb
adc
push
pop
push
cwtl
push
es
int3
lret
fsts
xor
adc
inc
lods
pop
scas
fwait
popa
jne,pn
cmc
notl
mov
pushf
mov
addr16
jle
push
lahf
mov
gs
in
pop
pop
push
movsb
pop
pop
scas
mov
imul
scas
jnp
dec
ja
mul
jno
ljmp
dec
cli
jp
clc
sti
cmp
scas
mov
pop
xor
mov
xor
lea
lea
or
add
int
jle
pop
xchg
test
pop
sete
icebp
clc
repz
jbe
mov
sbb
adc
jl
test
inc
fwait
leave
inc
adc
imul
outsb
jecxz
cld
or
or
ror
pushf
pop
add
mov
add
gs
mov
ret
icebp
xor
mov
and
stos
pop
mov
popf
jno
cmp
cmp
dec
add
scas
jmp
dec
and
xor
popa
jns
push
mov
pop
jp
mov
in
lea
sbb
or
or
mov
out
cmp
aam
mov
xchg
mov
jecxz
mov
mov
pop
jge
in
cmp
test
test
fsubrs
pop
loopne
outsl
orl
and
mov
loop
cmp
jns
je
add
jmp
inc
pushf
add
lods
lods
fwait
das
mov
push
mov
mov
testb
jge
xchg
xor
lds
dec
dec
jne
cs
add
fisttpl
push
inc
adc
dec
push
jnp
fisubl
aaa
sbb
jle
fcmovb
cwtl
fmulp
inc
adc
out
insl
fdivrl
scas
cmp
and
jno
push
clc
loop,pn
icebp
int3
mov
icebp
mov
xchg
movsl
mov
adc
add
inc
xor
push
pushf
push
shrl
ror
sbb
arpl
push
ret
or
pop
sub
sub
mov
test
aaa
ljmp
test
sub
outsl
push
and
notb
ljmp
cmpsb
push
add
mov
ja
jae
sahf
sbb
push
leave
cmp
push
sub
cmp
movsl
daa
out
jle
dec
jno
xor
add
iret
xchg
outsl
fiaddl
stos
loop
data16
mov
or
lret
or
push
pop
rolb
addb
out
mov
movsl
adc
adc
cltd
fistl
adc
push
adc
ret
cmp
xchg
mov
sub
add
sub
jbe
push
out
sbb
dec
mov
loop
cmpsb
jmp
add
inc
cmp
call
sub
xchg
mov
dec
mov
out
jp
add
aaa
mov
imul
adc
inc
les
dec
stos
std
subb
mov
fstpl
adc
mov
push
dec
int3
std
lcall
xchg
add
sbb
iret
mov
mov
cld
adc
jo
bound
add
gs
cmp
inc
repz
imul
mov
bnd
push
cld
imul
sbb
cmp
or
mov
sbb
jp
js
cmc
adc
dec
jnp
scas
mov
ficoml
pop
push
aas
fldz
sbb
pop
icebp
jp
inc
jo
cli
cmp
and
cmpsb
pinsrw
sub
int3
pop
push
aaa
ret
cs
pusha
cmp
push
loope
push
lahf
and
pushf
xor
cli
sbb
push
ss
dec
aam
dec
inc
pop
ds
test
popl
ljmp
inc
dec
pop
push
mov
jmp
shll
fxch
adc
lret
push
mov
mov
xor
pop
pop
push
popf
pop
jno
and
aam
pushf
pop
bound
test
pushf
or
jecxz
push
mov
sub
pushl
loope
and
sub
cmpsl
in
rcrl
sbb
push
in
inc
insb
cmpsl
into
std
lret
leave
cmp
pop
pop
xchg
adc
adc
jge
sub
pop
ficoms
lock
mov
ss
adc
xchg
jnp
aad
pop
int3
and
insl
jmp
bswap
adc
in
fisubl
dec
push
pop
xor
push
mov
bound
popa
addb
shrb
test
sbb
mov
in
into
dec
and
add
fwait
and
fcmovnu
add
fcomps
dec
sbb
in
mov
fwait
jb
fiaddl
shlb
or
mov
ljmp
clc
dec
cmp
or
pop
dec
mov
xchg
push
pop
addr16
dec
fdiv
hlt
movsl
pop
and
xlat
pop
adc
lods
pop
gs
sbb
xchg
lds
lods
jbe
mov
mov
out
insl
dec
mov
cmpsb
enter
rorb
clc
stos
xorl
jno
pusha
cmc
push
enter
xchg
jge
xchg
dec
mov
inc
mov
insb
adc
loope
pop
subl
shll
movsb
int3
push
jo
xchg
cmp
mov
xor
testb
cmpsb
adc
les
aas
imul
dec
xor
cmp
sti
add
mov
popa
mov
loope
pop
mov
cmpsb
inc
iret
pop
mov
loopne
in
rep
stos
cs
inc
dec
mov
and
test
add
mov
mov
nop
test
jbe
xchg
mov
pop
imul
or
dec
jg
mov
dec
mov
cmp
or
push
scas
lret
inc
mov
cld
jnp
iret
inc
pop
pop
inc
mov
js
mov
jmp
les
fimull
das
dec
es
out
mov
fscale
and
or
mov
mov
xchg
jnp
stc
test
mov
xchg
cld
fldt
lcall
mov
out
andl
lods
jo
test
ja
je
rolb
pushf
xor
dec
inc
loope
int
scas
lock
mov
hlt
out
xchg
stos
popf
push
in
and
cmp
int
clc
nop
out
xlat
rorb
mov
inc
jae
adc
negl
and
ret
push
and
push
push
sbb
out
movsb
mov
je
int3
mov
lods
adcl
pop
lret
clc
out
xchg
xchg
xor
inc
int3
cmpsb
popf
adc
jecxz
xor
push
and
icebp
cmp
and
out
inc
lods
arpl
or
sbb
mov
xchg
adc
cmp
and
sbb
rcrb
repnz
stos
pop
ljmp
lds
jo
jnp
pop
out
insl
fwait
and
cltd
push
shll
popa
dec
jns
jp
fsubs
push
and
lods
sub
push
mov
imul
mov
cmp
fs
cmp
fldt
das
inc
mov
xchg
push
popf
test
out
fnstsw
mov
pop
leave
or
aaa
push
dec
mov
gs
roll
sbb
cmp
fwait
push
imul
mov
inc
dec
sub
cmc
mov
dec
fucom
xlat
inc
divl
in
sbb
out
testl
addl
out
repnz
cld
out
cmpsb
pop
aaa
and
jmp
lock
adc
push
mov
inc
sub
ja
fildll
cltd
cli
cmp
xchg
dec
xchg
push
mov
shrl
sub
sbb
sub
mov
and
lret
daa
add
adc
fsubr
mov
cld
and
adc
out
mov
push
bnd
push
aas
mov
push
xchg
inc
rcrl
scas
xchg
pop
mov
out
outsb
lret
arpl
ret
mov
mov
sbb
out
pop
ret
loopne
adc
loopne
jb
push
cltd
mov
adc
mov
cmc
xchg
inc
xchg
out
mov
xchg
mov
xchg
jbe
iret
mov
std
int
int
mov
stc
cmpsl
pop
xchg
mov
pop
fisubl
jb
ret
iret
fsts
lods
das
xlat
xchg
xor
mov
jnp
or
cli
into
lea
loop
fidivrs
test
mov
fs
or
mov
adc
push
movsl
inc
pop
out
sub
or
jae
sub
rcr
aad
inc
jbe
mov
cmp
xor
mov
popa
jnp
clc
inc
jecxz
test
loope
sbb
cmpsl
push
xor
sti
xchg
jle
ds
sub
or
stos
out
in
fwait
mov
and
out
jl
lock
loop
sti
fsubrl
mulb
xchg
push
hlt
in
fstpt
out
loop
sar
pop
outsb
adc
lock
cld
gs
addr16
adc
pxor
inc
xchg
inc
insl
pop
mov
inc
imul
xor
pop
popf
and
in
push
and
or
or
mov
xor
xchg
cmp
xchg
jmp
pusha
lds
jge
mov
inc
loop
cmp
or
ds
cmp
fwait
sbb
out
jl
loop
out
mov
adc
mov
sbb
in
clc
fs
hlt
cltd
lahf
mov
pop
cmp
xchg
popf
dec
das
ret
stos
adc
ja
xor
pop
imul
lods
inc
inc
cmpsl
inc
hlt
lock
push
stc
insl
jge
in
cmp
cld
pop
leave
adc
in
data16
sti
in
ds
sahf
repz
repz
fwait
jle
mov
outsl
enter
sbb
jl
push
sub
scas
xchg
dec
mov
xor
in
and
cmpb
mov
test
mov
cmpsl
add
scas
test
call
dec
js
cwtl
testl
dec
ds
aad
add
shlb
mov
cwtl
mov
pop
mov
adc
outsb
jnp
rolb
movsb
adc
dec
clc
sbbl
inc
lcall
pop
es
add
mov
fdivr
cltd
lods
jecxz
mov
mov
imul
pop
rorb
adc
mov
adc
sub
xor
js
cwtl
sar
clc
add
push
mov
movsl
sbb
pushf
cltd
lret
adc
pop
fisttpl
and
jp
aad
rorl
cltd
pop
hlt
fptan
add
rclb
cs
cli
jmp
div
or
movsl
jae
imul
call
js
dec
push
jb
add
inc
mov
mov
jne
jb
pop
jnp
cmpsl
pusha
xchg
sti
xchg
f2xm1
inc
jnp
pop
stc
jae
scas
add
cli
fsubrl
dec
and
lea
rcrl
or
in
aam
test
outsb
push
sub
test
inc
mov
adc
add
add
insb
lcall
popa
add
jg
test
cltd
mov
js
adc
cmp
out
jb
inc
jo
enter
lds
or
aad
test
ret
popf
test
imul
jne
adc
pop
adc
adc
fsubrp
push
out
fistpl
enter
adc
push
popf
dec
cmpsl
sub
lret
aas
loope
mov
mov
mov
sbb
sub
movsl
mov
in
pop
sbbl
mov
adc
shrl
out
cmp
enter
mov
dec
fisubrs
xchg
mov
sbb
insl
jge
add
xchg
push
push
cmpsb
mov
add
xchg
fcompl
add
mov
decb
pop
or
push
jno
xchg
dec
jp
mov
inc
incl
aad
fsts
cmpsb
lods
arpl
movsl
xlat
arpl
or
xchg
shlb
movsl
cmc
inc
pop
and
jne
jns
outsl
xchg
inc
and
fcmovnbe
push
push
jo
jecxz
xor
and
xchg
leave
rcrb
lods
xchg
xor
lret
ljmp
push
pop
pop
sub
mov
fsubrl
dec
jmp
sub
fnsave
push
sahf
and
pop
adc
pushf
test
cmp
jne
mov
es
add
lods
xor
in
roll
jae
pop
imull
cmp
push
mov
or
pop
mov
bound
shrb
neg
test
jge
imul
out
lock
imul
test
out
movsb
jno
fwait
lcall
adcb
pop
cli
adc
xchg
das
xchg
mov
in
fnstcw
pop
cmp
mov
popl
jle
cmc
je
sbb
mov
push
lea
push
lahf
das
mov
and
hlt
es
sbb
mov
inc
push
jg
mov
mov
mov
icebp
leave
sarb
and
cmp
fbstp
in
daa
movhps
call
flds
lcall
arpl
dec
fmul
das
dec
mov
or
jmp
and
sub
int
sbb
sahf
mov
adcb
ss
and
and
shlb
loop
add
push
fstl
push
scas
aaa
inc
repz
dec
or
pop
pusha
dec
sub
sub
insb
adc
mov
adc
dec
xlat
cmp
mov
adc
cmp
xorb
cld
mov
pop
xlat
rclb
xchg
xchg
add
iret
int
shl
xchg
xchg
mov
pop
in
pop
testl
icebp
enter
jae
popa
clc
fsubrp
data16
add
jl
outsl
mov
dec
clc
dec
add
lahf
lret
call
xchg
jl
rep
or
rorl
out
scas
call
add
or
daa
cmc
in
jle
gs
sub
fucom
or
jecxz
mov
movsl
push
xor
stc
dec
sub
stos
push
mov
sahf
mov
sbb
add
xor
jnp
xchg
bound
add
xor
add
push
sub
sub
leave
shrl
push
ret
or
leave
or
dec
dec
inc
scas
aad
push
pop
imul
ds
fildll
int3
inc
ss
ds
jns
or
mov
dec
outsl
in
xor
mov
iret
jecxz
cli
jl
sti
xchg
mov
loopne
xchg
std
shll
push
js
push
mov
push
insb
insb
lods
and
out
insl
jle
and
jne
or
movsb
mov
shlb
mov
inc
cmp
adc
mov
add
inc
les
xor
jge
adc
lcall
xchg
mov
lahf
ljmpw
imul
lret
mov
sub
andl
ds
jns
lods
lahf
ret
mov
andl
mov
inc
cmp
mov
int3
cmpsb
dec
jecxz
fsubrs
xor
adcb
es
mov
sub
inc
js
sti
stos
push
ss
mov
shl
mov
push
nop
dec
mov
cwtl
sub
scas
lock
dec
jge
push
inc
cmp
add
push
hlt
and
ja
sahf
inc
movsl
pushf
mov
dec
lret
call
nop
mov
mov
adc
call
dec
and
lock
inc
mov
out
fwait
jmp
pop
sbb
mov
lods
inc
xchg
popa
add
xchg
int3
pop
and
mov
or
mov
test
movsb
or
xchg
jmp
ror
or
cmp
insl
idivb
xchg
sub
dec
cltd
jno
push
shlb
cmp
aaa
jg
inc
fs
adc
cs
sub
test
mov
cmpsb
ret
jmp
pop
imul
adc
pop
or
xchg
xor
test
or
lods
xor
jle
repnz
pop
mov
mov
mov
shll
into
or
test
andl
sub
es
outsl
jmp
loopne
bound
jecxz
mov
jg
inc
add
cs
fisttpl
jecxz
pop
add
dec
call
ret
je
and
fisubrs
popf
mov
cmpsl
es
add
mov
sub
jp
pushf
test
sahf
or
push
jp
push
rorl
sbb
loop
sbbb
mov
push
mov
jmp
push
jnp
lret
jp
push
ss
xor
dec
aaa
mov
jge
in
shlb
fists
sti
or
lods
jmp
out
sbb
add
clc
pop
leave
sub
aad
fists
lods
shrb
xchg
scas
jl
xchg
cmpl
bound
jb
push
lock
js
add
leave
dec
adc
xchg
sbb
repz
adc
pop
aad
aas
out
les
pop
in
and
pop
loope
sub
ljmp
insl
xchg
scas
pop
dec
add
in
insb
sbb
add
scas
test
sbb
adc
mov
insb
ret
adc
dec
int3
out
push
adc
dec
and
sub
push
mov
out
sbb
and
pop
mov
xchg
jbe
xchg
pop
push
push
sbbb
scas
out
cmp
adc
incl
sub
inc
push
adc
jo
sbb
icebp
sub
incb
inc
popf
dec
out
int3
sub
or
inc
pop
adc
mov
mov
mov
mov
jbe
add
jno
adc
faddl
out
or
inc
adcb
leave
aam
mov
je
data16
test
and
repnz
pop
jg
stos
xchg
out
and
mov
push
nop
lock
lret
jns
dec
dec
stos
out
scas
pop
cmp
sarl
loopne
cld
jmp
js
xchg
add
arpl
pop
pop
in
fucomi
mov
sub
scas
in
pop
repnz
push
in
fmuls
pop
mov
add
jg
cwtl
xor
lods
cmp
pop
ds
sti
cld
jno
fidivs
pop
pop
inc
notl
jno
popa
mov
mov
mov
xchg
test
rep
xor
dec
out
lcall
sbb
adc
sarl
stos
lcall
ss
xchg
inc
arpl
cmp
rcl
jmp
nop
add
sbb
in
dec
scas
loopne
es
or
pop
jo
push
sub
imul
shrb
xchg
mov
cmp
add
jbe
rorl
sub
cmp
and
mov
sbb
adc
sbb
outsl
rclb
jle
fcoml
mov
sti
das
stos
fsubl
test
mov
pop
xchg
xchg
lcall
arpl
dec
push
cmp
sahf
repnz
lcall
push
fimuls
cmc
ds
fadds
insl
mov
adc
pop
xchg
shll
ss
push
sub
test
xor
mov
adc
pop
lahf
lret
inc
cs
fisttps
push
mov
in
sbb
mov
js
ret
lock
daa
cwtl
fnsave
shr
and
enter
call
clc
stc
xor
lea
pop
clc
sub
cwtl
movq
pop
add
jns
loope
gs
fistpll
lret
cmp
ret
stos
cmp
mov
testb
les
movsb
sub
cmc
push
mov
push
ret
jp
pop
xlat
mov
jg
clc
dec
pop
outsl
and
push
lret
mov
mov
aam
cmp
clc
or
aas
fdivs
mov
mov
pop
pop
or
bound
inc
and
add
mov
jg
push
push
sub
ja
push
mov
xor
xor
mov
jl
pushw
mov
stc
lods
in
out
sbb
ljmp
ss
insb
fxch
mov
cli
sbb
clc
leave
stos
mov
xor
add
or
dec
rorl
and
mov
lock
es
scas
sub
adc
sti
mov
add
xorb
mov
outsb
mov
scas
in
out
add
scas
jns
hlt
pushf
es
mov
test
cmp
std
push
jo
out
mov
stc
fidivl
aaa
incw
mov
mov
movsl
sub
hlt
arpl
cmpsb
lock
in
je
cmpsb
hlt
push
jnp
and
xor
sub
or
add
sbbb
sahf
xchg
int
cmp
push
fdivr
sti
insb
sbb
mov
mov
cld
movsb
cmp
mov
inc
add
mov
mov
mov
repnz
fstpl
jbe
int
lcall
lahf
shll
add
lock
mov
lock
lea
mov
sahf
in
sub
mov
int
test
jae
push
inc
xchg
rolb
scas
jns
adc
nop
cmc
xor
call
mov
sahf
mov
jne
inc
nop
test
xchg
clc
jle
stos
or
lods
nop
jecxz
or
std
dec
fsubrs
lods
and
aam
inc
inc
je
push
mov
or
loop
mov
fcoml
jne
mov
mov
jge
or
sub
pop
cmp
ljmp
dec
gs
adc
notb
aas
mov
or
in
xchg
push
fists
repnz
sbb
jle
adc
arpl
insl
popf
sbb
orb
addr16
xor
and
cmp
or
int
negb
loopne
daa
mov
xlat
das
leave
xchg
push
pop
ljmp
push
and
mov
mov
mov
hlt
jp
push
popf
stos
push
inc
inc
in
int3
dec
pop
ljmp
aaa
pusha
pop
in
lods
in
cmp
arpl
sbb
stc
add
addr16
mov
shrl
cmp
repz
leave
xchg
xchg
cld
pushf
adc
fs
pop
rorb
iret
out
les
dec
aas
jmp
xchg
jno
jnp
sbb
pop
ja
add
jp
and
cmp
iret
ficoms
xchg
pop
xchg
ljmp
inc
or
cmp
mov
js
add
add
mov
outsl
leave
frstor
pop
stos
push
pop
dec
decb
popa
and
shlb
inc
enter
out
cmp
push
rolb
sbb
push
rorl
sbb
sub
addb
dec
stos
clc
push
mov
and
outsl
int3
push
daa
das
pop
cld
in
je
adc
notb
lahf
jge
bound
push
stos
imul
cwtl
stc
mov
divl
mov
andb
fists
inc
cld
out
std
nop
ret
cld
call
xchg
pop
cmp
push
and
movsb
xor
inc
or
sub
xchg
repz
inc
in
pop
cmp
push
and
pushf
xor
adc
pop
sbb
testb
in
jnp
cmp
in
push
repnz
lods
cmpsl
shlb
pop
push
mov
mov
inc
daa
loop
into
outsb
fs
dec
and
les
sbbl
pop
js
mov
and
in
cwtl
repz
aam
test
je
pop
or
gs
idivl
mov
pop
xor
inc
notb
rdmsr
xchg
cld
or
jno
lock
push
mov
adc
sub
arpl
repnz
loope
inc
pop
andb
and
pop
imul
scas
rorl
loop
xorb
adc
sbb
shll
cmp
xchg
pop
cmpsb
jae
add
mov
adc
cmp
adc
jmp
adc
xor
ret
mov
adc
ror
shlb
outsb
pop
sbb
aaa
mov
rorl
loope
sub
pop
inc
jg
popf
pop
xlat
add
mov
rolb
xor
pop
and
cli
roll
jl
inc
xor
xchg
jb
cmp
xchg
xor
pop
push
push
imul
add
push
ficoms
adcb
stos
clc
or
test
pop
sbb
frstor
andl
or
and
fsubr
jb
xchg
roll
push
mov
sbb
jmp
je
mov
inc
das
lds
or
dec
jno,pt
pop
xchg
sahf
in
fimuls
arpl
stos
xor
inc
or
shll
adcl
subl
punpckhwd
sarl
dec
movsl
and
xchg
mov
repz
push
lret
adc
cmp
loop
icebp
lock
pushf
jo
jne
fbld
mov
pop
das
inc
dec
ss
aad
test
cwtl
test
mov
mov
xchg
sub
hlt
dec
rolb
sbb
pusha
bound
sub
mov
iret
adc
adc
sub
push
add
push
int
clc
and
mov
pop
imul
mov
dec
mov
pusha
ret
popa
pushf
fsubl
inc
push
pop
call
sahf
cmp
add
sub
rorb
jg
mov
dec
jp
inc
arpl
scas
mov
aad
sar
pop
mov
mov
add
push
sahf
and
xchg
pop
and
rorb
cmp
push
mov
jne
jl
pusha
arpl
aam
jge
xor
icebp
jmp
adc
lea
mov
xorb
push
pop
test
dec
sti
lcall
mov
dec
push
xor
xchg
lea
xchg
pop
jb
mov
bound
pop
popf
aam
cli
lcall
inc
dec
lahf
mov
xor
roll
ljmp
dec
mov
push
bound
mov
das
andl
cltd
xorb
rcll
pop
repz
mov
or
cmpsb
adc
and
cmp
sbb
cs
imul
pusha
mov
jl
iret
xorl
pop
cmp
add
adc
test
movsl
std
scas
lret
fiadds
sub
stos
dec
xor
outsl
sbb
lock
xchg
jecxz
push
xchg
outsb
jmp
stos
aad
push
jmp
jno
push
insl
push
nop
jge,pn
sub
repz
add
in
or
shlb
ret
loope
push
inc
dec
test
std
or
shl
enter
jae
outsb
jp
sar
mov
and
xor
sbb
repnz
mov
cmp
xchg
bound
or
ljmp
jle
jns
in
mov
dec
jns
fstps
neg
data16
pop
outsb
mov
enter
mov
icebp
jle
icebp
adc
pop
fiaddl
sbb
scas
pusha
sbb
test
es
je
cmp
aas
and
ss
xchg
sub
jle
adc
test
iret
dec
cwtl
insb
mov
push
loop
pop
and
adc
inc
cmp
push
mov
sbb
in
cli
dec
sub
push
pop
cmp
cmp
aas
lock
aam
cmp
push
ja
and
mov
or
cmp
add
push
cmp
adc
pop
mov
pop
sub
pop
mov
pop
pop
fnstenv
hlt
mov
insb
mov
push
xor
cmp
repz
xchg
push
inc
ljmp
jg
lods
out
mov
nop
nop
pop
ret
inc
shll
loopne
popl
jmp
fidivs
shrb
push
dec
inc
lods
dec
or
add
arpl
mov
cwtl
insb
pop
ror
mov
xor
add
sbb
cli
fisttpll
out
data16
cmp
rorl
test
mov
dec
add
fcmovnb
stos
aaa
test
xchg
out
dec
ret
jg
jecxz
inc
insb
icebp
imul
inc
popa
xchg
mov
jmp
in
mov
pop
adc
mov
mov
or
pusha
inc
mov
mov
jne
ret
data16
and
fiaddl
scas
push
xchg
fs
sub
dec
sub
ja
rcll
sub
aas
fwait
push
insb
imul
fmull
cld
fcmovne
sub
pop
mov
lcall
sahf
xor
cli
mov
insb
push
ret
aas
fistpl
xor
cwtl
movsb
cmpsb
add
xlat
xchg
pop
cmpsb
add
push
sub
std
sbb
mov
mov
mov
ja
jl
and
sbb
pop
jmp
ret
test
stos
cld
roll
jl
push
ficoml
jg
sub
in
ja
je
rolb
cmpsb
inc
cmpsl
ljmp
sbb
xchg
push
dec
mov
jb
jae
psubd
dec
jmp
daa
xchg
pop
and
xchg
into
cmpsl
pop
pop
push
xchg
mov
addr16
inc
sub
or
cmp
fnsave
pop
or
cld
push
popf
and
xchg
clc
push
pop
nop
dec
pop
push
roll
dec
insl
dec
aaa
jne
insb
lcall
andl
and
push
mov
insl
add
cli
inc
push
dec
push
dec
repz
cmp
popf
aas
jle
fwait
test
sub
and
cmp
repnz
add
das
lock
daa
xor
sbb
popf
cmc
out
adc
pop
or
ds
sbb
xchg
fistl
adc
cmp
jmp
cmp
jns
cmp
xor
stos
ss
lods
les
inc
scas
mov
push
test
push
mov
mov
pop
jns
aad
sub
jg
pop
jbe
sbb
shll
rorb
mov
es
push
mov
push
movsb
sahf
outsl
push
sbb
ja
test
movsl
add
sbb
mov
cli
and
adc
fstps
sub
repnz
ficoms
imul
mov
push
loop
popf
test
ret
mov
out
dec
lcall
data16
test
and
dec
push
mov
or
hlt
or
int3
js
shlb
fstpl
jl
xor
mov
cli
mov
nop
push
fsubrs
jbe
jecxz
in
mov
add
sahf
call
scas
scas
add
cmpsl
aad
ljmp
rorl
lcall
rclb
repz
test
enter
or
dec
je
xor
pop
call
mov
test
xor
inc
push
inc
icebp
shrl
jbe
sub
xchg
in
sbb
push
aas
push
mov
roll
jmp
dec
jae
push
int
jno
xor
out
scas
push
js
dec
mov
add
xchg
xor
nop
fcmovu
ljmp
in
test
insl
movsl
inc
rcrl
dec
xor
mov
xchg
cmpsl
push
int
push
sbb
sarb
mov
push
loopne
dec
mov
lods
mov
mov
ror
push
mov
inc
push
es
sbb
cmp
pop
imul
arpl
sar
push
in
mov
repnz
sub
push
pusha
fscale
pop
aaa
movsb
rcll
mov
ror
rolb
push
mov
es
popf
pop
ret
cmp
jl
iret
int3
cmp
aaa
lret
lods
jecxz
enter
pop
in
call
out
or
mov
les
mov
or
push
inc
mov
pop
sahf
add
jp
outsl
cmp
stos
jbe
lods
push
lahf
add
add
divb
sub
sarb
mov
xor
jnp
stos
sbb
stc
push
into
ret
fiadds
popl
sub
cmpsb
mov
fisubrs
mov
dec
outsl
fldl
sbb
push
xchg
sbb
or
repz
add
mov
inc
pop
int
inc
sub
dec
insb
xor
es
ds
add
sub
mov
bound
adcb
stos
xor
adc
in
pusha
push
stos
repnz
mov
mov
pop
js
xchg
std
loopne
mov
outsl
jo
aas
loope
push
clc
mov
ja
mov
sbb
inc
pop
mov
xchg
jb
popa
xchg
mov
or
adc
or
cmpsb
xor
cmpsl
out
icebp
mov
pop
ja
pop
mov
mov
mov
xchg
lods
shrb
les
push
adc
cmpsl
jl
sbb
jne
movsl
cld
imulb
xlat
stos
push
adc
mov
ds
cmc
repz
test
sbb
sbb
dec
cmpb
subb
mov
push
xchg
enter
jns
movsl
jle
add
into
insb
ss
and
movsb
jb
or
enter
jae
jnp
cmp
adc
sub
xor
push
sub
cmp
call
rcrl
ja
stos
into
int
pop
addr16
xchg
sbb
push
sub
adc
sarb
cmpsb
xchg
addb
pop
cmc
ret
mov
mov
cmp
mov
nop
iret
xor
aad
mov
loope
inc
outsl
add
xchg
mov
lret
bound
sub
pop
dec
mov
jmp
rolb
notb
add
push
mov
ret
or
mov
adc
push
mov
fstpl
insb
lods
repnz
mov
adcb
rorl
mov
bound
xchg
xchg
pusha
decl
mov
adc
rorl
inc
mov
lret
insb
cltd
les
ja
pop
lcall
push
fnstcw
jo
sub
pop
rcrl
adc
jp
negb
jo
add
cmpb
add
cmp
mov
lahf
pop
movsl
xchg
test
loopne
jp,pt
and
dec
add
lret
jbe
jmp
out
sub
arpl
outsb
jbe
js
cmpsl
hlt
orl
std
mov
incb
xor
adc
in
mov
adc
push
xchg
pop
xchg
jne
cmp
test
or
mov
inc
cmp
notb
dec
call
xchg
jb
sbb
jno
sbbl
cmc
cmc
sbb
addb
sbb
dec
mov
hlt
xchg
or
xchg
mov
adc
sub
addr16
adc
mov
sub
mov
mov
mov
shl
mov
adc
test
iret
cmp
js
cmp
dec
push
pop
inc
lret
xor
aam
xchg
xchg
repnz
dec
push
mov
outsb
dec
cmp
jbe
addr16
mov
lods
and
ljmp
loopne
push
mov
leave
mov
test
pop
movsl
insl
fdivrl
sbb
popf
and
ds
lods
les
xor
push
dec
pusha
repz
pop
dec
rorl
pop
mov
sbb
xor
push
xchg
fstpl
aas
or
inc
lcall
push
push
push
repz
cmp
in
push
jnp
or
je
cmp
pop
popa
cmpsb
adc
shll
xchg
rcl
adcb
js
int3
dec
and
push
xorb
jp
sub
inc
jl
ret
mov
outsl
in
or
cmp
int3
mov
mov
inc
xchg
out
loopne
push
mov
cmc
mov
imul
das
push
lods
call
not
insb
out
enter
shlb
inc
movsb
jp
xchg
aam
mov
jne
bswap
pop
and
les
jbe
je
xchg
mov
outsl
ret
mov
jbe
xchg
insb
adc
jp
xor
push
movsb
and
xchg
loope
enter
lret
mov
shrl
adcl
insb
fwait
push
push
cmpsb
hlt
sub
jb
and
pop
push
and
mov
push
rcrb
inc
jb
push
aas
repnz
movsl
dec
jp
or
shl
push
push
int
ficoms
test
mov
popf
cmp
xchg
mov
nop
aaa
in
push
adc
mov
jb
jge
hlt
mov
jmp
mov
ret
sbb
sbb
shl
add
nop
cmp
imul
sbb
mov
loopne
loop
loopne
inc
mov
mov
mov
clc
mov
dec
adc
inc
mov
pop
adc
add
inc
xor
sarb
roll
and
sub
lods
scas
dec
push
xor
lock
insl
and
aas
cmp
scas
cltd
stos
scas
jbe
mov
mov
mov
icebp
mov
je
mov
fdivr
mov
insl
xor
test
jbe
sbb
bound
fildll
bound
and
scas
lret
mov
cmp
sub
inc
stos
shlb
cli
jbe
add
nop
lret
cmp
mov
and
mov
push
adc
push
clc
mov
daa
mov
fdivrl
inc
movsb
int
or
sbb
in
adc
lcall
in
pop
int
outsl
loope
test
aaa
or
lret
pop
mov
js
and
jb
inc
cltd
mov
stc
lods
pop
in
sub
lret
push
xchg
fiadds
hlt
fdivrs
in
cmp
mov
and
cmp
insb
cmp
lcall
push
sbb
or
inc
dec
sub
mov
movsl
pop
int
mov
int
insl
pop
jns
cmp
xchg
rolb
jge
shl
push
aas
loope
fsubs
xor
inc
xchg
jge
aam
jmp
dec
pushf
not
inc
ljmp
mov
aam
jne
pusha
xchg
shl
mov
ret
sbb
popf
mov
sahf
repnz
pop
mov
roll
scas
mov
jge
push
xor
cltd
out
lock
sti
pop
stos
adc
gs
shlb
ret
aaa
cmp
dec
add
pop
setnp
mov
adc
pop
push
or
shrb
cld
mov
fwait
sub
add
adc
add
loop
adc
dec
cli
loopne
movsb
pushl
lret
jo
xor
test
pop
pop
mov
cmp
loopne
pop
mov
or
mov
dec
sub
push
repz
mov
leave
clc
ret
jno
cmp
mov
and
and
xor
leave
adc
sbb
mov
xchg
adc
in
dec
sbb
outsl
push
ja
jge
push
push
int3
cmp
call
aas
stos
pusha
sub
sbb
add
fwait
dec
bound
out
icebp
jne
imul
jmp
sbb
int3
adc
stos
lret
mov
add
rclb
inc
jle
xchg
or
imulb
mov
out
aad
lret
mov
das
adc
sub
mov
frstor
fwait
mov
and
xchg
mov
jg
push
imul
xchg
cltd
int
shrb
int
cmp
test
out
cmc
adc
inc
mov
stc
and
xor
das
push
imul
fstps
pop
pushf
shl
dec
xlat
pop
mov
mov
test
sbb
push
mul
mov
in
in
sbb
bound
push
addr16
jle
inc
mov
xchg
icebp
mov
xchg
ret
xchg
subb
fimuls
jbe
lret
xor
outsl
lahf
cmp
lods
sub
dec
fsubrs
or
shll
sub
lock
pop
push
clc
jp
cmp
mov
sub
or
rorb
sub
mov
call
or
fists
iret
push
mov
test
adcb
pusha
or
mov
add
inc
popa
subl
cmp
mov
sbb
inc
push
sahf
lds
nop
out
popf
and
push
jge
push
lds
cld
xchg
insb
inc
xchg
clc
mov
imul
inc
outsl
aam
mov
pop
pop
mov
and
ret
cmpsl
cwtl
mov
jg
fidivrs
mov
xchg
mov
outsl
in
push
push
push
sbb
pop
jae
dec
out
call
sbb
lods
shl
sub
push
addl
mov
mov
mov
lahf
stos
mov
mov
test
and
test
jbe
dec
jge
roll
scas
jmp
cmc
ret
pop
push
fmuls
mov
adc
mov
and
cmpsl
xlat
incl
out
mov
lds
cmp
jmp
jns
add
pop
xor
hlt
dec
scas
lods
push
add
adc
cli
in
sbb
subb
pusha
push
push
ret
aas
ret
std
mov
jns
adc
mov
add
add
in
aas
push
sub
dec
and
out
fmuls
xor
or
sub
into
bound
or
adc
cmpsb
cltd
adc
int3
aaa
test
inc
inc
add
sti
enter
xchg
jnp
enter
repz
sbb
inc
inc
push
jno
ja
add
or
mov
lcall
arpl
jb
leave
jns
sbb
jecxz
icebp
sti
or
loope
out
pop
jo
or
push
xchg
dec
xchg
jecxz
mov
pop
lahf
fwait
adc
sub
inc
ficomps
hlt
hlt
jmp
mov
fs
or
in
xchg
addr16
pushf
and
sbb
sbb
lret
sbb
call
cmp
mov
out
add
aas
outsb
xor
std
xor
mov
mov
inc
lock
mov
xlat
lea
cmp
test
jge
lea
aas
pushf
push
cmp
sub
add
lods
popa
pop
pop
mov
or
mov
loope
mov
sub
data16
stc
pop
inc
movsl
lods
sarl
out
movsb
mov
sub
stc
call
xlat
andb
ljmp
sti
xchg
movsl
ljmp
cs
test
ret
jae
add
dec
jae
xor
and
inc
in
sahf
lods
stc
fmuls
and
icebp
xor
pop
jmp
gs
mov
push
push
or
imul
pop
hlt
mov
jns
add
les
cmp
movsb
fs
fstpt
subl
out
pushf
adc
rcll
aaa
xor
shlb
or
int
cmp
loop
adc
sub
ret
cmp
add
repz
shrb
pop
xor
jno
cwtl
idivl
ficoml
rolb
and
mov
jecxz
jno
loop
mov
imul
sbb
or
popl
push
sbb
inc
mov
add
or
adcb
cmc
inc
mov
xor
xor
sub
std
mov
ja
pop
xchg
xor
dec
mov
ror
sub
jge
sub
mov
imul
daa
mov
or
filds
jge
das
in
push
dec
cmp
xchg
sub
xor
mov
pop
je
adc
cmpsl
dec
scas
imul
mov
fs
adc
mov
and
outsb
insb
movsl
adc
xorl
ficompl
fucomp
mov
adc
or
push
ret
pop
es
xor
sub
outsb
pop
add
push
pop
repnz
xor
or
clc
test
shrb
or
pop
ret
lcall
into
xor
dec
fbstp
gs
shrb
js
das
aaa
xchg
je
ja
mov
fstl
ficompl
mov
in
xchg
lods
rclb
ret
jae
inc
xchg
loop
scas
or
push
xchg
loope
fimull
outsb
out
popa
ret
sarb
and
jns
or
xor
mov
pusha
pop
pop
test
cltd
inc
and
out
sbb
cmp
out
int
mov
jle
icebp
cmp
imul
mov
fstl
daa
fsubs
mov
or
out
es
pop
sbb
inc
adcl
repz
sarl
stc
mov
clc
repz
fdivs
roll
shlb
mov
mov
stc
je
dec
push
cltd
addr16
cmpsl
push
lods
sbb
repnz
jecxz
push
scas
mov
lret
inc
jnp
shlb
or
js
adc
mov
call
gs
xchg
and
hlt
pop
call
popf
add
dec
mov
fsubr
test
ljmp
lods
xchg
jbe
imul
dec
xchg
push
sbb
lcall
xchg
push
repz
pop
jbe
mov
rcll
push
out
xor
out
lds
xchg
stc
cmpsl
outsl
inc
xchg
mov
jecxz
fucomp
mov
pop
bound
lret
push
and
mov
mov
shl
add
adc
dec
js
lahf
push
jg
jb
mov
movsb
lea
mov
or
jno
sub
dec
icebp
push
jmp
mov
jle
fidivl
push
dec
aam
bnd
fisubrl
aaa
dec
stc
aaa
fucomi
inc
nop
sub
iret
insl
decl
and
cmp
add
xchg
pushf
push
adc
les
sub
mov
lret
and
aam
ja
maxps
and
push
lret
mulb
dec
fldenv
or
jb
push
ljmp
jo
xchg
and
sbbl
je
arpl
adc
xor
lds
xchg
mov
xrelease
pusha
mov
pusha
lahf
xchg
shll
out
cli
jbe
outsb
arpl
lret
push
popa
push
lret
lods
add
cltd
cmp
jge
mov
xlat
mov
clc
push
cmp
dec
mov
mov
movsl
ljmp
jnp
sub
aaa
xor
pop
jmp
in
shll
lock
in
mov
mov
or
xchg
pop
mov
jl
xchg
sti
scas
sbb
jo
mov
sbb
test
xor
out
xor
xchg
xor
call
jbe
lret
adcl
orb
cmp
test
cmp
pop
xor
decb
iret
lock
dec
cwtl
lahf
repz
cmp
inc
and
push
mov
push
mov
gs
adc
test
leave
inc
fs
jp
stc
test
push
cwtl
fldl
mov
ret
ret
lea
sub
xchg
aas
lret
ds
rclb
push
add
jb
into
mov
in
mov
daa
adc
das
pusha
iret
inc
jle
sub
mov
lret
add
jmp
sub
icebp
imul
add
ror
das
in
sarl
js
pop
sub
jbe
cmp
int
xchg
cltd
cli
adc
or
enter
sbb
imul
adc
testl
mov
cltd
movsl
cmp
inc
cmp
mov
lock
sti
sub
testb
testb
xor
mov
sbb
inc
lods
aas
stc
loop
sbb
loop
mov
or
out
incl
lods
fs
orb
cmp
arpl
dec
dec
fcoms
push
inc
dec
in
mov
xor
xchg
pop
out
scas
ret
inc
xchg
jb
mov
xchg
outsl
sub
bound
jg
scas
inc
xor
and
push
out
mov
sbb
add
sbb
push
daa
cltd
insb
lock
cmc
push
sbb
mov
sub
mov
insl
insb
add
pop
dec
push
jmp
xchg
adc
and
repnz
xor
sub
jle
movsb
cmp
movsw
jp
sbb
jmp
ss
loopne
stos
cmp
lcall
dec
scas
shl
jle
xchg
pop
mov
das
sti
add
nop
sub
cmp
lock
das
mov
mov
ja
or
inc
shlb
mov
lds
add
cmp
mov
pop
and
mov
insb
jb
cmc
or
lret
movsb
push
jne
bound
sub
or
ja
dec
shrb
test
jnp
push
xchg
jge
xor
stc
pop
std
in
sahf
cs
repnz
cltd
cld
mov
mov
les
popa
mov
mov
push
jle
adc
imul
imull
es
lret
daa
pop
fisubrs
popf
std
shl
sbb
jle
movsl
mov
push
imul
rolb
sub
and
daa
daa
adc
jge
aas
cmpsl
mov
stc
mov
xchg
mov
push
rcr
movsb
cmpsb
mov
jae
ds
popf
inc
cmp
mov
pop
mov
jo
add
stc
cmpsb
fnstenv
mov
push
int3
pop
out
pop
jb
cmp
loope
das
lock
or
ja
mov
and
divl
cmp
lock
bound
push
jl
mov
mov
xor
ja
mov
inc
ror
enter
push
mov
pushf
push
xchg
js
sbb
js
lods
pop
dec
bound
xchg
out
push
ret
mov
mov
cmc
pop
sbb
or
cmp
enter
inc
shr
mov
pop
and
daa
icebp
je
pop
inc
movsl
xchg
cmp
mov
dec
push
scas
outsb
pop
push
arpl
sub
dec
clc
xadd
pop
mov
jle
mov
mov
fbstp
mov
add
movsl
and
mov
mov
sbb
in
rcrb
sbb
pop
mov
in
mov
out
sub
mov
rorb
cmp
adcb
mov
push
outsb
push
xor
mov
fists
jp
cmc
call
or
mov
out
add
rolb
nop
and
movsb
mov
and
xchg
jns
pop
popf
cli
push
inc
cmp
mov
cmp
mov
iret
pop
mov
lret
mov
sub
lahf
push
jge
inc
cli
sbb
inc
jp
inc
rolb
out
mov
xor
jge
fcompl
or
mov
dec
pop
int
adc
inc
sbb
push
hlt
stc
outsl
fstpt
push
and
jno
popa
jb
subl
movsb
mov
divl
dec
xchg
popa
arpl
mov
mov
fnstcw
dec
mov
scas
inc
sbb
mov
mov
mov
mov
mov
icebp
cwtl
push
jge
fwait
jl
adc
idiv
mov
out
test
outsl
mov
or
test
popf
sub
xor
jnp
push
inc
or
in
pusha
mov
ret
or
and
lods
sbb
mov
addr16
fdivs
and
and
inc
pop
arpl
adc
xlat
inc
movsl
push
cmp
xor
repz
mov
mov
lods
inc
lods
pop
xor
cmc
hlt
fdivrs
bound
xchg
adc
push
mov
mov
dec
pusha
mov
dec
mov
inc
mov
cltd
inc
insb
gs
movsb
pop
fcoml
xor
mov
out
jg
mov
add
sbb
push
jne
ljmp
loopne
lods
push
stos
data16
stos
imul
mov
push
scas
mov
cmpsb
sub
insb
xchg
js
sbb
mov
xchg
imul
fcoml
test
fptan
mov
push
leave
test
cwtl
int
imul
fisubrs
daa
out
imul
scas
mov
and
mov
lret
jg
movsb
dec
pushl
sahf
push
jp
aad
in
mov
test
rorb
adc
and
movsb
xor
inc
mov
xor
sarl
inc
inc
and
jns
mov
or
movsb
sbb
int
clc
inc
test
loopne
jmp
sub
cli
lods
jmp
shrd
sub
ja
aam
int3
mov
gs
addb
fisttps
inc
sti
cmp
mov
mov
push
lcall
sub
shrl
mov
jbe
outsl
sub
imul
dec
enter
mov
sub
in
lret
test
add
pusha
hlt
call
cmp
add
lods
sbb
inc
inc
rcll
stc
dec
mulb
or
dec
mov
push
repnz
inc
ds
cltd
fstpl
ss
mov
frstor
cmp
fistpl
mov
hlt
ret
test
fs
or
ljmp
lock
movq
call
lock
mov
mov
or
pop
cmp
mov
jns
stos
aaa
cmp
pushf
lret
mov
pushf
jo
mov
add
jo
inc
pushf
jle
sub
into
sbb
and
xor
lret
jecxz
and
adc
adc
lock
in
jno
test
sub
addr16
outsl
out
pop
in
mov
int
cs
push
cs
push
add
insb
xchg
lcall
xor
jge
sub
lods
inc
aad
sahf
pushf
xor
xchg
pop
insb
push
adc
pop
sbb
cltd
mov
test
orb
jb
jns
loopne
pop
xor
push
mov
xchg
in
jg
ja
sub
repz
rcrb
cmp
jecxz
push
sysexit
sahf
jp
test
test
int
xchg
out
iret
and
or
les
inc
xor
shlb
out
js
in
and
lret
pusha
dec
outsb
aad
xor
icebp
lock
sub
jo
push
add
push
sub
dec
pushf
addr16
lret
lcall
aad
push
fwait
xchg
test
and
pop
into
mov
adc
test
cli
xor
cmp
stos
jl
inc
jnp
cwtl
dec
pop
das
pop
mov
ret
pop
cmc
mov
jmp
adc
inc
test
push
aas
dec
out
call
subl
out
push
data16
or
jl
mov
aad
xchg
cmp
inc
xchg
sarb
jmp
test
sub
aam
nop
icebp
stos
inc
out
mov
mov
enter
enter
daa
mov
dec
pop
xor
xchg
inc
add
inc
push
out
fildll
mov
sbb
lcall
and
sti
insb
jge
push
xchg
jmp
xor
xchg
cltd
add
cmp
mov
sub
in
or
jmp
push
test
cmp
bound
inc
std
lds
jnp
pop
jmp
adc
xor
js
pop
out
xchg
subl
xchg
andb
jb
adc
sbb
stos
pop
std
and
pop
icebp
mov
adc
pop
test
shlb
add
sti
in
shlb
mov
outsl
loop
jp
sub
fs
sub
insl
outsl
mov
fbld
in
jecxz
out
dec
addr16
jo
cwtl
cli
mov
cmpsb
and
std
cmp
cmp
sbb
rolb
push
push
fdivs
mov
movsb
test
mov
fsubrs
adc
cmpsl
mov
push
sub
mov
jmp
ss
mov
jns
stos
cmp
enter
hlt
stc
mov
es
pop
in
jmpw
outsb
add
mov
je
cmp
flds
inc
dec
js,pt
test
push
inc
imul
mov
or
sub
clc
xlat
xor
mov
rorl
outsb
pop
mov
and
sarl
mov
mov
jmp
ret
lea
mov
scas
add
sti
aas
cmp
lret
jbe
pop
jle
jne
lods
ret
jne
adc
aas
scas
xor
aad
pop
jns
fdivs
int3
mov
push
push
scas
or
jae
dec
push
xchg
pop
or
ja
andb
fwait
je
imul
inc
adc
mov
cli
pop
xchg
daa
cmp
jae
push
jp
and
pop
add
das
mov
adc
inc
fcomps
push
pop
sub
or
clc
push
xor
arpl
mov
sub
push
adc
dec
ljmp
movsl
sbb
daa
sbbb
loope
cmp
xchg
mov
test
add
mov
roll
in
and
pop
adc
lcall
mov
in
fistpl
fwait
and
pop
fidivl
mov
jge
shll
pop
push
push
adc
dec
lret
xchg
int3
lock
bound
mov
lods
jle
jno
jns
cmp
inc
aas
movsl
jbe
stc
out
sbb
xchg
insl
mov
sbb
insl
rolb
jl
mov
and
loop
insl
aaa
iret
xor
or
hlt
andl
inc
mov
mov
inc
dec
jg
mov
adc
pop
xchg
fmull
in
mov
fadds
cmp
inc
mov
test
inc
pop
ljmp
imul
adc
out
fsubr
ljmp
push
pop
mov
ljmp
scas
out
sub
outsl
aam
repz
ret
repnz
add
pop
mov
es
les
loope
lcall
loope
sub
movsl
pop
fbstp
je
enter
aad
test
push
add
in
js
sbb
cmp
push
enter
sbbl
add
jmp
cs
mov
inc
cmc
lods
xchg
sub
or
popf
inc
dec
pushf
je
inc
xchg
pop
pop
add
test
iret
test
dec
or
shl
call
xchg
ljmp
in
jne
adc
pop
test
repz
push
dec
mov
xchg
dec
inc
in
ret
cmp
add
fisubrl
gs
sbb
inc
push
xor
sub
out
fwait
pop
sub
mov
dec
int
das
mov
iret
sbb
mov
cmc
sbb
cli
adc
stos
insb
mov
out
mov
out
out
add
inc
cmpl
in
add
mov
lahf
js
das
mov
sbbl
push
mov
sti
sbb
push
jl
cwtl
repnz
inc
add
cld
cmpsl
pop
push
pop
xor
in
pop
cmp
fwait
or
or
push
xlat
mov
jb
psubd
mov
xorl
jg
enter
cmp
xchg
sti
mov
cli
filds
inc
mov
add
mov
xchg
cltd
jmp
add
inc
jne
icebp
test
inc
lret
mov
pop
mov
fnop
xchg
dec
adc
mov
and
std
pop
ret
mov
or
movsb
mov
mov
lret
pop
cltd
and
cmpl
xchg
cmpsl
sub
mov
push
into
loope
mov
cmp
sahf
add
outsb
xchg
jns
mov
insb
lods
sub
arpl
imul
inc
fstpt
add
jmp
or
pop
mov
cmp
push
jmp
insb
bound
ret
sub
mov
sub
in
rorb
pop
daa
sub
push
dec
lret
leave
xchg
jnp
jg
mov
out
jle
xlat
push
je
orl
ds
inc
rorb
lahf
fsubs
jecxz
rcrb
fisttps
push
pop
jo
pop
push
into
jge
push
sarl
jne
add
outsb
rcll
xor
and
int
aam
dec
xor
cmpsl
cmc
decb
mov
and
add
daa
movsl
lock
loopne
dec
mov
xchg
es
mov
jge
pop
adc
sub
inc
dec
popa
adc
mov
sub
lods
and
clc
js
rol
orb
add
sbb
xor
repz
push
popf
test
jns
jne
dec
psubusb
and
mov
add
lahf
xchg
sub
mov
or
addl
cmp
mov
divb
xchg
sub
movsl
je
sub
jg
push
jle
jns
out
imul
cmpsl
xchg
mov
fimull
js
or
js
pop
xor
fidivl
mov
movsb
insb
pop
push
mov
les
or
mov
enter
pop
hlt
push
into
push
mov
push
xor
push
xlat
daa
jg
cs
ljmp
sub
and
jae
jbe
jnp
adc
inc
rcll
fnstsw
insb
ss
mov
sbb
addr16
aad
xor
fstpt
scas
dec
inc
sub
xor
enter
shll
pop
jb
mov
jecxz
icebp
and
lds
adc
dec
cmp
nop
adc
ud0
xor
pushf
dec
sub
fisubrs
or
xor
mov
clc
sbb
sbb
fidivrs
test
repz
xchg
pop
aaa
and
push
sbb
rcr
popa
scas
pop
out
pop
pop
mov
lea
mov
sbb
and
jbe
icebp
dec
sbb
cmp
add
and
push
scas
lods
xchg
or
xchg
xor
cltd
sub
test
and
lcall
push
pop
jbe
cmp
adc
ret
into
out
jg
xchg
jge
mov
in
sbb
sbb
scas
lods
loop
push
cmp
mov
and
jp
mov
cmc
gs
add
mov
dec
xchg
xor
pushf
movsb
fwait
pushf
enter
inc
fdivs
adc
outsb
sub
push
and
xor
loopne
inc
popl
repz
mov
lahf
jb
fnsave
repnz
sub
loope
xchg
push
jne
push
mov
sub
outsl
push
xor
push
neg
dec
mov
push
ficompl
sbb
adc
xchg
fcomp
sbb
jmp
pop
call
dec
xor
cmp
sbb
jbe
xchg
jmp
add
inc
les
stc
push
and
mov
xchg
dec
cmp
or
xor
ljmp
jns
nop
lods
mov
adc
add
repz
nop
js
mov
push
je
cmp
icebp
mov
scas
scas
or
inc
ss
inc
jns
mov
mov
jae
inc
mov
mov
arpl
xor
mov
nop
jae
imul
outsl
and
cltd
ljmp
mov
pop
jo
arpl
dec
mov
xor
sbb
xor
adc
xchg
xchg
lds
fwait
mov
mov
mov
cmp
addr16
aas
das
rol
mov
lods
repz
jmp
cmp
mov
rolb
inc
or
sarl
dec
pop
mov
cltd
xlat
add
lahf
std
adc
jmp
pop
pop
dec
cld
notl
mov
xchg
push
xor
aas
jl
pop
stos
movsb
adc
insl
mov
pop
imul
movsl
gs
xor
push
mov
cmp
mov
or
sbb
sarl
sub
lods
dec
aad
xor
aas
push
mov
pop
cld
and
lods
adc
rclb
adc
std
imul
ret
xchg
push
xchg
enter
cmp
stos
adc
inc
std
mov
je
xor
adc
push
fadds
repz
or
idivl
leave
pop
gs
xor
adc
push
xorb
notb
nop
push
stc
fisubs
arpl
les
and
cmpsl
inc
in
xchg
clc
pop
stc
jne
dec
cli
sub
jp
imul
jmp
dec
punpckhbw
in
cmp
mov
sbb
push
andl
xchg
mov
lret
mov
or
cwtl
cmp
dec
pop
shrb
mov
sub
fs
jecxz
or
ds
mov
push
dec
cmp
nop
and
repnz
push
bound
inc
mov
inc
dec
mov
les
adc
xor
hlt
sub
push
out
mov
leave
jno
and
adc
lods
pushf
jb
mov
jo
sub
cmp
jecxz
hlt
data16
sub
mov
jno
push
push
out
mov
popa
cmp
jb
hlt
add
push
mov
or
xchg
sbb
mov
xor
int
ret
pop
rorb
sbb
data16
es
ja
andl
rorl
test
in
jnp
addl
pushf
push
iret
rcr
jle
dec
inc
cwtl
cli
popf
dec
stos
arpl
xchg
into
adc
das
inc
push
adc
mov
inc
mov
lret
or
sub
test
add
or
loop
dec
loop
movsb
loopne
mov
sbb
add
repz
push
adc
out
push
xlat
fucomip
loopne
adc
cmc
xor
sub
adc
sahf
or
orb
jge
daa
jge
mov
fdivl
cld
jo
out
aam
dec
cmc
adc
cld
std
mov
xchg
addl
pop
je
pushf
enter
mov
inc
mov
fnsave
dec
das
mov
cmp
popf
push
cmp
xchg
sub
mov
sti
sbb
dec
inc
std
xor
aam
mov
movsl
dec
lret
popa
into
fdivp
and
mov
push
loope
xor
dec
push
push
push
push
fstpt
cmpsl
xchg
imul
pushf
ret
and
sbb
xchg
cltd
adc
xchg
xor
mov
out
mov
sbb
out
sbb
jo
seto
adc
dec
dec
jnp
mov
cmp
pop
push
cmp
and
fimull
pop
clc
shll
outsl
cmp
gs
or
sub
lods
gs
movsb
jle
outsl
lahf
addb
stos
and
cld
jo
inc
arpl
adc
sahf
jmp
cltd
cmp
loop
cmp
mov
rorb
out
sbb
cmc
mov
jmp
mov
cmp
hlt
xchg
or
lcall
inc
jmp
inc
inc
nop
or
in
addl
clc
sub
mov
das
call
scas
movsl
mov
xchg
mov
mov
insb
icebp
mov
mov
dec
cmp
sub
dec
in
rorl
aam
mov
sbb
jle
pop
es
outsl
mov
xchg
push
std
xchg
in
pop
jecxz
jp
push
fldcw
mov
leave
mov
xchg
sub
xor
jg
jmp
xchg
xor
or
jmp
jle
mov
dec
xor
gs
sti
bswap
lret
or
ret
pop
shrb
mov
or
push
scas
push
xchg
jecxz
das
cmp
xorl
scas
imul
jbe
mov
push
sub
aam
dec
mov
in
dec
push
adc
sbb
push
sbb
lea
mov
push
mov
pop
mov
sbb
lods
adc
cmp
cld
shlb
sub
inc
loopne
mov
cli
mov
or
inc
cld
jg
or
pop
or
or
cmp
pushf
inc
clc
aam
dec
sbb
xor
fcoml
adc
mov
daa
mov
addr16
jne
bound
mov
pop
or
inc
and
push
sbb
movsl
enter
hlt
es
call
cmpsb
shll
push
or
movsl
push
add
jnp
fisubs
push
and
fwait
sarl
or
jno
jno
sahf
sub
lock
xlat
gs
cmp
imul
push
scas
jno
ds
adc
or
add
fsubs
test
pop
pop
data16
inc
add
or
fmulp
xchg
arpl
add
or
push
pop
push
cld
or
push
cmp
adc
sub
inc
lods
lds
scas
adc
and
and
out
decb
sahf
cmp
in
push
mov
push
test
in
les
sub
outsb
pop
push
cmp
push
test
sbb
pusha
icebp
xor
and
int3
or
decl
sbb
xor
dec
shlb
test
stc
push
testl
adc
sti
cmpsl
lods
xor
mov
mov
out
ror
rorb
pushf
adc
xor
popf
cwtl
xor
cs
xor
mov
stc
xor
rolb
leave
out
stos
xchg
push
sub
jg
push
movsl
mov
adc
jnp
lock
fstpl
mov
les
inc
mov
adc
lods
jno
fmuls
lea
es
sub
jl
dec
enter
mov
in
test
icebp
rcll
mov
pop
adc
cmpsl
mov
in
mov
icebp
imul
stc
and
mov
push
icebp
adc
adc
xchg
imul
sbb
enter
adc
xchg
inc
imul
cltd
sub
xchg
sbb
mov
xlat
add
mov
lods
cwtl
jnp
sarb
or
pusha
mov
inc
lock
lahf
test
call
sub
frstor
push
push
mov
dec
sbb
xchg
gs
movsl
scas
jg
insb
adc
idivb
fsubrl
jnp
dec
jp
dec
inc
xor
call
push
pop
sbb
cli
cmp
ret
lods
and
cmc
enter
jp
inc
lods
cli
inc
mov
mov
jns
lgs
in
addr16
and
push
fsubrs
xor
sub
cltd
ss
and
pop
das
inc
popf
clc
pop
sbb
dec
or
icebp
leave
mov
aaa
push
mov
mov
inc
popf
pop
int3
cmc
xchg
ja
xor
sub
mov
cwtl
repnz
and
adc
jb
sub
repz
push
sub
sub
das
or
mov
js
or
lret
sub
sub
fisttpl
stos
push
adc
mov
adcl
jb
add
rclb
xor
stc
divb
jbe
mov
out
xor
ficoms
sbb
adc
lahf
les
imul
inc
cli
scas
mov
lret
lret
outsl
jmp
sahf
adc
das
movsl
sahf
ja
pusha
inc
xor
xor
lret
lock
mov
fisubl
push
mov
adc
dec
push
xchg
mov
loopne
mov
popa
clc
lods
jle
hlt
sub
std
lret
jge
gs
mov
mov
adc
jge
xorb
call
ss
call
sub
js
xchg
dec
mov
xor
add
push
dec
and
xor
pop
call
fildll
or
dec
xor
fildl
cmp
jmp
divl
mul
outsb
stos
aaa
jge
pop
movsbl
add
cmp
ffree
mov
mov
das
clc
mov
push
jne
or
rcll
sbb
cmp
and
push
push
cmp
gs
xchg
fdivp
xchg
sbb
insb
fsubl
lret
mov
pop
add
insl
mov
sub
pop
jne
movsb
je
pop
push
pop
jecxz
adc
xchg
cmpsl
push
lods
testb
in
cmp
sbb
jnp
mov
push
repnz
and
outsb
mov
ja
movsl
test
js
into
movsl
ret
fistps
in
sub
pop
std
jmp
pop
js
pop
popl
pop
call
pusha
cmp
push
nop
xchg
pop
push
sub
cmp
push
cmp
xchg
outsb
aad
pop
in
push
ds
ds
cmp
out
mov
push
shll
mov
sbb
std
xchg
nop
jbe
or
out
and
inc
adc
mov
bound
clc
ja
and
pushf
clc
gs
lock
push
mov
xchg
lea
and
fdivs
push
scas
xchg
pop
xlat
pop
lret
cmp
dec
adcb
push
inc
loop
dec
jg
icebp
out
test
dec
jmp
bound
xrelease
mov
notl
xchg
lock
adc
ret
xchg
scas
dec
pop
ret
or
mov
pusha
jns
dec
mov
jge
dec
adc
mov
and
ficoms
lea
push
dec
adc
jbe
mov
mov
xor
lea
das
pop
dec
jmp
hlt
push
lret
add
mov
flds
mov
adc
push
ficoml
mov
mov
xor
mov
cmpsl
js
lcall
pop
sahf
mov
movsb
and
sahf
pop
push
mov
xor
mov
testb
bound
test
xchg
xor
fwait
mov
jb
iret
or
sub
jno
jnp
pop
push
dec
arpl
outsb
sub
pop
pop
mov
cld
stos
jae
jae
cmp
push
les
adc
push
mov
frstpm(287
mov
daa
imul
mov
popa
in
stos
inc
jge
and
mov
mov
das
ljmp
enter
leave
js
mov
add
out
aas
xchg
jecxz
fnclex
pop
imul
sti
push
push
loope
adc
sub
sbb
mov
push
dec
dec
sbb
inc
cmp
loope
bound
push
xchg
aas
lds
jg
dec
dec
pushf
push
and
xchg
push
nop
dec
sahf
out
mov
xlat
jge
pop
push
mov
mov
popa
pop
int
inc
ss
adc
sarb
push
cmp
iret
les
cmc
mul
enter
sub
and
testl
imul
clc
inc
mov
pushf
or
sub
pop
mov
sar
orb
jne
leave
inc
mov
jbe
xchg
and
inc
xchg
ja
mov
jb
add
enter
arpl
mov
in
sub
test
mov
mov
mov
sub
jo
adcb
dec
rclb
adc
int
and
push
jae
pop
in
lds
jne
leave
sub
pop
stos
outsl
roll
sub
icebp
imul
sub
ret
adc
xor
jge
mov
mov
out
sbb
das
push
aas
jae
dec
cwtl
mov
push
lret
mov
and
clc
mov
xor
mov
pop
cs
sbb
out
mov
jmp
adc
js
mov
xlat
ficompl
xor
pop
add
leave
pop
inc
clc
in
icebp
dec
pop
jle
call
pop
fcompl
sbb
push
movsl
sbb
ds
mov
sbb
pop
movsl
and
pushl
push
push
mov
out
cld
les
rcrb
stc
outsl
and
inc
jno
mov
sub
mov
aam
and
dec
lock
faddl
shll
cmpsl
dec
clc
in
out
adc
cltd
fdivrl
fidivs
inc
xor
cld
jmp
pop
cmp
std
push
enter
icebp
inc
mov
int3
mov
fwait
movb
pop
cmp
pushf
fistpl
jo
std
adc
fmuls
das
or
mov
cmp
roll
xor
fs
mov
je
add
cltd
or
pusha
outsl
psllw
fstpl
in
popa
cli
fistl
lods
xorb
inc
cmp
xchg
lock
ja
cmpl
jecxz
ret
and
sub
lods
sbb
bnd
sti
or
dec
sbbl
loope
sbb
aam
incl
pusha
xor
lds
mov
jle
int3
test
fimuls
cs
inc
call
cwtl
notl
jle
sub
xchg
fsubrl
mov
pop
sub
es
cli
cld
inc
push
idivb
aam
inc
fistpll
int3
lds
into
mov
sbb
psubw
lock
pop
into
aaa
xchg
out
sub
pop
lea
incb
outsb
mov
rol
outsb
mov
mov
xchg
outsl
push
mov
pop
test
jecxz
jo
and
mov
sub
xchg
mov
repnz
jge
popf
mov
xchg
mov
mov
lods
aam
cwtl
iret
fistl
push
popf
xchg
cltd
add
les
push
dec
mov
and
pop
xchg
adc
pop
sbb
fs
lcall
repnz
mov
sahf
cmp
cli
in
inc
sbb
cmp
xchg
dec
or
push
xor
negb
aam
rcll
test
fnstenv
dec
jns
sub
sub
pop
cmp
push
int3
test
mov
jb
call
mov
stc
dec
xlat
jp
mov
lret
push
or
or
ficoml
mov
jle
jge
pop
xchg
pop
mov
adc
iret
jmp
data16
imul
pop
in
jmp
enter
test
mov
mov
dec
sbb
dec
lds
inc
lcall
xchg
xchg
xchg
cltd
mov
call
es
sbb
in
cli
mov
test
stos
stos
push
sub
cwtl
scas
lret
js
into
cmc
out
xchg
xlat
pop
jno
sbb
jg
lret
pop
lds
loop
mov
mov
jmp
mov
hlt
mov
mov
outsl
pop
insb
xlat
icebp
scas
lock
fistl
xchg
aam
call
mov
mov
jmp
jo
into
push
and
cltd
lahf
mov
rolb
insb
jne
mov
gs
lds
xchg
testl
js
pop
xor
outsb
or
cmp
decl
push
repz
nop
arpl
pop
lret
pop
jb
push
fisubrs
das
addl
or
mov
sbb
push
add
inc
sbb
xor
fsubr
xor
daa
dec
xor
pop
lcall
lret
sbb
int3
repnz
mov
gs
push
inc
packsswb
neg
ret
pop
xor
or
in
aaa
cmp
jne
jno
mov
inc
cmc
icebp
jne
fcmovnb
mov
rcll
cs
push
or
inc
out
xor
loopne
mov
cmp
pusha
faddl
jno
add
sub
dec
frstor
enter
adc
lods
sbb
jmp
shl
push
push
pandn
pop
dec
dec
icebp
xor
testl
mov
cwtl
push
jbe
or
addr16
adcl
cmc
adc
push
test
fwait
xchg
pop
adc
iret
xorb
inc
xlat
out
xchg
xor
inc
inc
mov
inc
test
nop
mov
cmp
lock
mov
mov
fwait
push
sbb
shrl
push
mov
in
pop
mov
mov
out
loope
inc
add
and
popa
dec
push
sub
in
dec
xchg
mov
adc
mov
cltd
push
add
push
mov
mov
sub
mov
sahf
aas
fidivrs
adc
mov
mov
call
outsb
mov
jns
int3
cmpsl
push
out
in
or
dec
std
mov
movsl
ret
stc
inc
jae
out
xor
in
adcl
inc
pop
int
mov
pop
pop
lret
mov
pop
lods
dec
push
mov
sub
call
aaa
in
jnp
xchg
inc
fiadds
popl
clc
into
stc
mov
or
jp
or
cmpsl
push
rcr
mov
in
scas
and
roll
fisubs
outsb
mov
sbb
and
fs
mov
hlt
jne
mov
outsl
xchg
nop
adc
add
push
push
and
push
mov
repz
mov
es
mov
mov
je
test
ret
stos
inc
add
shrb
fisttpll
out
push
or
out
cltd
out
movsl
fimuls
inc
sbb
cmp
ficompl
or
mov
push
xchg
sbb
sbb
sarl
or
dec
push
lods
iret
and
add
addr16
mov
and
push
and
ret
jbe
jp
push
xchg
jge
mov
inc
ret
push
xor
and
jg
imul
pop
xor
loope
pop
xchg
mov
jb
in
mov
mov
xchg
outsb
xchg
sti
adc
jne
jns
pop
int
pop
xor
mov
push
loope
mov
mov
ja
cltd
push
mov
mov
sub
push
call
and
dec
inc
sbb
push
mov
fsubs
sbb
mov
pop
xchg
test
xchg
scas
or
push
aam
and
das
pop
inc
push
adc
pop
int3
jp
test
lods
lock
hlt
cs
xor
mov
lea
inc
jg
adc
lea
add
pop
push
push
mov
dec
ds
fstps
popf
int3
adc
cmp
xchg
mov
shl
mov
cmp
std
mov
adc
sarl
mov
pusha
xor
or
sbb
jne
jno
stos
inc
dec
cmpsl
fistpl
sbb
adc
push
mov
or
sbb
aad
arpl
lret
pop
das
jae
sbb
in
dec
jo
adc
mov
push
push
leave
xchg
int3
sarb
add
push
mov
sub
and
mov
test
leave
cwtl
jecxz
popf
push
fstl
xchg
inc
js
gs
inc
xor
and
mov
fstp
jnp
xacquire
dec
push
mov
bound
rorl
fists
add
stos
adc
push
jmp
mov
dec
jae
and
dec
sahf
neg
out
jne
dec
and
mov
sub
jp
cmpsl
push
fnsave
xchg
and
dec
ret
or
xor
pusha
push
fs
push
in
dec
outsl
add
cld
jge
push
repnz
aam
sbbb
xchg
jb
mov
mov
add
xchg
imul
mov
je
pop
lods
mov
iret
xchg
cltd
insb
adc
repz
cmpl
sbb
cmp
ficompl
pop
push
jnp
les
mov
int
nop
mov
and
jno
push
mov
movsb
sbbl
add
divb
int3
jg
jmp
sub
rol
out
jnp
and
ret
sub
pusha
pop
sahf
mov
data16
lea
rcrb
outsl
mov
sbb
cmp
fmul
jnp
les
or
dec
cmp
sbb
dec
mov
push
inc
aad
lret
mov
mov
rorb
daa
sbb
lods
xchg
mov
arpl
jae
inc
xor
fmull
mov
jo
data16
je
and
pop
scas
sbbb
leave
and
imul
mov
cli
inc
dec
or
inc
push
jo
sub
add
push
mov
nop
outsb
negb
shrb
bound
cmp
pop
dec
adc
or
push
jmp
sbb
xchg
mov
aas
cmc
xchg
rcll
sbb
clc
mov
xchg
dec
xor
rorb
jnp
pop
pop
xchg
inc
fstp
pop
sbb
mov
orl
cs
into
xchg
cwtl
mov
and
and
push
cmp
mov
out
lret
jno
push
notl
inc
rcr
pop
sbb
fisubrs
sub
push
inc
jp
enter
sbb
xchg
pop
leave
adc
int3
pushf
cld
mov
mov
inc
test
sub
push
insb
mov
cmp
jecxz
shlb
sub
loop
bound
mov
push
and
gs
jg
cli
dec
addr16
orl
je
sti
fidivrs
and
lods
jp
dec
jp
mov
sbb
iret
inc
xor
lea
mov
and
jp
mov
and
bnd
outsb
xchg
dec
rcrb
cld
inc
push
cld
or
es
nop
push
sarl
jp
mov
bsr
lds
loop
mov
pop
into
cld
push
inc
ja
scas
popf
pop
in
fcoms
sbb
and
idivb
out
dec
lret
sbb
in
dec
adc
or
shl
xor
dec
shll
ljmp
lcall
arpl
mov
test
inc
loope
pop
mov
mov
xor
int
je
inc
je
mov
pop
repnz
pushl
leave
adc
dec
punpcklwd
push
jno
push
inc
out
ljmp
pop
outsl
rcrb
inc
mov
pop
mov
push
ds
pop
in
mov
shl
ja
and
cmpb
into
movsb
push
xor
mov
popf
cmpsb
out
fstl
js
xchg
fidivs
dec
sub
add
jnp
pop
jb
dec
cltd
call
push
sahf
sti
pop
and
icebp
mov
mov
mov
push
mov
std
les
iret
or
adc
xchg
push
popa
arpl
ret
push
jp
push
in
adcb
sti
add
mov
mov
ljmp
push
stos
cmpsb
mov
pushl
cltd
fistl
sub
test
sti
or
jecxz
push
sbb
popf
sbb
jbe
cli
lcall
or
mov
clc
addr16
pop
ret
push
scas
mov
popa
xorb
fdivs
and
push
int
mov
sbb
decb
insb
divl
xor
das
ja
bound
xor
sub
pop
andb
push
push
adc
imul
lods
lds
mov
xchg
jl
mov
testl
gs
cmpsb
push
xchg
mov
mov
fsts
sub
or
lahf
inc
mov
fmuls
aad
xchg
cmpsl
stos
add
shrb
test
dec
fisubl
arpl
sbb
lock
or
xchg
or
push
mov
jl
fidivrl
int
out
jbe
cmp
mov
cmp
leave
sub
sub
aam
adc
jle
je
loop
mov
rcr
jnp
cltd
popa
dec
mov
addl
xchg
sub
divl
or
lret
aam
insb
or
push
testb
xor
aad
push
xchg
inc
cli
cmp
jns
mov
das
sbb
mov
outsl
jle
mov
test
sbb
addl
shll
sbb
push
test
movb
aam
lea
ret
pop
jb
xor
icebp
jecxz
xorb
ja
pop
xchg
add
mov
push
inc
dec
cmp
sbbl
xchg
popf
outsb
aam
outsl
mov
mov
enter
add
mov
mov
iret
lahf
xchg
ja
xor
aam
add
add
pop
xchg
rcll
adc
pop
push
sbbb
popa
lods
movsb
jl
xchg
mov
rorb
inc
dec
daa
xchg
mov
xchg
js
in
xchg
mov
daa
shll
sbb
add
cmp
out
in
rorl
cs
test
inc
sarl
outsb
out
ret
jle
test
sbb
adc
inc
add
sub
je
xchg
cmc
sub
or
je
dec
jp
lods
idivl
cmpl
jo
mov
add
ja
das
and
jae
sbb
imul
pop
ds
mov
cltd
outsl
mov
scas
data16
mov
jg
bound
lsl
ret
std
mov
nop
pop
mov
xchg
adc
andb
xchg
dec
test
mov
adc
test
sub
or
or
rolb
mov
stos
dec
call
rcrb
out
xchg
ret
inc
xchg
fildl
js
in
xchg
xor
in
test
dec
sarb
mov
jo
rorb
jae
stos
mov
fs
pop
sub
jmp
mov
out
fildl
xchg
pop
lcall
pop
add
pop
cmpsl
loop
in
fwait
jl
push
scas
lods
xor
push
stos
loop
inc
outsl
imul
and
adc
ja
lea
cmp
sub
jmp
loop
test
mov
daa
pop
cli
out
and
fsubr
ret
je
xor
gs
and
pushf
pop
push
sub
enter
mov
pushf
imul
hlt
add
dec
cltd
jno
jo
das
fsubr
push
jle
sti
jne
mov
fidivs
pushf
adc
outsb
pop
or
data16
sahf
push
cmp
shlb
nop
loopne
faddl
shlb
loop
ja
hlt
rol
xchg
mov
pop
or
testb
add
jle
pop
fistl
add
jle
mov
call
or
aam
or
aad
imul
addps
hlt
sub
push
test
add
lret
cmpsb
xor
aam
fwait
dec
cmp
mov
sti
sbb
jp
mov
jge
mov
arpl
adc
xchg
repnz
lcall
add
sahf
data16
or
mov
aad
sbb
mov
and
insb
mov
xchg
lods
add
lock
ret
xchg
sub
push
add
sti
iret
jp
cmp
loop
sarb
mov
mov
mov
sbb
sahf
dec
mov
adc
mov
mov
lds
dec
ljmp
mov
jnp
ds
dec
jmp
add
out
test
add
dec
leave
adc
int
hlt
pop
push
xchg
xor
xchg
stos
outsb
jp
pop
repz
push
idivb
mov
ss
dec
out
sub
imul
aam
push
cld
int3
inc
push
and
cs
in
xor
bound
pcmpgtb
loope
test
fsubrl
fcmovb
adc
testl
cmpsl
lds
mov
iret
xorl
in
mov
push
mov
mov
cmp
out
ljmp
fs
pushf
insl
rorb
xor
test
xlat
add
xor
lock
mov
cmp
lret
dec
pop
xchg
jae
ljmp
xor
decb
testl
in
cltd
fldl
xchg
shl
addr16
clc
jecxz
lods
pop
pop
cmpl
mov
dec
adc
xchg
mov
push
es
mov
in
cmp
inc
rol
mov
stc
pop
sub
pop
movsl
out
arpl
dec
ja
lret
xorb
pop
into
sbb
sub
dec
jge
jecxz
in
adc
adc
sarl
jae
adc
loopne
js
mov
jae
mov
xchg
leave
cmp
dec
dec
pop
inc
and
lods
push
adc
scas
xchg
sbb
andb
cmp
fsubrl
mov
lock
aad
add
xchg
nop
daa
and
dec
mov
sbb
inc
jae
fwait
xchg
test
in
jo
sub
push
dec
sbb
jnp
fsts
xor
add
stc
inc
mov
add
push
sbb
cmp
aad
js
cmp
ficoms
aas
xchg
stos
cmpsl
div
mov
jge
mov
adc
sub
mov
scas
push
add
imul
xorl
js
jo
mov
mov
fsubrs
pop
jg
in
sub
aas
and
ds
daa
orb
int3
jecxz
test
xor
sbb
out
dec
ja
push
ficoml
stos
mov
sbbb
mov
mov
jno
xor
fsubrl
outsl
xchg
adc
ds
jnp
loope
pop
pop
std
dec
mov
pushf
xchg
fisttpll
aam
add
leave
mov
pop
push
or
mov
jae
dec
adc
hlt
and
or
stc
jecxz
fcmovnu
and
das
leave
mov
sub
cmp
mov
xchg
push
sti
inc
insl
xchg
fwait
add
pop
outsl
popf
lock
xor
ret
push
out
jo
sub
mov
cmp
mov
adc
stos
push
mov
daa
mov
iret
bound
xor
icebp
push
stc
cmp
jno
or
lcall
xor
dec
or
xchg
arpl
pop
jbe
stc
enter
lcall
xchg
fisttpll
mulb
lea
adc
xor
mov
fdivrl
cwtl
aaa
and
mov
mov
test
inc
jns
in
cwtl
notb
pop
bound
iret
xchg
lods
das
outsb
adc
xchg
loop
test
jnp
leave
xchg
aaa
xchg
pop
push
pop
cmp
adc
lock
aaa
push
test
pop
js
pop
lods
ret
mov
fildll
icebp
std
pop
and
push
in
cmp
clc
sbbb
out
pop
test
push
jp
mov
mov
adc
push
mov
fwait
and
test
mov
in
jbe
cmp
imul
fistl
jb
mov
dec
pop
cli
adcl
xchg
sub
xor
xlat
inc
sti
add
or
push
cwtd
imul
cwtl
pop
push
hlt
add
je
or
pop
add
orl
mov
cmp
cld
jnp
insl
push
sbb
scas
xlat
sub
test
pop
mov
repnz
jmp
shlb
push
fdiv
loop
xchg
dec
leave
sbb
clc
cmp
push
jecxz
sti
mov
mov
add
cld
inc
call
mov
lock
clc
mov
daa
out
dec
adc
pop
add
mov
jne
test
push
mov
sarl
iret
out
sub
xchg
pushf
jg
xchg
xchg
cli
cmp
lahf
cmp
pushf
iret
lcall
stos
sahf
xchg
mov
push
sub
mov
sahf
inc
mov
add
push
insl
int
xchg
adc
iret
mov
mov
mov
movsl
cmp
pop
into
es
pop
test
sub
enter
xor
cs
adc
dec
mov
adc
or
push
sbb
mov
sub
.byte
