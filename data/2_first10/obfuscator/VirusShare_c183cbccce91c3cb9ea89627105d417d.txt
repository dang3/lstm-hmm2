decl
adc
add
mov
add
push
mov
fidivs
ja
jmp
sbb
jg
mov
sub
notl
pushl
push
push
push
lea
push
push
call
call
leave
ret
cmp
add
ret
insb
add
push
jecxz
xchg
add
xor
call
lea
push
enter
dec
bound
inc
inc
add
loopne
cmp
sbb
call
push
lock
scas
mov
loope
xor
pushf
pop
mov
aas
jl
loope
lea
mov
push
push
push
outsb
fbstp
push
dec
dec
sbb
lahf
pop
mov
dec
add
mov
inc
lock
decb
popa
call
mov
fidivrs
dec
int3
call
sub
ret
das
pusha
jo
mov
push
push
push
loopne
push
lds
add
ss
aad
int
aas
adc
mov
mov
sarl
ss
enter
fadds
mov
sbb
nop
aaa
dec
inc
sbb
decl
push
inc
add
jne
inc
mov
cmp
or
sub
mov
sbb
add
push
push
mov
in
outsl
rcr
mov
xor
imul
jp
rcrl
xor
mov
adc
cmp
popa
or
adc
push
sar
lock
lock
pusha
xchg
pusha
and
add
cli
in
xor
pop
fisubrl
push
add
push
cltd
push
hlt
lret
add
lods
test
pop
push
jg
push
jne
cltd
or
shll
loopne
inc
cmpsl
inc
xor
push
push
push
push
adc
add
inc
stos
andb
fistpll
cld
cmp
dec
call
push
icebp
mov
push
insl
dec
js
ljmp
ljmp
mov
xchg
fyl2x
add
push
inc
rorb
add
ds
pop
cmp
push
push
dec
out
js
in
jo
cmpsb
cwtl
fmul
inc
mov
icebp
jmp
fisubrl
lret
or
in
push
incl
repnz
dec
pushl
sbb
out
pop
jge
add
incl
add
sbb
sub
add
sbb
mov
out
incl
xor
sub
mov
mov
nop
cmp
loopne
lock
inc
fsubrs
bound
cmp
jo
add
xor
outsb
add
or
adc
dec
shlb
xchg
inc
arpl
or
dec
sbb
jo
inc
add
sub
adc
mov
or
loope
out
dec
inc
pop
add
jb
jl
pop
dec
mov
add
cmp
mov
fimull
xchg
xchg
ja
add
or
add
insl
mov
fwait
or
sti
mov
mov
sbbb
mov
std
dec
mov
mov
cmp
or
sbb
test
mov
repnz
mov
inc
fiadds
add
sbb
rolb
rep
fdivs
dec
jge
xor
inc
mov
push
enter
add
sbb
jmp
mov
inc
lea
mov
mov
aaa
repnz
jb
scas
mov
in
outsl
fisttpl
inc
dec
mov
fisubl
roll
addl
iret
shl
fmulp
jge
inc
fimull
jae
mov
cmp
add
sbb
inc
pop
jb
push
mov
dec
popf
pop
fimull
push
add
mov
dec
mov
cmp
and
cld
imul
ret
decl
cmp
imul
inc
pop
icebp
mov
loope
in
or
popa
jge
jp
pop
mov
aam
push
loope
mov
imul
rorb
rorl
or
jl
mov
xor
adc
add
test
pop
jae
mov
fwait
xlat
jno
sub
mov
pop
rolb
fisttps
mov
add
in
push
in
repz
or
lds
dec
dec
loop
push
iret
fildl
lods
xlat
pop
push
shl
xchg
cmp
inc
lock
aad
addl
leave
mov
xor
xchg
sub
sar
push
push
test
pop
xchg
popa
jnp
repnz
and
lds
or
dec
xor
push
lea
sbb
adc
adc
fwait
and
fs
movq
or
dec
lret
insl
cmp
cmp
push
stos
push
inc
or
aam
xchg
loopne
shll
je
mov
in
add
arpl
rorl
cmp
enter
iret
cmpsb
pop
shr
mov
push
jae
xchg
scas
loopne
mov
push
sbb
mov
fdivs
pop
jo
mov
mov
lcall
cld
or
push
adc
ja
pop
or
add
dec
sbb
jbe
je
xchg
dec
fcmovnu
dec
inc
xchg
mov
mov
xchg
pop
cmpsb
and
sbb
or
in
add
xchg
fbld
xor
jae
jecxz
subl
cmp
sti
insl
lahf
test
sub
stc
xor
pop
add
sbb
mov
and
aad
jae
icebp
xlat
xor
mov
xchg
adcb
xor
pcmpeqb
push
add
iret
or
xchg
add
mov
int
and
cmpsb
dec
mov
rcrl
test
aas
push
and
mov
sbb
test
fisubl
adc
sbb
push
test
bound
cmp
shrl
mov
mov
popa
or
sub
push
dec
mov
and
addl
sbb
addl
jp
stc
les
dec
scas
mov
jae
dec
mov
movl
push
xchg
or
loope
stc
jl
jo
or
dec
rcll
shl
mov
icebp
push
push
add
mov
mov
leave
stos
lret
xorb
xchg
lods
lret
mov
sub
push
cmp
bound
out
enter
add
cli
aam
adc
cs
mov
mov
lds
sbb
and
mov
push
mov
repnz
jl
dec
mov
insb
or
repz
xor
repnz
and
aad
xchg
pop
mov
das
jecxz
into
sbbl
in
mov
movsl
dec
mov
lock
jl
xchg
inc
fisubrs
push
ret
xor
rolb
cli
je
test
fbstp
shr
adc
dec
fs
pop
xchg
push
movsl
fs
xchg
mov
das
call
jge
dec
and
sbb
mov
rorl
pop
aam
add
aam
dec
push
sbb
lds
sbb
inc
sbb
mov
roll
sub
inc
push
insb
scas
or
jp
xchg
push
in
fnstenv
loope
lods
leave
subl
xchg
rolb
mov
ja
mulb
lcall
mov
in
lds
mov
push
lret
mov
xor
out
scas
mov
add
cmpb
push
popf
arpl
popl
xor
lea
cmp
in
inc
or
jno
push
cmp
test
mov
je
rorl
adcl
arpl
adc
xchg
idivl
cltd
dec
sbbl
xchg
adc
or
outsl
mov
jge
add
sub
in
mov
push
jecxz
and
cli
pop
dec
daa
std
adc
pop
addb
ds
rol
pop
out
cmpl
jne
cwtl
test
int
dec
nopl
das
int3
sub
outsb
xchg
lea
xor
andnps
inc
mov
cmp
ja
jo
sbb
outsl
dec
xchg
nop
pusha
pop
xchg
popa
xchg
inc
jo
daa
push
stos
idivl
enterw
sbb
pop
xor
lea
inc
rcl
int
movsb
movsb
adc
aas
imul
mov
call
cltd
sub
pop
xor
stos
mov
enter
nop
lret
push
loopne
rorl
push
pop
mov
loopne
dec
xor
addb
sbb
mov
add
addr16
stos
orb
push
dec
xrelease
xchg
test
mov
jne
mov
sub
sbb
in
jg
inc
adc
and
loope
cld
ljmp
enter
movsb
nop
stos
jg
mov
or
pop
or
sbb
or
inc
cmpsb
add
jne
cmp
mov
adc
mov
sub
jl
push
les
jns
and
add
hlt
mov
mov
cwtl
call
jne
and
adc
into
cmp
cmp
push
xchg
xchg
or
push
jge
pusha
loope
add
test
mov
mulb
mov
enter
cmp
push
mov
sub
jb
fsts
xchg
in
pop
js
adc
shll
mov
and
xor
inc
pop
lods
jno
les
inc
lret
mov
ret
repnz
in
mov
outsl
mov
cmp
arpl
add
inc
inc
jno
addr16
inc
add
adc
mov
push
push
cmp
add
and
adc
push
out
lds
adc
xchg
add
test
pop
repnz
add
nop
imul
add
ss
and
ja
nop
out
push
call
xor
ror
or
rolb
sub
xchg
dec
jmp
incb
insl
les
shll
jnp
imul
push
pop
outsb
std
push
fwait
loop
mov
sub
inc
pop
adc
mov
adc
aam
jmp
fnstcw
icebp
cmp
in
push
in
inc
xlat
test
pushf
mov
push
clc
mov
mov
pop
lods
dec
cmp
lcall
fisubrs
mov
add
inc
and
mov
add
mov
aam
dec
and
mov
xchg
mov
inc
test
push
fiadds
std
cmp
leave
jne
or
dec
xor
data16
jle
pop
rclb
add
dec
sti
add
sub
aad
jbe
jae
mov
inc
std
jmp
stos
dec
cmp
xor
ret
pop
aam
cwtl
and
mov
jmp
arpl
or
nop
mov
lock
dec
dec
in
add
mov
push
xor
mov
movsb
or
stc
pushf
out
cld
sub
cmp
push
add
add
add
test
adc
jno
mov
jecxz
inc
stos
orl
leave
pop
adc
je
mov
leave
jno
shlb
push
daa
xchg
rorb
dec
lods
xlat
addb
cmpsl
xor
xchg
mov
add
pusha
je
add
and
xchg
or
shl
mov
and
push
dec
mov
and
mov
xchg
xchg
mov
push
add
lds
sbb
mov
jns
mov
mov
out
pop
xchg
mov
push
or
push
pop
push
dec
in
lahf
push
pop
inc
ret
jnp
stos
xchg
in
lret
repz
adc
fnstsw
ja
and
aaa
xor
sbb
jecxz
subl
movsb
sbb
inc
mov
sbb
icebp
test
mov
fcomip
pop
incb
shrb
ffreep
popl
or
push
insb
push
fdivr
push
pop
sbb
dec
push
mov
xchg
lea
xchg
adc
mov
daa
lock
push
or
scas
xor
push
push
cmp
shll
adc
in
sbb
pop
push
fdivrl
xlat
fidivrs
push
clc
push
inc
in
clc
or
inc
and
mov
dec
push
mov
pop
add
jmp
data16
dec
mov
add
sbb
sub
xor
testl
dec
push
ss
adc
insb
sarl
arpl
hlt
push
pop
daa
popa
inc
dec
mov
arpl
jge
xchg
and
add
arpl
cli
inc
add
paddusb
hlt
hlt
add
imulb
clc
mov
aam
jbe
ss
sbb
sub
outsl
pop
pop
nop
clc
sub
lock
dec
push
adc
mov
dec
add
lret
mov
mov
dec
jae
dec
adc
inc
mov
out
xchg
sbb
adc
push
sub
sarb
push
dec
sbb
pusha
pop
push
lcall
dec
inc
push
push
pop
cmp
push
cli
sti
cld
jecxz
out
insb
push
bound
dec
sub
inc
leave
sbb
pop
das
inc
mov
and
fsubl
aad
jno
and
loope
cmp
popf
inc
jne
jns
sub
int3
andb
ret
clc
icebp
push
jp
popa
sub
xchg
das
push
jecxz
add
mov
dec
push
and
fisttpl
inc
movsl
icebp
jg
xorl
push
mov
push
test
pop
divl
hlt
lods
xchg
pop
aad
movsl
adc
sbb
push
or
aaa
lret
outsl
inc
jecxz
cmpsl
addr16
inc
sub
pop
mov
cld
mov
leave
xor
push
dec
movsl
popf
in
push
stos
cmp
movl
das
add
fwait
inc
inc
inc
jno
adc
addr16
mov
push
lods
hlt
add
push
mov
push
addr16
mov
or
add
add
sbb
inc
js
push
dec
pop
inc
or
test
inc
pop
jmp
jo
dec
repz
inc
dec
lcall
mov
xor
add
push
or
inc
rorb
add
imul
ss
sahf
aad
push
ds
inc
push
ss
and
add
dec
add
add
mov
inc
inc
jns
add
inc
enter
lods
cmp
lahf
xchg
andl
xor
push
sub
insl
pop
xor
push
lahf
cmpsb
or
add
xor
scas
or
enter
dec
stos
call
icebp
dec
mov
sub
add
jmp
sub
jg
adc
inc
xor
adc
dec
inc
rolb
or
mov
cld
sbb
jo
push
cmp
dec
jmp
mov
pusha
xor
insl
mov
inc
insl
inc
cli
push
clc
cli
scas
movsb
arpl
inc
mov
mov
or
xchg
andl
hlt
fsubrl
ss
dec
fld1
ficomps
xor
xchg
inc
and
jecxz
es
xchg
pop
push
push
js
push
push
add
lds
mov
ds
incl
ficompl
enter
sub
movl
xchg
ja
and
js
adc
push
rclb
clc
or
xor
popa
es
jecxz
mov
push
fmul
ret
add
dec
adc
pop
sub
dec
jmp
cmovne
imull
push
and
clc
push
test
push
jno
xor
cmp
inc
outsb
push
or
adc
xor
sbb
test
xor
loope
mov
shll
dec
js
cmp
mov
pop
sbb
jae
popa
lds
and
mov
or
int3
dec
push
add
inc
cmp
xor
dec
bound
add
mov
or
call
xor
sbb
test
or
arpl
imul
mov
decl
outsl
jo
jns
add
daa
fidivrs
push
dec
dec
cli
mov
dec
push
push
dec
adc
fwait
push
fbstp
pusha
inc
repz
ret
sub
pop
sbb
insb
data16
pop
test
jbe
mov
dec
add
fcomps
or
mov
pushf
cmovno
dec
jnp
cmp
pop
push
sub
ja
jae
jle
sub
xor
mov
mov
and
xor
mov
pop
push
adc
push
in
fisubrs
gs
lret
jb
add
dec
lock
js
jge
dec
in
ret
inc
call
mov
dec
dec
sbb
adc
mov
inc
adc
test
sub
inc
sub
sub
sub
mov
lock
ja
fisubrl
scas
fsubrs
sub
aam
or
inc
push
mov
push
hlt
or
push
leave
add
adc
and
cmp
xchg
jp
mov
mov
ja
and
or
pop
ret
adc
stos
mov
arpl
out
aaa
dec
dec
xchg
roll
lret
ljmp
sbb
inc
sbb
adc
mov
cmp
aaa
ret
inc
push
inc
jecxz
daa
inc
mov
pop
jp
cld
sbb
aaa
je
push
add
add
je
insl
out
pop
adcl
out
mov
gs
xchg
fisubrs
dec
mov
arpl
sub
mov
sbb
outsl
sbb
stos
ss
dec
xor
inc
push
std
into
imul
push
jg
pop
adc
shrl
out
jae
cmp
ljmp
pop
cmpsl
lea
clc
mov
stos
push
cwtl
aaa
mov
sub
sub
push
inc
cmp
push
test
pop
mov
xchg
roll
shll
xor
aas
leave
push
dec
inc
adc
mov
test
daa
mov
sub
inc
xor
dec
adc
dec
push
jne
out
xchg
es
push
jb
inc
jae
outsb
adc
and
fdivl
add
pop
xchg
add
imul
lcall
clc
arpl
xor
mov
test
test
dec
bound
call
pop
rorb
shrb
push
pop
add
pcmpgtb
ds
leave
cmp
xchg
daa
insl
or
jb
enter
icebp
and
dec
mov
dec
mov
cmp
inc
je
je
sbb
enter
rclb
dec
inc
inc
jbe
add
push
inc
cli
loop
out
lods
incl
dec
insb
insb
hlt
pop
icebp
jbe
or
cmpsb
inc
dec
cmp
imul
out
pop
mov
push
movsl
sbbb
js
inc
das
inc
sbb
cmpb
adc
dec
add
sbb
jo
cli
leave
loope
mov
cmp
inc
xor
jg
push
add
add
icebp
sub
sbb
cld
out
add
aas
push
add
inc
dec
sub
lahf
lcall
sub
dec
push
dec
add
fiadds
add
cmp
pop
and
rorb
je
sub
dec
sub
push
xor
jo
ljmp
dec
push
sub
fisubs
jns
add
push
sub
push
pop
mov
cli
sbb
sub
pop
mov
insb
in
sbb
cmpl
push
pop
ds
sub
push
outsb
jl
inc
adc
add
add
sub
aad
cmp
xor
push
adcb
mov
dec
cmp
jb
cmp
xchg
mov
add
int
jo
cmp
dec
xor
cmp
jbe
cmc
mov
cmc
pop
cmp
push
leave
inc
cmp
ffree
icebp
test
push
pop
mov
loope
jbe
rcll
jbe
lret
dec
leave
and
push
or
enter
je
add
adc
lock
loop
mov
inc
or
into
inc
sub
dec
aas
shll
fs
mov
loopne
jbe
push
push
pushf
push
dec
sbbb
jg
ret
inc
ja
insl
movl
push
cmp
not
jns
sub
dec
mov
mov
shlb
jp
test
inc
mov
push
addr16
push
or
ret
add
mov
mov
cmp
dec
enter
aaa
jb
bound
jg
imul
dec
dec
mov
pop
pop
xchg
in
aam
mov
dec
arpl
mov
gs
cld
or
sub
jo
movsb
xor
or
sbb
push
push
cld
fildl
lds
add
pusha
in
push
dec
mov
push
insl
cmpsb
dec
jo
inc
dec
push
jmp
dec
dec
push
push
imul
push
pop
in
push
popf
out
adc
xorb
roll
roll
mov
nop
out
push
xor
fcoml
pop
shlb
mov
jae
jge
sub
lahf
inc
jbe
inc
in
dec
subl
fadds
push
push
or
push
movsl
cld
add
andb
push
sub
adc
jle
inc
and
sub
insl
dec
dec
push
inc
bound
xor
fists
pop
fs
dec
push
xor
inc
sub
pop
test
ljmp
sar
pop
sbb
cmc
imul
rcll
add
push
fisubs
or
and
test
sbb
sbb
dec
js
cmp
imul
xchg
mov
dec
push
in
pop
or
or
cmp
lcall
dec
xchg
pusha
addl
xor
inc
mov
push
add
cmpsl
subl
aad
rcr
in
popf
inc
mov
push
jp
lock
add
es
xor
insb
xor
or
xor
dec
int3
insl
pop
jmp
push
inc
pusha
sbb
js
add
add
inc
outsl
xchg
or
xlat
dec
jge
into
lret
push
nop
xbegin
data16
shll
xchg
sub
fs
add
add
rcrb
jae
sub
push
jecxz
mov
ds
icebp
dec
pop
add
pop
jmp
dec
dec
pop
pop
rclb
xor
ljmp
cwtl
je
push
mov
jne
outsl
jp
pop
test
sbb
push
data16
add
sub
arpl
insb
adc
inc
orl
inc
xor
xor
test
in
inc
jo
bound
enter
iret
scas
addl
icebp
clc
and
into
add
push
cli
pop
pop
inc
push
lock
aaa
gs
lock
mov
outsb
ljmp
insl
es
sbb
dec
dec
gs
loopne
dec
jbe
hlt
int
xor
add
push
push
sbb
mov
es
sbb
addl
xchg
je
inc
and
sbb
aaa
sbb
data16
in
test
lds
xor
mov
sbb
dec
aaa
outsb
push
fs
xor
add
scas
dec
add
js
add
pop
leave
add
shrl
fs
call
or
addl
imul
jne
push
jno
and
shl
js
push
inc
jecxz
ficoms
ret
adc
mov
push
xchg
add
pop
aam
cmp
pop
jno
add
inc
lods
clc
loopne
lea
xor
pop
aas
mov
adc
sub
dec
ja
je
ljmp
pop
pop
loopne
sub
sbb
sub
add
push
jmp
mov
adc
mov
pop
jns
jne
and
pop
push
push
out
aad
fs
mov
jae
dec
test
inc
mov
aam
ds
sti
stos
jns
jmp
icebp
dec
addr16
mov
aad
cmp
jb
xor
lock
push
xchg
and
inc
xor
mov
dec
xor
xchg
in
scas
add
xchg
adcl
fidivs
xor
shll
pop
outsl
pushf
dec
pop
push
push
sub
jle
inc
push
arpl
and
pop
cmp
into
jns
mov
cmc
fidivl
adc
and
lock
popa
jp
clc
jg
jmp
inc
push
popa
insl
dec
jne
iret
mov
or
adc
jns
inc
test
mov
addb
or
push
popf
dec
loope
add
imul
aam
test
inc
inc
rclb
dec
sbbb
push
inc
jns
aaa
outsl
jbe
inc
decb
pop
push
push
aaa
fs
call
repz
out
and
ret
cmp
push
adcb
daa
xchg
fnstcw
dec
lock
cmp
inc
imul
shll
pop
test
push
push
push
xlat
arpl
dec
mov
inc
test
ljmp
push
in
push
call
add
jmp
popa
gs
push
xor
add
adc
out
cmp
add
inc
mov
nop
jae
mov
push
sub
ljmp
push
sub
test
cltd
push
xorl
test
cmp
cmp
or
jo
addb
inc
push
sbb
aas
push
sub
jno
dec
les
push
scas
mov
or
ss
pop
cmp
arpl
adc
repz
mov
sub
xor
pusha
xor
ret
popa
insb
add
loopne
lea
push
std
mov
add
pop
pop
je
stos
lahf
negl
push
subl
push
add
xor
stos
cmp
hlt
hlt
add
push
pop
pop
or
in
push
das
xor
xchg
xchg
fwait
add
sub
int3
ret
clc
inc
and
jo
cli
sub
popa
aad
inc
mov
dec
fidivl
inc
insb
adc
es
adc
ss
test
mov
sti
add
mov
rcll
push
push
lds
jg
cmp
cmp
shrl
jg
or
and
repnz
sub
push
es
xor
lock
jo
lock
push
pop
aaa
push
add
fistpl
push
push
xor
push
or
cli
cwtl
inc
pop
xor
inc
lods
shlb
dec
push
pop
xor
add
inc
add
insl
push
dec
mov
pop
add
mov
insb
test
xor
dec
mov
or
and
mov
repnz
loope
add
imul
ss
push
hlt
mov
or
cmp
pop
pusha
and
mov
xchg
lods
dec
push
jo
in
xadd
sbb
fs
push
dec
in
push
pop
xor
jo
shl
sarb
pop
lock
fsubr
add
fdivrs
push
cmp
cmp
incl
div
cmp
adc
je
leave
jae
dec
dec
push
bound
mov
mov
pop
pop
sbb
pop
pop
xchg
movl
js
lea
jbe
and
jns
arpl
sbb
dec
sbb
les
adc
pop
jmp
hlt
dec
cwtl
push
jae
je
push
scas
rorl
push
xor
stc
dec
add
push
dec
xchg
outsl
and
push
pop
xor
mov
fs
push
fwait
loop
jecxz
lock
cld
orl
push
loop
adc
add
jae
xor
xor
bound
add
pop
or
pop
push
inc
mov
gs
xor
insl
cld
inc
xor
scas
sub
xor
adc
dec
arpl
push
cmp
xor
pop
push
std
lcall
sbb
mov
sub
add
push
roll
and
mov
lock
cmp
xor
push
mov
sbb
ret
fldt
jns
sahf
repz
cmp
xchg
jns
pop
adc
inc
jae
dec
add
pop
fidivrs
cwtl
outsb
push
outsb
jmp
loopne
addb
dec
add
cmc
lock
push
loopne
data16
adc
and
cmpb
repz
mov
ja
add
push
add
sarb
and
mov
sub
add
xor
iret
push
ds
dec
add
cli
outsl
arpl
adc
mov
out
aaa
adc
jbe
mov
pop
hlt
leave
cli
adc
loopne
iret
dec
xchg
push
je
cmp
sub
push
pop
add
jo
ja
pop
sbb
sub
adc
pushl
inc
ret
adc
dec
movsb
sub
adc
inc
cld
movups
push
add
pop
ret
cmp
in
cmpl
jne
cmp
sub
adc
ljmp
into
mov
inc
add
mov
call
lods
xchg
xchg
data16
mov
imul
cmp
lock
dec
push
push
sbb
arpl
and
ret
cmp
push
add
sub
ret
mov
rclb
jo
push
enter
loope
js
inc
add
stos
ja
dec
lds
mov
xor
divb
xor
orb
mov
jp
or
popa
sub
push
and
in
pop
add
push
inc
jae
push
lods
sbb
push
lahf
push
jae
outsl
push
addr16
pop
movsb
insb
add
cmp
pushl
stos
mov
ljmp
push
jmp
enter
je
out
andb
ja
fs
add
sbbl
mov
test
outsb
cmp
dec
js
or
sbb
negl
push
xchg
sbb
addl
leave
stos
cmp
cmp
inc
in
sub
shrb
jns
push
pusha
inc
insl
push
dec
mov
mov
shr
push
jae
adc
mov
sub
sbb
cld
push
mov
pop
out
popf
jecxz
push
rol
jg
xlat
or
sbb
lahf
popa
jecxz
jne
addr16
movsl
sub
add
xchg
or
cld
outsl
jg
jle
xor
sub
mov
dec
inc
and
jbe
enter
pop
je
dec
fmuls
arpl
cld
cwtl
dec
inc
xor
adc
xor
out
cmp
mov
add
int
dec
jb
ds
xchg
jp
jae
lods
push
jb
jp
fs
sub
mov
je
sub
add
adc
add
add
add
mov
cmp
dec
dec
fadd
dec
dec
dec
push
sbb
mov
fidivs
jg
jl
aam
adc
sbb
inc
sbb
dec
inc
lcall
inc
adc
push
and
jl
nop
inc
xor
fs
dec
mov
adc
inc
adc
sub
adc
push
inc
aaa
js
out
ljmp
out
dec
inc
add
dec
mov
add
std
jg
inc
xor
push
dec
add
mov
mov
push
sbb
and
fsubs
fsubrs
sub
mov
jle
sbb
sub
sbb
imul
das
push
ljmp
push
out
or
mov
dec
sbb
inc
popa
dec
dec
pop
push
mov
xor
popa
dec
sub
cmp
mov
xor
iret
add
sbb
add
mov
add
sbb
add
bound
sub
adc
mov
js
imul
sub
pop
shlb
popa
jl
loopne
int
iret
push
lods
fadds
sub
pop
push
sub
inc
cmp
add
iret
add
inc
push
sbb
mov
test
add
jno
push
jg
or
mov
neg
add
lret
jl
jno
ss
sub
mov
mov
js
dec
jno
cmp
mov
inc
lock
sbb
push
jae
inc
jo
adc
outsb
mov
dec
dec
addb
sub
sbb
add
adc
xor
mov
dec
int
repnz
dec
cld
push
sub
shrb
sbb
xchg
inc
jo
pop
lock
cmp
push
push
xor
dec
inc
dec
push
push
mov
xor
push
es
jae
inc
out
add
add
stos
mov
dec
insb
cmp
xchg
add
pop
and
mov
xor
shrb
lds
sarl
adc
or
leave
test
int3
clc
jbe
pusha
sbb
dec
inc
xor
sbb
and
jbe
sub
pop
scas
inc
add
out
inc
fsubrs
cld
enter
push
cs
push
mov
push
adc
xchg
sub
popa
sbb
xchg
dec
add
fstl
jge
add
sbb
pushf
inc
aam
inc
or
dec
cli
mov
popa
pop
ret
push
mov
andb
sahf
adc
movsl
mov
dec
cmpsb
pop
jo
dec
or
pop
inc
pop
cmp
pop
je
clc
jl
push
insl
hlt
and
sti
inc
adc
xor
dec
faddl
sbb
jl
cmpsl
rclb
dec
dec
dec
xor
stos
idivb
stos
lds
outsl
add
push
mov
jno
in
mov
lock
icebp
dec
pop
pop
push
shr
jbe
bsf
or
sub
xchg
jo
add
sub
push
mov
cmp
mov
lock
inc
add
lret
inc
leave
bound
cmp
sub
mov
clc
test
jp
in
aas
xor
inc
jno
adc
cmp
pushf
inc
mov
xor
add
sub
mov
jmp
dec
aaa
loopne
daa
sub
pop
stc
out
jge
add
jo
sahf
pop
add
bound
ja
jg
add
or
jns
push
inc
pop
mov
cltd
std
add
or
xor
add
jge
add
or
sti
xchg
fistpl
decb
push
loope
in
inc
add
lds
jbe
pushl
and
in
loope
adc
push
pop
aad
cld
fs
jbe
jg
sbb
xchg
inc
pop
nop
mov
lret
xchg
fdivl
ljmp
mov
cltd
mov
or
scas
mov
pop
inc
dec
mov
add
inc
xchg
cmp
xor
mov
insl
dec
mov
cmp
nop
in
add
rcll
in
movsb
cmp
pop
fwait
mov
clc
pushl
fnstsw
lock
je
pop
ss
in
movsl
sti
cmpl
pushf
sbb
daa
and
loope
xorl
cmpsb
ljmp
lods
add
xchg
popf
cmpb
cmc
lahf
or
rcrl
mov
aam
pusha
jle
jae
std
pop
cwtl
dec
fldl
psadbw
cmp
or
fcmovnb
lods
std
out
jne
pusha
sbb
loope
shl
add
hlt
xchg
aaa
or
lcall
shll
jecxz
cmp
dec
add
rorb
cld
popf
shrl
mov
stos
dec
pop
rcrb
jg
jg
repz
cmp
xor
ret
jp
mov
fs
fistps
push
mov
stos
test
and
out
das
pop
add
mov
pop
push
or
out
pmaxsw
lcall
inc
or
ret
pushl
mov
aas
std
dec
xchg
lahf
mov
mov
rcr
incl
mov
xchg
push
adc
push
push
lret
mov
insl
add
repnz
jmp
inc
jg
clc
jns,pt
dec
ss
mov
push
popf
cwtl
cli
ret
pop
mov
or
push
adc
out
cmp
dec
mov
mov
rclb
movsl
and
jbe
or
jle
and
cmp
ror
jp
or
std
inc
out
mov
addl
aaa
jge
dec
push
jnp
pop
icebp
into
ret
ds
out
add
outsb
pop
and
into
jp
shrl
out
jo
xor
call
dec
cmp
jp
into
add
jae
iret
dec
mov
mov
mov
enter
stos
mov
push
sbb
xorb
lock
incb
inc
sub
xor
shl
in
out
out
out
int
jmp
push
push
push
push
sbb
push
and
jecxz
loopne
sub
sarb
pop
mov
push
push
outsl
mov
dec
mov
decb
into
stc
mov
fidivrl
inc
cmp
jg
xor
push
xlat
xlat
stc
cli
cmp
shr
out
ja
pop
imulb
inc
sahf
add
xchg
jnp
mov
and
adcl
pop
pushl
in
icebp
ja
test
pushf
add
or
xchg
lcall
dec
or
stc
loopne
loopne
xchg
pusha
dec
into
lea
mov
jbe
mov
stc
fcomps
or
jbe
clc
cmp
pushf
push
sbb
sub
and
dec
and
pop
lods
mov
push
pop
mov
xor
or
jae
ljmp
xchg
mov
cmpsl
test
addr16
push
lcall
sub
jae
test
inc
inc
mov
stos
pop
cmp
jg
push
repnz
mov
int3
sbb
sub
add
mov
and
hlt
mov
cmp
ljmp
sub
idiv
aas
mov
into
dec
sbb
loopne
cmp
cwtl
in
jp
insb
rorl
xor
popf
mov
jg
cmpsb
jle
jo
add
mov
sahf
and
aaa
outsl
jnp
rol
loope
int3
sub
xor
arpl
ds
push
xlat
mov
nop
loop
mov
xchg
std
aas
jmp
xor
adc
adc
fcom
cs
adc
adc
sbb
jg
outsb
dec
es
testl
std
inc
insl
jmp
fcomps
sub
outsl
jo
loopne
push
pushl
xchg
cmp
inc
add
xor
cmp
sub
lcall
arpl
cmp
andb
inc
mov
push
xchg
cmc
ja
addr16
fwait
jae
xchg
sub
jg
std
jg
push
push
test
push
inc
shrl
add
test
jecxz
sarl
cmp
mov
mov
pop
clc
push
add
lea
or
jg
cmpsl
cli
jg
and
adc
inc
adc
arpl
loope
aam
push
pusha
jge
lcall
xchg
pop
add
pop
mov
adc
and
loopne
scas
pushl
pop
mov
test
jmp
aas
or
lcall
shrb
dec
cmp
sbb
mov
js
out
call
fcompl
mov
iret
add
mov
jmp
loopne
jecxz
cmp
test
cli
mov
pusha
dec
fistl
adc
cld
lods
jl
sbb
mov
imul
fdiv
in
lret
js
std
add
sbb
jns
cmp
pop
inc
jge
mov
sti
js
nop
xchg
dec
add
add
xchg
popf
or
sub
je
stc
out
repnz
fwait
cmp
pop
pop
cmp
fcmovnbe
add
push
idiv
loopne
clc
ror
inc
out
jg
push
and
flds
push
cld
add
xor
shl
sub
mov
lea
pop
add
fs
xor
sub
xor
push
jl
dec
loopne
mov
sub
pop
lods
mov
filds
lcall
xchg
or
push
lock
mov
nop
pop
shr
call
jmp
mov
ja
lea
leave
rol
mov
add
push
cld
pop
stos
sbb
jbe
mov
mov
adc
jle
enter
in
sbbl
pop
jnp
mov
outsb
push
movsl
push
cmc
out
sti
fisttps
adc
cli
iret
xchg
add
jle
mov
mov
mov
out
repz
xor
lods
jp
mov
mov
out
fsubl
xchg
es
mov
inc
xchg
sbb
cmp
std
fsubrs
push
divl
fnstsw
repnz
or
cmp
cltd
cwtl
push
push
pop
outsl
sub
dec
dec
sub
jmp
in
fmuls
sub
jnp
mov
xor
push
mull
cmp
repnz
push
sbb
xchg
or
push
mov
pop
add
jecxz
add
repz
cli
test
int
fisttps
mov
pop
fisttpll
ja
pop
lods
lods
pop
dec
inc
jmp
sti
cli
lahf
mov
push
imul
jp
pushl
adc
lods
inc
aad
lock
sbb
imul
out
in
dec
jns
sub
jecxz
mov
decl
xor
lock
jno
inc
pop
pop
pop
call
das
xchg
sbb
stc
fiaddl
lcall
nop
xchg
dec
shlb
sbb
outsl
xor
jp
sbb
mov
lock
fnstsw
insb
xchg
aad
lahf
lods
push
inc
inc
inc
inc
push
cmp
sub
mov
sub
add
push
out
clc
add
insl
enter
mov
fdivrs
div
iret
loopne
sbb
icebp
fidivrs
pop
dec
push
inc
add
decl
ds
inc
out
lods
sub
icebp
fstl
outsl
or
sub
cld
jg
ss
mov
mov
mov
jno
add
dec
rcl
adcl
adc
adc
jmp
and
lcall
pop
xchg
dec
or
xchg
sar
cmp
cli
sbb
sbb
cmp
adc
mov
in
mov
stos
push
jo
fstl
xchg
lsl
sar
cli
sbb
xlat
mov
mov
adc
fcmovb
adc
mov
out
aam
rorb
rorl
nop
fistpll
clc
call
cwtl
loopne
call
ds
add
mov
out
fisubrs
movsl
mov
pop
xor
test
mov
push
ror
push
ja
mov
inc
push
jmp
dec
push
stos
jmp
cli
inc
xchg
loopne
popf
cld
in
sbb
lea
jle
inc
addr16
clc
ss
sar
in
bound
jg
lahf
ret
leave
data16
mov
pusha
das
ret
adc
loope
pop
inc
add
mov
iret
mov
jecxz
mov
and
xchg
jmp
je
out
or
sahf
out
mov
push
jo
pushf
mov
in
insl
outsl
cmp
push
test
mov
lock
lock
add
add
je
pushf
fwait
xchg
jecxz
out
out
outsl
cmc
inc
xlat
sub
repnz
add
sbb
popf
lea
cmc
dec
test
add
dec
inc
andl
mov
fcmovnbe
neg
push
and
dec
aas
push
stos
jbe
and
aaa
clc
iret
or
mov
cli
mov
mov
pop
inc
push
jg
inc
xchg
ljmp
add
std
stos
call
std
jmp
lods
rclb
loope
add
xor
fs
add
push
imul
subb
cmp
or
dec
mov
pop
movsb
ss
and
fcomp
dec
loopne
jnp
out
repz
fisttps
add
cmova
sbb
pop
jge
lahf
dec
jns
lods
into
sbb
out
jb
popa
lods
out
dec
mov
mov
add
ret
bound
repnz
jle
stc
xchg
in
into
clc
push
out
mov
lret
mov
xchg
cwtl
add
decl
pusha
loop
mov
rcr
pop
add
sti
movl
ret
xor
bound
gs
aas
or
jg
sbb
jbe
push
push
or
xchg
lahf
mov
xchg
loopne
xchg
adc
ret
push
incb
mov
jne
mov
mov
lock
cmp
pop
fstpl
std
loopne
cmp
pop
jne
imul
mov
dec
fcmovnb
pop
and
lret
sbb
pop
xchg
in
jg
pushl
xor
aaa
xor
popa
push
repz
xor
out
std
mov
cmpsb
inc
addb
jl
sub
push
add
out
icebp
lock
or
inc
dec
push
pop
dec
std
sar
ss
aad
neg
shr
inc
sbb
mov
out
xor
call
inc
adc
in
std
sbb
jbe
fldcw
lock
sti
hlt
xchg
mov
jge
test
fldl
sbb
iret
or
mov
cld
xlat
fdivs
jno
xchg
pushl
lods
cs
sub
stc
outsb
int
lods
jmp
add
mov
add
inc
rorl
sti
pop
lock
pop
inc
dec
gs
into
push
icebp
fldl
jg
repnz
int3
les
push
bound
jecxz
pusha
stos
mov
repz
decl
data16
sahf
add
dec
sbb
mov
and
xlat
andl
jg
repz
push
jo
xor
clc
into
mov
cld
jno
jl
push
jle
or
icebp
jg
jle
mov
test
dec
je
add
xchg
roll
mov
mov
aam
iret
icebp
pop
cld
aas
push
ret
mov
daa
jns
fcmovu
sub
ja
pusha
arpl
decb
aam
sbb
ffree
mov
lret
shlb
xchg
sbb
xor
mov
testb
fcomip
xchg
scas
jp
mov
sbb
jmp
lock
cmp
data16
inc
dec
push
or
cmp
aad
adc
pushf
lock
sbb
je
pusha
inc
jge
ljmp
pushl
dec
adc
scas
out
jecxz
decl
ret
add
sarl
mov
jnp
sbb
xor
jnp
lahf
lret
adc
adc
jg
icebp
push
es
xor
rol
pop
mov
sahf
aad
mov
adc
sbb
test
sub
iret
std
add
imul
mov
mov
adc
repz
jg
fs
mov
xchg
mov
or
loopne
and
mov
inc
aaa
std
cmpsl
aam
xchg
xchg
mov
cltd
aad
sub
mov
mov
sbb
mov
lret
jns
jg
mov
ja
or
sbb
js
pop
mov
xchg
and
dec
jmp
addl
iret
stc
jecxz
fistps
fisttps
inc
fxch
fldenv
nopl
ret
lds
lock
std
movl
test
adc
mov
jg
test
loop
dec
cld
push
mov
mov
xlat
lods
cmp
das
cwtl
sbb
cmp
daa
mov
es
lcall
jg
xchg
cwtl
inc
jne
lret
scas
ficompl
test
sbb
jl
pop
jo
stos
das
xlat
mov
loopne,pt
sti
ljmp
jne
aad
xchg
jbe
rcr
fnsave
inc
repz
stos
into
cmp
pop
lds
mov
out
out
cld
sbb
mov
jnp
loop
cmp
icebp
arpl
mov
decb
pop
xchg
test
jge
adc
das
insb
fcom
hlt
rorl
notb
xor
insb
imul
xor
add
notb
jl
push
pop
mov
rorl
ret
int3
das
xchg
jg
cmp
mov
ret
int3
add
scas
mov
ja
popa
mov
xchg
xchg
dec
adc
lods
mov
jb
shll
sti
daa
ds
clc
pop
imull
shlb
mov
add
sub
xchg
cmp
mov
std
loopne
cld
lahf
pop
sbbl
out
or
dec
jmp
sub
insl
push
in
pop
sub
mov
mov
jg
xor
dec
xchg
jmp
mov
hlt
push
mov
ljmp
stos
push
or
mov
in
inc
inc
xchg
jmp
lock
xchg
loope
je
loop
aaa
sar
cmp
inc
pusha
in
mov
adc
adc
arpl
ss
shrl
lock
aaa
cmp
insb
call
outsl
sbb
cli
stc
jge
jge
add
add
sub
mov
std
and
out
dec
in
push
js
in
and
jmp
dec
filds
mov
in
inc
dec
lcall
pop
aad
ret
out
mov
outsb
dec
xchg
cwtl
xchg
ret
mov
fwait
stos
out
out
jg
incb
hlt
mov
in
inc
adc
xchg
filds
das
ret
movsl
jg
rcl
aaa
add
lock
mov
jnp
dec
popa
sahf
push
jmp
mov
aad
pop
add
fwait
and
and
popf
sti
or
inc
addr16
xor
clc
rol
movsb
jg
in
and
popa
stos
test
jns
fdivp
xor
push
mov
imul
sbb
add
shlb
mov
stos
jo
in
std
insb
cmpsl
jecxz
dec
dec
sbb
inc
fldcw
pop
fbstp
adc
icebp
rolb
jle
pop
ret
pop
daa
rolb
mov
out
pusha
or
fs
ss
rorb
cmp
sbb
ja
and
hlt
in
insb
ret
aad
mov
mov
in
in
out
xor
pop
sbb
movsb
incl
push
lods
mov
mov
dec
mov
push
inc
adc
mov
mov
scas
lahf
outsb
insb
pop
push
out
in
testl
mov
leave
test
cmp
jg
pop
sub
or
adc
xor
icebp
sbb
pusha
test
insb
or
sub
push
aam
mov
xchg
imul
xbegin
fsts
pop
in
mov
call
out
ljmp
fidivs
push
mov
xlat
out
jp
dec
inc
push
call
sbb
mov
aas
mov
std
xchg
cmp
dec
lcall
test
pushl
js
mov
inc
and
stos
das
push
cwtl
push
adc
mov
jmp
mov
daa
push
push
add
xor
adc
int3
cmpsl
dec
cli
faddp
shlb
fstpl
sbb
ror
idivb
jl
sub
jns
mul
ret
out
addr16
repnz
aad
pusha
sub
push
daa
in
ljmp
xchg
js
fs
xchg
sahf
scas
test
incb
pop
push
jns
cwtl
push
das
call
mov
stc
mov
andl
sbb
inc
and
daa
jecxz
into
lock
clc
test
jmp
cwtl
gs
pushl
pusha
in
push
inc
jno
sbb
pop
imul
lret
shlb
fcmovne
and
xchg
jmp
sbb
or
jne
jae
popa
jmp
mov
pop
jnp
lret
add
inc
fsubrl
les
pop
clc
or
sub
shlb
cmp
filds
xor
mov
push
outsb
dec
cmp
adc
dec
fs
sbb
push
ljmp
int3
out
pop
add
mov
xorl
js
mov
fwait
sub
xchg
nop
mov
insl
bound
aam
imul
std
push
jmp
stos
rcl
inc
cmp
jl
push
nop
aas
decl
stos
enter
out
add
ljmp
sbb
gs
lcall
popa
dec
loope
sbb
test
push
push
jo
or
xor
pop
xchg
xchg
mov
dec
lcall
cmp
aad
pop
lods
stos
push
xchg
sahf
mov
pop
fstp
loope
sub
dec
mov
clc
data16
pop
mov
inc
push
mov
std
add
mov
mov
lods
adc
daa
mov
mov
inc
mov
aaa
jbe
incl
add
jge
jae
xchg
movsl
xchg
fdivl
out
cmp
and
out
sbb
hlt
ret
add
mov
and
lret
cmp
pop
std
scas
cmpsl
aam
jb
push
mov
mov
push
sahf
icebp
popf
and
mov
decl
mov
iret
mov
adc
jge
loope
adc
daa
fcos
andb
and
cmp
scas
xor
jecxz
addl
inc
jmp
in
in
stos
notb
or
idiv
in
sti
mov
lahf
push
jmp
sub
jecxz
aas
pusha
rcrb
mov
or
pop
es
nop
insb
xchg
cwtl
pop
clc
or
xchg
mov
pop
mov
sub
cs
scas
dec
fistpll
pop
stc
popf
xchg
dec
cmc
mov
xchg
xchg
pop
fs
push
repnz
mov
sub
and
fcmovnbe
cli
lcall
xchg
aas
icebp
hlt
rcl
xchg
sbb
fsubrp
lcall
xchg
out
push
clc
pop
dec
sbb
ljmp
loopne
jg
in
sub
rcr
push
dec
sbb
mov
stos
xor
mov
hlt
fists
xchg
popa
ja
testl
scas
mov
mov
inc
and
in
jne
mov
stc
aaa
push
sbb
cmpb
push
out
out
in
xor
stos
je
xchg
mov
sti
add
sbb
sub
xchg
adc
aas
add
loop
add
dec
loop
clc
sbb
fs
jg
cmp
fists
inc
jge
inc
lock
out
add
leave
pop
xchg
jo
cld
adc
xor
dec
leave
pop
pop
movsl
ja
jg
cld
incl
jmp
jnp
jb
es
loopne
ss
outsb
cmp
cmp
aas
inc
fbld
mov
test
mov
ret
pop
int3
dec
mov
es
pop
adc
jns
xor
movsb
int3
mov
push
inc
pop
ffree
and
push
es
mov
pop
push
pop
repz
cmp
imul
jp
or
rorl
outsb
repnz
push
sbb
xor
out
sahf
pusha
loopne
in
cli
adc
sbb
scas
popf
sbb
les
sarb
ret
jmp
out
into
sti
inc
or
sbb
inc
ret
out
sbb
ja
jg
mov
add
mov
mov
lret
clc
mov
out
iret
test
ret
sub
mov
sbb
out
fsubs
jo
je
dec
in
dec
jne
pop
push
inc
nop
push
lcall
xor
xchg
mov
mov
rcr
cmp
cli
divl
cld
or
frstor
jl
hlt
jg
int
aad
push
pop
mov
mov
sti
aad
jo
jp
mov
es
or
loop
pop
or
jg
insb
xchg
cltd
fwait
out
out
sbb
mov
pushf
fs
fstps
jmp
inc
std
and
sti
fisubrs
outsl
mov
aas
inc
cld
out
repz
fsubp
sbb
daa
cmp
in
cli
outsl
cmc
icebp
fdivr
xchg
mov
pop
xchg
out
test
hlt
sbb
xor
jg
mov
das
sub
dec
insl
jge
jnp
scas
leave
and
mov
pop
loopne
mov
mov
mov
lock
add
outsb
mov
orb
hlt
mov
or
incl
cld
jge
inc
inc
pop
inc
js
cld
ljmp
jmp
xchg
push
pop
add
push
iret
dec
fistps
pop
mov
fld
shl
sbb
out
cmp
and
aas
xor
aad
adc
mov
mov
jmp
push
sbb
int3
cmp
lahf
mov
in
mov
mov
push
push
daa
cmp
push
popa
test
out
add
xchg
fistps
add
pop
pop
icebp
dec
ror
fldl2t
add
mov
addr16
in
fisttpl
xor
insl
fmull
xor
adc
imul
pop
movsb
inc
hlt
lret
into
lock
mov
test
cs
cmp
jl
push
push
int
out
xchg
and
mov
mov
xchg
dec
out
mov
lea
add
mov
sarb
add
jno
les
jg
mov
cmp
loope
lcall
loope
mov
mov
sub
sbb
push
sub
sub
mov
out
decl
out
cmc
pop
cmp
enter
push
cli
cmp
out
enter
sub
leave
add
mov
xchg
daa
or
sub
sub
xlat
outsl
jo
adc
div
jns
mov
xor
or
les
jle
lea
sub
add
adc
ja
decl
fldt
add
push
cmc
xchg
les
xchg
jecxz
aaa
and
hlt
jmp
std
pop
enter
sbb
inc
aad
or
fld
and
negl
fistpll
jle
push
jae
imul
xchg
mov
cs
add
aas
ljmp
and
aaa
cmp
and
add
jge
cli
mov
jnp
or
xchg
aas
sbb
push
pop
inc
pop
jp
sbb
icebp
fbstp
aas
ds
push
sub
ljmp
pop
add
clc
mov
push
and
xchg
add
sub
loope
lods
cmpb
xchg
adc
jge
mov
fdivl
ljmp
xchg
cmc
pcmpgtw
addr16
test
sbb
scas
jle
lcall
movsb
testb
in
pop
pop
daa
sub
mov
ficomps
mov
rorl
stc
movsl
test
daa
mov
repz
je
push
push
dec
adc
xchg
inc
aas
imul
mov
stos
xor
stos
jg
mov
lock
cld
cmp
jg
stos
loopne
or
adc
stos
shlb
add
or
add
add
pop
push
clc
xor
out
dec
incl
insl
and
insl
sbb
ljmp
std
push
fneni(8087
repz
out
dec
and
sub
pop
fnstcw
inc
cmp
sahf
or
xor
pop
dec
push
aas
clc
push
shl
aaa
sti
fldpi
imul
fs
dec
and
mov
and
mov
out
ja
jg
shrb
and
jge
jmp
cli
cmp
setl
je
rol
sbb
test
cmp
cmc
inc
call
adc
adc
pop
loop
mov
dec
lods
gs
pop
add
call
subl
outsl
lock
or
xchg
lcall
jmp
mov
ret
jo
xlat
dec
popa
jle
jmp
fwait
or
jl
fidivrl
xchg
cmpsl
sti
cwtl
sub
stos
mov
cmp
and
push
clc
jmp
jmp
xor
lret
mov
leave
push
stc
inc
xor
imul
xchg
ljmp
cmp
or
in
add
jl
icebp
subl
ffreep
cld
dec
fsubrl
test
push
je
pop
pop
inc
inc
inc
xlat
pop
push
and
mov
in
inc
std
xchg
inc
mov
jge
inc
cltd
and
call
pop
and
mov
movsl
data16
mov
sub
sbb
out
pminsw
call
cmc
int
xlat
outsl
mov
sub
cmp
mov
insb
movl
cld
and
in
aaa
lret
xchg
sub
fldt
dec
xor
mov
and
lds
imulb
stos
stos
pushl
clc
test
psubd
jl
push
inc
jbe
lods
dec
mov
clc
lock
dec
jnp
idivb
out
shlb
sub
cmp
jle
cmp
in
idivb
rcrl
inc
in
sbb
and
cs
cmpsl
sti
jne
mov
stos
orl
scas
xchg
loopne
jmp
mov
lods
sub
std
das
and
insl
orl
test
lahf
or
mov
jo
mov
cmp
int
sarl
fistpl
push
imul
pusha
arpl
mov
cli
sbb
lcall
mov
mov
in
movnti
in
jns
jg
pushl
and
jo
mov
mov
outsl
and
dec
movsl
cmp
dec
push
loope
lock
outsl
in
sbb
loopne
and
and
mov
es
pop
cs
call
pop
test
sbb
out
or
and
cld
test
add
popf
push
lods
idiv
jno
adc
jg
loope
add
in
jo
push
inc
sbb
pop
pop
add
imul
xchg
mov
or
movswl
cmp
mov
pop
inc
inc
mov
sub
fcmovnbe
cmp
xchg
inc
pop
mov
sahf
mov
dec
fiadds
stos
pop
mov
aaa
loope
fimull
mov
aas
inc
push
add
mov
push
fimuls
clc
push
adc
sub
cmp
adc
decb
ret
sbb
and
push
or
pop
div
ljmp
pushf
testb
data16
jg
lcall
push
mov
cli
add
jnp
push
mov
fisttps
xchg
mov
sbb
push
ja
and
jno
subb
in
dec
jecxz
add
lea
xor
jle
inc
lcall
inc
cld
rol
jbe
push
ss
ljmp
or
jecxz
cli
mov
pop
pop
lcall
mov
or
fcoml
test
sti
push
cmp
test
adc
cmp
idivl
divl
not
push
imul
jg
sahf
xchg
sti
cli
mov
lock
lea
push
sbb
rcl
jmp
lock
or
sub
cmp
ss
push
mov
push
push
push
xor
neg
outsl
out
ljmp
mov
mov
dec
mull
sbb
xchg
cmp
fbld
jno
fwait
cmp
test
xchg
clc
xchg
push
xor
stc
pop
push
ds
andb
mov
add
dec
cmp
ljmp
nop
fwait
xorb
adc
das
pushf
jmp
dec
stos
lea
aas
negl
aaa
xor
pop
imul
out
aaa
cmp
int
lcall
rolb
lret
jg
mov
sub
ja
push
adc
push
dec
popa
fs
mov
push
arpl
scas
stc
je
inc
push
push
lods
pusha
cmc
cbtw
pop
sbb
lahf
lock
test
cli
mov
out
ja
and
int3
test
std
cld
enter
jge
cld
mov
inc
int
ja
ljmp
out
gs
cmp
push
mov
mov
pushf
ret
jmp
add
rcrl
mov
pushf
out
cmp
pop
mov
adc
xchg
xchg
jo
cmc
mov
std
sbb
ljmp
inc
adc
mov
and
arpl
into
jl
dec
add
pop
int
mov
arpl
mov
mov
jmp
icebp
clc
clc
xor
xor
stos
mov
pop
outsl
clc
inc
shl
shrl
lret
andl
mov
sub
pushf
test
mov
stc
out
shr
inc
xchg
mov
pop
daa
sbb
sahf
pop
in
mov
daa
sbb
sbb
xor
incl
int
addl
sbb
out
cmpb
xchg
mov
mov
or
xor
jl
jne
push
fcomip
scas
xor
push
jo
iret
xor
inc
mov
mov
jecxz
push
sub
sbb
xchg
xchg
popa
push
xor
cld
sbb
inc
lea
loope
js
stos
loope
xor
or
stos
push
incl
mov
fcmovne
ret
inc
mov
push
jns
inc
mov
adc
std
out
jbe
and
cli
test
xor
and
add
push
mov
ljmp
iret
jbe
jnp
movsb
cmpsl
inc
cld
push
mov
jmp
jbe
lods
outsb
sbb
jae
or
andl
jecxz
jmp
in
lods
push
inc
push
ret
pop
scas
or
loopne
mov
add
roll
xor
out
pop
or
fisubrl
sub
mov
jle
cld
cmp
loope
push
cs
imul
in
xor
xor
add
jl
jnp
inc
cwtl
dec
test
mov
push
sti
push
out
xchg
or
dec
mov
test
aas
adc
out
mov
data16
maxps
pop
mov
mov
loope
rclb
loopne
in
in
mov
out
cmp
cmc
lock
and
sbb
add
daa
in
cs
mov
adc
or
decl
nop
pusha
pusha
push
dec
pop
push
lods
nop
mov
rcl
test
lock
cmpsl
loope
jle
test
lock
adc
xor
cmp
mov
push
fucomp
popa
xchg
xchg
jl
push
pop
bound
fs
dec
dec
fistps
adc
outsb
aad
cmp
sub
inc
mov
pop
testl
pop
cmp
out
jo
fdivr
repz
sahf
scas
jo
inc
jl
xor
lock
pop
wrmsr
push
push
lcall
stc
push
mov
ja
jnp
cmp
push
in
xor
cld
popf
out
test
jge
pop
mov
fildll
mov
xor
div
lcall
add
pop
adc
out
cld
mov
dec
sti
sbb
jmp
dec
fsubs
cs
or
pop
adc
xor
out
jns
clc
out
push
ret
fidivrs
push
pop
cmp
mov
in
jbe
sub
aas
jbe
fwait
sti
jg
sbb
fxch
in
cmpsl
dec
xchg
bound
popf
jo
pop
cmc
sbb
into
lret
int3
mov
aam
cmp
cltd
outsl
inc
jg
add
push
int3
sub
cmc
incl
jo
or
xchg
orb
std
das
jo
imul
adc
sub
loop
xor
lock
iret
aaa
inc
xchg
and
jnp
pop
sbb
jae
outsb
lock
jbe
mov
imul
cmp
cltd
mov
lds
cmc
hlt
addb
imul
add
pop
inc
lods
mov
in
out
out
lahf
loopne
xchg
add
xor
inc
dec
pop
inc
jbe
and
cld
daa
cmp
cmp
aas
cmp
insb
adc
pop
fistps
sbb
sbb
je
imul
ljmp
imul
xchg
frstpm(287
rcr
fwait
sbb
jl
xor
es
jns
xor
mov
jg
or
xchg
pushf
cwtl
and
jne
inc
gs
xchg
mov
mul
push
pop
stos
stc
adc
cld
lahf
adc
mov
dec
pop
jne
ds
and
jno
cmp
lea
mov
daa
std
fs
add
in
xor
sub
push
cmp
sahf
loopne
xchg
hlt
ljmp
cmp
push
sub
cmpl
inc
loopne
inc
gs
push
jae
cld
mov
or
fmul
into
dec
add
jns
jb
and
dec
aad
cltd
addr16
xchg
orl
adc
pop
and
mov
aas
sub
cmp
sbb
jl
enter
decl
loop
xor
jge
mov
pop
and
icebp
push
xchg
iret
loope
out
and
rclb
pusha
inc
insl
dec
dec
cmc
je
insl
fs
ljmp
xchg
inc
scas
sbb
test
icebp
iret
out
pop
inc
daa
adc
dec
xor
jnp
hlt
ljmp
add
rcrl
out
test
xchg
mov
sbb
lahf
dec
dec
les
push
stc
mov
stc
cld
jg
or
stos
or
aaa
pop
push
cmp
cld
lret
lock
mov
in
or
jge
imul
adc
mov
lahf
std
xchg
xchg
pop
lahf
cld
enter
lods
ud0
pop
dec
outsb
dec
sub
mov
cmpl
pop
pop
push
jo
popf
cmp
and
std
pop
mov
mov
pop
fldt
pop
xor
jb
roll
xchg
and
add
jl
lahf
mov
cwtl
dec
dec
int
sub
clc
decl
aam
lret
mov
imul
loop
rcl
add
pop
cli
jg
xchg
sti
xchg
icebp
fmul
add
jb
xor
or
loope
lss
mov
xor
out
ret
cld
decl
fbstp
dec
iret
add
outsb
in
in
loope
imul
and
and
jg
jg
push
sbb
sahf
nop
xchg
xchg
call
js
lret
push
xor
xchg
cmp
xor
jecxz
adc
pop
mov
cmp
aam
mov
or
cmp
in
lcall
push
clc
mov
mov
mov
dec
test
or
mov
mov
cwtl
mov
lahf
pop
jecxz
mov
stos
mov
orl
jns
stos
mov
lcall
dec
loopne
loope
subl
pop
or
sbb
sbb
daa
movsl
sbb
dec
jb
cmc
pop
adc
sbb
sub
hlt
popf
pushl
mov
inc
fdivrs
repnz
nop
xor
int
ret
call
add
mov
call
lock
clc
test
pop
mov
repz
cli
fisttpll
jno
pop
cwtl
rcrl
or
jns
nop
mov
out
stc
iret
sbb
dec
mov
loopne
pop
in
inc
xchg
sbb
pop
pop
cmp
cmc
cltd
add
push
movsl
mov
shll
add
jmp
mov
negb
mov
mov
pop
in
stos
sub
das
mov
jg
cli
out
mov
pop
jg
fnstcw
push
jge
cmp
iret
std
mov
cmp
loopne
and
mov
mov
test
jecxz
divb
add
sub
aas
push
loopne
pushl
sarl
xchg
mov
cli
aas
aas
sub
out
filds
in
lock
push
xor
lret
xor
or
ja
jp
cs
stc
clc
adc
cld
loope
add
add
or
xor
xor
add
enter
push
mov
leave
repz
incb
addr16
jno
push
pop
mov
lahf
add
std
outsb
xchg
imul
pop
jle
and
das
jecxz
jae
sbb
jp
gs
decl
test
jno
pop
pop
dec
jne
std
idivl
lcall
in
mov
std
xor
dec
inc
jl
lret
iret
sub
bound
or
xchg
mov
jecxz
das
add
call
cld
test
add
lock
mov
fs
mov
push
push
call
adc
push
push
mov
push
fsubl
add
scas
es
push
outsl
mov
mov
xchg
or
add
les
in
aas
scas
pop
mov
popf
imul
rcl
andl
push
sub
cmp
and
mov
cs
lcall
cmpsb
mov
sub
fstpt
js
mov
sti
cld
adc
mov
add
aas
ss
adc
or
test
lahf
aaa
ds
sbb
add
das
cmpsb
in
jmp
sbb
inc
pshufw
les
xchg
icebp
fsubrl
dec
daa
push
roll
mov
popa
fisubrs
pop
dec
dec
aaa
fistpll
imul
sbbl
ljmp
loope
dec
leave
rcl
push
lret
shlb
adc
mov
pop
pop
arpl
pop
xchg
pop
fdivr
and
push
imul
imul
scas
rcll
dec
inc
insb
arpl
out
shl
fiadds
fwait
and
aas
sub
pushf
cs
sti
cli
pop
shlb
jge
imul
and
xor
insb
mov
xchg
imul
cmpsb
mov
lea
jb
or
jns
jb
cmc
or
sub
cld
and
push
adc
or
pop
jl
mov
cmp
in
lahf
mov
jge
pop
add
shrb
xor
outsl
sub
xchg
jg
push
popa
pop
dec
lods
jecxz
xor
mov
das
add
adc
cmpl
nop
mov
loop
inc
or
lods
pushl
ja
mov
mov
test
addl
push
add
in
inc
jne
iret
cli
decl
adc
std
jge
mov
lret
rcll
into
sar
pop
xor
arpl
mov
daa
mov
pushf
int
loop
push
pop
out
xchg
scas
sub
jae
cmp
push
pop
fnstsw
sub
pop
je
gs
adc
outsl
fdivr
mov
out
leave
sub
mov
or
cmc
push
notl
icebp
jecxz
cmc
out
subb
ret
js
ret
fists
clc
call
push
daa
aas
fldl
fisttpll
add
test
subb
outsl
loope
cmpsl
test
in
sub
clc
cmp
cmpsb
pop
mov
jp
outsb
cli
jg
mull
dec
push
outsb
pop
in
mov
sbb
push
jmp
test
mov
fwait
ja
jo
cmp
daa
clc
mov
int
filds
and
mov
mov
mov
enter
in
fwait
inc
rcll
jae
pop
cld
inc
test
pop
clc
loope
push
adc
pushl
mov
cltd
cwtl
mov
and
pop
push
mov
mov
jp
mov
pop
xor
leave
dec
dec
push
movl
mov
fwait
and
ror
sbb
rcrl
mov
stos
lods
iret
insl
stc
ja
inc
js
fisttps
xchg
jp
jge
cwtl
repz
sarb
lock
mov
adc
scas
es
popa
pop
gs
lock
aaa
sbb
std
add
ds
je
stc
repz
ffreep
pop
outsl
in
lahf
dec
push
mov
cli
data16
leave
rorl
pop
decl
mov
jnp
iret
sti
hlt
dec
add
push
test
xchg
cli
push
add
out
fwait
push
and
enter
sbb
lahf
jb
and
fisttps
push
aas
lret
mov
xchg
loope
shl
adc
jmp
sbb
cld
dec
out
xor
sbb
incl
xorb
mov
ret
std
mov
xlat
rcr
test
sbb
add
cmp
inc
pop
inc
sub
shrb
jecxz
loopne
lcall
popf
cmp
pop
ljmp
mov
addl
std
sub
push
fildll
std
jmp
aas
adc
pop
rcll
pushf
lcall
cmp
cmp
test
aaa
rclb
stos
imul
and
cli
in
movsl
mov
mov
mov
lahf
pop
pop
push
mov
fsubrl
repz
pop
push
addb
cwtl
shl
shll
or
or
imul
out
loop
fbstp
lods
sub
andl
sbb
cwtl
imul
unpcklps
jno
clc
sub
pushf
inc
sbb
xor
aaa
sub
repz
lock
cmpsl
repz
push
push
loop
loopne
jmp
mov
out
xlat
inc
add
push
in
inc
lahf
mov
and
dec
mov
push
inc
std
into
iret
ret
mov
pop
inc
mov
push
imul
clc
divb
xor
push
pop
cmp
hlt
cmp
mov
adc
mov
lods
push
das
cmp
movups
cld
pop
lar
inc
dec
insb
fadd
pop
jb
pop
out
lcall
and
jecxz
sub
je
sub
lmsw
dec
rcl
ret
xorb
aam
dec
std
decl
xchg
cmpsl
and
and
movsl
lods
mov
insb
push
into
xchg
mov
jmp
clc
cli
xchg
sbb
lret
mov
add
scas
push
mov
add
ds
mov
sub
dec
dec
or
pop
cmp
test
sbb
lock
jmp
adc
lock
rcrb
cmp
aas
popa
sub
cwtl
jecxz
call
push
lret
sub
hlt
icebp
aas
js
add
xor
jnp
ja
cmpb
jo
push
push
clc
aad
jmp
sbb
fiadds
mulb
das
idivl
shll
pop
inc
add
cmpb
ljmp
inc
fmulp
push
and
movsb
sbb
jmp
jno
mov
add
dec
test
sti
incl
std
xor
pop
cld
rcrb
clc
out
or
jg
push
test
test
adc
and
sbb
lods
mov
mov
ja
aam
lods
imul
push
std
insb
arpl
neg
and
dec
imul
mov
push
dec
out
push
outsl
pop
or
repz
sbb
or
push
push
adc
rcr
loopne
out
pop
nop
shll
push
mov
iret
outsl
pop
sub
imull
fiaddl
jge
push
outsl
icebp
hlt
jg
lds
lret
repz
lods
rcr
aam
inc
jne
jp
and
decl
jns
mov
add
idiv
and
dec
xor
mov
out
aas
mov
dec
mov
ja
lds
and
daa
loopne
loope
push
movsl
mov
inc
sbb
lcall
push
sbb
js
add
ret
or
inc
pop
loope
cmp
push
cmp
ja
sarb
and
and
pop
add
stc
mov
push
jns
inc
ss
mov
jmp
gs
xchg
jg
ret
push
test
mov
lahf
pop
pop
jmp
out
sub
or
cmp
fs
sub
pop
jl
sti
in
jmp
mov
shll
adc
xor
sbb
imull
push
sub
mov
or
aad
clc
and
push
je
cmpsl
loope
loop
fisttps
stos
jle
pop
lock
add
mov
addb
imul
jg
clc
push
jmp
mov
cs
in
insl
add
jg
add
jp
mov
lahf
mov
sub
jg
js
jp
pop
mov
adc
movsl
add
daa
sbb
adc
inc
std
sub
sub
loope
inc
into
mov
pusha
dec
mov
fistps
shr
xor
inc
and
jbe
mov
repz
mov
or
add
cli
out
les
sbb
daa
dec
pop
push
sub
add
sub
cmp
mov
cld
das
inc
test
sbb
int3
cli
add
mov
es
adc
in
push
imul
sub
jo
je
cmp
jg
mov
sub
inc
outsb
and
xchg
out
scas
or
stos
test
addl
out
incb
pop
mov
shl
scas
cltd
xchg
mov
fwait
gs
je
rol
iret
ret
leave
inc
int3
mov
mov
out
pop
incl
mov
aas
aam
and
sbb
inc
or
cmp
int
add
jmp
jnp
push
popa
imul
or
lock
jns
stc
cmp
pop
push
aaa
jge
dec
mov
push
iret
cld
shlb
es
push
mov
cld
xor
lock
daa
mov
fdivrp
add
adc
cmp
push
out
ret
fucomp
es
mov
sub
hlt
mov
fstpl
jae
or
out
push
ljmp
add
out
test
loop
sbb
mov
inc
or
mov
cld
push
stos
push
pop
dec
adc
cmp
call
popa
incl
lods
inc
rcrb
cmpsl
pusha
xor
incl
stos
outsb
loopne
xchg
jmp
sub
in
xchg
sub
inc
pop
pop
or
testb
fildl
jae
mov
leave
imul
pushf
jmp
pushf
popf
xchg
popf
inc
dec
loope
mov
dec
arpl
mov
test
push
imul
mov
sar
fisttps
add
pop
pop
pop
mov
sub
jl
jb
mov
cli
inc
imul
das
popa
ds
cli
shll
ret
loopne
and
and
push
jmp
lret
xchg
das
or
imul
xchg
popa
or
sbb
mov
dec
lds
sbb
lcall
rcrb
inc
aam
pop
add
pop
jno
outsb
sub
mov
mov
lcall
stos
cmp
and
sbb
or
fsub
out
push
loop
pop
shll
adcb
sbb
sbb
mov
xchg
movb
test
mov
popf
cmp
scas
ljmp
incb
cld
scas
pop
push
sub
push
sahf
push
sbb
call
loop
mov
out
cmp
shl
push
push
jl
sbb
cmp
sub
cmc
int3
int3
cmp
pop
lods
mov
mov
add
xor
cmp
enter
pop
push
iret
gs
mov
xchg
xor
pop
jle
pop
lods
push
test
outsl
psubb
fildl
xchg
mov
out
loop
inc
adc
xor
shr
cmp
pop
sti
leave
cld
js
aaa
push
xor
movsl
mov
mov
jle
xor
push
cmp
sti
aas
pop
push
sub
xchg
jmp
in
scas
add
test
out
je
daa
sbbl
push
jp
imul
fnstenv
sbb
sar
lods
or
fwait
stos
mov
or
out
scas
movsb
fists
mov
or
add
cld
and
hlt
sbb
cmp
aad
or
add
push
pushl
movsb
popf
popl
sub
incl
test
imul
mov
cmp
cmpsl
shlb
xorl
data16
cld
push
pop
call
jo
lods
ljmp
xor
sbb
adc
or
mov
push
mov
decl
xchg
inc
or
test
sbb
inc
pop
pop
out
ss
mov
hlt
fwait
int
ljmp
pop
sbbb
mov
cmp
dec
icebp
jg
in
sub
push
mov
fwait
add
insl
or
jno
sub
mov
push
in
shlb
pop
sbb
outsl
int3
jg
bound
jne
daa
and
cmpsl
pop
in
divb
jb
jne
or
inc
out
jo
in
mov
scas
pusha
cmpsl
mov
faddp
jg
sbb
int3
mov
mov
mov
decl
clc
sub
add
pop
ret
jp,pt
movups
imul
les
popa
inc
in
pop
cld
xor
sbb
mov
mov
push
outsb
pop
xor
dec
dec
psubb
push
add
mov
test
sbb
dec
js
inc
mov
mov
xchg
dec
pop
sahf
mov
icebp
imul
and
pop
pop
pop
fisttpll
int
sti
jmp
call
pop
cld
repz
rclb
lcall
rolb
inc
ja
lret
sbb
loopne
divb
paddw
mov
mov
rorl
add
jnp
lock
ljmp
sub
add
clc
iret
popa
mov
fwait
or
adc
push
imul
dec
into
outsl
cmp
int3
repz
aas
push
xor
cmp
jmp
xchg
inc
jmp
push
pop
filds
int
jg
ljmp
and
adc
adc
std
sar
popa
out
mov
adc
add
push
test
ret
and
popa
inc
dec
mov
scas
das
clc
fstpt
xor
cmp
xchg
lcall
add
imul
xchg
pop
cli
dec
mov
add
je
mov
std
ficomps
insb
insb
adc
inc
ret
jne
lods
call
out
dec
mov
dec
mov
outsl
addr16
cmc
cmp
out
popf
or
out
int3
xor
adc
xchg
adc
cwtl
xchg
inc
test
test
aad
and
xor
add
sti
subl
dec
jno
psubsw
cmp
mov
mov
subl
cmp
xchg
xchg
lcall
call
push
pushw
sarl
mov
out
inc
push
push
pop
push
xchg
jmp
mov
dec
push
pop
stos
imul
and
sbb
sbb
dec
filds
xlat
lahf
fucomip
out
mov
add
repnz
test
lds
out
add
sbb
mov
rcl
sti
mov
in
xor
fsubl
repz
xchg
sti
sub
lock
adc
mov
mov
iret
test
cli
pop
arpl
push
lret
js
mov
add
xchg
cmp
mov
pop
mov
mov
mov
ds
lea
je
jg
fildll
adc
mov
in
fwait
xor
outsb
add
ret
mov
inc
scas
add
rcrl
dec
out
pop
data16
sub
incl
imul
sar
incb
pop
inc
arpl
dec
and
add
jge
xchg
ret
sub
outsl
cmp
cli
outsl
xchg
imul
dec
ret
leave
js
push
call
cwtl
scas
repz
lcall
ret
ja
cmp
clc
sbb
sbb
mov
mov
add
sbb
mov
ds
jmp
movl
jmp
add
cld
cmp
movsl
mov
jecxz
dec
mov
mov
punpcklwd
repz
push
sarb
decl
fldenv
mov
repz
add
xor
repz
std
dec
mov
sub
xlat
aam
fisttps
jle
decl
into
insl
lret
sti
out
mov
add
pop
shl
mov
rcll
xor
sbb
or
cmp
sub
out
out
aas
jecxz
cmc
pop
cmp
adc
mov
cltd
inc
aas
stos
add
call
ja
gs
ja
addr16
sbb
lock
cmp
xor
rcr
scas
mov
xor
int
push
incl
cmp
push
outsl
jno
jle
cmc
cld
fwait
xchg
xchg
test
loope
inc
xor
lahf
adc
lret
test
mov
push
and
cmp
inc
mov
icebp
popa
dec
dec
cmc
sub
and
orb
mov
xchg
cmp
das
sbb
xchg
icebp
in
dec
or
icebp
lret
clc
pop
dec
aas
xor
lods
movsb
testl
aas
add
daa
std
adc
movsb
xchg
je
dec
jmp
dec
call
incl
pop
sahf
lret
mov
stos
push
cs
cld
jmp
fwait
push
mov
ja
enter
sbb
cs
cmp
arpl
mov
sbb
fcmovnb
insl
idivb
pushf
lods
mov
jnp
addr16
or
push
adc
lahf
or
enter
dec
outsl
push
ljmp
adc
ds
cmpsl
xchg
lret
inc
xchg
pop
inc
inc
std
rcr
mov
movsb
jg
aas
out
xchg
dec
js
loope
ja
or
test
roll
std
dec
jbe
adc
clc
cmp
or
sub
sub
scas
inc
and
add
mov
or
sub
testl
add
pushl
sbb
pop
sub
cmp
inc
iret
adc
sbb
add
fwait
ror
xchg
push
mov
outsl
inc
dec
push
enter
outsl
jb
pusha
pop
pop
jp
lcall
mov
cmc
out
loope
mov
aam
lds
lds
xor
clc
jbe
and
mov
scas
push
decl
sti
stos
inc
pop
in
jmp
jnp
pop
lods
stos
adc
gs
pusha
pusha
add
adc
stc
cli
aad
cld
adc
ds
mov
mov
mov
add
mov
mov
cwtl
cmpl
mov
negl
sbb
daa
cwtl
xchg
mov
inc
cmc
lcall
pop
pop
sbb
pop
imul
cmp
nop
int
pop
mov
mov
aad
xor
adc
fimull
jo
cli
push
or
dec
mov
sbb
adc
out
andl
stc
dec
shl
pop
cld
cltd
push
iret
mov
call
jnp
add
fwait
cmp
ds
dec
cmc
jg
rorl
lods
aam
aas
mov
jle
and
sbb
outsl
push
jnp
cld
sub
cmpsl
out
inc
mov
gs
aas
adc
pop
call
or
mov
and
imul
and
test
dec
std
pop
mov
loope
or
in
pop
repnz
out
std
les
and
add
test
stc
cmpsb
push
adc
rorl
pop
push
push
mov
call
jnp
xor
ds
test
stos
push
xchg
inc
leave
aad
shl
out
lock
mov
aam
mov
test
enter
inc
jg
ret
sub
addb
or
cmp
jg
mov
dec
insb
aad
add
aaa
xchg
jmp
cmpsb
mov
inc
mov
jg
pop
mov
fistl
movsb
mov
hlt
lahf
out
inc
ljmp
movsb
hlt
orb
pop
scas
mov
popa
test
gs
call
xor
fcomps
cmc
cmp
ljmp
inc
inc
std
mov
jle
push
jecxz
xor
fmulp
int
cmp
cmp
ljmp
in
rcr
std
sbb
ficomps
dec
dec
mov
jbe
push
dec
sar
sub
pop
sbb
jno
jge
ljmp
inc
loop
test
les
jg
ljmp
push
dec
in
mov
cmpsb
mov
dec
sub
jg
inc
ror
jmp
adc
cltd
lahf
cwtl
addr16
xor
shrb
lcall
stc
jae
sbb
adc
inc
loop
pop
arpl
push
repnz
loop
dec
ljmp
incl
cmp
cmpsl
inc
pop
lock
adcb
out
fnstcw
jp
loope
adc
sbb
lock
outsb
test
inc
dec
inc
loopne
les
cmp
arpl
jg
andb
insl
lret
fstpt
mov
and
add
cmp
pop
jecxz
and
pushf
popf
sub
loope
ja
or
cmp
outsl
decl
add
adc
pusha
inc
fucomip
imul
lret
ret
loope
or
rep
add
clc
lods
jmp
incl
add
es
push
inc
xor
pop
rorb
popa
push
stos
ja
cld
fbld
rcl
popa
addr16
iret
dec
jns
jge
test
push
lcall
aam
mov
jnp
outsl
jno
iret
ror
xchg
hlt
orl
lock
stc
cli
in
push
loopne
div
loopne
pop
popf
push
scas
add
xchg
sbb
or
dec
xchg
test
lods
mov
pop
lock
jne
inc
and
lods
loope
mov
addr16
out
push
mov
inc
adc
cltd
decb
pop
rcrb
inc
sbb
mov
fldcw
adc
xchg
xor
mov
ss
paddb
insl
nop
outsb
outsb
cmpsl
test
jbe
xor
iret
std
and
fstpl
arpl
loopne
push
cld
out
callw
lock
aam
mov
sti
lahf
movsl
adc
jno
or
and
shll
sbb
aas
and
jle
ret
inc
sbb
lea
fwait
lahf
jmp
ret
xchg
xchg
xor
pop
adc
popf
daa
movsb
xor
sbb
mov
push
jg
test
ljmp
mov
push
add
incb
xor
test
test
ja
push
inc
out
icebp
popa
jns
insl
cs
loop
repz
fsubl
data16
fisttps
jae
cmp
xlat
mov
jle
out
pop
or
jle
test
adc
jecxz
sbb
sbb
jle
arpl
js
add
lret
mov
push
sub
push
outsb
jnp
lret
inc
push
pop
std
dec
ljmp
mov
xlat
inc
jmp
push
shll
push
iret
lock
xchg
or
mov
fildl
jge
repnz
push
pusha
adc
mov
jmp
lret
adc
cmpsl
jnp
and
and
sub
std
fisttps
jmp
stos
lods
addb
es
cmp
push
ja
add
push
or
adc
inc
jno
jnp
push
dec
add
movsb
mov
add
push
fildll
or
sub
nop
repnz
jmp
adc
call
pop
or
adc
sar
out
pushl
adc
movsb
fs
out
cmpsl
pop
pop
pop
jg
testl
notl
arpl
mov
or
cmc
cli
pop
decl
insl
mov
aad
jmp
notl
jae
imul
iret
hlt
mov
pop
dec
inc
jns
sti
das
outsb
mov
inc
mov
xor
sbb
mov
daa
mov
cmp
lret
pop
hlt
mov
and
mov
arpl
add
adc
fistpll
rcl
add
mov
bound
or
pop
push
in
inc
lcall
popf
cmc
sbb
divl
popf
pop
pop
mov
inc
popa
jg
push
pop
push
arpl
loop
imul
lret
jns
jnp
imul
sbb
lea
xchg
mov
jne
or
cmpsb
lcall
adc
jae
fidivrs
jno
sbb
out
pop
mov
mov
mov
jge
add
fwait
jae
inc
mov
test
push
add
movsb
gs
movsl
cmpl
jb
mov
xor
ds
pop
rolb
dec
mov
aas
add
xchg
fwait
rol
fdivrp
push
or
or
imul
dec
das
out
hlt
repz
movb
hlt
in
jp
cmp
cmp
sub
es
sbb
and
xlat
sub
inc
mov
jmp
call
jmp
aas
cmp
je
dec
fstl
mov
xchg
fcompl
pop
sbb
clc
aas
push
xlat
sahf
neg
test
loopne
rorl
sub
scas
jbe
jg
sti
imul
xor
push
fsubl
push
pop
push
incl
loope
fs
jmp
and
repnz
mov
incl
push
ljmp
jne
pop
shl
jb
ja
fstp
shrl
mov
adc
popf
mov
jle
sti
rcr
mov
mov
sub
sbb
clc
out
sbb
sahf
mov
pop
outsl
mov
out
mov
jmp
pop
loopne
aas
mov
and
push
in
pop
leave
push
bound
test
mov
int
add
xchg
clc
inc
lret
into
mov
adc
xor
sbb
pop
lcall
mov
mov
jmp
jmp
mov
xchg
clc
jmp
ja
fwait
sub
xchg
out
in
call
pop
jge
stos
lret
outsb
rcrl
and
mov
out
xchg
into
fcmovb
fildll
pop
movl
mov
push
ror
adc
outsl
inc
sti
push
data16
jne
or
ljmp
pop
cmp
mov
loop
inc
pop
mov
dec
inc
push
inc
mov
cmp
shll
pop
inc
pop
ret
push
test
popf
add
push
sbb
push
pusha
fs
cpuid
sti
ds
mov
jno
jnp
repnz
jp
imul
inc
mov
xor
fnstsw
and
int3
add
arpl
xor
aas
add
adc
mov
filds
fists
pop
sub
pop
sti
addr16
inc
hlt
and
icebp
das
and
xor
mov
call
push
adc
mov
jg
icebp
lahf
xchg
stc
xor
ret
cltd
sbb
mov
cld
popa
cmpsb
icebp
scas
and
out
add
out
and
fbld
repnz
popf
mov
decb
loopne
cmp
mov
xchg
and
in
test
lahf
mov
push
push
std
mov
outsb
xor
inc
lret
idiv
popf
loopne
aad
insl
in
jmp
mov
cld
call
pop
jo
dec
mov
dec
nop
mov
mov
dec
jg
jo
pop
addb
jge
test
jp
pop
mov
jg
ljmp
pop
push
mov
pop
cmp
pop
add
add
mov
pop
push
jns
jne
daa
and
mov
call
sbb
fcmovnbe
push
xor
push
pop
push
mov
imul
lret
jnp
bound
add
mov
sbb
mov
push
sbb
xchg
lea
mov
icebp
dec
cld
sbb
add
adc
repnz
repz
and
push
mov
cmp
mov
xor
ret
pop
pop
mov
icebp
jg
cld
and
pop
dec
sbb
insl
xchg
mov
or
loope
clc
adc
mov
pop
and
xor
jecxz
mov
push
dec
fdivr
call
adc
adc
fs
dec
add
mov
xlat
insl
or
jnp
fists
push
mov
lds
and
adc
mov
cmp
pop
repnz
and
and
lods
lods
outsl
or
cwtl
stos
loope
xchg
xchg
mov
aas
sub
sbb
dec
inc
push
aaa
mov
sub
adc
sub
neg
pop
loop
mov
push
add
add
sub
lea
in
add
out
adc
stc
in
fldenv
pusha
ja
movsb
mov
cmc
fidivrl
aaa
inc
jnp
pushl
mov
xchg
xlat
ror
sbb
dec
addr16
xor
or
hlt
pop
daa
ds
push
or
inc
jmp
jbe
pop
and
pop
inc
mov
test
pop
sbb
and
fdivrl
popa
mov
stos
and
outsl
pop
pop
std
or
add
cmp
jbe
cli
call
negb
cmpsb
je,pt
mov
mov
std
add
cmp
jns
xor
add
jnp
loopne
xor
fcomp
push
and
ljmp
aas
xor
adc
inc
fists
outsb
push
das
es
sbb
jbe
jmp
pusha
push
imul
mov
add
into
lcall
movsl
lret
push
nop
ljmp
jge
mov
mov
mov
jle
push
lock
dec
lcall
pop
test
xchg
mov
pushf
dec
dec
cmpsl
stos
mov
aad
call
fisttps
inc
sub
mov
or
popa
hlt
jmp
mov
loope
cld
jae
or
icebp
xlat
cmp
cmpl
aaa
fnstcw
lods
rcrb
cmpl
xchg
nop
loop
cltd
loopne
xor
incl
xchg
push
mov
mov
jg
call
or
cwtl
sahf
pushf
imul
ljmp
stos
mov
push
cmpsb
ds
rorb
aam
sub
adc
sbb
icebp
inc
mov
push
inc
xor
cmp
rcl
mov
std
test
popa
out
sahf
iret
fcmovnb
fists
icebp
xchg
mov
xchg
ljmp
adc
imul
dec
call
cmpsb
mov
jp
push
sbb
push
push
inc
incl
mov
pop
jb
jno
mov
and
push
pop
mov
adc
mov
or
jg
adc
xor
daa
cmp
fdivrp
jge
out
fistl
fidivrs
xor
mov
fiadds
sti
aaa
cld
cmp
stc
adc
fstl
sbb
dec
xor
sub
cmc
repnz
mov
jo
add
xchg
jge
cmp
test
cltd
pusha
lret
lret
sbb
mov
dec
jmp
mov
scas
pop
push
push
mov
add
jle
lcall
lret
sbb
sub
inc
sti
sub
push
or
dec
cmpsb
loop
mov
cli
stos
push
clc
dec
or
ret
in
sbb
test
mov
adc
hlt
or
sbb
jmp
clc
iret
bound
inc
inc
inc
outsl
jbe
cmpsb
out
pop
pushf
ficoml
xchg
inc
outsb
imul
jg
mov
fcomp
sub
ds
cs
dec
mov
dec
jp
inc
lcall
push
inc
icebp
aam
adc
fsubrl
and
xchg
iret
sti
add
sti
clc
rol
adc
sbbl
int3
roll
icebp
jg
test
pop
sub
inc
pop
mov
mov
add
jo
mov
xchg
sub
out
jb
aaa
push
icebp
or
sbb
loopne
roll
leave
pop
and
scas
rcll
scas
shr
rcl
mul
out
fists
mov
insl
je
inc
push
fists
dec
aaa
pop
loope
cmc
outsl
lock
stc
adc
sahf
outsb
jecxz
pop
push
sub
inc
hlt
xor
in
pop
jmp
sub
cmc
lea
in
iret
add
and
test
adc
mov
pop
inc
mov
incb
lock
sub
or
mov
xor
lds
std
decl
dec
outsb
or
pop
rcll
shr
and
xor
ja
and
mov
loopne
test
jae
lahf
cld
shrd
mov
test
sub
loop
mov
in
outsb
xchg
mov
mov
mov
cwtl
aad
insb
add
mov
adc
mov
fistpll
jge
pop
sti
mov
cld
testl
js
out
stc
das
in
inc
mov
or
add
sbb
mov
or
pop
cmp
por
fld
rcrl
mov
nop
out
inc
cli
fld
fidivrl
cmp
sarl
lock
loop
pushf
test
jg
cltd
lods
out
add
lahf
and
scas
mov
repnz
or
stc
mov
scas
shll
or
push
mov
out
sbb
push
jne
notb
movsb
jns
sbb
cli
aas
cmp
xor
or
or
sub
incl
jmp
pop
fcoml
inc
adc
sub
daa
push
jne
outsl
rorb
push
push
cmc
add
adc
pushf
lahf
int3
jg
cld
mov
popf
pop
daa
in
adcl
mov
call
add
shrl
je
mov
inc
test
sub
dec
test
jae
pop
push
je
fldt
xor
and
data16
enter
inc
sbb
stos
mov
jg
cld
jmp
sbb
es
inc
es
dec
xchg
add
xchg
sti
cmp
aam
sti
arpl
ja
ja
into
xchg
std
cld
cs
or
clc
xchg
lret
test
mov
mov
mov
lret
leave
xchg
rolb
sub
mov
cmpb
and
cmp
or
outsb
ja
push
or
insl
outsl
jnp
add
jg
jns
cs
mov
inc
pop
mov
mov
inc
hlt
ja
mov
push
push
push
xorl
popa
lahf
fmul
xlat
fiaddl
pop
mov
xchg
jno
xchg
shr
cmc
mov
shlb
dec
bound
mov
cmc
cmp
jno
dec
adc
stos
pop
adc
or
ffreep
adc
pushf
popa
and
insl
adc
pop
jg
mov
xor
or
cmpsb
movsb
pop
fstl
sbb
rcl
das
movsb
cmp
adc
pop
in
scas
cwtl
pop
xor
inc
ret
ffree
nop
ret
call
jg
cld
ljmp
xor
int3
int
xor
fsqrt
inc
cltd
lret
adc
cmc
xchg
fst
xchg
jmp
lods
inc
cmp
bound
dec
pop
mov
popf
pop
xchg
jnp
inc
lret
lret
xchg
icebp
or
pop
or
idiv
pop
in
pop
inc
cli
mov
movsb
mov
das
and
jge
adcl
sub
add
mov
lahf
inc
mov
cld
jmp
in
jmp
and
in
mov
outsb
jecxz
push
pop
xlat
add
adc
cmp
adc
mov
adc
ss
loope
ds
add
addr16
jp
pop
fdivr
imul
je
sub
jbe
push
jbe
add
rorl
pop
dec
pop
dec
insl
jbe
jg
push
pop
scas
das
inc
ret
jge
xchg
scas
mov
xlat
dec
cld
out
add
sub
xchg
mov
jecxz
test
jns
adc
fsub
fdivr
pop
cmc
jg
les
gs
testb
cmc
mov
add
pushl
mov
pop
into
pop
stos
and
loop
ljmp
adc
cmp
adc
xchg
push
jl
or
xchg
nop
xchg
inc
sarb
or
add
push
test
mov
stos
mov
pushf
fwait
andl
daa
pop
add
push
jb
push
dec
mov
inc
inc
push
push
add
inc
or
loopne
idiv
cli
enter
dec
add
push
xor
fadds
lock
push
in
test
jmp
xor
add
add
and
sbbl
push
adc
dec
mov
mov
popa
bound
ret
push
ss
addl
inc
outsl
andb
clc
mov
add
inc
outsb
inc
inc
add
xor
or
pop
inc
push
inc
mov
les
dec
push
dec
nop
fstl
sub
add
jle
loop
pop
push
push
inc
dec
fmuls
xchg
fwait
or
mov
cmp
loop
inc
pusha
dec
sub
sbb
push
push
add
ds
sbb
inc
add
sti
xor
lret
sub
loopne
mov
out
or
jo
fisubs
popa
outsb
sub
dec
bound
in
pushl
dec
jp
xlat
inc
add
inc
sub
fimull
test
jo
clc
enter
mov
imul
rcrb
or
and
dec
pop
adc
adc
inc
mov
addr16
popa
sbb
ret
pop
push
mov
dec
mov
lret
or
jbe
cwtl
icebp
clc
push
adc
decl
dec
pusha
icebp
out
xor
imul
jne
inc
bound
les
cmp
ss
pop
and
mov
sbb
inc
gs
clc
push
shlb
jno
dec
jl
or
imul
push
jb
loope
xor
adc
xor
test
or
xor
xor
lcall
inc
push
adc
push
adc
in
dec
or
data16
divps
dec
sub
fs
in
mov
inc
xor
push
add
and
or
push
mulps
inc
xchg
lret
addl
insl
insb
fmuls
push
xor
sbb
mov
inc
add
or
cmp
lock
sub
retw
shll
xor
aad
add
mov
out
pop
test
clc
movsl
or
xor
ss
pusha
cmp
xchg
mov
fbld
loopne
sub
jns
push
daa
test
insl
push
je
pop
int
dec
add
or
push
lahf
add
sbbb
adc
add
adc
int3
lods
fwait
sub
fiaddl
jge
xchg
add
push
dec
popf
sub
scas
push
sbb
stc
xchg
pop
pop
lcall
mov
daa
push
sbb
adc
ficoml
test
jle
xchg
inc
stos
stos
sbb
aam
add
dec
or
and
jo
cmp
inc
or
fsub
ja
nop
mov
sbbb
test
sub
pop
mov
leave
cmpl
and
or
xor
and
movsl
rclb
xor
sub
jns
pusha
push
pusha
add
adc
xchg
je
push
sarl
and
insl
jno
sbbl
into
or
lea
or
xor
add
leave
repz
aad
mov
jge
mov
loope
mov
call
adcb
test
push
lds
loope
nop
addl
mov
outsb
or
jne
shlb
pop
adc
and
inc
imul
enter
mov
imul
sbb
lea
out
sbb
xor
dec
xlat
push
cmpsl
and
int
or
dec
xchg
add
mov
push
push
and
add
pop
imul
movsl
inc
jo
scas
and
mov
push
jmp
pop
sub
sub
nop
scas
icebp
test
xchg
pop
in
push
nop
sbb
push
jo
adcb
inc
mov
push
sub
inc
add
push
xor
xchg
adc
jns
and
sbb
out
imul
and
scas
dec
inc
and
dec
lahf
push
sub
in
inc
mov
inc
cs
dec
lods
movsb
inc
add
mov
and
cmp
or
xadd
jl
or
sbb
push
in
rolb
imul
stos
nop
add
or
mov
sub
fcompl
orl
add
jmp
inc
test
subb
roll
test
and
or
aad
push
add
test
je
data16
test
mov
xor
lock
int3
sbb
mov
movsb
add
clc
dec
leave
mov
iret
jne
mov
push
xchg
push
jno
jae
pop
repnz
les
dec
xor
xor
rclb
pop
pop
mov
popa
pop
test
scas
ja
xor
outsl
adc
adc
aam
jmp
sub
add
xchg
push
push
and
sub
add
pop
sbb
flds
stos
pop
adc
inc
repz
mov
mov
or
push
stc
test
cmc
and
in
je
dec
adc
push
dec
orb
cmp
inc
dec
cmpsb
push
jecxz
sbb
test
sbb
sub
fdivl
mov
test
pop
xor
mov
cmp
roll
mov
cmp
inc
and
aam
and
jo
shll
outsl
push
dec
add
mov
or
mov
and
or
sbb
add
stos
dec
rol
inc
or
mov
jne
xchg
add
cmp
jae
inc
xor
xchg
xchg
lret
nop
andl
insl
aad
jmp
push
dec
out
and
cs
orb
test
push
adc
adc
xlat
jns
adc
pop
and
inc
dec
pop
push
add
push
push
and
pusha
push
mov
sub
aad
in
xchg
mov
xchg
and
and
and
sbb
or
sti
iret
or
add
or
push
leave
cmp
jbe
add
push
enter
gs
inc
push
test
movsb
roll
mov
nop
mov
adc
enter
mov
jp
pop
adc
or
sbb
xor
sbb
loop
stc
mov
and
push
movsb
add
mov
loope
mov
rclb
enter
inc
jp
fadds
les
ja
xchg
mov
inc
or
add
xor
fstpl
inc
fstl
or
push
dec
xor
fs
push
xchg
dec
cmp
imul
jae
adc
inc
lcall
mov
stos
sub
sbb
adc
lret
in
cltd
inc
jns
pop
les
leave
or
adc
cmp
and
and
int3
and
push
inc
mov
nop
and
adc
xchg
fwait
nop
adc
adc
xor
adc
mov
jmp
and
inc
add
and
adc
push
out
es
mov
mov
add
stos
aaa
outsb
add
dec
and
icebp
mov
jns
cltd
adc
push
xchg
pop
or
orl
add
cmp
inc
mul
mov
stos
scas
adc
jo
out
xor
lds
pop
inc
and
add
daa
sbb
pop
inc
add
add
sub
adc
pusha
sbb
add
lcall
leave
dec
or
fs
nop
sub
adc
inc
and
ret
ret
xchg
mov
xor
sbb
adc
adc
dec
push
push
and
sbb
aaa
movsl
mov
test
es
sub
push
mov
jp
lods
xlat
or
fs
mov
push
nop
or
push
ret
int3
jb
adc
cmpsl
and
inc
out
and
sbb
add
xor
sbbb
push
imul
stos
push
repz
sbb
mov
inc
push
add
adc
adc
mov
es
adc
xchg
push
int
mov
and
xchg
popa
sub
mov
mov
ror
push
sub
shr
movsb
xor
repz
pop
movsl
mov
mov
rorb
aad
and
sti
sarb
dec
inc
les
and
lods
mov
cltd
push
lcall
and
push
jb
dec
in
push
shlb
insl
ret
add
sub
push
stos
outsb
mov
add
mov
adc
test
dec
insb
inc
test
nop
push
cmp
xor
add
mov
andb
loope
xor
mov
inc
das
sbb
fstps
movsb
add
jle
std
adc
aad
mov
jb
in
and
pop
pop
add
xchg
inc
cmp
inc
push
push
pop
scas
add
leave
adc
mov
pop
xor
pop
inc
in
popa
inc
xor
outsb
mov
lods
int
adcb
andl
inc
lcall
xchg
fcmovnb
int3
jbe
imul
adc
out
nop
jecxz
and
pop
sub
ret
xchg
and
movsb
subb
push
loop
xchg
rorb
or
dec
dec
popa
adc
xchg
mov
adc
mov
xchg
pop
scas
in
mov
push
or
pop
inc
jae
mov
shrb
xor
pop
lock
add
add
lods
mov
dec
rorl
in
dec
inc
sbb
add
fsts
lcall
and
sub
dec
nop
and
sub
daa
and
aaa
bound
jmp
pop
add
jmp
ret
or
jmp
cmc
xchg
and
dec
aam
xor
icebp
jo
dec
inc
sbb
rcll
sbbb
popf
pop
inc
mov
push
adc
mov
lods
iret
add
add
jns
and
push
dec
test
mov
add
sbb
sub
sub
ret
mov
add
rclb
hlt
adc
js
or
inc
rorl
and
mov
frstor
clc
add
add
enter
xchg
lods
stos
add
mov
shll
fdivl
or
test
addb
mov
lock
mov
and
cld
mov
dec
es
sub
sbb
insb
and
inc
mov
add
push
jb
jnp,pt
or
mov
pusha
subb
gs
popf
mov
stos
mov
and
sub
pop
loopne
add
sbb
and
popf
mov
mov
mov
dec
enter
xchg
inc
loope
addr16
push
adc
lods
or
imul
lcall
and
or
lea
jo
sub
inc
dec
bound
mov
xor
addr16
xor
push
jno
mov
mov
push
adcl
add
dec
leave
jb
and
adc
test
pusha
mov
adc
cmpsl
jae
add
sub
adc
int3
in
lret
popf
mov
mov
shlb
mov
lds
mov
sub
cmpsl
lods
xchg
aad
mov
mov
cmp
sub
or
add
xor
test
fisubs
and
xor
push
test
xchg
xchg
jp
sub
and
add
nop
test
ret
xchg
adc
add
push
add
push
and
sbb
lods
mov
mov
fs
ret
jno
and
mov
or
jno
push
or
mov
and
cwtl
mov
or
and
inc
xchg
mov
rclb
shll
pop
and
fs
push
pop
stos
orb
loopne
and
xor
cmp
addl
xchg
push
push
out
mov
xchg
mov
add
xchg
mov
bound
push
pop
inc
mov
fbld
adc
and
adc
lea
xchg
ljmp
sbb
jno
and
daa
add
sub
cmp
shrb
test
add
xchg
add
shlb
adc
stos
movsb
enter
in
mov
ret
xchg
xor
adc
cltd
lods
shll
xor
je
outsl
ja
inc
imul
sub
test
add
add
scas
add
decl
sbb
and
mov
mov
or
rol
adc
rol
adc
mov
in
popf
stos
dec
test
xor
sbb
in
loope
pop
or
mov
aam
addr16
add
lods
pop
inc
fidivrs
out
mov
add
jns
jae
rorb
mov
leave
xchg
add
xchg
cltd
xchg
push
stos
pusha
add
sub
add
dec
adc
and
lcall
xor
lods
sub
add
inc
popa
mov
inc
pop
das
sub
adc
inc
stc
dec
jmp
push
or
sub
mov
dec
push
sub
mov
ret
dec
or
push
jno
ret
push
xor
sub
inc
enter
mov
iret
lds
fcmove
test
push
lea
cmp
inc
mov
mov
or
or
pushf
xchg
mov
push
gs
inc
add
nop
add
adcb
push
xchg
mov
inc
push
pop
roll
test
inc
ret
pop
adc
out
in
orb
roll
loop
mov
inc
jo
leave
cmp
push
dec
mov
mov
cmp
sub
cmpsb
adc
test
cmc
dec
jge
and
es
inc
ljmp
sbb
dec
pop
pop
xor
adc
es
in
inc
mov
dec
repnz
sbb
out
and
dec
es
and
xor
dec
or
ja
aaa
test
bound
add
mov
sub
xchg
sbbb
sarl
add
aam
xor
pop
xchg
rorb
push
pop
sbb
sub
stos
pusha
add
push
dec
add
cmp
pop
pop
mov
or
and
je
and
add
inc
mov
dec
int3
mov
jne
hlt
push
orb
mov
aam
add
pop
jge
pop
and
mov
jae
bound
mov
mov
or
xchg
xchg
movups
adcb
push
testl
jmp
xchg
ret
add
mov
mov
push
xor
les
xchg
push
into
lcall
mov
stos
add
inc
dec
add
jae
xor
insl
aaa
adc
fdivrs
dec
jae
xchg
pushf
out
lds
ds
es
dec
popa
push
les
or
sbb
dec
and
sbb
fwait
add
and
mov
push
roll
xchg
xlat
xor
lea
mov
or
push
and
jns
mov
or
xchg
nop
jo
add
jnp
lret
rorl
xchg
and
adc
out
adc
adc
insb
mov
movsl
incl
mov
cmc
sub
cmp
dec
es
pop
sahf
aam
ret
xor
js
and
fistpll
adc
addl
adcb
sub
add
add
add
sub
cwtl
inc
or
test
xor
ret
add
inc
mov
ret
pop
shll
insl
inc
xor
roll
aas
test
inc
and
adc
nop
sti
add
xchg
sub
imul
loop
cmp
push
and
clc
mov
movsb
sub
pop
dec
sbb
stos
adc
xchg
mov
test
popf
sbb
addr16
outsl
negl
sbbb
mov
dec
andl
pop
add
orl
orb
push
xchg
adcb
iret
dec
aam
and
adc
dec
inc
and
sbbb
add
push
mov
xchg
jno
lret
push
mov
push
pop
and
adc
xor
test
or
xchg
cmp
out
pop
daa
sub
push
pop
add
jo
fstl
ds
ucomiss
rcll
cmpsl
imul
push
dec
or
clc
in
insl
addl
nop
xor
cmpsb
pop
adc
adc
or
shrl
es
test
orl
or
and
addr16
push
or
dec
add
push
adc
or
test
adc
push
or
adc
push
inc
adc
or
or
sbb
sbb
ss
xchg
adc
mov
and
test
or
ror
rclb
mov
pusha
pop
repz
xor
mov
xor
in
sub
add
jb
mov
xor
adc
pushf
adc
add
sbb
shll
adc
cmp
test
leave
mov
andl
nop
stos
pop
xchg
in
jne
test
add
inc
shrb
cmpb
xchg
dec
add
dec
scas
arpl
mov
push
mov
rclb
repz
pop
mov
mov
or
inc
shlb
pop
push
adc
repz
mov
sub
adc
and
xchg
movsb
sbb
or
cmpsb
imul
xor
arpl
nop
xorb
sub
movsb
jecxz
xor
add
pop
xchg
lods
cmp
add
push
and
test
add
and
inc
xchg
lret
add
inc
lods
mov
pop
inc
or
jae
pushf
and
jge
pusha
inc
add
sbb
bnd
es
adc
sbb
mov
push
push
outsl
jmp
dec
cmp
lret
rcll
lahf
adc
nop
mov
stos
adc
je
rcl
add
mov
push
pop
pop
lds
or
mov
mov
int3
dec
jae
loopne
sub
rcrb
cltd
jg
and
orb
push
adc
sub
cmpsl
adc
lods
call
loopne
add
or
dec
ret
xchg
arpl
leave
cmpsl
adc
add
cwtl
movsl
shll
push
call
loope
lcall
add
sti
jb
cs
dec
sarl
push
mov
add
xchg
stos
js
or
lret
bound
sub
and
pusha
xchg
inc
mov
mov
push
xor
rcll
mov
inc
jo
or
inc
add
sarb
adc
add
and
or
sti
js
add
cmpl
out
push
inc
jne
xchg
adc
pop
sbb
test
add
addl
lret
mov
cmpsl
and
int3
or
lea
shrl
roll
add
and
sbbb
pop
scas
sti
test
daa
mov
repnz
int3
or
mov
mov
cmp
xor
push
nop
jns
dec
orb
fs
or
dec
xor
sub
adcb
inc
xor
daa
add
adc
imul
jp
shlb
jns
xor
sbb
lods
test
fwait
push
xor
push
add
cmp
addb
sub
call
aam
mov
xchg
orl
jne
bound
cmpsb
fildll
repz
mov
adc
mov
mov
xor
xor
dec
inc
xchg
pushf
out
mov
push
rolb
sbb
xor
adc
add
push
xor
in
add
xchg
xchg
sub
xchg
movsl
sbb
les
addl
xor
cmp
xchg
fwait
mov
popf
and
shll
inc
or
sub
and
and
fbld
sbb
sarl
scas
in
je
mov
push
sahf
sbb
je
popa
lahf
or
addb
or
inc
sub
lea
out
lcall
lods
add
inc
loop
or
jns
jne
push
inc
push
lea
ss
and
shlb
add
and
adc
into
or
adcl
mov
sub
mov
add
orb
andl
nop
arpl
mov
adc
mov
xor
or
inc
in
adc
mov
and
jmp
mov
cltd
or
sbb
inc
cmp
adc
add
or
jo
dec
xchg
dec
cmpsl
int3
je
add
jno
fmuls
rcrl
adc
shrb
mov
push
or
add
inc
jno
push
std
in
bound
cmp
sbb
add
mov
ret
pop
leave
test
inc
addb
loop
test
mov
mov
in
punpckhwd
addr16
xor
push
or
or
push
inc
mov
nop
jg
out
add
xchg
cmp
movsl
adc
and
mov
stos
movsb
pop
inc
sbb
sbbb
movsb
test
mov
add
mov
adc
mov
and
movsl
lea
inc
sub
adc
inc
pop
push
jb
js
or
mov
pop
ja
xchg
cmp
push
pop
pusha
xor
scas
and
je
pop
repnz
test
jecxz
push
push
inc
xchg
and
xchg
cmp
std
jo
and
mov
or
xchg
cwtl
or
xor
mov
push
rolb
inc
push
aam
movsb
pop
les
sbb
loop
and
inc
sbb
cmc
inc
dec
mov
pop
add
pop
inc
dec
jecxz
sub
mov
or
xchg
adc
shrl
test
lods
sbb
test
and
das
shll
or
sbb
cmp
add
in
sub
and
xchg
jae
jo
imul
test
pop
jge
loop
shrb
data16
je
dec
leave
sbb
add
ret
sub
insb
add
orl
inc
mov
test
sbb
shlb
sbb
jne
add
and
pop
push
or
inc
scas
or
add
je
jns
mov
add
lds
adc
or
sbb
add
push
addr16
imul
and
fwait
mov
int3
ret
paddq
adc
lock
aad
mov
out
add
cmpsb
push
subl
dec
pop
movl
out
add
movb
push
and
mov
rcr
adc
inc
movsl
pop
xor
sbb
add
inc
or
leave
test
add
movsb
and
subl
ret
sub
shrl
pop
sub
or
das
daa
adc
pop
push
or
inc
sub
add
mov
adc
dec
mov
xor
stos
sbbb
dec
pushf
sbb
and
or
adc
cltd
popf
push
dec
aam
test
std
sahf
test
in
pop
inc
add
jb
xchg
pusha
sub
xchg
inc
and
add
push
add
cs
push
dec
stos
adcl
push
mov
pop
inc
imul
rcll
pusha
stos
push
jae
nop
and
adc
stos
mov
add
xchg
adc
mov
push
fabs
inc
dec
shll
sbbb
inc
je
cwtl
rcl
sub
inc
addb
inc
lcall
imul
and
inc
sub
popf
adc
movsb
cltd
cmp
rcll
jl
inc
sbb
mov
imul
repnz
xorb
nop
mov
inc
or
add
push
and
jmp
rolb
add
inc
add
pop
shrl
and
inc
add
or
lods
dec
push
int
test
xchg
or
test
aas
mulb
pop
les
lcall
push
sub
je
cltd
sub
push
ljmp
push
test
and
test
enter
rcll
dec
adc
stos
or
or
rclb
mov
sub
mov
xorl
sbb
inc
sub
and
shr
add
add
xchg
xor
adc
mov
and
dec
push
add
iret
sbb
inc
xor
adc
xor
rclb
push
mov
adc
nop
push
push
pusha
mov
mov
popf
dec
mov
push
add
adc
insl
push
add
lcall
popa
sbb
xor
jae
adc
fimuls
inc
push
jle
adc
pop
push
les
xor
adc
sub
ret
pop
orl
push
mov
sbb
dec
sbb
and
cmp
mov
mov
movsl
mov
mov
je
or
jecxz
bound
pop
push
sub
inc
adcl
out
addr16
test
push
pop
jnp
nop
dec
and
test
fsubs
xor
pusha
roll
xor
lods
or
add
or
add
add
inc
mov
sbb
cmp
add
or
pop
enter
sbb
dec
mov
or
push
adc
in
repnz
pop
sub
cwtl
lods
in
mov
pop
xor
jns
cwtl
enter
sub
shlb
xchg
cmpsl
outsl
cltd
rorb
and
cmp
test
sbb
cltd
add
xchg
cli
sub
inc
insb
mov
sbb
sbbb
dec
out
inc
test
mov
lods
lcall
add
lcall
or
xor
bound
jns
test
or
and
jno
add
aam
aad
je
bndldx
push
lods
push
and
adcl
add
adc
and
push
popf
inc
adcb
xor
or
or
and
push
aad
inc
movsb
andb
inc
movb
or
adc
add
dec
push
xchg
push
pop
andl
push
and
pop
test
lret
rolb
cmp
and
xor
shll
jns
adc
inc
inc
cmp
and
pushf
or
inc
pusha
mov
push
push
adc
push
adc
int
arpl
push
es
and
jnp
sub
pop
lock
add
inc
popf
aam
sbb
adc
add
push
mov
add
pop
add
movsb
adc
loope
test
add
jmp
inc
or
mov
push
jo
iret
mov
mov
imul
or
mov
xor
push
stc
add
sti
jo
cmpb
adc
jl
flds
mov
adc
mov
je
repz
cmp
add
and
movsl
mov
or
mov
xorl
push
and
or
scas
mov
add
dec
test
sub
and
iret
add
test
nop
add
fiadds
adc
andl
test
test
xchg
or
xchg
inc
push
and
test
roll
es
rsm
mov
adc
mov
mov
or
mov
add
inc
dec
aad
mov
mov
jge
mov
ret
sbb
rcll
adc
iret
dec
and
push
mov
mov
jb
xor
add
and
and
shrb
xchg
adc
inc
rclb
inc
add
jnp
lret
mov
test
lods
add
mov
or
cmp
add
or
addb
call
fwait
cwtl
stos
sbb
sub
inc
xor
shrl
push
sbb
jmp
lea
mov
aam
push
dec
cmpb
mov
nop
inc
or
pusha
pop
adc
inc
jnp
adc
push
dec
stos
orb
sub
add
cmc
inc
xchg
test
mov
xchg
xorl
test
enter
xchg
subl
sub
sub
and
push
push
push
add
sbb
jl
add
and
jne
mov
push
leave
adc
xor
push
js
and
inc
sbb
sbb
jp
aad
loope
daa
aaa
inc
sub
iret
dec
inc
adc
mov
bnd
add
inc
loopne
adc
pop
push
imul
test
pusha
or
mov
sbb
das
sbb
or
inc
push
sub
adc
dec
adcb
push
shrb
cmpb
dec
add
test
adc
push
push
imul
mov
sbb
mov
pop
rorl
test
inc
jne
dec
add
bound
insb
and
or
inc
adc
test
data16
lcall
push
out
or
aas
push
cmp
cmpsb
xchg
pushf
ret
pop
and
movsl
xchg
xchg
pop
dec
lods
out
mov
movsb
push
adc
rcl
xor
cwtl
mov
test
adc
add
xchg
cmp
jns
mov
inc
inc
sub
sbb
enter
sbb
mov
jns
xchg
subb
xor
sub
addl
sbb
outsl
mov
jmp
pop
es
or
scas
lcall
push
mov
inc
rcl
or
lds
push
and
push
and
cmp
sbb
xchg
inc
imul
dec
inc
subb
lret
mov
add
add
push
add
test
mov
rorl
ret
subl
add
add
das
push
roll
inc
add
mov
push
dec
cmp
dec
xor
into
test
add
or
adc
jnp
and
cmp
sbbl
add
fcmovne
and
push
add
cmp
inc
dec
nop
aas
adc
nop
out
test
jo
jecxz
rolb
xchg
fadd
dec
add
add
add
sbb
dec
pop
test
leave
inc
pop
shlb
and
push
or
andb
inc
push
and
xchg
test
add
mov
push
add
push
mov
sub
orb
push
xor
lds
and
and
repz
adc
es
inc
mov
jmp
add
xor
pushf
push
dec
dec
cltd
mov
or
inc
movsl
mov
daa
enter
and
mov
pop
shll
xchg
push
inc
jae
xor
push
imul
sub
std
test
push
inc
bound
add
inc
stos
adc
lods
mov
data16
adc
dec
sbb
or
rorb
fs
and
pusha
movsb
cmp
stos
jns
shrl
sub
and
outsl
sbb
or
shll
dec
or
sub
mov
inc
mov
xor
mov
pusha
test
mul
adc
add
inc
adc
cmp
inc
pop
in
test
iret
and
push
mov
adc
sub
pop
add
les
dec
push
xor
fs
sbb
sbb
inc
aad
lods
lods
nop
cwtl
ljmp
xor
inc
xchg
add
sbb
pop
mov
pop
push
fs
addl
sbb
or
adc
and
or
test
inc
sbb
and
sbb
xchg
outsl
jl
shlb
xchg
jne
rorb
mov
xchg
push
cmp
rolb
in
adc
xor
mov
pusha
imul
push
cltd
aad
mov
test
or
punpcklbw
paddsw
add
and
xchg
lea
and
pop
or
or
mov
push
outsl
inc
add
add
push
nop
pop
jae
mov
flds
aad
sub
or
xor
xchg
adcl
call
and
or
pop
outsl
cmp
add
ret
add
inc
and
jl
fistl
push
sub
sahf
inc
loope
mov
or
ret
sbb
imul
jb
adc
mov
test
nop
out
inc
sbb
dec
add
adc
adc
stc
add
movsb
in
dec
sbb
shl
xor
ret
inc
fcoml
xor
adc
sbb
pop
decl
jnp
adc
imul
push
xchg
add
cmpsl
add
mov
scas
add
mov
sbb
popa
rclb
icebp
mov
mov
mov
xchg
add
adc
rcl
inc
sbb
insl
xchg
jmp
movsb
int3
sbb
adc
frstor
adc
and
inc
xor
lret
push
and
adcl
dec
add
adc
nop
inc
aad
inc
add
pop
mov
pop
add
or
int
and
test
arpl
shrb
mov
loop
pop
add
sbb
dec
insl
jecxz
jp
adc
add
or
adc
mov
nop
cmp
push
shll
jle
lea
fwait
cmp
popa
xor
cmp
daa
cmpsb
mov
add
test
insl
add
xchg
mov
jmp
add
push
push
add
sub
adc
adc
push
add
adc
mov
dec
inc
test
xor
inc
xor
xchg
sub
test
mov
frstor
xchg
mov
aam
and
or
test
xchg
inc
int3
mov
mov
xlat
adc
mov
add
arpl
inc
ss
and
push
jmp
inc
mov
xor
or
mov
xchg
push
or
mov
bound
dec
mov
repnz
inc
sub
inc
add
and
add
test
add
pop
inc
xchg
add
adc
add
popa
inc
xchg
mov
ja
repnz
xchg
add
xchg
and
rcrb
xor
and
out
add
push
inc
push
mov
movsb
cmpsb
xchg
pop
iret
lahf
and
pop
mov
outsl
mov
or
adc
adc
xor
nop
push
stos
fisubl
lret
jmp
xor
push
fimull
daa
ret
popa
icebp
add
cmp
add
and
lods
movsb
and
adcb
adcb
inc
testl
and
inc
sub
and
adcb
xchg
adc
push
fstpl
lods
or
stos
adcb
mov
lahf
insl
push
xor
mov
jno
mov
add
inc
pusha
roll
lcall
js
adc
dec
xorb
jmp
jbe
or
or
stos
add
adc
loopne
mov
call
aam
add
add
sub
add
inc
add
add
add
sub
sub
sbb
sbb
outsl
test
dec
add
add
pop
orb
test
insl
inc
test
pop
cmovbe
mov
in
add
dec
inc
movsb
push
sbb
add
sbb
rcrb
mov
adc
pop
and
add
mov
adc
add
lds
xor
sbb
sub
add
add
and
push
imul
addb
and
push
and
adc
inc
test
popa
push
push
and
inc
mov
or
adc
inc
or
inc
or
mov
sbb
mov
fstpl
add
ljmp
imul
or
jno
or
mov
pop
and
mov
cmp
adcb
rcrb
xor
pop
or
movsb
sub
cmp
or
in
sub
pop
push
mov
xor
inc
mov
jne
fistl
push
jo
repz
or
push
inc
and
pop
mov
sbb
ret
rcll
xor
inc
jb
sub
xchg
mov
bound
add
inc
or
push
cmp
fsubs
xor
add
ss
mov
or
inc
sub
pop
xchg
add
xor
flds
xlat
pusha
push
jo
mov
iret
aam
mov
add
loop
pop
xor
ret
fsubs
or
mov
push
push
ret
and
and
add
repz
cwtl
insb
movsb
cmp
or
test
xor
pusha
push
aaa
adc
xchg
mov
scas
test
pop
dec
add
sub
adc
push
icebp
pop
pop
rorl
fldl
test
into
fs
jae
adcb
out
inc
or
sub
cwtl
sbb
addl
add
jns
add
and
jae
or
and
xchg
inc
test
nop
adcb
cmc
or
stos
or
adc
jge
imul
lret
mov
or
adc
lret
add
xchg
sbb
add
dec
and
fldl
adc
or
dec
xor
or
xchg
mov
cmpsb
adc
pop
popl
pusha
add
inc
mov
add
push
adc
pop
xchg
or
pop
add
mov
cmp
movsl
in
or
jnp
jno
and
mov
push
or
sbb
mov
adc
test
sbb
xchg
nop
pop
jo
divl
sbb
push
aam
popl
pop
fwait
push
mov
mov
add
adc
xlat
ja
pusha
push
aam
sub
mov
int
orb
adc
adcl
loope
adc
inc
mov
pop
adc
dec
call
dec
test
cmp
sub
fwait
jle
into
jmp
cltd
mov
push
sbbb
lea
push
jae
pusha
and
add
aas
fldcw
mov
adc
xor
adc
dec
pop
xor
push
sbb
mov
adc
xor
sub
adc
mov
or
xchg
lods
push
adcl
pusha
add
dec
inc
add
shrl
push
int
inc
jp
or
or
xchg
and
movsl
incb
jne
nop
mov
leave
push
xor
stos
test
or
xor
push
inc
or
cwtl
arpl
dec
sbb
lds
test
sbb
shrl
inc
inc
test
add
add
arpl
inc
dec
rep
mov
jb
inc
xchg
inc
notl
mov
or
adc
and
xchg
adc
enter
sbb
xor
cmp
xor
push
add
adcb
pusha
adc
adc
xor
add
xor
test
mov
movsb
cmp
daa
adc
add
mov
test
add
sbb
movsl
lahf
inc
and
pop
cmp
xchg
sbb
xor
insb
loope
nop
sarl
call
in
ret
add
ja
inc
or
lcall
mov
cltd
stos
cmpsl
das
sbb
mov
add
jge
dec
add
inc
test
mov
pop
xchg
mov
iret
popl
mov
xor
cwtl
dec
add
push
adc
cmp
and
add
sbb
xor
mov
mov
inc
xor
dec
cmpb
dec
xlat
and
push
cmp
push
jns
adc
inc
xchg
mov
inc
cmpsl
xchg
xchg
inc
shlb
jmp
cmp
xor
in
popa
rol
adc
test
inc
sbb
mov
test
mov
mov
fstpl
fildl
les
inc
push
fwait
mov
bound
mov
movsl
mov
add
push
jno
inc
jmp
sbb
rcll
inc
pop
mov
or
imul
bound
push
popa
stos
and
jns
or
stos
test
jbe
testl
ret
das
call
inc
ret
jle
cmc
test
sar
jge
cmp
xchg
or
or
mov
aas
mov
movb
mov
pop
or
pop
dec
ret
inc
push
push
mov
add
sub
lahf
repz
sbb
push
in
adc
and
cmpsb
push
andl
fsubs
ret
stos
add
mov
out
push
adc
and
xchg
jne
sbb
xchg
rcr
pop
add
jecxz
mov
popa
xor
mov
xor
adc
sbb
nop
orl
adc
pop
dec
rcr
leave
dec
pop
or
mov
in
push
and
mov
sub
add
mov
inc
or
adc
movsb
mov
and
scas
inc
sub
in
sbb
cmp
test
push
xor
adc
add
add
sub
icebp
add
xchg
mov
add
leave
movsb
push
orb
mov
inc
imul
out
test
lea
movsb
push
adc
jo
test
outsb
out
jecxz
add
pop
xchg
loope
jp
bound
jno
cmp
add
push
inc
faddl
xor
roll
dec
or
scas
mov
push
adc
add
lret
addb
and
mov
sub
add
bound
dec
test
mov
and
addr16
cmp
mov
icebp
insl
or
pop
nop
push
adc
lea
je
int3
mov
imul
mov
int3
adc
jo
sub
dec
adc
jno
cmp
clc
add
cmpsb
push
lock
js
lods
inc
sbb
std
mov
add
out
test
xor
jne
mov
cmp
adc
adc
pusha
in
test
inc
and
sbb
lods
jmp
mov
arpl
jne
push
and
or
xchg
and
lret
ret
mov
test
adc
out
or
test
fsub
ret
imul
inc
adc
shrl
inc
add
lods
jb
inc
js
add
daa
arpl
push
mov
inc
insb
popf
or
jmp
enter
cmp
cmp
xor
int
dec
adc
cmp
out
js
lret
fld
mov
test
mov
enter
repz
mov
cmp
sub
cltd
or
adc
fnop
fldl
or
dec
shlb
dec
xchg
or
shlb
mov
and
test
or
jmp
xchg
shll
popa
push
mov
int
jo
xor
xchg
mov
bound
popa
inc
in
dec
mov
sbb
mov
dec
jno
adc
mov
push
mov
cmpsl
add
dec
rclb
nop
inc
sub
cmpsb
cmpps
inc
add
stos
jmp
push
inc
std
push
push
nop
xchg
lret
xor
ffree
lds
stos
sbbb
adc
xor
sti
adc
inc
sbb
lret
rclb
stc
dec
dec
or
add
dec
mov
xor
in
nop
pushf
test
sub
lea
push
mov
xchg
push
push
jno
jae
add
dec
mov
lods
and
push
sar
add
or
rclb
mov
clc
mov
bound
xchg
jge
xor
and
dec
mov
cmpsl
push
xchg
mov
inc
jo
addl
and
xor
push
mov
push
lea
insl
movsb
mov
xchg
movsb
add
stos
add
ss
pop
roll
fldcw
and
jno
adc
inc
dec
xor
add
push
adc
pop
adc
repnz
ret
test
arpl
sbb
push
lcall
adc
and
jno
lock
mov
sahf
iret
add
rol
add
mov
lcall
pmaddwd
syscall
or
add
nop
and
or
fistl
mov
add
push
xor
xor
jbe
sub
add
mov
iret
cmp
adc
jecxz
or
stos
loopne
sub
sub
and
adc
rcrl
adc
mov
add
xor
add
test
xor
pop
add
aad
testl
add
adcb
cmp
or
inc
mov
popf
push
cs
scas
and
add
add
xchg
and
and
stos
fwait
sbb
mov
mov
xchg
gs
or
daa
adcb
add
outsl
add
pusha
mov
sbbb
adc
push
test
movsl
add
xor
cltd
adc
push
or
push
imul
or
push
movq
and
repz
les
subl
rcl
jl
jae
jl
lcall
add
inc
mov
inc
cmp
hlt
inc
stc
sbbl
das
loopne
imul
dec
xor
movsb
add
adcl
cmp
sub
pop
and
or
mov
adc
add
push
inc
xchg
loope
adc
popa
test
rcll
aaa
add
icebp
nop
inc
xor
sub
push
or
movsb
mov
or
loopne
add
dec
lahf
imul
add
nop
xor
or
adc
inc
fwait
xchg
dec
movsl
add
call
nop
movb
inc
jb
add
sbb
or
sbb
vphadduwd
adc
test
jns
and
jb
daa
or
out
or
and
mov
push
adc
jge
xchg
sub
fldenv
sbb
dec
lea
adcb
xlat
addr16
xor
inc
inc
lds
inc
and
lret
and
adc
xchg
jnp
loop
flds
call
jae
aam
add
push
mov
jge
or
xor
xchg
loop
mov
mov
adc
test
rolb
sbbl
jno
scas
lcall
add
add
rolb
mov
pop
push
and
or
mov
cltd
mov
adc
or
mov
add
sbb
movsb
push
test
test
fdivl
out
jo
aaa
fwait
xchg
aaa
test
inc
add
add
inc
xchg
out
mov
lcall
xlat
xor
add
and
out
and
lcall
add
out
sbb
sbb
cmpsb
pusha
adc
push
sbb
sub
outsl
add
adc
or
push
inc
imul
add
shlb
fstps
add
addl
push
push
lret
cmpsb
push
or
adc
aad
adcb
test
sub
add
es
orb
add
mov
inc
pusha
and
dec
inc
test
xor
sti
adc
lods
mov
push
xchg
loopne
add
sub
mov
sub
inc
add
jge
aaa
mov
jmp
outsb
push
pop
mov
sbb
loopne
or
inc
and
roll
add
add
fcoml
dec
mov
aad
loopne
sbb
push
add
sub
adc
nop
and
lret
pop
mov
and
or
adc
arpl
mov
adc
add
inc
adc
dec
call
stos
sbbb
xlat
adc
add
add
adc
pop
pop
and
sbb
outsb
into
and
sahf
add
xorb
lcall
mov
insl
add
and
rcrl
rcrb
testl
ret
stc
rclb
jno
fiadds
aam
add
dec
sub
mov
dec
inc
xor
adc
ror
jge
sub
lds
add
or
inc
and
pop
push
mov
dec
add
lea
leave
and
pop
add
push
or
add
adc
mov
and
lcall
rclb
loop
mov
adc
pop
test
adc
mov
inc
push
mov
pop
push
out
jnp
pusha
xchg
movsb
es
and
rcll
adc
cmp
mov
imul
mov
push
leave
pop
inc
int3
xchg
lock
adc
sahf
jg
inc
into
dec
addb
rorb
imul
inc
popa
inc
mov
inc
insl
dec
lea
dec
push
add
popa
lods
or
inc
add
inc
mov
cmpsb
mov
jne
les
cmovns
and
test
push
daa
push
inc
push
imul
jmp
pop
movsl
lret
sub
add
popa
movsb
cwtl
js
push
inc
lea
stos
lret
xor
push
repnz
push
dec
imul
lock
jae
and
or
inc
shlb
xor
adcl
add
or
mov
sbb
bound
and
dec
and
add
or
or
xchg
lret
or
pop
add
aam
loopne
and
jne
sbb
pop
movsb
sbb
push
push
movsl
mov
insl
imulb
pop
aad
add
and
mov
mov
push
dec
adc
nop
xchg
mov
xlat
add
push
xchg
mov
cs
mov
pusha
xchg
out
dec
ret
push
test
add
push
cmp
lcall
dec
pop
test
add
subl
fldenv
add
push
sub
out
add
add
xchg
mov
inc
dec
pop
add
push
jno
fs
mov
and
sub
sub
repnz
rclb
ret
andl
dec
xor
in
pop
inc
sub
sahf
adc
dec
test
mov
daa
cmc
jg
sub
push
xchg
pop
cmp
cmp
es
dec
ds
xor
mov
push
and
add
xchg
sub
add
mov
jg
nop
mov
adc
lods
and
or
and
push
rorb
xchg
xchg
cmp
out
inc
adc
add
scas
adc
and
mov
dec
or
add
mov
sti
mov
fsts
enter
push
and
adc
add
test
inc
adc
xor
adc
xchg
orl
inc
push
or
mov
out
roll
movsb
pop
scas
std
es
pop
fildl
cs
push
cmpl
imul
add
dec
les
out
mov
addb
repz
nop
inc
or
cmpsl
shll
orl
imul
and
addb
pextrw
sbb
movl
add
xchg
mov
and
add
jne
add
xchg
xor
sbbl
mov
dec
mov
aaa
cmpsl
mov
test
nop
aad
pop
test
cmpsb
lcall
ljmp
mov
scas
add
push
insb
mov
cmp
lods
add
adc
sub
push
test
add
shlb
push
pop
fildll
inc
jo
rcrb
fldt
bound
xor
insl
lods
ss
aam
aam
xchg
inc
and
fwait
xchg
sub
mov
repz
dec
adcb
dec
pusha
inc
aaa
sbb
adc
push
popa
aam
inc
and
arpl
es
inc
and
xchg
or
ret
pop
lret
inc
fiaddl
addl
sub
push
cli
push
adc
inc
mov
or
push
adc
rolb
xchg
test
dec
and
test
xor
rcll
movsl
adc
push
inc
push
mov
outsb
sbb
sub
mov
inc
adcl
pusha
or
pushf
push
inc
add
aas
xor
sbb
xlat
leave
or
or
imull
cmpsl
and
pop
xchg
push
add
shrb
push
dec
subb
aas
cs
dec
adc
inc
sbb
sbb
dec
sbb
mov
add
push
repz
cwtl
dec
sbb
sub
subl
sbb
pop
inc
sub
mov
shrl
lea
add
mov
and
sub
adc
adc
and
push
mov
sbb
sub
jmp
mov
dec
and
pop
das
sbb
mov
adcl
loop
cmp
adc
cmpsb
and
mov
xor
inc
push
sub
and
jecxz
dec
ror
fisubs
add
or
rolb
mov
mov
fwait
dec
vshufps
movsb
sbb
fisttpl
inc
pusha
inc
xor
add
mov
pop
adc
inc
pop
std
ja
outsb
bound
xchg
stc
adc
test
xorl
push
and
push
mov
iret
mov
mov
and
dec
add
or
pop
push
inc
fxch
loopne
in
mov
lds
add
xor
mov
xchg
mov
sub
or
movsb
loopne
cmc
mov
jmp
push
mov
imul
push
popa
add
dec
bound
jg
push
dec
enter
add
pop
pop
pop
inc
dec
add
test
xchg
push
shll
dec
push
xchg
rorl
and
stos
lods
add
and
lret
push
push
xchg
sbb
ja
add
mov
rorl
cmp
and
adcl
call
scas
inc
sbb
lcall
xchg
mov
add
arpl
iret
xchg
popa
add
sbb
mov
push
dec
mov
mov
dec
outsl
sahf
sahf
add
ret
addr16
push
and
pop
shr
mov
and
adc
movsl
test
add
iret
sbb
adc
cwtl
or
adc
adc
popa
adc
xchg
and
mov
pop
add
xor
or
std
pop
lods
inc
and
mov
add
test
and
xor
xchg
and
bnd
dec
pop
stos
imul
xchg
loopne
sbb
addl
das
push
push
jns
hlt
dec
sub
add
or
pushf
mov
addb
xlat
and
pop
nop
cmp
add
adc
test
or
dec
and
dec
xchg
rolb
add
mov
mov
pop
or
or
adc
xlat
jmp
push
xor
inc
add
add
inc
jecxz
sbbb
pop
inc
jle
adc
sub
test
roll
add
xor
dec
sti
push
rolb
cmp
jo
mov
jecxz
adc
adc
stos
adc
daa
iret
and
cmp
jae
xor
add
cmp
mov
adc
cmp
push
filds
dec
and
xor
push
ret
or
xchg
or
push
xchg
mov
add
rorl
inc
cmpsb
xor
out
and
pop
and
popa
add
in
cltd
les
mov
pusha
lea
js
dec
testl
adc
sub
sbb
imul
or
lea
dec
push
jns
aaa
mov
add
xchg
negb
fcomps
clc
imul
xor
push
test
and
xor
xchg
add
call
sub
mov
mov
iret
inc
movsl
or
outsb
add
xchg
add
push
mov
xor
mov
leave
bound
les
lcall
xchg
test
movsb
sbb
xchg
mov
movsl
sbb
and
xchg
pushf
sbb
inc
mov
adc
andb
out
sub
and
xor
movsb
imul
add
enter
mov
movsl
add
mov
adcl
xchg
out
les
or
test
sub
cltd
and
sbb
xchg
add
push
sbb
xor
add
dec
add
push
data16
xchg
sbb
dec
or
push
and
xchg
and
rol
or
ret
adcb
inc
xchg
adc
xor
and
jno
iret
pop
pop
dec
dec
pop
rcl
dec
sbb
add
dec
ret
or
push
mov
addb
xor
inc
add
jae
jno
push
sbbl
sbb
sub
nop
mov
and
add
and
pop
subl
pusha
push
adc
or
push
in
push
adcb
sbb
add
xor
mov
out
add
call
mov
pop
push
mov
push
jmp
dec
shlb
sbb
aaa
cmp
adc
xor
clc
cmp
in
adc
add
xchg
add
rcll
adc
popa
out
inc
add
and
adc
iret
repz
sarb
loop
movsb
xchg
add
adc
dec
jp
fstl
cmc
inc
mov
pop
sub
and
add
inc
pop
ljmp
mov
inc
inc
andl
sbbb
pop
adcl
mov
and
insl
add
es
cltd
sbb
mov
or
sub
inc
pop
add
inc
ja
adc
push
push
xchg
loop
adcl
xchg
add
inc
ss
jecxz
sub
sbb
jo
jecxz
or
ret
rolb
iret
mov
mov
ret
dec
or
xor
push
sub
jne
iret
mov
inc
mov
add
sbb
add
sub
add
add
or
sbb
test
popa
pusha
push
xor
xor
or
test
push
adc
jmp
rclb
push
xchg
sub
push
xor
mov
sbb
inc
xor
inc
leave
push
lret
lods
daa
repnz
mov
mov
imul
test
rolb
cs
ss
sbb
inc
mov
mov
sub
test
sub
or
aad
rolb
jae
xor
jne
mov
add
pcmpgtd
add
xchg
out
adc
add
dec
aas
add
or
dec
add
sub
loop
orl
pop
pop
shll
cltd
shrb
push
jg
je
mov
enter
add
or
cltd
xor
iret
jae
movsb
xchg
lretw
inc
and
push
and
jmp
xchg
jne
imul
xchg
mov
aad
pusha
mov
int
jmp
inc
add
pop
xchg
xor
mov
add
and
sub
adc
int3
pop
cmp
mov
adc
or
xorb
xor
mov
jg
adc
inc
or
out
or
shrl
mov
and
dec
add
addr16
adc
pop
gs
test
sbb
insb
add
pop
add
inc
out
cmp
dec
js
add
repz
sar
lods
jno
add
shlb
shl
pop
or
dec
dec
lods
jns
movsb
adc
arpl
outsb
in
fists
or
adcb
xchg
aam
sbb
or
pop
or
add
add
push
jge
or
add
stos
mov
inc
rolb
mov
xchg
push
adc
add
jne
orb
dec
pop
inc
gs
and
lods
call
or
push
dec
inc
sub
sbb
stos
cltd
rorb
andb
orb
push
sub
sbb
mov
push
std
adc
test
mov
jo
jne
cmpsl
adc
fs
cmpsb
jmp
cli
push
andl
sub
and
sbb
pop
xor
push
jo
cmp
call
pusha
and
push
add
addl
pop
add
je
sbb
inc
les
push
stos
or
xchg
or
pop
mov
xor
adc
inc
lcall
xchg
or
xchg
cmp
and
popf
add
inc
and
push
pop
and
inc
push
push
sbb
stos
or
add
lahf
jecxz
pop
test
inc
jo
sbb
xchg
push
loopne
adc
sbb
jo
or
or
inc
inc
test
aam
add
add
sub
shll
cmp
sbbl
sbb
addb
pop
mov
push
add
test
pop
lahf
lcall
inc
sbb
insl
mov
inc
sub
sub
pop
test
push
xor
mov
sahf
cmp
push
dec
out
xchg
xor
add
and
mov
xchg
ss
jmp
sbbb
insb
or
je
jne
push
or
aaa
in
mov
xchg
cmpsb
mov
mov
inc
mov
into
daa
mov
xor
jnp
and
sbb
adc
push
xchg
and
push
lea
push
rol
sub
stos
bound
mov
inc
dec
movsb
mov
sbb
popl
mov
push
push
xor
inc
mov
mov
enter
movsl
or
pusha
mov
cs
cmp
loopne
ds
jno
les
push
nop
xlat
in
and
imull
push
cmpb
xchg
jo
pop
popa
cmp
lea
jmp
adc
fstps
test
pop
jo
lahf
jbe
mov
add
rcrl
leave
inc
lods
jo
sbb
inc
in
push
int
inc
pop
cmpsl
add
push
and
add
pop
adc
movsl
mov
lods
add
mov
pop
nop
cmp
mov
adc
xor
jns
test
mov
and
lahf
scas
add
pop
mov
or
pusha
es
rcr
lea
es
inc
xor
cli
mov
loopne
fwait
push
add
stos
cwtl
push
je
sbb
fxch
add
pop
xor
test
movsl
add
test
adcl
and
lret
or
enter
ja
ret
mov
adc
and
stos
fadds
add
push
xchg
xor
push
adcl
and
or
add
addr16
pop
je
xor
cltd
enter
test
sub
cmp
xor
sbb
rorl
and
mov
adc
ja
adc
add
popa
inc
cmp
movb
adc
loop
and
push
sub
mov
jae
adc
cmc
xor
sub
inc
xor
inc
aad
push
mov
scas
movl
popa
rorb
push
dec
or
inc
sub
shrb
add
push
sub
push
and
xchg
imul
adc
test
mov
xlat
std
leave
add
inc
int
in
mov
xor
adc
movsb
lock
shl
adc
pop
stos
mov
rcll
sub
ljmp
sbb
mov
add
test
lret
inc
loopne
test
push
popa
mov
in
lds
mov
and
add
add
adc
mov
add
mov
popa
add
add
aad
push
inc
test
add
inc
pop
inc
xchg
mov
xor
pop
inc
inc
add
mov
rorb
mov
cltd
sub
inc
push
addl
loopne
cmp
push
insb
add
jns
movsl
and
add
and
dec
mov
adc
mov
lea
jmp
pop
push
testb
sbb
dec
jmp
leave
xchg
clc
inc
roll
sbb
and
js
ss
pop
push
loope
sbb
and
test
sub
and
adc
addl
movsl
inc
and
add
shrb
adcl
push
aas
add
jo
mov
xchg
test
int
adc
mov
inc
pop
push
push
inc
sbb
sti
jno
roll
dec
sub
mov
mov
andb
add
pop
repnz
test
imul
add
test
push
mov
jo
shlb
aad
mov
add
stos
dec
orb
inc
xchg
adc
push
inc
jo
popl
inc
push
fnsave
dec
adc
dec
push
mov
addb
push
popf
xchg
adcb
xor
rolb
pop
mov
loopne
push
dec
inc
fsts
psubb
fcoms
dec
push
cmp
or
je
jg
xor
pop
push
and
iret
movsb
cmp
push
int
jmp
aad
test
add
lret
adc
dec
rol
movsl
add
outsl
lcall
and
adc
stos
roll
test
test
and
orb
popa
add
in
push
or
mov
xchg
adc
or
cmp
imul
lret
movsb
mov
xchg
add
popa
or
mov
cmpsb
cmp
push
inc
frstor
or
aaa
pusha
push
test
daa
add
cltd
adc
test
add
xchg
push
inc
rolb
push
add
or
rclb
mov
scas
and
jo
mov
pop
add
inc
cmp
imul
rorb
js
insl
loope
pop
mov
cwtl
mov
enter
daa
sbb
or
push
nop
inc
dec
aam
adc
rorl
sub
leave
inc
es
repz
and
add
inc
adc
add
push
dec
and
addb
fsts
dec
mov
xchg
ret
or
xor
pop
adc
je
mov
lahf
push
in
in
in
and
push
and
and
cmpsb
or
popa
and
or
dec
andb
movsb
push
sub
cmp
sub
pop
test
or
add
or
stos
cmp
adc
inc
out
add
jo
inc
les
mov
dec
out
sub
dec
aad
push
push
sbb
jmp
adc
and
sub
or
xchg
cmp
jne
xor
pop
push
xor
sbb
push
push
adc
test
sub
out
push
push
or
ds
add
inc
sbb
mov
cmpsb
pop
fs
and
rorb
xchg
lcall
out
fs
mov
js
push
inc
dec
mov
inc
pop
adc
add
dec
and
test
or
and
test
lods
mov
sbb
mov
xlat
sub
aam
jmp
jl
sbb
add
adc
or
notl
popa
xor
add
pop
popf
inc
andb
mov
mov
sub
and
movsb
xchg
xchg
xchg
movsb
rcl
adc
push
das
mov
and
and
xor
mov
rolb
mov
jecxz
popa
movsb
and
sarb
fmuls
sbb
xchg
push
xchg
push
mov
jge
cwtl
inc
popa
mov
out
xchg
xchg
dec
jl
add
sbb
stos
test
or
pop
dec
add
push
adc
mov
sub
test
adc
rol
or
shlb
inc
roll
mov
dec
adc
mov
push
out
mov
lea
push
int
sub
jg
and
cmp
dec
or
push
sbb
xchg
push
lods
dec
loope
xor
dec
and
xchg
bound
xchg
fwait
cmp
xor
dec
add
movsb
add
pop
sub
xchg
pop
leave
inc
push
or
mov
add
add
push
popl
test
test
sbb
mov
pop
adc
addb
jae
pusha
and
scas
inc
sahf
pop
or
or
or
nop
lahf
hlt
adc
xor
arpl
je
fisttpl
mov
lea
and
xor
movsb
jmp
sarb
mov
cltd
xor
mov
loopne
in
scas
push
cwtl
and
sbb
pop
es
int
loope
test
push
pop
dec
stos
xchg
test
add
inc
pop
shrl
sub
mov
sub
pop
push
sbb
mov
adc
popa
add
pop
xchg
pop
pop
rolb
loop
test
addb
rorl
mov
pop
ret
andb
add
add
scas
inc
cmp
xor
addl
or
mov
std
lods
rol
pop
subl
int
inc
lret
jo
sub
aas
push
jmp
push
inc
dec
decl
dec
test
and
mov
sarl
push
pop
jne
sbb
or
inc
mov
sub
and
dec
mov
and
xor
push
mov
shll
add
adc
inc
mov
sbb
adc
adc
sub
adcb
adc
dec
stos
xor
and
xor
sbb
stos
push
iret
add
xor
movsl
and
push
and
fadds
sub
mov
rclb
inc
push
jne
shlb
pop
fs
and
push
outsl
int3
xor
mov
aad
je
inc
push
push
inc
mov
fcoml
shlb
sub
push
add
mov
pop
roll
adc
add
pop
or
inc
pop
pop
add
inc
jle
rcl
jae
inc
adc
insb
adc
add
movsb
cmp
fs
loopne
jl
dec
dec
cmp
dec
rorl
movl
xchg
addl
cwtl
stos
xor
and
pop
adc
popa
or
dec
push
jo
cmp
xchg
and
adc
cmp
les
mov
or
pop
popl
imul
test
shlb
adc
sbbb
adcb
rol
stos
loopne
sub
push
jo
sbb
addl
test
lea
and
xor
pop
mov
or
test
cmpsl
xchg
push
sbb
inc
push
xchg
test
push
in
adc
nop
lret
adcb
out
fwait
daa
add
and
xor
push
sub
push
stos
hlt
or
or
out
add
pop
cmpsb
sbb
inc
nop
jl
xor
xchg
iret
jle
add
pop
sub
mov
lea
adc
roll
sbb
add
movsl
inc
adc
push
sbb
rcl
push
xchg
or
sti
cmp
stos
mov
add
xor
mov
mov
sti
add
pop
rolb
xor
call
mov
aas
ret
sbb
xor
add
and
and
clc
and
out
mov
pop
and
mov
in
fidivrl
sbb
imul
imul
add
xchg
xchg
pop
pop
add
sbbb
mov
xchg
pop
imul
or
push
pop
inc
pop
inc
xor
push
jno
xor
or
movsb
call
bound
lea
and
or
fldt
add
out
dec
shll
outsl
leave
cmpsb
sub
push
add
mov
jne
setnp
dec
lods
adc
call
rorb
shlb
jne
xor
adc
cmp
rorb
adc
ret
adc
outsb
or
lds
and
add
push
add
loopne
dec
pop
les
sbb
xlat
pop
in
lods
subb
add
cwtl
sub
adc
shrb
cmpsl
add
jo
or
sub
and
xor
mov
ret
adc
add
pop
int
dec
test
add
add
and
sbb
inc
imul
add
iret
dec
outsb
pop
cwtl
mov
ret
dec
adc
add
frstor
dec
mov
add
mov
sub
xchg
mov
movsl
pop
outsl
lcall
push
xchg
jl
add
lock
push
jo
jge
sbb
test
or
xor
enter
inc
lret
mov
sbb
adc
add
rorl
adc
inc
test
add
or
or
adc
rorb
adc
push
xor
and
sbbl
adc
xorb
lret
and
xlat
aas
push
inc
or
lcall
push
popa
andb
push
sub
xchg
sbb
or
pop
in
and
mov
inc
sub
dec
lcall
jb
adc
and
inc
and
popa
test
sbb
inc
cltd
inc
mov
xchg
xor
jge
dec
or
push
add
sub
ljmp
orb
jmp
and
addb
test
adc
push
adc
xchg
fwait
adc
mov
sbb
daa
adc
xor
mov
pop
mov
jecxz
mov
or
or
test
push
dec
push
loopne
and
add
loope
xchg
or
lcall
or
jno
and
ret
dec
lods
xor
add
or
adc
inc
mov
mov
je
dec
push
dec
adc
push
push
xchg
pop
or
push
push
push
add
push
popf
xor
mov
xchg
adcb
pop
add
mov
mov
and
jne
cmp
xchg
xor
inc
ret
inc
test
stos
popf
or
pop
sbb
push
mov
push
xchg
je
lods
add
les
movsb
mov
push
rcrl
movsl
sub
sbb
ss
aas
pusha
mov
adc
pop
push
nop
out
shlb
jne
mov
ja
jne
les
or
inc
add
int3
test
nop
or
add
inc
bound
dec
movb
fstpl
mov
or
and
sbb
jns
mov
bound
aad
xchg
cmpsb
xor
adc
add
mov
sub
push
into
aad
xor
adc
and
cmpsb
adc
push
mov
inc
ss
mov
mov
xorb
adc
inc
cmp
loop
add
movl
orb
mov
movl
xchg
push
adc
stc
pop
mov
adc
pop
inc
int
or
xchg
push
cmpsl
add
gs
lea
shlb
insl
dec
xchg
dec
xor
sbb
nop
dec
out
pop
je
mov
scas
add
pusha
aam
pop
fwait
popa
out
add
cltd
test
push
and
sbb
jo
pop
and
je
sub
rolb
and
adc
pop
cmc
mov
mov
fildll
outsb
lods
mov
daa
lea
add
add
and
or
imul
imul
pop
aas
mov
xor
and
add
push
inc
stos
pop
les
inc
insl
lods
pusha
addb
sub
sbb
int
xor
sbb
pop
jo
fcmovnb
and
es
dec
pop
push
mov
rclb
adc
xchg
xchg
inc
adc
add
inc
arpl
addr16
test
movsb
imul
fs
mov
add
sbbl
adc
cs
jl
rolb
dec
int
mov
ret
dec
push
adcl
and
mov
or
mov
xor
pop
lds
jno
movsl
push
sub
adc
sub
and
mov
push
push
dec
adc
movsl
mov
xchg
push
fwait
and
addb
rolb
imul
es
xchg
mov
pop
test
inc
sbb
or
jmp
inc
pop
add
dec
dec
xchg
dec
sbb
movsb
lcall
inc
ss
sbb
loop
adc
jae
movb
or
addb
int
and
adc
xrelease
sub
dec
jo
and
mov
inc
sub
and
and
es
pop
pop
adc
ret
push
icebp
jb
sub
test
aad
mov
xchg
int
test
xchg
add
mov
mov
ret
movsb
push
pop
adc
fwait
loop
and
add
cmp
inc
xchg
cmp
test
lahf
cmpl
push
xor
sbb
cmp
adc
and
and
stc
inc
arpl
ret
sbb
or
add
pushf
nop
decl
inc
subb
mov
and
sbb
jnp
mov
sbb
sbb
in
out
or
mov
mov
and
inc
inc
mov
xor
mov
add
dec
subl
push
add
dec
test
or
sbb
sub
popf
push
add
les
mov
sub
imul
movsb
stos
shrb
ret
adc
fistps
sarb
pop
sub
cmpsb
cwtl
inc
test
movb
xor
pop
xor
fwait
lock
and
add
or
repnz
or
add
lcall
orl
shr
add
mov
shl
sub
add
or
or
mov
push
mov
add
mov
subb
add
cmc
test
stos
pop
jecxz
mov
sub
mov
xor
and
xchg
xorl
pusha
cmpsb
mov
inc
push
dec
enter
lcall
cmpsb
xor
sub
xchg
xor
test
cltd
pop
aaa
inc
jo
inc
repnz
sbb
outsl
xor
movb
push
test
std
add
insb
lea
inc
sub
test
adc
adc
inc
stos
orl
add
adc
ds
cmp
jns
inc
sub
or
jno
cmp
add
inc
add
pop
push
add
push
xlat
fistl
adc
jge
mov
add
jmp
mov
pop
rcl
add
mov
fists
add
xchg
xor
mov
and
sbb
adc
adc
push
aad
sidtl
xchg
flds
mov
inc
xor
cmp
test
decl
and
std
mov
sbb
and
and
subl
fldl
push
dec
aaa
mov
mov
xorl
scas
cmp
mov
mov
adc
loop
add
popf
add
dec
stos
mov
repz
rcrl
rorl
sbb
pop
adc
mov
inc
sbb
adc
and
mov
fldcw
sub
test
push
or
adc
fstpt
sub
sbb
push
jo
mov
es
aaa
add
jo
xchg
mov
xchg
mov
pop
test
dec
or
mov
pop
and
dec
or
mov
pop
push
lds
pop
xorb
sub
sbb
and
mov
dec
mov
pop
inc
aaa
subb
out
nop
cmpb
add
addl
pop
inc
add
xorl
pop
adc
xor
orb
sub
roll
mov
jg
sbb
and
dec
xor
xor
popa
sub
addb
arpl
add
add
sub
xor
xchg
data16
xchg
xor
jns
xor
fwait
cmpsl
sahf
int
push
cld
movsb
dec
add
or
sbb
aad
add
pop
xor
xor
xor
dec
push
cmpsl
mov
push
inc
loope
sub
mov
xor
popf
cmpsb
lock
call
dec
cmc
xchg
in
adc
inc
push
push
pop
sbbl
mov
and
jmp
jne
loop
shrl
stos
and
xchg
pop
push
push
pop
push
add
test
adc
xor
and
and
rolb
add
pop
inc
test
dec
shll
push
adc
stos
cmc
jecxz
xchg
push
pop
shl
arpl
inc
inc
adcb
xchg
cmpsb
ret
pop
xor
xor
ja
sbb
repnz
add
pushf
in
rclb
jne
jmp
or
and
das
and
shll
push
loop
and
insb
add
add
jmp
or
ljmp
movsb
sahf
cmpsb
push
push
sbb
push
adc
fmuls
test
fistpl
orl
sub
shll
lds
cltd
or
cmp
stos
test
movsl
push
pop
push
rcrl
inc
add
pop
sbbb
jae
or
inc
add
popa
xchg
xchg
sbb
movsb
cmp
adc
in
xchg
in
cmpsb
test
popl
sub
add
mov
cmp
xor
mov
test
call
add
mov
dec
shlb
ret
sbb
outsb
mov
dec
mov
mov
sub
add
inc
sbb
xor
sub
sub
pop
and
or
adc
pop
and
jge
mov
jno
out
out
and
outsb
jmp
stos
orb
popf
mov
leave
push
lcall
fwait
sahf
mov
jno
push
mov
jecxz
mov
out
add
xor
push
mov
xchg
ret
cwtl
iret
in
daa
jae
jmp
mov
jmp
or
pusha
sub
sbb
jne
lea
inc
or
mov
nop
scas
mov
and
sbb
mov
mov
inc
sbb
fwait
lcall
adc
test
cli
icebp
fnstenv
repz
cld
push
adc
xorl
adcl
dec
and
jno
fisubrl
push
lahf
xlat
mov
aam
push
fs
bound
mov
imul
xchg
sub
inc
insl
roll
adc
dec
jno
dec
in
ret
lea
scas
nop
mov
sbbb
addr16
andl
push
rorb
add
adcl
lahf
or
mov
mov
mov
push
or
movsb
inc
pop
push
and
adc
popf
jbe
or
sarb
jno
push
mov
xor
scas
fcom
add
xchg
dec
mov
jno
subb
push
or
mov
fldenv
and
in
mov
and
ret
insl
mov
pop
jne
and
push
add
rolb
lea
sub
xchg
ret
ret
xchg
push
inc
lea
inc
mov
push
pop
adc
xor
xchg
shr
and
dec
aas
or
ret
mov
sub
dec
mov
iret
push
sbbl
add
divb
mov
push
int
gs
nop
xor
mov
lret
cltd
cmpsb
sub
push
mov
sbb
shlb
dec
loope
imul
add
scas
mov
adc
mov
cmp
sbb
push
mov
sub
or
stc
xchg
xchg
or
xor
inc
faddl
mov
push
fs
es
out
sub
mov
imul
subl
xchg
push
inc
imul
adc
mov
notl
xchg
sub
and
icebp
addr16
data16
mov
stos
dec
inc
inc
leave
int
pop
rolb
adc
inc
inc
sub
sbb
xor
fdivs
mov
add
inc
loop
xchg
cmc
mov
mov
or
arpl
pop
or
test
andl
or
pop
sub
add
adc
push
insl
adc
inc
xchg
adc
mov
ret
adc
mov
addl
mov
adc
mov
stos
pusha
movsb
mov
or
sbb
dec
or
ret
test
mov
dec
pop
and
xchg
mov
pop
mov
mov
sbb
loopne
xor
add
xchg
push
inc
add
imul
adc
outsb
xchg
add
mov
aas
xchg
sub
mov
inc
inc
or
addl
add
add
inc
push
inc
mov
add
dec
sub
fwait
push
mov
lcall
and
dec
test
add
popa
and
push
add
cmp
push
pushf
xor
xchg
dec
cmp
mov
stos
adc
sbb
les
xor
mov
add
adc
or
cmp
stos
nop
loopw
or
and
fs
mov
push
test
aas
cmp
xchg
and
sbb
add
add
and
aam
cltd
mov
sub
sub
xor
adc
add
jmp
xchg
mov
jne
dec
cmpl
mov
es
subb
add
es
sbb
roll
fildl
lods
xlat
dec
jae
imul
leave
lods
stos
mov
xor
mov
enter
cmpl
repnz
adc
and
push
out
addl
add
das
sbb
and
mov
mov
add
aas
repz
or
popa
lods
ja
fiaddl
adc
mov
adcl
or
cmp
sub
sub
adc
or
mov
addb
jo
cmpsl
inc
ret
pop
mov
adc
and
dec
addl
outsl
push
inc
sub
test
pop
imul
adc
daa
daa
aas
and
jecxz
cmp
and
push
movsb
and
jno
cmc
adc
out
cmp
adc
loope
and
and
in
arpl
add
or
mov
xor
adc
pop
push
add
xchg
xor
sub
lea
fs
adc
or
sti
dec
add
sub
or
add
cmpl
popf
adc
adc
push
rolb
or
inc
push
rcrb
xor
nop
fnsave
jno
inc
js
add
sub
add
inc
ret
adc
test
or
inc
xor
add
lea
pusha
dec
ret
in
movsb
add
mov
fld
or
jmp
or
add
or
sub
mov
and
enter
push
faddl
add
cmp
push
pop
xchg
and
add
sbbb
test
xor
sub
push
xor
push
xchg
aas
subb
clc
test
iret
cli
stc
add
or
or
daa
adc
ret
push
and
push
and
insb
or
int3
push
sbb
cwtl
pusha
dec
orl
cmp
inc
mov
sti
add
or
jmp
pop
nop
sub
and
scas
dec
push
popa
and
xchg
xor
push
push
loopne
andl
dec
movsl
flds
adc
mov
cmp
roll
rclb
nop
stc
mov
mov
pop
shrl
pop
mov
mov
ret
xor
iret
cmp
aad
xor
stos
inc
and
lea
mov
mov
or
movsb
push
sbbb
mov
xchg
and
mov
add
daa
movl
sbb
stc
push
adc
aad
jns
cmpsb
xchg
sbb
add
add
js
addl
push
and
insl
add
mov
mov
pusha
pusha
push
mov
xor
mov
test
xlat
mov
cld
add
sub
lcall
add
mov
addl
mov
test
mov
repnz
in
sbbl
push
sbbl
mov
push
jp,pn
mov
xchg
ret
prefetchnta
lcall
es
cmpsl
scas
loop
mov
es
mov
xchg
adc
adc
sub
les
pop
cwtl
and
mov
insl
adc
les
insl
and
addb
add
push
sub
sub
xchg
or
test
jo
add
adc
adc
mov
adc
test
xorl
das
lcall
push
imul
cltd
or
mov
shrb
imul
sbbl
or
rorb
dec
out
pop
nop
mov
nop
cmpsb
mov
sbb
repz
sub
orb
popa
stos
shrl
dec
pop
or
lret
sub
add
add
imul
dec
mov
ljmp
and
xchg
or
add
xchg
add
sub
test
dec
stos
or
push
or
lods
adc
jno
lods
and
sub
sbb
addb
mov
or
lret
xor
push
push
xchg
inc
test
inc
jns
adc
mov
sbb
sub
inc
lcall
push
dec
xchg
in
add
ss
rcl
adc
xchg
sub
xor
test
bound
sbb
xor
or
adc
scas
mov
mov
std
sub
pop
call
mull
test
je
sub
add
add
and
xor
or
mov
shrb
push
xchg
movsl
fildl
adc
mov
and
and
sub
cwtl
and
mov
or
jbe
test
gs
ss
pop
data16
jo
jns
inc
shlb
sub
lret
aaa
inc
ds
adc
and
es
inc
add
mov
xchg
sub
shll
sahf
fwait
pop
and
inc
xlat
add
mov
push
subb
iret
andl
add
sbb
add
sub
and
xlat
je
aam
imul
add
push
dec
mov
addl
push
pop
mov
dec
imull
or
inc
sbb
xchg
add
gs
dec
sbb
and
push
push
sbb
das
dec
fwait
cmp
shrb
adc
inc
sub
ja
ret
out
daa
leave
xor
test
add
and
mov
in
inc
pop
add
cs
sub
xchg
out
dec
push
xchg
adc
xchg
add
test
sub
inc
pop
push
sub
xor
filds
mov
mov
dec
add
add
ret
and
mov
push
sub
sarb
xor
shrl
push
sbb
adcb
push
fnstcw
pop
inc
pop
adc
mov
push
xorb
inc
xor
mov
fists
push
addl
mov
sub
cmpsb
test
inc
xchg
popf
pop
lods
bound
cmp
inc
sub
push
or
push
in
insl
imul
and
stc
pop
mov
inc
push
pop
andl
aam
add
push
shll
popa
add
and
emms
sbb
sub
std
test
and
add
sbb
scas
sub
gs
add
sbbb
mov
adc
popf
ret
mov
add
and
xor
daa
ljmp
sub
push
pop
test
popa
mov
fiadds
sbb
fnstenv
xchg
aaa
lods
addl
ss
mov
add
test
mov
pop
shrl
mov
adc
mov
add
or
rclb
or
and
add
or
movsl
push
adc
add
push
and
addr16
stos
and
pop
mov
ret
mov
add
jo
mov
movb
xorb
sbb
adcb
cmpl
rorb
dec
sub
popf
les
pusha
xchg
fisttpl
sbb
pop
shlb
add
adc
pop
xor
jge
mov
push
pusha
add
in
add
addr16
js
add
add
push
xorl
add
mov
cmp
xor
flds
xchg
in
add
mov
sub
fwait
dec
rorb
mov
add
xchg
cmp
sbb
adc
push
add
mov
aas
add
rclb
dec
or
dec
add
and
xor
add
or
push
push
jo
xchg
and
add
mov
inc
xchg
popa
jns
adc
adc
push
pop
inc
in
cmpsl
loopne
inc
cmp
adc
and
inc
mov
xchg
inc
mov
fmul
xor
sub
inc
push
sbb
test
pop
arpl
or
adc
jmp
mov
or
lret
rclb
push
addb
and
dec
aad
dec
shrl
and
shrl
and
sbb
mov
jp
add
add
inc
or
and
movsb
and
popa
popl
jg
scas
inc
and
sub
ss
loop
jmp
push
dec
adc
mov
out
jmp
scas
push
dec
gs
dec
lcall
rclb
sbb
sub
repnz
or
xchg
rclb
or
je
movsb
icebp
add
push
cmpsl
sub
inc
ret
add
out
mov
add
mov
sbb
add
xor
lds
adc
shrb
inc
jmp
mov
add
or
dec
inc
lds
or
cmpsl
jno
incl
rclb
pop
push
rol
test
adc
and
imul
in
or
mov
and
xor
mov
pushl
add
sub
outsl
pusha
loop
pop
pop
loop
inc
sbb
cmp
xor
cmp
fisttpll
jne
add
inc
and
mov
add
mov
and
add
mov
pop
shrl
or
int
adc
adcb
xor
add
push
rcr
sub
xor
jne
fwait
adc
cwtl
xor
sbb
insl
lcall
rolb
inc
sti
push
js
loopne
mov
sbb
jo
lcall
pop
pushf
inc
cmp
cmpsb
sbb
adc
add
mov
push
test
mov
adcb
mov
xor
aas
or
test
inc
or
inc
sbbl
push
add
inc
push
sub
imul
imul
and
inc
cmp
xchg
xchg
mov
xor
push
xlat
sub
pop
inc
and
int
adc
insb
pop
lds
add
into
push
cmp
sbb
lds
dec
decl
push
fidivl
jmp
mov
imul
cmp
inc
mov
adc
aam
push
pop
cmpsl
test
adc
shrb
cmovge
mov
mov
sub
jmp
and
inc
jnp
shrb
push
adc
shrl
push
pop
or
and
popa
je
push
inc
jns
adc
sbb
dec
inc
push
nop
and
imul
sbb
push
add
pop
lret
or
xor
push
sub
jne,pt
imul
rcrb
cwtl
loope
rolb
xor
test
push
cli
fcmovne
mov
and
inc
jl
add
jp
sub
test
and
jb
and
mov
push
popf
negl
in
cld
nop
dec
or
mov
addl
repz
or
or
pusha
mov
stos
push
and
mov
aad
mov
cmp
popf
gs
shrl
test
inc
test
xor
dec
push
adc
mov
fwait
movsb
inc
dec
or
and
pop
dec
sub
xchg
push
lods
stos
add
std
roll
push
or
cmpb
sub
sub
shrb
lods
or
gs
test
test
and
xchg
cmpsb
adc
adc
push
push
leave
sbb
mov
mov
sub
or
stos
movsb
xchg
es
movsb
in
push
xor
add
imul
sbb
xchg
fwait
rolb
lds
xor
lea
lods
adc
or
cmc
inc
or
push
dec
inc
inc
xchg
push
inc
in
sbb
mov
and
bound
adc
or
rclb
or
adc
sub
lods
cwtl
movb
jl
xor
jge
adc
out
xor
cmp
adc
pop
jne
imul
pop
xor
sub
rclb
mov
push
pop
mov
sub
sub
dec
call
xchg
sub
repnz
fs
adc
xchg
mov
xor
push
mov
cmc
imul
push
lds
out
sbb
inc
lds
sbb
fldenv
inc
pusha
push
and
jne
and
push
inc
and
push
push
mov
push
inc
dec
pop
ret
and
pop
jnp
aaa
mov
lcall
adc
mov
imul
pop
add
xchg
xor
mov
mov
jmp
adc
fnsave
inc
sbb
leave
rcrb
mov
push
popa
inc
xor
jns
mov
adc
or
or
push
jo
inc
or
add
dec
mov
test
xor
adc
test
mov
sbb
ja
and
inc
hlt
mov
pop
or
cs
jo
sbb
andb
scas
push
adc
jge
sub
dec
jge
and
and
add
mov
and
andl
dec
imul
xchg
cmpsb
or
lods
xchg
cmp
xchg
and
adc
mov
dec
mov
popf
add
mov
add
fs
add
movsb
sub
mov
add
mov
push
add
add
orb
gs
shrb
aam
leave
pop
iret
gs
sbbb
sbb
cwtl
shrb
cmc
or
inc
push
jcxz
xor
add
or
pop
rcll
inc
lcall
nop
lock
fmuls
test
inc
mov
aam
jg
jbe
cwtl
mov
xor
add
fimull
cmpsl
add
push
xor
add
adc
and
or
mov
or
dec
inc
add
mov
dec
push
jo
sbb
xor
push
lret
ds
and
add
lds
dec
sub
xchg
mov
or
inc
and
stos
inc
aad
dec
sub
leave
rsm
or
in
sbb
cmp
push
or
add
xor
inc
loopne
loopne
add
pusha
out
push
sbbl
jns
sub
jbe
add
add
shrl
cmpsl
pop
stos
dec
lods
fwait
data16
out
xchg
jle
xor
sub
lret
sbb
xchg
mov
and
sub
loopne
add
scas
dec
pop
push
gs
add
leave
pop
mov
xchg
mov
and
insl
movsb
adc
ja
je
adc
aaa
inc
arpl
stos
sub
sub
pop
and
mov
inc
push
test
xor
adc
xchg
stos
pop
dec
loopne
inc
xor
push
adc
cmp
mov
mov
inc
add
adc
inc
ss
movsb
lea
mov
add
xlat
sbb
test
movsl
and
pop
test
push
mov
and
add
mov
lea
mov
adc
sub
out
lahf
and
bound
pop
aas
test
popa
inc
frstor
cs
and
add
mov
aam
sbb
dec
add
mov
inc
test
shr
nop
sub
pop
dec
imul
lret
in
inc
dec
mov
add
mov
or
pop
adc
inc
and
sub
cmp
and
xchg
sub
cmpsl
or
mov
loop
xor
adcl
movsb
mov
dec
mov
mov
and
cmp
mov
or
push
sub
test
or
and
or
bound
stos
sub
mov
xor
dec
inc
insb
iret
dec
dec
xor
es
out
add
jo
addl
push
push
xchg
lahf
les
mov
adc
push
adc
loopne
jmp
jae
xchg
pop
adc
and
clc
mov
push
fwait
ret
and
xchg
adc
cmp
adc
mov
push
dec
mov
inc
ret
out
ds
loopne
mov
sub
cwtl
insb
bound
jbe
ret
mov
jmp
adc
pop
mov
push
movsb
testl
or
pusha
add
sub
neg
push
adc
dec
xchg
or
dec
push
adc
sub
mov
fs
loope
test
push
inc
dec
imul
jns
loop
xchg
test
and
cld
sbb
dec
mov
jmp
je
xchg
outsb
subb
sub
or
and
push
and
sbb
jle
inc
mov
nop
cmp
add
or
loop
stos
pop
dec
xor
arpl
jmp
add
mov
int
and
xor
ret
loopne
addb
stos
and
xor
add
add
add
sub
icebp
cmpb
add
orb
sbb
add
add
jo
maxps
sbb
inc
push
xor
rcrb
jmp
and
or
lcall
sub
jecxz
inc
pop
mov
and
inc
and
dec
cmpsb
or
js
xchg
mov
incl
dec
xchg
or
sub
andl
adc
mov
or
push
in
sub
popa
and
cmp
testl
mov
push
push
inc
sbb
adcb
push
xchg
push
orb
dec
and
dec
test
adc
stos
push
lahf
inc
insl
loop
add
test
movsl
or
push
pop
and
repnz
jns
or
mov
add
push
or
xorl
sbb
icebp
dec
xor
movzbl
cmp
pop
mov
and
sub
and
addl
sbb
lcall
ja
inc
adc
ljmp
sub
fwait
les
inc
adc
les
int3
dec
cmp
adcb
stc
aam
xor
fdivl
flds
mov
add
mov
stos
mov
push
dec
push
add
jmp
or
ret
mov
cmp
ret
or
mov
xor
shl
inc
pop
cld
mov
popl
or
jo
add
push
sbb
push
push
inc
or
popf
in
sub
xor
xchg
mov
push
push
cs
xor
popa
add
push
push
or
or
imul
inc
push
sbb
in
adc
add
inc
add
add
inc
mov
pop
pop
lods
sbb
pusha
jmp
and
sub
or
push
add
adcb
or
test
mov
xor
inc
movsb
dec
mov
cmp
inc
sbb
add
pop
push
leave
inc
lret
mov
rcl
sub
mov
xor
popf
movsb
jns
xchg
ficomps
xchg
add
into
sbbl
inc
loop
xchg
mov
cmpsb
lret
add
ss
je
dec
mov
fistps
sahf
les
lock
mov
push
xor
movsl
add
adc
nop
sub
int
and
xor
dec
sbb
nop
mov
add
ljmp
sbb
jmp
jo
mov
adc
loope
xor
dec
repz
sub
imul
add
adc
pop
gs
adc
call
sub
inc
add
je
stos
jns
adc
inc
in
xor
and
fwait
outsb
add
lds
roll
ds
subb
xor
addr16
pop
adc
add
push
sti
mov
popf
xor
add
mov
push
dec
cs
mov
mov
pop
loope
add
mov
addb
push
xor
push
or
pusha
mov
test
jne
rolb
adc
popa
inc
adc
sbb
rclb
xor
arpl
lods
add
mov
mov
outsb
pop
fcoms
mov
and
call
sub
cmpl
aaa
incl
xchg
lcall
jbe
add
inc
ss
sub
mov
cmp
and
dec
inc
lret
cmp
pusha
add
mov
scas
dec
xchg
adc
push
sbb
aad
mov
inc
sbb
pop
mov
imul
or
push
sub
push
adc
jmp
add
mov
mov
and
cmp
inc
loopne
xchg
es
in
push
es
lds
and
pop
dec
mov
mov
fstpl
push
mov
iret
int
jno
test
inc
and
jecxz
or
addr16
add
ud0
add
push
test
scas
add
push
push
xorl
test
sub
push
push
cmpb
mov
or
lea
xchg
push
and
pop
cli
rcll
xchg
sub
aad
inc
jne
xchg
cmp
push
stos
fnsave
inc
ljmp
fisubs
mov
dec
test
fwait
mov
in
adc
dec
push
add
inc
pop
cmp
ja
cmpl
arpl
arpl
mov
add
fstpt
icebp
inc
imul
xor
sbb
push
mov
or
add
dec
and
rolb
dec
sub
fsubrs
or
or
adc
movsl
and
cmpsb
test
or
lcall
ret
pop
in
fs
sarb
mov
jecxz
stos
arpl
dec
xchg
mov
sub
fwait
xchg
data16
mov
xor
xor
cmpsb
testl
mov
inc
xchg
and
cmpsb
flds
jp
sub
ds
push
adc
sahf
orb
mov
mov
adc
add
push
lret
push
add
push
pcmpgtw
push
pop
or
rclb
or
xor
adc
shrd
push
fldl
stos
and
inc
or
adc
inc
adc
rolb
xor
xchg
push
add
cvtpi2ps
sbb
popa
test
adc
push
inc
xor
pop
inc
xor
adc
and
mov
or
ljmp
push
arpl
dec
and
xchg
add
sbbb
or
adc
subl
sbb
cmp
pusha
mov
int
arpl
xchg
and
scas
lahf
mov
inc
mov
shlb
push
nop
stos
sub
add
or
sbb
sarl
mov
push
mov
jo
add
adc
sub
push
push
or
pop
or
xor
ret
lds
or
shll
roll
inc
sbb
inc
adc
inc
imul
dec
loope
stos
inc
push
inc
lret
cs
ss
pushf
dec
jp
int
adc
cmp
fcomps
stc
cmp
and
pop
or
subb
ret
sub
inc
and
push
pop
inc
shrl
push
lock
mov
daa
add
ret
stos
add
xchg
adc
or
inc
lods
add
clc
push
push
or
les
mov
adc
xchg
les
mov
push
or
dec
ljmp
xor
sbbl
test
or
rolb
stc
cmpsb
lock
jno
mov
gs
loopne
dec
scas
mov
stos
cmp
or
xor
popf
shr
xchg
add
js
add
bound
and
push
nop
stos
shl
adc
xor
inc
iret
ret
test
aad
or
pusha
inc
ret
popa
add
mov
orl
stos
xor
dec
jnp
jno
shlb
pop
jge
and
cwtl
adc
and
arpl
mov
repnz
jno
rclb
roll
cltd
sbb
inc
xchg
and
xchg
cwtl
lds
pusha
cld
scas
inc
lcall
mov
imul
xor
push
imul
or
push
addl
dec
sbb
xor
inc
je
repnz
sub
mov
or
and
push
addb
movb
adc
jbe
sub
sbbb
jg
leave
add
sbb
sub
fmull
or
outsb
test
pop
ret
out
add
lret
or
add
nop
dec
rolb
aad
subb
mov
pop
push
adc
inc
leave
adc
jno
sbb
adc
and
sub
and
adc
pop
test
mov
daa
adc
adc
sub
stos
adc
mov
outsl
andb
outsb
and
shrl
or
jmp
inc
shrb
inc
adc
sbb
mov
xlat
push
jmp
mov
adc
insl
out
mov
add
add
push
sarb
sub
pop
rcrb
mov
nop
cmpsb
mov
nop
push
fwait
das
adc
dec
cmpsl
mov
mov
cmp
sub
and
insl
hlt
fldt
mov
sbb
push
xor
xor
sbb
or
and
push
adc
sub
cmp
imul
pop
mov
mov
rclb
adcb
lods
jne
les
inc
or
add
inc
push
cmp
jo
xchg
push
rcl
sub
xor
inc
push
enter
sbb
scas
repnz
rclb
fistpll
inc
shlb
imul
fwait
es
enter
test
andl
leave
leave
repz
fstps
push
jae
lds
sub
aad
cld
das
test
xor
pushf
addl
jmp
pop
fnstenv
mov
pop
adc
sbb
test
mov
mov
shlb
inc
mov
adc
iret
test
xor
sbb
and
xchg
add
mov
adc
and
sbb
xchg
rclb
xor
sahf
cs
movsb
add
push
sbb
lret
repz
test
pop
xorl
dec
daa
add
add
sbb
or
mov
loop
mov
rcrb
or
mov
xchg
movsl
or
movsb
adc
add
call
inc
stos
add
and
rorb
adcb
pop
jo
or
addb
cmpsl
add
sub
cmp
mov
fdiv
outsb
adc
mov
je
sbb
inc
roll
pop
sub
mov
sub
lret
sbb
adcl
subb
or
mov
paddsb
pop
xor
mov
sbbl
addr16
adc
and
adc
test
out
jl
int3
sbb
addb
push
jge
push
sub
lea
dec
pop
inc
inc
sub
test
and
push
or
mov
push
pusha
push
sub
inc
iret
inc
shrl
add
pop
mov
pop
inc
inc
add
jo
mov
repnz
daa
mov
test
jbe
add
add
xor
and
aaa
and
mov
inc
mov
add
insl
add
fadds
mov
dec
insb
lcall
xor
insl
pop
test
rolb
pop
xchg
jo
xchg
and
sub
js
adc
nop
iret
enter
lcall
mov
daa
lods
popf
adcb
mov
and
or
and
mov
bound
sub
test
mov
adc
adc
push
movsb
mov
add
adc
test
mov
xchg
scas
sub
sbbl
lock
push
add
or
test
jne
push
sub
or
xor
dec
aaa
inc
pop
ljmp
inc
mov
in
fwait
addr16
or
cs
call
insl
insl
dec
adc
les
and
mov
cmp
xor
and
mov
push
filds
dec
mov
rorb
addr16
pusha
cmpsb
mov
rorb
sub
xchg
xor
or
out
cmp
sbb
sbb
fstps
sbb
mov
adc
pop
push
iret
repz
popa
call
les
test
addb
or
xchg
mov
shll
add
or
imul
hlt
push
and
sbb
xorb
lea
and
sub
mov
test
add
or
popa
and
pop
add
sub
adc
mov
adc
dec
push
mov
inc
sub
or
ss
push
pop
rclb
sbb
scas
inc
popa
sbb
adc
lds
dec
jae
testb
push
mov
mov
inc
sbb
add
xchg
insb
mov
outsb
les
rcrl
arpl
and
mov
mov
inc
loopne
mov
ss
rolb
inc
popa
stos
mov
push
movsl
inc
cwtl
adc
inc
mov
pop
mov
call
fs
add
pop
and
pop
inc
push
aad
mov
dec
adc
pop
rcl
movsl
or
and
add
mov
insb
mov
mov
fbstp
stos
mov
lahf
jecxz
mov
or
inc
or
inc
mov
sub
mov
and
mov
fs
rorl
add
loop
fwait
mov
mov
add
nop
jl
leave
sbb
push
test
dec
adc
in
mov
insb
cli
cmp
add
or
adc
gs
sub
mov
daa
adcb
mov
sbb
jae
or
and
xchg
or
add
mov
lods
and
sub
les
sub
add
lret
inc
push
adc
ss
imul
insb
xchg
or
lcall
xor
lock
and
add
cmp
movsb
lret
inc
lcall
xchg
test
stc
push
xor
push
dec
orl
sbb
nop
rol
les
adcb
dec
dec
inc
or
dec
cwtl
mov
or
in
loop
sub
mov
test
push
repz
add
add
cmp
xor
xchg
sbb
or
dec
jecxz
sti
add
mov
mov
xchg
mov
xor
adc
mov
shlb
js
xchg
jno
sub
rolb
pop
fiaddl
ud0
xor
rorl
nop
dec
repz
dec
xchg
mov
lods
or
pop
rorl
fwait
pop
jae
or
dec
dec
jge
movsl
add
inc
movsl
add
pop
mov
or
dec
mov
adc
ja
test
adc
inc
pop
xor
jo
dec
push
add
xchg
adc
or
add
dec
imul
aas
xchg
jl
lea
or
cmp
mov
inc
push
adc
inc
xchg
ljmp
mov
fwait
pop
xlat
pusha
jmp
iret
dec
push
lds
jl
rcrb
add
pusha
mov
lahf
test
in
stos
sbb
inc
in
push
or
test
and
inc
push
fdivrs
enter
ljmp
fs
xor
popf
or
add
fs
or
mov
arpl
pop
or
test
aad
lcall
xor
xchg
adcl
pop
cmpsb
je
xchg
loopne
data16
les
xchg
dec
pop
xor
sbb
sbb
and
repnz
sbb
mov
pop
jno
jns
or
or
enter
xchg
push
in
or
lea
sbb
inc
mov
sbb
stos
push
roll
pop
inc
add
xor
ja
pop
inc
popa
mov
repz
or
cwtl
sbb
mov
inc
int
sub
int
pop
dec
pop
push
or
or
cmp
add
push
les
xor
leave
add
push
xlat
test
je
shrb
adc
mov
add
insb
mov
xchg
data16
push
or
sub
jno
mov
test
lods
jle
cltd
mov
dec
jecxz
xchg
cmp
cld
popa
lcall
lahf
pcmpgtb
mov
bound
sbbb
cmp
sti
adc
or
push
mov
xor
pop
shrl
mov
sbb
mov
les
aas
and
add
stos
inc
adcl
sub
aad
dec
dec
jecxz
inc
cmpsl
or
outsl
stos
je
push
xor
xchg
pusha
imul
pop
sub
dec
sbb
enter
cli
loopne
sbb
popa
pop
insb
lds
fwait
adc
int
dec
sub
mov
pop
xchg
out
lods
cmp
adc
inc
xchg
xor
pop
repz
add
test
add
and
aas
sub
dec
adc
inc
ret
push
pop
push
and
dec
imul
add
sub
pop
add
test
mov
inc
mov
movsl
loope
es
pop
scas
add
inc
dec
dec
xor
push
xor
ds
and
add
xchg
mov
aas
sbbl
call
push
add
ljmp
dec
mov
and
jae
pop
lds
je
fistpll
xor
dec
clc
adc
leave
cmpsb
js
loope
int
sbb
js
jecxz
js
repnz
outsl
xchg
mov
adc
adc
sbb
sub
rorb
gs
sub
push
addl
push
dec
daa
add
or
and
add
sub
xchg
add
inc
add
incl
adc
rcrl
pop
inc
xor
sbbb
push
out
insl
add
sub
addb
inc
test
inc
dec
xor
pop
nop
adc
or
rorb
sbb
ret
push
mov
mov
push
das
pop
or
sub
popa
dec
inc
imul
dec
inc
pusha
popa
xchg
iret
adc
and
add
shrl
nop
test
push
lret
and
movsb
mov
adc
loopne
and
or
adc
cmpsl
test
fwait
push
add
mov
outsl
push
push
or
inc
mov
jmp
or
sub
adc
mov
cmpl
add
inc
push
inc
inc
xorps
rorb
pusha
add
add
movsb
or
push
rorl
leave
popa
test
inc
mov
sub
cmp
sbb
dec
or
loopne
test
loope
cmp
push
dec
arpl
ds
fnsave
sbb
and
mov
xor
mov
push
xor
nop
sub
and
adc
mov
push
sbb
inc
xchg
add
pop
test
push
es
pop
inc
push
add
cmpl
xor
shlb
fists
repnz
sub
inc
je
inc
fwait
add
jg
or
or
inc
enter
cmp
mov
es
push
and
rorb
ds
int3
shl
mov
fnsave
xor
cmpsb
push
sub
inc
inc
mov
dec
cmp
jae
dec
mov
adc
push
adc
stos
inc
add
popa
mov
xchg
es
and
dec
iret
jns
pop
test
xsaves
cmp
loope
and
mov
rclb
lahf
adc
xor
jnp
or
popa
adc
add
fbstp
xchg
arpl
in
xchg
popf
sbb
inc
call
mov
mov
and
xchg
xchg
aam
gs
insl
scas
inc
lcall
jbe
lcall
lcall
and
mov
iret
lods
xor
roll
jne
sbb
or
and
pop
test
add
lcall
add
repz
rclb
daa
and
mov
xchg
sbb
rcrl
rolb
sbb
add
jo
aaa
andb
ljmp
cmp
sub
es
push
sbb
and
inc
or
xor
mov
xorl
leave
cmpsb
ret
int3
mov
add
sahf
xchg
fcoml
mov
enter
les
xor
sub
add
mov
sub
push
and
dec
dec
and
stos
adc
or
add
cs
xchg
inc
test
mov
add
pop
inc
cmpsl
lods
roll
and
lea
xchg
mov
push
push
sbb
movsb
sbb
lahf
pushf
mov
jmp
nop
xlat
cmp
xor
adc
fwait
out
pop
rcrl
sub
mov
pushf
xchg
jecxz
ds
mov
mov
adc
les
add
lcall
cmp
xchg
rcll
push
testl
xor
repnz
pop
push
cmc
hlt
pshufw
sub
or
sbb
popf
test
sbb
aaa
dec
lods
and
add
ret
adc
dec
les
jecxz
or
add
pop
mov
shll
push
xor
push
xchg
adc
add
sbb
and
xchg
cli
push
sbb
push
pop
or
stos
dec
add
and
xor
mov
je
cmp
pusha
adc
pushf
sub
add
mov
fs
mov
sbb
cwtl
testb
into
enter
adc
inc
add
push
pop
pop
ror
aam
or
dec
sbb
cmc
nop
inc
push
xchg
inc
movsl
mov
and
push
xchg
xchg
add
mov
in
add
fcoms
shrb
and
push
lods
inc
orl
rolb
nop
lcall
test
adcl
mov
add
jp
push
xor
mov
xor
mov
adc
addl
adc
leave
shlb
pop
push
push
cli
es
add
aam
inc
pop
movhlps
cs
scas
lea
ljmp
jge
mov
test
and
rolb
xor
inc
adc
shrl
jmp
adc
rep
and
pop
pop
push
pop
and
rorl
inc
mov
ret
or
dec
push
ret
inc
pusha
push
or
fsubrs
movsb
add
mov
inc
jno
iret
add
add
call
das
sub
dec
stos
int3
xchg
mov
sti
insl
pop
dec
adcb
cmpps
sub
jo
bound
imul
push
mov
and
adc
push
sbb
or
inc
shrb
inc
inc
add
push
xor
sbb
and
mov
adc
inc
stos
cwtl
dec
mov
dec
inc
sub
add
add
sub
dec
mov
and
shll
mov
or
mov
pop
aad
fsts
adc
xor
xchg
push
jo
mov
sbb
popa
sbb
xor
mov
push
add
shll
cltd
push
mov
or
sub
dec
sahf
and
mov
jae
xchg
add
out
rorl
test
push
dec
mov
push
and
adc
add
and
nop
jno
xchg
or
xchg
daa
or
fistl
aad
add
sbb
mov
ljmp
push
mov
xchg
inc
adc
adc
dec
push
fldl
jne
xchg
push
add
jo
rolb
push
jns
push
add
mov
xchg
lret
xchg
adc
add
cltd
sbbl
inc
mov
sbbb
push
sub
jo
outsb
jns
popa
sub
ljmp
dec
and
add
in
dec
dec
fxch
test
imul
sbb
add
push
aam
mov
add
lret
or
xor
jne
std
pop
shrb
andl
xor
or
fisttpl
orl
flds
xor
in
lock
add
nop
mov
test
mov
loope
test
stc
push
and
push
adc
int
icebp
lds
sub
pop
xor
arpl
mov
adc
test
push
pop
xchg
ljmp
add
rclb
leave
call
xor
stc
subb
sbb
aad
sbb
mov
inc
inc
cltd
sbb
dec
mov
rolb
adc
inc
out
test
arpl
inc
push
xchg
inc
mov
dec
rorl
push
or
rorl
push
push
push
or
adc
dec
jmp
mov
and
fwait
es
push
inc
outsl
fwait
add
inc
int
add
outsb
xchg
stos
movsb
mov
iret
mov
and
dec
jl
popa
aaa
cltd
aam
adc
aas
pop
subb
cmpsl
je
test
sub
int
mov
push
enter
out
clc
dec
sub
or
clc
insl
test
es
lcall
les
stos
xlat
or
sbb
push
push
dec
adcb
lea
push
mov
adc
lret
mov
xor
lods
push
sbb
fwait
mov
or
sub
dec
ljmp
dec
pop
inc
dec
aaa
jmp
test
inc
stos
lcall
add
dec
sbb
and
nop
dec
mov
orl
ljmp
mov
mov
mov
or
bound
and
sub
loopne
insb
bound
inc
and
lret
inc
leave
or
lret
or
lods
clc
out
fisttps
adc
aas
and
or
pushf
lds
fstps
sub
and
pop
adc
mov
pop
iret
or
mov
pop
repz
dec
cmpsl
add
or
sub
test
and
test
sbb
pop
xor
dec
fwait
mov
negb
or
or
sbb
icebp
adc
test
test
lds
mov
xchg
popf
scas
popa
shlb
sahf
arpl
sbb
mov
lret
dec
mov
xor
dec
inc
dec
inc
adc
adc
inc
cmp
mov
sbbb
add
imul
adc
stos
or
dec
jmp
stos
inc
rol
rorb
cmc
add
add
or
adc
sub
sub
mov
mov
lcall
ljmp
nop
add
add
push
cmp
push
and
and
xor
and
jne
cltd
sub
outsb
adc
jns
andb
rclb
and
pop
push
xchg
xor
push
pop
sbb
cltd
ljmp
outsb
pop
test
sub
roll
adc
or
test
or
lret
xor
dec
inc
xor
add
orb
add
and
int
and
mov
iret
inc
sub
dec
shll
lea
and
jo
xchg
stos
test
cmp
pop
das
stos
adcl
aam
rolb
dec
dec
jae
fninit
add
inc
lcall
fdivr
mov
out
shlb
add
sbb
outsb
add
add
push
pop
test
and
add
xor
add
xorl
or
push
and
test
icebp
shrl
bound
mov
dec
add
add
loop
dec
les
jg
mov
addb
dec
je
or
push
and
adc
xorb
and
fstl
xor
shlb
dec
mov
mov
fwait
xor
sbb
xchg
data16
cmpsb
xchg
imul
inc
shrb
cmp
inc
xor
sbbb
or
arpl
mov
add
adc
movsb
or
rcl
sarl
add
inc
test
adc
add
mov
test
dec
or
inc
inc
sbb
mov
add
mov
xchg
lret
les
and
aas
inc
cwtl
sbb
mov
or
rorl
mov
nop
inc
inc
push
push
loop
adc
test
iret
pop
mov
out
or
push
stos
pusha
mov
testl
test
test
ret
dec
jns
xor
test
or
aam
aad
addl
and
mov
test
dec
inc
add
add
popa
xchg
rol
push
int
mov
jg
dec
and
or
push
leave
add
inc
xchg
mov
imul
dec
loop
rorl
adc
jl
popf
push
loope
xchg
dec
jae
mov
mov
mov
push
aaa
jge
flds
dec
pop
push
adc
lds
rcll
pop
and
sub
jecxz
cld
xor
push
and
push
fldcw
scas
adc
or
mov
mov
inc
and
loope
pop
sub
or
add
imul
enter
iret
and
test
xchg
aaa
stos
mov
sub
add
movsb
sbb
push
out
and
xchg
inc
cmp
cmp
test
out
andb
nop
or
lcall
imul
and
mov
push
mov
adc
dec
arpl
rol
cmp
sub
outsb
sub
sbb
inc
sub
jno
aam
sbb
xchg
inc
mov
push
daa
mov
outsb
push
stos
inc
test
mov
lea
ljmp
sub
dec
mov
or
push
xchg
rorb
sbb
push
inc
push
mov
or
adc
xchg
inc
test
or
mov
add
cmp
add
adc
pop
sub
sub
test
or
add
mov
rolb
mov
xor
movl
sub
rclb
mov
push
inc
std
push
popa
mov
inc
sub
or
or
inc
add
mov
pop
rclb
push
jo
mov
lret
les
inc
push
dec
mov
add
aad
mov
ja
call
dec
pusha
add
inc
icebp
jno
adc
add
cmp
or
leave
sub
movsl
imul
loopne
push
enter
inc
xor
data16
and
dec
cmc
insb
cmovp
sub
mov
push
push
ret
sub
subl
pop
test
scas
push
lock
sbb
pop
or
or
add
daa
movsl
push
push
stc
mov
in
or
mov
nop
icebp
test
sbb
inc
dec
adc
cmp
or
in
nop
scas
lret
add
loopne
push
mov
mov
icebp
faddl
dec
sbb
add
pop
nop
je
popa
xor
adc
sbb
bound
pop
and
sub
push
loop
movsb
test
push
jnp
sub
cmp
adc
add
dec
adc
add
inc
lea
test
push
jns
and
and
int
mov
sbb
cwtl
sbb
fildll
je
fwait
shrb
adc
sub
mov
lods
lea
inc
add
mov
and
fcompl
push
mov
popf
push
push
jne
xor
fwait
adc
xchg
xor
adc
xor
jnp
ljmp
push
and
mov
xchg
in
inc
xchg
movsl
cmpsb
push
movsb
call
push
test
mov
mov
subb
cmp
inc
test
rcll
cmpsl
mov
add
inc
and
xor
add
lcall
dec
or
and
or
shrl
sub
imul
push
dec
push
mov
push
adc
movsb
push
loope
inc
xorb
push
es
lods
cltd
and
jb
stos
test
cmpsl
jns
nop
sbb
icebp
mov
popf
mov
fstl
les
mov
xchg
out
sbbb
inc
in
add
mov
popa
test
std
inc
mov
inc
rorb
incl
xor
cwtl
gs
push
mov
add
inc
and
adc
aad
sbbb
popa
sub
pop
or
pushf
jge
adc
dec
xlat
push
sarl
and
stc
insl
jo
addl
movsb
fcmovne
fwait
dec
aad
and
or
stos
imul
mov
es
push
cmp
loopne
mov
sbb
xchg
inc
xor
jnp
int
nop
push
leave
aaa
push
nop
push
pop
pop
divb
subl
test
imul
dec
or
stos
bound
cmp
or
cmp
stos
push
movsb
xor
pop
lahf
inc
fst
inc
add
push
sub
call
adc
mov
lahf
stos
add
inc
inc
or
add
pop
roll
pop
stos
push
cmpsl
pop
pusha
add
fwait
mov
jle
addl
stos
aam
fs
in
pop
pop
xor
inc
dec
orl
and
imul
fcomi
lock
es
sbb
sub
test
aaa
and
inc
loope
decl
dec
push
or
push
leave
and
inc
pop
stos
sbb
stos
xchg
pop
bound
adc
inc
bound
add
adc
dec
or
lods
inc
xor
sub
inc
push
and
leave
xchg
mov
jbe
inc
and
inc
dec
push
push
fwait
jg
adc
popf
les
mov
push
and
jo
sar
xor
inc
test
pop
clc
lret
test
jo
inc
xchg
test
popa
cli
shlb
mov
add
sbb
in
lcall
pusha
loope
jne
clc
sti
clc
insl
mov
dec
mov
or
repnz
dec
cmpsb
mov
orb
rep
xchg
dec
imul
add
dec
jge
movsb
mov
sbb
sar
push
add
push
mov
add
sbb
loopne
push
mov
and
push
xchg
test
imul
add
addb
test
mov
push
lds
outsb
movsl
xor
fdivs
add
xor
mov
inc
sahf
mov
nop
es
push
push
sbb
mov
xchg
dec
subl
add
lahf
push
cwtl
aaa
popa
sbb
inc
call
jns
orb
es
push
adc
lods
push
push
pop
rorb
dec
stc
add
adc
lret
inc
and
xor
push
xor
fwait
lods
mov
dec
test
adc
and
mov
jmp
push
cmpl
mov
imul
adc
pop
icebp
pop
push
add
shll
adcb
mov
mov
jmp
inc
sbb
sub
shrb
push
fsts
inc
test
in
dec
les
ljmp
scas
in
or
push
pop
xor
shll
push
or
scas
add
cmp
mov
and
ljmp
push
or
adc
in
movsb
mov
push
neg
stos
adc
inc
dec
inc
mov
xchg
and
mov
cs
push
loope
ficompl
or
andb
addl
push
dec
adcb
orb
iret
ror
or
lret
inc
push
nop
push
dec
sahf
mov
mov
push
cli
lods
or
popa
jno
inc
pusha
dec
mov
rcrb
xor
imul
dec
dec
sub
and
cmp
ljmp
cmp
out
loop
fs
inc
inc
int3
mov
and
sbb
mov
imul
rolb
inc
pop
or
add
xchg
sbb
push
add
xchg
xor
dec
adc
inc
cmc
xchg
jne
ret
jns
subl
pusha
or
inc
bound
cmpsl
xchg
adc
fwait
jmp
or
or
test
mov
dec
and
xchg
add
jns
or
and
xchg
push
inc
mov
xor
lcall
int
jne
push
adc
adc
test
cmpsb
add
call
and
or
pop
fnstcw
and
test
xor
flds
test
mov
add
test
rol
in
push
aad
inc
repz
or
adc
dec
adc
add
dec
mov
loope
pop
push
mov
add
sbb
pop
xor
push
icebp
adc
cwtl
gs
mov
pop
rclb
push
hlt
add
or
push
push
pop
lret
sahf
subb
sub
xlat
sbb
fisubl
int
imul
inc
or
lods
add
sahf
outsb
call
xchg
lcall
sbb
rorl
mov
sub
or
lahf
je
jb
das
loopne
pop
out
shrb
jmp
lods
push
sbb
jns
sbb
pusha
inc
lret
xor
daa
push
or
stc
arpl
imul
je
inc
xchg
push
leave
data16
sbb
sbb
hlt
nop
out
and
add
test
out
stc
sbbb
outsb
sub
cltd
aam
bound
and
outsl
clc
gs
dec
inc
ret
mov
cmpl
movsl
jne
add
lcall
push
sbb
xor
arpl
xchg
mov
push
mov
movsb
push
stc
add
loop
test
or
xor
sar
mov
pop
jo
sbb
out
cs
rcrb
push
mov
in
inc
popf
es
jp
xchg
xchg
stos
hlt
insb
dec
sub
les
aaa
push
dec
inc
mov
or
inc
sub
inc
inc
adc
sbb
and
leave
cmp
bound
add
movsl
sub
add
pop
xchg
inc
lea
adc
imul
das
mov
mov
dec
xchg
adc
push
pusha
push
and
adc
addb
pop
dec
imul
dec
mov
rolb
sub
and
push
test
aas
xchg
xchg
out
mov
jp
cmp
xchg
cmpsl
orl
xchg
test
insb
xchg
xor
hlt
mov
xorb
inc
dec
mov
orl
push
mov
push
and
xor
nop
xchg
xor
add
and
push
jne
test
and
mov
pop
or
xchg
adc
or
and
push
aad
jno
fists
fldenv
add
inc
xorl
jae
pop
adc
add
popa
fisttps
push
jmp
xchg
mov
ds
mov
loopne
xor
addl
xor
mov
push
sarl
aad
and
inc
mov
dec
stos
and
pop
push
push
add
sbbb
daa
shll
xor
jne
pop
adc
add
sti
loopne
mov
jns
and
push
aaa
or
pop
addb
mov
popa
orl
add
sub
dec
shlb
or
push
mov
orb
and
add
sub
sub
sub
cmp
mov
push
mov
sub
add
repnz
jmp
pop
or
adcl
loope
adcb
test
int
xchg
jno
sbb
fdivl
addr16
dec
xchg
lods
adc
sub
scas
inc
push
or
xchg
fldl
add
cmpsb
sub
mov
fwait
in
pop
leave
inc
add
push
pop
rcrb
bound
dec
add
inc
xor
jne
dec
popf
mov
shrl
mov
add
or
stos
pop
add
push
add
test
add
nop
push
dec
adc
fwait
and
andl
pop
test
iret
pop
add
sub
push
dec
cmp
push
ret
orl
sbb
jns
inc
popf
aas
lods
movsb
shrl
test
push
inc
and
add
or
and
shlb
mov
mov
pusha
nop
or
mov
push
test
daa
adcl
and
ret
mov
adc
add
pusha
mov
adc
and
or
mov
sbb
cmp
jl
add
mov
addb
add
and
imul
pop
sbb
fwait
mov
test
stc
mov
add
push
dec
movsl
test
and
sbb
loope
and
add
cmp
push
bound
movsb
jns
fsts
push
cmp
dec
ret
pop
push
or
sbb
cmpl
xor
mov
pop
jo
sub
adc
movl
adc
jne
dec
pop
popa
push
movsb
pop
cmovge
sub
jg
xor
push
adc
adc
test
sub
jmp
sub
adc
xor
mov
imul
xchg
mov
sbb
add
sub
mov
and
test
mov
sbb
or
movsl
push
xchg
cmpsb
jo
pop
add
dec
lcall
dec
mov
sbb
sbb
jb
fstpl
lret
rclb
push
call
mov
and
cmp
pusha
and
lds
adc
mov
mov
test
add
dec
orl
ret
add
subb
mov
orb
add
inc
adc
mov
sub
inc
sub
xorl
add
in
mov
add
dec
bound
int3
lcall
es
and
stos
add
push
add
cmpsb
push
xchg
pop
fnstcw
enter
sub
pop
push
fcmovbe
sbbb
ljmp
call
movsl
mov
xchg
iret
xchg
or
loopne
popf
ss
mov
xor
dec
and
adcl
adc
push
or
inc
push
cmpb
and
sbb
lea
adc
sub
daa
inc
add
and
or
outsb
lret
nop
rclb
ret
inc
test
adc
roll
lock
inc
and
mov
rolb
jecxz
iret
adc
xor
dec
push
cmp
cmp
pop
cmp
push
rcll
test
sub
adc
sub
adc
push
and
jp
ds
popa
or
inc
sub
mov
sbb
inc
mov
dec
and
sbb
test
push
addb
mov
test
hlt
rcrb
dec
xchg
or
xor
test
loopne
movsl
inc
rcll
mov
adc
pop
or
mov
sub
cmpl
aam
movsb
test
and
idivl
nop
je
push
daa
push
les
mov
sti
lret
jmp
xlat
stc
add
and
fwait
ret
lahf
mov
test
and
or
sub
push
jmp
inc
add
xchg
cmp
or
push
mov
and
test
mov
dec
inc
or
and
insl
push
and
push
pop
xor
push
scas
test
sub
add
repz
adc
pop
xchg
scas
shlb
xor
push
xor
stos
push
and
sbbl
subl
dec
inc
adc
inc
outsl
add
cmc
xlat
lods
inc
push
adc
inc
inc
mov
and
mov
dec
outsl
adc
jae
pop
leave
fcomip
rcll
loopne
pop
cwtl
in
dec
pop
xchg
and
add
adcb
push
cs
push
rolb
sub
and
mov
retw
call
sbb
popa
arpl
or
mov
add
mov
push
add
add
ret
add
add
ffreep
daa
sub
or
xchg
pop
pushf
sub
mov
inc
adc
movsl
add
lds
push
push
adc
stos
xor
pop
adc
sub
inc
cmp
jno
sbb
sub
fldenv
mov
cmp
imul
fwait
inc
fisubrs
push
push
insb
adc
mov
out
xchg
lret
fistpll
sbb
data16
dec
inc
fcmovnu
test
jae
movsb
push
sub
and
add
dec
push
loopne
push
xor
test
sbb
test
leave
add
add
cwtl
shlb
inc
inc
adc
leave
jae
daa
mov
add
movsb
inc
sbb
fisttpl
lea
movsb
jecxz
adc
rcrb
adcb
ds
add
mov
imul
dec
add
sub
push
add
mov
push
rolb
popl
insb
sbb
pusha
std
je
outsl
push
pop
loopne
lea
xor
inc
test
lea
in
pop
inc
lcall
xchg
frstor
scas
ficomps
andl
les
sub
jne
ret
jmp
add
dec
add
pop
and
mov
cltd
pop
sbb
inc
rorl
jns
addb
pop
filds
sarb
pop
and
shll
arpl
inc
adc
adc
frstor
das
mov
cmp
push
push
sub
sbb
dec
daa
inc
lcall
nop
in
push
inc
test
inc
mov
xor
imul
inc
dec
shll
shll
popa
scas
add
movsb
cmc
sub
imul
loope
sub
add
ljmp
dec
xchg
xor
mov
aaa
push
lea
mov
dec
add
lods
loope
cmp
add
test
in
pusha
add
lods
add
adc
add
push
insl
bound
test
add
test
push
shrl
mov
dec
rorl
or
enter
sbb
cmp
cwtl
xor
rcrl
daa
fucomi
sti
adc
insl
dec
sbb
dec
out
dec
lea
lcall
add
adc
and
xchg
xor
and
or
movsb
xchg
jecxz
jno
xchg
and
test
stos
adc
push
xchg
out
adc
push
inc
in
rcl
add
popf
push
add
popa
sub
pop
addr16
jo
ror
push
ljmp
pop
mov
lcall
mov
adc
xor
int3
add
push
and
push
xchg
test
stos
cwtl
insb
pusha
xchg
inc
push
fcmovbe
sahf
add
mov
jmp
mov
or
xchg
push
jns
test
lret
inc
adc
sbb
add
fwait
outsb
jge
sub
addb
cwtl
adc
int
insb
pop
arpl
sahf
dec
xor
jns
and
pop
adcl
sbbl
sbb
or
dec
dec
test
push
cmp
push
add
or
mov
jecxz
addb
popf
mov
add
inc
test
lods
stos
imul
inc
dec
pop
add
sub
xorb
or
sbb
push
and
add
mov
add
push
aam
stos
imull
mov
adc
sub
nop
ret
add
push
or
sub
add
sbbb
add
and
mov
cli
pop
notl
push
or
mov
mov
or
and
lods
or
add
cmp
adc
or
mov
mov
dec
nop
js
sub
or
and
stos
push
cmp
add
sub
stos
les
pushf
add
das
test
sub
sbb
popf
int
sbb
adc
push
dec
dec
xor
dec
pop
mov
xlat
test
push
xor
test
fstps
sub
ret
call
mov
jle
mov
adc
shll
adc
inc
inc
inc
scas
bound
sub
dec
push
insl
es
pop
rcl
jo
jnp
inc
mov
adc
dec
movsl
sbbb
adcb
xchg
adc
sub
and
add
or
dec
xchg
call
add
sbbl
nop
xchg
stos
adc
mov
add
add
iret
mov
mov
fisubl
adcb
jns
push
inc
and
rclb
and
sbb
adcl
mov
bound
push
xorb
cmp
outsb
or
ss
mov
xchg
imul
push
scas
fstpt
push
push
fs
add
or
inc
mov
test
dec
arpl
cmp
adc
aam
jo
push
popa
or
test
inc
call
inc
sbbl
add
arpl
xor
add
or
sub
pop
or
jge
rolb
add
jno
mov
fidivrl
stc
add
dec
lcall
lock
adc
adc
imul
mov
lret
cmp
cli
mov
mov
lock
clc
adc
inc
sbb
adc
es
nop
push
xchg
push
mov
lods
mov
sbb
mov
pop
mov
adc
xchg
add
imul
and
addb
xor
repz
dec
push
sbb
mov
mov
and
adc
aad
aaa
lahf
sub
mov
ret
push
and
jns
and
inc
inc
loopne
movsb
adc
sub
jp
stos
sub
movsb
mov
or
xor
and
add
xlat
xchg
movsb
flds
dec
cltd
pop
sub
movsb
test
rcrl
jb
int
ss
fisubl
js
lret
fnstenv
adc
roll
xor
xchg
gs
xchg
leave
or
add
fwait
mov
xor
inc
sub
es
and
movsb
cmp
mov
cwtl
mov
lahf
shrb
push
in
push
je
push
or
stos
inc
addl
imul
mov
jns
fwait
addb
and
jl
inc
es
add
dec
xchg
mov
adc
and
ret
push
inc
inc
and
push
cmp
add
dec
and
loop
mov
mov
nop
je
and
cmp
addl
adc
rcrb
adc
or
inc
xlat
push
add
arpl
adc
mov
pop
and
add
aam
mov
out
mov
mov
bound
sub
repnz
fistl
add
pop
movsb
or
sbb
inc
or
stos
pop
inc
je
and
and
and
inc
es
movsl
inc
dec
xor
hlt
push
or
add
add
and
jle
imul
mov
loop
inc
xchg
inc
and
and
daa
pushf
cmp
pop
jo
mov
nop
adcl
pop
test
cmp
mov
aam
inc
mov
popa
sbb
xor
adc
inc
pop
add
gs
xor
or
daa
pop
adc
or
jecxz
xchg
subb
add
xchg
mov
mov
sbb
xchg
push
jno
xchg
dec
xor
inc
scas
push
and
in
cmp
test
mov
mov
inc
mov
add
fsts
jmp
push
js
adc
cmc
xor
aad
adc
mov
adc
mov
or
jae
mov
adc
and
mov
dec
jle
inc
dec
xor
push
mov
jecxz
mov
mov
testb
pop
add
inc
int
fnstenv
push
les
cmpsl
xchg
fsubs
mov
xor
fwait
push
push
fs
popa
test
imul
lods
dec
inc
cmp
xlat
mov
add
lret
push
dec
and
shl
inc
int3
flds
add
and
sbb
leave
fldenv
pop
push
cmp
push
nop
and
cmp
and
popf
fnstsw
insl
push
adc
jno
mov
imul
sub
push
lea
adc
movsb
adc
es
shufps
sub
adc
inc
xchg
jmp
stos
dec
and
adc
dec
add
and
stc
cmovp
add
sub
inc
push
dec
jmp
dec
ds
fstl
xchg
aas
addl
inc
push
add
movsb
xchg
jo
and
mov
pushl
inc
loope
cmpsl
xchg
or
add
addb
pop
rclb
cmp
cmc
add
push
je
aam
addl
pusha
and
adc
and
inc
adc
or
add
or
inc
pop
and
dec
mov
dec
push
push
ss
test
movl
mov
imull
lea
push
dec
outsb
lds
pushf
add
adc
std
inc
into
shll
outsb
adc
stos
sbb
add
add
arpl
dec
lds
and
sarl
outsb
or
int3
and
data16
mov
adc
inc
sbb
inc
add
pusha
inc
xor
sarl
mov
adc
inc
mov
sbb
or
fs
lds
xchg
dec
adc
pop
adc
popf
test
sbb
adc
loopne
sub
xor
filds
jmp
rolb
mov
and
push
insl
popa
mov
test
adc
sbb
lahf
xchg
push
test
xchg
loope
lcall
out
inc
jmp
adc
xor
ds
xchg
addr16
jno
jmp
xchg
aad
lods
push
mov
inc
int3
outsl
mov
jae
mov
andb
add
dec
mov
inc
dec
movsl
inc
lods
push
mov
rolb
jne
mov
loopne
add
xor
dec
add
ret
xor
lret
insl
or
mov
dec
aad
fists
xor
testl
add
in
mov
lcall
ror
inc
inc
inc
cmp
imul
cmp
mov
jo
movsb
test
xor
call
mov
sbb
lret
jns
push
add
bound
push
mov
inc
mov
sub
test
movsl
push
xchg
pusha
sbb
inc
xor
adc
add
add
sub
adc
or
xlat
mov
sbb
lcall
fwait
add
push
sub
adc
and
mov
nop
imul
je
cmp
adc
adc
xchg
or
dec
fcomps
ficomps
inc
and
xchg
lock
cltd
rcrb
lds
push
pop
stos
data16
inc
es
xchg
inc
sbb
add
mov
mov
and
add
pop
xor
add
addl
jne
mov
add
iret
or
or
jnp
addl
out
adc
fstl
gs
leave
inc
ss
add
std
pop
sub
test
movsl
inc
sahf
and
aad
movsl
cmc
cmp
test
add
aas
add
cmp
lds
and
out
mov
cmpsl
jnp
es
lcall
push
xor
add
pop
pushf
and
je
mov
or
stos
enter
imul
adc
test
add
mov
xor
xor
inc
mov
adc
add
xlat
or
addb
movsl
adc
cmp
xchg
adc
adc
sbb
pop
xor
jge
inc
mov
inc
stos
inc
aaa
cmpsl
and
leave
inc
in
adc
push
dec
repnz
adc
sti
rorl
test
lods
mov
inc
rclb
mov
fadds
push
jle
stos
adc
or
or
jmp
or
xchg
jo
cmp
inc
into
addr16
add
cltd
xor
cmpsl
sbb
je
mov
lcall
test
imul
add
pop
xchg
jae
dec
xor
and
sbb
xor
add
push
pop
in
and
cmp
or
push
pushf
mov
add
dec
cltd
and
push
dec
jecxz
cmpb
add
loopne
jmp
dec
add
mov
push
insl
mov
leave
repz
cmp
mov
jns
dec
sub
xchg
add
dec
xor
or
sub
dec
or
subl
das
ret
shrb
fbstp
inc
rclb
add
rclb
dec
mov
int
pusha
popa
jns
cld
xor
nop
imul
xchg
lods
stos
ss
adc
rorl
jmp
push
inc
pop
add
push
push
jnp
add
adc
mov
jecxz
sub
sub
mov
or
test
imul
test
mov
adc
stc
mov
jno
add
orb
inc
test
pop
push
push
jo
lcall
xchg
mov
pop
sbb
call
mov
cmc
bound
les
mov
and
inc
mov
and
addr16
daa
push
jae
add
stos
inc
sub
add
and
dec
int3
out
add
sbb
mov
cmp
and
or
rorl
nop
xlat
push
leave
add
mov
xchg
mov
mov
add
pop
jns
inc
add
loope
fwait
cmp
aas
and
dec
fists
mov
inc
mov
add
adc
pop
or
addb
adc
call
adc
ss
inc
aam
dec
xchg
add
cmpsb
mov
dec
sub
cli
and
inc
rorl
lcall
xor
ret
test
fs
shrb
fnstenv
enter
shrl
sbb
pop
adc
push
and
add
scas
loopne
leave
inc
es
add
mov
aam
fs
sub
mov
push
push
push
fadd
add
inc
sub
adc
adc
adc
add
mov
mov
or
add
sub
push
push
sub
insl
lods
scas
pop
inc
inc
popa
mov
sub
das
movsb
push
and
aam
mov
lcall
adc
add
dec
jno
mov
xor
or
xchg
push
dec
repz
pop
std
repnz
and
jmp
fiaddl
xor
xchg
sbb
pop
test
xchg
in
cs
sub
in
roll
push
inc
and
add
or
mov
sub
mov
lret
rclb
pop
add
test
xchg
mov
mov
je
pop
shrl
adc
dec
adc
lods
mov
sbb
lods
fists
jno
rclb
nop
or
addb
std
xor
inc
xor
ss
push
sbbl
pop
pop
negb
mov
push
into
jnp
and
adc
cwtl
fisttpll
movsb
xor
dec
pop
in
add
dec
add
fs
and
mov
lcall
pop
and
test
sbb
fnstenv
icebp
in
inc
nop
iret
addr16
inc
push
scas
aad
dec
stos
fists
sbb
push
inc
inc
pop
add
rclb
push
cmpl
dec
mov
add
and
mov
scas
fs
xor
popa
jns
and
or
pop
inc
test
insl
sub
dec
adc
test
scas
mov
jmp
rclb
xor
push
xlat
xchg
dec
js
sub
adc
pop
bound
shrb
xor
out
xchg
pusha
ret
push
push
flds
in
xor
out
arpl
mov
cmc
adc
dec
stos
es
orw
nop
push
rorb
test
add
pop
adc
test
xor
and
mov
mov
or
jg
or
andl
lea
lds
pop
lods
or
xchg
testl
imul
add
repz
pop
and
and
add
into
or
loop
mov
or
nop
lods
stos
dec
inc
pop
inc
or
mov
add
int3
sub
aad
sbb
dec
cmp
adc
stos
xor
call
mov
or
and
dec
lds
or
cmp
or
mov
mov
push
cmpsb
sub
orb
adc
add
dec
cmc
adc
push
jmp
inc
adcb
addl
sub
xor
clc
adc
cmpsb
shlb
mov
mov
sbb
fnsave
inc
dec
test
push
cmpsb
aam
mov
mov
xor
andl
and
stc
repz
data16
inc
and
movsb
fsubs
arpl
jmp
rorl
push
adc
imul
inc
inc
xchg
rolb
test
imul
sti
inc
and
cwtl
pop
sub
adc
push
xor
add
test
cld
nop
cmp
push
pop
stos
les
jmp
push
cmpsb
sbb
add
sbb
dec
lcall
xchg
arpl
pop
cmpl
fstps
dec
dec
mov
xchg
addb
adc
int
mov
das
insb
add
xor
nop
pop
xchg
cld
sub
or
or
mov
add
or
inc
jne
popa
xor
push
roll
fwait
addb
inc
decl
loopne
sub
leave
sbb
sub
nop
or
mov
push
test
inc
and
add
add
stos
and
inc
jp
and
es
orb
loope
mov
iret
out
mov
bound
sub
fdivr
sbb
insb
mov
adc
popa
jp
pop
addb
lret
xor
add
mov
xchg
out
lret
inc
inc
dec
out
pop
xchg
inc
jbe
add
or
jbe
andb
inc
add
adc
xchg
pusha
sbb
inc
push
rolb
xorb
mov
jno
xor
add
or
push
sbb
inc
push
imul
sbb
mov
push
lds
adc
xchg
add
sbb
mov
stos
jno
adc
loopne
xchg
jg
add
lret
cmp
cmc
mov
stos
dec
iret
or
cmpsb
bound
mov
sbb
push
dec
mov
and
mov
sub
dec
add
or
mov
add
orb
out
mov
push
push
cwtl
movsb
cltd
pop
cmpsb
jnp
ficoml
adc
lods
sub
cwtl
or
inc
in
mov
pop
jp
add
leave
jmp
xor
jo
leave
int3
psrld
mov
xchg
adc
imul
or
push
or
test
loope
mov
mov
xchg
mov
sub
pop
je
movsl
mov
inc
mov
dec
add
mov
add
das
add
movsb
pop
pop
push
and
mov
push
inc
cmp
inc
mov
xchg
stos
jg
jno
add
cwtl
loop
or
and
sbb
mov
adc
pop
inc
popa
incl
and
dec
ss
std
jp
push
and
jge
and
outsb
inc
adc
subb
mov
loopne
jnp
or
inc
int
inc
add
aaa
rcrl
mov
mov
sub
mov
or
xor
and
push
sbb
test
push
pushf
in
sub
test
pop
pop
xchg
push
rclb
and
jno
sbb
test
and
je
adc
dec
int
add
inc
push
push
xchg
xor
mov
pop
mov
inc
rorb
ficompl
mov
xor
mov
adc
test
dec
shll
jmp
push
add
insl
adc
and
rorb
imul
jnp
and
pop
and
cmpsb
jno
rclb
adc
test
roll
dec
inc
js
orb
mov
push
daa
add
out
inc
adc
add
in
inc
push
add
das
and
outsb
adc
pop
test
jmp
rcrb
mov
rorb
push
and
dec
inc
add
push
insl
xor
inc
dec
inc
add
aas
adc
add
shrb
mov
dec
mov
rclb
xor
push
insl
add
nop
mov
mov
adc
popf
mov
push
loope
loopne
lds
push
sub
mov
or
push
dec
adc
cmp
data16
insl
push
xchg
sbb
xchg
test
je
aam
mov
cld
std
stos
or
pop
and
inc
and
push
enter
mov
mov
or
dec
or
mov
mov
sti
xlat
or
fdivrs
orl
dec
cmp
bound
orb
and
fdivl
dec
xchg
inc
push
mov
jmp
or
dec
add
pop
push
test
dec
lods
mov
bound
xor
xor
push
or
dec
mov
jge
rol
or
ret
dec
test
inc
mov
add
add
mov
fcoml
nop
cmpsb
cmp
les
shlb
shrw
xor
inc
shll
dec
xor
xchg
rclb
in
xlat
gs
imul
imul
and
sub
xor
and
in
inc
fldl
add
mov
dec
add
aad
mov
loopne
lret
mov
test
fs
ret
or
mov
pop
mov
add
test
sbb
pusha
or
dec
dec
pushf
push
mov
mov
lods
inc
pop
lahf
rcrb
test
jecxz
pop
push
and
insl
cmpl
cmp
sbb
nop
add
xor
mov
jg
loopne
add
push
xor
cmp
inc
sub
aad
mov
imul
sub
orl
and
push
movsl
sub
loopne
adc
inc
add
in
push
jo
sbb
xor
sub
adcb
repz
push
sub
test
add
pusha
inc
push
adcb
mov
or
in
add
test
xor
add
loop
mov
and
sub
xor
pop
adc
adc
rolb
ja
add
mov
and
and
sbb
mov
and
movsl
std
test
push
ljmp
pop
inc
dec
jmp
insb
mov
insb
jecxz
and
or
pushf
and
rorl
inc
arpl
xchg
cmpb
adc
sbb
xor
rcrl
or
xchg
mov
jo
and
inc
push
movsb
jno
push
rcrb
testl
add
mov
imul
xor
orl
scas
test
mov
inc
jne
enter
int3
xchg
xor
mov
movsl
pop
sti
mov
inc
xchg
movsb
dec
lcall
shlb
cmp
jo
into
add
inc
and
xor
adc
cmpsl
dec
sub
jns
ljmp
add
andb
imul
push
inc
dec
mov
add
aam
ja
sub
shlb
add
dec
xchg
add
orb
cmp
loop
add
fildll
sbb
jns
fwait
or
xor
push
test
and
rolb
add
dec
inc
jo
jne
cltd
add
adc
lahf
push
sarl
adc
push
fldt
dec
sbb
push
mov
inc
and
imul
aas
push
xor
adc
and
mov
jno
mov
ror
adc
add
rol
out
add
cs
test
out
add
and
sahf
test
mov
xchg
add
dec
test
cli
xor
add
pop
add
or
pop
or
mov
xor
push
adc
insl
and
aam
push
add
or
mov
mov
rolb
xor
sbb
addl
les
sub
add
test
aas
xor
adc
sbb
js
ret
mov
fldcw
cwtl
cmp
dec
or
lcall
cld
xchg
sub
add
lock
or
insb
push
add
sbb
cmc
and
and
mov
pop
jecxz
stos
in
pop
sub
push
cmc
pop
push
dec
pop
orl
xor
xchg
xor
add
lea
adc
inc
repnz
and
cmpb
xchg
das
lods
adcl
inc
add
repz
add
int
fstl
sub
nop
add
mov
les
adc
dec
out
cmp
int
movsb
in
out
scas
pop
dec
sbb
xor
and
iret
movsb
or
in
add
stos
dec
or
mov
leave
sarl
sub
xor
int
jnp
push
xor
add
aaa
cmp
add
rclb
clc
and
push
and
jno
add
fs
dec
sub
gs
push
mov
inc
mov
push
lds
pop
jnp
fs
push
repz
xchg
and
sub
push
jo
or
inc
xor
or
xor
fildl
push
test
mov
orl
imul
jmp
adc
cmp
jp
test
adc
js
mov
xchg
rcl
out
popl
fwait
dec
inc
cmpsl
mov
fistps
push
add
xor
pop
push
cmpsl
addr16
xor
xchg
mov
inc
loopne
mov
jno
dec
add
dec
and
mov
and
cltd
fisttpl
sub
push
shrl
bound
or
mov
push
add
add
push
loopne
or
insb
dec
adc
push
jle
stos
jmp
add
add
push
pop
push
push
movl
cmc
and
jecxz
sbb
inc
subl
ljmp
cmp
out
bound
and
and
lds
add
pop
xorb
inc
pop
gs
xor
inc
pop
dec
push
dec
loop
out
or
cmp
push
sbb
mov
sub
rcll
lods
cmp
sub
ret
daa
mov
add
stos
daa
ss
mov
int
add
adcb
sub
mov
jmp
sub
xchg
mov
add
ljmp
add
inc
int3
adc
mov
lcall
jo
fmull
inc
scas
iret
and
mov
and
pop
inc
bound
push
rorb
pusha
mov
adc
mov
push
jno
sub
sub
add
loope
lea
push
movsl
xor
movsl
sbb
xchg
rcrb
lret
add
cmpb
int
xchg
xor
stc
add
adc
nop
nop
mov
adc
xchg
cmp
arpl
sub
mov
inc
cmpb
and
popa
push
aam
movsb
call
mov
mov
roll
push
and
add
dec
or
jo
les
dec
rcrl
sub
cmc
inc
popa
push
pop
push
sbb
imul
mov
stc
into
sbb
jae
or
xor
pushf
push
push
and
add
movsb
imul
ds
and
sub
mov
dec
mov
je
pop
pusha
add
decl
insb
inc
mov
xchg
jae
arpl
push
mov
mov
adcl
in
and
jne
dec
add
test
xchg
inc
cmc
xor
es
inc
adc
add
lds
movsb
and
mov
or
xchg
pushf
ror
sbb
pop
add
jno
push
out
adc
and
inc
subl
sbb
lahf
flds
cwtl
push
add
jnp
cs
subb
add
dec
inc
cmpsb
lds
push
test
xlat
xor
or
inc
cmp
cmp
or
cmpsb
lcall
cmp
xchg
lret
mov
pushf
mov
mov
add
push
or
imul
sub
adc
mov
adc
xchg
add
add
leave
andb
or
sahf
outsl
xchg
inc
jecxz
bound
movsb
pop
inc
loop
enter
jg
test
test
inc
cs
mov
dec
cltd
inc
stos
inc
and
dec
add
push
shrl
mov
or
mov
lea
aam
add
add
sub
in
lea
push
push
lret
lahf
push
aad
orb
mov
ret
or
bound
push
lcall
and
jns
add
jg
add
out
pop
inc
adc
sbb
inc
push
inc
xchg
mov
adcl
adc
dec
or
or
add
hlt
add
dec
sub
test
xor
sbb
sbb
or
pop
add
sub
push
shr
and
xlat
filds
adc
sub
jmp
cmp
add
xchg
pop
adc
ja
shrb
fstpt
lahf
xchg
mov
cmc
or
jo
lret
aaa
fstl
bound
add
and
fstl
mov
sub
sub
inc
cwtl
lock
in
mov
int
dec
sub
jno
ja
jmp
mov
add
cmp
lds
sub
push
aaa
or
fnstcw
mov
add
and
sub
jno
and
and
jns
add
sbb
and
sub
mov
pop
popa
aam
je
xchg
movsb
xor
inc
add
add
enter
sub
add
fwait
inc
inc
in
push
and
xor
lds
jge
test
adc
nop
int
shll
jae
or
cmc
sbb
dec
or
cmpsl
sahf
adcb
shl
out
dec
and
fadds
pop
les
xchg
add
add
push
jno
pop
push
inc
rclb
or
or
or
xor
jne
dec
inc
add
sbb
or
rorl
add
rolb
push
sbb
push
ss
add
pop
ret
inc
inc
pop
bound
adcl
jo
dec
inc
test
movb
jo
enter
cmp
jmp
fs
fs
inc
xor
movsl
pop
push
and
push
mov
dec
push
in
sub
lret
add
fbld
test
mov
or
shrb
add
sbb
add
adcb
dec
push
rcl
aad
add
adc
inc
lds
jmp
mov
or
or
adc
adc
push
adcl
xor
push
mov
movsl
mov
add
add
dec
inc
cmp
je
dec
push
in
xor
jo
cmc
fxch
push
arpl
lea
dec
xchg
cmp
push
push
mov
mov
mov
push
dec
push
adc
aad
or
jo
jg
xchg
xor
mov
nop
test
sub
fwait
pusha
adc
and
mov
shrl
add
inc
adc
nop
sub
adc
test
adc
sarb
mov
add
sub
or
or
push
and
adc
mov
add
imul
xorl
xchg
and
into
cmp
mov
int
dec
test
loopne
push
test
adc
xor
or
rol
movsl
adc
adc
mov
or
test
and
push
inc
pop
inc
dec
and
mov
rcl
inc
movsl
or
and
addb
movsl
push
jnp
or
lods
das
mov
incb
scas
bound
cmp
or
or
pop
push
fst
add
sbb
or
pop
ret
aaa
mov
out
cmp
or
mov
imul
pop
jo
adc
je
or
push
adc
imul
or
movsb
shll
lcall
xchg
cmpsb
mov
in
pop
push
ds
jb
dec
mov
jp
cld
pop
out
push
inc
jns
xchg
out
stos
jo
or
mov
int3
dec
xor
push
adc
cmpsl
aam
sub
mov
push
sub
add
mov
outsl
ljmp
or
aad
sbb
lock
jmp
mov
add
sub
or
sbb
add
sub
aaa
xor
orb
and
insb
cmp
mov
cli
inc
ss
push
xor
mov
xchg
leave
add
and
fistps
dec
rorb
sbb
push
shlb
loop
push
xchg
insl
cmp
pop
xor
leave
sarb
adc
add
push
xchg
push
add
sub
and
test
sbb
pop
mov
inc
adcl
sbb
addb
mov
mov
and
pop
add
push
lds
sub
aam
or
inc
mov
mov
movsl
jnp
mov
adc
cmp
jecxz
xchg
mov
xchg
mov
add
out
push
imul
in
pop
pop
pop
and
repnz
shll
adc
xchg
dec
les
mulb
scas
cmp
inc
adc
jecxz
mov
aam
testl
adc
aam
and
and
add
sub
rcrb
inc
orb
xor
out
or
or
arpl
sub
pop
movb
push
lods
std
xor
mov
or
mov
rol
ja
push
xchg
inc
and
nop
cmpsb
jns
ret
stc
or
dec
imul
nop
cmpsb
inc
icebp
jecxz
jo
mov
xor
cmpsl
inc
pusha
test
mov
cli
xchg
or
scas
inc
sbb
adcb
jae
sub
lcall
adc
insl
adc
mov
cli
sarl
test
adc
ret
push
push
xor
nop
movsb
cmp
mov
lcall
adc
loopne
cs
mov
add
jg
sbb
sbb
add
inc
pop
or
xor
add
test
loope
mov
dec
add
or
dec
lcall
push
inc
sub
dec
mov
or
or
mov
and
pop
es
sbb
add
aam
or
xor
mov
imul
sbb
loop
stc
lahf
inc
xor
and
lods
or
add
sub
add
dec
aaa
and
mov
push
addl
dec
push
and
dec
outsb
dec
in
and
push
rol
xchg
push
add
sub
add
sub
add
iret
imul
or
add
lds
or
push
mov
or
xchg
adcb
and
inc
add
inc
icebp
cmc
sbb
xor
out
xor
shlb
dec
bound
and
dec
mov
push
bts
xor
xor
into
mov
shll
mov
imul
out
xor
inc
loope
cmp
push
xor
cmc
add
lea
add
and
add
and
pop
xor
xor
or
stc
adc
adc
mov
fbstp
add
inc
sbb
add
nop
stos
nop
and
push
mov
inc
adc
or
fs
and
pop
push
adc
sub
xchg
mov
sti
pop
mov
xor
mov
xchg
cmp
push
ljmp
xor
incb
adc
inc
outsb
sub
lret
push
xchg
test
add
in
jo
add
and
test
pop
xor
in
sbb
fs
or
xor
mull
push
gs
xor
or
sbb
or
sbb
outsb
loop
or
adc
or
icebp
push
and
lds
adc
dec
xchg
mov
roll
inc
mov
adc
or
dec
lahf
dec
mov
int
cmp
pushf
stos
mov
filds
lret
rorb
sahf
mov
dec
mov
pop
push
xchg
movsb
imul
loopnew
andl
mov
lret
and
add
cld
scas
dec
fcompl
insb
push
out
xor
loopne
and
movsb
adcl
je
rol
mov
sub
repz
push
add
and
scas
mov
add
mov
pusha
adc
or
mov
xchg
outsl
push
push
inc
dec
jecxz
sbbb
ds
stos
push
mov
mov
pop
pop
popa
loopne
shlb
mov
imul
repz
inc
xchg
dec
mov
movsb
cmc
xchg
or
scas
popf
xor
loopne
add
add
imul
mov
bound
sub
mov
inc
ret
or
sbb
inc
xchg
repz
lret
lea
das
test
es
mov
or
lret
and
mov
adc
or
push
je
or
and
xchg
adc
pop
in
add
imul
aam
test
push
jne
fwait
or
stos
or
ljmp
into
xchg
nop
add
insb
inc
pop
push
mov
movsl
adcb
dec
add
adc
dec
push
pop
push
sbb
push
popa
popf
test
xor
cmp
cwtl
rolb
nop
inc
fistpl
adcl
sahf
mov
xorb
insl
into
xor
push
push
push
and
or
lcall
xor
popf
inc
jns
xchg
dec
inc
rcl
or
sub
inc
divb
pop
xor
add
sbb
orl
inc
mov
mov
push
std
mov
inc
sbb
sbb
movsb
xor
lahf
mov
dec
arpl
inc
xchg
andl
loopne
add
fwait
dec
jno
add
leave
adc
es
in
sbb
jne
fistpl
xor
cs
sbb
test
sub
out
mov
std
and
or
xor
push
pop
and
push
shll
test
mov
dec
inc
dec
cmp
call
lcall
mov
cmp
xchg
inc
test
mov
or
sub
jp
aad
xor
test
cmp
inc
fistl
adc
add
pop
sbb
push
or
movsl
adc
and
or
stos
sbb
xchg
iret
leave
push
nop
adc
push
adc
and
inc
es
push
imul
mov
push
add
push
xorl
xchg
addb
andb
inc
sbb
mov
fcmovb
inc
sarb
push
and
xchg
mov
mov
and
test
out
inc
addl
and
stos
mov
inc
jb
pop
and
or
sub
sub
fiaddl
xor
or
push
test
cmp
add
sbb
rclb
inc
stos
add
dec
mov
mov
repnz
nop
jg
xchg
rclb
cmpsb
push
and
mov
sub
sbb
and
out
sbb
xchg
mov
cwtl
add
sbb
and
fs
mov
adc
xor
adc
inc
or
dec
cmpsl
shrl
loop
lcall
rorb
mov
and
inc
jb
cltd
mov
add
leave
sub
push
xchg
popa
movsb
test
sub
and
nop
jno
cmp
inc
sub
or
xor
jne
lds
cmpsl
adcl
push
pop
and
mov
and
inc
mov
lcall
out
or
pusha
rolb
add
leave
aam
add
dec
add
mov
inc
stos
or
sbb
sub
cmp
lds
and
sbb
es
mov
or
and
jne
adc
cwtl
mov
les
mov
add
addb
test
jne
or
inc
aad
stos
push
lcall
or
mov
xchg
and
add
repnz
add
popa
dec
lret
add
lahf
lahf
dec
andb
hlt
fadd
add
mov
push
jnp
test
sub
in
mov
or
inc
and
inc
cmp
imul
bound
add
sub
fcmovb
lods
inc
stos
sbb
xor
sbbb
add
push
or
add
and
inc
inc
push
mov
adc
ljmp
pop
fldenv
cmpsl
nop
aaa
add
mov
sub
add
andl
and
inc
xchg
inc
push
cmc
inc
mov
filds
int
xchg
and
push
push
rolb
in
xchg
pop
test
jno
nop
int
add
push
lea
adc
dec
gs
inc
sbb
andb
subb
and
sbb
pushf
je
push
int3
sub
jecxz
test
adc
pop
inc
dec
cmpsl
mov
sub
push
popa
nop
adc
ror
sarb
stos
jmp
adc
xor
or
mov
pop
fadd
bound
inc
sub
adcl
xor
imul
or
add
or
jo
mov
inc
inc
push
jno
movsl
pop
sub
enter
push
daa
inc
mov
mov
dec
mov
xor
rcll
jne
lods
add
inc
stos
sbb
pop
inc
mov
enter
sbb
imul
inc
pusha
or
fs
insb
cmp
push
inc
lds
xchg
lahf
inc
dec
cmpb
cltd
insl
inc
test
mov
cmp
mov
jno
dec
xor
dec
add
data16
lods
xchg
sarb
mov
and
jae
or
xor
push
push
push
rcrb
scas
orl
inc
adc
mov
stos
mov
mov
or
iret
in
inc
or
call
xchg
ds
pop
add
imul
xor
or
dec
inc
adc
cmp
pop
or
outsb
dec
test
lock
movsl
or
add
test
sub
sbb
xor
inc
gs
push
adc
mov
mov
mov
add
add
andb
xor
fnstenv
add
and
ljmp
add
push
ret
cmp
sbb
push
xor
and
shrb
stos
test
xchg
int3
sub
cmp
adc
pop
pop
push
pusha
push
pop
jecxz
add
add
sub
push
shlb
jae
lcall
lock
add
and
out
movsb
int
lock
cs
adc
sub
cmc
cmp
mov
adc
xchg
mov
push
jno
sbb
or
nop
or
ret
cmp
xorb
addr16
mov
ja
cmp
xlat
mov
xchg
sbb
test
mov
sub
add
rcl
or
movsl
jg
xor
inc
dec
lahf
add
sub
cmpsb
mov
and
dec
lods
jecxz
sub
or
movsb
test
out
movsb
or
cmp
inc
rcrb
mov
aaa
insl
pusha
jnp
or
and
inc
aaa
push
xor
inc
xchg
xchg
loop
popf
sarl
and
inc
adc
cltd
sbb
and
adc
cld
ss
daa
sub
gs
cs
inc
push
push
aad
xor
sub
add
and
jmp
fs
xor
xorb
fldl
sbb
cmp
ljmp
pop
xchg
jge
add
lods
add
pusha
vfrczss
inc
adc
sub
xchg
dec
dec
lcall
inc
and
add
cmp
jg
mov
inc
xchg
and
and
adc
and
mov
and
inc
xor
inc
sub
add
adc
xor
pop
insb
mov
mov
aas
jecxz
sbb
xor
add
push
pop
or
mov
sub
adc
or
inc
out
dec
adc
stc
iret
repz
push
push
xchg
adc
inc
sbb
push
mov
shll
fxch
add
movsb
pushaw
aad
sbb
scas
xchg
ret
or
lcall
test
xchg
test
adc
inc
lea
and
insl
imul
add
dec
xor
ret
ja
pusha
stos
add
push
add
add
xor
inc
ret
mov
fisttpl
push
lea
mov
outsb
or
cmpsl
push
and
xor
out
mov
ss
std
push
mov
pop
sbbl
or
push
and
add
out
mov
insl
ret
sbb
push
pushf
scas
movsl
push
enter
lea
mov
and
outsb
dec
inc
inc
add
sub
inc
fistpll
andl
adcb
pop
push
or
sbb
push
leave
and
xchg
mov
add
shrl
popf
dec
and
xorb
mov
lahf
add
push
lea
sbb
loopne
dec
or
insb
stc
add
andb
mov
andb
or
push
adc
aad
mov
cmp
inc
sbb
add
add
dec
fidivs
cmp
js
fs
sub
push
dec
addl
push
and
jns
into
add
int
test
adc
pop
jno
and
sub
nop
adc
popa
push
cmc
insl
add
or
or
rolb
inc
or
adc
out
imul
movsb
dec
mov
or
and
push
in
inc
xlat
aam
bound
or
xor
or
add
int3
dec
lea
inc
and
ret
iret
cmp
sbb
sbb
push
pusha
pop
inc
dec
adc
inc
inc
lret
test
pop
mov
in
lods
sbb
insl
add
pop
mov
sbb
in
sub
cmp
adc
xchg
jmp
mov
push
enter
adc
and
pmulhw
xchg
cmpsb
or
enter
leave
jns
movsl
add
xchg
es
mov
or
andl
es
and
mov
nop
adc
clc
rorb
adc
sub
test
pop
push
jo
mov
adc
ss
push
jo
xchg
sub
clc
shrb
test
movsl
add
fldcw
pusha
add
add
sub
or
inc
xchg
pusha
jbe
push
rol
sub
add
lcall
fnstcw
dec
jae
push
push
int3
pop
add
xchg
or
lahf
mov
movsl
ret
rorl
inc
mov
addl
popf
sbb
sub
and
mov
push
inc
adc
dec
adc
adcl
dec
loopne
mull
push
add
adcb
mov
push
mov
xchg
sbbb
ret
adc
mull
inc
adc
in
jmp
push
mov
popf
lret
push
xchg
inc
movsl
roll
add
push
and
cmpl
test
sti
addb
add
stos
xchg
mov
push
add
xor
dec
pop
inc
push
lahf
lods
add
popl
dec
xor
pop
inc
dec
pop
xor
xchg
cmp
or
aam
xchg
inc
mov
pop
xorl
inc
rclb
repnz
test
dec
adc
add
push
jae
jo
adc
divb
lcall
inc
add
pop
aad
test
sar
dec
test
add
addb
fs
sbb
popf
cmpsb
xor
inc
sub
adc
inc
shr
push
adc
loopne
xchg
push
sbb
sub
addr16
sbb
push
inc
fsts
or
and
gs
jns
mov
fbld
stos
rcll
shll
sub
rcrl
dec
or
scas
push
and
adc
clc
sbb
sbb
sub
out
lods
sub
xlat
sbb
inc
sbb
push
add
dec
pop
lret
or
sub
fsubs
add
inc
push
push
cmp
dec
xor
daa
xchg
jge
rcl
add
mov
stos
stos
int
sbb
sbb
ja
nop
gs
xchg
in
or
scas
sub
lcall
inc
xor
sub
mov
cmp
iret
rorb
inc
push
cltd
add
stos
add
pusha
jg
add
pusha
and
and
xchg
les
jne
ret
dec
push
push
xchg
sbb
adc
jecxz
add
push
or
mov
jmp
mov
push
cltd
and
aas
dec
mov
push
inc
pop
shll
subb
mov
push
xor
addb
xor
or
test
fisttps
outsb
addb
adc
scas
scas
test
xor
push
sbb
add
shlb
or
xchg
adc
ja
push
add
mov
and
xor
ret
xor
filds
sbb
gs
rorb
lahf
push
pop
adc
stc
xor
ret
mov
loopne
addb
push
adc
cmpsl
add
sbb
xlat
ss
or
rcll
fstp
sbb
mov
jb
or
pop
scas
or
jle
call
adc
add
add
sub
cmpl
pop
cmpsl
jns
imul
subl
fwait
out
mov
xor
mov
cmp
leave
xorl
mov
xchg
cmp
sub
rorl
adc
jo
fdivs
xor
add
mov
mov
sbb
or
dec
sbb
adc
add
jnp
dec
add
sub
xor
adc
test
add
or
popa
repnz
lds
and
dec
and
or
add
mov
int3
aam
jne
inc
rcrb
or
fwait
orb
inc
lods
loope
mov
push
xchg
cmp
dec
sbb
out
push
repnz
pusha
clc
add
lea
out
in
or
pop
test
xor
scas
outsb
sub
ljmp
or
pop
test
into
dec
push
mov
sub
stos
push
push
and
lret
add
add
add
add
or
dec
xor
pop
push
addl
ds
adcb
fldt
movsl
xchg
push
add
sub
push
xchg
mov
outsb
sbb
les
inc
sub
dec
inc
test
addb
add
xchg
test
mov
dec
adc
jne
xchg
jge
fadd
mov
imul
add
xor
sbb
adc
jne
sarb
sub
test
lods
mov
jmp
push
pop
xchg
xchg
add
sub
dec
add
addl
adcl
push
or
cmp
sti
pop
sbb
insb
mov
pusha
or
add
and
push
sbb
sbb
int
dec
mov
rol
or
mov
push
push
adc
out
push
xor
sbb
xor
push
inc
imul
push
movsb
mov
inc
inc
in
add
inc
push
andb
cmpsb
repnz
outsb
add
call
ret
jae
sbb
add
xchg
pop
mov
and
xor
cmp
sbb
add
orl
cmpsl
out
lock
sbbb
add
je
movsl
xor
or
inc
pop
rcl
add
inc
push
fisttpl
mov
dec
adc
stos
push
rcll
ret
inc
cwtl
rclb
inc
or
fisttpl
test
cltd
adc
push
adcl
xor
sub
pop
adcl
mov
and
stos
push
add
xchg
pop
adc
lds
push
and
jb
mov
and
test
insb
mov
sahf
dec
sub
add
push
sub
movsl
inc
xor
icebp
sub
mov
loope
int
xchg
cmp
sub
dec
roll
rcrl
adc
rolb
rolb
inc
xchg
sbb
ss
lcall
mov
mov
add
jns
ljmp
adc
and
adc
adc
fistl
nop
mov
adcl
mov
inc
inc
mov
inc
or
imul
or
xchg
hlt
bound
data16
ljmp
push
push
imul
nop
xor
inc
adc
or
popa
push
outsb
xor
ret
iret
xorl
pop
pop
cld
nop
out
shlb
pop
inc
xchg
lods
mov
clc
sub
mov
xchg
add
out
addb
inc
add
xchg
mov
or
popf
movsb
aad
adc
add
jns
test
and
push
rclb
sub
sbb
shll
xchg
mov
mov
stos
inc
jmp
push
dec
imul
sub
test
or
add
popf
es
lods
add
pop
adc
dec
sub
sbb
adc
sub
mov
or
sbb
cmp
add
push
pop
hlt
adc
dec
lcall
inc
sub
and
es
push
or
andb
and
rcl
add
addr16
dec
add
pop
cmp
push
adc
les
push
or
cmp
gs
nop
and
push
or
push
enter
outsl
scas
mov
sub
push
add
push
push
pop
inc
mov
adc
cmpsl
mov
out
adc
dec
sbb
xor
push
adc
adc
dec
push
cwtl
mov
mov
push
mov
mov
sbb
xchg
xor
add
and
sbb
andb
cmp
mov
inc
xchg
mov
je
xchg
pusha
or
enter
inc
sub
add
inc
sbb
xor
or
or
dec
into
rorl
mov
adc
sub
dec
sbb
push
adc
lret
loopne
mov
add
and
xchg
add
mov
mov
push
xchg
sub
pop
dec
adc
orb
or
and
or
xchg
cmp
cmp
sbb
sub
scas
mov
sub
inc
outsl
push
push
sbb
adc
xchg
xchg
xchg
jne
repz
jns
out
icebp
ret
stos
fwait
in
aaa
pop
and
je
rclb
orl
push
xchg
int
or
inc
daa
jl
dec
or
sub
in
mov
inc
call
rolb
test
add
and
sbb
loope
adc
adc
aaa
cmpsb
loopne
xchg
xor
mov
scas
lods
mov
adc
push
dec
movsl
fs
das
xchg
and
fstpt
enter
rclb
ret
xchg
addl
sbb
test
inc
add
jne
mov
sbb
rorb
test
jmp
icebp
inc
int
or
sub
and
test
and
mov
or
pop
dec
push
addl
ljmp
push
int3
fs
repz
jg
popl
rcrl
xor
fsts
dec
or
rclb
les
filds
push
push
bound
inc
je
inc
dec
push
jmp
lcall
add
inc
add
arpl
dec
or
movsb
mov
cmp
mov
aaa
ret
or
adc
push
and
aas
inc
sub
sbb
and
popa
loop
cltd
and
inc
and
push
lds
cs
mov
dec
dec
inc
or
cmpsb
pop
inc
pop
cwtl
int
sub
add
xchg
push
lret
mov
inc
adc
imul
mov
sbb
ljmp
and
adc
dec
arpl
test
aam
or
and
and
xchg
sbb
or
push
or
fisttpl
mov
and
jg
mov
jno
fildl
sub
adc
jge
dec
repz
add
test
insl
rorl
or
add
jge
xchg
xchg
push
pushf
pop
mov
and
xchg
jmp
or
test
movsl
xchg
mov
inc
int3
and
jns
subb
iret
out
xor
ror
mov
pusha
orb
int
pop
fs
ds
pop
nop
leave
jp
es
mov
add
adc
push
pop
sbbb
and
jecxz
andb
dec
cmp
mov
movsb
add
sbb
lods
sbb
sub
or
push
xlat
and
insl
mov
mov
sub
sbb
and
jae
and
push
and
movsb
inc
out
adc
dec
mov
mov
push
xchg
lea
and
inc
push
add
rorl
xor
stos
xchg
and
xchg
loope
test
addb
lods
enter
adc
jp
add
cltd
imul
out
adc
mov
fldcw
pushf
repz
sub
jmp
xchg
gs
xor
sub
in
xchg
xor
mov
xor
mov
dec
sub
add
nop
fs
push
mov
pusha
adc
mov
pop
inc
add
push
add
sub
add
jno
xor
pop
ja
adc
adc
xor
dec
add
xor
dec
in
inc
or
add
mov
iret
dec
add
sub
mov
xchg
int
imul
push
movsl
test
mov
cmpsl
stos
add
inc
push
loopne
dec
ret
pop
andb
push
dec
shrl
xor
dec
inc
and
pop
bound
pop
jne
shll
cwtl
fcoml
push
inc
xchg
aaa
andb
repz
lock
lds
mov
jge
cmp
jne
push
mov
push
ret
jno
xchg
or
cs
test
xchg
decb
adc
scas
inc
dec
mov
lahf
sahf
aad
xchg
xor
jmp
dec
mov
ret
pop
or
inc
add
das
imul
pusha
loope
ret
add
shll
add
add
cmpsb
pushf
lcall
add
into
and
fcmovnb
mov
xchg
or
dec
add
arpl
test
sbb
adcl
sub
movsb
or
push
push
xor
test
dec
adc
adc
insl
pop
push
push
dec
push
mov
mov
xchg
sbb
xor
and
jo
dec
aas
lods
push
popa
add
or
add
add
mov
pop
xchg
add
dec
add
push
push
test
outsl
fwait
nop
push
push
xchg
adc
ds
adc
push
leave
jg
pop
push
push
xor
push
test
push
dec
pusha
add
rolb
icebp
and
data16
out
fcmovnb
test
pop
add
roll
and
adc
cld
data16
sub
sbb
call
es
or
jb
testb
sbb
xchg
nop
pushf
arpl
mov
xchg
add
adc
add
and
fimuls
and
and
mov
adc
loope
mov
add
lea
pop
push
and
and
or
test
and
push
sbb
xor
xchg
inc
xor
adc
popf
and
and
out
mov
pop
add
add
or
scas
mov
mov
push
out
and
dec
xchg
or
daa
jge
and
and
rol
push
push
leave
push
add
faddl
gs
mov
mov
xchg
dec
test
jmp
mov
push
fwait
rorb
rclb
and
mov
add
and
dec
sub
test
adc
ffree
push
dec
pop
clc
mov
rolb
ror
adc
cwtl
jge
sbb
adcb
inc
sbb
adc
add
nop
dec
sbb
stos
or
or
dec
rorl
jne
add
leave
mov
dec
xchg
push
inc
mov
push
je
or
sub
inc
sub
dec
cmc
pop
pop
movsb
je
lret
orb
sbb
in
popf
push
test
mov
negl
gs
shlb
loopne
fwait
das
bound
add
push
out
icebp
jnp
and
adc
lcall
fisttpll
jge
jne
pop
aam
push
mov
movsb
sub
jnp
add
xor
inc
add
dec
mov
out
lcall
inc
add
adc
int
leave
xor
adc
enter
and
dec
data16
gs
stos
sbb
push
shll
loop
mov
jge
jo
inc
or
and
xorb
loopne
arpl
pop
ss
sbb
sarl
jnp
cwtl
and
ficompl
push
ljmp
int
test
cmp
add
and
or
adc
les
xchg
xchg
rcll
divb
pop
imul
mov
or
movsb
adc
xor
or
and
int
sub
scas
push
test
cmc
mov
dec
add
js
adc
push
xor
push
inc
dec
mov
rcrl
stos
movsb
xor
adc
frstor
dec
mov
or
rcl
dec
push
adc
sub
es
addb
xor
jno
lock
adc
iret
in
pop
push
rolb
cmpsb
hlt
add
mov
and
mov
dec
sub
test
ja,pt
test
cs
lahf
gs
push
repnz
lret
ss
lret
jnp
add
dec
sarl
test
test
out
dec
or
ljmp
ret
and
ljmp
sub
filds
sbb
mov
shrb
sbb
adc
and
cmp
sbbb
push
scas
mov
add
xchg
hlt
mov
or
dec
xchg
lds
mov
rol
adc
inc
dec
adc
nop
pop
xchg
add
inc
ljmp
inc
dec
cmc
les
inc
arpl
sahf
mov
out
xor
push
mov
movsb
cltd
outsl
lret
fxch
test
xor
adc
shrb
dec
pop
push
std
pop
xchg
sbbb
adc
std
fwait
add
add
sahf
scas
and
push
rolb
popa
sub
mov
push
test
test
cmpb
adcl
pusha
or
test
jno
subl
add
add
out
jne
xchg
aam
inc
fmuls
insl
and
and
es
lods
pusha
xchg
adc
add
out
push
mov
nop
test
adc
and
pushf
push
xor
int
dec
push
and
dec
roll
xor
mov
adc
jne
shrl
pop
mov
push
enter
lahf
and
xor
push
hlt
push
inc
and
jecxz
or
add
or
movsb
mov
sbb
jae
and
push
enter
flds
add
ret
xor
loop
cmp
xor
das
bound
in
orb
cmpsl
or
test
test
nop
icebp
push
adc
adc
insl
push
popa
add
int
and
add
and
or
sbbb
or
xor
mov
or
inc
adc
rolb
adc
mov
lret
dec
mov
jo
aas
pusha
les
sbb
cmp
or
cmp
lcall
mov
sahf
push
mov
stc
sub
push
add
rcll
es
das
inc
mov
push
inc
push
push
sub
scas
xor
mov
mov
bound
mov
loope
clc
dec
dec
and
pop
dec
imul
sbb
or
aad
push
or
mov
push
push
out
movsb
sbb
dec
popa
aaa
scas
xchg
pop
or
psubq
xlat
push
xor
sbb
sbb
inc
loopne
or
and
inc
inc
mov
dec
adc
push
adc
add
and
cmp
or
pop
push
mov
adc
or
push
and
add
sub
in
test
adc
push
cmp
ds
add
xchg
inc
xchg
add
sub
push
push
mov
sub
jl
push
or
and
mov
jbe
add
inc
adc
pop
fwait
push
shrb
pusha
movsl
js
inc
add
cmpsl
mov
adc
adc
add
add
les
cmp
addb
and
adc
adc
popa
cmp
inc
adc
mov
mov
adcb
pop
je
xchg
adc
mov
imul
int3
rclb
sbb
inc
add
cmpsb
mov
add
fwait
scas
sub
cmp
mov
inc
fucomip
arpl
add
or
ja
clc
cwtl
sub
jo
fadds
sub
and
pop
adc
subb
dec
mov
xor
je
sbb
je
outsb
mov
lods
adc
xchg
addl
rclb
test
xchg
jo
push
ret
mov
jae
rclb
add
mov
mov
inc
xor
sbb
mov
mov
mov
fdivrs
dec
dec
inc
mov
or
mov
add
adcb
neg
or
movsb
test
lcall
add
xor
sub
pop
jecxz
and
pop
inc
and
sub
mov
push
out
dec
sbb
or
imul
cmpsl
and
shl
test
daa
xor
daa
aam
mov
add
or
and
cmpsb
out
sbb
lds
and
sbb
pop
insb
loopne
add
inc
sbb
and
xor
push
xchg
lea
test
or
adc
fcomps
push
mov
adc
mov
pop
les
inc
fisttps
adc
rclb
adc
pop
add
shll
and
cli
inc
jno
add
jb
lret
sbb
addl
pushf
and
das
xchg
rorl
jne
push
adc
mov
adc
and
inc
insb
ds
push
mov
mov
pop
idivl
add
xor
or
adc
fcmovb
push
aaa
sbb
xor
sbb
mov
mov
sbb
les
push
stos
add
sub
inc
insb
push
out
test
mov
push
lds
push
fld
inc
test
in
push
aam
and
mov
dec
add
xchg
fwait
sbb
mov
inc
repz
movsb
lods
adcl
lcall
stos
sub
mov
mov
xchg
inc
cmp
fidivl
jo
add
add
jp
pusha
es
inc
dec
addb
repnz
dec
pusha
dec
add
or
cld
push
enter
outsl
nop
push
aad
mov
pop
aas
pop
ret
mov
out
push
push
push
jmp
test
adc
xlat
roll
sub
inc
jo
pop
mov
mov
inc
mov
adc
fwait
pop
push
push
cs
inc
push
lcall
fnstenv
add
or
adc
fcoms
rolb
aam
inc
sbb
sub
add
mov
cmp
xchg
add
push
adc
add
jae
inc
nop
jo
gs
in
mov
mov
and
les
in
lss
and
add
or
scas
mov
mov
xchg
aas
push
sub
adc
hlt
push
cmpsb
and
imul
jo
ret
xor
shll
dec
mov
push
push
popa
frstor
test
xchg
mov
add
sub
popa
inc
dec
mov
xor
loope
andb
jne
add
cmpsb
ja
xor
adc
sahf
test
imul
scas
jae
inc
pop
inc
sub
rorl
add
mov
jmp
outsl
inc
and
sub
xchg
cs
pop
lcall
and
and
sahf
out
cmpsb
enter
nop
and
rcll
mov
push
mov
mov
mov
loope
inc
jns
imul
mov
pushf
ret
sub
xor
les
hlt
add
mov
add
cmpsl
les
andb
test
imul
sub
or
sbb
sbb
sbb
or
pop
jo
pop
sub
or
sbb
ret
inc
or
push
enter
add
and
mov
test
cmp
inc
dec
popa
adc
xor
test
test
adc
inc
cld
mov
push
mov
shlb
cmp
shll
adc
adc
aam
adcl
leave
ljmp
push
or
mov
add
add
rclb
mov
add
push
sub
adc
add
adcb
jo
mov
jno
test
test
add
push
shll
add
jp
mov
pop
test
and
dec
push
call
add
out
cltd
cmp
inc
stos
push
adc
adc
or
aad
sbb
and
adc
out
or
sti
add
rolb
xor
bound
mov
addb
xor
movl
imul
and
es
ss
xchg
cmpsb
test
dec
xchg
ds
add
mov
push
adc
xor
orb
and
or
adc
pop
shll
inc
pop
jo
adc
add
add
inc
and
lods
add
add
inc
inc
pop
mov
test
xchg
ret
shlb
push
add
ret
mov
cmp
sbb
pop
movsl
xor
into
js
push
adc
mov
stc
jb
scas
movsb
push
sub
scas
inc
jae
imul
stos
nop
addr16
push
dec
stos
mov
push
sarb
add
add
cmc
add
xor
scas
push
mov
cltd
mov
and
popf
or
and
add
mov
pusha
movsb
cmovo
ret
inc
or
ss
push
fs
mov
sbb
jecxz
lods
xor
leave
and
mov
dec
add
cmp
imul
adc
push
mov
pop
ret
pop
push
jg
stc
sub
repz
ror
test
sub
xchg
add
out
add
shl
add
dec
lcall
pusha
jae
sti
jnp
inc
and
dec
jo
repnz
data16
bound
pop
pushf
and
out
enter
shrb
movsl
mov
sub
mov
sbb
cmp
xchg
test
jmp
sub
nop
adc
movsl
push
jge
dec
mov
or
mov
mov
add
mov
pop
inc
xchg
dec
pop
xor
add
ljmp
cmpsb
pop
loop
mov
mov
xchg
xchg
and
stos
adcl
adc
add
adcb
or
in
inc
test
ja
xor
sub
push
roll
sub
std
iret
mov
jl
push
call
sarb
push
shlb
jb
xor
or
add
test
pop
xchg
icebp
lcall
and
and
jns
cmpsb
inc
mov
and
repz
or
leave
lcall
pusha
or
mov
rolb
push
sub
jle
add
push
push
push
popw
sbb
cmpsl
lcall
lea
dec
mov
and
sti
pop
nop
adcl
dec
add
int3
xor
test
add
cmpl
or
je
daa
xchg
mov
and
stos
ret
and
repz
and
and
xchg
rolb
push
outsl
inc
push
xor
fisubl
push
xor
adc
sub
subb
cmp
imul
ds
inc
and
outsb
jle
js
add
adc
adc
jo
sbb
and
gs
xchg
loop
jno
add
pop
or
and
mov
cmpsb
xchg
cmpsl
arpl
in
add
sub
adc
popa
test
push
adc
mov
jp
xor
test
mov
lods
push
aad
pop
push
mov
fisttpll
xchg
cmpsb
xor
mov
mov
addr16
add
or
loopne
repz
push
aaa
push
jl
push
inc
dec
popf
test
leave
add
push
dec
fwait
clc
mov
push
xor
push
ret
xor
sub
push
lcall
lds
or
test
mov
stc
mov
stos
xor
ljmp
pop
pusha
loopne
movsb
nop
pop
mov
cmp
adc
aad
or
or
mov
adc
adc
or
mov
dec
sbb
mov
shrb
adc
inc
pop
mov
or
testl
mov
orb
pop
test
popa
pop
pop
adc
enter
and
stos
jmp
mov
adc
es
dec
add
inc
cmc
cmp
rolb
fstp
addl
cmp
dec
cmp
pop
sub
mov
push
mov
fld
push
pusha
fdivl
cmp
add
test
add
fadds
mov
mov
sub
mov
insb
lcall
les
or
pop
push
das
lock
roll
xor
mov
notl
inc
sub
or
inc
rcl
fldl
xor
add
inc
sbb
add
out
test
pop
and
add
add
or
mov
cmp
push
sub
add
popl
or
add
mov
add
add
push
adc
sbbl
lcall
mov
adc
nop
mov
call
mov
xor
cmp
test
mov
out
scas
push
adc
dec
sub
out
adc
mov
sarl
pusha
ja
mov
adc
nop
inc
xor
test
mov
dec
or
xchg
or
or
jne
adc
add
push
sar
or
dec
ss
sbb
jb
inc
xor
mov
nop
cli
jecxz
fs
cwtl
into
rcll
mov
add
sbb
sub
sarb
and
push
inc
mov
lods
push
xchg
cmp
sbb
pop
adc
sub
ja
inc
js
xor
xor
and
inc
pusha
flds
add
xor
mov
sub
sbb
xchg
mov
inc
orl
fcmovu
movsb
stc
add
loope
jp
push
pop
adc
cwtl
and
push
dec
sub
sbb
mov
test
and
dec
cltd
adc
das
adc
je
and
mov
mov
cs
rolb
add
sbb
out
mov
dec
push
push
and
xchg
sub
cmp
sbbb
fs
sub
out
adc
pop
xchg
les
xchg
and
adc
stc
bound
add
and
in
or
or
xor
push
es
les
out
pop
mov
adc
lret
jno
shlb
push
loope
imul
mov
xorb
pushf
rolb
add
fisttpl
pop
dec
xchg
mov
add
mov
mov
test
xor
mov
imul
xchg
add
enter
push
adc
test
adc
and
mov
addl
jl
add
or
nop
push
sbb
push
sub
in
loop
mov
adc
adc
orb
push
mov
jns
ret
ret
xchg
push
bound
push
push
or
shr
sub
jo
pop
adc
push
push
cmp
cmp
popa
dec
adc
aad
xor
je
push
lahf
and
pop
mov
push
sub
sub
add
mov
rorb
mov
inc
dec
push
add
ljmp
or
rorl
mov
shlb
xchg
sub
rol
gs
cwtl
imul
enter
inc
nop
and
pop
ret
xor
out
fiaddl
xor
into
mov
jg
test
sub
cmpsb
jb
cmp
loope
arpl
add
mov
imul
pop
sub
test
pop
mov
and
and
add
dec
stos
testl
sub
loop
nop
xchg
or
lcall
or
mov
and
and
cmp
shlb
aam
and
mov
out
arpl
nop
dec
push
mov
or
insb
or
or
add
fiaddl
mov
inc
jo
loope
sub
shlb
sub
mov
popa
inc
xchg
aad
add
test
scas
sub
out
jns
lock
movsb
ret
mov
adc
inc
dec
sbb
clc
je
xor
add
inc
subb
sbb
add
pusha
outsl
rolb
dec
movb
inc
lods
ss
shll
test
add
les
xor
insb
test
xchg
jmp
jns
cmpsb
xchg
pop
push
adc
jle
adc
and
and
add
loopne
push
inc
or
fstps
jo
rcrl
ret
dec
jmp
mov
inc
jno
xchg
ret
lret
nop
test
jmp
sub
aaa
adc
add
adc
xlat
orb
inc
lea
aad
orl
rep
push
xor
mov
cltd
adc
push
fcmovnu
sub
lods
sub
and
and
jmp
imul
test
dec
fmuls
sub
les
enter
popa
dec
stos
inc
jno
int
push
push
mov
pushf
xchg
xchg
dec
mov
addr16
xchg
add
lret
pop
add
pusha
pusha
mov
cmc
mov
adc
push
dec
std
test
mov
inc
push
inc
pop
sub
jo
lds
and
stos
adc
sub
lret
shlb
ja
push
or
mov
loope
push
pop
and
adc
pop
add
xchg
jbe
xor
dec
inc
loope
push
sub
adc
test
xchg
inc
nop
push
dec
adc
push
lods
addb
in
lods
out
es
and
dec
adcl
mov
mov
push
inc
sbb
dec
mov
sbb
fnstsw
cltd
mov
mov
dec
add
mov
add
mov
and
mov
pushf
cmpsb
lcall
fwait
test
jns
adc
test
int3
mov
sbb
mov
ret
sbb
mov
add
ss
fdivrs
mov
adc
filds
inc
add
push
das
mov
pop
adc
gs
add
lcall
inc
sahf
dec
jae
mov
loop
mov
inc
insb
lcall
test
pop
fistpll
pop
lea
lahf
mov
rcrl
add
push
push
xor
inc
sbb
scas
dec
push
dec
mov
or
insl
adc
addb
or
lret
adc
push
arpl
push
pushf
xor
rcll
sbb
aam
xor
adc
or
imul
and
push
sub
push
jg
adc
or
jns
mov
scas
inc
nop
add
ret
stos
and
xchg
shrb
pop
out
lret
mov
pop
or
xchg
adc
ret
imul
dec
mov
xchg
xor
dec
or
sub
or
inc
push
cs
rcrl
mov
cld
icebp
stos
je
add
rolb
sbb
orl
sbbl
test
leavew
pop
addl
test
xchg
cmpsl
jb
inc
subl
leave
adc
jo
mov
mov
xchg
ret
adc
sub
pop
out
pop
push
adc
xlat
sbb
les
cwtl
dec
aad
dec
push
aam
hlt
xor
jae
aam
test
jnp
pop
rorl
adc
or
subl
mov
test
xchg
xor
movsl
inc
push
inc
inc
loope
add
or
loopne
inc
adc
xchg
dec
rcrb
and
fnstsw
and
test
jge
add
mov
push
sbb
push
inc
add
mov
les
mov
je
push
adc
fldenv
jne
dec
sub
add
lahf
dec
mov
xor
nop
mov
adc
or
xor
inc
mov
adc
mov
xchg
add
add
inc
jo
add
add
and
jo
mov
mov
inc
inc
mov
push
pop
cmp
pop
push
adc
aaa
int
dec
sub
lcall
sub
xchg
mov
lcall
loopne
or
or
data16
iret
stos
cmp
sbb
xor
add
fwait
les
dec
push
push
mov
xor
in
xchg
notb
cmpl
pop
pop
jo
or
sub
fidivrs
pop
mov
lret
fistl
loope
or
ret
jo
jl
push
or
push
lds
lea
or
cmc
jge
add
popa
or
popf
mov
add
adc
pusha
sbbb
dec
lea
insb
movsl
and
pusha
add
add
je
nop
inc
or
repnz
sbb
mov
pusha
jecxz
jns
add
xchg
mov
rorb
test
sbb
push
sbb
lods
lock
fwait
aas
out
dec
cli
push
leave
mov
int
insl
dec
mov
push
and
lods
subb
cmp
lods
ds
mov
and
push
loopne
add
dec
imul
addl
push
dec
xchg
test
andl
movsb
adc
aad
dec
and
pusha
mov
add
ret
xor
cltd
add
mov
enter
sbb
pop
subb
and
lahf
ret
ss
ja
stos
sub
loopne
jno
in
push
shll
adc
add
inc
loope
or
push
movsl
sub
test
xor
nop
xor
roll
int
and
ret
xor
test
inc
lret
popa
add
insl
push
xor
push
fiaddl
jg
and
push
add
add
insl
pop
in
add
xlat
xchg
stos
inc
in
dec
jle
bound
int
and
jecxz
add
and
movsl
xchg
sbb
enter
mov
xlat
sbbl
add
mov
inc
inc
dec
scas
bound
inc
jo
mov
cmp
sub
insl
add
dec
add
fsub
jne
pop
push
cltd
jnp
adc
mov
or
and
fiaddl
sbbb
sub
adcl
adc
sbb
push
mov
or
push
mov
andl
mov
inc
aam
add
pop
shlb
or
lods
mov
sbb
xchg
mov
xorb
pop
repnz
enter
inc
or
mov
or
inc
cmp
lret
and
or
and
xor
cmp
inc
or
arpl
sub
shll
xor
add
dec
xchg
std
loop
adc
sbb
or
movsb
fldenv
mov
test
or
add
fimull
imul
xchg
inc
or
push
sbb
pop
add
jmp
push
dec
and
imul
pop
nop
jmp
inc
or
aas
dec
push
lea
pop
add
lods
lahf
incb
mov
cmp
inc
add
lock
fmull
jge
andb
adc
xchg
lock
xchg
mov
push
nop
and
mov
nop
movsl
into
add
jmp
push
test
ja
sub
sbb
lret
or
mov
imul
sub
stos
pop
rolb
stos
in
push
adc
or
das
xchg
add
addb
repnz
pop
inc
and
shrl
sbb
das
sbbb
mov
scas
add
adc
add
lock
add
add
dec
je
movsb
test
cmp
pusha
add
pop
mov
nop
dec
mov
inc
adc
xor
test
cmp
and
inc
or
pop
loopne
fadds
cmpsb
jbe
xchg
dec
popa
aaa
mov
js
dec
jl
in
push
mov
dec
dec
sub
add
and
add
dec
idivb
adc
adcl
mov
mov
test
mov
std
add
push
sub
ja
sub
cmp
xchg
cmpsl
addl
cmpsl
iret
sub
sar
loop
adc
pop
mov
testl
add
xorb
inc
mov
adc
push
in
into
pop
add
xor
add
inc
and
daa
adc
dec
mov
xchg
sub
dec
rcrb
push
bound
xchg
sub
mov
add
adc
adc
test
insl
mov
pop
ret
inc
js
cmpsl
xchg
hlt
fs
adc
lcall
or
sbbl
orb
inc
or
inc
test
mov
sub
or
in
ljmp
adc
lds
add
jnp
aam
inc
add
add
dec
sub
push
dec
mov
inc
lea
and
lret
jns
je
clc
xorl
in
loopne
pop
mov
adc
es
ret
sbb
test
mov
sbb
test
out
das
sbb
mov
mov
sub
test
inc
mov
call
jo
add
shl
xor
cmp
fldenv
adc
mov
jl
or
jl
loop
and
addl
adc
adc
pop
push
or
daa
push
xlat
sbb
or
dec
clc
fsubrl
std
add
adc
inc
add
sbb
test
inc
and
mov
or
mov
cwtl
inc
xchg
adc
inc
inc
js
data16
mov
inc
mov
aaa
xor
or
rcr
or
insb
add
adc
mov
cmpsb
movsl
out
jno
add
mov
add
sub
sbb
test
add
cs
cmpsb
xor
xlat
xor
inc
inc
xor
in
mov
add
testl
popf
mov
lds
sub
loope
sbb
sub
leave
add
mov
jecxz
xchg
or
mov
pop
scas
loopne
outsb
dec
xor
sbb
mov
jl
mov
and
push
test
xor
insb
or
and
movsl
dec
lcall
cmp
cmc
xchg
cmpsb
push
xchg
xor
and
push
adc
ss
xor
xor
lret
roll
inc
inc
pop
int
cmpl
shlb
jo
cmp
xchg
xor
mov
inc
stos
gs
inc
add
adc
adc
mov
mov
lods
orb
xchg
push
push
cmpsl
push
imul
or
dec
test
lahf
inc
test
push
ret
popa
jne
mov
add
inc
sub
frstor
adc
cmpl
ja
ljmp
jge
sub
xor
sbb
pop
ss
mov
ss
pop
cmp
insl
push
xor
jo
int
and
xadd
add
sub
jecxz
adcl
sub
rolb
push
subb
add
fidivrl
add
push
ret
and
adc
rcll
clc
add
bound
sub
inc
ljmp
inc
cltd
test
cmp
pop
inc
leave
adc
mov
xor
push
add
inc
leave
adc
add
add
ret
jmp
add
and
push
add
stos
aam
mov
jne
shl
and
loope
jno
and
into
sub
or
inc
jne
sbb
cmovbe
test
push
sub
xchg
cmpsb
sub
push
xchg
adc
push
add
orb
sbb
imul
pop
int
iret
dec
bound
lods
or
lds
ret
and
daa
test
addl
or
insb
add
xor
sub
and
inc
dec
inc
dec
sub
pop
jno
push
push
scas
or
lds
adc
in
mov
xor
aaa
adcb
test
and
mov
dec
js
or
dec
sbb
lret
add
xchg
xchg
xchg
add
mov
roll
add
movsb
jmp
movsl
sti
adc
and
lods
inc
inc
andl
add
jecxz
sub
loop
pop
jge
push
inc
mov
push
pusha
adc
mov
and
std
mov
adc
imul
or
imul
test
push
adc
push
adc
push
push
push
mov
lcall
data16
dec
jmp
sub
aam
dec
adc
add
adc
and
and
icebp
mov
and
addb
add
mov
inc
and
out
repnz
xchg
inc
ljmp
imul
mov
push
sub
jno
addr16
adc
ret
shrl
rorl
ss
cs
ret
ret
push
or
inc
or
push
sbb
push
repnz
cmp
xchg
mov
push
js
mov
inc
and
push
cwtl
add
sbb
push
jo
rolb
adc
xchg
inc
inc
push
bound
or
icebp
outsl
sbb
and
sub
inc
pop
rcll
sbb
rolb
rcrb
popa
daa
push
and
cmpsl
add
test
aad
xor
test
dec
inc
or
mov
filds
inc
in
addb
xor
adc
cmp
mov
mov
dec
jg
and
and
scas
call
aam
push
jge
sub
and
add
sbb
cmp
push
push
or
movsl
push
xchg
shll
int
xchg
les
pusha
sbb
mov
test
pop
sub
aad
mov
or
fs
inc
sub
orb
rol
adc
stos
cmc
sbb
inc
aad
mov
jmp
loope
iret
add
ja
fs
test
add
insl
pop
clc
mov
push
inc
or
push
fcmovnbe
inc
popf
in
push
push
adc
inc
popf
xor
mov
adc
in
and
push
adc
pop
and
or
sbb
add
test
loop
fidivrs
das
sarl
loope
outsb
lret
test
mov
sbb
mov
adc
pop
add
jo
mov
test
sbb
adc
and
xorl
mov
cmpsb
inc
adc
inc
ret
scas
sti
add
ret
out
lods
mov
lcall
dec
std
jbe
js
subl
inc
inc
mov
add
adc
rolb
pop
adc
in
pop
sarb
std
lret
xor
mov
gs
and
mov
push
lcall
sub
jnp
and
cmp
add
rcrb
test
addb
sbb
or
mov
icebp
cwtl
sbb
xor
inc
xor
mov
push
lods
loopne
dec
push
nop
addl
mov
xchg
mov
addl
movsl
or
fbld
xchg
add
test
int
bts
fldenv
adc
clc
mov
orl
dec
xor
push
xchg
cmp
sti
aad
or
sbb
mov
enter
add
xorb
popa
xorl
add
mov
inc
dec
xchg
mov
mov
dec
mov
rcrb
jmp
sub
movsb
andb
imul
add
push
dec
std
push
or
mov
add
and
sti
sbb
xchg
jne
push
mov
mov
je
xchg
sbb
adc
push
test
add
add
adc
jae
adcb
inc
xchg
sar
add
aam
add
add
pop
jo
cmp
out
or
or
out
xchg
inc
jno
and
xchg
mov
loope
inc
xchg
in
out
add
jno
orl
inc
popa
je
sbb
mov
push
loop
loopne
mov
stc
pop
push
xor
les
and
push
inc
sbb
xorb
sbb
mov
test
jmp
pusha
cld
inc
mov
jno
inc
sbb
push
repnz
insl
lods
mov
adc
insl
lea
rcrb
rcll
sub
inc
sbb
inc
jne
xchg
xor
outsl
push
and
mov
or
and
adc
or
push
movsl
imul
xchg
sub
adc
mov
push
mov
iret
mov
cmc
mov
andb
or
sbb
add
xchg
insb
add
dec
filds
jp
sub
sahf
cmpsl
add
sub
or
jle
fmuls
sub
fdivrs
mov
cltd
sbb
cmp
lret
push
add
cmp
mov
lret
sbb
xchg
add
lcall
mov
les
inc
stos
or
push
or
ret
sbb
stos
dec
lret
out
add
subl
flds
or
xlat
mov
sub
xor
rcl
jo
pop
lods
or
cwtl
sbbb
push
jo
dec
dec
les
ljmp
push
adc
add
xchg
out
sub
xor
fildl
in
mov
movsb
test
je
daa
imul
and
nop
orb
add
pop
cmpsl
mov
insb
add
pop
andb
pop
add
pop
adc
pop
inc
outsb
nop
xor
sub
movsl
push
or
push
xor
and
cwtl
add
dec
mov
rolb
sub
adc
shrb
pop
xchg
int3
adc
push
mov
sub
sahf
repz
and
or
pop
push
orl
test
adc
xchg
dec
xlat
push
or
rolb
inc
fucomi
lds
push
outsb
dec
add
mov
stos
and
test
pop
subl
popa
mov
mov
push
mov
xorl
mov
addb
stos
inc
xchg
aad
inc
popf
push
test
sub
mov
aam
and
out
aam
mov
rorb
sbb
jbe
ss
jae
mov
pop
mov
sbb
test
inc
jp
cwtl
and
subl
push
lock
mov
jbe
addr16
and
imul
scas
inc
mov
sub
or
iret
and
popa
cmp
dec
insl
or
adc
sbbl
adc
aas
adc
daa
jl
xchg
push
idivl
add
sbb
add
inc
and
pop
jecxz
insl
pusha
aad
jns
push
add
and
movsb
aas
inc
inc
sahf
inc
add
mov
or
fsts
xchg
sub
cmp
mov
fsts
xor
mov
pop
cmpsb
xor
in
sbb
or
mov
inc
inc
adc
jae
and
xchg
inc
mov
pusha
popa
jle
cmp
inc
xor
push
scas
arpl
add
xchg
lahf
xor
add
adc
sbb
and
sub
dec
adc
test
adc
pop
dec
arpl
aam
mov
cmp
add
repnz
cmp
ja
or
or
test
inc
and
adc
dec
pop
push
inc
jmp
lcall
inc
stos
movsb
ret
and
lods
or
inc
adc
jecxz
inc
push
add
xor
add
pop
pop
mov
stos
jge
add
mov
nop
roll
pop
push
roll
rorb
adcb
and
mov
add
cmpsl
fsubl
mov
inc
and
js
mov
pop
pop
mov
inc
call
es
add
sub
sarl
adc
aam
inc
add
addl
pop
das
cmp
push
push
out
out
in
push
roll
les
xor
and
dec
push
adc
jnp
or
mov
test
mov
nop
mov
or
xchg
push
and
push
mov
es
int
ret
push
addr16
movsb
add
xorl
adc
sub
jl
jp
insb
or
mov
jb
mov
sbbb
mov
daa
mov
mov
out
rcrb
sbb
gs
dec
loopne
mov
jo
inc
fwait
jg
and
je
adc
test
push
push
sti
stos
dec
scas
and
sub
mov
pop
xor
popf
lea
xchg
test
dec
add
ljmp
dec
add
push
popf
pop
sbb
inc
pop
or
mov
bound
inc
push
mov
sbb
lea
push
push
sub
inc
jo
mov
adc
sub
dec
loop
cltd
and
or
mov
dec
cmp
push
mov
pop
and
fdivl
sub
sbb
adc
jge
mov
xorb
rcrb
cmp
nop
rclb
xor
and
mov
ds
pusha
or
push
inc
js
std
xorb
jecxz
bound
shr
jae
fwait
push
mov
or
push
enter
xor
or
scas
loopne
xor
or
inc
jo
adc
push
dec
pop
mov
xchg
mov
inc
roll
andb
lea
cs
ret
std
and
scas
aad
jno
cmp
add
push
sbb
mov
andb
adcl
push
adc
or
or
jno
sub
inc
or
mov
and
mov
jge
shlb
push
or
xor
and
xchg
lcall
push
inc
xchg
popa
sbb
shlb
in
imul
or
cmp
xor
imul
mov
inc
pusha
clc
sub
rclb
les
sbb
or
mov
push
mov
test
loopne
adc
out
addb
or
mov
or
dec
cmpsb
and
or
lds
test
test
sbb
mov
add
add
movsl
mov
xchg
xchg
cmpb
cmp
gs
mov
xchg
mov
shll
cmp
or
inc
and
sub
adc
test
fwait
mov
jl
repnz
leave
lcall
std
mov
inc
movsb
test
jmp
aas
bswap
add
aad
out
add
cmp
mov
push
sbb
fwait
jmp
jmp
sti
or
xchg
push
adc
push
mov
stc
inc
outsb
cmp
mov
pop
xchg
and
inc
mov
aam
insl
adc
inc
repz
test
dec
mov
add
inc
push
mov
mov
cs
roll
cmp
leave
or
cmpl
or
inc
inc
add
mov
sub
aaa
lcall
scas
push
imul
adc
add
push
loopne
aad
mov
aaa
inc
daa
mov
xor
mov
ss
icebp
adc
gs
xorl
sahf
add
push
push
jno
lahf
cmp
push
or
jbe
scas
call
sahf
or
leave
and
lea
js
cltd
rol
sub
and
adc
sub
sub
in
dec
sbb
inc
inc
mov
xchg
mov
and
mov
or
rorl
lea
add
mov
push
mov
mov
mov
add
das
inc
lahf
adc
outsb
inc
add
faddl
add
decl
xlat
sahf
and
inc
rcrl
ss
inc
or
add
pop
int3
cmp
mov
fldt
mov
mov
push
cmpsb
inc
and
es
add
adc
mov
insl
pop
and
inc
mov
test
push
push
dec
arpl
cbtw
clc
and
xchg
add
pusha
cwtl
mov
inc
add
dec
jbe
jae
loopne
inc
add
add
jno
lret
jge
or
add
mov
adc
popf
add
test
adc
push
jo
lret
mov
imul
jle
mov
or
xor
insl
or
add
jno
adcb
subl
bound
dec
or
fs
test
xor
push
movsl
inc
loopne
dec
or
pop
cmp
mov
and
xchg
xchg
dec
stc
ja
mov
jle
and
adc
push
js
ret
sbb
sub
inc
pop
ljmp
xchg
mov
pop
and
dec
orb
bswap
loopne
jo
sbb
and
movsb
xchg
loopne
sub
shrb
imul
or
push
mov
mov
dec
ret
shlb
and
push
int3
iret
sbb
inc
jo
arpl
adc
add
addb
pop
test
dec
cmpsl
insb
loope
push
cltd
out
xor
xor
add
sbbb
sub
mov
adc
add
repz
enter
add
imul
add
ret
rcrl
cs
cld
shl
or
or
and
xchg
insb
lcall
je
jb
shlb
rolb
shrl
push
int3
nop
or
pop
mov
inc
dec
in
inc
cmp
add
sub
pop
and
test
leave
lcall
push
test
testl
jo
ss
dec
adc
pop
andb
and
rclb
mov
sbb
add
lret
add
mov
xchg
adcb
nop
lds
shlb
mov
adc
leave
enter
xor
lea
push
jg
scas
mov
mov
or
mov
shl
xchg
sbb
mov
out
or
push
inc
or
mov
or
test
push
push
inc
in
mov
fsubs
add
push
jmp
mov
dec
iret
mov
sub
icebp
or
adc
lods
leave
xor
and
loope
push
cs
mov
xor
or
adcb
movsl
push
mov
add
lea
inc
in
mov
push
dec
adc
inc
imul
inc
push
mov
sbb
add
das
es
ret
leave
loope
ret
inc
sub
adc
inc
pop
mov
stos
pusha
mov
clc
scas
lcall
adc
inc
mov
add
lret
int
lret
or
mov
mov
or
nop
test
in
add
movsb
push
or
fnstenv
test
xorb
mov
lds
jl
es
push
roll
jbe
dec
add
push
bndstx
sub
jns
daa
lea
call
clc
fisttpll
shrb
mov
xor
push
jb
andb
cltd
test
mov
jae
fiaddl
bound
dec
xor
xchg
icebp
lahf
push
xor
jo
mov
rorb
adc
ret
jg
popa
call
push
or
pusha
adc
sbbl
loopne
adc
adc
xor
sbb
vpaddq
inc
pop
sbbb
dec
testb
xor
sub
pop
add
sti
subb
or
cmpsb
sub
rolb
xor
or
les
inc
sub
inc
adc
and
cmpsb
mov
lret
sti
push
mov
scas
mov
push
pop
imul
je
leave
add
xor
xor
or
mov
in
shrb
push
inc
rorl
inc
rorb
mov
dec
sbb
mov
rolb
dec
mov
or
add
out
inc
add
movups
test
outsl
lcall
ret
cli
pop
inc
and
lret
call
and
sub
cmp
jmp
push
dec
les
and
ljmp
sahf
and
adc
stos
pop
filds
mov
lahf
aam
sub
icebp
cwtl
xchg
lahf
es
cltd
xchg
mov
xor
add
or
jno
roll
loop
loopne
inc
mov
ret
xchg
or
pusha
and
inc
and
inc
mov
inc
fcmovnb
outsl
mov
movsl
xor
rorb
or
sub
mov
shrb
rcrb
pusha
ret
xor
mov
cs
xchg
leave
sub
jl
push
xchg
adc
push
mov
adc
adcb
push
add
xor
test
xchg
pop
adc
or
stos
ss
test
mov
sub
jns
loop,pn
or
jecxz
mov
mov
and
push
mov
sbb
push
push
xchg
inc
xchg
data16
rclb
leave
loop
icebp
pop
inc
andb
lods
mov
adc
insl
pop
push
add
bound
aas
adc
push
mov
and
mov
jbe
jmp
adc
inc
xchg
ret
nop
movsl
and
pop
adc
adc
dec
loope
and
and
les
sbb
jb
inc
popa
add
out
das
mov
mov
stos
in
insb
fcom
andb
push
inc
sbb
sbb
xor
adc
loope
loopne
push
adc
mov
and
or
data16
inc
sub
sbb
mov
xchg
cmp
ljmp
fmul
aaa
add
push
ret
fisubs
push
xor
pop
pop
xor
adc
dec
rclb
dec
popa
subb
xor
push
fists
shll
bound
stos
pop
repz
dec
add
sbbb
imul
test
push
xchg
inc
movsb
mov
loope
jo
mov
or
pop
test
out
out
xor
dec
mov
jne
or
or
pop
mov
sub
or
xor
pushf
jb
adc
push
adc
or
enter
sub
add
mov
ret
cwtl
cmp
or
repnz
pop
inc
inc
push
rclb
dec
pop
and
push
xchg
and
insl
or
ljmp
pop
xor
out
scas
test
mov
sbb
or
pop
inc
jnp
adc
pop
test
adcb
xchg
and
cmpsl
sbb
sbb
pop
jno
mov
ret
cs
or
inc
push
add
sbb
out
and
and
enter
sti
add
stos
push
lds
pop
mov
leave
rorb
push
add
adc
add
loop
pop
and
je
push
push
imul
jns
add
dec
pop
es
imul
sbb
pop
or
das
xor
inc
adc
test
add
sbb
xchg
push
cmpsl
xor
cmc
sub
inc
pusha
inc
inc
push
outsl
jns
into
stc
test
mov
pusha
push
addb
cmpsb
jge
test
and
add
xor
andb
andl
fcoml
test
jecxz
sbb
dec
lods
push
xchg
or
mov
or
add
sub
push
dec
or
xor
jb
test
mov
stos
adc
or
mov
jg
adc
popa
std
or
or
movsl
add
xor
add
xchg
dec
inc
and
and
dec
adc
push
out
enter
inc
and
hlt
outsb
xchg
adc
add
push
push
loopne
sbb
fadds
xchg
lcall
mov
stc
cmovnp
xchg
cmp
adc
adc
adc
mov
xor
jo
rclb
jno
rorb
add
daa
cmc
inc
push
inc
pop
test
inc
xor
and
add
call
push
xchg
add
sbb
mov
pop
dec
or
lds
pop
leave
shlb
adc
mov
xchg
shrb
mov
sub
and
test
gs
push
mov
xchg
pop
jecxz
enter
scas
or
loope
arpl
xchg
inc
lods
push
mov
or
jae
mov
mov
jp
mov
mov
enter
xchg
adc
inc
mov
les
test
lret
andb
and
dec
stos
jge
inc
xor
les
jb
xor
sub
outsb
int
dec
or
cmp
adc
and
xchg
mov
leave
inc
xchg
inc
add
xor
dec
or
test
cmp
inc
aad
fnsave
xchg
aam
enter
adcl
leave
lret
mov
jo
out
dec
inc
dec
and
cmp
cwtl
sub
mov
shlb
xchg
das
ret
aam
and
mov
inc
cmp
push
adc
sub
sbb
or
jl
mov
mov
xchg
imull
adc
xor
or
sub
inc
jae
hlt
inc
je
cs
js
jg
insb
inc
shll
mov
mov
movsl
es
jl
pop
rol
ret
mov
sub
and
ss
inc
dec
or
push
add
insl
bound
add
push
pop
pushf
inc
or
and
xor
and
and
and
xor
mov
lds
arpl
push
rorb
iret
imul
add
or
andl
and
dec
ret
adcl
xor
sbb
inc
ljmp
cmp
or
push
mov
lods
push
movsb
jne
popf
mov
inc
stc
push
or
into
leave
or
add
cmpsb
dec
cmp
hlt
jb
add
nop
test
xlat
ss
add
inc
repz
sub
add
xchg
xchg
addb
cld
push
dec
ss
shrb
loop
fcomps
pop
mov
das
jb
mov
sbb
pop
inc
gs
add
and
lea
jecxz
mov
and
xchg
test
enter
movsb
push
xor
adc
add
add
inc
sbb
jmp
sbb
cmpsb
adc
popf
cwtl
pusha
xchg
adc
inc
pop
rorl
inc
pop
in
negb
or
mov
push
imul
adc
shll
nop
jp
xchg
mov
cli
pushf
push
pop
test
call
jl
pushf
sahf
clc
insl
loopne
ja
je
in
roll
add
and
in
xchg
rclb
pop
imul
pop
das
aaa
xchg
adc
sbb
or
cmpsl
in
dec
adc
mov
adc
pop
nop
jae
push
mov
push
std
dec
or
inc
push
iret
mov
and
popa
aam
add
sbb
pop
icebp
je
sbb
lock
push
rclb
pop
and
es
sbb
inc
fwait
add
mov
pop
xchg
xor
mov
test
pop
or
fcompl
jecxz
jl
or
lcall
lds
add
es
and
adc
inc
adc
enter
pop
or
lock
dec
dec
push
xlat
imulb
iret
xor
cmp
outsb
push
xchg
scas
fs
mov
push
test
jae
aam
fbstp
push
sub
test
or
or
nop
mov
les
mov
pusha
push
bound
or
add
add
mov
and
inc
adc
clts
or
add
pop
dec
rolb
lea
and
mov
mov
test
movsl
push
push
ss
cmc
pop
add
push
test
push
xchg
push
mov
inc
xchg
jg
dec
lcall
xor
push
sbb
xchg
aam
or
aad
lea
and
pop
fisubl
mov
add
jae
adc
xor
push
andl
data16
sbbb
add
mov
pop
pop
inc
dec
or
dec
lcall
bound
cmp
int3
dec
inc
jns
sub
pushf
mov
fisubrl
ss
dec
inc
push
addb
sbb
movsb
or
push
rol
or
inc
sbb
push
and
push
add
mov
push
push
inc
xor
mov
sub
xchg
mov
push
and
inc
call
lea
adc
add
adc
xorb
fildl
xorb
add
add
lret
push
adc
addb
pop
or
mov
and
xchg
add
mov
push
addb
clts
sub
ficoms
inc
inc
or
leave
xchg
lcall
fs
xchg
add
dec
enter
mov
xor
mull
wrmsr
test
and
rolb
inc
rclb
in
push
cmpsl
ret
nop
mov
mov
mov
bound
adc
out
icebp
es
push
test
push
dec
adc
stos
or
sbb
cmp
dec
and
mov
ss
sbb
or
sub
rolb
out
test
inc
push
or
pusha
popa
add
sbb
mov
push
mov
xchg
movsl
dec
add
sbb
pop
imul
stos
shl
or
pop
dec
fwait
mov
or
add
cmp
fists
mov
mov
xor
xor
and
fiadds
adc
and
dec
mov
sub
cmp
pop
insb
inc
rorl
push
push
adc
pop
ret
pop
or
inc
xor
xchg
je
sti
dec
inc
rclb
cmpsb
mov
popa
dec
cmpsb
mov
mov
fdivrl
fildll
movsl
push
dec
orb
inc
mov
push
and
and
mov
lds
xor
mov
popa
and
test
add
adc
icebp
stos
cmpsb
mov
and
sub
rclb
cmp
jl
mov
sbb
inc
xor
add
mov
xchg
notl
push
sbb
add
push
or
inc
pop
push
push
lret
adc
stos
mov
mov
lret
mov
adc
mov
jae
mov
cmp
orb
cs
jne
in
lods
add
adc
subb
aam
add
sbb
cwtl
adc
insl
mov
add
xor
in
add
or
in
mov
data16
stos
mov
sub
nop
iret
mov
nop
adc
sub
pop
push
adc
mov
push
sub
sub
sub
hlt
sub
das
xor
and
es
fisubrl
pushf
mov
les
pop
xchg
pop
imull
sub
pop
inc
inc
inc
xchg
movsb
aaa
lret
sub
jl
je
test
and
push
adc
js
rcl
cli
data16
add
mov
pop
push
push
pusha
sbb
add
or
insb
or
inc
xchg
dec
dec
inc
test
xchg
xchg
push
cmp
dec
inc
insl
jae
add
dec
xor
mov
push
cmp
les
or
dec
push
ret
or
cs
jecxz
add
pop
mov
and
sub
lods
add
sub
xlat
cmpsl
loop
sub
mov
test
add
sub
xchg
add
mov
jno
push
pop
sbb
loope
shlb
orl
repnz
loop
and
adc
sub
add
fimuls
sahf
adc
or
or
imulb
push
fnstcw
outsb
test
jo
orb
js
or
andl
dec
xor
xchg
add
inc
and
or
xorb
scas
shrb
bound
dec
popa
mov
enter
lea
mov
or
lret
data16
adc
push
push
inc
ret
mov
pusha
and
mov
xor
adc
xor
adc
xor
xor
jne
adc
std
mov
test
adc
adc
lods
sub
xorl
sub
cmpl
push
inc
sbb
add
insb
cmp
fwait
xchg
aad
adc
push
movsb
mov
lds
mov
cmp
inc
and
fcoms
cmp
or
les
fiadds
loop
push
arpl
or
scas
xchg
adc
xor
sar
roll
dec
mov
xor
pop
adc
cmp
mov
test
inc
pop
xchg
pop
addb
sbb
pop
xchg
adc
adc
or
inc
or
shrl
push
lcall
sbb
rcll
pusha
inc
daa
inc
adc
adc
ret
imul
push
mov
xor
xchg
or
cmp
nop
dec
and
adcb
cwtl
xor
mov
rorl
mov
rcll
sahf
pushf
fidivrs
nop
push
add
xor
mov
je
je
mov
arpl
popa
adc
mov
push
pusha
popf
add
movsb
adc
dec
xchg
cmpl
addb
je
add
sbb
les
or
roll
clc
and
push
lds
xchg
adc
adc
jb
push
sub
mov
inc
adc
loopne
lods
test
dec
inc
aad
sahf
jo
imul
test
add
mov
sbb
pop
aad
pop
test
adc
dec
stos
and
push
das
lods
and
aaa
sub
loop
or
mov
dec
lds
inc
repnz
mov
add
addr16
sbb
push
mov
dec
adc
xchg
push
ja
or
xor
or
mov
inc
sub
or
lahf
sub
rclb
enter
fildll
out
fsubrs
mov
pop
and
fidivs
mov
mov
or
add
xchg
add
outsb
pop
and
and
xchg
rorb
adc
lea
mov
xor
add
lcall
cmc
adc
inc
add
mov
loope
xchg
pop
testl
push
or
push
dec
sub
mov
mov
push
or
aam
pop
cmp
xchg
xor
sbb
jne
sub
mov
stos
add
add
pop
sbb
jmp
adc
cli
mov
sub
cmp
push
push
mov
xor
fcomip
int
cwtl
adc
cmc
jne
adc
subl
aad
ja
out
cmp
pop
les
cmc
fldcw
push
lods
add
and
xor
dec
push
and
inc
add
xor
push
and
and
jbe
test
xor
stos
stos
inc
xchg
inc
sbb
dec
sbb
fs
add
mov
out
add
sub
sub
xlat
mov
call
sub
push
mov
dec
mov
lds
inc
imulb
lea
add
or
ret
adc
xchg
jo
outsb
pop
push
mov
out
add
push
fstl
shrl
loopne
xchg
pop
test
call
cwtl
ljmp
loope
shrb
xor
mov
inc
pop
shll
sbb
mov
movsl
sub
and
fwait
les
push
xchg
inc
pushw
das
and
xorb
sub
jb
and
xchg
sub
mov
mov
push
jno
lahf
insl
mov
cmp
inc
call
mov
mov
nop
adcb
mov
mov
pop
subl
je
mov
fwait
iret
lods
adc
test
and
and
xlat
push
pop
xorl
das
movsb
and
sub
or
xchg
add
orb
sbbb
xor
mov
or
in
enter
les
scas
dec
or
add
add
lahf
rclb
dec
mov
orb
test
pop
jbe
sub
lret
test
adc
frstor
mov
push
or
daa
inc
xchg
cmp
push
jns
inc
mov
mov
dec
test
inc
arpl
cmp
add
add
mov
rcll
cltd
add
pusha
inc
sub
push
subl
pop
adc
adc
cmpl
sbb
pop
loopne
and
mov
sub
and
add
test
lret
or
repz
and
jmp
les
push
mov
addb
and
and
add
and
inc
movsl
loopne
xor
xor
push
adc
test
stos
popa
mov
adcb
cmp
inc
out
clc
test
xchg
jmp
add
sub
ss
and
cld
add
sub
add
cld
xchg
adc
inc
jno
inc
dec
inc
add
mov
pusha
add
push
inc
in
mov
mov
lahf
or
outsb
adc
test
mov
jne
adc
add
sti
push
shll
std
adcb
and
mov
mov
popa
inc
adc
mov
sbb
test
push
mov
ret
and
and
leave
addr16
jne
push
jne
nop
iret
adc
pop
adc
sbb
dec
test
jle
add
scas
inc
ret
loope
clc
inc
adc
test
sub
sub
test
fldenv
out
cltd
mov
sub
cmp
pop
mov
push
pushf
xchg
mov
aad
data16
sbb
sahf
mov
xchg
xor
add
and
pop
sbb
int
daa
xchg
insb
mov
inc
xor
mov
test
xchg
sub
scas
cmp
mov
repz
mov
add
inc
cwtl
nop
data16
jae
or
insl
dec
adc
and
test
push
and
push
and
add
rcrb
dec
dec
push
adc
mov
push
rclb
subl
inc
or
cwtl
aad
rolb
push
les
dec
inc
adc
stos
mov
inc
arpl
test
sub
xor
mov
inc
and
les
push
jecxz
dec
hlt
cmpl
xlat
push
sub
arpl
or
mov
push
gs
inc
test
insl
add
out
dec
adc
jno
or
add
jg
adc
daa
hlt
jge
xor
ret
and
sarl
and
add
loop
test
xchg
sbb
movhps
jo
and
add
lahf
adc
subl
push
mov
push
push
mov
mov
or
sbb
cmp
pop
and
ret
mov
mov
adc
inc
lret
jno
sub
movsb
inc
stc
mov
mov
cs
cmp
pop
orb
pop
fs
mov
or
in
xchg
movsb
nop
cmp
inc
xchg
sahf
push
push
add
dec
pop
xchg
test
and
addr16
and
mov
pop
mov
mov
mov
jl
and
add
movsb
repnz
mov
lds
js
add
rep
mov
mov
dec
or
cmp
aam
mov
rcrb
cmp
ja
sbb
or
and
lcall
pop
jb
push
dec
scas
inc
add
push
fistps
rorl
or
roll
inc
adc
movsl
xchg
popa
aam
dec
cmpsl
test
push
and
adc
in
mov
mov
sbb
jns
pushf
mov
mov
mov
stc
and
push
dec
rclb
addl
rorl
sbb
jo
test
jae
outsl
in
mov
jp
cmp
add
ss
test
mov
xchg
sub
inc
insl
add
addb
jecxz
adc
aaa
mov
in
jno
bound
in
or
test
nop
lds
inc
scas
push
rclb
push
inc
cmp
mov
icebp
and
popa
popa
movsl
movsb
sub
mov
dec
jbe
push
inc
sbb
pusha
and
mov
push
mov
pop
xchg
loope
pusha
add
shrb
mov
push
iret
adc
or
scas
bound
inc
and
push
xor
sub
jo
fcoms
push
add
push
dec
inc
sub
popf
pminsw
and
dec
sbb
sarl
push
mov
out
or
sub
lcall
pop
and
dec
adc
daa
popa
xchg
test
push
dec
add
aaa
sub
sub
das
cltd
sbb
xchg
push
loopne
pop
adc
mov
add
dec
nop
dec
test
push
push
jg
call
aad
add
subl
add
inc
inc
sahf
repz
in
adc
push
sub
adc
imul
xchg
add
inc
adc
sub
cmp
dec
adc
or
inc
lcall
or
mov
or
mov
xchg
add
adc
and
jno
inc
mov
jge
add
mov
and
sub
push
add
bound
test
adc
add
nop
imulb
xchg
or
inc
sbbl
repz
inc
sbb
pop
aad
movsb
sub
cmpsb
fucom
xchg
sub
mov
sarl
adc
fldt
and
dec
mov
cmp
cmpsb
lcall
pusha
mov
mov
dec
dec
cmpl
push
xchg
iret
adc
icebp
mov
fdivrp
push
push
adc
mov
shrl
jo
mov
inc
js
inc
jnp
insl
push
or
mov
cmpsl
or
inc
sbb
dec
roll
outsl
and
cmp
pop
cmpb
add
or
push
add
pop
stos
push
jne
and
or
add
pusha
xor
jge
lods
add
sub
add
test
out
adc
pop
cmpsl
cmc
mov
mov
sbbl
fldenv
int3
xlat
push
add
arpl
int
cltd
pop
inc
and
icebp
adc
adc
mov
pop
mov
les
add
fildl
sbbl
and
mov
adc
mov
out
jo
andl
xchg
movsb
sti
mov
push
imul
pop
scas
add
dec
add
outsl
movsb
xor
cmpsl
dec
add
mov
loop
and
add
movsl
adc
inc
adc
outsb
lods
xor
inc
sarb
jne
movsb
or
jo
adcb
mov
pop
inc
inc
add
in
lock
jns
add
inc
push
xchg
les
sub
push
mov
sahf
xchg
loop
cmc
pop
les
mov
fsubs
cmpsb
mov
push
leave
and
pusha
jge
fdivr
xchg
icebp
mov
iret
and
inc
mov
scas
add
and
sub
ds
dec
dec
push
cmp
inc
dec
sub
xchg
or
cmp
dec
sub
adc
mov
mov
sub
ljmp
jo
cwtl
or
or
movsb
test
xor
ds
bound
pop
dec
enter
fistpl
mov
or
inc
push
test
mov
sbb
xorl
cmpsb
or
xchg
mov
cmp
and
inc
sub
cli
mov
sub
push
fldt
lds
mov
xchg
cmp
in
and
rorb
dec
insl
or
test
cmp
jne
adc
out
mov
lods
mov
push
daa
lahf
and
ljmp
in
add
and
int
test
dec
rclb
cwtl
iret
dec
mov
adc
and
pusha
mov
aad
pusha
or
sub
and
inc
icebp
js
fs
jmp
aaa
inc
loope
addr16
inc
and
push
jmp
cmp
adc
adcb
or
popa
dec
scas
and
pusha
push
add
xchg
roll
aad
fbld
sbb
and
add
mov
popa
adc
adc
mov
xorl
and
or
adc
cmp
mov
or
popa
stc
lcall
aas
cmp
lcall
add
pop
icebp
incb
test
and
xor
add
inc
stos
dec
subb
lcall
dec
cmc
xchg
subb
imul
pop
add
inc
adc
mov
or
movsb
and
and
fldcw
adc
fbld
add
dec
adc
cwtl
leave
inc
jecxz
add
inc
pushf
mov
add
add
and
adc
cmp
sbb
add
test
and
rorl
xchg
xor
push
xchg
mov
or
sbb
clc
lods
xchg
jb
ljmp
add
add
cli
mov
xor
pop
sub
popf
or
lret
jle
add
add
or
adc
inc
shrb
out
sub
xor
stos
xlat
movsb
push
dec
aas
stos
shlb
add
cmp
inc
popa
call
inc
and
inc
mov
arpl
sbb
sbb
loopne
push
xor
popa
insl
popf
xlat
add
push
add
bound
cmp
dec
dec
aam
int
pop
pop
adc
push
mov
mov
or
push
or
add
cld
lods
xchg
and
and
fldl
add
aas
inc
or
les
xchg
adc
stos
inc
aam
inc
enter
sub
nop
inc
in
xor
lret
pop
ljmp
adc
pushw
sahf
dec
cwtl
js
jo
push
addr16
xor
and
roll
adc
aas
rcrl
mov
fs
jo
push
gs
dec
sub
add
sbb
cmp
cltd
add
pop
push
add
mov
stos
ficompl
sub
insb
loope
sbb
add
orb
mov
inc
test
add
add
push
rcr
and
stos
lcall
push
orb
cltd
arpl
adcb
or
test
jecxz
popf
test
sub
les
and
pop
xor
push
rcr
add
mov
xor
cltd
jns
in
mov
loop
push
mov
sahf
scas
and
test
sub
data16
push
push
adc
pop
or
sub
ds
jge
sbb
outsl
inc
add
stc
stos
sub
sub
add
jbe
movsb
dec
dec
out
jge
test
mov
jecxz
and
xchg
or
inc
mov
and
push
movl
push
fs
test
adc
sub
or
cmp
inc
aad
jmp
sub
shll
mov
sub
shr
mov
pop
jo
shrb
jge
adc
inc
daa
adc
inc
andb
popa
and
lret
je
add
lahf
push
dec
adc
and
and
xchg
dec
movb
sub
fcoms
push
add
lret
inc
xlat
sbb
inc
push
les
jbe
stos
push
mov
test
dec
add
xor
sub
inc
dec
lret
sbbb
nop
mov
bound
cmp
arpl
mov
or
insl
jb
mov
inc
and
mov
adc
push
dec
mov
inc
dec
repnz
xor
fcoml
add
test
sbb
outsb
stc
je
shlb
adc
and
add
orb
and
pusha
push
stc
adc
sub
test
ret
dec
push
push
pop
mov
add
jns
mov
jmp
mov
xor
loope
add
inc
mov
dec
sub
inc
sub
and
xchg
enter
jne
push
fsts
dec
repz
xchg
mov
sub
push
cmpsl
inc
push
enter
adc
dec
mov
mov
add
testl
add
add
cmp
roll
or
sbb
dec
push
imul
addl
mov
inc
inc
xchg
sbb
pop
inc
insb
add
aad
push
pop
mov
inc
or
push
orl
loope
push
fstps
ret
pop
ffreep
cmc
test
fcomp
sahf
lea
add
push
in
xchg
adc
push
inc
andl
add
int3
nop
mov
pop
cltd
inc
and
or
adc
bound
or
add
and
ss
repz
enter
sbb
pop
stos
popa
dec
icebp
mov
or
rclb
add
mov
adc
ret
mov
frstor
xor
mov
stos
and
xchg
sbb
sti
outsb
fwait
rolb
adcb
imul
test
roll
les
aad
mov
jmp
outsl
adc
push
xlat
add
push
cmc
sahf
insl
adc
adc
cmp
popa
or
div
adc
mov
gs
jae
and
and
outsb
or
and
add
inc
stc
dec
das
loopne
xor
popf
push
add
stc
push
or
shl
mov
xor
pusha
cmp
pop
xor
popa
cmp
gs
test
jo
add
jmp
sbb
imul
shlb
push
push
and
or
sub
lret
cmp
ret
fcomi
push
jge
push
push
push
and
mov
stos
inc
movsl
dec
in
test
add
add
stos
nop
push
sbb
cltd
ret
mov
stos
xor
addb
jno
sti
movsl
lea
inc
and
insl
mov
cmp
inc
popa
mov
or
sub
sub
sub
add
pop
pop
add
movsb
pop
aad
loopne
or
add
andb
add
pop
mov
push
sbb
fs
inc
test
mov
movsb
dec
push
dec
pop
stos
es
adc
stos
mov
fwait
js
cs
cmp
add
xchg
xor
mov
mov
mov
mov
test
ds
rcrl
add
cwtl
inc
add
mov
pop
arpl
ret
adc
and
and
pop
or
sub
in
les
adc
arpl
lea
repnz
adc
jl
dec
sub
or
rol
addr16
sub
mov
adc
test
fldcw
cwtl
sub
xchg
sub
mov
in
stos
sti
sub
iret
sbb
mov
adc
jns
daa
movsb
test
push
insl
push
dec
les
lds
stos
adc
pop
in
and
adc
xchg
cmp
and
sbb
mov
ljmp
jno
or
rorl
cli
or
mov
add
inc
sbb
mov
dec
pop
test
ja
mov
adc
adc
mov
sti
rcr
add
xlat
push
pop
arpl
jno
adc
stos
ret
mov
or
add
push
jmp
scas
shrb
sub
inc
mov
and
inc
xchg
sub
or
cld
jno
inc
and
addl
xor
and
sub
and
dec
mov
jne
dec
inc
and
les
push
fisubl
push
adc
mov
stos
adc
ljmp
xor
inc
movsb
jno
mov
lcall
push
call
sub
xchg
imul
add
push
leave
xchg
loope
or
insb
loopne
sti
push
xlat
rolb
nop
pop
mov
adc
lahf
or
pop
add
loope
add
mov
nop
stc
cld
inc
loope
dec
negb
or
lcall
outsb
add
andb
inc
stos
imul
ret
mov
jae
mov
adc
movsl
mov
or
jl
ret
xor
or
cmp
outsl
insl
add
mov
fsubrl
cmp
dec
push
mov
sbb
or
add
push
sbb
mov
mov
loopne
or
pop
and
mov
test
or
lahf
jne
add
xchg
cmp
xchg
dec
ss
and
leave
sbb
pop
push
push
adc
ret
dec
sub
pop
sub
mov
xlat
cmpl
mov
pop
and
sub
pop
ficoms
std
dec
adc
js
add
adc
pushf
xchg
stos
push
int3
push
xor
rorb
lds
inc
jne
inc
and
adc
jl
dec
inc
adc
sub
and
mov
popa
xor
in
adc
shll
ss
mov
xchg
lcall
and
sbb
or
ret
inc
inc
add
andb
addb
adc
nop
fwait
nop
mov
or
add
fidivl
dec
insb
adc
lret
in
xchg
add
xor
add
int
inc
int3
mov
orl
or
addb
mov
cmc
and
mov
in
mov
mov
pop
push
and
lret
loopne
movsb
cmp
push
rclb
cmp
je
in
dec
int3
xor
mov
sub
call
sub
loopne
jo
bound
mov
repnz
in
lods
ret
jns
inc
add
jne
adc
and
adc
mov
adc
rolb
movsb
dec
jp
inc
xor
xor
push
inc
and
mov
xchg
xor
dec
adc
pop
and
adc
push
mov
adc
and
xor
adc
adc
jne
dec
add
push
push
push
sbb
inc
jne
add
mov
and
push
dec
adc
pop
jo
clc
movsl
pop
add
pop
adc
lret
mov
cs
out
jg
scas
loopne
ret
js
ja
lret
es
add
xchg
add
lods
mov
or
adc
adc
cli
inc
scas
test
fldt
xor
mov
test
mov
imul
sub
mov
shlb
pop
add
mov
sub
sbb
mov
sub
jle
shll
dec
push
fld
push
sub
xor
insb
or
sub
sbb
mov
scas
sub
lods
and
mov
xor
and
rolb
cmp
dec
add
mov
inc
and
push
xor
sbb
fcmovne
scas
cmpsl
push
dec
shll
xchg
add
mov
dec
pop
sar
shrl
mov
cld
push
cmpsl
lods
sub
push
push
sub
xor
rorb
sti
xchg
cmp
dec
push
pop
pop
lret
and
cmpsb
sub
mov
lds
jns
and
lahf
hlt
ss
sbb
mov
add
add
and
xlat
xor
dec
cmp
mov
dec
add
add
mov
push
push
xor
fistpl
call
adc
sub
fnstenv
sbb
add
inc
mov
push
enter
inc
mov
inc
nop
and
test
pop
pop
rclb
adc
sub
add
orb
pop
mov
inc
fistpl
pop
cmp
faddp
add
push
and
dec
orl
adc
mov
rorl
pop
and
jo
or
call
inc
test
lahf
or
addl
sub
adc
xor
hlt
movsb
adc
addl
add
adc
mov
movups
and
push
push
sbb
pop
loopne
dec
popa
rorl
enter
rol
push
lcall
sub
dec
mov
lock
dec
fdivs
push
cmpsb
add
inc
stc
ja
add
jecxz
aad
pop
lds
bnd
and
dec
jecxz
mov
dec
or
xchg
xchg
cmpsl
mov
cmp
nop
inc
push
rorl
add
rolb
adc
and
xor
and
popa
xchg
loope
sub
loope
jno
les
xchg
xor
mov
sub
mov
sbb
and
xor
sbb
adc
aad
imul
mov
subl
mov
xor
mov
stos
xlat
ret
adc
adc
inc
roll
pop
inc
push
dec
inc
or
add
jne
or
sub
xchg
sti
into
imul
lods
and
mov
jge
stc
and
adc
dec
mov
and
in
dec
jg
and
dec
ficoms
or
push
pop
pop
sub
ret
cmp
inc
dec
les
mov
inc
mov
daa
inc
call
or
xchg
out
iret
inc
or
xor
pop
adcb
stos
in
and
mov
push
imul
mov
and
mov
and
adc
xchg
adc
stc
addb
xor
mov
add
loope
cwtl
sub
pop
adc
dec
inc
push
push
add
push
sub
pop
je
or
rorl
push
adc
stos
fwait
add
mov
xor
imul
xchg
test
jo
stos
and
xor
push
fwait
fwait
xlat
jbe
push
dec
xcrypt-cfb
cmpsl
addr16
or
sub
add
cmp
ret
sub
lock
enter
adc
jo
scas
push
inc
scas
inc
mov
push
add
mov
sub
orb
mov
arpl
lock
loope
mov
adc
dec
xor
xchg
mov
es
mov
in
pusha
adc
stos
mov
inc
dec
pop
cmp
iret
mov
mov
inc
add
and
push
sbb
and
mov
adc
add
xchg
lret
xchg
push
adc
and
addr16
stos
adc
enter
cmpb
arpl
push
sbb
push
sub
xchg
std
add
and
inc
xchg
fsubs
stos
push
cmp
sbb
sbb
aaa
ljmp
or
mov
popa
or
push
test
xchg
fmuls
mov
rolb
fnsave
xchg
repz
add
loope
dec
mov
int
adc
outsb
nop
mov
xor
pop
popaw
dec
jp
sub
mov
popa
cmp
push
and
adc
icebp
sub
xor
insb
ja
inc
push
scas
inc
sbb
dec
adc
inc
lea
movsb
xor
lcall
jg
addl
xchg
add
test
or
or
sbb
add
stos
nop
testl
nop
leave
cltd
pop
les
sbb
jo
out
or
popa
shll
inc
push
lahf
sbb
insl
clc
fs
mov
add
ret
xor
ss
dec
adc
stc
sbb
outsb
xor
add
add
cmp
push
adc
iret
stos
shll
adc
cmp
cltd
rclb
pop
or
and
inc
adc
test
cwtl
loope
rcrb
add
or
adc
ret
inc
cmp
and
add
sbb
and
push
jo
jne
js
xor
adc
or
fs
add
data16
and
pop
push
add
daa
cmc
mov
loopne
cs
adc
push
test
fisttps
mov
test
lcall
sbb
add
mov
dec
pop
push
add
cmp
push
and
cltd
mov
adc
add
sub
es
mov
push
enter
cld
xchg
add
xor
sub
popl
mov
test
or
mov
inc
sbb
jns
push
jle
dec
inc
shlb
or
cmp
mov
jne
xchg
add
add
push
jno
repnz
shrl
add
inc
xchg
cmp
xorl
rcrl
call
mov
scas
add
cwtl
les
ficomps
loopne
sub
vmulps
pop
les
dec
mov
sub
mov
cmpsl
adc
dec
mov
mov
imul
lret
jg
or
imul
pop
pop
push
xchg
or
and
and
rcll
adc
mov
inc
xchg
js
sbb
and
adc
cmp
push
and
inc
and
cmp
fpatan
xchg
sub
out
mov
subb
cmp
push
inc
pushf
and
pusha
pop
xchg
loop
mov
jmp
push
fdivrl
push
popa
sbb
sbb
cmpsl
mov
push
mov
flds
ret
addr16
lea
jg
iret
pop
ret
and
daa
mov
sbb
imul
adc
add
and
int
adc
ret
mov
dec
adc
adc
pop
push
sbb
dec
sahf
sub
mov
repnz
add
or
iret
popa
cmpsb
xor
add
mov
std
popa
adcb
ss
int3
icebp
lds
push
xor
push
rcrl
int
shrl
filds
sub
sub
push
sub
inc
add
add
xor
stc
fists
rcrl
adcl
ja
or
mov
mov
inc
popa
mov
inc
pop
adc
mov
imul
insl
sbb
outsb
test
dec
loope
add
xor
adc
sub
cld
add
and
add
pop
inc
pop
add
iret
xchg
add
mov
aam
adc
push
or
adc
xor
icebp
sbb
movsl
xchg
mov
scas
lds
push
insb
pop
push
or
push
dec
fs
add
mov
fwait
add
jo
add
jo
adc
sbb
jo
std
jl
sbb
and
and
mov
jecxz
push
sbb
and
xor
roll
movsb
add
push
mov
or
adcl
and
adc
dec
stos
and
inc
sub
cs
mov
adc
or
or
and
leave
and
jns
adc
jp
adc
mov
and
add
adc
xor
add
xor
push
dec
pop
mov
je
adc
add
adc
pop
or
cmp
xor
imull
inc
rcll
jmp
mov
dec
test
sbb
adc
xchg
pop
mov
mov
jno
and
call
call
mov
daa
xor
adc
inc
jo
addl
push
push
jo
insb
stos
mov
inc
cs
mov
cli
addb
insb
fcmovne
cmp
push
mov
inc
mov
ss
adc
stos
mov
adc
cmpsb
sub
mov
sub
inc
and
push
push
add
add
and
cltd
faddp
sub
push
inc
mov
mov
imul
scas
and
or
scas
cmp
mull
pop
mov
inc
push
pusha
adc
add
shrl
xor
add
push
pop
insl
popa
std
and
scas
mov
loopne
jns
aad
scas
jge
cwtl
or
outsb
and
sahf
pop
les
add
mov
daa
nop
out
jo
push
add
mov
jge
jae
mov
sbb
mov
xchg
notb
push
cmp
xchg
scas
inc
incb
je
add
test
pop
mov
pop
adc
inc
adc
mov
pushf
add
cs
es
add
or
loopne
sub
rorb
or
push
dec
rorb
daa
add
add
inc
mov
or
lea
push
add
push
adc
cmpb
inc
cmp
add
pop
adc
rcrb
mov
rorb
sub
adc
push
addb
stos
lcall
xchg
mov
and
dec
or
outsl
dec
sub
sub
inc
lcall
xor
or
enter
or
cmp
add
lcall
jae
dec
jg
cmp
mov
add
xor
shlb
mov
sub
test
mov
cmpl
and
sub
inc
xor
bound
push
push
rolb
mov
popa
add
mov
aam
mov
popa
lea
jmp
ljmp
mov
jg
or
mov
dec
bnd
loope
nop
and
lret
add
pop
add
repz
and
push
push
adc
dec
fistl
lret
popa
inc
jns
and
adcl
fldenv
loopne
push
inc
and
add
or
dec
nop
adc
mov
push
in
xor
subb
and
dec
mov
pop
inc
je
inc
nop
and
test
lcall
mov
push
adc
mull
xor
aas
xchg
popa
dec
add
mov
dec
or
std
les
pop
es
fsts
adc
mov
add
and
out
or
cmp
popf
mov
pop
push
push
ljmp
mov
xor
and
mov
add
int
es
adcb
sub
mov
dec
aam
lahf
jno
adc
push
pusha
push
inc
int
xor
adc
or
push
adcb
aas
and
test
sub
mov
stos
lcall
cltd
icebp
bound
pop
mov
pop
les
add
mov
movsb
push
cmp
dec
pop
mov
sub
test
pop
addr16
test
xchg
push
lods
das
in
mov
sub
les
sbb
mov
xor
jmp
dec
adc
sbb
push
or
and
and
push
mov
xchg
push
push
sti
mov
insb
adc
adc
mov
bound
and
xchg
push
mov
hlt
dec
sub
xor
int
and
add
push
test
or
mov
cltd
jmp
add
add
dec
and
inc
in
or
rclb
scas
push
xor
test
push
or
push
inc
mov
pop
popf
movb
pop
leave
inc
sub
inc
push
cmpsl
or
mov
stos
movsb
aam
push
dec
scas
rclb
in
xchg
dec
or
subl
add
sbbb
mov
cmp
dec
or
stc
jns
dec
adc
dec
fdivrs
lcall
pop
and
mov
jo
mov
mov
mov
sbbl
dec
imul
and
pop
lea
adc
lea
popa
sub
jo
jmp
add
movnti
enter
jne
mov
dec
or
out
call
loope
adc
test
mov
add
ja
mov
sub
les
push
nop
leave
loop
test
dec
jnp
inc
jo
xchg
adc
sbb
mov
test
add
inc
sbb
xchg
mov
decb
punpcklbw
add
sub
aad
push
subl
aas
mov
sub
mov
and
mov
sbb
adc
cmp
sahf
sub
or
jb
add
xor
daa
lcall
adc
push
mov
add
or
addb
test
js
xchg
or
push
push
sub
lret
repz
jl
cmp
push
mov
rolb
hlt
jns
mov
cwtl
or
or
pop
cld
icebp
xchg
inc
pop
mov
add
mov
nop
data16
cltd
or
pop
sbb
test
mov
cmp
mov
and
sbb
push
or
xchg
xor
cmovl
adc
es
mov
or
jo
loope
push
or
add
xchg
inc
frstor
jo
aas
dec
orb
cltd
les
adc
push
sub
push
or
push
arpl
das
push
push
dec
dec
ja
in
test
xor
add
inc
popl
sbbb
add
add
nop
out
jp
pop
inc
loop
repz
rolb
leave
sarl
mov
xchg
outsl
and
mov
int
lret
sbb
popa
push
cltd
xchg
mov
xchg
lock
sub
sub
adc
jbe
lcall
pop
push
imul
mov
outsb
adc
fidivrs
lcall
gs
sub
add
inc
daa
popa
cmp
shll
enter
pop
les
mov
rolb
sub
pop
leave
add
cmc
insb
add
or
pop
xor
test
pop
pop
or
aas
lds
std
add
and
dec
shrb
mov
mov
and
pop
mov
push
xor
adc
and
and
adc
dec
test
xchg
add
test
les
mov
add
inc
sub
mov
sub
adc
xor
jecxz
add
and
clc
adc
sbb
push
pop
orl
mov
push
in
test
push
cmp
mov
dec
sti
or
add
add
ss
andb
loopne
mov
cmpsl
dec
add
ja
and
and
cwtl
test
push
push
inc
xchg
cwtl
xchg
mov
sbbl
bound
sub
add
lods
pop
pushf
sbb
mov
dec
mov
les
inc
inc
pop
push
fsts
xchg
inc
adc
jno
mov
adcb
add
ljmp
arpl
and
mov
dec
cmpsb
add
push
adc
pop
orl
insb
inc
int3
mov
push
add
orb
or
insb
add
push
cmc
popl
mov
inc
rclb
xor
cmp
push
mov
xchg
mov
int
mov
aas
jae
mov
mov
test
add
cli
out
adc
xor
test
mov
push
or
cmp
mov
aam
xchg
push
inc
sub
adc
mov
add
movsl
mov
lret
cwtl
sub
sbb
cwtl
or
cwtl
sbb
jmp
xor
cmp
pusha
in
lahf
in
xchg
mov
lds
dec
bound
bound
andl
mov
test
lret
push
adc
adc
sub
adc
leave
add
imul
and
pushf
hlt
and
add
and
adc
sub
insl
adc
mov
jno
pusha
mov
xchg
push
int
add
jecxz
stc
jbe
mov
or
sahf
cli
push
fimuls
xorl
adc
mov
jbe
mov
push
push
test
and
inc
jecxz
dec
jmp
addl
and
sbbl
addb
jno
jno
and
and
or
inc
mov
jmp
out
nop
scas
mov
movsb
sbb
ds
xor
push
rorb
sbb
mov
dec
je
ret
das
pop
inc
jo
ja
mov
push
icebp
dec
adc
inc
xor
stos
adc
xor
mov
add
jae
les
cmpsb
cmpb
adc
rclb
nop
pop
xchg
psrld
arpl
flds
push
push
mov
add
nop
inc
mov
add
sbb
lds
or
dec
scas
sarl
add
add
push
adc
fidivrl
push
pop
rorl
stos
das
dec
mov
inc
adc
pop
sub
and
cmp
stos
jmp
dec
in
mov
inc
roll
lea
push
push
inc
jne
dec
cmpb
mov
adc
inc
mov
cmpb
add
je
add
pop
and
mov
sarb
cmp
gs
rolb
les
pusha
mov
loope
mov
add
push
mov
lret
xchg
in
mov
lods
in
lea
inc
push
inc
popa
adc
aam
jge
ret
and
roll
adc
mov
adc
dec
or
rcll
add
sub
sub
test
faddp
cmpxchg
add
fsub
inc
add
cld
adc
jno
ret
add
cmpb
sbb
and
out
inc
xor
and
scas
nop
cmp
mov
mov
add
lea
sahf
iret
xchg
ret
addb
aas
iret
dec
mov
mov
push
stos
pop
nop
mov
movsb
xchg
jne
jmp
add
lds
jp
rorb
jg
inc
push
dec
add
and
mov
dec
or
or
rorl
cmpsb
add
pusha
adc
jne
push
mov
sbb
dec
adc
jo
aas
mov
ja
dec
and
add
jns
hlt
orb
mov
push
add
jl
jo
push
inc
adc
sbb
jbe
sub
sarb
loopne
call
add
rep
mov
push
mov
sub
pop
xchg
xchg
push
fistpl
mov
ret
cmpsb
mov
jbe
and
pop
mov
push
mov
dec
mov
sbb
pop
test
fisubrs
testl
add
xchg
stos
cltd
lds
cmp
inc
cmp
frstor
sbb
mov
movsl
aad
and
fbld
and
cmp
push
mov
pop
inc
test
pop
mov
ret
add
sbb
pop
and
lcall
xchg
pusha
loope
and
das
mov
add
std
xchg
mov
push
push
shrl
lea
adcb
fwait
mov
add
dec
bound
cmp
lea
dec
mov
clc
adc
xchg
popa
cmp
dec
xor
sub
push
inc
adc
shll
add
js
lds
pop
jno
mov
xchg
mov
stc
das
sbb
loope
adc
jno
mov
shlb
mov
jo
pop
stc
mov
ljmp
test
test
loop
cli
push
add
dec
dec
shrl
jmp
in
jnp
push
or
mov
lea
test
jecxz
jmp
jnp
and
test
out
push
inc
and
dec
dec
rcrb
sub
sub
fnstenv
pop
push
inc
pop
jle
adc
or
loopne
inc
xor
adc
repz
inc
pop
add
adc
adc
push
sbb
pop
xor
lds
rorb
mov
movsl
loop
or
fs
jns
adc
pop
or
hlt
push
pusha
cmp
add
mov
cld
pop
shrl
je
push
xor
fsts
or
inc
jns
cld
fwait
jno
adc
push
ds
and
outsb
add
sbbb
out
shrb
out
jne
addr16
pop
adc
or
inc
sbb
and
cmp
aam
ret
mov
mov
xor
adc
mov
adc
test
mov
mov
and
pop
inc
xor
lahf
mov
icebp
add
lock
adc
adc
std
or
ret
dec
mov
roll
inc
mov
popa
inc
lods
ljmp
and
and
popa
mov
dec
imul
movsb
dec
out
or
jnp
sub
dec
mov
sbb
pop
lcall
aad
push
inc
shlb
imul
fisttpl
mov
dec
ds
push
dec
popf
mov
nop
lods
adc
stos
push
int3
or
insl
decb
pop
dec
insb
add
dec
mov
xor
dec
add
or
movb
inc
xchg
jo
cs
cmp
movb
scas
inc
stc
jnp
pusha
add
add
aad
mov
add
and
loop
dec
lods
xchg
push
je
or
imul
inc
stos
and
imul
leave
cmpsb
cmpsl
ret
or
push
dec
shll
cmp
lcall
rorb
addb
cltd
imul
adc
or
lea
movsl
repnz
inc
les
xor
sbb
mov
orb
clc
test
in
js
dec
inc
sub
mov
andl
lcall
add
cs
or
lahf
sub
js
daa
sbb
sti
rcr
jmp
repnz
mov
les
inc
iret
cltd
sbb
sub
shl
ret
daa
mov
jl
and
dec
ret
les
push
ret
les
test
mov
inc
jg
push
jne
movups
xchg
data16
stos
xchg
mov
xor
add
in
mov
enter
lds
test
and
xchg
mov
mov
ror
daa
xchg
ret
cwtl
gs
xchg
xor
int3
cmp
jmp
xchg
add
mov
and
addb
sub
imul
cmpsl
test
jb
dec
adc
jns
int
cmp
cmpsl
adc
add
or
add
dec
adc
addb
test
das
push
add
inc
cmp
mov
and
leave
pop
inc
dec
outsl
aam
xor
cmp
push
sub
fistl
outsl
test
add
add
flds
mov
dec
nop
xor
cmpsb
sbb
and
cli
push
sub
push
test
call
push
rclb
ret
xor
sbb
push
inc
and
mov
mov
mov
adc
test
adc
jne
add
inc
popa
inc
aad
dec
adcb
xchg
insb
bound
add
mov
adc
jg
subb
adc
mov
dec
dec
mov
test
jne
es
add
and
adc
adc
push
or
adc
idivb
add
adc
jb
dec
or
test
add
lods
xchg
xchg
test
lcall
test
adc
add
stos
jmp
add
adc
orb
jno
pop
sbb
test
add
ds
inc
sub
sub
stos
and
dec
xchg
xor
daa
stos
mov
push
adc
out
inc
sub
shlb
add
loopne
xchg
and
xchg
mov
std
push
push
and
lea
lea
mov
mov
cmp
mov
loope
push
push
cmpsl
push
mov
push
and
jno
sbb
push
push
loopne
add
fiaddl
inc
shlb
push
adc
cmp
dec
mov
fsubrs
inc
inc
and
gs
test
add
in
sar
shl
pop
loopne
add
lret
cmp
adc
sub
movsl
es
xchg
dec
cmpsb
mov
sbb
adc
push
arpl
xor
pushf
pop
mov
inc
test
cs
mov
das
add
pop
jno
add
stos
lds
lods
push
adc
and
add
push
sbb
push
popf
or
sbb
push
lret
mov
push
adc
ds
pop
pushf
and
rclb
jecxz
or
lea
push
dec
adc
movsb
push
incl
sub
shr
sub
jb
and
xchg
adc
call
in
ret
or
mov
pop
mov
dec
sarl
pop
lea
lcall
inc
leave
test
repnz
les
mov
sti
bound
es
mov
loopne
fidivl
mov
pushf
cmp
pop
mov
fsubs
jbe
int3
out
dec
jge
pushf
mov
xchg
loopne
test
ds
mov
xchg
scas
lods
sub
int
mov
loope
test
repnz
ficomps
mov
or
or
xchg
test
add
cltd
sbb
sbb
push
and
aam
lea
adc
adc
or
xlat
mov
add
aad
adcl
cwtl
ljmp
nop
xorb
cmpb
stos
shl
lods
nop
and
adc
testl
sub
cli
or
add
insl
lret
ds
mov
addr16
adc
dec
adc
xor
mov
add
mov
pushl
add
add
lret
adc
dec
cmp
and
mov
xchg
add
sbb
mov
shrl
mov
add
mov
out
jp
adc
mov
sbb
adc
les
rolb
fwait
adc
nop
and
xchg
lret
ret
cltd
data16
cmpsl
insl
loop
shrl
sub
or
int
ret
ret
dec
mov
and
adc
lea
fcmovb
orb
and
mov
adc
inc
cmpsb
je
inc
cwtl
mov
adc
xor
shll
sahf
aad
repz
mov
mov
dec
and
mov
and
lods
popf
es
push
das
mov
lea
loopne
fldt
popf
test
dec
sub
andb
pop
cld
mov
mov
xor
rolb
adcb
push
fsubs
mov
loopne
pusha
cmpb
cld
and
xlat
mov
test
gs
dec
outsl
pop
add
mov
nop
push
or
lods
and
sub
loopne
and
add
jo
add
cmp
inc
and
push
xor
inc
push
and
or
push
xchg
mov
push
fisubrs
mov
out
push
dec
sub
aaa
sub
add
and
mov
add
inc
addb
mov
add
fucom
xor
popa
pop
rorb
or
lock
add
mov
or
nop
ret
orb
add
dec
add
adc
add
ljmp
adc
push
and
movsl
dec
push
jb
leave
xchg
push
adc
mov
pop
mov
int3
in
mov
or
dec
shlb
sahf
or
or
clc
xor
popf
dec
push
add
sbb
sub
pop
dec
in
es
mulb
movsl
dec
mov
andl
adc
cmp
push
addl
icebp
sub
les
je
stc
out
xchg
addb
push
fnstcw
shrl
and
cmpsb
movsb
push
push
cwtl
push
popf
mov
pop
fildl
or
inc
add
shll
add
adc
movsl
sbb
mov
movsb
add
dec
loopne
push
mov
stc
push
push
rclb
icebp
add
test
cmp
fs
pop
and
icebp
sub
mov
and
push
add
addr16
fdivs
clc
incl
mov
or
lods
hlt
sbb
fdiv
movswl
and
sbb
jecxz
pop
inc
dec
fnstsw
sbb
outsb
jae
jnp
jg
dec
xchg
inc
int3
mov
fdivl
bound
pop
pop
call
lcall
roll
lahf
push
push
jb
or
pushf
add
movsl
jne
jno
or
cmp
mov
aad
push
cpuid
add
imul
inc
mov
xchg
fistps
shrb
dec
aas
push
push
adc
add
sub
or
xorb
cmp
xchg
cwtl
push
inc
mov
inc
das
xchg
push
jmp
dec
loopne
ret
dec
adc
gs
mov
add
ds
lods
sahf
sbb
mov
test
or
rolb
and
cmp
cmp
lahf
rclb
add
rolb
dec
iret
scas
fldl
test
push
inc
je
cmpsb
repz
or
sbb
xchg
xor
outsb
adc
pusha
jmp
sub
add
mov
ljmp
ss
vpsubsb
jno
rcl
lahf
daa
xor
lcall
sub
pop
jno
and
sti
sarl
and
mov
adcb
test
mov
xchg
add
sbb
add
jae
xchg
add
in
add
pop
mov
btr
popa
rorl
movsb
pusha
mov
pop
sub
xchg
inc
add
add
adc
std
clc
add
faddl
push
pop
xchg
mov
sbb
add
jns
add
push
add
push
lcall
sub
mov
dec
ss
ret
inc
xchg
pop
cmpsb
inc
jbe
inc
out
daa
lea
sarb
imul
mov
loope
add
fdivl
stos
rclb
jne
mov
or
gs
inc
lds
test
push
inc
xchg
mov
ret
add
inc
popa
xor
pusha
frstor
insb
lods
and
xlat
and
js
andl
dec
jecxz
push
jo
fcmovne
pop
cwtl
and
ljmp
std
insb
ljmp
add
popa
adc
test
int3
inc
rorl
ljmp
lcall
shlb
sub
xchg
mov
fsubs
jecxz
inc
mov
daa
mov
or
sub
in
data16
movsl
cmpsb
mov
int
insb
sub
les
leave
loope
rol
out
jbe
mov
movsb
jae
jle
pop
mov
mov
and
push
push
jno
es
sub
andl
inc
xchg
insb
mov
mov
mov
loope
and
inc
aam
jge
jl
cmp
loopne
cwtl
jecxz
enter
or
movsl
or
test
aaa
out
or
addb
and
adc
add
push
push
movsb
push
jmp
add
das
xor
pop
orb
rolb
adc
cmp
nop
add
mov
sbb
jb
movsb
add
inc
pusha
lcall
adc
out
mov
mov
and
add
and
and
jne
sub
jge
jns
adc
test
nop
fsubs
push
mov
popa
mov
fimull
jp
test
pop
movsb
inc
addl
outsb
fisubrl
push
das
inc
ja
xchg
dec
adc
sbbb
dec
pop
xlat
orb
add
dec
mov
movsb
jno
loopne,pn
nop
dec
xor
dec
mov
inc
mov
push
or
lods
pop
mov
sbb
and
iret
les
lret
push
arpl
pusha
inc
add
pop
popa
or
push
adc
xchg
movsb
enter
in
or
or
add
inc
add
insb
and
inc
mov
push
and
sbb
test
aad
ljmp
push
and
sar
in
adc
mov
lods
jecxz
pusha
stos
out
sub
or
pop
adc
cmp
lock
bound
adc
mov
dec
nop
pop
sbb
cli
sub
int
add
lea
aad
xchg
xlat
adc
sub
adc
or
sub
sub
sbb
mull
cmp
enter
xchg
dec
mov
insb
mov
xchg
push
addl
and
adc
lea
push
inc
mov
and
inc
mov
and
enter
push
dec
test
sbb
or
mov
loop
mov
add
dec
push
or
sbbb
dec
adc
or
aaa
and
xchg
xor
add
dec
jmp
in
adc
mov
les
inc
or
pusha
adc
push
test
mov
or
inc
sarb
adc
inc
push
popa
pop
dec
xchg
mov
out
inc
inc
test
sub
bound
fwait
dec
mov
jnp
test
ret
push
dec
adc
push
ds
and
rorl
adc
in
inc
and
sub
bound
mov
sbb
out
loopne
or
pusha
ret
adc
mov
adc
shl
loope
mov
adcb
daa
add
rorl
inc
adc
movsb
mov
or
xor
push
xlat
stos
push
xchg
sub
adc
pop
lea
add
adc
inc
jbe
inc
pop
popa
cltd
push
xchg
mov
and
adc
bound
ss
inc
adc
and
mov
add
pop
push
dec
inc
adc
stc
sub
dec
outsb
rclb
nop
sub
push
xor
and
push
test
jge
orl
nop
or
dec
add
jb
test
xchg
in
out
dec
stos
rolb
xor
sbb
adc
orl
xchg
fidivl
mov
push
rorb
jmp
sbb
adc
cmp
push
push
mov
add
fs
outsl
mov
sbb
test
enter
mov
sub
dec
lods
fcmovbe
adc
xor
mov
mov
or
adc
xchg
dec
or
adc
xchg
test
pusha
fwait
adc
or
push
push
movsb
rcll
sub
int3
xor
push
subl
mov
sbb
rcrb
xor
nop
pop
push
add
push
adc
pop
sub
lds
sti
add
or
add
outsb
inc
les
ret
idiv
push
sbb
test
inc
sub
pop
mov
mov
push
jo
pop
sub
movsb
fsts
adc
fistpll
testl
and
test
add
cltd
ljmp
movsl
push
mov
pushf
addl
push
xor
add
in
jae
out
aaa
adc
movsb
jo
add
test
ret
push
cli
inc
jl
push
test
push
mov
cmpsb
cmp
add
jecxz
fwait
roll
or
or
or
push
shll
push
fisttpll
sar
mov
mov
sbb
xor
add
lods
loopne
xor
dec
adc
lcall
stos
xchg
scas
adc
ret
or
sbbb
or
and
cs
je
push
pop
cwtl
iret
mov
in
mov
dec
insl
mov
mov
stc
mov
js
sub
adc
or
adcb
jae
pop
add
jae
dec
sbb
dec
sbb
js
fs
fimuls
cli
jns
push
ss
js
and
into
pushf
movsb
sbb
push
or
pusha
push
jecxz
test
xchg
inc
mov
add
inc
cmp
adc
mov
xchg
ds
movsb
mov
popa
inc
xor
mov
movsl
xchg
addb
repz
jge
mov
and
pop
addb
inc
sbb
sub
insl
or
add
arpl
sub
xor
dec
add
mov
inc
aaa
mov
mov
enter
les
or
cltd
shrl
icebp
iret
inc
and
add
mov
dec
and
push
sub
pop
lods
and
lcall
lock
ljmp
fiaddl
add
inc
sub
js
dec
inc
mov
cmp
cmpb
iret
test
sub
xchg
data16
clc
stos
and
push
sub
loopne
inc
pop
aaa
push
sub
cmp
lret
push
adc
xchg
dec
je
add
sub
arpl
loopne
mov
xor
jo
ret
clc
call
push
adc
sar
push
inc
mov
jp
or
addl
mov
mov
loop
or
rol
add
xor
imul
dec
les
sbb
or
jno
or
xor
mov
jl
adc
stos
add
popf
and
outsb
adc
push
lods
iret
loop
add
andl
sar
aam
cmp
inc
mov
aas
inc
dec
jae
dec
xor
push
sahf
mov
mov
add
add
nop
jo
cli
xchg
mov
jg
fadds
xchg
inc
inc
out
movsl
cmp
rorb
pop
aad
xchg
subb
hlt
inc
sbb
into
and
push
fstl
adc
scas
bound
sbb
stc
push
add
sarb
sbb
or
mov
in
or
xor
mov
inc
test
jo
sti
test
dec
dec
or
add
push
mov
es
add
mov
xor
and
ljmp
sub
inc
add
sbb
and
in
inc
lahf
cwtl
sub
lcall
mov
imul
or
pop
and
inc
insl
imul
and
mov
mov
adc
ret
push
pop
outsb
orb
imul
inc
sbb
rolb
push
push
adc
dec
jae
xlat
jg
mov
push
pushf
xor
rclb
les
in
cmp
dec
xor
js
ss
mov
push
dec
cmp
add
inc
inc
shll
test
add
and
xor
bound
fmuls
adc
fists
mov
dec
jl
add
and
xchg
mov
pop
inc
sbb
add
sbb
test
pop
xor
sbb
add
pop
imul
bound
pop
cmp
subb
and
cwtl
adc
push
test
stos
fnstenv
jns
sbbl
or
call
push
pop
mov
push
or
push
inc
sbb
inc
mov
subb
pop
jo
lea
mov
xchg
cmp
xchg
rclb
xor
test
movsb
cmp
test
xor
int3
inc
dec
xor
lds
push
xchg
leave
xor
lods
xchg
cld
outsb
add
loopne
scas
bound
jmp
mov
dec
dec
pop
mov
add
cwtl
roll
stos
inc
pop
jg
and
dec
call
inc
jge
push
popa
loope
jmp
sub
lds
push
loope
xor
dec
ss
inc
dec
dec
inc
or
inc
sub
push
outsl
and
mov
arpl
lods
addl
lods
sbbb
aaa
xor
sub
and
inc
adcb
cmp
pop
les
jmp
xor
cmp
adc
xor
enter
out
loopne
adcl
lea
adc
mov
xor
adc
mov
push
arpl
dec
pop
mov
push
add
pop
mov
inc
cmpl
jmp
fsubrs
cli
inc
mov
and
adc
call
inc
mov
mov
rolb
xor
cltd
jbe
cli
fists
insb
adc
in
inc
daa
in
pusha
adc
pop
loop
push
push
add
sbb
push
cmpsl
insb
jae
or
inc
out
lods
xchg
sbb
scas
scas
xchg
sbb
or
and
inc
leave
mov
subl
inc
add
cwtl
stos
mov
sub
shlb
lods
loope
cmp
pop
push
sbb
xor
mov
add
orl
cmp
pusha
xchg
test
xchg
bound
and
shlb
push
push
add
jno
pop
out
stos
test
sub
jae
mov
and
mov
inc
adc
inc
sbb
push
popf
mov
jns
mov
jl
lret
shrl
add
dec
jecxz
adc
mov
push
sub
fwait
pusha
or
dec
add
mov
push
fwait
or
adc
ss
lock
out
lahf
in
inc
adc
and
leave
pop
mov
adc
loop
sub
popa
cmc
sbb
mov
push
add
imul
std
or
adc
test
or
mov
xor
sub
push
cmpsl
sub
jbe
imul
adc
adc
add
mov
shll
add
inc
insl
sbb
pop
mov
mov
or
insl
and
out
push
xorb
xchg
mov
or
add
xchg
subb
icebp
mov
adc
add
in
movsl
cmp
sahf
imul
ret
add
fsubl
popa
jb
rcll
outsl
pop
scas
jns
sarb
imul
pop
jno
pusha
mov
add
int
add
orb
mov
fcoml
sbb
add
or
sub
and
and
daa
sahf
add
ret
movsb
mov
and
inc
pusha
pop
out
mov
or
fwait
dec
jb
push
add
or
les
push
fprem1
rolb
inc
xchg
push
pop
stos
outsb
mov
add
inc
push
cmpl
lcall
adc
rclb
xchg
mov
pop
or
add
dec
or
cmp
sbb
or
daa
imul
adc
lods
das
xchg
mov
xchg
add
adc
je
lea
jae
xor
cmp
clc
sub
clc
pop
imul
inc
add
add
sub
test
repnz
or
inc
data16
cmp
push
push
outsb
dec
adc
dec
add
adcb
xchg
or
roll
add
add
push
xchg
subb
mov
xchg
or
pop
adc
bound
mov
jle
stos
movb
adc
push
mov
icebp
int
push
pop
sub
add
add
jnp
mov
adc
xor
mov
inc
nop
pop
xor
dec
and
mov
mov
lret
shrl
rorb
js
mov
push
pop
push
mov
sbb
xchg
jmp
pop
adc
mov
add
xor
in
rorb
jle
hlt
xchg
mov
add
stos
test
subb
cmp
push
push
add
call
xchg
pop
add
adc
movsb
mov
fmul
jno
jbe
sub
sub
mov
sbb
andb
and
add
mov
mov
push
mov
add
jmp
insb
or
jo
xchg
add
xor
adc
push
inc
aad
cmp
addr16
dec
add
fadd
push
addl
pop
push
popf
in
dec
mov
sbb
inc
push
mov
inc
jno
cmp
nop
dec
jp
xchg
or
sub
sub
adc
rclb
les
loopne
inc
das
sub
ss
push
or
stos
aad
test
jb
daa
pop
dec
shrb
fwait
movsl
mov
jle
imul
lock
and
bound
movsl
std
mov
mov
mov
jp
inc
mov
xchg
test
out
cmp
inc
jo
xor
xchg
fwait
xor
or
sbb
fstpt
test
and
or
jns
or
cmpsl
push
add
add
cmpsl
mov
loope
and
push
cs
cmp
and
sub
and
je
enter
pop
es
gs
add
adc
test
loop
add
xchg
movsb
mov
and
rolb
or
in
pop
xchg
mov
or
cmp
xor
xor
ljmp
repz
mov
adc
sub
int
arpl
in
or
ljmp
jno
movsl
icebp
inc
push
add
xchg
fdivrp
xchg
roll
scas
inc
pop
xor
mov
or
dec
adc
enter
testl
cmpsl
xchg
shl
cmc
cmp
imul
cmp
adc
js
push
and
jno
sbb
cmpsb
add
add
mov
add
push
loopne
repz
dec
test
adc
loope
or
mov
add
addb
dec
sbb
mov
insl
outsb
fcmovb
adc
outsb
imul
mov
lods
push
xor
jmp
or
test
addb
call
mov
mov
fmull
je
or
xchg
dec
xor
repnz
pusha
xchg
and
and
add
sbb
sub
test
clc
xchg
ret
or
addl
inc
or
testb
out
shll
out
xchg
and
stos
or
loop
pusha
int3
add
xchg
add
or
sahf
rol
push
push
incb
lahf
sub
xor
adc
pop
push
sub
or
xor
mov
inc
ret
call
push
imul
dec
adc
add
lcall
test
inc
inc
aad
mov
rcll
ret
push
jns
adc
jmp
or
mov
sbb
fisttpll
inc
add
and
mov
sub
les
or
inc
xchg
dec
xchg
jp
add
mov
pop
inc
sub
sti
sbb
inc
and
pop
mov
add
mov
xchg
adc
rcrb
or
or
roll
ja
xchg
inc
scas
or
adc
xchg
mov
hlt
test
push
inc
xor
inc
add
add
outsb
mov
cmpsl
rol
scas
or
test
add
ljmp
push
or
aam
mov
icebp
push
std
push
aam
inc
pushf
push
fcmovnb
adc
jge
inc
imul
push
inc
sub
mov
dec
and
or
push
xor
orb
addl
and
xor
not
cmp
and
leave
push
add
adc
mov
pusha
inc
jns
xchg
or
ficomps
mov
in
cmpsb
orb
out
adc
cmc
repnz
push
add
push
cmc
adc
mov
xor
jns
out
inc
mov
ja
bound
mov
add
adc
jecxz
mov
mov
test
mov
xchg
nop
sbb
add
and
push
daa
and
add
pop
inc
xchg
xor
inc
mov
cmpsl
jb
push
decl
rolb
call
add
out
aad
test
fldenv
add
mov
cmp
inc
or
gs
add
sbb
cmc
jb
out
jnp
insl
dec
orl
add
ret
lret
mov
mov
ret
mov
add
popa
xchg
out
add
push
ret
subb
sbb
nop
repz
rcrl
inc
lahf
inc
xchg
push
mov
cmp
push
mov
and
outsb
jno
daa
sbb
and
inc
and
rolb
lea
sub
mov
aad
push
pop
ret
inc
insb
inc
and
xchg
push
in
leave
jecxz
pop
mov
mov
ret
lret
add
and
shlb
sbb
push
and
or
sbb
add
int
les
sarb
adc
xchg
movsb
loopne
popl
popa
sub
repz
test
xor
into
push
push
dec
push
notl
pop
cmp
subl
testb
and
mov
mov
xor
pushf
push
stc
push
dec
mov
std
push
xchg
mov
imul
jge
cmpl
and
and
inc
add
push
fadd
push
add
jp
xlat
or
pop
lcall
dec
jmp
and
ret
dec
lcall
dec
or
jns
and
add
inc
jmp
insl
xor
add
and
push
lea
xchg
ficomps
jae
push
loop
and
or
or
cmc
or
sub
mov
mov
ljmp
and
pop
dec
fstpl
pop
inc
and
mov
pop
test
dec
hlt
mov
shll
lock
push
lcall
mov
pop
adc
jno
movsb
orb
pop
add
xchg
mov
xor
add
lcall
aas
call
pop
outsb
xchg
or
test
pop
mov
inc
push
dec
out
mov
xchg
and
add
mov
adc
and
fdivrs
in
add
imul
cmp
ds
sbb
nop
dec
inc
cmp
stos
inc
movsb
nop
inc
add
sbb
imul
push
xlat
adc
sbb
inc
adc
ret
inc
sub
orl
push
jecxz
js
cmp
and
loop,pn
test
dec
cmpl
push
sub
call
sub
loope
cs
dec
jmp
pop
fmull
jge
xor
push
aam
jno
fcomi
outsl
add
cs
stos
mull
add
jbe
sub
addb
xorb
enter
arpl
bound
out
mov
inc
pushf
jb
stos
xor
xor
adc
xlat
mov
xchg
pop
mov
push
loopne
jae
jo
cmpl
shll
mov
ss
add
xchg
and
xor
leave
sbb
mov
repz
pop
inc
or
xor
adc
dec
stos
ret
ret
and
lds
mov
fwait
adc
pop
in
cmpsb
mov
scas
add
negl
inc
test
xor
loop
sub
and
pop
movsl
cmpsb
adc
sbb
fsubrs
pusha
fiadds
sbb
in
mov
inc
std
sti
mov
push
fldcw
inc
movsl
xchg
lcall
jbe
inc
mov
xchg
rclb
push
faddl
insb
mov
fcompl
xchg
stos
xchg
fs
imul
mov
or
sbbl
repnz
insb
push
sub
ret
mov
roll
xchg
insl
pop
adc
mov
sbb
es
es
adc
mov
mov
movsl
add
inc
add
mov
in
or
out
xor
aam
add
sahf
inc
mov
or
mov
adc
cmp
and
shlb
push
popa
cmp
lods
inc
push
clc
mov
sbbb
incl
jo
or
sub
movsb
mov
movsl
sar
push
mov
mov
inc
or
iret
mov
sub
ret
and
or
push
push
add
rclb
test
shr
xchg
mov
xor
mov
jmp
je
sbb
lret
jo
in
push
mov
add
cltd
xor
xchg
cmp
add
add
test
adc
adc
or
and
or
mov
push
aas
in
push
dec
aam
es
and
add
xchg
sbb
inc
sub
das
mov
sub
movsl
sbb
xlat
loopne
clc
push
and
adc
xor
add
and
imul
add
push
add
mov
xor
inc
aaa
fs
mov
dec
and
sub
push
and
out
and
and
inc
inc
dec
aad
fs
stos
xlat
fwait
pop
imul
mov
add
jae
and
pop
pop
cmpsb
xor
mov
fisttps
in
lds
mov
nop
push
add
dec
rorl
cmp
test
out
inc
mov
outsb
xchg
mov
add
mov
ljmp
pop
push
sbb
inc
and
xchg
out
cmpsb
loopne
dec
enter
pop
jae
push
pop
lds
xor
jp
adcl
add
dec
ss
daa
cmp
push
push
inc
jmp
pop
xchg
dec
pop
popa
jns
movaps
stos
mov
xchg
mov
xor
jns
cmp
in
push
push
mov
push
adc
adc
sbb
outsl
cmp
push
add
cmp
and
sti
test
jmp
movsb
test
mov
xor
mov
push
or
imul
adc
mov
movsl
scas
aaa
add
add
icebp
inc
lea
xor
dec
add
lcall
mov
outsb
and
inc
andl
lret
repnz
decb
test
aam
jno
test
mov
adc
insb
lea
sub
popf
inc
mov
and
add
push
inc
fisttpll
les
fisttps
popa
pop
xor
xor
and
sbb
cmp
pop
shrb
rcll
dec
inc
sbb
mov
outsl
test
mov
inc
int
adc
mov
add
mov
add
and
cmpsb
test
add
sbb
add
inc
fldenv
dec
bound
mov
test
add
sbb
push
push
dec
subl
movsl
pop
mov
jo
loopne
lock
fs
mov
sbb
fidivrl
and
adc
mov
fs
inc
add
mov
add
iret
shll
or
leave
clc
inc
xor
jg
adcb
in
loope
mov
cltd
pop
xchg
xlat
add
cmp
loope
lcall
les
push
mov
dec
xor
fadd
into
dec
push
mov
popf
flds
cmp
adc
and
add
or
xor
gs
and
sub
insb
add
mov
jmp
push
movsl
dec
cmp
ja
push
xor
sbb
bound
adc
pushf
mov
insl
rolb
cmp
and
or
add
stos
rclb
dec
sbbl
pushf
push
sar
push
decl
pop
pop
iret
ljmp
add
out
push
inc
mov
nop
add
cmc
das
lret
or
xor
jmp
jmp
mov
cmpl
jbe
movl
adc
or
pusha
fisttpll
fsubrs
cmp
addl
cmpsl
cmp
les
mov
loop
imul
add
xchg
and
or
inc
and
mov
sbb
sub
adc
push
or
add
dec
roll
insb
orb
sub
xchg
dec
sbb
and
xchg
and
stos
add
inc
sub
gs
subl
add
push
jmp
cmp
mov
andl
inc
movsl
mov
push
repz
xlat
inc
sub
sub
test
nop
xchg
sub
xorb
mov
mov
sbb
dec
sahf
xchg
dec
pusha
std
movsb
push
or
faddl
ret
sub
fwait
add
add
sub
ds
and
push
sub
sbb
pusha
add
inc
or
out
push
cld
push
xor
imul
mov
es
inc
movb
add
push
add
add
repz
pop
pop
insb
stos
aad
push
ret
inc
xor
adc
dec
cltd
xchg
mov
jle
bound
jne
les
sub
popa
dec
mov
outsb
cwtl
mov
add
sbb
mov
add
add
xor
mov
and
push
adc
mov
xor
jne
or
dec
sahf
in
es
mov
dec
sbb
jb
or
add
or
or
xor
adc
stc
fwait
shll
mov
jmp
push
inc
sbbb
stos
jo
ret
sub
mov
xchg
das
cmp
xchg
dec
add
cmpb
stos
dec
push
sti
mov
cld
aad
addb
add
jge
lcall
popf
sbb
push
push
test
ret
leave
xchg
mov
jle
stos
stos
nop
jle
rclb
mov
dec
sarb
je
nop
mov
ljmp
cmp
jne
subb
jmp
push
add
aam
mov
or
enter
shll
jmp
dec
sbb
sti
sbb
push
or
jge
rolb
inc
pop
sti
mov
or
mov
dec
mov
or
adcb
rol
popa
mov
scas
push
popa
xchg
cld
add
cmp
aad
mov
outsl
mov
int
cmpsb
popf
test
jne
push
push
mov
or
test
push
adcl
mov
add
inc
mov
xchg
mov
movsl
inc
sbb
or
mov
pslld
push
addb
push
cmp
iret
movsb
push
sbb
inc
adc
xor
testl
xchg
jne
push
les
test
push
sarl
mov
sbb
daa
jge
lret
xrelease
xchg
rclb
push
test
inc
iret
dec
inc
inc
inc
push
lcall
push
ret
shrb
xor
cmpsl
fwait
push
xchg
subl
call
fs
add
adc
inc
cmpsl
sub
jb
nop
rclb
mov
int
test
xchg
or
pushf
sub
mov
fmull
cld
and
arpl
jno
popa
add
and
push
cmpsb
inc
test
mov
sbbb
or
in
mov
push
push
shrb
rcrb
xor
shrb
gs
add
popf
test
adc
jbe
push
sbb
push
movsl
sbb
jb
adc
lea
sub
mov
pusha
mov
mov
pop
sahf
mov
push
sahf
mov
adc
inc
push
adc
pop
cli
sub
adc
shlb
aas
inc
arpl
or
pop
test
mov
xor
pop
out
ret
jmp
callw
das
push
cmovae
sarl
shrb
push
push
scas
mov
test
xchg
mov
add
daa
in
xchg
adc
cmpsb
add
loop
add
add
xchg
mov
and
dec
cmp
shrb
sti
dec
adc
pop
das
adc
stc
push
dec
out
xorb
cs
shlb
mov
jg
or
mov
scas
xchg
es
dec
add
shll
or
ret
dec
adc
int
outsl
xchg
stos
mov
es
pop
add
inc
push
out
stc
movsl
and
out
cmp
lods
test
lods
mov
mov
sub
push
test
dec
jmp
dec
seta
rolb
sub
stos
mov
dec
testb
ds
add
test
dec
mov
test
xor
mov
clc
inc
add
add
aam
adc
xchg
insl
push
xchg
mov
add
mov
mov
sbb
dec
add
mov
in
mov
loopne,pn
xchg
mov
mov
cmp
dec
lret
roll
mov
inc
push
add
xor
adcb
movsl
fcmovnbe
push
xchg
jae
pop
movsb
jno
or
adc
sar
aam
inc
pop
pop
insl
inc
xor
push
push
sbb
jbe
adc
and
inc
sbb
inc
push
rolb
iret
int
lcall
rolb
cltd
mov
jns
add
call
mov
mov
es
mov
sbb
mov
mov
cld
mov
push
sub
fldl
jb
out
orl
jo
ljmp
jnp
shlb
sahf
mov
ret
or
inc
insl
bound
ss
sub
call
and
mov
xor
mov
inc
and
sub
or
ret
ds
adc
inc
cli
push
or
push
and
xor
shrl
add
xor
and
out
shlb
pop
add
jge
or
sub
test
inc
xchg
add
subl
loopne
add
adc
enter
adcl
mov
inc
les
dec
push
stc
aam
shrb
sbb
int
inc
cmp
jecxz
shlb
aaa
add
mov
mov
xchg
jae
or
mov
sub
push
jo
sbb
dec
popf
pop
cld
fisubrs
and
adcb
inc
ret
add
movsb
sbbb
add
or
cmp
dec
pusha
test
add
popf
mov
mov
push
push
add
outsl
fcoml
and
test
int
imul
js
mov
mov
push
dec
repz
ret
mov
add
stos
push
ret
sbb
xchg
cltd
jno
repnz
adc
mov
fs
lcall
test
mov
loope
xchg
pop
push
adc
add
or
push
cwtl
adc
or
bound
inc
adc
shlb
inc
adc
and
fs
movsl
dec
push
mov
aas
sub
add
popf
sbb
jp
loopne
dec
pop
add
stos
push
inc
out
mov
dec
jg
sub
cmp
or
jo
in
xchg
loope
jmp
or
bound
movb
push
lea
pop
cld
mov
cmpsb
pushf
addb
orl
fidivrs
or
push
aam
lock
rcl
je
fstl
sub
leave
or
dec
add
movsb
fildl
cmp
sbb
je
inc
or
shrl
adc
add
add
rclb
mov
rorb
in
call
add
sbb
push
in
pushf
mov
mov
into
add
adc
xor
and
push
or
out
add
xor
cmc
jo
imul
push
mov
add
mov
fildl
mov
or
cmc
ja
add
xor
popa
push
aaa
xor
in
and
mov
je
in
rorb
adc
mov
sub
add
bound
movsb
jle
nop
push
or
ss
aaa
subb
dec
jne
mov
adc
dec
sbb
std
pop
push
fistl
jns
enter
jo
adc
inc
jo
add
or
cmpsl
nop
icebp
sar
in
adc
out
dec
cwtl
mov
int
dec
out
jo
loopne
mov
adc
xchg
dec
add
xchg
fnstcw
lahf
addr16
sub
cmp
adc
sahf
inc
add
add
add
push
insl
xchg
pusha
pusha
stos
jg
leave
xchg
add
or
loop
sbb
or
adc
mov
popa
das
push
add
adc
out
xlat
push
popa
dec
and
loope
add
add
fwait
push
bound
lret
inc
test
push
adc
pcmpgtw
test
sub
push
adc
xorb
dec
adc
cmp
jecxz
push
cmovne
or
lock
mov
xchg
dec
or
xor
mov
dec
clc
pop
mov
mov
and
add
aaa
sbb
sarl
lcall
inc
pop
jo
inc
jl
scas
push
xor
mov
cmp
add
push
mov
mov
xor
push
fiadds
xor
popa
cmp
push
test
lea
adc
les
mov
mov
mov
add
movsl
sub
call
pop
inc
adc
pop
inc
pop
jno
xchg
sub
jge
adc
xchg
ret
int
push
mov
pop
or
loopne
gs
roll
insl
les
jmp
inc
xchg
and
add
arpl
mov
int
add
cwtl
clc
subb
push
aam
fsts
test
xchg
xchg
inc
aas
mov
adc
xor
leave
imul
jb
test
add
cmp
popf
ret
push
setl
and
pushfw
inc
jge
jne
lret
movsl
out
in
rol
nop
push
xchg
adc
or
mov
test
andl
dec
xor
adc
pusha
cs
pop
lret
or
add
lock
adc
add
push
and
mov
fs
sbb
pop
pop
inc
add
xchg
push
or
xor
lea
cltd
sbb
and
and
inc
xor
test
adc
insb
lret
mov
gs
les
push
shrl
pop
cld
mov
add
mov
add
push
scas
push
and
cmpsb
mov
and
inc
push
add
lock
inc
mov
add
and
add
mov
xor
pop
push
add
iret
jo
or
add
int
mov
stos
jns
jmp
sub
mov
dec
adc
leave
inc
cwtl
pop
test
cmp
aam
test
and
mov
sub
ds
xchg
cmpsl
or
cltd
clc
pop
shrl
andb
push
cltd
cmp
dec
lds
add
sbb
mov
sbbl
lcall
mov
in
nop
fdivrs
sbb
sub
or
out
and
add
pop
daa
jnp
fs
test
daa
mov
adc
mov
dec
and
orb
lea
pop
pop
add
inc
push
dec
rclb
xor
fs
cmp
jmp
movsb
cwtl
pop
sub
add
dec
inc
or
adc
int
push
cwtl
mov
xor
mov
mov
inc
xchg
and
inc
inc
pop
sbb
loopne
iret
adc
test
shll
dec
leave
cmp
jae
add
inc
and
mov
adc
cmc
jns
or
rolb
enter
push
ja
lcall
lock
or
xor
fistpl
mov
and
pop
iret
loop
add
push
adc
sahf
add
daa
repz
pusha
and
pop
out
int
hlt
add
xchg
push
imul
add
xchg
or
mov
add
lcall
subl
sti
jl
stos
sub
xchg
push
icebp
pop
loop
int3
mov
btc
adc
or
add
sub
xchg
mov
mov
jno
and
dec
mov
lea
xor
adc
add
pop
aad
adc
or
mov
add
test
or
or
add
ds
add
lcall
les
subl
jle
add
dec
cmc
ret
loopne
aaa
jo
pop
adc
jp
add
xchg
jl
dec
sub
xchg
enter
mov
scas
shl
sbb
jecxz
je
pusha
sbb
daa
sub
xor
out
jae
dec
adcl
xor
xchg
cmova
test
push
add
stc
push
push
push
adc
stc
xorl
bound
or
loope
ret
add
sub
js
ds
adcl
outsl
ret
or
and
mov
test
notl
les
push
rolb
sbb
and
mov
or
leave
fcmovnb
add
sub
xchg
mov
les
push
mov
mov
pop
das
aam
sbbb
sub
pusha
add
int
or
sbb
and
enter
push
bound
and
push
xchg
mov
loope
xchg
add
add
add
lret
or
nop
movsl
mov
push
mov
mov
mov
dec
jmp
adc
or
lock
xchg
inc
sub
or
mov
sti
or
rclb
push
or
icebp
faddl
add
add
repnz
add
pop
add
adc
mov
sub
in
or
or
in
shll
dec
fcmove
movsl
sbb
scas
jle
xchg
cs
mov
xchg
cmp
loopne
push
enter
adc
cmpsb
adcb
out
lcall
push
or
inc
or
xchg
xor
popa
adcb
gs
pop
inc
cmp
sbb
push
cmc
pop
rorb
sbb
adc
and
and
push
or
lea
andb
sahf
dec
mov
inc
rolb
std
call
xor
adc
inc
and
repz
bound
sub
push
flds
ds
xorl
hlt
adcb
ja
fiaddl
rcrb
push
sub
cmp
add
loope
jbe
pop
lods
add
sub
int3
pusha
adcb
pop
dec
getsec
jno
cmp
push
jb
dec
and
mov
adc
ss
jg
dec
mov
outsl
dec
movsb
mov
or
movsl
mov
xor
jne
add
xor
push
push
nop
fwait
or
int
sbb
movsb
enter
xchg
push
adc
sahf
out
test
and
sbb
push
popl
sbb
push
pop
adc
shll
pop
mov
je
xor
mov
adc
test
mov
nop
mov
add
iret
pop
popa
push
xor
or
add
mov
sarb
ja
test
xchg
fwait
iret
push
nop
out
jmp
jl
mov
movsb
mov
pop
das
add
sub
or
fisttps
nop
xor
adc
mov
in
mov
test
shlb
je
adcb
cmc
imul
dec
xchg
mov
shrb
icebp
pop
mov
enter
stc
lods
and
or
lahf
and
mov
pop
lea
test
fistps
pop
add
inc
test
das
cltd
mov
fcmovb
pop
js
add
inc
cli
inc
mov
sar
add
push
jae
movsl
sub
inc
jecxz
dec
mov
inc
stos
inc
test
push
push
sub
in
cmp
add
adc
push
adc
add
and
dec
add
add
mov
sub
adc
inc
pop
andl
xchg
adc
in
add
shll
push
mov
cmp
fs
push
popf
addb
test
add
adc
loopne
and
sub
dec
lds
cs
inc
inc
sbb
adc
jmp
movsb
and
push
jne
syscall
loopne
test
or
in
push
add
add
sbb
rorb
mov
push
add
addb
sub
mov
test
jl
pop
dec
test
sub
mov
adc
adc
jb
mov
cmpsl
pop
loope
jecxz
xor
push
hlt
sub
sub
cmpsb
and
sub
add
lret
leave
xchg
push
movsl
lahf
xchg
clc
mov
je
and
les
rclb
dec
cmp
lret
mov
mov
jmp
jb
je
stc
in
mov
dec
cld
push
dec
mov
call
dec
loopne
lret
jp
dec
and
inc
mov
and
call
inc
roll
data16
jmp
mov
loop
mov
mov
addb
xorl
loop
nop
inc
push
dec
dec
clc
adc
push
mov
mov
scas
sub
sbb
sbb
les
xor
dec
add
pop
aam
dec
addb
pop
dec
add
orw
inc
xchg
pop
aad
movsl
pop
dec
sarl
addr16
xchg
push
or
add
sbb
shr
inc
aam
ret
inc
sub
add
jno
jmp
lahf
or
data16
nop
and
push
sbbb
mov
lea
shrl
leave
fadds
add
test
shrb
fwait
mov
pop
mov
dec
or
popf
push
dec
pop
add
adc
inc
sbb
mov
inc
push
sub
je
sbb
xlat
gs
test
sub
xlat
cwtl
das
outsb
ret
push
js
jge
or
fiaddl
dec
sub
push
outsl
push
xchg
and
lahf
push
sbb
mov
ljmp
mov
rolb
mov
shlb
xor
dec
pop
adc
sub
dec
or
cmp
das
jmp
adc
or
or
xor
mov
rcll
or
dec
and
inc
lds
sub
inc
add
andl
into
xchg
notb
xchg
mov
inc
mull
add
or
add
pop
bound
lcall
or
mov
add
add
mov
js
rclb
jns
test
les
cmc
and
pop
pop
adc
or
pop
jo
inc
call
adc
push
repnz
jbe
test
jle
aaa
leave
and
sbb
addl
pop
or
test
outsb
jnp
add
lcall
or
sub
rolb
pop
add
add
xor
cmpsl
dec
dec
scas
adc
cmp
xor
xor
shlb
movsb
addb
push
stos
lods
pop
inc
lcall
or
xor
xor
sbb
push
movb
xor
jmp
pop
in
daa
mov
loop
arpl
lea
mov
cmp
and
add
or
in
je
icebp
roll
std
imul
push
or
pop
sbb
lcall
adc
mov
pop
sbb
cmp
outsb
inc
inc
inc
push
cmp
aas
add
pop
push
add
push
xor
add
or
xor
adc
movsl
and
pop
xchg
cmpsb
sbb
les
insb
mov
adc
add
jnp
cwtl
sbb
push
push
add
mov
mov
inc
xor
fldcw
add
lods
pushf
adc
imul
jns
cwtl
push
inc
movsl
xchg
cmp
and
or
mov
and
and
movsl
push
stos
es
xchg
xor
mov
adcb
inc
enter
aaa
test
sbb
dec
mov
xchg
and
aas
adc
push
mov
stc
clc
and
icebp
xchg
add
lds
mov
addl
push
daa
dec
icebp
pop
push
pop
mov
les
mov
xchg
test
xchg
int3
test
fadds
pop
movsl
and
push
arpl
xor
sbb
leave
mov
lahf
jle
push
jbe
fldcw
lcall
cmpsb
or
dec
imul
dec
jecxz
mov
jo
loopne
enter
cmc
sahf
dec
mov
out
cs
jb
das
inc
or
hlt
and
and
stos
pop
and
mov
push
or
mov
sahf
sub
mov
push
sbbl
stos
push
adc
add
imul
adc
int
add
sub
mov
xor
sbbb
push
decl
sti
dec
and
rol
push
xchg
imul
and
push
fiaddl
or
mov
inc
push
jno
pop
pop
insb
imul
add
mov
cwtl
mov
dec
movsb
sbb
shrb
fwait
arpl
lret
shlb
pop
loop
cmp
add
or
stos
daa
fbld
dec
shlb
or
adc
add
add
arpl
or
cmp
test
shrl
scas
sbb
mov
and
leave
mov
test
js
or
cmp
add
cmp
inc
jbe
xchg
sbb
es
cs
add
inc
or
push
and
lock
inc
mov
lret
xchg
and
aad
pop
adcl
or
xchg
ja
and
sub
or
nop
loope
stos
mov
cmp
and
mov
or
ret
mov
adc
bound
insl
push
sbb
xchg
inc
push
vprotw
push
cmp
add
rol
xor
lret
aam
mov
aad
add
mull
jecxz
sbb
popf
nop
inc
sbb
sbb
iret
int3
movsl
dec
enter
enter
xorb
dec
cmp
loop
add
sub
add
iret
rorb
dec
mov
cmp
jmp
fwait
repz
sbb
add
pushl
iret
mov
or
fisubs
mov
lods
xor
add
sub
dec
mov
dec
and
ss
add
out
push
ltr
cwtl
std
lock
cs
dec
or
test
or
dec
and
inc
mov
adc
loop
inc
insl
push
popf
cmpl
shrb
push
mov
lds
movsb
inc
sub
pop
dec
add
shlb
sbb
inc
movb
dec
add
push
adc
stc
mov
or
sub
push
cmp
fisubrs
insl
int
xor
repz
cmp
add
add
jge
aam
push
pop
add
sbb
xlat
mov
lods
mov
imul
push
sub
and
dec
popl
adc
orb
and
test
outsb
push
pop
dec
mov
and
jmp
mov
inc
cmp
sub
scas
and
mov
adc
gs
and
cmc
or
cmp
imul
xlat
jmp
cmp
push
dec
jecxz
fmuls
add
inc
test
pop
js
lcall
mov
lea
xor
add
aad
and
adc
sub
outsl
sub
pusha
or
lcall
fstl
les
fsubrs
jle
dec
pop
xor
xor
stos
mov
sub
scas
lea
gs
ret
fsts
pop
push
pop
aad
push
push
ret
pop
xor
push
xchg
mov
fimull
xorl
filds
mov
cmp
add
iret
mov
fwait
dec
andb
adc
sbb
xor
dec
push
in
stos
cmpsl
add
or
mov
sbb
xchg
cmp
pop
enter
xor
sub
je
inc
inc
jns
xchg
dec
ret
out
adc
push
push
mov
out
and
push
cmp
mov
popa
pop
lahf
test
xchg
mov
jp
xor
dec
push
sahf
mov
test
xchg
xchg
push
dec
add
adc
pop
fcmovnu
in
pushf
shrb
mov
outsb
jb
mov
dec
inc
fs
cltd
push
rcrl
xor
inc
pop
jno
pop
or
mov
mov
pusha
pushf
mov
and
nop
inc
adc
xchg
mov
data16
sub
push
pop
imul
inc
add
xor
mov
nop
out
stos
ret
xchg
sub
leave
pop
sub
inc
addl
push
dec
inc
adc
or
pop
pushf
ret
andl
shrb
xchg
pop
addb
stos
mov
pop
rolb
movb
inc
test
ret
jecxz
xor
sbb
test
push
lds
daa
imul
ljmp
mov
dec
test
xor
dec
mov
pop
nop
ret
addl
xor
add
jmp
sbb
add
incl
sub
rcrb
or
xor
frstor
cmp
data16
mov
and
bound
lds
mov
adc
out
or
inc
and
dec
adc
fs
fs
sbb
mov
xchg
idivb
movsl
test
xor
aam
aam
cmp
push
outsl
xor
js
sub
add
jg
adc
movsb
gs
adc
add
or
imul
or
xor
repnz
or
popa
movsb
adc
iret
adcb
mov
inc
and
sbb
mov
sub
xchg
push
sbb
mov
inc
and
sbbb
dec
int3
push
dec
enter
or
rcrl
bound
hlt
cli
inc
sub
and
add
das
xchg
mov
pop
cmc
roll
repnz
adc
lcall
pop
inc
adc
adc
pushf
mov
add
inc
inc
cmp
lods
lods
sbb
mov
fadd
xor
sti
jecxz
inc
cmp
push
mov
push
test
sbb
cmp
xor
adc
es
cmpsb
lock
add
test
mov
lret
pushf
push
pop
pop
cmpsb
or
adc
mov
or
xchg
dec
xor
mov
inc
adc
cmp
pop
adc
jns
bound
rolb
adc
int
test
sbb
inc
lods
xlat
pop
and
sbb
bound
mov
sub
sub
mov
out
add
imul
push
fcoms
xor
add
xchg
add
fisubl
cmp
test
push
aam
inc
popf
lcall
add
sub
cwtl
aaa
arpl
dec
add
aaa
mov
mov
je
jae
fwait
icebp
jno
aaa
inc
ljmp
les
and
adc
xchg
mov
mov
or
mov
or
sub
jo
fnstcw
mov
dec
dec
xor
aaa
add
xor
push
xor
hlt
fsubrs
dec
and
mov
lods
adc
or
stos
orl
loop
push
inc
and
mov
inc
andl
and
nop
mov
adc
sbb
or
and
sub
cmpl
push
mov
pop
lds
mov
jae
rcl
dec
inc
sub
add
cltd
jne
push
cmp
icebp
outsl
xchg
sarb
enter
cmp
loope
pusha
xchg
test
mov
ljmp
xchg
and
adc
loopne
push
lcall
cs
inc
add
mov
out
mov
lret
mov
pop
cmp
mov
jb
std
in
subb
dec
pushf
ret
xor
jo
scas
cwtl
icebp
jb
xorl
popa
dec
push
jnp
adc
and
movb
inc
inc
fldl
leave
jo,pt
repz
add
scas
data16
sbb
xchg
push
int
and
add
sub
inc
aaa
loop
sub
lea
xchg
lods
add
inc
dec
fsts
add
sub
add
test
es
xor
pop
sbb
push
and
pop
adc
dec
mov
mov
addl
adc
mov
xchg
adc
push
andb
insb
jecxz
orb
add
divl
push
movsl
or
cmp
lret
pusha
xor
and
pop
gs
jae
jmp
inc
insl
aas
cmc
cmpsb
add
ja
aad
cmp
inc
jns
mov
sub
js
jae
pop
adc
mov
sub
mov
pop
cltd
loop
xor
adc
mov
sbb
pmuludq
xchg
pushf
ja
aaa
add
push
sarb
inc
into
xor
pop
or
clc
orb
xchg
fcompl
and
xchg
pop
nop
push
xor
or
fsubrs
stc
cmp
lods
xchg
jne
add
adc
add
icebp
ret
inc
fdiv
mov
ret
loopne
add
sbb
jne
xor
sbb
push
or
sbb
xor
addb
js
push
jno
dec
fisttpl
mov
or
fmuls
inc
pusha
imul
pusha
out
add
add
cwtl
mov
or
in
sub
adc
and
adc
outsb
imull
push
sbb
shl
xchg
cmpsb
push
call
push
andl
ror
arpl
test
add
sti
inc
cmpsl
cmc
dec
scas
and
loop
xchg
pushf
xor
push
sub
loopne
outsb
ss
push
stos
xor
dec
inc
stos
mov
ret
pop
inc
shlb
mov
jno
mov
xchg
jcxz
lret
lea
add
add
mov
imul
cmp
frstor
pop
movb
hlt
je
nop
push
dec
dec
aam
mov
pop
mov
xor
ret
dec
adc
jne
xchg
fimull
inc
dec
aad
sub
xchg
sbb
jne
inc
pop
dec
adc
sarl
ror
push
in
pop
inc
cmp
test
dec
push
push
roll
lea
add
sbb
adcl
add
adc
adcb
or
or
mov
aas
push
call
sbb
icebp
sbb
or
jg
xor
sub
jne
insb
or
add
pop
add
call
mov
inc
pop
dec
add
jl
jp
pop
and
test
test
dec
jae
test
fucomp
pop
fs
push
xor
movsl
mov
out
mov
push
xor
call
adc
cmpsb
push
xor
cli
mov
inc
sub
insb
adc
add
stos
aaa
xor
push
dec
push
sbb
jle
mov
stos
nop
sbb
in
push
and
add
rclb
adc
sub
mov
adc
or
xchg
push
in
aam
pop
inc
out
inc
mov
xchg
xor
xor
or
das
mov
add
and
and
mov
fbld
and
test
ror
into
daa
xchg
pop
or
sub
or
fwait
or
in
and
loopne
sbb
movsl
xlat
inc
cmp
and
inc
lock
add
inc
pop
push
xor
test
cwtl
add
fwait
sahf
mov
lcall
insl
jg
add
sub
icebp
das
ret
or
les
pusha
insb
jle
xchg
inc
int3
lcall
fisubs
cmc
xchg
lods
aam
sub
xorl
mov
mov
in
cmp
fwait
xchg
addr16
mov
sbb
scas
ljmp
push
pop
add
mov
inc
jecxz
nop
mov
xor
inc
stc
mov
inc
sbb
inc
repz
andl
cmp
cmpsb
andl
or
inc
roll
jnp
fcomps
pop
mov
mov
mov
vmovdqa
inc
xor
cmpsl
cmp
sbb
add
pop
mov
or
jbe
push
call
sub
imul
cmp
xchg
cltd
movb
test
sbb
xchg
rolb
push
sub
jecxz
mov
int
push
imul
cli
mov
push
cwtl
rol
mov
mov
or
add
add
dec
push
sub
adcl
and
cmpl
mov
add
inc
or
or
xchg
push
mov
xchg
adc
lret
icebp
push
test
dec
jle
aam
or
movsb
add
sub
movsb
repz
inc
or
xor
xor
adc
and
cmpl
and
adc
pop
mov
sub
bound
sbb
hlt
out
icebp
jae
test
add
xor
push
adc
les
mov
cltd
pusha
rcrb
adc
inc
sub
in
xor
inc
fisubrl
movsb
and
bound
lods
sub
adc
imul
adc
fwait
jb
adc
inc
cmc
jecxz
xor
in
gs
inc
adc
sub
call
jnp
sahf
mov
push
inc
mov
movsl
jno
cmp
mov
push
add
jno
xor
dec
cmp
or
mov
nop
je
xchg
test
jbe
test
movsl
push
inc
adc
add
push
mov
pop
jne
and
rorb
popa
adc
xchg
mov
add
shlb
adc
jg
je
shl
dec
inc
inc
add
lods
xor
sbbb
or
fists
xor
insl
or
lahf
jbe
push
into
adc
adc
mov
fisttpl
je
scas
shrb
in
cmp
dec
adc
testl
lods
mov
and
mov
decb
enter
mov
pushl
xchg
aad
in
test
inc
or
aas
loop
aaa
int
push
dec
sbb
iret
add
xchg
lods
roll
add
jnp
arpl
pop
int
xor
movsl
lods
std
xor
lcall
mov
cmpsl
mov
mov
adc
rolb
cmp
jno
dec
inc
sbb
jecxz
movsb
inc
rcrl
sub
and
rorl
push
insl
pop
das
or
mov
lods
loopne
outsb
sbb
inc
and
sub
nop
xor
mov
fldt
xchg
adc
cltd
jb
dec
les
les
mov
int3
add
and
fimuls
mov
stos
adc
add
push
dec
repnz
push
xor
and
inc
pop
repz
mov
movsb
push
sub
lcall
jecxz
aam
or
dec
addb
sbb
jbe
pop
shlb
pushf
xor
cmpsb
test
in
sub
push
fwait
inc
push
test
bound
jmp
xchg
lock
movsl
or
popa
add
in
mov
call
inc
add
push
pop
inc
xor
pop
ret
mov
push
inc
cmp
adc
stos
sbb
inc
rclb
add
push
test
lods
jle
in
inc
stos
push
add
jns
adc
cmp
push
out
adc
xor
xor
xchg
push
and
and
sbb
std
add
xchg
xor
rorb
push
xorb
push
mov
cmpsl
and
loopne
jmp
push
popf
xor
jbe
mov
es
add
or
xlat
push
pop
sub
push
push
xlat
pop
dec
adc
rcll
dec
jl
testl
or
loope
test
les
add
test
sbb
add
xor
dec
js
fldenv
push
add
or
shll
int
loopne
add
add
sarl
icebp
loop
jae
out
inc
fwait
xchg
xor
and
adc
jb
clc
mov
sbb
and
add
or
adc
lcall
and
sub
jmp
pop
add
inc
xor
bound
pop
lods
in
xchg
cmpb
xor
sub
add
roll
ret
inc
aaa
dec
jecxz
cli
mov
xchg
cmp
int3
push
or
sbb
add
lods
mov
pop
adc
lahf
or
sub
and
adc
mov
xor
mov
or
lods
inc
imull
imul
push
sub
cmp
dec
sbb
sbb
sub
pushf
scas
jb
add
jg
adcb
mov
loope
pop
std
movd
jle
jecxz
inc
pop
add
scas
scas
cwtl
cmpb
loopne
jnp
add
add
mov
adc
sbb
xor
inc
inc
mov
push
inc
idivl
arpl
insb
sub
add
push
xor
lahf
and
cmp
cli
xchg
cmp
dec
mov
add
inc
imul
pop
shlb
inc
push
sahf
add
push
sub
mov
mov
or
pop
pop
or
mov
add
imul
inc
sbb
adc
sub
mov
sbbl
sti
xchg
adcl
or
lds
add
flds
add
xchg
cmp
cmp
leave
adc
adc
inc
test
xor
push
sahf
jecxz
mov
pop
mov
xchg
adc
adcb
inc
adc
jno
cmpsb
inc
push
clc
add
mov
imul
rclb
sbb
push
push
mov
test
dec
fdivr
xor
les
aam
hlt
fiaddl
or
test
sbb
jl
mov
dec
add
sbb
dec
pop
data16
xor
dec
and
cmp
add
and
es
xor
movsl
inc
sbb
test
sub
adc
add
sbb
inc
dec
add
es
imul
xor
roll
mov
or
lcall
testb
arpl
push
adc
push
sti
cmp
push
test
cmp
std
mov
or
fwait
repz
popa
add
adc
push
pusha
add
or
xor
in
push
and
ret
bound
push
imul
sbb
lock
add
rorl
decb
mov
add
xor
shl
pop
movsb
and
xchg
pop
or
ret
mov
mov
insb
inc
add
pop
push
adc
fldl
out
mov
nop
nop
iret
addl
xchg
xchg
gs
leave
mov
sbb
sarl
in
cmp
shll
sbbb
andl
mov
je
inc
or
sub
xor
add
xchg
mov
mov
or
mov
mov
rclb
aaa
imul
or
dec
stos
adc
push
iret
pop
push
bound
and
enter
adc
dec
inc
lahf
inc
rolb
pop
push
fnstsw
xor
es
pop
addb
inc
test
and
cmp
stc
pop
lods
ds
jno
test
mov
xchg
dec
clc
mov
out
mov
sbb
mov
inc
add
subb
add
push
inc
sub
sub
mov
cmp
loopne
iret
fsubs
mov
loope
cmpsb
sbb
sub
sbb
sbb
roll
gs
gs
jno
gs
clc
aad
xor
sbb
subl
movsb
lcall
push
mov
movq
addl
sbb
pusha
xor
push
push
and
shrb
inc
jne
push
cmp
adc
imul
sub
cwtl
loop
mov
and
cmc
xor
lret
xchg
test
sbb
test
push
mov
sub
dec
sarb
jl
fiaddl
in
add
orb
add
lds
xor
out
pushf
dec
adc
in
push
dec
test
sub
pop
fidivl
out
xor
pusha
and
jo
push
fwait
dec
int3
and
les
and
cmp
cltd
push
xor
jg
mov
mov
lahf
xor
inc
add
aaa
leave
xchg
jge
xor
add
mov
dec
arpl
inc
fwait
dec
cmp
cmp
imul
mov
scas
icebp
out
add
sub
or
repnz
push
sub
int
sbb
sub
andb
xlat
addl
adc
push
cmc
adc
movsl
call
add
pop
mov
ror
sbbb
cmpsb
mov
aad
stos
add
pop
mov
inc
mov
and
nop
inc
adc
fisubrs
ljmp
or
xor
das
mov
orl
and
and
in
imul
rcrl
mov
movsb
sub
popa
call
mov
stc
mov
sbb
inc
pop
mov
mov
xchg
cmp
mov
loope
xchg
push
mov
inc
mov
fnstcw
sub
insb
je
sub
and
stos
xchg
cltd
shll
dec
popf
stos
cmp
dec
push
test
and
sub
arpl
mov
inc
cmp
ret
cmpsb
push
add
stos
dec
cmp
mov
dec
fcmovu
mov
addl
adc
sarb
xor
add
sahf
pushf
adc
clc
js
inc
jno
fldcw
fcmovb
testl
out
sub
sub
mov
or
sbb
pushf
push
push
and
xchg
jns
adc
push
add
push
add
dec
mov
dec
mov
or
and
add
arpl
xchg
lea
jne
mov
test
imul
scas
mov
add
insl
dec
adc
jmp
jmp
push
lock
xchg
inc
and
cwtl
or
xchg
jbe
ret
ja
test
cltd
sarl
xchg
pop
ljmp
les
adc
test
inc
add
es
test
jae
sti
fstl
cmp
call
dec
adc
ficompl
les
adc
stos
stos
add
inc
xor
add
sub
sbb
cmp
addb
shlb
sub
jb
pop
add
sub
leave
or
pusha
sbb
mov
push
dec
or
pusha
mov
test
inc
test
adc
mov
and
mov
lea
mov
test
or
xor
ljmp
or
and
xor
imul
fs
flds
adc
sidtl
xchg
inc
sub
sahf
push
sbb
or
ret
adc
enter
xchg
mov
push
or
popf
rorl
andl
push
rcl
and
or
ror
or
sbb
xchg
jno
int
lcall
push
subl
aam
aam
add
movsb
pop
ret
jo
repnz
and
es
push
mov
nop
mov
adc
add
cmp
sub
inc
mov
mov
jecxz
xor
sahf
add
dec
push
push
add
sbb
inc
pop
lods
fnstenv
sbb
mov
sar
repnz
inc
loope
mov
and
cmpsb
push
adc
jl
xor
inc
inc
or
sbb
mov
adc
test
sbb
ljmp
or
add
int3
xor
scas
pop
dec
mov
or
cmp
sub
andb
cmp
sbb
cmpsl
sub
cmp
and
jle
lods
push
rolb
pop
and
dec
dec
or
adc
mov
xchg
add
dec
test
add
inc
jg
sub
mov
inc
jo
adc
mov
push
bswap
popf
pop
push
and
shll
cltd
add
or
cmp
nop
cmp
loop
push
int
sbb
cmpsb
mov
push
fldenv
inc
add
and
adc
sbb
lea
inc
and
rclb
inc
movsl
ret
rorl
and
cltd
inc
bound
sub
mov
mov
dec
cmp
inc
test
adc
push
lcall
repz
add
sti
in
and
out
add
and
inc
daa
dec
mov
sub
nop
jbe
jl
fmuls
rorb
adc
jnp
sbb
dec
jno
adc
stos
cwtl
adc
jne
and
inc
aas
add
aaa
insl
cmp
outsb
xchg
sub
xor
and
sub
pop
lea
jg
push
push
fiaddl
fwait
mov
inc
push
mov
add
ljmp
dec
inc
mov
push
shlb
test
cmpl
dec
cmp
xorl
jg,pn
add
pop
out
or
cmp
mov
and
add
mov
ss
push
sahf
lea
dec
sbbb
mov
or
inc
inc
leave
add
andl
xor
mov
and
insl
dec
test
and
loope
push
aad
and
mov
lcall
mov
or
dec
xchg
adc
add
cltd
adc
mov
mov
lret
dec
xor
mov
mov
mulb
pusha
lret
cmpsl
arpl
mov
adc
lds
add
lock
push
aam
and
mov
rolb
dec
and
insb
push
sti
mov
or
sbb
adc
xor
add
inc
fists
in
push
mov
mov
xchg
mov
adc
jae
das
and
gs
in
dec
jecxz
or
mov
movsb
pusha
add
mov
popa
adc
add
and
and
inc
sub
push
or
clc
mov
push
enter
addl
mov
mov
pusha
or
inc
in
add
sbb
push
mov
test
ffreep
inc
adcl
dec
push
push
push
mov
loope
addb
add
and
into
out
lock
dec
leave
rorb
dec
adc
cmp
scas
add
rcrb
xor
pop
test
lods
loopne
mov
jno
mov
add
sbb
xorb
cmp
add
les
lea
ret
mov
jo
dec
jp
js
out
outsb
sbb
jae
push
adc
add
stos
sub
lcall
pushf
add
stos
popf
mov
shll
jmp
mov
iret
xor
shrb
mov
push
mov
cwtl
rol
mov
or
adc
lods
cmp
leave
lds
jne
and
xor
add
xchg
xor
inc
sbb
mov
sbb
shlb
jne
add
mov
xchg
out
push
jecxz
adc
nop
in
popa
or
je
andl
aam
add
inc
and
jae
hlt
mov
test
push
inc
fprem
call
mov
jnp
and
lea
pop
add
js
scas
mov
add
or
mov
sbb
in
push
mov
insb
add
mov
loope
xchg
hlt
lret
adc
ss
add
bound
sbb
or
nop
cmpsl
mov
lods
xchg
dec
adc
test
testb
aam
icebp
jge
clc
cwtl
adcb
sti
adc
mov
mov
rclb
cmp
sti
add
cli
andnps
xchg
jno
add
and
call
push
mov
mov
add
xor
aad
arpl
push
sbb
and
aam
add
leave
mov
xchg
sub
fldt
xchg
popa
lods
in
xchg
add
adc
adc
test
movsb
test
push
adcb
dec
je
xor
inc
pop
cmpl
jnp
inc
mov
dec
aam
adc
or
add
inc
jle
jg
jecxz
test
push
ds
add
inc
ret
push
add
in
or
cmpsb
and
sub
adc
imul
insb
pop
adc
mov
rclb
xchg
cmpsb
mov
stos
scas
rorb
inc
adc
jne
cmpb
jbe
mov
and
movsb
mov
fs
adc
inc
sub
sbbb
shlb
stos
or
xor
add
insb
add
mov
sub
jmp
inc
or
sbb
fadds
lods
fsts
pushf
inc
mov
adc
pusha
loope
jnp
add
arpl
sahf
mov
inc
adc
dec
rclb
movsl
cld
xor
add
mov
xor
jo
push
xor
int3
sbb
dec
fmuls
pop
sbb
inc
pusha
and
add
mov
adc
push
pop
test
adcl
push
orb
add
rcrl
jnp
or
sub
scas
push
add
int
xor
xor
xchg
xchg
jmp
cmp
mov
xchg
xor
js
inc
mov
or
movsl
jae
or
xor
mov
adc
sbb
aad
gs
and
pop
popa
mov
or
orb
mov
pop
hlt
adc
mov
push
daa
xorl
rcrl
rolb
adc
bound
cmp
dec
imul
inc
stos
and
inc
ds
andb
mov
and
daa
dec
lds
and
lret
leave
mov
and
xor
dec
add
sub
insl
pop
jb
ret
push
pop
or
cmpsb
mov
addl
fimull
ret
mov
push
push
and
rorb
sub
sbb
adc
add
int
pop
ret
and
mov
ljmp
ror
and
sub
divb
clc
stos
mov
inc
or
add
bound
add
stos
mov
ja
jns
andl
cmp
test
cmc
ret
mov
add
xchg
adc
and
imul
push
cmpsl
and
insb
xlat
jl
add
push
xchg
out
enter
pop
ret
dec
call
inc
ja
add
jo
or
adc
push
imul
add
pop
sub
xchg
add
arpl
into
push
dec
or
xchg
sub
lcall
rcrb
inc
cwtl
push
xchg
and
shll
adc
adc
rol
add
sub
inc
and
adc
loopne
std
push
xchg
cwtl
mov
shll
dec
sbb
out
cwtl
daa
popf
adc
add
sahf
pop
inc
inc
jmp
or
push
mov
mov
les
sub
test
je
fnsave
pop
imul
rcl
inc
or
stos
out
or
jo
loope
add
fcmovne
pop
arpl
fiaddl
push
sub
or
xchg
mov
dec
dec
adc
in
and
fbstp
lods
push
mov
loope
pop
push
adcb
xchg
dec
push
jl
xor
lret
or
fimuls
out
jns
add
cmp
jb
xor
or
push
add
jne
fildl
sub
mov
sub
xor
or
inc
push
adc
sbb
cltd
mov
dec
sbb
add
inc
dec
insb
sbb
addb
mov
int
adc
rorb
or
movq
dec
lret
xchg
addr16
stos
add
mov
or
or
mov
nop
int
addl
pushf
icebp
movsl
push
je
or
shrb
pop
inc
repz
add
nop
jecxz
dec
or
es
aam
test
daa
xor
lds
dec
add
jne
xchg
inc
or
lea
xor
mov
and
sti
push
mov
lds
sub
xchg
lods
mov
shrl
shrb
jp
adc
sbb
mov
pushf
inc
adc
cltd
les
inc
add
push
dec
jbe
add
or
push
jno
push
call
sarb
xchg
adcb
and
sub
rorb
scas
stos
mov
adc
mov
add
movsb
adc
mov
or
test
adc
loop
popa
addb
xor
mov
pop
push
sbb
push
cmp
jbe
push
dec
or
rolb
adc
push
call
data16
in
push
mov
or
out
fwait
pop
lods
xorb
stos
nop
or
or
mov
sub
mov
push
bound
add
dec
call
sub
cs
adc
lds
pop
inc
push
dec
inc
mov
jle
sub
or
add
cmc
pop
add
jno
inc
jmp
cmpb
xor
lret
or
dec
ret
push
lret
mov
pushf
push
sbb
xor
cli
sub
sbbb
popa
or
mov
pop
adc
push
or
push
mov
lret
and
push
and
pop
inc
icebp
jb
mov
lcall
sbb
or
hlt
xchg
or
adc
xor
or
iret
aaa
dec
xchg
sahf
xchg
lea
push
or
sub
pop
and
adc
xor
dec
inc
and
addb
adcb
mov
icebp
subb
stc
mov
out
dec
sbb
iret
lahf
dec
and
pop
mov
mov
mov
xor
inc
test
add
int3
sbb
inc
push
inc
push
push
xor
andl
adc
add
out
inc
subl
xchg
inc
sub
pop
pusha
or
sbbl
adc
and
add
inc
pop
imul
mov
xchg
and
addl
xchg
mov
mov
cmp
es
mov
xor
add
and
ret
inc
and
mov
jg
stos
inc
inc
out
test
cld
and
and
hlt
pop
add
adc
pop
or
sbb
stos
mov
mov
es
or
pusha
and
push
sbb
stos
mov
inc
pusha
inc
xchg
jmp
and
mov
pop
sub
mov
rorb
imul
jno
xor
mov
es
inc
jecxz
adc
mov
stos
test
out
std
push
inc
push
pusha
stos
cmp
add
jae
add
push
scas
adc
and
rorb
stos
aad
and
repz
dec
and
xorb
lea
repnz
or
add
inc
sub
aam
xchg
dec
jl
jl
dec
movsl
dec
push
sub
push
mov
xchg
enter
pop
or
push
lcall
es
decl
popa
sbb
orb
cmp
mov
dec
push
dec
adc
lea
sub
mov
les
push
add
xor
lods
test
in
push
xor
mov
stos
push
add
dec
xchg
les
scas
mov
movb
adc
xor
daa
ret
add
cmp
xor
mov
pop
xor
xchg
add
movsb
mov
pop
xor
mov
xchg
ret
data16
push
iret
jns
push
add
cwtl
imull
push
jno
xor
pusha
xchg
mov
bound
add
adc
fwait
orl
add
sub
mov
mov
push
xor
rorb
sub
mov
inc
dec
into
rcl
jecxz
jb
push
pop
sub
inc
ljmpw
loopne
xor
pop
call
out
test
push
test
or
daa
imul
and
xor
and
or
sbb
pusha
ret
push
cmp
loope
mov
mov
xorb
add
or
add
jne
rcrb
adc
mov
in
movsb
ljmp
or
sub
scas
loop
mov
ret
xor
mov
loope
repnz
xchg
mov
shrb
pop
add
je
xchg
xchg
xor
pop
mov
mov
xchg
sbb
out
lds
addb
scas
adc
add
adc
add
fimull
pop
es
cmp
sbb
roll
int
rclb
out
xchg
and
dec
jecxz
xchg
test
or
das
ret
filds
dec
and
mov
aaa
add
cmp
or
inc
push
pop
enter
mov
test
enter
push
dec
fimuls
call
cmpsl
dec
xor
dec
pushf
xor
stos
jnp
sub
ficompl
mov
xchg
test
or
jo
add
cltd
sub
push
add
mov
pop
adc
outsb
adc
mov
adc
xchg
add
jb
adc
scas
gs
xchg
sbb
mov
jmp
push
and
mov
jecxz
add
test
push
inc
add
pusha
mov
aas
out
shlb
clc
sbb
dec
push
mov
pop
jae
ret
clc
sub
loop
mov
xchg
push
fwait
inc
and
cmp
loop
outsl
add
loopne
adc
jmp
stc
push
fidivs
cwtl
enter
repnz
andb
sahf
jl
clc
nop
orb
sub
loopne
test
arpl
enter
sbb
insb
adc
aad
mov
push
adc
test
mov
add
sub
fwait
sbb
and
sub
in
insb
stos
and
comiss
and
nop
dec
dec
rclb
mov
dec
sbb
aam
push
xor
push
ljmp
lret
mov
add
mov
in
inc
adc
adc
stos
pop
and
add
lds
rorl
and
xchg
sbb
mov
sub
and
dec
cmp
test
push
cmp
sub
inc
or
mov
stc
movsl
push
and
outsl
movsl
cmp
lret
lahf
xchg
jg
dec
push
inc
lret
xchg
push
dec
lea
sbb
test
adc
adc
pop
dec
cmpsl
mov
add
pop
inc
rol
jmp
jo
pop
fidivs
or
push
push
sbb
adc
or
adcb
ret
push
jp
pusha
add
adc
test
test
rcrl
push
sbb
lret
ret
add
pop
leave
das
mov
das
mov
mov
mov
hlt
xchg
ljmp
int
aad
push
jo
icebp
mov
mov
pop
add
cmpsl
dec
fwait
out
stos
lret
sub
mov
lret
and
movsb
add
test
mov
add
stos
jmp
jecxz
mov
test
push
sub
pop
fisttps
inc
icebp
sbb
jno
test
adc
cmp
leave
push
dec
jecxz
dec
das
clc
sbb
jb
jmp
repz
test
insb
jecxz
adcb
adc
loop
pmuludq
mov
test
orl
dec
push
add
rolb
xor
inc
aas
andl
aad
pop
pop
and
and
leave
ljmp
addb
push
jl
mulb
pand
call
adc
add
add
pusha
push
fnsave
stos
mov
lcall
addb
subb
pop
push
push
aas
imulb
and
xchg
and
out
push
xchg
add
pusha
add
adc
and
or
movsb
mov
push
and
aad
rclb
xor
inc
stos
mov
lea
sub
or
cmp
adc
jae
xor
cmp
dec
push
arpl
sub
add
mov
inc
mov
or
cmp
mov
and
push
dec
mov
repnz
sbb
or
faddl
leave
les
cmp
mov
pop
add
mov
pop
sub
popf
and
iret
lret
cmpsb
popa
sahf
in
pop
dec
imul
dec
lds
push
mov
sbb
pusha
mov
inc
xchg
ja
dec
movsl
mov
in
pop
sub
xchg
aam
sub
mov
mov
push
inc
inc
aaa
sub
add
sub
push
or
mov
ret
add
inc
lcall
stos
add
add
sbb
rcrl
inc
mov
shll
ss
adc
xchg
rcl
xor
dec
fld
mov
loope
xchg
lods
push
inc
ljmp
push
addl
sbb
add
dec
lret
mov
pushf
add
and
adc
gs
push
xchg
aad
mov
cmp
movsb
bound
insl
out
lcall
stos
mov
mov
inc
xorb
push
test
add
lods
pop
popl
fnstcw
cmp
sub
mov
movsb
mov
adc
add
loopnew
roll
add
lea
fnstsw
mov
loope
mov
push
notl
icebp
int3
mov
nop
or
mov
sbb
repz
inc
loope
in
inc
add
lret
subl
out
lods
mov
mov
adc
aam
sarb
inc
and
pop
jae
stos
adc
dec
jae
adc
add
movsb
pop
fstpt
lods
dec
pusha
inc
arpl
and
mov
xor
gs
lds
inc
mov
add
mov
rcrl
les
mov
or
mov
enter
test
xchg
xchg
mov
add
xor
icebp
add
je
add
pop
iret
xor
lahf
cmp
imul
add
push
or
lcall
roll
cmpsb
flds
sbbb
add
out
sbb
adc
sub
lock
push
mov
xor
fidivrl
and
cs
sbb
push
push
xlat
adc
js
inc
rorb
sbb
adc
cmp
es
sbb
repnz
or
or
std
mov
cmp
or
adc
ss
inc
imul
add
cltd
and
add
test
lret
mov
gs
sub
stc
push
mov
es
dec
sbb
popa
negb
addl
and
add
and
adc
mov
inc
rclb
aam
mov
enter
adc
push
xchg
mov
dec
xor
leave
rclb
push
ret
or
cmpsl
leave
movsl
sbb
adc
loope
or
dec
mov
test
test
es
push
inc
addr16
inc
test
mov
cwtl
and
xor
push
jae
repz
cmpsb
loopne
and
and
or
xchg
cmp
repz
fxch
sub
dec
outsb
fldenv
sbbl
or
sub
cs
mov
sbbb
xor
xor
cs
insl
push
mov
mov
adc
mov
push
push
pop
pop
scas
mov
mov
mov
and
jl
insb
or
xor
add
add
adc
sbb
inc
fsubs
add
lods
adc
add
daa
push
sbb
push
out
lds
ss
mov
cmp
push
push
jnp
test
add
adcb
pop
stos
test
sub
or
addl
pusha
lea
xorl
lret
sbb
push
and
pop
inc
lcall
xchg
sub
adc
adc
cmpl
dec
test
fs
ret
mov
insb
je
dec
test
fdivl
and
pop
mov
and
jo
cli
cwtl
jb
lods
fbld
push
pop
add
std
in
xorb
cmp
andl
sub
aam
add
lock
add
push
in
adc
jmp
fimull
f2xm1
bound
inc
add
jo
and
lods
push
lods
mov
add
aad
jo
inc
xchg
xchg
add
inc
dec
ja
movsb
andl
inc
sbb
inc
cs
shll
testb
adc
push
xchg
push
sbb
dec
add
sahf
jno
pushf
xor
int3
shrb
and
inc
and
outsl
subb
xor
dec
orb
pusha
cltd
push
sub
sbb
stc
test
scas
or
inc
inc
and
jmp
or
dec
and
movsl
and
ret
and
inc
je
jmp
stc
dec
pushw
jl
mov
test
pop
sub
adc
inc
sub
rol
mov
pop
lock
bound
push
push
push
orb
sub
pushf
add
test
ret
aad
dec
mov
xchg
add
xchg
pop
cmpsb
xor
bound
int
lds
loope
leave
rorb
not
jge
fs
cmp
shrb
aam
imul
ret
lcall
call
sbb
adc
mov
add
inc
cmp
xor
push
imul
add
sbb
daa
icebp
cmc
xlat
test
inc
mov
adc
jno
in
xchg
add
xor
inc
rolb
ss
or
push
and
mov
mov
movsb
or
das
mov
aas
sub
cmp
js
push
lret
or
sub
inc
aad
and
inc
xor
add
bound
test
inc
icebp
sbb
and
jae
rcll
cmp
or
aad
popf
ja
rolb
and
or
popa
pop
inc
or
mov
jmp
pop
inc
stos
xor
mov
rolb
cltd
pop
loopne
add
pop
cs
jg
cltd
sbb
lods
sbb
cli
stos
cld
cmp
bound
rorb
leave
dec
dec
mov
fmuls
mov
and
rorl
in
stos
jns
sahf
and
mov
movsb
aad
push
mov
lea
int
test
rol
inc
mov
cmp
xor
dec
test
sbbb
push
aam
add
call
lds
lea
inc
jo
repnz
or
add
or
xor
add
mov
es
test
test
add
inc
sbb
add
and
mov
xor
pop
popa
cld
jae
mov
sub
cmpsb
cltd
in
adc
push
dec
inc
jle
les
sub
int
adc
add
sbb
dec
push
rclb
ljmp
ss
add
popfw
test
push
pop
movsb
fldenv
ja
mov
push
fsts
mov
sub
loope
bound
repnz
lcall
push
out
sub
aad
sahf
addl
dec
mov
or
stc
pop
inc
iret
jle
jle
mov
inc
pop
lods
stos
jmp
fwait
jns
or
loope
andb
mov
inc
and
mov
mov
mov
movsl
adc
fistl
xor
mov
push
movsb
dec
add
leave
cmpb
cmp
pusha
mov
sbb
add
adc
sub
push
sub
sub
sub
fists
and
sub
fdivrl
pop
in
push
push
xchg
dec
int
add
and
ds
nop
or
push
insl
arpl
add
in
push
popa
hlt
mov
mov
adcb
adc
inc
lods
cli
xchg
cmp
or
xchg
cmpsb
pop
or
jl
mov
int
push
lea
or
adc
add
test
fadds
and
mov
ljmp
cli
insb
or
lret
test
dec
pop
push
cwtl
rclb
push
cmp
decb
mov
das
sub
adc
cmpsb
mov
and
pop
mov
mov
sbb
add
mov
test
inc
shl
jne
or
add
adc
or
fwait
adc
xor
dec
andl
gs
push
push
inc
orb
push
sub
scas
dec
mov
pop
inc
and
cmc
mov
xor
push
stos
scas
leave
arpl
inc
xchg
movd
test
sbb
rolb
or
and
int3
jne
les
sbb
add
xor
movsb
test
and
lahf
mov
jge
sbb
das
dec
cmp
insl
test
inc
sub
cmpsl
andl
sub
push
push
jbe
or
and
shll
add
les
jge
push
sbb
inc
call
or
pop
xor
das
dec
add
push
xchg
add
mov
add
xchg
and
dec
dec
stc
dec
jno
xchg
dec
sti
fidivs
test
add
or
push
adc
ficompl
hlt
mov
aas
xchg
sbb
nop
popa
xchg
aad
or
lds
std
xchg
sub
add
push
nop
fnstsw
popl
adc
or
subl
cwtl
pop
dec
lods
mov
add
je
mov
push
das
jns
les
mov
cs
mov
jns
push
or
mov
shlb
leavew
jp
mov
sti
adcl
imul
or
add
jno
inc
out
arpl
sbbl
xchg
push
in
adc
add
sbb
repz
call
mov
test
test
adc
adc
pushf
cmp
int
aas
xor
nop
or
add
icebp
mov
scas
xchg
add
mov
adc
inc
inc
stos
inc
and
sub
fs
cmp
andb
cs
adc
or
inc
jae
mov
jb
or
cmp
test
or
lods
add
or
pop
mov
adc
xchg
mov
movsb
int3
mov
mov
test
mov
add
adc
test
adc
push
pop
push
cmpsb
or
mov
xor
add
jmp
int
in
push
add
and
cmp
int
movsl
sbb
rol
imul
xchg
and
dec
xorb
sbb
pushf
lods
inc
sbb
mov
out
xchg
lret
in
gs
add
mov
repz
xchg
pushf
mov
lcall
and
pop
mov
lea
cs
repnz
int
das
adc
jecxz
daa
adc
filds
dec
jo
mov
mov
in
sub
lea
mov
pop
push
ljmp
lret
lods
mov
adc
adc
and
adc
mov
add
enter
xor
pop
rcll
mov
pop
xor
aad
and
loop
mov
inc
ret
sarb
sti
test
and
xorb
xchg
pop
adc
lods
inc
jg
rolb
pop
mov
add
xor
inc
inc
xchg
push
hlt
jns
adc
xchg
popa
mov
mov
cmp
pop
jne
ds
add
imul
xchg
loopne
dec
sub
dec
mov
push
xchg
inc
or
xor
scas
lods
out
ret
pop
sti
cmp
imull
inc
sub
jl
cwtl
es
imul
cli
or
insb
bound
outsw
fldcw
xor
push
lock
cld
inc
sahf
data16
adc
mov
push
adc
aam
sbb
pop
movsb
je
push
cmc
push
inc
lds
je
data16
mov
sbb
add
rcll
push
dec
inc
gs
push
leave
or
cmp
fidivl
and
test
mov
cmpl
or
lea
mov
loop
dec
sub
outsl
and
and
loop
dec
mov
lds
mov
push
call
cmpsl
pop
push
and
and
out
mov
adc
je
mov
add
popf
and
sub
push
mov
pop
add
cmp
shrl
pop
sbb
popa
mov
push
xor
icebp
xor
xchg
clc
loop
divb
ljmp
pusha
add
in
mov
fmull
cmp
scas
push
cmp
je
push
ret
mov
jne
mov
push
sub
xlat
out
jmp
lcall
jae
xor
inc
cmpsb
or
push
adc
negb
dec
dec
aas
pop
jb
add
test
sbb
cmp
pop
adc
lahf
xor
and
pop
insl
jecxz
sbb
lds
sbb
dec
cltd
movsb
push
and
fs
pusha
sbb
inc
stc
aad
cmpl
pop
adc
add
and
inc
test
cmpsl
inc
les
je
ret
orl
adc
mov
push
jmp
xor
sub
xor
adc
pusha
add
sub
jg
pop
sbb
xchg
add
add
scas
fsubrs
pop
sbb
ja
loope
add
mov
xchg
push
inc
xchg
icebp
add
and
cwtl
add
movsl
rorl
push
push
pop
cmp
push
fwait
int
cmpsb
jae
xchg
pop
or
inc
setae
add
js
mov
jmp
rcl
and
pop
jmp
leave
pop
xor
and
mov
mov
adc
xchg
and
and
and
sahf
cmc
adc
jge
cmpsb
xchg
movsb
sub
push
je
mov
cltd
push
jg
and
jns
pop
test
xchg
push
add
jnp
repz
adc
sub
inc
pop
sti
adc
cmp
mov
or
adc
sbb
add
mov
or
test
adc
mov
xor
xchg
jnp
mov
push
mov
push
xchg
and
dec
sub
fmull
addl
sti
loopne
aad
imul
adc
cmp
fwait
sub
add
pop
js
pop
rorb
loope
and
push
hlt
or
add
test
lea
inc
cwtl
inc
shll
ljmp
dec
fisubs
inc
inc
xor
clc
in
pop
push
lods
popa
lods
mov
dec
ljmp
add
pop
rcll
sti
inc
push
xchg
addr16
incl
sub
sbb
fidivrl
addl
cmp
stc
adc
cmp
fsubs
cltd
xchg
xchg
das
ds
push
xor
jge
mov
jns
in
cmpsb
jno
adcl
leave
xchg
adc
adc
ja
aam
mov
rolb
mov
inc
sbb
iret
mov
mov
mov
out
fadds
ret
in
sub
inc
and
add
add
rol
dec
push
xor
aam
mov
push
gs
sub
add
adc
sub
xchg
xchg
test
adcb
sti
and
sub
andb
pop
mov
mov
lret
iret
testb
mov
mov
scas
xchg
daa
xor
daa
lock
jecxz
mov
aad
add
in
mov
jnp
shrl
sub
pop
add
popf
cmpsl
xchg
inc
lods
shl
and
js
in
mov
push
mov
cld
push
sbb
push
es
insl
mov
inc
xor
je
mov
movl
popa
xchg
mov
es
icebp
fistl
mov
adc
orb
sbb
adc
mov
or
cmpsl
cs
or
adc
mov
sbb
es
xchg
sub
imul
int
cmpsl
idivl
add
jae
inc
and
mov
or
adc
imul
and
add
sub
add
xor
sbb
shl
add
inc
leave
je
pop
inc
test
and
into
sub
les
insl
subl
pushf
ret
lret
pop
add
stc
adc
adc
aad
fimuls
popa
test
push
push
icebp
es
or
dec
shlb
or
or
xchg
cmp
or
xchg
xchg
cmp
lret
jge
and
jg
movb
mov
cmp
mov
xchg
std
inc
add
pushf
addr16
or
add
aaa
orb
or
fnsave
xchg
mov
insb
mov
mov
inc
aad
out
push
test
test
xor
add
adc
xchg
sbb
xchg
sbb
and
inc
mov
sahf
and
enter
push
dec
add
movsl
sub
imul
xor
and
adc
xor
pop
and
or
sbb
test
das
mov
sub
mov
jp
or
push
and
test
inc
jne
lahf
inc
sub
push
cmp
inc
mov
add
add
add
xor
test
or
loope
jbe
mov
add
cs
add
enter
push
ret
mov
or
mov
shlb
cmc
ljmp
insb
ss
adc
xchg
add
adc
std
jp
push
and
addr16
add
push
stos
add
xchg
and
dec
and
add
add
adc
adc
subl
jp
dec
mov
arpl
push
nop
rolb
jbe
out
push
in
cwtl
dec
add
add
ljmp
sbb
sbb
xor
sbb
loope
sar
inc
ja
mov
pop
inc
push
pop
js
sbb
xchg
and
inc
add
add
add
xlat
cmp
and
xchg
pop
rolb
push
test
jns
in
or
ret
add
and
push
orb
sbb
inc
pop
sti
mov
test
and
stos
data16
or
icebp
leave
jecxz
mov
inc
loopne
adc
in
das
add
ret
cmp
sub
adc
fisubl
je
sbb
aam
out
add
dec
addr16
add
push
sbb
adc
add
push
mov
cld
sarl
adc
lods
dec
cld
inc
xchg
popa
cltd
add
xchg
sahf
inc
outsl
shrl
push
frndint
sub
inc
lret
adc
leave
andl
xor
adc
sar
inc
mov
scas
or
xor
les
push
mov
nop
bound
ds
int3
and
sub
loopnew
xor
add
cmpsl
mov
or
enter
and
add
sub
out
fnstenv
add
xchg
lcall
sbb
push
cmpsl
lea
mov
fmuls
push
daa
add
mov
push
fucomi
stc
adc
icebp
icebp
jecxz
in
pop
xor
lock
or
or
cmp
or
in
mov
mov
ret
nop
pop
mov
cltd
in
adc
mov
cmp
mov
leave
xchg
icebp
data16
cmp
sub
mov
loop
enter
sbb
push
lcall
stos
push
jecxz
inc
push
lahf
jne
push
add
imul
and
test
insl
add
sub
ds
or
js
add
inc
cmp
in
imul
xor
mov
loopne
adcl
add
pop
les
adc
xchg
and
les
xchg
popl
in
push
xchg
xor
sbb
arpl
add
jg
xchg
or
mov
pop
or
cmpsb
shld
sbb
test
pop
dec
loop
mov
mov
add
jbe
adc
iret
mov
add
pop
add
ret
jae
push
or
sbb
cmp
cmpsl
testb
push
mov
xchg
andb
and
and
sbb
addr16
xor
dec
data16
inc
rclb
xor
mov
repz
adc
imul
arpl
aam
pop
adc
mov
xchg
mov
or
push
add
sbb
jmp
add
and
add
pop
fs
movsl
or
ss
jo
pop
stos
push
bound
add
cli
add
leave
mov
add
fwait
mov
and
add
sub
push
push
mov
inc
inc
out
jecxz
adc
mov
inc
pop
faddp
add
jle
imul
xchg
and
inc
imul
inc
int
lcall
and
in
or
xchg
popa
mov
popa
cltd
cmc
je
push
leave
add
insb
push
inc
stos
imul
adc
int
and
adcb
pop
push
aam
leave
orl
dec
and
add
xchg
pop
and
and
iret
push
pop
test
dec
cmp
je
in
push
int
out
add
sbb
jno
push
mov
xor
sub
cmp
test
push
je
mov
push
insl
sbb
inc
or
cld
jne
sub
or
bound
test
cwtl
imul
mov
icebp
xchg
sub
jmp
inc
es
inc
cmp
cs
add
inc
adc
mov
mov
inc
and
je
int3
pop
lods
shl
mov
push
dec
add
loopne
imul
popa
adc
push
rcl
daa
enter
pop
and
mov
jno
aam
in
adc
inc
dec
xchg
sti
pusha
es
sub
pushf
push
mov
and
cmp
push
sub
sbb
mov
loopne
dec
mov
jge
test
das
adc
or
xchg
pop
mov
dec
and
push
or
push
mov
xor
cmp
lods
add
xor
adc
add
roll
addb
inc
insb
test
div
xor
or
and
pusha
sarl
mov
and
sub
sbb
movsb
dec
add
push
push
pop
adc
pop
xor
pop
pop
adc
rolb
xchg
test
sarl
dec
xchg
mov
inc
add
sbb
or
mov
push
xor
adc
add
mov
sbb
inc
mov
adc
cltd
dec
pop
cli
fdiv
cmp
test
jo
push
add
call
and
push
xchg
mov
adc
jmp
scas
jnp
xchg
lods
mov
adc
js
mov
xor
out
adc
mov
mul
sub
fdivl
xchg
mov
add
ds
ja
scas
movsb
movsb
add
dec
cmp
ljmp
or
enter
fstps
cwtl
test
mov
dec
cli
xor
or
cmp
xchg
mov
and
or
add
mov
cmp
mov
lds
pop
shlb
adc
pusha
inc
inc
sbb
pop
and
sub
pop
cmp
mov
and
pop
xor
mov
mov
loope
fsts
push
or
inc
cmp
push
pop
add
push
jo
pop
fstpl
in
dec
xor
ficoml
jmp
inc
add
scas
adc
aaa
push
in
or
nop
enter
lock
mov
inc
dec
fdivl
cmc
popa
push
decb
cmc
pop
in
cli
pop
inc
and
iret
ja,pt
xchg
jecxz
outsb
shrb
movsl
push
add
imulb
mov
das
adc
inc
les
cs
or
into
pop
xchg
dec
sbb
sub
push
pop
in
ret
push
and
orl
sub
in
aaa
movsb
stos
repz
jns
add
fwait
mov
out
pop
sub
cmp
lock
and
mov
push
ss
push
mov
and
ret
out
imul
pop
mov
shrb
sub
mov
mov
lahf
mov
sub
add
orb
push
inc
xor
or
sub
repz
push
pop
lds
ret
rclb
add
sbbl
add
loope
adcl
xchg
mov
adc
inc
inc
orb
xchg
pop
cmp
mov
ret
inc
ret
or
test
cmp
cmp
fcoms
push
dec
pusha
or
loopne,pt
xor
pop
sbb
adc
aad
in
inc
cmpsb
popa
insb
fdivl
and
mov
pusha
dec
or
cmp
es
or
adc
cmp
mov
mov
add
pop
addr16
xchg
dec
ret
pop
adc
sbb
mov
sbb
scas
sbb
movups
push
xchg
pop
adc
push
cmpsl
lods
push
cmp
jecxz
xchg
push
cwtl
inc
push
mov
imul
leave
push
inc
je
lea
test
mov
les
or
scas
pusha
mov
je
push
dec
cmp
and
loope
mov
pop
pop
jno
lret
je
dec
push
and
mov
push
test
orl
add
sbb
cmpsb
and
mov
aaa
or
cmc
loop
fs
iret
xor
and
out
sbb
or
sub
cmc
pop
cmp
xor
sbb
lret
dec
test
xor
push
and
xchg
push
daa
add
inc
add
cmp
sub
push
pushf
or
call
mov
mov
inc
dec
pop
gs
and
loope
adc
andb
cmp
jno
xchg
stos
rcl
inc
jne
roll
adc
subl
push
sub
sbb
adcl
aaa
push
fwait
cmpb
and
adc
adc
mov
push
pop
push
clc
jo,pt
or
je
pop
xchg
add
jo
or
cmc
ficompl
xor
xchg
and
mov
sbbb
push
sub
cmp
or
mov
mov
leave
add
or
cmp
mov
test
pop
lea
push
negl
jecxz
mov
mov
aam
and
add
jno
xor
jb
outsl
out
addb
loopne
rcr
xchg
test
adc
test
mov
mov
or
or
mov
adc
ja
pop
push
mov
popf
inc
je
ss
mov
lock
or
fiaddl
stos
in
pop
aas
movsb
add
lahf
in
bound
ja
rolb
ljmp
add
sub
pop
xchg
inc
add
adc
add
das
add
push
xchg
push
addr16
andl
orb
sbb
mov
out
cmp
subb
shl
stc
cld
inc
pop
insl
pushf
adc
in
add
out
sbb
outsl
cmpsb
aam
psubsb
xor
mov
adc
mov
into
and
sbb
xor
stos
add
mov
mov
add
sbb
lea
dec
mov
lock
or
mov
cli
out
stos
add
add
xchg
jl
adc
leave
add
and
and
pop
sbb
add
lods
scas
mov
jmp
movb
aam
popf
lds
and
pop
push
mov
fwait
shrb
xchg
aaa
add
pop
arpl
mov
jb
jp
adc
inc
add
add
ljmp
and
mov
sbb
je
xchg
fldcw
es
sahf
add
add
mov
aam
mov
or
cmp
add
mov
add
xor
test
and
mov
cs
cmp
jo
ret
jnp
or
dec
icebp
dec
mov
nop
pop
dec
mov
cmp
xchg
push
loopne
std
sahf
push
add
push
enter
mov
mulb
inc
das
pop
pushf
pop
mov
pusha
rcll
mov
mov
mov
adc
pop
clc
pop
mov
sub
dec
and
daa
pop
and
sub
push
push
ret
jmp
aaa
pop
sbb
mov
mov
add
lret
jge
imul
test
or
xorl
lret
inc
dec
out
sub
in
jle
icebp
addb
pop
or
cwtl
mov
add
push
add
cmpb
dec
fisttpl
adc
push
mov
xor
mov
cmpl
sbb
imul
xchg
or
rol
gs
rcrl
popa
inc
pop
xor
sbb
dec
adc
inc
or
inc
dec
adc
xor
test
cmp
sarl
jo
adc
jne
dec
jecxz
rolb
outsl
mov
and
and
js
movsl
sbb
xor
test
sbb
stos
in
mov
push
mov
hlt
stos
es
hlt
jo
inc
mov
aad
shlb
pop
aam
shrl
pop
ss
std
push
sub
inc
movsl
inc
cmpl
or
xor
add
or
mulb
icebp
test
and
incb
or
enter
dec
adc
push
int
adc
jbe
jmp
adc
adc
inc
mov
loope
mov
rclb
mov
xor
pop
popa
and
add
mov
mov
shl
outsl
adc
je
stos
lock
mov
fildll
pop
ret
push
jne
add
inc
mov
test
xor
iret
test
pushf
add
and
sbb
sub
add
xchg
lret
sbbb
test
xor
rol
push
shl
add
or
add
inc
cmpsl
test
or
call
inc
pop
push
inc
or
pop
inc
mov
cld
add
add
mov
mov
pop
or
cltd
adc
pop
shlb
fcompl
xchg
sbb
inc
xorl
outsl
in
jns
ss
fisubs
mov
in
sub
and
repnz
test
imul
les
mov
sarb
sub
sub
mov
inc
jmp
sbb
arpl
push
stos
inc
in
lds
mov
ror
rorl
sbb
xor
mulb
mov
inc
and
add
xor
and
jno
inc
and
aas
add
andb
push
xchg
add
add
nop
cmpsb
fsts
xlat
cmc
mov
mov
adc
add
clc
bound
adc
dec
jecxz
jno
or
mov
sbb
sub
dec
jecxz
pusha
fidivrl
sbb
sbb
popa
xor
add
sbb
fnstenv
add
sbb
sub
pop
leave
and
pop
roll
or
jmp
es
movl
xchg
push
gs
jbe
sbb
or
cwtl
in
jle
dec
or
test
inc
int
mov
insb
or
push
adc
subl
pushf
rolb
and
push
pusha
xchg
stc
xor
pop
lock
jmp
sbb
cmp
bound
shrl
mov
mov
lcall
push
je
add
outsb
push
rorb
ja
adc
push
push
or
inc
push
sbb
fldl
sub
push
rorl
mov
push
lcall
push
xor
add
int
jp
mov
or
dec
push
sub
xor
dec
and
sub
ret
movsb
xchg
sub
mov
cmp
nop
das
ret
enter
test
cmp
roll
mov
mov
sbb
push
ret
rolb
test
adc
dec
inc
mov
ja
or
or
sarl
add
cmp
movsl
dec
sub
fidivl
fistl
test
aam
and
cmpsb
mov
ret
decl
mov
cmc
jno
orb
dec
sti
rep
add
add
test
inc
add
dec
les
push
loope
adc
sbb
xchg
movsl
and
cmp
cmp
rep
addb
ss
inc
pop
scas
mov
adc
in
cli
dec
std
and
dec
aaa
add
fnstsw
lock
xor
bound
and
mov
or
adc
in
movsb
push
adc
dec
or
and
jmp
insb
sub
add
inc
or
pop
je
inc
mov
repnz
dec
lods
stos
sbb
xor
jp
xor
add
mov
aad
or
adc
sbb
inc
dec
adc
pusha
push
js
shll
ljmp
mov
or
add
mov
aaa
shrb
jle
adc
aaa
lret
inc
pop
xor
lcall
nop
sub
sub
or
dec
shlb
xchg
or
data16
out
fsubrs
lahf
pop
enter
in
rcr
xchg
cmpsb
mov
clc
xor
add
mov
je
and
push
dec
mov
xchg
ss
xor
push
shrl
adcb
dec
pop
ds
movsl
mov
adc
push
jg
push
add
xchg
jb
add
jno
imul
cmp
add
or
sbb
ds
movsl
dec
roll
fidivrl
roll
add
mov
outsb
adc
jg
js
bndldx
ret
jbe
stos
cwtl
insl
xor
int3
movsl
pusha
out
dec
xor
and
jns
test
adc
and
mov
sbb
push
loop
cmpsl
imul
mov
push
pop
aad
xchg
sub
leave
sub
sbb
and
jbe
xor
mov
nop
movsb
or
mov
cmc
bound
sub
push
and
and
pop
inc
cmp
adc
mov
shlb
add
mov
sbb
xor
push
dec
cmp
push
inc
xor
insb
jg
rclb
adc
mov
lahf
pop
adc
icebp
stos
sub
or
xor
fidivrl
sbb
mov
aas
pop
push
mov
mov
push
or
or
aam
pop
in
lods
cmp
or
lret
js
jno
sub
add
stc
dec
add
insb
jmp
rcrl
lahf
sahf
cmpsb
jmp
adc
add
adc
jb
lahf
inc
cmp
shll
fiaddl
je
and
adc
addl
es
or
add
inc
jb
addl
mov
test
shl
je
add
cwtl
stos
iret
data16
and
ret
adc
mov
arpl
sub
cmp
inc
sahf
mov
inc
sbbb
mov
or
xchg
dec
popf
adc
outsl
cltd
sub
and
and
out
jecxz
sbb
add
jecxz
fildl
sub
cmp
dec
and
mov
and
cmp
sub
pop
push
or
xor
mov
lret
xor
or
adc
nop
xchg
mov
adc
stos
add
aam
idivl
push
subl
rclb
subl
and
xor
xchg
cwtl
jns
imul
outsl
inc
or
in
add
xor
mov
add
and
clc
pusha
fwait
lock
dec
adc
push
add
or
xor
mov
mov
mov
rcrb
push
xor
je
xor
dec
dec
mov
and
and
adc
lods
sub
icebp
cmp
push
repz
loope
inc
xchg
and
hlt
insb
lea
add
sub
sbbl
adc
pusha
ret
mov
pop
push
adc
jne
inc
subb
inc
or
lea
inc
push
or
and
imul
mov
or
jo
add
addb
add
push
orl
fbld
or
bound
les
and
add
bound
jne
or
ljmp
inc
aad
xor
push
pop
fwait
imul
add
or
out
add
cmp
les
rcl
and
dec
mov
cmp
nop
adc
mov
add
pusha
pop
xor
iret
push
cmp
xor
pop
rolb
sbb
mov
mov
lods
aaa
cmp
sub
xchg
sub
mov
push
add
mov
aad
add
fildl
rorl
and
inc
jl
jo
inc
or
xorl
pop
add
and
dec
clc
add
mov
jne
mov
rcrb
popa
sbbl
sti
fimuls
dec
int
pop
inc
add
bound
adc
or
decl
call
add
push
or
je
xor
fnsave
xchg
out
cwtl
or
shll
sbb
insb
adc
sub
xchg
ret
sbb
popa
loope
xchg
orl
push
push
sbb
add
and
cmp
jl
fistpll
movsb
dec
loopne
imul
shl
sub
cmovl
sbb
push
lcall
mov
popf
add
cmp
mov
sub
sbb
cld
or
mov
insl
test
xor
pop
dec
testl
jb
or
cmp
repz
cmp
aas
add
dec
mov
xchg
jb
xor
shll
dec
add
loopne
repnz
add
in
filds
jne
xchg
rcrl
inc
insl
lcall
les
mov
ljmp
js
add
lock
dec
inc
or
mov
ljmp
sub
mov
cmp
movsl
fstpl
mov
inc
adc
aam
inc
imul
outsl
pop
mov
rorl
xchg
sbb
test
dec
je
mov
add
mov
call
add
push
xor
mov
cmp
es
cmp
lcall
adc
pop
adc
mov
test
adc
push
add
popa
jmp
test
sub
and
mov
int3
stc
sbb
push
mov
clc
mov
shlb
imul
gs
add
cmpsb
adc
xorl
dec
inc
jb
xchg
jle
adc
cmp
mov
or
add
dec
in
push
pop
dec
cmp
jge
jl
icebp
or
adc
jge
add
push
cmp
pusha
adc
je
cmp
push
cmpsl
xor
pop
clc
out
roll
jns
xchg
je
mov
mov
jo
scas
insl
or
fs
out
sar
add
lcall
mov
xor
es
fdivl
xchg
mov
test
adc
adc
imul
call
popf
add
sub
inc
mov
add
adc
or
ljmp
test
xchg
mov
shl
sub
fldl
cltd
xor
mov
mov
xchg
fs
movsl
jno
xorl
pop
aas
inc
or
push
orl
adc
out
fimull
insb
jmp
dec
inc
mov
pop
rclb
xlat
jmp
les
leave
inc
adc
or
js
cwtl
clc
scas
sub
loopne
xor
or
mov
int
repnz
test
enter
mov
push
movsl
aad
push
movsb
mov
jecxz
adc
dec
sbb
fstps
aad
lods
stos
mov
stc
repz
cli
stc
insl
adc
popf
loop
jmp
mov
xor
outsb
cld
push
sub
dec
andb
inc
mov
shlb
push
cltd
mov
stos
test
xor
inc
mov
add
gs
mov
ret
sarb
inc
fs
mov
sbb
inc
push
push
add
push
and
sbb
sbb
daa
xor
bound
push
cli
insl
xchg
or
rcrb
lret
push
lcall
or
movsb
scas
cmp
and
cmp
sbb
mov
and
dec
lods
and
add
cltd
xor
adc
jno
and
push
and
push
inc
notl
ljmp
pop
shll
push
test
rcr
jge
push
cs
and
cs
push
sbb
or
loop
test
mov
xchg
cmp
or
test
add
aaa
inc
sbb
cmp
popa
dec
mov
loope
push
test
jns
add
pop
roll
adc
and
push
xchg
inc
mov
addr16
and
inc
dec
gs
add
call
adcl
rolb
pop
add
inc
add
enter
inc
leave
call
adc
push
or
inc
sub
sbb
subb
icebp
adc
dec
popa
pavgb
shrb
pop
pusha
ss
sbb
cltd
push
nop
orb
loope
addb
xchg
jne
test
add
scas
ljmp
mov
push
rolb
pop
lret
adc
add
nop
stc
gs
je
in
cmpb
jbe
push
jns
addb
ljmp
add
jns
jle
loop
add
mov
dec
adc
out
test
sub
mov
outsb
lods
push
push
mov
mov
leave
rolb
push
imul
ljmp
adc
int
loopne
add
movsl
xor
daa
rcl
rorl
cld
xchg
and
add
xor
aaa
add
mov
icebp
lea
cli
cmp
call
sbb
sbb
or
lods
xor
lods
pop
adc
pop
sub
imul
add
and
xchg
push
cmc
add
mov
adc
lahf
xchg
dec
xchg
cmp
mov
leave
sbbb
push
inc
inc
push
xor
mov
rolb
mov
mov
inc
xchg
mov
shll
dec
out
adcb
adc
lret
xchg
xorl
xor
dec
and
and
cmpl
and
test
orl
mov
ret
out
ret
sbb
rolb
lods
inc
dec
mov
adcb
add
xchg
fisubrl
sbb
imul
insb
cmp
dec
mov
test
pop
or
mov
add
jp
rolb
jae
pop
push
push
or
xchg
sbb
pop
dec
push
dec
jge
mov
movsb
add
add
inc
push
leave
dec
mov
pop
mov
pop
pop
fmuls
dec
pop
mov
mov
dec
das
cli
mov
push
or
push
add
out
and
add
mov
and
push
push
push
stc
adc
sub
loope,pn
mov
or
add
call
xlat
repz
mov
xchg
cs
mov
mov
jae
adc
push
xchg
mov
add
add
mov
push
ret
je
lcall
add
mov
add
add
movsl
in
xchg
xchg
cmp
out
adc
icebp
adc
adc
adc
in
or
adc
mov
push
sub
dec
xchg
add
rcrb
imul
mov
add
pop
push
movmskps
mov
sub
jb
test
or
or
pop
jl
mov
mov
clc
push
jg
xor
adcb
sbb
pushf
xor
jge
arpl
sbb
adc
push
lcall
dec
adc
adc
fwait
and
imul
faddl
add
loope
add
mov
xchg
je
pop
sub
push
rclb
mov
adcb
adc
or
or
test
orb
sbb
lcall
dec
or
fcmovbe
push
leave
and
jecxz
inc
adc
adc
adc
push
inc
outsl
and
sahf
push
mov
movsb
xchg
sub
adc
sub
sti
mov
stos
inc
inc
outsl
call
add
adcb
adc
push
xor
dec
xchg
push
dec
test
lds
sub
xchg
cmp
repz
call
inc
pop
sbb
push
mov
push
cmpb
test
aam
nop
shlb
push
adc
and
sahf
or
adc
add
pop
mov
add
ret
and
lods
adcl
pushf
push
icebp
lret
in
push
lock
or
add
or
ret
shlb
loope
sbb
mov
jg
mov
pusha
inc
pop
xchg
dec
lods
mov
mov
adc
and
iret
movsb
lea
cmp
or
rcrl
add
rorl
mov
add
xchg
mov
inc
dec
loope
call
dec
pop
add
out
sbb
and
dec
and
into
xchg
imul
ror
add
shrl
in
add
mov
cmp
imul
inc
push
push
test
cmpsl
mov
dec
mov
ret
xor
cltd
and
sub
add
jo
dec
sahf
add
out
mov
bound
scas
push
sbb
xlat
or
ret
paddusw
shr
sbb
insb
push
push
add
ljmp
loopne
add
mov
daa
jmp
xchg
sbb
pusha
add
dec
lcall
divb
adc
push
loopne
jne
ret
adc
ljmp
iret
in
sbb
or
pop
das
push
gs
sahf
test
lcall
push
pop
pop
repnz
jp
sbb
jae
stos
add
xor
sbb
out
adc
sub
cwtl
or
inc
pop
rol
xor
stos
xor
add
insl
push
adc
adc
add
and
mov
or
pop
push
push
rcrb
xchg
jns
xchg
sub
mov
mov
or
mov
add
outsb
dec
pop
loopne,pn
outsl
sbb
mov
pusha
push
fwait
push
nop
pop
imul
enter
xor
dec
xchg
xchg
cmp
or
jbe
popf
mov
mov
je
insb
inc
in
call
mov
dec
shlb
adc
sbb
mov
add
sbb
push
xor
iret
ficompl
dec
fbstp
or
enter
mov
out
or
xor
and
add
mov
inc
cmpsl
adc
push
or
adc
lods
loop
or
cmp
add
adc
and
lcall
jle
loop
cs
shrb
dec
shrl
inc
mov
push
inc
or
xor
mov
xchg
enter
aaa
adc
cmp
insb
fs
adc
les
mov
xchg
add
dec
lods
rcll
mov
jp
loopne
cmpsl
sub
sbb
cltd
jg
addb
cmp
test
cs
cmp
mov
shrb
mov
arpl
push
sub
push
pop
ret
push
sbb
add
cmpsb
sbb
inc
and
mov
xchg
xor
popf
xchg
loop
dec
push
add
loopne,pt
adcb
fistpl
shl
rclb
adc
sub
jb
subl
dec
dec
mov
popa
mov
jmp
test
mov
pop
mov
aam
xchg
or
loope
loop
xor
add
dec
movsb
mov
mov
add
pop
inc
sub
and
inc
popa
sub
and
mov
pop
das
inc
xchg
push
add
xchg
leave
and
sbb
shl
ficomps
pop
dec
sbb
adc
push
xor
inc
push
push
lret
jecxz
inc
sub
mov
add
cmpl
push
push
jno
push
leave
in
cmp
movsb
rorl
movsb
fs
adc
out
add
xchg
rcl
and
pop
ret
jl
sbb
fsubrl
leave
xor
std
repnz
fcmovb
cmp
mov
mov
sbb
bound
pop
out
arpl
mov
dec
add
ficompl
aas
jbe
add
push
cmp
stc
popa
inc
insb
add
aaa
add
sub
js
or
sbb
mov
mov
test
out
dec
push
and
pop
or
add
jno
lahf
dec
and
lock
inc
push
or
imul
sbb
sub
add
dec
xor
ljmp
mov
pop
adc
cmp
pop
xchg
add
cmpb
mov
add
mov
js
shll
pop
arpl
mov
aad
mov
inc
les
ja
add
and
lea
xor
andb
inc
xor
mov
dec
lret
ja
and
jle
add
ret
cmpsb
icebp
add
mov
xor
jnp
icebp
sbb
xor
adc
sbb
mov
mov
addb
cmp
or
dec
flds
xor
cmp
and
mov
mov
je
cli
mov
ficoms
add
cmp
or
xor
push
nop
and
outsl
push
or
xor
mov
and
fs
fmull
pop
add
or
dec
xchg
test
pusha
cmp
and
push
pop
sbbl
or
adc
insl
outsl
adc
scas
orb
dec
mov
imul
or
inc
push
or
ja
pop
rolb
mov
cmpb
stos
add
inc
adc
stos
dec
xor
gs
or
push
jg
shrb
and
and
mov
pop
je
loopne
inc
lcall
lock
jle
mov
mov
mov
fadds
enter
xchg
push
cmp
mov
push
inc
rcll
mov
inc
add
xor
lock
das
mov
arpl
jae
hlt
mov
mov
inc
mov
add
mov
dec
sbb
sub
xor
test
insb
fdiv
mov
sub
mov
mov
cmpsl
add
add
adc
stos
xor
sub
xor
add
pop
mov
sti
adc
mov
or
pop
fcomip
mov
rclb
shl
mov
adc
data16
push
push
sub
inc
push
pop
add
or
and
aam
adc
push
in
pop
stos
xchg
add
pushf
ss
add
mov
ret
daa
fwait
int3
cmpsl
lods
mov
loope
pop
dec
push
addr16
cmp
es
jg
lcall
mov
dec
stos
add
sbb
aam
dec
lret
fs
mov
sub
adcb
or
lock
mov
movsb
dec
test
cs
or
add
cmp
xchg
sbb
lock
lahf
scas
inc
mov
fwait
lret
mov
push
cli
pop
orl
bound
fldt
nop
xor
mov
dec
test
in
fmuls
add
leave
test
xor
and
adc
add
dec
inc
ss
adc
xor
std
subl
mov
jmp
push
insb
sub
fimuls
addb
roll
xchg
cmp
aas
lods
xchg
or
inc
fisttpl
or
push
cwtl
xor
sub
mov
jno
jb
xor
movb
or
pop
cli
pusha
inc
pop
cmpl
imul
adc
dec
sbb
cmp
add
xlat
out
lcall
clc
or
mov
dec
sbb
and
jbe
sub
insb
cmp
adc
add
push
or
add
loopne
jbe
adc
mov
shlb
pop
mov
dec
sub
cmp
shrb
jmp
adcl
scas
mov
add
mov
mov
adc
xchg
or
mov
and
jecxz
add
adc
inc
lea
dec
test
int3
sarb
pusha
pop
inc
and
dec
jp
xchg
sbb
or
add
mov
fisttpl
dec
or
and
add
pop
clc
xchg
mov
and
cli
add
and
adc
and
mov
adc
mov
fildll
test
test
and
adc
xor
daa
dec
lds
lea
scas
pusha
test
les
ficoml
loopne
adc
push
or
stos
aam
pop
gs
sbb
aaa
jbe
test
sub
ret
mov
pop
inc
daa
mov
sub
insb
movb
scas
cwtl
add
add
nop
adc
adc
outsb
add
cmpsb
and
push
add
push
xchg
xchg
sahf
in
and
loope
sbb
and
xor
insb
test
jmp
adc
mov
aas
inc
loope
add
push
popa
push
inc
mov
cmpsl
sub
add
shll
mov
les
inc
aaa
mov
sub
sbb
mov
les
cltd
bound
fyl2xp1
jne
add
push
pop
movsb
sbb
adc
push
jge
mov
dec
jmp
lret
adc
pop
xor
push
pop
stos
xchg
and
sub
and
ja
fwait
cmpsb
fisubl
test
dec
xlat
mov
push
jno
sub
push
adc
mov
cltd
pop
sub
cmp
mov
jecxz
or
mov
pop
scas
pop
pop
lea
sub
in
lret
and
pop
fwait
test
mov
loopne
dec
loope
or
or
adc
push
jg
adc
add
cmpsb
and
dec
fnstcw
rorb
fidivrl
pusha
popa
push
scas
out
lcall
fcoms
lret
inc
outsb
pop
xor
aas
stos
mov
jg
push
cmp
adc
add
inc
sbb
adc
jo
inc
cmp
push
dec
rorl
mov
mov
dec
xlat
outsb
and
add
inc
popa
or
add
add
daa
mov
sub
cwtl
imul
inc
jno
inc
adc
push
sub
stos
dec
pop
inc
sub
rclb
mov
addb
or
add
add
mov
ds
or
out
sahf
test
xor
test
xor
xchg
xor
mov
lds
in
xchg
mov
add
popfw
add
lods
rcl
xchg
xor
dec
sub
dec
outsb
imul
adc
stos
jp
icebp
imul
xchg
push
lea
dec
mov
shrb
inc
pop
ret
sub
inc
cli
mov
jmp
mov
lahf
pop
call
lcall
lahf
xor
sbb
xchg
test
leave
xor
inc
xor
jle
pop
shll
push
xor
xchg
and
rol
jmp
scas
aad
dec
or
cmpsl
icebp
pop
pop
testb
cs
mov
and
loope
or
inc
mov
mov
fisttpl
push
and
sub
or
fwait
mov
addb
rorb
inc
add
pop
sbb
out
aad
add
sbb
sbb
jns
das
subb
push
daa
nop
mov
lds
mov
stos
pop
push
cmpsb
sbb
or
xchg
adc
andl
pop
rolb
push
dec
jecxz
mov
inc
or
orb
sub
popa
and
push
push
sarb
cld
dec
add
sub
mov
mov
jo
sub
push
push
add
push
jle
iret
dec
call
inc
sbb
lret
imulb
mov
add
or
sub
cmpl
in
adc
xchg
pop
adc
loopne
ja
or
push
shrb
xor
loop
jo
jo
inc
dec
je
js
add
inc
jno
imul
cmpsl
dec
add
inc
and
push
or
push
fcomps
mov
lcall
and
sub
mov
adc
lds
mov
sbb
inc
js
sbb
add
shll
sub
adc
sbb
test
pop
dec
or
add
sub
and
lcall
inc
push
lret
or
inc
push
xor
stc
pusha
pop
and
faddl
push
xlat
inc
lahf
aad
es
jp
scas
lret
pop
jecxz
neg
xchg
jnp
adc
enter
push
sub
test
ret
daa
popa
lret
push
cs
jne
and
cwtl
loopne
dec
jecxz
mov
mov
jp
loope
das
idivb
or
xor
mov
cmp
push
inc
dec
inc
mov
scas
mov
test
nop
mov
cli
es
test
stc
ss
push
and
cmpb
lods
xchg
mov
pop
jo
adc
fcmovnbe
sbbl
xchg
or
sbb
mulb
mov
out
rolb
lock
pushf
mov
mov
push
or
or
xlat
xor
cs
xchg
push
cltd
push
push
sub
and
add
add
orb
int
add
fisttpl
mov
cmp
dec
sub
push
xchg
aam
push
and
or
push
or
pop
das
xchg
inc
popf
repz
adc
inc
sub
xchg
pop
xchg
xchg
test
sbbb
ljmpw
enter
inc
jne
sbb
push
test
sbb
cs
add
incb
popf
xchg
xor
push
cmp
insl
push
in
and
add
ret
rcrl
push
sub
xor
movsl
mov
ret
cmp
sbb
fwait
mov
sub
icebp
ret
pop
or
mov
add
movsl
inc
xor
in
cmp
inc
aad
jnp
aad
add
mov
push
cmp
sbb
das
repnz
and
das
xor
rolb
add
shrd
cs
mov
add
daa
or
xor
jmp
inc
push
call
aad
je
add
cmpsl
push
adc
xchg
inc
roll
sub
push
adc
inc
subl
icebp
test
and
sub
clc
xor
cmp
jle
xchg
mov
imul
jnp
outsb
sub
aam
addb
rorb
and
mov
inc
decb
cmp
in
sub
pop
adc
aam
push
add
lds
mov
rclb
nop
xchg
lret
icebp
outsb
xchg
adc
xor
xor
or
cmp
es
xchg
sbb
cmp
iret
push
push
mov
or
mov
xchg
hlt
lods
adc
cmp
fwait
cmp
push
add
jb
aas
add
iret
shlb
loop
jns,pn
add
nop
add
mov
push
insb
jg
add
sbb
stc
add
mov
cmpsl
mov
inc
push
test
mov
push
push
ret
es
xorb
add
dec
inc
ret
or
adc
inc
mov
mov
jne
ret
mov
sbb
add
out
and
cwtl
lcall
or
xor
add
inc
and
sbb
xchg
or
push
add
movsl
add
push
add
xor
mov
fldl
call
or
test
int
jmp
das
push
sub
mov
push
add
push
cmp
push
js
add
sbb
sub
add
aad
mov
cmp
sub
mov
xor
sbb
fldenv
mov
sbb
movsl
dec
push
sub
es
lahf
pop
push
pop
push
das
sti
cltd
sbb
dec
stc
lcall
cld
jae
push
jo
inc
int
sbb
adc
mov
subl
out
sub
adc
or
sub
addb
movd
jo
sub
inc
dec
inc
loope
pop
arpl
and
test
inc
push
pop
adc
les
push
rclb
addb
scas
out
mov
adcb
mov
fsubr
or
dec
call
data16
or
inc
dec
dec
add
sub
imul
mov
push
add
add
inc
pop
es
inc
addl
xchg
loope
mov
mov
inc
push
jmp
imul
xchg
rorl
sub
in
cld
add
movsb
aaa
movsb
push
sub
rol
or
push
cmp
push
je
push
test
or
or
jg
insl
sahf
jl
stc
dec
xchg
sub
push
ret
loope
xchg
xor
mov
stos
gs
add
jp
xchg
mov
sbb
and
rcl
cmp
jnp
jp
add
and
mov
out
dec
or
pop
add
mov
sbb
leave
pop
adc
ja
push
mov
mov
es
and
and
loopne
popa
sbb
fwait
adc
pusha
sub
push
jge
inc
or
sub
lahf
test
inc
sub
add
je
xor
pop
cli
loope
pop
ss
add
sub
test
push
inc
inc
sub
xor
aas
pop
cmp
pop
pop
adc
xchg
bound
ret
cmpsl
xchg
add
xchg
test
mov
add
aas
adc
in
push
jge
in
test
add
ret
mov
vpmovsxbw
or
xor
xor
ja
push
aas
insl
adcb
dec
leave
add
add
jp
add
inc
and
pop
rcrl
or
out
mov
cmpsb
rcl
xchg
aaa
insb
adc
jmp
add
subl
mov
sahf
test
jne
or
sub
testb
push
into
or
xorl
sti
int3
enter
inc
inc
xor
mov
outsb
lods
and
xor
and
dec
incl
repnz
sahf
dec
pushf
shrb
dec
pop
dec
lcall
cmpsb
jge
rclb
push
pop
push
dec
ss
cmpb
aam
mov
xchg
and
mov
push
jns
and
popf
xchg
jge
add
cmp
and
dec
rcll
xchg
add
xor
in
push
and
or
mov
cmp
mov
inc
pop
dec
popf
push
addr16
xchg
loop
sbb
cs
add
in
push
and
rorb
lea
xchg
bound
pop
jle
shlb
mov
mov
xchg
adc
add
sahf
add
adc
or
and
adc
sbb
adc
sbb
xchg
push
push
and
jmpw
bound
mov
bound
mov
sub
mov
mov
mov
mov
popa
adc
nop
psllq
mov
sbb
je
loopne
stos
sbb
incl
pop
sbb
sub
xorb
sbb
je
mov
das
and
mov
pop
add
adc
cmp
dec
les
dec
jae
add
mov
aas
rclb
cmp
mov
push
sub
sub
shll
movsb
jnp
sti
push
bound
sbb
inc
stc
lcall
loope
mov
test
inc
sbb
xor
mov
test
push
adc
xchg
pop
mov
add
xchg
and
test
push
pusha
or
adc
sub
jg
es
fwait
xchg
add
movsb
popf
iret
test
adc
lret
mov
and
inc
push
outsb
mov
xchg
stos
or
jp
jnp
adc
mov
mov
inc
xor
pushf
mov
or
fwait
aas
les
nop
inc
add
pop
pop
test
add
bound
inc
lock
fisubrs
rol
adcl
adc
lods
push
push
mov
rol
pop
xor
push
ljmp
fistps
add
popa
inc
cmp
xchg
push
cmpsb
test
es
fcom
push
add
adc
inc
sub
jmp
dec
pop
push
mov
push
or
xchg
mov
push
dec
dec
xor
dec
xchg
mov
pop
mov
push
xchg
or
add
xchg
add
xor
sub
roll
lds
sub
adc
and
adc
sub
pop
jae
fisubs
aad
je
mov
add
adc
inc
shrb
xor
and
xor
cmpsl
mov
and
in
mov
sbb
lret
add
xor
push
mov
or
test
mov
xor
je
push
adc
fistpl
es
xchg
mov
out
adc
mov
adc
xlat
add
fiadds
pop
lea
es
movsb
push
stos
sarb
fistl
adc
fsubl
xorb
mov
imul
push
sub
xchg
add
les
mov
adc
pop
or
dec
fsub
push
cs
pop
and
andl
add
mov
mov
dec
sahf
dec
xor
add
push
xchg
adc
dec
push
inc
cmp
adc
xchg
test
rclb
rol
pusha
add
dec
test
cmpl
sti
sbb
add
mov
stc
pop
inc
sub
ljmp
imul
imul
jmp
mov
mov
rol
sub
jbe
sbb
sbb
sbb
andl
mov
and
cmp
es
popf
sarb
js
mov
add
adc
sub
mov
add
add
ror
outsb
or
add
sbb
rcrl
add
sbb
ljmp
xor
mov
add
mov
lds
imul
and
mov
inc
mov
sbb
or
aam
in
mov
or
stos
inc
jge
inc
pop
or
mov
xchg
cmp
adc
rol
inc
dec
push
jg
sbb
jo
pop
jnp
push
hlt
movsl
push
xor
mov
adc
xor
pop
push
rcl
add
mov
xchg
or
ljmp
add
jo
push
andl
mov
idivl
add
mov
jno
add
punpckhdq
adc
push
dec
sahf
push
out
add
jo
mov
mov
push
les
inc
cwtl
pushf
stos
adc
xchg
push
pop
add
add
mov
dec
or
movsb
pop
out
xchg
std
inc
leave
js
bound
mov
mov
or
cs
mov
js
mov
cs
xchg
mov
jne
mov
cmp
push
add
and
les
add
ljmp
orl
push
mov
inc
in
jmp
add
cs
fsubr
cwtl
and
jmp
mov
mov
xor
nop
cmpsl
xchg
insl
pusha
add
mov
nop
push
and
push
adc
mov
cmpsb
inc
ss
mov
jns
sub
or
xor
and
sbbl
mov
mov
rclb
add
add
mov
cmpsl
adc
mov
repnz
fnstcw
shlb
xor
inc
es
push
stos
mov
mov
mov
push
dec
cmp
mov
xchg
int3
incb
adcb
mov
jmp
loopne
cmp
adc
add
jg
add
je
int
movsb
pop
jmp
xchg
cmc
loopne
aaa
mov
enter
mov
push
leave
and
dec
mov
fiaddl
mov
sub
and
stos
inc
dec
xor
jno
pop
fiadds
es
sbb
cmp
mov
push
add
add
insl
inc
or
push
push
rep
leave
mov
add
mov
xchg
or
add
popa
stos
inc
or
test
adc
add
popa
inc
mov
test
inc
jl
sbb
xor
and
inc
inc
push
add
cmpl
cmp
negl
xchg
pop
filds
stos
gs
mov
xchg
mov
adc
lahf
add
movsb
sarb
jnp
fisubl
lods
shl
ret
sbb
arpl
xor
lods
subb
mov
in
fcomps
out
xchg
jmp
add
cmp
and
xor
push
dec
inc
cmp
sbb
mov
sbb
mov
and
mov
movb
mov
push
aad
and
mov
jns
fsubrl
adc
bound
xchg
jmp
and
dec
xor
add
ret
stc
sub
push
fadd
and
sub
adcb
test
mov
cmp
dec
sub
push
dec
mov
add
shrb
pop
fs
bound
jg
add
push
lods
in
add
lods
call
or
inc
lods
mov
mov
scas
fisubl
imul
inc
mov
xor
lea
sub
add
xchg
mov
add
inc
and
mov
dec
add
pop
xlat
bound
jne
xchg
les
daa
movsb
cmpsb
popa
dec
cmp
dec
inc
imul
inc
or
mov
fwait
les
xor
adcb
lret
fs
out
push
add
iret
sbb
jnp
es
sub
mov
jo
adc
int3
cmp
mov
cmp
mov
mov
add
lret
dec
inc
gs
add
mov
ja
and
aad
add
jecxz
test
add
or
jbe
push
mov
add
xor
addl
test
lahf
mov
sbb
out
xor
adc
int
xlat
xor
cmp
jno
cmp
popa
loopne
cmp
add
and
scas
and
mov
movsl
loopne
imul
insb
push
xchg
jle
mov
repnz
aam
insb
or
outsb
pusha
das
sbb
in
add
inc
push
mov
mov
outsb
adc
aas
insb
pop
aad
aad
inc
bound
adcl
add
sbb
cmc
fwait
xchg
test
or
aaa
nop
add
inc
imul
imul
xchg
jecxz,pt
cwtl
rolb
adc
jno
addr16
cwtl
push
sub
insb
or
or
sub
jge
jbe
dec
arpl
dec
test
inc
adc
jo
rcrb
pop
adc
ljmp
xchg
sbb
movsbl
adc
add
addr16
test
in
test
cli
push
inc
or
movsb
mov
add
outsl
sahf
xlat
push
add
add
adc
test
leave
add
xorb
test
les
mov
lods
sahf
inc
enter
push
ret
lods
pusha
and
test
pop
stos
and
pop
outsb
adc
insl
loope
mov
cmpsl
add
lock
push
mov
and
gs
lds
dec
dec
add
add
adc
xchg
call
push
stos
or
sti
ret
adc
inc
inc
xor
jno
pop
roll
and
sub
mov
inc
dec
and
or
aad
dec
cmp
or
push
add
mov
sub
mov
push
pusha
and
shll
mov
push
stos
gs
sub
sbbl
rolb
outsb
xchg
push
subps
xor
outsl
mov
ret
in
data16
inc
rorb
xor
sub
add
mov
cmp
push
dec
adc
mov
xchg
lods
fwait
cli
push
inc
mov
int3
push
stc
and
dec
xor
adc
xchg
stos
mov
and
push
sub
pop
dec
test
in
les
and
or
fwait
add
or
sbb
xchg
rcrb
fcoml
mov
inc
inc
cmpsl
sbb
imul
or
mov
aam
inc
xchg
jecxz
add
add
add
pushf
mov
dec
in
adc
inc
loope
imul
dec
or
push
dec
jbe
fwait
and
subl
xchg
adc
push
adc
dec
push
and
push
xchg
and
aam
lea
mov
loopne
test
mov
imul
test
cmp
and
and
push
sbb
hlt
rcrb
sub
mov
movsb
repnz
js
cli
push
stos
push
or
orb
leave
push
sarl
jae
add
adc
sub
sarl
outsb
movsl
into
add
xchg
pop
adc
or
mov
or
fistpl
dec
fwait
adc
inc
popa
jmp
mov
mov
dec
cmpsl
insb
xor
insb
aad
dec
sbb
inc
and
push
sbb
int
shlb
mov
popf
xor
or
cmpsb
mov
mov
adc
xchg
adc
pop
fsubl
shrl
and
jne
cmp
add
jae
xchg
and
pop
lret
pusha
nop
jo
pop
add
rorb
test
push
int
stos
sub
mov
popf
sbbb
adc
push
add
and
test
and
imul
pop
xchg
adc
adc
mov
scas
add
cmp
shll
push
outsb
mov
cmpsl
pop
adc
add
int
lret
cli
rclb
mov
adc
xchg
jo
inc
adc
or
cmp
add
add
mov
jo
xor
dec
js
cs
cmp
sbbb
sub
pop
cmp
or
add
adc
adc
inc
lahf
pop
daa
push
mov
jmp
int
adc
jmp
mov
add
in
cltd
pop
lods
add
mov
loopne
mov
inc
gs
xchg
adc
pop
sub
loopne
xor
stos
cmp
push
inc
mov
sub
add
dec
push
dec
adc
sub
enter
add
cwtl
add
push
mov
cmpsb
popa
adc
push
mov
add
mov
and
pusha
adc
test
push
outsb
rorl
and
cmp
jne
mov
shlb
lds
sahf
stos
xor
and
jne
sub
inc
or
sub
sbb
jecxz
dec
sub
sbbb
lock
lahf
mov
imul
ds
or
push
xor
add
dec
mov
sbb
test
aas
push
xchg
adc
or
push
subl
xchg
mov
xor
and
add
and
or
adc
mov
dec
cs
mov
jne
inc
jl
shlb
or
mov
pusha
or
fisubrl
sub
and
xor
sub
mov
cltd
fstps
and
add
shll
dec
add
xchg
push
mov
inc
xor
data16
gs
shll
outsb
or
push
jb
or
cwtl
xchg
leave
mov
add
test
cmp
push
xchg
mov
or
pop
int
ror
xor
dec
push
repnz
adc
inc
push
out
xor
push
push
popf
add
mov
cwtl
pushf
jae
add
or
jb
inc
pop
jne
add
sbb
shrb
jl
jmp
xlat
cmpsl
mov
jb
mov
cltd
scas
fcoms
lcall
insl
add
popf
sbb
pop
ret
inc
cli
int
cld
nop/reserved
dec
add
xor
and
cmc
js
adc
push
subb
adc
or
or
rcll
adc
xchg
push
sub
mov
adcb
shrb
cmp
jge
or
adc
stos
xor
dec
push
pop
jns
push
adc
sti
xor
xor
mov
andl
xchg
adc
adc
add
and
mov
jne
xchg
add
mov
dec
cmpsb
nop
sub
mov
lock
adc
ret
pop
mov
aaa
xchg
or
stos
rcrb
mov
mov
xchg
pop
fiadds
lret
sarb
push
push
dec
adc
jbe
pop
ret
ljmp
xor
mov
add
cmpsb
add
xchg
out
mov
sub
mov
mov
pop
xor
adc
add
repnz
inc
add
jno
sbb
movsb
mov
mov
add
sub
lea
push
fdivrl
es
cmpps
push
outsl
jb
sbb
das
cmp
andb
test
movl
jge
sti
jnp
sub
rorb
loopne
iret
imul
outsb
sbb
and
es
movsb
push
adc
mov
stos
sbb
cmp
inc
enter
sbb
and
add
inc
inc
fists
xor
push
inc
sub
pop
push
pop
les
cmp
add
mov
and
ljmp
sbb
sbb
sub
adc
rolb
rclb
pop
xchg
push
inc
add
mov
cmp
popf
add
pop
pop
and
clc
xchg
pop
stos
add
inc
iret
add
mov
inc
idiv
insb
inc
mov
fdivl
addb
or
push
inc
std
test
mov
mov
adc
imulb
or
or
lods
cld
cmpsb
push
push
xchg
fistpl
adc
inc
pop
les
cmp
jo
les
mov
xlat
mov
adc
call
xor
addl
addr16
mov
sub
das
data16
mov
adcb
inc
jge
pop
xor
in
stos
xor
repz
mov
and
mov
push
mov
xor
les
leave
dec
xchg
and
in
cmp
fstpl
aam
dec
aad
sub
sbb
cmpsl
cmp
inc
aaa
pop
or
push
bound
add
push
and
mov
xchg
movsl
add
adc
int
inc
rcrb
lds
and
nop
dec
pop
loopne
adc
push
mov
pop
dec
fcomps
inc
in
scas
sbb
ret
xor
xorl
nop
push
xor
es
scas
or
add
jo
xchg
and
movsb
push
push
cmp
inc
les
imul
jge
in
ret
and
scas
pop
push
adc
cmpsb
fnstcw
mov
fnstsw
loop
mov
subb
fadds
jnp
cmc
or
add
aad
jb
dec
sbb
or
push
adc
sbb
adc
subl
push
jno
mov
mov
ja
sbb
inc
rcll
dec
enter
dec
and
xor
mov
ja
inc
and
xchg
call
or
dec
pop
ret
xchg
addb
adc
sbb
jmp
jecxz
xchg
cmpsb
sub
and
push
lock
adc
ja
and
pushf
mov
inc
push
adc
mov
add
xor
mov
dec
ret
xor
outsb
cmp
and
pop
sbb
push
rclb
push
and
adc
xchg
jns
adc
test
ret
dec
pusha
loop
icebp
inc
and
push
loop
and
scas
xor
and
pop
and
inc
stos
dec
add
cltd
sub
jmp
cmc
dec
inc
add
inc
rcll
mov
lcall
mov
adc
add
jo
adcb
pop
sarl
pop
divl
imul
ficoml
stos
add
and
dec
stc
iret
insb
push
adc
and
push
ja
inc
cmp
and
gs
out
sub
push
aaa
add
fadds
cmp
mov
loopne
loopne
inc
push
xor
mov
nop
iret
repnz
jmp
loope
nop
movups
mov
shrb
jecxz
aam
jo
insl
fsubl
pusha
orb
adc
movsb
nop
jmp
add
lret
lods
sub
xor
jnp
inc
jb
andb
roll
scas
mov
add
inc
daa
xchg
dec
mov
or
mov
sub
mov
nop
inc
cmpsl
adc
rclb
cmp
xchg
pop
lea
and
mov
sbb
pop
jg
sub
call
mov
cmc
mov
mov
dec
adc
add
andl
dec
test
jo
ss
push
adc
or
cmpsl
cli
test
lds
lahf
sbb
test
xor
jp
ret
les
jns
xchg
and
pop
sbb
lods
dec
sub
push
adc
rolb
call
test
or
adc
xor
pushf
xchg
sbbl
pop
dec
les
dec
inc
imul
push
add
adcb
and
inc
xor
test
inc
cld
cmp
lds
add
movsb
sub
and
mov
mov
dec
inc
push
jmp
pop
push
xchg
sub
jo
stos
lahf
scas
or
jne
fstps
push
xchg
adc
jne
iret
sbb
push
sub
push
mov
and
jmp
or
test
ds
mov
sbb
xor
arpl
fiaddl
faddl
jmp
adc
idivl
pop
and
nop
xor
imul
cmp
jo
in
fwait
insl
jl
add
int
dec
push
xchg
add
sbb
or
pushf
loop
mov
add
add
cltd
mov
andl
add
push
rcrl
push
push
popf
insl
push
adc
fstl
cmp
add
mov
and
jnp
jp
lods
lcall
orb
inc
popf
add
sub
dec
push
and
aam
subl
mov
nop
cs
add
pop
xor
sbb
sti
sbb
and
dec
dec
pop
push
ficoml
add
push
inc
add
addb
lret
rolb
mov
cmp
inc
add
dec
xor
and
push
mov
xor
lock
test
inc
ds
add
fisubrs
call
dec
sbb
xor
cs
xchg
leave
xchg
xchg
pop
je
mov
mov
mov
js
add
dec
outsl
adc
push
dec
cmp
push
adc
scas
mov
test
and
push
ds
jp
stos
aad
and
daa
lret
and
addb
outsb
xor
rorb
xor
gs
add
adc
lcall
fsub
imul
int
mov
cmp
xchg
add
adc
add
pusha
jae
mov
or
add
adc
mov
adc
nop
add
add
and
pop
adc
jmp
dec
insb
and
or
push
inc
jmp
mov
and
mov
add
or
test
mov
xchg
or
adc
loopne
push
xor
or
add
ret
dec
jecxz
pop
xchg
add
mov
inc
jbe
pop
or
aaa
xor
inc
mov
pop
sbb
xchg
adc
push
add
lods
rclb
inc
lds
sahf
ds
or
or
test
cmpsl
sub
pop
bts
mov
mov
and
and
fiaddl
inc
push
push
pop
test
iret
movsl
loop
sub
es
icebp
add
cmp
test
add
push
rcl
sub
out
adc
dec
sbb
jl
fisubs
jmp
jmp
mov
jbe
nop
mov
jp
sbb
mov
insb
pop
jmp
sbb
inc
lea
or
dec
lret
adc
sub
paddusb
push
aad
or
ljmp
popa
arpl
jl
daa
pop
and
push
and
push
and
adc
and
inc
inc
orb
or
mov
mov
inc
push
dec
shlb
test
cltd
or
push
xchg
ret
or
sbb
popa
lea
or
or
orl
test
je
and
fistl
dec
mov
add
enter
and
cmpsb
jnp
add
lcall
mov
outsl
adc
and
add
jo
out
xchg
push
loope
dec
push
push
jne,pt
insl
stos
inc
test
movsl
mov
stc
or
aaa
xchg
mov
pop
ret
lods
dec
sbb
scas
or
aam
mov
or
divl
decl
mov
push
or
add
sbb
cmp
pop
sbb
push
pop
and
add
xor
fidivl
xor
pop
xor
jae,pn
ja
sub
or
jo
xlat
xchg
adc
mov
mov
cmc
mov
test
pop
lock
fisubrs
leave
xchg
dec
sbb
add
test
push
shlb
ss
pop
add
nop
lcall
adc
mov
or
aam
sbb
or
dec
sbb
dec
call
lcall
mov
or
mov
dec
push
and
or
dec
orl
add
push
cmp
push
dec
mov
fwait
pop
lds
dec
faddp
xchg
xchg
and
ret
jno
cmc
lds
cmpsl
add
aam
test
into
mov
xchg
push
test
add
xchg
add
and
mov
adc
sub
push
jge
pop
or
je
cmpsb
mov
xchg
pop
test
mov
jecxz
push
jl
test
gs
adc
or
stos
subl
aam
mov
dec
or
icebp
mov
idiv
dec
and
into
insb
mov
loop
xchg
jo
js
popf
popf
int
inc
cmpsl
xor
push
inc
add
push
add
pop
out
push
jae
movsb
popf
mov
or
xchg
sbb
mov
pusha
and
popf
and
jo
sub
gs
sub
sarl
inc
addb
add
roll
mov
adc
in
daa
or
dec
inc
cmp
or
lds
movsl
inc
xor
rolb
xchg
sbb
insb
mov
sub
insb
lcall
mov
or
outsl
cmpsb
add
int
lret
loopne
mov
test
or
popa
xor
push
or
aad
sarl
push
lods
shll
adc
addl
and
lahf
inc
test
adc
cltd
add
sbb
addb
add
loopne
jno
mov
sub
xchg
xor
outsl
xchg
rorb
ss
loopne
leave
push
or
push
decl
rcrl
test
mov
add
or
add
int
lahf
cmp
ret
insb
fisubrl
cwtl
lcall
xor
in
shlb
inc
cmp
adc
push
loope
inc
test
loop
mov
add
and
push
adc
dec
mov
sub
add
es
mov
add
sbb
popf
mov
or
inc
aas
inc
xchg
neg
add
add
inc
lcall
andb
adc
mov
dec
adc
cmp
cltd
cld
or
cmpsb
sub
stos
cmp
lret
addb
inc
add
and
xchg
imulb
hlt
lret
cmp
mov
push
mov
push
add
add
adc
cmp
pusha
mov
clc
stc
fisubl
add
jno
les
lcall
and
xchg
or
fiadds
xchg
fisubl
mov
and
loopne
loope
push
adc
mov
imul
mov
rorl
pop
ljmp
mov
add
out
aaa
and
mov
insb
add
sti
add
pusha
inc
fwait
cwtl
addr16
and
dec
fdivr
in
or
push
adc
cwtl
mov
das
lods
aam
adc
inc
flds
icebp
xor
repnz
mov
mov
flds
dec
inc
pushf
mov
dec
push
mov
int3
pop
jg
push
loop
outsb
push
push
or
lods
and
pusha
loope
fucom
out
lock
push
dec
add
mov
push
cmpl
adc
mov
test
mov
test
push
rclb
and
mov
andl
outsl
iret
dec
pop
adc
popf
mov
loope
cmp
jmp
cmp
add
inc
loopne
adc
cmc
int3
xor
or
test
inc
roll
lcall
xchg
insb
rorb
andb
push
test
mov
aad
mov
mov
push
push
adc
and
pop
add
mov
add
jo
ja
adcl
popa
push
jle
aaa
sti
stc
add
fildl
es
loope
cmp
pop
inc
test
xchg
lret
pop
mov
mov
fnop
outsb
jl
xchg
orl
inc
xlat
cmp
inc
add
or
sub
inc
add
push
adc
and
push
mov
sbbb
clc
xchg
dec
xchg
pop
or
in
mov
daa
xchg
test
mov
or
cmp
incl
add
shlb
popa
sbb
push
mov
inc
in
dec
and
test
movsl
mov
cwtl
imul
inc
outsl
lcall
adcl
adc
std
xor
or
pusha
insb
pop
mov
iret
outsl
or
es
cmp
stc
adc
sub
mov
daa
cmp
cmpsb
mov
add
clc
push
andb
cmpsb
aaa
push
call
add
ds
or
test
mov
aad
fcompl
call
enter
and
les
jnp
cmc
enter
jp
rol
sbb
loopne
popw
add
pop
or
mov
mov
scas
or
dec
pop
loopne
hlt
pop
adc
enter
sbb
push
rcrb
mov
rcl
mov
loopne
lahf
inc
or
adc
jnp
cmp
and
add
pop
movsb
mov
sub
aad
jno
xchg
nop
add
or
roll
adc
xor
push
rolb
inc
adc
xor
dec
mov
sbb
scas
js
ss
and
jno
push
cmpsb
xor
test
pop
sub
and
adc
xchg
dec
ss
sub
cwtl
cmpsb
push
loope
adc
sbb
pop
push
mov
ljmp
push
lret
sub
pop
adc
sbb
jecxz
test
push
cmp
pop
les
jne
inc
sub
pop
call
test
inc
aam
int
insb
jge
shrl
out
jns
sbbb
call
push
lods
pop
lret
add
pop
push
sbb
cltd
mov
sub
hlt
sbb
push
add
shlb
ljmp
jne
or
add
jno
and
push
loope
xor
dec
push
add
jb
cwtl
imul
gs
test
cmp
inc
inc
mov
xchg
fistps
add
pop
cmpl
add
add
adc
movsl
daa
bound
fs
xchg
lret
push
sarl
add
dec
lea
inc
cmp
xor
push
or
mov
test
sbbb
pop
push
fisttpl
jp
push
rolb
jl
mov
push
pop
mov
adc
sbbb
mov
inc
inc
xor
shll
js
insl
or
aas
and
lea
inc
or
xor
ss
add
pop
and
and
mov
adc
jns
push
xchg
movsl
pop
fnsave
pop
pop
and
add
push
adc
inc
aam
sub
repnz
out
or
in
pop
lds
je
and
lds
inc
imul
or
testl
push
ds
dec
ret
rorb
add
testb
mov
sti
pushf
in
aas
daa
mov
and
mov
in
sbb
scas
bnd
inc
add
ljmp
mov
lret
inc
les
jo
mov
push
inc
mov
pop
add
or
push
inc
cs
vpsrad
dec
test
shrb
mov
or
dec
jl
add
add
pusha
popa
mov
push
add
xchg
xchg
or
xor
enter
xchg
sbb
sahf
jmp
je
push
adc
add
stos
loopne
dec
or
mov
aam
repz
xor
addr16
pop
and
xor
sbb
fistpll
inc
xchg
ds
gs
pusha
cmc
add
rorl
sub
xor
mov
bound
sahf
movsb
movsl
xor
shrb
xlat
fildll
addr16
mov
push
or
xor
leave
outsl
jns
cmpsl
cwtl
add
in
in
add
cs
dec
or
lods
cmp
fwait
cmpsb
mov
jge
adc
cmp
data16
pop
xchg
test
push
xor
iret
sub
and
inc
rcll
lcall
and
fwait
jo
or
add
or
push
jne
or
in
and
push
popa
add
and
inc
sub
dec
sbb
adc
and
mov
fsubrl
cmpsl
and
mov
in
test
add
lods
add
mov
sub
orb
imul
inc
out
xorb
mov
and
int
dec
pop
pop
pop
adc
test
lds
and
jle
imul
cmp
outsl
jmp
jns
mov
icebp
sub
pop
jbe
clc
add
es
pop
push
nop
jae
lock
filds
sub
mov
inc
repnz
gs
cmp
ret
or
pushf
stos
jne
xchg
js
push
idiv
popa
mov
imul
cmpsb
into
jo
lret
jge
dec
or
je
xchg
out
add
cltd
push
inc
scas
fimull
sub
or
and
mov
ljmp
lods
jbe
nop
test
in
insb
jecxz
sub
imul
bound
add
inc
add
pop
jno
cli
je
lret
dec
add
pop
pop
lds
cs
lcall
xor
scas
or
pusha
orb
les
xor
hlt
cmp
or
jecxz
add
dec
inc
pusha
ret
lret
xchg
leave
xchg
jmp
push
popf
push
test
insb
scas
dec
les
cltd
insl
add
jnp
push
inc
rol
cmp
add
lahf
les
roll
fwait
test
mov
dec
xor
out
pop
in
mov
cmp
add
dec
ffree
push
add
and
test
imul
lret
cmp
dec
or
xor
cwtl
push
sbb
push
xorb
in
or
dec
mov
add
sbb
inc
stos
cli
cli
mov
decl
bound
aaa
xor
nop
lods
push
sahf
mov
or
add
push
or
adc
cmpsb
roll
aad
xor
xor
jbe
mov
mov
cmpsb
loope
pop
xchg
jmp
sbb
inc
jmp
xchg
cmp
clc
mov
test
mov
mov
mov
stos
add
adc
leave
in
push
dec
sub
sbb
lods
mov
pop
adc
sub
adc
leave
inc
dec
test
mov
mov
mov
je
mov
test
sub
xor
push
rcll
dec
add
add
lret
nop
pop
pop
mov
ljmp
pop
inc
jns
or
add
inc
push
mov
loop
pusha
iret
ljmp
jge
push
pop
adc
sub
mov
cmpsl
imul
sub
and
sbb
or
stos
xchg
sub
fistps
bound
xor
fiadds
sbb
dec
call
mov
dec
test
xor
jo
leave
mov
dec
loopne
call
add
and
mov
fwait
inc
frstor
int
stc
lret
mov
outsb
cmp
js
xchg
sbb
cmp
push
push
add
mov
cli
ret
push
into
add
pushf
sub
inc
mov
mov
jno
xor
sub
pop
lds
das
adc
popf
push
lds
aas
dec
stos
push
sbb
loop
mov
scas
stos
filds
xchg
scas
push
leave
repz
dec
scas
lcall
out
clc
sbb
nop
add
or
mov
cwtl
dec
aam
shrl
mov
stos
mov
lds
add
push
adcl
adc
xorb
imul
inc
and
popf
mov
pop
nop
inc
mov
or
sub
add
xlat
or
shr
dec
mov
sbb
add
adc
add
xor
fprem
mov
addr16
pushl
mov
xorb
push
add
or
xchg
sbb
aam
xlat
ds
or
jle
pop
cmp
add
push
push
xor
test
mov
jno
mov
dec
es
negb
and
sub
xchg
xor
add
ret
ret
cwtl
orb
andl
xor
adc
scas
adc
cmp
mov
data16
push
xlat
inc
sahf
inc
enter
push
push
loopne
dec
fmuls
jl
nop
mov
or
mov
push
imul
mov
and
sbbb
adc
push
adc
xchg
pushf
mov
aam
add
pop
adcb
addr16
inc
pop
sbb
dec
pop
adc
pop
inc
inc
push
ret
xchg
jmp
lret
pop
sbb
add
xchg
cmp
inc
sti
andl
add
dec
jae
aad
shrb
xor
addb
inc
outsl
sbb
leave
xor
xchg
imul
popa
pusha
mov
out
je
jo
ss
fistpl
test
stc
cmp
clc
lds
icebp
mov
inc
cmpsl
pop
lock
pop
daa
gs
lahf
mov
add
test
arpl
jo
and
mov
popf
mov
outsl
and
lret
je
inc
jno
xchg
pop
out
adcb
ror
clc
or
add
add
ret
xor
jmp
push
mov
test
jbe
xchg
addl
inc
test
imul
sub
or
jecxz
je
push
xchg
orb
inc
cltd
cmp
test
stos
inc
xchg
jo
add
and
sub
mov
dec
or
std
filds
cld
pop
add
or
jecxz
je
adc
fmull
mov
sub
add
int3
leave
inc
rolb
push
mov
add
and
or
xchg
and
rolb
enter
ret
and
xchg
xor
es
push
inc
rclb
in
jge
pop
push
orb
dec
test
push
shrl
push
push
das
dec
or
adc
push
jns
and
dec
sub
es
mov
dec
add
add
add
and
mov
xchg
cwtl
sub
and
cltd
imul
xchg
mov
or
sti
shlb
jmp
lcall
dec
or
imul
push
mov
push
sub
cwtl
rcll
or
out
push
inc
xor
cltd
xchg
mov
add
test
adc
inc
lods
fstpt
out
mov
pusha
mov
mov
sahf
push
or
pop
push
xor
es
xchg
add
jae
stos
fwait
mov
or
add
xor
cmc
mov
xor
pop
mov
pop
out
push
sbb
popa
int3
nop
addr16
xchg
xchg
sub
dec
je
daa
and
adc
hlt
into
inc
jnp
bound
adc
cmp
div
cmp
mov
sub
and
adc
mov
xchg
mov
push
and
inc
jnp
scas
add
add
or
or
in
sbb
es
inc
dec
mull
cmp
addl
mov
push
xor
add
push
cmc
push
addb
push
popa
and
rolb
dec
pop
loopne
dec
lcall
add
cli
xor
adc
out
push
adc
repz
movsb
icebp
jmp
rol
inc
dec
cmp
mov
lea
mov
int
call
mov
fisubrl
pop
repnz
or
or
loopne
or
movsb
test
mov
mov
or
cmp
aam
stos
mov
mov
add
mov
in
mov
push
lahf
lret
cmpsb
dec
aad
push
imul
or
jecxz
test
or
xor
cmp
xor
int3
aad
repz
mov
rolb
push
movsl
in
rorl
or
mov
addl
xchg
cmp
xchg
inc
sub
and
rcll
icebp
mov
lds
mov
shlb
dec
or
orl
arpl
xchg
adcb
xchg
adc
clc
mov
addb
pop
inc
icebp
sbb
popa
cmpl
sub
ret
inc
adc
nop
test
dec
dec
inc
fnsave
nop
xchg
sub
nop
outsb
imul
push
inc
push
orb
fsubs
or
adc
inc
cmp
inc
js
mov
movsb
adc
aas
jp
xchg
cmp
xchg
stos
cmp
movsb
rclb
fs
movsb
test
orb
add
fsub
loopne
imul
subl
mov
cld
adc
mov
add
test
stos
sbb
frstor
loop
inc
clc
jg
jno
cld
invd
sub
cmp
jb
test
cmp
inc
fstpt
push
pusha
scas
rclb
mov
xor
subl
mov
popa
cli
mov
and
sub
imul
shlb
sbb
add
mov
adc
jno
cmp
push
xchg
or
add
cmp
or
shlb
or
push
xchg
arpl
add
cmp
xor
je
and
jmp
flds
jb
movl
outsb
popf
dec
push
xor
adcb
sbb
test
int
ret
push
jno
sarb
fbld
mov
mov
push
fs
scas
test
test
movsl
jg
inc
dec
test
inc
lods
sub
cmpsl
loopne
mov
cmp
daa
dec
dec
sbb
mov
push
insl
lret
dec
jae
add
add
dec
adc
imul
rorl
push
push
test
push
add
cli
es
pop
sub
sub
xor
xchg
jmp
enter
push
xor
int
lret
lcall
inc
cmp
jp
aas
push
sub
ret
sub
lods
or
pop
xchg
sub
into
and
push
xor
inc
add
adcb
sbb
cld
add
shrb
sub
jl
pusha
sbb
adc
mov
aaa
pop
cmp
es
mov
pusha
mov
outsb
and
or
xchg
add
inc
mov
loope
pop
lods
mov
into
cmc
push
test
cli
mov
or
adc
pushf
sbb
lahf
jnp
add
adc
dec
daa
xor
pop
pop
jecxz
mov
xchg
rcl
add
mov
sbb
sbb
mov
mov
sbb
fwait
and
jmp
je
sbb
cs
aas
add
jno
sbb
lret
inc
mov
pop
mov
insb
inc
ret
push
and
mov
xorl
add
and
in
iret
mov
add
mov
sbb
and
icebp
sub
fwait
sub
inc
add
jae
jmp
push
push
mov
insl
ret
push
adc
popa
out
and
or
nop
addr16
cltd
push
jge
mov
bound
sbb
xchg
xchg
xchg
aam
adc
mov
jne
adc
xlat
cmp
cmpb
or
andb
je
rorb
test
ja
sub
and
inc
cmp
orps
fstpl
xorb
jge
fisttpl
call
pop
inc
mov
ret
test
pop
sub
xchg
mov
and
mov
inc
pusha
pop
cmpsb
popa
inc
dec
pop
fwait
jmp
xor
or
or
pusha
and
dec
inc
sbb
lock
call
test
inc
adc
scas
sbb
std
es
movb
and
push
flds
jl
shll
jo
lcall
sub
xor
adc
in
out
insl
int3
adc
add
aas
push
xchg
adc
push
test
aad
dec
cmp
mov
pusha
push
imul
or
ja
add
mov
inc
push
or
repnz
bound
jl
mov
lcall
leave
or
fs
mov
pushf
xchg
addb
aad
cmpsb
push
mov
mov
scas
push
bound
xor
or
adc
ss
std
adc
bound
jns
mov
push
xor
outsl
cwtl
pusha
ret
pop
xor
sbbl
fldcw
add
xor
or
fmuls
mov
cmp
push
fstl
push
je
jmp
decl
pop
add
sub
jmp
loope
mov
test
rolb
in
mov
xchg
ret
push
ret
and
xchg
call
dec
call
add
and
outsl
stos
and
mov
inc
sbb
or
pop
in
or
and
mov
es
test
sbb
dec
sbb
mov
stc
es
dec
push
test
sub
call
enter
stc
mov
cmp
inc
xchg
mov
mov
sub
pop
arpl
xor
mov
subl
test
les
or
lea
push
add
movsl
mov
and
ja
mov
push
dec
push
sbb
leave
and
add
cltd
shlb
and
xor
test
push
add
iret
mov
sub
add
test
inc
pop
pop
lcall
sti
xchg
dec
adc
jecxz
add
stos
je
shll
les
pop
xchg
jmp
ljmp
lret
popa
xor
iretw
jnp
pop
lcall
and
mov
or
sahf
cld
jo
stc
pusha
ret
cmp
push
sti
outsb
sbb
push
cmp
addl
jne
mov
add
mov
jle
mov
and
add
mov
ret
adc
mov
pusha
sbb
das
pusha
mov
jbe
cmp
add
mov
aad
pop
ds
add
push
cwtl
xor
mov
loope
aad
xlat
or
add
stos
dec
add
push
dec
pop
addl
xor
dec
xchg
sbb
shll
inc
push
adc
dec
push
dec
rolb
jp
mov
inc
sbb
mov
add
or
arpl
nop
xchg
pop
adc
roll
add
pusha
add
pop
adc
adc
jo
xchg
ret
sbb
xchg
mov
es
or
fwait
jns
mov
mov
mov
xor
mov
mov
ficoms
loopne
in
ds
mov
mov
in
mov
and
push
int
dec
lcall
test
pushf
cmpsb
loopne
push
and
jl
mov
mov
or
or
sbb
scas
inc
mov
inc
test
data16
loopne
or
je
adc
or
xchg
sub
jge
loopne
mov
mov
sbbl
out
and
dec
pop
push
push
pop
add
adc
mov
xor
push
inc
sub
xor
xor
in
cmp
sub
inc
arpl
stos
cmpsl
jns
jno
mov
dec
mov
inc
into
fildl
xchg
arpl
test
mov
adc
add
sbb
loopne
std
cmp
or
shlb
push
jnp
fadd
add
inc
dec
jae
add
jle
jg
rcrb
dec
add
adc
sbb
jno
cltd
pop
adc
adc
xchg
push
sbb
inc
and
push
xor
adc
dec
ss
xchg
pop
and
xchg
add
imul
push
mov
int
adc
or
mov
mov
sub
or
punpckldq
xchg
xor
mov
leave
add
fwait
lods
insl
xor
clc
adc
ret
movb
jb
aam
mov
adc
shll
pop
fimull
insb
cmp
push
les
shrb
add
add
mov
push
scas
add
jmp
dec
sbb
sub
pusha
stc
lds
mov
add
push
jb
xchg
adc
dec
inc
cmp
jmp
inc
cmp
mov
cmp
or
push
inc
fadd
mov
push
sbb
adc
and
or
cmp
sub
ret
sbb
popa
test
sbb
clc
add
xchg
cmp
shlb
push
roll
and
std
mov
lcall
push
pop
test
roll
and
in
xchg
xor
push
xor
clc
orb
inc
mov
sbb
push
adc
lods
push
lret
mov
xchg
jno
add
scas
add
repnz
aad
xor
imul
nop
sub
sub
mov
loopne
xor
jl
jb
movsb
add
iret
xchg
push
loop
or
sbb
adc
and
add
mul
mov
les
dec
add
dec
sbb
imul
lods
add
or
aaa
sbb
push
xor
cmp
jecxz
push
sbb
adc
jb
es
adc
stc
inc
and
sub
fildl
dec
lock
mov
fs
push
rolb
or
rorb
pop
gs
pop
in
sbb
xor
add
imul
cmovg
loopne
adc
flds
inc
add
dec
movsb
xor
aad
sub
jmp
sub
or
and
add
or
pusha
lret
cmpsb
and
xchg
sbb
shlb
pop
clc
addr16
movsb
jno
out
shll
adc
mov
xor
test
test
inc
jmp
aas
pop
jne
sub
xchg
jbe
jecxz
shlb
es
add
add
mov
dec
andl
or
adc
jge
jg
sub
insb
ljmp
and
sub
scas
push
xchg
pushf
int3
xchg
andb
pop
and
sarl
sub
adc
lock
or
sub
in
lods
add
lods
push
jl
add
xchg
mov
sub
mov
fistps
pop
cmp
mov
xlat
push
add
and
mov
push
in
fldt
jp
push
or
jecxz
dec
add
test
lcall
dec
xor
adc
shrl
or
les
push
adc
adc
int
adc
cltd
xchg
sbb
add
adc
jno
sbb
popa
jecxz
ljmp
xchg
mov
add
mov
sub
add
or
mov
add
sbb
stos
hlt
inc
push
es
jl
inc
or
xor
mov
sub
push
in
test
pop
xlat
and
inc
inc
adc
inc
add
outsb
xchg
add
lods
pusha
loope
in
jmp
and
aaa
xor
loopne
inc
mov
mov
cs
or
xacquire
and
push
add
sub
or
addr16
cs
and
dec
xchg
repz
addb
cmpsb
sbb
dec
mov
or
lahf
nop
flds
jge
push
add
sub
xchg
mov
les
sub
and
scas
ljmp
xor
push
rolb
xor
jecxz
xor
xchg
add
imul
cmp
imul
inc
pop
and
popa
xor
inc
push
mov
add
scas
sbb
xor
adc
movsb
xor
fs
jp
xchg
push
gs
dec
sarl
adc
loope
inc
push
enter
push
inc
xor
xchg
xchg
push
sub
inc
or
add
fs
pop
sarb
sub
add
pop
test
popa
jle
inc
mov
mov
sub
xchg
or
and
and
or
jnp
pusha
xor
adc
sub
or
imul
mov
repz
and
push
orb
inc
in
cmp
add
mov
xchg
sbb
xor
mov
sub
jmp
shll
arpl
push
int3
aas
inc
shr
cs
shlb
loope
mov
testb
push
hlt
scas
mov
mov
loopne
dec
mov
mov
mov
adc
mov
and
sub
frstor
mov
jnp
sub
add
push
sub
add
out
movsb
xchg
sbb
adc
inc
test
fnsave
xchg
mov
pop
sub
test
bound
pusha
dec
cli
pop
jle
add
cwtl
and
mov
push
cmp
inc
inc
pop
cmp
pop
inc
popa
xor
and
in
test
roll
in
xor
outsb
add
subl
lahf
add
add
jne
mov
mov
mov
in
and
xor
cmpsb
dec
das
int3
adc
push
inc
xor
xor
add
pop
push
orb
push
and
and
sub
lea
or
mov
sub
adc
imul
leave
xchg
push
aam
cltd
push
jge
inc
inc
sub
js
mov
dec
pop
jge
dec
and
push
adc
std
fwait
cs
lock
cmc
or
fisubrl
sbb
pop
das
pop
or
cmp
andl
and
ds
aam
addr16
out
push
pop
xor
or
jl
xor
lcall
imul
fistpl
pop
je
mov
out
mov
push
mov
test
ret
stos
inc
rolb
insl
ds
pop
pop
jb
pop
jecxz
inc
add
xchg
orb
enter
stos
cmpsl
add
mov
or
mov
mov
sub
cmp
and
or
js
add
fimull
inc
inc
add
pop
mov
sbb
and
or
aaa
inc
xchg
xchg
inc
adc
mov
stos
andl
mov
mov
inc
fwait
sbb
and
loop
jno
add
or
mov
aas
or
nop
data16
imul
mov
adc
adc
sub
nop
and
mov
cmp
repz
cmp
push
or
ror
push
test
xchg
inc
call
mov
mov
loopne
fidivrs
xorb
and
popa
pop
mov
add
in
cmp
mov
inc
jo
fwait
rorl
mov
jl
add
xchg
jno
clc
pmuludq
aas
dec
sub
daa
pushf
call
ret
adc
movd
decl
and
dec
popf
sub
jle
inc
jb
xchg
add
adc
shrb
cmpsl
add
loopne
test
sub
inc
js
add
call
loope
mov
mov
add
adc
ret
or
sbb
aad
cmp
into
imul
sbb
add
dec
xchg
dec
sbb
enter
or
jb
dec
mov
dec
stos
pop
xchg
add
jnp
pop
or
add
cmp
and
inc
mov
or
movsl
inc
or
pop
push
xor
mov
add
mov
and
xor
daa
js
and
mov
shl
or
inc
mov
mov
lds
fiaddl
popa
push
inc
adc
in
mov
jle
lds
bound
popa
inc
inc
lret
pop
dec
xchg
addb
rolb
shrl
movsb
jno
mov
mov
in
push
sub
lods
dec
and
adc
push
nop
jno
sub
or
jge
mov
mov
aam
push
inc
or
inc
jmp
mov
clc
pop
loope
add
sahf
mov
roll
xorb
mov
inc
cmc
sbb
and
fimuls
mov
sbbb
add
lea
js
nop
push
mov
adc
es
ljmp
daa
push
cwtl
sub
lret
push
xchg
fs
mov
xor
loop
sub
push
add
pop
enter
test
es
aas
push
and
adc
xchg
pusha
or
pusha
or
add
arpl
lods
mov
xor
test
test
adc
add
sub
add
mov
mov
push
mov
nop
arpl
mov
xor
data16
or
sub
push
cwtl
inc
mov
pop
mov
dec
inc
or
js
mov
lds
mov
sub
mov
inc
xchg
jns
sbb
loope
loop
roll
push
and
lds
imul
lea
xchg
and
xor
or
lahf
pop
inc
xor
dec
add
sbb
push
pusha
xor
repnz
xchg
xor
add
or
inc
lret
jne
dec
add
js
js
push
aas
xor
sub
pop
inc
enter
mov
movsl
pusha
push
jmp
test
std
adc
js
popf
sbb
nop
in
mov
or
testb
nop
sbb
adc
push
lds
sub
adc
pop
or
imul
dec
xchg
adc
fwait
dec
dec
rclb
dec
sbb
adc
jge
xchg
mov
add
and
or
adcb
mov
add
add
push
inc
xchg
pop
mov
or
or
mov
add
and
xchg
movsb
shlb
cmp
and
inc
inc
and
push
add
xchg
add
inc
sbb
fwait
xchg
cmp
gs
ja
in
sbb
rcll
dec
push
and
rcr
dec
jmp
xchg
cs
ds
or
imul
ret
pusha
imul
inc
icebp
addl
push
push
mov
xchg
insb
ds
rolb
mov
test
adc
dec
imul
movups
push
test
pop
mov
addr16
int3
or
push
leave
sbb
mov
adc
add
push
inc
int3
jecxz
popa
cmp
stc
mov
mov
pop
push
dec
stos
stc
clc
inc
mov
mov
jo
adc
adc
inc
pusha
movsl
dec
push
cmp
mov
mov
push
inc
push
add
pushf
cmp
xor
adc
adc
push
xchg
movsb
dec
ret
dec
add
or
lods
or
enter
inc
and
push
aad
xchg
and
mov
push
mov
adc
xor
push
fadd
inc
daa
out
and
pop
jno
mov
dec
adc
mov
or
outsl
rolb
push
pop
adc
and
adc
lcall
in
jmp
aad
dec
pop
mov
femms
adc
js
outsl
in
add
or
adc
jecxz
xchg
nop
imul
cld
and
iret
or
lret
call
rclb
sub
jno
cltd
sbb
nop
push
lock
mov
xchg
mov
sbb
add
and
aas
loopne
stc
add
mov
scas
add
int
push
cmpsb
jle
sub
test
sbb
add
call
push
xchg
std
adc
insb
lahf
xchg
or
fs
adc
and
push
fwait
mov
add
mov
or
adc
sbb
inc
dec
xorb
push
testb
push
cmp
fucomip
push
cmp
cmp
inc
inc
fs
inc
add
add
mov
adc
sbb
inc
addr16
dec
jne
add
fadds
ret
outsl
jno
or
jno
and
addr16
add
nop
int3
jae
lods
push
lea
add
leave
repz
add
ret
jecxz
push
mov
addb
mov
int3
mov
mov
bound
xchg
inc
outsb
lret
shl
add
aad
xorb
add
repnz
ljmp
loopne
mov
incl
jo
test
add
cmc
imul
pop
ds
and
add
dec
jb
and
xor
add
icebp
sbb
popl
lea
mov
dec
aad
push
mov
cmpsb
mov
push
loope
enter
stos
push
xchg
cmp
mov
xor
lret
fistpll
sub
popf
xchg
cmp
push
jg
inc
adc
loopne
sbb
test
push
and
add
fcom
sub
call
xchg
xor
mov
xchg
push
fisttpll
push
movsl
and
and
test
xor
sub
lcall
push
jo
ret
pusha
nop
movsb
add
es
lods
push
sbb
or
and
rsm
xchg
add
dec
and
add
sub
inc
xor
fmulp
iret
mov
mov
pop
or
xor
push
sub
and
movsb
push
and
and
or
mov
adc
hlt
stc
adc
lea
mov
pop
jl
hlt
inc
leave
out
movsl
dec
test
insb
mov
xchg
movl
xchg
xchg
popf
xor
sbb
pop
lahf
jl
shrl
xor
loopne
cwtl
fmuls
xadd
fmul
hlt
or
sbb
out
gs
jecxz
aas
adc
adc
and
inc
adc
and
inc
jns
fmuls
out
orl
dec
mov
and
mov
pushf
nop
into
xchg
dec
shrb
cs
fldl
loopne,pn
cmc
jo
mov
jo
add
dec
pop
and
pusha
push
mov
dec
and
mov
cmc
je
ss
nop
pusha
push
sbb
or
dec
lret
sbbb
and
push
outsl
std
cmc
xor
rolb
or
add
and
push
mov
add
add
adc
push
dec
test
inc
adc
cmpsb
push
or
sub
add
dec
fwait
lret
adc
mov
add
adc
mov
out
dec
xor
mov
rorl
ret
jecxz
xor
inc
cs
andb
push
sbb
out
aas
adc
xor
push
add
jne
sbb
sbb
fwait
push
adc
andb
sbb
roll
adc
lahf
inc
inc
xor
mov
ret
add
out
nop
lods
data16
ret
inc
mov
sbb
scas
mov
add
fwait
add
setl
add
xchg
lock
and
and
movl
test
and
mov
xchg
ds
mov
dec
mov
mov
leave
xchg
int
xor
add
push
lea
cmp
mov
cwtl
cmpsb
and
stos
outsb
or
sbb
test
add
pop
mov
mov
dec
inc
or
lret
xchg
push
add
sub
jne
or
ss
pusha
and
or
push
xor
fldl
jbe
xchg
xor
int3
mov
sub
ret
bound
mov
pop
dec
aam
xchg
ror
inc
push
xchg
popf
dec
push
dec
cli
popa
add
adc
mov
test
insb
movsb
lret
dec
cmpsb
cli
adc
adc
mov
movsb
cli
aam
lcall
js
dec
stos
sbbl
add
cmc
mov
adc
and
sti
int
pop
xor
fsubs
imul
scas
jbe
xchg
idivl
push
call
icebp
add
aaa
fisubrl
scas
scas
add
shlb
cmc
push
inc
roll
call
push
xor
push
cmp
int
mov
pushf
push
jecxz
mov
call
jmp
inc
sbb
ret
mov
es
push
xchg
cmpsb
ljmp
mov
pop
mov
syscall
inc
loope
adc
sbb
popa
addb
adc
add
gs
rorb
dec
jne
sub
and
divl
xor
test
lods
loope
dec
adcb
test
clc
pop
leave
jmp
iret
mov
pop
insb
cmp
xor
push
movsb
adc
jno
jmp
and
xlat
fadds
aam
or
add
pusha
arpl
jg
aad
pop
loopne
rcrl
nop
sbb
and
loopne
sub
dec
push
stc
push
or
push
sub
and
cs
jae
rcrl
push
jne
das
push
rolb
shrd
jmp
mov
and
push
mov
lret
int3
inc
sti
addl
pop
add
add
cmc
mov
popf
leave
pop
push
mov
push
addr16
mov
inc
popa
or
pop
repnz
lret
aaa
inc
mov
add
fimull
push
adc
pop
inc
push
rcrl
inc
shrb
lea
mov
and
add
lcall
jae
sub
dec
nop
or
out
jecxz
adc
sbb
add
lods
and
test
add
mov
je
cmpsl
insl
das
push
sub
push
xchg
scas
test
scas
rolb
xor
jo
dec
pop
xchg
push
pop
or
or
and
inc
and
inc
xchg
adcb
movsb
enter
mov
idivl
dec
addl
andl
xor
lret
xchg
mov
in
pop
sarb
mov
fwait
pop
mov
xchg
xchg
sub
fdivs
xor
call
add
sbb
loop
sahf
mov
aas
push
test
inc
xchg
fmul
mov
or
and
mov
add
mov
incl
daa
subl
mov
xor
xor
cmc
mov
leave
pusha
xor
iret
fidivrl
aam
push
xchg
scas
dec
mov
inc
pop
inc
rcll
adc
fsub
sahf
xchg
push
inc
mov
pop
adc
add
or
or
cmp
adc
sub
mov
popf
aad
movsl
or
mov
bound
adcl
scas
xchg
dec
xor
rclb
add
jg
roll
add
test
jl
xchg
pop
add
add
pusha
fstpl
add
xor
xchg
adc
cmovne
rcl
push
insl
in
or
arpl
stos
cmp
and
imul
lea
cmp
fildl
testl
and
ljmp
jno
add
and
repnz
dec
push
mov
jmp
cmp
or
adc
orb
hlt
sbb
lret
mov
lcall
arpl
xchg
adcb
sbb
iret
in
push
pop
jle
sub
aad
decl
or
push
repnz
push
and
mov
xor
mov
outsb
and
sbb
test
pop
pusha
adc
add
xor
aas
pop
mov
push
sub
andl
nop
cmpsb
and
adc
hlt
add
sbb
xor
sub
inc
xchg
dec
inc
dec
inc
mov
cmp
imul
les
sub
repz
pop
add
push
inc
add
xchg
inc
faddl
push
cli
out
fldcw
pusha
mov
add
sub
stos
sub
mov
arpl
icebp
fcoms
lret
mov
fwait
inc
stos
lcall
dec
fisttpl
ret
dec
mov
ret
push
mov
xchg
les
daa
inc
and
pushf
dec
add
jno
sbb
xchg
mov
xchg
ss
mov
stos
add
xchg
push
pop
shrb
stc
mov
test
dec
xchg
inc
sub
aaa
mov
xor
xchg
scas
add
and
add
jo
xchg
cmc
cmc
das
mov
xchg
fsubp
sbb
inc
mov
inc
mov
in
sbb
mov
push
cmpsl
stos
pop
cmpsl
push
xor
aas
jp
inc
inc
xlat
add
mov
adc
rolb
or
push
fnsave
inc
cmp
cmp
inc
lods
push
dec
shll
aaa
cmpsl
or
adc
jns
add
inc
stos
shlb
popf
and
sar
and
pop
rolb
mov
mov
or
ret
mov
cmp
adc
mov
inc
add
or
jne
test
inc
and
js
scas
insl
test
and
int3
fists
aaa
push
mov
mov
pop
and
enter
dec
xchg
and
or
inc
or
pop
adc
cmp
movsb
int3
gs
xchg
adc
mov
loopne
adc
cs
nop
mov
mov
mov
add
pusha
das
push
test
test
add
add
xor
push
test
sbb
xchg
mov
add
mov
scas
mov
aam
mov
jnp
out
mov
mov
push
xor
lcall
pop
pushf
mov
pop
test
add
add
decl
dec
or
add
cltd
lea
sub
jle
xchg
ror
sbb
popa
test
cmpb
and
test
imul
out
pop
stos
mov
mov
cmp
in
lcall
mov
pop
or
daa
cltd
mov
pop
nop
pop
je
push
push
sub
sbb
pop
inc
adc
cmp
adc
nop
inc
sbbb
adc
dec
lcall
andl
inc
add
test
add
inc
jmp
pop
ret
mov
lcall
xor
movsb
adc
and
lahf
xor
push
inc
mov
out
mov
stos
adc
test
xchg
cmp
sub
and
and
mov
adcb
dec
repnz
jecxz
xchg
push
fiadds
inc
pop
sarb
push
sti
aad
rcl
mov
stos
in
sti
frstor
dec
mov
nop
testl
mov
sbb
pop
cmp
jmp
js
jmp
mov
xlat
xor
jo
xchg
push
mov
sbb
push
dec
and
xor
dec
inc
or
mov
or
inc
out
sbb
aas
pop
add
adc
aam
inc
ret
pop
repnz
inc
test
inc
mov
cmpsb
add
imul
mov
add
daa
inc
shrl
inc
adc
or
mov
cmp
fildl
and
inc
and
sbb
xor
test
cmp
push
test
jo
and
test
sbb
bound
out
sbb
add
cltd
pop
pop
push
inc
sub
add
int3
bound
push
sub
dec
adc
inc
sti
or
add
stos
mov
push
shrb
sub
pop
ret
mov
sbb
outsb
inc
mov
pop
js
xchg
clc
sbb
inc
subl
out
adc
psubd
bound
adcl
cs
das
imul
add
and
xor
and
enter
xchg
aad
pop
lret
mov
add
push
push
fucomi
adc
daa
cmp
mov
gs
add
inc
xorl
cli
test
cmc
inc
push
cmp
xor
lods
testl
pop
and
add
pop
shlb
mov
addb
add
aas
aas
push
leave
xor
and
and
insb
add
xor
mov
lret
and
and
and
sub
mov
adc
sbb
leave
addr16
jo
xor
gs
inc
ret
mov
inc
loope
sbb
xor
add
cmp
mov
push
fistpl
in
add
sti
or
decl
mov
adc
and
pop
out
fs
faddl
addb
dec
pop
pop
rolb
repz
push
stos
rolb
imul
inc
ret
xchg
rolb
les
jnp
inc
shr
dec
out
mov
cwtl
xor
or
or
data16
push
push
lock
mov
sub
mov
dec
shll
inc
rorb
nop
nop
or
fdivrl
or
push
or
sub
cld
mov
add
xchg
sub
int3
and
loope
dec
cmp
mov
ja
in
add
xchg
dec
dec
pop
sub
stos
or
adc
mov
std
pop
aad
bound
cltd
mov
sbb
outsl
mov
sbb
or
jp
sub
ljmp
rolb
adc
push
sub
cmpsb
shlb
filds
nop
dec
adc
sbb
jnp
ret
xor
mov
dec
movsl
xchg
out
or
or
roll
gs
add
pop
rcrl
mov
sub
test
ret
mov
and
mov
int
popa
or
xchg
xor
jno
xor
dec
mov
adc
xchg
movl
mov
push
les
mov
cmp
xchg
cmp
stc
mov
add
add
test
scas
fs
orl
inc
xchg
adc
inc
add
adc
dec
ds
xor
fwait
lock
out
adc
popa
xor
testb
pop
add
cmp
orb
pop
xorb
out
xchg
nop
adcb
xchg
jle
les
adc
push
inc
mov
mov
rcrl
add
lret
add
jae
xor
xchg
add
mov
test
imul
jno
pop
sahf
mov
sub
sub
in
and
ret
lds
dec
and
hlt
idivl
pop
pop
repnz
loop
cld
adc
ljmp
adc
jl
clc
push
add
dec
jmp
lds
orb
sti
xor
or
adc
sbbb
bound
test
clc
sahf
push
icebp
add
push
push
jl
aas
adc
add
filds
incl
and
sbb
cmp
cmpb
outsb
mov
cltd
in
or
inc
xlat
mov
mov
loope
inc
pusha
adc
ss
inc
stos
adc
jb
mov
dec
push
and
pop
rolb
lock
pop
add
mov
add
fwait
xor
movsl
lods
faddp
or
xchg
test
inc
adc
jns
push
sbbl
inc
aad
xor
orl
sbb
push
push
push
mov
pop
pop
mov
or
sub
xor
and
adcb
pusha
pop
pop
jo
enter
push
sub
jb
jbe
xor
add
add
dec
and
or
push
pop
rclb
in
cmp
dec
mov
call
and
adc
xchg
xor
jo
cmpsl
xchg
pop
jecxz
dec
aad
jbe
push
or
xchg
push
leave
stc
mov
adc
test
inc
add
jge
cmp
add
or
inc
shl
and
inc
dec
push
daa
mov
sbb
mov
mov
xor
shl
pop
int
ret
imul
adc
adc
jae
xor
iret
mov
inc
push
das
and
cli
jnp
inc
popa
dec
dec
jo
add
hlt
jns
addr16
insl
xlat
sti
incl
and
and
add
adc
add
mov
test
stc
sub
mov
xor
adc
add
movsb
xor
lret
ret
lds
mov
lret
mov
add
les
or
cmc
xchg
jo
inc
mov
pop
mov
lds
mov
fs
test
cli
or
xchg
pop
pop
rcll
test
push
sbb
adc
call
inc
lea
adc
xor
inc
dec
push
inc
xchg
popf
xchg
lea
adcl
dec
pusha
add
and
leave
dec
stos
jb
xlat
push
and
sbb
cmp
adc
inc
popa
shlb
dec
imul
fwait
lahf
cmp
cmp
enter
mov
imul
mov
mov
roll
sbb
mov
subl
push
loop
or
xor
mov
rclb
push
mov
pusha
cmp
lar
xor
push
subb
inc
sbb
jmp
cmp
orb
fimuls
add
popa
fisttpl
push
push
add
inc
xor
xor
add
addl
dec
jmp
sbb
roll
inc
je
adc
stos
xchg
or
into
cmpsl
lea
test
ja
sbb
leave
push
fcmovnb
mov
mov
or
inc
and
dec
cmp
xor
push
dec
adc
add
sub
aad
nop
test
pushf
push
ret
or
aas
or
stos
sarw
fistl
nopl
or
push
stos
xor
adc
pop
jae
int3
rcll
add
or
cmc
or
fildll
or
jne
call
ret
leave
inc
test
inc
pop
push
outsl
pop
pop
jb
hlt
adc
or
loopne
adc
mov
mov
cwtl
aas
ljmp
pop
add
inc
add
sbb
add
icebp
jnp
push
xchg
or
push
bound
nop
push
xor
mov
push
inc
xchg
das
fcomps
cmp
add
sub
loop
mov
jno
sbb
push
mov
test
sbb
bound
mov
mov
nop
push
mov
xchg
pop
adc
or
in
sbb
dec
or
iret
fstl
stos
mov
pop
push
adc
jmp
inc
and
push
add
xchg
sbbb
leave
ret
and
pop
std
inc
cmpsb
xor
lret
xchg
sbbl
push
in
mov
adc
lea
sub
ljmp
inc
add
nop
shll
xchg
jne
ja,pt
inc
scas
cwtl
xchg
mov
lock
ffree
push
add
outsl
dec
arpl
adc
sub
add
mov
jg
push
into
or
int
xchg
jp
xchg
mov
add
popa
out
or
dec
das
add
add
cli
and
add
mov
add
or
les
mov
movsb
or
pop
mov
xchg
add
cs
ret
aaa
mov
xor
add
mov
lret
cmpsb
pusha
pop
dec
and
and
jg
adc
dec
cs
leave
ljmp
cld
sbbl
sub
sbb
andb
inc
push
mov
dec
inc
jo
aam
movhps
jg
inc
insb
leave
inc
divl
inc
push
pop
out
fidivs
push
es
movsb
imul
add
or
xchg
add
adc
dec
adc
sbb
mov
or
shlb
jno
insb
sbb
push
repz
or
adc
cmpsb
inc
xor
or
outsl
cmp
and
jge
or
rdtsc
add
sub
add
dec
mov
les
nop
roll
push
sbb
int
sahf
pop
fwait
orl
mov
add
fisubrl
mov
and
shrb
fdivs
js
insl
shlb
cmp
lock
mov
and
sub
add
jge
stos
add
push
sarb
xchg
addr16
ret
out
jbe
pop
dec
shl
sbb
bound
mov
lret
mov
cmc
add
sbb
fwait
repnz
fisubrs
out
sti
push
inc
enter
rcrl
sbb
pop
sbb
movsb
subb
inc
xchg
ds
adc
test
push
add
jmp
andl
adc
mov
out
jmp
mov
test
or
mov
pop
jbe
cltd
bound
cmpsb
xchg
popf
faddl
jp
andl
mov
mov
mov
xchg
xor
jno
jne
xor
xor
xchg
xchg
pop
pusha
xchg
orb
xchg
test
test
iret
test
shll
jae
dec
jbe
adc
inc
in
xchg
scas
mov
xor
pop
xor
xor
sbb
adc
xor
leave
popa
stos
movb
aaa
mov
lods
imul
lds
cmp
add
data16
and
insb
repz
fwait
shlb
cs
add
push
adc
pop
leave
mov
add
or
sahf
or
add
popa
mov
fldl
cld
lahf
fs
rolb
xchg
cmp
pop
sbb
xor
cmpb
dec
push
push
inc
aas
jl
daa
pop
push
pop
mov
and
add
subb
ret
push
icebp
or
aad
shrl
pop
mov
jb
push
push
hlt
or
mov
sbb
and
and
jmp
enter
pop
xor
xchg
mov
shll
repnz
push
mov
scas
pop
or
mov
repnz
or
scas
rclb
xor
cs
leave
adc
imul
fwait
sbb
and
and
inc
pop
and
je
mov
mov
rorb
fcmovb
adc
adcl
sbb
inc
or
xor
sub
dec
xchg
enter
mov
sbb
mov
jne
cmp
xor
sub
xor
fsin
test
jp
add
push
rorb
add
pop
sub
inc
add
loope
sbb
leave
fsubr
xchg
icebp
jb
cmpsb
sub
mov
lret
arpl
and
inc
add
shrb
movsl
hlt
mov
or
mov
dec
inc
xorl
lcall
pushf
lock
rorb
and
call
adc
cwtl
add
cld
push
arpl
daa
stos
inc
push
pusha
add
pop
mov
xor
bound
dec
movaps
test
sub
ret
repnz
push
sbb
jbe
xchg
xchg
je
and
fisubs
clc
cmp
mov
cli
pop
inc
pop
mulb
xchg
add
call
xor
xchg
add
mov
xor
xchg
or
js
repz
or
in
xchg
add
or
mov
or
lret
sbb
and
dec
out
fidivl
push
repnz
sbb
push
and
xor
jl
adc
test
xor
pop
out
push
in
je
xchg
pop
inc
jo
nop
mov
subb
add
andb
push
jno
add
jo
and
ljmp
jg
dec
js
fidivs
jo
stos
add
or
push
rolb
inc
orb
test
or
push
daa
add
or
xor
inc
orb
sub
push
es
add
cld
incl
pop
add
inc
cmp
fdivs
jle
mov
sbb
inc
lcall
add
add
add
arpl
jmp
call
sub
xor
push
cmp
push
hlt
xor
adc
stos
xchg
aam
xchg
sub
pop
rcrl
push
fwait
nop
std
cld
or
add
add
lcall
jno
and
and
iret
loop
loopne
mov
adc
push
fistl
cs
sbb
sub
rcl
inc
inc
or
and
stos
or
cmpsl
push
push
push
adc
out
ja,pn
addb
fildl
or
les
jns
test
pop
xchg
or
je
outsb
sub
aaa
jl
leave
jae
fisubs
jns
inc
add
imul
sbb
sahf
mov
mov
lahf
movsb
cmp
adc
lods
push
and
jecxz
or
xor
dec
ja
sahf
add
sub
xor
pop
sahf
push
ficompl
cmp
mov
push
loopne
int
add
push
push
and
dec
adc
leave
ret
sub
ds
jg
inc
imul
fsubl
test
mov
lock
sub
mov
dec
push
push
mov
dec
xchg
dec
pop
cmp
cli
mov
pop
push
cmpb
mov
jo
mov
push
rclb
stos
mov
jne
push
and
jno
sub
add
add
mov
and
pop
ret
add
es
into
sub
or
add
enter
xor
iret
adc
lods
iret
ja
pusha
loop
jg
add
cmp
push
aam
pop
nop
mov
push
jne
pop
sbb
sub
movsb
xlat
mov
xor
or
dec
dec
and
shl
nop
or
cmp
xchg
xchg
addr16
mov
lods
bound
andb
xor
test
push
pushf
mov
loope
inc
dec
add
cli
jmp
sub
mov
dec
push
nop
push
mov
mov
ljmp
push
inc
xor
pop
xlat
xchg
lock
mov
add
mov
inc
pop
cmp
orb
pop
mov
rorb
xchg
or
mov
in
push
inc
push
test
mov
push
addr16
cwtl
test
enter
adc
adc
xchg
aad
jo
cmp
fnstsw
sbb
mov
out
addl
les
and
or
push
mov
push
movsl
pop
daa
in
xor
es
dec
jp
add
inc
add
movsb
jo
or
and
cmp
jmp
bound
lods
add
std
or
fs
ffree
push
inc
pushl
pop
movsb
mov
mov
and
xchg
sub
mov
mov
aas
sbb
sbb
out
lds
dec
iret
scas
mov
imul
movsb
jmp
movl
pop
call
jne
pop
mov
ret
jo
push
and
pop
mov
push
inc
out
inc
add
ss
cmp
adc
adc
movsl
icebp
adc
add
sbb
cmpsb
lea
test
inc
dec
add
loopne
pop
out
mov
loopne
fcompl
pushf
add
add
and
jns
test
out
incl
push
add
jmp
dec
outsb
add
scas
bound
dec
dec
fildl
mov
or
xor
push
add
test
sub
loope
push
fcmovnb
sbb
jecxz
pop
dec
jmp
adc
mov
inc
inc
aad
adc
out
and
dec
scas
xchg
es
cs
or
sub
sarb
adc
and
imul
jb
add
inc
pop
push
mov
mov
sub
xor
fstl
xor
sub
bound
andb
add
mov
jg
sbb
je
cmp
stos
lcall
xchg
mov
or
mov
faddl
aam
inc
sbb
pop
or
xchg
cs
mov
push
push
pop
push
mov
jo
xchg
sub
outsb
push
lret
mov
and
inc
stos
insb
jle
jne
dec
fcoml
or
dec
mov
testb
loopne
mov
add
mov
add
inc
les
imul
sbb
xchg
out
and
pop
jnp
or
movsb
bound
add
add
ljmp
movl
xorb
cmpsl
add
inc
add
and
add
outsb
add
jno
inc
mov
es
rolb
push
stos
sbb
add
rclb
ss
mov
and
test
shrb
xor
lcall
andb
push
rol
jecxz
nop
enter
int3
addr16
mov
fchs
hlt
pop
shrb
or
inc
mov
int3
cmpsl
xchg
je
adc
inc
adcl
inc
repz
sub
add
clc
sbb
in
xor
jb
sub
ja
or
add
out
or
mov
pop
or
dec
shlb
or
stos
sysret
xor
clc
sub
add
push
lds
ljmp
jl
add
dec
add
andl
inc
rcll
inc
das
add
ret
cs
add
inc
nop
fsubrl
mov
stos
mov
ret
add
push
dec
shr
inc
inc
add
push
pop
inc
xor
add
js
adc
push
dec
mov
loopne
pusha
addl
scas
and
jb
and
add
lds
jns
shlb
lods
lret
pop
inc
and
push
sub
push
dec
pop
add
gs
and
subb
push
pop
je
xchg
adc
in
incb
mov
arpl
and
jl
mov
jge
pop
cmp
xor
aaa
mov
nop
cmp
or
mov
push
arpl
repnz
and
add
cwtl
sub
or
push
stos
lcall
loop
jmp
or
cmp
pop
dec
add
gs
adc
daa
add
sbb
inc
ret
fmulp
dec
and
les
cmp
mov
pop
mov
ja
xor
sub
jge
ret
or
je
call
cmp
mov
ss
or
cmp
scas
xor
xlat
loopne
push
add
adc
add
cmpsb
push
data16
sbb
sbb
addb
jno
aam
mov
xchg
inc
add
nop
outsl
cmp
loope
xchg
leave
jmp
aaa
adc
imul
ret
add
outsb
adc
nop
aad
jg
je
inc
jecxz
imul
mov
imul
arpl
sbb
and
cmpsb
mov
inc
cmp
mov
andb
or
xchg
push
pop
rcll
icebp
push
dec
add
int3
in
aam
sbb
push
dec
mov
mov
xchg
rolb
or
je
sub
mov
pop
xchg
jno
add
and
inc
loope
ds
cmp
mov
xor
orb
jmp
sbb
sbbb
add
clc
dec
inc
movsl
add
xchg
scas
or
movsl
cmpsb
push
test
das
or
cmpsb
mov
ror
psubusb
add
pop
fcomps
dec
mov
arpl
test
and
idivl
add
fcmovnbe
add
adc
mov
int
jl
je
add
push
sbb
add
xchg
or
inc
lret
ret
pop
mov
dec
cwtl
push
cmp
popf
out
inc
je
fists
stos
je
adc
push
lea
pushf
sahf
mov
pop
dec
negl
dec
xor
and
lahf
mov
enter
xor
jb
or
pop
aam
out
add
rclb
aas
inc
dec
xchg
sbb
cmp
adc
pop
jecxz
in
inc
mov
aaa
cltd
inc
in
lahf
lea
test
sbb
fnstcw
mov
push
inc
fs
stos
or
xor
sub
add
sbb
andb
mov
and
xchg
shll
pop
push
inc
shrb
sub
adc
xor
sbb
sbb
add
sbb
xchg
dec
dec
leave
rclb
or
leave
mov
add
push
push
and
ret
jle
pop
jo
int
jae
or
jle
sub
mov
add
xor
mov
dec
int3
stc
fidivl
inc
dec
jge
xlat
mov
sbb
fst
xorl
ss
add
seto
push
outsb
addr16
mov
imulb
bound
and
add
inc
sbb
fstp
incb
adc
xchg
xor
mov
jmp
and
stos
loop
cli
out
les
pop
xor
repnz
or
add
push
mov
inc
mov
xor
xchg
add
out
mov
movsl
out
cmovp
test
push
mov
addb
or
movsb
and
stos
push
movsl
and
and
add
andl
add
and
outsb
daa
inc
add
jecxz
push
mov
in
sti
inc
cmp
subl
xchg
push
aad
add
xchg
mov
dec
es
daa
push
or
das
inc
and
add
push
dec
movl
pusha
std
jg
movsb
mov
mov
bound
sbb
sbb
sahf
add
sub
mov
jnp
adc
daa
sbb
jb
add
mov
notb
mov
call
loop
add
ret
or
iret
mov
aad
bound
lcall
ss
xchg
jecxz
dec
stos
sbb
ss
pop
add
imul
push
inc
sub
mov
inc
pop
add
mov
pop
lret
sub
mov
add
push
rclb
popa
pop
popa
rorb
pop
add
pop
inc
out
sbbb
aam
sub
imul
adc
cmpsb
loop
mov
inc
push
add
sbb
int3
mov
enter
sbb
and
leave
stos
fs
ret
pop
test
shlb
cld
pushf
push
pop
add
cld
mov
stos
subb
mov
adc
ret
fistps
icebp
xchg
nop
push
and
and
inc
push
adc
or
mov
fcomps
mov
mov
or
xchg
pop
nop
cs
mov
and
add
pushf
jl
dec
test
aam
sahf
pop
xor
cmc
xor
dec
cmc
adc
sbb
xor
pop
lcall
add
test
shll
pop
imul
xor
adc
stos
inc
xor
fistps
test
repz
icebp
dec
repz
mov
faddl
outsb
push
adc
push
pop
adc
inc
cli
aaa
lcall
js
xor
out
adc
or
cs
xor
sti
add
addl
out
mov
inc
imulb
nop
mov
add
dec
xor
add
mov
or
cmp
mov
addb
push
scas
stos
pop
mov
inc
stc
cmpsl
cmpl
xor
je
inc
test
mov
xor
cmp
cmpsl
dec
or
aad
and
lcall
sbb
mov
shlb
sti
scas
push
inc
xor
xchg
aad
sub
xchg
sub
dec
push
dec
rolb
jl
inc
mov
pop
mov
inc
adc
test
inc
xor
sub
jnp
push
adc
loope
push
rorb
mov
and
pop
mov
xchg
js
inc
clc
fs
dec
add
add
test
inc
mov
rorl
dec
push
jbe
fimuls
orb
pop
nop
rcrl
inc
cmpsl
or
sti
adc
add
movsb
add
leave
and
dec
loopne
and
stos
mov
and
xor
movsb
pop
mov
and
adc
add
fsubr
mov
je
mov
adc
dec
cmp
add
shll
and
std
scas
adc
push
jne
add
sub
or
xchg
pop
movsl
add
incl
cmpsl
sub
mov
pop
shll
adc
sbb
fisubl
and
wrmsr
fs
add
mov
or
sub
add
insl
leave
jno
jb
adc
xchg
insb
imul
mov
or
xor
push
out
pusha
stos
ret
xchg
shrl
loopne
push
push
lods
call
inc
push
or
out
add
sub
mov
and
movsl
sbb
jns
dec
in
add
inc
and
pop
rolb
pop
mov
ljmp
imul
add
cmc
repnz
repz
dec
add
pop
xchg
mov
orb
stos
push
ret
sub
dec
push
test
dec
ret
add
xchg
mov
lods
mov
xchg
adc
inc
int3
test
cltd
test
cmp
je
push
add
hlt
or
add
arpl
push
ss
cld
mov
fcoml
push
push
add
jge
pop
inc
ret
loop
pandn
rclb
adc
add
add
mov
out
mov
or
xor
lods
dec
sbb
mov
das
outsb
sbb
cmp
inc
push
je
in
inc
sbb
jl
push
lods
outsb
sub
inc
mov
xor
add
rolb
and
inc
dec
or
sub
pop
dec
adc
rolb
pusha
leave
and
pop
xchg
fstpl
dec
add
mov
xor
ss
jg
xchg
or
jns
arpl
add
rcl
out
xchg
push
dec
lcall
add
adc
inc
mov
sub
iret
mov
aam
orb
in
test
data16
fadd
int
ret
dec
mov
clc
movsl
add
xchg
add
in
js
xchg
loope
adc
mov
cmp
int
sbb
push
push
out
stos
into
lods
mov
sbb
mov
cs
jl
adc
cmp
add
cmp
and
je
dec
cmp
add
test
ror
add
enter
out
fimuls
or
aas
lock
add
inc
sbb
scas
adc
xchg
mov
or
scas
mov
test
mov
pusha
imull
add
adc
adc
filds
xchg
add
dec
cmp
fcomps
add
dec
jle
ds
je
cs
mov
aaa
inc
jecxz
pop
cmp
mov
mov
mov
test
lods
mov
or
xchg
xor
lcall
mov
pop
inc
or
adc
sub
gs
jl
push
ret
mov
pop
fwait
ror
out
inc
adc
mov
adc
sub
sub
sub
lods
aam
popa
popa
sbbb
add
mov
or
adc
jnp
xor
xchg
mov
mov
mov
fisubs
ljmp
scas
loop
test
mov
or
xor
mov
jb
mov
shrl
cmp
add
daa
add
ds
and
jp
xor
push
aad
and
mov
nop
mov
lock
loopne
xchg
add
jne
mov
push
rcr
xchg
bound
add
fs
jl
or
cmpsb
std
ss
sub
mov
mov
roll
movb
adc
add
push
scas
jne
adc
and
mov
roll
mov
fbld
repz
or
xchg
sub
fisttps
xchg
frstor
cs
inc
sbb
leave
shlb
push
push
dec
loope
or
push
nop
and
daa
dec
push
push
mov
pop
and
xor
mov
add
adc
es
push
mov
push
dec
xor
inc
mov
mov
adc
bound
or
lret
popa
xor
test
push
or
mov
add
adc
xchg
addl
sbb
add
pop
lock
lsl
xor
inc
add
lods
movb
mov
add
pop
xchg
add
mov
dec
dec
mov
push
dec
mov
xor
jno
add
adc
pop
pop
lock
sub
mov
cwtl
mov
or
inc
or
cmp
les
leave
mov
cli
adc
push
enter
loope
jl
cmp
jne
and
in
xor
dec
sbb
jo
mov
add
les
and
dec
movsl
insl
imul
cmc
aad
adc
mov
popa
sub
mov
sbb
or
xor
mov
imul
xchg
add
xchg
adc
cmp
sub
jmp
enter
xor
imul
jle
jmp
add
je
mov
pop
ds
rcll
or
ds
outsb
inc
dec
mov
and
push
rcl
cld
int
push
mov
movsl
dec
cmc
sbbl
mov
and
mov
rclb
sbb
pop
scas
mov
add
repnz
jl
mov
stos
movsb
and
ljmp
and
cld
iret
sbb
lahf
int3
mov
adc
sbb
add
jmp
stc
mov
loopne
mov
jo
add
test
xor
add
or
cmp
lahf
sti
add
nop
inc
sti
fwait
ret
mov
jmp
int
je
add
in
xor
out
add
pop
or
and
and
inc
shrb
movsb
les
sub
pusha
xchg
test
rcll
jo
mov
mov
jmp
sbb
lea
sbb
push
mov
jge
nop
xor
sbb
add
mov
mov
movd
pop
mov
xor
and
jns
add
ss
lods
adc
mov
dec
std
add
or
call
inc
scas
inc
xchg
pop
dec
inc
mov
rorb
dec
rclb
les
jp
lcall
and
xor
or
mov
and
inc
sub
adc
adc
and
cmp
and
mov
mov
jb
insb
push
insl
flds
add
iret
adc
shrb
pop
sarl
scas
mov
ja,pt
adc
mov
push
shr
mov
push
push
loopne
sub
inc
jne
daa
and
mov
xor
mov
addb
mov
mov
std
mov
mov
push
adc
cwtl
push
and
sarl
inc
add
dec
inc
jge
adc
add
dec
inc
xor
jno
bound
cmp
mov
shlb
rcll
xor
sbb
mov
loope
adc
add
andl
push
add
pop
loop
push
jmp
rorb
dec
or
dec
pop
and
inc
popl
xchg
add
call
or
push
sahf
cmp
cwtl
pop
dec
movsl
pop
pop
push
cltd
es
cld
outsb
insb
xchg
es
pushf
add
cmpsb
add
jno
xor
push
test
rorb
adc
and
dec
add
mov
test
scas
enter
push
or
jb
add
jl
dec
mov
adc
jge
insb
xchg
iret
or
in
sub
sub
leave
add
sbb
cli
push
mov
rcl
add
inc
pop
adc
inc
xchg
pop
or
lods
add
adc
add
pop
push
leave
in
ret
sbb
add
xchg
mov
stos
movsb
cmp
push
and
or
dec
icebp
test
sub
pop
mov
outsl
adc
stos
testl
fadd
add
xchg
push
adc
push
mov
mov
inc
andb
push
add
jne
dec
shrb
fisttpll
mov
mov
and
dec
and
dec
dec
cmc
nop
lcall
xchg
add
inc
dec
mov
adc
add
mov
adc
lcall
pop
shll
add
inc
sbb
push
dec
xchg
mov
mov
lea
xor
pusha
iret
mov
add
pop
insb
jle
xchg
cmc
mov
lidtl
fs
fimull
jmp
jo
sub
aas
add
add
add
sbb
sub
mov
aam
cltd
mov
ret
andl
pop
add
dec
dec
inc
and
cmpsb
in
lret
and
jg
cli
dec
mov
test
mov
cmpsb
test
aaa
das
les
aas
test
mov
out
insl
add
sarl
inc
ljmp
scas
cmp
es
mov
inc
jo
scas
adc
test
push
or
add
adc
mov
nop
pop
orb
xchg
jecxz
xor
push
push
and
repz
mov
adc
adc
leave
jmp
or
or
inc
push
xchg
cmpsb
ss
mov
sbb
fistl
pop
xchg
pop
nop
lock
inc
test
add
inc
mov
mov
hlt
xor
sbb
lock
add
jmp
cmp
dec
push
inc
and
pop
pop
jp
adc
adc
jo
push
std
pop
aam
inc
loopne
sbb
lea
ret
lret
andl
loop
or
stc
mov
cld
movsl
in
loop
stos
inc
in
lock
and
push
inc
add
dec
mov
push
xchg
adcl
sti
jge
sbb
adc
cmp
add
movsb
sbb
ss
popf
xor
cltd
sub
cmp
lcall
mov
add
add
out
icebp
mov
or
fwait
ss
out
xchg
shlb
pusha
or
bound
or
imul
cmp
or
add
roll
movsl
mov
xlat
add
xchg
mov
mov
and
or
push
leave
nop
and
push
add
add
mov
cld
and
loope
inc
xor
sbbb
push
or
jb
cmp
lds
mov
and
push
cmpsb
xor
cltd
sub
mov
movsl
mov
cmpsb
mov
add
outsl
lret
and
sarb
push
jg
add
cmc
js
mov
dec
hlt
in
insb
lods
cmp
movsl
xchg
pop
push
hlt
mov
repz
ss
ret
cmp
add
out
dec
clc
dec
push
jae
hlt
or
adcb
sub
lret
sbb
jg
or
rcrl
aam
stos
pop
and
lea
int
jl
insl
add
adc
ret
fbld
int
add
xchg
std
mov
push
mov
jge
sub
in
push
lea
adc
aas
cmp
movb
lds
adc
test
imul
rorb
ja
push
dec
popa
dec
add
leave
rcrb
daa
add
shl
mov
add
dec
popf
inc
mov
push
movsl
and
leave
inc
add
test
inc
mov
or
sbbb
faddl
xchg
mov
adc
or
addl
xchg
inc
adcl
dec
sub
xchg
xor
or
mov
addb
je
sbb
or
jae
ret
mov
repnz
je
sbb
fldenv
mov
imul
pop
imul
xlat
or
das
sbb
or
fs
ds
rcrb
adc
cmp
repz
cmp
add
sub
movsl
js
mov
lods
and
push
jne
adc
loopne
jb
push
pop
push
je
mov
mov
jbe
sub
push
mov
stos
sbb
push
dec
sbb
int3
xor
push
jo
pop
add
or
pop
pop
cmp
int
and
xor
test
xor
add
sarb
add
jo
xor
mov
jo
push
mov
arpl
mov
pop
rolb
lds
inc
cmp
sub
mov
in
add
gs
sub
and
outsb
sbb
ss
inc
adc
repnz
adc
fs
mov
add
adc
frstor
fsubl
icebp
fcomps
mov
icebp
test
mov
pop
aas
push
rolb
in
adc
loope
pop
inc
jecxz
aas
mov
inc
mov
jbe
pop
mov
lods
or
sbb
push
lcall
inc
push
lods
mov
jbe
sbb
inc
scas
sbb
cvtps2pd
jo
jmp
mov
daa
or
stos
jbe
pop
stos
sbb
std
cmp
cmp
jmp
lea
je
fisttpl
fs
cmpb
dec
adc
jmp
cmpsl
rol
push
js
scas
pushf
jmp
test
xchg
add
add
inc
mov
jmp
add
dec
shrl
mov
mov
out
add
inc
adc
or
test
push
pop
sti
jp
mov
mov
aad
pop
xchg
sar
mov
mov
dec
cmp
outsl
inc
lret
jno
pop
mov
cmp
nop
xor
xchg
push
pop
push
mov
push
adcb
and
add
jne
lahf
inc
fs
xchg
jmp
fildl
mov
sarl
and
or
add
xorb
and
dec
add
lcall
loop
sub
pop
inc
dec
add
or
rcrl
or
or
xchg
and
pop
mov
sbb
adc
sti
and
aas
movsb
leave
jp
pop
lret
cmp
or
jle
mov
scas
push
or
adc
daa
xchg
ljmp
mov
or
test
addr16
mov
xchg
js
add
cmc
push
cmpsl
outsl
cwtl
rolb
inc
nop
sbb
addb
mov
sbb
rclb
adcb
subb
in
push
inc
or
jbe
sarl
adc
xchg
sbb
xorb
fwait
popa
pop
jne
or
aam
outsl
into
jmp
inc
mov
cmp
dec
cmp
push
push
xchg
add
stos
imull
xchg
sub
adc
mov
and
in
lods
mov
out
ljmp
ret
js
sub
push
aad
std
and
out
adc
stos
mov
jp
xchg
add
add
or
stos
test
cmpb
lcall
stos
jg
movsl
outsl
cld
xchg
outsl
add
push
or
inc
xor
lea
mov
push
sub
and
dec
adc
add
movsl
or
adc
stos
std
add
call
aaa
lea
cmpsb
ja
dec
mov
mov
cmpsl
inc
and
jl
aam
mov
dec
outsb
pop
test
and
stos
rclb
and
push
cmp
mov
inc
or
in
pop
sbb
sub
jl
xor
and
inc
bound
xor
cs
cmp
daa
clc
or
cmp
js
mov
xor
mov
add
cmp
cmp
cltd
jbe
and
push
repz
push
popa
aaa
dec
callw
xor
lock
sbb
dec
add
mov
inc
inc
in
add
scas
iret
inc
xchg
add
sbb
jnp
aam
js
adc
add
xchg
dec
jecxz
dec
and
and
inc
imul
push
lret
push
sbb
loopne
sbb
sbb
lcall
gs
push
add
add
movsl
mov
cmp
lret
or
vfnmadd132pd
les
movl
push
add
rorl
sbb
dec
inc
mov
xlat
stos
int3
inc
sbb
inc
sub
dec
push
lods
in
std
xor
dec
mov
pop
add
lahf
mov
push
push
adc
xchg
inc
je
xchg
mov
add
and
xor
sahf
or
sub
mov
outsl
shlb
xor
lcall
roll
xor
or
insl
inc
inc
or
and
and
sbb
mov
xor
aas
xchg
pusha
nop
sbb
push
push
or
push
pop
mov
inc
pop
or
loopne
clc
xchg
mov
inc
mov
or
fwait
aam
and
cltd
popa
jne
rolb
pop
add
lods
xchg
pop
mov
and
mov
add
push
pop
pop
mov
cmp
bound
fdivp
dec
sbb
pop
ds
xor
sub
mov
adc
jle
test
push
loope
cltd
mov
jno
mov
xorb
push
repnz
cmpb
lds
adc
add
dec
mov
and
mov
leave
loop
cmp
mov
dec
ret
or
daa
loop
dec
push
and
dec
mov
fsubr
pop
xchg
adc
add
inc
sub
and
push
push
idivb
dec
push
push
sbb
in
mov
test
cmpsl
dec
sub
xor
fildl
imul
clc
sub
sub
add
and
aaa
test
pop
jnp
or
inc
lcall
fs
pop
xor
imul
inc
add
push
fstl
mov
stc
test
jne
mov
nop
or
dec
lret
push
add
adc
in
add
xchg
loope
les
sbb
jo
dec
cwtl
lahf
mov
add
and
mov
adc
andb
push
mov
push
mov
fisttpll
leave
addb
push
lret
jne
adc
dec
imul
pop
push
add
incl
fadds
jo
enter
mov
push
push
xchg
xchg
mov
inc
popa
repz
mov
xchg
mov
mov
js
xchg
pop
adc
fcom
mov
cmp
sub
pop
and
or
adc
int
mov
adc
shll
aas
add
movsl
je
jno
pop
mov
in
push
push
pusha
add
or
cmp
cmpsb
out
sbb
sbb
sbb
and
mov
mov
dec
out
imul
cmp
mov
fbld
dec
inc
or
inc
out
adc
lret
inc
push
pop
push
lahf
repz
bound
sub
sub
cmp
stos
nop
int
mov
xor
sahf
push
arpl
shrl
test
lods
or
lods
nop
dec
jae
outsb
xor
push
push
test
xor
pop
jo
dec
ret
sub
repz
in
push
mov
add
and
shlb
add
loopne
push
fwait
xchg
mov
inc
imul
lea
xor
shlb
push
push
dec
cwtl
xlat
stos
sarl
xor
cmc
push
add
lock
iret
or
mov
inc
pop
rorl
lock
dec
pusha
lcall
sub
pop
into
popf
adc
inc
or
pop
xor
or
inc
lcall
push
icebp
sbb
push
repnz
jmp
sub
in
lock
add
sub
roll
push
add
dec
into
add
in
jb
add
cltd
js
ljmp
push
pop
insl
bound
add
fisttps
outsl
push
and
bound
rcrb
rcl
popa
sbb
gs
add
cmc
in
dec
inc
sbb
cli
and
sbb
xchg
adc
in
and
xor
jne
add
push
pusha
and
js
fstpt
fwait
push
inc
lahf
xor
in
or
or
adc
faddl
dec
xor
xor
iret
in
add
mov
sbbb
mov
pop
incl
sbb
gs
add
stc
jp
mov
ficoms
mov
loope
les
push
clc
lahf
movsb
jp
add
ret
or
add
in
pusha
fcmovu
cltd
pop
push
mov
sub
mov
push
pushf
sub
das
xchg
adc
rcl
and
mov
mov
xchg
rolb
loope
xlat
out
test
mov
or
inc
mov
pop
loopne
out
aas
xchg
sub
mov
and
cmpsb
sahf
add
fs
call
stos
adc
inc
inc
rorl
add
xor
repz
outsb
jae
mov
pop
and
cmp
inc
or
cmpsb
add
sub
cmp
and
pop
test
and
sub
add
sub
test
loopne
aad
dec
cwtl
subl
movsb
xorb
push
push
add
push
adc
les
movsb
adc
loope
sarb
cmpl
lea
sub
andb
adc
stc
dec
add
pop
add
add
mov
es
mov
sbb
xchg
test
out
leave
inc
and
popf
leave
insl
or
pop
decl
or
xchg
repz
mov
scas
sahf
add
mov
in
xor
inc
pusha
rcrl
inc
rclb
in
scas
cwtl
cwtl
outsb
adc
mov
mov
push
or
add
adc
cmpsb
mov
add
shl
nop
pop
out
repnz
std
arpl
xor
dec
loopne
sub
dec
lea
xor
xchg
xor
rclb
push
mov
xchg
xor
inc
testl
add
imul
add
out
hlt
jns
xchg
mov
pop
daa
adc
pop
push
sbb
push
leave
les
pop
inc
jno
repnz
lcall
sbb
push
mov
inc
mov
jmp
and
pop
mov
aam
add
loopne
or
fbstp
sarb
mov
cmpsl
bound
push
add
add
mov
push
test
movsl
sub
jns
and
sahf
in
add
mov
mov
es
push
pop
xor
adc
sbb
or
jne
test
aas
imul
xor
mov
mov
or
pop
adc
or
mov
test
cmpl
push
inc
aad
sub
sbbl
xchg
mov
inc
xchg
movsb
int
xorl
mov
je
int3
aam
push
cmc
stc
scas
subb
push
pop
xor
xchg
xchg
in
ret
mov
and
clc
xchg
aad
or
xchg
jns
pop
lods
stc
lds
inc
stc
inc
fisubl
push
orl
sub
inc
insl
bound
loopne
jecxz
mov
push
roll
aas
pop
loopne
push
xchg
pop
adc
and
cmc
sub
outsl
jae
adc
lret
inc
test
test
hlt
cmc
pop
lods
and
mov
pusha
adc
mov
xor
es
rcrl
out
dec
fadds
lahf
pop
cwtl
add
loopne
mov
rorb
sub
or
jb
leave
xlat
mov
jge
adc
pop
and
adc
and
inc
adc
sub
jno
fists
cmpl
add
cmpl
cmpsb
movsb
push
in
mov
xchg
andb
inc
add
adc
xchg
test
out
pop
movb
sbb
lret
in
repz
cmp
mov
movsl
xlat
adc
lret
inc
and
dec
cmp
push
add
cmp
pop
je
mov
or
int3
aad
cmp
sbb
dec
add
fs
cmp
or
es
push
push
sub
les
mov
es
mov
pop
clc
inc
sbb
mov
mov
cmp
inc
add
sti
sbb
xchg
lods
and
fcmovnbe
add
push
out
outsl
pop
inc
pop
and
lahf
fwait
xchg
incb
push
add
dec
repz
imul
xor
loope
andl
jmp
and
xor
mov
aam
mov
inc
lods
or
test
sbb
cmpsl
push
dec
test
dec
addl
mov
adc
xor
adc
dec
sub
jg
cmp
add
inc
xor
insl
cwtl
pop
add
cmpsl
xor
inc
call
sbb
pop
jecxz
mov
jl
cmp
mov
cmp
fs
dec
rolb
mov
adc
mov
ret
test
test
mov
add
sbb
rorl
sub
push
inc
cmpb
fcompl
fisttpl
mov
lret
xchg
and
xor
adc
je
pop
xor
mov
test
mov
push
loope
mov
arpl
add
lock
mov
mov
xor
sahf
addr16
leave
adc
ror
rol
stos
into
std
dec
mov
sti
mov
xor
in
mov
pop
leave
or
and
or
mov
subl
int
jae
add
and
pop
add
jo
pop
mov
sbb
mov
aas
push
jmp
loop
pop
leave
bound
mov
cmp
pop
imull
fbld
cmpsb
fldl
enter
loop
lock
jbe
pushf
jo
mov
stos
cmc
outsl
add
jns
add
sbb
shll
cltd
sar
lret
fcmovnu
pusha
xchg
andl
dec
jno
aam
shlb
mov
xchg
int3
xor
iret
cmp
hlt
dec
pop
fldl
add
push
loopne
cld
or
add
sub
rol
mov
xlat
push
mov
in
je
pop
aad
sbb
or
rorb
and
add
push
pop
rclb
pop
pop
jb
cmpl
inc
push
mov
subl
inc
pop
das
dec
inc
mov
dec
push
push
lcall
dec
adc
bound
push
push
int
mov
add
rorb
add
sub
inc
mov
xor
inc
pop
xchg
stos
inc
ljmp
pop
sbb
and
xor
ud1
and
or
lods
push
dec
jle
sub
test
stos
rorb
rol
lea
adc
add
dec
inc
popa
loope
cmpsl
pop
cmpsl
xor
jnp
popw
lahf
aam
sub
jl
mov
mov
ja
push
jo
inc
inc
out
sub
lret
mov
xorl
xor
or
xor
jmp
mov
popa
mov
xor
push
jb
add
push
cmp
push
out
pop
push
test
xor
mov
add
or
adc
shr
sub
adc
add
test
push
dec
jmp
loopne
sbb
fiadds
add
or
in
bound
stos
cwtl
and
push
adc
bound
aaa
aas
imul
lea
mov
inc
mov
bound
mov
xor
imul
test
mov
mov
test
out
dec
jbe
insl
into
lcall
mov
dec
mov
adc
ljmp
dec
and
cmp
xlat
add
add
inc
loop
jo
sub
and
sub
and
add
rcll
scas
or
inc
cmpsb
adc
mov
dec
and
and
mov
add
lea
lahf
mov
dec
and
add
scas
xchg
jns
or
sbb
mov
arpl
jne
nop
ss
xor
mov
mov
pop
or
imul
push
das
mov
daa
or
movsb
push
push
mov
mov
push
jnp
add
dec
xor
mov
cmp
imul
add
fistpll
hlt
scas
add
mov
dec
pop
cli
dec
mov
mov
incl
jns
add
inc
mov
jne
push
sub
clc
scas
ss
push
pop
je
adc
add
test
dec
inc
xlat
add
popf
mov
fstpt
icebp
paddd
nop
insb
adc
mov
cld
or
jp
jne
jp
pop
adc
fstp
sbb
lds
lods
das
add
add
sbbb
inc
and
vmovss
adc
dec
push
add
sbb
pop
push
popa
iret
jne
ret
loopne
adc
add
inc
inc
addb
mov
stos
mov
add
xor
push
and
lret
cmp
stc
sub
xor
std
adc
mov
mov
test
rol
push
repnz
leave
xchg
pushf
inc
fsts
push
dec
inc
gs
cmc
cltd
pop
nop
je
lret
loop
xor
lds
dec
add
mov
mov
jp
insb
sub
ret
cs
and
stc
inc
stos
sbb
xchg
mov
push
int
pop
sub
sub
or
imul
cltd
call
pop
xchg
inc
jg
notl
jecxz
mov
adc
in
mov
lods
adc
mov
mov
cld
test
pop
cmc
add
mov
test
and
outsb
add
jge
inc
lret
xor
roll
roll
pop
jmp
pushl
jnp
dec
aaa
out
mov
call
cld
inc
mov
push
pushf
adcl
add
jg
loopne
ret
loop
add
leave
clc
subl
imul
jns
enter
mov
add
jmp
pop
roll
push
dec
jne
xchg
add
xchg
add
and
andb
stos
pop
push
cmp
add
and
or
pop
test
or
cmp
adc
and
mov
pop
and
loope
sti
out
stc
ja
or
inc
xchg
mov
push
ljmp
jnp
outsl
loope
push
das
sub
lods
fs
mov
icebp
nop
mov
mov
push
test
fwait
cs
mov
push
scas
push
pushf
add
mov
mov
pop
loop
adc
lcall
ss
and
in
cmp
xor
cmp
filds
dec
int3
push
dec
adc
mov
movsb
loop
mov
jns
adc
fdivrs
inc
iret
sub
mov
add
fisubl
jns
dec
xchg
lret
js
incl
imul
add
add
arpl
jne
stos
stc
mov
dec
mov
cmc
and
pop
xor
cli
mov
or
push
adc
pop
xchg
or
inc
iret
lock
stos
add
nop
sbb
inc
outsl
jmp
and
popa
cs
shll
push
fisubrs
lea
es
xchg
mov
mov
sbb
mov
scas
xchg
dec
inc
dec
adc
add
jne
iret
mov
adc
mov
mov
xchg
sub
sbb
addb
inc
inc
test
insb
imul
mov
jns
and
mov
sbb
movsl
adc
push
cmpsl
sbb
mov
pop
inc
inc
inc
mov
loopne
sbb
sub
and
je
lea
dec
dec
shll
cmp
adc
js
cltd
and
int3
or
subl
sub
scas
lock
inc
int
adc
jo
lret
push
jg
repnz
loope
enter
mov
ret
shlb
pop
andl
mov
add
mov
insb
rdtsc
add
and
add
and
out
inc
pop
test
mov
pop
roll
das
int3
and
xchg
popl
loopne
jecxz
pop
cld
pop
test
mov
test
nop
xchg
stos
cmc
test
insb
ss
and
sub
mov
xchg
mov
pop
jmp
mov
jns
mov
add
jmp
jp
add
jbe
add
mov
xor
ret
mov
rol
out
rolb
sub
stc
mov
dec
cld
adc
cmpsl
add
cmp
lods
adc
adc
cmpb
addr16
add
adc
or
ret
loope
xchg
lret
xchg
adc
and
lds
mov
int
rolb
xchg
jle
push
push
inc
fwait
pop
xor
rorl
push
sbb
orb
dec
sub
aas
in
in
adc
mov
xor
aam
ret
inc
mov
mov
dec
inc
xor
add
inc
xor
mov
jae
loopne
xor
leave
or
sub
add
ret
inc
ds
outsb
push
mov
lcall
bound
mov
cs
sbb
and
fidivs
mov
push
add
jmp
mov
cli
icebp
jmp
lea
dec
xor
loope
adc
pop
sbb
sar
dec
nop
xchg
cmpb
or
or
pop
adc
mov
and
push
in
add
push
sub
sbb
mov
mov
xchg
xor
xor
rorb
adc
sbb
jg
cmc
data16
inc
add
rcl
pop
sub
stos
mov
hlt
mov
pop
cwtl
rcl
add
push
inc
fwait
inc
inc
jo
leave
test
lcall
push
test
inc
arpl
mov
mov
and
adc
adc
jbe
or
pop
in
mov
add
add
push
add
dec
dec
test
xor
pop
add
push
and
mov
mov
pop
and
adc
sub
add
inc
xlat
push
or
pop
push
inc
and
sub
scas
adc
or
lods
and
sbb
icebp
cwtl
repz
push
jno
and
inc
push
inc
xor
loope
and
push
call
lds
movsl
cwtl
or
sbb
push
dec
mov
pop
xor
adc
xlat
lds
dec
adc
push
sub
adc
addb
das
call
xchg
shrb
sbb
test
shrb
f2xm1
xchg
dec
cmp
sbbl
and
aad
pop
repz
jo
pop
push
mov
sbb
lods
jne
cmp
mov
jmp
lcall
xor
pop
out
inc
pop
jl
add
add
popf
and
es
mov
inc
fiadds
mov
or
add
hlt
iret
jb
push
push
adc
push
test
inc
or
iret
or
or
add
adc
aam
add
xchg
push
bound
movsl
jg
add
movsl
add
push
sbb
adc
jg
inc
cmpsl
cmp
je
nop
or
mov
test
dec
jns
pop
add
movsb
mov
add
mov
xchg
cmp
rorb
inc
cmp
mov
jo
mov
sbbb
add
int
push
gs
mov
dec
inc
loope
mov
jae
rolb
sub
and
push
jo
xor
stos
pop
in
or
popl
imull
addb
mov
or
sub
lcall
outsb
loopne
push
aaa
mov
ja
or
stos
sbb
xlat
cltd
pop
pushf
bound
hlt
adc
xchg
lahf
mov
sbb
push
scas
adc
xor
pop
lock
xor
call
push
aad
or
aad
sub
dec
sub
test
dec
inc
xlat
xchg
nop
adcl
and
xor
mov
mov
std
mov
add
sub
loopne
push
nop
das
xchg
out
scas
xorb
rol
dec
sub
pusha
shrb
and
inc
xchg
add
jns
mov
cmp
lods
shlb
add
push
push
or
stc
pop
add
ret
testl
daa
or
stos
push
lds
inc
sar
push
imul
or
sbb
dec
in
pop
test
and
or
sub
mov
or
arpl
lcall
sbb
mov
movl
or
imul
dec
add
ret
cmp
xor
imul
test
mov
add
dec
movsb
xor
sbb
lds
lahf
pusha
and
popf
lock
sub
and
add
xchg
inc
adc
push
inc
rolb
inc
out
dec
adcb
pop
test
ljmp
add
shrl
jne
adc
or
push
cmpsl
call
xchg
lret
mov
popa
mov
ret
xor
or
fsts
or
mov
dec
sub
stos
in
add
add
out
test
xchg
xor
mov
je
jnp
pop
call
lds
add
adc
push
add
sub
cmp
fwait
or
adc
lds
scas
mov
jge
incb
sub
and
cs
and
sub
sarl
xlat
and
imul
mov
push
push
dec
cmp
jno
xor
push
cld
loop
mov
pushf
add
sbb
test
loopne
or
icebp
jb
pop
ljmp
fisttpll
out
lds
jl
sbb
ret
cmpsl
sub
pop
dec
stos
mov
fnsave
inc
mov
push
jno
inc
ss
jle
add
fdivl
mov
nop
and
dec
call
sbb
mov
inc
outsb
mov
mov
add
adc
dec
sub
in
divl
or
add
xchg
mov
test
mov
xlat
sub
add
sub
pop
mov
dec
xchg
cmp
fs
jmp
add
and
lds
lea
push
mov
dec
push
jns
lds
lods
and
lods
mov
nop
adc
sar
rorl
add
and
xor
test
inc
push
imul
cmpsl
cmc
mov
jo
xor
scas
add
add
cmp
repz
jp
inc
mov
cmc
clc
arpl
cmp
stos
mov
sbbl
add
testb
mov
jle
enter
call
add
cltd
js
lock
add
xorb
int3
aad
xchg
mov
adc
cmc
and
dec
in
test
push
ret
loope
mov
flds
frstor
cwtl
and
movsl
loopne
in
je
inc
cmp
pop
hlt
sbb
cwtl
mov
or
cwtl
xchg
sti
push
jge
addb
lods
mov
push
jbe
adc
sub
adc
pop
sbb
push
mov
inc
mov
adc
and
mov
mov
in
lock
add
loop
xor
cld
clc
subl
add
adc
movsb
xchg
lcall
or
dec
or
push
cmp
or
pop
pop
int3
cmc
icebp
fwait
stos
fsts
fcomps
notl
mov
addl
je
mov
push
adc
sub
test
dec
and
jmp
and
sbb
lahf
pop
rclb
xlat
lods
loopne
das
mov
cwtl
dec
movsb
sub
xor
sub
in
mov
pop
sbb
data16
pusha
add
sbb
hlt
aam
aad
pop
mov
lret
jl
lea
pop
jge
arpl
ficoml
and
aaa
jmp
call
jl
test
loop
cmp
add
jne
inc
sub
mov
test
inc
mov
push
lret
std
les
pop
hlt
and
jno
xor
ss
cmp
add
push
adc
push
lock
add
jecxz
pop
inc
xor
dec
ror
ja
jo
mov
pop
push
and
cld
or
push
adc
or
cmc
dec
mov
mov
rorb
adc
dec
inc
mov
push
pop
pop
inc
or
mov
rorb
or
lods
inc
mov
fimull
sub
gs
fildl
add
cwtl
fdivrl
and
movsl
push
dec
and
add
xchg
or
out
push
stos
inc
pop
sbb
add
filds
sarl
mov
add
or
sub
lret
loopne
stos
inc
xchg
iret
push
or
mov
aam
mov
sbb
inc
and
cltd
andl
repnz
je
sbb
push
xchg
movsl
pop
int3
mov
xchg
stos
pop
jo
fsubs
movsl
adc
xor
xchg
sti
mov
scas
adc
aad
bound
roll
push
jle
add
jmp
sub
and
loopne
push
lahf
pop
mov
daa
subb
sub
lock
sbb
ds
adc
xchg
fwait
imul
cmc
push
sub
mov
in
mov
add
add
jmp
or
jns
add
jmp
sbb
mov
sbb
lahf
jecxz
lcall
or
aam
add
lcall
into
pop
pusha
shll
or
ljmp
aam
pop
in
add
outsb
orl
enter
xchg
cmp
orb
nop
push
push
inc
scas
pusha
pop
test
repnz
in
mov
xchg
mov
rorb
adc
cmp
imul
nop
mov
outsl
add
pop
xor
int
inc
pop
and
cmpb
and
mov
jb
push
xchg
jb
xor
mov
orb
enter
cmpsl
cmp
sbb
dec
or
xchg
cmp
dec
lcall
push
push
int
mov
les
sbb
add
or
mov
xor
out
ret
scas
xchg
add
push
test
enter
stos
push
cmpsl
sub
and
adc
push
add
loopne
test
jl
mov
mov
les
push
dec
pop
or
lret
loope
pop
and
cld
call
insb
dec
xor
cld
test
mov
stos
push
sti
fistl
lret
push
jl
movsl
cmp
je
mov
or
xor
shlb
mov
xor
mov
leave
or
aam
loope
sub
jg
mov
loop
jl
or
rcll
sub
pop
adc
sbb
subl
repz
adc
xor
sub
adc
inc
jmp
mov
xchg
push
arpl
imul
shrb
icebp
daa
subl
insl
subl
inc
enter
loop
add
xor
fimuls
or
pop
push
loope
iret
mov
push
push
jnp
cltd
adc
jne
lods
inc
test
cltd
add
sub
shrl
movsb
dec
aaa
sub
bound
or
fimull
cmp
lods
lock
mov
push
js
sub
pop
xchg
push
ja
clc
sub
mov
push
dec
xchg
push
cmp
and
xchg
arpl
jno
push
xor
sahf
add
push
cli
das
je
addl
adc
jecxz
or
loop
jle
and
or
je
and
add
cmc
scas
push
out
fisttpl
jmp
cli
fsubr
and
mov
fiadds
push
loopne
in
insb
mov
cmp
pop
jle
sbb
or
adc
das
lock
movups
movsl
mov
nop
leave
fldenv
cmpl
and
stc
xor
leave
sub
movsl
add
xchg
rorl
xchg
stos
xor
sub
fwait
aaa
push
sub
add
jno
add
inc
or
xor
repnz
sub
cmp
xchg
shl
stc
add
pop
aam
xor
out
inc
jo
shl
arpl
inc
dec
adc
dec
mov
cmp
rorl
dec
and
or
mov
xchg
dec
jno
and
aaa
sub
mov
cmpsb
xchg
out
jp
pusha
pop
xor
inc
mov
adc
aas
aad
pusha
sub
sbb
fisttps
scas
inc
leave
out
lret
and
jo
shrl
lahf
pop
je
add
popa
lds
addb
pop
sub
push
test
jno
sub
jo
and
xchg
inc
mov
pop
dec
inc
and
mov
jg
outsb
flds
adc
or
movsl
aaa
push
pop
leave
push
int3
leave
test
push
das
iret
notl
dec
popf
ss
adc
out
cmp
jo
adc
in
loopne
mov
add
inc
and
cmpsl
cmp
icebp
add
int
push
xorb
lret
repz
add
adc
sti
sub
push
add
adc
movsb
fnstcw
popa
jbe
sbb
xlat
jne
pop
loopne
ret
push
pusha
or
add
adc
mov
in
cmp
ds
adc
xchg
gs
fwait
pop
pop
push
pushf
test
pop
or
and
int
or
lds
divl
sub
bound
stos
aad
dec
add
test
rcrl
or
jecxz
adc
push
sarl
addl
in
pusha
aas
sbb
rclb
call
mov
mov
inc
and
out
dec
or
cld
and
xchg
sbb
dec
add
mov
push
int
sbbb
jo
rorl
mov
movsb
mov
sbb
inc
scas
or
push
push
mov
add
and
adc
test
adc
mov
mov
dec
mov
incb
add
add
jo
xorb
sub
mov
xor
sub
sub
pop
add
hlt
popf
inc
mov
inc
inc
jecxz
mov
das
sarb
stos
sub
add
add
sbb
xchg
push
xor
sub
rcrl
cmp
mov
mov
lock
lret
clc
jg
leave
loop
add
sbb
sub
lcall
sbb
decb
sbb
xchg
jle
sbb
loop
incb
jmp
xchg
cmp
dec
sbb
bound
imul
or
inc
inc
xor
mov
das
iret
je
insl
or
pop
xlat
pop
xor
cmpsb
dec
sub
adc
cmp
lret
inc
xor
mov
mov
add
or
mov
pop
stc
or
dec
dec
and
mov
repnz
or
or
ja
mov
add
and
and
es
and
sbb
dec
cmp
mov
fwait
mov
jmp
pop
mov
repnz
mov
test
jae
add
dec
data16
jg
and
dec
dec
jnp
adc
mov
mov
out
bnd
hlt
int3
sahf
or
adcl
mov
test
push
rcl
mov
sbb
dec
addb
jecxz
push
xor
jg
and
enter
mov
cwtl
jb
dec
inc
add
push
or
lret
pop
jecxz
xor
bound
push
es
cmpb
cmpsb
dec
mov
pushf
mov
inc
and
add
inc
xor
loop
imul
jle
mov
add
push
sbb
cmp
inc
mov
jmp
cmp
inc
imul
aam
stos
rcrl
test
jmp
add
inc
mov
jo
ret
push
sbb
dec
daa
adc
cmc
adc
or
mov
loopne
mov
test
pop
adc
imul
xor
mov
pcmpgtb
sbbb
pop
jecxz
inc
push
pop
dec
jne
xor
mov
arpl
push
sub
inc
mov
xchg
xchg
xchg
or
jmp
xorb
adc
add
add
or
stos
aad
repnz
push
add
enter
stos
orl
loopne
or
push
inc
cmp
or
jno
jae
nop
dec
and
dec
cmp
sub
sub
pop
or
or
outsb
lods
xchg
add
ljmp
xor
inc
adc
sub
ja
outsb
scas
lcall
pushf
jmp
movsb
imul
jp
or
push
add
push
sbb
xor
or
inc
mov
add
inc
inc
daa
aas
lea
xchg
inc
pop
add
mov
push
jno
pop
xchg
test
int
popa
dec
movsl
pop
popa
adc
xchg
mov
scas
inc
mov
jbe
lret
sbb
mov
mov
mov
ret
push
nop
add
cmp
mov
leave
push
mov
mov
sarb
mov
or
and
and
lea
sahf
sbb
sbb
enter
sub
movsl
or
cmpsb
stos
mov
adc
mov
imul
iret
adcb
int3
aam
or
inc
sbb
push
pop
or
sub
int3
and
pop
adc
ret
ljmp
adc
fwait
cmp
jg
push
loopne
add
jno
adc
mov
les
movsb
orl
xor
xchg
jnp
stos
jae
add
mov
stos
repnz
dec
pop
mov
pop
and
shll
orb
push
movsl
inc
add
nop
push
pop
imul
mov
je
or
pop
scas
mov
out
add
inc
xlat
xor
push
pop
dec
sub
xchg
sbb
or
rcll
roll
loope
mov
add
xor
pop
fstpt
lods
xor
jecxz
push
xchg
inc
pop
and
bound
cmp
cmp
add
jmp
push
or
xor
bound
or
je
pop
mov
mov
mov
mov
mov
insl
inc
mov
popf
or
xchg
mov
jb
and
push
cmp
dec
ljmpw
xchg
add
xor
std
push
mov
shlb
pop
cli
pusha
in
xor
add
push
test
daa
mov
pop
test
push
sets
sbb
sub
jmp
out
pop
andl
sbb
adcl
adc
push
mov
push
cmpsl
or
xor
cli
js
aam
adc
and
iret
mov
les
int3
or
test
and
stc
xchg
add
xor
sub
mov
xchg
cmp
xor
add
push
xchg
outsl
xor
int3
mov
or
int
les
data16
or
jle
aad
push
sbb
mov
orl
jae
loopne
push
mov
sub
jo
addl
cmp
jae
fiadds
pop
xor
sub
shlb
add
gs
ret
and
mov
or
dec
ret
test
mov
mov
imul
adc
jle
icebp
jno
or
shrb
ljmp
adc
jns
ja
jge
shl
xchg
and
mov
xchg
sahf
popa
pop
pop
sub
js
xchg
mov
inc
mov
dec
push
mov
pop
xor
movsl
in
adc
insl
mov
xor
jg
mov
mov
push
push
mov
inc
aas
push
leave
adc
adc
xchg
sub
or
sub
mov
inc
add
aam
inc
push
mov
and
mov
mov
popf
movb
push
cmp
jno
push
insl
adc
mov
movsb
dec
mov
and
cmp
push
fwait
test
mov
imul
nop
leave
pushl
fwait
xchg
lret
mov
adcl
pop
inc
and
fisubrl
sarl
mov
or
mov
pop
adc
testl
pop
aaa
jl
or
lret
sbb
xchg
enter
pop
cmc
push
scas
bound
cmp
and
dec
and
filds
and
out
mov
add
and
mov
pusha
inc
add
lahf
rcrl
pop
mov
add
push
cmp
aas
popa
jae
cmp
dec
daa
fistl
add
adc
rolb
cld
mov
add
fs
sbb
ss
inc
sbb
or
je
pop
and
mov
pop
and
push
sub
xchg
inc
loop
lods
pop
sbb
xchg
bound
sahf
in
stos
or
mov
test
xchg
cmp
push
out
jo
inc
insb
push
in
inc
add
add
adc
push
push
ret
cmp
rorl
shlb
push
cmp
jne
sub
sarb
repz
movsb
stos
rcrb
outsb
xor
mov
xchg
xchg
mov
sbb
or
inc
jge
and
shrl
mov
xchg
stc
add
lods
es
sbb
dec
jne
push
inc
adc
push
mov
ret
aas
lret
pushf
in
inc
test
xchg
push
dec
dec
lds
lret
and
les
or
imul
popf
hlt
mov
add
adc
jns
sub
push
cld
or
xchg
cltd
lea
jo
jns
xchg
cmp
adc
rolb
sbb
fwait
ja
cmp
int
and
xchg
dec
add
push
adc
sub
cmpb
add
fwait
lods
ja
test
xor
repz
xor
inc
or
ror
fmuls
mov
std
stos
pop
push
test
lret
adc
mov
push
cmp
jp
aaa
cs
inc
ljmp
mov
aaa
fisttpll
sbb
movb
cmc
xchg
insb
insl
lods
sub
xor
xchg
and
stos
in
sbb
xchg
mov
pop
sbb
subl
push
and
arpl
inc
push
dec
orl
adcb
mov
or
loopne
mov
mov
arpl
lret
movsb
shll
lock
in
adc
sub
add
rclb
sub
jge
sbb
shrb
scas
add
and
add
pop
jo
rcll
shl
loop
mov
insb
xchg
mov
inc
stos
mov
scas
adc
mov
xlat
ds
filds
xchg
add
or
ds
and
or
xchg
sbb
lcall
jbe
inc
mov
push
lcall
in
inc
pop
push
das
icebp
call
fiaddl
or
inc
add
daa
push
dec
outsb
add
and
xlat
lds
mov
dec
sbb
cld
or
add
addb
adc
and
pop
je
loope
mov
lea
incl
add
cmp
cltd
aam
push
fcomps
imull
mov
pusha
lods
jne
test
add
adc
lods
or
add
pusha
add
mov
sbb
pusha
and
arpl
test
mov
sti
sub
adc
lcall
sbb
adc
jno
cmc
add
dec
jmp
fwait
mov
jo
int3
jne
xor
clc
test
inc
mov
rorl
movsl
orl
add
inc
popf
pop
out
stos
cltd
shlb
insl
sbb
and
mov
inc
and
add
jbe
add
clc
aas
add
mov
cmp
fdivs
and
not
movsb
inc
fxtract
add
nop
cli
cmpsb
inc
add
fistpll
fbld
fs
xor
lods
mov
xor
test
mov
std
jg
cmp
pop
mov
inc
xchg
pop
insb
adc
add
xor
xchg
or
mov
psllq
cmp
xor
cld
pop
adc
jge
popf
push
add
call
shrl
outsl
lcall
push
add
add
imul
aam
loope
inc
or
fwait
shl
icebp
xor
call
fsts
and
add
adc
adc
push
and
xchg
xchg
fistl
push
repz
sbbb
xor
lahf
and
xchg
dec
lahf
loopne
inc
inc
mov
rolb
inc
jge
push
xor
inc
dec
sub
rorb
pop
push
rcll
mov
sbb
adc
push
cltd
inc
das
xchg
cmpsl
cmp
les
popl
inc
aaa
xor
xor
in
cltd
insl
adc
and
jmp
imul
or
xor
std
add
add
jno
dec
pop
xor
sbb
xor
shrb
inc
jnp
xor
mov
or
mov
xchg
gs
movsl
adc
and
add
sub
xor
xor
sbb
mov
inc
lahf
adc
mov
stos
dec
movsl
out
ljmp
xor
and
push
test
inc
mov
icebp
scas
add
add
scas
pop
xor
xor
pop
jmp
or
shlb
test
add
rcr
mov
mov
or
adc
addl
jno
mov
push
mov
ret
ljmp
mov
dec
jae
add
xchg
movsl
test
inc
and
test
sbb
xchg
jl
aad
nop
or
mov
add
mov
adc
xor
hlt
xchg
cltd
inc
imul
mov
dec
jae
jp
outsb
xor
inc
dec
inc
aam
arpl
add
pusha
xchg
std
xchg
mov
movsb
and
adc
lods
push
aas
lock
mov
or
dec
mov
iret
popa
pop
dec
jns
and
js
scas
jno
xchg
into
enter
out
jne
adcb
push
jl
roll
int3
andl
je
or
test
les
pop
add
les
stos
mov
adc
dec
xor
andb
clc
pop
adc
aad
add
enter
loop
jns
dec
push
push
inc
lds
incb
fwait
add
lret
sbb
pusha
rolb
fwait
jmp
popf
lea
mov
adc
add
es
mov
pop
xor
add
xchg
pop
sbb
daa
cmc
inc
ljmp
ja
push
cmpsb
dec
mov
in
test
clc
imul
push
push
scas
add
pop
jb
pop
or
test
mov
inc
or
aas
popa
cmp
xchg
cmp
inc
sbbl
fnop
mov
fstpl
cmp
dec
inc
mov
mov
data16
and
in
fwait
sub
cmp
out
inc
xchg
dec
sbb
jae
dec
adc
loopne
add
or
xchg
jg
jb
iret
rolb
dec
lea
add
pop
in
jmp
orl
fidivrs
add
pop
rolb
mov
pop
mov
jno
xchg
and
and
jbe
sbb
push
cmp
jl
movsb
mov
fsubl
add
pop
pop
mov
fstpt
leave
push
jbe
not
add
sbb
rcl
push
sbb
cmpsb
and
xchg
test
jl
dec
rorb
aam
xor
jno
pop
rorl
dec
clc
mov
lock
jne
inc
adc
and
inc
jb
jg
dec
xchg
cld
xchg
mov
outsl
ficomps
inc
or
jne
push
roll
xor
adc
addl
insl
jo
xor
xor
pushf
xchg
cwtl
mov
mov
mov
mov
cmpsb
ja
ljmp
xor
cmp
mov
or
fists
cmp
mov
add
jnp
lcall
adc
mov
pop
push
add
cmp
inc
and
lret
push
xchg
or
test
aaa
xchg
fiaddl
mov
cmp
insb
jno
sbb
cs
dec
cltd
xchg
xor
in
insl
sbb
push
dec
push
sub
stc
mov
mov
arpl
pop
inc
push
popa
out
ja
outsb
and
and
pop
and
lret
cmp
adc
dec
pcmpgtw
test
lds
inc
xor
lds
sbb
fildl
cwtl
fs
mov
sti
dec
and
dec
das
add
cmp
std
and
je
or
adc
cmpsl
je
adc
add
aas
insb
push
jl
adc
add
add
sub
rcll
push
lea
adc
shl
sysexit
aas
add
lret
pop
shlb
movl
adc
or
pop
daa
add
pop
inc
mov
lea
push
add
nop
loope
and
lahf
and
mov
adc
and
sbb
add
jg
xorb
push
fadds
dec
push
add
adc
xor
push
add
ret
add
enter
ret
push
sub
aam
outsb
dec
adc
bound
bound
stos
fistpll
mov
mov
mov
add
push
sbb
test
add
inc
and
inc
ficomps
out
xor
xchg
xchg
stos
aaa
fwait
js
in
xchg
xor
test
popa
adcb
nop
add
add
lods
pop
callw
xchg
jbe
pop
imul
add
push
cmp
jno
hlt
imul
int
mov
cmp
sub
xchg
mov
xchg
movsb
ja
mov
sub
and
in
add
pop
and
pop
lock
jb
sbb
pop
xlat
aam
adc
jae
add
loop
cwtl
xor
js
push
and
cmpsb
mov
ljmp
pop
push
jnp
das
aam
xchg
dec
cmpsb
inc
mov
lret
push
insb
adc
and
popf
scas
lcall
mov
inc
cmp
dec
or
sub
inc
lods
xchg
push
add
mov
and
xlat
pop
mov
dec
test
test
push
xor
mov
add
data16
lea
adc
sbb
xchg
sub
insb
adc
push
sbb
test
ret
inc
cmpsb
adc
inc
add
es
and
popa
sub
sub
xor
shlb
push
jns
jb
pop
jb
inc
pop
out
mov
addr16
dec
lcall
mov
fwait
adc
and
sbb
dec
lock
add
add
cmpsl
dec
push
int
xchg
vmovss
push
adc
lahf
fisubl
xchg
or
dec
pop
popf
and
sub
push
mov
popa
jmp
push
push
lds
or
jecxz
mov
icebp
stc
add
pop
or
add
add
ficoml
xor
imul
outsb
inc
js
pop
test
or
sbb
enter
mov
gs
and
ret
mov
jmp
cmp
add
add
in
in
xchg
pop
sbb
cmpl
test
sbb
stos
push
enter
mov
cltd
mov
sub
or
mov
push
sti
out
add
xchg
lea
add
ret
ret
or
add
leave
push
xor
inc
addb
rolb
inc
mov
inc
stos
add
add
sahf
dec
add
mov
lahf
or
pop
dec
test
push
mov
xchg
inc
cs
xchg
pop
popa
loopne
cmp
add
mov
dec
mov
xchg
mov
mov
add
sarb
sbb
sbb
xchg
jne
aad
xor
add
in
sub
cli
test
mov
pop
inc
add
push
mov
and
pop
add
jle
xor
in
cmp
cs
aaa
cwtl
add
nop
sbb
xor
or
and
sub
or
shlb
lods
movsl
mov
add
adc
dec
add
or
andb
aad
cmp
cmp
add
lcall
ss
sbb
add
sub
imul
dec
adc
add
jmp
add
or
add
pop
add
out
clc
push
ret
dec
sbb
and
ficompl
loope
hlt
adc
test
ja
hlt
pop
mov
fiadds
sub
add
dec
rolb
cmp
adcl
stos
push
inc
aam
pop
and
fwait
and
add
imul
fwait
or
xchg
cltd
stc
icebp
add
fildll
xchg
cmp
clc
xor
jae
push
insb
mov
or
pop
push
stos
and
insl
mov
das
cmp
imul
cmp
call
pop
nop
dec
xchg
test
js
stos
cmc
fst
inc
dec
jg
and
or
popa
sub
and
sub
jb
mov
mov
push
sub
xchg
jnp
insb
pop
movsb
mov
leave
inc
punpckhbw
push
dec
jmp
ds
push
cmc
sbb
mov
xor
jecxz
add
not
cmpsl
and
repnz
jae
sbb
mov
jle
lcall
xchg
out
bound
push
bound
mov
adc
cmp
cwtl
xchg
call
or
xlat
test
pslld
cwtl
js
add
xor
ret
or
jnp
jne
and
and
push
shll
push
test
test
mov
push
mov
nop
fists
pushl
fwait
call
add
loop
leave
mov
push
push
pop
test
dec
sbb
inc
test
dec
sub
adc
outsl
cmp
push
mov
imul
les
enter
movsb
out
cmp
scas
mov
push
btsl
mov
cmpsl
sub
in
add
xchg
bound
push
test
int
add
xchg
inc
or
out
sbb
movb
sbb
adc
pop
mov
sub
inc
fidivl
or
and
pop
inc
adc
sbbl
push
mov
mov
test
add
add
mov
out
jmp
xchg
out
inc
xchg
adc
fwait
sbb
fbstp
add
xor
push
ja
sbb
clc
inc
xor
inc
cmc
dec
push
or
inc
sahf
mov
in
movsb
mov
push
push
jmp
dec
test
or
cmp
movsb
inc
sarb
inc
xchg
add
or
dec
pop
xor
iret
push
inc
xor
push
enter
fimull
add
dec
mov
fiadds
jg
add
mov
stos
mov
sub
popf
xchg
mov
jecxz
mov
adc
and
pop
push
or
add
add
add
pop
push
xor
sub
shlb
dec
xor
sbb
popa
mov
mov
xlat
and
inc
movsb
lcall
cmc
mov
xchg
andb
or
inc
icebp
ljmp
xchg
xchg
adc
pop
stc
xchg
push
rcrb
ret
xchg
xchg
push
and
adc
add
stos
sub
subb
and
push
adc
test
das
outsl
sub
lea
dec
sbb
scas
inc
in
lds
insb
dec
push
push
jg
mov
cmc
je
dec
es
dec
pop
inc
pushf
not
cmp
scas
adc
mov
pop
sti
sub
stos
pop
or
lcall
cmp
add
sub
rclb
cwtl
push
add
adc
and
aad
and
jo
repz
mov
clc
mov
cmp
fstpl
mov
lea
push
pop
sub
cltd
inc
lret
push
adc
or
xchg
and
rorl
pop
and
stos
movsl
outsl
push
pop
push
int
jns
pop
sub
stos
jo
sub
ja
cmp
sbb
jecxz
mov
nop
cmp
aam
popf
jecxz
mov
sub
test
add
in
int
mov
cmp
hlt
insl
cmp
sbbl
push
dec
add
add
test
nop
cwtl
cwtl
adc
jle
xor
jo
adc
daa
cmovl
shl
incl
or
xlat
in
cmp
popa
add
or
push
lret
xchg
xchg
mov
add
push
scas
mov
sub
jmp
sti
xchg
out
and
aas
jl
xchg
cmpsb
sbb
mov
int
jbe
xor
mov
imulb
adc
aaa
les
ds
push
mov
cwtl
xor
imul
push
push
mov
rorl
ret
mov
and
jnp
and
and
adc
lea
adc
and
out
aam
mov
push
add
inc
stos
data16
and
imull
push
sub
sub
pop
pushf
mov
cltd
mov
inc
pop
lea
adc
sarb
insb
aas
nop
psrld
add
iret
add
push
push
add
adc
addr16
dec
jae
jno
xor
jno
rcrl
push
lock
xor
aad
and
nop
lods
dec
add
inc
ljmp
repnz
mov
iret
xorb
push
inc
and
and
enter
xchg
sbb
aad
adc
pop
js
shlb
add
or
stc
fstpl
push
xor
pop
push
pop
xchg
cmpsl
add
cmpl
addb
inc
mov
lds
ljmp
movsb
mov
adcb
scas
xor
dec
xorl
dec
gs
popa
or
xor
inc
ja
mov
sbb
pushf
xchg
aam
jl
clc
and
xor
add
cvtps2pi
add
je
stc
or
adc
sub
push
subl
and
xchg
cli
or
push
sub
inc
adc
adcb
imul
andb
add
test
call
inc
fs
or
add
jecxz
add
lds
mov
cs
sub
push
test
jp
mov
mov
test
jbe
cmpsl
andb
inc
scas
fbstp
sub
jnp
cmp
inc
push
loopne
setne
loope
clc
dec
xor
xchg
inc
sbb
arpl
mov
enter
inc
xchg
adc
aad
mov
popa
mov
mov
repz
xchg
cmp
dec
mov
lock
jno
xchg
jns
push
inc
pusha
stos
push
bound
test
cmp
fsubs
cmp
mov
sub
mov
adc
xor
add
xchg
xorb
test
push
sub
mov
push
pop
xchg
in
mov
push
loopne
imul
xchg
push
dec
lcall
adc
or
pop
xor
and
jge
enter
or
mov
mov
jle
add
xchg
test
inc
dec
adc
pop
xor
or
xor
add
mov
pop
dec
and
sbb
ljmp
xchg
or
retw
cmpsb
mov
jo
lods
andb
add
hlt
pop
add
inc
adc
ret
std
or
ss
adc
divl
push
mov
daa
js
or
push
cmpsb
scas
insb
cli
fildll
jmp
mov
push
mov
clc
xchg
das
mov
mov
xor
shrb
or
xchg
pop
movsb
imul
addb
mov
add
out
jle
mov
mov
sub
adc
cmpl
leave
xchg
xor
push
dec
xchg
test
or
dec
pop
imul
inc
stos
xchg
ljmpw
dec
or
addr16
xchg
outsb
fidivrl
push
jmp
bound
cmp
inc
pop
sub
and
and
js
lods
push
pop
xchg
lahf
xor
and
xchg
fs
out
dec
add
mov
es
sub
fistpll
cwtl
adc
cmp
ja
dec
add
adc
hlt
in
sub
sbbl
jg
cltd
cmp
call
adc
inc
test
ljmpw
jl
and
or
call
loopne
mov
ret
ss
out
dec
lock
mov
mov
cwtl
call
jb
add
fwait
push
adc
sub
lahf
std
adc
ljmp
lock
out
popf
push
test
ljmp
movsb
cmc
mov
push
mov
cwtl
add
add
test
pop
cmc
sub
add
out
sub
sub
add
xor
add
fistpll
mov
bound
pop
shll
fdivrs
and
test
or
insl
rolb
lcall
push
inc
addl
pop
es
inc
pop
cwtl
sbb
dec
or
xor
push
add
push
mov
push
dec
fadds
cmp
inc
dec
mov
repz
les
ljmp
subb
jno
lret
incb
inc
enter
lcall
call
sub
xchg
es
sub
sbb
addr16
adc
sub
add
push
lock
mov
push
leave
lds
add
stos
add
and
ret
nop
xor
mov
ja
rclb
or
rclb
mov
out
mov
nop
stos
mov
addl
and
inc
push
inc
fildll
sbb
into
adc
fwait
add
in
ljmp
insb
xlat
adc
sub
pop
js
mov
jecxz
rcrb
add
lods
ret
and
mov
add
or
dec
or
and
shlb
push
adc
movsb
addb
clc
sbb
gs
leave
jmp
inc
dec
jb
mov
inc
xchg
push
es
add
add
xchg
add
mov
in
add
add
mov
or
mov
or
add
add
fstl
or
add
inc
enter
loope
shl
push
jns
popa
add
pop
inc
repz
sbb
xchg
jo
dec
lcall
add
push
jnp
and
les
inc
lea
push
mov
movsb
test
pop
loope
sub
mov
adc
pushf
cmp
jle
mov
add
jle
inc
jbe
add
fistpl
ss
mov
mov
xor
adc
cmp
inc
test
dec
arpl
rclb
adc
mov
sub
mov
xchg
cli
mov
add
add
mov
adc
sub
rclb
cmpsb
sbb
decl
aam
xchg
mov
add
imul
stos
mov
cmc
add
stos
and
aas
or
jne
lcall
mov
push
mov
jge
movsb
out
add
hlt
xor
jae
push
sbb
loopne
pop
movsl
imulb
test
xor
sbb
and
adc
or
test
and
and
dec
xor
and
push
shrb
push
leave
aas
and
sub
or
imul
mov
mov
or
adc
mov
inc
inc
arpl
cmp
addr16
lds
adc
push
lds
and
or
test
mov
inc
and
test
inc
clc
scas
mov
pop
outsb
add
rorb
dec
fscale
and
inc
pop
pusha
add
sub
testl
out
jg
jo
mov
cs
or
movsb
xor
jno
lock
sbb
inc
add
sub
xor
pop
icebp
pop
outsb
loope
xchg
add
stos
push
in
add
sbb
add
stos
xchg
aas
and
inc
mov
jp
loope
push
adc
or
xor
inc
pushf
sub
add
jne
imul
sbb
movsl
ja
inc
pop
lds
jo
mov
xchg
cmpsl
subl
dec
push
mov
aam
aas
sub
lea
enter
adc
jle
mov
mov
loope
dec
mov
imul
adc
fwait
mov
sub
add
dec
adc
test
xor
shr
xor
add
in
sub
and
mov
out
cs
popf
xchg
mov
add
xchg
loopne
sbb
sub
and
mov
add
cmp
pop
pop
daa
mov
lcall
adc
mov
sbb
add
ror
lahf
add
mov
sub
sbb
cmp
sbb
adc
pusha
push
jl
mov
pop
add
cltd
add
push
mov
push
adc
shr
lods
add
rorb
lahf
lcall
add
mov
dec
push
fcoms
fisubrs
or
mov
dec
mov
push
shlb
int
pop
pop
xchg
insb
incl
test
cmp
mov
pop
fs
lcall
ljmp
and
and
push
addr16
into
sbb
or
xor
pusha
loope
lcall
adc
clc
mov
movsl
in
inc
cli
hlt
or
lea
dec
jle
pop
adc
fdivs
mov
ret
fnsave
push
xor
cmp
mov
xor
add
jo
jnp
test
aaa
push
xchg
repnz
adcl
add
stos
fldenv
dec
sbb
lea
add
lcall
cmp
sbb
push
push
and
sbb
sub
push
in
adc
stos
and
mov
mov
aam
shlb
lret
mov
or
int
orl
push
pusha
aas
or
push
adc
sub
mov
inc
popa
add
hlt
popa
xor
mov
loope
mov
outsl
jmp
push
aaa
jo
push
ret
cltd
sar
or
je
test
adc
cmpsb
sbb
jo
dec
pop
sti
jns
xchg
mov
jnp
arpl
push
lods
inc
adc
and
inc
xchg
cmc
pushl
out
int
add
add
dec
push
xchg
mov
jmp
cmp
cs
andl
repz
enter
cwtl
xchg
xor
add
jmp
sub
movb
or
loop
and
mov
lahf
imul
mov
inc
jae
dec
dec
test
mov
jns
or
imul
andb
mov
sar
xchg
sbb
sub
push
inc
xorl
addr16
inc
and
add
and
sbb
scas
jge
inc
movb
push
mov
divl
push
xchg
xor
in
jne
inc
iret
dec
xor
adc
movsl
ljmp
mov
sbb
clc
or
add
stos
pop
orl
xchg
cmp
int
xor
orl
sub
mov
push
add
mov
add
xchg
or
cmovs
loop
jmp
xor
dec
sub
and
xorl
push
xchg
fidivl
dec
int
mov
and
mov
cwtl
xor
inc
loopne
xchg
cltd
inc
adc
push
add
insl
xchg
imul
or
xchg
and
cld
mov
jnp
push
mov
test
pop
add
sbb
xchg
js
lret
sub
sub
loop
stos
add
shlb
cld
inc
pop
rcrl
mov
add
mov
mov
add
shrb
add
in
insb
xor
add
shlb
and
mov
shlb
test
adc
mov
push
rcrl
hlt
jecxz
in
mov
dec
add
fwait
test
stos
les
xchg
xor
inc
rorl
icebp
mov
nop
stos
sbb
adc
or
cmp
adc
pop
icebp
iret
bound
js
xchg
loope
inc
movsl
lea
pusha
adc
jo
insl
dec
out
xchg
adcb
and
adc
ljmp
leave
popa
and
sbb
pop
xorb
or
or
andb
mov
pop
pop
xor
cmp
pop
rcll
push
mov
push
push
adcb
add
leave
fwait
outsb
out
and
jae
test
leave
inc
out
sbb
xor
and
jp
mov
daa
ljmp
and
das
sldt
mov
mov
dec
mov
mov
xor
cld
pop
and
das
xchg
dec
rolb
xor
and
ds
lods
sbb
mov
fwait
pop
xchg
sbb
loope
mov
dec
bound
sub
js
add
out
ss
fbld
cmp
xchg
test
inc
adc
shlb
imul
test
adc
xchg
fnstcw
lods
fnstcw
test
int3
and
pop
imul
push
sub
push
xchg
cmpsb
scas
dec
mov
push
adc
push
add
lret
mov
mov
xchg
cmpb
iret
dec
aas
adc
inc
fs
mov
cs
roll
inc
dec
xchg
mov
or
mov
fistl
dec
pusha
dec
pop
pop
or
cmp
daa
push
aaa
mov
loopne
inc
push
adc
jae
or
and
sub
xor
dec
lods
mov
mov
call
jae
jo
push
inc
loop
mov
jge
call
repnz
xchg
jp
inc
jp
popa
mov
pop
test
push
mov
add
mov
clc
mov
inc
xchg
popa
push
xor
add
or
mov
add
sarl
add
scas
jmp
mov
call
rcll
xor
add
ucomiss
imul
ret
movsb
ret
inc
xor
sbb
loop
and
pusha
add
stos
fistpl
mov
popf
lcall
mov
and
xchg
les
inc
and
into
jns
push
movsb
andl
sub
insl
std
lret
and
pop
inc
dec
adc
dec
lds
pop
mov
pop
pop
imul
add
dec
lahf
mov
lods
stos
xchg
mov
rdmsr
orb
inc
adc
jns
and
pop
dec
mov
sbb
inc
repnz
lock
stos
pop
sub
test
adc
add
mov
popf
xor
aam
sbb
enter
or
ss
out
pop
add
ljmp
mov
push
inc
mov
lods
orb
push
sub
movsl
cmp
fsub
lods
inc
loopne
inc
imul
sbb
push
leave
add
xchg
add
add
test
dec
cmp
push
sbb
cltd
mov
mov
add
fs
cmpsl
sub
scas
rol
mov
adc
repz
movsl
sub
andb
xchg
mov
cltd
repnz
add
rorb
addb
mov
dec
cmpsl
and
nop
jle
inc
or
or
ds
test
decb
lds
or
out
pop
mov
push
inc
xchg
cmpb
push
int
jnp
roll
add
les
adc
and
xor
je
adc
mov
lods
xchg
inc
add
add
inc
dec
add
inc
arpl
test
mov
nop
jle
jmp
xor
mov
sbb
inc
push
aam
lods
into
mov
adc
inc
and
lock
and
add
dec
push
and
pusha
adc
pop
int
pop
jb
data16
stos
mov
xchg
outsl
or
popa
stos
dec
stc
add
ljmp
xor
push
sub
arpl
in
jo
adc
sbb
or
movaps
lret
inc
stos
pop
andb
push
pop
add
and
rcl
sub
leave
inc
mov
mov
add
cli
inc
dec
push
or
jbe
mov
dec
or
lock
cmp
out
data16
mov
or
aaa
imul
aas
adc
and
popf
add
adc
xchg
mov
jo
fmuls
roll
roll
add
es
js
mov
push
inc
in
xor
add
push
push
pusha
fldcw
and
bound
repz
test
movsl
add
loopne
insl
pop
popa
loope
adc
adc
xchg
or
mov
adc
aam
fldl
es
mov
inc
pop
add
cmp
jno
pop
add
insb
popf
dec
or
dec
pop
shll
mov
jno
add
and
sbb
gs
shll
and
adc
adc
adc
ss
mov
adc
sbbb
or
push
sub
daa
mov
sub
les
sti
addr16
jbe
adc
nop
lahf
ret
aaa
stos
push
cmp
and
sarb
mov
outsb
dec
inc
aad
sbb
aaa
jne
mov
sbb
js
imul
stos
mov
dec
test
mov
xchg
mov
push
mov
dec
sub
jmp
andb
pop
pop
loopne
mov
sub
dec
leave
or
inc
repnz
add
mov
mov
add
out
mov
dec
int3
add
cmc
push
mov
add
jo
ret
xchg
mov
jo
cmp
sbb
push
sub
ret
dec
xor
or
or
or
inc
sbb
mov
movsl
xchg
mov
push
movb
or
jmp
add
mov
and
inc
mov
sub
or
adc
jae
adc
es
lcall
adc
push
sti
sbb
jnp
add
mov
adc
ficoms
leave
icebp
sbb
test
jns
call
js
add
add
mov
or
cmpsb
inc
push
mov
data16
lods
cmp
add
lret
mov
or
add
cmp
inc
xchg
jmp
pop
or
popf
loopne
lcall
fdivs
mov
rclb
lock
setb
mov
int
fsubs
jl
outsb
pop
cmp
xchg
cmpsb
sub
push
add
mov
xchg
stos
xchg
add
pop
sbb
sahf
orb
inc
jp
xchg
xchg
cmpsb
cwtl
and
popf
data16
pop
dec
or
imul
sbb
pop
lret
pop
icebp
push
stos
sbb
cli
xchg
push
dec
pop
push
xor
jmp
jb
or
xchg
test
bound
int
ret
movsb
jnp
pop
movsb
sbb
and
push
dec
aad
lret
in
jno
dec
push
adc
test
push
and
push
movl
ret
lods
cltd
mov
inc
test
lea
push
imul
add
cmpsb
push
inc
pop
mov
push
xlat
subb
inc
xor
les
sub
repnz
xchg
daa
icebp
sahf
fiadds
scas
push
xlat
jge
rcl
mov
add
test
lds
aas
bound
inc
add
sarl
stos
imul
icebp
mov
lret
loopne
repz
push
stc
bound
pop
je
push
xchg
sub
or
push
dec
lcall
repz
jo
test
repz
mov
dec
add
add
xchg
repnz
push
dec
and
add
stos
adcb
and
iret
out
test
xor
xor
dec
dec
addr16
jbe
lcall
mov
sub
or
lock
mov
add
xor
cmp
lret
imul
enter
or
sbb
rol
xor
loope
add
out
das
mov
std
int
rol
dec
add
ljmp
ret
and
add
mov
or
sub
insl
bound
ret
das
sub
imul
mov
add
mov
lret
ljmp
mov
adcl
inc
inc
adc
jno
mov
dec
push
mov
adc
rcrl
sbb
adcl
nop
mov
add
push
icebp
mov
cmc
or
adcl
sbb
xchg
lock
sbb
movsb
rclb
or
orb
int
xchg
das
mov
adc
jg
and
aas
add
xchg
sbb
or
fwait
pop
xchg
push
sbb
pop
sahf
cltd
fnstenv
add
xchg
call
cmpsb
adc
fistpl
push
rolb
psubw
add
jecxz
pop
fwait
adc
negb
les
push
push
dec
mov
jo
and
adc
imul
rorl
push
sub
rcr
or
jnp
stc
orb
add
fcoml
sbb
adc
and
outsl
into
les
loopne
jne
cmc
adc
data16
sub
mov
push
push
inc
ds
nop
pop
into
pop
sub
add
outsb
pop
stc
inc
adc
addb
add
ljmp
cmpsl
shlb
jmp
inc
sub
mov
push
sbb
lahf
sahf
sub
inc
imull
add
dec
popa
xchg
test
inc
xchg
addl
sub
nop
push
jb
sbb
jno
orb
lahf
push
xor
test
mov
mov
jne
cmp
jge
repnz
stos
xchg
sbb
in
or
jb
lret
push
leave
and
dec
adc
xchg
iret
sbb
adc
gs
mov
dec
ret
or
scas
adc
cs
jo
leave
pop
xchg
fisubrs
sbb
push
pop
add
adcb
pop
pop
mov
inc
sbb
or
sub
std
fidivs
adc
ss
nop
add
mov
inc
insl
adc
pop
xor
push
inc
sbb
mov
icebp
and
inc
scas
mov
xor
mov
mov
jnp
mov
aad
das
inc
pop
pusha
loope
and
push
ror
cmp
inc
mov
inc
xchg
leave
les
bound
add
test
add
jecxz
xor
adc
fidivrs
sub
push
sub
push
and
aam
sbb
stc
pop
inc
leave
inc
dec
cld
lods
cmp
and
inc
mov
dec
je
add
in
adcb
mov
das
iret
pop
sub
and
roll
movsl
add
stc
jl
sub
daa
aam
lods
inc
pop
cmp
enter
das
or
inc
or
stos
add
fcom
lds
xchg
inc
cmpsb
repz
dec
mov
sub
add
mov
sbb
add
sub
addb
dec
incl
cwtl
dec
lcall
pop
iret
lock
scas
dec
cmp
test
xchg
lret
sbb
and
push
cld
loopne
inc
dec
xchg
test
xor
push
dec
mov
icebp
add
adc
int3
push
pushf
stos
movsb
inc
outsl
jnp
dec
jo
lret
inc
insb
cltd
dec
loope
idivb
add
in
sbb
inc
inc
divl
adc
into
sbb
xchg
inc
loope
pop
cmc
orb
std
lods
imul
inc
cmpsb
rcrl
mov
rcrb
cmpl
popf
sub
add
inc
jb
xchg
push
js
icebp
cmpb
push
add
push
dec
xchg
test
xchg
xor
adc
call
in
inc
add
xchg
loop
or
mov
sub
popl
pop
test
xchg
inc
and
push
adc
aam
pop
aas
movsb
xchg
repnz
mov
inc
pop
xor
adc
sub
les
inc
xchg
xchg
cwtl
outsl
je
jle
sub
inc
adc
xor
push
add
rcl
sub
mov
add
mov
test
cmp
adc
lods
ja
pop
push
incl
xchg
ficoml
cs
adc
mov
mov
add
daa
mov
xchg
push
jne
movsl
dec
add
je
dec
call
cwtl
cld
cmp
adc
je
push
out
movsb
incb
mov
push
jecxz
andb
push
xor
rclb
add
push
cld
loope
add
scas
cld
sub
jl
cltd
or
cmp
or
or
sub
dec
test
call
or
xchg
stc
mov
mov
and
je
xchg
jl
movsb
pop
loope
xchg
out
mov
and
pop
insl
adc
pop
add
seto
sti
sahf
mov
fiaddl
movsl
es
aad
movsl
mov
and
gs
iret
es
or
aaa
adc
inc
mov
add
adc
or
test
movsb
push
and
out
test
mov
ror
or
aam
or
add
push
jno
xorb
lcall
inc
mov
cmp
cmpsb
or
inc
push
mov
in
scas
pusha
mov
ja
inc
dec
pop
movsl
iret
jl
inc
push
ficoml
mov
adc
adc
dec
inc
dec
push
pop
dec
lcall
ja
pop
adc
push
inc
jge
add
mov
sub
add
add
jl
sub
js
pop
add
fistps
cmp
dec
call
add
add
mov
adc
and
cmp
clc
sbb
xor
mov
pop
add
pop
enter
icebp
pop
leave
lret
mov
add
sbb
rolb
repnz
dec
fstp
negb
data16
inc
add
outsb
push
ja
xchg
add
aaa
and
imul
fdivs
add
sbb
arpl
shrl
cmp
scas
popf
mov
loopne
pop
sbb
loopne
xchg
sbb
or
dec
orb
mov
adc
repz
outsb
dec
icebp
pusha
push
cli
sti
sbbb
decl
sbb
mov
and
inc
loop
inc
lcall
test
jmp
imul
push
inc
sbb
scas
cmpsb
test
leave
lds
dec
xchg
lret
loopne
xchg
mov
and
sub
xor
pusha
add
and
push
pop
aam
dec
xor
lcall
adc
xchg
lea
sbb
scas
rolb
loopne
and
pop
and
add
or
pop
add
lcall
mov
dec
stos
sub
stos
add
mov
mov
push
add
sub
pop
idiv
das
cmc
movsl
push
sahf
jnp
testl
cmp
mov
jmp
and
add
push
jne
pop
movsb
lea
push
leave
shlb
popa
loopne
sbb
cwtl
leave
xchg
iret
dec
pop
pop
push
sub
loop
cmpsb
sbb
sbb
or
lahf
and
push
inc
xchg
in
gs
add
mov
aaa
pop
and
add
cltd
jecxz
add
ds
mov
inc
xchg
movsb
cmovbe
cmp
pop
push
inc
xor
push
add
cmp
and
insb
or
test
aam
xor
loop
into
dec
aam
dec
or
mov
mov
les
fnstcw
stos
or
or
jmp
add
aam
xlat
xchg
dec
rclb
adc
imul
fsts
stos
push
adc
or
xor
mov
addl
fs
popf
andb
mov
push
mov
jne
pop
lods
pushl
adc
addl
and
add
xchg
in
icebp
pop
js
add
jge
mov
push
xor
adc
adc
das
mov
das
adc
in
les
xlat
push
sbb
shll
and
and
fimull
sub
loope
add
sub
das
mov
mov
xor
pop
jae
push
push
cmp
iret
or
movups
sub
jl
add
and
cmp
or
push
les
in
add
adc
cld
push
xchg
adc
sub
int
hlt
mov
mov
jb
int3
xor
jle
fcomp
lods
adc
ret
mov
push
inc
sahf
pop
adc
or
add
icebp
movsb
xchg
je
inc
lcall
xchg
and
jp
jmp
cmc
or
inc
sarb
andl
mov
addr16
movb
push
pop
and
xor
subl
mov
push
sub
inc
ja
inc
push
inc
push
test
loopne
inc
and
add
sub
test
xor
pop
push
and
aad
xchg
ss
push
xchg
sub
push
mov
add
jno
add
and
pop
adc
rcll
or
xor
lock
fwait
pusha
or
mov
dec
hlt
aaa
je
mov
ss
rorl
push
inc
test
fcomps
pop
aas
aam
pop
stc
sub
push
aad
and
pop
sti
test
rcrb
pop
adc
xchg
out
call
add
xor
fwait
xor
pushf
xchg
data16
inc
stos
out
movsb
mov
cli
ja
in
lret
inc
jmp
int
jo
cmp
inc
fbld
ja
mov
test
dec
mov
add
imul
or
hlt
repnz
add
sbbl
adcb
push
cmpsb
mov
mov
adc
push
aam
xorl
mov
or
inc
cli
add
jle
leave
sbb
getsec
adc
adc
push
gs
or
rolb
fcmovb
or
ret
xor
test
add
and
mov
push
cmpsb
add
inc
hlt
int
imul
and
ss
mov
inc
scas
inc
lcall
addb
or
lods
mov
inc
std
mov
enter
push
pop
mov
adc
xchg
lds
sub
add
xlat
inc
and
inc
fnstenv
push
ret
push
iret
pop
addb
add
xor
dec
mov
subb
adc
sub
pop
jl
xorb
rclb
subl
inc
and
or
cmp
je
add
jb
push
mov
cmp
inc
push
into
mov
movsl
shlb
dec
or
adc
popa
adc
xorl
cmp
add
jecxz
aas
cmp
and
out
ret
out
mov
and
adc
inc
imul
adc
mov
add
xlat
inc
push
aas
cmpsl
jno
rorl
or
add
orb
mov
or
xor
jg
insb
loope
or
xor
push
leave
add
sub
jecxz
mov
lds
clc
and
or
push
xor
mov
popf
rcrl
stos
inc
cltd
dec
xor
mov
xchg
movsl
and
and
xchg
dec
xchg
nop
movsb
shll
inc
test
jge
mov
jmp
fyl2xp1
mov
popa
pop
outsb
or
mov
in
xor
sbbb
movsl
sub
dec
mov
mov
mov
mov
pop
cmpb
icebp
pop
orb
pop
sub
ret
dec
mov
bound
xor
pop
pusha
and
rcr
fwait
and
mov
ljmp
xor
push
outsb
push
xor
movsl
mov
or
mov
add
shrb
dec
push
and
sub
add
mov
pop
add
popa
push
jge
or
loopne
add
cmp
ret
mov
mov
adc
add
movsl
addb
add
pusha
mov
loop
idivb
mov
pop
inc
dec
inc
addl
int
sbb
mov
stos
call
stos
xor
dec
das
push
in
test
push
sbb
mov
loopne
add
push
add
sub
sarb
int3
mov
xchg
nop
mov
orb
push
add
dec
mov
or
and
ret
mov
test
pop
and
and
pusha
dec
aam
movsb
adc
mov
xor
fwait
and
je
push
insl
and
add
pop
cmp
add
fwait
rclb
orb
cmp
adc
mov
pop
push
or
inc
rclb
xchg
sub
rol
dec
fidivrl
or
js
adc
aaa
cmp
jg
aad
cmp
pop
xchg
jp
mov
mov
mov
xorb
repz
cwtl
scas
sbb
int
lahf
sbb
gs
mov
dec
xorl
push
push
ds
rorb
jo
out
notl
lret
sub
xor
dec
ss
pusha
push
jmp
jo
mov
enter
or
repz
mov
ljmp
shrl
push
bswap
add
lret
add
xor
sub
aaa
sbb
add
repnz
and
mov
aaa
push
mov
roll
mov
aaa
jo
aam
js
xor
pop
pop
sbb
addb
pop
rolb
sub
lea
xor
pop
scas
pshufw
popf
pop
xor
add
movsl
jo
dec
popa
cmc
adc
mov
dec
xchg
inc
rolb
imul
test
inc
test
or
mov
add
cwtl
mov
aad
cmc
mov
scas
ret
inc
lods
mov
add
xlat
popl
inc
xchg
mov
inc
sbbl
push
fldl
push
nop
cmp
dec
int
sub
push
addl
dec
and
mov
leave
dec
adc
lahf
data16
push
jns
cwtl
mov
cltd
jge
sub
sub
mov
jno
ljmp
xor
or
je
mov
sbb
xchg
movsl
aaa
fsubs
pusha
add
iret
pop
or
call
sub
cmpsl
xlat
and
add
fisttps
and
pop
aad
mov
mov
das
adc
add
push
adc
push
or
mov
mov
push
sub
insl
adc
adc
addb
negb
out
mov
inc
fwait
loope
sbb
jg
inc
inc
pop
fs
add
push
incl
cwtl
lahf
add
mov
bound
mov
push
sub
xor
xchg
push
push
stc
repnz
mov
jmp
das
or
lahf
xlat
loopne
test
and
in
sub
mov
sub
enter
in
xor
mov
xor
jle
lds
mov
add
sub
les
sbb
xor
sbb
adc
imul
add
out
cld
xchg
sbb
cmp
rcl
repz
adc
sub
add
addr16
cmp
mov
jmp
roll
iret
lret
push
and
push
cmpsb
adc
and
outsl
sub
and
push
ret
xchg
lret
or
mov
enter
mov
daa
dec
outsb
popa
int
add
adc
cmp
shlb
adc
push
or
sub
repnz
or
pop
inc
fwait
ret
adc
or
pushf
add
inc
inc
add
dec
mov
das
stc
jg
sbb
xor
popf
bt
scas
orb
mov
add
pop
sub
rorl
loopne
clc
pop
push
outsb
add
mov
mov
inc
fists
int3
je
mov
stos
and
pop
dec
std
pop
pushf
and
xor
cmp
mov
xchg
lea
sbb
and
and
mov
stc
push
movb
mov
lcall
rolb
leave
dec
movsl
loop
jmp
and
test
cmp
adc
test
loop
or
push
inc
mov
test
pop
push
and
mov
dec
pop
mov
or
imul
push
in
sbb
je
inc
ljmp
push
xchg
mov
sbb
cwtl
sub
popf
es
sub
dec
xchg
cmp
add
cmpsl
lds
inc
cmp
or
or
popa
and
lock
jg
in
jo
cmp
add
fadd
in
push
xchg
or
adc
mov
rolb
js
sarl
push
jecxz
jmp
or
add
or
xorl
add
sbb
shlb
hlt
cmp
xchg
xchg
push
cmp
clc
sub
xor
andl
sub
fcomp
cld
shlb
add
dec
andl
int
sub
enter
cld
pop
add
roll
test
push
adc
xchg
daa
nop
add
jb
or
stc
dec
xchg
lcall
movsb
or
movb
add
inc
jge
adc
mov
mov
cmp
out
xor
add
push
fisttps
mov
pop
adc
lahf
sub
test
addb
sub
in
xchg
sub
ss
push
inc
cmp
inc
and
xor
push
jg
and
sub
loopne
mov
sub
sub
lcall
or
add
adc
clc
xor
dec
or
mov
jno
cmc
inc
xor
shl
add
aam
pop
or
xor
inc
push
dec
dec
and
cmpsb
lcall
or
pusha
xchg
push
add
xchg
movsl
sbb
push
xchg
popa
sbb
adc
jge
inc
push
loope
scas
and
insb
pop
inc
and
xchg
lahf
hlt
add
nop
clc
xchg
loopne
adcb
dec
mov
pop
xchg
add
rorb
adc
dec
enter
lahf
insl
jmp
jl
push
popa
out
loopne
loopne
add
and
idivb
jle
outsl
add
add
or
call
subl
and
lret
iret
shll
dec
mov
out
cmc
sar
push
mov
or
mov
adc
scas
sub
and
sbb
pushf
pop
xchg
mov
sbb
xor
pop
mov
leave
add
stos
cmpl
and
loope
jo
jne
fldt
movsb
add
fcmovnb
push
push
sbb
imul
jmp
test
inc
icebp
push
and
and
mov
and
mov
xor
inc
imul
mov
xchg
pop
xor
decl
dec
sbb
je
adc
add
ret
push
pop
cmp
stos
push
dec
fisttps
test
inc
jecxz
inc
xor
and
popa
popa
and
xchg
cmp
push
sti
or
cmp
push
test
test
lods
stos
add
sub
mov
inc
rcrb
movsb
add
xor
es
jne
cmpsb
or
mov
lds
fistpl
loopne
or
hlt
icebp
and
ljmp
push
out
inc
cmpb
stos
unpcklpd
jl
jb
add
add
mov
inc
aam
cmp
pushl
pop
or
pop
orw
add
sub
add
cmp
cmp
lcall
outsl
inc
pusha
fldl
push
imul
mov
adc
jns
and
adc
mov
add
add
pop
or
inc
ret
push
push
mov
adc
add
sub
sub
test
xor
and
sub
mov
lock
dec
jo
pop
adc
add
imul
sbb
or
push
xor
xor
add
mov
add
das
inc
or
xchg
popf
mov
lods
jae
sub
or
sub
lahf
inc
bound
inc
xor
repnz
jb
xchg
fbstp
cs
in
sub
adc
cmc
sbb
add
out
inc
loopne
mov
mov
cmp
and
mov
lcall
dec
xor
adc
dec
das
mov
lcall
outsb
adc
pop
dec
ret
xchg
test
push
je
push
dec
push
jo
cmpsb
or
imul
pop
icebp
xor
xor
out
lea
inc
and
mov
sti
jno
sub
fs
jae
call
roll
xchg
mov
repz
and
or
icebp
pop
mov
add
hlt
cmp
jecxz
fdivrl
les
or
inc
jnp
aaa
rolb
je
mov
nop
call
iret
pop
insl
dec
xor
test
insl
loop
push
movl
inc
adc
jno
in
mov
sub
rcrb
cli
mov
mov
shlb
inc
aam
dec
mov
mov
addl
inc
sahf
xor
enter
add
call
adc
and
cmpsb
xchg
popa
push
cpuid
mov
push
stc
cld
xchg
pushf
cmp
sbb
dec
test
stc
pop
fs
inc
mov
mov
push
push
test
jb
dec
rcrb
and
inc
mov
xor
adc
dec
arpl
jo
push
jae
adcb
imul
add
js
bound
push
add
and
add
jb
pop
adc
push
inc
mov
xor
flds
jo
andb
into
inc
sub
and
inc
shll
lds
stos
pop
mov
test
and
lret
sub
pop
lock
inc
or
adc
push
in
mov
orl
add
mov
and
mov
loopne
shl
add
or
outsl
mov
push
inc
add
sbb
jmp
jnp
loope
inc
mov
mov
roll
daa
test
mov
and
js
push
std
push
andb
sub
addb
mov
and
add
outsl
enter
inc
cmpsb
lods
cmp
insl
and
inc
adc
mov
or
cmpb
cmp
xchg
pushf
xchg
dec
cli
mov
ljmp
pusha
sbb
rorb
setp
push
js
lods
cld
and
je
xchg
cmpsb
ljmp
mov
pusha
sbb
rorl
pop
or
daa
jno
mov
fadd
and
sbb
pop
sysexit
bound
sbb
mov
or
inc
xorb
cmpsl
rorb
pusha
mov
mov
add
add
fbstp
adc
imul
pop
test
pop
xchg
loope
fstl
inc
cld
shlb
push
push
cli
cltd
lds
outsl
jg
cmpsl
sbb
sub
aas
lret
xchg
adc
xor
lea
mov
push
xor
test
jbe
pop
push
fldl
or
xchg
cmp
pop
add
push
dec
add
sbb
and
or
inc
inc
inc
jae
lods
sub
or
add
or
cltd
push
push
jg
sub
mov
mov
in
lock
xor
jbe
adc
cmp
out
std
test
xor
fsub
jl
cmp
xor
aam
lret
adc
roll
jge
xor
mov
aaa
cli
add
push
scas
inc
cmovp
mov
sbb
and
cmp
and
add
jecxz
call
dec
sbb
xchg
and
test
dec
and
popf
add
inc
lcall
inc
pusha
mov
and
mov
popf
and
inc
dec
jae
rolb
mov
add
addr16
push
push
or
and
call
jge
xor
dec
pop
xchg
inc
jmp
and
rcrb
sbb
cwtl
inc
jne
aad
mov
mov
push
mov
and
mov
mov
cmp
inc
cmp
and
push
lcall
pusha
stos
push
pop
add
cwtl
sbb
rolb
pop
pop
or
addb
push
cmp
rsm
and
lcall
pop
pop
add
and
jae
jmp
in
xor
dec
xchg
xor
xchg
lods
inc
jg
xchg
loop
or
pusha
addb
test
inc
insl
loopne
xchg
ljmp
and
fs
sbb
insb
push
push
orl
dec
inc
lret
sahf
stos
imul
sub
inc
icebp
add
scas
cmp
imul
dec
push
cmp
fldt
push
sbb
lea
inc
sbb
aaa
stos
add
ljmp
aad
adc
xchg
mov
sbb
or
adc
std
xor
sahf
icebp
jnp
bound
or
cmc
or
add
xchg
pop
jo
mov
lret
les
pop
sbb
adc
adc
andl
mov
mov
ds
inc
sbb
and
sub
or
or
adc
adc
inc
aam
fcompl
gs
or
adc
inc
and
mov
add
mov
dec
inc
or
push
orl
cltd
mov
nop
inc
or
inc
inc
or
adc
cmc
out
push
xor
add
or
leave
add
sbb
cmpsl
mov
bound
mov
and
int
mov
test
xchg
lods
jle
sub
cwtl
cld
in
jnp
add
adc
test
sbb
push
xchg
hlt
inc
pop
jl
mov
jle
xchg
lods
xor
jle
mov
dec
and
testb
scas
addb
mov
pop
jns
and
cmp
adc
mov
push
dec
sub
in
pop
dec
pop
test
into
push
jne
mov
jns
or
inc
mov
rcll
dec
imul
xlat
pop
cmp
or
inc
out
sub
xor
adc
xchg
push
dec
and
dec
inc
ret
pop
push
stos
add
add
jo
pop
inc
cmp
in
add
lds
cmc
mov
sarl
imul
mov
xchg
repnz
and
push
mov
sbb
pop
xlat
adc
mov
sub
or
push
add
add
and
pop
cmp
cmp
xorl
leave
rcll
cmp
add
and
out
jo
int
add
es
inc
leave
add
and
stos
or
inc
mov
pop
or
mov
stos
xor
orb
test
xchg
movl
stos
sub
fisttps
lock
mov
mov
je
or
inc
cmp
and
call
daa
jo
xlat
cwtl
lcall
push
mov
mov
les
push
imul
xchg
lds
inc
mov
sbb
daa
add
mov
mov
dec
add
cmp
jp
inc
scas
test
movsb
sbb
push
scas
cmp
iret
dec
adc
ret
pop
icebp
icebp
adc
dec
inc
add
pop
fsubp
or
and
mov
das
jge
jecxz
mov
cld
insl
cwtl
mov
sub
scas
scas
cwtl
in
ficompl
adc
add
arpl
rorl
cmp
sbb
popa
add
push
out
jle
dec
mov
aad
mov
jae
push
push
cmp
rcrb
nop
bound
loop
lods
mov
or
or
mov
stos
cwtl
push
inc
andb
aam
sbb
out
mov
ret
mov
inc
dec
cmp
sbb
xlat
inc
or
bound
fists
inc
sbb
and
testl
push
push
cs
or
push
outsb
pop
das
or
test
add
iret
dec
fadds
shll
mov
popa
mov
les
es
lahf
dec
dec
stc
data16
rclb
repnz
clc
push
jb
or
add
sbb
inc
jae
rolb
lcall
xchg
pop
and
movsb
xor
dec
das
xor
pop
mov
roll
je
push
jae
and
lea
clc
hlt
cmpsb
sub
inc
les
pop
gs
mov
inc
or
das
cltd
ficompl
aaa
cs
cmp
jle
movsb
mov
int
sbb
popf
repz
push
cltd
xchg
adc
sub
add
mov
and
sbb
pop
adc
call
push
js
xlat
in
cmpsb
xor
cmpsb
movsl
rorb
jg
dec
scas
or
add
adc
pop
mov
bound
cmp
inc
test
xor
inc
sub
add
pop
scas
cli
jg
add
lds
add
xchg
test
ret
pop
xchg
daa
jmp
jae
cmp
inc
add
add
sub
inc
adc
xchg
inc
out
es
test
adc
cmp
imul
nop
out
xor
mov
add
sbb
add
mov
mov
pop
sarl
enter
imul
es
mov
push
cwtl
pusha
or
addl
int3
iret
sti
mov
mov
add
xor
stos
push
and
and
or
xchg
or
xchg
test
and
icebp
lret
lds
add
push
test
jae
loop
rol
jmp
jnp
sub
push
sub
gs
inc
mov
and
ret
fsts
jne
dec
and
mov
mov
filds
pop
std
inc
das
or
scas
loope
jo
lret
xchg
test
out
aas
mov
pop
jl
cmp
cmp
call
outsl
pop
push
iret
inc
and
fcmovu
or
jl
add
push
mov
inc
mov
inc
packsswb
test
ror
iret
in
fwait
cmpsb
outsb
jmp
xchg
mov
xchg
dec
or
fsin
push
inc
sbb
mov
mov
dec
inc
sbb
out
inc
pushf
sbb
sbb
popa
jnp
push
bound
fsts
es
and
sub
cmpsl
xchg
sbb
repz
and
push
or
insl
lcall
cs
fldenv
out
ja
add
xor
or
stos
add
idivl
cmp
int
jmp
and
nop
push
push
add
and
add
and
cmpl
add
mov
cmp
xorl
add
add
int3
sub
or
add
dec
push
fstps
adc
pop
cmpsb
sbb
inc
push
dec
xor
cltd
pop
push
int3
and
add
push
hlt
dec
or
adc
imul
les
cmpsl
test
pop
mov
in
lods
adc
sarb
mov
push
loopne
cmp
mov
sub
ret
or
icebp
bound
inc
sbb
jmp
mov
mov
fstpt
mov
nop
out
div
or
test
adc
push
inc
es
lods
and
les
mov
push
jns
sahf
inc
das
fdivrs
les
sbb
push
sbb
adc
dec
dec
iret
cmpsl
and
mov
cmpsl
test
int
test
or
add
or
mov
and
dec
jle
clc
add
pop
mov
inc
mov
sbb
enter
add
out
push
pusha
clc
mov
in
push
jae
xor
lds
ds
sbb
pop
das
mov
dec
pop
adc
mov
pushf
mov
arpl
inc
xor
xlat
ret
cmp
inc
mov
lret
inc
sub
ret
js
lea
rclb
scas
inc
cmp
dec
shlb
ret
scas
push
pop
and
push
arpl
movsb
fadd
leave
scas
ja
cmpsl
and
add
nop
mov
sub
lea
sub
fwait
aam
add
lret
and
mov
sahf
pop
push
add
adc
daa
addl
daa
rcl
or
rolb
enter
rorb
imul
in
pop
test
movsb
push
pusha
test
mov
adcl
mov
add
inc
fbld
mov
scas
or
sbb
adc
mov
xchg
mov
sub
jg
mov
xor
sub
cs
pop
and
add
or
or
mov
xchg
add
cmpl
push
sub
mov
dec
ljmp
daa
sbb
movsl
cmp
mov
add
shrl
xchg
movsw
inc
jl
cwtl
repz
addr16
data16
xor
adc
add
pop
inc
data16
mov
stc
push
imul
cli
add
push
incb
sub
test
jmp
lret
inc
add
or
add
rcll
pop
std
stos
mov
test
sbb
xchg
iret
sub
mov
lods
nop
jl
cwtl
jg
dec
xor
add
rcrb
das
adc
and
inc
fidivl
mov
bound
xchg
sbb
jmp
add
push
add
daa
hlt
enter
push
call
data16
sti
xlat
push
inc
jb
lret
push
enter
pusha
lret
icebp
and
test
xchg
inc
inc
inc
and
movsl
add
test
xchg
enter
push
xor
add
sbbb
xor
mov
movsb
mov
pop
mov
dec
fwait
in
lods
bnd
or
leave
or
movsb
fcomip
xchg
inc
es
sub
jge
adc
nop
je
pop
cli
mov
das
loopne
or
inc
shlb
sbb
and
xchg
test
mov
bound
inc
pushl
and
push
push
jns
mov
sub
scas
add
gs
test
pop
mov
lds
dec
xchg
sbb
call
mov
movsb
ret
sbb
push
adcl
lods
or
inc
inc
loopne
xor
inc
sbb
mov
lcall
data16
add
mov
jns
push
ret
clc
xadd
add
and
cwtl
dec
sbb
aad
dec
dec
or
sahf
cmpsl
repnz
cs
int
call
test
sbb
outsl
xorl
out
and
mov
pop
adc
popf
pop
push
test
bound
mov
mov
clc
leave
mov
xor
push
mov
jl,pn
lret
sbb
and
push
movb
sarl
pop
sub
push
sti
xor
pop
or
pop
inc
sub
test
or
sbbb
aas
faddl
in
sub
and
inc
or
insl
adc
out
push
aas
sbb
mov
pop
cmpsl
mov
sbb
pop
ljmp
call
xlat
lds
loop
push
inc
fnstcw
dec
lea
int
cmp
xchg
imul
push
or
add
shl
cmpsb
xor
addb
inc
popa
adc
and
fmull
loop
or
das
sub
jbe
fisttps
gs
sub
add
pushf
into
push
sbb
cmp
sub
add
jmp
stc
adc
jp
inc
and
xchg
cmc
pop
xlat
and
push
push
pop
add
and
jo
cld
and
fucomi
ds
fs
addr16
adc
add
stos
out
cmp
sub
int
je
es
push
popf
cmc
inc
sub
cmp
repz
mov
pushl
int
or
and
push
mov
aaa
mov
inc
pop
addb
icebp
push
and
cmpsl
sub
sbb
ljmp
in
xchg
outsb
xor
aaa
out
sub
mov
push
mov
xchg
push
add
mov
jmp
xchg
xor
jmp
fsub
pop
push
nop
mov
jmp
adc
sbb
aam
sbbl
loopne
sub
pop
inc
add
or
or
and
adcb
andb
loop
jns
and
sahf
pop
lea
mov
fs
xchg
or
sbb
loop
gs
adc
jne
test
push
leave
xchg
data16
and
or
cmp
or
add
into
inc
sbb
and
cmp
push
rol
ret
inc
mov
lret
mov
lcall
test
mov
scas
dec
and
popf
add
lret
push
pop
cmp
push
dec
stos
push
push
mov
mov
pop
sub
shr
sub
out
test
pop
mov
les
andl
add
aad
pop
push
push
dec
inc
xchg
imul
push
push
out
cmpsb
popa
icebp
leave
xor
nop
mov
add
push
icebp
ss
int3
sub
inc
test
mov
mov
sbb
aam
jbe
pop
mov
add
cld
mov
sub
dec
and
sar
je
mov
loop
clc
or
xor
sar
aaa
jg
inc
cltd
jns
pusha
xchg
lret
pop
ljmp
add
popa
mov
inc
arpl
pop
xor
aam
cld
xchg
rolb
push
add
lds
push
loope
outsb
and
push
pop
cmp
js
mov
lock
pusha
lret
or
dec
imul
cli
jg
xchg
xor
jg
mov
add
sbb
aam
mov
adc
incb
xor
jecxz
test
inc
int3
inc
lock
and
push
sbb
mov
pop
jb
xchg
push
jno
and
cs
test
sbb
mov
nop
add
ret
push
dec
jge
fwait
xor
add
xchg
jg
testl
movsb
mov
inc
imul
aad
push
pop
xor
mov
js
mov
iret
xor
out
push
pushf
cwtl
nop
cmp
inc
mov
out
and
or
sub
or
ret
aaa
subb
mov
pop
adc
popf
push
dec
jl
outsb
call
lcall
hlt
adc
jnp
sbb
dec
push
add
and
rorl
shrl
aaa
push
sbb
shll
add
mov
bswap
adc
addb
insl
add
sub
push
enter
fwait
dec
inc
sub
mov
add
enter
sub
adc
mull
je
test
jg
imul
xlat
aam
and
es
jo
fwait
mov
dec
dec
pop
add
push
movsb
add
fsubrs
addb
or
hlt
es
ret
inc
adc
cltd
mov
notb
adcl
adc
lahf
jmp
add
ljmp
or
push
sub
popf
add
xchg
inc
pop
sub
push
dec
cmpsb
inc
fwait
in
cld
call
or
bound
add
jb
les
adc
mov
jnp
xchg
or
add
adc
or
ljmp
dec
std
dec
cmp
push
rorl
pushf
add
out
imul
imul
mov
cmp
add
and
sub
cmp
mov
xlat
adc
popf
sbb
xor
lcall
aad
or
imul
jmp
das
dec
mov
sub
punpckhdq
bound
inc
imul
jecxz
adc
or
mov
shlb
push
mov
movsl
pop
sbb
add
in
aas
xor
xchg
iret
test
jmp
or
mov
test
or
ret
push
fmuls
iret
aaa
shll
loopne
orb
pop
dec
pusha
adc
cmp
movb
mov
addb
sub
jae,pt
ds
cld
pop
fs
mov
int3
subb
mov
sbb
dec
mov
add
adc
xor
adc
inc
out
push
xor
js
push
stos
test
cmp
xor
dec
into
xchg
dec
dec
cmp
or
dec
jno
pop
inc
or
mov
lock
adc
add
orb
scas
outsb
push
idivb
pop
dec
cltd
add
dec
xchg
xchg
push
pushf
push
dec
push
adc
cmc
push
add
mov
pmaddwd
stos
add
sbb
addb
push
xlat
loopne
in
ret
or
dec
xchg
jl
test
les
dec
xor
jns
xchg
push
jp
jle
mov
pop
add
cmpsb
es
cwtl
in
add
or
popf
pop
mov
and
scas
dec
mov
mov
push
dec
pop
arpl
ret
sbb
mov
or
xchg
mov
push
dec
inc
pop
cmp
push
add
dec
scas
mov
movsl
push
sbb
fld
int3
ss
inc
mov
add
sbb
pcmpeqw
add
jns
fnstsw
inc
pop
insb
sbb
pop
pop
stos
dec
xchg
rcl
sti
or
and
push
mov
add
aam
push
cmp
subl
cs
sub
adc
daa
cld
add
outsb
xor
ret
imul
loopne
push
inc
sub
imul
jle
lea
outsb
xlat
les
jp
or
cmpsl
insb
call
test
add
adc
xor
fcomp
insb
dec
leave
enter
mov
push
mov
and
les
andl
pop
outsb
xchg
data16
lock
jo
shrl
int
and
nop
jge
jbe
add
inc
sub
and
fisttps
shl
leave
hlt
mov
jl
dec
inc
insl
xchg
ret
lsl
popf
xor
inc
add
cmp
lcall
mov
popa
sbb
test
push
sbb
shrb
inc
clc
jge
and
sbb
push
imul
dec
push
idivl
int
push
nop
xor
dec
adc
xor
adc
imul
je
insl
xchg
mov
mov
adc
inc
xor
dec
lods
iret
punpckhdq
sbb
push
nop
daa
invd
mov
sub
and
adc
and
test
imul
ret
in
push
mov
sbb
adc
add
sub
sub
fnstsw
int
add
popa
out
jmp
lods
inc
lret
push
xchg
lods
lret
addl
xchg
pop
aaa
or
je
cmp
scas
inc
movsl
xchg
rcrl
jecxz
add
popf
imul
inc
imul
ja
inc
aam
pop
add
xor
sub
mov
lahf
dec
adc
lds
mov
inc
add
lods
lret
mov
repnz
nop
test
ret
and
pop
cmpsb
cmpl
inc
test
test
mov
loop
mov
testb
clc
xchg
int
or
xchg
pusha
aas
add
pop
inc
adc
push
adc
inc
ret
cmc
xchg
xchg
sbb
cmp
sbb
mov
xor
sub
repnz
imul
sbb
jo
xor
jecxz
mov
xor
or
inc
mov
test
add
inc
in
pushl
mov
jo
inc
push
addb
adc
pop
sbb
jae
mov
or
rclb
test
and
xor
xor
and
fistpl
push
inc
mov
push
je
jge
mov
movsl
jl
add
lods
add
imul
test
and
push
dec
stc
add
mov
inc
sub
mov
and
xor
stc
cld
add
mov
outsb
fstpl
out
adc
add
xor
jmp
add
mov
dec
std
xchg
or
iret
rolb
je
cmp
mov
mov
cmp
push
and
push
xor
insl
pushf
bound
mov
and
xchg
insb
mov
mov
mov
sub
mov
or
fnstsw
daa
gs
and
ljmp
push
add
orb
loop
pop
add
add
int3
imul
jg
shll
or
lock
es
loope
push
jae
or
adc
dec
inc
subb
inc
cmp
rorl
push
pop
ficoms
and
add
sbb
jnp
rorb
outsl
fdivrs
sti
rolb
aaa
push
and
mov
ret
iret
cli
add
in
add
in
lahf
mov
mov
popf
xchg
adc
mov
add
out
push
inc
or
ret
xor
or
hlt
mov
les
rcll
cmp
movsl
inc
cmp
inc
mov
lods
push
push
and
fcmovnb
add
fsts
or
adc
or
add
aad
xchg
xor
pop
mov
movsb
cmp
push
lcall
jne
inc
or
dec
adc
dec
or
xor
or
adc
sbb
dec
sub
loopne
sub
cmc
push
sub
stos
dec
jmp
or
pushf
push
out
inc
arpl
mov
mov
add
push
xor
mov
xor
loop
push
in
inc
insb
pop
dec
push
loope
call
push
popf
adc
pop
lock
mov
pop
adc
push
enter
add
add
and
push
call
sub
jnp
shlb
jno
imul
sbb
mov
mov
das
ret
add
rcr
push
aaa
push
and
or
jmp
and
idiv
inc
cmp
add
ljmp
nop
mov
dec
jae
push
jmp
push
popl
mov
jbe
sbb
xor
stos
push
gs
sub
dec
lret
faddl
rolb
or
jbe
dec
cmpb
inc
xchg
lcall
jg
rorb
bound
sbb
lcall
mov
add
cmp
mov
ret
mov
pop
out
call
out
jae
add
mov
or
out
push
cmp
movsl
pop
sbb
push
mov
or
mov
movsl
adc
lea
mov
sbbb
xchg
je
insb
add
stos
ss
sbb
test
lret
aad
test
or
mov
rolb
shrl
stos
mov
mov
adc
mov
in
xchg
inc
sub
aam
lcall
sbb
or
xor
jnp
push
cwtl
and
jp
movsb
dec
rolb
mov
sahf
imul
xor
dec
sbb
adc
loop
or
push
out
iret
dec
add
jecxz
movsb
mov
inc
int
mov
int3
push
outsl
push
xchg
loopne
ja
loope
sahf
or
rcrl
sbb
mov
sbb
adc
js
stc
jg
xor
or
movsb
clc
mov
jmp
add
xchg
je
xor
adc
test
jbe
or
fdivs
xor
mov
cmpsb
test
inc
push
add
and
inc
test
jg
xor
xchg
addb
pop
adc
outsb
js
dec
arpl
outsl
stc
xchg
or
imul
sbb
test
pop
xor
pop
stos
jae
ljmp
mov
jbe
xchg
inc
or
cmpsl
xchg
adcl
mov
nop
orl
or
pop
scas
push
mov
or
or
stos
cli
and
add
rorb
push
pusha
shl
xor
or
inc
and
popa
add
leave
adc
movsb
mov
jo
pop
mov
cmp
mov
popa
inc
inc
jmp
adc
jae
sbb
loopne
pop
notb
mov
xchg
jmp
mov
jae
cltd
push
xor
mov
ljmp
popa
push
inc
stos
cmpsl
pusha
call
lahf
push
xorb
inc
lret
xor
mov
dec
xorl
push
push
or
and
and
push
scas
lock
lds
add
adc
mov
or
loopne,pn
push
cltd
dec
sbb
xchg
push
push
pop
xchg
cmpsb
and
inc
or
or
sub
sbb
cmp
mov
enter
rolb
or
inc
fs
outsl
jp
dec
mov
addb
jo
or
push
pop
mov
jle
shlb
js
hlt
dec
push
in
dec
adc
cwtl
fs
inc
mov
push
in
iret
incl
fcmovu
and
mov
xchg
xchg
sub
mov
imul
das
and
sbb
fs
pop
test
dec
add
shl
mov
or
stos
sub
adcl
inc
adc
inc
xchg
and
mov
push
sbb
inc
push
mov
mov
add
mov
mov
mov
push
or
mov
test
xor
lds
lcall
xchg
imul
pushf
xor
cmpsb
je
ret
and
stos
or
outsl
icebp
xor
sbb
xor
mov
dec
sahf
add
add
adc
sub
mov
rclb
push
std
or
xchg
movlps
xlat
sbb
nop
and
nop
int3
xor
adc
push
mov
jl
lods
xchg
int
arpl
je
push
mov
add
or
jg
sbbb
cwtl
lldt
or
adc
xchg
dec
movl
mov
or
jno,pn
add
sub
gs
add
jmp
adc
add
add
adc
and
or
cld
or
or
repz
push
movsl
lds
ljmp
cld
or
cmp
cltd
xchg
subb
gs
popa
or
inc
cmp
aas
pop
jge
pop
jle
mov
lret
add
popf
mov
xor
adc
xchg
dec
inc
xchg
call
lcall
jne
add
or
adc
or
jno
sbb
jo
popa
mov
xor
and
jb
nop
xchg
adc
enter
pop
rorb
sbb
adc
cmp
push
fs
js
ja
fs
inc
pop
inc
leave
jg
inc
les
pop
push
and
adc
test
pop
add
mov
les
adc
adcw
dec
mov
add
cmp
sbb
xchg
cmpb
xorl
push
test
mov
sbb
dec
pop
and
dec
and
push
or
mov
orb
jp
shlb
add
rcll
xorb
sbb
ss
addb
mov
push
push
das
scas
leave
inc
dec
scas
popl
popf
pop
mov
sbb
test
lcall
rorb
and
jno
aas
push
xchg
aas
imul
add
jo
sbb
jg
add
xchg
inc
iret
lock
rolb
cmp
adc
sub
pop
cmp
lcall
xor
scas
lea
xor
sahf
arpl
pop
stc
jge
mov
sbb
mov
movsb
inc
mov
pop
add
and
pusha
std
jg
pop
shr
mov
aad
or
inc
add
insl
add
movsb
and
xchg
movb
jae
mov
or
mov
mov
or
adc
and
and
add
or
adc
xor
lcall
add
je
mov
mov
sub
fisttpl
shrb
and
inc
rorl
cmp
mov
sub
fstl
test
dec
adc
fistpll
sbb
dec
mov
push
sahf
jle
inc
xchg
sti
lods
sarl
or
adc
iret
xchg
xor
sub
or
jne
adc
jb
iret
roll
cmpsb
aas
push
add
add
lods
add
xchg
sbb
fnstcw
je
or
mov
sahf
inc
or
adc
outsb
scas
mov
xchg
or
and
loop
dec
movsl
dec
mov
lahf
es
and
sbb
outsb
movsb
lods
cli
flds
sbb
cmp
push
aam
out
addr16
movsb
pop
pushf
mov
sbb
dec
mov
call
or
or
aaa
sbb
jle
inc
cmc
push
sub
add
jp
ljmp
call
mov
mov
xchg
imul
lods
stos
aaa
stc
add
adc
mov
ds
push
inc
add
scas
movsl
in
loop
stos
sbb
or
cltd
ja
pop
nop
aam
mov
mov
and
push
incl
xchg
stos
nop
and
or
movsb
stc
adc
push
dec
pop
inc
push
jmp
mov
loop
lods
mov
or
inc
add
push
mov
loope
add
cmpsl
rol
lret
arpl
mov
insb
pop
and
inc
lods
mov
push
cs
mov
mov
addl
aam
mov
xchg
xchg
xchg
xor
daa
adc
es
cwtl
add
mov
ds
dec
or
mov
dec
in
in
push
sub
add
cmp
push
inc
clc
push
cld
sub
aaa
pusha
jge
xor
mov
loope
orl
arpl
mov
pop
mov
and
mov
sbb
outsl
sbbl
cmp
ja
fidivl
test
in
dec
loop
cmpsb
push
and
shr
push
in
push
in
loopne
add
outsb
xor
jmp
test
sbb
sub
lcall
pop
pop
xchg
fistpll
sub
sbb
xchg
mov
hlt
movsl
mov
push
mov
add
sarl
cmp
inc
mov
xchg
call
cmp
hlt
lret
js
imul
jecxz
mov
rcll
mov
addr16
inc
mov
push
adc
sar
sbb
mov
jne
rcrb
daa
int
and
add
dec
xorl
sub
ja
dec
addb
dec
das
inc
sbb
repnz
inc
stos
jecxz
testl
addl
movaps
dec
sbb
adc
push
subl
ret
push
pop
and
lcall
dec
inc
dec
adc
sbb
cmpsb
in
aad
add
jp
lcall
in
mov
adcl
fisubrs
popa
xchg
lret
sub
fcoms
inc
push
mov
repz
stos
or
shll
sub
mov
test
sbb
insb
and
rol
test
std
or
xchg
and
call
mov
jecxz
repz
add
add
or
test
push
xchg
mov
mov
mov
adc
add
push
pop
subb
jp
cwtl
push
aaa
popf
cmp
icebp
or
add
das
dec
pusha
push
mov
mov
xorb
mov
jl
loopne
add
notl
daa
nop
ret
mov
push
push
rol
inc
jne
xor
lods
jns
je
in
fisubs
xchg
das
pop
jmp
orl
add
mov
sub
xor
add
adc
inc
enter
shrb
inc
pop
pop
sub
inc
sbb
dec
dec
je
mov
mov
or
and
and
xchg
shrb
inc
stos
jno
inc
fisubs
cmpb
inc
cltd
mov
fldenv
inc
mov
fsubs
jmp
xor
and
pop
test
mov
pop
leave
adc
mov
lcall
push
or
pop
push
add
push
xor
leave
add
sub
xor
mov
pushf
out
or
xlat
xlat
push
and
adc
add
out
adc
gs
jl
aaa
cs
mov
popaw
int3
add
pop
lea
sbb
loope
data16
sbb
add
pusha
mov
and
outsl
lock
insl
push
inc
ffree
fwait
pop
enter
cmpl
dec
ljmp
mov
inc
ljmp
add
pop
ficoms
or
xchg
add
dec
xor
addb
adc
mov
outsl
ss
push
add
mov
jp
fisttpl
leave
daa
or
repnz
outsb
je
mov
and
gs
inc
insl
sub
push
mov
aas
add
cmc
add
fwait
sbb
loope
cmp
stc
lds
leave
inc
add
push
mov
dec
inc
lods
add
aad
mov
test
push
or
push
sbb
stc
in
cmp
add
mov
mov
xor
sbb
mov
sub
mov
iret
push
xchg
lahf
xor
xchg
xor
push
lock
sbb
dec
repnz
cmp
loop
es
mov
stos
add
mov
sbb
inc
sahf
mov
fs
xchg
fisubl
cmovo
jae
push
movsb
add
imul
popf
lea
rcr
sub
add
xor
dec
or
nop
dec
pop
fsubs
xchg
les
jns
add
push
push
ret
add
mov
add
add
cs
pop
les
jmp
jg
mov
repnz
and
pop
mov
pop
insl
jg
push
jo
cmpsb
pop
fwait
and
inc
lock
pop
mov
lahf
inc
sub
mov
movsb
dec
xchg
insb
mov
inc
and
fnstenv
scas
or
mov
mov
dec
add
int
mov
cmp
inc
add
addr16
xchg
shr
xchg
inc
iret
nop
mov
add
pop
jne
fcomps
fisubrs
int
dec
or
int3
adc
mov
sbb
les
jp
mov
mov
dec
les
jno
repnz
inc
scas
nop
push
cmpsl
pop
cmp
sbb
testl
xorl
push
xchg
out
adc
gs
mov
fldt
push
out
popf
or
and
roll
inc
pop
add
mov
push
fsub
sub
inc
inc
and
int3
movsb
sbb
jb
push
adc
mov
dec
and
push
test
stos
imul
push
add
std
sahf
punpcklbw
dec
aaa
add
in
sti
sti
mov
sbb
sbb
sahf
mov
call
add
add
movsl
aam
inc
jnp
mov
adc
inc
sbb
xchg
adc
mov
aaa
push
mov
andl
xor
jge
je
cmp
xor
add
pop
xchg
mov
lea
push
cs
sbb
clc
std
scas
clc
std
push
add
jnp
or
mulb
add
push
adc
sbb
fistps
testl
add
xor
mov
out
xor
in
or
mov
xchg
adcl
inc
adc
mov
jg
test
lds
jno
lods
lea
inc
pop
loop
pop
inc
mov
inc
inc
jge
daa
or
pop
roll
push
xor
mov
cmp
xor
mov
lret
jmp
xor
inc
jne
add
sub
add
and
sub
add
inc
stc
gs
add
add
cmp
jmp
jmpw
xchg
push
xor
and
cmp
pop
and
mov
or
adc
loopne
shlb
dec
inc
adc
cmpsl
sub
or
fwait
imul
js
and
subl
adc
add
stos
mov
sbb
lods
out
arpl
mov
push
and
sub
inc
out
js
sarl
repnz
fwait
mov
aas
mov
jb
imul
scas
xchg
mov
sub
inc
leave
mov
push
cwtl
xchg
add
mov
sub
cld
add
xchg
add
or
rol
or
push
or
cmp
loop
push
mov
xor
sbb
sub
cli
pushf
xchg
add
cld
pop
lds
sub
and
sbb
movsb
push
test
mov
sub
movsl
inc
or
test
pop
ljmp
or
add
out
add
adc
dec
mov
add
mov
xor
xchg
add
pop
or
xchg
movsb
mov
add
add
sbb
pop
inc
loope
cmp
nop
jmp
dec
or
loopne
lods
sbb
pop
push
mov
popa
scas
jo
ds
or
cmp
ret
add
mov
imul
sbb
push
dec
sbb
xor
test
rol
dec
incb
dec
mov
mov
or
adc
bound
scas
adc
adc
cs
cmp
test
pop
cmp
adcl
dec
pop
imul
out
push
inc
daa
mov
aas
dec
sahf
test
imul
ror
add
stos
fiaddl
iret
xchg
das
ss
dec
leave
or
add
cwtl
inc
add
movsl
push
jbe
sub
xor
mov
sub
pusha
data16
data16
shl
pop
push
mov
icebp
fwait
and
mov
das
push
cmpsl
push
into
and
add
into
or
dec
or
fistpll
cmp
popa
cmpsl
es
sub
add
sbb
and
lcall
or
xor
rolb
adc
mov
lods
jl
xor
test
les
mov
inc
sub
loopne
fdivl
mov
dec
jle
adc
push
iret
ret
int
stos
pushf
ret
lea
je
and
dec
inc
push
and
mov
cmp
mov
sub
add
cmp
or
test
xor
xorb
xor
sbb
push
push
pop
lods
sbb
pop
frstor
lock
and
push
pop
js
repnz
jne
push
push
mov
inc
cmp
inc
adc
mov
loope
test
or
ret
push
add
push
or
or
sbb
cmpsb
sbb
pop
lods
dec
shlb
imul
xor
mov
stos
add
mov
movsb
cmp
nop
xlat
mov
mov
pop
icebp
push
leave
add
inc
pop
push
leave
cmp
cld
inc
mov
mov
push
icebp
push
inc
mov
push
test
mov
mov
insl
cmp
scas
sahf
add
or
outsb
adc
adc
push
jo
xor
add
jo
push
cmp
lea
bound
inc
jle
sbb
sbb
mov
cmp
clc
cltd
out
mov
jnp
test
or
lock
mov
shlb
add
push
test
cwtl
test
add
nop
push
or
mov
dec
in
xor
loope
or
sub
mov
popf
rol
cmp
and
call
ficoms
test
sub
aaa
push
add
xchg
in
ja
cmpsb
dec
test
xor
push
jb
bound
mov
les
dec
lret
cmp
std
add
dec
dec
or
or
cmc
or
mov
dec
out
subb
adc
cmp
imul
call
loop
push
test
mov
dec
inc
fs
cld
xchg
and
sub
add
iret
repz
mov
sub
test
roll
pop
mov
je
iret
adc
test
mov
pushf
les
push
push
push
sub
adc
stos
or
lcall
aam
add
std
in
pop
nop
ret
les
fisubrs
add
fwait
push
and
mov
and
xor
add
add
pop
js
ss
add
adc
call
add
clc
push
and
xor
jl
jae
cmpb
subl
xorl
les
cmp
adc
mov
inc
push
dec
nop
mov
add
cmpsb
lcall
pop
push
push
or
repnz
mov
popf
add
add
pushf
lods
mov
xorb
xchg
cmpsl
mov
icebp
leave
mov
lods
movsb
cltd
dec
or
call
sub
dec
mov
imul
and
aad
sti
add
jne
jg
push
mov
cs
adc
pop
or
test
mov
jmp
push
stos
shrl
push
test
push
nop
xchg
fiadds
lods
jbe
mov
add
jp
roll
xor
rclb
ficompl
mov
fisttpl
xor
sub
mov
pusha
andb
inc
rol
push
jno
mov
rcl
mov
xorb
or
dec
dec
push
popf
nop
sti
movsb
sahf
push
fstl
jae
jns
insb
pop
in
xchg
and
ss
pop
pop
push
sub
or
jle
lcall
popa
cmp
inc
mov
and
cmpsb
pop
push
outsb
jle
idivl
jg
xchg
sbb
inc
dec
and
enter
pop
inc
add
cmp
aam
call
or
mov
out
and
mov
sub
shl
je
inc
pop
shrd
inc
aaa
pop
mov
pop
lods
stos
dec
pop
popa
popa
push
insl
mov
xchg
cmpsb
popl
loope
fcoms
xor
adc
push
inc
and
cld
dec
push
pop
dec
adc
push
sub
add
dec
ds
daa
test
or
rclb
mov
add
push
xor
fnsave
inc
loop
mov
lods
adc
in
fwait
int3
cmp
jno
adc
out
jge
leave
pop
lea
add
je
push
movb
xchg
ret
mov
add
push
xor
mov
rcll
mov
rcrb
or
movsl
push
pop
lahf
mov
xchg
ret
push
jo
adc
cltd
addr16
xchg
jo
cmpsl
js
mov
test
mov
pusha
arpl
pop
xor
clc
add
add
les
xor
aad
imul
or
movups
add
add
mov
mov
xchg
les
fmuls
sub
aad
icebp
xchg
dec
add
sahf
dec
popa
roll
mov
dec
jge
ret
addr16
inc
push
mov
cwtl
lods
jo
xor
sub
jae
pop
and
sub
leave
repz
pusha
repnz
inc
or
jnp
mov
xchg
xchg
jno
add
aas
adc
add
inc
adc
scas
or
lds
cmp
xor
mov
hlt
jbe
mov
in
aam
dec
add
daa
cmp
mov
jno
in
pop
mov
ljmp
mov
stc
cmp
mov
dec
add
test
or
or
add
and
mov
fisubl
test
aad
add
lcall
js
xchg
aaa
add
push
fdivrs
sar
push
pop
pop
inc
cmp
sbb
int3
out
mov
and
jno
fnstenv
xchg
xor
or
mov
hlt
inc
pop
push
xor
mov
push
mov
jo
mov
out
add
xchg
dec
pop
add
mov
lods
mov
jns
inc
xchg
adc
repnz
das
mov
repz
test
mov
or
jmp
mov
ds
fwait
orb
das
inc
rcrl
add
and
test
fisubrs
jecxz
jb
cs
jo
pop
add
pop
sbb
mov
dec
inc
add
loopne
mov
xor
add
icebp
ljmp
lret
ja
push
push
xor
push
pop
rorb
inc
cs
mov
sysenter
inc
dec
jae
mov
add
mov
sub
lea
push
mov
lahf
xor
push
into
dec
add
mov
dec
cmp
mov
int
xor
pop
pop
xor
add
mov
or
or
add
cwtl
out
pop
pop
dec
data16
sti
xchg
aam
and
mov
stos
enter
pop
push
add
shr
decl
in
adc
dec
or
fwait
incl
dec
add
pop
lds
test
or
pop
inc
adc
mov
in
mov
push
and
in
push
jmp
imul
jecxz
dec
or
add
sub
aas
in
xor
xchg
add
adcb
lcall
fwait
jge
or
int3
add
shll
or
sub
imul
mov
je
and
shrl
inc
adc
rcl
push
pop
push
mov
mov
jo
and
lret
and
les
or
or
push
push
das
jo
cli
cmp
insl
lods
cmp
fcmovbe
sub
pop
pop
xor
mov
mov
ss
enter
jbe
or
jb
push
inc
sub
pop
sbb
sbb
frstpm(287
bound
xor
and
xchg
xchg
daa
pop
inc
inc
or
adc
add
pusha
sbb
dec
shlb
push
sbb
sub
sub
rorl
mov
mov
sub
mov
je
and
xchg
cmp
mov
mov
cld
push
add
les
sahf
xchg
or
fistpl
push
xchg
andb
push
mov
mov
lock
xchg
or
or
cs
adc
bound
or
jnp
or
inc
leave
dec
orl
cltd
sub
icebp
ret
imul
mov
ja
lods
add
xor
stos
lret
adc
inc
enter
fdivr
popf
mov
pop
lret
adc
adc
or
jb
or
ret
mov
dec
mov
pop
xor
pusha
xor
rolb
jno
insb
adcb
gs
movsl
push
cmp
sub
inc
subl
push
test
push
bound
dec
dec
sub
scas
add
shrb
add
xor
dec
add
sub
pop
dec
mov
mov
xlat
mov
jbe
sub
or
faddl
sub
ljmp
inc
and
inc
inc
push
leave
mov
add
mov
mov
shl
xchg
rcll
push
inc
inc
aam
or
add
sbb
adc
insl
or
je
or
cmp
fists
fnstcw
xchg
fwait
daa
push
inc
mov
cmpsl
shll
xchg
xchg
xor
ud2
inc
dec
add
xchg
inc
scas
subl
cmp
push
pop
adcb
push
inc
add
add
jo
sbbl
cmp
stos
sub
mov
test
movsl
add
insb
pop
insb
stos
or
sub
and
sub
loop
mov
lret
sbb
jno
xchg
cmp
out
cmpsb
mov
mov
clc
adc
or
sarl
cmc
xor
les
adc
adc
adc
stos
push
dec
cmp
jo
xor
test
insb
dec
sahf
test
mov
jecxz
test
xor
xchg
lret
mov
inc
roll
mov
scas
cli
dec
dec
mov
imul
add
adc
mov
push
mov
push
xor
add
paddd
sbb
mov
nop
ss
iret
mov
in
push
jno
in
loope
jmp
fisttps
push
pop
shlb
push
inc
jmp
adc
xchg
and
test
rcll
fyl2xp1
adc
test
cwtl
pop
add
cwtl
add
movsb
cmp
insl
sbb
inc
jecxz
dec
push
addl
xchg
fldenv
xor
mov
push
movsl
or
pop
js
pop
adc
cmp
push
cli
mov
andl
inc
notl
dec
lcall
test
movsb
jne
inc
adc
add
add
inc
push
jp
popa
popa
stc
add
dec
shlb
cltd
scas
int3
stos
xchg
xor
xor
add
push
pop
insb
adc
fisttpl
adc
filds
gs
adc
rclb
jmp
or
pop
pusha
mov
mov
and
in
adc
push
gs
mov
arpl
pop
push
mov
imul
and
xchg
jno
or
or
xor
dec
clc
mov
pop
xchg
jnp
and
cs
shll
or
daa
or
fs
pop
push
shll
test
add
lcall
dec
jge
or
out
add
shll
bound
sar
cmpsl
fwait
sbb
movl
xchg
cmc
aaa
bound
or
stos
fimull
xchg
jno
push
dec
inc
jns
push
inc
fstps
cmp
jo
and
lcall
mov
addl
add
loope
outsb
fiaddl
callw
and
add
pop
xchg
dec
add
rcll
add
mov
icebp
xorb
cmpsb
xchg
pop
es
sub
xor
lods
inc
and
adc
adc
rorb
xchg
cld
popf
pop
adc
inc
leave
outsl
pop
mov
loop
popa
popa
mov
rclb
sbb
pop
es
sbb
test
push
xlat
jns
mov
cltd
cs
bound
in
in
mov
mov
out
es
adc
add
or
aaa
pop
add
add
fwait
lret
mov
arpl
into
es
push
xor
lcall
xor
add
cwtl
mov
add
add
les
test
rcll
dec
inc
xchg
inc
push
add
adc
mov
sbbl
cli
push
loopne
es
sub
xchg
lods
push
and
push
bound
aam
cmp
dec
loop
jo
or
insb
add
orb
mov
rorb
add
pop
pop
popf
in
and
leave
leave
gs
fstps
pop
repz
mov
add
or
ja
addb
inc
add
cwtl
jne
inc
repz
sub
sub
xchg
shll
inc
shll
add
gs
adc
sub
add
mov
push
mov
push
popa
shrb
sti
subl
nop
or
cmp
cmp
and
ret
cli
test
fildl
aad
jae
roll
jne
fwait
rep
jl
inc
xchg
mov
dec
or
push
add
fldl
push
inc
jnp
add
inc
aas
mov
test
mov
es
mov
mull
add
add
ret
addr16
cmp
add
lret
stc
jmp
dec
adc
sarb
ret
add
imul
outsl
mov
pusha
jnp
or
or
jae
test
mov
adc
out
and
add
iret
repnz
mov
sbb
push
cmc
jo
inc
push
push
or
xchg
int
mov
xor
push
or
outsb
sbb
pusha
addb
adc
pop
cld
dec
jecxz
or
cwtl
sti
jecxz
sub
push
inc
scas
or
aad
dec
xor
push
sub
inc
dec
and
dec
std
test
mov
fs
negl
and
pop
or
insb
add
addb
sub
stos
and
popf
xchg
pop
cmpsl
xchg
inc
pop
or
test
shl
add
push
fistpll
cmp
add
insb
inc
mov
cmc
in
push
xor
inc
sbbb
mov
fisttpll
or
arpl
test
fs
cld
xchg
fldl
push
adc
stos
or
add
aaa
or
add
lcall
cmpsl
stc
jo
mov
inc
inc
pop
add
popf
mov
jae
mov
js
dec
rolb
xchg
sbb
sbb
jg
sbb
loope
stc
xchg
sbb
idivb
daa
loop
imul
mov
jns
lods
add
test
lods
cmpsb
ljmp
add
push
jne
and
cmpsb
add
roll
fucom
xor
add
sbb
mov
aam
fwait
insl
popa
nop
sbb
dec
test
mov
or
xchg
xchg
scas
jbe
sbb
adcb
inc
sub
mov
in
and
pop
mov
sub
inc
pop
cmp
and
and
test
jns
imul
adcb
aam
adc
rolb
push
dec
nop
xor
hlt
arpl
xchg
push
add
or
sarl
xchg
test
aam
push
pusha
loope
dec
lcall
inc
mov
cmp
add
stc
ret
loop
aam
xchg
fildll
ljmp
xchg
enter
pop
cmp
xchg
mov
test
add
pop
or
test
in
sqrtps
sub
jp
add
or
push
sub
dec
adc
add
xchg
dec
or
imul
and
frstor
inc
add
out
mov
xor
or
test
mov
mov
add
pop
mov
inc
lds
mov
mov
inc
xchg
icebp
dec
push
mov
dec
cmpb
jno
sbb
add
aaa
mov
scas
sub
add
shll
rolb
repnz
pushf
dec
mov
repnz
add
add
jb
out
push
fisubrs
repz
jnp
stc
mov
cmp
stos
shll
je
dec
loope
or
inc
cltd
jp
dec
sti
and
xchg
clc
out
push
xchg
test
and
fs
xor
sbb
test
sbb
mov
push
sub
mov
or
lods
andl
and
dec
lds
push
leave
cmp
stc
add
mov
aas
adc
sbbb
sbb
movsb
push
subl
mov
xorl
sbb
test
xchg
add
push
adc
inc
invd
inc
push
enter
push
or
and
pop
jo
xchg
add
shll
adc
mov
and
dec
rol
cmp
arpl
cmpsl
sub
push
punpckldq
jp
adc
and
xor
jo
add
cmp
sbb
aam
les
sbb
sub
mov
jge
xor
test
and
and
xchg
inc
inc
mov
push
out
aam
lods
mov
jne
push
dec
xor
shl
or
pop
xor
mov
nop
shlb
movsl
adc
xchg
adc
cwtl
jbe
mov
push
push
xchg
in
adc
add
nop
mov
inc
or
in
adc
sbb
and
jnp
xchg
adcb
insl
ljmp
ret
inc
xor
push
iret
ljmp
sbb
stos
xor
add
and
mov
cmpl
je
add
iret
adc
fs
and
push
popf
and
cwtl
adc
and
stc
and
ficoms
jne
push
sub
push
push
rcl
loopne
dec
xchg
sbb
sbb
or
dec
inc
push
or
add
fstps
roll
push
xchg
orb
sbb
dec
fs
cwtl
pop
pop
clc
sarl
add
mov
add
inc
add
sbb
in
adc
mov
rolb
adcl
adc
pop
pop
and
fdivrp
xlat
test
xor
mov
notl
dec
adc
out
add
scas
xchg
pop
or
shlb
lods
les
stos
inc
or
shll
xchg
xor
push
jnp
inc
les
test
adc
sahf
addr16
pop
aaa
bound
push
movsb
inc
ret
loopne
add
mov
mov
fmull
movsl
mov
xchg
push
add
push
xchg
or
shlb
adc
xor
aas
aaa
incb
push
sbb
mov
aas
test
mov
add
xor
jo
add
icebp
add
pop
stc
xchg
jl
fidivrs
ja
add
test
inc
mov
les
fs
pop
stc
dec
inc
or
inc
adc
xor
loopne
sarb
dec
jne
pop
icebp
cmp
push
sbb
or
out
aaa
dec
jo
orb
pop
mov
push
test
xchg
xchg
mov
js
inc
fldl
aaa
bound
shlb
adc
lods
adc
mov
mov
ljmp
cmp
dec
nop
aam
outsl
push
inc
xchg
ret
sbb
xor
or
std
pop
adc
adc
adcb
sub
sbb
mov
inc
inc
icebp
cltd
add
in
sub
movsb
ljmp
or
push
inc
push
sarl
in
mov
and
dec
mov
test
mov
rcl
jp
ljmp
std
faddl
pop
or
add
add
test
mov
pushf
shll
stos
rorl
adc
cmpsl
jbe
xor
cmp
xor
xlat
clc
stc
add
xor
ds
add
xlat
sub
not
sub
das
xor
rcrl
add
pop
fsubrs
rolb
push
add
cmc
stos
pop
fisttpll
out
dec
adc
dec
pop
push
scas
jae
cmp
ret
ret
cltd
mov
xchg
push
cmpsb
dec
jle
je
mov
orl
and
inc
add
xchg
xor
pop
inc
loopne
dec
out
mov
fwait
adc
imul
in
sub
mov
popf
xchg
or
les
rorb
xchg
cwtl
dec
pop
and
test
daa
bnd
nop
bound
cmpsl
dec
fistps
enter
xor
xchg
add
mov
dec
outsb
cmc
mov
sub
scas
test
xor
pop
mov
test
sbb
add
push
rcl
push
sbb
xchg
sub
rorb
popa
fsts
enter
enter
mov
push
test
loop
and
or
lea
mov
incb
lds
jbe
int
mov
mov
cmpsb
ds
insb
jl
add
push
sbb
pop
dec
pop
pop
ja
pop
add
push
ja
add
cmp
add
cmp
and
stos
repnz
add
pop
in
or
test
js
pop
sbb
lea
sub
push
push
push
add
mov
mov
and
adc
movsb
cmpsb
out
mov
cltd
xor
and
inc
pop
sbb
push
inc
pop
adc
pop
pop
sbb
roll
sub
inc
mov
xor
push
test
mov
inc
add
sub
scas
cmp
out
jo
and
add
push
dec
popa
mov
std
adc
sub
adc
test
and
add
add
sbbb
adc
adc
xor
scas
mov
daa
pop
jb
mov
mov
cmp
and
and
ret
fisubrl
mov
fstpl
std
scas
or
sub
in
mov
nop
push
sahf
pop
xor
imul
in
adc
mov
cmp
ret
mov
inc
ds
movsl
dec
add
in
movsb
add
loop
sbb
pop
add
outsl
pop
sub
sti
xchg
imul
neg
cs
xchg
imul
in
addb
test
test
mov
mov
lods
mov
adc
or
or
pop
xor
dec
mov
sbb
sbb
adc
mov
fwait
int
xchg
xchg
ljmp
or
inc
xor
jne
jmp
lods
inc
ret
xor
rorl
sbb
sub
mov
jl
sub
cmp
dec
push
jge
lods
and
sub
mov
and
scas
xchg
mov
orb
lds
adc
push
mov
inc
popf
adc
add
sarb
enter
inc
sarl
sub
insl
out
add
pop
jb,pn
arpl
lods
dec
int3
adc
and
add
adc
xchg
mov
and
or
lret
xchg
add
sub
jne
mov
je
jp
fdivs
cmc
add
dec
xor
jle
push
jne
je
cmp
xor
dec
inc
ljmp
sub
mov
mov
pop
mov
push
aaa
inc
mov
dec
inc
lods
lcall
inc
mov
dec
push
rolb
inc
add
pop
mov
cmc
aas
add
popl
jns
lock
pop
pop
leave
decl
pop
add
sub
pusha
fcmovnbe
jno
int
xor
mov
daa
bound
ss
jno
xchg
pop
rorb
imul
xchg
rcr
repz
xor
xchg
in
mov
pop
pop
rorl
ss
mov
dec
loop
adc
loopne
addr16
cmp
addl
sub
fimull
xor
test
xor
jl
cmpsb
shlb
or
jb
mov
sbb
dec
es
int3
xchg
les
pop
inc
pop
push
pop
orl
or
lea
sub
xchg
icebp
clc
add
mov
xchg
add
cmpsb
scas
xchg
push
dec
add
imul
cmp
lret
decb
mov
dec
insl
arpl
xor
fldl
sbb
jmp
mov
ret
add
mov
add
push
or
adc
add
push
addr16
cld
or
ss
jno
adcb
inc
adc
sub
aas
sbb
loopne
adc
popf
dec
movsl
cld
clc
adc
sbb
push
and
outsb
or
sbb
mov
lcall
imul
mov
add
mov
int
and
xor
add
push
ret
jae
jno
rorl
pop
sbb
adcl
shrb
je
jg
push
push
or
mov
push
sbb
aad
sub
daa
jno
inc
sub
pop
daa
or
pop
cmp
sub
jle
and
orl
xchg
stos
sub
mov
in
in
sbb
gs
les
cmp
push
mov
or
xor
lods
and
sbb
xor
jb
xor
nop
xchg
test
pop
adc
or
adc
push
inc
cs
test
inc
push
inc
imul
lds
lahf
out
mov
fcmovnb
adc
outsl
xor
sbb
lcall
pop
sub
add
cld
sub
and
xor
mov
fisubs
in
inc
inc
inc
add
xor
out
je
inc
or
push
aas
mov
popf
loop
adc
inc
mov
mov
hlt
add
adc
stos
mov
dec
mov
fstl
sbb
shrb
xchg
add
je
cltd
pop
rclb
sbb
popa
add
adc
orb
call
ljmp
aad
sbb
sbb
inc
push
roll
sbb
pushf
pushf
mov
and
inc
dec
mov
ffree
cltd
mov
rol
jb
scas
lcall
cmp
scas
pop
repz
add
add
imul
inc
test
addr16
xchg
shlb
popf
dec
loop
lret
sbb
inc
sub
and
add
mov
push
test
cmp
das
mov
xchg
sbb
push
popl
shrb
push
es
xor
and
mov
dec
push
scas
add
in
call
lcall
imul
and
push
repnz
mov
movsl
mov
mov
jmp
popa
push
xchg
dec
sub
add
add
mov
out
dec
popl
cmpsl
inc
push
and
ret
pop
dec
mov
das
sub
sub
gs
loope
test
pop
sbb
mov
inc
inc
and
xchg
add
inc
cmp
jo
cmpb
xor
xor
push
leave
adc
cs
jne
movb
mov
push
or
cltd
sub
in
mov
push
jnp
fcmovnbe
je
hlt
xchg
imul
pop
adc
push
jo
or
push
add
push
sub
mov
jae
fcmovnbe
inc
test
cmp
or
stc
ss
adc
mov
mov
scas
or
add
fsubs
and
rclb
lock
cmp
dec
cmpb
aas
aam
add
push
aad
mov
mov
int
pusha
xor
je
enter
data16
or
pusha
add
adc
pop
jne
test
xor
cs
je
fcmovbe
xor
xlat
cltd
inc
or
xor
test
push
adc
xor
xchg
adc
inc
push
or
or
mov
sbbl
or
lds
iret
subb
das
and
repz
mov
rorb
sbbl
ret
popa
or
cmpsl
inc
mov
je
inc
test
lea
fwait
shr
loop
cmpsb
xchg
xor
or
and
xor
or
enter
push
mov
sbb
pop
add
xor
cmpb
push
aaa
inc
inc
mov
or
stos
sub
cmpsb
cwtl
adc
cmpb
xchg
push
imul
lods
pop
xchg
jl
adc
mov
mov
push
sti
mov
push
lea
pop
adc
imul
sbb
lods
cmp
pop
aam
jne
int
add
mov
shrb
ss
mov
or
sub
ret
push
inc
xchg
icebp
xor
dec
adc
add
add
sub
add
mov
clc
lahf
inc
push
dec
addb
mov
cmpsl
add
mov
and
mov
out
test
bound
pop
push
xchg
dec
xor
add
inc
nop
icebp
dec
pop
xor
fldcw
cwtl
xchg
repnz
mov
xlat
test
or
mov
cmp
xchg
pop
sbb
sbb
or
xor
outsl
inc
dec
lret
lcall
and
fldl
xor
sub
outsb
inc
imul
sub
fildl
or
adc
push
adc
bound
lods
cmp
add
roll
sbb
dec
push
aaa
in
shr
btc
pop
insb
cmp
sbb
popf
mov
dec
jae
add
fcomi
jo
inc
arpl
adc
add
rcl
jp
mov
mov
push
cmc
add
gs
incl
mov
push
test
out
or
cmp
sub
pop
xor
mov
outsb
add
adc
stc
repnz
mov
dec
jns
add
jge
fldenv
add
add
sbb
test
push
add
outsl
push
add
orl
or
into
out
call
add
mov
add
xorb
rcrl
sbb
push
jo
das
push
cs
or
cmp
add
cmc
imul
cwtl
and
xchg
mov
mov
sbb
mov
rcll
cmp
inc
loope
jge
cmp
imul
mov
lcall
cmp
adc
fidivrl
add
push
xor
dec
ficoml
leave
or
mov
jns
aaa
jae
xor
std
mov
andb
nop
xchg
out
stc
scas
aad
sahf
ficompl
es
add
dec
xchg
add
lea
mov
jge
mov
pop
je
jno
push
les
mov
je
mov
mov
ljmp
rorl
pop
mov
adc
lds
lea
cmp
gs
sub
shl
and
test
loop
mov
add
lea
jmp
pop
jnp
sub
pop
and
xor
fimuls
add
push
scas
es
shrl
push
pop
and
ret
call
fnstcw
push
and
xchg
subb
roll
sarl
jne
sub
cmpl
sbb
mov
loop
xorl
stos
test
mov
and
adc
shr
jno
xchg
sbb
and
xor
xlat
add
xchg
int
mov
inc
lock
push
mov
and
aam
dec
push
add
inc
or
xor
aam
shl
int3
pop
xor
repz
ret
or
adc
fstps
mov
jmp
dec
push
xchg
jge
and
xchg
cmp
add
lods
and
in
leave
xor
and
hlt
aaa
cmp
incl
or
test
dec
add
push
add
es
sub
fstl
ljmp
or
jl
lods
movsb
rolb
push
ret
jno
add
add
push
sub
dec
sub
les
test
addb
sub
add
xchg
andl
popa
dec
rolb
add
adc
in
dec
sub
leave
rcrl
dec
lcall
or
je
movlps
inc
adc
dec
add
dec
sub
shlb
lds
inc
sub
xlat
and
test
aas
adc
pop
push
inc
in
lea
gs
fcompl
sbb
aad
jle
rclb
jne
xor
mov
xor
and
in
mov
ds
daa
push
sub
dec
dec
jg
rclb
mov
nop
push
test
aam
inc
add
and
inc
test
es
pop
push
or
stos
adc
push
and
les
daa
mov
push
loopne
xchg
adc
les
scas
loope
xor
sub
pop
aad
inc
jge
incb
adc
jns
mov
inc
add
lock
mov
fldlg2
sbb
imul
add
push
adc
pusha
ja
popa
test
push
or
dec
xchg
popa
or
or
sub
sbb
lods
loopne
jno
jnp
mov
and
aam
mov
sbb
adc
jae
mov
mov
sbb
push
pop
nop
pop
dec
mov
mov
in
xor
dec
nop
es
int
or
fdivr
pop
and
outsl
sbb
mov
das
cmpsb
bound
and
mov
push
sahf
imul
push
test
sub
jnp
sarl
inc
pop
or
test
mov
dec
mov
test
push
sub
cmp
loop
mov
shrb
mov
fwait
test
loope
xchg
cltd
xor
pop
adc
mov
cmp
scas
mov
mov
mov
lods
mov
filds
lahf
mov
nop
push
ljmp
add
xor
mov
in
sub
push
inc
aad
inc
or
push
das
ret
dec
xchg
stc
out
js
std
add
lcall
dec
and
out
or
xor
inc
cmp
dec
push
mov
add
and
test
inc
jne
rcrl
fwait
mov
gs
add
sub
cmp
cmpsl
sbb
and
arpl
and
add
dec
mov
inc
xchg
sbb
mov
shll
inc
dec
rorb
ret
int
pop
inc
rcrb
pusha
sbbb
mov
mov
jbe
add
rolb
test
and
cmpsl
sbb
cmpsl
addl
lret
or
rclb
xchg
cli
mov
push
mov
dec
sbb
sbb
outsb
push
int
xor
sub
pop
or
push
push
les
jne
pushf
addb
xchg
mov
mov
sub
add
push
in
or
jnp
gs
adc
cmp
test
arpl
inc
pop
push
lret
aam
xor
sub
add
daa
xchg
addb
mov
mov
pop
cmp
mov
movsl
out
sub
add
loope
popa
mov
jbe
xorl
mov
rcrl
mov
gs
in
and
sbb
cs
popa
cltd
cmp
fisubl
rcrb
add
nop
pop
mov
sbb
add
sub
test
jns
mov
inc
insb
sub
data16
sbb
push
fcmovu
push
and
adc
or
dec
inc
push
in
inc
fistl
push
and
pusha
sub
dec
je
mov
xchg
insl
mov
repnz
push
jecxz
add
xor
stos
add
pop
jg
dec
or
fstps
popa
xchg
xchg
xor
pop
mov
add
jecxz
lods
dec
cld
inc
mov
add
loope
push
ljmp
or
sbb
adcb
mov
adc
sti
adc
push
xor
add
adc
frstor
jb
push
xchg
xor
aam
adc
ds
ret
sub
cmp
test
xor
inc
xlat
gs
mov
fistl
lds
ret
xor
adc
fwait
and
mov
cmpsl
imul
inc
inc
xor
pop
outsl
cs
insl
repz
or
push
sub
dec
aam
dec
jecxz
add
fwait
pop
je
mov
sbb
adc
xor
inc
add
xchg
add
mov
pop
inc
test
pop
ljmp
or
adcl
xchg
fnstcw
dec
je
jnp
pushf
xor
test
popl
add
push
nop
pop
jl
mov
or
jb
or
daa
add
data16
xor
outsl
and
les
sahf
fisttpl
dec
xor
fwait
mov
loop
inc
js
inc
add
in
clc
test
or
rclb
mov
cmp
mov
inc
aas
call
lea
lea
mov
scas
inc
dec
push
orl
adc
imul
jmp
gs
aam
jo
test
push
push
push
aas
push
add
jno
clc
mov
subl
les
xor
inc
mov
cltd
mov
jno
fcomip
sub
repnz
and
cwtl
and
dec
movsb
mov
mov
xor
and
ja
sbb
push
xchg
shll
sarb
sub
loope
add
arpl
fs
mov
add
mov
add
loope
sbb
hlt
add
loope
push
arpl
insb
fldcw
ja
jb
test
out
jnp
test
aaa
in
push
sub
xor
out
sub
js
mov
out
sub
insb
imul
cmp
jmp
and
mov
imul
subb
movsb
sub
mov
hlt
sub
and
lea
stos
xchg
adc
jnp
test
dec
loopne
mov
xchg
out
and
je
jmp
mov
cs
push
push
int
fsqrt
sbb
lea
dec
movsb
jl
dec
movl
inc
repz
mov
cmp
xchg
movsl
add
sub
push
iret
pop
adc
andb
lahf
inc
mov
xor
cld
mov
cmpsl
mov
pop
add
fsubrs
arpl
xor
and
mov
mov
or
movsl
sub
push
inc
push
imul
fs
arpl
rol
adc
adc
mov
push
cmp
jecxz
aam
in
rcll
clc
dec
inc
pop
push
cmp
addr16
mov
inc
insb
leave
mov
rorl
sar
push
mov
push
pop
out
inc
push
sbb
rolb
add
sbb
pop
xor
inc
xchg
movsl
pop
xchg
adcl
shlb
pop
stos
dec
das
aad
sarl
andl
aad
or
push
aad
lods
pop
pop
mov
dec
jmp
rcl
mov
repnz
and
or
push
orl
and
fidivl
push
hlt
mov
gs
cli
inc
sbb
cmp
mov
push
aam
dec
jmp
test
pminub
sahf
add
sub
fs
pop
testb
ljmp
les
jecxz
filds
dec
xchg
loop
test
xchg
jl
sbb
push
movsl
sub
push
imul
xor
sbb
lods
jb
xchg
out
and
and
cmpsl
push
and
inc
inc
jge
and
cmp
adc
jne
mov
test
inc
ljmp
xor
jecxz
jno
jp
loopne
xchg
cltd
pop
lods
shll
test
jmp
and
jnp
fcomp
es
and
pop
ret
cmpsb
das
dec
jo
cmp
cmp
add
int
adc
shlb
mov
inc
dec
xchg
mov
sub
std
pusha
adcb
dec
xchg
and
loope
hlt
movsl
loop
xor
xchg
stos
movsb
dec
mov
mov
aaa
pop
mov
or
out
andb
stos
lods
dec
fsubs
inc
or
or
inc
shrb
pop
int
nop
in
mov
int
mov
sbb
adc
sub
sub
bound
add
sbb
sub
das
sub
cli
or
inc
insb
xchg
jns
test
inc
adc
ret
pop
fistpl
loop
jno
aad
jne
add
sbb
mov
push
add
or
sub
stos
rorb
push
add
cmp
rorl
lods
and
enter
mov
inc
xchg
je
arpl
sbb
push
ja
or
inc
shll
add
je
and
ret
test
push
push
inc
incl
mov
pop
jecxz
mov
inc
adc
add
and
inc
inc
rcll
xchg
cmp
aam
mov
icebp
add
iret
inc
stos
add
pusha
sub
add
pop
xor
sar
mov
jne
add
es
cmp
push
jo
add
jbe
adc
or
subb
adc
imul
lock
inc
mov
sub
dec
fildl
push
lcall
lret
daa
xchg
loop
sbb
pop
mov
xor
frstor
mov
inc
aas
aaa
adc
lret
adc
mov
addr16
sub
mov
add
add
xor
jg
jmp
rolb
jl
push
inc
inc
imul
mov
sub
test
xlat
mov
inc
xor
add
push
and
add
cmp
rclb
or
xor
or
sub
add
sbb
sti
lds
movsb
push
adcl
xor
leave
pusha
adc
and
push
enter
inc
test
cmp
movsl
xor
test
js
or
jno
mov
jno
ret
rorb
std
mov
mov
ja
repnz
scas
in
imul
mov
mov
dec
and
sub
xchg
daa
or
mov
sbb
addb
cwtl
insb
dec
inc
sub
xchg
add
and
and
add
jns
cmc
inc
mov
call
paddq
mov
sub
nop
mov
sahf
pop
push
adc
es
js
and
lahf
mov
pop
ret
fiadds
jge
inc
fwait
inc
shrl
test
push
pop
sbb
sbb
ror
mov
ja
addr16
and
mov
xchg
andl
xchg
movsb
mov
pop
adc
mov
loop
lahf
dec
aas
repz
mov
fwait
sbb
and
or
add
and
and
cld
mov
xor
sub
gs
nop
sbbb
adcb
add
adc
adc
out
xor
sub
mov
fdivrs
mov
xor
push
dec
popf
mov
sub
test
push
push
lcall
insb
adc
dec
leave
cmp
lahf
push
iret
mov
cmp
or
push
add
rorb
pop
push
daa
dec
adc
xchg
mov
adc
aad
shlb
and
movsb
adc
xor
bound
aas
inc
jecxz
mov
add
dec
and
je
mov
dec
incb
js
add
icebp
lods
mov
mov
in
jge
mov
cmpsb
or
jmp
push
rol
mov
xchg
and
xchg
pusha
popa
mov
jns
adc
cmp
pmaxub
das
popf
and
cmp
aaa
in
leave
fwait
das
sub
sarb
or
addl
push
stc
pop
and
add
inc
xchg
out
pusha
stos
or
add
sub
and
add
inc
push
sbb
pusha
xchg
adc
outsb
dec
xchg
sub
pop
push
jno
or
sbb
mov
mov
sbb
push
int
adc
or
mov
jo
push
enter
mov
cmpsb
test
and
iret
dec
dec
mov
dec
fs
add
iret
jae
dec
cld
xlat
pop
sub
add
adcb
adc
add
xor
shrb
dec
and
inc
shlb
jne
test
sbb
dec
imul
pop
pop
dec
xchg
cmc
enter
mov
dec
mov
outsb
adc
shrl
cs
insl
jecxz
jns
dec
sbb
xchg
dec
jne
pop
ljmp
inc
mov
add
aam
in
call
aam
mov
mov
ja
lea
stos
push
sub
cmpsb
leave
or
scas
je
mov
jle
pop
add
sbb
fbstp
inc
mov
push
jg
sbb
outsb
test
xchg
xor
mov
popf
mov
add
push
cmpl
test
out
mov
out
pop
int
mov
jmp
mov
lods
push
dec
xchg
jg
movb
pop
pop
add
push
jnp
leave
push
jmp
pop
xor
mov
push
lea
cmpsb
xchg
jmp
loopne
movsb
ret
mov
imul
pop
lahf
adc
adcl
add
xor
and
loop,pn
push
push
pushf
mov
jno
fwait
icebp
push
mov
fs
xor
fwait
orb
daa
cltd
cmp
and
xor
push
jmp
sahf
leave
bound
sub
inc
pop
pop
push
jno
jl
add
test
les
test
lea
xchg
xchg
movl
fs
out
dec
pop
or
cmp
roll
adc
ffree
dec
sub
dec
inc
fcoms
inc
inc
fcmovnbe
add
pushl
pop
outsl
jbe
mov
sbb
dec
int3
repnz
or
aaa
call
add
add
push
test
inc
xchg
xor
and
cwtl
aad
loopne
stos
pop
push
gs
std
in
arpl
adc
nop
cs
add
addl
mov
adc
enter
pop
jae
stos
adc
cmpb
test
std
sbbb
add
test
xlat
lcall
push
xor
and
fcmovnb
adc
dec
popa
or
fildl
xor
ret
js
push
xchg
lret
jmp
cmpl
pusha
mov
outsb
and
inc
pop
dec
inc
sbb
sub
mov
notl
inc
mov
iret
gs
and
stos
push
mov
pop
adc
push
add
mov
mov
add
sbb
imul
dec
imul
loop,pt
push
push
rcll
pop
dec
mov
xchg
gs
fidivs
adc
call
movsb
and
or
shll
adc
scas
leave
inc
aam
mov
out
sub
push
leave
mov
or
and
inc
popf
xchg
mov
pop
rcl
add
cwtl
inc
or
test
in
and
cmp
or
shrb
jae
cmp
pusha
icebp
cmp
mov
test
mov
add
in
jo
fcompl
in
shlb
andb
cmpsl
xor
ret
fs
cmp
int
popf
mov
add
mov
shrl
or
stc
inc
or
out
leave
loopne
sub
xchg
pusha
movsb
mov
in
cltd
hlt
xor
push
mov
and
push
mov
dec
ret
mov
es
and
dec
xor
pop
push
inc
xor
cmp
fsts
and
inc
stc
imul
inc
stc
push
fwait
test
int3
pop
sub
push
test
lock
and
leave
inc
add
out
or
push
cmp
bound
movsl
xchg
mov
rcr
pop
xor
clc
js
imul
jb
sbb
adc
dec
movb
pop
push
cmp
adc
jb
mov
cmpsb
notb
in
inc
shrb
jmp
sub
push
push
pop
cmp
sbb
fwait
sbb
stos
xchg
adc
adc
popa
pusha
sub
repnz
imul
fstl
imul
movsb
and
test
repnz
mov
stos
xchg
adcl
stos
add
loope
add
push
mov
xor
ret
into
add
inc
inc
dec
push
pop
or
dec
mov
sub
rol
push
ret
inc
xor
mov
and
int
add
inc
lods
rcll
in
dec
test
stc
movsb
and
cmp
lret
xorb
mov
into
scas
movsl
mov
inc
inc
inc
xor
lods
xchg
dec
xor
xchg
movb
nop
imul
sub
mov
lods
lret
or
pop
jns
xchg
adc
enter
jg
xchg
movsl
out
imul
adc
daa
mov
sbb
sarb
add
out
aaa
pop
pop
repnz
movsb
sub
sub
cltd
jg
push
inc
mov
xchg
popf
add
rcrb
jle
loopne
sub
dec
enter
push
lahf
bound
loopne
sbb
scas
mov
cmpsl
cli
or
adc
test
stos
ret
pushf
js
imul
or
push
lock
jns
jmp
sbb
xor
lods
sti
and
lods
add
loop
ret
mov
test
loopne
push
mov
ret
es
inc
scas
loope
loope,pn
addr16
jmp
test
sub
jno
or
aam
mov
add
popf
pop
shll
add
inc
mov
incl
add
add
mov
out
movsb
and
inc
dec
xor
add
add
cmp
pop
jae
xchg
and
add
xchg
and
dec
dec
cmc
enter
and
lods
sub
add
add
scas
aam
adc
fstpl
add
daa
std
and
cwtl
mov
mov
ljmp
adc
xchg
mov
lods
imul
mov
pop
xor
or
adc
xchg
inc
movl
test
iret
int
enter
mov
test
sbb
mov
push
mov
push
inc
pop
into
imul
dec
inc
adc
push
add
sbb
scas
inc
inc
mov
or
pop
dec
or
sub
and
inc
mov
xor
push
add
daa
andl
add
dec
iret
hlt
outsl
push
adc
shll
pop
or
add
test
inc
jne
and
dec
mov
int3
call
ja
std
aaa
add
sub
xor
movsl
clc
add
add
mov
insl
cmp
xor
mov
mov
xchg
add
roll
icebp
dec
xchg
mov
lahf
jg
insl
cmp
enter
adc
and
sbb
movsb
inc
js
repnz
movsl
pusha
dec
sarl
add
aam
nop
xchg
test
sub
xorb
in
add
js
out
les
xor
dec
inc
xchg
mov
inc
pop
xor
push
mov
std
mov
and
xchg
push
mov
push
push
xchg
es
popf
add
xchg
or
and
add
mov
inc
pushf
ss
mov
xor
mov
push
nop
out
xor
push
addr16
nop
add
fstl
xchg
mov
xchg
hlt
cmp
and
stos
mov
add
inc
cmpsl
add
pop
loopne
shll
sbb
movsl
cld
push
push
aam
pop
rclb
call
jne
or
mov
out
rcrb
stc
jns
sbb
lret
mov
mov
pop
push
or
jg
inc
out
aam
add
out
add
in
cmpl
sub
mov
inc
ljmp
adc
pop
mov
dec
arpl
rsqrtps
add
dec
subl
cmpsl
test
lds
gs
sbb
inc
decb
add
mov
imul
jmp
mov
shll
ss
pop
and
fwait
test
orb
fistps
ret
mov
and
and
and
cmp
sbb
and
pusha
cmpsb
or
or
cli
lcall
shlb
inc
ss
repnz
lret
sub
lds
push
pop
mov
mov
add
mov
aad
pop
mov
test
data16
and
and
roll
imul
rol
inc
sbb
sbb
add
xor
cltd
cmp
arpl
shrb
cmp
xchg
testl
addl
mov
cmpsl
cwtl
sbbl
add
cmp
lcall
movsb
xchg
in
mov
jecxz
mov
pop
dec
inc
fsubs
xchg
push
mov
push
xchg
or
add
xchg
mov
arpl
jns
or
inc
pop
add
movsb
pop
mov
sbb
in
and
xchg
add
ret
inc
cmp
xor
stos
xor
cmpsb
sub
pop
push
pop
lods
in
pop
cmpsl
rcrb
icebp
ss
inc
loope
enter
inc
iret
rcll
scas
lcall
popf
inc
aas
xchg
jg
test
add
loopne
and
and
movsl
or
mov
in
pop
xchg
in
sub
and
jecxz
mov
inc
inc
sbb
lea
add
add
adc
sub
mov
adc
stc
pushf
push
pop
lret
pop
div
sbb
shll
es
loop
jmp
mov
iret
xchg
mov
cmp
mov
mov
mov
push
push
aam
scas
adc
scas
xchg
ds
aad
or
or
jns
and
push
push
or
aaa
lock
pop
aaa
mov
pop
dec
call
rcr
insb
or
iret
jl
stc
add
push
lods
and
mov
cmpb
xor
push
dec
cld
sub
pop
ss
testb
mov
inc
mov
push
push
sbb
push
sbb
sub
add
pop
ja
pop
dec
insb
inc
sahf
ret
xchg
jo
or
and
mov
fldl
mov
inc
scas
in
xchg
lcall
xchg
adc
xchg
push
shlb
addr16
fistpll
push
sub
lds
in
adc
add
or
out
dec
push
les
fsubp
mov
lret
and
mov
and
xchg
cltd
jle
arpl
push
cltd
std
mov
cmp
in
push
or
or
imulb
push
fdivs
or
jl
mov
mov
add
adc
testl
push
or
ljmp
es
loope
push
mov
lods
stos
in
pop
or
cmpb
cli
fadds
or
inc
adcb
jnp
ret
jns
xchg
subb
push
cs
mov
lahf
stc
in
fbld
subb
ljmp
lcall
sbb
or
fdivrs
push
dec
addb
sbb
loope
and
xchg
add
xor
jg
add
xchg
jnp
and
sub
cmp
mov
inc
pop
xchg
sbb
pop
das
xor
les
shl
mov
pop
jp
cmp
sbb
ret
addl
insb
mov
testb
jne
int
add
cld
adc
xchg
push
shl
inc
in
mov
adc
xor
push
inc
pop
dec
cs
dec
or
pop
in
jnp
adc
jae
mov
sub
dec
pop
or
ljmp
cld
mov
ds
dec
loope
push
inc
cmp
xor
lret
or
jp
insl
mov
and
push
jb
xor
mov
dec
icebp
push
push
adc
jl
movsl
cs
mov
push
int3
add
adc
cltd
dec
sarl
andb
mov
pop
cmp
scas
jmp
fistps
pop
cmpsl
sbb
adc
shlb
cmc
cmp
or
je
pop
jne
sub
push
lcall
xor
sub
and
stos
dec
rolb
xor
xor
xor
mov
mov
sbb
decl
xchg
pusha
shll
in
add
mov
fst
add
cmp
xorb
dec
lret
dec
orb
mov
aam
cmc
push
in
aam
mov
or
xorb
jl
mov
fninit
sbb
xchg
jg
cmpsb
ret
sbb
sarb
add
sti
push
xchg
mov
inc
push
cltd
xchg
adc
push
adc
mov
pusha
aaa
sbb
xlat
push
mov
adc
xor
xchg
and
jg
and
add
leave
jns
add
mov
aam
xchg
sbb
imulb
call
pop
inc
push
cmp
rorl
jne
arpl
loopne
adc
es
inc
sti
cltd
jg
jns
sbb
cli
jle
or
adcb
imul
jmp
mov
gs
sub
xchg
jno
inc
mov
xchg
xorb
pop
popa
xor
xor
jle
dec
and
jg
mov
js
and
and
nop
fcoml
adc
pop
cmp
xorl
and
inc
inc
mov
inc
mov
adc
adc
inc
adc
add
xchg
mov
mov
ja
rcrl
and
data16
mov
xchg
push
nop
movsb
jae
pop
push
push
dec
add
in
sbb
inc
push
lods
dec
or
sub
cmp
mov
xchg
mov
push
aas
rorb
std
sbb
sbb
inc
xor
adc
xor
scas
or
jmp
aaa
add
xor
or
pop
dec
mov
mov
and
stc
add
and
lods
mov
adc
dec
insl
xchg
mov
shll
jnp
dec
std
xchg
mov
mov
add
pop
dec
mov
sti
daa
shll
fstl
imul
push
inc
and
and
subb
idivb
cmp
and
out
mov
sahf
mov
dec
add
xor
test
call
das
aam
sahf
fldenv
cmp
adc
aam
fcoms
cwtl
pop
orl
add
cmpsb
xor
sub
or
popf
sbb
lea
add
adcb
sahf
cmp
jmp
pop
pop
or
or
je
movsb
pop
add
xor
xchg
int
mov
mov
sub
or
xchg
jp
fwait
cmp
movsb
xchg
xor
sbb
or
test
lcall
inc
test
xor
imul
push
inc
sub
push
pop
xchg
push
cmp
xor
enter
sbb
rolb
rcrl
pusha
xchg
pop
mov
inc
enter
pop
sub
inc
int3
xor
sub
jl
loope
adc
mov
and
or
or
inc
push
pop
lcall
out
in
lret
sahf
icebp
xchg
push
add
adcl
mov
lock
test
add
push
and
adc
jmp
cltd
test
cmpsb
xor
jg
pusha
dec
sahf
fcompl
lds
aaa
aas
xor
cmp
lret
repnz
and
push
rclb
stos
adc
mov
aad
fimull
add
daa
sub
push
pop
lds
adc
ljmp
push
add
pop
call
adc
dec
ficoml
or
or
jmp
xchg
into
scas
mov
rcll
xor
rorl
xor
and
sub
or
pusha
std
cli
adc
fisttps
and
xorb
shlb
jns
push
pusha
inc
pop
aaa
das
mov
repnz
addb
or
dec
popa
add
movsb
and
test
push
insl
aas
add
sbb
mov
sbb
push
inc
dec
test
mov
insl
inc
or
jne
out
shl
inc
mov
inc
test
fs
cmp
rolb
sbb
out
mov
in
fsubr
adc
xchg
dec
ret
les
test
mov
add
repz
aam
sbb
dec
mov
pusha
mov
rcrl
scas
pop
adc
add
lea
out
pmaddwd
in
or
fcmovnb
xor
adc
imul
mov
leave
mov
insb
popf
pusha
push
xor
adc
or
mov
fs
adc
mov
les
push
stos
insl
sub
scas
cmp
inc
lret
mov
and
loope
pop
pop
js
add
js
adc
adc
xchg
xchg
in
adcb
cmpsb
fistl
out
pop
fsubrs
inc
mov
movsl
fildl
lret
stos
incb
fnstsw
test
push
jmp
xlat
mov
aad
pop
pop
adc
adc
int
inc
or
imul
lods
or
cltd
inc
gs
out
and
sub
push
ja
jnp
sub
pop
popf
jmp
sub
push
rcrl
jno
arpl
push
clc
add
in
sbbl
daa
subb
scas
or
push
push
inc
pop
adc
jge
mov
xor
subb
mov
cmpsb
xchg
loopne
scas
inc
in
adc
repnz
dec
pop
sub
pushf
mov
mov
cltd
mov
add
cmp
add
subb
and
pop
incl
xor
pop
pcmpeqb
rclb
test
xlat
movsb
push
xchg
adc
cmpsb
add
add
and
mov
int3
inc
scas
adc
mov
inc
sahf
xchg
or
cmpsb
fsubl
or
mov
or
pop
push
iret
jbe
lods
cmp
adc
enter
cwtl
dec
push
push
fwait
inc
mov
mov
adc
push
lret
mov
movl
mov
push
ror
arpl
js
xor
push
fadd
add
lock
push
hlt
lahf
scas
test
dec
fdivrl
pop
and
incl
in
jp
add
orb
test
cmpsb
addr16
pushf
inc
shlb
popa
sahf
sub
push
test
out
loop
or
cmp
add
add
or
jne
lcall
push
dec
cmpsb
test
adc
daa
nop
xchg
int3
add
add
push
arpl
loopne
inc
fadds
jmp
push
iret
fmuls
jns
inc
mov
xchg
data16
out
mov
test
lock
or
shlb
jne
pop
jne
add
pop
or
jge
cmpsb
adcl
xchg
cmpsb
inc
and
and
mov
cmp
and
in
dec
cmp
add
push
imul
es
and
pop
ds
cli
or
mov
mov
mov
adc
rclb
or
sbb
adc
ja
fstpt
inc
out
dec
and
test
push
add
pop
sub
pop
adc
cmpsl
inc
arpl
imul
add
js
popa
mov
jge
lcall
xlat
sub
test
mov
push
or
jno
sbbl
adc
adc
add
fiaddl
mov
iret
loop,pt
cmp
adc
mov
push
lods
ja
stos
in
nop
inc
int
inc
mov
stos
mov
and
ljmp
jge
cli
mov
jmp
jae
test
add
addr16
mov
add
fildl
add
and
or
mov
push
cs
sub
pop
add
ja
push
pusha
adc
adc
pop
push
xchg
and
jo
inc
and
outsb
je
push
scas
popa
cmpb
xor
pop
and
lods
insb
dec
dec
inc
das
and
cmp
insl
cmp
ret
pop
cmp
sub
and
sbb
sbb
push
jo
sbb
push
sub
adc
inc
sbb
ss
dec
sbbl
mov
pushf
sub
push
subl
mov
aam
cmp
adc
dec
jo
or
mov
cmp
pop
es
ficomps
xor
pop
xor
pushf
sbb
inc
daa
xor
dec
sbb
xor
or
inc
fwait
add
sarl
and
out
popa
push
addr16
cwtl
dec
pushf
or
or
ljmp
dec
or
cmp
leave
xor
shrb
hlt
pushf
mov
add
or
push
mov
push
lahf
push
xor
adc
xchg
sbb
cmc
adc
scas
sub
jb
jg
mov
cwtl
fsubl
pop
daa
mov
inc
xchg
cmp
push
inc
inc
jbe
cmp
mov
mov
fdivl
loop
xchg
pop
sti
adc
add
repz
rclb
push
cmp
movsb
test
mov
hlt
adc
in
lret
add
jne
pushf
loopne
xor
hlt
repz
or
add
aad
xchg
xor
push
mov
sbb
es
scas
sbb
dec
clc
mov
arpl
insb
popf
js
mov
stc
dec
aad
push
call
xchg
xor
orl
imul
popf
xchg
mov
aaa
and
xor
xlat
adc
xchg
les
orl
ljmp
adc
leave
popf
mov
fildll
push
mov
dec
mov
jmp
adc
test
orl
movsl
mov
mov
add
xorl
push
add
and
jne
hlt
mov
mov
inc
fldl
ret
mov
lock
test
adc
jae
cmp
xor
shlb
shrd
sbb
stc
loope
xor
dec
es
jo
fistps
mov
cmp
jo
leave
cli
mov
insb
push
jl
lods
jbe
cmp
sub
xor
loope
and
and
xor
test
sbbl
in
ss
adc
and
dec
add
or
sbb
movsb
pop
jo
bound
test
xchg
adc
pop
sbb
jo
or
xchg
pop
cmp
xlat
cmp
add
xor
and
xor
mov
xchg
or
add
adc
outsb
fstps
nop
jg
xchg
stos
or
cmp
bound
xor
movsl
ja
push
add
lret
lcall
mov
jmp
mov
icebp
xor
and
push
fsts
xchg
xor
sbb
add
sbb
lret
popf
orb
addr16
adc
dec
xorb
cmpsl
pop
mov
pop
push
xor
rorl
mov
fwait
mov
add
jno
int
jnp
mov
dec
dec
scas
jno
orl
dec
add
rcrb
cmp
push
adc
push
ret
movl
sbb
xchg
mov
xor
xchg
add
mov
mov
dec
add
push
xor
jl
add
fidivrs
push
jo
push
jns
jge
push
stos
xchg
sahf
ret
push
push
xchg
fwait
mov
cli
or
arpl
lret
lret
dec
or
scas
imul
mov
push
mov
cld
jae
or
adc
arpl
inc
inc
aam
dec
inc
test
rcr
jae
dec
arpl
cwtl
cltd
or
lahf
inc
inc
mov
ret
inc
mov
dec
mov
sbb
and
xchg
outsb
adc
mov
add
and
xchg
cmpsl
mov
mov
or
shll
jns
mov
stc
js
add
or
push
add
jo
dec
mov
push
push
or
out
inc
popa
and
mov
cmpsl
fs
push
sub
adc
dec
push
mov
adc
mov
xor
xor
jne
push
mov
or
inc
push
sbb
push
movsl
jns,pn
add
mov
xor
mull
jns
test
add
mov
adc
adc
sbb
fisttpll
adc
inc
jae
jl
dec
and
ljmp
pop
sbb
jo
xlat
adc
and
popa
or
mov
hlt
push
dec
jmp
cltd
rclb
loopne
daa
lods
xchg
push
leave
jbe
and
inc
dec
lds
rcrl
sar
rolb
movb
mov
xchg
jno
jmp
addr16
test
pushl
add
sbb
xchg
mov
test
xchg
mov
or
mov
enter
add
loopne
sbb
xor
push
scas
aam
jae
rclb
add
push
and
aas
xchg
xor
pop
mov
push
enter
sub
pop
icebp
inc
xor
sub
push
add
dec
imul
pusha
sub
mov
into
in
rorl
sbb
lcall
jge
mov
adc
movsl
push
mov
stos
adc
in
sub
push
sbb
inc
int
es
push
mov
js
adc
test
mov
adc
lea
mov
add
jmp
add
movsb
add
repz
jge
leave
and
push
jns
repz
test
inc
push
inc
push
push
inc
hlt
add
or
test
xchg
notl
and
add
add
lahf
xor
test
inc
jb
mov
das
movsb
sbb
cwtl
and
dec
xorb
mov
mov
cmp
rorb
dec
jmp
ljmp
pop
shll
dec
pusha
add
ljmp
and
add
inc
inc
mov
dec
aad
cmp
mov
rcl
out
xchg
lock
add
popl
inc
mov
pop
pusha
cmp
xchg
adc
or
xchg
cmp
and
xor
sbb
xor
add
pop
adc
xor
mov
add
imul
in
pop
pusha
push
xor
adc
or
dec
or
mov
sub
xchg
or
bound
js
outsb
lret
sbb
dec
adc
pop
xor
loopne
xchg
or
lds
adc
push
fnstenv
aaa
int3
imul
sbb
punpckhwd
sbb
cs
mov
or
addl
add
jno
insb
fisttpll
es
mov
jecxz
and
pop
or
dec
push
lea
push
xor
dec
in
inc
adc
popa
add
cmpsb
and
cmp
aam
mov
add
xor
sbb
pop
add
xchg
or
aam
pop
push
push
fnstcw
imul
inc
mov
cmp
pop
sbb
push
dec
out
stos
mov
movsl
mov
jno
or
sbb
cmp
dec
sbb
fnstcw
stc
pop
mov
fisubl
inc
fsubl
gs
shrb
popa
push
jo
xor
pop
mov
hlt
out
add
stc
flds
pop
mov
scas
add
cmpsl
or
cld
inc
daa
sbb
xor
push
push
jg
add
dec
cmp
leave
repz
hlt
add
adc
and
loope
scas
lahf
add
fcompl
adc
es
mov
lock
xchg
lods
imul
inc
mov
xchg
xchg
or
mov
push
add
insb
xchg
mov
and
cmpb
inc
and
xchg
add
xor
add
push
mov
add
pop
push
jmp
cmp
jns
dec
sbb
mov
mov
ror
mov
mov
push
and
cmp
inc
adc
cld
scas
pop
mov
dec
fistpl
lret
faddl
stos
es
leave
dec
xchg
call
xchg
loopne
adc
movsl
aad
xchg
cli
add
cmp
jbe
ficoml
push
adc
add
push
pop
cmp
push
and
arpl
out
mov
inc
jns
mov
adc
es
cs
js
adcl
jo
popa
or
repnz
pop
jno
cs
adc
jmp
rolb
rclb
in
push
sbb
mov
stos
imul
or
mov
rolb
and
cltd
les
and
jmp
in
add
mov
mov
icebp
add
mov
and
movsb
inc
pushf
insl
or
andb
call
incb
or
lea
jmp
test
sahf
fwait
add
shrb
or
add
inc
or
and
fadds
mov
dec
xorb
and
pop
jb
lods
mov
dec
aam
adc
pop
adc
fistl
fst
ja
push
icebp
bound
fists
imul
nop
and
dec
out
push
outsb
sbb
lcall
roll
imul
lea
ds
mov
or
inc
mov
ret
andl
jg
xor
pop
xor
fsts
xorb
or
aam
inc
sub
mov
test
in
push
cltd
sbb
ss
rorl
inc
add
imul
xchg
or
les
or
dec
add
xchg
adc
inc
insb
pop
mov
mov
gs
mov
mov
cmp
sub
aam
push
dec
fldl
add
mov
loop
cmp
pop
push
ja
lcall
add
nop
lods
inc
mov
out
stos
add
popf
icebp
fs
sbb
outsb
jnp
test
fwait
addr16
gs
adcb
jl
inc
push
add
insl
ds
je
xchg
arpl
add
mov
and
shll
dec
jo
dec
adc
loopne
addr16
out
mov
aad
adc
nop
jmp
sub
stos
test
mov
push
scas
fwait
mov
mov
mov
cmp
rolb
cmpsb
movsl
push
loope
mov
xor
and
rorl
test
xor
inc
pop
pop
or
push
add
negb
and
or
and
rolb
nop
adc
repz
inc
xchg
rcrl
mov
and
dec
jb
pop
sub
inc
xchg
es
test
lods
add
mov
adc
aam
sti
adc
xor
cmp
insb
pop
and
sbb
in
sbbb
shrb
push
push
popa
shll
adc
adcl
xor
cltd
jp
add
rorb
daa
dec
test
mov
call
sbb
dec
or
mov
or
jecxz
sbb
sbb
out
inc
nop/reserved
lods
add
xchg
stos
subb
lock
inc
dec
mov
dec
xor
cltd
push
loope
sbb
pop
fldt
sub
bound
rorl
pop
xchg
and
aam
lods
fistps
mov
insb
mov
mov
push
inc
add
sbb
jle
jne
inc
pop
and
in
orb
or
push
add
xchg
les
cltd
rolb
mov
mov
mov
dec
add
cmpsl
or
rclb
pop
aad
popa
add
mov
testb
add
add
imul
mov
mov
clc
push
add
mov
push
sub
adcb
popf
add
or
or
add
add
sahf
cs
or
dec
jmp
dec
xor
inc
push
sub
and
push
dec
ss
bnd
shrl
and
repnz
jecxz
add
adcb
xchg
inc
cmp
add
or
dec
push
pop
jle
aam
rolb
cmp
cmp
sbb
jo
sbb
lret
fwait
xor
adc
rcl
mov
les
sbb
lahf
mov
mov
in
imul
inc
xor
inc
jge
sbb
ret
movsl
mov
stos
adc
inc
xchg
pusha
loope
jnp
sbb
inc
lods
or
add
jmp
and
cmp
xor
orl
jecxz
fidivl
mov
adcl
sub
in
addr16
test
jg
mov
sbb
enter
inc
loope
add
pop
jg
mov
cmp
sbb
scas
jnp
das
mov
ror
inc
push
pop
sub
and
add
repnz
push
jo
xor
addb
jne
and
pop
in
push
mov
pusha
dec
push
add
pop
sbbb
mov
scas
push
push
mov
addb
out
jns
test
xorb
orw
fwait
stos
pop
push
rcl
xor
xchg
xor
xorb
inc
and
clc
mov
xchg
jne
xor
push
aam
mov
jno
jecxz
pop
adc
pop
mov
ljmp
wrmsr
das
jl
xchg
and
add
inc
dec
nop
orl
push
cs
inc
daa
cmp
push
pushfw
xchg
test
imul
adc
rorl
and
std
pop
out
and
xchg
inc
leave
or
or
insl
lret
nop
mov
lods
or
cmp
jno
push
das
sbb
roll
mov
mov
lods
jp
adc
push
sub
xchg
add
fnstenv
outsb
shll
mov
rcl
inc
pushf
xor
lcall
mov
mov
xchg
mov
das
xor
add
mov
mov
ret
aad
sbb
push
sub
mov
cmp
lods
lret
pop
xchg
data16
andl
add
xor
fs
mov
arpl
push
sbb
and
xor
sbb
push
shll
xchg
mov
and
imul
rolb
push
out
lahf
js
lea
call
push
add
imulb
sbb
mov
push
inc
sbb
inc
jl
sbb
push
test
ds
add
pop
adc
add
or
xchg
inc
push
xchg
adc
dec
xor
or
add
daa
adc
mov
or
adc
cmp
add
adc
scas
or
xor
sub
sbb
inc
sbb
ss
add
test
cmp
std
mov
inc
mov
imul
imul
and
and
add
mov
push
dec
std
and
lods
jg
mov
cmc
mov
or
andb
in
xor
bound
lcall
in
add
pop
jns
adc
jno
js
loop
jb
jbe,pn
icebp
inc
sub
inc
dec
inc
mov
cmc
mov
shll
fwait
es
aad
pop
inc
dec
stos
adc
lds
pusha
add
flds
inc
enter
in
sbb
push
inc
and
mov
and
lahf
cmp
and
pop
jne
push
xor
inc
cltd
scas
movsb
jns
cmpsb
sbb
xchg
flds
imul
scas
push
dec
pop
push
adcl
and
push
add
in
dec
adc
rolb
mov
ret
mov
adc
jmp
mov
push
test
popf
add
sub
sbb
adc
lods
dec
mov
adc
or
xor
nop
or
inc
popf
pop
sbb
push
inc
pop
mov
rolb
jns
add
pushf
mov
icebp
sbb
aam
scas
xchg
loopne
jns
mov
or
xchg
push
enter
mov
cli
inc
insb
or
xlat
lds
shl
and
sbb
shlb
out
push
call
jecxz
xlat
push
adc
dec
xchg
aaa
xor
subb
xchg
cmc
aas
mov
test
xor
fistpl
ror
insl
test
pop
jno
lahf
mov
cmp
fsubl
xorb
in
sub
push
push
or
pusha
mov
jo
inc
sub
or
imul
cmpsb
jno
aam
jge
or
or
push
movsl
arpl
dec
inc
jnp
test
mov
push
push
add
pop
inc
dec
and
pusha
jne
mov
stos
mov
shlb
ja
dec
shlb
pushf
fsubs
jne
ljmp
popf
adc
cmp
push
lret
inc
add
or
ret
jno
sbb
inc
or
inc
jb
ss
and
rclb
push
in
inc
aaa
lods
loopne
push
jnp
dec
test
or
scas
adc
sub
lods
sub
sahf
push
inc
mov
or
fcomps
test
add
dec
pop
inc
mov
divl
jno
pusha
xchg
adc
and
inc
dec
xchg
inc
and
xchg
mov
adc
mov
sub
add
mov
jecxz
mov
lahf
mov
push
test
inc
pop
adc
cwtl
dec
out
inc
add
sbbl
and
inc
pop
mov
push
test
andb
pop
je
sbb
or
test
mov
xchg
inc
mov
mov
lds
test
cltd
sub
pop
repz
xor
sub
push
sbb
jno
add
cltd
je
xor
test
push
in
jle
or
pop
fistpll
xchg
mov
call
and
or
in
xchg
inc
and
das
lock
sbbb
test
leave
popa
inc
ljmp
sub
add
sub
push
sub
ret
cwtl
cmpsb
rcll
xor
mov
xchg
cmpsl
inc
xchg
push
sub
mov
inc
xchg
cmp
leave
sbb
xchg
xchg
inc
add
loopne
add
inc
aas
or
inc
or
cmovge
andl
mov
popf
sbb
sbb
sub
jecxz
cmp
fs
addb
test
inc
scas
xor
adc
adc
aaa
aas
xchg
jp
loop
push
add
stos
pop
pop
push
insb
sahf
lret
cmp
shl
dec
insb
out
or
mov
add
or
pop
mov
jbe
imulb
mov
test
xchg
inc
jne
ret
sub
adc
xor
lcall
add
rolb
shrb
jmp
or
cmp
mov
push
dec
rorl
add
lods
dec
loop
xor
xchg
shl
mov
sub
dec
pop
push
inc
lea
xor
shlb
xchg
enter
jecxz
imul
add
ja
add
test
jg
sub
rolb
or
dec
insl
xchg
cmpsl
add
adc
je
loope
dec
shlb
sarb
or
sub
popa
mov
pusha
push
icebp
and
adc
add
scas
push
fnstsw
pop
cmpsl
add
adc
push
and
push
sbb
popf
or
xor
push
sub
lcall
sbb
xor
sub
xchg
arpl
add
sub
cltd
lahf
and
scas
or
sub
cmc
cmp
push
rcl
mov
adc
or
or
bound
add
out
xor
xchg
push
dec
jb
jg
jno
ss
loopne
cs
stos
inc
adc
xor
adc
loop
push
and
pop
xchg
in
xorl
mov
faddl
mov
mov
fnsave
sbb
inc
ds
sbbl
and
int
and
and
mov
xor
or
popa
add
fcmovb
xor
imul
ljmp
test
xchg
add
jne
in
out
adc
daa
dec
int
and
pop
jb
lods
scas
orb
push
daa
cs
addl
dec
xchg
mov
mov
inc
pop
push
xchg
test
fld
aad
add
test
or
cmpsl
jne
icebp
push
inc
addr16
add
mov
stc
sbb
xor
push
cli
jmp
or
push
inc
adc
inc
xchg
xchg
aas
inc
dec
add
daa
popf
xrelease
mov
adc
and
sete
dec
dec
test
xor
add
xor
cmp
pushf
xlat
or
cs
ds
and
push
ds
adc
dec
pop
repnz
pop
ds
or
inc
push
mov
lock
mov
arpl
ret
lds
subl
imul
jg
push
inc
push
popa
mov
icebp
bnd
lods
dec
adc
pop
cmp
add
cmp
mov
add
ret
daa
push
sbb
sbb
outsb
mov
mov
xchg
je
pop
sub
add
hlt
or
xchg
fdivrs
or
xchg
test
in
sub
cltd
outsl
test
es
add
jp
xor
dec
fstpt
ljmp
adc
ret
dec
pop
jo
repnz
mov
dec
jmp
push
rolb
in
xchg
xor
mov
dec
push
add
mov
mov
and
push
shll
das
push
xor
lret
or
inc
pop
push
inc
push
loope
or
dec
das
test
and
push
roll
adc
insl
sbb
add
iret
pop
xchg
sahf
cltd
xor
inc
pop
push
adc
jge
xchg
insb
sbb
adc
cmp
rorb
xchg
xchg
and
mov
sbbb
iret
mov
adc
fs
mov
lcall
aas
pop
push
dec
add
lret
aaa
sti
cmp
test
mov
sbb
je
inc
add
xor
add
rorl
sbb
dec
mov
jbe
mov
push
cmp
imul
inc
jge
add
mov
push
sub
movsb
test
inc
out
cmp
repz
int
pop
and
adc
sub
mov
xchg
cmpsb
outsb
rcl
shrb
inc
mov
mov
add
or
jne
xor
pop
mov
popf
pop
inc
dec
sbb
popf
or
cltd
xor
adc
inc
or
push
jne
xor
inc
rcr
xchg
and
xor
sbb
lcall
pushf
es
fisubrs
mov
xlat
and
add
ljmp
xor
lods
mov
aaa
inc
push
cmpl
and
pop
add
addl
add
decl
cltd
icebp
mov
jmp
jne
jne
jmp
or
decl
mov
movsb
add
cld
mov
adc
jmp
xor
and
add
add
jnp
mov
add
add
add
fstpt
add
push
adc
lds
fidivl
adc
jns
les
push
push
push
adc
es
sbb
stos
lret
push
mov
sbb
in
inc
mov
scas
push
dec
fsubs
mov
xchg
push
popa
test
or
xchg
xor
pop
adc
stos
aaa
loope
sub
xor
sub
add
add
popa
enter
add
jmp
pop
add
add
out
add
mov
mov
out
lret
dec
lcall
add
cmp
and
in
cli
add
and
daa
aaa
xchg
pop
in
and
add
dec
or
lret
sbb
mov
shlb
pop
dec
cmp
xchg
mov
les
add
push
inc
cmp
mov
pop
sbb
xchg
fwait
pop
jne
xor
inc
adcl
movb
inc
dec
inc
cmp
ljmp
jl
aaa
sbb
mov
hlt
mov
cmp
or
jle
mov
ror
jae
xor
inc
les
xor
jo
add
push
frstor
icebp
movsl
xchg
add
imul
push
ret
lds
imul
add
nop
lcall
push
stos
mov
pushf
lock
pop
add
lret
pop
sbb
arpl
movsb
mov
test
insl
daa
mov
sub
outsl
sbb
pop
cmp
or
leave
enter
mov
push
mov
or
dec
cmp
aad
dec
jg
mov
push
ljmp
fiaddl
loop
aad
and
sub
ljmp
push
cli
add
cld
movsl
mov
test
xchg
fwait
mov
inc
xchg
ds
lahf
lahf
xor
inc
add
fildll
nop
scas
test
push
sbb
pushf
mov
mov
push
stc
xor
les
repz
dec
sarl
mov
cmp
and
js
or
ret
push
sbb
xor
fldenv
xchg
gs
cmc
cld
push
mov
test
lods
xor
cmp
test
xor
inc
adc
add
mov
xlat
mov
inc
clc
pushf
inc
add
outsl
or
loopne
fwait
mov
loopne
or
xor
and
add
inc
mov
adc
inc
aam
je
adc
add
push
jns
and
add
add
jb
inc
add
push
scas
mov
stos
xchg
popa
mov
int
lret
arpl
cmp
jae
or
cltd
lret
sti
arpl
out
and
addl
stc
push
shlb
pop
mov
sub
adc
and
aad
inc
es
jp
xchg
mov
sub
and
bound
xor
cs
adc
add
jmp
xor
rolb
pop
sub
addr16
fadds
iret
shlb
cmp
jg
mov
or
popf
mov
imul
mov
fstps
mov
xor
xor
popa
clc
rcr
sub
inc
shrl
aam
shl
in
movb
or
cs
shrb
sbb
xchg
and
inc
aam
mov
add
add
aaa
add
ja
xchg
test
push
xorl
mov
adc
add
or
mov
sbb
xor
inc
mov
aaa
leave
enter
add
inc
cwtl
dec
add
dec
rorl
test
add
imul
push
das
inc
add
test
jb
sahf
and
or
add
sbb
add
mov
arpl
or
mov
sub
stos
or
mov
jbe
add
mov
loop
mov
fld
test
mov
fs
mov
add
add
push
push
arpl
push
inc
inc
adc
aad
inc
add
jb
les
xchg
mov
pop
add
dec
mov
enter
mov
pop
adc
mov
rorl
xor
adc
push
adc
jo
daa
ljmp
dec
sbb
pop
add
add
sub
jecxz
mov
incb
and
dec
sarb
rcrb
lret
mov
jle
push
pop
push
mov
dec
mov
xchg
lock
popf
jns
adc
lcall
push
pop
xorl
or
pop
adc
push
adc
push
sub
inc
pop
icebp
cmp
push
popa
popa
shlb
jae
sbb
push
jnp
pusha
add
mov
mov
cmp
and
add
xor
mov
popa
pop
or
xor
andl
ja
lahf
pop
xchg
mov
shl
pop
xchg
in
pop
sub
ljmp
inc
lcall
test
dec
rolb
xchg
sbb
sbbl
ret
sub
push
sbb
pop
repz
add
xor
jp
sub
mov
sub
data16
sbbb
dec
add
lahf
aaa
mov
inc
mov
mov
pop
push
shll
testl
dec
dec
in
inc
sub
xor
jae
stos
inc
adc
add
or
mov
and
pop
adc
and
pusha
cmp
jle
rolb
dec
movsl
scas
jecxz
mov
cld
jno
dec
lock
mov
cmp
std
pop
and
adc
dec
ret
int
nop
or
daa
mov
cld
fildl
xchg
add
imul
mov
pop
xor
or
dec
popf
pusha
push
push
pop
push
mov
aam
jg
sub
jle
xor
add
dec
fsubr
jo
xchg
sub
mov
push
cmp
lock
sub
add
adc
push
sub
xchg
push
test
imul
mov
js
jne
pop
andl
cs
arpl
add
mov
push
and
adc
shl
dec
xor
faddl
jnp
or
cmp
jmp
sub
test
stos
rol
roll
cwtl
and
dec
jne
bound
xor
mov
add
mov
fistl
scas
scas
adc
inc
stos
int
nop
mov
aad
jmp
sbb
out
lea
xor
xor
and
adc
xlat
xchg
les
sbb
sbb
movsl
subb
cmp
lret
jg
and
xor
inc
xchg
imul
mov
lahf
fcmovnb
scas
xchg
mov
push
dec
lret
mov
lret
movsl
jae
vmovapd
sub
mov
and
push
push
ds
aas
xchg
nop
jno
sbb
adc
insl
fsts
adc
inc
dec
inc
nop
push
loopne
push
imul
inc
mov
xlat
inc
and
xchg
or
jno
and
inc
lcall
push
int3
xchg
xor
sbb
inc
sbb
sbb
mov
rorl
xor
dec
mov
pop
out
lods
imul
sbb
movsl
mov
iret
jne
pop
ret
xchg
push
jnp
xchg
xchg
inc
cmpsb
ret
xchg
mov
movb
subl
add
mov
aam
and
mov
jb
in
dec
sub
movsb
adc
cli
inc
add
push
push
cli
push
xchg
dec
xor
adc
pop
and
test
add
xchg
test
mov
and
sbb
sti
push
cli
and
dec
push
movsl
sbb
xor
jg
popa
out
mov
lds
mov
mov
pushf
mov
stos
mov
pop
hlt
pslld
ficoms
leave
jb
pop
pop
rolb
rorl
push
or
stos
adc
out
rcll
xchg
popa
pop
dec
loope
popf
fstpt
or
pop
mov
xchg
sub
bound
scas
and
loopne
imul
inc
fsubl
jg
sub
mov
sbb
and
sub
xchg
push
xorb
and
cmp
nop
and
fildll
mov
scas
dec
rolb
push
pop
scas
fsts
std
loop
lds
add
push
ss
xor
mov
sub
jno
repnz
push
or
in
and
rcll
and
iret
and
and
dec
cwtl
mov
or
cmp
loopne
das
insl
xlat
movsbl
xchg
cwtl
sub
fcoms
orb
xor
mov
xor
dec
push
mov
andb
cmpsb
imulb
psllw
xchg
inc
xor
mov
sbb
add
add
dec
std
jmp
sub
adc
add
xchg
repnz
push
inc
push
clc
cmovge
or
inc
xor
cmpb
and
jge
adc
imul
pusha
mov
cmp
push
lods
push
add
icebp
or
ret
pop
cmp
aad
inc
data16
dec
sarb
int3
push
adc
adc
push
add
and
out
mov
inc
sahf
xor
ss
jmp
and
xchg
movsl
add
sbbb
jge
sbb
enter
push
imul
aam
insl
mov
and
xor
sub
aam
fdivrs
mov
leave
mov
leave
cmp
into
mov
xchg
mov
outsb
cmp
outsb
movsl
jl
ret
mov
dec
push
jmp
jge
dec
jnp
or
mov
adc
mov
or
xor
or
rclb
nop
shrl
mov
sbb
inc
in
adc
fs
mov
mov
dec
jnp
leave
sub
dec
jmp
fadds
stc
xchg
ror
dec
mov
xchg
jg
dec
push
stc
rolb
clc
add
sahf
and
xlat
add
add
fsts
jnp
sbb
mov
enter
push
leave
jle
insl
inc
ret
pop
dec
lds
insb
push
flds
bound
fs
stc
fstpt
xlat
repz
xchg
mov
test
popf
dec
sbb
and
shlb
adc
adc
add
sbb
sbb
inc
stc
push
dec
sbb
gs
mov
lock
mov
sbb
and
push
mov
xchg
flds
cmpb
add
xor
jo
add
xchg
cmp
adc
inc
add
scas
mov
aam
mov
adc
sbb
addb
popa
inc
gs
pop
sbbb
je
jp
test
pop
adc
shlb
shrl
test
movsb
dec
rorl
cmp
push
mov
jp
mov
dec
push
js
stos
mov
push
add
or
xchg
dec
sbb
push
and
mov
mov
jo
arpl
add
mov
test
jb
mov
mov
add
sub
mov
jg
mov
outsl
cwtl
movsb
rcrb
xor
mov
add
jmp
pop
leave
push
sub
imul
loope
or
mov
inc
sbb
cmpsb
pusha
cmp
mov
mulb
mov
xor
mov
jecxz
mov
push
adc
and
and
inc
dec
push
dec
mov
popa
aad
fnstenv
and
popf
fwait
or
mov
inc
sbb
sbb
xchg
fimuls
sub
cmp
or
or
shlb
add
lret
outsb
test
cmc
iret
push
inc
and
push
push
mov
pop
ja
add
loopne
aam
mov
fistpll
add
xchg
cmp
stos
adc
and
mov
pop
xchg
fists
xchg
adc
imul
mov
xchg
popf
in
push
xor
adc
cmp
pop
mov
push
mov
cmc
insl
mov
jbe
sbb
in
dec
xor
pop
add
push
jp
dec
cmpsl
and
xor
fstl
xchg
mov
ljmp
ret
push
add
lea
xchg
pop
xor
jns
xor
push
mov
jbe
int3
add
add
add
dec
adc
inc
test
insb
push
lock
inc
das
pusha
pop
rcr
sarl
or
jmp
repnz
addr16
int3
lret
mov
cmpsb
rclb
in
nop
mov
inc
jne
add
cmp
xchg
or
xor
sub
pop
je
cmp
lahf
push
jb
xchg
xchg
jmp
xchg
cmp
test
xor
jmp
xor
insl
and
subl
enter
lcall
insl
loope
pop
xor
dec
enter
push
adc
in
add
lahf
sahf
out
inc
jae
push
int
add
mov
and
inc
sub
xchg
or
adc
rep
xchg
sub
fsubl
clc
mov
lcall
add
dec
sub
mov
add
aaa
scas
pop
and
mov
rorl
in
adc
test
xor
push
adcl
sbb
sub
cli
repz
and
mov
hlt
push
jnp
lock
icebp
add
or
mov
push
roll
insl
in
push
fdivp
pop
xchg
scas
dec
jg
stos
cmp
add
jbe
incl
je
out
mov
popf
add
or
gs
movsl
mov
adc
xchg
push
clc
rorb
test
push
dec
in
mov
jbe
lea
xor
inc
push
xor
push
jb
lods
cltd
sub
and
nop
mov
popa
sub
lds
push
add
jle
call
in
stc
jg
adc
popa
adc
cmc
inc
mov
or
dec
fidivrl
add
and
mov
add
push
popf
mov
xchg
fldl
sbb
adc
mov
xchg
xor
push
jnp
movb
xchg
aaa
loopne
push
inc
fists
daa
shr
xchg
and
jmp
push
aaa
dec
out
mov
adcl
push
ret
inc
rcrb
push
mov
cmpsb
mov
xchg
adc
fwait
and
orl
movsb
inc
mov
sahf
cwtl
dec
sbb
sub
and
mov
arpl
aaa
dec
incb
cmp
in
add
and
xor
rcr
dec
mov
mov
sbb
loopne
and
adc
add
and
lock
or
data16
fimuls
add
add
popl
xorb
imul
dec
fidivrl
add
xor
sub
push
movsl
push
mov
pusha
jecxz
data16
les
je
dec
sbb
roll
and
xchg
pop
adc
cmp
xor
pop
inc
inc
jmp
rcrb
jno
cmp
sbb
push
xchg
ldmxcsr
sahf
cmc
mov
cmpsb
repnz
je
push
iret
jecxz
add
or
and
stos
sahf
sbb
cld
hlt
and
dec
xchg
scas
fsubrs
scas
stos
pusha
add
call
mov
inc
shll
ret
adc
xchg
push
insb
sbb
sbb
es
scas
or
shlb
sbb
push
leave
dec
xor
rolb
mov
nop
inc
sbb
mov
int
test
add
xor
cld
add
mov
and
pop
daa
popa
cld
inc
xor
jge
int3
xor
push
sbb
mov
push
add
inc
inc
sbb
arpl
add
add
xlat
jbe
jg
adc
cmp
inc
adc
movsl
add
adc
cmp
lret
jbe
xchg
popl
out
pop
or
lods
push
pop
pop
mov
stos
add
sbb
stc
sbb
mov
xchg
jl
in
stos
mov
stos
test
fcomp
rolb
cwtl
xor
sub
mull
pop
inc
loopne
and
push
aaa
dec
push
dec
addr16
mov
xchg
rolb
repz
xchg
inc
push
xlat
movsb
xor
inc
lahf
mov
mov
mov
mov
mov
add
enter
enter
es
pop
mov
and
or
int3
test
ret
insb
aad
push
and
cli
dec
or
jmp
jo
arpl
repnz
ljmp
gs
rclb
and
xchg
sbb
sbb
add
and
add
outsb
cwtl
js
push
and
sub
imul
pusha
pusha
mov
mov
fwait
mov
push
movsl
add
aam
jge
inc
mov
push
push
popf
and
out
es
sbb
aaa
add
jge
sbb
int
adc
sbb
mov
addb
arpl
in
xor
sub
inc
fisttpl
rolb
add
push
dec
lret
loop
in
sub
inc
gs
push
leave
mov
mov
divl
cmp
inc
sahf
sbb
and
xor
jne
push
and
mov
bound
add
lods
inc
pop
in
out
nop
je
sub
ret
in
test
or
inc
pusha
and
shlb
add
dec
lds
je
mov
xor
xchg
lods
orl
sub
sub
fists
mov
xchg
pop
dec
pop
test
jl
inc
lcall
aad
cmp
test
xor
aad
sbb
mov
adc
jae
add
sub
or
and
rclb
xchg
and
or
fiadds
sbb
xchg
in
rcrl
add
push
insb
jne
add
insl
add
incl
dec
jge
shlb
jo
add
nop
faddl
ss
mov
xchg
mov
mov
clc
add
xor
mov
add
fiaddl
or
inc
les
rcrl
adcb
add
push
shl
xor
in
mov
inc
mov
popf
lret
sti
mov
inc
jp
ss
jno
inc
dec
cmp
mov
aas
pop
dec
pop
aam
push
outsl
cmpsb
test
mov
movsl
leave
ljmp
fwait
mov
aas
andb
and
and
mov
mov
std
or
test
andl
sbb
dec
cmp
mov
cld
mov
or
mov
or
sub
les
movsb
popf
adc
mov
andb
js
cmpsl
xchg
pop
and
and
loope
cmp
aad
out
and
scas
popa
adc
adc
movsb
nop
add
sub
outsl
data16
and
fwait
scas
test
sub
xor
dec
sbb
je
daa
lea
jo
nop
inc
jg
inc
sbb
pop
push
mov
arpl
add
sub
faddl
out
in
iret
cmpsb
movsl
inc
mov
sub
sbb
pop
pmulhuw
dec
test
adc
and
nop
cmp
aaa
or
xor
mov
sbb
rorb
and
or
dec
leave
and
pop
lahf
inc
bound
or
add
jne
ds
imul
add
lods
xor
adc
or
jecxz
xchg
mov
or
push
jo
pop
sbb
xchg
inc
pusha
orb
xchg
inc
xor
dec
jg
push
aad
addb
cmp
mov
add
test
scas
adcb
mov
pusha
adc
add
pusha
jmp
adcl
fildll
aad
dec
outsb
cltd
dec
ret
jl
dec
and
push
repnz
push
sub
lds
mov
jmp
adc
cmc
xchg
popa
mov
loopne
and
pusha
xchg
arpl
arpl
sbb
mov
ret
pop
mov
sbb
add
leave
add
cmp
rcrl
add
sbb
push
and
inc
ljmp
gs
jb
push
xlat
lret
push
and
cmp
daa
in
fs
push
imul
outsb
pushf
add
addb
movups
out
test
or
shrl
sbb
in
cmpsl
sub
dec
addr16
es
aam
or
pop
in
mov
out
jo
and
gs
pop
aad
sar
sbb
mov
lcall
push
insl
ljmp
lret
movsb
push
in
cwtl
stos
or
xor
jno
mov
push
push
in
je
jno
movsb
mov
nop
loop
movsb
cmp
ret
cmpsb
jge
add
xchg
mov
push
stos
mov
stc
add
xor
out
les
push
loopne
or
push
push
lods
cmp
xchg
mov
mov
mov
mov
dec
adc
bnd
nop
cmpsl
or
addl
mov
mov
mov
or
inc
mov
or
add
sbb
mov
sbb
xor
inc
orb
adc
push
add
adc
scas
aam
push
jg
mov
add
cmp
nop
dec
inc
inc
aad
sub
and
inc
jecxz
push
pop
jecxz
or
cmc
mov
test
cs
jne
sbbl
push
xchg
mov
push
xchg
test
cmpsl
int
or
push
into
arpl
in
je
mov
imul
hlt
sarl
sbbb
adc
push
sbb
add
lret
pusha
andb
and
and
and
inc
leave
dec
mov
sbb
cmpsb
add
inc
repnz
push
daa
pusha
fwait
gs
jg
cli
push
mov
ljmp
ret
nop
pop
mov
adc
bound
mov
mov
movsl
push
xor
jmp
leave
aad
rolb
popf
jnp
and
pop
mov
xchg
jmp
inc
testl
inc
loope
add
sbb
push
inc
loope
pop
mov
sub
add
xchg
dec
repz
dec
add
mov
mov
pop
dec
es
jne
movsb
mov
xlat
jne
test
cltd
add
pop
loop
cld
nop
xchg
jl
mov
push
pop
cmp
add
push
nop
mov
adc
inc
fisttpll
mov
mov
movsb
cmovge
daa
mov
cmp
lods
test
xchg
add
push
inc
adc
mov
cltd
insb
and
mov
sbbb
jmp
pop
iret
push
aad
xor
stos
and
mov
daa
mov
roll
adc
or
fists
mov
and
add
mov
adc
mov
adc
push
sbb
shll
pop
push
stc
xchg
or
pop
xor
adc
imul
cmc
loop
orb
leave
mov
shl
xorb
stos
add
push
sbb
xchg
pop
out
jmp
cld
repz
dec
jmp
test
cmp
mov
adc
add
cmp
pop
and
popf
jno
nop
out
imul
or
test
sbb
in
in
push
add
add
lock
aaa
jge
xchg
inc
xor
jge
das
push
add
das
mov
adc
incl
or
push
pop
xchg
sahf
pop
mov
loopne
mov
dec
and
add
mov
push
hlt
pop
cmp
xor
js
mov
add
push
cmp
and
and
adc
add
inc
repz
sbb
popa
mov
mov
inc
jo
outsl
sub
jp
inc
adc
sbb
or
insl
mov
push
add
xchg
mov
sub
stos
int
notl
push
add
inc
out
fwait
cmp
dec
pop
enter
add
pop
js
adc
lds
mov
and
lcall
push
addr16
pop
mov
shll
push
mov
lret
jge
mov
or
push
sbb
xor
imul
adc
lods
add
xchg
inc
mov
and
mov
test
movsl
ja
inc
add
test
or
add
mov
jns
mov
inc
push
pusha
or
xor
movsb
ds
sub
push
out
andl
jae
mov
lcall
and
mov
add
jg
sbb
popf
sub
cs
xchg
mov
movsb
adc
pop
lahf
cli
and
pop
adcb
mov
in
cwtl
or
arpl
movsl
xchg
mov
xorb
mov
adc
js
cmp
js
sbbl
mov
jmp
pop
pop
sbb
jmp
mov
xor
xchg
ret
mov
dec
rorb
adc
jecxz
js
pop
mov
xor
xchg
scas
and
jnp
xor
inc
xchg
push
sub
and
ljmp
mov
push
pushf
pop
push
dec
push
cmp
sbb
and
pop
popa
ret
ret
pop
dec
rorb
inc
mov
stos
push
inc
dec
bound
jno
adc
push
add
push
jne
jo
xor
and
fsubr
iret
or
push
mov
test
cli
test
outsb
sbb
lcall
or
shlb
xor
cmpsb
mov
and
inc
adc
and
push
sbb
inc
test
sub
add
sti
adc
inc
dec
pop
add
movb
mov
sarb
lock
jge
inc
cld
adcb
in
sub
fistl
add
pop
add
inc
fs
or
add
lcall
pop
nop
mov
mov
insl
add
sub
in
loopne
shl
cmp
pop
or
add
and
cwtl
es
adc
dec
imul
rclb
aad
lcall
add
mov
sub
sub
push
loopne
sbb
cmpsl
shll
lcall
jno,pt
add
jge
out
lcall
in
sahf
jnp
rol
adc
add
jo
aas
ja
and
repz
ja
and
mov
inc
testb
inc
enter
sbb
adc
add
dec
inc
stos
cmp
jbe
lods
and
dec
xor
add
leave
test
sub
cmp
pop
jmp
es
rolb
jp
or
ret
shrb
lds
add
mov
or
subb
out
es
popa
adc
inc
test
xor
aam
xchg
ja
push
repnz
add
ret
add
push
rol
push
repnz
add
jle
dec
add
pop
lds
fwait
mov
jns
inc
adc
push
leave
int3
es
pop
add
arpl
xor
lock
out
or
test
sub
jl
and
mov
fldcw
and
xchg
adc
and
fs
jo
inc
cmp
and
lods
pop
adc
push
leave
int
mov
push
pop
leave
daa
int3
inc
pop
jnp
filds
mov
and
pop
fwait
adc
cltd
inc
dec
addl
push
add
inc
mov
fsubrs
add
arpl
lret
dec
mov
xor
mov
rcrl
adc
pushf
mov
mov
aas
sbb
pushf
push
pop
in
push
orl
fiadds
movsb
pop
enter
and
cmp
mov
push
ljmp
mov
lea
push
lret
push
or
adc
test
pop
push
and
cwtl
dec
mov
pop
jg
fisubrs
ficompl
pop
pop
inc
arpl
push
push
lds
pop
imul
mov
or
mov
nop
rolb
adc
sub
gs
imul
psubq
and
lds
jno
dec
mov
push
and
iret
cmp
cli
testb
jnp
push
aam
addr16
sub
sbb
sub
rorl
loop
adc
fistl
pop
push
sbb
pop
cwtl
push
jae
aas
inc
xor
div
test
or
loop
push
sub
or
cltd
subb
pop
sbb
outsl
adc
ds
cmp
pushf
add
or
stos
inc
movsl
sahf
lea
xchg
dec
add
lods
fldenv
ja
rcrl
xor
adc
xchg
push
add
and
add
add
jae
mov
jo
pop
adc
dec
xor
ss
pop
xchg
pusha
mov
repz
jmp
test
pop
je
dec
xchg
cmpsl
data16
aam
xor
xor
lea
mov
pop
push
cmpsb
stos
nop
and
sub
push
dec
adc
add
mov
sbb
mov
adc
and
test
add
xchg
add
jnp
sub
out
dec
rorl
stos
shrb
aad
add
imul
fldenv
jecxz
push
in
cmp
je
sbb
adc
adc
mov
lock
imul
and
addb
fidivs
dec
jnp
mov
lahf
or
adc
adc
and
mov
add
leave
push
aas
cmp
das
dec
sub
and
das
stos
data16
mov
xchg
xor
lret
gs
inc
popa
jno
dec
loope
mov
iret
xchg
enter
dec
aas
cwtl
sub
cmp
push
pop
shlb
adcb
addb
test
inc
sbb
inc
add
into
outsl
xchg
jo
sbb
aas
xor
xchg
out
push
or
in
mov
push
test
xchg
fwait
adc
lods
mov
in
stos
add
pop
pop
addb
mov
and
xor
xchg
sti
add
and
or
stos
out
push
stos
inc
pop
sub
mov
inc
arpl
stos
test
cmpsl
jno
nop
cmp
and
clc
dec
enter
rcll
mov
xchg
test
sbb
or
loope
push
mov
adc
xchg
iret
xchg
es
and
pop
shrl
out
mov
or
pop
pop
leave
scas
fistps
fsts
or
add
es
adc
cli
or
out
cmp
jmp
add
repnz
sub
mov
or
pop
rolb
add
lret
fnstcw
xor
shll
jg
test
sub
pop
insb
adc
inc
dec
clc
push
inc
leave
in
pop
pop
xorl
cmp
and
daa
dec
adc
dec
rcrb
and
mov
scas
sbb
fisubrs
ret
push
cmp
stos
subb
inc
mov
mov
lea
ret
mov
movsb
sbb
out
shld
or
push
lds
mov
cmp
mov
inc
or
xchg
mov
fwait
pop
and
dec
cmpsb
adc
add
xor
sub
imul
or
push
js
shlb
and
add
fwait
jecxz
stc
sahf
mov
ljmp
add
lea
xlat
push
cltd
mov
add
mov
dec
das
out
mov
xchg
lret
sahf
pusha
push
int
push
xor
push
cmp
mov
pop
or
push
inc
or
inc
mov
push
mov
sub
push
xor
movsb
pusha
test
add
call
adc
loop
mov
or
adc
jno
xor
ds
mov
add
adc
lods
xor
decl
dec
nop
dec
add
jo
repnz
sbb
sub
shrb
cld
push
aam
adc
or
sbb
adc
sub
xchg
add
push
xchg
add
cmp
add
loop
mov
aad
and
ja
ljmp
cmc
addl
jmp
insb
les
ret
and
js
test
imul
leave
gs
sbb
push
mov
test
lea
test
insl
inc
or
inc
cmp
pop
jbe
push
sub
xorb
fnop
add
sub
inc
adc
inc
inc
mov
lds
stos
or
aad
add
lds
push
call
push
jl
add
movsl
dec
std
test
add
mov
pop
adc
andl
push
pop
push
push
rcl
cmpsb
stos
add
iret
add
pop
aam
outsl
xorl
int3
fnstenv
imul
dec
aad
iret
pop
xchg
rorb
sub
sub
rorb
rolb
add
lret
jns
sbb
inc
push
inc
ljmp
sub
mov
sbb
add
and
lods
add
add
mov
push
mov
adc
jmp
mov
add
sbb
pop
mov
jns
jge
movsl
loope
add
pop
ret
pop
mov
shlb
enter
sub
xor
cltd
mov
mov
cmp
xor
lea
inc
int
addb
xlat
add
loope
mov
scas
cmp
pop
adc
ret
sub
dec
andb
jns
iret
inc
adc
inc
sub
mov
adc
cwtl
mov
je
cmpb
xor
jl
push
sbb
lcall
adc
js
movsl
test
in
mov
xorb
xor
xchg
sbb
aas
nop
mov
test
adc
mov
mov
mov
insb
and
sub
and
incb
shlb
icebp
sbb
jle
add
bound
xchg
push
inc
hlt
adc
das
or
test
imul
sarl
add
adcl
and
addb
inc
mov
add
or
cltd
inc
inc
inc
nop
mov
xchg
mov
or
imul
add
lahf
inc
pop
and
pop
scas
add
mov
addb
popl
mov
call
test
mov
gs
pop
cmpsl
jecxz
xlat
push
inc
fdivp
push
loop
call
aaa
and
cmp
les
insl
and
enter
test
fnstcw
sub
inc
cmovb
push
in
loop
jno
ja
pop
aaa
push
and
sub
mov
arpl
fstpl
or
inc
mov
pop
push
push
pop
jno
sbb
mov
push
test
movl
add
cmp
mov
test
cli
mov
pop
iret
push
pusha
adc
push
mov
stos
inc
leave
dec
pop
std
adc
jp
dec
je
clc
incl
or
hlt
add
mov
clc
inc
pop
xor
icebp
mov
mov
cmp
insb
pop
mov
mov
lea
inc
inc
dec
or
mov
jmp
aad
inc
add
adc
dec
scas
out
andb
sbb
fs
lea
js
add
pusha
subb
and
jecxz
pop
sbb
daa
movsb
xchg
stos
mov
sub
add
mov
bound
or
fs
xchg
dec
loopne
and
movsb
mov
and
dec
jecxz
lcall
movb
sbb
jae
add
fdivl
push
adc
ljmp
or
push
scas
push
push
rcrb
mov
xor
dec
sbb
mov
iret
inc
xchg
sbb
icebp
dec
dec
sub
dec
mov
lea
pushf
cld
add
push
xchg
inc
dec
mov
mov
xchg
loopne,pn
sbb
sbbl
sub
sbb
or
or
mov
outsl
push
mov
incl
mov
sti
jb
push
cmp
or
xor
push
adc
lds
xor
aad
push
js
mov
shll
inc
pop
xor
leave
or
add
stc
test
adc
add
stc
adc
and
mov
sbb
xor
lods
lcall
adc
sub
xor
nop
and
lret
inc
sbb
pop
pop
push
scas
pop
sbbl
xor
or
pop
rolb
test
cmp
push
sub
outsb
je
cmp
enter
les
adc
enter
ds
push
push
lret
push
shll
popa
mov
enter
add
lds
sahf
cwtl
adc
and
mov
mov
loope
addb
dec
js
ret
mov
adc
stos
and
jns
adc
inc
sub
inc
pop
fstps
dec
add
sahf
sbb
push
xchg
dec
and
push
and
adc
dec
and
or
cmp
das
inc
cmovne
je
sahf
lock
movsb
add
push
cmp
adc
es
out
dec
and
mov
sub
ljmp
icebp
int
scas
lret
in
mov
mov
repnz
cld
push
aam
xchg
pop
outsb
cmc
pop
xor
cmp
and
int
outsl
push
sub
int
add
lods
pop
int3
cmp
push
roll
imul
roll
imul
test
gs
push
sub
mov
test
dec
adc
test
stos
dec
test
adcl
cmp
add
push
repnz
mov
dec
or
xchg
sub
cmpsl
add
lods
test
ret
je
sbb
and
cmpsl
pusha
test
inc
aam
or
sbb
adc
mov
or
pusha
loope
xor
stos
push
adc
addl
andb
stos
pop
mov
movsb
mov
xor
ret
in
cmpb
aas
dec
mov
aaa
lret
inc
push
mov
push
add
sub
or
mov
add
mov
sarb
pop
sub
dec
and
je
add
lds
dec
jge
and
stc
lret
mov
inc
jnp
sbb
icebp
or
lods
shll
mov
fsubs
adc
dec
and
bound
push
adc
movsl
dec
sbb
cmp
sub
adc
sbb
xchg
xlat
jge
mov
mov
pavgb
jb
es
push
xor
pop
insl
add
adc
sbb
mov
or
nop
out
pop
mov
cmp
insb
jmp
movsl
jp
jo
sub
xor
xor
xchg
js
pusha
dec
dec
push
lods
or
xor
adc
add
jl
cmp
and
ja
xor
movsl
xchg
adc
adc
push
andl
or
outsb
shll
adc
inc
mov
cmpsl
fisubl
jg
sub
inc
add
andb
or
inc
add
add
rolb
or
gs
mov
lds
jns
inc
inc
xchg
pop
ja
in
cmp
hlt
sub
fstpt
pop
test
xchg
mov
mov
jle
mov
stos
push
lahf
push
pop
dec
jnp
loope
sbb
add
iret
xchg
orb
hlt
pop
sbb
add
add
dec
mov
or
cs
add
mov
push
xlat
push
jg
sbb
adc
jno
andl
scas
and
jo
and
sarb
add
ret
mov
push
mov
xchg
cli
std
ljmp
mov
mov
or
daa
out
gs
pop
shl
test
push
sbb
mov
dec
cmp
lods
jne
add
in
sub
or
sub
gs
cmp
repz
mov
jnp
wrmsr
sub
cmpsl
scas
enter
or
out
mov
inc
addb
imul
leave
inc
or
mov
scas
xchg
pop
mov
stc
add
call
sub
pop
or
and
stos
sbb
dec
mov
es
mov
in
adc
dec
pop
mov
sbb
dec
imul
shlb
add
das
jb
lods
repz
pusha
xchg
cmpsl
xchg
imul
int3
cwtl
mov
mov
or
mov
inc
mov
pop
mov
mov
cmp
mov
add
aas
adc
int
into
addr16
popf
xchg
andl
sbb
adc
pop
sbb
sbb
xchg
ret
push
mov
ds
gs
sbb
ud1
enter
add
les
push
mov
pop
cmp
lods
xchg
or
sbb
aaa
outsb
push
add
xchg
loope
xor
subb
cmpl
loopne
inc
jne
subb
sbb
stos
sub
add
mov
sub
pop
jle
sbb
xor
inc
push
xchg
dec
lds
test
enter
dec
popf
pop
xchg
mov
add
or
and
mov
popa
inc
adc
push
pop
jge
inc
sbb
and
add
adc
xor
sub
xor
rcr
popf
imul
cmpsb
mov
std
and
mov
lahf
push
or
push
or
pusha
push
mov
add
dec
ds
mov
add
inc
xchg
out
mov
out
mov
and
xchg
rolb
sbb
lcall
or
add
and
mov
lret
mov
xor
outsb
adc
cltd
push
mov
inc
cmp
jg
pop
ss
lea
pusha
xor
in
push
jno
or
pop
cwtl
adc
mov
adc
rcll
mov
andl
add
jnp
inc
and
test
shr
inc
xor
jmp
mov
push
cmp
mov
jecxz
daa
jl
sbb
dec
mov
xchg
pop
push
out
sub
cmp
xor
sar
sbb
cmp
add
lock
mov
add
jle
mov
inc
inc
jecxz
cwtl
loope
dec
cs
aas
mov
inc
insb
bound
inc
add
pop
outsb
rolb
adc
mov
sub
xor
aaa
icebp
fcomps
movsb
repnz
cmpsl
or
rolb
loopne
dec
pop
dec
add
push
pop
mov
and
jb
adcb
push
xor
in
cmp
es
insb
push
sbb
dec
pop
adc
test
push
loope
jo
insl
xchg
mov
or
mov
repz
adc
adc
imul
sbb
cmp
sub
insb
test
jae
aas
inc
shl
add
test
test
push
jecxz,pt
adc
and
pop
lcall
jnp
data16
mov
cwtl
mov
rorl
imul
mov
nop
sbb
pminub
jecxz
imul
imul
push
mov
popf
into
jmp
push
dec
mov
or
jle
loopne
sbb
adc
jns
out
dec
or
and
jecxz
mov
mov
and
sbb
insb
adc
or
xor
fcomip
add
xchg
dec
or
add
mov
xor
pushf
sub
shrb
jns
popf
push
pop
lea
xchg
sar
into
mov
rolb
mov
int
lret
or
mov
inc
les
mov
dec
mov
les
mov
es
xchg
mov
mov
mov
sbb
rclb
in
test
ds
mov
sbb
in
sub
mov
dec
push
fs
add
mov
scas
rorb
pushf
ss
in
or
sbb
dec
and
prefetch
test
nop
cmc
pop
jno
out
pop
push
les
jecxz
mov
rcrl
xor
test
lret
sbb
rolb
adc
pop
jle
insb
inc
pop
jo
ret
adc
inc
rcrb
fcmovb
pop
test
std
testl
and
dec
inc
and
sarb
xchg
cmp
push
ret
sub
leave
add
jmp
movsl
lahf
mov
test
or
dec
pop
adcl
aam
fucomi
jg
add
pushf
repz
pop
test
sub
push
adc
and
adc
xchg
js
rolb
cli
mov
push
xchg
insl
pop
call
cmp
xor
mov
dec
and
dec
outsl
adc
cmc
sub
or
js
rcrb
xchg
hlt
mov
xor
push
es
inc
jle
cli
mov
ljmp
call
clc
dec
jb
loopne
add
sbb
mov
pop
jns
and
xchg
xchg
sbb
mov
pop
push
cmc
push
test
lcall
call
or
inc
xor
xchg
adc
cmpsb
adc
push
dec
cmp
xchg
jo
pop
xor
mov
shll
outsb
adcb
dec
add
pop
shll
cwtl
lock
rclb
jmp
andb
mov
aaa
or
test
xor
add
sub
inc
dec
aaa
es
lcall
mov
cmp
scas
xchg
cmpsl
mov
xchg
ljmp
xchg
fwait
and
xchg
pushw
and
inc
inc
jge
or
cmp
add
jecxz
sub
and
pop
lods
dec
cmp
pop
rolb
mov
and
dec
adc
xorb
xchg
dec
dec
fwait
sub
push
inc
mov
adc
cmp
push
push
xchg
loop
jno
mov
jecxz
cmp
enter
or
mov
add
adc
xor
cld
cmp
xorb
dec
pop
loop
jns
js
daa
mov
stc
aaa
mov
add
and
dec
repz
adc
loop
sub
adc
and
out
mov
or
or
or
xchg
add
jg
dec
mov
pop
int3
rclb
ficoms
add
pusha
dec
sbb
sub
push
adc
push
rcrl
dec
sbb
jg
mov
add
sbb
mov
jl
sti
out
sbb
cmp
mov
sbb
les
test
push
dec
dec
jo
xlat
push
dec
movsb
sub
cmc
dec
sbb
adc
sbb
ja
inc
mov
rolb
sub
cmp
loopne
dec
xor
xor
and
inc
pusha
enter
adc
mov
adc
and
ret
dec
add
xor
xor
subb
add
add
popa
sbb
pop
ret
inc
dec
add
faddl
lods
arpl
push
dec
mov
ficoml
push
push
adc
js
cs
mov
cmpsl
fcmovnu
sbb
sub
inc
add
add
adc
enter
loop
add
or
inc
imul
mov
aad
and
add
or
lods
add
gs
and
aam
adc
imul
into
sbb
imul
movsb
and
jle
adc
or
mov
or
push
add
leave
cmp
pop
sbb
ds
hlt
add
ret
inc
sbb
das
mov
andb
cwtl
dec
pop
adc
and
js
je
into
lds
sub
add
add
push
sbb
jg
fwait
ljmp
adc
jp
xlat
jbe
add
adc
test
or
inc
inc
xchg
adc
fcoml
sbb
mov
notl
inc
cmp
rolb
pop
lret
shrb
mov
shrb
inc
and
ja
cmp
jne
mov
sbbl
adc
leave
in
ret
jns
mov
sub
ss
and
in
pop
mov
or
adc
loop
dec
xor
es
fisubl
or
sbbb
and
inc
in
rorb
xor
lods
xchg
or
icebp
orl
lahf
inc
fsts
adc
pop
add
or
ffree
stos
sbb
sbb
pop
inc
pusha
add
xchg
cmp
repz
mov
dec
popf
cmpsb
popf
das
adc
push
dec
cmp
sub
popf
push
mov
rcr
pop
sbb
lea
out
add
pop
lret
lcall
mov
cwtl
loop
movsl
lods
aaa
mov
bound
dec
fldl
mov
pusha
movsb
push
sbb
push
ret
add
push
add
dec
add
negl
fadds
cwtl
xchg
gs
mov
pop
loope
add
cmp
jns
inc
insl
loopne
ljmp
stos
pop
movsb
adc
and
inc
dec
cmp
xor
inc
addr16
stos
push
xor
scas
popa
inc
adc
imul
push
xor
jno
and
jmp
iret
push
xchg
stos
je
test
xor
sbbb
js
xchg
out
jge
xchg
push
push
push
loopne
imul
xchg
xor
stc
push
imul
push
repnz
push
andb
popa
orb
jno
push
fisttpl
dec
lds
es
mov
sbb
ret
mov
mov
mov
and
pushf
xchg
iret
xchg
mov
ds
mov
aaa
movsl
pusha
cwtl
mov
dec
call
mov
mov
dec
xor
bound
adc
pop
call
idivb
add
mov
inc
aam
scas
cmp
iret
push
xor
xchg
negl
scas
in
shl
jno
sbb
mov
sti
push
rolb
repz
inc
rol
loopne
movsb
frstor
hlt
sbbb
mov
loop
xchg
cltd
movsb
data16
sbb
fistl
xlat
in
adc
aad
push
clc
aaa
pop
pop
dec
inc
mov
xchg
js
ja
sub
aaa
ror
leave
push
popa
mov
mov
xor
fcompl
pop
pop
in
bound
test
scas
add
xor
sarl
mov
mov
xor
or
sbb
sbb
cmp
cmp
mov
mov
lcall
aad
inc
and
add
lcall
inc
fbstp
lcall
adc
push
xorl
xor
or
pushf
sub
or
mov
insb
lret
leave
loopne
bound
cmp
enter
inc
xchg
xchg
mov
mov
mov
sub
push
xchg
adc
xchg
sbb
push
or
push
ljmp
cmp
add
jb
sarb
int
adc
xchg
enter
mov
inc
and
xchg
inc
sahf
pop
push
sbb
inc
or
iret
cmp
sub
adc
add
jp
add
xchg
fdivl
and
les
loopne
xchg
mov
sbb
js
mov
cld
mov
cwtl
jecxz
cld
addr16
mov
and
push
xchg
mov
ficomps
push
mov
add
movsl
lret
add
xor
and
add
addl
or
mov
movsl
orl
fldcw
xchg
xchg
adcl
ljmp
les
rcl
add
pop
mov
sub
popa
arpl
inc
or
sub
dec
sub
jo
sub
xor
inc
add
cmp
mov
mov
adcb
imul
mov
inc
gs
les
pusha
adcb
add
push
xchg
add
sub
enter
pop
xor
shrb
push
out
test
ss
add
adc
mov
ret
shlb
mov
and
xchg
out
adc
cmp
add
push
imul
filds
sub
xchg
bound
or
inc
rcrb
xchg
cwtl
or
sbb
add
mov
rcll
inc
cmp
dec
fadd
adc
and
shrl
inc
cmp
test
shr
and
xor
orb
or
mov
mov
ljmp
insb
adc
inc
mov
rorb
rcrl
loopne
push
inc
push
enter
push
xchg
mov
lahf
dec
inc
pop
in
insb
aas
repz
clc
jg
xchg
addb
mov
mov
inc
sbb
enter
and
and
mov
aaa
test
push
pop
push
dec
jnp
pushf
inc
loope
fimuls
adc
lcall
inc
scas
cs
lahf
dec
das
flds
xor
adc
xor
fwait
scas
xor
mov
addl
and
adc
aad
pop
nop
sahf
xchg
rcl
pop
cmp
mov
icebp
fwait
or
xchg
clc
sbb
adcl
sbb
ljmp
movsb
mov
aad
and
xchg
xor
test
or
dec
dec
shll
mov
add
add
js
xor
and
aad
sbb
push
icebp
or
mov
and
or
sub
mov
adc
and
add
dec
add
loope
stos
es
inc
test
dec
xor
stos
push
roll
test
adc
jecxz
adc
roll
test
cmc
or
add
or
or
inc
xchg
fsubs
cmp
orb
adcb
xor
fnstcw
imul
fprem
fbstp
icebp
dec
aaa
mov
xchg
add
arpl
xchg
push
hlt
cmpb
stos
adc
xlat
scas
aad
dec
js
clc
iret
inc
ds
add
or
push
dec
adc
into
inc
cmp
mov
jno
xor
sub
test
inc
inc
sbb
cmp
aam
mov
jp
sbb
push
call
sub
ret
add
push
push
xchg
hlt
and
popf
jns
push
adc
loopnew
add
sub
and
movsl
aas
add
test
addl
stc
into
mov
cwtl
mov
xor
jl
roll
js
fwait
jne
push
push
dec
lcall
orb
mov
shlb
mov
or
inc
or
dec
push
fldenv
lret
lret
xor
movl
in
shll
sub
js
sti
jns
adc
adc
sub
or
gs
movsl
and
sti
adc
add
jecxz
ret
shrl
push
arpl
adc
dec
nop
mov
and
cmp
rcrl
and
jecxz
pop
dec
mov
shlb
dec
shrl
inc
sub
jne
leave
mov
pop
fldcw
or
mov
test
pop
xchg
xor
pop
popf
sub
and
or
adc
push
rolb
jp
rclb
or
fisttpl
jno
or
or
cltd
repnz
lahf
xchg
and
push
imul
or
adc
das
add
inc
inc
loopne
ffree
push
cmp
movsb
ret
and
push
je
and
pop
movsb
adc
dec
sub
aam
inc
fs
insl
sbb
push
cs
stos
addb
test
push
and
in
js
xlat
or
and
or
adc
leave
inc
imul
or
test
cmpl
call
sbbb
inc
push
cwtl
mov
cmp
sub
xor
fs
ds
mov
mov
setns
xchg
iret
mov
rclb
mov
inc
cli
test
add
add
or
xchg
pop
out
xchg
test
push
mov
rolb
inc
push
pop
repz
or
mov
test
ja
pop
adc
nop
aad
sub
pop
fadds
shll
and
inc
enter
or
pop
inc
sbb
popf
int3
sub
dec
inc
sahf
xchg
sbb
gs
outsl
inc
adcb
add
mov
aam
dec
enter
mov
push
in
aaa
icebp
pop
sbb
out
cmc
push
mov
rolb
movsb
stos
rolb
xlat
mov
mov
jb
sub
or
popf
sub
sub
pusha
jecxz
mov
add
push
test
sahf
mov
dec
inc
stc
add
repnz
bnd
or
sub
jecxz
push
lret
test
mov
xor
and
adc
jb
cwtl
sarb
jns
pop
rolb
ret
pop
push
mov
stos
push
add
xchg
ret
jmp
add
mov
adc
and
iret
mov
gs
stos
sbbb
adcb
sahf
cmp
push
mov
inc
je
push
add
push
jo
push
push
jno
inc
inc
jecxz
bound
mov
movsb
sbb
lahf
cmpsb
or
or
test
into
dec
dec
sbb
dec
inc
std
xchg
jae
test
dec
popf
xlat
lret
sti
lea
mov
sub
cmc
mov
inc
mov
push
arpl
subl
mov
jns
xor
sub
xor
mov
mov
add
adc
les
dec
adc
jbe
call
sbbb
inc
push
sbb
pop
aaa
je
mov
call
cmpsl
xor
lahf
cmc
push
mov
popf
ret
inc
lods
mov
mov
lods
mov
mov
out
fisttpll
int
fisttpl
or
inc
push
push
push
push
outsl
pop
cmp
sub
dec
les
add
add
push
sbb
lret
and
test
cmpl
das
inc
scas
mov
cmpsb
xor
jmp
or
test
stc
fwait
adc
subl
icebp
lea
cmp
int
cmp
and
mov
cmp
cltd
rolb
ljmp
sub
pop
in
inc
popa
loope
cmc
adc
inc
add
add
inc
popf
lcall
lahf
mov
xchg
mov
stos
sbb
cmc
mov
inc
mov
cs
dec
aad
cmc
sahf
push
mov
pop
pushf
int3
or
movzwl
popf
push
sub
dec
add
hlt
mov
dec
mov
mov
add
add
jo
push
inc
and
lods
mov
pop
xchg
pop
sti
pop
pop
test
add
sub
xchg
adc
push
mov
dec
add
or
sarb
lea
dec
in
ret
sbb
push
mov
in
pushf
push
jo
divl
mov
and
add
pop
or
jo
push
les
out
push
fistl
push
movsl
push
bnd
in
ret
push
subb
imul
cmp
sbb
push
mov
mov
fsubrs
jg
push
or
adc
and
jmp
cli
add
sub
adc
add
shrl
sub
test
fwait
test
push
push
repnz
add
les
fstps
push
aam
xor
iret
dec
popf
add
scas
push
inc
add
pop
push
aam
std
stos
sbb
add
add
inc
adc
mov
mov
leave
out
in
pushf
in
jno
movb
push
rcrb
xor
dec
loopne
dec
mov
add
add
mov
int
jp
push
jl
jle
inc
and
lea
mov
ds
imul
ds
shrb
andl
lret
jmp
loope
fs
clc
shll
inc
adc
xor
dec
mov
rolb
and
andb
mov
and
ret
test
cld
push
xchg
shlb
jge
lds
movsb
shlb
pop
sbb
clc
or
movsb
push
pushf
dec
fildll
fsubrs
cmp
shlb
sbbb
mov
test
sbb
or
aad
jne
xchg
pop
push
stc
loopne
dec
xor
sbb
mov
je
sbb
cmp
nop
cmp
in
movsl
sbb
dec
lcall
xor
stc
add
pop
and
xchg
push
pusha
out
insb
push
outsl
ljmp
inc
dec
repz
imul
ljmp
lret
in
insl
pop
push
or
jg
in
inc
mov
and
push
movmskps
or
movb
jnp
int
inc
test
shll
inc
xchg
fisubrl
cld
sub
adc
fwait
cwtl
add
imul
lds
and
inc
loopne
adc
cwtl
mov
adc
inc
pop
mov
cmp
inc
or
lahf
pop
aam
test
pop
xor
sbb
dec
jmp
and
outsl
jno
insl
sbb
mov
mov
adc
test
adc
sub
xchg
mov
movsl
xchg
push
pop
and
mov
or
je
sub
bound
add
shll
mov
es
and
xor
lock
lret
out
js
add
xor
test
lea
subb
shlb
jbe
mov
adc
scas
das
imull
add
jp
les
jns
xor
shrl
push
push
dec
das
jae
inc
inc
push
push
stos
scas
push
es
push
mov
dec
push
jp
cmp
or
add
decl
shlb
jb
dec
sbb
arpl
out
ret
shlb
lahf
inc
or
mov
push
sub
dec
or
aad
scas
hlt
add
mov
adc
ret
adc
dec
add
jno
inc
fadds
pop
sbb
push
cmpsl
data16
imul
jo
inc
or
xchg
arpl
out
jo
cmpsl
popa
cmp
repz
xchg
jns
push
sbb
call
insl
inc
jmp
pushf
ret
mov
mov
icebp
aaa
mov
scas
mov
test
dec
adc
jmp
dec
mov
or
xor
lds
pop
and
mov
sub
mov
iret
mov
jo
lahf
jo
adc
add
and
and
lods
idivl
nop
int
sarl
push
jmp
xor
sti
jl
cmp
rcrl
cmp
pop
shrb
flds
cmp
or
outsl
subl
xchg
imul
mov
lret
pushf
add
andl
xchg
or
push
xor
sbb
xor
and
cli
fdivrs
xchg
push
cmp
or
jmp
or
adc
inc
pop
sbb
xchg
adcl
adc
push
test
dec
push
pushf
lahf
pop
sbb
sbb
rcrb
ss
dec
mov
out
push
cmc
push
stc
ljmp
dec
rolb
push
xchg
xlat
add
cmpsl
pusha
inc
arpl
mov
push
sarl
inc
call
add
cmp
xor
cltd
and
ja
jecxz
faddl
jge
xchg
mov
ljmp
xchg
cmc
mov
daa
addr16
push
les
stos
sbb
pop
sub
inc
por
cmc
inc
lahf
push
in
and
test
mov
ss
cmpsl
into
loopne
add
and
or
push
sub
pop
add
or
pop
pop
xchg
inc
imul
push
shlb
lahf
or
sub
aas
repnz
adc
out
dec
in
popa
scas
rolb
pop
stos
enter
push
cmc
shll
push
sub
sub
xchg
push
mov
add
jmp
sbb
xor
mov
cmpb
ds
notl
ret
lret
adc
cld
xchg
push
push
push
sbb
dec
fcoml
and
fdivl
stos
or
add
xchg
fstps
xchg
lods
xlat
mov
or
test
jae
mov
test
add
or
push
outsb
mov
add
dec
mov
add
sbb
xchg
shlb
push
fldenv
and
test
lea
std
dec
cwtl
add
popa
into
mov
pcmpeqb
movsb
inc
popf
mov
cs
mov
adc
adc
push
add
xor
push
adc
andb
enter
loop
mov
and
inc
ss
test
pop
mov
cmp
inc
mov
pop
test
outsb
cmpb
xor
adc
int
xor
pop
call
lods
mov
in
sub
push
sub
sub
aad
jecxz
sub
inc
pop
in
push
xor
sbb
repz
adc
sub
jp
addl
or
push
jne
jnp
mov
and
stc
insb
pusha
add
add
lock
cld
xor
lahf
mov
or
clc
arpl
jb
cwtl
sub
sub
and
aad
filds
insl
push
test
aam
je
repz
push
les
inc
inc
ja
imul
sbb
adc
fimull
mov
test
xor
dec
or
mov
pop
adc
lcall
and
or
inc
sbb
es
xchg
mov
pop
enter
das
inc
pop
push
adc
fwait
mov
mov
bound
nop
js
and
popa
xor
add
out
out
imul
jle
arpl
adc
mov
push
mov
push
inc
cli
cmp
pop
movb
or
bound
data16
cwtl
inc
mov
hlt
popa
push
imull
iret
xchg
inc
inc
adc
ret
ret
sub
jl
leave
roll
jo
mov
sbb
fadds
dec
jno
imul
inc
fmulp
push
pop
jp
rcll
mov
push
cmp
dec
mov
mov
ja
in
cmp
ret
outsb
stc
xor
nop
or
orl
scas
push
add
jns
push
addb
js
push
loop
cltd
mov
inc
mov
aaa
xchg
sub
out
insl
lcall
add
xchg
inc
mov
push
push
je
in
jno
test
aaa
in
mov
pop
jmp
dec
xor
mov
inc
jg
dec
std
mov
adc
mov
xchg
icebp
addb
std
push
adc
or
xor
push
out
jle
inc
xor
cmc
and
cwtl
or
hlt
xor
sub
xchg
inc
add
sahf
test
adcl
mov
test
push
sbb
stos
inc
dec
cmp
sbb
push
pushf
mov
cmp
inc
cmp
daa
dec
imul
inc
inc
pop
xor
xchg
push
mov
lea
sahf
inc
lods
das
cs
cltd
jb
add
add
add
mov
dec
andnps
leave
xor
nop
jge
in
mov
mov
movsb
pop
add
xor
jns
sarb
daa
nop
and
and
add
out
mov
inc
push
xlat
std
push
inc
add
fwait
rcrb
fldt
enter
mov
dec
inc
sub
fiaddl
jns,pn
add
mov
arpl
pop
dec
repnz
es
cmpl
icebp
out
pusha
sub
arpl
ss
aam
les
jge
lret
and
in
push
dec
sbb
jg
aad
scas
arpl
sbb
icebp
or
and
mov
loopne
call
push
jbe
subl
ljmp
dec
pop
inc
test
popf
shl
sub
xor
jae
sub
aad
sbb
inc
jecxz
inc
insb
dec
and
test
pop
sbb
mov
fcmovnb
rorb
inc
push
xor
dec
lahf
rol
dec
push
sub
cmpsb
add
out
push
pop
cmp
mov
pop
popf
dec
push
adc
adc
push
test
or
inc
sbb
sub
push
shrl
sbb
xchg
lock
inc
jno
leave
mov
mov
outsb
cwtl
stos
dec
int3
mov
pop
cwtl
jo
and
cwtl
dec
xchg
arpl
and
iret
ds
fs
xor
es
or
cvtps2pd
lret
dec
cmp
cmpsl
into
pop
scas
push
rolb
jne
insb
pop
orl
push
sbb
dec
clc
push
xchg
mov
or
xor
popf
xchg
out
dec
mov
lcall
inc
psrlw
jns
dec
mov
jecxz
mov
sahf
push
jae
es
or
and
cmpsl
push
pusha
pusha
add
add
add
jge
adc
loope
and
dec
add
jne
or
push
add
les
les
arpl
add
stc
enter
movsl
ja
inc
enter
xchg
adc
mov
lods
and
adc
xchg
mov
ss
shll
lods
adc
xor
jns
inc
adc
jg
cmp
testl
jbe
push
adc
mov
addr16
inc
lea
inc
enter
lcall
pushf
loop
cmp
add
sub
movsb
inc
cmp
and
xchg
ret
dec
cmovo
mov
ud2
fistpl
test
and
popa
add
add
sti
insb
adc
les
jne
test
mov
add
cwtl
xor
xor
and
xchg
iret
jmp
inc
or
neg
mov
cmp
lock
in
push
testl
and
and
jp
pop
xchg
cld
lea
lret
pop
and
adc
inc
fldl
mov
mov
push
mov
xchg
ret
fidivrs
fnstcw
clc
adc
mov
jno
or
adc
lahf
addb
hlt
stos
or
jge
jo
cmp
mov
jg
mov
dec
fldl
outsb
loopne
pusha
out
adc
and
jp
es
or
jo
and
add
dec
add
dec
push
jb
pop
push
movsl
or
mov
pop
dec
clc
push
sar
xchg
sub
jnp
jl
icebp
sbb
das
adc
test
push
out
jl
inc
insb
push
adc
add
mov
xchg
mov
mov
das
loop
and
cmp
in
pop
xchg
add
pusha
push
loopne
and
rorl
dec
add
xchg
rcr
xor
ljmp
lret
jg
int3
test
repnz
gs
pop
jo
adc
push
rcll
sub
adc
in
add
push
mov
dec
cmpsl
add
dec
or
adc
and
sub
cmpsl
lods
push
adc
xchg
and
cmc
loopne
dec
add
pop
pop
adc
pop
roll
fst
or
pop
mov
xor
popf
add
stos
loopne
and
xchg
cli
adc
fwait
movsb
inc
or
rclb
sub
push
or
inc
in
mov
sbb
push
nop
cltd
and
sbb
adcl
dec
sbb
sbb
push
outsl
sub
jmp
pusha
and
mov
inc
jne
push
sbb
push
xchg
int
push
aad
push
mov
mov
jno
add
or
lret
and
dec
sbb
rolb
pusha
lret
jge
mov
xor
and
push
or
inc
and
sub
xchg
or
dec
jecxz
push
je
dec
mov
cld
subl
pop
jmp
and
out
lret
or
imul
sbb
adc
mov
mov
pop
cmc
aad
or
ret
and
or
mov
and
in
fisttps
push
fistpll
dec
adc
add
push
mov
adc
and
jge
aam
loopne
xor
iret
xchg
add
and
inc
loope
dec
sahf
mov
fstpl
jg
sbbb
roll
add
cmp
push
inc
sub
sbb
shll
test
mov
cmp
jns
xchg
mov
inc
hlt
loopne
push
jne
xchg
inc
sbb
push
fldt
pop
popa
dec
aad
mov
jo
inc
sbb
adc
pop
add
mov
lcall
or
add
mov
lret
push
push
dec
movsl
cwtl
lock
mov
xchg
out
pop
and
or
jp
sahf
andb
cld
pusha
rolb
nop
and
adc
mov
sbb
and
loopne
stc
add
shrb
fnstcw
daa
inc
mov
ficomps
sbb
and
je
push
pop
pop
ljmp
cmpsb
dec
xor
adc
popa
add
add
xchg
ret
mov
fsubrs
mov
jl
mov
add
cwtl
notl
enter
outsl
xchg
inc
sbb
ljmp
add
dec
jmp
sahf
jl
and
bound
sub
xor
rclb
push
mov
insb
jecxz
andl
fwait
jge
pop
sub
add
call
shlb
jp
addr16
ret
lcall
pop
cmp
xchg
add
scas
add
out
xchg
add
or
add
push
sub
and
loopne
mov
filds
sub
movsb
add
mov
jmp
cmpsb
xchg
xor
movb
jmp
or
loopne
push
inc
mov
aas
nop
lahf
and
add
insb
ffreep
adcb
xor
add
rorl
jno
insb
pop
ljmp
cmp
xchg
dec
mov
out
and
sbb
push
xchg
sub
cli
shr
dec
jo
jg
repnz
cs
shll
push
mov
adc
jmp
in
mov
in
or
jge
or
mov
insb
insb
lret
cli
lret
test
movsl
test
andb
daa
inc
imul
push
or
jo
dec
adc
mov
cwtl
sbb
jne
mov
iret
xchg
in
fldenv
and
sbb
mov
push
ret
cmp
outsl
out
xor
and
mov
and
or
mov
ljmp
sbb
push
cmp
mov
int
push
ret
push
xchg
dec
int3
and
or
ret
push
mov
cmp
fidivl
loop
mov
movsl
and
fwait
dec
inc
xchg
pop
xchg
xor
je
mov
fs
mov
or
dec
es
adcb
push
mov
dec
and
add
dec
mov
andl
jne
or
insl
loopne
cwtl
adc
adc
inc
add
push
shrb
add
enter
jecxz
cmp
push
aaa
sub
xchg
test
add
adc
lea
imul
inc
inc
cmpsl
pop
addb
lret
or
aas
popa
int
cwtl
mov
sub
fiaddl
iret
cmp
aam
sub
mov
adc
sub
xchg
mov
shlb
mov
mov
lea
nop
out
movsb
imul
add
loopne
loope
pusha
or
insl
hlt
dec
gs
xor
mov
cld
push
add
xor
push
add
cmp
gs
adcl
mov
and
push
addr16
aaa
dec
ret
cmc
pop
pop
dec
jno
int
sbb
mov
push
ret
lods
xor
loope
adc
nop
xchg
shll
pop
out
add
out
nop
ret
and
stos
pop
fistps
mov
ret
or
inc
es
jae
push
cmp
xlat
jne
dec
or
fildl
aad
adc
arpl
loopne
pop
jne
inc
jg
add
incl
mov
bnd
inc
pop
and
and
jg
jno
cltd
adc
mov
repnz
dec
sbb
nop
cmp
imul
pop
inc
sub
daa
cltd
dec
dec
das
rcl
pop
sbb
jbe
stos
sub
inc
and
push
scas
and
add
mov
sub
lcall
push
inc
arpl
cmp
xlat
and
or
cmp
push
push
inc
xchg
scas
pop
addb
cmpsb
ret
mov
cmp
sub
andb
mov
dec
cmpsl
or
jmp
xor
xchg
xor
mov
add
xchg
jno
and
std
mov
or
mov
cmp
adc
in
pop
adc
loopne
mov
dec
xor
fnstcw
adc
add
push
insl
pop
pop
xor
xor
xchg
std
rol
repnz
insb
lcall
sbb
mov
push
out
pusha
cmp
loopne
lods
mov
push
int3
sbb
cmp
and
xchg
inc
dec
imul
xor
and
aam
sbb
push
loopne
adc
imul
mov
xorb
jae
leave
pop
test
je
cmp
sbb
jb
dec
push
mov
cs
inc
inc
ds
adc
or
out
mov
addr16
add
mov
cmpsl
repz
or
pusha
push
cmpsl
lock
xchg
inc
adc
test
shll
loop
xchg
or
xchg
arpl
test
jo
ja
fdiv
add
dec
and
lcall
insl
mov
mov
test
stos
nop
add
xchg
xor
sub
ret
and
or
dec
es
inc
stos
mov
test
cltd
fwait
loopne
bound
pop
fwait
push
dec
add
add
cmp
inc
inc
adc
cs
dec
nop
lds
data16
push
jmp
adc
rol
xor
loope
push
jnp
rol
push
lea
popaw
push
lcall
xor
pop
insb
jecxz
in
jne
xchg
stc
mov
mov
or
sub
push
gs
jno
mov
insb
mov
sti
test
or
pop
inc
add
aam
rcrb
addr16
and
in
jge
test
and
rcrl
push
imul
dec
pop
pop
and
test
or
adc
or
cmp
and
xchg
dec
jo
sarl
adc
mov
fidivrs
and
roll
mov
mov
gs
and
test
xor
call
pop
aam
and
repnz
adcb
in
pop
ljmp
outsb
ljmp
mov
jne
aaa
inc
mov
xor
inc
sbb
adc
xchg
imul
jne
movsb
repnz
stos
adc
or
icebp
pop
cmp
pop
xchg
xchg
jmp
push
mov
add
or
pop
and
xor
add
rcrl
dec
xor
cwtl
add
arpl
ljmp
push
daa
push
gs
stos
call
dec
xchg
out
add
xor
xchg
push
cmpsb
add
ja
cwtl
stos
add
add
inc
push
adc
ficoml
jnp
or
sbb
xor
pop
sti
imul
scas
and
push
mov
add
dec
rcl
rol
mov
pop
adc
sub
or
inc
stc
lock
mov
dec
inc
fimull
and
orl
push
xor
out
stos
xor
gs
adc
mov
mov
aad
out
add
pop
and
ljmp
add
out
cmc
dec
loopne
adc
mov
rcrb
pop
adc
jle
add
je
vlddqu
leave
mov
mov
loope
jnp
fildl
and
movsl
imul
xchg
inc
stos
mov
filds
ret
inc
inc
rolb
xchg
jg
pop
pop
cmp
jne
push
mov
imul
dec
rolb
xor
xchg
repz
inc
add
sbb
add
aam
add
or
lea
adc
aas
adc
subb
pop
cltd
add
dec
aas
loope
pop
cmp
mov
cwtl
shlb
jg
add
and
fbstp
jae
nop
sti
and
push
add
fistl
pushf
xchg
in
les
ja
cmp
push
cmpb
jecxz
jo
lcall
adcb
sub
xor
sbb
pusha
adc
lods
mov
js
in
adcb
daa
mov
cmc
sub
add
inc
jmp
or
lret
lods
ret
lds
dec
push
sbbb
cmc
sub
nop
add
or
and
xchg
inc
ret
shl
add
es
pop
arpl
test
cmp
mov
or
push
adc
sahf
sti
or
out
inc
imul
and
and
mov
pushl
sarb
lods
push
cmpsl
lahf
sub
jns
push
and
inc
popa
pop
jle
addr16
xchg
jns
rcrb
dec
cltd
mov
jge
mov
mov
les
jb
scas
push
inc
mov
pop
lods
js
test
sub
rorl
je
inc
xor
sbb
push
stc
dec
loopne
mov
imul
or
lds
sbb
call
jecxz
insl
aad
fs
adc
stc
add
test
test
add
dec
int
inc
inc
inc
push
lahf
sub
mov
icebp
stos
xchg
xor
xchg
add
dec
adc
stc
pop
cmp
xor
or
adc
jno
imul
or
xor
pop
or
rorb
ret
add
xor
push
sbb
lahf
mov
push
ret
repz
imul
movsb
add
aas
iret
repnz
leave
cltd
addb
es
cmp
push
lret
les
pop
inc
movsb
test
orb
loopne
ljmp
stos
adc
lods
push
add
std
push
add
dec
in
push
subl
imul
out
pop
adc
rolb
add
pop
adc
mov
ss
js
push
sub
dec
sbb
loop
call
test
arpl
addl
fistpl
mov
inc
fwait
dec
mov
push
ljmp
mov
and
jnp
mov
inc
cmp
sub
dec
shll
push
adc
nop
adc
insb
mov
xchg
hlt
inc
pop
cli
jno
rolb
stos
sbb
xchg
adc
jge
or
in
insl
add
sbb
cs
dec
xchg
adc
mov
aam
aas
cmp
aad
xchg
inc
dec
dec
inc
out
dec
or
mov
inc
sub
sbb
aas
adc
pop
std
lds
fildll
mov
jmp
add
cwtl
push
xchg
jo
lea
in
insl
movsl
cli
add
loope
mov
shr
push
ss
mov
adc
pop
or
subb
mov
out
invd
in
and
ret
popf
loop
dec
pop
push
dec
mov
xor
and
mov
xorl
inc
add
cmp
dec
adc
data16
rcl
mov
xchg
lahf
pop
pop
adc
popa
adc
imul
dec
popa
aam
mov
addl
repnz
nop
sub
lock
push
insl
shlb
dec
dec
pop
rolb
gs
rcll
cmp
and
and
out
movsl
lcall
rol
arpl
divb
push
pop
push
pop
add
aam
sub
mov
add
or
std
cmp
aaa
repnz
sti
push
int
cs
jmp
adc
mov
movsb
inc
or
xchg
popa
add
inc
lcall
dec
loope
push
mov
xchg
mov
mov
push
enter
cmc
insb
xor
test
xchg
outsl
xlat
pop
sbb
add
push
addr16
push
adc
sbb
arpl
test
pop
aad
inc
sbb
shrl
sbb
cwtl
or
les
add
lock
mov
xchg
inc
xor
mov
mov
lcall
dec
je
and
cli
int
or
adc
aad
xor
adc
stos
fs
vmovhpd
and
dec
insb
or
mov
dec
push
pop
mov
loopne
dec
cmp
inc
ja
outsb
gs
int
sbbl
pop
and
nop
jl
mov
lcall
loopne
fxch
and
cmpsl
mov
or
xchg
into
xorb
mov
and
adc
cmpsb
cmpsl
adc
inc
test
insl
sbb
decl
cmp
ret
pop
lret
fisttps
and
sbbb
movsb
shll
sti
test
lahf
add
stos
pop
and
add
sub
lret
cmc
mov
inc
sub
and
xor
pop
je
sbb
pop
push
int3
in
push
inc
or
mov
xor
add
dec
xchg
or
mov
popa
dec
jno
lods
and
pop
leave
mov
mov
or
loope
call
cmpl
mov
movsb
call
sub
test
testb
add
subb
xchg
inc
rolb
adc
xchg
lahf
mov
or
mov
xchg
add
subl
pusha
roll
imul
ss
jg
sbb
jno
xchg
sbb
fs
add
mov
and
in
and
or
cwtl
or
rcr
es
sbb
mov
bound
cmp
and
xchg
adc
orb
add
aad
push
loope
xor
and
mov
inc
or
jle,pn
adcl
popa
and
lahf
inc
add
call
pop
jbe
mov
lret
add
inc
imul
mov
mov
test
add
adc
add
or
add
or
cmp
sub
or
and
fbld
or
je
mov
ficomps
adcb
imul
rol
cmp
dec
sbbl
pop
sbb
push
push
lret
addb
mov
add
inc
jae
pusha
bound
bound
and
and
push
xchg
sbb
xor
pushl
xchg
or
xchg
cwtl
mov
lods
mov
and
imul
mov
and
in
jo
sub
xlat
mov
mov
sbb
test
icebp
test
xchg
add
test
in
sub
inc
pop
fwait
test
insb
loope
cltd
ja
insl
jmp
push
push
xchg
xchg
ret
ja
rorl
bound
popa
aaa
jns
lds
or
sbb
stos
nop
xorl
bound
ja
sbb
push
adc
adc
std
xchg
clc
push
push
mov
and
sub
push
inc
lods
addl
icebp
adc
aas
and
jnp
push
inc
inc
dec
mov
adc
cmpsl
mov
sbb
call
stos
pop
add
fcompl
addl
adc
or
dec
sbb
out
andl
pop
inc
psrad
add
pop
daa
pop
mov
mov
add
xchg
imul
pop
icebp
lods
dec
and
sbb
aam
or
or
or
ljmp
loope
lea
push
xor
adc
xchg
sub
push
dec
ficoml
or
mov
imul
rcll
shrb
add
xlat
add
sahf
je
dec
cmp
cs
push
xor
stos
xor
inc
arpl
stos
in
cmc
aaa
dec
xchg
xor
in
sbb
jnp
adc
or
cwtl
xor
sbb
out
shr
push
push
sbb
mov
movsb
push
sahf
xor
lods
gs
inc
shll
faddl
cs
sbb
cmc
out
and
xor
jl
add
loop
inc
xchg
out
and
pop
mov
loop
xchg
push
movsl
push
push
mov
sbb
adc
test
fbstp
push
xor
xchg
lods
inc
rolb
clc
jne
cs
mov
sarb
cwtl
arpl
fs
xor
inc
xor
sti
aas
mov
inc
push
dec
push
aas
xchg
or
xor
sub
into
sbb
inc
push
repz
mov
fs
out
cmpsl
sub
mov
dec
loopne
or
xchg
sahf
je
sub
xor
and
insl
pop
jmp
mov
adc
stos
sbbl
push
dec
add
mov
xlat
adcl
fidivrs
mov
mov
pop
je
sbbb
into
inc
xchg
sub
lret
add
fdivl
aas
mov
test
and
add
pop
xor
mov
rclb
mov
xor
jno
xrelease
push
fs
lcall
mov
repnz
mov
add
push
mov
xorb
out
cmpl
ja
lock
xor
push
xlat
xor
jne
sub
inc
orl
rcr
jmp
outsl
int3
or
xchg
popa
or
lahf
adc
je
add
dec
jo
add
ja
nop
xchg
aas
sbb
adc
add
sbb
cwtl
js
push
addr16
or
movsb
add
mov
cmovs
incl
inc
sbb
jbe
xchg
data16
hlt
jmp
imul
push
out
les
sub
jb
add
sub
add
sub
mov
mov
loopne
aad
iret
ret
imul
les
jno
or
mov
dec
mov
repnz
push
mov
lods
call
xchg
enter
inc
pop
mov
push
adc
sbb
mov
add
xchg
test
jae
mov
and
inc
jne
xchg
dec
and
add
test
xlat
int3
js
xchg
and
dec
xor
hlt
mov
jecxz
lods
add
clc
movsb
jmp
inc
pop
sbb
sub
add
sbb
adc
add
sub
xor
cli
add
add
mov
cltd
adc
add
adc
mov
inc
dec
sbb
push
sbb
imul
cmp
mov
and
and
movsb
jns
add
pusha
or
addb
adc
mov
cwtl
cmc
dec
addr16
test
inc
arpl
lods
push
testl
add
mov
sbb
mov
xchg
adc
inc
xchg
popa
jl
pusha
and
adc
orl
sbb
mov
xchg
cmp
js
lret
mov
inc
dec
jp
add
or
pcmpeqd
mov
std
pop
je
mov
nop
jo
addl
sub
sub
sbb
aaa
push
jle
mov
dec
sbb
inc
dec
pusha
nop
inc
pop
outsl
add
jge
add
sbb
pop
mov
sti
push
push
stos
add
push
xchg
dec
jne
test
push
xchg
fldt
push
dec
and
enter
inc
mov
add
inc
cmpsl
es
scas
fbld
sub
lods
sbb
test
pop
loopne
cmpsl
push
xchg
sbbl
push
movsl
push
je
addl
pcmpeqw
jp
mov
push
cwtl
mov
dec
inc
pop
cmp
insb
xchg
gs
adc
aaa
inc
sysenter
je
dec
add
shrb
daa
pushf
hlt
fstp
aaa
out
add
mov
cmp
push
mov
movsb
mov
mov
xchg
push
test
and
lret
mov
scas
mov
or
cmp
dec
cs
pop
fiadds
adc
cwtl
add
sub
ret
mov
popf
out
and
mov
stos
jmp
shll
pop
movsl
jle
je
arpl
add
mov
and
dec
xchg
dec
inc
mov
nop
andb
xchg
mov
jle
cltd
jne
sbb
adc
adc
lds
loopne
push
out
push
leave
lahf
in
adc
sbb
push
push
add
adc
mov
xchg
inc
test
cmp
aaa
inc
jecxz
icebp
mov
and
add
dec
cwtl
add
mov
pop
xchg
push
add
cmp
movsl
lret
movsl
shll
lods
cs
cmp
dec
dec
scas
add
add
test
add
test
sti
addl
mov
push
and
pushl
cmpsl
mov
dec
mov
arpl
sub
adc
jge
xchg
das
mov
sbb
lds
adcb
xchg
xchg
jo
add
mov
mov
xchg
jmp
xor
fstpt
out
ljmp
sbb
inc
or
cwtl
xor
mov
dec
fwait
sbbb
sub
mov
fnstenv
int
pop
jo
out
ss
sbbb
nop
mov
in
sbb
scas
rcrl
sbb
pop
adc
pop
mov
add
sbb
add
dec
enter
lret
imul
icebp
outsb
and
push
pop
jns
and
mov
in
add
lahf
inc
lret
sbb
add
enter
loopne
lret
sbb
add
enter
mov
jmp
dec
mov
xor
cmp
xor
xor
jae
or
sbb
or
out
cltd
scas
pop
cmp
loopne
roll
xchg
inc
push
scas
inc
add
mov
rolb
sbb
lret
push
fldenv
add
xor
push
pusha
sti
or
pop
pop
sbb
incb
rcr
rcr
xor
mov
jne
jmp
mov
adc
xchg
in
xchg
testl
pop
es
aad
mov
lret
lcall
adc
add
inc
add
nop
xor
and
and
bound
imul
dec
ret
sbb
mov
adcb
push
pop
dec
dec
out
adc
enter
dec
sbb
inc
enter
or
out
sti
cwtl
sub
xchg
std
or
fucomip
scas
in
lret
xchg
xchg
mov
push
movsl
add
and
icebp
in
pop
int
push
icebp
dec
inc
popa
add
mov
roll
adc
add
inc
ljmp
inc
xor
ret
push
jne
movsl
bound
imul
xlat
inc
pop
or
adc
add
add
das
mov
rorb
xorb
orl
cmp
pop
shrb
inc
dec
add
add
sub
out
shl
loop
mov
lods
shll
lret
jo
inc
rolb
xor
gs
push
inc
cld
and
fwait
and
pushf
in
int
pusha
mov
add
bound
push
adc
adc
push
int
xchg
pushf
nop
push
pop
adc
and
jne
xorl
jmp
icebp
sbb
add
and
xlat
add
jo
inc
cmpsl
fwait
xchg
inc
jne
out
and
fdivrs
cmp
pop
mov
cmp
popf
pop
call
popa
push
aas
mov
test
stos
pop
cmpsb
jns
and
inc
les
jne
mov
adc
inc
pop
adc
push
pop
icebp
call
add
leave
ret
jl
jecxz
inc
insl
ret
arpl
shlb
add
xor
push
mov
dec
lcall
add
mov
shll
jmp
xor
mov
sub
xor
inc
lahf
xor
add
insl
add
je
jnp
stc
adc
mov
movsb
shlb
adc
test
out
xchg
les
loopne
pop
dec
adc
mov
or
sahf
loop
add
inc
stos
xchg
cmp
aas
out
sbb
xchg
inc
push
pop
cwtl
popl
pop
xlat
add
lods
push
addb
fstpl
push
or
adc
mov
das
cmp
adc
mov
loopne
cmp
rcr
sub
test
aas
jle
hlt
xchg
xor
in
data16
mov
cmp
add
stos
int3
adcb
push
inc
push
mov
nop
add
adc
movsb
sahf
outsb
mov
mov
mov
call
dec
add
add
mov
pusha
ljmp
sub
mov
daa
pop
and
sbb
inc
push
sbb
enter
sbbb
mov
arpl
mov
dec
in
shll
sub
xor
pop
aam
xor
adc
mov
loop
es
add
xor
inc
andb
adc
mov
or
xchg
add
mov
push
inc
sbb
jo
insl
pop
int
lahf
test
ret
and
dec
loope
pop
scas
hlt
adc
mov
test
call
pushf
sub
jle
jmp
sbb
and
faddl
in
mov
jmp
push
mov
sarl
mov
pop
stos
mov
add
push
or
inc
adc
inc
cmpsb
ret
repz
sbb
fstpt
xor
call
push
push
dec
push
pop
jno
enter
jecxz
es
inc
mov
cltd
and
dec
and
add
push
inc
and
jno
es
sahf
cmp
stc
inc
sub
adc
test
imul
add
scas
pop
push
lret
loopne
in
add
or
bound
rcrb
stos
mov
aad
rol
push
scas
roll
inc
jle
xchg
cmp
add
mov
arpl
out
add
bound
mov
pop
cmp
xchg
fstps
sub
dec
ret
cmp
negl
add
mov
jnp
add
decl
and
cmp
shr
xchg
cwtl
mov
cmpb
in
ds
cli
pushf
inc
add
jo
push
add
ljmp
adc
mov
pop
mov
inc
movsb
sbb
int3
dec
rcrb
pop
add
test
arpl
xchg
cmp
roll
xor
or
or
insl
mov
test
or
mov
add
dec
mov
xchg
or
jae
je
mov
inc
loopne
adc
and
xchg
dec
cmpsb
jne
xor
add
shlb
add
scas
add
popf
pop
adc
nop
adc
push
add
aam
lods
std
mov
push
es
clc
mov
mov
pop
test
push
pop
adc
dec
xchg
lahf
lret
pop
add
imul
scas
push
xlat
inc
adc
inc
and
xchg
orb
jle
cmp
aaa
jae
mov
jns
add
adc
push
pusha
cmp
lds
pop
fadds
pop
aam
xor
mov
loopne
sbb
xor
aam
and
jnp
cmp
xchg
cli
sbb
inc
and
sti
stc
sbb
and
repnz
push
adc
mov
add
and
outsl
xchg
sub
inc
push
je
loopne
enter
inc
add
xchg
or
adc
jge
and
punpcklbw
adc
jo
and
lds
js
and
das
inc
fdivrs
js
or
addb
mov
mov
inc
push
push
ret
pop
call
add
jo
scas
dec
shlb
xchg
and
and
mov
inc
cmp
cmpsb
push
shll
call
pusha
nop
mov
test
popa
mov
add
sbb
add
popf
leave
pop
push
push
inc
cld
lcall
mov
aam
decb
ror
adc
add
cmp
insb
inc
js
dec
pusha
add
add
adc
ret
dec
add
icebp
icebp
mov
jg
push
mov
xor
dec
pop
ret
ret
ret
js
inc
unpckhps
dec
test
add
cmp
inc
pop
lea
add
test
addr16
dec
xchg
or
add
incl
in
nop
dec
cwtl
add
out
fisttps
rolb
adc
je
inc
shlb
or
xchg
mov
jg
add
dec
pop
cmp
and
mov
push
and
xchg
roll
das
adc
les
test
cs
sbb
test
push
icebp
jb
mov
lret
adc
loope
adc
push
movsl
pusha
popa
cwtl
in
cmp
mov
popf
ljmp
inc
add
mov
or
jne
xchg
sub
dec
adc
add
test
je
add
sub
push
push
jns
scas
xor
inc
pop
imul
call
inc
repz
pcmpeqw
outsb
dec
jne
insl
lods
ret
enter
aad
cmpsb
xor
or
mov
das
lret
mov
jl
clc
stos
or
mov
pop
into
xchg
loopne
inc
sbb
mov
adc
dec
adc
pop
pushf
and
add
call
inc
pop
loop
add
mov
sub
cmp
inc
and
adc
out
inc
pop
aas
iret
in
hlt
add
sub
dec
pop
or
rol
push
lret
add
adc
popa
pop
add
pusha
out
aaa
add
pop
repnz
and
inc
inc
repnz
dec
add
mov
inc
sar
jne
mov
or
pop
add
pusha
push
xchg
jecxz
call
inc
pop
outsb
lock
sub
xchg
and
sub
sbb
subb
jmp
aam
sbb
xor
inc
push
pop
jbe
andl
dec
loop
sbb
or
push
loop
mov
fwait
cwtl
sbb
pop
xor
sti
cmp
orb
in
push
push
mov
repnz
loopne
dec
dec
adc
mov
ret
adc
mov
imul
popa
or
loop
movsl
mov
mov
adc
shr
call
pop
int
das
or
jno
jo
xchg
mov
repz
adc
mov
fistl
inc
push
dec
lret
daa
popf
push
push
add
sub
jns
inc
push
stos
sub
sbb
imul
adc
insl
push
enter
sub
dec
sbb
xlat
stos
push
addb
and
pop
jnp
sub
popa
jne
or
push
dec
nop
cs
rcrb
dec
mov
mov
xchg
inc
cltd
sbb
or
dec
dec
in
movsl
fwait
add
test
xchg
les
dec
cmp
ret
add
cld
pop
mov
loopne
scas
inc
push
add
in
popa
xchg
popl
sbb
ja
test
jg
sub
pop
xorb
xor
xor
ljmp
cs
cmp
bound
rolb
add
push
daa
or
arpl
popl
test
nop
jmp
jo
mov
rol
arpl
sub
jne
sbb
dec
es
push
jg
gs
cwtl
gs
mov
cmpsb
ret
add
es
dec
xor
bound
nop
cmpsl
daa
or
xchg
xchg
shl
xor
movsl
push
pusha
adc
iret
lcall
dec
xchg
add
add
sbb
xchg
lock
sbb
test
movsl
inc
imul
dec
jp
lea
or
xchg
push
push
add
dec
fsubl
xor
mov
add
shlb
jns
and
jecxz
rclb
in
sub
add
xor
sub
sub
cmp
xor
lahf
enter
xchg
str
test
lret
push
test
enter
adc
xor
adc
cmp
mov
push
in
sbb
aaa
push
loope
loope
dec
out
data16
xor
or
cld
push
int3
xchg
lret
adc
aam
and
adc
add
daa
lock
sub
cld
popf
xor
dec
add
shll
inc
jns
mov
cmp
inc
bound
rclb
adc
ret
addb
shrb
push
cmp
lret
aam
cltd
bound
sahf
test
mov
movsl
sbb
inc
mov
add
lock
add
mov
sub
fsts
add
jno
push
sbb
lret
and
add
mov
mov
xor
shlb
push
add
xor
je
add
mov
outsl
push
mov
add
mov
dec
andl
cmpsl
dec
cmp
roll
and
arpl
divl
sub
cmp
push
cltd
jmp
pushf
pusha
or
daa
outsb
add
adc
aaa
jge
pop
mov
sub
dec
pop
jmp
insb
stos
sub
or
push
arpl
and
add
sub
push
lcall
adc
adc
sbb
mov
loop
dec
test
inc
out
sbb
fnstcw
cld
add
adc
xlat
nop
or
add
icebp
pop
pop
les
fisubrl
loope
xor
xor
push
popf
sbb
pop
inc
loopne
cmpsl
push
and
and
mov
lods
xchg
shlb
mov
adc
sub
push
lea
adc
mov
inc
mov
or
inc
lret
mov
jbe
inc
or
stos
cmc
mov
and
adc
aas
pop
xorb
fists
fimuls
sbb
add
sbb
iret
mov
xor
adc
in
mov
push
sbb
test
or
lds
add
sbb
adc
add
cs
push
jns
pusha
sub
sbb
and
cmp
jmp
orl
cmp
jo
pusha
mov
lds
ja
les
pop
mov
or
dec
inc
jo
cmp
fsts
sbbl
jmp
cld
cmp
std
mov
jg
and
sbb
mov
or
inc
int
sub
adc
inc
and
jp
out
pop
jo
icebp
icebp
dec
sbbl
and
loopne
adc
and
push
mov
add
dec
xor
pop
xchg
mov
sub
add
call
push
and
add
inc
outsl
push
push
cs
inc
ss
into
dec
pop
pop
movsl
adc
add
xchg
popl
adcl
cmpsl
inc
add
add
inc
lahf
lret
nop
decb
sub
mov
jl
jle
push
xor
es
sub
lahf
sub
mov
lods
sarb
stos
pop
pop
rcrb
xchg
lds
lock
adc
mov
bound
hlt
push
or
jecxz
es
sbb
push
repnz
bound
xor
int3
jmp
rclb
jmp
push
push
mov
out
inc
dec
inc
cltd
inc
sub
sbb
inc
test
in
sub
push
add
nop
lds
js
ret
jp
adc
cmp
push
int3
and
hlt
popa
mov
sub
cwtl
jmp
add
xchg
sub
ret
pop
xor
inc
das
imul
add
sbb
pop
xor
mov
cmp
or
sub
loop
les
imul
mov
xchg
loop
sbb
dec
pop
add
jns
fildll
jle
and
jg
nop
pusha
and
xor
aad
add
cmp
sarl
mov
js
clc
pop
sub
inc
mov
dec
rcr
sub
and
iret
js
dec
jno
ror
sbb
int3
subb
add
repnz
mov
ret
sub
dec
dec
pop
add
and
adc
and
lds
inc
add
inc
jno
adc
mov
stc
push
mov
or
inc
add
cmpsb
sbb
inc
push
pusha
add
jle
xchg
sub
inc
mov
les
pushf
pop
or
movsb
xor
in
cmp
int
sub
sbb
rclb
adc
movsl
addb
aam
jp
mov
mov
lods
xor
inc
adc
xchg
xor
arpl
nop
jmp
inc
inc
or
imul
xor
sub
xor
adc
xor
arpl
push
mov
pop
inc
push
daa
test
adc
scas
das
or
mov
sbbb
cmp
pop
adc
std
mov
loop
mov
xchg
js
fistl
js
dec
loop
pop
adc
shlb
mov
jo
cmp
std
stos
mov
pusha
cmp
inc
adc
push
shrb
pop
mov
clc
cwtl
sbb
jno
add
cmp
add
xchg
sub
jne
mov
pop
fldl
ljmp
or
call
pop
movsb
xor
enter
stos
dec
nop
jo
rcrb
xchg
shll
xchg
push
sub
out
sbb
inc
aas
iret
adc
addb
in
sbb
lret
cwtl
xchg
push
add
push
movsb
fwait
jne
cs
pop
scas
xchg
jno
dec
add
adc
pop
lahf
mov
jo
test
imul
xlat
je
addl
and
fwait
sbb
in
sbb
aaa
or
jmp
pop
ret
add
int
adc
clc
mov
rcll
stc
and
arpl
cwtl
push
dec
push
and
out
and
mov
inc
mov
jecxz
daa
xchg
mov
or
mov
addb
popa
sub
xor
adc
mov
loope
repnz
mov
inc
push
test
ljmp
insl
xchg
jo
imul
stos
cmp
stc
call
outsl
lret
gs
lock
incb
gs
sub
imul
push
loopne
imul
adc
mov
add
adc
imul
add
adc
add
ljmp
stos
sub
inc
lahf
pop
js
daa
jmp
push
cmp
or
cmp
adc
mov
orl
call
addl
pop
adc
cmpsb
cmp
shrb
or
cmpsl
addl
sub
mov
popf
sub
lods
ja
dec
or
adc
movsl
add
dec
cmp
or
in
sub
pop
xor
movb
inc
cmp
xchg
add
pushf
int
loopne
leave
fdivrl
stos
int3
add
mov
sbb
sbb
addl
xor
loop
pop
and
dec
mov
outsl
roll
leave
stc
jno
or
dec
subl
fiaddl
inc
add
dec
incb
sahf
test
sbb
add
repnz
add
inc
add
mov
aad
cld
es
in
sbb
sbb
cmpl
inc
xchg
adc
loopne
mov
cmp
pop
or
and
aas
lcall
outsl
adc
mov
push
enter
and
leave
repz
push
pop
mov
mov
mov
push
mov
lds
jmp
or
inc
mov
pop
xchg
lss
es
scas
addr16
and
popf
ret
adc
es
jno
sbb
sbb
dec
mov
gs
shlb
inc
cs
sbb
mov
push
mov
mov
xchg
mov
pop
sarl
nop
or
out
shlb
mov
add
add
sub
movsl
pop
pop
adc
and
or
insl
cmpsb
push
mov
call
insl
adc
jo
sbb
pop
jno
call
lahf
cmpsb
dec
test
push
int3
pop
rolb
cmp
xchg
xchg
ss
adc
mov
je
mov
lods
adc
iret
inc
cmp
lea
jp,pn
jle
and
sub
pop
xor
inc
out
add
hlt
lahf
in
and
jae
jle
inc
arpl
out
out
push
int
add
push
push
mov
inc
add
aas
add
test
push
mov
daa
loopne
xchg
data16
out
add
subb
pop
add
fimull
adcl
jo
jg
daa
or
jl
jno
jae
dec
xor
cmpsb
nop
push
dec
and
cmp
push
mov
imul
cwtl
int3
mov
fisttpl
test
xlat
sub
dec
dec
or
push
and
test
nop
psubusw
jbe
inc
mov
loopne
mov
xchg
xor
adcb
or
dec
andl
add
lock
imul
push
dec
roll
aas
mov
inc
mov
adc
dec
test
test
movsl
test
dec
add
mov
add
adc
jmp
push
add
jmp
sbb
lock
cmp
mov
popa
inc
inc
add
imul
sub
dec
lock
ret
notl
add
xchg
xor
xchg
aad
xchg
mov
inc
mov
adc
add
in
adc
adc
inc
lds
add
ds
lds
adc
xor
adc
enter
xchg
cmp
xchg
div
sbb
dec
das
test
mov
es
jno
inc
mov
mov
push
push
mov
minps
and
leave
repz
dec
mov
inc
fadds
dec
inc
xchg
sub
xchg
faddp
stc
mov
lcall
fsubs
int
scas
shll
xchg
mov
xlat
add
xchg
lret
cld
js
mov
jo
les
jmp
push
jo
push
lods
push
cmp
add
insb
xchg
mov
fabs
add
xchg
sti
repz
ss
mov
fiaddl
add
push
add
test
push
sub
movaps
insl
adc
add
popa
int3
and
add
ja
mov
ficoms
and
or
cmpsl
xchg
jb
pushw
sbb
bound
jecxz
mov
daa
and
lods
add
or
inc
push
rclb
and
jecxz
rcrl
test
jge
fnstcw
dec
arpl
push
pop
and
xor
popa
xchg
xor
enter
negl
clc
add
ljmp
jb
pop
popa
in
adc
inc
and
nop
xchg
aaa
ja
int
dec
jo
xchg
sahf
pop
cmpb
mov
push
or
push
push
dec
push
and
gs
fstps
push
rolb
pop
dec
icebp
dec
and
adc
test
aad
mov
inc
mov
lahf
jge
orl
insl
inc
push
outsl
pop
jnp
jns
fdivrl
dec
inc
imul
jg
ror
add
inc
lods
sar
xchg
pop
and
stos
sub
add
xor
sub
xor
sbb
sub
addl
les
jmp
push
lods
pushf
mov
mov
mov
orb
test
pop
ljmp
sbb
xchg
dec
inc
and
pop
adc
adc
dec
popa
and
jno
mov
push
out
cmp
mov
cmpsl
inc
ja
aad
jo
mov
add
cmp
test
inc
aaa
es
aad
orb
and
adc
mov
push
adc
xchg
call
test
adc
mov
aam
mov
mov
je
clc
sbb
dec
aam
xor
push
ljmp
popa
xchg
xor
arpl
sbb
sub
sbb
fadds
das
jno
add
cmp
and
mov
dec
add
in
cmp
das
xor
ljmp
ljmp
add
frstor
or
xchg
ficoms
hlt
inc
enter
add
xchg
cmp
sub
inc
in
enter
roll
arpl
xchg
pop
adc
rclb
and
and
arpl
int3
mov
ret
popa
pop
mov
addb
cmp
add
aaa
call
mov
and
je
xor
cmc
loope
xor
ret
daa
xchg
lret
xchg
and
sub
test
sysenter
xchg
adc
fnstenv
jmp
icebp
jmp
roll
adc
ja
mov
inc
cmp
sbb
mov
xor
pop
adc
cmp
pop
pop
test
adc
aas
push
push
pushf
inc
pop
cmp
or
xchg
pusha
mov
push
shrb
call
loope
or
iret
ja
cmp
add
popl
push
iret
mov
test
inc
or
mov
push
ljmp
and
or
sub
icebp
inc
push
xchg
adc
lea
and
and
rcll
stc
imul
rcrb
add
es
sbb
jae
fst
and
adc
test
sbb
test
fwait
adcb
or
out
add
mov
add
dec
jmp
orl
adc
iret
or
sbb
push
mov
pop
dec
mov
add
sub
lods
or
enter
jbe
add
and
or
push
fstl
orb
jg
shlb
inc
mov
cmp
cs
loopne
adc
add
or
mov
test
dec
arpl
roll
adc
popf
pop
add
es
mov
xchg
jge
add
mov
inc
test
inc
dec
pop
mov
lcall
jecxz
out
adc
dec
and
mov
leave
aaa
dec
dec
push
dec
test
rol
mov
inc
pusha
mov
cmpsb
movsl
adc
lea
sbb
daa
jno
pop
int3
cmpsl
add
push
xchg
pop
jo
add
cmpsl
lods
pusha
leave
roll
xchg
cs
xor
aad
mov
loop
cmp
jle
icebp
add
jne
ljmp
jmp
xchg
push
bound
add
jp
sub
add
xor
or
or
out
xor
insb
adc
inc
xchg
lahf
adcb
and
and
fwait
mov
iret
mov
enter
push
int
jo
mov
xchg
call
scas
ljmp
mov
adc
in
cmc
adc
and
push
pop
sarb
cmp
mov
xchg
dec
adc
mov
aad
inc
lods
sbb
lea
and
mov
test
add
mov
lds
add
pop
adc
jp
lods
cmpsl
inc
pusha
daa
sbb
dec
mov
and
lds
dec
mov
clc
cmpsb
nop
and
mov
or
push
mov
xchg
jmp
pushf
or
outsb
mov
dec
andl
mov
cwtl
pop
cwtl
addb
adc
mov
ljmp
imul
mov
dec
dec
and
stos
in
xor
inc
add
movsl
adc
mov
nop
mov
pusha
subl
bound
repnz
pusha
aam
jg
sub
sub
mov
and
jge
std
pop
xchg
bound
and
and
add
pop
adc
jnp
cmc
aaa
arpl
add
test
xchg
mov
and
and
aam
pop
jmp
mov
stos
add
test
mov
add
add
mov
stc
rorb
rol
adc
aad
push
jne
in
fiaddl
add
xchg
mov
mov
push
je
push
sub
sub
or
sub
addl
sub
dec
or
add
mov
ret
in
pop
mov
out
cmpsl
gs
add
icebp
icebp
cltd
clc
orb
and
test
dec
mov
sub
or
bound
sub
testb
sahf
into
js
fbstp
add
daa
loope
inc
push
inc
lock
cmp
mov
sbbb
cmp
nop
mov
loope
fldt
sub
push
mov
int
mov
shlb
cmpb
fdivrs
iret
mov
dec
out
fimuls
sub
stc
andl
sbb
cmp
mov
push
push
outsl
pop
sbb
jg
in
in
sub
cmpsb
or
fld1
lcall
mov
push
add
sti
xchg
or
lods
push
add
xor
jg
fcoml
orl
dec
sbb
test
mov
mov
pop
push
pushf
inc
mov
cs
pop
js
inc
add
dec
add
add
and
adc
add
push
add
int
ss
xor
in
test
sub
dec
out
xchg
sbb
stos
jno
pop
arpl
xor
pop
mov
and
inc
popl
shr
jge
push
add
xor
bound
cmp
call
lcall
in
xor
movsl
enter
dec
popa
inc
adcl
out
dec
in
xchg
inc
mov
inc
mov
scas
stos
or
push
scas
sbb
dec
fnstsw
mov
dec
mov
sbb
adc
pop
xchg
cmpsb
stc
push
imul
leave
adc
scas
dec
mov
outsl
xor
std
test
enter
and
push
cmp
adc
aas
pop
mov
mov
sbb
fptan
inc
mov
push
insl
fistl
loop
pop
js
sarb
jl
insb
add
inc
movsl
gs
jno
mov
sub
adc
jno
inc
dec
sti
cmp
dec
mov
jnp
outsl
xor
pop
sbb
inc
test
or
insl
add
jge
dec
mov
xor
mov
inc
pop
lods
enter
scas
dec
je
popl
out
ret
jmp
decl
xchg
or
push
or
xorl
inc
shll
mov
cmp
and
pop
dec
dec
nop
xchg
mov
pop
add
mov
xabort
adc
repnz
fiaddl
jo
lret
dec
or
pop
pop
adc
pop
mov
sbb
test
mov
add
add
adc
loope
add
inc
inc
xlat
bound
fnstcw
pop
xchg
rorl
jle
or
js
movsb
fwait
push
inc
push
and
in
stc
sbb
jae
inc
mov
mov
es
and
xchg
mov
and
inc
mov
mov
pop
xor
ret
jle
or
lds
and
or
fwait
lar
insl
sbb
adc
xchg
push
rclb
jno
int
inc
loopne
jno
iret
or
aas
leave
mov
repnz
or
ror
jnp
push
cld
sbb
nop
ds
adc
sbb
cmpsb
push
jge
cltd
movsl
stos
or
scas
ss
loope
lcall
push
adc
or
or
xchg
sub
insb
cmp
sub
xchg
jmp
or
add
adc
pop
sub
or
orl
add
dec
scas
sbb
les
cmpsl
mov
sbb
inc
pop
mov
add
cmpsl
test
outsl
inc
fwait
andb
inc
cmp
popa
test
and
adc
cmovbe
mov
ss
xchg
xor
lahf
pop
pop
xor
push
adc
loope
rclb
inc
and
iret
xchg
add
stc
out
xchg
or
pop
mov
rclb
xor
adc
adc
push
adc
pop
jo
imul
popa
sub
add
loope
sub
xchg
jno
or
mov
sarb
push
cwtl
push
icebp
xchg
imul
cmpsl
insl
and
push
xor
pop
addw
adc
and
or
das
sahf
aaa
cmp
les
int
ljmp
sub
mov
or
aas
dec
or
push
enter
cmp
inc
pop
shlb
sbb
subl
lcall
stos
push
sbb
mov
sbb
pop
cmp
jbe
stos
cld
fsubl
xor
push
mov
xlat
cltd
and
xchg
test
xchg
dec
sti
addr16
sub
xor
addb
lcall
inc
and
mov
push
mov
mov
adc
sbb
es
push
pop
cli
data16
cmp
clc
sbb
rclb
leave
jne
aad
cmp
and
jl
sub
mov
or
stos
icebp
mov
mov
push
adc
sbb
pop
adc
xchg
sbb
and
jns
adc
mov
adc
sbb
xor
mov
cmp
and
push
add
subb
and
and
cld
in
mov
cmp
cmp
add
pop
aas
ret
push
ljmp
add
jno
or
pop
ret
add
bound
inc
pop
inc
fisubs
mov
pop
push
fwait
ss
pop
shrb
xor
cmpsl
adc
movsl
xor
add
adc
adc
mov
push
sub
adc
popf
sub
adc
test
mov
inc
out
pushf
adc
lea
or
push
add
jle
and
sti
or
mov
inc
cmpl
dec
adc
sub
fists
andb
hlt
stos
add
lods
add
xchg
mov
test
push
repnz
mov
popa
repnz
inc
add
imul
stos
decb
leave
pop
push
push
fcoml
sbb
jmp
cmp
cmpsb
mov
or
or
add
lea
pusha
jg
or
mov
add
addb
adc
adc
pop
das
and
or
inc
adcl
or
cld
jg
adc
leavew
std
jno
jo
orl
push
mov
dec
jae
cltd
sub
and
jne
or
xchg
push
mov
xor
insl
shrb
sbb
cltd
pop
or
or
adc
mov
push
mov
mov
xchg
pop
arpl
outsl
ljmp
dec
repz
outsb
and
jl
shlb
nop
add
mov
icebp
jns
xor
inc
pop
cmpsl
jg
arpl
inc
daa
outsb
stc
subl
push
sbb
mov
fcmovnbe
jmp
sbb
pop
pusha
roll
rcl
push
pop
test
insl
aas
add
aas
and
mov
mov
dec
ljmp
xlat
icebp
sar
pop
movsl
jno
pop
adc
and
ret
inc
adc
js
xor
jne
pop
test
nop
push
adc
sbbb
in
dec
xchg
ss
cmp
add
ret
pop
and
xor
and
fstl
jne
repnz
xchg
out
mov
movsb
push
adc
dec
mov
or
mov
bound
insb
mov
add
adc
jns
imul
and
push
sahf
pushf
sbb
xchg
inc
adcl
inc
inc
outsl
mov
fs
xchg
add
data16
xchg
test
sbb
jge
xchg
mov
fcmovbe
cmp
loope
cmp
insb
inc
daa
push
ja
shrl
adc
inc
je
or
or
add
shlb
push
add
add
add
mov
inc
loope
cwtl
and
test
cltd
scas
pop
xchg
mov
cmp
orb
mov
sti
sti
push
fnsave
icebp
push
cmpsl
mov
pop
incl
sub
adc
sub
std
push
xchg
and
adc
rcll
mov
outsl
xchg
rolb
add
push
test
cmp
push
adcb
sbb
or
js
lods
mov
rol
add
sbbb
jge
fs
cmpl
ficomps
or
sahf
rep
sbb
enter
nop
imul
add
mov
inc
pop
adc
out
stos
xor
mov
push
sbb
sub
dec
add
sub
pusha
call
sbb
sub
sbb
scas
xor
enter
sbb
push
jg
mov
lea
pop
sahf
adc
and
pusha
jp
push
mov
outsl
stos
lcall
mov
xor
dec
add
xor
cmp
addb
je
stos
xchg
inc
xor
xor
shrb
dec
xor
xchg
sbb
imul
sbb
cmc
dec
jmp
cmpsl
pushl
popa
jbe
and
out
xor
idivl
aad
lea
mov
or
je
jne
call
xlat
bound
and
shll
jno
aas
roll
or
es
adc
cmpsb
mov
in
stos
jg
aas
les
movl
jne
adc
cmp
xor
add
es
sti
jl
clc
ja
out
push
lcall
mov
insb
xchg
push
pop
leave
sbb
sbb
mov
adc
aam
pusha
mov
pop
xchg
jbe
movntq
out
push
sbb
dec
inc
add
gs
cmp
pop
sbb
std
loope
mov
addl
fldl
jo
lahf
shrl
andb
add
lcall
pop
adc
add
adc
cs
rcl
jmp
mov
or
popa
xchg
mov
lds
in
sbb
xchg
add
imul
test
sub
iret
push
xor
xchg
adc
ret
aas
push
scas
shlb
sub
xchg
lds
sahf
xchg
fnstenv
xchg
mov
inc
add
inc
jle
mov
xor
xchg
pop
in
push
dec
mov
adc
cmpsl
pop
xchg
xchg
out
mov
mov
imul
jecxz
orl
out
mov
add
popf
int3
mov
cli
sub
push
cli
push
xor
inc
add
idiv
jg
and
in
bound
and
mov
gs
fadd
cltd
lds
add
lret
push
stos
adc
je
or
sbb
das
push
call
inc
mov
inc
inc
push
sub
pop
or
imul
cs
sub
popa
jnp
daa
arpl
or
aas
rclb
or
and
dec
mov
pusha
nop
dec
ljmp
adc
or
sub
push
mov
out
arpl
jne
pop
mov
mov
and
xorb
insl
pop
fsts
addb
cmp
fwait
add
xrelease
mov
mov
pop
out
mov
push
int3
push
and
insb
les
das
lock
fwait
sbb
leave
mov
pop
jnp
xor
and
or
mov
adc
lea
sub
add
mov
sbb
push
inc
pop
scas
mov
xchg
xor
cld
iret
push
push
sbb
mov
jae
out
push
push
je
push
fcmovnbe
add
mov
loope
and
ljmp
sbb
inc
and
clc
xchg
add
mov
out
bound
imulb
mov
mov
sar
mov
mov
mov
and
ja
cld
sub
pushf
add
add
jg
dec
mov
add
pop
test
mov
lcall
cmp
lea
push
shrl
push
into
sub
cmp
mov
pop
rorl
fwait
inc
mov
or
sarl
test
lods
cmpsl
push
or
adc
repnz
and
sti
out
es
sub
jns
addb
add
mov
mov
test
sbb
add
addr16
and
push
sbb
adc
mov
and
inc
cwtl
test
call
cmpsl
jo
xchg
xchg
add
sub
cwtl
add
mov
add
and
push
mov
mov
jl
loopne
fnstcw
and
mov
repz
into
fnsave
mov
nop
add
enter
lds
jmp
xor
dec
sub
sub
push
or
push
dec
cmpsl
sbb
add
mov
lea
fstps
adc
dec
imul
push
add
mov
movsl
ljmp
lea
orb
repnz
sub
shlb
dec
pushf
xchg
stos
test
pusha
loopne
jl
into
je
dec
adc
xor
jno
ja
mov
add
pop
out
push
lcall
pop
xor
push
xor
aas
popf
mov
mov
jmp
push
ret
insl
imul
sub
or
add
aam
dec
sbbb
add
and
xor
iret
add
inc
dec
or
ror
pop
clc
or
push
stos
sarl
push
shrb
cmp
aaa
add
add
sub
shrb
imul
imul
mov
add
loop
push
xchg
push
mov
fcom
test
or
popa
jne
pop
movl
sub
mov
cmpl
test
jmp
inc
filds
inc
stos
inc
dec
xor
test
movsb
jae
arpl
adc
sub
pop
push
popa
xor
inc
addl
add
rolb
leave
xchg
popf
and
ljmp
repz
ja
pusha
jge
data16
cld
dec
or
in
sbb
imul
imul
mov
aad
and
test
adc
and
fnstenv
inc
adc
or
arpl
xchg
dec
js
sbb
pop
push
add
subb
jg
shll
xchg
dec
ret
subl
je
sbb
aas
fs
inc
add
inc
fmull
dec
mov
shlb
insb
xor
nop
dec
jae
inc
and
push
leave
add
cld
mov
or
jae
push
push
test
shll
sub
imul
add
sbb
cbtw
int
das
lds
xlat
cmp
cmp
or
cmc
push
mov
mov
std
sbb
mov
in
sbb
dec
or
test
mov
sti
mov
push
mov
dec
inc
repnz
pop
push
lds
inc
add
and
loopne
mov
movsb
inc
mov
notl
lods
or
data16
or
bound
inc
xor
call
xor
sbb
xor
test
das
arpl
mov
sub
mov
lods
mov
dec
add
enter
adc
cmpsb
xchg
jecxz
sbb
scas
and
inc
in
mov
sbb
add
rolb
mov
xchg
pop
rclb
sub
mov
pop
pop
adc
jno
dec
dec
pop
imul
and
xchg
icebp
or
inc
xor
leave
pushw
movsl
pop
and
or
scas
or
jle
add
leave
test
cmp
adc
shrl
cmp
xchg
cmp
pop
aad
add
out
cmpsb
push
jecxz
nop
inc
xchg
test
add
jle
pop
jmp
push
jae
xorl
push
fadds
push
enter
sub
mov
imul
or
inc
imul
pusha
push
fwait
cmpsl
rolb
push
xor
insb
sahf
or
cmp
adcl
xor
mov
push
enter
aam
or
push
sbb
sbb
mov
decl
sbb
pop
xor
orl
rolb
ret
popa
int
xor
push
popa
push
push
push
cmp
int
test
add
aaa
addr16
jnp
pop
call
imul
or
data16
mov
sub
adc
fists
sbb
pusha
ret
xor
mov
test
add
popl
fistpl
push
shlb
push
add
xchg
imul
push
mov
cmp
mov
sub
test
daa
jge
sbb
adc
xlat
add
test
add
mov
and
imul
mov
jb
inc
sub
leavew
test
adc
jmp
and
rcrl
cmp
loopne
inc
sbb
xrelease
inc
add
loope
cmpsl
cwtl
lock
adc
pop
adc
lcall
pop
mov
out
add
sub
adc
repz
imull
repz
out
or
ret
push
xor
jp
sbb
push
add
cmp
dec
dec
jno
and
pop
cmp
pusha
call
xchg
mov
pop
cmp
sbb
sub
leave
cs
inc
test
and
cmc
push
xor
ret
jl
pop
adc
or
push
lcall
test
test
cmc
inc
dec
pusha
insl
daa
das
sarl
push
cmc
movsl
test
adc
lods
pop
andl
lea
repnz
add
aad
adc
sub
xor
adc
pop
les
xchg
push
push
lea
aam
inc
sarl
xor
xchg
xchg
les
incl
loopne
push
out
test
xor
adc
cmpsl
and
aam
jo
rcrl
aas
in
lcall
imul
cmp
add
dec
push
pop
bound
insb
and
push
mov
adc
xchg
sbb
xchg
sbb
dec
jae
inc
mov
lahf
xchg
mov
daa
pop
sub
push
rorb
int
push
inc
mov
cmc
fwait
in
cmp
mov
or
push
dec
aam
daa
shrl
inc
pop
pop
fldenv
test
add
push
imul
sbb
data16
dec
loope
and
jmp
dec
or
nop
jnp
js
and
jge
and
xchg
cwtl
inc
dec
push
ret
push
mov
or
and
xchg
adc
daa
xor
and
inc
je
andl
mov
imul
xchg
rolb
add
or
add
lods
ror
repz
add
arpl
xchg
inc
aad
push
jae
in
push
outsb
fsubs
nop
inc
scas
pop
shll
sbb
mov
push
jge
aad
cmp
cwtl
mov
push
cwtl
or
dec
dec
pop
shll
es
pusha
test
xchg
mov
pop
es
xor
mov
iret
loop
mov
dec
inc
xchg
xor
mov
xchg
in
mov
enter
cmp
pop
pop
xor
daa
cmpsl
mov
xor
cmp
sub
sbb
mov
loop
jo
ss
cld
fldl
jb
cmp
fsubs
inc
or
aaa
push
xchg
and
or
adcb
dec
out
mov
je
pusha
add
mov
fwait
jg
xchg
out
and
jno
gs
inc
inc
lea
push
dec
aaa
mov
cmp
sarb
adc
or
outsb
push
in
enter
mov
cmp
jne
repz
loope
sbb
xor
es
pusha
inc
push
jl
push
mov
xlat
or
mov
test
sahf
sti
dec
movsb
xchg
add
jae
adc
inc
lret
or
xchg
sub
andl
ss
in
sub
sbb
test
xor
aas
lret
addb
gs
inc
nop
dec
add
push
icebp
arpl
xchg
test
or
shrb
adc
fxsave
push
add
push
add
push
stos
addr16
imul
or
dec
imull
mov
ljmp
mov
es
call
push
enter
xor
ja
and
mov
adc
lods
cmpsl
jae
push
xor
dec
shlb
cmp
xor
cmp
jno
xor
push
jne
shll
adc
push
xchg
mov
jb
xchg
or
push
scas
mov
subl
pop
orb
loop
lret
inc
sbb
cmp
lea
or
negl
and
pop
adc
xchg
test
cmpsb
fs
mov
loopne
cltd
daa
add
mov
test
mov
shr
stos
push
xor
aas
cmp
push
add
movsb
pop
inc
add
jns
and
or
lahf
sbb
xchg
mov
leave
add
xchg
cmp
add
gs
sub
add
adc
sbb
movl
mov
pop
mov
push
sbb
inc
mov
add
cmc
jecxz
sbb
add
xchg
ds
jne
dec
inc
mov
test
test
mov
shlb
xor
mov
xor
mov
orb
cmp
sub
mov
mov
push
stos
fstl
sub
xchg
sub
lcall
jmp
shl
or
scas
mov
xchg
mov
mov
scas
push
and
imul
push
jno
mov
sti
add
push
das
mov
int3
sub
mov
pusha
mov
cltd
leave
mov
lock
xor
mov
push
movsl
xchg
aaa
call
mov
mov
leave
les
adcl
mov
dec
sbbl
pop
pusha
fbld
imul
outsb
test
pop
adc
adc
sti
add
pop
or
sub
xor
aam
add
inc
sub
enter
pop
dec
jae
call
add
clc
cmpb
test
lret
add
sub
clc
jns
add
fdivs
fildll
add
sarb
imul
dec
jne
or
mov
aad
cmp
adc
pop
inc
dec
push
loope
jmp
pushf
aad
test
adc
in
jl
inc
xchg
aaa
jmp
xlat
inc
aaa
sbb
mov
mov
jns
mov
push
dec
inc
push
xor
cmp
shl
pop
cmpsb
sbb
jle
scas
cmpsb
xchg
cmp
pusha
jns
or
and
dec
jmp
pop
cmp
pop
aad
jge
push
loopne
lea
sub
xchg
addr16
sbb
imul
outsb
adc
test
notb
push
fnsave
add
adc
dec
scas
aas
sub
and
shll
popa
test
shll
gs
stc
je
dec
jo
adc
dec
mov
or
lods
xor
loop
loope
mov
adc
push
cmp
orb
xchg
les
addb
leave
cmc
mov
xor
and
pop
aaa
ss
mov
test
mov
movsb
nop
and
add
fs
aam
inc
mov
addb
or
into
fucompp
les
xchg
sub
loopne
out
sbb
jb
gs
dec
out
leave
dec
adc
stc
mov
sti
mov
out
dec
sub
out
or
movl
jb
in
out
cmp
ja
arpl
jno
cmp
pop
es
adc
and
ljmp
icebp
lods
push
inc
mov
cli
jne
dec
shll
cld
inc
jmp
or
xchg
pop
sub
mov
add
xchg
mov
push
cmp
xchg
inc
jmp
add
les
loopne
clc
jne
mov
or
sub
movsb
jno
stos
addb
mov
jns
mov
outsl
mov
and
mov
dec
pop
sub
lods
mov
mov
or
dec
arpl
pop
xor
push
mov
cs
test
aaa
gs
dec
ss
cmp
inc
mov
in
xchg
rol
outsl
push
dec
popf
orb
inc
mov
lret
ret
xchg
scas
psrld
dec
leave
xchg
ss
cmp
xchg
andb
outsb
add
fwait
outsb
loop
dec
cmc
inc
scas
cmp
cwtl
popf
sti
or
int
movsb
sbb
dec
inc
lahf
mov
cmp
jnp
lret
jno
imull
add
inc
jne
adc
adc
xchg
or
in
loop
shll
cmc
pop
aad
sub
xlat
repz
inc
sahf
xchg
push
ret
adc
cwtl
jl
mov
sbb
mov
sbb
pop
xchg
xlat
rcrl
ret
or
jo
push
and
loope
repnz
xchg
pop
dec
xchg
add
mov
push
jns
nop
decb
xchg
mov
mov
insl
adc
xor
and
inc
leave
sbb
or
or
loope
adc
gs
dec
add
bound
xchg
shlb
mov
inc
jmp
adc
add
hlt
movsb
shlb
cmp
xor
add
in
or
cld
jecxz
in
stos
add
dec
jecxz
sbb
push
fcmovbe
stos
outsl
sub
dec
pop
mov
jecxz
jo
and
and
or
inc
jnp
clc
pusha
mov
lds
cmp
inc
stos
xor
call
dec
aam
cmpb
cmpsl
push
cld
xchg
dec
inc
rolb
jecxz
stos
lock
jb
cmpsl
insb
les
fstpt
jl
inc
int
xor
dec
or
fisttpll
mov
adc
shrl
adc
mov
and
rcll
popf
xchg
aas
adc
push
push
sub
and
or
jne
add
loop
jbe
pop
outsl
test
mov
xchg
int
adc
or
cmpsb
inc
pushf
jnp
sti
out
das
pop
enter
sbbb
movsb
stos
xchg
push
push
adc
inc
fwait
adcb
and
data16
lcall
sub
inc
pusha
or
arpl
or
mov
je
sub
and
and
push
sub
das
jo
xlat
insb
and
std
clc
inc
mov
adc
test
stos
test
push
stos
aam
or
popa
jmp
xchg
loope
pop
nop
inc
pop
sub
xor
xor
out
cwtl
adc
xor
dec
rclb
inc
mov
push
dec
jcxz
mov
lods
sahf
lcall
subb
cwtl
sbb
loope
mov
shlb
pusha
insl
inc
pop
shr
sub
mov
test
mov
inc
push
subl
scas
inc
in
cs
pop
ja
stc
sub
nop
mov
les
stc
xor
insl
icebp
repnz
and
cs
ret
xlat
nop
sbb
add
ret
mov
cmpsl
mov
aam
fucom
mov
push
ds
mov
jns
add
es
push
rcll
pop
imul
sbb
and
mov
jp
insl
jae
push
rcrb
inc
and
pop
dec
test
inc
jae
push
repnz
ret
cmp
orb
cli
add
movsl
jnp
sbb
cmp
xor
xchg
in
jno
sbb
jns
mov
test
leave
mov
adc
movsl
enter
pop
es
mov
test
in
xchg
test
pop
loope
cmpsb
xchg
fucomip
jg
call
mov
shl
rolb
xchg
sbb
aas
sub
mov
jb
push
enter
jl
in
mov
mov
add
xor
in
xchg
mov
jns
inc
cmpsl
sub
sbb
cld
rolb
cmp
xchg
xchg
add
jg
pop
pusha
push
adc
andb
or
pop
roll
stos
pop
shlb
dec
jns
int
xor
xchg
shrb
testl
test
pop
dec
jae
push
clc
sbb
xor
sbb
dec
pop
jbe
sub
mov
xchg
push
and
or
add
inc
mov
cvttps2pi
icebp
mov
adc
inc
ret
cltd
or
inc
inc
pop
adc
inc
shlb
xorl
aaa
ja
xor
jns
pop
or
lret
repz
or
ljmp
or
xlat
in
orl
out
sbb
mov
stos
andl
add
gs
cmp
test
lea
xchg
push
ja
inc
or
cwtl
test
pop
xor
push
cli
and
es
dec
inc
mov
ja
inc
pop
inc
insl
pop
mov
push
sbb
cwtl
dec
in
inc
jecxz
push
push
add
fstpt
fdivl
mov
adc
lock
xchg
out
xlat
test
mov
scas
add
or
jns
into
inc
or
jmp
or
lret
mov
imul
dec
into
mov
jb
mov
test
ret
iret
cmp
inc
lcall
je
xchg
lea
std
out
loopne
inc
mov
xlat
xor
sbb
add
add
sub
nop
add
paddb
push
mov
mov
xchg
mov
add
push
bound
add
bound
sub
rolb
and
xor
js
std
lcall
mov
enter
outsl
movsl
and
xchg
push
and
sub
popf
pop
gs
lcall
dec
or
orl
pop
popa
repz
rcrb
mov
or
add
aaa
les
stc
aaa
test
dec
jae
xchg
xor
push
es
and
ret
subl
sub
or
add
inc
cmp
jg
xchg
test
subl
subb
flds
lock
lcall
mov
and
jns
inc
push
push
jmp
mov
xchg
adc
xchg
dec
data16
popa
xchg
xor
shlb
sbb
add
cltd
jle
inc
mov
cwtl
mov
add
mov
xchg
rol
push
jns
push
shrb
loopne
std
add
aaa
cltd
bound
scas
fldcw
adc
add
cmp
outsl
and
in
popa
jne
fdivs
cs
sti
add
push
loopne
movsl
pop
lds
adc
mov
add
cld
sbb
push
dec
stos
insl
pushf
mov
add
aas
sahf
movsl
adc
push
sub
enter
pop
movsl
sbbl
and
add
push
imul
sahf
add
fwait
je
mov
rol
adcb
inc
sub
cmp
mov
aad
adc
mov
or
cmpsb
cmp
lds
loopne
adc
push
pslld
lods
dec
mov
ret
shll
xchg
icebp
mov
xchg
xchg
mov
xor
pushf
adc
push
lods
shll
fldcw
rolb
inc
cld
int
add
adc
push
add
cltd
jnp
mov
fsts
cltd
jmp
dec
pop
popf
out
pop
les
xchg
data16
or
stc
inc
dec
aad
mov
sub
divl
movaps
pop
fwait
shrb
pop
pop
rorl
mov
jmp
sbb
or
add
out
shll
jns
or
lods
xor
and
testb
xchg
sub
pop
shll
cs
or
inc
sbb
movsb
stc
push
push
dec
cmpsb
cli
push
dec
push
and
negb
test
fs
cmp
jo
stos
dec
jo,pn
mov
in
add
add
inc
xor
out
push
ret
shll
movsb
int3
sbb
jne
nop
test
popf
cmc
mov
cmp
movsb
scas
add
dec
or
mov
push
add
adc
pop
dec
or
xchg
repnz
dec
daa
push
xchg
cmp
add
cltd
mov
sbb
or
mov
sub
fsubs
push
lods
mov
pop
inc
mov
pop
and
pop
xor
jne
lret
call
push
add
xor
outsb
add
xchg
cmc
loop
sub
in
fldcw
inc
lea
xor
mov
mov
dec
mov
leave
push
es
adc
mov
add
roll
mov
cmp
shrl
mov
jb
ss
fsubp
mov
xor
gs
sub
popf
or
inc
xor
adc
shrl
into
arpl
push
xchg
sbb
sub
shrb
insl
pop
xchg
jmp
lods
test
sub
lret
add
aam
pop
mov
adc
or
popf
sub
mov
mov
aad
fbld
and
xor
xor
xchg
testb
add
add
stc
adc
add
jmp
add
inc
xlat
and
mov
inc
and
or
enter
mov
inc
lock
sub
jne
ret
mov
lock
adcb
pop
aad
xchg
mov
or
mov
or
pop
mov
sti
les
sbb
inc
pop
xchg
mov
jecxz
inc
inc
arpl
cmp
inc
test
mov
xchg
jl
leave
jge
aas
mov
aad
mov
add
cmpsb
jg
mov
mov
jno
movsb
mov
outsl
clc
test
dec
adc
lret
je
test
call
es
bound
cmp
call
lods
notb
push
addl
nop
push
mov
lock
cld
or
xchg
and
dec
push
cmp
inc
in
ja
dec
mov
and
xor
sbb
xchg
sub
add
or
add
xchg
add
sbb
pop
adc
clc
jecxz
adc
inc
ret
or
rorl
js
sbb
vmovups
pop
vrsqrtps
fiadds
pop
daa
push
add
mov
mov
aam
inc
push
cmp
jge
sub
loopne
sar
sub
add
and
test
push
lcall
hlt
lods
out
jg
jp
adc
int
mov
inc
xlat
sti
call
dec
loope
mov
push
xchg
mov
jmp
add
int3
jno
jns
sti
sbb
mov
xlat
push
mov
adc
adc
cs
dec
push
push
add
and
inc
push
daa
cwtl
and
loop
lods
sub
adc
xor
add
xor
xor
jge
in
jge
test
jae
add
push
out
pop
int3
cmp
sub
mov
loopne
jne
daa
sbb
xchg
push
and
mov
cmp
adc
jp
test
push
iret
lock
jne
xor
pop
and
loop
js
adc
dec
pop
dec
sbb
sarb
mov
adc
cld
pop
mov
sbb
loop
xchg
lret
mov
cmp
dec
and
imul
xor
xchg
adc
popf
inc
pusha
and
xchg
addr16
push
adc
xchg
jmp
xchg
add
sub
sti
mov
inc
push
movsb
jo
adc
xorb
mov
sub
stos
mov
xor
shl
adc
out
add
insb
mov
rorb
push
mov
mov
xor
xor
and
shl
adc
push
or
aad
sbb
in
inc
and
mov
push
lret
sbb
mov
inc
clc
dec
mov
mov
scas
push
sbb
ret
mov
push
loop
lret
sbb
mov
mov
add
jno
mov
icebp
add
add
jno
in
and
xor
shrb
stos
inc
inc
or
inc
jb
stos
out
adc
and
sub
call
mov
push
mov
add
leave
popf
int3
and
mov
jno
push
pop
ret
arpl
jo
lods
fst
xchg
jecxz
out
xchg
adc
jne
fsubl
inc
rorb
and
std
aaa
push
leave
sarb
daa
push
test
imul
sub
push
mov
inc
fldl
andb
cli
sahf
xchg
lods
pop
xlat
add
dec
or
fadds
out
adcl
and
and
fwait
mov
pop
pusha
push
rol
push
adc
sbb
out
out
mov
imul
lods
movsl
sbb
stc
cmp
test
push
sbbl
and
adc
orl
dec
ret
je
loope
rclb
aas
inc
mov
mov
daa
mov
mov
jb
and
fsubs
inc
rcll
test
icebp
add
xchg
movsb
sbb
sbb
clc
scas
xchg
in
das
test
mov
xor
repnz
xor
push
imul
in
xor
cmp
repnz
stos
xchg
adc
iret
jmp
or
clc
push
xor
insl
inc
lock
sub
xor
mov
push
push
imul
inc
mov
mov
and
inc
dec
rol
or
inc
xchg
jge
xor
push
sbb
jl
inc
dec
rcrl
jle
loope
ds
ret
int
xchg
lahf
movsl
or
dec
test
sub
push
pop
jmp
cs
add
mov
or
push
mov
mov
adc
pop
and
xchg
mov
jae
adc
mov
fists
pop
and
pop
bound
loop
ja
pop
pop
dec
rorb
add
adc
stos
sub
decl
loope
scas
add
dec
fwait
push
roll
in
ja
dec
stos
add
out
cmpsb
add
jmp
adc
mov
testb
js
xchg
dec
ss
inc
and
and
mov
mov
sti
add
out
and
and
push
int3
xorb
cmpsb
cmc
mov
stos
mov
les
mov
les
pop
sbb
add
lahf
enter
mov
subl
mov
push
dec
jecxz
iret
repnz
add
nop
jl
sub
sub
xchg
roll
cwtl
add
pop
jo
lret
adc
add
push
arpl
jae
outsl
mov
out
sbb
add
cltd
mov
push
cmp
shll
mov
mov
pop
aad
push
mov
dec
mov
adc
fs
add
movsb
dec
cld
ret
lock
inc
icebp
sbb
roll
test
mov
gs
dec
xor
clc
ret
bound
and
out
mov
and
inc
mov
xor
enter
or
lret
stos
adc
dec
xchg
mov
rclb
or
adc
push
out
je
adc
sbb
cwtl
adc
xlat
movsl
psubw
mov
mov
enter
scas
mov
inc
pop
sub
out
and
inc
dec
or
shrl
push
adc
adc
pop
inc
das
fdivrs
clflush
push
and
leave
xor
and
hlt
aaa
pushl
jmp
arpl
pop
sub
ret
adc
mov
add
inc
rcll
jmp
scas
mov
inc
gs
jl
sub
popa
or
cmc
out
cmc
scas
movsb
mov
xchg
adcb
movsb
cltd
sahf
xchg
pop
outsb
movb
pop
scas
add
push
pop
add
mov
or
cmpsl
mov
inc
sub
je
sbb
jo
push
mov
push
dec
sar
nop
dec
jl
psubsw
dec
andb
or
and
xchg
pop
inc
lcall
jmp
or
sub
push
nop
jne
test
add
ljmp
enter
bound
lret
or
mov
cwtl
arpl
jns
mov
loopne
test
dec
add
stc
adc
xchg
int
or
pop
sub
clc
roll
xchg
pop
xor
repnz
daa
test
cli
or
xor
add
stc
popa
jnp
mov
ja
mov
aaa
pop
xlat
mov
pop
enter
hlt
lea
shlb
mov
inc
cmp
shrd
mov
scas
and
mov
dec
push
add
inc
repnz
mov
iret
pop
les
rcl
stos
add
mov
lds
xchg
cli
adc
inc
movb
pop
mov
pop
sbb
lods
adc
xchg
mov
inc
cmp
pop
mov
mov
fcoml
dec
fwait
jno
scas
sub
cmp
and
bound
gs
bound
cmpsb
and
or
stos
mov
pusha
cld
imul
test
insb
rcr
ret
jnp
inc
and
jecxz
pop
sub
xchg
and
popf
push
imul
adc
push
sbb
hlt
pop
adcb
jno
jnp
cmc
push
or
xor
popf
mov
mov
aaa
les
adc
inc
add
xor
or
mov
lods
jmp
rol
pop
or
aad
xchg
movl
fisubrl
push
xchg
outsl
jp
sbb
out
lds
or
cmp
inc
add
push
inc
adc
inc
xchg
adc
add
shlb
lock
mov
test
mov
fildl
cmp
shll
add
jne
jecxz
inc
cltd
popa
push
sbb
lea
movsl
mov
adc
div
nop
inc
push
sysexit
cmp
aaa
inc
xor
adc
in
inc
cmp
dec
pop
out
minps
dec
xchg
cmp
dec
popf
xchg
lret
xor
add
add
pop
nop
arpl
push
insl
cmp
adc
pop
mov
cwtl
sub
adcb
and
sahf
xchg
lds
jp
nop
pop
cmc
fcmovbe
or
pop
dec
inc
loopne
mov
shll
fistpll
push
dec
cmp
lock
sar
aaa
sub
pop
jmp
inc
fsubs
sbb
imul
pop
xchg
push
sub
sti
sarl
loopne
add
and
push
add
sub
cwtl
mov
xchg
mov
leave
ja
rorb
add
add
popl
icebp
jecxz
imul
mov
pusha
inc
mov
add
add
pop
lds
mov
dec
mov
push
push
pop
mov
push
add
cs
loopne
xor
jno
sbb
fabs
push
fwait
outsl
ret
add
ss
mov
jbe
movsb
js
xchg
rcl
test
or
cwtl
mov
movsl
daa
adcb
hlt
aaa
leave
add
popa
dec
loope
jmp
scas
ror
leave
add
sbb
or
or
fwait
scas
adc
mov
inc
xchg
add
or
add
loope
aad
add
cwtl
call
pop
jl
test
jne
pop
push
cwtl
rclb
aaa
add
mov
cld
adc
sub
pushf
movsb
xchg
xlat
pop
cmc
push
mov
and
push
push
inc
dec
lcall
dec
call
pop
mov
dec
sbb
adc
ret
inc
ja
and
shlb
leave
push
jne
or
lock
adc
xchg
adcb
inc
ljmp
mov
daa
mov
sub
inc
inc
cmp
loope
add
scas
and
inc
subl
test
decl
das
mov
cmpsl
cmc
inc
adc
fcoms
decl
push
ficoml
mov
mov
push
adcb
ret
pop
into
mov
dec
fsubrs
cmp
xchg
push
mov
push
jno
movsl
mov
adc
cmc
cmpsb
inc
mov
movsb
enter
push
xor
imul
lret
xchg
bound
adc
popa
mov
or
mov
sbb
xchg
test
xchg
adc
icebp
pop
mov
sahf
mov
jmp
mov
inc
imul
adc
enter
dec
inc
les
cmp
pusha
test
out
pop
or
add
out
add
xchg
inc
es
ret
add
sub
popa
pop
mov
rorb
mov
scas
dec
and
insl
loopne
sbb
dec
enter
and
pop
nop
fs
xor
sub
addr16
scas
fcoms
jae
lea
mov
inc
push
inc
ds
pop
mov
mov
ja
sub
sbb
and
cmp
ficompl
inc
out
mov
stos
nop
inc
fsubrs
add
scas
mov
lea
xchg
xlat
sub
dec
dec
aad
insl
push
add
inc
and
mov
and
loope
dec
add
add
add
xchg
pop
ss
push
sub
dec
cmp
outsl
in
insb
ljmp
jno
cwtl
inc
push
or
pop
dec
lret
in
test
frstor
inc
cmp
scas
or
nop
add
sub
xor
jl
push
shlb
adc
out
aad
mov
and
pop
and
inc
mov
cmpsb
nop
cmp
xrelease
or
pop
repnz
xchg
scas
sbb
and
andnps
xor
sbb
cmpsb
sbb
jmp
xor
repnz
test
and
dec
sbb
adc
sbb
mov
pop
push
adcl
mov
push
and
dec
xchg
js
dec
xor
lea
sbb
jo
pop
xor
nop
or
adc
mov
in
imul
cmp
shlb
push
adc
xor
mov
pop
stos
imul
xor
push
popf
test
sub
lahf
mov
adc
jno
and
xchg
adc
inc
sbb
inc
dec
ret
fcoml
and
pop
sahf
aas
sahf
icebp
adc
rolb
add
mov
and
mov
int
or
fistpl
les
mov
pop
mov
xchg
mov
es
lret
push
sbb
pop
pop
mov
jle
push
add
xchg
addr16
sbb
sub
fucom
insl
ss
xchg
daa
xor
ret
ror
and
and
mov
or
and
ds
subb
pop
or
outsb
bound
jo
mov
dec
pop
aad
gs
xchg
push
push
jmp
stos
sti
inc
pusha
and
xor
pop
jo
jp
mov
data16
inc
int
cwtl
xor
adc
cltd
xchg
jnp
jo
add
pop
lcall
jle
inc
pop
pop
test
xor
es
sub
or
outsl
sub
inc
aad
gs
push
call
cmp
test
mov
scas
in
arpl
add
or
daa
push
push
stos
adc
shrl
jnp
adc
or
inc
cmc
or
jnp,pn
dec
movl
dec
jno
pop
daa
lock
fwait
mov
test
andl
jae
insb
adc
notl
inc
aam
inc
mov
push
cmp
pop
jp
mov
adc
add
popa
add
or
cs
mov
sbbb
dec
xchg
dec
rorb
and
fsubs
sbb
pop
jg
add
lds
icebp
dec
cmp
xchg
in
outsl
push
mov
dec
lcall
mov
mov
ret
stos
sbb
or
aas
sbb
ret
inc
cmp
pusha
add
fcmovnb
sarl
out
in
rorl
adc
cs
dec
repnz
das
xor
arpl
outsl
sbb
add
loopne
in
lds
mov
sbb
cmp
clc
push
in
mov
add
push
add
lods
ja
xchg
dec
jbe
xor
pop
xor
es
mov
pusha
or
dec
mov
sbb
inc
fisubs
iret
repnz
add
xor
sbb
lahf
jns
xor
pop
xor
dec
inc
pop
xchg
nop
or
shlb
daa
pushf
ds
test
sub
insl
movsb
mov
leave
adc
lock
test
push
stos
xor
cwtl
pop
test
mov
add
dec
mov
pusha
loopne
sbb
scas
mov
mov
jo
cs
pop
inc
pop
dec
outsl
lcall
or
fwait
and
imul
pusha
loopne
or
cmp
mov
pop
inc
lds
dec
mov
or
push
roll
mov
xchg
lcall
lret
es
shlb
dec
push
ret
fadds
jne
sub
mov
add
sub
inc
mov
addb
adc
dec
ss
jb
inc
scas
pop
jge
dec
push
mov
xchg
jae
xor
push
pop
into
dec
sarb
stos
adc
adcl
xor
xlat
hlt
aam
insb
movl
push
orl
or
sbb
out
add
sub
daa
pop
jns
and
xor
je
ret
add
and
decl
jb
add
sbb
inc
jle
push
lock
inc
pushf
lea
dec
lcall
lret
inc
test
xchg
pop
mov
scas
aad
xchg
adc
test
xor
lock
loopne
xor
lock
lods
clc
add
aas
add
add
adc
sub
lahf
adc
mov
fists
outsb
rolb
scas
adc
or
inc
daa
cld
push
mov
xchg
dec
dec
xacquire
inc
xchg
jg
call
aaa
jae
icebp
mov
mov
add
test
sarl
cwtl
mov
cmp
inc
test
xchg
orb
js
mov
cmp
test
shrb
or
inc
repz
push
rol
rcrl
leave
addb
push
add
cmpsb
mov
add
pop
push
pop
or
rolb
push
mov
popa
daa
or
dec
mov
imul
fcompl
cmp
push
cmpl
push
cwtl
cli
jmp
aaa
repnz
sub
adc
lods
inc
sbb
jo
inc
sarb
cmp
shlb
add
push
dec
test
jecxz
inc
add
ss
insl
out
out
jl
pusha
mov
cli
lcall
jl
nop
rclb
dec
dec
into
mov
mov
je
xor
movsb
xor
adc
ret
imul
add
test
adc
add
add
inc
sbb
cmp
or
add
jbe
test
mov
sub
push
adc
dec
je
cmp
xor
jl
int
push
dec
movsl
sub
inc
outsl
sub
xchg
popf
add
mov
inc
cli
cs
cwtl
stos
add
enter
shrb
dec
push
subl
test
sbbb
and
aad
cli
mov
lret
fwait
imul
add
dec
dec
icebp
arpl
test
adcl
push
cli
xor
rcl
test
fistl
xor
cmc
mov
or
aaa
and
pop
ret
lcall
aaa
xlat
add
lea
fildl
scas
mov
cmpsb
movsl
sbbb
mov
test
and
fstps
pop
aaa
or
xorl
cmpsl
and
or
mov
rol
adc
movd
aad
or
insb
lahf
and
rcl
inc
push
pop
je
inc
stos
mov
std
lret
and
jne
pop
cmpsb
cwtl
pop
enter
xor
insl
sbb
aaa
fadds
in
outsb
xor
mov
pop
sbb
push
ja
pop
adc
push
pop
pop
fs
inc
loopne
cltd
inc
inc
cwtl
add
and
scas
mov
daa
push
and
or
hlt
mov
aam
pop
pop
fdivs
xchg
ljmp
mov
mov
clc
or
cmp
incb
xor
mov
fistpl
or
dec
mov
cmp
lahf
or
cmp
push
adc
inc
enter
clc
add
jle
jge
std
sub
ljmp
adc
mov
js
lds
imul
icebp
mov
xor
xchg
dec
cmp
insl
sub
inc
mov
loope
pop
and
test
sbb
jne
dec
imul
shr
shll
xor
mov
add
loop
and
nop
adc
mov
dec
fistl
push
sbb
stos
mov
xchg
sub
test
mov
push
cmpsb
sub
pop
dec
xor
sar
pop
popa
test
pop
test
inc
mov
rolb
cmp
sbb
icebp
outsl
mov
jo
cmpsb
mov
loopne
cwtl
cmp
and
sub
lods
pop
dec
jmp
xchg
xor
das
add
mov
jae
or
mov
lea
and
jmp
inc
xor
and
icebp
adcb
andl
sahf
inc
adc
scas
or
jmp
jae
adc
out
jecxz
add
rolb
fsubl
movsl
fstpl
outsl
push
mov
dec
push
mov
push
pop
xor
icebp
or
loope
jg
mov
mov
sub
add
inc
repz
adc
push
cmpsl
leave
cs
out
sbb
loopne
jge
sarb
loop
push
cmp
or
mov
daa
push
add
lcall
pop
sbb
or
sbb
mov
jbe
xor
inc
pop
add
fisubrs
xchg
inc
adc
leave
mov
popf
inc
push
jbe
pop
js
pop
or
shlb
pop
push
movsb
fidivs
mov
or
mov
fmulp
cmpsb
and
popa
dec
lds
or
sbb
sbb
jge
or
dec
xchg
pop
pop
and
cmp
movsl
fwait
pop
mov
pushf
mov
in
lock
stc
sub
sbb
dec
stc
movb
iret
inc
mov
insl
aaa
xchg
je
shll
push
rol
les
ss
push
stc
in
decb
subb
rol
dec
xor
push
adc
xchg
push
add
cmp
inc
aad
test
push
test
aas
imul
ss
mov
adc
mov
cmpsl
sahf
jne
dec
dec
cmc
pop
add
stos
nop
xchg
mov
dec
insl
testb
xor
fistpl
add
inc
cli
int
or
push
adc
in
mov
add
call
mov
sbb
mov
push
jb
push
push
sub
jnp
sub
cmp
test
icebp
cmp
jne
ja
das
mov
popa
dec
call
and
add
xchg
xchg
push
lods
mov
ret
fmuls
mov
adc
lods
sub
dec
cmp
xor
fldl
xchg
lea
maxps
incl
dec
push
in
and
push
jl
or
add
fdivrs
xchg
adc
rcl
xor
push
movsb
pop
push
sub
sbb
arpl
cmp
jno
push
movsb
sub
xchg
aad
dec
inc
push
jmp
or
int
jo
rolb
test
and
mov
sbb
fldt
loopne
add
sub
dec
push
sbb
outsl
repz
adc
cmp
sbb
push
sbb
push
pop
subl
call
adc
sbb
and
andl
mov
sbb
adc
rcr
add
fisubrl
push
push
adc
into
and
inc
jnp
mov
outsb
push
push
or
test
add
dec
movsb
add
daa
cmc
popf
xchg
inc
cltd
in
mov
push
inc
test
testb
dec
adc
stos
push
sub
and
in
lret
fnsave
or
pop
loopne
test
push
test
test
inc
and
add
push
pop
xor
push
add
xor
sub
cs
movsb
add
push
or
push
and
jne
test
pop
mov
jg
mov
nop
out
repnz
inc
jecxz
or
mov
jne
jmp
pop
ds
pop
or
push
mov
divb
scas
xor
and
push
dec
lea
das
push
mov
fildl
xor
cld
and
cwtl
aad
sub
inc
insb
std
push
movsb
jle
stos
xchg
xchg
in
sub
mov
je
lahf
push
mov
lods
inc
add
imul
xchg
nop
in
jmp
mov
cs
out
aad
push
aas
add
cld
mulb
test
cwtl
mov
xchg
je
mov
pop
dec
adc
repz
add
add
adc
popf
je
mov
push
xchg
xchg
jge
cmp
add
push
fisubl
imul
and
and
sub
shrb
inc
dec
rorb
sbbb
push
mov
pushf
in
xor
adc
mov
popf
add
cmpsl
loope
in
testl
es
mov
int
pop
loopne
lods
loope
sbb
cmp
pusha
pop
call
nop
push
lahf
sub
cmp
and
adc
and
or
pop
add
and
cmp
or
sti
leave
pusha
xchg
dec
or
add
or
xchg
in
xchg
mov
in
rclb
int3
cmc
mov
ja
inc
xor
or
loopne
mov
jo
popa
icebp
mov
mov
sub
add
rcrb
decb
and
stc
adc
lods
inc
dec
call
mov
push
test
add
adc
inc
add
and
nop
xor
inc
js
icebp
test
xchg
pusha
push
test
or
add
xchg
push
inc
jae
mov
es
rolb
shr
add
push
xchg
and
jb
jmp
inc
jmp
push
jmp
lahf
mov
push
insb
or
sbb
ret
xchg
out
rcl
xchg
xor
bound
push
xor
sub
mov
test
cmp
add
repz
xor
jg
mov
sti
push
dec
jnp
cmpsb
stos
inc
dec
lret
push
xchg
sbb
adc
leave
leave
aam
adc
sub
shll
add
mov
cmp
jno
ljmp
lcall
xchg
mov
jecxz
std
mov
xor
add
dec
pop
ficoms
xchg
add
lea
movsl
add
pop
sub
inc
popf
out
filds
icebp
ljmp
clc
xchg
adc
sbb
lahf
xchg
mov
std
sbb
push
add
scas
push
hlt
push
xor
pop
shlb
repz
out
pop
cmp
and
aaa
xchg
and
add
test
and
mov
stos
pop
xor
mov
mov
sbb
cmpsl
into
push
lods
icebp
dec
stos
dec
mov
mov
or
jg
inc
xor
lret
cli
pop
sbb
inc
xchg
sbb
loopne
mov
adc
decl
nop
lahf
xor
loope
les
lds
or
scas
repz
dec
xchg
aaa
clc
push
insl
pop
push
dec
mov
lcall
cmp
xor
and
stos
movsb
add
cmp
xor
inc
jb
rclb
pusha
push
inc
xchg
add
xchg
in
es
sarl
mov
in
dec
hlt
or
mov
sub
cmp
lahf
inc
sbb
pop
mov
mov
push
test
call
inc
cmpl
je
add
adc
push
test
dec
iret
lock
enter
push
int
fs
les
xlat
nop
jb
sbbb
mov
fs
out
cmpb
lods
jnp
add
pop
and
stc
cli
push
loopne
sub
stos
insb
test
inc
mov
pop
mov
push
je
int
cld
sub
mov
push
inc
jmp
mov
in
mov
popf
xor
or
sbb
cmp
enter
mov
ss
dec
sbb
or
pop
sub
notb
clc
stos
fstpl
aas
mov
cmc
cltd
mov
das
dec
push
daa
sub
sbb
repnz
adc
rolb
insl
std
shlb
jge
jns
repnz
movsl
mov
stc
div
cmp
xor
add
pop
push
jns
out
inc
xchg
xchg
call
loope
mov
aas
loop
in
test
arpl
adc
scas
sbbb
inc
rcl
mov
mov
adc
mov
mov
or
inc
cmp
rcll
pop
pop
cmpb
test
xor
push
nop
jno,pn
mov
pop
push
jns
test
lcall
fildll
inc
push
jno
notb
adc
dec
ljmp
cld
inc
xchg
je
jne
add
sub
mov
and
loopne
add
push
stc
add
jb
sub
sub
jle
movsl
pop
adc
lea
jo
punpckldq
add
inc
adc
and
xchg
add
in
sbbb
gs
adc
inc
jecxz,pn
sub
mov
inc
stos
sbb
pop
sbb
mov
outsl
and
shlb
push
icebp
ret
push
lods
or
xor
add
loopne
xchg
rolb
gs
in
mov
pop
xchg
or
leave
outsl
ss
jl
add
mov
pop
push
aam
dec
rcrb
cmp
rcr
xor
lock
loopne,pn
lahf
dec
xor
adc
aaa
loopne
adc
scas
rol
add
stc
sub
or
lea
lds
pop
dec
addr16
clc
pop
jmp
adc
jp
mov
add
jo
lds
mov
xchg
imul
int3
lret
mov
mov
mov
and
add
or
das
xlat
add
repnz
mov
pop
jno
mov
mov
pop
mov
jae
jne
inc
lds
icebp
mov
bound
jae
and
or
dec
lret
xchg
mov
ljmp
fs
nop
sbb
notl
dec
rclb
cld
scas
insb
inc
ljmp
xchg
xor
ja
push
call
popf
xor
dec
mov
add
inc
add
sbb
push
dec
jae
xor
call
ret
leave
or
lds
sbb
stc
out
mov
dec
jl
xchg
stos
xchg
inc
loopne
sbb
aas
aaa
mov
mov
sbb
or
dec
or
pop
push
mov
inc
add
pop
and
add
inc
jp
daa
mov
adc
mov
adc
je
iret
cmp
subb
movsb
lods
lahf
sub
mov
add
ret
add
mov
lret
xchg
dec
inc
pop
add
in
xor
decl
xchg
lret
sub
add
in
sbb
ja
stos
sbb
clc
fistps
jo
mov
mov
enter
addb
push
lcall
and
rcrb
dec
jno
sarb
and
jl
sbb
fcomps
repnz
mov
mov
lds
add
cmc
sti
dec
xchg
lcall
pop
cmpsl
and
pushf
sub
inc
push
mov
mov
add
std
call
leave
repz
fbld
xor
adc
mov
pop
dec
adc
push
test
adc
repz
mov
orb
mov
or
mov
xlat
lret
mov
sbb
jecxz
sub
fwait
rolb
test
mov
jne
jns
loop
call
cmc
out
inc
jno
mov
rcll
add
nop
les
cmp
scas
bound
inc
or
mov
xchg
cmp
inc
mov
cmp
loopnew
adc
stos
jmp
subb
or
ret
dec
test
mov
or
and
xlat
popf
lcall
test
adc
push
and
xchg
je
mov
add
mov
daa
dec
iret
push
mov
sbb
cli
pop
sub
jecxz
cld
mov
xchg
or
leave
fisttpl
lods
and
ljmp
xchg
xor
sbb
push
test
push
sbb
add
inc
and
daa
ret
add
cmp
outsl
adc
add
cmp
push
cmpsb
std
or
sub
and
mov
shlb
adc
mov
sub
xchg
cmp
std
add
add
cs
inc
sbb
outsl
lods
adc
add
pop
je
push
add
rorb
in
xchg
xor
dec
rolb
push
in
jns
cmp
mov
lret
fstps
xchg
aam
iret
sub
push
sbb
loop
outsl
rorb
mov
and
mov
lret
sahf
xchg
dec
fwait
jno
pushf
or
or
pop
xchg
add
add
inc
cs
xchg
sub
inc
inc
loope
push
add
dec
mov
jge
jmp
repz
pop
push
dec
inc
aam
call
xor
xor
inc
lcall
and
movsb
inc
mov
addl
sub
inc
test
daa
movsl
add
inc
jno
xchg
loope
mov
in
roll
dec
cmp
sbb
xor
cmp
fiaddl
mov
nop
pop
sub
call
push
cs
push
in
pop
cmpsb
roll
or
fdivl
xchg
or
pop
pop
fnstcw
ljmp
rolb
push
inc
int
jge
push
mov
scas
loop
iret
and
sub
std
mov
fdivr
or
push
imul
lds
mov
xor
int3
sbb
inc
sub
inc
push
cmp
push
aam
arpl
adc
dec
sbbb
cmpsb
xor
mov
add
arpl
or
push
jae
pushf
adc
testl
or
loop
mov
inc
push
push
test
pop
mov
mov
cmp
sub
stos
lahf
and
and
pop
or
and
dec
lods
push
push
add
adc
fistps
dec
sbb
or
or
sbb
pop
popa
sahf
arpl
add
loop
add
ret
push
es
aaa
xor
ret
fstps
mov
dec
fs
jg
gs
rclb
sbb
mov
mov
mov
inc
sbb
or
inc
dec
mov
js
loopne
dec
dec
nop
cmp
repnz
or
ret
aas
mov
cmp
loop
pop
int3
enter
or
jne
push
aas
cmc
xor
scas
xchg
mov
inc
repnz
mov
in
call
push
xor
std
arpl
mov
add
push
push
shlb
mov
dec
pop
jecxz
bound
jb
push
adc
xchg
sub
adc
xchg
rclb
seto
mov
dec
das
lret
cmp
xor
xor
adc
addl
nop
sbb
aam
add
dec
iret
adc
add
std
call
stos
lret
dec
repz
outsl
nop
push
or
cmc
push
adc
push
or
xor
or
js
xchg
xor
ss
call
push
lea
jo
add
cmp
jo
adc
rolb
add
pmulhw
inc
add
sbb
ret
mov
or
jmp
movsb
or
add
es
inc
dec
mov
add
and
or
sub
pop
add
and
adc
and
adc
popf
or
arpl
gs
inc
xor
inc
in
inc
sub
cmpsl
imul
mov
sbb
hlt
dec
jmp
test
and
subl
mov
cltd
cmpb
and
leave
sub
xor
std
ljmp
push
aas
aam
push
shlb
mov
xchg
jb
jo
in
jo
cmp
pop
adc
das
mov
pop
pop
xchg
and
testb
and
and
add
inc
jmp
inc
data16
cmpsb
sub
push
mov
roll
sbb
clc
add
leave
sbbl
addl
and
jmp
and
leave
adc
mov
int3
insl
aas
jne
adc
xchg
push
lea
stos
adc
leave
mov
push
lea
adc
cmp
ret
inc
inc
sbb
pusha
sbbb
lcall
jnp
xchg
inc
jl
repnz
add
mov
mov
inc
call
orb
cmp
ret
dec
das
add
mov
and
mov
and
push
xor
inc
daa
mov
in
dec
xor
cmp
inc
and
push
adc
jno
xchg
add
outsb
test
mov
cmpsb
sbb
adc
dec
pop
jo
mov
mov
jo
or
js
stos
inc
dec
inc
std
or
xorb
es
lret
popf
nop
nop
push
outsl
jns
mov
jne
or
imul
stos
mov
pushf
xor
mov
pop
pop
add
mov
add
xor
movsb
and
add
jns
and
push
pop
stos
add
pop
loopne
mov
xchg
add
mov
pop
add
inc
lods
xchg
pop
jno
add
daa
test
divb
dec
and
stc
adc
inc
lcall
cmp
jg
out
pusha
or
cltd
adc
out
in
arpl
sbb
orl
sub
clc
sbb
les
mov
add
jl
mov
dec
xor
sbb
or
loope
cmp
test
sub
scas
adc
dec
or
jo
or
jno
jl
xchg
cmp
pop
js
mov
rclb
mov
mov
inc
fnstsw
arpl
ret
mov
inc
std
pop
loopne
add
mov
inc
aas
in
sub
cli
add
xchg
inc
dec
xchg
sarl
or
stos
ficompl
sub
pop
inc
fstpt
cli
add
adc
jns
dec
shrb
imul
push
movsb
mov
mov
aam
mov
subl
cmp
and
mov
sbb
xor
xor
aam
out
aaa
repz
and
imul
leave
loope
ret
ret
sbbl
mov
nop
mov
pop
pop
push
inc
jo
outsb
inc
das
xor
cmp
mov
shrl
sub
stos
or
call
mov
add
mov
addl
sub
sbb
mov
pop
leave
aas
enter
jp
mov
xor
mov
add
pop
pop
cmpsl
cmp
or
lea
lcall
mov
test
xchg
addr16
sahf
jge
push
add
or
mov
inc
punpckldq
and
add
cli
add
mov
cwtl
jo
mov
mov
test
les
movsl
lods
adc
scas
sub
and
roll
loopne
cmp
adc
add
add
popf
das
jne
xor
sbb
push
adc
pop
popf
imul
adc
xor
xchg
mov
mov
add
cltd
cmp
and
movsb
jne
ds
pop
pop
cmp
gs
das
popa
es
sbb
ds
sub
stos
ja
xchg
jo
push
in
lods
bound
movsb
rcr
js
nop
mov
or
movsl
ret
adcb
enter
adc
sbb
mov
pop
repz
lock
jl
loope
mov
call
mov
lcall
adc
inc
sbb
lea
sub
mov
mov
sbb
mov
das
jns
sub
inc
daa
pushf
leave
xchg
add
adc
loopne
fiadds
sub
lods
js
push
lret
xchg
sbb
subb
int
fldl
mov
pop
pusha
inc
pop
ljmp
or
clc
les
aad
pop
push
mov
pop
loopne
xchg
pop
xchg
xchg
rcll
cltd
mov
xorb
lahf
aaa
inc
push
mov
aaa
mov
push
mov
adc
mov
subb
xor
in
xor
push
or
push
jmp
sbb
jmp
cmpl
ss
sub
add
inc
xor
adc
dec
vunpcklps
scas
mov
bound
inc
enter
dec
push
inc
pop
rolb
pop
xor
jbe
xchg
add
test
or
and
test
cmp
mov
gs
rorb
rclb
adc
mov
outsl
xchg
pop
out
imul
dec
pop
xchg
inc
xchg
adc
or
and
adcb
fisttps
jbe
add
or
xchg
push
fidivl
sub
shld
cwtl
add
incl
cmp
fsubr
movsb
mov
push
add
aas
repnz
cmp
mov
sbb
insl
scas
jne
mov
sub
jle
add
bound
incl
or
loop
iret
in
mov
push
adc
or
out
add
stc
sbb
and
shl
jbe
adc
dec
xchg
stos
jne
dec
xchg
adc
in
pop
xchg
and
xor
rclb
pop
inc
push
pop
cmp
pusha
test
dec
leave
movsb
andl
addb
ss
loop
test
sub
test
rclb
and
mov
cmp
dec
xor
mov
sub
mov
es
data16
inc
test
xor
sub
mov
pop
mov
inc
movsb
mov
or
xor
xor
aam
mov
ret
cmc
bound
bndldx
mov
inc
leave
int
jle
push
popa
jge
add
mov
adc
push
sbb
adc
xchg
pop
mov
add
stc
and
xor
rorl
xchg
or
xor
sub
push
pop
adc
mov
and
pop
mov
int
and
xchg
sbb
imul
push
lods
xchg
and
orl
cmp
fs
pop
add
ljmp
mov
std
pushf
ljmp
jmp
mov
push
outsb
ljmp
sahf
in
imul
push
out
add
orb
add
mov
jmp
sti
movsb
and
insl
xor
outsl
xor
stos
mov
cwtl
bound
aaa
ret
xor
xor
adc
loopne
cwtl
cmpsl
testb
jo
aad
dec
sub
pop
repz
sahf
or
lea
add
mov
inc
push
repz
xlat
test
dec
rcrl
inc
jns
add
ret
mov
sbb
mov
jbe
sub
fucomip
lret
ret
adc
push
dec
aam
mov
and
adc
sbb
shlb
push
pop
xor
add
and
inc
enter
aas
push
addr16
adc
push
push
or
push
xchg
dec
xchg
lret
gs
push
mov
call
xor
out
ror
adc
adc
xor
dec
rorb
icebp
cmpsb
mov
adc
mov
or
gs
clc
ja
ret
inc
inc
scas
mov
or
divl
stc
ljmp
and
dec
xor
decb
loope
push
loopne
aad
ret
jg
stc
sub
dec
sub
xchg
add
and
sbb
jno
and
pop
ljmp
gs
jo
daa
outsl
faddl
dec
inc
cmp
inc
add
xor
push
fwait
lea
fidivrs
mov
or
xor
sub
stc
rcr
inc
dec
pop
push
lea
es
icebp
cld
inc
or
and
push
test
mov
mov
rcrb
leave
jg
les
add
jmp
loope
add
mov
jmp
out
dec
fdivrl
dec
sbb
lock
and
add
add
xor
jg
rorb
fwait
pop
mov
or
push
inc
push
ljmp
cld
loop
jmp
xor
mov
fisttpll
std
leave
and
push
mov
es
movsl
stos
inc
mov
jmp
add
js
sub
nop
push
and
dec
lcall
out
scas
rclb
xchg
inc
and
mov
jg
push
and
inc
mov
jl
ret
dec
std
mov
adcl
pop
loopne
and
mov
add
sti
scas
lahf
fs
les
inc
adc
and
cli
sub
jmp
ljmp
out
xor
inc
test
mov
sbb
add
mov
cmp
adc
sbb
mov
bound
in
sbb
and
inc
dec
scas
ljmp
mov
rol
add
inc
sahf
push
sbb
mov
push
push
outsb
mov
test
pop
mov
cmp
cmp
dec
inc
int3
push
mov
or
sahf
jb
in
adc
mov
cwtl
loopne
jne
mov
mov
cmp
out
ret
inc
push
push
iret
xchg
jmp
xchg
and
pop
or
push
jbe
or
mov
sbb
nop
rclb
test
push
andl
or
and
in
arpl
xchg
sti
int
shlb
pop
and
pop
inc
dec
add
test
dec
dec
sbb
mov
retw
mov
shrb
imul
sbb
add
popf
lcall
jmp
stc
adcl
mov
xchg
loop
ret
dec
add
jne
popa
inc
pop
lds
iret
jecxz
pop
push
ljmp
stos
mov
fistpl
daa
cmp
daa
sbb
js
add
decl
and
sub
adc
popf
aaa
xchg
inc
add
push
loopne
orb
adc
hlt
and
xchg
nop
jnp
inc
mov
dec
adc
mov
aas
sbb
sbb
mov
loopne
and
jle
and
xor
jo
stos
fisubl
inc
gs
loope
cmp
sbb
mov
cmp
cmp
push
xchg
dec
dec
xchg
andl
pmulhuw
cmp
mov
shrb
je
push
xor
mov
add
dec
pop
pop
test
or
inc
dec
stos
mov
adc
ljmp
add
add
sub
leave
popf
xor
mov
push
xor
out
and
jmp
adc
or
loopne
data16
mov
add
test
add
inc
dec
and
jno
adcl
daa
mov
jmp
incl
ljmp
and
fdiv
mov
add
std
add
call
lcall
sarl
pop
jae
arpl
pop
in
orb
out
imul
in
push
push
pop
stos
in
test
adc
push
jl
add
adc
and
push
dec
xchg
divl
xor
xchg
dec
in
ret
or
lret
das
push
outsb
or
inc
and
jb
inc
imul
rolb
sub
sbb
dec
pop
mov
push
mov
std
add
nop
cmpsl
or
mov
mov
add
jnp
clc
icebp
dec
cmp
inc
mov
push
cmpsb
sti
mov
sti
packsswb
mov
pusha
imul
add
nop
cmp
leave
outsl
lret
push
xor
push
test
inc
sub
xchg
push
outsl
adc
push
mov
negb
mov
sub
xchg
dec
andb
or
xchg
ja
pop
sbb
fisttps
loop
adc
dec
xchg
orb
stos
leave
jae
inc
sbb
sbb
icebp
sub
test
sahf
adc
jg
das
add
iret
jle
jnp
mov
pop
mov
push
cld
add
stc
cmp
icebp
stc
push
inc
rclb
outsl
mov
xor
xchg
add
inc
pusha
dec
aad
das
add
xor
pusha
jle
pop
leave
jmp
add
int3
and
push
cmp
adc
add
sbb
pop
and
imul
sar
pop
sahf
adc
out
inc
sub
push
lret
cmpsl
pop
icebp
push
xchg
bound
insb
in
ljmp
bnd
or
insl
mov
adc
pop
inc
dec
rolb
xchg
cmpl
gs
push
sbb
and
mov
and
dec
ret
mov
mov
inc
add
mov
pop
mov
xor
push
mov
aas
xchg
movsb
aaa
jno
mov
movsb
jecxz
add
xlat
adc
fistl
mov
rolb
push
mov
xchg
jl
sar
mov
dec
pop
test
dec
xor
data16
mov
dec
pop
sub
dec
mov
push
mov
andb
push
movsb
inc
sbb
or
pop
repz
sbb
or
add
inc
inc
adc
add
or
hlt
pusha
sbb
repnz
or
pop
js
mov
leave
and
cwtl
xor
mov
or
ret
xorl
inc
inc
push
fcoml
fcmovnbe
inc
mov
stc
jb
sbb
inc
xchg
cld
xor
pop
xor
jle
add
insl
cld
dec
mov
push
push
mov
arpl
xor
or
sbb
leave
into
aas
inc
xchg
inc
or
jae
mov
xorb
and
adc
movsb
inc
dec
inc
int3
add
sbb
add
inc
push
or
outsb
movsl
or
fldl
xlat
int
mov
push
mov
xor
dec
inc
fs
sbb
cmp
rolb
stos
cmpl
movsl
outsb
movsb
movsb
dec
inc
cmpb
dec
mov
add
push
data16
fptan
in
lahf
scas
sbb
or
mov
inc
sti
aad
push
dec
lea
mov
fstpt
and
xor
add
js
adc
sbb
stc
or
test
sub
stos
or
lahf
je
mov
xchg
lret
or
pop
mov
xchg
mov
dec
adcb
sbb
lds
pushf
imul
ds
sarb
and
adc
sub
iret
repz
jno
sub
push
aaa
cmc
test
mov
pop
push
and
sub
ret
mov
mov
lods
or
loopne
and
mov
add
lock
adc
pop
push
jge
xchg
sbb
jp
lods
xor
stos
inc
pop
repnz
mov
jb
push
mov
mov
out
push
sub
mov
movsb
pop
repnz
dec
scas
adc
add
inc
add
lea
sbb
push
rcrb
xchg
push
inc
outsb
add
inc
lea
and
cli
leave
arpl
int3
or
and
sub
push
rclb
cmp
mov
push
jecxz
outsb
add
cwtl
add
aam
les
fs
sbb
xchg
mov
add
xor
push
enter
mov
or
dec
or
push
and
movb
adc
inc
outsb
inc
mov
mov
sub
sbb
data16
stos
movsb
sbb
mov
aaa
inc
pop
rclb
test
jo
stos
push
push
mov
push
add
adc
dec
sub
orb
xor
enter
dec
or
pop
adc
cmp
add
imul
xchg
adc
push
data16
int3
fwait
pop
add
daa
add
dec
in
or
mov
cmc
push
jb
jecxz
fstpt
mov
bnd
pop
pop
aam
jge
dec
es
add
add
test
add
dec
pop
mov
movsb
push
insb
xor
sbb
xor
sbb
dec
inc
sub
ds
and
push
icebp
mov
out
in
push
mov
mov
pop
xchg
aaa
test
lret
add
subl
test
cmp
ja
or
movsl
lods
add
mov
sub
icebp
jg
jbe
add
jle
adc
cmp
add
rolb
mov
mov
leave
cwtl
jne
and
hlt
leave
rclb
aad
sbb
sbb
push
push
sub
in
xchg
nop
or
mov
push
adc
lods
dec
mov
icebp
and
and
or
scas
inc
add
cltd
pop
adc
and
or
adc
mov
test
loopne
roll
mov
add
push
es
dec
cmp
in
or
clc
test
dec
mov
push
pop
xchg
xchg
and
inc
mov
xor
mov
fwait
adc
adc
sub
push
movsl
pusha
in
jne
cmc
cmpsl
mov
mov
nop
inc
lock
jo
ret
aas
andl
push
jbe
les
test
cmpsb
sub
or
mov
scas
incl
mov
mov
pop
cmp
fsubl
adc
fcos
add
ret
sub
fldenv
pop
test
inc
repnz
sub
lahf
push
fwait
jb
or
jecxz
es
sbb
pop
and
jo
pop
xor
jle
nop
or
test
adc
test
xchg
loope
cmp
fwait
jp
mov
jmp
and
icebp
mov
inc
enter
push
out
inc
ret
aas
iret
jae
xchg
pop
inc
jge
push
push
sahf
enter
adc
sub
dec
int
adc
fxch
fbld
push
jp
mov
pop
in
test
sbb
push
addl
pop
cmp
mov
cmpl
xor
push
and
jb
sbbb
pop
shlb
fnstcw
xlat
mov
test
loopne
popa
sub
sti
or
inc
jge
pusha
stos
xlat
std
test
or
mov
xor
shll
sbbl
enter
loopne
push
xor
or
xchg
xor
mov
nop
iret
ror
push
lcall
jb
incl
or
jecxz
mov
pop
inc
dec
test
inc
bnd
mov
arpl
jno
outsl
cmp
aaa
add
subb
cld
and
sub
rcl
or
push
lea
test
jg
push
pop
movsl
hlt
es
jne
cli
gs
sub
inc
adc
sbb
mov
push
dec
jmp
mov
or
cltd
fstl
dec
xchg
xchg
lock
out
cmc
adc
mov
jecxz
sbb
std
lods
xor
mov
push
dec
push
push
sbb
xlat
ret
cmp
test
mov
pop
push
xchg
jns
sbb
sub
rcl
or
ss
push
dec
outsb
enter
rcl
cld
flds
add
subb
or
push
shl
mov
push
pop
cli
decb
add
xor
nop
int3
add
mov
andl
imul
mov
jno
test
loope
adc
incl
daa
movsb
lea
sbb
dec
cs
or
cwtl
or
sbb
or
cmpsb
loop
jge
and
xor
mov
scas
das
cs
cmp
xor
rcrb
add
adc
adc
jne
test
inc
shl
mov
lds
mov
mov
sar
lcall
sbb
push
sbb
jo
xor
into
cmp
adc
std
daa
sbb
sahf
loope
jb
push
mov
gs
mov
shlb
add
push
loop
add
push
sbb
or
pop
pop
fldcw
cs
and
mov
imul
out
and
repz
sub
xor
sbb
orb
sbbl
inc
sbb
test
inc
sahf
lahf
inc
mov
dec
lea
stos
sahf
daa
xchg
inc
insl
mov
mov
and
aad
xor
cmp
pop
aad
mov
dec
adc
or
xor
xchg
xchg
les
lods
scas
xchg
bound
sarw
in
xchg
aam
xchg
cmc
mov
adc
repnz
js
test
cwtl
or
je
dec
jecxz
aad
jg
xchg
arpl
sbb
push
inc
sbb
test
cld
out
enter
jno
inc
mov
dec
mov
pop
test
jge
inc
movsl
xchg
lock
mov
imul
lret
daa
movsl
adc
or
ss
aam
int
push
mov
or
test
dec
lcall
xchg
test
aam
shlb
inc
leave
lds
pop
std
push
mov
daa
mov
stc
lahf
add
dec
pop
jo
mov
mov
pop
add
jg
gs
roll
clc
add
or
cmp
lock
pop
stc
or
std
pop
adc
enter
cld
pop
dec
insb
stos
ret
add
mov
mov
pop
popa
aad
sub
mov
jne
addl
mov
mov
enter
test
pop
aam
pop
add
pop
push
repz
inc
shl
mov
subb
mov
jl
add
shrb
out
cmp
xor
inc
or
and
sbb
loopne
data16
les
add
add
mov
inc
addr16
push
mov
or
push
add
cwtl
or
aam
iret
pop
or
sbb
fcompl
nop
push
lcall
sbb
fistps
add
push
push
add
jbe
cmp
sbb
lret
add
adcb
and
out
and
pop
mov
and
fimuls
fwait
rolb
mov
mov
pop
pop
adc
in
dec
insl
sub
lods
add
and
hlt
push
mov
int3
loopne
adc
pop
rolb
xchg
and
xchg
dec
inc
adc
pop
inc
je
dec
push
mov
dec
mov
rcl
add
cmpsb
outsb
call
mov
out
and
sbb
or
push
push
nop
incl
sbb
mov
cmp
sbb
in
add
cs
or
mov
or
int3
or
sahf
pop
in
adc
in
leave
movsb
or
sti
and
xchg
testb
pop
out
movsl
sub
ret
int3
imul
sub
subl
sbb
inc
push
clc
xor
or
push
xchg
cmc
adc
inc
xchg
fsubrp
inc
xor
jg
adc
add
sbb
icebp
ret
movsl
loope
shlb
rorl
movsb
lret
cmpsb
hlt
mov
or
push
andl
lcall
inc
and
ljmp
add
push
adc
jne
movsl
fs
nop
push
sub
mov
jnp
xor
dec
pop
push
stos
or
mov
cwtl
or
test
lret
and
inc
or
loope
push
cli
psrld
enter
outsl
rcl
and
mov
mov
sub
inc
loope
nop
pop
and
fwait
clc
mov
mov
imul
xchg
add
pop
or
fpatan
xchg
xor
aam
movl
icebp
pop
inc
dec
clc
jle
xchg
pusha
repz
rcrl
in
iret
je
jmp
imul
rolb
sub
in
test
push
fcompl
cli
aam
imul
ss
and
mov
aaa
loopne
das
fmul
sti
repz
cmp
sbb
mov
mov
rclb
xchg
add
test
mov
nop
cmp
aas
ja
js
sub
int
adc
pop
pop
fmul
and
xor
stos
jge
lods
imul
jmp
int3
add
adc
dec
or
mov
cmp
xchg
ret
pop
or
imulb
adc
and
scas
xlat
xchg
out
ret
adc
jmp
mov
pop
stc
inc
or
pop
or
sar
and
jmp
inc
xchg
dec
call
loop
and
xor
push
test
enter
mov
mov
cmpsb
jmp
push
ret
pop
addl
dec
stos
or
push
pop
xor
add
orb
add
cmpsb
jle
adc
pusha
test
add
and
sub
test
adc
mov
mov
dec
push
cmc
jg
mov
in
mov
lcall
mov
and
popa
cmp
xchg
addb
sbb
adc
das
push
add
dec
aas
mov
and
or
mov
cmp
out
cmp
and
icebp
mov
push
sub
mov
imul
lcall
or
fadds
push
or
ret
inc
add
es
in
push
xor
dec
iret
and
test
or
nop
jae
push
xchg
and
js
mov
pop
test
pop
mov
or
daa
jg
mov
fadd
xchg
xchg
iret
test
mov
daa
inc
inc
and
pop
out
adc
jg
pusha
add
ret
and
push
xor
shlb
mov
add
cld
cmpsb
fs
mov
inc
rcr
test
out
bnd
adc
int
test
and
je
dec
xor
rol
xchg
imul
pop
mov
push
xchg
repnz
imul
adc
and
pusha
jmp
add
cmovs
leave
adc
push
repnz
add
adc
sub
cmp
shll
test
push
test
cmpsb
hlt
push
inc
pop
xor
push
arpl
push
xchg
lahf
xor
movsl
insb
and
rorb
jno
bound
jno
sbb
xchg
scas
push
popf
mov
lock
fwait
xchg
jg
pop
shll
inc
add
pusha
mov
out
sbb
lods
xor
ret
pop
stos
mov
cli
das
mov
mov
pop
call
add
aad
sub
shlb
add
sbb
and
add
in
and
add
pop
jnp
movsb
aad
adc
jns
incb
push
xor
push
jbe
inc
jge
push
mov
xorl
add
pop
xchg
xor
inc
cmc
inc
test
movsl
xor
add
mov
mov
push
cmp
mov
push
add
arpl
adc
stos
mov
add
mov
inc
and
std
test
adc
ja
push
je
adc
inc
push
jo
sbbb
rcrb
fxam
add
mov
add
inc
pop
loop
cmp
push
sti
cli
or
cmp
add
adc
imul
push
jmp
fidivl
sarl
add
cmp
or
push
outsl
dec
mov
aam
mov
sbb
mov
or
adc
je
and
mov
pop
cmc
popl
and
icebp
stos
rcll
push
add
dec
push
lods
adc
xor
pop
cmp
imul
mov
inc
pop
or
inc
ret
rcrl
pop
sbb
movsb
push
leave
mov
or
add
xchg
mov
xchg
push
lahf
cmp
popa
in
movb
and
sahf
in
inc
test
add
and
int
jb
sub
cmp
push
xor
cltd
pop
fisttpl
scas
pop
push
ret
pop
pop
inc
dec
mov
push
incl
mov
xor
ja
ja
add
lea
movsl
xorb
fldl
shll
in
add
rclb
cltd
jg
adc
and
xlat
mov
dec
push
andl
pushf
sub
call
xchg
lahf
xchg
scas
and
stos
je
int
test
or
push
imul
add
loopne
pop
xor
addl
cmpsl
mov
mov
sub
cmp
repnz
aas
cmc
in
xor
jecxz
movsb
xchg
pusha
or
add
sbb
mov
roll
cmp
repnz
sub
sbb
pop
and
loopne
test
insl
lret
mov
call
dec
addl
xor
cmpsb
sbb
cltd
sub
rorb
orl
jg
nop
jb
sahf
lret
mov
sub
mov
clc
adc
pop
xlat
xchg
and
stos
scas
sub
push
cwtl
jno
add
mov
push
adc
adc
push
push
inc
movl
mov
pusha
sbb
jg
and
mov
mov
mov
sub
sub
and
and
std
lods
andb
lds
jge
sbb
sbbb
cmp
adc
fidivl
inc
movsb
inc
shrb
or
or
inc
jecxz
cmp
and
pop
loope
fs
stos
jg
jecxz
add
inc
pop
mov
insl
adc
sub
push
outsl
pushf
fcompl
mov
sub
mov
mov
xor
push
and
inc
ljmp
stos
or
repz
inc
js
lret
inc
enter
xorb
movsb
cmc
xchg
add
or
xchg
loopne
inc
inc
mov
mov
mov
pop
jb
add
or
movsb
cltd
inc
add
das
cltd
inc
add
mov
sarl
popf
mov
test
sbb
mov
and
aaa
or
arpl
imul
outsb
push
pop
inc
sti
incl
add
inc
in
dec
dec
movsb
push
push
mov
subb
ror
mov
add
adc
insb
push
push
push
jmp
imul
jmp
pop
mov
shll
add
cs
fisubrl
fadd
scas
sub
in
pop
sub
shrb
and
in
jl
push
gs
test
fwait
cmc
lcall
loop
subb
mov
mov
test
test
es
push
jne
jne
inc
fstl
mov
rorb
cmpsl
test
sub
in
bsf
mov
aas
push
xchg
push
shlb
and
sbb
rorb
imul
push
xchg
xchg
popa
adc
ret
and
cmp
movsb
adc
add
add
cmpsl
roll
shrl
jge
push
test
adcb
xor
loopne
mov
filds
and
addr16
cmc
dec
add
mov
ret
and
sbb
push
arpl
loop
push
jmp
add
scas
bound
jmp
xor
mov
add
xchg
lea
mov
mov
fimull
add
imul
and
push
cs
xchg
xchg
push
pop
test
decb
ljmp
adc
cli
sarl
adc
stos
inc
dec
push
cltd
stc
jmp
sbb
pusha
jmp
jge
inc
lods
inc
ds
dec
movb
addr16
and
and
aaa
adc
lret
ja
dec
rol
inc
shll
cmc
pop
icebp
adc
sub
xor
mov
movsb
or
mov
or
mov
add
jae
pop
adc
cmp
jg
adc
ljmp
enter
mov
jmp
inc
movsl
test
sub
and
ljmp
and
dec
insl
add
clc
sub
aad
inc
sbb
lds
or
xor
push
call
out
es
add
adcl
cmp
jae
aas
and
mov
pop
subb
aam
test
mov
xchg
add
xchg
jo
rorb
mov
adc
jno
addb
and
hlt
shlb
adc
add
sbbb
js
jne
and
lods
dec
or
mov
jae
adc
je
jne
cld
mov
inc
test
dec
int
push
nop
ljmp
mov
and
dec
jecxz
int
mov
test
cmp
std
mov
or
movsl
xlat
xor
mov
psubb
gs
and
or
fmuls
add
fisttpl
xchg
pshufw
into
ljmp
push
shlb
add
inc
adc
dec
mov
test
les
scas
and
cmp
aas
inc
mov
int
and
lods
das
ljmp
pop
and
mov
rorb
inc
adc
push
cs
lods
jno
pop
ret
iret
std
aas
movsb
shll
les
cmp
mov
subl
es
test
xor
lds
jne
shl
ss
fwait
mov
addb
xchg
jno
cmpsb
dec
sahf
inc
xorb
mov
pop
movsl
int3
cmp
sbb
in
arpl
sub
sbbl
pop
call
mov
mov
dec
and
cwtl
sahf
nopl
mov
or
rcll
enter
shlb
xchg
sub
mov
roll
or
push
pop
shlb
jg
push
push
xchg
les
push
or
icebp
push
mov
inc
bound
je
inc
fidivrl
pop
mov
fs
call
push
mov
xor
add
icebp
xchg
adc
mov
jne
mov
std
out
mov
aas
add
adc
dec
sbb
paddq
test
add
cmp
or
fcomps
add
iret
xor
push
test
mov
xchg
pop
xor
add
les
push
jle
inc
add
jns
cmp
add
jno
or
enter
push
sbb
jp
lahf
adc
xchg
dec
ret
rorb
bound
and
mov
or
push
and
inc
push
out
decl
mov
sbb
inc
or
mov
or
fsubl
and
popa
push
mov
adc
or
add
shll
or
lea
push
mov
inc
pop
xchg
xchg
ds
push
or
rolb
inc
pop
aam
inc
leave
and
or
push
xor
or
rcrl
lcall
es
mov
or
adc
movsb
movsl
inc
rolb
pop
enter
verw
int3
ficoml
or
subb
call
sbb
push
test
fidivs
or
or
adc
jns
dec
jl
push
std
je,pt
and
daa
dec
ret
jmp
or
lea
lcall
aas
das
push
jae
push
repnz
fildl
orl
loopne
shll
or
std
inc
add
add
sbb
sub
or
popa
dec
fnstenv
es
push
add
add
push
pop
or
jnp
stos
nop
lcall
fnstenv
mov
out
dec
push
mov
lret
ret
mov
xchg
xor
lea
pop
inc
mov
arpl
pop
ret
push
test
adc
dec
xor
xor
add
loopne
jne
adc
sub
inc
sbb
xor
adc
ret
inc
adc
or
fisubs
hlt
adc
and
mov
push
push
in
push
lds
cmpsl
add
sbb
xor
dec
inc
enter
jl
mov
scas
data16
jb
push
les
outsl
pop
xchg
je
ret
mov
or
and
push
mov
dec
mov
mov
shrb
mov
adc
sarb
add
enter
jecxz
popl
iret
addb
test
add
add
in
out
in
pop
jp
test
add
xor
add
xchg
inc
out
xor
add
pushf
dec
sub
ljmp
jg
dec
rcrl
inc
add
pop
popf
adcl
loop
inc
test
add
inc
dec
or
add
gs
sahf
aam
adc
mov
sub
jl
xchg
inc
pop
adc
rorb
sub
sub
inc
push
das
add
xchg
mov
add
mov
mov
add
arpl
dec
pop
clc
jo
sub
add
adc
mov
lahf
mov
sbbl
dec
lcall
adc
outsb
loope
popa
inc
jle
adc
and
loope
cmp
sbb
stc
mov
mov
jno
cmp
add
outsl
inc
add
lds
pop
and
mov
nop
dec
mov
int
in
adc
xchg
nop
add
jmp
mov
inc
imulb
jg
pop
xor
pop
xor
and
pop
std
push
adcb
jge
les
cmpsb
sbb
fcoml
mov
inc
imul
sbb
mov
add
mov
into
add
test
insl
xor
and
aas
nop
gs
or
lret
xchg
scas
sub
call
outsl
addb
push
xchg
jbe
in
inc
fistps
cmp
push
adc
pop
xor
mov
push
push
lock
out
xor
je
xor
add
test
jbe
jmp
loope
leave
sbb
and
push
cmp
xchg
mov
or
xchg
sbb
icebp
adc
add
jnp
sub
stos
or
xchg
xlat
jnp
sbb
sbb
or
xchg
inc
jae
sbb
jne
movsb
push
sub
je
cmp
xor
fildll
nop
daa
iret
rclb
repz
rclb
xlat
adc
stos
xor
fwait
cmc
mov
cmp
cmp
popa
cmp
xchg
add
or
mov
push
sub
rorb
push
cmp
roll
push
pusha
push
jno
xor
and
adc
mov
mov
and
pusha
sub
test
cmp
add
popa
aad
dec
pop
add
add
adc
bnd
xchg
adc
push
call
mov
filds
call
fistl
aam
call
jb
xor
push
stos
mov
leave
addl
in
dec
push
clc
inc
repnz
jnp
testb
in
orl
in
push
add
hlt
call
add
mov
insb
popl
inc
sbb
or
lcall
fldcw
dec
adc
cltd
cltd
push
ljmp
repz
andb
sbb
add
fstps
cmpsl
push
jl
dec
stc
mov
inc
inc
push
push
arpl
push
lock
xor
add
pop
cs
push
sbb
xlat
pop
inc
cmp
add
mov
push
add
out
sbb
xchg
inc
cmp
and
roll
outsb
jl
aad
cmpsb
es
cmpb
pop
pop
and
movsb
jmp
cmp
imul
add
flds
lock
pop
or
add
and
or
cmpl
mov
or
or
outsl
inc
mov
fsubs
jl
mov
insl
jecxz
movsb
xchg
fstl
cld
sub
inc
and
scas
and
dec
inc
pop
sbb
mov
sub
subl
inc
mov
adc
fbld
sbb
or
cmc
push
or
cmp
in
aad
mov
mov
mov
mov
nop
sub
inc
push
push
mov
insb
mov
inc
sbb
mov
xor
adc
mulb
mov
mov
cmp
inc
ds
or
sti
sbb
aas
and
fwait
cld
push
and
jb
inc
lock
adc
mov
jns
and
add
or
inc
loopne
sub
mov
adc
push
and
jnp
inc
lods
pop
adcl
movsb
imul
adc
addl
or
popa
rorl
pusha
inc
cmp
adcb
aam
xor
push
lea
iret
mov
mov
rorb
xchg
push
or
push
and
roll
test
and
mov
dec
popf
cld
testb
scas
dec
add
mov
add
adc
lods
out
and
dec
loopne
fs
cld
jp
mov
lock
in
stos
shrb
push
xchg
adc
call
js
dec
push
or
xchg
pop
and
and
fs
lcall
adc
adc
roll
push
dec
sarl
sub
or
add
stos
adc
and
cmp
scas
push
adc
add
xchg
je
dec
or
push
or
xlat
pop
fmul
add
test
mov
sub
lcall
push
ljmp
dec
jo
sub
mov
test
xor
or
movsb
mov
lock
out
cmp
repnz
sub
cmp
notb
xor
jno
clc
inc
mov
cvtps2pi
push
test
inc
popa
loopne
sub
mov
in
xlat
push
inc
inc
mov
cmpb
cs
test
sub
dec
lcall
sub
lcall
je
jecxz
cmpsl
sub
sub
pop
mov
imul
xchg
add
cwtl
mov
adc
bound
cli
loopne
or
or
subl
sbb
mov
jo
inc
xchg
nop
xor
loope
aad
inc
sahf
xor
push
fnstenv
add
xor
adc
adc
xchg
pop
ds
dec
dec
mov
cmpsl
cmpsb
lcall
rcll
dec
lds
jno
cmp
push
cltd
add
push
lret
fsubr
test
add
add
adc
dec
lret
les
dec
adc
sub
add
movl
pop
xchg
xchg
push
or
push
sub
cmp
mov
xor
jmp
mov
mov
and
aad
cltd
loop
jne
repz
and
lahf
and
movsl
test
mov
jle,pn
insb
nop
int3
rol
ja
das
decl
add
and
stos
pop
sbb
jne
cmp
add
icebp
lret
repz
pop
js
sub
and
lret
lret
dec
out
inc
roll
aas
pusha
cwtl
jo
int
push
fldt
lcall
pusha
inc
mov
push
sbb
shll
aas
loop
cmp
cltd
cmpb
and
push
jo
or
imul
dec
insl
push
popa
and
lea
xchg
daa
jb
push
add
adc
imul
movsb
cmp
xchg
hlt
sub
stc
icebp
sbb
push
int3
leave
jmp
test
adc
scas
push
aas
add
or
inc
and
inc
xchg
dec
cmc
out
mov
add
sub
stc
inc
mov
in
out
add
push
sbb
flds
xor
sub
xchg
les
mov
mov
adc
cmp
cwtl
cmpl
cmpsb
lcall
xorb
jo
cmp
stc
inc
add
std
or
movsb
and
addb
movb
sbb
sbb
inc
fcomps
subl
nop
push
jo
ret
sub
cmp
rcrb
sbb
stos
push
cmpsl
add
xorps
push
aad
clc
dec
loop
mov
int
aas
rcll
push
and
movzwl
into
push
xchg
dec
fsubl
ja
pop
pop
dec
in
int3
xor
hlt
lods
retw
sub
aam
mov
pusha
out
pop
aad
es
pop
popa
bound
and
xchg
jmp
cmp
mov
xchg
or
out
cmpsb
cwtl
sub
stos
push
lret
cmpsl
cli
jbe
add
cmp
jno
cmp
fs
inc
inc
add
pop
xchg
out
leave
jle
popf
out
inc
loope
xor
push
ljmp
and
and
add
mov
and
add
shlb
je
inc
adc
test
push
or
inc
xor
cli
jnp
or
ret
in
mov
adc
jno
pop
mov
xor
add
mov
pop
add
mov
lds
cmpb
dec
sub
xchg
loop
dec
xor
repz
sub
mov
aas
or
adc
add
sub
lock
xor
mov
or
and
hlt
adc
pop
test
xor
test
lods
sub
outsl
int
dec
or
push
xor
inc
adc
and
mov
js
cmc
push
add
test
jle
xchg
cwtl
dec
pop
andl
add
testl
mov
cmpsl
inc
nop
cmp
jge
jo
out
xor
movl
cmpsl
dec
and
jmp
popa
dec
mov
divb
jge
dec
and
inc
jp
nop
push
and
add
js
mov
lods
jns
test
jnp
movsb
push
sarb
test
xchg
sub
into
and
push
lods
data16
jae
lods
js
inc
xor
js
push
xchg
sbb
jns
push
mov
cmp
mov
push
dec
jmp
xchg
mov
dec
sbb
inc
mov
inc
repnz
inc
rclb
sbbl
mov
inc
sub
divl
ja
add
dec
es
sub
mov
mov
push
insl
cmp
or
loope
mov
and
sbb
test
and
dec
inc
sbb
inc
add
icebp
sub
roll
fcomi
xchg
sub
movsb
adc
shl
sub
imul
and
lods
xchg
cs
xor
xor
adcl
cmp
ss
mov
test
pop
push
test
out
cmpsb
dec
loopne
adc
add
clc
xor
insl
popa
fdivr
sub
mov
pop
inc
mul
jo
adcl
xor
les
xor
aad
int
or
jnp
jns,pn
sbb
or
dec
and
pop
or
jae
pusha
xchg
das
push
pusha
punpcklwd
jne
shrl
les
add
sbb
mov
jge
loope,pn
and
add
aaa
iret
es
cld
in
mov
loope
dec
or
sub
xor
inc
mov
add
iret
test
cmp
sub
icebp
dec
aam
jmp
add
cmp
pop
inc
add
mov
mov
stos
pop
xlat
inc
lock
sub
stos
sbb
or
mov
mov
dec
xchg
xchg
je
mov
mov
xchg
pop
or
mov
and
add
sbb
cmp
outsl
pop
lahf
cmp
movsb
pusha
and
addl
mov
cmp
rcll
and
adc
adc
lret
in
mov
push
adc
gs
adcb
sub
sbb
mov
and
adc
sub
sub
sbbl
xchg
scas
or
jnp
enter
xchg
or
mov
cmp
or
dec
dec
adc
jecxz
loop
inc
sahf
out
push
call
daa
jne
sbb
jo
jecxz
dec
lds
jo
xchg
call
sub
and
andb
insb
mov
unpcklps
push
mov
lock
iret
jle
add
scas
and
adcb
adc
sarl
fs
loopne
and
les
imul
xchg
rcll
popf
mov
stc
and
adc
jmp
push
mov
mov
inc
sub
sbb
push
jge
fsubrs
or
xchg
mov
mov
add
imul
mov
inc
mov
xchg
movsl
dec
push
test
push
divb
or
mov
push
jno
add
push
mov
jne
dec
sbb
push
outsb
or
push
inc
dec
jae
es
test
insb
mov
cmpsl
inc
sub
aam
dec
and
mov
in
sub
mov
pop
pop
cmc
add
addb
xor
test
add
xor
and
jne
push
pop
lds
sub
pop
fisttps
or
gs
push
leave
adc
cwtl
pop
and
xchg
push
mov
cs
loope
adc
push
fnsave
dec
add
aam
or
test
fs
stos
pop
ss
inc
ja
cmpsb
or
vpcmpeqw
jnp
popf
add
dec
js
call
pop
xchg
push
and
adc
mov
repnz
sbb
jno
adc
test
adc
push
push
mov
aas
adc
leave
or
pop
shrb
inc
lock
inc
sbb
ret
sti
inc
lock
loope
pop
adc
xor
add
stc
ret
ds
add
and
mov
pop
mov
incb
mov
add
daa
jne
push
fildll
outsb
insl
sub
dec
sbb
fisubl
test
insl
xchg
add
lds
sbb
pusha
or
aas
add
push
add
dec
pusha
mov
adc
add
push
cmp
pop
repz
adc
push
cltd
ds
dec
add
fcmovu
pushf
dec
and
imul
add
orb
mov
lret
lods
mov
xchg
cmp
and
fs
shrl
or
mov
push
push
xor
fbld
rorl
mov
sub
xor
int3
rcl
push
aad
xor
orl
or
adc
xor
inc
inc
xor
fistps
test
jne
push
adc
add
loope
loop
xor
add
pop
jbe
jecxz
dec
test
push
jp
jae
mov
aas
and
and
mov
mov
cmpsb
data16
test
sbb
and
mov
loopne
xor
lea
cmp
push
dec
dec
add
std
cwtl
sbb
push
shlb
cltd
repz
xchg
lahf
out
rcl
inc
and
cld
incl
add
sbb
aaa
sub
inc
mull
bound
arpl
jae
scas
sarl
clc
inc
sbb
push
sbb
mov
xchg
ret
addb
cmp
insl
xchg
pop
or
push
pop
test
adc
mov
pop
lds
cmpsb
mov
xchg
sbb
mov
push
pushl
jno
mov
push
inc
mov
xlat
pop
push
cld
cmp
repnz
les
lods
pop
xchg
mov
xchg
add
shrb
cmove
test
andb
pop
adc
or
es
loopne
pop
xor
adc
leave
push
adc
add
pop
fstl
sbb
lea
push
push
or
sbb
mov
xor
adc
lret
sub
mov
test
rcll
pop
rclb
int
movsl
or
push
insl
loopne
push
popa
xor
dec
mov
imul
cs
sbb
mov
pop
js
rcr
mov
and
test
xor
sub
inc
mov
mov
sbb
xchg
and
jmp
push
cmp
adc
adc
pop
adc
leave
jo
add
mov
cltd
cmp
cmp
mov
fs
test
pop
loopne
xor
rol
cmp
jg
insl
mov
popf
cld
mov
inc
jno
jl
sbb
push
inc
in
adc
mov
icebp
mov
xor
out
inc
ficoml
rolb
lea
hlt
cmp
dec
std
mov
jnp
dec
xchg
add
or
sbbl
bound
test
cmp
stos
mov
ss
pop
jo
sbb
aas
sub
or
imul
add
fnstenv
add
dec
sub
ret
xor
mov
ret
lods
xchg
in
xor
and
adc
sub
xchg
jge
inc
fdiv
or
jecxz
cmp
sub
and
mov
imul
jg
loop
loope
lea
mov
push
aam
inc
add
aad
sbb
mov
xchg
cmp
adc
and
test
popf
shl
sub
out
push
js
mov
add
sub
sbbl
jns
jnp
fstps
add
or
pop
lds
popa
jecxz
mov
add
lock
adc
movsb
sub
add
subl
add
xor
rcr
jnp
push
adcb
inc
sub
dec
add
das
das
adc
mov
dec
icebp
adc
daa
or
xchg
inc
imulb
push
add
cmpb
loopne
repz
mov
pushf
lock
xchg
dec
fbstp
neg
outsb
or
stos
push
jmp
dec
or
fstl
mov
jno
inc
fcoms
and
xchg
pop
clc
jle
cltd
add
cmp
fs
fmull
aad
outsl
shrb
js
jo
dec
cmp
dec
jae
push
pop
lahf
sbb
dec
push
or
dec
test
mov
xchg
lret
mov
and
faddl
xchg
outsb
ljmp
and
lock
jmp
test
pop
push
sti
gs
lock
and
xchg
insl
xor
sub
sbb
aam
shll
xorl
mov
mov
xchg
ret
dec
pop
test
andb
pop
xchg
push
movb
or
mov
out
push
adc
lock
call
cwtl
lock
dec
add
scas
divb
sub
jo
leave
dec
inc
jne
xchg
bswap
pop
ja
and
inc
adc
push
xor
xor
mov
push
and
inc
lea
pop
pop
shrb
aad
imul
stos
xorb
in
popa
cmp
leave
and
mov
xlat
aad
bound
cmpsl
icebp
and
lret
sbbl
sbb
mov
les
mov
adc
xchg
sbb
inc
cmpsl
fnstenv
hlt
gs
mov
imul
lds
aam
rcl
pop
sbb
mov
lahf
outsb
and
xchg
mov
jecxz
cld
fwait
inc
xor
pushf
iret
add
dec
jo
aaa
add
sub
loop
std
rorb
nop
call
mov
xor
pop
push
or
lret
push
dec
dec
push
mov
mov
inc
pop
rcrb
mov
jne
add
xchg
xchg
lods
lock
lds
mov
jns
add
cmp
ja
jg
rdtsc
inc
popf
push
jno
mov
adc
popa
or
lret
mov
inc
and
popa
ret
movsb
inc
sbb
pop
aad
jno
add
jno
jo
in
test
sub
dec
ret
xchg
pusha
inc
push
clc
roll
lods
mov
inc
sbb
loope
adc
add
adc
sub
addr16
mov
sbbb
jne
mov
push
rolb
test
rcr
fldt
cmp
cmp
cmp
add
push
fnstsw
movsl
adcl
inc
mov
shr
xor
enter
jns
or
xchg
fwait
xor
add
jo
xchg
cmpsl
jb
call
fucom
lds
cmc
jae
rclb
mov
test
mov
aad
push
add
test
or
xlat
add
ljmp
and
jmp
leave
mov
push
pop
mov
fildl
frstor
mov
adc
sbb
push
or
frstor
pop
in
jae
push
or
js
pop
bound
or
and
jnp
cmp
mov
mov
lret
xor
push
xchg
fisttpl
sbb
and
loopne
shll
push
rorl
push
repz
lret
cmp
pop
mov
push
mov
add
movsl
je
jne
add
test
dec
inc
mov
adc
rol
test
lock
pop
test
mov
xchg
mov
adc
lret
add
pop
mov
push
fisttpl
jbe
aam
aam
cmp
add
lret
inc
or
inc
insl
xor
or
popf
ds
roll
pop
ljmp
test
es
pop
and
sub
pusha
test
inc
loope
jae
mov
psrad
orl
inc
mov
mov
xor
pop
je
push
mov
adc
je
inc
les
add
ja
icebp
pop
xchg
jp
fs
movsb
add
aam
add
jg
jns
lret
jo
cmp
fadds
mov
jne
mov
lahf
lret
lods
inc
enter
cs
lods
push
sbb
mov
popf
dec
add
stos
pop
adc
imul
nop
ss
out
orb
ds
jle
xchg
add
movsb
test
dec
or
sar
mov
adc
adc
mov
mov
adc
ds
adc
cltd
jecxz
adc
xchg
fists
ffreep
orb
xchg
mov
xor
inc
mov
in
cmp
xchg
enter
dec
xchg
rorb
mov
test
push
out
sub
inc
insb
push
xchg
mov
inc
jne
insl
sub
inc
stos
add
rorb
fwait
es
add
icebp
xchg
dec
pavgw
stos
inc
xchg
pushf
jo
add
enter
in
jg
xor
push
dec
cmp
mov
mov
daa
loopne
mov
adc
jne
jno
inc
add
jl
inc
mov
pop
clc
mov
push
push
mov
bound
mov
dec
clc
sbb
test
ret
insl
push
test
lock
jge
pop
enter
add
and
mov
les
sub
test
roll
push
pop
loope
lahf
loope
pop
jo
mov
movsb
cs
jmp
or
shll
jbe
dec
xor
ret
mov
mov
push
add
jp
jno
fldl2e
popa
dec
lea
orb
test
and
and
dec
mov
stos
sub
jne
or
shrb
xchg
stos
cs
pop
int
ja
sub
dec
cmp
and
stc
adc
or
jge
lock
add
and
cmp
call
cmp
aaa
repz
jns
jecxz
dec
insb
push
adcl
cmpsb
jb
mull
xor
pop
icebp
add
imul
inc
cmp
in
lcall
or
test
dec
loopne
jmp
push
ficoms
lock
xor
scas
aas
xchg
sbb
cmp
sub
lods
jne
leave
movsb
adc
pop
cmp
and
sbb
inc
xor
xchg
aam
push
xor
cmp
xchg
adc
fnsave
or
jnp
mov
nop
pop
or
push
and
insl
xor
mov
sub
and
pop
inc
adc
push
test
fiadds
faddl
mov
shrb
push
inc
and
and
nop
lret
pop
les
pusha
mov
sub
inc
mulps
or
lods
test
lods
xorl
push
dec
xor
scas
sub
fwait
pop
inc
add
xchg
inc
cmpsl
cmp
testb
das
inc
mov
daa
or
jmp
adc
out
inc
js
inc
lret
cmpsb
test
insb
pop
add
jmp
shrl
pop
das
lods
cmp
test
add
inc
hlt
and
stos
pop
xchg
pop
insb
or
push
xor
dec
cmp
fs
push
loopne
or
add
shrb
je
add
fwait
jge
inc
movsl
jno
mov
lret
imul
cmp
push
adcb
pop
add
push
inc
pop
dec
dec
cmpsl
sub
popa
mov
dec
or
mov
andl
jns
push
dec
test
enter
inc
pop
jmp
jecxz
mov
in
mov
imul
xor
fs
inc
movl
ds
sub
movlps
jb
sahf
dec
adc
pop
mov
mov
adc
mov
imul
mov
mov
cli
adc
add
sub
xchg
lcall
push
cs
dec
cmp
pushf
les
push
fsts
shll
jae
pop
inc
pop
xchg
and
jo
and
rcll
xor
mov
fstps
and
pop
pop
xor
pusha
cmp
insb
pushf
jg
xchg
and
pop
les
xor
pop
dec
inc
mov
sub
cmp
sbb
dec
iret
test
xor
inc
mov
loope
imul
daa
push
lods
xchg
adc
sbb
stos
stc
bound
sbb
jo
mov
sbb
add
add
pop
inc
xchg
hlt
and
pop
and
and
adc
nop
out
or
pop
xor
repnz
lret
push
pop
sbb
movsb
idiv
inc
adc
pop
in
jmp
push
xchg
xchg
scas
or
adc
pop
fildll
nop
dec
mov
xchg
andl
jne
adc
xor
inc
xor
sub
dec
pop
in
movsl
jg
mov
pop
mov
dec
push
adcl
cwtl
outsb
push
sbbb
cmp
mov
adc
in
dec
popf
rolb
arpl
adc
and
inc
or
leave
cmpl
bound
add
sbbl
jle
push
mov
jns
adc
dec
movsl
leave
fucom
sub
sarb
imul
je
xchg
out
popa
inc
insl
mov
sarl
add
inc
mov
test
mov
rclb
push
test
and
mov
inc
mov
adc
rep
rclb
cld
mov
icebp
push
cli
xchg
sbb
not
cmp
add
pop
pop
cmp
push
mov
push
repnz
or
repnz
pop
mov
xchg
xchg
pop
push
inc
fldenv
jne
sub
sbb
xchg
shrb
enter
mov
lods
mov
jo
and
mov
inc
xchg
dec
jno
stos
icebp
fidivl
and
cwtl
mov
dec
cmpsl
mov
and
pusha
or
enter
out
outsl
push
dec
sbb
fcoml
lods
sub
or
add
dec
or
push
incl
ret
aam
fsubrl
push
push
cmp
mov
jo
sbb
scas
inc
adc
sub
mov
or
adc
adc
xchg
sahf
jae
addb
and
mov
xor
testl
sahf
pop
out
mov
in
pcmpeqb
inc
sub
xor
jge
test
fadds
js
shrl
inc
dec
cmp
clc
pushf
add
adc
es
out
push
adc
sub
shrb
pusha
sbb
xchg
mov
ret
arpl
dec
cmp
add
push
shll
inc
ret
cmpl
inc
ss
sub
call
sub
push
dec
mov
add
dec
lods
add
adc
aam
jne
xchg
xor
cli
fstpt
arpl
adc
xor
jmp
and
test
cmp
je
mov
punpckldq
testb
mov
incl
aaa
lods
mov
or
ss
push
jns
aas
pop
sbb
xor
xor
js
sub
adc
pop
nop
daa
mov
xorb
add
jp
lar
lock
stc
cwtl
xlat
xchg
xor
sbb
adc
insb
adc
or
enter
insl
sbb
pop
push
jmp
fildll
rcl
push
mov
mov
mov
inc
fcmovnu
aad
mov
add
nop
sub
sbb
aad
mov
rol
mov
test
xchg
push
roll
jecxz
xorl
arpl
push
and
sub
xchg
movsl
xor
dec
cmp
inc
add
mov
jo
add
xchg
orb
mov
jne
dec
or
or
sub
leave
mov
and
sbb
push
les
or
daa
or
mov
popa
or
adc
mov
xor
loope
push
sub
test
mov
icebp
incl
pop
push
mov
stc
sti
mov
push
push
dec
cmp
std
sbb
pusha
arpl
mov
shrb
xor
xor
and
cmp
jg
clc
add
push
jae
mov
cmp
mov
std
mov
dec
repnz
sub
push
mov
add
dec
add
push
and
adc
dec
loop
mov
fstl
push
xor
mov
adc
movsl
mov
sti
pop
jae
nop
xchg
push
xor
addb
aaa
or
enter
jl
arpl
add
sub
es
sub
push
push
shlb
or
test
lret
call
cmp
movsl
or
cmp
lret
xor
in
or
sbb
shrl
cmp
sub
or
jo
movsl
jo
adc
int
test
jne
iret
loopne
daa
add
push
push
mov
jg
and
push
dec
jmp
mov
pusha
aaa
test
fstp
xor
inc
xor
pop
notl
cmp
pop
movsb
jge
test
mov
xor
add
push
lret
mov
push
jl
test
loope
shl
inc
dec
lock
xor
push
cmpsl
lcall
sahf
add
dec
adc
add
mov
aad
mov
nopl
test
out
sar
add
jne
addr16
inc
add
lret
outsb
add
sub
scas
or
test
push
jecxz
mov
les
fcomip
sub
dec
out
jg
fs
stc
shl
mov
add
xor
xor
sbb
lock
mov
lods
push
sbb
int3
xchg
xor
mov
lea
add
add
sub
xor
xchg
adcl
inc
cltd
or
insl
fnsave
sahf
push
mov
add
jno
pop
in
push
xor
and
rcll
xchg
fidivl
add
inc
lods
mov
mov
inc
lods
sbb
sti
addl
sbb
pop
int
enter
pop
fwait
xor
ja
out
test
add
pop
sbb
arpl
mov
push
push
pop
jo
mov
imul
inc
inc
cwtl
nop
sub
or
mov
adc
sub
adc
inc
movsl
add
fiaddl
aad
les
fnstenv
cmpsl
sbb
lods
pop
lcall
cmpb
mov
scas
sub
add
imul
mov
imul
sarl
sbb
test
jmp
xchg
ret
fdivl
pop
pusha
and
or
sbb
mov
add
rorl
sbb
mov
loop
in
push
or
xchg
into
pop
pop
pop
lods
sbb
out
add
mov
movsb
and
mov
jle
mov
cltd
popf
bound
xchg
hlt
je
data16
outsb
sub
loop
and
push
es
add
push
insb
enter
bound
outsb
xacquire
xchg
add
cmp
cmp
lods
aas
mov
into
out
cmc
cmp
inc
pop
aam
mov
cmpsl
nop
or
into
rclb
shlb
adc
cmp
xchg
ljmp
sub
cmpsl
out
cmp
jmp
dec
testl
push
gs
dec
cmpsl
test
scas
outsb
push
stos
movsb
rol
add
pop
lods
insb
imul
dec
mov
cmp
movsb
mov
je
dec
call
leave
xchg
das
mov
cld
bound
in
out
mov
bound
shll
scas
or
loopne
push
adc
sub
push
ja
xor
stos
pop
ja
es
je
cmp
cmp
mov
or
mov
cmpsl
jl
ds
mov
pusha
inc
cmpsl
sub
xorb
mov
or
push
testb
popa
and
add
test
sub
xor
xchg
pop
hlt
fs
mov
jne
movsb
and
adc
repnz
xchg
sub
nop
add
pop
dec
pop
dec
rcrb
mov
aam
xor
ljmp
push
push
aam
add
push
and
push
add
sbb
pop
lock
mov
nop
dec
mov
fld
or
jmp
popa
push
sbb
sub
jmp
sbb
push
loop
jecxz
pop
add
aad
cwtl
and
and
inc
or
je
in
insl
push
sub
xchg
or
jg
adc
pop
addr16
sub
loope
or
bnd
push
popa
aaa
dec
stos
andl
sub
and
repz
pop
or
negl
mov
inc
insl
mov
jg
add
dec
cmp
pop
mov
pop
faddl
fs
arpl
mov
testb
push
rcl
jg
push
sbb
dec
lds
xor
cwtl
dec
addl
imul
inc
pop
and
std
daa
push
outsb
nop
jp
add
or
push
inc
pop
push
lods
and
sbb
sti
fbstp
out
sbb
rcl
fiadds
sbb
push
mov
jmp
daa
inc
jae
push
pop
cmpsl
stos
xlat
sub
xor
dec
inc
push
or
bound
scas
mov
adc
xchg
out
push
inc
shrd
shlb
mov
adc
stos
sub
cmpsl
dec
jo
je
inc
pop
xchg
sub
sbb
push
pop
loop
dec
mov
popa
inc
inc
and
lret
popa
ret
aaa
pop
repz
pop
push
push
ss
lds
insb
and
mov
xor
mov
mov
inc
mov
js
ficomps
dec
pop
mov
rorb
nop
icebp
cmp
xchg
adc
jae
cli
push
add
pop
mov
loope
xor
ret
pop
adc
fld
shrb
add
icebp
add
dec
push
enter
cs
clc
sti
xchg
xchg
fcoml
mov
xchg
test
sub
xor
movsb
xchg
in
adc
or
pop
inc
sbb
fwait
leave
jae
push
hlt
cli
fnstenv
sub
add
mov
outsb
je
leave
sbb
jl
sub
add
clc
or
inc
shrb
cmp
adcb
adc
daa
inc
sbb
jne
dec
fbld
jbe
ret
jl
out
xor
leave
gs
jle
adc
push
in
ficoml
pop
aas
inc
and
sub
push
mov
into
xor
dec
icebp
dec
push
xor
cmp
in
dec
popa
and
or
inc
mov
out
orb
daa
cmp
xor
and
shrb
jle
dec
cmpb
roll
add
addr16
ret
add
dec
ljmp
cmc
or
inc
xchg
and
push
sbb
add
pop
dec
ja
movsb
xor
ljmp
push
sub
adc
repz
xchg
fidivrl
sbb
jmp
xorb
adc
xor
mov
xchg
rcl
addl
adc
adc
dec
xchg
scas
xchg
jnp
xor
cmc
inc
mov
imul
bound
mov
je
and
push
ret
scas
pop
orl
sub
je
loopne
jg
jle
dec
inc
push
fstpl
pusha
adc
pop
push
xor
or
dec
in
adc
sbb
pop
pop
dec
nop
lods
cmp
cmpsb
jg
js
ficompl
ror
js
test
lods
dec
mov
rorl
add
in
cs
jno
jns
shlb
fdivl
dec
xor
icebp
out
mov
sub
arpl
icebp
pushf
pop
mov
push
fldl
mov
cli
or
push
pop
cli
scas
sbb
sbb
push
loop
dec
cmp
je
cmc
bound
out
movsb
addl
sub
sarl
repz
sub
call
cltd
cmp
dec
ja
hlt
adc
mov
add
or
ljmp
xchg
mov
shrb
mov
out
fisubrl
cmp
add
mov
movsl
and
mov
dec
adc
ret
int3
mov
add
dec
addl
push
roll
jge
lods
xchg
cmpsb
inc
rclb
test
mov
mov
pop
aam
push
sbb
test
stos
adcl
or
push
or
or
shll
ljmp
sbb
testl
cmp
pop
out
lret
lahf
cmp
adc
push
int3
pushf
dec
add
add
inc
and
fistl
lock
movsb
stos
inc
cmp
rcrb
shr
fs
stos
mov
push
test
add
popf
jp
mov
loope
inc
or
icebp
mov
xchg
xchg
or
push
pushf
mov
push
adc
fildl
jge
hlt
inc
mov
xchg
clc
push
xchg
shll
xchg
xor
data16
mov
xlat
push
fiaddl
imul
es
pop
or
sbb
or
aaa
lahf
sbb
dec
aam
inc
inc
popl
cmp
pop
lea
test
arpl
cwtl
ret
sbb
out
dec
mov
ds
sbb
sbb
xor
fistl
push
xor
addb
or
sub
ja
and
xchg
mov
mov
cwtl
jns
subl
das
mov
jnp
icebp
sub
rcll
push
ja
xchg
test
mov
lock
lock
jg
cmc
shlb
add
xor
sbb
xchg
test
fwait
dec
fcompl
rolb
das
movsb
add
pop
adc
outsl
inc
repnz
adc
pop
test
mov
pop
and
stos
adc
add
jp
sarl
sub
insb
loop
les
xlat
dec
push
and
add
xchg
mov
push
cmp
and
insl
arpl
jno
add
or
cltd
add
mov
dec
loope
add
cmp
pop
xchg
popa
and
mov
cltd
rcrb
scas
test
lahf
mov
loopne
clc
xchg
dec
sub
jo
push
or
sub
jmp
dec
and
inc
sbb
inc
adc
lcall
lcall
andl
cmp
decl
clc
add
or
fnstcw
adc
mov
jg
dec
pop
cmpsl
dec
sub
insl
and
nop
cmpsb
fld
jne
xor
pop
add
loopne
adc
xor
xor
adc
xchg
aaa
sbb
cmpsl
xchg
clc
adcl
push
aam
push
dec
mov
cmp
pushf
arpl
add
test
lea
fmuls
sub
push
andps
xchg
test
and
rolb
popa
out
sbb
push
stc
xchg
shlb
iret
xor
xchg
jne
in
and
adc
jno
jnp
sbb
or
pop
xor
ror
lods
xorb
sarb
test
push
dec
scas
add
xchg
insl
popf
testl
and
ja
rcll
pop
decl
add
in
and
je
addr16
add
mov
icebp
xchg
js
sti
mov
mov
push
inc
ret
push
xor
push
cmpsl
mulb
sbb
das
xor
and
cltd
fnstenv
or
mov
sub
or
imul
loopne
inc
arpl
arpl
jl
adc
jge
add
stc
xor
lods
adc
jge
inc
ficomps
jecxz
orb
jecxz
mov
mov
xlat
inc
call
or
and
inc
dec
pop
les
jne
mov
stos
adc
add
sbb
test
sbb
stos
adc
mov
aaa
or
movsl
or
and
ds
pop
xchg
adc
push
adc
daa
js
mov
sbb
xorl
pop
cltd
sbb
push
or
cmpsb
cmp
add
stos
inc
pushf
mov
ret
dec
inc
in
pop
dec
dec
push
mov
and
int3
adc
mov
push
ret
jo
jmp
jo
cmp
outsl
inc
out
or
mov
xor
xchg
push
fs
jp
add
mov
dec
ret
dec
lds
pop
and
and
nop
xchg
push
sub
mov
add
or
leave
arpl
mov
sub
test
mov
repnz
mov
subl
mov
test
mov
outsb
les
mov
xorb
pusha
xchg
xchg
xor
mov
mov
cmc
jns
adc
lea
inc
push
aam
lahf
ljmp
xchg
mov
xchg
mov
adc
push
sub
mov
sbb
jnp
xchg
std
dec
nop
pop
mov
sbb
je
pop
cmp
lds
loopne
test
inc
add
in
adc
lahf
loope
pop
jns
cmpsb
adc
pop
add
jo
enter
add
mov
sbb
mov
xor
push
sbb
add
insb
sbb
mov
push
out
push
inc
into
pop
imul
orb
insb
ffreep
and
lock
je
stos
and
and
sbb
cmp
les
sar
sub
mov
dec
and
rolb
adc
dec
lret
rcl
movsl
adc
sbbb
mov
les
xchg
xor
aam
popa
add
xchg
dec
mov
mov
cmpsb
add
pop
sbb
xchg
sub
cli
filds
jp
xchg
mov
scas
jae
dec
and
repnz
pop
push
or
ret
xor
jb
pop
jns
mov
lahf
mov
fldt
out
mov
sbb
sbb
and
and
ds
push
hlt
lret
jne
add
inc
pop
loopne
sub
jns
mov
adc
pop
push
add
inc
xor
insl
lahf
out
je
and
and
sub
add
movb
ret
bound
outsl
xchg
pop
ficoms
int
flds
sbb
pop
push
xorb
and
aam
mov
jecxz
push
push
mov
jns
xor
rclb
decl
mov
das
lret
rcrb
ret
pop
lods
push
leave
cmp
pop
inc
xchg
or
add
mov
xchg
push
mov
les
inc
test
or
pop
push
cwtl
mov
xchg
out
add
or
sbb
jmp
adc
cmp
push
pop
jg
fistps
jmp
mov
shlb
xchg
push
leave
lret
add
mov
sbb
push
inc
pop
jecxz
sbb
xchg
adc
inc
push
inc
xchg
sub
in
xor
mov
adcl
adc
andl
adc
movsb
push
scas
sub
adcb
roll
xorl
adcl
dec
mov
rolb
sub
xchg
add
adc
or
jg
sbbb
jbe
pushf
movsl
mov
pop
push
mov
out
gs
fs
shrl
sub
jg
addr16
cli
xor
cmp
imulb
je
adc
push
insl
sbb
jne
nop
jo
out
repnz
jne
test
out
mov
es
xor
or
add
xchg
nop
insb
push
into
mov
xor
jnp
or
lds
and
inc
in
push
mov
cmp
iret
add
adc
pop
and
jae
dec
jnp
shrb
add
cmp
jno
mov
mov
pop
xor
cmp
imul
xlat
test
jmp
xchg
pusha
adc
add
jp
rorb
es
ja
or
jle
test
or
imul
push
shrb
cs
movsl
inc
dec
jg
xor
mov
or
add
mov
shll
sbb
sbb
and
cmp
and
dec
push
adc
push
fcmovnbe
nop
jmp
xchg
push
mov
pop
push
dec
movsb
shr
and
jae
sti
xlat
rclb
push
mov
mov
inc
and
mov
inc
add
sbb
add
inc
lods
pop
sbb
fxch
sub
popa
syscall
mov
out
mov
repz
iret
xchg
pop
push
jne
sbb
incl
xor
or
xorb
inc
mov
fs
out
into
and
inc
cli
sub
xchg
fwait
push
cld
push
jmp
rcl
fs
jp
push
push
rolb
mov
sbb
mov
rolb
xchg
jl
mov
xor
pusha
les
add
xchg
icebp
sub
push
lock
and
les
call
jnp
test
es
lods
nop
xchg
or
mov
test
push
cmp
push
test
and
shlb
cmp
xchg
repz
shll
andb
xor
bound
xor
stc
xchg
and
mov
adc
rolb
loope
ljmp
ljmp
mov
in
call
jae
cli
push
sub
data16
das
add
sbb
xchg
jge
add
fdivrs
cmc
rclb
popa
stc
sahf
es
imul
lcall
stos
ret
push
ja
dec
and
pusha
pop
idivb
shlb
xor
add
lret
inc
mov
rorb
testl
push
and
aam
lock
sbb
jmp
push
pop
and
lods
cmp
xchg
pushf
lcall
imul
add
frstor
adc
sub
pop
ss
scas
stos
push
cmp
cltd
sbb
adc
push
test
push
aas
int
ret
xor
sub
mov
loope
push
imul
mov
jge
sbb
add
add
sub
pop
mov
mov
mov
push
cmp
imul
dec
aad
xchg
or
das
inc
dec
push
pushf
cmc
cli
stc
jno
sar
bound
jno
test
add
out
push
ret
dec
in
pop
and
sar
xchg
or
sar
das
clc
mov
ljmp
mov
xchg
inc
ret
mov
das
in
cmpl
push
mov
lret
dec
pop
and
and
scas
das
jae
adc
in
fcmovnb
out
mov
sub
push
adc
cmp
xor
mov
fwait
out
psllq
add
and
repnz
cmpsb
fxch
mov
lock
daa
push
adcl
xchg
nop
mov
ret
push
inc
pop
xchg
lahf
arpl
xor
and
sbb
mov
loopne
into
in
lods
add
outsb
jns
and
dec
jae
mov
mov
data16
roll
rol
es
ljmp
packsswb
jbe
into
dec
xor
inc
lahf
mov
test
out
sub
sbb
push
mov
xchg
dec
movsl
mov
adc
data16
mov
dec
mov
pop
jecxz
xor
add
cmpsl
inc
pop
mov
and
jg
jno
popl
mov
test
jb
es
outsl
outsb
testl
add
add
add
sarb
jb
or
aaa
je
aaa
add
xor
xor
mov
xor
decl
cli
clc
xchg
out
mov
test
jno
add
stos
or
add
test
popa
pop
mov
outsb
dec
mov
test
mov
adc
inc
cmpb
imul
and
mov
flds
or
pop
shlb
cmp
gs
adc
inc
inc
imul
or
sbb
sub
inc
lods
mov
test
xchg
pop
stos
dec
stc
mov
jg
jp
dec
ror
adc
push
orb
and
pop
xor
mov
inc
cmp
test
ss
adcb
stos
xchg
push
stc
popl
imul
mov
testl
jnp
leave
push
repz
test
sub
add
jns
pop
add
outsb
xlat
popa
jl
add
ss
int
or
and
and
mov
push
ret
sub
mov
push
mov
dec
stos
lcall
mov
lret
dec
out
add
imul
fadds
into
or
nop
mov
lret
lret
push
daa
add
test
sahf
pop
dec
sbb
inc
cwtl
dec
nop
jl
pop
bnd
cmp
cmc
push
adc
test
jb
pop
loop
push
popf
push
mov
fistps
mov
pop
rcrl
das
inc
popa
mov
outsb
popa
push
mov
mov
fs
xor
inc
inc
xchg
es
mov
xchg
cld
pushl
pop
sub
or
mov
rorl
outsl
bound
ds
xchg
and
add
rol
or
sbb
das
adcl
sbb
jne
mov
mov
es
or
jp
adc
dec
test
pop
push
pandn
mov
fistps
lcall
inc
repnz
push
pop
and
or
ljmp
push
mov
inc
or
nop
adc
ja
test
das
faddp
pop
xlat
cmpsb
ret
or
add
fdivrl
add
mov
xor
add
scas
push
push
arpl
pop
ret
cmpb
inc
cmc
mov
jo
add
cmp
lgs
pop
pop
bound
push
push
inc
loope
and
mov
insl
sbb
mov
sbb
dec
push
xor
fimuls
cmp
popf
sub
popa
fstps
pop
addb
jo
mov
mov
inc
cwtl
xchg
mov
mov
sbb
mov
adc
loope
data16
outsl
shrb
sbb
aaa
pushf
stos
pop
mov
dec
test
arpl
outsb
or
add
mov
mov
cmpb
hlt
inc
mov
mov
xlat
pop
das
ss
mov
mov
pop
pusha
jb
shrl
hlt
add
mov
dec
repz
or
inc
sub
rol
test
push
push
dec
add
jmp
iret
dec
jle
or
ja
lcall
mov
fisubs
inc
ljmp
sub
inc
adc
or
stos
dec
mov
sbb
xor
inc
bound
frstor
pop
jl
outsl
xchg
add
loope
mov
xchg
cwtl
or
shlb
test
xchg
xchg
push
mov
mov
ret
or
cmpl
shl
adc
push
lret
mov
xchg
test
jno
adc
or
xor
stc
mov
and
xchg
cmp
and
orb
jns
add
call
pop
js
push
or
cwtl
test
cmc
rcll
ja
cmp
inc
push
ss
sub
cmpb
pop
sbb
or
or
mov
jns
out
inc
pop
xchg
mov
xchg
add
adc
cmpsl
test
push
push
fildll
add
test
stos
add
pop
adc
jp
push
inc
pop
and
dec
and
aad
ffree
lods
das
inc
add
sbb
pusha
insb
inc
mov
ljmp
ss
xor
pop
xchg
sbb
adc
mov
popa
lds
jo
adc
mov
and
fbstp
into
stos
dec
xchg
insl
add
cwtl
pop
in
lea
push
ljmp
stos
mov
and
and
xchg
jp
or
loope
sbb
pop
sub
adc
test
scas
or
jecxz
shll
fs
jb
daa
cmp
jmp
sub
xchg
and
or
sbbl
or
dec
adc
dec
add
jns
adc
sarb
xchg
push
sub
push
or
adcl
jmp
dec
sbb
sbb
subl
push
inc
cmpsb
inc
jl
into
mov
out
and
fldl
mov
mov
stc
cmpsb
sbb
pop
adc
add
push
test
add
push
dec
pop
and
adcl
pop
enter
xor
mov
inc
push
xor
add
inc
add
pop
inc
dec
xchg
rcrb
cmpsl
sbb
dec
sub
lret
sub
sbb
scas
loopne
xchg
mov
jmp
or
js
nop
imul
roll
orl
fists
addb
inc
pop
push
icebp
sbbb
push
pop
jne
inc
adc
pop
pop
and
and
mov
push
xorl
repnz
push
lods
jmp
adc
jge
xchg
pushf
pop
ret
sbb
mov
lea
xchg
xor
outsb
push
movsl
in
popa
sti
or
stc
pusha
push
add
jnp
call
icebp
jp
cwtl
push
mov
enter
adc
rcl
push
cmp
lea
imul
inc
in
repnz
adc
inc
and
cmpsb
pop
mov
adc
or
ljmp
jmp
adc
test
jbe
hlt
fst
mov
addb
mull
jge
addb
jl
adc
iret
jb
shlb
out
scas
pop
rorl
addb
mov
scas
data16
mov
cmpsb
ljmp
push
fucomi
inc
xchg
add
add
ret
cmp
es
xchg
mov
enter
and
sub
outsb
jecxz
sub
push
inc
loope
enter
pop
and
test
and
add
mov
xchg
ss
ljmp
xchg
andb
or
push
pop
cld
pop
cmp
xor
mov
push
sub
les
pop
addb
ss
inc
adc
enter
xchg
add
cmpsb
push
stos
ret
add
add
orb
lock
xchg
mov
dec
sbb
and
jp
jmp
stos
mov
push
mov
dec
rolb
or
sbb
pop
cmp
arpl
push
inc
mov
jno
dec
iret
cmp
stos
lwpins
add
xchg
loope
das
mov
loopne
pop
or
incl
in
out
sub
dec
push
enter
fwait
lock
add
and
and
and
test
or
int3
dec
repz
test
xchg
pop
xor
lea
push
and
jmp
lahf
inc
rcrb
out
mov
test
in
loopne
es
popf
outsl
inc
cmpl
add
fwait
ret
dec
mov
fldenv
dec
call
xor
stc
popf
adcb
adcb
insl
int
dec
add
ja
out
bound
enter
lea
push
rclb
aaa
dec
sbbl
sub
dec
pop
dec
inc
push
mov
jo
jo
mov
ljmp
ljmp
pop
mov
adc
cltd
cmp
hlt
sub
cmpsb
xor
out
repz
jns
xor
mov
push
xlat
gs
inc
lret
sbb
xor
add
adc
add
sub
fildl
das
addr16
or
je
xchg
jmp
orl
xchg
icebp
inc
xchg
add
dec
add
or
fistpl
inc
cltd
inc
push
jmp
add
xor
inc
sub
push
sub
ffree
add
cmp
or
test
int3
sub
rolb
lods
fcmovbe
sahf
dec
add
dec
shll
aad
je
cmp
push
aas
and
rorl
xchg
cmp
jne
call
ret
xchg
mov
cmpps
inc
mov
pop
push
popa
xlat
sbb
lds
mov
or
xor
ljmp
adc
inc
dec
sarb
and
jo
cli
andl
add
loope
fdivl
test
inc
add
mov
mov
xor
xchg
movsl
inc
sub
inc
lcall
inc
imul
aas
mov
push
dec
lods
and
jp
cmp
inc
sub
dec
pusha
in
int
call
jb
sub
rclb
inc
mov
pushf
xor
sub
push
daa
int
or
inc
fldt
stc
lcall
add
or
and
iret
jns
orl
add
adc
setl
lock
and
sub
jl
jo
mov
pushf
pop
sbb
lahf
mov
lea
or
scas
jl
lods
outsb
mull
add
push
xchg
mov
imul
inc
lret
xor
pop
pop
shr
mov
add
pop
or
pop
inc
jno
push
fadd
mov
add
mov
imul
dec
mov
cmp
data16
scas
pop
cmp
add
inc
pop
mov
ljmp
call
dec
mov
pop
push
inc
jmp
lahf
push
pop
adc
leave
cld
hlt
push
sbb
pusha
nop
cmp
mov
sub
in
test
pop
xor
cmp
inc
mov
or
and
mov
pop
mov
sbb
inc
test
outsb
pop
or
test
adc
sbb
lds
sbb
or
xchg
xchg
cmpsl
mov
pop
mov
inc
stos
outsl
jno
mov
test
ljmp
jae
adc
pop
test
andb
stos
and
adc
mov
pusha
add
dec
in
xchg
daa
hlt
sub
mov
and
enter
test
pop
push
clc
in
xchg
inc
add
shrb
push
dec
add
add
cs
push
jmp
and
fadds
add
shll
adc
cli
push
pop
outsb
push
stos
js
sub
cmp
xchg
cmp
in
inc
push
inc
mov
sbb
jbe
aam
jns
cmp
test
add
shlb
inc
cmp
rorb
or
iret
mov
movl
addr16
push
xor
pop
into
stos
aam
dec
add
add
scas
xchg
lods
mov
lret
icebp
sub
dec
sbb
aam
lods
fwait
lods
cmp
push
adc
sbb
inc
mov
xor
add
mov
fwait
jno
xchg
out
scas
mov
bound
stos
adc
dec
mov
jecxz
xor
pushf
in
inc
das
test
lcall
jb
stos
cli
cmp
fwait
and
nop
data16
lcall
and
fwait
outsl
xchg
cmp
mov
out
sbb
mov
add
or
mov
call
cmp
test
add
mov
mov
ret
inc
fucomp
sti
xchg
or
mov
out
push
sub
push
adc
dec
adcb
jns
mov
test
sub
lea
jg
aas
stos
and
cwtl
or
int
pusha
ljmp
adc
and
lcall
xor
and
cmpsb
movsl
iret
aaa
inc
add
scas
pusha
add
xchg
shl
mov
mov
leave
inc
cmc
shrl
xor
lea
loope
es
inc
cmpsl
lock
mov
stos
out
ja
loope
ljmp
rorb
out
mov
dec
test
addr16
xor
inc
fcoms
repnz
shll
scas
adc
adc
inc
or
xchg
inc
lea
add
push
and
rclb
imul
xchg
lcall
call
pop
xchg
out
add
das
push
bound
subb
cwtl
lods
sub
jns
inc
sub
loop
xor
pop
dec
mov
sub
sbb
fadds
adc
pop
ds
in
test
int
add
mov
mov
xchg
pop
adc
loope
sbbb
fs
xchg
addr16
popa
ljmp
push
dec
inc
or
inc
or
mov
pushf
movsb
adc
andl
dec
cmp
inc
andb
push
lods
inc
scas
test
sahf
add
sbb
adc
mov
jne
rcrb
test
cmp
pushf
or
push
aas
test
btc
sbb
nop
mov
adc
xor
sub
push
cmpsl
push
addr16
rolb
jecxz
adc
mov
xchg
mov
cld
dec
and
jb
loope
sarl
out
adc
bound
cmp
iret
mov
adc
push
icebp
add
and
pusha
or
adc
shll
ret
sub
mov
xchg
xchg
cmp
scas
imul
pop
fisttpl
dec
pop
shl
js
fistpl
sbb
dec
rolb
aam
or
sti
pop
shrb
rcrb
cwtl
jne
or
or
mov
xchg
add
adc
dec
into
sub
push
insl
adc
nop
inc
in
add
pop
sbb
fcom
shll
rorb
test
fldenv
test
dec
pop
std
cmpsl
aad
or
mov
pop
or
adc
and
lahf
iret
xchg
fildl
insb
nop
stos
mov
add
adc
lahf
pushl
mov
sti
fwait
js
mov
push
push
or
adc
pop
inc
stos
push
fcmovnb
cmpsb
addb
test
pop
sarl
je
inc
das
jnp
xchg
mov
or
jecxz
mov
imul
popa
push
rcl
in
cmpsb
push
mov
mov
adc
stos
into
insb
mov
add
jns
rolb
fsubrs
subb
mov
les
loope
jmp
and
jecxz
dec
out
repz
add
jo
decl
adc
pop
inc
arpl
fcoml
aad
mov
xor
leave
cli
jl
pop
add
lcall
mov
xor
in
shrl
rol
mov
push
repnz
aaa
adc
nop
jo
add
popf
sub
push
mov
xor
jno
jno
shlb
sbbb
shrl
lcall
test
fildl
sar
push
das
xor
lret
fs
orl
and
add
sbb
leave
enter
orl
iret
cmpsb
inc
cmp
pusha
mov
mov
add
aad
js
pop
pop
ja
in
test
mov
addb
popf
sbb
adc
add
and
and
pop
jle
xor
cmpsb
sub
mov
mov
cmp
mov
shlb
subl
xchg
adc
mov
mov
push
fistpll
pop
push
xor
xor
outsl
or
rcrb
push
sub
xchg
ret
push
push
pusha
ss
fidivs
mov
dec
repz
mov
mov
push
sbb
jno
add
jne
jecxz
stos
es
sbb
sbb
pop
xchg
add
xlat
cs
xchg
cmpsb
pop
dec
inc
lds
ss
xchg
scas
jne
cmp
lea
cld
in
fildl
dec
pop
insb
and
xchg
in
mov
cmp
inc
xor
adcl
test
dec
add
xchg
jnp
popa
pop
test
outsl
cmp
js
mov
sub
pop
dec
sub
adc
jmp
sbb
test
dec
push
leave
lret
sarl
inc
repz
mov
xor
dec
mov
popa
jge
inc
xchg
push
aam
mov
adc
adc
sub
add
xor
sub
mov
and
or
add
or
xchg
sti
sub
add
add
sbb
jne
dec
pop
sbb
mov
mov
mov
add
adcl
lret
lret
push
std
xchg
lret
test
loopne
aam
pop
mov
xchg
inc
xchg
adc
push
inc
xchg
and
xchg
push
nop
jl
or
sarl
int3
add
fdivl
mov
push
shlb
out
push
or
loope
mov
lcall
add
xor
add
or
jne
ret
inc
cmpb
mov
test
cmp
clc
test
jg
hlt
pop
movsl
fldenv
xlat
jno
or
int
ds
push
jle
sbb
shll
insl
xchg
add
cwtl
mov
popa
stos
repz
mov
inc
adcb
add
xor
adc
mov
and
inc
pop
fldenv
pop
mov
cwtl
iret
mov
dec
cmpsb
xchg
mov
push
jmp
lods
inc
mov
sub
sbb
push
mov
iret
loope
jmp
mov
inc
inc
xchg
xor
adc
sbb
mov
jecxz
inc
jbe
shrl
scas
arpl
mov
jecxz
cmpsb
add
cmp
add
and
test
cmp
sub
test
mov
adc
iret
sub
sbb
or
sub
inc
inc
push
mov
popa
ret
cwtl
cmp
add
push
lret
mov
fsubl
push
add
out
adc
push
lret
fldcw
outsb
cwtl
arpl
call
mov
mov
inc
adc
loop
lret
inc
shll
add
pop
sbb
or
jbe
je
inc
xor
dec
inc
adc
jne
mov
sbb
xor
sub
sar
test
xchg
push
add
sbb
or
inc
decb
jb
adc
xor
mov
test
inc
push
inc
ret
icebp
add
es
adc
andb
push
arpl
orl
dec
inc
xor
mov
fldenv
dec
imul
ljmp
pmulhw
in
cmp
insb
push
mov
xor
jne
add
jl
scas
cmp
adc
fwait
movsl
rcll
push
aas
call
sub
fs
xchg
push
shrb
mov
cmp
push
inc
xor
adc
mov
call
inc
enter
adc
push
mov
mov
or
mov
imul
subl
sbb
sbb
cwtl
mov
mov
dec
or
xor
iret
in
out
enter
imul
mov
cs
add
loope
xchg
test
adc
jl
pop
sbb
rclb
popf
cmp
rcrb
add
pop
xchg
loope
jns
or
xchg
sub
movsb
mov
push
xor
loopne
les
iret
push
mov
pop
ret
add
pusha
int3
cmc
movd
xchg
repz
add
lea
xchg
invd
pop
add
aad
mov
fisttpll
dec
dec
sbb
lods
mov
jge
or
outsb
bound
hlt
push
xchg
inc
lea
push
xchg
inc
jne
pop
andl
xchg
cli
and
xchg
xchg
sbb
dec
add
inc
mov
xor
mov
cltd
das
adc
sahf
adcb
jg
das
nop
mov
or
add
xchg
rorl
lahf
mov
pushf
dec
pop
or
popf
test
std
bound
lock
sub
or
push
cmpsb
sub
mov
lcall
daa
cmp
push
sbb
test
push
and
xchg
les
lcall
dec
xor
add
ds
add
adc
cmc
in
bound
or
ret
add
push
daa
and
addr16
cs
dec
lahf
inc
mov
push
jmp
or
imul
jge
add
cmp
aam
popf
xor
test
xor
stc
sub
adc
jmp
repnz
test
cld
cmp
push
xchg
dec
mov
jl
mov
mov
xchg
sub
mov
movsb
and
mov
xchg
cmc
jmp
dec
add
loope
push
cld
xchg
rclb
add
jo
dec
clc
inc
pop
push
scas
das
mov
scas
mov
sbb
xchg
adc
movsb
lret
enter
leave
hlt
rclb
dec
and
loopne
mov
add
andl
or
mov
xchg
sub
ds
test
push
jbe
mov
add
lea
andb
mov
test
cmp
dec
sub
hlt
mov
in
cmpsb
loop
pusha
mov
in
xchg
jl
leave
or
add
jp
pusha
dec
xor
dec
add
add
mov
and
dec
mov
xchg
inc
nopl
dec
mov
mov
addr16
add
inc
and
and
iret
sub
cltd
add
ret
or
xor
adc
bound
dec
or
dec
adc
int
aam
dec
adc
shll
and
pop
roll
pushf
xor
xchg
dec
movsl
arpl
fistpll
test
pop
pop
xor
gs
jl
mov
das
lods
xor
and
test
dec
out
jbe
dec
sahf
das
and
inc
pop
pop
adc
aam
pop
enter
lock
jecxz
test
add
ss
mov
fwait
sbb
popa
add
jo
mov
movsl
mov
push
in
rcrl
jmp
ret
ret
push
push
int
rclb
popa
dec
mov
inc
cwtl
add
out
mov
add
lret
dec
or
adc
inc
xor
mov
ljmp
aad
adc
aaa
or
in
nop
mov
inc
aaa
mov
push
xor
out
inc
sub
pushf
mov
stc
xor
stos
outsb
push
in
mov
test
adc
push
or
dec
and
addb
pause
aad
dec
push
sub
or
pop
stos
cmc
bound
push
cmc
insl
inc
xor
rcl
pop
out
add
sub
pushf
xor
es
int
mov
cmp
subb
movsb
andl
xor
xchg
mov
push
jge
leave
stc
pop
xchg
jg
dec
in
and
stos
mov
scas
adc
nop
sub
sbb
stc
movsl
mov
adc
loopne
dec
lea
call
lock
or
cs
subb
or
stos
mov
push
mov
add
cmp
pop
dec
hlt
inc
jae
cs
in
cmc
fmulp
xor
or
in
mov
ret
push
and
mov
add
push
push
add
cmp
and
dec
pusha
add
int3
mov
push
add
fmuls
adc
test
imul
add
and
enter
add
xchg
lcall
jno
or
xchg
inc
dec
cltd
pop
ss
push
popa
push
cmp
cmpsb
mov
adc
popa
inc
and
call
scas
adcb
inc
and
dec
mov
cmc
mov
je
mov
sub
inc
mov
orl
sub
add
into
cld
lods
mov
in
daa
sbb
push
les
add
rorb
sub
stc
outsb
dec
sub
dec
dec
mov
pop
shr
in
mov
jno
sbb
adc
add
xchg
mov
ljmp
lea
mov
bnd
adcb
xchg
add
lret
clc
lods
adc
imul
or
push
add
test
sbb
adc
nop
push
mov
rcrb
and
outsb
jnp
xor
xchg
add
adc
test
add
or
mov
lods
jp
sub
lret
push
rorb
lods
test
adc
jmp
sub
popa
pusha
les
mov
cmpsl
aam
jl
movb
xlat
int
pusha
loopne
iret
test
adc
mov
movsb
jl
dec
or
int
adc
aad
lret
cwtl
inc
pop
inc
pop
out
rolb
pop
popf
or
inc
xlat
aaa
das
mov
xor
test
sub
nop
pop
adc
mov
lcall
rolb
xor
adc
addl
daa
mov
repz
or
pop
push
sbb
xor
dec
mov
inc
dec
and
stc
mov
xchg
andl
and
decb
stc
add
iret
xor
dec
enter
lahf
aaa
cmp
add
bound
repnz
add
mov
push
movsl
stos
dec
sbb
xchg
dec
cld
pusha
daa
ret
sbbl
in
and
fstpl
aam
mov
les
pop
or
adc
xchg
mov
dec
loop
adc
aad
or
inc
push
pop
shl
cmpsb
lcall
dec
testb
lock
add
xchg
mov
dec
dec
or
arpl
cs
push
inc
or
jae
dec
jle
arpl
dec
mov
mov
or
jb
jecxz
dec
stos
inc
mov
loopne
push
xor
inc
mov
xchg
pop
mov
or
das
sbb
mov
inc
add
push
push
lea
cmp
mov
je
mov
dec
jae
sbb
or
dec
xor
xor
shll
push
cli
jmp
xorl
in
mov
test
fs
das
leave
inc
popa
add
add
sbb
cs
lahf
jo
and
push
add
gs
sub
add
stos
inc
shrl
push
pop
mov
sbb
add
pop
lds
movsb
jne
push
inc
enter
add
add
fadd
in
fwait
outsb
push
adc
inc
pusha
out
xchg
notb
inc
imul
pop
inc
xor
mov
addr16
or
mov
adc
add
dec
lea
dec
imul
mov
addb
mov
pop
dec
jo
add
xchg
cmp
lret
arpl
add
sti
sub
es
pusha
ds
adc
test
test
push
sub
arpl
jo
and
jo
repz
dec
ret
xchg
add
cmp
push
or
movsb
mov
andl
xor
jp
xor
sub
testl
cs
pushf
add
sub
pop
add
xchg
xchg
movsl
adc
test
sbb
pop
xor
sbb
add
pop
or
jo
pop
push
add
adc
mov
dec
mov
adc
inc
gs
subb
inc
popa
andb
mov
aam
jo
aaa
imul
ret
sub
loopne,pn
pop
sub
loopne
stos
fsts
inc
scas
xor
dec
and
push
adc
aaa
add
arpl
xor
mov
ret
shl
aas
ret
aad
je
jb
add
xor
add
pop
dec
sub
pop
shl
out
mov
mov
lods
mov
add
sbb
das
adc
pop
jae
dec
std
test
inc
cmp
addr16
add
push
aad
dec
inc
aaa
jg
xchg
dec
inc
iret
faddp
adc
add
fwait
cmpsl
sub
mov
shrl
push
adc
repz
dec
adc
adc
adc
js
sti
inc
insb
pop
inc
stc
in
xchg
orl
push
mov
jl
popf
xchg
cli
insl
lret
and
sbb
mov
and
stos
add
shll
lock
lret
push
pop
iret
sbb
dec
andl
sub
ret
pop
cs
jbe
mov
and
fimuls
mov
movsl
push
sbb
push
and
adc
pop
fldenv
xor
adc
push
sub
rolb
sahf
rclb
mov
mov
aam
or
push
push
ffreep
add
xor
js
dec
cmp
sub
cmpsl
stos
dec
das
mov
or
add
jmp
xchg
icebp
repz
add
cltd
dec
pop
and
pop
lods
cmp
and
repz
and
pop
pop
mov
and
jp
lea
mov
icebp
add
inc
push
pop
enter
xchg
jne
imul
or
lret
fs
bound
and
test
xchg
cwtl
or
cmp
add
sbb
mov
cwtl
lea
mov
stos
dec
cmc
lods
adc
inc
adc
or
or
test
push
push
inc
pusha
inc
push
mov
cmpsb
cmp
xor
pop
add
inc
adcl
rclb
bound
sub
leave
or
insl
fldt
inc
jns
mov
mov
ss
and
sub
shlb
push
dec
repz
jp
or
aam
xchg
icebp
mov
push
ljmp
or
adc
es
adc
mov
ret
les
scas
jmp
imul
or
movsb
data16
loopne
inc
ja
or
or
fwait
mov
add
push
jno
dec
ss
sbb
lock
insb
mov
aad
adc
or
lock
xchg
imul
orl
and
rorl
inc
xor
in
adc
mov
and
pop
pop
adc
enter
sbb
nop
dec
xor
aaa
cmp
inc
stos
test
push
sbbl
pop
adc
fwait
or
stos
adc
loop
inc
jbe
imul
or
xor
add
push
xchg
in
and
dec
les
rorl
stos
sub
inc
inc
test
add
adc
mov
loop
inc
dec
andl
es
mov
mov
and
or
xchg
shrl
in
jmp
int3
scas
xchg
and
sti
xchg
rolb
cmpsl
je
dec
lds
pop
andb
pop
rclb
gs
pop
sbb
outsl
rorb
xchg
pop
fldcw
push
or
xchg
cmp
ret
adc
pusha
and
dec
add
jl
or
sub
jo
clc
dec
jp
pop
insb
andb
push
dec
adc
mov
ror
gs
cmpsl
test
sbb
incl
sub
and
adc
cltd
mov
mov
loop
pop
push
xor
jb
mov
bound
pop
sbb
andb
or
xchg
aas
sbb
dec
rcrb
jp
nop
sub
rclb
pop
adc
dec
jnp
int
fnstenv
pop
push
xchg
leave
gs
xor
xchg
arpl
lahf
mov
popa
adc
das
add
or
orb
and
cmp
je
and
icebp
aas
stos
nop
dec
or
inc
ja
cmp
add
js
xchg
push
pop
xchg
xchg
roll
daa
push
pop
test
mov
push
mov
mov
dec
cmpsl
sub
inc
jne
fldenv
cmp
add
dec
cmpsl
add
pop
xor
push
and
lret
adc
and
inc
push
xlat
or
shrb
lcall
outsl
ss
or
test
es
or
jae
mov
int3
das
repnz
and
dec
mov
cmp
je
fisubrs
mov
or
cmp
nop
or
cmp
data16
scas
dec
movd
push
adc
and
push
imul
addl
or
ret
and
xor
xchg
mov
outsb
mov
pop
adc
lret
in
ret
movsb
or
imul
jno
dec
adc
test
adc
pop
test
gs
adc
inc
push
mov
sub
mov
sbb
cmp
imul
push
sti
sahf
and
aas
roll
adc
push
sti
xor
aam
push
std
popa
rclb
cmp
pop
inc
add
mov
xchg
push
push
add
subl
fsubr
push
cmpsl
and
sub
or
and
inc
add
adc
inc
lcall
adc
aam
dec
and
rclb
ret
pop
xchg
xor
or
inc
pusha
mov
ss
or
mov
aad
lea
and
add
jo
sbb
and
rclb
push
xor
mov
movsl
and
fnstcw
ss
mov
cmp
sbb
pop
add
imulb
cmp
arpl
mov
je
mov
sub
daa
rol
cmp
stos
cs
aad
xor
shr
add
add
dec
and
aad
sub
les
push
push
inc
jae
mov
and
mov
pop
pop
fwait
and
shll
and
nop
js
lods
daa
pop
xchg
leave
imul
jg
shlb
push
enter
pop
add
aaa
dec
enter
adc
adc
test
mov
inc
or
cmp
insb
dec
jne
adc
and
sbbl
mov
adc
mov
xor
dec
nop
push
sbb
push
dec
mov
sbb
mov
sub
mov
incb
loope
or
add
subl
mov
push
dec
and
pop
mov
push
or
das
fstl
cmp
mov
cmpsb
xor
pop
xchg
mov
inc
adc
sub
lods
push
out
loope
cli
sarb
mov
imul
cld
aad
xor
push
cmc
shll
mov
dec
inc
lahf
fcmovb
aas
mov
add
adc
pop
cltd
push
gs
push
pop
and
add
mov
add
mov
pop
loopne
jo
in
hlt
pop
lret
add
mov
xchg
add
popf
in
mov
pop
std
and
xchg
push
adc
cmp
test
outsb
adc
pop
pop
addl
pop
jmp
push
daa
sbb
sahf
adc
sub
in
adc
inc
dec
insl
jnp
lea
sbb
inc
insb
push
xchg
rol
cmpsl
rol
add
addr16
xor
xchg
push
mov
adc
push
cwtl
mov
pop
mov
push
in
inc
sub
sub
jnp
cmpsb
add
adc
xchg
stos
inc
push
popl
repnz
fcomi
xchg
lea
jne
xor
aas
pop
xchg
add
add
hlt
mov
push
mov
jmp
xchg
pusha
sub
inc
loope
pop
and
rorb
push
xor
pop
lds
add
std
add
test
add
and
xchg
dec
out
or
inc
add
pop
push
data16
arpl
add
xor
jb
mov
or
les
push
mov
dec
js
loope
pushf
push
or
test
xor
mov
jg
and
rorl
ret
mov
jne
popa
pop
sbb
and
dec
adc
inc
mov
and
cmp
repz
addb
sub
movsb
ret
cmc
inc
ss
sub
mov
in
and
add
subb
popa
sbb
push
and
or
xor
mov
pop
xor
ss
jle
or
inc
pop
mov
into
leave
sbb
push
int3
xor
inc
in
ret
shl
add
push
push
inc
pop
inc
aas
jp
mov
ret
push
fildl
xor
add
mov
mov
and
add
and
dec
imul
jmp
adc
jo
popa
rclb
insb
xchg
rclb
add
adc
push
daa
push
add
mov
sub
mov
add
mov
lcall
push
insl
add
sbb
stos
repnz
xchg
les
lods
hlt
pop
les
dec
pushf
das
loopne
les
inc
andb
cltd
jl
repnz
dec
dec
hlt
leave
test
pop
roll
loope
cmp
adc
iret
movsb
xor
xor
xchg
rcrl
inc
popf
inc
sbb
dec
jo
or
and
enter
hlt
adc
cwtl
or
jne
xchg
int
add
xor
sbb
adc
xchg
orb
or
pop
add
shrl
insl
and
sbb
pop
rol
push
or
or
loop
add
mov
mov
adc
inc
and
sarb
imul
add
daa
movsl
pop
ret
lahf
lahf
add
popa
inc
add
or
push
dec
andl
or
or
mov
or
add
stos
addr16
cmp
push
dec
imul
add
xor
inc
mov
pusha
and
mov
nop
cli
clc
adc
out
sti
cmp
push
xor
push
xchg
aas
outsl
dec
icebp
orb
or
dec
jge
sti
and
cwtl
loop
fistpll
in
dec
and
cmp
leave
xor
add
leave
cli
mov
aad
or
cmp
xchg
push
xchg
add
pop
sbb
mov
repnz
gs
mov
enter
pop
cmp
mov
mov
add
and
stc
dec
bound
xchg
xchg
lods
cmpsb
adc
mov
lock
adc
sub
xchg
xchg
fiadds
popf
or
arpl
pop
add
xchg
jno
negl
jecxz
es
mov
xor
xchg
arpl
xor
add
xchg
mov
sbb
dec
lea
xor
loope
add
repnz
out
add
out
js
stos
fwait
sub
pop
push
mov
add
adc
insb
cmp
cmp
or
xor
sbb
mov
and
push
pusha
enter
shll
cmpsl
xor
loope
cmp
stos
dec
jp
ja
loope
push
inc
andl
cmpsl
and
adc
cmpsl
jae
mov
sub
loopne
jecxz
popa
add
filds
push
xor
add
shrl
or
lcall
mov
jg
stc
xchg
sbb
and
push
adc
sbb
pushf
movsb
call
jns
pop
add
sub
call
rcrb
mov
aam
dec
cli
or
nop
orl
jmp
aas
popf
shlb
pop
lds
xchg
sub
jp
or
test
and
jmp
int3
ret
rol
add
loope
push
out
ret
jge
in
xchg
dec
mov
mov
orl
and
inc
push
jne
add
inc
or
mov
xor
or
and
js
mov
xor
push
push
and
mov
jbe
mov
inc
inc
fbstp
push
inc
pop
sbb
xchg
add
dec
pop
shrb
jo
out
jecxz
movsb
dec
push
xor
test
lahf
inc
pop
inc
gs
mov
sub
push
and
and
scas
inc
adc
xchg
pop
adc
or
arpl
cmp
pusha
mov
hlt
out
inc
sbb
add
push
pop
js
push
lds
scas
mov
xchg
jmp
push
mov
enter
stos
pop
push
mov
dec
push
push
pushf
add
int
std
and
mov
jge
dec
mov
xchg
test
pop
es
push
sbb
cmp
pop
and
insb
bound
xor
mov
lcall
and
xor
dec
sbb
inc
add
push
jmp
push
sbb
add
and
loopne
mov
clc
or
sbb
insl
inc
xchg
cs
add
ret
and
adc
leave
sbbl
pusha
adc
push
lahf
mov
adc
inc
arpl
pop
imul
and
add
test
aas
or
lea
sbb
leave
icebp
xor
and
adc
cli
jno
push
jno
lahf
adc
push
adc
mov
cwtl
fstl
fdivl
push
xchg
push
add
repnz
jb
rolb
testb
andl
sbb
divl
in
js
in
push
and
lret
dec
insb
push
orb
pop
and
mov
add
adc
bound
pop
push
sub
dec
sub
dec
jne
inc
popa
cld
add
or
fmuls
push
cld
test
mov
clc
jne
push
xorb
xchg
add
jmp
in
xor
add
in
mov
out
lret
in
outsl
sbb
fmuls
mov
pusha
sbb
test
pop
cmc
aaa
sub
rclb
add
adc
xchg
cltd
jg
adcb
adc
add
and
nop
addb
inc
popf
xor
scas
dec
lcall
mov
std
fistl
push
sbb
or
add
xchg
sub
push
sub
xchg
jnp
stos
and
stos
pop
mov
push
add
jno
cmp
jae
push
aaa
xchg
dec
add
add
knotw
add
adc
dec
and
ret
add
pop
cmpsb
and
sub
pusha
jns
pop
and
add
sahf
xor
push
cmp
cmp
test
pop
insl
push
in
imul
cmpsb
inc
mov
push
int
jbe
sbb
jp
and
cmpsl
repnz
lods
inc
or
psraw
sub
push
cmp
dec
xchg
sbb
cmp
aaa
sbb
fisttpll
push
loopne
push
dec
and
adc
add
or
sub
jns
outsb
and
fdivrs
lods
mov
test
dec
push
push
and
sahf
arpl
inc
pop
dec
test
cs
mov
push
inc
mov
sub
lahf
lcall
ret
dec
cli
adc
xchg
xor
xchg
add
sbb
and
iret
lcall
cmc
mov
in
pop
jb
jns
adc
cmp
adc
das
cmpsb
add
fnstsw
push
jecxz
jbe
sbb
and
aad
adc
nop
dec
mov
sbbb
push
jmp
clc
xor
mov
pop
inc
add
or
pop
dec
add
insl
sbb
movsl
mov
or
pop
or
push
and
jns
test
inc
add
xor
adc
addl
xor
jmp
sub
cwtl
or
imul
jb
dec
mov
aaa
dec
xchg
icebp
pop
add
repnz
mov
lahf
jno
xor
hlt
cmp
cli
or
std
cmp
out
mov
scas
outsl
mov
jns
cmpsl
mov
mov
xor
pusha
adc
dec
fwait
rorb
add
push
mov
push
jl
or
test
mov
ret
movsb
adc
jecxz
adc
mov
pushf
rcll
jge
or
add
mov
mov
stc
aaa
ljmp
push
ret
xchg
pop
and
xor
js
and
pop
sahf
pop
and
inc
rol
xchg
lcall
loopne
inc
or
filds
pop
clc
insl
adc
adc
scas
xchg
add
mov
addl
jns
cmp
cmpsl
push
add
push
addb
and
adc
add
pushf
insl
xor
loopne
fwait
xchg
inc
rolb
and
loope
shrl
rcrb
adc
movsl
insb
push
movsl
push
jp
jg
inc
test
mov
or
add
xchg
adc
adc
xchg
sub
mov
loop
repz
test
icebp
push
fiadds
xchg
repnz
add
xor
lahf
sub
mov
mov
icebp
xor
ljmp
cmp
push
gs
adc
dec
add
mov
add
pop
inc
xchg
mov
popf
aam
cmp
fcomp
jmp
add
dec
mov
test
add
movsl
push
xchg
lahf
and
adc
maskmovq
test
xchg
fisttpl
lds
in
addr16
nop
pop
scas
sub
les
add
mov
fcoml
or
inc
add
mov
iret
ret
pop
pusha
push
adc
scas
lcall
cwtl
ja
mov
cmp
dec
fstpl
pop
cmpsl
pop
lds
push
mov
addl
dec
pop
jp
loopne
cwtl
cltd
dec
mov
dec
popl
xchg
adc
push
xchg
and
pop
inc
andl
enter
sbb
or
sbb
es
sbb
shrb
rorl
add
sbb
movl
dec
pusha
mov
les
ss
cmp
and
lea
xlat
sahf
bound
pop
push
add
dec
mov
add
sub
std
mov
decl
and
sbb
sub
fmul
or
and
push
inc
repz
or
jge
push
xor
pop
ret
mov
adcl
mov
push
inc
sbb
sbb
cltd
fwait
jnp
add
add
mov
push
cmp
inc
fdivl
iret
ficoms
rclb
fs
inc
jne
pop
subb
pop
mov
and
call
cmp
out
insl
cmp
mov
mov
inc
popa
mov
xor
sbb
and
movsl
jecxz
lahf
dec
imul
mov
sbb
cmp
jmp
mov
add
lds
ret
mov
mov
addb
notl
add
or
push
les
xor
push
lods
xlat
mov
pop
push
xchg
sahf
dec
dec
imul
sbb
dec
add
subb
xor
sbb
xchg
out
clc
lret
mov
sti
out
fwait
add
adc
mov
aam
sub
lea
nop
add
adc
adc
movb
clc
cli
add
xchg
mov
or
inc
and
flds
pop
movsl
jle
call
cmpsb
movsl
stc
pop
scas
outsl
push
push
and
repnz
sahf
ret
daa
iret
adc
jne
push
das
test
or
sub
cmc
fstpl
inc
movsl
scas
shll
inc
inc
xchg
roll
jge
sub
push
in
xchg
push
fcmovnb
out
addr16
or
dec
mov
sbb
enter
xor
xchg
add
pop
imul
jae
bound
enter
adc
xchg
scas
xchg
iret
aam
xor
mul
add
xorl
mov
xlat
jbe
add
or
pushf
cmp
xlat
sahf
inc
imul
push
or
mov
mov
pop
data16
dec
adc
cmp
mov
inc
cltd
add
mov
rorb
dec
movsl
mov
sub
adc
loopne
lea
cmp
lea
test
mov
gs
sbb
test
rol
xor
push
addb
loop
mov
push
dec
jne
ret
iret
stc
nop
xlat
adc
push
test
dec
adc
jne
inc
xlat
daa
push
cmc
and
xchg
push
ret
repz
aam
pushf
dec
mov
and
push
add
xor
imul
sub
dec
enter
xor
movsl
fwait
and
xchg
xor
icebp
inc
adc
or
mov
mov
loopne
cwtl
mov
mov
push
adc
lcall
subl
les
sbb
and
mov
jb
mov
fwait
test
sbb
outsl
frstor
sbb
xchg
push
nop
test
aad
sbb
add
sahf
test
xchg
pop
out
or
push
add
mov
add
adc
jo
movsl
push
shll
jo
mov
jnp
nop
and
pop
pop
sub
lea
and
pusha
or
sub
dec
data16
cmp
test
imul
lea
inc
sbb
cmpsb
push
out
and
sahf
lret
and
stos
or
cmpsl
fisttps
lds
icebp
aas
subl
push
rorl
push
xchg
sub
cmpsl
cld
adc
dec
mov
adc
push
xor
cmp
fldl
icebp
jae
cmp
leave
xchg
ss
or
mov
xchg
sbb
testl
hlt
mov
cli
xor
and
icebp
in
sbb
mov
out
pop
adc
jp
adc
xchg
xlat
out
in
adc
pop
test
sub
aas
jge
mov
mov
cmpsb
add
js
pop
add
loope
rorl
test
push
jle
mov
mov
fadd
pop
adc
or
lret
enter
xorl
les
inc
add
jb
or
scas
push
insl
imul
in
sti
loopne
mov
ds
and
lcall
jnp
cmp
pop
mov
or
les
shlb
sub
test
arpl
mov
or
insl
jmp
cmpsl
mov
movsb
loope
or
inc
mov
inc
xor
sub
dec
sahf
es
ret
inc
add
rorb
int3
nop
jb
pop
js
adc
xchg
mov
addr16
repz
cmc
mov
or
jb
clc
repz
jg
fs
popf
or
scas
xor
adc
add
cwtl
mov
push
movsb
add
jecxz
imul
xchg
dec
xor
mov
jge
dec
int3
or
xor
add
mov
push
cmp
adc
test
mov
leave
add
out
test
add
inc
ss
mov
or
or
add
inc
push
outsb
inc
ljmp
adc
sbb
push
and
mov
rolb
sub
orl
mov
iret
add
inc
out
xor
orl
inc
push
adc
iret
pop
or
mov
sbb
in
insl
inc
inc
into
cli
rolb
xchg
mov
popa
push
popa
ret
xor
and
je
mov
pop
adc
rol
cmp
push
adc
sub
js
xor
jae
xorb
push
movsb
mov
lcall
pop
push
or
sub
adc
lcall
add
jg
xchg
xchg
adc
icebp
inc
mov
shrb
adc
xchg
xor
cmc
fwait
sub
sbb
insl
nop
sti
pop
mov
mov
icebp
add
les
dec
or
daa
roll
sbb
mov
clc
jo
xchg
aad
push
and
sub
pusha
add
inc
sbb
xor
fisttpll
jo
and
fwait
je
sarl
mov
push
lds
inc
mov
fdivrl
cmp
jno
mov
cs
aad
pop
data16
test
and
push
and
add
mov
mov
ret
xchg
mov
lcall
add
xchg
add
and
add
or
lods
dec
aam
fldl
cmp
dec
cmp
and
dec
mov
adc
dec
loope
sahf
jecxz
pusha
test
mov
push
sub
cmpsl
insl
lock
das
and
mov
rorl
pop
jns
popa
bound
and
and
mov
dec
and
and
sbb
add
inc
int
xor
jnp
test
cmpl
adc
jp
test
add
xor
call
ret
jl
gs
sub
dec
adc
and
sbb
loope
cmp
cmp
in
shlb
pop
loope
hlt
lahf
inc
and
push
cmp
push
fildl
cli
aam
into
add
iret
pop
movb
lret
inc
rcrl
and
and
aad
dec
dec
sbbb
pop
adc
add
shrb
dec
push
pop
lea
push
push
pop
pop
adc
sub
push
sub
stc
sub
or
xchg
clc
adc
pop
cmp
inc
push
stos
xchg
adc
popa
test
outsl
pop
and
inc
and
rorl
adc
inc
cmp
shlb
sbb
jle
inc
xor
sbb
ret
mov
pop
inc
cwtl
push
cmp
adcb
cmp
and
cmp
pushf
dec
push
pop
mov
push
test
shrb
mov
sbb
subb
aas
outsl
loopne
inc
pop
int
and
andb
lcall
bound
rcll
subb
stc
pop
push
popa
test
jge
stc
loope
push
je
push
or
adc
pop
add
ljmp
in
push
inc
jg
ja
mov
mov
pop
js
jns
pusha
pop
pop
daa
and
adc
adc
shrl
cwtl
shll
jmp
aas
mov
jge
jnp
insl
mov
jno
sahf
dec
mov
inc
into
aas
int
lcall
jo
xor
cmp
xor
and
mov
incb
dec
mov
push
dec
test
loop
sbb
lds
dec
cmpl
sbb
shr
add
cs
test
gs
nop
out
fadds
out
xchg
mov
ljmp
xchg
scas
sbb
xchg
mov
gs
pop
xor
shl
mov
ja
adc
imul
inc
fsubl
mov
dec
shrb
mov
subl
aaa
fs
rorl
repz
insb
add
out
or
je
movsl
and
dec
push
fistpll
dec
insl
pop
int3
and
adc
add
lock
sbb
lahf
shlb
nop
pop
dec
enter
pop
jecxz
or
outsl
call
and
sbb
adc
or
shlb
mov
adc
add
jno
pop
mov
or
dec
mov
push
cmp
jnp
cmpsb
xor
mov
adcb
push
rcrl
pop
aad
or
xchg
lcall
sub
and
lret
in
dec
cmp
xchg
xchg
and
arpl
mov
loope
lahf
daa
xchg
mov
jl
or
push
add
loopne
pop
adc
leave
sub
cmpsb
jno
cmpsb
or
rcll
adc
and
lods
fsts
pop
imul
int
dec
adc
pop
cmp
add
pop
pop
inc
sub
adc
cltd
rcr
enter
sbb
sub
mov
ss
aad
xchg
dec
inc
sub
push
shll
push
pushf
and
js
xchg
stc
jnp
scas
mov
inc
sub
inc
jg
jl
int
fdivrp
cltd
sub
mov
sbb
test
sbb
test
mov
cmp
cmp
cmp
imul
les
aam
and
ja
aaa
jle
sbb
sbb
cmp
mov
xchg
lret
or
cmp
add
push
inc
test
jg
sbb
adc
xor
imul
xchg
mov
and
push
mov
adc
sub
mov
popf
pop
push
rcrb
sbbl
dec
in
test
dec
test
adc
pop
add
xor
les
add
movsb
pop
aam
sub
test
dec
roll
stos
sbb
cmp
in
aad
sbb
pop
inc
inc
dec
xlat
inc
js
shlb
xor
add
clc
jle
stos
test
add
pop
adc
aam
ja
jo
adcb
inc
jo
or
mov
rcl
jecxz
adc
or
and
add
andb
pop
xor
add
js
pop
xlat
loopne
sbbb
pop
fistps
je
add
xchg
dec
mov
mov
mov
stos
pop
jmp
fnstsw
stc
pop
adc
mov
sbb
loop
inc
inc
jg
cmpsl
add
cltd
test
mov
push
and
fistpl
pop
push
push
pop
pusha
adc
imul
je
mov
sub
adc
add
cmp
mov
xorb
add
xor
clc
and
pop
lds
mov
jns
and
lds
and
ljmp
push
dec
mov
jb
inc
and
shll
int
xchg
lret
inc
aas
xchg
push
dec
push
and
and
sarb
shll
push
test
mov
inc
sub
repz
mov
adc
sub
xlat
pop
shl
cwtl
test
sub
ret
mov
cwtl
and
cwtl
test
orb
sahf
bound
sbb
inc
movsl
clc
cmpsb
inc
sub
pop
popa
cmpl
inc
cmp
push
inc
shlb
loop
xorl
sbb
stos
inc
pop
inc
adc
or
add
push
aad
es
pop
dec
pop
jne
popf
imul
sub
push
and
orl
add
pop
mov
xor
cmp
push
inc
shrb
dec
cmc
repnz
jbe
push
loope
iret
xchg
xchg
add
xchg
pop
add
jae
or
dec
adc
test
addl
int
sbbb
mov
scas
sbb
int
and
and
ljmp
add
push
or
sbb
loope
icebp
fcmovnbe
mov
push
and
xchg
icebp
stos
mov
ficoml
cmc
mov
pop
popf
adc
mov
or
push
push
call
push
lcall
loop
leave
sub
jo
adc
mov
cvtps2pd
adc
push
add
test
mov
adc
lods
arpl
in
push
sbb
and
inc
pusha
add
iret
andl
sbb
rolb
adc
repnz
push
add
mov
dec
rorl
xor
jne
test
xlat
pop
call
xchg
in
mov
sbb
cmp
add
jno
dec
nop
inc
jbe
adc
fucomip
clc
jl
and
add
and
push
outsl
xchg
mov
roll
pusha
mov
adc
push
ret
repnz
mov
les
in
pop
jno
push
lea
pop
loopne
mov
cmpsb
push
addb
lea
dec
mov
or
jnp
cmc
add
inc
pushf
sub
lret
xchg
mov
or
lahf
xlat
pop
mov
sub
cmc
mov
adc
xchg
pop
pop
lds
addl
les
xor
fidivs
xchg
xchg
and
out
mov
mov
push
jmp
sbb
repz
add
cs
push
sub
sbb
or
jne
shll
push
jno
jb
jo
lods
xlat
sbb
adc
mov
and
sbb
jne
mov
nop
mov
mov
pop
sub
call
add
test
andl
inc
jp
je
loope
or
xor
pop
mov
mov
pop
sbb
or
mov
mov
leave
or
mov
popa
stos
dec
iret
mov
pop
mov
inc
and
mov
cs
xor
xor
sbb
aam
dec
je
dec
sub
sbb
sti
aad
mov
add
cmp
push
jp
jo
js
lahf
out
nop
orl
nop
xor
xor
xorl
xchg
test
arpl
ret
std
sub
lret
in
mov
ret
jae
js
dec
push
or
movsl
mov
int
and
popf
xor
stos
daa
pop
rcll
add
addr16
call
push
subl
out
and
orl
sbb
fs
stos
cwtl
mov
mov
push
push
cmp
addb
push
and
pop
insb
lods
and
xlat
and
scas
pop
pop
jno
pop
jmp
frstor
pop
xchg
jmp
rol
push
dec
test
push
jno
inc
cmp
outsb
pusha
stos
add
sahf
gs
inc
adc
fnsave
or
xchg
cwtl
popa
dec
test
rol
xor
sub
leave
daa
push
imul
pop
out
xchg
movsb
xchg
jecxz
inc
inc
jecxz
pop
mov
fdivl
sarl
or
push
cltd
mov
fadd
and
mov
jnp
rolb
add
jb
rorl
test
inc
dec
rolb
lds
add
sbb
push
out
mov
cmp
cmp
aam
inc
adc
push
or
aam
bound
js
and
jb
sub
mov
aad
pop
popf
add
cmovns
cmp
adc
mov
sbb
jo
js
jae
orl
sbb
mov
xor
jecxz
push
pop
aaa
gs
add
das
or
push
or
jno
jno
cwtl
mov
popa
sub
push
sub
and
subl
popa
nop
mov
push
inc
sub
xchg
fidivl
dec
xchg
mov
dec
sahf
push
adc
dec
or
or
fs
mov
sbb
add
sub
test
and
in
pop
dec
push
pop
inc
add
fiadds
and
cmp
xchg
lret
in
out
popf
stos
cltd
sub
mov
mov
xchg
mov
ljmp
pop
dec
shr
cmp
add
inc
lods
sbb
nop
xor
push
pop
adc
call
pop
or
push
xchg
jbe
xor
mov
cmp
cmp
pmulhrsw
jns
push
ret
mov
stc
xor
mov
mov
push
cmp
out
or
scas
loope,pt
inc
cmpsl
in
pop
shl
mov
aam
mov
cwtl
loopne
sub
xor
das
pop
dec
xor
sbb
mov
dec
lods
cmpsl
xchg
xchg
xchg
add
pop
push
or
sbb
inc
stc
mov
sbb
lds
shrl
inc
mov
inc
imul
dec
add
js
add
jne
adc
push
dec
popf
mov
lds
jg
adc
pop
sbb
xchg
cmp
mov
gs
dec
jno
daa
xchg
sub
faddl
push
call
dec
push
int3
shll
std
int
repnz
cmp
in
stos
imul
add
sbb
lods
mov
movsb
popa
loopne
incb
imul
and
xor
shrb
pushf
sarl
xchg
js
cwtl
lock
and
push
imul
mov
jl
sbb
mov
lods
dec
sti
mov
sub
or
jg
add
movsl
add
inc
push
push
adc
out
push
inc
xor
dec
sbb
add
rcll
imul
adc
jno
inc
pop
and
xchg
lock
sub
dec
sub
lea
repz
ficoml
stos
or
push
scas
dec
les
lahf
stc
subb
test
mov
xlat
fbld
xor
add
stos
pop
insl
sbb
jo
or
cmp
inc
popa
gs
lret
pop
add
nop
bound
add
mov
pop
ljmp
inc
and
mov
pop
imul
in
mov
cmp
popa
mov
jle
jns
andl
cmpsl
add
pop
push
rorl
or
add
sub
cmpl
sub
cmp
pop
adc
cs
jl
mov
sbb
sub
dec
pop
inc
movsb
add
pusha
pop
sub
sub
sbb
sbb
dec
mov
int3
sbb
aad
cwtl
cmpsl
xorb
dec
push
sbb
jl
out
lea
sub
je
inc
lcall
aad
inc
jb
test
jo
xor
movsb
mov
loopne
cmp
aad
mov
je
imul
xor
push
push
xchg
push
in
adc
clc
pop
xor
scas
adc
lcall
add
lock
and
mov
or
or
lcall
xchg
dec
or
sahf
nop
adc
xchg
imul
sub
cmpsl
in
sub
popa
inc
xor
lea
mov
or
and
lock
stos
in
ja
pop
fstpt
add
aad
daa
push
dec
imul
arpl
xor
xor
inc
mov
cmpsb
pushw
inc
nop
out
xchg
imul
pop
mov
leave
and
or
sets
pop
arpl
push
das
mov
mov
and
orl
jecxz
roll
test
nop
mov
xor
shr
xchg
sbb
subl
mov
pop
insl
in
fdivs
push
test
shrb
das
loop
ljmp
push
cmp
mov
or
and
rcrb
test
mov
movsl
adc
loop
cli
pop
adc
pop
in
xchg
inc
pop
push
les
addb
add
out
jne
adc
xor
pop
rcll
add
mov
test
aam
inc
mov
lods
sub
addr16
adc
xchg
sub
push
cmp
movsb
cmc
or
adc
out
push
stc
jo
push
pop
push
lahf
popa
hlt
hlt
inc
jo
push
xor
jo
leave
sub
outsl
or
test
lcall
mov
xchg
rol
cs
adc
xchg
mov
push
loop
cmp
rolb
subl
aas
xchg
jl
inc
xor
scas
aad
add
pop
sbb
lods
fs
movsb
dec
push
sbb
psubsb
inc
push
scas
mov
sbb
pop
leave
pop
dec
jne
ret
jbe
inc
movsb
add
sbbb
push
add
inc
test
mov
cmc
bound
adc
popa
popf
push
ret
adc
dec
adc
pop
push
aad
mov
push
and
push
xor
add
mov
inc
lea
ss
nop
inc
std
inc
cmp
mov
sarl
pop
mov
repnz
rclb
xorb
xor
adc
imul
push
push
jae
cmp
clc
fidivs
xor
and
push
cmp
iret
lret
cmc
pop
pop
inc
jge
and
frstor
lahf
inc
push
dec
xor
mov
xor
imul
jbe
mov
stos
loope
jno
and
inc
xchg
sub
movsb
jmp
insl
in
lock
push
shlb
movsb
std
add
xor
pop
inc
add
roll
and
scas
loop
xchg
xor
or
adcl
xlat
popa
dec
mov
lret
jno
add
cltd
pusha
xor
repnz
cmpsb
orl
cmp
psraw
push
mov
jne
jmp
adc
daa
pop
addr16
insb
and
movsb
add
add
test
aaa
sbb
ret
inc
mov
push
leave
dec
sub
jns
cmp
and
push
pop
ret
dec
cmp
add
push
ljmp
lahf
adc
or
push
add
sub
sub
jmp
mov
leave
and
es
out
xor
adc
jb
shrb
sub
dec
mov
mov
push
dec
jae
mov
xchg
sbb
push
ss
fwait
adcl
sbb
popf
push
push
inc
sub
movsl
pop
in
jne
xchg
cmc
sub
xchg
dec
xchg
dec
pop
sbb
and
mov
xchg
add
es
dec
in
int3
out
xor
mov
pop
xor
or
inc
into
pushf
or
shl
test
dec
cmp
insl
subl
mov
and
jmp
or
mov
sub
cmpsb
adc
xor
push
ret
fadd
jl
movsb
test
pusha
pusha
push
insl
aaa
xor
pop
adcl
sbb
ficoml
mov
or
mov
or
cmp
mov
cmpsl
mov
shrb
pusha
jno
mov
push
rclb
repz
jl
lods
push
cmp
lock
jae
xchg
mov
imul
popa
adc
sub
jle
and
je
push
mov
adc
pop
sub
out
inc
or
enter
mov
clc
or
cmp
adcb
add
add
add
mov
adc
push
add
or
inc
incl
sbb
jle
sub
out
adc
xchg
sbb
xchg
xchg
idivb
push
add
xor
mov
call
or
dec
jns
adcl
adc
cwtl
push
mov
cmp
cmp
pop
adc
xchg
dec
sahf
cmp
pop
fwait
xchg
call
or
inc
js
add
cmp
push
sub
sbb
xchg
mov
jno
test
cmp
dec
or
cmpsl
adc
mov
movsb
add
inc
mov
pop
push
dec
adc
fcmovu
jl
and
pop
jge
fnstenv
add
lock
pushf
movsb
out
outsl
jge
lea
ss
inc
pop
sbb
push
lods
jg
inc
rolb
scas
loop
test
in
mov
sub
sbb
lret
shlb
jge
sbb
popa
fldcw
scas
fisttpll
stc
add
add
inc
insb
mov
cmp
sbb
cmp
jne
sbb
inc
test
mov
out
and
loop
push
popa
pop
pop
jne
adc
sbb
fsubrp
fildl
int3
and
add
les
mov
push
xchg
adc
bound
les
inc
jle
faddl
stc
xchg
push
out
inc
inc
and
jp
fildl
adc
pop
fdivl
loope
leave
or
pop
pop
je
sbb
cwtl
mov
add
cmp
mov
inc
xorl
shlb
jnp
jmp
jecxz
dec
mov
jno
xor
scas
dec
inc
lcall
and
sbb
shrl
push
imul
xchg
inc
idivl
popa
mov
andb
add
test
out
xchg
sbb
xchg
outsb
add
rcrb
fstl
test
push
sbb
outsl
dec
sub
add
mov
and
inc
in
inc
pop
xor
xor
inc
adc
stc
pop
and
jmp
jl
mov
das
pop
sbb
jnp
insl
jecxz
rolb
sbb
loope
insl
loop
cltd
push
mov
pusha
adc
imul
inc
xchg
icebp
sbb
fldenv
pop
add
fsubr
ljmp
lock
inc
adc
imul
dec
dec
je
testb
and
add
cmc
sbb
sub
inc
pop
push
pop
sub
stos
sub
popf
pusha
and
add
popf
aaa
aas
xchg
icebp
jle
test
orb
cmp
mov
inc
loope
push
dec
jo
test
jmp
andb
and
into
xchg
popl
movl
ja
repnz
mov
add
push
lods
xor
jnp
into
les
or
in
jg
imul
lods
addl
xor
adc
mov
sbb
sub
nop
leave
sbbl
add
pop
push
xchg
sub
popf
addr16
mov
add
movsl
ffreep
fiadds
xor
adc
push
std
jmp
stos
pop
push
iret
add
les
test
xlat
or
or
imul
aam
test
mov
and
inc
test
test
or
in
add
adc
mov
inc
mov
outsl
subb
xor
add
jne
dec
dec
in
mov
fildll
dec
push
xchg
shll
rorb
inc
sbb
loopne
push
repnz
in
shrb
push
test
dec
outsl
push
pop
loop
dec
or
dec
add
test
cs
mov
mov
dec
jns
or
mov
rcll
sub
xchg
or
mov
push
push
mov
test
insb
movsb
add
dec
jle
push
fstps
add
nop
add
dec
jle
xor
dec
mov
je
repnz
push
test
and
out
nop
sub
lahf
loope
lock
inc
dec
inc
gs
xchg
add
test
jb
push
push
dec
xchg
or
inc
cmpsb
jno
adc
test
popf
xchg
pop
bound
stos
scas
xchg
lret
fld
add
setb
cmpsl
lcall
enter
andl
and
push
sarb
int
dec
ja
pop
mov
shlb
pop
xchg
and
sbbb
icebp
or
mov
andb
jo
xor
imul
mov
loop
nop
sbb
push
movsl
jo
clc
xor
sbb
stos
pop
in
adc
pop
dec
scas
mov
jecxz
push
xchg
and
je
jb
lods
sbb
dec
arpl
aam
into
dec
in
push
pop
sub
push
sbb
popf
xor
subl
andl
push
adc
add
jmp
leave
loopw
inc
adc
mov
sti
mov
sub
or
out
xchg
xor
sub
js
ficoml
xchg
inc
push
jb
push
sbb
int
cmp
push
inc
test
pop
fldt
mov
fdivl
inc
xchg
pop
add
mov
loop
aam
adc
insb
loop
cmpb
xchg
mov
mov
test
mov
outsl
out
or
cld
dec
pop
push
mov
sub
mov
daa
dec
sub
mov
jne
sbb
inc
add
dec
add
xor
test
xchg
adc
push
stc
bound
push
inc
js
adc
ss
mov
test
in
pop
es
incl
push
push
add
out
ja
inc
sbb
or
cmp
add
sbb
or
in
push
insl
gs
add
dec
ss
sub
inc
clc
adc
scas
insb
jle
aas
insl
addr16
pop
dec
insb
mov
push
mov
out
fdivrl
inc
aam
push
push
loopne
mov
sbb
pushf
imul
cmpsb
out
xchg
xor
or
or
push
shl
pusha
mov
inc
adc
mov
movl
inc
dec
les
push
xchg
andb
add
inc
xorb
and
mov
clc
jp
push
jo
xor
je
ds
aaa
inc
jne
push
dec
xor
cld
pusha
nop
mov
pop
inc
ja
mov
or
sarl
jl
int
push
push
gs
int
test
mov
adc
mov
in
jo
push
push
or
leave
jl
mov
cmpl
push
xor
je
imul
adc
add
dec
pop
and
icebp
mov
jmp
sbb
add
sub
add
push
rolb
adc
dec
sub
add
sbb
mov
mov
xchg
sub
and
push
or
adc
pushf
mov
ja
mov
push
sub
dec
sub
cmp
dec
call
sub
and
or
sbb
addb
lret
into
pop
mov
jb
mov
insb
inc
inc
outsb
xorb
roll
xor
js
push
movsl
dec
jp
adc
loopne
stc
ret
sub
push
cmpsb
xor
inc
cmpsl
lock
and
push
enter
jae
orb
bound
call
push
je
adc
xor
iret
aaa
jg
ficoms
popf
push
orb
cmp
sbb
adc
test
inc
cmp
add
add
jg
dec
pop
dec
add
or
scas
fcomi
cmpsb
jmp
enter
jno
addl
add
pop
lahf
sub
in
xor
sbb
pusha
lock
adcb
movsl
aas
fdivp
or
repz
push
inc
jae
dec
mov
mov
lret
push
sub
add
mov
js
push
fisttpl
or
js
outsl
inc
jb
insb
pusha
mov
pop
and
cli
dec
add
cli
push
dec
outsl
mov
andl
jns
inc
sub
mov
int
inc
fcomps
imul
dec
adc
push
push
sbb
cmc
mov
inc
add
jmp
jno
push
inc
xor
push
add
mov
cmp
dec
in
push
push
or
loope
sub
sti
mov
add
and
dec
in
and
pushf
push
lea
inc
add
and
inc
sbb
subb
or
mov
and
add
or
jnp
adc
add
and
adc
subb
cmp
out
or
and
add
int3
lcall
sbb
adc
adc
inc
jo
mov
int3
or
jo
add
push
jle
add
push
adc
xor
add
pop
or
inc
pusha
and
mov
mov
adcb
and
and
or
hlt
xlat
int3
int3
int3
sbb
lcall
cltd
mov
dec
xchg
or
xchg
fstp
in
mov
shlb
imul
add
push
and
mov
mov
add
inc
and
or
mov
add
dec
or
inc
inc
dec
lock
loopne
out
ror
cltd
xor
aas
push
mov
dec
pusha
xlat
and
les
fcoml
fdivs
xchg
adc
xchg
int3
add
cmp
mov
stos
pusha
and
adc
ret
or
sahf
and
xor
pop
adc
and
mov
jbe
pop
sub
and
mov
or
testb
jbe
int3
push
push
sub
out
in
in
dec
cmp
jle
push
push
or
rorb
bound
push
dec
cmpsb
adc
or
jb
sub
sbb
dec
pop
mov
pop
cmpsb
cmp
xchg
or
push
fxsave
int3
pusha
pushw
js
mov
and
insb
lock
mov
pusha
pusha
shrw
adc
and
xor
sbb
in
push
push
sbb
inc
and
jo
jbe
sbb
je
cmpsb
or
subl
add
sbbl
insb
pop
ret
xchg
sub
out
les
mov
bound
nop
int3
call
mov
add
add
inc
iret
bound
lcall
xor
enter
int3
in
movsb
or
and
pop
or
insb
add
pusha
in
ret
jmp
and
and
call
decb
jb
gs
xor
cs
insb
adc
jo
cld
cs
xor
mov
rol
ret
push
int3
inc
call
les
add
xor
sub
in
add
jnp
or
pop
divb
adc
out
dec
pusha
mov
pop
cwtl
ret
sahf
rcrl
and
in
or
add
mov
rcrl
jbe
pushw
or
addb
or
sbb
or
xor
repnz
popf
in
pusha
push
dec
dec
mov
inc
xchg
adcb
xor
clc
cmpb
jmp
xchg
xor
pop
fdivr
push
push
stos
xorb
popa
add
ja
cmp
sbb
loop
aam
or
fld
insb
mov
out
decb
cmpsb
or
lods
pop
ret
pop
add
cmpsb
push
inc
add
scas
cmp
mov
fwait
pop
jg
pop
jb
push
add
push
jb
je
push
jb
outsw
fucomi
ljmp
gs
arpl
outsb
inc
sub
jae
sub
je
push
mov
add
push
gs
push
or
addr16
gs
sti
testl
outsb
jb
imul
js
push
ja
insl
in
insb
jae
es
sub
push
imul
mov
jae
sub
jo
outsb
fs
push
gs
mov
bound
jb
push
clc
jne
dec
outsl
jne
je
add
fisubrl
or
bound
imul
pop
inc
jns
outsl
outsl
mov
cld
cltd
mov
xor
popa
jne
subb
js,pn
push
movsb
shlb
sub
fisubs
ja
outsl
sub
jae
ret
sbb
mov
outsl
mov
sub
jns
push
cs
fbld
insl
sbb
push
jne
jns
add
or
insl
cmp
jne
push
or
jbe
sub
and
mov
test
jae
xor
inc
jae
or
or
pop
xor
fisubl
pop
movsb
jo
mov
aaa
xlat
adc
or
insb
repnz
or
sbb
mov
sbb
jae,pt
inc
dec
push
cld
jbe
je
addr16
ljmp
lods
cmp
and
into
or
dec
sbb
cmpsl
gs
arpl
cs
insl
dec
mov
dec
gs
inc
cmp
mov
mov
mov
popa
je
sbb
in
test
out
imul
fs
insb
insl
icebp
mov
icebp
out
mov
push
jno
ja
xchg
sub
sub
and
sub
addr16
xchg
or
adcb
sub
inc
jbe
mov
lcall
dec
popa
xchg
or
xchg
xor
jbe
jae
je
dec
sbb
call
cmpb
jp
imul
jns
sbb
lock
jnp
jns
aaa
inc
jne
jb
lds
pop
jo
sub
or
pop
fs
push
das
cmp
je
and
mov
mov
outsb
jbe
cs
xchg
in
mov
pop
insb
sub
enter
ljmp
fisubrl
push
pop
sarl
aaa
fimull
xchg
mov
xchg
jnp
xor
outsb
cmp
fstpl
push
mov
inc
daa
inc
sub
jle
loop
cmp
adc
ds
jne
in
sbb
and
nop
and
nop
outsl
cwtl
mov
dec
cmc
insb
xchg
subl
push
ds
call
ja
push
lock
push
add
scas
gs
pop
cmpb
aaa
cmc
fwait
mov
imul
jae
push
pusha
jne
cmp
int3
outsb
dec
pusha
mov
leave
mov
or
scas
cwtl
test
mov
and
inc
jne
adc
mov
dec
loop
jae
mov
pusha
sbb
insb
ds
arpl
adc
sub
push
inc
xor
push
push
loop
mov
negb
js
dec
dec
inc
cli
jbe
inc
das
sub
or
fisubs
imul
inc
mov
lods
ss
dec
push
cmp
pop
add
sbb
sub
sahf
push
xchg
mov
xchg
jo
mov
scas
and
push
jae
mov
bound
xor
imul
push
push
shll
or
sti
mov
dec
dec
shlb
in
jo
ja
fs
test
xchg
imul
sub
iret
int3
fcompl
adc
pop
push
arpl
rclb
inc
and
jo
jo
mov
xor
inc
insb
jns
retw
push
mov
daa
inc
fcoms
idiv
jns
xor
je
cmp
popa
call
popa
clc
lcall
les
aam
mov
je
subb
dec
gs
adc
add
dec
bound
rcll
icebp
inc
jne
mov
cltd
push
cmp
lret
fs
outsb
addr16
mov
in
push
mov
inc
sbb
sbb
and
inc
jb
ja
add
mov
dec
add
jge
ss
push
sahf
dec
imul
mov
mov
dec
jb
xorl
inc
enter
shlb
or
dec
insb
int3
mov
push
push
int3
inc
test
inc
sbbb
jecxz
jmp
icebp
leave
scas
or
lods
inc
dec
push
push
push
inc
inc
dec
pusha
cmp
or
sbb
push
dec
inc
inc
gs
xchg
push
push
dec
dec
cwtl
imul
jecxz
les
stc
sub
popa
push
lret
mov
rolb
jmp
mull
lret
or
hlt
jns
or
or
adcb
jns
and
and
mov
push
loopne
lds
dec
dec
push
loop
jbe
push
sbb
dec
inc
insl
xor
mov
into
addl
js
daa
pop
cmpsl
fadds
mov
jae
xor
add
cmp
fdivl
clc
gs
inc
xchg
repnz
inc
lock
popa
adcb
push
and
dec
test
sbb
daa
add
mov
push
sub
adc
add
jbe
or
repnz
pop
in
sub
out
sub
cmp
jo
hlt
xor
test
bound
popa
addr16
cmp
jns
fs
sub
xchg
adc
inc
mov
popw
out
push
sbb
out
pusha
cmp
jbe
insb
int
push
das
sub
or
loopne
and
adc
push
jb
or
arpl
imul
je
aaa
push
fcomps
cmp
cmpsb
sbb
xchg
cmp
data16
mov
mov
and
adc
mov
sub
and
andb
in
in
add
dec
outsl
bound
leave
inc
dec
inc
and
fsubl
cmp
test
lcall
out
pusha
dec
xor
inc
andb
insl
add
mov
inc
test
test
or
add
and
add
scas
push
push
push
cmp
insl
xlat
fwait
pop
add
pop
fistl
fmul
cmp
add
fwait
enter
orb
mov
cs
mov
dec
enter
ret
fistpll
push
push
cmp
and
add
icebp
mov
jb
mov
neg
adc
push
ds
mov
cs
add
loopne
inc
repnz
rcrb
dec
in
not
and
lahf
aaa
adcb
and
js
lea
add
add
jmp
add
pop
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
