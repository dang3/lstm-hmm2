mov
sub
cltd
cmp
stc
rcrl
aad
dec
incb
cmpsl
daa
rcr
xlat
pop
jmp
stos
sub
sub
fldt
pusha
xor
fisubl
mov
bound
push
sub
jbe
xor
push
aam
aaa
loop,pt
dec
and
dec
mov
fcom
mov
push
bnd
fwait
pop
xchg
pop
inc
pop
mov
mov
insb
inc
jl
in
iret
jecxz
arpl
ret
mov
sbb
stos
and
bound
in
or
push
dec
aas
inc
mov
bound
push
cwtl
mov
or
adc
cmp
cld
or
xchg
xor
scas
and
repnz
push
push
push
call
pop
and
add
add
add
call
pop
pop
pop
add
pop
pop
add
mov
jmp
push
mov
sub
push
push
push
and
mov
mov
add
xor
add
rol
loop
pushl
pop
add
mov
mov
mov
sub
sub
mov
ror
add
add
ror
xor
neg
ror
sub
add
xor
xor
sub
ror
sub
sub
ror
rol
mov
test
jne
call
push
push
push
push
push
mov
call
add
mov
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
push
push
push
push
push
push
mov
call
add
mov
test
je
lea
push
mov
add
push
pop
rep
pop
mov
mov
mov
mov
push
push
push
push
push
call
pop
test
jne
push
push
push
push
call
test
je
mov
mov
mov
push
mov
add
mov
rep
pop
add
add
mov
add
movzbl
lea
push
push
pop
rep
pop
mov
test
je
push
mov
add
mov
mov
mov
add
rep
pop
dec
jne
mov
sub
je
mov
mov
add
mov
test
je
add
mov
test
je
lea
shr
lea
movzwl
push
mov
shr
mov
and
add
add
pop
dec
jne
mov
shr
jmp
dec
jne
movzwl
add
jmp
dec
jne
add
inc
inc
loop
add
jmp
mov
mov
add
mov
cmpl
jne
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
test
je
mov
add
mov
test
je
mov
add
mov
mov
test
jne
mov
add
mov
add
push
mov
call
test
je
mov
mov
mov
test
je
test
je
and
jmp
add
inc
inc
push
push
mov
call
mov
mov
addl
addl
jmp
add
jmp
mov
mov
mov
mov
mov
cmp
je
push
push
push
call
pop
test
jne
mov
add
mov
test
je
add
xor
push
push
pop
repz
pop
je
mov
add
mov
sub
jb
cmp
jbe
add
jmp
push
lea
push
push
call
lea
push
push
pushl
pushl
call
test
je
push
mov
lods
test
je
sub
add
stos
jmp
lea
push
pushl
pushl
pushl
call
pop
jmp
mov
cmp
jne
mov
add
mov
pop
pop
pop
leave
ret
movl
movl
movl
movl
ret
faddp
faddp
ret
lea
ret
lea
nop
aam
andl
rorb
and
cs
leave
push
outsb
lcall
bound
insl
movsl
mov
imul
out
xchg
shl
rorl
mov
lcall
pop
inc
sbb
fistpll
rcrl
stc
dec
hlt
jecxz
pop
mov
mov
test
fwait
test
adc
icebp
xorl
cld
mov
add
stos
popf
fadds
mov
add
cmp
push
push
mov
pop
pop
jne
push
sub
pop
push
test
pop
push
push
push
push
lea
push
push
push
push
clc
cld
lea
ja
cmp
test
clc
cmc
mov
jb
push
push
sar
pop
pop
test
nop
jmp
daa
out
push
fmull
inc
addb
jl
dec
popa
adc
mov
adc
add
push
jnp
push
dec
inc
pop
pop
push
ror
pop
and
push
or
pop
mov
add
jnp
push
add
push
push
push
inc
pop
pop
pop
push
add
mov
pop
jbe
push
jle
test
pop
jbe
test
add
lea
cld
stc
push
pop
push
add
not
not
sar
stc
add
and
push
ror
pop
push
test
pop
cmc
xor
add
jge
jns
cmp
push
ja
xchg
xchg
pop
push
add
push
push
test
pop
pop
and
testl
jne
jmp
push
call
stc
jp
fsubs
fdivr
fbstp
push
shll
mov
fucomip
add
les
pop
cmc
jnp
push
cmp
pop
clc
addr16
addr16
stc
jle
cmp
cld
stc
xor
or
sub
push
jae
and
pop
clc
push
add
pop
and
push
push
or
pop
pop
push
pop
jnp
push
add
test
push
push
push
push
pop
pop
stos
push
push
pop
pop
pop
pop
loop
jecxz
ja
fstpl
sbb
push
jo
cmp
pop
jmp
mov
pop
jns
push
aaa
out
in
pop
dec
push
jmp
jge
fs
ffree
xor
and
pop
push
and
inc
push
lods
dec
sub
fisubl
add
cmp
add
mov
fstl
inc
test
xor
pop
into
mov
mov
stos
inc
aad
or
psubd
je
add
jmp
mov
dec
push
and
mov
mov
jne
cld
test
push
push
jns
shl
pop
pop
jne
add
jl
push
xor
pop
cmc
push
jg
sub
pop
js
rol
jmp
clc
jae
jae
push
rol
pop
nop
js
jp
push
inc
pop
cmp
push
movzbl
sub
cmc
loop
pop
nop
sub
push
and
pop
clc
jle
sar
jg
push
test
pop
test
nop
insb
loopne
out
jp
ljmp
inc
dec
inc
cmovnp
call
into
in
shll
sbb
fisttpl
inc
jne
rcr
inc
cld
mov
movsl
sub
jle
cmp
push
pop
pop
fcmovne
iret
push
jmp
aad
ret
addr16
int3
jo
cli
cmp
pop
outsb
shrb
arpl
lock
sbb
add
and
shll
mov
and
insb
shrl
xor
jp
stos
push
ja
cmpsl
adc
das
pop
es
nop
ljmp
sub
xchg
xor
jbe
enter
shlb
dec
pop
fsubrp
add
out
enter
cs
mov
pusha
insb
imul
pinsrw
push
mov
aas
or
popa
ss
push
fwait
xchg
mov
popf
dec
ss
xor
in
dec
cmp
sbb
push
xor
lret
mov
nop
cmpsl
adc
jecxz
mov
cmpsb
jecxz
aas
inc
dec
inc
sti
in
fst
push
sbb
adc
mov
mov
icebp
pushf
ss
sbb
jnp
cmp
pop
mov
sti
rolb
sbb
dec
xor
iret
test
popaw
bound
into
cmp
loop
sahf
fldenv
jnp
pop
jle
mov
mov
push
pop
ret
in
ficomps
mov
mov
or
rcll
mov
idivb
in
out
pop
stos
xlat
push
cmp
mov
jecxz
scas
push
dec
mov
mov
lcall
add
and
cmp
inc
mov
lret
cmpsl
sub
loopne
sbb
mov
lea
movl
dec
and
jge
test
insb
arpl
ds
pop
sbb
mov
pop
cmp
xor
adc
adc
mov
push
mov
jo
or
test
xor
mov
pop
push
insb
test
xchg
loop
dec
pusha
iret
in
xchg
mov
lods
daa
cmc
ljmp
push
xor
sub
and
pushf
sub
out
and
into
shl
lods
xchg
dec
rorl
cmpsl
sbb
in
pop
call
sbb
sbb
jno
shl
cmpsb
push
mov
jnp
or
lcall
jp
sbb
xchg
xchg
repz
std
in
movsl
sbb
and
arpl
insb
xchg
cltd
popa
dec
and
inc
sub
inc
stos
add
ret
xchg
aad
rorl
cmp
divb
call
inc
mov
xchg
push
addr16
test
mov
push
or
ljmp
push
pop
outsb
gs
repnz
jne
imul
cwtl
cmp
lahf
jae
lock
inc
push
push
adc
insl
xchg
fidivl
divb
adc
shll
aaa
arpl
xchg
or
push
lods
cmp
mov
sbbl
call
fisubrs
sbb
push
inc
or
inc
bound
outsl
pop
fmulp
iret
add
in
movntq
out
xor
fwait
cltd
imul
fcmovnbe
xchg
adc
xchg
fnstsw
enter
or
xchg
pop
je
jo
xor
cwtl
cmp
fidivrs
xor
mov
mov
adc
sub
pop
or
je
ljmp
jle
fpatan
fimuls
and
repnz
rcrl
push
test
dec
jno
mov
mov
pusha
mov
xor
mov
fdivs
jp
push
pop
xor
pop
fdiv
add
ficomps
jp
mov
in
int
inc
xchg
stos
out
fwait
icebp
adc
pusha
lock
rolb
inc
add
jns
in
out
mov
lret
and
push
orl
arpl
ret
sub
cmc
adc
in
add
adc
les
cwtl
in
dec
pop
mov
xor
add
hlt
mov
pushl
push
push
mov
ljmp
daa
jne
imul
shl
jecxz
mov
test
out
fsubrp
in
push
clc
pop
addl
xchg
rcr
sbb
sub
jbe
xor
xor
stos
out
ljmp
or
or
inc
xor
popf
enter
mov
mov
cltd
pop
clc
inc
adc
daa
adc
sbb
fnsave
ret
xor
jae
pop
lea
ret
loop
sub
sar
pop
push
or
xor
imul
mov
in
or
xchg
sub
cli
or
adc
mov
and
xor
jmp
cmp
sub
ljmp
in
sbb
hlt
ret
out
xchg
or
jecxz
mov
ss
and
sbb
pushf
lea
dec
sub
pusha
ret
or
sub
lret
xchg
js
inc
outsb
dec
dec
out
push
repz
mov
addb
sahf
adc
jnp
inc
cmc
fstpl
cmc
fcompl
addl
sub
and
inc
mov
rcrb
jl
test
sbb
cs
jo
out
in
xchg
stos
mov
mov
in
adc
sahf
out
cmp
shlb
in
xlat
int3
inc
mov
int
out
or
orb
jbe
sub
movsl
arpl
xor
xchg
jae
and
fldenv
cmp
scas
arpl
aas
jnp
sub
cli
sti
pop
pop
nop
jns
pop
and
pop
loop
mov
and
lock
jmp
gs
imul
test
js
mov
push
cmp
test
mov
sub
lahf
rcl
jno
mov
pusha
fmuls
loope
movsb
mov
in
or
and
notb
push
mov
inc
sbb
push
inc
xor
inc
cmc
daa
jbe
push
mov
cmp
stc
in
or
inc
ficompl
adc
es
notb
movsb
jecxz
dec
das
sbb
pop
addr16
fwait
loop
popf
dec
pop
dec
mov
scas
xchg
cltd
mov
test
rolb
addr16
ss
and
aaa
jl
cld
loop
ret
in
add
inc
test
lret
rcrl
std
test
pushf
xchg
mov
xchg
inc
jno
cmpsb
loope
adc
inc
fld
jns
dec
xor
mov
repz
bound
shrl
push
pusha
imul
xlat
mov
adcl
outsb
adc
inc
rcr
andb
cmp
or
sbb
mov
push
add
lods
xchg
and
mov
popf
notb
lcall
pop
mov
pop
xorb
rcr
lret
xchg
lods
xor
dec
push
stos
jae
push
popf
cmp
xor
pop
inc
ficoms
mov
shlb
and
sub
rolb
inc
iret
mov
and
and
int3
sub
je
or
sub
aad
push
xor
and
sbb
test
push
in
push
mov
or
cmpsb
nop
push
fisubs
in
sub
adc
ljmp
in
nop
and
dec
rcll
mov
dec
xor
scas
aad
push
in
inc
loope
jp
fcompl
jge
jmp
lea
or
mov
in
sbb
fistps
js
enter
and
subl
pop
jno
cltd
fsubr
mov
setge
cmpsl
lock
jb
add
jno
int3
xlat
xor
idivb
adc
shlb
and
aam
cmp
inc
cmp
sahf
pusha
xchg
iret
rol
and
stos
lret
pop
loopne
mov
fiadds
hlt
xchg
and
xchg
cmpsb
push
sarb
mov
nop
cmp
das
cmp
fstl
sbb
xchg
out
jns
lds
or
xor
idivb
push
leave
add
ror
roll
cmpsl
dec
loopne
ret
and
out
xor
loopne
orps
cmp
loop
ds
mov
push
pop
fcomps
stos
adc
shl
push
push
sub
jg
adc
mov
inc
es
jle
xor
fiaddl
in
clc
inc
xchg
fisubrs
xor
in
repz
jmp
xor
imul
ror
popa
lret
loop
or
xchg
sub
iret
sbb
cltd
sbb
mov
cltd
out
and
loope
lods
imul
cmp
iret
enter
and
sti
out
pop
aaa
fstpl
pop
xor
lcall
stc
or
ud0
push
cmp
mov
adc
adc
stos
cmp
mov
jb
cld
mov
stos
adc
js
inc
ficoms
das
outsb
stos
or
sbb
add
ret
push
mov
pop
push
cmpl
xor
lock
nop
sub
je
adc
jns
lods
test
ja
arpl
and
enter
psllq
call
cmp
ljmp
push
shlb
in
popf
cmp
mov
lods
sbb
xchg
xor
addl
and
into
hlt
fildl
cmp
movsb
aam
pop
lock
test
jb
mov
sbb
jge
pop
mov
std
lret
mov
into
mov
sbb
push
in
call
outsl
xchg
lds
shrl
leave
out
push
out
jmp
inc
mov
push
notb
pause
fsubs
xor
dec
xchg
mov
xor
js
jge
cmp
and
sarl
sbb
das
adc
or
pop
cmp
into
mov
out
or
push
les
jnp
inc
sbb
mov
addl
icebp
mov
fcmovu
push
mov
mov
orb
jno
xchg
sbb
pop
dec
popa
xchg
push
nop
repnz
dec
out
ret
jne
jp
inc
sti
lock
cmpl
mov
clc
pop
cs
adc
cmp
jg
pop
sbb
mov
inc
imul
fcomp
xchg
push
mov
mov
sarl
xchg
or
sbb
sub
shlb
xor
nop
cmc
into
arpl
or
adc
pop
inc
xchg
sub
inc
test
mov
lods
mov
shlb
pop
pop
jle
int
lock
inc
das
cmp
ret
rcrl
push
hlt
jnp
xor
adc
data16
pop
jp
es
lock
bound
dec
dec
std
push
sbb
enter
aam
inc
mov
andb
sub
mov
icebp
insb
push
fcmovb
into
mov
mov
inc
cmpsb
insb
ljmp
push
inc
fnstsw
dec
fcmovne
or
dec
jb
or
jns
int3
out
cwtl
cmp
add
lods
cmp
bound
pop
or
jmp
sti
dec
pushf
xchg
push
sahf
xchg
mov
mov
xor
xchg
or
jne
or
cmp
test
std
push
push
mov
imull
subl
sbb
cs
lock
stos
aam
mov
and
push
fiadds
push
aam
sbb
ret
pop
cld
mov
inc
fwait
dec
add
hlt
xor
jmp
lea
in
cmp
mov
popf
and
and
add
insb
inc
int3
add
push
dec
cmp
or
pop
mov
test
inc
push
shlb
add
ret
dec
shrb
cli
xchg
jb
inc
xchg
enter
mov
lods
fnstcw
fs
clc
or
movsb
mov
sahf
mov
les
adc
sarb
lret
ss
jb
mov
fisttpll
inc
jne
stc
ret
test
pop
lahf
adc
mov
pop
sbb
cld
sub
mov
movb
or
ss
sub
cmp
cmp
cs
cltd
dec
xor
fists
mov
leave
adc
pop
ja
xchg
je
lock
jp
push
outsb
fcoms
pop
jne
jge
and
pusha
jecxz
insb
imul
out
xchg
int
das
or
mov
cmpsb
and
fs
xchg
loop
inc
jecxz
idiv
or
xorl
dec
es
test
mov
xchg
push
push
jecxz
int
leave
std
mov
cmp
jne
dec
out
mov
jp
ds
and
xchg
out
push
pop
mov
icebp
mov
fwait
add
orb
lahf
jl
stos
adc
push
sub
xchg
rcrb
mov
pop
loopne
mov
in
sbbb
insl
fs
and
sbb
int3
insl
push
add
or
mov
aad
pop
or
stos
icebp
jo
addb
sub
popa
out
pop
xchg
cmpsb
sub
loope
int
push
ror
mov
jbe
push
shrb
mov
std
push
xorb
push
mov
mulb
lahf
sbb
enter
fbld
adc
mov
sbb
cli
jecxz
xchg
adcb
leave
sbb
loopne
xchg
mov
mov
mov
pop
add
insl
cmp
adc
xchg
gs
stos
dec
lcall
push
and
sbbb
cli
fldl
mov
mov
das
stos
clc
sbb
adc
add
repz
gs
shr
insl
mov
jg
mov
sahf
hlt
mov
adcl
loope
fdivl
ret
mov
jmp
outsl
scas
inc
lods
cmp
inc
xor
sti
mov
js
pusha
lea
xchg
loope
or
aam
and
out
xlat
out
cmp
cmc
jp
sbb
mov
cwtl
test
xor
jns
lcall
mov
inc
into
jns
and
xchg
nop
out
mov
inc
mov
enter
movsl
aam
jne
adc
push
mov
aas
js
pop
sbb
mov
out
daa
cltd
sbb
lret
push
dec
xor
fstpt
pop
std
and
or
push
adc
test
push
pusha
outsl
pushl
test
imul
jp,pn
sub
lods
js
rorl
int3
add
mov
ds
xor
movsl
pushf
imul
or
mov
pop
mov
in
xor
pop
fdivl
jl
mov
aam
jecxz
pop
sti
add
repnz
push
push
add
loope
rorl
rorb
sar
mov
cmp
sbb
das
inc
insl
sti
icebp
repz
rolb
aas
mov
cmp
pop
mov
fimuls
iret
in
mov
cmp
lods
mov
or
shl
push
daa
inc
icebp
mov
test
jno
orb
scas
xor
xor
mov
pop
cmc
leave
push
xchg
cmpsl
movsl
sbbl
pop
mov
pop
out
xchg
leave
ja
xor
dec
dec
and
mov
xchg
out
cli
inc
adc
or
shll
int3
fs
jne
out
pop
xchg
call
out
add
das
inc
mov
loope
xchg
std
mov
push
add
loope
xchg
sbb
scas
sub
jmp
out
in
shr
pop
mov
outsb
adcl
dec
int3
inc
inc
fldenv
jge
inc
xor
xchg
adc
scas
add
and
out
sub
jnp
adc
pop
mov
cmc
dec
aam
insl
es
xor
push
mov
out
out
push
sbb
push
mov
sti
jge
pop
aam
xor
cli
or
push
rcrb
fdivp
enter
cltd
sub
ljmp
xor
mov
bound
mov
mov
loop
in
roll
cmp
lahf
push
add
and
cmp
and
out
jp
fstp
out
cmc
in
adc
sti
cmp
and
mov
add
aaa
call
xchg
movsb
mov
test
mov
imul
stc
cmp
je
mov
out
jg
mov
aad
push
mov
xor
bound
outsl
inc
xchg
lock
cmp
subl
fists
add
sbb
gs
aaa
leave
scas
xor
loopne
movsl
in
scas
sub
mov
stc
dec
or
or
jno
lock
xchg
cld
add
cmp
sti
inc
in
adc
ret
divl
pusha
xchg
push
mov
aas
xlat
mov
mov
movsl
fwait
ret
pop
mov
addr16
xor
fs
sbb
xor
outsb
inc
push
ljmp
inc
adc
adc
nop
mov
add
rcl
lret
out
xor
mov
call
sbb
push
cmp
cmp
or
dec
pop
jo
pop
les
dec
jg
ljmp
xlat
rcl
xchg
xchg
jb
stos
push
adc
repnz
mov
loop
jg
mov
daa
loop
fs
jge
dec
or
je
sti
inc
jge
pop
or
and
cmpb
pusha
cmpsb
xchg
repz
andb
mov
loope
ljmp
add
cmpsl
mov
jns
sbb
movsb
or
or
jne
out
pop
pop
dec
jb
xor
push
jmp
pop
stc
xchg
adc
cld
and
and
scas
popa
arpl
sbb
addb
adc
mov
xchg
xchg
cltd
lock
xchg
pop
cmpsb
push
lret
xor
adc
out
cld
in
pusha
jno
cmp
dec
cmpsb
ret
in
mov
cmc
into
pop
je
jecxz
and
ljmp
sub
adc
subb
or
adc
cmp
mov
mov
push
insl
dec
cld
sbb
xchg
pop
rolb
dec
push
fxch
mov
faddl
fimuls
jnp
insb
ds
jl
add
jae
or
ss
in
ljmp
flds
xlat
mov
cmpsl
popa
inc
clc
sub
cvttps2pi
xorb
dec
xor
imul
xchg
test
xchg
or
jecxz
mov
cmpl
ja
andb
out
sub
jo
sbb
ja
lcall
scas
aam
and
negl
imul
cmp
mov
js
mov
mov
jp
push
lods
push
sar
scas
jne
adcb
pop
fstpl
mov
mov
mov
fsubs
lret
int3
aam
rolb
pop
inc
js,pn
pop
stc
dec
je
and
xor
in
xlat
cmpsb
xor
and
ret
mov
cmp
xor
flds
popa
fists
sbb
ss
sbb
push
xlat
lahf
mov
or
add
iret
jmp
out
dec
mov
in
mov
push
jno
repz
iret
mov
or
pusha
das
xlat
lds
pop
fcompl
repnz
mov
lret
sub
add
loopne
cwtl
dec
inc
add
add
jns
dec
mov
mov
mov
insl
mov
pop
in
inc
xor
mov
lock
pop
inc
sbb
add
sub
push
xchg
ret
movsl
xor
xor
inc
adc
fmull
fwait
xchg
pop
xor
lods
push
add
dec
scas
dec
hlt
daa
clc
in
or
mov
push
cld
mov
pusha
insl
cs
iret
or
jne
pop
mov
sbb
and
pop
push
outsl
aaa
push
sbb
xor
inc
pop
sarl
inc
out
sub
stos
pop
dec
pop
shll
iret
pop
push
sub
ds
mov
sub
idivl
rolb
mov
mov
xchg
ret
sti
mov
and
xchg
xchg
add
jmp
xlat
mov
orb
popa
jb
dec
mov
push
mov
ficompl
test
push
sar
mov
inc
adc
daa
cmp
mov
inc
decb
test
aaa
xchg
mov
mov
mov
aaa
sbb
push
mov
pop
sub
xor
in
iret
movsl
pop
and
rolb
and
sbb
negl
test
aaa
mov
lock
ret
cmp
and
fnstsw
sub
cmp
stos
bound
pop
hlt
stos
xchg
xchg
neg
xor
sub
pushf
popa
iret
pop
repnz
addl
std
jno
and
jne
pop
add
imulb
sbb
jbe
mov
addr16
cmc
mov
or
sub
shll
call
movsb
rcrb
sub
mov
inc
and
jnp
call
adc
pop
repz
adc
cld
pop
mov
lods
cmc
test
shll
fs
fwait
mov
stc
enter
mov
ucomiss
mov
push
es
cmp
xorb
mov
repz
mov
fsubp
mov
paddq
mov
push
fsub
outsb
ficoms
mov
sub
or
push
pop
cmp
lods
in
fdivl
push
mov
mov
jbe
adc
mov
in
ds
popf
mov
xor
add
mov
leave
adc
push
add
outsb
fbld
stos
aad
dec
inc
push
add
push
mov
jl
pop
les
dec
and
cmc
add
cmp
std
jns
xchg
and
mov
fisubrl
mov
ljmp
out
popa
mov
pop
adc
sbb
mov
pop
pop
mov
push
movsb
xor
scas
int3
shr
stc
in
cmpsl
push
xor
pop
cld
xchg
mov
mov
lods
fdivrp
mov
xor
test
fdivs
xchg
in
pop
push
or
adc
lds
cltd
inc
or
je
pushf
ljmp
xchg
xchg
cmp
dec
mov
dec
xchg
fadds
ja
push
out
mov
outsl
or
loope
add
icebp
aaa
hlt
rorb
or
fcomps
push
jmp
inc
adc
ss
je
sbb
fisubrl
into
jno
scas
jcxz
push
and
pop
and
cmp
loope
xor
faddl
mov
ret
jbe
pop
pop
and
and
adc
dec
mov
jb
fnstsw
nop
xchg
pop
jb
je
inc
sub
pop
mov
or
or
fldt
std
push
cli
ret
mov
pop
push
imul
in
lret
mov
lret
ret
das
push
mov
lret
mov
jno
xchg
jp
sbb
adc
mov
xchg
scas
xchg
or
cmp
or
pop
jae
test
inc
rol
xchg
popa
dec
pop
mov
sbb
in
push
jmp
mov
pop
jge
aad
mov
adc
ret
jns
cmpsb
sub
hlt
lods
cmp
mull
into
cmp
fnsave
adc
scas
cmp
repnz
scas
popa
add
xchg
dec
cmpsb
dec
imul
push
add
add
push
jo
loope
fwait
xchg
je
loopne
out
lcall
push
xchg
add
mov
inc
push
iret
fiaddl
sti
cmpsb
and
dec
inc
pop
mov
out
ljmp
lods
daa
jl
push
mov
push
push
fisubrl
movsb
mov
adc
sbbl
mov
dec
jge
iret
loopne
mov
jnp
adc
push
add
pop
push
dec
ret
rclb
adc
or
in
ds
xor
inc
pop
out
aas
repnz
cmc
jne
or
mov
add
lret
bound
push
mov
aaa
aam
jp
cmc
push
or
fldenv
out
mov
xchg
in
inc
addr16
dec
adc
ret
sub
in
and
pop
enter
ss
stos
fstp
in
idivb
xchg
jne
pop
inc
dec
cmp
push
xchg
sbb
xchg
hlt
adc
mov
cs
push
mov
push
push
jle
loop
sbb
aam
imul
sahf
push
mov
outsl
or
mov
aad
xchg
and
xchg
xor
xchg
push
mov
jmp
mov
cmpsl
lods
xor
testl
mov
in
mov
ljmp
pop
jne
mov
sub
jno
pushf
es
enter
fcomip
repz
lahf
xlat
mov
or
xchg
cmp
arpl
jp
push
ret
mov
mov
push
cmp
add
ja
jge
ret
lcall
xchg
mov
pushf
jno
dec
mov
pop
daa
jl
cmpb
mov
fcmovnb
inc
lahf
popa
stc
lret
filds
pop
popa
xor
outsb
mov
psllq
ret
inc
xor
ja
pop
call
fs
and
push
dec
popa
imul
lock
inc
push
dec
dec
outsb
pop
inc
dec
pop
jmp
add
icebp
cltd
xchg
inc
pushf
cmpsb
fbld
mov
mov
stc
jp
data16
stos
push
bound
fimuls
xor
push
aad
mov
nop
leave
outsl
pushf
lret
lahf
cwtl
xor
jnp
vmwrite
in
mov
out
and
enter
cmp
pusha
xor
jp
fisubrl
scas
imul
lds
ret
cmp
idivb
popf
mov
cmpsb
std
cltd
cld
mov
insl
sbb
imul
xchg
lahf
mov
mov
cld
data16
xchg
mov
movsb
jecxz
lcall
testb
and
repnz
div
in
enter
mov
fistpll
lock
call
mov
loope
int3
jmp
pmulhuw
inc
and
lcall
sbb
xchg
inc
push
and
dec
pop
cld
cmp
lcall
sub
out
push
mov
js
add
cltd
sahf
jecxz
sbb
repz
sub
jmp
add
lods
in
sub
sbb
dec
pause
cmp
cmp
hlt
mov
dec
daa
jnp
int3
std
mov
pop
aas
mov
push
lock
out
dec
push
jae
enter
or
dec
lds
fwait
or
shll
dec
jp
cmpl
daa
xlat
jne
adc
add
sub
lods
xchg
psubq
int3
es
adc
orb
ss
inc
movsl
and
ja
enter
sbb
lret
cmp
movsl
cmp
imull
pop
mov
cld
movsb
insb
clc
push
mov
push
mov
mov
and
cmpsb
loopne
nop
pushw
fnstsw
push
push
rcll
jge
data16
push
aas
enter
add
call
repz
mov
inc
adc
inc
stos
mov
inc
adc
jno
xchg
test
lods
test
mov
aas
cmp
cmpsw
jge
dec
push
out
leave
inc
mov
sub
cmp
cli
mov
xchg
jns
xchg
sahf
in
stos
mov
add
push
mov
cli
push
ret
jnp
arpl
clc
mov
adc
or
jle
lods
lds
in
rolb
add
test
subl
int
in
pop
pop
mov
and
xor
lock
jecxz
sub
outsb
out
es
dec
cld
add
push
stos
hlt
cmc
insl
mov
rcll
or
dec
data16
rcrb
sahf
ds
jno
push
aam
loope
sete
imul
inc
push
fisttpll
push
push
mov
insb
das
pusha
inc
rcll
jbe
iret
test
push
adc
nop
jne
push
mov
pop
mov
mov
int
cli
test
test
cmp
mov
ja
or
mov
cltd
mov
and
cmp
adc
adc
xchg
mov
or
imul
int
jle
lock
scas
insb
cwtl
jle
lock
cwtl
and
push
mov
pop
iret
iret
push
adc
mov
or
xchg
dec
add
jp
cmp
ds
or
and
mov
and
and
mov
and
add
xor
loopne
lock
or
mov
stos
adcb
in
pop
xchg
jge
xor
repz
add
xor
push
in
or
sbb
mov
fsubl
shlb
mov
cmp
loope
pusha
push
and
jge
aad
cmp
jle
cmp
dec
and
pop
ret
lret
jmp
icebp
roll
fdivs
test
lods
sarl
push
xchg
outsb
sub
pop
sti
lea
push
fisttpll
lock
or
xchg
and
lods
pop
mov
inc
notl
pop
loop,pt
mov
sti
cmp
out
jno
ljmp
push
cmp
enter
and
pop
lock
int
mov
fisubl
sub
sub
cld
jp
push
loopne
js
jecxz
mov
jp
add
mov
inc
jle
pop
dec
sbb
pop
adc
imul
xorl
lcall
xor
out
fs
push
pop
sub
fadds
inc
movsb
jmp
sbb
pop
xchg
cmpsb
orl
fs
ljmp
and
mov
mov
pop
fldl
pop
sbb
fs
pop
in
data16
push
pop
cmp
mov
scas
in
xchg
xor
pop
gs
inc
or
xchg
mov
fiadds
fstl
rcrl
jmp
push
jb
bound
sbb
into
std
lret
div
ja
ficoml
ss
cmp
jp
test
xchg
call
xorl
xor
pop
or
adc
mov
dec
icebp
movsl
cli
or
ss
lret
sbb
leave
inc
push
fs
dec
popf
jl
out
fisttpll
jmp
mov
pop
push
adc
lret
jge
mov
fcoms
out
jnp
sbb
pop
iret
fidivs
int3
daa
loop
push
in
out
add
mov
push
sub
aas
lea
loopne
clc
mov
iret
dec
push
fs
pop
pop
xchg
sub
cmp
or
lea
ret
mov
jne
pop
adc
into
cmp
mov
pop
jnp
xlat
pusha
or
addr16
pop
aas
push
ljmp
xchg
jp
popa
mov
jbe
and
or
sbb
xor
sub
add
mov
xor
inc
xor
ror
xor
loop
rorl
out
xchg
hlt
mov
inc
frstor
dec
inc
iret
fs
notb
jnp
add
jb
adc
xchg
shl
push
sub
decl
cwtl
iret
sahf
dec
rep
pop
repz
xlat
inc
xchg
mov
out
push
add
adc
sbb
fcoml
push
sbbb
jp
dec
test
xchg
call
enter
jg
sub
xor
xor
ds
imul
xchg
sub
push
push
dec
inc
xor
jge
pmullw
cmp
ficompl
jle
mov
fwait
mov
hlt
std
adc
xchg
into
xchg
jno
jns
push
sub
and
inc
inc
scas
icebp
notb
lret
xchg
sub
sub
sbb
pop
or
cmp
cmp
mov
jnp
xor
call
es
sbb
cltd
movsb
pusha
xor
dec
mov
inc
mov
outsb
sti
imul
lods
rcr
lds
sbb
shlb
roll
xor
push
clc
adc
ficoml
jge
or
mov
popf
sbb
dec
and
rclb
arpl
adc
xlat
pop
je
ljmp
xor
imul
jg
ficoms
dec
iret
nop
scas
lahf
xchg
pop
jle
jne
mov
cmovs
popa
xlat
fwait
or
sub
adc
cmp
stos
idiv
inc
fwait
cmp
lea
test
aam
loopne
mov
inc
and
push
jecxz
xchg
jle
dec
mov
mov
cmpb
jb
cmp
adc
dec
inc
push
das
aaa
std
leave
dec
xchg
sahf
nop
push
test
adc
jo
or
notl
mov
push
cmpsb
arpl
sbb
pop
adcb
cmp
pop
cmpsb
in
lds
xor
out
or
sbb
in
in
sub
pop
xor
mov
psubsw
pop
pop
jmp
add
jge
dec
jb
inc
popf
orps
fucomip
pusha
mov
arpl
test
ror
or
sub
mov
sub
or
pop
in
fcompl
sbb
pop
into
xchg
mov
xchg
sub
or
and
fiadds
stc
cmp
xchg
pop
cmp
fucompp
mov
test
imul
sub
jecxz
push
and
sbb
cmpsl
lahf
dec
or
add
into
pusha
cmp
cmp
sar
testb
inc
push
push
jg
stos
in
popf
and
lcall
fisubrs
imul
addr16
inc
jo
xor
jmp
add
mov
adc
shlb
mov
mov
movsl
dec
jge
cli
adc
xor
pusha
aas
push
pop
pop
es
pop
div
jmp
in
xchg
jbe
xor
sbb
lds
outsl
int
lahf
out
lods
mov
fstpt
xlat
sbb
in
enter
mov
mov
insb
inc
icebp
out
je
repz
cltd
jmp
cmp
shl
jge
push
inc
dec
popa
cmpsl
sub
sub
inc
and
and
inc
inc
ds
cli
mov
roll
movsl
and
cmp
in
push
pop
or
mov
popa
cmp
mov
js
inc
pop
fists
sub
aam
push
sub
outsb
mov
ret
js
call
mov
cmp
jge
xchg
jne
push
pop
bound
sti
mov
jle
cwtl
insb
adc
dec
add
repz
test
cmp
imul
repz
daa
in
mov
cmp
sbb
addb
push
arpl
les
add
push
test
jne
pushf
sub
fists
dec
push
fistl
mov
mov
pop
cmp
cli
or
add
add
xor
je
push
sbb
adc
adc
movsb
add
scas
sbb
jne
loop
call
lods
rorb
movsl
movsl
xchg
aad
cmpsl
bnd
cwtl
lods
mov
adc
cltd
leave
shrl
push
xchg
lahf
pop
xchg
mov
or
test
std
fimull
sahf
pop
mov
add
aas
movsb
adc
loope
aad
movsb
jne
cmpb
mov
push
rcrb
aam
xorl
mov
das
iret
jb
push
arpl
inc
jmp
jno
loope
imul
pop
lret
fmul
sub
movsl
mov
leave
add
sbb
lods
jo
arpl
notl
push
cmp
xor
mov
jae
mov
and
es
pop
push
stc
leave
add
aaa
cmp
cmpsb
fbstp
nop
pop
test
mov
outsl
xchg
mov
or
and
sbb
cld
movsl
test
in
les
fisubs
popf
xor
xor
test
ljmp
inc
mov
dec
fidivl
aas
adc
sbb
loop
mov
into
shll
pop
cwtl
mov
pop
pop
aam
mov
dec
and
ret
sbb
pop
inc
movsl
sbb
dec
outsl
outsl
add
jae
jno
push
and
push
xor
ds
cmpsl
fcomps
sbb
dec
xchg
xor
fiaddl
jecxz
gs
pop
fldt
push
push
add
lds
movsl
divps
daa
and
repnz
mov
pop
dec
andb
ss
sbb
gs
add
xlat
fnstenv
fwait
cmp
cmp
imul
dec
mov
jb
and
je
in
scas
lods
mov
inc
inc
jmp
inc
movsl
and
sbb
addb
fimull
pop
scas
mov
insb
dec
andb
adc
jae
mov
mov
call
jge
push
pop
xorb
pop
call
negl
cmp
mov
adcl
gs
ljmp
add
jle
jo
sbb
outsb
pop
mov
fsubrp
lret
and
fsubp
insb
or
and
pmaddwd
mov
mov
push
jl
mov
jbe
pop
data16
xor
push
leave
jb
insb
cmc
lahf
jb
gs
pushf
sahf
add
push
ds
ret
lods
adc
arpl
loope
push
pop
outsb
imul
pop
jnp
mov
pop
dec
rol
xchg
inc
lods
pop
push
push
addr16
add
dec
sbb
push
adc
fdivs
das
fstp
adc
cmp
pushf
jle
bound
xor
insb
jp
jg
pop
ficoms
movsl
sub
jp
arpl
cmp
dec
push
push
loope
or
push
imul
adc
ret
lcall
sub
push
sbb
sub
cmp
shlb
into
or
push
cmc
sbb
dec
xlat
and
xchg
pop
lock
add
repnz
std
jbe
and
data16
adc
sarl
and
and
sbb
shll
jmp
jecxz
lock
mov
cmp
xchg
xchg
lock
xchg
sub
call
cmp
cli
push
mov
xor
xor
sahf
add
dec
sub
loope
rclb
lds
scas
iret
aaa
adc
mov
iret
add
jecxz
stos
push
negb
fildll
mov
cwtl
push
inc
dec
rcrb
or
popf
dec
and
lahf
ret
shll
adc
stc
xor
mov
je
push
add
and
out
fsubr
xchg
mov
aad
lods
int
xor
add
cmp
inc
and
and
test
stos
add
inc
loope
stc
icebp
pop
loopne
fidivrl
not
push
movsb
notb
lods
adc
mov
cs
cmp
loop
addl
push
loope
jns
and
pop
cmp
scas
aas
psubw
push
sub
pop
dec
jg
stos
jmp
fiaddl
xchg
adc
adc
mov
out
pop
inc
out
and
aad
mov
shrl
popf
push
sbb
inc
mov
sub
mov
dec
jno
in
ficompl
cmpsb
les
inc
pop
dec
mov
add
out
mov
or
enter
fsubrs
in
inc
int3
or
std
xchg
mov
cmc
xchg
imul
mov
ss
into
pop
pop
testb
out
lods
fcmovnbe
jp
aas
adc
lcall
lods
jecxz
je
mov
fidivrl
cmc
sahf
movsl
jbe
adc
or
push
adc
and
loope
mov
lods
les
push
mov
shl
mov
gs
stos
or
xchg
inc
aad
loop
in
jb
lret
cs
lahf
mov
bound
shll
or
xchg
pop
xor
cmp
outsl
ret
or
add
adc
sub
outsl
loope
mov
shr
popa
pop
insl
mov
sti
subl
jg
fiadds
idivl
inc
xchg
lods
dec
sub
daa
aas
loope
and
les
sub
shr
fldcw
adc
or
add
xor
mov
loop
cmp
mov
adc
lret
std
test
sar
push
sub
and
xor
in
adc
sbb
dec
cmpsb
fstps
nop
jnp
jne
cld
fs
adc
test
jp
bound
mov
ret
sbb
add
xor
mov
ret
and
and
jle
xor
inc
push
jne
sbb
in
daa
add
stos
or
inc
sub
pop
mov
dec
ds
cmpsl
mov
cmp
push
mov
call
cmpsb
dec
shr
and
cmp
popf
mov
push
fmuls
dec
jmp
ficoml
inc
mov
dec
xchg
out
and
and
shll
or
xlat
mov
jae
mov
pop
inc
mov
lcall
add
mov
jbe
dec
scas
push
lods
jecxz
into
xorb
cld
mov
test
pop
push
or
and
push
sbb
add
outsl
test
add
popl
insl
jne
push
aas
cwtl
push
mov
cmpsb
pushf
in
mov
test
cmpsb
pop
and
or
gs
inc
hlt
arpl
mov
rcrl
lea
add
rcrl
adc
pop
fwait
mov
cmp
mov
sysenter
fldcw
cmc
iret
dec
jmp
push
add
xorb
inc
ss
xchg
dec
outsb
test
dec
test
mov
je
push
outsb
or
cmpsl
out
adc
add
js
out
or
cmp
or
loop
jmp
hlt
loopne
test
mov
stos
sub
mov
popa
inc
sub
outsb
stos
pop
xor
pop
push
sbb
pop
pop
js
scas
mov
aas
or
pop
stc
fs
dec
add
jbe
sub
xchg
sbb
imul
addr16
leave
fildll
xchg
out
adc
sbb
dec
scas
gs
lret
lods
mov
fcmovbe
adc
mov
pop
sub
pop
scas
push
cwtl
in
rcrl
xchg
sub
pop
subb
rcrb
mov
jmp
movsl
fidivrs
mov
push
mov
shlb
shrb
push
jmp
repz
inc
out
insl
daa
cmc
aas
jecxz
mov
daa
ljmp
out
xor
rclb
pop
xor
icebp
add
dec
popa
insb
xlat
mov
mov
int
mov
sub
mov
out
xor
loope
lds
jp
lret
cli
out
insb
lahf
out
cmp
pcmpeqb
fdivrp
xchg
lock
jno
push
push
shll
pop
sbb
ja
xchg
rolb
inc
stc
inc
jecxz
in
mov
mov
in
cwtl
cmpsb
sti
popf
fldenv
mov
idiv
fld
mov
les
sarb
ficomps
xchg
aad
mov
push
jmp
sub
je
add
lcall
pop
xchg
inc
fiaddl
push
inc
int3
jge
leave
cmp
push
popf
mov
lods
pop
jne
inc
mov
sarl
mov
int
out
jnp
shlb
test
inc
sub
xchg
xchg
cmp
jecxz
in
adc
mov
fnstsw
jb
xor
test
or
in
jecxz
add
push
loop
addl
inc
mov
mov
mov
sbb
mov
rcrl
pusha
sbb
adc
or
push
mov
mov
mov
jg
arpl
adc
mov
pop
daa
cmpsl
test
or
sub
call
jp
popf
or
shlb
test
repnz
or
dec
cltd
cmp
push
mov
adc
rclb
test
xor
xchg
rorl
mov
pusha
jmp
fyl2x
imul
fwait
insb
or
sub
ret
jle
add
cwtl
imul
mov
and
shr
mov
lahf
push
mov
sti
push
push
lods
into
inc
lea
adc
jne
push
sbb
inc
pop
cmp
flds
loope
sbb
push
xchg
jg
decl
push
loop
jmp
lock
stos
js
xor
jno
shlb
push
xchg
jle
mov
mov
sahf
ret
in
sarl
jns
fstl
mov
les
mov
rcrb
nop
cltd
rcrl
pop
push
insb
inc
sub
xor
in
mov
push
in
adc
pop
dec
and
xlat
in
pop
lret
xchg
xlat
mov
jb
or
orb
push
xor
xchg
pop
xorb
jne
popa
insl
pop
lock
or
jp
addl
pop
xchg
fldcw
dec
or
punpckhbw
adc
push
and
aaa
add
mov
push
arpl
pop
mov
jb
jnp
test
push
push
xchg
movsb
push
js
shr
push
sub
outsb
xor
push
cld
mov
aad
push
add
cs
and
jae
mov
je
popa
sti
imul
inc
pop
data16
and
add
push
xchg
sub
lds
mov
sti
ret
dec
xchg
mov
pop
cmc
icebp
xchg
push
xorb
add
outsl
fimuls
gs
aaa
sub
jl
pushf
ss
lea
shl
jns
sub
cld
int
xchg
movsb
mov
push
rcrb
xlat
int3
mov
add
or
dec
adc
add
imul
sbb
pop
cwtl
xor
lret
testl
jge
clc
addr16
std
daa
adc
pop
dec
lds
pushl
mov
lods
inc
xchg
enter
ds
cmp
insb
jl
lock
add
jmp
in
mov
cmpsb
or
icebp
push
cmp
iret
dec
adc
mov
repnz
push
imul
ficoml
jnp
mov
cs
mov
fmull
add
mov
mov
add
pop
mov
ljmp
lret
imul
out
movsb
sbb
mov
icebp
cmc
je
or
add
pop
dec
add
xor
cmpl
fcmovnb
push
or
lahf
cmpsb
ror
out
rcr
sbb
push
push
test
fcom
lock
mov
xor
cmpb
jmp
push
pushf
push
insb
gs
push
sub
ret
fnsave
dec
dec
lcall
test
test
fnstenv
adc
push
test
les
cmp
mov
adc
adc
jbe
leave
vmovups
and
lret
imul
fdivr
xchg
out
or
sub
imulb
dec
cmp
repz
mov
pop
push
fs
adc
sbb
inc
aad
xchg
ds
sub
stos
popf
inc
mov
lret
rorb
ds
out
mov
or
xor
iret
cs
lret
cld
xchg
jo
imul
aad
pop
ja
sub
adc
test
mov
or
dec
in
inc
push
jns
push
and
push
ja
xor
pop
jb
pop
fistpll
subl
fimuls
cmp
mov
cmp
pop
cmp
jle
xchg
incb
sub
sbb
fstpl
fmul
daa
mov
push
icebp
mov
xchg
je
jmp
adc
in
mov
popa
dec
dec
dec
mov
test
xor
mov
int3
sub
rcrl
inc
cmp
or
das
test
mov
leave
cmpsl
and
jmp
and
mov
cmpsl
mov
push
push
fwait
imul
push
cltd
xor
dec
mov
sti
jp
push
jecxz
loope
popf
lock
inc
xor
mov
dec
lods
fsubrl
arpl
cmpsl
or
lods
ds
into
mov
int3
popf
or
dec
imul
inc
sub
out
add
cwtl
mov
push
adc
jmp
xchg
mov
nop
insl
aaa
stc
xchg
cmp
pop
cmpsl
cs
arpl
fidivrs
inc
mov
lahf
mov
push
mov
add
gs
lcall
jne
shr
adc
xchg
imul
js
scas
push
lahf
lret
inc
loop
cld
adcl
inc
and
jl
in
xor
cmp
rcr
jnp
mov
lea
dec
cmpsb
sahf
dec
push
mov
jmp
cmpsl
add
mull
ljmp
mov
lea
inc
scas
dec
sarl
dec
outsl
icebp
mov
or
jge
data16
hlt
cmp
cld
aas
jg
add
inc
jbe
xchg
mov
jmp
f2xm1
adc
and
js
and
outsl
jmp
sbb
push
fisubs
adc
mov
sub
test
push
jb
sub
cs
rcrl
inc
cmp
outsl
or
dec
mov
in
loopne
xchg
and
lds
out
cmp
enter
mov
mov
push
leave
adc
xchg
xchg
data16
xchg
outsl
jbe
add
lods
fistl
lret
dec
jp
xor
insl
jnp
inc
inc
adc
lret
inc
les
ret
adc
xor
mov
adc
test
push
icebp
shrl
cwtl
dec
and
ret
xchg
mov
adc
sti
lods
repz
mov
les
xchg
sub
pop
add
push
fisttpll
push
out
faddp
test
fdiv
cwtl
mov
div
xor
scas
mov
loop
imul
sub
xchg
adc
mov
sbb
jge
insl
in
sbb
adc
sbb
fcoml
lret
sti
push
and
fstl
in
adc
inc
and
and
sbb
repz
das
cmp
inc
adc
aam
int
ss
out
dec
movsl
mov
mov
fs
push
fiadds
dec
mov
or
inc
les
jmp
xchg
sub
push
fs
lods
stos
subl
fistps
imul
shr
inc
aad
icebp
stc
mov
lods
push
out
lods
xchg
and
pushf
int3
fisubl
cld
push
aas
dec
rclb
jmp
ret
repnz
mov
push
fs
in
and
add
ss
call
adc
sahf
movsb
and
mov
dec
scas
addl
or
movsl
repnz
or
pop
xchg
dec
sbb
gs
inc
push
js
in
adc
dec
sbb
notl
rcll
dec
add
xchg
cld
push
leave
arpl
test
mov
scas
cwtl
repz
xor
mov
ja
add
adc
xchg
xorb
lret
cmp
cwtl
inc
psadbw
sbb
add
pop
adc
mov
adc
mov
mov
iret
imul
dec
repnz
or
fbld
add
daa
ss
shll
aad
push
es
and
jmp
scas
sahf
add
jns
clc
pop
imul
or
or
sub
sbb
aam
pop
push
push
pusha
mov
xor
leave
or
xor
or
mov
ja
jp
sbb
lret
push
jmp
test
out
cli
scas
mov
insb
fxch
push
mov
sbb
pop
xor
stc
xor
fsts
popf
gs
jmp
cmp
fdivs
add
push
sub
push
adc
mov
ja
pop
jmp
pop
fsubrl
push
arpl
stos
fdiv
mov
push
orb
into
inc
insb
push
lods
popf
jmp
lret
cld
test
mov
adc
push
loopne
pop
push
adc
icebp
lahf
jno
stos
and
and
cmc
mov
inc
jge
lds
cli
and
aas
adc
mov
sahf
lea
imul
ret
jmp
mov
cwtl
add
and
loopne
push
jae
or
jle
cmp
adc
and
fildll
mov
int3
out
mov
push
les
iret
inc
sbb
sbb
mov
int
loope
sub
mov
cltd
cmp
xor
ret
add
push
mov
push
in
push
notl
xchg
cltd
test
jb
mov
imul
and
mov
outsb
jg
and
movb
mov
scas
imul
pusha
fildl
sub
mov
adcl
fmul
ficoms
mov
or
inc
roll
dec
sub
filds
and
rclb
pop
sti
aaa
jne
cmp
and
movsb
fs
mov
js
mov
mov
into
popa
inc
pop
cmpsl
add
or
dec
push
mov
loope
imull
inc
das
push
ret
ja
jns
add
pop
cmp
xorl
out
mov
pop
xchg
sub
movsl
push
out
and
and
xor
sti
shr
or
gs
jge
jle
les
movb
mov
cltd
outsl
outsl
out
out
sti
bound
xchg
xchg
in
sete
out
pushf
add
ror
xchg
pop
pop
les
pushf
mov
or
inc
cltd
incb
mov
push
or
mov
lods
cs
mov
outsl
movsl
mov
sub
lahf
nop
aam
push
push
sbb
xchg
cld
inc
cld
push
pop
inc
mov
pop
in
rcrl
xchg
pop
insl
jecxz
sbbb
mov
push
ja
xchg
sahf
sub
mov
sub
inc
pop
pop
xchg
xchg
xor
mov
mov
adc
mov
shll
or
stos
ret
aaa
cmpsb
test
jnp
inc
mov
cmpxchg
loop
cmc
sar
push
out
xor
int3
push
mov
in
mov
lea
cmpsb
dec
lds
je
xor
mov
push
sahf
sbb
ja
gs
out
cmpl
mov
push
cmp
outsl
mov
or
sub
inc
jp
cmc
aaa
inc
pop
pop
aad
cwtl
adc
mov
adc
je
insb
jo
sbb
ja
jne
add
sub
icebp
adc
or
pop
pop
scas
mov
popf
ljmp
add
test
xor
xchg
mov
jge
fwait
mov
popa
imul
aam
into
pushf
pop
xchg
stos
ja
dec
jne
pop
shlb
cmp
dec
adc
lret
enter
int3
push
dec
popf
fs
ljmp
test
inc
lcall
push
sub
jne
stc
cmc
aam
push
or
jb
stos
cmp
cwtl
cmpsl
scas
clc
lds
sarl
jnp
add
adc
mov
pop
inc
mov
and
pushf
mov
into
mov
and
xchg
iret
add
lcall
jae
or
mov
sbb
dec
push
js
fistpl
das
ss
aaa
inc
or
cmpsl
xchg
or
jecxz
push
fidivs
imul
in
loop
addr16
js
testb
mov
mov
sbb
enter
lods
inc
fsub
add
sti
lds
sti
or
lahf
add
not
jno
dec
add
mov
mov
scas
mov
dec
lods
stos
int
push
and
push
cmp
jns
les
push
mov
shl
push
into
jecxz
fisttps
cwtl
int
nop
fldz
cltd
jne
aaa
xor
jmp
mov
stc
iret
push
adcl
fstpt
and
xor
mov
mov
sbb
cmpsb
add
mov
int
es
mov
sbb
mov
test
add
sbbl
and
iret
mov
subb
push
inc
inc
cmp
mov
inc
cmp
and
lds
or
jno
inc
aam
das
lret
mov
test
add
mov
ljmp
sub
sti
push
xchg
and
les
xchg
subb
in
sub
xor
push
xchg
jae
add
les
outsb
dec
fwait
cmp
repz
cmc
and
outsl
inc
pop
inc
mov
fsubl
mov
mov
pop
lock
lods
push
cmpsb
je
repz
loop
mov
rcrl
dec
cltd
mov
or
nop
adc
outsb
loopne
frstor
pop
cmp
add
call
jno
add
push
sbb
mov
pop
xor
or
ljmp
pop
in
and
cmp
or
xorb
dec
scas
inc
jbe
cmp
push
mov
popf
inc
mov
inc
movsb
pop
scas
pop
call
imul
aas
mov
push
shlb
xchg
jg
push
cmp
jg
lods
or
lods
cmp
scas
sbb
mov
call
stos
dec
or
inc
cmpsb
jecxz
icebp
sub
push
das
repnz
dec
rorl
xor
add
cmp
test
fisttps
inc
and
add
fsubrp
push
in
stc
push
inc
movsb
jns
stc
mov
sbb
fsub
lret
fadds
hlt
add
insb
mov
xor
stos
lcall
sbb
inc
icebp
gs
stos
aad
dec
movb
or
aaa
shr
push
and
and
sbb
test
movsl
sbb
test
fldln2
mov
ficoms
or
mov
ds
scas
rcll
jle
aaa
dec
scas
pop
xchg
aas
or
outsl
dec
lea
mov
mov
fdivrp
xor
sub
mov
mov
sub
mov
or
or
sarl
xchg
push
xchg
dec
subb
xchg
pop
fidivs
outsb
jp
aas
ss
xor
mov
outsl
inc
cmpsl
and
push
addl
fistps
gs
sti
inc
enter
les
dec
mov
dec
jbe
mov
ret
insb
or
clc
bound
xor
push
sti
iret
xchg
fimuls
fidivs
inc
mov
arpl
dec
fcompl
pop
repnz
pop
xchg
mov
dec
cmp
sub
arpl
inc
mov
test
inc
fsubrp
mov
add
pop
js
sbb
jecxz
jbe
dec
sbb
sahf
xchg
sahf
arpl
test
adc
int3
jmp
loope
outsb
fwait
push
xor
push
or
mov
jl
movsl
fdivrp
jg
daa
inc
cmc
mov
mov
arpl
or
lock
dec
cmp
dec
push
sbb
xchg
push
xchg
cwtl
dec
xorb
iret
xor
add
pop
outsb
or
jb
out
sahf
sbbl
adc
ljmp
dec
and
std
jecxz
fstpt
jmp
loope
cmp
fildl
lret
cmpl
shrb
push
pop
pushf
pop
and
sbb
mov
lahf
mov
and
jne
es
or
or
cmp
xchg
flds
sub
and
mov
jae
lcall
ret
leave
pop
xlat
add
mov
adc
ficoml
xchg
aam
cmp
sahf
mov
nop
test
or
mov
mov
push
fidivrs
daa
in
cmp
xchg
outsb
mov
not
enter
add
mov
mov
mov
add
adc
xorb
gs
int
mov
push
add
xlat
ffreep
ret
std
pop
stc
popf
loop
lock
or
aam
and
lods
jo
jb
out
xchg
mov
mov
adcl
cmp
into
lahf
cltd
scas
mov
jmp
push
mov
push
lahf
repz
gs
mov
inc
jge
pop
cltd
lods
add
movsl
into
xchg
mov
mov
xchg
dec
dec
bound
icebp
insb
pop
mov
scas
jecxz
mov
dec
mov
inc
or
sbb
cmpsl
imul
cwtl
call
lods
orb
inc
xchg
cmpsb
mov
idivl
outsb
sub
dec
push
rorl
lock
pcmpeqd
shlb
mov
jae
rorb
rcr
jbe
shlb
sbb
out
xchg
es
pop
sbb
data16
or
sub
dec
mov
in
je
push
adcb
clc
adc
mov
pop
push
leave
subb
stos
fimull
mov
mov
dec
inc
xor
adcb
ljmp
cltd
outsl
imul
mov
scas
push
sti
jmp
cmp
les
adc
xlat
dec
inc
inc
mov
mov
pop
movsl
aam
adcl
sub
xor
xchg
hlt
jle
push
test
mov
pop
dec
xchg
lods
ja
jae
mov
pop
outsl
push
jle
and
or
je
aad
mov
xlat
inc
or
push
jns
out
out
ret
jno
scas
push
notl
mov
and
jns
push
pop
xchg
mov
mov
mov
xlat
xchg
add
xchg
ljmp
lcall
arpl
push
cmp
inc
mov
ffree
andb
jns
adc
or
fisubs
outsb
or
call
and
mov
icebp
dec
push
aam
mov
insb
inc
push
imul
dec
lret
xchg
js
in
add
test
int3
imul
xor
inc
mov
dec
aad
test
push
repnz
xor
int
cmp
mull
sub
lret
add
std
mov
bound
popa
ret
outsb
mov
cld
mov
push
ds
clc
and
movsb
ljmp
mov
addr16
mov
pop
pop
inc
fs
mov
clc
not
cmp
xchg
add
dec
push
xor
stos
or
inc
fnsave
adc
fsubl
shl
int
xlat
shrb
push
or
in
inc
mul
gs
jp
lcall
add
bnd
stc
inc
pop
mov
gs
sarb
mov
fdivrl
push
ja
jl
fwait
inc
imul
push
fwait
xor
ja
loope
mov
adc
aaa
or
pop
xchg
ss
repz
fpatan
roll
clc
jns
mov
cltd
and
nop
loopne
push
mov
pushf
jge
clc
dec
lret
cwtl
cmp
pushf
es
repnz
mov
inc
addl
in
aas
rcll
lret
sub
lds
jo
mov
mov
mov
cmc
lea
jl
imull
mov
xchg
andl
outsl
sbb
cmp
mov
pushf
lret
loopne
out
addr16
add
xor
bound
push
xchg
in
enter
cltd
pop
cli
std
jnp
jne
dec
loopne
cltd
pop
dec
jo
mov
aam
scas
sbb
cld
inc
pop
fistpll
rclb
jb
jecxz
mov
dec
out
mov
cltd
js
into
jbe
lret
flds
inc
pusha
xchg
ja
test
sbb
and
cmp
pop
loope
int3
maskmovq
divl
mov
repnz
dec
out
out
pusha
cs
or
dec
inc
mov
loopne
ss
sub
sbb
stos
aaa
add
inc
push
mov
xor
test
and
lret
sub
lock
push
and
pushw
ret
sbb
loope
or
fidivl
sub
mov
xor
and
jp
popf
in
jb
and
cld
fwait
or
dec
fildll
outsb
mov
nop
repz
insb
lcall
mov
shll
cltd
test
push
xor
out
stc
add
xor
in
or
outsb
imull
jecxz
sbb
xlat
aad
xchg
or
xchg
movsl
lods
insb
sub
pop
mov
xchg
push
xchg
fimuls
mov
push
inc
cmpsl
cmp
test
mov
icebp
push
cs
test
push
and
mov
mov
and
jge
pop
mov
pop
movsl
pop
test
icebp
mov
fnsave
sbb
jl
out
sbb
ja
decl
add
aaa
call
xchg
pop
inc
add
add
gs
xchg
clc
imul
push
cli
fisubs
jecxz
das
rcrb
mov
inc
sub
dec
cmpsb
or
pop
xor
daa
mov
mov
inc
cmpb
cli
insl
mov
adc
or
enter
fistl
sbb
inc
xor
mov
adc
sub
jne
mov
in
sub
jne
jg
sbb
push
pop
push
into
inc
fwait
stc
jb
xor
xchg
sbb
push
mov
aas
dec
and
fdiv
xchg
test
and
cli
push
cli
ret
push
inc
das
stc
xor
add
jo
fldz
subb
cli
lds
sub
shl
adc
inc
mov
mov
bndstx
mov
cmp
mov
ds
movsl
xor
xchg
addr16
push
push
and
dec
roll
dec
cmpsb
in
jmp
sub
loope
jne
dec
cltd
popf
fildll
cmpsb
jg
sbb
sbb
insb
sbb
or
mov
xor
pop
mov
je
stos
sbb
pop
xor
addr16
push
and
cmc
mov
push
test
andl
add
insl
rclb
jo
out
fcoms
mov
mov
push
outsl
jle
inc
out
inc
pop
int3
mov
shrd
jp
mov
jl
jge
lcallw
push
popf
lcall
into
mov
pop
or
cmp
call
mov
add
and
rcll
lea
pop
cmp
fs
out
fcoms
call
xor
or
bound
stos
jecxz
or
cmp
jl
sub
movsl
fiadds
int3
push
js
lods
cwtl
sub
add
loopne
call
add
mov
lods
mov
sahf
lock
jecxz
xchg
pop
sub
aas
inc
imul
out
decl
mov
cmpsl
shll
add
xchg
xor
pop
hlt
xchg
pop
inc
call
ret
adc
sarb
test
ljmp
clc
cmp
cmpsl
sub
xor
push
jns
bound
or
mov
dec
je
mov
and
xor
aaa
push
sti
imul
addr16
add
mov
xchg
sub
cmp
mov
fistl
adc
shl
outsb
mov
loopne
fdivr
outsl
and
xchg
movb
sub
push
push
arpl
jle
int3
or
int
jmp
adcl
lcall
stos
sub
ljmp
xchg
shll
mov
push
mov
scas
les
dec
xchg
sbb
xchg
in
and
loope
test
xor
adc
roll
mov
cmc
sbbb
into
pushf
xchg
inc
cmp
insb
xor
cmp
dec
rorl
cmp
icebp
sub
push
fbstp
xchg
fdivrl
or
frstor
addl
pop
or
mov
shll
or
faddp
and
insl
inc
test
outsb
cmpsb
cmp
cmp
call
inc
repnz
shl
push
mov
icebp
out
add
test
adc
out
lahf
cmp
cli
mov
int3
push
xchg
cmp
cmp
mov
sbb
lock
hlt
adc
jmp
divl
aad
mov
inc
int
mov
xor
faddl
mov
push
orb
cmp
mov
xchg
adc
sub
push
mov
repnz
adc
je
sahf
loope
bnd
or
inc
inc
push
adcb
and
jecxz
mov
sbb
jp
movsl
loopne
cmp
push
bnd
fucomi
pop
out
fwait
imull
popf
push
push
xchg
in
test
push
ds
fcomi
btc
push
xlat
and
es
shlb
out
sti
mov
cmp
cmpsl
fldcw
insb
push
adc
subb
xor
mov
jl
in
in
add
or
sbb
ja
adc
mov
into
jg
sub
lods
cmp
pop
add
cli
clc
pop
cmc
decb
ja
les
out
stos
xor
jmp
pop
rcrl
mov
je
mov
fnstsw
movsb
aad
sub
ljmp
test
push
jmp
and
jge
dec
fwait
addr16
int
mov
pop
mov
repnz
xor
cli
mov
nop
mov
sbb
jnp
add
out
mov
jge
or
bound
fwait
cmp
aas
push
mov
movsl
in
jne
punpckhbw
jmp
paddsb
stc
ljmp
ljmp
inc
ljmp
jns
imul
push
outsl
sub
xchg
pushl
cmp
movsl
dec
mov
xor
dec
mov
mov
or
imul
mov
adc
mov
fidivrs
stos
arpl
out
ret
lea
je
out
sub
stos
pop
inc
dec
shl
into
es
insb
push
jns
xchg
and
add
in
mov
aad
lahf
adc
out
xor
push
add
inc
inc
xchg
adc
jmp
movsl
dec
mov
sbb
xor
test
sahf
outsl
add
daa
inc
or
jo
pop
sbb
je
les
push
xor
inc
dec
sub
sar
test
jno
mov
daa
test
and
in
push
mov
fadd
pop
mov
push
repz
inc
sbb
pop
adc
jne
cs
sub
fwait
je
js
xor
adc
sti
lcall
pushf
lds
mov
std
pusha
shrl
push
sub
les
push
xchg
imulb
test
mov
iret
push
sub
ret
xor
pop
or
xchg
cmp
push
and
aas
cmpsb
ja
push
push
int3
hlt
cmpsb
aam
pusha
mov
rol
aaa
out
sub
xor
rorl
mov
xchg
add
daa
adc
xchg
jecxz
jns
add
cli
sub
pop
lret
mov
adc
jecxz
lds
mov
pop
aad
jbe
pop
int3
cmpsl
xor
in
jns
mov
ret
push
enter
ss
mov
sub
add
call
ret
inc
pop
out
mov
adc
sbb
sahf
inc
pop
cmpsb
push
xlat
push
jo
push
inc
fcos
jge
sbb
xchg
adc
in
lock
inc
sub
incb
and
packuswb
pop
cld
fstp
dec
iret
xor
xor
fsubrs
int3
jg
dec
pop
pop
pop
jnp
jae
xchg
nop
ljmp
add
das
jno
std
adc
dec
jecxz
sub
jns
mov
dec
xchg
imul
push
mov
imul
int3
push
scas
jg
movsl
mov
fs
jnp
mov
cmpsl
andl
cmpsl
outsb
mov
shlb
or
aam
rorb
dec
scas
mov
jo
add
arpl
out
int
add
bound
or
jnp
pop
add
cmpsb
ret
mov
hlt
or
fsubrp
dec
lret
std
enter
jnp
push
pop
mov
lret
into
dec
cmp
fwait
clc
lahf
dec
in
push
jae
sti
jnp
ret
fcoml
shlb
mov
adc
jle
nop
loopne
dec
into
or
and
lahf
ljmp
pop
jmp
movsb
fwait
mov
push
aas
loope
push
cmp
ret
sbb
loope
xor
sahf
cmpsb
cs
lds
adc
jp
scas
mov
add
std
in
and
mov
xor
xchg
cmp
inc
fiadds
jbe
dec
pop
iret
test
mov
push
mov
adc
out
mull
test
int
mov
dec
ss
sub
sbb
mov
pop
push
fnstsw
ss
push
jl
push
mov
jge
cmp
jnp
add
jp
orl
adc
push
push
mov
bnd
outsl
sbb
fcompl
jp
pop
loopne
xor
adc
mov
cld
xor
mov
sub
and
dec
mov
in
arpl
cmp
push
mov
fcmovb
lret
jbe
sbb
data16
sarb
push
mov
xor
paddb
lods
sbb
test
jp
inc
jecxz
mov
push
aad
lods
mov
add
inc
jecxz
mov
xor
xor
sbb
cmp
je
test
push
sub
test
gs
dec
add
sub
mov
mov
xchg
mov
into
repnz
sub
xlat
mov
push
aas
mov
lret
add
mov
mov
js
test
int
cmp
dec
pop
js
sbb
outsb
jp
lea
push
add
sti
sub
pushf
xor
push
jecxz
addr16
leave
cmpsb
outsl
cmp
push
pop
dec
lds
imul
roll
sbb
movsb
outsl
js
push
shll
mov
leave
jbe
out
pop
shlb
insl
add
sub
insl
push
pop
mov
dec
cmp
xchg
stos
jae
insb
pop
jle
lcall
bswap
sbb
fcoms
stc
sbb
push
jecxz
add
int3
ret
ss
les
dec
fst
mov
push
test
push
push
shlb
iret
stos
inc
or
dec
dec
in
fdivs
adc
outsb
xchg
adc
icebp
popl
mov
mov
adc
sbb
data16
loope
or
inc
aad
mov
jae
test
fistpl
addr16
out
sbb
insl
sbb
inc
xor
sti
fisttpl
lcall
push
mov
jge
gs
js
lds
lea
ret
adc
xor
add
test
mov
lods
addr16
test
data16
mov
adc
and
sbb
sub
arpl
sahf
daa
out
dec
push
xchg
jae
daa
pop
cmp
inc
xor
adc
sti
adc
add
repz
sbb
pop
pop
aaa
adc
xchg
xor
ds
xchg
jno
ja
pusha
adc
ljmp
in
sub
ret
pop
adc
aam
addr16
es
sbb
jb
inc
pusha
cmp
sub
dec
jo
inc
repnz
push
out
lret
out
mov
std
cld
jno
adc
jae
fists
xchg
push
sub
scas
lods
add
jle
and
push
xchg
mov
decl
popa
cmp
push
or
or
scas
je
jl
jb
pop
pop
inc
mov
mov
negl
cwtl
xchg
imul
mov
into
push
xor
inc
fists
outsb
lock
lret
insl
dec
repnz
xchg
call
lds
xor
add
std
push
gs
insl
popf
loopne
into
daa
mov
mov
xor
sbb
stos
cwtl
sbb
mov
imulb
sub
lock
cli
testb
sub
jbe
addr16
icebp
jle
push
cld
fdivs
xchg
mov
jmp
xchg
xor
push
push
subb
std
sahf
dec
mov
jae
scas
adc
pop
jbe
lods
inc
jmp
and
add
jmp
popf
loopne
or
mov
cmpsb
push
pop
jae
jae
in
inc
xchg
test
leave
sub
cmc
dec
in
nop
les
inc
sbb
xor
lock
lock
adc
cmp
loope
lahf
ds
lret
sub
mov
dec
ffreep
in
std
neg
adc
shr
popa
mov
rcll
cmpsl
dec
or
loopne
jp
scas
xchg
sbb
mov
push
xchg
or
mov
imul
push
gs
push
sbb
rcrl
xor
insl
into
sub
mov
lea
or
jp
sbbb
or
sti
mov
mov
adc
fstl
rorb
jmp
or
push
clc
xchg
out
mov
das
sub
and
ds
lea
jge
xor
stos
ljmp
loop
lcall
sti
mov
mov
sub
dec
int3
xchg
mov
fcmovb
inc
mov
xchg
mov
sub
inc
out
outsl
adc
mov
mov
fisubs
insb
orl
xor
ss
inc
hlt
das
pop
scas
pop
clc
scas
pop
mov
dec
dec
adc
aaa
repnz
lds
or
push
gs
cmp
imul
sub
xchg
xchg
andl
and
xchg
pop
fisubs
mov
mov
in
aam
sub
mov
insl
mov
fadd
clc
mov
pop
xchg
add
xor
jg
and
sahf
repz
push
cmp
or
add
jne
xchg
stc
xor
scas
outsb
inc
ds
imul
test
test
ret
xor
sbb
outsb
mov
sub
in
out
pop
aad
stos
push
jl
mov
or
sub
fisttpl
clc
xchg
jnp
add
pushf
mov
push
mov
jbe
cld
fidivrl
in
rorb
out
mov
mov
clc
pop
insb
in
aaa
sub
xchg
jecxz
cmpb
cmp
push
test
sti
push
in
push
xchg
out
sub
pushf
xchg
jecxz
lret
push
in
xorl
add
xor
fcmovnb
mov
and
aaa
jno
scas
bound
cs
fdivrs
fst
imulb
add
flds
pop
lret
shll
xor
cld
mov
into
jp
je
jb
push
sub
imul
cmp
lods
pause
mov
cmp
jmp
out
fsubrs
cmp
xchg
aaa
test
pop
mov
xchg
or
js
jg
pop
cmc
pop
icebp
push
std
dec
mov
xor
mov
xchg
sbb
jp
pushf
out
inc
je
test
mov
pop
sub
push
out
outsl
mov
push
mov
jl
rorb
popf
sbb
sub
aad
and
jnp
lahf
mov
flds
cmpsl
loop
cmp
adc
cmc
clc
cmp
jnp
test
jo,pt
ret
push
mov
lret
dec
imul
out
popa
push
hlt
mov
inc
mov
out
into
test
loop
jecxz
rolb
sarb
outsb
mov
in
pop
cmp
repnz
sahf
push
fisttpl
popa
and
mov
fcmovu
in
ja
inc
int
and
addr16
add
out
and
pop
aam
stos
mov
sbb
roll
jecxz
jl
mov
mov
dec
or
out
xor
lahf
jp
pop
mov
mov
jge
mov
mov
enter
and
in
xor
add
into
shrl
xor
stc
enter
daa
mov
rorb
imul
addb
mov
cltd
pusha
cmp
cmp
mov
xchg
loopne
mov
mov
mov
fistpll
std
insl
xor
dec
cmc
movsb
aas
js
lret
pop
xorl
iret
mov
subl
sbb
jecxz
xchg
out
ss
pop
repz
push
or
cltd
xchg
cmp
movsb
decb
rcll
xor
je
js
mov
or
dec
outsb
fisubrl
out
and
cwtl
sbb
adc
aam
int3
cs
std
in
jne
stc
shll
or
int3
cmc
mov
jg
in
gs
rorb
xor
add
push
lds
jne
adc
sahf
and
pop
mov
pop
test
and
pop
dec
aaa
rcr
sbb
mov
ffree
out
mov
adc
sar
or
or
mov
outsb
cmpsb
mov
rcrl
xlat
ljmpw
dec
jno,pt
sub
add
pop
sbb
std
push
je
cmc
and
int
mov
mov
dec
push
lcall
push
std
in
fidivrl
scas
mov
fnstenv
and
aaa
insb
jae
or
push
cs
sbb
or
rorb
aaa
std
push
lods
sub
sub
sbb
jecxz
aad
push
pop
mov
push
jb
add
or
mov
out
pop
fimuls
stc
mov
jp
daa
jne
sub
push
adc
push
aaa
xor
push
rorl
cmpsl
dec
fwait
sbb
insb
aaa
dec
adc
inc
mov
adc
fbld
mov
roll
xchg
cs
int
cmp
loopne
movsb
xor
xor
hlt
or
dec
dec
mov
mov
xor
arpl
bound
cmc
xchg
dec
inc
and
sub
loope
fnstsw
mov
mov
mov
mov
pop
aad
fdivs
inc
sbb
shrl
repnz
call
dec
cli
dec
pop
int3
js
xor
mov
pop
fsubrp
cltd
loope
sbb
cmp
outsl
cmp
orb
jnp
shl
es
stos
pop
and
sbb
and
sub
cmp
jne
jecxz
lret
jns
inc
pop
into
xor
add
add
sub
mov
sbb
test
inc
mov
aad
cmc
mov
sub
push
jp
xchg
and
outsb
cli
scas
push
dec
pop
push
adc
sbb
imul
mov
and
lods
das
jae
inc
lods
pop
sub
test
adc
scas
inc
js
cld
add
jne
jae
mov
fdivp
dec
std
mov
mov
or
cld
add
les
pop
sysexit
in
and
jmp
pop
int3
dec
pop
or
inc
adc
jg
fmuls
test
rcr
sub
jnp
int3
jmp
cltd
push
adc
jb
lods
aam
arpl
mull
push
test
cmpsb
pop
div
mov
in
adc
jecxz
test
mov
fcompl
gs
push
sbb
and
mov
inc
in
enter
sahf
pushf
inc
sub
shr
fadds
pop
stos
add
xor
insl
xor
cmp
pop
insb
iret
shlb
je
sbb
das
add
bound
ja
mov
inc
inc
add
mov
loope
into
xor
inc
xchg
jg
mov
sbb
fwait
jne
sub
daa
jae
push
jl
sub
mov
shlb
pop
mov
pusha
cwtl
int
lds
aas
test
mov
cwtl
enter
push
xchg
jns
out
cli
mov
xchg
js
popa
pop
push
inc
data16
shll
and
rol
xchg
les
out
daa
movsb
sub
jo
int
lock
push
pop
cmp
mov
add
int3
lret
sbb
mov
ds
call
clc
mov
pop
inc
xchg
jb
adc
lods
mov
xchg
lahf
jge
pop
sub
mov
rorl
and
jge
shrb
jnp
ss
mov
loope
es
ret
enter
pop
jne
cmpsl
mov
and
ret
or
xlat
inc
outsl
in
mov
outsl
jmp
xor
sub
lret
arpl
dec
push
int3
add
call
jae
jp
dec
outsb
or
adc
cli
pop
aaa
pop
daa
xor
scas
inc
pop
pop
xor
inc
adc
lret
mov
test
test
ljmp
inc
scas
push
mov
movsb
push
lcall
int
xor
sti
add
insb
jae
add
jecxz
adc
pushf
iret
lods
sbb
lahf
stos
inc
sbbl
ja
adc
sbb
dec
leave
fwait
int
fs
jmp
pop
sbb
scas
jmp
mov
sub
les
mov
out
fdivl
push
mov
fisttps
lods
xchg
frstor
or
repnz
push
lock
gs
lea
ljmp
xor
adcl
rcll
pusha
jl
jbe
inc
sar
jp
shr
pop
mov
mov
in
outsl
push
adc
cmp
xchg
adc
fbstp
push
into
lret
gs
pushf
jl
fwait
xchg
push
ret
test
int3
and
dec
lods
mov
push
gs
sbb
stos
adc
lcall
daa
xlat
and
arpl
xchg
inc
movsl
jecxz
mov
movsl
jge
leave
mov
addr16
push
rcl
and
sahf
xchg
xor
add
aas
fdivrs
sti
dec
cmp
inc
dec
mov
mov
xchg
repz
jne
adc
fs
ds
loop
imul
xor
lods
cmpsb
pop
decl
mov
rcl
and
inc
inc
cmp
mov
inc
or
xchg
test
in
pop
add
push
shlb
adc
pop
xor
loop
jae
jl
sub
rcll
pop
dec
fbld
insl
and
repz
in
dec
push
stos
fsubr
jg
icebp
xchg
in
sub
movsb
pop
bound
ror
push
lock
js
pop
fisttpll
dec
stos
mov
lcall
aam
xor
movsl
lret
roll
mov
push
sbb
push
inc
fmuls
mov
lea
aaa
data16
shl
pop
xchg
dec
es
and
xchg
andb
dec
lret
test
mov
mov
jecxz
inc
test
xchg
or
jns
adc
adc
mov
fidivrs
testb
outsl
popa
jge
jns
push
or
sub
mov
cmp
je
or
dec
fldt
int3
push
stos
imul
xor
mov
pop
or
fisubs
pop
push
or
inc
lods
inc
cwtl
pavgb
inc
adc
icebp
js
cmc
int
mov
mov
rolb
pop
pop
mov
and
movsl
adc
jno
popa
adc
inc
pop
movsl
adcl
push
sbb
push
mov
aaa
testb
adc
shl
jge
subb
adc
icebp
lods
pop
mov
hlt
arpl
cld
ss
dec
je
and
jmp
imul
sub
inc
jl
push
je
add
jb
push
jns
pop
ja
jle
adc
push
je
aas
sub
adc
add
xor
adc
xchg
aas
sbb
jge
mov
andb
inc
imul
fisubs
lods
add
inc
push
mov
xor
loope
jns
adc
es
cmc
mov
lcall
push
adc
mov
xchg
in
cmp
mov
sar
in
pushf
mov
ljmp
jnp
adc
jne
mov
inc
imul
xor
mov
sub
addl
push
xchg
jg
push
enter
shl
popf
jge
dec
sbb
pop
in
test
jne
cld
or
cmp
mov
clc
jmp
or
jo
sbb
sbb
mov
xor
lods
mov
mov
ret
in
push
stc
imul
lds
xor
jecxz
mov
adcl
gs
fdivrs
ret
loopne
bound
loop
loope
sub
inc
pushf
push
sbb
cltd
mov
pop
xchg
out
pop
daa
sub
cmp
push
data16
jge
mov
in
dec
lret
aaa
mov
adc
bound
mov
stos
sbb
test
int3
jo
add
dec
pop
test
addl
je
jae
iret
ror
push
sbb
subl
daa
fisubrl
or
cmp
dec
loope
stc
out
mov
ret
push
jnp
inc
push
push
testb
jmp
stos
out
dec
test
push
xor
dec
repz
xor
insb
jle
xchg
js
push
jbe
xor
ljmp
sub
mov
fwait
sahf
enter
icebp
repz
icebp
in
and
sbb
mov
push
xor
add
movsb
loopne
or
add
jnp
shrb
out
push
jb
xchg
ds
insb
aas
xchg
dec
dec
or
repz
cmp
pushf
or
hlt
push
jo
mov
aad
int3
pop
pushf
or
rorb
cmc
and
cld
cs
loopne
push
and
loope
scas
xor
jecxz
in
loopne
cmc
in
mov
add
sbb
movsb
xor
adc
nop
sub
ret
xor
daa
or
out
jno
cmc
clc
outsl
cmp
popf
push
cltd
popa
test
sti
nop
test
jbe
dec
out
jno
cltd
in
mov
sub
mov
into
cld
push
dec
in
sbb
and
adc
das
xorl
cmpl
lods
in
xlat
adc
ud1
push
lret
test
xor
mov
cwtl
cmp
lcall
orl
or
gs
aaa
push
inc
mov
sub
cmp
jmp
mov
leave
es
shll
jo
sbb
outsb
in
cltd
jns
jnp
jnp
je
xchg
dec
mov
leave
fadds
and
adc
out
lcall
xor
or
imul
aad
aam
and
movsl
and
jne
dec
pop
sbb
sarl
mov
push
mov
jge
mov
mov
push
mov
cmc
popf
bnd
xchg
js
rcrl
mov
addr16
or
shll
mov
inc
xchg
ret
out
fbstp
popa
int
jg
jne
xchg
hlt
xlat
iret
fadd
ret
and
sbb
outsl
mov
xchg
stos
push
dec
inc
xchg
cmp
inc
xor
subl
adc
lea
and
movsl
std
jnp
or
jge
jae
test
inc
fidivrl
ja
mov
icebp
out
fxch
sbb
stc
or
movsb
adc
xchg
dec
and
out
adc
xor
ja
xchg
push
push
cmp
and
cmp
pop
jge
sahf
inc
add
nop
imul
cmp
leave
pop
shl
cmp
sbb
rolb
pushf
fiaddl
lcall
pop
mov
xor
cmpsl
push
cltd
or
xor
orb
das
cs
inc
loopne
int3
mov
mov
lahf
repz
mov
icebp
xor
jmp
sbb
adc
das
imulb
pop
sub
xor
and
inc
mov
mov
int
mov
xor
jns
mov
mov
push
fisubrl
mov
xchg
mov
in
pop
mov
pop
les
sbb
jp
les
mov
lcall
and
clc
sub
adc
sbb
fcompl
adc
jnp
fstp
ret
imul
mov
dec
sahf
pop
jne
ror
xor
ljmp
cltd
push
stos
shrb
cmp
mov
pop
in
jg
adc
aad
push
lret
dec
pop
sbb
imul
cs
je
int
push
int
mov
push
sub
sbbl
pop
into
arpl
fldl
jecxz
sub
jno
dec
mov
fcoml
pop
jle
mov
in
mov
mov
inc
jnp
rcr
aam
fisubrl
inc
or
ss
mov
mov
cmc
sbb
int3
aas
dec
loop
cmpsb
cwtl
and
sbb
outsl
sub
int
fimull
dec
mov
cmp
addr16
bnd
cmc
cmpsb
jmp
repnz
lock
repz
add
test
sbb
inc
jns
sbb
adc
pop
mov
cmp
sbb
sbbb
xchg
scas
mov
test
push
imull
or
sarb
or
inc
cmp
xor
jbe
push
cwtl
les
enter
mov
ret
cld
movsl
stc
push
nop
push
add
mov
jo
filds
sbb
sub
stos
jle
fbstp
add
push
mov
adc
incb
adc
fmul
cmp
inc
cmc
adcl
psubusb
faddl
mov
inc
xchg
test
push
rorb
mov
add
jle
pop
dec
cmp
mov
and
sbb
repz
scas
movsl
push
nop
and
addl
imul
mov
cmp
ds
add
jnp
adc
pop
jmp
call
adc
sub
xor
dec
cmpsb
out
test
xor
int
and
mov
add
jl
popf
jne
sbb
pop
push
daa
std
jmp
aas
loope
sbb
popl
pop
or
pop
or
mov
push
add
adc
int3
jno
lcall
repz
mov
mov
push
mov
stos
outsb
ss
and
std
xchg
pop
inc
int3
movsb
add
gs
scas
jno
or
cli
mov
clc
jno
sbb
nop
aam
aam
bound
jg
stos
xchg
adcl
pop
in
jg
inc
dec
mov
mov
cli
xor
inc
gs
ss
jge
lods
and
out
stc
orb
addr16
stos
jo
out
jb
loope
add
and
xchg
arpl
cltd
sub
push
lahf
cli
and
add
sbb
cmp
sbb
nop
xchg
imul
pusha
hlt
fcomps
jnp
push
and
push
outsl
ret
scas
xchg
or
daa
pushf
sbb
jno
dec
sbb
mov
jmp
pop
test
jmp
lds
jge
adc
test
out
int3
sarb
rorb
cmp
adc
fwait
pop
mov
bound
push
sub
mov
dec
insb
xor
mov
add
sbb
lahf
mov
frstor
insb
mov
sahf
sub
xlat
aas
fwait
pcmpgtd
add
jae
or
dec
inc
subb
cmp
test
xor
xchg
add
arpl
cmp
insl
jnp
dec
int3
lea
ds
jmp
jno
add
push
iret
sti
js
das
arpl
jne
xchg
ss
xchg
lcall
jl
fldcw
and
dec
std
pop
dec
pop
lods
div
test
enter
push
arpl
sub
mov
rorb
fsubrl
ret
imul
inc
es
inc
or
ja
push
aad
jp
inc
jge
das
stos
jns
xchg
loopne
call
addr16
sub
mov
movsb
addl
test
adc
and
fisttpll
lock
dec
mov
mov
and
jmp
dec
and
loope
and
xchg
adc
rcrl
das
leave
repz
test
xor
inc
sub
add
stos
inc
jae
mov
push
into
dec
pushf
or
mov
mov
inc
movsb
in
outsb
popa
sahf
dec
or
mov
lahf
out
out
jle
sti
mov
mov
dec
jmp
andl
dec
test
cmp
push
xchg
mov
sbb
push
enter
rcr
fwait
push
lret
jo
cmc
xchg
imul
jnp
xchg
jns
in
cmpsl
test
stc
nop
js
xlat
and
loope
push
add
out
jmp
pushf
int
push
mov
jmp
push
ret
inc
pusha
aas
jmp
dec
jmp
add
movsl
sub
add
insl
jp
push
add
mov
xchg
sbb
jbe
sub
imul
jge
mov
pop
lahf
xchg
push
mov
push
int3
call
fs
inc
out
sbb
sarl
cs
adc
neg
aam
or
enter
mov
mov
add
call
cs
lcall
mov
ficompl
mov
push
orl
mov
bound
dec
in
inc
int
lods
push
mov
dec
xor
das
push
push
in
inc
outsb
mov
xchg
mov
lods
lret
fcmovbe
clc
insb
fcomi
cmp
daa
and
icebp
sub
es
into
in
out
fprem
test
rorb
ja
pop
insl
and
pop
dec
or
vrcpps
adc
mov
lods
fwait
mov
push
sub
popa
mov
mov
xor
push
sub
imul
daa
xor
lods
insb
and
repnz
cld
push
lock
movsb
outsb
xchg
adc
or
test
aas
test
cmp
cmp
popa
mov
loope
ret
mov
jecxz
xlat
aas
stos
sub
xor
incl
je
enter
shrb
mov
pop
imul
pop
dec
dec
push
mov
lahf
test
div
pop
push
pop
loope
lea
and
pop
mov
nop
and
jge
imul
push
add
and
ret
stos
nop
mov
push
in
jp
jp
sub
leave
fldl
mov
scas
mov
scas
in
adc
test
mov
sbb
pop
and
pop
mov
inc
mulb
inc
mov
push
in
jl
jp
ja
pop
xchg
mov
cmp
aaa
and
pop
cmc
int3
enter
jns
in
push
les
push
dec
xor
pusha
xor
fstps
insl
in
mov
inc
fdivr
xchg
jge
in
stos
mov
sbb
push
sbb
jbe
movaps
stos
imul
xchg
clc
lods
xor
lret
adc
sub
sbb
mov
andb
iret
popf
loope
pop
dec
mov
mov
ss
int
push
sbb
jg
jne
mov
add
xor
loope
pop
and
inc
loope
mov
gs
fistps
popf
dec
sti
adc
lock
mov
inc
push
mov
sbb
pop
cmp
orb
mov
xlat
sbb
mov
imul
scas
aaa
in
sbb
cmp
inc
cs
mov
mov
xor
pop
xchg
aaa
ljmp
pop
xchg
xor
jne
out
jno
clc
mov
lret
pop
ss
mov
les
in
jb
pop
cli
addb
call
fcoms
jns
sbb
scas
lret
and
mov
xchg
aam
lea
arpl
dec
xchg
xor
cs
push
lahf
jg
jg
pop
leave
rcll
fs
or
loop
outsb
mov
pop
in
lods
mov
mov
mov
jne
pop
dec
stc
std
loopne
mov
pop
xlat
inc
pop
mov
mov
ja
add
sub
pop
xchg
scas
push
sbb
sbb
insb
dec
mov
jle
push
mov
loop
enter
inc
hlt
mov
cmp
xor
lods
add
sbb
add
out
fiaddl
lahf
loope
sub
jg
lahf
hlt
push
and
enter
loopne
setb
xchg
jne
movsb
stc
mov
jne
lea
push
lds
sub
test
lods
lahf
sbb
test
and
pushf
push
lock
pop
repnz
adc
add
xlat
andb
int3
dec
movsb
add
and
sbb
pop
add
xchg
xor
outsl
clc
fidivs
mov
nop
stc
inc
ds
xor
lds
mov
dec
inc
es
dec
mov
fists
dec
push
xorb
cli
pop
add
adc
ret
repnz
addb
mov
jecxz
std
and
enter
aad
dec
fwait
xchg
leave
aas
jge
pop
push
dec
xchg
in
mov
jbe
cmpsb
mov
data16
pop
push
sbb
xchg
je
mov
lods
mov
lahf
dec
dec
ficoml
clc
mov
and
mov
jns
loop
out
test
adc
ret
xchg
shrl
es
insb
daa
cld
scas
lods
push
out
les
test
fwait
iret
inc
or
mov
dec
cld
std
mov
scas
out
sti
ljmp
push
scas
add
ret
add
and
jb
jmp
popl
xor
mov
and
xchg
jno
and
lret
mov
sarl
xor
in
divb
pop
jae
testb
push
pop
mov
xchg
test
pop
cmp
pop
div
movsl
lret
sub
jg
and
aad
loopne
outsl
bound
xor
popa
movsl
aaa
lds
in
push
or
xor
xchg
leave
imul
sub
add
std
lcall
ret
pop
push
inc
mov
dec
push
sbb
pop
sbb
iret
in
out
or
xchg
adc
inc
ret
mov
in
imul
fcoms
les
ror
sbb
iret
popa
test
mov
xor
jb
repnz
jb
mov
repnz
cmp
add
or
lahf
test
in
or
sbb
mov
cld
rorb
sub
lea
and
mov
mov
fsubrl
mov
dec
filds
test
fildl
xor
adc
addr16
addr16
push
mov
movsl
inc
in
ss
sbb
popa
pop
push
dec
sbb
sbb
xchg
sub
gs
cmp
push
push
xchg
mov
cmc
mov
std
test
inc
push
ret
pop
daa
xor
jmp
jecxz
mov
in
jb
sbb
les
jmp
add
adc
pop
insl
scas
iret
les
mov
adc
push
add
push
out
or
sbb
cli
stc
and
outsb
xor
cmp
dec
mov
and
pop
cmpsl
data16
js
das
push
dec
in
popa
cmc
cwtl
cmpsb
mov
mov
cld
or
dec
test
je
cwtl
das
cmpsl
push
test
jno
sbb
push
lods
out
add
test
xchg
pop
mov
add
ja
enter
lret
or
mov
or
push
fcoms
jbe
outsb
mov
cmp
fs
fsubr
mov
and
xchg
lcall
dec
adcb
mov
mov
jge
lret
xor
fucomp
bswap
adc
mov
mov
aas
jp
pop
inc
inc
cld
pop
into
xor
xchg
jb
pop
cmp
jno
sub
leave
fidivs
mov
mov
movb
adc
bound
lcall
mov
ja
mov
loope
lahf
inc
stos
lds
loop
mov
push
out
mov
jle
es
push
scas
jecxz
add
lahf
push
jg
andl
arpl
mov
out
lcall
inc
lret
sbb
hlt
es
orb
sub
xor
outsl
fstl
add
loop
mov
imul
leave
mov
mov
ret
jb
lea
jmp
xor
in
xchg
cli
and
or
push
insb
fisttps
push
sbbb
fs
outsl
jp
leave
pusha
stc
arpl
cs
jmp
in
inc
cmpsl
mov
push
std
dec
jno
mov
mov
pop
push
sbb
js
loop
push
add
xchg
cmp
cmp
lret
int
adc
test
and
loop
sub
shl
nop
xchg
shl
repnz
int3
int
mov
dec
imul
mov
jge
sub
pop
daa
cmp
scas
or
lods
cmpsl
dec
aas
push
mov
xchg
dec
ret
nop
sub
outsl
std
mov
test
mov
sbb
sbb
imul
ss
cmpsl
mov
in
cmp
adc
push
xor
or
sahf
add
inc
pop
mov
dec
xor
dec
pop
adc
in
insb
jp
rorl
test
cli
xchg
mov
mov
call
cmp
add
fs
add
hlt
repz
pusha
sub
cmp
cmpsb
mov
movsb
xor
outsl
sbb
fdivl
lcall
push
xlat
aad
out
mov
aad
imul
inc
es
push
or
add
mov
mov
dec
cs
scas
jo
inc
dec
lret
mov
or
icebp
adc
loop
jns
xor
sub
frstor
test
xor
pop
fwait
inc
jnp
lcall
mov
ljmp
adc
mov
adc
mov
lods
lea
mov
insl
xor
mov
or
push
mov
xor
fiaddl
push
jmp
mov
in
outsl
or
popa
imul
sbb
movsb
fmuls
or
add
imul
mov
call
icebp
loopne
xor
mov
sbb
cs
sub
inc
cmpsl
fldt
stc
inc
addr16
rorb
inc
dec
popa
inc
ret
rolb
or
shll
mov
inc
imul
mov
sub
int
mov
dec
sbb
bound
push
out
mov
xor
pop
in
mov
sbb
dec
sarl
ljmp
int
mov
roll
sub
xor
pop
roll
add
pop
add
loope
fstps
cmp
iret
nop
test
popf
push
pop
jmp
cmp
pop
cmc
xchg
movsb
add
push
add
push
dec
in
addl
iret
add
aam
xchg
pop
xor
roll
cmp
sub
call
cltd
scas
or
or
adc
inc
sahf
push
cmp
lcall
add
lret
bnd
test
ficomps
jl
push
push
aam
insl
int3
mov
dec
or
push
std
cltd
dec
cmpsl
sub
dec
fildll
adc
mov
jl
std
iret
xchg
fldcw
cmc
aaa
xor
push
and
int3
cmp
xchg
cltd
imul
push
mov
mov
jb
fwait
sti
push
and
inc
sahf
hlt
push
in
js
hlt
jnp
mov
in
sbb
bnd
mov
cltd
enter
and
mov
or
cltd
and
test
adc
mov
imul
pop
dec
jb
and
gs
xchg
mov
mov
daa
dec
outsb
mulb
arpl
or
movsb
xor
push
daa
adc
or
in
into
test
sbb
mov
dec
fbstp
and
pop
mov
orl
ret
stos
iret
lds
cmpsl
mov
mov
cmc
test
test
movsl
pop
data16
and
fisubrl
and
inc
pop
mov
lock
and
add
and
mov
gs
loopne
pop
mov
idivb
cmp
shll
outsl
or
arpl
jecxz
ret
xchg
mov
or
in
gs
repz
or
pop
lock
mov
jmp
xchg
arpl
jge
adc
sbb
inc
xchg
xor
jnp
sub
xchg
mov
dec
mov
xchg
push
or
dec
dec
pop
jp
jns
shll
out
mov
push
pop
mov
xchg
je
lds
pop
iret
sub
push
in
inc
inc
pusha
sub
push
js
je
lret
popa
iret
pop
sub
lcall
inc
jne
jae
or
lods
fcoml
test
rcrb
cmpsl
or
fxch
pusha
or
adc
shll
cs
popa
scas
jae
arpl
test
call
std
lock
ljmp
les
sbb
inc
outsb
cmc
fldt
inc
int3
fildll
into
out
xchg
push
fildll
push
sbb
insl
cld
ficoml
push
jmp
iret
loop
mov
jnp
cmp
sar
mov
dec
popa
mov
sub
loop
jb
inc
fwait
test
popa
adc
push
repnz
mov
cwtl
mov
mov
repnz
sbb
mov
sbb
xlat
and
ret
stos
sub
inc
sti
insl
and
orb
pop
pop
lods
add
pushf
mov
fwait
shrb
sbb
repz
dec
xor
int3
sub
sbb
in
rol
hlt
cmp
out
stc
adcb
js
inc
outsb
fwait
adc
rolb
pop
pop
cwtl
push
add
shrb
stc
push
cltd
and
jp
sub
outsl
and
decl
stos
out
mov
cli
out
aas
enter
out
mov
mov
mov
iret
or
call
cmpsl
sub
push
cltd
push
pop
jle
and
jl
test
test
lock
mov
aas
mov
pop
add
iret
imul
adc
out
sub
mov
add
pusha
adc
addr16
add
pop
lahf
popa
cmpsb
loop
aas
jo
fwait
dec
xor
cltd
std
pop
imulb
test
popf
jae
dec
out
call
or
or
mov
and
xor
and
ficoml
out
cmp
add
add
mov
dec
movsl
andl
cmpsl
fdivp
inc
mov
mov
cwtl
js
pop
scas
mov
xor
mov
ja
jne
push
and
lret
loopne
xchg
int3
mov
mov
ficomps
scas
enter
cwtl
sti
cmp
mov
imul
push
jge
push
dec
pop
test
or
jmp
sub
mov
repnz
dec
lods
fstl
inc
push
nop
clc
and
sub
shlb
stos
jns
jnp
and
add
xlat
lods
add
inc
mov
fsubrs
jbe
cltd
add
sbb
mov
ror
test
std
lods
fildl
cmp
lret
sub
jp
fs
sub
or
popa
mov
ret
out
imul
scas
fucom
push
pop
out
mov
repnz
xchg
orl
stos
scas
push
ljmp
push
test
js
mov
mov
pop
dec
lds
jno
dec
shll
add
dec
xchg
subl
mov
stos
ret
andb
fcmovnb
movsw
add
into
push
add
inc
xor
push
and
push
les
dec
in
inc
fwait
pop
lock
xor
rcrb
fldt
and
mov
xchg
sub
jl
popf
arpl
loopne
xor
mov
cmpsb
add
pop
hlt
sub
cld
pop
dec
add
push
xchg
hlt
or
and
mov
cmp
xchg
lcall
inc
test
push
jmp
test
xor
adcb
pop
insl
xor
or
sbb
pop
dec
dec
and
or
xorb
ret
dec
mov
mov
loope
adc
mov
push
push
mov
adc
mov
mov
mov
stos
jbe
push
inc
xchg
in
dec
aaa
lret
shrb
or
scas
sbb
or
stc
lcallw
inc
lcall
add
jmp
cmp
jne
sahf
jo
push
mov
sbb
loop
and
in
xchg
call
arpl
or
std
fnstcw
test
cmp
jnp
shll
xchg
jne
fistl
orb
bswap
movsl
xchg
fs
ja
insl
mov
iret
xchg
bound
xchg
xor
cmp
test
dec
cmp
mov
lds
pop
lock
daa
sub
jge
insl
or
jle
dec
push
shrl
insb
movsb
popf
nop
sub
xor
clc
outsb
sbb
call
jnp
rcrb
add
xchg
sub
push
mov
jmp
aas
clc
lds
dec
xchg
clc
push
je
lock
popf
out
ja
cmp
fmul
pop
xchg
stc
lock
and
in
sub
and
fwait
mov
push
andl
jmp
cmp
adc
es
in
sbb
mov
cmpsb
jecxz
nop
cmpsb
jnp
arpl
sub
fnstenv
dec
mov
sahf
xor
daa
inc
in
fistpll
mov
in
loopne
cmp
sub
sbb
sbb
and
clc
xor
ss
mov
xchg
lea
lret
and
jl
imul
bound
sar
cmpsl
sub
cwtl
fwait
push
adcl
popa
adc
in
xchg
mov
jg
das
sub
xchg
dec
xor
or
stos
push
mov
mov
inc
dec
daa
out
ret
negb
jb
or
sbb
popa
int
lock
mov
loop
cmpsl
sbb
loopne
mov
lret
aam
into
leave
or
in
cmpl
sub
js
stos
mov
daa
ficompl
and
frstor
js
push
flds
push
and
gs
mov
jg
les
mov
imul
insb
aad
stc
imul
xor
or
pop
dec
xchg
andl
jbe
mov
mov
lock
pop
orl
mov
add
leave
xor
cmpsl
or
daa
or
xchg
fnstenv
xchg
mov
aas
stos
or
fs
sbb
pop
inc
and
ds
movsb
xor
xchg
jbe
hlt
xor
mov
or
std
dec
inc
mov
int3
mov
outsl
jmp
pusha
jno
jg
or
jge
dec
xchg
movsl
push
mov
lret
int
es
xor
push
out
mov
out
or
mov
rclb
mov
adc
shll
pop
mov
ja
mov
cmc
and
mov
lret
dec
testb
int3
lahf
xchg
rcrb
pushl
push
sub
jge
mov
dec
inc
sti
je
stos
xor
or
subb
add
and
sub
mov
adc
in
mov
cmp
cltd
sub
stos
scas
sbb
scas
adc
and
adc
shlb
out
mov
movl
add
shlb
push
mov
test
xchg
xchg
loop
pop
xchg
inc
xchg
popf
and
enter
inc
cmpsb
ds
mov
popf
repnz
mov
lret
neg
out
add
gs
jecxz
js
mov
ret
stos
imul
scas
push
inc
ss
and
and
dec
push
xor
sub
add
mov
jns
pop
fistps
int3
cmc
loop
ss
jne
sbb
jecxz
lods
addr16
lcall
add
repnz
inc
pop
mov
cmp
cwtl
popa
push
shrl
shrb
aas
sarb
lahf
xor
not
bound
mov
nop
inc
mov
dec
fiaddl
stc
idivl
outsl
adc
pop
popf
push
push
stos
divl
push
out
mov
mov
push
inc
dec
ja
mov
inc
scas
mov
cmp
loopne
js
dec
popf
lock
insl
mov
jle
pop
out
mov
jno
mov
lock
mov
mov
sbb
sahf
sbb
dec
int
add
lods
and
shll
ljmp
pop
mov
adc
cmp
or
xor
push
push
xchg
sbb
xor
loop
mov
sub
mov
xor
ret
mov
fidivl
or
mov
in
js
outsl
imul
cwtl
test
das
cwtl
mov
cltd
out
mov
fcmovnbe
rclb
jb
notb
popf
jnp
pushf
lea
and
jge
jns
sarl
mov
cld
je
lcall
cmp
push
jmp
pavgw
lods
in
orl
sbb
aaa
fists
cmp
es
scas
mov
pop
jg
addl
lock
data16
test
mov
lahf
notb
into
cmp
dec
or
jb
fadds
xchg
add
inc
repz
sub
in
sbb
ja
out
movsl
mov
addr16
loopne
jmp
xor
mov
xlat
shrb
adc
data16
sbb
xchg
pop
inc
mov
pop
jno
or
mov
popa
rorb
xor
sbb
xchg
xchg
sub
sub
cmp
push
xor
push
loop
mov
jnp
and
test
lods
lds
shrb
lea
repz
or
dec
mov
jno
cmp
inc
aam
push
shl
dec
mov
jmp
sub
push
push
shll
and
arpl
movsb
mov
and
test
and
leave
mov
iret
xor
jns
inc
cmpsb
inc
pop
mov
or
mov
jne
cmp
pop
cltd
sbb
xchg
pop
lods
pop
xor
and
adc
push
in
xor
xlat
cmp
mov
mov
push
jbe
fists
loope
shlb
or
sbb
movsl
popf
fsubrs
or
xchg
dec
fcoml
aaa
dec
and
mov
xchg
sarl
or
inc
in
jecxz
fwait
add
mov
dec
lret
push
aas
in
and
jge
adc
lret
jo
aam
fsubs
adc
sbb
lret
sbb
push
mov
ret
mov
repnz
clc
aam
mov
pop
stos
test
sbb
lcall
push
pop
roll
push
add
jo
in
out
ds
add
jo
pop
push
push
xor
push
and
xor
cld
jno
xchg
fsts
mov
inc
push
or
jno
mov
jb
fs
call
xor
jg
jnp
xor
jg
jg
les
jne
push
test
fnop
lods
mov
dec
lods
xor
mov
lds
out
push
orl
sbb
or
in
xor
std
push
or
add
shrl
pop
jbe
stos
and
inc
mov
xchg
mov
sti
stos
in
iret
sbb
jae
add
mov
adc
mov
clc
insl
inc
fistl
add
scas
add
mov
loopne
push
push
sub
insl
in
mov
or
adc
fwait
mov
adc
repz
and
out
movsl
lods
adc
adc
in
sub
pushf
lahf
xchg
push
insl
xchg
sub
testl
nop
xor
shlb
jnp
push
add
pop
std
mov
and
in
lds
test
nop
and
or
mov
rcll
in
gs
decb
out
arpl
or
lds
fisttps
push
ficoml
push
mov
mov
addr16
mov
mov
loopne
pop
fisubl
dec
pushl
cmpb
mov
lock
inc
mov
cmp
push
inc
xor
mov
pushf
aaa
addr16
inc
rep
sbb
and
xchg
hlt
test
int3
clc
call
pop
cwtl
jbe
in
and
pop
mov
inc
pop
push
outsb
fwait
adc
mov
mov
pushf
cmp
les
inc
add
idivb
into
sarb
iret
pusha
insb
add
popf
pop
rclb
aad
and
in
fcmovb
add
inc
and
js
add
mov
mov
mov
aam
out
incb
iret
into
xchg
jp
loop
or
lcall
lret
add
fistl
xor
rorb
shll
xchg
test
in
xor
repz
pop
adc
jae
push
pop
pop
inc
ds
xlat
inc
add
dec
mov
in
out
xor
jns
jmp
js
sbb
in
pop
dec
imul
shll
clc
das
scas
ljmp
mov
leave
ja
outsb
lods
dec
fdivrl
ja
addr16
mov
jp
and
inc
push
mov
xchg
cmpsl
mov
jle
or
inc
push
mov
mov
xor
mov
jl
mov
and
xchg
mov
ret
dec
mov
lock
adc
notb
stos
add
sahf
or
xchg
pusha
or
inc
pop
mov
les
fldt
pop
push
mov
push
dec
sub
xor
int
leave
jne
cmp
fisttpll
sbb
cmpsb
rcll
fstl
add
sub
add
rcr
pop
xchg
mov
sub
xchg
jge
pop
pop
test
cltd
lds
mov
test
lret
add
push
mov
add
xchg
jmp
pop
ja
push
leave
cs
sbb
mov
xor
pusha
inc
cltd
aam
mov
pop
lock
jle
stos
mov
lods
lock
fisubrl
stos
cmpsb
vpslld
cli
push
rcrl
mov
xchg
lret
and
xchg
and
stos
je
or
mov
ror
xchg
cmp
cltd
xor
cmp
stc
dec
or
xchg
icebp
ud1
jl
push
int
add
mov
jno
adc
movsb
je
jle
or
mov
pop
xlat
shlb
test
fldenv
dec
insl
rcr
push
xchg
std
push
into
ljmp
jp
pop
lcall
dec
daa
stos
lds
inc
divb
test
in
adc
sbb
cmp
test
je
icebp
push
test
push
adc
into
mov
jmp
ret
jns
nop
inc
adc
in
xor
push
xor
mov
mov
jb
sbbl
push
scas
js
xor
sahf
cmp
sbb
dec
mov
or
mov
jno
cmpl
stc
sub
add
and
mov
lds
sbb
std
mov
pop
scas
das
sub
movsl
mov
out
popf
out
and
jmp
cmc
pushl
push
movsb
call
mov
jecxz
and
fcoms
std
js
inc
ficoms
popa
pop
lods
imul
mov
mov
and
stos
imul
int3
fcomp
iret
jg
fsts
roll
fsts
dec
jg
movsb
fisubl
in
xor
mov
mov
lret
adc
cld
pop
outsl
neg
repnz
dec
dec
es
pop
xchg
aas
out
ss
mov
xchg
sub
roll
inc
dec
outsb
add
mov
push
fucomi
sub
jno
lahf
jge
mov
xchg
dec
mov
arpl
push
imul
add
mov
fdivl
mov
mov
lret
movsl
or
sti
xor
std
adcb
push
insl
idivb
inc
jg
mov
sub
mov
lock
dec
fidivs
test
push
lods
jmp
mov
fwait
lods
das
lahf
rolb
xor
adc
iret
sub
insl
mov
pop
lock
shl
hlt
pop
add
adc
pushf
sbb
test
sbb
dec
jecxz
pop
inc
jl
mov
fidivs
fidivl
arpl
pusha
xor
adc
dec
lock
push
adcl
pop
div
inc
jle
aam
sub
cmpsl
mov
outsl
fiadds
scas
push
sarw
xchg
es
ja
or
push
adc
leave
lds
js
sbb
jge
pop
nop
xchg
push
push
pop
shrl
mov
pusha
mov
mov
sbb
pop
mov
insb
nop
xchg
movsl
jno
cs
xor
push
dec
lods
loop
int3
lds
fdivr
mov
sbb
inc
ds
push
xor
bound
cmp
mov
mov
or
and
mov
inc
jb
test
repnz
pop
jmp
int
repnz
div
mov
push
push
das
mov
jge
icebp
fcomps
or
pop
gs
out
int3
mov
int
mov
frstor
pop
push
ret
mov
fdivrl
movb
sbb
je
adc
fistpl
cltd
cs
xchg
xchg
sar
pop
dec
sbb
cmp
icebp
hlt
repnz
cmpsb
mov
scas
cmc
mov
xor
mull
je
pop
mov
outsl
push
inc
mov
stc
mov
cltd
adc
inc
mov
jecxz
inc
or
push
pop
test
dec
outsb
sub
adcl
push
xchg
sbb
mov
movsl
or
cmp
jns
jp
lret
jae
jno
jmp
xchg
stc
jnp
add
pop
inc
pushl
cmp
out
xlat
loop
test
and
dec
jno
lods
out
adc
popa
mov
lcall
cld
flds
divps
add
mov
gs
outsl
or
pop
shl
dec
xor
outsl
and
cmp
xorl
lods
add
ja
rcrl
out
int
dec
dec
and
test
mov
shll
repnz
mov
xchg
into
and
mov
inc
sbb
les
dec
jnp
lret
xchg
pushf
pop
pop
cltd
roll
in
lea
std
push
int3
lret
push
mov
cmp
push
xor
stc
repnz
pop
or
sbb
lahf
jb
icebp
mov
sbb
mov
mov
mov
jmp
test
pusha
and
jge
sub
inc
jns
cs
sarl
xchg
test
and
cmp
sub
mov
xchg
push
xchg
mov
lret
and
xor
lock
mov
push
or
call
jbe
fistps
int
xor
cmpsb
decl
mov
cmp
in
pop
and
js
lahf
mov
ds
pushf
call
iret
jmp
jne
orl
jnp
ss
hlt
sub
xchg
fstl
push
pop
sub
mov
stc
addr16
jnp
cmp
mov
push
data16
push
inc
es
dec
push
rorl
mov
inc
aam
xchg
jno
sarl
insl
sar
inc
cs
popf
fimuls
dec
add
test
adc
mov
mov
xchg
test
out
push
aaa
dec
fistl
mov
xchg
mov
roll
xchg
daa
or
xchg
cmpl
imul
dec
xlat
das
xchg
xor
pop
out
repz
cmpsl
inc
or
inc
and
in
mov
cmp
dec
sarl
stos
dec
test
cmp
xor
jecxz
cli
mov
notl
inc
testl
push
pop
push
push
add
add
into
adcl
nop
pop
cmc
les
and
sti
xor
push
dec
inc
out
dec
into
test
lahf
inc
push
jg
inc
mov
fwait
pop
xor
hlt
mov
mov
aaa
jl
ljmp
jg
test
insl
lock
jo
jae
or
cmp
mov
shlb
mov
xchg
or
data16
shrl
xor
inc
shl
pop
adc
divb
loopne
mov
mov
hlt
pop
xor
cmp
negb
inc
or
mov
cmp
jne
jno
aas
mov
pop
repnz
dec
jg
or
jge
jbe
sbbb
fidivrl
or
jb
sahf
sub
les
idivb
lods
push
popa
popl
dec
pushf
sub
adc
sti
mov
aas
pop
jecxz
cmpsb
and
dec
cmpsl
nop
je
sarb
mov
and
test
push
in
js
mov
add
popf
out
pop
pop
sbb
adc
sbb
divb
adc
cld
push
add
fisubrs
cmpsl
rclb
pushf
in
call
arpl
xor
jmp
and
dec
cmpsb
aas
add
mov
out
decl
mov
jns
and
ss
ret
dec
cmp
sti
jl
adcb
in
push
sbb
lds
je
inc
out
mov
mov
adcl
mov
adc
clc
or
dec
fwait
xor
int
push
mov
push
sub
inc
jae
stos
mov
mov
or
jecxz
mov
add
inc
jmp
in
and
movsb
stos
stos
cmc
negb
push
lret
xchg
jg
inc
jg
xor
nop
movsl
add
daa
iret
xor
fidivrs
jnp
testl
dec
xchg
push
ret
cli
cmp
pop
or
leave
aad
add
push
mov
int3
insl
xorl
xchg
cmp
test
shl
xor
es
sub
popa
lock
scas
and
mov
dec
andb
lcall
andl
push
add
clc
inc
ret
fdivrl
daa
jmp
jg
adc
hlt
inc
imul
adc
je
xchg
ljmp
or
xchg
sub
das
and
xchg
ja
sbb
or
fcoml
lods
outsl
icebp
movsl
dec
call
adc
bound
outsb
push
xchg
xor
cmp
fcomip
std
mov
add
push
scas
lds
cmpsl
ret
repnz
push
in
mov
les
xlat
into
sti
add
mov
add
mov
add
je
bound
mov
enter
shrb
movsl
inc
and
stc
fiadds
sbb
sti
mov
xchg
outsl
rorb
andl
daa
push
test
test
mov
pop
or
fstpt
xchg
ds
inc
xchg
loop
ss
mov
cmp
jne
xchg
adcl
or
cmc
pushf
pop
scas
addl
loopne
jmp
mov
pusha
mov
fists
jecxz
inc
cmpl
mov
or
jnp
outsb
gs
sarl
or
cmpsl
out
jl
jns
mov
fidivrs
filds
loopne
insb
cli
lods
cmp
int
adc
aam
jae
sti
inc
addr16
xchg
or
fstpt
pop
ret
mov
inc
adc
mov
les
rcll
push
lea
pop
mov
or
negb
pushf
xchg
add
movsb
cmp
ja
out
sub
xlat
adc
je
mov
jg
dec
adc
imull
lock
popa
jmp
adc
and
jecxz
shrl
ret
fnstcw
fidivl
jnp
mov
or
pop
std
std
dec
lret
cmc
andl
imul
xchg
pop
xchg
setne
sub
ds
sub
mov
mov
xor
pushf
int3
pop
jle
jb
pop
xchg
pushf
daa
push
jbe
scas
jbe
mov
hlt
subb
sub
or
push
xchg
aad
or
int3
insb
movsb
inc
stos
rorl
or
mov
mov
in
and
data16
andb
pop
adc
jnp
mov
mov
adc
decb
lret
sub
lods
mov
in
jl
sbb
repz
dec
hlt
sbb
inc
and
popl
inc
xor
xlat
cmp
fwait
or
inc
andb
cmp
cmp
mov
rcr
and
mov
insb
std
or
or
or
push
jae
add
mov
sbb
jecxz
sbb
adc
cld
outsl
addr16
test
dec
cwtl
jecxz
test
inc
pop
or
mov
ds
push
jecxz
jp
stos
sub
sbb
mov
xchg
fmuls
sub
enter
dec
outsb
add
mov
cmpsl
mov
mov
int
and
dec
push
push
movsl
outsl
push
ja
mov
mov
and
cmp
shlb
int3
lods
scas
out
cmp
fsubs
pop
xor
aam
roll
sbb
out
pop
and
stos
in
imul
pop
inc
imulb
gs
sub
xor
in
and
cmp
lds
sbbl
sub
xor
jge
pop
insl
lds
adc
sbb
fsubrl
cld
movsb
adc
mov
imul
cmp
xlat
or
dec
xchg
sbb
jb
cli
pop
gs
jge
xor
in
int
daa
in
das
loope
fsub
dec
fsub
jb
shlb
mov
lret
roll
mov
xlat
popf
test
mov
movsb
mov
jae
adc
mov
decb
ljmp
cld
ja
aam
jne
mov
sub
jno
leave
pop
mov
push
inc
test
push
cmp
dec
push
mov
push
popa
gs
sbb
xor
call
outsb
pop
adc
xor
xor
in
cmp
jo
gs
loopne
cmc
pop
cmpsl
mov
jnp
lret
sbb
sbb
lcall
cmp
mov
jle
pop
insb
mov
mov
or
cmc
ljmp
or
pop
sub
aam
daa
repz
cmpsl
sub
imul
push
xor
dec
fcomp
scas
pop
xlat
jae
imul
fdivrl
leave
je
cmp
leave
and
and
push
cltd
jb
mov
nop
dec
xchg
or
mov
sub
subl
mov
ss
ja
ret
cmp
add
rcl
cmpsb
out
jne
and
les
in
popf
fnstcw
data16
addb
sbb
out
xor
int
xor
cmp
cmc
mov
fsubs
sbb
inc
sarb
mov
push
mov
jecxz
sti
xor
xchg
lods
mov
scas
in
js
cmp
pop
lahf
fisubrl
jno
cltd
sub
jmp
loopne
xchg
ljmp
cs
mov
mov
inc
in
outsl
sbb
jno
pop
and
pop
and
push
mov
in
mov
idivl
dec
pushf
jae
inc
push
lea
rolb
daa
jle
mov
jae
cld
fs
xchg
sbb
decl
ret
lcall
jl
adc
lret
rclb
iret
or
lods
pop
jecxz
insb
adc
or
cs
andb
mov
push
mov
movsb
insl
test
mov
cmp
rcr
pop
nop
rcll
test
push
insl
aaa
fs
add
pop
mov
rolb
push
scas
push
push
pop
push
xchg
ss
jno
or
inc
arpl
dec
inc
ljmp
imul
stos
lcall
add
mov
sub
shll
movsb
mov
xlat
cmp
xor
xlat
mov
mov
push
popf
lods
sbb
cltd
out
dec
pop
stos
push
sti
push
pushf
sub
addr16
test
lcall
lret
inc
pop
fcmovnbe
pushf
fiaddl
sub
xchg
ds
push
xchg
xchg
inc
push
insl
lahf
fs
shll
mov
pop
repnz
inc
push
jmp
push
pop
xchg
insl
inc
lds
add
inc
jb
pusha
sub
xchg
or
or
pop
xchg
cmpsl
adc
shr
push
test
pop
ds
and
lcall
push
fildll
mov
xchg
sbb
push
int3
lea
push
and
in
mov
cmp
loop
inc
push
cmpsb
les
and
ret
les
xchg
addr16
xchg
dec
xchg
das
xlat
mov
xchg
jge
mov
mov
mov
mov
test
mov
movsl
ds
pop
push
in
pop
mov
testb
inc
cmp
mov
rclb
fidivs
movsl
xor
cmc
into
mov
ds
hlt
int
test
push
or
sbb
push
jnp
into
jmp
and
clc
cltd
dec
out
in
cmp
std
xchg
loopne
push
fldl
cmp
cmc
xchg
cmp
lds
inc
xchg
imul
and
fldl
mov
ja
inc
sarb
or
movsl
in
rcl
imul
bound
pop
and
fmull
xchg
popf
aam
jmp
test
ret
outsb
ds
ret
sti
dec
mov
push
hlt
popf
movsl
adc
negl
cwtl
daa
sbb
push
jo
notb
mov
push
arpl
shl
xchg
push
jle
outsl
rorb
jge
lahf
cmc
aad
mov
inc
mov
mov
fwait
ljmp
add
pop
icebp
scas
pusha
add
pushf
aam
push
mov
dec
icebp
outsl
sarb
push
arpl
sbb
jg
mov
jb
sbb
jmp
pop
loop
inc
lcall
scas
mov
cmp
or
ret
lods
sub
and
sub
cmpsb
rcll
sub
or
adc
cmp
scas
int
movl
orb
ljmp
sarb
outsl
or
outsl
and
add
xor
push
lods
iret
inc
and
sbb
add
push
inc
xor
xor
in
push
jno
insl
lret
bound
ficompl
and
or
inc
lods
ret
mov
sbb
into
popa
inc
xor
icebp
sahf
mov
sbb
mov
ja
lods
jmp
xor
fs
mov
dec
ljmp
inc
ficoms
sub
add
xor
mov
stc
xor
dec
movsl
xor
mov
andps
mov
je
cmp
cmc
insl
push
or
sbb
out
js
jl
inc
add
movsb
je
orb
cmc
or
sub
movsb
into
mov
xchg
outsl
lock
popf
and
dec
rcl
outsl
call
xchg
inc
popf
xchg
sub
sub
lret
xor
je
aad
clc
rcll
lock
mov
stos
xor
jb
mov
clc
pop
xchg
lahf
xchg
xlat
and
push
mov
lret
je
adc
push
das
and
xor
icebp
les
push
push
rcll
mov
aas
xor
gs
push
inc
ljmp
fst
mov
mov
aam
jle
cltd
jp
add
mov
repz
mov
cwtl
stos
movsl
or
sub
mov
ret
and
outsl
mov
push
loop
lds
bswap
pop
arpl
popf
popf
outsb
hlt
lcall
aas
push
enter
rorb
shr
into
jmp
sbb
pop
or
jne
int3
in
dec
mov
mov
daa
loop
dec
sub
xchg
pushf
mov
pop
cmpsb
push
outsl
mov
sarl
jns
pop
lods
mov
xor
adc
mov
mov
mov
and
sbb
aas
xchg
fistl
mov
mov
stos
std
sahf
pop
bound
outsb
xor
xor
xor
push
and
pop
inc
or
insb
cmpsl
sbb
inc
rolb
enter
hlt
push
fsubrs
lock
ret
sbb
aas
stos
pop
loop
xchg
mov
outsb
into
jo
sub
jo
dec
jb
xchg
out
nop
and
sbb
push
mov
mov
cmp
mov
push
decl
in
mov
add
ljmp
and
stos
out
sub
ja
out
call
dec
pop
xor
mov
rorl
sahf
push
pushf
pop
mov
sbb
and
ja
iret
stos
aam
fnsave
jge
jae
inc
aas
xchg
xlat
sti
mov
repz
adc
pop
or
push
sub
mov
pop
pop
mov
adc
fdivr
add
idivb
or
mov
data16
or
push
stos
insb
sub
je
push
lret
pop
fiadds
add
clc
push
inc
add
ja
cmpsl
mov
test
cmc
xor
and
mov
dec
mov
pop
pop
xor
out
loop
ds
mov
shrb
mov
mov
jmp
flds
mov
adc
lret
js
gs
mov
ljmp
cltd
lret
outsb
cld
lcall
add
jg
dec
je
movsb
jb
fs
push
sbb
dec
jle
gs
movsl
sub
push
xchg
fs
imul
imul
mov
into
push
mov
pop
sbb
outsb
pop
or
pop
cwtl
outsl
daa
out
es
imul
insb
shl
in
stos
push
jge
out
push
pop
cs
push
mov
adc
testb
out
clc
pop
mov
scas
adc
mov
inc
jo
hlt
mov
sbb
movsb
out
mov
fucomi
dec
fsubrs
or
cmp
push
aas
ret
movsl
lods
lret
jge
xchg
data16
pop
adc
mov
cmpsl
xor
add
xchg
subl
test
addr16
imul
stos
cltd
sbb
jne
jb
lahf
pop
add
sbb
test
fisubrs
stos
jb
push
mov
test
ds
xor
ja
imul
test
lods
ret
adc
cmc
adc
cmp
outsb
inc
mov
and
sbb
cmpsl
lret
fdivrl
push
int3
jmp
mov
aam
adc
or
and
mov
test
rclb
and
add
pop
jo
lret
jo
push
pop
les
cmp
daa
sbb
stos
arpl
int
nop
icebp
xchg
aaa
gs
adc
lret
nop
clc
cmp
nop
cmp
inc
xchg
cli
repz
or
and
push
shrl
mov
leave
or
int
or
int
ljmp
aaa
xor
adc
sbb
jae
add
ficomps
fistpl
imul
pop
xchg
xor
mov
inc
mov
jge
incl
mov
loope
dec
sbb
mov
insb
push
ljmp
es
movsl
push
in
cwtl
sub
lahf
adc
test
and
les
and
dec
jle
adc
fistpll
mov
sbb
fistl
dec
mov
dec
fs
inc
fwait
push
inc
xor
mov
cs
push
aaa
sahf
lock
fwait
test
fisubrs
pop
mov
mov
ds
lret
inc
jne
cwtl
jle
and
jmp
ja
pop
lods
jg
jne
insl
fsubrl
mov
loope
inc
xor
push
cmp
movsl
hlt
int
sub
add
pop
lds
add
mov
sub
sbb
mov
adc
addr16
pop
popa
and
nop
cmc
pop
adc
xor
popf
cmpsl
xor
popf
fstl
sti
jecxz
ja
sbb
add
and
push
adc
pop
int
mov
push
cwtl
push
lcall
int3
fucom
into
or
pop
sub
pop
inc
cmpsb
scas
std
and
cmp
fisttps
fnsave
adc
jbe
xchg
lahf
ret
cmp
jecxz
mov
jns
adc
aas
and
sub
insb
jl
cmp
mov
and
mov
js
cwtl
sbb
and
je
cli
mov
mov
inc
nop
std
push
and
fsts
inc
jmp
call
andb
jmp
mov
push
iret
dec
mov
adc
sbb
or
sub
jne
xor
mov
jnp
push
mov
inc
inc
push
jne
mov
nop
daa
sbb
xor
hlt
movsl
inc
mov
punpcklbw
inc
pop
jge
test
add
push
xchg
in
sub
and
cmpsl
fstpl
dec
sarl
inc
es
mov
sub
cmp
adc
mov
mov
dec
js
rcrl
xchg
sbb
rorl
xor
lret
fdivrl
mov
cli
push
inc
pop
mov
lods
xchg
mov
fistps
sub
mov
sub
js
xchg
jbe
dec
xor
div
out
inc
dec
xchg
test
sub
mov
inc
nop
pushf
ss
lahf
and
std
imul
cli
xchg
and
jae
jl
adc
int3
pop
dec
popf
cmp
rcr
mov
in
adc
xor
clc
push
mov
test
cmpl
pop
je
adcl
jno
jge
in
fldl
add
and
imul
inc
cmp
mov
mov
mov
and
push
in
mov
mov
lods
std
jo
dec
xor
add
insl
les
adc
aas
icebp
aam
ljmp
xchg
pushf
dec
jmp
popa
pop
mov
dec
mov
cs
aad
loop
outsl
subb
gs
push
jle
push
out
jbe
minps
enter
jge
aas
adc
adc
imul
xlat
ret
jp
imul
data16
shrb
jge
jne
add
insl
jnp
jl
pop
xor
hlt
pushf
lea
jmp
enter
xlat
mov
icebp
push
or
pop
adc
aaa
push
xor
ss
jns
daa
fnstcw
stos
and
scas
xor
aad
ss
dec
push
rclb
pop
inc
notb
mov
and
xor
and
or
dec
fidivrs
cmp
outsl
popl
pop
sub
cltd
andl
enter
incl
push
push
arpl
std
inc
lret
out
xchg
fs
in
lret
insl
mov
dec
and
xor
inc
int3
jge
dec
xchg
mov
aam
add
rol
loope
push
push
mov
and
nop
jle
hlt
movsl
pop
sti
lods
mov
ljmp
sub
and
int
out
fs
sub
jae
cltd
cmp
add
hlt
popa
cmp
jl
inc
das
mov
cmp
adcl
leave
dec
out
mov
leave
push
xorb
sub
insl
hlt
out
out
push
adc
xor
les
or
addr16
and
xor
adc
pop
pop
mov
cmpsl
xchg
adc
add
push
imul
mov
push
and
mov
push
add
stc
dec
add
pop
test
movsb
push
pop
jp
call
add
push
dec
sub
or
fwait
jmp
lds
dec
push
mov
int3
push
xchg
ljmp
insl
sub
add
adc
mov
push
lock
sti
xor
insb
stos
popa
inc
jle
jp
mov
sar
out
rorl
xor
sbb
xor
add
sbb
mov
clc
add
or
fbstp
call
xor
orb
in
negl
stos
pushf
out
push
cmp
xchg
test
cs
hlt
mov
leave
pop
lods
mov
out
mov
cli
xor
cltd
loope
test
adc
add
lds
pop
xchg
push
inc
pcmpgtd
in
in
xchg
je
loope
or
ret
add
push
stos
out
int3
mov
repnz
mov
enter
xchg
mov
js
in
sub
mov
daa
xchg
stc
sub
movb
adc
outsl
inc
jecxz
xor
test
js
sar
or
into
dec
jnp
or
jb
sbb
fdivs
leave
pushf
incb
xchg
inc
mov
rcr
push
mov
pop
das
cmp
jge
xor
test
movsl
mov
ret
mov
adc
push
pop
cli
xchg
or
jmp
in
mov
xchg
sti
pusha
fmull
mov
mov
adc
mov
cmp
jbe
fmuls
shll
into
stos
pop
es
pop
push
fcoms
and
sti
pop
jns
ret
inc
push
jecxz
fwait
push
xor
sbb
das
mov
les
jo
xchg
push
les
in
pop
pop
or
jne
pop
iret
pop
dec
and
insl
push
inc
icebp
fstpt
testb
into
adc
fcomi
add
xlat
and
js
sbb
imul
into
inc
out
inc
fidivrs
xor
dec
into
dec
imull
rcrb
jle
sub
jg
mov
iret
dec
pop
hlt
xorb
mov
push
lods
movsl
loope
mov
or
add
iret
in
sahf
aaa
dec
pop
dec
imul
jecxz
mov
mov
xorl
pop
into
mov
movsb
out
in
xor
xchg
add
xor
enter
sbb
repnz
add
aad
leave
pop
lahf
subl
imul
push
repnz
mov
push
mov
and
add
or
adc
jbe
xor
leave
adc
cmpsl
dec
push
xor
jbe
fldenv
loopne
fisttpl
dec
pop
mov
addb
shl
sahf
lret
out
insl
scas
or
insl
mov
test
push
sub
pop
test
pop
xchg
fs
icebp
pop
sbbl
sbb
pop
inc
sub
sub
cmpsb
mov
jmp
andl
sub
dec
sbb
and
test
cmp
push
and
push
mov
dec
arpl
mov
insl
inc
clc
cmpsl
ja
jl
ret
dec
subl
cmp
and
push
push
es
outsl
lahf
lods
mov
repz
pushf
add
shrl
jns
fcmovne
mov
jnp
movsl
and
adc
enter
jle
cmpsl
cmp
js
jo,pt
mov
inc
mov
repnz
ja
lret
and
adc
rclb
pop
and
mov
mov
mov
xor
dec
xchg
mov
or
mov
xor
cltd
sbb
mov
jmp
mov
mov
pusha
sti
mov
jmp
sbb
xchg
pop
int
rorb
jge
dec
mov
add
jb
mov
push
jb
popa
je
ret
testb
rcl
sub
inc
ja
or
cli
xchg
in
outsb
ss
xor
shll
shll
sbb
sti
adc
outsl
dec
jb
mov
icebp
add
and
stos
in
add
in
test
loop
loope
jbe
and
or
pop
sti
sub
or
mov
es
mov
mov
add
add
sub
mov
pop
pop
scas
sub
or
mov
jecxz
sahf
sbb
in
mov
push
sarb
sub
fcoms
or
cmp
jecxz
and
hlt
add
xor
pop
in
jmp
dec
js
dec
dec
pop
mov
push
shlb
rcll
ljmp
push
ja
fcomps
push
and
mov
pop
hlt
and
and
lret
add
mov
push
aam
add
jle
test
jb
or
icebp
xchg
stos
mov
cmp
rorb
fs
test
call
insl
ficoml
imul
and
lods
paddsb
out
add
stos
push
jle
xor
add
or
sub
pop
out
cmp
sub
push
sbb
pmaxsw
js
sub
clc
or
inc
jno
pusha
lea
pop
push
and
xchg
xchg
xchg
mov
sub
fisubs
or
bound
ficompl
fnstsw
pop
pop
out
xor
push
adc
push
scas
cwtl
cmpsb
mov
fildl
inc
jnp
adc
jge
cmp
add
je
dec
inc
cmp
pop
pop
adc
cltd
sbb
mov
je
xchg
rcll
rcll
jecxz
in
cmpsb
or
lret
pop
jb
arpl
mov
test
das
xchg
xchg
jp
jns
xchg
or
dec
hlt
popa
mov
xor
mov
popf
push
sbb
data16
lahf
aad
jnp
outsl
or
je
cld
in
sbb
test
mov
add
mov
jmp
xor
scas
lods
cmp
mov
or
shlb
mov
jp
bound
icebp
cmp
inc
iret
in
push
test
push
into
fs
dec
adc
imul
pop
dec
jmp
dec
xchg
cmp
mov
xor
adc
stos
mov
lods
pop
dec
inc
outsl
dec
outsb
pop
xor
jne
ljmp
inc
jb
sub
pop
pop
dec
jb
fnstsw
mov
adc
pushf
xchg
xchg
test
add
and
mov
mov
imul
mov
mov
iret
jl
mov
or
iret
xchg
xchg
mov
dec
in
adc
xor
xchg
xchg
mov
mov
loope
stos
sarb
out
daa
sbb
jge
cmc
cmpsl
scas
mov
loop
in
mov
out
push
xchg
fistpll
inc
sub
xor
lods
mov
mov
adc
popf
push
pop
je
mov
ljmp
jge
les
mov
xlat
or
arpl
clc
xchg
xlat
jp
lds
cmc
cmp
test
test
inc
push
xchg
mov
jno
out
addr16
adc
jecxz
scas
movsl
sbb
icebp
imul
ds
xor
inc
cmp
stos
jge
pop
insb
shrb
insb
push
movsl
xchg
xchg
movsl
js
shlb
push
pop
and
les
sub
push
mov
sub
adc
adc
sbb
movsl
andl
sub
rcrl
mov
test
xchg
in
fcomip
mov
aam
xlat
or
sbb
push
fsubr
and
or
mov
mov
sbb
test
mov
out
int3
in
xchg
jmp
fnstsw
lods
movsl
clc
cs
adc
insl
pop
add
inc
adc
mov
into
ds
negl
mov
rol
sti
daa
lods
stc
xor
fistpll
out
addb
loope
scas
repnz
cmpsb
sub
scas
int3
lds
rol
pop
adc
jmp
nop
xchg
or
arpl
dec
test
mov
adc
jecxz
lret
test
mov
insl
cmpsl
xchg
mov
popf
push
or
in
ss
jnp
mov
sbb
insb
lret
loope
sbb
xchg
stos
movsl
shlb
or
mov
dec
mov
mov
int
hlt
cmc
mov
or
add
dec
xchg
inc
mov
scas
pusha
sti
lea
add
and
pop
call
dec
jb
or
scas
clc
cltd
idiv
xor
gs
jne
mov
push
aad
xlat
stos
out
mov
pop
test
jge
fs
cmpsb
stc
mov
ds
aas
ljmp
xchg
xor
jae
pop
insl
xchg
xchg
inc
xor
mov
adc
sub
pop
mov
adc
pop
scas
cmpsl
push
adc
sub
aas
imul
outsb
cmp
test
leave
push
ljmp
fidivl
push
call
leave
push
inc
and
inc
push
pop
es
aad
test
mov
xchg
into
mov
xchg
pop
mov
ds
cwtl
fisubrs
ja
lret
dec
hlt
sbb
pushf
sbb
clc
imul
loope
sbb
mov
aas
mov
adc
cmpsl
loop
pmullw
pop
mov
sahf
bound
push
cltd
or
mov
imul
inc
shll
pop
add
imul
xchg
mov
pusha
sub
imul
jns
jb
mov
pop
aam
test
andl
arpl
jle
dec
mov
jns
shlb
jnp
mov
gs
sub
sti
fwait
xchg
xchg
popa
sbb
push
xchg
mov
jns
test
xchg
sub
scas
imul
cmpsb
fsubs
pusha
je
xchg
repnz
xchg
ds
sub
mov
outsl
sub
xchg
cmp
cli
jb
sarl
jo
pop
and
mov
gs
sub
jns
mov
push
out
add
mov
push
xchg
shrb
push
mov
adc
pusha
loope
lahf
aaa
adc
cmpsl
sbb
mov
mov
lret
bnd
mov
xchg
mov
jo
mov
cmp
pop
stos
xor
rclb
lret
je
push
jecxz
xor
rolb
jno
jmpw
pop
sub
testb
add
and
mov
les
or
mov
dec
filds
cltd
aad
push
push
movsl
dec
insl
test
mov
pop
mov
movsb
cmpl
gs
sahf
ret
push
jmp
xor
xor
or
pop
scas
imul
test
hlt
or
setg
pop
xchg
fnstcw
dec
add
mov
pop
enter
out
mov
sar
adcl
push
fnstsw
mov
rcrb
scas
test
movsb
mov
fcoms
mov
dec
sub
xor
push
aam
jo
dec
cmp
inc
loop
push
xor
nop
call
insb
fld
lods
cmp
add
mov
xor
dec
loopne
sub
insb
mov
outsl
pop
jle
es
jno
pop
repnz
push
xor
insb
adc
add
popf
cmp
cmp
sbb
cmp
pushf
or
push
jbe
std
test
daa
movsl
sbb
or
mov
stos
xor
jns
xchg
mov
jae
push
jb
mov
cmp
sub
sbb
flds
add
hlt
sbb
insb
mov
call
daa
pop
jl
inc
xor
aam
dec
xchg
test
push
je
filds
xorl
xchg
fwait
mov
arpl
pop
repz
mov
adc
stos
dec
stos
fwait
xor
mov
insl
rcrb
inc
xchg
fcoms
inc
aam
sti
xchg
out
mov
repz
shlb
sti
in
je
and
mov
push
pop
push
dec
dec
xor
cmpsb
hlt
bound
or
dec
mov
dec
jbe
mov
int
rcrl
inc
or
lds
loopne
and
je
test
dec
mov
sub
mov
adc
in
mov
pop
sti
popa
cmpsb
and
dec
cmp
cmp
aas
sub
clc
xchg
movsb
pop
lret
lahf
mov
arpl
xor
inc
sarl
movsb
divl
cmpsl
test
in
sti
xchg
rolb
mov
lret
push
ret
and
xor
sub
in
or
cmp
sub
adc
enter
int
lea
scas
mov
ficompl
cmp
mov
movsb
into
lods
sub
pop
pop
lods
into
mov
stos
mov
mov
inc
out
jle
rcll
mov
js
aam
push
cmp
rclb
aas
mov
popf
lret
rcll
mov
ror
xchg
lret
push
scas
int3
lret
mov
push
push
cmp
sbb
pop
aas
mov
adc
insb
jecxz
scas
ret
adc
jmp
push
mov
mov
lret
repnz
jp
js
jne
roll
cld
xchg
pop
mov
stos
push
push
pop
fiadds
jecxz
and
sbb
fildll
push
mov
jg
pushf
andb
jmp
mov
cltd
stc
pop
loop
in
and
mov
sub
bound
std
int
or
lret
and
mov
stc
outsb
push
je
mov
mov
jle
divl
add
push
xor
dec
push
push
lcall
sahf
dec
ror
mov
push
and
cmc
dec
or
or
aam
lahf
aas
test
inc
out
xchg
fists
ss
fcoml
andb
insb
cmpl
or
mov
pop
cli
sbb
repz
cmp
icebp
fwait
mov
sahf
pusha
xlat
adc
jg
jg
xor
and
rcrb
xchg
daa
mov
pushf
fwait
or
lcall
push
adc
add
fnstsw
and
insl
mov
sub
ss
test
out
jae
inc
arpl
and
dec
fdivrs
xor
xor
test
clc
mov
mov
test
imul
pushf
mov
es
jns
outsb
jge
sbb
mov
and
push
pop
div
xchg
cmp
fsubrs
jl
add
leave
in
mov
mov
jmp
cmp
shl
enter
pop
add
dec
mov
sub
mov
pop
movsl
adc
sub
insl
push
xchg
push
xchg
loop
mov
stos
inc
lods
out
pop
adc
mov
iret
dec
add
inc
jae
int3
and
xchg
test
mov
push
test
pop
mov
mov
scas
cmp
xchg
lods
out
or
mov
mov
adc
xchg
add
or
dec
fidivl
test
rorl
and
sub
cltd
xchg
psrad
push
jbe
aad
mov
rorl
jae
add
rcll
and
adc
cmp
and
mov
mov
or
scas
scas
and
test
sbbb
stc
and
inc
movsl
addl
fstps
pop
and
push
mov
inc
or
ficomps
jae
mov
jmp
xchg
add
gs
and
popf
push
push
ljmp
dec
ret
fcmovnb
and
insl
imul
dec
hlt
xor
imul
movsb
xchg
push
xchg
insb
jnp
pop
mov
nop
in
mov
in
sahf
inc
clc
hlt
push
lock
cltd
add
xchg
xor
cmc
enter
mov
out
mov
xchg
push
jecxz
push
outsb
inc
pusha
mov
cs
push
jg
adcl
xorb
stos
mov
cltd
sub
adc
jbe
dec
jl
pop
rorb
rcrb
inc
xor
push
lds
scas
xchg
jl
pushf
idiv
xor
sbb
ja
cmp
dec
push
or
dec
mov
dec
jae
add
inc
sti
inc
cld
push
and
mov
mov
stos
ljmp
mov
mov
sbb
in
je
fdiv
icebp
fnsave
sbb
sbb
push
nop
jns
jp
xchg
arpl
sub
jno
vpsubw
outsb
mov
aaa
and
fcomps
xor
imul
cwtl
cltd
push
cltd
fwait
loopne
scas
stc
stc
xchg
in
in
sub
pushf
sub
inc
mov
pop
movsb
nop
cmpsb
mov
and
fldenv
dec
jge
mov
div
mov
cwtd
clc
ret
cli
sbb
pop
scas
push
dec
sub
int3
in
lods
push
popa
mov
fdivl
mov
sti
pop
sti
inc
or
mov
sub
and
cltd
push
pop
add
subl
movsl
dec
iret
into
sub
mov
adc
ljmp
roll
push
ret
adc
jl
or
xor
push
or
stos
idivl
mov
mov
int3
imul
cmp
dec
pop
clc
or
push
pop
pop
mov
cmpsb
mul
lcall
lods
inc
mov
hlt
std
cltd
sub
call
mov
push
mov
ret
out
in
push
out
push
push
ret
xchg
push
push
pop
and
or
loopne
sub
mov
leave
push
jp
sahf
mov
push
pop
std
cltd
js
xchg
ja
or
xor
xlat
and
cmp
nop
sub
inc
repz
sub
std
or
stos
xor
int3
divb
fadd
jg
sub
cmp
inc
stos
mov
push
inc
cmp
imul
mov
add
shlb
push
xchg
out
mov
mov
push
call
lcall
movsb
adc
jns
test
jge
lahf
je
mov
push
jb
mov
lret
push
cmp
jl
and
bound
ljmp
cltd
cwtl
ja
movsb
jp
or
mov
fcoms
pushf
sarl
xchg
mov
lahf
pop
mov
or
clc
lret
sahf
push
pop
or
dec
adc
cmc
ret
xor
pop
mov
daa
iret
loope
jo
test
sbb
cmpsl
inc
jo
fnstsw
pop
std
loopne
pop
pushf
mov
faddl
aaa
stc
insb
lea
mov
aas
hlt
dec
iret
lahf
and
fiaddl
call
adc
dec
xchg
stos
int3
push
test
mov
lods
mov
inc
das
xor
or
cmp
sahf
dec
sti
jnp
xor
fldlg2
mov
push
test
xor
inc
icebp
in
jge
js
das
inc
jnp
and
call
push
push
insb
je
push
xlat
popf
push
dec
stos
stos
cmp
jno
lods
mov
add
pop
ficoms
and
leave
dec
pop
lahf
pop
lock
movsl
lock
sbb
leave
test
gs
and
fbstp
sub
popf
mov
fsubr
mov
clc
mov
pop
enter
in
dec
hlt
add
dec
sbb
mov
mov
movsb
jno
push
fld
and
insb
push
pop
lret
mov
jmp
cmpsb
xchg
cltd
test
hlt
cmp
repz
lret
xchg
std
adc
mov
decb
cmp
jae
ficoms
pop
mov
jmp
dec
cwtl
cwtl
lds
arpl
or
inc
fldl
xchg
cwtl
js
lock
xchg
push
addr16
lock
xchg
ret
dec
icebp
inc
jmp
cwtl
jmp
xorl
and
xor
inc
mov
fildll
ljmp
fstpl
xor
dec
popf
mov
ja
shlb
sub
add
sbb
pop
cmpsl
lods
test
mov
pusha
mov
ljmp
shrl
movsl
add
sti
mov
pop
adc
sbb
jb
mov
jle
ljmp
push
mov
inc
pop
cmp
lods
aas
stc
xchg
nop
dec
ss
cwtl
cmp
lods
mov
fdivrs
loopne
fidivrl
imul
push
in
insb
aas
test
jnp
gs
sbb
out
mov
mov
cwtl
icebp
or
push
out
pop
out
pushf
sarb
or
push
jne
popa
jle
out
lea
aam
std
mov
and
mov
lea
and
lcall
xchg
mov
xchg
pusha
stos
sbb
dec
xor
rcll
add
inc
arpl
adc
add
data16
adc
dec
fs
xor
sub
mov
sbb
adc
mov
push
hlt
mov
inc
and
imul
inc
sbb
nop
adc
je
push
inc
pop
jp
pop
insb
ja
outsl
or
push
in
push
pop
mov
add
lret
out
cmp
push
xchg
dec
xchg
jnp
outsb
lcall
xchg
stos
stos
sub
xchg
cmp
aam
xchg
js
enter
push
mov
pop
mov
pop
sub
stos
push
cmp
push
stos
pop
int
jp,pn
or
pop
pop
ror
aaa
push
addr16
pop
out
es
sti
cltd
in
pop
pop
cmc
insl
xor
in
sub
sahf
mov
mov
test
cmp
dec
dec
call
sub
pop
xchg
aas
mov
pop
imul
jle
and
pop
mov
jbe
rorl
lret
lea
out
push
inc
imul
dec
and
push
mov
mov
out
rclb
mov
cmp
test
mov
icebp
push
scas
adc
mov
subl
jae
lods
adc
inc
movsb
xchg
push
std
sti
and
cmp
sbb
inc
ljmp
scas
mov
out
je
or
push
push
lret
add
or
decb
xchg
sbb
int
lahf
xchg
pop
push
stos
xor
xor
inc
mov
lock
xor
add
dec
je
dec
call
cmc
scas
xor
fmul
outsb
push
insl
adc
jnp
insb
pop
push
dec
push
incl
addr16
mov
jl
or
push
pusha
imul
loop
loope
adc
add
cwtl
jns
push
loope
mov
pushf
fwait
pop
jp
popa
push
out
xchg
xor
fwait
stos
imul
or
fs
adc
daa
cltd
mov
xor
push
fistl
sarb
and
dec
inc
cli
in
push
ret
pop
xchg
lahf
mov
stc
mov
xor
add
jecxz
call
popa
inc
in
outsl
mov
sub
cmpsl
sub
push
mov
lahf
sbb
jp
jo
push
sbb
jecxz
sti
dec
inc
mov
inc
mov
inc
mov
mov
mov
lea
push
mov
jb
add
lahf
xchg
fwait
jne
xchg
adc
fs
pop
push
mov
ret
pop
test
aas
push
or
inc
pop
cltd
cld
sbb
nop
xchg
cmp
inc
movsl
test
inc
jge
mov
push
mov
sub
movsb
das
fnsave
xor
outsl
and
ja
pop
dec
add
jl
pop
jo
mov
iretw
mov
push
repnz
dec
mov
xchg
rcl
rclb
mov
inc
sbb
fs
addl
outsb
lahf
stos
das
adc
loop
fcoms
fisttpll
jecxz
popf
in
pop
mov
rclb
or
sub
into
and
sub
cmp
insl
fnstcw
pop
repz
jnp
xor
loop
loopne
fcoms
jb
repz
xor
das
pop
leave
stc
pop
shl
loopne
xchg
dec
fdivs
test
subb
mov
cwtl
sbb
mov
cmp
cwtl
or
dec
fildl
cltd
mov
push
or
out
je
xor
mov
xchg
sbb
or
rcl
shl
cwtl
inc
ja
es
mov
or
ret
adc
in
xor
dec
hlt
cmpsl
add
jle
das
jle
mov
aad
cmc
pop
or
iret
repnz
jne
jge
mov
dec
mov
and
sbb
sub
jg
in
in
mov
in
into
out
xchg
jmp
inc
imul
js
sti
dec
pop
enter
push
nop
mov
popa
mov
sbb
fmuls
mov
movsb
sub
mov
fs
or
pusha
inc
xor
adc
aas
js
test
lods
mov
test
jno
push
adc
inc
or
scas
jbe
dec
movsl
xor
in
mov
pop
mov
xor
lcall
or
mov
xchg
out
ret
mov
xor
push
mov
inc
fdivrp
mov
shl
mov
mov
pushf
std
lock
sub
cmp
or
pop
sbb
inc
cmp
sub
cmp
or
loop
ss
les
and
dec
jmp
in
repz
jb,pn
cmp
push
and
adcl
lods
ja
mov
subb
out
clc
mov
aaa
inc
pop
shld
in
mov
sbb
dec
mov
out
cli
lods
mov
pop
sbb
sbb
leave
sahf
sbb
push
pop
daa
sahf
dec
test
pmaddwd
sbb
lcall
sub
pop
stc
xchg
pop
in
clc
mov
mov
xor
inc
xchg
ret
ror
mov
fnstsw
lods
dec
stos
in
out
cmp
scas
mov
jne
xor
jnp
and
ret
dec
pop
fcomps
into
jmp
inc
les
fsubr
push
pusha
sbb
mov
aam
mov
repz
push
or
movsb
sbb
pop
test
push
jae
and
xchg
pop
jecxz
mov
inc
add
cmp
sbb
jb
push
add
daa
or
and
imul
leavew
push
cmp
jmp
insb
or
xchg
mov
add
shlb
pop
fdivr
and
inc
outsl
cmc
jb
push
addr16
scas
jmp
or
or
mov
lret
std
mov
lret
repz
lahf
inc
out
in
mov
incb
iret
imulb
and
pop
cltd
jp
push
mov
out
adc
sti
outsl
stos
mov
sub
fstpl
test
aam
xor
neg
mov
ret
aaa
les
push
push
cmp
lea
xchg
test
cld
pusha
std
cmp
imul
mov
xchg
mov
pop
add
lods
in
and
pop
mov
test
xor
push
notb
fs
fisubrs
dec
sti
call
pusha
mov
mov
dec
pop
dec
clc
mov
mov
xchg
mov
xlat
dec
aaa
imul
fbld
out
lcall
pop
daa
inc
in
int
dec
jl
fstpt
sub
sub
out
lock
adc
fstpt
dec
in
mov
pop
loop
jno
repnz
pusha
ret
movsb
idivl
mov
adc
mov
pop
jge
das
inc
mov
sbb
outsl
dec
imul
xchg
mov
iret
scas
lret
mov
push
jbe
shl
ss
icebp
shlb
add
enter
aam
dec
jmp
stos
mulb
pop
mov
xchg
out
jmp
loop
shll
adc
inc
xor
fwait
or
cltd
aad
mov
pop
rcrb
scas
push
inc
mov
cmpsb
xacquire
call
mov
fs
dec
mov
sub
mov
ret
out
pushf
arpl
ss
jle
xchg
in
mov
jmp
sub
adc
xor
cwtl
xchg
cmp
testl
and
push
lods
xor
andl
dec
mov
push
mov
sub
movq
jne
mov
les
test
or
push
or
and
mov
je
push
fistpl
in
lods
lock
adcl
cmpsl
mov
adc
shrl
jnp
xchg
xor
xchg
jnp
push
fwait
xor
lods
fistpll
cld
aam
xchg
sbb
fwait
inc
jbe
int3
repnz
mov
daa
lahf
xchg
fldenv
xor
sub
popf
push
rolb
test
cltd
cs
das
inc
xor
inc
pushf
rol
lret
push
add
iret
cmp
mov
stc
push
xchg
movsl
sahf
cmc
insb
test
jns
cmpsl
pop
push
aas
subl
fdivl
jl
mov
mov
xor
push
arpl
mov
push
sbb
test
out
push
idivl
push
in
dec
clc
in
pop
fstps
shrl
mov
cmpsb
inc
addr16
outsl
and
jl
mov
stos
xchg
sub
jg
and
mov
mov
xor
in
mov
out
mov
sub
xchg
inc
lock
xor
dec
repnz
and
xor
xchg
jb
mov
lcall
scas
sbb
repnz
pop
rorb
dec
cmp
bswap
adcb
sarl
aaa
cmpsl
xlat
dec
xchg
sbb
push
or
lock
xlat
jle
mov
out
xchg
push
stc
push
aam
hlt
aas
mov
xchg
mov
push
sti
es
ret
adc
xchg
sti
mov
mov
lea
jp
jbe
jnp
sbb
cmp
daa
pusha
shll
hlt
adc
lahf
add
push
dec
inc
mov
jecxz
inc
xchg
sub
cmpsb
jp
in
pop
push
ret
aad
dec
and
inc
in
nop
ss
or
add
cmp
adc
nop
imulb
lock
roll
cmpsl
in
push
add
jo
jp
mov
loope
ljmp
or
js
arpl
push
pop
xor
out
imul
repz
push
shrl
jb
xor
ret
cmpsl
mov
fcmovne
sub
pop
xor
pop
and
ja
or
daa
and
pop
xchg
cmp
push
loopne
test
mov
je
out
or
xchg
inc
xchg
repnz
jp
or
mov
rorl
sub
cli
and
std
mov
mov
popa
mov
ffree
pop
imul
addb
xor
mov
sarb
dec
sbb
mov
xchg
pusha
mov
xchg
bound
mov
mov
mov
cs
leave
aaa
push
dec
insl
out
lahf
add
cmc
jne
xor
shrl
add
loop
cmp
push
test
hlt
cmc
test
ss
insb
scas
fimull
jo
sbb
inc
idivb
pop
insl
pop
push
fxch
pop
pop
js
pop
adc
rolb
sub
gs
dec
bound
sub
mov
add
pop
xchg
push
int3
cmp
dec
inc
push
and
jbe
or
mov
inc
dec
cli
dec
dec
setg
out
test
icebp
add
inc
mov
xchg
or
cli
fwait
inc
bnd
xchg
repz
test
jnp
aaa
cmp
fdivs
lds
scas
push
or
repz
cmp
jp
int3
roll
mov
pop
das
int
cltd
repnz
sarb
jb
leave
xchg
jle
je
adc
addr16
inc
cs
dec
mov
imul
adc
push
push
sub
mov
add
jne
xor
sti
lret
add
lods
nop
sub
das
data16
pop
push
and
dec
mov
nop
xchg
mov
icebp
mov
into
sahf
ds
popa
das
aad
ds
mov
movsl
lahf
push
jl
aam
push
sbbb
sub
jae
xchg
test
popa
or
test
cltd
push
dec
push
iret
es
loope
sbb
pop
aas
ficompl
lret
pop
mov
fisubrl
imul
stos
jecxz
subb
push
sub
lods
lds
xor
arpl
call
bound
bound
aam
mov
lcall
pop
mov
xor
rcrl
daa
call
push
or
jo
fwait
pop
mulb
fchs
out
loop
push
cmp
repnz
push
scas
jo
arpl
mov
dec
or
out
lds
add
mov
add
jp
fildl
mov
out
mov
das
cmp
enter
mov
loopne
adc
cld
fstps
mov
adc
mov
aas
repz
loope
scas
pop
sahf
stos
es
cmc
or
sbb
test
inc
cs
clc
das
lcall
movsl
popf
rep
add
fldl
out
or
mov
ljmp
test
fs
jb
pop
daa
sarl
aad
push
dec
xor
and
enter
into
insb
xlat
ds
pusha
sbb
in
inc
decl
inc
or
dec
mov
push
nop
and
push
mov
in
out
push
int
jg
test
jne
out
adc
insl
push
popa
into
mov
repz
and
lds
cmp
lods
inc
test
outsl
ret
mov
adc
test
inc
repz
sbb
pop
cmp
ds
sub
push
arpl
pop
fildll
mov
mov
pushf
in
lods
idivl
orb
jg
ficoml
inc
mov
movsb
xchg
mov
cli
je
jo
fdivs
mov
mov
mov
leave
int3
idivl
inc
jns
scas
mov
ss
inc
xor
lahf
lds
out
aas
cmp
cmpsb
or
and
rcl
xorl
mov
ret
movsl
push
adc
push
adc
mov
xor
add
mov
rcll
mov
lock
inc
dec
inc
cmpsb
aam
add
jmp
sub
jle
sbb
test
addb
ret
fwait
stos
mov
rolb
in
mov
xchg
mov
pop
dec
cmpsl
insl
out
jo
outsb
mov
mov
push
cmp
mov
lahf
pop
movsl
mov
jae
hlt
call
repz
ss
rclb
xchg
jo
mov
xchg
out
jnp
xchg
hlt
popa
sbb
xlat
data16
dec
neg
xor
rorl
vphaddudq
imul
in
mov
in
adc
gs
adc
push
outsl
test
pop
cmp
mov
mov
in
leave
jmp
xor
fidivrs
insb
pushf
push
js
pop
ja
fisttps
add
aaa
test
pop
dec
fidivs
jb
lcall
fsubrp
popf
mov
ljmp
or
pop
push
mov
sbb
scas
scas
ret
or
add
mov
movsb
cmp
insb
push
imul
scas
mov
mov
icebp
jbe
pop
lret
xchg
xchg
cmpsl
cmpsl
dec
lock
arpl
pop
ss
loope
adc
clc
in
sarb
ret
pop
rcr
sbb
aam
xchg
pop
sub
cmpsl
lea
cmp
cltd
or
sarl
jg
pushf
add
jg
scas
mov
aaa
aad
fsubl
mov
pop
sti
push
mov
bound
icebp
dec
xchg
push
adc
sti
ret
push
sub
xchg
aaa
inc
fisttpll
outsl
lock
popf
ret
aaa
lds
insb
popa
mov
bound
xor
in
inc
mov
fnstsw
mov
lea
push
cmp
das
lods
xlat
outsl
and
insb
or
nop
sub
jecxz
pushf
xor
insb
mov
hlt
andb
dec
jb
loopne
and
mov
xchg
jno
cmpb
or
es
dec
lds
mov
cs
lods
mov
cld
dec
pop
mov
pop
aam
or
or
pop
xchg
dec
push
mov
nop
repnz
jecxz
xchg
xchg
pop
or
and
mov
mov
or
xchg
mov
xchg
pop
mov
fs
bound
jne
xchg
dec
push
cli
loope
push
mov
adc
push
fdivl
pushf
stc
sahf
sbb
pusha
iret
stos
repnz
testb
jmp
hlt
cmp
pop
lods
xchg
xchg
int
stos
adc
scas
push
add
andb
outsb
test
out
call
hlt
ja
mov
dec
pop
out
or
push
xchg
xchg
xor
pusha
pusha
lock
pop
dec
mov
out
dec
cmp
xor
sahf
loopne
jmp
sbb
addr16
xor
jl
mov
sbb
iret
iret
xor
fimuls
pop
test
loope
andb
cltd
add
and
mov
xor
iret
pop
sbb
adc
jae
dec
cmpsl
les
mov
sbb
push
mov
add
xor
jge
jbe
cmp
ds
jle
iret
notl
add
fldcw
insb
cltd
out
js
lock
push
out
repz
add
jb
outsl
cmp
xor
lcall
and
jge
mov
cmp
mov
out
mov
mov
fimuls
sub
cmp
in
add
imul
xchg
mov
inc
add
int
idivb
cli
xor
adc
sbb
adc
push
pop
and
aaa
clc
hlt
data16
popf
inc
and
push
movsb
or
pop
mov
cmp
jmp
jbe
outsb
bound
dec
push
out
subl
jp
out
or
nop
push
leave
or
jae
xor
stc
cmpsb
adc
imul
shl
das
stos
xlat
leave
mov
loopne
adc
bound
pop
test
mov
add
xor
sbb
adc
rcrb
fimull
jnp
es
pop
imul
int
insl
xor
loopne
into
lock
fnstsw
dec
cmp
push
lods
or
cmpsl
adc
add
in
nop
xchg
jl
pop
mov
add
bt
dec
scas
add
fimuls
roll
dec
lds
mov
push
sbb
and
sbb
cmc
dec
and
mov
out
lcall
aaa
xor
lods
mov
sbb
lcall
cmp
sbb
loop
imul
jnp
mov
roll
iret
adc
sbb
dec
adc
dec
pop
push
and
loope
xchg
mov
jnp
popa
fistl
and
mov
outsl
in
mov
mov
and
sbb
pusha
mov
hlt
lods
add
shrd
mov
sbb
mov
leave
and
add
nop
sub
ds
add
add
enter
mov
and
pop
xorb
mov
xor
ljmp
jno
rolb
test
jae
mov
push
xchg
addr16
adc
imul
xor
xor
and
xchg
add
mov
fwait
addps
sub
daa
fsts
dec
mov
dec
cmp
lock
xchg
xchg
and
cld
sub
shll
inc
mov
cmp
clc
out
mov
imull
enter
int3
mov
push
mov
rcrl
notl
and
jg
sub
sub
les
cmp
cmpb
add
addr16
mov
lea
clc
and
inc
into
ja
pop
outsb
lahf
inc
mov
call
or
jns
adcb
aas
mov
imul
mov
xor
push
test
adc
dec
dec
mov
mov
stos
movsl
addr16
mov
test
sarb
dec
pushf
adc
jne
cltd
and
adc
add
push
arpl
lods
ror
pop
js
xlat
hlt
xor
xlat
push
lods
xchg
imul
pushf
lods
imul
push
std
mov
mov
dec
jae
inc
xor
jge
lcall
dec
sub
shrl
sbbl
pop
pop
and
std
dec
lcall
dec
fwait
int3
jb
popf
adc
mov
fcmovu
sbb
sub
in
xor
xlat
in
sub
pop
jecxz
mov
out
das
ljmp
and
arpl
push
lcall
mov
push
push
test
inc
and
mov
and
inc
js
xchg
rol
sub
es
inc
cmp
xchg
push
jae
sbb
xor
arpl
xor
mov
cmpsb
shrb
addr16
test
fisubl
xor
xchg
das
sbb
add
and
inc
cltd
mov
mov
cwtl
and
xor
lcall
sub
pop
push
incl
stc
or
test
test
fcmovnb
mov
leave
fsubs
push
movnti
mov
mulb
add
inc
pop
and
adc
sub
sub
jmp
scas
aad
sub
cmovs
jp
sub
sub
inc
mov
push
push
adc
pop
cmc
mov
popf
sbb
add
fistpl
das
xlat
es
mov
jns
sub
stc
pop
and
testl
jle
push
xor
dec
lea
das
jmp
or
iret
mov
fisubrl
adc
sahf
mov
push
mov
fisubrl
inc
ljmp
pusha
dec
push
sti
rcrl
xor
test
pop
lret
imul
sbb
pop
ja
adc
movsb
and
adc
outsb
sbb
xchg
xchg
je
stc
push
out
mov
inc
xor
fldln2
pop
das
add
and
cmc
inc
dec
inc
dec
nop
into
sub
sbb
dec
cmp
push
movsb
mov
jecxz
add
xor
cmp
leave
daa
lret
sahf
xchg
mov
mov
mov
mov
lods
cmp
je
push
mov
lahf
adc
stc
jl
pop
sti
cmpsb
sbb
subl
sbb
rep
xor
xchg
and
inc
mov
sbb
sub
mov
mov
mov
std
ret
ljmp
pop
and
mov
mov
sub
push
sub
in
sbb
jne
stos
adc
shll
adc
adc
lea
cmp
sahf
add
lods
push
inc
lock
jo
mov
add
add
aas
call
dec
movsl
xor
push
and
cltd
insb
add
dec
movsl
and
sub
push
push
xchg
lds
aas
push
sbb
ds
test
arpl
jbe
sbb
mov
and
xchg
xchg
js
fwait
sbb
imul
add
push
stos
mov
inc
sahf
inc
cmpsb
pushf
cli
lds
aad
ljmp
daa
xor
push
movsl
enter
jp
mov
stc
fdivr
inc
sahf
xor
sbb
stos
sbb
out
das
fnstcw
jbe
add
fs
fcmove
adc
add
mov
in
xor
mov
fst
pop
testl
add
mov
xchg
mov
mov
fwait
arpl
fwait
imul
mov
faddl
xchg
repnz
push
aam
adc
dec
loope
aam
mov
daa
adc
fidivrl
add
add
int
fwait
adc
and
cmpb
fisubrl
fwait
sub
dec
jp
push
push
sub
test
movsb
movsl
mov
dec
mov
jecxz
adc
cmpsb
lods
hlt
out
push
xor
mov
scas
xor
lods
xchg
popf
jmp
insl
dec
lcall
stos
jo
jbe
push
lcall
push
mov
pop
fsubrs
mov
divb
outsl
hlt
mov
and
push
clc
pop
lret
pop
cs
scas
into
mov
xor
push
dec
and
es
cmpsb
dec
mov
sti
movsb
stos
sub
movsb
icebp
jns
cmp
cmp
mov
xchg
cmp
adc
adc
xchg
in
or
fdivrs
leave
stos
jmp
fcmovnu
push
in
jae
test
cld
sti
repz
test
push
push
stos
shlb
mov
inc
rolb
dec
lock
add
aas
push
int
fldenv
gs
test
sti
inc
outsl
mov
inc
fdivl
inc
movsb
inc
pop
aaa
add
rclb
scas
pop
cmp
pop
xor
test
es
out
popf
jo
fnsave
and
push
pushf
or
sub
push
pop
scas
pop
shr
outsl
cmp
imul
stos
arpl
setbe
xor
pop
pop
mov
mov
pop
cmp
push
xor
cmp
jno
cs
pusha
pop
cld
imul
adc
mov
jge
jmp
data16
aad
inc
jnp
in
inc
push
add
les
outsb
aaa
adc
lret
mov
fdivrs
andb
xchg
mov
loope
mov
negl
dec
clc
or
sub
clc
fisubrs
sub
and
scas
push
push
cmc
add
sbb
dec
or
xor
xchg
mov
push
cmp
jno
or
jg
or
push
aam
sahf
add
lea
cmpsb
sub
stos
and
mov
loop
mov
jne
mov
addr16
daa
cmpl
pop
std
fmulp
pop
mov
popa
and
push
xor
lods
and
movsb
sub
mov
pop
imul
add
lods
and
loop
push
or
je
rcl
dec
and
int
dec
xor
xchg
shlb
fsubrs
in
sbb
int3
mov
sub
pop
sbb
out
je
aam
fadds
xchg
movsl
ds
mov
fildl
xor
lret
in
jno
dec
mov
stos
bound
cmp
sub
loope
in
out
aam
mov
xchg
mov
mov
jns
lods
pop
mov
in
out
jne
out
cwtl
fistl
sbb
sub
or
inc
add
ret
notl
or
sarb
jmp
sahf
xchg
jp
test
lock
cwtl
jnp
repz
shlb
hlt
or
popa
xor
mov
movsb
dec
loopne
or
xchg
fs
iret
pop
push
aaa
add
lods
adc
jge
push
outsb
js
xor
push
fisubl
mov
mov
jle
mov
bound
lea
in
jnp
push
xchg
mov
xchg
jns
inc
cmc
inc
fldt
insl
pop
pushf
cli
jns
mov
ss
sahf
xchg
arpl
cmc
cwtl
inc
or
dec
jne
xchg
iret
pop
lcall
sub
pop
ss
out
out
js
sub
in
test
xlat
push
pop
mov
adc
int3
in
div
ja
pop
sbb
push
rol
fisubrl
int3
aas
xchg
sbb
movsl
sub
mov
xor
dec
lock
rcrl
lods
idivl
shll
mov
iret
mov
dec
movsb
stc
cmp
pop
dec
sbb
ss
ja
leave
mov
jb
lret
cmpl
pusha
ret
fwait
inc
xor
test
inc
and
and
xor
dec
cmp
nop
pop
or
out
cmp
ds
inc
pop
popf
out
push
std
mov
push
aas
and
cli
xchg
xor
xchg
mov
mov
ror
into
cltd
test
sbbb
ror
repnz
mov
hlt
in
imull
mov
lret
leave
lret
or
adc
leave
pop
es
jnp
cmp
dec
fimull
ss
enter
jbe
in
dec
pushf
outsb
adc
cltd
in
out
jo
cmc
lea
mov
push
test
sbb
nop
fadd
sub
xchg
cmp
pop
add
pop
adc
sub
jne
cmp
jp
out
mov
mov
rolb
in
mov
shll
xchg
push
out
popf
aam
jle
xchg
bound
ss
pop
sbb
js
arpl
xlat
arpl
push
dec
pop
add
xor
pop
push
add
cmpsl
jb
stos
mov
lods
push
es
pop
shr
mov
xor
push
mov
lods
adc
movsb
adc
cmpsb
scas
repz
sbb
in
add
lea
add
subb
sbb
dec
inc
gs
sahf
sub
shr
roll
jbe
add
dec
sti
add
movsb
or
mov
and
movaps
mov
addr16
int
xor
leave
gs
jp
pop
cli
mov
jmp
mov
stc
out
incb
jl
sbb
xor
xor
imul
xchg
loopne
jg
int3
subl
cmp
pop
push
jno
rcll
addr16
sbb
adc
sub
ret
insl
push
cmp
cli
jno
mov
ret
scas
ss
mov
jmp
mov
out
xchg
mov
fdivl
xchg
cmp
jb
cmpsl
cmp
bound
int
adc
in
xchg
outsb
stos
repz
aam
mov
dec
pop
dec
mov
mov
js
xlat
stos
or
movsb
xchg
insb
fimuls
mov
arpl
rorb
pop
pop
mov
roll
fbstp
jnp
lret
aad
pop
ljmp
cmc
and
dec
cltd
push
std
rorb
sub
add
scas
loop
add
insl
imul
cmp
je
and
rcrb
mov
pop
pop
sahf
mov
iret
cmpsl
jg
add
clc
jbe
dec
jge
rcrb
mov
mov
scas
lock
push
jo
int
cmp
pop
cli
sub
push
rcl
jmp
movsb
jns
test
push
nop
push
dec
in
lahf
sbb
cmp
ss
jo
cmp
ljmp
test
mov
add
dec
inc
dec
repz
insb
cld
cmp
insb
inc
clc
xor
rcr
into
lock
jl
and
loope
es
shrb
fnsave
adc
fcomps
mov
fwait
push
lahf
lret
jns
imul
dec
adc
ljmp
mov
cmp
sbb
jge
or
xchg
adc
mov
int
data16
js
mov
iret
scas
cmpsl
stos
ret
or
das
fwait
nop
pop
adc
xchg
aas
std
sbb
jb
jae
jnp
leave
and
divl
bound
pusha
lods
aaa
rcrl
je
pop
cmp
ffree
cmp
xor
xor
mov
aad
fcoms
ret
lods
popa
adc
sub
stos
jnp
sti
add
mov
stos
sbb
pop
dec
xchg
fs
push
push
mov
rclb
and
idivl
pop
push
call
sub
test
sbb
iret
push
jecxz
jae
mov
ret
mov
test
adc
push
adc
lret
dec
pop
aad
stos
into
fidivrs
bound
out
dec
dec
sbb
lods
dec
clc
fsts
mov
fcmovbe
pusha
test
popf
xchg
and
ss
pop
jmp
lds
in
in
sub
popf
push
pop
imul
ss
adc
lock
cs
jle
inc
xor
jg
mov
fbld
into
push
pop
xor
mov
pop
jl
push
nop
mov
xchg
in
mov
out
mov
pop
out
sahf
out
popf
cmc
sbb
in
es
pop
call
sub
add
int3
test
pop
fsubl
out
daa
imull
shlb
scas
pop
sbbl
imul
ret
lcall
pop
test
lret
inc
lods
push
lahf
ret
inc
cmp
sbb
adc
adc
mov
cli
in
adc
cmp
fmul
out
sti
ja
cmp
daa
add
clc
movl
mov
lods
push
mov
jnp
mov
pop
es
mov
lods
push
cld
repz
insb
mov
loope
jae
and
mov
and
aaa
sarb
rolb
cli
xchg
jge
cmpsl
add
bswap
aam
xchg
cmpsl
dec
sqrtps
loop
pop
sbb
roll
popa
mov
imul
mov
cmp
repz
sub
outsl
adc
mov
mov
frstor
hlt
inc
jge
bound
add
cbtw
adc
pop
push
fchs
dec
pop
mov
pop
dec
push
dec
test
ljmp
mov
add
insl
lret
fsubrl
jo
push
shll
in
cmpsl
iret
cmp
xchg
inc
mov
lea
cmp
in
sbb
xor
jmp
mov
loopne
dec
jge
jg
leave
cltd
sbb
cmpb
push
outsl
adc
cmp
jge
mov
mov
aad
sahf
cmp
cmpsl
rcr
mov
out
mov
mov
outsb
insl
cmpb
push
pop
scas
shll
or
push
xlat
test
dec
lock
int3
aas
sbb
test
inc
push
repz
jo
xlat
add
mov
mov
push
test
pusha
fisubrl
jecxz
outsl
add
test
sub
pop
cmpsb
mov
xchg
psubd
adc
or
adcb
imul
mov
mov
andl
xchg
test
dec
jl
mov
jge
jp
daa
mov
out
enter
in
mov
pop
xchg
insb
and
mov
jb
sub
push
mov
mov
or
jmp
push
cltd
scas
jp
enter
jmp
in
mov
sbb
sub
mov
and
aad
sub
jae
add
xchg
scas
jl
mov
mov
ret
mov
les
add
push
into
pop
dec
sahf
inc
jle
xchg
clc
jo
sub
and
shlb
xor
lret
and
adc
mov
mov
in
mulb
pop
mov
cmp
dec
adc
loope
test
jp
mov
sbbl
push
mov
jmp
adc
out
jno
call
cltd
inc
cmpsb
cmpb
imul
js
mov
lahf
mov
movsl
pop
jle
add
push
rorb
or
add
dec
xor
push
incb
mov
out
sahf
movsb
test
dec
cltd
scas
mov
pop
inc
rcll
xor
push
mov
ret
xchg
leave
mov
icebp
ret
dec
sbb
mov
mov
jo
ja
xor
sti
sub
or
xchg
sahf
lock
mov
jno
movsb
into
aas
mov
lods
out
mov
cmp
clc
sti
hlt
push
xchg
cmp
jg
daa
mov
adc
es
loope
cmpsl
jne
push
jbe
loopne
xchg
dec
push
lods
sti
dec
xchg
fcompl
sbb
fbld
mov
push
sbb
sbb
xchg
les
js
xor
jne
xor
xchg
lcall
pop
mov
add
leave
cmc
xchg
inc
jb
outsl
paddw
flds
inc
dec
xor
cmp
sarb
push
push
sbb
adc
or
loope
arpl
scas
sub
test
or
add
cwtl
pop
push
xchg
sbb
push
jg
ja
cmpb
mov
add
out
sbb
or
cmp
push
filds
mov
and
sbb
loopne
sar
push
sti
xlat
insl
push
inc
mov
push
lret
dec
adc
mov
xor
xchg
add
xorl
sbb
mov
inc
leave
adc
cmp
sub
mov
dec
cmpsb
sbb
dec
lea
clc
fwait
or
ja
and
stos
in
mov
inc
testb
and
sbb
and
icebp
mov
loop
arpl
lahf
push
iret
mov
fcmovb
fnsave
mov
jmp
push
insb
xchg
dec
pop
imul
mov
fwait
mov
cli
pop
mov
dec
fsubs
xor
clc
rcrb
decb
test
sbb
lcall
loope
pushw
jns
es
adc
cli
mov
push
cmpsl
loope
lcall
cmp
or
jl
jle
and
dec
add
lock
xchg
test
test
std
loopne
sub
jle
mov
sbb
sarb
mov
das
pop
jl
aad
pop
xchg
or
xor
imul
repnz
cld
test
push
xlat
mov
ljmp
dec
aas
out
push
inc
lret
cmpsl
pop
test
mov
sub
jecxz
inc
out
call
jae
fldcw
xchg
ds
push
pop
mov
aaa
inc
insb
test
jb
mov
inc
icebp
or
mov
ror
aas
js
push
inc
sahf
jle
vxorpd
or
arpl
jnp
fnstcw
push
popf
mov
outsl
imul
dec
jl
pop
jo
sbb
xchg
sub
mov
mov
fistps
fxam
addr16
movsl
hlt
mov
cli
jmp
aaa
jns
mov
add
lock
jl
popa
mov
ret
push
out
mov
je
jne
dec
insl
cmp
mov
pop
inc
add
sbb
jle
pop
cmp
std
pop
jb
xor
scas
insb
push
and
lea
imul
adc
jo
lahf
fistpl
fists
xor
sub
cmp
data16
mov
pop
push
ja
xchg
jo
in
lods
popa
add
dec
stos
dec
add
push
pop
jp
jo
and
jle
add
les
mov
adc
mov
cmp
and
aas
or
pop
ja
sahf
fcomp
test
pop
push
idivb
mov
dec
xor
sarl
xor
jb
decb
xchg
and
pop
mov
test
adcb
pop
test
xchg
loope
mov
subb
popf
mov
and
hlt
push
pop
lret
pop
jae
jns
mov
jecxz
mov
cs
imul
push
or
adc
in
nop
xor
js
dec
add
xor
daa
addr16
jno
mov
lods
jge
dec
add
ss
into
jp
sub
loop
inc
push
popa
or
inc
push
sahf
push
rcrl
test
dec
in
fmulp
jo
xchg
cli
pop
mov
sarb
xchg
xlat
xchg
cmp
adc
mov
hlt
int3
pop
ja
inc
pop
xchg
or
cmp
cmpsb
push
cmpsb
cmp
and
es
mov
adc
mov
sub
jne
cmc
adc
scas
bound
shll
test
das
and
ret
jnp
pop
int
out
pop
lret
out
add
loopne
sti
test
dec
add
repz
sub
jmp
mov
pusha
loope
stos
dec
or
idivb
mov
lods
daa
jl
out
inc
pop
jle
je
cltd
test
sub
pop
xorb
in
imul
insl
jb
xor
xchg
or
lds
cmc
jae
adc
popa
scas
xchg
sahf
fdivl
or
inc
loop
fs
repnz
dec
mov
iret
lods
adcl
adc
addr16
inc
jne
cld
outsb
inc
dec
fisubl
imul
test
notl
arpl
adc
add
insl
shll
fnstcw
rol
in
insl
jo
inc
insl
leave
lret
push
hlt
cmp
cwtl
pop
stos
push
pop
sbb
fisubrl
push
inc
mov
repnz
xor
leave
popf
push
push
mov
xor
lret
hlt
cli
arpl
mov
pop
mov
in
pop
es
out
adc
das
and
adc
iret
jne
mov
js
fists
pop
adcb
jge
arpl
in
push
jae
lods
call
decl
stos
insl
fwait
movaps
push
scas
jmp
mov
inc
cmpsl
arpl
sarl
adc
and
push
add
shll
jge
les
stos
sub
inc
jae,pn
stos
flds
cli
out
push
push
mov
shlb
fistpl
jge
push
rcrl
jge
es
push
mov
push
cltd
push
jns
loopne
sbb
dec
cltd
push
data16
cld
test
mov
test
jl
ljmp
fdivr
or
addr16
dec
dec
iret
pushf
aaa
mov
mov
fwait
lds
fxam
icebp
insb
std
xorb
push
aad
sar
pop
or
mov
outsb
mov
scas
aas
test
cmp
jecxz
cmpsl
shlb
xlat
xchg
xor
mov
fcomps
lret
and
push
xchg
cmpsl
scas
ds
add
mov
iret
aaa
sbb
sbb
pop
ljmp
enter
fcoms
mov
popa
pop
push
push
leave
sbb
xor
out
mov
lret
lock
push
mov
mov
xor
fidivs
mov
sub
shll
ds
xchg
jl
dec
and
lcall
stos
lock
add
xor
inc
and
das
test
xchg
mov
rolb
icebp
pop
mov
insb
cld
cld
add
fcmovnu
push
push
inc
adc
push
pop
pop
adc
sbb
loop
adcl
and
xchg
imul
divb
xchg
mov
dec
sub
ljmp
dec
fwait
push
push
lock
xchg
or
lahf
sbb
push
jmp
enter
loop
dec
das
jg
pop
adc
das
jb
adc
add
mov
shl
outsb
es
cltd
int3
popa
je
out
adc
sarl
mov
and
dec
or
adc
out
mov
insl
lock
ds
fisttpll
ss
sbb
loop
dec
sti
pop
cmpb
aas
xchg
icebp
and
jo
sub
sbb
dec
fsts
clc
imul
mov
jae
mov
gs
xor
sbb
fidivs
lcall
jo
push
push
repz
outsb
ret
inc
mov
jp
out
push
loop
xor
pop
jle
aam
xchg
jle
xchg
pop
dec
jl
clc
sub
into
sub
in
in
mov
scas
les
sbb
push
ds
dec
pusha
mov
stc
fldcw
lock
mov
lods
xchg
stos
lret
ret
shll
sub
lea
xor
pop
fmull
sbb
inc
push
enter
push
ljmp
imul
fs
xlat
icebp
and
mov
enter
push
push
and
cwtl
shrb
fistpl
ficoms
cwtl
mov
mov
nop
dec
cs
mov
leave
rcll
fisttps
xor
cs
dec
dec
movsl
jecxz
xchg
pop
incb
xor
lods
and
mov
and
xor
sub
dec
xor
mov
adcl
and
push
popf
push
imul
add
aas
outsl
popf
ret
sbb
sbb
js
sbb
mov
mov
or
push
xchg
std
fcompl
dec
mov
lcall
ficomps
fdivr
pop
cmp
xor
rcrl
out
scas
add
pop
icebp
dec
sbb
pushf
vmovapd
jle
xor
xor
popf
cmp
cmp
cmpsb
lret
mov
jb
mov
rcrb
cmp
inc
jge
mov
data16
mov
popa
dec
outsb
xchg
psubb
fisubs
push
movsb
in
sub
mov
mov
data16
in
sub
mov
add
popa
jnp
repz
xchg
std
sbb
cmp
cld
inc
mov
jo
adc
adc
mov
pop
jae
subb
or
mov
cmp
jno
lods
and
js
mov
mov
sbb
xor
xchg
mov
adc
push
xchg
adc
add
sbb
in
fwait
add
loope
dec
sub
adc
outsl
inc
cmpsl
and
inc
pop
addr16
sub
repz
pushf
jno
lea
lret
mov
fistl
ret
mov
daa
imul
outsl
mov
xor
sarb
xchg
jns
mov
pop
adc
dec
xor
jbe
ss
shll
das
or
call
roll
cmp
adc
psrad
mov
aam
pushf
push
leave
mov
jae
arpl
add
cltd
lcall
inc
movsl
test
je
push
bound
jns
dec
sti
rcll
dec
jo
mov
add
xchg
cmp
mov
pop
xlat
fisubrl
testb
in
sbb
cli
add
mov
lret
lock
xchg
jle
pop
adc
cmp
or
xchg
mov
shll
or
add
mov
mov
push
jl
adc
cwtl
dec
cmpsb
sbb
pop
jns
loopne
lods
insb
pop
test
cmc
push
mov
pop
insb
scas
mov
dec
mov
inc
repnz
adc
subl
push
and
sbb
push
call
cmpl
cmp
add
pop
xor
scas
mov
repnz
adc
inc
xchg
sbb
inc
inc
inc
sbb
lcall
jg
mov
cld
scas
adc
jle
arpl
int
lods
jge
mov
mov
cli
fcmovu
loop
cld
mov
and
pop
loop
push
loop
and
cmp
and
mov
dec
mov
cmc
jmp
cmc
iret
mov
xor
push
adc
repnz
push
aas
adc
outsb
std
mov
xlat
repnz
or
pop
push
mov
xor
mov
xchg
jmp
fistps
push
xor
cmp
sub
cli
or
dec
and
rclb
xchg
or
repnz
xchg
and
cmp
xchg
into
ds
lcall
mov
stos
lret
adc
dec
aas
push
shlb
sub
fidivrs
sub
mov
mov
imul
daa
das
pop
test
out
mov
hlt
cmp
stc
scas
fwait
add
xchg
lock
and
jle
ret
sbb
and
inc
orl
ds
xor
sbbb
insb
or
jl
adc
adc
ds
insb
lcall
push
jecxz
loope
or
out
movsl
pusha
xor
cwtl
out
into
dec
add
int
int3
ss
stc
pmulhuw
xor
rcr
lea
decb
and
sbbb
push
mov
push
inc
mov
popa
cmp
mov
rcrl
inc
das
mov
arpl
or
mov
mov
sub
pop
add
scas
inc
and
lock
cmp
stos
jp
adc
cmpsl
scas
xor
or
ret
nop
pop
pop
lret
out
pop
inc
adc
pop
es
int3
cs
int
mov
loopne
std
int
dec
iret
dec
out
dec
mov
sub
popa
pop
pusha
setb
xchg
cmp
adc
test
ljmp
cld
jne
mov
pop
jge
ret
adc
rorl
fdivl
pop
test
jl
test
das
pop
imul
cmpl
jne
mov
push
int3
xlat
pop
out
popf
add
jl
andb
mov
sbb
shlb
cmc
dec
mov
fs
arpl
push
mov
mov
jno
sbb
je
movsb
aas
fisubl
movsl
mov
subb
pop
addr16
imul
jecxz
in
popf
popf
jl
arpl
fs
rclb
mov
push
lahf
and
jmp
mov
push
push
sub
inc
sub
pop
out
sbb
add
add
push
movsl
add
xor
or
dec
imul
xor
mov
inc
and
inc
outsb
jp
mov
push
xchg
loope
loop
loope
insb
test
ret
or
sbb
loope
inc
jp
out
xchg
push
xor
stc
in
popa
inc
xlat
jno
or
aaa
data16
mov
mov
ficoms
aaa
call
push
testl
fwait
into
iret
mov
adc
fnstcw
sahf
ss
in
outsl
jae
ret
jp
cmp
cmp
and
in
adc
sbb
xor
xor
push
or
sbbb
aam
adc
pop
xor
xchg
cmpsb
mov
pop
xor
dec
mov
sbb
mov
pop
rol
pop
loopne
xchg
test
fmull
sub
into
pusha
push
in
pusha
mov
lea
arpl
pop
jnp
inc
int
nop
inc
jmp
bound
movsl
jae
jp
pop
clc
stc
push
mov
mov
cmp
shlb
lds
xchg
jne
in
ret
addr16
jne
jl
jb
arpl
popa
jns
lcall
imul
jno
inc
push
jbe
iret
sbb
dec
js
lods
and
inc
movl
or
jmp
add
fnstsw
nop
mov
insl
inc
xchg
dec
scas
add
call
loope
es
mov
sub
fstpt
repnz
xor
rcl
imull
add
pop
scas
std
sti
stos
sbbb
mov
add
aad
xchg
inc
fnsave
mov
dec
movsl
loopne
lcall
add
aaa
jne
es
cmp
testl
xchg
xchg
subl
fistpll
mov
leave
mov
repnz
jne
in
in
push
adc
jp
xchg
dec
mov
in
scas
push
enter
hlt
add
mov
icebp
iret
xor
or
lea
fisubrl
push
or
enter
mov
inc
inc
push
les
out
push
int
dec
aad
imul
xor
lock
je
rcl
loopne
repz
sahf
inc
mov
xor
lds
in
ljmp
mov
addb
jne
add
lods
or
push
jge
mov
xor
out
xchg
adc
mov
fwait
out
push
call
xor
jle
push
or
jbe
add
movsl
adc
dec
jno
xchg
add
lret
lahf
ficompl
mov
mov
std
mov
inc
movb
pop
fbld
sahf
ficomps
and
xchg
and
cltd
push
int
fisttpl
orl
insl
je
dec
push
gs
lea
and
bound
xlat
mov
cmp
adc
push
cmp
cmp
dec
sbb
jg
or
dec
xchg
mov
dec
es
add
sub
int
dec
inc
jmp
mov
or
adc
out
fmuls
dec
add
add
jge
mov
mov
iret
push
insl
jno
mov
push
aad
rolb
pop
lret
fsqrt
sub
mov
out
mov
out
inc
mov
hlt
out
adc
sbb
jno,pn
lea
push
mov
xchg
insl
pop
push
pop
push
loope
push
push
insb
xchg
in
ret
and
cli
jbe
jle
inc
mov
imul
out
mov
sub
das
loope
in
idivb
outsl
loop
nop
dec
xchg
in
push
sbb
repz
and
and
ljmp
arpl
sbb
pop
lock
xchg
neg
add
out
xlat
in
push
adc
xor
lock
add
pop
mov
cmp
nop
dec
sbb
push
mov
push
sub
lods
shrb
sub
mov
xchg
outsb
mov
sbb
sbb
or
lret
mov
sub
js
mov
imul
out
inc
jae
pusha
lcall
mov
lods
lcall
cmp
rcr
or
mov
and
test
leave
js
xchg
sub
xchg
mov
or
fiaddl
stc
and
cmp
scas
xchg
or
cmpsb
pop
xor
mov
addb
insb
mov
ds
dec
add
jbe
mov
out
jo
clc
inc
inc
in
fldenv
cwtl
sbb
scas
mov
subl
pop
mov
lcall
xchg
dec
test
es
xor
ljmp
mov
test
mov
sbb
ret
std
adc
mov
jno
pop
fstpl
repnz
orl
not
push
arpl
mov
cmp
pop
pusha
xor
mov
nop
cmp
pop
notl
or
pop
xchg
dec
popa
cmpsl
inc
pushl
jp
push
mov
dec
jno
dec
push
out
test
xor
les
mov
enter
repnz
xor
adc
or
shrl
or
sub
insl
dec
in
push
popa
cmpsb
adc
dec
pop
cmp
out
inc
xchg
mov
scas
push
scas
repz
rcrb
mov
shll
les
inc
cld
out
repnz
mov
out
sbb
es
out
cld
out
test
mov
xor
mov
push
push
test
popf
std
sub
push
ss
mov
push
decl
sti
mov
cmp
rcrb
pop
shl
and
jno
sbb
inc
push
xor
xor
cmc
ljmp
jge
cmc
xor
out
ss
mov
rcll
pop
add
cli
add
icebp
lods
dec
cltd
mov
or
add
and
fnstsw
das
popf
jae
mov
or
pop
xor
adc
cs
pop
and
jge
cwtl
movsb
mov
jb
pop
stos
cmp
test
loopne
rcrb
adc
repz
pop
into
xchg
clc
dec
xchg
int
outsl
jnp
movsb
inc
clc
jl
aam
jmp
or
lock
xor
or
cmpsb
pop
xchg
test
push
jg
addr16
xorl
dec
mov
bound
xor
das
adc
or
dec
jmp
or
cmp
jnp
mov
loope
cmp
adc
int
iret
mov
add
or
jmp
sub
pop
dec
movsb
pop
orl
popf
push
xor
adc
loope
xchg
jmp
lret
notb
and
and
out
subl
xor
xchg
push
jb
adc
sbb
xor
gs
xorb
lods
push
pushf
xchg
test
lods
sbb
fistpll
ficomps
jle
lahf
outsb
pop
nop
adc
lods
ror
xor
std
iret
jbe
cs
sbb
std
sbb
push
pusha
dec
push
addr16
sbb
mov
aad
loope
pop
sbb
dec
mov
in
aam
insl
adc
mov
inc
imul
dec
fbstp
adc
pop
sub
idiv
fcompl
sub
clc
cmpl
xchg
fstl
ss
xlat
js
shrb
jle
add
scas
jg
stc
xchg
mov
int
or
daa
mov
rorl
sub
std
mov
hlt
sbbb
mov
test
cwtl
dec
out
aas
mov
adcl
cli
xor
lods
add
lret
sbb
and
add
push
mov
or
pop
in
mov
jnp
add
add
lret
ret
or
orl
stos
push
repnz
int
fcomps
jmp
shll
mov
lds
sbb
inc
loope
sub
ds
sub
sbb
mov
cmpsb
repz
pop
paddsb
lahf
hlt
xchg
pop
cmp
stos
xchg
and
mov
in
jb
jp
inc
pop
xor
icebp
inc
mov
gs
verr
ss
jmp
push
add
xchg
gs
push
addr16
push
out
les
pop
in
aad
jo
shlb
int
in
fadds
jne
or
push
add
xor
imul
pop
imul
jle
push
fbstp
cmp
sbb
inc
ja
and
call
xor
je
lock
add
and
mov
inc
cmp
inc
rcll
xchg
scas
in
sbb
xor
and
ret
adc
repz
cmp
enter
test
dec
mov
jbe
test
or
dec
in
pop
out
push
int
dec
lock
scas
push
push
pop
icebp
sbb
aam
xchg
fmul
pusha
dec
sbb
add
mov
adc
and
mov
mov
lock
bound
cmpl
loop
cmp
int
pop
nop
cmp
sub
outsb
int
aam
add
sub
xchg
mov
in
int
push
leave
mov
mov
and
aam
subb
or
adc
mov
pop
add
jbe
test
add
sbbb
or
or
xchg
aas
pop
pusha
mov
jae
push
jnp
jnp
and
fists
or
push
es
cs
lcall
je
imul
fiaddl
int3
jae
sbbb
fidivl
sub
test
mov
icebp
inc
gs
popf
xor
jbe
lods
and
push
or
adc
pop
cld
mov
push
sub
mov
daa
push
sbb
out
xchg
pop
fdivs
rolb
xchg
ret
je
icebp
sarl
ret
hlt
ja
arpl
pop
aaa
sti
rcll
sub
stos
or
sbb
mov
sti
mov
or
imul
sbb
sub
aad
rcrl
repz
fildl
jb
and
rcrl
push
push
enter
ret
scas
js
sbb
aas
add
sbb
jg
push
dec
sbb
ljmp
push
mov
ss
ficomps
cwtl
jle
daa
into
inc
les
clc
sahf
xchg
fsts
fwait
sbb
mov
pop
testl
cli
pop
gs
cld
pop
cwtl
div
mov
push
test
pushf
dec
sub
inc
xchg
inc
bound
cmpl
arpl
add
inc
gs
sub
pop
mov
je
ret
call
push
aas
mov
jo
or
xchg
repnz
push
pop
mov
push
mov
popf
loopne
ja
adc
out
in
incb
push
test
push
outsb
rclw
sub
adc
mov
push
repnz
sub
jbe
jle
repz
enter
rclb
and
add
adc
mov
testb
jge
dec
enter
mov
mov
out
sbbl
jecxz
ror
lods
push
pop
sbb
xchg
xor
clc
pop
andb
insl
imul
aad
gs
hlt
movsb
into
sarl
rorl
inc
mov
or
test
imul
lcall
cmp
clc
jns
out
adc
xor
add
icebp
pop
and
xlat
lds
hlt
adc
sbb
sub
push
lea
repnz
lods
test
xor
cltd
outsl
adc
hlt
sub
outsl
fcoms
pop
push
ret
push
xor
or
dec
lret
or
cli
cmp
fnsave
in
and
mov
jecxz
daa
rorb
jo
mov
test
pop
xor
fstps
sbb
out
mov
ljmp
daa
cmp
dec
inc
test
movq
pop
adc
out
addr16
push
mov
jge
jnp
stc
mov
inc
mov
push
jmp
mov
addr16
pop
adc
pushf
xchg
aaa
es
mov
or
seto
enter
mov
adc
xor
rcrb
dec
jge
or
or
dec
in
mov
cli
push
scas
lods
aas
int
sbb
jecxz
iret
pop
xor
lods
dec
mov
popa
add
icebp
lcall
fstps
das
subb
and
lea
inc
outsb
jne
add
mov
fdiv
rcll
cmp
mov
test
aad
dec
scas
push
lret
xor
and
stc
and
enter
lods
ds
push
add
mov
adc
subb
bound
xchg
idivb
pushfw
adc
fs
stc
loope
jl
stos
outsl
mov
test
xchg
sbb
cmp
mov
iret
addb
shrb
addl
push
test
dec
faddl
xchg
mov
or
cwtl
mov
ja
inc
outsb
push
scas
pop
jo
inc
ret
mov
out
test
scas
push
inc
fcmovne
and
insl
jle
mov
cmpsl
or
stc
push
lds
adc
or
btr
jne
nop
pop
imul
ret
add
cmp
pop
pop
add
lret
sbb
xor
dec
jb
orb
cmc
xchg
mov
fsubrl
les
out
fisttpl
xchg
inc
inc
adc
xor
das
pop
mov
pushf
fs
shlb
in
jb
cltd
mov
movsl
lahf
mov
sub
dec
rorb
mov
cmpl
inc
and
repz
jecxz
nop
je
push
push
ret
add
pop
mov
pushf
dec
push
test
adc
loopne
cld
inc
dec
jno
test
cmpsb
xchg
sti
sub
mov
sub
mov
pushf
jo
test
in
fs
pop
or
in
dec
jecxz
mov
xor
or
cli
jl
adc
lahf
cmpsb
cmp
push
test
cmpsb
xchg
in
pushf
and
push
test
pop
cmp
push
push
dec
jp
dec
inc
gs
cmp
pushf
mov
rcrb
aam
shlb
ss
mov
xchg
push
adc
negl
das
popf
adc
out
xor
ss
inc
dec
jp
and
in
push
mov
lock
sub
xchg
scas
jno
lock
test
push
jge
pop
adc
pop
dec
sti
pop
mov
mov
cli
scas
xor
sub
mov
jae
inc
imul
push
lods
mov
cli
fcoms
push
shrl
xor
es
je
push
mov
inc
adc
andl
jp
gs
sub
stos
test
andl
cmp
pop
pop
push
cwtl
orl
sbb
lods
fs
popf
sub
push
in
mov
ret
xchg
lods
lahf
sti
dec
pop
iret
push
scas
mov
xchg
dec
sbb
ret
fisttpl
aas
rcrl
sahf
faddl
je
xor
xchg
sub
mov
enter
xlat
incb
loop
cmp
test
inc
mov
xchg
xchg
imull
out
aam
pop
aam
push
adc
mov
sbb
sub
add
xor
mov
push
ds
sbb
sub
push
ret
or
cli
fs
mov
jg
jge,pt
inc
jge
outsb
repz
or
cmp
jmp
mov
rcrb
mov
push
inc
or
add
arpl
xor
mov
testb
or
cmpsb
loopne
mov
imul
std
test
sub
popl
ss
gs
pop
les
leave
test
cmp
jbe
mov
jne
add
test
rolb
stc
cmp
add
into
xor
mov
je
rcrb
out
jo
rorb
add
add
mov
inc
cmp
fdivr
test
aas
xchg
in
fst
int
pop
gs
mov
dec
inc
nop
and
cmpsb
cmp
in
repnz
jp
out
out
sub
xor
stc
adc
add
fdivs
sbb
outsl
sti
insb
add
mov
sub
rcrl
nop
mov
add
xor
mov
jmp
pop
or
push
sub
jl
pop
xchg
into
sbb
mov
push
repnz
or
jl
jno
outsl
xlat
sahf
lds
call
data16
loope
mov
lock
cwtl
pop
dec
sub
stos
mov
das
jo
push
hlt
aad
ja
mov
mov
jo
jno
mov
movsl
push
pop
mov
cs
stos
icebp
mov
imul
repnz
add
sbbl
jnp
movsb
sbb
adc
cltd
dec
loopne
xor
je
xor
or
arpl
mov
jl
inc
add
out
lea
mov
mov
pop
les
push
cwtl
cmpsl
pop
sbb
dec
pop
loop
cmp
inc
roll
or
ret
movsl
sub
data16
in
sti
jmp
jns
fimuls
jmp
sub
test
sahf
test
sbb
enter
imul
mov
mov
and
popl
negb
adc
push
xorl
sub
int
cli
frstor
mov
cmpb
xchg
arpl
jecxz
cmp
insl
sub
push
out
out
jb
decl
cld
inc
jne
and
sub
out
stc
mov
shlb
mov
fisttpl
mov
pop
aaa
movnti
aad
stos
loop
int3
seta
push
cmp
insb
xchg
repz
cmp
pop
or
shll
push
js
xchg
out
stc
sbb
dec
inc
js
sti
push
xor
xor
xchg
mov
jo
daa
test
push
enter
in
out
in
std
and
sub
and
test
popa
incl
pop
jg
rcl
in
cmpsb
xor
adc
pushl
dec
add
push
int3
stos
fdivl
xor
pop
call
shlb
out
mov
add
xchg
mov
mov
dec
or
fiadds
sbb
lock
dec
sahf
cltd
inc
or
inc
pop
fsubl
cmp
jmp
aaa
or
jle
scas
loopne
mov
into
lahf
and
push
pusha
call
fldcw
std
mov
inc
xor
adc
cmp
rorl
sub
cmpb
jae
das
fcmovb
lds
pushf
jg
dec
mov
mov
aad
xchg
les
addl
lods
jp
fstp
into
push
test
roll
dec
push
jae
cwtl
das
fmulp
rolb
shlb
or
cltd
loop
xchg
add
push
push
outsb
and
or
in
fucomip
cmp
add
pop
and
xor
xlat
out
inc
test
movsb
bts
add
mov
adc
aas
mov
lcall
pusha
aad
rcl
and
in
add
pop
sti
test
fcmovne
outsb
inc
test
js
mov
push
and
dec
push
fnstsw
repz
mov
std
sub
stos
cld
stos
sbb
mov
jbe
movsl
ds
shl
sub
sub
sbb
cmp
xchg
insl
and
ja
test
cmc
add
dec
lret
xor
repnz
idivb
das
movsl
lret
clc
cmc
or
or
stos
add
dec
jecxz
sub
and
in
push
push
adc
jno
pusha
mov
inc
xorb
and
clc
push
lret
sbb
fsubs
mov
inc
xchg
mov
jb
mov
or
mov
xchg
pusha
xchg
xor
and
adc
movsb
fwait
inc
ss
adc
jae
gs
sbb
dec
aad
decb
push
dec
xor
ret
cltd
lea
pop
int
ljmp
aaa
and
cmp
lcall
cwtl
push
insb
in
xorb
lcall
sbb
cwtl
xor
pop
dec
adc
sub
dec
push
inc
jmp
int3
pop
cmp
mov
ret
imul
jl
jns
mov
mov
adc
add
test
jmp
pop
add
inc
adc
sbb
xchg
lcall
popa
jne
jns
es
loop
clc
pop
aaa
push
in
and
jnp
fisubrs
hlt
ja
cld
les
sahf
fistpl
cwtl
fiaddl
mov
pop
addr16
cmc
ss
test
mov
sbb
inc
fs
jle
adc
dec
pop
outsl
jle
stos
loop
xchg
ljmp
js
adc
or
pop
std
xor
ds
dec
icebp
stos
pop
aad
mov
xorb
mov
push
cmpsl
in
dec
aaa
cmp
xor
jae
xchg
cmp
das
and
mov
jb
sub
lcall
sbb
testl
or
cmpsl
xor
or
cmpsl
dec
pop
into
loop
test
jg
sub
add
xlat
adc
mov
pop
loopne
cmp
subl
xor
test
out
test
sbbb
xor
add
sub
divl
cmp
push
aas
fimuls
test
sar
jae
fsubrl
inc
add
push
dec
stc
aad
ret
adc
jp
and
repz
mov
mov
out
adc
inc
addl
cltd
loope
dec
mov
lods
stos
dec
enter
adc
jbe
das
xchg
mov
xchg
push
xchg
jge
xchg
mov
xchg
jne
mov
cwtl
pop
cli
mov
bound
lds
das
push
dec
pop
pop
mov
fstcw
dec
insl
sub
push
cmp
mov
or
push
fisttpl
jbe
add
lret
call
and
xchg
jle
fs
insl
fsubs
push
jnp
mov
inc
pusha
ficomps
adc
cmpsl
push
sti
cmpsl
sub
xor
movsb
dec
andb
cld
sbb
loopne
popf
iret
std
scas
cmc
inc
inc
lock
mov
jp
ss
mull
fwait
dec
movsb
mov
js
idivl
cmp
test
ljmp
or
push
into
jg
insl
add
inc
in
scas
dec
push
mov
cltd
sahf
stc
pop
out
cwtl
sahf
sti
aaa
xchg
aaa
sbbl
andb
out
sbb
mov
icebp
int
jns
repnz
dec
out
cli
mov
mov
pop
lock
popf
cmp
insl
scas
int
loopne
cmp
mov
test
sahf
adc
test
sbb
cmpsb
push
sub
in
cld
and
and
jge
leave
call
pusha
mov
ret
mov
xor
call
fmul
sahf
cmpsb
outsl
mov
pop
ja
xchg
dec
fs
mov
jne
adc
ficomps
xor
stos
xor
call
cld
and
cmp
xchg
lods
into
pushf
jb
inc
in
jae
les
in
ja
outsl
inc
inc
pop
xchg
or
sbb
inc
add
outsl
xor
repz
shl
mov
jl
push
stc
xchg
add
jo
insb
lcall
mov
rcll
scas
mov
clc
ljmp
hlt
sub
aaa
ss
dec
int3
xchg
jbe
gs
mov
xor
dec
outsb
out
push
fdiv
rorl
mov
push
inc
ret
xor
mov
subb
sahf
and
test
mov
in
int3
in
js
out
push
push
mov
lods
in
mov
out
je
sbb
sbb
add
push
pop
mov
inc
adcb
xchg
jg
aaa
icebp
push
out
scas
cmpsl
push
mov
inc
std
out
push
inc
bound
xchg
das
mov
xchg
fs
add
pop
add
mov
sbb
mov
adc
mov
lahf
repnz
push
jge
mov
jo
test
adc
adc
lret
lea
xchg
call
stos
fs
repnz
push
mov
insl
xchg
or
jno
mov
fwait
test
and
subb
fs
inc
jp
mov
jge
rol
xchg
out
aaa
cwtl
dec
sub
or
or
or
pop
inc
in
ret
call
pop
inc
mov
fstpl
fucom
mov
mov
lods
lahf
out
pop
ljmp
shrl
arpl
and
mov
loop
push
pop
mov
dec
fisubrl
add
pushf
mov
rorl
cld
push
inc
sub
jo
int
xchg
push
jg
outsl
idivl
jp
jne
cmc
or
test
jb
in
jg
stc
insb
sbb
jnp
lret
add
mov
xorb
mov
test
nop
dec
andb
movsl
ret
gs
inc
aas
dec
fnstsw
push
nop
ja
and
je
daa
add
jno
outsl
cmc
push
pushw
aas
pop
out
imul
sbb
push
push
jge
aaa
out
fnsave
sub
mov
inc
pop
xchg
cmp
cmc
psllw
pushf
or
shld
das
into
xor
cs
mov
arpl
aam
xchg
scas
fldpi
rcrb
repnz
pop
jmp
scas
or
ds
imul
pushf
cmp
cmp
mov
and
push
insb
pusha
lods
daa
add
push
ljmp
in
pop
cs
mov
inc
add
pop
lods
das
adc
icebp
repnz
pop
adc
outsl
subb
fsubrl
jae
mov
or
imul
ret
jnp
dec
leave
adc
data16
inc
movsl
imul
push
cmp
gs
push
mov
cltd
rclb
mov
les
mov
popf
mov
les
lods
cwtl
iret
jbe
sub
lods
push
pushf
sub
inc
mov
mov
fdivrs
mov
mov
push
xchg
ds
aad
pop
ret
int3
add
andl
fildl
sahf
sub
sarb
xchg
xchg
mov
xchg
fcoml
test
inc
or
das
in
inc
lcall
ss
push
out
jp
out
jmp
adc
repz
std
xchg
dec
cmp
push
mov
or
inc
or
xchg
cmpsl
out
cwtl
mov
push
jbe
fisubl
icebp
dec
in
xchg
sahf
push
dec
add
cli
xchg
hlt
popa
lods
scas
mov
xor
pusha
pop
dec
jl
inc
loop
loop
dec
fucomip
push
ds
pop
mov
push
pop
xchg
mov
imul
faddl
dec
cwtl
cmc
sbb
imul
test
out
lods
outsb
notl
dec
dec
aad
mov
lret
lret
inc
add
xchg
or
jmp
mov
adc
mov
push
popa
and
fwait
ret
cmp
jg
fildl
fwait
xor
mov
test
jo
cmp
cmpsl
jle
test
pop
mov
push
or
jp
xchg
in
aad
dec
lcall
or
pop
cmp
push
sbb
pop
and
cmp
movsb
or
inc
cmpsl
and
adcl
cmpb
xor
imul
pop
inc
jge
mov
push
jmp
xor
gs
mov
xchg
push
pop
jno
jo
outsb
mov
pop
mov
repnz
xor
aas
jmp
adcl
push
cld
les
push
push
sarl
loopne
test
sbb
xchg
mov
es
shrb
mov
xor
pop
xchg
and
dec
xor
sub
mov
xor
aam
ret
imul
inc
jne
jnp
in
inc
push
dec
dec
ss
jnp
sbb
arpl
decl
add
dec
ljmp
mov
pop
dec
jecxz
in
mulb
add
lahf
and
adc
bound
sbb
inc
add
xorl
sbb
or
enter
mov
push
rclb
dec
arpl
negl
cmp
js
imul
push
sbb
ret
xchg
jns
cli
pop
cmp
and
xor
scas
sub
or
dec
add
testb
or
test
jp
xlat
hlt
mov
ret
mov
arpl
push
push
adc
sbb
mov
or
arpl
mov
cs
xor
stos
sub
mov
mull
push
adc
lods
test
cmp
add
push
movl
dec
push
out
fimull
inc
outsl
mov
enter
jl
or
test
jp
imul
sub
lcall
imul
adc
xchg
fsts
iret
jne
cmp
jl
cmpl
and
inc
sbb
lds
sbb
pop
push
lret
js
xor
ja
mov
cli
call
popl
push
push
add
fidivrs
mov
add
mov
cmp
pop
pop
fwait
adc
aam
sti
mov
dec
push
jbe
jl
pop
lods
dec
xchg
stos
ret
mov
into
cmp
adc
fs
lods
cltd
lock
push
or
xlat
test
xchg
xchg
jecxz
cs
aam
cmpsl
mov
jecxz
mov
fiadds
dec
in
push
push
mov
pop
push
jo
xchg
mov
push
mov
or
push
es
mov
adc
das
call
negl
jne
or
lds
mov
push
add
repnz
cltd
jp
mov
mov
in
mov
sub
and
arpl
sbb
sarb
fsubrs
jge
sub
loopne
clc
je
adc
push
in
shlb
mov
dec
fisttpl
mov
lods
pop
out
out
shrl
rcrl
ja
popf
mov
inc
cmp
push
je
movsl
jle
sub
xchg
fwait
dec
mov
test
jno
lea
cld
gs
cmp
adc
out
loopne
je
adc
shlb
in
shlb
hlt
push
lcall
add
dec
pop
hlt
dec
lret
lcall
pop
mov
push
daa
cmp
into
mov
cli
stc
add
popf
sbbb
mov
fsub
ret
lods
movsb
cmpsb
adc
cld
mov
adc
or
add
out
or
inc
out
jl
xchg
push
mov
cld
jb
or
cmpsl
pop
adc
mov
mov
ret
or
imul
xchg
fsubl
sbb
dec
std
test
cmp
mulb
push
inc
lods
pop
dec
inc
lods
mov
sahf
imul
dec
sub
sbb
push
sbb
add
rclb
lahf
xor
outsb
mov
and
lfs
cmp
das
adc
lcall
xchg
in
push
imulb
movsb
stc
cli
shlb
dec
and
dec
es
pop
mulb
scas
push
inc
cmpsb
in
sbb
sub
jge
inc
inc
jno
push
cs
ss
inc
mov
push
mov
mov
test
shll
adc
pop
ret
sbb
test
xchg
flds
push
xor
sbb
scas
fwait
les
jecxz
ret
push
out
out
mov
imul
pop
mov
stos
in
mov
clc
and
inc
pop
outsl
inc
cld
cmp
nop
mov
add
ficoml
ror
ljmp
cli
mov
mov
sbb
leave
add
iret
jge
ficoms
xor
sub
mov
ret
jge
aas
push
icebp
sub
jp
push
xor
mov
push
sbb
mov
cmp
mov
jbe
cmp
xchg
mov
into
pushf
stc
or
adc
fwait
popa
loope
mov
jae
adc
xlat
pusha
out
stos
js
adc
ret
adc
loope
test
bound
mov
add
dec
outsb
pop
cmpsl
out
shrl
dec
adc
and
test
xchg
insl
js
cmp
sbb
jg
mov
cltd
shrl
sbb
in
mov
mov
subb
int
test
mov
int
xchg
mov
cmp
rolb
gs
enter
sbb
xor
sub
pushf
sbb
jp
pop
fwait
mov
movsb
adc
mov
negb
cmp
adc
int
sub
mov
pop
in
push
push
mov
in
push
sbb
repz
jns
rclb
sub
cli
pop
insb
lds
jle
shll
std
or
out
mov
xchg
mov
scas
push
mov
inc
xor
sub
je
outsb
adc
je
push
test
add
cmp
and
inc
cmc
sbb
cwtl
adc
xor
sub
call
popa
jns
lods
jecxz
cmp
jne
lock
sbb
mov
add
xor
not
or
pop
push
fdivrl
mov
jg
inc
mul
aaa
sbb
imul
xchg
inc
in
and
sub
cmp
push
and
fists
add
mov
adc
and
pop
adc
push
icebp
sbb
fisubs
xchg
adc
xlat
mov
out
bound
lea
loopne
push
ficomps
ret
stos
insb
andb
xor
dec
adc
fs
push
mov
out
mov
fstl
fwait
ja
push
cmp
clc
add
in
xchg
inc
movsl
std
daa
push
rcll
xor
repz
mov
jno
jg
fs
pop
in
or
or
inc
add
push
lock
push
inc
loop
jae
xchg
das
inc
fdiv
bound
xchg
jmp
jae
mov
jbe
push
cmp
pop
dec
adc
imul
repz
andl
add
sbb
push
and
ss
xor
mov
or
adc
mov
lcall
daa
pop
lcall
dec
sub
faddl
jle
add
push
xchg
push
loopne
fdivrs
push
pop
add
jnp
push
xor
push
fmul
mov
xchg
cli
cmp
xor
inc
testb
inc
int3
sbb
xlat
sti
push
lds
addr16
pop
adc
adc
mov
aaa
subl
insb
imul
dec
insb
cld
stos
sub
inc
das
sub
rorl
push
fildll
adc
aaa
in
icebp
test
mov
adc
cmp
shlb
inc
push
xlat
fnstsw
cwtl
or
in
ds
rcl
bound
push
jmp
push
jnp
mov
jmp
lcall
push
xor
adc
fcomip
cs
pop
xor
fwait
loope
fidivrs
and
push
add
jmp
pop
dec
push
pushf
pop
fsubrs
es
dec
jo
cltd
ljmp
add
popf
insl
lods
dec
push
stos
lret
xchg
je
mov
lds
dec
xor
and
hlt
lds
add
lds
add
inc
adcl
dec
mov
outsb
jbe
mov
jb
ds
sbb
fcmovb
cmpsl
stos
dec
fidivl
ret
add
mov
scas
jge
fisubrs
mov
fsubrs
push
cli
lret
and
das
sub
mov
mov
mov
icebp
nop
aaa
xor
shrl
loope
sbb
inc
test
leave
add
ljmp
pop
sti
sub
stc
ja
shrl
in
jge
pop
jo
repnz
ds
pusha
jo
mov
loopne
stos
int
adc
pop
jge
mov
push
adcl
sub
mov
cltd
push
mov
sub
jmp
push
push
add
je
jns
out
inc
fwait
dec
add
adc
ja
ja
sub
lods
push
sbb
inc
dec
or
mov
mov
in
mov
mov
icebp
fcoms
idivb
mov
nop
adc
addr16
scas
mov
inc
cmp
call
mov
jne
cmp
sub
pop
insb
push
jmp
andb
shll
std
arpl
add
mov
inc
and
subl
push
mov
imul
test
repz
pop
sub
jne
rcrl
sbb
mov
aad
mov
not
push
pop
outsl
test
push
lods
pop
fcmovbe
aad
pusha
mov
scas
adc
jle
xchg
leavew
and
pop
mov
mov
pop
mov
imul
test
pop
hlt
data16
xor
dec
cmc
mov
and
mov
jae
pop
iret
je
jmp
push
add
das
and
jb
outsb
psrld
bound
invd
mov
jbe
inc
mov
pop
stc
fdivrs
outsl
es
xchg
mov
xor
mov
and
hlt
or
loop
inc
je
adc
inc
sub
inc
sbb
push
aam
dec
cltd
test
mov
add
dec
fcomi
xchg
push
cmp
push
mov
enter
push
mov
dec
mov
loopne
pusha
jae
add
pop
cmpsb
sahf
xor
cmp
cmp
pushf
or
adc
test
push
dec
cmp
push
xchg
fabs
mov
sub
movsb
popf
popa
mov
dec
aas
lock
mov
mov
iret
sahf
out
xlat
pop
xchg
adc
popa
push
dec
xor
sub
push
test
and
mov
xor
xlat
pusha
jge
xchg
jne
push
sbb
dec
mov
cmpsl
test
icebp
insb
addb
jecxz
xchg
push
and
jnp,pn
sbb
outsb
sbb
push
lods
cltd
in
mov
aaa
adcb
insl
cmp
mov
jle
testl
pop
lods
outsb
or
mov
xchg
xor
jle
jnp
sbb
xor
ljmp
xchg
addr16
cmpsb
sub
popa
jle
leave
fsubrs
pop
xchg
loope
mov
cmp
imul
push
or
add
jp
jmp
cmc
aaa
xchg
adc
jp
mov
xchg
in
pop
cmpsb
xchg
push
leave
in
add
push
loope
cmp
in
cmp
mov
arpl
lahf
adc
dec
sbb
sub
cmc
nop
mov
xor
push
sti
daa
and
shlb
jg
gs
imul
dec
dec
enter
repz
nop
mov
push
fsubrp
pop
into
push
dec
push
into
cmp
daa
jmp
sub
xchg
scas
mov
push
dec
xor
imul
mov
lea
dec
mov
dec
test
ret
lds
jno
jmp
pop
int3
sbb
imull
xor
inc
push
lods
shl
in
enter
sbb
mov
or
adc
pop
mov
movsb
cmp
dec
bound
push
out
mov
sub
filds
push
push
mov
data16
loop
mov
xchg
aaa
xor
inc
push
incb
mov
and
mov
adcl
sbb
mov
test
inc
xor
test
add
test
out
stos
ret
pop
jge
push
mov
js
pop
mov
jmp
sbb
stos
mov
xchg
dec
andl
ljmp
adc
test
adc
aas
aam
addr16
pop
inc
xchg
stos
movsl
lods
xor
daa
adc
addr16
leave
add
xor
mov
in
push
and
repz
xchg
xchg
test
nop
dec
and
arpl
sbb
xlat
pop
add
cmc
mov
dec
pop
imul
in
mull
or
loope
sub
test
dec
or
shl
into
jmp
fimuls
icebp
and
push
add
push
sub
lret
inc
lods
sti
mov
out
insl
add
fbstp
inc
aas
sub
dec
cli
sub
cmp
aad
shl
pop
inc
dec
dec
nop
mov
insb
gs
fcomp
dec
enter
dec
push
loop
lea
pop
popa
scas
xchg
fs
pop
clc
or
loope
push
ss
inc
dec
dec
insb
iret
stos
lock
adc
stc
adc
xor
repz
adc
mov
jns
inc
jecxz
sahf
in
xchg
mov
ret
sbb
stc
pushf
mov
shlb
cmpsl
call
negb
daa
out
shl
scas
mov
lock
dec
imul
cmp
xor
sub
arpl
fs
sub
sub
lahf
mov
cmp
sub
fisttpl
add
test
out
jp
cmpsb
test
sub
jge
notb
xchg
mov
pop
fimuls
imul
iret
or
les
push
out
gs
inc
adc
imul
jp
sbb
lods
lds
rclb
stos
cld
outsl
test
dec
ss
lahf
scas
js
cmp
ja
add
push
leave
jb
icebp
cmp
incb
adc
lret
shlb
push
add
mov
mov
mov
mov
icebp
out
divl
test
push
les
jl
pop
xchg
scas
mov
outsb
cmp
lds
cs
xorb
rcrl
call
divb
sbb
xor
stc
mov
or
mov
enter
adc
mov
pop
xorps
test
test
push
in
sbb
push
sbb
shll
mov
lahf
fldenv
cmpsb
in
sarl
mov
pop
jecxz
in
data16
pop
inc
adc
xchg
subb
into
push
jb
out
xchg
inc
repz
jae
cmpsb
mov
insb
mulb
dec
inc
push
push
insl
mov
aad
rcll
jg
and
test
out
aaa
sub
popf
push
lcall
lea
cmc
xlat
sub
dec
cmp
aam
test
loope
std
mov
test
xor
cs
insl
lods
inc
movsl
mov
jle
pop
xor
or
dec
movsb
bound
add
mov
popl
ljmp
dec
pop
les
idivl
push
loope
loope
sahf
fcoml
cmp
mov
jl
push
loopne
inc
push
sbb
mov
enter
fld
in
cmp
int
push
mov
and
dec
ret
xchg
test
lret
mov
push
dec
stos
adc
mov
adc
sub
cli
push
lea
cs
dec
adc
lea
test
cli
imul
enter
mov
or
divb
sbb
test
rcll
mov
or
sub
pop
mov
dec
xchg
lret
data16
push
xor
jle
sub
push
test
cmc
out
out
lahf
repz
mov
cmc
push
sahf
popf
and
adc
push
inc
lret
xchg
and
mov
nop
mov
sahf
jno
push
xor
push
lea
sbb
jne
mov
aad
jb
add
icebp
fdivp
in
std
xchg
pop
inc
jg
test
bound
sbb
repz
pop
xchg
fidivs
mov
cmp
mov
rclb
imul
iret
inc
les
std
push
mov
sub
mov
lods
sub
push
sbbb
dec
xchg
jo
arpl
mov
je
jno
sub
push
pop
data16
adc
mov
in
pop
loope
inc
aad
shl
lcall
add
add
push
outsb
sbb
gs
outsl
lret
mov
xor
sbb
mov
in
adcb
push
mov
nop
lea
and
push
cmp
loopne
data16
shlb
inc
jg
xor
and
mov
lock
in
mov
sub
or
hlt
cmp
pop
mov
push
dec
jge
adc
addr16
adc
sub
mov
rorb
mov
test
out
jo
cmpsb
push
mov
ficoms
aad
mov
outsb
cmpsl
loop
dec
out
lock
pop
test
mov
shrl
fnstcw
jne
mov
scas
cmp
dec
mov
push
loope
daa
nop
jl
pop
inc
pop
cld
and
enter
cmp
jnp
sbb
mov
mov
addr16
xchg
dec
shlb
fdivr
repnz
adcb
out
shll
aas
imul
pop
cmp
addr16
dec
iret
js
xchg
add
ljmp
pop
jl
inc
mov
or
sbb
ss
frstor
lret
movsl
xchg
daa
xchg
and
push
sub
sub
adc
mov
mov
call
pop
add
sub
shlb
les
fldt
add
inc
lock
sahf
pop
or
testb
fwait
cmp
dec
loopne
sbb
inc
add
jle
mov
xor
and
pusha
dec
push
cmpl
ss
rclb
out
cli
inc
mov
ficomps
daa
sbb
xchg
push
mov
out
leave
addr16
xchg
add
bnd
sub
ss
test
stos
mov
nop
lods
arpl
enter
movsl
int
push
xchg
lock
xorl
mov
inc
je
mov
cmpsl
out
in
jb
mov
lcall
pop
out
popf
lret
out
xchg
testl
mov
dec
insb
jno
js
incb
sbb
jns
incl
sbb
xor
test
xor
mov
sti
xchg
cltd
xchg
pop
mov
fwait
inc
out
mov
xchg
mov
xlat
adc
or
mov
sub
in
cmp
push
pmulhw
js
cld
push
dec
cwtl
addr16
and
jmp
mov
push
lods
dec
cwtl
fidivs
mov
inc
in
mov
sbb
repz
stos
fldt
inc
movsl
arpl
dec
sahf
pop
and
sti
loop
mov
add
or
or
or
fsubrl
xor
pop
sbb
inc
cmpsb
mov
pop
insl
push
mov
fwait
ds
dec
rolb
rorb
pop
pop
jmp
mov
mov
movsl
out
push
mov
xor
dec
sbb
cmp
stos
xlat
popa
sub
cmp
adc
insb
pop
andb
mov
js
xchg
dec
or
add
cs
or
je
dec
js
and
mov
sbb
adcl
loop
push
add
xchg
lock
lea
sarb
jle
sub
loope
mov
xor
xchg
fdivr
fnstenv
jnp
popf
stos
dec
cld
or
xor
int
fdivrl
xor
iret
dec
scas
push
jno
mov
stc
cltd
push
add
cmp
cli
aaa
fdivp
push
and
pop
in
ja
push
std
movsb
lds
aad
mov
sub
loopne
inc
repz
xchg
in
cwtl
loopne
aad
sub
fmulp
hlt
push
jg
push
pop
jb
sbb
adc
sbb
pop
mov
jl
cmp
in
sarb
add
fistps
or
adc
lret
aam
jle
fadds
movsl
push
mov
pop
js
add
outsb
cmpsb
cmp
mov
pop
xchg
xchg
pop
fdivr
inc
call
int3
movl
xchg
testb
add
mov
jb
or
enter
or
dec
dec
xor
repz
imul
out
rorl
bound
cmpsl
popa
call
mov
cwtl
mov
mov
rorb
jle
dec
shrl
sub
fs
sbb
xor
adc
ljmp
or
insl
mov
imul
fldt
inc
sbb
add
push
fistpl
mov
pop
jle
and
lods
loope
imul
rorb
mov
int
add
daa
shll
iret
inc
jmp
xor
dec
cmpsl
mov
jnp
scas
cmp
jo
cmpsl
dec
stc
ret
dec
dec
push
push
mov
mov
or
aas
dec
adc
outsb
lret
add
imul
std
cld
or
insb
mov
cmpsb
imul
lret
and
push
push
flds
data16
repnz
push
jmp
pop
adc
pop
and
mov
insb
mov
xchg
and
nop
xchg
xchg
push
inc
fwait
aas
push
call
jl
and
lahf
das
inc
dec
cmp
cwtl
xor
adc
int
mov
or
and
adc
push
pop
adc
out
addr16
cmc
jl
jmp
fisubrs
cli
sub
jno
bound
stc
push
mov
outsl
dec
movsb
sar
addr16
xchg
add
std
out
cmpsb
jo
pop
call
and
icebp
mov
push
outsl
into
das
mov
add
and
mov
fdiv
add
jmp
data16
push
adc
je
aaa
fdiv
fimull
aaa
popf
ljmp
inc
push
outsb
pop
sarl
pop
pop
loopne
push
mov
cwtl
mov
push
sti
jmp
insb
and
lcall
push
pop
ret
mov
push
lcall
subb
cs
ljmp
sub
lret
jae
mov
clc
mov
in
hlt
and
adcl
bound
addr16
aaa
xchg
push
push
loop
mov
push
imul
fs
es
and
lcall
xor
push
or
push
enter
jl
or
out
push
mov
jle
popa
cmp
aad
mov
scas
movsl
push
cmp
cmp
mov
in
test
call
dec
insb
xor
sub
sbb
push
xchg
lret
push
mov
and
push
movsb
jmp
and
arpl
cmpsb
fsubl
dec
call
jge
and
jno
push
fcmovnbe
cmp
pop
sbb
and
add
into
aas
es
hlt
jnp
sbb
and
mov
mov
mov
pop
push
mov
ret
mov
loop
xor
mov
push
movsb
out
cmp
mov
std
jecxz
cli
shlb
outsl
xor
sub
je
imul
mov
repnz
sub
mov
pop
push
rorl
add
inc
inc
icebp
dec
rol
inc
sbb
clc
mov
push
mov
mov
cs
dec
mov
mov
rcrl
popf
and
rol
fnstcw
push
jne
or
push
sub
mov
mov
fistpl
shll
ret
adc
inc
andl
or
mov
inc
mov
divb
ja
in
push
and
add
xor
cmp
jle
cmp
das
ljmp
add
test
cmc
testl
lock
lods
jae,pn
pop
test
cmp
add
sub
lds
insl
iret
popf
jecxz
adc
push
fs
sub
mov
imul
aaa
int
adc
ljmp
jns
push
xchg
jo
test
in
sbb
or
add
or
inc
sahf
enter
lds
into
or
jecxz
sub
xlat
movsb
push
in
or
xor
jo
pop
push
lret
sahf
test
sbb
lahf
cmpb
mov
lock
dec
mov
lods
push
mov
adc
inc
ljmp
js
fwait
or
push
hlt
xchg
fwait
xor
mov
cmp
push
out
mov
dec
cmovbe
xchg
mov
cmp
jo
icebp
popf
jmp
shl
test
xor
into
cmpsb
adc
mov
jl
xchg
imul
mov
arpl
clc
mov
and
add
rclb
push
mov
mov
and
insl
jnp
lods
lock
stos
push
lahf
sbb
out
mov
jnp
lret
popf
jnp
push
insb
lcall
xor
jno
pop
pop
pop
iret
sbb
mov
and
das
cli
je
sbbl
dec
daa
xchg
mov
push
push
push
push
inc
aam
arpl
fnstenv
test
cmp
std
test
out
and
loop
jno
lods
aam
arpl
aam
pushf
clc
sbb
lock
and
in
mov
inc
inc
dec
ja
xchg
outsb
rcrl
mov
imul
and
pop
out
sub
pop
repnz
cmpsb
sahf
jp
mov
icebp
mov
callw
xchg
mov
jnp
das
fdiv
and
or
xchg
mov
int
call
into
mov
sub
sub
loope
or
mov
xchg
cmp
aam
mov
cmp
call
push
pop
ret
outsb
insb
push
fwait
adc
jl
insb
arpl
mov
popa
cmp
mov
movsl
or
pop
sbb
filds
and
repz
or
inc
mov
sub
cmc
pop
das
inc
cmp
mov
pop
test
mov
jne
gs
pop
ret
imul
adc
mov
lret
push
shl
mov
push
call
ret
stos
and
xchg
in
pusha
lea
ljmp
aad
mov
jno
fs
mov
jmp
outsl
jb
dec
pop
cmpl
or
pop
jne
call
push
push
pop
orl
jmp
iret
mov
jns
test
adc
lock
sbb
in
fcomps
fistpll
popa
fwait
lcall
push
lret
lea
xchg
inc
xor
sub
cmp
push
pop
xor
mov
jmp
sub
sub
jmp
shrl
xchg
fisttpll
nop
cmpb
adc
xchg
inc
adc
pop
popf
fs
pushf
int
pop
adc
ficompl
push
jns
shrb
sub
pop
and
sbb
sahf
or
loope
orb
fcomi
jecxz
jae
lret
movsl
or
mov
mov
imul
cmpsl
mov
push
xor
sbb
mov
rcrl
out
sarb
out
in
shll
push
jo
daa
sub
pusha
or
mov
test
xor
pop
add
mov
jnp
js
push
dec
pop
je
mov
push
xchg
pop
aam
pop
mov
fsubrl
jno
sahf
lret
test
push
xchg
inc
jle
js
mov
and
xchg
leave
aad
enter
sbb
cmp
fmull
cld
cmp
aaa
lret
stos
cmp
out
cmc
test
in
sub
lods
push
pop
in
enter
cmp
push
mov
mov
rcl
inc
push
mov
sbb
xchg
ja
ret
jp
sbb
inc
repnz
out
lahf
cmp
sbb
mov
lahf
bound
push
add
movsl
jae
jns
mov
stos
mov
ja
ljmp
addr16
lcall
push
adc
inc
xchg
inc
ds
pop
push
xchg
js
jle
out
sbb
lods
testl
mov
mov
loope
sarb
testb
push
mov
xchg
pop
jae
jno
stos
cmp
add
or
adc
sub
pushf
pop
cld
xchg
aaa
ss
mov
rcrl
rol
rcll
mov
lcall
test
lock
iret
fiaddl
xchg
aam
pushl
push
dec
lock
and
xor
cltd
stc
mov
push
sarb
mov
out
cli
jl
in
sub
mov
jno
mov
insl
negb
scas
in
mov
or
pop
jmp
pop
add
dec
push
push
mov
lods
int
lods
lcall
dec
push
dec
xchg
test
out
out
jle
nop
clc
adc
scas
sbb
je
push
and
scas
test
int3
pop
xlat
xor
lret
xchg
mov
imul
sub
lods
pop
repnz
aam
xor
mov
adc
mov
adc
add
out
pusha
sbb
lods
jne
call
and
pop
iret
cmp
scas
mov
fwait
mov
dec
sahf
cld
fidivrl
mov
or
mov
lahf
and
stos
and
mov
push
pop
pop
repnz
push
and
iret
jnp
iret
xlat
daa
sub
sub
fs
mov
jo
negl
and
fldcw
push
cli
push
leave
adc
mov
dec
cmc
dec
repz
add
popa
in
das
out
and
cmpsb
in
jp
xchg
enter
jmp
nop
les
outsl
sbb
ret
mov
or
in
es
out
popl
adc
insb
ds
arpl
fninit
sbb
cltd
mov
test
inc
cmpb
outsb
lods
inc
cmp
jno
mov
pop
rorb
jae
ficoms
mov
je
fnsave
gs
dec
ja
pop
mov
mov
jo
mov
push
sub
jg
mov
xor
cld
push
xchg
mov
jmp
mov
lret
jmp
mov
sub
dec
lret
jp
add
js
push
clc
and
inc
cmpl
jbe
mov
in
je
xchg
lock
jecxz
ficompl
outsl
xor
mov
xchg
or
mov
xchg
xchg
jno
cmpsb
sub
inc
dec
mov
cmp
xchg
das
dec
jbe
inc
sbb
je
dec
out
jns
sbb
inc
adc
push
jge
xchg
push
popl
push
repnz
in
xor
out
mov
mov
sets
ret
and
out
xor
pop
push
or
mov
add
pop
cmpxchg8b
iret
icebp
cmpsb
in
mov
cld
rcrl
add
ret
and
arpl
fisubrl
xchg
mov
and
movsl
sub
rorb
test
out
cmp
popa
mov
loope
in
ljmp
dec
sbb
fwait
adc
lds
mov
aas
xchg
inc
inc
dec
jno
push
arpl
mov
push
sahf
cmp
dec
cs
mov
int3
data16
dec
lcall
dec
cmpsl
cmpsb
xchg
mov
cmp
pop
loope
pop
jmp
push
mov
lods
xorl
mov
fmuls
ret
and
in
mov
mov
inc
mov
cmp
or
dec
stc
cmpl
inc
in
pop
imul
outsb
cmpsb
mov
push
dec
xor
pusha
stos
int3
les
xchg
jecxz
bound
sti
lea
out
mov
cwtl
push
mov
jbe
pusha
jae
mov
mov
outsb
mov
cld
pop
daa
mov
mov
out
sub
xor
mov
mov
and
jg
repnz
imul
jge
ret
pusha
data16
xchg
fnsave
mov
xchg
iret
sbb
push
mov
ds
cmp
mov
mov
jne
mov
mov
jle
mov
lock
mov
fstpl
jae
decl
mov
icebp
xor
lea
lahf
fnsave
fdivrl
or
fstps
mov
dec
stos
add
cmp
add
insl
shl
dec
sub
out
sbb
je
mov
push
addr16
subl
dec
enter
jecxz
cmpsb
add
stos
xchg
xchg
adc
push
addr16
add
sbb
cs
fistpl
mov
jl
in
add
in
jnp
jne
pop
repnz
sub
aas
scas
pusha
ja
mov
cs
imul
mov
pop
xor
add
cmpsb
outsb
loope
pop
xlat
adc
aam
dec
insl
mov
cltd
jge
mov
ja
mov
jae
push
rclb
pop
push
cmp
mov
inc
push
sub
pop
fucomp
mov
add
ficoml
cmpsb
jp
xchg
cwtl
pop
mov
jns
inc
popa
loop
dec
adc
into
repz
add
jb
fistpl
xorl
test
adc
jg
shll
or
cs
daa
dec
xor
test
xor
hlt
mov
pop
inc
jae
seto
pop
push
xor
xor
stc
addb
pop
aam
gs
aad
cmp
mov
jp
xor
cs
ret
stos
pop
in
sbb
push
call
push
dec
imul
mov
imul
mov
dec
mov
push
rcrl
subl
rol
xor
add
xchg
stos
pushf
push
fwait
inc
jmp
and
iret
sub
pushf
fwait
lahf
dec
mov
mov
frstor
pop
xor
repnz
bound
xor
push
fwait
pop
fistps
push
ljmp
sub
xchg
inc
aaa
push
cmc
inc
sbb
xchg
push
pop
lret
adc
cmp
punpcklwd
icebp
clc
lahf
addr16
repz
test
mov
repz
stos
push
add
mov
lds
dec
cmc
stos
jbe
xchg
cmp
lahf
cld
add
movsl
mov
daa
dec
mov
sub
and
xchg
pop
shll
cmp
xchg
push
dec
pop
sbb
leave
adc
inc
aas
and
repnz
inc
inc
sub
sub
mov
mov
mov
lods
outsl
cmc
cwtl
push
xchg
push
dec
mov
fdivrl
ljmp
xchg
lods
aam
arpl
mov
dec
and
cmp
sub
scas
cwtl
popf
jns
adc
mov
jmp
jne
push
cmpsb
js
js
mov
rcr
rorb
jns
inc
fmuls
arpl
enter
aam
mov
dec
in
idiv
shrb
dec
adcl
insl
pusha
or
shlb
dec
aad
inc
loop
mov
sbb
push
fwait
movsb
mov
cmp
pop
arpl
pusha
test
filds
cmpsb
enter
jmp
js
adc
dec
aaa
dec
pop
ds
in
rclb
add
shr
je
fs
sub
inc
lcall
push
dec
cmpsb
push
and
pop
jbe
add
icebp
arpl
ror
dec
in
ficoms
fld
mov
test
nop
into
pusha
add
xchg
or
test
mov
filds
movl
mov
dec
sahf
inc
lcall
andl
inc
in
leave
leave
xor
xor
xchg
cwtl
mov
inc
and
je
loopne
fs
popf
aaa
jns
or
clc
lea
push
cltd
jne
push
es
or
cwtl
adcb
fcompl
sbb
rorb
ret
stos
adc
and
pop
cmpsw
jno
repnz
addr16
mov
daa
cmp
xorl
imul
xchg
test
cld
inc
mov
mulb
repz
lret
pop
mov
js
pop
aaa
dec
loope
push
aas
cmpsl
push
in
dec
cmp
out
fs
mov
loopne
jb
sub
cli
cwtl
leave
xor
std
scas
mov
aaa
and
nop
aad
add
inc
inc
shll
movsl
out
and
lret
cli
adc
test
xchg
in
lcall
lret
or
add
pop
mov
imul
pop
mov
mov
dec
int
ljmp
call
loope
int
scas
imulb
dec
jmp
mov
dec
pop
pop
cmp
jbe
dec
out
lret
xchg
sub
movsl
xor
xchg
int3
ja
inc
cmp
test
or
jp
cmp
cs
loopne
movsl
add
xchg
jbe
xlat
shrb
cmp
xor
idivl
xchg
push
call
mov
sbb
cltd
in
jo
inc
cmpsl
pop
movsl
push
or
or
sbb
int3
mov
add
adc
pop
push
cwtl
fisubrs
nop
inc
fwait
push
into
nop
outsb
scas
xchg
push
loope
scas
js
jb
scas
jbe
or
mov
ret
xchg
sbbb
pop
pusha
xor
xor
adc
jg
jno
daa
sti
jle
gs
je
cmp
movsl
daa
rcll
mull
arpl
lahf
mov
push
js
nop
push
inc
cli
mov
fwait
lret
push
or
cmp
dec
dec
xor
dec
xchg
mov
sbb
cmc
mov
aad
mov
jo
push
inc
lods
mov
out
int3
outsl
lods
add
mov
loope
and
add
outsl
push
dec
aam
and
ljmp
pop
inc
xchg
pop
out
dec
in
lods
or
jl
mov
adc
sbb
and
xor
dec
imul
mov
xchg
mov
or
xchg
leave
scas
daa
frstor
dec
lods
sbb
fcompl
mov
pushf
jmp
inc
sub
cmc
jecxz
iret
int3
shll
cmc
push
scas
in
fmull
push
subb
orl
sbb
fwait
mov
xchg
sti
cltd
aaa
pop
out
xchg
mov
add
lahf
cs
rol
pop
cmp
lods
mov
push
mov
out
dec
sti
fadd
xor
jb
pop
clc
xor
cmp
sti
incl
loopne
inc
mov
int
scas
ja
jp,pt
fsts
int3
lret
roll
mov
addr16
lahf
arpl
repz
mov
and
push
pop
mov
lret
inc
aas
lods
cld
sub
out
leave
pop
push
mov
or
mov
mov
dec
les
push
add
push
std
int
adcb
or
push
rcrl
sbb
or
jne
out
ljmp
mov
es
pusha
mov
daa
cltd
addl
mov
fdivrl
mov
enterw
shll
loopne
scas
mov
push
movsb
sbb
dec
pop
add
mov
sub
pop
inc
les
xchg
mov
call
adc
pop
lods
and
jbe
pop
fmuls
xchg
sub
sbb
adc
mov
push
adc
les
pop
xlat
lret
cltd
es
mov
int3
loopne
out
leave
sbb
aam
fadds
push
inc
mov
add
mov
jle
ret
scas
orl
sbb
scas
cmp
sahf
add
sbb
daa
lock
test
std
dec
call
js
enter
insl
mov
ds
outsb
stos
cmc
addr16
adc
mov
shr
mov
mov
sar
mov
pop
faddp
lret
int
shll
push
cs
stos
inc
and
test
movsl
cmp
xchg
std
int
in
dec
test
dec
pop
call
data16
mov
mov
enter
ret
mov
scas
adc
iret
outsl
ss
push
fwait
xor
mov
loope
or
push
imul
popf
stc
push
adc
dec
dec
rorb
dec
push
insb
icebp
mov
sarb
fistpl
or
mov
lea
adc
mov
and
fldt
je
pop
mov
sub
inc
pop
ret
pusha
pop
into
imul
mov
lock
test
push
jp
dec
jmp
sar
mov
push
out
sub
pushf
push
scas
xor
adc
pop
std
lea
jo
mov
pop
adc
fnstcw
fxch
push
push
mull
jl
fwait
push
mov
shll
sbb
mov
popf
pusha
xchg
je
adc
movsb
mov
cs
sbbl
shlb
mov
aad
daa
xchg
cmpsl
xor
jne
int
cwtl
iret
mov
arpl
push
imul
sub
add
enter
es
ret
mov
in
and
sub
xchg
div
pop
shld
cmpsl
roll
push
mov
idiv
mov
cli
jl
jae
shl
ficomps
push
cs
aaa
enter
and
pusha
adc
aam
pushf
into
test
dec
addl
xor
sar
data16
stc
pop
dec
mov
dec
sub
or
pusha
out
mov
mov
mov
sub
popf
jp
cvtps2pd
out
jno
cmp
aas
xchg
loopne
push
jb
push
cmp
in
or
pop
data16
sbb
stc
roll
ds
jns
cmp
out
idivb
and
popf
add
mov
pop
xor
cmp
ds
mov
iret
into
scas
jo
cltd
cmp
and
push
or
out
ss
push
cwtl
cmp
sbb
ret
cmc
dec
mov
mov
lret
cld
mov
mov
das
cmp
cmp
in
sbb
jbe
rcrl
std
sub
stc
adc
cmp
or
movsb
pusha
test
dec
outsb
stc
into
add
fsubrs
xchg
lcall
dec
mov
aad
jmp
mov
les
cli
pop
mov
pop
xor
push
pop
popa
pop
psubusw
popa
stos
ret
xchg
and
mull
mov
adc
xchg
adc
xor
sub
jae
lods
cmp
push
inc
add
test
inc
xor
outsb
rorl
into
cmp
in
jno
inc
and
jp
aam
or
sbbb
push
lea
data16
xorl
outsb
push
push
fnstcw
mov
fdivrl
rorb
inc
popa
sbb
inc
in
cmp
rclb
ret
sub
add
shll
pop
stos
dec
leave
movsb
mov
inc
mov
cmp
or
aaa
popa
mov
adc
shll
mov
pop
insl
scas
xchg
and
jns
jle
push
mov
push
xchg
mov
das
ds
in
loope
jbe
movsb
mov
xchg
scas
jmp
adc
sbb
dec
cmp
bound
mov
jecxz
pusha
dec
fadd
jg
mov
dec
scas
mov
test
pop
test
rcrl
jnp
mov
push
ret
or
pop
xor
lods
lock
cmc
cltd
jmp
cmp
jno
ja
movsb
movsl
mov
xchg
cmp
inc
cmp
sub
sbb
enter
movsl
out
nop
jb
cmp
clc
ss
sub
xor
pushf
xchg
push
rclb
les
shlb
jecxz
into
push
xchg
jo
adc
mov
mov
adc
scas
es
mov
mov
test
fbstp
and
or
or
mov
addr16
and
int3
jns
sub
pop
push
sub
mov
lcall
mov
out
sbb
dec
fisubl
aad
clc
xchg
mov
faddl
jmp
test
clc
les
pop
fbld
xchg
fidivrs
push
cltd
push
fwait
sahf
int
push
lret
andl
push
jg
push
adcb
popa
iret
adcb
mov
pop
movsb
mov
lret
and
inc
and
in
pop
pop
fisubrs
into
subl
jg
dec
mov
mov
mov
xor
push
xchg
jecxz
mov
push
pop
arpl
xchg
aam
shll
js
adc
imul
cli
mov
outsb
jb
jbe
xor
mov
mov
test
aaa
inc
or
sbb
ds
push
xor
push
pop
fstpl
divb
push
cld
movl
and
mov
sahf
js
and
mov
sub
push
add
scas
lgs
loopne
cmp
pusha
pop
stos
jae
outsl
lock
notb
mov
cmc
xor
mov
mov
inc
arpl
jl
sbb
notl
sar
push
ja
pusha
outsb
sahf
pop
rcrl
pop
mov
test
movsb
push
ja
lock
cmp
stos
fs
orb
xlat
insb
sub
in
in
sbb
push
mov
mov
icebp
xorl
pop
ss
push
and
jecxz
int
sbb
in
inc
js
push
cld
push
cltd
gs
scas
frstor
aam
out
and
mov
jb
test
stc
call
cmp
mov
cmpl
mov
insl
push
incl
adc
and
sahf
cmp
and
lahf
insl
pop
jl
sub
test
lcall
fisubl
dec
adc
pusha
inc
gs
xchg
xor
jnp
dec
daa
dec
xor
in
aad
jecxz
add
xor
in
mov
fiaddl
push
lahf
push
in
ret
addr16
jge
mov
dec
fnstenv
jnp
xchg
push
pop
cmp
sahf
loopne
mov
aad
xor
cltd
cs
divl
data16
lret
dec
mov
fs
mov
jg
out
cmpb
dec
xchg
sbb
pop
xchg
out
loope
push
mov
int3
dec
stos
cwtl
mov
ret
iret
inc
and
mov
pop
adc
testb
ret
sub
outsb
add
test
les
dec
pop
xchg
dec
mov
xor
test
dec
pop
mov
mov
dec
and
mov
clc
adc
das
gs
adc
cmp
insl
mov
cmc
decl
fisubs
or
inc
mov
and
mov
mov
dec
iret
xchg
daa
xchg
loop
ret
insl
dec
sub
inc
loopne
pushf
sub
inc
daa
cltd
repnz
lea
aad
mov
jno
jnp
mov
add
mov
adc
int3
xor
shlb
jb
xchg
sbb
stos
loopne
sub
jle
cmpsb
in
cli
push
imul
or
inc
or
mov
shlb
cmp
mov
mov
and
sub
or
incl
mov
filds
mov
xor
mov
mov
pop
jbe
sbb
jbe
or
jmp
js
ficoml
lock
sub
in
sbb
lods
cwtl
mov
bound
sub
outsb
bound
aad
arpl
pop
mov
daa
test
lcall
mov
fs
mov
sub
dec
out
cwtl
in
jno
jg
or
or
gs
pop
stos
cmc
push
mov
jnp
in
fdivrs
sub
mov
cltd
into
ret
jg
push
icebp
mov
xor
xchg
mov
cmp
or
inc
daa
pop
das
mov
icebp
std
and
fs
adc
pop
xchg
inc
xchg
or
stc
or
pop
pushl
cltd
sub
pop
jae
mov
frstor
test
sub
shr
dec
xor
inc
push
mov
push
es
xor
jbe
inc
rclb
repnz
test
es
and
outsl
in
ljmp
stos
jb
clc
lcall
movsb
pop
daa
enter
test
jmp
outsl
pusha
mov
outsb
insl
dec
xchg
insb
in
inc
daa
xorl
in
cli
cmpsl
cmc
add
push
and
hlt
sub
sbb
lea
mov
cmc
or
dec
std
fnstcw
mov
cmpsb
out
sub
xchg
inc
mov
loope
jne
loopne
or
js
sub
mov
add
pop
add
sub
stc
sub
pop
repnz
xchg
mov
add
les
in
sbb
push
mov
push
xlat
mov
orl
shl
es
xchg
sub
push
inc
insb
in
loop
fnstcw
pop
popa
adcb
int
fnstenv
ja
and
jle
in
jecxz
lcall
pop
sub
xchg
sbb
das
outsl
cltd
divl
and
imul
pop
test
jnp
repnz
and
stos
mov
es
subb
mov
sub
dec
je
push
sub
into
dec
sub
into
push
fcmovne
push
sbb
es
loopne
fucomip
out
or
fwait
xchg
mov
mov
sub
loopne
or
jo
lret
add
pop
rclb
jnp
xchg
mov
int
add
push
mov
out
dec
and
mov
jg
lret
outsb
cld
sbb
sub
es
pushf
and
xchg
int
shl
pusha
dec
cld
pop
xchg
add
mov
dec
xchg
flds
inc
cmp
aad
shll
pusha
mov
lea
pusha
imul
jbe
or
incl
mov
or
imul
mov
lret
ret
and
pop
mov
rcll
sbb
push
jg
jmp
add
push
sbb
jae
addr16
das
mov
xchg
std
sar
sub
pusha
ljmp
xchg
push
cltd
jmp
jmp
add
aaa
pop
jl
rclb
enter
jmp
push
inc
stc
push
cmp
ja
scas
or
popf
adc
jns
subl
xchg
cwtl
sub
mov
lret
aaa
add
adc
mov
pop
cwtl
lahf
cmpsl
and
lcall
push
mov
jecxz
jp
insb
insl
adc
sar
je
or
rcrl
xchg
dec
jo
movsl
ss
mov
shlb
adc
cmpl
hlt
sbb
cwtl
les
jae
ret
mov
loop
pop
push
out
pushf
stos
cmp
push
sub
fnstcw
nop
and
push
xchg
dec
mov
mov
div
repz
xchg
in
pusha
out
adc
and
stc
shll
insl
imul
ljmp
adc
std
cwtl
dec
cli
or
add
add
jo
mov
jo
sbb
or
jo
out
out
and
mov
mov
mov
lods
loop
pop
push
push
pop
cmpsl
xor
lahf
fwait
jle
dec
stos
aaa
xor
jno
std
sub
xchg
and
xlat
pop
fdivrl
cmpsl
jmp
loop
push
lahf
mov
stc
mov
mov
xchg
push
mov
enterw
fwait
xor
imul
push
pop
ss
lahf
pop
adc
xchg
adc
push
das
call
cmpsl
ljmp
fistpl
mov
mov
push
loopne
jne
sbb
jbe
sbb
add
sbb
adc
jmp
add
movsb
pop
dec
sti
push
jns
pop
jg
arpl
jge
adc
and
jp
lea
sbb
or
adc
inc
xor
aas
dec
int
shrl
daa
and
daa
dec
into
rclb
fcoml
dec
add
xlat
test
pop
inc
scas
jae
pop
int
ret
roll
hlt
fisttpl
mov
fidivl
xor
mov
fsubs
jae
xchg
out
int
dec
push
sub
cmp
frstor
shll
mov
inc
repz
aad
jmp
push
hlt
jmp
jle
call
fsubrs
pop
out
xchg
push
mov
daa
push
imul
xchg
and
popf
lcall
sub
add
pavgb
and
dec
daa
jbe
or
mov
sar
pop
inc
mov
pop
inc
dec
push
sbb
xor
sbb
pop
jg
mov
repz
inc
dec
pop
pop
sbb
mov
test
lret
push
mov
push
sbb
jnp
xor
pop
dec
ret
or
orb
pushw
lret
addl
add
int
mov
inc
inc
fldl
test
jp
dec
inc
mov
int
cmpsl
je
mov
imul
enter
stc
mov
in
jecxz
fwait
rcrl
aad
xor
adc
lahf
xor
jns
fmulp
mov
jo
call
and
cmp
lahf
repz
int3
aad
rclb
adcb
mov
ss
shrl
pushf
mov
das
jecxz
pop
or
and
mov
xchg
lret
call
sub
pusha
loop
das
ss
popl
sbb
mov
or
mov
in
xor
inc
call
jle
fadds
ljmp
test
fstl
xchg
sbb
call
xchg
push
jl
fwait
out
jnp
scas
sub
in
addl
decb
rcrl
pop
or
mov
adc
jg
mov
push
or
in
xor
mov
jno
cmp
mov
pop
inc
and
adc
mov
ja
jg
pop
mov
movsl
cmp
pop
insb
mov
mov
sub
test
movsl
faddl
mov
test
adc
add
mov
sub
cld
push
outsb
fs
lcall
adcb
fwait
or
inc
dec
push
mov
adc
aaa
bound
mov
mov
test
pusha
push
adc
and
pop
mov
dec
ret
xchg
mov
dec
inc
aam
aaa
je
jb
mov
fistps
dec
sub
pop
pop
leave
push
xor
mov
fbld
or
or
testb
xor
dec
imul
mov
test
imul
add
dec
jmp
cltd
mov
sub
sub
movsb
je
into
loope
mov
push
sub
or
inc
cmpsl
and
cmpsb
movl
cmp
cmp
push
int3
xchg
aas
cmpsl
sub
and
push
dec
push
aas
pop
daa
insl
cmp
or
inc
dec
mov
jae
mov
inc
add
push
or
dec
shlw
mov
inc
push
aad
or
aad
cmp
pop
mov
test
mov
xorl
push
test
es
stc
mov
add
xchg
roll
pop
fnsave
mov
iret
push
mov
hlt
mov
or
jns
test
mov
js
or
add
xchg
inc
scas
push
std
movsb
adc
xor
xchg
lock
fucomi
jo
push
dec
test
mov
push
icebp
cmp
dec
pop
jne
loop
mov
enter
mov
sub
cmp
testl
fsubs
hlt
inc
mov
shrb
sti
shr
pop
xchg
iret
aaa
cmp
repnz
jle
loopne
ficomps
sub
mov
fistps
mov
lea
idiv
jno
or
jbe
xor
fdiv
loope
cld
negl
jle
sub
fidivs
aaa
sahf
jae
xchg
daa
push
sbb
negb
cvtps2pd
jns
cmp
mov
addb
ret
mov
adc
push
dec
int3
dec
fwait
mov
scas
test
xchg
xchg
sbb
push
sbbl
inc
fnsave
mov
cltd
in
push
adc
cltd
push
pop
jl
pop
jg
stos
dec
lahf
jae
sub
xchg
dec
ffreep
int3
js
popa
es
aaa
xor
stos
pop
inc
mov
shlb
jne
and
xlat
push
mov
lock
enter
lods
pusha
test
mov
fwait
xlat
pushf
xchg
pusha
or
sub
or
push
sub
add
jo
icebp
mov
scas
mov
dec
inc
xchg
out
xchg
sbb
pop
adc
sahf
xor
mov
dec
adcl
sub
xor
adcb
add
dec
cmp
push
add
mov
cmp
jnp
rcrb
xor
inc
fiadds
lret
xchg
push
test
test
or
in
push
or
xchg
imul
insb
add
cmp
adc
test
lahf
pop
in
pushf
outsb
outsl
ljmp
loope
push
fdivl
divl
lods
loop
enter
dec
pop
mov
jecxz
jno
inc
fstpt
popl
insb
xchg
je
movsb
popa
fcmovnu
stc
mov
bound
push
int3
orl
pop
lock
filds
mov
lret
mov
es
rcr
stc
add
push
mov
in
lahf
xor
repnz
jl
dec
xor
cld
dec
adc
pop
jns
mov
ds
jno
test
lfs
lock
dec
hlt
xchg
xchg
shll
mov
push
fcomps
pop
int3
jle
call
dec
mov
xchg
jp
repz
xlat
jp
loope
decb
sub
push
and
imul
xchg
pop
in
ds
in
or
adc
jp
or
adc
pop
xor
jno
scas
jge
popf
pop
adc
xor
es
mov
rclb
xchg
test
cmc
mov
insb
ret
jge
pop
push
mov
leave
push
rcll
push
outsl
pop
cmp
loope
xchg
test
decb
xor
inc
and
xchg
hlt
cmp
or
lods
dec
jecxz
sbb
hlt
xchg
sub
lahf
lcall
pusha
push
jp
cli
add
adc
lret
adc
pusha
pusha
clc
or
outsb
cmpsl
enter
mov
xlat
stos
jmp
inc
mov
pop
rorl
pusha
xor
pop
mov
mov
pop
jno
addr16
or
mov
icebp
xor
clc
add
push
jl
mov
mov
rolb
mov
call
pop
cmp
push
jle
stc
jbe
cmc
out
or
push
rcrb
test
mov
mov
dec
clc
mov
jl
rcl
inc
jne
in
mov
dec
mov
insl
jb
mov
loop
push
xlat
insl
dec
out
aad
pop
popa
fisttps
mov
xor
inc
push
cld
shll
lds
lret
add
shrl
cltd
push
cs
inc
test
aaa
add
pop
pusha
push
jne
lret
shlb
imull
jmp
dec
test
arpl
inc
xor
ss
dec
fists
pop
pop
or
movsl
xchg
sti
stos
push
sub
pop
pop
xorl
scas
jno
ficoml
cmp
dec
movsb
roll
fcomps
imul
pushf
cmpsl
iret
je
adc
xor
pop
icebp
pushf
dec
jb
lock
rcl
sar
mov
mov
ja
lods
shrb
cmp
sub
push
jge
push
fdivr
push
add
ljmp
ja
negl
mov
out
push
ds
out
xchg
push
fdivrs
inc
pop
jnp
dec
icebp
inc
mov
cmc
mov
cmc
xor
jl
xchg
lods
pushf
pop
lock
cmp
mov
or
fdivrs
pop
mov
inc
aaa
mov
mov
cmp
jmp
mov
jo
dec
test
and
pop
jne
cmp
stos
push
addl
inc
gs
and
sbb
pop
pop
sbb
lahf
aad
inc
add
sbb
fwait
test
and
inc
xchg
test
data16
push
imul
xchg
leave
or
push
and
xchg
mov
aam
enter
repz
outsb
stos
sub
mov
sbb
mov
cmpsl
test
mov
shl
sub
mov
ljmp
jbe
movsl
xor
cmpb
scas
or
mov
sti
pop
lods
xchg
mov
cld
ror
pusha
test
test
jnp
or
mov
dec
add
jg
sbb
pushl
into
push
dec
int3
scas
std
lods
adc
fildll
in
mov
xor
inc
nop
outsl
sub
xorl
aam
add
mov
addl
enter
hlt
pop
dec
je
addr16
cmp
sub
cltd
or
inc
adc
add
push
in
pop
xor
dec
adc
jne
xlat
aas
aad
cmp
mov
lock
and
pop
inc
xchg
hlt
pop
adc
sarl
dec
dec
mov
inc
jg
decl
mov
shrl
push
mov
xor
out
or
lcall
mov
mov
push
dec
lock
mov
xor
push
and
inc
pushf
ret
dec
adc
cvtps2pd
add
cmp
les
mov
cmpsb
mov
push
sub
les
pop
xor
std
jecxz
adc
xor
movsb
popf
jb
push
jl
and
ja
cmp
add
test
sarl
pop
xchg
push
xor
ds
cmp
iret
fidivl
daa
inc
lret
mov
push
or
sti
fildll
shl
or
popf
mov
and
hlt
cld
push
mov
xchg
mov
loop
les
fsubl
dec
mov
pop
test
mov
addr16
sbb
inc
icebp
push
in
rcll
cmp
ja
clc
xchg
lods
rcrb
mov
je
push
stc
hlt
push
ret
mov
lea
mov
mov
mov
or
sub
xorl
pop
shl
mov
sub
sti
xchg
test
scas
and
gs
inc
leave
lea
mov
adc
repz
mov
cmp
and
xchg
clc
lods
dec
mov
pop
sahf
mov
cmc
xchg
ds
cmp
negb
push
stc
insb
xor
cmpl
in
sarl
mov
xor
dec
in
adc
nop
dec
adc
leave
sub
data16
sbb
movl
in
out
mov
mov
jecxz
in
iret
rolb
pop
jl
lods
out
lods
scas
mov
or
fs
dec
and
sahf
mov
out
push
xchg
or
leave
sub
or
dec
orb
data16
fisttps
test
out
popf
test
stos
jle
bound
push
dec
ljmp
aas
sub
inc
jge
xlat
mov
je
jl
aam
aas
out
jbe
adc
insb
sbbl
sub
inc
out
fdivrl
enter
int
jmp
mov
xor
fs
pusha
push
inc
leave
cltd
xor
out
or
shlb
mov
xchg
sub
pop
movsl
jo
cmp
aam
mov
mov
dec
sahf
cmpsb
mov
push
push
int3
rclw
xchg
mov
cmpsl
jno
cwtl
adc
lds
pop
sbb
pushf
ret
cld
lods
jae
pop
mov
mov
and
mov
xlat
in
xchg
fnstcw
inc
rclb
and
cwtl
pop
popa
jae
cmp
into
or
pop
cltd
jg
add
fst
into
cmc
mov
pushf
fs
std
jl
pop
pop
pop
lcall
lahf
bsf
dec
pop
frstor
cld
mov
add
jne
and
xor
stos
jle
add
mov
in
cmpl
or
inc
fldl2t
pushw
inc
cmp
and
xchg
cmpsl
test
imul
or
xchg
dec
lahf
mov
cs
filds
jo
and
cmp
bound
cmp
cmpsb
mov
mov
mov
and
and
jnp
addr16
je
jg
rcr
das
adc
dec
nop
and
cmp
jl
pop
cmp
xchg
lock
test
sqrtps
fcoml
jo
push
mov
stc
fwait
mov
cld
inc
cmp
lock
bound
sbb
fcomp
jl
mov
fmul
pop
mov
out
pop
adc
or
cwtl
pop
xchg
xchg
mov
lahf
or
and
insb
sub
inc
enter
push
mov
jns
mov
je
jle
xchg
int3
pop
inc
xchg
sub
and
insb
mov
mov
dec
mov
addr16
jbe
fsubr
test
insl
stos
test
mov
inc
out
lock
mov
xor
shlb
cmc
sarl
xor
fists
cmc
and
ret
cmp
adc
and
jae
out
push
jb
stos
cmp
xchg
sbb
sub
popa
cmp
out
mov
das
cmp
sub
sbb
sub
sbb
in
inc
daa
das
dec
or
mov
pcmpeqb
xor
jnp
cmp
mov
push
jbe
dec
ds
or
jge
fsubrl
mov
cmp
js
enter
mov
mov
xchg
rorb
flds
ret
jecxz
mov
inc
std
call
pop
add
addr16
adc
test
inc
rolb
fsubrp
xchg
cmp
jae
pop
add
lods
pushf
out
pop
mov
test
ss
jl
repz
sbb
imul
iret
or
mov
hlt
xchg
add
xchg
stos
pop
mov
je
lods
add
out
pusha
mov
fsub
mov
inc
jg
arpl
loop
inc
add
divl
xor
shlb
popf
xchg
cli
repz
es
push
mov
aad
jmp
xchg
aas
push
sub
xchg
outsl
jns
hlt
lcall
mov
imul
lret
iret
leave
mov
mov
xorl
ret
fsts
fwait
adcb
outsl
dec
pop
mov
sub
sbb
rorb
or
jecxz
xor
enter
lods
push
jp
jmp
cmp
stc
adc
fwait
mov
das
push
out
mov
pop
jbe
scas
and
xchg
stos
add
jmp
call
adc
mov
subb
push
sub
dec
pop
clc
cmpsl
lods
sub
ljmp
pop
sub
sbb
out
dec
bound
adc
call
popf
cltd
pop
ror
rcl
scas
popf
xor
lock
sarl
lds
xchg
mov
aad
clc
inc
mov
or
xchg
ljmp
dec
ficoml
add
cmp
lods
pop
sbb
push
xor
xor
or
or
sbb
or
mov
xor
outsl
pand
popa
iret
insl
push
and
dec
mov
stos
repnz
lret
in
mov
push
jnp
adc
pop
dec
jge
mov
inc
mov
std
bound
pop
inc
push
mov
cwtl
popf
repnz
jl
cmp
mov
mov
lret
sti
clc
sbb
leave
addr16
mov
xchg
sbb
mov
lret
inc
jno
adc
pushf
adc
stos
xor
sub
xor
and
negl
rcrb
lcall
mov
cli
divl
data16
hlt
push
mov
xchg
dec
daa
push
pop
add
mov
push
in
fsubrp
push
xchg
mov
lcall
add
dec
lahf
push
mov
sub
movsb
jo
adc
movsb
fstpl
es
or
inc
daa
jne
mov
inc
xor
ret
idiv
mov
xor
jnp
lods
jno
outsl
fidivrl
out
jmp
or
xchg
jae
sbbl
push
inc
ror
andb
daa
call
fs
aam
push
movsl
adc
in
imul
sbb
sub
xchg
mov
pop
jae
pop
cs
pop
js
clc
inc
fstpl
popa
jb
xchg
imul
push
sub
icebp
int3
loope
pop
inc
packuswb
int
sbb
xor
mov
cmpb
pusha
frndint
or
xorb
mov
mov
cwtl
andl
mov
imul
xor
cmp
sub
fs
jmp
mov
sbbl
cmpsb
in
ds
test
aas
push
iret
sub
gs
nop
inc
jecxz
pushf
pop
into
in
out
pop
jp
push
mov
add
xchg
ret
lock
sti
sub
mov
fcomip
out
js
sbb
shrb
ret
inc
xor
cmp
jo
ret
aam
lret
hlt
jl
shrl
pop
dec
in
lcall
popf
pop
jne
aam
data16
push
into
jnp
dec
inc
mov
pop
adc
int3
cli
dec
push
and
fcoms
lods
mov
mov
xor
push
xchg
lret
mov
pop
dec
roll
push
out
rcrl
pop
mov
shlb
popa
mov
xchg
cs
aad
mov
incl
les
out
xchg
push
out
call
and
orb
insb
aad
or
jecxz
ljmp
inc
ss
jo
push
cltd
popf
jo,pt
mov
mov
add
enter
cmpl
vmovups
cmpsl
mov
out
jo
jbe
mov
pop
aad
jecxz
mov
movsb
inc
nop
mov
jge
insb
arpl
mov
and
test
testl
inc
push
mov
xchg
xchg
xchg
ficoml
push
in
jbe
into
mov
pusha
pop
dec
lods
leave
into
mov
imul
je
cmpsb
sub
sub
mov
popa
jmp
loopne
jno
aas
into
fisttps
xchg
jle
mov
mov
mov
in
ret
das
mov
loopne
pop
in
std
fsts
sub
jnp
dec
push
movsl
nop
imulb
mov
aas
stos
dec
mov
xlat
mov
xchg
or
push
mov
imul
mov
aam
out
push
insb
popa
lds
xchg
mov
adcl
ja
sub
jmp
jnp
daa
outsl
cmp
addr16
and
cmpsl
xchg
cmpsl
sub
fwait
ljmp
inc
ss
mov
popf
xor
aad
das
sub
adc
js
xchg
nop
push
push
xor
mov
xchg
mov
mov
sti
mov
cmpsl
daa
cwtl
loope
jmp
fldl
sbb
xchg
out
xchg
inc
inc
jne
lahf
fcoms
cmpsl
pop
sub
stc
arpl
push
pop
or
mov
aas
push
imul
int
out
adc
and
xor
loope
int3
pop
int
adc
sub
lcall
jmp
inc
cmpsb
inc
adc
mov
sbb
jo
fcoml
push
sbbl
faddp
jmp
or
inc
sarl
or
in
xchg
adc
dec
pop
stos
add
mov
cli
loope
sub
xor
dec
bound
cs
jno
neg
adc
adc
fsubl
inc
int3
pushf
inc
xor
cmp
ljmp
daa
sub
sub
inc
push
push
cltd
sub
push
pop
mov
jns
jae
adc
adc
sbb
cmpl
xchg
jb
adc
aad
sarl
or
leave
mov
test
adc
clc
hlt
movsb
test
stc
pop
mov
and
in
cmp
xor
inc
cli
inc
push
adc
lcall
jne
inc
jne
mov
mov
mov
xchg
stc
ljmp
push
sub
popf
aaa
aam
insb
xchg
hlt
mov
xor
cmc
cmpsl
mov
push
sbb
out
jnp
pop
repnz
paddq
pusha
jg
inc
movsl
mov
sub
add
add
add
inc
addb
xor
add
dec
addb
pop
addb
add
add
dec
addb
pop
addb
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
