add
jg
movw
or
sub
decl
jmp
or
out
jmp
pop
popa
add
psubd
rcr
psrad
sbb
sbb
movb
jp
jmp
adc
sbb
cmp
add
rcr
pminub
jmp
mov
ret
mov
add
and
pop
and
jge
movw
xor
addps
adc
jg
sbb
and
or
jmp
and
xor
push
dec
pop
punpckhdq
movb
add
jmp
outsb
sub
paddd
jb
cvttps2pi
and
jg
jmp
jecxz
inc
add
pop
cld
jg
movb
add
cvtps2pi
jge
or
sbb
and
add
ja
ror
movw
js
jmp
jge
xchg
fsts
and
xchg
cwtl
pop
ror
jmp
or
adc
cld
in
add
or
add
movl
add
add
and
jns
and
movaps
movl
sub
sbb
jmp
mov
stc
push
and
push
aaa
pop
paddsb
js
push
dec
pop
jmp
dec
and
sub
inc
movl
or
xor
push
dec
pop
jmp
loope
push
or
aad
movb
add
sub
xor
push
xchg
pop
jne
and
sub
movaps
sub
and
or
and
push
inc
pop
or
push
dec
pop
jge
cld
movb
adc
or
pxor
add
jmp
mov
sub
and
xor
xor
paddusb
xchg
movw
and
jmp
les
sbb
pop
and
unpckhps
dec
cmpl
jne
or
push
ret
add
add
lds
pop
adc
mov
scas
sub
pop
fdivrs
int3
sbb
sub
cmpsl
daa
sub
cmpsl
daa
jmp
mov
cmp
fdivs
mov
rcrb
xchg
dec
fdivs
leave
into
cwtl
pop
daa
push
fstl
int3
xchg
fmuls
sbb
dec
iret
dec
cmpb
fcomps
push
fnstsw
int3
xchg
fmuls
sbb
frstor
xchg
fsubs
sub
cwtl
pop
xor
fistpl
mov
mov
jnp
rcrb
outsb
out
cwtl
mov
add
fdivs
faddl
daa
dec
lcall
push
pop
dec
fistpl
outsb
fadds
popa
pop
add
fsub
fcom
lcall
push
and
xchg
fsubrs
fcom
ret
sub
out
sbb
mov
xor
fcmovnbe
fdivs
adc
cwtl
pop
mov
mov
sbb
mov
mov
fmul
iret
cmpsl
or
fstps
test
fadds
fsub
fmul
cwtl
pop
sub
jl
xor
ficompl
push
out
movsb
repnz
pop
notb
popa
rcr
pop
fsubs
movsb
jl
sub
mov
or
iret
cmpsl
daa
sub
cmpsl
daa
sub
gs
fcomps
sbb
loope
fwait
pop
push
enter
fcomps
mov
daa
push
push
lahf
pop
push
in
rcl
pop
or
pop
cltd
in
pop
rcl
or
or
push
fwait
pop
push
fdivrs
pop
mov
mov
pop
push
xchg
call
stc
rcl
pop
push
xchg
call
cwtl
aam
fcom
nop
into
orb
adc
ror
aad
cmp
out
pop
fcomps
push
push
xchg
aam
mov
orb
adc
ror
mov
push
cwtl
ficoml
aam
mov
inc
dec
enter
enter
enter
enter
enter
or
mov
rcrl
shll
subb
jl
push
and
shr
xchg
mov
adc
pop
fcom
xchg
mov
shll
sbb
dec
cmpsl
xchg
repnz
stos
cld
pop
fsubs
out
in
out
lods
repnz
cld
ret
lods
repnz
sbb
fistpl
fcomps
xlat
fcompl
pop
fistpl
push
add
push
mov
roll
test
popl
pop
add
mov
pop
mov
add
fnclex
lods
adc
mov
fcomps
push
lods
push
std
sub
pop
fadds
pop
cwtl
fiaddl
pop
lahf
fdivrl
pop
fcoms
push
std
sub
pop
fadds
pop
cwtl
fiaddl
sbb
ficoml
pop
xor
fistpl
ret
aam
lods
filds
ljmp
lock
fcomps
push
sbb
mov
pop
push
pop
pop
cwtl
in
fcomps
pop
or
fcomps
into
pop
mov
add
shrl
mov
inc
fcom
fcomp
sbb
push
pop
pop
ds
shl
pop
test
push
scas
sarb
out
lods
jl
adc
cld
xor
cwtl
pop
xor
fstps
pop
and
rcrl
fcom
push
pop
pop
adc
xor
rcrl
fcom
push
pop
pop
adc
xor
rcrl
fcom
push
pop
pop
adc
or
xorl
rcr
push
push
pop
mov
xor
fcom
fcom
and
mov
fcomps
rcrb
faddl
mov
mov
ljmp
mov
mov
stos
mov
pop
mov
mov
mov
mov
fcomps
mov
stos
mov
and
xchg
cmp
mov
sub
mov
idivb
mov
mov
mov
mov
mov
pop
xchg
mov
pushf
cmp
lods
movsb
mov
mov
xchg
ss
mov
stos
aaa
mov
fcomps
fcomps
fcomps
enter
adc
std
fisubrs
sbb
sub
pop
sub
fcomps
add
imul
mov
add
add
add
add
add
add
add
add
or
pop
add
das
outsb
jl
push
sbb
jnp
popa
movsb
cli
andb
adc
std
shr
jae
sbb
xor
or
scas
gs
pop
and
xor
add
add
add
jmp
and
aam
xchg
lods
int3
or
enter
imul
mov
xchg
xchg
pop
aad
mov
dec
jle
or
xchg
mov
sbb
adc
jecxz
and
stos
adc
mov
loope
sub
xchg
cld
std
add
aaa
mov
out
add
pop
add
mov
add
pop
add
add
add
daa
jae
add
mov
add
aam
add
add
push
add
add
add
add
add
add
add
add
add
arpl
add
add
add
add
test
add
add
add
add
lcall
jg
add
xchg
rcrb
arpl
add
insl
hlt
sub
xchg
leave
or
js
add
xor
adcl
add
add
add
add
mov
cmpsl
push
add
add
mov
add
add
sub
add
add
sub
cmc
ja
ljmp
add
or
add
inc
add
add
add
and
add
add
add
pop
inc
shl
jb
pop
add
nop
ret
or
add
jecxz
pusha
mov
mov
add
jns
push
push
xchg
and
lds
sbb
mov
in
or
je
sub
pop
add
mov
or
or
repz
shll
sti
mov
out
xchg
xor
push
shll
jnp
fcom
das
jg
xor
ds
or
out
sub
mov
lea
mov
cld
call
insb
adc
sub
loope
jb
add
in
in
or
jl
push
ret
cwtl
adc
ret
and
arpl
push
jnp
adc
push
mov
popa
dec
or
xchg
mov
mov
stos
pop
sub
bound
sbb
mov
ret
or
out
inc
adc
mov
nop
hlt
dec
test
dec
scas
dec
pop
pusha
xchg
cmp
and
pushf
xchg
loope
shl
push
push
dec
xchg
je
pop
pushf
int3
fst
add
push
arpl
aad
pop
movsb
aam
lcall
daa
cmpsl
sub
push
fstpt
popa
rolb
ds
sbb
imul
aas
je
and
adc
in
popf
out
sub
stos
in
adc
bound
ss
shll
adc
fnstcw
pop
lcall
add
mov
leave
addb
testb
dec
mov
lds
lret
lret
jnp
mov
bound
mov
and
or
ret
roll
lods
pop
push
int3
and
faddp
cmp
dec
outsl
mov
loope
mov
arpl
out
cmpsb
int
push
clc
sti
jecxz
sbb
bnd
mov
scas
rcll
pop
in
mov
mov
mov
dec
aaa
in
jecxz
icebp
addr16
and
addr16
jecxz
dec
imul
sbb
cmp
shlb
inc
sbb
fmull
add
push
mov
or
and
mov
or
jne
pop
xor
dec
stos
lahf
inc
cmp
cmpl
imul
popf
stos
inc
push
ret
filds
mov
pop
insl
or
fwait
or
mov
jg
dec
test
in
pop
fwait
and
dec
gs
cmp
push
call
xor
repnz
push
add
loop
fbstp
insb
push
pop
je
pop
stc
push
or
add
outsb
add
in
cmpsl
mov
dec
cwtl
pushf
lret
mov
rcrb
pop
fimuls
ret
cmp
bound
shll
jo
lret
mov
bound
pop
stos
jb
mov
adc
and
sbb
lods
pop
in
andb
dec
rcll
sub
jecxz
aam
xchg
insb
aad
dec
sub
mov
xchg
lret
loopne
sete
sbb
cmp
fisttpll
mov
and
fwait
lods
das
pop
xchg
push
and
cwtl
sub
dec
aad
push
push
gs
scas
and
xchg
fs
pop
dec
int
push
add
ss
std
pop
pop
mov
lret
sti
sub
or
push
inc
sub
into
xor
pop
ljmp
shlb
aad
pusha
or
mov
jne
nop
mov
testl
in
stc
push
cltd
mov
rcll
fwait
pop
fcoml
dec
loopne
xor
push
jnp
mov
push
imul
stc
mul
pop
adc
pop
pop
lahf
outsl
sti
mov
mov
mov
cmpl
adc
dec
sub
jg
mov
into
jbe
pop
jp
popa
daa
sbb
adc
out
mov
pop
xchg
neg
xor
adc
sub
xchg
sub
push
dec
repnz
cli
lret
sti
xchg
lods
mov
fbstp
scas
arpl
push
lds
js
push
sbb
jmp
out
dec
sub
subb
loope
lock
push
jbe
subb
and
mov
mov
add
push
mov
mov
in
out
aad
xor
inc
jb
movsl
pop
cmp
adc
dec
rolb
insl
in
add
sub
shlb
dec
mov
cmpsl
stc
mov
adc
andb
or
mov
mov
sbb
loope
inc
adc
es
dec
cmp
test
ss
pop
push
jmp
fnstcw
pop
adc
jp
fcompl
mov
mov
out
inc
dec
ja
out
mov
jb
xor
icebp
jne
sahf
scas
pushf
fistpl
fsubl
inc
imul
mov
mov
mov
int3
ret
sub
call
iret
push
pop
sbb
jg
outsl
pop
pop
mov
cmc
jno
and
popa
ret
or
push
pop
xchg
push
xchg
lret
cld
and
ret
jb
add
jmp
mov
mov
push
pop
and
add
out
les
ret
stos
aaa
or
push
pop
xor
clc
dec
rcrl
mov
aad
inc
mov
loop
mov
nop
push
add
js
sbb
int
mov
inc
add
mov
push
adc
div
mov
inc
lcall
jae
ds
ss
dec
repz
sbb
pop
inc
pop
mov
enter
loope
lods
mov
xor
xchg
xor
shlb
xor
jle
daa
inc
xor
and
js
cmc
jae
xchg
adc
push
dec
insb
add
cltd
jns
push
daa
sub
ret
dec
lds
add
xchg
sub
jbe
xchg
add
mov
lock
push
sarl
les
roll
sub
std
pushf
les
fnstsw
pop
inc
enter
inc
mov
and
xor
jo
popa
xchg
pop
mov
mov
jg
lock
int
mov
popf
xor
push
shl
int3
adc
dec
sbbl
mov
out
xor
dec
lock
cli
inc
lahf
popl
mov
dec
loop
add
repz
aaa
jecxz
test
pop
push
mov
out
dec
shl
mov
pop
jl
hlt
add
push
cmp
rolb
push
int3
dec
pop
std
call
dec
fcoms
pop
mov
aam
sub
sbb
mov
into
testb
dec
js
mov
pop
ljmp
mov
and
dec
and
in
add
pop
in
je
jecxz
cltd
pop
stc
sub
sbb
inc
scas
mov
push
out
out
pop
push
out
jp
sarl
sahf
stos
mov
loop
jns
or
sbbb
pop
lea
push
sbbl
clc
push
or
rorl
cmp
sub
mov
sbb
mov
int3
mov
push
icebp
jmp
scas
xchg
icebp
loop
cld
mov
pop
cmp
or
pop
pop
xor
aam
leave
mov
pop
adc
cmpsl
or
icebp
bound
adc
outsl
sbb
mov
add
push
fistpll
mov
pop
jg
add
out
cmpsl
cmpsb
sbb
xlat
xchg
mov
lret
and
or
xchg
sub
test
and
add
lcall
sbb
inc
dec
jbe
es
les
imul
cmp
mov
int3
xlat
pop
or
enter
mov
cmc
loopne
test
icebp
hlt
dec
test
add
mov
inc
lods
int3
enter
bnd
fnstenv
js
fdivrs
pop
rcll
popa
pop
negb
lret
icebp
xor
or
stc
inc
and
jl
js
mov
inc
pop
pop
cmp
cmpsb
shrb
into
popf
jl
mov
inc
mov
mov
cmp
dec
insb
imul
ljmp
cmpsl
add
dec
jmp
lock
rcrb
outsl
sbb
pop
inc
sub
jl
xchg
inc
fcmovne
aaa
mov
add
cmp
or
add
aad
adc
inc
cwtl
fs
push
adc
sbb
fcoms
sbb
insl
xor
popf
lock
mov
jp
jae
pop
jae
mov
push
ljmp
insb
xchg
mov
pop
xchg
mov
sub
imul
out
mov
test
or
addl
mov
xor
sbb
inc
aam
inc
dec
add
or
jg
fdivrl
cltd
test
das
mov
mov
jbe
or
subl
in
pop
dec
lret
or
jecxz
xor
cwtl
mov
adc
loop
cli
loope
dec
mov
loope
shrb
call
xor
jg
imul
inc
lds
jg
iret
je
gs
add
or
inc
xchg
lcall
or
jmp
inc
rcr
push
mov
lock
lea
push
fstl
enter
mov
repnz
stos
stos
mov
mov
jae
push
add
test
sbb
sbb
xchg
in
add
xor
test
repnz
aam
sbb
loope
xchg
cmp
or
shrb
sbb
xchg
cwtl
inc
ja
pop
pop
std
cmp
dec
divb
in
enter
ja,pt
pop
inc
testb
ljmp
mov
xor
das
mov
push
push
test
xor
cmp
jle
jns
icebp
nop
mov
push
movsl
jecxz
fistpl
mov
ss
insb
pop
cmp
mov
out
ja
push
adc
pushf
adc
adc
mov
repz
out
sub
outsl
fwait
inc
mov
mov
jae
or
lret
repnz
js
xchg
imul
lds
xchg
sbb
pop
pop
cmc
push
adc
out
out
test
pop
mov
push
add
test
sbb
sbb
xchg
dec
push
data16
imul
cli
hlt
repz
cmpsl
xchg
fwait
shrb
lahf
adc
sbb
out
fsubrp
lret
int3
fs
and
scas
or
ljmp
xor
les
bound
mov
rcrb
addr16
or
mov
push
mov
gs
mov
xor
xlat
mov
sub
inc
out
inc
xor
enter
mov
ds
pop
sbb
mov
sbb
lods
clc
dec
mov
sub
push
jb
sbb
adc
loop
repz
dec
inc
adc
jmp
cmp
arpl
push
xchg
cmc
inc
clc
dec
nop
push
fcmovnu
loop
dec
and
out
je
jmp
inc
maxps
cmpsl
pop
xchg
mov
xchg
lock
push
scas
mov
mov
mov
in
test
inc
rcrl
mov
sbb
dec
lods
in
sub
lret
mov
sub
movsl
xor
addr16
dec
jo
sub
repnz
xchg
movsb
fnstsw
loop
arpl
cli
inc
stc
fldenv
mov
jp
inc
and
jmp
mov
xor
or
sahf
shl
cmp
roll
push
testl
ljmp
test
in
arpl
fadds
lds
push
inc
cmp
inc
mov
es
push
mov
stc
out
ret
inc
sar
jmp
mov
or
ljmp
adc
push
bound
pop
fistps
cli
push
popa
push
ficoms
in
jns
push
or
xor
cld
out
ljmp
jle
pop
mov
pop
pop
pop
int3
pop
pop
mov
pop
sahf
inc
push
hlt
mov
and
in
xchg
out
and
cli
xchg
fsubrs
popf
sti
into
sub
leave
movsb
or
in
dec
adc
inc
xor
and
jecxz
push
int3
mov
das
add
into
mov
mov
stos
shr
inc
sbbl
jno
push
aad
in
daa
jb,pn
movsl
mov
or
xor
inc
addr16
imulb
push
or
jmp
sbb
bound
sti
adc
scas
shlb
adc
lock
lds
fadd
sub
or
push
lock
pop
test
and
and
loope
and
aad
jbe
jnp
loopne
push
inc
out
imul
dec
cltd
inc
inc
les
jmp
add
add
addr16
aas
call
test
vmovdqu
and
cmpsb
daa
add
shl
push
imul
push
xchg
or
scas
stos
inc
nop
cmpsl
imul
test
loopne
pusha
popf
popf
or
aad
pop
mov
andb
fsubrl
push
mov
xor
push
jo
in
enter
arpl
push
xor
jno
mov
mov
jno
or
insb
hlt
arpl
stos
push
cmp
repnz
test
mov
mov
ja
push
std
sarl
hlt
push
and
jb
jge
adc
jle
icebp
inc
mov
pop
or
cli
mov
xchg
mov
fwait
mov
inc
loope
lock
sti
jl
movsl
mov
cmp
pop
vpaddw
mov
sarl
mov
xor
lret
adc
xchg
lahf
pop
out
dec
repnz
ljmp
int
cmp
pushf
mov
jb
adc
js
loope
ljmp
clc
movsb
cli
popf
pop
sarb
jnp
xchg
mov
ss
push
or
loopne
dec
pop
scas
push
xchg
imul
adc
in
add
mov
mov
jbe
movsl
pop
jb
test
cli
inc
into
sbb
mov
js
lock
mov
pushf
and
int3
and
adc
pushw
jmp
notl
lret
add
xchg
dec
or
mov
fs
sub
aas
xor
mov
push
add
rcll
cmp
cmp
cwtl
in
dec
loop
and
movsl
push
pop
jb
inc
lahf
pop
pop
xchg
fcmovb
add
repz
stos
sbb
inc
movd
jge
push
adc
fs
mull
sbb
repz
jl
pop
add
mov
xor
dec
test
mov
stos
xchg
add
jg
cmc
orl
jecxz
dec
loop
lea
and
jmp
lea
mov
xchg
adc
pusha
inc
lds
sub
cmp
in
dec
jecxz
mov
push
sbb
sub
dec
jmp
movl
cmpsl
or
lds
cmp
repnz
mov
jmp
aaa
mov
inc
call
lock
mov
js
mov
xchg
in
cmpsl
icebp
or
cs
fimuls
mov
add
jge
and
pop
lods
loope
pop
adc
fcomip
mov
sarb
lock
fdivrs
lcall
xor
addr16
pusha
ret
out
push
adc
jbe
pop
data16
hlt
pusha
fnsave
bound
mov
push
or
and
outsl
inc
jns
test
lods
adc
lods
dec
addb
mov
jle
ret
je
pusha
ret
shl
jmp
lea
rdtsc
popf
mov
test
and
mov
mov
lret
mov
jecxz
popa
jbe
outsb
mov
ljmp
add
inc
cmp
fisttpl
aaa
xchg
jmp
cs
test
jle
xor
pop
sbb
mov
mov
cmpsb
xchg
xor
mov
and
jo
inc
cmpsb
add
cld
pop
cmp
inc
repnz
xor
mov
arpl
adc
pop
daa
std
xchg
mov
fptan
cmp
add
ret
sub
jno
fstpl
fcompl
jne
or
adc
lea
xchg
add
ret
pop
adc
jge
test
fstps
ja
ror
lock
jne
inc
cltd
push
push
cmp
mov
mov
ss
mov
lds
call
lcall
fwait
les
pusha
fadd
loopne
add
out
dec
and
mov
cmp
imul
xor
sbb
pushf
xchg
in
add
jmp
xor
push
or
inc
xchg
mov
cmp
addr16
sbb
jbe
jl
lcall
xchg
call
pop
test
mov
or
sarl
fsubrp
addr16
fldenv
lock
icebp
stos
or
push
incb
je
out
pop
push
or
and
jp
in
ja
bound
inc
in
aas
cmp
js
inc
sbb
repz
cmp
sub
cmp
inc
ljmp
loope
mov
data16
in
scas
rcrb
and
mov
insl
mov
lahf
mov
push
pop
jp
sbb
dec
jns
mov
mov
jl
lahf
shlb
fs
popa
in
and
and
or
push
mov
lret
out
and
sbb
test
out
test
sbb
arpl
lret
sbb
outsl
dec
jp
push
dec
ljmp
lcall
pop
xchg
mov
pop
dec
stc
or
cmpsb
and
pusha
adc
lret
jge
mov
imulb
mov
mov
stos
and
and
adc
stos
negb
addl
dec
pop
mov
loop
in
test
shl
sub
insl
js
lret
dec
xchg
int
int
mov
or
push
xchg
loopne
mov
sbbb
out
and
cmp
shlb
xchg
int3
ja
pushf
cmp
mov
stc
xchg
add
cltd
xor
lock
shr
movsb
jl
loope
push
stc
shll
xchg
sbb
mov
pop
inc
out
daa
incb
xor
xorl
push
jnp
enter
or
pop
or
xchg
test
fists
pop
push
xchg
cmp
pop
adc
enter
fisubl
lds
sub
xor
and
imul
out
clc
xorb
mov
lret
or
adc
insb
sti
clc
mov
mov
pop
pusha
scas
leave
ds
lea
and
les
or
pop
xchg
test
mov
adc
xchg
jmp
fwait
or
insl
das
roll
int3
pop
mov
sub
or
fstps
mov
adc
movl
fs
jl
inc
xchg
pop
mov
xor
mov
inc
xchg
scas
xchg
arpl
imul
or
push
lahf
icebp
jmp
aad
jmp
sahf
ljmp
stos
adc
cmp
test
incb
imul
push
sub
xor
repz
lds
aas
dec
pop
scas
ljmp
es
adc
in
mov
and
cmp
dec
sub
mov
arpl
pop
daa
int3
stc
or
int3
mov
cli
cld
jb
and
in
dec
dec
cld
outsl
vphaddwq
sub
sub
inc
cmpsb
lock
sub
ret
daa
or
jmp
sbb
mov
adc
arpl
out
ret
pop
jnp
jmp
xchg
repz
mov
jbe
das
data16
sbb
sbbb
lret
ficoml
sub
sub
xchg
aam
or
ja
or
dec
and
nop
push
cmpsl
mov
mov
inc
cmp
pop
pop
stos
push
pop
cmp
das
nop
notb
mov
out
mov
adc
pop
aaa
dec
sbb
xorl
addr16
push
mov
mov
in
in
cmc
xorl
jmp
xchg
and
insb
imul
mov
sub
and
or
dec
ja
adc
jg
cwtl
out
jle
in
jge
movsl
test
and
add
icebp
cmp
add
or
xor
mov
loop
inc
add
leave
in
sbb
es
pusha
xchg
and
test
leave
xor
pop
mov
jae
mov
int
inc
lret
xchg
jmp
sbb
and
sub
adc
inc
dec
sbb
push
lods
xchg
scas
sti
cmpsb
dec
xchg
pop
mov
or
clc
sbbb
testb
jo
nop
mov
inc
cmp
xor
pop
test
sub
popa
cs
in
imul
mov
pop
fdivr
dec
mov
mov
or
pusha
sub
sbb
ret
in
popf
sub
outsl
dec
mov
pop
push
and
adc
sbb
push
mov
leave
mov
incb
in
mov
pop
mov
and
mov
sub
into
fwait
insb
mov
jno
dec
je
mov
push
std
sub
loop
xchg
lea
pop
cltd
repz
cmpsl
rcl
push
sbb
pusha
test
mov
les
test
inc
jge
adc
repnz
aas
leave
sbb
add
sbb
cmpsl
and
insl
xor
xor
xor
cs
cld
imul
int3
inc
dec
mov
stos
inc
adc
ds
or
cs
cs
aaa
inc
in
je
dec
shll
pop
xlat
cwtl
jb
mov
loop
xchg
sub
mov
ret
or
dec
mov
pop
xchg
int3
mov
pushf
les
or
push
insl
pop
lcall
out
xchg
mov
stc
xchg
inc
jmp
inc
popf
mov
and
mov
fdivr
sbb
cld
test
xchg
insb
imul
ds
xchg
int
cli
ja
xor
leave
cmp
dec
clc
adc
mov
jo
daa
out
fcoml
movsb
add
rep
out
das
jmp
lret
rclb
fwait
notl
or
xchg
addr16
jg
and
jno
int3
aad
out
adc
jg
mov
add
sub
mov
stos
fcomi
xchg
mov
hlt
mov
jbe
sar
cwtl
in
push
in
mov
pop
or
cmp
aad
xchg
dec
mov
dec
xor
lea
cli
mov
leave
xchg
pop
insl
or
cli
mov
push
test
test
mov
sahf
jl
orl
mov
lahf
xchg
dec
push
pop
in
icebp
or
push
mov
scas
adc
ret
sbb
out
orl
jb
adc
push
in
dec
mov
mov
popf
push
ss
ret
push
dec
xlat
std
stc
xchg
test
add
jno
jns
scas
fsubrl
repz
sbb
in
mov
cmpsl
add
mov
xor
mov
inc
push
jns
mov
outsl
mov
leave
fs
frstor
out
lea
dec
xchg
daa
jae
inc
dec
and
cmpb
mov
jmp
nop
test
pushf
cmc
lea
loope
or
inc
jl
test
push
outsl
cld
xchg
stos
add
cmc
jg
cmp
adc
xbegin
mov
sub
push
push
rorl
mov
ret
ret
mov
fs
mov
inc
and
xchg
das
mov
mov
xchg
js
pop
std
aaa
repnz
xor
popf
adc
nop
mov
inc
jnp
pop
add
repz
adc
adc
xchg
or
lahf
ljmp
and
xor
test
xchg
aam
jbe
test
enter
cmp
or
sub
je
in
jp
xlat
out
stos
popf
sbb
or
and
dec
shrb
cmpsb
dec
jno
ficoml
xchg
lods
data16
nop
ror
fdivrs
in
xchg
popf
and
add
xor
lods
xor
push
fdivl
inc
scas
out
push
out
sbb
mov
popf
insl
loop
ficompl
xchg
dec
mov
mull
ret
xchg
test
sub
inc
in
mov
loop
cmpsl
sub
adc
imul
int
xor
jne
int
cmp
xor
addb
jb
cmpsl
jmp
pop
add
cld
call
and
out
lahf
add
or
jns
mov
adc
mov
jmp
repz
rol
dec
xor
mov
movsl
or
mov
jle
xchg
shlb
in
lret
daa
mov
mov
aaa
call
dec
rclb
push
xor
and
ljmp
icebp
movsb
fsubrl
fsubrp
lret
loopne
push
and
jecxz
negl
fists
adc
sbb
mov
std
inc
lret
lods
fdivrs
cltd
xorb
cmp
cwtl
jne
xchg
incb
cmpsb
pushf
add
inc
jmp
loopne
and
popa
sarb
adcb
fmull
add
mov
mov
dec
xchg
cwtl
lret
loop
nop
out
or
test
push
jg
mov
divl
or
xor
mov
scas
jmp
jp
loop
adc
cld
testl
lcall
mov
das
xchg
mov
imul
repz
je
in
cltd
pop
mov
ljmp
mov
out
bound
mov
push
jmp
je
int
sub
mov
adcl
pop
fcoml
mov
mov
xor
and
shll
fstl
push
push
sub
outsl
ljmp
sti
test
lds
mov
orb
jle
addb
xchg
xor
inc
rcrb
cld
pop
movsl
popf
or
add
addr16
fimuls
cmc
jnp
jnp
cld
fistpll
or
jge
es
lcall
rorb
adc
sub
out
pop
push
int3
sub
loop
jae
cli
in
lahf
cmpl
or
mov
outsl
xchg
fwait
out
xchg
jae
or
push
pop
std
push
cli
or
xor
sbb
mov
loop
in
daa
cmpl
mov
inc
insb
and
push
dec
in
es
inc
shr
and
aas
jo
test
out
or
aaa
sbb
lret
pop
aam
xor
mov
movsb
mov
call
add
sbb
sub
xchg
ljmp
les
ffreep
fninit
xor
inc
inc
dec
mov
jo
idivb
and
ror
je
mov
mov
and
stos
data16
cmp
lock
push
loopne,pt
aaa
inc
mov
daa
jbe
shrl
dec
ss
pop
pop
fistps
lret
imul
jnp
pop
decl
jg
in
lahf
jns
stos
sub
sub
dec
sub
hlt
test
push
je
int
xchg
xor
shll
test
add
arpl
lahf
mov
xor
cld
nop
jb
or
mov
mov
pusha
xchg
xchg
sub
or
scas
inc
rcrl
xor
sub
out
int
stos
fcomps
jge
leave
add
cmc
xchg
jle
ljmp
adc
aaa
xor
mov
mov
fisubrs
loop
mov
push
adc
dec
mov
dec
lock
test
xchg
jge
cmpl
cmp
aaa
add
mov
fwait
jne
out
jp
fmulp
negb
mov
or
call
hlt
stos
stos
sbb
dec
imul
mov
and
loopne
xchg
aam
imul
cltd
add
mov
jp
outsb
clc
ret
test
push
popl
xor
xchg
xor
sahf
subb
call
test
xchg
das
adc
stos
sub
xchg
sub
cmpsb
stos
das
ss
pop
mov
outsb
and
shrb
sbb
adc
jle
gs
nop
push
and
sub
cmp
dec
aad
in
dec
jmp
xor
mov
xchg
out
test
mov
mov
sub
loope
mov
or
lahf
dec
dec
popf
in
sbb
lock
orb
and
push
push
push
imulb
jge
pop
fcoml
ror
pop
fmull
pusha
sbb
or
lods
xchg
mov
adcl
mov
out
outsl
sbb
mov
out
or
xchg
data16
or
out
cltd
aam
and
xor
jg
imul
sub
xchg
aaa
sbb
xor
or
imul
lret
pop
clc
sbb
mov
out
xchg
sbbb
inc
mov
xchg
pop
mov
rol
mov
arpl
in
lcall
pop
push
push
mov
das
shrb
mov
pushf
adc
dec
out
mov
jmp
aas
mov
mov
cmp
test
and
rolb
adc
push
ret
push
adc
cmp
nop
gs
mov
inc
mov
das
ficoms
mov
jle
push
mov
push
mov
pop
addr16
out
testl
push
faddl
add
fxch
add
scas
adcl
and
push
repz
fndisi(8087
mov
sti
and
out
or
adcl
sub
push
jmp
cmpsb
push
das
popa
xor
push
data16
stc
jbe
jle
xchg
loopne
aaa
sbb
xor
or
push
xchg
popa
lret
aad
movsl
bound
lahf
mov
push
std
add
inc
jmp
mov
lods
push
sbb
mov
or
push
push
dec
xor
push
inc
cmp
or
jbe
jmp
int3
mov
mov
lea
cli
inc
lock
rcrl
mov
aaa
xor
cmp
sbb
pop
push
jbe
sub
insl
imul
sti
iret
nop
xor
dec
xchg
ljmp
cmp
data16
push
or
xor
push
mov
js
out
mov
or
add
fbstp
sbbl
shrb
inc
lock
adcl
add
scas
das
and
hlt
and
out
or
dec
lock
mov
cmc
call
mov
or
inc
idiv
sbb
or
outsb
or
imul
lret
sar
sbb
sub
push
incl
mov
xchg
dec
sub
lock
imul
mull
lret
pop
fwait
movaps
dec
aaa
fcompl
mov
or
add
pop
inc
and
mov
das
decb
icebp
xchg
push
dec
out
xor
test
loopne
mov
repz
jnp
push
cmpsl
sub
cmp
ret
in
and
adc
lahf
sub
jecxz
lret
sti
push
cli
inc
mov
mov
xchg
or
jecxz,pn
inc
push
ljmp
rcr
cmpsb
fisttpl
gs
jno
fcmovnu
and
fcmovbe
jne
xor
xor
sbb
dec
cmp
sub
xor
jns
sub
aad
pop
cmp
mov
pop
pop
and
mov
ljmp
inc
lock
pop
in
addl
ds
xchg
dec
or
fs
outsl
sbb
adc
je
sbb
dec
out
cld
cmp
es
out
stos
scas
dec
xchg
hlt
outsb
inc
movl
fsubr
mov
sbb
jp
dec
decb
fisubl
mov
push
jecxz
cli
xlat
int3
sub
cmp
mov
sbb
cs
rorl
mov
fsubs
inc
adc
imul
es
mov
pop
xor
dec
sti
outsb
xor
jo
or
dec
lock
pxor
inc
jb
push
mov
bound
sub
ret
push
xchg
addl
dec
push
aaa
ja
add
xorl
xchg
es
ss
jae
das
cmp
jnp
lahf
push
mov
adc
and
repz
jg
insl
pop
add
add
lea
stos
xor
jecxz
or
in
jl
out
lahf
jmp
xor
in
jae
in
mov
cwtl
pop
js
mov
xor
loope
int
or
and
jge
adc
mov
push
cs
repnz
dec
mov
push
rcll
insl
das
mov
mov
loopne
adc
inc
repz
mov
mov
jno
lahf
sbb
pop
pop
fistpll
and
daa
mov
or
xchg
gs
push
imul
in
mov
add
sub
mov
sub
rorl
jae
aaa
jns
andl
cmp
gs
pop
pop
aaa
xlat
xchg
mulb
pop
call
dec
loopne
inc
stos
push
fwait
dec
imull
inc
inc
jns
inc
scas
adc
dec
and
cmc
pop
and
push
push
jne
sub
inc
inc
and
test
insl
aad
mov
mov
and
mov
sub
jne
aas
xchg
popf
dec
xchg
mov
and
push
cmp
cmc
in
stos
je
jle
xchg
mov
daa
outsl
jmp
test
mov
cwtl
ja
sbb
dec
mov
divl
xchg
movsb
xor
pushf
sub
jnp
pop
mov
jp
std
inc
bound
push
in
add
sub
push
or
das
test
xor
xchg
lcall
inc
loopne
fwait
lret
cwtl
std
sub
inc
fidivs
mov
pop
or
dec
dec
clc
mov
fdivr
popa
mov
push
inc
call
jecxz
fnstenv
lcall
ds
jge
pop
inc
push
or
idivl
xchg
xchg
shrb
and
sbb
pop
inc
out
shrl
movsb
xchg
pusha
fcmovb
sub
push
jp
ret
mov
add
fcoms
mov
mov
xchg
mov
sbb
xlat
enter
cs
jecxz
jmp
es
repnz
daa
xchg
adc
in
dec
or
add
mov
out
test
dec
outsb
sub
xor
lods
push
mov
sahf
mov
dec
mov
xor
jns
das
jbe
jns
sub
and
scas
popf
xchg
or
xor
pusha
add
xor
inc
gs
mov
je
sub
rcrl
lock
fsubrs
jo
push
in
mov
int3
pop
mov
xlat
add
mov
mov
pop
cld
and
jns
loop
inc
fs
pop
jle
cld
pop
cmp
pop
leave
pop
sub
mov
int3
xor
fidivrl
stc
mov
fdivs
addr16
repnz
int3
fldl
fs
fldt
dec
push
jmp
xchg
dec
cmp
lcall
pop
inc
and
pop
sub
dec
mov
nop
xchg
and
daa
pop
jno
call
xchg
fwait
pop
adc
jo
cmp
ljmp
adc
push
ret
mov
adc
mov
push
jle
sar
and
hlt
dec
imul
cwtl
int3
dec
addb
adc
lock
pop
aad
xchg
jle
add
call
ficompl
sbb
stos
sbb
enter
mov
lea
mov
add
push
fbstp
aad
pop
fdivrl
js
inc
adc
and
rcrb
rorb
cmpsl
sub
inc
xor
xchg
jge
xor
nop
jp
repnz
arpl
adc
inc
push
inc
popa
mov
das
movsl
pop
shll
jns
or
and
aad
cmp
xchg
lcall
push
and
mov
imulb
addb
mov
add
and
jmp
cmp
adc
mov
jnp
sbb
mov
pushf
or
and
loope,pn
jae
push
ds
dec
and
clc
mov
jmp
mov
xchg
jp
sahf
cmpb
popf
mov
out
mov
lahf
cmp
xchg
jns
loopne
outsl
pop
pusha
repnz
pop
push
scas
inc
or
icebp
sub
loop
std
push
xor
mov
mov
cmc
sbb
seta
mov
out
into
es
and
mov
push
insb
sub
movsl
fcoml
bound
fistpl
ljmp
or
sbb
jnp
mov
jge
jno
lret
idivb
mov
pop
cltd
fcmovb
subl
test
pop
xor
fwait
out
xor
sub
inc
popf
jbe
mov
pop
out
cld
lcall
sub
adc
pop
dec
cld
fadd
push
xor
mov
or
cmp
mov
lods
scas
and
jle
pop
gs
pop
or
jge
clc
call
xchg
jae
mov
jnp
and
leave
jnp
repz
xlat
ljmp
inc
xchg
out
add
dec
pop
pop
mov
mov
inc
push
js
icebp
push
stos
sub
iret
aas
pop
push
test
lahf
jmp
mov
test
xor
lahf
iret
push
leave
mov
mov
mov
cmp
sbb
or
mov
icebp
add
mov
iret
sub
ret
xor
or
or
jle
shl
mov
arpl
xchg
cmp
push
std
pop
mov
adc
mov
sti
jns
mov
xchg
xchg
call
out
mov
sbb
inc
imul
lret
push
jno
and
scas
ss
ds
cwtl
int3
sti
das
sbb
test
lcall
sbb
mov
jle
jmp
dec
mov
outsb
in
outsb
lret
jno
and
scas
jmp
dec
lea
sub
subb
pop
ja
add
gs
push
dec
xchg
mov
xchg
mov
jl
xchg
icebp
xchg
adc
repnz
pusha
mov
adc
inc
addr16
pop
inc
mov
iret
cwtl
aad
mov
hlt
and
and
cwtl
daa
subb
lds
adc
addr16
sub
and
xchg
or
cli
sub
pop
adc
xlat
inc
imull
push
xor
ret
jae
cmc
mov
jne
xchg
fucomp
adc
mov
outsl
data16
mov
xchg
stos
call
inc
repnz
inc
popf
les
pushf
cwtl
je
lods
sub
fcoml
mov
push
fcmovb
sub
mov
adc
bound
imul
insb
pop
daa
iret
stos
into
in
arpl
cs
orl
lods
ret
inc
out
or
shrl
movsb
xlat
mulb
ror
jbe
fcomp
and
imul
and
mov
in
into
test
push
cmp
sub
inc
pushf
insb
xor
xor
sbb
lock
in
xchg
pusha
daa
fdivrp
in
jbe
addl
pop
out
pop
pop
or
call
dec
jle
leave
ljmp
loope,pn
push
adc
testb
jo
sti
adc
xchg
adc
push
push
clc
jo
mov
mov
sub
or
adcb
call
test
xchg
jne
jns
xor
bound
shll
cld
lods
rorl
sub
cmpl
leave
jmp
push
insl
sbb
xchg
ret
dec
xchg
mov
jbe
add
rorl
jcxz
inc
fucomi
mov
std
inc
and
push
mov
outsl
add
sbb
sub
xchg
insb
sarb
lods
loopne
sub
xchg
inc
xor
push
pop
pop
cwtl
call
push
mov
flds
hlt
xchg
push
xchg
mov
popf
cmp
dec
push
mov
push
insb
jle
inc
adc
xlat
leave
xorb
cmpsb
mov
cwtl
cmc
push
mov
rcrb
pop
push
cmp
mov
jno
fstps
jge
sub
mov
in
icebp
xchg
pop
cmpb
or
popf
into
and
jp
push
push
mov
out
les
cmp
out
pusha
fistps
mov
lret
in
movb
push
add
outsb
cmpsb
push
sub
cmp
cltd
push
aas
dec
add
inc
cmp
aad
mov
and
incl
push
add
into
outsb
cmp
fsubrl
test
fmull
mov
cmp
xchg
rolb
and
icebp
add
xchg
adc
adcl
mov
dec
shll
push
push
dec
insl
sub
mov
mov
mov
add
mov
and
cmp
fcmovb
out
jb
aad
arpl
cmp
adc
stc
je
out
repnz
dec
es
scas
sti
sub
insl
pushf
xchg
adc
inc
fsubr
cmp
add
xchg
xor
leave
jmp
mov
inc
xchg
sbb
xchg
xor
jge
push
sub
mov
or
inc
movsl
xchg
mov
adc
jg
insl
sahf
ja
das
push
movsb
leave
or
out
pushf
pop
push
cmp
inc
pop
xchg
xchg
rcrl
jo
repnz
lds
dec
xor
xor
adc
dec
mov
adcl
xchg
in
pusha
je
mov
dec
das
xchg
repnz
dec
jp
outsl
std
jbe
or
adc
shlb
leave
dec
loope
add
sti
jmp
jl
ret
push
sbb
adc
pop
outsl
into
mov
jbe
pop
add
sarb
ds
cli
jle
pop
pusha
push
shrl
mov
and
and
call
xrelease
xor
call
cmp
xchg
test
adc
in
out
and
add
jb
pop
fists
add
loop
ja
pop
mov
sub
ret
fidivs
mov
sarb
inc
int3
clc
pop
mov
push
or
sarb
lods
pushf
adc
mov
sbbl
lods
in
rorl
pusha
test
adc
mov
jl
jae
pop
xlat
setnp
fdivl
jnp
inc
inc
dec
outsl
jns
sbb
mov
stos
jmp
or
jno
or
sarb
sarl
fld
dec
cmpsb
dec
adc
push
ficompl
xlat
mov
xor
inc
jo
cmp
iret
cmp
popa
sub
sub
xor
sub
inc
test
arpl
adc
insl
cmpl
adc
test
pop
cmp
mov
dec
ss
mov
inc
mov
xchg
subb
sbb
mov
pop
xorb
insb
into
imul
insl
nop
fcompl
or
ret
cmp
cli
fcmove
sub
inc
or
jbe
lods
out
mov
scas
dec
inc
jmp
jge
adc
pop
sahf
mov
lods
xchg
add
mov
inc
jp
dec
xor
push
mov
cld
push
dec
iret
loopne
sbb
ljmp
nop
sub
je
xchg
aad
cmp
cs
xlat
hlt
cmp
push
sahf
stos
pop
jns
or
outsb
test
sbb
lret
test
xor
add
cmc
aad
faddp
enter
jbe
out
lds
cmp
dec
popa
leave
int
pushf
and
cmp
mov
xor
cwtl
mov
xchg
cmpsl
pop
dec
jo
fsubs
and
add
mov
test
xor
inc
jmp
jg
cmp
lods
icebp
ret
cld
cmpsl
xchg
mov
mov
push
and
loopne
stc
fcoms
shll
jb
jecxz
xchg
cli
adc
cvtps2pd
les
mov
push
in
cmp
testb
ficomps
pusha
pop
call
andl
mov
dec
jg
cmp
sti
add
xchg
add
dec
fstpl
stos
sub
int3
pslld
pop
dec
inc
lock
hlt
pop
xchg
mov
jb
jb
lahf
mov
ret
icebp
adc
dec
jg
mov
pop
pop
push
insl
xor
icebp
or
cmpsb
lods
jnp
test
pop
das
into
push
cli
jg
push
movsb
ret
js
les
push
lods
fprem
loop
cmpsb
and
out
popfw
leave
push
ret
push
jecxz
xchg
clc
icebp
ds
nop
fs
scas
mov
test
pop
lcall
push
js
movsb
push
hlt
ds
jg
jg
and
dec
cmpsl
into
push
popa
adc
or
call
or
cs
bound
popl
jo
add
push
pop
pop
mov
and
popa
inc
or
jnp
fcoms
test
xchg
add
notl
cmp
mov
mov
cs
in
push
mov
sar
mov
sbbb
in
push
adc
inc
dec
negl
xor
xor
add
dec
fisttpl
test
repz
out
inc
jno
cld
jnp
rol
xor
fstps
or
push
es
scas
cmpb
jge
pop
lods
mov
sarl
repz
loope
dec
push
cmc
sub
cmc
ja
mov
mov
adc
out
imul
inc
jns
loope
mov
scas
inc
cltd
in
in
cmp
jl
adc
adc
sub
inc
mov
lahf
xor
xor
sub
and
or
xor
add
mov
add
rclb
rol
shrb
xchg
fcoms
clc
sarb
mov
out
xlat
push
rcrl
jg
xchg
pushf
mov
sub
or
mov
jae,pn
mov
jecxz
cmc
pop
imul
aas
dec
popf
adc
jg
fcoms
nop
or
lahf
xor
jecxz
fistpl
mov
shll
ficoms
in
xor
insb
push
xchg
sub
gs
jle
inc
xor
ljmp
mov
bnd
cld
adc
mov
hlt
je
into
dec
mov
mov
sahf
and
cmpb
out
lock
lret
int3
mov
pushf
cmp
pop
push
mov
mov
mov
sti
cwtl
loope
xchg
inc
cwtl
push
push
stos
rclb
pop
sbb
jmp
push
cmpsb
rorb
adc
in
lods
leave
shl
cltd
inc
and
mov
push
mov
call
scas
in
pop
inc
adc
inc
stos
mov
out
sarl
shl
jne
es
jge
sub
mov
lods
cld
xlat
cmp
adcb
outsb
or
dec
pop
insb
repz
fcoms
xchg
or
imul
mov
nop
scas
int3
jg
sub
push
fdivs
add
jmp
xor
rorb
mov
outsl
js
out
mov
std
pusha
inc
mov
dec
jle
sub
inc
int3
mov
into
cld
mov
and
dec
shlb
mov
xchg
xchg
mov
hlt
push
imul
daa
dec
ljmp
and
pushf
push
stos
sbb
out
add
ljmp
orl
rol
mov
popf
lret
pop
pop
mov
std
jae
mov
lods
cmp
xor
sbb
fisubs
mov
in
and
shl
outsb
xor
call
sub
dec
push
in
insb
ljmp
ret
sub
aas
and
aad
cmp
or
push
and
ret
xchg
or
jb
inc
je
mov
mov
push
cmpsb
stos
test
dec
mov
sub
add
cmp
in
pop
jg
pop
fsqrt
pop
sti
in
hlt
sub
ljmp
fistpll
bnd
loop
dec
mov
mov
in
mov
or
add
mov
shr
mov
jecxz
jne
and
adc
add
popa
push
dec
repnz
iret
xchg
pop
cmc
add
jg
fidivs
lahf
dec
push
dec
lods
cmp
sub
insl
sbb
pop
test
lret
add
xchg
push
adc
ljmp
filds
sbb
inc
push
in
xor
mov
popa
and
std
xor
add
dec
out
xchg
mov
mov
sbb
mov
pcmpgtd
adc
test
icebp
mov
adc
pop
jecxz
lcall
inc
jmp
nop
mov
inc
mov
xchg
stos
sahf
fldenv
add
insl
push
dec
nop
imulb
insl
lcall
test
ret
jb
adc
dec
dec
ss
sub
jle
push
xor
mov
incl
ret
cwtl
int3
arpl
int3
data16
cmp
and
mov
lretw
out
mov
in
mov
xchg
mov
les
pop
daa
cli
test
jp
jg
cwtl
sbb
fwait
insl
and
scas
inc
inc
shrb
jo
aaa
ds
loopne
jge
push
push
sbb
test
pushf
or
adc
cmp
sbb
test
xchg
or
mov
jp
mov
fidivrl
mov
xor
clc
and
mov
dec
adc
out
cmc
cltd
aaa
inc
js
loop
lret
jnp
sub
imul
aaa
add
mov
fs
sti
dec
cltd
test
mov
mov
mov
xor
aas
cmc
bnd
xchg
jb
xchg
push
and
fdivrp
movsl
mov
dec
daa
sub
fs
addr16
pusha
in
inc
imul
cmp
icebp
in
or
scas
fsincos
out
sbb
adc
fisttps
mov
and
outsb
adc
jmp
dec
ss
dec
and
jb
mov
mov
daa
jle
rolb
sbbl
mov
jmp
cmp
sbb
add
and
inc
shll
cmp
adc
iret
aas
ja
icebp
sub
cmp
lret
or
pop
scas
inc
or
scas
fnstenv
lea
sbb
push
push
mov
sbb
inc
in
dec
into
scas
popl
das
dec
ret
ljmp
mov
push
and
dec
add
jge
and
frstor
repz
jge
cmpsb
mov
mov
mov
insl
add
xchg
mov
xor
call
mov
and
mov
out
addr16
pop
fs
icebp
cs
ja
insl
push
add
pop
sbb
dec
ret
pop
negl
xor
sub
mov
es
push
mov
pop
hlt
cmp
mov
out
scas
popa
pop
aaa
cmp
cs
jle
adc
push
cmpsl
into
inc
fsubp
mov
or
fstp
lahf
test
xchg
jmp
xchg
dec
mov
jmp
jno
pushf
cmc
mov
lret
sub
push
nop
fldenv
lods
mov
sbb
jmp
push
sbb
mov
inc
jmp
add
pop
cmp
add
xor
dec
jecxz
mov
dec
xlat
fisttpl
aad
dec
dec
add
std
shlb
dec
push
and
push
sbb
test
das
adc
sbb
pop
adc
mov
lods
mov
pop
stos
cmpsl
call
sbbb
andl
data16
lods
sbb
mov
mov
cbtw
sub
lret
pop
movsl
push
jecxz
repz
dec
mov
sarb
roll
iret
xchg
lock
shll
and
pop
sbb
dec
arpl
or
fldenv
lahf
loope
ret
push
shll
data16
jnp
sbb
idivl
dec
cltd
mull
push
xchg
out
mov
xchg
scas
lret
nop
test
and
push
int
mov
lcall
lods
out
inc
rcl
dec
stos
sbb
mov
test
popa
shlb
fbstp
push
jp
inc
pop
nop
jb
cmp
mov
jb
cmp
lret
pop
cmpsl
sbb
js
das
push
shrl
inc
cmpsl
repz
and
ds
scas
ljmp
xchg
and
jg
ja
incl
icebp
mov
xchg
ss
jns
repz
cld
call
mov
mov
pop
cmpsl
insb
stos
std
mov
fwait
mov
push
mov
fisttpl
out
dec
mov
xor
rolb
add
sbb
push
sub
cmc
mov
push
and
imul
push
out
lahf
faddl
pop
add
jp
stos
and
jb
adc
int3
mov
jl
push
xchg
scas
adc
in
jns
mov
enter
testl
xor
sub
pushf
mov
arpl
pushf
push
test
xlat
sbb
js
jae
mov
or
push
add
add
inc
insb
je
jge
out
dec
adc
shlb
push
cs
sub
dec
vmovdqu
xor
inc
in
hlt
push
dec
and
enter
mov
ljmp
insb
ds
in
sub
cmp
lods
outsl
shrl
pop
std
pop
mov
and
push
mov
cld
xor
mov
flds
xor
dec
mov
inc
jg
mov
mov
in
mov
jmp
enter
mov
mov
loop
mov
rcl
rolb
insl
enter
mov
jns
pop
test
addb
and
cmp
jns,pt
push
adc
mov
cmc
mov
jp
ss
mov
push
popa
rol
pushf
xor
shrb
mov
int3
cmpsl
xchg
test
xor
rcrb
fdivr
inc
or
inc
lods
and
inc
add
insb
mov
pusha
into
es
push
lods
cmp
inc
jo
push
cltd
mov
out
mov
shrb
outsb
push
pop
jg
mov
or
jmp
mov
fisttpl
mov
lret
push
sub
scas
aam
subl
add
pop
hlt
push
dec
sti
adc
insl
lods
les
add
stc
lahf
dec
dec
add
das
push
inc
fs
subl
mov
pop
out
outsb
adc
fidivs
in
sahf
mov
cmp
pop
sub
jno
gs
lea
out
inc
adc
inc
adc
push
xchg
xchg
xorl
mov
movsb
mov
and
jle
in
mov
mov
add
inc
leave
mov
mov
sub
push
cmpsl
mov
mov
push
lds
xchg
jmp
ss
dec
adc
fs
into
inc
jbe
mov
push
shrl
xchg
sbb
push
fcoms
dec
dec
pushf
movsl
adc
arpl
fldcw
stos
out
and
push
dec
pop
ljmp
mov
sub
ja
inc
stos
mov
outsl
mov
jnp
loop
push
mov
sbb
ljmp
mov
dec
dec
lret
push
and
inc
and
xchg
stc
jge
data16
rcll
lods
loope
stos
inc
les
mov
and
jmp
mov
das
lret
bound
xor
xchg
push
mov
cmp
loope
out
das
rorl
sbb
js
sbb
push
fiadds
std
jecxz
xlat
cwtl
mov
jl
xor
aam
cwtl
fdivs
jg
mov
or
fs
push
icebp
ss
addl
xchg
pushw
dec
loopne
mov
inc
adc
jmp
mov
insl
in
lcall
imul
ret
fcmovne
lret
ljmp
mov
xchg
cmpsb
movsb
cmp
test
mov
adc
push
pop
out
mov
jb
add
mov
imul
jbe
inc
in
scas
inc
std
loope
stc
int3
jne
addr16
popa
insb
jge
push
lods
push
lcall
mov
lea
addr16
jns
jp
lds
lcall
fidivrs
mov
clc
nop
and
loope
cli
sbb
rorl
push
xchg
pop
mov
jb
push
push
pop
hlt
loope
stos
shl
clc
sbb
cmp
inc
test
ja
lock
add
xor
movsb
int3
pop
lret
push
push
and
push
mov
loopne
inc
ss
lea
inc
push
imul
fnstsw
mov
cmp
test
and
pop
leave
dec
movsl
imul
inc
jg
rorl
jbe
mov
pop
repnz
aad
lds
cmp
das
mov
daa
pop
rcrl
xor
mov
nop
ja
jnp
mov
addr16
fdivrs
jle
ja
lock
push
ffreep
pop
int3
pop
dec
gs
psubw
push
sbb
mov
dec
sbbb
xchg
in
pop
inc
cwtl
jne
pop
mov
outsl
fptan
sahf
dec
lret
sub
out
dec
pop
push
xchg
sbb
sub
lahf
rol
push
call
push
adc
pop
lea
jge
pop
push
pop
hlt
loope
mov
fwait
popf
lods
fisttps
add
sti
adc
pop
jp
sub
jg
push
pop
mov
push
in
or
sub
mov
sbb
int3
mov
iret
outsb
dec
mov
jmp
sbb
out
mov
insl
mov
call
add
mov
inc
es
pop
inc
outsl
xlat
push
jbe
aas
test
push
add
push
mov
mov
clc
lock
test
test
outsb
lcall
adc
mov
test
sub
ja
lret
ss
mov
jbe
loopne
jmp
popa
jmp
mov
xchg
sbb
fistpll
pop
lahf
xchg
xlat
js
push
and
pop
js
xchg
int
out
lods
or
sub
adc
mov
jnp
push
int
jge
xor
inc
popa
roll
mov
add
pushf
jnp
inc
pushf
push
add
lea
mov
add
lds
lret
or
rolb
mov
fnsetpm(287
xor
orb
sahf
sub
sub
inc
adc
shll
lret
aas
xchg
cmp
fiaddl
jmp
gs
fwait
push
adc
insl
loope
pop
incb
mov
push
fmull
adc
cmp
outsb
ret
lds
fs
and
sti
movsb
loopne
fcompl
cmp
jno
insb
pop
dec
and
sub
in
imul
jo
xchg
push
fcomip
sub
cmp
or
test
mov
std
push
das
test
xchg
cmpl
shll
inc
call
jp
mov
imul
dec
icebp
jge
mov
push
lahf
sarb
loop
out
mov
push
fsubrp
sub
pop
adc
sub
jecxz
push
mov
rol
add
inc
xor
mov
lahf
or
xrelease
sahf
mov
jns
mov
push
outsl
dec
inc
scas
cld
xchg
dec
and
lods
imulb
into
loop
pop
cld
cmp
lret
dec
sub
and
and
fmuls
cmp
insl
push
mov
imul
andb
jns
push
jl
subl
cwtl
mov
insl
test
mov
ja
xchg
push
loop
and
xchg
jle
ret
mov
add
mov
xchg
inc
inc
stos
jo
fadd
adc
pop
out
mov
pop
sub
mov
adc
inc
mov
nop
shrl
mov
popf
mov
pop
lods
into
popa
mov
jge
inc
pop
ss
dec
push
ret
icebp
cmp
mov
in
out
xchg
jno
and
cld
xor
xchg
push
adc
mov
movsl
pop
sub
pop
popf
sub
aad
lret
dec
addb
aaa
stos
push
or
leave
pop
pushl
dec
sbb
out
clc
adc
mov
stos
cmpsb
repnz
pop
faddp
sub
orb
aam
push
clc
test
rolb
jnp
fildll
subl
inc
lds
sbb
push
ss
les
in
jg
sbb
xor
inc
lret
mov
push
imul
add
jle
fwait
sbb
out
les
lahf
test
ret
dec
ljmp
jo
int3
sbb
mov
testl
das
ret
mov
mov
iret
shll
or
and
hlt
movsb
into
ss
scas
and
dec
add
repnz
popa
cltd
sub
shll
xchg
sarb
add
lea
addr16
mov
dec
ja
adc
cli
pop
mov
in
cmp
add
call
jbe
add
lds
fwait
jae
out
hlt
inc
xor
call
sbb
adc
xor
mov
or
mov
pop
cmp
jmp
sub
pop
xor
les
testl
mov
pop
push
ss
jo
cld
imul
rcrb
rcll
fst
xchg
inc
adc
lds
test
andb
call
ret
cwtl
push
mov
xchg
jp
adc
ss
and
cmpsl
push
cmc
and
push
jge
inc
lods
inc
shlb
faddl
ret
pusha
cmp
mov
aaa
jae
pop
sub
xchg
shll
aaa
xlat
or
inc
adc
jl
sub
sbb
ds
je
loope
dec
clc
movsb
leave
or
or
addr16
jo
fimull
xor
adc
xor
sbb
fildl
outsl
push
addr16
addr16
and
xchg
sub
out
ss
xchg
cs
mov
mov
jb
fildl
push
scas
pop
jmp
cmp
mov
inc
lret
outsl
inc
fdivrs
shlb
sub
faddp
test
xchg
rcll
mov
sub
or
pushf
sbb
movsb
loope
adcb
pop
les
xchg
test
js
jecxz
jmp
inc
sbb
dec
xchg
push
add
sbb
jge
inc
sbb
aad
inc
mov
fwait
mov
mov
movsb
clc
jo
push
pop
scas
hlt
xchg
leave
aas
mov
cltd
scas
shrb
test
in
insb
fadds
mov
daa
lahf
test
ja
push
and
out
loopne
mov
stos
jo
mov
lahf
enter
jns
seto
decb
and
stc
push
mov
sbb
jl
ret
cmpsb
test
sbb
fdivrs
out
sahf
addr16
pop
push
pop
push
adc
mov
jno
push
mov
or
mov
inc
nop
jl
sbb
push
ds
mov
mov
sub
adc
push
cld
adc
ss
adcb
aaa
mov
mov
stc
scas
add
loop
addr16
scas
cmp
inc
fs
pop
jp
in
sub
das
sbb
dec
pop
into
push
jp
sbb
mov
mov
jbe
mov
paddsw
andl
mov
xchg
lcall
popa
jnp
adc
call
and
jno
sbb
call
mov
push
and
sub
ss
std
jmp
lcall
xchg
insl
inc
mov
stos
hlt
add
mov
rcrl
into
adc
loope
dec
test
mov
ret
pop
jnp
push
pop
cmp
stos
xchg
sar
mov
bound
lea
imul
pushl
xor
arpl
xchg
pop
popw
mov
popf
cmp
xor
ret
cmpsl
mov
shlb
push
mov
sbb
mov
push
mov
pop
pop
je
xchg
sbb
out
fdivr
imul
mov
mov
or
dec
jmp
inc
mov
inc
test
cmp
sub
jl
mov
fmul
xor
fs
xlat
ds
push
mov
scas
sarl
inc
adc
popa
dec
jns
xor
sahf
mov
pop
shlb
in
mov
sti
lods
push
sub
popf
and
sbb
xor
mov
cwtl
sub
popf
push
and
mov
fisttpl
lods
sarb
xchg
push
or
push
push
out
sub
cwtl
gs
int
sti
pop
fcoms
sub
sti
inc
mov
jmp
mov
xchg
stc
ja
mov
shr
test
jae
xchg
fwait
nop
inc
jnp
inc
push
and
ffree
mov
inc
gs
xor
imul
sub
in
push
outsb
pop
pop
leave
adc
adc
ds
cmpsb
loop
dec
mov
sbb
fwait
in
pop
mov
mov
mov
push
aad
inc
loop
inc
and
push
and
push
test
cmp
lret
push
or
pop
mov
stos
and
lods
cwtl
cmp
inc
sub
sbb
mov
jae
mov
sub
sbb
sub
add
shll
mov
outsb
lea
mov
loope
cld
cmp
sbb
dec
jmp
out
mov
push
sbb
mov
cmpsl
lods
xlat
shrb
push
and
inc
mov
push
repnz
pushf
clc
dec
pop
xor
jg
hlt
bound
repz
jg
inc
leave
bound
inc
or
ret
lock
adc
push
add
imul
cmp
ret
sahf
mov
sbb
or
mov
pop
lret
and
and
out
dec
push
shlb
jle
enter
adc
cmp
lods
cwtl
bound
push
sbb
fs
mov
jb
fsubl
xor
insl
and
push
dec
ljmp
push
adcl
xlat
repnz
adc
add
arpl
sbb
in
mov
cmp
add
loop
mov
imull
xchg
cmp
insl
ret
pop
add
or
dec
fldcw
lock
mov
fdivs
mov
jbe
int3
enter
xchg
call
mov
in
pop
jmp
cmpsb
in
imul
push
fidivl
push
lea
mov
int3
jmp
and
mov
insb
leave
push
xorb
push
sub
jnp
lahf
cltd
stos
mov
imul
into
sub
fdivs
sbb
ja
pop
mov
push
mov
aaa
in
sarb
inc
stos
mov
mov
or
loopne
push
cmc
mov
dec
mov
mov
mov
outsl
sub
popa
push
cli
or
dec
add
xchg
cmc
jno
sub
leave
add
lds
out
sub
cmp
jb
push
and
ja
rolb
mov
xor
xor
aam
xchg
pop
sub
addb
mov
pop
adc
dec
orl
and
mov
or
mov
loopne
scas
adc
stos
sbb
sub
movsb
lret
loopne
mov
push
out
push
stos
shl
lcall
jb
xchg
or
fbstp
pop
pushf
or
das
inc
test
mov
mov
mov
and
fisttps
xchg
sahf
pop
andl
xor
mov
sub
ret
lds
inc
rcll
mov
jge
lock
clc
insb
roll
and
sti
stc
sub
ljmp
stos
sbb
push
sub
xlat
in
cld
pop
ret
aas
mov
jecxz
jnp
adc
xor
push
adcb
cwtl
xchg
roll
adc
mov
inc
pop
lcall
mov
je
jmp
pop
insl
and
arpl
add
xor
jb
cmp
mov
dec
sbb
lods
pop
sahf
sarb
in
add
fiaddl
dec
mov
ds
sbb
cltd
push
ret
inc
scas
enter
mov
pushf
push
fstps
mov
pusha
mov
cmovno
pop
jns
mov
in
test
mov
adcb
test
fwait
and
add
gs
adc
repz
inc
pop
pop
add
sbb
inc
mov
mov
inc
nop
cld
inc
loope
dec
or
dec
pop
adc
insl
rcrb
lock
popf
test
xor
xor
aaa
fiadds
jne
enter
push
or
cmp
xchg
pop
push
repnz
inc
psadbw
sub
clc
xchg
ljmp
xchg
jne
lods
jbe
xor
xchg
in
gs
sarb
ljmp
or
cmp
rcrl
or
cmc
fnsave
jge
adcl
push
dec
int
repnz
out
cld
loopne
xchg
movsl
and
das
das
scas
cmp
xchg
dec
mov
rclb
pop
scas
jmp
jmp
shrb
leave
or
test
mov
out
imul
jecxz
xlat
fisubrl
fcomps
aad
dec
fwait
jge
xorb
js
sbb
test
inc
inc
pop
and
popa
push
push
mov
or
xor
sbb
test
popl
add
cmp
lods
jg
je
lret
push
les
push
clc
es
jo
lahf
push
mov
fucom
daa
test
mov
pop
ja
cmp
int
xorb
cmp
adc
adc
leave
and
ja
ficoms
sub
pop
out
xchg
mov
mov
pop
or
clc
rorl
push
loop
jo
mov
mov
jp
xchg
pop
imul
loopne
push
fdivs
adc
enter
movsb
mov
pop
lahf
rclb
jge
add
dec
cmc
aam
add
gs
mov
inc
pop
xlat
push
jmp
int3
and
lret
push
sub
data16
mov
in
loope
sbb
mov
mov
inc
xchg
aad
cwtl
pusha
xchg
js
or
ret
out
lock
sub
push
inc
iret
imul
dec
popa
fimull
pusha
dec
xchg
push
aad
mov
test
xor
jne
loopne
rcrl
inc
inc
inc
sub
push
mov
xchg
cltd
enter
sub
or
stc
jecxz
inc
mov
leave
hlt
test
or
or
and
adc
mov
push
pop
pop
cmp
cltd
mov
or
ljmp
lock
or
mov
sbb
add
jae
add
xchg
in
in
pop
fiaddl
scas
mov
add
rcrl
cmp
hlt
lret
jg
int
je
cmpsb
xlat
das
sbb
xor
and
mov
inc
sbb
mov
pop
jo
outsb
pop
cmc
pushf
movsl
xor
add
add
jbe
inc
xorl
jbe
pop
dec
ljmp
mov
out
ss
xchg
add
rorb
into
push
fmul
dec
les
not
xchg
gs
leave
mov
test
ret
cwtl
int3
adc
movl
ficoms
xchg
sub
push
inc
testb
push
imul
push
pop
pusha
js
cmpsl
jle
and
xlat
clc
pop
add
push
sbb
cs
test
mov
sbb
rol
push
mov
mov
adcb
out
fdivr
mov
sbb
call
loope
sti
loop
adc
xor
mov
push
and
mov
pop
rcl
div
insb
cmp
stc
xor
jl
push
jmp
sbb
es
and
rorl
in
cmp
jae
outsb
fwait
cmp
stos
jbe
cmp
xchg
sbb
xor
cmpsl
out
lea
sti
dec
jnp
sub
mov
pusha
dec
stos
push
lods
nop
stos
sarb
push
push
clc
pop
data16
mov
or
xor
add
xor
sahf
mov
sub
jp
lahf
push
jle
pop
gs
push
rolb
lahf
and
out
cld
jecxz
stc
jmp
push
adc
sub
popf
loop
pop
mov
push
add
adc
aam
sub
jo
les
shll
xor
sbb
lods
pusha
push
iret
xor
fimull
push
clc
test
sbb
jnp
rol
dec
dec
mov
xchg
call
rorb
movsb
icebp
and
xchg
add
ror
das
sub
testl
mov
add
mov
and
mov
push
dec
inc
out
push
add
xor
sub
icebp
xor
xchg
js
adc
dec
sarb
rorl
pop
xor
shrb
inc
lahf
jle
std
pop
stc
hlt
mov
rol
fstpl
jp
add
or
mov
pusha
into
mov
xor
scas
cld
cmp
add
loopne
mov
scas
jmp
push
mov
add
cs
je
push
insb
push
cltd
adc
fisubl
jnp
ss
xchg
adc
xchg
sub
pushf
repnz
int
sti
repnz
mov
pop
mov
jae
mov
mov
cmpl
mov
subl
jecxz
mov
add
push
and
insb
fwait
push
mov
lret
cmp
mov
jae
xor
mov
fstps
cmp
ret
inc
sahf
pop
fs
es
sub
icebp
mov
mov
rcll
int
sahf
out
sbb
rorl
in
fidivs
outsl
cli
nop
pop
movsb
push
pop
sub
rcrb
lods
pop
nop
add
out
push
or
pop
sbb
dec
push
adc
or
sub
popa
dec
stos
cmp
xchg
loopne
push
mov
rorb
push
jge
push
pop
inc
push
out
cmpsb
xchg
movsl
outsl
popa
loope
cmp
movl
ret
sarl
repnz
sbb
and
repz
or
cmp
rcrb
rcr
push
mov
jmp
clc
push
stc
sti
cmp
icebp
pop
mov
mov
adc
sahf
in
pushf
mov
push
mov
xlat
mov
sub
and
xchg
int
xchg
lcall
cmp
cli
nop
subb
test
in
or
fdivrs
fisttpl
ret
add
dec
pop
xchg
xchg
add
mov
inc
out
adc
push
xchg
jnp
test
mov
jae
popa
mov
lods
push
cs
xchg
gs
adc
sub
test
pop
cmp
pop
adc
cmp
jno
inc
pop
adc
dec
ficompl
pop
out
push
pusha
inc
jle
jmp
mov
in
shl
out
idivb
or
xchg
imul
ret
jmp
mov
fisubrl
mov
mov
fsts
ret
shll
in
les
lea
pop
mov
and
cmp
adc
xchg
out
sbb
pop
lret
and
dec
mov
cmp
popf
pop
and
aaa
out
ret
sub
mov
or
push
push
sbb
notl
roll
dec
push
push
dec
sbb
mov
pusha
rcll
pushf
lods
dec
mov
jb
jl
push
push
lea
hlt
xchg
dec
je
sbb
cmp
ret
in
pop
js
mov
insb
jns
xchg
add
fwait
les
push
aad
xchg
addr16
inc
pusha
xor
shll
bound
leave
out
pop
hlt
cmp
inc
jl
cmc
xlat
and
push
sbb
push
sub
push
data16
in
mov
cli
mov
outsl
jnp
cmp
xchg
out
mul
xor
stc
mov
xchg
jge
add
and
or
jle
adc
ds
sbbl
push
arpl
arpl
xorb
cltd
pop
xchg
fisttpll
aaa
das
es
aas
or
xor
push
jmp
fsubrp
leave
jbe
pop
mov
outsb
jecxz
js
out
sbb
loop
xchg
fwait
jnp
movsb
adc
aaa
lods
popa
out
and
pop
enter
mov
dec
fnsave
ret
in
pop
lea
mov
jp
ret
out
mov
test
inc
inc
and
mov
das
cmp
scas
mov
and
repz
jne
mov
stos
push
xor
repz
sub
xchg
lock
sbb
cld
dec
inc
pop
inc
jge
xchg
add
sub
mov
arpl
pusha
inc
fbld
dec
xchg
sbb
or
mov
aaa
fimuls
push
jge
inc
sbb
push
inc
push
or
cwtl
js
pusha
enter
mov
movsl
pushf
sub
pop
push
ja
xchg
pop
fdivrs
ljmp
roll
ret
sub
sub
mov
hlt
sbb
push
in
icebp
popa
xchg
inc
mov
js
mov
testb
insb
sbb
adc
mov
adc
mov
pop
fdivs
movlps
and
je
in
mov
rcll
inc
push
inc
inc
jb
test
dec
in
sub
mov
push
sbb
stos
vcvttss2si
mov
sbb
inc
dec
xchg
loopne
aad
ficompl
inc
adc
lods
inc
ss
pop
mov
push
inc
cmpb
push
hlt
mov
xchg
jl
fsubl
sti
test
inc
jns
adc
jnp
icebp
nop
cmp
push
cltd
cld
dec
addr16
sbb
out
fwait
mov
mov
stc
in
aaa
ficomps
ljmp
daa
inc
inc
lret
inc
mov
call
fsubl
xchg
jbe
imul
ret
frstor
fildll
movsb
push
les
mov
lret
xchg
cltd
push
mov
repz
push
mov
popa
ret
cmp
dec
repnz
jp
inc
mov
sub
movb
mov
mov
cmp
mov
test
mov
inc
or
and
xlat
adc
mov
pop
pusha
and
jae
lret
mov
add
mov
cmpsb
xor
sub
push
fwait
adcb
fimull
push
sbb
mov
or
sbb
fsubrl
jp
pop
hlt
xor
stos
data16
dec
in
pop
jo
pop
enter
xchg
mov
push
inc
fsts
mov
test
std
cltd
mov
incl
cmp
test
dec
xchg
in
xrelease
add
xchg
mov
and
sub
inc
inc
sub
jae
push
loope
xchg
ds
adc
cld
cmpsb
ret
sbb
adc
or
lret
pop
mov
xor
mov
inc
mov
adc
cmp
pusha
sti
das
sbb
dec
mov
lret
fwait
pop
bound
jno
and
lods
xor
mov
aas
xchg
push
xchg
ja
and
cs
xor
mov
mov
add
jge
stos
hlt
xor
stc
lods
sbb
pop
cmpsl
cmp
adc
call
lea
jns
push
add
xlat
fadd
jg
rorl
adc
fisubrl
imul
pop
addr16
xor
inc
bound
mov
cmp
xor
fldenv
loope
rcr
pop
pusha
in
xor
cmpsb
or
ds
or
fidivs
push
aad
add
outsb
mov
fisttpl
std
mov
mov
loop
test
and
sub
push
cmp
loop
sbb
in
cmp
out
das
push
jne
ficoms
mov
push
mov
fiaddl
fldpi
sbb
or
mov
es
aam
and
cmp
out
in
dec
mov
lret
out
xor
jb
jp
jp
loop
nop
dec
mov
stos
shll
push
cmp
adc
inc
bound
aas
pop
data16
adc
adc
cltd
add
lret
push
jecxz
mov
pusha
in
mov
es
sub
adcl
cli
push
xchg
inc
aaa
push
pop
push
outsb
mov
mov
lcall
mov
ja
aad
mov
test
lret
jmp
sbb
push
pop
ljmp
data16
jno
je
std
cmc
test
xor
pop
jg
rorl
out
gs
sub
jg
rorl
into
inc
scas
das
jnp
fs
mov
mov
push
push
jb
and
pop
dec
or
mov
fstpl
lahf
les
pop
lock
add
push
mov
lods
push
xor
push
cmp
les
add
nop
pushf
in
cmp
repz
sbb
jp
mov
sub
popa
loope
pop
call
jne
xor
fwait
mov
xor
jmp
popa
mov
xor
shl
ljmp
loopne
mov
insl
lea
jno
test
sub
xchg
cmp
mov
ror
inc
in
jmp
fcomp
mov
in
scas
fldl
lock
push
dec
sbb
enter
fs
int3
fisttpl
fsubrs
leave
xchg
mov
dec
add
rorl
adc
imul
adc
gs
jmp
scas
std
mov
mov
mov
pop
cltd
adc
mov
mov
popf
push
and
adc
jge
sub
into
pop
call
jp
iret
jmp
notl
lret
fistps
mov
mov
jae
mov
rcr
rorb
cwtl
adc
fcompl
push
pop
lock
xor
ret
xchg
js
cld
mov
test
test
dec
cwtl
ds
add
sub
stc
out
dec
lea
mov
jo
repz
movsl
mov
adc
pop
jne
into
jp
lret
mov
gs
loopne
mov
nop
xor
lea
sbb
mov
mov
scas
cmp
stc
mov
xchg
je
xchg
test
loopne
xor
sub
imul
mov
cwtl
or
sbb
mov
mov
arpl
inc
ret
loopne
push
ss
inc
js
mov
into
shlb
xor
stos
mov
or
movsl
cmpsb
mov
pop
in
mov
call
pop
pop
imul
repnz
jo
pop
mov
cmp
adc
add
out
add
aad
sbb
jmp
aaa
mov
sarl
xor
push
jp
xor
jg
dec
push
leave
or
outsl
pop
loopne
mov
mov
push
sub
inc
sub
testb
lea
clc
ret
dec
lods
and
insl
mov
lahf
or
pop
xor
pop
sub
bound
jp
incl
orb
out
popa
xchg
rcr
adc
cmpb
filds
push
pop
das
scas
jge
jl
leave
lcall
das
cs
adc
mov
pop
xchg
std
mov
div
dec
and
in
inc
lods
and
fstpl
les
push
sub
dec
xchg
arpl
gs
repnz
mov
push
or
add
jmp
jb
and
mov
decb
mov
jecxz
jns
cmp
pop
xchg
xchg
imul
cmp
push
xchg
int3
sub
mov
mov
in
or
gs
enter
out
insl
cmp
cmpsb
mov
xchg
test
popa
mov
mov
outsl
pusha
inc
mov
scas
jns
fnstcw
and
out
fisubrl
xor
pusha
or
shlb
mov
loop
lds
mov
loopne
enter
in
lods
xchg
xchg
xor
dec
ret
mov
jo
mov
cmpsb
xchg
popa
rolb
test
lea
iret
sub
add
icebp
adc
mov
sbb
enter
test
mov
mov
stos
sbb
jle
aad
pop
addr16
push
push
mov
cmp
pop
out
repnz
ror
push
ja
or
cmp
popa
jmp
sbb
adc
inc
loop
out
outsb
dec
fidivrs
mov
movsb
nop
cld
loop
cmpsb
mov
jns
mov
jb
mov
mov
imul
scas
testl
outsl
insl
mov
sub
insb
ljmp
sub
push
cli
in
or
es
sub
cwtl
outsl
sbb
xchg
xchg
xchg
loope
push
mov
icebp
sahf
cs
or
jno
mov
lret
in
cmp
or
imul
in
adc
push
sbb
dec
mov
sbb
mov
scas
pop
imul
dec
aaa
fidivrs
pop
xchg
insb
mov
sarl
aaa
insb
imul
jne
xor
dec
lea
push
sub
outsb
mov
adc
imul
dec
jge
in
mov
mov
pop
add
and
add
shll
or
push
cli
dec
cli
aas
mov
jmp
lds
inc
lahf
jg
adc
and
testb
inc
or
mov
imull
dec
hlt
stos
push
out
cmp
insb
inc
mov
lds
outsb
lock
mov
out
pop
xchg
clc
mov
sub
dec
test
inc
sbb
daa
sbb
adc
mov
pusha
sahf
inc
fstpt
dec
mov
mov
adc
adc
mov
ret
add
xchg
icebp
mov
imul
clc
das
mov
sbb
aaa
add
mov
push
repz
push
outsl
push
insb
js
in
mov
pop
aam
call
sahf
mov
test
sbb
lret
or
add
popf
cli
loop
xchg
xchg
js
nop
mov
mov
jno
dec
cs
adc
jb
test
rclb
push
mov
cld
mov
in
mov
rorb
cli
je
xlat
jnp
cmp
int
cmp
adc
xchg
hlt
stos
sub
hlt
cmp
and
ss
ss
xchg
or
and
mov
out
mov
fucomip
aaa
or
pop
mov
bound
arpl
mov
push
mov
mov
add
or
pop
sbb
adc
dec
loopne
sbb
jnp
push
push
cmc
cs
cmp
loopne
cwtl
push
jo
cmpsl
testl
movnti
jbe
out
fdecstp
adc
les
jbe
fbstp
mov
jno
push
inc
adc
cmp
stc
loopne
repnz
pop
dec
mov
add
sbb
push
icebp
cltd
shll
dec
cmp
add
pop
cmc
inc
sub
and
jp
outsb
ljmp
mov
outsl
push
xor
cwtl
adc
insb
clc
adcb
mov
shll
pop
cwtl
idivb
sbb
clc
mov
ficoml
sbb
popa
or
and
hlt
inc
into
repnz
mov
roll
mov
in
ret
out
cmc
jmp
push
in
loop
stos
inc
cwtl
xchg
sbb
adc
mov
int3
mov
pop
mov
scas
jno
jbe
sbb
mov
or
jo
jp
gs
dec
push
lods
cltd
loop
sbb
sbb
sbb
inc
dec
lcall
nop
mov
push
xchg
or
repnz
lods
decb
cmp
in
push
dec
mov
ds
dec
fbld
lret
cmp
stc
test
xchg
mov
cmp
xchg
mov
mov
pop
dec
cli
cmpb
mov
cs
and
call
out
clc
xchg
xchg
testl
add
and
mov
repnz
dec
mov
jle
sbb
pop
imul
mov
xchg
repz
imul
cmpsl
cmp
outsb
mov
shl
xlat
sarl
fwait
popf
add
sub
pop
lea
add
sti
push
jmp
fcoms
xor
and
add
xchg
mov
dec
hlt
addl
xor
jle
cmp
sti
push
pop
scas
push
hlt
lods
in
xor
scas
and
cmp
pop
aaa
dec
int3
loope
xchg
outsl
pop
scas
jae
faddl
repnz
es
dec
dec
outsb
cmp
mov
mov
adc
stos
sub
sahf
xor
rcl
mov
mov
call
cmp
insl
iret
adc
xor
or
scas
jne
in
adc
cwtl
inc
stos
lock
or
jmp
push
cltd
cmc
cmp
repnz
mov
pusha
xchg
dec
popa
sbb
inc
lods
dec
testb
xchg
mov
or
mov
lods
push
test
add
and
lahf
pusha
stc
push
cwtl
fsubr
test
rol
push
xor
inc
mov
aam
jnp
pop
out
pop
mov
mov
inc
movsl
call
sub
push
push
retw
inc
test
jnp
sbb
mov
aam
push
ret
cltd
jecxz
pusha
dec
jo
jge
cmp
xchg
and
loopne
and
cmp
lret
loopne
xchg
pusha
shl
rol
inc
and
jmp
test
orl
lock
cmp
jecxz
scas
ret
aad
fs
lds
clc
pushw
lcall
jge
in
inc
pop
loope
pusha
mov
jno
jb
mov
inc
adc
ja
sub
jge
jmp
jle
mov
and
sbb
aam
mov
cmp
outsl
out
push
lods
out
xchg
inc
xchg
xor
test
ret
cmp
es
inc
pop
mov
xchg
fs
loope
shl
arpl
pop
adc
imull
add
fcoms
mov
adc
fimull
sbb
push
add
loope
daa
lcall
xchg
loope
dec
test
pop
lock
decl
cmp
jo
in
mov
in
inc
inc
in
scas
sti
mov
adc
lea
arpl
xchg
out
or
xlat
sbb
mov
dec
bound
lahf
dec
das
daa
push
and
fidivs
inc
fistps
fdivrp
add
insl
adc
js
shlb
xchg
sti
jbe
adc
ret
adc
jno
aam
sub
shl
adc
and
orb
add
jg
fs
mov
les
lds
jno
loope
cmpsl
rclb
int
into
jnp
inc
push
das
mov
scas
lret
mov
and
in
jo
mov
xlat
popf
test
mov
xor
mov
jmp
adcb
loope
sub
data16
jmp
xor
or
sbb
dec
pxor
rclb
movsl
fisttpll
sbb
mov
addl
sbb
out
sub
pusha
mov
mov
xor
xorb
pop
aas
divl
sbb
ja
outsl
lcall
pop
fstps
fsts
jp
out
mov
aam
popa
dec
cmp
adc
mov
cmpsl
fists
and
jle
mov
pop
adc
cmp
xchg
jmp
loop
push
shrb
mov
pop
jecxz
push
lea
lret
mov
icebp
fdivrs
lods
lea
or
out
xor
jns
shll
clc
iret
xchg
movsb
pusha
and
lea
mov
and
mov
sub
movsl
cmp
add
pop
pop
je
add
mov
imul
push
enter
adc
out
movsl
sub
cs
mov
dec
pop
int3
insl
icebp
sub
data16
mov
in
cmc
mov
push
ss
out
push
cmp
std
ret
cmp
adc
adcb
lods
mov
cmp
xor
mov
in
cwtl
mov
dec
sbb
and
cmp
jge
push
mov
out
jb
nop
in
or
flds
and
add
in
pop
inc
fistps
out
add
xchg
xchg
xchg
mov
fdivl
fldt
je
ret
mov
daa
insl
xor
clc
jbe
call
das
mov
out
loope
je
xchg
add
loop
dec
mov
adc
inc
inc
scas
sbb
push
fsubrs
add
adc
negb
dec
or
jns
adc
add
mov
mov
es
lods
push
pusha
inc
inc
cmpsl
insb
adc
sahf
mov
adc
add
sbb
mov
setbe
or
pop
cld
pop
lret
jne
and
shll
into
pop
sub
shlb
xor
repz
in
dec
sbb
stos
xchg
xchg
add
movsb
push
mov
dec
xor
mov
mov
pop
mov
out
dec
mov
fiaddl
xor
mov
or
movsl
imul
fdivs
xchg
inc
pop
and
pop
stc
jl
fidivrl
rorl
mov
lcall
xor
enter
xchg
jbe
pop
sub
sub
jno
ret
xor
scas
jmp
leave
sbb
sbb
sbb
cmp
xor
pop
outsl
sbb
jle
xchg
pop
push
movsl
cwtl
call
mov
sbb
addr16
pop
out
xchg
inc
stos
mov
push
jbe
mov
and
cltd
adc
mov
pop
stos
pop
xchg
je
pop
cmp
mov
xchg
insb
inc
std
pop
andl
pop
cmp
xor
or
push
stos
test
xorl
pause
scas
mov
xchg
xor
cltd
and
lods
xchg
xchg
loope
fisttpl
cmp
arpl
aas
jne
adc
sti
jb
rcll
pop
push
fstp
out
pop
popa
sbb
mov
and
pop
xchg
inc
in
cmp
jb
mov
push
pop
popf
cmpl
rorb
cmpsl
cwtl
enter
andl
mov
sbb
lea
fwait
sub
call
mov
sbb
pop
add
ror
pushf
mov
mov
mov
mov
mov
repz
fwait
divb
inc
movsb
xchg
mov
cmp
loopne
push
add
or
out
cmp
inc
jecxz
add
or
fstpl
xchg
pop
and
rclb
stos
in
add
test
push
jo
dec
ret
jg
pop
lcall
and
cmp
sub
and
pop
or
or
jns
mov
sti
pop
pop
fdiv
js
ljmp
cmp
arpl
out
push
fldcw
dec
xchg
orb
cmpsl
sub
lds
cmp
ja
dec
imulb
add
loope
aam
mov
std
and
stos
and
int
sti
mov
push
cmp
mov
jmp
ds
in
mov
mov
push
outsb
divl
cli
iret
jp
and
sbb
jge
inc
push
lock
movsl
popa
push
imul
sahf
cmp
dec
mov
cli
push
mov
mov
xor
test
sbb
push
add
lret
sahf
cmpb
dec
xor
mov
xchg
xchg
jnp
add
adc
xchg
outsl
dec
sbb
mov
cwtl
push
push
xor
push
sbb
loope
fnsave
dec
cld
cmovs
in
adc
jns
sbb
cltd
out
xchg
cmp
lods
aas
lahf
into
popl
icebp
in
jl
out
bound
dec
inc
aas
push
addr16
daa
fdivs
cmp
sbb
nop
ljmp
jbe
push
inc
lret
aam
cmpsl
add
mov
push
or
mov
cmp
ljmp
out
int3
in
cmp
sub
ds
pop
xor
push
inc
loope
mov
add
mov
pushf
ljmp
ja
or
sub
pusha
sbb
fwait
xor
insb
xchg
mov
xor
sbb
test
cmpsb
dec
jge
das
dec
xor
sbb
cwtl
pop
add
jae
ss
xor
add
test
call
loopne
loope
mov
sqrtps
mov
jp
scas
adc
mov
xor
cmp
mov
addb
add
mov
dec
into
icebp
or
fimull
push
cmp
mov
pop
cmp
and
lock
xor
dec
cmp
in
pop
fsubp
rol
adc
sti
stc
insl
roll
adc
mov
loop
sarb
call
cmpsl
add
int
dec
ret
xchg
out
enter
stc
pop
and
out
sbb
fwait
lahf
in
mov
rorl
jo
fcomip
aas
sahf
notb
and
jmp
dec
out
mov
std
movsb
cwtl
cli
or
repz
leave
xlat
mov
xchg
pop
and
clc
xor
or
in
pop
pop
in
dec
push
popa
xchg
pop
sbb
cltd
adc
jae
or
ror
mov
out
mov
inc
stos
repnz
loop
adc
leave
mov
insl
lret
and
bound
ret
or
jb
ret
adc
in
jl
addr16
das
cwtl
pop
mov
daa
inc
loopne
insl
add
int3
jne
out
sub
icebp
push
adc
in
popf
icebp
das
iret
mov
and
adc
jge
xor
stos
pop
test
push
popf
inc
mov
loope
cltd
ret
xor
lock
test
pop
inc
jns
xor
push
xor
imul
mov
mov
mov
arpl
pop
enter
sbbl
push
jae
mov
add
cmp
popf
pop
iret
xchg
push
dec
lods
outsb
ja
cmpsb
xchg
mov
dec
mov
mov
jbe
jb
loopne
push
push
jge
jno
xchg
adc
push
popf
movb
add
dec
xchg
dec
sub
mov
loope
fs
hlt
push
add
cmp
mov
cmpsb
sbb
ja
into
mov
push
inc
stos
sti
cmpsl
mov
dec
rcll
imul
mov
mov
sub
jp
xchg
shrl
and
test
inc
mov
and
cmp
add
sub
and
ss
mov
fwait
les
pop
repz
je
cmp
mov
jl
iret
idivl
aaa
mov
sub
lods
mov
cmp
or
pusha
jae
inc
fcoml
loopne
in
cmp
loopne
xor
dec
mov
jb
sub
mov
xchg
mov
dec
mov
dec
or
insb
xor
movsb
or
in
loopne
inc
xor
les
repnz
icebp
scas
addb
jecxz
in
addr16
in
jo
mov
subl
nop
xchg
push
stos
rsqrtps
sbb
mov
mov
inc
test
lds
cmpb
lar
inc
xchg
ja
push
jo
nop
outsl
mov
mov
fst
pop
mov
test
shll
and
lods
gs
fstps
add
mov
push
dec
xchg
out
lret
lret
mov
dec
fidivs
inc
adc
push
popa
xchg
xchg
jae
or
jl
pop
or
pop
inc
fwait
outsb
xor
jmp
xchg
popa
add
adc
xor
jge
mov
jns
out
inc
mov
xchg
pop
stos
lds
add
and
mov
dec
mov
dec
outsb
cli
inc
push
je
lret
ja
sub
cmp
add
ljmp
fdivrp
out
sub
repz
orl
xchg
and
jle
mov
lret
roll
lret
addr16
dec
xchg
xor
cmp
addb
push
inc
inc
das
lea
and
dec
js
push
pop
cwtl
rorb
xlat
sbb
inc
stos
and
mov
shlb
aad
sbb
fs
mov
lret
sub
stc
and
std
jge
sub
loop
aad
xlat
mov
lcall
mov
or
add
cmp
repz
lcall
cmc
jp
adc
pop
or
out
or
movsl
cmc
loop
jns
aas
sbb
aad
push
icebp
pop
mov
out
xchg
test
in
ljmp
bound
repz
cmpl
test
out
fldenv
cwtl
rorb
or
shlb
dec
fildll
lods
inc
cs
xor
cli
cmpb
mov
scas
sbb
inc
ret
movsl
mov
lds
or
les
pop
dec
adc
ret
or
adc
ds
test
jnp
pop
jo
insl
cs
fdivrl
push
jnp
sub
stos
dec
jg
enter
push
orb
mov
out
scas
jg
mov
cwtl
shrb
jmp
testl
sti
or
ljmp
mov
shlb
dec
push
sbb
leave
test
adc
jo
dec
jnp
xor
push
add
popf
push
idiv
jp
pop
repnz
in
sti
rcr
insb
cmc
inc
test
xor
xor
addr16
push
inc
and
aad
sub
iret
negl
mov
sub
mov
adc
adc
imul
jp
in
or
scas
fstl
add
or
mov
mov
call
mov
hlt
mov
and
mov
push
adc
rcrb
int
jge
leave
and
mov
mov
xor
jp
pop
jecxz
jne
push
mov
ss
xchg
pop
ret
sbb
out
pop
jg
push
in
dec
cmp
in
xchg
ficomps
and
add
es
testl
sbb
and
pushl
outsl
ret
dec
pop
lcall
out
mov
push
imull
dec
and
push
pop
aad
rorl
cmpl
cltd
ret
cli
jl
subl
stc
pop
adc
and
xchg
sub
scas
fs
ret
mov
fiadds
mov
mov
mov
sahf
xchg
pop
sti
push
pslld
mov
fcoms
add
ljmp
xchg
stos
xor
adc
lea
jg
jg
push
push
mov
jno
call
popa
cld
and
jecxz
jne
jbe
mov
or
pop
add
inc
xor
cmpsb
inc
push
and
jl
repz
or
xor
xor
outsb
ret
popa
lods
dec
push
jmp
movsb
in
sub
out
fdivrl
mul
sbbb
add
jle
inc
push
arpl
adc
daa
xor
sub
sbb
popf
in
mov
pop
outsb
lahf
mov
mov
call
cmp
mov
adc
jb
outsl
outsb
dec
push
sbb
adc
add
push
test
sbb
dec
sbb
popf
clc
cmc
jg
sub
out
decb
sub
jg
inc
sbb
popl
dec
add
leave
shll
pop
mov
mov
popa
repz
in
add
push
pop
mov
mov
loop
jne
stos
xor
adc
cmp
cmp
push
in
sbb
mov
icebp
adc
paddw
arpl
lret
pop
dec
mov
cld
stos
mov
es
xor
in
test
test
mov
add
arpl
and
xchg
push
adcl
stc
lea
pop
fcomi
xchg
jp
ret
scas
sub
xchg
jno
jge
scas
shlb
xor
insl
jp
cld
sahf
adc
pop
aaa
xchg
loope
inc
or
and
dec
ficomps
lods
xchg
pop
inc
push
sub
dec
sbb
clc
sbb
pop
adc
pop
icebp
xchg
sub
add
lea
mov
es
push
lods
xchg
mov
add
shl
out
roll
loopne
mov
pop
jp
pop
xor
xor
add
jns
stos
cmpsb
sbbb
mov
in
inc
mov
lock
adc
lds
sub
add
fists
add
sbb
mov
sbbb
mov
aas
cld
jge
cld
mov
dec
add
xchg
and
repz
hlt
xchg
test
adc
mov
mov
add
mov
pusha
xlat
fwait
repz
sub
out
mov
lods
xchg
lcall
ss
outsb
insl
dec
cmp
pop
fadds
or
or
pop
and
test
in
mov
or
inc
notb
xor
cmp
lea
add
test
fisubs
call
pop
xor
in
loop
adc
pop
notb
aas
cs
jp
sbb
sbb
fdivl
lock
in
outsl
in
pop
cmp
lds
aas
aaa
adc
and
xor
fwait
adc
test
dec
ficomps
addr16
mov
hlt
dec
cwtl
fisubs
lods
out
mov
out
fcomp
push
movb
adc
sbb
xchg
test
pop
subb
fistl
into
cmp
scas
lret
std
test
cmp
jne
xchg
std
mov
mov
inc
push
pop
sbb
dec
inc
sub
in
inc
addr16
adc
push
fdivrs
push
es
test
addr16
xchg
mulb
fisttpll
pop
xchg
jg
std
jno
add
enter
jno
xchg
fimull
cmp
test
pop
aam
mov
fildl
mov
add
push
dec
cmp
jmp
dec
mov
imulb
cmp
lret
insb
pusha
shlb
xor
inc
ret
sub
adc
clc
mov
mov
pop
std
xor
lock
jns
bound
mov
mov
xchg
sarl
jns
add
mov
mov
out
scas
out
pop
xor
outsl
cmpsb
or
ds
jmp
mov
cmpsb
imulb
push
out
pop
arpl
pop
pushf
xor
xchg
inc
movsl
adc
push
repz
fstps
jge
jne
js
loope
sub
cmp
mov
repz
cwtl
aad
lock
pop
cwtl
sub
mov
sahf
dec
pushf
add
xor
add
ljmp
nop
pop
mov
lea
or
das
pop
pop
cmp
fwait
jle
bnd
sbb
jmp
and
xchg
das
sbb
cmp
adc
pop
xlat
mov
mov
inc
shrb
and
out
roll
loop
push
negl
sub
sbb
fs
negl
lods
sub
or
repz
mov
sub
cmp
loope
and
xchg
fcoms
xor
jnp
aad
push
fiaddl
xor
mov
int
lea
fisttpll
call
or
xor
in
and
repz
bound
das
push
mov
inc
cmpsb
adc
aaa
jns
and
repnz
mov
sbb
and
jp
mov
or
adc
jo
popf
push
ret
movsb
in
lret
les
dec
sbb
pop
pop
mov
insl
in
mov
leave
add
icebp
xchg
push
adcb
lcall
shrb
stos
push
add
and
mov
imul
shl
mov
lock
pop
shl
push
movl
sub
popa
jg
push
mov
sbb
gs
lock
sarb
aas
ret
mov
mov
push
movsl
inc
cld
cmp
jno
sbb
bound
dec
out
dec
test
aad
fs
lds
fildll
fwait
lahf
shrb
sbb
es
mov
lcall
push
repz
addr16
roll
pop
mov
and
iret
adc
jae
hlt
in
cmp
test
imul
movsl
mov
sbb
imul
push
inc
push
xchg
sarl
sub
hlt
dec
lahf
or
bound
mov
mov
fwait
push
jmp
leave
xchg
or
in
and
add
mov
cmpb
shll
jns
out
sub
stos
shl
mov
imul
popf
aaa
inc
sbb
or
jle
or
xor
leave
or
cmp
std
xor
jge
lret
xor
ret
popf
fmulp
rolb
scas
ds
mov
push
fsubr
ja
cmp
fldcw
sar
xor
lahf
cmc
repz
cmpsb
pop
adc
jmp
add
dec
mov
xchg
push
out
imul
xor
rcr
and
loopne
or
jle
jmp
sub
into
es
pop
shll
inc
mov
jns
mov
jns
mov
sub
andb
sbb
jl
scas
cs
add
and
sbb
adc
inc
outsb
and
sub
je
push
aam
mov
mov
add
gs
mov
xor
outsl
hlt
ficompl
jp
stos
sub
push
and
jns
in
pop
stos
loopne
dec
cmp
gs
stc
das
out
jbe
mov
mov
pushf
inc
fidivrs
negl
xor
in
test
push
jle
add
loopne
jl
mov
jbe
mov
or
insl
fsubrs
add
popf
sbb
mov
mov
lods
mov
movsb
mov
fsubl
arpl
in
fisubrs
lods
push
enter
cmp
sbb
jg
je
mov
aaa
jmp
sub
pop
shr
fsub
xchg
cmp
jl
nop
imul
mov
xchg
cltd
hlt
xchg
dec
mov
add
cmp
adc
mov
in
cmp
xor
cmp
in
clc
ljmp
dec
repz
mov
in
cmp
mov
add
dec
insb
test
daa
jae
sti
popf
movsb
mov
mov
push
fldcw
in
pushf
fldl
je
orb
and
imul
mov
xchg
popf
adc
fwait
loope
cmp
cmpsb
ss
mov
jns
jns
in
ret
out
mov
push
stc
fbld
dec
mov
repnz
cli
xor
frstor
pushf
xchg
xchg
pusha
xlat
je
xor
jge
pop
jb
aam
push
cld
fdivrs
dec
popf
pop
lock
and
fs
mov
sbb
push
mov
movsl
pop
bound
mov
xchg
mov
jns
xor
mov
inc
and
lock
popf
jbe
xchg
cltd
cltd
mov
lods
inc
sbb
dec
ret
jbe
inc
cmp
mov
mov
clc
push
aaa
sbb
adc
and
pop
ret
lcall
jbe
inc
mov
sub
lret
rclb
sub
adc
pushl
sub
lods
test
xor
jl
xlat
dec
int
in
je
shlb
xor
arpl
push
jecxz
sbb
test
cmp
filds
lret
lods
jl
shll
inc
cmp
or
fldt
sbb
ret
and
xchg
fcomp
jbe
xor
out
add
mov
stc
push
addr16
aaa
daa
mov
mov
stc
femms
shrb
int
or
pop
mov
inc
and
push
dec
cmc
lcall
mov
push
mov
cmp
jbe
xchg
stc
shlb
dec
add
aam
mov
bound
stos
push
arpl
out
xor
jnp
mov
int3
sarb
repz
sar
into
sbb
lods
cmp
sub
mov
mov
jg
testb
push
mov
jns
inc
dec
std
jo
ja
jge
je
or
xchg
cmp
pop
adc
mov
andb
mov
movsl
imulb
jg
mov
cmp
test
leave
inc
pop
sbb
jae
mov
adc
js
loope
insl
es
add
sub
mov
in
jb
cmp
push
hlt
xor
nop
lods
push
mov
xchg
jle
repnz
jae
pop
inc
in
jg
popf
cmpsl
inc
jge
adc
push
mov
lret
fsubl
adc
lcall
lahf
testl
popa
sbb
pop
xchg
insb
out
out
scas
faddl
pop
hlt
adc
xchg
sub
sub
and
mov
jbe
cli
mov
cmp
push
or
sub
leave
imul
mov
daa
push
std
setp
scas
jno
aaa
aas
dec
inc
rclb
sub
call
movsl
sbb
aas
repz
inc
scas
ja
or
mov
sbb
bnd
ss
xchg
loop
mov
push
std
cmp
dec
aas
mov
jge
aas
lcall
pop
test
mov
pop
inc
xchg
popa
add
imul
inc
shr
cmp
pop
mov
ds
sahf
pop
sub
loope
aad
aas
xor
sbb
jo
into
roll
cmp
testb
pop
mov
xor
mov
cmp
lret
bound
and
cmp
fcomp
jne
lret
imul
out
pop
in
aaa
pop
cwtl
mov
shl
pop
xchg
hlt
cmp
inc
loop
push
add
sbb
nop
mov
or
mov
test
out
lods
stc
mov
pop
sub
shlb
or
je
data16
inc
cmpsb
lcall
jbe
repz
shll
cmp
iret
xor
int3
pushf
push
shlb
loop,pn
adc
sub
hlt
mov
es
stos
incb
sub
push
lea
ret
hlt
mov
pop
cmp
mov
lock
xchg
cmpsl
fldenv
sbb
lock
pusha
lea
addl
es
das
in
pop
repz
call
pop
push
jae
and
adc
adc
addl
or
enter
mov
add
or
pop
push
rcrl
push
xor
popl
pop
sub
int3
pop
ss
int
or
insb
repnz
shlb
xchg
push
jno
dec
and
sub
xor
mov
ja
mov
xor
js
pop
js
fs
pop
mov
addr16
leave
out
push
das
movsl
mov
and
cmpsl
add
movsl
cs
sarl
push
andb
and
jecxz
in
mov
dec
mov
aas
inc
dec
push
cmpl
sbb
mov
ljmp
jecxz
cmpl
lahf
mov
icebp
jb
push
lret
mov
mov
test
push
sbb
cmpsb
jle
or
and
xor
jo
xor
xchg
mov
xor
and
xchg
adc
and
inc
jp
insl
xchg
stos
mov
add
das
es
lds
lret
mov
and
mov
push
adc
mov
sti
mov
adc
mov
cmp
mov
mov
repz
add
hlt
pop
mov
xor
mov
jne
cmp
lcall
mov
inc
rcl
lret
jne
loope
inc
inc
mov
mov
cltd
jmp
movsb
enter
leave
xor
loop
mov
icebp
sbb
loope
out
sti
inc
imul
cs
aam
jne
data16
cmc
mov
mov
mov
push
adc
out
data16
push
xor
cmp
repnz
imull
nop
inc
and
sbb
dec
imul
add
pop
push
xlat
inc
cld
or
movsb
aam
ljmp
divb
xchg
cs
cmp
and
into
xorl
arpl
sbb
stos
es
pop
sbb
adc
xor
loope
pushf
add
mov
repnz
cmpsb
add
bound
jge
dec
das
cmpsb
mov
insl
jmp
jl
out
insb
nop
daa
icebp
jge
mov
fsub
fimull
inc
dec
inc
xor
inc
in
inc
push
loop
outsb
mov
mov
pushf
shlb
mov
inc
mov
cmp
ljmp
push
movsb
out
cmpl
andl
jmp
jle
iret
mov
sub
subb
xchg
lcall
pop
int
mov
xchg
pushf
cmp
lcall
mov
jno
fs
lods
loope
pop
xlat
mov
outsb
mov
stos
lcall
jle
fmull
and
mov
out
repz
xchg
fdivs
cmp
adc
aad
or
pop
sbb
cltd
pop
ret
push
or
adc
mov
add
imul
minps
ret
mov
or
mov
scas
adc
push
sbb
mov
xor
push
jle
sub
stos
sbb
insb
enter
mov
fistpll
outsl
cs
push
outsl
in
stos
mov
mov
ficoml
into
pop
sti
lret
shlb
cld
mov
jecxz
iret
movsl
sbb
dec
cli
inc
and
push
dec
mov
cs
or
nop
dec
add
push
xchg
jbe
and
cli
mov
jo
arpl
cmp
loopne
pop
out
data16
sahf
jle
ficompl
dec
mov
mov
fbld
xorb
outsl
testb
lock
mov
xlat
in
xchg
push
scas
std
mov
bound
ret
gs
xor
aam
mov
mov
sub
cmc
mov
dec
push
push
jg
pop
or
imul
cmp
xchg
stos
cld
js
xchg
fs
or
push
fmull
xchg
aaa
push
outsb
enter
xor
jno
inc
lret
jno
sub
call
ss
xor
pop
shrl
xor
addr16
mov
in
imull
or
or
mov
lock
sbb
inc
hlt
jecxz
lret
cs
popa
cmc
popa
rcr
test
cli
push
jne
or
sahf
ss
pop
stc
mov
shll
repnz
xchg
jecxz
pop
in
addr16
popf
jg
or
cwtl
int3
cmpsb
out
and
cltd
sbbl
cmp
pop
inc
jle
pop
push
out
je
pop
in
and
shr
adc
or
mov
adc
loopne
sbb
insl
inc
xchg
pusha
and
inc
xorb
mov
add
inc
sbb
jne
cltd
pop
jp
ret
xchg
xor
fs
sbb
lods
mov
cmpsl
sub
in
dec
insb
sub
mov
add
jo
xor
lds
mov
jo
fmul
dec
lea
cmp
iret
adc
or
arpl
lods
fcomps
xchg
stos
inc
lcall
or
jg
int
jl
dec
push
ss
jle
aad
int
pop
test
addb
gs
pop
std
fbld
mov
out
xchg
loopw
stc
or
ja
pop
adc
mov
cmp
push
push
imul
std
jmp
bound
dec
xchg
loopne
hlt
mov
adc
pop
fldenv
mov
pushf
lahf
sbbl
lret
jno
sbb
iret
add
mov
outsl
test
mov
fadds
jmp
adc
add
sub
fisttps
loop
xchg
mov
ucomiss
mov
bound
mov
or
mov
push
shrl
stc
movsl
mov
test
inc
sti
jp
jns
and
or
xchg
push
xor
aaa
int
add
repz
inc
pop
out
mov
adc
push
cmp
outsl
out
pop
sub
inc
add
pusha
dec
bound
lock
hlt
int
aam
dec
push
inc
stos
adc
sub
daa
xchg
hlt
sbb
cld
jnp
lds
dec
mov
jp
pusha
rcr
test
insl
sbb
jmp
sub
sbb
jmp
xor
push
lds
sub
jmp
inc
xchg
dec
jmp
pop
nop
sbb
jnp
add
xchg
cmp
jae
rclb
jecxz
fcmovnbe
or
sbb
aaa
scas
mov
jg
stc
mov
lret
popa
icebp
sbb
fldt
mov
or
inc
xchg
repz
dec
or
lds
sbb
add
push
or
into
in
sbbl
pop
icebp
lods
rcll
adc
aaa
out
rcrb
mov
outsb
lahf
imull
adc
ficompl
mov
jo
sar
ljmp
push
push
cmc
xchg
push
daa
scas
fcmovbe
or
dec
setbe
ret
jns
dec
or
sbb
das
cmp
hlt
and
sbb
mov
mov
adc
cltd
inc
adc
iret
call
sub
sbb
push
test
adc
jo
pop
xor
inc
out
fwait
out
stos
sbb
xchg
out
jns
xchg
iret
cmp
or
jo
shlb
imul
int
jge
jmp
clc
mov
lods
jmp
ljmp
sub
lea
lods
cmp
mov
adc
jg
push
inc
test
push
push
sub
cli
sbb
fwait
aas
push
lret
ret
stos
mov
sbb
and
dec
dec
out
jp
jg
dec
iret
cltd
mov
pop
jno
cs
xor
pop
jmp
fcoml
lods
lahf
inc
stos
pop
gs
aam
sub
fisttpl
cmp
mov
mov
repz
mull
push
fdivl
cmpsl
mov
xchg
jg
outsb
dec
mov
push
ja
ret
cvtpi2ps
jno
shl
or
mov
mov
adc
mov
enter
dec
cld
pop
mov
inc
repnz
call
xchg
in
sbb
jo
xchg
ret
xchg
jp
std
loop
inc
pop
and
xor
dec
inc
pop
in
pop
mov
jne
pop
mov
jo
js
push
cmp
pushf
and
adc
montmul
cmpsb
les
add
fistps
ss
int3
or
cltd
pop
pop
mov
add
xor
stc
adcl
push
cli
dec
in
mov
stos
out
int3
xchg
insl
inc
arpl
mov
cmp
icebp
inc
cmpsl
fistpll
dec
jl
dec
pop
mov
xor
lods
and
popa
in
sbb
test
daa
shlb
cmpsb
shlb
cld
int3
inc
ljmp
lea
dec
xchg
add
mov
into
inc
in
sub
xor
test
dec
or
cmp
xor
fidivs
cmpb
js
inc
dec
shll
push
fs
addb
mov
adc
ss
dec
mov
adc
fucomi
hlt
mov
inc
fsubrs
sahf
xchg
dec
call
xchg
sbb
mov
sbb
dec
sbb
mov
adc
notl
flds
ljmp
add
mov
mov
add
sbb
lahf
mov
les
xor
scas
xchg
je
sub
push
xchg
jge
jb
jmp
stos
push
imul
stc
mov
xchg
enter
rolb
loope
test
sub
push
shlb
fdivrp
mov
mov
dec
push
lock
jmp
pop
movsl
les
lea
jle
mov
pop
shrl
sub
mov
scas
std
shrl
outsl
push
push
lock
lds
push
xlat
mov
lea
aaa
mov
fs
push
fsubrs
std
shlb
inc
pop
imul
pop
mul
xchg
int
xorl
jb
sarb
stc
sbb
aas
int3
loop
sbb
mov
jns
cmpsl
dec
mov
cmc
ljmp
push
into
xchg
into
sarl
fistps
mov
and
lcall
lds
cmp
cwtl
jp
pushf
push
das
pop
and
jnp
aad
pop
adc
pop
sub
mov
xchg
sub
pop
aam
enter
adc
loopne
push
ret
nop
ret
dec
js
fnstcw
dec
or
push
lods
cmp
jbe
pusha
arpl
testb
btrl
fdivrl
mov
xor
fisubl
inc
jecxz
es
push
dec
notl
pop
mov
adc
jb
loop
std
imul
xchg
into
xlat
inc
xchg
cmpsb
mov
fimuls
into
rorl
dec
lds
cmc
repnz
cltd
popa
ret
cmp
pop
cmp
xchg
movlps
jo
push
popf
lret
mov
xor
lret
inc
pop
clc
pop
jl
in
jp
or
lods
push
add
stos
push
imul
cli
pushf
dec
adc
jmp
scas
or
mov
test
aas
fisttpl
add
fidivs
push
imul
and
xchg
jecxz
inc
insl
nop
fs
cmpsl
mov
jbe
xlat
mov
sub
fdivrl
inc
sbb
aaa
subb
cmp
adc
pop
adc
jb
loope
mov
pop
into
icebp
insl
mov
out
into
sbb
inc
out
stos
push
cmpsb
into
push
cwtl
sahf
and
std
dec
or
movsl
lds
testb
outsb
repz
pusha
test
mov
test
ja
xchg
ret
adc
dec
pop
add
push
lahf
in
xor
jno
sub
cs
adc
push
hlt
push
or
outsl
xchg
data16
out
pop
pop
dec
jbe
jbe
aaa
mov
xlat
xchg
sub
cmp
adc
xlat
jbe
inc
push
repnz
push
outsl
adc
leave
mov
out
stos
adcb
xchg
test
fs
inc
dec
test
jge
push
mov
jp
add
and
loope
mov
mov
push
xchg
jp
out
push
outsb
cmp
sarl
lret
xor
pop
and
fcmovnu
dec
and
repz
push
adc
pop
xchg
inc
or
xchg
add
mov
xchg
or
in
lods
inc
nop
les
pop
lret
dec
and
test
cltd
pop
fs
outsb
insb
jg
push
testl
inc
xchg
call
mov
test
call
cmpsl
imul
adc
daa
stos
cwtl
and
lods
adc
dec
cmc
mov
ret
outsb
xor
arpl
xor
popf
inc
les
std
mov
xchg
jbe
in
mov
or
jae
les
andb
mov
loop
fs
jp
and
mov
mov
js
mov
stc
bound
mov
in
cmp
or
aad
xor
xchg
loope
out
shll
push
ret
loop
mov
and
repnz
cmp
jae
pop
lods
push
push
push
push
rcll
cltd
test
movsb
hlt
and
aaa
test
lahf
aaa
cltd
dec
lcall
les
sub
inc
or
cmpsl
xchg
sub
dec
cwtl
test
xor
das
push
cmc
int
lods
adc
sbb
adc
mov
out
jns
cmpsb
inc
sub
mov
mov
jns
jo
cmp
mov
decl
jecxz
jnp
pop
sbb
call
pushf
jno
ds
push
jle
jmp
aaa
xor
lahf
push
mov
test
outsb
popf
ret
xlat
push
jp
push
sbbl
scas
pop
sbbl
mov
and
lods
int
push
add
pop
sbb
cmp
dec
outsl
xor
inc
cmp
inc
or
xchg
iret
sub
xor
adc
cmp
sbb
lock
fsubs
jl
ljmp
dec
pop
inc
xor
lahf
lret
mov
fisubl
jns
and
mov
sub
in
mov
aad
jb
fnstenv
js
shll
and
jecxz
mov
mov
xchg
movsl
stos
add
scas
sub
cmp
incl
int
jno
aas
pop
mov
ja
add
or
cmp
jnp
xchg
inc
inc
faddl
and
pop
in
ljmp
out
in
dec
into
push
pop
adc
icebp
iret
lret
lcall
lahf
loopne
lods
dec
push
loopne
or
fdivrs
adc
loop
mov
sbb
pop
addb
pop
ja
pop
jg
xchg
sbb
sub
in
sbb
inc
je
stc
mov
xor
shlb
cmp
jbe
jae
les
xchg
or
fwait
xchg
ljmp
mov
mov
and
mov
pop
inc
int3
cmpsb
sub
lret
cmp
inc
popa
test
cld
mov
xchg
push
sti
mov
icebp
push
test
cmp
dec
mov
dec
in
mov
pop
and
popa
pusha
cmp
xlat
pop
scas
cmp
into
imul
popf
xlat
loop
jb
mov
stc
test
mov
sbb
or
add
push
jmp
dec
push
repz
ss
movlps
adc
add
fsubs
pushf
cmp
cwtl
sub
dec
push
fcmovnb
ja
add
lahf
fidivl
jp
into
dec
stos
mov
rcl
outsl
das
cltd
sub
cmpsl
or
fs
decl
ficoml
popf
sbb
test
aam
mov
xchg
cmp
mov
or
lds
out
imul
mov
and
cmp
pop
mov
gs
xor
add
jl
and
aaa
mov
test
dec
cmpsb
sbb
fistpll
push
mov
jecxz
pop
dec
sub
imul
into
jg
xchg
pop
and
fnstenv
sub
les
out
xorl
imul
cmp
popf
or
mov
mov
xchg
xchg
sbb
push
jne
xor
or
push
out
shlb
inc
add
movsb
pop
aam
mov
js
test
mov
sub
outsb
cmp
jp
cmc
mov
mov
add
imul
daa
rorb
xchg
iret
mov
push
lock
pusha
or
loope
pop
mov
mov
or
loope
inc
push
adc
jle
cmp
inc
int3
jmp
insb
cmp
mov
addb
repz
ja
imul
jo
jl
mov
sub
xor
lods
outsl
notl
or
imul
sarb
adc
jp
mov
sub
fst
mov
add
in
fnsave
push
lea
dec
das
sbbb
xor
int3
jge
xchg
out
test
mov
pop
ss
fwait
push
inc
fiaddl
fnstenv
lds
movsb
cmp
arpl
popa
lock
cmpsl
lret
sbbl
mov
mov
mov
mov
fld
lret
std
ja
ret
dec
add
and
xchg
jae
pop
xor
les
mov
jo
ret
imul
mov
inc
aas
jnp
xchg
xchg
scas
add
push
pop
hlt
stos
loop
loopne
notb
add
cmpsb
fisttps
lahf
adc
cmpsb
fidivrs
out
imul
sar
jl
mov
push
shll
pop
lock
orb
es
mov
ljmp
std
sbb
mov
popl
inc
shrb
jb
pushl
subl
packsswb
fistl
push
xchg
test
jg
mov
int
iret
jb
in
adc
cmpsl
ret
push
ret
lret
aam
jg
inc
cmpsb
into
pop
cmp
and
fwait
lcall
dec
in
loop
mov
fisubl
stos
movsb
jo
cli
mov
out
jo
lods
cmp
or
add
cmp
jmp
cmp
pop
stos
sub
push
shlb
mov
mov
inc
iret
xlat
jecxz
into
cmp
dec
pop
jns
xchg
xchg
inc
inc
sub
push
cmpsb
or
popf
xor
rcrl
sbb
inc
sbb
xor
dec
mov
add
lea
ss
rclb
aam
mov
loop
bound
pminsw
mov
xchg
sbb
mov
loop
xchg
xor
jp
or
fdivs
cs
and
xor
inc
lret
adc
sub
mov
jge
adc
pop
sti
fstpt
xlat
xchg
iret
fs
loopne
pop
sbb
mov
popf
scas
mov
pop
xor
shlb
test
aaa
shrl
stos
dec
fcmovb
ret
pop
push
push
adc
and
mov
xchg
shrl
inc
add
aad
mov
jne
std
sbbb
jle
xchg
lcall
adc
add
mov
add
loopne
enter
dec
scas
test
aam
mov
lahf
js
popa
jb
jae
dec
inc
dec
inc
testl
pop
into
mov
jg
sti
mov
or
fists
inc
xchg
mov
in
mov
inc
adc
mov
dec
xlat
inc
or
or
pop
and
fcmovbe
cltd
rcrb
add
xchg
mov
int3
jmp
adc
out
test
lahf
sub
sbb
cmpsl
in
dec
fdivr
enter
cs
jle
divb
jecxz
rcrb
sbb
mov
pop
push
pop
add
roll
adc
jno
loopne
xchg
add
movsb
lock
iret
int3
jg
orl
and
das
cmpsb
pop
adc
mov
adc
fdivrs
in
fdivp
inc
xchg
and
mov
mov
pause
pop
nop
aad
jbe
pop
or
movsb
fcoml
into
lret
std
imul
pusha
push
pop
jp
adc
fwait
sti
sahf
push
out
pop
loope
push
xor
sbb
int3
mov
imul
dec
mov
jb
pop
in
adc
xchg
jno
mov
jns
fisttpl
or
pop
test
xor
cmp
outsb
rcrb
xchg
sbb
push
int3
dec
jo
cmp
scas
out
mov
pop
cvtps2pd
aaa
fisubrs
aad
mov
loope
dec
inc
cli
jl
xor
in
stos
jns
and
rcll
adc
sarl
sbb
aad
xchg
mov
cmp
xchg
fiaddl
ret
pop
mov
xchg
pop
sbb
loope
push
or
mov
aad
fisubrs
push
loope
adc
or
frstpm(287
lahf
jle
dec
or
push
cmpsb
inc
pop
jne
push
xor
push
out
mov
or
repnz
inc
sbb
jl
je
std
ret
push
push
mov
int
insl
sti
mov
sarl
fwait
movsl
sbbb
in
cli
loop
lods
mov
sub
lret
mov
repz
roll
pop
push
lods
push
mov
sub
inc
insl
shlb
xchg
and
sbb
out
mov
adc
iret
dec
pop
or
xchg
add
inc
test
mov
cmp
mov
mov
dec
subb
sahf
inc
jb
pop
out
jmp
sub
loop
push
movsb
pop
call
mov
mov
or
in
pushf
xor
inc
rcrb
mov
push
nop
adc
movsl
lock
xor
mov
out
jp
and
adc
ds
push
fidivrs
in
scas
adc
sbb
sub
push
push
or
dec
mov
push
test
mov
pop
out
pop
cld
jecxz
inc
jnp
pop
mov
xlat
mov
xor
arpl
jp
jns
inc
inc
leave
push
out
mov
punpckldq
sub
cmp
mov
add
in
into
inc
add
jns
mov
adc
mov
mov
mov
ja
push
mov
stc
popf
rclb
xchg
add
xor
pop
outsl
pop
xor
push
or
jmp
mov
shrl
sub
mov
cltd
fimuls
add
imul
mov
cmp
lea
fnstcw
mov
dec
sti
in
mov
push
cli
mov
ds
mov
inc
jnp
mov
inc
repz
fs
js
sub
bound
ret
scas
inc
mov
push
inc
pop
imull
or
xorb
xchg
push
jo
aaa
stc
mov
adc
mov
dec
inc
repnz
out
sbb
lods
mov
pop
mov
xchg
sbb
fisubrl
pop
mov
mov
push
sub
addr16
sarl
in
int3
jecxz
push
xchg
negb
jbe
sbb
inc
pop
jnp
add
jecxz
mov
int3
or
and
test
cmp
sbb
jle
pop
mov
loopne
inc
adc
in
fists
and
stc
sub
mov
add
cmp
test
inc
jb
ror
add
pop
in
das
push
imul
lret
scas
mov
or
and
subl
xchg
dec
repz
addl
xchg
mov
mov
insb
xor
psadbw
inc
cmp
mov
inc
es
js
xlat
jbe
mov
cmp
xchg
hlt
pop
xorl
mov
push
adc
push
lock
cli
loopne
std
or
scas
inc
pop
fcomps
stos
imul
sahf
imul
mov
jp
pop
orb
cmp
sbb
inc
test
cmc
test
movsl
fs
or
and
push
sub
in
pop
inc
sub
pop
and
je
mov
ficompl
out
lret
sub
testl
push
and
das
dec
jecxz
dec
push
push
je
push
hlt
adc
test
add
add
lcall
leave
jl
mov
movsb
inc
test
stc
jmp
je
loope
push
pop
lret
jno
insb
lea
test
cmp
mov
sti
outsb
icebp
or
jb
cmp
sbb
fsubs
xchg
dec
adc
data16
jge
xor
pop
and
les
out
bound
pop
dec
mov
test
fstpl
push
lahf
call
cli
test
xlat
mov
fs
mov
mov
clc
mov
mov
je
in
push
xchg
test
divl
dec
pushf
cmpsb
xchg
adc
dec
xor
add
movsb
fstpl
clts
sbb
clc
and
add
mov
xchg
dec
cwtl
popf
or
jns
and
stos
cld
mov
lock
ss
pop
mov
and
xor
push
inc
std
lds
push
notb
lods
aam
test
enter
fstpt
cmp
or
negb
das
mov
lcall
pop
or
js
pop
addl
jmp
shrb
aaa
jmp
rorb
sub
jae
fldl
repnz
jns
jl
inc
ds
aaa
jae
push
imul
mov
outsl
ljmp
fnsave
mov
cmp
push
in
jns
dec
fsubrl
xchg
lcall
xor
mov
inc
mov
sbb
ss
jmp
push
cmpl
pop
push
push
mov
cmp
pop
mov
cwtl
and
fisubs
adc
fsubp
test
aam
or
outsl
sub
cltd
dec
pushf
addl
or
mov
jne
sahf
mov
push
pop
gs
iret
mov
and
mov
lock
sub
adc
add
add
or
adc
arpl
mov
inc
mov
test
sub
sti
jo
test
arpl
xlat
push
ss
div
outsl
cmp
xchg
cmc
lods
mov
fst
daa
in
mov
sub
es
add
push
aaa
insb
cmc
mov
in
jo
sbb
rcrl
add
add
shl
in
push
mov
int3
fnstcw
jp
out
cs
lahf
movsl
lahf
mov
je
hlt
dec
aas
add
jle
idivl
movsb
add
cmpsl
pop
sti
jecxz
loope
inc
push
mov
sahf
sahf
and
xchg
sub
sbbl
xor
xchg
mov
mov
jmp
jle
jle
and
jl
or
or
aad
cmpsb
and
or
icebp
test
xor
ficoms
aaa
adc
dec
loopne
add
add
xchg
loop
test
fwait
sub
xchg
mov
adc
leave
popa
inc
sbb
mov
movsb
mov
daa
lods
or
mov
getsec
xor
fnsave
push
or
out
mov
lss
xor
pop
sbb
push
sti
sub
dec
faddl
mov
cmp
mov
jg
or
loope
push
jp
mov
sub
std
sti
iret
test
aaa
nop
and
push
lods
popa
jge
jl
imul
push
xchg
mov
sbb
ss
dec
ds
mov
sti
ds
dec
jno
test
cli
imul
ljmp
cmp
adc
iret
das
cmp
ja
jge
or
inc
xor
js
sbb
xorb
inc
xchg
jecxz
push
pop
les
mov
mov
sbb
mov
jb
outsb
jl
push
jns
repz
rorl
pop
repz
mov
adc
jge
stos
out
pushf
int3
jne
xor
fidivrs
add
sbb
cmpsl
add
jmp
add
cmp
push
mov
xor
test
mov
sub
cwtl
mov
cmpsb
cli
lcall
mov
fxch
imul
jecxz
ret
fs
test
sub
jnp
rolb
push
xor
bound
pop
cmp
pushf
mov
out
xchg
mov
pusha
out
adc
sti
xor
inc
int3
clc
in
es
sbb
hlt
mov
mov
ss
ss
aam
or
mov
mov
daa
cmpsb
int3
sub
es
mov
inc
pusha
cmc
xor
cmp
cltd
jnp
or
call
xor
jl
rcrl
ss
outsb
hlt
xchg
out
test
add
mov
aas
xchg
daa
imul
jne
or
je
pop
push
sbb
mov
dec
rcll
jnp
xchg
arpl
aaa
movsl
pop
ja
add
ljmp
or
push
loope
into
mov
mov
cmp
inc
add
rorl
and
loop
dec
pop
and
gs
test
or
cwtl
stc
sub
adc
push
mov
mov
jl
data16
adc
cli
cmp
and
mov
ljmp
lds
lock
xchg
xchg
inc
sub
in
or
mov
arpl
es
out
push
lds
fwait
jnp
aad
and
pop
push
out
mov
push
and
inc
leave
cmp
push
inc
xor
cmp
sbb
xor
test
sti
arpl
add
pop
or
dec
sahf
xchg
out
dec
jp
xchg
xchg
adc
shrb
adc
mov
in
dec
mov
out
aam
enter
push
dec
fistpll
xor
pop
xor
lods
lods
mov
mov
ret
outsb
jnp
movsb
or
jb
sbb
sub
mov
pop
lahf
pop
test
xor
sub
jae
cmpsb
cli
inc
sbb
mov
dec
rorb
sti
jbe
push
mov
add
pop
lods
or
out
mov
lret
jmp
icebp
test
sub
jae
repnz
cld
jo
cmp
and
pop
cmpsw
xor
sub
fmul
sbb
imul
out
mov
jnp
lcall
pushf
and
push
mov
lcall
pop
dec
aaa
xlat
shll
call
adc
pusha
test
pop
bound
in
insl
dec
cmc
or
fucomp
adc
cltd
mov
mov
lods
push
mov
sub
lods
movzbl
dec
ljmp
adc
mov
negb
mov
xor
out
lret
pop
mov
xchg
out
and
lahf
xor
or
repz
scas
arpl
movsl
jg
sub
xchg
dec
mov
xchg
mov
sub
and
pop
xor
dec
adc
add
sub
int3
loop
cmp
add
xor
lcall
enter
mov
and
addl
popa
loop
sbbl
sub
stc
popw
and
or
dec
and
in
bound
sub
icebp
inc
popa
decb
scas
stc
pop
push
cwtl
inc
in
pop
add
jl
xchg
push
insb
sbb
cwtl
and
cmp
sbb
sub
out
cmc
pop
outsl
pop
mov
aaa
and
jp
subb
insl
add
inc
sub
mov
clc
out
cmp
lock
rorb
sbb
or
outsl
mov
push
mov
or
push
loopne
mov
jg
lods
fldenv
dec
jnp
int3
std
sub
gs
cmp
in
movswl
xchg
aad
shl
insb
cmp
ret
int3
into
add
lods
lret
cmpsb
inc
add
cmpl
cwtl
cmp
sar
and
and
push
jne
int3
js
jmp
dec
xchg
pop
xor
xchg
insl
mov
push
jae
mov
mov
jmp
inc
sub
icebp
fsub
lods
hlt
cmpsl
jb
push
int3
mov
xlat
lods
pushf
mov
xchg
fsts
bound
fstpt
lcall
xchg
lock
mov
pop
xorl
js
pusha
push
ffreep
repnz
dec
popa
in
dec
mov
add
hlt
call
sbb
push
inc
sub
test
and
add
mov
iret
add
cmp
jle
inc
jle
ds
loope
test
lods
orb
mov
jg
fisubrl
sub
adc
xchg
lods
inc
test
cltd
inc
xchg
ss
dec
rcrb
mov
dec
lcall
inc
xchg
sub
call
popf
inc
es
popa
adc
and
xor
out
mov
jns
ret
jge
test
stos
rcrl
das
repz
adc
into
shrl
sahf
orb
in
push
cmp
add
aad
push
adc
mov
pop
test
icebp
jo
mull
pop
pop
pop
fcoml
psllw
push
shlb
mov
data16
mov
xor
adc
mov
mov
inc
add
in
jp
jmp
adc
mov
repnz
pop
jnp
inc
push
pop
movsb
push
add
mov
out
and
adc
aad
and
adc
mov
movsb
int3
shrb
pop
mov
jns
rcl
or
es
out
xchg
adc
push
xchg
xor
push
in
add
xlat
dec
outsb
daa
jp
xchg
xchg
mov
out
jno
and
sub
ror
sahf
icebp
inc
lret
fwait
push
aam
jno
sarb
and
ret
stc
adc
sub
sbb
call
push
imul
jle
in
test
add
xchg
ss
push
js
orb
pop
cld
mov
imul
mov
cmc
xchg
xor
sahf
leave
inc
out
xor
lock
dec
aaa
std
pusha
rcll
push
movsb
jno
xchg
sbb
scas
mov
xor
jb
in
push
sub
cmp
or
mov
idivb
scas
fsubrp
out
sub
pop
xor
dec
pop
iret
repnz
lea
arpl
adc
aad
cmpsl
ficoml
pusha
lods
and
push
sbb
arpl
pop
pop
xchg
rclb
loopne
inc
scas
mov
xor
clc
add
dec
mov
xor
fisubrl
xchg
inc
dec
sub
mov
loop
movb
in
in
mov
push
xor
jo
mov
rcr
dec
jae
mov
push
shr
mov
cli
mov
push
popf
arpl
out
ds
clc
ret
add
pop
in
mov
mov
mov
imulb
hlt
fiadds
pushf
xor
sub
nop
loopne
repz
mov
mov
mov
pusha
sarl
push
mov
mov
cmp
pop
das
mov
faddp
mov
das
aaa
jle
clc
pop
movsb
aad
out
dec
imul
jae
pop
xor
jecxz
add
mov
cwtl
sahf
in
inc
out
and
pop
xor
lret
jle
push
xchg
mulb
ficoml
push
mov
push
sub
add
jnp
or
adc
mov
test
xchg
mov
mov
dec
fdivrp
sub
das
iret
into
arpl
xor
push
outsb
sub
rcrb
inc
xor
ljmp
pop
adc
sbb
in
out
mov
ds
dec
pop
adc
or
xor
or
cmp
fwait
cmp
push
and
pop
outsb
bsf
std
jp
lret
sbb
adcl
or
and
repz
std
xor
cmp
mov
jne
sbb
call
jb
stos
dec
scas
jb
aad
pop
inc
inc
xchg
jg
push
jbe
adc
sbb
xor
sub
sbb
rcrb
jbe
fdivl
das
or
pusha
and
push
sahf
rol
loopne
test
js
mov
xor
xchg
xor
stos
idiv
adc
sub
cli
addb
sarb
sub
dec
jmp
iret
sub
es
imul
icebp
jnp
cmp
pop
aas
jg
rcrb
mov
or
add
sub
clc
jbe
pop
push
lods
cltd
sbb
lock
stc
in
pushf
rcrb
mov
xor
mov
insb
mulb
sbb
jle
mov
pop
sub
lea
arpl
sarb
push
and
mov
std
push
rcr
mov
shrb
cmpsb
mov
pop
insb
push
sub
mov
call
ljmp
lods
in
aad
lret
mov
jne
rorl
mov
mov
mov
mov
xlat
outsl
lods
fldl
cwtl
fmuls
mov
dec
xchg
popa
mov
inc
jno
push
stc
sub
pop
pop
scas
xor
jle
hlt
orl
adc
test
mov
filds
dec
sbb
repz
mov
adc
dec
mov
test
lock
out
mov
push
lcall
adc
test
movsb
pop
js
mov
dec
mov
in
addl
sub
inc
ds
jb
lahf
xor
pushf
lret
test
cwtl
add
shlb
adcl
xor
mov
dec
mov
push
add
sub
ret
and
punpcklbw
fsub
xlat
xorl
loope
lahf
xchg
cmp
test
xchg
test
cmp
push
cmp
stc
or
xlat
test
and
sbb
dec
lcall
shrb
sub
push
shlb
dec
ret
pop
movsb
test
repnz
mul
mov
outsl
xchg
faddl
mov
ret
lahf
fistl
mov
jae
loope
dec
rcr
into
pop
outsb
add
adc
dec
jnp
in
pusha
mov
sbb
rorl
cli
data16
mov
loop
shll
sbb
jmp
inc
mov
psubsb
pusha
into
jecxz
sub
pop
or
xor
sub
or
pushf
int3
or
xor
mov
mov
in
imul
ljmp
popf
aaa
xchg
pop
mov
fwait
jbe
ds
cltd
push
push
jle
stc
rcr
int
cmp
out
xchg
push
sub
pusha
xchg
mov
push
in
rcll
ss
dec
outsb
iret
xchg
inc
mov
sbbl
jo
test
mov
std
lods
aam
fmul
es
cs
inc
andl
clc
push
std
push
mov
addr16
les
cs
mov
lahf
adc
mov
xor
testb
or
out
mov
in
das
jae
sbb
mov
cmp
push
in
xchg
cmp
outsb
ret
sub
in
mov
call
repnz
inc
mov
leave
in
notb
push
into
xchg
test
pop
mov
xor
rclb
cltd
cmp
sbb
xor
or
les
xchg
shll
enter
outsb
xor
cmp
inc
addr16
aam
mov
sub
sbb
out
lret
stc
lret
shll
sub
popa
and
or
insl
or
test
lds
stos
test
insl
sub
push
cmp
inc
in
add
fldt
movsl
xor
sbb
ja
xchg
xchg
lock
xchg
and
shlb
fidivrl
lds
jge
rol
mov
sub
xor
inc
push
lods
mov
and
testb
jle
out
xchg
ret
out
jmp
dec
xor
in
push
int
fsubs
inc
adc
adc
and
lret
inc
popa
mov
jno
ja
imul
test
cmp
jmp
or
js
call
imul
push
xor
aam
mov
das
mov
lock
adc
clc
mov
xor
mov
sub
in
mov
pusha
decb
push
lods
das
out
mov
push
xchg
insl
dec
or
fisubrs
fld
push
ja
js
xchg
mov
pop
aad
cmp
sbb
or
add
fwait
jo
sbb
and
jne
pop
pop
jnp
fcompl
sbb
cmp
cltd
cs
popf
xor
ja
mov
aaa
lcall
cld
mov
mov
mov
mov
aam
dec
std
imul
clc
out
xor
add
cmp
fiaddl
cltd
fisttpll
jecxz
mov
dec
sbb
jle
cmpsl
inc
stos
xchg
repnz
mov
repnz
cmp
mov
xchg
popf
adc
xchg
xchg
add
add
out
rorl
fcoml
hlt
int3
jmp
divl
test
jmp
or
clc
test
movzwl
or
adc
enter
mov
dec
stos
dec
insl
test
in
mov
sahf
add
outsl
xor
pop
fildll
pop
mov
push
addb
rcll
daa
int
pop
sarb
adc
push
jl
in
mov
arpl
mov
push
stos
mov
mov
clc
int
clc
loope
loope
subl
push
jle
aam
mov
mov
jne
and
xor
out
cmpl
push
roll
lcall
loope
cltd
mov
push
mov
cmpsb
jle
xor
inc
push
mov
mov
roll
int3
adc
or
enter
pop
mov
lds
mov
hlt
stos
mov
nop
adc
fs
add
push
test
mov
jae
jp
andl
lock
mov
adc
test
xchg
sub
xchg
ss
es
incl
repnz
xchg
or
adc
sbbb
ja
lcall
inc
out
cmp
pop
enter
mov
adc
and
add
test
lods
cltd
pop
push
into
or
push
filds
gs
mov
rcrl
mov
in
push
in
sbb
fiaddl
dec
push
aaa
std
jns
fsub
stos
ret
mov
xchg
scas
rol
mov
adc
inc
je
cmp
xor
ret
loop
mov
repnz
test
pop
push
mov
jns
cmp
and
lahf
dec
jns
mov
iret
cmp
cmpsl
test
inc
leave
sub
lods
mov
xchg
jg
in
xchg
adc
jmp
scas
or
js
inc
pop
cmp
add
clc
jmp
out
push
lods
push
int3
aaa
fdiv
and
jb
mov
add
push
xchg
adc
ret
dec
sbb
xchg
mov
imul
xor
aaa
ror
mov
push
dec
mov
or
pop
into
sti
inc
jge
mov
sbb
sub
adc
mov
xchg
sub
mov
mov
enter
leave
add
pop
or
test
cmp
cmp
adc
sbb
or
mov
outsl
adcl
jmp
xor
leave
or
iret
fdivp
daa
clc
icebp
scas
hlt
lds
cmp
or
fiaddl
sub
sbb
mov
cmc
cmc
rcl
movsb
divb
test
outsl
jno
imul
cmp
jo
cmp
orl
ret
pop
mov
aas
test
test
and
in
jg
lea
jmp
subb
lcall
mov
popa
call
mov
inc
and
into
neg
sbb
daa
adc
sbb
and
cltd
mov
inc
mov
addl
jns
test
pop
enter
jg
mov
add
pop
xadd
aaa
add
das
cmp
add
pop
inc
lcall
xor
adc
hlt
stos
push
mov
out
lret
cmpsl
mov
xchg
rcrl
orl
out
movsl
int3
mov
sbb
arpl
push
pop
push
ror
push
es
push
mov
inc
imul
mov
xchg
and
adc
push
adc
inc
mov
and
pop
dec
dec
fld
mov
add
test
sub
and
jmp
gs
xchg
sub
pop
push
and
adcb
jle
push
and
iret
xor
fstps
sbb
mov
les
inc
pusha
mov
xchg
lea
ljmp
cmp
and
imul
xlat
cmp
dec
inc
mov
pop
bound
jns
cld
or
shr
add
movb
test
jbe
jecxz
cmp
xor
or
mov
xor
xorb
jns
cmp
push
test
mov
xor
sti
mov
ret
jmp
mov
mov
cmp
in
jle
xor
ja
xchg
mov
test
or
loope
jmp
rcl
inc
out
repnz
ret
fistps
cwtl
andb
pop
adc
lods
decl
popf
push
hlt
cwtl
fnstenv
outsl
xor
pushw
and
bound
sbb
add
in
gs
repz
jbe
mov
mov
sub
sbb
pusha
enter
sub
pop
add
sbb
push
fcmovne
or
fistps
lret
push
jno
jne
mov
ljmp
pop
sbbl
aad
inc
sub
adc
pop
jl
or
les
sub
adc
test
sub
aaa
pop
sub
add
jp
dec
dec
imul
cltd
xor
sbb
lock
leave
lods
test
mov
mov
lds
test
xchg
popf
jb
mov
sbb
repz
inc
cs
vhaddps
mov
outsl
into
fsubl
sbb
sub
add
popa
jmp
mov
pop
xor
sbb
lahf
jbe
call
hlt
call
xor
mov
jnp
in
pop
cmp
mov
hlt
hlt
test
and
mov
lret
push
sub
pusha
xchg
and
adc
divl
ds
test
call
int3
js
scas
roll
cmpsb
into
or
gs
popf
ror
js
je
and
pop
scas
clc
pop
inc
push
cltd
dec
mov
pushf
in
mov
ja
outsl
sub
push
mov
and
push
out
xor
xor
and
shlb
xchg
sub
sbb
cmp
aas
mov
pop
adc
test
xchg
mov
push
and
or
and
dec
pop
adc
cltd
call
mov
jecxz
mov
push
mov
jne
push
adc
mov
dec
testb
xchg
sbb
mov
sbb
sub
and
adc
repnz
outsl
sub
clc
gs
dec
sahf
xchg
jge
cmpsb
sbb
pop
mov
adc
sarl
aam
lahf
fiaddl
nop
dec
stos
xchg
cmp
xchg
mov
inc
bound
sub
aad
movsb
fildll
xchg
mov
inc
shrb
lret
xor
lahf
fistps
jnp
or
arpl
orb
or
aad
ds
jbe
sub
dec
mov
cltd
or
add
adc
jae
ret
inc
or
jns
add
jl
outsb
mov
ja
mov
test
cmpsb
lds
dec
lods
mov
xchg
cltd
xchg
sbb
inc
cmp
aam
popf
cs
popa
lds
imul
pop
pushf
xchg
sbb
fidivl
hlt
lret
pop
and
sti
je
popf
les
push
rep
rolb
sti
jmp
xor
cmp
mov
ud2
cwtl
movsl
pop
in
shrb
pop
mov
nop
mov
sahf
stos
pop
push
xlat
cmpsl
xchg
inc
movsb
xlat
or
push
aam
and
test
cmp
leave
fiaddl
xchg
fildll
cmpsl
xor
data16
cwtl
jle
aad
xchg
andb
fs
or
or
jae
clc
add
add
push
add
inc
jle
iret
hlt
es
mov
mov
xlat
add
xor
sub
xchg
push
mov
jae
in
ret
sti
or
daa
push
mov
or
lds
mov
jmp
cmpsb
mov
pusha
mov
cmpsl
rcl
or
or
out
inc
cwtl
cmp
loopne
and
or
fs
das
sbb
xchg
ret
mov
jae
stc
shlb
fimuls
xchg
mov
dec
add
popf
test
dec
push
out
inc
sub
adc
mov
notl
inc
mov
cwtl
mov
ret
shlb
adc
cltd
cmp
xchg
lock
mov
shlb
mov
inc
add
sarl
test
pop
imull
enter
sub
insb
jbe
fwait
sbb
adc
xchg
les
push
sbb
xor
aas
test
add
jbe
filds
xor
ja
xor
gs
xlat
notb
cmp
push
or
sbb
mov
pusha
js
mov
add
push
dec
adc
xchg
lcall
inc
out
mov
rcll
aam
fisubl
fsubs
dec
or
cmc
stos
xor
scas
lock
ficoms
pop
jo
push
pop
mov
push
in
pop
pop
cld
ftst
insb
sbb
scas
dec
cmp
inc
les
xchg
xchg
and
loope
add
fwait
cmc
xor
add
and
pop
sub
push
push
jns
ds
cmpsb
xlat
jo
adc
es
dec
mov
clc
push
dec
and
adcb
push
imul
or
mov
push
lret
movsb
pop
jb
loop
data16
and
fmul
push
add
lret
sbbl
cmp
ja
loopne
fisubs
mov
adc
mov
jp
add
cltd
or
sbb
mov
jo
test
jne
ss
jmp
out
jecxz
xchg
push
xchg
sbb
dec
and
inc
pop
cli
mov
jp
movsl
sbb
push
jmp
mov
cmp
push
arpl
cmp
pop
int
mov
pop
test
mov
push
gs
dec
gs
sub
popf
xorb
lret
mov
lahf
mov
rorw
jae
fwait
add
rolb
adcl
mov
lea
xchg
inc
xchg
stos
stos
ja
sbb
sahf
daa
cwtl
dec
enter
fwait
dec
imul
ja
lods
stc
cltd
pop
or
rol
sbbl
pop
in
add
inc
lods
divl
dec
inc
mov
stos
mov
repz
jo
push
test
in
lret
sub
in
jecxz
notb
cmp
aad
pop
repz
shrb
or
insl
mov
mov
mov
sub
stos
gs
aad
push
gs
adc
loop
aad
push
dec
movsb
pop
ja
add
outsl
mov
sub
sub
pop
dec
adc
out
rclb
xchg
pop
ss
cs
adc
sbb
je
xchg
ljmp
clc
sbb
inc
inc
pop
or
in
mov
ret
xor
cmp
ss
aaa
mov
enter
pop
xor
pushf
pop
jb
xchg
in
hlt
pop
je
sti
call
cs
das
and
pop
imul
push
mov
mov
mov
lea
stos
sarl
xchg
sub
outsl
leave
inc
loope
add
dec
inc
jmp
dec
cli
sub
fadds
mov
jle
fdivs
addr16
js
imul
clc
xchg
pop
mov
jb
adc
bound
hlt
pop
inc
out
imul
and
std
cmp
adc
pop
iret
out
and
loop
xchg
mov
int
mov
jmp
imul
sub
or
push
aaa
mov
fcoms
cmc
out
jae
jecxz
add
movsl
pop
fiadds
insl
stc
call
je
pop
sar
das
xchg
cmp
mov
ret
dec
push
mov
add
and
or
lahf
mov
mov
mov
hlt
es
pop
icebp
out
pop
loop
roll
xchg
dec
cmp
cltd
sbb
mov
jmp
dec
pop
js
lods
mov
ja
cli
notb
ret
pushf
pop
xor
xor
mov
push
fmul
and
mov
lods
in
rcl
mov
loopne
mov
jp
lcall
fwait
sbb
mov
pop
push
fisubl
insb
push
xchg
scas
xchg
mov
sbb
mov
mov
sbb
push
mov
popf
data16
aam
xchg
shll
mov
xchg
scas
fiaddl
cwtl
jl
cmp
vpsubw
in
shl
push
aad
mov
fcmovne
xor
sbb
inc
lods
jns
xor
out
rorl
je
sbb
scas
in
cmp
mov
sbb
sti
sti
enter
cli
sub
jb
fmulp
sub
lahf
mov
adc
add
les
adc
push
call
sub
jle
lcall
mov
pop
mov
pop
repz
lods
sbb
fisubrs
pop
mov
bnd
jae
mov
dec
lcall
inc
xor
xchg
adc
ret
cmp
inc
push
mov
and
mov
cmpsb
repnz
jo
clc
sub
pushf
sbb
adc
enter
into
mov
sub
jbe
mov
jb
add
pop
add
add
inc
mov
repz
nop
jp
sub
pusha
mov
jmp
sub
dec
lock
push
dec
orb
ja
inc
push
into
mov
stos
ljmp
xchg
pop
mov
fbld
xchg
pop
ret
jnp
or
fcomps
mov
ror
divb
shl
or
dec
cmp
divb
fdivs
or
xchg
or
and
jne
dec
outsb
mov
inc
jb
mov
js
cmp
lock
repz
mov
push
jb
or
sbbl
stc
and
loopne,pn
ja
dec
jae
imul
ss
xor
cmc
jne
mov
test
dec
divl
mov
scas
in
cmp
sbb
xor
sahf
jecxz
in
std
lahf
sbb
popa
push
mov
in
inc
mov
test
add
add
aad
out
jp
insl
or
sub
test
cmc
push
fcoml
std
js
mov
call
addr16
ds
arpl
xor
imul
inc
or
lock
sbb
inc
int3
sbb
js
out
or
jle
repnz
out
sub
ret
test
mov
sarb
cmp
dec
mov
xchg
pop
testb
sbb
push
dec
and
push
sbb
aad
fdivrs
out
cwtl
xchg
xchg
shl
loope
pop
add
jbe
dec
sahf
mov
test
adc
jbe
mov
and
pop
jle
cmp
jo
rolb
mov
cltd
cmp
stos
pop
test
clc
mov
xchg
lcall
cmp
ljmp
roll
daa
mov
xchg
xchg
cmp
fsubl
aas
push
rcll
sbb
sar
testb
and
adc
lea
xor
orl
vunpckhps
adc
faddl
lods
cld
jae
sbb
movsl
mov
cwtl
mov
cmp
cs
insl
or
push
add
daa
ds
iret
fimull
iret
mov
rcr
jbe
imul
addr16
ret
icebp
add
sbb
push
std
lahf
mov
popa
gs
or
push
and
mov
push
lock
sarb
andl
pop
lods
fisttpll
ret
and
sti
or
insb
out
push
jp
push
lock
add
fwait
jbe
jecxz
repz
ret
dec
mov
scas
cwtl
loop
aas
adc
ret
push
punpckhbw
in
sbb
xor
orl
bound
test
mov
jns
fs
cmc
mov
cmp
dec
lret
mov
insb
clc
out
mov
or
lret
rolb
mov
jg
in
and
inc
adc
xchg
cmp
push
xor
cmc
push
push
dec
bound
cli
nop
ret
pop
push
push
xchg
xchg
and
push
pop
je
inc
adc
jg
lods
gs
cmpsl
subl
inc
adcb
push
dec
mov
dec
pop
mov
adc
iret
pusha
sbb
lret
cmpl
jne
stos
xchg
push
xchg
mov
imull
pop
ret
inc
add
add
notl
jo
cmp
loope
xor
jb
mov
imul
cmp
rorl
pop
push
sbb
push
cld
inc
cmp
or
mov
add
xchg
movsb
add
inc
rcrl
pop
dec
xor
dec
xor
mov
call
add
ljmp
arpl
ja
loope
pushf
mov
push
decb
lcall
inc
pop
xor
roll
cmp
adc
dec
roll
xor
ret
dec
sahf
or
out
xchg
int3
ss
loop
outsb
jl
sbb
inc
or
das
cli
cwtl
adc
into
jecxz
push
stc
repz
mov
mov
jl
fstpt
push
in
loopne
push
fs
jnp
sub
push
mov
xchg
mov
mov
enter
adc
jne
mov
xchg
mov
dec
outsl
repz
sbb
enter
pushf
xor
push
pop
jmp
xchg
jmp
pop
cltd
jle
fcmovb
mov
push
or
jmp
xchg
or
aaa
mov
jmp
dec
mov
push
push
push
into
and
jmp
int
cmc
dec
test
subb
stc
push
mov
mov
dec
sbb
pop
insl
sbb
in
pop
loop
fsubp
ljmp
outsl
sbb
rclb
movsb
rorb
adc
sub
popa
mov
insl
int3
cs
mov
iret
mov
sbb
xor
jecxz
xchg
ror
lret
mov
adc
adc
mov
hlt
mov
xor
mov
jge
cmp
mov
mov
mov
adc
in
dec
mov
add
jmp
bnd
mov
negl
test
dec
mov
push
fsubl
cmp
test
cmp
pop
call
mov
add
fdivl
dec
out
push
jmp
cs
orb
xor
cmp
scas
mov
cli
jmp
jge
shrb
mov
outsl
jle
mov
xchg
ds
clc
push
mov
adc
sub
xor
mov
adc
push
cli
xor
in
in
push
xchg
and
fdivrl
cmp
ds
insb
aad
loop
iret
jmp
jle
int
leave
pop
cmp
rcll
sti
int
cmp
es
jl
sub
scas
shrb
mov
dec
cmp
cltd
mov
sub
dec
pop
jmp
and
rcrb
das
ljmp
cmp
ret
cmp
xchg
or
ds
or
inc
mov
gs
or
mov
loope
imul
inc
mov
test
fbstp
cmp
mov
in
mov
fwait
pop
aaa
pop
mov
mov
stos
and
sbbb
movsl
xchg
or
or
and
ss
add
mov
jmp
jle
push
sub
scas
ja
push
not
scas
add
test
push
inc
push
in
inc
jae
xor
lods
mov
mov
aad
insl
shll
jno
mov
jnp
rcrb
outsb
jns
add
mov
pop
shl
inc
adc
add
hlt
scas
and
rol
jb
adc
push
enter
sbb
lea
cmc
jp
and
push
push
mov
xor
ja
leave
cmp
repnz
out
out
sub
pop
jns
in
shrl
cmpsl
ljmp
aas
jno
fildll
xor
repz
cli
mov
andl
out
or
add
and
popa
loopne
data16
cmp
and
pop
movsl
mov
mov
push
aaa
mov
stos
push
cli
dec
or
gs
xchg
pop
sub
xchg
leave
dec
cli
mov
imul
adc
stos
pop
add
pop
in
test
dec
testb
jmp
fucom
xorl
in
xchg
sbb
pop
dec
cwtl
stc
insl
test
pop
loopne,pn
insl
push
lea
cmp
aad
and
cmp
pop
rol
stc
jns
ficoml
sbb
mov
icebp
mov
popa
int3
xchg
lret
mov
std
neg
mov
scas
bound
in
sbb
test
ss
jns
xchg
push
mov
sub
lds
ret
rcrb
ret
pop
xchg
cmp
jb
inc
sub
xchg
cmp
sar
push
or
push
jns
mov
testl
xor
arpl
icebp
xor
mov
mov
sub
movsb
sub
mov
in
xor
shrl
sub
icebp
cltd
mov
in
test
jg
cli
sub
cmpsl
fiaddl
dec
test
out
fwait
shl
pop
jnp
cmp
and
cmp
mov
ds
aam
push
sahf
fsts
mov
aaa
cmpb
fdivr
inc
cmp
push
and
data16
js
xchg
dec
in
lret
sub
orl
add
sub
jle
paddw
sbb
fmuls
fidivl
sub
lret
cmpsb
movsb
ss
jne
cmp
cli
sbb
lahf
aad
cmpsl
add
lret
mov
pop
mov
adc
lock
mov
std
jge
jge
xchg
cmp
test
push
hlt
push
or
fisttps
and
cwtl
pop
arpl
push
jns
or
or
pop
mov
jecxz
xor
and
in
es
add
add
adc
inc
or
xchg
outsb
xchg
mov
or
sbb
mov
push
aam
aad
test
jecxz
ljmp
and
push
jno
repnz
push
gs
cmp
adc
add
mov
pop
imul
nop
sbb
loop
mov
sub
jnp
xor
adc
in
xlat
inc
push
jno
fnsave
and
cmpsb
adc
loope
inc
scas
inc
andb
dec
cld
cmp
mov
cli
push
dec
out
mov
mov
add
cwtl
cli
xchg
sbb
or
outsb
divb
pop
test
rcrl
popa
jl
cmp
jns
jl
enter
sub
jno
in
push
xor
xor
or
and
xchg
lods
adc
sub
add
sub
ljmp
iret
push
mov
mov
pop
es
mov
ljmp
mov
mov
sub
add
cmp
xchg
add
jnp
jecxz
jno
in
ret
mov
aad
or
xor
fiadds
sub
pushf
loope
fildll
jne
fwait
add
ret
jne
add
lds
inc
pop
jbe
data16
cmc
and
xchg
xchg
mov
inc
and
test
pop
inc
jl
in
rcrb
push
cmp
lods
pop
je
fbstp
rorl
mov
insl
xchg
cmp
dec
and
lret
push
and
add
add
cli
and
sub
push
fisubl
out
jns
push
jl
xchg
scas
out
clc
mov
mov
out
dec
mov
movsl
jne
bound
dec
les
xorl
movl
int3
arpl
lods
mov
movsb
insb
or
das
dec
sbb
cmpsl
loope
dec
mov
pop
or
and
repz
adc
mov
sbb
lret
or
adc
out
dec
cmp
mov
or
xor
orl
out
lock
or
adc
xchg
cs
and
inc
xchg
ficoml
nop
mov
xchg
cmpb
mov
gs
rcrl
xchg
xor
cmpsl
dec
iret
fimuls
mov
mov
lahf
scas
shrb
push
aad
mov
inc
into
clc
push
jecxz
test
inc
dec
jmp
iret
mov
jae
pop
gs
xchg
aas
rcll
arpl
ds
daa
mov
cmpsb
cmpsl
cmpb
out
call
add
xor
push
mov
jmp
push
jae
jl
call
les
jmp
lret
in
mov
adc
dec
xor
cltd
push
adc
ret
adcb
loope
jl
popa
dec
nop
shll
insb
outsl
das
mov
mov
or
add
mov
loope
movsl
les
cmp
pusha
mov
xchg
cmp
pcmpeqb
jbe
aas
jne
mov
mov
stc
adc
cmp
xlat
xchg
mov
push
mov
or
push
cmovo
inc
cmpsl
mov
mov
push
add
lcall
call
cmp
stos
repz
sub
inc
lods
dec
jl
notl
repz
test
jae
dec
pusha
les
xchg
dec
loop
mov
shlb
sub
cmp
add
out
jmp
mov
cmp
and
dec
xor
addl
stos
jmp
dec
jno
jge
jmp
mov
in
pop
scas
sbb
pop
sbb
push
inc
loopne
movsb
push
test
mov
fdivrs
fisubrs
push
jne
lret
dec
pop
sahf
in
int
cltd
and
imull
xchg
and
mov
in
lahf
mov
mov
mov
lret
mov
mov
and
sti
out
pop
shll
mov
push
xlat
test
pop
mov
lahf
mov
outsl
push
jnp
add
pop
ret
popf
sbb
mov
stos
xor
loope
mov
repnz
icebp
pusha
in
mov
mov
es
popa
adc
fsub
and
inc
adc
jp
loopne
push
les
jecxz
fldcw
hlt
das
mov
add
daa
lods
push
jge
stos
lods
adc
mov
cmp
test
aaa
push
xchg
cmp
push
ret
lock
xlat
mov
pop
xchg
inc
pop
push
arpl
arpl
mov
mov
imul
repz
ret
pushf
sbb
push
negl
out
flds
adc
xor
rolb
cltd
jno
fs
sbb
or
pop
out
mov
xchg
and
pop
int3
xlat
scas
cmp
jbe
lcall
cmp
gs
lea
sub
adc
sub
pop
sbb
jb
xchg
sbb
lret
push
ljmp
call
mov
jmp
inc
dec
adc
jle
push
hlt
iret
pop
psrld
or
push
sub
xlat
jbe
arpl
lret
icebp
lahf
cli
mov
dec
pusha
add
fldenv
xchg
insb
stos
sbb
daa
iret
aas
or
nop
cmpl
or
shll
push
stos
xor
insl
push
cmp
mov
mov
pusha
xchg
aaa
bnd
cs
ljmp
movsl
lods
pop
mov
shrb
sbb
sub
adc
dec
leave
aam
mov
mov
sbb
xor
pop
aas
or
pusha
fimull
sti
outsl
sbb
sbb
xor
pusha
lret
push
xor
and
addr16
adc
fistpl
mov
out
cmp
inc
fisubrs
mov
add
aad
cld
dec
js
xchg
pop
adc
jle
cmpsb
cwtl
ss
in
shll
adc
mov
adc
push
mov
pop
push
pop
add
xchg
sbb
pop
xor
jge
bound
pop
mov
inc
scas
mov
add
loop
mov
into
shlb
insb
xor
push
push
scas
outsl
cmp
pusha
cmpsb
into
pop
mov
int3
outsl
add
pop
pop
pop
jns
int
xor
fstpt
mov
sub
jle
scas
mov
mov
icebp
cmpsb
imul
pop
push
bound
arpl
mov
dec
mov
sub
sbb
lods
push
or
outsb
dec
dec
mov
pushf
outsl
pop
or
mov
mov
inc
out
gs
popf
mov
cltd
les
inc
stos
or
push
adc
pop
jo
pop
cwtl
inc
hlt
mov
jecxz
pushf
sbb
out
mov
in
dec
cmc
sub
mov
subl
aaa
inc
push
xchg
fcomps
dec
sti
fsubl
iret
dec
repz
stos
inc
inc
ja
iret
push
jl
leave
repnz
cs
inc
test
loope
fwait
call
stos
inc
push
hlt
sbb
imul
into
dec
mov
jo
pop
jg
mov
cmp
fnstsw
push
pop
pop
cmpsb
xor
xchg
ss
or
push
inc
xchg
frstor
cmpsl
js
unpckhps
test
outsl
push
push
xchg
dec
xor
movsl
pusha
sbbb
sbb
push
stos
loope
mov
or
pop
cmpsl
jp
faddp
jg
nop
enter
lods
iret
dec
test
push
inc
push
inc
push
and
daa
mov
xchg
lahf
xchg
lock
mov
in
ret
sbb
sbb
cli
stos
fisttps
fwait
sbb
ss
pop
dec
sub
push
inc
or
mov
sub
out
imul
mov
or
ds
aaa
iret
inc
fbld
push
gs
add
inc
jb
aam
mov
jmp
inc
je
xor
or
mov
aaa
movsl
mov
pop
mov
jnp
std
pop
repz
aad
adc
jg
mov
dec
js
fwait
pop
fwait
repnz
add
out
mov
pop
jne
mov
std
sti
push
lock
cmp
imul
jg
jbe
adc
popa
inc
sbb
outsl
jecxz
dec
adc
enter
clc
call
xchg
sub
int3
movsb
ja
stc
jg
aas
jg
and
icebp
cwtl
inc
inc
mov
adc
aas
stc
adc
aaa
addr16
movsb
mov
mov
lea
fwait
mov
sub
dec
pop
mov
xchg
push
arpl
cmc
jecxz
loope
or
cltd
inc
mov
shlb
int3
or
test
push
add
or
cmc
jns
stos
and
or
fwait
xor
andl
shr
inc
xchg
ljmp
sub
fsubrp
call
cmpsl
sub
outsb
mov
std
outsl
mov
movsl
aaa
cwtl
push
jecxz
push
dec
ret
cmpsb
cmp
cmp
sti
gs
sbb
sub
fstl
inc
jnp
mov
xchg
xchg
and
jp
fbstp
jge
int
std
pop
and
and
movsb
ss
cwtl
sarl
out
pop
ffreep
or
int3
cmp
popa
in
xchg
pop
addr16
arpl
push
lcall
bound
xchg
fcmovu
insl
inc
mov
push
sarl
and
ret
mov
sub
jle
adc
repnz
inc
pushf
xlat
aaa
movsb
subb
sub
scas
rolb
cwtl
push
imul
lea
insb
cmpsb
cmpsb
pop
mov
adc
jae
outsl
mov
cmpsl
mov
push
pop
fcompl
lock
inc
loope
mov
fldl
xchg
lret
test
insl
cmpsb
sbbl
outsb
scas
mov
repz
std
outsb
dec
shrb
pop
movsl
dec
fnstsw
pop
loope
aas
or
jno
add
dec
cmp
mov
enter
xchg
add
insb
mov
jmp
push
test
xor
sbb
inc
pop
addr16
mov
pop
sub
mov
fisubrl
shrb
mov
sbb
fisttpll
mov
into
or
insb
ds
bnd
cmp
clc
inc
jl
frstor
cld
pop
dec
push
dec
dec
mov
pop
into
mov
repz
popa
notb
jo
cmp
mov
fsub
inc
or
test
test
pop
sbb
xor
icebp
jg
aas
lods
cmc
push
or
mov
push
mov
arpl
loopne
out
sub
mov
out
fildll
mov
es
mov
mov
dec
cmpsl
mov
rcrl
mov
outsb
push
cs
test
pop
and
nop
jp
push
inc
fmuls
sub
mov
xchg
and
insl
and
js
ret
lret
or
call
jne
insb
int
jge
nop
in
mov
sbb
cmc
xchg
or
test
hlt
cmp
fistpl
jecxz
mov
dec
sahf
pusha
jns
fsub
add
int
cmpsb
xchg
stos
xor
testb
push
cwtl
test
nop
cmp
cmp
sub
je
andb
sahf
pop
lea
cltd
lahf
inc
mov
mov
js
pop
adc
xor
jp
mov
mov
notb
js
sub
sub
add
push
cli
aas
lret
test
pop
dec
mov
adc
insb
sub
push
jge
test
push
cmpsb
push
jae
cli
inc
cwtl
rcrl
mov
leave
adc
imul
pusha
lds
mov
adc
fsubs
dec
lahf
push
in
cs
push
lds
xchg
mov
push
xchg
pop
ret
iret
leave
data16
push
sbb
or
and
sbb
cmp
lret
push
lea
scas
cld
pop
pop
pop
mov
xchg
mov
inc
lds
pop
push
cmc
js
cmp
imul
and
addb
roll
popf
sbb
lock
jno
loopne
sahf
mov
fistpll
stc
mov
ss
jecxz
cld
inc
fs
sbb
loopne
popfw
sub
mov
call
sub
in
push
push
adc
imul
inc
or
lcall
fsts
int
mov
fmuls
inc
push
dec
mov
int3
sub
and
add
dec
sub
sbb
movsb
or
xor
dec
push
inc
cmp
adc
jmp
sbb
dec
push
sbb
ljmp
mov
mov
push
loope
mov
or
mov
dec
pop
xchg
jg
jp
iret
inc
push
jns
lods
pushf
scas
das
jmp
xchg
sbb
out
sbb
fstp
cmp
cs
test
cmp
xchg
insl
ljmp
scas
cmp
dec
shlb
mov
sbb
sub
adc
cltd
data16
and
sbb
jo
flds
insl
loop
xchg
xchg
xor
cmp
cmp
mov
xor
shl
repnz
xlat
or
adc
mov
fists
ficoms
int
and
and
cli
pusha
pop
stc
sbb
pop
jmp
cs
mov
loopew
movsb
xor
or
pop
mov
mov
mov
ja
jne
mov
pop
aas
pop
cmpsl
fnstenv
in
push
and
not
xor
out
movsl
lock
aad
jo
sarl
dec
cmpsl
lahf
add
pop
mov
roll
jbe
aad
popf
ja
popf
mov
push
push
lahf
or
pop
jo
and
lock
fs
sahf
imul
aam
sub
dec
mov
mov
jno
inc
cli
jmp
ret
fs
mov
nop
fisttpll
inc
aam
sbb
add
push
push
add
pushl
or
fldenv
adc
lahf
pop
xchg
nop
std
add
sub
and
rcrb
push
mov
push
and
inc
jnp
xchg
std
and
pop
sub
mov
or
stos
mov
in
mov
xor
adc
jle
and
std
and
dec
pop
shrb
or
lret
and
jle
jg
sti
adc
mov
fs
pop
pop
push
shl
call
mov
outsb
ljmp
xchg
push
and
test
cs
adc
mov
jbe
enter
push
in
out
add
jno
mov
jp
mov
mov
fbld
jo
fisubs
test
xchg
jns
ds
inc
hlt
stc
add
arpl
adc
ljmp
fidivrs
pop
xchg
out
dec
imull
lahf
push
push
xor
push
roll
push
bound
inc
cli
adcl
lea
adc
shrl
mov
sbb
test
dec
cli
in
or
mov
decb
mov
lock
jne
dec
inc
xor
std
push
fcompl
out
mov
and
dec
jae
or
inc
cmc
xor
xorb
jno
fstps
cmp
les
pop
pop
fs
data16
fwait
in
mov
fwait
sbb
rcll
out
les
or
clc
sbb
jmp
xorl
jne
jl
movsl
je
mov
popa
in
rorb
ja
pop
xchg
hlt
aas
test
pop
dec
fimull
in
jns
add
jo
push
push
aas
imul
mov
xchg
or
jmp
sub
mov
loope
iret
push
dec
addb
xchg
xchg
jle
inc
test
inc
mov
bswap
jnp
sbb
mov
test
in
ficompl
sub
addr16
mov
push
aam
std
sar
mov
and
jp
fimuls
pop
push
mov
insl
dec
pop
mov
pusha
pop
sbb
popa
jmp
jno
lret
test
inc
dec
mov
xchg
fs
aaa
mov
ret
arpl
push
maxps
iret
iret
pop
pop
push
mov
sbb
pop
dec
inc
xchg
inc
cmp
adc
movsb
fwait
add
call
adc
sahf
loopne
add
and
push
mov
lret
dec
jle
xchg
scas
mov
fcoms
es
pop
scas
adc
jno
arpl
dec
hlt
dec
dec
pop
mov
adc
scas
pushf
mov
lock
insl
inc
fnstenv
sbb
xchg
jb
int
inc
cmp
xchg
xchg
dec
lret
or
dec
int
dec
imul
pop
jle
imul
xchg
pop
cmc
std
cltd
mov
ret
sub
aam
ljmp
lahf
mov
enter
fidivrs
imul
scas
pop
sbb
sub
imul
dec
int3
das
pop
inc
xchg
ljmp
orb
rcrb
mov
lahf
and
jecxz
inc
movsb
das
mov
or
mov
shr
es
xchg
xchg
push
xchg
clc
pop
aaa
pop
inc
sbb
pusha
mov
insb
inc
test
test
inc
pusha
pop
cltd
cmp
and
and
add
pop
mov
les
or
lock
mov
xor
out
mov
aad
icebp
ffreep
test
js
and
adc
push
inc
pop
push
adc
neg
adc
xor
push
dec
mov
aad
repz
push
push
test
push
push
xor
cmpsb
jge
cmp
cld
pop
push
cmp
xor
push
pop
jnp
fmuls
pop
stos
push
stos
fucomp
jmp
insb
lods
fucomi
pop
je
out
adc
inc
stos
iret
shll
enter
movq
push
cmc
pop
les
add
sbb
sbb
mov
jns
cmp
sahf
jp
seta
lret
mov
invd
out
enter
push
lea
or
test
cmp
adc
fsubr
cld
adc
lahf
add
mov
cwtl
xchg
divb
sub
insb
fs
lds
push
mov
loope
leave
call
jae
out
mov
movsb
out
cmp
into
mov
xchg
mov
add
cmp
hlt
in
adc
sbbb
fmuls
mov
mov
not
popa
aam
pop
daa
dec
jge
rcr
stc
inc
sbb
mov
insl
rol
adc
xor
mov
cltd
gs
mov
mov
pop
push
push
aas
sub
inc
repnz
pop
dec
imul
rcll
mov
mov
out
aam
cmp
mov
mov
add
push
decl
push
std
cmpsl
test
dec
xor
adc
xor
in
pop
sbb
leave
aad
int3
outsl
dec
sub
mov
jp
hlt
ret
lcall
jns
addb
hlt
cmpsl
inc
out
push
dec
lods
les
xor
add
push
mov
enter
bound
loope
push
inc
daa
fsub
lcall
shlb
mov
adc
lds
sarl
outsb
das
push
xchg
cmc
movsl
mov
xchg
sbb
jl
loope
mov
or
ss
mov
cmpl
mov
cltd
ds
mov
sub
ficomps
add
ret
mov
xor
xchg
sub
leave
cmpsb
dec
dec
mov
pop
lret
inc
scas
add
jge
cmp
inc
sub
gs
or
pop
mov
mov
cmpsl
inc
pop
rcrl
fmul
out
rorb
testl
lods
push
mov
scas
lds
fildl
cmp
test
xor
test
out
pop
inc
mov
test
jl
outsl
or
inc
xchg
roll
jmp
push
out
das
sti
lret
jp
inc
inc
in
out
xor
aas
pop
push
fdivs
mov
jae
repz
mov
movsb
cli
test
call
push
rcr
dec
aaa
imul
sub
shrl
cmp
mov
xor
jp
rolb
or
cmp
ljmp
xchg
mov
smsw
notl
orb
pop
arpl
ds
jno
inc
rcrb
pop
jle
mov
mov
jae
sbb
dec
dec
mov
add
test
jl
dec
add
pop
pusha
pop
and
xchg
dec
sbb
out
es
arpl
rorb
xlat
inc
and
out
popa
faddl
dec
repnz
sbb
sbb
daa
rorb
andnps
lods
sub
lock
xor
sbb
outsb
push
je
test
xchg
arpl
or
pop
loopne
lea
sahf
popf
subl
sub
lahf
mov
jecxz
loope
or
xchg
cwtl
lret
in
pop
into
inc
out
mov
xchg
sbb
mov
leave
sbb
or
cmovo
lahf
lahf
adc
lods
push
mov
enter
adc
or
pop
popf
mov
nop
call
lds
cmp
aaa
pop
loop
jae
dec
jno
iret
ja
jmp
sub
fisubrl
stos
leave
inc
in
ljmp
mov
cmpsb
push
and
sbb
lods
ljmp
mov
push
xchg
lcall
mov
pushf
or
jb
ror
and
cwtl
popa
push
mov
lock
lock
xor
int
pop
inc
shrb
xchg
dec
dec
inc
bound
notl
jno
xchg
scas
pop
sbb
std
insb
lret
lahf
push
fcmove
fcom
cmc
dec
jg
into
inc
call
or
sbbb
or
subb
add
xor
sub
fdiv
mov
inc
xchg
inc
push
push
leave
jge
lcall
fs
loope
pop
aas
sub
pop
in
mov
jmp
mov
adc
repnz
repnz
mul
pop
or
hlt
aam
bound
into
push
in
push
rclb
int
jmp
jb
mov
mov
hlt
adc
sbb
aam
sbb
sbb
in
add
ret
lret
jo
sbb
and
pop
mov
in
xor
and
cli
pop
aam
jae
cli
adc
out
xchg
fmull
pop
mov
sbb
or
lds
outsb
sbbb
jmp
pop
fisttps
xchg
cmc
pushf
and
adc
scas
dec
ds
adc
jno
pop
sti
fnstenv
jle
movsb
bts
insl
lds
lret
mov
fildl
and
std
in
xchg
xchg
in
and
sub
shl
inc
sub
leave
lea
arpl
outsl
inc
cmp
iret
xchg
lret
xchg
or
int
pop
cwtl
or
push
add
ret
or
jne,pn
das
dec
xchg
sbb
adc
orl
mov
mov
adc
psubusw
sbb
adc
ret
rcrb
push
mov
cmpsl
push
scas
ficompl
mov
leave
mov
out
sub
shrb
js
or
inc
and
dec
xchg
xchg
inc
in
pop
pop
pop
out
jae
sbb
dec
sub
lock
into
xorl
imul
xor
xchg
xor
push
mov
push
add
rol
ret
xchg
rcrl
test
mov
adc
out
rcl
dec
cmpsl
inc
inc
mov
and
pop
mov
lret
inc
lock
imul
cmc
dec
aam
mov
popa
xchg
pop
mov
dec
mov
mov
adc
xchg
ja
xor
or
and
adc
insl
cmp
ret
aam
aas
je
add
sbb
lds
repz
vmwrite
cmp
xchg
jmp
das
jns
in
fwait
sub
int3
das
add
stos
dec
cmp
mov
ror
or
mov
xchg
xchg
dec
ficoml
adc
sbb
je
and
fistpl
rclb
push
or
xchg
xor
cmp
aam
jg
ljmp
js
xor
fmull
jecxz
fisttpl
les
add
mov
div
aad
mov
mov
outsl
xchg
dec
mov
xchg
pop
push
sub
ja
inc
xor
gs
aad
paddd
cmp
lret
push
cs
mov
popa
jle
int3
sub
insl
fwait
cmpsl
push
xlat
aad
sbb
sub
xlat
dec
mov
xchg
imul
add
jns
outsl
mov
push
lods
iret
das
sahf
jmp
pusha
and
cmc
ret
sbb
movsl
cmp
arpl
xchg
outsb
aam
inc
inc
sub
pop
lds
lds
daa
cmp
pop
iret
sub
jne
pop
stos
xor
xlat
nop
sbb
lea
cmp
or
xchg
hlt
sar
ret
ss
nop
lds
or
and
popa
mov
loop
add
ljmp
and
nop
add
test
or
cmp
lea
jmp
jmp
jmp
cmp
mov
out
insb
xor
mov
adc
stos
add
roll
popa
lea
jo
inc
lock
xlat
ret
decb
orl
and
dec
and
lret
pop
lock
jnp
adc
adc
xchg
add
cmp
loop
push
lds
nop
outsl
lea
or
inc
and
push
mov
pushf
jp
out
sub
into
sbb
cmpsl
sub
sub
add
push
out
jnp
jne
xor
insl
and
insb
sti
int3
popa
mov
jmp
imul
fadds
push
in
cmp
mov
cmp
popa
cli
adc
ljmp
jg
test
cmc
xchg
les
in
frstor
fwait
insl
xchg
test
pop
insl
sbb
pop
jl
xchg
gs
cwtl
mov
mov
call
or
jg
or
jp
cmp
lock
lods
shlb
fisubrs
push
mov
mov
gs
adc
je
mov
or
push
sbb
cltd
sahf
cmc
jle
sbb
stc
add
insl
incl
cmp
jb
push
sbb
bound
dec
ljmp
into
mov
dec
in
imul
in
iret
or
adc
out
mov
shlb
push
stc
lods
mov
inc
enter
sub
pop
pop
mov
mov
lods
sub
jb
iret
xchg
mov
pusha
out
inc
xchg
adc
outsb
add
dec
mov
jns
lods
cmpsl
in
xchg
sarb
xor
and
test
fcom
sbb
add
test
fprem
lret
jle
xor
mov
sbb
mov
mov
gs
adc
data16
fwait
stc
jp
test
lods
mov
leave
xchg
loopne
lock
jl
arpl
jp
xor
imul
xchg
mov
into
andb
xchg
aas
sbb
lahf
movsb
dec
jnp
mov
jnp
lahf
pushf
push
pop
inc
inc
fisttpll
pop
push
sbb
cmp
out
shlb
push
sbb
je
add
sbb
xchg
lret
jle
lds
jo
movsb
das
test
cmp
xlat
dec
inc
enter
movsb
jnp
add
fldt
in
aam
and
int
clc
stc
push
xor
ljmp
imul
push
sub
push
mov
notl
or
mov
dec
mov
sub
sbb
nop
xorb
leave
insl
add
lods
jno
mov
stc
nop
enter
adc
mov
sbb
sub
popa
cmp
fsubl
inc
pop
ds
paddusw
into
push
cltd
jbe
orb
mov
int
pop
out
mov
inc
jbe
and
cld
pop
mov
jg
movsb
xchg
aas
pop
cmp
mov
and
xor
or
cmc
das
imul
inc
sti
lds
fisttpll
dec
push
dec
sar
shll
mov
sti
shl
push
out
fcmovu
lcall
bound
mov
mov
jbe
sub
jecxz
int3
mov
inc
inc
int3
fists
mov
scas
adc
frstor
ss
fs
das
pusha
call
push
pop
xchg
pop
test
cs
pushf
call
or
inc
xchg
faddl
mov
ret
adc
in
xor
cmp
stos
test
andl
aaa
jp
add
in
jl
test
cmpsl
sub
pop
sbb
aas
mov
cmp
sbb
insb
insl
push
in
cld
xor
cmp
pop
xchg
xor
cmc
je
mov
jle
inc
mov
xchg
xor
pusha
jnp
mov
cmp
adc
mov
lods
outsb
mov
out
test
arpl
or
loopne
jecxz
mov
cmp
push
xor
jge
cmp
daa
in
xchg
scas
xchg
ret
inc
ret
sbb
xchg
cmp
push
mov
shl
push
sbb
push
add
pop
popa
and
push
dec
cwtl
in
mov
scas
sub
sahf
nop
jge
in
mov
leave
push
mov
test
lret
dec
sbb
adc
aaa
mov
lahf
mov
and
lret
lods
sub
xor
addr16
pusha
xchg
pushf
js
ja
cmc
add
adc
xacquire
outsl
mov
sbb
jg
scas
inc
addr16
in
lock
pop
test
aaa
mov
add
mov
mov
ss
or
pop
fmul
pop
fstpl
sub
mov
ds
test
and
cmp
jb
insl
rorb
faddp
in
xchg
lret
cmp
insb
xor
sub
mov
and
pop
out
push
pop
mov
int
movsb
jae
sbb
sub
adc
js
ljmp
sbb
and
cmp
pop
sub
inc
cltd
dec
sub
in
mov
adc
repz
es
or
xchg
sbb
andb
pop
sbb
push
je
cmp
scas
inc
xchg
fucomp
mov
in
mull
push
pushf
sbb
jecxz
push
xor
data16
sbb
mov
pop
call
mov
xor
pusha
rcrb
cmpsb
lds
or
xchg
jns
pop
loop
jns
jnp
dec
testl
or
mov
jns
sahf
jo
sbb
leave
lods
or
icebp
mov
lods
imul
out
mov
mov
push
dec
outsl
push
pop
and
sbb
je
movsl
sub
mov
fs
js
add
pop
movsb
inc
inc
mov
aas
mov
stos
fdivrl
xchg
cli
in
stos
mov
jnp
addr16
das
lret
mov
cmp
test
pushf
loope
ljmp
fwait
xchg
sub
scas
scas
loope
sub
in
mov
mov
dec
add
sbb
mov
or
stc
in
jae
xchg
adc
xchg
insl
jmp
add
lds
add
fidivrl
das
inc
in
mov
or
inc
lods
push
out
dec
mov
mov
jbe
sbb
cmp
fbstp
mov
ret
mov
and
clc
es
lods
mov
nop
ss
xchg
lock
bound
push
sbb
mov
out
ja
pop
push
mov
cld
jno
scas
int3
dec
call
sbb
mov
ja
inc
inc
xor
lock
ja
arpl
sbb
les
push
mov
push
xchg
dec
and
movsl
inc
ja
outsl
jae
dec
jns
js
addr16
pop
pop
jp
jl
dec
fwait
pop
pop
mov
fisttps
fs
mov
sbbl
mov
sub
push
bound
lea
xor
push
lret
sbb
dec
mov
jmp
dec
imul
cmp
addb
stc
mov
mov
ss
pop
xor
ja
imul
insl
mov
mov
stos
and
scas
cmp
mov
es
scas
imul
mov
and
pop
aad
add
jnp
push
or
aad
xor
mov
xchg
and
popa
movsl
mov
xchg
testl
sbb
mov
loope
test
stos
dec
xor
or
out
mov
shll
fadds
lret
imulb
ldmxcsr
sarb
popa
pushf
leave
popf
adc
repnz
outsb
sub
add
arpl
jno
movsb
mov
ss
xchg
jge
loop
repnz
pop
test
shrb
test
nop
xor
mov
push
mov
cmp
pushf
imul
enter
xor
test
pop
mov
insb
cld
ret
cs
imul
push
fs
es
pop
aam
and
stos
cmp
cmp
jmp
lret
xchg
loopne
gs
lock
push
mov
add
jp
mov
test
mov
jmp
push
shlb
pop
jge
enter
cmpl
jns
dec
icebp
ds
jmp
adc
add
movsl
std
xchg
fisubl
mov
decb
adc
insl
loope
cmp
jp
insl
aaa
mov
mov
shr
fs
test
jl
adc
mov
arpl
or
pop
lock
popa
cmpb
rcrl
sbb
xlat
pop
add
jmp
cmp
int
sbb
pop
sub
out
pop
stc
lahf
das
pcmpgtd
push
jp
or
mov
call
inc
or
ds
pop
lds
scas
mov
cmp
cmp
cmpsl
outsb
enter
nop
je
fstpt
stos
and
and
daa
jecxz
sub
sbb
add
pop
push
stos
shlb
popf
push
out
mov
das
push
out
enter
aad
add
js
fsubrl
and
sub
fcmovnu
and
mov
mov
int
pop
or
push
jle
push
pushf
stc
sub
sbb
hlt
int
or
sub
jge
mov
mov
js
add
ret
push
mov
sub
fidivl
jno
js
lcall
xor
test
push
push
jp
bound
sbb
jmp
pop
xchg
pop
shll
add
loope
mov
mov
or
xor
or
jnp
imulb
cmp
outsb
repz
fwait
lea
mov
lods
mov
aas
add
mov
int
pop
xor
test
fstps
fstl
and
loop
jle
xchg
daa
out
pop
pop
push
shll
scas
jne
loop
ret
dec
jmp
inc
leave
adc
int
xchg
cltd
lds
push
xor
cwtl
rclb
test
clc
adc
int
and
cmc
push
mov
icebp
cs
jmp
push
je
das
xor
pop
or
hlt
xor
lret
xchg
je
stos
xor
lea
bound
data16
and
mov
scas
adcl
in
jne
and
or
sbb
and
js
jge
loopne
pause
xor
cmp
iret
pusha
lcall
mov
add
or
mov
mov
xchg
cmc
xchg
out
bound
xor
mov
bound
std
jnp
popa
xor
fsubrs
into
mov
adc
push
shll
in
mov
jns
mov
outsl
xchg
push
loope
and
pop
int
cmp
xchg
dec
adc
movsl
ret
subl
fsts
or
push
mov
stos
mov
push
mov
sub
push
addb
lods
fcmovnu
and
sub
pop
sbb
loop,pn
stos
push
insl
sti
push
xor
sub
pop
int
addr16
int
mov
js
mov
push
mov
push
fisubs
sahf
shrb
xor
cmpsl
pop
subl
push
iret
xor
or
sbb
add
mov
or
mov
nop
mov
xchg
adc
lock
xor
cmp
mov
pop
mov
aad
mov
push
jle
cmp
cmpsl
or
and
cmp
sbb
xlat
or
xor
push
hlt
push
out
sub
mov
je
and
xor
insb
xor
push
leave
and
or
shrl
mov
dec
jmp
rcrb
cmpsb
mov
fsts
stos
ret
arpl
pop
dec
je
roll
imul
jae
js
adc
jge
std
adc
ja
sbb
repnz
sub
mov
sbb
test
cs
push
int3
mov
dec
scas
xchg
out
mov
rcll
mov
push
gs
ret
xchg
push
fildl
popa
in
mov
mov
xchg
push
adc
loopne
in
jge
jge
call
aam
loop
adc
dec
test
mov
addr16
out
ffree
mov
in
mov
daa
push
inc
cmp
pop
hlt
data16
test
popa
mov
push
idiv
lock
sub
enter
pop
jo
outsb
sbbl
test
mov
cmp
xchg
stos
lcall
mov
push
xchg
jns
nop
div
pop
mov
je
lahf
fs
push
pop
out
jmp
pop
mov
pusha
aad
or
in
fwait
aad
cmp
xchg
fdivr
jno
push
add
pop
leave
inc
out
call
cli
inc
pop
dec
or
dec
xlat
mov
loopne
xor
push
imul
stos
adc
mov
addr16
aam
pop
jge
lock
mov
je
out
xor
out
ja
scas
mov
add
xchg
and
popa
enter
call
fimuls
in
cltd
pop
cmp
call
cmpsb
inc
clc
test
sub
add
jo
mov
jns
ljmp
int
adc
repnz
sub
scas
jb
push
xchg
fisubrs
shl
leave
maxps
call
mov
cld
fsubl
clc
cmp
xchg
pushf
fyl2xp1
pop
mov
rcrb
out
in
push
pop
inc
fldenv
jg
cmpsb
pop
data16
mov
add
mov
xchg
fs
leave
ljmp
mov
push
inc
ret
pop
dec
scas
std
or
push
outsl
in
jns
fistpll
stos
and
jmp
scas
sub
xchg
adc
mov
jmp
movsl
push
js
arpl
fcomps
insl
sbb
mov
addl
not
jns
and
xor
call
fwait
stos
mov
dec
cmc
and
pop
sbb
adc
dec
sub
pop
test
aaa
mov
sbb
lret
out
xor
fisttpll
loop
sti
mov
outsl
shll
lret
mov
or
push
lcall
lods
inc
lahf
out
aad
mov
incl
cmpsb
rorl
pushf
mov
popf
jns
insb
lods
icebp
push
mov
mov
and
out
ljmp
mov
es
inc
pop
push
mov
inc
aam
jns
or
imul
lea
sub
jge
push
push
fstl
ss
int3
inc
jecxz
jg
call
push
test
pop
xor
add
mov
xor
mov
imul
pop
in
pop
cltd
ss
xchg
bound
or
sti
in
mov
jne
sbb
scas
loopne
jo
jmp
mov
add
xchg
jbe
adc
into
in
adc
sub
dec
sub
cmp
hlt
fsubrl
add
mov
sub
fimull
or
movsl
in
jecxz
call
and
adc
mov
out
fsubl
and
cltd
jp
adc
inc
fistps
push
mov
sahf
sub
mov
mov
stc
fsubp
lcall
mov
push
adcl
adc
in
repnz
jle
cmp
lea
and
jnp
out
jl
add
scas
sahf
adc
inc
pop
and
inc
jbe
and
loopne
mov
clc
mov
xor
lahf
enter
arpl
cmp
xchg
mov
jo
data16
add
mov
xor
testb
test
adc
rcl
xor
mov
adc
adc
inc
mov
push
and
cld
leave
fs
out
int3
lea
pop
punpcklwd
ret
mov
in
dec
or
and
bound
add
xchg
adc
or
adc
or
dec
lret
ds
mov
mov
sahf
adcb
shl
mul
pushf
les
pop
movsb
and
cmp
mov
jns
lock
mov
sub
xorl
pop
cmp
lods
or
stos
xor
pop
adc
rclb
sar
push
adc
inc
push
sahf
mov
psubusw
movsl
mov
test
mov
push
fsubrl
cmpsl
scas
add
testb
mov
pop
xor
push
inc
out
mov
repz
and
adc
sbb
dec
jle
xchg
jno
cs
xlat
fsubrl
loopne
fwait
gs
adc
movl
stos
cmp
bound
xor
lcall
mov
push
std
aad
ds
mov
xor
push
sbbb
jno
into
out
scas
iret
fistpll
xor
mov
mov
jp
jmp
cmpsl
and
mov
inc
or
es
jns
enter
lcall
lret
mov
stos
test
nop
xor
std
jbe
stc
mov
adc
in
pop
cmpsl
adc
std
mov
test
lock
push
pushf
cltd
repz
daa
or
addr16
insb
mov
push
mov
loop
hlt
xchg
push
and
inc
mov
cmp
hlt
mov
jne
add
and
cs
mov
gs
xor
jno
mov
lcall
out
cld
sahf
xchg
aam
jno
mov
push
fsubr
call
rcrl
fwait
xor
pop
mov
sbb
hlt
mov
sbb
in
aam
cmc
fldl
dec
stc
mov
add
xlat
loop
enter
adc
xor
and
xor
xchg
movsl
sbbb
enter
into
xor
or
lock
out
aas
icebp
jecxz
movsl
out
inc
cmpsb
mov
and
inc
or
mov
cmp
jecxz
xchg
rcll
pop
jns
and
add
cmpsb
addl
jg
mov
jae
movsb
nop
inc
les
loope
cmpsb
test
mov
dec
addr16
cmp
jmp
loope
pop
fisubs
mov
mov
ror
mov
xor
xchg
leave
cmp
sbb
lock
dec
push
pushf
xlat
mov
pop
xor
bound
call
mov
ficoml
mov
sub
call
das
mov
lods
push
inc
xorl
jnp
cld
aam
fdivs
and
mov
jge
sub
xchg
sbb
subb
jo
int
push
mov
dec
push
std
in
inc
sub
xor
push
mov
imul
push
sub
or
cld
pusha
stc
push
xchg
arpl
sub
rclb
lods
pop
in
sahf
lcall
mov
sbb
sbb
mov
lea
adc
cmp
lahf
jp
cmc
adc
inc
gs
cmp
or
jp
jnp
dec
iret
fcmovb
push
mov
cli
popa
mov
cmp
and
dec
dec
push
cmp
insl
or
xchg
sub
frstor
test
loopne
mov
sbb
push
pop
adc
jno
cmc
push
jae
mov
outsb
repnz
and
adc
addl
dec
jo
popa
sti
and
sub
rcll
sbb
rol
mov
sub
push
xor
xchg
sub
pop
test
and
nop
in
rolb
or
lret
in
or
xor
mov
shll
fisubs
imull
pop
jle
sub
in
dec
xchg
popf
ror
test
xchg
daa
lock
jno
js
dec
xchg
loop
push
xor
test
je
mov
addr16
cmc
sbb
xchg
in
and
jne
dec
or
add
call
lret
mov
test
or
jb
enter
push
xlat
aas
xor
ret
dec
add
std
mov
insl
xchg
insl
aas
in
lock
arpl
jbe
cmp
sbb
xchg
jbe
shll
adc
test
pop
add
popf
adc
dec
mov
stos
dec
test
ss
pop
sbb
lock
inc
rolb
dec
out
mov
mov
adcb
cmc
pop
scas
sbb
into
mov
vpaddusw
loop
aaa
xchg
setge
mov
cmp
sbb
loope
test
es
addr16
cmovge
jg
mov
adc
mov
add
insb
shll
mov
jmp
pop
mov
push
lea
mov
clc
dec
jnp
xchg
jmp
pop
nop
mov
pop
cwtl
arpl
adc
dec
add
adc
dec
jbe
enter
push
aam
and
in
xchg
orb
pop
xchg
cmp
or
push
fwait
mov
popa
or
bound
jbe
sbb
sbbb
xchg
cmpsb
js
and
cmp
insl
push
cmp
xchg
insl
or
cmpsl
add
cmc
xor
mov
mov
aam
xchg
leave
xor
and
clc
dec
jb
out
fstps
inc
aad
xchg
push
jns
in
xchg
sub
push
test
dec
xlat
test
push
push
mov
and
pop
mov
movsl
jmp
in
imul
dec
aas
inc
cmp
je
add
pop
icebp
cmpl
pop
xchg
nop
in
sbb
and
cmp
mov
mov
nop
mov
mov
stc
pop
pop
fcoms
pushf
or
inc
popf
enter
test
cmc
orl
int3
ja
rorb
mov
push
pusha
orb
mov
addb
inc
lds
inc
cli
dec
jl
sub
mov
jmp
fsubl
xor
or
mov
movl
jb
inc
pop
gs
adc
adc
or
scas
ret
pop
lcall
movsb
dec
lahf
xchg
hlt
iret
push
lahf
add
push
sbb
call
ret
stc
mov
jns
and
andl
fdivs
pop
hlt
ret
adc
addr16
lahf
icebp
push
sbb
dec
mov
rorb
adc
arpl
mov
movsb
fdivs
jae
into
mov
push
scas
jne
stc
xchg
or
fs
cmp
jecxz
mov
loopne
jno
rclb
fimull
pop
cmpsl
mov
pushf
mov
pop
dec
iret
add
arpl
dec
pop
xor
sub
fwait
pop
xchg
inc
pusha
mov
xor
xor
mov
rcl
or
mov
shll
dec
sbb
inc
sbb
cmp
cld
jge
jbe
lret
fwait
jg
sbbl
test
addr16
hlt
mov
insb
repz
dec
dec
add
mov
xchg
inc
push
movsl
lods
aam
enter
jge
mov
inc
push
adc
mov
dec
adc
push
add
push
mov
jge
or
jbe
xor
mov
lea
dec
sub
popf
add
fisubrs
je
in
in
adc
dec
les
cli
jecxz
push
or
xor
sti
addl
jge
std
lds
push
push
mov
insl
mov
hlt
data16
pusha
add
mov
mov
push
insl
daa
dec
jl
cld
lock
xorl
sbb
and
push
push
jb
int3
andb
dec
push
aad
orl
stc
cmp
leave
dec
mov
repz
pop
ret
mov
shlb
fsub
pop
or
lcall
xchg
mov
xchg
in
outsb
out
xchg
adc
mov
ja
add
push
mov
imul
jo
dec
mov
sti
adc
add
aam
xchg
and
push
and
or
mov
je
sti
outsb
and
sbb
mov
in
dec
pushf
lds
ret
clc
cli
pop
xchg
scas
or
xchg
inc
xor
inc
xor
mov
sti
or
inc
lea
cmpsb
and
mov
mov
add
push
sub
cwtl
es
xor
pop
outsl
xchg
cld
mov
loopew
inc
daa
inc
add
in
mov
das
dec
es
iret
aad
inc
pop
jae
dec
inc
stc
jle
in
aam
cmpb
repz
fcoms
dec
mov
mov
pop
aad
xchg
inc
xor
sbb
xchg
jecxz
notl
loopne
mov
push
aas
lea
xchg
fbld
push
ss
das
stos
push
and
push
dec
fiadds
mov
push
xchg
sbb
imul
sbb
rclb
inc
fistps
neg
inc
adc
adc
push
xchg
scas
shrb
add
fcomps
cmp
mov
dec
pushf
cwtl
adc
and
lea
dec
ret
sbbl
out
cmc
push
inc
cmp
mov
loopne
dec
xchg
data16
xor
pushf
test
or
ja
aad
mov
sub
xchg
movsb
inc
rcrb
call
int
xor
push
iret
and
jg
test
adc
mov
adc
cli
mov
cmp
jmp
test
inc
inc
pop
dec
bnd
push
push
push
push
push
add
out
adc
sub
clc
pop
lds
jo
xchg
mov
jnp
xor
push
cmp
rcrl
mov
xchg
lret
cmp
ss
sub
divl
pop
pop
lds
or
inc
vminsd
sbb
lahf
add
mov
int
push
ja
push
push
test
and
aad
sti
aad
jo
cmp
push
or
push
rcr
xor
das
pop
sub
or
jo
mov
nop
aas
dec
jo
insl
mov
jmp
pop
lret
insb
lret
or
lret
in
and
outsb
lahf
sbb
orl
add
push
inc
bnd
aaa
or
mov
xchg
int3
or
sub
cmp
divl
adc
lahf
xor
mov
sar
sbb
add
sahf
pusha
lock
leave
fnstenv
xlat
xor
cmpsb
iret
fidivl
or
outsl
sbb
repz
nop
mov
in
mov
jb
out
mov
adc
mov
xchg
cs
leave
rcrb
and
outsl
into
inc
in
les
sub
xor
aas
int3
add
in
test
jo
push
dec
in
mov
fisttpl
push
add
jbe
inc
stos
enter
push
push
jo
mov
inc
mov
icebp
mov
add
out
fwait
lea
mov
push
sbb
stos
outsb
ret
or
xchg
xor
adc
arpl
jb
jb
ds
mov
adc
add
enter
imul
xchg
fcompl
pop
dec
subl
fistpll
cmpsb
xchg
mov
pop
fwait
sub
lea
cmovbe
mov
gs
add
mov
mov
and
add
add
mov
adc
sbb
adc
sahf
pop
add
int3
xor
or
sahf
mov
sub
mov
add
push
dec
in
test
mov
sub
iret
ljmp
mov
jae
fisttpll
xchg
dec
or
inc
divl
pop
fisttpll
cld
fucom
jg
sbb
mov
iret
lds
stos
fwait
pop
mov
frstor
jne
sbb
fnsave
test
pop
mov
adc
orb
negb
adc
dec
pop
inc
scas
push
lds
ljmp
call
adc
mov
pop
adc
mov
xchg
push
mov
xchg
or
jnp
xchg
jmp
mov
pushw
sub
add
gs
bound
sti
pop
pop
stos
mov
dec
ret
push
and
cmp
and
icebp
pop
fidivs
fidivl
daa
shrl
adc
shl
in
hlt
xor
in
jmp
imul
mov
shrl
stos
push
inc
dec
push
adc
push
popa
jge
out
mov
xor
sti
xchg
lock
pusha
or
lods
inc
or
fnsave
into
xlat
pop
pop
les
or
sbbb
lods
push
movsl
push
fcoms
mull
mov
xor
nop
movsl
call
orl
cltd
xchg
arpl
sbb
mov
stos
adc
or
faddl
dec
stc
jp
stos
cmp
dec
mov
lods
bswap
mov
pop
int
jmp
lds
stc
popf
out
testl
lock
test
lea
jns
jmp
push
xchg
addb
mov
lock
push
push
pop
lahf
cltd
add
popa
ljmp
fiaddl
dec
mov
sbbl
mov
lds
add
cltd
rcll
loope,pt
dec
aaa
jmp
sbb
inc
mov
test
push
push
mov
cwtl
add
pop
add
leave
repnz
mov
les
test
push
aam
and
pusha
sbb
call
pop
hlt
push
xchg
dec
je
enter
jle
orl
lock
xor
movsl
dec
adc
pop
aaa
lock
cwtl
pop
and
les
mov
adc
dec
jnp
xchg
dec
test
add
pop
ret
sbb
in
sbb
sbb
out
and
pop
int
inc
mov
add
and
rorl
sbb
cmp
pop
push
or
dec
cmpsl
or
push
leave
movsb
add
adc
pop
sbb
push
and
xor
data16
mov
fwait
mov
js
mov
imul
addr16
sub
fs
ret
ret
and
scas
inc
pop
xor
cwtl
scas
add
fsubl
dec
or
jns
jb
and
lods
dec
imul
roll
fldt
testl
pop
dec
pushf
aaa
mov
in
jmp
in
repnz
rorb
mov
aaa
inc
pop
sub
xchg
les
je
adc
ffreep
fildl
dec
movsb
mov
neg
loopne
cmc
pop
mov
jl
add
cs
stc
mov
lock
or
cld
mov
pop
add
insb
in
cmc
out
inc
and
fwait
inc
mov
loope
aad
ret
xor
lods
mov
pop
push
pop
pop
jl
nop
pushf
mov
push
mov
xlat
in
pop
cmp
mov
scas
rorl
cmpsl
and
sub
repz
jge
jl
mov
ss
fwait
xlat
into
xchg
inc
xchg
mov
xor
sbb
sub
mov
inc
or
pop
fsubrl
pop
push
pop
mov
xchg
sub
sbb
nop
dec
add
pop
sahf
cmp
inc
sub
add
jo
es
push
mov
shll
or
add
mov
inc
pop
cmp
fbld
mov
repz
imul
mov
mov
xor
inc
pusha
add
ds
pop
pop
xchg
push
xchg
out
mov
fsubrl
push
dec
xor
movl
inc
rcll
movsb
xor
hlt
dec
pop
popf
outsb
ret
cmpsl
popf
insb
mov
jmp
add
std
out
jle
push
stc
pop
test
movsb
xor
jecxz
gs
jns
addb
push
lahf
inc
add
imul
jmp
mov
lock
mov
mov
or
fwait
jns
sub
cmp
repnz
out
sub
mov
jge
jp
fisubrs
adc
pop
mov
icebp
fstpl
or
mov
stc
fidivs
repz
imul
data16
adc
xchg
repnz
arpl
mov
cltd
mov
lods
fsubl
push
cmp
shrl
leave
aaa
outsb
mov
jne
cmp
mov
repz
jbe
xchg
fnstcw
daa
or
call
and
fcmovnu
iret
decb
mov
pop
or
lds
xor
scas
dec
push
adc
xor
xchg
push
lods
int
or
ds
test
cltd
adc
repz
adc
in
jmp
mov
mov
push
int
fbld
xchg
jne
lock
into
fildll
data16
addr16
xchg
and
pop
inc
in
adc
cmp
loop
sarl
ret
loopne
repz
jno
jl
cmp
xor
addr16
sub
mov
cmc
xor
stc
insb
cmp
sti
jp
mov
out
xchg
movsl
mov
stc
xor
call
aam
and
lcall
xchg
cmpsl
data16
out
addr16
rcrl
add
lea
iret
scas
mov
or
pusha
imul
mov
and
xlat
push
repz
push
cmpsb
sub
lea
sub
mov
xor
outsl
jg
xchg
lods
dec
push
test
dec
jecxz
xchg
inc
imul
out
insb
and
mov
ret
movsl
sub
int3
adc
cmp
gs
push
adc
pop
lret
adc
mov
mov
cmp
fstpl
inc
dec
lcall
sub
mov
push
inc
or
iret
cmp
cmp
iret
sti
subl
xchg
adc
pop
mov
outsl
add
push
lcall
aaa
popa
cld
xlat
lods
cmp
or
lcall
je
lret
adc
mov
popf
add
stc
inc
nop
xor
mov
dec
pop
mov
fildll
insl
lods
stos
add
sbb
cmp
and
push
inc
divl
or
mov
dec
push
and
hlt
xchg
mov
sbb
mov
cmp
aad
loop
inc
pop
xchg
ljmp
fildll
or
imul
inc
pop
push
das
jae
xchg
fwait
enter
mov
jl
popa
aam
stos
dec
xor
or
lret
mov
xlat
outsl
js
stos
pop
dec
jl
and
and
das
sbb
dec
out
repz
push
fisubrs
insb
or
fisubrs
subb
cmc
xor
cli
pushf
xchg
scas
or
fldl
jns
add
mov
jbe
iret
jo
jbe
cwtl
out
or
mov
push
jno
add
loope
nop
and
mov
mov
push
inc
add
jecxz
nop
inc
cmp
push
mov
add
inc
add
mov
bound
lretw
mov
xchg
incb
dec
bound
push
dec
dec
std
shll
add
inc
scas
fnstenv
fsubp
xchg
push
push
dec
mov
xchg
and
pop
mov
pop
xchg
push
add
rcrb
pop
mov
and
out
out
xor
mov
pushf
lea
imul
add
sub
stos
and
cltd
jnp
js
jge
push
adc
enter
data16
std
jo
xor
out
aam
add
test
and
frstor
scas
out
lds
sub
clc
adc
push
or
jbe
sub
sahf
mov
sar
mov
ja
dec
mov
dec
into
xor
cmp
daa
aad
push
fnsave
xor
mov
xchg
sbb
pop
insb
jae
push
test
rcrl
push
or
mov
dec
js
addr16
cmp
hlt
cmp
addl
pop
clc
out
mov
inc
sub
push
inc
xchg
xchg
insl
shr
mov
push
lahf
push
adc
cmp
xchg
lcall
and
sub
filds
sub
dec
sbb
jo
pop
gs
xor
je
js
pop
pop
ja
inc
mov
pop
mov
shl
mov
addr16
int3
mov
test
and
jnp
fstpt
and
sbb
pop
sub
xor
dec
subl
test
pop
lret
les
cmp
pop
out
bound
pop
add
mov
mov
scas
xorl
movsb
mov
mov
push
movsb
dec
jmp
sbb
jg
call
fst
cmpl
aad
fisubl
adc
inc
sarl
mov
pop
fildll
xor
mov
mov
fadds
scas
daa
push
sbb
dec
ret
test
js
mov
out
add
out
mov
insl
adc
push
ds
pop
lods
jge
in
imul
test
push
mov
pushf
cmpsl
mov
fstl
push
or
jbe
js
int3
ret
jbe
int
push
vmwrite
js
insl
xor
push
scas
sahf
jae
pop
das
push
fs
add
push
pop
push
jp
mov
xchg
xor
popa
jne
pop
sbb
cld
sub
add
pop
add
mov
sahf
sti
cmp
ret
addl
mov
sahf
mov
sbb
jge
lret
jl
lea
mov
out
jmp
aas
jle
mov
and
and
sbb
pop
pushf
int
xchg
sub
popf
arpl
jnp
into
mov
lods
lea
lahf
or
pop
out
insb
cmp
cmp
mov
fneni(8087
xchg
xchg
stc
leave
mov
mov
pop
jmp
lret
sahf
out
lcall
jp
pop
aaa
adc
mov
xor
or
mov
push
repz
cmpsl
int3
outsb
mov
push
jb
movaps
dec
jp
add
xor
mov
inc
add
sbb
dec
lahf
sub
mov
push
test
jbe
aas
and
xor
lahf
fstpl
push
jbe
enter
daa
pop
inc
or
loope
ss
lock
das
mov
adc
jp
sbb
nop
pop
jb
or
shrb
cs
insl
dec
test
add
cltd
out
jae
adc
push
lret
imull
cmp
lods
filds
ret
loop
xchg
xchg
jb
xor
rcrb
mov
xchg
mov
sub
pop
add
das
adc
mov
dec
notl
sbb
stos
cmp
and
in
or
data16
cmp
out
insl
sbb
out
outsl
or
roll
insl
cli
mov
ja
jmp
je
lds
cmp
pop
push
adc
sbb
shlb
cmp
jae
push
mov
xchg
mov
mov
pop
xchg
gs
jmp
mov
cmp
xchg
out
shrl
shll
cmp
jle
and
xor
shl
adc
mov
dec
sub
inc
or
ljmp
pop
hlt
lds
mov
bound
sub
fwait
cs
cmp
mov
xor
pop
or
mov
mov
lods
jge
xchg
or
call
lods
lcall
jle
pop
dec
add
xchg
cmpsb
mov
pop
xorl
push
cld
lock
imul
or
and
pop
mov
lock
cltd
cltd
fs
xor
in
mov
movsb
shr
adc
test
nop
in
dec
lret
gs
cmp
idivb
pop
hlt
lds
pop
jge
rcr
lods
adc
xor
mov
je
shlb
inc
dec
mov
outsl
jns
mov
lcall
adc
mov
mov
push
test
dec
lock
sbb
shl
cltd
jb
data16
mov
adc
icebp
in
jp
push
xchg
call
and
fsubrl
add
jmp
popf
inc
daa
mov
push
sbb
sub
sbb
or
xchg
mov
leave
sti
hlt
stos
jne
icebp
in
les
push
ret
xchg
sbb
sahf
int
shlb
xchg
add
sbb
push
lahf
dec
xor
ja
or
into
cmpsb
xlat
xchg
push
lock
popa
je
fistps
jne
xor
sub
gs
and
push
aam
adc
fsubs
pop
data16
repz
pop
xor
shlb
jge
dec
sub
mov
pushf
ficoms
fsts
fisttpll
mov
iret
roll
icebp
sqrtps
mov
push
xor
stos
inc
mov
in
jb
jecxz
xchg
push
nop
loop
adc
cld
and
mov
les
loop
sub
ja
cmpsl
mov
dec
push
cmc
mov
movsl
int
jmp
cmp
ss
add
sub
rcl
cld
cwtl
imul
pop
cld
pop
push
jo
jns
data16
mov
mov
sahf
ffree
andl
dec
jp,pt
dec
lock
sbb
rclb
fmul
ds
or
dec
mov
fdivs
in
ds
testb
aad
ret
sahf
lahf
data16
xor
insl
mov
jae
roll
mov
push
out
mov
jp
imull
pop
sub
mov
repnz
insb
mov
jb
mov
or
lea
enter
loopne
loop
loopne
dec
pop
in
sbb
repz
mov
mov
mov
hlt
mov
push
mov
pusha
xchg
cmc
movsl
repnz
fidivs
ds
icebp
pop
jle
in
dec
pushf
cmpsb
sbb
sbb
cli
fmuls
aam
lods
xchg
mov
sbb
fimull
in
add
jne
sub
or
bound
insl
stc
pop
jnp
jp
movsl
ja
out
clc
sar
pop
xchg
shlb
push
js
andl
xor
cmp
mov
jns
jbe
sbb
dec
test
dec
shlb
movsl
inc
repnz
test
popf
out
push
or
mov
test
sub
jbe
sbb
sbb
jo
jne
das
jmp
inc
movsb
sti
sbb
aad
mov
ss
cmc
push
xchg
and
call
enter
or
les
ss
fst
in
dec
test
int3
xor
mov
mov
scas
fistpl
fnstcw
mov
cs
jp
sub
out
icebp
cs
sbb
dec
call
leave
mov
into
mov
sbb
bound
notb
and
mov
out
rcr
stc
jmp
pop
add
and
sub
sbb
sub
add
jne
jb
pop
inc
xchg
clc
pop
mov
xchg
cmp
test
or
stc
fldenv
jo
sbb
or
add
es
xor
mov
cmp
mov
xor
xchg
js
test
pushf
in
mov
mov
movsl
jmp
insl
add
mov
addr16
mov
inc
inc
repnz
inc
push
shlb
xor
sbb
cmp
push
pusha
push
add
mov
ds
test
dec
and
clc
add
jbe
fcomps
movsb
rcrb
dec
pop
jmp
ja
aas
rorl
cmp
test
mov
sbb
ret
ss
iret
mov
fnsave
imul
sarb
mov
cmp
fsubl
mov
mov
adc
or
arpl
fdivrl
jp
pushf
in
test
xchg
mov
push
cmp
cmp
daa
sub
mov
jae
xor
in
pop
movsb
out
push
daa
xor
ret
scas
repz
inc
pop
in
xchg
adc
int3
jl
mov
push
cmp
push
sub
in
bound
sbb
int3
iret
sti
mov
cmp
lahf
lcall
es
mov
test
into
pushf
pop
pop
insl
movb
jp
clc
or
jmp
sub
ss
rcr
pop
aad
adc
iret
fidivrs
lcall
xor
rclb
pusha
in
and
roll
mov
int
mov
lret
repz
mov
rcrb
scas
int
pop
inc
mov
adc
cmp
cld
dec
inc
jecxz
sub
ds
cmc
dec
and
lock
inc
mov
adc
mov
aas
bt
fisubl
inc
sahf
cli
mov
imul
xor
fnsave
je
and
mov
jo
push
mov
in
pop
jbe
adc
inc
inc
jns
add
cmp
inc
in
insb
add
and
mov
sbb
pop
and
or
iret
leave
gs
cwtl
loopne
add
mov
mov
ds
dec
stos
mov
mov
imul
mov
ljmp
addr16
cwtl
push
testb
and
inc
mov
or
mov
push
cmp
aad
jecxz
mov
in
pop
push
aas
inc
mov
add
pop
xor
add
pop
cmp
lret
add
sbb
push
add
dec
leave
nop
jle
lea
add
mov
lock
push
int
push
xlat
mov
fcoms
xchg
add
or
pop
add
and
dec
aad
ret
add
add
add
test
add
pop
filds
insb
add
outsl
mov
cli
add
stc
int
aad
add
cs
insb
hlt
cmp
dec
xorb
out
xor
pusha
xlat
add
add
pop
dec
lods
inc
js
dec
or
push
add
movb
mov
dec
shl
add
jl
pop
pop
pop
add
pop
pop
leave
push
push
inc
out
add
shlb
add
lret
out
mov
rcl
mov
rcl
dec
sbb
add
test
mull
jl
arpl
add
jle
mov
daa
adcl
sbb
inc
add
add
push
mov
jge
push
jge
cmp
add
mov
jns
xchg
xchg
add
inc
pop
sti
add
xchg
ret
in
adc
mov
mov
and
adc
dec
push
fcomp
into
sub
sbb
adc
nop
push
or
jne
inc
add
adc
jns
inc
js
push
jg
sbb
mov
add
movsl
lret
int3
mov
add
adc
add
add
sti
mov
addl
inc
mov
inc
insb
ja
int3
cmc
mov
aaa
test
dec
mov
inc
jmp
fstpt
mov
out
mov
add
add
clc
adc
repnz
add
jnp
jbe
nop
notb
add
lock
jecxz
mov
shlb
dec
lret
add
xor
pushf
sar
cmpsb
aas
mov
xchg
add
jecxz
in
add
rcl
inc
mov
add
push
sub
add
dec
fsts
pushf
sbb
int
rolb
jmp
add
add
adcb
push
xchg
fmulp
adc
mov
sub
mov
repnz
mov
inc
push
stos
mov
add
cli
push
or
and
mov
add
push
xchg
jno
imul
ljmp
arpl
pop
ret
inc
dec
out
jle
sbb
ror
dec
rcl
inc
je
or
imul
jno
out
sub
push
sbb
fsubrs
int
mov
or
shlb
push
mov
push
add
xchg
out
jns
add
lea
add
push
ds
push
iret
pop
jae
jo
scas
add
mov
adc
add
xchg
fwait
or
inc
sbb
mov
imul
cmpb
add
cs
adc
shll
add
fs
add
sbb
sbb
mov
pop
fmul
in
sub
add
add
xchg
mov
int
icebp
mov
add
ljmp
data16
ljmp
mov
out
add
add
lret
aam
cmc
add
addr16
add
test
add
aad
pop
inc
popl
cltd
call
jecxz
lahf
jmp
and
mov
js
jmp
lea
aaa
mov
sbb
ds
cmp
cwtl
mov
xor
add
in
mov
mov
add
mov
filds
test
shll
add
popf
fmuls
in
pop
add
mov
dec
into
scas
push
inc
jb
int
fs
adc
mov
and
jmp
popa
push
add
inc
add
mov
add
mov
push
inc
test
pop
pop
out
mov
aam
adc
add
inc
into
js
test
pop
dec
or
add
test
lret
mov
cmp
pop
add
inc
inc
test
js
add
push
sub
adc
pop
lret
mov
cmpsl
pop
outsb
jge
add
mov
mov
shrl
add
icebp
push
fisubrs
and
push
shlb
sub
enter
mov
jnp
outsb
sbb
inc
jo
cmp
add
fsubl
add
mov
cltd
data16
inc
and
cmp
push
adc
rcrb
xchg
pop
add
xor
add
adc
dec
shl
cmp
jbe
mov
jl
mov
out
into
ret
push
rorl
xchg
sbb
hlt
icebp
mov
cmpsb
mov
mov
es
jecxz
test
add
in
jo
sub
add
roll
in
sar
add
rclb
cmp
xor
add
ret
add
add
sub
add
add
sbb
add
loopne
jno
xlat
add
pushf
jge
add
xchg
loopne
repnz
mov
clc
pop
mov
xor
add
call
pop
cli
add
inc
jns
sub
add
add
hlt
push
push
add
jl
add
dec
rorb
out
and
and
jmp
cmp
dec
jbe
add
ja
cli
jp
mov
add
popf
inc
sub
pop
mov
add
lcall
repnz
pop
sub
ret
adc
xchg
out
repnz
add
or
in
lret
movsb
adc
add
inc
or
rcrl
xor
cltd
jecxz
add
push
jge
xor
outsb
sbb
add
add
scas
inc
bound
lahf
jp
add
xor
jno
add
pushf
fsubrp
cmp
jg
pop
mov
cmp
dec
repnz
add
test
addb
pushf
icebp
dec
test
repz
adc
pop
cltd
fwait
rcrb
mov
add
fimuls
jle
mov
enter
repnz
add
cmpsb
cmp
xlat
add
sub
dec
inc
lahf
rorl
push
out
mov
out
add
sub
mov
scas
out
add
dec
add
add
add
pushf
sbb
sahf
mov
inc
jmp
jge
push
push
jge
sub
add
popf
rorb
mov
test
add
and
in
add
aas
shrb
jae
in
sub
pop
fsubrs
push
scas
int
jo
testb
sbb
insb
add
sbb
push
push
push
clc
int3
mov
or
inc
add
call
xchg
add
add
dec
loope
lahf
call
fisubrl
jne
dec
mov
mov
mov
sbb
sub
xchg
pop
and
roll
je
mov
insl
jge
imull
xchg
cld
xchg
insl
movsl
filds
inc
dec
sub
movsb
cli
rorl
fstl
push
add
cld
decl
aas
movsl
jg
in
sbb
add
lock
stc
out
add
pop
push
enter
add
add
pop
stos
lds
add
repz
add
lods
scas
and
add
and
mov
test
dec
rolb
add
cmp
jnp
jp
add
sub
push
mov
add
dec
mov
mov
incb
add
in
jae
inc
shll
insb
out
jb
mov
out
add
js
pop
ljmp
loopne
cmp
adc
inc
popl
add
adc
dec
add
and
dec
mov
add
aad
mov
sbb
fnstenv
jne
or
fadd
sub
mov
scas
repz
sti
push
aam
xor
scas
or
add
mov
lods
jmp
pop
mov
mov
sti
jg,pt
push
xchg
sub
fisubs
add
or
pop
ja
mov
lock
outsl
or
negb
les
add
shrb
xchg
leave
mov
in
add
sbb
int3
test
loop
jge
and
mov
add
fistl
mov
fisttpll
add
inc
cmovb
pop
adc
add
sbb
jp
add
jp
aad
dec
popf
sbb
mov
xchg
add
repz
and
dec
add
scas
pop
push
mov
dec
xlat
sub
sub
mov
sbb
push
add
add
pop
je
and
jp
ja
add
mov
xor
cli
add
inc
dec
add
mov
add
add
cmpsb
fldl
movsl
stc
jno
mov
lcall
dec
mov
push
inc
pop
mov
xchg
fs
daa
inc
xchg
popf
pop
fisttpl
jno
lret
add
lret
add
inc
mov
loope
lahf
fdivs
out
fsub
mov
out
shl
arpl
arpl
sub
jl
mov
cli
ret
stos
bound
enter
sub
jmp
add
scas
push
jno
outsl
mov
xor
pushw
or
pop
mov
out
in
cmp
mov
push
pop
cli
pop
scas
mov
sub
fnstcw
test
cmp
sbb
out
inc
dec
add
scas
mov
add
test
stos
pop
add
pushf
adc
add
add
and
jge
push
or
or
cmpb
push
lret
js
pop
test
outsb
aaa
xchg
lahf
mov
pop
lods
out
nop
xchg
or
xchg
out
jmp
jno
inc
rcll
stc
daa
arpl
pushf
clc
inc
xchg
fs
sub
arpl
fucompp
sub
pop
inc
xchg
and
in
ljmp
andb
call
push
mov
js
add
sub
jle
arpl
sti
into
cmp
rorl
cld
xor
js
in
stos
jle
add
loope
sbb
lret
neg
and
rclb
add
gs
cmp
dec
mov
out
cmpsl
loope
dec
xor
or
jecxz
push
stos
xlat
adc
out
decl
pop
or
out
xchg
add
push
test
notb
popf
cmp
lods
pushf
add
cmp
test
add
mov
and
pop
sbb
test
xor
arpl
cmpsl
mov
iret
std
cld
lea
mov
fsubrs
iret
mov
int3
xor
repz
pop
push
push
push
scas
scas
cld
adc
mov
xchg
fisubrl
push
mov
in
out
les
jno
sarb
outsl
jmp
xlat
aad
pop
add
call
cli
or
cmpsl
xor
cmp
cs
ljmp
jmp
andb
add
lods
add
mov
push
dec
insb
sbb
push
pop
fmull
fcomps
inc
arpl
add
bound
mov
gs
lock
mov
ss
add
shrb
inc
pop
add
jg
add
push
sbb
lret
adc
ss
add
add
pop
rcrb
mov
add
ss
dec
pusha
pop
mov
jecxz
and
adc
jecxz,pt
cmpsb
and
mov
jmp
cmp
lea
jns
cmp
add
shrl
or
and
pop
inc
js
sahf
call
pop
andl
mov
push
pop
outsl
jns
cs
push
sub
pop
mov
fs
mov
mov
iret
mov
push
mov
mov
fwait
inc
mov
adc
into
xchg
sbb
leave
repz
mov
imul
es
adc
or
add
dec
sti
adc
pop
pop
inc
xchg
cmpsl
inc
sub
inc
or
sti
shlb
aaa
add
adc
xchg
cwtl
inc
push
dec
pusha
adc
mov
add
ret
out
cmpsb
gs
push
int3
dec
movsb
sub
roll
dec
cmp
cld
add
lret
es
add
mov
arpl
out
add
ror
adc
add
mov
mov
icebp
xchg
fstpl
add
test
xchg
xor
add
aad
lret
jae
add
imul
add
adc
or
push
mov
add
cmpsb
xchg
mov
push
adc
sbb
add
popa
push
hlt
enter
fxch
les
add
in
push
add
add
cli
add
imul
inc
lods
jecxz
jmp
pop
je
arpl
jno
cmp
add
lock
add
rcrl
loop
add
inc
add
pop
xor
xchg
adc
ret
pop
fcomps
movb
adc
lea
xor
rcr
lods
add
lds
xchg
cmpsb
add
imul
push
xor
xor
fidivs
scas
adc
jle
adc
cmc
movsb
add
out
fisubrs
in
movsl
adc
jno
xchg
daa
jle
ss
js
mov
xor
icebp
mov
adc
add
adc
cmp
add
add
cmpb
mov
cmc
cs
or
ja
scas
mov
cmp
imul
nop
test
mov
and
push
pop
or
lods
insl
clc
adc
mov
sahf
insb
pop
jno
jecxz
outsl
fldt
mov
jne
add
iret
sub
or
dec
ret
call
loop
sub
cs
add
add
stos
jg
loop
js
add
push
mov
add
add
pop
and
mov
cld
bound
mov
sbb
movsb
pusha
xor
dec
push
sbb
pop
add
add
xchg
pop
add
xchg
or
fistpll
insb
xor
pop
daa
add
fcoml
pop
inc
add
aaa
jo
add
push
adc
and
adc
in
and
loop
loope
mov
out
jne
mov
jb
int
ljmp
scas
add
daa
lea
mov
lret
ds
inc
stos
or
and
add
je
int3
dec
dec
cmp
inc
mov
push
add
add
daa
pop
adc
jb
mov
out
mov
sbb
in
mov
sbb
add
fadds
dec
add
popa
pop
mov
pop
stos
cmp
je
add
je
stc
cmc
roll
sub
cmpsl
cmp
out
mov
iret
cmp
adc
mov
add
add
aaa
fdecstp
sub
stos
inc
fldenv
push
add
pop
in
push
add
ja
cmpsl
adc
or
lds
dec
sarb
adc
das
imulb
lock
add
xchg
mov
xchg
jp
cmp
outsl
lds
push
pop
lcall
shrl
mov
movsl
movsb
add
out
ss
sti
in
test
mov
adc
ret
insb
add
in
scas
mov
adc
stos
mov
pop
insl
sarl
add
cmp
popa
cli
in
cmp
test
icebp
cmpsl
fnstenv
les
out
insb
rolb
adc
xchg
decb
cmp
mov
test
popf
or
movsl
add
add
sbb
shr
push
add
setns
sbb
add
jmp
add
clc
xchg
add
popf
xchg
mov
je
and
push
shrb
xor
xchg
pop
cmp
xchg
jns
mov
lahf
ljmp
rol
xor
popf
sbb
icebp
rcrb
add
sbb
inc
add
mov
inc
repnz
jmp
add
inc
and
cli
imul
add
mov
add
jo
pop
cmc
jns
and
cmp
and
add
cmc
push
addb
mov
xchg
jmp
mov
in
push
loope
add
popa
lock
call
jp
rcr
push
and
adc
mov
jl
add
jae
xor
add
xor
mov
pop
out
add
add
cmp
stos
lds
shrl
inc
inc
jge
add
pop
jno
sub
or
add
test
in
push
add
jno
xchg
inc
add
xor
sbb
and
mov
add
lds
add
andb
popa
sbb
inc
sbb
in
push
add
lret
add
cld
jp
in
call
jae
add
cmc
jne
jns
lcall
xor
leave
icebp
dec
push
push
add
jbe
movsl
es
or
mov
mov
cmp
xchg
cld
jmp
inc
fldcw
lods
inc
mov
decb
inc
pop
lods
test
movb
jg
add
imul
out
add
add
jmp
mov
add
scas
int
data16
mov
rcrl
xlat
inc
push
push
or
xor
add
mov
inc
cmpsl
cmp
sbb
jg
cltd
out
cmp
ret
xchg
cmc
add
dec
jns
lret
imul
stos
pop
lcall
aas
nop
clc
inc
lock
in
add
mov
mov
inc
jo
add
shl
push
repnz
jo
add
cmp
add
push
add
add
mov
pushf
adc
push
imul
hlt
call
push
stc
test
sub
loope
add
add
or
outsl
add
and
sub
add
add
in
lock
mov
push
add
inc
adc
or
insl
add
jg
outsb
push
mov
add
test
mov
rclb
adc
outsb
dec
push
fldl
mulb
adc
add
cltd
jg
add
call
sbb
mov
aad
es
scas
mov
push
add
or
inc
outsl
inc
mov
iret
ljmp
inc
jo
test
mov
sbb
ficompl
add
dec
push
sbb
pop
aam
xchg
jnp
shr
cmp
lods
add
add
int
jle
fmulp
jb
cs
add
sub
hlt
lods
sub
push
add
shrb
pop
enter
cwtl
movsl
mov
add
add
mov
mov
add
test
mov
adc
and
int3
dec
or
add
pop
add
add
mov
in
push
adc
push
add
pop
add
add
dec
repnz
add
cmp
jp
lock
add
je
sub
mulb
add
outsl
sbb
rorl
add
ret
add
pop
jl
in
and
insl
add
ret
aas
rolb
inc
jno
jns
neg
dec
cmp
shrl
add
push
fnstsw
scas
mov
cmc
jno
mov
in
pop
push
cli
jo
xor
mov
and
test
fsqrt
mov
mov
adc
sbb
adc
div
scas
jge
add
push
insb
in
cltd
imul
xor
fucomip
and
ret
fadds
mov
int3
mov
clc
ds
add
adc
fbstp
pop
inc
add
sub
shrb
or
rorl
cld
fwait
cmpsb
iret
mov
sbb
xorl
add
mov
add
pusha
adc
or
aad
mov
add
mov
inc
enter
das
add
add
dec
xor
cmp
arpl
mov
jg
repz
mov
dec
cltd
and
shrl
sbb
cmpsb
imulb
add
sub
hlt
inc
add
add
adc
mov
cld
imul
add
mov
push
dec
fdivr
jne
and
pop
fidivrl
inc
orb
daa
loope
sahf
pop
clc
inc
pop
add
fwait
jmp
and
add
mov
pushf
inc
jle
add
aas
rcrl
in
push
xchg
dec
pop
repz
outsb
add
pop
je
push
cmpl
hlt
imul
inc
and
shlb
aam
mov
jno
test
ret
mov
mov
add
jb
test
dec
adc
and
mov
test
loop
jo
pop
ja
pop
out
add
repnz
mov
loop
and
sub
sbb
shll
cmpsl
jne
add
lret
in
cmp
es
aaa
push
stos
add
adc
outsb
sbbb
mov
xchg
and
ss
add
test
push
lcall
xor
add
scas
fsubrl
lock
movl
and
jg
lods
mov
add
lcall
popa
sub
sahf
jecxz
jle
into
xor
call
pushl
in
fmul
sbb
jle
addb
sbb
jmp
add
sbb
mov
pop
cmc
movsb
rorb
fsubl
mov
add
sbb
les
dec
int
add
push
lea
cmp
add
inc
js
bound
mov
jmp
mov
inc
mov
fcmovnb
mov
add
mov
xchg
cmpsl
outsl
cmc
fldt
cltd
and
add
gs
add
push
cld
movsl
add
hlt
add
cmpsb
mov
enter
xchg
add
add
lahf
mov
ficomps
lea
int
int
push
push
scas
rcrb
add
icebp
sti
xchg
jbe
add
das
stos
xchg
out
and
cmp
pusha
push
bound
test
cmp
inc
pop
add
and
or
fs
pushf
push
pusha
ret
out
outsl
push
aad
lahf
js
cmpsl
repnz
add
sub
sbb
out
mov
imul
jno
mov
mov
aad
data16
ljmp
add
testb
je
push
insb
dec
push
fstl
rclb
ror
lods
mov
pop
adc
add
cmp
jo
add
inc
jo
outsb
xor
xchg
stos
mov
adc
adc
add
mov
adc
cmp
pop
dec
test
mov
xor
add
mov
and
mov
cmpsl
adcl
iret
add
clc
loopne
bound
stc
out
cmp
pop
add
outsb
dec
add
inc
fs
cmp
sub
xor
test
mov
mov
adc
inc
lcall
imul
sub
xor
cltd
das
jle
or
test
add
call
dec
cmp
jl
jo
add
add
xchg
daa
jmp
mov
and
mov
popf
xor
push
sub
je
shll
cmpsb
add
mov
insb
mov
inc
call
push
lds
mov
stc
mov
jecxz
add
mov
imul
cmp
add
xlat
or
xor
add
scas
add
add
mov
stos
out
bound
add
add
ficompl
rol
add
call
add
and
or
in
cmp
add
push
sbbl
add
add
das
test
pop
xlat
ljmp
add
jbe
bound
mov
add
enter
sub
in
fimuls
or
lcall
test
add
mov
dec
add
jb
pop
aam
mov
xor
cmp
pop
sbb
ss
pop
std
int
or
mov
movsb
mov
xor
pop
or
mov
add
xlat
sarl
ljmp
push
imul
les
in
jae
add
jl
xchg
jno
outsl
jecxz
popa
ficoml
imul
mov
jp
in
lcall
dec
jmp
je
sbb
xchg
push
sub
or
pop
loope
pushf
insb
xlat
int
mov
xchg
cmpsl
xor
addr16
xchg
push
jmp
pop
mov
or
xlat
shrb
pop
mov
popa
inc
js
fdivrs
outsl
daa
iret
test
outsl
sahf
ret
adc
add
add
mov
int3
mov
mov
popf
cmp
jno
movsl
mov
popa
add
clc
movsb
ret
out
inc
fiadds
add
cmpb
sub
sbb
jp
rolb
mov
hlt
lods
add
addr16
lret
sub
add
xchg
cmc
aas
mov
dec
lret
std
roll
jae
enter
mov
cld
inc
outsb
sbb
pop
add
add
stos
xchg
add
mov
decl
xor
add
mov
xlat
nop
adc
pop
mov
je
mov
outsb
jecxz
outsl
adc
xchg
cld
rorl
mov
add
mul
add
dec
call
loope
fsubp
ret
dec
push
add
adc
fstl
xor
jo
jecxz
and
scas
xchg
sub
packuswb
pusha
fiadds
pop
xchg
cli
xor
popf
or
or
inc
xor
cmp
push
incb
sub
inc
xchg
inc
and
pushl
add
les
or
cwtl
adc
jnp
inc
or
and
xor
fldcw
add
popl
adc
cli
xor
out
ret
jne
add
lock
lret
xchg
xchg
add
add
stc
mov
adc
imul
jge
push
inc
and
push
cli
pop
add
add
ret
xor
cmp
xchg
push
push
and
out
mov
testb
mov
mov
add
rolb
scas
cmpsl
sti
add
loop
pop
sbb
jbe
call
cli
imul
lret
jae
iret
aad
lods
add
in
test
roll
or
inc
pushf
sbb
roll
iret
es
loope
into
insl
sti
inc
xor
cmp
imul
sbb
mov
aad
int
sub
push
or
jmp
lds
test
movsl
mov
imul
scas
xor
int3
sub
inc
pop
add
jl
addr16
js
inc
es
loop
inc
cmp
in
rcl
sub
and
lods
jl
mov
add
push
adc
cmpsl
addr16
into
dec
addr16
add
lods
mov
arpl
add
lahf
sbbl
dec
xor
gs
mov
dec
push
js
movl
xor
mov
addr16
push
addb
scas
repz
mov
xlat
mov
scas
dec
mull
cmp
and
add
xchg
lds
arpl
adc
clc
iret
xor
imul
inc
mov
and
cmpsl
sub
mov
test
roll
notb
add
add
jb
repnz
scas
js
stos
enter
outsl
leave
mov
or
lret
add
add
and
xchg
stc
fiaddl
add
add
add
sbb
mov
adc
loope
fwait
or
fdivr
push
add
add
add
lds
ret
ljmp
or
lods
sub
mov
dec
popa
jae
mov
add
xchg
jle
sbb
pop
imul
xchg
in
or
cmp
push
add
sahf
ffreep
pop
aam
adc
xor
push
cld
xchg
cmp
add
add
sbb
mov
lret
stos
std
inc
and
cmc
add
pop
xchg
in
add
pop
push
fiadds
inc
pop
mov
jecxz
adc
adc
cld
sub
gs
je
mov
sbbl
fildl
xor
inc
fnstsw
adc
mov
in
mov
jge
daa
and
sub
or
inc
jns
mov
jmp
cltd
lret
loope
in
xchg
jge
sti
jbe
xchg
add
lcall
sbb
inc
fldcw
movsl
dec
sub
cbtw
movsb
xchg
jb
add
and
fwait
xchg
add
insb
jl
dec
mov
mov
jl
ds
fcomps
pop
dec
je
aaa
or
sub
pop
jg
xchg
and
insb
xor
add
push
out
jno
dec
mov
cmp
add
fldcw
xchg
jecxz
add
xchg
in
shlb
test
das
incb
fimuls
cwtl
pop
mov
sti
add
add
pop
push
pop
push
aad
jbe
mov
test
loope
stos
lods
mov
push
add
add
sub
enter
jae
lods
xor
mov
stos
push
mov
jle
dec
xchg
fistpll
loopne,pt
lock
xchg
pop
or
add
rol
adc
in
ljmp
push
add
pop
add
ja
add
loopne
test
xor
pop
cli
aaa
inc
mov
xor
adc
mov
and
test
add
add
stos
push
or
ljmp
push
sahf
xchg
shlb
pop
adc
mov
add
xor
add
push
sbb
movsl
mov
pop
pop
mov
scas
js
inc
jns
xor
addb
in
pusha
pop
mov
push
dec
sub
mov
xor
jge
out
lcall
push
cli
data16
cmp
add
enter
adc
mov
inc
add
test
mov
pop
and
mov
test
mov
sbb
icebp
aam
push
add
call
loopne
gs
xor
js
cmp
or
subb
dec
dec
add
mov
ret
cwtl
lret
scas
gs
mov
add
fcomps
notb
inc
xor
call
or
mov
inc
xchg
out
mulb
mov
ljmp
pop
dec
xor
xor
mov
sti
dec
mov
cmc
jnp
mov
out
pop
hlt
xchg
adc
mov
inc
jno
stos
lret
push
addr16
lds
aaa
add
repnz
mov
xor
gs
test
inc
add
add
test
ja
add
or
push
inc
add
lcall
mov
scas
or
adc
inc
cli
in
aam
mov
sbb
adc
stc
add
pop
sub
mov
test
xor
push
sti
inc
adc
mov
call
in
aad
negl
add
sti
add
inc
int3
xchg
lcall
imul
add
adc
push
icebp
xchg
add
or
or
add
imul
or
sahf
fisubs
lret
inc
sbb
lock
idivb
cmp
pop
xchg
xchg
in
cmc
jge
lret
push
push
add
cwtl
and
add
mov
add
bound
cmp
shlb
fstps
adcl
cmpsl
jg
bswap
shlb
xchg
xchg
fisubl
sbb
mov
mov
jns
mov
testl
insb
mov
rclb
push
fnstsw
cmp
test
outsl
fnsave
sbb
cli
loope
bound
js
iret
cwtl
push
mov
push
inc
cmp
cmpsb
mov
lods
aaa
jp,pt
dec
loope
pop
daa
jle
mov
outsb
or
test
rcll
das
imul
jo
or
jp
test
in
push
mov
insb
mov
jo
movsl
lret
mov
push
xor
cwtl
insb
and
push
je
sub
mov
lret
and
pop
test
insl
lahf
add
inc
aas
mov
les
movsl
fldl
jge,pn
loop
sub
mov
push
push
push
push
mov
inc
xchg
inc
cli
or
fmull
sbbl
pop
fs
cmpsl
outsl
repnz
adc
mov
jne
mov
push
cli
jmp
int
or
ds
mov
sti
out
push
rcrl
inc
push
nop
mov
sbbb
arpl
xor
mov
sub
sbb
mov
add
test
push
in
cmp
out
adc
mov
pop
sbb
add
outsb
loopne
push
cwtl
push
inc
jae
mov
add
add
add
add
cwtl
andb
add
cli
jns
add
add
sbb
lret
in
add
sub
pop
or
push
std
push
xchg
loop
push
xor
add
add
repz
in
mov
loope
xlat
repz
xor
xchg
push
mov
sbb
mov
rcr
jge
mov
fs
repnz
cli
cmpsl
jno
pusha
stc
and
push
jge
imul
jns
in
xor
in
pop
add
iret
out
aam
jne
adc
xor
or
cli
push
fidivl
popa
or
adc
sbb
mov
mov
xor
adc
fbstp
es
clc
in
sbb
sub
fbstp
add
std
cs
addr16
jns
xchg
cmpsb
cmpl
ljmp
inc
cmp
add
adc
inc
mov
in
and
bswap
add
add
add
pop
call
fstp
pop
sub
sbb
or
sahf
aaa
xor
into
lds
dec
cmp
in
jecxz
mov
outsb
fidivrs
das
or
bound
xor
outsl
int
add
inc
cmp
sub
pusha
fldenv
mov
push
cmp
mov
adc
add
mov
sbb
cmp
insb
and
sub
dec
jno
pusha
pop
push
in
leave
xor
adc
rcll
sbb
xchg
xor
ficomps
inc
orl
cwtl
loop
lods
mov
int3
mov
xor
jp
dec
jns
repnz
mov
add
out
push
stos
xchg
rolb
add
ljmp
cmp
dec
adc
jle
push
cwtl
add
gs
outsl
enter
jl
jecxz
xchg
mov
test
add
outsl
sbb
jl
inc
fistps
or
add
mov
xchg
jmp
cltd
sub
jp
adc
subb
add
add
stc
jae
add
push
sub
mov
lahf
cltd
je
add
js
fldt
push
pop
js
pop
add
xlat
sub
pop
insb
adc
inc
or
outsb
pop
int3
add
jmp
or
pop
jno
jno
or
mov
add
pop
mov
mov
dec
popf
jg
xor
add
add
add
or
addb
fisubrl
push
cmpsl
dec
inc
ret
imulb
shrl
cs
inc
sbb
mov
lret
mov
add
add
insb
mov
fnstcw
push
mov
dec
mov
jl
icebp
stc
jb
fistps
dec
stos
mov
mov
ret
repz
jmp
dec
jg
aam
xor
fwait
adc
xchg
rolw
add
cmpb
add
lods
subl
aad
decl
xor
adc
in
add
js
jns
ds
or
lock
insb
ret
loopne
xchg
and
pop
add
xor
jae
mov
jecxz
mov
in
insb
sbb
or
add
mov
add
neg
or
and
sub
iret
jge
xchg
int
fstpt
nop
cmp
outsb
dec
push
fstl
cmovs
sti
pop
and
or
mov
or
lods
or
loopne
pop
ficoml
add
adc
push
push
sti
push
lret
pop
ja
sub
jp
inc
js
scas
repz
out
das
xchg
xor
pushl
cmp
add
xor
ret
push
inc
fadds
lea
negb
loop
js
xchg
push
xor
push
fidivrl
pop
mov
add
add
sub
call
test
add
pop
dec
sub
daa
mov
inc
scas
fs
stos
pop
icebp
gs
add
jg
xor
add
jae
xor
push
inc
jns
pusha
push
push
dec
sbb
ljmp
inc
push
sbb
sarl
add
sbb
arpl
cmpsb
cltd
mov
lock
xchg
addr16
jp
sub
push
add
jae
rcrb
add
lea
push
pop
mov
dec
sbb
popf
xchg
out
inc
in
add
push
faddl
loope
clc
cld
add
add
mov
daa
fnstenv
seta
popf
js
push
lock
sbb
fdivrs
movsb
hlt
push
lahf
inc
mov
les
orb
add
add
add
add
adc
jnp
xor
lret
inc
mov
js
aaa
add
add
add
add
xchg
sub
stc
fcmovne
stc
adc
add
add
mov
aad
fs
adc
test
pushf
out
jns
aad
pop
xchg
lret
push
subl
push
inc
sti
add
enter
jle
es
pop
push
hlt
mov
xor
int3
dec
lock
push
test
pop
fisttps
dec
fsts
add
stos
pop
imul
add
jne
adc
cmpsb
add
add
fdiv
js
add
dec
pusha
lcall
sub
and
adc
testb
in
add
mov
jns
addr16
sub
out
mov
add
cmp
ds
dec
push
push
loope
add
adc
movsb
adc
mov
addr16
add
add
push
add
daa
xchg
add
add
mov
ljmp
movsl
lea
icebp
sbb
and
add
hlt
mov
fisubs
mov
and
ja
add
mov
push
rorl
dec
pop
add
cmpsb
lds
mov
lods
lds
call
add
add
xor
jo
fsubs
and
pop
insl
in
sti
lret
cmp
jmp
sbb
out
xor
sti
sbb
mov
add
jge
lret
pop
aam
xchg
loope
add
lock
push
outsb
xor
push
pusha
jnp
push
sbb
inc
add
jne
jno
pop
push
add
push
adc
call
pop
lcall
das
or
lahf
int3
cwtl
add
add
add
loop
push
out
ds
xchg
sbb
push
cmp
daa
mov
in
jne
inc
mov
insb
ret
call
aas
fwait
clc
fimull
jle
add
mov
pop
lods
aaa
imul
fs
sub
sub
xor
mov
lcall
fimull
ljmp
movsl
jae
sub
sti
ljmp
dec
imul
add
ljmp
add
data16
lahf
ds
dec
std
add
clc
jg
add
pop
pop
cld
imul
jp
leave
rcl
mov
cmp
mov
xorb
jecxz
and
mov
jle
add
mov
ffreep
xrelease
mov
add
inc
dec
sub
shlb
cwtl
and
add
shlb
mov
add
mov
int
rolb
mov
cmc
add
add
mov
mov
enter
cmpsb
nop
pop
stos
hlt
rolb
outsl
test
xchg
add
dec
and
mov
popf
ret
rclb
lahf
pop
dec
sub
cmpsb
xorl
addb
jl
push
inc
cmp
add
pop
cmc
xchg
repnz
cmpsl
mov
and
ret
add
mov
add
js
lcall
sub
push
add
in
call
mov
adc
mov
pop
add
mov
add
add
div
pop
ja
or
in
fnstenv
mov
add
add
jmp
xor
cmp
popf
fmuls
sahf
loope
or
pop
jmp
add
call
rcl
dec
add
add
es
test
addr16
adc
test
je
mov
xchg
inc
mov
mov
jecxz
push
sahf
add
add
mov
ja
pop
and
cmp
popa
push
repz
std
jnp
fdivr
mov
jmp
mov
aad
jg
test
out
sub
or
add
ss
mov
test
loope
sbb
add
mov
sbb
or
dec
add
add
or
popa
lahf
adc
or
pop
xchg
mov
je
xor
add
add
push
flds
xor
ret
xor
xor
fcmovu
insl
pop
inc
ja
adc
adcb
fadds
sub
mov
add
rolb
pusha
ljmp
add
pop
add
mov
add
out
cmp
add
mov
arpl
inc
push
dec
jmp
sub
add
pushf
push
cltd
xchg
dec
add
push
adc
nop
mov
mov
sqrtps
repnz
std
sbb
pop
ljmp
in
out
push
cmpsl
add
add
repz
add
lret
push
or
fadd
ja
hlt
pop
daa
push
sub
mov
icebp
pop
push
out
scas
add
jecxz
dec
iret
rorl
dec
add
stos
xchg
jbe
add
loop
lahf
jg
xor
ror
in
push
add
push
sub
roll
push
and
sub
xchg
xchg
mov
mov
lret
cwtl
dec
jle
xchg
inc
cmpsl
in
jnp
in
push
mov
add
mov
mov
add
add
add
insb
mov
adc
add
jne
dec
xchg
inc
sarl
arpl
fadds
add
add
fcomps
xor
cwtl
adc
lret
jnp
jb
or
int3
add
add
mov
lahf
out
loopne
xor
test
mov
mov
xchg
mov
fisttpl
mov
push
jmp
pop
push
add
outsl
mov
negb
xor
stc
pop
adc
test
out
xchg
xor
insl
stc
mov
inc
cmpsl
imul
aaa
sbb
scas
nop
sub
data16
insb
push
mov
mov
loop
mov
std
mov
mov
xchg
adc
xchg
xor
out
push
mov
mov
add
add
roll
hlt
adc
add
xchg
add
push
add
daa
add
shlb
push
push
cwtl
fadds
xor
push
dec
sub
xchg
jmp
cmp
daa
cmp
mov
mov
in
mov
xor
and
sbb
pop
dec
add
add
push
movsl
jb
outsl
xor
or
mov
add
jnp
imul
mov
out
pop
lock
push
push
dec
addr16
ds
subl
pop
or
mov
xchg
pop
in
cwtl
or
cmc
pop
divb
cld
aad
popa
dec
nop
pop
scas
sub
adc
pop
sbb
add
inc
adcl
mov
jp
pop
decb
dec
or
push
push
add
add
dec
xchg
shlb
fiadds
xchg
push
add
mov
add
add
test
fs
xchg
jg
pop
pusha
nop
adcb
add
mov
pop
std
cmpsb
add
push
cmp
add
inc
push
push
add
dec
xchg
lahf
test
adc
shll
dec
repz
fwait
es
cmc
jmp
loope
jg
add
add
sahf
ja
inc
mov
and
adc
mov
add
xchg
scas
mov
rolw
xor
fsts
in
adc
in
dec
adc
xchg
sahf
mov
dec
jb
les
cmp
adc
aaa
nop
jmp
ret
imul
sbb
movsb
fs
add
adc
ds
xchg
add
pusha
cmp
add
xlat
inc
sbb
and
std
xor
pop
movsl
mov
push
xlat
mov
push
jl
pop
mov
int3
mov
mov
fimuls
js
cmpsl
add
add
cld
das
push
jp
nop
imull
test
enter
xchg
aaa
add
jl
add
xchg
repnz
mov
enter
aam
bound
lcall
addr16
ret
add
mov
xlat
or
fsubrl
rorl
xchg
add
mov
mov
ja
mov
iret
jbe
xchg
mov
push
test
pop
sub
arpl
je
or
or
xor
lahf
dec
jecxz
loope
jno
lock
outsb
add
out
add
add
repnz
imull
mov
add
sub
mov
lahf
aaa
outsl
jmp
add
xchg
mov
stos
int3
push
test
add
mov
test
cmp
mov
pop
push
add
add
stos
sub
add
mov
add
inc
mov
jnp
add
les
mov
adc
stos
loop
add
add
fisubs
push
daa
push
pop
xchg
arpl
add
repnz
add
add
cld
push
inc
add
add
jb
outsb
dec
pop
sahf
adc
jns
pop
add
add
pop
dec
mov
add
add
out
jae
and
js
incb
add
je
imul
add
add
xchg
repz
add
mov
ret
outsl
cmc
cmp
lcall
add
add
rolb
ret
mov
mov
push
jmp
adc
shrb
pusha
push
insb
push
inc
push
xchg
fcmovne
cli
xor
imul
fdivp
fdivrl
call
cmp
je
fxam
cwtl
xor
aad
cmp
les
cwtl
jle
pop
add
fwait
test
lods
cmpsl
jmp
lcall
int
mov
pxor
add
add
pop
mov
add
add
or
notb
xor
shlb
dec
xor
dec
pop
jg
insb
add
add
aaa
push
fidivrl
cltd
jecxz
jecxz
lcall
cmp
pop
test
push
mov
jg
xor
out
out
push
jmp
add
loopne
add
add
mov
idiv
outsl
fnsave
scas
fwait
jecxz
jno
add
xchg
fsubrs
ja
add
adc
push
add
add
adc
gs
add
add
fs
jmp
add
js
mov
in
dec
icebp
into
add
add
xchg
daa
lcall
add
add
rolb
ret
mov
mov
aas
push
mov
and
pop
sbb
mov
rorb
dec
hlt
mov
add
or
add
add
mov
jbe
imul
mov
mov
hlt
fwait
andl
cvtdq2ps
add
into
adc
jp
adc
loopne
ljmp
cli
or
aad
nop
cwtl
pop
pop
mov
cmp
arpl
pop
inc
lds
in
add
mov
xchg
add
je
sub
inc
jle
pop
data16
in
fwait
insb
xchg
insb
lea
fsubp
mov
mov
sbb
jb
in
ret
or
lret
add
leave
mov
push
add
or
pop
inc
icebp
adc
jge
aas
mov
add
or
pop
add
in
cmp
cmc
pop
add
push
add
ret
test
lds
call
cmp
fsubl
rorb
dec
int3
xchg
out
repnz
int3
test
mov
fidivrl
jge
jo
add
movsl
fwait
jecxz
sub
adc
cmp
add
clc
mov
add
loopne
mov
aas
mov
inc
add
xor
push
or
mov
scas
pop
pop
test
clc
or
pop
in
and
add
lret
dec
push
or
ds
sbb
lods
jnp,pt
fcomps
les
xchg
rol
jnp
ret
fistl
stos
les
add
xor
dec
mov
inc
push
outsb
ljmp
dec
aaa
cmp
adc
iret
xor
jno
addr16
cli
dec
fucomp
adc
enter
cli
and
test
sub
test
outsl
mov
add
inc
lock
rcrb
sub
in
push
das
popa
xchg
fildll
nop
mov
xchg
fnstcw
out
adc
movl
adc
sub
rcl
add
add
adc
xchg
int3
dec
cmpsb
mov
sub
xor
fs
cmp
daa
fistl
andb
xor
adc
add
push
fidivs
repz
pop
xor
cmp
xchg
pop
cmp
jmp
clc
add
popf
in
aaa
outsl
stos
aam
pop
fiadds
jnp
outsb
or
add
cli
jl
add
add
aaa
lret
ss
xchg
imul
mov
out
jbe
xor
mov
enter
or
jns
mov
or
xor
lcall
lds
insb
aas
gs
rolb
jle
lret
add
add
out
sbb
aaa
sbb
add
add
lahf
mov
lret
hlt
sbb
aas
mov
imul
in
sbb
add
add
pop
stos
sub
cld
mov
cmp
add
sbb
xchg
adc
add
add
adc
out
jo
outsl
imul
pop
cltd
roll
fmul
gs
mov
pop
dec
add
add
inc
enter
lock
pushl
add
mov
pop
cs
push
mov
adc
add
sbb
je
pop
xchg
add
fwait
rolb
add
add
push
pop
or
es
imul
lods
iret
add
add
daa
and
sub
jle
xchg
or
test
mov
adc
test
or
icebp
or
and
mov
mov
gs
cmpsl
push
add
xchg
xchg
add
add
add
jnp
dec
neg
lods
add
aaa
insl
jp
adc
int3
aam
cmpsb
push
sarb
sub
add
and
inc
jp
jno
sub
pop
xchg
push
fsubr
add
and
aas
dec
add
pop
xchg
add
jno
xor
jecxz
add
cmpsl
lcall
cmp
das
inc
js
add
ja
arpl
andl
scas
and
jnp
add
cmp
jbe
fisttpl
pop
pop
cmp
pop
adc
ss
add
add
jae
add
adc
add
and
dec
add
pushl
loopne
sbb
andb
add
mov
pop
jmp
enter
sahf
movsb
inc
pop
pushw
imull
and
mov
push
add
fnsave
aaa
outsb
std
shlb
xchg
insb
and
stos
xor
lea
rcr
ja
mov
xor
ret
inc
outsb
and
and
jbe
inc
adc
inc
loope
or
hlt
cli
out
add
inc
jmp
sbb
add
arpl
cmp
fmull
aas
ret
mov
add
add
mov
lahf
mov
std
lcall
and
mov
add
add
add
sbb
ret
sub
dec
and
sbb
add
mov
add
sbb
addl
enter
or
aad
cmp
add
push
je
add
add
push
add
add
lea
lds
nop
hlt
out
xchg
add
fnstcw
lods
int
and
ss
fnstcw
cmc
rorl
outsl
xor
insb
mov
fists
add
adc
std
push
insb
xchg
cld
push
ret
outsl
lods
mov
add
add
xor
test
imul
inc
xchg
out
decb
sbb
mov
adc
push
cmp
cmpsb
dec
dec
es
mov
fwait
inc
jno
add
xchg
add
fidivs
daa
out
add
dec
sbb
add
loope
mov
lods
push
inc
popa
xor
add
test
add
cld
cmp
popf
add
add
xor
into
inc
clc
int
pop
lret
push
out
js
sbb
nop
cli
add
add
stos
out
sbb
popf
adc
inc
mov
mov
xchg
arpl
sbb
pop
or
andl
enter
add
dec
imul
cmc
jae
pop
xchg
mov
je
xchg
sbb
sbb
pop
xchg
cli
push
fs
push
add
add
mov
rcl
push
test
sub
setae
jne
jp
cmp
das
pop
mov
mov
mov
fistpll
cmp
daa
outsb
lcall
ss
ljmp
test
icebp
ss
fldcw
add
add
outsl
int
adc
pop
dec
cld
mov
jnp
outsb
fadds
call
add
add
insb
xchg
shlb
jmp
iret
loop
iret
cmpsl
add
add
add
pusha
in
icebp
and
leave
cmpb
jae
cmp
jb
and
mov
in
fs
jge
xchg
pop
xlat
inc
ss
std
add
jb
cmp
sbb
fwait
add
pop
sarb
jmp
jb
les
enter
cli
outsl
movsb
mov
mov
in
rolb
mov
add
add
int
dec
popa
pop
push
inc
mov
pop
pop
gs
in
jecxz
adc
scas
add
add
cmp
xor
and
ret
mov
inc
test
cmpsb
jp
fstl
std
add
fiadds
add
outsl
or
xchg
test
add
mov
pop
adc
and
xor
sbb
mov
jl
int3
in
jns
idivl
fsubrl
jae
scas
adc
out
jg
pop
icebp
pop
dec
nop
mov
fidivs
ficomps
jns
jmp
insb
or
pop
iret
adc
dec
pop
jp
cmpsl
testl
push
popf
std
cmpsb
stc
in
movsb
fadds
sbb
clc
add
ss
add
add
insb
std
jp
xchg
lods
and
mov
pop
adc
outsl
cmc
xor
jmp
add
add
and
cmp
cltd
icebp
cmp
add
sub
push
add
add
adc
lret
out
aad
cli
psrld
imul
adc
cmp
dec
add
loope
adc
sbb
push
xchg
dec
add
cwtl
js
xchg
lea
mov
out
mov
pop
inc
xchg
push
sahf
push
enter
sbb
insl
mov
xor
fs
xchg
jecxz
jmp
call
orl
sub
or
roll
pop
mov
sub
jp
jo
imul
cmp
popa
push
repnz
mov
jge
push
inc
sub
add
adc
icebp
flds
jne
adc
add
mov
mov
shr
jmp
push
loopne
stc
arpl
ret
jp
sti
loop
cwtl
mov
sub
sub
stc
push
mov
or
iret
add
xor
mov
ficompl
add
dec
fistpl
sbb
lret
xor
outsb
lods
add
add
sub
or
sub
pop
xor
adc
add
add
stos
lret
cmp
pop
push
lock
add
sahf
jno
cld
pop
cli
pop
mov
add
push
scas
lock
add
and
gs
xchg
jl
xchg
lret
je
add
add
push
inc
cmpb
cmp
mov
stos
inc
test
popf
rorl
cmc
inc
xchg
test
das
js
aad
lods
ljmp
add
jb
xor
cmp
jbe
insl
xorb
add
fmull
cmpsl
jns
pop
push
inc
stos
fbld
mov
xor
dec
inc
cmpsb
add
rcll
inc
xchg
sbb
and
xlat
cmpsw
add
sarb
add
mov
and
and
jge
and
addl
mov
repz
addb
cmp
shl
ss
scas
jmp
pop
push
dec
adcb
xor
or
test
fcmovnb
inc
sub
jle
les
cs
ja
cwtl
in
incb
pop
jb
xor
jmp
add
hlt
sub
push
pop
sub
add
aaa
jns
mov
out
sahf
jbe
js
add
aam
jo
add
add
aaa
add
popf
or
or
fwait
push
mov
add
xchg
push
lcall
push
mov
shl
test
cmc
inc
aad
pop
cli
lods
stos
repnz
repnz
outsb
xchg
push
xor
pushf
dec
mov
xor
aad
es
lods
out
mov
mov
in
data16
mov
rorb
into
fstpt
push
stc
fldenv
mov
sub
cs
testl
pusha
pop
lret
add
jae
shll
fcompl
jmp
add
or
add
add
mov
cmpb
add
add
cld
aam
setnp
xchg
mov
cmovs
or
andb
inc
js
in
cmpsl
lret
pop
into
push
mov
and
nop
cmpsl
mov
cmp
mov
sbb
add
dec
xor
add
jge
add
add
mov
jle
insb
add
dec
hlt
jno
inc
add
add
hlt
sbb
mov
cs
jae
add
out
add
add
cmpsb
xchg
jge
sbb
and
mov
push
add
add
shrb
mov
and
scas
jl
out
out
push
jg
addl
add
daa
ficoms
iret
or
pop
sub
into
insl
and
jge
cmp
fcoms
arpl
xchg
mov
add
dec
or
sbb
and
pop
test
add
and
pop
push
insb
mov
adc
stos
gs
testb
add
data16
or
add
sub
sahf
stos
or
push
sbb
and
mov
add
xchg
mov
cmp
lret
sbb
add
div
add
adc
jae
stc
out
sub
aad
pop
and
xchg
push
inc
and
add
mov
add
add
mov
xchg
push
sahf
sbb
mov
mov
insb
sbb
jle
xlat
push
cmp
mov
test
shrb
test
pmaddwd
and
divb
icebp
call
stos
sbb
push
pop
fnstcw
inc
cmp
or
out
dec
sub
shrl
or
in
xlat
into
insl
mov
adc
push
popf
aam
jbe
fsubs
stos
stos
mov
into
sbb
and
add
add
or
jp
aas
inc
adc
lret
nop
inc
ficoml
adc
addb
mov
add
jle
fdivl
scas
mov
xorl
hlt
rolb
inc
addl
sahf
add
test
mov
sbb
add
imul
or
push
sar
repnz
fnstsw
cmp
negl
testl
cmp
jg
add
outsb
rcrl
test
cmpsl
mov
push
dec
pop
or
xchg
xor
out
inc
mov
jl
cmp
sbb
outsl
and
fwait
xchg
es
xchg
inc
jb
jecxz
movb
xor
sub
mov
inc
lahf
scas
std
insl
or
xchg
add
push
fidivs
push
or
rcrl
insl
add
add
add
add
jno
or
test
repnz
nop
divb
adc
add
inc
mov
dec
lds
or
loope
adc
mov
add
ds
mov
push
or
cwtl
insl
xor
add
add
pop
ljmp
ljmp
add
mov
iret
fwait
lahf
jb
ja
fwait
das
and
push
sub
and
xchg
sbb
pop
mov
or
or
daa
add
insb
int3
imul
stos
roll
add
pop
sub
orl
sub
xor
add
imul
test
cmpsl
adc
vpsrlw
imul
mov
adc
push
add
add
xor
movb
fistpl
jb
jge
add
test
and
cmp
adc
ja
test
or
add
lock
inc
cmp
pop
cmp
cltd
add
xchg
and
js
outsb
cwtl
sbb
sub
aad
inc
int3
xchg
nop
xor
add
mov
pushf
add
mov
add
add
popa
adc
push
jae
lret
jle
sbb
add
inc
xchg
pop
inc
dec
push
fstpl
xchg
push
push
das
lods
sbb
in
add
jmp
and
jl
add
daa
fsts
mov
in
inc
jbe
ljmp
add
add
pop
cmc
adc
inc
add
pop
test
add
xor
add
add
push
jno
int3
jb
add
add
cltd
add
xchg
in
cmp
jnp
jp
add
jae
add
insb
out
push
xchg
cmp
mov
decl
mov
into
add
add
rcll
mov
sbb
outsl
xchg
fmull
xchg
dec
jle
in
sbb
mov
add
adc
add
pop
int3
test
sub
lock
add
lds
add
jg
lret
lods
cli
fisttpll
rolb
mov
add
pop
fmull
xor
pop
stos
mov
pop
pop
dec
add
add
out
fs
add
rorb
adc
dec
add
pop
jp
testl
pushf
pop
xor
add
arpl
push
jae
stos
sahf
mov
jbe
mov
aad
enter
push
push
jo
scas
pusha
add
pop
lds
cmpsl
mov
and
mov
gs
gs
mov
mov
or
roll
add
movb
push
inc
inc
scas
jae
pop
jnp
sbb
je
lods
arpl
add
jns
inc
adc
dec
sarb
sub
add
jae
mov
fucomip
shrb
sub
push
push
adc
daa
add
in
mov
mov
mov
gs
sub
movsl
popa
add
cwtl
in
packssdw
fcomps
add
call
xor
ficoml
mov
inc
sub
pop
aaa
pusha
xchg
push
or
pop
cs
jae
inc
pusha
xchg
add
add
jecxz
push
dec
mov
add
cmp
adc
sub
and
add
fsubl
add
aas
add
jmp
mov
ficoms
pop
inc
mov
ret
mov
push
add
jl
iret
sub
xor
out
sti
fildll
dec
sub
int3
insb
cld
daa
xor
xor
loope
fists
std
and
xor
in
xchg
jno
je
inc
push
add
leave
dec
or
cmpsl
push
pop
push
sub
jb
stos
jge
pop
js
aas
mov
push
xchg
pusha
outsb
push
cmp
push
aam
add
pusha
push
add
xor
jns
add
insb
out
inc
pop
int
dec
pushf
add
add
aas
or
lret
sub
add
pop
xchg
add
fildll
in
cwtl
dec
cmp
outsl
icebp
jecxz
call
outsb
jge
fcompl
and
sbbb
push
out
and
loope
xor
pop
adc
insl
xlat
fimull
cmpsb
mov
cltd
out
sub
test
fcomps
ss
xor
sub
push
jo
mov
pop
push
out
mov
add
mov
mov
iret
test
fcmovb
and
push
mov
jbe
xchg
xchg
jmp
loopne
dec
sub
add
enter
and
hlt
push
cwtl
pushw
mov
fs
add
add
add
stos
jmp
add
je
scas
mov
add
add
movb
orb
xor
xchg
adc
into
push
aaa
add
loopne
push
bound
pusha
sub
jae
xchg
add
add
dec
xlat
js
cmp
hlt
add
add
cmpsb
imul
imul
push
jno
add
add
cmpsl
out
ret
xchg
add
mov
inc
add
push
mov
inc
mov
push
bound
dec
add
add
out
mov
dec
add
shlb
aad
sbbb
and
jnp
mov
inc
jl
mov
mov
add
sbb
in
push
add
or
clc
jg
inc
or
arpl
pop
clc
cltd
testb
dec
in
clc
imul
jbe
movsl
shr
xor
shll
xchg
or
das
cmp
enter
add
cmp
fcomip
mov
pop
movsb
cmpl
sbb
gs
mov
add
mov
int
add
jae
lods
icebp
fwait
std
sbb
and
or
add
repz
int3
jl
ja
stc
cmp
mov
sbb
std
mov
push
cmp
mov
inc
aaa
sub
push
cmc
mov
outsl
imul
das
cmp
mov
mov
push
mov
pop
call
ja
je
or
or
mov
add
push
jb
push
lods
push
mov
cli
adc
inc
popl
push
imul
mov
xorb
dec
insb
adc
arpl
add
add
stc
arpl
mov
add
adc
lods
mov
dec
mov
lea
add
shlb
mov
add
scas
jle
jmp
add
aas
xlat
cli
mov
jecxz
cli
or
add
pop
pop
clc
ss
add
inc
js
pushf
xchg
repz
mov
cmp
xor
pop
push
cmpsb
sbb
jmp
xor
xchg
icebp
push
in
aad
add
iret
adc
jp
jb
dec
rolb
ret
mov
or
sub
mov
cmpsb
cmpsb
push
loopne
jecxz
sbb
and
or
push
mov
inc
das
lock
or
cli
pop
xchg
mov
mov
mov
add
lock
leave
and
aaa
cmc
add
xor
inc
fwait
mov
add
jb
std
mov
cmpsb
or
dec
mov
add
add
add
inc
mov
or
xchg
sbb
les
and
add
add
xor
loope
out
push
pop
lret
cwtl
jmp
and
cmpsb
dec
and
jne
aaa
or
cmp
sub
jge
sahf
add
repz
mov
mov
movsl
gs
lods
ret
rcrl
mov
mov
mov
out
mov
aam
adc
pop
jne
dec
loope
inc
xchg
addr16
call
inc
mov
rorl
clc
mov
pushf
dec
outsl
stos
aad
sub
lea
loope
pop
std
push
dec
pushf
imul
lock
xchg
dec
xor
ret
mov
xchg
xchg
jmp
add
cmp
cltd
pop
movl
out
lcall
dec
inc
iret
lds
add
mov
insl
ja
xor
adc
stc
lods
mov
inc
and
imulb
jmp
mov
pop
rolb
jb
sub
je
inc
add
push
or
jl
add
add
out
mov
js
aaa
add
xor
fistpl
mov
lret
xchg
lret
imul
pop
push
lds
pop
adc
lods
out
mov
mov
sub
or
arpl
push
mov
sbb
xchg
jo
jns
neg
jecxz
add
mov
aad
cmp
mov
push
pop
cli
xchg
es
mov
cmp
lods
jmp
call
inc
sub
sbb
cmpsb
fs
mov
test
sbb
arpl
test
popf
stos
and
pop
adc
or
bound
cmpsl
xchg
inc
xchg
sbb
jmp
push
cmp
adc
jbe
imulb
push
insl
dec
push
lret
add
popf
ret
lock
pop
test
add
jl
imul
loop
mov
add
std
neg
jno,pn
xchg
xchg
cwtl
inc
cmp
dec
arpl
fists
inc
push
out
xor
dec
loopne
add
pop
add
xor
or
and
clc
inc
mov
cmp
jl
movsb
mov
xor
sbb
push
sbb
loope
add
sub
add
add
imul
aad
adc
add
add
inc
mov
cmpb
cmp
xor
daa
sarl
loop
push
xchg
add
mov
mov
jb
iret
mov
jmp
mul
cltd
and
fstpt
dec
push
and
and
add
popf
je
lret
mov
mov
outsl
jecxz
popa
adc
push
or
in
and
inc
outsl
call
lods
push
inc
inc
mov
dec
adc
pop
js
mov
test
inc
ss
add
add
push
push
inc
aaa
hlt
lods
mov
pop
cld
ss
sarl
cmp
sub
ret
cmc
ss
add
std
cmp
pop
sti
xor
shlb
pop
mov
nop
sahf
inc
cmp
dec
es
clc
cmp
push
fstpt
add
mov
add
inc
mov
sub
pushf
stos
push
outsb
les
sbbb
xor
cmp
hlt
jl
mov
lods
adc
mov
leave
add
enter
xor
sub
pop
pop
mov
jle
sbb
mov
xor
dec
add
mov
loope
ljmp
mov
ja
lahf
cli
insb
insb
dec
sub
and
icebp
int
and
lock
aas
jb
jo
rcrb
xchg
iret
cmp
sub
in
fistpll
into
faddl
imul
les
xorb
pop
cmp
jl
xor
out
mov
sbb
xchg
jmp
es
inc
inc
xor
rol
mov
inc
lds
inc
xchg
pop
cli
mov
jno
mov
jns
ret
mov
out
cmp
cmp
call
sbb
das
clc
jae
mov
imul
bound
imul
xorl
cwtl
add
lds
mov
add
hlt
cmp
xor
repnz
adc
ds
lea
add
adc
std
xchg
jmp
das
cltd
xchg
sub
fdivs
mov
mov
mov
mov
adc
test
xor
jge
pop
loop
ljmp
in
jecxz
insl
dec
mov
fldenv
in
aad
testl
lahf
dec
je
add
push
jmp
sbb
lret
jmp
sbb
add
out
sbb
or
out
dec
incl
and
xor
inc
js
xchg
ret
cmp
cmpsb
jns
add
inc
data16
mov
pop
cmp
adc
inc
cmc
dec
lods
inc
dec
das
mov
icebp
mov
bound
inc
js
jne
ds
xor
mov
adc
fsubrp
and
mov
xchg
xchg
enter
scas
sahf
xchg
mov
mov
fadd
push
sub
jno
and
add
jmp
cmp
dec
sub
fwait
lcall
pushf
icebp
add
cmp
inc
scas
cli
add
sbb
mov
popf
hlt
cmp
push
and
in
mov
out
test
cmp
fisttps
jl
add
fdivrl
jne
xchg
shrb
insl
js
fwait
sbb
icebp
sub
cmp
mov
push
xchg
rcrl
xchg
in
cmp
jns
mov
jg
mov
out
pop
push
stc
pop
loope
aam
rolb
cltd
mov
aad
insl
adc
add
add
push
mov
mov
cmp
flds
add
cltd
pop
dec
jmp
add
add
je
or
add
add
jecxz
lds
add
and
adc
pushf
ret
pop
jbe
add
pop
jle
movsl
pop
int3
idivl
add
fs
mov
bound
add
les
lods
enter
mov
add
mov
adc
push
out
adc
fldcw
mov
mov
mov
bound
adc
inc
sbb
mov
sbb
cmpsl
add
lcall
ljmp
pop
mov
movb
std
icebp
jle
jecxz
cmp
or
add
pop
inc
fwait
rolb
out
cli
jne
cmp
in
gs
cmc
in
insb
add
pushf
sbb
jmp
push
std
rolb
popa
test
into
js
inc
mov
pop
shll
stos
pop
inc
cmp
sbb
jle
mov
push
roll
shrb
push
jbe
adc
xchg
jo
out
sahf
cltd
icebp
and
repz
loop
xchg
cmpsl
out
add
push
daa
and
add
dec
or
int3
aas
addr16
in
xlat
dec
int
mov
fwait
in
push
out
jne
addr16
jnp
inc
xchg
and
mov
mov
and
xchg
rol
insb
movsb
stc
and
mov
ja
je
xchg
push
push
inc
repz
test
cltd
cmpsb
loope
insl
aam
cmp
add
test
in
mov
jp
iret
xchg
mov
pop
out
test
stc
jns
xchg
fidivl
jp
xor
jle
xor
scas
mov
lods
push
enter
dec
cwtl
xor
add
push
push
scas
adc
xchg
imul
and
add
cmc
shll
xlat
xor
push
mov
and
ljmp
outsl
je
add
mov
dec
jg
pusha
pop
js
test
test
xor
mov
add
clc
mov
mov
mov
popf
sbb
pop
ja
mov
ds
cwtl
hlt
in
adc
cmovg
push
test
mov
mov
mov
mov
mov
das
out
lret
add
test
add
push
and
add
stos
sbb
mov
rorl
ss
je
add
adc
add
add
adcl
mov
jp
pop
imul
shll
test
push
popa
add
add
or
sbb
sub
dec
dec
jl
in
adc
cwtl
mov
add
jmp
imul
test
dec
adc
push
or
pop
inc
and
in
xor
les
in
mov
in
xor
insl
add
add
inc
pushf
add
std
ret
jg
mov
push
aaa
push
jnp
mov
pop
fcoml
push
jo
add
sub
pop
push
mov
inc
scas
pop
add
mov
je
imul
dec
test
add
std
add
faddl
rcrb
mov
xchg
jge
cmp
dec
sbb
jae
iret
js
mov
fadd
jae
das
movsl
stc
fcomip
lret
in
xlat
inc
call
test
xchg
adc
enter
mov
push
bound
push
jge
add
adc
sbb
inc
mov
popf
mov
cmp
add
xchg
mov
ficoms
add
icebp
push
adc
cltd
xchg
sbb
push
movb
loop
lahf
xchg
fidivs
mov
xor
int
jle
push
add
dec
in
je
or
fsubrl
rorl
xchg
add
mov
mov
ja
adc
or
pop
sub
pop
add
add
push
fcmovb
adc
xchg
in
jecxz
int
sarl
out
daa
add
add
dec
and
nop
and
pop
add
pop
add
mov
add
repnz
sbb
int
addl
add
add
xchg
or
inc
daa
cmp
cltd
lea
xchg
push
xchg
je
popa
test
in
ss
adc
leave
jle
cmpl
int3
jle
adc
dec
imul
and
aam
xchg
shlb
pushf
jecxz
lret
push
testb
or
leave
add
je
and
cwtl
mov
push
mov
adcl
das
out
push
push
xsave
test
and
divl
fiadds
xchg
push
add
and
sub
lea
add
or
add
imul
xor
testb
mov
add
push
mov
mov
or
mov
imul
and
adcb
nop
insb
cltd
ljmp
cwtl
xor
xor
mov
add
add
orl
pop
add
arpl
jae
jle
mov
add
dec
roll
sub
stos
cmp
sbbb
add
fwait
lods
add
sbb
js
sarl
adc
sub
jmp
out
pusha
mov
mov
inc
mov
aas
mov
sub
leave
add
cmpsl
sbb
mov
movsb
add
lret
inc
add
ljmp
sub
push
add
cmpsl
mov
pusha
pop
cmp
iret
add
add
fimuls
jecxz
cmp
aad
dec
add
sahf
add
push
mov
mov
mov
nop
pop
add
shrl
rorb
adc
sub
add
adc
enter
repnz
loop
cmc
out
add
xlat
sub
add
fsts
add
icebp
aad
add
insb
aad
cmpsb
add
add
add
inc
add
jecxz
dec
imul
mov
xchg
rcrb
sbb
jle
addb
xchg
xchg
ljmp
dec
mov
or
outsb
add
inc
jmp
or
jle
add
add
nop
test
in
stos
pop
add
test
in
roll
inc
sbb
in
push
add
pop
adc
lret
jbe
testl
add
in
add
sbb
roll
or
rolb
add
jg
add
add
inc
mov
sub
stc
int3
inc
test
lea
jl
xchg
data16
test
add
or
sbb
jp
and
mov
pop
fwait
add
add
adc
fidivrl
test
fimuls
mov
roll
add
add
mov
in
dec
outsb
test
fadds
add
add
fstpt
xor
push
mov
xchg
test
mov
stc
mov
pop
and
aad
add
aad
pusha
pop
add
inc
in
add
lret
cltd
add
add
hlt
mov
ds
jg
sbb
add
add
xor
xor
out
decl
cmp
add
mov
ljmp
rorl
cld
xchg
xor
add
nop
and
mov
dec
lds
sbb
shr
add
call
clc
cmpsb
pushf
inc
mov
or
and
pop
testb
add
rclb
push
add
cltd
mov
xchg
inc
adc
aam
xor
clc
xchg
mov
fmuls
sub
add
add
pop
inc
dec
shll
sbb
lds
push
inc
xor
pop
xorl
lods
notb
idivl
aam
mov
pop
mov
outsl
push
dec
imul
push
xchg
ja
sbb
pop
adc
ficomps
sbb
addr16
dec
out
aas
nop
xor
cltd
adc
cltd
or
jp
ffree
add
sarl
aad
mov
data16
insb
mov
je
mov
aad
cltd
sub
int3
test
mov
pop
mulb
mov
nop
push
pop
imul
aam
mov
shrl
push
mov
flds
xchg
push
fnstsw
mov
mov
jmp
ja
sbb
cli
cmpsl
jns
jo
jmp
dec
mov
pushf
stos
mov
push
push
adc
add
add
mov
sbb
rcll
and
pusha
scas
pop
mov
pop
lock
mov
push
inc
add
popa
adc
xor
push
mov
pushf
sbb
add
adc
repz
add
mov
pusha
dec
gs
mov
mov
xchg
jo
sub
push
inc
rorl
and
outsl
or
loope
cmp
mov
orl
negb
call
pop
pop
jnp
sub
bound
inc
mov
mov
or
jb
adc
dec
out
jb
fwait
mov
sar
sub
mov
sbb
stc
xchg
pusha
xor
je
or
fcompl
imul
xchg
sti
in
inc
xor
add
mov
add
mov
test
adc
fwait
inc
int
rolb
xchg
add
dec
outsb
sbb
out
mov
inc
rclb
push
jbe
add
fs
add
dec
jae
pop
adc
pop
fs
cmp
add
mov
insb
stc
sti
and
jmp
pop
call
lock
jae
mov
add
add
aam
addr16
push
iret
add
imul
push
orb
scas
stc
dec
pop
fsubrs
xchg
popa
jl
mov
jle
imul
mov
add
sbb
in
jp
pop
and
pushf
or
mov
jg
mov
mov
ljmp
add
test
push
push
movsl
add
xchg
mov
fwait
jle
lods
or
dec
jl
js
nop
fsubrs
or
add
add
and
jns
lcall
outsb
or
add
push
mov
mov
cs
adc
cmpsl
xor
ds
insb
fs
jmp
cmc
mov
adc
cmp
ret
bound
ret
cli
pop
loope
daa
inc
dec
cmp
xor
lahf
sbb
push
test
mov
ret
clc
ds
pop
lcall
pop
popa
add
push
jno
xor
jbe
in
pop
mov
mov
add
les
add
fwait
mov
fwait
adc
dec
lret
push
mov
out
aad
sbb
icebp
cmp
and
bound
mov
mov
xor
imul
pop
test
jecxz
pushf
xor
cwtl
jae
shrb
jbe
aas
mov
cmp
cwtl
test
shl
lds
xchg
jmp
mov
cltd
sub
push
fcomps
and
outsl
movsb
mov
xchg
add
mov
mov
repnz
add
dec
pop
outsl
sbb
test
add
pop
cmp
lcall
xchg
dec
movsb
data16
xor
pop
in
lahf
dec
mov
inc
xor
add
xor
leave
mov
adc
test
add
mov
mov
mov
in
gs
arpl
dec
jne
fisttps
cmp
or
daa
idiv
adc
in
pop
add
push
or
push
mov
add
movsb
lods
cmpsb
gs
ljmp
pushf
push
xor
out
add
movl
lcall
ja
inc
cmpsb
pushl
gs
arpl
xchg
add
pop
jno
ds
mov
dec
inc
int3
inc
mov
insb
sbb
inc
fs
mov
cmp
add
jp
mov
loope
xchg
fucompp
cwtl
cltd
xchg
or
je
push
jae
cwtl
stos
or
xor
add
lds
out
mov
clc
int
add
inc
xchg
xchg
jb
ret
add
mov
and
stc
add
fwait
jle
shrl
fisubrs
cwtl
add
add
sti
dec
cld
sbb
sub
daa
mov
out
iret
add
add
add
add
pop
fadds
mov
mov
fidivs
mov
jnp
pop
aaa
add
add
movsl
pop
int3
jb
jns
push
aaa
cld
cld
int
idivb
ret
das
ficompl
in
lcall
add
xchg
mov
jl
xchg
push
dec
sub
adc
jae
es
gs
cmp
fstps
lods
ret
ljmp
ffreep
cmp
add
mov
push
cltd
add
sbb
movsl
add
lahf
cmp
pusha
mov
std
ret
cmp
sbb
push
lret
insl
mov
ljmp
shrl
add
add
xchg
jecxz
mov
push
xor
mul
ret
out
add
dec
scas
in
xchg
sbb
into
insb
test
add
inc
cmp
cmpsl
cmp
cltd
rcr
dec
jae
sbb
insb
outsb
and
cvtps2pi
hlt
and
out
sub
fidivs
rorb
mov
add
pop
fdiv
loope
cli
mov
aam
imul
lea
mov
xor
mov
jno
mov
mov
lret
gs
and
in
inc
es
xor
mov
push
int3
insl
data16
fildl
xchg
dec
dec
cmc
stc
xor
fisubrl
add
add
loope
dec
xchg
pop
or
je
adc
xchg
xor
cmpsl
test
test
mov
cmpsl
or
pop
pop
mov
pop
push
pop
fisttps
pop
sub
mov
stos
sbb
adcb
adc
lret
test
aad
cmp
cmpsb
jno
dec
mov
cmp
inc
daa
daa
bound
outsb
aad
cmp
movsb
adc
jns
inc
mov
and
pop
aaa
bound
stos
sbb
cmp
cmp
jns
and
mov
fstps
repnz
sub
pop
mov
sub
or
jbe
jae
xlat
aaa
xlat
push
and
loopne
inc
fwait
rcll
imul
aas
add
adc
pop
jns
mov
dec
das
add
xchg
push
repnz
or
pcmpgtd
fnsave
sub
add
call
arpl
insb
jmp
pop
lods
mov
ret
sub
scas
out
pusha
xor
pop
add
mov
lea
call
popa
scas
add
add
loop
push
add
adc
fisttpl
orb
in
popa
cmp
testl
or
pop
mov
fcomip
mov
mov
add
push
lcall
stos
xchg
addr16
imulb
dec
sub
aas
insb
test
or
rolb
mov
cmp
xchg
ror
cmp
and
in
push
cld
cmc
add
add
sbb
pop
popa
cmp
xchg
pop
dec
scas
mov
int
add
mov
dec
adcl
inc
or
iret
divl
cwtl
cli
pop
lret
repnz
mov
lcall
out
enter
mov
outsl
mov
lret
push
sar
push
mov
add
add
ds
add
and
clc
add
lea
movsl
push
ltr
out
aam
fiadds
pop
and
or
je
mov
add
lds
lock
lds
add
lock
xor
movsb
pop
inc
add
addl
jp
add
subb
pop
pop
je
sbb
test
add
mov
in
sarw
dec
roll
inc
dec
inc
add
add
sbb
add
das
jne
adc
sub
add
mov
xchg
shrl
sbb
sbb
add
cmp
add
pop
adc
pop
xchg
add
xorb
orb
add
sti
add
push
add
mov
add
mov
add
negl
cmp
push
cwtl
faddl
clc
xor
add
call
push
fwait
sbb
sahf
add
xchg
mov
addl
add
add
add
add
add
dec
and
mov
inc
push
loope
and
add
xchg
ss
pop
push
insl
jne
mov
add
add
cmpxchg
aam
add
add
add
sbb
sub
ja
mov
xchg
xchg
adc
add
addr16
mov
lcall
xchg
xchg
inc
nop
mov
ljmp
fstpl
icebp
cmp
add
sub
movl
adc
xor
loope
mov
xchg
test
sub
mov
jnp
jns
nop
xchg
push
lcall
push
add
in
push
outsl
inc
jb
cs
roll
mov
ja
loop
call
or
lock
xchg
fdivrs
minps
add
int
sbb
mov
pop
les
cltd
pop
add
add
add
out
adc
pop
in
shll
xor
jmp
loopne
icebp
aam
rcrl
addl
mov
xor
jmp
and
xor
mov
pop
ljmp
or
or
add
mov
mov
nop
sub
incb
push
int3
inc
fs
std
stc
aas
push
ss
lahf
xchg
iret
and
test
mov
in
mov
sub
in
push
inc
cmp
mov
mov
adc
xor
popa
sbb
mov
shl
jmp
sarl
or
dec
jnp
mov
and
mov
sbb
cmpsl
adc
jp
cs
or
pop
jmp
or
hlt
fsubl
mov
xor
or
cmp
add
lock
inc
js
mov
ss
cmp
push
xor
jecxz
test
ds
jne
out
shrb
mov
cmpsl
jne
pop
lea
cmpsb
push
mov
loopne
add
add
add
ds
mov
mov
dec
das
pop
movsb
mov
negl
pop
adc
repnz
insl
shlb
push
push
inc
aas
pop
mov
jmp
xor
test
jle
call
scas
jg
test
lods
loopne
icebp
jl
aaa
daa
lret
mov
fnsave
das
xorb
xchg
or
xlat
add
ret
push
test
hlt
inc
ds
and
lock
push
leave
sub
push
mov
jmp
add
cld
xor
push
cld
jg
imul
mov
insb
mov
sub
addl
in
mov
mov
sarl
lea
add
add
sub
mov
bound
out
sbb
into
movsb
add
push
adc
shlb
add
pop
cmp
pop
sti
fsubrs
mov
inc
mov
push
ljmp
mov
sbb
out
andb
push
movsl
cli
shl
cmp
dec
xchg
movsb
dec
cmpsb
xor
dec
test
mov
repnz
add
add
jp
loope
es
push
inc
or
scas
and
loope
jno
or
pop
push
jno
xchg
shlb
mov
add
ret
and
xor
or
andl
loopne
in
js
arpl
enter
lahf
aad
lods
push
iret
pusha
mov
and
jecxz
push
sub
int
pop
in
xchg
adc
add
add
inc
aas
adc
xchg
sbb
adc
pop
mov
mov
fsubs
sub
daa
add
add
subl
dec
or
subb
add
fisubrl
push
jle
lea
add
cmp
mov
stos
fwait
mov
repnz
leave
notb
fs
pop
push
xor
stc
subb
mov
inc
mov
push
ljmp
mov
sbb
out
andb
push
movsl
cli
shl
cmp
push
nop
rsm
or
cmp
dec
mov
cmc
add
cmp
nop
pop
xor
push
mov
inc
in
sbb
adc
mov
mov
pop
add
sbbb
mov
test
jne
notl
dec
adc
idivb
push
sub
sbb
and
and
movsl
mov
lods
xor
sub
int3
pop
std
idivl
movsl
push
jle
xor
add
shll
gs
cs
lret
mov
enter
add
cmp
sub
mov
add
mov
cmc
fsubl
cmpsl
adc
bound
test
jae
in
sbb
fwait
cmpsb
add
adc
out
fnstsw
sub
stos
sub
jle
push
jbe
adc
int3
mov
sbb
ja
ss
inc
int3
das
out
daa
push
mov
sub
add
add
cmp
mov
loope
repnz
xchg
add
push
sbbl
pop
xor
scas
cltd
sub
mov
cmp
add
add
mov
imul
pop
imul
dec
xlat
push
add
add
in
xor
push
xchg
add
add
sbb
add
jmp
enter
inc
sub
lret
dec
mov
into
sbbb
lea
in
out
fisttpll
outsb
push
lret
in
cmp
into
es
jge,pt
ficoms
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
add
add
add
cmpsb
add
add
add
add
add
add
add
incb
add
jge
add
add
add
int
add
add
add
lds
add
fildl
add
sbb
repz
cmpl
add
add
add
add
add
add
add
add
add
add
insb
jb
and
cmp
push
add
add
xlat
mov
in
pop
add
fbld
inc
xchg
imul
push
xchg
pop
ja
add
testl
xchg
call
add
push
icebp
daa
in
push
int3
mov
jb
daa
or
jb
hlt
popf
sub
xchg
push
icebp
leave
iret
loop
rcrb
push
sbb
xchg
jb
add
push
stc
cli
mov
mov
inc
cmc
adc
mov
idivb
dec
inc
dec
jae
fnsave
test
out
push
add
jnp
sbb
push
mov
add
add
inc
inc
mov
hlt
arpl
hlt
mov
pushf
push
mov
cli
loopne
cmp
xchg
lcall
pop
and
pop
je
jmp
pop
ret
and
popa
inc
xchg
jl
push
jp
loopne
lods
imul
movsl
imul
or
mov
sbb
or
dec
adc
mov
loope
add
insb
jb
sbb
inc
jl
and
sbb
icebp
ret
mov
dec
add
add
lea
add
fadds
add
add
add
add
push
add
cmp
or
adc
mov
addb
add
imul
add
add
outsb
add
add
inc
add
fldl
addb
add
add
dec
add
add
fildl
sbb
jbe
ret
add
mov
add
sbb
cmp
add
cwtl
add
add
fildl
jg
filds
fiadds
loop
mov
add
loope
aaa
add
stc
add
add
popf
add
add
add
ss
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
cwtl
add
mov
cmp
je
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
add
cltd
add
add
add
push
add
add
pop
add
add
add
add
xchg
add
add
add
add
rolb
add
push
add
int
addl
add
scas
xor
je
dec
add
sub
pop
or
push
cmc
jecxz
xorb
or
push
jecxz
sub
pop
xor
add
add
xlat
cs
lods
mov
clc
sub
sbb
xor
sti
xchg
pop
xchg
push
mov
push
push
jo
xchg
adc
push
pop
jg
fildl
lea
loop
push
add
add
add
add
add
add
add
jmp
dec
add
add
inc
add
int
lret
add
add
add
fadds
adc
popa
add
data16
add
pop
add
xchg
add
daa
add
add
add
add
add
add
mov
add
add
add
add
add
add
out
ret
add
add
adc
aas
movsb
sub
adc
les
inc
inc
mov
clc
mov
pxor
out
ficoms
lcall
mov
sbb
ja
sub
lds
push
jne
inc
pop
and
xchg
mov
out
scas
mov
mov
je
dec
pop
push
das
rcrb
xchg
sbb
jnp
in
mul
inc
andb
aam
or
xchg
sub
loopne
mov
add
add
mov
testb
jmp
cmp
sbb
cmp
test
test
jmp
test
shr
pop
and
or
mov
repz
and
push
out
les
insb
icebp
inc
pop
jg
fstps
sub
lods
repz
cs
inc
push
sub
in
call
xchg
rcrb
js
jmp
shr
out
adc
repz
lret
xchg
mov
pop
pushf
cmp
dec
xor
push
scas
xchg
out
cld
loop
dec
xchg
pop
subb
ret
clc
jl
mov
dec
es
repnz
adc
clc
mov
push
divl
pop
les
jae
sub
mov
fcmovb
mov
mov
sbb
or
lock
xchg
mov
sbb
movsl
ret
jnp
repz
outsl
fwait
xor
out
xchg
mov
testl
hlt
call
sbb
mov
xchg
test
mov
xor
insb
shr
pop
and
add
or
ret
mov
test
and
lock
pop
js
ficompl
sub
nop
mov
aas
cmp
xor
fwait
inc
push
sub
and
xchg
rclb
and
pop
xchg
aad
aad
in
adc
icebp
pop
mov
notb
or
sub
out
pusha
lahf
jl
push
ja
mov
addr16
daa
into
adc
add
ja
sub
sbb
movsl
in
or
cmp
scas
lods
jae
mov
loop
jns
xlat
xor
push
xchg
mov
adc
mov
gs
stc
jl
adc
lods
xchg
xchg
jno
movsb
in
or
xchg
jns
cmp
pop
outsb
test
jno
jecxz
in
sbb
in
adc
mov
pushfw
jno
mov
aaa
out
or
dec
outsl
jg
or
mov
jmp
insb
shrb
jge
push
xchg
outsl
hlt
arpl
cli
test
fildll
inc
sub
nop
jne
iret
push
xlat
jno
daa
test
lahf
push
xor
mov
mov
test
jns
je
subb
jle
lds
push
clc
ss
ja
inc
mov
aas
mov
mov
adc
mov
cmpsl
jmp
sbb
or
mov
gs
jnp
and
stos
dec
push
inc
adcb
cs
mov
cmp
lods
mov
in
jnp
test
mov
mov
out
mov
jnp
sti
jp
adc
sub
repnz
add
cmp
or
jno
xchg
es
cld
loop
mov
shr
push
mov
pop
and
pop
cmc
add
add
fbld
int
fwait
loope
ror
push
fsubs
imul
dec
add
add
ret
add
lahf
out
je
and
add
add
dec
aad
stos
xor
add
xor
mov
sldt
in
xchg
mov
add
std
bnd
dec
xchg
add
and
add
adc
add
add
add
add
add
add
mov
push
add
add
leave
pop
pop
or
mov
test
add
push
add
add
stos
insb
add
les
cmp
icebp
add
sub
xlat
pop
xlat
add
mov
pop
xchg
stos
add
xchg
push
daa
and
add
add
lds
add
xor
jge
xchg
lahf
add
add
jge
mov
add
add
push
or
bound
push
stos
sbb
and
add
or
outsb
add
lds
sub
add
mov
iret
add
mov
add
sub
or
push
and
les
mov
or
xchg
add
sub
fmull
in
jp
push
xchg
cmp
in
jp
sbb
into
movsb
aas
repnz
ret
in
enter
add
add
add
mov
add
out
push
add
jno
push
add
add
sbb
stos
push
xchg
add
add
add
add
add
jmp
add
inc
fstps
jo
add
ljmp
and
add
aad
add
add
add
bound
add
add
sbb
add
cld
in
add
add
add
add
add
leave
movsl
add
add
push
int3
mov
add
or
add
leave
sub
roll
add
add
enter
add
jo
fistps
mov
inc
add
rolb
add
pop
daa
pop
add
inc
and
add
add
and
or
dec
lret
mov
add
add
push
add
add
add
pop
lods
add
or
add
loopnew,pt
add
add
mov
push
cmpsl
add
add
add
pop
icebp
add
add
cmp
sbb
add
add
add
stos
jge
add
add
add
add
add
mov
inc
add
add
scas
jbe
in
add
add
cmp
add
add
add
dec
xchg
push
add
add
iret
imul
fldt
xor
add
add
push
sbb
push
add
add
je
jne
add
add
jp
add
push
add
add
add
add
mov
add
xchg
xchg
sub
xor
add
add
cwtl
sub
add
add
sarb
add
add
call
add
shr
sub
add
add
sbb
iret
add
add
inc
mov
add
add
cmp
add
add
add
add
push
insl
dec
add
add
jns
pop
loope
add
add
push
rolb
add
add
adc
add
add
lahf
out
add
add
in
pop
xor
add
add
add
add
push
add
add
add
inc
flds
add
add
cmp
stos
mov
outsl
add
add
push
adc
add
add
movsl
sub
add
add
dec
or
add
iret
jp
inc
add
add
gs
add
add
add
sbb
add
mov
add
add
adc
add
ja
add
add
movsb
pop
int3
mov
dec
jno
mov
mov
sub
add
add
pop
ret
add
add
add
add
fistps
add
push
lcall
movsb
add
add
add
add
add
testb
inc
mov
inc
rcll
add
cmp
add
lea
es
add
sub
add
add
pop
imul
je
inc
add
inc
sub
js
add
mov
hlt
lods
dec
add
jp
dec
cmp
add
arpl
out
pop
add
arpl
add
in
adc
push
jmp
xchg
add
add
add
mov
mov
fstpl
shrl
pop
add
cmp
add
jns
add
out
addb
iret
aam
clc
mov
sbb
push
mov
mov
add
das
mov
add
jg
add
push
pop
add
lcall
pusha
fwait
xchg
add
fs
cmp
add
stos
stos
add
add
add
adc
push
loopne
stos
cmp
test
sbb
inc
adc
imul
leave
notl
pop
lea
add
imul
mov
popf
push
add
in
xchg
ss
and
addl
ja
addr16
xchg
adc
imul
add
fldl
mov
mov
js
sub
and
std
xchg
add
pushf
push
jo
sub
rorl
add
inc
idivl
subl
add
sbb
fdivl
call
add
orb
cmp
mov
or
jnp
adc
sub
pushf
add
fsts
jmp
mov
sbb
imul
cmpsl
sub
jnp
movsl
add
ds
xchg
xchg
lcall
xlat
addr16
aam
push
jb
jo
add
push
pop
std
sbb
repnz
rol
movsb
fidivs
sbbb
jns
dec
jae
adc
dec
inc
jl
into
mov
or
ss
mov
daa
add
in
or
jmp
xor
shl
dec
jmp
sbb
add
mov
outsl
mov
xchg
push
add
sti
cltd
xor
add
dec
jo
mov
ljmp
add
add
scas
push
push
jbe
mov
mov
cmpsb
fcomps
add
pop
sarl
andb
testl
add
lret
insb
mov
leave
add
xor
addl
sti
mov
icebp
ffree
pop
outsb
add
cli
imul
inc
stos
rcrb
xchg
jp
cmp
cwtl
mov
push
scas
out
pop
add
add
jne
sub
mov
push
addb
push
imul
xchg
mov
mov
loop
add
adc
jns
add
shrb
jmp
inc
out
adc
xchg
push
mov
aam
enter
sbb
jne
pop
jbe
adc
add
dec
sub
mov
push
lds
rolb
push
test
cmp
out
or
cltd
add
inc
jmp
add
push
xchg
dec
mov
xor
insb
lahf
test
add
sahf
leave
xchg
xor
inc
mov
pop
sbb
mov
push
ret
or
shlb
push
jg
iret
mov
mov
in
pop
fs
push
add
jl
outsb
or
in
jbe
and
jmp
popf
sbb
xchg
aam
add
adc
mov
mov
pop
js
add
add
pop
outsl
mov
imul
mov
or
cmc
sub
das
adc
test
shrb
pusha
and
add
rcll
jp
jns
xchg
lea
sbb
mov
xchg
xchg
and
add
xchg
xlat
data16
cmp
cmpl
out
js
lcall
repnz
mov
inc
fwait
push
jg
outsb
pop
aaa
and
jo
jb
xlat
mov
ret
or
rolb
add
adc
add
add
push
sbb
addr16
mov
ljmp
push
xchg
movsb
or
add
test
cmp
xchg
add
cmp
pop
cmpsb
mov
loop
jbe
loop
inc
add
rclb
pop
pusha
jae
mov
add
scas
xor
push
in
add
aad
or
sbb
leave
sub
pop
and
aam
mov
adcb
or
mov
lea
add
int3
adc
out
jg
sbb
cmp
addl
xchg
sbb
in
and
mov
hlt
loopne
add
xchg
sbb
jl
dec
xchg
add
sbb
xlat
jns
mov
sbb
incb
add
and
inc
xor
add
add
add
in
mov
add
add
add
xorb
add
add
adc
add
add
add
add
add
adcb
add
pop
cmc
add
pop
add
mov
add
xor
js
add
test
add
pop
xor
push
add
add
adc
add
xchg
aad
dec
add
add
loop
inc
add
add
adc
outsb
add
add
add
add
cmp
xor
add
jecxz
mov
add
add
les
in
add
enter
in
add
pop
jae
add
pop
push
add
jl
add
add
add
add
add
add
add
add
dec
add
add
or
enter
jl
enter
add
lret
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmc
add
add
add
add
add
add
add
xchg
add
add
add
add
add
push
add
add
add
add
add
add
add
out
add
sbb
add
incb
add
roll
add
addl
add
add
add
add
add
add
add
add
stos
add
add
add
add
add
jmp
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
data16
add
add
faddl
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
aaa
add
add
add
pusha
add
add
add
add
add
add
add
aad
add
mov
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
mov
das
add
mov
add
add
add
add
push
mov
clc
or
mov
insb
add
dec
add
subl
hlt
stc
cmpsb
add
mov
add
mov
sbb
or
pop
repnz
cmp
jnp
addl
stos
sarl
jb
add
add
add
xchg
testb
sahf
xor
movups
inc
cmp
adc
fiaddl
add
or
jb
xor
lods
cmp
pop
mov
das
or
in
cmp
add
xchg
jae
fdivr
rcrl
test
xchg
adcl
stos
mov
or
add
daa
xlat
cmp
data16
insb
sahf
je
ficoml
jne
das
xor
add
add
add
cmp
cltd
ljmp
fsubl
repnz
adc
mov
pop
xor
push
test
inc
int3
xor
add
and
shr
xchg
add
xchg
aad
std
xor
jp
adcl
add
add
adc
dec
or
rcll
mov
pop
jns
pop
xchg
in
test
add
add
and
fiadds
add
adc
sub
add
add
add
add
add
add
add
add
lock
pop
xor
add
test
add
cwtl
stos
dec
mov
gs
add
add
add
xchg
add
add
add
push
cmp
mov
add
add
cwtl
add
add
add
xchg
dec
add
add
add
mov
decl
les
xor
outsl
add
add
add
push
dec
sub
xlat
mov
leave
cmpsl
inc
add
imul
add
xor
inc
add
and
add
mov
add
add
add
add
add
sub
add
cmp
jecxz
enter
add
add
cmp
add
mov
add
add
add
add
add
add
add
in
adc
cltd
push
roll
data16
add
daa
mov
push
push
add
movb
jnp,pn
lods
mov
js
add
add
call
jns
add
add
add
iret
add
in
add
xchg
add
mov
add
cmp
add
rolb
xor
jle
leave
mov
sahf
add
pop
inc
add
xchg
add
sub
movsb
clc
fildl
mov
add
dec
push
add
iret
add
pop
add
and
add
icebp
int
roll
dec
add
cmpsl
add
and
add
ret
dec
add
or
fiadds
jnp
test
cs
push
or
mov
sub
adc
add
test
popa
pushf
add
inc
imul
jp
mov
jl
add
dec
add
add
add
add
add
add
fwait
movsl
add
cmp
xor
xchg
add
push
add
outsb
dec
add
hlt
push
add
insl
add
adc
out
imul
add
add
mov
add
add
and
sub
add
mov
add
pop
roll
loope
add
add
inc
lods
add
pop
add
fistpl
stos
mov
add
mov
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
push
add
adc
lret
bound
add
mov
add
add
add
add
add
add
add
add
add
add
imul
in
add
sbbb
add
add
roll
adc
lahf
add
add
add
inc
push
adc
or
in
lcall
rolb
lret
clc
movsl
inc
push
lock
fnsave
popa
das
mov
mov
dec
popa
push
adc
push
mov
push
shl
test
xchg
arpl
mov
pop
scas
sbb
sbb
aad
js
sub
or
ds
out
mov
mov
or
aad
jns
xor
inc
int3
inc
leave
inc
jo
mov
sahf
mov
and
dec
push
shll
jns
mov
mov
mov
jge
movsb
pop
mov
dec
jle
arpl
jg
sub
push
mov
jae
sub
addb
mov
movsl
cmpsb
test
data16
test
arpl
sbbl
popa
rorb
ljmp
adcb
mul
or
loopne
dec
mov
adc
adc
sub
sarb
jne
ror
jp
push
shlb
pusha
sub
mov
dec
pusha
adc
xor
and
insl
mov
ds
cmp
lret
ljmp
and
jo
adc
popf
lods
lret
cld
push
push
sbb
cmp
imul
mov
stc
test
mov
sarl
dec
jnp
dec
jmp
add
xchg
lods
pop
repz
pop
aam
push
aam
dec
mov
jl
movsl
pop
mov
dec
jge
jl
data16
sub
cmc
jmp
lods
mov
inc
sub
std
js
push
leave
push
lods
xor
addr16
sbb
mov
add
inc
shlb
adc
lds
dec
jno
stc
jmp
sub
nop
call
lock
movsb
pop
push
push
movsl
out
dec
mov
adc
pop
sub
faddl
enter
xor
int
push
adc
je
sub
xchg
fdivl
sbb
fldenv
sbb
sbb
bound
mov
das
pop
adc
adc
mov
jg
xor
gs
icebp
and
and
cmpl
mov
rcrl
lods
incb
mov
into
cmp
aaa
dec
incb
cmpsl
pusha
or
fbstp
mov
xchg
push
into
pop
daa
mov
lar
das
leave
jne
adc
fs
lock
decl
rol
xchg
pop
mov
mov
jnp
imul
test
jle
cltd
add
inc
dec
imul
call
sbbl
mov
addr16
dec
and
ror
pop
push
mov
or
stc
xchg
ret
aaa
jne
lret
inc
fildl
jno
dec
dec
mov
mov
adc
mov
outsb
sub
pusha
dec
cmp
pop
rorl
jp
scas
jmp
xor
leave
in
mov
mov
sub
cmp
jb
mov
push
push
aaa
out
ret
daa
xor
pop
adc
mov
lcall
mov
lret
in
xchg
sarb
aaa
push
add
sbb
filds
jmp
mov
xchg
imul
sub
mov
and
jle
fistl
leave
out
aaa
cltd
pushl
aas
dec
lret
stos
pop
and
pop
aas
inc
jns
inc
iret
pop
repnz
loope
fcmovnb
cmpsb
xchg
pop
xor
subb
pop
mov
scas
push
lret
pusha
fistps
imul
int
cltd
mov
sbb
inc
jecxz
call
fcmove
rcrl
push
add
jge
add
or
xchg
ss
leave
xchg
ja,pn
jae
dec
mov
mov
sbb
jo
fnsave
fadd
ret
or
loopne
call
int
test
lods
icebp
mov
test
mov
rorl
mov
mov
rclb
mov
and
addb
sbb
dec
xchg
add
ret
enter
xchg
outsl
hlt
aaa
paddusb
es
lods
mov
sub
fadd
push
and
jle
cmp
dec
leave
shrb
inc
fists
mov
mov
jl
fst
mov
dec
cmc
fmuls
or
add
jb
incl
mov
fldt
sbb
push
add
inc
movq
or
cmp
enter
popa
push
push
sbb
orb
sti
xchg
push
xchg
test
xor
movl
dec
cli
xor
or
pop
int3
shlb
shll
push
bnd
jae
std
push
int3
inc
pop
cmpb
loopne
repnz
inc
ss
cmc
mov
popf
add
sti
rcr
xchg
jno
push
adcb
or
aas
in
mov
and
lock
loope
mov
enter
lock
jecxz
and
ja
cmp
sbb
xlat
inc
in
icebp
mov
mov
fiadds
and
cmp
push
movsb
mov
pusha
fcmovu
push
mov
xchg
cli
jle
cmp
aam
stos
pop
push
and
je
outsb
pop
es
pusha
inc
pop
rcll
jmp
int3
scas
lahf
out
xor
int
mov
subl
cltd
push
mov
inc
inc
fimull
inc
inc
add
rcrl
adc
xor
in
dec
ljmp
pop
leave
xlat
add
stos
mov
jns
jno
xchg
stc
adc
aas
jge
ret
and
test
xor
outsb
inc
dec
mov
test
pop
mov
rcl
xor
out
fstps
lock
inc
or
inc
add
inc
cmp
cwtl
xchg
rorl
ret
push
aad
adc
aas
sub
pop
mov
ss
xchg
fs
push
xchg
xor
rorl
insl
mov
mov
pushf
fwait
add
dec
dec
ret
idivb
lret
push
flds
fldt
popf
cmp
popa
out
inc
aas
sub
xchg
jae
or
jae
push
insl
xchg
dec
shrb
push
pop
adc
inc
pop
aam
out
ljmp
sbb
mov
daa
enter
mov
sbb
iret
xor
out
mov
dec
inc
arpl
arpl
pop
mov
xchg
pop
int3
inc
sti
fdivrp
insl
ja
fistpl
pop
or
les
add
outsb
jb
andb
push
inc
test
xor
cwtl
push
mov
push
test
push
mov
push
sub
out
push
jno
icebp
push
enter
jnp
mov
xchg
out
push
decl
adc
imul
int3
adc
repz
fnstcw
xor
sbbb
jne
scas
gs
push
mov
repz
cs
cmp
lds
push
test
add
pop
dec
into
loop
mov
lret
subb
mov
sub
mov
mov
add
int
scas
sar
cmp
push
je
xlat
insb
popf
insb
push
das
cmpl
pop
jg
pop
aad
cmpsb
inc
jmp
xchg
iret
lods
jo
arpl
iret
mov
movsl
sbb
dec
rorb
imul
inc
fs
sbb
adc
sti
push
or
fildl
or
movsl
int3
mov
jge
jo
mov
enter
rcrl
mov
inc
inc
mov
add
loope
dec
jne
jo
pop
push
mov
andl
addr16
leave
adc
daa
xchg
mov
adc
es
pop
das
jecxz
in
inc
pop
call
push
pop
or
decb
sub
and
ret
pop
jno
push
or
jmp
mov
daa
xchg
into
cs
hlt
ds
inc
and
mov
sub
xchg
enter
jb
in
inc
cltd
inc
lahf
sub
sub
jae
arpl
or
fcoms
loop
into
push
add
xor
ljmp
mov
mov
shlb
adc
add
cs
aad
cli
sbb
lods
or
pop
aas
pop
stc
push
add
jno
fmuls
sbb
cmp
insl
mov
lea
insb
and
test
mov
mov
pop
adc
in
jle
repnz
xlat
pop
or
pushf
jecxz
push
sub
pushf
cmp
add
sub
outsl
dec
adc
and
sahf
rcl
loop,pn
add
mov
mov
sarb
lock
jmp
imul
push
xchg
adc
jnp
scas
push
lret
pushf
test
ret
pop
fsubr
cs
add
xor
pop
lods
mov
data16
pop
xchg
cli
div
ds
inc
subl
aam
sahf
imul
mov
fs
push
filds
jecxz
pop
adc
sub
pop
and
mov
push
add
fisttpll
push
out
mov
shlb
sbb
mov
dec
stc
push
lods
lea
xlat
push
repnz
imulb
push
shrb
fnsave
aam
mov
jl
jns
xchg
jge
and
jo
leave
xchg
pop
xchg
cmp
outsl
inc
dec
jns
fdivrl
stc
in
pop
sub
clc
dec
jb
decb
sbb
xchg
push
cmpsl
lahf
dec
rol
add
fcomi
enter
js
jns
dec
ret
sub
es
add
mov
cmpsb
pop
fdiv
pop
mov
aaa
mov
push
dec
push
push
jne
dec
stos
xor
cwtl
or
cmpsb
pop
nop
mov
int3
xchg
cmp
and
pushf
pop
lods
mov
fs
cli
into
lock
jg
sarb
dec
xor
or
push
insb
dec
pop
and
fnstsw
pop
mov
and
pop
mov
jae
out
xchg
outsb
mov
sub
push
test
repz
pop
cmp
mov
pop
cld
add
mov
push
repz
fst
int
add
mov
cld
jp
add
xchg
xchg
jle
and
fsts
pop
in
jp
jne
jae
lds
bound
dec
jl
in
pop
cmp
notl
addr16
and
jns
fwait
test
sarl
and
ja
int3
adc
adc
xchg
fistpll
jge
dec
cmp
mov
into
fs
fldenv
adc
mov
push
cmp
jne
int
push
jb
movsl
dec
mov
out
outsl
mov
sub
pop
and
and
cltd
push
mov
lock
ret
aas
inc
leave
push
mov
jae
xor
dec
cmp
mov
fisttpl
and
push
jae
push
and
repnz
jle
sub
movsl
ss
aad
jne
call
jno
addb
scas
test
lret
test
das
stc
jo
jl
scas
mov
imul
or
mov
jb
movsb
or
insl
das
fimull
pop
cmp
mov
leave
ss
movsb
jl
mov
mov
xchg
shll
pop
inc
add
negb
lret
data16
gs
or
xor
cmp
jno
bound
pop
push
mov
stos
out
fistl
cmp
fsubrl
les
hlt
inc
andps
or
int
cmc
lret
incl
outsl
pop
std
outsb
add
cmpsb
mov
nop
mov
xchg
in
mov
jl
nop
cmp
xchg
jo
orb
rol
pop
lods
push
and
aas
inc
enter
js
cmp
popf
je
nop
je
mov
push
orl
sbb
sarl
and
cmc
cltd
cmpsl
ja
inc
loop
inc
imul
aad
loopne
mov
mov
push
clc
or
stos
scas
fstps
mov
add
mov
aas
or
roll
push
stc
push
push
pop
js
jbe
jbe
push
mov
jecxz
imul
push
imul
mov
lcall
add
cmp
or
sub
dec
outsl
jne
inc
dec
fisubrl
and
xchg
jmp
push
in
aaa
adcl
jmp
fwait
mov
mov
dec
lods
or
test
cli
mov
push
jb
stos
dec
mov
in
mov
test
xor
mov
sub
xchg
push
mov
repnz
jne
hlt
lret
out
scas
int
mov
xchg
fiadds
pop
daa
lods
xchg
les
add
inc
sbb
daa
ss
inc
adc
mov
mov
inc
stos
xor
imul
inc
pop
sub
stc
sbb
and
sub
inc
mov
jnp
fmul
mov
lea
daa
push
or
mov
into
xor
movsl
jae
mov
mov
das
int3
xchg
cli
push
jg
std
mov
xorl
jg
push
sti
jbe
inc
jnp
ret
push
les
hlt
dec
insw
mov
or
rep
out
cmp
push
xorb
test
add
push
std
enter
push
push
add
adc
in
add
xor
sahf
mov
xor
imul
and
cmp
pop
fs
fwait
jle
int3
fwait
data16
add
push
xchg
mov
pop
mov
inc
jp
push
es
mov
jg
jp
js
xor
mov
imul
or
bound
xor
mov
shll
add
sub
or
rcll
andb
mov
sahf
xchg
out
cmp
inc
push
int3
pushf
pusha
ret
add
inc
dec
inc
inc
adc
andl
adc
pop
adc
imul
fcmovnbe
cmp
push
add
mov
pop
jle
bound
xchg
daa
xchg
aam
adc
sub
lods
fwait
in
lods
ja
fstl
xor
hlt
inc
or
add
push
mov
mov
mov
inc
lret
ds
dec
or
xor
lock
adc
cmpsl
lahf
push
fwait
icebp
enter
add
xchg
mov
inc
call
dec
test
pop
mov
icebp
pop
das
ja
inc
pop
xor
fwait
stos
shl
jmp
adc
mov
fmuls
pop
pop
mov
dec
daa
mov
jae
push
mov
sbb
ror
sub
sbb
inc
xlat
mov
or
mov
mov
fwait
fwait
jns
cmp
daa
fsubrs
insb
lret
or
inc
mov
mov
stos
filds
out
push
jle
sbb
scas
push
outsl
sti
test
outsl
jbe
mov
jg
jo
cs
adc
das
sahf
je
imul
inc
int
aas
and
fnsave
sbb
mov
jmp
addr16
in
push
mull
je
jb
push
add
mov
aam
adc
xchg
add
dec
divb
mov
daa
add
insb
jecxz
xchg
es
notb
stos
push
jmp
lcall
pusha
jbe
rcrl
mov
fdivp
aaa
scas
adc
pop
imul
cmp
fistpl
cmp
xorl
aas
xchg
pop
mov
scas
subb
mov
hlt
pop
add
jnp
lcall
cmp
aas
jge
xchg
inc
fisubs
push
pxor
inc
leave
das
add
push
inc
jp
test
mov
xchg
xor
mov
in
test
sbb
xchg
mov
shl
or
jb
cmp
push
lret
or
test
jge
pop
dec
mov
add
push
sbb
inc
add
test
aad
repz
cmpsl
jo
fiaddl
jns
lret
sbb
xor
add
push
push
jg
pop
xchg
adc
xor
jb
lahf
cli
or
xor
xor
sub
scas
lea
hlt
shll
fcomps
or
jns
push
stos
xorl
jns
dec
fildll
fidivrl
mov
lret
jg
dec
xor
or
jl
jge
push
pop
push
add
inc
in
adc
cli
mov
jnp
pop
es
mov
cmp
daa
repz
mov
shrl
scas
inc
or
mov
int
lcall
out
xchg
inc
add
popf
cmpsb
aas
dec
jmp
jno
mov
stos
cmpsb
mov
or
or
sub
lock
lahf
cmpsl
fxch
xor
and
adc
add
jo
rcll
push
or
popf
das
test
repz
adc
shrb
mov
out
mov
imul
sbb
jns
mov
rclb
inc
or
insl
cmpb
push
mov
test
fdivr
cpuid
enter
arpl
lds
cmpl
outsb
mov
mov
jmp
test
inc
arpl
stos
jno
icebp
cltd
and
mov
jbe
add
dec
movsb
lods
aas
aam
insb
cmp
xchg
hlt
cmpsl
cld
mov
or
jns
jg
mov
pop
bound
or
mov
and
fsts
push
std
lods
addr16
cmpsb
mov
int3
movsl
jae
sub
xor
imul
inc
adc
mov
push
adc
sbb
pop
ja
imul
fwait
jns
out
and
jne
and
pop
lea
out
or
sarb
mov
icebp
pushf
rcll
outsl
mov
sbbb
fnstsw
dec
jge
das
loope
jg
dec
test
mov
sbb
clc
insb
push
dec
sub
jg
xchg
loopne
out
ret
push
jp
fwait
das
cmp
insb
xor
jl
xchg
dec
movsb
and
in
stc
outsb
dec
mov
stos
xchg
std
mov
roll
inc
pop
xor
sub
mov
push
fcompl
jge
cmp
es
cmp
cs
lods
into
jo
jge
fldl
mov
adc
cwtl
mov
or
rcrb
insb
sbb
jb
out
test
in
scas
icebp
fs
test
push
cli
jbe
xchg
iret
mov
push
hlt
ja
lret
rorl
clc
mov
and
mov
loop
out
inc
or
mov
push
je
sbb
pop
cwtl
add
jo
jg
push
inc
cmc
and
push
test
inc
dec
rcr
sbb
jg
rolb
pop
add
ljmp
jns
jbe
and
jp
sbb
scas
test
mov
cmp
cwtl
cmpsb
dec
or
add
mov
inc
push
push
imul
mov
push
sub
test
dec
lds
insb
jne
mov
scas
pop
fcoms
mov
or
cmp
inc
es
push
mov
and
scas
pop
mov
mov
sti
adc
pop
sti
test
fsubrs
lods
in
mov
rcr
lds
test
test
stos
push
es
movsb
mov
mov
adc
dec
in
adc
add
adc
mov
test
lea
out
cmp
mov
rclb
fildll
pop
ss
xchg
mov
and
push
inc
ljmp
lds
pop
sub
pop
inc
lret
daa
cmp
pop
addr16
push
mov
imul
cltd
cltd
lret
mov
cs
mov
and
std
mov
jo
jno
sub
pop
jnp
push
cmpsl
mov
scas
fwait
mov
xor
rorb
pop
clc
lret
test
mov
dec
clc
out
imul
fisubs
cmp
lret
in
outsl
mov
shll
push
xchg
add
cmp
inc
insb
inc
add
test
ficompl
je
adc
jl
push
int
int3
arpl
push
std
scas
mov
xchg
pop
mov
mov
push
xchg
adc
mov
cmp
mov
lea
scas
push
test
jo
negb
nop
mov
test
stos
les
nop
xor
xchg
lea
jle
cmp
ja
xor
stos
es
jl
inc
outsb
repz
loopne
pop
fidivs
iret
into
cltd
out
mov
cmc
sub
mov
push
cwtl
pusha
push
pop
jle
xor
dec
inc
adc
test
mov
inc
rcrl
cmp
aam
mov
and
jl
cs
adc
xchg
sbb
adc
jbe
test
movsl
lahf
orl
and
sbb
inc
xor
insl
arpl
test
xchg
inc
mov
xchg
pop
fwait
data16
bound
dec
into
push
aad
adc
and
out
in
push
int
xchg
and
inc
mov
cmp
sbbl
pop
paddsw
adc
mov
inc
dec
lahf
insb
push
sub
stos
aaa
movsb
repz
inc
cltd
iret
ss
mov
insl
add
xchg
stos
int3
fistps
xor
jae
adc
es
sbb
data16
in
push
xor
add
xchg
inc
test
cltd
fwait
xlat
or
stos
sub
jmp
pushf
or
out
push
je
and
mov
or
pop
imul
xchg
and
adc
push
hlt
mov
push
jno
data16
jo
ja
leave
hlt
pop
xchg
subb
iret
mov
in
lods
add
stos
add
jne
sub
sbb
aam
and
xor
adc
jl
rolb
sbb
mov
out
jno
fdivp
mov
subl
movsb
mov
addr16
dec
adc
repnz
incl
or
jno
fisttpl
mov
and
mov
hlt
mov
fsubrl
sub
jg
aaa
jae
fdivl
icebp
or
cmp
and
adc
das
loope
mov
push
popf
aaa
jae
xor
lret
add
cmp
cmp
pop
movsl
out
iret
aad
push
sub
dec
mov
jg
out
mov
add
js
ja
fstpl
sub
insb
add
adc
sub
sbb
clc
pop
lcall
push
mov
inc
std
out
jno
jge
out
sbb
sbb
add
jne
jb
mov
je
mov
mov
out
ds
xor
sbb
and
loopne
mov
or
cmp
cmp
imul
push
insb
insb
inc
cs
xlat
mov
aad
iret
dec
add
movsb
and
cmp
fwait
xchg
cwtl
xchg
add
lods
jmp
pop
cltd
push
shrl
stc
mov
les
push
dec
mov
std
jo
push
jbe
cmp
pop
xor
out
sub
out
andb
jge
scas
xchg
out
push
adc
adc
pushf
lods
btr
daa
adc
xor
icebp
out
inc
les
pop
rol
and
adc
jbe
lods
xchg
cwtl
dec
mov
mov
cmp
lods
sbb
iret
mov
ret
adc
mov
mov
sbb
add
sub
call
dec
inc
aaa
push
pop
int3
hlt
hlt
and
lea
imul
addr16
cmc
mov
in
out
add
or
out
mulb
mov
int
in
aas
add
rcll
mov
jo
mov
xchg
mov
mov
sbb
pushf
repz
repz
std
ret
fs
pop
sub
sbb
and
and
jbe
pop
pop
gs
ljmp
mov
dec
test
in
lcall
mov
insl
test
add
push
xchg
movsb
gs
inc
adc
iret
ja
sbb
ret
sbb
or
subb
lds
fbld
outsl
mov
rcrb
inc
das
jecxz
cld
popa
data16
enter
cli
lcall
mov
into
pop
jp
mov
shrl
mov
in
xchg
roll
dec
lcall
sbb
inc
js
push
sub
dec
pop
or
andps
movsl
and
fs
dec
out
or
pop
sub
pop
mov
lret
mov
cmpsb
cmp
jg
push
outsl
jl
ficompl
sbb
dec
jbe
stos
mov
cmp
arpl
add
sbb
movsb
fldl
or
xor
inc
arpl
push
mov
fstl
push
adc
popa
mov
andb
push
in
stos
adc
hlt
push
push
cmp
sbb
fnstcw
dec
fstl
cltd
and
sub
sub
lret
aas
stos
cld
mov
jnp
mov
js
inc
rcl
pop
mov
jbe
adc
mov
in
shll
cmc
adc
and
fstl
fcompl
xchg
std
dec
jo
or
imul
bound
shlb
sbb
jmp
sbb
bound
mov
int
jns
dec
and
dec
pop
xchg
insl
mov
in
mov
es
sub
je
loop
rcrl
xchg
pop
test
dec
popa
ret
out
cmovp
das
mov
jmp
adc
sub
jb
xor
mov
popa
mov
xor
cs
xlat
fwait
cmp
in
jb
popf
or
ror
sarl
fmulp
adc
or
out
ss
adc
mov
pop
or
subl
mov
aam
xchg
test
lds
jo
test
enter
jae
dec
fsubl
mov
push
js
sarb
adc
jnp
xchg
and
je
sbb
inc
clc
out
jns
mov
sbb
inc
add
cltd
in
cwtl
xlat
sti
popa
out
xchg
dec
push
dec
xchg
setne
stos
pusha
sbb
xchg
mov
inc
stc
je
mov
sub
mov
jle
stc
mov
pop
shrl
mov
or
test
or
mov
sbb
ljmp
or
jae
rol
lods
neg
icebp
lock
or
mov
les
xchg
sbb
testb
pop
sub
int
xlat
in
test
cltd
mov
aas
subb
and
rorb
rol
mov
and
sub
test
out
lret
xchg
aam
ficoms
pushf
pop
in
repnz
inc
mov
or
fmull
into
mov
add
mov
pushf
adc
mov
sub
pop
jl
adc
cmovnp
jo
test
aas
test
xlat
sub
mov
inc
hlt
push
mov
jns
loope
sbb
out
repz
sarb
mov
imul
sbb
js
mov
cmpb
xchg
sub
xchg
xchg
ljmp
fildll
adc
mov
jns
mov
add
sub
dec
aam
stos
dec
cmp
mov
mov
out
out
sti
loopne
pop
push
add
pop
lcall
mov
std
nop
inc
or
inc
jbe
rcrl
mov
inc
icebp
sbb
inc
mov
dec
int
repz
cltd
adc
xchg
and
inc
push
loopne
mov
lods
cmc
nop
cmp
xor
repnz
push
sbb
and
fimuls
mov
xchg
push
ffreep
fisubl
xor
cmp
sbb
mov
jb
xchg
lcall
jae
mov
popf
ljmp
push
inc
lds
mov
aam
mov
mov
movsl
clc
clc
xorb
xor
cmpsb
daa
repnz
fisubrl
mov
insl
loopne
icebp
enter
fdivrs
ljmp
je
inc
lret
insb
cmc
roll
cmpsl
adc
cmp
lret
sub
shl
lahf
addb
inc
xlat
and
mov
data16
push
sbbb
mov
pop
pop
ljmp
adc
sbb
mov
shll
ds
stos
xchg
mov
ret
dec
xchg
mov
hlt
sub
lock
jge
mov
repz
inc
mov
dec
into
xor
bound
cmp
std
call
inc
push
aas
jne
sub
xor
stc
ja
cmpsb
scas
outsl
mov
imulb
test
or
add
popf
lods
or
cwtl
inc
pop
dec
mov
jge
or
pop
aam
gs
push
iret
mov
cmpsl
test
repz
in
leave
pop
ds
dec
in
das
mov
cmp
gs
hlt
call
add
or
xor
jnp
mov
and
adc
mov
out
adc
lods
mov
lds
hlt
loopne
cmovp
sbb
movl
sbb
adc
add
jecxz
lcall
sbb
pop
xchg
inc
aam
into
ss
test
cltd
sti
aad
jle
jo
rcrl
adc
in
pop
fadds
pop
mov
cwtl
stc
fiaddl
fdivrs
test
imul
repnz
pop
in
stc
rolb
inc
mov
arpl
jmp
loope
add
repnz
cli
add
pop
insb
int
and
cmp
rcll
inc
cld
lcall
jmp
adc
in
dec
stc
rolb
adc
pop
xor
inc
mov
xchg
sub
inc
ret
into
jle
iret
arpl
inc
xor
sbb
pushf
inc
cmpsb
and
push
jns
hlt
out
mov
xchg
push
add
test
sub
push
cmp
inc
jg
push
and
mov
sbb
ss
add
imul
push
push
lret
xor
dec
xchg
imul
jl
shrl
adc
testb
shll
mov
sbb
daa
fistpll
stos
sti
or
xor
jl
pcmpeqd
mov
or
mov
push
int
mov
test
fsts
inc
cmp
mov
xor
dec
out
scas
inc
mov
pop
fwait
xchg
mov
mov
cs
js
push
shr
ss
icebp
sub
mov
sub
or
fisubs
xchg
xor
data16
xor
adc
sub
ljmp
lds
inc
cmp
notb
rol
push
dec
push
cmp
sub
or
sub
or
mov
int3
mov
lods
into
xchg
ret
icebp
gs
cmp
mov
pop
pop
mov
push
mov
stos
and
testl
and
jb
push
aam
es
add
push
jp
add
es
dec
imul
jbe
mov
pusha
cmpsb
inc
cmp
inc
push
je
test
rcrl
xlat
aas
mov
push
dec
push
and
add
shlb
cmp
cmp
mov
movsb
aad
add
addr16
xor
inc
xchg
xor
and
cmp
cmp
xchg
xchg
rol
and
sub
rep
sbb
jns
scas
dec
leave
mov
mov
mov
stos
ret
inc
fimuls
xchg
dec
hlt
pop
xchg
test
pop
outsb
fs
xchg
cmp
daa
cli
push
mov
stc
sub
and
cwtl
push
test
inc
enter
jne
add
bound
and
xor
xchg
jp
repnz
jnp
movsl
iret
add
sbb
jg
mov
das
andb
sbb
inc
mov
out
cltd
mov
dec
popa
push
pop
mov
cmp
dec
fwait
xchg
jg
pop
adc
insb
mov
dec
pusha
ret
scas
icebp
mov
dec
lret
hlt
mov
ffree
adc
scas
dec
push
scas
lret
jnp
les
lcall
inc
mov
mull
loope
lret
push
mov
pmulhw
sbb
pushf
ljmp
mov
ret
fsubr
or
stc
arpl
mov
dec
rep
adc
imul
sbb
pop
outsl
sbb
sub
jbe
or
or
jp
sbb
lds
pushf
or
into
int
dec
xlat
clc
mov
ljmp
jb
sub
daa
or
xor
int
pop
ss
in
push
ret
jle
rcrb
dec
ds
pop
lret
dec
xor
mul
imul
insb
lods
aam
add
fwait
cmp
adc
rcll
and
xchg
js
out
push
insb
lcall
mov
inc
inc
shlb
jo
mov
pop
frstor
out
sub
cld
mulb
ret
fwait
shlb
pop
gs
out
push
adc
ficoms
push
sbb
mov
jle
sbb
mov
jge
pop
adc
or
cmp
jle
lret
push
pop
push
sbb
dec
shlb
xor
mov
add
sbb
mov
and
push
mov
jno
cmp
stc
add
int
stos
movsl
lcall
mov
imul
clc
ret
loopne
into
shll
cmpsb
push
mov
or
pop
mov
lret
bound
jle
and
jno,pn
sub
int
mov
add
sti
insl
cli
movsb
rcrl
xchg
in
loope
gs
sahf
iret
das
adc
outsl
sbb
femms
inc
dec
push
jmp
jnp
mov
enter
imul
cs
test
mov
inc
fwait
jl
ds
sub
inc
lcall
daa
sbb
sti
mov
mov
xlat
mov
mov
sub
mov
arpl
and
add
mov
and
mov
adc
mov
xlat
mov
mov
or
dec
addps
jp
out
rorb
xchg
lret
es
sbb
addr16
mov
ds
jae
aam
in
pop
outsl
pop
adc
mov
pop
outsb
outsb
jne
dec
out
push
xchg
fstpl
pushf
dec
add
adc
shr
mov
push
push
aad
sub
sub
fisubl
out
jl
pop
jmp
fstpl
or
imul
cwtl
jle
push
xor
xchg
fnstenv
ret
hlt
lahf
push
adc
div
sub
paddsw
enter
cmpl
stos
popaw
loop
sar
movsl
push
stos
mov
adc
cmp
xchg
ss
jno
addr16
mov
and
mov
imulb
sbb
sbb
cmp
jge
pop
xlat
and
inc
popf
mov
hlt
or
mov
ljmp
and
add
jle
jge
adc
xchg
pop
stos
ds
fs
jle
mov
pop
mov
and
les
jmp
push
pop
ljmp
rcr
adc
sbb
mov
jne
cmpsl
aad
jge
add
pop
add
jo
mov
rcl
out
mov
push
gs
sbb
sub
bound
mov
fs
or
leave
mov
outsb
mov
test
jecxz
cwtl
and
xchg
shll
pop
cmp
cmp
sbb
ret
call
jp
jno
mov
movsl
push
mov
movsl
xchg
dec
call
loope
ret
rsm
es
push
xchg
cmp
xchg
push
jle
cwtl
es
js
sbbb
sbb
leave
sub
add
lock
enter
jl
and
inc
cmp
notb
mov
pop
jle
or
hlt
cmp
insl
mov
xlat
sbb
imul
sbb
sti
add
