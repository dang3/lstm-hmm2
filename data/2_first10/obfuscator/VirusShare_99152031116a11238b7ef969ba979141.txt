in
mov
in
sub
push
push
pushl
add
lods
std
jmp
push
lea
push
push
push
in
push
lea
push
call
incb
test
add
add
jns
push
lea
push
mov
imul
adc
mov
mov
xor
sbb
add
incl
push
loope
fildl
aad
sbbl
mov
ljmp
mov
in
mov
or
ret
add
pop
add
add
or
xorl
and
sbb
aas
and
and
fadd
int
std
add
shl
inc
add
pushf
movsb
push
sbb
ljmp
addb
hlt
xchg
clc
add
xchg
mov
mov
sub
dec
loop
and
add
dec
aad
pslld
pop
xchg
pop
scas
hlt
lock
or
add
and
imul
add
int
mov
flds
or
add
add
enter
xchg
cmp
test
sti
divb
das
orb
or
adc
xchg
add
pusha
add
out
test
mov
cmp
fnstsw
jl
add
inc
add
fucomi
lcall
xchg
cmp
add
adc
add
mov
push
mov
inc
fldcw
test
aam
inc
cmpsb
les
add
in
jbe
test
xorl
idivb
add
jecxz
out
jns
pusha
sti
es
rol
incl
cmp
mov
fcomps
in
decl
gs
dec
fs
in
push
fs
outsb
out
push
push
add
sub
sub
inc
clc
push
push
loopne
dec
jae
dec
in
push
push
pusha
data16
lock
jmp
sub
ja
jl
mov
add
and
imul
fstps
leave
hlt
sub
dec
les
adc
in
jnp
jae
movl
mov
sub
lds
jg
mov
hlt
add
sbb
mov
mov
scas
add
push
pop
sti
lcall
sbb
ja
outsl
mov
mov
enter
dec
add
inc
mov
add
push
adc
adc
cmp
lods
inc
inc
enter
mov
out
cs
pusha
mov
xor
add
add
add
ret
rolb
add
xor
adc
ret
and
xor
push
and
xor
lret
jbe
push
jmp
sbbb
push
fidivrl
ret
add
jbe
xchg
idivb
insb
fsubrs
rclb
loop
mov
add
dec
mov
mov
add
movsl
add
scas
std
outsl
mov
or
sbb
push
sbb
hlt
movsb
inc
xchg
fcmove
das
stos
cmp
add
sbb
test
lcall
sub
pop
jns
fcomi
jg
lret
add
xchg
and
push
daa
pop
add
shrb
jp
lock
fwait
gs
or
loopne
dec
movsl
sub
inc
in
pop
add
ret
pop
xchg
lock
shrb
hlt
hlt
imul
ret
lock
or
clc
loopne
mov
pop
daa
push
or
sub
add
or
add
sub
sub
xor
add
dec
decb
mov
jae
loope
ret
scas
xchg
sahf
addr16
das
adc
pop
outsb
xor
pop
mov
ja
bound
divb
push
loopne
test
nop
inc
xchg
outsl
sbb
mov
add
add
sub
out
add
sub
add
and
out
sub
cmpsl
add
loopne
inc
add
mov
stc
cmc
and
inc
addl
pop
das
in
push
xchg
mov
jecxz
jno
cmp
sbb
lea
aam
xorb
xchg
add
sub
sbbl
mov
lods
cmp
or
lods
or
scas
call
sub
outsl
xor
dec
ljmp
xor
or
nop
mov
jae
inc
jnp
icebp
pop
mov
add
mov
pop
push
popa
imul
jmp
xor
clc
or
sbb
dec
scas
fmull
nop
stc
out
adc
sti
or
repz
add
pop
mov
out
mov
pop
xor
add
jg
xchg
jb
add
push
fs
push
and
mov
das
test
mov
sbb
adc
sbb
addr16
dec
dec
jne
add
movl
pop
fstps
and
aad
push
cmp
xchg
insl
pop
out
xor
xor
push
or
jbe
fdivl
in
add
sub
or
nopl
cmp
pop
mov
jae
in
scas
lret
dec
clc
jg
scas
push
inc
repnz
xchg
push
dec
xchg
neg
call
sub
pop
outsb
imul
or
out
shll
mov
pop
adc
cmpsb
clc
rcr
sub
aad
pop
pop
out
std
daa
dec
stc
das
mov
jmp
cmpsl
popf
fistpll
add
enter
mov
and
push
bound
repz
mov
or
mov
sbb
out
aas
xchg
inc
test
add
or
or
out
sbb
add
cmp
ds
jbe
andl
stos
sbb
sbb
clc
pop
mov
decl
jl
push
subl
arpl
mov
scas
mov
pop
add
lods
jge
adc
addb
outsl
xchg
mov
pop
loop
pop
add
and
mov
mov
es
or
in
adc
ffreep
jl
cmpsb
roll
push
xchg
xor
sub
scas
iret
xchg
stos
add
dec
pandn
fwait
mov
ljmp
in
pushf
jg
dec
sub
and
inc
lods
popa
jae
jnp
sarb
add
add
push
xchg
cmp
sbb
repnz
dec
lods
loopne
add
das
adc
addl
ds
push
jecxz
add
pop
sub
push
push
adc
jmp
aaa
jge
cs
aam
fsubrl
sarb
pop
fldt
pop
test
ss
or
cmc
addl
and
sahf
adc
fnsave
xchg
jno
notl
adc
dec
jmp
push
mov
test
jb
lds
add
mov
inc
lcall
jg
xor
jnp
or
cmp
mov
adc
or
adcb
push
insb
add
jbe
adc
fcmovb
ret
sbb
push
jecxz
lock
das
adc
xchg
aad
push
push
cld
in
mov
jns
or
dec
inc
mov
outsl
test
mov
mov
inc
call
mov
aas
sub
shll
add
xor
xchg
icebp
sar
das
insb
outsb
push
mov
dec
fldt
rolb
add
stc
push
cmpl
incl
fildl
in
xchg
es
mov
pop
fwait
jo
mov
mov
das
mov
mov
fistpl
mov
add
jmp
sbb
sti
roll
jp
sbb
push
aad
fdivs
or
clc
mov
or
repz
inc
sub
lods
mov
lock
jmp
clc
sub
dec
fs
jb
xchg
xchg
and
lea
push
addr16
inc
fsub
or
in
jbe
inc
push
inc
dec
bound
aas
sbb
pop
sub
sub
adc
dec
inc
add
mov
add
jbe
push
add
sbb
add
mov
sbb
sti
adc
ret
ja
ds
xchg
subl
cmp
adc
mov
and
mov
andb
sub
xorb
mov
jmp
or
or
xchg
xchg
adc
jns
mov
cmp
or
push
or
xorb
insl
js
or
adc
jl
scas
lock
mov
punpcklwd
or
test
negb
jg
or
sbb
mov
jnp
cmc
pop
shrl
mov
mov
xlat
mov
and
les
push
inc
xchg
cmp
sub
mov
movsl
mov
mov
and
divl
xchg
xor
add
push
mov
mov
lods
stc
cmc
cmp
mov
pop
sbb
idivl
fidivrl
das
xchg
fbld
push
xchg
das
push
inc
in
mov
jnp
push
pop
addb
jne
dec
and
outsl
js
testb
shrl
jmp
adc
mov
fnstsw
out
inc
or
sub
xor
pop
sbb
xor
out
jns
out
subl
mov
fcmovu
mov
push
push
insb
rolb
rcl
or
xchg
stc
jmp
test
loopne
pop
adc
rcrb
jae
xchg
jp
push
data16
shlb
mov
jg
into
out
mov
dec
sbb
in
notl
mov
fwait
not
dec
xchg
pop
mov
push
ja
aas
adc
lahf
and
mov
inc
ret
xor
cli
add
pop
test
mov
mov
idivl
inc
sbb
repz
push
xorb
out
fidivrs
and
cmp
je
out
popa
mov
out
pop
div
mov
xchg
in
and
sub
pushl
inc
or
inc
inc
repz
ja
jg
mov
xor
xchg
push
mov
sarb
sbb
mov
ja
pop
fsubrl
xor
cmp
aad
in
aaa
cmp
fmuls
mov
lds
std
cmpl
sahf
imul
aas
xchg
mov
in
cli
cmpsb
mov
imul
push
push
sub
rorb
jg
jne
pop
jmp
sbb
and
adc
and
or
mov
pop
out
mov
ss
push
repnz
sub
out
inc
or
inc
cmpsl
or
inc
mov
iret
in
insl
insl
and
push
decl
std
popa
xor
pop
orl
fisubrs
movsl
or
int3
outsb
loop
jno
jecxz
out
mov
pusha
jmp
xchg
jnp
andl
sub
data16
lahf
jns
and
lret
or
aam
and
jns
call
or
mov
loope
adc
fcoms
test
pop
sti
div
repz
sub
movsb
xchg
mov
mov
ret
out
dec
pop
and
iret
mov
xchg
dec
fiadds
xchg
hlt
fucomip
pop
add
scas
insb
call
lods
xchg
adc
out
jae
jl
or
das
jg
mov
mov
add
sbb
std
int3
jmp
xor
loop
insb
lahf
adc
aas
test
dec
cld
jle
cmpsl
loope
mov
xchg
mov
adc
out
popa
dec
and
pop
scas
std
pop
mov
dec
or
call
out
addr16
add
or
std
ja
inc
imul
dec
push
mov
mov
or
fsub
fdivl
mov
sbb
enter
out
fcompl
mov
sahf
or
ret
insl
fwait
jb
sti
jnp
loopne
repnz
arpl
pop
int
call
pop
dec
pop
loope
test
inc
lret
daa
fldcw
jecxz
fndisi(8087
ds
jmp
mov
mov
inc
add
fisttpl
test
xchg
or
and
jg
orl
mov
ja
and
mov
mov
xor
ret
lcall
jecxz
test
ljmp
adc
aas
jg
cld
scas
add
popa
imul
push
negb
lds
lcall
and
cmp
ret
sti
into
push
in
addb
popfw
leave
addr16
loop
fistpll
test
cs
fs
loope
int
xchg
jbe
adc
mov
je
mov
icebp
or
adc
add
xlat
shrl
mov
popf
sti
incl
gs
int
rcll
adc
mov
sub
and
daa
jecxz
addr16
jns
inc
pop
das
sti
nop
pop
or
ljmp
sbb
fdivrl
cld
adc
cmp
sbb
adc
pop
insl
fisubs
jmp
push
add
push
in
adc
jo
and
stc
pop
les
enter
lcall
loopne
adc
popf
pop
loop
pusha
mov
js
sub
xchg
and
enter
add
xor
decl
pushl
insb
mov
sbb
mov
push
push
addl
mov
sbb
jmp
jg
ja
adc
lock
add
rorl
or
pop
outsl
and
out
test
js
inc
mov
mov
inc
add
test
int3
cmc
pop
clc
repz
xor
aas
shlb
or
pop
pop
cli
push
andb
pusha
jo
dec
mov
dec
xchg
sbb
and
int3
loopne
mov
mov
popf
or
mov
cld
pop
sbb
pop
inc
stos
inc
cmp
daa
into
std
fucomi
stos
mov
std
sub
sbb
je
insl
rorb
jno
repz
call
stc
fucomip
and
or
or
pop
leave
sub
jg
stos
enter
jno
dec
push
xor
jmp
mov
dec
or
adc
pop
daa
pusha
mov
and
adcb
adc
xor
sbb
in
movsb
sub
mov
les
or
cmpsl
stos
mov
inc
lock
lcall
scas
ret
aas
ss
adcb
xor
test
push
add
insl
iret
mov
pop
sub
mov
dec
out
jp
push
jno
addr16
pop
add
pop
add
pop
outsb
add
sub
lahf
add
xchg
jnp
or
cmp
cmc
sahf
inc
and
mov
arpl
outsb
fmull
cli
jmp
sub
jbe
mov
sub
andl
push
xlat
aas
neg
loope
cli
sub
inc
imul
cmp
out
dec
loopne
gs
cmc
test
xchg
fisubs
std
into
outsl
pop
mov
push
and
and
jns
inc
shlb
cmp
pop
lfs
ret
dec
call
stc
ljmp
mov
test
sub
imul
pop
or
fildl
testl
decl
icebp
cmp
xchg
lds
pop
or
adc
or
ss
xchg
aam
aad
aam
ss
lock
jo,pt
mov
push
inc
ds
push
call
imul
and
sahf
add
or
xchg
outsl
sub
scas
insl
nop
stos
xor
jnp
out
aam
pop
and
scas
xchg
incb
jmp
jle
pushf
jge
in
xlat
sub
inc
jecxz
jbe
ret
sti
cs
jbe
jb
rolb
aam
test
leave
hlt
mov
outsl
setp
push
stos
call
movsl
in
shrl
loope
cmpsl
jle
or
mov
jo
loope
or
mov
fisttps
fiadds
cmp
sarl
sti
fcmove
mov
dec
inc
enter
mov
movsb
push
outsb
aas
test
mov
aam
jbe
shr
adc
sub
lcall
xchg
hlt
adc
fwait
dec
cmc
das
jb
iret
popf
iret
inc
iret
push
or
mov
xchg
fstpt
roll
pop
cmp
cmpsl
incl
sub
mov
adc
test
xchg
adc
mov
cwtl
push
cmp
mulb
ss
pop
pop
enter
cwtl
jbe
jp
push
ljmp
xor
cmp
inc
mov
sar
mov
and
fucomi
push
lods
notl
mov
bound
flds
call
lods
jp
clc
push
stos
pushw
jge
cmc
aas
scas
stos
and
imul
xchg
push
mov
js
dec
js
mov
pop
inc
cli
stos
and
add
push
jg
sbb
sbb
into
es
sbb
mov
push
lret
ljmp
jle
in
pop
adc
inc
loopne
jge
mov
divb
sahf
pop
mov
push
ja
sti
xchg
in
pop
cmp
adc
arpl
cltd
fistpll
mov
sbb
sti
and
sub
dec
or
rdtsc
ret
sarl
ja
jmp
xor
jns
hlt
push
fs
xor
fucom
aas
pop
mov
mov
and
icebp
add
aaa
mov
std
xchg
test
mov
xchg
iret
dec
lock
hlt
push
pop
inc
movsl
adc
cmc
out
inc
dec
lock
sbb
lea
outsl
mov
push
test
sub
add
xchg
test
jg
xchg
mov
add
jmp
stos
sbb
dec
mov
repnz
add
shr
lock
push
sti
ds
test
call
sti
mov
mov
out
mov
aas
sbb
jae
adcb
test
xor
push
sub
mov
test
adc
fbstp
inc
dec
cmp
pushf
cli
negb
stos
jmp
jp
push
push
roll
or
lock
xchg
inc
aam
inc
inc
sbb
movhlps
mov
and
out
push
or
out
lret
jo,pt
lar
pop
mov
dec
mov
bound
test
pop
pop
dec
aad
sub
arpl
out
outsb
shrl
pushl
hlt
lret
daa
outsl
imul
repz
cmp
push
cmc
out
std
jle
inc
mov
mov
pushl
or
es
lea
popf
in
scas
push
or
inc
ret
scas
rcrl
loope
shl
push
or
nop
pop
mov
jg
sti
imul
rcr
xor
xchg
mov
ja
out
sub
or
aam
out
mov
inc
js
sbb
cltd
dec
pop
cmp
mov
aas
mov
loop
sbb
pop
fbstp
stos
xchg
pop
adc
sub
cmpsl
cmp
ja
cld
arpl
cmp
adc
out
jmp
sbb
out
jne
cli
add
push
jle
enter
clc
adc
sbb
cmp
mov
pop
ret
pop
or
mov
lock
dec
sbb
dec
cmc
and
out
fdivrp
in
cwtl
mov
sub
xor
cmp
pushf
xor
mov
stos
or
mov
test
mov
mov
repz
sbb
lahf
lock
dec
cmc
cli
add
sub
mov
rolb
add
jns
sbb
std
pop
jg
dec
imul
cmp
int3
rcr
pop
sbb
mov
mov
jmp
das
std
push
loop
roll
pop
xchg
inc
jmp
jns
sub
lahf
adc
loop
addb
sarl
inc
xchg
push
jl
je
push
cmp
pop
out
jge
cmp
maskmovq
dec
sti
cmp
cli
jbe
cmp
jne
lea
or
push
pop
mov
pcmpeqd
sbb
xchg
incl
cmpsl
call
mov
adc
xchg
rclb
rorb
jnp
jo
outsl
insb
adc
stc
mov
jecxz
xchg
dec
cld
push
pop
fcompl
or
aas
pushf
loopne
fidivl
push
mov
or
adc
ja
xchg
inc
std
add
add
cmp
imul
lahf
mov
mov
movsb
xor
shr
or
shrl
mov
xor
daa
ret
mov
sbb
lock
ja
pop
xchg
int3
push
mov
int3
bound
js
adc
sub
adc
mov
std
adc
ret
or
fisubrs
pop
std
out
lock
in
call
or
das
aaa
test
inc
xlat
xor
loopne
jno
out
push
jg
cs
ds
mov
mov
sbb
bound
es
iret
mov
mov
aas
pop
icebp
xchg
fisubs
jmp
scas
push
cbtw
dec
inc
add
fidivrs
movsb
and
xor
insl
push
cmp
icebp
movsl
cmp
fistps
mov
and
inc
or
or
jb
inc
mov
sub
dec
cmp
cmp
fisttpl
sbb
js
jg
nop
mov
bound
rcrb
xchg
and
aam
lea
iret
fdivrp
cmpsl
testl
sub
jb
push
insb
aaa
lea
mov
sub
adc
xchg
jl
dec
sarb
arpl
cmp
sbb
popa
sarl
add
lea
negl
aas
xchg
dec
cmp
jecxz
mov
dec
psubb
repz
push
std
es
jmp
xchg
xchg
xorb
fidivl
push
rorb
aad
push
adc
aad
test
sbb
imul
xor
cld
out
es
shlb
xchg
mov
fisubl
or
push
sub
jno
push
and
dec
stos
mov
daa
mov
sbb
lock
fdivl
cmp
insl
jae
fcomps
leave
sub
sarl
mov
sub
sub
lret
ss
fistpll
add
cmp
repz
jmp
xlat
adc
mov
mov
scas
xchg
ret
shr
and
repz
ja
hlt
jge
shr
shrb
fildll
mov
fsubr
loope
mov
lahf
or
sub
icebp
xor
sti
push
cld
aas
rcrb
repnz
dec
sti
das
into
icebp
jp
sub
sbb
mov
lock
and
adc
lcall
movsb
jle
fstpl
and
inc
nop
outsl
mov
filds
mov
and
fistps
mov
or
je
dec
cmp
dec
xorl
stos
out
aaa
dec
cli
mov
rcrl
jb
sub
push
out
fwait
dec
xlat
jmp
shrl
or
jno
out
jno
adc
pop
xchg
mov
das
inc
js
das
cmc
jmp
sub
jno
lahf
mul
mov
stos
rorb
mov
mov
pop
call
push
sbb
mov
je
ret
dec
mov
cltd
sub
in
lds
mov
xchg
scas
cwtl
mov
mov
pushl
insb
aas
inc
and
mov
mov
stc
lcall
leave
or
add
lcall
push
movsb
daa
push
out
sub
ret
cmp
jg
and
dec
cs
imul
test
mov
mov
sub
mov
ss
jo
lock
mov
mov
mov
adc
icebp
pop
lods
or
lods
aas
inc
test
xor
movsb
es
sub
sbb
pop
out
lods
dec
inc
or
cmpsb
ja
cmp
pop
fdivr
out
cmc
inc
xor
adcl
xchg
adc
mov
lret
sbb
aaa
sbb
leave
bound
add
jg
inc
jmp
enter
stos
jecxz
sbb
andb
icebp
mov
sub
sub
in
xchg
and
ljmp
jp
std
xor
jns
push
mov
loope
mov
lahf
in
sub
movsb
or
jl
pop
ljmp
call
ss
sub
decl
xorb
lods
leave
mov
fidivs
pop
or
iret
iret
data16
adc
sahf
aaa
mov
mov
std
js
fdivr
cmp
mov
insb
jo
pop
loopne
nop
int
fdivr
mov
pop
cmc
fwait
jns
cmpsb
dec
sarl
pop
das
out
stos
inc
out
sub
sbbb
aas
bound
lds
jg
sbb
sub
pop
loope
adc
into
test
daa
mov
push
fistpll
pusha
and
mov
mov
std
dec
lock
xchg
scas
pop
cmpsb
add
stos
push
inc
repnz
incl
xor
jg
pop
shlb
cmpsb
gs
xor
dec
mov
jg
push
push
cmp
outsb
gs
jnp
adc
jg
jne
inc
lods
mov
dec
jp
mov
or
into
mov
loope
fdivrl
inc
fdivs
pop
sub
test
je
sbb
jnp
adc
lock
and
nop
ror
hlt
mov
lock
xchg
or
xor
js
dec
lods
jg
decb
stc
adc
movsl
mov
popa
jo
frstor
jnp
jp
test
pusha
xor
clc
enter
scas
jb
loope
in
mov
negl
out
test
cwtl
fwait
xor
shl
popf
aam
mov
or
or
cmpsl
jno
mov
lock
xor
add
pop
xchg
mov
scas
jg
mov
cs
in
mov
lcall
push
sbb
nop
ror
les
and
pop
jmp
out
adc
bound
in
mov
push
inc
dec
std
inc
jno
fwait
inc
test
and
dec
push
add
out
out
mov
sbb
adc
dec
sahf
fistpll
cmc
add
in
xor
push
push
mov
push
ja
sbb
add
xor
ljmp
jecxz
push
pushl
mov
daa
ret
pop
mov
mov
icebp
xor
add
add
fiaddl
adc
out
mov
sub
xchg
xchg
testl
dec
pushf
and
push
pop
and
nop
pusha
incl
jle
pushf
fdivp
mov
fistpll
mov
add
imul
loopne
pop
xchg
jle
mov
adc
sub
outsb
jl
mov
mov
push
mov
mov
push
repz
jo
lcall
jge
adc
mov
jo
sbb
mov
ret
stc
mov
cmp
or
inc
jg
push
adc
jne
in
or
bound
sbb
ret
jmp
xor
push
jae
js
aaa
insl
lock
pop
std
cmp
lock
mov
test
icebp
pop
adc
and
loope
je
decl
xchg
test
sub
lahf
cmp
out
xorb
mov
gs
mov
push
out
or
mov
mov
jmp
push
mov
jg
jg
clc
jle
movsb
test
inc
xor
mov
sub
out
mov
les
add
inc
aam
jo
jmp
pusha
xchg
sti
cli
mov
push
adc
ss
mov
push
fistpll
popa
mov
stos
sbb
movsb
lock
pushf
xchg
loopne
or
pop
negb
or
in
ret
jg
xor
ret
mov
push
mov
dec
mov
stos
cmp
xor
popl
adc
adc
das
gs
sarl
in
loopne
cli
lods
cwtl
rcrl
jle
repnz
cmp
jae
repnz
addr16
xor
orb
xchg
jp
or
jecxz
inc
xor
sbb
push
push
and
sub
lock
cmp
sbb
adc
jg
pop
dec
push
incb
testb
adc
mov
ficoms
jecxz
push
lcall
fistps
push
popf
enter
jecxz
jl
pop
ljmp
sub
std
and
jmp
or
cmp
mov
loop
pop
push
and
fadds
add
testl
subb
js
mov
jle
std
lcall
test
test
dec
push
cmp
daa
je
jne
call
xchg
mov
js
jl
cmpsl
pushl
leave
and
adc
aaa
in
out
mov
mov
add
adc
std
mov
mov
fcmovnu
or
jo
push
fistpll
rcrb
mov
cmovle
ret
lods
inc
xor
sub
sub
movsb
icebp
pop
out
ja
call
mov
movd
pop
cmc
arpl
sub
sub
push
xor
dec
xlat
xchg
fs
adc
mov
shll
dec
push
pop
aam
dec
loop
and
mov
inc
xor
popl
add
jle
or
push
mov
cmp
jo
dec
lods
or
daa
lea
leave
fwait
ja
adc
push
stos
fsubl
movsb
stc
or
add
mov
icebp
shlb
test
dec
adc
aas
sti
inc
mov
ror
mov
idivb
dec
aad
out
mov
dec
push
mov
xchg
sub
popa
std
fisubl
ljmp
or
and
or
out
cmp
lea
mov
lds
movsb
or
add
sub
xor
jg
mov
pop
push
rcll
aas
aam
call
or
push
push
mov
andb
adc
adc
or
imul
jl
dec
icebp
popf
mov
push
add
sti
jmp
cmp
adc
pop
addb
icebp
xor
add
inc
jb
sbbl
loop
jg
pop
mov
cld
decb
sar
mov
cmp
sub
or
pop
jmp
ja
adc
mov
shll
out
int3
and
mov
iret
in
xor
daa
push
fiadds
or
push
sub
stos
cmc
xchg
adc
adc
pusha
shld
adc
ret
add
add
fdivrl
xor
and
jp
adc
cli
shl
fdivs
cmp
push
jae
je
mov
mov
dec
lret
aas
inc
std
or
cld
cs
jecxz,pt
in
idiv
sbb
push
fdivs
pushl
aas
or
sti
ds
sub
call
pop
stos
outsb
jmp
xchg
adc
cs
insb
push
imul
ljmp
push
in
mov
rol
inc
sbb
stc
mov
ret
notb
mov
lods
cmpsl
mov
inc
or
mov
jbe
push
shrb
lock
push
xor
iret
mov
fucom
das
data16
into
cld
jae
in
xchg
inc
aad
insl
inc
mov
in
mov
fucomp
aas
add
and
pop
cwtl
leave
sub
or
scas
out
dec
lea
add
add
out
ret
fildll
pop
mov
fstpt
push
pop
clc
nop
popf
flds
cld
inc
xchg
movsl
mov
sbb
lahf
push
sti
int
aad
pop
ds
cli
jae
pop
dec
mov
clc
iret
incb
adc
stos
cmc
pusha
add
in
mov
lea
les
mov
cmp
adc
pop
out
or
pop
js
sub
and
push
iret
push
adc
mov
and
xor
adc
stos
xor
test
sbb
stos
test
sbb
std
sysenter
cmpsl
jb
test
test
lret
stos
sub
clc
popl
or
jns
daa
jg
lahf
add
fs
cmp
fnsave
loope
pop
adc
shl
addr16
push
push
sarl
adc
jge
aam
mov
je
sbb
dec
cld
mov
cmp
cld
ja
add
stos
jmp
xchg
jmp
loope
testl
ucomiss
shld
and
imul
pushf
iret
cmp
sub
jmp
psrlw
loopne
std
shl
cmpsb
pop
add
test
mov
cmpl
mov
and
mov
inc
or
jp
add
ja
sar
arpl
loop
sub
mov
iret
lea
popa
je
aaa
testl
mov
add
aad
fwait
or
sar
js
sti
cmp
cmp
sarl
mov
dec
xor
cmpsl
js
lods
cli
in
bound
xchg
add
mov
jge
cmp
lcall
xchg
rolb
lock
mov
push
cmpsl
sbb
sub
mov
xchg
fisttps
cmp
ja
add
inc
sbb
out
and
int
scas
shll
dec
imul
cmp
pop
mov
sbb
sbb
incb
fimull
push
fwait
iret
jo
lods
pop
add
or
icebp
pop
dec
lret
mov
in
sahf
popa
lahf
ds
faddl
mov
mov
out
push
fisttps
mull
push
int3
dec
xchg
mov
or
cli
sbb
dec
jmp
or
dec
jg
xorl
pop
out
rolb
lret
sbb
das
cmp
inc
icebp
inc
outsb
push
call
jecxz
cmpsb
loop
inc
add
ficompl
das
adc
push
cmp
xchg
mov
mov
adc
popa
loopne
cmc
dec
mov
mov
out
cmc
sub
out
fcoms
xchg
mov
in
mov
sbb
or
aas
testb
adc
stc
mov
mov
into
inc
scas
add
cmpsl
imul
pop
mov
push
jge
add
push
cmp
pop
in
shrl
dec
ret
repnz
sub
ja
push
xchg
and
out
daa
std
aas
addl
xor
cwtl
out
lea
mov
imul
cmp
mov
loope
loope
test
mov
or
or
call
fists
je
add
cmp
rcrl
aam
or
adc
xchg
rep
js
cwtl
filds
adc
xor
lods
sti
jge
mov
mov
cli
jge
jnp
repnz
push
daa
js
roll
sti
ret
lret
xor
aaa
mov
cmpsl
jae
jbe
adc
jnp
idiv
popl
out
aaa
jmp
sbb
popa
lret
cmpsb
clc
fsubl
xchg
sub
arpl
jo
ljmp
and
in
pop
adc
cmp
jo
shr
movsl
jle
sbb
fdiv
decl
pushl
hlt
push
or
jmp
aas
adc
addr16
gs
ds
mov
cmp
insl
mov
mov
push
push
push
cmp
adc
push
decb
scas
decl
es
jae
mov
xchg
mov
in
jg
icebp
inc
pop
dec
push
lds
lods
mov
push
xor
shr
cs
outsl
mov
neg
jmp
dec
lret
fs
push
jmp
sbb
clc
and
mov
inc
dec
inc
cmp
add
fidivrs
or
pop
jo
adc
std
or
stos
sbb
pop
rcrl
js
fimull
lea
inc
pop
out
aas
popf
lret
inc
inc
mov
xor
cwtl
andl
and
int
addr16
jg
add
xchg
mov
popf
out
call
mov
mov
icebp
xchg
jecxz
pop
inc
imul
xchg
mov
push
lret
or
lahf
inc
sub
jo
ds
ljmp
insl
xchg
scas
fsubrs
fldenv
sbb
and
and
jmp
aad
scas
xorl
shl
xor
or
mov
outsl
xor
pop
addl
hlt
jg
push
sub
jmp
call
push
cs
fcompl
or
mov
jb
jmp
ljmp
jbe
outsb
mov
faddp
add
adc
lock
mov
loopne
pop
ljmp
sub
mov
mov
movsl
cltd
aas
scas
loope
mov
fsub
ret
mov
mull
in
sbb
cltd
push
xor
lahf
leave
jne
out
adc
sbb
cltd
sbb
mov
lahf
cmp
mov
jae
mov
cmp
hlt
mov
in
pop
lds
mov
xchg
fidivrs
inc
fnstenv
jecxz
int
fwait
dec
call
push
push
sub
sbb
aas
adc
data16
lds
cld
pop
mov
mov
push
and
cmpsb
mov
and
loope
outsb
cmc
popf
sti
jp
cli
xchg
inc
lret
jbe
mov
std
sbb
adc
rcrb
enter
push
jg
cli
scas
or
mov
adc
add
and
rclb
and
test
subb
shrb
pop
out
mov
push
push
aam
xchg
test
mov
inc
add
pop
dec
movsl
loop
sub
iret
inc
add
pop
iret
and
adc
clc
xor
leave
cmpsl
andb
mov
gs
in
pop
push
jg
xchg
ret
ret
inc
pusha
js
fcomp
or
jg
lcall
repz
pop
xor
jg
clc
add
push
stc
mov
iret
call
cmp
push
cmp
fbstp
xor
aam
dec
in
cmp
mov
xchg
sti
insl
sbbl
cli
sbb
add
xor
flds
incb
push
stos
add
stos
xlat
cmp
popa
jae
cmp
std
pop
jnp
add
push
out
sub
in
std
iret
mov
mov
and
jg
cmc
pop
cmpl
or
nop
ds
shlb
fucom
jecxz
testl
lret
repnz
stos
dec
pushl
lcall
out
out
sub
decl
decl
jg
stc
lret
xor
push
in
ret
sub
ja
clc
mov
adc
out
int3
iret
icebp
pop
and
ficompl
inc
fwait
mov
sbb
mov
dec
xchg
or
aas
push
lods
popf
push
adc
cmp
out
icebp
out
icebp
lahf
sbb
pop
jb
enter
xchg
pop
or
mov
testb
mov
xchg
lcall
cmp
shlb
cmp
jb
fildll
adc
cld
xchg
sti
cmpsl
loop
data16
mov
inc
jnp
xchg
adc
in
shlb
insb
adc
mov
lods
loopne
out
sub
inc
fidivs
imul
subb
mov
sar
out
add
lock
mov
or
jns
and
mov
jle
pop
and
xchg
sahf
cmpsb
rolb
dec
inc
repz
cmp
clc
outsb
push
or
and
sarb
jge
pop
mov
mov
stos
fisttps
scas
pop
fisubs
jae
adc
xchg
roll
push
add
add
mov
mov
leave
push
pop
icebp
adc
loop
cmp
add
add
mov
loopne
adc
lret
lcall
out
mov
mov
pop
mov
repnz
push
sbb
mov
out
insb
movsl
test
sbb
xchg
inc
int3
adc
adc
xchg
hlt
mov
fcomp
clc
out
std
addr16
outsb
nop
mov
dec
bound
jmp
mov
out
jl
pusha
sbb
lahf
and
in
jae
aas
les
mov
xor
inc
jbe
lock
mov
or
scas
test
xchg
insb
sti
fimuls
decl
jne
lahf
repz
dec
mov
push
push
and
decb
jecxz
mov
add
negb
push
sbb
decb
out
mov
inc
add
push
pop
cmp
mov
hlt
js
mov
dec
jns
lds
mov
cmp
or
subb
and
loopne
mov
loop
testl
add
fidivrs
lds
xlat
rcrb
jmp
loope
incb
aam
ret
icebp
inc
pop
je
xchg
std
xchg
fstpl
enter
cwtl
push
sub
cmp
arpl
aaa
mov
jnp
pop
stos
arpl
shr
negl
ja
xchg
aas
imul
mov
dec
das
inc
jg
scas
and
push
pop
cmp
xchg
aaa
mov
inc
xchg
mov
ja
je
dec
xchg
add
jp
addr16
sti
cmp
loop
out
ds
sub
xchg
fdivrp
fst
dec
stos
aad
sub
pop
std
cmp
cltd
xor
das
in
or
inc
jns
fldcw
sarb
xchg
call
add
jno
jbe
cmp
mov
shld
pop
clc
pushl
icebp
cmp
mov
mov
inc
add
jno
lock
adc
fdivr
add
sbb
jg
pop
mov
mov
pop
fs
dec
or
mov
roll
scas
mov
jns
nop
stc
jg
in
daa
jge
pop
cmpsl
aas
xchg
xor
mov
aas
mov
into
fisubrs
scas
scas
inc
cld
loope
clc
int3
adc
js
stos
cmp
std
dec
add
addb
xor
ja
iret
rclb
dec
cmp
xchg
sahf
mov
dec
in
and
push
negb
push
pop
imul
jg
shrl
pop
bound
pop
sarl
idiv
mov
sbb
xchg
cld
popf
std
cmp
pushf
incl
jg
cli
sti
imul
mov
cmp
into
test
sti
lahf
rolb
mov
js
mov
or
mov
adc
jae
xchg
push
or
dec
sbb
dec
and
push
xchg
test
mov
fmulp
lahf
jbe
enter
cmc
cmpsl
enter
or
ljmp
popf
dec
lods
out
jg
call
mov
inc
sub
push
outsl
fcom
jmp
sahf
xchg
imul
mov
lcall
ret
cmc
inc
out
or
adc
mov
mov
sub
test
push
mov
xor
mov
xor
enter
jns
cmovae
mov
lret
int
or
sar
add
sbb
and
out
ja
loope
cli
test
mov
idiv
shr
fstl
xor
or
lahf
js
aas
and
popf
stos
in
push
insb
mov
dec
mov
cld
outsb
inc
jb
sub
lock
loope
jg
sbb
sbb
aas
inc
jmp
adc
scas
js
in
out
jle
fldl
and
lcall
pop
aas
sbb
popa
ljmp
jno
movsb
push
pop
mov
cmp
idivw
mov
jmp
add
cs
outsl
mov
aas
jle
fisubs
push
aaa
decb
icebp
repnz
out
push
sub
xchg
mov
sbb
add
or
out
push
call
shlb
test
jo
xchg
sar
xchg
push
inc
cmpsb
iret
iret
or
xchg
jo
cwtl
loop
cwtl
sti
pop
and
mov
adc
mov
jnp
movsb
pusha
sbb
add
pop
nop
mov
ja
ja
rorb
add
xchg
mov
gs
test
and
iret
pop
xchg
loopne
add
lock
addr16
dec
xchg
and
fbstp
sti
adc
aas
inc
push
push
test
jmp
sub
adc
pop
pusha
scas
dec
mov
dec
sbb
fisubrl
add
in
pop
arpl
pushl
or
mov
aad
pop
pop
xor
push
lcall
std
dec
jbe
inc
imul
movsb
aas
push
sti
out
push
aaa
cmpsb
pop
gs
jnp
js
and
aaa
push
std
enter
xchg
cmp
rorl
push
pop
cmp
iret
lahf
in
push
filds
std
ret
push
jbe
je
lahf
std
and
sti
mov
push
sbb
jno
cmp
testl
not
adc
lcall
call
dec
int3
cmpsl
sub
out
mov
push
addr16
push
popa
imul
adc
mov
add
pop
movsb
adc
jl
ret
and
sar
data16
outsl
sbb
mov
loopne
sbb
lods
popa
xchg
push
mov
and
sbb
mov
inc
cs
fxch
out
pop
xlat
mov
mov
cmc
sub
jecxz
je
idivb
mov
imull
scas
cmp
insl
mov
mov
mov
pop
mov
push
mov
loopne
or
push
cld
fsubl
mov
rcl
mov
idiv
jecxz
lods
add
faddp
cltd
inc
or
mov
inc
xor
inc
sbb
push
inc
adc
push
mov
decl
out
test
aad
add
add
filds
stos
push
leave
push
stos
lods
cs
enter
push
dec
les
adc
fisttps
lret
rorb
dec
ret
cld
div
mov
and
sub
and
xchg
or
std
cmp
jns
jmp
sbbb
mov
jmp
arpl
loope
mov
aas
push
xchg
dec
outsb
ja
mov
arpl
or
pop
aam
pop
ds
jns
jg
adc
nop
fmull
imul
jno
xchg
mov
call
call
jecxz
add
mov
daa
mov
insl
cwtl
cmc
pop
dec
cld
mov
faddl
mov
sbb
pop
mov
jo
push
push
push
rorb
inc
cmpb
pop
xchg
lock
mov
arpl
or
mov
sub
ret
lahf
lods
push
out
jae
dec
xor
pushl
sbb
inc
idiv
shl
test
xorl
lock
fbld
jo
adc
cmp
lahf
into
xor
sti
insl
push
decl
cs
adc
scas
push
movsb
inc
xor
xor
into
inc
mov
and
loop
lea
lds
push
sub
bound
loope
lods
push
mov
clc
addl
mov
fwait
cmpsb
xchg
test
jg
mov
xchg
pop
add
sbb
mov
or
testb
inc
xchg
loop
shr
mov
lods
inc
mov
inc
adc
incl
sbb
cli
xchg
xor
and
push
fistpll
xchg
ss
push
xchg
incl
cmpsl
pushl
or
push
cmpsl
cmpsb
testl
outsl
int
incl
clc
outsb
js
sar
movb
sbb
inc
jg
xchg
fsub
imul
lcall
fsub
jb
ret
jecxz
adc
pop
dec
mov
xchg
ja
or
add
sub
mov
pop
xor
pop
adc
mov
aam
mov
xor
mov
xor
nop
aam
mov
arpl
fisubl
sbb
test
jge
add
add
or
ffreep
movsl
bswap
dec
jne
flds
mov
push
xor
sub
mov
cmp
jmp
pop
push
fisubs
das
or
add
or
cmpl
repz
and
add
das
in
aaa
sbb
fldl
das
jmp
bound
mov
push
jno
cmp
scas
js
jg
inc
fucomp
fwait
pavgb
scas
mov
test
mov
cmp
push
out
push
pop
fmulp
adc
nop
ja
filds
mov
leave
movsb
rcrb
inc
test
jmp
adc
cmp
mov
rolb
inc
cld
and
cmp
add
inc
nop
ret
lcall
ret
mov
lods
push
int
pop
insl
xchg
or
xor
mov
ret
ror
xchg
jge
or
aas
adc
test
xor
pop
in
inc
imul
cmp
pop
fistps
insl
or
mov
mov
aaa
push
jle
icebp
incl
cmp
pop
mov
test
fbld
lret
std
lahf
fdivrl
jecxz
aad
arpl
or
js
adcb
and
inc
cld
mov
cwtl
add
push
jb
testb
dec
popa
jno
out
add
sub
mov
ja
jmp
imul
les
jmp
or
inc
or
sub
sti
add
arpl
xlat
add
pop
hlt
and
icebp
in
cltd
jae
and
mov
lock
ret
jg
xor
pop
or
rcrb
pop
xchg
shr
or
ljmp
dec
out
lret
jg
sub
pop
pop
sbb
ret
in
repnz
xchg
call
out
fwait
clc
dec
mov
jnp
mov
js
inc
cmp
mov
mov
fcmovne
mov
std
inc
jo
cwtl
lds
sbb
xchg
jg
add
fisubl
dec
and
out
int3
cli
cs
mov
and
aas
push
outsl
mov
shr
leave
popf
inc
xor
cmp
or
cmp
idivb
jbe
scas
sbb
cmp
xor
aas
negb
lods
je
and
ja
iret
mov
jmp
je
lahf
rcll
adc
std
mov
scas
lret
mov
mov
or
fsubrl
or
jmp
inc
xchg
mov
lcall
mov
out
push
cmpsb
jmp
add
fldl
dec
ds
ds
cld
xor
cld
test
mov
or
mov
out
je
jne
out
sti
inc
jp
pop
mov
push
out
loopne
push
cmp
cmp
std
jnp
fnstsw
pop
pop
mov
adc
sti
mov
jbe
or
mov
aas
sbb
xchg
dec
test
mov
fcom
cmpsb
pop
cmpl
fists
xor
dec
xchg
add
xor
test
shlb
jno
inc
lods
jp
jg
aad
loope
cltd
pop
jmp
jnp
in
jg
in
sbb
xchg
pop
cmp
sub
sbb
mov
sub
std
out
mov
mov
xor
int3
cmp
iret
fwait
stos
dec
jns
sbb
inc
mov
frstor
sub
lahf
dec
lahf
lock
popa
push
scas
adc
and
icebp
sbb
or
xor
jnp
or
jle
movsl
lcall
sub
ja
outsl
pop
mov
cmp
sbb
xor
cmp
imul
neg
jecxz
ficompl
pop
arpl
out
xlat
ds
ss
inc
xor
pop
xor
daa
xchg
addr16
mov
and
fisttps
lock
aas
cmpl
sbb
xchg
jg
jne
in
mov
out
fistpll
fwait
mov
push
lahf
jno
int
add
or
pop
std
pop
in
fst
popa
mov
mov
mov
add
inc
fcmovnbe
sarb
inc
daa
int3
mov
and
stc
mov
test
int
ficoml
and
xor
sbb
ljmp
vpackuswb
ror
or
in
sbb
pushf
pop
scas
dec
js
call
cmc
shll
pop
mov
jg
and
inc
lods
nop
sbb
js
lcall
push
gs
push
lods
call
mov
jns
mov
out
or
rorb
ret
pop
fisttps
dec
adc
jp
push
and
xor
ja
jge
mov
jne
shl
dec
call
jg
aas
adc
sub
insb
popa
push
insl
in
add
ret
sti
cwtl
jecxz
psubusb
jno
out
clc
stos
addr16
or
push
mov
roll
out
mov
iret
test
inc
push
ret
sub
pop
inc
sbb
aam
inc
sbb
rclb
call
pop
adc
movsl
jmp
clc
add
push
pop
movsl
icebp
cmp
mov
push
icebp
and
enter
ds
jl
lahf
sbb
sahf
lock
cld
int3
mov
std
decl
sahf
push
sbb
push
pop
and
incl
xchg
cmp
outsb
mov
and
push
loop
out
pop
rcll
fidivrs
add
pop
jmp
pop
cmp
mov
mov
in
cmp
add
scas
fistpl
incl
xchg
jae
leave
cmp
xchg
push
out
mov
push
mov
xchg
das
mov
repz
call
mov
pop
add
mov
sti
sbb
shrb
jle
sbb
and
mull
sbb
pop
mov
and
mov
mov
sub
or
mov
sub
movsl
push
loope
cmc
fisttpll
or
push
push
lock
push
jo
sbb
bound
adc
or
mov
mov
in
scas
pop
push
mov
loop
sbb
rcrb
std
sbb
push
icebp
fiadds
fildl
push
repnz
push
mov
add
cmp
sbb
sbb
cli
ret
or
pushl
xchg
ret
lret
sbb
mov
inc
sti
out
jge
pop
in
insl
fs
mov
push
rcl
cmp
hlt
fisttpll
sub
xchg
outsl
out
aaa
incl
push
pop
lcall
sub
in
mov
sub
or
mov
sub
cmpsl
lea
leave
ds
repnz
cli
jg
lods
jl,pt
xorl
jb
sub
fcoml
adc
sti
mov
aad
push
sbb
in
cmp
lret
inc
filds
fimull
mov
and
jg
xor
dec
cmp
cs
scas
in
fldcw
out
mov
and
and
cmp
push
aas
shlb
add
sub
pop
pusha
mov
outsb
mov
adc
jg
push
outsl
adc
jge
adc
mov
or
xchg
xor
cmp
int
inc
xlat
out
data16
fcmovbe
mov
or
xchg
sbb
add
cmp
jne
fstps
xlat
out
aas
adc
and
test
adcl
and
sbb
or
insl
repnz
dec
lcall
cmpsb
jbe
or
add
xchg
jg
rcrl
gs
fidivrs
aas
fidivrl
and
and
idivb
push
add
call
lahf
add
or
enter
popf
inc
push
jne
mov
or
add
or
fbstp
aas
insl
stos
xor
ja
out
sub
pop
out
push
je
out
and
sbb
repnz
xchg
scas
popf
movsl
out
jg
jg
in
push
es
mov
cs
cwtl
pop
or
int
idivb
fistpl
pop
push
cmp
sahf
sarl
inc
arpl
jecxz
cmp
fisubrs
cltd
jne
vaddsubps
jnp
mov
pop
imul
adc
aaa
cltd
ja
repnz
fdivr
xor
mov
pop
outsb
lret
sbb
lret
ja
neg
jmp
mov
jne
xlat
cmp
fisubrl
fidivrs
add
xchg
mov
mov
call
adc
mov
dec
jge
xchg
cmp
jmp
jb
add
mov
stos
aaa
sbb
icebp
add
scas
mov
xchg
in
pop
mov
cwtl
sti
inc
xor
les
andl
jp
jns
testb
es
pop
repz
enter
push
push
jge
clc
mov
xor
call
add
xor
icebp
mov
sbb
adc
jae
loop
mov
push
adc
fildl
jmp
pop
ljmp
gs
enter
dec
ds
ret
cmp
cmpsl
daa
and
lcall
xchg
add
jge
mov
in
jbe
inc
dec
rorl
jmp
sbb
add
jg
xor
popf
aad
and
ljmp
idivl
aad
pop
xlat
lock
sar
jg
popf
sbb
iret
add
mov
push
and
outsb
adc
mov
aaa
push
mov
sti
rclb
scas
pushl
adc
into
enter
jmp
rcrl
jmp
pop
bound
mov
lock
sub
lsl
cwtl
cmp
cmc
cli
lea
rol
ret
pushf
scas
cmp
mov
fistpll
rcll
leave
pop
bound
loope
jo
imul
mov
xchg
shll
mov
jmp
dec
enter
jmp
jg
in
punpckldq
loope
gs
cmc
jp
out
mov
ffreep
mov
outsl
inc
popf
test
mov
jns
outsl
mov
lea
adc
jg
jle
sbb
mov
push
ljmp
sub
repnz
cld
mov
clc
mov
test
decb
fdiv
push
mov
dec
es
stos
loopne
cmp
cmp
mov
add
mov
add
dec
cltd
in
movsb
mov
fistpll
int
sbb
mov
cs
and
daa
js
cmpb
insl
aaa
sti
iret
dec
inc
mov
mov
adc
pusha
jo
inc
jp
and
pop
sub
lods
add
add
push
mov
mov
add
addr16
jne
and
aas
and
sbb
mov
mov
xor
xor
mov
and
in
bound
ret
jg
xor
mov
add
or
dec
mov
inc
fsubrl
jecxz
fucomip
fildl
jno
mov
jg
push
dec
push
sbb
mov
filds
cwtl
adc
jg
pop
ss
mov
fs
call
dec
mov
add
lret
xchg
add
mov
mov
out
pushf
fisubrs
mov
lahf
enter
loope
jmp
push
xchg
jle
xor
mov
mov
jg
mov
sub
shll
clc
cmp
jns
dec
arpl
jne
test
jno
add
add
aam
data16
loope
jno
fucomi
or
movsb
sarb
ljmp
ret
int
lahf
les
adc
jg
stc
cltd
push
mov
idivl
add
xchg
fsubrs
je
sub
cmp
andl
sbb
sarb
mov
xchg
clc
mov
popf
shll
fsub
mov
in
in
push
ret
pop
idivb
mov
sub
jbe
cs
in
mov
ljmp
decl
pop
js
and
mov
pop
add
popa
cwtl
inc
loopne
es
dec
arpl
jp
mov
sbb
jnp
lds
xor
sub
shrl
in
in
std
aas
mov
sub
xchg
aam
push
xchg
imul
outsl
adc
and
ds
add
sbb
pop
mov
ss
loope
and
cltd
lds
jecxz
and
xchg
iret
mov
fs
test
sti
and
mov
or
test
pop
bound
xchg
shl
cmp
icebp
arpl
jg
mov
rorb
aad
cbtw
popa
mov
loopne
or
hlt
rorb
and
out
dec
idivl
jg
clc
call
and
loope
cmp
imul
push
popf
inc
xchg
lret
insb
xchg
insb
es
push
jg
pop
movsb
xchg
sub
sub
pop
pop
scas
push
cmp
push
jne
hlt
pushf
mov
sar
or
incb
dec
loopne
pop
dec
pop
cmp
adc
add
pop
inc
xchg
bound
sti
iret
std
repz
loopne
push
sbb
push
cmp
fldl
repnz
loope
clc
jge
jle
icebp
mov
cmp
cmp
popa
push
sti
and
int
out
lock
icebp
sub
cltd
add
push
mov
and
and
push
pop
lahf
loope
daa
push
xorb
sub
fninit
incl
jecxz
out
in
mov
cli
xchg
xor
shl
idivb
or
test
loop
cwtl
fdiv
nop
lods
in
mov
and
cmpsb
jne
clc
jae
mov
rorl
add
push
mov
andb
inc
sti
adc
push
stc
sti
sbb
in
jg
in
lcall
dec
cmpsl
gs
aad
push
aaa
pop
mov
and
or
xor
jbe
fidivrs
xchg
lock
in
cmpsb
or
mov
out
outsl
or
or
arpl
aas
adc
push
or
mov
std
mov
or
scas
cmp
cmpsb
sub
mov
movl
pop
insb
jb
pushl
stos
or
jns
aad
lds
and
inc
sub
push
daa
rorb
stos
hlt
ljmp
jp
mov
sbb
loope
cmp
fstps
je
pop
mov
not
mov
xchg
pushf
pusha
xchg
and
ret
sti
popa
not
add
es
xor
adc
pop
lods
jp
mov
cmp
ficomps
adc
int
jl
scas
nop
dec
mov
cmpsb
adc
add
test
lock
or
fsub
cmpsb
es
cld
add
mov
aas
rcll
cmp
dec
incb
and
push
sbb
pop
stos
xchg
mov
subl
pusha
mov
mov
xlat
lahf
aas
dec
movsl
push
dec
lods
jns
pop
fdivrp
dec
aam
roll
stos
jo
cmpl
cli
aam
lock
mov
xor
push
loope
pop
mov
lcall
out
jmp
out
cmp
jl
ja
mov
and
lcall
out
sbb
loopne
lds
jno
stc
mov
setg
int3
push
std
gs
andb
and
xchg
outsb
and
cli
fs
jg
jg
mov
mov
or
add
cmpsl
rcrl
mov
inc
mov
and
cmp
adcl
xchg
mov
jo
jmp
mov
cmp
inc
loop
dec
cmpb
and
cmpsl
fbstp
sbb
leave
stos
jbe
fs
xchg
aad
mov
jecxz
jg
inc
jle
loopne
int
mov
add
popa
mov
and
in
imull
imul
push
icebp
aas
icebp
jecxz
cmp
bound
fmull
push
repnz
cmpl
jae
clc
dec
mov
call
movb
mov
add
test
push
or
jae
repnz
xchg
shlb
or
pusha
cwtl
mov
inc
inc
imul
cmp
test
negb
leave
lcall
cmp
mov
das
add
and
cmp
cmp
jae
pop
dec
xor
std
sarb
jne
xor
stos
xchg
aam
orb
stos
not
out
mov
pop
cli
mov
cmpb
xchg
add
jl
jo
dec
test
loope
fsubl
jl
xor
mov
xchg
std
filds
stos
stos
cmpsl
lods
cmp
popf
popa
rcrl
inc
jg
and
cmp
ds
lock
movsb
lahf
sbb
add
js
repnz
in
aam
mov
call
sti
mov
xor
and
bound
push
ret
sbb
dec
mov
jp
jg
jle
mov
loop
fidivrs
daa
insb
sub
incb
pop
adc
bound
mov
andl
inc
cmpl
xchg
aam
cmp
jo
pop
sti
in
std
rcrl
std
mov
js
and
pushl
mov
lds
jb
mov
test
and
inc
negb
ja
mov
mov
add
sbb
or
outsb
inc
mov
gs
pop
cld
jmp
push
sub
mull
and
aas
sar
sti
fmull
mov
add
or
test
lahf
sbb
imul
roll
repnz
push
adc
jge
std
cmp
xor
xchg
outsl
add
fdivl
sti
xchg
cli
dec
nop
xor
xor
xchg
inc
fidivs
cmp
cld
and
push
push
dec
cli
xor
jmp
pop
mov
adc
sbb
dec
pushl
xchg
cmp
shll
mov
hlt
outsl
jp
into
sbb
adc
aam
jg
mov
hlt
cmp
cmp
cli
iret
js
mov
ss
std
idiv
cmpsb
mov
push
jnp
mov
sub
out
filds
daa
mov
jp
jne
jnp
mov
cmc
mov
daa
div
jecxz
ja
mov
aas
scas
add
in
stos
sarb
mov
jg
adc
repnz
jg
push
out
mov
add
dec
cwtl
dec
aaa
or
jecxz
pop
mov
pop
hlt
out
fdivrp
xor
mov
fidivs
mov
inc
aad
mov
hlt
jmp
mov
cld
mov
outsl
jmp
loope
fbstp
xchg
hlt
outsb
cmp
jne
rclb
push
int
ret
sub
ja
cli
dec
jge
cmp
mov
dec
mov
xor
push
les
mov
mov
sub
jmp
jno
mov
inc
adc
ds
rolb
in
mov
lcall
pop
pushf
movsb
lock
mov
loope
fwait
xchg
test
inc
pop
mov
aas
or
sbb
lea
cmp
mov
fnstsw
xor
cmp
sub
mov
loope
enter
pop
mov
andl
cld
inc
mov
pop
aad
or
jg
lds
inc
adc
xchg
push
aas
aad
dec
add
cwtl
hlt
test
xchg
pusha
fiadds
insb
es
dec
add
bswap
mov
lods
cmpb
sbb
and
outsb
jg
stc
xor
add
dec
jg
filds
pop
test
jg
ja
push
mov
mov
dec
sbb
adc
add
lahf
and
fucom
dec
call
push
lods
pop
sar
jnp
xchg
jle
push
inc
pop
aam
test
jo
repz
jg
add
jp
ljmp
je
aas
cmc
lahf
mov
pop
popf
add
aas
sbb
xor
xchg
shr
std
and
push
jno
sub
lock
xchg
fdivrs
std
jae
std
mov
push
inc
mov
push
hlt
aas
out
lock
xor
dec
pop
inc
decl
addl
andl
insl
cmp
mov
mov
mov
cwtl
add
xchg
jns
jecxz
iret
cli
aaa
fidivl
cmp
push
cmp
inc
lds
jle,pt
pop
hlt
mov
test
mov
jge
jne
dec
lds
fs
fisttps
addr16
stc
aaa
cwtl
jmp
lahf
daa
js
in
lea
fistpl
maskmovq
faddl
fs
push
xor
popa
cmpl
mov
das
mov
xlat
ja
push
std
maskmovq
negl
xor
into
nop
fxch
lods
bound
out
push
xor
aas
adc
cmp
in
aas
mov
in
shrb
jp
shl
add
loope
mov
pop
cld
dec
cltd
arpl
into
aas
sbb
cmp
add
clc
adc
or
loope
decl
divb
add
dec
sahf
bound
scas
cmp
pop
or
loopne
mov
imul
mov
add
jno
push
jp
out
xor
scas
push
xchg
fucomp
ficoms
cld
int3
aad
scas
shl
call
sti
fdivl
je,pt
and
sbb
mov
mov
pop
hlt
inc
and
jg
cmp
jns
mov
inc
xor
hlt
dec
push
jp
clc
mov
push
pop
sbb
push
cli
jle
aam
scas
pop
sbb
ret
cmp
jg
pushl
cmc
or
mov
cmp
adc
inc
mov
int3
jle
lods
incl
jge
xchg
js
sahf
call
stc
dec
notl
mov
push
rorl
or
loop
add
xor
mov
pop
adc
xchg
scas
jno
mov
mov
fcomps
inc
push
mov
jo
flds
fwait
pop
lods
add
clc
icebp
pop
cmpsl
push
cld
jg
js
lods
push
or
lahf
scas
loopne
fmul
xor
inc
aaa
sub
out
sti
in
inc
pop
mov
pop
and
add
dec
cld
ret
or
clc
ds
sbb
push
jg
inc
dec
pop
jmp
js
cmp
cmpsl
jmp
pop
mov
out
icebp
push
repnz
xorl
push
jo
pop
cmc
mov
addr16
stc
mov
incl
mov
sub
lea
insb
xchg
cmp
insl
ret
or
dec
daa
cmp
pop
sbb
iret
adc
cltd
rolb
or
es
adc
cmp
push
and
ret
pop
mov
adc
call
outsl
mov
out
icebp
cs
outsl
sbb
or
movl
dec
daa
insb
outsl
jecxz
lds
popf
call
fistps
ret
lods
decb
mov
adc
jno
pop
pop
aam
fdivs
xor
cmp
sub
jae
pop
mov
int3
in
sbb
and
adc
push
or
cld
aas
cmp
adc
xor
fistpl
rolb
jp
sub
bound
mov
pop
movsb
mov
xor
shr
jo
jecxz
xchg
mov
cmc
loopne
pop
or
std
push
or
cmp
inc
mov
push
ljmp
lahf
and
mov
mov
pop
repnz
add
lahf
mov
mov
popf
mov
shl
mov
mov
push
jle
sub
aad
lds
sbb
testl
loop
pop
popa
je
sbb
jp
cmpsl
pop
pop
cmp
ljmp
adcb
cmp
sbb
bound
sub
adc
push
test
sub
imull
shufps
divb
popa
aaa
jnp
daa
mov
cltd
xorl
call
cld
push
mov
xchg
ret
inc
hlt
js
xor
in
std
ds
dec
or
cmp
cld
or
jecxz
push
dec
cld
pop
cld
aad
or
out
pop
inc
mov
jnp
sti
lret
aad
pop
roll
cwtl
loop
pop
pop
cmp
push
cld
dec
cmp
lret
mov
ret
mov
add
int
sbb
mov
out
or
dec
daa
lods
je
xlat
pusha
inc
adc
js
adc
clc
inc
call
jno
test
and
lods
jnp
out
rorb
stos
sahf
outsl
out
inc
fldl
movsl
cmp
pop
push
jbe
fistl
arpl
add
sub
or
repnz
lock
jae
pop
fiaddl
fbstp
cli
adc
popf
and
mov
test
sbb
cli
scas
js
addr16
mov
jae
and
pop
addl
ret
sbb
cmp
jp
in
cwtl
jle
popa
sbb
sarl
sbb
mov
out
ret
cmc
xor
or
insl
jge
xchg
xchg
inc
xchg
or
jb
call
push
mov
sub
or
cmc
ret
push
stos
out
out
cwtl
pop
push
int
sarb
shll
jmp
fbstp
inc
mov
or
adcb
adc
test
outsb
mov
cmp
xor
adc
mov
shlb
sti
xorb
in
int3
xor
shrl
aas
out
pop
lcall
dec
and
xchg
adc
insl
scas
pop
push
push
fdivrl
pop
mov
jg
dec
xchg
dec
ljmp
sub
cld
add
adc
lret
dec
dec
dec
or
inc
mov
xchg
push
arpl
stos
mov
lock
mov
loopne
push
std
push
call
out
repz
out
movsb
inc
push
xlat
call
mov
inc
sub
pop
cmp
dec
sbb
push
inc
pop
ljmp
and
cmp
mov
mov
sbb
sub
aaa
inc
orl
add
sub
test
loopne
and
sbb
cwtl
iret
stos
sbb
jnp
pop
mov
or
sub
dec
rcll
xor
stos
nop
aaa
dec
dec
lea
xchg
pop
test
push
mov
jns
mov
jg
push
inc
and
ja
into
decl
icebp
pop
add
cmp
sub
jg
outsl
fcmovb
icebp
mov
push
push
call
rcrb
incl
mov
test
sbb
push
leave
mov
sub
sub
ret
hlt
and
adcb
test
outsl
jge
popa
mov
add
add
ficoms
icebp
adc
clc
xor
call
add
fdivrl
gs
je
psrld
inc
loop
sar
aaa
std
mov
imul
ja
aas
cmp
popa
mov
push
push
hlt
sbb
popa
cli
xchg
hlt
jg
les
sub
pushf
or
idiv
out
mov
xor
movsl
mov
xor
std
pushf
adc
push
jnp
mov
sbb
xchg
inc
out
xchg
push
stos
mov
and
outsb
add
mov
inc
lock
mov
insb
xchg
ds
mov
cli
loope
jmp
jo
test
jmp
es
jmp
lods
push
adc
icebp
pop
adc
sub
clc
out
rclb
inc
subb
out
loop
aas
pop
and
lcall
cmp
xchg
pop
loope
push
jbe
lea
lock
arpl
cmpsb
cmp
cmc
jne
inc
push
or
int
cmp
mov
loope
aam
repz
mov
aad
loopne
inc
mov
mov
mov
push
movb
fstps
cs
fimuls
loop
xchg
mov
push
leave
push
or
mov
sub
xchg
xchg
std
and
loop
aaa
jmp
sub
jecxz
mov
movb
lahf
jecxz
sar
dec
es
pop
jbe
pop
inc
sub
cli
mov
jg
mov
out
dec
xchg
xchg
popa
push
gs
stos
mov
in
cs
lods
jmp
icebp
sahf
iret
or
fdivrl
les
pop
push
icebp
pop
iret
bnd
mov
cli
mov
out
pop
bound
stos
aam
adc
pop
std
decl
xchg
dec
movb
movsb
shll
jmp
mov
and
lock
push
fisubrs
fimull
dec
ficoml
pop
jecxz
inc
lock
cmc
ss
and
bound
int
mov
ja
enter
xor
pushf
shlb
or
hlt
clc
stos
arpl
cld
pop
mov
ret
mov
aaa
clc
jbe
in
add
push
jg
test
rep
in
scas
fs
sub
adc
ljmp
in
icebp
out
sarb
insb
xchg
rclw
adc
shll
into
lds
bound
mov
iret
pop
push
jns
jg
call
or
sbb
push
add
pop
jmp
fidivrs
mov
cmp
and
data16
add
enter
cld
add
ljmp
fsubr
data16
and
jg
rorl
jmp
addr16
jmp
xchg
loop
mov
cltd
out
or
jmp
clc
mov
hlt
data16
xor
pop
jae
jno
sub
add
or
fistpll
inc
aad
pop
jo
cmp
jg
or
loopne
or
loopne
pop
sarl
filds
clc
mov
inc
dec
or
loope
sbb
mov
pop
cmp
mov
xchg
mov
cli
test
dec
and
int
sub
cld
popa
call
xor
shrl
add
jg
jge
mov
in
movsb
lcall
mov
pop
movsb
pop
popa
aam
das
out
mov
inc
push
and
shl
jecxz
test
movsb
enter
inc
shll
push
jns
mov
imul
pop
add
jno
inc
xchg
dec
inc
ret
cmp
inc
mov
or
pushl
sti
jg
mov
mov
xchg
cs
call
notl
outsl
cmpsl
dec
sub
loope
aas
idivl
push
add
test
shrl
xchg
loopne
push
mov
mov
mov
jmp
mov
addl
pop
dec
leave
out
inc
in
cmp
es
pop
sub
decl
pop
jecxz
imul
jo
lahf
shr
jl
ret
mov
inc
xchg
sbb
popl
stos
push
cli
jbe
or
cld
xchg
popf
or
iret
loop
test
stc
repnz
std
outsl
xchg
lret
inc
jno
pop
jnp
int3
mov
inc
jg
mov
push
mov
add
outsb
ret
dec
add
hlt
xor
loop
push
jg
loope
repz
dec
sub
ja
int3
ljmp
and
jl
data16
int
rcrl
mov
test
dec
lahf
or
and
xchg
daa
cltd
xchg
dec
clc
negl
xor
out
in
fmull
es
inc
pop
sbb
jno
sbb
dec
cmp
mov
pop
je
mov
sub
clc
fistpll
or
insb
lods
cs
inc
js
in
test
insb
bswap
adc
pop
jg
sarl
addl
sti
jg
cld
es
aaa
push
ljmp
adc
lods
sub
ret
dec
mov
out
inc
sub
cmpsl
decl
lock
imul
pop
mov
jmp
pop
pop
outsl
mov
inc
sub
mov
sbb
pop
sti
daa
push
inc
and
pop
or
in
movsb
out
cmp
sbb
push
pop
xlat
jmp
les
je
xchg
hlt
pop
clc
scas
pop
leave
cmp
call
adc
dec
mov
pop
and
test
out
cmc
insl
roll
mov
jmp
fisttpl
mov
adc
cmp
seta
xor
jnp
popa
mov
popf
sub
testl
push
shrl
push
dec
xor
aam
mov
lods
add
fisubrl
push
add
cmc
push
fs
out
dec
stos
stos
fstps
aas
adc
repz
test
ja
push
and
aas
mov
mov
cld
xchg
sub
xchg
sub
insb
sub
loop
jnp
adc
incb
test
cmp
cld
rol
mov
std
adc
shll
xchg
loopne
jmp
fs
jmp
adc
insl
dec
push
fs
shr
cltd
cmp
fucomp
aas
push
add
cltd
jge
cmpl
add
inc
push
cmpl
cmp
mov
adcl
test
pop
in
xchg
loope
test
sbbl
mov
lahf
mov
ss
pop
xor
das
lea
loop
jecxz
sbb
or
pop
loope
xchg
push
pop
push
sbb
xor
dec
dec
aas
cmpsb
out
sbb
sub
push
mov
dec
jmp
inc
cmp
arpl
or
jp
jnp
lret
pop
mov
jbe
and
xchg
adc
jl
out
outsb
mov
inc
push
and
xor
loopne
dec
addr16
mov
cmp
insl
pop
mov
test
adc
add
adc
cmpsl
mov
push
push
mov
jge
imul
sub
out
mov
push
cmp
out
pop
clc
dec
pop
pop
xchg
loop
inc
repz
rol
mov
add
pop
call
ja
loop
idivb
roll
ja
cmp
sarb
push
push
and
jmp
jo
add
cmc
mov
hlt
add
test
inc
test
adc
push
fistps
sub
xchg
mov
push
mov
cmp
add
push
cmp
ljmp
jge
mov
cmp
in
sbbl
adc
pop
insl
mov
jle
loopne
ret
insb
int
push
mov
jecxz
xor
ret
orl
cmc
cmp
mov
es
rorl
test
mov
sub
std
rolb
mov
cmc
fnsave
dec
ja
xor
movsb
loope
ja
push
fsts
dec
lahf
mov
adc
jno
fbstp
jmp
mov
insb
daa
rclb
out
mov
inc
mov
lcall
shrb
in
sub
popf
aam
dec
cli
mov
cs
cvtps2pd
lock
push
mov
aaa
fsubrs
jmp
imul
mov
aam
pop
xchg
ja
loop
and
rcrb
sbb
jge
inc
imul
mov
adc
xor
cmc
inc
testb
jg
in
loopne
xor
loop
sti
sub
mov
inc
push
negl
fmull
pop
dec
pop
mov
pop
call
dec
mov
cmp
outsb
lret
stos
js
aad
mov
pop
cmpsb
sti
lods
push
fdivrp
and
frstor
out
adc
and
or
add
mov
and
mov
shlb
sbb
fdivrl
stc
dec
and
std
jg
cli
arpl
aaa
xchg
fs
andb
or
hlt
adc
inc
int
cmpsl
pop
xchg
fcompl
test
sub
cli
nop
out
div
std
sti
adc
add
adc
pop
push
mov
lds
roll
add
mov
add
or
jae
mov
orb
sar
pop
mov
aad
ds
or
lods
cmp
bound
mov
arpl
xchg
in
ss
cmpsl
in
sbb
and
pop
or
aam
dec
add
and
xor
xor
jg
inc
mov
and
fiaddl
mov
sbb
and
sub
pop
dec
in
fisubrl
stos
mov
insb
add
pushf
add
jmp
xchg
fistps
in
and
push
mov
fldcw
or
push
clc
sbb
lods
jl
fdiv
fucomip
jle
sbb
adc
lret
imul
ja
jo
push
fs
mov
jns
add
pop
mov
mov
or
or
inc
out
lret
ret
add
imul
mov
or
jne
mov
mov
fcoms
pop
imul
aam
imul
pop
bnd
mov
or
or
pop
push
addl
pop
mov
and
push
add
pusha
sbb
pop
icebp
das
pusha
cmpsb
or
sbb
rorl
push
mov
xor
lea
fcmovnu
mov
mov
and
sbb
repz
insb
outsl
insb
add
jo
shrl
jmp
adc
enter
add
ficomps
adc
insl
idiv
mov
xchg
cld
shlb
jle
add
jbe
add
inc
repz
jg
mov
xchg
jg
pop
add
stos
dec
and
inc
test
adc
mov
pop
loop
loopne
cmpsb
or
mov
sub
inc
cmp
repnz
mov
jmp
ja
or
mov
jle
add
xor
xchg
or
mov
jecxz
arpl
adc
mov
cmp
jae
mov
mov
stc
mov
aaa
mov
dec
ss
nop
nop
fstps
pop
cmp
enter
jecxz
stos
xor
pop
shlb
push
jp
inc
into
xchg
lods
dec
in
lock
xchg
mov
add
cmp
das
xchg
ret
adc
dec
sahf
outsl
clc
incl
pop
jl
add
sbb
loopne
pop
cmc
inc
add
push
adc
mov
mov
add
outsl
outsb
sbb
popf
inc
mov
push
jl
pop
test
pop
lret
ljmp
mov
mov
jecxz
out
jb
add
aam
push
mov
push
or
fucomi
insl
pop
dec
fdivrp
mov
scas
sti
loop
je
push
dec
mov
js
mov
div
adc
add
lds
mov
lret
leave
fwait
rcr
sub
inc
das
insl
mov
cmp
and
add
or
outsl
ja
movsb
lock
adc
pop
or
sub
mov
test
push
push
jne
or
mov
pop
jg
mov
mov
push
out
mov
lcall
and
push
leave
xor
and
subl
mov
enter
test
add
and
or
test
add
ja
add
shll
outsl
daa
jae
and
popf
add
inc
jg
jb
jo
mov
pop
jle
mov
test
fistpll
imul
dec
fcoml
sahf
adc
jg
ljmp
inc
push
enter
ljmp
aam
test
int
mov
sub
sub
adc
dec
pop
adc
add
inc
jl
outsl
xor
and
or
push
leave
cld
pop
mov
jg
mov
js
add
out
dec
jne
outsb
push
push
add
inc
push
in
fwait
outsb
por
sub
push
repnz
inc
pusha
jecxz
decl
xor
stc
mov
pop
dec
jns
push
lods
test
ficompl
iret
adc
leave
ret
xchg
push
insl
inc
std
inc
or
adcl
jb
cmp
lock
clc
jg
and
inc
scas
fistpll
cmp
mov
ret
outsl
cli
add
sarb
rolb
sub
bound
add
outsl
mov
cwtl
add
orl
pop
movsl
aam
ja
bound
ret
inc
or
fildl
sub
ja
mov
cmp
pop
jl
nop
cmpl
testl
mov
leave
xchg
test
jl
shll
mov
or
inc
push
imul
mov
pop
dec
test
fsts
mov
or
out
sub
cmp
mov
inc
mov
jp
and
add
test
jb
push
mov
push
xchg
lea
push
stos
imul
sbb
xchg
add
subb
ja
add
push
push
ret
push
mov
incl
sbb
mov
out
cld
pop
call
mov
cwtl
adc
inc
xchg
xor
cmpsl
rclb
mov
adc
imul
mov
jnp
jle
std
adc
hlt
cmp
das
repnz
testl
pop
mov
xor
pusha
cmp
dec
mov
lds
cs
inc
aad
dec
inc
andl
push
add
push
aad
xor
popf
call
jle
dec
jne
pop
jae
pop
sub
add
aaa
cld
mov
xor
dec
call
push
aam
stos
xor
adc
inc
pop
insb
jae
loop
ret
repz
rcr
fsub
cld
lahf
inc
dec
xchg
lcall
call
jge
adc
lret
mov
jne
jle
dec
pop
or
pop
aas
call
cld
jne
into
dec
or
dec
rcll
fwait
or
add
push
fdivr
into
fwait
adc
ja
cmp
rcll
adc
stos
stos
js
insl
adc
push
pop
ljmp
das
pop
mov
mov
adc
mov
xor
lcall
sub
mov
sub
or
call
fs
xchg
or
xchg
and
add
xchg
int3
add
mov
mov
jno
test
daa
fs
xorb
push
je
insb
out
xchg
sarb
loop
movsb
lcall
fdivs
dec
jae
inc
mov
sbb
xchg
js
xor
mov
adc
xor
les
mov
mov
fiaddl
adc
aaa
cmp
mov
push
jl
adc
cmc
sub
inc
mov
in
fistps
scas
jns
cmc
mov
mov
adc
add
bound
cwtl
push
into
repnz
push
cwtl
sahf
jo
push
pop
rorl
out
add
nop
aaa
jne
xor
in
jmp
jns
aad
dec
aam
jmp
xor
jns
adc
xor
xor
bound
push
int3
das
jl
cld
fadd
push
stos
arpl
and
jmp
pop
rcrl
int3
cmp
xor
dec
loopne
scas
mov
mov
and
mov
sar
jne
cld
movaps
sarl
add
fdivl
push
or
dec
adcl
xchg
pusha
or
jb
or
js
jb
mov
add
adc
test
cmp
jmp
js
dec
mov
inc
inc
imul
lcall
int
add
sbb
pop
jecxz
cli
or
nop
push
push
add
push
push
aam
add
mov
pop
outsb
lahf
push
mov
push
fisttpll
mov
mov
push
imull
mov
movb
lods
and
jbe
inc
insb
push
add
add
loope
enter
adc
xor
loopne
repnz
out
add
icebp
xor
mov
fwait
aad
cmp
mov
inc
push
fidivrs
xlat
jg
scas
mov
sbb
cld
add
sub
sahf
push
sub
inc
mull
jp
mov
test
ljmp
aaa
mov
pusha
lods
sub
test
adc
mov
inc
xchg
pop
fimuls
test
stc
popf
jmp
push
jmp
fdiv
orb
or
dec
pop
jmp
cmp
or
add
outsl
aaa
shlb
xor
popa
mov
rcl
or
arpl
push
ljmp
or
fs
jp
sti
pop
js
lea
dec
sub
cmp
mov
xchg
jle
je
cs
mov
pop
mov
and
insl
shrl
fisubl
aam
repnz
pop
xchg
clc
incl
and
cld
add
sbb
insl
pusha
test
add
sub
dec
adc
dec
inc
test
lret
or
pop
loope
pop
adc
push
js
ja
or
push
add
stc
xor
xchg
lahf
pop
cvtpi2ps
insb
fisubrl
mov
les
lock
fldenv
mov
push
mov
add
mov
cld
ja
mov
icebp
sbb
int
ret
and
xor
dec
movsl
ljmp
push
insb
scas
jp
sar
adc
sbb
mov
inc
ret
pop
in
pop
xor
rorb
add
out
push
mov
adc
jns
push
inc
mov
pop
xlat
jmp
les
das
insb
pusha
xorl
xchg
adc
pop
pusha
or
je
jbe
xchg
jle
cli
subl
or
xchg
push
cmp
stc
cmpsb
call
rorb
pop
pop
mov
push
cltd
mov
add
sub
pop
sub
dec
popf
pop
and
test
stos
clc
movsb
and
repnz
add
ret
sbb
inc
adc
pop
int
add
sub
mov
mov
mov
ret
ljmp
sub
dec
mov
test
fwait
mov
ss
mov
frstor
fldl
jne
dec
push
sbb
xchg
cmpsl
cltd
pop
pop
sbb
testb
and
push
outsl
scas
adc
xor
mov
mov
pop
xchg
hlt
fildll
sub
cs
es
pop
fsub
or
xchg
fnsave
les
sbb
outsb
mov
pop
ret
pop
int3
jnp
xchg
lret
js
mov
cmp
sub
mov
mov
or
mov
insb
mov
jb
in
and
and
xor
enter
sbb
sub
cwtl
mov
mov
test
sbbl
push
icebp
add
add
fistpl
pushf
andl
pop
sbb
inc
pop
or
aad
data16
sbb
nop
jae
mov
add
sbb
icebp
xchg
out
adcb
or
mov
jge
fucomip
es
xor
ret
push
mov
call
push
mov
fwait
push
push
stos
sub
jmp
mov
pop
cmp
das
cmp
xor
jbe
je
jle
push
mov
inc
sub
test
loope
div
imul
xor
dec
adc
aad
cmp
dec
xor
xlat
test
dec
add
jg
sbb
xchg
aam
or
repz
rolb
jg
insl
das
lret
sub
dec
inc
adcl
inc
scas
mov
mov
mov
mov
sbb
push
pop
decb
or
and
or
dec
push
sbb
jae
or
sub
cmp
lods
sbbl
data16
push
rcll
adc
push
pop
outsb
pushl
popa
in
pop
inc
dec
sbb
adc
sub
adc
inc
xor
xchg
mov
lea
push
mov
jecxz
sbb
imul
test
xlat
outsb
jnp
jno
and
push
jg
add
push
outsl
ret
les
push
scas
sti
or
sti
mov
jecxz
or
inc
and
scas
or
sub
push
pop
mov
mov
add
push
pop
xor
rcrb
aad
stos
lods
sbbl
push
mov
cmp
rcl
pop
mov
mov
pop
andb
mov
fcoms
insl
ja
lods
push
and
fwait
into
and
jns
incl
add
add
outsl
push
push
pop
xor
and
xor
cmp
insb
xorl
xor
mov
dec
mov
or
pop
sbb
xchg
sbb
push
js
mov
js
push
push
adc
call
inc
stos
xlat
addr16
mov
dec
loope
sti
fstpl
jns
xor
js
fistl
mov
sub
push
adc
ret
or
les
mov
data16
dec
pushf
xchg
dec
nop
faddl
test
or
adc
in
mov
sub
adc
push
aas
fwait
xor
out
mov
mov
pushl
jg
les
int
test
incb
in
inc
test
aam
decl
loopne
pusha
mov
xchg
and
std
arpl
mov
cwtl
pop
repz
xchg
mov
sbb
mov
sbb
and
pop
lods
das
je
orl
jne
jne
xor
dec
imul
dec
mov
out
sbb
lods
stc
adc
faddl
test
adc
loopne
mov
add
testl
ss
movsl
mov
or
sbb
xor
cld
out
loopne
outsb
and
xor
arpl
pop
fnsave
fidivrs
and
lods
mov
jmp
sbb
cs
jge
sti
mov
mov
fwait
bound
mov
sub
loopne
adc
mov
push
fdivrp
pop
sbb
add
rcr
cmp
dec
das
mov
jae
cmp
jl
sbb
fdivp
sub
outsb
and
jp
sbb
std
add
outsb
push
mov
ja
push
fsubl
and
cmp
mov
stc
insl
shrb
push
xor
movl
pop
fs
mov
jnp
rorb
sub
jmp
adc
or
sbb
cmp
lock
push
add
push
inc
scas
push
rorb
mov
adc
ja
push
adc
arpl
add
pop
add
adcl
clc
addr16
mov
dec
aaa
sub
inc
test
arpl
cld
xor
mov
push
xor
cs
sbb
outsl
icebp
mov
jbe
inc
mov
scas
adc
out
testl
mulb
ret
clc
movsb
or
outsb
std
sub
adc
dec
insb
in
and
shrb
adc
pop
popa
push
xchg
push
push
js
adc
aas
lods
inc
mov
insl
xchg
repz
sub
das
hlt
fucomi
push
jb
cmp
push
lock
fidivrs
inc
cli
mov
mov
mov
mov
dec
add
mov
inc
jne
pop
cs
adc
jmp
pop
add
clc
sbb
push
nop
mov
testl
inc
mov
in
pop
fldenv
or
adc
in
xchg
cmp
mov
rcl
mov
daa
fcmovnb
add
out
aaa
pop
dec
push
repnz
lahf
repnz
aaa
mov
arpl
stos
pop
sub
mov
pop
out
scas
xor
incl
sbb
fnstenv
xchg
xchg
loope
loopne
inc
scas
jle
push
push
sbb
pop
fcmovbe
out
fsubrp
inc
push
rcrl
out
shlb
inc
jbe
xor
es
xchg
xor
enter
addr16
sbb
xor
out
test
xchg
push
sti
arpl
or
adc
dec
jae
sub
adc
mov
mov
hlt
lcall
out
cmc
mov
push
insl
arpl
dec
pop
push
notl
adc
sub
pop
jns
movsl
sbb
push
loopne
inc
mov
ja
ss
jae
xchg
cld
add
add
xor
adc
cmpsb
pop
xor
jo
or
xlat
cmp
mov
dec
pusha
push
jae
jle
fldenv
push
add
and
push
jno
leave
in
pop
add
push
aas
clc
or
loopne
and
or
ret
add
in
lcall
out
dec
jno
push
dec
add
mov
cmpsb
imul
or
and
clc
pop
inc
add
adc
push
mov
push
add
arpl
call
mov
inc
scas
lea
sub
adc
aas
adc
xchg
dec
pop
mov
xor
stos
push
fsubr
lock
les
movsl
inc
mov
xor
push
icebp
adc
mov
subb
fs
cmp
fildl
fnstenv
pop
and
shr
push
mov
cmpsb
rolb
sub
cli
push
bound
inc
cmpsl
push
aaa
sbb
loope
dec
xchg
lcall
decl
movsb
lds
or
nop
jp
push
dec
ror
inc
pop
test
test
push
cli
mov
into
dec
pop
ss
cs
mov
push
in
leave
sub
xchg
push
adc
les
cmc
adc
cld
ja
loopne
daa
pop
sbb
stos
push
and
arpl
add
leave
rorb
aad
or
dec
adc
stos
jge
das
mov
jb
or
add
adc
pop
fidivrl
dec
popf
adc
push
imul
push
inc
xor
xchg
add
sbb
add
jg
adc
jmp
fmuls
sub
push
stc
rcll
out
push
ja
sub
mov
push
add
lock
add
mov
sbb
sub
nop
push
jbe
loop
mov
jne
in
leave
rclb
stos
sbb
adc
xor
cmp
sbb
cli
jbe
jo
add
inc
inc
arpl
xor
inc
xlat
popa
inc
add
xlat
aas
addl
inc
xchg
push
pop
pop
mov
pop
dec
outsl
inc
clc
xor
jno
sub
dec
daa
xor
js
insl
fmul
xor
jg
pop
dec
xor
dec
mov
nop
mov
mov
adc
sub
in
insl
iret
pop
push
jb
inc
push
pop
jg
scas
ja
or
lahf
pop
sbb
stos
jnp
mov
pop
fmul
pop
or
cltd
sbb
sub
dec
ficoms
sub
lods
jl
insb
pop
xchg
loope
jg
std
das
enter
pop
add
movsl
adc
test
sub
jbe
push
jae
mov
inc
subb
mov
in
mov
pop
cmp
sbb
sbb
xchg
mov
das
jnp
sar
dec
ret
pop
add
xchg
cmp
stc
insl
mov
inc
repz
hlt
mov
cltd
add
lods
sbb
test
test
shrl
test
xchg
fidivl
xor
xchg
aad
mov
sbb
test
pop
in
add
rol
popf
xchg
mov
sahf
outsb
les
jo
cmp
enter
clc
loope
mov
aad
fldl
inc
jno
xor
test
aas
lea
push
inc
mov
dec
xor
jg
js
loop
xor
popf
cli
fimull
pop
lea
jle
mov
mov
out
mov
add
mov
out
clc
push
jg
in
xor
std
cmp
in
pop
pop
mov
sbb
cmpsl
mov
add
cmp
sar
outsl
mov
dec
repnz
dec
pop
sbb
adc
or
jmp
std
push
jmp
sbb
scas
add
sub
push
cli
mov
sub
push
shl
xlat
add
push
adc
cs
xlat
push
jo
cmp
lods
push
addl
roll
test
lock
loopne
sub
das
push
shrb
inc
mov
imul
dec
mov
pop
fdivrs
pop
push
cmpsl
pushf
aad
adc
xchg
aam
outsl
ljmp
jb
ljmp
arpl
clc
not
adc
sbb
push
mov
xchg
jmp
movsl
loopne
iret
ret
xor
xor
mov
insl
int
addl
mov
fidivrs
add
les
xchg
test
push
call
adc
push
add
das
pop
cmpsb
push
loop
add
rorb
pop
and
in
pop
js
jbe
pop
fmull
or
outsl
cld
mov
movsb
ds
add
pop
test
mov
outsl
xor
pop
dec
les
or
adc
sahf
or
inc
add
pop
push
andb
cwtl
pop
pop
shrl
push
jg
jmp
fstpl
cmp
sub
decb
repnz
xchg
add
int
dec
adc
sbb
rorb
pop
decl
dec
adc
sti
xchg
movsb
lds
jecxz
pop
dec
movsb
lds
insb
lods
movd
incl
int
push
xor
scas
add
adc
testb
add
or
cmp
mov
jecxz
mov
lcall
mov
adc
or
inc
jo
dec
push
jecxz
outsl
aas
inc
inc
inc
sbb
in
or
leave
xchg
in
aam
jb
fildl
push
pop
push
movb
movsl
sub
pushf
andb
add
das
jge
pop
insb
push
dec
cmp
mov
xor
dec
fcmovnb
addr16
jmp
ret
or
xchg
aas
xchg
imul
mov
clc
loop
fildl
call
mov
xchg
push
gs
sahf
fs
cld
sbb
daa
insb
push
adc
cmp
mov
sub
inc
in
mov
push
scas
add
sub
cli
sub
cmp
xor
add
xchg
das
jb
call
lea
mov
inc
mov
stos
rcll
shr
enter
add
push
dec
add
idivb
jno
pushf
lret
cmpsl
test
push
test
in
mov
addb
push
loop
add
xor
cmpsl
mov
adc
mov
push
xchg
je
lret
push
add
dec
ljmp
adc
fiadds
and
les
xor
sahf
das
pop
pop
shlb
loopne
sub
in
inc
pop
xor
outsl
int3
gs
shlb
cld
jl
fadds
inc
mov
and
aaa
sbbb
enter
fwait
sbb
cmpsb
fldenv
ret
clc
test
mov
dec
loopne
sbb
or
sub
dec
bnd
data16
pop
les
addr16
lahf
or
push
xchg
jae
jp
aad
add
push
sbb
jecxz
pop
pop
jae
pop
and
cmc
lahf
fwait
cli
in
xchg
and
push
repnz
cmp
mov
and
push
rol
in
add
insb
test
daa
or
sbb
xchg
outsl
mov
inc
lcall
or
push
outsl
icebp
outsl
push
add
dec
mov
ljmp
xor
inc
add
lret
mov
mov
mov
pusha
push
push
push
push
movsb
mov
and
addb
cmp
arpl
popf
jo
pop
incl
and
leave
cmp
jno
cltd
push
mov
add
ret
jae
xchg
lods
xchg
mov
and
or
inc
pop
in
adc
call
cltd
inc
dec
add
inc
push
sbb
inc
and
repz
mov
lods
xor
mov
and
imul
out
cld
fcomip
mov
cld
add
aaa
loopne
xor
pop
dec
roll
cmc
pop
sub
mov
outsl
mov
inc
int3
add
xchg
or
test
jns
int
lock
mov
or
pusha
sbb
jo
mov
out
lret
push
leave
mov
and
cmp
stos
jbe
out
js
pushf
sarb
jmp
aas
into
fidivl
cld
call
cld
fisubrl
mov
clc
sahf
dec
mov
jg
lea
aam
xchg
mov
or
ljmp
xor
in
or
xchg
les
push
adc
sbb
dec
cmp
fdiv
mov
fnstcw
mov
push
pop
lea
pop
outsb
hlt
sbb
popl
adc
jns
cmp
ret
enter
les
enter
push
cld
dec
cld
sub
and
data16
sub
or
rcll
xor
inc
sub
dec
mov
fidivrl
jl
add
sbbb
dec
cmc
pop
cmp
push
dec
jb
test
push
es
gs
js
dec
clc
addr16
cmp
mov
cwtl
popf
push
cltd
out
insl
lods
fcompl
fnop
das
mov
je
dec
fsubs
scas
shll
mov
xlat
movsl
cli
fisttpll
js
xor
and
test
ds
and
scas
xor
mov
adc
jo
push
insl
sbb
dec
xorl
jge
js
xchg
xchg
sub
xchg
int
repnz
jo
mov
push
orl
loope
mov
lock
fucom
add
push
jg
xor
and
orl
pop
sub
sub
mov
add
pusha
addr16
adc
shl
cmc
out
pop
and
add
mov
pusha
add
push
inc
test
aad
popa
out
testl
aad
mov
ljmp
in
xchg
ss
mov
fs
dec
dec
mov
jo
icebp
sbb
sub
xor
das
std
cltd
fstpl
add
pop
adc
sub
ret
ret
rcll
jmp
movsb
push
xchg
test
hlt
pop
fsts
gs
jns
push
pop
lret
clc
aam
dec
push
mov
lahf
inc
push
xor
arpl
stos
insb
push
popf
std
incl
scas
rcrb
bound
inc
insb
mov
sbb
mov
xor
dec
and
or
adc
inc
ja
stc
xor
push
jmp
pop
adc
test
pop
mov
or
test
xchg
or
incl
add
ret
addr16
push
adc
push
inc
jmp
aaa
loope
incb
mov
lret
out
mov
jns
lods
and
push
jecxz
lret
push
push
or
cwtl
lods
or
ss
mov
jnp
jno
dec
sub
add
mov
iret
movsl
pop
mov
test
ljmp
mov
adc
icebp
jp
repz
push
leave
pusha
or
and
je
jo
jmp
fistps
shlb
mov
or
add
test
xchg
sahf
or
clc
mov
jns
int3
dec
loop
jno
xor
xchg
pop
call
jecxz
push
aaa
xor
loope
out
shl
push
movsl
sbb
and
aam
jecxz
rorl
mov
dec
out
mov
decl
std
fbstp
mov
cmp
or
popf
stos
and
outsb
sbb
cmp
jae
decl
xchg
cmpl
scas
push
xchg
pushf
scas
add
mov
dec
jbe
jl,pt
aas
adc
push
dec
inc
add
and
jbe
xor
add
lea
mov
scas
or
testb
add
or
push
and
xchg
push
test
sbb
xor
aad
jnp
push
movsl
out
ljmp
stos
mov
je
jo
pushl
push
int3
sbb
push
shl
pop
shll
pop
xchg
add
mov
mov
loopne
dec
enter
push
mov
mov
lea
push
cmpsb
jno
test
inc
jno
lock
stos
fnstenv
and
orb
lret
push
cmp
insl
and
ljmp
xchg
xor
dec
pop
lock
out
nop
lock
jge
jne
mov
add
lcall
pop
movsb
or
xor
out
mov
mov
jp
jae
inc
jmp
ljmp
lahf
xchg
push
jecxz
xor
rcr
mov
lret
inc
popa
mov
outsl
xchg
jo
stc
push
notl
xchg
inc
in
jg
lock
add
rcrb
je
mov
jae
into
lods
ret
xor
scas
pop
test
push
mov
jne
insl
sbb
adc
mov
scas
mov
js
push
mov
dec
lock
pop
xchg
inc
inc
push
rolb
pop
int
shll
adc
pop
dec
subb
dec
fs
push
push
dec
push
inc
mov
add
adc
sub
xor
stc
nop
test
sbb
or
shrb
pop
pop
push
or
mov
pop
js
dec
fs
cmpsl
sub
inc
jno
lcall
gs
push
punpcklwd
mov
xchg
sti
inc
decl
push
call
paddd
adc
imul
pop
incb
cmpsb
sub
adc
clc
mov
and
sbb
jl
mov
inc
xchg
int3
jg
jmp
adc
pop
inc
and
loop
sub
imul
add
pop
daa
adc
mov
jo
xchg
into
lods
add
mov
popa
sbbb
xchg
mov
pop
xor
push
mov
dec
lret
out
push
lcall
into
fdivr
adc
inc
and
pop
test
daa
popa
in
lods
aaa
aad
jecxz
xlat
push
pop
or
and
flds
daa
mov
add
push
cltd
in
mov
jno
sub
mov
cld
push
ja
insb
test
push
mov
gs
xchg
and
sbb
adc
push
cmc
mov
imul
mov
outsl
aas
dec
inc
mov
xor
pop
pusha
nop
or
je
cwtl
or
insb
pop
faddl
test
mov
jbe
jmp
fcmovnb
fs
xor
push
mov
std
xchg
enter
fidivl
jbe
insl
loope
daa
xchg
dec
cwtl
adc
bnd
rolb
in
add
xchg
jl
popa
insb
jge
rcrl
lods
dec
sbb
mov
inc
mov
in
incl
ret
pop
jb
adc
call
je
test
popa
push
and
adc
sbb
sub
jle
stc
cs
mov
les
gs
dec
fs
std
mov
imul
and
sub
lods
xchg
test
sbbb
subb
inc
fs
inc
cld
aaa
mov
inc
xchg
mov
call
inc
fxam
shll
cmp
mov
js
loop
js
adc
adc
hlt
popf
push
nop
iret
ret
callw
cltd
pop
call
pop
push
jno
cmc
xchg
mov
scas
sarl
sbb
ss
adc
and
add
jmp
sub
inc
mov
mov
xchg
jecxz
mov
das
xchg
cmpsl
push
stos
xchg
add
idivb
std
popf
shrd
daa
scas
dec
add
jecxz
dec
out
adc
test
xchg
sub
and
cmp
lock
and
xor
das
jmp
sub
adc
mov
add
jg
fwait
sub
add
push
lea
adc
adc
popa
sbb
dec
xchg
mov
inc
lock
imul
dec
ret
loopne
scas
sub
xchg
lret
jae
push
cs
xor
cld
inc
jae
in
addr16
xor
dec
pshufw
mov
cmpsb
push
cli
cmp
and
js
adcl
jmp
sbb
in
test
pop
dec
outsb
cmp
xor
lcall
mov
cwtl
mov
scas
sbbb
mov
add
out
or
inc
gs
lods
movsl
sbb
nop
cwtl
int3
jb
js
jg
mov
fiaddl
xchg
xchg
iret
dec
inc
mov
cmp
js
in
cmp
lea
sarb
out
adc
jno
mov
mov
nop
out
cmc
pop
aaa
mov
push
mov
xor
xchg
test
fldl2e
xchg
mov
sub
or
js
jns
cmpb
xor
cli
aam
insb
roll
aaa
mov
inc
jbe
push
push
pop
ja
push
inc
test
or
loope
add
repnz
jg
cmp
push
rcll
xchg
and
mov
lret
scas
jg
mov
inc
add
sbb
adc
lods
pop
adc
xchg
push
cwtl
push
mov
push
adc
sub
fsubrl
add
into
add
sbb
inc
cmpsl
rcl
je
and
jecxz
roll
sbb
xchg
test
sbb
sbb
inc
ja
rcll
out
mov
adc
das
add
mov
xor
mov
sbb
aam
les
add
inc
in
ljmp
mov
clc
fwait
add
mov
dec
lret
leave
push
scas
cli
das
mov
popf
and
gs
adc
pop
frstpm(287
divb
icebp
iret
pop
or
lea
imul
pop
jge
mov
or
adc
ljmp
sarb
xor
in
fistpll
or
icebp
gs
cmp
ss
pusha
into
popf
xor
pushf
mov
pop
jecxz
add
icebp
ret
ja
mov
mov
dec
sti
and
ret
mov
pop
outsl
loopne
xor
into
dec
jmp
rcrl
jnp
fldl
mov
lds
xchg
or
ss
imul
es
lea
dec
xor
cli
nop
mov
or
cs
jbe
mov
jl
sbb
mov
pop
leave
insb
dec
icebp
jg
fists
jns
mov
mov
pop
fdivrs
mov
fisttpll
pop
mov
mov
dec
add
cltd
out
adc
jae
mov
mov
das
pop
dec
and
test
xchg
mov
push
movsb
cltd
mov
mov
fwait
xor
bound
mov
and
imul
outsb
cmp
enter
enter
bound
ret
aam
outsl
push
xchg
jne
sbb
or
add
or
flds
test
js
cmpsl
adc
leave
repz
xor
adc
inc
subl
add
dec
popf
in
mov
adc
es
push
xor
ja
arpl
push
mov
ds
addr16
out
testb
mov
mov
movsb
popf
ret
mov
cmp
ljmp
daa
mov
je
xchg
mov
mov
mov
and
subb
add
lea
data16
mov
adc
pop
insl
push
rcrb
clc
shlb
xor
dec
add
imul
lret
inc
cwtl
xor
insl
std
les
lds
scas
in
dec
repz
pop
rcl
mov
testl
ljmp
fcompl
out
xor
xor
inc
lods
or
sbb
lock
ljmp
and
add
push
mov
xchg
or
add
and
mov
mov
xor
fstpt
repz
movhps
into
or
dec
out
sarb
in
lea
mov
cmp
pop
cmpsl
push
sub
pop
mov
shlb
push
push
pusha
fidivrl
add
movsb
arpl
cmc
add
jb
movsb
fwait
sub
mov
insl
loop
outsb
pop
test
or
insl
jmp
cmp
dec
push
fs
xchg
loope
rcr
fwait
or
adc
scas
pushl
outsb
nop
fiadds
cmpb
add
mov
mov
or
xlat
mov
mov
mov
test
addl
leave
or
fstpl
shrl
loope
push
lods
mov
inc
jnp
ljmp
or
je
pop
cmpsb
jne
ja
negb
insb
xchg
sbb
popa
les
jo
out
cld
pop
int
dec
pop
pop
das
mov
push
or
push
mov
fwait
jle
testb
fcoml
jb
pop
sbb
sub
sbb
loope
mov
sbb
lods
loope
add
adc
loop
or
pop
push
shlb
das
jecxz
jg
shrb
add
imul
idivl
dec
fwait
mov
std
sub
shrb
mov
repz
rol
andb
sbb
xor
pop
movsb
push
jnp
cmp
lods
push
movsl
mov
imul
jg
and
fdivrp
and
sub
mov
fistpll
mov
inc
nop
sbb
repnz
mov
jmp
mov
inc
inc
adc
pop
pop
mov
inc
sarl
stos
sbb
push
daa
lcall
aad
idivl
lock
push
lret
mov
sbb
inc
push
loopne
sbb
adc
loope
inc
test
out
lock
insb
cmp
pusha
or
scas
inc
negl
call
xchg
jb
enter
dec
mov
pop
xor
jmp
dec
addr16
mov
imul
incl
fs
dec
push
movsb
pop
push
cld
jnp
outsb
inc
loopne
mov
inc
mov
sbb
mov
mov
jl
jb
rorb
xlat
jmp
fistl
add
inc
arpl
out
fs
shll
lock
mov
jp
xchg
xor
add
stc
aad
cwtl
adc
clc
add
sti
inc
xchg
sub
in
mov
sti
cmp
sub
mov
insl
push
mov
push
test
es
push
mov
aad
or
cmpsl
mov
cmp
mov
jb
aad
in
popa
mov
sub
sub
mov
add
mov
add
inc
adc
stos
pop
sub
xor
jo
mov
cltd
fcomip
in
xorl
test
insl
pop
sub
subl
sbb
xor
outsb
cmpsb
ds
jno
notb
add
neg
es
mov
pop
rcrb
jae
in
dec
cmp
adc
inc
in
ret
dec
out
pop
xor
not
add
idivl
xor
ja
mov
push
scas
dec
push
addl
inc
clc
je
push
rorl
xchg
dec
enter
testl
sbb
push
imul
push
sti
clc
add
inc
sub
filds
testl
jmp
es
inc
imulb
loopne
pop
push
jb
imul
call
push
and
pushl
inc
push
cmc
subl
scas
sub
loopne
xor
test
arpl
js
fs
pop
jbe
cmp
jg
and
and
adc
or
ror
ja
sub
mov
xor
push
push
sbb
lret
test
out
loop
shrb
xchg
sub
gs
int
adc
xor
sub
xchg
fidivs
inc
push
jae
cmp
aas
sub
and
ja
jmp
mov
mov
test
cmp
loopne
stc
aad
sbb
adc
sbb
xor
add
hlt
and
adc
sti
sbb
fsubrp
daa
stc
jbe
lea
insb
data16
rcll
cli
fildll
cwtl
cmc
cmp
sar
mov
mov
push
not
in
jl
and
push
lods
test
xor
xlat
ds
adc
mov
push
mov
inc
mov
pop
ja
add
inc
bound
leave
stc
push
adc
xchg
pop
cmp
push
mov
ja
add
pop
clc
inc
popa
orl
fldl
xor
inc
ss
filds
lret
add
idivl
inc
insb
imul
lret
jmp
push
and
popf
mov
or
test
jne
decl
cmp
pop
js
lds
cli
push
sbb
sub
adc
fcmovnb
jecxz
fistpll
mov
ret
shll
cmp
mov
insl
add
mov
mov
xor
decl
jg
inc
jnp
mov
adcb
iret
sti
in
and
pop
mov
fisubs
push
adc
or
adc
popf
js
jg
xchg
les
pushf
mov
sub
in
addl
ljmp
jg
inc
std
dec
and
lods
jmp
cs
pop
bound
jg
pop
mov
pop
or
inc
xor
loope
dec
cwtl
sbb
cmc
push
lret
push
lods
out
cmpsb
pop
jmp
fwait
sar
fnstsw
push
cmp
or
push
out
adc
lea
incl
movsl
lret
leave
jns
mov
sbb
ljmp
lock
inc
test
add
sbb
jne
or
xor
or
ret
cmp
movsb
fsubp
ljmp
xchg
dec
shrl
push
addb
orb
das
cld
jecxz
or
lds
add
dec
jnp
mov
pop
mov
inc
movsb
and
adcl
loopne
outsb
iret
inc
leave
data16
addr16
notl
mov
or
movsb
mov
ljmp
or
shlb
add
test
lock
push
push
imul
dec
or
and
mov
fisubrs
inc
imul
sub
mov
fidivrs
xor
xchg
mov
push
inc
mov
dec
mov
push
dec
imul
mov
mov
inc
dec
or
add
jge
lods
fstl
loope
cmp
dec
dec
inc
insb
adc
inc
mov
roll
inc
in
lock
jns
push
dec
nop
test
adc
jne
inc
xor
xchg
push
leave
cmp
pop
adc
and
fmuls
pop
rolb
sub
mov
inc
cmp
dec
popa
pop
rcl
pop
mov
test
adc
and
dec
adc
out
jns
jbe
sbb
add
xor
xorl
in
pop
push
insb
jno
push
pop
pop
addb
mov
add
pcmpgtd
test
decl
add
dec
sbb
mov
inc
dec
sub
stos
daa
xor
mov
popa
dec
xor
fidivrl
imul
dec
js
dec
decl
mov
arpl
shrb
cli
pop
iret
or
icebp
lds
mov
jp
lds
cmp
pop
fidivrs
dec
ja
icebp
mov
cltd
test
daa
lock
stc
xchg
and
aad
jo
mov
ficoml
add
fdivr
sub
rorl
xchg
add
fists
out
mov
or
repnz
sub
dec
jge
mov
jb
iret
cmp
insb
push
mov
pushf
push
mov
loop
cmc
out
push
mov
shrl
aaa
dec
shll
jbe
scas
scas
inc
enter
jmp
sbb
add
lods
inc
pop
ret
mov
int
int3
clc
dec
sar
mov
dec
jmp
lret
movsb
lcall
xor
mov
xor
pop
into
add
jl
mov
fistl
adc
jmp
ljmp
fldl
add
loop
rcr
lds
jns
clc
outsb
test
or
mov
xor
inc
mov
dec
imul
outsb
sub
inc
pusha
jmp
inc
xchg
ja
pop
popf
or
add
sub
push
sub
mov
dec
xchg
lock
clc
mov
sbb
mov
nop
adc
push
ret
pop
or
inc
imul
sahf
roll
jecxz
mov
scas
pushl
mov
push
mov
adc
ffree
imul
mov
negb
xchg
or
mov
inc
sub
mov
pop
andb
dec
daa
xor
lcall
add
insb
sbb
sahf
stos
push
adc
or
and
mov
ss
out
lea
ds
lahf
adc
add
jl
mov
addr16
sbb
rcrl
xor
add
test
mov
pop
mov
mov
inc
insb
mov
andl
mov
xchg
daa
sub
icebp
fbstp
push
rol
mov
lret
inc
stos
adc
pop
mov
xchg
call
sub
lea
jnp
sub
jp
rcll
and
cmp
adc
and
mov
mov
aam
insb
xor
xor
mov
push
mov
cmpsl
pusha
mov
sub
mov
scas
inc
stos
std
movsl
sbb
pop
loop
ss
add
sahf
jmp
es
push
stos
ret
test
and
jp
xchg
mov
cmc
sbb
add
mov
mov
imul
movsl
out
jg
sbb
pusha
sub
cmp
fisubrs
or
fisubrl
mov
push
out
push
filds
add
sbb
test
mov
mov
outsb
arpl
shll
js
or
pusha
ret
lock
dec
push
add
sub
add
mov
add
xor
jg
and
add
inc
jp
jge
pop
mov
xchg
sub
sub
stos
jge
in
fldcw
sbb
cmp
jecxz
pusha
cmp
in
jl
adc
jmp
xor
lods
data16
push
das
push
jns
test
out
pop
push
inc
inc
pop
lret
mov
scas
cli
hlt
inc
imul
lods
test
imul
add
sub
and
mov
enter
xchg
outsb
mov
fcmovu
mov
push
push
or
outsl
das
adc
dec
nop
jle
mov
mov
or
mov
mov
dec
mov
mov
xor
sub
loope
nop
mov
sbbl
lock
ljmp
xchg
jns
add
jmp
ret
inc
jns
push
sbb
cltd
mov
mov
and
inc
and
aaa
lods
pop
pop
fbld
jns
xor
in
dec
insl
icebp
and
addr16
lods
mov
rorb
inc
jno
ficoml
loopne
in
push
insb
inc
xorl
and
pop
xchg
mov
or
decl
xor
and
xor
mov
hlt
incl
out
iret
js
push
mov
or
clc
negb
lret
ret
add
ljmp
mov
rol
and
push
dec
mov
sbb
mov
xchg
xchg
push
icebp
rorb
mov
push
fisttps
mov
fs
jnp
fdiv
xchg
movsl
pop
outsb
cmp
add
xor
rcl
enter
lahf
insl
nop
jg
pop
cli
sbb
inc
repnz
into
dec
fs
or
dec
cmpsl
hlt
add
adc
ss
ret
mov
add
mov
adc
insl
incl
mov
pusha
mov
push
in
jmp
out
jp
pop
lret
xor
popf
es
pop
leave
inc
inc
ret
and
mov
lock
int
out
push
and
ljmp
loopne
or
cli
enter
dec
add
adc
aad
ftst
icebp
pop
addb
push
jmp
subb
add
cli
dec
cld
sbb
inc
out
bound
cmp
mov
les
or
incl
sbb
mov
jo
das
jo
adc
adc
icebp
sub
push
xchg
cmovns
dec
shrl
ss
fcmovu
adc
xor
dec
sub
inc
fistpll
and
xor
xor
pop
stos
sub
fs
sti
dec
leave
xchg
jns
stos
xchg
xchg
iret
sbb
scas
xor
pop
leave
lds
adc
jle
pop
mov
pushl
bound
mov
xchg
enter
fadds
xchg
lret
push
fs
incl
jge
test
add
shl
sbb
addb
je
mov
inc
add
inc
scas
ljmp
jmp
push
lcall
repnz
adc
mov
test
lea
or
add
aas
pop
push
mov
mov
movsl
movsl
lret
jo
push
inc
out
in
add
adc
or
cli
and
mov
stos
pushf
mov
inc
dec
and
inc
incb
jle
xchg
gs
mov
xor
sub
rorb
lahf
mov
insl
jo
mov
inc
add
jne
sub
gs
cmp
ds
adc
push
mov
movsb
jp
ljmp
loop
jb
jle
mov
dec
pop
es
pop
adc
add
roll
mov
xor
iret
mov
outsl
bswap
adc
std
decl
or
loopne
movsl
xchg
test
rol
mov
lcall
mov
mov
cli
mov
cs
popf
sub
incl
xchg
push
xchg
mov
pop
hlt
in
add
jg
jg
cmp
pop
adcl
je
cs
incb
mov
cmpsl
in
cmp
mov
or
decl
jno
mov
jbe
out
loope
mov
add
add
xchg
jp
lods
push
fcmovne
testl
jle
je
adc
je
inc
sub
int
jecxz
test
add
jno
mov
push
jg
inc
outsb
popa
cmp
adc
call
ret
stos
sub
xor
mov
lret
mov
insl
cmp
negl
xchg
sub
adc
aaa
js
js
imul
xchg
jb
adc
or
loop
cmc
out
leave
xor
dec
and
test
xor
lea
pop
cmpsb
mov
pop
and
stc
clc
push
rcrl
inc
and
add
sbb
fistps
loope
dec
jg
rcl
mov
fbstp
enter
and
pop
fbld
aam
fwait
test
mov
fiaddl
hlt
ja
adc
aam
cs
dec
test
add
in
mov
pop
xlat
add
sar
cmp
addr16
mov
mov
shlb
movsl
xor
das
incl
sbb
sub
lret
push
addb
sub
jp
fisttpl
adc
mov
dec
push
js
lods
fbld
outsl
mov
insb
push
or
mov
push
push
inc
js
mov
jmp
dec
jmp
nop
cmpl
ljmp
push
jb
push
shll
popa
inc
push
in
pop
hlt
test
hlt
js
mov
pop
rcr
jne
outsl
inc
vhaddpd
push
pop
sbb
push
cmp
hlt
sbb
lret
popa
adc
mov
push
pavgb
cltd
aas
pop
push
int
sub
sbb
movups
inc
mov
and
out
or
fisubl
sbb
icebp
push
or
sbb
mov
inc
sarl
or
and
mov
add
test
mov
xchg
shll
mov
hlt
popf
fistpl
add
add
pusha
filds
or
cwtl
and
and
push
mov
mov
movsl
shlb
fnstcw
aam
cmpsl
loop
enter
stos
mov
push
mov
mov
mov
das
xchg
daa
int3
pop
mov
jl
inc
aaa
aad
jbe
add
and
mov
repnz
aas
ficompl
aaa
cmp
ljmp
xchg
call
cltd
adc
xchg
add
insl
mov
or
scas
or
rcrb
pop
popa
mov
push
pusha
xchg
lock
pop
popa
jecxz
jo
lock
or
mov
jg
mov
insl
inc
sub
dec
push
cmp
outsb
adcb
lock
mov
mov
mov
fadd
in
lea
fsts
pop
cs
sbb
aaa
xor
test
push
shlb
xchg
iret
add
fbstp
add
cs
and
xchg
shll
cli
jl
in
ficoml
mov
mov
cmp
lock
loop
dec
or
int3
xchg
sbb
mov
scas
sbb
cmp
jg
lahf
xchg
loope
shll
aaa
mov
pop
sbb
dec
test
xor
jns
iret
or
test
xchg
sbb
dec
mov
mov
in
fdivrl
xor
popf
mov
mov
cmp
cmpsl
ret
or
dec
add
lcall
out
and
scas
push
addb
adc
scas
fistl
fcompl
pop
mov
shrd
fidivs
outsl
popf
pop
pusha
jnp
xor
in
decl
pushf
add
fdivl
sahf
dec
mov
dec
xor
in
scas
in
test
icebp
pop
aam
in
jbe
push
push
mov
push
lock
xor
or
into
mov
call
and
loopne
cmp
cmp
fmuls
add
test
mov
dec
push
xor
xchg
pop
pushf
js
std
fistl
mov
jae
push
jbe
lcall
cmpsl
adc
rorl
test
mov
or
inc
mov
cmp
or
gs
push
jbe
sub
sub
fistps
inc
in
fstp
jg
mov
add
fs
icebp
aaa
cld
daa
lret
addb
jp
in
mov
jle
daa
sbb
and
sti
or
xorb
inc
sub
push
mov
xor
adc
xchg
cmp
mov
repz
add
in
sqrtps
mov
jmp
jp
stc
decb
aaa
inc
pop
mov
mov
cs
cmp
add
arpl
push
jne
adc
lods
cwtl
dec
es
or
popf
mov
mov
das
add
fs
dec
dec
jg
fdivrs
sahf
mov
shl
test
das
addl
insb
stos
mov
add
cmp
jb
sbb
and
sbb
loop
sub
or
pop
xchg
lock
adc
idivb
add
xchg
pop
jg
xchg
mov
adc
cmp
clc
popa
leave
cmpsb
adc
cwtl
nop
ljmp
pop
inc
das
daa
les
jmp
jmp
pushf
cmp
sub
icebp
push
pushf
test
int3
cld
pop
add
in
mov
dec
jg
dec
insl
ss
insb
loopne
iret
cs
cli
push
lock
add
pushl
iret
mov
inc
repnz
and
mov
xor
and
test
popa
mov
popa
add
and
adc
ret
xchg
fiadds
adc
mov
inc
int
dec
cld
stos
cmc
adcl
jge
xlat
movsl
pop
loopne
add
inc
or
ret
pop
inc
inc
ret
mov
pushf
dec
dec
sbb
roll
xchg
adc
jbe
or
cmp
dec
jno
test
stos
push
mov
fisttpl
xor
pop
clc
out
jbe
push
mov
jnp
pop
subb
enter
dec
movsl
push
ljmp
sbb
and
inc
or
adcb
and
fcmovu
push
add
repnz
fmull
pop
insb
aaa
xchg
xchg
popf
adc
shll
insb
leave
push
je
aaa
int
divb
pop
loope
jnp
cmp
paddusb
in
outsl
out
push
pop
mov
jne
add
adc
inc
js
mov
push
jge
xlat
xchg
outsb
sbb
adc
fisttpl
inc
arpl
and
push
or
test
pop
mull
hlt
cld
xchg
cld
call
dec
mov
dec
insl
popa
inc
dec
mov
dec
cmpsw
push
insl
psubw
cmp
and
push
scas
lea
sbb
pop
adc
rcrb
cmpsb
lret
lock
jl
scas
pop
pop
aas
push
or
mov
call
lds
addb
or
fbstp
mov
clc
movl
xchg
adc
aam
sbb
shrb
sarl
ja
stc
test
jbe
lahf
stos
push
enter
add
inc
pop
adc
insl
pcmpgtb
add
repz
jle
or
push
lret
test
add
lds
sub
push
dec
ljmp
int3
js
pop
mov
mov
sbb
repnz
imul
cli
or
int
int
pop
pop
daa
or
xchg
decl
dec
sbb
adc
mov
loop
xchg
sbb
ret
inc
andl
add
push
fnstcw
inc
shlb
je
sub
fucomp
and
push
adc
dec
dec
sbb
jle
and
push
push
sbbl
and
std
insl
push
mov
dec
popa
cmp
fsub
pop
rorb
in
ja
cmp
jno
cmc
pop
repnz
mov
jo
lock
ds
mov
xor
fdivs
aas
pushf
fisubrs
pusha
sbb
fwait
lcall
clc
jne
push
pushf
andb
fnsave
aas
loop
add
into
mov
push
xchg
rcll
inc
cmpsb
in
pop
xchg
orb
jmp
popf
pop
dec
outsl
fnstcw
mov
push
sbb
pop
cmpsl
mov
adc
sbb
sub
sub
xchg
mov
mov
and
sub
shrl
ljmp
fistl
icebp
pop
hlt
aas
cmp
jno
shrb
inc
mov
xchg
jp
mov
ljmp
fbstp
sub
fsubl
xor
in
mov
xchg
xchg
push
pushf
or
push
cmpsb
xor
sti
jae
paddsw
movq
or
fildll
mov
bound
mov
sub
add
mov
ficompl
cwtl
pushf
push
cmpsl
xchg
xor
xor
aaa
or
add
data16
jb
dec
inc
xor
add
lret
test
dec
mov
loopne
add
fwait
cld
inc
rcl
inc
sbb
cld
pop
xchg
or
call
notl
jne
sub
outsb
jne
adc
push
sub
insb
movsb
cld
fisubrl
push
frstor
test
out
insb
mov
loope
adc
test
ds
mov
inc
push
js
pop
ds
sub
aad
hlt
cmc
icebp
mov
inc
xchg
mov
sbb
adc
jle
mov
gs
arpl
fbld
sbb
cmp
out
mov
inc
or
push
dec
sub
std
daa
sbb
mov
add
mov
xor
adc
fcomps
mov
mov
sarb
shl
jb,pn
push
push
dec
push
inc
in
mov
xlat
testl
inc
in
js
jecxz
fnsave
dec
jle
ss
mov
push
fmulp
jl
jg
pop
scas
bound
incl
dec
int
and
lods
aas
and
ja
sbb
into
outsl
inc
fwait
sub
movsb
add
mov
pop
fdivs
fcoms
push
rol
pop
add
mov
jbe
or
xchg
int3
push
inc
ljmp
je
shrl
les
mov
mov
fs
je
fcoml
push
cwtl
jo
mov
push
jecxz
in
dec
cltd
lock
add
inc
jecxz
sbb
popa
sbb
icebp
xor
dec
mov
std
jno
dec
outsb
lds
fs
ljmp
inc
cltd
rorb
stos
fstpl
pop
jb
inc
pop
mov
pop
add
clc
mov
mov
adc
jnp
push
rolb
fiaddl
call
imul
sub
add
mov
rolb
arpl
inc
push
inc
and
stos
js
or
adc
shlb
mov
cmp
xchg
add
fisubrs
test
imul
shrl
sbb
pop
pop
ss
or
and
jg
pop
outsl
cmp
pop
jbe
mov
jge
mov
outsb
adc
inc
into
mov
outsl
lock
xor
push
xor
push
popf
icebp
mov
add
sbb
pop
decl
aas
add
inc
data16
stos
test
gs
out
sbb
fstpt
sub
sbb
aad
bound
dec
movsb
dec
add
xchg
or
xchg
hlt
pop
push
jg
xchg
mov
mov
and
jp
add
in
add
inc
pushf
pop
sbbb
hlt
pop
ja
lock
push
jle
mov
out
mov
es
mov
mov
jmp
cmpsb
cmp
cli
mov
pop
sbb
push
lcall
pop
jmp
das
or
ds
push
imul
hlt
pop
jbe
pop
push
jae
outsl
push
mov
sub
add
adc
add
xchg
shr
xor
dec
adc
push
jmp
sub
insb
xor
mov
jno
test
cld
add
push
inc
dec
inc
push
cmpsl
adc
mov
mov
filds
cld
ljmp
rorb
roll
jo
fiadds
and
fadds
fdivrs
mov
add
iret
std
xchg
push
and
ret
inc
lock
sbb
jo
sub
push
add
sub
adc
outsb
cmp
mov
bound
addr16
jne
icebp
lods
js
cmp
in
and
dec
or
pop
sbb
in
clc
pop
jle
jmp
lcall
test
mov
test
int3
stos
jg
std
sbb
insb
sub
dec
adc
repnz
pop
jns
outsb
mov
xor
lods
add
clc
fisttpll
push
xchg
ret
fmull
sub
xchg
gs
sbb
sahf
adc
sub
inc
flds
or
loope
or
or
push
insl
ljmp
ljmp
push
push
fdivr
decl
loope
add
aam
cld
stos
hlt
cmpsb
stos
shrl
dec
gs
mov
or
ja
xor
out
pop
outsb
mov
mov
push
addl
pop
lret
xchg
jmp
sarb
mov
gs
inc
sbb
inc
aam
arpl
pop
mov
pop
jbe
sbb
dec
sti
shrb
jnp
iret
andl
fcmovbe
push
xor
pushl
dec
xchg
push
jl
inc
inc
pop
cmp
hlt
mov
shrd
mov
pop
pop
sub
inc
lret
pop
inc
adc
test
sbb
adc
movsb
push
push
jg
or
out
push
fcoms
push
push
pop
inc
push
adc
loopne
mov
mov
sbbb
clc
pop
sub
dec
shrl
aaa
add
xor
mov
roll
pop
mov
add
lock
cmp
sti
iret
fisttpl
jo
jge
aam
adc
xor
jp
in
ret
xchg
es
icebp
mov
pop
lcall
stos
push
jbe
or
sbb
shr
dec
and
mov
lcall
add
cli
mov
inc
xchg
xchg
xlat
dec
repnz
dec
and
in
cwtl
add
dec
sbb
icebp
mov
dec
adc
pop
xor
lods
xor
jns
jns
jl
fstl
imul
add
fdivrp
fimuls
xor
dec
cli
and
shlb
sub
add
push
test
nop
or
imul
xchg
nop
cmpsl
pushf
scas
push
jno
les
dec
xor
dec
mov
inc
mov
dec
add
push
sbb
mov
jbe
in
lock
lock
mov
or
shl
jo
orl
dec
mov
out
xlat
xlat
pop
adc
or
push
loopne
ja
xchg
xor
mov
mov
and
jno
insb
aad
iret
insb
mov
lds
adc
rcll
and
iret
xchg
and
movsl
sbb
adc
mov
sbb
outsl
shll
jb
sub
jp
stc
jmp
and
in
add
rcrb
fdivl
xor
dec
into
add
dec
dec
jge
push
idivb
int
add
inc
roll
inc
into
cwtl
push
rcrl
loope
pusha
cmp
pop
call
mov
in
inc
and
mov
add
ficompl
pop
pushl
xchg
add
das
push
mov
push
pusha
std
cmp
loopne
sti
arpl
fisubrs
popa
push
arpl
adc
jle
fstpt
jmp
pop
jns
jb
jge
push
fiaddl
adc
jp
xchg
shrb
ret
add
mov
popa
xchg
int3
jmp
incb
hlt
or
cwtl
test
les
gs
push
shlb
or
xor
rcl
sbb
pop
cld
and
cwtl
and
or
or
push
sti
add
dec
mov
das
fildll
sbb
jno
lret
data16
adcb
mov
mov
jecxz
xor
scas
inc
pop
cld
dec
sub
xor
and
mov
pop
mov
cmp
stos
xchg
pop
std
xchg
mov
adc
push
out
push
insl
inc
sti
cmc
adcl
outsl
inc
inc
inc
sub
fcoml
ss
aam
pop
jne
push
jle
push
ss
jns
je
push
cli
xchg
mov
insb
movl
mov
js
popa
lea
push
jne
or
mov
sub
mov
movsb
cwtl
bound
sub
filds
shrl
js
mov
clc
inc
push
push
inc
add
cmpsl
mov
pop
cmp
insl
inc
jns
xor
push
push
jns
ljmp
mov
das
in
pusha
cli
jecxz
shlb
cmp
call
xchg
sbb
sbb
rcrl
mov
jg
adc
xchg
push
or
into
mov
and
xorb
xor
push
mov
adc
aad
add
pop
hlt
in
push
roll
fwait
mov
int3
pop
push
fisubrl
pop
sub
adc
inc
add
xor
xchg
jbe
test
xor
lret
std
adc
pop
jge
xchg
pop
push
add
imul
mov
adc
dec
test
mov
add
push
cmpsl
jne
in
pop
aam
mov
movsl
push
xchg
aam
or
mov
xor
inc
aad
xor
int3
sbb
cli
and
mov
iret
ffreep
movsl
mov
test
pop
add
fidivl
cmp
mov
pop
mov
jnp
xor
or
pop
int
mov
mov
xchg
or
push
inc
test
pop
push
leave
sub
ret
mov
jecxz
adc
jae
mov
add
add
sarb
and
pushl
hlt
aas
sub
or
lret
sbb
nop
add
ret
xor
adc
jge
pushf
add
adc
inc
dec
dec
js
push
psrad
aas
mov
cmp
jae
cmc
push
test
pusha
push
pushf
sbb
addl
push
pop
imul
insb
incl
mov
dec
shll
arpl
ljmp
mov
test
mov
iret
mov
outsl
jg
xchg
mov
shll
leave
aas
ds
fs
adc
aaa
xchg
pop
je
call
sub
mov
sub
fdivp
das
xchg
or
shl
das
cmp
out
cmp
and
adc
push
pop
decb
push
adc
cmp
sahf
fistps
std
icebp
clc
call
in
mov
mov
lcall
pop
mov
or
sbb
loopne
cld
fwait
push
negl
daa
push
dec
pop
mov
jg
insb
fcoms
xor
mov
lret
dec
cs
pop
out
pop
dec
sar
jmp
jl
xor
lret
inc
orl
pop
loopne
pop
and
shlb
aad
cli
movsl
aaa
fsubrl
dec
mov
mov
iret
jle
sbb
loop
aas
ss
mov
call
adc
adc
or
outsb
pop
xchg
xchg
decb
xor
jl
jae
jb
push
pop
dec
inc
ljmpw
inc
xchg
cs
out
scas
ds
and
movsl
push
and
and
adc
mov
pop
adc
lcall
jge
sub
cmp
call
or
stos
jno
mov
adc
mov
pop
push
sti
jno
popa
jp
arpl
cmp
adc
rorl
lret
mov
jo
mov
push
or
je
hlt
fld
fistl
dec
jb
sbb
xchg
xlat
and
mov
inc
daa
in
addr16
cmp
inc
and
push
cmp
push
xchg
cmp
adc
ficoms
subb
and
pop
jle
orb
jbe
or
mov
das
xchg
mov
cmp
and
mov
mov
push
int
adc
cmpb
es
shlb
adc
lock
mov
test
ret
ds
push
lret
insl
dec
sbb
push
shlb
mov
hlt
aaa
and
jp
jo
lock
dec
mov
fidivs
xor
pop
test
lcall
shll
mov
mov
pop
ss
stos
dec
dec
sub
scas
xlat
sub
out
xchg
sub
les
into
daa
mov
adc
or
pop
inc
bound
pop
mov
aaa
and
insl
in
rolb
or
sbb
pop
mov
js
int3
mov
push
adc
loope
movsb
je
inc
sbb
adc
inc
fadd
mov
rcrl
mov
cmpsb
push
push
mov
add
mov
add
jg
push
loope
in
dec
dec
insb
pop
dec
mov
dec
inc
sub
jg
decb
imul
iret
es
and
and
sub
inc
dec
test
arpl
xchg
test
xor
add
outsb
cmc
test
sbb
push
mov
sub
mov
inc
mov
pop
rorb
imul
sti
inc
sbb
loope
or
sub
stos
test
mov
mov
das
in
insb
xlat
fcmovne
push
pop
cmc
jg
xor
push
mov
jmp
arpl
ds
bound
and
jnp
loope
xor
adcb
sahf
dec
mov
pop
in
inc
jne
ss
shr
xchg
cmp
add
and
bound
hlt
mov
daa
mov
dec
dec
imulb
jb
in
das
dec
pop
shl
sti
push
jecxz
mov
hlt
scas
adc
mov
adc
add
sbb
inc
xchg
dec
pop
sbb
push
jo
xchg
mov
pushf
nop
stc
testl
fs
sub
fists
fwait
out
adc
std
sub
mov
outsl
and
sub
add
push
repnz
mov
sbb
ret
mov
or
pop
shl
out
cwtl
or
fadd
mov
adcl
in
filds
std
xchg
cmp
stos
gs
cmpsb
xchg
lcall
in
add
dec
add
xchg
mov
insb
imul
repnz
fildl
adc
and
das
mov
pmullw
adc
stos
add
inc
push
adc
xor
xchg
mov
jmp
mov
dec
cmp
arpl
in
sub
mov
mov
aad
adc
xchg
in
push
adc
xchg
lea
ja
test
orl
inc
lods
in
pusha
fcomps
adc
jle
mov
xchg
fnsave
sti
mov
sbb
outsl
repz
shlb
test
mov
adc
popa
xlat
gs
sbbl
sub
pop
xor
jb
gs
dec
je
cmp
enter
push
jb
mov
outsl
push
ja
mov
mov
inc
outsb
movsl
add
repnz
add
cmp
into
push
imul
or
or
mov
mov
xchg
mov
push
sub
fdivs
cld
mov
push
lahf
out
xchg
xor
mov
ret
es
and
mov
loope
mov
or
aaa
ds
add
add
or
or
imul
loope
or
shlb
mov
sti
dec
cmp
push
and
pop
icebp
mov
cmpb
int
repz
inc
sbb
out
jno
loope
cld
inc
sbb
mov
xchg
fisttpl
sarl
mov
pop
dec
lods
out
lock
mov
mov
jno
mov
adc
shlb
in
mov
fimull
iret
pop
dec
push
jbe
jns
cwtl
push
mov
cltd
cmp
loopne
bound
add
lods
mov
cwtl
aaa
in
jbe
add
aam
jno
mov
fs
jecxz
xchg
das
addb
mov
je
cmp
dec
insl
mov
cwtl
push
ljmp
sub
inc
mov
aaa
cmp
rorb
test
les
xlat
sub
dec
sbb
pop
push
and
cmp
iret
add
dec
std
and
sub
arpl
push
jne
mov
imul
add
add
jbe
int3
dec
decl
inc
ja
pop
and
adc
add
std
mov
jecxz
je
dec
pop
gs
insb
add
adc
sub
in
mov
and
lret
dec
sbb
in
imul
push
xor
ret
popaw
inc
fwait
rcrl
sbb
mov
pop
dec
outsl
inc
inc
fucomi
fs
push
inc
loope
inc
mov
mov
mov
repnz
inc
or
out
fsubrl
jns
mov
cli
adc
pusha
push
aam
mov
mov
fimuls
jmp
adc
push
addr16
mov
fstpt
jns
add
fisubrs
stc
sbb
pop
push
push
dec
and
js
mov
dec
icebp
lret
aaa
imul
iret
sbb
pop
mov
push
movsb
jb
outsb
scas
je
jbe
push
push
popa
data16
mov
sbb
pop
xchg
arpl
in
inc
xor
dec
test
pop
inc
push
inc
pop
imul
scas
js
insl
fdivs
or
mov
mov
mov
sarb
jno
pop
ja
xor
ret
filds
testl
les
push
ss
add
mov
outsb
lea
into
add
pusha
mov
inc
fnstcw
jns
adc
add
jge
jb
xor
inc
inc
or
jno
adc
dec
mov
pop
js
jmp
int3
xchg
jmp
sub
sbb
repz
test
das
int3
inc
dec
add
adc
push
push
push
das
push
sti
sub
push
pop
mov
jg
lods
or
outsl
fstp
mov
call
sarb
mov
cmp
fnstsw
sub
inc
popa
push
dec
ss
lock
fistpl
xor
sub
push
cwtl
out
mov
dec
inc
jecxz
ss
mov
inc
dec
test
aaa
add
rcr
sbb
lock
in
jo
pop
cmp
push
stos
incl
stos
push
popf
adc
or
mov
sub
js
loopne
icebp
and
ficompl
and
sbb
mov
xlat
inc
mov
decl
ret
mov
pop
add
xor
pop
lea
lods
push
subb
fisttps
mov
insb
adc
rorl
fcompl
dec
mov
lret
and
pop
fs
inc
outsl
cld
push
cmpsl
cmp
leave
cmp
loop
je
and
add
roll
push
mov
cmp
in
ret
xor
pop
call
sbb
es
and
push
mov
inc
pop
dec
outsl
mov
incb
inc
inc
sar
mov
out
jle
std
cmp
out
sbbb
dec
cmc
jg
cmp
movsl
in
jg
mov
xchg
test
pop
les
mov
dec
lahf
dec
popa
mov
mov
add
pop
mov
imul
xor
clc
incl
push
ret
pusha
gs
lods
test
cmc
sbb
inc
or
push
sbb
xchg
stc
mov
scas
mov
dec
lds
shlb
popa
xor
test
xlat
pop
sbb
lods
cmc
das
push
mov
mov
add
and
adc
lds
je
push
cmp
stos
addr16
addr16
ja
jb
loopne
pop
or
out
mov
inc
pop
push
dec
push
dec
xor
cmp
mov
mov
xor
insb
mov
out
loopne
cmp
pop
mov
mov
inc
and
out
test
mov
shll
or
js
stos
push
mov
adc
sti
insl
mov
stos
xchg
push
sub
or
or
loop
movsl
imulb
inc
dec
sub
pop
mov
mov
mov
pop
dec
pop
or
xchg
and
pop
adc
cmp
push
mov
mov
pop
mov
cmp
int
inc
fadd
test
faddl
mov
or
add
push
adc
popa
adc
or
sub
stos
or
sbb
push
leave
ds
pop
mov
push
mov
push
mov
inc
sub
cmp
sub
or
ss
push
push
inc
roll
outsl
in
loop
or
icebp
or
and
and
mov
cld
lahf
adc
xchg
mov
inc
mov
or
and
sti
arpl
sti
mov
or
push
mov
pushf
dec
mov
lds
stos
dec
xor
dec
adc
stos
out
icebp
sbb
addr16
outsl
jne
xchg
adc
mov
sbb
xchg
sbb
and
push
xor
outsl
xor
dec
or
ficoml
cwtl
shll
mov
hlt
or
es
dec
push
int
test
outsb
add
outsl
outsb
lcall
or
addr16
pop
inc
mov
pop
int3
sbb
in
xor
jl
inc
packsswb
inc
sti
jns
fwait
mov
pushf
cs
sbb
or
xchg
inc
call
stos
pop
test
mov
daa
cmp
notl
and
into
aas
addb
cmc
dec
jmp
addb
dec
sarl
and
xor
out
call
adc
fbstp
sub
incl
popa
push
rolw
hlt
fdivrs
leave
lret
incl
push
inc
icebp
pop
and
dec
inc
addr16
push
clc
add
sbb
push
imul
dec
mov
das
dec
outsb
cmp
divb
loope
dec
outsl
push
add
pusha
jecxz
nop
aas
mov
push
nop
or
popa
gs
inc
stos
clc
sti
add
cmp
sarb
aam
sub
je
xchg
mov
pushl
dec
mov
orl
nop
cmp
fldcw
add
adc
push
fsub
lods
ret
dec
fiaddl
fsubs
push
dec
iret
push
incl
cmp
cmp
int3
add
lods
cltd
fsubrs
pop
cmp
lock
jle
dec
push
push
mov
cmp
adc
or
addr16
mov
pop
mov
mov
cwtl
lds
fbld
incl
cmpsl
add
mov
stc
jmp
call
scas
sbb
rcrl
pop
add
and
fisttpl
push
popa
pop
popa
inc
fwait
adc
pop
sub
or
rcrb
push
pop
mov
out
pop
mov
xor
sbb
mov
pushl
lods
xchg
cld
orl
loope
sub
sbbb
mov
mov
setg
cmp
sbb
popf
hlt
xor
inc
xor
adc
sbb
outsl
dec
es
scas
jne
pop
arpl
dec
jb
and
sbb
pop
ss
imul
lret
push
fs
jge
mov
pop
lods
add
gs
pop
adc
sub
or
push
out
cmp
pop
les
ud0
inc
adc
arpl
sub
hlt
mov
adc
push
inc
pop
add
mov
fists
and
xlat
push
les
push
or
mov
or
add
ljmp
lahf
adc
fmul
lret
cli
aaa
cmp
adcb
test
mov
jge
insl
add
or
mov
jb
or
xchg
add
aam
jecxz
rclb
rcrl
ja
jb
scas
or
icebp
jg
fsqrt
std
sub
lret
rcr
jge
add
mov
jno
inc
mov
loop
sub
jle
inc
pop
dec
orb
mov
or
call
lcall
jo
adc
sbb
add
and
push
mov
and
daa
inc
in
mov
xchg
xchg
rcll
gs
inc
sub
clc
sbb
add
cld
sarb
cmp
adc
cmpsb
addl
mov
push
rcl
movb
push
adc
inc
out
or
inc
inc
sbb
stos
dec
pop
jl
pop
gs
pop
xchg
aad
adc
fnsave
push
inc
add
pusha
stos
and
aaa
xchg
mov
fstps
push
rol
sbb
lret
hlt
ja
dec
adc
cmp
hlt
xor
lcall
mov
adc
pop
and
mov
lock
adc
and
mov
roll
dec
repnz
imul
jne
gs
test
psubw
inc
jne
ljmp
aaa
mov
cld
les
mov
pop
imul
fstps
dec
data16
lea
frstor
mov
xchg
xchg
fmuls
adc
rorl
jnp
sar
push
outsb
push
dec
mov
xchg
xor
mov
mov
ss
mov
jbe
in
sub
shr
decl
cmpsl
inc
adc
sbb
adc
add
push
adc
or
fisubl
mov
sbb
pop
sbb
jbe
stos
adc
xor
push
xor
mov
jne
jb
or
adcl
sub
mov
imul
icebp
add
rcrl
push
call
std
and
shlb
xchg
subl
mov
mov
mov
mov
mov
insb
dec
push
mov
mov
mov
add
stos
movsb
mov
dec
inc
int3
aam
add
and
pop
xorl
aas
pop
push
rorl
pop
test
adc
sub
jbe
add
ss
data16
fs
andl
dec
fnstsw
pop
idivl
jbe
lods
jo
fldt
push
push
mov
or
lret
jb
sbb
repnz
or
loope
xchg
shll
in
test
mov
jp
popf
pop
jo
mov
cld
pop
add
and
pop
pop
push
sbb
in
daa
jbe
inc
add
push
fisttpll
sbb
mov
sbb
mov
imul
outsb
fdivrp
fistps
xor
jecxz
mov
popf
pushf
and
inc
decl
outsl
loopne
call
jp
pop
in
je
test
je
lea
test
loopne
cmc
stc
pop
jl
xlat
adc
test
add
shrl
daa
stc
bound
outsl
mov
mov
adc
hlt
cmp
add
clc
in
dec
ror
inc
push
inc
inc
mov
push
mov
push
jl
sarb
sbb
sbb
mov
sarl
sub
push
out
ffree
mov
imul
inc
ss
popa
mov
dec
loopne
jns
sahf
repz
cs
sti
fs
and
and
cmc
add
jg
inc
je
push
aad
jmp
add
dec
jne
inc
sbb
mov
adc
adc
inc
fwait
adc
push
std
pop
adc
imul
mov
xchg
fistpll
aaa
inc
pusha
test
xchg
mov
mov
jb
sub
aaa
orb
push
fisubrs
cld
lcall
push
push
mov
das
adc
mov
lock
jle
xor
sub
and
push
push
insl
mov
int
shll
pushl
std
in
das
dec
pop
sbb
sti
js
and
push
push
movsb
pop
mov
mov
xchg
jg
mov
sub
pop
call
pop
sbb
dec
andb
mov
sbb
out
pop
push
imul
pop
and
rcrl
lret
sbb
das
mov
neg
clc
lea
test
mov
cld
in
add
leave
xor
sbbb
ffreep
test
in
inc
sbb
jecxz
sbb
push
pop
iret
jo
insl
adcb
insl
mov
xlat
fiadds
nop
stos
and
xchg
addb
mov
out
push
sbb
inc
fsubrs
outsl
jecxz
pop
dec
jp
out
call
xor
shlb
mov
pop
cmp
pop
push
jecxz
jmp
arpl
stc
mov
add
and
sub
pop
fimuls
add
movsb
incb
xor
es
incl
inc
mov
xchg
cmp
pop
adc
xor
repnz
pop
stos
xor
or
or
add
pushf
cltd
xor
fcoms
dec
out
mov
pop
fwait
mov
faddl
push
mov
in
lods
cmp
jnp
cmpsl
fstpt
sahf
push
add
inc
mov
push
insb
jge
pusha
lret
mov
stos
adc
sbb
inc
mov
mov
mov
add
lret
in
in
mov
xchg
push
aam
jg
sub
jne
and
xchg
jnp
sbb
push
pop
clc
filds
push
jl
push
ror
mov
call
pop
arpl
imul
mov
inc
mov
into
out
jmp
jg
mov
sub
mov
push
outsl
inc
fstpt
or
fwait
dec
rolb
insb
hlt
push
ljmp
sbb
lods
dec
fnstenv
inc
das
filds
call
jp
and
insl
popf
aam
mov
jle
xchg
add
loopne
sbb
push
dec
pop
call
ljmp
ret
adc
inc
cld
pop
mov
pushf
fnstenv
xor
xchg
xor
push
dec
call
into
hlt
dec
jno
ss
inc
push
inc
inc
icebp
sbbl
cmpsb
and
lret
fimuls
add
push
mov
mov
pop
or
sbb
jb
pop
mov
mov
cmc
mov
ret
mov
jge
push
push
mov
cltd
dec
rcrl
xor
and
stos
sub
lock
or
add
sub
or
jns
add
pop
ds
adc
mov
jns
jmp
cmp
inc
or
in
jp
dec
std
mov
and
pop
mov
outsl
pop
add
jne
out
sub
mov
sub
stc
pop
pop
clc
add
ja
sbb
pop
inc
add
or
inc
aas
mov
decl
sbb
repnz
mov
or
lock
sub
mov
loopne
loop
push
or
sahf
fidivs
inc
pusha
jl
add
mov
push
pop
and
in
inc
push
jbe
and
popf
lods
fcmove
lods
lret
enter
mov
fistpll
mov
adc
mov
mov
mov
pop
mov
mov
mov
fldcw
or
divb
in
movsl
or
sub
lret
loopne
andl
jg
cmpsb
and
js
fsubs
pushf
fucomp
mov
add
cltd
fs
push
gs
jle
push
pop
adc
pop
adc
mov
dec
cmc
andl
scas
test
adc
or
sbb
pop
repz
insl
inc
adc
ljmp
shl
and
jg
inc
pop
test
lahf
stos
mov
dec
js
fwait
rcl
std
pop
cmp
adc
sub
das
push
xor
arpl
sbb
push
xor
inc
enter
pop
pusha
inc
nop
mov
or
pop
mov
inc
xor
lcall
mov
mov
xor
cmp
pop
or
add
inc
and
loope
sub
aaa
mov
adc
addb
inc
and
jmp
imul
jg
dec
push
pop
adc
push
int
cmpb
sub
dec
pop
ret
jb
in
ret
mov
repnz
js
or
mov
ficompl
push
adc
xor
decl
jmp
xchg
int
xor
fwait
jg
push
aad
lods
loop
cli
mov
jo
jecxz
dec
call
mov
mov
das
mov
std
movsb
outsl
add
pop
test
jo
and
xor
popa
or
sub
jmp
jne
fdivrs
ret
add
inc
xor
sahf
mov
incl
cs
jns
movsl
or
xchg
mov
pop
testl
jae
inc
xor
and
dec
xchg
test
and
push
sar
mov
adc
data16
arpl
adc
sub
test
sbb
dec
mov
push
stos
xchg
lods
rcrb
in
test
mov
popf
subb
sarl
add
aas
js
mov
mov
jecxz
pop
std
int
xchg
adcb
jne
leave
cltd
mov
mov
dec
dec
and
inc
sbb
dec
fimull
jnp
cmp
lret
test
dec
lret
lcall
mov
pop
and
arpl
shl
arpl
cmpsb
lcall
sub
xor
cld
push
jns
bswap
cmp
and
pushl
mov
insb
stos
jle
dec
mov
dec
jne
arpl
fdivs
addr16
jg
lea
mov
inc
fistps
add
pushl
mov
inc
add
popf
int
cwtl
dec
cwtl
fucom
stos
mov
dec
aam
inc
xor
dec
inc
outsb
mov
cld
push
adc
pop
inc
or
lret
sbb
imul
push
mov
inc
mov
jbe
xlat
jae
fisttps
in
inc
pop
cmp
mov
repnz
cld
push
xchg
or
decb
cmp
jecxz
inc
add
xor
lahf
rclb
ret
mov
ss
aad
stos
jno
insb
and
div
cmp
loop
push
imul
loopne
sbb
aaa
xchg
loopne,pt
dec
xchg
in
repz
movsb
les
cmpsb
aam
mov
cmp
icebp
inc
jo
inc
orl
cwtl
popa
xchg
pslld
popa
or
fists
stos
jmp
aad
pop
in
push
lock
jbe
mov
mov
push
cmp
push
cmp
enter
ret
or
mov
jb
repz
xlat
dec
push
sub
adc
add
daa
add
rolb
movsl
and
push
xorb
decl
lods
addb
pop
out
jbe
pop
ds
scas
rcrb
stos
sub
imul
lret
and
mov
pop
lock
outsl
mov
pop
inc
xor
fdivrp
dec
enter
push
mov
jo
fstl
out
push
fsubrs
rcl
rorb
jp
jno
or
movsl
xchg
add
ja
sbb
xchg
fdivl
sub
cmp
mov
jg
sbb
scas
add
leave
movsl
sub
cmp
cltd
sbb
inc
jge
push
cs
stos
orl
incl
pop
mov
mov
or
sbb
inc
jo
add
mov
jb
xchg
sahf
jecxz
inc
fisubrl
jmp
mov
push
cwtl
inc
xchg
mov
mov
decb
inc
lahf
jmp
cs
out
jg
sub
mov
jbe
sbb
mov
pop
shrl
lahf
stos
sbb
shlb
xlat
fcos
pop
test
movsl
out
add
mov
int
dec
inc
pushf
fildl
aaa
fidivrl
dec
sahf
adc
leave
jg
cld
enter
sub
loop
dec
mov
mov
mov
or
jbe
ljmp
xchg
inc
andb
das
insl
add
xchg
andl
push
xor
sti
addr16
sub
adc
gs
dec
pop
xor
decl
adc
nop
shld
daa
lods
inc
mov
insb
in
or
sbb
sub
push
cmp
orl
aam
add
cmpsl
aad
push
pop
outsl
inc
sti
pop
rcl
mov
add
test
push
lods
inc
enter
pusha
mov
popa
roll
adc
pusha
jecxz
les
xor
fisttpl
call
mov
jnp
data16
movsb
lea
mov
pop
mov
in
mov
add
enter
push
arpl
cld
test
xchg
orb
rcrb
clc
xlat
lahf
pop
xchg
rcrl
sti
inc
and
sbb
cmp
mov
mov
in
in
add
into
pop
gs
pop
mov
sub
fbstp
xchg
in
inc
sub
mov
nop
mov
fisubs
fdivs
data16
pop
mov
orb
fnstcw
xchg
in
and
xor
dec
add
psubusb
mov
mov
outsl
add
incb
xlat
dec
mov
adc
pop
rorb
push
or
in
dec
fs
fsubs
inc
cmp
mov
mov
in
add
sub
cmp
leave
add
add
shlb
subl
pushf
sub
push
push
popa
sbb
mov
pushf
cmp
rolb
test
inc
and
daa
inc
gs
shlb
pop
jno
add
xchg
sub
test
sbb
loopne
inc
jg
roll
fstpl
xchg
push
jge
mov
adcl
and
nop
adc
ret
iret
shrb
arpl
pop
mov
xchg
mov
mov
mov
cs
mov
and
push
push
xchg
andl
sbb
xor
mov
mov
test
jno
movl
les
mov
mov
mov
pop
add
or
push
addr16
pop
stos
lea
rolb
loope
jle
or
push
push
frstor
cmp
cmpb
loope
outsl
inc
mov
fcomp
js
mov
sub
cmp
mov
imul
jge
test
jg
enter
pop
in
inc
popa
mov
inc
and
fs
or
je
push
cmp
outsl
fmull
add
or
ss
outsl
inc
lods
adc
mov
faddp
mov
and
push
dec
loope
fstpt
fisubrl
enter
mov
int
xchg
jg
adc
inc
sub
sub
xorl
jle
repz
inc
dec
sub
js
push
les
inc
out
dec
push
leave
mov
dec
jbe
xor
into
aas
xchg
daa
call
cli
loopne
mov
xchg
add
shrb
movsl
stos
fwait
or
sbb
or
dec
xor
pop
inc
push
add
mov
xchg
pushf
or
out
std
pop
pop
add
adc
mov
mov
add
enter
loopne
xchg
or
lret
push
incl
jg
inc
or
xor
and
xchg
fdivrp
xlat
dec
cltd
or
outsb
dec
dec
stos
cli
aaa
push
test
inc
outsl
mov
mov
jmp
xchg
repz
bound
lock
ret
push
lock
out
add
sbb
inc
lds
lds
test
ds
jg
rclb
or
stos
ret
ljmp
sbb
sub
adc
lcall
ret
dec
adc
into
in
cmc
mov
adc
and
cld
pop
adc
push
ss
ficoml
xor
fldcw
mov
inc
fstl
jge
push
mov
xchg
pop
mov
inc
pop
add
push
jns
outsb
movsb
push
sbb
mov
and
mov
lea
cmpsl
addr16
add
lahf
sbb
and
sub
roll
mov
movsl
jg
fstps
jg
rcrb
arpl
fsubs
jbe
and
mov
jecxz
fmuls
jge
pop
cld
dec
clc
mov
sbb
loope
cmp
lods
mov
mov
mov
jns
icebp
popa
lret
popa
adc
sbb
sbb
mov
cwtl
movsl
sub
ret
aad
je
in
js
outsl
xchg
mov
mov
xor
or
jl
shlb
call
cs
es
sub
adc
adc
int
mov
outsl
sbb
cmp
inc
mov
cmp
bound
std
test
nop
loope
lahf
loop
xor
lretw
call
xchg
call
popa
jl
jne
sti
movsl
jbe
cmpsl
mov
inc
sbb
mov
sbb
xchg
jo
stos
loope
cmp
and
aam
test
dec
das
std
mov
xor
sub
sar
jg
pop
jecxz
mov
incb
inc
add
or
jne
mov
cld
pop
jae
dec
sbb
cmpsb
pop
and
pop
pusha
loop
icebp
ret
leave
ret
outsb
movsl
out
sub
mov
push
pop
dec
gs
das
ljmp
outsb
jae
js
in
mov
push
dec
xchg
mov
jo
lock
and
ljmp
inc
movsl
insb
mulb
pusha
mov
fidivrs
imul
dec
cmp
testl
vandps
mov
or
ss
lods
push
cmp
das
jb
ja
dec
imul
sub
fs
shrb
push
pusha
js
es
xchg
into
imul
cli
sbb
cmc
ljmp
cmpsb
bound
add
lret
push
mov
mov
fnstsw
inc
push
push
or
xchg
jg
insl
adc
popa
bound
fyl2xp1
mov
outsb
xor
mov
mov
mov
enter
adc
daa
pop
push
mov
clc
and
pop
inc
js
sub
push
or
movsl
fistl
shll
xor
adc
mov
sub
lahf
int
fdivs
pop
adcb
jb
push
adc
insl
xor
mov
sub
adc
mov
push
addr16
xlat
and
ljmp
inc
mov
aaa
jp
adcb
scas
mov
xchg
fcmovbe
testb
push
push
jbe
adc
pop
xchg
incb
dec
pop
or
clc
movl
sarb
out
fcmovnb
es
adc
mov
loopne
adc
leave
jecxz
and
fadds
push
rorl
jmp
add
inc
or
mov
sbb
sbb
and
call
clc
inc
xchg
incb
and
dec
mov
and
mov
adc
pop
mov
rorl
bound
mov
inc
insl
outsl
rcrb
push
push
push
rcrl
imul
pop
call
inc
mov
adc
dec
fsubrl
jae
mov
dec
dec
pop
pop
pop
or
pop
jle
jo
test
dec
jl
lea
test
mov
push
shlb
push
inc
ljmp
adc
adc
xor
ds
lret
and
or
or
loop,pt
mov
mov
or
mov
sar
mov
inc
mov
rcll
mov
std
sbb
popf
cmp
je
sub
mov
rcrl
ja
adc
int3
dec
mov
orb
outsl
pusha
sub
ret
divb
xor
sub
mov
and
lahf
sub
and
stos
out
fwait
xor
inc
data16
and
dec
pushw
mov
call
mov
push
mull
call
pop
jg
sbb
ljmp
mov
push
jo
cmp
andb
mov
cs
ret
push
xchg
nop
jae
movsl
xor
pop
jp
fadds
lret
push
aaa
mov
daa
add
jg
mov
incl
call
out
inc
jae
sbb
push
xor
push
add
imul
add
out
mov
pop
or
movsb
and
int3
loopne,pn
pushf
or
imul
mov
add
imul
sub
clc
cmp
push
add
xor
icebp
jg
pop
sti
dec
sub
stos
shrb
stc
sarw
fisubs
mov
adc
nop
and
incb
mov
enter
outsb
idivb
mov
pop
jg
xchg
or
jle
movsb
push
lahf
stos
jns
dec
sbb
mov
pusha
sub
mov
cmc
aaa
loop
mov
push
in
fiadds
ljmp
int3
and
xor
orb
and
ss
or
in
inc
inc
addr16
cmc
cmp
pop
ja
jle
dec
mov
repz
push
data16
or
ja
outsl
xchg
jno
test
xchg
dec
scas
scas
fwait
aas
into
mov
and
test
sub
fldcw
cmpsl
fldenv
clc
xor
bound
sbb
push
pop
mov
scas
loop
xor
adc
rclb
lods
cmp
cli
pop
mov
sbb
sahf
sub
loop
lret
fmull
jmp
or
shr
mov
mov
iret
or
sub
fldcw
push
cmpsl
sahf
verr
in
rorb
cmp
out
push
sbb
das
xchg
je
sbb
in
xor
jo
jbe
test
sti
and
decl
mov
jecxz
push
mov
outsl
imull
push
dec
mov
dec
sub
and
mov
mov
mov
jp
popa
icebp
jb
stos
cld
pop
loopne
mov
ljmp
loope
outsl
sub
in
inc
dec
push
sbb
repz
pop
addb
xor
xor
sub
and
mov
sbb
add
sbb
mov
out
mov
les
out
arpl
jmp
jle
add
jo
sbb
pop
jp
add
jne
nop
mov
jo
enter
stc
jle
pop
pushf
mov
jg
data16
add
or
inc
jmp
fdivl
xchg
xor
leave
mov
imul
jg
xor
cmp
sub
pop
add
pop
push
sub
mov
loopne
mov
fdivl
jg
mov
lret
shl
xlat
adc
jmp
popa
and
or
mov
lret
dec
xchg
rolb
mov
inc
cmc
adc
je
inc
mov
movsb
scas
inc
sbb
push
jg
jo
aad
pusha
outsb
jl
mov
mov
dec
fidivrs
in
in
jecxz
jmp
data16
enter
rol
or
cmc
mov
fildll
lret
add
dec
insb
rcll
frstor
xchg
jp
mov
xor
fsubrl
popa
and
cmp
in
add
pop
adc
add
or
shrl
push
adc
fldt
mov
or
dec
mov
jge
rorl
fwait
and
mov
mov
imul
push
clc
jb
lods
testl
ficoml
dec
push
out
inc
in
enter
ficomps
insb
mov
test
mov
lret
test
rclb
fdivrp
fwait
mov
push
inc
mov
sbb
push
pop
js
adc
adc
in
pop
not
and
data16
js
out
pop
mov
and
cmc
add
rcll
loop
xor
xchg
ret
pop
push
pop
in
and
mov
inc
cmp
outsl
jbe
mov
ss
int
mov
inc
or
popl
sbb
clc
ja
jge
test
enter
add
decl
mov
fdivl
cmp
cmp
sbb
mov
push
int
jae
jns
test
inc
insl
jns
add
fdivl
repz
loopne
icebp
jno
mov
gs
lock
mov
das
inc
sub
out
pop
aam
aad
add
shll
cwtl
clc
inc
pop
cli
mov
les
jge
sbb
mov
cmp
outsl
shll
lods
pop
out
and
pop
dec
leave
and
xor
insl
mov
fdivr
dec
scas
pop
leave
jg
lods
inc
sbb
jmp
int3
data16
sub
inc
cmp
inc
in
aaa
jb
lahf
aaa
xor
dec
enter
iret
inc
stos
stos
xchg
outsb
dec
stos
and
add
pop
adcb
pop
cmp
adcb
test
cmpsl
adcl
and
cmpsl
stos
sbb
stos
fidivrl
outsl
rcl
and
roll
ror
push
popf
imul
sbb
mov
shll
jg
lock
int3
fcomi
mov
orb
mov
loope
cli
cld
mov
jns
movb
jecxz
fdivr
fdivl
std
and
cld
decl
or
mov
sbb
lcall
pop
mov
aaa
adc
sub
shlb
pop
push
pop
cmp
jbe
lret
push
xchg
outsl
or
pop
cltd
add
scas
and
dec
cmp
ds
mov
mov
mov
add
dec
inc
test
xchg
dec
insb
ja
lret
adc
push
ss
jg
pop
cwtl
lret
cltd
sbb
xchg
inc
out
push
xor
and
pop
pop
fsub
idiv
or
int3
je
test
sti
out
cli
mov
push
inc
push
int
fisttpl
aam
cmp
out
out
mov
add
icebp
mov
sbb
sub
sbb
jle
push
and
inc
pop
add
mov
bound
outsb
lock
jmp
jp
mov
mov
enter
cmp
outsl
inc
pop
or
xor
cmpsb
test
insb
push
stc
cmpsl
pop
rcrb
mov
push
test
pop
cmp
rcl
aas
xchg
or
insl
stc
sbb
insl
call
sub
push
cmp
sbb
das
shl
push
insl
push
mov
movsb
bound
mov
jge
data16
or
dec
jmp
sub
rol
cmc
mov
mov
daa
inc
xchg
mov
outsw
fistl
das
clc
jne
jle
fidivl
xchg
insb
pop
cwtl
and
fidivrs
jns
dec
xchg
adc
xchg
pushf
adc
jg
sbb
jmp
xchg
push
adc
push
push
dec
add
add
sbb
push
fcoms
dec
add
adc
inc
push
inc
sbb
outsl
aaa
inc
dec
push
inc
inc
xor
roll
and
lahf
mov
ud1
movsl
cmpsl
dec
movl
mov
jbe
aaa
imul
testl
adc
dec
and
xor
in
push
pop
cmp
xor
incb
loop
push
mov
dec
push
dec
int
jp
pop
loopne
xor
sbb
jmp
or
jnp
mov
mov
lock
in
je
xor
inc
insb
push
imul
aad
xor
push
push
outsb
add
mov
das
xchg
loop
jbe
dec
pop
leave
jp
lods
sub
mov
jbe
cld
add
int3
filds
jle
mov
bound
out
xor
pop
bound
test
add
aad
stos
or
add
or
mov
mov
fs
mov
icebp
das
rcl
xor
inc
mov
or
lds
dec
mov
arpl
push
pushl
sbb
shl
roll
call
push
ds
sub
and
fwait
jno
cmovp
fnstcw
sbb
cmp
mov
push
and
fs
pop
dec
sbb
cmp
gs
in
sbb
add
push
and
imul
cli
fwait
sub
in
dec
and
pop
push
sbb
adc
data16
dec
mov
aad
repz
jb
les
je
das
test
cmpl
test
inc
push
dec
inc
xchg
add
repz
push
pop
and
dec
pushf
ret
jl
add
xor
cmp
cmc
bound
fdivr
ss
imul
mov
lcall
inc
adcb
xchg
xor
sub
lret
ret
push
push
pushf
lret
loopne
jecxz
push
lock
or
mov
cmp
mov
test
repnz
ret
xor
push
stc
and
ss
lods
inc
clc
cmp
leave
cmpsl
lods
incl
or
push
dec
arpl
pop
mov
enter
mull
mov
sub
pop
in
and
outsb
inc
jp
and
ret
adc
in
call
jecxz
iret
rcrl
jp
add
mov
add
hlt
adc
mov
orb
cltd
or
mov
cmp
jnp
jo
mov
add
loopne
gs
push
shlb
jl
aaa
ljmp
inc
mov
arpl
inc
pop
add
push
test
mov
or
and
insb
inc
xor
shrl
dec
lret
stos
mov
adc
fsubl
jg
xchg
pop
push
push
lret
mov
insl
or
and
mov
rol
jae
sbb
pushf
sub
je
mov
mov
add
push
pusha
loopne
mov
arpl
sbb
in
in
in
sub
aad
pop
or
pop
mov
scas
add
inc
inc
jbe
js
pop
ret
cmp
mov
cmp
mov
sbb
adc
pushl
push
add
lds
mov
cmp
aad
pop
sub
cmpsb
testb
sbb
lds
adc
or
adc
xor
std
add
inc
hlt
int3
lahf
fcompl
loop
out
push
and
mov
lea
mov
mov
test
in
and
xor
push
adc
push
pop
cld
je
xabort
mov
xchg
subl
roll
pushf
cmpl
cmp
arpl
mov
scas
or
into
sbb
xchg
fsts
subb
icebp
cmpsl
sbbb
xchg
cwtl
inc
xchg
clc
outsl
aad
jo
jno
or
cmp
fisttpll
push
fnstenv
dec
pop
push
mov
pop
xlat
movsl
or
call
das
fnsave
cmp
pop
inc
jns
inc
push
scas
sbb
jle
loope
sar
xor
dec
push
inc
jge
bound
mov
jl
and
inc
rorl
mov
cltd
hlt
sub
adc
je
sbb
sbb
insb
sbb
inc
inc
pop
outsl
pop
dec
arpl
sbb
clc
aad
loop
mov
dec
gs
xor
leave
dec
sbb
inc
fisubl
incl
addr16
and
push
push
ljmp
sub
mov
xor
adcl
mov
mov
sbb
lret
dec
out
push
jmp
add
inc
add
jo
imul
mov
fistpll
gs
xchg
xor
addb
push
sub
arpl
aaa
inc
sbb
push
adc
mov
fsubrl
iret
adc
push
cld
sahf
jp
inc
lods
sbb
inc
inc
pusha
push
jo
xchg
in
xor
bound
inc
pop
js
cmp
aaa
pop
inc
jo
jecxz
jae
mov
dec
into
cmp
nop
or
call
movsl
add
lret
pop
push
pushf
dec
stos
and
mov
popa
mov
mov
push
ss
mov
cld
mov
pop
mov
or
in
pop
add
mov
mov
outsl
xor
inc
xor
sahf
cltd
wbinvd
jo
adcb
ret
js
aas
pop
dec
lock
or
mov
jo
insb
cmp
aas
jmp
mov
lret
rol
in
in
push
mov
test
jp
or
out
inc
mov
add
mov
jg
gs
mov
movsl
mov
sar
rcrl
out
jne
or
pop
enter
out
jp
stos
cli
pop
xor
loopne
add
add
fdivs
shrl
ret
pcmpgtd
test
ds
push
cmp
add
mov
mov
js
jecxz
xor
imul
lods
push
mov
add
mov
nop
insl
push
and
mov
call
sub
push
dec
push
inc
sub
sub
jb
jecxz
in
hlt
sub
xor
js
push
daa
inc
dec
sub
ret
adc
mov
sbb
adc
mov
push
fs
dec
insl
imul
push
outsw
js
and
fs
xor
hlt
dec
shlb
jg
push
push
xor
mov
cmp
xchg
or
jp
insl
adcl
or
mov
shrl
in
dec
outsl
inc
jmp
or
cmp
das
cmp
mov
pushf
sbb
pusha
dec
mov
xlat
fwait
mov
pop
push
loopne
pop
test
out
sbb
jb
jne
fstps
out
outsb
outsl
das
xor
dec
jnp
ret
aam
loopne,pt
push
mov
or
mov
in
and
stc
or
insl
or
and
mov
and
or
adc
xor
gs
or
mov
sbb
add
cmp
dec
fildll
roll
push
call
sbb
pushf
push
je
push
cmpsb
notl
lock
mov
mov
outsl
pop
test
es
ljmp
mov
imul
add
add
inc
cltd
mov
das
ds
aas
cmp
add
push
push
cmpsl
fs
mov
test
xor
mov
dec
cld
out
jge
pop
pop
cmp
xlat
pop
mov
pop
push
cs
pop
adc
rcrb
ficompl
nop
sub
push
dec
inc
push
insb
fcompl
test
outsl
ss
mov
pop
push
dec
add
push
sbb
call
dec
mov
mov
xchg
movsb
mov
and
add
mov
inc
mov
and
aad
or
lods
jns
lahf
paddb
jo
dec
iret
inc
inc
dec
movsl
stos
sub
cmp
iret
sbb
mov
std
nop
jp
mov
cmc
push
pop
jg
out
push
fcoms
ds
mov
xor
in
dec
cmp
add
sbb
sub
cmp
inc
inc
stos
mov
or
push
sbb
sub
fists
add
adc
pop
mov
negb
adc
data16
outsl
push
dec
inc
inc
and
movsl
icebp
fistl
adcb
pusha
insl
xchg
addl
inc
arpl
test
je
push
or
push
sub
movl
fucomi
inc
pop
push
scas
xor
or
add
pop
sub
xchg
je
mov
dec
and
dec
loopne
jle
dec
inc
je
loopne
hlt
cmpsb
sbbb
bound
pop
add
cmp
mov
sub
stos
inc
or
inc
lea
xchg
rcll
xchg
jae,pt
dec
or
xor
insl
dec
adc
xor
je
inc
or
sbb
aaa
sub
aaa
out
sub
add
add
push
stc
icebp
pop
pop
push
jmp
push
test
jge
and
jl
pop
test
into
mov
sub
movsl
sub
mov
adc
lret
mov
add
xor
lret
and
ret
inc
jne
addr16
movsl
andl
dec
push
inc
sbb
test
ret
and
inc
orl
and
dec
jl
and
push
xor
or
cmp
cmpsb
fisubrl
cmp
add
jmp
outsl
jg
imul
adc
test
clc
cmc
fs
fcomps
push
adcl
push
aas
adc
addb
and
mov
dec
bound
addb
clc
dec
push
and
push
addr16
xchg
sub
les
xor
mov
loopne
loop
push
xor
pop
imul
clc
sbb
push
dec
outsl
dec
push
ljmp
bound
add
or
jle
add
inc
in
insl
jle
in
jg
add
cmpsb
rcrl
cmpsl
and
or
mov
aad
stos
and
pop
ret
pop
cltd
or
popf
or
aas
mov
test
enter
and
xchg
sbb
pop
dec
out
adc
inc
cltd
js
inc
and
add
or
fcoms
pop
or
push
call
leave
loop
jno
mov
mov
sbb
jge
in
repz
test
push
xchg
or
mov
cs
cmpsb
adc
imul
adc
movsl
loop
je
fs
in
mov
mov
and
enter
jbe
adc
adc
jb
lcall
inc
fdivp
adc
mov
cs
sbb
out
jmp
shlb
mov
roll
jge
out
jmp
pop
sbbl
cmp
jae
aad
fisttps
sub
ror
adc
lock
addb
sub
lahf
xorl
aad
jne
xor
js
cmc
les
ljmp
loop
xchg
leave
addr16
sbb
inc
xchg
icebp
pop
mov
outsl
filds
mov
daa
sub
xor
pop
mov
in
cli
dec
push
push
mov
adc
xchg
int3
cmc
incl
adc
ficoms
flds
pop
mov
orl
insl
dec
pop
cmp
lcall
jno
add
mov
xorb
adc
pop
sub
icebp
jg
xchg
shl
into
pop
push
ret
addr16
mov
stos
pop
mov
push
fs
rcl
and
fadd
mov
je
mov
adc
xor
aas
aas
add
test
fdivs
inc
sahf
dec
mov
test
or
mov
sahf
bound
in
xor
adc
mov
iret
adc
and
jbe
fwait
jg
lods
outsb
mov
or
jns
xchg
rolb
jmp
add
movl
inc
in
movsl
jbe
test
outsl
fbld
dec
or
pop
pop
roll
adc
cmp
push
xor
cmpsl
sub
imul
loopne
fnstsw
inc
dec
adcb
icebp
mov
mov
je
jne
push
add
icebp
sbb
iret
push
lods
mov
sbb
js
enter
outsb
mov
aad
mov
jno
and
lods
daa
in
mov
inc
sbb
cmp
pop
adc
fwait
sub
xchg
mov
add
add
insl
leave
pop
mov
lock
sbb
test
mov
jbe
ljmp
scas
push
jmp
enter
rol
js
pop
or
imul
mov
mov
mov
adc
pushf
pop
jne
xor
lods
lds
pop
push
push
loop
shlb
out
jo
pop
inc
in
dec
mov
outsl
jne
lret
popa
shll
lods
out
pop
cmc
or
popa
push
jmp
dec
dec
xor
sub
movsb
js
pusha
in
push
adc
push
aaa
outsb
dec
in
mov
mov
arpl
sbb
imul
ret
icebp
inc
dec
push
pop
aad
and
mov
imul
int3
cmp
clc
dec
in
pop
inc
inc
call
add
ret
and
or
mov
add
mov
push
popa
loopne
sbb
inc
pop
sub
lods
decl
jbe
out
sbb
inc
inc
inc
pop
push
add
pop
repz
das
cld
mov
push
leave
or
js
ljmp
loopne
aam
das
call
mov
jbe
pop
sbb
insl
xor
pop
pop
xlat
xchg
mov
and
out
mov
lea
cli
js
mov
repz
mov
mov
jne
or
pop
mov
icebp
das
shll
loopne
and
loop
xor
in
fwait
loopne
adc
sub
in
jne
adc
inc
jo
cwtl
ja
or
add
movsl
mov
popa
xchg
sar
enter
add
push
pop
xor
xor
loope
stos
fcomps
call
sub
add
in
lods
out
push
push
fists
mov
or
pop
push
adc
fs
add
sbb
adc
fs
inc
pop
icebp
push
cld
sbb
jmp
jbe
das
mov
idivb
mov
fldcw
ja
movsl
jmp
rorl
mov
ds
cmp
dec
add
popf
sub
outsb
fs
ret
mov
jecxz
and
nop
pop
sbbb
hlt
lahf
jae
mov
pop
dec
xor
addr16
pop
aam
subb
sbb
or
fucom
cmp
fsubrs
sub
xchg
xor
int
arpl
inc
aas
jo
adc
mov
mov
push
sub
xor
data16
aaa
aaa
add
add
add
jge
imul
add
inc
fstpt
adc
inc
dec
dec
mov
fimuls
xor
dec
mov
daa
or
shrl
sti
subb
pop
mov
lds
mov
pop
les
iret
add
pop
imul
sbb
mov
int
ret
xchg
cs
js
xchg
lds
sub
add
xchg
add
sbb
sbb
icebp
shrb
inc
rcll
pop
shrb
cmp
pop
test
dec
inc
push
jp
das
xchg
loope
mov
push
dec
incl
in
add
pop
dec
aaa
sub
mov
or
jb
or
inc
inc
inc
in
cld
push
inc
mov
jecxz
sbb
mov
mov
std
mov
sub
push
jg
ret
pusha
imul
sbb
mov
sarb
mov
mov
stc
add
jne
inc
mov
or
dec
xchg
add
popf
push
mov
or
std
mov
mov
mov
repnz
sbb
jnp
int
jecxz
pop
mov
scas
stos
add
lds
pusha
loopne
xor
pop
pusha
je
data16
ljmp
cmpsb
out
dec
fstp
imul
std
les
pop
mov
cmp
mov
inc
test
adc
push
fmuls
push
lods
stos
sti
mov
sub
adc
jae
mov
das
and
out
subb
popf
fwait
xchg
ljmp
xor
jp
out
pop
clc
out
push
sbb
adc
xchg
or
fdivl
stos
add
mov
outsl
sub
mov
dec
jg
xor
inc
and
lcall
jl
push
sub
xor
leave
or
or
ljmp
jnp
hlt
hlt
pop
fs
push
int3
das
std
push
int
pop
jg
xchg
imul
mov
inc
cmp
mov
sub
arpl
imul
cli
dec
mov
lock
sub
arpl
das
push
das
insb
jg
inc
add
lds
movsl
js
mov
sub
sbb
nop
mov
push
subb
notb
popf
push
clc
int3
mov
xchg
or
mov
test
dec
scas
sub
pop
mov
mov
rcrb
test
leave
fwait
sbb
outsl
pop
cli
pop
lret
lret
inc
cld
push
sarl
int
mov
cmp
pusha
and
pusha
inc
pop
rcll
and
and
mov
push
push
das
adc
lcall
mov
mov
mov
mov
icebp
add
jne
push
pop
mov
lret
shl
mov
das
jl
adc
mov
rorb
cmp
fimuls
ljmp
xchg
jecxz
adc
lods
imul
filds
mov
push
testb
sbb
aaa
ja
jle
cli
adc
adc
lods
rcr
aas
jg
lods
push
pop
aam
rcrb
inc
cld
mov
aad
int
mov
enter
sub
test
fidivl
inc
xor
inc
pop
insb
bound
lea
and
push
xor
movsl
mov
sbb
pop
push
xor
in
mov
movups
push
out
pop
mov
test
mov
mov
in
jbe
lea
sub
sbb
jo
xor
mov
in
sti
ret
dec
or
pop
cmp
movsb
das
lret
nop
out
add
dec
inc
and
xchg
fdivs
data16
cmp
push
aad
mov
out
push
mov
pusha
pop
inc
dec
dec
lock
cmp
add
ret
test
jge
sub
inc
cs
xchg
repnz
gs
jno
pop
sti
imul
imulb
dec
push
and
xchg
push
rcll
in
test
xor
loopne
jmp
cmp
jecxz
jno
das
shrl
push
mov
adc
iret
cli
jo
std
shll
pop
pop
js
jge
mov
pop
xor
subl
adc
mov
out
push
pop
pop
bound
xchg
jne
cmpb
movsb
incl
rcl
inc
das
mov
fsts
or
test
outsb
inc
imul
inc
pop
dec
push
or
mov
outsb
jmp
sbb
adc
cmovo
inc
dec
jo
cmpsl
cld
mov
push
mov
lea
cmp
and
or
cmp
out
xchg
ljmp
ret
movsl
aaa
inc
mov
fs
xor
addb
insb
jb
jo
loop
fnstcw
inc
jns
adc
push
push
push
shl
push
jb
and
xchg
test
loop
adcb
push
aam
push
fwait
add
push
and
and
les
inc
lods
sbb
mov
fcmovbe
ja
mov
lock
pop
outsb
xor
mov
lock
repz
xor
lock
fidivs
and
pop
push
and
xchg
pop
add
pop
lods
nop
inc
xchg
outsb
xchg
mov
jge
jne
xor
movsl
test
leave
add
inc
ja
mov
int
push
add
xchg
test
adc
sar
scas
add
nop
sbb
cmp
xor
pop
cli
das
call
mov
or
mov
cmp
jle
imul
imul
inc
lods
test
push
popa
lea
push
cmp
dec
hlt
int
decl
mov
negb
mov
or
sub
mov
mov
in
in
ljmp
and
roll
pop
je
or
sub
pop
mov
or
inc
push
pop
cmc
add
mov
shlb
mov
pusha
mov
pop
mov
dec
sbbb
outsb
mov
sbb
push
and
int
rcl
outsl
pop
jp
dec
add
adc
ret
jb
loop
jg
pop
push
adc
mov
icebp
ret
cltd
call
fiaddl
and
testb
push
sub
pop
fists
mov
lea
aam
push
fnsave
stos
or
std
aaa
je
jg
jge
aad
rcrb
xchg
dec
subl
pop
arpl
pop
jae
pop
popa
mov
adcb
pop
add
inc
jle
mov
or
ljmp
rorb
add
scas
pop
xchg
or
jle
push
pop
les
cmpsl
mov
addr16
rcl
mov
aad
pop
ja
nop
pusha
push
xor
and
aad
test
inc
fcmovb
stos
mov
dec
sbb
xor
inc
sbb
dec
mov
sar
repz
arpl
push
sbb
cmc
ja
mov
mov
add
mov
bound
add
or
adc
xchg
push
adc
pop
cmc
xchg
dec
insl
xor
aas
dec
inc
imul
fdivs
sub
jmp
jo
mov
cld
movsb
adc
fdivrs
xor
cmp
sar
and
lret
jg
xchg
mov
scas
and
bound
adc
xor
pop
or
fwait
or
cmc
stos
xchg
push
incl
je
cwtl
sub
cltd
mov
adc
inc
ret
jne
popf
cld
ljmp
fsubrl
mov
das
cmp
mov
daa
hlt
scas
mov
adc
out
xchg
ljmp
mov
adc
pop
cs
in
add
add
xchg
dec
orb
mov
add
test
fsubr
movsl
inc
mov
adc
xchg
cmp
fadds
inc
sub
push
mov
mov
rcrl
loope
sub
cltd
add
jnp
in
xor
loopne
dec
push
je
stos
mov
pop
insl
js
js
aas
jo
mov
cmp
and
mov
xchg
pop
insb
insb
aam
in
sub
fists
js
loope
mov
xchg
dec
mov
daa
lea
inc
inc
push
pop
adc
test
rcl
adc
inc
out
push
push
sbb
arpl
push
cmpsb
loope
inc
ja
insl
insb
jne
ja
jle
xchg
daa
jno
in
lods
in
push
mov
cmc
fistpl
call
sbb
mov
xor
shrb
push
jle
lcall
std
jp
and
mov
push
les
xchg
add
movsb
xchg
push
dec
push
inc
call
scas
dec
ja
dec
dec
push
fs
push
clc
or
add
mov
mov
sub
fisubrs
shlb
mov
aad
lea
clc
sbb
in
add
out
jbe
int
dec
cwtl
pop
push
rorb
jg
inc
xor
and
dec
loope
sbb
pop
into
adc
sbb
mov
xchg
cmp
inc
aas
mov
imul
mov
arpl
out
loop
aam
push
and
pop
mov
add
mov
or
aad
mov
jecxz
aaa
adc
test
adc
or
sbb
sbb
setne
outsl
loopne
xchg
cmpsb
scas
ret
push
out
push
mov
movsb
pop
inc
loopne
inc
pop
data16
and
pop
fcmovnb
cmp
mov
mov
dec
dec
push
mov
mov
push
lea
sbb
pop
cmp
roll
hlt
pop
and
js
mov
mov
das
sbb
mov
or
pop
jmp
andl
fs
sub
or
ljmp
push
mov
cmp
lcall
dec
xor
cmp
cmpsb
das
in
or
pusha
mov
test
scas
xorl
mov
loop
mov
push
loop
sbb
shlb
jbe
cmp
inc
mov
jmp
sbb
pop
mov
mov
shl
aas
mov
xor
pop
cmpsb
cmpsl
pop
lods
push
add
push
add
ja
and
mov
rcl
push
adc
adc
jmp
dec
cmp
ret
xchg
mov
xchg
add
fwait
or
sub
ljmp
mov
dec
ja
mov
pop
loop
sti
gs
cmpb
ret
inc
leave
es
insl
adcb
in
sub
mov
loopne
mov
sbb
mov
adc
ja
sub
push
inc
sbb
inc
rclb
inc
inc
out
fsub
or
jnp
jo
xor
xor
and
or
adc
out
ja
xor
dec
shrl
imul
repz
fiadds
cli
and
jbe
sub
push
outsb
das
fs
xchg
loopne
sbb
mov
lahf
cmp
lret
pop
xchg
mov
add
sbb
jle
mov
jg
adc
dec
jo
adc
add
pop
mov
sahf
loope
xor
insl
loope
lock
scas
or
add
je
mov
jno
adc
and
mov
daa
dec
xchg
std
lds
cltd
loop
dec
add
pop
inc
mov
sahf
jb
or
mov
or
js
or
es
shll
div
insb
es
and
jmp
lret
xor
and
pop
ljmp
xchg
push
outsb
sub
or
inc
sbbl
inc
dec
in
jbe
incb
dec
aaa
pop
jg
mov
mov
xchg
inc
push
out
loop
repz
pop
push
jno
sub
jg
xchg
xchg
ret
aad
xchg
leave
mov
sbb
jo
rol
mov
jmp
add
xchg
or
push
and
xchg
lcall
mov
inc
movsl
add
mov
sbb
sbb
push
outsb
adc
sbb
xchg
mov
xchg
xor
lods
pop
icebp
hlt
mov
pop
dec
orl
inc
push
cmp
adc
sbb
cmc
aad
cli
mov
lahf
xchg
cmpsb
pop
aad
scas
sbb
dec
movsb
add
fildl
rcl
in
iret
insl
adc
popa
scas
jmp
movb
dec
dec
mov
add
lods
xor
bound
cmp
int3
push
sti
loop
pop
pop
mov
cmp
pop
outsl
das
pop
mov
sub
pop
inc
mull
pop
roll
or
sti
dec
add
movb
test
inc
mov
push
cmpsl
push
iret
and
jo
jbe
pop
cmc
mov
or
shr
outsb
sub
jg
cmp
jle
dec
stos
in
outsl
sbb
lods
push
inc
sbb
xlat
pop
cli
cmp
arpl
or
pop
and
push
cld
outsl
mov
inc
dec
adc
jp
and
push
nop
fwait
and
fnstsw
sub
movlhps
xor
jb
jbe
rol
lcall
iret
bound
loope
test
and
dec
and
lock
test
int3
rorb
loope
insl
call
jne
sub
ret
or
adc
or
incl
testl
sbb
xchg
jmp
sub
push
ret
rorb
aam
jge
inc
mov
lock
xchg
push
lret
aad
sbb
push
or
jg
sahf
ss
sub
mov
lahf
xchg
in
clc
shl
fistps
jl
inc
sbb
lcall
insb
pusha
pop
insb
adc
xorb
cmp
fists
call
pop
cmp
imul
dec
andb
push
or
push
pop
in
mov
cs
pop
bound
dec
rol
jecxz
rcr
pop
xchg
pop
adc
outsl
adc
inc
icebp
test
xchg
cmp
xchg
sub
nop
cmpl
sub
mov
mov
jl
mov
enter
xor
bound
sub
outsl
dec
dec
cld
add
daa
pop
clc
pop
adc
pop
les
sbb
icebp
pushl
gs
mov
dec
bnd
dec
inc
fsubs
mov
jbe
loop
lds
inc
lds
lea
push
or
stc
mov
shlb
mov
les
cltd
or
insl
aas
xchg
push
loopne
das
pushf
imul
stos
sub
mov
lods
js
mov
mov
dec
jno
jmp
xor
pop
aaa
xchg
pop
inc
cmp
bound
jo
add
cmp
xchg
rclb
mov
lea
lea
mov
push
mov
sub
sub
inc
fwait
movsl
pop
mov
and
stos
mov
adc
movsb
outsb
xchg
sarl
dec
xor
mov
add
and
push
inc
mov
inc
outsb
lock
mov
adc
xchg
sbb
ss
or
inc
and
enter
mov
mov
cmp
xor
push
mov
push
fbld
pusha
push
add
and
push
aam
mov
mov
mov
inc
cld
mov
sbb
sub
mov
hlt
mov
mov
lcall
arpl
or
cwtl
cmp
push
clc
lds
fidivs
cmp
add
mov
add
jo
or
pusha
push
outsl
lahf
sub
mov
pop
push
push
push
cmpsl
test
add
bound
dec
inc
insb
lods
jg
adcb
das
cmp
mov
sub
push
xor
sub
xor
fldenv
test
popa
sbbb
add
mov
lods
cmpsl
sbb
jo
ljmp
iret
popf
adc
cmc
cmpl
insl
clc
mov
shrl
arpl
fwait
push
dec
aaa
popf
out
push
out
aaa
inc
pop
in
dec
test
es
mov
jecxz
adc
mov
in
stos
inc
xor
dec
mov
insl
cld
imull
mov
int3
pop
push
xchg
dec
das
into
imul
push
mov
push
inc
dec
outsb
fildll
inc
hlt
dec
mov
out
or
pop
pop
je
or
loope
and
push
enter
ret
das
fwait
xchg
les
icebp
mov
push
add
dec
adc
push
iret
or
test
add
arpl
ret
jecxz
enter
sbb
and
jp
cmp
add
rcr
mov
lahf
fstpt
inc
pop
adc
ljmp
call
es
jp
or
leave
aad
pop
pop
mov
pop
stos
es
dec
cmpsl
mov
cmpsb
add
dec
xor
mov
add
jg
imul
or
cs
rcll
push
lods
imul
lahf
xchg
insl
or
andb
xlat
jl
outsb
ror
int
jns
fwait
ds
lahf
xlat
mov
outsb
fsubs
das
mov
loopne
shrl
sbb
nop
dec
callw
mov
lds
lret
jl
leave
test
mov
xor
cli
mov
xor
shlb
cmp
push
ds
add
pop
stos
les
pop
inc
je
adc
or
mov
push
inc
mov
popf
pushf
int3
imul
push
es
jbe
mov
push
ljmp
pop
adc
cmpsb
add
jl
jle
sbb
add
mov
insb
outsl
cmp
dec
stos
mov
ror
dec
fucomp
stos
sbb
pop
jb
int
xlat
sbb
iret
xor
mov
xchg
xlat
dec
fcmovbe
push
pop
sbb
decl
es
call
clc
pop
dec
inc
jg
push
dec
mov
push
add
inc
rol
div
or
dec
dec
outsb
inc
pop
adcb
add
cmpsb
popf
inc
icebp
mov
popa
pop
aam
roll
inc
add
push
movsb
sti
cmpsl
dec
dec
mov
pop
jmp
insb
fs
push
push
fs
cmp
sbb
jae
adc
jo
lea
nop
adc
call
add
pop
inc
addb
add
add
and
or
ljmp
add
adc
add
or
dec
inc
lcall
push
ja
dec
xor
jp
cmp
movsl
jns
xchg
add
sub
ret
lock
sub
test
mov
jns
pop
xor
fisttpl
add
mov
xchg
adc
je
adc
or
into
add
jo
stc
call
xchg
add
cmp
xor
and
sarl
and
xor
jg
xor
and
repnz
and
cld
mov
sbb
mov
add
mov
sbb
sti
mov
jne
cmp
add
int
add
sub
call
iret
add
movups
jg
cld
adc
sub
xchg
adc
mov
daa
xchg
lock
mov
add
adc
fucomi
mov
adc
cmp
mov
mov
add
inc
mov
cmpsl
and
jp
xchg
cmpsb
add
fistpl
sbb
shrl
daa
pop
pop
clc
dec
scas
inc
add
pusha
popf
lods
orl
adc
dec
test
outsl
pop
and
pop
add
pop
aaa
test
scas
add
mov
pushl
sbb
mov
ss
test
int3
pop
ljmp
xchg
sbb
hlt
add
rclb
loope
mov
jg
cmp
jnp
jb
cld
in
andb
lods
jge
fisttps
adc
mov
insb
xor
xor
pop
aas
pop
cmpsl
inc
vpandn
inc
rorb
cs
jne
sar
in
jb
insl
inc
fildl
add
aas
inc
lds
inc
imul
ret
idiv
and
lahf
pop
adc
or
add
clc
outsl
incl
add
dec
mov
add
jg
int
ljmp
aas
or
into
mov
inc
mov
sub
jg
and
lods
or
dec
jo
mov
inc
sub
pop
incb
pop
movsb
test
mov
rcr
fcmovnu
mov
jns
popa
adc
pop
inc
cs
and
and
add
sub
incl
xlat
sub
cmp
lods
pop
add
dec
ljmp
inc
add
sbb
ljmp
clc
cmp
sbb
adc
pop
mov
xor
jmp
mov
xor
xor
mov
loop
ret
dec
pop
cld
or
test
decl
jp
jno
mov
mov
adc
dec
or
xchg
jne
les
adc
push
fistpll
lods
andl
pop
dec
cmp
and
arpl
mov
add
loope
add
jns
fwait
mov
loop
pushf
add
js
cld
sbb
sub
xor
push
dec
mov
mov
or
shrl
mov
mov
test
push
pop
and
imul
add
iret
lret
add
sbb
sbb
rolb
sub
adc
aad
sti
adc
add
xchg
pop
cmp
movsl
mov
aaa
mov
outsb
loopne
jae
cltd
repz
adc
cmpb
fdivrp
pop
add
mov
mov
xchg
loopne
xchg
cmp
call
adc
sub
cltd
in
cld
push
push
cmp
push
jp
inc
xchg
pop
aas
lahf
sub
ja
scas
dec
leave
divb
or
lods
xorb
push
test
pop
xchg
nop
push
add
xor
sbb
pop
adc
cmp
mov
call
and
rcll
or
adc
out
lcall
insb
push
push
fildll
cmovle
add
add
hlt
testb
lahf
push
fmull
xor
call
or
dec
bound
push
sbb
out
out
and
mov
or
ret
ficomps
mov
dec
ja
inc
loope
imul
inc
aam
and
jmp
ja
mov
and
rol
test
insb
sbb
.byte
in
mov
in
sub
push
push
pushl
add
lods
std
jmp
push
lea
push
push
push
in
push
lea
push
call
incb
test
add
add
jns
push
lea
push
mov
imul
adc
mov
mov
xor
sbb
add
incl
push
loope
fildl
aad
sbbl
mov
ljmp
mov
in
mov
or
ret
add
pop
add
add
or
xorl
and
sbb
aas
and
and
fadd
int
std
add
shl
inc
add
pushf
movsb
push
sbb
ljmp
addb
hlt
xchg
clc
add
xchg
mov
mov
sub
dec
loop
and
add
dec
aad
pslld
pop
xchg
pop
scas
hlt
lock
or
add
and
imul
add
int
mov
flds
or
add
add
enter
xchg
cmp
test
sti
divb
das
orb
or
adc
xchg
add
pusha
add
out
test
mov
cmp
fnstsw
jl
add
inc
add
fucomi
lcall
xchg
cmp
add
adc
add
mov
push
mov
inc
fldcw
test
aam
inc
cmpsb
les
add
in
jbe
test
xorl
idivb
add
jecxz
out
jns
pusha
sti
es
rol
incl
cmp
mov
fcomps
in
decl
gs
dec
fs
in
push
fs
outsb
out
push
push
add
sub
sub
inc
clc
push
push
loopne
dec
jae
dec
in
push
push
pusha
data16
lock
jmp
sub
ja
jl
mov
add
and
imul
fstps
leave
hlt
sub
dec
les
adc
in
jnp
jae
movl
mov
sub
lds
jg
mov
hlt
add
sbb
mov
mov
scas
add
push
pop
sti
lcall
sbb
ja
outsl
mov
mov
enter
dec
add
inc
mov
add
push
adc
adc
cmp
lods
inc
inc
enter
mov
out
cs
pusha
mov
xor
add
add
add
ret
rolb
add
xor
adc
ret
and
xor
push
and
xor
lret
jbe
push
jmp
sbbb
push
fidivrl
ret
add
jbe
xchg
idivb
insb
fsubrs
rclb
loop
mov
add
dec
mov
mov
add
movsl
add
scas
std
outsl
mov
or
sbb
push
sbb
hlt
movsb
inc
xchg
fcmove
das
stos
cmp
add
sbb
test
lcall
sub
pop
jns
fcomi
jg
lret
add
xchg
and
push
daa
pop
add
shrb
jp
lock
fwait
gs
or
loopne
dec
movsl
sub
inc
in
pop
add
ret
pop
xchg
lock
shrb
hlt
hlt
imul
ret
lock
or
clc
loopne
mov
pop
daa
push
or
sub
add
or
add
sub
sub
xor
add
dec
decb
mov
jae
loope
ret
scas
xchg
sahf
addr16
das
adc
pop
outsb
xor
pop
mov
ja
bound
divb
push
loopne
test
nop
inc
xchg
outsl
sbb
mov
add
add
sub
out
add
sub
add
and
out
sub
cmpsl
add
loopne
inc
add
mov
stc
cmc
and
inc
addl
pop
das
in
push
xchg
mov
jecxz
jno
cmp
sbb
lea
aam
xorb
xchg
add
sub
sbbl
mov
lods
cmp
or
lods
or
scas
call
sub
outsl
xor
dec
ljmp
xor
or
nop
mov
jae
inc
jnp
icebp
pop
mov
add
mov
pop
push
popa
imul
jmp
xor
clc
or
sbb
dec
scas
fmull
nop
stc
out
adc
sti
or
repz
add
pop
mov
out
mov
pop
xor
add
jg
xchg
jb
add
push
fs
push
and
mov
das
test
mov
sbb
adc
sbb
addr16
dec
dec
jne
add
movl
pop
fstps
and
aad
push
cmp
xchg
insl
pop
out
xor
xor
push
or
jbe
fdivl
in
add
sub
or
nopl
cmp
pop
mov
jae
in
scas
lret
dec
clc
jg
scas
push
inc
repnz
xchg
push
dec
xchg
neg
call
sub
pop
outsb
imul
or
out
shll
mov
pop
adc
cmpsb
clc
rcr
sub
aad
pop
pop
out
std
daa
dec
stc
das
mov
jmp
cmpsl
popf
fistpll
add
enter
mov
and
push
bound
repz
mov
or
mov
sbb
out
aas
xchg
inc
test
add
or
or
out
sbb
add
cmp
ds
jbe
andl
stos
sbb
sbb
clc
pop
mov
decl
jl
push
subl
arpl
mov
scas
mov
pop
add
lods
jge
adc
addb
outsl
xchg
mov
pop
loop
pop
add
and
mov
mov
es
or
in
adc
ffreep
jl
cmpsb
roll
push
xchg
xor
sub
scas
iret
xchg
stos
add
dec
pandn
fwait
mov
ljmp
in
pushf
jg
dec
sub
and
inc
lods
popa
jae
jnp
sarb
add
add
push
xchg
cmp
sbb
repnz
dec
lods
loopne
add
das
adc
addl
ds
push
jecxz
add
pop
sub
push
push
adc
jmp
aaa
jge
cs
aam
fsubrl
sarb
pop
fldt
pop
test
ss
or
cmc
addl
and
sahf
adc
fnsave
xchg
jno
notl
adc
dec
jmp
push
mov
test
jb
lds
add
mov
inc
lcall
jg
xor
jnp
or
cmp
mov
adc
or
adcb
push
insb
add
jbe
adc
fcmovb
ret
sbb
push
jecxz
lock
das
adc
xchg
aad
push
push
cld
in
mov
jns
or
dec
inc
mov
outsl
test
mov
mov
inc
call
mov
aas
sub
shll
add
xor
xchg
icebp
sar
das
insb
outsb
push
mov
dec
fldt
rolb
add
stc
push
cmpl
incl
fildl
in
xchg
es
mov
pop
fwait
jo
mov
mov
das
mov
mov
fistpl
mov
add
jmp
sbb
sti
roll
jp
sbb
push
aad
fdivs
or
clc
mov
or
repz
inc
sub
lods
mov
lock
jmp
clc
sub
dec
fs
jb
xchg
xchg
and
lea
push
addr16
inc
fsub
or
in
jbe
inc
push
inc
dec
bound
aas
sbb
pop
sub
sub
adc
dec
inc
add
mov
add
jbe
push
add
sbb
add
mov
sbb
sti
adc
ret
ja
ds
xchg
subl
cmp
adc
mov
and
mov
andb
sub
xorb
mov
jmp
or
or
xchg
xchg
adc
jns
mov
cmp
or
push
or
xorb
insl
js
or
adc
jl
scas
lock
mov
punpcklwd
or
test
negb
jg
or
sbb
mov
jnp
cmc
pop
shrl
mov
mov
xlat
mov
and
les
push
inc
xchg
cmp
sub
mov
movsl
mov
mov
and
divl
xchg
xor
add
push
mov
mov
lods
stc
cmc
cmp
mov
pop
sbb
idivl
fidivrl
das
xchg
fbld
push
xchg
das
push
inc
in
mov
jnp
push
pop
addb
jne
dec
and
outsl
js
testb
shrl
jmp
adc
mov
fnstsw
out
inc
or
sub
xor
pop
sbb
xor
out
jns
out
subl
mov
fcmovu
mov
push
push
insb
rolb
rcl
or
xchg
stc
jmp
test
loopne
pop
adc
rcrb
jae
xchg
jp
push
data16
shlb
mov
jg
into
out
mov
dec
sbb
in
notl
mov
fwait
not
dec
xchg
pop
mov
push
ja
aas
adc
lahf
and
mov
inc
ret
xor
cli
add
pop
test
mov
mov
idivl
inc
sbb
repz
push
xorb
out
fidivrs
and
cmp
je
out
popa
mov
out
pop
div
mov
xchg
in
and
sub
pushl
inc
or
inc
inc
repz
ja
jg
mov
xor
xchg
push
mov
sarb
sbb
mov
ja
pop
fsubrl
xor
cmp
aad
in
aaa
cmp
fmuls
mov
lds
std
cmpl
sahf
imul
aas
xchg
mov
in
cli
cmpsb
mov
imul
push
push
sub
rorb
jg
jne
pop
jmp
sbb
and
adc
and
or
mov
pop
out
mov
ss
push
repnz
sub
out
inc
or
inc
cmpsl
or
inc
mov
iret
in
insl
insl
and
push
decl
std
popa
xor
pop
orl
fisubrs
movsl
or
int3
outsb
loop
jno
jecxz
out
mov
pusha
jmp
xchg
jnp
andl
sub
data16
lahf
jns
and
lret
or
aam
and
jns
call
or
mov
loope
adc
fcoms
test
pop
sti
div
repz
sub
movsb
xchg
mov
mov
ret
out
dec
pop
and
iret
mov
xchg
dec
fiadds
xchg
hlt
fucomip
pop
add
scas
insb
call
lods
xchg
adc
out
jae
jl
or
das
jg
mov
mov
add
sbb
std
int3
jmp
xor
loop
insb
lahf
adc
aas
test
dec
cld
jle
cmpsl
loope
mov
xchg
mov
adc
out
popa
dec
and
pop
scas
std
pop
mov
dec
or
call
out
addr16
add
or
std
ja
inc
imul
dec
push
mov
mov
or
fsub
fdivl
mov
sbb
enter
out
fcompl
mov
sahf
or
ret
insl
fwait
jb
sti
jnp
loopne
repnz
arpl
pop
int
call
pop
dec
pop
loope
test
inc
lret
daa
fldcw
jecxz
fndisi(8087
ds
jmp
mov
mov
inc
add
fisttpl
test
xchg
or
and
jg
orl
mov
ja
and
mov
mov
xor
ret
lcall
jecxz
test
ljmp
adc
aas
jg
cld
scas
add
popa
imul
push
negb
lds
lcall
and
cmp
ret
sti
into
push
in
addb
popfw
leave
addr16
loop
fistpll
test
cs
fs
loope
int
xchg
jbe
adc
mov
je
mov
icebp
or
adc
add
xlat
shrl
mov
popf
sti
incl
gs
int
rcll
adc
mov
sub
and
daa
jecxz
addr16
jns
inc
pop
das
sti
nop
pop
or
ljmp
sbb
fdivrl
cld
adc
cmp
sbb
adc
pop
insl
fisubs
jmp
push
add
push
in
adc
jo
and
stc
pop
les
enter
lcall
loopne
adc
popf
pop
loop
pusha
mov
js
sub
xchg
and
enter
add
xor
decl
pushl
insb
mov
sbb
mov
push
push
addl
mov
sbb
jmp
jg
ja
adc
lock
add
rorl
or
pop
outsl
and
out
test
js
inc
mov
mov
inc
add
test
int3
cmc
pop
clc
repz
xor
aas
shlb
or
pop
pop
cli
push
andb
pusha
jo
dec
mov
dec
xchg
sbb
and
int3
loopne
mov
mov
popf
or
mov
cld
pop
sbb
pop
inc
stos
inc
cmp
daa
into
std
fucomi
stos
mov
std
sub
sbb
je
insl
rorb
jno
repz
call
stc
fucomip
and
or
or
pop
leave
sub
jg
stos
enter
jno
dec
push
xor
jmp
mov
dec
or
adc
pop
daa
pusha
mov
and
adcb
adc
xor
sbb
in
movsb
sub
mov
les
or
cmpsl
stos
mov
inc
lock
lcall
scas
ret
aas
ss
adcb
xor
test
push
add
insl
iret
mov
pop
sub
mov
dec
out
jp
push
jno
addr16
pop
add
pop
add
pop
outsb
add
sub
lahf
add
xchg
jnp
or
cmp
cmc
sahf
inc
and
mov
arpl
outsb
fmull
cli
jmp
sub
jbe
mov
sub
andl
push
xlat
aas
neg
loope
cli
sub
inc
imul
cmp
out
dec
loopne
gs
cmc
test
xchg
fisubs
std
into
outsl
pop
mov
push
and
and
jns
inc
shlb
cmp
pop
lfs
ret
dec
call
stc
ljmp
mov
test
sub
imul
pop
or
fildl
testl
decl
icebp
cmp
xchg
lds
pop
or
adc
or
ss
xchg
aam
aad
aam
ss
lock
jo,pt
mov
push
inc
ds
push
call
imul
and
sahf
add
or
xchg
outsl
sub
scas
insl
nop
stos
xor
jnp
out
aam
pop
and
scas
xchg
incb
jmp
jle
pushf
jge
in
xlat
sub
inc
jecxz
jbe
ret
sti
cs
jbe
jb
rolb
aam
test
leave
hlt
mov
outsl
setp
push
stos
call
movsl
in
shrl
loope
cmpsl
jle
or
mov
jo
loope
or
mov
fisttps
fiadds
cmp
sarl
sti
fcmove
mov
dec
inc
enter
mov
movsb
push
outsb
aas
test
mov
aam
jbe
shr
adc
sub
lcall
xchg
hlt
adc
fwait
dec
cmc
das
jb
iret
popf
iret
inc
iret
push
or
mov
xchg
fstpt
roll
pop
cmp
cmpsl
incl
sub
mov
adc
test
xchg
adc
mov
cwtl
push
cmp
mulb
ss
pop
pop
enter
cwtl
jbe
jp
push
ljmp
xor
cmp
inc
mov
sar
mov
and
fucomi
push
lods
notl
mov
bound
flds
call
lods
jp
clc
push
stos
pushw
jge
cmc
aas
scas
stos
and
imul
xchg
push
mov
js
dec
js
mov
pop
inc
cli
stos
and
add
push
jg
sbb
sbb
into
es
sbb
mov
push
lret
ljmp
jle
in
pop
adc
inc
loopne
jge
mov
divb
sahf
pop
mov
push
ja
sti
xchg
in
pop
cmp
adc
arpl
cltd
fistpll
mov
sbb
sti
and
sub
dec
or
rdtsc
ret
sarl
ja
jmp
xor
jns
hlt
push
fs
xor
fucom
aas
pop
mov
mov
and
icebp
add
aaa
mov
std
xchg
test
mov
xchg
iret
dec
lock
hlt
push
pop
inc
movsl
adc
cmc
out
inc
dec
lock
sbb
lea
outsl
mov
push
test
sub
add
xchg
test
jg
xchg
mov
add
jmp
stos
sbb
dec
mov
repnz
add
shr
lock
push
sti
ds
test
call
sti
mov
mov
out
mov
aas
sbb
jae
adcb
test
xor
push
sub
mov
test
adc
fbstp
inc
dec
cmp
pushf
cli
negb
stos
jmp
jp
push
push
roll
or
lock
xchg
inc
aam
inc
inc
sbb
movhlps
mov
and
out
push
or
out
lret
jo,pt
lar
pop
mov
dec
mov
bound
test
pop
pop
dec
aad
sub
arpl
out
outsb
shrl
pushl
hlt
lret
daa
outsl
imul
repz
cmp
push
cmc
out
std
jle
inc
mov
mov
pushl
or
es
lea
popf
in
scas
push
or
inc
ret
scas
rcrl
loope
shl
push
or
nop
pop
mov
jg
sti
imul
rcr
xor
xchg
mov
ja
out
sub
or
aam
out
mov
inc
js
sbb
cltd
dec
pop
cmp
mov
aas
mov
loop
sbb
pop
fbstp
stos
xchg
pop
adc
sub
cmpsl
cmp
ja
cld
arpl
cmp
adc
out
jmp
sbb
out
jne
cli
add
push
jle
enter
clc
adc
sbb
cmp
mov
pop
ret
pop
or
mov
lock
dec
sbb
dec
cmc
and
out
fdivrp
in
cwtl
mov
sub
xor
cmp
pushf
xor
mov
stos
or
mov
test
mov
mov
repz
sbb
lahf
lock
dec
cmc
cli
add
sub
mov
rolb
add
jns
sbb
std
pop
jg
dec
imul
cmp
int3
rcr
pop
sbb
mov
mov
jmp
das
std
push
loop
roll
pop
xchg
inc
jmp
jns
sub
lahf
adc
loop
addb
sarl
inc
xchg
push
jl
je
push
cmp
pop
out
jge
cmp
maskmovq
dec
sti
cmp
cli
jbe
cmp
jne
lea
or
push
pop
mov
pcmpeqd
sbb
xchg
incl
cmpsl
call
mov
adc
xchg
rclb
rorb
jnp
jo
outsl
insb
adc
stc
mov
jecxz
xchg
dec
cld
push
pop
fcompl
or
aas
pushf
loopne
fidivl
push
mov
or
adc
ja
xchg
inc
std
add
add
cmp
imul
lahf
mov
mov
movsb
xor
shr
or
shrl
mov
xor
daa
ret
mov
sbb
lock
ja
pop
xchg
int3
push
mov
int3
bound
js
adc
sub
adc
mov
std
adc
ret
or
fisubrs
pop
std
out
lock
in
call
or
das
aaa
test
inc
xlat
xor
loopne
jno
out
push
jg
cs
ds
mov
mov
sbb
bound
es
iret
mov
mov
aas
pop
icebp
xchg
fisubs
jmp
scas
push
cbtw
dec
inc
add
fidivrs
movsb
and
xor
insl
push
cmp
icebp
movsl
cmp
fistps
mov
and
inc
or
or
jb
inc
mov
sub
dec
cmp
cmp
fisttpl
sbb
js
jg
nop
mov
bound
rcrb
xchg
and
aam
lea
iret
fdivrp
cmpsl
testl
sub
jb
push
insb
aaa
lea
mov
sub
adc
xchg
jl
dec
sarb
arpl
cmp
sbb
popa
sarl
add
lea
negl
aas
xchg
dec
cmp
jecxz
mov
dec
psubb
repz
push
std
es
jmp
xchg
xchg
xorb
fidivl
push
rorb
aad
push
adc
aad
test
sbb
imul
xor
cld
out
es
shlb
xchg
mov
fisubl
or
push
sub
jno
push
and
dec
stos
mov
daa
mov
sbb
lock
fdivl
cmp
insl
jae
fcomps
leave
sub
sarl
mov
sub
sub
lret
ss
fistpll
add
cmp
repz
jmp
xlat
adc
mov
mov
scas
xchg
ret
shr
and
repz
ja
hlt
jge
shr
shrb
fildll
mov
fsubr
loope
mov
lahf
or
sub
icebp
xor
sti
push
cld
aas
rcrb
repnz
dec
sti
das
into
icebp
jp
sub
sbb
mov
lock
and
adc
lcall
movsb
jle
fstpl
and
inc
nop
outsl
mov
filds
mov
and
fistps
mov
or
je
dec
cmp
dec
xorl
stos
out
aaa
dec
cli
mov
rcrl
jb
sub
push
out
fwait
dec
xlat
jmp
shrl
or
jno
out
jno
adc
pop
xchg
mov
das
inc
js
das
cmc
jmp
sub
jno
lahf
mul
mov
stos
rorb
mov
mov
pop
call
push
sbb
mov
je
ret
dec
mov
cltd
sub
in
lds
mov
xchg
scas
cwtl
mov
mov
pushl
insb
aas
inc
and
mov
mov
stc
lcall
leave
or
add
lcall
push
movsb
daa
push
out
sub
ret
cmp
jg
and
dec
cs
imul
test
mov
mov
sub
mov
ss
jo
lock
mov
mov
mov
adc
icebp
pop
lods
or
lods
aas
inc
test
xor
movsb
es
sub
sbb
pop
out
lods
dec
inc
or
cmpsb
ja
cmp
pop
fdivr
out
cmc
inc
xor
adcl
xchg
adc
mov
lret
sbb
aaa
sbb
leave
bound
add
jg
inc
jmp
enter
stos
jecxz
sbb
andb
icebp
mov
sub
sub
in
xchg
and
ljmp
jp
std
xor
jns
push
mov
loope
mov
lahf
in
sub
movsb
or
jl
pop
ljmp
call
ss
sub
decl
xorb
lods
leave
mov
fidivs
pop
or
iret
iret
data16
adc
sahf
aaa
mov
mov
std
js
fdivr
cmp
mov
insb
jo
pop
loopne
nop
int
fdivr
mov
pop
cmc
fwait
jns
cmpsb
dec
sarl
pop
das
out
stos
inc
out
sub
sbbb
aas
bound
lds
jg
sbb
sub
pop
loope
adc
into
test
daa
mov
push
fistpll
pusha
and
mov
mov
std
dec
lock
xchg
scas
pop
cmpsb
add
stos
push
inc
repnz
incl
xor
jg
pop
shlb
cmpsb
gs
xor
dec
mov
jg
push
push
cmp
outsb
gs
jnp
adc
jg
jne
inc
lods
mov
dec
jp
mov
or
into
mov
loope
fdivrl
inc
fdivs
pop
sub
test
je
sbb
jnp
adc
lock
and
nop
ror
hlt
mov
lock
xchg
or
xor
js
dec
lods
jg
decb
stc
adc
movsl
mov
popa
jo
frstor
jnp
jp
test
pusha
xor
clc
enter
scas
jb
loope
in
mov
negl
out
test
cwtl
fwait
xor
shl
popf
aam
mov
or
or
cmpsl
jno
mov
lock
xor
add
pop
xchg
mov
scas
jg
mov
cs
in
mov
lcall
push
sbb
nop
ror
les
and
pop
jmp
out
adc
bound
in
mov
push
inc
dec
std
inc
jno
fwait
inc
test
and
dec
push
add
out
out
mov
sbb
adc
dec
sahf
fistpll
cmc
add
in
xor
push
push
mov
push
ja
sbb
add
xor
ljmp
jecxz
push
pushl
mov
daa
ret
pop
mov
mov
icebp
xor
add
add
fiaddl
adc
out
mov
sub
xchg
xchg
testl
dec
pushf
and
push
pop
and
nop
pusha
incl
jle
pushf
fdivp
mov
fistpll
mov
add
imul
loopne
pop
xchg
jle
mov
adc
sub
outsb
jl
mov
mov
push
mov
mov
push
repz
jo
lcall
jge
adc
mov
jo
sbb
mov
ret
stc
mov
cmp
or
inc
jg
push
adc
jne
in
or
bound
sbb
ret
jmp
xor
push
jae
js
aaa
insl
lock
pop
std
cmp
lock
mov
test
icebp
pop
adc
and
loope
je
decl
xchg
test
sub
lahf
cmp
out
xorb
mov
gs
mov
push
out
or
mov
mov
jmp
push
mov
jg
jg
clc
jle
movsb
test
inc
xor
mov
sub
out
mov
les
add
inc
aam
jo
jmp
pusha
xchg
sti
cli
mov
push
adc
ss
mov
push
fistpll
popa
mov
stos
sbb
movsb
lock
pushf
xchg
loopne
or
pop
negb
or
in
ret
jg
xor
ret
mov
push
mov
dec
mov
stos
cmp
xor
popl
adc
adc
das
gs
sarl
in
loopne
cli
lods
cwtl
rcrl
jle
repnz
cmp
jae
repnz
addr16
xor
orb
xchg
jp
or
jecxz
inc
xor
sbb
push
push
and
sub
lock
cmp
sbb
adc
jg
pop
dec
push
incb
testb
adc
mov
ficoms
jecxz
push
lcall
fistps
push
popf
enter
jecxz
jl
pop
ljmp
sub
std
and
jmp
or
cmp
mov
loop
pop
push
and
fadds
add
testl
subb
js
mov
jle
std
lcall
test
test
dec
push
cmp
daa
je
jne
call
xchg
mov
js
jl
cmpsl
pushl
leave
and
adc
aaa
in
out
mov
mov
add
adc
std
mov
mov
fcmovnu
or
jo
push
fistpll
rcrb
mov
cmovle
ret
lods
inc
xor
sub
sub
movsb
icebp
pop
out
ja
call
mov
movd
pop
cmc
arpl
sub
sub
push
xor
dec
xlat
xchg
fs
adc
mov
shll
dec
push
pop
aam
dec
loop
and
mov
inc
xor
popl
add
jle
or
push
mov
cmp
jo
dec
lods
or
daa
lea
leave
fwait
ja
adc
push
stos
fsubl
movsb
stc
or
add
mov
icebp
shlb
test
dec
adc
aas
sti
inc
mov
ror
mov
idivb
dec
aad
out
mov
dec
push
mov
xchg
sub
popa
std
fisubl
ljmp
or
and
or
out
cmp
lea
mov
lds
movsb
or
add
sub
xor
jg
mov
pop
push
rcll
aas
aam
call
or
push
push
mov
andb
adc
adc
or
imul
jl
dec
icebp
popf
mov
push
add
sti
jmp
cmp
adc
pop
addb
icebp
xor
add
inc
jb
sbbl
loop
jg
pop
mov
cld
decb
sar
mov
cmp
sub
or
pop
jmp
ja
adc
mov
shll
out
int3
and
mov
iret
in
xor
daa
push
fiadds
or
push
sub
stos
cmc
xchg
adc
adc
pusha
shld
adc
ret
add
add
fdivrl
xor
and
jp
adc
cli
shl
fdivs
cmp
push
jae
je
mov
mov
dec
lret
aas
inc
std
or
cld
cs
jecxz,pt
in
idiv
sbb
push
fdivs
pushl
aas
or
sti
ds
sub
call
pop
stos
outsb
jmp
xchg
adc
cs
insb
push
imul
ljmp
push
in
mov
rol
inc
sbb
stc
mov
ret
notb
mov
lods
cmpsl
mov
inc
or
mov
jbe
push
shrb
lock
push
xor
iret
mov
fucom
das
data16
into
cld
jae
in
xchg
inc
aad
insl
inc
mov
in
mov
fucomp
aas
add
and
pop
cwtl
leave
sub
or
scas
out
dec
lea
add
add
out
ret
fildll
pop
mov
fstpt
push
pop
clc
nop
popf
flds
cld
inc
xchg
movsl
mov
sbb
lahf
push
sti
int
aad
pop
ds
cli
jae
pop
dec
mov
clc
iret
incb
adc
stos
cmc
pusha
add
in
mov
lea
les
mov
cmp
adc
pop
out
or
pop
js
sub
and
push
iret
push
adc
mov
and
xor
adc
stos
xor
test
sbb
stos
test
sbb
std
sysenter
cmpsl
jb
test
test
lret
stos
sub
clc
popl
or
jns
daa
jg
lahf
add
fs
cmp
fnsave
loope
pop
adc
shl
addr16
push
push
sarl
adc
jge
aam
mov
je
sbb
dec
cld
mov
cmp
cld
ja
add
stos
jmp
xchg
jmp
loope
testl
ucomiss
shld
and
imul
pushf
iret
cmp
sub
jmp
psrlw
loopne
std
shl
cmpsb
pop
add
test
mov
cmpl
mov
and
mov
inc
or
jp
add
ja
sar
arpl
loop
sub
mov
iret
lea
popa
je
aaa
testl
mov
add
aad
fwait
or
sar
js
sti
cmp
cmp
sarl
mov
dec
xor
cmpsl
js
lods
cli
in
bound
xchg
add
mov
jge
cmp
lcall
xchg
rolb
lock
mov
push
cmpsl
sbb
sub
mov
xchg
fisttps
cmp
ja
add
inc
sbb
out
and
int
scas
shll
dec
imul
cmp
pop
mov
sbb
sbb
incb
fimull
push
fwait
iret
jo
lods
pop
add
or
icebp
pop
dec
lret
mov
in
sahf
popa
lahf
ds
faddl
mov
mov
out
push
fisttps
mull
push
int3
dec
xchg
mov
or
cli
sbb
dec
jmp
or
dec
jg
xorl
pop
out
rolb
lret
sbb
das
cmp
inc
icebp
inc
outsb
push
call
jecxz
cmpsb
loop
inc
add
ficompl
das
adc
push
cmp
xchg
mov
mov
adc
popa
loopne
cmc
dec
mov
mov
out
cmc
sub
out
fcoms
xchg
mov
in
mov
sbb
or
aas
testb
adc
stc
mov
mov
into
inc
scas
add
cmpsl
imul
pop
mov
push
jge
add
push
cmp
pop
in
shrl
dec
ret
repnz
sub
ja
push
xchg
and
out
daa
std
aas
addl
xor
cwtl
out
lea
mov
imul
cmp
mov
loope
loope
test
mov
or
or
call
fists
je
add
cmp
rcrl
aam
or
adc
xchg
rep
js
cwtl
filds
adc
xor
lods
sti
jge
mov
mov
cli
jge
jnp
repnz
push
daa
js
roll
sti
ret
lret
xor
aaa
mov
cmpsl
jae
jbe
adc
jnp
idiv
popl
out
aaa
jmp
sbb
popa
lret
cmpsb
clc
fsubl
xchg
sub
arpl
jo
ljmp
and
in
pop
adc
cmp
jo
shr
movsl
jle
sbb
fdiv
decl
pushl
hlt
push
or
jmp
aas
adc
addr16
gs
ds
mov
cmp
insl
mov
mov
push
push
push
cmp
adc
push
decb
scas
decl
es
jae
mov
xchg
mov
in
jg
icebp
inc
pop
dec
push
lds
lods
mov
push
xor
shr
cs
outsl
mov
neg
jmp
dec
lret
fs
push
jmp
sbb
clc
and
mov
inc
dec
inc
cmp
add
fidivrs
or
pop
jo
adc
std
or
stos
sbb
pop
rcrl
js
fimull
lea
inc
pop
out
aas
popf
lret
inc
inc
mov
xor
cwtl
andl
and
int
addr16
jg
add
xchg
mov
popf
out
call
mov
mov
icebp
xchg
jecxz
pop
inc
imul
xchg
mov
push
lret
or
lahf
inc
sub
jo
ds
ljmp
insl
xchg
scas
fsubrs
fldenv
sbb
and
and
jmp
aad
scas
xorl
shl
xor
or
mov
outsl
xor
pop
addl
hlt
jg
push
sub
jmp
call
push
cs
fcompl
or
mov
jb
jmp
ljmp
jbe
outsb
mov
faddp
add
adc
lock
mov
loopne
pop
ljmp
sub
mov
mov
movsl
cltd
aas
scas
loope
mov
fsub
ret
mov
mull
in
sbb
cltd
push
xor
lahf
leave
jne
out
adc
sbb
cltd
sbb
mov
lahf
cmp
mov
jae
mov
cmp
hlt
mov
in
pop
lds
mov
xchg
fidivrs
inc
fnstenv
jecxz
int
fwait
dec
call
push
push
sub
sbb
aas
adc
data16
lds
cld
pop
mov
mov
push
and
cmpsb
mov
and
loope
outsb
cmc
popf
sti
jp
cli
xchg
inc
lret
jbe
mov
std
sbb
adc
rcrb
enter
push
jg
cli
scas
or
mov
adc
add
and
rclb
and
test
subb
shrb
pop
out
mov
push
push
aam
xchg
test
mov
inc
add
pop
dec
movsl
loop
sub
iret
inc
add
pop
iret
and
adc
clc
xor
leave
cmpsl
andb
mov
gs
in
pop
push
jg
xchg
ret
ret
inc
pusha
js
fcomp
or
jg
lcall
repz
pop
xor
jg
clc
add
push
stc
mov
iret
call
cmp
push
cmp
fbstp
xor
aam
dec
in
cmp
mov
xchg
sti
insl
sbbl
cli
sbb
add
xor
flds
incb
push
stos
add
stos
xlat
cmp
popa
jae
cmp
std
pop
jnp
add
push
out
sub
in
std
iret
mov
mov
and
jg
cmc
pop
cmpl
or
nop
ds
shlb
fucom
jecxz
testl
lret
repnz
stos
dec
pushl
lcall
out
out
sub
decl
decl
jg
stc
lret
xor
push
in
ret
sub
ja
clc
mov
adc
out
int3
iret
icebp
pop
and
ficompl
inc
fwait
mov
sbb
mov
dec
xchg
or
aas
push
lods
popf
push
adc
cmp
out
icebp
out
icebp
lahf
sbb
pop
jb
enter
xchg
pop
or
mov
testb
mov
xchg
lcall
cmp
shlb
cmp
jb
fildll
adc
cld
xchg
sti
cmpsl
loop
data16
mov
inc
jnp
xchg
adc
in
shlb
insb
adc
mov
lods
loopne
out
sub
inc
fidivs
imul
subb
mov
sar
out
add
lock
mov
or
jns
and
mov
jle
pop
and
xchg
sahf
cmpsb
rolb
dec
inc
repz
cmp
clc
outsb
push
or
and
sarb
jge
pop
mov
mov
stos
fisttps
scas
pop
fisubs
jae
adc
xchg
roll
push
add
add
mov
mov
leave
push
pop
icebp
adc
loop
cmp
add
add
mov
loopne
adc
lret
lcall
out
mov
mov
pop
mov
repnz
push
sbb
mov
out
insb
movsl
test
sbb
xchg
inc
int3
adc
adc
xchg
hlt
mov
fcomp
clc
out
std
addr16
outsb
nop
mov
dec
bound
jmp
mov
out
jl
pusha
sbb
lahf
and
in
jae
aas
les
mov
xor
inc
jbe
lock
mov
or
scas
test
xchg
insb
sti
fimuls
decl
jne
lahf
repz
dec
mov
push
push
and
decb
jecxz
mov
add
negb
push
sbb
decb
out
mov
inc
add
push
pop
cmp
mov
hlt
js
mov
dec
jns
lds
mov
cmp
or
subb
and
loopne
mov
loop
testl
add
fidivrs
lds
xlat
rcrb
jmp
loope
incb
aam
ret
icebp
inc
pop
je
xchg
std
xchg
fstpl
enter
cwtl
push
sub
cmp
arpl
aaa
mov
jnp
pop
stos
arpl
shr
negl
ja
xchg
aas
imul
mov
dec
das
inc
jg
scas
and
push
pop
cmp
xchg
aaa
mov
inc
xchg
mov
ja
je
dec
xchg
add
jp
addr16
sti
cmp
loop
out
ds
sub
xchg
fdivrp
fst
dec
stos
aad
sub
pop
std
cmp
cltd
xor
das
in
or
inc
jns
fldcw
sarb
xchg
call
add
jno
jbe
cmp
mov
shld
pop
clc
pushl
icebp
cmp
mov
mov
inc
add
jno
lock
adc
fdivr
add
sbb
jg
pop
mov
mov
pop
fs
dec
or
mov
roll
scas
mov
jns
nop
stc
jg
in
daa
jge
pop
cmpsl
aas
xchg
xor
mov
aas
mov
into
fisubrs
scas
scas
inc
cld
loope
clc
int3
adc
js
stos
cmp
std
dec
add
addb
xor
ja
iret
rclb
dec
cmp
xchg
sahf
mov
dec
in
and
push
negb
push
pop
imul
jg
shrl
pop
bound
pop
sarl
idiv
mov
sbb
xchg
cld
popf
std
cmp
pushf
incl
jg
cli
sti
imul
mov
cmp
into
test
sti
lahf
rolb
mov
js
mov
or
mov
adc
jae
xchg
push
or
dec
sbb
dec
and
push
xchg
test
mov
fmulp
lahf
jbe
enter
cmc
cmpsl
enter
or
ljmp
popf
dec
lods
out
jg
call
mov
inc
sub
push
outsl
fcom
jmp
sahf
xchg
imul
mov
lcall
ret
cmc
inc
out
or
adc
mov
mov
sub
test
push
mov
xor
mov
xor
enter
jns
cmovae
mov
lret
int
or
sar
add
sbb
and
out
ja
loope
cli
test
mov
idiv
shr
fstl
xor
or
lahf
js
aas
and
popf
stos
in
push
insb
mov
dec
mov
cld
outsb
inc
jb
sub
lock
loope
jg
sbb
sbb
aas
inc
jmp
adc
scas
js
in
out
jle
fldl
and
lcall
pop
aas
sbb
popa
ljmp
jno
movsb
push
pop
mov
cmp
idivw
mov
jmp
add
cs
outsl
mov
aas
jle
fisubs
push
aaa
decb
icebp
repnz
out
push
sub
xchg
mov
sbb
add
or
out
push
call
shlb
test
jo
xchg
sar
xchg
push
inc
cmpsb
iret
iret
or
xchg
jo
cwtl
loop
cwtl
sti
pop
and
mov
adc
mov
jnp
movsb
pusha
sbb
add
pop
nop
mov
ja
ja
rorb
add
xchg
mov
gs
test
and
iret
pop
xchg
loopne
add
lock
addr16
dec
xchg
and
fbstp
sti
adc
aas
inc
push
push
test
jmp
sub
adc
pop
pusha
scas
dec
mov
dec
sbb
fisubrl
add
in
pop
arpl
pushl
or
mov
aad
pop
pop
xor
push
lcall
std
dec
jbe
inc
imul
movsb
aas
push
sti
out
push
aaa
cmpsb
pop
gs
jnp
js
and
aaa
push
std
enter
xchg
cmp
rorl
push
pop
cmp
iret
lahf
in
push
filds
std
ret
push
jbe
je
lahf
std
and
sti
mov
push
sbb
jno
cmp
testl
not
adc
lcall
call
dec
int3
cmpsl
sub
out
mov
push
addr16
push
popa
imul
adc
mov
add
pop
movsb
adc
jl
ret
and
sar
data16
outsl
sbb
mov
loopne
sbb
lods
popa
xchg
push
mov
and
sbb
mov
inc
cs
fxch
out
pop
xlat
mov
mov
cmc
sub
jecxz
je
idivb
mov
imull
scas
cmp
insl
mov
mov
mov
pop
mov
push
mov
loopne
or
push
cld
fsubl
mov
rcl
mov
idiv
jecxz
lods
add
faddp
cltd
inc
or
mov
inc
xor
inc
sbb
push
inc
adc
push
mov
decl
out
test
aad
add
add
filds
stos
push
leave
push
stos
lods
cs
enter
push
dec
les
adc
fisttps
lret
rorb
dec
ret
cld
div
mov
and
sub
and
xchg
or
std
cmp
jns
jmp
sbbb
mov
jmp
arpl
loope
mov
aas
push
xchg
dec
outsb
ja
mov
arpl
or
pop
aam
pop
ds
jns
jg
adc
nop
fmull
imul
jno
xchg
mov
call
call
jecxz
add
mov
daa
mov
insl
cwtl
cmc
pop
dec
cld
mov
faddl
mov
sbb
pop
mov
jo
push
push
push
rorb
inc
cmpb
pop
xchg
lock
mov
arpl
or
mov
sub
ret
lahf
lods
push
out
jae
dec
xor
pushl
sbb
inc
idiv
shl
test
xorl
lock
fbld
jo
adc
cmp
lahf
into
xor
sti
insl
push
decl
cs
adc
scas
push
movsb
inc
xor
xor
into
inc
mov
and
loop
lea
lds
push
sub
bound
loope
lods
push
mov
clc
addl
mov
fwait
cmpsb
xchg
test
jg
mov
xchg
pop
add
sbb
mov
or
testb
inc
xchg
loop
shr
mov
lods
inc
mov
inc
adc
incl
sbb
cli
xchg
xor
and
push
fistpll
xchg
ss
push
xchg
incl
cmpsl
pushl
or
push
cmpsl
cmpsb
testl
outsl
int
incl
clc
outsb
js
sar
movb
sbb
inc
jg
xchg
fsub
imul
lcall
fsub
jb
ret
jecxz
adc
pop
dec
mov
xchg
ja
or
add
sub
mov
pop
xor
pop
adc
mov
aam
mov
xor
mov
xor
nop
aam
mov
arpl
fisubl
sbb
test
jge
add
add
or
ffreep
movsl
bswap
dec
jne
flds
mov
push
xor
sub
mov
cmp
jmp
pop
push
fisubs
das
or
add
or
cmpl
repz
and
add
das
in
aaa
sbb
fldl
das
jmp
bound
mov
push
jno
cmp
scas
js
jg
inc
fucomp
fwait
pavgb
scas
mov
test
mov
cmp
push
out
push
pop
fmulp
adc
nop
ja
filds
mov
leave
movsb
rcrb
inc
test
jmp
adc
cmp
mov
rolb
inc
cld
and
cmp
add
inc
nop
ret
lcall
ret
mov
lods
push
int
pop
insl
xchg
or
xor
mov
ret
ror
xchg
jge
or
aas
adc
test
xor
pop
in
inc
imul
cmp
pop
fistps
insl
or
mov
mov
aaa
push
jle
icebp
incl
cmp
pop
mov
test
fbld
lret
std
lahf
fdivrl
jecxz
aad
arpl
or
js
adcb
and
inc
cld
mov
cwtl
add
push
jb
testb
dec
popa
jno
out
add
sub
mov
ja
jmp
imul
les
jmp
or
inc
or
sub
sti
add
arpl
xlat
add
pop
hlt
and
icebp
in
cltd
jae
and
mov
lock
ret
jg
xor
pop
or
rcrb
pop
xchg
shr
or
ljmp
dec
out
lret
jg
sub
pop
pop
sbb
ret
in
repnz
xchg
call
out
fwait
clc
dec
mov
jnp
mov
js
inc
cmp
mov
mov
fcmovne
mov
std
inc
jo
cwtl
lds
sbb
xchg
jg
add
fisubl
dec
and
out
int3
cli
cs
mov
and
aas
push
outsl
mov
shr
leave
popf
inc
xor
cmp
or
cmp
idivb
jbe
scas
sbb
cmp
xor
aas
negb
lods
je
and
ja
iret
mov
jmp
je
lahf
rcll
adc
std
mov
scas
lret
mov
mov
or
fsubrl
or
jmp
inc
xchg
mov
lcall
mov
out
push
cmpsb
jmp
add
fldl
dec
ds
ds
cld
xor
cld
test
mov
or
mov
out
je
jne
out
sti
inc
jp
pop
mov
push
out
loopne
push
cmp
cmp
std
jnp
fnstsw
pop
pop
mov
adc
sti
mov
jbe
or
mov
aas
sbb
xchg
dec
test
mov
fcom
cmpsb
pop
cmpl
fists
xor
dec
xchg
add
xor
test
shlb
jno
inc
lods
jp
jg
aad
loope
cltd
pop
jmp
jnp
in
jg
in
sbb
xchg
pop
cmp
sub
sbb
mov
sub
std
out
mov
mov
xor
int3
cmp
iret
fwait
stos
dec
jns
sbb
inc
mov
frstor
sub
lahf
dec
lahf
lock
popa
push
scas
adc
and
icebp
sbb
or
xor
jnp
or
jle
movsl
lcall
sub
ja
outsl
pop
mov
cmp
sbb
xor
cmp
imul
neg
jecxz
ficompl
pop
arpl
out
xlat
ds
ss
inc
xor
pop
xor
daa
xchg
addr16
mov
and
fisttps
lock
aas
cmpl
sbb
xchg
jg
jne
in
mov
out
fistpll
fwait
mov
push
lahf
jno
int
add
or
pop
std
pop
in
fst
popa
mov
mov
mov
add
inc
fcmovnbe
sarb
inc
daa
int3
mov
and
stc
mov
test
int
ficoml
and
xor
sbb
ljmp
vpackuswb
ror
or
in
sbb
pushf
pop
scas
dec
js
call
cmc
shll
pop
mov
jg
and
inc
lods
nop
sbb
js
lcall
push
gs
push
lods
call
mov
jns
mov
out
or
rorb
ret
pop
fisttps
dec
adc
jp
push
and
xor
ja
jge
mov
jne
shl
dec
call
jg
aas
adc
sub
insb
popa
push
insl
in
add
ret
sti
cwtl
jecxz
psubusb
jno
out
clc
stos
addr16
or
push
mov
roll
out
mov
iret
test
inc
push
ret
sub
pop
inc
sbb
aam
inc
sbb
rclb
call
pop
adc
movsl
jmp
clc
add
push
pop
movsl
icebp
cmp
mov
push
icebp
and
enter
ds
jl
lahf
sbb
sahf
lock
cld
int3
mov
std
decl
sahf
push
sbb
push
pop
and
incl
xchg
cmp
outsb
mov
and
push
loop
out
pop
rcll
fidivrs
add
pop
jmp
pop
cmp
mov
mov
in
cmp
add
scas
fistpl
incl
xchg
jae
leave
cmp
xchg
push
out
mov
push
mov
xchg
das
mov
repz
call
mov
pop
add
mov
sti
sbb
shrb
jle
sbb
and
mull
sbb
pop
mov
and
mov
mov
sub
or
mov
sub
movsl
push
loope
cmc
fisttpll
or
push
push
lock
push
jo
sbb
bound
adc
or
mov
mov
in
scas
pop
push
mov
loop
sbb
rcrb
std
sbb
push
icebp
fiadds
fildl
push
repnz
push
mov
add
cmp
sbb
sbb
cli
ret
or
pushl
xchg
ret
lret
sbb
mov
inc
sti
out
jge
pop
in
insl
fs
mov
push
rcl
cmp
hlt
fisttpll
sub
xchg
outsl
out
aaa
incl
push
pop
lcall
sub
in
mov
sub
or
mov
sub
cmpsl
lea
leave
ds
repnz
cli
jg
lods
jl,pt
xorl
jb
sub
fcoml
adc
sti
mov
aad
push
sbb
in
cmp
lret
inc
filds
fimull
mov
and
jg
xor
dec
cmp
cs
scas
in
fldcw
out
mov
and
and
cmp
push
aas
shlb
add
sub
pop
pusha
mov
outsb
mov
adc
jg
push
outsl
adc
jge
adc
mov
or
xchg
xor
cmp
int
inc
xlat
out
data16
fcmovbe
mov
or
xchg
sbb
add
cmp
jne
fstps
xlat
out
aas
adc
and
test
adcl
and
sbb
or
insl
repnz
dec
lcall
cmpsb
jbe
or
add
xchg
jg
rcrl
gs
fidivrs
aas
fidivrl
and
and
idivb
push
add
call
lahf
add
or
enter
popf
inc
push
jne
mov
or
add
or
fbstp
aas
insl
stos
xor
ja
out
sub
pop
out
push
je
out
and
sbb
repnz
xchg
scas
popf
movsl
out
jg
jg
in
push
es
mov
cs
cwtl
pop
or
int
idivb
fistpl
pop
push
cmp
sahf
sarl
inc
arpl
jecxz
cmp
fisubrs
cltd
jne
vaddsubps
jnp
mov
pop
imul
adc
aaa
cltd
ja
repnz
fdivr
xor
mov
pop
outsb
lret
sbb
lret
ja
neg
jmp
mov
jne
xlat
cmp
fisubrl
fidivrs
add
xchg
mov
mov
call
adc
mov
dec
jge
xchg
cmp
jmp
jb
add
mov
stos
aaa
sbb
icebp
add
scas
mov
xchg
in
pop
mov
cwtl
sti
inc
xor
les
andl
jp
jns
testb
es
pop
repz
enter
push
push
jge
clc
mov
xor
call
add
xor
icebp
mov
sbb
adc
jae
loop
mov
push
adc
fildl
jmp
pop
ljmp
gs
enter
dec
ds
ret
cmp
cmpsl
daa
and
lcall
xchg
add
jge
mov
in
jbe
inc
dec
rorl
jmp
sbb
add
jg
xor
popf
aad
and
ljmp
idivl
aad
pop
xlat
lock
sar
jg
popf
sbb
iret
add
mov
push
and
outsb
adc
mov
aaa
push
mov
sti
rclb
scas
pushl
adc
into
enter
jmp
rcrl
jmp
pop
bound
mov
lock
sub
lsl
cwtl
cmp
cmc
cli
lea
rol
ret
pushf
scas
cmp
mov
fistpll
rcll
leave
pop
bound
loope
jo
imul
mov
xchg
shll
mov
jmp
dec
enter
jmp
jg
in
punpckldq
loope
gs
cmc
jp
out
mov
ffreep
mov
outsl
inc
popf
test
mov
jns
outsl
mov
lea
adc
jg
jle
sbb
mov
push
ljmp
sub
repnz
cld
mov
clc
mov
test
decb
fdiv
push
mov
dec
es
stos
loopne
cmp
cmp
mov
add
mov
add
dec
cltd
in
movsb
mov
fistpll
int
sbb
mov
cs
and
daa
js
cmpb
insl
aaa
sti
iret
dec
inc
mov
mov
adc
pusha
jo
inc
jp
and
pop
sub
lods
add
add
push
mov
mov
add
addr16
jne
and
aas
and
sbb
mov
mov
xor
xor
mov
and
in
bound
ret
jg
xor
mov
add
or
dec
mov
inc
fsubrl
jecxz
fucomip
fildl
jno
mov
jg
push
dec
push
sbb
mov
filds
cwtl
adc
jg
pop
ss
mov
fs
call
dec
mov
add
lret
xchg
add
mov
mov
out
pushf
fisubrs
mov
lahf
enter
loope
jmp
push
xchg
jle
xor
mov
mov
jg
mov
sub
shll
clc
cmp
jns
dec
arpl
jne
test
jno
add
add
aam
data16
loope
jno
fucomi
or
movsb
sarb
ljmp
ret
int
lahf
les
adc
jg
stc
cltd
push
mov
idivl
add
xchg
fsubrs
je
sub
cmp
andl
sbb
sarb
mov
xchg
clc
mov
popf
shll
fsub
mov
in
in
push
ret
pop
idivb
mov
sub
jbe
cs
in
mov
ljmp
decl
pop
js
and
mov
pop
add
popa
cwtl
inc
loopne
es
dec
arpl
jp
mov
sbb
jnp
lds
xor
sub
shrl
in
in
std
aas
mov
sub
xchg
aam
push
xchg
imul
outsl
adc
and
ds
add
sbb
pop
mov
ss
loope
and
cltd
lds
jecxz
and
xchg
iret
mov
fs
test
sti
and
mov
or
test
pop
bound
xchg
shl
cmp
icebp
arpl
jg
mov
rorb
aad
cbtw
popa
mov
loopne
or
hlt
rorb
and
out
dec
idivl
jg
clc
call
and
loope
cmp
imul
push
popf
inc
xchg
lret
insb
xchg
insb
es
push
jg
pop
movsb
xchg
sub
sub
pop
pop
scas
push
cmp
push
jne
hlt
pushf
mov
sar
or
incb
dec
loopne
pop
dec
pop
cmp
adc
add
pop
inc
xchg
bound
sti
iret
std
repz
loopne
push
sbb
push
cmp
fldl
repnz
loope
clc
jge
jle
icebp
mov
cmp
cmp
popa
push
sti
and
int
out
lock
icebp
sub
cltd
add
push
mov
and
and
push
pop
lahf
loope
daa
push
xorb
sub
fninit
incl
jecxz
out
in
mov
cli
xchg
xor
shl
idivb
or
test
loop
cwtl
fdiv
nop
lods
in
mov
and
cmpsb
jne
clc
jae
mov
rorl
add
push
mov
andb
inc
sti
adc
push
stc
sti
sbb
in
jg
in
lcall
dec
cmpsl
gs
aad
push
aaa
pop
mov
and
or
xor
jbe
fidivrs
xchg
lock
in
cmpsb
or
mov
out
outsl
or
or
arpl
aas
adc
push
or
mov
std
mov
or
scas
cmp
cmpsb
sub
mov
movl
pop
insb
jb
pushl
stos
or
jns
aad
lds
and
inc
sub
push
daa
rorb
stos
hlt
ljmp
jp
mov
sbb
loope
cmp
fstps
je
pop
mov
not
mov
xchg
pushf
pusha
xchg
and
ret
sti
popa
not
add
es
xor
adc
pop
lods
jp
mov
cmp
ficomps
adc
int
jl
scas
nop
dec
mov
cmpsb
adc
add
test
lock
or
fsub
cmpsb
es
cld
add
mov
aas
rcll
cmp
dec
incb
and
push
sbb
pop
stos
xchg
mov
subl
pusha
mov
mov
xlat
lahf
aas
dec
movsl
push
dec
lods
jns
pop
fdivrp
dec
aam
roll
stos
jo
cmpl
cli
aam
lock
mov
xor
push
loope
pop
mov
lcall
out
jmp
out
cmp
jl
ja
mov
and
lcall
out
sbb
loopne
lds
jno
stc
mov
setg
int3
push
std
gs
andb
and
xchg
outsb
and
cli
fs
jg
jg
mov
mov
or
add
cmpsl
rcrl
mov
inc
mov
and
cmp
adcl
xchg
mov
jo
jmp
mov
cmp
inc
loop
dec
cmpb
and
cmpsl
fbstp
sbb
leave
stos
jbe
fs
xchg
aad
mov
jecxz
jg
inc
jle
loopne
int
mov
add
popa
mov
and
in
imull
imul
push
icebp
aas
icebp
jecxz
cmp
bound
fmull
push
repnz
cmpl
jae
clc
dec
mov
call
movb
mov
add
test
push
or
jae
repnz
xchg
shlb
or
pusha
cwtl
mov
inc
inc
imul
cmp
test
negb
leave
lcall
cmp
mov
das
add
and
cmp
cmp
jae
pop
dec
xor
std
sarb
jne
xor
stos
xchg
aam
orb
stos
not
out
mov
pop
cli
mov
cmpb
xchg
add
jl
jo
dec
test
loope
fsubl
jl
xor
mov
xchg
std
filds
stos
stos
cmpsl
lods
cmp
popf
popa
rcrl
inc
jg
and
cmp
ds
lock
movsb
lahf
sbb
add
js
repnz
in
aam
mov
call
sti
mov
xor
and
bound
push
ret
sbb
dec
mov
jp
jg
jle
mov
loop
fidivrs
daa
insb
sub
incb
pop
adc
bound
mov
andl
inc
cmpl
xchg
aam
cmp
jo
pop
sti
in
std
rcrl
std
mov
js
and
pushl
mov
lds
jb
mov
test
and
inc
negb
ja
mov
mov
add
sbb
or
outsb
inc
mov
gs
pop
cld
jmp
push
sub
mull
and
aas
sar
sti
fmull
mov
add
or
test
lahf
sbb
imul
roll
repnz
push
adc
jge
std
cmp
xor
xchg
outsl
add
fdivl
sti
xchg
cli
dec
nop
xor
xor
xchg
inc
fidivs
cmp
cld
and
push
push
dec
cli
xor
jmp
pop
mov
adc
sbb
dec
pushl
xchg
cmp
shll
mov
hlt
outsl
jp
into
sbb
adc
aam
jg
mov
hlt
cmp
cmp
cli
iret
js
mov
ss
std
idiv
cmpsb
mov
push
jnp
mov
sub
out
filds
daa
mov
jp
jne
jnp
mov
cmc
mov
daa
div
jecxz
ja
mov
aas
scas
add
in
stos
sarb
mov
jg
adc
repnz
jg
push
out
mov
add
dec
cwtl
dec
aaa
or
jecxz
pop
mov
pop
hlt
out
fdivrp
xor
mov
fidivs
mov
inc
aad
mov
hlt
jmp
mov
cld
mov
outsl
jmp
loope
fbstp
xchg
hlt
outsb
cmp
jne
rclb
push
int
ret
sub
ja
cli
dec
jge
cmp
mov
dec
mov
xor
push
les
mov
mov
sub
jmp
jno
mov
inc
adc
ds
rolb
in
mov
lcall
pop
pushf
movsb
lock
mov
loope
fwait
xchg
test
inc
pop
mov
aas
or
sbb
lea
cmp
mov
fnstsw
xor
cmp
sub
mov
loope
enter
pop
mov
andl
cld
inc
mov
pop
aad
or
jg
lds
inc
adc
xchg
push
aas
aad
dec
add
cwtl
hlt
test
xchg
pusha
fiadds
insb
es
dec
add
bswap
mov
lods
cmpb
sbb
and
outsb
jg
stc
xor
add
dec
jg
filds
pop
test
jg
ja
push
mov
mov
dec
sbb
adc
add
lahf
and
fucom
dec
call
push
lods
pop
sar
jnp
xchg
jle
push
inc
pop
aam
test
jo
repz
jg
add
jp
ljmp
je
aas
cmc
lahf
mov
pop
popf
add
aas
sbb
xor
xchg
shr
std
and
push
jno
sub
lock
xchg
fdivrs
std
jae
std
mov
push
inc
mov
push
hlt
aas
out
lock
xor
dec
pop
inc
decl
addl
andl
insl
cmp
mov
mov
mov
cwtl
add
xchg
jns
jecxz
iret
cli
aaa
fidivl
cmp
push
cmp
inc
lds
jle,pt
pop
hlt
mov
test
mov
jge
jne
dec
lds
fs
fisttps
addr16
stc
aaa
cwtl
jmp
lahf
daa
js
in
lea
fistpl
maskmovq
faddl
fs
push
xor
popa
cmpl
mov
das
mov
xlat
ja
push
std
maskmovq
negl
xor
into
nop
fxch
lods
bound
out
push
xor
aas
adc
cmp
in
aas
mov
in
shrb
jp
shl
add
loope
mov
pop
cld
dec
cltd
arpl
into
aas
sbb
cmp
add
clc
adc
or
loope
decl
divb
add
dec
sahf
bound
scas
cmp
pop
or
loopne
mov
imul
mov
add
jno
push
jp
out
xor
scas
push
xchg
fucomp
ficoms
cld
int3
aad
scas
shl
call
sti
fdivl
je,pt
and
sbb
mov
mov
pop
hlt
inc
and
jg
cmp
jns
mov
inc
xor
hlt
dec
push
jp
clc
mov
push
pop
sbb
push
cli
jle
aam
scas
pop
sbb
ret
cmp
jg
pushl
cmc
or
mov
cmp
adc
inc
mov
int3
jle
lods
incl
jge
xchg
js
sahf
call
stc
dec
notl
mov
push
rorl
or
loop
add
xor
mov
pop
adc
xchg
scas
jno
mov
mov
fcomps
inc
push
mov
jo
flds
fwait
pop
lods
add
clc
icebp
pop
cmpsl
push
cld
jg
js
lods
push
or
lahf
scas
loopne
fmul
xor
inc
aaa
sub
out
sti
in
inc
pop
mov
pop
and
add
dec
cld
ret
or
clc
ds
sbb
push
jg
inc
dec
pop
jmp
js
cmp
cmpsl
jmp
pop
mov
out
icebp
push
repnz
xorl
push
jo
pop
cmc
mov
addr16
stc
mov
incl
mov
sub
lea
insb
xchg
cmp
insl
ret
or
dec
daa
cmp
pop
sbb
iret
adc
cltd
rolb
or
es
adc
cmp
push
and
ret
pop
mov
adc
call
outsl
mov
out
icebp
cs
outsl
sbb
or
movl
dec
daa
insb
outsl
jecxz
lds
popf
call
fistps
ret
lods
decb
mov
adc
jno
pop
pop
aam
fdivs
xor
cmp
sub
jae
pop
mov
int3
in
sbb
and
adc
push
or
cld
aas
cmp
adc
xor
fistpl
rolb
jp
sub
bound
mov
pop
movsb
mov
xor
shr
jo
jecxz
xchg
mov
cmc
loopne
pop
or
std
push
or
cmp
inc
mov
push
ljmp
lahf
and
mov
mov
pop
repnz
add
lahf
mov
mov
popf
mov
shl
mov
mov
push
jle
sub
aad
lds
sbb
testl
loop
pop
popa
je
sbb
jp
cmpsl
pop
pop
cmp
ljmp
adcb
cmp
sbb
bound
sub
adc
push
test
sub
imull
shufps
divb
popa
aaa
jnp
daa
mov
cltd
xorl
call
cld
push
mov
xchg
ret
inc
hlt
js
xor
in
std
ds
dec
or
cmp
cld
or
jecxz
push
dec
cld
pop
cld
aad
or
out
pop
inc
mov
jnp
sti
lret
aad
pop
roll
cwtl
loop
pop
pop
cmp
push
cld
dec
cmp
lret
mov
ret
mov
add
int
sbb
mov
out
or
dec
daa
lods
je
xlat
pusha
inc
adc
js
adc
clc
inc
call
jno
test
and
lods
jnp
out
rorb
stos
sahf
outsl
out
inc
fldl
movsl
cmp
pop
push
jbe
fistl
arpl
add
sub
or
repnz
lock
jae
pop
fiaddl
fbstp
cli
adc
popf
and
mov
test
sbb
cli
scas
js
addr16
mov
jae
and
pop
addl
ret
sbb
cmp
jp
in
cwtl
jle
popa
sbb
sarl
sbb
mov
out
ret
cmc
xor
or
insl
jge
xchg
xchg
inc
xchg
or
jb
call
push
mov
sub
or
cmc
ret
push
stos
out
out
cwtl
pop
push
int
sarb
shll
jmp
fbstp
inc
mov
or
adcb
adc
test
outsb
mov
cmp
xor
adc
mov
shlb
sti
xorb
in
int3
xor
shrl
aas
out
pop
lcall
dec
and
xchg
adc
insl
scas
pop
push
push
fdivrl
pop
mov
jg
dec
xchg
dec
ljmp
sub
cld
add
adc
lret
dec
dec
dec
or
inc
mov
xchg
push
arpl
stos
mov
lock
mov
loopne
push
std
push
call
out
repz
out
movsb
inc
push
xlat
call
mov
inc
sub
pop
cmp
dec
sbb
push
inc
pop
ljmp
and
cmp
mov
mov
sbb
sub
aaa
inc
orl
add
sub
test
loopne
and
sbb
cwtl
iret
stos
sbb
jnp
pop
mov
or
sub
dec
rcll
xor
stos
nop
aaa
dec
dec
lea
xchg
pop
test
push
mov
jns
mov
jg
push
inc
and
ja
into
decl
icebp
pop
add
cmp
sub
jg
outsl
fcmovb
icebp
mov
push
push
call
rcrb
incl
mov
test
sbb
push
leave
mov
sub
sub
ret
hlt
and
adcb
test
outsl
jge
popa
mov
add
add
ficoms
icebp
adc
clc
xor
call
add
fdivrl
gs
je
psrld
inc
loop
sar
aaa
std
mov
imul
ja
aas
cmp
popa
mov
push
push
hlt
sbb
popa
cli
xchg
hlt
jg
les
sub
pushf
or
idiv
out
mov
xor
movsl
mov
xor
std
pushf
adc
push
jnp
mov
sbb
xchg
inc
out
xchg
push
stos
mov
and
outsb
add
mov
inc
lock
mov
insb
xchg
ds
mov
cli
loope
jmp
jo
test
jmp
es
jmp
lods
push
adc
icebp
pop
adc
sub
clc
out
rclb
inc
subb
out
loop
aas
pop
and
lcall
cmp
xchg
pop
loope
push
jbe
lea
lock
arpl
cmpsb
cmp
cmc
jne
inc
push
or
int
cmp
mov
loope
aam
repz
mov
aad
loopne
inc
mov
mov
mov
push
movb
fstps
cs
fimuls
loop
xchg
mov
push
leave
push
or
mov
sub
xchg
xchg
std
and
loop
aaa
jmp
sub
jecxz
mov
movb
lahf
jecxz
sar
dec
es
pop
jbe
pop
inc
sub
cli
mov
jg
mov
out
dec
xchg
xchg
popa
push
gs
stos
mov
in
cs
lods
jmp
icebp
sahf
iret
or
fdivrl
les
pop
push
icebp
pop
iret
bnd
mov
cli
mov
out
pop
bound
stos
aam
adc
pop
std
decl
xchg
dec
movb
movsb
shll
jmp
mov
and
lock
push
fisubrs
fimull
dec
ficoml
pop
jecxz
inc
lock
cmc
ss
and
bound
int
mov
ja
enter
xor
pushf
shlb
or
hlt
clc
stos
arpl
cld
pop
mov
ret
mov
aaa
clc
jbe
in
add
push
jg
test
rep
in
scas
fs
sub
adc
ljmp
in
icebp
out
sarb
insb
xchg
rclw
adc
shll
into
lds
bound
mov
iret
pop
push
jns
jg
call
or
sbb
push
add
pop
jmp
fidivrs
mov
cmp
and
data16
add
enter
cld
add
ljmp
fsubr
data16
and
jg
rorl
jmp
addr16
jmp
xchg
loop
mov
cltd
out
or
jmp
clc
mov
hlt
data16
xor
pop
jae
jno
sub
add
or
fistpll
inc
aad
pop
jo
cmp
jg
or
loopne
or
loopne
pop
sarl
filds
clc
mov
inc
dec
or
loope
sbb
mov
pop
cmp
mov
xchg
mov
cli
test
dec
and
int
sub
cld
popa
call
xor
shrl
add
jg
jge
mov
in
movsb
lcall
mov
pop
movsb
pop
popa
aam
das
out
mov
inc
push
and
shl
jecxz
test
movsb
enter
inc
shll
push
jns
mov
imul
pop
add
jno
inc
xchg
dec
inc
ret
cmp
inc
mov
or
pushl
sti
jg
mov
mov
xchg
cs
call
notl
outsl
cmpsl
dec
sub
loope
aas
idivl
push
add
test
shrl
xchg
loopne
push
mov
mov
mov
jmp
mov
addl
pop
dec
leave
out
inc
in
cmp
es
pop
sub
decl
pop
jecxz
imul
jo
lahf
shr
jl
ret
mov
inc
xchg
sbb
popl
stos
push
cli
jbe
or
cld
xchg
popf
or
iret
loop
test
stc
repnz
std
outsl
xchg
lret
inc
jno
pop
jnp
int3
mov
inc
jg
mov
push
mov
add
outsb
ret
dec
add
hlt
xor
loop
push
jg
loope
repz
dec
sub
ja
int3
ljmp
and
jl
data16
int
rcrl
mov
test
dec
lahf
or
and
xchg
daa
cltd
xchg
dec
clc
negl
xor
out
in
fmull
es
inc
pop
sbb
jno
sbb
dec
cmp
mov
pop
je
mov
sub
clc
fistpll
or
insb
lods
cs
inc
js
in
test
insb
bswap
adc
pop
jg
sarl
addl
sti
jg
cld
es
aaa
push
ljmp
adc
lods
sub
ret
dec
mov
out
inc
sub
cmpsl
decl
lock
imul
pop
mov
jmp
pop
pop
outsl
mov
inc
sub
mov
sbb
pop
sti
daa
push
inc
and
pop
or
in
movsb
out
cmp
sbb
push
pop
xlat
jmp
les
je
xchg
hlt
pop
clc
scas
pop
leave
cmp
call
adc
dec
mov
pop
and
test
out
cmc
insl
roll
mov
jmp
fisttpl
mov
adc
cmp
seta
xor
jnp
popa
mov
popf
sub
testl
push
shrl
push
dec
xor
aam
mov
lods
add
fisubrl
push
add
cmc
push
fs
out
dec
stos
stos
fstps
aas
adc
repz
test
ja
push
and
aas
mov
mov
cld
xchg
sub
xchg
sub
insb
sub
loop
jnp
adc
incb
test
cmp
cld
rol
mov
std
adc
shll
xchg
loopne
jmp
fs
jmp
adc
insl
dec
push
fs
shr
cltd
cmp
fucomp
aas
push
add
cltd
jge
cmpl
add
inc
push
cmpl
cmp
mov
adcl
test
pop
in
xchg
loope
test
sbbl
mov
lahf
mov
ss
pop
xor
das
lea
loop
jecxz
sbb
or
pop
loope
xchg
push
pop
push
sbb
xor
dec
dec
aas
cmpsb
out
sbb
sub
push
mov
dec
jmp
inc
cmp
arpl
or
jp
jnp
lret
pop
mov
jbe
and
xchg
adc
jl
out
outsb
mov
inc
push
and
xor
loopne
dec
addr16
mov
cmp
insl
pop
mov
test
adc
add
adc
cmpsl
mov
push
push
mov
jge
imul
sub
out
mov
push
cmp
out
pop
clc
dec
pop
pop
xchg
loop
inc
repz
rol
mov
add
pop
call
ja
loop
idivb
roll
ja
cmp
sarb
push
push
and
jmp
jo
add
cmc
mov
hlt
add
test
inc
test
adc
push
fistps
sub
xchg
mov
push
mov
cmp
add
push
cmp
ljmp
jge
mov
cmp
in
sbbl
adc
pop
insl
mov
jle
loopne
ret
insb
int
push
mov
jecxz
xor
ret
orl
cmc
cmp
mov
es
rorl
test
mov
sub
std
rolb
mov
cmc
fnsave
dec
ja
xor
movsb
loope
ja
push
fsts
dec
lahf
mov
adc
jno
fbstp
jmp
mov
insb
daa
rclb
out
mov
inc
mov
lcall
shrb
in
sub
popf
aam
dec
cli
mov
cs
cvtps2pd
lock
push
mov
aaa
fsubrs
jmp
imul
mov
aam
pop
xchg
ja
loop
and
rcrb
sbb
jge
inc
imul
mov
adc
xor
cmc
inc
testb
jg
in
loopne
xor
loop
sti
sub
mov
inc
push
negl
fmull
pop
dec
pop
mov
pop
call
dec
mov
cmp
outsb
lret
stos
js
aad
mov
pop
cmpsb
sti
lods
push
fdivrp
and
frstor
out
adc
and
or
add
mov
and
mov
shlb
sbb
fdivrl
stc
dec
and
std
jg
cli
arpl
aaa
xchg
fs
andb
or
hlt
adc
inc
int
cmpsl
pop
xchg
fcompl
test
sub
cli
nop
out
div
std
sti
adc
add
adc
pop
push
mov
lds
roll
add
mov
add
or
jae
mov
orb
sar
pop
mov
aad
ds
or
lods
cmp
bound
mov
arpl
xchg
in
ss
cmpsl
in
sbb
and
pop
or
aam
dec
add
and
xor
xor
jg
inc
mov
and
fiaddl
mov
sbb
and
sub
pop
dec
in
fisubrl
stos
mov
insb
add
pushf
add
jmp
xchg
fistps
in
and
push
mov
fldcw
or
push
clc
sbb
lods
jl
fdiv
fucomip
jle
sbb
adc
lret
imul
ja
jo
push
fs
mov
jns
add
pop
mov
mov
or
or
inc
out
lret
ret
add
imul
mov
or
jne
mov
mov
fcoms
pop
imul
aam
imul
pop
bnd
mov
or
or
pop
push
addl
pop
mov
and
push
add
pusha
sbb
pop
icebp
das
pusha
cmpsb
or
sbb
rorl
push
mov
xor
lea
fcmovnu
mov
mov
and
sbb
repz
insb
outsl
insb
add
jo
shrl
jmp
adc
enter
add
ficomps
adc
insl
idiv
mov
xchg
cld
shlb
jle
add
jbe
add
inc
repz
jg
mov
xchg
jg
pop
add
stos
dec
and
inc
test
adc
mov
pop
loop
loopne
cmpsb
or
mov
sub
inc
cmp
repnz
mov
jmp
ja
or
mov
jle
add
xor
xchg
or
mov
jecxz
arpl
adc
mov
cmp
jae
mov
mov
stc
mov
aaa
mov
dec
ss
nop
nop
fstps
pop
cmp
enter
jecxz
stos
xor
pop
shlb
push
jp
inc
into
xchg
lods
dec
in
lock
xchg
mov
add
cmp
das
xchg
ret
adc
dec
sahf
outsl
clc
incl
pop
jl
add
sbb
loopne
pop
cmc
inc
add
push
adc
mov
mov
add
outsl
outsb
sbb
popf
inc
mov
push
jl
pop
test
pop
lret
ljmp
mov
mov
jecxz
out
jb
add
aam
push
mov
push
or
fucomi
insl
pop
dec
fdivrp
mov
scas
sti
loop
je
push
dec
mov
js
mov
div
adc
add
lds
mov
lret
leave
fwait
rcr
sub
inc
das
insl
mov
cmp
and
add
or
outsl
ja
movsb
lock
adc
pop
or
sub
mov
test
push
push
jne
or
mov
pop
jg
mov
mov
push
out
mov
lcall
and
push
leave
xor
and
subl
mov
enter
test
add
and
or
test
add
ja
add
shll
outsl
daa
jae
and
popf
add
inc
jg
jb
jo
mov
pop
jle
mov
test
fistpll
imul
dec
fcoml
sahf
adc
jg
ljmp
inc
push
enter
ljmp
aam
test
int
mov
sub
sub
adc
dec
pop
adc
add
inc
jl
outsl
xor
and
or
push
leave
cld
pop
mov
jg
mov
js
add
out
dec
jne
outsb
push
push
add
inc
push
in
fwait
outsb
por
sub
push
repnz
inc
pusha
jecxz
decl
xor
stc
mov
pop
dec
jns
push
lods
test
ficompl
iret
adc
leave
ret
xchg
push
insl
inc
std
inc
or
adcl
jb
cmp
lock
clc
jg
and
inc
scas
fistpll
cmp
mov
ret
outsl
cli
add
sarb
rolb
sub
bound
add
outsl
mov
cwtl
add
orl
pop
movsl
aam
ja
bound
ret
inc
or
fildl
sub
ja
mov
cmp
pop
jl
nop
cmpl
testl
mov
leave
xchg
test
jl
shll
mov
or
inc
push
imul
mov
pop
dec
test
fsts
mov
or
out
sub
cmp
mov
inc
mov
jp
and
add
test
jb
push
mov
push
xchg
lea
push
stos
imul
sbb
xchg
add
subb
ja
add
push
push
ret
push
mov
incl
sbb
mov
out
cld
pop
call
mov
cwtl
adc
inc
xchg
xor
cmpsl
rclb
mov
adc
imul
mov
jnp
jle
std
adc
hlt
cmp
das
repnz
testl
pop
mov
xor
pusha
cmp
dec
mov
lds
cs
inc
aad
dec
inc
andl
push
add
push
aad
xor
popf
call
jle
dec
jne
pop
jae
pop
sub
add
aaa
cld
mov
xor
dec
call
push
aam
stos
xor
adc
inc
pop
insb
jae
loop
ret
repz
rcr
fsub
cld
lahf
inc
dec
xchg
lcall
call
jge
adc
lret
mov
jne
jle
dec
pop
or
pop
aas
call
cld
jne
into
dec
or
dec
rcll
fwait
or
add
push
fdivr
into
fwait
adc
ja
cmp
rcll
adc
stos
stos
js
insl
adc
push
pop
ljmp
das
pop
mov
mov
adc
mov
xor
lcall
sub
mov
sub
or
call
fs
xchg
or
xchg
and
add
xchg
int3
add
mov
mov
jno
test
daa
fs
xorb
push
je
insb
out
xchg
sarb
loop
movsb
lcall
fdivs
dec
jae
inc
mov
sbb
xchg
js
xor
mov
adc
xor
les
mov
mov
fiaddl
adc
aaa
cmp
mov
push
jl
adc
cmc
sub
inc
mov
in
fistps
scas
jns
cmc
mov
mov
adc
add
bound
cwtl
push
into
repnz
push
cwtl
sahf
jo
push
pop
rorl
out
add
nop
aaa
jne
xor
in
jmp
jns
aad
dec
aam
jmp
xor
jns
adc
xor
xor
bound
push
int3
das
jl
cld
fadd
push
stos
arpl
and
jmp
pop
rcrl
int3
cmp
xor
dec
loopne
scas
mov
mov
and
mov
sar
jne
cld
movaps
sarl
add
fdivl
push
or
dec
adcl
xchg
pusha
or
jb
or
js
jb
mov
add
adc
test
cmp
jmp
js
dec
mov
inc
inc
imul
lcall
int
add
sbb
pop
jecxz
cli
or
nop
push
push
add
push
push
aam
add
mov
pop
outsb
lahf
push
mov
push
fisttpll
mov
mov
push
imull
mov
movb
lods
and
jbe
inc
insb
push
add
add
loope
enter
adc
xor
loopne
repnz
out
add
icebp
xor
mov
fwait
aad
cmp
mov
inc
push
fidivrs
xlat
jg
scas
mov
sbb
cld
add
sub
sahf
push
sub
inc
mull
jp
mov
test
ljmp
aaa
mov
pusha
lods
sub
test
adc
mov
inc
xchg
pop
fimuls
test
stc
popf
jmp
push
jmp
fdiv
orb
or
dec
pop
jmp
cmp
or
add
outsl
aaa
shlb
xor
popa
mov
rcl
or
arpl
push
ljmp
or
fs
jp
sti
pop
js
lea
dec
sub
cmp
mov
xchg
jle
je
cs
mov
pop
mov
and
insl
shrl
fisubl
aam
repnz
pop
xchg
clc
incl
and
cld
add
sbb
insl
pusha
test
add
sub
dec
adc
dec
inc
test
lret
or
pop
loope
pop
adc
push
js
ja
or
push
add
stc
xor
xchg
lahf
pop
cvtpi2ps
insb
fisubrl
mov
les
lock
fldenv
mov
push
mov
add
mov
cld
ja
mov
icebp
sbb
int
ret
and
xor
dec
movsl
ljmp
push
insb
scas
jp
sar
adc
sbb
mov
inc
ret
pop
in
pop
xor
rorb
add
out
push
mov
adc
jns
push
inc
mov
pop
xlat
jmp
les
das
insb
pusha
xorl
xchg
adc
pop
pusha
or
je
jbe
xchg
jle
cli
subl
or
xchg
push
cmp
stc
cmpsb
call
rorb
pop
pop
mov
push
cltd
mov
add
sub
pop
sub
dec
popf
pop
and
test
stos
clc
movsb
and
repnz
add
ret
sbb
inc
adc
pop
int
add
sub
mov
mov
mov
ret
ljmp
sub
dec
mov
test
fwait
mov
ss
mov
frstor
fldl
jne
dec
push
sbb
xchg
cmpsl
cltd
pop
pop
sbb
testb
and
push
outsl
scas
adc
xor
mov
mov
pop
xchg
hlt
fildll
sub
cs
es
pop
fsub
or
xchg
fnsave
les
sbb
outsb
mov
pop
ret
pop
int3
jnp
xchg
lret
js
mov
cmp
sub
mov
mov
or
mov
insb
mov
jb
in
and
and
xor
enter
sbb
sub
cwtl
mov
mov
test
sbbl
push
icebp
add
add
fistpl
pushf
andl
pop
sbb
inc
pop
or
aad
data16
sbb
nop
jae
mov
add
sbb
icebp
xchg
out
adcb
or
mov
jge
fucomip
es
xor
ret
push
mov
call
push
mov
fwait
push
push
stos
sub
jmp
mov
pop
cmp
das
cmp
xor
jbe
je
jle
push
mov
inc
sub
test
loope
div
imul
xor
dec
adc
aad
cmp
dec
xor
xlat
test
dec
add
jg
sbb
xchg
aam
or
repz
rolb
jg
insl
das
lret
sub
dec
inc
adcl
inc
scas
mov
mov
mov
mov
sbb
push
pop
decb
or
and
or
dec
push
sbb
jae
or
sub
cmp
lods
sbbl
data16
push
rcll
adc
push
pop
outsb
pushl
popa
in
pop
inc
dec
sbb
adc
sub
adc
inc
xor
xchg
mov
lea
push
mov
jecxz
sbb
imul
test
xlat
outsb
jnp
jno
and
push
jg
add
push
outsl
ret
les
push
scas
sti
or
sti
mov
jecxz
or
inc
and
scas
or
sub
push
pop
mov
mov
add
push
pop
xor
rcrb
aad
stos
lods
sbbl
push
mov
cmp
rcl
pop
mov
mov
pop
andb
mov
fcoms
insl
ja
lods
push
and
fwait
into
and
jns
incl
add
add
outsl
push
push
pop
xor
and
xor
cmp
insb
xorl
xor
mov
dec
mov
or
pop
sbb
xchg
sbb
push
js
mov
js
push
push
adc
call
inc
stos
xlat
addr16
mov
dec
loope
sti
fstpl
jns
xor
js
fistl
mov
sub
push
adc
ret
or
les
mov
data16
dec
pushf
xchg
dec
nop
faddl
test
or
adc
in
mov
sub
adc
push
aas
fwait
xor
out
mov
mov
pushl
jg
les
int
test
incb
in
inc
test
aam
decl
loopne
pusha
mov
xchg
and
std
arpl
mov
cwtl
pop
repz
xchg
mov
sbb
mov
sbb
and
pop
lods
das
je
orl
jne
jne
xor
dec
imul
dec
mov
out
sbb
lods
stc
adc
faddl
test
adc
loopne
mov
add
testl
ss
movsl
mov
or
sbb
xor
cld
out
loopne
outsb
and
xor
arpl
pop
fnsave
fidivrs
and
lods
mov
jmp
sbb
cs
jge
sti
mov
mov
fwait
bound
mov
sub
loopne
adc
mov
push
fdivrp
pop
sbb
add
rcr
cmp
dec
das
mov
jae
cmp
jl
sbb
fdivp
sub
outsb
and
jp
sbb
std
add
outsb
push
mov
ja
push
fsubl
and
cmp
mov
stc
insl
shrb
push
xor
movl
pop
fs
mov
jnp
rorb
sub
jmp
adc
or
sbb
cmp
lock
push
add
push
inc
scas
push
rorb
mov
adc
ja
push
adc
arpl
add
pop
add
adcl
clc
addr16
mov
dec
aaa
sub
inc
test
arpl
cld
xor
mov
push
xor
cs
sbb
outsl
icebp
mov
jbe
inc
mov
scas
adc
out
testl
mulb
ret
clc
movsb
or
outsb
std
sub
adc
dec
insb
in
and
shrb
adc
pop
popa
push
xchg
push
push
js
adc
aas
lods
inc
mov
insl
xchg
repz
sub
das
hlt
fucomi
push
jb
cmp
push
lock
fidivrs
inc
cli
mov
mov
mov
mov
dec
add
mov
inc
jne
pop
cs
adc
jmp
pop
add
clc
sbb
push
nop
mov
testl
inc
mov
in
pop
fldenv
or
adc
in
xchg
cmp
mov
rcl
mov
daa
fcmovnb
add
out
aaa
pop
dec
push
repnz
lahf
repnz
aaa
mov
arpl
stos
pop
sub
mov
pop
out
scas
xor
incl
sbb
fnstenv
xchg
xchg
loope
loopne
inc
scas
jle
push
push
sbb
pop
fcmovbe
out
fsubrp
inc
push
rcrl
out
shlb
inc
jbe
xor
es
xchg
xor
enter
addr16
sbb
xor
out
test
xchg
push
sti
arpl
or
adc
dec
jae
sub
adc
mov
mov
hlt
lcall
out
cmc
mov
push
insl
arpl
dec
pop
push
notl
adc
sub
pop
jns
movsl
sbb
push
loopne
inc
mov
ja
ss
jae
xchg
cld
add
add
xor
adc
cmpsb
pop
xor
jo
or
xlat
cmp
mov
dec
pusha
push
jae
jle
fldenv
push
add
and
push
jno
leave
in
pop
add
push
aas
clc
or
loopne
and
or
ret
add
in
lcall
out
dec
jno
push
dec
add
mov
cmpsb
imul
or
and
clc
pop
inc
add
adc
push
mov
push
add
arpl
call
mov
inc
scas
lea
sub
adc
aas
adc
xchg
dec
pop
mov
xor
stos
push
fsubr
lock
les
movsl
inc
mov
xor
push
icebp
adc
mov
subb
fs
cmp
fildl
fnstenv
pop
and
shr
push
mov
cmpsb
rolb
sub
cli
push
bound
inc
cmpsl
push
aaa
sbb
loope
dec
xchg
lcall
decl
movsb
lds
or
nop
jp
push
dec
ror
inc
pop
test
test
push
cli
mov
into
dec
pop
ss
cs
mov
push
in
leave
sub
xchg
push
adc
les
cmc
adc
cld
ja
loopne
daa
pop
sbb
stos
push
and
arpl
add
leave
rorb
aad
or
dec
adc
stos
jge
das
mov
jb
or
add
adc
pop
fidivrl
dec
popf
adc
push
imul
push
inc
xor
xchg
add
sbb
add
jg
adc
jmp
fmuls
sub
push
stc
rcll
out
push
ja
sub
mov
push
add
lock
add
mov
sbb
sub
nop
push
jbe
loop
mov
jne
in
leave
rclb
stos
sbb
adc
xor
cmp
sbb
cli
jbe
jo
add
inc
inc
arpl
xor
inc
xlat
popa
inc
add
xlat
aas
addl
inc
xchg
push
pop
pop
mov
pop
dec
outsl
inc
clc
xor
jno
sub
dec
daa
xor
js
insl
fmul
xor
jg
pop
dec
xor
dec
mov
nop
mov
mov
adc
sub
in
insl
iret
pop
push
jb
inc
push
pop
jg
scas
ja
or
lahf
pop
sbb
stos
jnp
mov
pop
fmul
pop
or
cltd
sbb
sub
dec
ficoms
sub
lods
jl
insb
pop
xchg
loope
jg
std
das
enter
pop
add
movsl
adc
test
sub
jbe
push
jae
mov
inc
subb
mov
in
mov
pop
cmp
sbb
sbb
xchg
mov
das
jnp
sar
dec
ret
pop
add
xchg
cmp
stc
insl
mov
inc
repz
hlt
mov
cltd
add
lods
sbb
test
test
shrl
test
xchg
fidivl
xor
xchg
aad
mov
sbb
test
pop
in
add
rol
popf
xchg
mov
sahf
outsb
les
jo
cmp
enter
clc
loope
mov
aad
fldl
inc
jno
xor
test
aas
lea
push
inc
mov
dec
xor
jg
js
loop
xor
popf
cli
fimull
pop
lea
jle
mov
mov
out
mov
add
mov
out
clc
push
jg
in
xor
std
cmp
in
pop
pop
mov
sbb
cmpsl
mov
add
cmp
sar
outsl
mov
dec
repnz
dec
pop
sbb
adc
or
jmp
std
push
jmp
sbb
scas
add
sub
push
cli
mov
sub
push
shl
xlat
add
push
adc
cs
xlat
push
jo
cmp
lods
push
addl
roll
test
lock
loopne
sub
das
push
shrb
inc
mov
imul
dec
mov
pop
fdivrs
pop
push
cmpsl
pushf
aad
adc
xchg
aam
outsl
ljmp
jb
ljmp
arpl
clc
not
adc
sbb
push
mov
xchg
jmp
movsl
loopne
iret
ret
xor
xor
mov
insl
int
addl
mov
fidivrs
add
les
xchg
test
push
call
adc
push
add
das
pop
cmpsb
push
loop
add
rorb
pop
and
in
pop
js
jbe
pop
fmull
or
outsl
cld
mov
movsb
ds
add
pop
test
mov
outsl
xor
pop
dec
les
or
adc
sahf
or
inc
add
pop
push
andb
cwtl
pop
pop
shrl
push
jg
jmp
fstpl
cmp
sub
decb
repnz
xchg
add
int
dec
adc
sbb
rorb
pop
decl
dec
adc
sti
xchg
movsb
lds
jecxz
pop
dec
movsb
lds
insb
lods
movd
incl
int
push
xor
scas
add
adc
testb
add
or
cmp
mov
jecxz
mov
lcall
mov
adc
or
inc
jo
dec
push
jecxz
outsl
aas
inc
inc
inc
sbb
in
or
leave
xchg
in
aam
jb
fildl
push
pop
push
movb
movsl
sub
pushf
andb
add
das
jge
pop
insb
push
dec
cmp
mov
xor
dec
fcmovnb
addr16
jmp
ret
or
xchg
aas
xchg
imul
mov
clc
loop
fildl
call
mov
xchg
push
gs
sahf
fs
cld
sbb
daa
insb
push
adc
cmp
mov
sub
inc
in
mov
push
scas
add
sub
cli
sub
cmp
xor
add
xchg
das
jb
call
lea
mov
inc
mov
stos
rcll
shr
enter
add
push
dec
add
idivb
jno
pushf
lret
cmpsl
test
push
test
in
mov
addb
push
loop
add
xor
cmpsl
mov
adc
mov
push
xchg
je
lret
push
add
dec
ljmp
adc
fiadds
and
les
xor
sahf
das
pop
pop
shlb
loopne
sub
in
inc
pop
xor
outsl
int3
gs
shlb
cld
jl
fadds
inc
mov
and
aaa
sbbb
enter
fwait
sbb
cmpsb
fldenv
ret
clc
test
mov
dec
loopne
sbb
or
sub
dec
bnd
data16
pop
les
addr16
lahf
or
push
xchg
jae
jp
aad
add
push
sbb
jecxz
pop
pop
jae
pop
and
cmc
lahf
fwait
cli
in
xchg
and
push
repnz
cmp
mov
and
push
rol
in
add
insb
test
daa
or
sbb
xchg
outsl
mov
inc
lcall
or
push
outsl
icebp
outsl
push
add
dec
mov
ljmp
xor
inc
add
lret
mov
mov
mov
pusha
push
push
push
push
movsb
mov
and
addb
cmp
arpl
popf
jo
pop
incl
and
leave
cmp
jno
cltd
push
mov
add
ret
jae
xchg
lods
xchg
mov
and
or
inc
pop
in
adc
call
cltd
inc
dec
add
inc
push
sbb
inc
and
repz
mov
lods
xor
mov
and
imul
out
cld
fcomip
mov
cld
add
aaa
loopne
xor
pop
dec
roll
cmc
pop
sub
mov
outsl
mov
inc
int3
add
xchg
or
test
jns
int
lock
mov
or
pusha
sbb
jo
mov
out
lret
push
leave
mov
and
cmp
stos
jbe
out
js
pushf
sarb
jmp
aas
into
fidivl
cld
call
cld
fisubrl
mov
clc
sahf
dec
mov
jg
lea
aam
xchg
mov
or
ljmp
xor
in
or
xchg
les
push
adc
sbb
dec
cmp
fdiv
mov
fnstcw
mov
push
pop
lea
pop
outsb
hlt
sbb
popl
adc
jns
cmp
ret
enter
les
enter
push
cld
dec
cld
sub
and
data16
sub
or
rcll
xor
inc
sub
dec
mov
fidivrl
jl
add
sbbb
dec
cmc
pop
cmp
push
dec
jb
test
push
es
gs
js
dec
clc
addr16
cmp
mov
cwtl
popf
push
cltd
out
insl
lods
fcompl
fnop
das
mov
je
dec
fsubs
scas
shll
mov
xlat
movsl
cli
fisttpll
js
xor
and
test
ds
and
scas
xor
mov
adc
jo
push
insl
sbb
dec
xorl
jge
js
xchg
xchg
sub
xchg
int
repnz
jo
mov
push
orl
loope
mov
lock
fucom
add
push
jg
xor
and
orl
pop
sub
sub
mov
add
pusha
addr16
adc
shl
cmc
out
pop
and
add
mov
pusha
add
push
inc
test
aad
popa
out
testl
aad
mov
ljmp
in
xchg
ss
mov
fs
dec
dec
mov
jo
icebp
sbb
sub
xor
das
std
cltd
fstpl
add
pop
adc
sub
ret
ret
rcll
jmp
movsb
push
xchg
test
hlt
pop
fsts
gs
jns
push
pop
lret
clc
aam
dec
push
mov
lahf
inc
push
xor
arpl
stos
insb
push
popf
std
incl
scas
rcrb
bound
inc
insb
mov
sbb
mov
xor
dec
and
or
adc
inc
ja
stc
xor
push
jmp
pop
adc
test
pop
mov
or
test
xchg
or
incl
add
ret
addr16
push
adc
push
inc
jmp
aaa
loope
incb
mov
lret
out
mov
jns
lods
and
push
jecxz
lret
push
push
or
cwtl
lods
or
ss
mov
jnp
jno
dec
sub
add
mov
iret
movsl
pop
mov
test
ljmp
mov
adc
icebp
jp
repz
push
leave
pusha
or
and
je
jo
jmp
fistps
shlb
mov
or
add
test
xchg
sahf
or
clc
mov
jns
int3
dec
loop
jno
xor
xchg
pop
call
jecxz
push
aaa
xor
loope
out
shl
push
movsl
sbb
and
aam
jecxz
rorl
mov
dec
out
mov
decl
std
fbstp
mov
cmp
or
popf
stos
and
outsb
sbb
cmp
jae
decl
xchg
cmpl
scas
push
xchg
pushf
scas
add
mov
dec
jbe
jl,pt
aas
adc
push
dec
inc
add
and
jbe
xor
add
lea
mov
scas
or
testb
add
or
push
and
xchg
push
test
sbb
xor
aad
jnp
push
movsl
out
ljmp
stos
mov
je
jo
pushl
push
int3
sbb
push
shl
pop
shll
pop
xchg
add
mov
mov
loopne
dec
enter
push
mov
mov
lea
push
cmpsb
jno
test
inc
jno
lock
stos
fnstenv
and
orb
lret
push
cmp
insl
and
ljmp
xchg
xor
dec
pop
lock
out
nop
lock
jge
jne
mov
add
lcall
pop
movsb
or
xor
out
mov
mov
jp
jae
inc
jmp
ljmp
lahf
xchg
push
jecxz
xor
rcr
mov
lret
inc
popa
mov
outsl
xchg
jo
stc
push
notl
xchg
inc
in
jg
lock
add
rcrb
je
mov
jae
into
lods
ret
xor
scas
pop
test
push
mov
jne
insl
sbb
adc
mov
scas
mov
js
push
mov
dec
lock
pop
xchg
inc
inc
push
rolb
pop
int
shll
adc
pop
dec
subb
dec
fs
push
push
dec
push
inc
mov
add
adc
sub
xor
stc
nop
test
sbb
or
shrb
pop
pop
push
or
mov
pop
js
dec
fs
cmpsl
sub
inc
jno
lcall
gs
push
punpcklwd
mov
xchg
sti
inc
decl
push
call
paddd
adc
imul
pop
incb
cmpsb
sub
adc
clc
mov
and
sbb
jl
mov
inc
xchg
int3
jg
jmp
adc
pop
inc
and
loop
sub
imul
add
pop
daa
adc
mov
jo
xchg
into
lods
add
mov
popa
sbbb
xchg
mov
pop
xor
push
mov
dec
lret
out
push
lcall
into
fdivr
adc
inc
and
pop
test
daa
popa
in
lods
aaa
aad
jecxz
xlat
push
pop
or
and
flds
daa
mov
add
push
cltd
in
mov
jno
sub
mov
cld
push
ja
insb
test
push
mov
gs
xchg
and
sbb
adc
push
cmc
mov
imul
mov
outsl
aas
dec
inc
mov
xor
pop
pusha
nop
or
je
cwtl
or
insb
pop
faddl
test
mov
jbe
jmp
fcmovnb
fs
xor
push
mov
std
xchg
enter
fidivl
jbe
insl
loope
daa
xchg
dec
cwtl
adc
bnd
rolb
in
add
xchg
jl
popa
insb
jge
rcrl
lods
dec
sbb
mov
inc
mov
in
incl
ret
pop
jb
adc
call
je
test
popa
push
and
adc
sbb
sub
jle
stc
cs
mov
les
gs
dec
fs
std
mov
imul
and
sub
lods
xchg
test
sbbb
subb
inc
fs
inc
cld
aaa
mov
inc
xchg
mov
call
inc
fxam
shll
cmp
mov
js
loop
js
adc
adc
hlt
popf
push
nop
iret
ret
callw
cltd
pop
call
pop
push
jno
cmc
xchg
mov
scas
sarl
sbb
ss
adc
and
add
jmp
sub
inc
mov
mov
xchg
jecxz
mov
das
xchg
cmpsl
push
stos
xchg
add
idivb
std
popf
shrd
daa
scas
dec
add
jecxz
dec
out
adc
test
xchg
sub
and
cmp
lock
and
xor
das
jmp
sub
adc
mov
add
jg
fwait
sub
add
push
lea
adc
adc
popa
sbb
dec
xchg
mov
inc
lock
imul
dec
ret
loopne
scas
sub
xchg
lret
jae
push
cs
xor
cld
inc
jae
in
addr16
xor
dec
pshufw
mov
cmpsb
push
cli
cmp
and
js
adcl
jmp
sbb
in
test
pop
dec
outsb
cmp
xor
lcall
mov
cwtl
mov
scas
sbbb
mov
add
out
or
inc
gs
lods
movsl
sbb
nop
cwtl
int3
jb
js
jg
mov
fiaddl
xchg
xchg
iret
dec
inc
mov
cmp
js
in
cmp
lea
sarb
out
adc
jno
mov
mov
nop
out
cmc
pop
aaa
mov
push
mov
xor
xchg
test
fldl2e
xchg
mov
sub
or
js
jns
cmpb
xor
cli
aam
insb
roll
aaa
mov
inc
jbe
push
push
pop
ja
push
inc
test
or
loope
add
repnz
jg
cmp
push
rcll
xchg
and
mov
lret
scas
jg
mov
inc
add
sbb
adc
lods
pop
adc
xchg
push
cwtl
push
mov
push
adc
sub
fsubrl
add
into
add
sbb
inc
cmpsl
rcl
je
and
jecxz
roll
sbb
xchg
test
sbb
sbb
inc
ja
rcll
out
mov
adc
das
add
mov
xor
mov
sbb
aam
les
add
inc
in
ljmp
mov
clc
fwait
add
mov
dec
lret
leave
push
scas
cli
das
mov
popf
and
gs
adc
pop
frstpm(287
divb
icebp
iret
pop
or
lea
imul
pop
jge
mov
or
adc
ljmp
sarb
xor
in
fistpll
or
icebp
gs
cmp
ss
pusha
into
popf
xor
pushf
mov
pop
jecxz
add
icebp
ret
ja
mov
mov
dec
sti
and
ret
mov
pop
outsl
loopne
xor
into
dec
jmp
rcrl
jnp
fldl
mov
lds
xchg
or
ss
imul
es
lea
dec
xor
cli
nop
mov
or
cs
jbe
mov
jl
sbb
mov
pop
leave
insb
dec
icebp
jg
fists
jns
mov
mov
pop
fdivrs
mov
fisttpll
pop
mov
mov
dec
add
cltd
out
adc
jae
mov
mov
das
pop
dec
and
test
xchg
mov
push
movsb
cltd
mov
mov
fwait
xor
bound
mov
and
imul
outsb
cmp
enter
enter
bound
ret
aam
outsl
push
xchg
jne
sbb
or
add
or
flds
test
js
cmpsl
adc
leave
repz
xor
adc
inc
subl
add
dec
popf
in
mov
adc
es
push
xor
ja
arpl
push
mov
ds
addr16
out
testb
mov
mov
movsb
popf
ret
mov
cmp
ljmp
daa
mov
je
xchg
mov
mov
mov
and
subb
add
lea
data16
mov
adc
pop
insl
push
rcrb
clc
shlb
xor
dec
add
imul
lret
inc
cwtl
xor
insl
std
les
lds
scas
in
dec
repz
pop
rcl
mov
testl
ljmp
fcompl
out
xor
xor
inc
lods
or
sbb
lock
ljmp
and
add
push
mov
xchg
or
add
and
mov
mov
xor
fstpt
repz
movhps
into
or
dec
out
sarb
in
lea
mov
cmp
pop
cmpsl
push
sub
pop
mov
shlb
push
push
pusha
fidivrl
add
movsb
arpl
cmc
add
jb
movsb
fwait
sub
mov
insl
loop
outsb
pop
test
or
insl
jmp
cmp
dec
push
fs
xchg
loope
rcr
fwait
or
adc
scas
pushl
outsb
nop
fiadds
cmpb
add
mov
mov
or
xlat
mov
mov
mov
test
addl
leave
or
fstpl
shrl
loope
push
lods
mov
inc
jnp
ljmp
or
je
pop
cmpsb
jne
ja
negb
insb
xchg
sbb
popa
les
jo
out
cld
pop
int
dec
pop
pop
das
mov
push
or
push
mov
fwait
jle
testb
fcoml
jb
pop
sbb
sub
sbb
loope
mov
sbb
lods
loope
add
adc
loop
or
pop
push
shlb
das
jecxz
jg
shrb
add
imul
idivl
dec
fwait
mov
std
sub
shrb
mov
repz
rol
andb
sbb
xor
pop
movsb
push
jnp
cmp
lods
push
movsl
mov
imul
jg
and
fdivrp
and
sub
mov
fistpll
mov
inc
nop
sbb
repnz
mov
jmp
mov
inc
inc
adc
pop
pop
mov
inc
sarl
stos
sbb
push
daa
lcall
aad
idivl
lock
push
lret
mov
sbb
inc
push
loopne
sbb
adc
loope
inc
test
out
lock
insb
cmp
pusha
or
scas
inc
negl
call
xchg
jb
enter
dec
mov
pop
xor
jmp
dec
addr16
mov
imul
incl
fs
dec
push
movsb
pop
push
cld
jnp
outsb
inc
loopne
mov
inc
mov
sbb
mov
mov
jl
jb
rorb
xlat
jmp
fistl
add
inc
arpl
out
fs
shll
lock
mov
jp
xchg
xor
add
stc
aad
cwtl
adc
clc
add
sti
inc
xchg
sub
in
mov
sti
cmp
sub
mov
insl
push
mov
push
test
es
push
mov
aad
or
cmpsl
mov
cmp
mov
jb
aad
in
popa
mov
sub
sub
mov
add
mov
add
inc
adc
stos
pop
sub
xor
jo
mov
cltd
fcomip
in
xorl
test
insl
pop
sub
subl
sbb
xor
outsb
cmpsb
ds
jno
notb
add
neg
es
mov
pop
rcrb
jae
in
dec
cmp
adc
inc
in
ret
dec
out
pop
xor
not
add
idivl
xor
ja
mov
push
scas
dec
push
addl
inc
clc
je
push
rorl
xchg
dec
enter
testl
sbb
push
imul
push
sti
clc
add
inc
sub
filds
testl
jmp
es
inc
imulb
loopne
pop
push
jb
imul
call
push
and
pushl
inc
push
cmc
subl
scas
sub
loopne
xor
test
arpl
js
fs
pop
jbe
cmp
jg
and
and
adc
or
ror
ja
sub
mov
xor
push
push
sbb
lret
test
out
loop
shrb
xchg
sub
gs
int
adc
xor
sub
xchg
fidivs
inc
push
jae
cmp
aas
sub
and
ja
jmp
mov
mov
test
cmp
loopne
stc
aad
sbb
adc
sbb
xor
add
hlt
and
adc
sti
sbb
fsubrp
daa
stc
jbe
lea
insb
data16
rcll
cli
fildll
cwtl
cmc
cmp
sar
mov
mov
push
not
in
jl
and
push
lods
test
xor
xlat
ds
adc
mov
push
mov
inc
mov
pop
ja
add
inc
bound
leave
stc
push
adc
xchg
pop
cmp
push
mov
ja
add
pop
clc
inc
popa
orl
fldl
xor
inc
ss
filds
lret
add
idivl
inc
insb
imul
lret
jmp
push
and
popf
mov
or
test
jne
decl
cmp
pop
js
lds
cli
push
sbb
sub
adc
fcmovnb
jecxz
fistpll
mov
ret
shll
cmp
mov
insl
add
mov
mov
xor
decl
jg
inc
jnp
mov
adcb
iret
sti
in
and
pop
mov
fisubs
push
adc
or
adc
popf
js
jg
xchg
les
pushf
mov
sub
in
addl
ljmp
jg
inc
std
dec
and
lods
jmp
cs
pop
bound
jg
pop
mov
pop
or
inc
xor
loope
dec
cwtl
sbb
cmc
push
lret
push
lods
out
cmpsb
pop
jmp
fwait
sar
fnstsw
push
cmp
or
push
out
adc
lea
incl
movsl
lret
leave
jns
mov
sbb
ljmp
lock
inc
test
add
sbb
jne
or
xor
or
ret
cmp
movsb
fsubp
ljmp
xchg
dec
shrl
push
addb
orb
das
cld
jecxz
or
lds
add
dec
jnp
mov
pop
mov
inc
movsb
and
adcl
loopne
outsb
iret
inc
leave
data16
addr16
notl
mov
or
movsb
mov
ljmp
or
shlb
add
test
lock
push
push
imul
dec
or
and
mov
fisubrs
inc
imul
sub
mov
fidivrs
xor
xchg
mov
push
inc
mov
dec
mov
push
dec
imul
mov
mov
inc
dec
or
add
jge
lods
fstl
loope
cmp
dec
dec
inc
insb
adc
inc
mov
roll
inc
in
lock
jns
push
dec
nop
test
adc
jne
inc
xor
xchg
push
leave
cmp
pop
adc
and
fmuls
pop
rolb
sub
mov
inc
cmp
dec
popa
pop
rcl
pop
mov
test
adc
and
dec
adc
out
jns
jbe
sbb
add
xor
xorl
in
pop
push
insb
jno
push
pop
pop
addb
mov
add
pcmpgtd
test
decl
add
dec
sbb
mov
inc
dec
sub
stos
daa
xor
mov
popa
dec
xor
fidivrl
imul
dec
js
dec
decl
mov
arpl
shrb
cli
pop
iret
or
icebp
lds
mov
jp
lds
cmp
pop
fidivrs
dec
ja
icebp
mov
cltd
test
daa
lock
stc
xchg
and
aad
jo
mov
ficoml
add
fdivr
sub
rorl
xchg
add
fists
out
mov
or
repnz
sub
dec
jge
mov
jb
iret
cmp
insb
push
mov
pushf
push
mov
loop
cmc
out
push
mov
shrl
aaa
dec
shll
jbe
scas
scas
inc
enter
jmp
sbb
add
lods
inc
pop
ret
mov
int
int3
clc
dec
sar
mov
dec
jmp
lret
movsb
lcall
xor
mov
xor
pop
into
add
jl
mov
fistl
adc
jmp
ljmp
fldl
add
loop
rcr
lds
jns
clc
outsb
test
or
mov
xor
inc
mov
dec
imul
outsb
sub
inc
pusha
jmp
inc
xchg
ja
pop
popf
or
add
sub
push
sub
mov
dec
xchg
lock
clc
mov
sbb
mov
nop
adc
push
ret
pop
or
inc
imul
sahf
roll
jecxz
mov
scas
pushl
mov
push
mov
adc
ffree
imul
mov
negb
xchg
or
mov
inc
sub
mov
pop
andb
dec
daa
xor
lcall
add
insb
sbb
sahf
stos
push
adc
or
and
mov
ss
out
lea
ds
lahf
adc
add
jl
mov
addr16
sbb
rcrl
xor
add
test
mov
pop
mov
mov
inc
insb
mov
andl
mov
xchg
daa
sub
icebp
fbstp
push
rol
mov
lret
inc
stos
adc
pop
mov
xchg
call
sub
lea
jnp
sub
jp
rcll
and
cmp
adc
and
mov
mov
aam
insb
xor
xor
mov
push
mov
cmpsl
pusha
mov
sub
mov
scas
inc
stos
std
movsl
sbb
pop
loop
ss
add
sahf
jmp
es
push
stos
ret
test
and
jp
xchg
mov
cmc
sbb
add
mov
mov
imul
movsl
out
jg
sbb
pusha
sub
cmp
fisubrs
or
fisubrl
mov
push
out
push
filds
add
sbb
test
mov
mov
outsb
arpl
shll
js
or
pusha
ret
lock
dec
push
add
sub
add
mov
add
xor
jg
and
add
inc
jp
jge
pop
mov
xchg
sub
sub
stos
jge
in
fldcw
sbb
cmp
jecxz
pusha
cmp
in
jl
adc
jmp
xor
lods
data16
push
das
push
jns
test
out
pop
push
inc
inc
pop
lret
mov
scas
cli
hlt
inc
imul
lods
test
imul
add
sub
and
mov
enter
xchg
outsb
mov
fcmovu
mov
push
push
or
outsl
das
adc
dec
nop
jle
mov
mov
or
mov
mov
dec
mov
mov
xor
sub
loope
nop
mov
sbbl
lock
ljmp
xchg
jns
add
jmp
ret
inc
jns
push
sbb
cltd
mov
mov
and
inc
and
aaa
lods
pop
pop
fbld
jns
xor
in
dec
insl
icebp
and
addr16
lods
mov
rorb
inc
jno
ficoml
loopne
in
push
insb
inc
xorl
and
pop
xchg
mov
or
decl
xor
and
xor
mov
hlt
incl
out
iret
js
push
mov
or
clc
negb
lret
ret
add
ljmp
mov
rol
and
push
dec
mov
sbb
mov
xchg
xchg
push
icebp
rorb
mov
push
fisttps
mov
fs
jnp
fdiv
xchg
movsl
pop
outsb
cmp
add
xor
rcl
enter
lahf
insl
nop
jg
pop
cli
sbb
inc
repnz
into
dec
fs
or
dec
cmpsl
hlt
add
adc
ss
ret
mov
add
mov
adc
insl
incl
mov
pusha
mov
push
in
jmp
out
jp
pop
lret
xor
popf
es
pop
leave
inc
inc
ret
and
mov
lock
int
out
push
and
ljmp
loopne
or
cli
enter
dec
add
adc
aad
ftst
icebp
pop
addb
push
jmp
subb
add
cli
dec
cld
sbb
inc
out
bound
cmp
mov
les
or
incl
sbb
mov
jo
das
jo
adc
adc
icebp
sub
push
xchg
cmovns
dec
shrl
ss
fcmovu
adc
xor
dec
sub
inc
fistpll
and
xor
xor
pop
stos
sub
fs
sti
dec
leave
xchg
jns
stos
xchg
xchg
iret
sbb
scas
xor
pop
leave
lds
adc
jle
pop
mov
pushl
bound
mov
xchg
enter
fadds
xchg
lret
push
fs
incl
jge
test
add
shl
sbb
addb
je
mov
inc
add
inc
scas
ljmp
jmp
push
lcall
repnz
adc
mov
test
lea
or
add
aas
pop
push
mov
mov
movsl
movsl
lret
jo
push
inc
out
in
add
adc
or
cli
and
mov
stos
pushf
mov
inc
dec
and
inc
incb
jle
xchg
gs
mov
xor
sub
rorb
lahf
mov
insl
jo
mov
inc
add
jne
sub
gs
cmp
ds
adc
push
mov
movsb
jp
ljmp
loop
jb
jle
mov
dec
pop
es
pop
adc
add
roll
mov
xor
iret
mov
outsl
bswap
adc
std
decl
or
loopne
movsl
xchg
test
rol
mov
lcall
mov
mov
cli
mov
cs
popf
sub
incl
xchg
push
xchg
mov
pop
hlt
in
add
jg
jg
cmp
pop
adcl
je
cs
incb
mov
cmpsl
in
cmp
mov
or
decl
jno
mov
jbe
out
loope
mov
add
add
xchg
jp
lods
push
fcmovne
testl
jle
je
adc
je
inc
sub
int
jecxz
test
add
jno
mov
push
jg
inc
outsb
popa
cmp
adc
call
ret
stos
sub
xor
mov
lret
mov
insl
cmp
negl
xchg
sub
adc
aaa
js
js
imul
xchg
jb
adc
or
loop
cmc
out
leave
xor
dec
and
test
xor
lea
pop
cmpsb
mov
pop
and
stc
clc
push
rcrl
inc
and
add
sbb
fistps
loope
dec
jg
rcl
mov
fbstp
enter
and
pop
fbld
aam
fwait
test
mov
fiaddl
hlt
ja
adc
aam
cs
dec
test
add
in
mov
pop
xlat
add
sar
cmp
addr16
mov
mov
shlb
movsl
xor
das
incl
sbb
sub
lret
push
addb
sub
jp
fisttpl
adc
mov
dec
push
js
lods
fbld
outsl
mov
insb
push
or
mov
push
push
inc
js
mov
jmp
dec
jmp
nop
cmpl
ljmp
push
jb
push
shll
popa
inc
push
in
pop
hlt
test
hlt
js
mov
pop
rcr
jne
outsl
inc
vhaddpd
push
pop
sbb
push
cmp
hlt
sbb
lret
popa
adc
mov
push
pavgb
cltd
aas
pop
push
int
sub
sbb
movups
inc
mov
and
out
or
fisubl
sbb
icebp
push
or
sbb
mov
inc
sarl
or
and
mov
add
test
mov
xchg
shll
mov
hlt
popf
fistpl
add
add
pusha
filds
or
cwtl
and
and
push
mov
mov
movsl
shlb
fnstcw
aam
cmpsl
loop
enter
stos
mov
push
mov
mov
mov
das
xchg
daa
int3
pop
mov
jl
inc
aaa
aad
jbe
add
and
mov
repnz
aas
ficompl
aaa
cmp
ljmp
xchg
call
cltd
adc
xchg
add
insl
mov
or
scas
or
rcrb
pop
popa
mov
push
pusha
xchg
lock
pop
popa
jecxz
jo
lock
or
mov
jg
mov
insl
inc
sub
dec
push
cmp
outsb
adcb
lock
mov
mov
mov
fadd
in
lea
fsts
pop
cs
sbb
aaa
xor
test
push
shlb
xchg
iret
add
fbstp
add
cs
and
xchg
shll
cli
jl
in
ficoml
mov
mov
cmp
lock
loop
dec
or
int3
xchg
sbb
mov
scas
sbb
cmp
jg
lahf
xchg
loope
shll
aaa
mov
pop
sbb
dec
test
xor
jns
iret
or
test
xchg
sbb
dec
mov
mov
in
fdivrl
xor
popf
mov
mov
cmp
cmpsl
ret
or
dec
add
lcall
out
and
scas
push
addb
adc
scas
fistl
fcompl
pop
mov
shrd
fidivs
outsl
popf
pop
pusha
jnp
xor
in
decl
pushf
add
fdivl
sahf
dec
mov
dec
xor
in
scas
in
test
icebp
pop
aam
in
jbe
push
push
mov
push
lock
xor
or
into
mov
call
and
loopne
cmp
cmp
fmuls
add
test
mov
dec
push
xor
xchg
pop
pushf
js
std
fistl
mov
jae
push
jbe
lcall
cmpsl
adc
rorl
test
mov
or
inc
mov
cmp
or
gs
push
jbe
sub
sub
fistps
inc
in
fstp
jg
mov
add
fs
icebp
aaa
cld
daa
lret
addb
jp
in
mov
jle
daa
sbb
and
sti
or
xorb
inc
sub
push
mov
xor
adc
xchg
cmp
mov
repz
add
in
sqrtps
mov
jmp
jp
stc
decb
aaa
inc
pop
mov
mov
cs
cmp
add
arpl
push
jne
adc
lods
cwtl
dec
es
or
popf
mov
mov
das
add
fs
dec
dec
jg
fdivrs
sahf
mov
shl
test
das
addl
insb
stos
mov
add
cmp
jb
sbb
and
sbb
loop
sub
or
pop
xchg
lock
adc
idivb
add
xchg
pop
jg
xchg
mov
adc
cmp
clc
popa
leave
cmpsb
adc
cwtl
nop
ljmp
pop
inc
das
daa
les
jmp
jmp
pushf
cmp
sub
icebp
push
pushf
test
int3
cld
pop
add
in
mov
dec
jg
dec
insl
ss
insb
loopne
iret
cs
cli
push
lock
add
pushl
iret
mov
inc
repnz
and
mov
xor
and
test
popa
mov
popa
add
and
adc
ret
xchg
fiadds
adc
mov
inc
int
dec
cld
stos
cmc
adcl
jge
xlat
movsl
pop
loopne
add
inc
or
ret
pop
inc
inc
ret
mov
pushf
dec
dec
sbb
roll
xchg
adc
jbe
or
cmp
dec
jno
test
stos
push
mov
fisttpl
xor
pop
clc
out
jbe
push
mov
jnp
pop
subb
enter
dec
movsl
push
ljmp
sbb
and
inc
or
adcb
and
fcmovu
push
add
repnz
fmull
pop
insb
aaa
xchg
xchg
popf
adc
shll
insb
leave
push
je
aaa
int
divb
pop
loope
jnp
cmp
paddusb
in
outsl
out
push
pop
mov
jne
add
adc
inc
js
mov
push
jge
xlat
xchg
outsb
sbb
adc
fisttpl
inc
arpl
and
push
or
test
pop
mull
hlt
cld
xchg
cld
call
dec
mov
dec
insl
popa
inc
dec
mov
dec
cmpsw
push
insl
psubw
cmp
and
push
scas
lea
sbb
pop
adc
rcrb
cmpsb
lret
lock
jl
scas
pop
pop
aas
push
or
mov
call
lds
addb
or
fbstp
mov
clc
movl
xchg
adc
aam
sbb
shrb
sarl
ja
stc
test
jbe
lahf
stos
push
enter
add
inc
pop
adc
insl
pcmpgtb
add
repz
jle
or
push
lret
test
add
lds
sub
push
dec
ljmp
int3
js
pop
mov
mov
sbb
repnz
imul
cli
or
int
int
pop
pop
daa
or
xchg
decl
dec
sbb
adc
mov
loop
xchg
sbb
ret
inc
andl
add
push
fnstcw
inc
shlb
je
sub
fucomp
and
push
adc
dec
dec
sbb
jle
and
push
push
sbbl
and
std
insl
push
mov
dec
popa
cmp
fsub
pop
rorb
in
ja
cmp
jno
cmc
pop
repnz
mov
jo
lock
ds
mov
xor
fdivs
aas
pushf
fisubrs
pusha
sbb
fwait
lcall
clc
jne
push
pushf
andb
fnsave
aas
loop
add
into
mov
push
xchg
rcll
inc
cmpsb
in
pop
xchg
orb
jmp
popf
pop
dec
outsl
fnstcw
mov
push
sbb
pop
cmpsl
mov
adc
sbb
sub
sub
xchg
mov
mov
and
sub
shrl
ljmp
fistl
icebp
pop
hlt
aas
cmp
jno
shrb
inc
mov
xchg
jp
mov
ljmp
fbstp
sub
fsubl
xor
in
mov
xchg
xchg
push
pushf
or
push
cmpsb
xor
sti
jae
paddsw
movq
or
fildll
mov
bound
mov
sub
add
mov
ficompl
cwtl
pushf
push
cmpsl
xchg
xor
xor
aaa
or
add
data16
jb
dec
inc
xor
add
lret
test
dec
mov
loopne
add
fwait
cld
inc
rcl
inc
sbb
cld
pop
xchg
or
call
notl
jne
sub
outsb
jne
adc
push
sub
insb
movsb
cld
fisubrl
push
frstor
test
out
insb
mov
loope
adc
test
ds
mov
inc
push
js
pop
ds
sub
aad
hlt
cmc
icebp
mov
inc
xchg
mov
sbb
adc
jle
mov
gs
arpl
fbld
sbb
cmp
out
mov
inc
or
push
dec
sub
std
daa
sbb
mov
add
mov
xor
adc
fcomps
mov
mov
sarb
shl
jb,pn
push
push
dec
push
inc
in
mov
xlat
testl
inc
in
js
jecxz
fnsave
dec
jle
ss
mov
push
fmulp
jl
jg
pop
scas
bound
incl
dec
int
and
lods
aas
and
ja
sbb
into
outsl
inc
fwait
sub
movsb
add
mov
pop
fdivs
fcoms
push
rol
pop
add
mov
jbe
or
xchg
int3
push
inc
ljmp
je
shrl
les
mov
mov
fs
je
fcoml
push
cwtl
jo
mov
push
jecxz
in
dec
cltd
lock
add
inc
jecxz
sbb
popa
sbb
icebp
xor
dec
mov
std
jno
dec
outsb
lds
fs
ljmp
inc
cltd
rorb
stos
fstpl
pop
jb
inc
pop
mov
pop
add
clc
mov
mov
adc
jnp
push
rolb
fiaddl
call
imul
sub
add
mov
rolb
arpl
inc
push
inc
and
stos
js
or
adc
shlb
mov
cmp
xchg
add
fisubrs
test
imul
shrl
sbb
pop
pop
ss
or
and
jg
pop
outsl
cmp
pop
jbe
mov
jge
mov
outsb
adc
inc
into
mov
outsl
lock
xor
push
xor
push
popf
icebp
mov
add
sbb
pop
decl
aas
add
inc
data16
stos
test
gs
out
sbb
fstpt
sub
sbb
aad
bound
dec
movsb
dec
add
xchg
or
xchg
hlt
pop
push
jg
xchg
mov
mov
and
jp
add
in
add
inc
pushf
pop
sbbb
hlt
pop
ja
lock
push
jle
mov
out
mov
es
mov
mov
jmp
cmpsb
cmp
cli
mov
pop
sbb
push
lcall
pop
jmp
das
or
ds
push
imul
hlt
pop
jbe
pop
push
jae
outsl
push
mov
sub
add
adc
add
xchg
shr
xor
dec
adc
push
jmp
sub
insb
xor
mov
jno
test
cld
add
push
inc
dec
inc
push
cmpsl
adc
mov
mov
filds
cld
ljmp
rorb
roll
jo
fiadds
and
fadds
fdivrs
mov
add
iret
std
xchg
push
and
ret
inc
lock
sbb
jo
sub
push
add
sub
adc
outsb
cmp
mov
bound
addr16
jne
icebp
lods
js
cmp
in
and
dec
or
pop
sbb
in
clc
pop
jle
jmp
lcall
test
mov
test
int3
stos
jg
std
sbb
insb
sub
dec
adc
repnz
pop
jns
outsb
mov
xor
lods
add
clc
fisttpll
push
xchg
ret
fmull
sub
xchg
gs
sbb
sahf
adc
sub
inc
flds
or
loope
or
or
push
insl
ljmp
ljmp
push
push
fdivr
decl
loope
add
aam
cld
stos
hlt
cmpsb
stos
shrl
dec
gs
mov
or
ja
xor
out
pop
outsb
mov
mov
push
addl
pop
lret
xchg
jmp
sarb
mov
gs
inc
sbb
inc
aam
arpl
pop
mov
pop
jbe
sbb
dec
sti
shrb
jnp
iret
andl
fcmovbe
push
xor
pushl
dec
xchg
push
jl
inc
inc
pop
cmp
hlt
mov
shrd
mov
pop
pop
sub
inc
lret
pop
inc
adc
test
sbb
adc
movsb
push
push
jg
or
out
push
fcoms
push
push
pop
inc
push
adc
loopne
mov
mov
sbbb
clc
pop
sub
dec
shrl
aaa
add
xor
mov
roll
pop
mov
add
lock
cmp
sti
iret
fisttpl
jo
jge
aam
adc
xor
jp
in
ret
xchg
es
icebp
mov
pop
lcall
stos
push
jbe
or
sbb
shr
dec
and
mov
lcall
add
cli
mov
inc
xchg
xchg
xlat
dec
repnz
dec
and
in
cwtl
add
dec
sbb
icebp
mov
dec
adc
pop
xor
lods
xor
jns
jns
jl
fstl
imul
add
fdivrp
fimuls
xor
dec
cli
and
shlb
sub
add
push
test
nop
or
imul
xchg
nop
cmpsl
pushf
scas
push
jno
les
dec
xor
dec
mov
inc
mov
dec
add
push
sbb
mov
jbe
in
lock
lock
mov
or
shl
jo
orl
dec
mov
out
xlat
xlat
pop
adc
or
push
loopne
ja
xchg
xor
mov
mov
and
jno
insb
aad
iret
insb
mov
lds
adc
rcll
and
iret
xchg
and
movsl
sbb
adc
mov
sbb
outsl
shll
jb
sub
jp
stc
jmp
and
in
add
rcrb
fdivl
xor
dec
into
add
dec
dec
jge
push
idivb
int
add
inc
roll
inc
into
cwtl
push
rcrl
loope
pusha
cmp
pop
call
mov
in
inc
and
mov
add
ficompl
pop
pushl
xchg
add
das
push
mov
push
pusha
std
cmp
loopne
sti
arpl
fisubrs
popa
push
arpl
adc
jle
fstpt
jmp
pop
jns
jb
jge
push
fiaddl
adc
jp
xchg
shrb
ret
add
mov
popa
xchg
int3
jmp
incb
hlt
or
cwtl
test
les
gs
push
shlb
or
xor
rcl
sbb
pop
cld
and
cwtl
and
or
or
push
sti
add
dec
mov
das
fildll
sbb
jno
lret
data16
adcb
mov
mov
jecxz
xor
scas
inc
pop
cld
dec
sub
xor
and
mov
pop
mov
cmp
stos
xchg
pop
std
xchg
mov
adc
push
out
push
insl
inc
sti
cmc
adcl
outsl
inc
inc
inc
sub
fcoml
ss
aam
pop
jne
push
jle
push
ss
jns
je
push
cli
xchg
mov
insb
movl
mov
js
popa
lea
push
jne
or
mov
sub
mov
movsb
cwtl
bound
sub
filds
shrl
js
mov
clc
inc
push
push
inc
add
cmpsl
mov
pop
cmp
insl
inc
jns
xor
push
push
jns
ljmp
mov
das
in
pusha
cli
jecxz
shlb
cmp
call
xchg
sbb
sbb
rcrl
mov
jg
adc
xchg
push
or
into
mov
and
xorb
xor
push
mov
adc
aad
add
pop
hlt
in
push
roll
fwait
mov
int3
pop
push
fisubrl
pop
sub
adc
inc
add
xor
xchg
jbe
test
xor
lret
std
adc
pop
jge
xchg
pop
push
add
imul
mov
adc
dec
test
mov
add
push
cmpsl
jne
in
pop
aam
mov
movsl
push
xchg
aam
or
mov
xor
inc
aad
xor
int3
sbb
cli
and
mov
iret
ffreep
movsl
mov
test
pop
add
fidivl
cmp
mov
pop
mov
jnp
xor
or
pop
int
mov
mov
xchg
or
push
inc
test
pop
push
leave
sub
ret
mov
jecxz
adc
jae
mov
add
add
sarb
and
pushl
hlt
aas
sub
or
lret
sbb
nop
add
ret
xor
adc
jge
pushf
add
adc
inc
dec
dec
js
push
psrad
aas
mov
cmp
jae
cmc
push
test
pusha
push
pushf
sbb
addl
push
pop
imul
insb
incl
mov
dec
shll
arpl
ljmp
mov
test
mov
iret
mov
outsl
jg
xchg
mov
shll
leave
aas
ds
fs
adc
aaa
xchg
pop
je
call
sub
mov
sub
fdivp
das
xchg
or
shl
das
cmp
out
cmp
and
adc
push
pop
decb
push
adc
cmp
sahf
fistps
std
icebp
clc
call
in
mov
mov
lcall
pop
mov
or
sbb
loopne
cld
fwait
push
negl
daa
push
dec
pop
mov
jg
insb
fcoms
xor
mov
lret
dec
cs
pop
out
pop
dec
sar
jmp
jl
xor
lret
inc
orl
pop
loopne
pop
and
shlb
aad
cli
movsl
aaa
fsubrl
dec
mov
mov
iret
jle
sbb
loop
aas
ss
mov
call
adc
adc
or
outsb
pop
xchg
xchg
decb
xor
jl
jae
jb
push
pop
dec
inc
ljmpw
inc
xchg
cs
out
scas
ds
and
movsl
push
and
and
adc
mov
pop
adc
lcall
jge
sub
cmp
call
or
stos
jno
mov
adc
mov
pop
push
sti
jno
popa
jp
arpl
cmp
adc
rorl
lret
mov
jo
mov
push
or
je
hlt
fld
fistl
dec
jb
sbb
xchg
xlat
and
mov
inc
daa
in
addr16
cmp
inc
and
push
cmp
push
xchg
cmp
adc
ficoms
subb
and
pop
jle
orb
jbe
or
mov
das
xchg
mov
cmp
and
mov
mov
push
int
adc
cmpb
es
shlb
adc
lock
mov
test
ret
ds
push
lret
insl
dec
sbb
push
shlb
mov
hlt
aaa
and
jp
jo
lock
dec
mov
fidivs
xor
pop
test
lcall
shll
mov
mov
pop
ss
stos
dec
dec
sub
scas
xlat
sub
out
xchg
sub
les
into
daa
mov
adc
or
pop
inc
bound
pop
mov
aaa
and
insl
in
rolb
or
sbb
pop
mov
js
int3
mov
push
adc
loope
movsb
je
inc
sbb
adc
inc
fadd
mov
rcrl
mov
cmpsb
push
push
mov
add
mov
add
jg
push
loope
in
dec
dec
insb
pop
dec
mov
dec
inc
sub
jg
decb
imul
iret
es
and
and
sub
inc
dec
test
arpl
xchg
test
xor
add
outsb
cmc
test
sbb
push
mov
sub
mov
inc
mov
pop
rorb
imul
sti
inc
sbb
loope
or
sub
stos
test
mov
mov
das
in
insb
xlat
fcmovne
push
pop
cmc
jg
xor
push
mov
jmp
arpl
ds
bound
and
jnp
loope
xor
adcb
sahf
dec
mov
pop
in
inc
jne
ss
shr
xchg
cmp
add
and
bound
hlt
mov
daa
mov
dec
dec
imulb
jb
in
das
dec
pop
shl
sti
push
jecxz
mov
hlt
scas
adc
mov
adc
add
sbb
inc
xchg
dec
pop
sbb
push
jo
xchg
mov
pushf
nop
stc
testl
fs
sub
fists
fwait
out
adc
std
sub
mov
outsl
and
sub
add
push
repnz
mov
sbb
ret
mov
or
pop
shl
out
cwtl
or
fadd
mov
adcl
in
filds
std
xchg
cmp
stos
gs
cmpsb
xchg
lcall
in
add
dec
add
xchg
mov
insb
imul
repnz
fildl
adc
and
das
mov
pmullw
adc
stos
add
inc
push
adc
xor
xchg
mov
jmp
mov
dec
cmp
arpl
in
sub
mov
mov
aad
adc
xchg
in
push
adc
xchg
lea
ja
test
orl
inc
lods
in
pusha
fcomps
adc
jle
mov
xchg
fnsave
sti
mov
sbb
outsl
repz
shlb
test
mov
adc
popa
xlat
gs
sbbl
sub
pop
xor
jb
gs
dec
je
cmp
enter
push
jb
mov
outsl
push
ja
mov
mov
inc
outsb
movsl
add
repnz
add
cmp
into
push
imul
or
or
mov
mov
xchg
mov
push
sub
fdivs
cld
mov
push
lahf
out
xchg
xor
mov
ret
es
and
mov
loope
mov
or
aaa
ds
add
add
or
or
imul
loope
or
shlb
mov
sti
dec
cmp
push
and
pop
icebp
mov
cmpb
int
repz
inc
sbb
out
jno
loope
cld
inc
sbb
mov
xchg
fisttpl
sarl
mov
pop
dec
lods
out
lock
mov
mov
jno
mov
adc
shlb
in
mov
fimull
iret
pop
dec
push
jbe
jns
cwtl
push
mov
cltd
cmp
loopne
bound
add
lods
mov
cwtl
aaa
in
jbe
add
aam
jno
mov
fs
jecxz
xchg
das
addb
mov
je
cmp
dec
insl
mov
cwtl
push
ljmp
sub
inc
mov
aaa
cmp
rorb
test
les
xlat
sub
dec
sbb
pop
push
and
cmp
iret
add
dec
std
and
sub
arpl
push
jne
mov
imul
add
add
jbe
int3
dec
decl
inc
ja
pop
and
adc
add
std
mov
jecxz
je
dec
pop
gs
insb
add
adc
sub
in
mov
and
lret
dec
sbb
in
imul
push
xor
ret
popaw
inc
fwait
rcrl
sbb
mov
pop
dec
outsl
inc
inc
fucomi
fs
push
inc
loope
inc
mov
mov
mov
repnz
inc
or
out
fsubrl
jns
mov
cli
adc
pusha
push
aam
mov
mov
fimuls
jmp
adc
push
addr16
mov
fstpt
jns
add
fisubrs
stc
sbb
pop
push
push
dec
and
js
mov
dec
icebp
lret
aaa
imul
iret
sbb
pop
mov
push
movsb
jb
outsb
scas
je
jbe
push
push
popa
data16
mov
sbb
pop
xchg
arpl
in
inc
xor
dec
test
pop
inc
push
inc
pop
imul
scas
js
insl
fdivs
or
mov
mov
mov
sarb
jno
pop
ja
xor
ret
filds
testl
les
push
ss
add
mov
outsb
lea
into
add
pusha
mov
inc
fnstcw
jns
adc
add
jge
jb
xor
inc
inc
or
jno
adc
dec
mov
pop
js
jmp
int3
xchg
jmp
sub
sbb
repz
test
das
int3
inc
dec
add
adc
push
push
push
das
push
sti
sub
push
pop
mov
jg
lods
or
outsl
fstp
mov
call
sarb
mov
cmp
fnstsw
sub
inc
popa
push
dec
ss
lock
fistpl
xor
sub
push
cwtl
out
mov
dec
inc
jecxz
ss
mov
inc
dec
test
aaa
add
rcr
sbb
lock
in
jo
pop
cmp
push
stos
incl
stos
push
popf
adc
or
mov
sub
js
loopne
icebp
and
ficompl
and
sbb
mov
xlat
inc
mov
decl
ret
mov
pop
add
xor
pop
lea
lods
push
subb
fisttps
mov
insb
adc
rorl
fcompl
dec
mov
lret
and
pop
fs
inc
outsl
cld
push
cmpsl
cmp
leave
cmp
loop
je
and
add
roll
push
mov
cmp
in
ret
xor
pop
call
sbb
es
and
push
mov
inc
pop
dec
outsl
mov
incb
inc
inc
sar
mov
out
jle
std
cmp
out
sbbb
dec
cmc
jg
cmp
movsl
in
jg
mov
xchg
test
pop
les
mov
dec
lahf
dec
popa
mov
mov
add
pop
mov
imul
xor
clc
incl
push
ret
pusha
gs
lods
test
cmc
sbb
inc
or
push
sbb
xchg
stc
mov
scas
mov
dec
lds
shlb
popa
xor
test
xlat
pop
sbb
lods
cmc
das
push
mov
mov
add
and
adc
lds
je
push
cmp
stos
addr16
addr16
ja
jb
loopne
pop
or
out
mov
inc
pop
push
dec
push
dec
xor
cmp
mov
mov
xor
insb
mov
out
loopne
cmp
pop
mov
mov
inc
and
out
test
mov
shll
or
js
stos
push
mov
adc
sti
insl
mov
stos
xchg
push
sub
or
or
loop
movsl
imulb
inc
dec
sub
pop
mov
mov
mov
pop
dec
pop
or
xchg
and
pop
adc
cmp
push
mov
mov
pop
mov
cmp
int
inc
fadd
test
faddl
mov
or
add
push
adc
popa
adc
or
sub
stos
or
sbb
push
leave
ds
pop
mov
push
mov
push
mov
inc
sub
cmp
sub
or
ss
push
push
inc
roll
outsl
in
loop
or
icebp
or
and
and
mov
cld
lahf
adc
xchg
mov
inc
mov
or
and
sti
arpl
sti
mov
or
push
mov
pushf
dec
mov
lds
stos
dec
xor
dec
adc
stos
out
icebp
sbb
addr16
outsl
jne
xchg
adc
mov
sbb
xchg
sbb
and
push
xor
outsl
xor
dec
or
ficoml
cwtl
shll
mov
hlt
or
es
dec
push
int
test
outsb
add
outsl
outsb
lcall
or
addr16
pop
inc
mov
pop
int3
sbb
in
xor
jl
inc
packsswb
inc
sti
jns
fwait
mov
pushf
cs
sbb
or
xchg
inc
call
stos
pop
test
mov
daa
cmp
notl
and
into
aas
addb
cmc
dec
jmp
addb
dec
sarl
and
xor
out
call
adc
fbstp
sub
incl
popa
push
rolw
hlt
fdivrs
leave
lret
incl
push
inc
icebp
pop
and
dec
inc
addr16
push
clc
add
sbb
push
imul
dec
mov
das
dec
outsb
cmp
divb
loope
dec
outsl
push
add
pusha
jecxz
nop
aas
mov
push
nop
or
popa
gs
inc
stos
clc
sti
add
cmp
sarb
aam
sub
je
xchg
mov
pushl
dec
mov
orl
nop
cmp
fldcw
add
adc
push
fsub
lods
ret
dec
fiaddl
fsubs
push
dec
iret
push
incl
cmp
cmp
int3
add
lods
cltd
fsubrs
pop
cmp
lock
jle
dec
push
push
mov
cmp
adc
or
addr16
mov
pop
mov
mov
cwtl
lds
fbld
incl
cmpsl
add
mov
stc
jmp
call
scas
sbb
rcrl
pop
add
and
fisttpl
push
popa
pop
popa
inc
fwait
adc
pop
sub
or
rcrb
push
pop
mov
out
pop
mov
xor
sbb
mov
pushl
lods
xchg
cld
orl
loope
sub
sbbb
mov
mov
setg
cmp
sbb
popf
hlt
xor
inc
xor
adc
sbb
outsl
dec
es
scas
jne
pop
arpl
dec
jb
and
sbb
pop
ss
imul
lret
push
fs
jge
mov
pop
lods
add
gs
pop
adc
sub
or
push
out
cmp
pop
les
ud0
inc
adc
arpl
sub
hlt
mov
adc
push
inc
pop
add
mov
fists
and
xlat
push
les
push
or
mov
or
add
ljmp
lahf
adc
fmul
lret
cli
aaa
cmp
adcb
test
mov
jge
insl
add
or
mov
jb
or
xchg
add
aam
jecxz
rclb
rcrl
ja
jb
scas
or
icebp
jg
fsqrt
std
sub
lret
rcr
jge
add
mov
jno
inc
mov
loop
sub
jle
inc
pop
dec
orb
mov
or
call
lcall
jo
adc
sbb
add
and
push
mov
and
daa
inc
in
mov
xchg
xchg
rcll
gs
inc
sub
clc
sbb
add
cld
sarb
cmp
adc
cmpsb
addl
mov
push
rcl
movb
push
adc
inc
out
or
inc
inc
sbb
stos
dec
pop
jl
pop
gs
pop
xchg
aad
adc
fnsave
push
inc
add
pusha
stos
and
aaa
xchg
mov
fstps
push
rol
sbb
lret
hlt
ja
dec
adc
cmp
hlt
xor
lcall
mov
adc
pop
and
mov
lock
adc
and
mov
roll
dec
repnz
imul
jne
gs
test
psubw
inc
jne
ljmp
aaa
mov
cld
les
mov
pop
imul
fstps
dec
data16
lea
frstor
mov
xchg
xchg
fmuls
adc
rorl
jnp
sar
push
outsb
push
dec
mov
xchg
xor
mov
mov
ss
mov
jbe
in
sub
shr
decl
cmpsl
inc
adc
sbb
adc
add
push
adc
or
fisubl
mov
sbb
pop
sbb
jbe
stos
adc
xor
push
xor
mov
jne
jb
or
adcl
sub
mov
imul
icebp
add
rcrl
push
call
std
and
shlb
xchg
subl
mov
mov
mov
mov
mov
insb
dec
push
mov
mov
mov
add
stos
movsb
mov
dec
inc
int3
aam
add
and
pop
xorl
aas
pop
push
rorl
pop
test
adc
sub
jbe
add
ss
data16
fs
andl
dec
fnstsw
pop
idivl
jbe
lods
jo
fldt
push
push
mov
or
lret
jb
sbb
repnz
or
loope
xchg
shll
in
test
mov
jp
popf
pop
jo
mov
cld
pop
add
and
pop
pop
push
sbb
in
daa
jbe
inc
add
push
fisttpll
sbb
mov
sbb
mov
imul
outsb
fdivrp
fistps
xor
jecxz
mov
popf
pushf
and
inc
decl
outsl
loopne
call
jp
pop
in
je
test
je
lea
test
loopne
cmc
stc
pop
jl
xlat
adc
test
add
shrl
daa
stc
bound
outsl
mov
mov
adc
hlt
cmp
add
clc
in
dec
ror
inc
push
inc
inc
mov
push
mov
push
jl
sarb
sbb
sbb
mov
sarl
sub
push
out
ffree
mov
imul
inc
ss
popa
mov
dec
loopne
jns
sahf
repz
cs
sti
fs
and
and
cmc
add
jg
inc
je
push
aad
jmp
add
dec
jne
inc
sbb
mov
adc
adc
inc
fwait
adc
push
std
pop
adc
imul
mov
xchg
fistpll
aaa
inc
pusha
test
xchg
mov
mov
jb
sub
aaa
orb
push
fisubrs
cld
lcall
push
push
mov
das
adc
mov
lock
jle
xor
sub
and
push
push
insl
mov
int
shll
pushl
std
in
das
dec
pop
sbb
sti
js
and
push
push
movsb
pop
mov
mov
xchg
jg
mov
sub
pop
call
pop
sbb
dec
andb
mov
sbb
out
pop
push
imul
pop
and
rcrl
lret
sbb
das
mov
neg
clc
lea
test
mov
cld
in
add
leave
xor
sbbb
ffreep
test
in
inc
sbb
jecxz
sbb
push
pop
iret
jo
insl
adcb
insl
mov
xlat
fiadds
nop
stos
and
xchg
addb
mov
out
push
sbb
inc
fsubrs
outsl
jecxz
pop
dec
jp
out
call
xor
shlb
mov
pop
cmp
pop
push
jecxz
jmp
arpl
stc
mov
add
and
sub
pop
fimuls
add
movsb
incb
xor
es
incl
inc
mov
xchg
cmp
pop
adc
xor
repnz
pop
stos
xor
or
or
add
pushf
cltd
xor
fcoms
dec
out
mov
pop
fwait
mov
faddl
push
mov
in
lods
cmp
jnp
cmpsl
fstpt
sahf
push
add
inc
mov
push
insb
jge
pusha
lret
mov
stos
adc
sbb
inc
mov
mov
mov
add
lret
in
in
mov
xchg
push
aam
jg
sub
jne
and
xchg
jnp
sbb
push
pop
clc
filds
push
jl
push
ror
mov
call
pop
arpl
imul
mov
inc
mov
into
out
jmp
jg
mov
sub
mov
push
outsl
inc
fstpt
or
fwait
dec
rolb
insb
hlt
push
ljmp
sbb
lods
dec
fnstenv
inc
das
filds
call
jp
and
insl
popf
aam
mov
jle
xchg
add
loopne
sbb
push
dec
pop
call
ljmp
ret
adc
inc
cld
pop
mov
pushf
fnstenv
xor
xchg
xor
push
dec
call
into
hlt
dec
jno
ss
inc
push
inc
inc
icebp
sbbl
cmpsb
and
lret
fimuls
add
push
mov
mov
pop
or
sbb
jb
pop
mov
mov
cmc
mov
ret
mov
jge
push
push
mov
cltd
dec
rcrl
xor
and
stos
sub
lock
or
add
sub
or
jns
add
pop
ds
adc
mov
jns
jmp
cmp
inc
or
in
jp
dec
std
mov
and
pop
mov
outsl
pop
add
jne
out
sub
mov
sub
stc
pop
pop
clc
add
ja
sbb
pop
inc
add
or
inc
aas
mov
decl
sbb
repnz
mov
or
lock
sub
mov
loopne
loop
push
or
sahf
fidivs
inc
pusha
jl
add
mov
push
pop
and
in
inc
push
jbe
and
popf
lods
fcmove
lods
lret
enter
mov
fistpll
mov
adc
mov
mov
mov
pop
mov
mov
mov
fldcw
or
divb
in
movsl
or
sub
lret
loopne
andl
jg
cmpsb
and
js
fsubs
pushf
fucomp
mov
add
cltd
fs
push
gs
jle
push
pop
adc
pop
adc
mov
dec
cmc
andl
scas
test
adc
or
sbb
pop
repz
insl
inc
adc
ljmp
shl
and
jg
inc
pop
test
lahf
stos
mov
dec
js
fwait
rcl
std
pop
cmp
adc
sub
das
push
xor
arpl
sbb
push
xor
inc
enter
pop
pusha
inc
nop
mov
or
pop
mov
inc
xor
lcall
mov
mov
xor
cmp
pop
or
add
inc
and
loope
sub
aaa
mov
adc
addb
inc
and
jmp
imul
jg
dec
push
pop
adc
push
int
cmpb
sub
dec
pop
ret
jb
in
ret
mov
repnz
js
or
mov
ficompl
push
adc
xor
decl
jmp
xchg
int
xor
fwait
jg
push
aad
lods
loop
cli
mov
jo
jecxz
dec
call
mov
mov
das
mov
std
movsb
outsl
add
pop
test
jo
and
xor
popa
or
sub
jmp
jne
fdivrs
ret
add
inc
xor
sahf
mov
incl
cs
jns
movsl
or
xchg
mov
pop
testl
jae
inc
xor
and
dec
xchg
test
and
push
sar
mov
adc
data16
arpl
adc
sub
test
sbb
dec
mov
push
stos
xchg
lods
rcrb
in
test
mov
popf
subb
sarl
add
aas
js
mov
mov
jecxz
pop
std
int
xchg
adcb
jne
leave
cltd
mov
mov
dec
dec
and
inc
sbb
dec
fimull
jnp
cmp
lret
test
dec
lret
lcall
mov
pop
and
arpl
shl
arpl
cmpsb
lcall
sub
xor
cld
push
jns
bswap
cmp
and
pushl
mov
insb
stos
jle
dec
mov
dec
jne
arpl
fdivs
addr16
jg
lea
mov
inc
fistps
add
pushl
mov
inc
add
popf
int
cwtl
dec
cwtl
fucom
stos
mov
dec
aam
inc
xor
dec
inc
outsb
mov
cld
push
adc
pop
inc
or
lret
sbb
imul
push
mov
inc
mov
jbe
xlat
jae
fisttps
in
inc
pop
cmp
mov
repnz
cld
push
xchg
or
decb
cmp
jecxz
inc
add
xor
lahf
rclb
ret
mov
ss
aad
stos
jno
insb
and
div
cmp
loop
push
imul
loopne
sbb
aaa
xchg
loopne,pt
dec
xchg
in
repz
movsb
les
cmpsb
aam
mov
cmp
icebp
inc
jo
inc
orl
cwtl
popa
xchg
pslld
popa
or
fists
stos
jmp
aad
pop
in
push
lock
jbe
mov
mov
push
cmp
push
cmp
enter
ret
or
mov
jb
repz
xlat
dec
push
sub
adc
add
daa
add
rolb
movsl
and
push
xorb
decl
lods
addb
pop
out
jbe
pop
ds
scas
rcrb
stos
sub
imul
lret
and
mov
pop
lock
outsl
mov
pop
inc
xor
fdivrp
dec
enter
push
mov
jo
fstl
out
push
fsubrs
rcl
rorb
jp
jno
or
movsl
xchg
add
ja
sbb
xchg
fdivl
sub
cmp
mov
jg
sbb
scas
add
leave
movsl
sub
cmp
cltd
sbb
inc
jge
push
cs
stos
orl
incl
pop
mov
mov
or
sbb
inc
jo
add
mov
jb
xchg
sahf
jecxz
inc
fisubrl
jmp
mov
push
cwtl
inc
xchg
mov
mov
decb
inc
lahf
jmp
cs
out
jg
sub
mov
jbe
sbb
mov
pop
shrl
lahf
stos
sbb
shlb
xlat
fcos
pop
test
movsl
out
add
mov
int
dec
inc
pushf
fildl
aaa
fidivrl
dec
sahf
adc
leave
jg
cld
enter
sub
loop
dec
mov
mov
mov
or
jbe
ljmp
xchg
inc
andb
das
insl
add
xchg
andl
push
xor
sti
addr16
sub
adc
gs
dec
pop
xor
decl
adc
nop
shld
daa
lods
inc
mov
insb
in
or
sbb
sub
push
cmp
orl
aam
add
cmpsl
aad
push
pop
outsl
inc
sti
pop
rcl
mov
add
test
push
lods
inc
enter
pusha
mov
popa
roll
adc
pusha
jecxz
les
xor
fisttpl
call
mov
jnp
data16
movsb
lea
mov
pop
mov
in
mov
add
enter
push
arpl
cld
test
xchg
orb
rcrb
clc
xlat
lahf
pop
xchg
rcrl
sti
inc
and
sbb
cmp
mov
mov
in
in
add
into
pop
gs
pop
mov
sub
fbstp
xchg
in
inc
sub
mov
nop
mov
fisubs
fdivs
data16
pop
mov
orb
fnstcw
xchg
in
and
xor
dec
add
psubusb
mov
mov
outsl
add
incb
xlat
dec
mov
adc
pop
rorb
push
or
in
dec
fs
fsubs
inc
cmp
mov
mov
in
add
sub
cmp
leave
add
add
shlb
subl
pushf
sub
push
push
popa
sbb
mov
pushf
cmp
rolb
test
inc
and
daa
inc
gs
shlb
pop
jno
add
xchg
sub
test
sbb
loopne
inc
jg
roll
fstpl
xchg
push
jge
mov
adcl
and
nop
adc
ret
iret
shrb
arpl
pop
mov
xchg
mov
mov
mov
cs
mov
and
push
push
xchg
andl
sbb
xor
mov
mov
test
jno
movl
les
mov
mov
mov
pop
add
or
push
addr16
pop
stos
lea
rolb
loope
jle
or
push
push
frstor
cmp
cmpb
loope
outsl
inc
mov
fcomp
js
mov
sub
cmp
mov
imul
jge
test
jg
enter
pop
in
inc
popa
mov
inc
and
fs
or
je
push
cmp
outsl
fmull
add
or
ss
outsl
inc
lods
adc
mov
faddp
mov
and
push
dec
loope
fstpt
fisubrl
enter
mov
int
xchg
jg
adc
inc
sub
sub
xorl
jle
repz
inc
dec
sub
js
push
les
inc
out
dec
push
leave
mov
dec
jbe
xor
into
aas
xchg
daa
call
cli
loopne
mov
xchg
add
shrb
movsl
stos
fwait
or
sbb
or
dec
xor
pop
inc
push
add
mov
xchg
pushf
or
out
std
pop
pop
add
adc
mov
mov
add
enter
loopne
xchg
or
lret
push
incl
jg
inc
or
xor
and
xchg
fdivrp
xlat
dec
cltd
or
outsb
dec
dec
stos
cli
aaa
push
test
inc
outsl
mov
mov
jmp
xchg
repz
bound
lock
ret
push
lock
out
add
sbb
inc
lds
lds
test
ds
jg
rclb
or
stos
ret
ljmp
sbb
sub
adc
lcall
ret
dec
adc
into
in
cmc
mov
adc
and
cld
pop
adc
push
ss
ficoml
xor
fldcw
mov
inc
fstl
jge
push
mov
xchg
pop
mov
inc
pop
add
push
jns
outsb
movsb
push
sbb
mov
and
mov
lea
cmpsl
addr16
add
lahf
sbb
and
sub
roll
mov
movsl
jg
fstps
jg
rcrb
arpl
fsubs
jbe
and
mov
jecxz
fmuls
jge
pop
cld
dec
clc
mov
sbb
loope
cmp
lods
mov
mov
mov
jns
icebp
popa
lret
popa
adc
sbb
sbb
mov
cwtl
movsl
sub
ret
aad
je
in
js
outsl
xchg
mov
mov
xor
or
jl
shlb
call
cs
es
sub
adc
adc
int
mov
outsl
sbb
cmp
inc
mov
cmp
bound
std
test
nop
loope
lahf
loop
xor
lretw
call
xchg
call
popa
jl
jne
sti
movsl
jbe
cmpsl
mov
inc
sbb
mov
sbb
xchg
jo
stos
loope
cmp
and
aam
test
dec
das
std
mov
xor
sub
sar
jg
pop
jecxz
mov
incb
inc
add
or
jne
mov
cld
pop
jae
dec
sbb
cmpsb
pop
and
pop
pusha
loop
icebp
ret
leave
ret
outsb
movsl
out
sub
mov
push
pop
dec
gs
das
ljmp
outsb
jae
js
in
mov
push
dec
xchg
mov
jo
lock
and
ljmp
inc
movsl
insb
mulb
pusha
mov
fidivrs
imul
dec
cmp
testl
vandps
mov
or
ss
lods
push
cmp
das
jb
ja
dec
imul
sub
fs
shrb
push
pusha
js
es
xchg
into
imul
cli
sbb
cmc
ljmp
cmpsb
bound
add
lret
push
mov
mov
fnstsw
inc
push
push
or
xchg
jg
insl
adc
popa
bound
fyl2xp1
mov
outsb
xor
mov
mov
mov
enter
adc
daa
pop
push
mov
clc
and
pop
inc
js
sub
push
or
movsl
fistl
shll
xor
adc
mov
sub
lahf
int
fdivs
pop
adcb
jb
push
adc
insl
xor
mov
sub
adc
mov
push
addr16
xlat
and
ljmp
inc
mov
aaa
jp
adcb
scas
mov
xchg
fcmovbe
testb
push
push
jbe
adc
pop
xchg
incb
dec
pop
or
clc
movl
sarb
out
fcmovnb
es
adc
mov
loopne
adc
leave
jecxz
and
fadds
push
rorl
jmp
add
inc
or
mov
sbb
sbb
and
call
clc
inc
xchg
incb
and
dec
mov
and
mov
adc
pop
mov
rorl
bound
mov
inc
insl
outsl
rcrb
push
push
push
rcrl
imul
pop
call
inc
mov
adc
dec
fsubrl
jae
mov
dec
dec
pop
pop
pop
or
pop
jle
jo
test
dec
jl
lea
test
mov
push
shlb
push
inc
ljmp
adc
adc
xor
ds
lret
and
or
or
loop,pt
mov
mov
or
mov
sar
mov
inc
mov
rcll
mov
std
sbb
popf
cmp
je
sub
mov
rcrl
ja
adc
int3
dec
mov
orb
outsl
pusha
sub
ret
divb
xor
sub
mov
and
lahf
sub
and
stos
out
fwait
xor
inc
data16
and
dec
pushw
mov
call
mov
push
mull
call
pop
jg
sbb
ljmp
mov
push
jo
cmp
andb
mov
cs
ret
push
xchg
nop
jae
movsl
xor
pop
jp
fadds
lret
push
aaa
mov
daa
add
jg
mov
incl
call
out
inc
jae
sbb
push
xor
push
add
imul
add
out
mov
pop
or
movsb
and
int3
loopne,pn
pushf
or
imul
mov
add
imul
sub
clc
cmp
push
add
xor
icebp
jg
pop
sti
dec
sub
stos
shrb
stc
sarw
fisubs
mov
adc
nop
and
incb
mov
enter
outsb
idivb
mov
pop
jg
xchg
or
jle
movsb
push
lahf
stos
jns
dec
sbb
mov
pusha
sub
mov
cmc
aaa
loop
mov
push
in
fiadds
ljmp
int3
and
xor
orb
and
ss
or
in
inc
inc
addr16
cmc
cmp
pop
ja
jle
dec
mov
repz
push
data16
or
ja
outsl
xchg
jno
test
xchg
dec
scas
scas
fwait
aas
into
mov
and
test
sub
fldcw
cmpsl
fldenv
clc
xor
bound
sbb
push
pop
mov
scas
loop
xor
adc
rclb
lods
cmp
cli
pop
mov
sbb
sahf
sub
loop
lret
fmull
jmp
or
shr
mov
mov
iret
or
sub
fldcw
push
cmpsl
sahf
verr
in
rorb
cmp
out
push
sbb
das
xchg
je
sbb
in
xor
jo
jbe
test
sti
and
decl
mov
jecxz
push
mov
outsl
imull
push
dec
mov
dec
sub
and
mov
mov
mov
jp
popa
icebp
jb
stos
cld
pop
loopne
mov
ljmp
loope
outsl
sub
in
inc
dec
push
sbb
repz
pop
addb
xor
xor
sub
and
mov
sbb
add
sbb
mov
out
mov
les
out
arpl
jmp
jle
add
jo
sbb
pop
jp
add
jne
nop
mov
jo
enter
stc
jle
pop
pushf
mov
jg
data16
add
or
inc
jmp
fdivl
xchg
xor
leave
mov
imul
jg
xor
cmp
sub
pop
add
pop
push
sub
mov
loopne
mov
fdivl
jg
mov
lret
shl
xlat
adc
jmp
popa
and
or
mov
lret
dec
xchg
rolb
mov
inc
cmc
adc
je
inc
mov
movsb
scas
inc
sbb
push
jg
jo
aad
pusha
outsb
jl
mov
mov
dec
fidivrs
in
in
jecxz
jmp
data16
enter
rol
or
cmc
mov
fildll
lret
add
dec
insb
rcll
frstor
xchg
jp
mov
xor
fsubrl
popa
and
cmp
in
add
pop
adc
add
or
shrl
push
adc
fldt
mov
or
dec
mov
jge
rorl
fwait
and
mov
mov
imul
push
clc
jb
lods
testl
ficoml
dec
push
out
inc
in
enter
ficomps
insb
mov
test
mov
lret
test
rclb
fdivrp
fwait
mov
push
inc
mov
sbb
push
pop
js
adc
adc
in
pop
not
and
data16
js
out
pop
mov
and
cmc
add
rcll
loop
xor
xchg
ret
pop
push
pop
in
and
mov
inc
cmp
outsl
jbe
mov
ss
int
mov
inc
or
popl
sbb
clc
ja
jge
test
enter
add
decl
mov
fdivl
cmp
cmp
sbb
mov
push
int
jae
jns
test
inc
insl
jns
add
fdivl
repz
loopne
icebp
jno
mov
gs
lock
mov
das
inc
sub
out
pop
aam
aad
add
shll
cwtl
clc
inc
pop
cli
mov
les
jge
sbb
mov
cmp
outsl
shll
lods
pop
out
and
pop
dec
leave
and
xor
insl
mov
fdivr
dec
scas
pop
leave
jg
lods
inc
sbb
jmp
int3
data16
sub
inc
cmp
inc
in
aaa
jb
lahf
aaa
xor
dec
enter
iret
inc
stos
stos
xchg
outsb
dec
stos
and
add
pop
adcb
pop
cmp
adcb
test
cmpsl
adcl
and
cmpsl
stos
sbb
stos
fidivrl
outsl
rcl
and
roll
ror
push
popf
imul
sbb
mov
shll
jg
lock
int3
fcomi
mov
orb
mov
loope
cli
cld
mov
jns
movb
jecxz
fdivr
fdivl
std
and
cld
decl
or
mov
sbb
lcall
pop
mov
aaa
adc
sub
shlb
pop
push
pop
cmp
jbe
lret
push
xchg
outsl
or
pop
cltd
add
scas
and
dec
cmp
ds
mov
mov
mov
add
dec
inc
test
xchg
dec
insb
ja
lret
adc
push
ss
jg
pop
cwtl
lret
cltd
sbb
xchg
inc
out
push
xor
and
pop
pop
fsub
idiv
or
int3
je
test
sti
out
cli
mov
push
inc
push
int
fisttpl
aam
cmp
out
out
mov
add
icebp
mov
sbb
sub
sbb
jle
push
and
inc
pop
add
mov
bound
outsb
lock
jmp
jp
mov
mov
enter
cmp
outsl
inc
pop
or
xor
cmpsb
test
insb
push
stc
cmpsl
pop
rcrb
mov
push
test
pop
cmp
rcl
aas
xchg
or
insl
stc
sbb
insl
call
sub
push
cmp
sbb
das
shl
push
insl
push
mov
movsb
bound
mov
jge
data16
or
dec
jmp
sub
rol
cmc
mov
mov
daa
inc
xchg
mov
outsw
fistl
das
clc
jne
jle
fidivl
xchg
insb
pop
cwtl
and
fidivrs
jns
dec
xchg
adc
xchg
pushf
adc
jg
sbb
jmp
xchg
push
adc
push
push
dec
add
add
sbb
push
fcoms
dec
add
adc
inc
push
inc
sbb
outsl
aaa
inc
dec
push
inc
inc
xor
roll
and
lahf
mov
ud1
movsl
cmpsl
dec
movl
mov
jbe
aaa
imul
testl
adc
dec
and
xor
in
push
pop
cmp
xor
incb
loop
push
mov
dec
push
dec
int
jp
pop
loopne
xor
sbb
jmp
or
jnp
mov
mov
lock
in
je
xor
inc
insb
push
imul
aad
xor
push
push
outsb
add
mov
das
xchg
loop
jbe
dec
pop
leave
jp
lods
sub
mov
jbe
cld
add
int3
filds
jle
mov
bound
out
xor
pop
bound
test
add
aad
stos
or
add
or
mov
mov
fs
mov
icebp
das
rcl
xor
inc
mov
or
lds
dec
mov
arpl
push
pushl
sbb
shl
roll
call
push
ds
sub
and
fwait
jno
cmovp
fnstcw
sbb
cmp
mov
push
and
fs
pop
dec
sbb
cmp
gs
in
sbb
add
push
and
imul
cli
fwait
sub
in
dec
and
pop
push
sbb
adc
data16
dec
mov
aad
repz
jb
les
je
das
test
cmpl
test
inc
push
dec
inc
xchg
add
repz
push
pop
and
dec
pushf
ret
jl
add
xor
cmp
cmc
bound
fdivr
ss
imul
mov
lcall
inc
adcb
xchg
xor
sub
lret
ret
push
push
pushf
lret
loopne
jecxz
push
lock
or
mov
cmp
mov
test
repnz
ret
xor
push
stc
and
ss
lods
inc
clc
cmp
leave
cmpsl
lods
incl
or
push
dec
arpl
pop
mov
enter
mull
mov
sub
pop
in
and
outsb
inc
jp
and
ret
adc
in
call
jecxz
iret
rcrl
jp
add
mov
add
hlt
adc
mov
orb
cltd
or
mov
cmp
jnp
jo
mov
add
loopne
gs
push
shlb
jl
aaa
ljmp
inc
mov
arpl
inc
pop
add
push
test
mov
or
and
insb
inc
xor
shrl
dec
lret
stos
mov
adc
fsubl
jg
xchg
pop
push
push
lret
mov
insl
or
and
mov
rol
jae
sbb
pushf
sub
je
mov
mov
add
push
pusha
loopne
mov
arpl
sbb
in
in
in
sub
aad
pop
or
pop
mov
scas
add
inc
inc
jbe
js
pop
ret
cmp
mov
cmp
mov
sbb
adc
pushl
push
add
lds
mov
cmp
aad
pop
sub
cmpsb
testb
sbb
lds
adc
or
adc
xor
std
add
inc
hlt
int3
lahf
fcompl
loop
out
push
and
mov
lea
mov
mov
test
in
and
xor
push
adc
push
pop
cld
je
xabort
mov
xchg
subl
roll
pushf
cmpl
cmp
arpl
mov
scas
or
into
sbb
xchg
fsts
subb
icebp
cmpsl
sbbb
xchg
cwtl
inc
xchg
clc
outsl
aad
jo
jno
or
cmp
fisttpll
push
fnstenv
dec
pop
push
mov
pop
xlat
movsl
or
call
das
fnsave
cmp
pop
inc
jns
inc
push
scas
sbb
jle
loope
sar
xor
dec
push
inc
jge
bound
mov
jl
and
inc
rorl
mov
cltd
hlt
sub
adc
je
sbb
sbb
insb
sbb
inc
inc
pop
outsl
pop
dec
arpl
sbb
clc
aad
loop
mov
dec
gs
xor
leave
dec
sbb
inc
fisubl
incl
addr16
and
push
push
ljmp
sub
mov
xor
adcl
mov
mov
sbb
lret
dec
out
push
jmp
add
inc
add
jo
imul
mov
fistpll
gs
xchg
xor
addb
push
sub
arpl
aaa
inc
sbb
push
adc
mov
fsubrl
iret
adc
push
cld
sahf
jp
inc
lods
sbb
inc
inc
pusha
push
jo
xchg
in
xor
bound
inc
pop
js
cmp
aaa
pop
inc
jo
jecxz
jae
mov
dec
into
cmp
nop
or
call
movsl
add
lret
pop
push
pushf
dec
stos
and
mov
popa
mov
mov
push
ss
mov
cld
mov
pop
mov
or
in
pop
add
mov
mov
outsl
xor
inc
xor
sahf
cltd
wbinvd
jo
adcb
ret
js
aas
pop
dec
lock
or
mov
jo
insb
cmp
aas
jmp
mov
lret
rol
in
in
push
mov
test
jp
or
out
inc
mov
add
mov
jg
gs
mov
movsl
mov
sar
rcrl
out
jne
or
pop
enter
out
jp
stos
cli
pop
xor
loopne
add
add
fdivs
shrl
ret
pcmpgtd
test
ds
push
cmp
add
mov
mov
js
jecxz
xor
imul
lods
push
mov
add
mov
nop
insl
push
and
mov
call
sub
push
dec
push
inc
sub
sub
jb
jecxz
in
hlt
sub
xor
js
push
daa
inc
dec
sub
ret
adc
mov
sbb
adc
mov
push
fs
dec
insl
imul
push
outsw
js
and
fs
xor
hlt
dec
shlb
jg
push
push
xor
mov
cmp
xchg
or
jp
insl
adcl
or
mov
shrl
in
dec
outsl
inc
jmp
or
cmp
das
cmp
mov
pushf
sbb
pusha
dec
mov
xlat
fwait
mov
pop
push
loopne
pop
test
out
sbb
jb
jne
fstps
out
outsb
outsl
das
xor
dec
jnp
ret
aam
loopne,pt
push
mov
or
mov
in
and
stc
or
insl
or
and
mov
and
or
adc
xor
gs
or
mov
sbb
add
cmp
dec
fildll
roll
push
call
sbb
pushf
push
je
push
cmpsb
notl
lock
mov
mov
outsl
pop
test
es
ljmp
mov
imul
add
add
inc
cltd
mov
das
ds
aas
cmp
add
push
push
cmpsl
fs
mov
test
xor
mov
dec
cld
out
jge
pop
pop
cmp
xlat
pop
mov
pop
push
cs
pop
adc
rcrb
ficompl
nop
sub
push
dec
inc
push
insb
fcompl
test
outsl
ss
mov
pop
push
dec
add
push
sbb
call
dec
mov
mov
xchg
movsb
mov
and
add
mov
inc
mov
and
aad
or
lods
jns
lahf
paddb
jo
dec
iret
inc
inc
dec
movsl
stos
sub
cmp
iret
sbb
mov
std
nop
jp
mov
cmc
push
pop
jg
out
push
fcoms
ds
mov
xor
in
dec
cmp
add
sbb
sub
cmp
inc
inc
stos
mov
or
push
sbb
sub
fists
add
adc
pop
mov
negb
adc
data16
outsl
push
dec
inc
inc
and
movsl
icebp
fistl
adcb
pusha
insl
xchg
addl
inc
arpl
test
je
push
or
push
sub
movl
fucomi
inc
pop
push
scas
xor
or
add
pop
sub
xchg
je
mov
dec
and
dec
loopne
jle
dec
inc
je
loopne
hlt
cmpsb
sbbb
bound
pop
add
cmp
mov
sub
stos
inc
or
inc
lea
xchg
rcll
xchg
jae,pt
dec
or
xor
insl
dec
adc
xor
je
inc
or
sbb
aaa
sub
aaa
out
sub
add
add
push
stc
icebp
pop
pop
push
jmp
push
test
jge
and
jl
pop
test
into
mov
sub
movsl
sub
mov
adc
lret
mov
add
xor
lret
and
ret
inc
jne
addr16
movsl
andl
dec
push
inc
sbb
test
ret
and
inc
orl
and
dec
jl
and
push
xor
or
cmp
cmpsb
fisubrl
cmp
add
jmp
outsl
jg
imul
adc
test
clc
cmc
fs
fcomps
push
adcl
push
aas
adc
addb
and
mov
dec
bound
addb
clc
dec
push
and
push
addr16
xchg
sub
les
xor
mov
loopne
loop
push
xor
pop
imul
clc
sbb
push
dec
outsl
dec
push
ljmp
bound
add
or
jle
add
inc
in
insl
jle
in
jg
add
cmpsb
rcrl
cmpsl
and
or
mov
aad
stos
and
pop
ret
pop
cltd
or
popf
or
aas
mov
test
enter
and
xchg
sbb
pop
dec
out
adc
inc
cltd
js
inc
and
add
or
fcoms
pop
or
push
call
leave
loop
jno
mov
mov
sbb
jge
in
repz
test
push
xchg
or
mov
cs
cmpsb
adc
imul
adc
movsl
loop
je
fs
in
mov
mov
and
enter
jbe
adc
adc
jb
lcall
inc
fdivp
adc
mov
cs
sbb
out
jmp
shlb
mov
roll
jge
out
jmp
pop
sbbl
cmp
jae
aad
fisttps
sub
ror
adc
lock
addb
sub
lahf
xorl
aad
jne
xor
js
cmc
les
ljmp
loop
xchg
leave
addr16
sbb
inc
xchg
icebp
pop
mov
outsl
filds
mov
daa
sub
xor
pop
mov
in
cli
dec
push
push
mov
adc
xchg
int3
cmc
incl
adc
ficoms
flds
pop
mov
orl
insl
dec
pop
cmp
lcall
jno
add
mov
xorb
adc
pop
sub
icebp
jg
xchg
shl
into
pop
push
ret
addr16
mov
stos
pop
mov
push
fs
rcl
and
fadd
mov
je
mov
adc
xor
aas
aas
add
test
fdivs
inc
sahf
dec
mov
test
or
mov
sahf
bound
in
xor
adc
mov
iret
adc
and
jbe
fwait
jg
lods
outsb
mov
or
jns
xchg
rolb
jmp
add
movl
inc
in
movsl
jbe
test
outsl
fbld
dec
or
pop
pop
roll
adc
cmp
push
xor
cmpsl
sub
imul
loopne
fnstsw
inc
dec
adcb
icebp
mov
mov
je
jne
push
add
icebp
sbb
iret
push
lods
mov
sbb
js
enter
outsb
mov
aad
mov
jno
and
lods
daa
in
mov
inc
sbb
cmp
pop
adc
fwait
sub
xchg
mov
add
add
insl
leave
pop
mov
lock
sbb
test
mov
jbe
ljmp
scas
push
jmp
enter
rol
js
pop
or
imul
mov
mov
mov
adc
pushf
pop
jne
xor
lods
lds
pop
push
push
loop
shlb
out
jo
pop
inc
in
dec
mov
outsl
jne
lret
popa
shll
lods
out
pop
cmc
or
popa
push
jmp
dec
dec
xor
sub
movsb
js
pusha
in
push
adc
push
aaa
outsb
dec
in
mov
mov
arpl
sbb
imul
ret
icebp
inc
dec
push
pop
aad
and
mov
imul
int3
cmp
clc
dec
in
pop
inc
inc
call
add
ret
and
or
mov
add
mov
push
popa
loopne
sbb
inc
pop
sub
lods
decl
jbe
out
sbb
inc
inc
inc
pop
push
add
pop
repz
das
cld
mov
push
leave
or
js
ljmp
loopne
aam
das
call
mov
jbe
pop
sbb
insl
xor
pop
pop
xlat
xchg
mov
and
out
mov
lea
cli
js
mov
repz
mov
mov
jne
or
pop
mov
icebp
das
shll
loopne
and
loop
xor
in
fwait
loopne
adc
sub
in
jne
adc
inc
jo
cwtl
ja
or
add
movsl
mov
popa
xchg
sar
enter
add
push
pop
xor
xor
loope
stos
fcomps
call
sub
add
in
lods
out
push
push
fists
mov
or
pop
push
adc
fs
add
sbb
adc
fs
inc
pop
icebp
push
cld
sbb
jmp
jbe
das
mov
idivb
mov
fldcw
ja
movsl
jmp
rorl
mov
ds
cmp
dec
add
popf
sub
outsb
fs
ret
mov
jecxz
and
nop
pop
sbbb
hlt
lahf
jae
mov
pop
dec
xor
addr16
pop
aam
subb
sbb
or
fucom
cmp
fsubrs
sub
xchg
xor
int
arpl
inc
aas
jo
adc
mov
mov
push
sub
xor
data16
aaa
aaa
add
add
add
jge
imul
add
inc
fstpt
adc
inc
dec
dec
mov
fimuls
xor
dec
mov
daa
or
shrl
sti
subb
pop
mov
lds
mov
pop
les
iret
add
pop
imul
sbb
mov
int
ret
xchg
cs
js
xchg
lds
sub
add
xchg
add
sbb
sbb
icebp
shrb
inc
rcll
pop
shrb
cmp
pop
test
dec
inc
push
jp
das
xchg
loope
mov
push
dec
incl
in
add
pop
dec
aaa
sub
mov
or
jb
or
inc
inc
inc
in
cld
push
inc
mov
jecxz
sbb
mov
mov
std
mov
sub
push
jg
ret
pusha
imul
sbb
mov
sarb
mov
mov
stc
add
jne
inc
mov
or
dec
xchg
add
popf
push
mov
or
std
mov
mov
mov
repnz
sbb
jnp
int
jecxz
pop
mov
scas
stos
add
lds
pusha
loopne
xor
pop
pusha
je
data16
ljmp
cmpsb
out
dec
fstp
imul
std
les
pop
mov
cmp
mov
inc
test
adc
push
fmuls
push
lods
stos
sti
mov
sub
adc
jae
mov
das
and
out
subb
popf
fwait
xchg
ljmp
xor
jp
out
pop
clc
out
push
sbb
adc
xchg
or
fdivl
stos
add
mov
outsl
sub
mov
dec
jg
xor
inc
and
lcall
jl
push
sub
xor
leave
or
or
ljmp
jnp
hlt
hlt
pop
fs
push
int3
das
std
push
int
pop
jg
xchg
imul
mov
inc
cmp
mov
sub
arpl
imul
cli
dec
mov
lock
sub
arpl
das
push
das
insb
jg
inc
add
lds
movsl
js
mov
sub
sbb
nop
mov
push
subb
notb
popf
push
clc
int3
mov
xchg
or
mov
test
dec
scas
sub
pop
mov
mov
rcrb
test
leave
fwait
sbb
outsl
pop
cli
pop
lret
lret
inc
cld
push
sarl
int
mov
cmp
pusha
and
pusha
inc
pop
rcll
and
and
mov
push
push
das
adc
lcall
mov
mov
mov
mov
icebp
add
jne
push
pop
mov
lret
shl
mov
das
jl
adc
mov
rorb
cmp
fimuls
ljmp
xchg
jecxz
adc
lods
imul
filds
mov
push
testb
sbb
aaa
ja
jle
cli
adc
adc
lods
rcr
aas
jg
lods
push
pop
aam
rcrb
inc
cld
mov
aad
int
mov
enter
sub
test
fidivl
inc
xor
inc
pop
insb
bound
lea
and
push
xor
movsl
mov
sbb
pop
push
xor
in
mov
movups
push
out
pop
mov
test
mov
mov
in
jbe
lea
sub
sbb
jo
xor
mov
in
sti
ret
dec
or
pop
cmp
movsb
das
lret
nop
out
add
dec
inc
and
xchg
fdivs
data16
cmp
push
aad
mov
out
push
mov
pusha
pop
inc
dec
dec
lock
cmp
add
ret
test
jge
sub
inc
cs
xchg
repnz
gs
jno
pop
sti
imul
imulb
dec
push
and
xchg
push
rcll
in
test
xor
loopne
jmp
cmp
jecxz
jno
das
shrl
push
mov
adc
iret
cli
jo
std
shll
pop
pop
js
jge
mov
pop
xor
subl
adc
mov
out
push
pop
pop
bound
xchg
jne
cmpb
movsb
incl
rcl
inc
das
mov
fsts
or
test
outsb
inc
imul
inc
pop
dec
push
or
mov
outsb
jmp
sbb
adc
cmovo
inc
dec
jo
cmpsl
cld
mov
push
mov
lea
cmp
and
or
cmp
out
xchg
ljmp
ret
movsl
aaa
inc
mov
fs
xor
addb
insb
jb
jo
loop
fnstcw
inc
jns
adc
push
push
push
shl
push
jb
and
xchg
test
loop
adcb
push
aam
push
fwait
add
push
and
and
les
inc
lods
sbb
mov
fcmovbe
ja
mov
lock
pop
outsb
xor
mov
lock
repz
xor
lock
fidivs
and
pop
push
and
xchg
pop
add
pop
lods
nop
inc
xchg
outsb
xchg
mov
jge
jne
xor
movsl
test
leave
add
inc
ja
mov
int
push
add
xchg
test
adc
sar
scas
add
nop
sbb
cmp
xor
pop
cli
das
call
mov
or
mov
cmp
jle
imul
imul
inc
lods
test
push
popa
lea
push
cmp
dec
hlt
int
decl
mov
negb
mov
or
sub
mov
mov
in
in
ljmp
and
roll
pop
je
or
sub
pop
mov
or
inc
push
pop
cmc
add
mov
shlb
mov
pusha
mov
pop
mov
dec
sbbb
outsb
mov
sbb
push
and
int
rcl
outsl
pop
jp
dec
add
adc
ret
jb
loop
jg
pop
push
adc
mov
icebp
ret
cltd
call
fiaddl
and
testb
push
sub
pop
fists
mov
lea
aam
push
fnsave
stos
or
std
aaa
je
jg
jge
aad
rcrb
xchg
dec
subl
pop
arpl
pop
jae
pop
popa
mov
adcb
pop
add
inc
jle
mov
or
ljmp
rorb
add
scas
pop
xchg
or
jle
push
pop
les
cmpsl
mov
addr16
rcl
mov
aad
pop
ja
nop
pusha
push
xor
and
aad
test
inc
fcmovb
stos
mov
dec
sbb
xor
inc
sbb
dec
mov
sar
repz
arpl
push
sbb
cmc
ja
mov
mov
add
mov
bound
add
or
adc
xchg
push
adc
pop
cmc
xchg
dec
insl
xor
aas
dec
inc
imul
fdivs
sub
jmp
jo
mov
cld
movsb
adc
fdivrs
xor
cmp
sar
and
lret
jg
xchg
mov
scas
and
bound
adc
xor
pop
or
fwait
or
cmc
stos
xchg
push
incl
je
cwtl
sub
cltd
mov
adc
inc
ret
jne
popf
cld
ljmp
fsubrl
mov
das
cmp
mov
daa
hlt
scas
mov
adc
out
xchg
ljmp
mov
adc
pop
cs
in
add
add
xchg
dec
orb
mov
add
test
fsubr
movsl
inc
mov
adc
xchg
cmp
fadds
inc
sub
push
mov
mov
rcrl
loope
sub
cltd
add
jnp
in
xor
loopne
dec
push
je
stos
mov
pop
insl
js
js
aas
jo
mov
cmp
and
mov
xchg
pop
insb
insb
aam
in
sub
fists
js
loope
mov
xchg
dec
mov
daa
lea
inc
inc
push
pop
adc
test
rcl
adc
inc
out
push
push
sbb
arpl
push
cmpsb
loope
inc
ja
insl
insb
jne
ja
jle
xchg
daa
jno
in
lods
in
push
mov
cmc
fistpl
call
sbb
mov
xor
shrb
push
jle
lcall
std
jp
and
mov
push
les
xchg
add
movsb
xchg
push
dec
push
inc
call
scas
dec
ja
dec
dec
push
fs
push
clc
or
add
mov
mov
sub
fisubrs
shlb
mov
aad
lea
clc
sbb
in
add
out
jbe
int
dec
cwtl
pop
push
rorb
jg
inc
xor
and
dec
loope
sbb
pop
into
adc
sbb
mov
xchg
cmp
inc
aas
mov
imul
mov
arpl
out
loop
aam
push
and
pop
mov
add
mov
or
aad
mov
jecxz
aaa
adc
test
adc
or
sbb
sbb
setne
outsl
loopne
xchg
cmpsb
scas
ret
push
out
push
mov
movsb
pop
inc
loopne
inc
pop
data16
and
pop
fcmovnb
cmp
mov
mov
dec
dec
push
mov
mov
push
lea
sbb
pop
cmp
roll
hlt
pop
and
js
mov
mov
das
sbb
mov
or
pop
jmp
andl
fs
sub
or
ljmp
push
mov
cmp
lcall
dec
xor
cmp
cmpsb
das
in
or
pusha
mov
test
scas
xorl
mov
loop
mov
push
loop
sbb
shlb
jbe
cmp
inc
mov
jmp
sbb
pop
mov
mov
shl
aas
mov
xor
pop
cmpsb
cmpsl
pop
lods
push
add
push
add
ja
and
mov
rcl
push
adc
adc
jmp
dec
cmp
ret
xchg
mov
xchg
add
fwait
or
sub
ljmp
mov
dec
ja
mov
pop
loop
sti
gs
cmpb
ret
inc
leave
es
insl
adcb
in
sub
mov
loopne
mov
sbb
mov
adc
ja
sub
push
inc
sbb
inc
rclb
inc
inc
out
fsub
or
jnp
jo
xor
xor
and
or
adc
out
ja
xor
dec
shrl
imul
repz
fiadds
cli
and
jbe
sub
push
outsb
das
fs
xchg
loopne
sbb
mov
lahf
cmp
lret
pop
xchg
mov
add
sbb
jle
mov
jg
adc
dec
jo
adc
add
pop
mov
sahf
loope
xor
insl
loope
lock
scas
or
add
je
mov
jno
adc
and
mov
daa
dec
xchg
std
lds
cltd
loop
dec
add
pop
inc
mov
sahf
jb
or
mov
or
js
or
es
shll
div
insb
es
and
jmp
lret
xor
and
pop
ljmp
xchg
push
outsb
sub
or
inc
sbbl
inc
dec
in
jbe
incb
dec
aaa
pop
jg
mov
mov
xchg
inc
push
out
loop
repz
pop
push
jno
sub
jg
xchg
xchg
ret
aad
xchg
leave
mov
sbb
jo
rol
mov
jmp
add
xchg
or
push
and
xchg
lcall
mov
inc
movsl
add
mov
sbb
sbb
push
outsb
adc
sbb
xchg
mov
xchg
xor
lods
pop
icebp
hlt
mov
pop
dec
orl
inc
push
cmp
adc
sbb
cmc
aad
cli
mov
lahf
xchg
cmpsb
pop
aad
scas
sbb
dec
movsb
add
fildl
rcl
in
iret
insl
adc
popa
scas
jmp
movb
dec
dec
mov
add
lods
xor
bound
cmp
int3
push
sti
loop
pop
pop
mov
cmp
pop
outsl
das
pop
mov
sub
pop
inc
mull
pop
roll
or
sti
dec
add
movb
test
inc
mov
push
cmpsl
push
iret
and
jo
jbe
pop
cmc
mov
or
shr
outsb
sub
jg
cmp
jle
dec
stos
in
outsl
sbb
lods
push
inc
sbb
xlat
pop
cli
cmp
arpl
or
pop
and
push
cld
outsl
mov
inc
dec
adc
jp
and
push
nop
fwait
and
fnstsw
sub
movlhps
xor
jb
jbe
rol
lcall
iret
bound
loope
test
and
dec
and
lock
test
int3
rorb
loope
insl
call
jne
sub
ret
or
adc
or
incl
testl
sbb
xchg
jmp
sub
push
ret
rorb
aam
jge
inc
mov
lock
xchg
push
lret
aad
sbb
push
or
jg
sahf
ss
sub
mov
lahf
xchg
in
clc
shl
fistps
jl
inc
sbb
lcall
insb
pusha
pop
insb
adc
xorb
cmp
fists
call
pop
cmp
imul
dec
andb
push
or
push
pop
in
mov
cs
pop
bound
dec
rol
jecxz
rcr
pop
xchg
pop
adc
outsl
adc
inc
icebp
test
xchg
cmp
xchg
sub
nop
cmpl
sub
mov
mov
jl
mov
enter
xor
bound
sub
outsl
dec
dec
cld
add
daa
pop
clc
pop
adc
pop
les
sbb
icebp
pushl
gs
mov
dec
bnd
dec
inc
fsubs
mov
jbe
loop
lds
inc
lds
lea
push
or
stc
mov
shlb
mov
les
cltd
or
insl
aas
xchg
push
loopne
das
pushf
imul
stos
sub
mov
lods
js
mov
mov
dec
jno
jmp
xor
pop
aaa
xchg
pop
inc
cmp
bound
jo
add
cmp
xchg
rclb
mov
lea
lea
mov
push
mov
sub
sub
inc
fwait
movsl
pop
mov
and
stos
mov
adc
movsb
outsb
xchg
sarl
dec
xor
mov
add
and
push
inc
mov
inc
outsb
lock
mov
adc
xchg
sbb
ss
or
inc
and
enter
mov
mov
cmp
xor
push
mov
push
fbld
pusha
push
add
and
push
aam
mov
mov
mov
inc
cld
mov
sbb
sub
mov
hlt
mov
mov
lcall
arpl
or
cwtl
cmp
push
clc
lds
fidivs
cmp
add
mov
add
jo
or
pusha
push
outsl
lahf
sub
mov
pop
push
push
push
cmpsl
test
add
bound
dec
inc
insb
lods
jg
adcb
das
cmp
mov
sub
push
xor
sub
xor
fldenv
test
popa
sbbb
add
mov
lods
cmpsl
sbb
jo
ljmp
iret
popf
adc
cmc
cmpl
insl
clc
mov
shrl
arpl
fwait
push
dec
aaa
popf
out
push
out
aaa
inc
pop
in
dec
test
es
mov
jecxz
adc
mov
in
stos
inc
xor
dec
mov
insl
cld
imull
mov
int3
pop
push
xchg
dec
das
into
imul
push
mov
push
inc
dec
outsb
fildll
inc
hlt
dec
mov
out
or
pop
pop
je
or
loope
and
push
enter
ret
das
fwait
xchg
les
icebp
mov
push
add
dec
adc
push
iret
or
test
add
arpl
ret
jecxz
enter
sbb
and
jp
cmp
add
rcr
mov
lahf
fstpt
inc
pop
adc
ljmp
call
es
jp
or
leave
aad
pop
pop
mov
pop
stos
es
dec
cmpsl
mov
cmpsb
add
dec
xor
mov
add
jg
imul
or
cs
rcll
push
lods
imul
lahf
xchg
insl
or
andb
xlat
jl
outsb
ror
int
jns
fwait
ds
lahf
xlat
mov
outsb
fsubs
das
mov
loopne
shrl
sbb
nop
dec
callw
mov
lds
lret
jl
leave
test
mov
xor
cli
mov
xor
shlb
cmp
push
ds
add
pop
stos
les
pop
inc
je
adc
or
mov
push
inc
mov
popf
pushf
int3
imul
push
es
jbe
mov
push
ljmp
pop
adc
cmpsb
add
jl
jle
sbb
add
mov
insb
outsl
cmp
dec
stos
mov
ror
dec
fucomp
stos
sbb
pop
jb
int
xlat
sbb
iret
xor
mov
xchg
xlat
dec
fcmovbe
push
pop
sbb
decl
es
call
clc
pop
dec
inc
jg
push
dec
mov
push
add
inc
rol
div
or
dec
dec
outsb
inc
pop
adcb
add
cmpsb
popf
inc
icebp
mov
popa
pop
aam
roll
inc
add
push
movsb
sti
cmpsl
dec
dec
mov
pop
jmp
insb
fs
push
push
fs
cmp
sbb
jae
adc
jo
lea
nop
adc
call
add
pop
inc
addb
add
add
and
or
ljmp
add
adc
add
or
dec
inc
lcall
push
ja
dec
xor
jp
cmp
movsl
jns
xchg
add
sub
ret
lock
sub
test
mov
jns
pop
xor
fisttpl
add
mov
xchg
adc
je
adc
or
into
add
jo
stc
call
xchg
add
cmp
xor
and
sarl
and
xor
jg
xor
and
repnz
and
cld
mov
sbb
mov
add
mov
sbb
sti
mov
jne
cmp
add
int
add
sub
call
iret
add
movups
jg
cld
adc
sub
xchg
adc
mov
daa
xchg
lock
mov
add
adc
fucomi
mov
adc
cmp
mov
mov
add
inc
mov
cmpsl
and
jp
xchg
cmpsb
add
fistpl
sbb
shrl
daa
pop
pop
clc
dec
scas
inc
add
pusha
popf
lods
orl
adc
dec
test
outsl
pop
and
pop
add
pop
aaa
test
scas
add
mov
pushl
sbb
mov
ss
test
int3
pop
ljmp
xchg
sbb
hlt
add
rclb
loope
mov
jg
cmp
jnp
jb
cld
in
andb
lods
jge
fisttps
adc
mov
insb
xor
xor
pop
aas
pop
cmpsl
inc
vpandn
inc
rorb
cs
jne
sar
in
jb
insl
inc
fildl
add
aas
inc
lds
inc
imul
ret
idiv
and
lahf
pop
adc
or
add
clc
outsl
incl
add
dec
mov
add
jg
int
ljmp
aas
or
into
mov
inc
mov
sub
jg
and
lods
or
dec
jo
mov
inc
sub
pop
incb
pop
movsb
test
mov
rcr
fcmovnu
mov
jns
popa
adc
pop
inc
cs
and
and
add
sub
incl
xlat
sub
cmp
lods
pop
add
dec
ljmp
inc
add
sbb
ljmp
clc
cmp
sbb
adc
pop
mov
xor
jmp
mov
xor
xor
mov
loop
ret
dec
pop
cld
or
test
decl
jp
jno
mov
mov
adc
dec
or
xchg
jne
les
adc
push
fistpll
lods
andl
pop
dec
cmp
and
arpl
mov
add
loope
add
jns
fwait
mov
loop
pushf
add
js
cld
sbb
sub
xor
push
dec
mov
mov
or
shrl
mov
mov
test
push
pop
and
imul
add
iret
lret
add
sbb
sbb
rolb
sub
adc
aad
sti
adc
add
xchg
pop
cmp
movsl
mov
aaa
mov
outsb
loopne
jae
cltd
repz
adc
cmpb
fdivrp
pop
add
mov
mov
xchg
loopne
xchg
cmp
call
adc
sub
cltd
in
cld
push
push
cmp
push
jp
inc
xchg
pop
aas
lahf
sub
ja
scas
dec
leave
divb
or
lods
xorb
push
test
pop
xchg
nop
push
add
xor
sbb
pop
adc
cmp
mov
call
and
rcll
or
adc
out
lcall
insb
push
push
fildll
cmovle
add
add
hlt
testb
lahf
push
fmull
xor
call
or
dec
bound
push
sbb
out
out
and
mov
or
ret
ficomps
mov
dec
ja
inc
loope
imul
inc
aam
and
jmp
ja
mov
and
rol
test
insb
sbb
int
nop
ljmp
xor
or
xor
testb
add
pop
aaa
imul
xor
stos
les
jno
movsl
or
lds
adc
push
inc
pop
xchg
mov
ss
push
jecxz
dec
xchg
xchg
add
adc
ds
adc
enter
addr16
adcl
enter
mov
sbb
jge
jl
dec
test
in
not
add
or
dec
push
and
pusha
lock
cli
cld
mov
inc
scas
or
add
or
in
loope
add
outsl
or
xchg
aam
ret
jle
or
mov
ret
cmc
mov
adc
sub
cmp
sbb
push
push
int3
sbb
inc
or
loop
movb
sub
in
inc
or
dec
inc
notb
aad
imul
inc
in
stos
fdivrl
add
shlb
jg
push
sbb
adc
bnd
bound
inc
popa
dec
mov
lock
inc
pop
out
nop
data16
loopne
popa
jbe
mov
pop
adc
jge
cld
test
cmp
inc
cmpb
pusha
inc
dec
das
sub
clc
jp
negl
sub
or
push
jecxz
sub
andl
pop
mov
aaa
scas
idivl
sbb
dec
add
lahf
aam
cmpsl
mov
dec
push
xor
pop
pop
xor
int3
lret
scas
jne
inc
pop
loopne
loope
xor
cltd
nop
jb
push
xchg
shll
cmpsl
in
push
in
out
fstpt
dec
pop
ds
testb
add
and
xchg
fistpll
mov
inc
pop
out
dec
movsl
jb,pn
movb
dec
sub
mov
inc
in
scas
iret
mov
pop
adc
inc
jae
sub
and
push
lods
negb
cli
add
jns
mov
lea
jmp
jno
popa
pop
in
sub
xor
sub
test
mov
mov
testb
xor
andb
mov
int3
add
sub
jo
push
push
imulb
cwtd
add
adc
clc
mov
xchg
pusha
sbb
leave
std
rorl
sub
xchg
mov
das
xor
in
xchg
sbb
clc
fstpl
decl
cmp
nop
xor
popf
add
mov
sbb
test
adc
add
mov
or
in
ret
add
mov
or
sub
pusha
push
or
push
outsl
outsl
clc
dec
inc
xchg
sub
dec
xchg
leave
into
out
xchg
fisubrs
insb
loop
or
mov
mov
xor
lahf
adc
ss
inc
xchg
insl
ljmp
mov
mov
in
cmp
cmpsl
or
sub
push
sub
cmpsl
pushl
js
ljmp
shrl
int
mov
inc
enter
add
es
out
fcoml
cmc
ficoms
mov
lods
xchg
lods
add
popf
ljmp
cltd
jae
sti
lock
or
xor
lock
jge
inc
pop
mov
dec
or
xor
push
lcall
mov
fs
outsl
sub
mov
std
push
inc
dec
mov
xchg
mov
pop
sti
mov
loop
inc
or
pop
add
mov
popf
cmpb
xor
or
inc
and
pop
jg
inc
testb
sbb
out
in
mov
and
js
in
test
outsb
dec
mov
add
add
adc
fdivrs
pop
inc
cmpsb
in
repz
stos
sbb
jmp
out
movsl
mov
aaa
std
mov
push
sub
xor
add
lret
test
mov
enter
adc
push
sti
imul
setp
loop
sarb
cltd
sub
sub
mov
jnp
cmpsl
imul
lock
gs
xor
cs
push
lret
inc
inc
movsl
xchg
xchg
out
sbb
pop
adc
pop
test
mov
shll
push
jp
popf
mov
xor
out
sti
or
push
or
rorb
sbb
fsubrs
xchg
das
jne
push
je
ret
mov
xor
sbb
or
sub
in
or
test
in
jp
inc
lea
mov
xchg
xchg
popa
daa
leave
pop
pop
adc
ss
das
subb
mov
and
push
or
ret
aaa
mov
pop
jle
jl
inc
mov
test
mov
ljmp
sarl
adc
mov
lock
or
mov
insb
rcrl
aas
lock
in
dec
adc
shl
sbb
xor
jmp
cmpsb
sub
fucom
addr16
inc
lods
in
fcomps
mov
ficoms
mov
push
clc
cmpsl
negl
push
adc
inc
in
lock
jmp
inc
xor
fwait
out
imul
shrb
ss
add
testl
or
xchg
ja
add
rolb
aam
lock
sub
dec
popa
sbb
or
addb
sbb
jl
mov
subl
jnp
mov
or
lods
xchg
or
hlt
inc
pop
jbe
cs
inc
jno
fiadds
pop
pushf
jne
cmc
mov
sub
sub
add
out
jnp
cmp
ret
or
xchg
adc
pop
clc
rolb
gs
ds
push
fldl
add
sub
push
sub
addl
pop
push
scas
test
orl
mov
jnp
inc
stos
aaa
in
push
pop
clc
mov
fbstp
xlat
out
cmp
jne
add
mov
adc
adc
mov
mov
pop
cwtl
mov
xor
push
push
jge
bound
mov
pop
mov
jae
jns
cmp
lcall
insl
sbb
in
sub
jecxz
mov
sbb
inc
mov
dec
nopl
popf
jb
mov
mov
jmp
pop
pop
ret
call
aas
mov
gs
scas
int3
pop
jbe
ljmp
dec
dec
push
sbb
and
xor
pop
mov
sbb
add
add
je
fidivl
and
cli
inc
sub
pop
in
loopne
das
cmp
inc
clc
pop
mov
sub
out
gs
xchg
lods
jmp
fstpl
dec
fnstcw
jp
lcall
lahf
fs
mov
mov
fistpl
int3
and
cmpsl
pusha
jbe
orb
push
into
add
ljmp
xchg
mov
bound
lods
mov
lahf
lret
inc
ja
or
cmpsb
inc
in
or
ss
sti
inc
mov
push
push
mov
sub
stos
test
enter
fucomi
push
lret
inc
repnz
lds
sar
test
sub
add
and
cmp
fidivrs
movsl
xchg
scas
insl
pop
dec
outsb
dec
ljmp
and
cwtl
xor
inc
insl
add
jmp
inc
out
ret
in
fcom
cmp
or
adc
push
repz
out
andl
jbe
cld
xchg
push
lods
in
mov
adc
dec
mov
out
cmp
mov
das
dec
mov
fwait
or
xorl
repz
or
neg
scas
xor
add
lock
fidivl
mov
cld
pop
xchg
cli
aaa
outsl
arpl
push
adc
inc
mov
adc
fcoml
push
or
iret
inc
add
jg
sbb
mov
cmpb
test
cmp
push
out
js
sub
aas
and
fwait
lret
testb
loope
sbb
lock
dec
cmp
adc
mov
jle
add
call
icebp
lods
ss
es
lods
jl
icebp
mov
jae
imul
rcr
mov
add
or
iret
pop
dec
or
ljmp
outsb
xor
xchg
pusha
std
push
imul
mov
sti
out
adc
add
fisttpll
testl
out
fiadds
hlt
daa
mov
dec
xlat
add
roll
push
cmp
movsl
pop
mov
out
jl
aam
out
cmp
sub
scas
mov
adc
out
sbb
mov
mov
outsl
inc
and
scas
xchg
jbe
mov
adc
mov
inc
sahf
loop
dec
leave
xor
shll
lret
or
cli
fbstp
enter
pop
mov
mov
in
dec
je
imul
lods
push
cmp
xor
popa
imul
mov
mov
mov
jle
int
pop
cmp
scas
es
test
or
inc
jp
dec
xchg
lods
int
fbstp
repz
adc
stos
enter
mov
sbb
or
xchg
fwait
and
loopne
lret
std
mov
test
cmp
or
out
lods
jno
inc
sub
out
xor
aam
jecxz
ret
into
stc
inc
push
lahf
je
incb
mov
xchg
addr16
scas
das
ja
fwait
jecxz
jb
cmp
mov
mov
pop
mov
add
add
mov
jae
fidivl
adc
out
fists
das
and
or
or
add
adc
sub
sub
insb
cs
xchg
lret
sti
mov
lods
cmp
fcom
mov
outsl
add
inc
lods
test
and
repnz
pop
jl
divl
roll
loope
frstor
lcall
iret
jae
sub
push
and
aaa
push
sbb
sar
sbb
jno
xor
ljmp
in
jbe
pop
push
push
cli
mov
or
int3
shll
sbb
lcall
xor
adc
cmpsl
outsl
aaa
add
sbb
xlat
inc
adc
int3
and
pop
popa
nop
cmpsb
dec
mov
pop
inc
out
shll
in
or
jmp
jp
je
adc
jmp
push
sbb
out
pop
dec
ja
vmovdqu
in
pop
add
xchg
fisubs
inc
sub
cmpsb
pop
jg
dec
sbb
jno
into
xchg
mov
pop
or
jnp
or
stc
xor
push
imul
jno
sub
fcmovnb
fildl
fucom
sub
movsl
sbb
push
adc
mov
dec
cmp
repz
js
add
and
pop
adc
outsb
pop
pop
popa
rcrb
popa
add
filds
lods
mov
addr16
jle
jle
push
add
or
pop
out
test
mov
movsb
mov
mov
loop
pop
xchg
sub
test
das
in
sub
dec
dec
clc
nop
jmp
push
out
and
add
fcmovnu
fisubs
arpl
xor
or
cmp
push
xchg
cmc
mov
add
popf
test
rorb
cld
lods
mov
les
insl
and
call
cs
jo
or
push
xlat
lret
mov
mov
push
adc
push
mov
inc
mov
loope
call
rcrl
add
xorb
jl
les
lea
or
push
xchg
cmp
stc
int
sahf
test
jne
xchg
imul
cli
mov
mov
outsb
je
sbb
ljmp
cld
loopne
mov
sbb
cmpsb
fwait
jbe
rclb
mov
sbb
aam
cmc
adc
jo
and
divb
repnz
add
stos
inc
sbb
mov
mov
dec
cmpsl
cli
or
xlat
test
lea
mov
mov
adc
out
movsl
sbb
les
cmp
lret
xchg
push
ret
scas
test
xor
out
ds
lcall
pop
cmp
cmp
outsb
jl
or
pop
mov
jne
mov
pushf
xchg
rorl
fstps
call
lret
fadds
arpl
pop
loop
lcall
mov
mov
inc
xchg
and
movsl
dec
push
mov
mov
rorb
push
dec
lret
div
mov
jb
or
lahf
jp
in
pop
adc
ljmp
add
arpl
push
jo
mov
aad
lods
and
pop
mov
leave
movq
sti
stos
adc
insb
int
cmp
or
je
decb
clc
xor
in
iret
sahf
stc
and
jg
mov
out
inc
fadd
inc
dec
scas
js
pop
mov
mov
mov
mov
mov
lahf
dec
xchg
clc
call
in
dec
jl
push
stos
cmp
jmp
pop
inc
cmpsb
mov
outsb
fdivr
pop
push
sub
arpl
inc
sahf
jl
sub
pusha
jl
cmp
ljmp
inc
call
pop
pusha
mov
mov
arpl
clc
add
mov
insb
add
or
xchg
mov
pop
pop
mov
xor
xor
inc
loop
push
cmpsb
clc
cmp
insl
enter
mov
insl
sbbb
ret
test
cmp
mov
inc
lret
call
push
pop
arpl
inc
addl
mov
test
rolb
sub
sbb
mov
jecxz
and
shll
push
sub
inc
rcll
daa
daa
xchg
fxch
aas
cli
add
and
pop
xchg
mov
add
cmc
cmp
mov
iret
aaa
in
dec
int
jbe
lods
push
rorb
fdivr
sbb
push
pop
movsl
cmp
outsl
adcl
add
shrd
xchg
icebp
outsl
push
pop
sub
and
dec
insl
decl
cwtl
mov
mov
or
mov
les
out
bound
sbb
popa
aas
jl
in
bsr
jg
repnz
mov
xchg
and
hlt
cmp
push
call
and
fnsave
dec
push
mov
std
dec
jge
jne
mov
xor
mov
inc
dec
es
pushf
sub
imul
add
cmp
pop
mov
and
fiaddl
cli
lea
push
push
jb
xchg
sub
cli
dec
sti
sub
lret
shl
testb
mov
inc
xchg
popf
ret
sarl
inc
loope
jl
cltd
imulb
int
fmulp
aad
pop
popa
sub
mov
insl
push
and
jle
xchg
ljmp
mov
jg
pop
jbe
pop
mov
xchg
cmc
jo
cmc
rolb
in
and
jbe
cltd
bsr
imul
das
dec
sub
in
mov
aad
cmp
inc
adc
mov
mov
test
orl
outsb
mov
les
adc
jge
xor
jg
push
aaa
mov
rcrb
out
shrl
das
or
loopne
mov
adc
shll
mov
and
or
jno
sbb
pop
ja
movb
adc
mov
sub
les
mov
or
dec
mov
and
sbb
inc
nop
mov
notb
mov
adc
pop
lds
addb
test
insb
mov
mov
js
or
and
add
add
out
add
xchg
sti
ljmp
lods
sub
clc
add
xor
addr16
push
sarb
cld
pop
cld
mov
inc
mov
dec
xlat
sbb
pop
mov
mov
jmp
xor
add
mov
and
pop
ljmp
dec
movups
lds
and
cli
repnz
ljmp
pushf
dec
pusha
cmpsb
sbb
popf
cmp
les
enter
xchg
mov
insl
or
fistpll
call
sub
mov
pop
into
pop
adc
pop
push
test
call
inc
pop
test
push
sbbb
stos
fcmovu
push
call
or
xchg
push
cmp
fildll
or
out
sbb
fisttps
mov
mov
jbe
fcoms
std
inc
sbb
and
pop
cmp
iret
adc
scas
pop
out
decl
outsl
sbb
mov
push
ljmp
sbb
or
ret
fucomip
repnz
fdivl
dec
adc
cwtl
gs
pushf
dec
addl
xchg
or
movl
jp
push
aam
push
or
das
std
or
jo
xor
aas
add
xor
pushf
xorps
and
decl
addb
fsubl
je
add
loopne
or
xchg
or
mov
addb
dec
adcl
or
cli
test
add
adcb
add
outsb
mov
std
in
inc
outsl
fsts
kmovb
dec
int
mov
test
dec
das
ret
mov
push
mov
sub
cli
jmp
cmp
xchg
mov
or
adc
lods
pop
ja
ja
outsl
call
out
and
mov
outsl
ss
pop
mov
aas
xchg
pop
and
xor
push
mov
enter
out
xchg
icebp
bound
push
push
jmp
cmp
xchg
std
push
shll
lea
dec
sbb
imul
cmpb
fmull
fsqrt
xchg
inc
xchg
rorb
in
in
jmp
pop
popa
pushf
sbb
mov
push
in
mov
int
decb
das
std
sub
insb
or
sarb
test
add
sbb
push
xchg
sti
shll
mov
sub
and
lock
insl
pop
mov
out
in
jae
roll
cmp
fdivrl
cs
fisttps
add
or
movsb
push
push
es
mov
cli
imul
sbbb
push
mov
sbb
pushf
ud2
xchg
pop
test
andb
pop
test
lcall
xor
cmp
sbb
push
pop
or
or
add
out
popa
fisubrl
add
and
and
add
add
pop
in
in
pushl
adc
xor
push
jo
push
inc
insb
inc
repnz
imul
mov
mov
jge
mov
mov
call
and
popa
jg
mov
dec
repz
sti
frstor
sub
std
mov
or
hlt
fistpl
ljmp
xor
xor
cmp
jb
mov
cmp
mov
jno
and
enter
cs
add
and
jmp
mov
push
xor
inc
dec
lcall
inc
dec
stc
push
test
sub
imul
cmp
pop
iret
push
mov
sbb
mov
xchg
dec
shr
sub
pop
adc
and
cs
xlat
add
and
pop
mov
sti
stc
mov
test
add
mov
xchg
xchg
scas
hlt
stos
cmpl
test
outsb
loopne
loopne
xchg
xchg
std
ret
xor
fcmovnb
jns
pop
lcall
pop
dec
sbb
sbb
mov
and
test
jae
fwait
mov
out
xchg
cmp
mov
ret
ds
jno
in
repnz
ja
and
repz
iret
pop
cmpb
push
add
jnp
pop
stos
or
and
pop
mov
push
mov
std
lcall
jp
jo
pop
jmp
rclb
movsl
or
imul
loop
mov
inc
pop
dec
mov
icebp
outsl
insl
mov
mov
dec
test
xor
mov
push
sub
dec
xor
and
outsl
xchg
pop
adc
ss
decb
js
xor
in
sub
jb
out
push
cs
filds
loope
lahf
mov
lret
std
or
cwtl
mov
rol
pop
mov
dec
pusha
mov
mov
jl
cltd
sbb
adc
imul
test
test
fsubrs
inc
pop
insb
pop
add
sub
mov
jmp
mov
ja
loope
insl
add
mov
push
mov
call
mov
jb
out
lea
shrb
sub
out
notl
insb
les
inc
rorb
lock
pop
pop
mov
cmpb
sbb
mov
or
hlt
les
push
add
jb
shr
repz
and
cmpsl
pop
outsl
jno
adc
js
outsl
jg
out
dec
fdiv
sub
es
mov
inc
out
mov
mov
sbb
ljmp
xchg
xor
sub
jbe
push
insb
aas
mov
pushf
or
sbb
fidivrl
jg
sbb
jmp
cmp
xchg
ret
dec
mov
mov
scas
ss
cli
insl
lcall
imul
test
test
mov
stos
rolb
dec
add
test
mov
or
pop
fnstenv
cs
mov
pop
inc
jnp
aam
pop
xlat
cmp
xchg
test
fcoml
ds
and
sub
sub
lock
out
fwait
cmpsb
xor
sbb
pop
mov
cmc
push
mov
iret
dec
mov
outsb
mov
mov
je
in
das
js
and
xor
cmp
adc
jo
fiaddl
cmp
jl
ficoml
daa
adc
mov
cmpsl
fildl
mov
in
aaa
push
loop
or
mov
dec
pusha
rcrl
xlat
je
clc
jmp
mov
mov
addb
movsb
inc
xchg
sbb
jge
mov
inc
out
mov
test
test
add
daa
adc
ljmp
loope
adc
push
cmpsl
mov
push
fcompl
jo
add
sub
outsb
insl
mov
lret
push
iret
push
insl
or
sub
in
jl
mov
fwait
xor
lea
ficomps
movsl
adc
or
mov
ds
cmc
aad
cmc
out
je
aam
sbb
arpl
push
fists
dec
sub
lods
ljmp
jno
imul
add
lret
push
inc
lods
movsl
jle
jmp
shld
pop
cmc
outsl
jge
push
sub
pop
scas
cmp
add
pop
mov
shrl
push
mov
push
jb
fisttpl
cmp
xchg
lahf
call
lock
xchg
int
lock
dec
xor
or
xchg
outsb
ss
lahf
shrl
mov
enter
mov
mov
cmpsl
push
pop
jge
sti
lcall
add
jb
fs
mov
dec
sub
or
mov
dec
jp
mov
push
mov
data16
cltd
or
sbb
insl
pop
shrb
xchg
mov
addb
mov
xor
pop
jg
clc
loop
rcrb
data16
lcall
out
pop
jne
cmpsl
fcmovnbe
sbb
push
ljmp
fidivrs
mov
in
fbld
sub
add
cmpl
test
lods
push
or
push
or
int3
es
mov
imul
and
xchg
xor
outsl
push
mov
cmc
jb
cwtl
loope
mov
enter
mov
ret
mov
mov
push
fcoml
mov
frstor
push
int
sub
test
imul
stc
or
sub
mov
sub
call
loop
rolb
mov
das
mov
stos
and
xor
mov
and
pop
push
adc
pop
inc
lock
mov
inc
std
loopne
inc
lea
adc
cltd
out
pop
test
push
vpunpckhqdq
ljmp
cmp
orl
movsb
cmpsb
rorl
or
popl
lods
call
mov
pop
fadd
insl
cmpsb
cmp
mov
gs
sbb
cmp
clc
mov
mov
dec
outsb
sub
lea
dec
jge
jnp
mov
lcall
sub
mov
xor
subl
mov
push
jb
push
das
pop
xchg
je
ja
arpl
adc
lret
xor
push
sbb
decl
movsb
push
rorb
es
cwtl
mov
outsl
or
inc
cs
pushl
paddsw
mov
xchg
fstpl
lcall
shl
dec
insb
insb
pop
loop
daa
fadd
push
dec
call
clc
movsl
cli
xor
imul
aaa
mov
test
mov
jb
cld
outsl
or
cmp
mov
add
mov
mov
in
pop
cld
pop
push
add
stc
les
and
test
notl
dec
fnstenv
push
adc
jbe
sbb
pushf
ret
mov
mov
es
or
not
movsl
stc
fcoml
and
fsubs
scas
adc
movb
mov
enter
int
pushw
push
mov
or
cmpsl
jae
pop
mov
adc
cwtl
add
insb
les
gs
lds
xchg
and
fisttpl
jae
sub
jl
int
mov
test
dec
lcall
imul
es
and
out
push
sub
mov
pop
adc
ret
arpl
test
scas
in
lea
std
sbb
push
inc
dec
inc
sarl
mov
jo
jnp
jne
in
loope
add
cwtl
aaa
sub
jg
and
xchg
loop
cmp
das
fdivrl
inc
xchg
pushf
sbb
or
or
dec
lock
mov
roll
mov
push
pop
enter
sti
std
fistps
add
xor
mov
and
stos
mov
mov
iret
adc
lcall
inc
jbe
push
sub
neg
pop
add
pop
call
out
sbb
ret
loope
into
fstl
dec
cld
pop
push
cmp
mov
push
fidivl
push
push
std
rclb
clc
in
mov
mov
shl
xor
sbbb
movsb
lods
and
popa
inc
pushl
lea
inc
xor
ret
inc
fadds
lret
jecxz
pop
push
adc
inc
outsl
das
aad
sbbl
cli
cmp
enter
jecxz
mov
xchg
incb
outsl
mov
movsl
push
adc
cli
jg
add
pop
sub
lea
fucomip
push
inc
pop
jo
adc
arpl
pop
lcall
fwait
nop
add
cs
fbld
xor
mov
sbb
mov
cmpsb
pushl
mov
sbb
mov
push
insl
int
pop
rorl
out
and
cmp
jecxz
mov
sub
pop
mov
mov
push
mov
mov
movsb
pop
movb
repz
jmp
orl
add
mov
clc
ljmp
dec
inc
int3
and
adc
push
adc
movsb
mov
jg
dec
cmp
sub
add
or
lcall
loope
xor
rorb
dec
call
add
jg
repnz
fsubrs
loope
xchg
sub
imul
mov
cwtl
testb
daa
adc
sti
dec
sbb
mov
int
out
jg
inc
leave
dec
sbb
jne
push
arpl
cmp
add
ljmp
add
pop
xchg
and
mov
pop
clc
aaa
lcall
into
fwait
sub
mov
dec
xchg
cltd
sbb
fcoms
jmp
or
inc
gs
mov
jbe
imul
lret
and
xchg
xor
mov
je
pop
jbe
aad
mov
inc
lahf
sbb
xlat
test
sub
mov
inc
add
jl
inc
sub
inc
test
lcall
repnz
xor
jg
loop
scas
inc
pop
add
and
pop
cmpsl
shr
pop
dec
int3
rorb
aaa
sahf
insb
idivb
add
cmp
dec
mov
adc
test
js
or
or
push
and
mov
xor
add
push
adc
popa
inc
mov
int3
jl
jge
cli
add
inc
cmc
cmp
out
sub
and
aad
inc
lret
adc
jbe
inc
test
adc
mov
and
xchg
cmp
sbb
dec
lock
mov
repnz
hlt
ror
inc
mov
or
sets
push
jle
sbb
int3
insl
xor
pusha
or
push
int
add
cmpsl
dec
aaa
insl
inc
mov
in
push
cwtl
mov
jmp
xchg
cwtl
pop
jmp
mov
in
into
sub
mov
pop
push
mov
cmc
pop
scas
or
adcb
lret
sub
test
mov
mov
xor
or
mov
gs
push
inc
inc
mov
iret
or
jecxz
arpl
xchg
dec
sub
insl
or
pop
mov
fnstsw
mov
inc
stos
aam
into
dec
loop
jne
cmp
mov
inc
mov
adc
mov
subb
mov
pusha
fidivs
ret
mov
das
xor
repnz
outsl
add
sub
sbb
push
sbb
pop
out
mov
mov
jmp
cld
push
push
cli
enter
jg
fmuls
ja
inc
cmp
mov
mov
ret
es
jle
stos
cwtl
add
testl
push
sbb
sbb
mov
fwait
pop
push
into
subl
arpl
xchg
sub
xchg
mov
lds
lock
movsb
cmp
inc
out
iret
rclb
repnz
push
xorl
je
les
or
cmc
aas
dec
ljmp
xchg
dec
or
popl
mov
ret
icebp
fucomi
imul
pop
or
or
xor
sbb
cltd
pop
mov
repnz
inc
lock
inc
adc
out
mov
xchg
or
addl
in
fcmovnu
push
jp
or
fldl
jmp
push
jle
nop
or
stc
push
dec
sub
add
scas
incl
aad
and
xchg
mov
and
pop
sbbb
fimull
hlt
stos
addr16
or
lcall
orl
mov
mov
mov
repnz
and
or
jo
or
push
pop
push
fwait
in
cmp
mov
mov
lods
rsm
pop
pop
loope
mov
xchg
mov
out
dec
jp
push
cmp
scas
push
add
lahf
cmp
pop
clc
jg
sub
pop
adc
push
into
sbb
ret
xorb
cld
jmp
or
hlt
in
movsl
cmpl
repz
pop
jne
jg
inc
or
fildll
insb
daa
pop
pop
mov
mov
sub
lock
cld
xchg
add
inc
or
mov
and
inc
xchg
inc
push
pop
les
cwtl
sbb
push
imul
push
inc
inc
scas
or
lds
xor
mov
in
jno
lea
mov
aas
int3
sbb
xor
rolb
push
roll
rcl
out
jmp
inc
xor
das
cld
sar
xor
imul
sub
bnd
sub
dec
or
int3
call
pop
mov
or
and
sub
and
addl
pop
das
std
fcoml
pop
cld
pop
sbb
adc
stc
add
cmp
pop
cli
jbe
mov
shrb
cmc
js
js
movl
inc
andl
adc
dec
movsb
aam
roll
xor
adc
mov
xchg
popf
or
cs
sbb
outsb
rcll
and
mov
mov
sub
dec
inc
jo
push
inc
push
pop
xorb
orl
es
lods
lea
push
je
cli
jb
xor
or
imul
cmp
imul
mov
arpl
insl
pop
test
push
into
sbb
rorl
adc
pop
loop
dec
pusha
sti
xchg
push
mov
sbb
test
les
mov
bound
cmpsb
add
fs
jle
mov
adc
jecxz
pusha
js
push
das
inc
popf
and
mov
leave
pop
loopne
lods
in
lret
sbb
ret
nop
jmp
or
repz
bound
pop
push
dec
cmpsl
xchg
aam
lcall
cmp
aas
sub
pop
fcompl
insb
pop
outsl
jecxz
sub
sbb
imul
outsb
mov
and
fidivl
test
lods
cmpsb
movl
mov
fsubs
or
pop
push
lds
stos
out
lea
and
enter
in
or
enter
xlat
stos
sub
cmp
ror
in
nop
push
sbb
xchg
wrmsr
fs
pop
adc
sbb
jge
sub
sub
sub
sub
popa
cwtl
jmp
pop
mov
pop
cmp
sbb
lea
add
lcall
mov
leave
inc
iret
adc
cld
add
mov
or
lcall
mov
pop
scas
jle
mov
daa
das
adc
sub
cli
sbb
mov
repnz
or
inc
push
mov
pop
sub
cld
pop
adc
jp
incl
cmp
leave
add
pop
popa
fisttpl
mov
es
test
push
stos
mov
outsl
outsl
out
rorb
add
push
push
xor
xorb
movsl
cli
sub
pop
mov
inc
mov
jecxz
dec
and
lahf
insb
into
ja
jns
xchg
testb
imul
test
push
mov
out
cmp
adc
pop
lcall
push
inc
out
ljmp
leave
pop
loopne
js
jecxz
mov
xchg
xchg
fcoml
add
push
jbe
fcoml
ret
loop
add
inc
xor
sbb
add
incl
fimuls
fcompl
xor
or
fildll
nop
js
inc
sub
xchg
outsl
jl
mov
add
adcb
cli
cmp
push
lock
add
lds
jp
adc
cmc
push
push
xor
adc
std
xchg
mov
pop
push
fs
cld
cs
mov
or
out
hlt
ret
jnp
fwait
popa
lods
jnp
mov
fcompl
incl
sbb
enter
sub
les
outsb
add
cmp
mov
shld
fisubl
mov
leave
pop
cmp
jnp
sti
aad
jg
hlt
mov
mov
sbb
dec
jnp
mov
add
xchg
out
and
jecxz
data16
sahf
sahf
in
test
or
adc
xor
mov
in
sbb
daa
mov
push
cmc
mov
stc
insl
sti
test
add
dec
lock
sbb
ret
inc
sub
sbb
stos
or
cmp
clc
mov
or
adc
adc
cmp
or
ficompl
cli
in
jbe
fildll
cmp
sub
pop
ffreep
das
ficoms
pop
bound
addr16
mov
mov
mov
movsl
dec
xchg
or
ret
mov
mov
jae
sbb
xor
mov
js
xchg
cmp
mov
or
rcr
call
insl
cmpsb
or
push
xor
jno
mov
push
dec
fucomi
mov
adc
mov
lea
mov
mov
ljmp
push
pushf
push
lock
enter
cli
and
cmp
inc
fistpll
repnz
sub
mov
call
shll
clc
push
or
fstpt
outsl
and
shll
xor
xchg
mov
ja
mov
orl
decb
nop
cmpl
ljmp
in
pusha
push
and
or
je
adc
and
xchg
mov
in
mov
fstps
cltd
fmuls
xchg
inc
jmp
aas
adc
outsl
jg
rorl
popf
jno
loop
xor
xchg
std
shll
ret
ljmp
push
les
lcall
mov
or
sbb
mov
incl
lods
andb
sub
and
push
jmp
sbb
popa
sub
mov
mov
dec
mov
nop
mov
cmpb
inc
mov
ret
sub
push
or
mov
decl
mov
sahf
xchg
or
mov
dec
push
add
out
sar
xchg
cwtl
insb
jbe
cmpsl
adcb
cmpb
fucomip
jbe
xor
mov
xchg
iret
adc
clc
outsl
das
std
and
popf
jno
shr
in
rcll
and
test
pcmpgtw
push
jecxz
cmc
movsl
movsl
inc
popa
inc
mov
test
fisubs
cmp
movsb
fsubp
jbe
jns
inc
mov
into
aam
dec
add
outsl
call
lcall
jae
xchg
add
sbb
std
cli
popf
mov
mov
lret
push
mov
cmp
divb
inc
mov
and
mov
jl
insb
outsl
aas
lcall
mov
xor
or
or
nop
mov
cld
in
loopne
or
popa
push
add
push
pop
add
push
test
test
or
shll
ret
daa
bound
pop
jecxz
lea
in
and
imul
outsb
inc
test
jno
outsl
hlt
imul
clc
and
pop
rcl
sub
pushf
or
and
sbb
xchg
xorb
cmpsb
jo
xor
jbe
and
mov
cmp
ljmp
pop
icebp
and
es
adc
scas
pop
incl
inc
mov
sub
ljmp
imul
xor
inc
mov
mov
enter
sbb
xorb
jo
gs
xchg
mov
xor
imul
xchg
mov
jne
inc
fisubs
push
pop
ret
add
add
incl
or
inc
and
dec
dec
jno
sbb
jo
pop
in
lods
arpl
push
sti
fdiv
decl
inc
movsl
lahf
sbb
mov
sbb
in
and
push
or
imul
test
loop
dec
iret
lcall
sub
and
add
loop
inc
cli
push
xchg
mov
mov
jmp
push
cmp
push
adc
mov
push
mov
insl
out
sbb
jne
add
bound
cmp
outsl
repnz
mov
inc
or
icebp
and
lods
jb
cmp
sub
mov
mov
dec
mov
bound
or
ljmp
pop
adc
inc
je
fldt
fsubl
lret
add
inc
in
mov
mov
mov
out
stos
add
jno
lret
jge
push
dec
or
rcrb
pop
cltd
ds
mov
cmp
or
mov
dec
dec
pop
cld
xor
xor
fldt
dec
sbb
mov
push
das
int
dec
or
aaa
enter
mov
add
sub
add
mov
fldcw
fs
mov
std
rcrl
movsb
repnz
scas
pop
lret
xor
test
mov
and
push
mov
xchg
sub
mov
cld
and
xor
test
int3
pop
fwait
clc
rol
incl
dec
pop
or
ljmp
outsl
jae
test
cmp
das
in
or
mov
mov
bound
mov
jle
mov
std
lods
or
test
arpl
movsl
pop
pop
in
jg
stos
or
pop
inc
cli
cmp
xchg
cli
pop
cmp
enter
mov
fmuls
lods
js
ret
dec
jmp
sbb
mov
xor
sbb
rolb
mov
lahf
insb
sarl
sub
das
cld
aas
ss
push
add
or
xor
dec
lods
andb
nop
or
cmpb
jmp
imul
push
aad
dec
add
push
data16
lret
test
mov
add
xchg
sbb
add
pop
std
jg
xor
cwtl
jns
fs
add
scas
inc
icebp
push
lcall
or
and
or
pop
cld
mov
nop
mov
xchg
jbe
lea
jmp
cld
dec
cld
cmpsb
and
clc
data16
mov
xor
enter
stc
push
mov
outsl
lahf
mov
sbb
imul
sbbb
es
in
inc
dec
mov
pop
dec
mov
aas
in
xchg
loopne
shlb
invd
rcrl
xchg
push
mov
ret
cmp
sbbb
sbb
push
lods
jo
ds
mov
xchg
cld
jl
es
push
ljmp
int3
push
lret
mov
inc
mov
maskmovq
negl
dec
cmp
out
dec
mov
mov
loopne
inc
lahf
int3
sub
js
pop
call
xor
inc
nop
dec
movsl
adc
clc
ljmp
jle
jbe
enter
out
pop
push
or
sub
xchg
mov
xor
push
outsl
adcl
in
filds
lret
pop
cmp
jo
outsl
or
fsubrl
repnz
mov
inc
mov
inc
push
les
outsl
jl
out
inc
les
cwtl
or
leave
mov
add
fucomp
or
iret
sub
mov
ljmp
push
mov
bound
bound
sti
mov
dec
cld
ljmp
outsb
pop
sub
cmp
addr16
cmp
enter
jg
xlat
mov
pop
lahf
fwait
popf
lods
lret
je
add
sbb
movl
test
es
dec
pop
popa
shlb
addr16
lret
inc
sub
lret
in
movl
push
pop
push
mov
sub
cwtl
push
stos
push
hlt
xor
mov
pop
add
icebp
jmp
push
fcmovnbe
xor
sti
outsb
adc
decb
jecxz
in
push
pop
sub
in
shlb
movsl
test
push
lds
int3
arpl
inc
hlt
insb
sub
cli
daa
push
icebp
jl
lea
push
adc
lret
mov
rcr
pshufw
dec
xchg
sbb
adc
jae
sbb
add
push
aaa
pushf
les
gs
and
adc
mov
cmp
incb
call
add
sbb
add
cmp
in
out
jb
or
jns
icebp
lcall
sub
icebp
xchg
out
orb
sbb
sbb
xchg
jle
and
jne
pop
pusha
push
popf
fs
jl
xchg
adc
pop
enter
out
push
cmpb
mov
pop
adc
adc
push
pusha
ljmp
or
dec
add
xchg
mov
sbb
popf
or
test
and
call
outsl
add
cmp
jne
mov
sub
push
inc
insb
push
mov
cld
add
push
fwait
mov
gs
je
mov
dec
adc
inc
test
in
rorb
inc
js
cmp
shlb
xchg
mov
aaa
jle
pop
pop
cmc
test
add
lcall
xchg
and
inc
outsl
push
mov
jge
sbb
push
or
fisubl
scas
adc
aas
out
xchg
xor
and
loopne
xor
sbb
insl
idivl
or
movsb
idivl
aaa
mov
mov
dec
dec
mov
andb
dec
subl
inc
mulb
and
mov
inc
lret
xor
push
inc
mov
in
sbb
sbb
or
pop
jns
bound
sub
inc
push
xor
lods
mov
fwait
jae
jp
inc
into
lgs
sub
daa
adc
add
pop
imul
add
enter
mov
pusha
push
xchg
and
sbb
dec
xor
pusha
or
inc
mov
push
sbb
test
push
and
xor
or
mov
mov
clc
sbb
in
arpl
inc
mov
lahf
pop
pop
jl
push
push
test
xchg
cmp
push
and
inc
out
das
xchg
inc
inc
ret
adc
or
insb
cld
sbb
dec
cmp
jg
fists
push
dec
test
or
iret
notl
pop
mov
jmp
in
xchg
scas
movsl
xor
rcll
fbld
rcrb
pop
push
push
xchg
test
insb
movsl
xor
dec
leave
inc
adc
mov
fistpl
pusha
mov
xor
rorl
lds
mov
test
faddp
inc
sbb
test
daa
cli
pop
shl
add
inc
in
lea
andb
mov
cmpsb
shll
pop
xlat
mov
imul
cmp
xor
fidivrs
popf
adc
in
subb
sub
sub
adc
mov
call
inc
and
bts
add
call
xchg
push
ja
fcom
push
push
dec
stos
inc
sbb
arpl
std
push
sbb
cmp
fiadds
leave
jo
call
aas
jmp
xor
lods
int
icebp
push
inc
push
or
js
in
shrl
andl
push
lods
jb
mov
loopne
inc
rclb
and
mov
dec
ss
mov
std
ljmp
lods
inc
cmp
daa
fbstp
push
pusha
test
or
jno
lods
jae
std
xor
push
clc
insl
mov
dec
pop
scas
test
in
call
outsb
push
jo
repnz
cs
addb
filds
lea
subl
js
push
cmp
call
push
dec
rcrb
mov
inc
std
and
xchg
fs
push
lods
pop
inc
xchg
push
sub
add
int
fildll
divb
dec
add
xor
dec
mov
stc
inc
hlt
add
sti
cmp
pop
add
sbb
shr
out
dec
and
mov
imul
push
jg
mov
clc
jl
pop
fdivrs
out
dec
add
fdivrl
pop
das
aad
sbb
daa
mov
push
xor
mov
test
xor
js
hlt
mov
das
mov
mov
shrl
jecxz
inc
fists
cmpb
inc
das
fnsave
pop
mov
pop
cli
orb
add
outsl
aas
xchg
and
ds
movsb
xor
xchg
stos
jecxz
in
negl
out
je
cs
jg
jle
fsub
outsb
inc
and
adc
int3
xlat
or
or
or
pop
adc
or
das
mov
int
push
mov
aaa
ljmp
sbb
xadd
mov
imull
loop
adc
lahf
mov
cltd
mov
adc
out
pop
xor
jbe
push
js
cmp
jge
ljmp
mov
or
jmp
fdivrp
xor
pop
and
dec
inc
mov
shlb
popa
push
and
jno
xchg
dec
mov
or
out
mov
push
or
adc
sub
xchg
stc
fdivr
repz
stos
dec
sbb
into
sub
lds
bound
xchg
sub
mov
dec
mov
mov
outsb
mov
inc
jge
movsl
or
pushf
dec
dec
mov
scas
sub
mov
addl
jg
xor
rcrl
div
or
nop
mov
inc
pop
andb
ja
aam
jp
daa
jnp
mulb
or
outsb
jnp
loopne
ret
inc
shr
jbe
test
xor
pop
dec
xchg
pop
loopne
je
adc
inc
jecxz
outsl
cmp
or
mov
inc
inc
xchg
mov
mov
ss
mov
icebp
or
push
mov
cmpsb
adc
pop
cmp
outsb
xchg
sbb
xchg
out
cs
rclb
clc
adc
jmp
mov
nop
add
sarl
pop
mov
mov
fsubrs
sub
mov
in
rolb
js
shrb
aad
push
lcall
push
stos
hlt
hlt
pop
popa
sbb
jle
adc
mov
push
dec
fimuls
lds
jl
mov
scas
dec
sbb
fwait
or
call
mov
insl
popa
aam
fnstcw
push
mov
je
stc
roll
dec
test
insb
mov
ljmp
xor
ret
call
dec
and
nop
sbb
push
adc
lods
sub
adc
xlat
mov
xchg
mov
cli
pop
xlat
sub
test
test
or
xor
rol
in
js
dec
mov
jp
add
inc
xchg
adc
sti
in
pop
xorl
mov
pop
out
xchg
and
outsl
insb
in
pop
lcall
enter
sbb
mov
dec
pop
shll
mov
into
and
xor
fnstsw
loopne
sbb
pushf
gs
mov
lret
sysexit
mov
and
xchg
xchg
sbb
adc
sti
lock
das
std
dec
jg
dec
aam
and
lret
push
jge
cmc
dec
or
mov
mov
orb
cld
js
sub
push
mov
outsb
in
pop
push
inc
mov
add
mov
in
cmpsb
ds
mov
mov
outsl
int
and
stos
lret
xor
lds
sbb
mov
bound
pushf
sbb
jae
add
push
movsb
and
shrb
cli
jge
sbb
jecxz
mov
test
push
mov
lahf
scas
xchg
adc
out
jl
and
inc
inc
jg
jns
mov
xchg
aas
scas
push
es
inc
loope
lods
loopne
inc
lcall
lods
mov
jge
mov
ljmp
loopne
cld
lret
add
jns
inc
jg
xor
or
in
add
mov
mov
jmp
stos
inc
xor
or
jnp
mov
popf
arpl
ss
cmpb
std
jne
cmc
push
jne
or
testb
in
fmull
dec
cmp
and
add
xor
cmp
xchg
jp
push
arpl
pop
pop
jp
mov
xorb
icebp
pop
inc
addr16
mov
ja
xor
mov
mov
xchg
decl
fwait
mull
movsl
ja
cmpsl
mov
cmp
add
cmp
out
aam
xchg
scas
xor
orb
pop
clc
push
sub
iret
out
xor
mov
push
fimuls
stos
call
xchg
loopne
in
cld
call
pop
inc
cld
mov
sub
mov
and
adc
popa
rol
in
inc
mov
lret
lds
pop
je
lods
aaa
movsb
mov
pop
jo
push
aad
xor
xchg
jnp
xchg
lea
or
jo
jl
imul
loopne
pop
aaa
sbb
inc
dec
mov
jmp
cmpb
shlb
or
insb
fadd
std
add
mov
adcb
fcoms
mov
xor
pop
mov
std
mov
scas
inc
adc
popa
lock
push
mov
mov
push
clc
adc
add
popa
stos
in
and
or
clc
movsl
adc
inc
scas
cs
or
fdivs
orb
sub
cli
xchg
mov
jle
rorb
call
fsubs
imul
pop
cmpsb
cmpl
cmp
leave
push
in
fbld
sbb
jmp
add
mov
push
lcall
mov
inc
lfs
fidivl
ss
movsl
xchg
pushf
es
jle
popf
and
dec
push
loop
sbbl
and
fisttpl
xchg
ficoml
and
ss
pop
jo
pop
incl
adc
insb
out
and
sbb
stos
mov
je
and
add
cmc
mov
jp
xchg
jb
mov
fwait
dec
pop
jp
dec
fwait
sub
aam
push
insl
fcoml
ja
enter
sbbb
jns
jmp
aad
lods
daa
cmc
or
aad
cmp
shl
sbb
pop
icebp
pop
jl
add
std
jmp
jge
add
sub
test
loopne
fsubl
loopne
cld
lds
dec
inc
mov
cmp
idivb
and
dec
popa
out
push
xchg
and
rcl
jmp
push
add
mov
mov
pop
mov
adc
xor
and
sets
xor
out
fdivrp
jp
mov
es
leave
aam
dec
inc
imul
mov
cmpsl
xchg
test
subl
popl
xchg
movsl
sub
mov
jb
call
adc
or
cmp
fsubl
xor
push
xchg
cmpsl
test
sbb
xchg
xchg
nop
mov
imul
sub
xchg
and
cmp
cltd
outsb
sti
xchg
sub
das
in
mov
out
in
faddl
fidivrs
and
jb
mov
jecxz
jp
fisttps
call
int
fidivrs
ljmp
jmp
pop
loop
lret
lods
sbb
test
add
jmp
aaa
sub
cmpsb
dec
test
mov
push
outsl
hlt
insl
mov
sbb
mov
bound
or
cmp
pop
sub
mov
adc
es
sub
cli
js
dec
inc
sub
aas
rcll
push
ret
lahf
push
push
outsb
incl
mov
fxch
scas
adc
mov
adcb
pusha
and
or
jge
inc
cmc
fistl
or
or
hlt
lea
xchg
sbb
push
or
jmp
sbb
lods
lds
lcall
adc
mov
jecxz
mov
mov
sbb
inc
dec
adc
pop
push
int3
outsb
add
cwtl
lret
jb
mov
add
jle
mov
js
dec
out
imul
das
mov
inc
es
sub
mov
pop
orb
ja
fildl
dec
mov
mov
addr16
sbb
adc
das
mov
cli
mov
in
inc
mov
fistps
loopne
mov
data16
cmc
repz
test
iret
test
hlt
pop
push
dec
mov
arpl
mov
sub
sbb
popa
popf
jl
cmp
add
or
fdivrp
or
mov
mov
push
or
cmp
lock
clc
incl
inc
mov
or
popa
lds
xchg
cmp
push
dec
pop
fs
inc
xor
pop
add
orl
incb
add
sbb
hlt
jo
mov
popf
movsl
push
push
loopne
or
jl
shrl
mov
fs
adc
stos
xor
ret
xchg
cli
outsl
push
mov
jno
mov
pop
mov
stc
stc
mov
jno
int3
std
adc
pop
clc
jmp
imul
repz
mov
cli
mov
flds
cmp
and
mov
push
das
sub
pusha
xor
mov
ljmp
je
cmp
shrb
xchg
lss
jo
xor
mov
mov
jl
pop
imul
dec
popl
and
insb
xor
das
repnz
dec
in
adc
jmp
adc
mov
add
push
ljmp
xchg
mov
sub
sub
adc
mov
xchg
cs
aam
out
mov
psadbw
outsb
movsl
repz
xlat
loope
lret
mov
xor
cmp
mov
xor
push
sbb
ret
push
or
fs
popf
add
xlat
sub
pop
or
xor
mov
repnz
push
sbb
pop
sti
mov
lods
pushf
sbb
and
call
lock
add
jae
mov
ss
scas
imul
adc
mov
mov
add
int
xchg
sldt
movsb
in
fistl
mov
and
sbb
je
sbb
xchg
cld
push
out
dec
aad
lea
fisubrs
cli
outsl
call
dec
cltd
push
fcmovnu
push
mov
mov
cmp
xrstor
add
inc
idivl
jl
mov
pushw
cmp
adc
mov
dec
and
out
or
add
add
outsl
and
insl
sub
sbb
lock
out
add
add
iret
pop
fs
jbe
outsb
push
xchg
insb
lcall
in
pusha
jmp
popw
mov
or
sbb
add
sub
sbb
and
jge
lds
xchg
dec
jg
mov
mov
jne
loopne
clc
mov
mov
jp
xor
xchg
leave
pusha
jno
lcall
sbb
rorl
mov
imul
daa
fs
push
add
mov
mov
out
adc
out
out
mov
jo
mov
sub
movsl
cmpb
inc
xor
cmpsb
pop
dec
sub
outsl
mov
push
shll
pop
xor
mov
cmp
push
pop
push
add
rcll
loope
call
or
incl
repnz
iret
ret
das
pushf
and
xor
popf
fisttps
and
cs
pushf
push
fiaddl
dec
sub
cmc
ljmp
outsl
dec
sub
xchg
sub
loope
jns
aaa
cli
lods
fisubs
jge
push
dec
stos
clc
xor
or
aam
imul
pusha
mov
push
mov
push
jle
rcrl
shr
jmp
push
clc
mulb
mov
scas
ds
outsl
enter
ret
jae
jb
jmp
sbb
mov
sbb
or
xor
jns
xchg
cmp
adc
scas
fsubrl
cli
das
cld
sbb
shrb
jo
call
call
std
or
fdivl
mov
adc
mov
xchg
sbb
inc
popa
inc
aaa
xchg
xchg
inc
shlb
iret
aas
fs
imul
inc
or
clc
fmuls
cmpsl
cmpsl
leave
add
sub
insb
add
xchg
mov
stos
mov
pop
adc
mov
bound
into
sbb
inc
shr
outsb
lcall
push
add
cltd
pop
je
push
pop
ret
shrl
jmp
fisubrl
insb
push
insl
xchg
cli
loopne
addr16
insl
sbb
mov
jns
pop
stos
sub
jl
loope
sub
das
add
sub
rol
out
mov
sbb
jbe
aad
fld
dec
xor
fadds
add
push
scas
dec
push
sti
cmp
ss
lcall
add
nop
in
outsl
les
push
and
mov
dec
inc
in
cs
in
push
rcrl
out
loopne
cli
sbb
push
scas
adc
add
enter
test
fsubrs
pop
clc
in
push
mov
daa
mov
pop
mov
inc
xor
add
pop
les
mov
andb
push
ljmp
outsb
jge
inc
mov
dec
sub
adc
arpl
ror
push
das
push
mov
clc
push
mov
dec
and
inc
outsb
lahf
outsl
dec
outsl
movsl
sti
outsb
inc
dec
das
cmpsl
int
inc
fisubs
jp
fldt
aas
dec
push
sahf
jecxz
push
gs
push
jno
jg
jge
jp
vpmaxub
pop
fcmovnb
addr16
cmpsb
mov
loope
ror
jmp
mov
ljmp
mov
sbb
mov
pop
leave
inc
cwtl
sbb
mov
xorb
jge
xor
sub
fs
mov
std
lahf
cli
mov
ss
sub
xchg
out
mov
mov
push
or
add
xchg
push
inc
lret
mov
cmpsb
mov
test
push
mov
mov
mov
sbb
mov
mov
and
pop
orb
cld
add
xchg
rol
in
or
adcb
adc
nop
stc
mov
mov
test
inc
lods
pop
sbb
fs
loopne
adcl
xchg
cmp
clc
std
mov
jmp
dec
cld
imul
push
lahf
ror
in
insb
mov
inc
cmp
ja
mov
or
ss
cmp
int
pop
add
push
adc
xchg
jns
mov
decl
adc
xor
lock
rorb
xchg
pop
sbb
inc
nop
push
add
push
push
aaa
jle
scas
jecxz
mov
jns
sbb
lods
jg
out
pop
subb
dec
mov
sbb
ds
popa
pop
xchg
imul
pop
jle
adc
cli
shlb
and
std
stos
fistpl
cld
mov
pushf
push
nop
aas
mov
pop
int3
dec
inc
mov
push
pop
fdivl
inc
lret
inc
mov
and
pop
inc
ljmp
mov
sub
inc
dec
mov
jmp
adc
cmp
scas
clc
ror
cli
mov
jno
ret
mov
mov
inc
inc
js
lea
sub
mov
pusha
fmul
adc
or
and
add
cs
mov
frstor
xor
push
lcall
and
fcomps
pop
je
and
mov
mov
icebp
sub
popl
add
or
fmuls
in
xchg
lds
fdivs
adc
pop
stc
loope
imul
or
or
out
orl
iret
cmpsl
das
imul
sbb
sbb
enter
jecxz
pop
mov
jne
ds
and
jno
loopne
sub
jmp
adc
or
mull
frstor
xchg
lds
decb
rcll
xchg
pusha
push
cld
adc
jbe
mov
mov
jbe
fldl
movsl
mov
add
cmp
lea
add
cs
mov
rcl
imul
les
mov
mov
daa
sub
lock
jmp
call
popf
mov
add
ficomps
xchg
sbb
pop
and
cmpsl
add
mov
or
das
lds
hlt
mov
jne
ret
repnz
mov
pop
inc
andnps
inc
pop
mov
cmc
mov
je
pop
mov
xor
adcb
cltd
popa
cs
push
pop
cmc
adc
incl
imul
outsl
add
adc
shrb
leave
push
fcoml
popf
lahf
xchg
dec
push
add
les
push
movsl
cs
dec
lock
out
xor
fnstsw
or
mov
pop
inc
mov
out
nop
mov
ret
mov
inc
pushl
push
mov
adc
ja
mov
outsl
aaa
decb
in
nop
in
cli
mov
or
lcall
nop
lods
loope
jl,pn
mov
push
rorb
data16
gs
bswap
sub
mov
mov
sbb
shl
fs
scas
lret
daa
or
add
mov
es
movsl
cli
lods
mov
stos
mov
add
push
xchg
std
jb
sbb
cmpsb
in
arpl
pusha
cmp
xchg
mov
iret
scas
rorl
inc
pop
ljmp
cmp
xchg
pop
ret
enter
outsb
outsl
rcrb
popa
hlt
sub
xor
roll
or
sbb
xchg
mov
addr16
rolb
rcrl
movsl
addb
out
pop
xor
inc
push
mov
imul
out
dec
add
pop
out
gs
test
add
jge
mov
fldcw
add
add
dec
dec
sti
call
gs
dec
imul
movsl
sub
pop
loope
sti
gs
xchg
subl
fs
lret
inc
pop
mov
add
or
stos
sbb
enter
xlat
adc
jmp
fdivrl
mov
cmp
mov
push
nop
adc
test
decl
stos
cld
lcall
adc
fldcw
fdivrl
inc
adc
inc
imul
mov
mov
mov
aam
jnp
cmp
and
mov
jecxz
das
jecxz
cmc
or
sbb
insl
in
enter
inc
pop
mov
es
sbbl
icebp
je
std
inc
pop
push
movsb
setne
xchg
test
mov
pusha
sub
cmc
in
js
test
adc
push
mov
mov
and
scas
xchg
mov
sbb
scas
in
inc
aam
ljmp
xlat
sahf
cmpsl
pop
out
mov
xor
inc
je
sub
sbb
push
push
sbb
push
ljmp
or
sub
je
mov
adc
fadd
fucom
adc
xchg
mov
movsb
insb
subl
jo
sar
and
loopne
ds
fsubs
xchg
mov
inc
aas
fbld
loop
dec
imul
adc
in
das
push
jmp
jbe
xchg
arpl
mov
sub
jmp
jbe
test
jae
lahf
or
loopne
es
mov
mov
pop
inc
xorl
das
icebp
pushl
pop
cltd
mov
xorl
ss
adc
pop
mov
pop
imul
ljmp
mov
decl
loopne
add
in
repz
pop
mov
ja
jno
or
outsb
pop
inc
or
shrl
or
fsub
push
xchg
ret
xchg
mov
in
sbb
and
mov
pop
xor
dec
add
lock
cmp
fst
xchg
ret
jns
add
shlb
push
call
imul
les
push
sub
int
fwait
cmpl
loop
ret
enter
add
mov
dec
pop
in
push
mov
sbb
adc
aaa
sarl
mov
test
and
aam
fcmovnbe
lods
jle
in
mull
push
mov
fistpll
enter
xlat
inc
aad
push
jecxz
sbb
pop
jp
js
loop
fists
xchg
and
jo
mov
mov
adc
shll
xor
inc
push
mov
or
or
and
repz
jnp
mov
fcmovnbe
mov
enter
mov
imul
repz
loopne
adcl
xor
xor
test
jle
pop
out
mov
pop
test
testl
cmpb
add
xchg
mov
mov
lock
call
pushf
dec
fwait
push
mov
add
pop
push
xchg
ja
out
and
rorb
mov
insb
sbb
mov
pop
shlb
mov
incl
pop
jbe
and
mov
inc
mov
sbbl
rolb
mov
or
mov
fidivrs
or
std
out
nop
mov
scas
imul
mov
and
inc
je
cli
aaa
pop
cli
mov
loope
data16
rcrl
sahf
adc
sbb
mov
in
jge
movsl
insl
xchg
fiaddl
pop
sti
pop
jg
add
stc
mov
in
ficoms
jae
bswap
mov
movsl
mov
xchg
add
inc
jno
sub
xor
je
mov
cmp
iret
loopne
nop
inc
mov
imulb
nop
or
std
mov
dec
ljmp
sbb
loope
jno
mov
cmpsb
dec
daa
mov
jl
inc
pop
lds
arpl
sbb
sub
push
sbb
pop
ljmp
jle
fcomps
inc
adc
ret
ret
test
cmpsb
xorb
loopne
or
ljmp
call
ja
push
cwtl
add
cmpsl
cs
adc
dec
xorb
ss
sahf
jmp
mov
push
add
ljmp
xchg
push
or
jmp
roll
arpl
push
popf
cli
sub
pushf
and
cld
sub
and
ficomps
aad
pop
test
pop
cmp
das
lock
js
inc
jno
mov
dec
insb
ss
jno
daa
add
mov
cmpsb
xor
adcb
repnz
notl
cmpsl
push
fistpl
add
lods
mov
out
ljmp
fst
lret
fwait
dec
lods
enter
test
add
out
loope
pop
xchg
jmp
jb
mov
or
out
lods
orl
fwait
mov
stc
bound
push
test
decl
dec
popa
cmp
jne
jne
hlt
sbb
mov
andb
xor
dec
lods
sahf
ss
push
ljmp
mov
lods
incb
xor
int3
dec
imull
jmp
push
js
adc
jbe
scas
cmpsl
sub
jae
mov
jle
and
sarb
call
iret
pop
lea
lcall
or
push
sbb
fldl
sbb
push
dec
int3
lea
pop
add
in
mov
outsb
cmp
std
mov
add
aaa
inc
mov
pop
push
shrb
insb
dec
mov
aad
in
scas
movsl
shr
and
add
jb
std
int
mov
lret
lods
lods
sbb
outsb
xchg
and
mov
cli
pushl
ds
loopne
repnz
cmpsb
ljmp
inc
jg
pop
or
cmc
xchg
call
mov
sbb
rclb
xchg
loop
mov
dec
push
call
mov
negl
cli
jb
sub
adcb
loopne
inc
xor
orl
cmc
add
test
nop
hlt
mov
js
leave
xor
push
repz
xchg
andl
jo
les
sbb
lock
mov
jle
ret
repnz
out
mov
fwait
pop
and
or
mov
pop
add
or
repnz
pushf
aad
into
jno
fcmovbe
cs
inc
push
dec
mov
add
sub
incl
xchg
push
nop
jns
mov
addr16
cmp
shl
sub
cmc
je
lds
lock
sahf
arpl
xchg
and
adc
out
les
push
js
push
lock
out
sbb
pusha
loopne
rol
inc
pop
sub
ret
int3
pusha
pop
push
lcall
stos
pop
mov
jle
or
and
add
add
lds
cmp
ljmp
fwait
cmp
push
cmp
or
cwtl
shll
cmp
mov
lods
mov
and
lea
lcall
in
mov
insl
inc
sbb
jbe
xor
mov
push
sahf
insb
pop
mov
or
inc
roll
fistpl
cmp
lcall
lret
inc
mov
in
or
adc
pop
add
pop
subb
dec
or
aas
ficoml
negb
clc
add
js
or
mov
sbbb
mov
inc
mov
aas
and
addr16
inc
pop
jo
movsl
in
dec
jl
pop
inc
sub
outsl
adc
das
adc
stc
cld
das
mov
lock
lea
add
and
inc
stos
popa
adc
lock
cld
insb
loop
imul
lcall
or
adc
ja
test
mov
mov
push
mov
nop
mov
adc
psllw
sub
mov
cmp
add
fdivrl
add
insb
fisttpll
adc
cmp
stos
fdiv
sub
push
movsl
ljmp
ss
fisubl
adc
and
and
les
dec
dec
lea
orl
adc
jg
js
jmp
icebp
xor
imul
mov
push
insb
mov
add
jae
sti
add
xor
arpl
or
imul
fwait
dec
pop
mov
mov
xchg
mov
mov
mov
pop
cmp
push
hlt
push
jne
call
ret
mov
nop
lcall
pop
jmp
jmp
movsl
jp
or
pop
pop
std
inc
fsubs
dec
xchg
aad
ja
fidivl
jle
das
xchg
sub
in
jg
repnz
repz
sbb
dec
fstps
adc
dec
mov
movsb
inc
sub
pop
rolb
bound
xlat
pushf
or
inc
mov
jmp
loope
mov
xchg
jno
cltd
data16
lcall
push
mov
lahf
aas
xor
lock
repnz
lcall
test
pushl
mov
cmp
call
fisttps
pop
pop
std
mov
sarl
hlt
leave
adc
test
mov
mov
or
lret
mov
test
inc
lds
or
scas
inc
or
pop
mov
outsl
or
sbb
ljmp
ljmp
pop
mov
repnz
in
jne
sbb
push
push
sbb
mov
mov
scas
push
add
cs
adc
jmp
push
insl
sub
mov
and
inc
sbb
push
mov
hlt
xchg
mov
sar
stos
lods
push
push
xorb
sahf
adc
movsb
sub
imul
mov
jno
sbb
mov
loop
or
pop
movsl
das
or
aad
lds
dec
ja
pop
ss
mov
pushf
fwait
scas
lcall
ljmp
insb
gs
shl
lcall
sub
cli
cmpsl
data16
test
dec
pop
mov
into
pop
push
sub
aad
dec
hlt
loop
sub
push
daa
cmp
scas
adc
lahf
inc
rcll
pop
mov
andl
addr16
popf
int
test
je
fs
mov
jne
inc
lods
cmpl
pop
jp
mov
pop
insb
cmovg
push
scas
sub
loop
sbb
in
pop
aaa
lret
jno
push
fstl
sbb
sti
testb
lcall
shrb
loope
rcll
jo
movsl
sbb
outsb
cmp
sub
fwait
mov
es
cwtl
adc
add
pop
mov
mov
mov
dec
int3
mov
sbb
loop
shrb
mov
fidivrs
cwtl
sti
add
jne
movsl
ljmp
push
mov
ss
aaa
lock
fucomi
jnp
outsb
sub
or
cmp
mov
sbb
cltd
nop
rcrl
sahf
xor
adc
clc
sub
sub
outsb
adc
outsb
rorb
push
mov
shll
je
test
aaa
imul
fucomi
outsl
in
lcall
jb
add
or
mov
xchg
js
or
sbb
jmp
ret
fsubs
cmp
or
lock
fidivrs
pop
stos
and
bound
ja
movsl
in
xchg
and
dec
lret
enter
cmpsb
fldl
mov
popa
call
roll
dec
test
testb
mov
mov
mov
imul
push
lea
adc
stos
add
cmc
rorl
xor
push
and
aam
push
inc
add
test
ja
jmp
ljmp
push
jb
jp
sbb
loopne
cmc
push
int
push
mov
jnp
jae
adc
lock
test
mov
movsb
rcll
pop
shll
push
cmc
outsl
mov
inc
pop
mov
jmp
stos
out
mov
push
unpcklps
or
mov
lds
sbb
adc
mov
lcall
sbb
fdivp
mov
pop
push
repz
int3
sbb
sub
lds
lea
cmp
sub
inc
cwtl
mov
mov
sub
xor
repnz
pop
ljmp
sti
add
fistpll
sub
add
mov
mov
jg
pop
cmpb
shl
outsl
jecxz
mov
int3
dec
inc
adc
xor
pop
or
lods
xchg
arpl
adc
xchg
push
in
call
dec
in
cmpsl
push
pop
test
pop
and
pop
mov
pop
xchg
repz
mov
sub
cmpl
ljmp
imul
imul
inc
enter
jae,pt
enter
mov
jge
enter
addb
push
mov
xor
daa
sbbl
fnstenv
cmp
inc
cmp
xchg
mov
ds
push
test
sbb
push
mov
ss
mov
decb
outsb
filds
mov
xchg
je
push
pop
xor
das
ret
xor
dec
cmpb
ja
or
je
ja
sub
dec
xchg
roll
rol
push
jb
pop
subl
cmp
out
dec
ret
and
cmp
pop
sti
add
cld
pop
movsl
sti
leave
shl
inc
movsb
stos
and
cmpsb
pop
rorl
les
jmp
sbb
jno
jle
dec
jns
xor
add
cs
test
sub
add
mov
pop
out
sbb
outsl
enter
jmp
add
sbb
addr16
jnp
push
test
inc
mov
mov
pop
imul
cwtl
add
cmp
ljmp
add
mov
mov
mov
pop
add
adc
xor
insb
insb
std
andb
mov
popf
cmp
cmp
lret
sub
cli
in
inc
sub
test
and
inc
or
orl
fbstp
imulb
popf
mov
mov
pop
sub
decl
js
dec
push
movl
sub
add
push
mov
cld
call
cli
addb
xor
jecxz
addl
outsb
mov
xchg
cli
cmp
mov
inc
jmp
ja
mov
and
mov
cwtl
test
inc
jl
pop
or
fmuls
xchg
mov
stc
adc
mov
jge
ss
jo
ss
push
pop
add
inc
cmp
repnz
mov
push
dec
nop
hlt
jg
andb
decl
shrb
negl
lods
cld
stos
sub
mov
jmp
aam
and
or
pop
andl
push
inc
les
std
adc
or
sub
add
add
mov
adc
mov
inc
in
or
lret
push
icebp
cwtl
sbb
push
rcr
daa
inc
sbb
imul
inc
xor
push
xor
sub
lods
pop
mov
les
bound
sub
jnp
adc
mov
sarb
out
lret
or
pop
jge
scas
xchg
and
rcrb
xchg
fidivrl
cmp
pop
jae
jnp
jno,pt
jle
xor
loop
test
inc
cmp
hlt
sbb
or
sub
bound
popa
add
or
idivb
imul
movsb
daa
leave
push
fisttps
dec
jnp
fldl
sub
dec
test
cmp
inc
mov
xchg
push
stos
adc
fistps
lcall
or
rorl
scas
dec
fs
hlt
scas
cli
addr16
pop
ljmp
outsl
mov
mov
stos
mov
and
pop
add
adc
test
cmp
fadds
inc
fcmovu
test
xchg
xchg
test
fdiv
or
xor
mov
mov
sbb
fsubrs
scas
daa
push
mov
cmc
sub
aaa
mov
push
fnstsw
into
sub
inc
add
cmp
sub
ds
std
call
out
mov
jo
loopne
enter
shll
dec
pop
inc
cltd
jns
mov
clc
add
mov
inc
and
js
loop
lods
sbb
insl
inc
mov
sub
and
mov
andb
jne
fisttps
push
pop
and
or
push
mov
out
mov
add
ret
jbe
outsl
xor
adc
xchg
add
xchg
scas
icebp
or
xchg
adc
in
shll
fsubrs
sahf
sub
mov
mov
cld
lcall
or
inc
push
repnz
pop
sub
cld
aad
in
aaa
pusha
fisttpl
and
out
or
js
add
lcall
adc
cmp
mov
faddl
push
pushf
cmp
and
insl
cmpsb
mov
sub
push
mov
cmp
pop
rcl
cld
add
or
fidivrs
nop
das
mov
ret
aaa
das
insb
mov
xchg
or
in
cmc
les
insl
push
call
and
cwtl
or
adc
nop
lds
lods
rcr
pop
push
shrb
in
inc
movsb
xchg
mov
test
inc
xor
sub
pop
mov
outsl
negb
pop
adc
repz
dec
das
jbe
jmp
imul
fcomip
push
xchg
add
addr16
add
dec
mov
fildll
dec
leave
es
mov
mov
pop
insb
push
dec
pusha
jae
outsb
xchg
pop
fwait
sbbl
pop
popa
insb
jp
lods
sbb
icebp
pop
mov
in
mov
add
mov
stos
mov
fcoml
xchg
iret
jb
les
shlb
fsubrl
mov
cs
nop
jo
jmp
mov
xchg
dec
push
scas
dec
cmpsb
jg
push
pop
leave
sub
test
pop
adc
fadd
pop
in
test
icebp
mov
cmove
out
inc
add
adc
lock
shrb
sub
and
aaa
mov
inc
mov
lret
inc
mov
mov
stos
lods
and
leave
js
lea
sbb
outsl
and
add
repz
adcb
push
cld
out
rol
adc
movsb
sub
mov
mov
jo
imul
and
dec
mov
dec
dec
jmp
je
sub
lret
lcall
stos
call
loopne
sbb
aaa
lds
mov
cmp
lods
jg
int
dec
mov
xchg
and
daa
mov
loope
push
pop
cmp
mov
pushf
adc
push
mov
mov
xchg
clts
mov
shll
inc
sbb
popf
fidivl
stc
or
stos
xchg
add
fs
xchg
fs
fwait
out
loope
add
and
dec
lea
in
mov
insl
jmp
pop
or
mov
rcrb
lds
or
sbb
sbb
jp
ljmp
aad
fildll
inc
iret
mov
xor
stc
outsb
xor
sbb
andl
mov
fsts
fldcw
popf
cmpsl
adcb
ret
fdivl
mov
lahf
push
mov
aas
hlt
sub
lods
cmp
push
les
iret
mov
mov
jl
lock
pop
lcall
fcomps
jo
aam
and
inc
hlt
cmp
imul
xor
push
adc
mov
jg
imul
addr16
scas
adc
xchg
ljmp
inc
loopne
push
ss
mov
adc
arpl
fcomp
sbb
rcrb
cmpsl
mov
std
call
xor
sbb
and
xor
fdivr
icebp
insl
daa
inc
hlt
xor
cmpl
add
sbb
push
push
add
adc
xchg
sbb
rclb
pop
clc
mov
mov
mov
mov
out
mov
das
test
test
jbe
lret
clc
ret
mov
arpl
cld
frstor
fisttps
fsubrs
imul
out
mov
inc
int
icebp
cltd
inc
dec
pop
cmova
pop
jg
mov
cmpl
jge
sbbl
fimull
and
sahf
adc
push
and
adc
sub
adc
dec
cmpsl
pop
rorb
fistpll
test
mov
dec
add
je
inc
cmpsl
lock
aas
je
rorl
in
rol
mov
cmpsb
cmc
inc
inc
pusha
pop
xchg
in
xchg
daa
xchg
sub
outsb
daa
sbb
in
and
mov
insb
out
xor
arpl
jb
or
xchg
or
jno
cmpsb
sbb
mov
pop
js
pusha
insl
xchg
call
mov
push
rclb
xor
loope
or
xchg
mov
mov
subb
jge
lret
fisubs
mov
mov
movsb
into
call
add
cli
in
leave
shll
mov
rcrb
mov
fwait
xchg
mov
cmp
cmovbe
dec
scas
incl
xchg
int
in
xor
push
xchg
test
in
les
jo
push
fnstsw
sbb
pop
ss
mov
fisttpl
loop
xchg
and
arpl
jbe
inc
xchg
fdivrs
idiv
cmpb
outsl
jl
adc
mov
mov
test
or
stos
xchg
aas
mov
mov
and
aad
call
out
test
dec
xchg
popa
sbb
mov
push
mov
aas
sbb
add
add
cld
mov
mov
cmp
pushf
inc
push
or
scas
jbe
filds
movsb
xchg
add
fisubl
mov
mov
mov
inc
pop
sbb
cmp
aad
es
out
ret
int
test
jge
repz
test
jbe
jbe
mov
in
adc
cmp
loopne
mov
ret
jg
mov
inc
mov
fbstp
pushf
xor
mov
pop
inc
jo
in
mov
dec
or
sub
cmp
push
push
in
int3
arpl
xor
mov
sbb
mov
mov
insb
aam
movsl
dec
cmp
clc
xchg
fisubrl
cmp
mov
lret
in
outsb
fisttps
dec
cmpsb
mov
xor
ss
add
mov
add
mov
mov
adc
popa
adc
pop
and
je
jae
xor
jg
inc
insb
sub
dec
ss
call
lods
aaa
push
pop
gs
inc
and
mov
outsb
push
adc
pop
sbb
pop
stos
js
inc
adc
add
sti
pop
scas
stc
scas
mov
xchg
jg
clc
or
inc
mov
or
in
cmpsl
daa
cmpl
insl
mov
or
test
cltd
lret
jle
xor
or
xor
pop
pop
dec
ficomps
das
insl
sbb
out
inc
xchg
add
inc
scas
imul
jl
cld
daa
xor
cmc
and
xlat
arpl
sbb
add
pop
mov
andb
and
and
stos
bound
mov
add
add
pushf
cmpsb
nop
inc
lahf
push
mov
aas
push
popf
and
int3
xor
int3
jno
lds
mov
shl
fcmovne
jo
mov
xchg
xchg
aaa
dec
xor
lahf
jnp
out
mov
pop
push
cld
adc
xor
repnz
xor
rolb
arpl
cmpsb
idiv
jmp
pusha
mov
stos
cwtl
aad
pop
inc
mov
adc
add
popf
adc
jg
insl
and
movsl
outsl
mov
les
call
loop
jae
push
cmp
dec
stc
lods
mov
test
cmp
xchg
cmp
cmc
cmc
lret
inc
sub
lea
jno
push
sbb
js
das
add
das
shll
lods
and
lret
shrb
and
mov
inc
mov
xor
push
add
cmp
add
mov
lods
mov
test
push
je
adc
aas
lcall
scas
or
add
outsb
cmp
jne
push
pop
mov
push
push
or
adc
mov
adc
mov
pop
ljmp
cmp
nop
pop
rcr
mov
je
xchg
iret
or
sub
push
mov
insb
fdivr
sbb
lods
sub
jle
dec
int
aaa
dec
call
fidivl
fs
xchg
jne
in
mov
and
test
fmuls
dec
sbbl
bswap
xor
and
mov
push
inc
xor
fbld
dec
cwtl
mov
adc
sub
jge
mov
iret
xchg
mov
je
enter
pop
xor
xor
add
xchg
lock
sub
clc
mov
bound
mov
cmp
mov
push
sarl
or
mov
lock
popa
push
mov
cmc
push
bound
rcrl
pop
cmp
lahf
clc
data16
xor
sub
pop
pop
ja
fiaddl
gs
test
add
lahf
cmp
sarb
mov
loop
or
daa
test
or
mov
inc
xor
incb
pop
mov
mov
shlb
lock
push
mov
xchg
mov
or
cld
mov
scas
mov
enter
pop
mov
or
inc
daa
inc
loop
push
mov
in
jle
cltd
jo
aaa
jmp
sub
dec
andl
pop
mov
mov
dec
enter
subb
pop
mov
mov
dec
in
add
shlb
pop
inc
mov
leave
fnstsw
push
jnp
xchg
pusha
jae
dec
mov
pop
mov
ret
pop
dec
int3
in
lods
loop
inc
lcall
lcall
insb
std
fcmovb
or
imul
mov
push
pop
cld
inc
out
adc
mov
insl
fdivl
pop
jl
jl
mov
ret
rcl
imull
subb
outsb
and
pop
insl
xchg
outsb
fwait
test
std
aaa
decb
dec
daa
insb
jmp
repnz
scas
dec
jg
lods
or
mov
arpl
popf
bound
dec
push
mov
and
lahf
inc
inc
adc
leave
into
pop
inc
add
mov
and
lret
roll
add
int3
sti
add
mov
add
sarb
call
ljmp
pushf
inc
xchg
jbe
pop
in
lea
and
aaa
or
mov
xchg
aas
movsl
ret
jmp
jg
fdivrs
fnstsw
push
popa
pusha
and
outsl
in
imul
xor
cld
push
imul
out
or
push
mov
xchg
dec
scas
in
pop
xor
mov
lods
pop
fidivl
loopne
add
mov
pop
push
jg
xlat
add
add
loop
stc
push
mov
push
push
mov
das
insb
ljmp
mov
mov
cmp
je
mov
bound
mov
test
mov
jnp
nop
scas
adc
mov
das
mov
fnstsw
cmp
mov
mov
add
mov
inc
daa
imul
insb
adc
repnz
in
sbb
push
pop
jno
or
filds
movsl
pop
sub
sub
and
sub
pop
fstps
sub
dec
pop
lret
lock
sub
fistpl
mov
xchg
ja
fwait
xlat
mov
sbb
jge
jbe
aaa
cmpsb
pop
xchg
or
inc
mov
pop
cs
inc
xor
inc
push
lock
adc
stos
pavgw
enter
ja
insl
mov
out
test
inc
sbb
jl
and
pop
cli
es
add
or
rcr
nop
pop
mov
syscall
jno
popa
cmp
pop
negb
mov
add
pop
add
cmp
push
push
cmp
sub
mov
or
push
psubb
dec
and
push
dec
push
int3
dec
rcr
out
push
mov
imul
into
or
or
sub
test
cmp
push
or
cmc
outsl
xchg
or
loopne
jae
push
out
imul
pop
arpl
iret
mov
push
add
addl
push
push
sub
loopne
loope
mov
dec
push
iret
mov
inc
add
inc
sbb
sbbb
stos
pop
sub
iret
push
push
jmp
add
mov
pop
iret
add
sarl
out
adc
add
repnz
stos
cmp
xlat
pop
iret
rorl
or
je
sbb
add
push
or
xor
jo
je
mov
sub
jbe
imul
fisttpl
mov
aaa
xor
mov
dec
push
mov
es
jns
push
xlat
xor
fwait
mov
je
fmul
cwtl
aad
notb
enter
mov
adc
clc
xlat
mov
push
xchg
stc
rolb
cmp
dec
xor
inc
les
nop
mov
pop
adc
mov
xlat
mov
or
xor
push
ret
sub
dec
clc
xlat
xchg
stos
dec
test
cs
xorl
mov
cmpsb
stc
ret
push
dec
and
in
sahf
mov
inc
shl
out
mov
sbb
icebp
xchg
loop
mov
mov
pop
fincstp
cmp
fwait
pusha
loope
lret
cmp
or
adc
outsb
aaa
sub
mov
mov
cmp
mov
mov
cld
dec
xchg
in
mov
repnz
sbb
repz
pushf
out
stos
mov
or
mov
scas
loope
xorb
fwait
js
imul
roll
inc
xorb
or
call
or
push
push
inc
hlt
inc
inc
and
outsb
ror
sub
repnz
adc
adc
pop
mov
and
sahf
fmull
mov
mov
std
mov
xchg
xchg
mov
or
or
or
add
inc
enter
or
int
xchg
cmp
mov
stos
in
iret
stc
inc
fwait
shll
push
pop
lock
mov
sbb
mov
xor
dec
xchg
push
arpl
movsb
inc
sub
les
andb
roll
shll
aad
faddp
mov
pop
sbb
sbb
aas
js
or
movsl
sbb
xor
ja
or
fcomps
fnsave
stos
push
shl
rorb
ret
add
lock
mov
cld
adc
sbbb
mov
jmp
popf
mov
scas
cmp
adc
push
fisubs
pop
iret
push
bound
arpl
pop
mov
cmpsb
sbb
xchg
mov
cmp
stos
lock
add
sub
cs
mov
dec
push
xor
sbb
pop
fbstp
mov
test
rorl
test
mov
lret
pop
jp
adc
jge
and
cld
lret
mov
shl
mov
mov
sub
inc
int3
dec
movsb
sbb
xchg
pop
mov
pop
sbb
mov
call
scas
jge
pop
sub
sbbb
rcll
std
in
andps
add
hlt
add
into
js
xor
outsl
add
pusha
xchg
mov
mov
sub
les
push
fwait
into
xchg
into
xor
outsl
mov
lret
sbb
dec
rcrb
inc
and
stos
mov
aam
sbb
ja
fildl
les
arpl
clc
je
inc
push
mov
add
pop
test
add
clc
or
push
mov
pop
inc
xchg
dec
sub
sbb
jo
jg
fdivr
enter
test
les
jmp
mov
lods
aas
adc
outsl
sub
or
dec
and
add
xor
sbb
jg
jo
icebp
insb
xchg
movq
incb
mov
add
inc
or
and
adc
out
sahf
ljmp
rep
adc
bound
inc
lds
pop
sub
mov
insb
loopne
cmovl
push
pop
ljmp
int
ja
cmp
or
rorb
inc
jbe
stos
fisttpl
je
loop
jmp
push
mov
call
scas
pop
shrb
test
xor
mov
std
fcoml
aaa
das
pop
or
mov
test
sarl
push
inc
movsb
dec
pop
movsl
adc
push
and
sub
outsl
mov
scas
in
inc
pop
shrb
clc
adc
and
sub
adc
push
push
mov
mov
adc
mov
shrl
cmp
mov
dec
test
filds
mov
inc
ljmp
mov
loope
or
fstl
sub
test
pop
mov
mov
sarl
mov
or
cld
mov
and
pop
mov
test
stos
jne
popf
outsb
data16
push
xchg
sbb
mov
push
adc
pop
lcall
xor
mov
add
inc
je
cmp
adc
dec
std
arpl
jno
nop
and
dec
cltd
shlb
pop
and
mov
scas
popa
decl
pop
or
sub
cmpsb
outsb
aas
popa
mov
lret
ss
incl
shll
sbb
jo
fidivrs
jo
in
ds
mov
pop
sbb
insb
mov
addb
mov
mov
inc
dec
sub
aad
dec
pusha
pop
add
and
push
or
subb
sbb
sbb
lret
gs
inc
daa
inc
fs
das
je
icebp
mov
pop
xorb
es
push
and
fdivs
xchg
ss
mov
les
je
daa
lcall
jne
sbb
inc
push
cmp
xchg
dec
and
shlb
rorb
cmc
jbe
sub
dec
mov
movsb
jae
repz
call
mov
mov
inc
int
loopne
pop
sbb
fsts
insl
xchg
orl
jbe
bound
enter
mov
sub
or
roll
aad
ret
out
inc
enter
sbb
push
cmp
jecxz
stos
hlt
mov
repz
cli
sbb
stc
test
call
dec
pop
and
jge
xor
es
jbe
adc
sbbb
jecxz
jmp
pushf
mov
jmp
rep
add
xchg
roll
mov
xorl
mov
or
loop
in
lret
mov
aad
push
popa
xchg
inc
add
xchg
int3
ss
shlb
add
mov
rorl
idivb
aaa
sbb
shrl
xor
stos
add
lock
fiadds
mov
std
sahf
ficoms
mov
xor
inc
push
dec
scas
rcll
out
sbb
fisubrs
inc
mov
or
ljmp
cs
andb
sub
mov
rcl
into
xor
and
pop
cld
or
pop
pop
xchg
sahf
fmull
imul
mov
daa
jnp
loope
xorl
clc
ficompl
cmp
movsb
push
add
adcb
xchg
xor
jp
push
xchg
xchg
and
mov
call
xor
les
pop
test
clc
inc
gs
sbb
adc
xchg
in
mov
lock
lds
mov
movsl
push
pop
fsubrs
sub
lea
sub
xchg
pushl
mull
out
testb
rorl
mov
inc
mov
jl
and
fld
movsl
push
movsl
ret
or
fsubrl
dec
iret
add
dec
loopne
xchg
dec
dec
sbb
test
jle
repz
decl
cmpsb
clc
mov
cs
fisubl
es
push
push
js
inc
mov
adc
clc
inc
and
dec
in
out
and
sahf
or
mov
pop
jg
push
std
lods
push
lods
cmp
jle
sbb
outsl
aaa
in
sub
add
dec
xchg
or
xor
loope
outsl
dec
mov
adc
sbb
rorb
push
sub
loop
icebp
mov
jl
in
scas
adc
jne
fwait
xchg
or
stos
in
popa
dec
out
xchg
outsl
sub
lock
push
es
mov
xor
add
das
orb
movsl
adc
subb
cmpsl
mov
xchg
pop
sbbb
bound
xlat
test
and
outsb
mov
xchg
sub
push
mov
outsb
sub
icebp
sbb
dec
push
mov
mov
aaa
lea
pushf
sub
jbe
dec
or
rcr
push
mov
cmpsb
mov
inc
dec
push
sub
mov
sahf
pusha
bound
cld
pushl
push
fwait
mov
ficoms
hlt
xchg
inc
adc
aam
push
mov
and
test
mov
insl
jmp
es
push
fs
fistpll
jne
push
mov
inc
pop
pop
inc
cltd
sbb
jle
mov
pop
mov
outsb
and
adc
push
das
mov
insl
pop
test
push
nop
jg
mov
pop
mov
fwait
mov
jl
icebp
xor
cmpsl
test
lea
xchg
jp
aam
fidivrl
pusha
sub
sbb
push
or
cmp
and
out
jmp
push
imul
push
xlat
mov
out
out
inc
fistpll
outsl
insb
outsl
mov
movl
aad
adc
add
cld
sbb
jns
shlb
adc
add
push
inc
xchg
test
js
mov
shrb
pop
movsl
push
repnz
add
push
jle
push
mov
mov
std
xchg
sbbl
sub
dec
and
pop
cli
or
lcall
and
aam
lods
and
rcrb
pop
mov
ret
mov
push
shrl
fisttpll
outsl
fldl
sbb
inc
aad
lods
out
mov
addr16
in
push
push
sub
push
cwtl
outsb
aad
imul
add
dec
dec
ss
call
aaa
jge
dec
out
sti
xchg
int3
mov
and
and
aaa
mov
adc
sbb
fwait
std
sbb
lock
enter
ret
lock
mov
dec
cmpsb
in
push
ljmp
mov
xchg
jns
xor
in
ljmp
mov
lock
test
mov
xchg
lcall
xor
in
shl
popa
cmp
rclb
push
bound
mov
add
push
enter
mov
cmpb
test
ficompl
or
pop
daa
xor
xchg
mov
xor
and
iret
loop
inc
mov
jb
rolb
arpl
dec
call
jb
loopne
in
pop
cmp
test
jecxz
jle
or
sbb
shlb
pusha
arpl
dec
lds
pop
mov
push
sub
inc
nop
xchg
loopne
clc
adc
jne
stos
hlt
adc
or
inc
jp
pop
fiaddl
out
orl
mov
xchg
repnz
adc
stos
and
sub
roll
inc
and
or
test
sarb
std
jae
cmp
adc
jecxz
mov
cmp
or
pushl
imul
aas
mov
pop
adc
out
push
cld
ffreep
dec
out
sahf
pop
mov
lds
outsl
lea
inc
addr16
fcomps
movl
inc
fwait
cmpsl
sbb
ds
lret
push
or
movsl
jmp
fsubrs
stc
in
adc
and
fstl
insl
inc
mov
sbb
lds
sub
outsl
sbb
push
sbb
or
jns
aam
ljmp
mov
cmpsb
xchg
mov
ss
or
xchg
int3
sbb
mov
adc
test
jge
pop
mov
sti
mov
inc
adc
stos
jno
sub
subb
jg
cmp
icebp
jge
inc
xchg
push
xchg
shlb
dec
xchg
test
filds
mov
inc
sub
jno
push
pop
es
cltd
leave
jmp
dec
cld
leave
jge
fs
pop
cmp
sbb
xchg
and
sub
div
aam
repz
les
cli
cmp
std
sub
imul
aam
cmp
or
dec
jo
inc
lods
jp
cs
aas
or
and
mov
or
inc
clc
push
addr16
stc
movsb
or
imul
push
xchg
dec
hlt
incl
push
mov
sbb
test
mov
addb
or
jae
add
dec
movsb
dec
jae
cltd
push
sub
mov
mov
mov
adc
dec
fcom
mov
mov
divb
push
add
push
adc
leave
xlat
das
in
test
mov
or
and
cmc
sahf
push
dec
or
aaa
jg
movsl
pusha
call
dec
mov
jge
jmp
fbstp
adc
dec
fisttps
icebp
int
pop
pop
aas
xchg
push
std
dec
pop
jge
mov
ja
pop
adc
dec
pusha
loop
leave
or
jmp
or
xlat
mov
jl
mov
stc
ret
cmp
and
test
jecxz
adcb
sub
mov
cmp
lock
or
mov
mov
decb
cltd
sbb
mov
mov
sub
cmp
jns
repz
ljmp
add
repz
hlt
inc
mov
jge
push
fsubrl
inc
adcb
jb
ret
loope
sub
rcll
sub
mov
add
sub
cmp
xchg
and
push
cmpsb
cli
pop
in
lret
inc
add
jecxz
mov
mov
testb
and
daa
or
sbb
cmp
sub
cwtl
jmp
xchg
call
push
insl
in
jbe
mov
sub
lea
std
or
push
jl
push
cs
push
les
out
in
xor
pop
jl
insb
inc
jl
push
inc
inc
movb
adc
lods
push
movsl
mov
pop
stos
pop
mov
aas
dec
inc
xchg
pop
aam
popa
cs
or
or
mov
mov
lods
pop
rorb
dec
or
add
adc
mov
jb
arpl
jo
and
aaa
pop
pop
jb
inc
rclb
cmc
push
in
and
rclb
mov
jne
sub
push
pop
lods
addr16
test
inc
pop
push
ret
mov
rcr
lods
lcall
lea
gs
xchg
stos
jmp
and
xchg
loopne
xlat
mov
sbb
fidivrl
js
mov
inc
or
pop
out
ljmp
sbb
cs
nop
fs
push
outsb
push
les
clc
ljmp
fildll
sub
push
xorl
adc
outsb
pop
andb
repz
addr16
add
dec
call
mov
adc
je
aam
pop
add
scas
pop
loope
cmpsb
dec
or
jns
movsb
push
lods
out
adc
sub
jb
outsl
jl
xor
mov
mov
cmp
push
push
or
pop
push
xchg
mov
in
ret
xchg
mov
sbb
jg
ret
pusha
push
loope
cmp
dec
lods
lods
xchg
in
xchg
fmulp
iret
mov
mov
jecxz
cs
clc
xchg
cld
dec
mov
dec
xlat
pop
cmc
rorl
jne
mov
daa
sub
lret
in
enter
call
mov
cmpsb
int3
out
pop
lret
lds
push
xchg
add
push
test
rorb
nop
push
mov
jmp
nop
cmp
lcall
jp
inc
inc
mov
xchg
xor
adc
push
push
clc
hlt
inc
sti
jmp
sbb
mov
inc
xor
or
xor
enter
push
adc
test
mov
pop
sub
pop
dec
adc
imul
add
mov
lds
jne
sbbb
fidivs
dec
add
enter
inc
xchg
sub
aas
sbb
inc
xchg
xor
mov
and
jbe
jne
rolb
dec
mov
add
dec
lods
mov
dec
sbbb
fldl
lds
push
xchg
clc
push
or
fadds
jae
dec
fimuls
cmp
mov
jecxz
xchg
inc
cmp
adc
push
or
inc
cs
icebp
decl
adc
dec
push
sti
sub
push
dec
xchg
add
shlb
dec
adc
mov
cmc
jo
sbb
leave
mov
mov
xor
mov
lods
cmpb
ds
jmp
jl
or
movsl
cmp
js
cmc
dec
inc
lret
and
inc
pop
fisubl
xchg
sti
add
pop
inc
movsl
call
push
push
or
jecxz
cwtl
sbb
sti
call
lret
jbe
clc
push
lods
sub
mov
lods
cld
ret
sub
fwait
scas
in
call
or
mov
jp
fisttpl
pop
jae
mull
inc
lods
pop
dec
mov
pop
xchg
push
push
sarl
out
or
ror
or
lret
leave
push
sbb
outsb
pop
sub
sub
sbb
pop
mov
shrl
xchg
nop
aaa
push
pop
scas
inc
subl
ljmp
testb
into
arpl
push
jbe
mov
fbld
jge
mov
add
jb
gs
cmc
dec
add
pop
mov
js
pop
cmpsl
sub
sbbl
fiaddl
push
and
fnstsw
enter
adc
push
cltd
out
lods
push
call
mov
test
mov
nop
xchg
in
push
lret
push
push
fucomp
in
or
inc
movsl
and
aaa
ljmp
pop
dec
mov
push
sti
mov
rol
mov
ja
inc
xchg
adc
xchg
push
sbbl
xor
adc
and
mov
mov
rorb
icebp
mov
fcoms
dec
inc
outsl
push
lcall
pop
jl,pn
pop
push
push
push
cwtl
jecxz
movsb
adc
fsubrs
push
add
push
test
ret
mov
inc
mov
mov
mov
sub
jo
xor
xor
inc
sbb
cmp
xchg
data16
sbb
xchg
inc
pop
stc
xchg
dec
cld
outsb
scas
test
jnp
in
fwait
push
ljmp
outsb
mov
inc
mov
icebp
daa
mov
repnz
xchg
hlt
inc
andl
mov
sbb
sub
mov
sub
js
das
mov
test
jg
xchg
shrl
or
sub
call
daa
lock
push
xchg
xchg
mov
pop
push
jo
add
push
mov
jne
xchg
jbe
shl
sbb
sub
repnz
cltd
jecxz
outsl
mov
adc
sbb
push
jg
pop
inc
dec
gs
add
das
dec
push
sbb
xchg
stc
shlb
clc
cld
xor
ret
fdivs
add
dec
cmpsl
mov
push
shr
mov
inc
pushf
or
dec
out
lea
jmp
pop
adc
roll
repnz
movb
fwait
and
jmp
xor
inc
aas
xchg
lahf
add
pop
rorl
xchg
xchg
add
adc
jg
mov
scas
lods
xchg
and
roll
dec
test
pop
sti
sub
inc
pop
mov
sub
movsl
dec
lock
shl
mov
or
fwait
xor
xchg
loop
xor
loopne
mov
adc
sysexit
je
cmp
xlat
pop
cmp
mov
test
sbb
xchg
sbb
stos
inc
dec
adc
arpl
mov
fyl2xp1
cld
xchg
and
sbb
sbbb
enter
and
popa
adc
fcomps
cmp
xchg
add
ss
jl
mov
push
cld
shll
add
jns
std
xor
jae
sbb
outsl
fdivrl
into
cmp
lret
jb,pt
inc
jo
jns
shrb
in
mov
mov
ljmp
sbbl
ret
jb
lcall
lods
adc
add
mov
adc
cmpsl
hlt
test
adc
jge
repz
mov
mov
mov
add
pop
dec
mov
adc
mov
pop
add
sbb
rol
jg
in
push
mov
mov
sahf
cmpsb
test
aaa
fwait
ljmp
push
or
aam
out
movsb
push
roll
jg
imul
out
repnz
cmp
mov
stc
stos
lahf
sub
js
lods
mov
outsb
stc
outsl
add
test
or
pop
mov
mov
inc
cli
jnp
mov
cli
adc
push
jmp
inc
adc
push
push
sub
jg
adc
pop
jp
imul
dec
pop
ret
rorb
loop
xlat
fildl
aaa
mov
jb
cmpsb
pushf
xor
dec
les
jg
test
nop
xor
mov
inc
sub
jno,pn
jmp
pop
xchg
fsubs
outsl
scas
call
iret
push
insb
lods
jno
mov
pop
jg
bound
lret
aas
mov
cli
or
lock
sbb
or
sbb
cmp
mov
add
js
and
insl
movsl
popa
inc
movsl
mov
sbb
cmpsl
push
pop
aas
pop
in
push
orb
mov
test
xchg
call
pop
mov
in
xor
push
jnp
out
xchg
lahf
inc
sbb
sub
aaa
rolb
cld
lds
in
xchg
fdivp
sbb
push
mov
outsl
mov
mov
jg
cs
jae
lds
insb
xor
stos
xor
and
sbb
inc
cmp
cmp
fwait
pop
enter
push
orl
out
xor
or
mov
lea
inc
and
mov
or
adc
sbb
sbb
shrb
add
mov
hlt
jno
js
ror
or
add
cld
in
xor
mov
cmc
mov
cmpsb
dec
pop
ja
or
addr16
lahf
sub
and
dec
inc
outsl
jg
test
push
popf
call
mov
aaa
push
jno
cwtl
in
cmp
test
and
and
mov
sbb
loop
in
hlt
adc
dec
xor
stos
iret
xchg
jbe
or
loope
sahf
dec
inc
arpl
ficompl
nop
sbb
cmpsl
pop
hlt
shrl
ds
dec
imul
xchg
pop
adc
adc
sub
pushl
pop
xchg
fwait
push
nop
adc
cwtl
jbe
in
cmp
sub
mov
mov
cs
clc
sbb
sub
mov
cmp
mov
enter
rcrl
mov
enter
sub
pop
push
or
jb
mov
andl
sbb
ret
push
xor
ret
repnz
inc
adc
or
dec
mov
add
std
or
loopne
imul
fmuls
jg
out
mov
cmc
mov
sbb
dec
jb
jmp
add
cmpsb
test
jecxz
or
inc
sbb
jno
add
add
test
xchg
jnp
cmc
pop
int
es
fs
lods
inc
mov
adc
mov
mov
cmpsl
fidivrl
cli
inc
js
les
into
loop
sbb
inc
cld
mull
adc
xchg
dec
pop
and
mov
cmc
fistpl
loope
lret
mov
scas
aad
adc
ss
and
and
adc
ss
sbb
xorb
xor
das
popf
fwait
jmp
lods
cli
inc
xlat
mov
lds
lock
push
pop
adc
xchg
jp
imul
cmpb
mov
aam
hlt
call
addr16
pop
push
pop
lods
int
xor
ret
xor
push
out
xchg
push
jl
xchg
inc
jbe
outsl
or
fisttpl
push
fisubl
adc
sarl
insb
pop
sub
stos
jl
xchg
loope
fimuls
decl
je
sti
rcrl
punpcklbw
ret
mov
shufps
repnz
dec
inc
loope
lea
hlt
das
or
mov
in
xorl
daa
dec
sbb
fwait
out
lock
mov
add
inc
data16
dec
and
xchg
pop
push
gs
inc
mov
ja
or
gs
mov
mov
repz
fcoms
inc
rolb
test
pop
sbb
cmp
add
ljmp
int3
pushf
imul
sbb
adc
filds
bound
mov
repnz
add
add
aam
sub
cmpsb
cmp
pop
dec
jbe
cld
das
adc
ljmp
subl
pop
mov
test
push
mov
cwtl
jno
pop
xchg
into
fsubrs
mov
ljmp
sub
scas
adc
sbb
and
add
add
movsl
jns
cwtl
inc
pop
adc
pop
loopne
stos
ljmp
cmp
push
pop
paddsb
fwait
push
pop
adc
iret
mov
jg
inc
cmp
sub
test
pop
add
push
and
ret
mov
fists
inc
mov
ret
xchg
lock
push
repnz
stos
sbb
lods
jb
scas
mov
push
dec
dec
jb
stos
and
sbb
out
or
ja
inc
add
ja
pop
sub
imul
sub
mov
cmp
je
nop
push
lods
mov
outsl
aaa
outsb
cmp
in
dec
adc
jle
xchg
les
into
ljmp
in
or
xchg
fs
ret
lahf
xor
cwtl
pop
scas
dec
lock
ss
mov
mov
fdivrp
jmp
mov
fs
mov
push
outsl
push
dec
mov
negb
adc
lock
rolb
dec
and
aaa
jo
bound
fwait
cmp
inc
sub
xor
push
fs
inc
mov
dec
sbb
pop
lea
or
clc
mov
sbb
outsl
pop
sbb
shrl
outsb
shrl
loope
mov
and
out
inc
mov
push
jecxz
or
fcmovnb
ljmp
idiv
movsb
rolb
arpl
xchg
push
icebp
popf
fcmovnbe
out
or
and
popa
sub
inc
jnp
xchg
and
jae
iret
jle
outsb
sub
and
and
sub
imul
into
inc
not
pop
sub
push
add
sti
and
sbb
and
sbb
outsl
insl
jl
outsb
call
add
add
sbb
sub
cmp
idiv
sbb
add
stc
sbb
jbe
sbb
test
repnz
mov
insl
push
in
mov
imul
push
es
test
cltd
pop
lods
sub
or
bound
jl
scas
pop
dec
push
lcall
xor
mov
push
pop
push
test
xchg
jno
aaa
push
jae
sti
lods
jo
test
ljmp
ss
fs
mov
orb
div
subb
dec
test
das
call
pop
pop
int3
mov
mov
xor
add
xchg
icebp
push
xchg
mov
add
adc
mov
add
test
xor
int
xchg
adcb
or
adc
fildll
pop
test
or
shl
mov
imul
fsubrp
mov
sbb
or
inc
fstpt
sbb
adc
clc
sti
mov
outsb
mov
jecxz
popa
xor
cmp
in
movsl
xchg
outsb
test
fisttpl
push
lcall
mov
sbb
bound
outsb
adc
pop
inc
popf
in
nop
fs
inc
push
mov
inc
test
sub
and
aaa
in
pusha
push
sub
mov
xchg
shrl
inc
inc
ljmp
loop
inc
xchg
mov
out
mov
adc
notl
xorl
cld
and
int3
fwait
or
or
fwait
push
inc
dec
inc
popa
mov
mov
jmp
or
int3
and
or
aaa
std
jns
les
fisubs
fmul
push
dec
in
mov
das
mov
ret
clc
rorl
cmc
test
and
inc
test
aaa
icebp
sbb
inc
sbb
jge
cld
xchg
jle
mov
add
test
arpl
and
dec
pop
xchg
jp
inc
imul
and
fisubrs
jb
notb
mov
out
push
flds
insb
pop
sub
pop
mov
pushf
nop
and
ljmp
jno
xchg
push
rclb
push
mov
sbb
dec
adc
nop
mov
dec
mov
mov
xor
lcall
hlt
lret
rcrb
enter
and
lods
les
pop
xor
mov
outsl
jne
sbb
hlt
and
fisttpl
mov
and
and
aas
in
out
fdivs
dec
push
mov
jbe
adc
sahf
push
pop
mov
dec
add
iret
sbb
fimull
inc
adc
add
test
mov
dec
sbb
repnz
call
inc
inc
inc
out
add
fisubs
popf
lcall
xchg
push
jo
jbe
mov
xor
movsl
mov
sbb
add
jmp
sub
adc
push
or
loopne
lret
and
jl
mov
lea
lret
vcvtss2si
scas
adc
cmc
inc
in
push
cld
jbe
in
repz
popl
xchg
cltd
into
lods
ud0
sahf
loop
subb
mov
push
repnz
jmp
sbb
cmp
push
or
xor
cmp
push
dec
nop
rcrl
mov
aas
into
in
inc
adc
or
test
sbb
nop
jl
ret
sarb
fidivl
addr16
clc
xor
xor
push
and
loop
jne
jne
mov
sbb
movsb
xchg
adc
enter
mov
sbb
add
sbb
inc
fucomi
repnz
inc
or
lods
cmc
popa
bound
loopne
pusha
xchg
add
inc
sub
js
push
lds
sbb
addr16
lret
sub
xor
mov
mov
repnz
sub
xchg
fisubrs
outsb
xchg
sbb
or
pop
shll
in
into
mov
sahf
sbb
mov
add
xlat
std
lret
dec
in
xchg
push
outsb
mov
test
mov
mov
mov
scas
aam
iret
lods
pop
pop
ljmp
lcall
popa
mov
fdivrl
test
adc
and
loop
loope
adc
orl
inc
addr16
pop
cmp
fistpl
andb
es
pop
addr16
inc
inc
test
shl
jge
inc
lds
int3
mov
dec
or
cmp
aad
aad
sub
fbstp
mov
add
sbb
push
pop
mov
mov
xor
push
adc
and
outsb
loop
das
sbb
inc
push
mov
cld
sbb
and
push
cmpsb
faddl
pop
fiaddl
push
cmp
push
in
bound
inc
fidivrl
fwait
xchg
sub
adc
ret
fdivrl
out
loopne
sub
mov
or
sub
xor
inc
imul
push
jbe
adc
and
cmpsl
push
jb
or
out
push
clc
adc
inc
divb
push
or
jg
sub
popf
ror
mov
incl
gs
dec
mov
test
cltd
scas
cltd
enter
fcmovu
fistpll
sbb
imul
inc
lea
dec
and
mov
and
jmp
mov
ss
fstps
scas
loop
lahf
aam
shrb
pop
pop
sbb
insl
fs
es
lods
lahf
aad
pushl
js
les
xchg
sub
fldenv
inc
cmp
nop
dec
fnstsw
cmp
lcall
sbb
cmp
aaa
xor
sarl
mov
push
push
imul
or
rcrb
outsl
test
mov
inc
jmp
sub
test
dec
rorl
mov
fmuls
ret
cs
inc
cmpsb
or
es
mov
loope
or
std
xor
or
rcrb
mov
xchg
xchg
push
inc
je
add
cmp
xchg
mov
xor
das
gs
jp
add
fucomi
pop
mov
fdivs
cmp
mov
cmc
xorl
aad
mov
inc
inc
xor
andl
out
adc
add
mov
adc
inc
and
adc
mov
pop
xlat
test
mov
outsl
leave
or
inc
add
and
cmp
and
jbe
ljmp
insb
pop
add
xor
mov
fidivrs
push
imul
xor
mov
xchg
jb
xorb
jo
sub
sarb
insb
mov
fidivrl
clc
pop
jbe
cmc
mov
jmp
dec
shll
cmp
xchg
cwtl
hlt
and
int3
mov
ret
fsubrs
mov
and
xlat
add
push
adc
push
dec
lea
xchg
cmc
jmp
jno
fiaddl
je
xchg
shl
sub
ljmp
mov
dec
inc
pop
sbb
adc
mov
xlat
jb
inc
out
pop
mov
push
xor
jo
sbbl
xchg
adc
mov
and
dec
cmp
mov
adc
sbb
outsl
mov
pushl
inc
and
test
lret
lock
push
icebp
daa
xorl
int
divb
pushf
xchg
ja
jb
pushf
mov
dec
jne
pusha
inc
add
sbb
sub
jae
je
xor
push
fdivp
inc
stos
or
pop
outsl
cltd
addr16
mov
push
aas
mov
pop
or
movsb
dec
inc
inc
mov
sti
dec
jno
idivb
pop
or
clc
xor
cli
outsl
jno
inc
push
mov
nop
lods
into
xchg
icebp
mulps
test
mov
sahf
pop
xchg
adc
push
lds
stos
push
fldl
jo
pop
divl
adc
mov
outsl
mov
negb
das
lret
push
addr16
and
jae
or
call
mov
aaa
cmpsl
out
negl
mov
loop
mov
mov
adc
jmp
outsb
xor
sub
decl
mov
movsb
xchg
sub
mov
jbe
gs
push
hlt
stos
popa
insl
lret
addb
pop
movsb
xor
cmc
cmpsl
mov
shrl
in
jbe
inc
out
sbb
das
stc
mov
fsubrs
insl
add
aas
ss
xor
fldl
imul
jb
rclb
sub
mov
jae
jmp
sub
popa
inc
aaa
icebp
mov
push
loope
push
mov
cltd
pop
cmp
inc
aad
lcall
or
mov
int
js
testl
mov
jb
fwait
sbb
call
into
out
andl
inc
rorb
dec
in
fdivrp
or
scas
and
shll
shll
and
cmp
or
out
ss
lea
sti
pop
xchg
sahf
push
insb
orb
mov
call
xchg
add
cmp
jb
mov
outsl
mov
in
lret
nop
imul
mov
adc
out
fadd
je
shrb
push
or
mov
mov
gs
in
cmpsl
stos
jg
jp
repnz
sarb
lock
mov
es
fcoml
inc
in
lods
dec
roll
xlat
pop
jp
or
fs
mov
mov
js
cmp
cmp
dec
hlt
or
push
daa
mov
pop
call
outsb
sub
mov
fldcw
jae
data16
add
sbb
outsl
sub
pop
aam
push
adc
ror
dec
pushl
add
pop
and
pop
popf
inc
adc
jecxz
adc
push
sub
stos
push
fidivs
cmp
jecxz
push
test
dec
jno
aaa
mov
cmp
addl
mov
bound
ljmp
pop
sub
aaa
popa
lret
push
xor
xorl
xchg
arpl
fistpl
push
jae
adc
push
ds
call
cmpsb
pop
sub
pop
inc
adc
rcll
bound
shrl
cmpsb
jae
mov
mov
pop
pop
es
add
sub
fisttps
mov
add
push
or
cmp
test
pop
iret
call
cltd
loope
pop
mov
lret
lods
cli
clc
adc
sarb
push
xor
pusha
mov
scas
dec
sbb
or
xchg
loopne
cltd
xchg
and
imull
add
cmp
mov
sahf
pop
push
cmp
inc
lods
adc
ja
loopne
push
sbb
cmpl
in
movsb
jb
aas
cmp
clc
test
loopne
pushf
pushf
or
xor
jo,pt
mov
leave
cmp
push
aaa
fidivl
test
sub
dec
bound
mov
into
pop
push
pushf
shll
push
adc
push
adc
out
sbbl
mov
sbb
cltd
inc
loop
movsl
in
andb
push
outsb
sbb
jns
cmp
cld
aaa
mov
xor
add
inc
fisttpll
mov
xchg
and
sub
cmp
dec
push
inc
scas
mov
sub
mov
movsb
mov
gs
push
sbb
and
add
pop
mov
out
enter
les
add
roll
cmp
rcr
jge
mov
adc
pusha
mov
inc
sub
jns
pushf
cmp
push
ja
test
jmp
adc
mov
or
dec
outsb
xor
mov
mov
movsb
rclb
ficompl
imul
insl
xor
nop
push
push
push
ds
add
push
or
and
sub
lahf
mov
in
or
and
dec
ret
aaa
dec
lret
and
sbb
sbb
or
cltd
xchg
sbb
sti
xor
xor
std
ret
add
dec
pop
pop
mov
fiadds
std
rol
jp
jbe
mov
or
fmuls
and
inc
mov
out
pop
sbb
pop
ret
and
xchg
push
arpl
inc
and
add
subb
jg
jle
fiadds
or
cwtl
mov
call
ljmp
aas
xchg
lret
or
and
push
nop
cs
das
add
fcmovnb
ffree
lea
adcb
xor
pop
imul
cmc
inc
test
in
sbb
add
lock
or
add
sbb
dec
fdivl
es
mov
adc
std
mov
mov
daa
jmp
and
popf
sub
mov
inc
iret
cmpsl
mov
pop
inc
je
mov
push
dec
rcl
add
pop
sub
mov
xor
xor
inc
or
mov
push
es
ljmp
loop
mov
jp,pt
repnz
insb
inc
push
pop
sub
cli
lret
mov
cld
fdivrs
iret
and
cmp
out
adc
add
je
ror
addb
popa
cmp
xor
fstpl
insl
jnp
adc
ret
ds
or
rolb
rolb
inc
std
fcomp
ljmp
fsub
daa
xchg
jno
fsubrl
popf
iret
jmp
cmp
sub
cmpb
jg
cli
add
cmc
or
insb
push
dec
mov
push
pop
leave
adc
cmp
jo
adcb
jnp
in
clc
fildll
sarb
addr16
xchg
pop
clc
add
xor
stos
inc
xor
stc
dec
mov
aaa
push
add
cmc
lock
sub
insb
outsl
outsl
jne
adc
sahf
jo
je
and
cmp
shrl
ss
in
or
filds
add
xor
inc
aam
ret
adc
pop
pop
or
es
rcr
pop
int
mov
cmp
sbb
mov
xlat
movsl
adc
sub
push
cmc
or
sbb
ds
fbstp
rclb
cltd
mov
pop
popa
mov
mov
or
in
push
sbb
and
outsl
movsb
push
sbbb
addb
aaa
les
mov
push
mov
jb
pop
sbb
jns
es
adc
hlt
jg
pop
push
cli
cmp
pop
fucom
cmp
or
mov
adc
testb
inc
inc
scas
mov
cmp
lahf
inc
inc
or
push
pop
imul
and
lea
pop
std
mov
cvtpi2ps
dec
add
add
xor
inc
fisttpl
sbb
push
int
xchg
in
scas
nop
cmp
sub
mov
insb
daa
jne
ret
sbb
jge
lea
mov
sbb
mov
test
lret
xlat
mov
adc
sub
iret
mov
shlb
test
sub
out
xor
nop
push
ljmp
add
xchg
jmp
add
ficoml
mov
pop
and
inc
data16
fildl
clc
das
add
mov
adc
fisubrs
jp
jno
rorl
push
mov
adc
lcall
mov
add
mov
pop
mov
jp
xor
xchg
or
pop
push
clc
insb
cmpsb
arpl
pop
or
hlt
jl
cli
and
pop
lock
aaa
pop
mulb
jle
sbb
movsl
scas
sbb
in
adc
ljmp
clc
or
jle
in
inc
adc
jg
add
dec
and
lret
push
push
jno
cli
popa
jbe
mov
and
and
pop
lock
jle
decb
fcomps
push
push
dec
adc
fsub
pop
mov
out
je
in
or
or
ret
das
fcompl
xor
adc
mov
scas
or
lahf
pop
dec
jmp
mov
outsl
mov
shrl
test
or
jns
or
and
adc
and
jp
mov
div
sti
jo
clc
mov
pop
aad
dec
push
mov
das
insb
jg
mov
lahf
inc
add
or
or
pop
mov
bound
lods
jo
sub
push
push
inc
add
fstpt
dec
cwtl
pop
nop
dec
sbb
mov
add
popa
dec
mov
mov
cmp
les
call
lret
sbb
and
sbb
ret
push
adc
sti
push
aam
popf
xchg
sub
jmp
bound
lods
push
mov
sub
popa
xchg
hlt
mov
inc
mov
xchg
in
sbb
fidivl
movsl
inc
fmull
popl
sarl
js
push
push
push
or
ja
push
jp
pop
in
push
sbb
pop
clc
in
gs
xor
xchg
push
mov
lods
lods
jmp
fldl2e
inc
add
cli
cmpl
leave
push
in
repnz
pop
jne
push
call
add
in
ret
inc
test
std
das
add
add
aaa
mov
xchg
xchg
movsl
out
add
mov
cmp
and
push
pop
inc
xor
out
cs
mov
rclb
add
and
add
out
push
sub
cli
adc
sub
andb
push
jnp
sub
enter
shlb
sarb
push
and
mov
adc
rorb
jo
mov
add
push
adc
jmp
or
shlb
add
imul
gs
js
outsl
outsb
jae
cmovns
jne
mov
adc
popa
insl
gs
imul
jb
popa
mov
addr16
addr16
and
je
jns
cmp
imul
fs
or
outsb
je
inc
jb
outsl
jb
outsl
out
outsb
fsubs
inc
gs
jne
je
insl
insl
imul
int
push
jno
jne
jb
in
xor
adc
pushf
lret
jmpw
cmp
popa
je
inc
std
fisubrs
lret
gs
popa
arpl
movsb
push
jne
fidivrs
jae
jbe
arpl
fsubrs
dec
into
outsb
fsubl
adc
jb
sbb
outsl
arpl
cmp
outsl
fwait
sti
mov
dec
gs
jo
adc
inc
sbb
insb
pop
mov
insb
or
inc
push
pop
insb
fstpt
jne
mov
insl
inc
push
mov
jae
push
jae
ret
push
rclb
dec
jb
insb
jns
pop
lods
lds
mull
popa
jb
jge
adc
popa
jne
popa
out
gs
xchg
adc
notl
data16
pop
shl
push
outsb
cmp
push
fsubrs
ss
data16
mov
mov
inc
xchg
orl
fs
ret
lods
dec
xorb
sbb
lret
adc
mov
inc
shll
imul
je
jns
inc
adc
inc
shll
jne
inc
movsb
push
ret
dec
gs
xchg
jne
or
outsl
adc
insb
lret
dec
and
scas
leave
int3
inc
push
fstl
push
inc
imul
sbb
ret
mov
jne
sbb
inc
or
stc
sahf
enter
mov
inc
inc
sbb
enter
sbb
mov
leave
jo
lock
imul
cmpsl
sbb
dec
or
xchg
test
dec
or
dec
out
dec
bound
pop
stc
in
gs
fistl
ss
jb
push
repnz
mov
ficomps
fisttpl
jo
dec
dec
push
dec
mov
adc
jg
sub
ret
cld
fisttps
sbb
pop
jle
fdivs
jbe
popa
jns
mov
inc
push
sbb
jnp
and
scas
push
dec
inc
data16
pop
adc
xor
movsb
test
dec
fdivs
push
call
jb
cltd
repz
push
stos
inc
push
and
mov
jg
inc
sti
or
mov
or
les
ja
sbb
mov
popa
enter
lret
dec
outsl
popa
scas
and
lcall
inc
cmp
pop
inc
and
enter
jnp
daa
insb
jo
inc
gs
cmp
out
add
inc
fs
popa
jae
adc
jecxz
inc
cli
data16
inc
data16
pop
repnz
dec
pop
push
jle
js
push
inc
sbb
arpl
mov
cwtl
mov
adc
adc
cmp
add
add
loopne
mov
inc
scas
xchg
imul
add
adc
fwait
nop
cmp
push
and
inc
push
adc
push
jo
mov
popa
adc
or
cmpsl
push
mov
adc
dec
sub
sub
dec
int3
push
sbb
pop
push
pop
imul
aaa
sbb
xlat
inc
sub
ret
push
jae
outsb
arpl
dec
push
dec
pop
push
dec
dec
inc
dec
inc
inc
xor
leave
loopne
sbbl
sbb
jnp
or
mov
sbb
push
or
in
lret
loopne
jp
adc
mov
popl
je
loope
xchg
js
stos
mov
ret
push
and
push
inc
fbld
or
push
xchg
cld
pop
in
jne
arpl
xor
mov
ja
push
cmp
xchg
adc
fists
lcall
into
insb
scas
cmp
inc
mov
pcmpgtb
sbb
pop
add
ret
pusha
imul
and
cmp
or
or
insl
scas
mov
or
jbe
insb
cmp
daa
inc
imul
pop
adc
clc
roll
add
sbb
inc
push
mov
push
or
pop
imul
fistpl
pop
jae
dec
insl
and
lock
sbb
out
bound
dec
pop
and
pop
pop
sub
jne
mov
mov
sbb
jge
mov
movq
jae
or
xorl
prefetch
push
push
dec
push
fidivs
ret
mov
ret
xor
mov
xor
aas
outsb
std
mov
imul
jge
lretw
leavew
call
mov
cs
push
es
ss
ss
xchg
mov
sub
popa
aaa
pop
cmp
cmp
push
addr16
xor
xor
jno
add
xchg
jmp
cmp
pop
inc
adc
mov
adc
mov
jecxz
arpl
push
arpl
mov
lret
push
pusha
and
es
mov
pop
dec
fs
insl
or
pusha
adc
xchg
outsb
cmp
test
icebp
xor
dec
test
imul
in
lods
pushf
loope
and
pop
mov
push
pop
enter
pop
push
or
jge
sbb
int3
sbb
add
xchg
ss
pop
mov
cs
sbb
arpl
ret
sub
in
inc
xor
pop
in
movsl
sub
inc
sub
imul
js
pop
xchg
sbb
in
pop
or
call
fs
ret
mov
adc
push
je
push
and
add
mov
orb
adc
jmp
sub
cltd
and
sub
xor
xchg
jg
inc
out
subb
add
jmp
hlt
or
mov
dec
je
add
inc
mov
out
unpckhps
fmull
sbb
mov
cmp
test
adc
inc
adc
push
adc
or
push
xor
add
gs
data16
jnp
test
sbb
xchg
cmp
adc
ret
subl
jbe
fcompl
push
jp
xchg
shlb
push
inc
dec
nop
movsl
insb
mov
adc
and
daa
and
je
pushf
ds
sub
pushw
enter
inc
out
adc
nop
xchg
pop
sti
out
jae
xor
push
shlb
adc
adc
sub
jne
push
ret
sbb
adc
pop
inc
mov
mov
pop
dec
xchg
arpl
cltd
mov
sbb
mov
inc
adc
or
pop
stc
rcrl
stos
add
xchg
push
fldenv
inc
push
and
sub
inc
sbb
int
fsubs
outsl
sti
dec
inc
dec
leave
jbe
push
cmpsb
mov
sbb
add
adcl
cltd
fwait
cmp
xchg
cmp
sbb
jecxz
and
sbb
dec
gs
sbb
pop
outsl
push
sbb
push
fsubrs
orl
ret
sub
sbb
and
sbb
sbbl
insb
pusha
fs
jl
xor
adc
movsl
sbb
in
rol
xchg
loopne
inc
jl
adc
cmp
inc
dec
ja
insb
test
sbb
xchg
adc
movsb
push
jbe
and
sub
nop
insl
int
pushw
imul
inc
mov
mov
or
outsb
pop
fs
mov
xor
xchg
pop
pop
xchg
inc
cwtl
add
dec
cs
inc
push
push
push
test
sbb
add
jnp
adc
sbb
arpl
je
xor
inc
sub
dec
rcrl
push
fildl
inc
arpl
popa
scas
push
outsl
pusha
andb
lcall
pop
mov
sub
mov
pop
pop
shll
ret
sub
popa
and
addb
jb
pop
push
sbb
stos
in
lret
and
xchg
jbe
sub
sub
add
sbb
mov
push
pop
popf
stos
cmp
adc
sbb
fcomps
adc
popa
push
pop
ret
adc
jecxz
pusha
pop
mov
inc
push
es
push
inc
push
pop
sbb
ret
fs
sbb
fs
fldcw
sbb
sbb
inc
sbb
mov
mov
xor
push
clc
pop
sbb
and
jb
dec
or
je
lcall
fadds
ret
jb
and
dec
push
sub
insb
pop
or
lcall
subb
testl
fwait
add
adc
aaa
inc
adcb
sbb
stc
and
mov
in
daa
push
add
test
dec
imul
repnz
hlt
or
push
jle
pop
test
pop
jnp
rorb
pop
nop
pop
daa
and
pop
and
sbb
inc
push
mov
rclb
out
adc
dec
push
pop
cmp
add
rorb
push
inc
pop
pop
lret
sbb
cmp
and
push
fnstenv
into
and
jnp
in
sbb
insl
jae
push
sub
pop
dec
jns
test
jne
push
int3
es
je
adc
mov
sub
test
sbb
mov
notb
sbb
push
sbb
pop
rcll
xchg
cmp
int
pusha
inc
inc
push
mov
adcb
inc
ljmp
pop
ss
in
add
imul
sbb
jb
and
popa
iret
add
inc
xor
xchg
popf
pop
sbb
push
insb
enter
jg
sbb
mov
fs
xchg
dec
mov
and
sub
or
add
and
add
or
in
push
adc
dec
ret
adc
outsb
mov
addr16
dec
mov
adc
enter
or
nop
gs
adc
daa
stc
cmp
test
pop
and
outsl
push
cwtl
cmpsb
inc
dec
mov
nop
sub
adc
out
sahf
sbb
dec
inc
xlat
pcmpgtw
pop
xor
xchg
and
rcrb
pop
inc
or
and
dec
sbb
leave
adc
sbb
pop
or
jbe
inc
inc
sub
and
adc
mov
adc
sub
inc
pusha
pop
xor
push
iret
sub
pop
stc
pop
and
inc
adc
add
and
cmc
dec
xchg
rorb
pop
adc
mov
push
xchg
xchg
enter
and
dec
movsb
or
in
imul
and
push
int3
inc
ss
or
mov
lods
fcompl
pop
fs
adc
push
inc
add
sbb
insb
push
pop
pop
ss
rorb
notb
jo
push
bound
xchg
dec
push
and
mov
mov
mov
sub
test
push
les
mov
mov
insb
pop
dec
shlb
sub
sbb
sbb
rorl
or
xchg
and
jl
mov
mov
lret
push
inc
xchg
arpl
andl
cwtl
lds
push
pop
mov
lcall
xor
pop
push
mov
mov
popa
xchg
mov
inc
jle
mov
rcl
aas
jb
add
aaa
shrb
loope
cmp
inc
jb
or
les
cwtl
sbb
jne
fsts
out
lods
roll
bound
les
adc
dec
push
cmp
imul
mov
xchg
cmp
add
out
dec
rorb
add
adc
or
adc
cmp
push
arpl
adc
and
mov
rcrb
daa
pop
flds
roll
push
shr
adc
insb
fs
sub
lods
lds
lods
push
jmp
xchg
daa
dec
je
mov
and
or
lret
movsb
and
in
roll
sbb
push
sbb
mov
sub
loopne
stos
sbb
fwait
insb
inc
push
mov
adc
dec
imul
testb
xor
insb
lock
jo,pn
xchg
or
or
fwait
dec
lret
cmp
xchg
sub
push
insb
or
xor
jb
sub
inc
pop
in
adc
insl
daa
push
inc
arpl
bound
in
inc
out
insl
pop
xchg
punpckhwd
insl
stos
popa
adc
pop
popa
or
jne
push
jae
jns
sub
xchg
push
je
cmp
lahf
jg
cmpb
jne
bound
push
inc
add
push
mov
loopne
sidtl
add
mov
adc
add
adc
aam
and
inc
or
add
add
push
leave
xchg
dec
mov
insl
cmp
mov
popa
mov
pop
pop
push
add
je
xlat
test
add
and
in
cmp
cmp
sub
cmp
or
bound
inc
add
es
lcall
mov
negl
rorb
or
repz
dec
sbb
aas
add
add
xor
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
