push
call
ret
ret
les
push
push
in
cmp
mov
lods
stos
pop
xorl
iret
add
push
cwtl
jb
pop
mov
lock
lahf
cld
jo
cmpsl
insl
mov
and
daa
jne
test
std
fstpt
pop
sbb
mov
aaa
mov
pop
jg
xor
dec
xchg
mov
loop
in
notb
pop
mov
mov
iret
sub
rcll
or
sub
lahf
sub
mov
ffreep
mov
cmpsl
loopne
sbb
sbb
sbb
cmp
idivl
ljmp
psubusb
dec
add
sahf
mov
out
mov
mov
add
jno
cltd
add
pop
jecxz
jae
mov
ret
insl
mov
movl
pusha
loopne
ja
loop
scas
xor
inc
inc
sti
jo
fcoml
fs
and
jmp
lock
fmuls
mov
cmp
jno
pushl
ja
push
jle
and
mov
mov
sbb
bound
and
sub
in
hlt
xchg
mov
or
pusha
ljmp
aam
push
pop
fidivl
and
out
add
mul
adc
mov
fdivrp
mov
push
sub
int
xor
fimull
adc
das
push
dec
jno
push
xchg
in
std
jmp
and
pop
inc
cmc
xchg
cmp
cmp
in
insb
jno
call
in
scas
cmc
scas
pusha
rcrl
stos
popa
call
loope
push
insb
xchg
testl
insl
adc
test
mov
movsb
dec
jle
ja
push
inc
nop
add
repnz
into
mov
popf
les
mov
mov
ss
ret
xchg
int
aad
cmpb
dec
ja
test
out
push
jbe
add
mov
xor
push
ret
int3
cmpsb
push
mov
or
xor
lods
xchg
test
stc
dec
test
add
test
decb
jp
adc
push
jns
outsl
pop
lods
push
jp
xor
movsb
popa
aas
push
add
or
shl
dec
cmpsb
fwait
iret
inc
leave
mov
cmp
mov
rdmsr
sub
das
xchg
push
mov
cmp
test
ds
ljmp
into
addr16
and
mov
push
sub
int3
loope
jg
imul
dec
dec
mov
arpl
imul
xchg
and
add
jle
lods
in
push
push
inc
test
cmp
sbb
inc
sbb
dec
and
stc
mov
pop
lods
xor
mov
pop
movsb
aaa
hlt
adc
mov
rcl
inc
iret
push
mov
faddl
lret
xor
std
cmp
pop
jo
in
popa
xor
pop
xchg
sub
stc
push
enter
das
rolb
imul
and
push
or
xchg
lcall
push
divl
dec
mov
mov
call
mov
dec
loope
loopne
xlat
test
outsb
mov
inc
jmp
push
jmp
daa
shll
mov
sbb
fld
jno
dec
xlat
test
fprem1
faddl
pop
les
fimull
in
loope
lret
arpl
cmp
int3
xchg
mov
divl
xor
ljmp
pop
inc
aaa
popf
jne
lods
sbb
xor
lret
or
out
add
xlat
sub
mov
pop
dec
out
or
dec
fdivrp
fcomps
pop
sub
jne
push
jne
mov
adc
cwtl
lcall
cmp
lret
cmpsb
push
cld
jmp
jmp
aaa
lea
pop
push
imull
mov
lods
mov
dec
ljmp
adcl
pop
cmp
jno
ss
push
sub
jb
data16
fisttpl
jmp
sub
sbb
mov
pop
sbbb
scas
sbb
cmp
sti
dec
ljmp
or
adc
cli
xchg
mov
in
sub
jb
test
gs
mov
loop
mov
aad
mov
push
mov
fninit
inc
inc
inc
idivb
xor
lahf
add
lret
sub
iret
lds
add
xlat
pop
movsb
mov
dec
outsl
dec
push
movsl
adc
push
mov
xlat
xchg
mov
rcl
addr16
push
int
mov
test
and
jge
lock
es
fisttpl
cwtl
xor
cmp
mov
icebp
jno
inc
cli
test
sbb
test
iret
dec
in
lods
icebp
add
jb
vmwrite
or
and
loop
test
mov
push
iret
mov
ret
pusha
push
daa
mov
pop
rorl
inc
pop
mov
aam
push
out
shrb
iret
xchg
fdivs
out
lret
sbb
push
lods
cmp
adc
outsb
xchg
lret
movsb
sub
lea
std
xchg
popf
outsb
pop
sbb
xchg
pop
mov
pop
sbb
cmpsl
popa
pop
sahf
push
jmp
rol
es
cli
mov
test
cs
xchg
jb
pop
sub
mov
ss
add
out
mov
gs
bound
call
mov
or
adc
push
fdivl
imul
add
inc
dec
dec
dec
push
xor
adc
data16
daa
stos
jo
sub
imul
sbb
mov
xchg
lcall
mov
jno
xor
push
fnstenv
inc
inc
xchg
cs
or
out
pop
inc
mov
dec
pop
daa
es
int3
out
inc
and
jp
ljmp
subb
bound
mov
xchg
and
lcall
dec
sbb
xor
aaa
adc
and
lea
fdivs
fbld
push
ret
xchg
subb
dec
jp
loop
jnp
dec
nop
cmp
push
mov
outsl
enter
out
cmp
inc
insb
xor
test
pusha
sarl
sbb
data16
add
cli
jmp
ja
add
sub
cmp
sarb
jg
jecxz
out
fdivrp
ljmp
add
inc
adc
je
stos
rorl
adc
rorl
aam
mov
inc
shrb
and
test
mov
jp
stos
add
jmp
mov
mov
inc
dec
cmp
xchg
ret
mov
lret
jnp
pushf
xor
jae
push
jecxz
mov
ret
aad
leave
rorl
es
fcmovu
adc
xchg
or
and
fldenv
adc
xor
lcall
xchg
push
rcr
mov
fucomip
fstpl
into
flds
ret
negl
sub
fwait
daa
test
repnz
add
cmp
nop
out
or
mov
imul
inc
and
push
out
sbb
inc
push
daa
negb
mov
xor
insb
adc
add
add
xchg
jo
push
stos
into
push
repnz
stc
mov
and
mov
and
std
or
repz
sbbb
lahf
mov
jmp
imul
ss
sbb
inc
inc
out
std
xchg
hlt
jae
fistps
sti
ja
jg
jne
jb
and
leave
ret
push
mov
jo
or
movsb
jge
adc
xchg
je
rcr
push
aad
mov
cmp
daa
addr16
aad
stos
popf
fimull
lods
xchg
out
cmp
in
jg
jmp
imul
sub
dec
push
jecxz
mov
mov
js
xchg
and
aas
ljmp
xchg
std
push
inc
in
push
fistpll
xchg
cmp
aam
push
jmp
jnp
xor
pusha
lock
mov
repz
popa
add
test
outsl
xor
cmp
pop
pop
pushl
add
adc
daa
call
mov
cld
mov
dec
cld
push
stos
enter
add
lods
cwtl
sbb
xchg
jns
mov
jne
outsl
and
push
pushf
test
ficomps
xor
cmp
cmp
pop
dec
cmp
push
aas
xor
push
divb
fcoml
into
les
sub
adc
push
mov
fcomi
inc
inc
mov
xor
xor
mov
xor
cli
enter
js
push
rcll
add
jne
insl
lods
adc
sub
mov
cltd
adc
push
push
or
fs
mov
out
xor
sbb
icebp
lahf
hlt
sbb
jg
cmp
nop
shlb
mov
cmp
push
xchg
iret
xchg
int
in
or
addl
out
bound
xchg
dec
sub
and
fmull
adc
in
jle
insl
cmp
xor
sbb
mov
jb
xor
outsb
repz
add
add
pop
push
inc
int3
sub
mov
out
lods
iret
or
pop
cmp
stc
inc
xor
les
jle
fs
rolb
mov
shl
mov
repnz
sbb
dec
lret
or
jle
ds
pop
popa
push
mov
dec
jge
mov
jge
shl
sbb
xorb
adc
in
cmp
jle
or
add
loope
leave
sar
push
mov
jmp
inc
cld
lea
outsl
jo
popf
daa
mov
cmp
mov
and
jnp
in
cmp
loop
add
loope
sub
jbe
inc
xchg
sbb
out
clc
add
imul
add
push
pop
pushl
aam
leave
fcomps
cmpsb
loope
fisubs
jns
jno
mov
test
adc
in
or
mov
cli
cwtl
xor
inc
push
pop
fistpll
rcll
cmpsl
mull
shlb
mov
mov
testl
dec
push
ficompl
push
and
subl
fcmovnu
outsl
mov
scas
dec
and
popf
ss
dec
push
xchg
mov
scas
push
jecxz
fmulp
push
data16
fisubl
xor
pop
push
es
fiadds
imul
dec
adc
dec
testb
test
push
mov
outsl
shll
test
scas
in
repz
push
data16
mov
mov
dec
loopne
mov
std
lds
hlt
fwait
mov
add
xchg
scas
mov
addr16
mov
arpl
out
xchg
jg
mov
or
mov
push
mov
ret
cmp
imul
aam
jp
mov
rorl
or
outsb
push
int
adc
rclb
xchg
mul
or
xchg
sub
xchg
iret
stc
adc
and
outsb
jb
pop
cli
pop
lds
movsl
and
sbb
mov
cmpsb
pusha
and
mov
stos
ficomps
inc
mov
xchg
sarl
cmp
jg
mov
rolb
repnz
or
jne
leave
std
pushf
mov
jmp
mov
jnp
dec
fisttpl
adc
cmp
or
inc
adc
imul
test
mov
ret
aas
sahf
cs
pop
fs
inc
add
cmp
dec
ds
pushf
add
pop
clc
push
in
aas
push
js
push
inc
or
xchg
pop
mov
mov
fistpl
or
dec
fdivs
fadds
push
push
movsl
add
and
mov
aam
in
in
mov
cld
fisttps
outsb
stos
ljmp
mov
popa
mov
jb
sbb
roll
xchg
clc
or
loop
cmp
push
push
pop
call
xchg
stos
test
fsubs
stos
and
lret
repz
sbb
mov
jae
push
je
or
inc
push
inc
mov
jne
pop
jmp
and
push
scas
adc
add
xchg
mov
mov
pop
dec
out
or
cmpl
xchg
lcall
icebp
cwtl
leave
sub
sti
inc
cmp
insl
out
push
push
jo
ret
mov
shll
mov
int
xlat
mov
mov
mov
sbb
data16
pop
in
leave
or
sub
xor
stc
sbb
stc
rolb
jne
cmp
dec
mov
mov
dec
repz
sbb
fs
xor
sti
mov
lea
sub
fucomp
xlat
mov
sbb
je
es
movl
loope
add
dec
inc
cmpsl
call
sbb
jecxz
xor
dec
in
inc
xor
jne
in
jmp
push
push
arpl
rcrb
push
mov
pop
popf
and
into
push
repz
dec
data16
mov
test
lret
mov
rolb
in
push
dec
adc
mov
push
push
sub
int3
test
inc
jmp
pop
inc
test
mov
popa
mov
stos
or
cmp
xchg
pop
push
out
mov
ret
fsubrs
adc
pusha
push
push
in
loope
enter
pop
out
jle
es
gs
cmp
fdivrl
dec
pop
fsubl
lods
je
mov
hlt
cmpsb
lods
xchg
add
sub
aas
mov
fwait
rcrl
out
ret
xchg
pop
mov
ret
push
sbb
movsb
adc
cmp
sub
stos
add
lret
cmc
mov
jb
push
jge
xchg
insb
cld
and
es
xor
pushf
push
pause
leave
xor
dec
fstpl
js
lret
add
paddsb
push
pop
lods
jae
mov
pop
rcrb
add
aam
cmp
inc
inc
mov
sub
inc
jnp
inc
jne
mov
cmp
inc
arpl
sub
and
fs
pop
xchg
cmp
fdivs
inc
pusha
lea
das
adcb
imull
mov
pop
iret
pop
mov
xchg
aad
jb
mov
cmp
dec
mov
push
scas
orps
fdivr
dec
lods
jne
fists
mov
mov
sub
adc
dec
test
dec
sub
jge
call
ret
movl
add
adc
dec
sti
nop
mov
dec
cmp
mov
push
push
jmp
sbb
pop
movsb
sbb
mov
mov
insb
jne
mov
jns
iret
jl
aad
dec
out
add
imul
test
xor
mov
jle
imul
pop
push
sub
mov
pop
adcb
leave
and
clc
in
outsb
stos
and
xor
mov
inc
fs
sbb
sbbl
popa
fbld
xor
add
push
mov
jne
scas
jb
dec
in
lahf
cld
add
inc
inc
cmpsl
test
xchg
push
insb
jbe
das
out
lods
xchg
test
icebp
mov
cli
pop
popa
mov
pop
lahf
nop
inc
stos
and
dec
sub
loope
mov
xchg
push
out
sti
leave
fsub
add
ret
jno
jns
test
out
mov
adc
test
mov
jge
push
idivl
repz
pop
jecxz
fdivrs
or
in
scas
mov
push
or
mov
xor
js
jmp
ficoms
lahf
cld
sub
adc
and
cmpb
jns
out
push
adc
mov
adcl
mov
ja
sahf
jne
push
fldcw
push
pop
sahf
call
mov
popf
mov
test
dec
lret
mov
fisttpll
bound
sahf
pop
pop
mov
jge
or
cli
iret
sub
dec
sub
lret
inc
aas
or
dec
adc
repnz
sbb
lcall
or
out
les
idivb
sub
xchg
jge
aaa
ja
scas
xchg
jo
dec
in
push
aas
push
or
ljmp
pop
cs
outsl
mov
mov
sbb
cltd
or
dec
test
mov
call
push
leave
das
mov
das
daa
lods
das
xor
or
push
mov
jmp
and
pop
fmulp
ret
sub
iret
fwait
shl
ret
jbe
xlat
jne
ss
sub
cmp
inc
push
aas
dec
mov
jae
popf
xchg
xor
xchg
xor
popf
cs
sbb
xchg
or
xchg
out
jno
movsb
sub
pop
cmp
sbb
sbb
xchg
fsubl
push
sbb
and
fcmovnb
daa
sub
inc
sub
or
add
sub
test
insl
iret
mov
jb
clc
test
push
dec
test
out
lock
les
push
je
std
sub
push
ss
pop
je
jo
jb
inc
and
pusha
sub
xor
subb
test
cmc
adc
push
sub
xchg
subb
cmp
hlt
cmpsl
cli
das
dec
xchg
add
call
xchg
adcb
frstor
test
lods
sub
sbb
mov
arpl
push
aam
xchg
call
and
sub
imul
cmp
scas
mov
add
inc
cmpsl
stc
sarb
push
jnp
mov
loopne
out
pop
shr
fsubs
xor
in
fldt
pusha
cmp
bound
sbb
push
adc
icebp
xchg
in
insb
test
lods
fmul
mov
push
sbb
or
in
xchg
push
mov
divb
scas
add
stos
mov
std
gs
insb
adc
bound
add
xorl
lret
pop
daa
ss
or
fwait
sahf
sbb
loope
repz
cmp
inc
xlat
insb
mov
cli
shlb
pop
lahf
cmpsl
jb
cmp
xchg
cwtl
mov
mov
int
jnp
aas
loopne
adc
incl
pop
jp
adc
das
js
mov
sub
push
sbb
lcall
adc
stos
pusha
loope
ljmp
inc
xchg
cmc
in
iret
lahf
sbb
mov
fisubrs
fidivs
xchg
mov
dec
stc
jp
jo
lcall
je
mov
and
pop
aad
pop
lds
mov
mov
out
sub
xchg
or
insl
testl
xchg
out
mov
mov
xchg
mov
inc
mov
add
jmp
addr16
lahf
cs
adc
xchg
add
add
icebp
jno
and
fldt
insl
xor
xor
xor
add
jnp
shlb
fidivrl
mov
mov
ljmp
xor
in
mov
xor
lds
pop
cs
pusha
add
xchg
jge
iret
inc
aad
mov
cmp
test
sti
cwtl
mov
mov
and
xchg
xchg
xchg
push
out
inc
and
lea
mov
jo
push
outsb
sbb
cmp
inc
inc
pop
mov
push
leave
insb
mov
push
jne
and
xor
xor
mov
push
lahf
push
into
sbb
in
sbb
jae
lds
sbb
gs
xchg
neg
in
sbb
inc
fistl
lret
xchg
push
inc
js
nop
cmp
insl
sahf
call
sbb
dec
lcall
lock
pop
das
roll
loope
adc
test
mov
cmp
adc
pop
mov
je
sub
mov
shl
std
addr16
aas
pop
inc
push
and
sbb
sub
mov
sbb
lcall
xchg
imul
test
inc
sub
daa
inc
rolb
test
lret
loope
sbb
out
jp
jge
add
xchg
int
out
ja
das
jecxz
mov
inc
pushf
adc
lods
hlt
jo
xorl
inc
adcb
or
sbb
movb
rorb
adc
add
xor
stc
dec
xor
mov
jle
pop
es
xor
or
mov
stos
xor
sbb
aam
xor
push
adc
push
inc
adc
into
div
mov
das
pop
icebp
mov
mov
jmp
sbb
mov
xor
xor
cltd
mov
jg
pop
mov
je
xor
imul
andb
and
cmp
mov
scas
push
jl
push
jl
das
pop
adc
fwait
scas
insb
cmpsl
stc
xor
fmul
imul
and
mov
mov
in
cli
stos
adc
xor
push
addr16
sub
sbb
mov
mov
and
xor
icebp
insb
movsl
leave
cs
out
xor
sbb
xchg
inc
xchg
fs
xchg
and
js
cs
push
push
jb
lret
shr
out
fisubs
push
xor
jno
sub
sub
in
test
mov
clc
stos
or
dec
imul
cmc
test
rolb
adcl
sbb
and
fmulp
adc
fidivl
pop
movsl
cmpsl
in
incb
das
int3
adc
sahf
inc
add
jg
sbb
jp
xchg
enter
xor
mov
push
jno
fimull
fmull
loop
and
or
loope
push
clc
add
bound
cltd
int
mov
ror
negl
xchg
mov
clc
mov
pop
mov
and
push
xor
and
je
mov
jp
or
dec
jb
mov
stos
and
imul
xor
cli
xchg
das
rorb
jle
enter
mov
arpl
and
loopne
loope
jp
push
lret
loope
scas
adc
inc
mov
sub
ret
adc
ja
sbbb
cmp
xchg
popf
xor
xchg
jl
inc
jae
sarl
insl
test
je
inc
cmpl
lds
jl
or
call
loope
mov
cmp
inc
adc
cmp
sub
sub
xchg
imul
pop
pop
into
jle
dec
or
aad
decb
fwait
test
mov
sbb
mov
cwtl
jno
xor
cld
adc
int3
push
rolw
mov
jae
jnp
sbb
xor
jmp
sti
stc
cwtl
xchg
mov
aad
add
jle
fbld
inc
ds
ljmp
dec
cmpsl
imul
repz
andl
sahf
insl
addl
iret
pop
aas
out
push
inc
pop
adc
shl
frstor
lahf
dec
lret
ds
dec
inc
mov
fbld
aam
pop
push
outsl
out
pusha
hlt
or
iret
mov
inc
aaa
dec
test
pop
insb
scas
pop
push
and
insb
cmp
jl
icebp
push
roll
les
cld
dec
mov
pusha
inc
pushf
mov
dec
inc
aas
jae
jl
jp
dec
inc
mov
jbe
pop
sub
test
xchg
pop
jne
mov
iret
xchg
mov
mov
and
adc
movsl
je
shll
daa
add
sub
add
ficomps
or
push
gs
hlt
xchg
adc
add
mov
cmp
pop
pop
push
dec
fnstenv
mov
mov
int
cmc
insb
xchg
data16
jnp
and
inc
repz
mov
cmovo
cld
in
scas
into
std
fimull
mov
dec
pop
xor
lods
jl
push
aas
jmp
ret
sarb
xchg
aaa
popf
out
sbb
push
outsb
add
push
cmp
push
repnz
mov
add
aaa
inc
pop
shll
inc
movsl
xchg
cmp
add
xchg
pop
push
cli
in
and
add
add
sub
mov
cmc
adc
cmp
movaps
jp
dec
add
jo
divl
std
fwait
gs
xchg
lods
shll
ljmp
repz
sahf
push
popa
cltd
push
test
mov
in
mov
and
mov
mov
add
les
and
add
in
movsb
xor
jo
movsb
adc
pop
push
adc
jle
inc
jae
cld
lods
sub
mov
jg
push
repz
xchg
inc
shll
jo
jb
in
dec
in
and
xor
lcall
push
xchg
fmull
test
scas
add
xor
imul
int
and
leave
ja
int3
sbb
inc
loopne
popf
dec
sete
insl
and
xchg
xor
xchg
mov
push
inc
dec
dec
push
mov
and
pop
xlat
mov
fidivs
ljmp
rcr
pop
xor
mov
mov
dec
jbe
call
lcall
adcb
cwtl
xor
cmp
jg
aam
pop
jne
xchg
adc
sub
fsubrl
mov
je
mov
pop
cs
shrl
xor
test
xchg
fisubrl
adc
cmpsb
add
jmp
rol
int3
arpl
shrb
jns
iret
xlat
lret
mov
xchg
dec
sbb
inc
out
insb
dec
rclb
sarb
push
fdiv
lcall
lcall
mov
lock
test
mov
pop
movsl
fsub
repnz
add
and
cli
mov
pop
scas
push
xchg
sbb
fcompl
out
lods
shll
sub
pusha
jmp
ljmp
mov
rcll
fwait
jno
or
lds
push
jmp
int3
add
push
push
rcrl
or
repz
xchg
negb
in
xchg
rolb
imul
sbb
cmp
sub
cmp
jbe
outsl
push
jge
mov
test
cmpxchg
sub
cltd
out
in
adc
inc
dec
cltd
adc
push
jo
call
repz
int3
push
ja
inc
mov
dec
mov
and
in
lahf
xor
cmpsb
mov
pop
aam
enter
xchg
ficoml
dec
sti
inc
sbb
xor
cwtl
push
xor
les
pop
mov
pop
jge
aam
and
call
std
push
fistps
gs
mov
adc
xchg
rcl
cli
dec
fldt
jo
mov
dec
sub
cmp
testb
inc
xor
fsubs
xchg
or
xlat
sub
ja
arpl
push
mov
fs
xchg
int
flds
cmp
dec
cs
mov
pop
mov
and
movsb
adc
jo
jo
fld
ror
adc
cmp
xchg
jecxz
les
mov
nop
push
jle
mov
dec
mov
popf
xor
adc
daa
jb
dec
fs
fbstp
mov
insl
outsb
enter
fwait
adc
pushl
dec
call
sub
push
mov
les
xchg
in
fsubrs
cwtl
mov
ret
cmp
or
xor
add
dec
mov
xor
rolb
insb
negl
shll
pop
cmp
jb
add
mov
xchg
lret
out
fsubrs
sub
sbb
adc
shrl
mov
cmp
cmp
and
mov
scas
popf
inc
add
clc
mov
jecxz
aaa
adc
cmp
test
hlt
popl
dec
add
pop
scas
mov
mov
xor
pop
jb
adc
pushf
sbb
cmp
xchg
sbbb
aaa
dec
push
imul
inc
shll
cld
lds
fidivrl
push
or
inc
jle
cmp
xchg
push
adc
xchg
leave
push
mov
lret
aad
lret
pop
jns
repz
xor
sbb
lea
pop
dec
jmp
dec
call
int3
sub
mov
sub
test
std
test
insb
int3
xlat
adc
adc
sbb
mov
es
aaa
push
mov
mov
cwtl
inc
xor
fwait
mov
jne
mov
loope
sbb
mov
mov
outsl
fistl
xchg
out
push
jno
or
mov
shrl
push
mov
lea
sbb
repnz
pop
ljmp
cs
push
mov
int
add
jo
test
ret
pop
lret
lahf
jl
jl
mov
and
out
fs
scas
mov
push
sbb
pop
sub
lods
test
addr16
aaa
lret
pop
sbb
ss
dec
ds
sub
pop
jb
xor
inc
push
call
xor
lahf
jns
loopne
inc
into
adc
lods
sbb
jl
testb
mulb
jl
notb
rcrl
fstpl
in
add
fs
jge
test
pop
sahf
in
mov
ds
sbb
adc
pop
jb
add
jbe
jmp
gs
xchg
pop
test
mov
stos
repnz
mov
aas
stc
addb
insl
leave
scas
ds
and
xchg
movsb
cltd
iret
ljmp
cmp
cmpsl
cmpsb
clc
in
jle
divb
lods
pop
mov
and
test
add
inc
les
mov
mov
sbbl
mov
ret
outsb
les
es
mov
fldcw
ret
loop
xchg
sbbb
or
xchg
in
mov
jecxz
aas
add
mov
push
je
ret
lock
push
adc
pop
push
lret
in
loop
popf
mov
pop
xor
push
jnp
fmuls
inc
push
push
xor
enter
sub
inc
sub
jne
fistpll
adc
cmp
in
jecxz
xchg
add
jo
xchg
mov
sbb
xchg
or
jnp
mov
popf
push
je
mov
mov
and
insl
sbb
dec
fimull
xor
push
dec
cmp
dec
mov
les
jne
sub
outsl
idivl
imul
jl
cmpsl
call
mov
cmp
mov
out
divb
xchg
pop
test
in
popf
adc
daa
or
jmp
cmpl
jl
outsb
push
dec
jge
inc
pop
adc
pop
nop
mov
adc
pusha
jb
roll
jle
lea
pop
adc
imul
sarb
jae
ljmp
ret
fisubl
jb
fs
jmp
je
aaa
fsub
repnz
ljmp
shlb
aaa
xchg
dec
mov
add
adc
add
push
add
lods
cmc
inc
call
cs
je
push
push
dec
adc
xchg
popf
dec
out
xor
ror
int3
lods
fwait
xor
cmp
test
cmp
es
aam
push
or
scas
inc
pusha
cwtl
cwtl
and
addr16
push
nop
loop
aaa
cld
dec
shll
sbb
or
stos
push
imul
mov
push
or
xor
push
xchg
stos
mov
out
shll
jnp
sbb
pop
jo
or
xlat
and
inc
dec
loopne
inc
mov
mov
call
add
mov
xchg
enter
jecxz
or
mov
mov
idivl
js,pt
adc
xchg
imul
dec
push
pusha
rclb
jbe
decl
push
push
jnp
mov
mov
dec
std
add
push
jo
push
iret
ds
insb
mov
test
xlat
ret
shlb
sbb
arpl
jae
lds
stos
dec
ds
and
into
idivl
sub
movsb
fs
psubsb
xchg
or
xor
shlb
fildl
mov
loop
pop
fcompl
mov
inc
push
mov
jno
xchg
cmp
into
mov
rclb
pop
shlb
or
xor
cmp
imul
int
aam
add
xchg
sbbb
pop
aam
das
pop
fisubrs
shl
das
insl
ja,pn
pop
pop
mov
xor
adc
imul
lods
in
and
lds
push
mov
xchg
sub
clc
movsb
xor
ds
dec
sbbb
add
shlb
lahf
pop
push
aad
pop
inc
dec
icebp
adc
or
stos
pop
jbe
mov
cmpsl
fnsave
lahf
outsl
mov
rcll
sub
testl
mov
popf
iret
imul
mov
sbb
jle
out
pop
push
push
or
or
mov
jecxz
xchg
jns
stc
pop
aam
and
add
or
push
jnp
xor
in
inc
push
aad
inc
mov
cmp
call
sub
and
and
dec
test
push
jo,pt
jp
jg
mov
fstl
imulb
jno
add
lahf
pop
imul
insl
xor
xor
aam
in
push
aam
sbb
scas
xchg
and
xor
pop
push
int3
adc
dec
sti
add
jne
cmp
aam
jb
das
mov
sbb
mov
sub
insb
cmpsb
pop
or
push
lods
clc
out
mov
arpl
dec
rclb
mov
push
les
inc
mov
leave
popl
aas
imul
subb
and
out
cmp
dec
add
xor
mov
adcl
icebp
scas
int
adc
pusha
out
cmc
int3
fstpl
int
sbb
sbb
lret
lock
cs
shlb
xchg
jne
jo
ret
xchg
mul
hlt
mov
movsl
ja
test
pop
pop
dec
dec
into
stos
inc
pop
stc
sub
fiaddl
out
ss
inc
ljmp
sub
xchg
sbb
cmp
lahf
loopne
lahf
pop
push
add
fdivr
in
movsl
out
push
stos
inc
xorb
test
imul
test
icebp
pop
mov
in
push
ja
add
and
adc
adc
cmp
add
nop
push
lahf
cmp
and
jae
jg
mov
movsl
mov
test
mov
in
leave
or
inc
mov
inc
xchg
outsl
fnstenv
cmpsl
loope
mov
push
lea
rolb
and
inc
adc
push
shlb
or
pop
cmpl
pushl
add
add
scas
jbe
add
xor
cld
xchg
fnstcw
sub
and
xlat
sub
outsl
sbb
pop
pop
dec
std
nop
es
imul
fs
shlb
stos
push
inc
xor
sub
mov
xor
xchg
mov
mov
pop
out
inc
test
jbe
lahf
fnstcw
movsl
and
orb
add
scas
les
xchg
pop
roll
lret
sub
cs
cmp
dec
test
dec
or
bound
dec
pop
into
lods
adcl
movsb
loope
insb
movsb
icebp
mov
add
ret
fmull
scas
addl
and
cli
test
test
pop
push
mov
jmp
xor
stos
aad
jbe
cmp
cmp
shlb
pop
add
inc
fsubrl
arpl
imul
inc
adc
sbb
dec
cmovl
sub
sbbb
xchg
xchg
sbbb
pusha
pop
jbe
out
cmpsb
mov
sub
inc
and
jnp
stos
ret
leave
push
and
loopne
push
stc
enter
lds
movsl
lcall
sbb
outsb
jo
cmc
add
imul
pop
adc
fisttpll
arpl
iret
cmc
cmp
icebp
cli
ret
mov
test
jae
lret
lds
or
xchg
jle
data16
lods
gs
in
xchg
shr
push
loopne
pop
orb
repz
out
jne
out
pop
sbb
int3
xchg
hlt
inc
rcll
inc
dec
adcl
outsl
or
xlat
xlat
movsb
sub
push
mov
popf
dec
ret
jmp
repnz
jge
inc
xchg
enter
ret
mov
fs
leave
adc
mov
pop
shlb
hlt
mov
lock
or
lods
xchg
aad
jmp
cmc
cmpsb
cmp
xchg
mov
adc
adc
pop
in
shll
mov
xchg
addb
rcrl
push
loope
mov
out
mov
mov
cmp
lretw
sub
push
ret
inc
aaa
je
popf
adc
sahf
xchg
clc
sbb
mov
insb
pop
cli
imul
xor
fst
repnz
jg
sbb
js
mov
jp
shl
mov
ror
les
ret
cld
jp
xor
pop
das
fisttps
and
bound
mov
cs
fnstsw
pop
aas
scas
icebp
movsb
push
ljmp
jle
xchg
cli
mov
decl
add
xchg
mov
or
inc
shll
sbb
sti
inc
shlb
jae
or
daa
inc
xorb
push
prefetchnta
in
in
iret
push
jge
adc
dec
mov
xchg
out
mov
enter
mov
jns
jge
mov
xchg
mov
ja
inc
add
xchg
test
std
mov
in
jg
data16
cmp
aam
mov
sbb
pop
jne
cmp
jns
pop
mov
cltd
pusha
scas
dec
testl
xor
or
mov
or
mov
mov
dec
test
leave
gs
push
cmp
or
shlb
fwait
jno
enter
mov
repnz
sub
mov
pusha
dec
mov
inc
pop
xchg
je
ret
push
inc
xchg
mov
js
lods
dec
loope
sbb
dec
enter
cmp
xchg
testl
mov
mov
cmp
xchg
dec
jp
push
call
lcall
dec
add
imul
adc
xor
out
mov
cmpsb
scas
int
xlat
out
shll
pop
add
mov
es
andl
test
adc
xchg
push
jnp
push
dec
cmp
jp
test
lret
shll
les
cmp
xor
adc
or
push
lock
shl
fistpll
mov
cli
xchg
pop
or
cld
jl
jg
sub
mov
gs
xchg
push
ja
arpl
xchg
sbb
ds
aas
js
mov
add
jne
dec
bound
push
dec
sarb
jge
pop
je
pop
out
pop
in
mov
arpl
sub
data16
jle
lret
jno
add
subb
push
jae
fwait
or
pop
into
cmc
mov
out
sub
push
fcmovnb
fcmovnu
jp
pop
push
daa
pop
add
test
imul
movsl
fisttpll
ficomps
fnstcw
scas
pop
jmp
xor
daa
add
push
mov
outsl
xchg
xchg
push
imul
divl
pop
mov
mov
and
dec
mov
mov
shlb
add
inc
js
mov
jbe
mov
cmp
lods
mov
imul
xchg
aad
lock
enter
adc
xchg
imul
jb
imul
mov
insb
mov
jae
inc
xlat
add
aad
aaa
rcrl
clc
test
sbb
mov
mov
movsb
push
in
test
shl
es
cltd
lcall
add
adc
loopne
push
inc
pop
int3
enter
shlb
rcl
mov
repz
pop
test
cmpsb
les
fsubrs
insl
pop
pusha
pushf
cwtl
jle
pop
and
mov
aam
ds
addb
dec
xor
inc
mov
mov
adc
pop
mov
fsubp
cmp
clc
insl
sarl
pop
push
pusha
stc
inc
scas
cmpsb
pop
mov
outsl
call
bound
into
bound
test
xchg
addl
fisubs
pop
jle
sbb
cmp
fcoms
ss
outsb
xor
push
je
push
sbb
dec
es
pop
sub
insb
and
cmp
cltd
mov
pop
or
mov
or
xor
cmpsb
jl
xorl
sub
inc
xor
or
or
dec
shl
dec
jl
cmc
in
xchg
aas
push
lcall
stos
pop
or
roll
daa
nop
mov
mov
mov
loope
mov
pusha
and
or
icebp
insb
cmp
arpl
or
cli
outsb
jle
xor
xor
lret
and
inc
xor
lret
pop
cmpsl
jns
mov
xchg
mov
inc
enter
shrb
mov
out
ret
pop
and
push
test
stos
das
pop
test
filds
in
jp
add
popl
add
leave
adc
dec
mov
inc
imul
int
pop
iret
test
mov
outsl
fimull
pop
leave
add
mov
daa
lods
jmp
inc
jnp
cmp
jl
hlt
sub
add
cmpsl
adc
stc
mov
and
mov
mov
bound
pop
pop
mov
mov
and
sub
adc
pop
xor
lea
ss
out
ljmp
lcall
insb
int3
push
mov
inc
dec
push
jecxz
jmp
dec
fcmovb
outsl
add
push
or
es
fistpll
pop
pop
fsubrs
adc
or
add
mov
cmp
mov
clc
insb
gs
les
mov
fs
sub
jmp
negl
push
add
movsb
outsl
aad
mov
push
mov
movaps
insb
inc
or
mov
add
and
xchg
inc
fistpl
in
outsb
jbe
test
cmp
das
adc
lcall
add
mov
adc
mov
xor
popf
ja
cmovno
pushf
inc
push
in
loope
xchg
movsl
push
insb
jl
adc
test
in
fwait
mov
mov
mov
shlb
scas
divb
adc
and
xchg
mov
pop
xchg
lds
gs
cltd
rclb
roll
enter
out
xor
sbb
mov
add
sbb
cmp
pop
mov
std
xchg
clc
push
andb
sahf
movsb
out
cli
gs
mov
cwtl
dec
pop
jno
out
sbb
xchg
insl
fisttps
aaa
sbb
scas
pop
enter
push
xchg
xor
jecxz
dec
dec
lret
iret
adc
adc
xchg
add
lods
mov
push
add
icebp
xchg
lods
cli
adc
push
inc
sbb
jbe
mov
sbb
mov
and
jg
scas
jb
jae
sahf
dec
add
stc
out
dec
pop
imul
add
adc
js
movsl
mov
lods
adc
mov
and
xor
sar
mov
xchg
lret
mov
js
das
enter
lret
imulb
jbe
jg
sub
negl
lods
mov
xchg
es
insl
lds
mov
adc
fcmovnbe
push
xor
mov
outsb
in
push
mov
aam
inc
sub
cs
pop
dec
dec
jg
clc
mov
push
jl
jbe
lods
jmp
pop
pop
xchg
dec
ljmp
mov
nop
pop
jo
mov
enter
cmp
xor
push
xor
mov
jp
inc
outsb
enter
dec
cli
cld
push
cld
xor
push
add
xor
adc
cld
pop
addb
pusha
xor
push
dec
lret
hlt
lcall
push
and
jnp
adc
adcb
pop
xor
pop
in
pop
and
pop
adc
sub
daa
arpl
push
scas
mov
push
in
pop
push
jns
lret
rorl
push
js
xor
loopne
clc
mov
lahf
sti
adcl
add
mov
mov
inc
mov
add
dec
dec
xor
jnp
xor
push
pop
xlat
push
dec
fwait
mov
push
push
ljmp
xchg
std
mov
mov
mov
inc
pop
scas
leave
arpl
outsl
and
add
sub
pop
jle
sbb
mov
adc
sub
test
sbbl
sbb
shrb
stos
ja
into
cwtl
addr16
mov
lret
xlat
push
sbb
xchg
aam
cmp
lods
sub
stc
and
xchg
jg
adc
mov
scas
mov
out
and
xchg
mov
push
add
popa
cwtl
sbb
movl
das
xor
xchg
out
mov
in
push
cmc
jbe
adc
dec
mov
test
js
cmp
ljmp
jp
lahf
insl
push
mov
ljmp
scas
outsl
cld
xchg
inc
mov
sarb
seta
rcr
mov
adc
stc
push
ret
dec
pop
sbb
pop
and
adc
xchg
cmpsb
dec
xchg
mov
mov
std
or
xor
incl
push
pop
stc
dec
lds
pop
das
imul
in
and
sahf
lahf
scas
jno
int
popa
dec
cli
adc
push
pop
cltd
out
cmp
xchg
cmp
adc
xchg
leave
and
in
ljmp
movsb
out
xchg
fwait
outsb
dec
insl
add
xchg
add
mov
add
jge
jle
xor
mov
leave
mov
mov
pusha
push
out
dec
adc
imul
pop
in
lods
xor
in
mov
push
push
test
sbb
lods
inc
mov
gs
sub
loopne
or
dec
jp
insl
ss
cmc
add
stos
cmp
je
in
sbbb
dec
mov
adc
cmp
mov
movsl
insb
scas
xorb
bnd
mov
rol
mov
pop
popf
xchg
mov
lret
fnstcw
push
test
mov
jl
inc
pop
shll
fmull
test
int3
fbstp
nop
jns
xlat
push
andl
push
sahf
push
or
dec
lods
outsl
sub
nop
xor
push
pop
push
cmpsl
sbb
insl
repnz
stos
mov
dec
gs
jecxz
cwtl
push
in
xor
dec
ret
sti
xchg
add
sbb
in
int3
mov
mov
into
shrl
rep
addr16
movsb
or
ret
inc
loope
loop
repnz
lret
cli
incl
xor
aas
mov
sahf
push
ss
xchg
and
mov
mov
xchg
jbe
in
dec
cmp
lcall
movsb
add
or
sub
rcr
jecxz
lods
jb
and
pushf
test
cmp
push
out
dec
pushf
ret
mov
push
cli
sbb
enter
cmc
jmp
xor
cwtl
adc
jo
pop
mov
out
cmpl
sub
and
and
lret
roll
lea
out
inc
add
in
add
aam
outsl
lret
xchg
rcrl
fnstenv
xchg
in
and
stos
ja
int
mov
fs
js
xchg
xor
iret
add
jp
or
aad
into
out
into
jb
aam
fwait
pop
jo
outsl
das
sbb
ja
mov
jne
push
in
les
shlb
mov
xchg
loope
dec
das
dec
in
cltd
enter
pusha
xor
push
loope
out
cltd
and
leave
add
das
test
in
cli
stos
sbb
jne
sbb
imul
sbb
in
xor
inc
mov
pop
pop
popf
mov
das
push
xor
and
pop
jb
movsl
sub
push
inc
cli
inc
sub
xor
xchg
pop
adc
pop
jo
xor
pop
lds
popf
lock
mov
push
mov
sbb
jle
mov
mov
fucom
cmpsb
shrb
push
or
shlb
lods
sbb
aaa
mov
in
cmp
and
dec
aad
lock
cmp
or
and
cld
sarb
fistpl
inc
insb
loope
push
test
stos
pop
and
test
cmpb
out
inc
aas
cmp
dec
xor
dec
or
sbb
push
xchg
fs
std
cmp
push
fmull
or
xchg
mov
test
mov
pop
rolb
stc
mov
push
ret
push
rorl
mov
leave
add
dec
pop
mov
loope
negl
sub
ljmp
mov
push
icebp
adc
xchg
jg
mov
fiadds
mov
sub
cmp
int
cwtl
and
and
adc
lcall
stos
xor
push
sub
inc
sbb
or
sub
mov
arpl
mov
sbb
call
jns
psubsw
push
mov
fwait
xchg
sbb
out
lds
dec
xor
test
int
or
shlb
push
cmp
jbe
mov
mull
repnz
jmp
fadd
ret
sub
inc
jl
data16
adc
clc
dec
pop
add
nop
xor
dec
out
add
pop
cmp
sub
jge
insb
adcl
lret
daa
loopne
or
or
cmpsl
fmuls
xchg
fcomps
xor
jp
jmp
inc
or
push
fs
in
or
sub
pop
pop
mov
inc
push
pop
jle
add
inc
ja
data16
adc
pop
iret
rcl
pushf
shll
mov
into
and
and
lret
xor
inc
pushf
inc
pop
mov
orl
mov
pop
les
mov
in
or
add
outsb
imul
lret
cmp
test
jmp
mov
inc
filds
iret
sub
cli
imul
add
mov
or
mov
lock
jmp
je
cmpsb
mov
jmp
add
xor
cwtl
inc
addb
notl
into
cs
dec
leave
es
inc
sub
dec
dec
js
or
ret
fisubs
pop
cld
push
pop
xchg
dec
adc
pop
ljmp
pop
imul
inc
movsb
mov
dec
lea
add
fcmove
lods
push
xchg
insl
push
push
fabs
jecxz
outsb
loop
js
jp
mov
repz
jae
sub
jle
sbbl
arpl
and
imul
movsb
inc
mov
mov
aas
lock
jecxz
in
arpl
mov
lret
pushf
xchg
sbb
popa
lret
push
dec
test
add
cmp
mov
aad
mov
icebp
es
cmpsl
pop
add
mov
or
bound
stos
mov
mov
sahf
inc
movsb
adc
lds
fdivl
js
mov
fldt
pop
dec
loop
aad
loope
movsl
imul
pop
adc
rclb
jo
adc
inc
popa
test
loopne
dec
sarb
mov
mov
stc
cmpsb
pop
repz
rcll
aad
jmp
mov
xchg
cmpsb
int
stos
lock
mov
movb
imul
xor
cmc
lea
xchg
and
mov
adc
and
push
movb
fidivs
pop
pop
test
test
jecxz
push
mov
fs
int
push
imul
test
or
scas
mov
icebp
add
sub
cmp
push
sbb
xchg
inc
add
out
dec
xor
outsb
inc
outsl
andb
outsl
add
decl
sub
int3
loop
or
fbld
int
insl
jp
adc
lods
mov
ljmp
std
jmp
stc
into
das
das
shl
push
sbbb
testb
inc
shrl
test
mov
mov
cmp
inc
jg
ljmp
cmp
out
daa
cmc
mov
ja
or
lret
xor
dec
jb
cld
lahf
les
iret
mov
lock
fists
ret
decb
and
int3
inc
sbb
mov
xor
rcrb
out
pop
jnp
xchg
push
xor
xor
int3
mov
mov
sbb
adc
imul
adc
lret
ds
push
and
mov
movsb
mov
popa
pusha
rcr
and
lcall
jo
xor
jnp
ret
cs
dec
sub
testl
xchg
lods
jmp
mov
aas
adc
out
sti
adc
imul
fdivrs
das
cmp
fisubs
ficoml
jl
xorb
fmul
fbstp
lcall
xor
in
adc
test
jl
pop
cld
adc
sbb
arpl
stc
inc
loope
cmp
mov
loope
jp
and
sub
fcompl
les
mov
sbb
adc
into
lods
and
xlat
aad
movsb
in
call
mov
push
sub
pusha
imul
jne
jmp
pop
xor
repnz
mov
add
sbb
lret
push
and
dec
xor
dec
movsb
jne
pop
mov
cs
icebp
sub
ja
jne
dec
cmp
fdiv
andps
jecxz
adc
cmp
insl
cmp
pop
and
push
test
jmp
and
roll
add
fnstsw
cmc
sbb
mov
xchg
sub
test
fwait
ja
fs
in
mov
add
mov
popf
push
pop
push
add
or
mov
adc
xor
push
pop
popf
mov
and
add
loope
xor
push
into
add
fdivr
jo
orl
fs
mov
js
insl
and
lods
scas
or
add
fadd
in
jno
ss
arpl
xor
int3
jle
es
hlt
sbb
mov
mov
mov
scas
sbb
cltd
xor
dec
push
sbb
repnz
enter
jbe
pop
jnp
fnstcw
push
loopne
mov
les
arpl
mov
movsl
loopne
inc
test
cmp
pushf
jno
dec
jb
push
cwtl
cmp
push
test
shrb
movsb
pop
ret
sub
xor
or
jp,pn
sbb
insb
mov
jp
aam
mov
pop
cmc
rorb
push
sarl
sbb
popa
lock
nop
mov
insl
jge
mov
movsl
mov
movsl
mov
sub
jae
imul
inc
mov
xchg
xlat
pop
mov
jmp
jo
jl
js
push
jae
or
and
jg
mov
push
cmpsl
sub
jns
out
push
in
seto
ljmp
dec
stos
movsl
sahf
dec
jbe
and
sbb
jns
pop
into
cmp
and
mov
xchg
lea
int
dec
cmp
ja
call
jp
mov
cld
xchg
cmpsb
pop
out
sub
daa
xor
mov
xchg
or
add
icebp
test
mov
mov
inc
inc
les
ljmp
cmpsb
aad
sub
xchg
mov
xor
xchg
and
nop
lret
xor
mov
push
insl
jp
cmp
fcomps
sbb
mov
jmp
std
cmc
and
jno
scas
cmp
xchg
test
or
movsl
jge
shlb
hlt
into
rcr
cmpb
lods
in
call
mov
aas
lret
add
cmp
add
stc
lcall
gs
cmp
adc
jmp
mov
mov
cwtl
imul
lods
into
xchg
mov
in
jbe
push
fwait
add
int
sar
cmpsb
cltd
adc
ret
sub
inc
push
lret
push
sbb
je
mov
pusha
rcrl
fstpt
dec
out
in
and
data16
lds
inc
xlat
add
movsl
sub
leave
mov
pop
jo
adc
mov
fists
int
sub
andl
clc
jg
dec
sarl
fstps
test
pop
test
pusha
mov
out
adc
test
jnp
shlb
push
sahf
fiaddl
out
push
cmp
push
imul
adc
push
movsl
cwtl
dec
cld
mov
ja
dec
repnz
stos
push
xor
xor
lret
mov
fildl
movb
xor
fdivr
and
and
aaa
sahf
add
mov
adc
mov
movsl
out
outsl
aad
lea
std
cmp
sub
stos
scas
xor
das
adc
popa
push
lret
ds
inc
cmpsb
or
dec
adc
pop
test
sub
sbbl
shl
cmp
mov
push
jecxz
lcall
push
or
pop
jge
xor
sub
xor
ret
inc
inc
sub
sub
enter
add
inc
push
mov
repnz
push
pop
ret
xchg
jecxz
outsl
dec
mov
pop
jmp
in
les
mov
dec
sub
xchg
pop
in
mov
sub
pop
in
cld
push
movsl
sarl
scas
mov
adc
dec
lods
rcll
js
into
mov
add
jmp
xchg
in
out
lcall
ret
cmpsl
fwait
and
push
lahf
aam
mov
les
fwait
bnd
jbe
into
int3
xchg
sub
and
jnp
jle
sub
ds
dec
mov
jns
xchg
lds
sbb
cmp
pop
mov
xor
jno
ljmp
pop
adc
mov
pop
stos
mov
cmp
push
and
lods
cmpsl
sub
dec
mov
jmp
xchg
lea
or
dec
pushf
lock
cmp
aad
scas
shrl
mov
jae
inc
adc
icebp
mov
test
sbb
out
add
cmpsl
mov
int
ljmp
dec
in
pushf
jb
clc
sub
push
sbb
out
sub
ds
xchg
xorb
mov
iret
jno
pop
adc
hlt
mov
jno
cmp
add
aas
mov
sub
push
cmc
sbb
mov
fldcw
xor
nopl
xchg
test
popa
xchg
scas
cltd
leave
cmp
and
aaa
xchg
sub
sbb
iret
push
sub
xor
out
adc
mov
fs
lds
push
gs
lds
xchg
int
lcall
xlat
mov
addr16
mov
sub
mov
sub
add
fmull
push
sbb
sbb
call
pop
mov
dec
cltd
icebp
dec
call
inc
hlt
test
and
mov
pop
pushf
in
fimuls
inc
sub
sub
mov
pop
or
or
shr
cmpsl
xor
sbbl
lods
push
dec
in
test
lret
ljmp
dec
stos
ficompl
test
subl
sbb
loop
mov
or
mov
stos
lret
lea
ret
aaa
sbb
xchg
or
sub
icebp
call
mov
insb
sarb
aas
es
push
sub
stos
push
aaa
int3
call
or
jecxz
int3
xlat
mov
jecxz
mov
icebp
add
mov
cli
cmp
adc
xchg
xchg
sub
mov
repz
or
fnstcw
cmp
fisubrl
fisubl
xchg
push
xchg
fs
test
or
mov
jns
cmp
sub
icebp
fwait
es
mov
xchg
dec
lods
popa
cmpsb
shlb
aaa
ret
mov
cmpsl
pop
sbb
xor
xorl
popf
stos
aam
adc
sbb
nop
inc
xchg
imul
pusha
lds
push
mov
ret
dec
inc
notb
std
jae
sub
pop
sub
mov
adc
sub
cmp
pop
repz
mov
xchg
insl
aam
sbb
mov
leave
mov
mov
dec
mov
out
in
or
outsb
adc
pop
xor
or
mov
jbe
cmpsl
lds
sbb
insb
xor
enter
sub
inc
xor
xor
and
cli
mov
js
xor
jle
cmp
xchg
icebp
jmp
lods
lahf
ret
xchg
stos
adc
sbb
cltd
push
mov
test
outsl
inc
in
adc
dec
outsl
dec
sub
mov
xchg
adc
mov
dec
xchg
je
mov
xorb
mov
fs
lock
mov
cmpsl
ljmp
or
lcall
sti
leave
lods
mov
add
hlt
sahf
rolb
mov
inc
negb
loope
xor
fstl
adc
cmp
lcall
pop
jnp
mov
ljmp
xchg
pop
sti
scas
fmul
in
pop
arpl
in
adc
imul
movzwl
dec
fs
cwtl
mov
aad
hlt
lea
xor
ss
mov
xchg
loope
daa
xor
add
movhps
loope
loopne
sahf
lahf
and
or
or
out
mov
hlt
jl
or
sub
mov
data16
es
cmp
loope
jecxz
mov
int
xchg
notl
cmova
xchg
inc
cmp
lods
xlat
and
push
inc
adc
or
in
or
fimuls
addr16
lea
mov
cs
fyl2x
pop
mov
cmp
insl
repz
mov
mov
push
adc
mov
mov
negb
inc
movsl
ficoml
jg
loopne
jb
iret
cmp
popf
mov
in
into
andb
sub
mov
imul
pop
shl
data16
sbb
and
hlt
mov
dec
mov
adc
sub
dec
movsb
lret
lock
lea
fisttpll
sbb
sbb
jl
xchg
loop
popf
ret
and
test
repz
mov
sub
cwtl
lcall
les
movsl
inc
sub
shlb
fidivrl
clc
dec
pop
add
and
and
xchg
loope
adc
sti
jbe
pop
lcall
shlb
mov
aam
popf
jbe
movsl
fsubrs
pop
out
out
loopne
sbb
adc
mov
mov
ret
mov
lods
pop
sub
enter
push
lcall
mov
mov
sahf
sbb
aam
xor
shll
pushf
mov
and
adc
jl
adc
pop
mov
pop
adc
cmc
in
xor
js
mov
ljmp
incb
xchg
repz
push
js
stos
cmp
cmpsl
jo
out
or
lahf
mov
call
sti
mov
push
push
sub
xchg
mov
mov
roll
fisubs
in
and
adc
lds
fiaddl
pop
imul
pop
cld
loope
sbb
pop
sbbb
ret
push
lods
mov
test
and
sahf
scas
pop
and
sbb
pop
sbb
mov
dec
and
dec
xor
addb
cmpl
sub
mov
stc
jo
daa
or
xchg
jbe
outsb
dec
inc
js
test
pop
and
pop
sbb
xchg
sbb
sbb
or
cmp
jnp
sbb
or
jne
in
loop
smsw
pop
cs
loope
ja
fsubs
addr16
shl
daa
loope
in
ficoml
mov
cwtl
push
outsl
in
xor
movsl
loop
dec
gs
enter
aas
js
sub
fnstsw
sub
mov
mov
mov
and
ljmp
cmpsb
rcrb
fisubl
idiv
fimull
repz
jae
fcmovnu
jecxz
data16
shrb
push
add
popf
mov
movsb
pop
adc
jnp
aas
xchg
movsb
sub
hlt
and
rclb
test
fst
stc
xchg
jo
cmp
xchg
add
int3
add
cmp
sarb
sub
cmpsl
dec
and
xchg
push
inc
ds
xchg
push
jp
outsb
inc
adc
test
cmpsl
xchg
mov
daa
mov
aaa
pop
loop
sarb
add
pop
mov
pop
pop
push
out
hlt
and
les
mov
xchg
jns
mov
lahf
sub
ficomps
cmp
in
aaa
xchg
and
aam
lahf
stc
mov
pop
sbb
mov
or
pop
add
lea
mov
mov
mov
popf
bound
push
loop
cmp
test
mov
pop
hlt
mov
cmp
aad
lcall
jne
adc
lods
push
cmp
xchg
pop
or
jns
outsb
pushf
ja
xchg
lcall
push
mov
fistl
pop
push
repz
dec
sbb
xchg
pop
arpl
loop
xorl
mov
push
sahf
addr16
xchg
imul
mov
sbb
push
sub
sub
sbbl
imul
pop
jb
lods
scas
push
push
pop
stc
es
jg
fisttpl
outsb
add
loopne
push
aam
cmpsl
shl
mov
mov
sbb
popa
negl
cmpsb
aad
mul
pop
add
pextrw
sbb
rorb
mov
mov
in
add
push
xchg
lods
cmp
popa
jle
sub
das
and
shlb
and
addr16
xchg
lcall
push
sbb
mov
mov
lret
pop
orl
outsl
leave
and
fdiv
fisubrs
jg
imul
icebp
xchg
vpcmpeqw
ljmp
jbe
push
pxor
arpl
mov
daa
jg
cmp
mov
inc
out
ds
pop
jns
lret
dec
jp
add
or
or
fisubs
ficoms
and
cmp
andl
cmp
dec
xchg
pop
rcr
mov
xchg
js
insb
mov
inc
es
mov
push
loope
rcrl
adc
xor
pop
ljmp
and
test
mov
push
sub
xor
pop
fistpl
and
test
mov
in
daa
sbb
test
popf
sub
mov
sbb
aas
clc
dec
out
jnp
lahf
or
adc
in
and
scas
inc
insl
jecxz
cmp
and
sbb
xchg
stc
scas
add
xor
test
cmp
fidivrl
repnz
push
int3
or
lret
or
jb
cmp
lds
jbe
inc
pusha
mov
jp
push
adc
pop
jbe
cmpsl
jnp
mov
outsb
stos
xchg
push
fcomp
cwtl
mov
lcall
push
and
mov
cwtl
dec
es
push
sbb
pushf
push
xor
pushf
xchg
jbe
pop
push
fwait
or
add
lcall
mov
cmp
mov
fcmovbe
pop
daa
sarl
and
aam
mov
stc
shlb
cli
or
push
aaa
call
push
loop
ja
mov
dec
add
shll
sub
test
subb
jmp
faddp
or
xor
adc
nop
jecxz
lock
cmp
xchg
loop
jo
dec
aad
sub
mov
xchg
pop
xor
xchg
fs
cmpsl
mov
lret
enter
fs
pop
sbb
dec
or
pop
addb
dec
jecxz
shl
cli
push
xchg
and
or
adc
cmp
mov
add
data16
adc
in
int3
sbb
out
mov
and
insb
das
fldcw
arpl
xchg
iret
sub
loopne
lea
sti
xchg
hlt
jne
sbb
mov
in
lods
andb
mov
dec
fwait
int3
lea
sub
out
xor
and
imul
jg
cmp
mov
mov
test
cli
jb
call
sub
loope
ret
sub
cmpsl
jne
push
mov
jb
mov
cmpb
and
pushf
scas
pop
lds
fidivs
pop
sub
bnd
insl
cli
les
dec
out
xchg
cltd
imul
cmp
leave
adc
lret
mov
data16
mov
adc
imul
xor
jae
xlat
jb
cmp
fcoms
sub
inc
mov
sbb
call
dec
cwtl
loop
enter
aas
xor
mov
push
adc
push
mov
cmpsb
fstl
jbe
loop
push
add
fldt
dec
inc
in
xchg
cs
dec
or
cmp
inc
xchg
xchg
dec
inc
mov
add
sbb
mov
mov
push
mov
nop
loopne
ficoms
inc
push
insl
inc
mov
cltd
add
mov
push
icebp
cmpsb
sub
add
or
mov
push
inc
pop
mov
dec
push
add
fidivs
inc
ja
inc
jnp
jno
fldl
pop
mov
xchg
aaa
push
shr
fcmovnb
out
popf
enter
and
jp
add
xchg
lods
jecxz
jno
add
push
lea
cmp
aam
xchg
stos
cmp
clc
aad
jge
lcall
imul
clc
xor
andl
sbb
jne
aaa
movsb
mov
stos
dec
fistl
in
mov
rclb
add
adc
in
push
push
and
outsb
pop
out
dec
scas
data16
sbb
mov
sbb
push
cmp
xchg
mov
ret
mov
push
mov
lret
xchg
add
aam
and
sarl
xchg
popa
hlt
push
sub
enter
mov
es
xlat
fwait
mov
mov
or
pusha
js
push
enter
or
shll
mov
movsl
out
or
push
jo
pop
nop
lds
cmp
jne
inc
or
outsb
setge
pop
fisttpl
push
arpl
bound
sub
mov
jae
xor
rolb
xchg
cld
test
jg
shlb
jecxz,pt
fwait
lret
aaa
add
pushf
out
pop
mov
push
lahf
jnp
mov
repz
call
dec
movsb
or
subb
pop
shll
mov
mov
les
xor
iret
cltd
test
mov
xor
js
in
xchg
pusha
insl
sub
mov
mov
xchg
xchg
repnz
pop
push
fisubs
cld
rorl
cmp
pop
out
fbld
ret
push
movsl
pop
xor
cltd
into
push
jns
ficoms
sbb
dec
fs
cmp
xchg
test
push
inc
mov
mov
nop
insl
cmp
fildl
jge
push
pop
jmp
jmp
mov
mov
pop
divb
adc
int3
aaa
dec
popa
lods
and
xor
lds
inc
xor
enter
scas
pop
xchg
lds
xchg
or
int
jmp
shl
sbb
mov
mov
test
dec
xor
xchg
and
add
icebp
mov
jge
jbe
std
pop
imul
stos
ja
add
lock
arpl
and
stos
insl
or
mov
cwtl
rorl
std
jecxz
notb
jnp
roll
clc
or
jne
and
mov
repz
cmp
pop
adc
mov
and
int
imul
lret
int
adc
inc
loope
sahf
mov
andb
movsw
xor
cmc
sahf
add
neg
imul
ret
cwtl
jle
xchg
push
mov
daa
dec
inc
les
cmp
inc
dec
fildll
adcb
out
mov
jnp
cmp
sbb
xchg
xchg
ss
ret
adc
pop
xchg
pop
cmpsb
loope
inc
cmc
xchg
rcrl
mov
xor
outsb
lds
and
sbb
dec
mov
std
jb
mov
pop
rcll
in
adc
sahf
negl
dec
push
mov
mov
stos
mov
arpl
push
movb
sub
push
mov
stc
mov
sub
cmpsb
inc
shl
arpl
push
add
inc
sub
lds
push
jb
fimuls
fwait
out
addr16
inc
sbb
stos
xor
adc
xchg
ljmp
mov
inc
icebp
neg
les
xchg
ljmp
js,pn
lahf
mov
or
jge
lock
lods
cwtl
mov
pop
fdivs
daa
adc
insb
add
inc
loopne
mov
test
sbb
data16
ja
sbb
pop
inc
sbb
or
xor
cli
mov
adc
rorl
adc
cmp
pop
sbb
into
cmp
push
add
pop
nop
mov
inc
pop
jnp
dec
testl
push
add
cmp
ficomps
xchg
popa
mov
rcl
in
xor
in
mov
sbb
pop
mov
mov
jo
sti
in
cmp
mov
xchg
data16
inc
sbb
or
push
adc
sub
inc
jecxz
xchg
pop
stos
cltd
push
jbe
into
xor
add
xchg
add
mov
mov
notb
and
dec
fisubrs
push
inc
xor
jbe
dec
fwait
lret
mov
dec
daa
xor
cs
jns
popa
cmp
xchg
xchg
sbb
dec
pushf
sub
std
lods
xlat
cmpsb
fwait
das
cmp
adc
mov
sbb
aas
popa
mov
pop
jbe
in
clc
cmp
stos
sbb
push
mov
ret
dec
enter
push
popf
pop
mov
inc
shrb
inc
push
fsubs
fsubrl
pop
stc
lods
fcoms
int
mov
lret
jne
lret
xlat
sbb
ljmp
and
imul
ja
cli
inc
enter
ja
cmpsl
pop
test
stc
test
mov
push
loop
test
xchg
mov
ror
pop
iret
int
test
scas
addl
xor
mov
cmp
sbb
das
aas
out
and
inc
repz
pop
lret
mull
pop
movsl
mov
inc
jle
or
jns
jno
adc
iret
icebp
and
inc
fwait
repz
lock
lcall
andl
lds
in
inc
addr16
cmpsb
mov
cmp
sbb
test
inc
push
mov
movsb
pop
pop
lods
dec
fdiv
mov
fwait
pop
int
loopne
mov
mov
lret
add
insl
sbb
mov
call
pushf
gs
in
mov
pop
addb
adc
and
popa
dec
lret
fisubrs
js
aad
loopne
es
sub
pop
mov
movsb
fildll
mov
cmpsl
je
lds
push
cmp
sqrtps
lods
jae
ret
adc
xchg
mov
dec
inc
xchg
pop
mov
jecxz
hlt
mov
adc
mov
subb
sbb
xchg
fsubs
add
jmp
ss
stc
mov
pop
loopne
push
add
stc
addr16
cmp
mov
jns
push
and
push
testl
jmp
adc
lcall
push
lea
sub
fcompl
cmc
sahf
or
sti
stos
lahf
movsl
lea
sbb
pop
xorb
repnz
sub
pop
sbb
xchg
cmp
push
daa
dec
sbb
leave
dec
push
push
pop
mov
dec
pop
add
dec
mov
mov
out
out
ret
and
inc
cmpsl
lret
fisttps
jnp
out
insb
data16
sub
out
adc
xor
push
dec
and
idivb
dec
decl
dec
pusha
pop
popl
std
mov
scas
cmp
pop
cmc
jbe
and
add
lret
cmc
sbb
aaa
sbbb
aaa
je
and
in
outsl
wrmsr
and
lret
ljmp
mov
adc
dec
sbb
and
mov
sub
and
xchg
daa
pop
cmp
or
test
rcrb
push
js
add
push
xor
iret
mov
nop
mov
mov
pop
daa
pop
sbb
testb
mov
pop
ljmp
xchg
cltd
je
mov
in
xor
fsts
movsb
out
lret
out
cmp
adc
and
enter
mov
xor
and
xlat
aaa
clc
aam
or
int3
dec
dec
insl
xchg
push
loopne
jns
jp
mov
test
cmpsl
stos
cmp
sbb
adcb
and
xchg
push
or
cli
xlat
data16
mov
out
cmp
add
mov
addr16
inc
orb
outsb
pop
cmpsl
out
fimuls
je
testl
pop
loop
pop
or
jmp
cs
mov
test
inc
dec
in
arpl
rcl
mov
xchg
pop
fbstp
repz
dec
insb
cmp
nop
test
or
push
fiadds
cwtl
mov
scas
xor
loop
cwtl
pop
sub
cmp
stc
loop
cmc
sub
fistpll
sbb
and
xchg
or
lds
ss
inc
adcl
jne
dec
or
add
mov
cmpb
stos
cmp
and
pop
pop
xchg
movsl
aaa
dec
inc
xor
jae
pop
xchg
sub
mov
rcll
xchg
hlt
dec
jge
out
cltd
adc
and
daa
mov
pop
btr
fisttpl
sub
sti
or
dec
popf
mov
xor
sahf
les
cmp
and
je
add
inc
ret
rorl
jp
scas
sahf
addr16
mov
cld
test
pop
repz
push
hlt
mov
pop
out
xchg
test
inc
scas
out
test
aas
inc
lods
dec
mov
or
in
mov
adc
and
push
pushf
mov
das
dec
sbb
push
jl
xchg
div
inc
fisubl
or
jno
fimuls
pop
and
push
add
adc
ret
inc
cmp
add
in
push
es
loop
hlt
push
add
dec
lea
jle
in
stos
cmp
ljmp
jge
bound
fcom
jbe
mov
inc
mov
push
loopne
sbb
add
adc
cli
pop
in
out
add
xor
xchg
add
out
mov
adc
sbb
mov
int
fistpll
fwait
and
pop
xchg
or
xchg
mov
shl
and
cltd
popa
mov
test
xchg
out
jmp
push
lods
pop
inc
cmc
rolb
pop
cld
jb
lea
mov
pop
stos
adc
dec
test
stc
pushf
add
repnz
xor
mov
push
xor
cmpsb
push
adc
adc
lahf
mov
neg
push
sub
xchg
data16
fists
fwait
pop
in
movsb
and
ja
fwait
xlat
sbb
daa
adc
adc
test
jne
ret
or
lahf
roll
cmp
sahf
sub
pop
push
enter
push
cmpsl
sub
int
push
push
adc
shl
xor
cmp
inc
lods
sbb
shll
rcrb
std
mov
leave
adc
movsl
ja
repz
dec
stos
std
leave
rclb
lcall
push
sub
mov
dec
push
dec
sbb
pushf
push
cmpsl
int3
pop
cmp
add
pop
mov
push
fiadds
sub
cmpsl
gs
mov
mov
mov
mov
das
jp
mov
andl
mov
stc
push
int3
out
das
clc
cmp
add
out
add
fbstp
or
sub
fwait
mov
fs
inc
nop
fld
movsl
jb
inc
lret
xor
inc
xor
pop
rcll
and
mov
dec
cvtpi2ps
add
jbe
stos
xchg
push
lcall
nop
jae
xchg
push
xchg
mov
mov
or
mov
adc
push
push
popa
outsb
inc
loop
test
mov
adc
push
cwtl
xchg
cmpb
sbb
pop
push
cwtl
in
pop
push
rclb
mov
nop
xor
dec
popa
xchg
add
mov
shll
push
inc
or
mov
das
divl
cmp
fisubrl
or
ss
imul
fbstp
xor
ljmp
popa
xor
clc
jne
xchg
xchg
mov
mov
cmpsb
loopne
leave
jo
js
jns
xchg
nop
mov
int
xor
outsl
add
and
mov
insb
push
or
dec
callw
loop
rcrl
iret
imul
std
sub
lret
in
adc
xchg
nop
pop
pop
popf
adc
aad
cwtl
sahf
aaa
dec
push
lret
or
das
adc
sub
repz
xchg
out
pop
das
mov
popa
addr16
push
or
inc
jno
jp
test
or
cmc
mov
pop
jl
jecxz
sahf
push
fwait
pop
out
push
sbb
adc
fmull
xor
in
shll
sub
jo
and
add
pop
push
add
shr
cmc
or
mov
cmp
fwait
in
mov
out
out
push
jbe
push
movb
push
out
or
push
sbb
les
hlt
inc
loopne
and
xor
mov
add
fildl
sbb
and
mov
push
lret
pop
jmp
pop
cmp
outsl
inc
pop
add
test
les
sub
xor
cmp
and
adc
mov
xor
inc
inc
test
repnz
mov
xchg
ret
filds
push
or
inc
xor
lahf
int
loope
inc
and
inc
mov
or
cli
dec
sbb
cmp
pop
mov
sub
repnz
std
out
pop
mov
add
les
icebp
popa
add
jns
mov
outsb
sbb
in
pop
jns
pop
dec
adc
mov
out
loop
xor
push
push
mov
jp,pn
push
inc
sub
lods
mov
stc
adc
mov
push
mov
or
inc
pop
jmp
popf
es
add
push
adc
test
pop
inc
pop
jecxz
inc
fmul
das
xor
iret
xor
mov
int3
inc
mov
sub
int3
push
xchg
pop
mov
dec
cmp
mov
ja
push
call
bound
jg
bound
mov
sarb
cmpsb
adc
pop
lret
dec
loop
add
repz
adc
mov
leave
inc
inc
sub
pop
das
push
mov
mov
lods
mov
sub
xlat
mov
repz
cmpsb
push
or
mov
xlat
push
adc
xchg
push
xchg
mov
xchg
inc
popf
sahf
sub
sub
mov
sbb
popa
test
adc
ror
test
jnp
leave
stos
or
call
mov
jg
mov
lods
mov
in
fwait
add
xor
cmp
mov
dec
test
lods
stos
or
add
cmp
sar
xchg
dec
mov
andl
push
or
notb
les
fistpl
cmc
inc
mov
fimull
popa
jecxz
daa
xor
stos
xchg
mov
cltd
mov
cmp
pop
dec
enter
push
test
lcall
xor
movsb
fwait
cmp
cwtl
sahf
jnp
pop
in
and
mov
test
test
out
jnp
sbb
fsubp
fcmovnb
mov
mov
bound
mov
outsl
ror
cltd
sbb
mov
xor
shrl
bound
push
sub
or
xlat
mov
fdiv
cwtl
fdivrl
test
loope
jle
cmp
dec
scas
sub
push
in
cltd
adcb
mov
outsb
xchg
and
andb
mov
push
out
dec
and
out
out
xor
into
divb
and
rcrb
iret
pop
in
add
jbe
testl
pop
push
xor
nop
jno
dec
data16
pop
or
sub
xor
les
clc
bound
sti
mov
scas
sbb
popa
movsl
repz
mov
mov
cmp
das
dec
mov
sarl
jae
es
or
jns
inc
jne
les
repz
adc
fstpl
push
add
pop
pop
mov
add
xlat
std
jno
mov
jb
mov
jl
lea
addb
out
push
ja
icebp
mov
movsb
sub
popf
push
push
fwait
cmpsl
sub
pop
cs
aad
fmuls
scas
inc
clc
in
les
pop
sbb
enter
repnz
popa
cld
mov
pop
stos
mov
repz
jbe
xchg
add
imul
pop
dec
mov
and
movsb
push
out
mov
xor
sti
test
mov
or
fidivrs
daa
xchg
mov
sbb
insb
jb
pop
mov
or
add
inc
add
cmp
push
mov
mov
jno
in
xor
jge
adc
cmp
mov
lret
push
xchg
dec
xor
pop
jnp
cmp
inc
fmull
cli
adc
sub
ret
xchg
adc
push
sti
leave
faddp
dec
add
mov
inc
ss
stos
mov
and
xlat
cmp
movsl
xchg
inc
mov
cmp
in
daa
int3
add
lahf
xchg
lock
into
adcb
xchg
xchg
lret
lods
cli
jno
mov
mov
loope
jns
call
dec
xchg
jge
pusha
mov
insl
xchg
cmp
pop
xchg
xchg
adc
cltd
imul
or
in
xor
push
pop
std
pop
adc
cs
call
push
ja
das
loope
mov
jp
scas
aas
and
clc
fcomp
mov
jle
sub
fld1
mov
xchg
into
push
fcoml
int
rcrb
dec
test
aad
sbb
xlat
jp
mov
push
test
and
add
aad
mov
mov
pop
lcall
hlt
jp
mov
inc
rorb
jns
mov
pushf
add
dec
jmp
outsb
sub
jo
rcrl
iret
and
in
data16
ror
sbb
lea
test
mov
out
inc
push
lahf
test
pusha
in
bound
lods
ljmp
les
dec
cmpsb
xor
mov
jl
add
jbe
les
and
mov
daa
mov
sbb
jle
lret
addr16
mov
test
je
xchg
cltd
add
and
out
and
pop
out
addr16
push
mov
sub
xchg
xchg
jecxz
fimuls
popf
call
push
mov
adc
pusha
es
mov
in
mov
in
and
xchg
aad
sbb
mov
rorl
std
adc
cwtl
pop
xchg
enter
dec
cmpsl
ds
insb
mov
mov
nop
or
jecxz
lods
andb
int
scas
add
arpl
push
jmp
pushf
jl
sbbb
xchg
cmp
loop
pop
mov
push
test
or
adc
or
pop
mov
loope
cmp
xor
subl
dec
pop
cli
je
aam
sbbb
cs
adc
or
dec
insb
fstp
shr
push
out
jle
cltd
sub
imul
es
push
jb
jecxz
pop
adc
jmp
int
xor
repz
pushf
push
enter
add
test
repnz
pushf
in
mov
test
xchg
add
or
outsl
sbb
adc
popa
out
jge
lock
push
insb
mov
sub
dec
inc
clc
push
shr
fidivs
daa
div
sub
mov
scas
cli
or
inc
jp
dec
cmc
shlb
dec
je
sub
mov
or
pop
icebp
xchg
insb
fidivl
daa
ret
out
cmc
jnp
scas
pop
sub
les
clc
cltd
aaa
and
mov
inc
popf
xchg
jge
cltd
and
pusha
xchg
clc
cmp
mov
out
fwait
bound
out
mov
pushf
lods
jmp
inc
lret
movsl
jno
lahf
xchg
mov
jmp
lea
das
jns
dec
and
arpl
and
aaa
daa
add
sub
pop
scas
jbe
decb
out
mov
pop
dec
fcmovnu
addr16
jp
pop
or
arpl
inc
jnp
xchg
push
push
shll
xchg
jge
mov
fbstp
or
out
sbb
ret
mov
stos
outsl
aad
insb
dec
mov
lret
testl
sbb
idiv
sub
cmp
mov
mov
lret
icebp
jb
mov
cmc
enter
shrb
inc
lret
inc
xchg
movsb
pop
shlb
test
mov
int3
out
xchg
push
pop
push
cmc
icebp
aaa
dec
cli
add
jg
jno
sbb
imul
or
push
jl
sub
mov
adcl
orb
xorl
pop
in
mov
xchg
sub
mov
sbb
repnz
inc
pop
pop
nop
cmp
insb
mov
stc
sbb
mov
lret
mov
iret
push
imul
int3
jg
mov
mov
fldenv
nop
imul
pop
pop
jb
in
int3
and
or
cli
or
jp
sub
or
hlt
jae
aaa
outsl
fildl
jno
leave
xlat
fnstenv
lock
mov
sub
fdivrs
mov
mov
inc
mov
sbb
pop
stos
scas
jp
adc
pop
notl
push
aad
ret
pop
in
mov
sbb
pop
imul
cli
mov
icebp
cmp
jg
daa
or
in
sub
xchg
iret
mov
data16
jae
mov
test
inc
ret
sub
dec
cmp
cli
out
dec
mov
icebp
push
js
xlat
and
lea
mov
dec
outsl
stos
in
xor
mov
sahf
adc
xchg
aas
jbe
ss
fisttpl
out
in
xchg
and
inc
pop
mov
pop
push
jnp
gs
clc
in
popf
pushf
sti
mov
enter
or
pop
ret
testl
sti
inc
cli
xor
mov
ljmp
test
inc
xchg
xor
cmpsl
inc
stc
ds
or
mov
or
mov
lea
mov
dec
lds
push
push
pop
shlb
dec
cmp
in
repz
mov
push
pop
inc
test
dec
mov
inc
xor
enter
ficomps
push
iret
or
sbb
jmp
cmp
ss
outsb
call
fcoms
loopne
fisttpl
bound
movsb
cmp
fcmovb
add
jnp
mov
data16
imul
sub
les
aas
xor
lea
dec
sub
sub
cmp
and
mov
mov
fnstsw
lcall
ficompl
dec
out
pop
inc
pop
shll
inc
dec
lods
in
cmp
push
loop
pop
idiv
lds
mov
test
je
insb
and
int
mov
mov
xor
repnz
push
push
ljmp
call
jae
xchg
push
iret
scas
mov
add
cwtl
les
dec
sbb
in
test
lret
or
cwtl
shlb
cmp
dec
push
mov
pop
dec
call
mov
and
pop
repnz
movsl
mov
mov
pop
mov
fidivrs
xchg
xor
les
sti
pop
or
movsb
test
gs
add
jno
ret
sub
cmp
jb
xchg
sbb
pop
cmp
js
hlt
xchg
push
stc
sub
jecxz
dec
in
add
jecxz
aas
jle
jae
fmull
test
xchg
push
dec
xor
push
sarl
add
or
adc
fdiv
sbb
mov
ljmp
stc
and
nop
je
and
ret
dec
shlb
rorl
or
push
add
js
icebp
mov
pop
sbb
fsts
nop
inc
divl
push
add
cmp
std
mov
cmp
insl
xchg
sti
popa
movsb
add
rclb
das
mov
outsb
repnz
xor
mov
or
pushf
ljmp
mov
mov
sbb
dec
scas
mov
movsb
pop
mov
rcll
leave
in
pop
mov
xchg
pop
outsb
out
ficoms
and
add
ss
addr16
xor
xchg
mov
adcb
stos
pop
inc
cmc
fwait
stos
xchg
jp
int
aad
jae
iret
cmc
pop
sub
popl
mov
pop
mov
or
fmul
pop
jle
xor
mov
mov
xor
mov
jns
dec
lock
loopne
sbb
xor
repnz
mov
push
xor
or
mov
mov
jns
in
fldl
in
es
jb
mov
jecxz
add
pop
and
fs
sti
into
in
push
movsl
inc
dec
jl
dec
into
xchg
add
sarb
dec
testb
popf
sbb
add
xor
dec
push
into
scas
lds
adc
orl
pop
lahf
jb
inc
mov
push
push
testl
mov
mov
lds
int
aad
pop
inc
aaa
subb
std
xlat
lcall
jg,pn
push
mov
cmc
jb
test
or
mov
inc
adc
xor
fdivr
xchg
mov
adc
add
pop
pusha
pushf
cmpsb
dec
aad
mov
lods
inc
lret
mov
pop
mov
das
jecxz
mov
mov
pushf
cmp
fildll
jmp
lods
xor
cltd
aad
aas
aas
roll
mov
jb
fiaddl
xchg
adc
fadd
pop
mov
enter
push
push
dec
dec
add
dec
xchg
mov
inc
insl
test
idivb
in
xacquire
test
iret
mov
push
mov
jp
insl
pop
cmp
lahf
cld
stos
daa
and
fs
fsts
rcrb
inc
movsl
cmp
ret
test
gs
outsl
adc
ret
and
in
loop
fwait
rolb
jbe
adcl
mov
xchg
in
inc
mov
popf
mov
inc
push
cmp
xchg
jns
aas
aas
aad
ja
pop
jo
sub
movsb
enter
adc
scas
add
lcall
lahf
push
jnp
loope
adcl
cmp
ljmp
adcl
sahf
sbb
pop
push
aad
neg
mov
aaa
aam
xchg
cmp
bswap
js
sbb
loope
dec
sub
sbb
popl
lcall
shll
stos
mov
inc
fstp
and
ret
lds
mov
push
and
dec
and
mov
xor
lret
xchg
push
mov
out
cld
in
testb
insl
stos
sbb
out
test
xlat
push
mov
dec
clc
inc
movsb
loope
push
call
arpl
sub
cmc
jae
int
xor
pop
es
jo
mov
imul
dec
lock
cltd
add
stos
fsubs
scas
call
cmpl
gs
icebp
mov
iret
rcll
xor
cmp
push
cmp
fs
mov
rcr
dec
cmp
rcll
add
ja
push
adc
inc
andl
cli
int3
mov
mov
push
mov
sbb
inc
adc
test
inc
fsub
cmpsl
out
enter
les
cltd
dec
and
insb
cmp
dec
cltd
jle
adc
push
mov
sbb
xchg
je
inc
scas
xchg
push
adc
jl
or
cmp
adc
out
stos
sub
inc
mulb
fwait
in
les
add
pop
jns
xor
nop
jmp
in
push
hlt
and
pop
fiaddl
jmp
xchg
or
mov
addr16
popf
add
xlat
mov
mov
fwait
sub
ret
out
movsb
jnp
das
and
xor
and
out
sub
xchg
jecxz
sub
mov
gs
cmp
sti
jmp
inc
pop
pop
or
mov
sti
fcoml
leave
test
xchg
sti
or
popa
mov
sbb
dec
test
fucom
test
sub
push
lods
mov
arpl
shrl
mov
test
enter
jmp
rcrb
pop
mov
mov
jle
lahf
inc
sbb
leave
ret
sahf
push
sbb
adcb
ret
popa
testl
addr16
not
or
mov
pop
mov
test
inc
shll
test
sti
xchg
xchg
dec
xor
dec
push
imull
and
ret
sub
push
mov
es
das
mov
into
bound
movsl
push
btsl
add
inc
daa
aaa
mov
loope
xchg
mov
je
sbb
outsl
out
mov
push
subl
je
xor
mov
mov
jp
inc
test
sti
rcl
lret
jno
mov
jecxz
cwtl
cli
mov
lcall
xor
mov
popa
cmp
outsl
in
pusha
pop
xor
dec
packsswb
aad
xchg
rorl
xor
mov
and
push
pusha
xlat
xchg
cmp
add
orl
sahf
subl
test
push
les
mov
jle
or
jp
cmp
xlat
dec
mov
xor
dec
push
shr
mov
rcll
notl
subl
push
mov
xchg
test
and
xchg
and
bound
dec
xchg
and
cmpsl
int
adc
fwait
nop
inc
fisttpll
sbb
rorb
fiadds
dec
push
imul
ja
fnstsw
imul
adc
pop
inc
cmc
push
push
add
loope
sub
pop
and
popf
add
jns
outsl
pushl
push
xlat
and
add
rclb
xlat
hlt
dec
outsb
mov
xchg
sub
movsl
cmp
sbb
rolb
inc
ret
cwtl
pop
dec
mov
scas
xlat
inc
add
mov
loop
and
mov
sti
fisubrs
test
inc
int3
dec
stc
sar
sets
aad
push
cltd
dec
into
mov
in
insb
push
mov
out
push
fldenv
outsb
jle
test
and
push
xor
jmp
xchg
pop
enter
mov
jae
mov
or
adc
ret
ds
pop
jg
push
push
das
pop
cli
fiadds
stos
lahf
adc
loopne
pushf
jae
xor
sub
pop
mov
jg
sahf
scas
jp
in
push
dec
pusha
hlt
mov
xor
push
outsl
dec
xchg
mov
outsl
lret
mov
cmp
insb
adc
les
mov
jle
cmp
int
fldt
xchg
xchg
scas
lret
out
sbb
in
es
ret
dec
mov
add
popa
and
mov
addr16
dec
outsb
or
psadbw
inc
pop
push
and
mov
jecxz
push
cmp
popf
push
movsb
inc
xchg
icebp
mov
or
inc
mov
dec
sub
or
inc
sbb
int3
ljmp
cmp
jbe
repnz
repz
movsb
jmp
pop
mov
rcr
mov
pop
mov
push
add
dec
sahf
into
push
push
aaa
cmp
jno
loop
pusha
mov
nop
aas
mov
scas
outsb
mov
inc
mov
int3
adc
popf
dec
push
fsubrl
mov
shrl
in
sbb
notl
push
mov
in
into
arpl
jo
lcall
mov
movsb
mov
pop
push
mov
shlb
push
pop
fmull
fisttpll
cmp
lods
test
xchg
sub
mov
or
mov
adc
clc
stos
ja
nop
in
decb
sbb
dec
testb
sbb
sbb
jecxz
lcall
jg
pop
xor
popf
mov
xor
lods
cmc
push
pop
shlb
mov
int
mov
mov
sbb
xor
sbb
add
loop
aam
sarb
fucom
inc
ja
ljmp
inc
int
sub
popf
nop
addb
sti
inc
sub
or
mov
jo
mov
jo
stos
inc
adc
and
enter
push
aad
notb
pop
jo
push
pop
lods
inc
ds
cmpsb
mov
inc
mov
pusha
ss
mov
dec
or
data16
fs
mov
cmp
aad
inc
adc
inc
or
orl
movb
push
fwait
sahf
lret
jnp
cmp
ss
xchg
mov
inc
pushl
adcb
mov
ljmp
mov
pop
es
push
stos
cmp
push
aaa
insb
inc
push
xchg
ss
rorl
jge
push
sbb
rolb
cmpsl
push
pop
sbb
dec
pop
xlat
insl
mov
inc
push
add
je
inc
cli
jnp
ret
hlt
mov
test
xchg
and
mov
cltd
pop
jmp
add
icebp
fmuls
push
cli
std
adc
sub
cli
aaa
adc
fisttpl
inc
mov
xchg
dec
fistps
mov
sbb
dec
popa
std
jbe
ss
sub
xchg
in
scas
data16
fldt
lods
scas
inc
lret
lcall
adc
push
sub
adcb
aam
imul
xchg
mov
cli
push
xchg
lret
test
in
in
addr16
rcrl
ret
pop
jnp
jnp
xor
adc
ds
popa
mov
lock
aam
cmp
cmp
jecxz
xchg
fs
cwtl
dec
or
pushf
movsl
dec
out
dec
jg
out
out
dec
js
push
mov
push
xchg
xor
mov
mov
xor
nop
pushf
and
and
nop
insb
jns
dec
insl
jns
xchg
or
xchg
imul
repnz
lods
mov
mov
popa
xor
mov
xor
dec
push
fstpl
jae
clc
push
lret
hlt
dec
cmp
clc
sbb
mov
mov
mov
cwtl
xor
push
xchg
repz
scas
test
adcb
fldcw
ret
dec
mov
movsl
enter
lods
push
ja
jno
dec
insb
repz
dec
shr
jl
push
addb
ja
push
pop
sbb
leave
inc
mov
rorl
dec
mov
arpl
fcmovbe
adc
dec
push
xchg
mov
jp
lahf
push
fwait
cmpsb
or
popa
xchg
adc
sub
sub
lds
outsl
inc
jp
pop
adc
test
xchg
push
push
js
or
sbb
shll
jo
sub
inc
lea
mov
hlt
jmp
mov
aam
mov
mov
pop
lock
push
adc
cmp
xor
rcl
fdiv
repz
faddl
rcr
jnp
or
push
dec
mov
adc
in
or
xchg
and
or
stos
add
mov
pop
call
ror
int
lea
pusha
stc
inc
mov
in
mov
and
leave
jne
fisubrs
rolb
popf
mov
xchg
push
push
cmp
cli
push
outsl
xor
pop
add
lods
or
cmc
out
bound
aam
inc
stc
in
aam
xor
jne
sub
mov
test
repnz
adc
mov
lahf
sub
test
leave
movzwl
jecxz
jno
or
adc
mov
xor
mov
xchg
sub
xchg
data16
xor
ljmp
mov
xchg
jb
sbb
push
rcrb
mov
addb
pop
and
cli
jmp
xchg
mov
testl
add
jle
and
xchg
in
or
and
sbb
mov
lea
int
call
push
inc
sbb
xchg
subl
lock
add
in
cs
push
jno
pop
aad
bound
or
mov
shrb
sbb
fimuls
jg
dec
push
pop
in
pop
sbb
mov
add
sbb
sti
das
inc
push
mov
mov
loop
call
les
mov
nop
pop
hlt
cmp
cmp
jns
rcl
sbb
jmp
mov
call
leave
pop
sbb
xchg
ds
cwtl
cmp
fbstp
clc
das
icebp
jmp
pop
int3
ret
dec
xorl
xchg
push
fwait
sub
push
das
dec
lret
mov
pop
mov
jmp
pop
sub
ficoms
mov
add
xchg
inc
data16
femms
arpl
cmp
outsb
into
mov
fisttps
pop
xor
sbb
xchg
mov
mov
scas
dec
repz
nop
jmp
mov
and
sbb
gs
pop
loopne
aam
push
dec
or
mov
dec
test
xor
xor
leave
leave
mov
mov
push
lods
dec
xor
cmp
cmpb
lods
iret
cmp
loopne
dec
icebp
pop
mov
dec
aam
inc
stos
lds
arpl
popf
lods
xlat
sub
leave
jb
dec
push
divb
stc
mov
ret
cltd
push
and
call
out
mov
sbb
sbb
pop
shlb
and
sarb
pop
vandnps
or
ret
leavew
add
and
lret
fists
outsl
nop
das
das
sub
int
repnz
pop
xor
push
daa
mov
lds
mov
push
lock
adc
imul
js
or
fmuls
mov
roll
add
inc
jp
repz
mov
repz
cld
leave
and
dec
sbb
out
pop
movsb
push
jne
jns
sub
adc
inc
sbb
mov
inc
insb
or
and
divl
dec
or
cmp
cli
loop
mov
dec
insl
cld
jns
mov
mull
jb
ret
call
mov
jnp
xchg
shll
js
dec
test
aaa
shlb
cltd
repz
iret
mov
jl
lret
xchg
push
test
pop
int
aad
rclb
ljmp
dec
mov
cmp
popf
in
lods
or
ljmp
mov
dec
out
stc
sbb
fnstsw
jo
in
cli
push
call
pop
sbb
insb
jo
mov
xor
lock
aaa
mov
arpl
push
pop
mov
sbb
mull
xchg
pusha
scas
loop
aad
xlat
xor
jo
push
add
into
hlt
enter
pusha
clc
jl
lret
insb
inc
out
fcoms
dec
xor
sbbb
pop
and
jns
imul
hlt
ret
loope
adc
cmp
les
mov
ds
ret
jge
mov
or
xor
lcall
mov
xchg
mov
sti
push
rorb
mov
push
addr16
iret
lods
xchg
sbb
stc
stc
inc
adc
lock
and
in
fadds
sbb
icebp
into
dec
loop
movsb
mov
push
insb
sbb
and
mov
adc
mov
in
and
nop
sub
jmp
add
xchg
pusha
jb
push
dec
pop
orb
pushf
addr16
notb
popf
mov
aam
sahf
cmc
add
sarl
push
sub
out
stos
xor
int3
xor
jle
mov
addr16
outsb
ss
mov
inc
leave
mov
mov
leave
div
mov
add
push
les
xchg
push
clc
les
aam
pop
std
lahf
sub
add
in
cmc
cmpsb
les
sbb
data16
mov
fptan
cwtl
inc
add
sub
mov
imul
jbe
aaa
pop
lea
es
sub
xor
jns
mov
sbb
lock
xor
movsl
pop
pop
mov
mov
addr16
xlat
push
adc
out
daa
dec
loope
xor
lret
scas
push
xlat
idivb
or
sbbl
out
gs
mov
ret
arpl
pusha
mov
popa
jno
mov
mov
cmpsb
mov
xor
push
push
hlt
popa
inc
mov
pop
push
testl
popf
add
fcompl
sbb
or
out
adc
jno
ss
cmp
adc
imul
pusha
adc
cmp
fisubrl
mov
fwait
sbb
dec
imul
pop
clc
jge
xchg
xor
and
in
adc
mov
jbe
out
dec
mov
inc
cli
jb
lcall
jne
cmpsb
jne
dec
stos
add
in
or
lock
jmp
inc
push
mov
and
cwtl
test
or
negl
pushf
popf
mov
inc
movsb
jge
jns
jns
cmpl
add
add
mov
xchg
mov
cs
adc
insl
pop
xchg
adc
enter
pop
iret
cmp
lds
mov
shlb
sahf
fld
popf
pop
sbb
add
scas
je
push
jg
test
ds
cmpsb
xchg
mov
test
fwait
xlat
sbb
push
push
rcrl
mov
in
mov
ror
xchg
popf
jge
mov
fnstenv
into
insb
je
cmp
push
sbb
mov
jecxz
add
adc
fildll
xchg
jle
jp
and
std
cld
or
pop
stos
nop
outsb
sbb
cmp
mov
imul
xchg
sbb
and
mov
loop
pop
mov
sti
leave
jl
adc
push
leave
repz
ljmp
outsb
push
das
or
inc
idivb
mov
enter
jl
std
mov
inc
and
cmp
mov
inc
mov
jge
xchg
stc
roll
dec
rol
mov
rcr
adcb
daa
xor
and
sbb
dec
xchg
orl
rolb
std
dec
jge
or
popa
cmp
xrelease
sahf
add
icebp
out
pop
data16
hlt
sub
dec
inc
ret
cld
and
or
dec
jns
stos
adc
sbbl
sub
lret
and
mov
xor
pusha
loopne
popa
xor
insl
xor
mov
pop
ja
fisttpll
mov
in
mov
jmp
jbe
cmp
cld
gs
mull
push
ss
cli
mov
and
int3
xor
imul
dec
std
cmp
mov
jmp
faddl
sbb
xor
inc
lods
ret
mov
gs
add
jmp
js
js
jbe
pop
cli
in
in
jecxz
outsl
xchg
inc
push
nop
repz
push
jns
xchg
cmp
hlt
insl
loopne
inc
les
jecxz
mov
inc
mov
sbb
cmp
aam
push
mov
sub
fs
aam
ret
mov
inc
rclb
repnz
jo
adcl
loope,pt
dec
insb
xchg
sahf
pushf
adc
cmp
incl
and
rorb
scas
fs
sbb
mov
scas
pop
cmpsl
dec
ja
test
mov
enter
rclb
ljmp
mov
pop
insl
pop
mov
aad
sub
jl
fdivrl
int3
js
jmp
pop
movsl
push
dec
in
jge
test
sbb
xchg
loope
sarb
jp
fisttpll
jbe
ret
adc
in
push
inc
jnp
or
icebp
test
dec
mov
cmp
inc
and
jle
adc
pop
jae
inc
mov
je
js
and
inc
mov
push
xchg
sbb
pop
mov
mov
and
sub
dec
mov
jle
repz
and
dec
cmpl
int
inc
pop
mov
cmc
dec
cwtl
nop
jl
lret
push
stc
out
add
stos
cmp
jmp
hlt
in
push
andb
nop
xchg
xor
cwtl
push
inc
push
push
jecxz
les
aas
addr16
lret
shl
fucomi
pop
das
push
aas
in
jle
cli
negl
add
sbb
cs
push
adc
mov
mov
addr16
shll
sub
imull
push
dec
fdivs
test
lods
jo
lds
bound
push
mov
adc
mov
stos
mov
cwtl
enter
ljmp
cwtl
int3
mov
lahf
mov
repnz
aad
data16
ret
inc
rcll
mov
loopne
sub
cmpsb
cmpsl
es
gs
bound
fcmovnu
push
jg
xor
out
dec
inc
jno
aam
inc
jo
inc
push
dec
pop
imul
shr
cld
push
jb
aam
inc
mov
dec
mov
nop
clc
pop
aam
dec
pop
mov
filds
pop
dec
jg
and
push
pusha
jne
inc
leave
cmp
sub
inc
lea
insb
clc
jns
or
jno
cmpsb
mov
mov
xchg
ss
testb
lret
lods
andb
adc
mov
aad
mov
ljmp
mov
and
aas
test
inc
add
cmpsl
aas
or
sub
inc
adc
mov
aad
insl
sbb
lock
enter
inc
je
sbb
je
push
sub
movsb
lret
mov
dec
adc
pop
ficomps
int3
and
movsl
add
jnp
mov
test
cmc
xor
push
and
sahf
add
and
popf
inc
call
lcall
or
stos
cmpsb
jp
push
shl
mov
jb
xor
cwtl
xchg
loope
mov
aaa
fsubs
sub
xor
imul
pop
cltd
data16
les
xlat
aas
or
fistpl
aam
xchg
cmp
push
jnp
push
sbb
test
pop
call
ret
jno
pop
inc
fs
lahf
loop
ja
gs
mov
out
inc
into
das
hlt
jo
mov
loopw
ficoms
adc
push
mov
nop
sbbl
out
push
mov
xor
sbbb
pop
aam
inc
dec
out
and
xchg
and
mov
or
push
ret
out
pop
inc
outsb
sbb
xchg
push
mov
ds
stc
inc
fldcw
adc
mov
adc
pushf
fldcw
in
mov
pop
in
pop
pop
lret
inc
jo
jno
aad
xor
lock
or
cmpsb
and
aaa
icebp
orps
scas
das
xchg
push
fdivs
cmp
push
mov
subl
sbb
xor
jl
hlt
lret
inc
sub
adc
dec
das
ljmp
mov
mull
add
cmc
test
pusha
xchg
imul
pushf
inc
xchg
je
pop
xchg
mov
incl
push
cs
icebp
inc
adc
lahf
inc
lret
cmp
bnd
cs
cmp
inc
add
cld
dec
adc
inc
lcall
or
xchg
xchg
or
add
mov
in
out
faddl
stos
dec
or
push
stc
scas
lret
jb
ss
cltd
and
and
mov
dec
pop
sbb
call
nop
adc
scas
stos
rorl
push
insl
addl
mov
in
or
mov
icebp
addr16
daa
ret
inc
add
push
xor
push
pop
xchg
dec
je
inc
roll
arpl
iret
mov
lods
divb
lods
xor
mov
fucomi
sub
xor
popa
lcall
lds
movsl
jo
jbe
ss
mov
and
stos
and
outsl
ja
dec
push
adc
mov
push
inc
mov
test
aam
sbb
imul
scas
pop
jne
mov
xor
sub
jg
xchg
adc
jno
daa
lret
jae
dec
fstl
push
leave
mov
lods
fcoms
imul
imul
mov
adc
mov
loope
enter
in
inc
jo
js
jae
mov
and
and
imul
nop
jge
mov
sub
and
cmp
pop
mov
movsb
mov
pusha
inc
cwtl
loop
rcll
inc
or
dec
xlat
sti
es
pop
sub
mov
push
dec
dec
in
pushf
addr16
aas
xchg
mov
mov
mov
fnstsw
jns
and
cmpsl
push
mov
xor
inc
mov
dec
ret
mov
lock
xor
test
filds
pop
mov
in
sbb
push
outsb
cmpsl
in
cmp
pop
scas
out
add
in
fdivrs
xor
lea
pop
xchg
inc
cli
mov
push
dec
jns
mov
int3
loope
jmp
adc
lock
push
xlat
in
pop
aad
jecxz
sbb
std
pop
sub
clc
rorb
sbb
sbb
clc
mov
int
shr
mov
push
push
call
xor
fs
pop
mov
mov
inc
popf
pop
repnz
sub
pop
or
sti
jb
loopne
dec
in
jnp
mov
int3
add
and
cmp
pop
or
clc
loopne
and
enter
push
aas
sub
mov
cmpb
out
dec
mov
in
lcall
pop
addb
sarl
rcl
cmc
jl
adc
shll
cmc
xchg
sbb
mov
xchg
xchg
inc
jecxz
cmp
outsl
in
jl
xchg
adc
lods
dec
pushf
andl
fwait
mov
jbe
mov
dec
push
jbe
push
nop
in
xchg
xorl
imul
dec
aas
add
cmp
sbb
jecxz
xor
arpl
inc
push
test
inc
xor
jge
add
ficoml
stos
adc
mov
mov
cmp
lea
mov
fsubl
decl
sbb
push
jae
jmp
adc
shlb
or
push
cmp
clc
cmp
in
add
stos
loop
dec
dec
ret
mov
aas
mov
xchg
or
jns
lret
jmp
xchg
push
xchg
and
popa
jecxz
push
jno
xor
sbb
dec
lahf
push
add
push
stos
in
stc
dec
add
ret
jae
shll
bound
push
ret
wbinvd
and
ret
stos
mov
jno
inc
push
and
iret
sbb
bnd
fwait
inc
daa
mov
adc
mov
ds
in
cmp
lock
cwtl
ffreep
push
and
pop
pusha
xchg
cmp
das
and
mov
lea
cwtl
mov
test
and
add
pop
jecxz
shlb
cmp
cltd
xchg
rcrb
loopne
pop
loopne
cmp
sub
cmpsb
out
xor
outsb
cmp
mov
daa
sbb
insb
lock
xrelease
xchg
push
fadds
jg
add
sbb
push
ljmp
int
aad
mov
scas
pop
repz
push
adc
out
outsb
fmull
iret
jb
ret
loop
mov
addr16
and
push
in
sub
imul
mov
xor
jno
pop
clc
loopne
movsb
lcall
sbb
ss
call
adc
sbb
xorb
aad
sub
xor
cld
rolb
shll
pop
adc
adc
jmp
fnstcw
ss
cmpsl
call
test
dec
xor
je
scas
das
or
push
push
fistl
xor
repnz
jnp
push
mov
push
pop
inc
shl
sbb
jmp
and
cltd
sahf
scas
xchg
mov
dec
mov
movsl
aas
push
xlat
sub
ret
sub
int3
fstpl
scas
sbb
jmp
inc
sub
fcompl
mov
sbb
mov
fimuls
cmp
int
fistpl
dec
sahf
lds
out
test
stos
in
arpl
adc
cmp
lret
ret
and
in
scas
push
int
std
imul
test
aam
outsb
xchg
and
jle
sub
rorl
adc
xchg
es
fwait
rcrl
cmp
xor
mov
in
adc
mov
inc
sbb
dec
gs
xor
aas
pop
fidivl
sbbl
mov
cmp
out
and
scas
xor
pushf
sub
lds
loope
fdivrs
pop
or
fmulp
scas
push
xor
pop
sub
js
xor
mov
sub
lock
cmp
dec
leave
xor
cmp
pop
cltd
rcrl
push
mov
mov
cmpsl
pop
jle
ss
test
jle
popa
and
mov
iret
xchg
mov
movsl
mov
sub
test
adc
insb
inc
stc
xchg
sahf
sbbl
fucomp
pop
lahf
add
jg
sub
or
pop
ljmp
jns
hlt
out
jnp
adc
jb
lods
jp
sbb
push
cmp
sub
dec
int
pusha
repz
pop
mov
aaa
xor
test
jge
sbb
leave
fwait
or
adc
dec
adc
and
imul
sbb
mov
scas
and
das
repz
in
mov
mov
test
xor
add
and
mov
push
cld
mov
jl
popa
inc
daa
subl
mov
jnp
lock
mov
mov
popl
dec
cli
test
add
sub
push
add
jle
jecxz
roll
sbb
test
dec
cwtl
frstor
sahf
add
pop
dec
outsl
out
enter
push
lret
loopne
inc
push
mov
int3
rcrl
pop
push
pop
adc
ret
jns
ja
ljmp
jbe
xchg
mov
lea
fsub
ds
mov
cltd
push
xor
pop
push
sub
mov
sbb
inc
bound
jle
inc
es
shrb
popf
push
std
mov
insb
push
outsb
movsl
fsubl
imul
pushf
jge
mov
add
paddsb
movsb
inc
mov
xchg
iret
lods
or
pop
test
mov
aam
push
jecxz
je
andl
mov
add
popf
push
inc
xchg
adc
in
inc
or
mov
inc
in
sbb
add
lods
mov
dec
or
stc
xor
xor
sub
cmpsl
popf
leave
xchg
jns
inc
cmp
dec
lea
test
hlt
scas
xor
sti
cmp
jb
pop
pop
lods
and
mov
gs
jp
pop
jbe
call
int
leave
mul
dec
int3
jnp
xchg
popa
push
adc
inc
inc
sub
bound
cld
les
cmp
pop
das
cmc
xlat
mov
iret
ret
lea
prefetch
or
fisttps
or
aaa
sbb
mov
push
jg
push
dec
aam
mov
cwtl
addr16
cltd
negl
mov
mov
push
stos
cmp
adc
xor
je
sbb
and
out
rcll
roll
and
ror
push
xor
test
xchg
out
mov
xchg
adc
cli
shl
fiadds
mov
imul
pop
aam
lcall
jo
mov
add
pusha
lds
sub
ss
dec
jl
pop
icebp
nop
sbb
jns
out
pop
arpl
add
test
insb
ss
pop
test
rorb
lret
jmp
jl
cli
scas
lock
pop
xchg
push
mov
test
push
mov
jno
cltd
xchg
scas
adc
xchg
or
xchg
inc
in
sbb
mov
push
adc
push
add
dec
sahf
or
nop
in
test
jmp
adc
loop
adc
cmova
dec
add
jne
xchg
aas
lods
push
push
lahf
jo
xor
push
push
test
mov
xor
adc
inc
and
lcall
mov
pop
sti
inc
add
outsl
cmpsl
pop
push
mov
gs
pop
lret
xchg
stos
dec
fidivrs
rolb
jmp
test
int3
aad
cmpsl
js
aaa
data16
rcrl
ret
mov
in
movsb
sbbl
xor
or
and
mov
xor
fstl
adc
jnp
insb
mov
jno
imul
stc
xor
into
ds
js
arpl
popa
mov
outsl
and
clc
clc
mov
and
cwtl
std
imul
loop
sar
idiv
bound
outsb
fistl
sahf
mov
mov
cmc
leave
out
inc
dec
movsl
mov
aad
outsb
sbb
adc
leave
pushf
cs
lods
sub
inc
sarl
ret
stos
fcoms
jg
popa
dec
push
mov
push
mulb
orb
insb
xchg
pop
lcall
cs
xchg
cmc
pop
xchg
subb
xor
fnstcw
pop
ds
xor
xor
pop
sbb
dec
mov
inc
xorl
aaa
mov
or
loope
sbb
jns
shl
dec
or
fisubl
cltd
insl
pop
test
dec
mov
jno
insl
lret
dec
jmp
and
cmpsb
pop
xchg
xorl
fists
repz
lock
testl
cs
push
adc
and
enter
das
frstor
xchg
push
hlt
jno
sti
dec
push
int
test
cmpsl
push
insb
mov
or
push
sbb
jae
iret
lods
dec
roll
sub
xchg
pusha
adc
push
test
insb
lcall
cmp
mov
push
insl
adc
loopne
outsl
pop
dec
sbb
push
enter
scas
notl
je
push
xor
push
jle
dec
insb
pushf
cmp
push
push
xchg
sub
insb
pop
push
pop
das
adc
fs
jnp
inc
or
call
inc
cltd
jmp
inc
xlat
repnz
outsb
ret
sub
mov
test
ret
lds
fiaddl
inc
enter
sbb
aaa
push
xchg
xchg
sub
pop
decl
mov
and
push
arpl
jb
adc
mov
mov
add
dec
pop
cmpsl
repnz
subb
aaa
cwtl
stos
xor
cmp
pusha
mov
out
sub
push
je
xor
fidivrl
bound
lods
jb
xor
mov
outsl
adc
sub
int
fwait
jl
sbb
ret
xchg
out
movsl
mov
insb
xor
xchg
dec
jp
shr
lods
addb
mov
jle
xor
push
push
arpl
mov
enter
xchg
mov
in
shrb
in
jne
mov
clc
jae,pt
pop
adc
lcall
jnp
ja
push
xor
or
or
pop
insl
test
xchg
add
mov
mov
int3
pop
inc
jo
or
test
xlat
and
cmp
xchg
xchg
add
imul
push
jle
mov
enter
jmp
push
pushf
push
push
js
dec
mov
aad
xor
dec
out
xchg
lea
test
fiaddl
inc
or
pop
les
pop
test
mov
pop
add
std
dec
jns
rcll
mov
ljmp
pop
in
loope
mov
and
data16
mov
je
inc
ja
clc
jg
cmp
test
mov
xor
dec
cmpb
push
cmc
xor
cmp
scas
xor
idivl
mov
fistl
mov
or
sarb
insb
mov
dec
jb
testl
outsb
fwait
into
popa
fcomp
fbld
in
les
push
xorl
pop
scas
outsl
ja
xchg
pop
inc
push
lods
push
push
push
faddl
out
xor
adc
jl
mov
ja
mov
push
rorb
adc
jp
push
mov
js
cmpsb
cmp
fldenv
mov
mov
jge
call
jns
daa
add
jp
adcb
iret
mov
jb
sub
sub
sti
stc
mov
mov
scas
add
xchg
cmp
lret
aaa
and
ljmp
xchg
push
pop
inc
pop
xor
xor
adc
or
mov
addr16
push
jne
pop
aam
mov
repnz
mov
jle
cmp
sbb
adc
imul
adc
and
sbb
pop
jp
mov
dec
xlat
mov
and
pop
xchg
movsl
inc
inc
mov
jl
cmp
jle
ds
fisubs
pop
inc
xor
ret
sbb
stos
xchg
ror
and
andl
mov
lds
jmp
and
mov
js
hlt
insb
adc
pop
ja
call
mov
and
movsb
bound
push
pop
mov
mov
or
pusha
lods
movsb
and
cmp
and
pop
ftst
mov
xchg
outsb
cmpsl
scas
rcrb
outsb
mov
sbb
inc
mov
or
dec
cmp
sub
out
or
out
xlat
or
aam
movsb
in
in
add
jg
jae
lret
out
lods
xor
mov
mov
or
negb
inc
jge
push
js
xor
mov
add
cmp
leave
push
lds
mov
test
fucomi
ljmp
shrb
sbb
add
jecxz,pn
mov
mov
mov
in
or
in
push
push
add
xchg
pop
cli
scas
out
cmc
out
sub
push
push
inc
shlb
movb
jmp
pop
outsb
pop
scas
cmp
pop
pusha
push
aaa
push
and
push
loop
add
ds
pop
and
int
xor
sbb
fwait
mov
jae
jg
pop
fnop
icebp
call
ss
insl
testl
adc
test
add
jnp
jmp
adc
or
das
dec
jne
cld
jns
ja
divl
jae
fmull
mov
mov
cmc
mov
cmpsl
stos
mov
jp
aam
push
je
call
mov
lret
lods
cmp
ss
lcall
shl
test
jne
pop
adc
xchg
aas
movl
addl
loop
je
nop
fptan
adc
ret
mov
fwait
mov
mov
mov
mov
mov
lret
push
cmc
int
loope
fistl
dec
sub
xor
repnz
loope
lock
pop
sub
cmp
push
or
xchg
xchg
cmp
jecxz
ret
sbb
fmull
mov
xchg
daa
add
test
mov
or
sub
into
aaa
mov
bound
insb
js
les
lds
je
rcr
loopne
ret
shl
add
popf
fsubrl
cmp
test
cmp
fs
inc
ljmp
in
lret
xchg
cmpsl
addr16
pop
sbb
pop
mov
or
repz
push
or
and
xchg
cld
movsb
scas
adc
and
imul
cwtl
fs
lahf
js
mov
jae
jb
xor
fisubrl
jns
std
add
jo
bound
clc
jo
addl
jl
and
shlb
iret
inc
cwtl
mov
std
lahf
or
lcall
fwait
add
mov
int3
ret
test
xchg
cli
in
push
lahf
and
adc
cvtpi2ps
xor
push
icebp
pop
lock
js
add
jp
les
sub
xor
les
push
scas
sarl
jbe
push
add
pop
jmp
jno
pop
or
cwtl
cmp
sti
mov
sub
xchg
roll
jl
mov
lcall
ds
outsb
push
test
cltd
rolb
jp
mov
mov
push
mov
imul
test
scas
lret
xor
mov
cwtl
out
std
cli
popf
xchg
int
jb
negb
out
push
shlb
cmc
dec
adc
xchg
divb
and
out
and
mov
in
and
into
pop
jmp
lods
jns
sbb
outsb
inc
ljmp
idivl
or
mov
push
aas
enter
or
lcall
sbb
xor
lcall
jns
adc
inc
mov
fldcw
jno
sub
inc
mov
lods
xor
xchg
jp
and
xor
push
rorl
push
dec
jle
sub
push
fs
or
push
mov
not
sub
jno
inc
sarl
sarl
and
nop
mov
rolb
push
ljmp
pop
adc
mov
cmpsb
sub
sbb
dec
daa
test
mov
cmp
lcall
loopne
aaa
lods
jle
cli
mov
pop
push
stc
adc
push
sbb
ss
out
cs
lods
cmc
sbb
jne
adc
test
mov
mov
fwait
push
adc
push
mov
dec
stos
inc
jns
sub
rolb
je
lcall
cs
mov
add
mov
pusha
add
leave
sbb
ds
lahf
sub
jecxz
jl
cmp
cmp
sbb
xor
push
xchg
sbb
sub
stc
das
fwait
dec
or
push
nop
sahf
lock
aas
mov
ret
sbb
pop
and
test
jmp
push
dec
shll
xchg
mov
mov
mov
and
pop
jl
xor
fistps
daa
decl
repz
mov
lcall
push
sub
cmp
cwtl
add
pop
dec
outsl
inc
push
in
mov
xchg
inc
inc
pop
pop
cs
inc
ret
pusha
stc
addr16
jne
cmpl
dec
cmovbe
xor
add
negl
fwait
daa
pushf
pop
xor
popa
jecxz
dec
pop
sub
int3
mov
rorb
rorb
inc
or
dec
pop
in
imul
mov
pop
jg
lcall
lock
adc
mov
adc
xor
in
lods
inc
cs
jb
jae
stc
push
mov
lock
mov
xor
dec
movsl
mov
in
push
jb
xchg
and
enter
xor
ret
div
xor
jge
sub
in
gs
fmulp
pop
test
inc
bound
andb
int3
int
imul
hlt
xchg
das
shrl
mov
clc
dec
sarb
cli
jns
dec
adc
loope
orb
push
adc
rcrb
or
mov
jecxz
popa
addr16
in
mov
testb
push
adc
and
scas
lcall
mov
jbe
pop
jnp
cmp
pop
scas
xorl
das
sub
xchg
jle
test
and
mov
fmulp
push
lea
push
popf
sbb
or
fmull
bound
xor
repz
mov
and
or
leave
or
addl
test
mov
push
push
fcomi
xor
adc
adc
jns
pop
xor
mov
sub
xor
xor
pop
fsts
loop
adc
in
jle
daa
add
push
inc
adc
sub
stos
std
je
push
push
addr16
pop
adc
xchg
xchg
push
outsb
ljmp
sbb
ret
or
lcall
popf
or
push
sub
fdivrl
or
movb
testl
cltd
or
ljmp
dec
mov
out
and
test
int
out
ret
adc
lret
in
aad
mov
stos
ss
cltd
aad
call
jg
add
xchg
mov
adc
popa
in
imul
hlt
mov
shrl
mov
outsb
in
leave
roll
orb
popa
add
jb
mov
push
ds
mov
nop
ficoms
ret
test
inc
xchg
mov
or
lret
dec
pop
ret
sub
pushf
xchg
dec
mov
cld
bound
sub
jl
push
cmp
test
adc
cli
mov
sbb
inc
add
ja
cmp
adc
outsl
lcall
push
arpl
int
xor
jmp
xchg
mov
push
rep
outsb
scas
ja
frstor
ret
dec
or
pop
test
fldcw
mov
std
inc
sub
mov
and
jle
pop
sub
mov
dec
mov
cmp
cmp
ret
cltd
pop
inc
in
leave
int
bound
cld
jbe
and
lods
jno
out
dec
or
push
pop
das
jmp
mov
outsl
test
xlat
xchg
out
cwtl
cmp
roll
mov
add
sbbb
cmp
sbb
xor
lcall
ljmp
push
jno
sub
mov
outsb
inc
mov
or
ljmp
loop
repz
jnp
push
test
push
outsl
xchg
sbb
or
cmp
cmp
dec
imul
inc
test
inc
stc
cmp
ret
ss
add
xchg
rorl
clc
jbe
sbbl
scas
imul
dec
or
push
repnz
mov
mov
lea
cmpsl
inc
cmp
rclb
popf
int
cmp
push
inc
xchg
divb
mov
stos
enter
pop
iret
push
cltd
mov
or
jle
sub
sbb
js
pop
out
xlat
jb
int
outsb
push
inc
jle
sbb
sub
push
aam
pop
movsb
pop
cmp
push
ljmp
xchg
movl
rcrb
call
cmp
add
into
adc
fnstenv
or
test
pop
jns
ja
outsl
adc
adc
inc
cld
pusha
sub
push
push
jmp
sbb
and
mov
adc
pop
stos
repz
mov
inc
jno
xor
aad
jb
dec
sub
cmc
das
mov
or
sahf
inc
push
out
cmp
cwtl
aad
addr16
pop
cmp
inc
mov
cli
adc
out
cld
push
dec
jb
cmpsb
loope
arpl
insl
enter
inc
or
nop
push
arpl
mov
adc
jl
pop
loopne
sbb
jnp
pop
jmp
stos
cmp
push
popf
pop
add
in
push
incl
and
sbb
mov
test
push
sbb
xor
sub
out
dec
sbb
jmp
jmp
or
mov
mov
mov
adc
je
cmp
ljmp
mov
mov
mov
lea
adc
sub
aad
arpl
test
dec
pop
adc
andl
iret
xchg
arpl
jo
and
cwtl
ds
jbe
pop
pushf
ja
mov
ficompl
mulb
inc
int3
adc
arpl
testb
push
mov
sub
std
jecxz
hlt
push
adc
mov
inc
push
push
dec
and
and
cwtl
shr
out
or
std
stos
cmpsb
xor
movsb
scas
mov
inc
cmp
mov
dec
jg
movsl
jge
outsl
cli
insl
adc
mov
test
les
push
movsl
adc
xor
adc
daa
adc
xchg
aas
mov
test
std
xorl
push
mov
rol
bound
aad
test
subl
sub
adcb
in
les
push
sbbl
and
mov
shll
cmpsl
insl
or
shll
hlt
pop
aas
stos
xor
push
mov
jno
mov
pusha
cmpps
and
inc
int3
pop
ret
pop
and
aam
jne
push
aad
popf
out
mov
es
xor
cmp
xchg
cld
push
mov
jge
aam
lds
xchg
divb
jne
imul
xchg
sbb
fcoml
jle
sub
push
inc
decl
add
cmp
cmp
adcb
arpl
mov
fisubs
lcall
ja
iret
or
jno
mov
int3
out
lods
mov
xchg
js
lahf
pop
fdivs
mov
cmp
cltd
hlt
ds
cld
cmp
or
adc
sbb
mov
adc
push
jnp
cmp
cmpsb
jo
loop
sub
test
push
fimuls
xchg
ljmp
std
pop
call
hlt
inc
js
mov
je
jo
pop
lcall
mov
mov
pop
aam
mov
push
dec
push
mov
movsb
les
js
nop
and
sbb
pop
push
out
sbb
popa
js
adc
xor
icebp
movsb
dec
push
push
xor
jg
es
inc
movsb
push
cmp
insl
int
in
or
adc
and
leave
out
gs
adc
test
js
cmp
push
pop
dec
div
mov
or
aas
idivb
mov
xchg
and
or
movsb
sahf
push
jno
repnz
add
sub
adc
xor
arpl
out
push
xchg
cmp
mov
sub
add
push
dec
ljmp
and
add
out
call
notl
and
shll
sub
pop
lcall
inc
movsb
cmp
xorb
sub
loop
rcr
out
pop
jb
xchg
xor
and
inc
sbb
stc
push
pop
mulb
and
mov
mov
cmp
ficoml
inc
pusha
les
pop
inc
push
push
and
lahf
iret
es
rep
sbb
sahf
shrl
lret
lcall
xchg
mov
jmp
andl
cmp
xor
sub
subb
xchg
sub
pushf
jo
add
cli
call
arpl
mov
jb
mov
fcmovnu
adc
mov
inc
std
add
cmc
popf
cwtl
imull
sarl
daa
jb
jne
mov
dec
inc
sbb
push
flds
pop
xor
cs
push
insb
push
jl
push
push
mov
inc
or
mov
dec
test
mov
push
icebp
js
in
mov
xchg
adc
push
xor
or
hlt
push
jo
inc
xlat
mov
cmp
sbb
out
roll
lods
int3
xchg
sbb
sub
das
mov
js
call
lldt
mov
sub
mov
cmc
fisttpl
data16
out
adc
scas
test
sub
imul
mov
repz
pop
shlb
adcl
and
pop
xchg
test
lea
mov
test
mov
into
pop
inc
mov
iret
or
mov
outsl
orb
loop
pop
in
push
or
lret
or
xor
add
push
inc
lock
sbb
lret
mov
cli
test
dec
xchg
push
mov
or
xor
arpl
dec
mov
mov
jno
rolb
pop
and
jno
and
movsb
fadd
popa
ret
mov
add
mov
ds
jecxz
mov
mov
lcall
add
leave
cmc
sbb
sahf
or
xor
movsl
addr16
insb
sbb
out
and
push
mov
jno
and
pop
in
xchg
inc
add
sbb
test
leave
xchg
xchg
dec
mov
sbb
loope
inc
enter
mov
push
in
cmp
and
scas
ss
cmc
xor
movsb
mov
mov
test
int3
pop
or
std
and
stos
shrl
xchg
push
dec
imul
ja
pop
mov
pop
jb
lock
leave
or
sbb
mov
ja
and
add
cwtl
aaa
test
loope
cmp
testl
mov
test
sub
addr16
subb
jnp
push
mov
cmp
push
xorl
inc
jno
mov
and
dec
add
popa
add
and
mov
xorl
lret
inc
push
xlat
jecxz
pushf
or
dec
out
dec
sub
cmp
sub
mov
cmp
loope
test
cmp
cmc
ret
sbb
fcmovnu
sbb
pop
mov
aas
paddw
pop
mov
sbb
iret
loopne
das
or
adc
pop
push
jae
imul
icebp
push
dec
arpl
jns
bound
stc
insb
out
cmp
xor
adc
inc
xor
xor
jecxz
jge
imul
sub
xchg
loop
sub
push
xor
repnz
bound
adcl
cli
clc
dec
cmp
aad
je
pop
into
add
mov
sub
push
adc
jno
jne
push
stos
out
movsl
xchg
xor
mov
mov
ds
flds
sbb
xor
and
out
mov
xchg
repnz
cmp
add
stc
aad
or
jnp
xchg
cmpsb
or
jmp
jnp
xor
mov
pop
int
test
adc
sbb
mov
in
pop
inc
mov
push
xchg
rcll
ja
mov
insb
js
jecxz
fsubrl
mov
ss
mov
aas
sbb
mov
bound
loope
mov
rcr
int
adc
scas
das
lock
sti
and
cmp
and
in
push
adc
repnz
popa
jb
inc
sbb
xor
xor
mov
push
into
xchg
push
dec
jnp
dec
lods
repz
fidivl
mov
and
sub
mov
je
sub
xchg
pop
or
test
out
jmp
mov
rcrb
jno
cltd
arpl
jns
stc
xchg
in
jns
hlt
or
mov
jmp
mov
dec
imul
sbb
xchg
mov
mov
push
hlt
cmc
push
enter
mov
mov
fs
mov
cmpsb
fsubs
enter
scas
sub
dec
popf
mov
mov
ror
mov
inc
adc
jg
dec
mov
sbb
add
jge
fdivrs
iret
cwtl
mov
jl
xor
sbb
call
mov
adc
dec
nop
cld
jp
lret
lcall
mov
cmp
incb
mov
mov
nop
pop
jb
in
sub
pusha
jmp
cmc
pop
or
xchg
cltd
jo
or
inc
stos
mov
outsb
in
fidivs
or
movsb
shrl
cmp
je
push
and
pop
pushf
push
std
push
lret
mov
mov
or
mov
shrl
or
pushf
lcall
mov
inc
sbb
nop
nop
add
rcr
add
xchg
jnp
movsb
mov
sub
adc
aad
iret
sbb
mov
loopne
inc
or
adc
cmc
popf
aaa
insl
aad
sub
nop
movsl
mov
push
pcmpgtb
ja
insb
movsl
and
jge
and
add
jle
cmp
sub
push
push
lcall
shll
scas
test
lods
std
into
bound
sahf
xor
imul
sbb
sbb
pop
mov
push
decl
inc
xchg
nop
push
into
xchg
push
push
rorl
xor
adc
push
movsl
ds
out
cmpsl
stos
jp
andb
enter
add
das
jecxz
mov
sti
icebp
jo
mov
sbb
lods
sbb
sub
dec
add
mov
fstl
sub
mov
clc
jg
int3
xchg
push
std
xor
cltd
fldcw
aaa
inc
jae
jge
ds
push
fisubl
je
sbb
lcall
cmp
call
fwait
adc
cli
adc
cmc
xchg
mov
je
xchg
add
repz
pop
ret
mov
xor
cltd
insl
jle
and
push
fisubl
es
fsubl
pop
jns
jnp
cmp
mov
in
inc
lret
cli
xchg
mov
pop
pusha
jle
mov
add
push
adc
mov
mov
daa
adc
neg
stc
inc
movsb
jmp
mov
dec
add
cli
push
lods
xchg
fwait
cs
push
insl
les
or
dec
adcb
sbb
notb
dec
sub
repz
mov
cmp
cwtl
add
je
stc
mov
call
pop
xor
pop
add
jnp
repz
loop
enter
cmp
cwtl
adc
pop
movsb
push
inc
lods
add
dec
aas
mov
and
fiaddl
lret
lret
pop
js
outsb
lea
xchg
pop
mov
test
popa
sbb
push
xchg
push
add
scas
iret
adc
push
clc
pop
mov
mov
jle
mov
adc
in
in
lock
and
iret
sbb
or
sbb
test
add
js
les
sbb
cwtl
pushf
push
jns
sub
mov
pop
mov
sub
jno
jnp
sub
sbb
add
xchg
push
aad
in
mov
inc
addr16
loopne
pop
mov
dec
lret
adc
nopl
cmc
das
std
push
inc
xchg
xlat
repnz
jecxz
std
scas
cmp
pusha
std
cmp
push
fisubrl
pusha
adc
into
call
lods
sbb
cli
cmpsl
out
sbb
lret
adc
je
push
or
and
jae
and
lods
adc
movsb
xchg
fwait
mov
rcrb
push
mov
cmp
les
cmpl
psrld
adc
jb
mov
mov
jno
jle
outsl
sub
or
xor
and
cmp
mov
out
outsb
adc
push
or
jne
mov
into
sar
add
fbstp
mov
int3
adc
adc
mov
jmp
outsb
les
inc
or
dec
push
outsl
mov
cmpsl
mov
inc
sub
xor
cmp
sahf
push
subl
icebp
or
fwait
scas
cmpsb
mov
test
outsb
pop
movsl
dec
cwtl
xor
js
in
in
lock
int3
es
mov
cmpsl
popf
sub
rorb
arpl
popf
xchg
xchg
lods
adc
xor
jb
es
jle
ret
jp
mov
test
sub
push
enter
fbld
mov
andb
jne
push
push
add
popa
xor
inc
std
xor
and
mov
push
and
and
stos
push
paddd
xlat
jns
pop
jno
mov
mov
imul
sarb
testb
pop
sbb
jmp
mov
mov
lahf
in
push
jg
dec
aas
dec
aas
ljmp
jecxz
xor
adc
xchg
nop
xchg
xor
lcall
in
hlt
ret
mov
mov
lret
sub
xor
push
mov
dec
inc
in
inc
neg
xor
dec
push
cmpsb
enter
xor
mov
inc
sub
mov
xor
inc
xchg
movsl
push
out
pop
cmp
repnz
ret
divl
fstp
or
xchg
add
jge
push
fisttps
sbb
fdivr
and
adc
scas
imull
pop
and
mov
xlat
out
adc
inc
ljmp
mov
sbb
outsl
fistps
jecxz
sub
scas
cmp
sarb
and
lret
jg
cmc
loopne
fs
adc
fwait
call
lods
mov
into
mov
mov
outsl
loopne
adc
call
inc
movsb
sbb
les
xchg
xorb
aas
mov
mov
xlat
sub
cmc
cwtl
aaa
xchg
or
clc
pop
fwait
call
hlt
xor
push
push
xor
sbb
push
cmp
cmp
lods
adc
mov
addr16
insb
ja
pop
cmc
sub
fcoml
pop
aam
inc
mov
jle
jmp
sbb
and
movsb
sub
or
das
inc
jle
mov
mov
into
fwait
jb
ss
out
out
mov
lcall
ror
mov
ds
cmp
push
push
push
jno
lcall
lods
jbe
xchg
aad
ja
xor
sub
adc
jnp
add
dec
insl
push
xchg
aas
int3
pusha
ffreep
cmp
cmp
xor
xor
mov
out
or
sub
push
sub
nop
out
dec
and
mov
fld
jmp
mov
outsb
repz
lcall
sbb
sarl
cmp
cmp
andl
xor
inc
jle
add
adc
and
mov
pop
jnp
xor
je
mov
add
xor
lret
je
lods
mov
sbb
sbbl
inc
outsl
int3
repz
jle
inc
xor
lret
sub
push
mov
lea
mov
rolb
pop
adc
xchg
movsl
test
pop
sbb
jp
daa
out
jo
inc
adc
shrb
dec
xor
push
push
movsb
ss
lds
mov
fidivrs
call
jnp
mov
mov
adc
stc
js
sub
sub
adc
and
dec
dec
push
cs
hlt
push
mov
testb
loop
jmp
jbe
ljmp
xchg
mov
mov
lods
mov
ret
jl
inc
add
loop,pt
pop
fimuls
imul
adc
and
cs
inc
nopl
sbb
jp
xor
scas
inc
loope
jno
das
jnp
mov
pop
push
push
and
mov
notl
xchg
sub
pop
mov
adc
rcl
sbb
imul
popa
jmp
jae
jo
dec
not
out
push
or
fwait
mov
inc
push
dec
icebp
popa
push
notl
xchg
adc
ljmp
push
push
data16
aad
xor
inc
mov
xchg
adc
push
cmpsb
mov
clc
mov
adc
push
and
in
jo
sbb
cmpsb
enter
lea
subl
std
add
lcall
ja
and
ss
js
fnstcw
aaa
push
adc
imull
outsl
mov
aas
mov
dec
icebp
adc
xchg
adc
inc
imul
int
aad
in
call
push
xor
into
sti
jmp
push
jecxz
xor
stos
repz
pusha
es
push
mov
out
add
sar
push
jecxz
lds
mov
and
scas
jns
jg
mov
and
incl
outsb
gs
lds
jg
ss
sbb
add
inc
lds
aam
cli
sbb
leave
loope
imul
sbb
or
int3
jns
cwtl
idivb
or
and
addr16
adc
mov
arpl
dec
int
mov
cmp
pop
xchg
or
mov
subb
dec
pop
push
jecxz
adc
pop
lods
mov
dec
xor
or
and
adc
stc
cmp
insb
pushl
add
sbb
stos
call
mov
rclb
mov
sarb
mov
test
mov
les
or
mov
push
or
in
scas
xchg
jecxz
neg
xor
dec
mov
or
dec
add
icebp
xorb
shl
mov
or
mov
xchg
outsb
mov
std
jmp
cmc
dec
cmp
hlt
mov
aam
sti
sbb
dec
dec
aaa
add
mov
popf
push
jge
mov
or
cmp
jmp
cwtl
push
test
js
or
pop
cld
fdivrl
popf
orl
sub
or
sub
push
xchg
int
sub
pop
movsl
and
push
adc
mov
jecxz
jmp
xchg
and
mov
hlt
test
lcall
fwait
icebp
testl
push
mov
enter
lcall
aas
inc
sbb
push
addb
jno
pop
mov
pop
xchg
pop
les
addl
rclb
dec
dec
push
dec
mov
cld
ror
call
jp
int
jle
cmp
mov
outsl
inc
or
cmpsl
pop
addl
pop
pushl
mov
cmp
es
dec
or
inc
inc
add
in
adc
lret
cmpl
inc
insl
sahf
jp
inc
mov
int3
iret
inc
xor
hlt
fsubrl
js
mov
nop
or
and
adc
iret
aaa
push
mov
fucom
add
xchg
dec
push
jne
lea
sub
imul
or
dec
ret
aad
out
test
scas
or
fwait
mov
sub
gs
orb
fimuls
adc
cltd
or
ljmp
in
andb
dec
add
aaa
and
test
mov
cmp
mov
mov
mov
or
mov
jae
mov
lret
cmpb
lock
xchg
stos
jl
je
fiaddl
mov
in
jecxz,pn
inc
cmovo
xor
repz
adc
lret
in
jp
ljmp
in
push
hlt
pop
mov
lock
sub
adc
jne
push
inc
scas
xor
das
ss
mov
insb
dec
imul
lret
mov
out
mov
sbb
std
xor
leave
lahf
testb
push
out
mov
mov
repnz
adc
lahf
sar
in
pop
lea
add
stos
cmpsb
adc
test
loope
mov
xorl
mov
dec
sbb
sub
xchg
mov
adc
jge
or
dec
lock
popf
out
inc
mov
jmp
cmp
dec
and
out
and
jp
sbb
push
sub
aas
lods
repz
inc
pop
push
xor
test
jns
outsl
pop
xchg
mov
add
repnz
or
adc
and
adc
rorb
aad
les
cmp
adc
pusha
pop
xchg
inc
sub
fdivs
cs
addr16
pop
xchg
xchg
stc
xchg
les
mov
fcmovnb
jo
xor
sub
mov
test
fxam
gs
es
xchg
push
inc
pop
and
pop
cmpb
push
shrl
and
push
ds
sti
gs
nop
or
or
adc
mov
test
and
movsb
and
adc
pop
pop
push
daa
repnz
mov
out
ret
inc
mov
sbb
stc
andb
rcrl
insb
orl
push
sub
arpl
mov
int
dec
cmpsb
loope
ss
std
and
sbb
test
jnp
pop
xchg
xchg
cltd
clc
mov
add
jp
jae
bound
insb
sbb
iret
sbb
je
ds
pop
or
inc
repz
dec
fimull
pop
xor
sbb
ficoml
cmp
push
cld
std
add
insl
push
frstpm(287
fadd
xchg
inc
sar
xor
jb
jno
xor
dec
popa
push
lods
loope
aas
dec
lods
jp
adc
movsl
inc
pop
pushf
fsubr
or
pop
mov
mov
jne
mov
int
add
lods
add
jnp
mov
jo
jbe
or
mov
sub
lock
add
lret
xor
scas
xchg
sbbl
in
mov
push
or
cmpsb
rorb
in
cltd
push
lds
mov
mov
inc
stos
in
xor
xor
xchg
adc
jo
in
and
mov
jno
sub
add
js
push
lret
mov
xchg
bound
jmp
pop
add
mov
loope
sbb
clc
mov
sub
jge
lods
pop
mov
mov
xchg
push
int
mov
mov
mov
dec
addl
cwtl
in
inc
xor
inc
in
call
nop
push
out
mov
and
jl
jle
test
enter
push
mov
mov
inc
adc
shl
int3
jmp
jle
inc
lods
jnp
or
or
into
hlt
push
mov
jmp
inc
stos
cmp
mov
sti
inc
cmp
push
cmp
mov
or
xchg
orb
lds
negb
xchg
cmp
sub
add
jb
lods
lds
rolb
cmp
lods
aad
cmp
in
or
inc
loope
dec
xchg
aaa
pusha
test
aam
or
mov
enter
sbb
cmp
mov
bound
jno
imul
aas
adc
loop
sbb
mov
jnp
mov
dec
xchg
pop
mov
sub
scas
or
out
xor
popf
mov
push
push
xor
sub
mov
and
rclb
jnp
mov
pop
fsubrs
inc
loope
fidivs
mov
ss
inc
jae
mov
dec
mov
ja
mov
jmp
pop
aaa
sarl
arpl
fisubl
pushf
inc
sub
ret
dec
cmpsb
xor
call
push
rclb
and
and
inc
dec
sub
sbb
jmp
jbe
dec
sub
push
faddl
movsb
pop
jp
jne
lods
cmp
adc
dec
test
je
xor
std
out
cmpsl
fimull
xchg
sub
test
je
push
dec
pop
scas
adc
mov
mov
mov
outsl
sbb
jb
sub
fstpt
sbb
scas
mov
mov
test
xchg
push
push
notb
movsl
stc
inc
loopne
pushf
cmpsl
pop
ret
sbb
adc
mov
pop
test
push
and
pop
xor
jnp
mov
xor
and
dec
cmp
mov
mov
int3
jge
sbb
lahf
pop
push
lods
cli
or
scas
inc
or
sbb
sbb
pop
cltd
scas
inc
jo
addl
jl
dec
lahf
mov
cmpsb
add
popf
xor
lret
fcos
add
jp
jbe
mov
sti
stos
andl
or
fisttpl
adc
je
xor
push
lds
jge
mov
cmp
push
es
repz
and
mov
pcmpeqb
inc
push
mov
fcomp
addl
or
mov
outsl
inc
leave
push
and
jp
xor
daa
leave
out
outsb
pushf
movsl
xchg
stos
fisttps
std
fsubrl
pop
test
test
or
je
test
arpl
scas
inc
or
sbb
push
sbb
and
jg
sub
push
movsb
stos
push
jmp
es
xlat
jb
mov
scas
repz
and
cs
add
shll
inc
icebp
in
sub
sbb
xor
mov
cmpsb
mov
push
movq
sub
cmpb
rcrl
lcall
aas
fisubs
cmp
movsb
scas
inc
das
shrl
mov
inc
lahf
sbb
jnp
fdiv
lcall
iret
pop
pop
roll
insl
mov
ljmp
cwtl
or
movsl
jle
daa
inc
add
push
aad
scas
hlt
add
cwtl
fs
add
jge
cmp
push
jae
or
nop
fldl
or
fildl
pop
fisubl
pushf
dec
les
or
cld
ror
ret
sbb
stos
pop
jecxz
loop
or
and
shlb
sti
sti
push
xchg
fsubs
imulb
sub
pop
lea
mov
ja
stos
addb
pop
inc
es
sbb
sbb
loope
sbb
and
mov
mov
out
pop
pop
xor
lahf
and
gs
lret
pop
add
xor
aad
in
shrb
dec
push
cmpsl
das
push
adc
cmp
xchg
push
rclb
mov
hlt
xchg
out
and
cld
daa
jnp
cltd
xor
sbb
pop
insl
xor
shlb
cli
dec
mov
and
xchg
and
outsb
sub
outsl
adc
xchg
cs
mov
sub
movsl
cmp
lcall
divl
les
fists
lahf
nop
xorb
sbb
ret
arpl
inc
xor
popa
xchg
push
imul
xchg
shr
mov
cmp
push
xchg
inc
into
mov
push
decb
lcall
nop
cmp
pop
dec
test
mov
and
in
mov
xchg
je
out
cmp
push
mov
mov
inc
inc
pushf
cwtl
lds
shlb
jle
idivl
lret
lret
push
sub
mov
push
mov
adc
jo
ds
insb
mov
mov
mov
pop
fcomi
push
pop
xorb
jl
mov
out
jmp
sbb
pushl
stc
ficompl
popf
sub
mov
cmp
shl
stos
add
out
repnz
repnz
xchg
stos
clc
das
xor
cld
test
lret
add
je
pop
mov
dec
inc
or
inc
xchg
jo
sbb
push
icebp
outsl
adc
pop
rolb
or
jecxz
imul
lcall
jg
jmp
mov
mov
lock
pop
shl
xchg
sbb
jno
mov
pop
pop
imulb
push
sub
cld
fsts
push
scas
push
xor
lea
hlt
loope
pop
aad
mov
xor
rol
mov
pop
mov
into
add
cmp
cmc
push
iret
ja
scas
mov
cmp
cmp
push
in
loop
mov
es
mov
and
adc
fs
sub
lea
hlt
lcall
mov
jns
adc
out
mov
orl
jns
and
inc
cmc
movsl
in
ss
ja
jmp
lock
push
xor
call
xchg
mov
inc
call
push
jne
lods
xchg
or
mov
test
inc
dec
cmp
dec
imul
in
frndint
outsb
cmpsb
sti
sbb
andb
jmp
loop
or
mov
pop
mov
push
notl
inc
pop
push
mov
xlat
xchg
sbb
jg
lea
popf
adc
fadds
popa
sub
adc
inc
das
int3
aam
outsb
add
fsubs
add
stos
mov
ja
out
jg
dec
add
cmc
mov
dec
push
add
mov
pop
mov
cwtl
outsb
subb
cmp
sbb
or
ss
add
jmp
aaa
cwtl
add
pop
in
shrl
jle
lahf
subl
shll
daa
daa
xchg
add
test
sub
xchg
lahf
adc
inc
cmp
lock
mov
ja
jle
dec
jo
mov
and
mov
xor
sar
mov
cltd
fwait
push
scas
inc
push
xorb
mov
pop
lea
xchg
int3
mov
test
aad
mov
out
dec
int3
aaa
pop
imul
loope
push
sub
pop
inc
mov
fsubrl
cmpsl
inc
pop
fwait
inc
xchg
mov
out
cltd
mov
mov
out
popa
insl
popa
aam
mov
subl
in
cmp
cmp
pop
test
testl
push
lds
and
mov
iret
cmp
cmpsl
add
dec
xor
int
pop
or
lret
jne
dec
lahf
out
sbb
or
fimuls
lcall
out
jg
mov
ss
push
bswap
xchg
mov
jmp
cld
stos
jnp
xchg
mov
or
dec
xchg
aas
int
mov
push
lret
data16
mov
dec
push
das
dec
push
scas
mov
arpl
addr16
lods
dec
movsl
jp
test
lds
scas
cmp
mov
sub
push
mov
xchg
sub
pop
inc
ss
adc
mov
jl
les
xchg
popa
jns
mov
mov
test
push
xor
xchg
aaa
es
scas
loopne
ret
jle
xchg
mov
and
inc
jb
les
pop
or
enter
int
movsl
mov
and
xchg
jb
testl
push
jmp
pop
dec
jo
or
push
dec
sub
cltd
out
mov
call
mov
icebp
jp
lcall
mov
jmp
lret
jbe
popa
clc
popa
out
les
add
fisttps
mov
cltd
inc
add
add
pop
push
sub
and
shlb
loope
fistl
sbb
sbbb
subl
outsb
pop
lods
jo
jg
inc
setb
addl
mul
cmp
push
fdivrl
mov
jnp
mov
sarb
jo
int3
dec
scas
push
hlt
in
dec
add
mov
adc
test
pop
jmp
xchg
push
lds
in
in
sub
cmp
cld
int
insl
adc
adc
fwait
shr
jne
out
rcr
loopne
push
mov
adc
push
lods
xor
xor
and
mov
xor
ret
mov
xor
sub
push
adc
out
jno
popf
sbb
pop
js
mov
into
int
cmp
fdivrs
mov
pusha
out
xor
and
out
lds
out
push
mov
xchg
mov
shll
push
add
xor
nop
cld
imul
aaa
sbb
lock
xchg
xor
add
stc
sbb
cld
xor
jg
out
in
ds
andl
inc
mov
sbb
sub
loope
jns
bt
incl
jb
mov
outsl
enter
scas
dec
nop
xchg
insb
addr16
xchg
pusha
ficoms
inc
cs
mov
dec
xchg
adc
jno
pop
lcall
repz
dec
movsl
mov
sbb
movsb
and
out
jl
insl
stos
loope
inc
sub
cmpsb
push
popa
push
subl
xor
mov
adc
xor
mov
adc
in
cmpsb
dec
loopne
in
or
pop
mov
sub
mov
sub
cmpsl
test
adc
iret
js
lcall
push
pop
add
and
jge
adc
sub
cmp
sarb
and
sti
sub
dec
ds
and
adc
dec
cmc
mov
push
leave
xor
push
fs
lock
lret
movsl
mov
xchg
addr16
lea
or
pop
out
dec
xor
push
stos
xor
sahf
mov
outsl
adc
dec
add
inc
mov
test
ja
int3
xor
lret
std
stos
test
push
jge
addb
mov
hlt
sti
mov
rolb
addl
into
repz
mov
push
dec
jno
pop
test
pop
imul
sub
mov
adc
test
cmpsl
push
pop
hlt
out
adcl
in
and
loope
mov
scas
cltd
movsb
sti
loopne
or
in
adc
and
mov
xor
cmpsl
lods
xor
mov
xchg
mov
ja
cmpsb
jge
in
jge
jmp
fisttps
and
imul
jmp
jg
mov
addb
enter
dec
mov
xor
lods
les
xor
cmpsl
imul
hlt
push
xchg
xchg
std
int3
mov
push
rclb
xlat
dec
int3
fisubrs
inc
rcr
imul
je
sbb
outsl
mov
and
out
es
cmp
aaa
pop
and
insl
lea
in
sub
jo
mov
mov
jnp
cld
inc
or
shr
xor
icebp
jb
andl
mov
jbe
and
stos
fnsave
lock
add
mov
roll
icebp
sbb
es
pop
popa
sub
or
loop
push
jae
push
insl
xchg
mov
xorl
shr
aam
dec
sbb
inc
sub
pop
mov
and
ds
fildl
movsb
adc
in
or
xchg
rcll
mov
push
ficoml
pop
test
mov
in
int3
sti
push
xchg
lea
push
ss
cltd
xlat
scas
mov
add
mov
imul
test
xchg
jecxz
add
inc
mov
jl
addr16
mov
sbb
push
sbb
in
bound
inc
loopne
add
insb
mov
mov
adc
dec
lret
dec
inc
mov
adc
daa
mov
adc
jl,pn
sti
shr
test
inc
scas
or
push
pop
push
les
test
push
xchg
popa
mov
pop
mov
mov
pop
repnz
cmpsl
xchg
in
iret
adc
in
test
bnd
sub
movsb
mov
mov
popf
int
sti
inc
mov
sub
jl
mov
push
jl
mov
jp
xor
lret
sub
data16
push
es
cmpsl
jb
enter
adc
divb
add
jne
cmpsl
stos
mov
stc
leave
mov
lret
push
aas
cmp
or
xchg
dec
jmp
scas
push
mov
les
insb
cli
pushf
xchg
xlat
sqrtps
clc
fidivs
xor
xchg
add
xchg
scas
mov
enter
mov
pop
jb
dec
icebp
out
push
jmp
test
cwtl
fsubs
mov
shrb
mov
adc
lret
add
push
outsb
mov
out
or
pop
mov
fldl
in
inc
imul
hlt
xchg
jl
mov
dec
adc
mov
mov
out
jle
xor
xor
fwait
dec
and
out
xor
in
cltd
cmpsl
mov
test
mov
addr16
and
pushf
std
jbe
std
mov
rol
pop
xchg
sti
dec
in
dec
sub
xchg
shrb
iret
push
repz
inc
aad
cmp
xor
cli
push
sub
jbe
push
cmp
mov
dec
lcall
mov
aas
leave
push
outsb
rclb
mov
inc
xor
andl
arpl
call
arpl
cmpsb
fistl
daa
es
js
and
sti
imul
pop
dec
xor
fs
sti
mov
mov
cmc
dec
out
daa
popf
ss
cmp
packuswb
sbb
jecxz
into
cld
push
fs
dec
stc
mov
sbb
mulb
js
xlat
nop
add
adc
rorb
mov
les
jbe
inc
jno
pop
cmp
mov
push
xor
add
lea
mov
inc
xlat
repz
fildll
lea
and
add
data16
rcrb
xchg
xor
out
insl
mov
rcll
loope
lcall
hlt
out
leave
mov
flds
gs
jbe
pop
push
pushf
pop
adcb
or
lods
jbe
stc
pop
cmp
push
xor
add
shufps
mov
outsb
or
mov
pop
in
ja
sub
ret
push
imul
pavgb
repnz
scas
xchg
dec
aas
sbb
fimuls
jbe
xor
cld
sbb
dec
and
faddl
or
cmpsl
mov
jnp
sbb
push
outsl
dec
insl
dec
scas
ja
dec
jge
out
mov
or
push
jecxz
cwtl
js
cld
mov
shrb
inc
mov
pop
sub
mov
jb
std
data16
bound
pop
lahf
sub
popf
sub
adc
es
cmp
adc
inc
push
shll
mov
and
aad
xchg
mov
out
pushf
jge
pushf
inc
cltd
int3
jae
and
aaa
aam
inc
add
int
sbb
jmp
pushf
jae
sti
hlt
lods
push
and
loope
lret
dec
jbe
inc
cltd
mov
push
mov
mov
cltd
psubusb
add
cld
lcall
shrl
jo
xorb
popa
jge
stos
int
pop
sbb
andl
jne
or
cmp
fcoms
jge
lcall
out
mov
pop
adc
or
orl
add
cwtl
ljmp
loop
jbe
xchg
mov
push
ficompl
jmp
inc
imul
fnstenv
push
mov
and
mov
in
jbe
test
xchg
jg
lea
push
orb
or
popa
cmp
mov
loope
jo
je
out
pushf
push
shlb
jbe
or
arpl
jne
cltd
fadd
fwait
nop
xor
adc
aad
aaa
call
int3
fdivl
or
cmp
jae
push
jmp
adc
lds
scas
push
jae
push
loope
or
arpl
gs
lret
rclb
xor
jo
push
inc
xlat
pop
hlt
dec
test
cmp
mov
push
mov
sbb
add
leave
jmp
pop
test
pusha
lcall
popf
stos
cld
add
rolb
push
aaa
movsb
aaa
mov
dec
cli
out
loope
nop
fs
stos
xchg
cmpsl
fwait
aas
icebp
int
jo
mov
pushf
lahf
xchg
xor
sbb
push
rcl
adc
pop
cld
out
aam
bound
iret
scas
sbbb
adcl
xchg
int
in
jns
outsl
int3
cs
mov
cmp
in
bound
ljmp
es
lahf
cmc
inc
xor
ss
dec
dec
adc
mov
push
or
jecxz
add
add
in
xchg
pushl
xchg
mov
inc
hlt
out
dec
push
js
fs
xor
pop
sub
rcrl
xor
jb
pop
insb
pop
add
adc
xor
cltd
or
nop
jecxz
jno
dec
mov
mov
loop
mov
movsb
add
sahf
ss
push
aad
xchg
ret
xchg
out
lcall
push
push
movsb
call
stc
dec
ficompl
sub
sbb
xchg
xchg
addr16
pushf
iret
pushf
and
out
out
fimuls
mov
test
inc
xlat
in
ds
pop
mov
repnz
sbb
scas
sub
sbb
sbb
mov
mov
rcll
cmp
aad
or
mov
xorl
mov
xchg
jle
fidivrl
mov
lods
xchg
test
stos
lods
cmc
mov
das
adc
mov
xchg
push
fldl
dec
push
and
jae,pn
inc
mov
xchg
enter
faddl
pop
arpl
adc
in
and
sahf
xor
iret
jae
push
inc
jle
mov
mov
xchg
stc
or
cld
dec
xor
ficompl
cmp
add
mov
or
inc
scas
dec
sbb
jnp
jno
enter
jbe
pop
sub
and
dec
add
outsb
lahf
mov
notl
jp
rorl
testb
pop
inc
movsl
mov
inc
jl
movswl
outsl
int3
cmp
shll
cwtd
mov
mov
outsl
push
mov
dec
out
pop
xchg
jle
fistpl
jg
sbb
cmp
xor
push
add
push
adc
ljmp
insl
mov
lcall
or
stos
adc
or
daa
in
and
idiv
subl
insl
add
int
shr
pop
jl
mov
filds
lea
jne
jecxz
adc
hlt
xor
pop
inc
sbbb
inc
imul
aaa
sbb
mov
scas
cmp
xor
cld
mov
add
mov
jge
mov
push
jo
mov
mov
lret
push
or
pop
mov
xchg
push
mov
xchg
jno
sbb
cwtl
mov
popf
setge
in
cld
pushf
inc
jmp
pop
xchg
and
xchg
incl
fcmovnbe
nop
aaa
push
push
mov
ret
dec
aaa
adc
dec
bound
es
out
cmpl
cmp
or
push
les
out
mov
cmp
loopne
cmpsb
pushf
cmp
xlat
mov
push
lock
mov
sahf
int3
cmpsb
cli
push
sti
incb
pop
xchg
jp
sub
push
xchg
aaa
fwait
jg
mov
adc
dec
xor
stos
mov
sbb
inc
cmp
lahf
jle
dec
and
mov
jno
adc
mov
pop
dec
add
outsl
mov
mov
push
jnp
inc
icebp
ja
fwait
mov
in
mov
sbb
xchg
shll
xor
jg
inc
int3
fs
arpl
filds
shl
mov
ret
in
and
leave
jp
xchg
popa
pop
and
sarl
push
ds
scas
mov
dec
or
sub
or
dec
sti
adc
in
call
inc
lahf
jle
or
pop
push
cli
or
repz
out
jbe
sahf
cltd
mov
pushf
and
mov
andb
data16
cmovge
stc
mov
inc
xchg
les
gs
cld
mov
push
int
enter
sbb
pop
dec
lods
dec
rorl
rorl
loop
fldenv
test
sub
lds
das
sbbl
call
sbb
lcall
mov
hlt
mov
adc
arpl
lret
cmpsb
stos
repz
addr16
push
jge
fcomps
daa
lock
jo
cltd
js
out
shl
imul
dec
pop
shl
jecxz
sub
push
in
adc
loop
push
bound
push
sub
mov
push
shrl
or
cld
xlat
sbb
dec
mov
aas
mov
xchg
call
inc
sarl
js
dec
push
gs
aam
in
addr16
das
and
lcall
test
pop
call
rclb
jbe
push
adc
inc
xchg
addr16
sbb
or
mov
inc
jno
adc
or
fcoms
and
mov
cmpsl
add
xchg
hlt
jge
sub
popf
and
loopne
icebp
mov
loop
and
outsl
xlat
sub
mov
xor
xor
test
cld
arpl
cmp
sub
hlt
mov
repz
jle
inc
fldl
add
add
lea
jne
outsl
jne
jnp
or
adc
sbb
cmp
and
out
or
loope
mov
in
push
inc
inc
idivb
imul
cwtl
scas
dec
mov
jge
std
ret
daa
push
sbb
cmp
into
xchg
lret
popa
std
aam
or
mov
bound
ret
mov
inc
and
je
fisubrs
xorl
push
and
out
mov
push
in
aam
jmp
or
mov
mov
lds
andb
dec
leave
insl
data16
mov
dec
lea
dec
daa
inc
dec
sub
add
jns
adc
mov
push
xchg
jo
pop
ffreep
outsb
popf
add
mov
scas
xchg
scas
dec
cmp
push
mov
adc
fwait
jle
xor
fidivs
or
loop
fbstp
push
or
and
mov
add
jle
fidivrs
mov
loopne
mov
imul
mull
lcall
mov
loop
fstpt
or
cmc
xor
stc
outsb
cmpb
mov
test
addr16
adc
push
push
sub
pop
mov
dec
fdivrl
test
inc
jns
cmp
ja
xor
dec
adc
push
jl
popa
adc
fs
add
aam
jno
ja
mov
aad
pop
call
xor
int3
dec
jb
adc
popf
jl
loop
mov
jle
mov
loop
pop
stc
push
mov
pop
cmpsb
add
jmp
pop
cs
jbe
push
jo
xor
cmp
push
mov
loopne
jl
enter
xor
push
rcrl
insl
jnp
clc
enter
xchg
cmp
mov
movsb
sub
mov
les
xchg
icebp
lock
pop
mov
outsb
movsl
mov
pop
rolb
sti
inc
imul
sub
push
into
out
aas
mov
pop
lret
bound
call
clc
pop
lock
mov
or
pop
add
loope
sub
sub
push
lea
mov
aad
fmuls
fcmovnbe
sub
push
es
pop
insb
mov
icebp
mov
idivl
jns
and
mov
or
jl
xchg
sbb
out
lcall
pop
lret
jbe
sbb
rolb
xchg
xor
enter
pop
sbbb
cwtl
lds
mov
insb
scas
jb
aam
ffreep
or
push
cmc
std
push
insb
clc
adc
call
int
je
mov
pop
dec
jae
mov
sub
in
jmp
mov
int3
out
std
xor
xchg
push
aad
dec
add
cmp
insb
outsb
stos
outsl
dec
fdivrs
sbb
pop
pushf
or
in
out
notb
repnz
xor
imul
fsubl
scas
xor
arpl
adc
imul
enter
inc
pop
test
out
and
adcb
mov
call
insl
leave
in
fwait
ja
mov
das
lds
nop
scas
push
adc
stos
jns
in
mov
aas
shrb
inc
scas
add
cmp
cmc
sbb
xchg
orb
pop
mov
mov
dec
movsl
push
push
push
daa
test
popa
jl
jbe
push
test
push
sti
cwtl
cmp
loope
inc
sub
xchg
iret
adc
sahf
mov
call
cmp
fwait
cmp
jmp
push
leave
aas
sbb
aaa
lods
xchg
add
push
jle
push
adc
inc
dec
daa
mov
jle
mov
sbb
and
pop
jne
clc
aad
and
or
cmp
or
cmp
jns
inc
test
xchg
mov
push
jge
dec
int
outsb
sub
lcall
data16
hlt
pop
das
sbbb
sbb
xchg
rorl
sti
push
xor
push
insl
cmp
add
ret
cmp
push
pop
jbe
in
popa
pop
xchg
insl
push
call
nop
hlt
out
dec
xor
movsl
ss
cmp
sahf
add
and
mov
out
js
popf
out
dec
dec
xor
aad
icebp
mov
mov
sub
int3
mov
dec
pushl
fidivl
sbb
sub
lahf
jmp
pop
incb
test
jg
ds
inc
sti
lahf
inc
outsb
and
in
dec
test
dec
dec
lods
pop
pusha
sub
sbb
enter
outsb
inc
rcrb
adc
cli
sbb
lds
in
jae
mov
stos
subl
ret
jno
add
pop
pop
and
je
mov
dec
icebp
add
arpl
cmpb
dec
xor
inc
lcall
xchg
std
inc
test
jge
cs
jno
movsb
pop
xor
cmc
jo
lcall
mov
jae
fnstcw
scas
outsl
mov
sub
pop
push
addr16
std
or
pop
insl
inc
or
push
push
scas
popf
lcall
jle
scas
lcall
lcall
mov
mov
inc
lahf
ljmp
mov
or
bound
cmp
inc
popa
add
dec
test
mov
mov
dec
or
imul
jns
jp
cmpsl
lahf
cmc
mov
emms
sub
pop
ror
scas
gs
out
jo
mov
fstl
roll
cmpl
push
cmove
in
int3
insb
in
and
sbb
xor
cs
mov
pop
sahf
in
xchg
arpl
nop
out
fildll
addr16
cli
mov
mov
pop
sub
jne
sub
test
in
movsb
mov
pop
dec
arpl
mov
inc
pop
jbe
adc
into
mov
sub
fs
mov
hlt
out
dec
repz
popl
loope
inc
mov
sub
mov
xchg
dec
and
cmc
enter
mov
add
add
dec
cmp
ret
and
push
dec
leave
inc
xor
cs
push
lcall
jno
sub
sbb
xchg
mov
stos
idiv
sub
sub
mov
bound
cmc
ret
or
stos
outsb
pop
mov
and
shrl
out
sub
inc
mov
fs
dec
dec
xchg
daa
aad
mov
mov
pop
int
arpl
arpl
and
or
mov
je
stos
push
xlat
mov
jg
cmp
pusha
int3
adc
int
jnp
cmpsb
sbb
or
call
fldl
enter
arpl
pop
jns
call
mov
add
inc
xor
aas
js
jb
das
outsb
and
lods
std
mov
push
inc
jg
mov
xchg
rclb
test
addb
or
mov
into
cmp
push
lods
push
ds
push
outsl
fldt
and
fdivrl
push
aas
add
divb
mov
mov
notl
sub
or
pushf
repnz
pop
fs
aaa
cwtl
icebp
mov
and
aas
jge
jmp
ret
imul
inc
fstl
pop
push
cli
cmp
cmp
mov
daa
mov
sub
cmpsb
inc
pusha
movsl
ficoml
ljmp
lock
lea
punpckhwd
xchg
icebp
xchg
repnz
rclb
inc
int
dec
aaa
test
inc
mov
bound
and
xor
ds
out
stos
loopne
cmpsb
add
add
inc
bound
lahf
rorl
sub
ret
sbb
jg
xor
jp
sbb
cld
xor
hlt
pop
or
xor
xor
or
jnp
lret
cs
stos
adc
ss
repnz
insb
outsl
movsl
xor
push
mov
icebp
pop
inc
mov
pop
popa
popf
ret
pushf
inc
mov
mov
jno
mov
pop
lods
cld
loopne
sub
xchg
mov
aaa
dec
sbb
xchg
mov
cwtl
sarl
lea
ret
push
lahf
or
mov
sarl
jns
ljmp
enter
cmovno
jmp
movups
xchg
inc
out
jb
nop
xchg
in
ret
cltd
sarl
mov
int
movsl
add
in
push
sbb
mov
push
lods
lret
mov
pop
sahf
or
loop
adc
xchg
cmp
jcxz
jbe
shl
mov
mov
shl
or
jo
out
inc
jmp
add
mov
mov
xchg
fmull
mov
sbb
add
sub
sbb
push
leave
push
divb
pop
mov
scas
out
fs
dec
push
hlt
outsb
xchg
js
pop
mov
xchg
jp
mov
lea
aam
pusha
inc
mov
cmp
repz
data16
or
and
mov
xchg
aas
hlt
cwtl
push
xor
lea
jge
in
popf
adc
imul
fs
test
xor
xchg
mov
ss
jg
xchg
arpl
test
or
push
inc
negb
jne
and
mov
or
stos
shlb
mov
jecxz
rcll
cmp
sub
enter
xlat
incb
lahf
lods
push
mov
mov
popf
add
sahf
daa
mov
pop
outsb
scas
inc
arpl
push
insb
push
ret
inc
jb
pushf
aaa
push
aas
mov
xchg
int
inc
dec
inc
lds
orl
sbb
popf
les
pop
mov
imul
cmp
test
xchg
dec
pop
inc
jno
jae
jne
frstor
mov
sub
aaa
sti
add
mov
outsb
fcmovbe
pop
xor
ficoms
push
adc
loopne
ret
mov
in
or
inc
mov
sbb
xor
xlat
mov
sti
pop
or
lret
out
mov
push
ja
les
xchg
cmp
fs
adc
cmp
xchg
cmp
fldl
int3
js
in
jnp
push
mov
test
inc
lods
dec
sub
std
hlt
adc
ret
pop
mov
jno
or
movsl
sub
mov
xor
add
sbb
gs
push
lret
hlt
jns
push
push
sbb
stc
fstpl
loopne
testb
jb
adc
or
aaa
lods
mov
push
and
leave
sbb
je
bound
inc
scas
lea
xchg
repz
and
sbb
fldt
negl
add
jecxz
dec
pusha
imul
lret
outsl
dec
fsubl
dec
jmp
imul
pop
push
jmp
int
push
mov
dec
cltd
cmp
repz
pop
adc
popa
arpl
jo
in
mov
out
je
push
stos
lds
clc
sub
shll
jne
inc
div
adc
aas
sub
stos
rclb
popa
jb
or
mov
testl
mov
fidivl
mov
mov
push
scas
and
or
jns
leave
add
mov
pop
jp
inc
mov
call
push
adc
jecxz
in
jecxz
jo
les
scas
dec
sbb
dec
or
mov
sbb
mov
cmc
adc
call
xor
sbb
sub
xchg
and
cmp
out
pop
xor
nop
fwait
loop
ljmp
xlat
xchg
lcall
fcoms
bsr
mov
xor
fistpl
push
or
and
sbb
inc
jl
sub
inc
fisubrs
adc
ljmp
fistpll
sbb
scas
xchg
xor
loopne
fadd
push
dec
inc
stos
jp
outsl
adc
imulb
mov
es
xchg
addr16
lods
xchg
ss
inc
test
jno
push
push
xchg
sar
je
jle
sbb
incb
stos
rcr
mov
js
mov
test
push
test
pop
inc
js
inc
fwait
insl
jbe
movl
mov
adc
xchg
pusha
fnstcw
mov
dec
insl
jge
popa
mov
les
add
stc
movsl
repz
std
push
fimull
lds
inc
mov
xchg
aaa
mov
lock
inc
jne
int
fnstenv
in
pop
xor
and
mov
jo
fs
popf
insb
iret
mov
jae
mov
test
in
icebp
xchg
xchg
popf
aaa
nop
ljmp
adc
fidivrl
push
int
xchg
push
adc
dec
imul
repnz
jp
inc
xchg
jg
sarb
je
sbb
add
sahf
mov
inc
aad
std
aad
arpl
push
fstl
leave
or
xchg
sti
or
and
add
cmpsb
push
pop
or
jbe
arpl
add
je
cmp
pop
mov
xor
mov
rcll
or
or
xchg
fwait
loope
pop
hlt
std
repnz
push
xor
xchg
mov
push
sbb
and
mov
gs
test
jecxz
or
sbb
mov
out
sub
nop
repz
pop
jecxz
shrb
loopne
push
sub
push
mov
push
test
add
js
dec
test
mov
insb
jmp
fbstp
jnp
sbb
push
out
and
pop
sub
dec
xor
cmp
and
xchg
dec
in
inc
out
stc
lods
sub
aaa
dec
xor
clc
sbb
sbb
and
shrb
xchg
add
je
fcomps
pop
xchg
cmc
dec
or
fs
fdivrl
nop
scas
fucomip
xchg
cltd
in
pop
cmp
popf
faddp
mov
lock
or
or
insb
scas
push
ljmp
mov
je
mov
sbb
mov
std
mov
dec
sub
jg
xor
push
repz
popl
rcr
leave
lods
pop
jl
sub
push
and
sub
vaddsd
stos
or
iret
js
or
lods
loope
push
lds
xchg
sbb
nop
stos
enter
addr16
call
lods
sub
lds
in
popa
jg
fwait
jmp
and
mov
iret
aam
lock
jp
je
iret
bound
std
push
cmp
cltd
mov
lret
movsb
movsl
enter
pusha
and
lods
icebp
fwait
and
repz
xor
dec
orl
addr16
mov
fcoml
sbb
xor
jmp
xor
ja
inc
shrb
xchg
jnp
add
sti
iret
push
clc
jmp
aas
mov
fidivs
cld
arpl
gs
std
lret
inc
popa
out
sbb
aaa
and
out
add
roll
clc
jae
decb
cmp
shlb
xor
jae
sub
ret
mov
push
pushl
pop
shll
adc
inc
cmp
pop
push
in
sbb
ret
fistpll
push
roll
push
outsb
mov
mov
bound
mov
lea
adc
pop
std
push
dec
xchg
mov
lods
jnp
inc
cmpsl
jle
jb
movsb
inc
leave
mov
aam
fcoml
inc
outsb
rorl
cltd
cmc
dec
or
adc
jb
inc
andb
inc
cmpsb
outsl
jge
jbe
lret
push
pop
pop
scas
or
dec
pop
dec
and
add
pop
and
mov
push
or
cmp
xchg
outsl
add
sahf
std
mov
mov
fidivrs
fisubs
jmp
cmp
in
cld
std
pop
xor
lahf
mov
mov
dec
and
adc
test
aad
iret
lds
loope
inc
popa
jp
sbb
fistps
and
jmp
cltd
test
ss
mov
pusha
cmc
and
cmp
push
popa
lret
dec
or
pop
shll
subl
mov
bnd
int
sbb
and
sbb
test
inc
cmp
or
pop
stos
outsl
bnd
mov
fsubrs
push
addr16
lods
call
xchg
dec
mov
mov
cwtl
bound
rcr
sub
shr
cltd
mov
sbb
js
outsl
or
cld
rcll
mov
and
xor
out
cmp
hlt
mov
scas
and
lea
dec
stos
push
clc
cld
inc
out
adcl
or
pop
push
fiaddl
mov
xor
mov
das
mov
dec
jo
sbb
jle
push
in
sbb
pusha
jo
jp
lods
mov
into
mov
jbe
add
shl
and
inc
fidivl
jg
enter
cwtl
fwait
clc
leave
pop
shll
sbb
add
pop
cmpsl
hlt
jmp
jg
jno
cmp
icebp
arpl
push
test
push
fidivrs
in
push
mov
movntps
ljmp
data16
stos
or
xorl
dec
jo
and
bound
jbe
stos
sub
dec
repnz
fucom
cltd
lds
adc
or
xchg
inc
or
xchg
std
sub
xchg
mov
sahf
rclb
sub
pop
leave
pop
mov
outsl
js,pn
adc
fimuls
xchg
aaa
pop
cli
push
sub
xchg
ds
pushf
hlt
imul
jae
and
or
mov
insl
add
and
jbe
mov
or
xchg
cmp
mov
cwtl
mov
mov
fcoml
sub
jnp
or
mov
aaa
negb
das
testl
jle
cmp
movsb
jnp
ja
enter
and
ljmp
push
or
nop
dec
mov
rclb
fsubr
inc
mov
mov
dec
ret
mov
push
cmpsl
dec
fimuls
cmp
loop
push
rol
mov
imull
rol
out
jae
ret
stos
leave
push
or
pop
fldt
insb
mov
fs
and
adc
lods
loopne
dec
in
out
shlb
mov
dec
xor
test
mov
fnsave
or
fsubrs
in
mov
adc
and
pmulhuw
sub
sbb
jge
outsb
aam
roll
cmp
add
push
push
mov
or
pop
push
adc
lods
pop
mov
ja
pop
mov
popf
mov
xchg
pop
mov
clc
rorb
sub
stc
lahf
dec
push
pop
xor
mov
jne
clc
push
mov
outsl
add
leave
testb
and
pop
jo
lea
bound
gs
mov
arpl
sub
mov
test
pop
lret
fimull
mov
movsb
adc
sbb
lcall
in
jle
jb
mov
push
jmp
mov
mov
and
mov
jo
xor
pop
and
xor
and
dec
fbld
mov
xchg
aaa
aam
jg
add
fs
imul
imul
data16
mov
sub
shll
mov
cmp
cmp
push
jb
lea
mov
loope
popa
mov
loopne
jne
popf
iret
sbb
out
jae
out
sub
mov
js
imul
enter
sahf
rdtsc
push
icebp
jbe
rol
cmp
div
xchg
outsl
mov
and
add
shll
inc
mov
scas
cmp
pop
outsl
cwtl
sbb
pusha
lcall
mov
or
fisubs
dec
fwait
push
push
daa
arpl
in
testl
cmp
test
pop
mov
adc
xchg
add
es
and
aam
dec
xor
popa
lret
xor
shlb
and
mov
call
add
xchg
xchg
scas
jecxz
cld
add
sti
sbb
inc
sbb
add
rcll
mov
dec
or
cld
mov
out
push
add
sbb
push
jae
pop
lds
adc
cld
in
lea
out
sub
rolb
push
bound
in
dec
and
add
xchg
sbb
ja
mov
xchg
cltd
rep
push
in
add
stc
mov
and
repz
mov
mov
roll
dec
sub
xchg
xchg
aam
imul
sub
mov
in
in
divb
or
sub
rcrb
std
dec
scas
push
dec
outsl
cs
pop
fcomp
cltd
inc
inc
cmc
pushf
sbb
les
jmp
cmc
dec
jb
dec
xchg
push
pop
ret
mov
sub
ds
out
mov
push
and
es
adc
and
enter
mov
dec
cmp
leave
and
mov
popf
xchg
in
int
mov
sbb
imul
clc
int
cs
xchg
cmp
dec
rolb
adc
lea
test
cmp
sarb
cwtl
or
testl
jge
aas
add
cmp
adc
enter
jae
inc
sbb
stos
xchg
add
jne
roll
rcrb
call
in
and
sahf
in
xchg
testb
or
add
shlb
mov
repnz
pop
test
or
in
bound
xchg
cmpsb
sub
fsub
xchg
sarl
or
in
jnp
dec
adc
inc
mov
popa
enter
adc
out
inc
cmp
fmuls
mov
mov
or
or
xlat
pause
xchg
dec
rcrl
lcall
nop
xor
xchg
out
outsb
pop
xchg
push
stc
mov
aaa
call
cmp
push
cli
and
rol
push
xchg
push
adc
adc
jno
inc
push
enter
mov
inc
jp
repnz
push
adc
scas
daa
test
fimuls
or
add
cmp
test
hlt
lcall
enter
sub
lret
cmp
jno
mov
adc
in
repz
mov
out
sbb
lods
outsb
mov
js
sbb
xchg
adc
mov
mov
mov
adc
stc
jmp
mov
mov
sahf
mov
mov
mov
fs
shlb
or
add
test
or
xchg
psrad
xchg
inc
push
lods
sbb
and
inc
mov
mov
enter
test
les
and
cli
dec
lods
in
hlt
dec
add
add
mov
lea
sbb
aaa
stos
leave
sbb
loopne
fimull
xor
push
inc
dec
dec
outsb
nop
mov
cmpsl
mov
mov
ja
xor
loop,pt
and
cmp
jne
jle
fldt
add
mov
popa
in
insb
loopne
movsl
popf
int
xlat
hlt
js
and
cmpsb
inc
or
iret
fsubl
ja
mov
pop
mov
aad
and
dec
push
cwtl
movsl
mov
mov
jg
daa
jle
push
cli
mov
adc
cmp
sub
mov
ficoml
jnp
mov
ljmp
cmc
adc
sti
into
jae
add
daa
dec
stos
fmull
dec
fiaddl
jo
xor
cmp
push
add
lds
push
jno
dec
aas
push
push
loope
sub
jns
add
pop
adcl
lret
imul
testb
mov
bound
int3
xchg
repnz
ds
ret
test
rep
stos
sahf
fimuls
adc
testb
neg
pop
adc
jl
in
repz
rorl
int
sub
or
in
mov
push
fsub
adc
add
sbb
cltd
into
pop
out
mov
into
or
xlat
mov
jne
inc
out
xchg
hlt
mov
and
sbb
sub
insl
repnz
aad
inc
adc
adc
push
xchg
loop
xchg
fidivrs
shlb
aas
imul
loopne
scas
adc
jg
mov
inc
mov
push
outsl
push
mov
outsl
ret
xchg
mov
inc
cmp
xchg
iret
pop
jo
cld
bswap
into
sbb
int
jmp
cmp
test
cld
mov
mov
loopne
in
int3
ja
popf
gs
pushf
mov
jmp
pop
pop
and
jl
xor
xlat
cmc
insl
cwtl
and
mov
pop
mov
xchg
test
add
pushf
pop
loope
mov
aad
iret
sub
sbb
pusha
xor
pusha
dec
fldl
testb
dec
push
ja
jl
dec
mov
leave
cs
gs
or
or
mov
insl
fimuls
pop
sti
fisubrl
sbbl
push
cmp
fdivs
cmp
add
add
cltd
inc
movsl
jmp
push
mov
mov
or
cli
test
enter
pop
inc
pop
inc
xor
pop
jae
add
shrl
sbb
mull
mov
bound
shrl
popa
cli
idiv
sub
pop
nop
out
in
sbb
add
mov
push
stc
and
cmp
in
fstpl
cs
jnp
add
aas
xchg
std
xlat
lahf
lods
je
scas
popf
scas
sbb
arpl
push
mov
in
sub
sbb
lds
test
out
pop
xchg
mov
dec
xor
shlb
aaa
push
jg
mov
daa
adc
adc
jnp
or
std
filds
or
lds
add
or
xchg
js
icebp
in
push
ljmp
loope
sub
imul
aam
pop
icebp
push
mov
addr16
fidivrl
adc
inc
pop
rol
mov
icebp
pusha
and
jns
outsb
jns
insl
adc
stos
test
push
xchg
lods
push
and
sbb
add
popf
mov
lods
fwait
out
sub
lods
pop
icebp
imul
xchg
push
push
sub
inc
xchg
test
mov
aaa
push
sbb
shrb
mov
and
getsec
pop
cmpsl
and
test
pop
loopne
in
lock
cmp
lock
call
or
test
mov
push
xor
cmp
aam
jmp
ss
or
in
aam
call
shrl
adc
lods
pop
mov
in
mov
dec
clc
mov
loop
fs
arpl
sbb
lahf
lods
or
jmp
jae
mov
cmp
ja
sbb
out
dec
mov
aaa
push
int3
push
lods
mov
mov
push
call
loope
lods
scas
fwait
lret
lds
insl
movsb
fcom
cmp
fldenv
sub
inc
pop
lcall
popl
das
xchg
xchg
sbb
fstpt
pop
addr16
nop
repz
or
xchg
xlat
bound
adc
das
nop
mov
test
fisttpl
inc
seta
clc
jnp
xchg
shr
popf
out
fs
aaa
fidivl
dec
cmp
into
sti
mov
sahf
pop
dec
sub
in
mov
and
out
cmc
xchg
push
or
insl
mov
adc
cmp
push
xor
add
push
mov
rorl
ret
cmpsl
mov
test
xchg
pop
jmp
popf
in
mov
pop
jae
rcrb
insb
push
pop
repz
sub
adc
and
ror
xchg
mov
lods
sub
aam
adc
jmp
mov
adc
pop
mov
mov
cld
push
cmp
jp
xor
inc
repnz
pop
into
test
sbb
and
jl
push
adc
je
and
dec
pushf
pop
cmp
stos
insl
sbb
inc
inc
fistl
or
cmpsb
dec
fbstp
sbb
jbe
pop
ja
sbb
mov
and
scas
jg
out
lcall
xor
imul
pop
xor
in
enter
xchg
aas
dec
push
or
push
mov
das
mov
cmpsl
adc
call
nop
and
bound
and
and
push
out
gs
mov
jle
adc
gs
sub
cltd
cmp
scas
rcr
loope
push
in
stos
aas
lcall
pop
xor
add
add
pop
dec
sbb
sbbb
repnz
mov
gs
loopne
dec
fcompl
xchg
inc
stc
dec
mov
xchg
or
cmpl
fidivl
daa
push
loope
add
mov
add
push
adc
add
xrelease
cmp
sti
out
sti
movsl
rcr
pop
sbb
call
arpl
mov
push
sbb
sub
or
cmc
enter
nop
xor
sarl
cmp
daa
into
into
lods
popa
dec
stos
xchg
ja
pop
adc
and
sti
lret
add
gs
int
dec
mov
js
inc
xor
adc
jp
inc
xor
jle
or
and
push
scas
inc
out
rorl
mov
ret
sub
sbb
and
mov
jb
in
mov
push
jo
dec
sbb
push
out
mov
daa
mov
outsb
mulb
mov
mov
in
push
xor
mov
test
bswap
fmull
in
arpl
test
mov
xorl
adc
ss
bound
push
dec
mov
sub
mov
xor
mov
cs
xchg
es
fyl2xp1
dec
int3
mov
sub
mov
push
push
test
lret
pusha
and
popl
add
inc
hlt
lods
adc
jle
mov
loope
xlat
jmp
sub
sub
mov
cmp
xor
adc
fs
fnsave
mov
scas
inc
lock
mov
out
movsb
fcompl
sbb
loope
dec
dec
mov
pusha
popa
dec
add
cmp
xchg
fcmovne
add
fldt
dec
negb
dec
and
cmpsb
subl
adc
jae
shl
mov
and
pop
popf
imul
dec
jne
or
repz
mov
push
push
dec
setnp
stos
xorl
nop
imul
scas
cpuid
push
xchg
orl
mov
inc
or
stc
ljmp
rcrb
dec
fldenv
mov
mov
test
mov
aas
inc
pcmpgtw
hlt
imul
es
mov
or
mov
iret
pop
adc
pushf
xor
mov
lods
repz
scas
and
mov
leave
adc
xor
lods
iret
jg
repnz
int3
adc
inc
aaa
cmp
sbbb
pusha
mov
jae
inc
cmc
ret
movsl
pop
das
jbe
pushf
sbb
adc
add
add
adc
adc
or
aam
repz
addl
loopne
jp
iret
jge
sbb
mov
add
movsl
je
fidivs
lahf
lcallw
sahf
mov
xor
cli
aad
fidivrs
sbb
loope
aam
das
and
fs
fcoml
out
sarl
cmc
mov
mov
cmpsb
std
and
and
shlb
stc
in
in
test
cwtl
mov
loop,pn
or
inc
mov
test
call
adc
pusha
xor
mov
push
sbb
xchg
dec
cmp
movsb
rcr
add
das
mov
pushf
mov
aad
shrl
mov
mov
fists
pop
das
inc
pop
pop
arpl
pop
mov
out
das
jg
jno
test
fwait
sub
orl
mov
sti
notl
std
pop
cmp
jae
in
pop
cmp
lock
mov
mov
lcall
in
dec
adc
mov
stc
imul
lock
loope
mov
push
mov
and
pop
mov
pop
mov
or
in
adc
imul
cmc
dec
arpl
dec
or
mov
xor
enter
inc
sbb
pop
mov
jne
outsb
aad
xchg
sub
inc
daa
stos
frstor
sbb
jge
shl
mov
in
push
aaa
mov
rcr
stos
rorl
pop
pop
pop
test
sub
inc
popf
inc
mov
imul
mov
inc
xchg
aad
and
xor
ficomps
popf
add
mov
rcrb
in
mov
jecxz
dec
jno
sub
out
loop
dec
cmc
sub
jne
loop
imul
imul
jnp
pop
fs
xorb
jno
out
dec
in
outsb
push
mov
xor
iret
sub
xor
xorl
ss
cmp
scas
pop
ret
fidivs
xorl
mov
mov
pop
or
outsl
in
and
repz
insl
cld
and
sahf
push
inc
testb
or
outsb
gs
xor
pop
cmp
push
jecxz
adc
sbb
out
scas
sbb
je
test
jp
movsl
mov
jp
pop
aaa
sub
mov
jns
pop
fcoml
jle
xchg
add
adc
add
add
mov
cmpb
movsl
mov
je
jno
sub
inc
xchg
fimuls
mov
add
mov
div
nop
enter
repz
or
nop
outsb
lret
iret
pop
sbb
out
popa
sti
push
scas
push
into
push
dec
in
jmp
cmp
sub
push
scas
sub
mov
cmpsl
stos
sbb
pop
push
mov
mov
leave
xchg
cmpxchg
hlt
mov
sub
shll
inc
cpuid
fbstp
test
cltd
lcall
popa
jno
mov
repz
inc
dec
mov
mov
and
jg
push
js
cmp
loopne
stc
stc
shl
gs
push
sbb
pop
lret
roll
pop
xchg
push
in
imul
pop
jo
clc
ss
jae
pop
ret
clc
dec
pop
xlat
mov
sahf
inc
push
jecxz
lahf
std
xor
enter
push
mov
add
je
dec
int3
jne
cmp
stc
scas
pusha
fldl
lds
pop
icebp
mov
push
push
test
movsl
imul
push
dec
push
out
jg
pushf
sub
push
mov
mov
dec
mov
mov
cmp
add
rcll
int3
lret
jns
dec
es
xor
push
outsl
sub
add
sbb
adc
std
addb
ss
iret
push
pop
in
and
subl
bnd
mov
outsl
sti
ficoms
push
mov
push
into
cmp
negl
fdivs
int
xchg
fnstcw
stos
in
ss
and
cli
fmul
shl
lcall
or
lea
das
dec
mov
or
shrb
pushf
xor
pusha
xchg
dec
idivb
rcrl
into
mov
scas
stc
bound
out
insb
mov
std
dec
or
dec
mov
cli
cld
mov
loopne
std
mov
and
mov
dec
and
adc
or
mov
outsl
fucomp
out
lcall
addr16
sbb
sbb
insl
addr16
pop
mov
xlat
lock
iret
lret
adc
or
mov
testl
jg
xchg
aaa
fstps
push
sbb
int3
pop
sbb
js
iret
stos
les
les
xor
push
cmpsl
addr16
scas
imulb
and
dec
sbb
xchg
enter
xor
leave
cmpsb
xorl
mov
rep
std
test
jno
je
les
arpl
jae
stos
mov
leave
xchg
testl
insl
ficompl
arpl
fs
push
xor
push
mov
int3
cmp
andl
pop
jmp
sub
lods
cmp
and
imul
into
or
and
push
jecxz
sbb
in
jecxz
push
mov
test
movsb
or
shr
outsb
mov
dec
cmpsb
jmp
lahf
cwtl
and
outsl
insl
loopne
push
mov
push
pop
inc
add
std
in
push
cld
adc
scas
sti
mov
adc
pop
mov
pop
dec
mov
inc
sbb
push
mov
pop
je
cmp
mov
mov
lret
mov
pusha
insb
call
std
jg
ret
cmp
push
jb
jns
stc
jae
mov
sbb
add
test
mov
mov
and
add
adc
xchg
fcom
fcoms
pop
adc
xor
xchg
ljmp
shrb
adc
scas
cmp
pop
fsubr
das
xor
ficompl
mov
shll
cs
in
sbb
pop
hlt
test
test
mov
jl
cld
movsl
sbb
les
dec
pop
mov
test
push
push
inc
sub
pop
dec
loop
jle
jno
mov
clc
lcall
sub
negl
adc
inc
fldenv
mov
sbb
mov
aas
imul
push
xor
out
popa
mov
js
subl
push
xchg
mov
mov
dec
rcr
push
imul
adc
xchg
sbb
push
adc
pop
jo
xor
inc
sbb
sahf
int3
push
mov
pop
out
xchg
jnp
insb
sub
mov
xchg
stos
pop
push
je
xchg
outsb
popa
cmp
cli
mov
mov
and
fists
push
mov
test
sar
and
mov
lods
pop
pop
jg
fsubl
dec
mov
lcall
sbb
je
lods
mov
lea
pushf
jge
sbb
xor
test
mov
jne
dec
movsl
outsb
sbb
jb
addb
add
and
hlt
xchg
stos
aaa
and
or
cmp
aam
clc
dec
int3
insb
mov
xchg
sub
push
inc
sbbb
sbb
mov
push
repnz
lds
and
or
jae
pop
aas
into
clc
add
jp
enter
dec
negl
imul
into
data16
adc
cmp
insl
xor
outsb
imul
mov
pusha
push
push
and
lahf
scas
pushf
xor
cmc
mov
pop
lods
scas
cmp
fwait
insl
inc
add
adc
dec
aad
inc
addl
jae
testb
mov
outsl
ror
cltd
mov
lahf
push
int
lahf
xor
pusha
push
sbb
int3
clc
stos
in
cltd
push
sub
cwtl
push
enter
mov
xchg
inc
int3
loope
jbe
add
out
inc
xchg
sub
pop
and
xchg
clc
and
or
pop
repnz
test
jmp
jle
and
adc
leave
xlat
insl
push
mulb
es
stos
lcall
out
out
sbb
mov
mov
cmp
cmp
leave
xor
lret
cwtl
outsl
push
pop
sti
dec
adc
cmpsl
adc
mov
stos
insl
jb
lret
sti
xor
repnz
xor
pop
xor
imul
xchg
mov
addb
test
mov
cmc
imul
pop
in
pop
sub
popf
jp
cmc
mov
push
ja
lret
sahf
sbb
sbb
sub
pop
inc
out
nop
push
test
das
iret
shl
add
std
stc
out
stos
pop
sbb
dec
jge
jle
outsl
loop
data16
out
mov
push
rclb
rorb
scas
rolb
test
or
push
pop
mov
mov
gs
xor
xchg
jne
clc
sub
sbb
movl
push
push
fcomi
adc
outsb
dec
mov
jmp
inc
cltd
fs
push
lock
leave
inc
adc
mov
mov
imul
pop
mov
repnz
and
iret
dec
sbb
cld
inc
inc
jno
inc
sub
aaa
ret
and
mov
jno
add
test
scas
aaa
xchg
mov
out
repz
sbb
push
push
and
movsb
ss
xchg
in
cmp
ficoms
repnz
pop
xor
test
and
pusha
or
fdivrl
jecxz
jbe
leave
jmp
and
daa
mov
icebp
ja
loope
dec
aad
imul
and
push
imul
clc
out
outsb
or
add
sbb
push
jg
push
adc
call
push
lcall
dec
mov
add
sbb
shlb
mov
out
decl
mov
fcompl
mov
adc
pushf
arpl
fimuls
in
push
ss
ret
cltd
testb
iret
add
mov
sub
xor
outsl
nop
xchg
add
ss
sub
push
xchg
jo
popf
fcomip
negl
add
pop
cmp
mov
push
test
popf
gs
inc
jns
xchg
cwtl
scas
sbb
in
or
fwait
rclb
fimuls
mov
or
and
xchg
sarb
addl
sbb
add
adc
jo
ljmp
shll
cmpsl
dec
mov
xorl
lds
inc
mov
push
mov
pop
loopne
pop
xor
mov
inc
fisttpll
scas
sub
scas
cmp
mov
cmp
sahf
add
testb
sar
jmp
fldt
cmp
mov
cmp
cmp
daa
dec
cmc
xchg
push
or
dec
jmp
xor
or
mov
mov
sbb
adc
popf
out
fsts
add
add
mov
call
mov
or
sbb
idivb
xchg
pop
out
lods
ljmp
mov
scas
sub
insb
jl,pn
bound
sbb
into
pop
repz
jge
sahf
jge
mulb
into
and
mov
push
adc
jge
adc
xchg
dec
inc
dec
mulb
sbb
shrl
or
mov
dec
dec
ret
dec
test
xchg
adc
fcmovne
push
fisttpll
and
jmp
or
xorb
rcrb
and
push
jl
jb
mov
es
adc
add
sbb
fists
or
icebp
cmp
mov
dec
or
xchg
aas
push
rolb
imul
cmp
sbb
test
and
pop
sahf
seto
mov
js
pop
cmp
fwait
xor
ljmp
jg
cmp
in
cmp
dec
jecxz
cltd
push
push
or
test
int
lock
leave
addr16
or
cmp
aad
inc
mov
iret
sti
aad
push
int
adc
in
das
stos
or
outsb
cmp
mov
pusha
mov
insb
sahf
add
loopne
mov
arpl
add
lock
lea
mov
pop
aas
mov
jmp
das
xchg
jg
mov
lea
push
pusha
out
cld
loopne
and
test
cmp
test
dec
loope
dec
outsl
cmpl
popa
pop
jns
std
pop
aas
lods
and
and
loopne
mov
test
rcll
jns
add
aas
pop
int3
fstps
pop
pop
test
xchg
push
adc
loopne
jp
popa
fnsave
es
ret
insb
pop
xchg
and
dec
push
pushf
jne
inc
jne
iret
xor
daa
aam
jns
aas
int3
xchg
sub
xlat
mov
fisubrs
addr16
inc
in
jno
push
mov
jnp
cli
cs
std
pop
js
sbb
enter
xchg
in
push
xor
daa
leave
ret
inc
popa
xchg
scas
jle
test
sti
int3
adc
insb
js
dec
push
ror
pop
xchg
call
popf
cmp
xchg
xchg
mov
orl
mov
pop
cmp
jnp
lret
cmp
lods
mov
lods
jmp
or
inc
mov
movsl
inc
jmp
pop
mov
in
into
cli
nop
loope
dec
clc
mov
xlat
lods
fs
call
lds
push
jb
dec
sub
sbb
mov
lds
addr16
inc
push
mov
outsb
mov
ss
mov
test
bound
inc
fstl
dec
fldt
out
inc
test
fsubrs
add
dec
mov
mov
xor
icebp
pop
and
push
push
jne
stos
push
imul
scas
adc
ss
inc
jl
cmp
xor
inc
inc
je
mov
xor
out
or
push
xchg
in
xlat
jge
dec
and
sahf
push
loope
stc
movsb
lods
sbb
movsb
je
add
stos
les
lock
inc
in
and
jp
les
pop
adc
inc
lret
jnp
lret
mov
ja
add
and
enter
rorb
pushl
push
xchg
inc
and
outsb
int
mov
jns
cwtl
jl
addr16
sub
jmp
subb
clc
mov
idivb
das
jnp
adc
roll
xor
pop
jmp
pop
out
lods
fbld
adc
mov
stc
pusha
lahf
in
decb
push
inc
inc
jb
icebp
xor
pop
test
lea
in
lcall
adc
mov
mov
add
add
jnp
sbb
or
xor
add
lcall
jb
iret
mov
push
outsl
dec
bound
push
repnz
into
mov
cs
xchg
popa
outsb
ror
or
stos
notb
mov
dec
daa
icebp
fsincos
daa
pop
cmp
fldt
sarl
insb
dec
aas
add
cld
outsl
cmp
int3
daa
jp
outsb
dec
sahf
and
ss
push
sahf
mov
xor
adc
xchg
sbbb
jno
loopne
stos
pop
imul
add
xor
push
jo
xchg
cli
loop
jne
push
sub
outsb
push
sti
adc
push
nop
sbb
das
sbb
add
sbb
push
test
xchg
pop
lsl
je
add
cwtl
movsl
ss
inc
pop
mov
call
jb
mov
xchg
xor
sbb
pusha
shlb
mov
lcall
into
aaa
mov
jge
push
add
push
mov
cltd
inc
jmp
add
xor
push
sub
mov
jp
sub
enter
dec
popf
pop
divl
cmp
inc
in
jecxz
jg
mov
repnz
sti
jns
jb
pop
inc
xor
cmpsl
inc
or
jg
test
add
stos
jmp
sbb
sahf
dec
push
sarl
imull
dec
sbb
gs
jg
fidivl
mov
inc
loope
dec
push
das
ds
jno
pushf
negb
mov
sub
xor
ret
cmp
mov
outsb
xchg
xor
mov
shrb
sub
inc
add
jb
jbe
push
xchg
int
or
out
inc
out
dec
sbb
dec
shr
lea
adc
sbb
and
je
scas
ret
subl
sbb
shrl
pushf
ds
sub
mov
aaa
sub
imul
jp
cmpb
xchg
out
mov
dec
mov
fisubrs
add
mov
or
pop
lret
mov
outsb
jl
cli
mov
mov
jmp
and
push
mov
jns
mov
push
popa
jl
push
pop
xchg
sub
cmp
pop
fnsave
mov
push
push
ret
xor
divb
movl
nop
xchg
movl
jl
mov
lcall
push
mov
pushf
dec
dec
fiadds
xor
sbb
je
mov
fcomip
stc
cmp
lahf
adc
cmc
and
fmuls
out
xchg
mov
mov
mov
xchg
mov
out
adc
or
mov
mov
xchg
fwait
dec
aad
lds
add
jmp
pusha
cltd
mov
ljmp
inc
stos
enter
xor
sbbb
push
loopne,pt
daa
adc
jmp
dec
mov
pop
push
and
push
into
clc
xchg
imul
inc
mov
lea
pop
cmpsl
stc
outsl
scas
push
movsb
fildl
inc
ret
test
dec
adc
add
pop
punpcklbw
cpuid
mov
negb
mov
and
pusha
or
cmp
jns
imul
aad
xor
mov
and
or
mov
insb
ja
add
in
rcll
push
mov
rol
out
imul
and
dec
call
push
dec
into
es
dec
mov
rorl
mov
jae
or
and
xchg
cmp
add
xor
xchg
inc
cltd
repz
xlat
testb
testl
fidivrs
imul
cmp
loope
sbb
out
mov
and
das
mov
test
scas
rol
loopne
mov
sub
mulb
pop
stos
test
and
mov
lcall
movsb
adc
inc
loopne
lahf
andb
xchg
data16
cmp
sub
or
mov
xlat
icebp
inc
fwait
lahf
add
loop
xchg
adc
lea
jl
and
mov
cs
pop
stos
push
sar
cmp
mov
sti
add
mov
dec
jo
pop
dec
mov
lods
and
cs
push
pushf
aaa
inc
pop
mov
loop
or
pop
mov
sub
ds
fildl
xor
faddl
cmp
js
filds
int
mov
mov
aaa
inc
aad
add
imul
dec
xor
ja
in
adc
lods
mov
pushf
add
jl
push
stos
ja
dec
out
jge
jge
lret
sbb
sahf
push
pop
cs
out
and
push
adc
call
mov
push
mov
sbb
xchg
and
add
into
and
add
movsb
or
cmp
sbb
adc
push
ds
lods
sahf
pusha
insb
rcrb
test
bound
int3
xchg
add
insl
pop
and
das
data16
or
inc
int
jb
sbb
cmp
fnstsw
popf
leave
jmp
aam
pushf
pop
or
pmaxub
loopne
scas
sbb
rcrb
test
sbb
inc
inc
xchg
stos
stos
xor
sub
sbbl
mov
pop
mov
dec
dec
unpcklps
xor
sti
xor
sub
dec
std
addr16
mov
mov
and
push
gs
leave
pop
inc
push
xor
sub
repz
test
mov
bound
push
scas
sbb
nop
les
ja
xchg
ljmp
out
and
aas
mov
cmp
sbb
aas
subl
push
xor
dec
imul
mov
jl
in
imul
int3
fbstp
test
daa
inc
std
lods
cltd
or
xor
push
pop
ja,pn
or
xchg
outsb
mov
sbbl
xor
sub
adc
les
and
xor
sbb
lock
xchg
ret
cmp
or
arpl
outsb
push
inc
cli
pop
lods
jp
adc
and
xchg
lock
inc
les
xor
mov
insb
or
mov
xor
ljmp
xor
rcrb
test
pop
jne
ljmp
in
rorb
push
imul
mov
push
mov
dec
xchg
and
xchg
mov
xchg
repz
jns
neg
and
add
mov
pop
andl
xor
bound
aaa
loopne
lods
inc
inc
aad
xor
xchg
test
mov
imul
pop
xlat
ljmp
and
mov
loop
inc
sub
cwtl
push
fdivr
jl
hlt
jbe
cmpsb
cmp
adcb
lahf
mov
dec
push
sub
cmp
cmpsb
mov
stc
mov
mov
xor
int
cmp
mov
sahf
sbbl
mov
aas
xlat
mov
mov
push
and
mov
inc
shl
or
imull
dec
xor
insl
or
ror
js
into
mov
and
mov
jne
mov
or
and
mov
and
add
cmp
sbb
pop
sub
cmpsl
aad
pop
mov
ss
jne
pushf
dec
lret
add
xor
xor
and
leave
ljmp
mov
inc
jmp
sbb
xchg
lret
daa
sbb
iret
jae
push
cmc
xchg
pop
mov
xchg
mov
loop
in
cld
jno
lods
xor
mov
out
sub
pop
sbb
dec
fdivs
imul
fwait
stos
pcmpgtd
jp
loope
sarl
jp
loop
orb
sub
mov
xchg
lret
lods
mov
adc
daa
aam
push
inc
movsb
jecxz
orb
lret
mov
in
rorb
andb
in
sub
mov
push
aas
mov
testb
ret
mov
inc
in
mov
jnp
pop
rolb
jbe
mov
jnp
ffreep
mov
aaa
mov
fwait
sub
dec
push
dec
out
push
or
fistps
push
pushw
push
push
lods
jg
pop
out
pushf
stos
test
push
sbb
mov
mov
fidivrl
and
mov
or
mov
sbb
dec
mov
push
sub
cltd
adc
mov
push
ret
inc
outsb
xchg
dec
adc
loop
xchg
mov
add
add
lahf
xlat
mov
pop
or
rorl
es
and
or
jnp
leave
adc
jno
aas
jne
or
sub
lea
and
jle
add
sub
into
jae
add
mov
push
dec
leave
dec
adc
stos
les
sarl
push
inc
jg
popa
pop
std
or
fcmove
out
and
inc
outsl
or
xlat
push
fadd
sbb
sbb
jge
jp
int3
sbb
fdivrs
and
inc
or
arpl
jl
leave
sub
xchg
jno
in
imul
out
dec
in
incl
jb
and
dec
loop
xlat
popa
lods
imul
push
add
jp
sub
jne,pn
xchg
lret
inc
sbb
ja
sbb
lcall
inc
jb
insb
add
inc
pop
addl
sbb
xor
lcall
cmp
jmp
dec
jge
add
rorb
xlat
push
mov
ljmp
rorl
rorl
push
je
loopne
lods
pop
divl
popa
add
xor
mov
mov
jg
inc
lahf
mov
jle
out
ret
jb
sub
cmp
pushf
jl
mov
fidivrl
ret
lret
or
insl
movsl
mov
and
sti
das
or
sub
adc
mov
rcrb
aaa
int3
mov
cld
pusha
sbb
in
jmp
and
jecxz
pop
cmc
jns
push
cmpsl
xchg
sub
mov
mov
js
fdivr
or
xchg
les
stc
dec
and
cmp
insb
adc
andl
inc
repnz
or
lock
mov
pop
mov
mov
ds
or
cmpsb
xchg
xor
mov
cmp
and
or
pop
inc
mov
fsubrs
jmp
std
dec
adc
lret
stos
push
cmpsb
testl
add
out
leave
arpl
jae
push
pop
lods
int3
in
mov
or
jnp
cmpsb
sub
leave
adc
vmovsd
rorl
mov
sbb
in
sub
fs
adcl
les
in
cmp
jg
mov
test
iret
mov
and
stos
jl
nop
mov
movntps
mov
cmp
repnz
inc
inc
fxch
xor
adcb
inc
pop
inc
jle
shlb
xor
pop
dec
push
stc
jo
fs
movsb
push
testl
jmp
enter
adc
inc
and
mov
int3
mov
fldcw
xor
jmp
inc
mov
and
pushw
xchg
jae
imul
loopne
pop
call
or
out
add
addl
or
addr16
push
jle
repnz
popf
arpl
xchg
jle
ja
jb
pop
sub
sub
gs
dec
pop
aad
jo
xchg
dec
movsl
mov
cmpb
out
push
mov
cld
pop
fld
add
sahf
dec
xor
mov
icebp
out
out
popf
aam
outsb
std
int
jae
mov
mov
mov
inc
sahf
ja
add
cmp
dec
es
sbb
add
pop
cmp
inc
pop
cmc
sbb
loope
push
je
popf
fdivrl
xlat
or
pop
mov
inc
pop
out
mov
mov
add
std
add
sbb
jp
mov
pop
pop
orb
inc
sbb
lods
mov
sti
push
out
ljmp
mov
out
and
std
cmp
mov
addl
bound
cmp
out
pop
xor
jecxz
in
push
mov
pop
jp
xchg
outsl
adc
sarb
xor
pop
mov
push
sahf
lods
sahf
mov
jb
ret
ljmp
loope
stos
daa
mov
push
movsb
call
lea
cmc
out
popa
xchg
add
jmp
pop
or
nop
out
int3
out
lahf
push
dec
insl
push
out
outsl
mov
stos
pushf
aad
fidivs
es
add
jnp
lods
push
iret
cmp
aam
adc
adc
xchg
cli
adc
xchg
into
.byte
stos
in
sbb
mov
cltd
sbb
add
and
insl
sbb
stc
js
push
push
sub
rcr
xor
lds
add
or
sbb
pop
mov
rolb
daa
push
loop
cwtl
sbbl
sbb
xor
push
mov
xchg
dec
divb
xchg
sub
flds
dec
mov
and
sti
aaa
pop
inc
pop
push
jno
push
movsb
std
add
push
mov
bound
push
sbb
jl
ja
aas
add
dec
pop
stos
out
push
pop
xlat
sub
insb
aam
loope
fbld
xchg
ljmp
movsl
int
fisubl
jne
scas
push
fildll
xor
jnp
jo
pop
sub
jl
push
rcll
cmp
xchg
or
mov
frstor
xchg
dec
es
nop
adc
jne
lods
sti
cwtl
jecxz
in
cmp
xor
mov
push
jns
pop
sbb
fwait
cmpsl
push
hlt
pop
lcall
shrl
sbb
fsubr
push
scas
bound
inc
clc
sub
popa
mov
shr
or
adc
ja
and
in
cmc
into
xchg
push
aas
xchg
jae
test
pop
in
add
cmp
cld
jnp
or
cwtl
jb
pop
mov
cmp
jg
mov
jb
aas
int3
jmp
mov
mov
call
nop
addr16
bnd
or
lret
add
dec
xchg
mov
jo
in
fisubrl
fiaddl
outsb
push
sti
sbb
lods
sarb
dec
pop
pop
test
xlat
mov
dec
jo
push
fsubs
inc
mov
sahf
lret
lock
enter
mov
push
add
lcall
movsb
lods
gs
jnp
inc
sub
mov
imul
ffree
push
xchg
js
cmp
xchg
mov
pop
adc
ds
testb
nop
dec
adcb
add
pop
xchg
mov
repnz
jno
aad
bsf
dec
int3
in
out
jmp
sbb
add
dec
enter
fstl
in
push
sub
xchg
sub
addr16
and
popa
mov
shll
rorb
xchg
stc
repnz
call
jmp
jbe
movsl
repnz
pop
popa
mov
cld
cmp
push
or
leave
aam
test
mov
cwtl
jo
andl
push
mov
xchg
sbb
cmpb
add
jnp
sbb
pop
adc
lods
pop
ds
or
sbb
push
and
insb
mov
aam
test
pop
stos
xchg
pop
cltd
mov
dec
xchg
xor
inc
cltd
pop
imul
dec
test
pop
in
mov
and
xchg
ja
dec
adc
rol
rcr
jae
push
mov
sahf
pushf
jnp
cld
cld
mov
outsl
outsl
pop
rorb
gs
stc
repnz
shl
pop
dec
mov
mov
add
out
cmpsl
arpl
cmp
imul
cli
bound
sub
mov
icebp
movsl
sub
pop
ret
push
adc
loopne
fistl
stc
dec
stc
imul
mov
fbstp
in
pusha
sbb
movb
pop
test
xchg
cs
ja
xlat
sub
ret
in
movsl
jb
push
cmpl
sub
pop
gs
dec
sub
aas
jae
jns
addl
pop
lea
rorb
cmp
pop
mov
sbb
test
and
mov
push
mov
scas
xchg
incl
clc
or
xchg
movsl
xor
dec
test
pop
cmp
mov
repnz
fsubs
mov
add
push
mov
pop
sub
cli
loopne
xor
pushl
bound
pushf
jae
mov
pop
cwtl
sbb
lds
outsb
out
pushf
call
xchg
dec
and
add
xor
pop
lret
call
jp
outsl
daa
push
pop
rcrb
mov
dec
movsl
in
aas
sbb
push
pop
out
jecxz
inc
das
das
fiaddl
xchg
jns
push
mov
xchg
test
or
dec
stos
jecxz
cld
cwtl
lahf
adc
addr16
push
pop
xchg
inc
popl
add
orl
push
cwtl
adc
pop
sbb
push
fwait
and
inc
push
adc
dec
ds
aam
pushf
inc
mulb
enter
ficomps
lock
int3
cmc
push
pop
je
into
inc
push
inc
sti
push
fimuls
adc
xor
dec
sbb
adcl
mov
jae
mov
into
dec
lcall
xchg
loope
mov
push
arpl
shrb
out
xchg
cltd
and
mov
push
in
cmpb
sub
lods
pop
iret
js
xchg
cmp
aaa
js
sbb
loopne
jmp
pop
icebp
jecxz
sbb
les
xchg
cmp
mov
jl
push
sub
push
daa
mov
sarb
aaa
pop
gs
push
je
inc
mov
lret
dec
cmp
mov
sub
in
jge
sti
sbb
imul
mov
cmp
lcall
stos
and
jno
out
cmp
push
push
outsb
dec
mov
cmpsl
push
je
mov
adc
shl
not
pop
mov
jecxz
lahf
daa
fisubrl
adc
push
cs
arpl
jmp
out
adc
mov
lret
mov
inc
or
std
inc
jmp
xchg
xor
cmp
mov
jge
jo
cmpsl
scas
fst
shl
sti
pop
push
stos
dec
cmp
fwait
aaa
add
xchg
xor
repnz
inc
fmul
jb
out
jg
xor
ficomps
dec
sub
add
dec
movsb
mov
scas
jge
sbb
shll
sub
repz
lahf
test
sub
sub
test
aaa
notl
pop
sbb
inc
out
fs
mov
icebp
adcl
dec
pop
adc
ret
dec
inc
xchg
pop
cwtl
and
enter
out
pop
sbb
adc
out
inc
test
xor
stc
std
xchg
gs
and
cmp
push
aas
and
clc
mov
sbb
inc
stos
jmp
daa
adc
movsb
add
inc
arpl
std
int3
bound
sbb
sbb
xchg
xchg
jns
xchg
mov
cmpl
xor
repz
push
enter
mov
sbb
jp
les
cmp
out
xor
loop
jns
lret
daa
insl
pop
test
mov
fsubs
test
fs
and
jne
shrb
and
les
sbb
repnz
pop
mov
dec
cmp
sub
int3
test
fldt
fistpll
add
mov
aam
jae
test
lods
cmp
cmp
das
add
jg
or
arpl
aad
jmp
pop
adc
ret
jmp
cmp
stos
cld
out
fnsave
lahf
int3
pop
sub
idiv
xchg
cltd
je
faddp
sub
divl
in
mov
xchg
inc
jo
js
aaa
cwtl
and
enter
lock
or
cmpsb
xor
outsl
mov
pop
xlat
ret
pop
cs
std
jbe
xor
adc
jns
sarl
daa
push
mov
loopne
mov
arpl
stc
inc
stos
and
xchg
sbb
jb
mov
mov
xchg
pop
call
push
mov
mov
adc
repnz
test
popa
cmp
shll
jbe,pt
aad
shl
cli
aaa
and
push
out
jle
pop
mov
mov
mov
in
loop
xchg
sub
inc
lcall
cltd
jno
hlt
lahf
adc
jno
lret
jne
xor
push
pop
jge
pop
dec
outsl
cmp
mov
in
divb
outsl
imul
pop
jae
cmpsb
hlt
jnp
fldenv
cli
mov
add
ja
ret
jne
sub
scas
sbb
shr
cmp
mov
mov
sbbl
cmp
xchg
fistps
cmc
inc
dec
jp
push
jg
mov
stos
sbb
das
aaa
jp
mov
aas
fiaddl
outsb
ret
lods
in
stos
jl
leave
and
adc
repz
iret
movsl
xchg
push
andl
sbb
sbb
lods
aaa
sub
aas
push
inc
pop
adc
aad
xlat
sbb
jo
push
adc
mov
xor
pushf
mov
subb
dec
mov
dec
mov
nop
add
inc
aad
aam
cwtl
insb
add
jmp
xchg
pop
cmpsl
out
lahf
sbb
and
loope
pop
cmpb
cwtl
add
pop
jo
sub
int
dec
icebp
xchg
es
dec
and
add
sub
setb
mov
jecxz
xor
and
inc
push
cwtl
call
cs
and
mov
jbe
or
mov
or
xor
adc
enter
test
ljmp
mov
jb
ret
add
dec
push
call
inc
inc
pop
cmp
mov
sub
or
test
mov
jo
and
mov
push
mov
mov
stos
and
cmpb
aaa
pop
gs
test
out
jle
ljmp
cwtl
fcoms
adc
idivl
mov
pusha
pushf
sub
outsb
dec
mull
cmpsl
imul
lock
mov
mov
inc
fidivrl
mov
fwait
pop
jecxz
insb
mull
negb
xor
xchg
sbb
aaa
or
jge
loop
jg
pop
mov
leave
test
xor
mov
lret
xchg
out
sbb
ljmp
test
cmp
inc
xlat
test
mov
cmpsb
xlat
sub
mov
outsb
xor
pop
cmp
test
xor
rolb
hlt
add
icebp
jl
cmp
les
adc
mov
cld
test
xchg
pop
adc
xor
sbb
jns
cmp
cmp
fwait
inc
sub
setae
adc
scas
aam
or
sub
pop
add
fs
push
fisubrs
fidivl
in
addl
std
cmp
gs
cmpsl
lock
lret
sysret
iret
cltd
pop
xchg
orb
dec
orb
adc
imul
fneni(8087
push
cmp
ss
movsl
scas
pop
sbb
sbb
hlt
fistpll
mov
mov
rcll
sbb
mov
shrl
notb
adc
ret
lcall
fdivs
inc
xchg
je
push
pop
pop
cmp
pusha
out
jl
jecxz
mov
xor
dec
in
scas
pop
les
aas
arpl
stos
cltd
jge
jno
imul
imul
adc
or
lds
jge
add
xchg
int
mov
mov
sub
mov
push
xchg
insb
enter
mov
xor
addr16
outsb
out
cmpsb
leave
jnp
add
imul
jnp
push
add
inc
xor
clc
ja
and
sub
xor
or
adc
lods
nop
jmp
or
mov
movsb
shll
push
cwtl
pop
cmp
lahf
dec
lods
jl
test
jecxz
movsl
sub
sti
cli
call
dec
jg
sbb
loop
jge
mov
insl
sub
shll
mov
stos
stc
test
cmp
dec
fs
jecxz
test
loope
jo
test
clc
mov
inc
scas
pop
add
js
arpl
and
lret
gs
clc
scas
mov
in
scas
dec
xchg
and
loopne
xor
pop
add
inc
pop
add
in
bound
or
mov
push
mov
push
data16
rclb
mov
sbb
inc
cmp
inc
rcll
xchg
xchg
xor
hlt
loope
scas
jns
sbb
in
jg
imul
inc
cwtl
push
cmp
pop
mov
or
sbb
mov
jo
lahf
sbb
and
scas
or
xor
inc
push
hlt
inc
xor
mov
xlat
jmp
aam
in
inc
or
inc
push
cvtpi2ps
jp
aas
fucomp
push
adc
stos
ljmp
test
jnp
pop
shr
pop
imul
bound
or
in
out
inc
mov
mov
mov
outsb
clc
add
repnz
mov
int
pop
sti
loopne
pop
mov
test
dec
pop
cld
mov
mov
popf
out
aas
push
jno
les
lea
push
ds
cli
cmpsb
mov
fucom
repz
pusha
and
sbb
add
xchg
jmp
cli
dec
jbe
xor
sub
sub
movsl
cs
negl
int3
loopne
mov
fstpl
pop
call
adc
inc
push
mov
jmp
cmp
push
ret
andl
jb
fwait
and
jbe
pop
dec
ja
sarb
out
shl
mov
dec
xor
dec
mov
push
sub
repz
sbb
mov
cmp
gs
pmullw
cld
push
pop
cld
loop
mov
jl
or
mov
sahf
out
in
int
imul
cmp
xor
pop
sbb
xchg
jmp
adc
adc
sbb
jg
cmp
aad
sub
repnz
jb
aas
popf
daa
mov
and
sub
ret
xor
nop
rclb
push
and
cmpsb
lea
jl
jo
imul
mov
fstps
dec
dec
dec
fwait
addr16
jl
pop
outsl
push
dec
add
jno
sbb
sbb
mov
stos
ret
pop
mov
les
dec
lea
xchg
dec
mov
fwait
cmc
jp
xchg
pop
mov
int
dec
mov
outsb
ljmp
cmp
xchg
dec
or
jle
add
pop
shrl
addr16
inc
test
sub
lock
pop
mull
icebp
into
aam
xor
mov
outsb
or
test
xor
rcll
mov
adc
arpl
and
int3
inc
sbb
inc
test
movsb
hlt
fisttpl
movsl
xchg
and
xor
dec
cmpsb
push
imul
inc
clc
enter
mov
mov
sbb
cmp
mov
xchg
in
je
mov
add
jo
test
das
lret
fdivrs
and
out
xchg
fidivl
xchg
or
dec
das
sub
add
pop
jmp
daa
cmc
mov
push
call
sarl
imul
mov
mov
mov
cmp
xchg
jge
ds
fwait
pushf
mov
movsl
ficoml
dec
mov
std
sahf
sub
loopne
pop
sete
cmp
mov
xchg
dec
push
int
pop
or
iret
dec
mov
mov
loopne
ljmp
cmp
pop
inc
mov
rcrl
iret
mov
lcall
xchg
xor
or
addl
inc
ror
cmp
mov
lcall
scas
cmp
fisttps
imul
push
mov
addl
ljmp
out
cli
sbb
stos
cmp
pop
arpl
fwait
rclb
loope
sub
cld
add
pushf
push
jmp
cmp
out
jno
imul
inc
aad
pop
adc
pop
or
es
push
or
inc
repz
cld
or
cmc
cltd
gs
rolb
xchg
js
in
jae
add
sarb
imul
sbb
sbb
lods
shrb
inc
adc
or
rorl
and
cltd
loope
and
mov
out
addr16
movsb
pop
ja
loopne
loop
xchg
sub
jbe
push
xchg
pop
push
jae
dec
sub
loop
sub
aad
cld
cmp
aam
push
mov
fdivl
inc
mov
into
push
add
mov
pusha
push
jno
push
fimuls
pop
xchg
f2xm1
pop
stos
jle
aaa
inc
flds
pop
cs
pop
stc
sbb
sbb
les
iret
sbb
mov
loope
adc
test
lret
add
inc
adc
repnz
mov
out
or
fisttps
ljmp
fadds
pusha
daa
loopne
jmp
sbb
addl
cmpsl
sbbb
fbstp
push
add
cwtl
add
mov
cs
mov
scas
int
jne
repnz
add
adc
loop
inc
ror
and
hlt
es
push
sbb
adc
popa
xor
mov
add
lods
dec
inc
jno
dec
pop
xchg
test
jecxz
je
sub
push
mov
pop
or
sbb
cmp
cltd
pop
clc
enter
mov
dec
jo
or
jge
sub
inc
jns
in
lahf
aas
std
xchg
inc
dec
inc
ljmp
test
in
jg
sub
pop
adc
repnz
fmulp
mov
lods
movsl
push
sub
scas
mov
add
jl
dec
fsub
addr16
pop
scas
mov
push
push
call
cmp
xchg
nop
imul
pop
test
insb
bound
push
aas
pop
adc
adc
cmp
in
getsec
push
pop
movsb
mov
outsl
mov
sbbb
push
testl
jecxz
sub
fldl2e
insb
ret
popa
call
sub
insb
xor
int3
repz
fyl2xp1
add
push
stos
or
xchg
sbb
xchg
xchg
sbb
mov
fiadds
mov
imul
xchg
pop
ds
or
leave
gs
adc
pop
fsubl
mov
dec
int3
push
pushf
and
sbb
mov
dec
out
bound
jne
in
dec
int3
ficompl
repz
or
test
inc
insb
xorb
aam
mov
das
xor
faddl
mov
jbe
dec
adc
mov
xchg
out
push
mov
scas
adc
outsb
fcomps
lds
out
mov
and
sub
test
loop
sub
les
sub
dec
mov
je
dec
imul
jno
push
push
sbb
cmc
pop
xchg
inc
iret
call
cwtl
push
inc
xor
in
out
icebp
cltd
pushf
and
cmc
lea
sahf
pusha
movsb
pop
jo
add
dec
les
or
jbe
or
xchg
das
fimull
mov
pop
lcall
xchg
adc
lret
inc
mov
mov
mov
push
and
vmwrite
out
mov
cmp
into
pop
ds
pop
inc
test
mov
add
adc
es
scas
mov
dec
std
pusha
js
sbb
cwtl
sbb
xchg
cmp
lret
ds
cmpsl
mov
pop
enter
cmpsl
ror
mov
sbb
xchg
and
aaa
daa
hlt
aad
mov
xor
daa
clc
outsb
cltd
xor
add
and
mov
push
adc
pop
sarl
inc
popa
add
sbb
inc
mov
jne
inc
stos
les
shll
enter
push
int3
dec
jg
push
sahf
fisttpll
sub
orl
adc
bound
push
and
xor
cltd
push
xor
jmp
movsl
dec
lods
sbb
int
mov
dec
ja
pop
ss
push
insb
enter
gs
pop
cmp
mov
ret
movsb
fldenv
int
and
std
mov
mov
cltd
scas
sbb
mov
mov
xchg
cmp
jae
pushf
shl
mov
repnz
cmpsl
bound
mov
test
fcmovnu
aas
sub
stos
aaa
cmp
rcrl
add
xor
or
movsl
sub
loop
or
inc
cld
xchg
sub
mov
adc
pop
insb
lock
jno
push
testl
aas
scas
jo
sbb
mov
loopne
add
jmp
inc
inc
push
loop
mov
idivb
cld
xor
imul
je
int3
mov
jnp
mov
imul
push
or
les
rcll
lods
xchg
xchg
stc
mov
jo
jecxz
jecxz
movsb
fsubs
jmp
mov
mov
stos
lret
sbb
insl
fsubr
jecxz
scas
sub
mov
mov
jl
mov
xchg
dec
rcrl
je
js,pn
flds
lret
push
cmp
pop
test
rolb
xchg
jo
xchg
inc
daa
scas
jb
add
cmp
rcrl
xchg
scas
pop
insb
sbb
add
leave
fcoms
imul
jmp
adc
adcl
pop
mov
sbb
mov
inc
flds
ret
sti
pop
bound
inc
das
in
push
mov
in
inc
fcmove
das
sub
mov
push
jg
cwtl
mov
sbb
lret
add
push
not
xchg
sub
inc
sahf
ficoml
in
sub
xor
sarb
push
popa
ret
sahf
add
push
xlat
or
xor
cmp
mov
sahf
sbb
ljmp
jns
mov
mov
push
jp
pushw
imul
lcall
nop
cmp
ss
jecxz
mov
sahf
out
xchg
add
jns
and
sub
xlat
enter
out
xorl
sbb
daa
lea
pop
sbb
test
iret
cmpsl
mov
pushf
aas
fidivrs
jmp
xchg
imul
cmp
mov
rolb
cltd
sub
push
std
cwtl
fnstsw
in
push
xor
out
imul
popf
cmp
stc
inc
inc
mov
cmp
test
call
das
mov
cmpsb
and
or
inc
pop
xor
or
inc
dec
insb
sub
sbb
cmp
pushf
jne
inc
push
xchg
pop
adc
loop
sbb
mov
push
sti
mov
daa
pop
insb
adc
mov
loop
in
cmp
shrl
or
cmpsb
fsubs
push
lahf
out
xor
fnstenv
xor
jle
mov
jns
mov
fisubs
mov
je
pop
mov
mov
mov
push
lds
rorl
test
dec
aaa
imul
adc
pop
sbb
ss
stc
cmp
stc
sbb
sbb
mov
cmp
sub
movsl
je
ret
fnstsw
jb
shl
or
xlat
adc
out
cwtl
test
cmp
inc
mov
lock
jns
push
push
pop
jo
jge
xor
pop
mov
clc
rcrl
xor
mov
dec
mov
arpl
loopne
or
push
std
stc
mov
sub
dec
push
mov
and
cld
clc
mov
dec
mov
push
out
sub
enter
adc
xor
out
xor
or
push
add
in
mov
int
lods
outsl
stos
pushf
sete
dec
dec
sub
popf
mov
js
xchg
cmpsl
or
les
icebp
pop
shlb
dec
enter
lret
pop
lods
push
addr16
repz
inc
sub
std
jge
dec
daa
bound
scas
int
daa
fists
mov
sahf
sahf
lock
xorl
xchg
out
ret
push
stc
ds
xchg
cmc
cmpl
sbb
mov
inc
stc
pop
outsb
cmc
mov
cld
jmp
rolb
add
out
push
jecxz
mov
inc
icebp
out
mov
push
pop
sahf
daa
pop
dec
das
jecxz
lahf
mov
stos
ret
stos
pop
inc
fidivl
fsubs
push
fnstsw
addl
cmp
adc
and
adc
rcl
out
iret
or
push
sbb
mov
lahf
or
lea
imul
cmp
pop
or
dec
and
fstl
pop
les
push
pusha
jnp
cld
xchg
jnp
push
aad
les
subb
inc
ja
inc
loopne
mov
popf
jg
pop
pop
pop
jp
inc
jmp
add
ljmp
arpl
popf
orb
adc
push
pop
push
mov
push
out
cli
jne
adc
sub
popa
fcompl
jae
adc
clc
jg
shlb
jo
mov
adc
scas
loopne
sbb
jb
pop
lds
loope
lret
mov
sbb
dec
rorl
xchg
push
push
cmp
dec
sbbb
out
adc
inc
sbb
loopne
repz
inc
jns
xchg
lss
jae
andb
pop
cltd
lods
andb
sub
cmpl
roll
or
xchg
repnz
fadds
sub
sbb
imul
add
bound
enter
fadds
cmp
sbbb
ret
dec
icebp
or
scas
lock
hlt
add
mov
adc
in
jbe
and
mov
fdivl
pop
xlat
ja
ljmp
jmp
fwait
and
xor
outsb
dec
in
sbb
xor
cltd
or
adc
inc
addr16
stc
sub
inc
flds
inc
in
inc
xorb
inc
sub
fxch
gs
sbb
pop
pushf
pop
test
add
movsl
adc
gs
call
and
hlt
cmp
cmpl
loop
pop
mov
xchg
movsl
add
or
or
mov
push
daa
int
add
add
lcall
lea
int
dec
stc
sbb
ret
mov
jle
lods
sbb
stos
das
mov
mov
sub
dec
dec
mov
out
xchg
mov
mov
mov
xor
jl
jbe
dec
loopne
mov
ja
ja
dec
mov
repnz
jmp
outsb
mov
out
push
and
scas
stos
mov
aad
adc
jmp
and
mov
and
or
dec
insb
fmuls
push
mov
sahf
outsb
mov
cmp
cmp
bnd
add
pushf
adcl
mov
mov
inc
xchg
orb
mov
xor
dec
push
movsb
out
pop
ficompl
in
int
sbb
push
push
mov
jns
dec
sub
mov
pop
mov
mov
pop
iret
push
jnp
push
lock
fisttpl
sbb
push
sub
inc
addr16
inc
test
in
cs
bound
sub
xor
insb
rorb
add
aaa
aas
sbb
orl
insl
scas
dec
sub
inc
mov
adc
push
dec
push
pop
mov
mov
xchg
push
jae
adc
push
sti
out
xchg
jg
lods
aad
jmp
pusha
sti
pusha
xchg
movsl
arpl
sti
cwtl
cwtl
std
xchg
mov
pop
and
lods
fdivr
sbb
adc
daa
mov
inc
enter
add
jge
shrb
pushf
and
pop
jno
mov
hlt
or
mov
ret
lcall
fcom
dec
sarb
pop
jmp
mov
xchg
jmp
add
popl
and
pop
pop
lret
rsqrtps
mov
stos
and
ljmp
loopne
test
sbb
sbb
xor
dec
pop
mov
shll
add
inc
cmp
inc
sub
xor
clc
rclb
cmp
mov
fisubs
xchg
lret
int3
sbb
xor
dec
or
insb
in
mov
dec
out
cmpsb
jp
cltd
or
cmp
pusha
adcb
pop
sbb
inc
test
add
stos
out
mov
cmp
mov
pop
das
jp
sti
pop
push
pop
xor
add
outsb
jl
jge
mov
sbb
movsb
enter
cld
cli
ja
outsl
or
fdivrl
push
push
std
dec
jae
cmp
loop
sbb
mov
inc
push
xchg
rcrb
sti
dec
inc
ret
aaa
pop
cltd
jne
es
add
rcll
ds
cwtl
scas
mul
dec
adc
cmp
or
in
mov
out
mov
andl
scas
jns
faddl
jnp
jge
mov
xchg
cltd
and
ja
adc
ljmp
movsl
adc
lock
push
and
sub
or
xchg
lods
call
and
daa
inc
sti
test
xchg
int3
add
imull
sti
cld
push
mov
sbb
xor
rcll
jp
add
jb
sub
mov
hlt
bound
mov
pop
mov
mov
ret
scas
sahf
mov
or
lcall
push
inc
jp
mov
ds
xor
xchg
out
xchg
mov
sub
sbb
negl
dec
sbb
sbb
sbb
hlt
mov
loope
cmp
loop
xchg
push
js
mov
push
pop
pop
pop
pop
push
cmp
jmp
sbbb
fisttps
ret
outsl
scas
div
stos
dec
insl
cmc
cltd
pop
or
xor
push
clc
imul
xchg
popf
fidivrl
dec
lret
cld
mov
pusha
sbb
cmp
inc
push
in
inc
add
cmp
cmpl
sub
into
jb
loope
adc
test
ficomps
and
shrb
xor
sub
xchg
inc
mov
fwait
lock
in
jnp
je
push
icebp
jns
xchg
cmp
lds
jle
adc
xchg
data16
leave
xorl
int
dec
rclb
out
pop
or
data16
cmp
mov
out
add
mov
xchg
adc
mov
or
repz
and
sub
lods
shlb
outsb
leave
lcall
inc
or
push
or
ljmp
loopne
fs
fimull
fcom
and
lods
test
cmpsb
sbb
pop
adc
sbb
xlat
aam
cmp
cmp
das
stc
or
lea
xchg
out
out
mov
mov
push
movsl
test
and
pop
sbb
popa
jecxz
pop
fiaddl
out
push
xor
and
jne
enter
push
js
loope
pop
mov
sub
and
out
adc
xor
lods
int3
loopne
push
idiv
fcomps
xor
add
or
pop
sub
cmpsl
xchg
inc
fwait
add
mov
cmp
fwait
sbb
cmc
push
rcll
je
clc
xchg
xchg
test
aas
stos
mov
inc
aaa
pop
aam
bound
fs
out
or
stos
pop
sub
sbb
cmp
es
insb
xchg
mov
sahf
pop
xchg
addr16
nop
adc
lahf
jo
xor
dec
icebp
in
or
add
ficompl
or
push
mov
das
jecxz
je
shlb
adc
out
sub
add
jl
int
lods
in
insb
fbld
das
adc
jge
and
inc
mov
and
subl
cmpsl
cmpsl
cmp
sti
sbb
sbb
push
lahf
mov
xchg
sbb
in
push
addl
repnz
xor
jge
add
mov
mov
cmpsl
and
add
push
push
iret
shrb
imul
jbe
stos
sbb
xor
xchg
jne
and
out
mov
push
dec
sbb
movsb
push
mov
adc
cmp
lea
inc
pop
movsl
andl
mov
popa
les
push
jl
dec
rclb
loopne
stc
mov
test
ret
xchg
arpl
and
notl
add
hlt
iret
xlat
dec
add
jge
enter
repz
or
and
mov
xor
adc
adc
ss
jbe
xor
mov
jecxz
or
ficoms
dec
jae
dec
outsl
adc
adc
inc
dec
imul
xchg
mov
xlat
call
mov
dec
shl
mov
add
add
ja
dec
ss
repnz
cld
cmp
aam
jbe
outsb
dec
mov
leave
jmp
stos
out
push
lock
lahf
loope
push
in
or
push
popf
dec
icebp
cmpsb
rol
.byte
insb
and
xor
and
mov
pusha
jp
mov
arpl
mov
pop
push
pusha
sub
aas
dec
jae
pop
xchg
ret
pop
mov
mov
jge
pop
pop
mov
xor
sbb
inc
mov
mov
jle
cmp
sarb
lret
bound
push
inc
cmpxchg
sbb
lea
jge
push
call
sbbb
push
insl
stos
popf
add
cmpsl
arpl
cmc
mov
inc
xchg
or
call
das
je
push
aam
test
adc
sub
ret
mov
mov
and
clc
fstps
push
xchg
mov
jmp
repz
mov
lret
das
or
or
pushf
test
mov
sbb
sub
cmp
in
adc
jecxz
lahf
cmpsb
loopne
shll
add
inc
sub
lds
sahf
call
mov
imul
or
aam
pop
cmp
scas
pop
repz
ror
jmp
adc
movsb
pop
ljmp
adc
popa
and
movsb
xor
cmp
xchg
mov
or
cmp
and
mov
sar
popl
leave
xchg
pop
pop
cmpsb
mov
loop
outsb
loop
leave
jbe
sbb
imul
mov
cmp
std
movsl
or
shll
xchg
adc
out
in
ds
cli
xchg
jb
mov
xlat
fcom
pop
adc
push
inc
mov
mov
aaa
dec
dec
pop
mov
das
jo
cmc
jl
mov
lret
inc
adc
mov
daa
addr16
lods
jne
scas
mov
jg
shll
aad
aas
xor
out
pop
scas
dec
and
jns
cmp
and
shl
leave
or
or
add
adc
jbe
push
pop
lods
iret
mov
or
and
addl
xchg
jg
dec
jmp
test
nop
ret
dec
xabort
push
mov
add
jl
call
stos
ss
cmp
xlat
popf
push
push
and
mov
cs
xor
scas
cmp
iret
cmp
rcll
mov
push
testl
rcrl
mov
das
add
and
in
and
mov
pop
in
mov
shll
xchg
mov
xchg
xor
adc
jbe
push
fstpt
adcl
jnp
mov
inc
leave
data16
inc
sbb
into
cmpsl
call
jecxz
fcomps
fadds
inc
lods
rcll
cmp
push
add
mov
test
aam
dec
cmc
rolb
mov
stos
xor
pop
push
or
lret
inc
mov
fisubrl
fiadds
push
sbbl
cmp
aaa
fucom
inc
div
inc
push
iret
inc
fstpl
cmpsl
movsb
ret
push
adc
clc
es
divb
cmp
sti
out
pop
push
jbe
adc
movsl
outsb
iret
pop
scas
xor
arpl
pop
mov
or
add
or
adc
xor
cli
pop
js
add
mov
and
mov
inc
xchg
insb
or
xor
add
lock
je
fdivrs
push
mov
or
movq
lcall
dec
ret
inc
mov
ljmp
jle
sar
adc
cmp
mov
push
adc
dec
and
jg
jp
sbb
imul
lock
addr16
jge
add
add
jp
mov
stos
imul
outsw
imul
xor
movsl
pusha
xchg
push
sub
cmp
ret
scas
jl
inc
lret
dec
lods
lcall
data16
pop
xor
xorb
mov
inc
loope
or
decb
nop
or
inc
out
adc
shlb
hlt
aas
dec
mov
ret
in
stos
out
aad
add
scas
sbb
bound
inc
or
test
sbb
data16
mov
aas
xor
out
pop
sub
sbb
outsl
lds
and
mov
repz
mov
inc
js
sbb
and
aam
jne
insl
dec
inc
mov
add
lds
loop
ret
popa
and
cmp
mov
push
das
dec
cli
dec
fxch
or
fdiv
push
lea
fcompl
jecxz
jbe
imul
cltd
xchg
clc
clc
lods
cmp
test
xor
cwtd
inc
cli
mov
or
testl
mov
xchg
inc
mov
add
aad
pusha
xchg
mov
inc
dec
jae
xor
cli
repnz
fstl
pop
pushf
inc
jmp
inc
sub
rorl
aam
out
gs
test
hlt
mov
bound
pop
aas
mov
aaa
mov
inc
pop
lret
out
mov
ljmp
add
sbb
sub
dec
pop
ror
rclb
pop
mov
inc
lcall
pusha
fldt
jae
pop
movzbl
or
out
movsl
mov
lods
aaa
jae
addr16
lods
push
cwtl
cmp
fisubs
in
sub
adc
jg
cmpsb
outsl
inc
int
inc
popa
jbe
cmp
or
cmp
or
ror
bndstx
mov
inc
mov
aaa
int3
in
and
imulb
pusha
jb
jecxz
lret
aaa
in
repz
repz
inc
test
dec
xor
mov
xor
pop
cmp
sbb
mov
xor
or
mov
loopne
scas
dec
je
cmp
jnp
adc
mov
pop
in
xlat
add
jmp
xor
fwait
xor
rol
inc
mov
test
fldcw
sti
rcr
orl
test
into
dec
xchg
arpl
lahf
sub
pusha
aas
stc
lea
mov
les
push
loopne
pop
enter
std
or
xchg
add
pusha
cmp
fdivs
lods
adcl
inc
cmc
inc
arpl
or
fimuls
sarb
lods
jg
lds
icebp
movsb
iret
dec
xor
pop
add
cltd
and
adc
movsl
mov
jne
and
jb
push
xchg
cmc
mov
sbb
outsl
es
in
sub
sub
nop
popa
aad
push
test
adc
jnp
test
xor
add
iret
fwait
jp
insl
daa
test
sub
mov
les
ja
ret
scas
in
xchg
xchg
stc
mov
mov
sbb
shr
pop
inc
sti
ret
ja
xchg
lret
movsl
xor
mov
dec
mov
dec
dec
cmp
into
enter
mov
add
js
dec
cwtl
std
icebp
mov
in
arpl
fwait
cmp
rcll
mov
jp
ljmp
nop
cmp
sub
fwait
xor
cmp
add
enter
sub
lods
xchg
mov
lds
add
xchg
cltd
jmp
fsubs
pusha
loopne
lea
cmp
into
mov
sub
push
inc
jae
adcb
push
es
mov
sbb
adc
lods
or
push
dec
push
fisubrs
inc
pop
mov
test
cli
mov
test
xor
inc
neg
repz
pop
mov
adc
out
in
or
insb
mov
add
dec
in
dec
xchg
lahf
xor
inc
cs
sbb
mov
rcr
xchg
rcll
inc
push
imul
jae
rclb
inc
and
pop
pop
or
addl
push
adc
add
fidivl
xor
or
pop
cltd
xchg
insb
adc
add
jecxz
cvtpi2ps
inc
and
xchg
mov
test
enter
popf
gs
fdiv
cmpsl
test
xchg
inc
fs
addr16
push
adc
enter
call
pop
sub
enter
jb
fwait
push
sub
mov
pop
mov
mov
mov
iret
nop
repnz
sbb
sub
push
jecxz
outsl
popf
or
jle
testb
das
jnp
je
and
negl
ja
lahf
mov
dec
inc
and
shrl
lds
or
jb
divl
out
pop
pop
movsb
loopne
jbe
mov
rol
popf
jp
pop
push
jae
cmp
lds
out
mov
aad
hlt
mov
imul
in
pop
leave
jb
pop
pop
ficomps
in
cmpsb
push
gs
push
push
or
mov
mov
movsb
fstps
lds
mov
sub
sbbl
sbb
stc
dec
in
cld
arpl
icebp
adc
in
xor
xlat
ja
js
into
dec
mov
jge
std
imul
scas
enter
mov
iret
jno
cli
sub
add
das
pop
mov
loop
sub
insl
aad
jnp
fildl
dec
pop
loop
adc
push
pop
out
mov
jg
jg
mov
fwait
dec
mov
jecxz
add
call
mov
iret
mov
sub
adc
out
jne
and
outsb
mov
dec
aad
sbb
add
aas
xchg
stc
out
in
popa
movsb
popf
cmc
jecxz
fildl
aas
imul
sbb
dec
dec
jno
dec
pop
std
enter
add
mov
xor
inc
adc
pushf
cld
fcmovnbe
mulb
and
rorl
orl
jnp
push
xor
xchg
movsb
pop
cltd
sub
ficoms
iret
mov
cmpsb
test
jb
out
mov
jl
mov
das
out
cli
xor
jmp
xor
pop
or
sub
pop
dec
out
fsubp
xor
lock
and
aad
insb
pop
jp
or
sti
inc
shl
mov
sub
dec
sbb
xor
dec
mov
cmc
scas
loop
xor
pop
insl
xor
dec
andl
rolb
cmp
adc
and
sbb
clc
loope
pop
je
mov
out
out
xchg
jp
pusha
int3
idivb
xor
iret
sbb
popw
jmp
pusha
add
mov
in
push
mov
or
sarb
jbe
roll
outsl
pusha
outsl
inc
rcrb
enter
lcall
sbb
fcoms
lods
xchg
sbb
mov
xor
fucom
sub
xchg
mov
rcr
popa
movsb
sti
mov
add
jmp
cmpsl
mov
ljmp
fdivs
movd
xor
je
xchg
test
out
test
aam
jle
test
push
sti
jne
inc
loope
ret
enter
into
outsl
jb
movsl
add
jle
fsubrl
imul
into
xor
sub
ss
loopne
adc
insl
int
cltd
hlt
mov
sbb
clc
mov
fistps
jmp
inc
into
jle
js
mov
rorl
imul
test
and
out
jno
xchg
push
pop
xchg
jl
aas
lods
clc
les
test
ljmp
add
and
pop
les
xor
sbb
xor
push
pop
mov
out
stos
dec
mov
push
imul
add
xor
inc
es
push
lock
or
data16
cmp
sbb
push
xor
xlat
mov
push
mov
add
mov
movsb
mov
push
jp
aas
adc
dec
inc
orl
mov
outsl
mov
and
sub
hlt
cmp
arpl
mov
xor
and
adc
je
sti
or
pop
push
fiaddl
lahf
jg
add
mov
fcomp
cmpb
adc
push
or
and
dec
push
rcrl
jp
jmp
aad
ret
into
or
jmp
bound
pop
sahf
add
int3
adc
insl
add
rorb
mov
jae
ficompl
out
inc
or
mov
xchg
mov
outsl
add
std
sti
loope
or
rcll
pushf
xor
add
mov
pop
mov
loop
lcall
pop
push
imull
lods
add
xchg
mov
pop
lret
xor
pop
or
push
rol
adc
xchg
aas
mov
mov
or
jbe
ret
pop
fidivrs
dec
pop
add
xchg
xchg
dec
or
or
xchg
add
repnz
adc
icebp
pusha
aad
stc
push
pop
push
daa
mov
sub
lahf
inc
xchg
or
sub
xor
in
cmpb
popf
std
mov
iret
jno
popf
mov
out
in
mov
sbb
inc
in
dec
pop
jmp
mov
jnp
mov
movsl
loop
enter
push
test
cmc
add
clc
xchg
mov
movsb
jo
mov
outsb
xor
scas
jnp
xor
and
xor
push
ja
out
dec
imul
repz
fucomip
int3
jo
sbb
aam
inc
dec
in
mov
mov
jb
je
arpl
shlb
dec
rolb
mov
cmp
lret
faddp
test
or
ret
adc
hlt
jb
ds
inc
les
inc
cmpsb
push
cli
sbb
sbb
outsb
jmp
mov
jb
incl
sahf
imul
and
fbstp
jae
mov
ss
sub
cmp
outsb
jo
outsb
sbb
push
sub
jg
icebp
mov
push
outsb
fldenv
inc
negl
jge
jnp
jge
xchg
jb
imul
in
test
jp
ljmp
jg
push
pop
repz
je
adcb
lods
adc
test
ret
lea
pop
cltd
pop
and
ljmp
sbb
dec
jl
lcall
mull
and
add
out
xorl
test
mov
xchg
loop
pop
mulb
ret
jns
mov
shll
and
push
imul
aas
loope
mov
xor
lea
pop
mov
addb
ret
pop
pusha
je
loope
inc
mov
and
cmp
loopne
rcrl
sub
jl
xchg
popa
mov
fs
negl
mov
lea
lea
jo
xchg
ret
mov
jecxz
into
pop
jo
sub
test
ror
and
test
sahf
imul
push
adc
outsl
and
shlb
outsb
fisttpll
mov
je
xchg
sbb
test
ror
loopne
in
pop
out
pop
push
xor
shrl
and
dec
pop
xchg
add
add
sti
add
pop
imull
scas
popf
xchg
sbb
adc
cmp
dec
sbb
push
jb
dec
jb
add
pop
pop
jl
test
repnz
dec
flds
nop
lds
mov
aad
fwait
nop
and
into
jecxz
aaa
pop
lahf
pushf
mov
jp
mov
mov
into
inc
xchg
ss
adcl
fsts
mov
aaa
addr16
xor
outsb
pop
xchg
in
push
xchg
xchg
mov
pop
xor
lret
ss
repz
popa
test
inc
jne
outsl
in
adc
orl
stc
inc
mov
push
sbb
js
pop
fwait
sub
cwtl
and
icebp
aaa
sub
sti
jno
cld
xor
mov
lcall
adc
mov
vpcmpgtd
sbb
jecxz
outsl
test
imul
pop
loop
jmp
loope
adc
add
aaa
sbb
out
push
dec
rol
mov
and
push
sbb
jge
int3
cmpsb
push
loope,pn
sbb
adc
sti
pop
add
sbb
jne
xchg
jle
pop
cli
jmp
mov
add
lahf
sbb
int
mov
jmp
fists
adc
mov
orb
sub
rclb
stos
inc
scas
sub
push
pop
jg
das
in
sbbl
cmp
inc
xor
sub
stc
in
push
inc
mov
adc
stos
pop
idivb
xor
push
sub
clc
or
mov
jno
push
arpl
inc
mov
mov
shll
push
outsb
push
push
dec
gs
leave
xor
subl
fisttps
lods
xor
pop
mov
adc
mov
push
lds
out
add
inc
push
adc
cltd
push
sbb
std
and
cld
scas
dec
pop
add
int3
xchg
dec
adc
jae
xlat
test
cli
rcrl
inc
ljmp
add
push
xchg
mov
negb
scas
nop
dec
pop
adc
test
addr16
arpl
ss
scas
sbb
out
imul
icebp
sub
and
loop
push
pop
lock
cmp
cltd
fwait
cld
pop
rcll
mov
xor
sub
xor
loop
push
dec
add
dec
idiv
repnz
jecxz
push
xchg
push
push
loopne
lods
lret
or
jae
aad
dec
es
lds
push
lods
bound
lret
cmp
sbbb
push
outsl
xchg
push
fadds
iret
das
adc
int
loopne
repnz
sub
mov
cltd
pop
js
dec
loop
pop
adc
mov
andl
jge
das
dec
in
daa
fistpll
mov
loop
icebp
or
mov
fwait
push
dec
add
cs
jp
aam
sar
jb
cmp
dec
lds
cmp
insl
sub
idivb
mov
mov
push
sub
hlt
jo
in
movsb
int3
or
sub
shll
enter
inc
shll
pop
jbe
cmp
call
and
fdivl
adc
add
fs
jae
addr16
push
sub
mov
inc
dec
mov
dec
fistpl
cmpsl
ss
sbb
sub
lahf
imul
fdivrs
add
add
cmp
jg
xlat
mov
insl
jp
jg
rorb
xor
mov
inc
or
push
es
or
loop
push
cltd
aad
xchg
and
jbe
sub
cmp
xor
rclb
sti
mov
mov
dec
dec
mov
jg
jl
mov
push
mov
rolb
mov
jp
mov
add
test
sbb
inc
stos
test
or
shl
call
sub
mov
push
es
jb
dec
mov
les
fsubr
cmp
mov
jbe
jnp
fldcw
repz
fucom
and
imulb
mov
fldl
aad
es
jbe
sahf
dec
imul
cli
xchg
mov
filds
push
or
popa
test
scas
cmp
fisttps
xchg
outsb
inc
dec
mov
ss
pusha
stos
repnz
jbe,pt
jmp
insl
or
add
mov
hlt
scas
cld
ljmp
fsubrl
xchg
leave
cmc
gs
jbe
fldl
mov
das
fidivrl
ret
std
add
mov
sbb
inc
cld
dec
pop
lret
pop
and
icebp
pop
mov
xchg
adc
and
insl
das
movsl
shrb
leave
mov
scas
rcrb
repnz
pusha
mov
std
xor
mov
xchg
push
adc
jge
mov
dec
xchg
adc
nop
test
add
in
xchg
imul
sbb
jg
pop
and
into
cld
in
inc
jmp
dec
out
dec
fs
sub
xchg
shrb
int
popf
mov
push
daa
cmc
out
cmpsb
imul
in
bound
add
rsqrtps
icebp
int
in
inc
jno
loope
push
jg
push
dec
mov
les
xchg
mov
popa
mov
xor
cwtl
mov
test
ret
cmc
idivl
inc
xor
jno
jge
ret
mov
or
subl
pop
xchg
iret
xor
xchg
lea
fbld
pop
push
or
mov
lock
mull
imul
decl
mov
leave
clc
cmp
jo
inc
inc
std
xchg
mov
mov
jmp
repnz
int
int
leave
and
jnp
push
pop
and
repz
rcrl
popf
aam
mov
daa
nop
int
insb
cwtl
and
push
pop
bound
pop
push
aad
clc
mov
aas
lret
jno
cmp
mov
push
aaa
hlt
adc
sarl
mov
dec
push
mov
int3
outsb
inc
jb
pop
cmp
push
push
and
push
es
fdivs
push
scas
dec
cmpsb
mov
and
cmp
fdivrp
lret
mov
sub
inc
jmp
iret
cmp
mov
push
clc
and
xor
jne
sub
inc
push
inc
and
push
mov
pop
lahf
xor
jecxz
push
aam
sub
dec
sti
and
jns
out
adc
xlat
cltd
outsl
dec
dec
mov
je
or
out
and
lods
fsubrl
and
shl
inc
je
iret
mov
imul
lahf
xor
jae
pop
out
xchg
dec
aaa
push
or
aad
mov
in
mov
cltd
cld
outsl
dec
aas
mov
hlt
adc
daa
and
test
mov
jnp
and
fstpt
es
scas
ljmp
push
push
push
clc
cwtl
pop
incb
pusha
lahf
das
jbe
gs
xchg
das
das
mov
cmpl
add
add
add
pop
add
add
add
add
push
add
add
add
add
add
addb
add
sub
add
mov
add
add
add
add
add
addb
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
sbb
add
xor
add
dec
add
addb
add
js
add
nop
add
orb
add
test
add
rolb
orb
add
fadds
add
lock
orb
add
add
orb
add
cmp
add
push
add
adcb
add
push
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
or
add
add
add
add
addb
add
loopne
add
clc
add
addb
add
sub
addb
add
inc
add
orb
add
pop
add
orb
add
jo
add
mov
addb
add
add
add
push
add
rolb
addb
add
add
add
add
add
add
add
xchg
add
call
add
add
add
add
add
add
add
addl
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
pusha
push
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
nop
push
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
pop
add
cwtl
daa
add
add
add
add
add
add
add
daa
add
xor
add
in
add
add
add
inc
mov
add
add
in
add
add
add
faddl
add
in
add
add
add
inc
fldl
add
add
add
add
add
add
in
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
in
add
add
add
inc
in
push
add
add
add
add
add
add
add
add
in
add
add
add
xor
push
add
add
in
add
add
add
pushf
xor
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
in
add
add
add
dec
lret
jbe
add
in
add
add
add
lret
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
inc
int
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
movsb
int
add
add
add
add
add
add
add
int
add
add
in
add
add
add
in
add
add
add
add
add
add
add
add
in
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
andb
insl
push
add
xor
lret
xchg
es
fisubl
stos
push
aaa
dec
ret
sub
and
sbb
sub
rolb
sub
xchg
aas
jecxz
paddusw
sub
adc
sbb
xchg
cmc
out
push
iret
inc
scas
mov
aas
das
int3
jle
scas
lock
jae
mov
mov
dec
out
repz
loope
mov
in
push
sbb
aad
in
bound
pusha
mov
das
scas
idiv
adc
sub
push
leave
or
mov
and
ja
sub
add
pop
cmp
pop
sbb
sbb
push
lods
dec
cmp
fdivl
stos
aad
push
cmpsb
xchg
lds
cmp
imul
push
lds
aad
movsl
inc
mov
or
shll
xor
dec
or
or
cmp
cli
cmp
mov
add
add
dec
gs
sti
shll
pop
adc
add
movsb
cltd
stos
ja
mov
clc
mov
in
test
out
inc
adc
pushf
ret
test
cwtl
push
lds
int
test
dec
movsb
incb
mov
inc
call
std
js
jp
pop
cmp
std
fmull
mov
lcall
out
cmp
mov
adc
lods
or
pop
je
in
call
xor
ss
mov
inc
negb
xlat
pop
push
test
movsl
cltd
sbb
sbb
jno
std
ja
rolb
and
sbb
dec
dec
cmp
fldt
pop
mov
iret
fldl
adc
and
out
icebp
in
mov
inc
imul
push
fwait
stc
ret
ret
stos
jge
fdivl
adc
dec
push
cmpsl
mov
std
popa
loope
test
pop
xor
pusha
pushf
pop
mov
bound
movsb
jbe
insb
xor
loop
je
sahf
cmp
loop
data16
inc
in
popf
andl
push
dec
sbb
decb
aas
adc
scas
sbb
jae
test
xchg
ja
leave
dec
sti
ficompl
lahf
or
adc
addl
popa
pop
pop
aad
ficompl
or
mov
add
out
pop
mov
sbb
adc
jecxz
dec
push
loop
jb
push
xor
les
js
das
and
pop
mov
push
xchg
ficoml
gs
jmp
inc
outsb
outsl
fisubrs
pop
aam
xor
add
ja
fnclex
jmp
shll
pusha
cmc
ret
inc
mov
in
test
and
popf
jmp
sbb
lds
sbb
mov
lcall
inc
fcmovb
dec
in
sbb
dec
mov
xchg
inc
outsb
sub
lret
pop
shr
inc
test
arpl
pop
sub
cmp
xchg
dec
imul
sub
ret
mov
mov
movsl
ret
cmpl
imul
mov
add
xorb
js
mov
sahf
push
mov
shll
mov
push
mov
pop
dec
out
or
dec
adc
mov
dec
repz
dec
pop
mov
je
inc
ret
push
add
repz
adc
lret
ss
mov
pop
test
popa
gs
lret
dec
sar
jmp
jmp
rcrb
aad
scas
es
adc
jg
rcrl
test
mov
or
add
inc
xchg
clc
daa
or
push
roll
std
pop
shlb
into
jae
mov
mov
push
push
nop
add
jno
jl
sub
mov
fnstenv
test
sbb
dec
push
or
mov
subb
mov
js
inc
mov
popa
xor
mov
mov
fs
add
js
push
add
jp
fwait
les
push
test
jae
shl
push
out
jmp
sbb
loopne
loopne
subl
xchg
add
call
pop
lcall
xchg
xor
sub
mov
jmp
push
or
aam
in
and
das
adc
push
imul
andl
push
fldcw
sub
popa
xor
jne
add
fs
addr16
cmp
add
jmp
shrb
add
dec
aad
xchg
pop
in
or
adc
push
add
fistl
mov
adc
xchg
jmp
jge
push
scas
les
sbb
jne
clc
cmc
in
cmp
ret
cmpsb
cs
sbb
mov
xor
das
and
adc
data16
cmc
rcrb
jnp
xor
pop
mov
testl
mov
xor
das
popf
sub
cmp
or
gs
popf
push
call
xchg
aam
icebp
push
xor
pop
mov
data16
jmp
test
je
push
int
repz
sbb
loope
lcall
ja
mov
pop
iret
push
mov
sbb
sbb
push
mov
xor
in
or
fmuls
test
scas
lret
mov
je
popf
inc
adc
sbb
or
dec
mov
aam
test
stos
test
icebp
lahf
cmp
aam
mov
test
or
sbb
insb
mov
sub
add
cwtl
xor
out
push
addr16
cmp
in
add
movsl
sbb
hlt
inc
cltd
jecxz
ljmp
sbb
sarb
mov
dec
ja
mov
sar
pop
leave
nop
pop
cmpsb
nop
insl
std
jb
and
enter
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
fsub
mov
inc
je
adc
loopne
pop
aas
or
push
movzwl
pop
mov
add
and
push
xor
pop
mov
mov
adc
xor
mov
add
mov
xor
movswl
mov
sub
mov
sub
jne
mov
cli
cltd
out
and
rcll
scas
cltd
int3
pop
test
pop
sub
sbb
or
jle
cwtl
out
sbb
and
dec
shlb
rcrl
mov
movsb
decl
test
mov
and
xor
fisubs
adc
lods
sarb
mov
sahf
cwtl
std
imul
and
mov
mov
and
jb
xchg
lods
jge
cmp
push
cmpsb
fimull
ljmp
adc
pusha
xor
cmp
std
pop
cmpsl
mov
insb
fcoml
mov
insb
mov
xlat
fisttpl
mov
xchg
imul
xchg
cmpsb
jnp
pop
int
jp
and
mov
dec
fldcw
pop
mov
lret
mov
mov
xor
daa
jnp
and
add
and
stos
insl
ds
jnp
stos
or
adcb
cmp
mov
push
mov
mov
mov
mov
dec
sub
or
push
inc
adc
inc
mov
gs
adc
mov
stos
mov
and
and
sub
cmpsb
testl
xor
arpl
scas
cmp
dec
aas
adc
inc
mov
xchg
movb
mov
xor
mov
ffreep
aaa
daa
stos
jecxz
icebp
xchg
cmp
das
pusha
mov
adc
jbe
out
in
sub
xchg
dec
data16
push
jbe
add
sbb
jp
dec
mov
js
pop
xchg
out
push
jno
jge
push
adc
sub
adc
ljmp
cmp
jne
lcall
xor
xchg
adc
xchg
iret
inc
mov
pop
insl
daa
fists
and
jle
xchg
mov
lea
daa
enter
aad
jp
xchg
cmpsb
push
sti
sbb
stc
add
fwait
repnz
andl
inc
lret
xchg
lods
aaa
call
test
or
and
mov
xchg
out
xchg
scas
outsl
dec
sub
dec
icebp
or
mov
mov
fidivs
ret
addb
test
movsb
inc
enter
mov
cmpsb
mov
lahf
cli
inc
inc
xchg
cli
js
cmp
lods
sub
or
es
dec
rclb
xlat
xor
icebp
or
mov
xlat
jge,pt
mov
mov
jg
jns
out
adc
repz
and
aaa
imul
ss
and
dec
icebp
into
int3
xchg
mov
or
inc
in
cmp
adc
rorl
int
mov
jge
sbb
or
cmp
scas
ret
nop
shll
sub
pop
adc
cmpsb
dec
or
out
sbb
repnz
sub
jo
shlb
aam
dec
push
hlt
mov
sbb
and
jo
dec
mov
into
mov
loop
sbb
imul
xor
out
jo
and
mov
loop
mov
sbb
sub
or
ja
jmp
jo
scas
sub
sub
dec
and
ds
lods
adc
out
inc
or
lea
nop
sbb
inc
in
ret
outsb
sbb
inc
jne
sbb
pop
out
jo
divl
sbb
xlat
mov
repnz
cmp
jo
ret
out
je
sub
pop
and
shll
sub
roll
in
add
and
in
bound
stos
cli
je
sub
bnd
cmp
jo
test
lret
out
jmp
ret
cmp
jo
cmp
jo
js
sub
lods
sub
xchg
js
bound
mov
shll
repz
lods
cmpsb
insb
aaa
sub
jns
cmp
jo
mov
jp
movsb
push
loopne
loop
lods
sbb
push
mov
dec
pop
pop
jne
je
xor
mov
jo
scas
cmpsb
mov
movsb
pop
pop
cmpsl
pop
stos
aad
sbb
stos
shll
repz
lods
testb
and
movsl
fs
pop
mov
out
jmp
pop
cmp
jo
js
sub
sub
jno
xchg
aas
jno
sub
or
imul
test
pusha
jbe
sti
pop
jno
mov
jo
sub
jo
sub
jo
sub
daa
movsl
or
movsl
jnp
bound
mov
mov
gs
testl
je
mov
sub
fnstenv
mov
inc
push
outsl
lea
outsl
mov
sub
in
sub
ret
and
adc
xchg
push
mov
gs
scas
mov
inc
push
outsl
sbb
jp
push
jo
jmp
fimuls
mov
sub
jo
jmp
jae
push
mov
gs
scas
mov
inc
push
outsl
bound
adc
sub
out
jo
jmp
jae
push
mov
gs
xor
mov
testl
pusha
bound
dec
push
inc
popf
rcrb
xor
in
stos
push
jbe
adc
dec
outsl
cmp
jo
cmp
ret
and
adc
xchg
push
mov
gs
jmp
jno
sub
push
es
bound
dec
mov
sub
hlt
sub
je
movsl
xor
dec
push
sub
in
jo
and
cmc
push
mov
adc
inc
push
dec
push
test
in
jo
jo
lods
xchg
mov
jbe
sbb
bound
lods
adc
out
jo
sub
jo
cmp
shrb
xor
pop
jno
lods
sbb
sbb
xor
sbb
sub
das
outsl
or
sbb
mov
and
sub
in
sub
cld
adc
push
pop
sahf
mov
jo
adc
gs
lods
cli
xchg
std
jo
sub
repnz
jp
ljmp
or
pop
jmp
je
inc
pop
aaa
and
jae
mov
and
sbb
adc
notl
or
sub
jp
inc
in
jle
pusha
xor
mov
mov
pop
or
dec
add
les
gs
sbb
push
fsubp
inc
xor
mov
sub
jo
sub
jo
sub
jo
sub
jo
sub
jo
sub
jo
sub
jo
ds
dec
fwait
cs
mov
cmp
jo
pop
out
jo
sub
jo
sub
jno
sub
jo
sub
jo
sub
jo
xorl
sub
jo
sub
jo
sub
jo
sub
jo
int
fadds
sbbb
imull
jo
insl
es
ljmp
decb
xchg
jae
sbb
imul
bound
xor
outsb
mov
dec
and
jle
sarl
dec
pop
add
shrb
dec
push
aad
push
lret
fcompl
sbb
mov
and
lea
gs
das
sbb
jl
cmp
test
xor
inc
add
rcl
int3
out
mov
cmp
push
shrl
mov
loopne
pop
aad
js
lea
jnp
inc
jb
cmp
ss
sbb
stc
es
scas
cpuid
popa
dec
and
jecxz
ljmp
fsub
push
notl
jns
loop
enter
shrb
pop
cmp
adc
sti
push
clc
icebp
push
loopne
cmp
cld
cld
pop
outsb
stos
rol
and
cmp
push
fisttpl
cmp
adc
ss
outsl
lret
pushf
lods
movsl
shl
dec
and
ja
enter
aaa
mov
outsb
jbe
ljmp
out
jae
xchg
or
lea
aad
inc
push
icebp
test
pop
jb
cmc
adc
ja
inc
mov
das
popf
sahf
add
mov
sbb
push
add
in
or
les
jg
xor
or
sub
mov
cli
sbb
and
xchg
xchg
lret
and
sbb
filds
mov
subl
push
pop
sub
aas
call
ret
sbb
scas
adc
cmpsl
gs
test
mov
sub
dec
push
adc
mov
sbb
pop
shrl
inc
movsl
negb
stos
idivb
mov
mov
mov
mov
mov
fbld
in
push
pop
arpl
jo
dec
ja
aas
add
cmpsb
sub
mov
push
fwait
cmp
push
dec
add
dec
and
inc
mov
add
sbb
xchg
mov
call
stc
es
pop
mov
push
jecxz
pusha
or
push
dec
out
negb
rcr
outsb
xlat
inc
stos
rcrb
mov
cmp
iret
jnp
enter
rorb
cmp
idivb
mov
push
rorl
rcll
mov
pop
sbb
test
imul
mov
fistps
ljmp
fwait
push
cs
jecxz
in
shll
adc
cmpb
xchg
push
xor
or
pop
or
cwtl
push
rcll
movsb
ljmp
sti
les
cmp
jbe
test
and
push
push
jbe
add
add
or
add
adc
in
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
add
add
in
add
add
in
add
add
in
add
add
in
add
add
je
jo
xor
cs
insb
add
imul
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
cs
add
add
add
add
add
add
add
je
outsl
arpl
inc
jb
jne
inc
fs
gs
bound
jae
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
call
add
add
add
pop
pop
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lods
add
add
add
add
add
add
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
add
je
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
xor
xor
xor
xor
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
arpl
add
je
and
inc
add
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
xor
xor
xor
xor
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
or
adc
or
add
add
sub
add
or
and
add
add
or
test
add
or
adc
add
add
or
push
add
add
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
adc
sbb
adc
add
and
add
add
and
add
add
inc
add
add
jp
jno
je
aam
jno
xlat
das
jbe
fsubl
data16
xor
jg
add
or
pop
cmpsl
mov
cmp
stc
ss
loopne
jnp
jp
add
add
fldpi
inc
aam
jmp
into
lcall
xchg
inc
xchg
lret
scas
mov
repnz
xchg
iret
call
int
ljmp
mov
aad
adc
xor
jmp
int
jmp
xlat
sti
clc
idiv
stc
div
push
lock
out
out
inc
ss
or
daa
aaa
mov
in
in
push
repz
std
std
std
std
cld
sti
clc
hlt
icebp
push
call
jecxz
xor
add
add
pop
and
cs
and
andb
das
inc
repnz
dec
lock
div
cli
div
out
in
call
pushf
jmp
sbb
push
sbb
out
add
add
xor
ljmp
pop
and
pop
push
stc
ljmp
in
incl
lock
jmp
repnz
hlt
cmc
cld
cld
cld
push
out
jmp
jmp
pop
jmp
push
incl
add
add
xor
inc
aas
inc
ljmp
sub
ret
pushl
out
decl
repz
jle
in
jmp
lret
jmp
out
jmp
sbb
jmp
das
cs
inc
xor
dec
cmp
das
cmp
sub
lcall
ss
daa
inc
repz
cmp
pushl
push
lcall
aas
decl
cmp
ljmp
push
sub
xor
aas
xor
dec
das
sub
sbb
sar
or
jmp
dec
mov
pop
daa
fwait
call
sub
call
sub
lcall
and
lcall
xor
xchg
ljmp
daa
addr16
sub
add
add
add
sbb
xor
xor
decl
push
mov
incl
mov
call
mov
incl
incl
stc
decl
sbb
call
xor
push
add
jns
sbb
pop
ljmp
pop
and
or
lcall
ljmp
iret
call
mov
jmp
add
lcall
pop
inc
decl
add
add
and
enter
ljmp
pop
and
mov
incl
add
mov
pop
and
and
cs
add
add
add
es
xor
and
incl
add
call
add
jmp
sbb
jmp
daa
daa
xchg
sub
cmp
call
ss
mov
incl
add
mov
pop
and
and
and
xor
dec
cmp
pusha
dec
dec
decl
xor
xor
and
ljmp
pop
and
daa
pop
and
and
jmp
pop
pop
addb
add
xor
sub
inc
cmp
mov
das
and
and
daa
and
cmpsl
and
push
cmp
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
pop
add
rolb
add
sldt
lock
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
or
add
sub
sbb
pop
sbb
pop
adc
inc
bound
add
daa
add
add
add
add
add
add
add
add
pop
adc
pop
pop
adc
jb
sbb
push
sbb
add
add
add
add
or
outsb
jae
outsb
int3
in
or
cli
decl
xchg
clc
incl
push
mov
mov
add
addb
pop
mov
push
mov
decl
mov
decl
xchg
cli
decl
in
decl
outsl
int
or
xorb
add
sbb
lock
decl
ret
decl
test
incl
decl
mov
mov
mov
xchg
xchg
incl
cwtl
decl
xchg
incl
leave
pushl
int3
call
jge
lock
add
push
sbb
jne
call
lock
dec
jmp
sar
jmp
aad
in
jecxz
in
in
in
jecxz
in
in
out
in
pushl
test
cmp
in
cmp
decl
add
or
pusha
or
dec
mov
loop
push
jmp
push
repnz
stc
cmc
repnz
stc
div
push
repz
push
out
call
out
out
inc
mov
dec
incl
sahf
fucomip
or
pusha
sub
jge
in
in
out
jmp
repnz
std
std
std
cld
clc
cmc
repnz
jmp
lods
mov
and
cs
and
cs
and
cmp
sub
lcall
pushl
in
call
icebp
push
cmc
sti
stc
div
push
call
sar
push
dec
dec
jmp
sbb
push
sbb
lahf
sbb
add
add
pop
and
cs
and
sub
bound
fdivr
and
out
and
lcall
ds
jmp
call
push
repnz
in
loop
js
outsb
jmp
push
and
and
sbb
pop
sbb
xor
sub
cs
and
sub
jno
call
iret
jmp
and
in
pop
ss
call
aam
push
lock
out
out
out
push
lock
div
std
std
std
sti
stc
idiv
lock
jl
and
sbb
incl
add
add
and
jge
jne
mov
ljmp
into
lcall
sub
daa
aaa
mov
call
sub
cmp
aaa
dec
lret
imul
mov
sar
out
in
in
push
jmp
decl
sbb
jmp
sbb
pushl
sub
cmp
xor
ljmp
and
gs
pop
lcall
and
lcall
xor
lcall
aas
decl
aas
decl
inc
cli
decl
sub
lcall
jmp
sbb
pushl
sub
aas
xor
add
cs
and
dec
cmp
out
xor
and
call
es
lcall
xor
call
xor
lcall
cmp
decl
push
jmp
push
decl
jmp
dec
incl
sub
ljmp
inc
icebp
incl
sbb
ljmp
sbb
xor
daa
sbb
cmp
add
add
and
pusha
daa
and
or
ss
call
loop
ds
loopne
cmp
popf
cmp
imul
cmp
ljmp
push
mov
sub
xor
inc
movsl
lcall
in
ljmp
inc
hlt
call
sub
lcall
and
das
and
add
xor
cmp
ljmp
xor
adc
call
push
cmp
xchg
loope
adc
decl
scas
incl
icebp
call
pop
xchg
decl
push
mov
sbb
cmp
cmp
call
and
mov
adc
add
add
sbb
fbld
cmp
lcall
and
sbb
add
cmp
jmp
ljmp
sar
call
mov
incl
pushf
incl
pushf
incl
test
lcall
sbb
decl
sbb
incl
add
addr16
and
sub
and
sub
and
sbb
call
nop
ljmp
sar
incl
incl
ljmp
call
mov
incl
xchg
icebp
decl
insl
lods
jmp
das
notrack
and
sbb
cmp
mov
add
es
ljmp
pop
and
sub
and
sub
and
dec
inc
inc
lcall
push
jmp
pop
insl
decl
cmp
es
and
and
pop
and
xor
sub
push
push
push
push
sub
and
sub
and
sub
and
sub
and
ror
leave
inc
rol
cmpsb
movsl
cmpsl
jmp
sbb
sar
loopne
fcos
es
and
and
pop
and
xor
jmp
pop
sbb
add
and
xor
and
xor
ljmp
push
and
std
cld
ljmp
ljmp
push
sbb
mov
std
std
jmp
sbb
jmp
sub
jmp
pop
sbb
add
and
push
inc
das
das
incl
xor
inc
das
das
jmp
loope
inc
enter
lods
jmp
sbb
sar
rcl
sar
loope
loope
and
and
and
and
jmp
and
lahf
inc
xor
fistps
cmp
push
cmp
jmp
push
jmp
inc
dec
ljmp
pop
and
pop
push
push
jmp
push
push
jmp
pop
and
and
pop
and
pop
pop
sbb
and
inc
inc
out
bound
decl
cmp
sub
sub
and
sub
and
sub
and
xor
sub
es
and
and
jmp
and
pop
pop
sbb
and
push
xor
inc
fists
inc
cmp
sub
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
and
push
adc
sub
xorb
xor
xor
sub
sub
and
fbld
pop
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
xor
add
sbb
add
add
add
add
or
popa
fwait
or
fisttpl
pop
mov
decl
gs
or
decl
inc
mov
test
add
jo
add
pop
add
add
add
push
test
inc
mov
decl
popa
sar
or
decl
pop
mov
fisttpl
sub
mov
add
add
add
or
push
mov
or
std
incl
mov
incl
scas
incl
xor
or
leave
call
sub
clc
prefetchwt1
push
or
mov
sub
or
incl
lock
repz
movsl
decl
stos
incl
mov
incl
lods
std
decl
xchg
repz
push
mov
or
pop
sbb
add
add
mov
xchg
icebp
cmp
lcall
iret
incl
sar
or
jo
push
push
pop
call
stos
mov
lods
movsl
lcall
arpl
adc
sbb
incl
jmp
sar
incl
call
xchg
repnz
xchg
inc
or
xchg
and
test
jle
pushl
ljmp
jb
dec
inc
inc
pushl
fcmovne
jmp
loopne
jmp
xlat
jmp
xlat
jmp
xlat
in
loop
in
in
call
mov
call
push
test
push
mov
lcall
incl
decl
cwtl
xor
add
add
jae
mov
cmp
cmp
jno
call
loop
out
out
push
jmp
push
out
call
push
out
call
out
out
in
jecxz
out
in
out
in
lcall
inc
incl
int3
decl
jle
fadds
add
add
dec
test
pcmpeqw
mov
daa
das
pushl
jmp
out
push
out
call
sti
stc
idiv
cld
sti
cli
std
cld
sti
cld
sti
cli
sti
stc
idiv
clc
hlt
icebp
push
out
call
in
jecxz
in
jecxz
call
xor
or
mov
push
scas
adc
add
add
ss
leave
out
out
out
jmp
push
lock
cli
cli
stc
cld
cli
clc
push
repnz
push
jmp
fdivr
ljmp
jmp
and
cs
and
cs
and
cs
and
push
and
mov
scas
fdivr
push
sar
inc
push
in
dec
fs
pushl
repz
std
cld
sti
push
repz
push
out
jmp
inc
mov
ljmp
daa
sub
pop
sbb
push
sbb
adc
sbb
xchg
sbb
add
add
pop
and
cs
and
cs
and
sub
and
loope
iret
pushl
aam
xor
inc
std
lcall
jmp
in
cld
sti
cli
push
lock
in
in
call
inc
inc
jmp
sbb
pop
sbb
push
sbb
out
das
and
cs
and
cs
and
sub
dec
dec
push
jmp
ret
aaa
icebp
ljmp
inc
std
ljmp
inc
cmc
cmp
call
aad
cli
div
push
ljmp
js
push
daa
pop
and
and
sbb
jmp
sbb
xor
sub
xor
and
cs
and
sub
and
pop
push
push
push
out
jmp
lcall
xor
lcall
xor
fcos
cmp
mov
out
in
in
in
in
in
in
out
out
out
push
hlt
cmc
cli
cli
cli
std
cld
sti
push
out
jmp
incl
sbb
sbb
jmp
push
and
cmp
sub
ss
sub
sub
push
and
pop
push
push
push
repnz
jmp
pushl
inc
sub
lcall
and
call
pushl
inc
ljmp
dec
decl
pushl
mov
jmp
jecxz
stc
clc
clc
push
repnz
in
in
incl
sbb
jmp
push
ljmp
and
pushl
sub
incl
add
add
sub
sub
push
and
pop
push
push
push
repnz
jp
ret
pop
popf
decl
pop
stos
incl
pop
lret
inc
call
lcall
cmp
cld
incl
sub
jmp
dec
cld
decl
repnz
inc
in
pop
sub
ljmp
mov
int
iret
jmp
jnp
insb
jmp
sbb
jmp
sbb
cmp
das
pushl
sub
lods
cs
and
push
inc
aas
in
es
sub
and
sub
mov
and
jmp
cmp
decl
es
pushl
idiv
add
clc
decl
aas
incl
sub
jmp
dec
decl
xor
jmp
dec
incl
sub
jmp
cmp
lcall
lods
decl
aas
ljmp
sbb
ljmp
sbb
cmp
sbb
dec
cmp
ljmp
sbb
sub
lret
incl
sbb
jecxz
sbb
jmp
add
in
pushl
idiv
add
clc
jmp
push
lcall
inc
cmp
decl
decl
inc
incl
sub
ljmp
inc
repnz
sub
call
iret
jmp
and
sub
sub
cmp
add
sub
es
and
mov
incl
pop
call
das
in
ss
in
pushl
push
lods
cmp
sub
ljmp
xor
sub
sub
ljmp
xor
mov
call
aaa
sti
pushl
idiv
add
loopne
and
loop
pop
sub
call
sbb
xor
sub
sub
add
sub
and
sub
adc
jmp
xor
jmp
loop,pt
ss
int3
pushl
aaa
lcallw
sbb
es
jne
adc
xchg
decl
mov
call
jae
call
pop
cmp
pop
sbb
sbb
dec
jmp
cmp
jmp
cs
aad
or
lcall
pop
aaa
lahf
add
jp
and
mov
jmp
cmp
ljmp
aaa
xchg
lcall
sub
lods
incl
pushf
decl
mov
call
mov
lcall
lcall
enter
ret
adc
incl
pushf
decl
jnp
incl
inc
pusha
decl
sbb
out
add
mov
cs
sahf
jo
add
adc
mov
sub
decl
sbb
and
sbb
incl
pushf
incl
lahf
ljmp
decl
decl
decl
incl
pushl
sar
call
mov
incl
sahf
incl
pushf
incl
pushf
incl
pushf
lcall
sub
decl
sbb
add
popl
add
jns
sbb
sbb
ljmp
pop
and
sbb
xchg
lcall
mov
decl
decl
incl
ljmp
sar
call
mov
incl
sahf
incl
pushf
decl
dec
jmp
and
and
and
sbb
add
add
add
jns
pop
adc
ljmp
pop
and
sub
and
sub
and
sub
and
xor
inc
decl
jmp
push
jmp
sbbl
sbb
call
cmp
and
das
jmp
pop
and
and
and
and
and
xor
incl
add
add
and
ljmp
pop
and
sub
and
sub
and
sub
and
xor
sub
iret
leave
cli
repnz
jmp
and
sub
and
cltd
xchg
xchg
sti
hlt
lock
leave
ljmp
sub
es
and
and
pop
and
and
and
cmp
xor
xor
sub
add
add
and
iret
sub
and
sub
and
sub
and
sub
and
cmpb
cld
clc
cmc
pushl
cmpsb
test
pushl
sub
std
cld
push
out
out
out
jmp
jle
jns
es
and
and
pop
and
and
and
aaa
xor
jmp
pop
sbb
add
and
lahf
sub
and
xor
and
decl
lcall
pushl
lcall
push
decl
dec
call
pop
decl
enter
mov
and
pop
and
and
and
pushl
sub
jmp
pop
sbb
add
and
pusha
xor
sub
sub
cmp
sub
xchg
lea
jmp
push
imul
dec
inc
inc
pushl
imul
out
decl
pop
and
and
pop
and
sub
and
daa
and
mov
sub
fisttps
xor
dec
xor
xor
pop
push
dec
push
lock
sub
es
loope
call
push
jmp
pop
and
and
pop
and
and
and
add
and
pusha
push
cmp
cmp
push
cmp
decl
pushl
imul
dec
inc
dec
ljmp
pop
and
sub
and
dec
inc
inc
lcall
pop
jmp
pop
and
and
pop
and
and
push
scas
cmp
dec
lcall
aas
call
aaa
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
es
and
es
and
and
pop
push
iret
pop
pop
sbb
cmp
dec
dec
lcall
aas
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
and
jmp
and
jmp
pop
sbb
adc
add
add
cmp
out
dec
ds
cmp
and
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
push
pop
sbb
and
sbb
jo
sub
mov
xor
sub
sub
and
jmp
pop
fbld
pop
sbb
push
pop
sbb
clc
add
pop
lock
add
add
add
psubb
add
clc
add
pop
cld
add
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
add
add
psubb
add
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
aas
incb
add
incb
add
add
jg
addb
inc
add
jmp
pop
ljmp
add
add
add
add
add
add
and
add
add
andb
add
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
or
push
pop
mov
pop
sbb
add
sbb
add
push
popl
add
jl
add
pusha
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
add
or
add
cwtl
add
sbb
add
sbb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
test
and
or
xchg
call
or
lret
decl
sar
or
sar
or
decl
dec
mov
or
xchg
out
or
sbb
add
insb
add
add
add
imul
add
jb
add
xchg
or
dec
enter
jmp
dec
mov
or
decl
sar
or
pop
int3
decl
push
mov
ljmp
push
mov
add
inc
add
add
add
add
add
add
push
pop
push
lods
or
enter
clc
decl
lahf
decl
test
decl
stos
decl
test
decl
mov
sti
incl
incl
push
iret
incl
and
add
push
mov
add
add
add
push
incl
jns
incl
decl
lahf
decl
mov
decl
movsb
decl
popf
decl
mov
decl
bound
add
add
push
sbb
or
incl
incl
mov
incl
sar
push
mov
incl
incl
xchg
incl
and
decl
dec
xchg
lcall
xor
sub
xor
cs
daa
daa
loop
and
repnz
push
incl
pop
mov
incl
mov
incl
lods
incl
mov
incl
mov
incl
mov
decl
stos
decl
and
or
lods
and
jmp
sar
decl
int
incl
lret
incl
incl
add
decl
insl
mov
ljmp
dec
lcall
scas
sahf
call
mov
jmp
ror
fxch
sar
mov
xchg
jae
popa
pushl
outsl
incl
data16
xchg
incl
incl
lret
call
decl
call
movsb
decl
inc
cmpsb
int3
pop
inc
mov
incl
call
lcall
incl
enter
add
push
das
dec
pushl
sbb
pusha
dec
mov
aam
repz
out
jecxz
in
loop
in
loope
in
loope
out
loop
push
in
push
jmp
clc
in
loopne
jecxz
mov
xor
or
pop
incl
sar
add
std
call
pushl
incl
decl
nop
lock
inc
mov
add
xchg
dec
push
jae
ljmp
ljmp
ljmp
cmp
idiv
sbb
jg
push
or
ds
mov
lock
jmp
in
loop
in
in
out
in
out
in
in
in
in
loop
ljmp
jmp
in
sti
icebp
out
in
int
jl
pop
lcall
push
push
decl
push
xchg
call
into
lcall
incl
mov
or
lcall
add
add
inc
pushf
or
pusha
shlb
call
mov
ljmp
cmp
or
ja
arpl
ljmp
in
jecxz
out
out
push
jmp
out
hlt
out
out
hlt
out
jmp
push
out
call
push
ljmp
in
jecxz
ljmp
push
call
in
movsb
xchg
mov
and
push
decl
aas
push
incl
int3
incl
imul
push
or
or
pusha
jge
or
and
dec
jmp
or
js
push
push
out
out
out
push
jmp
push
out
jmp
stc
cmc
repnz
cli
div
cli
clc
cmc
cli
clc
idiv
cli
div
stc
cmc
repnz
repz
push
lock
call
fcos
jmp
loope
cli
lock
stos
lahf
xchg
jmp
adc
adc
pop
incl
lretw
dec
stos
adc
add
add
pop
xor
pop
dec
dec
in
loop
push
out
push
ljmp
clc
cmc
icebp
sti
stc
idiv
std
sti
cli
std
std
std
cld
sti
sti
stc
idiv
clc
cmc
icebp
push
lock
icebp
jmp
out
in
jmp
loopne
stc
out
loop
xchg
xchg
lcall
pop
xor
add
sbb
test
sbb
pushl
es
rol
mov
clc
icebp
out
clc
jmp
push
std
std
std
cld
cli
clc
idiv
div
out
push
in
out
out
out
ljmp
out
jecxz
call
dec
lcall
adc
push
adc
add
cs
and
pop
and
cs
and
sub
adc
decl
hlt
jmp
inc
mov
into
jl
aad
xchg
fdivr
repnz
out
cld
cli
stc
clc
repz
in
out
out
in
jmp
out
mov
push
pop
jmp
sbb
sbb
sbb
pop
sbb
cs
and
cs
and
cs
and
add
add
sub
sbb
pushl
es
fxch
push
in
jns
lcall
xor
lcall
xor
jmp
ds
jmp
inc
std
lcall
lods
fcos
sti
cld
cli
stc
push
repz
push
jmp
in
jecxz
ljmp
lcall
dec
lcall
pop
sbb
and
sbb
add
sbb
xor
push
sbb
lcall
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
adc
jmp
pop
stc
jmp
lcall
ds
lcall
cmp
incl
sub
incl
push
pushl
push
sti
clc
idiv
div
jmp
lock
aad
hlt
out
lcall
push
jmp
sbb
pop
sbb
pop
sbb
lcall
sbb
movl
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
sub
adc
call
push
pushl
incl
add
incl
cs
lcall
cmp
jmp
inc
jmp
pushl
std
sti
lock
std
std
stc
cmc
repnz
in
out
in
in
out
jecxz
dec
mov
and
and
cli
and
sbb
and
sbb
and
sbb
and
sbb
pop
sbb
das
and
das
and
cs
and
cs
and
sub
push
and
and
sbb
mov
push
jle
sar
sbb
loopne
sub
jmp
inc
lcall
idiv
adc
idiv
or
ljmp
cld
icebp
cld
cli
clc
push
icebp
in
push
call
cmp
xor
and
sbb
and
sbb
jmp
sbb
and
sbb
and
sbb
xor
fbstp
and
cs
and
sub
sbb
ljmp
sbb
mov
incl
or
incl
and
decl
sub
decl
ss
jmp
sbb
std
out
clc
cld
sti
repz
cld
cli
icebp
cld
cli
repnz
std
sti
repz
idiv
sti
std
cld
clc
hlt
icebp
push
jmp
in
jecxz
jmp
fcmove
decl
aas
lcall
sbb
jmp
sbb
jmp
sbb
ljmp
add
xor
and
ljmp
pop
and
cs
and
sub
sbb
ljmp
push
and
into
mov
std
jmp
and
ljmp
inc
idiv
ss
sti
ljmp
xor
sar
pop
xor
jmp
mov
mov
mov
xchg
xchg
mov
jle
mov
je
mov
je
mov
jle
mov
mov
inc
mov
fdivr
hlt
icebp
jmp
sti
clc
cmc
push
out
out
out
in
jmp
inc
inc
lcall
pop
jmp
push
jmp
sbb
jmp
sbb
ljmp
es
jmp
push
and
cs
and
xor
pushl
and
ljmp
and
sub
sbb
ret
mov
dec
enter
push
lret
and
decl
and
decl
adc
incl
jg
decl
sbb
decl
sbb
call
sub
incl
sbb
incl
adc
incl
push
fdivr
sbb
fcos
or
int3
decl
pop
mov
lcall
lcall
rcl
clc
imul
cld
idiv
div
in
push
jmp
into
incl
cmp
push
adc
push
jmp
sbb
pushl
cs
sbb
add
sub
and
cmp
das
ljmp
sbb
ljmp
and
sub
and
pop
adc
jmp
loope
call
or
lcall
pop
iret
ljmp
inc
ljmp
and
ljmp
push
decl
sub
incl
sub
ljmp
xor
incl
and
lcall
sbb
mov
imul
push
ljmp
fmul
ret
es
and
sbb
sbb
jmp
and
ds
push
data16
add
ss
sub
sub
push
and
sub
and
push
adc
in
jmp
stos
call
xor
decl
daa
fdivrp
add
jmp
add
icebp
ljmp
xor
incl
daa
cli
incl
sub
ljmp
incl
sub
incl
sub
decl
incl
sub
incl
push
incl
xor
incl
pop
hlt
incl
sbb
ljmp
mov
fcmovnbe
test
sbb
sbb
jmp
sbb
jmp
sbb
cmp
cs
and
sbb
add
ss
xor
ljmp
sbb
ljmp
push
and
sub
sbb
cmp
push
pushf
incl
adc
ljmp
in
call
in
incl
and
incl
and
hlt
call
ss
add
stc
incl
sub
ljmp
dec
decl
xor
incl
daa
incl
sub
ljmp
incl
sub
decl
xor
ljmp
dec
incl
sub
stc
call
idiv
daa
inc
icebp
incl
or
test
jmp
adc
sub
and
sub
and
inc
cmp
ljmp
push
and
das
and
pushl
and
sbb
and
and
call
sub
fdivrp
add
call
incl
and
incl
and
jmp
stc
lcall
cmp
incl
xor
pushl
pop
lcall
decl
call
cmp
pushl
pop
decl
ss
incl
sub
call
cmp
ljmp
dec
incl
sub
incl
es
lcall
cmp
jmp
cmp
ljmp
movsl
jmp
push
xor
sub
and
cmp
sub
sbb
and
add
add
and
xor
and
jmp
sbb
decl
sub
ljmp
inc
loop
add
incl
sbb
out
es
lock
sub
call
cmp
cmp
pushl
dec
mov
jmp
xor
sub
sub
and
pop
ljmp
xor
sbb
xor
ljmp
push
std
incl
sub
jmp
inc
idiv
pop
xor
incl
sbb
decl
daa
in
xor
decl
sbb
pushl
and
pushl
sbb
jl
add
add
pop
sbb
das
and
in
adc
jns
add
sar
add
int
xor
decl
sub
incl
sbb
call
cmp
incl
jecxz
sub
xchg
jmp
sub
and
and
jmp
adc
jmp
sbb
jmp
sub
jmp
and
lcall
push
adc
and
add
push
adc
lcall
pop
sbb
sbb
inc
call
xor
pushl
push
decl
clc
incl
sbb
call
inc
out
add
iret
incl
adc
ljmp
push
enter
or
add
add
sbb
daa
cmp
incl
pop
incl
adc
lcall
cmp
lcall
xor
xchg
pop
sbb
jmp
or
adc
sub
push
ljmp
sbb
jmp
inc
pop
call
jns
call
lcall
or
sahf
jmp
or
mov
jmp
push
push
jmp
adc
or
sbb
sub
incl
and
pop
xor
incl
sbb
incl
sbb
ljmp
daa
push
sub
add
add
mov
inc
into
decl
mov
add
sar
sbb
dec
call
lsl
and
sbb
lcall
push
jge
and
dec
decl
xchg
decl
mov
decl
sar
adc
decl
incl
scas
incl
test
decl
or
lcall
dec
jae
pop
push
jge
sbb
push
adc
or
idiv
adc
mov
lcall
sub
test
add
insb
add
add
jmp
xor
incl
jecxz
adc
adc
daa
push
or
incl
mov
incl
mov
mov
call
mov
ljmp
sar
ljmp
jmp
call
mov
incl
test
incl
sahf
incl
mov
stc
decl
lcall
and
lcall
adc
call
insb
incl
sbb
mov
sub
sbb
test
add
jne
add
jns
unpckhps
decl
and
sub
sbb
sub
sbb
sbb
add
incl
mov
incl
decl
call
call
call
incl
cmp
ljmp
lcall
mov
incl
fwait
incl
sahf
incl
sahf
incl
sahf
incl
test
jnp
sub
pop
jmp
sbb
incl
pop
scas
pushl
inc
iret
decl
adc
pop
add
jbe
add
jmp
adc
sub
sub
and
sub
and
sub
sbb
and
decl
jl
incl
mov
pushl
decl
call
lcall
call
decl
aas
loop
ljmp
sar
lcall
test
incl
lahf
incl
movsb
incl
mov
aam
sbb
jmp
push
and
sub
and
and
sbb
sub
incl
or
add
add
add
jmp
adc
sub
and
sub
and
sub
and
sub
and
sub
pop
ljmp
sbb
and
dec
call
push
call
xchg
into
lcall
mov
ljmp
call
ljmp
loop
jmp
aad
call
mov
incl
sahf
stc
incl
mov
decl
outsb
test
sbb
and
sbb
jmp
and
and
and
and
and
xor
and
incl
push
jge
add
add
push
add
sub
sub
push
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
or
and
sub
inc
lcall
cmp
outsl
jmp
imul
imul
adc
outsb
call
inc
pop
lcall
sub
push
ljmp
sbb
jmp
sbb
jmp
pop
and
and
and
and
and
and
and
sub
decl
or
add
add
add
add
and
mov
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
pop
adc
call
dec
call
ror
jmp
fcompp
decl
or
ljmp
adc
sub
or
dec
cmp
inc
mov
mov
lcall
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
and
and
ss
and
add
add
and
scas
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
sbb
jmp
loop
std
ljmp
lcall
adc
jmp
sub
jmp
loope
push
in
call
lcall
sbb
jmp
pop
and
and
pop
and
and
and
and
and
cmp
jmp
and
data16
add
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sbb
js
cld
jmp
xchg
mov
pop
sbb
sbb
adc
jns
ja
push
repnz
decl
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
xor
jmp
and
inc
daa
pop
and
and
sub
and
sub
and
sub
pop
and
sub
adc
test
fcmovu
fdivr
das
xor
pushl
xor
lcall
sub
adc
sahf
popf
sahf
lcall
pushl
jg
stc
clc
clc
inc
mov
sbb
and
pop
and
and
pop
and
and
and
sub
pushl
sub
lock
sbb
es
and
sub
and
das
and
xor
and
pushl
jmp
adc
scas
dec
int3
into
cmp
inc
call
mov
lcall
adc
mov
mov
bound
decl
popa
addr16
cld
cld
cld
dec
leave
enter
sbb
and
pop
and
and
pop
and
and
and
sub
and
add
sub
and
cmp
sub
cmp
sub
cmp
sbb
lcall
clc
stc
stc
ljmp
jbe
imul
mov
mov
and
movhlps
lahf
popf
popf
call
rcl
lcall
pusha
inc
enter
ljmp
adc
jmp
pop
and
and
pop
and
and
ljmp
and
sbb
and
pop
push
cmp
sub
inc
xor
incl
xor
inc
xor
incl
xor
cmp
push
jp
ja
sbb
adc
pop
adc
push
ljmp
imul
and
pop
and
and
pop
and
and
jmp
and
pop
sbb
and
push
push
sub
lret
cmp
dec
aaa
xor
decl
xor
pushl
and
call
std
std
ljmp
sbb
ljmp
push
and
push
adc
mov
pushl
sbb
and
pop
and
and
pop
and
and
pop
and
pop
pop
sbb
and
xor
pop
inc
inc
lcall
cmp
push
cmp
call
aaa
decl
xor
xor
dec
dec
call
push
jmp
sbb
daa
sbb
ljmp
pop
and
sub
and
es
jmp
sbb
fs
popa
ljmp
jmpw
pop
and
and
sbb
jmp
pop
and
and
pop
and
and
sbb
add
add
add
push
push
jge
ds
imul
pop
inc
cmp
push
cmp
decl
xor
pushl
and
sub
sbb
sub
and
sub
and
sub
and
sub
and
sub
and
daa
push
and
sbb
adc
jmp
pop
and
es
and
and
pop
and
and
and
pop
pop
sbb
pop
pop
sbb
and
push
lcall
dec
lcall
cmp
dec
aaa
xor
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
es
and
es
and
es
and
and
and
pop
pop
sbb
push
pop
sbb
and
sbb
dec
cmp
dec
call
cmp
inc
das
cs
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
daa
and
jmp
and
pop
pop
sbb
push
pop
sbb
pop
sbb
pusha
ss
push
inc
inc
decl
cmp
cmp
sub
xor
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
and
jmp
and
lcall
pop
sbb
pop
sbb
sbb
and
lea
xor
cmp
pushl
es
das
and
ljmp
and
ljmp
and
ljmp
and
ljmp
and
jmp
and
cld
pop
pop
sbb
sbb
add
add
sbb
sbb
and
and
and
repnz
repnz
repnz
pop
jecxz
pop
sbb
push
pop
sbb
add
add
orb
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
rolb
add
add
incl
add
jecxz
add
add
add
loope
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
pop
incl
add
clc
add
ud0
add
clc
add
pop
incl
add
incb
add
incl
add
incl
add
incl
add
inc
add
incl
add
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jns
cmp
mov
data16
xchg
in
xchg
mov
arpl
insb
and
inc
outsb
adc
pop
dec
add
push
mov
sahf
test
dec
jb
dec
and
cwtl
fucom
add
or
jnp
push
insb
pop
xchg
add
insb
imul
cmp
fst
imul
sti
jecxz
fcmovu
xor
stos
cmpsl
push
aad
mov
ljmp
shll
or
rcrb
inc
pop
or
mov
cmp
inc
dec
or
sub
push
enter
lea
mov
and
out
iret
add
fisubs
and
pop
and
test
jmp
add
addl
sub
inc
mov
inc
jmp
add
push
insl
xlat
inc
aad
lcall
imul
cmpsb
add
mov
pmaxsw
das
addr16
inc
pop
xor
arpl
lret
cmp
xor
mov
mov
cld
jmp
scas
jp
sub
add
pop
add
scas
out
add
pusha
das
lret
pop
rcrb
andb
xchg
mov
mov
cwtl
fyl2x
dec
xchg
rorl
sarb
popa
cltd
add
sub
out
cwtl
in
cmp
mov
ja
mov
dec
or
add
fmuls
mov
rorl
sbb
sbb
test
mov
movl
shll
xor
test
pusha
pusha
bound
push
add
add
xchg
inc
sub
adc
mov
add
or
or
dec
jecxz
xchg
jno
mov
add
or
in
pop
push
xchg
imul
popa
pop
cwtl
ret
xlat
je
xor
inc
sub
pop
movsl
add
movl
dec
and
add
or
lret
xchg
shll
or
or
mov
lea
mov
shlb
xchg
mov
hlt
les
ficoml
out
js
aas
cli
dec
bound
mov
sbb
loope
cmpsb
test
loopne
rolb
pop
sbb
leave
int3
jg
gs
pop
xchg
or
pusha
pusha
push
mov
out
add
xchg
and
xor
movsb
inc
movb
jmp
sub
mov
scas
scas
btsl
push
inc
lahf
sarl
dec
pop
push
and
movsb
out
cvtps2pi
call
or
jmp
cwtl
pop
sub
rcrb
rcl
int
insl
mov
je
jl
mov
xchg
push
mov
adc
jge
pop
sub
jns
scas
sbb
lock
loope
sub
test
orb
subl
sarb
add
cmpsl
pop
lret
add
push
xor
mov
movsl
mov
sbb
scas
mov
stc
es
adc
insl
shrl
cmp
inc
repz
ja
push
imul
das
cmp
orl
mov
and
insl
pop
es
shll
das
rorb
hlt
cmc
scas
mov
mov
or
jmp
sbb
dec
jp
iret
out
stos
in
xchg
add
icebp
pop
rorb
and
call
mov
xchg
pop
jae
lock
xchg
sbb
fisubrl
outsl
mov
add
push
xchg
push
add
lock
cmpsb
lds
scas
inc
dec
nop
sub
test
or
xor
jl
adc
dec
lcall
orl
and
nop
mov
pop
mull
mov
add
aas
inc
pop
clc
stc
jnp
popa
pop
lods
pop
xor
adc
fdivp
cmp
mov
xchg
dec
add
dec
stos
push
jecxz
scas
sub
daa
ret
hlt
pop
adc
adc
test
and
sbb
mov
push
int3
xchg
js
adc
mov
jo
cmp
pop
addb
xchg
adc
jo
xchg
movsb
mov
inc
movsl
push
mov
pop
aas
push
daa
inc
pop
pop
or
or
add
repz
or
sub
jp
xchg
mov
sbb
jo
ficomps
sbb
addb
xorb
pop
mov
insb
inc
xchg
jnp
inc
mov
mov
mov
test
or
xor
cmp
xor
call
sub
addb
bound
out
addl
add
dec
jmp
cmpsb
sub
cmpsb
aad
lock
dec
push
sbb
sbb
inc
outsl
xchg
aas
xchg
sbb
mov
add
mov
shlb
rcll
jno
mov
ror
or
aaa
loopne
shl
fwait
cmpl
scas
sbb
orb
inc
and
les
insb
jb
fmuls
mov
mov
aam
sub
or
jecxz
mov
out
arpl
pushf
stc
flds
and
inc
and
mov
dec
cltd
and
xchg
mov
pop
mov
xchg
push
xchg
fimuls
lcall
jg
push
cmp
sbb
outsb
shlb
jne
mov
lret
sub
adc
lds
je
ljmp
cltd
xchg
cmp
pop
icebp
imul
add
add
dec
mov
loop
jge
mov
dec
fwait
cs
dec
movsl
ret
adc
dec
dec
push
scas
push
nop
sahf
pop
cltd
hlt
les
sarb
add
je
inc
add
jnp
cwtl
mov
adc
sub
mov
pushf
xchg
pop
or
testb
fldenv
sbbb
push
imul
data16
lret
mov
lret
scas
mov
mov
por
ret
sub
cmp
les
loopne
icebp
xchg
push
in
sti
stc
inc
repnz
addr16
inc
dec
movsl
ret
mov
and
or
dec
mov
stos
push
sub
ss
cs
jp
fidivrl
mov
loopne
cmpsb
sbb
sti
or
mov
lock
pop
mov
add
vpsrlw
pop
xlat
or
adc
clc
loopne
mov
lea
stos
lea
xor
je
adc
sub
inc
outsb
inc
cld
push
add
nop
inc
xchg
sarb
cwtl
push
xchg
or
sbb
je
lock
hlt
lret
push
inc
es
in
dec
lahf
inc
mov
sub
xchg
dec
push
pop
out
push
lret
sub
inc
popa
mov
sti
jmp
mov
ret
sbb
mov
divl
push
and
dec
int3
clc
das
sbb
movsl
test
js
pop
cli
cld
mov
in
ret
xor
int3
add
push
ljmp
dec
or
xlat
jne
sbb
popa
cmp
jg
jecxz
popf
adc
test
jle
fstps
adc
jle
in
fs
xor
push
sub
pop
mov
sub
or
je
adc
xchg
in
sbb
xor
fwait
sub
sahf
pop
shl
cmpsl
dec
or
dec
pop
aaa
sti
fisttpl
sub
loopne
adc
ja
faddl
cmp
sbb
movl
roll
loope
mov
add
pop
je
adc
push
push
lods
aad
cwtl
test
cmp
mov
ds
cltd
add
cltd
pusha
outsb
insl
or
adc
adc
lcall
xor
push
cltd
test
scas
aaa
and
fisttpll
and
fdivs
je
ret
cmp
sbb
jne
jnp
pusha
pusha
pusha
mov
adc
xchg
shlb
subb
movsb
mov
pop
mov
jl
jno
sbb
push
sti
loop
pop
lds
testl
std
xchg
jbe
inc
add
adc
adc
dec
loopne
pop
orb
repz
fbld
push
in
pop
mov
mov
out
push
push
cs
jno
mov
in
push
rolb
cltd
stc
inc
push
mov
add
mov
pusha
fsubrl
cmpb
outsl
or
add
cltd
add
das
mov
mov
fwait
cs
pop
loope
jb
ret
sti
add
cs
adc
pop
adc
test
and
hlt
icebp
dec
roll
lret
or
add
popf
xchg
xchg
add
sub
stc
inc
pop
jmp
pop
sbb
sub
pop
xor
or
mov
xlat
and
cmp
test
mov
cwtl
out
dec
push
xor
stos
or
imul
out
or
mov
ret
rcl
out
mov
int
or
hlt
mov
mov
mov
in
cld
icebp
cwtl
out
fldl
movb
jae
inc
pop
or
add
aas
pusha
dec
pop
or
mov
dec
pusha
sbb
movsl
sahf
fstpl
sbbb
xchg
fisttps
lahf
insl
cmpsl
pop
mov
jp
xchg
sub
and
mov
or
int3
and
or
and
inc
je
insb
mov
and
mov
icebp
testb
ljmp
jbe
arpl
insl
mov
mov
insl
and
push
push
xchg
mov
jb
and
jnp
test
das
and
push
pop
add
xchg
push
js
rolb
and
das
bound
cmp
dec
push
mov
sbbb
inc
or
xchg
loop
xlat
mov
add
push
sub
jg
pop
iret
mov
push
pop
sbb
test
aad
test
adc
push
in
push
in
cmpsb
jle
stc
jecxz
cli
fsub
xor
int
jg
out
pop
lahf
scas
imul
clc
jnp
jmp
mov
pop
pop
sub
push
fs
inc
dec
add
jp
jle
mov
sbb
mov
clc
ret
loop
mov
popa
mov
pop
push
add
inc
mov
inc
pushf
add
fildll
paddd
sub
jb
push
xor
scas
dec
mov
inc
dec
pop
jno
std
cmpsb
popa
bound
mov
es
lret
fcompl
fsubl
adc
mov
rolb
loopne
daa
andb
jp
nop
dec
movsl
sbb
or
mov
push
xchg
fdivr
push
bound
cmc
imul
inc
add
loop
mov
and
jae
aam
cwtl
test
loop
int
or
xchg
inc
lret
dec
adc
fwait
das
add
shrl
and
jle
or
dec
cmpsl
mov
mov
xor
in
mov
and
mov
das
lcall
inc
mov
fbstp
or
lods
pop
popa
pop
dec
movsl
lock
xchg
mov
es
or
cmc
fcoms
adc
jmp
ret
or
inc
xor
xor
jp
jmp
sbb
std
rclb
fldt
fisttpll
rol
cmp
sbb
sbb
jne
aam
push
shr
sub
dec
dec
add
adc
jmp
insb
add
mov
repnz
scas
mov
pop
lahf
cmp
sbb
clc
fistpll
jecxz
sbb
xchg
sub
aad
hlt
popf
loope
mov
or
lods
sarb
std
in
cmp
cmpsl
sub
scas
outsl
xor
or
jmp
mov
xrelease
std
insl
xchg
int3
add
lods
jg
in
pushf
push
or
adc
mov
fstpt
repnz
icebp
lds
faddl
push
shll
or
test
mov
jne
or
repnz
mov
mov
sti
lods
fdivl
mov
inc
nop
out
sub
test
jne
ss
xchg
addr16
cmp
ficomps
fsubl
pushf
and
ret
les
imul
inc
mov
adc
sbb
test
pusha
ds
jno
and
inc
and
lahf
inc
insb
mov
mov
insb
fnstsw
ret
pop
ljmp
outsl
fcomip
sbb
xchg
fiaddl
mov
test
mov
jl
cmp
mov
lea
ds
repnz
out
jl
add
dec
add
test
mov
xor
mov
jae
adc
movsl
push
in
clc
add
fistpll
adc
cmpsb
mov
pop
adc
adc
and
sti
arpl
jnp
adc
aas
add
movsl
lret
mov
pop
nop
mov
sub
dec
out
mov
pop
cmp
imul
pushf
bound
decl
movsl
xor
test
mulb
stos
mov
sbb
in
imul
sbb
aas
rclb
and
jl
fstpt
dec
or
dec
jne
fidivrl
call
inc
loope
mov
enter
out
sahf
xchg
jno
xchg
add
pop
cmp
pushf
out
sub
pop
lock
mov
popa
cmpsb
scas
ffree
pop
adc
aas
xchg
addr16
sti
into
sbb
sub
lock
ret
out
inc
lret
js
sub
clc
aas
xor
out
repnz
test
mov
stos
dec
shrb
mov
aas
shl
pop
loopne
and
cli
cmp
dec
lahf
and
pusha
mov
mov
ret
inc
test
or
icebp
cmpsl
data16
and
jl
aas
or
mov
dec
movsl
repz
adc
adc
jg
dec
pop
sbb
dec
and
adc
or
add
push
repz
in
lahf
cli
in
lahf
in
mov
das
inc
sub
jge
fisttpll
mov
scas
inc
mov
cmpsb
push
sub
popf
out
jle
xor
popf
xchg
pop
jle
mov
std
or
and
cmp
test
xchg
addb
mov
add
push
loopne
stos
add
lret
jge
orb
xor
and
imul
out
xchg
cmp
stos
hlt
inc
xchg
js
and
icebp
icebp
std
inc
imul
shrl
iret
pop
stc
clc
ds
iret
clc
jg
dec
outsb
js
repz
pop
jge
mov
cmpsl
inc
or
inc
sbb
jne
stc
out
dec
jl
jecxz
or
jbe
add
jo
loope
and
nop
test
fdivl
fbld
pushf
and
adc
aas
sub
imul
lods
sub
cwtl
mov
mov
jecxz
mov
jg
cld
sub
ds
rorl
push
sub
loope
jecxz
sbb
jecxz
jo
mov
dec
repz
mov
pop
subb
scas
xlat
cwtl
sahf
lock
xor
or
ja
loope
and
aaa
std
or
and
lock
add
dec
adc
sbb
cmp
dec
push
pop
add
mov
scas
fneni(8087
ljmp
xor
iret
pop
sub
adc
imul
sbb
or
out
jl
pop
int
rcll
clc
int
cld
out
or
push
loop
out
add
push
and
std
cmc
xor
inc
sub
lret
lock
addl
add
push
stos
pop
test
sub
cmp
and
orl
sbb
push
mov
mov
lret
call
psubq
scas
fstps
scas
stos
dec
jnp
outsb
fcmovne
jne
pop
mov
sub
fisttps
inc
lods
push
popf
loop
cltd
out
cmpsb
std
inc
mov
in
xlat
or
or
xor
xor
decb
cld
mov
imul
cmp
imul
mov
adc
xchg
popf
sbbb
or
scas
leave
dec
mov
lods
jmp
pop
shl
push
lods
addb
loope
cs
xchg
scas
hlt
mov
ja
adc
mov
mov
mov
push
loope
rorl
adc
ds
xor
movb
sbb
and
sbb
inc
sub
popf
jle
cs
mov
and
mov
adc
scas
pop
lods
xchg
inc
sub
lock
pop
lock
out
mov
add
popf
dec
xchg
imul
pop
xchg
dec
and
sub
pop
ja
lcall
xor
inc
scas
rcrb
cmp
inc
inc
out
jecxz
decb
shlb
mov
cld
cmp
cmp
xchg
cld
dec
mov
inc
inc
popf
sub
fwait
adc
loopne
pop
mov
or
sbb
rcl
sub
das
mov
jmp
fbld
push
popa
mov
dec
and
cwtl
imul
push
jo
adc
xor
fbstp
or
scas
out
es
in
inc
rorb
xchg
sub
clc
dec
dec
sbb
and
xor
adc
fbstp
in
imul
insl
pop
mov
mov
cmp
lock
mov
fbstp
and
jmp
xlat
dec
jmp
dec
movsl
ret
xchg
and
dec
loopne
in
pop
cmp
mov
cli
ret
rcll
or
lods
mov
into
adc
in
adc
sub
jne
xchg
cmp
icebp
mov
aas
call
or
xchg
and
cli
pop
sbbb
lcall
in
cmp
repz
out
dec
jmp
insb
mov
cmp
push
pop
loop
repnz
hlt
loop
sub
mov
shl
add
in
mov
in
fbstp
das
aas
adcl
repnz
stc
jmp
cli
sub
aas
xlat
xor
mov
mov
repnz
add
pop
dec
sub
lods
sbb
rcl
stc
das
vlddqu
add
dec
and
mov
jecxz
pop
inc
mov
test
nop
in
push
inc
push
sbb
cmp
mov
mov
es
out
cmp
sti
lahf
pop
xchg
lods
pop
cmp
inc
sbb
mov
stc
sbb
pop
mov
mov
and
mov
das
jge
pop
cli
mov
push
data16
test
xchg
xlat
mov
fcmovnu
sahf
xor
hlt
dec
jns
movsl
xchg
cli
negl
out
inc
lds
mov
mov
push
mov
addr16
addb
mov
repz
aas
test
sarl
inc
jmp
sub
mov
test
push
cmc
xor
cmp
pop
cs
jae
jl
xchg
pop
cmpsb
gs
pop
xchg
adcl
pop
lods
sti
fdivp
xchg
mov
push
fidivs
pop
fs
dec
mov
pop
neg
mov
or
test
mov
adc
lods
cmp
repz
shll
jle
scas
xor
adc
pushf
add
jbe
and
test
jmp
sub
aaa
mov
lods
dec
or
call
jo
fdiv
es
test
mov
and
test
lcall
mov
sub
mov
scas
lahf
das
push
sub
or
cwtl
test
pusha
sbb
xchg
mov
sub
push
scas
es
aam
insl
cwtl
xchg
vmaxpd
sbb
or
cmp
mov
adc
pop
lock
iret
fcomip
daa
in
fscale
mov
push
sub
mov
pop
xchg
mov
lods
inc
cmpl
cmpsb
xor
insl
push
pop
fistl
fnsave
scas
pop
pop
lds
outsb
test
adc
or
add
push
rclb
inc
adc
aad
jg
ss
push
lret
adc
in
jge
push
sti
xchg
mov
les
js
ret
push
pusha
sti
dec
adc
lahf
das
and
popa
or
mov
mov
or
arpl
jp
cwtl
sar
fsubr
lahf
or
sbb
xchg
shrl
or
mov
imul
sbb
scas
das
fstpl
pop
pop
js
push
cmp
jmp
repnz
dec
jmp
pop
out
out
inc
divl
inc
mov
adc
cmp
cld
mov
push
xchg
dec
in
or
pusha
fldl2t
loopne
addr16
sbb
adc
dec
add
pop
mov
or
mov
insl
push
jg
push
testb
hlt
rcrb
jle
sub
cmp
push
dec
add
add
pusha
cmp
cs
sti
pop
push
mov
mov
aaa
ffree
lret
mov
jo
out
popa
fstps
std
sti
push
or
lahf
int3
xchg
out
cmpsb
popa
cmpsl
or
jge
outsl
xchg
sbb
dec
jge
scas
jg
jnp
out
das
icebp
popf
out
incl
push
push
xchg
mov
iret
aas
push
mov
pusha
std
cld
scas
lods
mov
mov
sarl
rcl
mov
inc
xchg
mov
add
mov
and
xor
int3
cmpsl
xchg
cmpsl
dec
add
push
and
test
mov
rolb
cmpb
pop
mov
dec
dec
or
jbe
test
xchg
out
jmp
aas
fstp
jno
in
sahf
fucomp
in
dec
inc
add
jo,pt
loop
fcomip
jbe
testl
jmp
push
or
cld
jmp
scas
xlat
ror
scas
push
or
cltd
fst
mov
jle
in
inc
push
je
adc
lods
xorb
mov
jecxz
mov
test
shr
in
fs
loop
popf
add
cs
in
add
mov
sbb
xor
xor
popl
lret
mov
ror
add
out
mov
dec
mov
pop
jns
xor
xlat
jno
pop
xchg
fisttpll
aas
xor
repz
sbbl
and
xor
inc
mov
cmp
sub
into
pop
add
scas
pop
lods
std
mov
in
pop
add
data16
iret
jg
popa
dec
das
rcrb
push
adcl
xor
jle
mov
je
inc
inc
fdivrl
cs
mov
ret
std
rcrl
cmp
int3
and
mov
fldt
jnp
jo
sub
outsb
inc
mov
mov
jmp
pop
data16
add
orl
pushf
int
mov
mov
xor
lcall
push
cmp
jg
mov
or
xchg
or
pop
add
nop
add
cmpsl
fstpt
adc
movsbl
das
fdiv
movsl
cmp
roll
out
mov
loope
ds
jno
cmc
mov
dec
fwait
cli
inc
out
xchg
mov
mov
push
xchg
outsl
orl
mov
loop
inc
inc
add
xor
popf
adc
jns
setge
or
inc
jns
mov
imul
mov
repnz
rorl
test
mov
or
cmc
sub
cmp
lret
cmp
add
scas
jo
les
dec
sbb
mov
fwait
test
dec
ja
shll
repnz
jbe
mov
data16
std
or
jl
mov
nop
cmp
test
mov
loopne
mov
out
cmp
add
xor
and
aad
mov
cmp
mov
mov
sub
mov
leave
jmp
push
sub
sbb
insl
out
sbb
arpl
shll
mov
pop
jns
xor
scas
arpl
pusha
add
xchg
nop
add
dec
pop
lds
mov
xchg
mov
mov
andb
mov
mov
mov
insb
in
ret
pop
dec
add
jmp
cltd
incb
shr
jle
jle
mov
or
cld
sbb
in
lahf
cmp
dec
mov
adc
xchg
dec
sbb
dec
inc
popa
cwtl
cmpsl
sub
push
add
inc
fldt
pop
push
mov
adc
add
lods
sub
or
mov
bound
adc
jge
test
sub
jnp
xchg
in
cmp
lods
add
inc
pusha
mov
test
js
mov
add
push
movsl
or
or
inc
jo
push
test
and
shrl
ret
sbb
cmc
push
xchg
out
cli
leave
cs
daa
test
sub
add
aas
shl
fstpl
inc
xchg
in
ds
xor
push
pop
jecxz
pushf
or
js
and
or
adc
cmp
xchg
xchg
jp
add
cmp
cmp
adc
out
mov
mov
insb
sbb
in
mov
and
ret
mov
mov
outsl
jns
stc
pop
ljmp
imul
in
sub
mov
cli
aad
test
cli
pop
aas
out
into
mov
std
xchg
cld
std
in
lahf
lea
add
shlb
cli
scas
testl
stc
adc
cltd
std
jge
and
movlps
mov
pop
aas
xchg
sub
pushf
jne
mov
call
jmp
sub
gs
or
idivb
mov
xor
sti
add
sub
fdivrp
idivb
loop
scas
jl
xchg
sub
mov
fdivp
inc
lcall
out
adc
rcrl
jno
jbe
lcall
pop
mov
fucomp
leave
pop
mov
add
push
stc
popf
outsb
loopne
sti
pop
rolb
data16
pop
sarb
lock
into
inc
lret
push
shlb
clc
add
test
ss
je
ljmp
fistpll
inc
and
cmp
xchg
movsl
pop
test
or
ret
mov
push
sti
outsb
sti
adc
jmp
xchg
arpl
fsub
imul
daa
push
lea
mov
out
mov
testl
dec
int3
lea
enter
mov
bnd
outsl
jle
fwait
mov
dec
mov
ja
mov
adc
add
dec
mov
mov
pop
push
test
cmp
adc
mov
inc
inc
inc
js
mov
push
sbb
and
mov
lret
popa
xchg
outsl
aad
test
lock
mov
or
mov
jo
mov
inc
adc
sub
sub
sti
and
and
jmp
insl
xchg
mov
cmc
ds
jmp
insb
shlb
jmp
int
xchg
shll
cltd
enter
or
scas
push
dec
mov
mov
movsl
sarb
lods
push
push
imul
vpunpckhbw
pop
push
and
cmc
lahf
jl
add
fdivs
or
out
or
aam
or
jl
ljmp
mulb
lret
mulb
mov
xchg
mov
fcmovbe
mov
xor
lret
test
adc
jecxz
xchg
xchg
adc
popa
leave
je
mov
fistl
decl
lock
jl
adcb
push
add
add
repnz
inc
push
ret
xchg
jbe
into
inc
add
popf
jns
lock
and
mov
mov
push
push
es
mov
test
cli
into
repz
or
pop
clc
ret
sti
jbe
sti
setne
or
or
add
je
dec
mov
push
jno
outsl
pop
cli
movsb
jmp
addr16
dec
fildl
lahf
fsub
test
rcrl
lret
mov
ja
push
and
push
leave
je
mov
in
adc
aas
int3
cmp
mov
push
andl
rcrb
inc
inc
inc
clc
cld
out
inc
ss
jl
aad
fs
adc
fwait
pop
xlat
ret
add
cmp
xor
stc
sbbl
insl
dec
push
loope
stc
outsl
arpl
sub
in
sti
pop
pusha
out
jbe
js
jge
add
add
loopne
lods
push
dec
je
push
ds
inc
ficompl
fidivrl
mov
ja
mov
fcomps
add
pop
push
jmp
aas
push
ja
nop
neg
xor
out
or
cmp
xchg
insl
inc
shrb
idivb
int
neg
cmpsb
inc
or
jnp
std
xchg
jg
and
std
pop
movsb
push
jle
ds
out
push
sub
aam
mov
mov
pusha
ds
int
jl
and
pop
je
push
and
push
push
xchg
pop
mov
add
and
dec
inc
inc
push
jbe
adc
mov
jno
adc
add
sub
pop
push
ss
xor
xor
jnp
ljmp
je
iret
sbbl
das
mov
inc
or
idivb
incb
xor
lcall
pop
insb
fnclex
cmp
clc
imul
and
add
inc
rcll
movsb
push
sub
adc
push
dec
loopne
inc
clc
push
dec
xchg
pop
lret
xor
fwait
pop
out
or
out
rcll
inc
lcall
int3
pop
cwtl
subl
fsubs
scas
adc
rolb
inc
rcrb
mov
pop
cwtl
fnstenv
aaa
mov
ss
or
adc
dec
and
addr16
ljmp
test
ljmp
mov
and
xor
incl
insl
xchg
pop
sbb
xchg
roll
push
loope
scas
cld
or
bnd
add
dec
jmp
push
in
push
cmpsb
and
fldt
fs
xchg
push
scas
cltd
imul
xchg
dec
addr16
jbe
sbb
adc
xor
adc
test
popa
or
repnz
fsub
stc
fistpll
shll
jmp
mov
inc
adc
push
scas
movsb
push
cwtl
dec
cmp
lea
push
cmpl
xchg
int
fistl
mov
fidivrs
inc
inc
jg
xor
mov
xchg
orl
sbb
iret
lds
cmp
jl
jmp
dec
lret
leave
sbb
or
dec
cmpsl
or
repz
cmp
xor
in
hlt
jne
mov
adc
lahf
sub
hlt
fcmovbe
jno
jbe
xor
xor
jl
jg
fisttpl
mov
outsl
out
jae
cmpsl
bswap
xor
cli
xlat
mov
xor
or
out
in
sbbb
rcrb
popa
cltd
or
out
repz
or
clc
xor
pop
movsl
nop
pminub
scas
jg
sbb
insl
push
xchg
cwtl
push
call
mov
icebp
test
jg
sbb
in
cmpsl
test
mov
mov
jo
mov
pop
pop
incl
xchg
mov
inc
add
sti
sub
or
out
jmp
mov
cld
sbb
pop
pop
cmpsl
nop
xor
cwtl
mov
fnstcw
push
into
lahf
mov
addr16
push
sub
adc
sahf
mov
in
add
inc
rcrl
inc
clc
cmp
adc
dec
loopne
out
nop
jg
mov
xor
addr16
dec
fwait
jp
cwtl
in
es
inc
fwait
adc
ret
jle
outsl
mov
lret
repnz
add
cmp
stc
jecxz
mov
inc
inc
imul
into
mov
add
movsb
pop
pop
adc
movb
push
or
mov
data16
mov
cli
shrl
ret
mov
in
out
nop
idiv
cmc
sti
jge
fists
adc
leave
jl
mov
ss
outsb
jl
aaa
cmp
test
std
int
xchg
mov
jp
es
jmp
sti
adc
icebp
negb
mov
adc
movsl
sbb
jmp
sbb
cwtl
add
mov
je
data16
cmc
inc
pop
cld
sbb
into
in
and
out
or
ss
adc
add
out
iret
mov
cs
fisubs
div
lock
psllq
inc
hlt
lock
cmc
or
push
std
ss
cmc
push
sbb
lods
daa
nop
dec
addr16
loope
lahf
cltd
aam
xor
push
cmpsb
popf
and
dec
gs
jmp
dec
sbb
aad
scas
aas
jnp
rcr
out
cmpsb
cmpsl
sbb
add
les
pop
ja
das
mov
mov
in
cmpsb
lahf
dec
cwtl
fwait
out
insb
ret
je
push
imul
sub
xchg
mov
iret
das
dec
cmp
cld
and
jp
dec
or
rorl
into
in
xor
push
jmp
pop
or
stos
push
leave
jnp
mov
repz
iret
lea
into
fiadds
pushf
push
xor
popa
cwtl
in
mov
push
jp
mov
test
je
or
jns
jl
test
xchg
dec
cmp
inc
push
sbb
int3
stc
sbb
sbb
inc
fmul
adc
jnp
iret
cmp
aam
iret
mov
idiv
sbb
mov
outsb
test
lcall
fwait
jo
xor
dec
ficompl
test
test
and
ds
fdivrl
rcpps
or
mov
xor
repz
std
inc
or
cmp
sbb
adc
adc
es
imul
xchg
int
add
into
or
mov
pop
pop
jp
in
dec
sbb
cmp
sub
stos
shlb
sub
fnstenv
push
sub
fld1
push
in
subl
ss
sub
fdivrs
pop
pop
popa
push
cmp
jg
testb
xlat
add
fcmovne
insb
push
mov
ds
cmpsb
pop
aaa
fdivs
popf
jl
cwtl
testb
add
stos
push
push
lock
out
call
outsl
jge
mov
xchg
pop
int3
je
sub
add
sbb
test
repnz
dec
call
cmp
pop
out
jb
and
jmp
sub
decl
mov
in
aad
leave
jo
push
mov
loop
xchg
inc
mov
lods
div
mov
cmp
imul
dec
lcall
dec
sbb
fistps
jp
adc
gs
jp
push
cmp
and
or
arpl
rcr
out
mov
jle
mov
pop
rclb
shrb
and
dec
sbb
push
lods
push
jl
pop
ljmp
push
mov
pop
cmp
bound
jb
andb
sub
cld
inc
mov
cld
mov
or
mov
test
jl
and
jp
std
shll
pop
dec
sahf
ja
sub
lret
int3
out
mulb
jo
xchg
mull
sbb
fadd
mov
icebp
cmpsl
xchg
push
rclb
add
cmpsb
push
cld
mov
jg
pop
mov
lock
xor
add
ret
xchg
push
mov
pop
sti
dec
mov
ret
shll
pop
adc
jmp
xchg
sub
cli
into
push
push
repnz
ljmp
jb
pop
and
pusha
sbb
add
or
mov
mov
or
push
rorb
out
fmull
enter
pop
lret
repz
xor
jnp
pop
imul
xor
xorb
ficompl
es
in
pop
add
mulb
cmp
pushl
inc
lea
ja
fidivrl
sub
dec
dec
fld
stc
sbb
sbb
lods
sbbb
rorl
outsb
stos
jb
xchg
jne
or
pusha
mov
je
lds
ss
push
or
fmuls
adc
push
mov
cli
sti
sbb
imul
icebp
sub
mov
xchg
cmpl
xchg
push
jnp
jle
sti
sub
out
arpl
negl
out
cmp
mov
push
add
and
mov
xor
sbb
ret
sub
lcall
push
dec
addl
mov
lock
sub
sbb
sar
sub
pop
dec
sbb
mov
cmpsb
xchg
int3
sub
dec
pop
hlt
xor
cmp
test
arpl
fbstp
test
mov
subb
clc
add
mov
jl
mov
pop
jge
cmp
fimuls
cmp
mov
pop
icebp
in
sbb
lret
mov
stc
cmc
std
test
fidivl
cmpsl
cmp
push
movsb
jmp
test
imul
inc
jmp
adc
jmp
cmp
cmpb
imul
lock
popa
dec
adc
lods
jp
mov
pop
mov
out
cld
fs
lods
loop
icebp
arpl
shr
pop
inc
cmp
jnp
test
cs
mov
rcl
jle
insl
inc
fiaddl
lret
add
sub
sbb
jg
and
loope
insl
and
sub
push
pop
iret
repz
adc
mov
or
test
jge
and
pop
jns
enter
mov
sti
sbb
add
inc
and
rcl
ret
aas
rorl
cmpsl
lds
sub
shrl
mov
out
sti
sbb
pop
or
loop
sbb
rolb
xor
fwait
les
test
fcmovb
imul
or
jmp
jecxz
iret
sbb
ret
mov
movsl
xor
pop
in
mov
mov
and
jnp
xchg
rcrl
and
jbe
pop
lods
adc
imul
pop
sub
sub
insb
fists
cld
jne
adc
inc
or
mov
bound
shll
int
roll
push
mov
std
dec
jg
leave
push
sbb
mov
mov
sub
out
ljmp
cwtl
sbb
jp
outsl
clc
insb
aaa
sbb
ret
sbb
lods
mov
and
movsl
fisubrs
jbe
das
jns
sbb
lcall
xor
cmpsl
sti
cli
inc
or
add
loopne
lret
mov
lret
sub
jg
push
xchg
or
sbb
imul
jge
adc
rcll
movsb
rcll
jbe
add
fcomip
mov
das
shlb
incl
dec
es
int
jmp
mulb
or
mov
jg
and
inc
xor
jmp
pop
out
jge
outsb
sti
inc
das
pmaxsw
jmp
xor
push
sbb
mov
lcall
cli
test
push
les
ret
insl
push
jns
pusha
test
xchg
fistpll
sbb
ret
insl
xchg
cmc
aad
xor
cmpsb
cmp
or
mov
sbb
cmp
movsb
lods
cwtl
add
pop
test
imul
dec
mov
sub
sub
pop
adc
mov
xlat
in
loope
or
mov
dec
and
cmp
mov
push
mov
jp
pop
mov
jmp
imul
add
std
inc
pop
mov
xor
pop
sbb
mov
cmp
in
pop
xchg
ret
adc
xchg
insl
push
aas
jns
dec
inc
push
inc
pop
repz
jl
jle
arpl
push
or
pushaw
sbb
jg
shlb
adc
lods
pop
lods
pop
shll
test
and
jno
movsb
push
pop
dec
jae
pop
sti
sub
mov
push
mov
xchg
jmp
enter
gs
ds
sar
rcrl
dec
gs
pusha
cwtl
or
testl
jae
sbb
leave
jne
popf
adc
mov
test
add
orl
mov
rcrl
dec
pop
sbb
clc
xor
jg
aas
jp
or
ljmp
dec
xchg
jle
xor
xchg
jmp
ret
mov
sbb
adcl
pop
mov
mov
repz
xor
xchg
loope
nop
jmp
cmp
push
pop
mov
adc
shl
arpl
add
xchg
cli
sti
dec
lock
jmp
dec
iret
faddl
sub
insb
jg
xchg
jg
in
fldt
in
sbb
movsl
bound
sub
cmpsl
out
push
and
jno
cmp
cwtl
call
mov
jno
or
push
call
jmp
daa
stc
out
push
fs
xchg
int3
dec
insb
sbb
inc
mov
shr
les
xchg
lret
sub
pop
repnz
arpl
add
or
push
pop
je
shlb
outsb
xorl
or
popa
cwtl
mov
mov
lret
mov
nop
xchg
xchg
xchg
push
dec
iret
jae
cmp
pop
fistl
mov
into
fistpll
shlb
ljmp
stc
xchg
mov
fwait
push
sub
outsl
inc
cmpsb
jl
cld
into
pop
cmp
inc
or
push
xor
or
jbe
or
scas
adc
mov
flds
pusha
mov
loope
fistpll
int3
mov
fisubrs
dec
adc
insb
ss
cmp
cmp
scas
mov
inc
pop
jo
push
mov
testb
xchg
sub
enter
iret
cmp
push
jge
jg
dec
inc
call
and
int3
jp
cmp
stos
pop
push
enter
cmpsb
jmp
dec
mov
repnz
jns
xchg
jle
inc
clc
popf
in
daa
dec
jge
add
repnz
adc
pusha
repnz
inc
lcall
mov
rorl
inc
imul
clc
cmp
cld
dec
out
or
mov
inc
loope
loop
mov
xor
ja
jno
outsl
sbb
mov
sub
dec
stos
lds
repz
repnz
mov
aad
sbb
cmp
xchg
push
push
add
push
in
aad
add
sbb
ret
or
movsb
repz
mov
mov
xchg
js
daa
sub
stc
or
pop
popf
out
in
push
mov
dec
pusha
lret
lcall
pop
xor
sbb
call
jb
scas
add
sbb
das
scas
xchg
adc
call
test
jp
mov
movsb
add
std
addb
test
loop
add
imul
dec
jns
or
pusha
sti
xchg
ja
and
aas
sub
imul
jno
call
enter
jp
adc
std
dec
pop
sub
hlt
jo
arpl
pop
mov
dec
ljmp
sub
fisubs
pop
sub
adc
pop
add
test
dec
jnp
xchg
shll
sbb
fs
stos
xor
dec
mov
jecxz
cmc
sub
mov
lods
sbb
leave
push
sbb
mov
rolb
shll
ja
shrl
imul
imull
daa
mov
jnp
cmpb
jo
das
pop
pushf
push
in
sub
mov
xor
sahf
lahf
dec
mov
push
jns
jg
sub
mov
mov
add
imul
ljmp
insl
dec
pop
gs
inc
testb
test
in
inc
push
jmp
daa
sub
jbe
nop
and
push
add
xchg
mov
fimuls
add
or
insl
loop
pop
mov
jle
sub
dec
and
mov
dec
push
xchg
mov
lds
push
mov
xchg
fdivrs
jg
clc
cmpsb
mov
cli
mov
add
inc
or
pop
loop
jle
popf
jg
mov
adc
mov
push
adc
es
iret
daa
mov
stos
lods
pop
xlat
cmc
stos
add
push
cmp
dec
add
dec
adc
mov
cmp
jp
lds
jne
pop
xor
in
mov
cmc
xlat
push
das
arpl
ficoms
sti
xor
and
add
leave
xchg
jnp
lock
lods
daa
xchg
das
add
fmuls
add
test
add
popa
sbb
and
and
fdivp
repnz
mov
out
loopne
pushf
pop
xchg
ss
mov
sub
push
or
fisubrs
mov
outsl
mov
shrb
out
pop
jecxz
mov
cmpsl
mov
and
in
fsub
cmp
or
mov
mov
clc
movsl
rorb
sahf
mov
jg
iret
sub
repz
scas
ss
outsl
xor
adc
int
and
jbe
lret
les
leave
xchg
add
fiadds
push
cmp
mov
xlat
xor
jge
adc
push
adcb
stc
bound
test
loope
scas
add
fidivl
inc
inc
ret
hlt
push
imul
aad
xchg
mov
xchg
icebp
sbb
add
mov
call
pop
mov
insl
fistps
inc
add
imul
or
inc
pop
adc
scas
xchg
xchg
cld
lea
xor
pop
call
int
testl
push
adc
xor
push
add
sbbb
call
test
fs
xor
in
rorl
cmp
ret
in
jge
mov
mov
cmpsb
mov
sub
jbe
out
ret
cmpsl
dec
jne
lcall
aas
sbbl
add
stos
js
nop
sub
add
or
repz
imul
xchg
mov
lea
push
pop
mov
mov
jnp
xchg
sub
sbb
pusha
pop
pop
fidivs
jecxz
gs
ret
stos
cmp
or
orb
lcall
add
jp
cmp
cmp
mov
mov
shrb
in
fdivrs
cmp
test
mov
fsub
cli
dec
sub
jae
push
sbb
repz
add
lods
xlat
popf
cwtl
cmp
push
in
fistps
fcoms
in
mov
outsl
sub
fistpl
stos
insb
xor
sub
out
hlt
lahf
and
and
fbld
leave
lods
call
dec
mov
in
rclb
inc
pop
pop
add
dec
pop
jg
pop
push
out
test
cli
pop
ljmp
stos
js
mov
ljmp
xor
push
scas
jb
in
enter
jl
fdivp
lea
mov
jle
sti
dec
sub
pop
inc
push
push
fcompl
mov
cmc
add
cmc
inc
and
mov
icebp
aas
xchg
rorb
mov
or
sbb
and
mov
xchg
outsl
cmp
ficompl
jns
xlat
push
outsb
cwtl
cld
fisttpll
decl
icebp
sbbl
xchg
daa
push
test
sub
jo
xchg
int3
mov
shlb
data16
subb
pop
arpl
shll
add
adc
mov
lea
dec
xor
adc
in
add
mov
std
enter
pop
imul
mov
dec
or
test
enter
aam
jae
mov
cmp
sub
dec
xchg
ror
jae
hlt
dec
lcall
xchg
mov
mov
and
scas
sbb
psrad
pop
sarl
pop
sub
adc
sub
pop
inc
negl
cmp
pop
lahf
pop
sbb
testl
lahf
pop
imul
ret
loopne
out
pop
leave
xchg
shll
icebp
and
mov
jle
mov
int3
jle
iret
icebp
sbb
scas
lret
leave
shl
xor
or
mov
fistps
mov
shll
or
push
loope
clc
jns
adc
inc
fiadds
pop
or
add
push
or
dec
or
xchg
jecxz
cmc
dec
lock
sti
and
mov
pop
jb
mov
iret
clc
cmc
scas
filds
push
cmc
hlt
mov
aas
jle
stos
push
ret
adc
pusha
arpl
push
data16
fsts
jnp
and
pop
aas
movb
dec
xchg
push
aam
adc
ret
and
sbb
ds
add
dec
icebp
gs
xchg
call
ss
loope
sub
insl
push
fcoml
pop
xor
leave
xor
cmp
lock
insb
inc
adc
insl
out
shll
inc
add
lahf
adc
out
push
pop
jle
roll
pop
pop
stos
jge
shlb
lahf
push
sti
iret
into
add
jae
int
dec
pop
jbe
scas
cltd
in
xchg
stc
sub
cmpsl
cmp
lret
mov
mov
jno
mov
xchg
push
clc
cltd
aam
push
inc
dec
loopne
mov
xchg
push
cld
ret
jns
sub
outsl
inc
in
std
inc
sub
mov
push
inc
daa
aaa
dec
add
sbb
clc
fwait
mov
adc
ret
scas
lods
push
lcall
xor
lds
push
call
popf
and
andb
jne
test
ret
adc
inc
cmp
or
lret
cmc
cmp
push
lods
aad
imul
movl
addr16
or
lret
movsl
push
bnd
adc
aas
fcoml
xor
aam
xchg
rol
fwait
mov
sub
add
popf
mov
sbb
loop
sbb
stos
movsb
jo
stos
adc
xlat
stos
xchg
or
into
cltd
test
data16
in
pop
rcrl
cmp
mov
ljmp
gs
aaa
push
icebp
jmp
add
jp
out
mov
xchg
dec
push
sub
leave
cmp
lock
mov
jne
jmp
fs
add
scas
std
test
aaa
movsl
and
pop
lods
fidivs
sub
cltd
in
outsb
sbb
push
cmpsl
fldcw
shll
mov
mov
push
push
adc
popf
add
xor
test
aas
mov
fsubrp
and
inc
add
js
jbe
pop
mov
cwtl
stc
and
xchg
cmpsl
mov
xlat
sarl
andl
jl
push
mov
jl
push
xchg
pop
out
lret
push
enter
fldl2e
cmp
xlat
popa
fsubl
adc
in
cld
jns
pop
ds
loope
dec
pop
lods
or
push
mov
push
or
leave
lods
subb
lcall
xchg
in
jmp
ja
mov
jbe
mov
into
fistpll
int3
stos
jl
mov
jl
addr16
pop
daa
sbb
or
int
daa
inc
loope
dec
clc
rcll
shll
jb
mov
push
sbb
cld
dec
lods
es
dec
xor
xchg
fadds
or
lods
iret
and
lods
movsl
sbbb
pop
inc
xor
push
stos
push
idivb
xor
xchg
adc
in
add
ret
xor
pusha
ret
arpl
mov
or
rolb
mov
jbe
xor
xor
push
imul
ret
rcrb
mov
push
push
js
sub
clc
push
daa
push
dec
shrl
es
mov
fwait
mov
mov
jns
xchg
mov
push
mov
mov
pop
sub
mov
jae
in
xlat
in
jbe
outsl
stos
bound
mov
or
or
andl
or
cld
repz
pop
clc
int3
stos
dec
int3
xchg
sbb
mov
repnz
and
ljmp
orb
movsl
sbb
push
cltd
sub
sahf
clc
repnz
sub
xor
jnp
or
cmp
clc
mov
ss
lods
push
add
jle
lcall
fs
and
sbb
and
jb
mov
or
imul
call
xchg
addr16
pop
pop
jp
fdivrs
or
cmpsb
add
add
pop
add
inc
fs
popfw
xchg
gs
jns
aad
js
out
cs
pusha
or
mov
jb
fs
cmp
push
pop
cld
pop
sahf
arpl
and
sahf
loopne
jge
mov
jl
lret
fisttpll
cmc
push
enter
xlat
cmp
sub
push
inc
xlat
movsl
fstl
xor
dec
iret
cld
das
aaa
or
incb
outsl
cmpsl
xor
jecxz
in
sbb
adc
mov
pop
jns
loop
push
repnz
jl
std
adc
cmp
jle
repnz
loopne
xchg
push
jg
lret
pop
xchg
sub
mov
movsb
mov
jb
sub
mov
mov
jae
roll
push
mov
inc
mov
daa
lret
arpl
inc
cwtl
ljmp
jge
mov
sbb
shl
aas
in
adc
les
jbe
jle
icebp
push
xchg
adc
xor
enter
pop
call
push
imul
nop
aas
jl
sub
fimuls
dec
shrl
shrb
out
or
notb
mov
fadd
mov
inc
fstpt
js
idivb
jo
cmpsb
dec
add
clc
mov
cli
mov
pop
pop
mov
dec
lret
arpl
xchg
js
addr16
jo,pt
leave
mov
fildll
pop
sub
add
or
ror
mov
roll
sahf
test
loopne
sbb
sub
add
xlat
test
negl
mov
xchg
mov
out
cmpl
std
test
push
lock
lret
rorl
inc
add
sbb
mov
fnstsw
inc
or
inc
test
push
xor
test
ret
dec
sub
test
movsl
mov
repz
inc
cmpsl
pusha
xchg
sbb
pop
stc
iret
push
jns
xchg
xchg
movsl
fdivrs
ja
out
clc
adc
daa
push
adc
lock
mov
jl
inc
jge
stc
lahf
mov
icebp
sbb
mov
popa
roll
int
xchg
jb
dec
pop
stc
xchg
or
mov
inc
imul
adc
iret
lea
pop
js
ret
or
sub
sub
push
sahf
or
sbb
lods
out
push
js
push
mov
shll
idivl
outsl
shll
lret
add
xchg
adc
add
jnp
in
or
mov
pusha
or
cmp
add
outsl
sbb
dec
add
pop
ret
or
stos
xchg
icebp
movb
or
clc
sbb
adcb
or
cmp
push
popa
dec
xor
sbb
clc
inc
nop
lcall
sbb
cwtl
jl
ja
mov
jno
sub
push
and
ja
out
bound
add
out
lods
xorb
divl
jle
jne
push
fcoml
mov
mov
jns
sbb
jo
xchg
dec
jae
inc
push
push
daa
ret
jne
push
scas
add
mov
lods
lret
xor
int
push
and
mov
bound
sbb
test
in
mov
pop
xchg
jge
push
bsr
jle
mov
scas
cmpsl
daa
inc
into
mov
jmp
and
fisubl
frstor
cmp
and
pop
popf
ret
lea
xor
cmp
jmp
mov
or
lds
adc
dec
mov
aaa
pushf
aas
enter
jle
scas
jno
mov
test
orb
push
cmp
lret
repnz
push
pusha
in
mov
repz
push
mov
cs
inc
add
cmp
cmp
sbbl
clc
lahf
movsl
mov
cld
faddl
or
sub
stc
fadd
jge
mov
test
add
mov
insb
ljmp
inc
or
ljmp
cmp
pop
repz
mov
fwait
arpl
sahf
jl
sub
mov
add
notl
push
mov
lock
push
fdivl
or
mov
repnz
jae
ficomps
rcrl
or
setle
xchg
faddl
add
clc
fldcw
shr
test
adc
inc
push
adc
ljmp
sti
sahf
sbb
jg
jp
pop
push
cmp
push
jmp
dec
rcrl
in
sbb
cmp
lods
in
fucomi
insb
aas
mov
sub
push
aam
adc
mov
call
mov
xchg
push
mov
stos
daa
cld
pushf
jp
scas
mov
movb
in
loop
inc
lcall
cmp
xchg
cmp
xor
cmpsl
aad
imul
pminsw
push
movsb
and
pop
into
fmuls
mov
add
mov
fwait
js
ljmp
or
iret
fidivrs
mov
ficomps
or
test
xchg
hlt
add
pop
jne
fisubrl
mov
imul
pop
rcrb
jb
mov
push
mov
fs
hlt
add
and
dec
inc
inc
push
push
jmp
or
xchg
inc
inc
and
mov
cltd
push
push
in
and
push
pop
insb
shr
add
fdiv
data16
rorb
stc
sub
lock
push
fstps
cmp
xchg
or
xchg
add
xor
mov
popf
lret
xchg
subl
xchg
mov
sbb
imul
jmp
xchg
lcall
imul
pop
sti
data16
fwait
loop
fwait
push
jb
rcrb
call
jmp
in
jp
in
call
or
push
jo
ljmp
cmp
xchg
out
jne
mov
loop
stos
cmpsl
jmp
pop
xor
decl
in
jb
pushf
cmp
loopne
sti
inc
imul
popf
aad
mov
pop
sub
cmpb
shlb
and
mov
mov
leave
xor
repnz
add
cmpsb
cli
sti
jge
cwtl
push
lret
xchg
lret
mov
cld
sbb
or
sub
std
dec
adc
jl
pop
jl
fistpll
test
mov
push
lret
cmp
test
inc
daa
sub
iret
shll
jns
mov
dec
lds
sti
cmpsl
xchg
jmp
in
rcrl
mov
aam
jne
mov
push
insl
jmp
repnz
icebp
push
xchg
cmc
imul
cli
mov
pop
adc
into
movsb
cmp
adcb
sarb
lods
stc
shll
hlt
sti
sti
adc
inc
push
in
cmp
ret
sbb
das
pop
rcll
xchg
dec
sbb
loope
dec
outsb
inc
push
add
clc
mov
jmp
mov
sbb
xchg
pusha
mov
add
cmpsb
mov
push
jne
mov
mov
jp
sub
daa
nop
xchg
mov
mov
mov
scas
es
mov
xor
push
inc
arpl
jg
jg
sub
jnp
mov
push
dec
or
loop
iret
adc
jns
jmp
xor
lea
jmp
dec
sbb
mov
outsl
push
adc
fldenv
rclb
xlat
mov
push
xchg
faddl
nop
arpl
dec
imul
xchg
enter
dec
imul
push
adc
jg
movsb
divb
cld
inc
adc
loope
or
aaa
stc
dec
call
mov
jecxz
xor
jne
jo
lock
mov
mov
jbe
sbb
mov
jo
lret
inc
dec
sub
andb
ja
jp
gs
mov
or
fistps
jns
jno
je
rorb
dec
and
jmp
ss
fneni(8087
cmp
imul
fwait
sbb
dec
xor
xor
mov
insb
test
jne
in
add
daa
cs
push
dec
lcall
lret
pop
test
mov
mov
sub
ja
pop
jg
jne
jb
dec
popf
nop
push
mov
aam
or
inc
cmp
aam
pop
rcl
push
incl
adc
cli
or
jne
mov
pop
movsb
inc
nop
mov
lcall
pushf
add
lock
and
sbbb
scas
sbb
cmp
dec
adc
lods
add
dec
roll
adc
in
arpl
imul
pop
pusha
rcl
add
ret
sub
xlat
pop
xchg
mov
or
xchg
xor
lahf
cwtl
xor
movsb
push
pusha
imulb
mov
sub
and
xor
xor
into
fisttpll
pop
out
in
mov
in
je
call
sarl
imul
shrb
aad
add
pop
mov
sbb
cmpsl
xchg
mov
jle
es
push
sbb
cmp
sarb
sbb
inc
sub
add
xlat
cmp
scas
pop
push
and
add
sbb
push
push
inc
lcall
push
jae
loope
cld
mov
test
push
test
jae
pushf
push
sub
imul
or
lock
sub
push
pop
or
add
ja
fisttpl
or
mov
pop
pop
enter
rorb
popa
mov
push
int3
sbbb
test
cmp
cmpsl
incl
je
out
inc
mov
jns
aad
mov
inc
movsl
fnstsw
mov
popf
add
or
pusha
lcall
or
lods
add
cwtl
jg
xchg
push
loop
push
mov
aaa
icebp
or
mov
sub
sbb
data16
pop
push
push
inc
mov
sbb
xchg
mov
rcrb
into
xor
add
dec
ss
pop
or
jbe
sti
call
dec
repz
dec
fcoms
lahf
push
push
jo
popf
rcll
das
stc
sbb
cmpsl
push
sub
jno
inc
adc
mov
jg
add
xchg
mov
orb
jle
test
pop
sub
hlt
sahf
les
add
divb
out
mov
fldcw
pop
jo
add
ss
mov
lcall
frstor
notb
or
mulb
and
jns
adc
add
adcl
jae
jnp
adc
adc
in
aas
ret
rcll
xchg
pop
sub
mov
jmp
mov
loope
and
lock
push
push
push
loop
lods
lds
shl
mov
inc
aas
cmp
pushf
gs
cmpb
xchg
adcl
push
sbb
fisubs
lods
pop
xchg
mov
adc
ds
sub
dec
cmp
imul
fistpll
fiaddl
add
pushf
jl
push
push
sbb
adc
out
loope
call
daa
int
fucomip
pop
cmpps
add
cli
out
popa
cwtl
sbb
mov
adc
aam
negb
push
mov
inc
pop
adc
or
adcb
lahf
out
aaa
je
out
mov
cmp
fsubp
mov
add
mov
out
sqrtps
mov
cmpsl
xor
add
xor
arpl
es
adc
addr16
mov
cmp
dec
daa
jbe
sbb
lds
adc
loope
inc
hlt
in
xlat
or
pop
mov
mov
mov
pop
lods
icebp
xchg
jge
mov
cmp
push
imul
fisttpl
je
das
fmuls
insl
dec
jae
lds
lret
lds
leave
in
dec
in
call
sub
lds
inc
jmp
insl
add
aas
mov
push
lods
mov
jl
adc
dec
mov
cld
pop
fadds
mov
jl
cld
mov
inc
dec
lss
stos
xor
mov
dec
and
adc
xchg
nop
sub
shlb
insb
dec
lgs
xchg
add
imul
cmp
fcomps
jae
push
adc
mov
xor
das
mov
mov
ret
push
jb
out
fcmovnb
arpl
push
xchg
xchg
cld
cltd
ljmp
fsubr
jmp
nop
xchg
mov
mov
lcall
fstp
inc
xor
fwait
sar
push
in
mul
add
ljmp
faddl
mov
fnstenv
in
sub
dec
lock
xchg
fdiv
aam
sti
mov
nopl
cmpsl
xor
xchg
mov
in
dec
pop
popf
cmpb
sub
pop
mov
xor
sub
jb
sub
inc
mov
sub
push
stc
fnstcw
cmp
scas
stos
mov
out
mov
xchg
aam
sub
and
lret
data16
arpl
adc
xchg
inc
fidivrs
jl
pop
cmp
adcl
loope
and
or
or
pop
lock
fmuls
adc
xchg
sub
mov
push
push
jne
aad
mov
cmp
jge
jnp
aad
mov
jge
fnsave
cltd
xchg
negb
das
stos
adc
pop
out
adc
in
inc
inc
movsl
add
pop
addr16
test
mov
sub
je
scas
mov
sub
test
xchg
xor
pop
nop
es
sbb
xchg
rolb
dec
sbb
xchg
inc
inc
mov
movsb
fbstp
repnz
lock
loopne
jmp
jmp
add
ja
push
test
lret
mov
xchg
dec
fs
jp
add
xchg
leave
fnstsw
cmp
sahf
xor
inc
test
test
fisttpll
int
lcall
outsb
mov
lret
mov
into
and
into
and
pop
sarb
or
clc
adc
fiadds
mov
pusha
js
pop
pxor
mov
out
rcrb
test
cmp
lret
jno
add
fwait
dec
rcrl
xor
add
pusha
sbb
lcall
cmpsl
cmp
xor
xchg
xchg
xor
or
adc
add
push
cmp
pop
xorl
test
add
jge
pop
mov
cmp
jno
xor
ret
pop
ret
cwtl
mov
movsb
mov
mov
out
mov
or
movsb
clc
lea
sbb
adc
enter
insb
cmpsb
ficoms
and
cmp
cltd
addr16
lods
out
into
mov
scas
sbb
xorb
clc
lret
mov
pop
xchg
adc
dec
adc
xchg
xchg
lods
push
stos
or
outsl
add
lahf
outsb
fcmovne
pop
das
mov
or
stos
pop
out
sbb
xchg
pop
adc
push
fidivrs
nop
add
cmc
xchg
sbb
dec
jb
push
inc
mov
add
jecxz
and
cmpsl
adc
bound
inc
insb
filds
aaa
subl
pusha
jl
jp
xchg
mov
pushfw
and
jae
cli
ret
sub
ret
pop
mov
push
insl
dec
rorb
or
or
mov
xor
movsl
mov
andl
les
rcrb
inc
or
insb
dec
sbb
gs
mov
rol
stos
pop
pop
jmp
stos
xchg
sbb
cmp
or
sub
add
jp
pop
ss
inc
in
mov
addb
cld
xor
push
data16
fistl
sub
mov
cmpsl
imulb
adc
dec
pop
push
mov
mov
adc
or
or
jo
or
insl
or
mov
fisttps
pop
lds
inc
pop
sahf
daa
cmp
aad
mov
jno
or
enter
sbb
cmpsb
inc
fs
cmc
es
cmp
mov
jge
cli
int
clc
cs
xchg
xchg
sub
pop
sahf
shlb
jle
addr16
dec
std
cs
cmp
loopne
sbb
fs
daa
add
punpcklbw
test
inc
pop
dec
inc
test
mov
sbb
sbb
mov
jbe,pn
xor
xchg
or
lods
lea
fcom
pop
sub
adcb
mov
lcall
fwait
mov
fidivl
push
xchg
sbb
xor
fbld
or
mov
dec
icebp
inc
or
clc
repnz
adc
pop
pop
in
inc
jne
mov
clc
scas
xor
test
push
cmpsb
insb
mov
dec
inc
leave
pop
sub
ss
add
pushf
xchg
xchg
mov
jae
mov
lret
das
into
ret
jmp
mov
xor
ds
pop
fisttpll
filds
adc
adc
and
push
stos
cwtl
pop
xchg
stos
mov
inc
out
pop
cmp
test
adc
add
xlat
inc
xchg
push
adc
and
and
or
mov
fwait
pushf
fs
cld
stc
insb
jl
pop
imul
mov
iret
pop
push
xchg
xor
cli
sti
mov
fiadds
test
cltd
pop
out
sub
xchg
in
repnz
jmp
cmp
pop
xchg
jbe
fwait
jecxz
sub
orl
pop
pusha
xlat
shrl
xchg
fiadds
push
out
fsubl
jno
push
cltd
rcr
and
inc
or
and
mov
push
ja
mov
lret
push
sub
xor
shr
or
test
daa
push
cmp
ret
cld
lds
pop
xor
xor
test
daa
in
jno
lea
or
mov
inc
das
stos
add
mov
scas
pop
and
fistpll
mov
jnp
fstl
test
test
push
and
and
inc
and
xchg
cmp
in
in
movsl
leave
rorl
inc
aam
jecxz
mov
fucomi
mov
xor
aam
rolb
imul
aad
lret
pop
ret
inc
std
and
mov
addb
scas
scas
lret
dec
sbb
ss
fs
dec
aas
push
icebp
std
mov
aas
nop
lret
imul
xlat
out
stc
adc
popf
inc
lret
aad
mulps
or
push
add
bound
fcmovne
cmp
mov
shlb
adc
xchg
fstl
xorl
mov
sub
inc
or
les
cmpsl
xor
cmpsl
sub
aas
mov
jl
jmp
push
pop
pop
mov
call
stos
test
loope
inc
add
test
fldcw
and
arpl
dec
movsl
lock
nop
std
imul
mov
jns
xchg
loope
and
push
mov
push
cs
sub
add
nop
or
add
xor
cmp
daa
call
xchg
cmpsl
iret
repz
int3
imul
imul
add
jbe
cld
cmp
mov
lds
ror
mov
adc
imul
push
mov
movsb
cwtl
aas
or
add
and
ret
mov
add
insl
insl
jecxz
pushf
es
jge
outsl
clc
mov
mov
fidivrs
mov
mov
inc
cmp
imul
scas
jne
push
add
push
in
add
sub
cltd
push
pop
cmpsb
cmp
decb
aas
jle
addl
xchg
fidivrl
aas
jge
in
test
hlt
sub
or
pop
jge
jp
push
mov
cmpsl
fisubrs
idivl
out
pop
push
sbb
and
sub
rolb
jp
xchg
in
sub
jnp
insb
or
invd
mov
push
inc
inc
std
xchg
inc
aad
and
sub
xor
xchg
in
push
mov
xchg
xchg
mov
lret
lret
fdivs
dec
out
and
loopne
stc
sahf
xorb
repz
pusha
pop
dec
rorl
jmp
xchg
push
inc
inc
adc
lods
psubusb
push
adc
fsubrl
rclb
cltd
inc
xor
xor
rorl
test
mov
stc
dec
mov
xor
out
enter
xor
xor
dec
or
jp
sub
in
cmc
inc
loopne
cmp
and
mov
add
arpl
mov
and
add
push
cwtl
aas
es
mov
bound
shll
and
jle
pop
ljmp
xchg
inc
movsb
sbb
mov
scas
bound
sbb
and
lcall
add
loop
call
loope
sub
mov
das
test
mov
or
push
das
inc
jl
xchg
push
vmread
push
mov
negb
jg
je
mov
cmp
mov
add
and
bound
jnp
pop
negl
adc
jb
add
inc
lea
imul
inc
cwtl
xchg
sahf
lahf
adc
in
pop
xchg
int3
or
je
pop
ja
std
fnstsw
in
or
cmpsl
js
adc
cmp
dec
sub
or
pop
pop
inc
imul
sbbb
xchg
and
movsb
adc
and
icebp
sbb
dec
push
inc
aad
lret
mov
in
push
int
pop
inc
clc
bound
dec
mulb
jg
out
mov
in
jmp
and
xchg
mov
inc
pop
mov
repz
sub
sahf
out
out
push
ljmp
inc
jle
call
stos
add
mov
scas
add
lret
xchg
sarl
jo
push
fs
jge
rcl
out
daa
jo
and
push
adc
or
mov
cmp
jecxz
ret
in
mov
jle
jge
mov
rorb
sub
dec
mov
mov
pusha
cwtl
out
xor
pusha
pop
dec
test
ror
sub
pop
data16
lods
cmc
jnp
dec
lock
mov
dec
call
in
cli
rcrl
push
lret
jge
sbb
ret
inc
dec
adc
inc
add
rcl
cltd
adc
loopne
pop
xchg
fsubr
mov
and
jbe
cmpsb
jbe
add
cli
mov
cmp
in
adc
xor
jo
lods
push
xchg
adc
cli
mov
into
out
jnp
adc
lock
cld
xchg
pop
loop
shll
dec
cwtl
shl
mov
dec
and
cmpsl
decb
inc
movsb
xlat
pop
cmc
add
insl
movb
sbb
jl
test
roll
push
mov
xlat
loope
and
pop
scas
mov
mov
dec
loopne
adc
jle
cmpb
mov
insl
out
sti
and
mov
mov
ja
and
lahf
lds
mov
popa
adc
push
jecxz
xchg
pop
cmp
dec
adc
fsubrp
divl
jge
push
lods
repz
imul
loop
pop
sti
notl
ss
sbb
or
adc
out
xchg
cmp
mov
divl
out
pop
cmpsb
test
dec
rol
xor
mov
mov
loop
jns
fldenv
push
mov
sbb
jg
xchg
add
iret
inc
and
mov
enter
popa
jge
ja
add
mov
jle
jl
jl
stos
ret
je
inc
or
dec
or
mov
pop
xor
jge
and
and
fidivrl
repnz
popf
ss
mov
mov
add
fdivrp
popf
dec
jmp
dec
sub
movsl
fcmovb
jno
push
ljmp
jle
arpl
mov
enter
les
xchg
push
sub
dec
xchg
std
push
ds
pushf
cld
call
inc
pop
pop
dec
adc
mov
insb
xlat
popa
jl
ss
repnz
fisubs
pushf
jle
shll
int
int
xorl
lcall
push
sbb
std
btr
pop
push
subl
ret
pop
mov
std
sbb
mov
leave
push
fisttpl
jne
js
ror
ret
cmc
imul
or
roll
pop
or
inc
mov
cmc
push
and
cmp
mov
sub
xchg
sub
inc
mov
xlat
mov
jl
negl
pusha
filds
cmp
push
lods
test
jmp
insl
jnp
dec
mov
movsl
fisubrl
jecxz
mov
xchg
into
sar
sbb
stc
or
sti
mov
pop
aas
int3
adc
push
mov
cmp
cmpsb
lock
jns
stc
lods
psrld
jo
or
sbb
mov
cmp
fnstenv
mov
cmp
sbb
into
insb
dec
aad
mov
xchg
inc
sub
inc
add
mov
test
je
sbb
fwait
movsl
sar
std
dec
inc
add
jae
push
sub
das
or
repz
dec
movsl
in
pop
or
fwait
dec
and
jge
push
es
cs
jp
lret
mov
enter
mov
pusha
push
sbb
mov
gs
cmp
jbe
in
mov
mov
push
or
add
daa
je
dec
lret
bound
lret
repz
fimuls
pop
sub
sbb
fs
cmc
xchg
int
jmp
mov
jbe
shrb
mov
sbb
sbb
cmpsb
addr16
cmp
sbb
scas
pop
movsl
fcmovnb
jno
cli
jge
out
xchg
jg
push
fstpt
add
iret
cltd
xchg
sbb
fsubrs
mov
js
cwtl
add
popf
adc
adc
stos
xor
mov
sbb
jl
shlb
test
add
dec
adc
pop
leave
and
loopne
xchg
xchg
cmc
cmpsl
xchg
cmp
stc
mov
loop
ffreep
aam
mov
lret
mov
sbb
lret
ror
pop
jno
insl
pop
lret
jbe
sbb
shll
jns
sbb
enter
ja
mov
int3
int
sub
jl
add
cmp
in
stc
js
icebp
jge
outsb
jle
hlt
lea
rclb
call
js
jbe
add
dec
cwtl
fucomip
not
out
das
mov
scas
jge
fimull
jno
insl
or
cmp
cmp
mov
mov
sub
stc
and
imul
xchg
ds
jae
jb
cmp
ja
jmp
pop
jmp
push
call
jmp
add
xchg
inc
push
cmp
lock
sahf
dec
into
jmp
push
ljmp
addr16
push
mov
jno
add
aas
inc
jne
push
insb
fcmovnb
mov
sub
shll
mov
or
add
xor
mov
inc
repnz
mov
sub
inc
pop
movl
push
insl
xor
sbb
inc
cmp
pop
pop
xlat
sub
stos
addl
cmpsb
dec
imul
xchg
hlt
xchg
in
jecxz
adc
push
jnp
dec
cmpl
mov
gs
fmuls
shl
sbb
fbstp
negl
mov
push
mov
push
mov
sbb
adc
es
mov
adc
add
push
daa
pop
cmp
test
push
mov
ljmp
and
ret
xor
add
or
mov
shlb
pop
mov
xchg
lods
mov
mov
fs
popa
pop
nop
push
iret
dec
aam
mov
pushf
out
add
in
mov
jmp
xor
jne
imul
fcmovnb
jne
aad
stos
negl
inc
cli
cmc
fdiv
ljmp
pop
mov
pop
cmpsb
shrl
xor
jcxz
push
fdivrl
popf
cmp
mov
inc
add
sbb
jge
mov
lahf
fcoml
neg
push
shrb
adc
mov
lock
push
scas
jmp
cmp
mov
xchg
daa
dec
push
xchg
adc
adcb
imul
pop
jmp
stc
jns
sarb
pop
fcomps
pop
mov
ljmp
ljmp
dec
sub
insl
test
movsl
mov
mov
cmp
push
in
sbbb
inc
iret
dec
mov
hlt
jae
jo
push
add
xchg
add
outsl
mov
pop
sbb
lret
push
pop
mov
cmpsb
movsl
insb
jg
add
lret
shll
stc
fcompl
adc
rorb
popa
ss
ret
xor
lods
push
and
inc
add
insb
jns
nop
sub
add
sarl
jb
sub
sti
jnp
xchg
push
leave
fwait
and
push
push
cli
stos
out
mov
arpl
aaa
ljmp
loopne
lock
popa
dec
inc
and
adcl
and
jbe
mov
iret
jecxz
aas
bound
sbb
lds
test
inc
lds
sbb
sub
push
inc
fsubr
and
add
cmp
inc
ljmp
cmc
mov
cmp
push
out
cld
ds
fcomip
push
pop
cld
es
out
jle
ret
pop
shll
mov
insb
fcmovnb
mov
aaa
sub
sub
out
push
insl
pop
outsl
mov
scas
jle
sbb
push
push
sub
cli
sbb
lcall
add
cmp
popa
sbb
pop
cltd
add
mov
or
stos
add
mov
pop
test
xor
cmpsb
mov
shr
and
shlb
push
push
xchg
adc
inc
and
sub
cmp
test
loop
push
pop
iret
lds
cmp
test
lret
cmpsl
add
mov
adc
enter
jge
frstor
inc
and
jb
push
and
scas
aam
pop
addl
les
push
push
jae
add
pop
fimull
fs
dec
cmc
aad
test
lea
mov
mov
dec
insl
neg
les
rol
mov
aad
outsb
cmp
testb
mov
xchg
push
test
push
data16
int
stc
repnz
mov
pusha
cli
pop
mov
pop
clc
sub
bnd
pop
and
mov
fnsave
rcll
mov
mov
xlat
fbld
icebp
jb
rcl
add
incl
lock
jbe
ficoms
inc
mov
or
xchg
pop
cmpsl
sbb
jmp
pop
inc
addb
xchg
lea
adc
inc
popa
inc
fcomip
icebp
jp
lret
inc
les
insl
js
push
lahf
jo
test
mov
xor
cmp
mov
xor
inc
push
xchg
js
das
out
out
adc
ja
mov
subl
outsb
pop
or
je
into
cli
push
sbb
mov
xlat
jecxz
lea
dec
mov
stc
sub
in
inc
sti
fwait
cmpsb
movsl
cmp
xchg
inc
and
cli
lcall
outsb
mov
call
pop
jno
ss
sbb
sti
add
xchg
fsubrl
mov
push
adc
cmp
pop
test
fwait
push
movsb
pop
and
lcall
idivl
and
xchg
inc
nop
test
in
sahf
rclb
sbb
push
cmpsb
or
inc
adc
or
inc
inc
or
add
stos
inc
pop
jne
std
add
xchg
add
jb
movl
pop
or
or
popa
fists
inc
sub
xlat
shl
inc
repnz
add
xlat
mov
out
insl
xor
sub
push
pop
sbb
mov
ret
and
shlb
xchg
gs
xor
movsl
icebp
jl
add
mov
mov
and
je
cmp
add
push
fldt
mov
mov
sub
push
mov
or
cmp
lret
shlb
mov
popa
adc
mov
sbb
and
sbb
dec
lea
jl
aas
notb
movsb
xchg
jmp
dec
add
aas
outsl
fstps
out
pop
call
cmp
cmc
push
mov
int
cmpsl
jge
pop
jp
dec
or
imul
and
and
and
sub
jo
lods
shl
jge
inc
inc
sub
xor
add
cmc
test
cltd
sahf
sbb
sti
js
test
mov
or
mov
or
ret
jg
jne
subb
jl
dec
mov
sub
adc
sbb
fsubl
adc
das
pop
int3
mov
xor
arpl
inc
jle
cwtl
icebp
cmp
ljmp
xchg
fiaddl
aas
ja
mov
imul
jge
ret
imul
mov
fnstenv
not
mov
cmpsl
xchg
dec
out
sub
push
push
or
in
dec
mov
jnp
jb
mov
loope
push
sti
and
test
stos
lods
and
sub
andl
jo
mov
jmp
pop
movsl
push
push
mov
or
dec
aas
imul
sub
sub
call
mov
jg
rolb
xchg
addb
stc
inc
or
push
add
or
xlat
xor
mov
push
test
fwait
lock
sahf
lret
test
addr16
cmp
aaa
lahf
add
and
xchg
inc
pop
or
popa
jl
bound
and
movsb
inc
js
mov
sahf
leave
pop
pop
mov
gs
aaa
add
inc
cmp
pop
sbb
stc
ja
adc
sub
pop
sub
enter
rcl
mov
ds
dec
rcll
rol
mov
insl
fstps
out
jne
sahf
cmp
in
sub
xchg
dec
fcoml
lods
add
and
dec
inc
inc
push
lahf
and
clc
jmp
cmp
or
daa
mov
inc
gs
loopne
sub
jns
xchg
xchg
into
popf
fdivs
add
loopne
jecxz
dec
test
cmp
fcomip
scas
mov
test
pushf
jg
sbbl
insl
add
lahf
sti
sbb
fstl
sbb
xchg
and
or
inc
add
or
and
mov
addl
mov
xlat
adc
xchg
adc
lock
loop
lds
sub
lret
xorb
in
sbb
xchg
pop
movsl
dec
inc
inc
mov
dec
mov
loope
mov
shll
aas
jp
sti
pop
jecxz
pop
daa
fnstcw
mov
xchg
test
movsl
lret
test
fdivp
sub
xchg
imul
xor
or
arpl
outsl
fsts
out
jno
pop
push
inc
mov
inc
xchg
sub
hlt
in
xor
out
test
sbbb
icebp
loopne
pop
in
or
push
subb
arpl
adc
or
lret
into
mov
test
add
mov
loopne
sub
leave
push
outsb
xor
iret
cli
call
mov
xor
int3
int3
adc
cwtl
mov
data16
filds
xchg
xor
adc
or
push
call
mov
rclb
or
and
sub
mov
jle
andb
xlat
inc
sub
lock
mov
dec
and
jmp
pop
aas
dec
pop
outsl
jle
daa
sbb
clc
jbe
fwait
ljmp
leave
repnz
jmp
loopne
lds
cmp
push
and
push
js,pt
lret
jecxz
sub
jnp
pop
xchg
subl
and
adc
pusha
imul
inc
adc
mov
sarw
xor
lods
arpl
or
adc
fmuls
push
mov
dec
push
dec
add
iret
fsubrs
add
mov
push
shll
mov
and
and
jno
adc
xchg
bound
sub
mov
mov
das
adc
mov
inc
adc
xor
fsubs
mov
or
sbb
sbb
out
pop
mov
repz
mov
adc
push
rcrl
cwtl
aam
push
mov
fs
and
dec
mov
call
sbb
jb
fmull
std
aaa
loope
mov
pop
cmp
dec
jle
lret
ret
sub
aad
cmpsb
gs
aad
lods
in
push
popa
push
or
rclb
ficomps
repz
cmp
push
stc
cli
and
or
bound
inc
popa
mov
add
insl
jcxz
push
fdivr
or
imul
ja
loopne
insl
cmp
pop
xchg
enter
lods
and
or
adc
mov
adc
jg
mov
lea
scas
adc
mov
in
daa
call
mov
dec
cmp
sbb
dec
xchg
addr16
mov
in
notl
adc
sub
add
lods
and
insl
fwait
sbb
dec
lock
lahf
cmp
xor
lock
or
jle
jns
mov
les
and
loopne
fs
insl
fdivs
sbb
ret
add
pop
inc
mov
xchg
dec
adc
mov
in
push
jmp
mov
cltd
mov
mov
test
test
cli
cli
xor
cmp
ljmp
or
mov
daa
xchg
and
jp
fmul
mov
adc
and
push
sub
dec
in
lcall
ss
sub
inc
fs
insb
mov
or
fwait
add
loop
push
gs
scas
mov
lret
outsl
mov
fsts
mov
or
std
popa
mov
fnstsw
xchg
insl
xchg
and
sub
test
lret
inc
or
jle
lds
mov
pop
mov
xchg
aam
sbb
sahf
lcall
inc
into
stos
xchg
pop
call
jnp
mov
jp
notb
cmpsb
xor
jno
lods
cmpl
jne
add
add
mov
ljmp
xor
cltd
dec
rol
xor
cmp
xchg
lods
mov
aaa
or
hlt
mov
das
arpl
sbb
sub
pop
mov
fcompl
jl
inc
testb
push
ja
pop
test
adc
ret
jge
ss
or
loopne
flds
cwtl
or
shl
pop
outsl
push
andnps
pop
insl
and
push
dec
push
sahf
jl
out
cltd
push
mov
inc
push
or
sbb
mov
cwtl
jb
push
aas
jge
add
push
push
jns
pop
mov
mov
fsubrs
aas
add
call
ret
mov
loopne
aad
out
mov
pusha
mov
fisubl
rcrl
push
test
cmc
out
mov
mov
xor
hlt
cmpsb
imul
jbe
xchg
sbb
xor
cmovl
sub
pop
mov
insl
and
xchg
mov
scas
addl
xchg
or
cmpl
rcll
xor
in
movsb
les
loop
fnsave
adc
pop
jg
or
out
popa
push
and
fdivrl
or
jle
mov
lret
outsb
xchg
cmpsb
arpl
dec
lea
test
mov
mov
pop
xchg
mov
stos
mov
sub
jle
and
xchg
add
inc
sub
jo
lods
dec
cs
sti
xor
orb
movsl
push
mov
push
sahf
icebp
movsl
and
aam
sub
push
sbb
xor
subb
pop
lds
sti
cmpsl
inc
inc
and
sahf
mov
adc
fs
pusha
repnz
and
sub
imul
enter
add
push
and
and
jecxz
lds
add
sub
popa
sbb
shlb
push
insl
lods
std
mov
cmp
inc
nop
outsb
mov
icebp
sahf
jg
dec
mov
xor
xorb
mov
scas
xor
mov
insb
and
mov
push
xor
ret
xchg
mov
fidivl
insl
adc
adc
add
lock
xchg
push
stos
xor
or
push
lds
xchg
dec
data16
dec
mov
add
inc
int3
faddl
xchg
inc
xor
push
addb
and
or
int3
inc
dec
push
xchg
icebp
gs
xchg
inc
cwtl
in
rep
movsb
insl
mov
inc
jns
shrl
repz
mov
std
mov
dec
mov
insl
xor
xor
aas
shrb
xor
cld
add
xor
cld
pop
cmp
add
in
jbe
push
aam
nop
adc
mov
pop
cmp
lea
mov
scas
or
sub
loop
pop
mov
add
inc
stc
or
push
or
popf
push
inc
mov
mov
ss
xor
mov
leave
xorb
inc
add
in
mov
cltd
or
cltd
inc
add
mov
push
enter
ds
jp
sub
adc
leave
in
adc
inc
ja
data16
add
xchg
outsb
lea
imul
lahf
clc
ljmp
insl
inc
fimuls
inc
sub
push
ds
fdivrl
or
mov
mov
add
push
cmpsb
inc
sbb
add
shrl
cld
in
or
push
xor
mov
stos
cmc
sub
jp
mov
mov
fiaddl
or
inc
or
xor
push
fs
aam
pusha
out
scas
or
rsqrtps
aas
pusha
jmp
cmpsb
pusha
xchg
dec
aas
mov
arpl
sub
mov
jmp
cltd
jnp
xor
jle
and
pop
add
das
mov
inc
mov
lret
inc
adc
fcomip
xchg
push
jmp
movsl
pop
pop
cmc
cmp
sahf
dec
pop
test
es
dec
pop
jno
push
lds
and
xchg
xchg
xchg
or
xchg
subl
scas
lods
and
daa
jbe
insl
inc
add
add
mov
adc
jecxz
add
iret
sti
add
in
pushl
movsb
mov
nop
jnp
sub
sarb
mov
cmp
cmp
in
jnp
scas
test
and
das
sarl
jnp
sub
mov
and
sub
cmp
jno
push
shll
pop
xchg
mov
cmp
aam
push
outsl
inc
mov
repnz
mov
xchg
or
cwtl
and
cld
sub
xlat
and
int3
popf
mov
dec
add
test
cwtl
dec
and
notb
cwtl
jg
jmp
into
gs
adc
popa
call
cmp
mov
sub
loop
adc
pushl
push
insb
test
and
jns
adc
repnz
rcr
mov
sub
test
jnp
inc
pop
ret
out
mov
sub
adcb
cmc
into
xchg
lcall
sbb
sbb
cmp
adc
notb
or
jmp
jmp
jb
aas
sub
inc
nop
dec
adc
subl
fistps
xor
mov
or
adc
ss
push
jmp
pop
dec
insb
pop
leave
in
insl
xorb
pop
cmp
fdiv
jns
aas
mov
push
dec
pop
jmp
mov
ficoms
shr
bound
jge
jg
hlt
loopne
push
enter
andl
mov
rorl
xchg
pop
xchg
inc
add
iret
stc
fiaddl
fmuls
stos
cmp
addl
popa
cmp
scas
pop
add
push
sbb
inc
in
sub
jae
std
mov
mulb
mov
arpl
xor
dec
xor
sub
or
arpl
or
lock
mov
xchg
dec
cwtl
jmp
push
cmpsb
sub
cmpsl
add
push
xchg
scas
incb
mov
ds
or
push
or
dec
fdivrp
adc
pop
out
push
cmp
mov
dec
adc
inc
mov
lret
stos
insb
es
pop
mov
scas
cwtl
add
sub
mov
fisttpll
insl
into
or
jg
in
mov
sub
or
test
pop
mov
test
and
lods
fcompl
cmp
hlt
shr
cmpsl
or
xor
fdiv
and
popf
int
movsb
cld
pop
and
mov
jp
repz
sub
test
out
mov
cmc
divl
mov
mov
test
fdivrl
cmp
and
mov
out
pushf
andb
mov
jno
jne
or
mov
imul
cmp
fdivs
cmpsb
add
sbb
leave
test
in
outsl
stc
pop
push
dec
ret
xor
mov
repnz
iret
int
das
or
dec
mov
mov
lods
mov
sub
call
pop
mov
int3
sahf
aad
pop
jmp
mov
dec
movsb
cmpl
cmp
pop
add
test
lods
adc
mov
xor
cltd
pop
jge
lret
jmp
std
mov
subb
and
and
rorb
nop
stc
in
xchg
loopne
cltd
repnz
and
and
imul
movsl
sti
aad
or
lock
jno
jae
iret
jo
inc
add
inc
inc
push
nop
mov
ljmp
and
dec
sarl
or
rcll
popa
sbb
pop
roll
stos
sahf
cmp
mov
addr16
out
jnp
push
ljmp
xchg
movsl
out
mov
push
notb
hlt
repz
mov
lea
addr16
sub
pusha
fnsave
add
imul
jl
mov
cmp
lahf
cli
pop
inc
xor
ds
and
pusha
mov
xchg
mov
fstps
jne
lea
scas
sbb
xor
negb
loope
fldt
repz
pop
push
or
sbb
xor
ret
pop
pop
popfw
adc
inc
test
aaa
repnz
xor
subl
fidivs
addl
shll
add
insb
aas
mov
push
mov
xchg
sub
out
inc
lods
lods
mov
scas
stos
cmpb
mov
mov
mov
les
mov
fcoms
push
scas
inc
mov
pop
xchg
arpl
insb
sti
cmp
je
test
pop
sbb
add
push
jl
clc
mov
fsubl
das
pushf
sahf
flds
inc
jl
inc
mov
adc
add
jge
mov
repz
fdivl
mov
jns
pop
orb
es
nop
jg
aam
mov
outsl
stos
iret
stc
push
mov
mov
xor
adc
jno
lock
push
pop
pop
add
and
clc
in
stc
xchg
pop
fstpt
jp
mov
test
mov
js
sbb
mov
shrl
cltd
popf
cmp
repnz
mov
jge,pt
xor
sbb
xchg
and
mov
insl
pop
popf
push
pop
mov
cmpsl
shrl
xchg
push
inc
pop
xor
fsubl
sbb
ret
dec
subl
in
push
mov
lret
mov
pushf
mov
dec
push
sarb
fwait
lods
lcall
rcll
setl
std
hlt
and
nop
sub
cmp
push
test
dec
mov
and
fimuls
pop
lea
ret
jg
repnz
dec
sub
xor
pusha
out
js
dec
clc
jmp
loope
mov
mov
inc
inc
xor
imul
repz
sub
pusha
or
cmp
scas
lds
xchg
jl
mov
dec
cmp
nop
data16
xor
sbb
cwtl
imul
and
shlb
ljmp
adc
jg
mov
js
mov
and
adc
mov
adc
ljmp
ret
jno
pop
sub
pop
adc
sbb
in
orl
leave
xchg
aaa
jg
or
movsl
or
inc
sti
daa
cmp
inc
add
mov
jl
mov
xorb
mov
aas
pop
mov
es
loope
lock
repnz
mov
add
inc
jg
dec
pushf
jle
sbb
xchg
aad
mov
decb
inc
ds
mov
and
js
dec
jae
enter
ret
mov
and
mov
xor
sbb
inc
fists
dec
pop
lret
adc
sti
push
or
sarb
sahf
xchg
mov
nop
mov
test
iret
je
leave
fmull
add
in
jbe
add
xor
xor
idiv
test
jg
sbb
pop
sub
imul
cld
in
mov
lcall
push
or
pop
aas
jno
jmp
ret
push
je
insl
sahf
jg
test
sub
or
pop
sub
sub
pop
pop
adc
add
mov
jb
cltd
fwait
add
test
xor
adc
shrl
and
or
aas
gs
jle
mov
imul
mov
mov
fwait
nop
pop
inc
mov
push
ret
xchg
imul
xor
pop
add
ret
in
jmp
ds
inc
sub
stc
xchg
dec
jg
push
out
jno
and
in
sar
scas
jg
jae
dec
lods
call
in
fmuls
xchg
loope
pusha
xlat
jle
dec
out
sti
scas
inc
cmpsb
dec
addr16
jmp
cmpsb
jp
and
xor
and
pop
mov
cli
sbb
xchg
int3
xor
inc
pusha
mov
mov
fnstcw
and
mov
mov
jno
ret
pushw
stos
rorb
lahf
and
adc
loopne
aas
incl
mov
inc
add
jno
fdivrp
pop
mov
dec
sub
movnti
test
out
and
ret
dec
or
sahf
xchg
insl
sbb
movb
lahf
pop
inc
inc
cmpsb
push
int
sub
aam
enter
cmp
mov
outsb
xchg
or
adc
jbe
mov
repz
data16
lret
in
test
pop
xchg
stos
hlt
pop
pop
sub
out
imul
in
test
jge
ds
xor
xchg
mov
cwtl
add
into
popf
jecxz
pop
pop
aad
fnstenv
mov
pop
jmp
or
pushf
and
sahf
add
fldcw
mov
pop
pop
loopne
popf
jo
add
fwait
or
insb
ja,pn
int3
pop
mov
lds
into
sbb
mov
jns
mov
adc
push
repz
movsb
pop
dec
sar
idivl
dec
cmpsl
push
inc
add
inc
sahf
imul
out
and
shll
cmp
mov
idivl
mov
dec
scas
mov
xor
push
cmc
jmp
nop
push
xor
xor
roll
mov
sub
inc
les
sbb
dec
jl
loopne
addr16
mov
cmp
out
push
sub
jnp
mov
shl
sub
sti
push
pop
jge
xchg
lods
repz
jb
push
hlt
leave
jnp
xchg
cld
dec
jle
int3
jns
xor
xor
push
add
das
ds
sar
adc
add
ja
mov
cmp
jnp
hlt
arpl
xlat
cmpsl
pop
inc
jle
cmp
ds
mov
loope
or
popf
cmp
hlt
arpl
outsb
sti
loope
cltd
add
add
in
stos
nop
shrl
sbb
data16
paddd
jecxz
js
seta
nop
in
and
lahf
and
cli
jecxz
das
jl
jns
and
jmp
pop
jb
add
gs
arpl
ja
xchg
jp
pop
add
cwtl
jle
fldenv
out
add
icebp
aaa
and
loopne
mov
pop
ds
mov
xchg
cmc
jp
out
jp
addr16
mov
dec
and
adc
cwtl
clc
shlw
mov
push
clc
mov
daa
dec
aas
std
popl
js
jmp
cmp
and
xor
jnp
mov
pop
outsb
dec
aaa
sub
or
jo
add
mov
cld
push
call
xor
std
xchg
lds
bound
repz
mov
adc
push
inc
mov
iret
mov
cltd
es
jns
cld
stos
xchg
add
js
cmc
xlat
mov
pop
pop
jne
pop
inc
cmc
inc
filds
gs
lahf
icebp
add
inc
leave
jbe
int3
sbbb
mov
fistps
or
xor
cli
fcomps
or
repnz
push
add
pushf
mov
or
int
jmp
inc
repz
psubsw
cmpb
outsl
imul
movsl
or
add
sub
dec
scas
jmp
add
mov
rorb
cmc
popf
dec
push
lahf
mov
shll
mov
pop
inc
sbb
mov
aas
repnz
xorb
cmp
adcl
sbb
add
xchg
ret
cwtl
aas
paddsw
loopne
xchg
leave
pusha
cmp
loope
ret
das
jno
negb
cmp
jnp
clc
xchg
jg
fldt
mov
dec
ljmp
mov
xor
pmulhrsw
push
xchg
cmpsl
loop
xor
jmp
inc
lock
ds
jbe
scas
lods
fs
jge
fstpl
aaa
push
mov
dec
pop
dec
test
adc
iret
int
jns
jp
mov
pop
xchg
das
imul
int
cld
adc
mov
pop
outsb
cmpsb
inc
orb
popf
neg
int
pop
mov
xchg
push
aad
and
push
imul
clc
lcall
ss
add
pop
lret
mov
push
push
lret
cs
in
mov
ret
lret
fstpl
repz
cmp
fmull
mov
imulb
mov
decb
sar
ret
cwtl
aas
xchg
pop
out
xchg
flds
xor
xor
hlt
mov
and
out
dec
ds
dec
notrack
lret
mov
mov
or
iret
pushf
mov
pop
mov
and
addr16
sub
jbe
mov
imul
xchg
das
jmp
add
inc
fdiv
inc
daa
dec
aas
std
orl
mov
xor
push
jle
out
mov
test
lods
jmp
mov
jnp
je
je
sbb
xchg
ds
fadd
fdivrl
cli
adc
add
pushf
test
inc
mov
and
into
jnp
outsl
mov
push
out
jge
not
ss
jno
ret
push
sub
aam
in
roll
lret
addr16
sbb
pop
push
inc
mov
sbb
lcall
sub
jg
and
dec
scas
out
mov
aas
and
dec
loopne
stos
lods
je
mov
jae
push
out
cmp
movsl
ss
or
insl
fcomip
adc
shll
int
cltd
fldlg2
mov
leave
mov
mov
aaa
adc
mov
mov
loopne
jg
aas
jb
mov
adc
icebp
jl
test
jnp
jp
cs
out
js
pop
loopne
js
push
call
jl
sub
dec
aas
xchg
ror
lds
int
mov
mov
lret
insl
arpl
push
cmpb
int
xor
lret
pop
test
sub
mov
adc
cs
pushf
push
enter
sti
test
inc
dec
or
dec
test
sub
hlt
daa
lahf
cli
and
aaa
aas
cltd
mov
cmp
mov
out
cmp
ret
fldcw
sahf
inc
sbbl
outsb
jbe
into
xchg
movsl
sub
sbb
add
sbb
and
push
push
sbb
pop
pop
les
cmp
std
sub
jnp
push
push
ret
rclb
add
es
sbb
push
sahf
xlat
daa
hlt
jge
aad
inc
mov
movsb
jb
mov
test
mov
lea
iret
mov
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
or
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
ds
ja
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
mov
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
add
inc
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
out
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
aaa
movsb
add
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
and
gs
ret
pop
fistl
push
xor
lods
inc
pusha
dec
jg
cmpsb
stos
dec
and
test
and
dec
mov
mov
flds
xchg
mov
jge
sti
fidivrs
outsb
sub
movsl
int
dec
jp
xchg
xchg
data16
int3
inc
sbb
mov
adc
and
sti
fdivp
mov
or
xor
adc
loopne
jge
std
push
and
mov
mov
mov
cmpsb
mov
fucomi
push
mov
or
cmpsl
and
or
inc
adc
mov
cltd
mov
mov
inc
int3
cmp
cmp
jnp
mov
mov
jmp
jg
xchg
in
je
inc
sti
pop
loopne
sub
jecxz
dec
in
jl
cmp
jne
gs
mov
or
xchg
cwtl
add
pop
or
xorb
xchg
sar
mov
es
int3
out
xchg
cmp
dec
pop
jns
pop
or
lods
xchg
rcr
xchg
leave
into
push
hlt
fildl
xor
cmp
mul
scas
pop
xor
fisttpll
sbb
jnp
and
arpl
hlt
add
ja
xlat
pop
and
mov
jo
cmp
lods
or
mov
insl
jae
xchg
xor
and
repz
shlb
jno
enter
in
pop
std
ret
mov
rcrb
enter
cli
fnsetpm(287
and
shrl
pusha
adc
clc
sub
pop
cwtl
ds
push
adcl
xlat
repnz
les
xor
inc
inc
or
sub
push
sub
das
jg
inc
pop
sub
pop
cwtl
pusha
push
shrb
mov
add
and
add
mov
push
loopne
push
movsb
in
fidivs
jae
ja
imull
mov
clc
scas
pmullw
and
mov
in
mov
jae
test
xchg
push
jg
popl
call
dec
fld
mov
inc
cmp
sti
push
lock
jb
sbbl
mov
or
mov
std
data16
fs
mov
or
popa
ficoms
xor
movl
out
inc
sub
adc
subb
fisttpl
and
js
cwtl
dec
in
add
arpl
lahf
jns
inc
mov
push
add
add
mov
mov
shr
sub
sub
dec
push
stc
mov
into
leave
fistpll
cli
adc
xlat
lods
add
cmc
mov
aas
bound
push
jne
js
pop
xchg
jmp
or
inc
push
dec
cltd
mov
je
mov
pusha
push
lret
out
mov
xor
cld
in
xchg
push
sub
je
lret
stc
loop
xor
fldt
lock
mov
out
imul
jnp
pop
push
or
ja
or
inc
out
xchg
inc
imul
mov
insl
stos
lods
dec
push
lret
sti
inc
dec
adc
jecxz
jg
ret
call
movsb
or
gs
aas
jmp
shll
mov
pop
mov
cmp
mov
sar
nop
lock
pushf
cld
std
jecxz
xchg
adc
fistps
rorb
xchg
mov
dec
int3
sbb
push
gs
fnstenv
and
push
mov
xor
cmp
das
sub
xchg
hlt
xchg
pop
cld
and
rolb
loope
cmp
decl
insl
jp
out
mov
dec
adc
pusha
rcrb
test
lret
jl
fsubrp
iret
or
loop
inc
data16
addr16
insb
sbb
fwait
mov
out
and
das
add
cld
fmull
add
clc
mov
iret
mov
ret
cmpsl
fidivs
mov
push
lcall
mov
enter
popa
inc
sbb
xor
lcall
cmp
xchg
repz
in
jge
shlb
add
sbb
inc
orl
rcr
and
xor
scas
xor
inc
mov
sbb
in
ret
xchg
and
popf
outsl
mov
popa
jns
cld
cld
and
and
outsl
incb
cmp
cmp
jbe
dec
lahf
xor
ljmp
test
or
pushf
popa
cli
clc
aaa
ret
cwtl
fs
jo
fstpt
aaa
xchg
xchg
stc
lock
fidivrl
or
repnz
add
add
xchg
leave
push
add
ror
mov
lret
in
ss
bnd
add
jg
lcall
inc
fidivs
lahf
xchg
push
int
mov
cmp
sti
add
mov
push
xchg
pop
scas
mov
jb
repz
dec
clc
xlat
inc
loop
jmp
add
mov
sbb
push
pop
pop
test
jge
sub
mov
in
ljmp
popa
test
add
and
dec
mov
mov
dec
pop
and
sbb
fcompl
repnz
in
movsl
movsb
mov
cld
bound
daa
mov
std
jbe
cmpsb
cmpsb
repnz
mov
in
pop
popa
xor
fwait
xor
pop
andb
stc
jns
pop
lret
jmp
xchg
ret
sbb
aam
mov
dec
std
lcall
repz
cli
jle
adc
in
std
cmpsl
mov
pop
jg
or
into
and
jecxz
mov
out
std
orl
sbb
loope
test
out
jbe
xor
and
dec
subb
mov
pop
push
addb
hlt
add
roll
test
mov
inc
ret
pushf
lock
mov
xchg
mov
repnz
sbb
adc
rorb
andl
enter
fs
and
push
xor
ret
cwtl
jle
xor
or
in
pusha
dec
cmpl
mov
xchg
lock
arpl
xchg
add
xor
orl
sub
pop
mov
arpl
shrb
push
cld
mov
jb
outsb
iret
insb
das
gs
add
pop
cmp
and
dec
cltd
repz
in
ss
mov
push
adc
jge
jne
cltd
xchg
jge
sub
incl
out
jnp
das
and
add
lcall
out
dec
mov
jnp
dec
movsl
stc
fwait
loopne
xorl
test
nop
add
test
push
ljmp
aam
inc
push
sbb
or
aas
cmp
pop
repz
mov
pop
popf
rcll
sub
cmp
add
add
adc
mov
sub
mov
or
xchg
push
mov
adc
mov
in
or
add
aas
shl
mov
inc
mov
pop
fisubs
jne
in
mov
sahf
repz
cmp
fcomps
pop
ss
call
sbb
ret
cld
lods
mov
ds
xchg
mov
inc
xor
clc
jge
sbb
loop
cltd
jl
xchg
aas
std
orl
orb
clc
lds
xor
ret
inc
pop
push
test
jo
sbb
imul
mov
mov
xor
das
mov
pop
and
fwait
cmp
cmp
sub
dec
sub
fidivs
scas
jno
scas
add
cmp
cmp
sub
mov
pushf
mov
jne
sbb
mov
mov
cs
insl
shld
adc
ret
ret
jo
nop
jge
loopne
and
jns
imul
xor
xchg
pop
pop
ss
cwtl
cmp
in
push
lea
enter
pop
xchg
out
andl
fs
inc
xchg
loope
ss
mov
lcall
out
or
cltd
jecxz
push
fisttpl
push
inc
xor
cmc
dec
jge
mov
aam
jg
mov
jl
xor
sub
or
lahf
mul
or
push
mov
test
test
xor
lods
icebp
push
test
in
in
arpl
cmpb
add
or
sbb
pop
sbb
add
cmpsl
mov
inc
dec
ds
aas
push
add
repz
in
jo
inc
jo
shrb
pop
cmp
mov
movsl
outsl
lods
aam
cmovo
inc
jp
pop
dec
mov
mov
push
icebp
inc
notb
add
mov
icebp
rclb
rep
pop
sbb
shrl
mov
push
pop
fists
inc
add
in
pop
inc
add
jne
dec
cmp
pop
push
inc
enter
push
xor
scas
cmp
lcall
testl
gs
pop
jmp
fisubrs
movb
sub
fisttpll
aas
hlt
xchg
or
pop
test
bound
cmc
sbb
mov
pop
arpl
xor
add
xor
or
fs
cmp
sub
pop
rcrl
and
jecxz
lods
repnz
pop
or
test
mov
or
add
inc
and
jae
or
div
pusha
mov
rcll
inc
inc
add
pop
cmp
mov
cmc
mov
jge
scas
hlt
jp
rolb
sub
mov
data16
push
data16
add
ja
jp
cmp
xor
pop
hlt
or
cld
add
daa
xchg
sbb
xlat
mov
call
sbb
pop
in
sub
sti
xchg
xchg
adc
fisubrl
cmpsl
push
sar
mov
jp
test
fiadds
cmpsl
out
and
test
pusha
aam
lods
cmpsb
xorl
test
test
sub
pushf
add
adc
mov
sub
mov
adc
es
cmpb
addr16
dec
out
lcall
sbb
sbb
paddusb
aam
mov
xor
jl
mov
mov
mov
jp
mov
mov
aad
or
add
push
or
dec
mov
ds
das
lahf
lods
icebp
pop
xlat
jbe
cmp
repnz
orb
jl
jecxz
int3
stos
pop
std
ljmp
cmp
dec
xchg
xchg
push
cld
adc
loope
cmc
push
out
and
lcall
andl
xor
adc
test
call
jge
sbb
das
aad
mov
add
insl
mov
scas
xchg
pop
nop
mov
dec
fsubs
push
mov
out
push
out
incb
ret
fcomp
add
andl
lahf
sub
sarb
lea
push
add
pop
sti
add
and
or
aas
xchg
sbb
and
hlt
inc
lahf
outsl
iret
or
clc
das
aas
pop
aaa
or
out
out
ja
dec
ror
add
or
mov
repz
and
punpcklbw
in
jg
aas
push
sbb
rorb
adc
adc
adc
or
rorb
pusha
outsl
lret
out
pop
cmpsb
loope
cld
aad
test
adc
cmp
xchg
jno,pn
nop
scas
aas
icebp
add
cmpsb
cmpsl
xlat
push
dec
mov
es
mov
xor
je
in
push
add
pop
mov
lods
sub
and
adc
mov
repz
inc
ret
cld
xor
in
loopne
mov
test
lcall
repz
or
cmpsb
int
mov
rol
push
xchg
jge
mov
mov
jno
pop
cmp
or
imul
dec
dec
mov
mov
cwtl
fildl
test
and
or
call
icebp
or
icebp
dec
popf
repnz
jmp
add
lea
loopne
std
jo
add
jns
outsb
mov
mull
jbe
pop
add
int3
jnp
add
add
push
add
sbb
mov
xchg
cmp
addl
adc
xchg
inc
ds
pop
cmp
jl
pushf
pop
cld
loop
jne
push
push
inc
add
mov
cmp
xchg
xchg
enter
push
nop
sbb
roll
and
add
test
sahf
push
pop
cltd
daa
xchg
add
icebp
jg
mov
in
daa
mov
cmp
aas
jg
gs
insb
hlt
cmpsl
mov
inc
outsl
mov
divb
ljmp
or
xchg
arpl
cltd
mov
lahf
add
inc
xchg
inc
addb
mov
lds
or
pop
cld
aas
mov
pop
mov
addb
inc
or
and
dec
sti
sbb
xchg
sbb
adc
es
cmp
mov
jbe
pop
dec
popa
inc
mov
pop
or
jo
daa
cmc
rcrl
adc
stc
sub
repnz
push
iret
loopne
mov
pop
aaa
ja
jl
or
sbb
hlt
mov
movsb
xlat
xchg
addr16
popa
push
outsl
pop
fs
xor
frstor
adc
or
std
leave
cmpsl
daa
mov
ja
cli
imul
cmpsl
cld
mov
sbb
jl
in
sbb
pop
jecxz
pop
jmp
add
or
adc
dec
orb
sub
sbb
mov
ljmp
repnz
or
push
js
shlb
sahf
inc
add
lock
insb
andb
divps
into
lods
repnz
mov
leave
inc
sub
inc
insl
add
xor
inc
mov
ljmp
int3
sub
into
cmp
sti
jp
test
adc
dec
or
sbb
loop
fprem
and
fs
test
pop
push
push
pause
test
push
scas
jb
es
or
and
loop
pop
add
orb
pop
out
lret
leave
ret
cmp
and
test
dec
das
out
out
jge
jl
sbb
and
decl
or
fidivs
adc
sub
add
jo
scas
jns
xchg
hlt
cmpsl
cmpsb
push
rcl
test
popa
repz
int3
xlat
aas
aas
ret
push
aas
jle
jg
jbe
jns
pushf
adc
rcll
cmc
push
pop
popa
jecxz
xor
clc
repnz
stc
aam
jg
shll
ljmp
pop
pushf
cmc
cld
lret
nop
mov
mov
nop
inc
inc
push
mov
mov
out
stos
cmpsl
aas
ja
sbb
cmp
call
sahf
ds
dec
std
xlat
pop
fidivl
enter
aad
int
rclb
pop
pop
mov
inc
cmp
cmc
imul
pop
adc
into
dec
dec
cmc
xchg
cmpsb
mov
or
test
xchg
mov
das
add
stc
cmp
bound
pop
into
push
mov
adc
shlw
mov
and
inc
xor
push
pop
push
mov
and
jno
mov
fisubrl
or
test
loopne
and
cwtl
test
repz
xlat
pop
lcall
pop
sbb
rcll
mov
out
sahf
cmp
mov
jns
outsl
cmp
call
das
idivl
adc
pop
or
jne
mov
jge
xchg
loop
adc
cltd
push
mov
jnp
cmp
pushf
sub
mov
push
leave
jg
jge
out
jnp
pop
sahf
stc
fists
xchg
repnz
popf
lret
cld
icebp
sbb
pop
jns
daa
sahf
jle
iret
or
ja
pop
or
stc
aam
lret
and
cmp
lahf
pop
sbb
mov
loopne
xor
adc
movsl
jle
orb
sbb
push
les
incb
popl
lahf
mov
gs
add
dec
mov
push
add
test
push
add
imul
rcrb
jae
inc
or
add
mov
and
test
cs
adc
adc
jp
inc
mov
pop
push
out
rep
xor
cmc
aam
repz
xor
xor
jge
divl
ficomps
and
push
dec
sub
insl
scas
popa
cmc
mov
fnstcw
and
lahf
add
fmulp
loop
adc
pop
jp
pop
idivb
int
inc
ljmp
xor
addr16
pop
mov
sbb
push
mov
out
into
pop
shr
jle
dec
xor
stos
sbb
xor
dec
and
and
scas
cmpsl
pop
jmp
sub
cmpsb
pop
ljmp
ljmp
or
inc
std
xchg
leave
aad
imul
into
cs
jle
andb
xchg
mov
out
mov
add
ret
add
pop
sbb
dec
les
jo
lock
ds
cmp
xor
mov
mov
cmp
pushf
scas
repz
xchg
jns
fsubrs
add
repnz
push
push
add
in
in
jnp
loop
mov
mov
xlat
xchg
jnp
inc
stc
retw
popf
sbb
pop
push
pushf
jecxz
mov
dec
daa
jbe,pt
sub
bsf
jge
pop
or
push
pop
jl
addr16
insl
jbe
mov
inc
jns
dec
dec
lock
fwait
adc
fwait
aad
das
and
push
nop
popl
pop
mov
sub
test
xchg
and
gs
and
jl
aam
lds
dec
sbb
mov
out
lods
pop
adc
adc
jle
mov
cmp
in
sarb
out
xlat
push
loop
inc
sahf
jle
mov
arpl
ja
inc
in
dec
inc
stc
dec
mov
cwtl
mov
inc
js
adc
mov
adc
ja
call
mov
mov
dec
sbb
out
arpl
ret
nop
loopne
sub
imul
arpl
mov
fdivrl
mov
cmp
icebp
inc
sbb
scas
push
into
popf
cmp
mov
jo
int
cmp
add
mov
xchg
mov
xor
cmp
lods
movsl
sbb
sub
int3
jge
mov
aam
scas
inc
cmp
loope
inc
daa
out
jecxz
jo
push
out
mov
push
out
jle
jp,pt
push
xchg
in
ja
add
lea
adc
pop
sub
test
pop
mov
push
push
cmp
adc
cmp
push
enter
fdivs
loopne
daa
lock
cmp
orl
jmp
or
test
popf
add
push
cmc
hlt
mov
and
nop
inc
adcl
and
mov
popf
and
in
or
cmp
dec
fildll
les
sub
ja
xor
insb
sbb
int
sbb
jo
inc
out
pop
jmp
lret
das
add
into
iret
pushf
sbb
pop
aaa
or
movsl
dec
insl
sub
test
test
out
rorl
fwait
inc
cmp
stc
mov
mov
scas
pop
scas
add
push
xchg
push
mov
fnstcw
lods
mov
dec
dec
fimull
in
push
jmp
inc
mov
lahf
inc
daa
adcb
imulb
in
and
dec
stos
dec
add
js
rep
out
imul
jmp
clc
aam
lock
xchg
sahf
mov
mov
inc
and
pop
notl
xchg
dec
pop
push
js
pop
mov
repnz
popl
adc
movsl
cmp
cmp
faddl
add
add
mov
aam
dec
mov
ret
sbb
jo
push
push
add
inc
shr
fstl
inc
pushl
push
mov
push
scas
test
jae
out
pmaxub
sub
push
clc
sbb
vpmacssdql
add
cmpb
adc
vmovaps
mov
fldt
cld
mov
sarb
scas
bound
aad
cli
lods
shlb
sub
mov
xchg
jo
push
clc
fsubrp
cli
jecxz
jno
ja
divb
mov
pop
or
push
sarb
enter
pop
loopne
pop
test
mov
sub
or
push
mov
repz
ja
push
push
addr16
pop
test
sub
inc
pop
mov
push
dec
mov
and
cli
push
testl
cmp
das
pushf
push
out
test
enter
adc
mov
inc
jnp
jne
ja
lret
scas
test
shrb
cmp
in
testl
inc
shll
sbb
xlat
mov
mov
nop
xor
iret
add
xlat
ficoms
adc
scas
mov
xchg
inc
mov
ds
stc
dec
cli
pop
add
mov
fs
stc
imul
jmp
jmp
call
mov
notb
pop
jle
mov
adc
jg
stc
leave
lret
enter
adc
and
push
repz
jb
push
or
add
xchg
sbb
pmaddwd
fsubrp
test
xor
jb
push
lea
dec
and
mov
daa
jo
mov
outsb
fnstcw
fisubs
dec
int3
into
mov
mov
arpl
cmc
push
push
cltd
ret
sahf
cmpsb
mov
test
mov
add
add
cs
ret
inc
insl
ret
mov
lods
mov
add
mov
pop
dec
jne
stos
push
cmp
mov
testl
ret
rolb
rorb
pop
jp
pop
add
push
pop
or
rorb
jg
fdivrl
mov
std
xchg
adc
iret
dec
pop
adcb
ja
shll
xchg
out
xorl
test
out
sbb
lret
or
inc
dec
pop
jo
xchg
lret
adc
add
push
push
jbe
mov
sub
pop
pop
repz
jmp
push
adc
aaa
or
cld
loopne
iret
roll
push
or
pop
pop
dec
enter
xchg
pop
loopne
push
add
int
push
cmc
mov
cmp
cmpsl
mov
add
daa
out
aaa
mov
add
mov
mov
mov
pop
mov
adc
sti
adc
or
mov
ds
pop
mov
xchg
push
std
dec
sahf
dec
adc
loop
mov
inc
psubsw
shrl
pop
pop
push
push
stos
scas
sahf
adc
lcall
mov
add
adc
add
lock
out
jo
mov
das
or
dec
in
mov
add
daa
hlt
bound
dec
nop
sahf
push
add
and
jns
mov
fidivl
mov
or
mov
insl
in
jae
ja
movsl
enter
jp
sbb
mov
aad
push
or
outsl
xor
push
jmp
xchg
sbb
repnz
sti
fxam
movsb
pop
leave
push
xchg
inc
pop
push
outsl
sbb
popf
rol
lret
es
loope
xor
ficoms
add
push
inc
sbb
mov
mov
adc
xor
lods
lods
mov
les
adc
adc
out
inc
push
add
and
jnp
push
shrb
sbb
rcrl
call
lock
or
mov
scas
cli
or
mov
std
out
leave
xor
xchg
int
in
adc
pusha
jecxz
int3
jge
and
push
out
arpl
xor
bound
push
jmp
pop
stos
lahf
mov
ret
nop
mov
imul
cmp
out
cmp
sahf
enter
sahf
dec
cltd
push
into
mov
add
hlt
lods
mov
lods
call
lahf
mov
aad
rcll
dec
test
lock
add
xchg
dec
sub
sbbl
mov
adc
sub
insl
orl
andl
popf
fbld
xchg
lret
inc
mov
scas
cmpsl
lods
jp
dec
shrb
out
pop
mov
fnstcw
loope
ret
mov
std
adcl
lahf
jne
push
cmpsl
pop
in
sub
fimull
pop
test
push
add
bound
out
jo
int
mov
push
mov
mov
xchg
enter
inc
mov
and
push
push
jecxz
popa
inc
and
xlat
in
fmull
dec
loope
sub
cmp
aam
and
cld
add
xchg
loop
ja
in
cmp
shlb
jecxz
inc
inc
std
gs
movsl
outsb
pop
jno
mov
maxps
fimuls
xchg
dec
xchg
sbb
inc
daa
push
hlt
xchg
es
je
cmp
fnstcw
xor
xchg
testb
adc
sub
sub
cltd
js
cmp
and
push
cltd
mov
adc
push
movsl
cli
dec
enter
hlt
xchg
inc
inc
fnstcw
test
clc
pop
rcll
je
lret
jg
sbb
dec
out
inc
dec
mov
mov
daa
dec
jno,pt
loopne
jle
das
pop
cs
adc
rolb
andl
jle
daa
cmp
pop
fnstcw
in
insl
fbld
or
fbld
mov
lret
sub
add
leave
or
mov
xor
xchg
pop
test
dec
dec
and
pop
sub
or
jo
inc
shlb
into
cs
aas
rorl
cmp
fstpt
jno
pop
add
aam
sub
shrl
add
push
clc
ret
pop
sub
int3
call
inc
leave
stos
daa
sti
in
test
rol
outsl
dec
popa
mov
push
xlat
mov
shlb
push
and
fisttpl
mov
js
in
xchg
add
mov
adc
mov
movzwl
or
xchg
sub
push
cli
incl
adc
add
fwait
sbb
enter
xchg
cmc
lock
add
adc
cwtl
cmp
xchg
push
js
sub
add
nopl
sbb
cmp
ja
mov
popf
xchg
js
aad
mov
bound
mov
add
mov
repnz
mov
mov
test
icebp
rcrb
xchg
sarb
out
mov
push
scas
fstpl
or
inc
and
push
cmpsb
loop
inc
pop
in
popa
jns
or
adc
and
cmp
addr16
push
bnd
sbb
inc
inc
add
or
dec
inc
inc
push
or
shld
mov
gs
sub
loopne
add
movsl
movsb
sub
cltd
call
xchg
push
mov
push
jp
mov
sbb
xor
and
andb
sbb
mov
cwtl
jg
out
clc
mov
and
outsb
pushf
test
xchg
dec
in
or
mov
repz
int3
sbb
dec
cmpsl
xchg
push
lret
icebp
or
movsl
adc
movsl
inc
add
dec
inc
gs
inc
out
sub
jno
mov
ds
mov
sub
rcrb
call
scas
sub
stos
fwait
jmp
dec
loope
stos
xchg
inc
add
stos
sbb
jg
out
js
mov
mov
fsts
xor
lods
mov
movsl
hlt
xlat
cs
cmp
push
pop
addb
test
movsb
rcrb
into
inc
xchg
inc
xor
and
and
mov
loope
sbb
bound
dec
sub
pop
popf
jg
in
movsb
pop
shll
pop
cmpsb
or
add
sbb
adc
pusha
adc
add
ja
xchg
mov
sbbl
jne
adc
mov
add
test
outsb
inc
cltd
fdiv
gs
popf
iret
mov
xor
push
rorb
sub
and
fs
jb
in
mov
enter
push
das
lahf
ljmp
or
ja
mov
push
cmpsb
ljmp
lds
std
xchg
cmc
xor
iret
dec
xchg
repnz
out
fiadds
mov
leave
add
mov
push
loope
pop
stos
das
mov
loope
pop
mov
jbe
push
sbb
jmp
xchg
subl
and
push
mov
adc
fs
popa
xchg
jmp
jge
inc
cmpsl
jnp
cmp
imulb
add
sbb
scas
ss
test
push
add
hlt
add
push
rcl
mov
imull
push
pop
fcomip
mov
mov
sbb
aas
out
jl
cmp
add
test
int
rol
cwtl
or
xchg
aas
dec
xor
outsl
sti
push
mov
jae
mov
cmp
ds
je
ja
xlat
imull
negb
rorb
sub
pusha
into
xor
jae
xchg
push
in
xlat
std
icebp
mov
xlat
std
cmp
daa
imul
sub
or
add
int3
sub
mov
das
lds
fiaddl
jecxz
sbb
add
mov
xchg
test
or
inc
icebp
negb
into
mov
or
sbb
in
repz
ret
outsb
mov
stos
add
add
idivb
or
pop
xorb
mov
aaa
xchg
hlt
ja
push
or
pusha
push
cmpsb
xchg
ljmp
jne
pusha
aad
pop
gs
test
push
jl
push
pop
xlat
pop
loope
add
jns
les
adc
test
ds
mov
jbe
push
pop
pop
call
adcl
aaa
aaa
xchg
fbld
push
add
pop
cwtl
jnp
enter
mov
mov
lock
shll
cltd
push
dec
test
sbb
fs
loopne
mov
sub
pop
add
cmp
pop
mov
test
lret
jo
dec
xor
sbbb
mov
rorb
jmp
jnp
in
movsl
fs
lods
hlt
testb
repnz
jns
xchg
or
mov
add
add
add
adc
filds
insl
xlat
test
imul
out
mov
outsb
adc
mov
jecxz
push
fdivs
dec
mov
iret
sub
ret
out
push
addr16
jle
outsb
stos
out
mov
call
xchg
mov
cli
sub
aad
cmpl
scas
pop
mov
popf
icebp
adc
mov
js
into
loope
iret
xchg
rclb
add
inc
xor
cmp
and
in
scas
push
cmp
sbb
rclb
mov
bound
mov
add
pop
call
mov
sbbb
stc
pop
mov
lahf
imul
out
xor
repnz
in
addb
xchg
sbbl
pushf
outsl
fnstsw
mov
add
sub
xor
out
out
or
jp
add
mov
inc
xor
mov
mov
mov
nop
movsl
sub
icebp
mov
hlt
les
cmp
js
ds
and
and
mov
rol
push
add
cmp
imull
sub
xchg
cs
icebp
ja
xchg
mov
sbb
push
notb
pop
cmpsb
scas
movsb
push
inc
xor
sbb
sahf
cwtl
pop
pop
or
cmpsb
lods
mov
cmp
inc
or
out
daa
jge
aam
jb
enter
loope
icebp
sbb
mov
fs
dec
pop
lds
add
mov
add
stos
mov
lods
lods
adc
mov
xadd
dec
fnstsw
or
inc
mov
xchg
jp
loope
scas
stos
lret
cmpsb
icebp
rcr
sbb
pop
inc
ja
and
sti
lret
lods
dec
mov
aad
mov
pop
pop
cmp
mov
pop
mov
add
add
ljmp
jle
jno
loopne
push
fdivp
and
xchg
pop
mov
jge
fcmovnu
lock
xor
adc
add
push
adc
hlt
in
dec
pop
cmp
dec
into
sbb
cli
jno
nop
mov
pop
ja
jg
add
hlt
xchg
repnz
cmp
fists
out
aad
std
and
sub
adc
rclb
or
xlat
push
or
or
jg
add
xor
fidivs
mov
cmpsl
mov
stos
jae
push
jne
cmpb
cmp
jne
pop
lahf
push
mov
mov
or
mov
nop
inc
pusha
jae
arpl
xchg
cmc
ja
mov
frstor
aad
in
sbb
push
or
pop
pop
clc
xlat
add
js
ret
mov
push
push
add
add
push
int
push
xor
adc
mov
mov
aad
arpl
jle
sbb
stos
clc
adc
add
xorb
inc
push
mov
stos
xor
ja
sub
and
loopne
add
mov
nop
mov
push
push
rorb
dec
pop
mov
into
pop
xchg
sub
mov
mov
mov
add
out
stos
lret
stos
dec
push
shrl
adc
pop
out
scas
inc
lret
mov
add
sub
lock
jle
add
ret
lret
stos
xchg
mov
add
push
xor
add
push
push
xor
sub
jae
push
jae
mov
call
mov
cmpsl
adc
mov
mov
sbb
mov
jmp
jae
mov
pop
scas
imull
lahf
inc
sti
fisttpl
adc
subl
imulb
push
pop
add
pop
xor
inc
into
or
push
push
xchg
mov
fldcw
cmp
mov
enter
out
mov
mov
mov
sub
mov
lahf
xchg
sub
push
jl
cld
and
mov
and
inc
cmpl
fmull
cmpl
xor
xchg
pop
arpl
subb
mov
enter
add
repz
fxam
pop
mov
mov
pop
leave
cmc
das
pop
je
rcrl
movsl
fcoms
out
incl
imul
mov
out
mov
sbb
mov
push
push
or
sbb
fdivrs
mov
loopne
xlat
test
rorb
test
push
mov
test
dec
push
in
jmp
push
jo
mov
mov
imull
mov
es
mov
xor
xlat
add
mov
inc
xchg
add
add
adc
repnz
cmp
lea
movsbl
xor
data16
pusha
add
cmp
cmp
jbe
push
xchg
and
sbb
addr16
dec
push
sbb
or
sub
add
fdivrs
inc
pop
pop
das
shlb
pop
jo
push
data16
gs
mov
addr16
mov
mov
cmp
mov
jle
out
inc
sub
and
cmp
enter
or
ret
lret
popf
jmp
mov
scas
fcompl
sub
adcl
into
mov
or
fwait
sbb
cmp
lds
lods
stc
das
inc
insb
push
pop
bswap
lret
mov
pop
xchg
imul
leave
xor
lret
sbb
aad
lock
add
add
dec
inc
scas
inc
pusha
cmpb
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
and
pop
add
pop
and
sub
push
sub
das
and
sub
sub
sub
xor
das
add
aaa
add
xor
sub
add
add
cmp
and
inc
add
cmp
add
inc
add
inc
jle
dec
inc
inc
add
dec
add
inc
add
dec
add
push
add
ja
imul
jb
insb
add
je
jge
jp
xchg
subl
pop
sub
add
xor
add
mov
add
push
mov
add
mov
and
mov
add
mov
add
sub
add
and
aam
pop
das
aam
and
sbb
add
or
add
sub
add
incb
and
in
and
add
ja
add
jg
add
jg
add
out
add
dec
jmp
sub
testb
inc
incl
sub
add
incl
cmp
add
in
dec
data16
mov
add
stos
add
mov
add
xchg
int3
add
xchg
add
nop
rolb
ss
add
add
incl
push
cmpsl
jmp
add
add
mov
into
add
int3
add
aad
jbe
ret
cmpsb
filds
jle
in
add
out
sbb
incb
sbb
incl
sub
incl
ss
incl
push
fdivr
add
mov
add
mov
add
rol
lcall
add
lret
fst
enter
roll
out
out
add
lret
jecxz
jecxz
in
jmp
add
out
call
add
out
add
icebp
testb
cmc
repnz
clc
testb
repz
add
incl
add
sub
add
cmp
add
gs
addr16
push
arpl
add
push
pop
insl
jae
ja
outsl
imul
add
add
inc
outsb
jbe
pushl
dec
add
add
dec
jns
aas
pushl
add
add
add
jne
inc
jbe
js
adc
adc
data16
ds
pop
push
sbb
or
xor
inc
inc
inc
inc
cmp
xor
sbb
xor
and
add
xor
add
sub
and
push
and
add
add
add
pop
bound
push
push
pop
or
add
add
add
adc
imul
add
add
pop
add
add
add
add
add
imul
sbb
add
add
sbb
or
push
sbb
add
add
add
add
add
sbb
add
add
add
add
pop
add
inc
add
add
add
add
add
add
addb
rolb
add
pop
add
rolb
add
pop
add
rolb
add
sldt
lock
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
push
and
push
sub
and
sub
and
and
das
add
sub
das
sub
add
sub
cmp
das
add
xor
add
xor
add
xor
aas
cmp
add
add
add
xor
dec
cmp
add
add
cmp
pop
inc
aas
add
sbb
inc
add
and
xor
sbb
and
sub
add
xor
xor
inc
add
sbb
nopl
sbb
jno
xor
data16
and
sub
pop
add
inc
arpl
sbb
add
push
jae
dec
inc
inc
add
inc
add
dec
add
dec
add
inc
add
dec
add
dec
add
dec
add
add
push
add
pop
add
pop
add
add
dec
add
pop
add
bound
pop
arpl
bound
push
arpl
imul
jae
imul
jnp
insb
add
jo
jb
jo
ja
jo
jns
jne
je
jnp
jp
js
jle
jns
test
add
cmpl
push
pop
popf
add
and
add
aaa
xchg
add
pop
stos
add
push
mov
sbb
sub
add
sub
add
test
adc
inc
xchg
sbb
add
push
add
dec
mov
or
add
pop
mov
add
scas
add
insl
lods
add
jae
add
mov
sub
inc
cwtl
add
add
lea
pop
outsb
xchg
add
addb
jnp
add
lods
add
add
add
mov
add
mov
add
push
add
sub
add
and
add
sub
add
int3
add
cmp
add
cmp
add
push
loopne
add
ljmp
ss
add
clc
add
std
add
cmp
add
cmp
add
inc
movb
inc
filds
or
add
jnp
add
roll
or
add
inc
incl
sub
add
inc
sti
add
repz
push
sti
add
lock
movl
jp
ret
push
add
roll
jo
aam
jb
filds
inc
push
in
dec
fs
add
sbbl
pop
xchg
mov
js
add
mov
add
sbb
add
xchg
add
mov
add
jecxz
pop
test
add
xor
add
xchg
repnz
pushf
incl
push
xchg
repnz
xchg
icebp
add
xchg
loope
or
movsb
incl
or
std
add
stos
incb
push
mov
add
mov
testb
mov
add
mov
flds
push
popf
fadds
jg
movb
lahf
loopne
push
incb
add
incb
sbb
incl
adc
incb
sbb
incl
sub
out
add
incl
cmp
incl
daa
sar
add
sar
add
sar
add
incl
dec
jmp
incl
dec
lock
jo
incl
jle
incl
lea
addl
popf
xchg
mov
mov
xchg
add
popf
popf
add
fwait
mov
cmpsb
cmpsb
test
add
mov
add
mov
add
ret
mov
add
scas
fadds
mov
enter
rol
add
ror
add
xlat
iret
add
fcmovne
add
fmul
add
add
loope
add
in
add
aad
add
jecxz
add
out
add
jmp
add
in
in
add
out
add
ljmp
cmc
icebp
in
add
repnz
add
repnz
hlt
icebp
add
clc
testb
incl
add
jb
gs
mov
jo
add
add
arpl
add
add
mov
mov
cmp
daa
mov
mov
mov
mov
loopne
ljmp
ret
lret
into
mov
add
loopne
out
lock
pop
mov
add
out
lock
stc
stc
stc
cmc
cmc
lock
fistpl
add
or
lock
std
std
stc
div
lock
sbb
xor
cld
std
cmc
lock
add
add
add
add
fwait
sahf
lahf
popf
std
cmc
lock
add
dec
dec
add
add
or
ds
or
pushf
xchg
xchg
xchg
cli
lock
xor
add
add
add
or
or
cmp
jg
xchg
xchg
xchg
repnz
cmc
out
inc
add
add
add
stc
cwtl
xchg
cld
cld
cld
cli
lock
add
add
add
or
lcall
mov
cmc
cld
lock
add
or
add
add
ficoml
cltd
push
push
jns
test
test
dec
or
push
inc
add
add
add
or
addb
test
mov
push
or
push
add
add
add
ficoml
jge
adcb
xchg
sub
or
add
add
xor
pop
cmpb
xchg
jae
and
and
xchg
xchg
or
add
add
add
orb
mov
pop
add
jnp
add
adcb
mov
mov
mov
lea
jle
add
add
mov
rcl
rcl
int3
mov
pop
add
jle
add
add
or
mov
int3
mov
add
add
add
or
or
and
mov
or
insl
add
add
or
or
or
or
std
jmp
add
add
push
loop
xor
dec
add
dec
or
or
dec
cmp
cmp
jmp
or
or
incb
xor
inc
repz
add
xor
adc
or
repz
cmp
add
pop
sbb
adc
or
fdivrl
add
add
add
sbb
adc
add
xor
push
cmp
or
or
add
xor
add
add
pop
push
or
or
or
add
add
inc
or
push
cld
add
aas
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
cld
add
aas
cld
add
aas
int3
add
xor
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
psubb
add
clc
add
pop
clc
add
psubb
add
cld
add
pop
cld
add
aas
cld
add
aas
cld
add
aas
incb
add
incb
add
add
jg
add
incl
add
clc
ud0
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
xor
adc
xor
add
mov
add
mov
add
cmp
sti
xor
add
cltd
incl
add
setns
incl
add
movups
add
cltd
cltd
cltd
cltd
add
add
nop
add
adc
mov
add
mov
add
add
lock
add
add
add
pop
sldt
add
add
lock
add
add
pop
add
addb
add
pop
add
rolb
add
add
add
add
add
add
add
add
addb
add
pop
add
rolb
add
pop
add
rolb
add
sldt
loopne
add
clc
aas
add
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
jp
jno
je
aam
jno
xlat
das
jbe
fsubl
data16
xor
jg
add
or
pop
cmpsl
mov
cmp
stc
ss
loopne
jnp
jp
add
add
fldpi
inc
aam
jmp
into
lcall
xchg
inc
xchg
lret
scas
mov
repnz
xchg
iret
call
int
ljmp
mov
aad
adc
xor
jmp
int
jmp
xlat
sti
clc
idiv
stc
div
push
lock
out
out
inc
ss
or
daa
aaa
mov
in
in
push
repz
std
std
std
std
cld
sti
clc
hlt
icebp
push
call
jecxz
xor
add
add
pop
and
cs
and
andb
das
inc
repnz
dec
lock
div
cli
div
out
in
call
pushf
jmp
sbb
push
sbb
out
add
add
xor
ljmp
pop
and
pop
push
stc
ljmp
in
incl
lock
jmp
repnz
hlt
cmc
cld
cld
cld
push
out
jmp
jmp
pop
jmp
push
incl
add
add
xor
inc
aas
inc
ljmp
sub
ret
pushl
out
decl
repz
jle
in
jmp
lret
jmp
out
jmp
sbb
jmp
das
cs
inc
xor
dec
cmp
das
cmp
sub
lcall
ss
daa
inc
repz
cmp
pushl
push
lcall
aas
decl
cmp
ljmp
push
sub
xor
aas
xor
dec
das
sub
sbb
sar
or
jmp
dec
mov
pop
daa
fwait
call
sub
call
sub
lcall
and
lcall
xor
xchg
ljmp
daa
addr16
sub
add
add
add
sbb
xor
xor
decl
push
mov
incl
mov
call
mov
incl
incl
stc
decl
sbb
call
xor
push
add
jns
sbb
pop
ljmp
pop
and
or
lcall
ljmp
iret
call
mov
jmp
add
lcall
pop
inc
decl
add
add
and
enter
ljmp
pop
and
mov
incl
add
mov
pop
and
and
cs
add
add
add
es
xor
and
incl
add
call
add
jmp
sbb
jmp
daa
daa
xchg
sub
cmp
call
ss
mov
incl
add
mov
pop
and
and
and
xor
dec
cmp
pusha
dec
dec
decl
xor
xor
and
ljmp
pop
and
daa
pop
and
and
jmp
pop
pop
addb
add
xor
sub
inc
cmp
mov
das
and
and
daa
and
cmpsl
and
push
cmp
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
pop
add
rolb
add
sldt
lock
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
or
add
sub
sbb
pop
sbb
pop
adc
inc
bound
add
daa
add
add
add
add
add
add
add
add
pop
adc
pop
pop
adc
jb
sbb
push
sbb
add
add
add
add
or
outsb
jae
outsb
int3
in
or
cli
decl
xchg
clc
incl
push
mov
mov
add
addb
pop
mov
push
mov
decl
mov
decl
xchg
cli
decl
in
decl
outsl
int
or
xorb
add
sbb
lock
decl
ret
decl
test
incl
decl
mov
mov
mov
xchg
xchg
incl
cwtl
decl
xchg
incl
leave
pushl
int3
call
jge
lock
add
push
sbb
jne
call
lock
dec
jmp
sar
jmp
aad
in
jecxz
in
in
in
jecxz
in
in
out
in
pushl
test
cmp
in
cmp
decl
add
or
pusha
or
dec
mov
loop
push
jmp
push
repnz
stc
cmc
repnz
stc
div
push
repz
push
out
call
out
out
inc
mov
dec
incl
sahf
fucomip
or
pusha
sub
jge
in
in
out
jmp
repnz
std
std
std
cld
clc
cmc
repnz
jmp
lods
mov
and
cs
and
cs
and
cmp
sub
lcall
pushl
in
call
icebp
push
cmc
sti
stc
div
push
call
sar
push
dec
dec
jmp
sbb
push
sbb
lahf
sbb
add
add
pop
and
cs
and
sub
bound
fdivr
and
out
and
lcall
ds
jmp
call
push
repnz
in
loop
js
outsb
jmp
push
and
and
sbb
pop
sbb
xor
sub
cs
and
sub
jno
call
iret
jmp
and
in
pop
ss
call
aam
push
lock
out
out
out
push
lock
div
std
std
std
sti
stc
idiv
lock
jl
and
sbb
incl
add
add
and
jge
jne
mov
ljmp
into
lcall
sub
daa
aaa
mov
call
sub
cmp
aaa
dec
lret
imul
mov
sar
out
in
in
push
jmp
decl
sbb
jmp
sbb
pushl
sub
cmp
xor
ljmp
and
gs
pop
lcall
and
lcall
xor
lcall
aas
decl
aas
decl
inc
cli
decl
sub
lcall
jmp
sbb
pushl
sub
aas
xor
add
cs
and
dec
cmp
out
xor
and
call
es
lcall
xor
call
xor
lcall
cmp
decl
push
jmp
push
decl
jmp
dec
incl
sub
ljmp
inc
icebp
incl
sbb
ljmp
sbb
xor
daa
sbb
cmp
add
add
and
pusha
daa
and
or
ss
call
loop
ds
loopne
cmp
popf
cmp
imul
cmp
ljmp
push
mov
sub
xor
inc
movsl
lcall
in
ljmp
inc
hlt
call
sub
lcall
and
das
and
add
xor
cmp
ljmp
xor
adc
call
push
cmp
xchg
loope
adc
decl
scas
incl
icebp
call
pop
xchg
decl
push
mov
sbb
cmp
cmp
call
and
mov
adc
add
add
sbb
fbld
cmp
lcall
and
sbb
add
cmp
jmp
ljmp
sar
call
mov
incl
pushf
incl
pushf
incl
test
lcall
sbb
decl
sbb
incl
add
addr16
and
sub
and
sub
and
sbb
call
nop
ljmp
sar
incl
incl
ljmp
call
mov
incl
xchg
icebp
decl
insl
lods
jmp
das
notrack
and
sbb
cmp
mov
add
es
ljmp
pop
and
sub
and
sub
and
dec
inc
inc
lcall
push
jmp
pop
insl
decl
cmp
es
and
and
pop
and
xor
sub
push
push
push
push
sub
and
sub
and
sub
and
sub
and
ror
leave
inc
rol
cmpsb
movsl
cmpsl
jmp
sbb
sar
loopne
fcos
es
and
and
pop
and
xor
jmp
pop
sbb
add
and
xor
and
xor
ljmp
push
and
std
cld
ljmp
ljmp
push
sbb
mov
std
std
jmp
sbb
jmp
sub
jmp
pop
sbb
add
and
push
inc
das
das
incl
xor
inc
das
das
jmp
loope
inc
enter
lods
jmp
sbb
sar
rcl
sar
loope
loope
and
and
and
and
jmp
and
lahf
inc
xor
fistps
cmp
push
cmp
jmp
push
jmp
inc
dec
ljmp
pop
and
pop
push
push
jmp
push
push
jmp
pop
and
and
pop
and
pop
pop
sbb
and
inc
inc
out
bound
decl
cmp
sub
sub
and
sub
and
sub
and
xor
sub
es
and
and
jmp
and
pop
pop
sbb
and
push
xor
inc
fists
inc
cmp
sub
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
and
push
adc
sub
xorb
xor
xor
sub
sub
and
fbld
pop
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
sbb
add
xor
add
inc
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
xor
add
sbb
add
add
add
add
or
popa
fwait
or
fisttpl
pop
mov
decl
gs
or
decl
inc
mov
test
add
jo
add
pop
add
add
add
push
test
inc
mov
decl
popa
sar
or
decl
pop
mov
fisttpl
sub
mov
add
add
add
or
push
mov
or
std
incl
mov
incl
scas
incl
xor
or
leave
call
sub
clc
prefetchwt1
push
or
mov
sub
or
incl
lock
repz
movsl
decl
stos
incl
mov
incl
lods
std
decl
xchg
repz
push
mov
or
pop
sbb
add
add
mov
xchg
icebp
cmp
lcall
iret
incl
sar
or
jo
push
push
pop
call
stos
mov
lods
movsl
lcall
arpl
adc
sbb
incl
jmp
sar
incl
call
xchg
repnz
xchg
inc
or
xchg
and
test
jle
pushl
ljmp
jb
dec
inc
inc
pushl
fcmovne
jmp
loopne
jmp
xlat
jmp
xlat
jmp
xlat
in
loop
in
in
call
mov
call
push
test
push
mov
lcall
incl
decl
cwtl
xor
add
add
jae
mov
cmp
cmp
jno
call
loop
out
out
push
jmp
push
out
call
push
out
call
out
out
in
jecxz
out
in
out
in
lcall
inc
incl
int3
decl
jle
fadds
add
add
dec
test
pcmpeqw
mov
daa
das
pushl
jmp
out
push
out
call
sti
stc
idiv
cld
sti
cli
std
cld
sti
cld
sti
cli
sti
stc
idiv
clc
hlt
icebp
push
out
call
in
jecxz
in
jecxz
call
xor
or
mov
push
scas
adc
add
add
ss
leave
out
out
out
jmp
push
lock
cli
cli
stc
cld
cli
clc
push
repnz
push
jmp
fdivr
ljmp
jmp
and
cs
and
cs
and
cs
and
push
and
mov
scas
fdivr
push
sar
inc
push
in
dec
fs
pushl
repz
std
cld
sti
push
repz
push
out
jmp
inc
mov
ljmp
daa
sub
pop
sbb
push
sbb
adc
sbb
xchg
sbb
add
add
pop
and
cs
and
cs
and
sub
and
loope
iret
pushl
aam
xor
inc
std
lcall
jmp
in
cld
sti
cli
push
lock
in
in
call
inc
inc
jmp
sbb
pop
sbb
push
sbb
out
das
and
cs
and
cs
and
sub
dec
dec
push
jmp
ret
aaa
icebp
ljmp
inc
std
ljmp
inc
cmc
cmp
call
aad
cli
div
push
ljmp
js
push
daa
pop
and
and
sbb
jmp
sbb
xor
sub
xor
and
cs
and
sub
and
pop
push
push
push
out
jmp
lcall
xor
lcall
xor
fcos
cmp
mov
out
in
in
in
in
in
in
out
out
out
push
hlt
cmc
cli
cli
cli
std
cld
sti
push
out
jmp
incl
sbb
sbb
jmp
push
and
cmp
sub
ss
sub
sub
push
and
pop
push
push
push
repnz
jmp
pushl
inc
sub
lcall
and
call
pushl
inc
ljmp
dec
decl
pushl
mov
jmp
jecxz
stc
clc
clc
push
repnz
in
in
incl
sbb
jmp
push
ljmp
and
pushl
sub
incl
add
add
sub
sub
push
and
pop
push
push
push
repnz
jp
ret
pop
popf
decl
pop
stos
incl
pop
lret
inc
call
lcall
cmp
cld
incl
sub
jmp
dec
cld
decl
repnz
inc
in
pop
sub
ljmp
mov
int
iret
jmp
jnp
insb
jmp
sbb
jmp
sbb
cmp
das
pushl
sub
lods
cs
and
push
inc
aas
in
es
sub
and
sub
mov
and
jmp
cmp
decl
es
pushl
idiv
add
clc
decl
aas
incl
sub
jmp
dec
decl
xor
jmp
dec
incl
sub
jmp
cmp
lcall
lods
decl
aas
ljmp
sbb
ljmp
sbb
cmp
sbb
dec
cmp
ljmp
sbb
sub
lret
incl
sbb
jecxz
sbb
jmp
add
in
pushl
idiv
add
clc
jmp
push
lcall
inc
cmp
decl
decl
inc
incl
sub
ljmp
inc
repnz
sub
call
iret
jmp
and
sub
sub
cmp
add
sub
es
and
mov
incl
pop
call
das
in
ss
in
pushl
push
lods
cmp
sub
ljmp
xor
sub
sub
ljmp
xor
mov
call
aaa
sti
pushl
idiv
add
loopne
and
loop
pop
sub
call
sbb
xor
sub
sub
add
sub
and
sub
adc
jmp
xor
jmp
loop,pt
ss
int3
pushl
aaa
lcallw
sbb
es
jne
adc
xchg
decl
mov
call
jae
call
pop
cmp
pop
sbb
sbb
dec
jmp
cmp
jmp
cs
aad
or
lcall
pop
aaa
lahf
add
jp
and
mov
jmp
cmp
ljmp
aaa
xchg
lcall
sub
lods
incl
pushf
decl
mov
call
mov
lcall
lcall
enter
ret
adc
incl
pushf
decl
jnp
incl
inc
pusha
decl
sbb
out
add
mov
cs
sahf
jo
add
adc
mov
sub
decl
sbb
and
sbb
incl
pushf
incl
lahf
ljmp
decl
decl
decl
incl
pushl
sar
call
mov
incl
sahf
incl
pushf
incl
pushf
incl
pushf
lcall
sub
decl
sbb
add
popl
add
jns
sbb
sbb
ljmp
pop
and
sbb
xchg
lcall
mov
decl
decl
incl
ljmp
sar
call
mov
incl
sahf
incl
pushf
decl
dec
jmp
and
and
and
sbb
add
add
add
jns
pop
adc
ljmp
pop
and
sub
and
sub
and
sub
and
xor
inc
decl
jmp
push
jmp
sbbl
sbb
call
cmp
and
das
jmp
pop
and
and
and
and
and
xor
incl
add
add
and
ljmp
pop
and
sub
and
sub
and
sub
and
xor
sub
iret
leave
cli
repnz
jmp
and
sub
and
cltd
xchg
xchg
sti
hlt
lock
leave
ljmp
sub
es
and
and
pop
and
and
and
cmp
xor
xor
sub
add
add
and
iret
sub
and
sub
and
sub
and
sub
and
cmpb
cld
clc
cmc
pushl
cmpsb
test
pushl
sub
std
cld
push
out
out
out
jmp
jle
jns
es
and
and
pop
and
and
and
aaa
xor
jmp
pop
sbb
add
and
lahf
sub
and
xor
and
decl
lcall
pushl
lcall
push
decl
dec
call
pop
decl
enter
mov
and
pop
and
and
and
pushl
sub
jmp
pop
sbb
add
and
pusha
xor
sub
sub
cmp
sub
xchg
lea
jmp
push
imul
dec
inc
inc
pushl
imul
out
decl
pop
and
and
pop
and
sub
and
daa
and
mov
sub
fisttps
xor
dec
xor
xor
pop
push
dec
push
lock
sub
es
loope
call
push
jmp
pop
and
and
pop
and
and
and
add
and
pusha
push
cmp
cmp
push
cmp
decl
pushl
imul
dec
inc
dec
ljmp
pop
and
sub
and
dec
inc
inc
lcall
pop
jmp
pop
and
and
pop
and
and
push
scas
cmp
dec
lcall
aas
call
aaa
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
es
and
es
and
and
pop
push
iret
pop
pop
sbb
cmp
dec
dec
lcall
aas
incl
pushl
es
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
and
jmp
and
jmp
pop
sbb
adc
add
add
cmp
out
dec
ds
cmp
and
sub
and
sub
and
sub
and
sub
and
sub
and
and
pop
sbb
push
pop
sbb
and
sbb
jo
sub
mov
xor
sub
sub
and
jmp
pop
fbld
pop
sbb
push
pop
sbb
clc
add
pop
lock
add
add
add
psubb
add
clc
add
pop
cld
add
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
lock
add
add
psubb
add
clc
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
aas
incb
add
incb
add
add
jg
addb
inc
add
jmp
pop
ljmp
add
add
add
add
add
add
and
add
add
andb
add
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
or
push
pop
mov
pop
sbb
add
sbb
add
push
popl
add
jl
add
pusha
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
add
or
add
cwtl
add
sbb
add
sbb
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
push
test
and
or
xchg
call
or
lret
decl
sar
or
sar
or
decl
dec
mov
or
xchg
out
or
sbb
add
insb
add
add
add
imul
add
jb
add
xchg
or
dec
enter
jmp
dec
mov
or
decl
sar
or
pop
int3
decl
push
mov
ljmp
push
mov
add
inc
add
add
add
add
add
add
push
pop
push
lods
or
enter
clc
decl
lahf
decl
test
decl
stos
decl
test
decl
mov
sti
incl
incl
push
iret
incl
and
add
push
mov
add
add
add
push
incl
jns
incl
decl
lahf
decl
mov
decl
movsb
decl
popf
decl
mov
decl
bound
add
add
push
sbb
or
incl
incl
mov
incl
sar
push
mov
incl
incl
xchg
incl
and
decl
dec
xchg
lcall
xor
sub
xor
cs
daa
daa
loop
and
repnz
push
incl
pop
mov
incl
mov
incl
lods
incl
mov
incl
mov
incl
mov
decl
stos
decl
and
or
lods
and
jmp
sar
decl
int
incl
lret
incl
incl
add
decl
insl
mov
ljmp
dec
lcall
scas
sahf
call
mov
jmp
ror
fxch
sar
mov
xchg
jae
popa
pushl
outsl
incl
data16
xchg
incl
incl
lret
call
decl
call
movsb
decl
inc
cmpsb
int3
pop
inc
mov
incl
call
lcall
incl
enter
add
push
das
dec
pushl
sbb
pusha
dec
mov
aam
repz
out
jecxz
in
loop
in
loope
in
loope
out
loop
push
in
push
jmp
clc
in
loopne
jecxz
mov
xor
or
pop
incl
sar
add
std
call
pushl
incl
decl
nop
lock
inc
mov
add
xchg
dec
push
jae
ljmp
ljmp
ljmp
cmp
idiv
sbb
jg
push
or
ds
mov
lock
jmp
in
loop
in
in
out
in
out
in
in
in
in
loop
ljmp
jmp
in
sti
icebp
out
in
int
jl
pop
lcall
push
push
decl
push
xchg
call
into
lcall
incl
mov
or
lcall
add
add
inc
pushf
or
pusha
shlb
call
mov
ljmp
cmp
or
ja
arpl
ljmp
in
jecxz
out
out
push
jmp
out
hlt
out
out
hlt
out
jmp
push
out
call
push
ljmp
in
jecxz
ljmp
push
call
in
movsb
xchg
mov
and
push
decl
aas
push
incl
int3
incl
imul
push
or
or
pusha
jge
or
and
dec
jmp
or
js
push
push
out
out
out
push
jmp
push
out
jmp
stc
cmc
repnz
cli
div
cli
clc
cmc
cli
clc
idiv
cli
div
stc
cmc
repnz
repz
push
lock
call
fcos
jmp
loope
cli
lock
stos
lahf
xchg
jmp
adc
adc
pop
incl
lretw
dec
stos
adc
add
add
pop
xor
pop
dec
dec
in
loop
push
out
push
ljmp
clc
cmc
icebp
sti
stc
idiv
std
sti
cli
std
std
std
cld
sti
sti
stc
idiv
clc
cmc
icebp
push
lock
icebp
jmp
out
in
jmp
loopne
stc
out
loop
xchg
xchg
lcall
pop
xor
add
sbb
test
sbb
pushl
es
rol
mov
clc
icebp
out
clc
jmp
push
std
std
std
cld
cli
clc
idiv
div
out
push
in
out
out
out
ljmp
out
jecxz
call
dec
lcall
adc
push
adc
add
cs
and
pop
and
cs
and
sub
adc
decl
hlt
jmp
inc
mov
into
jl
aad
xchg
fdivr
repnz
out
cld
cli
stc
clc
repz
in
out
out
in
jmp
out
mov
push
pop
jmp
sbb
sbb
sbb
pop
sbb
cs
and
cs
and
cs
and
add
add
sub
sbb
pushl
es
fxch
push
in
jns
lcall
xor
lcall
xor
jmp
ds
jmp
inc
std
lcall
lods
fcos
sti
cld
cli
stc
push
repz
push
jmp
in
jecxz
ljmp
lcall
dec
lcall
pop
sbb
and
sbb
add
sbb
xor
push
sbb
lcall
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
adc
jmp
pop
stc
jmp
lcall
ds
lcall
cmp
incl
sub
incl
push
pushl
push
sti
clc
idiv
div
jmp
lock
aad
hlt
out
lcall
push
jmp
sbb
pop
sbb
pop
sbb
lcall
sbb
movl
add
add
pop
and
cs
and
cs
and
cs
and
cs
and
sub
adc
call
push
pushl
incl
add
incl
cs
lcall
cmp
jmp
inc
jmp
pushl
std
sti
lock
std
std
stc
cmc
repnz
in
out
in
in
out
jecxz
dec
mov
and
and
cli
and
sbb
and
sbb
and
sbb
and
sbb
pop
sbb
das
and
das
and
cs
and
cs
and
sub
push
and
and
sbb
mov
push
jle
sar
sbb
loopne
sub
jmp
inc
lcall
idiv
adc
idiv
or
ljmp
cld
icebp
cld
cli
clc
push
icebp
in
push
call
cmp
xor
and
sbb
and
sbb
jmp
sbb
and
sbb
and
sbb
xor
fbstp
and
cs
and
sub
sbb
ljmp
sbb
mov
incl
or
incl
and
decl
sub
decl
ss
jmp
sbb
std
out
clc
cld
sti
repz
cld
cli
icebp
cld
cli
repnz
std
sti
repz
idiv
sti
std
cld
clc
hlt
icebp
push
jmp
in
jecxz
jmp
fcmove
decl
aas
lcall
sbb
jmp
sbb
jmp
sbb
ljmp
add
xor
and
ljmp
pop
and
cs
and
sub
sbb
ljmp
push
and
into
mov
std
jmp
and
ljmp
inc
idiv
ss
sti
ljmp
xor
sar
pop
xor
jmp
mov
mov
mov
xchg
xchg
mov
jle
mov
je
mov
je
mov
jle
mov
mov
inc
mov
fdivr
hlt
icebp
jmp
sti
clc
cmc
push
out
out
out
in
jmp
inc
inc
lcall
pop
jmp
push
jmp
sbb
jmp
sbb
ljmp
es
jmp
push
and
cs
and
xor
pushl
and
ljmp
and
sub
sbb
ret
mov
dec
enter
push
lret
and
decl
and
decl
adc
incl
jg
decl
sbb
decl
sbb
call
sub
incl
sbb
incl
adc
incl
push
fdivr
sbb
fcos
or
int3
decl
pop
mov
lcall
lcall
rcl
clc
imul
cld
idiv
div
in
push
jmp
into
incl
cmp
push
adc
push
jmp
sbb
pushl
cs
sbb
add
sub
and
cmp
das
ljmp
sbb
ljmp
and
sub
and
pop
adc
jmp
loope
call
or
lcall
pop
iret
ljmp
inc
ljmp
and
ljmp
push
decl
sub
incl
sub
ljmp
xor
incl
and
lcall
sbb
mov
imul
push
ljmp
fmul
ret
es
and
sbb
sbb
jmp
and
ds
push
data16
add
ss
sub
sub
push
and
sub
and
push
adc
in
jmp
stos
call
xor
decl
daa
fdivrp
add
jmp
add
icebp
ljmp
xor
incl
daa
cli
incl
sub
ljmp
incl
sub
incl
sub
decl
incl
sub
incl
push
incl
xor
incl
pop
hlt
incl
sbb
ljmp
mov
fcmovnbe
test
sbb
sbb
jmp
sbb
jmp
sbb
cmp
cs
and
sbb
add
ss
xor
ljmp
sbb
ljmp
push
and
sub
sbb
cmp
push
pushf
incl
adc
ljmp
in
call
in
incl
and
incl
and
hlt
call
ss
add
stc
incl
sub
ljmp
dec
decl
xor
incl
daa
incl
sub
ljmp
incl
sub
decl
xor
ljmp
dec
incl
sub
stc
call
idiv
daa
inc
icebp
incl
or
test
jmp
adc
sub
and
sub
and
inc
cmp
ljmp
push
and
das
and
pushl
and
sbb
and
and
call
sub
fdivrp
add
call
incl
and
incl
and
jmp
stc
lcall
cmp
incl
xor
pushl
pop
lcall
decl
call
cmp
pushl
pop
decl
ss
incl
sub
call
cmp
ljmp
dec
incl
sub
incl
es
lcall
cmp
jmp
cmp
ljmp
movsl
jmp
push
xor
sub
and
cmp
sub
sbb
and
add
add
and
xor
and
jmp
sbb
decl
sub
ljmp
inc
loop
add
incl
sbb
out
es
lock
sub
call
cmp
cmp
pushl
dec
mov
jmp
xor
sub
sub
and
pop
ljmp
xor
sbb
xor
ljmp
push
std
incl
sub
jmp
inc
idiv
pop
xor
incl
sbb
decl
daa
in
xor
decl
sbb
pushl
and
pushl
sbb
jl
add
add
pop
sbb
das
and
in
adc
jns
add
sar
add
int
xor
decl
sub
incl
sbb
call
cmp
incl
jecxz
sub
xchg
jmp
sub
and
and
jmp
adc
jmp
sbb
jmp
sub
jmp
and
lcall
push
adc
and
add
push
adc
lcall
pop
sbb
sbb
inc
call
xor
pushl
push
decl
clc
incl
sbb
call
inc
out
add
iret
incl
adc
ljmp
push
enter
or
add
add
sbb
daa
cmp
incl
pop
incl
adc
lcall
cmp
lcall
xor
xchg
pop
sbb
jmp
or
adc
sub
push
ljmp
sbb
jmp
inc
pop
call
jns
call
lcall
or
sahf
jmp
or
mov
jmp
push
push
jmp
adc
or
sbb
sub
incl
and
pop
xor
incl
sbb
incl
sbb
ljmp
daa
push
sub
add
add
mov
inc
into
decl
mov
add
sar
sbb
dec
call
lsl
and
sbb
lcall
push
jge
and
dec
decl
xchg
decl
mov
decl
sar
adc
decl
incl
scas
incl
test
decl
or
lcall
dec
jae
pop
push
jge
sbb
push
adc
or
idiv
adc
mov
lcall
sub
test
add
insb
add
add
jmp
xor
incl
jecxz
adc
adc
daa
push
or
incl
mov
incl
mov
mov
call
mov
ljmp
sar
ljmp
jmp
call
mov
incl
test
incl
sahf
incl
mov
stc
decl
lcall
and
lcall
adc
call
insb
incl
sbb
mov
sub
sbb
test
add
jne
add
jns
unpckhps
decl
and
sub
sbb
sub
sbb
sbb
add
incl
mov
incl
decl
call
call
call
incl
cmp
ljmp
lcall
mov
incl
fwait
incl
sahf
incl
sahf
incl
sahf
incl
test
jnp
sub
pop
jmp
sbb
incl
pop
scas
pushl
inc
iret
decl
adc
pop
add
jbe
add
jmp
adc
sub
sub
and
sub
and
sub
sbb
and
decl
jl
incl
mov
pushl
decl
call
lcall
call
decl
aas
loop
ljmp
sar
lcall
test
incl
lahf
incl
movsb
incl
mov
aam
sbb
jmp
push
and
sub
and
and
sbb
sub
incl
or
add
add
add
jmp
adc
sub
and
sub
and
sub
and
sub
and
sub
pop
ljmp
sbb
and
dec
call
push
call
xchg
into
lcall
mov
ljmp
call
ljmp
loop
jmp
aad
call
mov
incl
sahf
stc
incl
mov
decl
outsb
test
sbb
and
sbb
jmp
and
and
and
and
and
xor
and
incl
push
jge
add
add
push
add
sub
sub
push
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
or
and
sub
inc
lcall
cmp
outsl
jmp
imul
imul
adc
outsb
call
inc
pop
lcall
sub
push
ljmp
sbb
jmp
sbb
jmp
pop
and
and
and
and
and
and
and
sub
decl
or
add
add
add
add
and
mov
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
pop
adc
call
dec
call
ror
jmp
fcompp
decl
or
ljmp
adc
sub
or
dec
cmp
inc
mov
mov
lcall
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
and
and
ss
and
add
add
and
scas
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
sbb
jmp
loop
std
ljmp
lcall
adc
jmp
sub
jmp
loope
push
in
call
lcall
sbb
jmp
pop
and
and
pop
and
and
and
and
and
cmp
jmp
and
data16
add
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sbb
js
cld
jmp
xchg
mov
pop
sbb
sbb
adc
jns
ja
push
repnz
decl
adc
jmp
pop
and
and
pop
and
and
and
and
and
and
xor
jmp
and
inc
daa
pop
and
and
sub
and
sub
and
sub
pop
and
sub
adc
test
fcmovu
fdivr
das
xor
pushl
xor
lcall
sub
adc
sahf
popf
sahf
lcall
pushl
jg
stc
clc
clc
inc
mov
sbb
and
pop
and
and
pop
and
and
and
sub
pushl
sub
lock
sbb
es
and
sub
and
das
and
xor
and
pushl
jmp
adc
scas
dec
int3
into
cmp
inc
call
mov
lcall
adc
mov
mov
bound
decl
popa
addr16
cld
cld
cld
dec
leave
enter
sbb
and
pop
and
and
pop
and
and
and
sub
and
add
sub
and
cmp
sub
cmp
sub
cmp
sbb
lcall
clc
stc
stc
ljmp
jbe
imul
mov
mov
and
movhlps
lahf
popf
popf
call
rcl
lcall
pusha
inc
enter
ljmp
adc
jmp
pop
and
and
pop
and
and
ljmp
and
sbb
and
pop
push
cmp
sub
inc
xor
incl
xor
inc
xor
incl
xor
cmp
push
jp
ja
sbb
adc
pop
adc
push
ljmp
imul
and
pop
and
and
pop
and
and
jmp
and
pop
sbb
and
push
push
sub
lret
cmp
dec
aaa
xor
decl
xor
pushl
and
call
std
std
ljmp
sbb
ljmp
push
and
push
adc
mov
pushl
sbb
and
pop
and
and
pop
and
and
pop
and
pop
pop
sbb
and
xor
pop
inc
inc
lcall
cmp
push
cmp
call
aaa
decl
xor
xor
dec
dec
call
push
jmp
sbb
daa
sbb
ljmp
pop
and
sub
and
es
jmp
sbb
fs
popa
ljmp
jmpw
pop
and
and
sbb
jmp
pop
and
and
pop
and
and
sbb
add
add
add
push
push
jge
ds
imul
pop
inc
cmp
push
cmp
decl
xor
pushl
and
sub
sbb
sub
and
sub
and
sub
and
sub
and
sub
and
daa
push
and
sbb
adc
jmp
pop
and
es
and
and
pop
and
and
and
pop
pop
sbb
pop
pop
sbb
and
push
lcall
dec
lcall
cmp
dec
aaa
xor
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
es
and
es
and
es
and
and
and
pop
pop
sbb
push
pop
sbb
and
sbb
dec
cmp
dec
call
cmp
inc
das
cs
cmp
sub
xor
ljmp
pop
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
pop
and
daa
pop
and
daa
pop
and
daa
and
jmp
and
pop
pop
sbb
push
pop
sbb
pop
sbb
pusha
ss
push
inc
inc
decl
cmp
cmp
sub
xor
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
daa
and
jmp
and
lcall
pop
sbb
pop
sbb
sbb
and
lea
xor
cmp
pushl
es
das
and
ljmp
and
ljmp
and
ljmp
and
ljmp
and
jmp
and
cld
pop
pop
sbb
sbb
add
add
sbb
sbb
and
and
and
repnz
repnz
repnz
pop
jecxz
pop
sbb
push
pop
sbb
add
add
orb
add
add
incb
add
add
add
add
add
jg
add
add
add
aas
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
rolb
add
add
incl
add
jecxz
add
add
add
loope
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
pop
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
push
add
pop
incl
add
clc
add
ud0
add
clc
add
pop
incl
add
incb
add
incl
add
incl
add
incl
add
inc
add
incl
add
or
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jns
cmp
mov
data16
xchg
in
xchg
mov
arpl
insb
and
inc
outsb
adc
pop
dec
add
push
mov
sahf
test
dec
jb
dec
and
cwtl
fucom
add
or
jnp
push
insb
pop
xchg
add
insb
imul
cmp
fst
imul
sti
jecxz
fcmovu
xor
stos
cmpsl
push
aad
mov
ljmp
shll
or
rcrb
inc
pop
or
mov
cmp
inc
dec
or
sub
push
enter
lea
mov
and
out
iret
add
fisubs
and
pop
and
test
jmp
add
addl
sub
inc
mov
inc
jmp
add
push
insl
xlat
inc
aad
lcall
imul
cmpsb
add
mov
pmaxsw
das
addr16
inc
pop
xor
arpl
lret
cmp
xor
mov
mov
cld
jmp
scas
jp
sub
add
pop
add
scas
out
add
pusha
das
lret
pop
rcrb
andb
xchg
mov
mov
cwtl
fyl2x
dec
xchg
rorl
sarb
popa
cltd
add
sub
out
cwtl
in
cmp
mov
ja
mov
dec
or
add
fmuls
mov
rorl
sbb
sbb
test
mov
movl
shll
xor
test
pusha
pusha
bound
push
add
add
xchg
inc
sub
adc
mov
add
or
or
dec
jecxz
xchg
jno
mov
add
or
in
pop
push
xchg
imul
popa
pop
cwtl
ret
xlat
je
xor
inc
sub
pop
movsl
add
movl
dec
and
add
or
lret
xchg
shll
or
or
mov
lea
mov
shlb
xchg
mov
hlt
les
ficoml
out
js
aas
cli
dec
bound
mov
sbb
loope
cmpsb
test
loopne
rolb
pop
sbb
leave
int3
jg
gs
pop
xchg
or
pusha
pusha
push
mov
out
add
xchg
and
xor
movsb
inc
movb
jmp
sub
mov
scas
scas
btsl
push
inc
lahf
sarl
dec
pop
push
and
movsb
out
cvtps2pi
call
or
jmp
cwtl
pop
sub
rcrb
rcl
int
insl
mov
je
jl
mov
xchg
push
mov
adc
jge
pop
sub
jns
scas
sbb
lock
loope
sub
test
orb
subl
sarb
add
cmpsl
pop
lret
add
push
xor
mov
movsl
mov
sbb
scas
mov
stc
es
adc
insl
shrl
cmp
inc
repz
ja
push
imul
das
cmp
orl
mov
and
insl
pop
es
shll
das
rorb
hlt
cmc
scas
mov
mov
or
jmp
sbb
dec
jp
iret
out
stos
in
xchg
add
icebp
pop
rorb
and
call
mov
xchg
pop
jae
lock
xchg
sbb
fisubrl
outsl
mov
add
push
xchg
push
add
lock
cmpsb
lds
scas
inc
dec
nop
sub
test
or
xor
jl
adc
dec
lcall
orl
and
nop
mov
pop
mull
mov
add
aas
inc
pop
clc
stc
jnp
popa
pop
lods
pop
xor
adc
fdivp
cmp
mov
xchg
dec
add
dec
stos
push
jecxz
scas
sub
daa
ret
hlt
pop
adc
adc
test
and
sbb
mov
push
int3
xchg
js
adc
mov
jo
cmp
pop
addb
xchg
adc
jo
xchg
movsb
mov
inc
movsl
push
mov
pop
aas
push
daa
inc
pop
pop
or
or
add
repz
or
sub
jp
xchg
mov
sbb
jo
ficomps
sbb
addb
xorb
pop
mov
insb
inc
xchg
jnp
inc
mov
mov
mov
test
or
xor
cmp
xor
call
sub
addb
bound
out
addl
add
dec
jmp
cmpsb
sub
cmpsb
aad
lock
dec
push
sbb
sbb
inc
outsl
xchg
aas
xchg
sbb
mov
add
mov
shlb
rcll
jno
mov
ror
or
aaa
loopne
shl
fwait
cmpl
scas
sbb
orb
inc
and
les
insb
jb
fmuls
mov
mov
aam
sub
or
jecxz
mov
out
arpl
pushf
stc
flds
and
inc
and
mov
dec
cltd
and
xchg
mov
pop
mov
xchg
push
xchg
fimuls
lcall
jg
push
cmp
sbb
outsb
shlb
jne
mov
lret
sub
adc
lds
je
ljmp
cltd
xchg
cmp
pop
icebp
imul
add
add
dec
mov
loop
jge
mov
dec
fwait
cs
dec
movsl
ret
adc
dec
dec
push
scas
push
nop
sahf
pop
cltd
hlt
les
sarb
add
je
inc
add
jnp
cwtl
mov
adc
sub
mov
pushf
xchg
pop
or
testb
fldenv
sbbb
push
imul
data16
lret
mov
lret
scas
mov
mov
por
ret
sub
cmp
les
loopne
icebp
xchg
push
in
sti
stc
inc
repnz
addr16
inc
dec
movsl
ret
mov
and
or
dec
mov
stos
push
sub
ss
cs
jp
fidivrl
mov
loopne
cmpsb
sbb
sti
or
mov
lock
pop
mov
add
vpsrlw
pop
xlat
or
adc
clc
loopne
mov
lea
stos
lea
xor
je
adc
sub
inc
outsb
inc
cld
push
add
nop
inc
xchg
sarb
cwtl
push
xchg
or
sbb
je
lock
hlt
lret
push
inc
es
in
dec
lahf
inc
mov
sub
xchg
dec
push
pop
out
push
lret
sub
inc
popa
mov
sti
jmp
mov
ret
sbb
mov
divl
push
and
dec
int3
clc
das
sbb
movsl
test
js
pop
cli
cld
mov
in
ret
xor
int3
add
push
ljmp
dec
or
xlat
jne
sbb
popa
cmp
jg
jecxz
popf
adc
test
jle
fstps
adc
jle
in
fs
xor
push
sub
pop
mov
sub
or
je
adc
xchg
in
sbb
xor
fwait
sub
sahf
pop
shl
cmpsl
dec
or
dec
pop
aaa
sti
fisttpl
sub
loopne
adc
ja
faddl
cmp
sbb
movl
roll
loope
mov
add
pop
je
adc
push
push
lods
aad
cwtl
test
cmp
mov
ds
cltd
add
cltd
pusha
outsb
insl
or
adc
adc
lcall
xor
push
cltd
test
scas
aaa
and
fisttpll
and
fdivs
je
ret
cmp
sbb
jne
jnp
pusha
pusha
pusha
mov
adc
xchg
shlb
subb
movsb
mov
pop
mov
jl
jno
sbb
push
sti
loop
pop
lds
testl
std
xchg
jbe
inc
add
adc
adc
dec
loopne
pop
orb
repz
fbld
push
in
pop
mov
mov
out
push
push
cs
jno
mov
in
push
rolb
cltd
stc
inc
push
mov
add
mov
pusha
fsubrl
cmpb
outsl
or
add
cltd
add
das
mov
mov
fwait
cs
pop
loope
jb
ret
sti
add
cs
adc
pop
adc
test
and
hlt
icebp
dec
roll
lret
or
add
popf
xchg
xchg
add
sub
stc
inc
pop
jmp
pop
sbb
sub
pop
xor
or
mov
xlat
and
cmp
test
mov
cwtl
out
dec
push
xor
stos
or
imul
out
or
mov
ret
rcl
out
mov
int
or
hlt
mov
mov
mov
in
cld
icebp
cwtl
out
fldl
movb
jae
inc
pop
or
add
aas
pusha
dec
pop
or
mov
dec
pusha
sbb
movsl
sahf
fstpl
sbbb
xchg
fisttps
lahf
insl
cmpsl
pop
mov
jp
xchg
sub
and
mov
or
int3
and
or
and
inc
je
insb
mov
and
mov
icebp
testb
ljmp
jbe
arpl
insl
mov
mov
insl
and
push
push
xchg
mov
jb
and
jnp
test
das
and
push
pop
add
xchg
push
js
rolb
and
das
bound
cmp
dec
push
mov
sbbb
inc
or
xchg
loop
xlat
mov
add
push
sub
jg
pop
iret
mov
push
pop
sbb
test
aad
test
adc
push
in
push
in
cmpsb
jle
stc
jecxz
cli
fsub
xor
int
jg
out
pop
lahf
scas
imul
clc
jnp
jmp
mov
pop
pop
sub
push
fs
inc
dec
add
jp
jle
mov
sbb
mov
clc
ret
loop
mov
popa
mov
pop
push
add
inc
mov
inc
pushf
add
fildll
paddd
sub
jb
push
xor
scas
dec
mov
inc
dec
pop
jno
std
cmpsb
popa
bound
mov
es
lret
fcompl
fsubl
adc
mov
rolb
loopne
daa
andb
jp
nop
dec
movsl
sbb
or
mov
push
xchg
fdivr
push
bound
cmc
imul
inc
add
loop
mov
and
jae
aam
cwtl
test
loop
int
or
xchg
inc
lret
dec
adc
fwait
das
add
shrl
and
jle
or
dec
cmpsl
mov
mov
xor
in
mov
and
mov
das
lcall
inc
mov
fbstp
or
lods
pop
popa
pop
dec
movsl
lock
xchg
mov
es
or
cmc
fcoms
adc
jmp
ret
or
inc
xor
xor
jp
jmp
sbb
std
rclb
fldt
fisttpll
rol
cmp
sbb
sbb
jne
aam
push
shr
sub
dec
dec
add
adc
jmp
insb
add
mov
repnz
scas
mov
pop
lahf
cmp
sbb
clc
fistpll
jecxz
sbb
xchg
sub
aad
hlt
popf
loope
mov
or
lods
sarb
std
in
cmp
cmpsl
sub
scas
outsl
xor
or
jmp
mov
xrelease
std
insl
xchg
int3
add
lods
jg
in
pushf
push
or
adc
mov
fstpt
repnz
icebp
lds
faddl
push
shll
or
test
mov
jne
or
repnz
mov
mov
sti
lods
fdivl
mov
inc
nop
out
sub
test
jne
ss
xchg
addr16
cmp
ficomps
fsubl
pushf
and
ret
les
imul
inc
mov
adc
sbb
test
pusha
ds
jno
and
inc
and
lahf
inc
insb
mov
mov
insb
fnstsw
ret
pop
ljmp
outsl
fcomip
sbb
xchg
fiaddl
mov
test
mov
jl
cmp
mov
lea
ds
repnz
out
jl
add
dec
add
test
mov
xor
mov
jae
adc
movsl
push
in
clc
add
fistpll
adc
cmpsb
mov
pop
adc
adc
and
sti
arpl
jnp
adc
aas
add
movsl
lret
mov
pop
nop
mov
sub
dec
out
mov
pop
cmp
imul
pushf
bound
decl
movsl
xor
test
mulb
stos
mov
sbb
in
imul
sbb
aas
rclb
and
jl
fstpt
dec
or
dec
jne
fidivrl
call
inc
loope
mov
enter
out
sahf
xchg
jno
xchg
add
pop
cmp
pushf
out
sub
pop
lock
mov
popa
cmpsb
scas
ffree
pop
adc
aas
xchg
addr16
sti
into
sbb
sub
lock
ret
out
inc
lret
js
sub
clc
aas
xor
out
repnz
test
mov
stos
dec
shrb
mov
aas
shl
pop
loopne
and
cli
cmp
dec
lahf
and
pusha
mov
mov
ret
inc
test
or
icebp
cmpsl
data16
and
jl
aas
or
mov
dec
movsl
repz
adc
adc
jg
dec
pop
sbb
dec
and
adc
or
add
push
repz
in
lahf
cli
in
lahf
in
mov
das
inc
sub
jge
fisttpll
mov
scas
inc
mov
cmpsb
push
sub
popf
out
jle
xor
popf
xchg
pop
jle
mov
std
or
and
cmp
test
xchg
addb
mov
add
push
loopne
stos
add
lret
jge
orb
xor
and
imul
out
xchg
cmp
stos
hlt
inc
xchg
js
and
icebp
icebp
std
inc
imul
shrl
iret
pop
stc
clc
ds
iret
clc
jg
dec
outsb
js
repz
pop
jge
mov
cmpsl
inc
or
inc
sbb
jne
stc
out
dec
jl
jecxz
or
jbe
add
jo
loope
and
nop
test
fdivl
fbld
pushf
and
adc
aas
sub
imul
lods
sub
cwtl
mov
mov
jecxz
mov
jg
cld
sub
ds
rorl
push
sub
loope
jecxz
sbb
jecxz
jo
mov
dec
repz
mov
pop
subb
scas
xlat
cwtl
sahf
lock
xor
or
ja
loope
and
aaa
std
or
and
lock
add
dec
adc
sbb
cmp
dec
push
pop
add
mov
scas
fneni(8087
ljmp
xor
iret
pop
sub
adc
imul
sbb
or
out
jl
pop
int
rcll
clc
int
cld
out
or
push
loop
out
add
push
and
std
cmc
xor
inc
sub
lret
lock
addl
add
push
stos
pop
test
sub
cmp
and
orl
sbb
push
mov
mov
lret
call
psubq
scas
fstps
scas
stos
dec
jnp
outsb
fcmovne
jne
pop
mov
sub
fisttps
inc
lods
push
popf
loop
cltd
out
cmpsb
std
inc
mov
in
xlat
or
or
xor
xor
decb
cld
mov
imul
cmp
imul
mov
adc
xchg
popf
sbbb
or
scas
leave
dec
mov
lods
jmp
pop
shl
push
lods
addb
loope
cs
xchg
scas
hlt
mov
ja
adc
mov
mov
mov
push
loope
rorl
adc
ds
xor
movb
sbb
and
sbb
inc
sub
popf
jle
cs
mov
and
mov
adc
scas
pop
lods
xchg
inc
sub
lock
pop
lock
out
mov
add
popf
dec
xchg
imul
pop
xchg
dec
and
sub
pop
ja
lcall
xor
inc
scas
rcrb
cmp
inc
inc
out
jecxz
decb
shlb
mov
cld
cmp
cmp
xchg
cld
dec
mov
inc
inc
popf
sub
fwait
adc
loopne
pop
mov
or
sbb
rcl
sub
das
mov
jmp
fbld
push
popa
mov
dec
and
cwtl
imul
push
jo
adc
xor
fbstp
or
scas
out
es
in
inc
rorb
xchg
sub
clc
dec
dec
sbb
and
xor
adc
fbstp
in
imul
insl
pop
mov
mov
cmp
lock
mov
fbstp
and
jmp
xlat
dec
jmp
dec
movsl
ret
xchg
and
dec
loopne
in
pop
cmp
mov
cli
ret
rcll
or
lods
mov
into
adc
in
adc
sub
jne
xchg
cmp
icebp
mov
aas
call
or
xchg
and
cli
pop
sbbb
lcall
in
cmp
repz
out
dec
jmp
insb
mov
cmp
push
pop
loop
repnz
hlt
loop
sub
mov
shl
add
in
mov
in
fbstp
das
aas
adcl
repnz
stc
jmp
cli
sub
aas
xlat
xor
mov
mov
repnz
add
pop
dec
sub
lods
sbb
rcl
stc
das
vlddqu
add
dec
and
mov
jecxz
pop
inc
mov
test
nop
in
push
inc
push
sbb
cmp
mov
mov
es
out
cmp
sti
lahf
pop
xchg
lods
pop
cmp
inc
sbb
mov
stc
sbb
pop
mov
mov
and
mov
das
jge
pop
cli
mov
push
data16
test
xchg
xlat
mov
fcmovnu
sahf
xor
hlt
dec
jns
movsl
xchg
cli
negl
out
inc
lds
mov
mov
push
mov
addr16
addb
mov
repz
aas
test
sarl
inc
jmp
sub
mov
test
push
cmc
xor
cmp
pop
cs
jae
jl
xchg
pop
cmpsb
gs
pop
xchg
adcl
pop
lods
sti
fdivp
xchg
mov
push
fidivs
pop
fs
dec
mov
pop
neg
mov
or
test
mov
adc
lods
cmp
repz
shll
jle
scas
xor
adc
pushf
add
jbe
and
test
jmp
sub
aaa
mov
lods
dec
or
call
jo
fdiv
es
test
mov
and
test
lcall
mov
sub
mov
scas
lahf
das
push
sub
or
cwtl
test
pusha
sbb
xchg
mov
sub
push
scas
es
aam
insl
cwtl
xchg
vmaxpd
sbb
or
cmp
mov
adc
pop
lock
iret
fcomip
daa
in
fscale
mov
push
sub
mov
pop
xchg
mov
lods
inc
cmpl
cmpsb
xor
insl
push
pop
fistl
fnsave
scas
pop
pop
lds
outsb
test
adc
or
add
push
rclb
inc
adc
aad
jg
ss
push
lret
adc
in
jge
push
sti
xchg
mov
les
js
ret
push
pusha
sti
dec
adc
lahf
das
and
popa
or
mov
mov
or
arpl
jp
cwtl
sar
fsubr
lahf
or
sbb
xchg
shrl
or
mov
imul
sbb
scas
das
fstpl
pop
pop
js
push
cmp
jmp
repnz
dec
jmp
pop
out
out
inc
divl
inc
mov
adc
cmp
cld
mov
push
xchg
dec
in
or
pusha
fldl2t
loopne
addr16
sbb
adc
dec
add
pop
mov
or
mov
insl
push
jg
push
testb
hlt
rcrb
jle
sub
cmp
push
dec
add
add
pusha
cmp
cs
sti
pop
push
mov
mov
aaa
ffree
lret
mov
jo
out
popa
fstps
std
sti
push
or
lahf
int3
xchg
out
cmpsb
popa
cmpsl
or
jge
outsl
xchg
sbb
dec
jge
scas
jg
jnp
out
das
icebp
popf
out
incl
push
push
xchg
mov
iret
aas
push
mov
pusha
std
cld
scas
lods
mov
mov
sarl
rcl
mov
inc
xchg
mov
add
mov
and
xor
int3
cmpsl
xchg
cmpsl
dec
add
push
and
test
mov
rolb
cmpb
pop
mov
dec
dec
or
jbe
test
xchg
out
jmp
aas
fstp
jno
in
sahf
fucomp
in
dec
inc
add
jo,pt
loop
fcomip
jbe
testl
jmp
push
or
cld
jmp
scas
xlat
ror
scas
push
or
cltd
fst
mov
jle
in
inc
push
je
adc
lods
xorb
mov
jecxz
mov
test
shr
in
fs
loop
popf
add
cs
in
add
mov
sbb
xor
xor
popl
lret
mov
ror
add
out
mov
dec
mov
pop
jns
xor
xlat
jno
pop
xchg
fisttpll
aas
xor
repz
sbbl
and
xor
inc
mov
cmp
sub
into
pop
add
scas
pop
lods
std
mov
in
pop
add
data16
iret
jg
popa
dec
das
rcrb
push
adcl
xor
jle
mov
je
inc
inc
fdivrl
cs
mov
ret
std
rcrl
cmp
int3
and
mov
fldt
jnp
jo
sub
outsb
inc
mov
mov
jmp
pop
data16
add
orl
pushf
int
mov
mov
xor
lcall
push
cmp
jg
mov
or
xchg
or
pop
add
nop
add
cmpsl
fstpt
adc
movsbl
das
fdiv
movsl
cmp
roll
out
mov
loope
ds
jno
cmc
mov
dec
fwait
cli
inc
out
xchg
mov
mov
push
xchg
outsl
orl
mov
loop
inc
inc
add
xor
popf
adc
jns
setge
or
inc
jns
mov
imul
mov
repnz
rorl
test
mov
or
cmc
sub
cmp
lret
cmp
add
scas
jo
les
dec
sbb
mov
fwait
test
dec
ja
shll
repnz
jbe
mov
data16
std
or
jl
mov
nop
cmp
test
mov
loopne
mov
out
cmp
add
xor
and
aad
mov
cmp
mov
mov
sub
mov
leave
jmp
push
sub
sbb
insl
out
sbb
arpl
shll
mov
pop
jns
xor
scas
arpl
pusha
add
xchg
nop
add
dec
pop
lds
mov
xchg
mov
mov
andb
mov
mov
mov
insb
in
ret
pop
dec
add
jmp
cltd
incb
shr
jle
jle
mov
or
cld
sbb
in
lahf
cmp
dec
mov
adc
xchg
dec
sbb
dec
inc
popa
cwtl
cmpsl
sub
push
add
inc
fldt
pop
push
mov
adc
add
lods
sub
or
mov
bound
adc
jge
test
sub
jnp
xchg
in
cmp
lods
add
inc
pusha
mov
test
js
mov
add
push
movsl
or
or
inc
jo
push
test
and
shrl
ret
sbb
cmc
push
xchg
out
cli
leave
cs
daa
test
sub
add
aas
shl
fstpl
inc
xchg
in
ds
xor
push
pop
jecxz
pushf
or
js
and
or
adc
cmp
xchg
xchg
jp
add
cmp
cmp
adc
out
mov
mov
insb
sbb
in
mov
and
ret
mov
mov
outsl
jns
stc
pop
ljmp
imul
in
sub
mov
cli
aad
test
cli
pop
aas
out
into
mov
std
xchg
cld
std
in
lahf
lea
add
shlb
cli
scas
testl
stc
adc
cltd
std
jge
and
movlps
mov
pop
aas
xchg
sub
pushf
jne
mov
call
jmp
sub
gs
or
idivb
mov
xor
sti
add
sub
fdivrp
idivb
loop
scas
jl
xchg
sub
mov
fdivp
inc
lcall
out
adc
rcrl
jno
jbe
lcall
pop
mov
fucomp
leave
pop
mov
add
push
stc
popf
outsb
loopne
sti
pop
rolb
data16
pop
sarb
lock
into
inc
lret
push
shlb
clc
add
test
ss
je
ljmp
fistpll
inc
and
cmp
xchg
movsl
pop
test
or
ret
mov
push
sti
outsb
sti
adc
jmp
xchg
arpl
fsub
imul
daa
push
lea
mov
out
mov
testl
dec
int3
lea
enter
mov
bnd
outsl
jle
fwait
mov
dec
mov
ja
mov
adc
add
dec
mov
mov
pop
push
test
cmp
adc
mov
inc
inc
inc
js
mov
push
sbb
and
mov
lret
popa
xchg
outsl
aad
test
lock
mov
or
mov
jo
mov
inc
adc
sub
sub
sti
and
and
jmp
insl
xchg
mov
cmc
ds
jmp
insb
shlb
jmp
int
xchg
shll
cltd
enter
or
scas
push
dec
mov
mov
movsl
sarb
lods
push
push
imul
vpunpckhbw
pop
push
and
cmc
lahf
jl
add
fdivs
or
out
or
aam
or
jl
ljmp
mulb
lret
mulb
mov
xchg
mov
fcmovbe
mov
xor
lret
test
adc
jecxz
xchg
xchg
adc
popa
leave
je
mov
fistl
decl
lock
jl
adcb
push
add
add
repnz
inc
push
ret
xchg
jbe
into
inc
add
popf
jns
lock
and
mov
mov
push
push
es
mov
test
cli
into
repz
or
pop
clc
ret
sti
jbe
sti
setne
or
or
add
je
dec
mov
push
jno
outsl
pop
cli
movsb
jmp
addr16
dec
fildl
lahf
fsub
test
rcrl
lret
mov
ja
push
and
push
leave
je
mov
in
adc
aas
int3
cmp
mov
push
andl
rcrb
inc
inc
inc
clc
cld
out
inc
ss
jl
aad
fs
adc
fwait
pop
xlat
ret
add
cmp
xor
stc
sbbl
insl
dec
push
loope
stc
outsl
arpl
sub
in
sti
pop
pusha
out
jbe
js
jge
add
add
loopne
lods
push
dec
je
push
ds
inc
ficompl
fidivrl
mov
ja
mov
fcomps
add
pop
push
jmp
aas
push
ja
nop
neg
xor
out
or
cmp
xchg
insl
inc
shrb
idivb
int
neg
cmpsb
inc
or
jnp
std
xchg
jg
and
std
pop
movsb
push
jle
ds
out
push
sub
aam
mov
mov
pusha
ds
int
jl
and
pop
je
push
and
push
push
xchg
pop
mov
add
and
dec
inc
inc
push
jbe
adc
mov
jno
adc
add
sub
pop
push
ss
xor
xor
jnp
ljmp
je
iret
sbbl
das
mov
inc
or
idivb
incb
xor
lcall
pop
insb
fnclex
cmp
clc
imul
and
add
inc
rcll
movsb
push
sub
adc
push
dec
loopne
inc
clc
push
dec
xchg
pop
lret
xor
fwait
pop
out
or
out
rcll
inc
lcall
int3
pop
cwtl
subl
fsubs
scas
adc
rolb
inc
rcrb
mov
pop
cwtl
fnstenv
aaa
mov
ss
or
adc
dec
and
addr16
ljmp
test
ljmp
mov
and
xor
incl
insl
xchg
pop
sbb
xchg
roll
push
loope
scas
cld
or
bnd
add
dec
jmp
push
in
push
cmpsb
and
fldt
fs
xchg
push
scas
cltd
imul
xchg
dec
addr16
jbe
sbb
adc
xor
adc
test
popa
or
repnz
fsub
stc
fistpll
shll
jmp
mov
inc
adc
push
scas
movsb
push
cwtl
dec
cmp
lea
push
cmpl
xchg
int
fistl
mov
fidivrs
inc
inc
jg
xor
mov
xchg
orl
sbb
iret
lds
cmp
jl
jmp
dec
lret
leave
sbb
or
dec
cmpsl
or
repz
cmp
xor
in
hlt
jne
mov
adc
lahf
sub
hlt
fcmovbe
jno
jbe
xor
xor
jl
jg
fisttpl
mov
outsl
out
jae
cmpsl
bswap
xor
cli
xlat
mov
xor
or
out
in
sbbb
rcrb
popa
cltd
or
out
repz
or
clc
xor
pop
movsl
nop
pminub
scas
jg
sbb
insl
push
xchg
cwtl
push
call
mov
icebp
test
jg
sbb
in
cmpsl
test
mov
mov
jo
mov
pop
pop
incl
xchg
mov
inc
add
sti
sub
or
out
jmp
mov
cld
sbb
pop
pop
cmpsl
nop
xor
cwtl
mov
fnstcw
push
into
lahf
mov
addr16
push
sub
adc
sahf
mov
in
add
inc
rcrl
inc
clc
cmp
adc
dec
loopne
out
nop
jg
mov
xor
addr16
dec
fwait
jp
cwtl
in
es
inc
fwait
adc
ret
jle
outsl
mov
lret
repnz
add
cmp
stc
jecxz
mov
inc
inc
imul
into
mov
add
movsb
pop
pop
adc
movb
push
or
mov
data16
mov
cli
shrl
ret
mov
in
out
nop
idiv
cmc
sti
jge
fists
adc
leave
jl
mov
ss
outsb
jl
aaa
cmp
test
std
int
xchg
mov
jp
es
jmp
sti
adc
icebp
negb
mov
adc
movsl
sbb
jmp
sbb
cwtl
add
mov
je
data16
cmc
inc
pop
cld
sbb
into
in
and
out
or
ss
adc
add
out
iret
mov
cs
fisubs
div
lock
psllq
inc
hlt
lock
cmc
or
push
std
ss
cmc
push
sbb
lods
daa
nop
dec
addr16
loope
lahf
cltd
aam
xor
push
cmpsb
popf
and
dec
gs
jmp
dec
sbb
aad
scas
aas
jnp
rcr
out
cmpsb
cmpsl
sbb
add
les
pop
ja
das
mov
mov
in
cmpsb
lahf
dec
cwtl
fwait
out
insb
ret
je
push
imul
sub
xchg
mov
iret
das
dec
cmp
cld
and
jp
dec
or
rorl
into
in
xor
push
jmp
pop
or
stos
push
leave
jnp
mov
repz
iret
lea
into
fiadds
pushf
push
xor
popa
cwtl
in
mov
push
jp
mov
test
je
or
jns
jl
test
xchg
dec
cmp
inc
push
sbb
int3
stc
sbb
sbb
inc
fmul
adc
jnp
iret
cmp
aam
iret
mov
idiv
sbb
mov
outsb
test
lcall
fwait
jo
xor
dec
ficompl
test
test
and
ds
fdivrl
rcpps
or
mov
xor
repz
std
inc
or
cmp
sbb
adc
adc
es
imul
xchg
int
add
into
or
mov
pop
pop
jp
in
dec
sbb
cmp
sub
stos
shlb
sub
fnstenv
push
sub
fld1
push
in
subl
ss
sub
fdivrs
pop
pop
popa
push
cmp
jg
testb
xlat
add
fcmovne
insb
push
mov
ds
cmpsb
pop
aaa
fdivs
popf
jl
cwtl
testb
add
stos
push
push
lock
out
call
outsl
jge
mov
xchg
pop
int3
je
sub
add
sbb
test
repnz
dec
call
cmp
pop
out
jb
and
jmp
sub
decl
mov
in
aad
leave
jo
push
mov
loop
xchg
inc
mov
lods
div
mov
cmp
imul
dec
lcall
dec
sbb
fistps
jp
adc
gs
jp
push
cmp
and
or
arpl
rcr
out
mov
jle
mov
pop
rclb
shrb
and
dec
sbb
push
lods
push
jl
pop
ljmp
push
mov
pop
cmp
bound
jb
andb
sub
cld
inc
mov
cld
mov
or
mov
test
jl
and
jp
std
shll
pop
dec
sahf
ja
sub
lret
int3
out
mulb
jo
xchg
mull
sbb
fadd
mov
icebp
cmpsl
xchg
push
rclb
add
cmpsb
push
cld
mov
jg
pop
mov
lock
xor
add
ret
xchg
push
mov
pop
sti
dec
mov
ret
shll
pop
adc
jmp
xchg
sub
cli
into
push
push
repnz
ljmp
jb
pop
and
pusha
sbb
add
or
mov
mov
or
push
rorb
out
fmull
enter
pop
lret
repz
xor
jnp
pop
imul
xor
xorb
ficompl
es
in
pop
add
mulb
cmp
pushl
inc
lea
ja
fidivrl
sub
dec
dec
fld
stc
sbb
sbb
lods
sbbb
rorl
outsb
stos
jb
xchg
jne
or
pusha
mov
je
lds
ss
push
or
fmuls
adc
push
mov
cli
sti
sbb
imul
icebp
sub
mov
xchg
cmpl
xchg
push
jnp
jle
sti
sub
out
arpl
negl
out
cmp
mov
push
add
and
mov
xor
sbb
ret
sub
lcall
push
dec
addl
mov
lock
sub
sbb
sar
sub
pop
dec
sbb
mov
cmpsb
xchg
int3
sub
dec
pop
hlt
xor
cmp
test
arpl
fbstp
test
mov
subb
clc
add
mov
jl
mov
pop
jge
cmp
fimuls
cmp
mov
pop
icebp
in
sbb
lret
mov
stc
cmc
std
test
fidivl
cmpsl
cmp
push
movsb
jmp
test
imul
inc
jmp
adc
jmp
cmp
cmpb
imul
lock
popa
dec
adc
lods
jp
mov
pop
mov
out
cld
fs
lods
loop
icebp
arpl
shr
pop
inc
cmp
jnp
test
cs
mov
rcl
jle
insl
inc
fiaddl
lret
add
sub
sbb
jg
and
loope
insl
and
sub
push
pop
iret
repz
adc
mov
or
test
jge
and
pop
jns
enter
mov
sti
sbb
add
inc
and
rcl
ret
aas
rorl
cmpsl
lds
sub
shrl
mov
out
sti
sbb
pop
or
loop
sbb
rolb
xor
fwait
les
test
fcmovb
imul
or
jmp
jecxz
iret
sbb
ret
mov
movsl
xor
pop
in
mov
mov
and
jnp
xchg
rcrl
and
jbe
pop
lods
adc
imul
pop
sub
sub
insb
fists
cld
jne
adc
inc
or
mov
bound
shll
int
roll
push
mov
std
dec
jg
leave
push
sbb
mov
mov
sub
out
ljmp
cwtl
sbb
jp
outsl
clc
insb
aaa
sbb
ret
sbb
lods
mov
and
movsl
fisubrs
jbe
das
jns
sbb
lcall
xor
cmpsl
sti
cli
inc
or
add
loopne
lret
mov
lret
sub
jg
push
xchg
or
sbb
imul
jge
adc
rcll
movsb
rcll
jbe
add
fcomip
mov
das
shlb
incl
dec
es
int
jmp
mulb
or
mov
jg
and
inc
xor
jmp
pop
out
jge
outsb
sti
inc
das
pmaxsw
jmp
xor
push
sbb
mov
lcall
cli
test
push
les
ret
insl
push
jns
pusha
test
xchg
fistpll
sbb
ret
insl
xchg
cmc
aad
xor
cmpsb
cmp
or
mov
sbb
cmp
movsb
lods
cwtl
add
pop
test
imul
dec
mov
sub
sub
pop
adc
mov
xlat
in
loope
or
mov
dec
and
cmp
mov
push
mov
jp
pop
mov
jmp
imul
add
std
inc
pop
mov
xor
pop
sbb
mov
cmp
in
pop
xchg
ret
adc
xchg
insl
push
aas
jns
dec
inc
push
inc
pop
repz
jl
jle
arpl
push
or
pushaw
sbb
jg
shlb
adc
lods
pop
lods
pop
shll
test
and
jno
movsb
push
pop
dec
jae
pop
sti
sub
mov
push
mov
xchg
jmp
enter
gs
ds
sar
rcrl
dec
gs
pusha
cwtl
or
testl
jae
sbb
leave
jne
popf
adc
mov
test
add
orl
mov
rcrl
dec
pop
sbb
clc
xor
jg
aas
jp
or
ljmp
dec
xchg
jle
xor
xchg
jmp
ret
mov
sbb
adcl
pop
mov
mov
repz
xor
xchg
loope
nop
jmp
cmp
push
pop
mov
adc
shl
arpl
add
xchg
cli
sti
dec
lock
jmp
dec
iret
faddl
sub
insb
jg
xchg
jg
in
fldt
in
sbb
movsl
bound
sub
cmpsl
out
push
and
jno
cmp
cwtl
call
mov
jno
or
push
call
jmp
daa
stc
out
push
fs
xchg
int3
dec
insb
sbb
inc
mov
shr
les
xchg
lret
sub
pop
repnz
arpl
add
or
push
pop
je
shlb
outsb
xorl
or
popa
cwtl
mov
mov
lret
mov
nop
xchg
xchg
xchg
push
dec
iret
jae
cmp
pop
fistl
mov
into
fistpll
shlb
ljmp
stc
xchg
mov
fwait
push
sub
outsl
inc
cmpsb
jl
cld
into
pop
cmp
inc
or
push
xor
or
jbe
or
scas
adc
mov
flds
pusha
mov
loope
fistpll
int3
mov
fisubrs
dec
adc
insb
ss
cmp
cmp
scas
mov
inc
pop
jo
push
mov
testb
xchg
sub
enter
iret
cmp
push
jge
jg
dec
inc
call
and
int3
jp
cmp
stos
pop
push
enter
cmpsb
jmp
dec
mov
repnz
jns
xchg
jle
inc
clc
popf
in
daa
dec
jge
add
repnz
adc
pusha
repnz
inc
lcall
mov
rorl
inc
imul
clc
cmp
cld
dec
out
or
mov
inc
loope
loop
mov
xor
ja
jno
outsl
sbb
mov
sub
dec
stos
lds
repz
repnz
mov
aad
sbb
cmp
xchg
push
push
add
push
in
aad
add
sbb
ret
or
movsb
repz
mov
mov
xchg
js
daa
sub
stc
or
pop
popf
out
in
push
mov
dec
pusha
lret
lcall
pop
xor
sbb
call
jb
scas
add
sbb
das
scas
xchg
adc
call
test
jp
mov
movsb
add
std
addb
test
loop
add
imul
dec
jns
or
pusha
sti
xchg
ja
and
aas
sub
imul
jno
call
enter
jp
adc
std
dec
pop
sub
hlt
jo
arpl
pop
mov
dec
ljmp
sub
fisubs
pop
sub
adc
pop
add
test
dec
jnp
xchg
shll
sbb
fs
stos
xor
dec
mov
jecxz
cmc
sub
mov
lods
sbb
leave
push
sbb
mov
rolb
shll
ja
shrl
imul
imull
daa
mov
jnp
cmpb
jo
das
pop
pushf
push
in
sub
mov
xor
sahf
lahf
dec
mov
push
jns
jg
sub
mov
mov
add
imul
ljmp
insl
dec
pop
gs
inc
testb
test
in
inc
push
jmp
daa
sub
jbe
nop
and
push
add
xchg
mov
fimuls
add
or
insl
loop
pop
mov
jle
sub
dec
and
mov
dec
push
xchg
mov
lds
push
mov
xchg
fdivrs
jg
clc
cmpsb
mov
cli
mov
add
inc
or
pop
loop
jle
popf
jg
mov
adc
mov
push
adc
es
iret
daa
mov
stos
lods
pop
xlat
cmc
stos
add
push
cmp
dec
add
dec
adc
mov
cmp
jp
lds
jne
pop
xor
in
mov
cmc
xlat
push
das
arpl
ficoms
sti
xor
and
add
leave
xchg
jnp
lock
lods
daa
xchg
das
add
fmuls
add
test
add
popa
sbb
and
and
fdivp
repnz
mov
out
loopne
pushf
pop
xchg
ss
mov
sub
push
or
fisubrs
mov
outsl
mov
shrb
out
pop
jecxz
mov
cmpsl
mov
and
in
fsub
cmp
or
mov
mov
clc
movsl
rorb
sahf
mov
jg
iret
sub
repz
scas
ss
outsl
xor
adc
int
and
jbe
lret
les
leave
xchg
add
fiadds
push
cmp
mov
xlat
xor
jge
adc
push
adcb
stc
bound
test
loope
scas
add
fidivl
inc
inc
ret
hlt
push
imul
aad
xchg
mov
xchg
icebp
sbb
add
mov
call
pop
mov
insl
fistps
inc
add
imul
or
inc
pop
adc
scas
xchg
xchg
cld
lea
xor
pop
call
int
testl
push
adc
xor
push
add
sbbb
call
test
fs
xor
in
rorl
cmp
ret
in
jge
mov
mov
cmpsb
mov
sub
jbe
out
ret
cmpsl
dec
jne
lcall
aas
sbbl
add
stos
js
nop
sub
add
or
repz
imul
xchg
mov
lea
push
pop
mov
mov
jnp
xchg
sub
sbb
pusha
pop
pop
fidivs
jecxz
gs
ret
stos
cmp
or
orb
lcall
add
jp
cmp
cmp
mov
mov
shrb
in
fdivrs
cmp
test
mov
fsub
cli
dec
sub
jae
push
sbb
repz
add
lods
xlat
popf
cwtl
cmp
push
in
fistps
fcoms
in
mov
outsl
sub
fistpl
stos
insb
xor
sub
out
hlt
lahf
and
and
fbld
leave
lods
call
dec
mov
in
rclb
inc
pop
pop
add
dec
pop
jg
pop
push
out
test
cli
pop
ljmp
stos
js
mov
ljmp
xor
push
scas
jb
in
enter
jl
fdivp
lea
mov
jle
sti
dec
sub
pop
inc
push
push
fcompl
mov
cmc
add
cmc
inc
and
mov
icebp
aas
xchg
rorb
mov
or
sbb
and
mov
xchg
outsl
cmp
ficompl
jns
xlat
push
outsb
cwtl
cld
fisttpll
decl
icebp
sbbl
xchg
daa
push
test
sub
jo
xchg
int3
mov
shlb
data16
subb
pop
arpl
shll
add
adc
mov
lea
dec
xor
adc
in
add
mov
std
enter
pop
imul
mov
dec
or
test
enter
aam
jae
mov
cmp
sub
dec
xchg
ror
jae
hlt
dec
lcall
xchg
mov
mov
and
scas
sbb
psrad
pop
sarl
pop
sub
adc
sub
pop
inc
negl
cmp
pop
lahf
pop
sbb
testl
lahf
pop
imul
ret
loopne
out
pop
leave
xchg
shll
icebp
and
mov
jle
mov
int3
jle
iret
icebp
sbb
scas
lret
leave
shl
xor
or
mov
fistps
mov
shll
or
push
loope
clc
jns
adc
inc
fiadds
pop
or
add
push
or
dec
or
xchg
jecxz
cmc
dec
lock
sti
and
mov
pop
jb
mov
iret
clc
cmc
scas
filds
push
cmc
hlt
mov
aas
jle
stos
push
ret
adc
pusha
arpl
push
data16
fsts
jnp
and
pop
aas
movb
dec
xchg
push
aam
adc
ret
and
sbb
ds
add
dec
icebp
gs
xchg
call
ss
loope
sub
insl
push
fcoml
pop
xor
leave
xor
cmp
lock
insb
inc
adc
insl
out
shll
inc
add
lahf
adc
out
push
pop
jle
roll
pop
pop
stos
jge
shlb
lahf
push
sti
iret
into
add
jae
int
dec
pop
jbe
scas
cltd
in
xchg
stc
sub
cmpsl
cmp
lret
mov
mov
jno
mov
xchg
push
clc
cltd
aam
push
inc
dec
loopne
mov
xchg
push
cld
ret
jns
sub
outsl
inc
in
std
inc
sub
mov
push
inc
daa
aaa
dec
add
sbb
clc
fwait
mov
adc
ret
scas
lods
push
lcall
xor
lds
push
call
popf
and
andb
jne
test
ret
adc
inc
cmp
or
lret
cmc
cmp
push
lods
aad
imul
movl
addr16
or
lret
movsl
push
bnd
adc
aas
fcoml
xor
aam
xchg
rol
fwait
mov
sub
add
popf
mov
sbb
loop
sbb
stos
movsb
jo
stos
adc
xlat
stos
xchg
or
into
cltd
test
data16
in
pop
rcrl
cmp
mov
ljmp
gs
aaa
push
icebp
jmp
add
jp
out
mov
xchg
dec
push
sub
leave
cmp
lock
mov
jne
jmp
fs
add
scas
std
test
aaa
movsl
and
pop
lods
fidivs
sub
cltd
in
outsb
sbb
push
cmpsl
fldcw
shll
mov
mov
push
push
adc
popf
add
xor
test
aas
mov
fsubrp
and
inc
add
js
jbe
pop
mov
cwtl
stc
and
xchg
cmpsl
mov
xlat
sarl
andl
jl
push
mov
jl
push
xchg
pop
out
lret
push
enter
fldl2e
cmp
xlat
popa
fsubl
adc
in
cld
jns
pop
ds
loope
dec
pop
lods
or
push
mov
push
or
leave
lods
subb
lcall
xchg
in
jmp
ja
mov
jbe
mov
into
fistpll
int3
stos
jl
mov
jl
addr16
pop
daa
sbb
or
int
daa
inc
loope
dec
clc
rcll
shll
jb
mov
push
sbb
cld
dec
lods
es
dec
xor
xchg
fadds
or
lods
iret
and
lods
movsl
sbbb
pop
inc
xor
push
stos
push
idivb
xor
xchg
adc
in
add
ret
xor
pusha
ret
arpl
mov
or
rolb
mov
jbe
xor
xor
push
imul
ret
rcrb
mov
push
push
js
sub
clc
push
daa
push
dec
shrl
es
mov
fwait
mov
mov
jns
xchg
mov
push
mov
mov
pop
sub
mov
jae
in
xlat
in
jbe
outsl
stos
bound
mov
or
or
andl
or
cld
repz
pop
clc
int3
stos
dec
int3
xchg
sbb
mov
repnz
and
ljmp
orb
movsl
sbb
push
cltd
sub
sahf
clc
repnz
sub
xor
jnp
or
cmp
clc
mov
ss
lods
push
add
jle
lcall
fs
and
sbb
and
jb
mov
or
imul
call
xchg
addr16
pop
pop
jp
fdivrs
or
cmpsb
add
add
pop
add
inc
fs
popfw
xchg
gs
jns
aad
js
out
cs
pusha
or
mov
jb
fs
cmp
push
pop
cld
pop
sahf
arpl
and
sahf
loopne
jge
mov
jl
lret
fisttpll
cmc
push
enter
xlat
cmp
sub
push
inc
xlat
movsl
fstl
xor
dec
iret
cld
das
aaa
or
incb
outsl
cmpsl
xor
jecxz
in
sbb
adc
mov
pop
jns
loop
push
repnz
jl
std
adc
cmp
jle
repnz
loopne
xchg
push
jg
lret
pop
xchg
sub
mov
movsb
mov
jb
sub
mov
mov
jae
roll
push
mov
inc
mov
daa
lret
arpl
inc
cwtl
ljmp
jge
mov
sbb
shl
aas
in
adc
les
jbe
jle
icebp
push
xchg
adc
xor
enter
pop
call
push
imul
nop
aas
jl
sub
fimuls
dec
shrl
shrb
out
or
notb
mov
fadd
mov
inc
fstpt
js
idivb
jo
cmpsb
dec
add
clc
mov
cli
mov
pop
pop
mov
dec
lret
arpl
xchg
js
addr16
jo,pt
leave
mov
fildll
pop
sub
add
or
ror
mov
roll
sahf
test
loopne
sbb
sub
add
xlat
test
negl
mov
xchg
mov
out
cmpl
std
test
push
lock
lret
rorl
inc
add
sbb
mov
fnstsw
inc
or
inc
test
push
xor
test
ret
dec
sub
test
movsl
mov
repz
inc
cmpsl
pusha
xchg
sbb
pop
stc
iret
push
jns
xchg
xchg
movsl
fdivrs
ja
out
clc
adc
daa
push
adc
lock
mov
jl
inc
jge
stc
lahf
mov
icebp
sbb
mov
popa
roll
int
xchg
jb
dec
pop
stc
xchg
or
mov
inc
imul
adc
iret
lea
pop
js
ret
or
sub
sub
push
sahf
or
sbb
lods
out
push
js
push
mov
shll
idivl
outsl
shll
lret
add
xchg
adc
add
jnp
in
or
mov
pusha
or
cmp
add
outsl
sbb
dec
add
pop
ret
or
stos
xchg
icebp
movb
or
clc
sbb
adcb
or
cmp
push
popa
dec
xor
sbb
clc
inc
nop
lcall
sbb
cwtl
jl
ja
mov
jno
sub
push
and
ja
out
bound
add
out
lods
xorb
divl
jle
jne
push
fcoml
mov
mov
jns
sbb
jo
xchg
dec
jae
inc
push
push
daa
ret
jne
push
scas
add
mov
lods
lret
xor
int
push
and
mov
bound
sbb
test
in
mov
pop
xchg
jge
push
bsr
jle
mov
scas
cmpsl
daa
inc
into
mov
jmp
and
fisubl
frstor
cmp
and
pop
popf
ret
lea
xor
cmp
jmp
mov
or
lds
adc
dec
mov
aaa
pushf
aas
enter
jle
scas
jno
mov
test
orb
push
cmp
lret
repnz
push
pusha
in
mov
repz
push
mov
cs
inc
add
cmp
cmp
sbbl
clc
lahf
movsl
mov
cld
faddl
or
sub
stc
fadd
jge
mov
test
add
mov
insb
ljmp
inc
or
ljmp
cmp
pop
repz
mov
fwait
arpl
sahf
jl
sub
mov
add
notl
push
mov
lock
push
fdivl
or
mov
repnz
jae
ficomps
rcrl
or
setle
xchg
faddl
add
clc
fldcw
shr
test
adc
inc
push
adc
ljmp
sti
sahf
sbb
jg
jp
pop
push
cmp
push
jmp
dec
rcrl
in
sbb
cmp
lods
in
fucomi
insb
aas
mov
sub
push
aam
adc
mov
call
mov
xchg
push
mov
stos
daa
cld
pushf
jp
scas
mov
movb
in
loop
inc
lcall
cmp
xchg
cmp
xor
cmpsl
aad
imul
pminsw
push
movsb
and
pop
into
fmuls
mov
add
mov
fwait
js
ljmp
or
iret
fidivrs
mov
ficomps
or
test
xchg
hlt
add
pop
jne
fisubrl
mov
imul
pop
rcrb
jb
mov
push
mov
fs
hlt
add
and
dec
inc
inc
push
push
jmp
or
xchg
inc
inc
and
mov
cltd
push
push
in
and
push
pop
insb
shr
add
fdiv
data16
rorb
stc
sub
lock
push
fstps
cmp
xchg
or
xchg
add
xor
mov
popf
lret
xchg
subl
xchg
mov
sbb
imul
jmp
xchg
lcall
imul
pop
sti
data16
fwait
loop
fwait
push
jb
rcrb
call
jmp
in
jp
in
call
or
push
jo
ljmp
cmp
xchg
out
jne
mov
loop
stos
cmpsl
jmp
pop
xor
decl
in
jb
pushf
cmp
loopne
sti
inc
imul
popf
aad
mov
pop
sub
cmpb
shlb
and
mov
mov
leave
xor
repnz
add
cmpsb
cli
sti
jge
cwtl
push
lret
xchg
lret
mov
cld
sbb
or
sub
std
dec
adc
jl
pop
jl
fistpll
test
mov
push
lret
cmp
test
inc
daa
sub
iret
shll
jns
mov
dec
lds
sti
cmpsl
xchg
jmp
in
rcrl
mov
aam
jne
mov
push
insl
jmp
repnz
icebp
push
xchg
cmc
imul
cli
mov
pop
adc
into
movsb
cmp
adcb
sarb
lods
stc
shll
hlt
sti
sti
adc
inc
push
in
cmp
ret
sbb
das
pop
rcll
xchg
dec
sbb
loope
dec
outsb
inc
push
add
clc
mov
jmp
mov
sbb
xchg
pusha
mov
add
cmpsb
mov
push
jne
mov
mov
jp
sub
daa
nop
xchg
mov
mov
mov
scas
es
mov
xor
push
inc
arpl
jg
jg
sub
jnp
mov
push
dec
or
loop
iret
adc
jns
jmp
xor
lea
jmp
dec
sbb
mov
outsl
push
adc
fldenv
rclb
xlat
mov
push
xchg
faddl
nop
arpl
dec
imul
xchg
enter
dec
imul
push
adc
jg
movsb
divb
cld
inc
adc
loope
or
aaa
stc
dec
call
mov
jecxz
xor
jne
jo
lock
mov
mov
jbe
sbb
mov
jo
lret
inc
dec
sub
andb
ja
jp
gs
mov
or
fistps
jns
jno
je
rorb
dec
and
jmp
ss
fneni(8087
cmp
imul
fwait
sbb
dec
xor
xor
mov
insb
test
jne
in
add
daa
cs
push
dec
lcall
lret
pop
test
mov
mov
sub
ja
pop
jg
jne
jb
dec
popf
nop
push
mov
aam
or
inc
cmp
aam
pop
rcl
push
incl
adc
cli
or
jne
mov
pop
movsb
inc
nop
mov
lcall
pushf
add
lock
and
sbbb
scas
sbb
cmp
dec
adc
lods
add
dec
roll
adc
in
arpl
imul
pop
pusha
rcl
add
ret
sub
xlat
pop
xchg
mov
or
xchg
xor
lahf
cwtl
xor
movsb
push
pusha
imulb
mov
sub
and
xor
xor
into
fisttpll
pop
out
in
mov
in
je
call
sarl
imul
shrb
aad
add
pop
mov
sbb
cmpsl
xchg
mov
jle
es
push
sbb
cmp
sarb
sbb
inc
sub
add
xlat
cmp
scas
pop
push
and
add
sbb
push
push
inc
lcall
push
jae
loope
cld
mov
test
push
test
jae
pushf
push
sub
imul
or
lock
sub
push
pop
or
add
ja
fisttpl
or
mov
pop
pop
enter
rorb
popa
mov
push
int3
sbbb
test
cmp
cmpsl
incl
je
out
inc
mov
jns
aad
mov
inc
movsl
fnstsw
mov
popf
add
or
pusha
lcall
or
lods
add
cwtl
jg
xchg
push
loop
push
mov
aaa
icebp
or
mov
sub
sbb
data16
pop
push
push
inc
mov
sbb
xchg
mov
rcrb
into
xor
add
dec
ss
pop
or
jbe
sti
call
dec
repz
dec
fcoms
lahf
push
push
jo
popf
rcll
das
stc
sbb
cmpsl
push
sub
jno
inc
adc
mov
jg
add
xchg
mov
orb
jle
test
pop
sub
hlt
sahf
les
add
divb
out
mov
fldcw
pop
jo
add
ss
mov
lcall
frstor
notb
or
mulb
and
jns
adc
add
adcl
jae
jnp
adc
adc
in
aas
ret
rcll
xchg
pop
sub
mov
jmp
mov
loope
and
lock
push
push
push
loop
lods
lds
shl
mov
inc
aas
cmp
pushf
gs
cmpb
xchg
adcl
push
sbb
fisubs
lods
pop
xchg
mov
adc
ds
sub
dec
cmp
imul
fistpll
fiaddl
add
pushf
jl
push
push
sbb
adc
out
loope
call
daa
int
fucomip
pop
cmpps
add
cli
out
popa
cwtl
sbb
mov
adc
aam
negb
push
mov
inc
pop
adc
or
adcb
lahf
out
aaa
je
out
mov
cmp
fsubp
mov
add
mov
out
sqrtps
mov
cmpsl
xor
add
xor
arpl
es
adc
addr16
mov
cmp
dec
daa
jbe
sbb
lds
adc
loope
inc
hlt
in
xlat
or
pop
mov
mov
mov
pop
lods
icebp
xchg
jge
mov
cmp
push
imul
fisttpl
je
das
fmuls
insl
dec
jae
lds
lret
lds
leave
in
dec
in
call
sub
lds
inc
jmp
insl
add
aas
mov
push
lods
mov
jl
adc
dec
mov
cld
pop
fadds
mov
jl
cld
mov
inc
dec
lss
stos
xor
mov
dec
and
adc
xchg
nop
sub
shlb
insb
dec
lgs
xchg
add
imul
cmp
fcomps
jae
push
adc
mov
xor
das
mov
mov
ret
push
jb
out
fcmovnb
arpl
push
xchg
xchg
cld
cltd
ljmp
fsubr
jmp
nop
xchg
mov
mov
lcall
fstp
inc
xor
fwait
sar
push
in
mul
add
ljmp
faddl
mov
fnstenv
in
sub
dec
lock
xchg
fdiv
aam
sti
mov
nopl
cmpsl
xor
xchg
mov
in
dec
pop
popf
cmpb
sub
pop
mov
xor
sub
jb
sub
inc
mov
sub
push
stc
fnstcw
cmp
scas
stos
mov
out
mov
xchg
aam
sub
and
lret
data16
arpl
adc
xchg
inc
fidivrs
jl
pop
cmp
adcl
loope
and
or
or
pop
lock
fmuls
adc
xchg
sub
mov
push
push
jne
aad
mov
cmp
jge
jnp
aad
mov
jge
fnsave
cltd
xchg
negb
das
stos
adc
pop
out
adc
in
inc
inc
movsl
add
pop
addr16
test
mov
sub
je
scas
mov
sub
test
xchg
xor
pop
nop
es
sbb
xchg
rolb
dec
sbb
xchg
inc
inc
mov
movsb
fbstp
repnz
lock
loopne
jmp
jmp
add
ja
push
test
lret
mov
xchg
dec
fs
jp
add
xchg
leave
fnstsw
cmp
sahf
xor
inc
test
test
fisttpll
int
lcall
outsb
mov
lret
mov
into
and
into
and
pop
sarb
or
clc
adc
fiadds
mov
pusha
js
pop
pxor
mov
out
rcrb
test
cmp
lret
jno
add
fwait
dec
rcrl
xor
add
pusha
sbb
lcall
cmpsl
cmp
xor
xchg
xchg
xor
or
adc
add
push
cmp
pop
xorl
test
add
jge
pop
mov
cmp
jno
xor
ret
pop
ret
cwtl
mov
movsb
mov
mov
out
mov
or
movsb
clc
lea
sbb
adc
enter
insb
cmpsb
ficoms
and
cmp
cltd
addr16
lods
out
into
mov
scas
sbb
xorb
clc
lret
mov
pop
xchg
adc
dec
adc
xchg
xchg
lods
push
stos
or
outsl
add
lahf
outsb
fcmovne
pop
das
mov
or
stos
pop
out
sbb
xchg
pop
adc
push
fidivrs
nop
add
cmc
xchg
sbb
dec
jb
push
inc
mov
add
jecxz
and
cmpsl
adc
bound
inc
insb
filds
aaa
subl
pusha
jl
jp
xchg
mov
pushfw
and
jae
cli
ret
sub
ret
pop
mov
push
insl
dec
rorb
or
or
mov
xor
movsl
mov
andl
les
rcrb
inc
or
insb
dec
sbb
gs
mov
rol
stos
pop
pop
jmp
stos
xchg
sbb
cmp
or
sub
add
jp
pop
ss
inc
in
mov
addb
cld
xor
push
data16
fistl
sub
mov
cmpsl
imulb
adc
dec
pop
push
mov
mov
adc
or
or
jo
or
insl
or
mov
fisttps
pop
lds
inc
pop
sahf
daa
cmp
aad
mov
jno
or
enter
sbb
cmpsb
inc
fs
cmc
es
cmp
mov
jge
cli
int
clc
cs
xchg
xchg
sub
pop
sahf
shlb
jle
addr16
dec
std
cs
cmp
loopne
sbb
fs
daa
add
punpcklbw
test
inc
pop
dec
inc
test
mov
sbb
sbb
mov
jbe,pn
xor
xchg
or
lods
lea
fcom
pop
sub
adcb
mov
lcall
fwait
mov
fidivl
push
xchg
sbb
xor
fbld
or
mov
dec
icebp
inc
or
clc
repnz
adc
pop
pop
in
inc
jne
mov
clc
scas
xor
test
push
cmpsb
insb
mov
dec
inc
leave
pop
sub
ss
add
pushf
xchg
xchg
mov
jae
mov
lret
das
into
ret
jmp
mov
xor
ds
pop
fisttpll
filds
adc
adc
and
push
stos
cwtl
pop
xchg
stos
mov
inc
out
pop
cmp
test
adc
add
xlat
inc
xchg
push
adc
and
and
or
mov
fwait
pushf
fs
cld
stc
insb
jl
pop
imul
mov
iret
pop
push
xchg
xor
cli
sti
mov
fiadds
test
cltd
pop
out
sub
xchg
in
repnz
jmp
cmp
pop
xchg
jbe
fwait
jecxz
sub
orl
pop
pusha
xlat
shrl
xchg
fiadds
push
out
fsubl
jno
push
cltd
rcr
and
inc
or
and
mov
push
ja
mov
lret
push
sub
xor
shr
or
test
daa
push
cmp
ret
cld
lds
pop
xor
xor
test
daa
in
jno
lea
or
mov
inc
das
stos
add
mov
scas
pop
and
fistpll
mov
jnp
fstl
test
test
push
and
and
inc
and
xchg
cmp
in
in
movsl
leave
rorl
inc
aam
jecxz
mov
fucomi
mov
xor
aam
rolb
imul
aad
lret
pop
ret
inc
std
and
mov
addb
scas
scas
lret
dec
sbb
ss
fs
dec
aas
push
icebp
std
mov
aas
nop
lret
imul
xlat
out
stc
adc
popf
inc
lret
aad
mulps
or
push
add
bound
fcmovne
cmp
mov
shlb
adc
xchg
fstl
xorl
mov
sub
inc
or
les
cmpsl
xor
cmpsl
sub
aas
mov
jl
jmp
push
pop
pop
mov
call
stos
test
loope
inc
add
test
fldcw
and
arpl
dec
movsl
lock
nop
std
imul
mov
jns
xchg
loope
and
push
mov
push
cs
sub
add
nop
or
add
xor
cmp
daa
call
xchg
cmpsl
iret
repz
int3
imul
imul
add
jbe
cld
cmp
mov
lds
ror
mov
adc
imul
push
mov
movsb
cwtl
aas
or
add
and
ret
mov
add
insl
insl
jecxz
pushf
es
jge
outsl
clc
mov
mov
fidivrs
mov
mov
inc
cmp
imul
scas
jne
push
add
push
in
add
sub
cltd
push
pop
cmpsb
cmp
decb
aas
jle
addl
xchg
fidivrl
aas
jge
in
test
hlt
sub
or
pop
jge
jp
push
mov
cmpsl
fisubrs
idivl
out
pop
push
sbb
and
sub
rolb
jp
xchg
in
sub
jnp
insb
or
invd
mov
push
inc
inc
std
xchg
inc
aad
and
sub
xor
xchg
in
push
mov
xchg
xchg
mov
lret
lret
fdivs
dec
out
and
loopne
stc
sahf
xorb
repz
pusha
pop
dec
rorl
jmp
xchg
push
inc
inc
adc
lods
psubusb
push
adc
fsubrl
rclb
cltd
inc
xor
xor
rorl
test
mov
stc
dec
mov
xor
out
enter
xor
xor
dec
or
jp
sub
in
cmc
inc
loopne
cmp
and
mov
add
arpl
mov
and
add
push
cwtl
aas
es
mov
bound
shll
and
jle
pop
ljmp
xchg
inc
movsb
sbb
mov
scas
bound
sbb
and
lcall
add
loop
call
loope
sub
mov
das
test
mov
or
push
das
inc
jl
xchg
push
vmread
push
mov
negb
jg
je
mov
cmp
mov
add
and
bound
jnp
pop
negl
adc
jb
add
inc
lea
imul
inc
cwtl
xchg
sahf
lahf
adc
in
pop
xchg
int3
or
je
pop
ja
std
fnstsw
in
or
cmpsl
js
adc
cmp
dec
sub
or
pop
pop
inc
imul
sbbb
xchg
and
movsb
adc
and
icebp
sbb
dec
push
inc
aad
lret
mov
in
push
int
pop
inc
clc
bound
dec
mulb
jg
out
mov
in
jmp
and
xchg
mov
inc
pop
mov
repz
sub
sahf
out
out
push
ljmp
inc
jle
call
stos
add
mov
scas
add
lret
xchg
sarl
jo
push
fs
jge
rcl
out
daa
jo
and
push
adc
or
mov
cmp
jecxz
ret
in
mov
jle
jge
mov
rorb
sub
dec
mov
mov
pusha
cwtl
out
xor
pusha
pop
dec
test
ror
sub
pop
data16
lods
cmc
jnp
dec
lock
mov
dec
call
in
cli
rcrl
push
lret
jge
sbb
ret
inc
dec
adc
inc
add
rcl
cltd
adc
loopne
pop
xchg
fsubr
mov
and
jbe
cmpsb
jbe
add
cli
mov
cmp
in
adc
xor
jo
lods
push
xchg
adc
cli
mov
into
out
jnp
adc
lock
cld
xchg
pop
loop
shll
dec
cwtl
shl
mov
dec
and
cmpsl
decb
inc
movsb
xlat
pop
cmc
add
insl
movb
sbb
jl
test
roll
push
mov
xlat
loope
and
pop
scas
mov
mov
dec
loopne
adc
jle
cmpb
mov
insl
out
sti
and
mov
mov
ja
and
lahf
lds
mov
popa
adc
push
jecxz
xchg
pop
cmp
dec
adc
fsubrp
divl
jge
push
lods
repz
imul
loop
pop
sti
notl
ss
sbb
or
adc
out
xchg
cmp
mov
divl
out
pop
cmpsb
test
dec
rol
xor
mov
mov
loop
jns
fldenv
push
mov
sbb
jg
xchg
add
iret
inc
and
mov
enter
popa
jge
ja
add
mov
jle
jl
jl
stos
ret
je
inc
or
dec
or
mov
pop
xor
jge
and
and
fidivrl
repnz
popf
ss
mov
mov
add
fdivrp
popf
dec
jmp
dec
sub
movsl
fcmovb
jno
push
ljmp
jle
arpl
mov
enter
les
xchg
push
sub
dec
xchg
std
push
ds
pushf
cld
call
inc
pop
pop
dec
adc
mov
insb
xlat
popa
jl
ss
repnz
fisubs
pushf
jle
shll
int
int
xorl
lcall
push
sbb
std
btr
pop
push
subl
ret
pop
mov
std
sbb
mov
leave
push
fisttpl
jne
js
ror
ret
cmc
imul
or
roll
pop
or
inc
mov
cmc
push
and
cmp
mov
sub
xchg
sub
inc
mov
xlat
mov
jl
negl
pusha
filds
cmp
push
lods
test
jmp
insl
jnp
dec
mov
movsl
fisubrl
jecxz
mov
xchg
into
sar
sbb
stc
or
sti
mov
pop
aas
int3
adc
push
mov
cmp
cmpsb
lock
jns
stc
lods
psrld
jo
or
sbb
mov
cmp
fnstenv
mov
cmp
sbb
into
insb
dec
aad
mov
xchg
inc
sub
inc
add
mov
test
je
sbb
fwait
movsl
sar
std
dec
inc
add
jae
push
sub
das
or
repz
dec
movsl
in
pop
or
fwait
dec
and
jge
push
es
cs
jp
lret
mov
enter
mov
pusha
push
sbb
mov
gs
cmp
jbe
in
mov
mov
push
or
add
daa
je
dec
lret
bound
lret
repz
fimuls
pop
sub
sbb
fs
cmc
xchg
int
jmp
mov
jbe
shrb
mov
sbb
sbb
cmpsb
addr16
cmp
sbb
scas
pop
movsl
fcmovnb
jno
cli
jge
out
xchg
jg
push
fstpt
add
iret
cltd
xchg
sbb
fsubrs
mov
js
cwtl
add
popf
adc
adc
stos
xor
mov
sbb
jl
shlb
test
add
dec
adc
pop
leave
and
loopne
xchg
xchg
cmc
cmpsl
xchg
cmp
stc
mov
loop
ffreep
aam
mov
lret
mov
sbb
lret
ror
pop
jno
insl
pop
lret
jbe
sbb
shll
jns
sbb
enter
ja
mov
int3
int
sub
jl
add
cmp
in
stc
js
icebp
jge
outsb
jle
hlt
lea
rclb
call
js
jbe
add
dec
cwtl
fucomip
not
out
das
mov
scas
jge
fimull
jno
insl
or
cmp
cmp
mov
mov
sub
stc
and
imul
xchg
ds
jae
jb
cmp
ja
jmp
pop
jmp
push
call
jmp
add
xchg
inc
push
cmp
lock
sahf
dec
into
jmp
push
ljmp
addr16
push
mov
jno
add
aas
inc
jne
push
insb
fcmovnb
mov
sub
shll
mov
or
add
xor
mov
inc
repnz
mov
sub
inc
pop
movl
push
insl
xor
sbb
inc
cmp
pop
pop
xlat
sub
stos
addl
cmpsb
dec
imul
xchg
hlt
xchg
in
jecxz
adc
push
jnp
dec
cmpl
mov
gs
fmuls
shl
sbb
fbstp
negl
mov
push
mov
push
mov
sbb
adc
es
mov
adc
add
push
daa
pop
cmp
test
push
mov
ljmp
and
ret
xor
add
or
mov
shlb
pop
mov
xchg
lods
mov
mov
fs
popa
pop
nop
push
iret
dec
aam
mov
pushf
out
add
in
mov
jmp
xor
jne
imul
fcmovnb
jne
aad
stos
negl
inc
cli
cmc
fdiv
ljmp
pop
mov
pop
cmpsb
shrl
xor
jcxz
push
fdivrl
popf
cmp
mov
inc
add
sbb
jge
mov
lahf
fcoml
neg
push
shrb
adc
mov
lock
push
scas
jmp
cmp
mov
xchg
daa
dec
push
xchg
adc
adcb
imul
pop
jmp
stc
jns
sarb
pop
fcomps
pop
mov
ljmp
ljmp
dec
sub
insl
test
movsl
mov
mov
cmp
push
in
sbbb
inc
iret
dec
mov
hlt
jae
jo
push
add
xchg
add
outsl
mov
pop
sbb
lret
push
pop
mov
cmpsb
movsl
insb
jg
add
lret
shll
stc
fcompl
adc
rorb
popa
ss
ret
xor
lods
push
and
inc
add
insb
jns
nop
sub
add
sarl
jb
sub
sti
jnp
xchg
push
leave
fwait
and
push
push
cli
stos
out
mov
arpl
aaa
ljmp
loopne
lock
popa
dec
inc
and
adcl
and
jbe
mov
iret
jecxz
aas
bound
sbb
lds
test
inc
lds
sbb
sub
push
inc
fsubr
and
add
cmp
inc
ljmp
cmc
mov
cmp
push
out
cld
ds
fcomip
push
pop
cld
es
out
jle
ret
pop
shll
mov
insb
fcmovnb
mov
aaa
sub
sub
out
push
insl
pop
outsl
mov
scas
jle
sbb
push
push
sub
cli
sbb
lcall
add
cmp
popa
sbb
pop
cltd
add
mov
or
stos
add
mov
pop
test
xor
cmpsb
mov
shr
and
shlb
push
push
xchg
adc
inc
and
sub
cmp
test
loop
push
pop
iret
lds
cmp
test
lret
cmpsl
add
mov
adc
enter
jge
frstor
inc
and
jb
push
and
scas
aam
pop
addl
les
push
push
jae
add
pop
fimull
fs
dec
cmc
aad
test
lea
mov
mov
dec
insl
neg
les
rol
mov
aad
outsb
cmp
testb
mov
xchg
push
test
push
data16
int
stc
repnz
mov
pusha
cli
pop
mov
pop
clc
sub
bnd
pop
and
mov
fnsave
rcll
mov
mov
xlat
fbld
icebp
jb
rcl
add
incl
lock
jbe
ficoms
inc
mov
or
xchg
pop
cmpsl
sbb
jmp
pop
inc
addb
xchg
lea
adc
inc
popa
inc
fcomip
icebp
jp
lret
inc
les
insl
js
push
lahf
jo
test
mov
xor
cmp
mov
xor
inc
push
xchg
js
das
out
out
adc
ja
mov
subl
outsb
pop
or
je
into
cli
push
sbb
mov
xlat
jecxz
lea
dec
mov
stc
sub
in
inc
sti
fwait
cmpsb
movsl
cmp
xchg
inc
and
cli
lcall
outsb
mov
call
pop
jno
ss
sbb
sti
add
xchg
fsubrl
mov
push
adc
cmp
pop
test
fwait
push
movsb
pop
and
lcall
idivl
and
xchg
inc
nop
test
in
sahf
rclb
sbb
push
cmpsb
or
inc
adc
or
inc
inc
or
add
stos
inc
pop
jne
std
add
xchg
add
jb
movl
pop
or
or
popa
fists
inc
sub
xlat
shl
inc
repnz
add
xlat
mov
out
insl
xor
sub
push
pop
sbb
mov
ret
and
shlb
xchg
gs
xor
movsl
icebp
jl
add
mov
mov
and
je
cmp
add
push
fldt
mov
mov
sub
push
mov
or
cmp
lret
shlb
mov
popa
adc
mov
sbb
and
sbb
dec
lea
jl
aas
notb
movsb
xchg
jmp
dec
add
aas
outsl
fstps
out
pop
call
cmp
cmc
push
mov
int
cmpsl
jge
pop
jp
dec
or
imul
and
and
and
sub
jo
lods
shl
jge
inc
inc
sub
xor
add
cmc
test
cltd
sahf
sbb
sti
js
test
mov
or
mov
or
ret
jg
jne
subb
jl
dec
mov
sub
adc
sbb
fsubl
adc
das
pop
int3
mov
xor
arpl
inc
jle
cwtl
icebp
cmp
ljmp
xchg
fiaddl
aas
ja
mov
imul
jge
ret
imul
mov
fnstenv
not
mov
cmpsl
xchg
dec
out
sub
push
push
or
in
dec
mov
jnp
jb
mov
loope
push
sti
and
test
stos
lods
and
sub
andl
jo
mov
jmp
pop
movsl
push
push
mov
or
dec
aas
imul
sub
sub
call
mov
jg
rolb
xchg
addb
stc
inc
or
push
add
or
xlat
xor
mov
push
test
fwait
lock
sahf
lret
test
addr16
cmp
aaa
lahf
add
and
xchg
inc
pop
or
popa
jl
bound
and
movsb
inc
js
mov
sahf
leave
pop
pop
mov
gs
aaa
add
inc
cmp
pop
sbb
stc
ja
adc
sub
pop
sub
enter
rcl
mov
ds
dec
rcll
rol
mov
insl
fstps
out
jne
sahf
cmp
in
sub
xchg
dec
fcoml
lods
add
and
dec
inc
inc
push
lahf
and
clc
jmp
cmp
or
daa
mov
inc
gs
loopne
sub
jns
xchg
xchg
into
popf
fdivs
add
loopne
jecxz
dec
test
cmp
fcomip
scas
mov
test
pushf
jg
sbbl
insl
add
lahf
sti
sbb
fstl
sbb
xchg
and
or
inc
add
or
and
mov
addl
mov
xlat
adc
xchg
adc
lock
loop
lds
sub
lret
xorb
in
sbb
xchg
pop
movsl
dec
inc
inc
mov
dec
mov
loope
mov
shll
aas
jp
sti
pop
jecxz
pop
daa
fnstcw
mov
xchg
test
movsl
lret
test
fdivp
sub
xchg
imul
xor
or
arpl
outsl
fsts
out
jno
pop
push
inc
mov
inc
xchg
sub
hlt
in
xor
out
test
sbbb
icebp
loopne
pop
in
or
push
subb
arpl
adc
or
lret
into
mov
test
add
mov
loopne
sub
leave
push
outsb
xor
iret
cli
call
mov
xor
int3
int3
adc
cwtl
mov
data16
filds
xchg
xor
adc
or
push
call
mov
rclb
or
and
sub
mov
jle
andb
xlat
inc
sub
lock
mov
dec
and
jmp
pop
aas
dec
pop
outsl
jle
daa
sbb
clc
jbe
fwait
ljmp
leave
repnz
jmp
loopne
lds
cmp
push
and
push
js,pt
lret
jecxz
sub
jnp
pop
xchg
subl
and
adc
pusha
imul
inc
adc
mov
sarw
xor
lods
arpl
or
adc
fmuls
push
mov
dec
push
dec
add
iret
fsubrs
add
mov
push
shll
mov
and
and
jno
adc
xchg
bound
sub
mov
mov
das
adc
mov
inc
adc
xor
fsubs
mov
or
sbb
sbb
out
pop
mov
repz
mov
adc
push
rcrl
cwtl
aam
push
mov
fs
and
dec
mov
call
sbb
jb
fmull
std
aaa
loope
mov
pop
cmp
dec
jle
lret
ret
sub
aad
cmpsb
gs
aad
lods
in
push
popa
push
or
rclb
ficomps
repz
cmp
push
stc
cli
and
or
bound
inc
popa
mov
add
insl
jcxz
push
fdivr
or
imul
ja
loopne
insl
cmp
pop
xchg
enter
lods
and
or
adc
mov
adc
jg
mov
lea
scas
adc
mov
in
daa
call
mov
dec
cmp
sbb
dec
xchg
addr16
mov
in
notl
adc
sub
add
lods
and
insl
fwait
sbb
dec
lock
lahf
cmp
xor
lock
or
jle
jns
mov
les
and
loopne
fs
insl
fdivs
sbb
ret
add
pop
inc
mov
xchg
dec
adc
mov
in
push
jmp
mov
cltd
mov
mov
test
test
cli
cli
xor
cmp
ljmp
or
mov
daa
xchg
and
jp
fmul
mov
adc
and
push
sub
dec
in
lcall
ss
sub
inc
fs
insb
mov
or
fwait
add
loop
push
gs
scas
mov
lret
outsl
mov
fsts
mov
or
std
popa
mov
fnstsw
xchg
insl
xchg
and
sub
test
lret
inc
or
jle
lds
mov
pop
mov
xchg
aam
sbb
sahf
lcall
inc
into
stos
xchg
pop
call
jnp
mov
jp
notb
cmpsb
xor
jno
lods
cmpl
jne
add
add
mov
ljmp
xor
cltd
dec
rol
xor
cmp
xchg
lods
mov
aaa
or
hlt
mov
das
arpl
sbb
sub
pop
mov
fcompl
jl
inc
testb
push
ja
pop
test
adc
ret
jge
ss
or
loopne
flds
cwtl
or
shl
pop
outsl
push
andnps
pop
insl
and
push
dec
push
sahf
jl
out
cltd
push
mov
inc
push
or
sbb
mov
cwtl
jb
push
aas
jge
add
push
push
jns
pop
mov
mov
fsubrs
aas
add
call
ret
mov
loopne
aad
out
mov
pusha
mov
fisubl
rcrl
push
test
cmc
out
mov
mov
xor
hlt
cmpsb
imul
jbe
xchg
sbb
xor
cmovl
sub
pop
mov
insl
and
xchg
mov
scas
addl
xchg
or
cmpl
rcll
xor
in
movsb
les
loop
fnsave
adc
pop
jg
or
out
popa
push
and
fdivrl
or
jle
mov
lret
outsb
xchg
cmpsb
arpl
dec
lea
test
mov
mov
pop
xchg
mov
stos
mov
sub
jle
and
xchg
add
inc
sub
jo
lods
dec
cs
sti
xor
orb
movsl
push
mov
push
sahf
icebp
movsl
and
aam
sub
push
sbb
xor
subb
pop
lds
sti
cmpsl
inc
inc
and
sahf
mov
adc
fs
pusha
repnz
and
sub
imul
enter
add
push
and
and
jecxz
lds
add
sub
popa
sbb
shlb
push
insl
lods
std
mov
cmp
inc
nop
outsb
mov
icebp
sahf
jg
dec
mov
xor
xorb
mov
scas
xor
mov
insb
and
mov
push
xor
ret
xchg
mov
fidivl
insl
adc
adc
add
lock
xchg
push
stos
xor
or
push
lds
xchg
dec
data16
dec
mov
add
inc
int3
faddl
xchg
inc
xor
push
addb
and
or
int3
inc
dec
push
xchg
icebp
gs
xchg
inc
cwtl
in
rep
movsb
insl
mov
inc
jns
shrl
repz
mov
std
mov
dec
mov
insl
xor
xor
aas
shrb
xor
cld
add
xor
cld
pop
cmp
add
in
jbe
push
aam
nop
adc
mov
pop
cmp
lea
mov
scas
or
sub
loop
pop
mov
add
inc
stc
or
push
or
popf
push
inc
mov
mov
ss
xor
mov
leave
xorb
inc
add
in
mov
cltd
or
cltd
inc
add
mov
push
enter
ds
jp
sub
adc
leave
in
adc
inc
ja
data16
add
xchg
outsb
lea
imul
lahf
clc
ljmp
insl
inc
fimuls
inc
sub
push
ds
fdivrl
or
mov
mov
add
push
cmpsb
inc
sbb
add
shrl
cld
in
or
push
xor
mov
stos
cmc
sub
jp
mov
mov
fiaddl
or
inc
or
xor
push
fs
aam
pusha
out
scas
or
rsqrtps
aas
pusha
jmp
cmpsb
pusha
xchg
dec
aas
mov
arpl
sub
mov
jmp
cltd
jnp
xor
jle
and
pop
add
das
mov
inc
mov
lret
inc
adc
fcomip
xchg
push
jmp
movsl
pop
pop
cmc
cmp
sahf
dec
pop
test
es
dec
pop
jno
push
lds
and
xchg
xchg
xchg
or
xchg
subl
scas
lods
and
daa
jbe
insl
inc
add
add
mov
adc
jecxz
add
iret
sti
add
in
pushl
movsb
mov
nop
jnp
sub
sarb
mov
cmp
cmp
in
jnp
scas
test
and
das
sarl
jnp
sub
mov
and
sub
cmp
jno
push
shll
pop
xchg
mov
cmp
aam
push
outsl
inc
mov
repnz
mov
xchg
or
cwtl
and
cld
sub
xlat
and
int3
popf
mov
dec
add
test
cwtl
dec
and
notb
cwtl
jg
jmp
into
gs
adc
popa
call
cmp
mov
sub
loop
adc
pushl
push
insb
test
and
jns
adc
repnz
rcr
mov
sub
test
jnp
inc
pop
ret
out
mov
sub
adcb
cmc
into
xchg
lcall
sbb
sbb
cmp
adc
notb
or
jmp
jmp
jb
aas
sub
inc
nop
dec
adc
subl
fistps
xor
mov
or
adc
ss
push
jmp
pop
dec
insb
pop
leave
in
insl
xorb
pop
cmp
fdiv
jns
aas
mov
push
dec
pop
jmp
mov
ficoms
shr
bound
jge
jg
hlt
loopne
push
enter
andl
mov
rorl
xchg
pop
xchg
inc
add
iret
stc
fiaddl
fmuls
stos
cmp
addl
popa
cmp
scas
pop
add
push
sbb
inc
in
sub
jae
std
mov
mulb
mov
arpl
xor
dec
xor
sub
or
arpl
or
lock
mov
xchg
dec
cwtl
jmp
push
cmpsb
sub
cmpsl
add
push
xchg
scas
incb
mov
ds
or
push
or
dec
fdivrp
adc
pop
out
push
cmp
mov
dec
adc
inc
mov
lret
stos
insb
es
pop
mov
scas
cwtl
add
sub
mov
fisttpll
insl
into
or
jg
in
mov
sub
or
test
pop
mov
test
and
lods
fcompl
cmp
hlt
shr
cmpsl
or
xor
fdiv
and
popf
int
movsb
cld
pop
and
mov
jp
repz
sub
test
out
mov
cmc
divl
mov
mov
test
fdivrl
cmp
and
mov
out
pushf
andb
mov
jno
jne
or
mov
imul
cmp
fdivs
cmpsb
add
sbb
leave
test
in
outsl
stc
pop
push
dec
ret
xor
mov
repnz
iret
int
das
or
dec
mov
mov
lods
mov
sub
call
pop
mov
int3
sahf
aad
pop
jmp
mov
dec
movsb
cmpl
cmp
pop
add
test
lods
adc
mov
xor
cltd
pop
jge
lret
jmp
std
mov
subb
and
and
rorb
nop
stc
in
xchg
loopne
cltd
repnz
and
and
imul
movsl
sti
aad
or
lock
jno
jae
iret
jo
inc
add
inc
inc
push
nop
mov
ljmp
and
dec
sarl
or
rcll
popa
sbb
pop
roll
stos
sahf
cmp
mov
addr16
out
jnp
push
ljmp
xchg
movsl
out
mov
push
notb
hlt
repz
mov
lea
addr16
sub
pusha
fnsave
add
imul
jl
mov
cmp
lahf
cli
pop
inc
xor
ds
and
pusha
mov
xchg
mov
fstps
jne
lea
scas
sbb
xor
negb
loope
fldt
repz
pop
push
or
sbb
xor
ret
pop
pop
popfw
adc
inc
test
aaa
repnz
xor
subl
fidivs
addl
shll
add
insb
aas
mov
push
mov
xchg
sub
out
inc
lods
lods
mov
scas
stos
cmpb
mov
mov
mov
les
mov
fcoms
push
scas
inc
mov
pop
xchg
arpl
insb
sti
cmp
je
test
pop
sbb
add
push
jl
clc
mov
fsubl
das
pushf
sahf
flds
inc
jl
inc
mov
adc
add
jge
mov
repz
fdivl
mov
jns
pop
orb
es
nop
jg
aam
mov
outsl
stos
iret
stc
push
mov
mov
xor
adc
jno
lock
push
pop
pop
add
and
clc
in
stc
xchg
pop
fstpt
jp
mov
test
mov
js
sbb
mov
shrl
cltd
popf
cmp
repnz
mov
jge,pt
xor
sbb
xchg
and
mov
insl
pop
popf
push
pop
mov
cmpsl
shrl
xchg
push
inc
pop
xor
fsubl
sbb
ret
dec
subl
in
push
mov
lret
mov
pushf
mov
dec
push
sarb
fwait
lods
lcall
rcll
setl
std
hlt
and
nop
sub
cmp
push
test
dec
mov
and
fimuls
pop
lea
ret
jg
repnz
dec
sub
xor
pusha
out
js
dec
clc
jmp
loope
mov
mov
inc
inc
xor
imul
repz
sub
pusha
or
cmp
scas
lds
xchg
jl
mov
dec
cmp
nop
data16
xor
sbb
cwtl
imul
and
shlb
ljmp
adc
jg
mov
js
mov
and
adc
mov
adc
ljmp
ret
jno
pop
sub
pop
adc
sbb
in
orl
leave
xchg
aaa
jg
or
movsl
or
inc
sti
daa
cmp
inc
add
mov
jl
mov
xorb
mov
aas
pop
mov
es
loope
lock
repnz
mov
add
inc
jg
dec
pushf
jle
sbb
xchg
aad
mov
decb
inc
ds
mov
and
js
dec
jae
enter
ret
mov
and
mov
xor
sbb
inc
fists
dec
pop
lret
adc
sti
push
or
sarb
sahf
xchg
mov
nop
mov
test
iret
je
leave
fmull
add
in
jbe
add
xor
xor
idiv
test
jg
sbb
pop
sub
imul
cld
in
mov
lcall
push
or
pop
aas
jno
jmp
ret
push
je
insl
sahf
jg
test
sub
or
pop
sub
sub
pop
pop
adc
add
mov
jb
cltd
fwait
add
test
xor
adc
shrl
and
or
aas
gs
jle
mov
imul
mov
mov
fwait
nop
pop
inc
mov
push
ret
xchg
imul
xor
pop
add
ret
in
jmp
ds
inc
sub
stc
xchg
dec
jg
push
out
jno
and
in
sar
scas
jg
jae
dec
lods
call
in
fmuls
xchg
loope
pusha
xlat
jle
dec
out
sti
scas
inc
cmpsb
dec
addr16
jmp
cmpsb
jp
and
xor
and
pop
mov
cli
sbb
xchg
int3
xor
inc
pusha
mov
mov
fnstcw
and
mov
mov
jno
ret
pushw
stos
rorb
lahf
and
adc
loopne
aas
incl
mov
inc
add
jno
fdivrp
pop
mov
dec
sub
movnti
test
out
and
ret
dec
or
sahf
xchg
insl
sbb
movb
lahf
pop
inc
inc
cmpsb
push
int
sub
aam
enter
cmp
mov
outsb
xchg
or
adc
jbe
mov
repz
data16
lret
in
test
pop
xchg
stos
hlt
pop
pop
sub
out
imul
in
test
jge
ds
xor
xchg
mov
cwtl
add
into
popf
jecxz
pop
pop
aad
fnstenv
mov
pop
jmp
or
pushf
and
sahf
add
fldcw
mov
pop
pop
loopne
popf
jo
add
fwait
or
insb
ja,pn
int3
pop
mov
lds
into
sbb
mov
jns
mov
adc
push
repz
movsb
pop
dec
sar
idivl
dec
cmpsl
push
inc
add
inc
sahf
imul
out
and
shll
cmp
mov
idivl
mov
dec
scas
mov
xor
push
cmc
jmp
nop
push
xor
xor
roll
mov
sub
inc
les
sbb
dec
jl
loopne
addr16
mov
cmp
out
push
sub
jnp
mov
shl
sub
sti
push
pop
jge
xchg
lods
repz
jb
push
hlt
leave
jnp
xchg
cld
dec
jle
int3
jns
xor
xor
push
add
das
ds
sar
adc
add
ja
mov
cmp
jnp
hlt
arpl
xlat
cmpsl
pop
inc
jle
cmp
ds
mov
loope
or
popf
cmp
hlt
arpl
outsb
sti
loope
cltd
add
add
in
stos
nop
shrl
sbb
data16
paddd
jecxz
js
seta
nop
in
and
lahf
and
cli
jecxz
das
jl
jns
and
jmp
pop
jb
add
gs
arpl
ja
xchg
jp
pop
add
cwtl
jle
fldenv
out
add
icebp
aaa
and
loopne
mov
pop
ds
mov
xchg
cmc
jp
out
jp
addr16
mov
dec
and
adc
cwtl
clc
shlw
mov
push
clc
mov
daa
dec
aas
std
popl
js
jmp
cmp
and
xor
jnp
mov
pop
outsb
dec
aaa
sub
or
jo
add
mov
cld
push
call
xor
std
xchg
lds
bound
repz
mov
adc
push
inc
mov
iret
mov
cltd
es
jns
cld
stos
xchg
add
js
cmc
xlat
mov
pop
pop
jne
pop
inc
cmc
inc
filds
gs
lahf
icebp
add
inc
leave
jbe
int3
sbbb
mov
fistps
or
xor
cli
fcomps
or
repnz
push
add
pushf
mov
or
int
jmp
inc
repz
psubsw
cmpb
outsl
imul
movsl
or
add
sub
dec
scas
jmp
add
mov
rorb
cmc
popf
dec
push
lahf
mov
shll
mov
pop
inc
sbb
mov
aas
repnz
xorb
cmp
adcl
sbb
add
xchg
ret
cwtl
aas
paddsw
loopne
xchg
leave
pusha
cmp
loope
ret
das
jno
negb
cmp
jnp
clc
xchg
jg
fldt
mov
dec
ljmp
mov
xor
pmulhrsw
push
xchg
cmpsl
loop
xor
jmp
inc
lock
ds
jbe
scas
lods
fs
jge
fstpl
aaa
push
mov
dec
pop
dec
test
adc
iret
int
jns
jp
mov
pop
xchg
das
imul
int
cld
adc
mov
pop
outsb
cmpsb
inc
orb
popf
neg
int
pop
mov
xchg
push
aad
and
push
imul
clc
lcall
ss
add
pop
lret
mov
push
push
lret
cs
in
mov
ret
lret
fstpl
repz
cmp
fmull
mov
imulb
mov
decb
sar
ret
cwtl
aas
xchg
pop
out
xchg
flds
xor
xor
hlt
mov
and
out
dec
ds
dec
notrack
lret
mov
mov
or
iret
pushf
mov
pop
mov
and
addr16
sub
jbe
mov
imul
xchg
das
jmp
add
inc
fdiv
inc
daa
dec
aas
std
orl
mov
xor
push
jle
out
mov
test
lods
jmp
mov
jnp
je
je
sbb
xchg
ds
fadd
fdivrl
cli
adc
add
pushf
test
inc
mov
and
into
jnp
outsl
mov
push
out
jge
not
ss
jno
ret
push
sub
aam
in
roll
lret
addr16
sbb
pop
push
inc
mov
sbb
lcall
sub
jg
and
dec
scas
out
mov
aas
and
dec
loopne
stos
lods
je
mov
jae
push
out
cmp
movsl
ss
or
insl
fcomip
adc
shll
int
cltd
fldlg2
mov
leave
mov
mov
aaa
adc
mov
mov
loopne
jg
aas
jb
mov
adc
icebp
jl
test
jnp
jp
cs
out
js
pop
loopne
js
push
call
jl
sub
dec
aas
xchg
ror
lds
int
mov
mov
lret
insl
arpl
push
cmpb
int
xor
lret
pop
test
sub
mov
adc
cs
pushf
push
enter
sti
test
inc
dec
or
dec
test
sub
hlt
daa
lahf
cli
and
aaa
aas
cltd
mov
cmp
mov
out
cmp
ret
fldcw
sahf
inc
sbbl
outsb
jbe
into
xchg
movsl
sub
sbb
add
sbb
and
push
push
sbb
pop
pop
les
cmp
std
sub
jnp
push
push
ret
rclb
add
es
sbb
push
sahf
xlat
daa
hlt
jge
aad
inc
mov
movsb
jb
mov
test
mov
lea
iret
mov
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
or
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
ds
ja
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
mov
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
add
inc
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
out
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
aaa
movsb
add
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
and
gs
ret
pop
fistl
push
xor
lods
inc
pusha
dec
jg
cmpsb
stos
dec
and
test
and
dec
mov
mov
flds
xchg
mov
jge
sti
fidivrs
outsb
sub
movsl
int
dec
jp
xchg
xchg
data16
int3
inc
sbb
mov
adc
and
sti
fdivp
mov
or
xor
adc
loopne
jge
std
push
and
mov
mov
mov
cmpsb
mov
fucomi
push
mov
or
cmpsl
and
or
inc
adc
mov
cltd
mov
mov
inc
int3
cmp
cmp
jnp
mov
mov
jmp
jg
xchg
in
je
inc
sti
pop
loopne
sub
jecxz
dec
in
jl
cmp
jne
gs
mov
or
xchg
cwtl
add
pop
or
xorb
xchg
sar
mov
es
int3
out
xchg
cmp
dec
pop
jns
pop
or
lods
xchg
rcr
xchg
leave
into
push
hlt
fildl
xor
cmp
mul
scas
pop
xor
fisttpll
sbb
jnp
and
arpl
hlt
add
ja
xlat
pop
and
mov
jo
cmp
lods
or
mov
insl
jae
xchg
xor
and
repz
shlb
jno
enter
in
pop
std
ret
mov
rcrb
enter
cli
fnsetpm(287
and
shrl
pusha
adc
clc
sub
pop
cwtl
ds
push
adcl
xlat
repnz
les
xor
inc
inc
or
sub
push
sub
das
jg
inc
pop
sub
pop
cwtl
pusha
push
shrb
mov
add
and
add
mov
push
loopne
push
movsb
in
fidivs
jae
ja
imull
mov
clc
scas
pmullw
and
mov
in
mov
jae
test
xchg
push
jg
popl
call
dec
fld
mov
inc
cmp
sti
push
lock
jb
sbbl
mov
or
mov
std
data16
fs
mov
or
popa
ficoms
xor
movl
out
inc
sub
adc
subb
fisttpl
and
js
cwtl
dec
in
add
arpl
lahf
jns
inc
mov
push
add
add
mov
mov
shr
sub
sub
dec
push
stc
mov
into
leave
fistpll
cli
adc
xlat
lods
add
cmc
mov
aas
bound
push
jne
js
pop
xchg
jmp
or
inc
push
dec
cltd
mov
je
mov
pusha
push
lret
out
mov
xor
cld
in
xchg
push
sub
je
lret
stc
loop
xor
fldt
lock
mov
out
imul
jnp
pop
push
or
ja
or
inc
out
xchg
inc
imul
mov
insl
stos
lods
dec
push
lret
sti
inc
dec
adc
jecxz
jg
ret
call
movsb
or
gs
aas
jmp
shll
mov
pop
mov
cmp
mov
sar
nop
lock
pushf
cld
std
jecxz
xchg
adc
fistps
rorb
xchg
mov
dec
int3
sbb
push
gs
fnstenv
and
push
mov
xor
cmp
das
sub
xchg
hlt
xchg
pop
cld
and
rolb
loope
cmp
decl
insl
jp
out
mov
dec
adc
pusha
rcrb
test
lret
jl
fsubrp
iret
or
loop
inc
data16
addr16
insb
sbb
fwait
mov
out
and
das
add
cld
fmull
add
clc
mov
iret
mov
ret
cmpsl
fidivs
mov
push
lcall
mov
enter
popa
inc
sbb
xor
lcall
cmp
xchg
repz
in
jge
shlb
add
sbb
inc
orl
rcr
and
xor
scas
xor
inc
mov
sbb
in
ret
xchg
and
popf
outsl
mov
popa
jns
cld
cld
and
and
outsl
incb
cmp
cmp
jbe
dec
lahf
xor
ljmp
test
or
pushf
popa
cli
clc
aaa
ret
cwtl
fs
jo
fstpt
aaa
xchg
xchg
stc
lock
fidivrl
or
repnz
add
add
xchg
leave
push
add
ror
mov
lret
in
ss
bnd
add
jg
lcall
inc
fidivs
lahf
xchg
push
int
mov
cmp
sti
add
mov
push
xchg
pop
scas
mov
jb
repz
dec
clc
xlat
inc
loop
jmp
add
mov
sbb
push
pop
pop
test
jge
sub
mov
in
ljmp
popa
test
add
and
dec
mov
mov
dec
pop
and
sbb
fcompl
repnz
in
movsl
movsb
mov
cld
bound
daa
mov
std
jbe
cmpsb
cmpsb
repnz
mov
in
pop
popa
xor
fwait
xor
pop
andb
stc
jns
pop
lret
jmp
xchg
ret
sbb
aam
mov
dec
std
lcall
repz
cli
jle
adc
in
std
cmpsl
mov
pop
jg
or
into
and
jecxz
mov
out
std
orl
sbb
loope
test
out
jbe
xor
and
dec
subb
mov
pop
push
addb
hlt
add
roll
test
mov
inc
ret
pushf
lock
mov
xchg
mov
repnz
sbb
adc
rorb
andl
enter
fs
and
push
xor
ret
cwtl
jle
xor
or
in
pusha
dec
cmpl
mov
xchg
lock
arpl
xchg
add
xor
orl
sub
pop
mov
arpl
shrb
push
cld
mov
jb
outsb
iret
insb
das
gs
add
pop
cmp
and
dec
cltd
repz
in
ss
mov
push
adc
jge
jne
cltd
xchg
jge
sub
incl
out
jnp
das
and
add
lcall
out
dec
mov
jnp
dec
movsl
stc
fwait
loopne
xorl
test
nop
add
test
push
ljmp
aam
inc
push
sbb
or
aas
cmp
pop
repz
mov
pop
popf
rcll
sub
cmp
add
add
adc
mov
sub
mov
or
xchg
push
mov
adc
mov
in
or
add
aas
shl
mov
inc
mov
pop
fisubs
jne
in
mov
sahf
repz
cmp
fcomps
pop
ss
call
sbb
ret
cld
lods
mov
ds
xchg
mov
inc
xor
clc
jge
sbb
loop
cltd
jl
xchg
aas
std
orl
orb
clc
lds
xor
ret
inc
pop
push
test
jo
sbb
imul
mov
mov
xor
das
mov
pop
and
fwait
cmp
cmp
sub
dec
sub
fidivs
scas
jno
scas
add
cmp
cmp
sub
mov
pushf
mov
jne
sbb
mov
mov
cs
insl
shld
adc
ret
ret
jo
nop
jge
loopne
and
jns
imul
xor
xchg
pop
pop
ss
cwtl
cmp
in
push
lea
enter
pop
xchg
out
andl
fs
inc
xchg
loope
ss
mov
lcall
out
or
cltd
jecxz
push
fisttpl
push
inc
xor
cmc
dec
jge
mov
aam
jg
mov
jl
xor
sub
or
lahf
mul
or
push
mov
test
test
xor
lods
icebp
push
test
in
in
arpl
cmpb
add
or
sbb
pop
sbb
add
cmpsl
mov
inc
dec
ds
aas
push
add
repz
in
jo
inc
jo
shrb
pop
cmp
mov
movsl
outsl
lods
aam
cmovo
inc
jp
pop
dec
mov
mov
push
icebp
inc
notb
add
mov
icebp
rclb
rep
pop
sbb
shrl
mov
push
pop
fists
inc
add
in
pop
inc
add
jne
dec
cmp
pop
push
inc
enter
push
xor
scas
cmp
lcall
testl
gs
pop
jmp
fisubrs
movb
sub
fisttpll
aas
hlt
xchg
or
pop
test
bound
cmc
sbb
mov
pop
arpl
xor
add
xor
or
fs
cmp
sub
pop
rcrl
and
jecxz
lods
repnz
pop
or
test
mov
or
add
inc
and
jae
or
div
pusha
mov
rcll
inc
inc
add
pop
cmp
mov
cmc
mov
jge
scas
hlt
jp
rolb
sub
mov
data16
push
data16
add
ja
jp
cmp
xor
pop
hlt
or
cld
add
daa
xchg
sbb
xlat
mov
call
sbb
pop
in
sub
sti
xchg
xchg
adc
fisubrl
cmpsl
push
sar
mov
jp
test
fiadds
cmpsl
out
and
test
pusha
aam
lods
cmpsb
xorl
test
test
sub
pushf
add
adc
mov
sub
mov
adc
es
cmpb
addr16
dec
out
lcall
sbb
sbb
paddusb
aam
mov
xor
jl
mov
mov
mov
jp
mov
mov
aad
or
add
push
or
dec
mov
ds
das
lahf
lods
icebp
pop
xlat
jbe
cmp
repnz
orb
jl
jecxz
int3
stos
pop
std
ljmp
cmp
dec
xchg
xchg
push
cld
adc
loope
cmc
push
out
and
lcall
andl
xor
adc
test
call
jge
sbb
das
aad
mov
add
insl
mov
scas
xchg
pop
nop
mov
dec
fsubs
push
mov
out
push
out
incb
ret
fcomp
add
andl
lahf
sub
sarb
lea
push
add
pop
sti
add
and
or
aas
xchg
sbb
and
hlt
inc
lahf
outsl
iret
or
clc
das
aas
pop
aaa
or
out
out
ja
dec
ror
add
or
mov
repz
and
punpcklbw
in
jg
aas
push
sbb
rorb
adc
adc
adc
or
rorb
pusha
outsl
lret
out
pop
cmpsb
loope
cld
aad
test
adc
cmp
xchg
jno,pn
nop
scas
aas
icebp
add
cmpsb
cmpsl
xlat
push
dec
mov
es
mov
xor
je
in
push
add
pop
mov
lods
sub
and
adc
mov
repz
inc
ret
cld
xor
in
loopne
mov
test
lcall
repz
or
cmpsb
int
mov
rol
push
xchg
jge
mov
mov
jno
pop
cmp
or
imul
dec
dec
mov
mov
cwtl
fildl
test
and
or
call
icebp
or
icebp
dec
popf
repnz
jmp
add
lea
loopne
std
jo
add
jns
outsb
mov
mull
jbe
pop
add
int3
jnp
add
add
push
add
sbb
mov
xchg
cmp
addl
adc
xchg
inc
ds
pop
cmp
jl
pushf
pop
cld
loop
jne
push
push
inc
add
mov
cmp
xchg
xchg
enter
push
nop
sbb
roll
and
add
test
sahf
push
pop
cltd
daa
xchg
add
icebp
jg
mov
in
daa
mov
cmp
aas
jg
gs
insb
hlt
cmpsl
mov
inc
outsl
mov
divb
ljmp
or
xchg
arpl
cltd
mov
lahf
add
inc
xchg
inc
addb
mov
lds
or
pop
cld
aas
mov
pop
mov
addb
inc
or
and
dec
sti
sbb
xchg
sbb
adc
es
cmp
mov
jbe
pop
dec
popa
inc
mov
pop
or
jo
daa
cmc
rcrl
adc
stc
sub
repnz
push
iret
loopne
mov
pop
aaa
ja
jl
or
sbb
hlt
mov
movsb
xlat
xchg
addr16
popa
push
outsl
pop
fs
xor
frstor
adc
or
std
leave
cmpsl
daa
mov
ja
cli
imul
cmpsl
cld
mov
sbb
jl
in
sbb
pop
jecxz
pop
jmp
add
or
adc
dec
orb
sub
sbb
mov
ljmp
repnz
or
push
js
shlb
sahf
inc
add
lock
insb
andb
divps
into
lods
repnz
mov
leave
inc
sub
inc
insl
add
xor
inc
mov
ljmp
int3
sub
into
cmp
sti
jp
test
adc
dec
or
sbb
loop
fprem
and
fs
test
pop
push
push
pause
test
push
scas
jb
es
or
and
loop
pop
add
orb
pop
out
lret
leave
ret
cmp
and
test
dec
das
out
out
jge
jl
sbb
and
decl
or
fidivs
adc
sub
add
jo
scas
jns
xchg
hlt
cmpsl
cmpsb
push
rcl
test
popa
repz
int3
xlat
aas
aas
ret
push
aas
jle
jg
jbe
jns
pushf
adc
rcll
cmc
push
pop
popa
jecxz
xor
clc
repnz
stc
aam
jg
shll
ljmp
pop
pushf
cmc
cld
lret
nop
mov
mov
nop
inc
inc
push
mov
mov
out
stos
cmpsl
aas
ja
sbb
cmp
call
sahf
ds
dec
std
xlat
pop
fidivl
enter
aad
int
rclb
pop
pop
mov
inc
cmp
cmc
imul
pop
adc
into
dec
dec
cmc
xchg
cmpsb
mov
or
test
xchg
mov
das
add
stc
cmp
bound
pop
into
push
mov
adc
shlw
mov
and
inc
xor
push
pop
push
mov
and
jno
mov
fisubrl
or
test
loopne
and
cwtl
test
repz
xlat
pop
lcall
pop
sbb
rcll
mov
out
sahf
cmp
mov
jns
outsl
cmp
call
das
idivl
adc
pop
or
jne
mov
jge
xchg
loop
adc
cltd
push
mov
jnp
cmp
pushf
sub
mov
push
leave
jg
jge
out
jnp
pop
sahf
stc
fists
xchg
repnz
popf
lret
cld
icebp
sbb
pop
jns
daa
sahf
jle
iret
or
ja
pop
or
stc
aam
lret
and
cmp
lahf
pop
sbb
mov
loopne
xor
adc
movsl
jle
orb
sbb
push
les
incb
popl
lahf
mov
gs
add
dec
mov
push
add
test
push
add
imul
rcrb
jae
inc
or
add
mov
and
test
cs
adc
adc
jp
inc
mov
pop
push
out
rep
xor
cmc
aam
repz
xor
xor
jge
divl
ficomps
and
push
dec
sub
insl
scas
popa
cmc
mov
fnstcw
and
lahf
add
fmulp
loop
adc
pop
jp
pop
idivb
int
inc
ljmp
xor
addr16
pop
mov
sbb
push
mov
out
into
pop
shr
jle
dec
xor
stos
sbb
xor
dec
and
and
scas
cmpsl
pop
jmp
sub
cmpsb
pop
ljmp
ljmp
or
inc
std
xchg
leave
aad
imul
into
cs
jle
andb
xchg
mov
out
mov
add
ret
add
pop
sbb
dec
les
jo
lock
ds
cmp
xor
mov
mov
cmp
pushf
scas
repz
xchg
jns
fsubrs
add
repnz
push
push
add
in
in
jnp
loop
mov
mov
xlat
xchg
jnp
inc
stc
retw
popf
sbb
pop
push
pushf
jecxz
mov
dec
daa
jbe,pt
sub
bsf
jge
pop
or
push
pop
jl
addr16
insl
jbe
mov
inc
jns
dec
dec
lock
fwait
adc
fwait
aad
das
and
push
nop
popl
pop
mov
sub
test
xchg
and
gs
and
jl
aam
lds
dec
sbb
mov
out
lods
pop
adc
adc
jle
mov
cmp
in
sarb
out
xlat
push
loop
inc
sahf
jle
mov
arpl
ja
inc
in
dec
inc
stc
dec
mov
cwtl
mov
inc
js
adc
mov
adc
ja
call
mov
mov
dec
sbb
out
arpl
ret
nop
loopne
sub
imul
arpl
mov
fdivrl
mov
cmp
icebp
inc
sbb
scas
push
into
popf
cmp
mov
jo
int
cmp
add
mov
xchg
mov
xor
cmp
lods
movsl
sbb
sub
int3
jge
mov
aam
scas
inc
cmp
loope
inc
daa
out
jecxz
jo
push
out
mov
push
out
jle
jp,pt
push
xchg
in
ja
add
lea
adc
pop
sub
test
pop
mov
push
push
cmp
adc
cmp
push
enter
fdivs
loopne
daa
lock
cmp
orl
jmp
or
test
popf
add
push
cmc
hlt
mov
and
nop
inc
adcl
and
mov
popf
and
in
or
cmp
dec
fildll
les
sub
ja
xor
insb
sbb
int
sbb
jo
inc
out
pop
jmp
lret
das
add
into
iret
pushf
sbb
pop
aaa
or
movsl
dec
insl
sub
test
test
out
rorl
fwait
inc
cmp
stc
mov
mov
scas
pop
scas
add
push
xchg
push
mov
fnstcw
lods
mov
dec
dec
fimull
in
push
jmp
inc
mov
lahf
inc
daa
adcb
imulb
in
and
dec
stos
dec
add
js
rep
out
imul
jmp
clc
aam
lock
xchg
sahf
mov
mov
inc
and
pop
notl
xchg
dec
pop
push
js
pop
mov
repnz
popl
adc
movsl
cmp
cmp
faddl
add
add
mov
aam
dec
mov
ret
sbb
jo
push
push
add
inc
shr
fstl
inc
pushl
push
mov
push
scas
test
jae
out
pmaxub
sub
push
clc
sbb
vpmacssdql
add
cmpb
adc
vmovaps
mov
fldt
cld
mov
sarb
scas
bound
aad
cli
lods
shlb
sub
mov
xchg
jo
push
clc
fsubrp
cli
jecxz
jno
ja
divb
mov
pop
or
push
sarb
enter
pop
loopne
pop
test
mov
sub
or
push
mov
repz
ja
push
push
addr16
pop
test
sub
inc
pop
mov
push
dec
mov
and
cli
push
testl
cmp
das
pushf
push
out
test
enter
adc
mov
inc
jnp
jne
ja
lret
scas
test
shrb
cmp
in
testl
inc
shll
sbb
xlat
mov
mov
nop
xor
iret
add
xlat
ficoms
adc
scas
mov
xchg
inc
mov
ds
stc
dec
cli
pop
add
mov
fs
stc
imul
jmp
jmp
call
mov
notb
pop
jle
mov
adc
jg
stc
leave
lret
enter
adc
and
push
repz
jb
push
or
add
xchg
sbb
pmaddwd
fsubrp
test
xor
jb
push
lea
dec
and
mov
daa
jo
mov
outsb
fnstcw
fisubs
dec
int3
into
mov
mov
arpl
cmc
push
push
cltd
ret
sahf
cmpsb
mov
test
mov
add
add
cs
ret
inc
insl
ret
mov
lods
mov
add
mov
pop
dec
jne
stos
push
cmp
mov
testl
ret
rolb
rorb
pop
jp
pop
add
push
pop
or
rorb
jg
fdivrl
mov
std
xchg
adc
iret
dec
pop
adcb
ja
shll
xchg
out
xorl
test
out
sbb
lret
or
inc
dec
pop
jo
xchg
lret
adc
add
push
push
jbe
mov
sub
pop
pop
repz
jmp
push
adc
aaa
or
cld
loopne
iret
roll
push
or
pop
pop
dec
enter
xchg
pop
loopne
push
add
int
push
cmc
mov
cmp
cmpsl
mov
add
daa
out
aaa
mov
add
mov
mov
mov
pop
mov
adc
sti
adc
or
mov
ds
pop
mov
xchg
push
std
dec
sahf
dec
adc
loop
mov
inc
psubsw
shrl
pop
pop
push
push
stos
scas
sahf
adc
lcall
mov
add
adc
add
lock
out
jo
mov
das
or
dec
in
mov
add
daa
hlt
bound
dec
nop
sahf
push
add
and
jns
mov
fidivl
mov
or
mov
insl
in
jae
ja
movsl
enter
jp
sbb
mov
aad
push
or
outsl
xor
push
jmp
xchg
sbb
repnz
sti
fxam
movsb
pop
leave
push
xchg
inc
pop
push
outsl
sbb
popf
rol
lret
es
loope
xor
ficoms
add
push
inc
sbb
mov
mov
adc
xor
lods
lods
mov
les
adc
adc
out
inc
push
add
and
jnp
push
shrb
sbb
rcrl
call
lock
or
mov
scas
cli
or
mov
std
out
leave
xor
xchg
int
in
adc
pusha
jecxz
int3
jge
and
push
out
arpl
xor
bound
push
jmp
pop
stos
lahf
mov
ret
nop
mov
imul
cmp
out
cmp
sahf
enter
sahf
dec
cltd
push
into
mov
add
hlt
lods
mov
lods
call
lahf
mov
aad
rcll
dec
test
lock
add
xchg
dec
sub
sbbl
mov
adc
sub
insl
orl
andl
popf
fbld
xchg
lret
inc
mov
scas
cmpsl
lods
jp
dec
shrb
out
pop
mov
fnstcw
loope
ret
mov
std
adcl
lahf
jne
push
cmpsl
pop
in
sub
fimull
pop
test
push
add
bound
out
jo
int
mov
push
mov
mov
xchg
enter
inc
mov
and
push
push
jecxz
popa
inc
and
xlat
in
fmull
dec
loope
sub
cmp
aam
and
cld
add
xchg
loop
ja
in
cmp
shlb
jecxz
inc
inc
std
gs
movsl
outsb
pop
jno
mov
maxps
fimuls
xchg
dec
xchg
sbb
inc
daa
push
hlt
xchg
es
je
cmp
fnstcw
xor
xchg
testb
adc
sub
sub
cltd
js
cmp
and
push
cltd
mov
adc
push
movsl
cli
dec
enter
hlt
xchg
inc
inc
fnstcw
test
clc
pop
rcll
je
lret
jg
sbb
dec
out
inc
dec
mov
mov
daa
dec
jno,pt
loopne
jle
das
pop
cs
adc
rolb
andl
jle
daa
cmp
pop
fnstcw
in
insl
fbld
or
fbld
mov
lret
sub
add
leave
or
mov
xor
xchg
pop
test
dec
dec
and
pop
sub
or
jo
inc
shlb
into
cs
aas
rorl
cmp
fstpt
jno
pop
add
aam
sub
shrl
add
push
clc
ret
pop
sub
int3
call
inc
leave
stos
daa
sti
in
test
rol
outsl
dec
popa
mov
push
xlat
mov
shlb
push
and
fisttpl
mov
js
in
xchg
add
mov
adc
mov
movzwl
or
xchg
sub
push
cli
incl
adc
add
fwait
sbb
enter
xchg
cmc
lock
add
adc
cwtl
cmp
xchg
push
js
sub
add
nopl
sbb
cmp
ja
mov
popf
xchg
js
aad
mov
bound
mov
add
mov
repnz
mov
mov
test
icebp
rcrb
xchg
sarb
out
mov
push
scas
fstpl
or
inc
and
push
cmpsb
loop
inc
pop
in
popa
jns
or
adc
and
cmp
addr16
push
bnd
sbb
inc
inc
add
or
dec
inc
inc
push
or
shld
mov
gs
sub
loopne
add
movsl
movsb
sub
cltd
call
xchg
push
mov
push
jp
mov
sbb
xor
and
andb
sbb
mov
cwtl
jg
out
clc
mov
and
outsb
pushf
test
xchg
dec
in
or
mov
repz
int3
sbb
dec
cmpsl
xchg
push
lret
icebp
or
movsl
adc
movsl
inc
add
dec
inc
gs
inc
out
sub
jno
mov
ds
mov
sub
rcrb
call
scas
sub
stos
fwait
jmp
dec
loope
stos
xchg
inc
add
stos
sbb
jg
out
js
mov
mov
fsts
xor
lods
mov
movsl
hlt
xlat
cs
cmp
push
pop
addb
test
movsb
rcrb
into
inc
xchg
inc
xor
and
and
mov
loope
sbb
bound
dec
sub
pop
popf
jg
in
movsb
pop
shll
pop
cmpsb
or
add
sbb
adc
pusha
adc
add
ja
xchg
mov
sbbl
jne
adc
mov
add
test
outsb
inc
cltd
fdiv
gs
popf
iret
mov
xor
push
rorb
sub
and
fs
jb
in
mov
enter
push
das
lahf
ljmp
or
ja
mov
push
cmpsb
ljmp
lds
std
xchg
cmc
xor
iret
dec
xchg
repnz
out
fiadds
mov
leave
add
mov
push
loope
pop
stos
das
mov
loope
pop
mov
jbe
push
sbb
jmp
xchg
subl
and
push
mov
adc
fs
popa
xchg
jmp
jge
inc
cmpsl
jnp
cmp
imulb
add
sbb
scas
ss
test
push
add
hlt
add
push
rcl
mov
imull
push
pop
fcomip
mov
mov
sbb
aas
out
jl
cmp
add
test
int
rol
cwtl
or
xchg
aas
dec
xor
outsl
sti
push
mov
jae
mov
cmp
ds
je
ja
xlat
imull
negb
rorb
sub
pusha
into
xor
jae
xchg
push
in
xlat
std
icebp
mov
xlat
std
cmp
daa
imul
sub
or
add
int3
sub
mov
das
lds
fiaddl
jecxz
sbb
add
mov
xchg
test
or
inc
icebp
negb
into
mov
or
sbb
in
repz
ret
outsb
mov
stos
add
add
idivb
or
pop
xorb
mov
aaa
xchg
hlt
ja
push
or
pusha
push
cmpsb
xchg
ljmp
jne
pusha
aad
pop
gs
test
push
jl
push
pop
xlat
pop
loope
add
jns
les
adc
test
ds
mov
jbe
push
pop
pop
call
adcl
aaa
aaa
xchg
fbld
push
add
pop
cwtl
jnp
enter
mov
mov
lock
shll
cltd
push
dec
test
sbb
fs
loopne
mov
sub
pop
add
cmp
pop
mov
test
lret
jo
dec
xor
sbbb
mov
rorb
jmp
jnp
in
movsl
fs
lods
hlt
testb
repnz
jns
xchg
or
mov
add
add
add
adc
filds
insl
xlat
test
imul
out
mov
outsb
adc
mov
jecxz
push
fdivs
dec
mov
iret
sub
ret
out
push
addr16
jle
outsb
stos
out
mov
call
xchg
mov
cli
sub
aad
cmpl
scas
pop
mov
popf
icebp
adc
mov
js
into
loope
iret
xchg
rclb
add
inc
xor
cmp
and
in
scas
push
cmp
sbb
rclb
mov
bound
mov
add
pop
call
mov
sbbb
stc
pop
mov
lahf
imul
out
xor
repnz
in
addb
xchg
sbbl
pushf
outsl
fnstsw
mov
add
sub
xor
out
out
or
jp
add
mov
inc
xor
mov
mov
mov
nop
movsl
sub
icebp
mov
hlt
les
cmp
js
ds
and
and
mov
rol
push
add
cmp
imull
sub
xchg
cs
icebp
ja
xchg
mov
sbb
push
notb
pop
cmpsb
scas
movsb
push
inc
xor
sbb
sahf
cwtl
pop
pop
or
cmpsb
lods
mov
cmp
inc
or
out
daa
jge
aam
jb
enter
loope
icebp
sbb
mov
fs
dec
pop
lds
add
mov
add
stos
mov
lods
lods
adc
mov
xadd
dec
fnstsw
or
inc
mov
xchg
jp
loope
scas
stos
lret
cmpsb
icebp
rcr
sbb
pop
inc
ja
and
sti
lret
lods
dec
mov
aad
mov
pop
pop
cmp
mov
pop
mov
add
add
ljmp
jle
jno
loopne
push
fdivp
and
xchg
pop
mov
jge
fcmovnu
lock
xor
adc
add
push
adc
hlt
in
dec
pop
cmp
dec
into
sbb
cli
jno
nop
mov
pop
ja
jg
add
hlt
xchg
repnz
cmp
fists
out
aad
std
and
sub
adc
rclb
or
xlat
push
or
or
jg
add
xor
fidivs
mov
cmpsl
mov
stos
jae
push
jne
cmpb
cmp
jne
pop
lahf
push
mov
mov
or
mov
nop
inc
pusha
jae
arpl
xchg
cmc
ja
mov
frstor
aad
in
sbb
push
or
pop
pop
clc
xlat
add
js
ret
mov
push
push
add
add
push
int
push
xor
adc
mov
mov
aad
arpl
jle
sbb
stos
clc
adc
add
xorb
inc
push
mov
stos
xor
ja
sub
and
loopne
add
mov
nop
mov
push
push
rorb
dec
pop
mov
into
pop
xchg
sub
mov
mov
mov
add
out
stos
lret
stos
dec
push
shrl
adc
pop
out
scas
inc
lret
mov
add
sub
lock
jle
add
ret
lret
stos
xchg
mov
add
push
xor
add
push
push
xor
sub
jae
push
jae
mov
call
mov
cmpsl
adc
mov
mov
sbb
mov
jmp
jae
mov
pop
scas
imull
lahf
inc
sti
fisttpl
adc
subl
imulb
push
pop
add
pop
xor
inc
into
or
push
push
xchg
mov
fldcw
cmp
mov
enter
out
mov
mov
mov
sub
mov
lahf
xchg
sub
push
jl
cld
and
mov
and
inc
cmpl
fmull
cmpl
xor
xchg
pop
arpl
subb
mov
enter
add
repz
fxam
pop
mov
mov
pop
leave
cmc
das
pop
je
rcrl
movsl
fcoms
out
incl
imul
mov
out
mov
sbb
mov
push
push
or
sbb
fdivrs
mov
loopne
xlat
test
rorb
test
push
mov
test
dec
push
in
jmp
push
jo
mov
mov
imull
mov
es
mov
xor
xlat
add
mov
inc
xchg
add
add
adc
repnz
cmp
lea
movsbl
xor
data16
pusha
add
cmp
cmp
jbe
push
xchg
and
sbb
addr16
dec
push
sbb
or
sub
add
fdivrs
inc
pop
pop
das
shlb
pop
jo
push
data16
gs
mov
addr16
mov
mov
cmp
mov
jle
out
inc
sub
and
cmp
enter
or
ret
lret
popf
jmp
mov
scas
fcompl
sub
adcl
into
mov
or
fwait
sbb
cmp
lds
lods
stc
das
inc
insb
push
pop
bswap
lret
mov
pop
xchg
imul
leave
xor
lret
sbb
aad
lock
add
add
dec
inc
scas
inc
pusha
cmpb
or
add
or
add
add
add
add
or
add
add
data16
and
dec
inc
inc
push
js
in
mov
jns
cmp
mov
data16
xchg
in
xchg
mov
arpl
insb
and
inc
outsb
adc
pop
dec
add
push
mov
sahf
test
dec
jb
dec
and
cwtl
fucom
add
or
jnp
push
insb
pop
xchg
add
insb
imul
cmp
fst
imul
sti
jecxz
fcmovu
xor
stos
cmpsl
push
aad
mov
ljmp
shll
or
rcrb
inc
pop
or
mov
cmp
inc
dec
or
sub
push
enter
lea
mov
and
out
iret
add
fisubs
and
pop
and
test
jmp
add
addl
sub
inc
mov
inc
jmp
add
push
insl
xlat
inc
aad
lcall
imul
cmpsb
add
mov
pmaxsw
das
addr16
inc
pop
xor
arpl
lret
cmp
xor
mov
mov
cld
jmp
scas
jp
sub
add
pop
add
scas
out
add
pusha
das
lret
pop
rcrb
andb
xchg
mov
mov
cwtl
fyl2x
dec
xchg
rorl
sarb
popa
cltd
add
sub
out
cwtl
in
cmp
mov
ja
mov
dec
or
add
fmuls
mov
rorl
sbb
sbb
test
mov
movl
shll
xor
test
pusha
pusha
bound
push
add
add
xchg
inc
sub
adc
mov
add
or
or
dec
jecxz
xchg
jno
mov
add
or
in
pop
push
xchg
imul
popa
pop
cwtl
ret
xlat
je
xor
inc
sub
pop
movsl
add
movl
dec
and
add
or
lret
xchg
shll
or
or
mov
lea
mov
shlb
xchg
mov
hlt
les
ficoml
out
js
aas
cli
dec
bound
mov
sbb
loope
cmpsb
test
loopne
rolb
pop
sbb
leave
int3
jg
gs
pop
xchg
or
pusha
pusha
push
mov
out
add
xchg
and
xor
movsb
inc
movb
jmp
sub
mov
scas
scas
btsl
push
inc
lahf
sarl
dec
pop
push
and
movsb
out
cvtps2pi
call
or
jmp
cwtl
pop
sub
rcrb
rcl
int
insl
mov
je
jl
mov
xchg
push
mov
adc
jge
pop
sub
jns
scas
sbb
lock
loope
sub
test
orb
subl
sarb
add
cmpsl
pop
lret
add
push
xor
mov
movsl
mov
sbb
scas
mov
stc
es
adc
insl
shrl
cmp
inc
repz
ja
push
imul
das
cmp
orl
mov
and
insl
pop
es
shll
das
rorb
hlt
cmc
scas
mov
mov
or
jmp
sbb
dec
jp
iret
out
stos
in
xchg
add
icebp
pop
rorb
and
call
mov
xchg
pop
jae
lock
xchg
sbb
fisubrl
outsl
mov
add
push
xchg
push
add
lock
cmpsb
lds
scas
inc
dec
nop
sub
test
or
xor
jl
adc
dec
lcall
orl
and
nop
mov
pop
mull
mov
add
aas
inc
pop
clc
stc
jnp
popa
pop
lods
pop
xor
adc
fdivp
cmp
mov
xchg
dec
add
dec
stos
push
jecxz
scas
sub
daa
ret
hlt
pop
adc
adc
test
and
sbb
mov
push
int3
xchg
js
adc
mov
jo
cmp
pop
addb
xchg
adc
jo
xchg
movsb
mov
inc
movsl
push
mov
pop
aas
push
daa
inc
pop
pop
or
or
add
repz
or
sub
jp
xchg
mov
sbb
jo
ficomps
sbb
addb
xorb
pop
mov
insb
inc
xchg
jnp
inc
mov
mov
mov
test
or
xor
cmp
xor
call
sub
addb
bound
out
addl
add
dec
jmp
cmpsb
sub
cmpsb
aad
lock
dec
push
sbb
sbb
inc
outsl
xchg
aas
xchg
sbb
mov
add
mov
shlb
rcll
jno
mov
ror
or
aaa
loopne
shl
fwait
cmpl
scas
sbb
orb
inc
and
les
insb
jb
fmuls
mov
mov
aam
sub
or
jecxz
mov
out
arpl
pushf
stc
flds
and
inc
and
mov
dec
cltd
and
xchg
mov
pop
mov
xchg
push
xchg
fimuls
lcall
jg
push
cmp
sbb
outsb
shlb
jne
mov
lret
sub
adc
lds
je
ljmp
cltd
xchg
cmp
pop
icebp
imul
add
add
dec
mov
loop
jge
mov
dec
fwait
cs
dec
movsl
ret
adc
dec
dec
push
scas
push
nop
sahf
pop
cltd
hlt
les
sarb
add
je
inc
add
jnp
cwtl
mov
adc
sub
mov
pushf
xchg
pop
or
testb
fldenv
sbbb
push
imul
data16
lret
mov
lret
scas
mov
mov
por
ret
sub
cmp
les
loopne
icebp
xchg
push
in
sti
stc
inc
repnz
addr16
inc
dec
movsl
ret
mov
and
or
dec
mov
stos
push
sub
ss
cs
jp
fidivrl
mov
loopne
cmpsb
sbb
sti
or
mov
lock
pop
mov
add
vpsrlw
pop
xlat
or
adc
clc
loopne
mov
lea
stos
lea
xor
je
adc
sub
inc
outsb
inc
cld
push
add
nop
inc
xchg
sarb
cwtl
push
xchg
or
sbb
je
lock
hlt
lret
push
inc
es
in
dec
lahf
inc
mov
sub
xchg
dec
push
pop
out
push
lret
sub
inc
popa
mov
sti
jmp
mov
ret
sbb
mov
divl
push
and
dec
int3
clc
das
sbb
movsl
test
js
pop
cli
cld
mov
in
ret
xor
int3
add
push
ljmp
dec
or
xlat
jne
sbb
popa
cmp
jg
jecxz
popf
adc
test
jle
fstps
adc
jle
in
fs
xor
push
sub
pop
mov
sub
or
je
adc
xchg
in
sbb
xor
fwait
sub
sahf
pop
shl
cmpsl
dec
or
dec
pop
aaa
sti
fisttpl
sub
loopne
adc
ja
faddl
cmp
sbb
movl
roll
loope
mov
add
pop
je
adc
push
push
lods
aad
cwtl
test
cmp
mov
ds
cltd
add
cltd
pusha
outsb
insl
or
adc
adc
lcall
xor
push
cltd
test
scas
aaa
and
fisttpll
and
fdivs
je
ret
cmp
sbb
jne
jnp
pusha
pusha
pusha
mov
adc
xchg
shlb
subb
movsb
mov
pop
mov
jl
jno
sbb
push
sti
loop
pop
lds
testl
std
xchg
jbe
inc
add
adc
adc
dec
loopne
pop
orb
repz
fbld
push
in
pop
mov
mov
out
push
push
cs
jno
mov
in
push
rolb
cltd
stc
inc
push
mov
add
mov
pusha
fsubrl
cmpb
outsl
or
add
cltd
add
das
mov
mov
fwait
cs
pop
loope
jb
ret
sti
add
cs
adc
pop
adc
test
and
hlt
icebp
dec
roll
lret
or
add
popf
xchg
xchg
add
sub
stc
inc
pop
jmp
pop
sbb
sub
pop
xor
or
mov
xlat
and
cmp
test
mov
cwtl
out
dec
push
xor
stos
or
imul
out
or
mov
ret
rcl
out
mov
int
or
hlt
mov
mov
mov
in
cld
icebp
cwtl
out
fldl
movb
jae
inc
pop
or
add
aas
pusha
dec
pop
or
mov
dec
pusha
sbb
movsl
sahf
fstpl
sbbb
xchg
fisttps
lahf
insl
cmpsl
pop
mov
jp
xchg
sub
and
mov
or
int3
and
or
and
inc
je
insb
mov
and
mov
icebp
testb
ljmp
jbe
arpl
insl
mov
mov
insl
and
push
push
xchg
mov
jb
and
jnp
test
das
and
push
pop
add
xchg
push
js
rolb
and
das
bound
cmp
dec
push
mov
sbbb
inc
or
xchg
loop
xlat
mov
add
push
sub
jg
pop
iret
mov
push
pop
sbb
test
aad
test
adc
push
in
push
in
cmpsb
jle
stc
jecxz
cli
fsub
xor
int
jg
out
pop
lahf
scas
imul
clc
jnp
jmp
mov
pop
pop
sub
push
fs
inc
dec
add
jp
jle
mov
sbb
mov
clc
ret
loop
mov
popa
mov
pop
push
add
inc
mov
inc
pushf
add
fildll
paddd
sub
jb
push
xor
scas
dec
mov
inc
dec
pop
jno
std
cmpsb
popa
bound
mov
es
lret
fcompl
fsubl
adc
mov
rolb
loopne
daa
andb
jp
nop
dec
movsl
sbb
or
mov
push
xchg
fdivr
push
bound
cmc
imul
inc
add
loop
mov
and
jae
aam
cwtl
test
loop
int
or
xchg
inc
lret
dec
adc
fwait
das
add
shrl
and
jle
or
dec
cmpsl
mov
mov
xor
in
mov
and
mov
das
lcall
inc
mov
fbstp
or
lods
pop
popa
pop
dec
movsl
lock
xchg
mov
es
or
cmc
fcoms
adc
jmp
ret
or
inc
xor
xor
jp
jmp
sbb
std
rclb
fldt
fisttpll
rol
cmp
sbb
sbb
jne
aam
push
shr
sub
dec
dec
add
adc
jmp
insb
add
mov
repnz
scas
mov
pop
lahf
cmp
sbb
clc
fistpll
jecxz
sbb
xchg
sub
aad
hlt
popf
loope
mov
or
lods
sarb
std
in
cmp
cmpsl
sub
scas
outsl
xor
or
jmp
mov
xrelease
std
insl
xchg
int3
add
lods
jg
in
pushf
push
or
adc
mov
fstpt
repnz
icebp
lds
faddl
push
shll
or
test
mov
jne
or
repnz
mov
mov
sti
lods
fdivl
mov
inc
nop
out
sub
test
jne
ss
xchg
addr16
cmp
ficomps
fsubl
pushf
and
ret
les
imul
inc
mov
adc
sbb
test
pusha
ds
jno
and
inc
and
lahf
inc
insb
mov
mov
insb
fnstsw
ret
pop
ljmp
outsl
fcomip
sbb
xchg
fiaddl
mov
test
mov
jl
cmp
mov
lea
ds
repnz
out
jl
add
dec
add
test
mov
xor
mov
jae
adc
movsl
push
in
clc
add
fistpll
adc
cmpsb
mov
pop
adc
adc
and
sti
arpl
jnp
adc
aas
add
movsl
lret
mov
pop
nop
mov
sub
dec
out
mov
pop
cmp
imul
pushf
bound
decl
movsl
xor
test
mulb
stos
mov
sbb
in
imul
sbb
aas
rclb
and
jl
fstpt
dec
or
dec
jne
fidivrl
call
inc
loope
mov
enter
out
sahf
xchg
jno
xchg
add
pop
cmp
pushf
out
sub
pop
lock
mov
popa
cmpsb
scas
ffree
pop
adc
aas
xchg
addr16
sti
into
sbb
sub
lock
ret
out
inc
lret
js
sub
clc
aas
xor
out
repnz
test
mov
stos
dec
shrb
mov
aas
shl
pop
loopne
and
cli
cmp
dec
lahf
and
pusha
mov
mov
ret
inc
test
or
icebp
cmpsl
data16
and
jl
aas
or
mov
dec
movsl
repz
adc
adc
jg
dec
pop
sbb
dec
and
adc
or
add
push
repz
in
lahf
cli
in
lahf
in
mov
das
inc
sub
jge
fisttpll
mov
scas
inc
mov
cmpsb
push
sub
popf
out
jle
xor
popf
xchg
pop
jle
mov
std
or
and
cmp
test
xchg
addb
mov
add
push
loopne
stos
add
lret
jge
orb
xor
and
imul
out
xchg
cmp
stos
hlt
inc
xchg
js
and
icebp
icebp
std
inc
imul
shrl
iret
pop
stc
clc
ds
iret
clc
jg
dec
outsb
js
repz
pop
jge
mov
cmpsl
inc
or
inc
sbb
jne
stc
out
dec
jl
jecxz
or
jbe
add
jo
loope
and
nop
test
fdivl
fbld
pushf
and
adc
aas
sub
imul
lods
sub
cwtl
mov
mov
jecxz
mov
jg
cld
sub
ds
rorl
push
sub
loope
jecxz
sbb
jecxz
jo
mov
dec
repz
mov
pop
subb
scas
xlat
cwtl
sahf
lock
xor
or
ja
loope
and
aaa
std
or
and
lock
add
dec
adc
sbb
cmp
dec
push
pop
add
mov
scas
fneni(8087
ljmp
xor
iret
pop
sub
adc
imul
sbb
or
out
jl
pop
int
rcll
clc
int
cld
out
or
push
loop
out
add
push
and
std
cmc
xor
inc
sub
lret
lock
addl
add
push
stos
pop
test
sub
cmp
and
orl
sbb
push
mov
mov
lret
call
psubq
scas
fstps
scas
stos
dec
jnp
outsb
fcmovne
jne
pop
mov
sub
fisttps
inc
lods
push
popf
loop
cltd
out
cmpsb
std
inc
mov
in
xlat
or
or
xor
xor
decb
cld
mov
imul
cmp
imul
mov
adc
xchg
popf
sbbb
or
scas
leave
dec
mov
lods
jmp
pop
shl
push
lods
addb
loope
cs
xchg
scas
hlt
mov
ja
adc
mov
mov
mov
push
loope
rorl
adc
ds
xor
movb
sbb
and
sbb
inc
sub
popf
jle
cs
mov
and
mov
adc
scas
pop
lods
xchg
inc
sub
lock
pop
lock
out
mov
add
popf
dec
xchg
imul
pop
xchg
dec
and
sub
pop
ja
lcall
xor
inc
scas
rcrb
cmp
inc
inc
out
jecxz
decb
shlb
mov
cld
cmp
cmp
xchg
cld
dec
mov
inc
inc
popf
sub
fwait
adc
loopne
pop
mov
or
sbb
rcl
sub
das
mov
jmp
fbld
push
popa
mov
dec
and
cwtl
imul
push
jo
adc
xor
fbstp
or
scas
out
es
in
inc
rorb
xchg
sub
clc
dec
dec
sbb
and
xor
adc
fbstp
in
imul
insl
pop
mov
mov
cmp
lock
mov
fbstp
and
jmp
xlat
dec
jmp
dec
movsl
ret
xchg
and
dec
loopne
in
pop
cmp
mov
cli
ret
rcll
or
lods
mov
into
adc
in
adc
sub
jne
xchg
cmp
icebp
mov
aas
call
or
xchg
and
cli
pop
sbbb
lcall
in
cmp
repz
out
dec
jmp
insb
mov
cmp
push
pop
loop
repnz
hlt
loop
sub
mov
shl
add
in
mov
in
fbstp
das
aas
adcl
repnz
stc
jmp
cli
sub
aas
xlat
xor
mov
mov
repnz
add
pop
dec
sub
lods
sbb
rcl
stc
das
vlddqu
add
dec
and
mov
jecxz
pop
inc
mov
test
nop
in
push
inc
push
sbb
cmp
mov
mov
es
out
cmp
sti
lahf
pop
xchg
lods
pop
cmp
inc
sbb
mov
stc
sbb
pop
mov
mov
and
mov
das
jge
pop
cli
mov
push
data16
test
xchg
xlat
mov
fcmovnu
sahf
xor
hlt
dec
jns
movsl
xchg
cli
negl
out
inc
lds
mov
mov
push
mov
addr16
addb
mov
repz
aas
test
sarl
inc
jmp
sub
mov
test
push
cmc
xor
cmp
pop
cs
jae
jl
xchg
pop
cmpsb
gs
pop
xchg
adcl
pop
lods
sti
fdivp
xchg
mov
push
fidivs
pop
fs
dec
mov
pop
neg
mov
or
test
mov
adc
lods
cmp
repz
shll
jle
scas
xor
adc
pushf
add
jbe
and
test
jmp
sub
aaa
mov
lods
dec
or
call
jo
fdiv
es
test
mov
and
test
lcall
mov
sub
mov
scas
lahf
das
push
sub
or
cwtl
test
pusha
sbb
xchg
mov
sub
push
scas
es
aam
insl
cwtl
xchg
vmaxpd
sbb
or
cmp
mov
adc
pop
lock
iret
fcomip
daa
in
fscale
mov
push
sub
mov
pop
xchg
mov
lods
inc
cmpl
cmpsb
xor
insl
push
pop
fistl
fnsave
scas
pop
pop
lds
outsb
test
adc
or
add
push
rclb
inc
adc
aad
jg
ss
push
lret
adc
in
jge
push
sti
xchg
mov
les
js
ret
push
pusha
sti
dec
adc
lahf
das
and
popa
or
mov
mov
or
arpl
jp
cwtl
sar
fsubr
lahf
or
sbb
xchg
shrl
or
mov
imul
sbb
scas
das
fstpl
pop
pop
js
push
cmp
jmp
repnz
dec
jmp
pop
out
out
inc
divl
inc
mov
adc
cmp
cld
mov
push
xchg
dec
in
or
pusha
fldl2t
loopne
addr16
sbb
adc
dec
add
pop
mov
or
mov
insl
push
jg
push
testb
hlt
rcrb
jle
sub
cmp
push
dec
add
add
pusha
cmp
cs
sti
pop
push
mov
mov
aaa
ffree
lret
mov
jo
out
popa
fstps
std
sti
push
or
lahf
int3
xchg
out
cmpsb
popa
cmpsl
or
jge
outsl
xchg
sbb
dec
jge
scas
jg
jnp
out
das
icebp
popf
out
incl
push
push
xchg
mov
iret
aas
push
mov
pusha
std
cld
scas
lods
mov
mov
sarl
rcl
mov
inc
xchg
mov
add
mov
and
xor
int3
cmpsl
xchg
cmpsl
dec
add
push
and
test
mov
rolb
cmpb
pop
mov
dec
dec
or
jbe
test
xchg
out
jmp
aas
fstp
jno
in
sahf
fucomp
in
dec
inc
add
jo,pt
loop
fcomip
jbe
testl
jmp
push
or
cld
jmp
scas
xlat
ror
scas
push
or
cltd
fst
mov
jle
in
inc
push
je
adc
lods
xorb
mov
jecxz
mov
test
shr
in
fs
loop
popf
add
cs
in
add
mov
sbb
xor
xor
popl
lret
mov
ror
add
out
mov
dec
mov
pop
jns
xor
xlat
jno
pop
xchg
fisttpll
aas
xor
repz
sbbl
and
xor
inc
mov
cmp
sub
into
pop
add
scas
pop
lods
std
mov
in
pop
add
data16
iret
jg
popa
dec
das
rcrb
push
adcl
xor
jle
mov
je
inc
inc
fdivrl
cs
mov
ret
std
rcrl
cmp
int3
and
mov
fldt
jnp
jo
sub
outsb
inc
mov
mov
jmp
pop
data16
add
orl
pushf
int
mov
mov
xor
lcall
push
cmp
jg
mov
or
xchg
or
pop
add
nop
add
cmpsl
fstpt
adc
movsbl
das
fdiv
movsl
cmp
roll
out
mov
loope
ds
jno
cmc
mov
dec
fwait
cli
inc
out
xchg
mov
mov
push
xchg
outsl
orl
mov
loop
inc
inc
add
xor
popf
adc
jns
setge
or
inc
jns
mov
imul
mov
repnz
rorl
test
mov
or
cmc
sub
cmp
lret
cmp
add
scas
jo
les
dec
sbb
mov
fwait
test
dec
ja
shll
repnz
jbe
mov
data16
std
or
jl
mov
nop
cmp
test
mov
loopne
mov
out
cmp
add
xor
and
aad
mov
cmp
mov
mov
sub
mov
leave
jmp
push
sub
sbb
insl
out
sbb
arpl
shll
mov
pop
jns
xor
scas
arpl
pusha
add
xchg
nop
add
dec
pop
lds
mov
xchg
mov
mov
andb
mov
mov
mov
insb
in
ret
pop
dec
add
jmp
cltd
incb
shr
jle
jle
mov
or
cld
sbb
in
lahf
cmp
dec
mov
adc
xchg
dec
sbb
dec
inc
popa
cwtl
cmpsl
sub
push
add
inc
fldt
pop
push
mov
adc
add
lods
sub
or
mov
bound
adc
jge
test
sub
jnp
xchg
in
cmp
lods
add
inc
pusha
mov
test
js
mov
add
push
movsl
or
or
inc
jo
push
test
and
shrl
ret
sbb
cmc
push
xchg
out
cli
leave
cs
daa
test
sub
add
aas
shl
fstpl
inc
xchg
in
ds
xor
push
pop
jecxz
pushf
or
js
and
or
adc
cmp
xchg
xchg
jp
add
cmp
cmp
adc
out
mov
mov
insb
sbb
in
mov
and
ret
mov
mov
outsl
jns
stc
pop
ljmp
imul
in
sub
mov
cli
aad
test
cli
pop
aas
out
into
mov
std
xchg
cld
std
in
lahf
lea
add
shlb
cli
scas
testl
stc
adc
cltd
std
jge
and
movlps
mov
pop
aas
xchg
sub
pushf
jne
mov
call
jmp
sub
gs
or
idivb
mov
xor
sti
add
sub
fdivrp
idivb
loop
scas
jl
xchg
sub
mov
fdivp
inc
lcall
out
adc
rcrl
jno
jbe
lcall
pop
mov
fucomp
leave
pop
mov
add
push
stc
popf
outsb
loopne
sti
pop
rolb
data16
pop
sarb
lock
into
inc
lret
push
shlb
clc
add
test
ss
je
ljmp
fistpll
inc
and
cmp
xchg
movsl
pop
test
or
ret
mov
push
sti
outsb
sti
adc
jmp
xchg
arpl
fsub
imul
daa
push
lea
mov
out
mov
testl
dec
int3
lea
enter
mov
bnd
outsl
jle
fwait
mov
dec
mov
ja
mov
adc
add
dec
mov
mov
pop
push
test
cmp
adc
mov
inc
inc
inc
js
mov
push
sbb
and
mov
lret
popa
xchg
outsl
aad
test
lock
mov
or
mov
jo
mov
inc
adc
sub
sub
sti
and
and
jmp
insl
xchg
mov
cmc
ds
jmp
insb
shlb
jmp
int
xchg
shll
cltd
enter
or
scas
push
dec
mov
mov
movsl
sarb
lods
push
push
imul
vpunpckhbw
pop
push
and
cmc
lahf
jl
add
fdivs
or
out
or
aam
or
jl
ljmp
mulb
lret
mulb
mov
xchg
mov
fcmovbe
mov
xor
lret
test
adc
jecxz
xchg
xchg
adc
popa
leave
je
mov
fistl
decl
lock
jl
adcb
push
add
add
repnz
inc
push
ret
xchg
jbe
into
inc
add
popf
jns
lock
and
mov
mov
push
push
es
mov
test
cli
into
repz
or
pop
clc
ret
sti
jbe
sti
setne
or
or
add
je
dec
mov
push
jno
outsl
pop
cli
movsb
jmp
addr16
dec
fildl
lahf
fsub
test
rcrl
lret
mov
ja
push
and
push
leave
je
mov
in
adc
aas
int3
cmp
mov
push
andl
rcrb
inc
inc
inc
clc
cld
out
inc
ss
jl
aad
fs
adc
fwait
pop
xlat
ret
add
cmp
xor
stc
sbbl
insl
dec
push
loope
stc
outsl
arpl
sub
in
sti
pop
pusha
out
jbe
js
jge
add
add
loopne
lods
push
dec
je
push
ds
inc
ficompl
fidivrl
mov
ja
mov
fcomps
add
pop
push
jmp
aas
push
ja
nop
neg
xor
out
or
cmp
xchg
insl
inc
shrb
idivb
int
neg
cmpsb
inc
or
jnp
std
xchg
jg
and
std
pop
movsb
push
jle
ds
out
push
sub
aam
mov
mov
pusha
ds
int
jl
and
pop
je
push
and
push
push
xchg
pop
mov
add
and
dec
inc
inc
push
jbe
adc
mov
jno
adc
add
sub
pop
push
ss
xor
xor
jnp
ljmp
je
iret
sbbl
das
mov
inc
or
idivb
incb
xor
lcall
pop
insb
fnclex
cmp
clc
imul
and
add
inc
rcll
movsb
push
sub
adc
push
dec
loopne
inc
clc
push
dec
xchg
pop
lret
xor
fwait
pop
out
or
out
rcll
inc
lcall
int3
pop
cwtl
subl
fsubs
scas
adc
rolb
inc
rcrb
mov
pop
cwtl
fnstenv
aaa
mov
ss
or
adc
dec
and
addr16
ljmp
test
ljmp
mov
and
xor
incl
insl
xchg
pop
sbb
xchg
roll
push
loope
scas
cld
or
bnd
add
dec
jmp
push
in
push
cmpsb
and
fldt
fs
xchg
push
scas
cltd
imul
xchg
dec
addr16
jbe
sbb
adc
xor
adc
test
popa
or
repnz
fsub
stc
fistpll
shll
jmp
mov
inc
adc
push
scas
movsb
push
cwtl
dec
cmp
lea
push
cmpl
xchg
int
fistl
mov
fidivrs
inc
inc
jg
xor
mov
xchg
orl
sbb
iret
lds
cmp
jl
jmp
dec
lret
leave
sbb
or
dec
cmpsl
or
repz
cmp
xor
in
hlt
jne
mov
adc
lahf
sub
hlt
fcmovbe
jno
jbe
xor
xor
jl
jg
fisttpl
mov
outsl
out
jae
cmpsl
bswap
xor
cli
xlat
mov
xor
or
out
in
sbbb
rcrb
popa
cltd
or
out
repz
or
clc
xor
pop
movsl
nop
pminub
scas
jg
sbb
insl
push
xchg
cwtl
push
call
mov
icebp
test
jg
sbb
in
cmpsl
test
mov
mov
jo
mov
pop
pop
incl
xchg
mov
inc
add
sti
sub
or
out
jmp
mov
cld
sbb
pop
pop
cmpsl
nop
xor
cwtl
mov
fnstcw
push
into
lahf
mov
addr16
push
sub
adc
sahf
mov
in
add
inc
rcrl
inc
clc
cmp
adc
dec
loopne
out
nop
jg
mov
xor
addr16
dec
fwait
jp
cwtl
in
es
inc
fwait
adc
ret
jle
outsl
mov
lret
repnz
add
cmp
stc
jecxz
mov
inc
inc
imul
into
mov
add
movsb
pop
pop
adc
movb
push
or
mov
data16
mov
cli
shrl
ret
mov
in
out
nop
idiv
cmc
sti
jge
fists
adc
leave
jl
mov
ss
outsb
jl
aaa
cmp
test
std
int
xchg
mov
jp
es
jmp
sti
adc
icebp
negb
mov
adc
movsl
sbb
jmp
sbb
cwtl
add
mov
je
data16
cmc
inc
pop
cld
sbb
into
in
and
out
or
ss
adc
add
out
iret
mov
cs
fisubs
div
lock
psllq
inc
hlt
lock
cmc
or
push
std
ss
cmc
push
sbb
lods
daa
nop
dec
addr16
loope
lahf
cltd
aam
xor
push
cmpsb
popf
and
dec
gs
jmp
dec
sbb
aad
scas
aas
jnp
rcr
out
cmpsb
cmpsl
sbb
add
les
pop
ja
das
mov
mov
in
cmpsb
lahf
dec
cwtl
fwait
out
insb
ret
je
push
imul
sub
xchg
mov
iret
das
dec
cmp
cld
and
jp
dec
or
rorl
into
in
xor
push
jmp
pop
or
stos
push
leave
jnp
mov
repz
iret
lea
into
fiadds
pushf
push
xor
popa
cwtl
in
mov
push
jp
mov
test
je
or
jns
jl
test
xchg
dec
cmp
inc
push
sbb
int3
stc
sbb
sbb
inc
fmul
adc
jnp
iret
cmp
aam
iret
mov
idiv
sbb
mov
outsb
test
lcall
fwait
jo
xor
dec
ficompl
test
test
and
ds
fdivrl
rcpps
or
mov
xor
repz
std
inc
or
cmp
sbb
adc
adc
es
imul
xchg
int
add
into
or
mov
pop
pop
jp
in
dec
sbb
cmp
sub
stos
shlb
sub
fnstenv
push
sub
fld1
push
in
subl
ss
sub
fdivrs
pop
pop
popa
push
cmp
jg
testb
xlat
add
fcmovne
insb
push
mov
ds
cmpsb
pop
aaa
fdivs
popf
jl
cwtl
testb
add
stos
push
push
lock
out
call
outsl
jge
mov
xchg
pop
int3
je
sub
add
sbb
test
repnz
dec
call
cmp
pop
out
jb
and
jmp
sub
decl
mov
in
aad
leave
jo
push
mov
loop
xchg
inc
mov
lods
div
mov
cmp
imul
dec
lcall
dec
sbb
fistps
jp
adc
gs
jp
push
cmp
and
or
arpl
rcr
out
mov
jle
mov
pop
rclb
shrb
and
dec
sbb
push
lods
push
jl
pop
ljmp
push
mov
pop
cmp
bound
jb
andb
sub
cld
inc
mov
cld
mov
or
mov
test
jl
and
jp
std
shll
pop
dec
sahf
ja
sub
lret
int3
out
mulb
jo
xchg
mull
sbb
fadd
mov
icebp
cmpsl
xchg
push
rclb
add
cmpsb
push
cld
mov
jg
pop
mov
lock
xor
add
ret
xchg
push
mov
pop
sti
dec
mov
ret
shll
pop
adc
jmp
xchg
sub
cli
into
push
push
repnz
ljmp
jb
pop
and
pusha
sbb
add
or
mov
mov
or
push
rorb
out
fmull
enter
pop
lret
repz
xor
jnp
pop
imul
xor
xorb
ficompl
es
in
pop
add
mulb
cmp
pushl
inc
lea
ja
fidivrl
sub
dec
dec
fld
stc
sbb
sbb
lods
sbbb
rorl
outsb
stos
jb
xchg
jne
or
pusha
mov
je
lds
ss
push
or
fmuls
adc
push
mov
cli
sti
sbb
imul
icebp
sub
mov
xchg
cmpl
xchg
push
jnp
jle
sti
sub
out
arpl
negl
out
cmp
mov
push
add
and
mov
xor
sbb
ret
sub
lcall
push
dec
addl
mov
lock
sub
sbb
sar
sub
pop
dec
sbb
mov
cmpsb
xchg
int3
sub
dec
pop
hlt
xor
cmp
test
arpl
fbstp
test
mov
subb
clc
add
mov
jl
mov
pop
jge
cmp
fimuls
cmp
mov
pop
icebp
in
sbb
lret
mov
stc
cmc
std
test
fidivl
cmpsl
cmp
push
movsb
jmp
test
imul
inc
jmp
adc
jmp
cmp
cmpb
imul
lock
popa
dec
adc
lods
jp
mov
pop
mov
out
cld
fs
lods
loop
icebp
arpl
shr
pop
inc
cmp
jnp
test
cs
mov
rcl
jle
insl
inc
fiaddl
lret
add
sub
sbb
jg
and
loope
insl
and
sub
push
pop
iret
repz
adc
mov
or
test
jge
and
pop
jns
enter
mov
sti
sbb
add
inc
and
rcl
ret
aas
rorl
cmpsl
lds
sub
shrl
mov
out
sti
sbb
pop
or
loop
sbb
rolb
xor
fwait
les
test
fcmovb
imul
or
jmp
jecxz
iret
sbb
ret
mov
movsl
xor
pop
in
mov
mov
and
jnp
xchg
rcrl
and
jbe
pop
lods
adc
imul
pop
sub
sub
insb
fists
cld
jne
adc
inc
or
mov
bound
shll
int
roll
push
mov
std
dec
jg
leave
push
sbb
mov
mov
sub
out
ljmp
cwtl
sbb
jp
outsl
clc
insb
aaa
sbb
ret
sbb
lods
mov
and
movsl
fisubrs
jbe
das
jns
sbb
lcall
xor
cmpsl
sti
cli
inc
or
add
loopne
lret
mov
lret
sub
jg
push
xchg
or
sbb
imul
jge
adc
rcll
movsb
rcll
jbe
add
fcomip
mov
das
shlb
incl
dec
es
int
jmp
mulb
or
mov
jg
and
inc
xor
jmp
pop
out
jge
outsb
sti
inc
das
pmaxsw
jmp
xor
push
sbb
mov
lcall
cli
test
push
les
ret
insl
push
jns
pusha
test
xchg
fistpll
sbb
ret
insl
xchg
cmc
aad
xor
cmpsb
cmp
or
mov
sbb
cmp
movsb
lods
cwtl
add
pop
test
imul
dec
mov
sub
sub
pop
adc
mov
xlat
in
loope
or
mov
dec
and
cmp
mov
push
mov
jp
pop
mov
jmp
imul
add
std
inc
pop
mov
xor
pop
sbb
mov
cmp
in
pop
xchg
ret
adc
xchg
insl
push
aas
jns
dec
inc
push
inc
pop
repz
jl
jle
arpl
push
or
pushaw
sbb
jg
shlb
adc
lods
pop
lods
pop
shll
test
and
jno
movsb
push
pop
dec
jae
pop
sti
sub
mov
push
mov
xchg
jmp
enter
gs
ds
sar
rcrl
dec
gs
pusha
cwtl
or
testl
jae
sbb
leave
jne
popf
adc
mov
test
add
orl
mov
rcrl
dec
pop
sbb
clc
xor
jg
aas
jp
or
ljmp
dec
xchg
jle
xor
xchg
jmp
ret
mov
sbb
adcl
pop
mov
mov
repz
xor
xchg
loope
nop
jmp
cmp
push
pop
mov
adc
shl
arpl
add
xchg
cli
sti
dec
lock
jmp
dec
iret
faddl
sub
insb
jg
xchg
jg
in
fldt
in
sbb
movsl
bound
sub
cmpsl
out
push
and
jno
cmp
cwtl
call
mov
jno
or
push
call
jmp
daa
stc
out
push
fs
xchg
int3
dec
insb
sbb
inc
mov
shr
les
xchg
lret
sub
pop
repnz
arpl
add
or
push
pop
je
shlb
outsb
xorl
or
popa
cwtl
mov
mov
lret
mov
nop
xchg
xchg
xchg
push
dec
iret
jae
cmp
pop
fistl
mov
into
fistpll
shlb
ljmp
stc
xchg
mov
fwait
push
sub
outsl
inc
cmpsb
jl
cld
into
pop
cmp
inc
or
push
xor
or
jbe
or
scas
adc
mov
flds
pusha
mov
loope
fistpll
int3
mov
fisubrs
dec
adc
insb
ss
cmp
cmp
scas
mov
inc
pop
jo
push
mov
testb
xchg
sub
enter
iret
cmp
push
jge
jg
dec
inc
call
and
int3
jp
cmp
stos
pop
push
enter
cmpsb
jmp
dec
mov
repnz
jns
xchg
jle
inc
clc
popf
in
daa
dec
jge
add
repnz
adc
pusha
repnz
inc
lcall
mov
rorl
inc
imul
clc
cmp
cld
dec
out
or
mov
inc
loope
loop
mov
xor
ja
jno
outsl
sbb
mov
sub
dec
stos
lds
repz
repnz
mov
aad
sbb
cmp
xchg
push
push
add
push
in
aad
add
sbb
ret
or
movsb
repz
mov
mov
xchg
js
daa
sub
stc
or
pop
popf
out
in
push
mov
dec
pusha
lret
lcall
pop
xor
sbb
call
jb
scas
add
sbb
das
scas
xchg
adc
call
test
jp
mov
movsb
add
std
addb
test
loop
add
imul
dec
jns
or
pusha
sti
xchg
ja
and
aas
sub
imul
jno
call
enter
jp
adc
std
dec
pop
sub
hlt
jo
arpl
pop
mov
dec
ljmp
sub
fisubs
pop
sub
adc
pop
add
test
dec
jnp
xchg
shll
sbb
fs
stos
xor
dec
mov
jecxz
cmc
sub
mov
lods
sbb
leave
push
sbb
mov
rolb
shll
ja
shrl
imul
imull
daa
mov
jnp
cmpb
jo
das
pop
pushf
push
in
sub
mov
xor
sahf
lahf
dec
mov
push
jns
jg
sub
mov
mov
add
imul
ljmp
insl
dec
pop
gs
inc
testb
test
in
inc
push
jmp
daa
sub
jbe
nop
and
push
add
xchg
mov
fimuls
add
or
insl
loop
pop
mov
jle
sub
dec
and
mov
dec
push
xchg
mov
lds
push
mov
xchg
fdivrs
jg
clc
cmpsb
mov
cli
mov
add
inc
or
pop
loop
jle
popf
jg
mov
adc
mov
push
adc
es
iret
daa
mov
stos
lods
pop
xlat
cmc
stos
add
push
cmp
dec
add
dec
adc
mov
cmp
jp
lds
jne
pop
xor
in
mov
cmc
xlat
push
das
arpl
ficoms
sti
xor
and
add
leave
xchg
jnp
lock
lods
daa
xchg
das
add
fmuls
add
test
add
popa
sbb
and
and
fdivp
repnz
mov
out
loopne
pushf
pop
xchg
ss
mov
sub
push
or
fisubrs
mov
outsl
mov
shrb
out
pop
jecxz
mov
cmpsl
mov
and
in
fsub
cmp
or
mov
mov
clc
movsl
rorb
sahf
mov
jg
iret
sub
repz
scas
ss
outsl
xor
adc
int
and
jbe
lret
les
leave
xchg
add
fiadds
push
cmp
mov
xlat
xor
jge
adc
push
adcb
stc
bound
test
loope
scas
add
fidivl
inc
inc
ret
hlt
push
imul
aad
xchg
mov
xchg
icebp
sbb
add
mov
call
pop
mov
insl
fistps
inc
add
imul
or
inc
pop
adc
scas
xchg
xchg
cld
lea
xor
pop
call
int
testl
push
adc
xor
push
add
sbbb
call
test
fs
xor
in
rorl
cmp
ret
in
jge
mov
mov
cmpsb
mov
sub
jbe
out
ret
cmpsl
dec
jne
lcall
aas
sbbl
add
stos
js
nop
sub
add
or
repz
imul
xchg
mov
lea
push
pop
mov
mov
jnp
xchg
sub
sbb
pusha
pop
pop
fidivs
jecxz
gs
ret
stos
cmp
or
orb
lcall
add
jp
cmp
cmp
mov
mov
shrb
in
fdivrs
cmp
test
mov
fsub
cli
dec
sub
jae
push
sbb
repz
add
lods
xlat
popf
cwtl
cmp
push
in
fistps
fcoms
in
mov
outsl
sub
fistpl
stos
insb
xor
sub
out
hlt
lahf
and
and
fbld
leave
lods
call
dec
mov
in
rclb
inc
pop
pop
add
dec
pop
jg
pop
push
out
test
cli
pop
ljmp
stos
js
mov
ljmp
xor
push
scas
jb
in
enter
jl
fdivp
lea
mov
jle
sti
dec
sub
pop
inc
push
push
fcompl
mov
cmc
add
cmc
inc
and
mov
icebp
aas
xchg
rorb
mov
or
sbb
and
mov
xchg
outsl
cmp
ficompl
jns
xlat
push
outsb
cwtl
cld
fisttpll
decl
icebp
sbbl
xchg
daa
push
test
sub
jo
xchg
int3
mov
shlb
data16
subb
pop
arpl
shll
add
adc
mov
lea
dec
xor
adc
in
add
mov
std
enter
pop
imul
mov
dec
or
test
enter
aam
jae
mov
cmp
sub
dec
xchg
ror
jae
hlt
dec
lcall
xchg
mov
mov
and
scas
sbb
psrad
pop
sarl
pop
sub
adc
sub
pop
inc
negl
cmp
pop
lahf
pop
sbb
testl
lahf
pop
imul
ret
loopne
out
pop
leave
xchg
shll
icebp
and
mov
jle
mov
int3
jle
iret
icebp
sbb
scas
lret
leave
shl
xor
or
mov
fistps
mov
shll
or
push
loope
clc
jns
adc
inc
fiadds
pop
or
add
push
or
dec
or
xchg
jecxz
cmc
dec
lock
sti
and
mov
pop
jb
mov
iret
clc
cmc
scas
filds
push
cmc
hlt
mov
aas
jle
stos
push
ret
adc
pusha
arpl
push
data16
fsts
jnp
and
pop
aas
movb
dec
xchg
push
aam
adc
ret
and
sbb
ds
add
dec
icebp
gs
xchg
call
ss
loope
sub
insl
push
fcoml
pop
xor
leave
xor
cmp
lock
insb
inc
adc
insl
out
shll
inc
add
lahf
adc
out
push
pop
jle
roll
pop
pop
stos
jge
shlb
lahf
push
sti
iret
into
add
jae
int
dec
pop
jbe
scas
cltd
in
xchg
stc
sub
cmpsl
cmp
lret
mov
mov
jno
mov
xchg
push
clc
cltd
aam
push
inc
dec
loopne
mov
xchg
push
cld
ret
jns
sub
outsl
inc
in
std
inc
sub
mov
push
inc
daa
aaa
dec
add
sbb
clc
fwait
mov
adc
ret
scas
lods
push
lcall
xor
lds
push
call
popf
and
andb
jne
test
ret
adc
inc
cmp
or
lret
cmc
cmp
push
lods
aad
imul
movl
addr16
or
lret
movsl
push
bnd
adc
aas
fcoml
xor
aam
xchg
rol
fwait
mov
sub
add
popf
mov
sbb
loop
sbb
stos
movsb
jo
stos
adc
xlat
stos
xchg
or
into
cltd
test
data16
in
pop
rcrl
cmp
mov
ljmp
gs
aaa
push
icebp
jmp
add
jp
out
mov
xchg
dec
push
sub
leave
cmp
lock
mov
jne
jmp
fs
add
scas
std
test
aaa
movsl
and
pop
lods
fidivs
sub
cltd
in
outsb
sbb
push
cmpsl
fldcw
shll
mov
mov
push
push
adc
popf
add
xor
test
aas
mov
fsubrp
and
inc
add
js
jbe
pop
mov
cwtl
stc
and
xchg
cmpsl
mov
xlat
sarl
andl
jl
push
mov
jl
push
xchg
pop
out
lret
push
enter
fldl2e
cmp
xlat
popa
fsubl
adc
in
cld
jns
pop
ds
loope
dec
pop
lods
or
push
mov
push
or
leave
lods
subb
lcall
xchg
in
jmp
ja
mov
jbe
mov
into
fistpll
int3
stos
jl
mov
jl
addr16
pop
daa
sbb
or
int
daa
inc
loope
dec
clc
rcll
shll
jb
mov
push
sbb
cld
dec
lods
es
dec
xor
xchg
fadds
or
lods
iret
and
lods
movsl
sbbb
pop
inc
xor
push
stos
push
idivb
xor
xchg
adc
in
add
ret
xor
pusha
ret
arpl
mov
or
rolb
mov
jbe
xor
xor
push
imul
ret
rcrb
mov
push
push
js
sub
clc
push
daa
push
dec
shrl
es
mov
fwait
mov
mov
jns
xchg
mov
push
mov
mov
pop
sub
mov
jae
in
xlat
in
jbe
outsl
stos
bound
mov
or
or
andl
or
cld
repz
pop
clc
int3
stos
dec
int3
xchg
sbb
mov
repnz
and
ljmp
orb
movsl
sbb
push
cltd
sub
sahf
clc
repnz
sub
xor
jnp
or
cmp
clc
mov
ss
lods
push
add
jle
lcall
fs
and
sbb
and
jb
mov
or
imul
call
xchg
addr16
pop
pop
jp
fdivrs
or
cmpsb
add
add
pop
add
inc
fs
popfw
xchg
gs
jns
aad
js
out
cs
pusha
or
mov
jb
fs
cmp
push
pop
cld
pop
sahf
arpl
and
sahf
loopne
jge
mov
jl
lret
fisttpll
cmc
push
enter
xlat
cmp
sub
push
inc
xlat
movsl
fstl
xor
dec
iret
cld
das
aaa
or
incb
outsl
cmpsl
xor
jecxz
in
sbb
adc
mov
pop
jns
loop
push
repnz
jl
std
adc
cmp
jle
repnz
loopne
xchg
push
jg
lret
pop
xchg
sub
mov
movsb
mov
jb
sub
mov
mov
jae
roll
push
mov
inc
mov
daa
lret
arpl
inc
cwtl
ljmp
jge
mov
sbb
shl
aas
in
adc
les
jbe
jle
icebp
push
xchg
adc
xor
enter
pop
call
push
imul
nop
aas
jl
sub
fimuls
dec
shrl
shrb
out
or
notb
mov
fadd
mov
inc
fstpt
js
idivb
jo
cmpsb
dec
add
clc
mov
cli
mov
pop
pop
mov
dec
lret
arpl
xchg
js
addr16
jo,pt
leave
mov
fildll
pop
sub
add
or
ror
mov
roll
sahf
test
loopne
sbb
sub
add
xlat
test
negl
mov
xchg
mov
out
cmpl
std
test
push
lock
lret
rorl
inc
add
sbb
mov
fnstsw
inc
or
inc
test
push
xor
test
ret
dec
sub
test
movsl
mov
repz
inc
cmpsl
pusha
xchg
sbb
pop
stc
iret
push
jns
xchg
xchg
movsl
fdivrs
ja
out
clc
adc
daa
push
adc
lock
mov
jl
inc
jge
stc
lahf
mov
icebp
sbb
mov
popa
roll
int
xchg
jb
dec
pop
stc
xchg
or
mov
inc
imul
adc
iret
lea
pop
js
ret
or
sub
sub
push
sahf
or
sbb
lods
out
push
js
push
mov
shll
idivl
outsl
shll
lret
add
xchg
adc
add
jnp
in
or
mov
pusha
or
cmp
add
outsl
sbb
dec
add
pop
ret
or
stos
xchg
icebp
movb
or
clc
sbb
adcb
or
cmp
push
popa
dec
xor
sbb
clc
inc
nop
lcall
sbb
cwtl
jl
ja
mov
jno
sub
push
and
ja
out
bound
add
out
lods
xorb
divl
jle
jne
push
fcoml
mov
mov
jns
sbb
jo
xchg
dec
jae
inc
push
push
daa
ret
jne
push
scas
add
mov
lods
lret
xor
int
push
and
mov
bound
sbb
test
in
mov
pop
xchg
jge
push
bsr
jle
mov
scas
cmpsl
daa
inc
into
mov
jmp
and
fisubl
frstor
cmp
and
pop
popf
ret
lea
xor
cmp
jmp
mov
or
lds
adc
dec
mov
aaa
pushf
aas
enter
jle
scas
jno
mov
test
orb
push
cmp
lret
repnz
push
pusha
in
mov
repz
push
mov
cs
inc
add
cmp
cmp
sbbl
clc
lahf
movsl
mov
cld
faddl
or
sub
stc
fadd
jge
mov
test
add
mov
insb
ljmp
inc
or
ljmp
cmp
pop
repz
mov
fwait
arpl
sahf
jl
sub
mov
add
notl
push
mov
lock
push
fdivl
or
mov
repnz
jae
ficomps
rcrl
or
setle
xchg
faddl
add
clc
fldcw
shr
test
adc
inc
push
adc
ljmp
sti
sahf
sbb
jg
jp
pop
push
cmp
push
jmp
dec
rcrl
in
sbb
cmp
lods
in
fucomi
insb
aas
mov
sub
push
aam
adc
mov
call
mov
xchg
push
mov
stos
daa
cld
pushf
jp
scas
mov
movb
in
loop
inc
lcall
cmp
xchg
cmp
xor
cmpsl
aad
imul
pminsw
push
movsb
and
pop
into
fmuls
mov
add
mov
fwait
js
ljmp
or
iret
fidivrs
mov
ficomps
or
test
xchg
hlt
add
pop
jne
fisubrl
mov
imul
pop
rcrb
jb
mov
push
mov
fs
hlt
add
and
dec
inc
inc
push
push
jmp
or
xchg
inc
inc
and
mov
cltd
push
push
in
and
push
pop
insb
shr
add
fdiv
data16
rorb
stc
sub
lock
push
fstps
cmp
xchg
or
xchg
add
xor
mov
popf
lret
xchg
subl
xchg
mov
sbb
imul
jmp
xchg
lcall
imul
pop
sti
data16
fwait
loop
fwait
push
jb
rcrb
call
jmp
in
jp
in
call
or
push
jo
ljmp
cmp
xchg
out
jne
mov
loop
stos
cmpsl
jmp
pop
xor
decl
in
jb
pushf
cmp
loopne
sti
inc
imul
popf
aad
mov
pop
sub
cmpb
shlb
and
mov
mov
leave
xor
repnz
add
cmpsb
cli
sti
jge
cwtl
push
lret
xchg
lret
mov
cld
sbb
or
sub
std
dec
adc
jl
pop
jl
fistpll
test
mov
push
lret
cmp
test
inc
daa
sub
iret
shll
jns
mov
dec
lds
sti
cmpsl
xchg
jmp
in
rcrl
mov
aam
jne
mov
push
insl
jmp
repnz
icebp
push
xchg
cmc
imul
cli
mov
pop
adc
into
movsb
cmp
adcb
sarb
lods
stc
shll
hlt
sti
sti
adc
inc
push
in
cmp
ret
sbb
das
pop
rcll
xchg
dec
sbb
loope
dec
outsb
inc
push
add
clc
mov
jmp
mov
sbb
xchg
pusha
mov
add
cmpsb
mov
push
jne
mov
mov
jp
sub
daa
nop
xchg
mov
mov
mov
scas
es
mov
xor
push
inc
arpl
jg
jg
sub
jnp
mov
push
dec
or
loop
iret
adc
jns
jmp
xor
lea
jmp
dec
sbb
mov
outsl
push
adc
fldenv
rclb
xlat
mov
push
xchg
faddl
nop
arpl
dec
imul
xchg
enter
dec
imul
push
adc
jg
movsb
divb
cld
inc
adc
loope
or
aaa
stc
dec
call
mov
jecxz
xor
jne
jo
lock
mov
mov
jbe
sbb
mov
jo
lret
inc
dec
sub
andb
ja
jp
gs
mov
or
fistps
jns
jno
je
rorb
dec
and
jmp
ss
fneni(8087
cmp
imul
fwait
sbb
dec
xor
xor
mov
insb
test
jne
in
add
daa
cs
push
dec
lcall
lret
pop
test
mov
mov
sub
ja
pop
jg
jne
jb
dec
popf
nop
push
mov
aam
or
inc
cmp
aam
pop
rcl
push
incl
adc
cli
or
jne
mov
pop
movsb
inc
nop
mov
lcall
pushf
add
lock
and
sbbb
scas
sbb
cmp
dec
adc
lods
add
dec
roll
adc
in
arpl
imul
pop
pusha
rcl
add
ret
sub
xlat
pop
xchg
mov
or
xchg
xor
lahf
cwtl
xor
movsb
push
pusha
imulb
mov
sub
and
xor
xor
into
fisttpll
pop
out
in
mov
in
je
call
sarl
imul
shrb
aad
add
pop
mov
sbb
cmpsl
xchg
mov
jle
es
push
sbb
cmp
sarb
sbb
inc
sub
add
xlat
cmp
scas
pop
push
and
add
sbb
push
push
inc
lcall
push
jae
loope
cld
mov
test
push
test
jae
pushf
push
sub
imul
or
lock
sub
push
pop
or
add
ja
fisttpl
or
mov
pop
pop
enter
rorb
popa
mov
push
int3
sbbb
test
cmp
cmpsl
incl
je
out
inc
mov
jns
aad
mov
inc
movsl
fnstsw
mov
popf
add
or
pusha
lcall
or
lods
add
cwtl
jg
xchg
push
loop
push
mov
aaa
icebp
or
mov
sub
sbb
data16
pop
push
push
inc
mov
sbb
xchg
mov
rcrb
into
xor
add
dec
ss
pop
or
jbe
sti
call
dec
repz
dec
fcoms
lahf
push
push
jo
popf
rcll
das
stc
sbb
cmpsl
push
sub
jno
inc
adc
mov
jg
add
xchg
mov
orb
jle
test
pop
sub
hlt
sahf
les
add
divb
out
mov
fldcw
pop
jo
add
ss
mov
lcall
frstor
notb
or
mulb
and
jns
adc
add
adcl
jae
jnp
adc
adc
in
aas
ret
rcll
xchg
pop
sub
mov
jmp
mov
loope
and
lock
push
push
push
loop
lods
lds
shl
mov
inc
aas
cmp
pushf
gs
cmpb
xchg
adcl
push
sbb
fisubs
lods
pop
xchg
mov
adc
ds
sub
dec
cmp
imul
fistpll
fiaddl
add
pushf
jl
push
push
sbb
adc
out
loope
call
daa
int
fucomip
pop
cmpps
add
cli
out
popa
cwtl
sbb
mov
adc
aam
negb
push
mov
inc
pop
adc
or
adcb
lahf
out
aaa
je
out
mov
cmp
fsubp
mov
add
mov
out
sqrtps
mov
cmpsl
xor
add
xor
arpl
es
adc
addr16
mov
cmp
dec
daa
jbe
sbb
lds
adc
loope
inc
hlt
in
xlat
or
pop
mov
mov
mov
pop
lods
icebp
xchg
jge
mov
cmp
push
imul
fisttpl
je
das
fmuls
insl
dec
jae
lds
lret
lds
leave
in
dec
in
call
sub
lds
inc
jmp
insl
add
aas
mov
push
lods
mov
jl
adc
dec
mov
cld
pop
fadds
mov
jl
cld
mov
inc
dec
lss
stos
xor
mov
dec
and
adc
xchg
nop
sub
shlb
insb
dec
lgs
xchg
add
imul
cmp
fcomps
jae
push
adc
mov
xor
das
mov
mov
ret
push
jb
out
fcmovnb
arpl
push
xchg
xchg
cld
cltd
ljmp
fsubr
jmp
nop
xchg
mov
mov
lcall
fstp
inc
xor
fwait
sar
push
in
mul
add
ljmp
faddl
mov
fnstenv
in
sub
dec
lock
xchg
fdiv
aam
sti
mov
nopl
cmpsl
xor
xchg
mov
in
dec
pop
popf
cmpb
sub
pop
mov
xor
sub
jb
sub
inc
mov
sub
push
stc
fnstcw
cmp
scas
stos
mov
out
mov
xchg
aam
sub
and
lret
data16
arpl
adc
xchg
inc
fidivrs
jl
pop
cmp
adcl
loope
and
or
or
pop
lock
fmuls
adc
xchg
sub
mov
push
push
jne
aad
mov
cmp
jge
jnp
aad
mov
jge
fnsave
cltd
xchg
negb
das
stos
adc
pop
out
adc
in
inc
inc
movsl
add
pop
addr16
test
mov
sub
je
scas
mov
sub
test
xchg
xor
pop
nop
es
sbb
xchg
rolb
dec
sbb
xchg
inc
inc
mov
movsb
fbstp
repnz
lock
loopne
jmp
jmp
add
ja
push
test
lret
mov
xchg
dec
fs
jp
add
xchg
leave
fnstsw
cmp
sahf
xor
inc
test
test
fisttpll
int
lcall
outsb
mov
lret
mov
into
and
into
and
pop
sarb
or
clc
adc
fiadds
mov
pusha
js
pop
pxor
mov
out
rcrb
test
cmp
lret
jno
add
fwait
dec
rcrl
xor
add
pusha
sbb
lcall
cmpsl
cmp
xor
xchg
xchg
xor
or
adc
add
push
cmp
pop
xorl
test
add
jge
pop
mov
cmp
jno
xor
ret
pop
ret
cwtl
mov
movsb
mov
mov
out
mov
or
movsb
clc
lea
sbb
adc
enter
insb
cmpsb
ficoms
and
cmp
cltd
addr16
lods
out
into
mov
scas
sbb
xorb
clc
lret
mov
pop
xchg
adc
dec
adc
xchg
xchg
lods
push
stos
or
outsl
add
lahf
outsb
fcmovne
pop
das
mov
or
stos
pop
out
sbb
xchg
pop
adc
push
fidivrs
nop
add
cmc
xchg
sbb
dec
jb
push
inc
mov
add
jecxz
and
cmpsl
adc
bound
inc
insb
filds
aaa
subl
pusha
jl
jp
xchg
mov
pushfw
and
jae
cli
ret
sub
ret
pop
mov
push
insl
dec
rorb
or
or
mov
xor
movsl
mov
andl
les
rcrb
inc
or
insb
dec
sbb
gs
mov
rol
stos
pop
pop
jmp
stos
xchg
sbb
cmp
or
sub
add
jp
pop
ss
inc
in
mov
addb
cld
xor
push
data16
fistl
sub
mov
cmpsl
imulb
adc
dec
pop
push
mov
mov
adc
or
or
jo
or
insl
or
mov
fisttps
pop
lds
inc
pop
sahf
daa
cmp
aad
mov
jno
or
enter
sbb
cmpsb
inc
fs
cmc
es
cmp
mov
jge
cli
int
clc
cs
xchg
xchg
sub
pop
sahf
shlb
jle
addr16
dec
std
cs
cmp
loopne
sbb
fs
daa
add
punpcklbw
test
inc
pop
dec
inc
test
mov
sbb
sbb
mov
jbe,pn
xor
xchg
or
lods
lea
fcom
pop
sub
adcb
mov
lcall
fwait
mov
fidivl
push
xchg
sbb
xor
fbld
or
mov
dec
icebp
inc
or
clc
repnz
adc
pop
pop
in
inc
jne
mov
clc
scas
xor
test
push
cmpsb
insb
mov
dec
inc
leave
pop
sub
ss
add
pushf
xchg
xchg
mov
jae
mov
lret
das
into
ret
jmp
mov
xor
ds
pop
fisttpll
filds
adc
adc
and
push
stos
cwtl
pop
xchg
stos
mov
inc
out
pop
cmp
test
adc
add
xlat
inc
xchg
push
adc
and
and
or
mov
fwait
pushf
fs
cld
stc
insb
jl
pop
imul
mov
iret
pop
push
xchg
xor
cli
sti
mov
fiadds
test
cltd
pop
out
sub
xchg
in
repnz
jmp
cmp
pop
xchg
jbe
fwait
jecxz
sub
orl
pop
pusha
xlat
shrl
xchg
fiadds
push
out
fsubl
jno
push
cltd
rcr
and
inc
or
and
mov
push
ja
mov
lret
push
sub
xor
shr
or
test
daa
push
cmp
ret
cld
lds
pop
xor
xor
test
daa
in
jno
lea
or
mov
inc
das
stos
add
mov
scas
pop
and
fistpll
mov
jnp
fstl
test
test
push
and
and
inc
and
xchg
cmp
in
in
movsl
leave
rorl
inc
aam
jecxz
mov
fucomi
mov
xor
aam
rolb
imul
aad
lret
pop
ret
inc
std
and
mov
addb
scas
scas
lret
dec
sbb
ss
fs
dec
aas
push
icebp
std
mov
aas
nop
lret
imul
xlat
out
stc
adc
popf
inc
lret
aad
mulps
or
push
add
bound
fcmovne
cmp
mov
shlb
adc
xchg
fstl
xorl
mov
sub
inc
or
les
cmpsl
xor
cmpsl
sub
aas
mov
jl
jmp
push
pop
pop
mov
call
stos
test
loope
inc
add
test
fldcw
and
arpl
dec
movsl
lock
nop
std
imul
mov
jns
xchg
loope
and
push
mov
push
cs
sub
add
nop
or
add
xor
cmp
daa
call
xchg
cmpsl
iret
repz
int3
imul
imul
add
jbe
cld
cmp
mov
lds
ror
mov
adc
imul
push
mov
movsb
cwtl
aas
or
add
and
ret
mov
add
insl
insl
jecxz
pushf
es
jge
outsl
clc
mov
mov
fidivrs
mov
mov
inc
cmp
imul
scas
jne
push
add
push
in
add
sub
cltd
push
pop
cmpsb
cmp
decb
aas
jle
addl
xchg
fidivrl
aas
jge
in
test
hlt
sub
or
pop
jge
jp
push
mov
cmpsl
fisubrs
idivl
out
pop
push
sbb
and
sub
rolb
jp
xchg
in
sub
jnp
insb
or
invd
mov
push
inc
inc
std
xchg
inc
aad
and
sub
xor
xchg
in
push
mov
xchg
xchg
mov
lret
lret
fdivs
dec
out
and
loopne
stc
sahf
xorb
repz
pusha
pop
dec
rorl
jmp
xchg
push
inc
inc
adc
lods
psubusb
push
adc
fsubrl
rclb
cltd
inc
xor
xor
rorl
test
mov
stc
dec
mov
xor
out
enter
xor
xor
dec
or
jp
sub
in
cmc
inc
loopne
cmp
and
mov
add
arpl
mov
and
add
push
cwtl
aas
es
mov
bound
shll
and
jle
pop
ljmp
xchg
inc
movsb
sbb
mov
scas
bound
sbb
and
lcall
add
loop
call
loope
sub
mov
das
test
mov
or
push
das
inc
jl
xchg
push
vmread
push
mov
negb
jg
je
mov
cmp
mov
add
and
bound
jnp
pop
negl
adc
jb
add
inc
lea
imul
inc
cwtl
xchg
sahf
lahf
adc
in
pop
xchg
int3
or
je
pop
ja
std
fnstsw
in
or
cmpsl
js
adc
cmp
dec
sub
or
pop
pop
inc
imul
sbbb
xchg
and
movsb
adc
and
icebp
sbb
dec
push
inc
aad
lret
mov
in
push
int
pop
inc
clc
bound
dec
mulb
jg
out
mov
in
jmp
and
xchg
mov
inc
pop
mov
repz
sub
sahf
out
out
push
ljmp
inc
jle
call
stos
add
mov
scas
add
lret
xchg
sarl
jo
push
fs
jge
rcl
out
daa
jo
and
push
adc
or
mov
cmp
jecxz
ret
in
mov
jle
jge
mov
rorb
sub
dec
mov
mov
pusha
cwtl
out
xor
pusha
pop
dec
test
ror
sub
pop
data16
lods
cmc
jnp
dec
lock
mov
dec
call
in
cli
rcrl
push
lret
jge
sbb
ret
inc
dec
adc
inc
add
rcl
cltd
adc
loopne
pop
xchg
fsubr
mov
and
jbe
cmpsb
jbe
add
cli
mov
cmp
in
adc
xor
jo
lods
push
xchg
adc
cli
mov
into
out
jnp
adc
lock
cld
xchg
pop
loop
shll
dec
cwtl
shl
mov
dec
and
cmpsl
decb
inc
movsb
xlat
pop
cmc
add
insl
movb
sbb
jl
test
roll
push
mov
xlat
loope
and
pop
scas
mov
mov
dec
loopne
adc
jle
cmpb
mov
insl
out
sti
and
mov
mov
ja
and
lahf
lds
mov
popa
adc
push
jecxz
xchg
pop
cmp
dec
adc
fsubrp
divl
jge
push
lods
repz
imul
loop
pop
sti
notl
ss
sbb
or
adc
out
xchg
cmp
mov
divl
out
pop
cmpsb
test
dec
rol
xor
mov
mov
loop
jns
fldenv
push
mov
sbb
jg
xchg
add
iret
inc
and
mov
enter
popa
jge
ja
add
mov
jle
jl
jl
stos
ret
je
inc
or
dec
or
mov
pop
xor
jge
and
and
fidivrl
repnz
popf
ss
mov
mov
add
fdivrp
popf
dec
jmp
dec
sub
movsl
fcmovb
jno
push
ljmp
jle
arpl
mov
enter
les
xchg
push
sub
dec
xchg
std
push
ds
pushf
cld
call
inc
pop
pop
dec
adc
mov
insb
xlat
popa
jl
ss
repnz
fisubs
pushf
jle
shll
int
int
xorl
lcall
push
sbb
std
btr
pop
push
subl
ret
pop
mov
std
sbb
mov
leave
push
fisttpl
jne
js
ror
ret
cmc
imul
or
roll
pop
or
inc
mov
cmc
push
and
cmp
mov
sub
xchg
sub
inc
mov
xlat
mov
jl
negl
pusha
filds
cmp
push
lods
test
jmp
insl
jnp
dec
mov
movsl
fisubrl
jecxz
mov
xchg
into
sar
sbb
stc
or
sti
mov
pop
aas
int3
adc
push
mov
cmp
cmpsb
lock
jns
stc
lods
psrld
jo
or
sbb
mov
cmp
fnstenv
mov
cmp
sbb
into
insb
dec
aad
mov
xchg
inc
sub
inc
add
mov
test
je
sbb
fwait
movsl
sar
std
dec
inc
add
jae
push
sub
das
or
repz
dec
movsl
in
pop
or
fwait
dec
and
jge
push
es
cs
jp
lret
mov
enter
mov
pusha
push
sbb
mov
gs
cmp
jbe
in
mov
mov
push
or
add
daa
je
dec
lret
bound
lret
repz
fimuls
pop
sub
sbb
fs
cmc
xchg
int
jmp
mov
jbe
shrb
mov
sbb
sbb
cmpsb
addr16
cmp
sbb
scas
pop
movsl
fcmovnb
jno
cli
jge
out
xchg
jg
push
fstpt
add
iret
cltd
xchg
sbb
fsubrs
mov
js
cwtl
add
popf
adc
adc
stos
xor
mov
sbb
jl
shlb
test
add
dec
adc
pop
leave
and
loopne
xchg
xchg
cmc
cmpsl
xchg
cmp
stc
mov
loop
ffreep
aam
mov
lret
mov
sbb
lret
ror
pop
jno
insl
pop
lret
jbe
sbb
shll
jns
sbb
enter
ja
mov
int3
int
sub
jl
add
cmp
in
stc
js
icebp
jge
outsb
jle
hlt
lea
rclb
call
js
jbe
add
dec
cwtl
fucomip
not
out
das
mov
scas
jge
fimull
jno
insl
or
cmp
cmp
mov
mov
sub
stc
and
imul
xchg
ds
jae
jb
cmp
ja
jmp
pop
jmp
push
call
jmp
add
xchg
inc
push
cmp
lock
sahf
dec
into
jmp
push
ljmp
addr16
push
mov
jno
add
aas
inc
jne
push
insb
fcmovnb
mov
sub
shll
mov
or
add
xor
mov
inc
repnz
mov
sub
inc
pop
movl
push
insl
xor
sbb
inc
cmp
pop
pop
xlat
sub
stos
addl
cmpsb
dec
imul
xchg
hlt
xchg
in
jecxz
adc
push
jnp
dec
cmpl
mov
gs
fmuls
shl
sbb
fbstp
negl
mov
push
mov
push
mov
sbb
adc
es
mov
adc
add
push
daa
pop
cmp
test
push
mov
ljmp
and
ret
xor
add
or
mov
shlb
pop
mov
xchg
lods
mov
mov
fs
popa
pop
nop
push
iret
dec
aam
mov
pushf
out
add
in
mov
jmp
xor
jne
imul
fcmovnb
jne
aad
stos
negl
inc
cli
cmc
fdiv
ljmp
pop
mov
pop
cmpsb
shrl
xor
jcxz
push
fdivrl
popf
cmp
mov
inc
add
sbb
jge
mov
lahf
fcoml
neg
push
shrb
adc
mov
lock
push
scas
jmp
cmp
mov
xchg
daa
dec
push
xchg
adc
adcb
imul
pop
jmp
stc
jns
sarb
pop
fcomps
pop
mov
ljmp
ljmp
dec
sub
insl
test
movsl
mov
mov
cmp
push
in
sbbb
inc
iret
dec
mov
hlt
jae
jo
push
add
xchg
add
outsl
mov
pop
sbb
lret
push
pop
mov
cmpsb
movsl
insb
jg
add
lret
shll
stc
fcompl
adc
rorb
popa
ss
ret
xor
lods
push
and
inc
add
insb
jns
nop
sub
add
sarl
jb
sub
sti
jnp
xchg
push
leave
fwait
and
push
push
cli
stos
out
mov
arpl
aaa
ljmp
loopne
lock
popa
dec
inc
and
adcl
and
jbe
mov
iret
jecxz
aas
bound
sbb
lds
test
inc
lds
sbb
sub
push
inc
fsubr
and
add
cmp
inc
ljmp
cmc
mov
cmp
push
out
cld
ds
fcomip
push
pop
cld
es
out
jle
ret
pop
shll
mov
insb
fcmovnb
mov
aaa
sub
sub
out
push
insl
pop
outsl
mov
scas
jle
sbb
push
push
sub
cli
sbb
lcall
add
cmp
popa
sbb
pop
cltd
add
mov
or
stos
add
mov
pop
test
xor
cmpsb
mov
shr
and
shlb
push
push
xchg
adc
inc
and
sub
cmp
test
loop
push
pop
iret
lds
cmp
test
lret
cmpsl
add
mov
adc
enter
jge
frstor
inc
and
jb
push
and
scas
aam
pop
addl
les
push
push
jae
add
pop
fimull
fs
dec
cmc
aad
test
lea
mov
mov
dec
insl
neg
les
rol
mov
aad
outsb
cmp
testb
mov
xchg
push
test
push
data16
int
stc
repnz
mov
pusha
cli
pop
mov
pop
clc
sub
bnd
pop
and
mov
fnsave
rcll
mov
mov
xlat
fbld
icebp
jb
rcl
add
incl
lock
jbe
ficoms
inc
mov
or
xchg
pop
cmpsl
sbb
jmp
pop
inc
addb
xchg
lea
adc
inc
popa
inc
fcomip
icebp
jp
lret
inc
les
insl
js
push
lahf
jo
test
mov
xor
cmp
mov
xor
inc
push
xchg
js
das
out
out
adc
ja
mov
subl
outsb
pop
or
je
into
cli
push
sbb
mov
xlat
jecxz
lea
dec
mov
stc
sub
in
inc
sti
fwait
cmpsb
movsl
cmp
xchg
inc
and
cli
lcall
outsb
mov
call
pop
jno
ss
sbb
sti
add
xchg
fsubrl
mov
push
adc
cmp
pop
test
fwait
push
movsb
pop
and
lcall
idivl
and
xchg
inc
nop
test
in
sahf
rclb
sbb
push
cmpsb
or
inc
adc
or
inc
inc
or
add
stos
inc
pop
jne
std
add
xchg
add
jb
movl
pop
or
or
popa
fists
inc
sub
xlat
shl
inc
repnz
add
xlat
mov
out
insl
xor
sub
push
pop
sbb
mov
ret
and
shlb
xchg
gs
xor
movsl
icebp
jl
add
mov
mov
and
je
cmp
add
push
fldt
mov
mov
sub
push
mov
or
cmp
lret
shlb
mov
popa
adc
mov
sbb
and
sbb
dec
lea
jl
aas
notb
movsb
xchg
jmp
dec
add
aas
outsl
fstps
out
pop
call
cmp
cmc
push
mov
int
cmpsl
jge
pop
jp
dec
or
imul
and
and
and
sub
jo
lods
shl
jge
inc
inc
sub
xor
add
cmc
test
cltd
sahf
sbb
sti
js
test
mov
or
mov
or
ret
jg
jne
subb
jl
dec
mov
sub
adc
sbb
fsubl
adc
das
pop
int3
mov
xor
arpl
inc
jle
cwtl
icebp
cmp
ljmp
xchg
fiaddl
aas
ja
mov
imul
jge
ret
imul
mov
fnstenv
not
mov
cmpsl
xchg
dec
out
sub
push
push
or
in
dec
mov
jnp
jb
mov
loope
push
sti
and
test
stos
lods
and
sub
andl
jo
mov
jmp
pop
movsl
push
push
mov
or
dec
aas
imul
sub
sub
call
mov
jg
rolb
xchg
addb
stc
inc
or
push
add
or
xlat
xor
mov
push
test
fwait
lock
sahf
lret
test
addr16
cmp
aaa
lahf
add
and
xchg
inc
pop
or
popa
jl
bound
and
movsb
inc
js
mov
sahf
leave
pop
pop
mov
gs
aaa
add
inc
cmp
pop
sbb
stc
ja
adc
sub
pop
sub
enter
rcl
mov
ds
dec
rcll
rol
mov
insl
fstps
out
jne
sahf
cmp
in
sub
xchg
dec
fcoml
lods
add
and
dec
inc
inc
push
lahf
and
clc
jmp
cmp
or
daa
mov
inc
gs
loopne
sub
jns
xchg
xchg
into
popf
fdivs
add
loopne
jecxz
dec
test
cmp
fcomip
scas
mov
test
pushf
jg
sbbl
insl
add
lahf
sti
sbb
fstl
sbb
xchg
and
or
inc
add
or
and
mov
addl
mov
xlat
adc
xchg
adc
lock
loop
lds
sub
lret
xorb
in
sbb
xchg
pop
movsl
dec
inc
inc
mov
dec
mov
loope
mov
shll
aas
jp
sti
pop
jecxz
pop
daa
fnstcw
mov
xchg
test
movsl
lret
test
fdivp
sub
xchg
imul
xor
or
arpl
outsl
fsts
out
jno
pop
push
inc
mov
inc
xchg
sub
hlt
in
xor
out
test
sbbb
icebp
loopne
pop
in
or
push
subb
arpl
adc
or
lret
into
mov
test
add
mov
loopne
sub
leave
push
outsb
xor
iret
cli
call
mov
xor
int3
int3
adc
cwtl
mov
data16
filds
xchg
xor
adc
or
push
call
mov
rclb
or
and
sub
mov
jle
andb
xlat
inc
sub
lock
mov
dec
and
jmp
pop
aas
dec
pop
outsl
jle
daa
sbb
clc
jbe
fwait
ljmp
leave
repnz
jmp
loopne
lds
cmp
push
and
push
js,pt
lret
jecxz
sub
jnp
pop
xchg
subl
and
adc
pusha
imul
inc
adc
mov
sarw
xor
lods
arpl
or
adc
fmuls
push
mov
dec
push
dec
add
iret
fsubrs
add
mov
push
shll
mov
and
and
jno
adc
xchg
bound
sub
mov
mov
das
adc
mov
inc
adc
xor
fsubs
mov
or
sbb
sbb
out
pop
mov
repz
mov
adc
push
rcrl
cwtl
aam
push
mov
fs
and
dec
mov
call
sbb
jb
fmull
std
aaa
loope
mov
pop
cmp
dec
jle
lret
ret
sub
aad
cmpsb
gs
aad
lods
in
push
popa
push
or
rclb
ficomps
repz
cmp
push
stc
cli
and
or
bound
inc
popa
mov
add
insl
jcxz
push
fdivr
or
imul
ja
loopne
insl
cmp
pop
xchg
enter
lods
and
or
adc
mov
adc
jg
mov
lea
scas
adc
mov
in
daa
call
mov
dec
cmp
sbb
dec
xchg
addr16
mov
in
notl
adc
sub
add
lods
and
insl
fwait
sbb
dec
lock
lahf
cmp
xor
lock
or
jle
jns
mov
les
and
loopne
fs
insl
fdivs
sbb
ret
add
pop
inc
mov
xchg
dec
adc
mov
in
push
jmp
mov
cltd
mov
mov
test
test
cli
cli
xor
cmp
ljmp
or
mov
daa
xchg
and
jp
fmul
mov
adc
and
push
sub
dec
in
lcall
ss
sub
inc
fs
insb
mov
or
fwait
add
loop
push
gs
scas
mov
lret
outsl
mov
fsts
mov
or
std
popa
mov
fnstsw
xchg
insl
xchg
and
sub
test
lret
inc
or
jle
lds
mov
pop
mov
xchg
aam
sbb
sahf
lcall
inc
into
stos
xchg
pop
call
jnp
mov
jp
notb
cmpsb
xor
jno
lods
cmpl
jne
add
add
mov
ljmp
xor
cltd
dec
rol
xor
cmp
xchg
lods
mov
aaa
or
hlt
mov
das
arpl
sbb
sub
pop
mov
fcompl
jl
inc
testb
push
ja
pop
test
adc
ret
jge
ss
or
loopne
flds
cwtl
or
shl
pop
outsl
push
andnps
pop
insl
and
push
dec
push
sahf
jl
out
cltd
push
mov
inc
push
or
sbb
mov
cwtl
jb
push
aas
jge
add
push
push
jns
pop
mov
mov
fsubrs
aas
add
call
ret
mov
loopne
aad
out
mov
pusha
mov
fisubl
rcrl
push
test
cmc
out
mov
mov
xor
hlt
cmpsb
imul
jbe
xchg
sbb
xor
cmovl
sub
pop
mov
insl
and
xchg
mov
scas
addl
xchg
or
cmpl
rcll
xor
in
movsb
les
loop
fnsave
adc
pop
jg
or
out
popa
push
and
fdivrl
or
jle
mov
lret
outsb
xchg
cmpsb
arpl
dec
lea
test
mov
mov
pop
xchg
mov
stos
mov
sub
jle
and
xchg
add
inc
sub
jo
lods
dec
cs
sti
xor
orb
movsl
push
mov
push
sahf
icebp
movsl
and
aam
sub
push
sbb
xor
subb
pop
lds
sti
cmpsl
inc
inc
and
sahf
mov
adc
fs
pusha
repnz
and
sub
imul
enter
add
push
and
and
jecxz
lds
add
sub
popa
sbb
shlb
push
insl
lods
std
mov
cmp
inc
nop
outsb
mov
icebp
sahf
jg
dec
mov
xor
xorb
mov
scas
xor
mov
insb
and
mov
push
xor
ret
xchg
mov
fidivl
insl
adc
adc
add
lock
xchg
push
stos
xor
or
push
lds
xchg
dec
data16
dec
mov
add
inc
int3
faddl
xchg
inc
xor
push
addb
and
or
int3
inc
dec
push
xchg
icebp
gs
xchg
inc
cwtl
in
rep
movsb
insl
mov
inc
jns
shrl
repz
mov
std
mov
dec
mov
insl
xor
xor
aas
shrb
xor
cld
add
xor
cld
pop
cmp
add
in
jbe
push
aam
nop
adc
mov
pop
cmp
lea
mov
scas
or
sub
loop
pop
mov
add
inc
stc
or
push
or
popf
push
inc
mov
mov
ss
xor
mov
leave
xorb
inc
add
in
mov
cltd
or
cltd
inc
add
mov
push
enter
ds
jp
sub
adc
leave
in
adc
inc
ja
data16
add
xchg
outsb
lea
imul
lahf
clc
ljmp
insl
inc
fimuls
inc
sub
push
ds
fdivrl
or
mov
mov
add
push
cmpsb
inc
sbb
add
shrl
cld
in
or
push
xor
mov
stos
cmc
sub
jp
mov
mov
fiaddl
or
inc
or
xor
push
fs
aam
pusha
out
scas
or
rsqrtps
aas
pusha
jmp
cmpsb
pusha
xchg
dec
aas
mov
arpl
sub
mov
jmp
cltd
jnp
xor
jle
and
pop
add
das
mov
inc
mov
lret
inc
adc
fcomip
xchg
push
jmp
movsl
pop
pop
cmc
cmp
sahf
dec
pop
test
es
dec
pop
jno
push
lds
and
xchg
xchg
xchg
or
xchg
subl
scas
lods
and
daa
jbe
insl
inc
add
add
mov
adc
jecxz
add
iret
sti
add
in
pushl
movsb
mov
nop
jnp
sub
sarb
mov
cmp
cmp
in
jnp
scas
test
and
das
sarl
jnp
sub
mov
and
sub
cmp
jno
push
shll
pop
xchg
mov
cmp
aam
push
outsl
inc
mov
repnz
mov
xchg
or
cwtl
and
cld
sub
xlat
and
int3
popf
mov
dec
add
test
cwtl
dec
and
notb
cwtl
jg
jmp
into
gs
adc
popa
call
cmp
mov
sub
loop
adc
pushl
push
insb
test
and
jns
adc
repnz
rcr
mov
sub
test
jnp
inc
pop
ret
out
mov
sub
adcb
cmc
into
xchg
lcall
sbb
sbb
cmp
adc
notb
or
jmp
jmp
jb
aas
sub
inc
nop
dec
adc
subl
fistps
xor
mov
or
adc
ss
push
jmp
pop
dec
insb
pop
leave
in
insl
xorb
pop
cmp
fdiv
jns
aas
mov
push
dec
pop
jmp
mov
ficoms
shr
bound
jge
jg
hlt
loopne
push
enter
andl
mov
rorl
xchg
pop
xchg
inc
add
iret
stc
fiaddl
fmuls
stos
cmp
addl
popa
cmp
scas
pop
add
push
sbb
inc
in
sub
jae
std
mov
mulb
mov
arpl
xor
dec
xor
sub
or
arpl
or
lock
mov
xchg
dec
cwtl
jmp
push
cmpsb
sub
cmpsl
add
push
xchg
scas
incb
mov
ds
or
push
or
dec
fdivrp
adc
pop
out
push
cmp
mov
dec
adc
inc
mov
lret
stos
insb
es
pop
mov
scas
cwtl
add
sub
mov
fisttpll
insl
into
or
jg
in
mov
sub
or
test
pop
mov
test
and
lods
fcompl
cmp
hlt
shr
cmpsl
or
xor
fdiv
and
popf
int
movsb
cld
pop
and
mov
jp
repz
sub
test
out
mov
cmc
divl
mov
mov
test
fdivrl
cmp
and
mov
out
pushf
andb
mov
jno
jne
or
mov
imul
cmp
fdivs
cmpsb
add
sbb
leave
test
in
outsl
stc
pop
push
dec
ret
xor
mov
repnz
iret
int
das
or
dec
mov
mov
lods
mov
sub
call
pop
mov
int3
sahf
aad
pop
jmp
mov
dec
movsb
cmpl
cmp
pop
add
test
lods
adc
mov
xor
cltd
pop
jge
lret
jmp
std
mov
subb
and
and
rorb
nop
stc
in
xchg
loopne
cltd
repnz
and
and
imul
movsl
sti
aad
or
lock
jno
jae
iret
jo
inc
add
inc
inc
push
nop
mov
ljmp
and
dec
sarl
or
rcll
popa
sbb
pop
roll
stos
sahf
cmp
mov
addr16
out
jnp
push
ljmp
xchg
movsl
out
mov
push
notb
hlt
repz
mov
lea
addr16
sub
pusha
fnsave
add
imul
jl
mov
cmp
lahf
cli
pop
inc
xor
ds
and
pusha
mov
xchg
mov
fstps
jne
lea
scas
sbb
xor
negb
loope
fldt
repz
pop
push
or
sbb
xor
ret
pop
pop
popfw
adc
inc
test
aaa
repnz
xor
subl
fidivs
addl
shll
add
insb
aas
mov
push
mov
xchg
sub
out
inc
lods
lods
mov
scas
stos
cmpb
mov
mov
mov
les
mov
fcoms
push
scas
inc
mov
pop
xchg
arpl
insb
sti
cmp
je
test
pop
sbb
add
push
jl
clc
mov
fsubl
das
pushf
sahf
flds
inc
jl
inc
mov
adc
add
jge
mov
repz
fdivl
mov
jns
pop
orb
es
nop
jg
aam
mov
outsl
stos
iret
stc
push
mov
mov
xor
adc
jno
lock
push
pop
pop
add
and
clc
in
stc
xchg
pop
fstpt
jp
mov
test
mov
js
sbb
mov
shrl
cltd
popf
cmp
repnz
mov
jge,pt
xor
sbb
xchg
and
mov
insl
pop
popf
push
pop
mov
cmpsl
shrl
xchg
push
inc
pop
xor
fsubl
sbb
ret
dec
subl
in
push
mov
lret
mov
pushf
mov
dec
push
sarb
fwait
lods
lcall
rcll
setl
std
hlt
and
nop
sub
cmp
push
test
dec
mov
and
fimuls
pop
lea
ret
jg
repnz
dec
sub
xor
pusha
out
js
dec
clc
jmp
loope
mov
mov
inc
inc
xor
imul
repz
sub
pusha
or
cmp
scas
lds
xchg
jl
mov
dec
cmp
nop
data16
xor
sbb
cwtl
imul
and
shlb
ljmp
adc
jg
mov
js
mov
and
adc
mov
adc
ljmp
ret
jno
pop
sub
pop
adc
sbb
in
orl
leave
xchg
aaa
jg
or
movsl
or
inc
sti
daa
cmp
inc
add
mov
jl
mov
xorb
mov
aas
pop
mov
es
loope
lock
repnz
mov
add
inc
jg
dec
pushf
jle
sbb
xchg
aad
mov
decb
inc
ds
mov
and
js
dec
jae
enter
ret
mov
and
mov
xor
sbb
inc
fists
dec
pop
lret
adc
sti
push
or
sarb
sahf
xchg
mov
nop
mov
test
iret
je
leave
fmull
add
in
jbe
add
xor
xor
idiv
test
jg
sbb
pop
sub
imul
cld
in
mov
lcall
push
or
pop
aas
jno
jmp
ret
push
je
insl
sahf
jg
test
sub
or
pop
sub
sub
pop
pop
adc
add
mov
jb
cltd
fwait
add
test
xor
adc
shrl
and
or
aas
gs
jle
mov
imul
mov
mov
fwait
nop
pop
inc
mov
push
ret
xchg
imul
xor
pop
add
ret
in
jmp
ds
inc
sub
stc
xchg
dec
jg
push
out
jno
and
in
sar
scas
jg
jae
dec
lods
call
in
fmuls
xchg
loope
pusha
xlat
jle
dec
out
sti
scas
inc
cmpsb
dec
addr16
jmp
cmpsb
jp
and
xor
and
pop
mov
cli
sbb
xchg
int3
xor
inc
pusha
mov
mov
fnstcw
and
mov
mov
jno
ret
pushw
stos
rorb
lahf
and
adc
loopne
aas
incl
mov
inc
add
jno
fdivrp
pop
mov
dec
sub
movnti
test
out
and
ret
dec
or
sahf
xchg
insl
sbb
movb
lahf
pop
inc
inc
cmpsb
push
int
sub
aam
enter
cmp
mov
outsb
xchg
or
adc
jbe
mov
repz
data16
lret
in
test
pop
xchg
stos
hlt
pop
pop
sub
out
imul
in
test
jge
ds
xor
xchg
mov
cwtl
add
into
popf
jecxz
pop
pop
aad
fnstenv
mov
pop
jmp
or
pushf
and
sahf
add
fldcw
mov
pop
pop
loopne
popf
jo
add
fwait
or
insb
ja,pn
int3
pop
mov
lds
into
sbb
mov
jns
mov
adc
push
repz
movsb
pop
dec
sar
idivl
dec
cmpsl
push
inc
add
inc
sahf
imul
out
and
shll
cmp
mov
idivl
mov
dec
scas
mov
xor
push
cmc
jmp
nop
push
xor
xor
roll
mov
sub
inc
les
sbb
dec
jl
loopne
addr16
mov
cmp
out
push
sub
jnp
mov
shl
sub
sti
push
pop
jge
xchg
lods
repz
jb
push
hlt
leave
jnp
xchg
cld
dec
jle
int3
jns
xor
xor
push
add
das
ds
sar
adc
add
ja
mov
cmp
jnp
hlt
arpl
xlat
cmpsl
pop
inc
jle
cmp
ds
mov
loope
or
popf
cmp
hlt
arpl
outsb
sti
loope
cltd
add
add
in
stos
nop
shrl
sbb
data16
paddd
jecxz
js
seta
nop
in
and
lahf
and
cli
jecxz
das
jl
jns
and
jmp
pop
jb
add
gs
arpl
ja
xchg
jp
pop
add
cwtl
jle
fldenv
out
add
icebp
aaa
and
loopne
mov
pop
ds
mov
xchg
cmc
jp
out
jp
addr16
mov
dec
and
adc
cwtl
clc
shlw
mov
push
clc
mov
daa
dec
aas
std
popl
js
jmp
cmp
and
xor
jnp
mov
pop
outsb
dec
aaa
sub
or
jo
add
mov
cld
push
call
xor
std
xchg
lds
bound
repz
mov
adc
push
inc
mov
iret
mov
cltd
es
jns
cld
stos
xchg
add
js
cmc
xlat
mov
pop
pop
jne
pop
inc
cmc
inc
filds
gs
lahf
icebp
add
inc
leave
jbe
int3
sbbb
mov
fistps
or
xor
cli
fcomps
or
repnz
push
add
pushf
mov
or
int
jmp
inc
repz
psubsw
cmpb
outsl
imul
movsl
or
add
sub
dec
scas
jmp
add
mov
rorb
cmc
popf
dec
push
lahf
mov
shll
mov
pop
inc
sbb
mov
aas
repnz
xorb
cmp
adcl
sbb
add
xchg
ret
cwtl
aas
paddsw
loopne
xchg
leave
pusha
cmp
loope
ret
das
jno
negb
cmp
jnp
clc
xchg
jg
fldt
mov
dec
ljmp
mov
xor
pmulhrsw
push
xchg
cmpsl
loop
xor
jmp
inc
lock
ds
jbe
scas
lods
fs
jge
fstpl
aaa
push
mov
dec
pop
dec
test
adc
iret
int
jns
jp
mov
pop
xchg
das
imul
int
cld
adc
mov
pop
outsb
cmpsb
inc
orb
popf
neg
int
pop
mov
xchg
push
aad
and
push
imul
clc
lcall
ss
add
pop
lret
mov
push
push
lret
cs
in
mov
ret
lret
fstpl
repz
cmp
fmull
mov
imulb
mov
decb
sar
ret
cwtl
aas
xchg
pop
out
xchg
flds
xor
xor
hlt
mov
and
out
dec
ds
dec
notrack
lret
mov
mov
or
iret
pushf
mov
pop
mov
and
addr16
sub
jbe
mov
imul
xchg
das
jmp
add
inc
fdiv
inc
daa
dec
aas
std
orl
mov
xor
push
jle
out
mov
test
lods
jmp
mov
jnp
je
je
sbb
xchg
ds
fadd
fdivrl
cli
adc
add
pushf
test
inc
mov
and
into
jnp
outsl
mov
push
out
jge
not
ss
jno
ret
push
sub
aam
in
roll
lret
addr16
sbb
pop
push
inc
mov
sbb
lcall
sub
jg
and
dec
scas
out
mov
aas
and
dec
loopne
stos
lods
je
mov
jae
push
out
cmp
movsl
ss
or
insl
fcomip
adc
shll
int
cltd
fldlg2
mov
leave
mov
mov
aaa
adc
mov
mov
loopne
jg
aas
jb
mov
adc
icebp
jl
test
jnp
jp
cs
out
js
pop
loopne
js
push
call
jl
sub
dec
aas
xchg
ror
lds
int
mov
mov
lret
insl
arpl
push
cmpb
int
xor
lret
pop
test
sub
mov
adc
cs
pushf
push
enter
sti
test
inc
dec
or
dec
test
sub
hlt
daa
lahf
cli
and
aaa
aas
cltd
mov
cmp
mov
out
cmp
ret
fldcw
sahf
inc
sbbl
outsb
jbe
into
xchg
movsl
sub
sbb
add
sbb
and
push
push
sbb
pop
pop
les
cmp
std
sub
jnp
push
push
ret
rclb
add
es
sbb
push
sahf
xlat
daa
hlt
jge
aad
inc
mov
movsb
jb
mov
test
mov
lea
iret
mov
sub
pop
test
sti
fs
shl
out
nop/reserved
std
lahf
xor
pop
push
add
mov
in
or
and
leave
xor
aaa
ja
mov
fcomi
sbb
ds
adc
cmp
jl
push
sahf
sub
aam
cmp
out
scas
jno
call
mov
icebp
xor
mov
lret
jmp
add
fdivrl
push
repnz
add
mov
add
xor
hlt
add
fbld
or
push
add
sub
push
adc
cmpsl
mov
add
pop
bound
in
lds
pop
add
popf
add
fisttpll
push
fs
and
pop
mov
jae
and
data16
adc
outsl
sbb
sbb
call
pop
mov
or
arpl
out
mov
aaa
xchg
mov
sti
popl
mov
or
fwait
fwait
popf
mov
mov
cmp
jl
popf
andl
aaa
repz
enter
xor
inc
or
movsl
data16
add
or
addb
sub
ror
pop
push
fnsave
sub
sti
ljmp
xchg
lret
shl
imul
jg
andb
or
std
ret
xor
out
out
sti
mov
sub
adc
xor
lahf
in
adc
mov
mov
dec
xlat
dec
inc
mov
scas
das
push
fidivl
sti
push
data16
enter
jno
in
lahf
out
fdivrp
ja
mov
dec
cmc
rorb
push
test
sub
inc
and
inc
xchg
addl
inc
push
loop
mov
gs
mov
adc
idivb
add
jae
adc
mov
jecxz
cmp
cli
ds
cmp
adc
cwtl
es
add
mov
add
ja
xor
faddl
and
cmp
std
xor
or
outsl
std
push
arpl
and
xchg
movsb
fldenv
gs
ss
cs
inc
mov
mov
shr
cmp
push
bnd
movsb
xor
and
clc
jge
jp
test
add
loope
jg
mov
or
jp
mov
adc
add
or
mov
scas
cwtl
cmp
pop
push
xor
mov
das
sub
sbb
arpl
addl
lcall
cmpsb
and
leave
iret
scas
adc
pop
lret
mov
sbb
xchg
xchg
add
xchg
fsts
mov
dec
roll
daa
sti
pop
cld
xor
and
adc
in
das
xchg
push
jmp
call
stos
loope
adc
cs
add
ja
jnp
jmp
pop
or
loop
pop
outsl
bound
shlb
test
cltd
jecxz
mov
mov
push
ret
or
std
sbb
dec
sbb
lock
inc
inc
add
xor
fldln2
and
cld
mov
test
xchg
xor
iret
dec
lock
fildl
shrl
das
adc
icebp
out
ds
ja
dec
in
jl
call
mov
xor
arpl
add
loopne
mov
jle
insl
cmp
pop
jne
sbb
add
dec
fs
daa
xchg
and
jns
pop
adc
sub
push
mov
fldenv
and
jge
out
iret
repnz
repnz
loope
sahf
dec
repnz
mov
lock
jge
push
aas
je
outsb
mov
fld
cmc
dec
aaa
movsb
add
pop
pop
lcall
mov
mov
mov
repz
inc
mov
mov
in
push
and
nop
fld
imul
or
cmp
xor
adc
cmp
jle
mov
ficoms
gs
pop
popa
inc
push
add
pop
cmp
mov
outsl
ja
cmp
outsw
sub
add
cwtl
sbb
icebp
jno
jnp
mov
pop
decl
mov
mov
scas
lret
lret
pop
pop
push
lds
sub
mov
in
insl
movups
sbb
sbb
mov
or
or
inc
addl
adc
pop
stos
jle
sub
ljmp
pop
jg
aas
xor
mov
int3
mov
out
mov
mov
pop
jl
sub
mov
add
sti
mov
sub
mov
mov
gs
fisttps
cltd
cmp
adc
call
mov
bound
nop
addr16
add
inc
xchg
sub
inc
sbb
repz
repz
xchg
idiv
inc
push
adcb
mov
testl
adc
or
sub
insl
cmpl
xlat
adc
rolb
add
imul
repz
xchg
jg
aaa
mov
mov
aad
shlb
fs
test
sbb
insl
lret
and
cltd
popa
shlb
xchg
sbb
inc
es
lcall
ficoms
sub
xor
and
in
mov
pop
adc
jg
push
sub
sar
cmpsb
ljmp
cmc
pop
outsb
mov
decl
jl
inc
adc
push
cmpsb
imul
jge
out
jmp
je
or
add
mov
mov
inc
jns
adc
stc
shlb
rcrb
nop
jmp
orl
sub
sub
imul
sub
dec
cwtl
push
outsl
nop
cs
push
cwtl
ror
xor
sti
xchg
aad
adc
cli
aad
inc
push
add
mov
add
xchg
test
gs
xor
sbb
jle
pop
incl
pop
iret
lahf
dec
lret
icebp
add
ret
dec
cld
repnz
fsubr
iret
cld
int3
jmp
pop
decl
sti
ret
or
aas
clc
out
cli
mov
js
mov
cmpsb
clc
loop
cmpsb
push
aas
inc
jecxz
add
add
inc
push
pop
xor
out
mov
out
mov
jno,pt
push
xor
daa
pop
into
test
es
xchg
ss
orb
inc
adc
mov
or
daa
lret
lahf
inc
or
mov
mov
leave
xchg
mov
adc
push
or
std
popa
jle
mov
imul
fisttps
and
and
sarb
mov
lahf
loopne
jg
sub
and
out
jmp
mov
mov
pop
mov
ds
jne
cmp
xlat
mov
aaa
movsb
add
in
aam
test
sti
or
jecxz
and
in
cmp
sbb
pop
scas
sub
in
lahf
icebp
xchg
sub
cwtl
stc
push
je
mov
mov
xorl
enter
mov
add
dec
inc
sbb
fs
stos
xor
popa
adc
lcall
xchg
inc
gs
push
add
add
mov
mov
or
dec
loop
and
adc
xlat
jle
cmc
pop
push
iret
push
xrelease
insb
imull
hlt
clc
xchg
scas
mov
pop
mov
icebp
and
xor
and
in
cmp
into
inc
jnp
rorl
fucomi
out
pop
sbb
add
sbb
adc
mov
addr16
cmpsb
fcmovnu
int3
jbe
sahf
mov
add
repnz
mov
push
sbb
popf
push
xor
adc
je
pop
cbtw
mov
fwait
aad
cltd
sub
sbb
cwtl
adc
out
jle
out
dec
mov
push
sbb
sti
pop
jl
and
mov
sbb
dec
andl
insb
cwtl
stc
repz
in
jge
ret
xor
xlat
adc
cmpsl
push
aas
inc
cmpsb
jge
ret
cmp
imul
test
push
repnz
jle
adc
in
aas
jae
cwtl
pop
aaa
or
clc
pop
xor
mov
push
cmp
sbb
and
ja
out
mov
adc
jge
pop
lahf
js
pushf
push
push
add
mov
leave
inc
and
sti
xor
add
lea
add
cltd
dec
fistl
lahf
xchg
pop
ja
sbb
pop
and
gs
ret
pop
fistl
push
xor
lods
inc
pusha
dec
jg
cmpsb
stos
dec
and
test
and
dec
mov
mov
flds
xchg
mov
jge
sti
fidivrs
outsb
sub
movsl
int
dec
jp
xchg
xchg
data16
int3
inc
sbb
mov
adc
and
sti
fdivp
mov
or
xor
adc
loopne
jge
std
push
and
mov
mov
mov
cmpsb
mov
fucomi
push
mov
or
cmpsl
and
or
inc
adc
mov
cltd
mov
mov
inc
int3
cmp
cmp
jnp
mov
mov
jmp
jg
xchg
in
je
inc
sti
pop
loopne
sub
jecxz
dec
in
jl
cmp
jne
gs
mov
or
xchg
cwtl
add
pop
or
xorb
xchg
sar
mov
es
int3
out
xchg
cmp
dec
pop
jns
pop
or
lods
xchg
rcr
xchg
leave
into
push
hlt
fildl
xor
cmp
mul
scas
pop
xor
fisttpll
sbb
jnp
and
arpl
hlt
add
ja
xlat
pop
and
mov
jo
cmp
lods
or
mov
insl
jae
xchg
xor
and
repz
shlb
jno
enter
in
pop
std
ret
mov
rcrb
enter
cli
fnsetpm(287
and
shrl
pusha
adc
clc
sub
pop
cwtl
ds
push
adcl
xlat
repnz
les
xor
inc
inc
or
sub
push
sub
das
jg
inc
pop
sub
pop
cwtl
pusha
push
shrb
mov
add
and
add
mov
push
loopne
push
movsb
in
fidivs
jae
ja
imull
mov
clc
scas
pmullw
and
mov
in
mov
jae
test
xchg
push
jg
popl
call
dec
fld
mov
inc
cmp
sti
push
lock
jb
sbbl
mov
or
mov
std
data16
fs
mov
or
popa
ficoms
xor
movl
out
inc
sub
adc
subb
fisttpl
and
js
cwtl
dec
in
add
arpl
lahf
jns
inc
mov
push
add
add
mov
mov
shr
sub
sub
dec
push
stc
mov
into
leave
fistpll
cli
adc
xlat
lods
add
cmc
mov
aas
bound
push
jne
js
pop
xchg
jmp
or
inc
push
dec
cltd
mov
je
mov
pusha
push
lret
out
mov
xor
cld
in
xchg
push
sub
je
lret
stc
loop
xor
fldt
lock
mov
out
imul
jnp
pop
push
or
ja
or
inc
out
xchg
inc
imul
mov
insl
stos
lods
dec
push
lret
sti
inc
dec
adc
jecxz
jg
ret
call
movsb
or
gs
aas
jmp
shll
mov
pop
mov
cmp
mov
sar
nop
lock
pushf
cld
std
jecxz
xchg
adc
fistps
rorb
xchg
mov
dec
int3
sbb
push
gs
fnstenv
and
push
mov
xor
cmp
das
sub
xchg
hlt
xchg
pop
cld
and
rolb
loope
cmp
decl
insl
jp
out
mov
dec
adc
pusha
rcrb
test
lret
jl
fsubrp
iret
or
loop
inc
data16
addr16
insb
sbb
fwait
mov
out
and
das
add
cld
fmull
add
clc
mov
iret
mov
ret
cmpsl
fidivs
mov
push
lcall
mov
enter
popa
inc
sbb
xor
lcall
cmp
xchg
repz
in
jge
shlb
add
sbb
inc
orl
rcr
and
xor
scas
xor
inc
mov
sbb
in
ret
xchg
and
popf
outsl
mov
popa
jns
cld
cld
and
and
outsl
incb
cmp
cmp
jbe
dec
lahf
xor
ljmp
test
or
pushf
popa
cli
clc
aaa
ret
cwtl
fs
jo
fstpt
aaa
xchg
xchg
stc
lock
fidivrl
or
repnz
add
add
xchg
leave
push
add
ror
mov
lret
in
ss
bnd
add
jg
lcall
inc
fidivs
lahf
xchg
push
int
mov
cmp
sti
add
mov
push
xchg
pop
scas
mov
jb
repz
dec
clc
xlat
inc
loop
jmp
add
mov
sbb
push
pop
pop
test
jge
sub
mov
in
ljmp
popa
test
add
and
dec
mov
mov
dec
pop
and
sbb
fcompl
repnz
in
movsl
movsb
mov
cld
bound
daa
mov
std
jbe
cmpsb
cmpsb
repnz
mov
in
pop
popa
xor
fwait
xor
pop
andb
stc
jns
pop
lret
jmp
xchg
ret
sbb
aam
mov
dec
std
lcall
repz
cli
jle
adc
in
std
cmpsl
mov
pop
jg
or
into
and
jecxz
mov
out
std
orl
sbb
loope
test
out
jbe
xor
and
dec
subb
mov
pop
push
addb
hlt
add
roll
test
mov
inc
ret
pushf
lock
mov
xchg
mov
repnz
sbb
adc
rorb
andl
enter
fs
and
push
xor
ret
cwtl
jle
xor
or
in
pusha
dec
cmpl
mov
xchg
lock
arpl
xchg
add
xor
orl
sub
pop
mov
arpl
shrb
push
cld
mov
jb
outsb
iret
insb
das
gs
add
pop
cmp
and
dec
cltd
repz
in
ss
mov
push
adc
jge
jne
cltd
xchg
jge
sub
incl
out
jnp
das
and
add
lcall
out
dec
mov
jnp
dec
movsl
stc
fwait
loopne
xorl
test
nop
add
test
push
ljmp
aam
inc
push
sbb
or
aas
cmp
pop
repz
mov
pop
popf
rcll
sub
cmp
add
add
adc
mov
sub
mov
or
xchg
push
mov
adc
mov
in
or
add
aas
shl
mov
inc
mov
pop
fisubs
jne
in
mov
sahf
repz
cmp
fcomps
pop
ss
call
sbb
ret
cld
lods
mov
ds
xchg
mov
inc
xor
clc
jge
sbb
loop
cltd
jl
xchg
aas
std
orl
orb
clc
lds
xor
ret
inc
pop
push
test
jo
sbb
imul
mov
mov
xor
das
mov
pop
and
fwait
cmp
cmp
sub
dec
sub
fidivs
scas
jno
scas
add
cmp
cmp
sub
mov
pushf
mov
jne
sbb
mov
mov
cs
insl
shld
adc
ret
ret
jo
nop
jge
loopne
and
jns
imul
xor
xchg
pop
pop
ss
cwtl
cmp
in
push
lea
enter
pop
xchg
out
andl
fs
inc
xchg
loope
ss
mov
lcall
out
or
cltd
jecxz
push
fisttpl
push
inc
xor
cmc
dec
jge
mov
aam
jg
mov
jl
xor
sub
or
lahf
mul
or
push
mov
test
test
xor
lods
icebp
push
test
in
in
arpl
cmpb
add
or
sbb
pop
sbb
add
cmpsl
mov
inc
dec
ds
aas
push
add
repz
in
jo
inc
jo
shrb
pop
cmp
mov
movsl
outsl
lods
aam
cmovo
inc
jp
pop
dec
mov
mov
push
icebp
inc
notb
add
mov
icebp
rclb
rep
pop
sbb
shrl
mov
push
pop
fists
inc
add
in
pop
inc
add
jne
dec
cmp
pop
push
inc
enter
push
xor
scas
cmp
lcall
testl
gs
pop
jmp
fisubrs
movb
sub
fisttpll
aas
hlt
xchg
or
pop
test
bound
cmc
sbb
mov
pop
arpl
xor
add
xor
or
fs
cmp
sub
pop
rcrl
and
jecxz
lods
repnz
pop
or
test
mov
or
add
inc
and
jae
or
div
pusha
mov
rcll
inc
inc
add
pop
cmp
mov
cmc
mov
jge
scas
hlt
jp
rolb
sub
mov
data16
push
data16
add
ja
jp
cmp
xor
pop
hlt
or
cld
add
daa
xchg
sbb
xlat
mov
call
sbb
pop
in
sub
sti
xchg
xchg
adc
fisubrl
cmpsl
push
sar
mov
jp
test
fiadds
cmpsl
out
and
test
pusha
aam
lods
cmpsb
xorl
test
test
sub
pushf
add
adc
mov
sub
mov
adc
es
cmpb
addr16
dec
out
lcall
sbb
sbb
paddusb
aam
mov
xor
jl
mov
mov
mov
jp
mov
mov
aad
or
add
push
or
dec
mov
ds
das
lahf
lods
icebp
pop
xlat
jbe
cmp
repnz
orb
jl
jecxz
int3
stos
pop
std
ljmp
cmp
dec
xchg
xchg
push
cld
adc
loope
cmc
push
out
and
lcall
andl
xor
adc
test
call
jge
sbb
das
aad
mov
add
insl
mov
scas
xchg
pop
nop
mov
dec
fsubs
push
mov
out
push
out
incb
ret
fcomp
add
andl
lahf
sub
sarb
lea
push
add
pop
sti
add
and
or
aas
xchg
sbb
and
hlt
inc
lahf
outsl
iret
or
clc
das
aas
pop
aaa
or
out
out
ja
dec
ror
add
or
mov
repz
and
punpcklbw
in
jg
aas
push
sbb
rorb
adc
adc
adc
or
rorb
pusha
outsl
lret
out
pop
cmpsb
loope
cld
aad
test
adc
cmp
xchg
jno,pn
nop
scas
aas
icebp
add
cmpsb
cmpsl
xlat
push
dec
mov
es
mov
xor
je
in
push
add
pop
mov
lods
sub
and
adc
mov
repz
inc
ret
cld
xor
in
loopne
mov
test
lcall
repz
or
cmpsb
int
mov
rol
push
xchg
jge
mov
mov
jno
pop
cmp
or
imul
dec
dec
mov
mov
cwtl
fildl
test
and
or
call
icebp
or
icebp
dec
popf
repnz
jmp
add
lea
loopne
std
jo
add
jns
outsb
mov
mull
jbe
pop
add
int3
jnp
add
add
push
add
sbb
mov
xchg
cmp
addl
adc
xchg
inc
ds
pop
cmp
jl
pushf
pop
cld
loop
jne
push
push
inc
add
mov
cmp
xchg
xchg
enter
push
nop
sbb
roll
and
add
test
sahf
push
pop
cltd
daa
xchg
add
icebp
jg
mov
in
daa
mov
cmp
aas
jg
gs
insb
hlt
cmpsl
mov
inc
outsl
mov
divb
ljmp
or
xchg
arpl
cltd
mov
lahf
add
inc
xchg
inc
addb
mov
lds
or
pop
cld
aas
mov
pop
mov
addb
inc
or
and
dec
sti
sbb
xchg
sbb
adc
es
cmp
mov
jbe
pop
dec
popa
inc
mov
pop
or
jo
daa
cmc
rcrl
adc
stc
sub
repnz
push
iret
loopne
mov
pop
aaa
ja
jl
or
sbb
hlt
mov
movsb
xlat
xchg
addr16
popa
push
outsl
pop
fs
xor
frstor
adc
or
std
leave
cmpsl
daa
mov
ja
cli
imul
cmpsl
cld
mov
sbb
jl
in
sbb
pop
jecxz
pop
jmp
add
or
adc
dec
orb
sub
sbb
mov
ljmp
repnz
or
push
js
shlb
sahf
inc
add
lock
insb
andb
divps
into
lods
repnz
mov
leave
inc
sub
inc
insl
add
xor
inc
mov
ljmp
int3
sub
into
cmp
sti
jp
test
adc
dec
or
sbb
loop
fprem
and
fs
test
pop
push
push
pause
test
push
scas
jb
es
or
and
loop
pop
add
orb
pop
out
lret
leave
ret
cmp
and
test
dec
das
out
out
jge
jl
sbb
and
decl
or
fidivs
adc
sub
add
jo
scas
jns
xchg
hlt
cmpsl
cmpsb
push
rcl
test
popa
repz
int3
xlat
aas
aas
ret
push
aas
jle
jg
jbe
jns
pushf
adc
rcll
cmc
push
pop
popa
jecxz
xor
clc
repnz
stc
aam
jg
shll
ljmp
pop
pushf
cmc
cld
lret
nop
mov
mov
nop
inc
inc
push
mov
mov
out
stos
cmpsl
aas
ja
sbb
cmp
call
sahf
ds
dec
std
xlat
pop
fidivl
enter
aad
int
rclb
pop
pop
mov
inc
cmp
cmc
imul
pop
adc
into
dec
dec
cmc
xchg
cmpsb
mov
or
test
xchg
mov
das
add
stc
cmp
bound
pop
into
push
mov
adc
shlw
mov
and
inc
xor
push
pop
push
mov
and
jno
mov
fisubrl
or
test
loopne
and
cwtl
test
repz
xlat
pop
lcall
pop
sbb
rcll
mov
out
sahf
cmp
mov
jns
outsl
cmp
call
das
idivl
adc
pop
or
jne
mov
jge
xchg
loop
adc
cltd
push
mov
jnp
cmp
pushf
sub
mov
push
leave
jg
jge
out
jnp
pop
sahf
stc
fists
xchg
repnz
popf
lret
cld
icebp
sbb
pop
jns
daa
sahf
jle
iret
or
ja
pop
or
stc
aam
lret
and
cmp
lahf
pop
sbb
mov
loopne
xor
adc
movsl
jle
orb
sbb
push
les
incb
popl
lahf
mov
gs
add
dec
mov
push
add
test
push
add
imul
rcrb
jae
inc
or
add
mov
and
test
cs
adc
adc
jp
inc
mov
pop
push
out
rep
xor
cmc
aam
repz
xor
xor
jge
divl
ficomps
and
push
dec
sub
insl
scas
popa
cmc
mov
fnstcw
and
lahf
add
fmulp
loop
adc
pop
jp
pop
idivb
int
inc
ljmp
xor
addr16
pop
mov
sbb
push
mov
out
into
pop
shr
jle
dec
xor
stos
sbb
xor
dec
and
and
scas
cmpsl
pop
jmp
sub
cmpsb
pop
ljmp
ljmp
or
inc
std
xchg
leave
aad
imul
into
cs
jle
andb
xchg
mov
out
mov
add
ret
add
pop
sbb
dec
les
jo
lock
ds
cmp
xor
mov
mov
cmp
pushf
scas
repz
xchg
jns
fsubrs
add
repnz
push
push
add
in
in
jnp
loop
mov
mov
xlat
xchg
jnp
inc
stc
retw
popf
sbb
pop
push
pushf
jecxz
mov
dec
daa
jbe,pt
sub
bsf
jge
pop
or
push
pop
jl
addr16
insl
jbe
mov
inc
jns
dec
dec
lock
fwait
adc
fwait
aad
das
and
push
nop
popl
pop
mov
sub
test
xchg
and
gs
and
jl
aam
lds
dec
sbb
mov
out
lods
pop
adc
adc
jle
mov
cmp
in
sarb
out
xlat
push
loop
inc
sahf
jle
mov
arpl
ja
inc
in
dec
inc
stc
dec
mov
cwtl
mov
inc
js
adc
mov
adc
ja
call
mov
mov
dec
sbb
out
arpl
ret
nop
loopne
sub
imul
arpl
mov
fdivrl
mov
cmp
icebp
inc
sbb
scas
push
into
popf
cmp
mov
jo
int
cmp
add
mov
xchg
mov
xor
cmp
lods
movsl
sbb
sub
int3
jge
mov
aam
scas
inc
cmp
loope
inc
daa
out
jecxz
jo
push
out
mov
push
out
jle
jp,pt
push
xchg
in
ja
add
lea
adc
pop
sub
test
pop
mov
push
push
cmp
adc
cmp
push
enter
fdivs
loopne
daa
lock
cmp
orl
jmp
or
test
popf
add
push
cmc
hlt
mov
and
nop
inc
adcl
and
mov
popf
and
in
or
cmp
dec
fildll
les
sub
ja
xor
insb
sbb
int
sbb
jo
inc
out
pop
jmp
lret
das
add
into
iret
pushf
sbb
pop
aaa
or
movsl
dec
insl
sub
test
test
out
rorl
fwait
inc
cmp
stc
mov
mov
scas
pop
scas
add
push
xchg
push
mov
fnstcw
lods
mov
dec
dec
fimull
in
push
jmp
inc
mov
lahf
inc
daa
adcb
imulb
in
and
dec
stos
dec
add
js
rep
out
imul
jmp
clc
aam
lock
xchg
sahf
mov
mov
inc
and
pop
notl
xchg
dec
pop
push
js
pop
mov
repnz
popl
adc
movsl
cmp
cmp
faddl
add
add
mov
aam
dec
mov
ret
sbb
jo
push
push
add
inc
shr
fstl
inc
pushl
push
mov
push
scas
test
jae
out
pmaxub
sub
push
clc
sbb
vpmacssdql
add
cmpb
adc
vmovaps
mov
fldt
cld
mov
sarb
scas
bound
aad
cli
lods
shlb
sub
mov
xchg
jo
push
clc
fsubrp
cli
jecxz
jno
ja
divb
mov
pop
or
push
sarb
enter
pop
loopne
pop
test
mov
sub
or
push
mov
repz
ja
push
push
addr16
pop
test
sub
inc
pop
mov
push
dec
mov
and
cli
push
testl
cmp
das
pushf
push
out
test
enter
adc
mov
inc
jnp
jne
ja
lret
scas
test
shrb
cmp
in
testl
inc
shll
sbb
xlat
mov
mov
nop
xor
iret
add
xlat
ficoms
adc
scas
mov
xchg
inc
mov
ds
stc
dec
cli
pop
add
mov
fs
stc
imul
jmp
jmp
call
mov
notb
pop
jle
mov
adc
jg
stc
leave
lret
enter
adc
and
push
repz
jb
push
or
add
xchg
sbb
pmaddwd
fsubrp
test
xor
jb
push
lea
dec
and
mov
daa
jo
mov
outsb
fnstcw
fisubs
dec
int3
into
mov
mov
arpl
cmc
push
push
cltd
ret
sahf
cmpsb
mov
test
mov
add
add
cs
ret
inc
insl
ret
mov
lods
mov
add
mov
pop
dec
jne
stos
push
cmp
mov
testl
ret
rolb
rorb
pop
jp
pop
add
push
pop
or
rorb
jg
fdivrl
mov
std
xchg
adc
iret
dec
pop
adcb
ja
shll
xchg
out
xorl
test
out
sbb
lret
or
inc
dec
pop
jo
xchg
lret
adc
add
push
push
jbe
mov
sub
pop
pop
repz
jmp
push
adc
aaa
or
cld
loopne
iret
roll
push
or
pop
pop
dec
enter
xchg
pop
loopne
push
add
int
push
cmc
mov
cmp
cmpsl
mov
add
daa
out
aaa
mov
add
mov
mov
mov
pop
mov
adc
sti
adc
or
mov
ds
pop
mov
xchg
push
std
dec
sahf
dec
adc
loop
mov
inc
psubsw
shrl
pop
pop
push
push
stos
scas
sahf
adc
lcall
mov
add
adc
add
lock
out
jo
mov
das
or
dec
in
mov
add
daa
hlt
bound
dec
nop
sahf
push
add
and
jns
mov
fidivl
mov
or
mov
insl
in
jae
ja
movsl
enter
jp
sbb
mov
aad
push
or
outsl
xor
push
jmp
xchg
sbb
repnz
sti
fxam
movsb
pop
leave
push
xchg
inc
pop
push
outsl
sbb
popf
rol
lret
es
loope
xor
ficoms
add
push
inc
sbb
mov
mov
adc
xor
lods
lods
mov
les
adc
adc
out
inc
push
add
and
jnp
push
shrb
sbb
rcrl
call
lock
or
mov
scas
cli
or
mov
std
out
leave
xor
xchg
int
in
adc
pusha
jecxz
int3
jge
and
push
out
arpl
xor
bound
push
jmp
pop
stos
lahf
mov
ret
nop
mov
imul
cmp
out
cmp
sahf
enter
sahf
dec
cltd
push
into
mov
add
hlt
lods
mov
lods
call
lahf
mov
aad
rcll
dec
test
lock
add
xchg
dec
sub
sbbl
mov
adc
sub
insl
orl
andl
popf
fbld
xchg
lret
inc
mov
scas
cmpsl
lods
jp
dec
shrb
out
pop
mov
fnstcw
loope
ret
mov
std
adcl
lahf
jne
push
cmpsl
pop
in
sub
fimull
pop
test
push
add
bound
out
jo
int
mov
push
mov
mov
xchg
enter
inc
mov
and
push
push
jecxz
popa
inc
and
xlat
in
fmull
dec
loope
sub
cmp
aam
and
cld
add
xchg
loop
ja
in
cmp
shlb
jecxz
inc
inc
std
gs
movsl
outsb
pop
jno
mov
maxps
fimuls
xchg
dec
xchg
sbb
inc
daa
push
hlt
xchg
es
je
cmp
fnstcw
xor
xchg
testb
adc
sub
sub
cltd
js
cmp
and
push
cltd
mov
adc
push
movsl
cli
dec
enter
hlt
xchg
inc
inc
fnstcw
test
clc
pop
rcll
je
lret
jg
sbb
dec
out
inc
dec
mov
mov
daa
dec
jno,pt
loopne
jle
das
pop
cs
adc
rolb
andl
jle
daa
cmp
pop
fnstcw
in
insl
fbld
or
fbld
mov
lret
sub
add
leave
or
mov
xor
xchg
pop
test
dec
dec
and
pop
sub
or
jo
inc
shlb
into
cs
aas
rorl
cmp
fstpt
jno
pop
add
aam
sub
shrl
add
push
clc
ret
pop
sub
int3
call
inc
leave
stos
daa
sti
in
test
rol
outsl
dec
popa
mov
push
xlat
mov
shlb
push
and
fisttpl
mov
js
in
xchg
add
mov
adc
mov
movzwl
or
xchg
sub
push
cli
incl
adc
add
fwait
sbb
enter
xchg
cmc
lock
add
adc
cwtl
cmp
xchg
push
js
sub
add
nopl
sbb
cmp
ja
mov
popf
xchg
js
aad
mov
bound
mov
add
mov
repnz
mov
mov
test
icebp
rcrb
xchg
sarb
out
mov
push
scas
fstpl
or
inc
and
push
cmpsb
loop
inc
pop
in
popa
jns
or
adc
and
cmp
addr16
push
bnd
sbb
inc
inc
add
or
dec
inc
inc
push
or
shld
mov
gs
sub
loopne
add
movsl
movsb
sub
cltd
call
xchg
push
mov
push
jp
mov
sbb
xor
and
andb
sbb
mov
cwtl
jg
out
clc
mov
and
outsb
pushf
test
xchg
dec
in
or
mov
repz
int3
sbb
dec
cmpsl
xchg
push
lret
icebp
or
movsl
adc
movsl
inc
add
dec
inc
gs
inc
out
sub
jno
mov
ds
mov
sub
rcrb
call
scas
sub
stos
fwait
jmp
dec
loope
stos
xchg
inc
add
stos
sbb
jg
out
js
mov
mov
fsts
xor
lods
mov
movsl
hlt
xlat
cs
cmp
push
pop
addb
test
movsb
rcrb
into
inc
xchg
inc
xor
and
and
mov
loope
sbb
bound
dec
sub
pop
popf
jg
in
movsb
pop
shll
pop
cmpsb
or
add
sbb
adc
pusha
adc
add
ja
xchg
mov
sbbl
jne
adc
mov
add
test
outsb
inc
cltd
fdiv
gs
popf
iret
mov
xor
push
rorb
sub
and
fs
jb
in
mov
enter
push
das
lahf
ljmp
or
ja
mov
push
cmpsb
ljmp
lds
std
xchg
cmc
xor
iret
dec
xchg
repnz
out
fiadds
mov
leave
add
mov
push
loope
pop
stos
das
mov
loope
pop
mov
jbe
push
sbb
jmp
xchg
subl
and
push
mov
adc
fs
popa
xchg
jmp
jge
inc
cmpsl
jnp
cmp
imulb
add
sbb
scas
ss
test
push
add
hlt
add
push
rcl
mov
imull
push
pop
fcomip
mov
mov
sbb
aas
out
jl
cmp
add
test
int
rol
cwtl
or
xchg
aas
dec
xor
outsl
sti
push
mov
jae
mov
cmp
ds
je
ja
xlat
imull
negb
rorb
sub
pusha
into
xor
jae
xchg
push
in
xlat
std
icebp
mov
xlat
std
cmp
daa
imul
sub
or
add
int3
sub
mov
das
lds
fiaddl
jecxz
sbb
add
mov
xchg
test
or
inc
icebp
negb
into
mov
or
sbb
in
repz
ret
outsb
mov
stos
add
add
idivb
or
pop
xorb
mov
aaa
xchg
hlt
ja
push
or
pusha
push
cmpsb
xchg
ljmp
jne
pusha
aad
pop
gs
test
push
jl
push
pop
xlat
pop
loope
add
jns
les
adc
test
ds
mov
jbe
push
pop
pop
call
adcl
aaa
aaa
xchg
fbld
push
add
pop
cwtl
jnp
enter
mov
mov
lock
shll
cltd
push
dec
test
sbb
fs
loopne
mov
sub
pop
add
cmp
pop
mov
test
lret
jo
dec
xor
sbbb
mov
rorb
jmp
jnp
in
movsl
fs
lods
hlt
testb
repnz
jns
xchg
or
mov
add
add
add
adc
filds
insl
xlat
test
imul
out
mov
outsb
adc
mov
jecxz
push
fdivs
dec
mov
iret
sub
ret
out
push
addr16
jle
outsb
stos
out
mov
call
xchg
mov
cli
sub
aad
cmpl
scas
pop
mov
popf
icebp
adc
mov
js
into
loope
iret
xchg
rclb
add
inc
xor
cmp
and
in
scas
push
cmp
sbb
rclb
mov
bound
mov
add
pop
call
mov
sbbb
stc
pop
mov
lahf
imul
out
xor
repnz
in
addb
xchg
sbbl
pushf
outsl
fnstsw
mov
add
sub
xor
out
out
or
jp
add
mov
inc
xor
mov
mov
mov
nop
movsl
sub
icebp
mov
hlt
les
cmp
js
ds
and
and
mov
rol
push
add
cmp
imull
sub
xchg
cs
icebp
ja
xchg
mov
sbb
push
notb
pop
cmpsb
scas
movsb
push
inc
xor
sbb
sahf
cwtl
pop
pop
or
cmpsb
lods
mov
cmp
inc
or
out
daa
jge
aam
jb
enter
loope
icebp
sbb
mov
fs
dec
pop
lds
add
mov
add
stos
mov
lods
lods
adc
mov
xadd
dec
fnstsw
or
inc
mov
xchg
jp
loope
scas
stos
lret
cmpsb
icebp
rcr
sbb
pop
inc
ja
and
sti
lret
lods
dec
mov
aad
mov
pop
pop
cmp
mov
pop
mov
add
add
ljmp
jle
jno
loopne
push
fdivp
and
xchg
pop
mov
jge
fcmovnu
lock
xor
adc
add
push
adc
hlt
in
dec
pop
cmp
dec
into
sbb
cli
jno
nop
mov
pop
ja
jg
add
hlt
xchg
repnz
cmp
fists
out
aad
std
and
sub
adc
rclb
or
xlat
push
or
or
jg
add
xor
fidivs
mov
cmpsl
mov
stos
jae
push
jne
cmpb
cmp
jne
pop
lahf
push
mov
mov
or
mov
nop
inc
pusha
jae
arpl
xchg
cmc
ja
mov
frstor
aad
in
sbb
push
or
pop
pop
clc
xlat
add
js
ret
mov
push
push
add
add
push
int
push
xor
adc
mov
mov
aad
arpl
jle
sbb
stos
clc
adc
add
xorb
inc
push
mov
stos
xor
ja
sub
and
loopne
add
mov
nop
mov
push
push
rorb
dec
pop
mov
into
pop
xchg
sub
mov
mov
mov
add
out
stos
lret
stos
dec
push
shrl
adc
pop
out
scas
inc
lret
mov
add
sub
lock
jle
add
ret
lret
stos
xchg
mov
add
push
xor
add
push
push
xor
sub
jae
push
jae
mov
call
mov
cmpsl
adc
mov
mov
sbb
mov
jmp
jae
mov
pop
scas
imull
lahf
inc
sti
fisttpl
adc
subl
imulb
push
pop
add
pop
xor
inc
into
or
push
push
xchg
mov
fldcw
cmp
mov
enter
out
mov
mov
mov
sub
mov
lahf
xchg
sub
push
jl
cld
and
mov
and
inc
cmpl
fmull
cmpl
xor
xchg
pop
arpl
subb
mov
enter
add
repz
fxam
pop
mov
mov
pop
leave
cmc
das
pop
je
rcrl
movsl
fcoms
out
incl
imul
mov
out
mov
sbb
mov
push
push
or
sbb
fdivrs
mov
loopne
xlat
test
rorb
test
push
mov
test
dec
push
in
jmp
push
jo
mov
mov
imull
mov
es
mov
xor
xlat
add
mov
inc
xchg
add
add
adc
repnz
cmp
lea
movsbl
xor
data16
pusha
add
cmp
cmp
jbe
push
xchg
and
sbb
addr16
dec
push
sbb
or
sub
add
fdivrs
inc
pop
pop
das
shlb
pop
jo
push
data16
gs
mov
addr16
mov
mov
cmp
mov
jle
out
inc
sub
and
cmp
enter
or
ret
lret
popf
jmp
mov
scas
fcompl
sub
adcl
into
mov
or
fwait
sbb
cmp
lds
lods
stc
das
inc
insb
push
pop
bswap
lret
mov
pop
xchg
imul
leave
xor
lret
sbb
aad
lock
add
add
dec
inc
scas
inc
pusha
adc
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
jge
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jge
jge
jne
jne
jge
jge
jg
jg
jne
jne
jne
jne
jne
jne
jne
jne
jg
jg
jge
jge
jne
jne
jne
jne
addb
jg
jg
jne
jne
jne
jne
jg
jg
jg
jg
addb
incl
add
add
jne
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jne
jne
jne
jne
jg
jg
dec
dec
dec
jg
jg
jg
jg
dec
dec
dec
jg
jg
jne
jne
insl
insl
insl
jg
jg
dec
dec
dec
jg
jg
dec
dec
dec
decl
dec
jg
jg
insl
insl
insl
incl
add
add
jo
test
jg
dec
dec
dec
decl
dec
jg
jg
dec
dec
dec
jg
jg
test
jo
outsb
outsb
outsb
decl
jg
jg
jg
dec
dec
dec
jg
jg
jg
jg
dec
dec
dec
jg
jg
jg
jg
mov
outsb
incl
add
add
jp
sahf
sahf
sahf
incl
mov
xchg
xchg
xchg
call
xchg
call
xchg
call
mov
test
jp
jp
add
add
jbe
jbe
jne
jne
jne
jne
jne
jne
jns
jns
mov
mov
int
int
mov
mov
int
mov
mov
jns
jns
jne
jne
jne
jne
jne
jne
jbe
jbe
jns
jns
loop
loop
xlat
xlat
xlat
call
xlat
xlat
jmp
loop
jns
jns
ja
ja
in
in
in
in
in
in
pushl
ja
mov
ljmp
mov
add
stos
stos
ljmp
lahf
lahf
incl
add
add
jl
jl
incl
add
ret
add
roll
add
pop
add
lock
lock
loopne
add
rolb
add
add
add
pop
add
cld
aas
add
cld
aas
add
cld
aas
add
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
insl
add
jo
jne
jne
jns
jns
jle
jle
addb
add
mov
sahf
sahf
sahf
add
mov
add
int
add
xlat
xlat
add
loop
add
ljmp
incl
add
push
add
add
add
add
add
add
add
add
push
add
add
add
push
push
add
add
add
add
push
push
add
push
push
pop
add
add
add
add
push
push
push
push
push
push
push
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
pop
add
push
add
pop
add
add
add
add
pop
push
add
push
add
pop
or
add
add
or
or
or
or
or
pop
or
add
add
push
push
adc
movups
push
add
add
add
add
add
adc
adc
push
add
add
adc
or
pop
or
or
add
push
add
add
add
add
incl
add
ret
add
roll
add
pop
add
lock
lock
loopne
add
rolb
add
add
add
pop
add
cld
aas
add
cld
aas
add
cld
aas
add
jg
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
fcomps
jl
es
cmp
loop
and
lods
pushf
outsb
adc
addb
sti
and
sub
loopne
sarb
mov
in
loop
mov
or
loope
imul
dec
add
sbb
rclb
pop
jg
loopne
pushf
jp
mov
faddl
push
loopne
pop
outsb
daa
xor
ret
imul
scas
sub
push
cmp
pop
and
and
add
outsl
nop
xchg
adc
pop
pop
jge
loop
push
icebp
xor
pop
in
in
cli
bound
sbb
test
xor
mov
loop
das
inc
mov
es
leave
xor
movsl
shll
aas
imul
or
cmc
iret
int3
mov
sub
sbb
iret
or
stos
test
pop
popf
pop
aad
psraw
sbb
pushf
mov
imul
mov
fsubl
rclb
add
popa
sbb
xor
xlat
imul
inc
jge
gs
or
xor
jp
fcoms
pop
and
int3
std
cmpsl
push
adc
fisubrl
aad
repnz
insb
lds
jmp
push
mov
ret
out
hlt
mov
sub
nop
popf
insl
sub
cltd
cmpb
out
push
mov
int
stos
hlt
jp
mov
xchg
fsts
imul
push
pop
insb
cmp
fdivl
and
cmp
jb
jbe
clc
mov
pop
push
mov
cwtl
data16
xchg
fstpl
sbb
add
arpl
jecxz
aad
dec
and
mov
jno
push
inc
aam
lret
ljmp
lret
mov
push
xchg
dec
sbb
leave
les
cmp
in
jmp
push
stc
sbb
jb
pop
insl
jl
test
fs
into
stos
dec
mov
xor
dec
loop
mov
lret
lods
add
ja
and
aam
aas
aad
lods
adc
test
add
dec
mov
orl
cs
sub
hlt
add
sub
cli
divb
sub
pop
test
xchg
mov
push
fimuls
in
xor
mov
push
stos
scas
mov
mov
push
mov
or
cwtl
adc
movsb
repnz
ds
jmp
xchg
pop
xchg
arpl
xor
add
mov
xlat
fwait
inc
in
fsubl
sub
inc
outsb
jle
aaa
je
test
inc
dec
jge
in
lods
sarl
pushf
xor
insb
aaa
pop
push
adc
sub
popa
sub
sbb
sahf
in
sub
mov
xor
mov
sub
add
clc
mov
js
adc
mov
lock
iret
or
mov
mov
daa
push
adc
clc
adc
add
xor
mov
mov
xchg
adc
fisubrs
leave
loope
mov
dec
xchg
out
xchg
mov
xorl
in
pop
sbb
xor
scas
xchg
fadds
cmp
or
adc
mov
inc
push
add
adc
sub
cmpsb
sub
xchg
push
xor
jge
sahf
pop
and
jmp
push
jmp
cltd
pop
adc
sbb
sub
jecxz
mov
mov
mov
cmp
sub
fnsave
jecxz
test
mov
sub
gs
xchg
mov
roll
or
mov
xor
pusha
adc
sub
test
pop
lret
hlt
imul
sbb
lret
or
loope
add
xlat
xchg
dec
jp
pop
or
mov
cmp
or
jo
sbb
jg
sub
mov
mov
fsubr
jg
subb
lret
and
or
mov
iret
jns
test
insl
les
add
inc
xchg
sbb
adc
jae
mov
test
pop
pop
xchg
leave
js
ror
cmp
sbb
jno
rep
cmp
pop
rorl
movsb
cmpsb
xchg
jecxz
addb
pop
stc
pop
xchg
adc
pop
cmp
push
cmc
inc
jge
mov
sbb
or
shll
jbe
or
pusha
mov
mov
jmp
sub
pop
cli
sbb
mov
cwtl
ret
xchg
and
mov
out
dec
enter
adc
xchg
inc
mov
and
pushf
lock
negb
flds
arpl
filds
divb
fsubrs
cmpsl
mov
iret
shl
int3
xchg
scas
sarl
aam
fsubrs
sti
xor
cmp
cmp
insl
sub
push
xchg
frstor
ja
xchg
mov
or
push
sub
xchg
out
mov
fninit
jno
push
xchg
push
loop
rclb
mov
add
test
cmp
jecxz
xchg
fnstcw
jns
mov
and
lret
dec
cwtl
jmp
addr16
sahf
cmp
xor
inc
mov
xchg
sub
aam
inc
push
imul
xor
testb
lods
es
pop
adc
andb
adc
jecxz
lock
test
int
xlat
sbb
pop
enter
shll
or
jp
fiaddl
scas
inc
pop
push
es
xor
xor
sar
xchg
scas
inc
push
sarl
add
xlat
mov
push
rclb
decl
dec
xchg
ja
das
scas
sar
xor
push
pop
pushf
jg
jp
test
bound
xchg
aad
or
push
sbb
addr16
sub
fs
lds
adc
xchg
sub
leave
add
ret
jecxz
cmp
test
outsb
add
cmp
cwtl
adc
mov
xchg
shrl
ret
adc
cmpsb
pop
push
or
mov
idivl
sahf
sub
js
mov
and
mov
mov
or
sbb
or
dec
add
bound
jl
ror
popf
push
push
and
fistpll
mov
popa
xor
adc
dec
xor
ret
add
cmp
out
out
mov
and
das
shrl
pop
xchg
lahf
icebp
jnp
sub
push
enter
pop
test
not
mov
lahf
inc
dec
xlat
cmc
leave
test
insb
pop
adc
xchg
cmpsb
dec
mov
cmp
xchg
pusha
call
cmp
xchg
xor
push
adc
or
lods
dec
icebp
scas
mov
mov
jg
dec
push
pop
lods
cmp
mov
xchg
repnz
cmp
adc
push
sbb
sub
fildll
lea
or
and
lret
jns
inc
xor
add
push
out
push
jecxz
insl
ret
pop
push
dec
pop
xchg
popa
inc
xor
xlat
sbb
lock
std
aam
inc
addr16
inc
mov
inc
xchg
js
movsb
adc
xor
lret
jb
decb
ret
jmp
aad
inc
out
test
dec
shl
cmp
xchg
dec
dec
cmc
mov
inc
mov
imul
fs
lahf
fstps
xchg
push
inc
xlat
out
xor
movsb
push
nop
aad
pop
xchg
pop
xchg
push
mov
jae
mov
cmpsl
jno
and
sahf
pusha
ds
imul
jbe
ret
ret
adc
loopne
push
mov
sbb
gs
xor
jne
xor
or
movsl
jg
jp
xchg
sbb
jge
dec
mov
add
mov
sub
sub
sbb
jae
xor
loopne
dec
push
test
jae
sbb
add
sub
bound
aas
fnstsw
sbb
mov
inc
lret
jecxz
lcall
xchg
insl
xchg
push
adc
call
ret
dec
prefetchnta
icebp
je
mov
enter
daa
jp
out
fdivrl
push
or
or
dec
push
cli
fcoms
out
sti
xlat
insl
cli
or
xlat
xchg
rclb
in
orb
sub
addr16
aad
cltd
push
push
sub
and
mov
sbb
add
and
pop
aas
outsl
jge
lcall
xchg
mov
add
or
jg
hlt
push
ret
cmp
jecxz
mov
mov
push
xchg
or
jp
iret
out
mov
mov
inc
mov
cmpsb
push
mov
xchg
xlat
data16
inc
or
gs
lret
cmp
adc
test
scas
jno
add
insb
popa
into
xchg
push
xchg
stos
daa
in
inc
mov
stos
stos
in
fistpll
sub
mov
cmpsb
lock
xchg
rorb
in
pop
into
hlt
scas
repz
xchg
xor
pop
jge
adc
imul
addl
lret
fldcw
lods
or
or
call
add
push
gs
mov
stos
fisubs
pop
xor
loopne
sbb
mov
dec
das
mov
inc
inc
int3
lods
push
jo
xchg
arpl
movsl
mov
xchg
dec
sub
shrl
outsl
jle
enter
jmp
inc
iret
stos
rcrl
test
es
cltd
xchg
jl
fdivrs
cmp
push
aam
in
lcall
fidivs
bnd
pushf
xchg
adc
xchg
pop
out
xorb
mov
lock
out
mov
jb
movsl
sbb
jg
lods
dec
pop
out
in
sbb
pop
xchg
mov
add
and
jo
sbb
iret
xor
mov
test
mov
pop
in
mov
les
pop
je
add
scas
xorb
pop
jmp
faddl
jne
sbb
or
jnp
xor
jg
cmp
inc
inc
jl
es
mov
out
mov
rcr
push
faddl
ret
push
test
rorb
add
ja
aam
xor
mov
test
cltd
and
repnz
stc
jl
lods
add
ret
push
mov
mov
push
cmp
loope
push
xchg
or
addr16
es
pop
jl
xor
jmp
loop
nop
cmc
dec
dec
inc
cs
fadd
xchg
insb
lock
jecxz
jle
lcall
cmpsl
dec
mov
pusha
pop
mov
or
adcb
mov
stc
mov
lret
rol
xor
cmp
rorl
dec
jno
popa
sub
leave
cltd
xchg
roll
jne
sbbb
shrb
mov
test
sbb
dec
jbe
popa
and
push
add
jp
fsubp
cld
add
jle
icebp
nop
sub
sbb
aad
jecxz
js
lock
mov
js
je
dec
lods
mov
pop
leave
mov
repnz
repnz
add
xor
int3
fstpt
mov
test
call
shll
xor
jmp
fstl
adc
push
inc
pop
or
push
pop
sbb
jmp
rcll
and
aad
arpl
daa
push
loop
mov
mov
or
fwait
cli
dec
loop
roll
xor
es
xor
xchg
scas
aaa
fwait
pop
sbb
in
cmp
inc
mov
dec
aaa
jns
dec
sub
push
and
pop
lock
mov
dec
je
scas
dec
aaa
in
dec
inc
mov
imul
ret
push
lahf
test
repnz
lret
movsl
or
push
cmpsl
mov
movsb
js
iret
aas
mov
xor
mov
xchg
xor
push
cli
pop
inc
mov
addr16
and
es
lret
enter
ror
fptan
rcl
add
gs
mov
sbbb
test
pop
inc
bound
mov
cmc
stos
out
mov
mov
outsb
cmp
mov
aas
outsl
call
mov
jne
dec
push
dec
dec
push
jl
lods
ret
mov
fwait
cmp
jl
sub
jle
mov
clc
inc
cmp
popf
inc
mov
fidivrl
std
jl
inc
or
cmp
rcrb
sub
jg
mov
dec
or
sub
xor
repz
dec
jp
inc
mov
jmp
cmp
sub
lea
mov
push
push
sbb
xchg
pop
sub
mov
pop
fs
pop
loope
pop
nop
imul
cmp
fs
jle
outsb
jle
jbe
lea
xlat
insb
in
arpl
or
and
jge
jnp
mov
sbb
loopne
fwait
inc
jbe
negb
decb
pop
outsb
enter
mov
or
jle
dec
mov
jmp
push
cs
stos
aaa
cmp
add
clc
push
sahf
out
add
ret
inc
js
mov
mov
test
orb
adc
cmp
flds
fidivrs
xor
xor
sbb
mov
mov
cwtl
xor
mov
outsl
sub
pop
loop
hlt
pop
scas
inc
inc
cmp
hlt
ret
cmp
pop
adc
mov
xor
push
adcb
outsl
mov
fstps
in
sbb
rorl
sti
andl
pop
lds
mov
rcrl
jae
jbe
pusha
mov
sbb
idivl
adc
lahf
js
pop
cmp
dec
ss
mov
mov
inc
shlb
dec
lods
outsb
xlat
jmp
movsl
loope
out
jb
cmp
cwtl
sti
adc
lea
test
xor
in
add
hlt
in
fs
jge
call
adc
and
mov
sbb
cmpsb
pop
mov
and
loop
jmp
or
add
ret
icebp
sbb
lods
mov
dec
frstor
sarl
shl
ret
jp
push
lods
imul
mov
mov
cmp
pop
mov
mov
xchg
rol
adc
jl
and
sbb
jnp
sar
sti
pop
stc
aad
bound
or
mov
and
jae
loop
xor
cmp
insb
je
pop
push
ljmp
dec
mov
or
dec
mov
loopne
lods
or
and
movsl
jns,pt
mov
lods
sub
mov
mov
sbb
movsl
fidivrs
std
popa
incb
dec
and
bound
test
sbb
aad
mov
mov
sbb
inc
lods
cmp
aaa
dec
xchg
dec
sbb
ds
sbb
idivl
das
adc
cmpsb
push
std
dec
sbb
pop
repnz
jle
addr16
aaa
stc
aam
mov
orl
jbe
cltd
incb
popf
aad
jge
scas
inc
and
lods
icebp
add
es
and
push
rorl
mov
mov
insl
mov
sub
out
clc
mov
sbb
mov
idivb
shrb
xchg
add
lret
jo
outsb
je
ss
lahf
push
mov
cmpsl
mov
or
data16
sarl
cmc
ljmp
adc
pop
lahf
jb
sub
idivb
sbb
jg
cmp
mov
pop
out
in
inc
out
shll
sub
push
mov
mov
fmulp
andl
cmpsl
mov
inc
idiv
in
cli
ret
cwtl
sbb
mov
cmp
sbb
faddl
pop
mov
mov
mov
data16
mov
aaa
fst
xor
mov
aaa
jl
dec
xchg
pop
pop
sbb
dec
sbb
arpl
sbb
or
mov
inc
xor
ss
mov
shrl
fs
xchg
pop
mov
jecxz
dec
xlat
les
scas
shrb
mov
or
add
pop
out
fsubl
icebp
stos
cmp
data16
xchg
sbb
outsl
mov
sbb
add
push
pop
pushf
pop
and
sbb
mov
or
sub
shrl
push
leave
push
push
and
cld
sar
inc
push
fld
js
cli
pop
mov
mov
ljmp
stos
fdivrs
sub
nop
jae
jno
xchg
jae
xchg
pop
xchg
icebp
cmpl
mov
jl
gs
outsl
adc
ficoms
lock
gs
pop
stos
mov
dec
in
xchg
xchg
pop
leave
popa
add
in
mov
mov
cs
enter
es
testl
add
test
lret
mov
test
mov
dec
mov
jle
outsl
faddl
arpl
gs
push
xchg
aas
push
xchg
adc
sti
mov
movsl
sbb
pop
jae
and
and
cs
shrb
roll
jo
mov
into
xor
xchg
or
jle
mov
clc
addl
dec
jg
dec
mov
mov
adc
hlt
fadd
jge
scas
icebp
fcompl
in
inc
xorb
aas
push
into
or
nop
dec
gs
jp
push
test
push
inc
mov
xchg
add
mov
and
jno
add
sbbl
mov
int3
imull
cmp
push
popa
cltd
push
mov
fstpt
mov
ror
xchg
mov
ljmp
dec
mov
xchg
popl
cmp
out
jecxz
mov
inc
dec
lret
xor
sbbl
inc
out
sbb
or
jno
aas
clc
lret
adc
int
xchg
test
pop
cmp
or
or
pop
test
mov
mov
das
test
jno
testl
movsl
xchg
ljmp
clc
jmp
cmp
adc
lods
mov
shll
jbe
xchg
adc
or
dec
inc
cmc
pop
xchg
std
cmp
mov
pushf
xchg
jno
or
lods
cmpsb
cmpsl
mov
cmpsb
pop
mov
ficompl
jl
mov
pop
sahf
cwtl
xor
sbb
lods
ss
fs
aas
pop
push
mov
sub
andb
repnz
mov
push
push
add
jo
gs
cmp
into
scas
movsb
xchg
ret
xor
push
lahf
fs
call
mulb
ret
mov
sti
inc
mov
jns
stc
test
lahf
adc
outsl
adc
outsb
arpl
int
test
outsb
cwtl
fwait
aam
rorl
adc
aas
jb
adc
shrl
dec
or
mov
ret
xchg
in
imul
insl
or
shrb
xor
test
xlat
adc
enter
pop
push
mov
out
gs
push
xor
dec
lret
push
pop
loopne
add
dec
pop
movsl
shl
inc
fmull
pop
mov
lock
mov
lock
loop
mov
les
mov
lcall
mov
xor
sbb
pop
xchg
mov
add
adc
popf
addl
mov
inc
xor
mov
push
enter
jbe
jmp
ja
enter
sbb
out
adc
std
mov
inc
and
in
popw
cld
push
push
sbb
jo
in
xchg
tzmsk
xchg
out
or
pop
mov
dec
mov
sbb
ljmp
leave
adc
add
adc
xchg
in
cmpsl
add
push
adc
or
insl
rcl
xlat
or
sbb
scas
lea
xor
sti
jmp
js
cmp
stos
sub
jle
mov
repz
testl
lcall
pop
cli
and
clc
push
popa
dec
mov
and
xchg
ret
xlat
sbb
loop
or
jecxz
mov
xlat
pop
int
dec
fnstsw
jo
mov
arpl
cmc
inc
xchg
cmp
sbb
lock
push
push
add
add
lods
out
test
cmp
mov
mov
cmp
or
jbe
das
sbb
push
lock
ds
mov
jg
int3
jmp
xchg
out
jmp
lods
xchg
loopne
push
aam
pop
sahf
ds
int
cld
push
les
roll
xchg
test
pop
xorl
or
xlat
scas
cltd
call
xchg
out
std
dec
iret
sti
fwait
testb
push
inc
fidivrs
cmp
scas
or
in
pop
enter
cmp
jmp
and
enter
les
fildl
mov
repnz
push
fmuls
fstp
cli
adc
sub
fistpll
dec
add
imul
sbb
js
xchg
inc
or
loopne
inc
cmpsl
push
imul
mov
test
dec
aas
rcl
sub
out
cli
xor
int3
pop
push
loop
cmp
aad
testb
sub
pop
and
xchg
sbb
bound
and
push
loope
fs
or
jne
add
inc
pop
add
pop
jmp
dec
out
or
aam
faddl
fwait
dec
dec
jl
out
sbb
or
push
pop
test
sub
or
movsl
daa
inc
sbb
sbb
leave
jecxz
pinsrw
dec
in
fcoml
push
xor
cltd
jnp
fiaddl
cmp
mov
mov
or
js
icebp
dec
and
bound
pop
dec
inc
or
adc
mov
add
andb
rcrl
popa
ret
test
push
aas
pushf
ja
lcall
movsl
pop
stos
sub
in
vhaddpd
cmpsl
aaa
leave
mov
cld
stc
popa
jns
dec
in
loopne
push
lods
stos
decb
fisttpll
cmpsl
mov
jo
in
dec
gs
mov
mov
rcll
inc
das
jae
sar
in
dec
jl
dec
add
addr16
xlat
mov
and
push
fisubs
xor
fldenv
popf
mov
cltd
inc
push
rcrl
push
add
mov
add
dec
jb
loop
push
ror
stc
and
arpl
sbb
adc
sbb
test
lods
xchg
fnsave
in
sbb
pop
scas
in
or
mov
pop
mov
or
inc
and
and
sbb
inc
push
add
and
mov
testb
add
and
lret
lods
add
call
push
pushf
mov
xchg
aad
jle
fcomip
inc
sub
inc
aaa
lea
or
sti
enter
push
iret
cltd
push
popf
int
popf
daa
pop
aas
sar
push
adc
mov
dec
jmp
aas
cs
inc
test
push
pop
enter
iret
int3
mov
into
je
aam
shll
sub
sahf
or
push
loope
adc
popf
xor
xor
xchg
in
dec
hlt
arpl
cs
test
dec
fwait
mov
xchg
dec
jne
mov
aad
sbb
leave
popa
mov
aad
pop
leave
mov
dec
push
push
sub
int3
mov
mov
test
sbb
leave
es
int3
gs
je
adc
cmp
jne
or
mov
shll
fdivl
popa
add
daa
int3
ret
cmp
mov
ljmp
sahf
adc
loopne
popa
call
arpl
rolb
ror
push
ret
pop
stos
scas
or
das
fsubr
push
cmp
push
xchg
and
pusha
push
shll
fdivr
inc
or
fwait
and
enter
cmpsb
mov
stos
cwtl
imul
xchg
repz
loope
push
popa
arpl
cmp
test
mov
mov
mov
push
or
inc
xchg
xchg
in
add
fmulp
xchg
xchg
daa
jmp
aam
loope
xchg
jbe
xchg
sbb
sbb
mov
xchg
lret
stc
repnz
scas
or
dec
flds
mov
lods
jbe
nop
ret
or
lcall
aaa
cmp
fs
mov
push
inc
or
aas
pop
jb
in
mov
test
ja
and
mov
rorl
stc
mov
mov
fst
test
loop
inc
adc
cld
sub
ret
lret
jae
cmp
and
jle
fists
sub
cmp
sbb
xchg
mov
sahf
jno
fsubs
popf
push
stc
into
roll
mov
xor
and
jl
or
jmp
clc
pop
jecxz
movsb
fwait
dec
dec
sar
adc
popf
out
sub
mov
xor
in
adc
stos
std
or
lods
xor
mov
insl
imul
ljmp
pushf
jae
adc
sbb
jnp
adc
test
jl
mov
mov
jp
fiaddl
mov
lahf
sahf
jg
ret
lret
xchg
repz
adc
ss
xchg
xchg
jle
jmp
bswap
dec
mov
xchg
inc
mov
dec
insl
jmp
mov
out
jnp
xchg
pop
leave
cmpl
in
int3
jmp
adc
les
rcr
fwait
inc
add
lcall
rcrb
add
jb
ret
mov
outsl
test
xlat
add
bound
jno
and
adc
push
dec
jb
je
aas
jb
sbb
mov
into
cli
jno
shl
out
aam
imul
sub
jmp
test
sub
out
xor
incb
inc
rcll
dec
mov
xchg
jge
lahf
flds
or
sbb
rcrb
jl
push
push
in
mov
or
cli
lret
stc
mov
pushf
dec
add
out
int
dec
jbe
aam
jns
xor
rorl
lds
pop
jge
pop
mov
xchg
pop
mov
add
negl
je
scas
mov
adc
out
push
pop
ret
roll
sub
test
iret
and
test
inc
cmp
jle
std
push
pop
adcb
sub
les
cmpsb
dec
stos
pushf
loope
in
aas
mov
add
mov
cmp
adc
fs
push
popf
cmc
sbb
in
iret
dec
push
xlat
and
imul
mov
sub
add
loopne
push
push
stos
aaa
mov
out
mov
scas
xor
cltd
js
sbb
push
inc
lods
jecxz
cmpsl
jne
lock
aaa
mov
jg
lea
int3
out
jmp
xchg
loope
lret
jns
das
stos
aaa
mov
add
mov
sub
in
subl
int
clc
pop
jb
push
repnz
adc
imul
in
dec
testl
lret
lods
adc
cmp
loop
je
out
mov
adc
out
imul
pop
cmp
pop
decl
mov
stos
daa
sahf
lods
in
inc
sbb
out
pop
and
xor
inc
mov
mov
sub
and
push
or
push
or
cmpsl
xor
push
dec
xor
pop
inc
inc
sub
out
popa
test
jecxz
mov
dec
sbb
call
test
ja
xor
ret
and
pop
inc
dec
pusha
lea
sbb
stos
cmp
std
push
inc
out
xchg
psubusb
mov
adc
out
jmp
lahf
xor
pop
call
add
mov
imul
and
sbb
imul
cld
push
out
cmp
push
jl
xchg
addl
lods
adc
rclb
dec
dec
mov
add
mov
out
mov
inc
enter
loope
sbb
cmp
pushf
add
je
inc
movb
cmp
nop
pop
sbb
arpl
aad
and
fists
inc
push
and
mov
mov
mov
mov
cmp
outsb
pop
rclb
pop
inc
pop
inc
push
test
and
dec
jge
sub
jp
sub
fstpt
outsl
shrb
mov
jp
inc
int3
mov
jnp
mov
jmp
shr
jmp
xchg
fists
add
xor
popf
push
dec
fstl
sahf
push
mov
gs
adc
shll
xor
insl
mov
adc
es
jns
repz
mov
shll
lret
imulb
cli
push
dec
or
lea
cmc
cmc
popa
lods
fdivrl
pop
enter
and
jl
push
mov
out
sub
test
xor
xchg
outsb
fmulp
fdivrs
jg
hlt
lock
and
jge
mov
mov
push
sbb
add
pusha
add
bound
fsts
dec
lea
xor
nop
dec
sub
enter
out
push
dec
push
jns
sub
test
div
pop
outsl
sbb
dec
loopne
popf
mov
or
sub
ret
mov
cmp
add
dec
mov
test
jl
pop
int
dec
or
sbb
fwait
pop
pop
jno
mov
pop
xchg
dec
cmp
push
in
popaw
rcrb
les
push
push
aam
insl
insb
ss
sahf
pop
push
mov
push
vpmaddwd
leave
mov
jno
in
arpl
aad
and
xor
into
int3
ljmp
jae
xor
mov
push
mov
imul
sbb
call
dec
hlt
adc
xchg
aad
inc
ror
dec
xor
das
in
aad
enter
pop
pop
cwtl
inc
inc
mov
lret
pop
mov
push
scas
dec
push
out
sar
inc
cmp
mov
jo
in
mov
test
cltd
or
lahf
decl
adc
or
cmp
or
mov
and
jg
into
lods
cltd
aaa
sbb
cmpsb
or
loopne
adc
pop
xchg
repz
xchg
aaa
clc
stc
or
or
xchg
xchg
mov
fwait
add
cld
xor
out
or
adc
xchg
cmc
insl
sub
or
mov
xchg
or
inc
fbld
fimull
push
out
ja
jge
pusha
or
rorb
out
insb
mov
jns
hlt
xlat
lret
lock
sbb
cmpb
mov
imull
fcmovne
cwtl
jp
lret
dec
outsb
pop
imul
xchg
fnstenv
dec
mov
pop
shll
and
fiadds
jge
pop
loop
jnp
jmp
mov
adc
sub
jo
push
push
cmp
xor
lret
rorl
lds
pop
mov
push
in
hlt
movsl
invd
jne
fsubp
ljmp
push
add
pop
repz
dec
std
inc
cmpsb
sub
xchg
mov
pop
out
cwtl
pop
cmp
dec
and
pop
xchg
fldcw
xchg
mov
cmp
push
inc
mov
sbb
xchg
iret
jb
insb
mov
xor
ja
mov
dec
and
jecxz
jp
adc
insl
lahf
dec
rorb
jno,pt
or
lds
dec
jne
in
xchg
mov
jmp
shr
in
cld
xor
rol
cld
inc
adc
mov
repz
adc
pop
es
sub
inc
xor
fsubr
fistps
push
push
sbb
cmpsl
lods
stos
jmp
pop
add
clc
mov
leave
push
mov
mov
adc
xchg
or
jmp
adc
add
fimull
push
scas
subl
inc
pop
gs
aam
popa
or
and
aad
aad
arpl
in
mov
jns
or
jmp
jnp
xchg
cmp
in
jns
mov
adc
cltd
mov
add
xchg
push
mov
dec
ficoms
fwait
pop
leave
lea
insb
inc
mov
cmpsl
fstps
and
xchg
je
push
ja
shrl
cmp
mov
out
lock
leave
push
pop
mov
mov
xor
adcb
and
push
daa
mov
ror
out
test
data16
stc
in
ljmp
jns
out
pop
sbb
sbb
mov
dec
ja
clc
add
in
mov
test
push
sti
xchg
aad
add
push
xlat
ljmp
jl
es
pop
mov
sbb
pop
pop
cmp
outsb
rclb
stc
movsl
lods
clc
aam
iret
dec
addl
xor
xor
sub
ret
mov
aad
test
shl
jg
xchg
pop
cmp
roll
add
mov
lea
insb
cmc
inc
scas
enter
pop
and
add
mull
jg
xchg
data16
ret
cwtl
mov
ja
dec
mov
cmp
int
sub
cmpsb
test
or
xchg
scas
and
push
cli
sbb
jne
cmp
fwait
add
test
cmpsl
inc
push
addr16
dec
jl
fmul
mov
add
jg
push
outsl
xor
ss
scas
sub
out
mov
dec
int3
jle
inc
into
inc
xor
inc
scas
jb
arpl
jge
inc
inc
adcl
push
push
jge
lds
adc
gs
and
fdivrs
jmp
nop
imul
das
les
inc
icebp
out
stos
lock
lcall
lahf
jno
mov
xchg
cmpsl
aas
aas
pop
nop
adc
leave
add
cmp
mov
lds
add
xor
stos
ret
pop
arpl
lock
arpl
cmp
jns
mov
movsb
cmp
insl
test
ret
adc
cwtl
out
hlt
data16
enter
in
dec
fs
mov
gs
dec
mov
push
cmp
pop
mov
jo
and
xlat
push
lock
data16
jg
or
rol
mov
data16
and
in
adc
scas
jne
and
nop
cltd
push
sbb
xchg
cmp
dec
sub
or
jmp
imul
aaa
mov
add
adc
mov
dec
jae
xchg
rcr
sbb
inc
imull
dec
pop
insl
les
xchg
pop
into
les
pop
add
inc
mov
pop
int
cmp
cmp
jmp
mov
popf
jae
mov
push
pop
clc
imul
add
lds
sbb
in
push
aas
mov
pop
out
cmp
cmp
dec
dec
ds
lods
js
mov
cmc
or
mov
mov
mov
add
add
orl
cli
lock
push
insl
jle
xchg
mov
dec
push
js
outsb
call
push
das
xchg
mov
int
inc
dec
xchg
inc
inc
int
pop
adc
pusha
cli
sbb
fwait
push
pop
mov
out
xor
test
in
mov
pop
jmp
movsb
in
jns
idivl
mov
cld
inc
jl
xor
pop
out
fsubr
add
in
jae
ds
ja
jg
mov
lret
mov
out
loopne
push
shlb
pop
inc
lods
fs
jne
sbb
call
idivb
sub
loope
inc
cmp
inc
inc
sub
das
cmp
jmp
xor
mov
rcr
mov
cmp
fistl
mov
test
aam
data16
mov
fcomps
add
pop
dec
push
out
loope
mov
js
notl
das
dec
xor
push
and
jae
repnz
push
call
mov
neg
adc
fwait
dec
aam
aas
lcall
hlt
xor
xlat
jge
and
cs
hlt
lahf
jmp
jne,pt
stc
mov
mov
inc
out
add
pusha
jg
mov
scas
push
cld
xchg
inc
mov
adc
lock
mov
repz
shlb
sti
js
ficomps
pop
xor
dec
xor
hlt
ret
inc
sbb
xchg
and
inc
test
pop
mov
sbb
test
and
inc
test
lcall
and
stc
xchg
and
test
das
pop
addl
inc
adc
adc
xlat
mov
push
outsb
jb
or
repnz
repnz
loopne
push
out
push
or
rcl
mov
cli
test
pop
sbb
sub
cmpsb
cli
setbe
aas
dec
jbe
daa
push
int3
vmovdqa
inc
popa
push
sub
out
jne,pn
add
adc
push
jb
insl
xlat
ljmp
ljmp
sub
test
sub
sub
sub
mov
mov
test
mov
scas
loope
pop
sti
int3
push
test
out
mov
addr16
data16
fsubs
das
lea
inc
sbb
insb
add
jg
aas
mov
cmc
lret
nop
cli
add
adc
or
mov
shll
sub
out
mov
loope
popf
push
sbb
sbb
cmp
lds
stc
cs
stc
inc
into
push
inc
fisubl
cmpsl
and
icebp
fninit
mov
jmp
loop
add
add
sbb
cltd
and
roll
dec
push
and
fistpl
jmp
adc
into
ja
cmp
jmp
jecxz
dec
repnz
aad
add
shlb
mov
push
dec
pushf
inc
sbb
hlt
xchg
cmp
lret
aaa
dec
sahf
loopne
dec
xchg
sbb
out
mov
insb
cmpsl
push
sbb
mov
cmp
loop
or
sbb
adc
loopne
mov
and
or
mov
xchg
pop
xor
int
pop
nop
dec
mov
xchg
aam
xchg
sbb
fisubrs
lock
fxch
xchg
enter
add
inc
xchg
or
jno
in
mov
fwait
push
adc
inc
stos
sbbb
xor
push
jmp
push
stos
add
inc
inc
mov
jns
imul
popa
jle
jl
test
xor
test
shll
adc
fcomps
divb
adc
xchg
sbb
pop
cltd
push
mov
in
cmp
roll
loop
loope
pop
mov
nop
outsb
mov
out
pop
stc
lea
addr16
dec
xor
or
xor
mov
sub
rclb
add
int
add
inc
arpl
mov
jp
lods
aad
cmpsl
in
rep
mov
xor
pushf
mov
mov
sub
inc
divl
mov
cmp
pop
push
pop
mov
xchg
loopne
pop
sbb
and
sub
movsl
and
scas
xchg
adc
mov
movsb
inc
mov
testl
sarl
jno
jp
ficoms
sbb
test
inc
xchg
xchg
enter
imul
test
cltd
xchg
inc
out
or
or
jne
popf
aad
adc
inc
std
mov
bnd
sbb
in
pop
push
sbb
das
add
arpl
inc
repnz
xor
insl
jno
jo
mov
mov
xchg
jmp
jecxz
int3
cltd
mov
jmp
mov
push
mov
dec
push
movl
daa
imul
cmc
and
push
out
pop
mov
cmp
popa
inc
xor
leave
sub
fs
mov
adc
pop
rcrl
xchg
sbb
imul
in
adc
add
test
leave
mov
cmc
or
cld
jne
xchg
pushf
stc
inc
xchg
leave
outsb
jae
iret
mov
pop
xchg
xor
es
leave
push
in
sbb
mov
inc
int3
adc
cli
jo
xchg
lcall
sbb
imul
adc
mov
cmp
gs
push
movsl
pop
xor
out
scas
cmp
mov
push
adc
outsb
pop
pop
sub
cli
lock
pop
decb
dec
xchg
jg
mov
cmp
nop
mov
rorl
fdivl
lcall
mov
int
fbstp
push
addb
in
pop
pop
sti
insb
pop
fsubs
push
pusha
das
hlt
jnp
imul
inc
dec
mov
push
jb
shrl
sbb
pop
dec
adc
call
icebp
adc
mov
inc
add
jl
xor
sti
dec
fwait
lds
jmp
sarl
push
cltd
bound
js
enter
push
push
mov
xchg
iret
std
aam
fadds
xor
nop
push
mov
mov
das
inc
icebp
xchg
jecxz
add
fadds
inc
insl
jmp
mov
fidivrl
and
aas
outsb
mov
nop
hlt
mov
adc
stos
imul
scas
in
out
nop
jecxz
mov
push
lret
es
push
or
add
xchg
xlat
or
mov
adc
adc
sbb
imul
dec
cmpsl
dec
sti
inc
lods
push
jp
jp
inc
daa
pop
sub
icebp
lcall
mov
xor
jno
in
negl
and
mov
pusha
sbb
das
sbb
filds
cmp
jns
xor
daa
lock
aaa
sub
clc
les
mov
scas
mov
rcl
jle
mov
add
pusha
cmpb
shrb
mov
imul
dec
pop
pop
cmp
push
sahf
jae
mov
inc
sub
cmpsl
push
push
sbb
mov
mov
loopne
sbb
es
out
pop
fimull
les
movsb
or
icebp
dec
pop
mov
enter
push
pushw
jge
out
or
adc
in
xchg
lds
aaa
xlat
aas
dec
sbb
je
fisttpl
jbe
test
loope
in
xchg
stc
mov
xor
mov
mov
mov
sbb
movsl
hlt
and
je
jecxz
and
rorl
jecxz
fsubrs
imul
inc
and
inc
sbb
iret
movl
int3
pop
ss
sahf
ret
lods
dec
inc
and
fucom
add
movsl
cld
mov
adc
push
inc
mov
int3
and
addr16
jne
pop
es
dec
rcl
icebp
jg
jnp
mov
je
push
shl
jae
stos
jnp
sub
xor
enter
push
jl
xchg
mov
add
mov
imul
loop
icebp
mov
sbb
jae
test
mov
mov
int
pushf
jl
lea
or
mov
aad
loope
aaa
xchg
scas
sub
sbb
in
test
mov
out
es
dec
xor
mov
jmp
sbb
or
jo
cmpsb
cmpsb
call
mov
ss
or
fisttpll
cmc
addr16
cmpsl
pop
xchg
sub
bound
cmp
and
sar
mov
pop
push
lods
cmpsl
xchg
and
loop
dec
pop
sbb
xchg
lret
inc
jp
or
rolb
xor
icebp
mov
outsl
mov
jne
pop
dec
jg
jmp
orl
repnz
fistl
or
shl
mov
mul
clc
mov
cltd
icebp
insb
es
jp
cmp
add
clc
loop
mov
xchg
dec
test
sbb
cld
lahf
in
out
mov
and
sub
cs
jg
loopne
dec
mov
push
pop
fbld
ljmp
mov
inc
hlt
stos
int3
push
push
add
imul
les
pusha
adc
mov
mov
into
iret
and
inc
sub
xor
xor
test
loop
clc
repnz
in
mov
hlt
js
or
adc
xchg
xchg
clc
jne
ljmp
jns
fstps
or
in
mov
xchg
mov
jo
imul
push
mov
dec
push
sub
and
gs
mov
mov
bound
push
push
mov
ret
outsb
leave
dec
sub
xchg
test
repnz
xor
inc
stos
mov
negb
test
pop
push
xor
adc
pop
adc
mov
sbb
sub
sub
bound
jmp
push
enter
mov
in
mull
repnz
fnstcw
sbb
hlt
movsl
pop
neg
mov
xor
leave
push
enter
int3
pop
mov
xchg
shrl
mov
incl
pop
aaa
aam
test
mov
mov
lods
fs
pop
pushf
aad
les
mov
jb
sahf
xlat
mov
mov
dec
subl
dec
mov
dec
xchg
inc
aas
jp
loope
sub
cmovp
jo
pop
xor
dec
fistpll
add
out
dec
xlat
sbb
test
sbb
pop
add
mov
cltd
sub
pop
cmpsb
or
mov
mov
mov
lods
sbb
ficomps
mov
addr16
popl
mov
push
adc
idiv
dec
loopw
je,pt
fcomps
test
test
cmp
outsl
fists
cs
xor
xchg
movsb
les
shll
fucomi
or
sarb
rolb
and
mov
lret
pop
andl
pop
movb
in
sbb
sub
out
add
sbb
into
or
cmp
lret
imul
mov
adc
lea
adc
xchg
faddl
cmpsb
gs
sub
int
inc
xchg
pusha
and
mov
xchg
cmp
pop
hlt
and
fldcw
test
hlt
cmpsb
lea
nop
arpl
mov
addl
ret
mov
mov
pop
inc
xor
push
push
xchg
fcmovb
sbbl
into
xchg
add
insb
inc
mov
stos
int3
inc
xor
imul
ja
sub
xchg
or
inc
and
call
cmp
pop
shlb
les
popa
jae
sbb
ljmp
lahf
ficompl
mov
outsl
loope
xchg
mov
loop
loop
push
js
sbb
xor
imul
push
push
and
dec
adc
pop
or
es
dec
aam
gs
adc
xchg
mov
jecxz
lods
insl
push
jbe
stos
js
imul
js
jb
cmp
dec
loopne
and
or
int3
push
cmp
push
cmpsb
repz
cmp
gs
dec
out
sahf
push
mov
mov
je
xchg
xchg
jle
lods
mov
push
mov
adc
mov
popf
mov
mov
mov
and
sbb
cmp
mov
push
push
mov
ds
inc
or
aaa
imul
jne
shr
adc
push
or
popa
outsl
sbb
jae
ret
cld
jbe
jmp
add
or
sub
xchg
addb
inc
cmpsl
add
jle
fs
sti
dec
mov
sbb
gs
js
pushf
out
imul
lahf
jge
sub
fwait
and
lods
aaa
fcomps
cs
xchg
es
cmp
movsb
mov
and
xor
push
dec
aaa
or
or
mov
mov
jns
divb
ljmp
or
add
sbb
mov
inc
insb
sub
ljmp
in
push
mov
sub
lods
jb
rcll
orl
push
leave
mov
or
dec
aad
fistl
out
dec
sub
mov
jle
imul
daa
rorl
cmpl
xor
sbb
xchg
mov
or
cmpsb
sti
and
imul
jnp
jns
cmc
push
fisttpl
mov
ds
inc
rolb
adc
inc
lcall
lret
lcall
inc
daa
and
mov
insb
sbb
mov
add
push
pop
and
dec
inc
fucomi
adcl
out
hlt
adc
loope
cmp
mov
sub
dec
inc
cmc
sbb
aam
icebp
mov
dec
lcall
jg
push
int
jns
dec
sbb
pop
push
arpl
xor
int
add
rclb
xchg
insb
lret
stc
inc
cwtl
es
movsb
es
add
mov
mov
sti
mov
test
push
mul
add
stos
pusha
ja
lea
jmp
sbb
adc
jmp
sbb
xor
stos
addr16
es
mov
loopne
mov
in
aas
fwait
jmp
sub
push
xchg
jle
jge
faddl
push
add
or
pop
iret
mov
push
pushf
push
sbb
sbb
repnz
cld
dec
mov
ds
mov
in
outsb
pop
fbld
mov
hlt
pop
jnp
pop
push
rorb
push
pop
aaa
sub
sub
inc
and
or
cltd
lcall
mov
das
outsl
ljmp
jecxz
je
or
sbb
out
data16
icebp
rcrb
mov
adc
push
int
xchg
loop
aaa
mov
ret
aad
daa
mov
push
and
push
push
cltd
add
cmp
enter
fsubrp
jb
js
inc
cvtps2pi
addr16
std
je
sbb
daa
mov
jno
sub
aas
movl
pop
subl
jne
lahf
inc
ficoms
lods
scas
dec
rcr
and
push
cs
and
repz
rorb
sbb
lods
fidivl
test
lods
mov
adc
js
out
cmp
pop
test
sub
ds
fstl
pop
push
sub
cwtl
jns
cwtl
or
cmp
fsubrl
xchg
loopne
arpl
pop
xor
aam
mov
sti
aad
mov
shl
add
fmul
push
push
fisubrs
int
addr16
scas
xchg
stos
push
fdivs
mov
mov
mov
cmpsl
mov
repnz
and
and
mov
insb
ror
cmpsl
dec
mulps
dec
ret
adc
or
sub
cmp
lret
mov
cs
xchg
push
or
cmpsl
inc
pop
pop
in
imul
outsb
test
cmpsb
aam
mov
xchg
sbb
lahf
sahf
fcompl
dec
inc
cmp
pushf
mul
int3
call
shll
inc
mov
test
rolb
push
dec
add
cmp
xor
or
js
mov
lret
dec
inc
mov
dec
movsl
sbb
inc
mov
rcrb
ds
addl
insb
sub
mov
jp
mov
imul
add
mov
push
jb
lret
out
hlt
jl
xor
fucomi
push
mov
mov
test
mov
xchg
mov
std
or
inc
push
out
cld
mov
jb
xchg
fcompl
mov
dec
cltd
xor
sub
ds
sbb
negl
leave
sub
jmp
dec
push
sti
gs
pop
lcall
rcl
xlat
jl,pt
testb
test
or
lock
aaa
pushl
jle
je
push
lock
pop
mov
xchg
mov
icebp
adc
insb
cmp
or
out
fnsave
sub
mov
scas
pop
dec
pop
gs
jmp
or
scas
mov
jb
and
mov
xchg
mov
sub
push
lods
mov
push
dec
push
add
dec
test
inc
cs
jecxz
icebp
xchg
or
or
scas
lret
pop
ss
mov
repnz
cmp
mov
iret
or
jmp
aaa
stc
clc
stc
in
dec
adc
sar
sbb
lcall
repnz
jae
fnstcw
int3
ja
jecxz
xchg
adc
cmpsb
psubb
add
ret
ja
adc
outsb
imul
adc
test
in
xchg
inc
nop
dec
xchg
and
ret
adc
cmc
test
inc
sub
call
sub
imul
dec
pop
shl
mov
mov
jo
cmc
ret
arpl
flds
sub
cmp
push
lods
push
cltd
xlat
jo
ss
adc
cmp
mov
fldl2t
cmpsl
or
cwtl
push
stos
ficoms
or
dec
add
pop
adc
mov
pop
int
hlt
in
outsb
sbb
inc
sub
addl
jno
mov
jo
fmull
or
stc
add
push
dec
in
mov
lock
fimull
fisubs
push
shlb
ja
lret
add
sbb
into
jp
mov
iret
loopne
push
push
jl
in
and
mov
mov
push
imul
mov
jle
push
or
lret
das
mov
imul
jno
sub
or
scas
push
test
pusha
mov
dec
sub
addb
mov
imul
push
mov
test
es
sbb
test
mov
jno
push
loop
pop
sub
sbb
loopne
cltd
dec
pop
adc
dec
push
imul
ljmp
xchg
push
or
icebp
movsl
scas
je
xor
int
fnstenv
out
or
cmp
fbld
push
ret
lahf
and
lds
mov
push
mov
jmp
movsb
xchg
pusha
cmp
cmpsl
cmc
lcall
movl
dec
pop
mov
int3
mov
ret
test
daa
and
scas
pop
xchg
aam
push
ret
aam
sub
fisubrl
idivb
test
push
and
xchg
aam
cltd
lds
or
daa
aaa
push
mov
loopne
fimuls
jne
push
pusha
sahf
lods
and
xchg
inc
and
push
add
cwtl
xor
jle
test
outsb
and
push
aad
fidivrs
jns
jnp
cmp
popa
cmp
sub
cmpsl
ljmp
or
clc
in
pop
out
stc
fdivl
popa
ret
xchg
ljmp
sahf
push
xchg
pop
or
sub
sbb
in
subb
pushfw
push
xor
push
and
pop
popa
adc
scas
xchg
mov
or
ljmp
not
sub
int
test
jp
push
jns
cmpl
or
les
cmp
inc
jbe
int
cmp
inc
fbld
mov
lock
push
pop
adc
pop
rol
pop
cmc
rclb
jmp
subb
and
sub
bound
sub
roll
mov
pusha
pop
adc
or
ret
out
add
daa
ljmp
push
push
cmpb
mov
cmp
dec
pop
jle
or
orb
jmp
xor
or
dec
adc
ss
popf
pop
mov
push
lods
add
mov
pop
sbb
jne
cltd
sub
popa
adc
push
daa
and
jns
shlb
add
das
mov
fdivrs
clc
lea
pop
pop
in
cmpsl
arpl
jecxz
pop
movsb
mov
xchg
pop
push
and
out
push
adc
hlt
sbb
pop
data16
lea
fimull
sub
mov
mov
int3
adc
dec
mov
scas
outsb
nop
scas
out
and
popf
int
adc
sahf
mov
arpl
mov
pushf
xor
mov
cwtl
aad
rolb
fld
pusha
repnz
mov
rorb
or
xchg
push
iret
mov
dec
jbe
addr16
sti
push
pop
push
stc
mov
mov
push
jo
inc
clc
lret
mov
enter
mov
imul
cmc
roll
test
leave
dec
jae
jae
sbb
mov
fxch
push
shl
cmc
aam
jb
push
in
jp
loop
mov
leave
cld
add
mov
stos
xchg
out
mov
out
sub
es
jle
or
dec
or
mov
mov
fwait
pop
mov
dec
jp
jmp
insb
mov
in
aad
jnp
cmp
stc
sub
add
adc
adc
mov
pop
mov
imulb
cmc
sub
cli
xor
stos
pop
neg
mov
mov
sbb
mulb
sbbb
imul
mov
orb
adc
xchg
jl
mov
adc
fwait
lahf
jns
push
cli
ret
xchg
fs
scas
fbstp
icebp
mov
nop
push
ljmp
jb
adc
repz
jns
sbb
pop
and
dec
xor
pop
out
fxch
mov
repnz
rclb
push
sbb
mov
inc
cwtl
jp
xchg
xchg
pop
nop
lret
addr16
push
aad
dec
cltd
es
out
das
and
xchg
mov
ds
mov
mov
and
movsb
mov
pop
inc
sub
shll
inc
scas
jae
lahf
dec
stos
adc
xchg
js
pop
push
sub
add
push
icebp
mov
lods
pushf
mov
mov
push
inc
cmc
cmp
and
mov
jne
test
jb
ja
lahf
jmp
in
adc
mov
mov
rcl
xchg
mov
js
or
or
ret
lock
loop
push
jno
call
mov
fcmovne
clc
or
fs
jle
push
jbe
aam
int3
add
inc
jg
cmp
fcoms
inc
sbb
or
or
xlat
and
add
jno
mov
sahf
sub
mov
push
dec
clc
pop
adcb
mov
mov
mov
lcall
mov
lods
mov
push
cmp
mov
popa
iret
addl
and
inc
popf
sub
mov
sti
pusha
inc
dec
aad
stc
ret
adc
rcl
add
dec
test
cltd
rolb
sub
cmc
ljmp
add
pop
jae
mov
scas
testb
cmp
cmp
sub
into
pop
xor
test
pop
mov
fnstsw
cmpl
mov
outsb
pop
shlb
in
es
xchg
mov
cmp
dec
loope
popa
ret
in
sub
inc
mov
xor
dec
fcomps
cmp
leave
pushf
repz
mov
andb
cmp
nopl
lods
aas
lock
jle
cmc
push
stos
fldcw
iret
sahf
arpl
mov
das
mov
and
loop
xor
xor
je
mov
push
cmc
xor
or
test
push
out
dec
fcmovu
test
fs
dec
aaa
es
js
lret
popa
push
sub
mov
call
dec
mov
imul
sti
fwait
or
rcrb
and
push
dec
lods
ja
jo
sub
outsb
mov
mov
ret
add
xor
xor
stc
or
out
sarb
aam
xor
pop
movsb
sahf
cmp
jns
insl
cmp
daa
out
test
lds
mov
bound
push
faddp
xchg
pop
pusha
idivl
testb
and
outsb
scas
pop
mov
mov
ds
mov
add
push
popa
jne
shlb
das
cwtl
xchg
cmpsl
das
or
mov
aam
mov
lret
mov
jae
ja
inc
mov
sbb
adc
aad
imul
aam
jo
and
adc
int3
and
shlb
test
dec
xor
jg
and
lret
sub
or
add
aaa
rolb
out
push
outsb
pop
jle
cmp
scas
fmuls
dec
xchg
inc
sahf
rol
xchg
and
jmp
mov
out
pop
in
xchg
test
fs
and
popf
loope
imul
mov
xor
mov
aas
add
inc
and
inc
popf
adc
push
jb
push
jae
ss
sti
cmpsl
adc
ret
mov
dec
mov
jecxz
std
adc
push
sbb
bnd
push
repz
rol
jg
jp
mov
test
shll
pop
es
lcall
aad
addr16
mov
lahf
popa
dec
sbb
add
or
notb
mov
jl
jno
lods
xor
stos
into
addr16
pop
int
rol
ja
pop
in
and
inc
xor
xor
mov
push
out
xchg
push
push
loop
cmp
rcrl
loope
or
inc
push
shlb
cmpsb
sub
out
dec
jl
cmp
imul
inc
fcomip
dec
jnp
loop
ss
ret
sbb
pop
dec
outsb
lds
jge
fldcw
repnz
pop
in
shrb
jp
cmpsl
ret
out
push
stos
das
ffree
lret
ror
push
outsb
data16
push
mov
push
das
ret
xchg
xor
aaa
cli
push
aaa
int3
or
mov
push
xchg
mov
inc
int
add
jmp
mov
lock
push
movl
insl
enter
bound
or
xor
icebp
pop
int3
or
or
inc
fimull
push
push
jl
fwait
ss
icebp
push
js
lds
out
in
in
inc
sti
xchg
jbe
call
cmp
pop
adc
jecxz
jne
adc
mov
data16
mov
rcll
jno
push
outsb
cs
mov
int3
subl
leave
rcll
or
inc
popa
pop
jbe
iret
repz
push
mov
lods
or
add
mov
pop
sbb
jp
or
push
fdivrl
sub
mov
mov
xchg
cld
std
sbb
adc
jno
inc
inc
lcall
mov
mov
daa
inc
mov
mov
mov
mov
dec
push
mov
jnp
outsb
lea
daa
xor
mov
inc
je
lahf
scas
int
loop
cmp
and
cmp
push
out
and
fdivr
inc
cwtl
xchg
pop
and
int
jle
mov
jle
pop
call
clc
and
inc
jb
push
mov
cltd
push
mov
cwtl
or
dec
popa
and
sbb
add
push
mov
sbb
stc
into
cmp
inc
and
push
push
rcrb
pop
andl
mov
adc
or
mov
sub
jo
pop
test
jno
out
adc
inc
mov
ret
add
pop
pop
mov
add
outsl
cmp
lret
fisubs
xor
lods
xchg
xorl
or
enter
xor
sahf
sub
cmp
mov
pop
hlt
dec
loopne
clc
pop
add
inc
sbb
daa
sub
test
ror
jg
xor
repnz
inc
or
lea
mov
mov
out
jbe
call
and
or
add
aaa
push
adc
sbb
pop
repnz
inc
jl
add
leave
aas
xor
dec
cmp
fisubs
mov
rcll
cpuid
inc
aas
sub
jge
fsubrl
inc
lods
or
dec
adc
in
push
adc
or
dec
out
or
repnz
cltd
fwait
shlb
int
jg
and
imul
pop
adc
push
test
shl
cmp
test
rcll
rclb
jbe
cwtl
xor
fidivrs
shlb
out
shll
pusha
cmpsl
pop
jge
test
sub
sbb
iret
ds
jo
and
inc
lahf
mov
mov
fcomp
sti
filds
movsb
pop
add
repnz
sub
fsubrl
je
loope
stos
test
jb
imul
add
lods
mov
push
scas
test
movsl
push
or
aam
mov
aam
sarl
pop
dec
mov
subb
ja
iret
push
insl
nop
mov
jle
adc
mov
cmp
cmpb
add
xchg
mov
aas
lock
xchg
repz
jecxz
sbb
loope
xor
clc
std
out
inc
jge
fisttpll
fdivrs
sub
mov
mov
aaa
out
out
push
pushf
test
loop
and
inc
push
sub
iret
cmp
pushl
mov
out
adc
mov
push
data16
fcmovnbe
ret
loopne
xchg
movsb
mov
mov
mov
jl
pop
fldl
popa
fs
pop
mov
xor
and
push
add
in
frstor
in
cmp
movsl
lods
cwtl
or
rorb
dec
jnp
add
daa
pop
loope
cli
and
lds
mov
or
fdivr
test
enter
imul
inc
jmp
push
and
lods
jg
jge
push
fstpt
xorl
mov
dec
test
xchg
sbb
movsl
fucomp
mov
loop
sbb
cmp
mov
std
scas
add
mov
les
push
ss
mov
pusha
sbb
fs
shrb
pop
sub
test
pushf
inc
push
test
pop
daa
inc
xchg
mov
jmp
mov
and
notl
packuswb
xchg
shl
push
sbb
mov
scas
jb
jo
and
inc
lds
push
or
xor
xchg
inc
call
mov
and
xchg
mov
adcb
movsl
pop
cmp
push
pop
stos
bound
xchg
out
jb
insl
jns
sbb
mov
arpl
push
test
xor
mov
xor
xchg
add
out
outsl
push
lock
lcall
pop
or
ds
jp
cmp
inc
mov
std
iret
arpl
sbb
js
cs
jecxz
mov
xor
mov
subl
mov
cld
add
sub
mov
ja
or
aas
mov
dec
push
bound
and
out
jns
sbb
jb
sub
scas
cmp
andb
jne
mov
gs
mov
sub
test
xor
mov
jg
lods
ds
repz
xchg
cmpsb
cwtl
out
mov
enter
aam
dec
xchg
and
cmp
adcb
popl
jecxz
add
loope
cltd
or
ljmp
addb
sbb
add
adc
js
pushf
add
fs
sub
or
dec
dec
lods
xor
adc
mov
xor
in
mov
mov
pop
pusha
daa
roll
repnz
dec
xchg
in
or
xor
fdivs
inc
or
jnp
mov
fs
ja
and
lahf
aas
fildl
pop
test
inc
dec
xchg
and
sbb
jle
.byte
