sbb
add
mov
xchg
popf
outsl
adc
dec
insl
pop
jmp
loopne
notl
jge
mov
pop
mov
xchg
fwait
les
ds
int3
iret
out
cmp
push
in
rcl
xor
out
sub
mov
pop
or
mov
ficompl
mov
rol
jnp
adc
popf
jno
adc
push
cmc
sub
cmpsb
nop
repz
cmp
les
or
pop
out
aas
pop
xchg
mov
lea
sbb
cmp
insl
sbb
push
mov
push
push
xor
pop
sbb
int
mov
les
fsubs
push
leave
out
ret
pop
pop
or
add
out
inc
data16
mov
movsl
pop
mov
lcall
fcoms
addl
xor
je
ss
ret
mov
les
inc
cmp
mov
dec
iret
lcall
and
mov
dec
adc
sub
dec
and
pop
orb
out
aam
andl
sbb
jmp
lea
sub
fsubrl
lods
scas
mov
lods
mov
dec
mov
test
test
pop
or
rcr
arpl
push
outsl
mov
cmp
xlat
ret
fistpll
jne
jae
adc
xor
xchg
into
outsb
notb
fistps
cmp
add
mov
sbb
xchg
jne
pusha
test
mov
out
jl
pop
dec
ljmp
cmp
jno
iret
mov
int3
pop
push
rcr
and
mov
inc
mov
fcomip
jb
in
outsb
dec
aad
insl
pop
leave
lcall
adc
fldenv
int3
fnstenv
mov
push
out
dec
dec
mov
pop
mov
inc
jp
in
sub
pusha
xorb
aas
lcall
xor
adc
mov
pop
inc
pop
xlat
xlat
mov
movsl
mov
filds
xor
gs
fnstsw
enter
xchg
jne
mov
out
cmpsb
dec
push
pushf
jg
in
daa
dec
pushf
lods
sbb
mov
fnsave
loopne
cmp
es
push
push
mov
inc
hlt
push
add
jno
pop
mov
lock
jg
inc
mov
aas
cli
add
jnp
jo
shrb
mov
xchg
jno
sbb
lock
ret
in
mov
stos
push
fs
sub
inc
xorl
lods
hlt
lea
stos
jl
and
add
repz
shll
popa
stc
aaa
insl
scas
ss
es
or
push
lea
enter
ret
movsb
mov
push
cmp
xor
int
cmp
enter
inc
popf
fs
fdivp
sti
xor
cmpsl
adc
mov
pop
cli
mov
xchg
push
out
or
mov
out
cmp
lret
add
aas
mov
dec
fstpl
jg
popa
cmp
imul
xchg
fsubs
lods
addr16
xchg
mov
push
xlat
test
movsb
shll
into
mov
fs
icebp
in
mov
add
xchg
adc
int3
xor
stos
lret
pop
movsb
pushf
inc
push
dec
scas
out
aam
lods
fsts
mov
inc
fs
mov
xchg
adc
sti
mov
inc
jno
clc
mov
add
pop
cmp
jl
mov
jecxz
mov
mov
push
inc
xor
std
test
int3
popl
push
push
repnz
jecxz
inc
daa
jnp
push
cmp
inc
lahf
xchg
sti
cwtl
lahf
xchg
out
repz
mov
jb
xchg
in
dec
stos
lds
and
bound
jle
mov
xchg
sbb
sub
push
jbe
xor
push
dec
in
dec
pop
rolb
cmp
neg
repnz
ret
div
xchg
aas
js
addl
and
inc
inc
lods
pop
or
mov
in
pop
and
xchg
and
in
dec
pop
rcrw
mov
ja
enter
jbe
mov
sbb
and
push
mov
jno
push
xor
and
push
sbb
lcall
inc
inc
sti
ret
xchg
inc
stos
sub
xchg
xchg
pop
outsl
push
fucom
mov
adc
sub
cmpsb
xor
jge
maskmovq
divl
xor
dec
daa
stos
cmpsl
pusha
or
gs
jno
sub
jle
fimuls
adc
out
or
ss
xchg
xor
in
lock
rcr
adc
pop
icebp
mov
lahf
leave
xchg
test
adc
cltd
fidivl
xor
sbb
fbld
cmp
cmpsb
repz
rcrb
cmp
ret
sti
das
and
out
lods
push
orl
jne
aaa
dec
add
popa
movsb
addr16
sti
fstl
xchg
mov
subl
aas
data16
or
int
pop
sub
inc
dec
shrl
mov
xchg
cmc
imul
mov
dec
outsb
mov
imul
push
or
mov
sub
adc
das
js
cli
adc
adcb
add
push
pop
mov
xor
push
es
mov
xor
pop
in
sub
jge
ss
dec
pop
or
lods
push
cld
push
out
xchg
test
xor
enter
pop
mov
mov
mov
mov
ret
aaa
addl
pop
or
xor
addl
sbbl
mov
out
jbe
fldl
pushf
repnz
outsl
pop
cmpsl
fs
mov
shll
sbb
jo
in
adc
imul
add
mov
or
mov
andl
dec
cld
or
js
sub
test
jne
stos
hlt
cmp
js
xorl
adc
enter
mov
xchg
lret
jecxz
out
lahf
pop
fiaddl
cmpsl
aas
inc
inc
adc
xor
xchg
pop
shl
loopne
rorl
xchg
fwait
jle
iret
pop
shrl
pop
js
sbb
pop
popf
pushf
std
les
popa
lds
in
mov
lret
in
cmp
aas
pop
in
test
pop
mulb
sbb
stos
mov
imul
sbb
mov
ret
cmp
push
mov
loop
lods
and
outsb
or
pushf
rcrb
in
inc
mov
stos
movsb
inc
leave
pop
repnz
xor
aas
mov
dec
mov
filds
jb
fwait
mov
je
outsl
xchg
cld
push
ficoms
into
push
dec
pushl
pusha
sbb
xchg
ss
push
mov
jo
mul
testl
dec
jns
ret
dec
jg
cmp
xlat
lret
mov
push
mov
xchg
mov
lock
popa
in
js
mov
scas
loopne
insl
adc
imul
test
jne
scas
inc
lret
mov
xor
lcall
or
ret
ret
push
xor
scas
xchg
xchg
rolb
mov
mov
pop
movsl
mov
das
add
jnp
inc
push
pusha
in
mov
or
dec
pop
out
testl
movsb
fwait
sbb
movsb
test
sbb
cmp
testb
xor
icebp
push
addr16
gs
mov
push
mov
inc
cmp
xor
dec
nop
iret
test
arpl
xchg
repnz
loope
rclb
push
jp
lock
fdivp
lea
and
adc
not
insl
push
movsl
cmp
jnp
mov
xchg
pop
xlat
ficoml
scas
iret
fisttpll
and
ja
popl
push
pop
mov
push
insl
mov
loope
xchg
add
stos
call
sahf
inc
add
sub
push
insb
sub
pop
cwtl
and
push
popa
outsb
mov
aas
or
bnd
nop
mov
fdivs
test
cmpsl
jbe
mov
pop
test
mov
xchg
and
jnp
mov
pop
ss
icebp
scas
adc
movsl
xchg
lock
dec
or
scas
mov
pop
scas
imul
iret
loop
push
jmp
vpshlw
mov
hlt
enter
cltd
push
push
mov
hlt
aas
pop
push
hlt
cmp
or
mov
lcall
inc
mov
rcr
mov
in
rolb
jbe
cmp
or
fistps
jecxz
loopne
adc
xchg
sub
ss
sbb
ror
cmp
sarb
loope
push
pop
dec
xchg
imul
cmpb
add
add
xchg
adc
enter
cmp
popf
add
cs
enter
repz
loopne
sub
xchg
aaa
mov
nop
scas
xor
mov
pop
stc
add
scas
out
sarl
out
pop
mov
push
imul
lds
and
ljmp
movsb
stos
push
in
xlat
pop
or
rcll
sbb
xor
rorl
pop
cli
outsl
inc
mov
ret
ds
pop
add
orl
adc
sub
sbbl
lods
cmpsl
mov
lock
or
orl
pop
lods
movsb
lea
daa
add
push
mov
ljmp
out
mov
aam
pop
cmova
icebp
pop
xor
mov
xor
aad
mov
pop
push
adcl
outsb
push
lret
pop
xchg
push
xchg
rep
add
pop
lods
push
jo
scas
out
negb
push
call
mov
jg
stc
je
test
js
shlb
push
fildll
jae
adcb
call
adcl
mov
test
insb
imull
mov
lock
mov
jle
xorb
inc
push
frstpm(287
outsl
fs
cs
mov
sahf
mov
lea
andl
lods
push
push
or
mov
movsb
addr16
jge
xor
lret
inc
vpshad
sub
call
mov
mov
fisttpll
iret
nop
mov
pop
mov
mov
add
nop
leave
cmp
negb
or
add
lods
jbe
pushf
lock
insl
or
inc
decb
leave
je
mov
movsb
add
inc
sub
aad
or
mov
cwtl
cmpsb
jns
int
lock
push
xchg
push
sbb
mov
scas
lahf
jae
fistpl
cmp
mov
aad
test
enter
jg
mov
inc
lret
out
sub
adc
mov
lods
mov
popa
xchg
in
scas
push
lahf
andl
add
divb
xor
mov
ljmp
mov
mov
sub
iret
sbb
push
icebp
fs
cltd
add
bound
push
loope
sub
mov
cld
jl,pn
inc
ja
enter
jbe
cltd
dec
pop
sub
xchg
xchg
pop
push
es
mulb
xor
push
sti
lahf
fstpl
das
inc
std
movsb
rorl
into
rcr
xchg
out
cmpsb
insb
mov
sbb
dec
lahf
xchg
mov
lods
pop
pusha
sub
dec
ss
mov
sub
insb
in
in
cmpl
pop
mov
push
cmp
test
loopne
cmp
or
and
dec
repz
fstps
push
xor
sub
stos
lods
roll
in
mov
cmp
inc
shlb
loope
addl
andl
xorb
mov
inc
and
aam
enter
add
subl
inc
xchg
mov
sub
mov
jb
int
insb
lahf
pop
inc
cmp
scas
push
sub
pop
ja
dec
xchg
or
popa
mov
mov
lds
push
inc
cmpsl
cmp
mov
jecxz
jae
lret
out
and
push
jle
fisttps
repnz
dec
and
fwait
and
sbb
xor
gs
xchg
mov
lock
icebp
adc
sbb
inc
mov
adc
mov
add
jbe
inc
icebp
add
add
mov
rcll
les
push
mov
push
sbb
pop
push
insb
push
cmc
ja
fwait
aam
ss
xchg
push
xchg
jmp
mov
xchg
jl
je
loopne
imul
sub
das
pop
jns
test
clc
lret
setge
and
and
inc
mov
lahf
and
xchg
sub
loopne
pop
or
pop
or
in
dec
and
std
fwait
orl
push
sti
lods
dec
ljmp
leave
movsl
mov
pop
xchg
mov
mov
popf
and
call
or
xchg
jbe
cmp
mov
int3
inc
shll
cmp
icebp
and
leave
or
aad
js
push
jge
mov
mov
or
sbb
ds
enter
pop
push
ds
jnp
sbb
mov
ret
jne
mov
fmulp
ss
cld
lret
outsb
xchg
insl
mov
sub
test
and
or
pop
jnp
xorl
bound
cmpsl
inc
movsl
pop
cmp
dec
pop
cmp
dec
stos
arpl
adc
out
or
and
push
lods
mov
jg
aam
and
pop
stos
pusha
mov
rcll
test
shrb
mov
dec
mov
std
inc
cs
out
add
mov
hlt
push
dec
lahf
pushf
pop
or
jmp
pop
xor
rol
enter
imul
int
lea
fdiv
repnz
lcall
sar
jno
fbld
mov
cmp
cmp
mov
dec
sbbl
mov
sub
sub
mov
pop
xchg
sub
push
mov
jb
mov
adc
mov
push
push
add
and
pop
mov
dec
notb
ja
sbb
rolb
jbe
bnd
jno
mov
jo
mov
adc
fsubrl
xchg
inc
sti
fidivrs
mov
adc
out
popf
add
popf
sbb
mov
test
sbb
push
mov
pop
mov
and
inc
pusha
or
xor
outsb
push
add
testl
sbb
call
mul
adc
pop
fwait
or
jle
outsb
and
imul
xor
sahf
dec
ret
daa
pushf
xor
mov
xchg
push
pop
inc
insl
pop
xor
stos
jae
icebp
cmp
push
fists
test
mov
xchg
push
xchg
psraw
pop
push
cli
in
les
push
pop
js
scas
xor
sub
cmp
imul
mov
insb
adcl
adc
out
pop
ljmp
sbb
or
mov
in
and
pusha
call
imul
loopne
push
inc
repnz
roll
or
jnp
push
adc
scas
xlat
or
imul
dec
push
outsb
pop
push
or
push
popf
daa
dec
inc
mov
int3
test
cmp
into
call
add
je
cwtl
movsl
cwtl
lahf
sub
sti
fdivs
xchg
jns
sbb
ljmp
ficoml
lcall
inc
pop
xchg
cmp
sub
int3
inc
cli
jmp
fstpl
lods
fsubrl
hlt
rclb
shlb
cmpsb
cmp
push
cmp
jmp
xor
test
arpl
mov
cmp
out
push
loopne
mov
stc
les
out
ficoml
adc
ret
sbb
mov
sbb
mov
pop
jns
or
int
movsb
int
fdivs
xorb
add
fistpll
in
mov
xorl
rcl
test
mov
fisubrs
jle
mov
iret
std
cmpsb
cltd
mov
xchg
jle
jbe
mov
out
adc
movsl
and
sti
aam
xchg
mov
out
rcl
inc
ljmp
rol
jnp
xlat
dec
push
shl
pop
pop
mov
arpl
lahf
mov
xorb
mov
leave
mov
mov
repnz
sbb
add
cltd
pcmpeqb
sbb
nop
sbb
fmull
pushf
and
or
hlt
mov
and
mov
ljmp
jns
or
mov
aad
cwtl
add
add
cwtl
mov
mov
add
xchg
xor
aaa
mov
dec
dec
outsb
push
test
jmp
lret
in
sub
imul
dec
xchg
or
pop
push
sub
imul
mov
mov
sti
add
leave
add
inc
mov
imul
ja
mov
repnz
mov
adc
xchg
sbb
mov
mov
out
repnz
dec
repnz
shlb
cmpsb
loopne,pn
lret
push
jo
cmp
push
rcrb
pop
icebp
pop
pop
push
adc
inc
jns
adc
add
hlt
xor
clc
adcl
enter
mov
dec
inc
mov
xchg
and
cmp
fwait
push
adc
lods
inc
lods
xor
or
scas
push
aam
repnz
cmp
mov
and
mov
test
call
jns
rorb
roll
cmp
movsl
adc
mov
and
addb
xor
cmp
cmc
mov
in
loop
test
or
pop
inc
jp
sub
or
push
inc
mov
cmpsb
mov
mov
inc
data16
and
lcall
push
push
sbb
xor
dec
fucomip
stos
jno
fsubrl
xchg
jmp
ljmp
xchg
jl,pt
je
xchg
loop
adc
lds
shrl
xchg
and
add
enter
sarl
sbb
push
mov
icebp
call
adc
mov
xor
xchg
mov
fs
push
dec
xchg
flds
mov
fstl
cmp
fsubrl
push
and
imul
cmp
sub
mov
jmp
cmp
push
mov
mull
add
pop
and
cwtl
and
mov
sbbl
gs
jle
push
push
add
lea
and
lcall
inc
inc
push
lods
inc
fiadds
push
xchg
pop
mov
inc
shll
lods
inc
aaa
add
and
pop
push
out
mov
mov
inc
sub
and
iret
cmp
lods
gs
shll
repnz
jbe
or
push
mov
dec
pop
jle
jl
add
mov
pop
pop
mov
cld
scas
aam
push
loop
movsb
pop
das
pop
sbb
sbb
mov
or
mov
cmc
leave
jno
out
test
lahf
cmpl
mov
js
incb
sbb
ret
lock
jp
jg
cmovp
sbb
je
cmpsb
push
aad
int3
nop
movsb
xorl
cmp
stos
outsb
fucomi
jne
ss
jmp
cmpsl
mov
loope
mov
push
dec
or
fimuls
test
fstpl
sub
xchg
in
jnp
jp
mov
shll
jnp
jge
sbb
push
mov
test
push
scas
jno
rcr
jns
mov
jp
inc
push
insb
adc
adc
mov
mov
mov
shl
dec
sahf
aaa
pop
inc
test
movsl
inc
push
pusha
xchg
sbb
mov
xchg
inc
loop
sbb
dec
pop
push
pop
loopne
push
push
sbb
xchg
cmp
clc
jge
out
add
xor
and
jae
cmpsb
xchg
mov
and
or
pop
inc
popf
push
out
in
sub
add
sub
mov
xchg
xorb
add
data16
add
sub
sub
xchg
addr16
dec
test
and
bound
scas
mov
test
jns
je
rol
je
push
es
rol
je
inc
aam
add
or
pop
in
xchg
cs
pushf
mov
adc
lea
ja
dec
idivl
jl
adc
lods
imul
out
jb
pop
ljmp
dec
pop
repz
mov
stos
mov
hlt
lret
xor
imul
mov
pop
rcrl
mov
vsqrtps
jo
adc
dec
dec
outsb
mov
rorl
sti
adc
and
push
fwait
sbb
xchg
adc
mov
add
fs
mov
mov
xor
xchg
or
leave
movsl
mov
mov
inc
push
mov
jg
test
es
sub
in
and
addr16
cmpsl
decb
or
push
sub
sbb
jo
les
les
out
test
shrd
inc
je
out
insl
lds
push
xor
mov
add
mov
pop
pushf
ja
pusha
jo
in
js
jmp
push
in
lods
xchg
adc
cli
arpl
shll
cmpsl
stos
dec
mov
aam
repz
inc
pushl
outsb
and
mov
jmp
imul
movzwl
add
cld
mov
jmp
jl
mov
stc
mov
dec
pushf
xor
enter
int
push
loope
cs
fisubrs
and
or
pmullw
aam
xor
int3
mov
imull
arpl
cmc
popf
inc
pop
daa
roll
xor
out
sahf
lods
mov
xor
int3
push
je
push
lea
scas
mov
sub
popf
pop
roll
jae
and
cli
add
xchg
cmp
sbb
movsb
mov
push
cltd
jle
mov
lret
xor
lcall
outsl
adc
fdivl
call
mov
test
pusha
add
sti
jae
mov
addr16
notl
xor
jmp
scas
xor
adc
pop
or
mov
xchg
jl
push
push
aas
loope
xor
and
add
jg
and
insl
ficoms
pop
xor
add
dec
xor
out
pop
repz
push
sahf
sahf
sub
push
fs
mov
ss
cmp
pop
fcoml
call
into
cli
mov
int
inc
stc
mov
insl
lret
sbb
and
fimuls
clc
adc
mov
mov
add
out
ret
cmp
roll
repnz
jg
lcall
add
cmp
lret
push
cs
cld
fbld
jnp
add
pushf
ficoml
or
test
cmp
imul
xor
sub
pop
sbb
cmpsl
jmp
popf
push
sbb
mov
push
shll
mov
push
mov
pop
arpl
adc
ret
inc
stos
icebp
push
inc
fsubr
xchg
lahf
xchg
mov
mov
mov
jl
cmp
out
or
iret
xchg
mov
xchg
movb
fdivrl
stos
das
push
xor
imul
rcll
mov
mov
adc
lock
pusha
movsb
add
ret
jne
add
push
imul
daa
push
dec
adc
mov
shll
inc
adc
pop
xor
and
out
xchg
ja
push
mov
daa
jns
push
shlb
sbb
cmp
aaa
mov
or
dec
out
inc
sti
sbb
xchg
xchg
cmp
lods
and
xchg
dec
sbbb
pop
or
orl
in
pop
xchg
insl
push
sbb
sbb
cli
dec
bnd
jmp
out
cmp
inc
push
cli
inc
adc
clc
sub
inc
bound
insl
and
sahf
dec
flds
xchg
sahf
inc
lcall
stc
add
lret
xchg
fisubrs
xchg
xchg
insl
pop
hlt
or
insb
stc
je
ljmp
fistpl
jb
arpl
adc
inc
pop
int
dec
mov
arpl
mov
adc
sub
sahf
sahf
pusha
fcmovnb
push
imul
ja
sub
pop
pop
test
or
sub
push
and
mov
aam
xchg
nop
inc
adc
je
mov
push
and
imul
aaa
test
pop
cltd
push
push
fwait
in
gs
mov
inc
adc
out
ret
adc
repz
and
mov
mov
pop
pop
scas
lods
sti
movsb
das
pop
or
push
out
xchg
fdivl
push
xchg
mov
mov
in
push
int3
jp
notb
xchg
gs
cmpsl
mov
jns
xor
pop
mov
mov
addr16
add
xchg
fs
sbb
lret
mov
push
lock
test
data16
lods
and
test
mov
add
pop
out
sarl
incl
sbb
sub
push
dec
jge
loope
mov
gs
insb
sub
fbld
sbb
add
shlb
repz
pop
xor
jp
and
push
ret
addr16
jb
pushf
test
popf
fbld
mov
ret
mov
dec
inc
push
inc
ficoms
jle
jbe
inc
mov
or
mov
xor
rol
xor
push
fucomp
add
sbb
int
jle
aas
xchg
mov
inc
das
out
mov
mov
dec
xchg
popl
jmp
pop
scas
stos
mov
clc
add
into
movsl
dec
mov
mov
test
pop
mov
pop
inc
mov
push
sbb
inc
ja
cmp
jmp
sbbl
or
fmull
cmpsl
mov
mov
xchg
sarb
mov
add
inc
out
pop
lcall
jl
jae
mov
dec
aaa
into
rol
add
sbbb
sub
push
jmp
xor
push
xor
xchg
out
popa
lcall
lock
and
cmp
call
sbbb
push
cli
inc
and
jae
adc
dec
or
cwtl
or
repz
cmc
call
push
jle
addr16
lret
adcb
nop
arpl
add
ss
sub
add
sub
xor
adc
lock
push
xchg
mov
mov
cmpb
std
popa
push
jb
imul
daa
inc
jg
cmp
js
inc
pushf
fcomps
imul
mov
mov
out
mov
shll
push
jmp
add
mov
test
ficomps
xor
das
lahf
aam
mov
xchg
int3
arpl
lahf
andb
jbe
jne
pop
adc
sti
or
setle
cmp
jbe
mov
rcll
jecxz
outsl
xlat
push
pop
cmp
push
sbb
xlat
outsb
shrl
mov
lds
cs
mov
adc
inc
jp
stos
push
dec
or
adc
mov
xchg
xlat
xor
test
test
loope
pop
repnz
pop
jnp
mov
pop
mov
jge
test
cmpl
neg
add
imul
dec
les
mov
stos
test
xor
mov
pop
mov
pop
shrl
mov
loope
in
push
adc
std
and
pop
ret
into
addb
xor
sbb
sbb
int3
mov
mov
jno
adc
cmpsl
mov
xlat
push
mov
dec
loop
mov
mov
dec
loopne
divl
add
sub
and
jno
pop
hlt
lcall
scas
jge
insb
push
aas
imul
out
mov
scas
mov
imul
movsb
gs
out
mov
add
stc
add
inc
xor
push
imul
pop
sub
cmpsl
mov
jo
xchg
cmp
incb
mov
xchg
sub
pop
rolb
into
jecxz
and
cmpsb
popaw
jo
out
popf
aas
mov
shrb
or
adc
inc
das
cwtl
iret
jnp
in
mov
pop
mov
push
sar
mov
cwtl
lret
sub
jns
mov
xor
js
dec
push
mov
repnz
inc
adcl
sbb
scas
fisttpll
add
jmp
mov
inc
data16
shlb
dec
aad
pop
mov
fisubrs
push
sbb
repz
imul
test
add
jae
sahf
mov
and
cmp
cwtl
scas
fisubrl
or
ds
cmpsb
jecxz
es
imul
aam
and
jp
jns
sbb
xor
jp
out
add
jl
adc
mov
sub
dec
lahf
and
repnz
test
pop
pop
out
lcall
lock
test
or
ret
mov
or
inc
lea
daa
jno
stc
inc
aas
ds
into
mov
stc
int3
mov
cmp
call
jmp
idivb
mov
or
repz
fnstenv
inc
mov
sub
aaa
cmp
jmp
jb
ret
rclb
sub
jo
cmp
stos
addl
out
test
dec
fisttps
sub
jbe
shrl
fcom
xchg
shrb
cmp
stos
ret
cmpsb
insl
cli
mov
add
mov
lahf
mov
add
mov
divb
xlat
ds
iret
lods
fldenv
mov
lret
test
insl
arpl
js
sub
cmp
icebp
xchg
stos
mov
mov
sub
test
int
bound
jp
xor
sub
scas
sub
mov
or
or
cmp
mov
test
and
outsl
popf
lods
or
jmp
nop
pop
mov
inc
jle
ret
fs
subb
inc
dec
inc
cmpsl
mov
test
insb
popa
pop
jne
dec
in
dec
movsl
dec
addr16
sbb
jmp
mov
xchg
fcmovbe
mov
jb
sti
test
pop
rorb
ljmp
and
mov
cmpsb
in
fists
in
sti
sti
sar
or
sub
mov
addb
and
sub
inc
mov
push
int
nop
imul
fimull
insb
mov
pop
mov
jle
mov
jl
bound
mov
sbb
push
psubsw
or
call
and
in
jnp
sbb
cmc
mov
mov
in
aaa
test
addb
pop
dec
int
adc
push
pop
sbb
lea
test
outsl
ret
enter
adc
push
mov
das
outsl
mov
psadbw
fs
jle
cwtl
out
mov
lcall
jecxz
jp
push
or
cs
pop
jne
push
daa
jl
insb
or
cs
mov
in
hlt
xchg
sbb
jl
add
mov
mov
add
mov
xor
in
inc
xor
push
xor
jnp
nop
fidivrl
cltd
dec
inc
scas
jns
imul
mov
aas
fldcw
dec
pop
pop
ljmp
mov
mov
in
aas
sbb
mov
sahf
aaa
loop
mov
cwtl
lds
xchg
xchg
ds
outsl
popa
dec
cli
adc
xchg
insb
fs
into
ja
xor
sarb
rcrb
pop
mov
jns
pop
adc
mov
push
push
add
xor
mov
xchg
clc
jne
icebp
adc
xchg
les
xchg
dec
inc
cmp
mov
pop
scas
xchg
push
dec
cli
cmp
xchg
pop
mov
pop
popa
cs
sub
mov
movsb
xchg
xchg
pop
sbbl
out
in
push
add
or
clc
inc
stos
mov
das
xchg
jp
mov
mov
imul
cltd
out
inc
testb
jo
mov
cmp
jo
xchg
test
addr16
dec
out
xchg
mov
dec
jmp
int
test
addr16
fisttps
subb
jb
cmp
xor
sub
das
dec
xor
leave
push
fcoms
mov
adc
mov
rorl
sub
jae
mov
mov
clc
jae
cmp
push
popf
adc
cmp
push
je
add
movsl
imul
pop
pop
les
mov
mov
dec
sbbb
out
outsl
repz
in
loope
xchg
dec
push
mov
xchg
and
movsl
jp
push
fcmovne
xor
dec
sbb
in
std
ficompl
in
sub
jno
pop
adc
out
pop
push
mov
inc
rorb
loop
or
outsl
mov
pop
cmpsl
loope
fcomps
mov
inc
imul
lahf
push
push
sarl
push
in
dec
xchg
cld
and
mov
sbb
xlat
movsl
das
sub
cmpsb
insb
in
rcl
cmpsl
jo
aad
add
loop
fcoml
sub
notb
into
test
dec
jo
data16
push
outsb
xor
out
mov
frstor
mov
jle
mov
mov
jecxz
xor
pop
sbb
pop
jbe
jp
mov
js
int3
cmp
std
arpl
xchg
adc
lea
adc
sub
hlt
sub
call
ret
xor
sbb
xlat
aam
test
fcompl
dec
gs
xor
int3
pop
popf
mov
lret
mov
iret
push
or
fdivp
in
sub
out
loope
mov
push
push
insb
cmc
insb
pop
stc
bound
mov
xchg
push
ret
lret
imul
stos
fwait
scas
scas
scas
adc
push
aas
sub
insb
loopne
cmp
movsl
addr16
jmp
je
mov
mov
in
sub
and
dec
aam
pop
dec
mov
lret
push
mov
or
jne
insb
cmp
daa
movsl
fs
xchg
jl
inc
and
test
nop
sbb
cmp
jecxz
sahf
js
inc
shll
inc
jnp
mov
cmp
mov
popf
mov
mov
negl
cmp
lcall
cltd
iret
out
loopne
into
cmp
jg
outsl
aas
rorb
pop
push
out
cmp
or
lcall
arpl
push
jb
mov
int3
mov
xor
outsb
int
mov
or
sbb
xchg
insb
mov
inc
xor
mov
aam
outsl
dec
jmp
lods
enter
mov
xchg
push
xor
inc
pop
push
xorl
cmc
scas
dec
cmp
sub
pop
je
pop
inc
arpl
outsb
outsb
loopne
jns
mov
dec
lret
adcb
jecxz
xchg
add
mov
mov
lds
xorl
insl
or
stos
pop
mov
lds
scas
sub
shll
inc
int3
dec
add
aam
xor
xchg
push
push
mov
ljmp
es
adc
sub
xchg
fcmovnb
xchg
fisubs
inc
sub
and
leave
push
mov
fiaddl
fnstcw
jno
mov
std
subb
adc
jne
adcl
mov
scas
mov
pop
cmc
mov
add
dec
scas
adcl
into
jp
std
ja
loopne
mov
scas
test
imul
push
jmp
xor
xchg
dec
inc
lret
out
ljmp
cmpsl
iret
jg
xchg
clc
pop
mov
mov
mov
test
cmp
push
sbb
sbb
jae
dec
xor
aas
mov
xchg
inc
out
nop
imull
lock
ljmp
adc
sub
or
cmpb
add
sarb
imul
xor
xchg
jle
sarb
inc
add
stos
and
movsl
ds
loope
xchg
add
or
jnp
mov
into
lcall
dec
jmp
repz
dec
mov
xor
pop
xlat
and
sbb
xor
or
pop
xchg
js
out
fwait
jge
xor
xor
pop
pop
std
xor
or
imulb
inc
xchg
lretw
cld
cs
out
sub
sti
stc
jge
jle
lea
mov
mov
out
rcrb
jns
xlat
loop
mov
jae
test
out
dec
xor
shll
xchg
sub
mov
xor
add
xor
jg
xor
js
xchg
ret
jo
pop
rolb
mov
jbe
int3
push
or
jl
cmp
sbb
aad
mov
cmp
mov
out
imul
mov
dec
mov
ja
mov
push
adc
jno
jne
and
hlt
mov
cmp
mov
jmp
movsb
sti
cltd
mov
in
mov
add
pushf
cwtl
jae
and
sub
ljmp
jge
add
pop
int3
insl
out
add
or
ds
rol
loop
das
loop
bnd
sub
in
dec
lret
cmpsl
mov
lock
lods
xchg
movsl
jb
fs
ljmp
imul
and
int
shlb
mov
sub
add
popf
repnz
sub
mov
lret
cmc
shlb
or
dec
push
test
adc
psadbw
test
mov
arpl
fwait
pop
sbb
jmp
jp
daa
ret
adc
xchg
jb
ret
and
loopne
pop
jmp
pop
push
cmpsl
add
jge
aaa
mov
les
mov
int
sti
adc
inc
pusha
outsl
sahf
mov
jle
sbb
xchg
or
push
js
outsl
rcl
popa
xchg
and
mov
mov
int
adc
icebp
in
cld
insl
shll
dec
pop
mov
inc
or
xchg
fisttpll
fidivs
testb
lret
aam
int
jo
pop
rorl
daa
scas
jl
adc
loope
es
xchg
cmpsl
jno
aad
jecxz
out
cmpsb
movsl
popf
in
js
imul
adc
ret
movsb
sbb
push
pop
add
fisubs
outsb
filds
or
sti
inc
dec
pop
mov
adc
jmp
fsub
or
icebp
out
fsubl
lods
loopne
clc
adc
mov
jmp
lds
imull
jp
ficomps
mov
fimull
into
pop
jnp
push
test
inc
push
push
and
push
fimuls
mov
out
aad
int3
les
lret
push
sbb
xor
js
aad
repnz
sub
push
mov
pop
je
pop
mov
in
push
xchg
xchg
xorw
js
daa
xlat
cmp
jge
push
outsb
jmp
dec
jo
leave
push
push
cwtl
jbe
repz
jmp
jecxz
push
jp
pop
into
xchg
test
cmp
daa
sub
push
ror
jbe
rorb
add
mov
aaa
mov
push
xor
or
adc
cmpsb
cmp
andl
dec
int3
addr16
mov
lock
jbe
jno
es
add
cmp
jle
rorb
push
push
divb
adc
cmc
or
sbb
es
or
jle
push
dec
or
out
or
ret
mov
mov
push
mov
rorl
cmpsb
and
push
popa
xchg
ds
nop
sub
bound
adc
mov
cmp
leave
repz
adc
sahf
fs
ret
inc
add
cltd
negl
sub
add
xchg
sub
insb
fwait
into
call
mov
int3
mov
push
mov
sbb
push
loopne
jmp
cltd
lods
jb
imul
push
adc
icebp
jmp
sahf
cmpsb
or
repnz
push
push
out
cmp
stos
aaa
outsb
sbb
push
sub
sbb
push
sbb
fildl
dec
clc
sbb
cmp
sbb
test
repz
inc
and
push
popa
mov
arpl
out
pusha
push
js
test
lods
or
mov
push
xor
xchg
adc
into
sbb
lret
dec
lcall
jb
and
or
jbe
mov
mov
lret
mov
test
xorb
leave
out
outsb
fisubs
lret
mov
pop
dec
mov
loopne
cmp
insb
aad
xchg
mov
lods
in
mov
push
loopne
mov
jmp
clc
fsubr
imul
inc
repnz
mov
adc
aad
inc
adc
xor
or
fsts
das
add
fcomi
fbstp
imul
loopne
dec
hlt
sbb
dec
fidivl
lds
push
sbb
jl
jecxz
scas
jnp
jb
pop
mov
in
mov
adc
dec
push
mov
test
rcrb
jp
dec
pop
fcoml
xlat
scas
loope
cwtl
and
cmp
push
fwait
xchg
jns
std
mov
mov
orb
mov
dec
fsubs
rcrl
stc
pop
in
xchg
push
jbe
sahf
xchg
mov
lods
push
or
cmp
addr16
mov
cmpb
and
add
push
push
les
mov
ljmp
dec
mov
pop
outsl
sub
hlt
mov
push
pop
cld
outsb
cmpsb
xchg
jo
inc
jno
pop
sbb
jecxz
ffreep
rcrl
movsl
int
cmp
imul
inc
rorl
xor
fisttpl
lods
mov
iret
and
int3
mov
inc
rcll
adc
repz
inc
sub
repz
pop
push
xchg
lods
lret
jle
mov
and
push
add
dec
adc
in
aad
movsl
mov
es
test
sbb
fdivs
adc
mov
rorl
jge
xlat
call
sbb
imul
and
pop
ret
fwait
out
jb
mov
or
jge
std
cld
sub
loope
dec
inc
adc
xor
push
clc
sub
pop
mov
into
scas
arpl
insb
push
popa
mov
mov
mov
pop
inc
rorl
stos
xor
stos
sbb
daa
xchg
loopne
sbb
fidivrs
inc
lahf
xchg
pop
je
fucomi
mov
pop
loopne
and
idivb
and
sub
insl
or
ret
mov
hlt
jp
and
dec
iretw
jle
flds
pop
js
push
lds
xchg
cld
cmp
call
js
or
cwtl
mov
mov
mov
jle
or
or
out
cmpsb
hlt
scas
je
xchg
adc
cld
dec
mov
mov
shrl
out
pushf
dec
cld
adc
xchg
cltd
orl
call
out
or
cld
in
xor
add
ja
popa
sbbb
movsb
loop
stc
xor
dec
pushf
or
mov
dec
dec
dec
call
mov
sbb
in
pop
insl
jnp
sbbl
pop
jl
jnp
push
jge
jp
sbb
push
rcr
mov
dec
jp
rorb
insb
adc
loopne
cmpsb
js
je
sarb
push
loope
in
pop
bound
push
mov
sbb
xor
out
dec
push
mov
cmc
lcall
add
push
xor
orb
stos
iret
stc
repnz
push
push
aaa
inc
cli
outsl
sub
push
ret
cmp
jns
jne
inc
pop
mov
in
lret
stos
sub
cmpsb
js
hlt
in
push
mov
mov
cmp
aad
push
push
test
mov
push
push
sbb
cmp
sub
das
mov
sub
push
lahf
adc
pop
cltd
mov
adc
pop
mov
das
adc
or
sub
cmp
inc
adc
arpl
mov
lahf
adc
mov
jge
add
jl
enter
shrl
sub
dec
mov
push
push
repnz
sub
xchg
adc
push
jno
ja
xchg
nop
lret
enter
jle
pop
decb
jmp
sub
dec
lods
mov
cli
sbb
out
out
cwtl
jae
jae
cmp
icebp
add
mov
arpl
xlat
or
outsl
and
mov
loop
fldt
sbb
sub
mov
nop
lds
pop
lods
out
rcrl
ljmp
sub
into
push
and
sbb
out
int
pop
cld
mov
lock
sbb
mov
inc
add
jl
pop
mov
stos
decb
jns
fwait
mov
xor
cmp
jno
xchg
lret
mov
adc
push
pop
js
mov
fs
sub
cmpsb
pop
xor
xor
pop
add
dec
loopne
cli
je
dec
push
push
or
jno
jmp
loop
mov
jmp
adc
pop
xor
dec
lds
movl
cmp
loopne
testb
leave
mov
insb
out
lea
roll
js
xlat
xchg
in
push
int3
mov
testb
jnp
iret
inc
inc
pop
pop
test
pop
cmp
xlat
and
mov
lahf
es
push
clc
test
aaa
lods
mov
mov
sub
fcoml
dec
cmc
mov
stc
pop
test
xor
and
push
jo
inc
xor
mov
pop
jp
das
insl
data16
adc
icebp
inc
sub
pop
mov
out
push
data16
sti
mov
jne
adc
push
lcall
arpl
mov
mov
ljmp
ret
test
xchg
xchg
sbb
frstor
fcompl
aam
sbb
xchg
cmp
xchg
push
cmpsb
or
movsl
cwtl
xor
out
fwait
pop
mov
iret
test
cmp
dec
je
sti
nop
out
pop
xchg
aad
inc
loope
dec
xchg
dec
in
lret
cs
adc
sbb
mov
fimull
sbb
push
push
inc
add
test
std
cmp
fbld
add
pop
js
and
mov
dec
xchg
pop
cwtl
adc
outsb
stos
mov
lret
adc
sub
call
loope
scas
xchg
dec
xor
test
addr16
cmpsb
ss
cltd
adc
fcoml
and
jle
lods
andb
adc
adc
and
in
or
pop
repnz
sub
in
mov
jecxz
mov
ljmp
push
jae
and
lss
push
or
xchg
ficoms
xor
dec
inc
jl
xor
xchg
inc
and
leave
and
jbe
mov
negb
add
pop
mov
mov
jnp
shll
jmp
dec
push
and
cld
dec
ljmp
ds
mov
push
test
sbb
inc
lahf
dec
jle
or
loop
push
xor
push
ljmp
leave
lahf
scas
js
jg
mov
sbb
dec
pop
pop
sub
movsb
sti
mov
push
inc
std
iret
cltd
xchg
adc
mov
adc
enter
notb
in
cld
xor
aad
scas
dec
ror
dec
mov
aam
lods
mov
movsl
pop
xchg
lds
jp
mov
inc
adc
imul
pop
cmp
nop
adc
adc
leave
in
mov
mov
fs
pusha
jbe
in
sbb
out
pop
jmp
mov
sub
nop
sub
mov
sub
dec
push
pop
jb
push
dec
xor
adc
cmp
das
inc
sub
jo
test
xor
adc
aam
sbb
out
push
aas
push
inc
adc
mov
pop
gs
mov
scas
push
pushf
fistpl
jecxz
ds
scas
shll
mov
xchg
mov
insb
mov
jecxz
movsl
call
mov
shl
jg
aas
cmp
fxam
and
inc
test
mov
aaa
stos
cmpsb
and
in
cltd
dec
or
xchg
fs
leave
inc
daa
inc
inc
jge
mov
aas
and
mov
or
not
mov
sub
int
mov
xchg
mov
or
and
es
add
data16
jl
jge
in
loop
and
xchg
mov
pop
jl
xorb
in
sub
test
xchg
mov
fstpl
cmp
iret
cmp
cli
and
xchg
jl
xor
outsl
pop
inc
jmp
insl
pop
inc
loopne
xor
mov
adc
ret
or
flds
pop
inc
pop
jmp
jnp
jno
dec
rcrl
decl
test
sbb
cmc
leave
xor
xchg
lods
out
adc
cli
mov
jmp
clc
pop
ljmp
xlat
notl
cmp
lret
xor
mov
lret
add
daa
sub
or
aam
repz
cmp
pop
mov
cmc
adc
mov
mov
mov
mov
int
out
push
pop
cmpsl
or
test
sub
mov
fdivrs
mov
insb
add
or
xor
cmpsb
inc
scas
stos
cwtl
cli
inc
ss
in
xor
inc
and
mov
outsb
shll
mov
sti
add
or
or
fsubrl
or
mov
add
lahf
movsl
xor
pop
repz
stc
or
in
jmp
or
hlt
popf
pusha
mov
sub
cmp
in
iret
add
lds
dec
add
cmp
adc
hlt
or
jae
cltd
cltd
add
sub
sarb
and
jne
inc
notb
mov
fbstp
in
pop
stc
sbb
sbb
and
push
sbb
scas
xsha256
cmpsb
adc
xchg
movsl
sbb
mov
adc
xchg
mov
mov
adc
pop
inc
mov
mov
sub
push
jg
test
jno
lret
pop
ficomps
jp
imul
movsl
orb
andl
mov
fnsave
imul
hlt
clc
int
sti
pop
int
shrl
push
dec
dec
push
mov
jl
sub
and
das
jecxz
mov
jl
loopne
mov
pop
mov
inc
fs
into
jg
lahf
push
or
daa
mov
stos
mov
push
dec
jge,pn
ss
adc
mov
jge
into
lea
push
popl
loopne
push
mov
sbb
push
insl
jnp
mov
xchg
leave
cltd
push
cmp
pop
push
mov
jne
sub
sarl
cmpsb
ss
pop
mov
or
add
test
pusha
push
and
mov
fdivrl
ljmp
and
das
inc
lods
pop
das
push
icebp
adc
out
cltd
pop
movsl
inc
fidivrl
and
mov
popf
inc
inc
cmp
imul
sbb
pop
sbb
xchg
ficompl
lds
aaa
pop
ds
push
or
xor
xchg
cmp
inc
jne
sbb
outsl
jge
stc
out
test
xor
push
xchg
loope
sbb
mov
cli
pop
pop
lock
scas
data16
ret
lods
sbb
daa
cltd
mov
dec
jno
in
push
sbb
cmp
rcrb
rcrb
mov
ficomps
add
xor
adc
inc
mov
loopne
and
fistpll
push
sub
add
mov
mov
rcll
inc
mov
jbe
push
iret
bound
or
dec
lods
xor
mov
js
cmc
jb
mov
mov
inc
mov
pop
rcrl
in
mov
or
inc
stc
lcall
sbb
pop
pop
pop
adc
ds
lds
push
cmc
xchg
xchg
adc
int
and
cmp
sbb
dec
pop
repnz
push
paddd
push
sub
test
push
adc
inc
pop
mov
cmpl
sahf
sub
leave
fwait
xlat
fbstp
fildl
iret
out
insl
or
nop
xor
leave
mov
popf
cmp
cmp
cmpsb
and
sub
inc
les
fdivr
addb
pop
sub
cmp
inc
imul
push
pop
and
mov
js
iret
ljmp
test
in
xor
loope
popf
andl
lods
adc
push
sub
jge
enter
mov
lea
mov
fldl
mov
sub
jl
mov
and
je
imul
scas
imul
je
lods
xchg
pop
mov
imul
inc
pop
adc
ds
es
mov
out
sar
repnz
ss
test
cmpsl
out
adc
mov
push
lods
push
or
cmp
mov
jns
loop
sub
xor
push
mov
popf
arpl
stc
lds
imul
push
add
popa
xor
cmp
push
pop
sbb
xchg
mov
mov
push
fwait
adc
leave
loop
pop
mov
aam
inc
jo
bound
xchg
int3
lcall
jb
negb
or
xor
mov
mov
roll
imul
shlb
jbe
xor
addb
xchg
xchg
push
outsl
movb
ja
mov
xor
jb
out
cmp
in
xor
jmp
lds
mov
repnz
inc
test
xor
lret
xor
ljmp
js
sub
data16
adc
ss
and
jbe
mov
hlt
mov
cmpsb
adc
les
and
mov
out
mov
inc
sub
rorl
push
sbb
pop
shlb
outsb
pop
rolb
and
lret
add
dec
pop
iret
mov
movsl
inc
and
mov
cmpsb
fldl
andl
cmp
pop
push
mov
maxps
adc
mov
jp
sahf
and
jg
xchg
inc
jb
mov
jp
adcl
push
mov
data16
movsl
pop
fnstsw
sub
lahf
mov
xchg
lea
in
popf
fcomip
sbb
pop
mov
inc
sbb
shrl
xchg
mov
popa
cmp
gs
adc
addr16
sbb
fimull
repnz
fwait
jmp
and
dec
cmp
std
les
stos
push
and
das
cwtl
push
inc
jbe
jbe
test
push
mov
mov
sub
mov
stos
push
push
loop
insl
xor
aad
enter
xor
inc
push
pop
ret
int
sahf
adc
and
xor
add
lock
or
repnz
and
lods
add
inc
movb
add
or
xorb
cs
dec
adc
or
ds
inc
mov
stos
cltd
xchg
xchg
fs
ret
aad
xor
push
pop
in
pusha
mov
pushf
push
mov
pop
jb
dec
stc
push
xchg
mov
outsb
shll
xor
mov
mov
xchg
mov
dec
scas
mov
testl
push
sahf
imul
mov
add
ret
out
jl
lea
pop
inc
mov
in
mov
dec
dec
inc
int3
adc
out
scas
inc
pop
ja
mov
stos
cltd
dec
xchg
xchg
imul
or
xor
inc
ret
in
jo
adc
ds
shll
mov
jb
jae
jg
arpl
roll
loop
fsubs
test
dec
mov
mov
es
pop
mov
and
xchg
call
jl
jae
popf
popf
pop
outsb
jecxz
mov
pusha
jp
mov
aam
out
sbb
add
loope
jg
jg
fdiv
push
mov
addr16
and
pushl
dec
aam
in
push
dec
pop
popf
leave
dec
aam
add
pushf
cs
scas
ss
scas
sbb
mov
stos
stos
in
adc
shll
xchg
dec
fsubrl
shlb
pop
adc
scas
insb
fs
gs
outsl
sbbb
in
pop
stos
sbb
and
pop
fs
inc
outsb
jmp
mov
fildl
push
xchg
fsubl
sbb
bound
lcall
insl
xor
ja
fisubs
shll
int
daa
popa
xor
test
loope
mov
xor
sub
outsb
adc
dec
call
dec
rolb
pop
mov
jmp
fcmovnu
sub
mov
ljmp
pop
sbb
xchg
lcall
stc
cmp
mov
shl
sbb
scas
pop
daa
xchg
dec
mov
rcr
cltd
in
or
jo
cmpsb
xchg
xor
addr16
mov
jecxz
test
out
arpl
mov
mov
fiaddl
mov
cmpsb
popf
sbb
das
xchg
out
mov
push
rolb
fsubl
dec
sub
loop
jp
cmc
fsubs
adc
pop
mov
insl
je
mov
scas
jg
pusha
sahf
add
insb
das
sbb
je
lods
sti
fwait
nop
movsb
push
fisttpl
insb
int
mov
test
js
jns
out
pop
sub
pop
ret
popa
xchg
xchg
inc
lock
mov
das
sub
fdivl
dec
inc
fsubrl
xchg
dec
pop
mov
aas
mov
repz
outsb
jo
push
std
adc
adcl
fsubr
push
add
xchg
push
mov
xor
jl
sahf
push
xchg
test
xchg
into
jno
pop
jne
popa
sbb
and
pushf
sub
sbb
cli
ret
pusha
dec
arpl
pusha
repnz
pop
loop
xchg
jge
daa
ret
repnz
jmp
repz
lret
xor
jns
and
dec
and
push
cmpsb
xor
outsl
rorw
sarl
ss
scas
in
movsl
fwait
jl
inc
sahf
cmpl
dec
in
lods
xchg
test
inc
clc
ds
mov
dec
inc
cmp
test
cmpsb
into
mov
lret
lret
cs
pop
xor
inc
lds
sbb
cmpsb
pop
daa
call
mov
adc
mov
pop
push
je
sbb
push
shlb
lods
rol
and
mov
push
lret
fidivrl
sub
in
addr16
xor
or
sbb
out
in
clc
add
ljmp
bound
mov
sub
fisttpll
ljmp
xchg
adc
pusha
lea
jg
mov
cmp
out
shrb
rorb
sbb
bnd
sub
in
or
lds
dec
xchg
adc
inc
jp
leave
aas
and
pushw
jo
inc
jp
add
shr
pop
daa
aas
daa
xor
add
lret
insl
inc
add
pop
cmp
push
or
int3
push
addr16
rcr
and
stos
stos
loopne
mov
ja
ljmp
and
cmc
mov
mov
sub
and
lret
fst
insb
ror
adc
fistl
arpl
xchg
iret
pop
mov
or
insl
rolb
loope
xchg
test
jmp
cmpb
inc
pop
fisttps
lahf
sub
dec
push
movl
test
mov
jl
push
xchg
mov
lods
test
adc
das
jp
notb
stc
push
xchg
lods
fdiv
jns
data16
lock
jae
jp
inc
xor
pusha
pushf
loop
adc
push
lods
test
sub
xchg
hlt
sub
adc
aam
mov
loope
add
push
sarl
push
daa
mov
popa
fmulp
sahf
xchg
cmp
outsb
xor
add
dec
jb
enter
vpunpcklwd
je
sub
sbb
push
jne
cmc
and
rcl
jns
pop
cmc
enter
mov
and
aam
sbb
mov
xchg
je
fsubrl
add
mov
push
test
mov
rorb
mov
cmp
mov
cmp
push
cld
xchg
ss
xchg
fimuls
fistl
leave
jge
push
pop
ret
adc
aas
xchg
push
jae
imul
push
cmp
das
inc
aaa
ds
add
ficompl
cltd
cld
test
ds
stc
add
dec
call
aaa
dec
and
imul
mov
xchg
outsb
aas
adc
pop
xor
push
xchg
or
dec
scas
popa
fildl
xchg
outsl
outsl
or
out
push
popf
in
mov
js
cmp
not
push
inc
test
loope
dec
add
adc
cwtl
fucom
mov
in
xor
dec
mov
mov
out
out
imul
push
lret
add
repnz
aas
loopne
mov
xlat
call
repnz
add
cmp
cmp
loope
or
adc
or
bound
cmp
loop
shrb
adc
jbe
popf
sbb
inc
or
inc
xchg
xor
jge
insb
pop
dec
inc
imull
and
ret
sub
xchg
mov
stc
cld
dec
popl
jmp
inc
icebp
dec
jmp
lods
aas
mov
xchg
mov
adc
push
into
adc
je
pop
xchg
lret
cmp
adc
imul
sahf
dec
cmp
xor
aaa
dec
imul
sbb
xor
adc
cli
adc
out
jne
scas
js
in
jecxz
xor
ss
lea
test
lahf
scas
jno
cmpsb
movsl
cmp
push
and
add
andl
aas
das
mov
stos
insl
sbb
and
in
in
and
jb
jl
or
push
adc
cmp
push
add
loop
fists
outsb
cmp
cmp
push
push
pop
xor
cs
adc
xchg
pop
push
mov
popa
xchg
push
or
fisubl
inc
dec
mov
sti
sub
add
push
loopne
es
rorb
adc
enter
dec
testb
xor
orl
pop
out
popa
mov
adc
loop
and
or
fs
xor
subl
xchg
mov
pop
mov
cs
dec
mov
bound
cmp
mov
lock
and
pushf
sub
sarb
mov
lods
and
mov
mov
sub
push
cmpsb
sbb
dec
push
data16
push
pop
lods
mov
add
mov
pop
xchg
int
xor
imul
int
mov
jnp
xchg
mov
push
pop
cmp
jns
nop
dec
aam
enter
mov
sub
outsl
insw
testb
out
cmp
cmpsl
int
rcll
cmp
pop
fstpt
inc
pop
arpl
adc
jo
lret
add
lahf
sub
cmpsl
mov
jl
fimull
mov
mov
cmp
lea
pop
ja
xchg
lret
pusha
mov
and
pop
ljmp
fcomps
inc
or
pop
insl
aam
cmp
outsl
push
and
jge
push
inc
lcall
xchg
sub
push
decb
jno
loope
sbb
outsb
lahf
or
push
adc
cltd
pop
inc
xchg
cmp
sub
das
push
sahf
cmpsb
loop
int
testb
cmp
xor
xchg
mov
adcb
inc
sbb
sub
pusha
xchg
adc
and
iret
xor
outsl
cli
sti
jnp
out
inc
mov
cwtl
lock
mov
into
sbb
scas
inc
test
js
outsb
adc
jb
cld
call
mov
jne
dec
pop
or
fcmovb
adc
enter
leave
mov
sarl
push
fsubl
int3
mov
data16
or
xor
mov
leave
mov
inc
jecxz
adc
xor
push
fisttpl
fstp
mov
dec
gs
and
mov
lahf
data16
ljmp
pop
mov
les
cmc
sub
ror
ljmp
jl
add
out
push
int
mov
pop
pop
addl
or
cli
call
lret
xor
nop
rol
cmovb
jo
add
mov
sbb
add
pop
stos
cltd
mov
outsl
call
jecxz
adc
sbb
xchg
mov
mov
mov
dec
or
dec
jecxz
or
jmp
inc
xor
pop
push
xchg
pop
add
inc
pop
dec
loope
adc
notl
mov
addr16
jns
in
xchg
lods
mov
jo
push
and
ja
aas
cmp
roll
xchg
inc
xor
enter
xchg
mov
movsl
andb
inc
xchg
es
inc
mov
insl
jecxz
shll
sarb
lret
pop
pop
rol
dec
pop
cli
jno
cmp
add
out
dec
std
inc
pop
stos
bound
leave
mov
pushf
sbb
jl
sahf
push
jbe
jne
jno
cmp
fisubrs
shlb
pop
fsubs
mov
mov
dec
adc
xor
add
into
push
push
andb
arpl
adc
std
pop
jo
int3
mov
lods
mov
mov
fdivr
mov
pop
loop
clc
sarl
or
adc
movl
test
pop
stos
mov
andl
lret
lods
or
jge
subb
test
in
mov
sub
push
cltd
jge
and
xor
jg
jecxz
daa
push
xchg
xchg
xchg
mov
pushf
pop
pop
stc
pop
mov
jecxz
cmp
push
xor
sbb
enter
aam
lods
cltd
stos
or
sbb
mov
fwait
push
add
sbb
sbb
js
sarb
and
pop
cmp
clc
xchg
mov
mov
sti
out
test
imul
sbb
in
adc
jb
mov
inc
daa
loop
cmp
mov
dec
jo
xchg
adc
repz
or
mov
popa
outsl
add
test
popf
test
push
jne
adc
xchg
dec
sub
push
ss
and
int
test
push
loope
push
rorb
inc
mov
popa
jns
jecxz
mov
adc
arpl
fidivrs
cmp
fisubrl
add
push
sbb
add
xor
pop
adc
push
xchg
movsb
shl
orb
cmpsl
bnd
les
lcall
cmpsb
inc
sub
pop
mov
xchg
addb
test
lock
dec
xchg
je
or
xchg
cmp
lds
fstps
rolb
cmp
loop
lock
sbb
mov
pop
mov
test
frstor
cltd
xchg
mov
sub
jne
fs
pop
jnp
and
or
aaa
mov
cmc
je
adc
das
push
mov
or
mov
adc
dec
daa
xchg
mov
lock
xchg
inc
mov
jecxz
sbb
pop
int3
push
adc
rcll
adc
movsb
mov
mov
test
xor
and
mov
lods
shrb
sbb
cmc
push
sub
into
push
jp
cmovae
jb
pop
jle
push
adc
adc
dec
sbb
push
sbb
mov
adc
adc
xchg
call
sub
xor
and
mov
mov
dec
xchg
mov
int3
adc
es
and
mov
pop
add
repz
loopne
mull
test
adc
pop
sub
fistpll
cmpsb
repz
mov
loope
int
and
push
fwait
and
push
pop
or
icebp
fwait
mov
or
fistpll
lret
jmp
lahf
fucompp
or
dec
xchg
incb
fimuls
mov
mov
pop
rcrl
mov
mov
xor
stos
xchg
jmp
ja
jmp
insl
lods
bound
adc
decl
leave
dec
xchg
push
mov
rorl
scas
adc
cld
hlt
xchg
adc
or
nop
fcmovne
add
or
pop
inc
repnz
xchg
push
adc
or
pop
mov
xor
leave
pop
add
fisttps
jae
push
pop
jne
xchg
fiaddl
cwtl
xor
ss
scas
mov
sti
and
xor
push
inc
movsl
cli
mov
out
aas
scas
add
mov
fwait
sbb
xchg
jae
sub
mov
in
jg
bound
inc
sub
repz
lcall
mov
adc
jecxz
sbb
xor
mov
lret
xor
mov
add
mov
mov
popa
push
pop
or
xchg
add
outsb
cmp
cwtl
or
adc
mov
outsl
fimull
stos
cmp
ret
xchg
add
dec
sahf
push
xchg
mov
mov
dec
xor
adc
out
push
cmpsb
cltd
ret
lds
in
les
mull
outsb
push
pop
xchg
adc
sahf
add
push
fisttpl
cmp
sahf
in
out
nop
or
das
int3
or
cli
andl
pop
popa
fdivrs
repnz
jne
mov
mov
out
sar
daa
pusha
and
imul
loopne
inc
mov
out
sti
mov
pop
xor
add
push
es
or
dec
and
sbb
xchg
lahf
hlt
mov
pop
mov
mov
test
xchg
lret
das
add
stos
xchg
dec
cmp
fistl
sbb
and
jmp
int
or
xchg
lret
xor
push
mov
mov
scas
scas
cltd
pop
das
lods
push
jae
cltd
stc
fcmovb
fsubrs
test
pop
scas
push
fwait
push
push
je
xchg
cmp
jg
je
and
jns
aam
adc
mov
jbe
and
cmpl
lret
popa
cmp
in
push
imull
out
pop
push
out
and
xchg
xchg
xchg
dec
push
jno
xlat
mov
push
push
jno
loope
pop
popa
shll
add
push
and
or
sub
fisttps
mov
outsl
test
dec
in
adc
xchg
scas
cli
or
jnp
xor
leave
rclb
and
push
repz
pop
in
loop
mov
repz
cld
sar
xchg
and
inc
jl
adcb
and
das
bound
lods
sub
sbb
je
push
out
hlt
jo
adc
shr
xor
push
mov
jl
call
cltd
sbb
xor
sub
cmp
add
aam
popa
mov
pushf
adc
xchg
repnz
imul
sub
xor
fsubr
movq
into
subl
sub
cmc
push
testb
popa
dec
pop
jp
test
push
daa
sub
and
mov
mov
aad
and
mov
ja
test
insl
rorl
ds
inc
jo
aaa
pmulhuw
jno
addr16
addr16
arpl
aaa
jmp
xchg
push
mov
mov
add
xorl
ret
sub
dec
ljmp
jmp
test
sub
sbb
sub
outsl
scas
mov
sub
sub
xor
popa
lods
fstps
sbb
iret
mov
arpl
jle
add
cmpl
imull
xlat
arpl
push
mov
mov
lods
mov
pop
push
js
dec
test
cmp
push
cmpsb
jns
jl
xor
shrl
sti
addr16
add
or
iret
lahf
enter
push
mov
dec
insl
repnz
mov
lock
fistpl
mov
push
push
nop
rol
hlt
in
mov
mov
push
adc
cld
mov
fstp
in
int
or
or
push
lock
int3
push
or
adc
cmpsl
xchg
lret
push
push
outsl
push
mov
or
scas
pop
mov
inc
mov
inc
mov
lods
or
and
cmp
adc
enter
aas
mov
aaa
and
lahf
inc
aam
inc
adc
pop
leave
push
fildll
xchg
push
push
push
or
aam
in
sbb
aaa
mov
cmp
in
lea
mov
sbb
loope
scas
loop
mov
sti
pop
xlat
mov
int3
cmp
sub
loope
andl
adc
lds
js
mov
adc
or
repz
mov
subb
sbb
loop
xchg
lds
xor
mov
pusha
mov
test
add
sbb
jecxz
dec
sahf
mov
cmp
dec
or
pop
or
pop
int
mov
xchg
and
inc
adc
push
scas
xchg
add
jns
imul
mov
lds
mov
dec
enter
sbb
xchg
stos
xchg
cld
popa
aaa
jbe
sbb
bnd
adc
mov
fdivp
pusha
jl
mov
sbb
pushf
ret
pushl
mov
aad
leave
and
cmpsl
test
nop
mov
sub
inc
add
je
inc
mov
mov
adc
loope
scas
popa
mov
jge
rolb
cs
out
test
adc
out
push
dec
push
cmp
push
fcomps
out
dec
adc
repnz
das
sar
call
jl
daa
cmpsl
sbb
daa
dec
aam
cmpb
into
jbe
or
mov
lahf
shlb
stc
add
fsubrl
sbb
dec
mov
mov
push
pop
cld
stc
push
enter
lret
outsb
mov
es
pop
jno
sbb
mov
sbb
mov
pop
sbb
jp
or
adc
arpl
in
sti
std
lahf
ss
sub
shl
and
xchg
sub
movb
in
xchg
add
cmp
and
sahf
mov
add
fsubl
and
sahf
push
xchg
xor
adc
addr16
jg
push
arpl
rolb
insb
outsb
movsbl
sub
push
arpl
mov
stc
insb
cmpsl
aas
mov
mov
cs
mov
rcll
shll
push
xchg
std
test
in
add
cmp
jbe
clc
push
inc
pop
dec
mov
fxch
fbld
dec
cmp
icebp
ror
les
data16
decl
push
mov
sbb
push
or
mov
in
addr16
pop
jp
xor
lcall
cmpsl
jbe
jg
add
jbe
and
jae
and
rcll
mov
mov
out
lcall
add
mov
aas
sbb
or
add
aaa
dec
pop
into
into
mov
movsl
pushf
jae
and
cmp
fcomp
jmp
sbb
pop
sub
je
add
jl
pop
fnstenv
cmpsl
negl
in
xor
fdivrs
fwait
push
push
scas
mov
fiadds
scas
lahf
jns
scas
bswap
jb
xor
imul
mov
add
cmp
inc
addr16
bound
xchg
push
cltd
cmpsl
test
jmp
adc
lret
dec
aas
sbb
cmp
or
aas
push
pop
stos
adc
andl
and
mov
jae
leave
pop
sbb
hlt
xchg
imul
xchg
mov
fwait
loopne
cmp
jg
stc
cmpsb
mov
push
in
mov
addr16
mov
jnp
mov
xchg
gs
pop
jnp
and
addr16
cli
adc
mov
jle
mov
mov
lgs
mov
arpl
lods
insl
xlat
bound
push
test
int
cmp
mov
sub
push
xchg
mov
lock
fnsave
xchg
lods
jno
shrb
stos
xchg
dec
loop
insl
and
lahf
dec
xchg
stc
rorb
imul
iret
dec
imul
jmp
or
mov
addr16
lock
pop
adc
xor
mov
jno
adc
pop
xor
xchg
int3
lret
nop
inc
sbb
and
fldl
int3
test
add
lods
std
mov
mov
pop
leave
cmp
adc
nop
gs
mov
fidivrs
cli
jmp
push
inc
enter
call
insb
mov
mov
test
or
pusha
push
push
aas
jb
daa
sbbl
inc
inc
push
cmp
outsl
rcll
mov
test
sub
jae
sbb
rcrb
mov
adc
adc
cwtl
push
je
inc
pop
push
add
out
mov
add
adc
gs
std
in
sti
hlt
bound
sahf
cmpsl
test
in
mov
stc
mov
mov
lds
mov
mov
or
in
subb
shrl
cwtl
in
dec
jle
inc
bound
jecxz
lret
pop
into
adc
inc
mov
inc
or
pop
lods
xlat
pop
outsb
insb
mov
pop
btr
cmp
lahf
pop
fcomp
ljmp
push
inc
rorb
mov
cltd
insb
mov
cwtl
shll
jl
dec
and
mov
ds
stc
bound
add
adc
add
xchg
popf
mov
cwtl
xchg
push
in
out
push
push
insl
aaa
xchg
xor
and
imul
jno
in
dec
sahf
scas
gs
nop
adc
test
xor
shrb
jns
cmc
adc
jmp
dec
dec
or
shlb
xchg
inc
adc
sub
ja
test
sbb
sti
in
add
rcr
xor
dec
rcrl
sbb
dec
popl
aaa
xor
add
mov
inc
loopne
insl
xor
inc
push
mov
mov
mov
mov
les
loopne
pop
cmc
mov
adcb
mov
or
xchg
sub
jge
outsb
aam
popf
push
push
pushl
sub
cmpsb
xchg
cmpsb
xor
in
and
add
and
fcmovne
ret
adc
subb
bound
in
mov
lods
aaa
mov
stos
mov
dec
lret
dec
lods
notl
lcall
iret
jge
stos
cmp
testl
dec
or
or
xchg
cmp
dec
lret
lret
leave
mov
dec
iret
aam
xchg
stos
mov
xchg
sahf
icebp
inc
sarl
pop
popa
loopne
pop
cmp
sub
daa
dec
mov
andl
lock
and
out
mul
fdivrp
sbb
xchg
pop
or
inc
mov
fwait
sub
pop
mov
mov
add
dec
out
or
sub
mov
ficoms
cmpw
ds
push
cld
add
sub
imul
in
dec
shl
repnz
sarl
jne
push
sbb
pop
out
loopne
ret
cltd
cmpsl
pop
xor
jno
repz
jnp
aad
and
or
les
fldcw
sarb
notb
xor
jns
mov
int3
inc
and
cmpsb
scas
jecxz
out
cmp
mov
and
loope
xchg
add
xchg
mov
adc
out
rorl
mov
cld
cmc
pop
or
mov
ds
add
push
out
lea
ja
das
inc
jne
ja
mov
inc
movb
push
xchg
cmp
or
in
pop
xchg
jno
mov
xchg
ret
jecxz
ficoml
ror
dec
loope
or
add
jae
mov
mov
gs
push
mov
repz
inc
loope
mov
mov
inc
sub
pop
iret
xchg
shrl
adc
push
sub
inc
jmp
into
jb
add
in
cmp
in
mov
clc
dec
mov
and
lods
inc
add
in
dec
pop
jge
add
jne
test
jno
pop
int3
pop
mov
mov
addl
sbb
lcall
and
aad
mov
adc
sub
sahf
mov
push
or
ret
cmp
dec
adc
sbb
das
xchg
test
loope
ret
loopne
cwtl
mov
jle
inc
cs
mov
add
sbb
and
dec
xchg
fnstenv
fmuls
xchg
loop
repz
shl
mov
dec
iret
lahf
and
shl
push
lahf
inc
stos
push
clc
mov
lods
lods
mov
ret
lods
pop
dec
std
imul
ljmp
cwtl
cmp
pop
jo
xor
adc
ds
push
subl
and
in
xchg
mov
int
push
adc
divb
and
inc
icebp
inc
push
jns
into
add
popf
fmulp
jg
push
aas
out
xchg
in
iret
mov
sub
or
mov
mov
negb
xor
cmp
aas
or
ds
sahf
and
xchg
int
add
adc
outsb
insb
sub
mov
inc
pop
je
mov
and
cmp
cmp
je
push
rcrl
mov
cmp
ss
mov
cmp
pop
dec
arpl
ret
lea
add
rclb
pop
push
push
les
scas
in
xchg
lods
pop
stos
or
enter
add
and
out
inc
sbb
inc
lds
rcrb
ss
scas
or
push
sbb
pop
push
cmc
dec
or
sahf
mov
pop
mull
stc
cmp
in
ds
cmc
fstpt
sbb
xor
int3
push
mov
dec
enter
mov
movsl
adc
std
adc
cmp
orl
sbb
mov
test
lret
lret
aam
call
push
in
lods
xchg
test
int3
mov
hlt
sysret
out
neg
xorb
fdiv
xchg
jmp
pop
fnstenv
popf
ja
scas
pop
test
xchg
aam
mov
fidivs
mov
stc
bound
arpl
mov
addl
xor
cmp
out
inc
out
test
cmp
cli
cmp
jns
xchg
sbbl
xor
stos
rol
icebp
in
nop
fistpl
lods
inc
mov
fdiv
scas
xchg
lds
sbb
jnp
mov
push
cli
cmp
daa
inc
rcll
and
iret
test
movsl
das
fcompl
popf
or
or
out
add
int3
fs
loop
aad
lock
or
xchg
cmpsl
ds
xor
jnp
xor
aad
adc
ja
sub
add
in
fs
xchg
sbbl
popa
fisubs
jne
rol
scas
mov
sahf
inc
cmpsl
movsb
data16
fwait
ja
inc
mov
inc
xchg
adc
cmp
mov
jbe
push
and
xchg
fisubl
sbb
sarl
call
push
mov
add
repnz
dec
mov
movsl
cmp
mov
pop
ds
dec
subl
pop
lret
push
jge
xchg
dec
xor
pop
cmp
jle
imul
mov
ret
mov
pop
push
mov
mov
mov
addb
jnp
adc
cmp
mov
jl
jp
xchg
cmc
jecxz
das
shrb
out
gs
lret
mov
pop
push
adc
jle
or
xorb
shrb
daa
jae
ftst
pop
cli
xchg
jo
jecxz
rorb
xor
jns
cmpl
jg
or
or
jno
mov
ds
lret
les
lcall
xchg
lcall
cs
sbbl
and
push
movsb
fdivs
aaa
shlb
mov
mov
xor
or
faddl
lcall
inc
and
arpl
and
jge
inc
lods
mov
mov
testl
mov
ss
orl
enter
cmp
imul
stos
out
and
loopne
inc
xor
scas
pop
ds
ss
dec
xchg
fdivl
mov
aaa
fcoms
mov
xchg
inc
ret
ftst
cld
push
pop
push
xchg
pop
mov
adc
add
cmp
je
insl
dec
mov
mov
movsl
les
pop
fnstcw
sub
jbe
sbb
xor
cld
lahf
cltd
das
out
push
jl
addr16
ja
ret
lods
cli
xor
int
fiadds
pop
cltd
nop
adc
rol
fmul
in
sbbb
jno
mov
ret
shlb
and
cs
xor
mov
dec
mov
mov
lret
ja
dec
and
lods
sbb
lds
jecxz
std
jle
or
insl
cmp
incb
es
inc
push
xchg
aas
daa
fisttpl
mov
out
stos
rcl
stos
nop
mov
lret
sbb
std
mov
xchg
and
jl
mov
test
xorb
xor
add
mov
outsl
sub
test
imul
and
mov
inc
fistpl
loop
ja
testl
pop
cmpsb
stos
mov
or
inc
or
outsl
movsb
add
data16
push
ds
jne
movsl
fnclex
inc
pop
inc
push
loope
push
test
adc
sub
mov
test
jp
imul
into
fisubrl
mov
call
pop
push
repnz
cmpsb
inc
add
adc
outsb
iret
insb
ljmp
adc
fs
out
mov
push
test
dec
repnz
sub
cmpsb
out
out
mov
sahf
xchg
xchg
mov
mov
mov
jo
clc
mov
fwait
jge
pop
jle
mov
xor
mov
mov
in
andb
and
fwait
push
pop
popf
test
popa
insb
cmp
xor
int
ret
in
insb
js
fstpl
lock
movsl
sahf
sbb
call
ret
mov
pop
or
add
jmp
outsb
lahf
adc
mov
aam
pop
orb
push
lret
cmp
push
shrl
push
mov
repz
xchg
push
inc
lcall
mov
lahf
inc
cmp
or
hlt
mov
call
rcrb
dec
mov
out
jne
mov
and
out
sbb
out
sub
gs
dec
lods
popa
mov
cld
leave
in
mov
mov
rolb
xor
rcr
mov
jne,pn
shlb
test
jge
push
jnp
mov
movsb
cmp
sbb
into
lock
and
xor
dec
push
add
cmp
dec
sbb
adc
mov
mov
and
push
ljmp
pop
mov
jae
sbb
xor
in
clc
outsl
rorb
inc
sbb
bound
mov
sahf
subl
mov
pusha
rep
shrb
es
das
jle
or
mov
cmpsl
mov
cmp
mov
psubq
sub
fistl
xchg
jecxz
inc
arpl
or
pop
test
fldenv
push
and
adc
scas
cld
sahf
xor
push
arpl
sbb
xlat
pushf
flds
push
ret
dec
shrb
jp
jno
add
push
mov
or
test
sub
out
pusha
addr16
or
into
inc
inc
jg
lock
pushf
out
mov
adc
sub
lods
mov
xchg
aaa
shlb
call
mov
sbb
mov
bnd
dec
arpl
in
mov
pop
xor
retw
enter
mov
pusha
adc
xchg
push
ficoml
mov
jno
pop
inc
push
xchg
mov
in
out
in
mov
adc
addr16
cmpsl
or
inc
mov
fwait
dec
xor
repnz
movsb
inc
xchg
lock
fs
iret
mov
sub
xchg
adc
sar
add
addr16
sub
ret
in
inc
sbb
gs
fnstcw
sub
iret
adc
jo
pushf
inc
in
gs
adc
jmp
pop
fiadds
mov
cmp
cmpb
mov
orl
gs
fs
mov
cs
mov
imul
pop
jne
push
or
jb
xchg
aam
out
sub
mov
push
push
and
sbb
loop
adc
fisttpll
in
push
stc
mov
imul
pop
and
xor
imul
imul
push
sbb
push
push
enter
repnz
dec
mov
and
xchg
sbb
jnp
pop
jnp
roll
shll
ss
jp
xchg
std
jge
es
in
xchg
decb
stos
sbb
jecxz
xorl
in
loopne
jg
hlt
sbb
mov
push
dec
ret
clc
jno
xor
inc
and
shll
push
sbbl
adc
fisubrs
lds
test
fldl
mov
repz
test
pushf
sbb
test
and
loop
shll
dec
lcall
jns
movsl
xlat
orb
xor
xchg
fcompl
xchg
inc
adc
dec
cmpsb
push
ja
mov
cmpsb
adc
sbb
cli
xchg
sbbl
or
test
cmp
lods
mov
dec
pop
add
mov
pop
lods
out
les
jno
loopne
call
loopne
pop
in
mov
sahf
lret
aam
and
xchg
mov
push
pop
jge
test
jb
nop
in
fisubrl
sbb
into
push
jg
in
mov
dec
xchg
lret
adc
sub
aad
lods
cs
int
ljmp
add
ret
pushf
shrb
test
pusha
mov
sub
scas
xor
scas
pusha
inc
aam
push
mov
dec
in
add
es
fiadds
dec
pop
movsb
mov
imull
ret
aas
scas
clc
int
pop
jge
push
lret
jb
mov
mov
cmp
test
enter
pop
les
push
jne
add
mov
clc
sub
adc
mov
out
ret
lret
out
fnstsw
push
in
dec
jge
cmpb
enter
in
aam
call
jmp
dec
aam
dec
add
pop
sbb
imul
jg
pop
mov
aad
aam
push
xor
jo
mov
xchg
test
or
scas
jge
addl
aaa
sub
lods
mov
cmp
cltd
adc
movsl
pop
les
and
push
pop
das
dec
dec
jecxz
jo
sbb
mov
mov
push
lcall
rorl
push
adc
sub
clc
andb
outsl
jbe
xchg
pushf
and
xor
or
in
sbb
mov
push
xor
xchg
pop
leave
call
dec
lret
std
mov
pop
sbb
sub
cmc
js
xchg
add
mov
inc
cli
sbb
popa
and
lret
int3
push
fmull
dec
jb
dec
sbb
jae
ret
xor
adc
mov
fdivrl
ljmp
jge
out
push
inc
or
push
adc
repz
jmp
xchg
das
adc
mov
mov
jb
repz
testb
mov
pop
in
mov
jmp
jmp
push
sarb
sbbl
push
test
xchg
jne
sub
enter
mov
xchg
inc
adc
mov
aam
xor
ret
cmp
loop
cwtl
or
xor
push
cwtl
xor
inc
mov
sub
stos
sahf
out
pop
scas
push
data16
loopne
call
repz
cbtw
outsl
in
cld
pop
cmp
mul
shl
mov
cmpsl
mov
inc
sub
imul
movsl
cmpl
sbb
sbb
push
xor
jae
insl
and
scas
xor
cmc
and
movsb
jecxz
add
mov
jge
cmp
push
sub
lret
pop
ja
add
mov
mov
xchg
loopne
cmp
int3
loopne
call
inc
jp
fnsave
jns
test
pop
loopne
jge
pop
cwtl
outsb
sbb
pop
cmp
rol
xchg
orl
adc
push
outsb
cmp
pop
push
ljmp
daa
test
loopne
push
ret
jl
and
jbe
xor
push
outsl
int
xchg
sbb
xlat
sbb
cwtl
jg
scas
enter
mov
mov
negl
pushf
sbb
cs
push
daa
cmp
adcb
mov
into
mov
cmpsb
pop
add
cmpsl
push
xchg
jg
add
lds
nop
icebp
adc
jg
push
cmc
dec
inc
pop
pop
data16
ljmp
dec
mov
inc
test
je
insl
push
sbb
bound
mov
je
cwtl
xchg
cwtl
negb
jns
lds
adc
xor
ja
imul
andnps
jp
pop
fistps
ret
dec
inc
aam
cmp
fsubl
loope
rcl
mov
jne
cmove
stc
rorb
sub
and
fwait
int
out
and
mov
mov
lret
aad
gs
les
inc
or
mov
add
int3
push
aaa
int
jno
pop
xchg
sarl
mov
inc
sub
int
lahf
jge
xchg
nop
cmp
mov
xor
jbe
add
xor
add
les
jno
mov
pop
add
dec
aad
xchg
movsl
mov
pop
or
push
lods
jae
sahf
dec
out
lret
adc
xchg
pop
mov
sarb
push
xchg
je
cmp
lcall
lods
inc
cmp
and
enter
inc
xor
gs
in
and
lldt
mov
xlat
fs
push
stos
push
add
stos
shl
lea
enter
and
shl
aaa
stos
inc
clc
cmp
dec
imul
popa
sbb
aad
pop
js
outsl
cmpsl
dec
popa
or
sbb
pop
and
push
add
popf
adc
mov
je
int
in
jmp
shr
test
mov
fs
enter
jle
sub
in
sbb
adc
call
inc
ljmp
pop
ret
cli
movsb
sbb
push
lret
inc
nop
sbb
xchg
jg
dec
test
cs
lahf
dec
test
pop
xchg
faddl
psllq
push
lods
sub
mov
fisubrl
xchg
ret
popa
pop
lcall
enter
cs
inc
fldcw
sbb
pop
cmpsb
xor
bswap
flds
in
in
scas
sbb
nop
mov
mov
mov
loop
fxch
xchg
inc
inc
fdivl
iret
xor
or
mul
adc
mov
push
add
mov
push
push
lea
adc
pop
sete
push
aaa
dec
cmpsb
ljmp
icebp
scas
pop
ds
cmp
cmpsb
popf
fisubrs
bound
popa
sub
pop
negl
into
es
pop
push
clc
shlb
and
loopne
adc
insb
addr16
and
mov
in
push
loop
mov
mov
sbb
aam
cs
xchg
jno
loope
lcall
imul
in
mov
add
xlat
sbb
test
pop
negb
sub
shlb
push
sbb
push
jg
and
push
lahf
and
pop
push
mov
mov
inc
sub
das
movsl
les
cmpsb
popf
ljmp
das
inc
jae
fistl
rcrb
jmp
mov
and
test
lea
xchg
inc
push
pop
pop
lret
mov
mov
jo
jns
mov
mov
xor
mov
xchg
and
dec
je
test
mov
popa
loopne
stos
sbb
mov
push
push
repz
and
cmpsb
int3
jnp
mov
out
jg
mov
lds
movsl
sahf
jbe
stc
dec
inc
dec
xor
pushl
cmpsl
scas
arpl
scas
rcrl
pop
scas
pop
mov
cmpsb
lds
shrl
jmp
mov
xchg
cs
pop
rep
push
push
xchg
test
imul
pushf
pushf
insb
je
clc
fwait
push
cwtl
mov
jo
imul
xor
sti
out
pop
jno
bnd
subb
and
xchg
xchg
lcall
sahf
fwait
ds
movsl
lahf
pushf
dec
ret
dec
or
or
icebp
fnsave
out
in
lods
nop
mov
sbb
arpl
fwait
dec
pop
daa
dec
data16
loopne
pop
dec
cmp
jmp
add
xor
or
lahf
push
int
lret
cmpsb
xchg
popf
push
push
inc
imul
std
in
rol
pop
xchg
outsb
xorb
push
lods
lods
cmp
stos
test
mov
or
ja
sahf
rcrl
popa
stc
dec
sar
test
push
sub
imul
or
cmp
scas
add
std
add
push
pusha
adcl
cwtl
loopne
hlt
adc
inc
jbe
in
and
dec
lea
les
cwtl
push
in
or
nop
pop
mov
sbbb
mov
je
cmpsl
mov
add
and
pop
lds
rclb
adc
and
daa
lock
sub
jno
in
pop
inc
lock
mov
inc
shll
lahf
clc
mov
ret
sub
pop
xor
or
add
pop
in
loop
jae
cmc
fstpl
test
jbe
out
movsl
mov
dec
dec
inc
adc
xor
push
daa
sub
addr16
mov
pushf
adc
arpl
inc
stos
popf
xchg
aam
cwtl
cmp
xchg
ljmp
pop
mov
icebp
push
lahf
test
adc
cs
movsb
pop
inc
sub
cld
cli
xchg
pop
mov
adcb
sub
lret
into
decl
lea
fiadds
inc
pop
pop
jge
std
or
dec
push
fimull
rep
mov
jb
call
sbb
in
mov
or
jmp
adc
bound
pop
push
sti
pop
stc
or
cld
jge
scas
dec
out
mov
rcr
sub
and
jge
push
cmp
scas
or
mov
pop
dec
dec
mov
pop
xchg
adc
pop
xor
dec
and
leave
scas
and
ret
inc
in
adc
inc
xchg
rorl
jo
je
fdivrl
and
fldcw
out
fdivl
add
shlb
arpl
xor
mov
cmc
mov
jo
stos
xlat
add
push
pop
or
repnz
nop
xor
in
adc
in
test
xor
xor
xchg
mov
jmp
lods
out
lods
cli
fisubl
inc
lret
add
push
arpl
mov
addr16
mov
inc
rclb
fisubs
std
in
cmc
jno
stc
dec
xor
decb
pusha
popf
leave
push
and
or
lods
cmp
orb
testl
pop
cmp
pushf
sub
incb
js
imul
je
aad
push
pop
int3
aaa
xor
scas
pop
rcl
cmp
cwtl
dec
dec
pop
xor
push
pusha
xorl
sub
cmp
and
cmova
iret
les
aaa
dec
pop
icebp
ret
imul
js
cmp
cmp
and
les
rcrl
sbb
jp
push
imul
inc
mov
or
or
imul
mov
je
ss
test
push
movsb
jne
out
outsb
aas
sbb
xchg
fidivrl
jl
mov
dec
stos
mov
or
ret
into
inc
das
adc
add
and
sarb
mov
insb
adc
lods
and
cmp
js
dec
imul
imul
jne
jno
fists
pushl
sub
insw
leave
bound
stc
data16
or
out
test
inc
xor
mov
xrstors
lahf
sub
lea
test
jnp
lea
sbb
mov
inc
arpl
in
xchg
rcr
push
in
loope
test
adc
popf
push
xchg
incl
cmp
clc
icebp
sub
pop
je
dec
fimull
into
xlat
imul
push
dec
add
ud2
jge
xor
pop
mov
pop
add
pop
jne
test
cwtl
jb
loopne
push
lcall
cmp
cs
sti
or
sbb
push
xor
add
out
sbb
xchg
gs
pop
xlat
insl
clc
nop
ljmp
adc
jp
mov
push
jns
lahf
arpl
test
aam
push
andb
mov
push
dec
cwtl
repz
test
push
mov
mov
in
cld
sub
and
adc
inc
add
inc
mov
shlb
pop
imul
pop
pop
sub
scas
mov
fisubs
stos
in
mov
movsl
loop
sahf
fwait
pusha
cmpsl
loopne
sub
in
mov
jnp
mov
dec
xchg
cmp
push
addr16
ds
fnstenv
pop
shl
imulb
push
push
pand
jno
rcrb
mov
dec
push
add
sbb
inc
mov
push
jmp
xor
or
rorl
das
cmp
sub
lahf
mov
xchg
rorb
xorb
iret
out
add
sbb
pop
dec
push
test
test
dec
push
rcl
pop
aaa
test
inc
mov
add
mov
push
sahf
std
push
decl
xchg
in
into
ss
mov
data16
popa
pop
inc
aam
or
mov
test
mov
lahf
std
cli
stos
mov
mov
mov
sub
jge
fdivr
jb
stc
xchg
push
mov
mov
jne
shll
pusha
sbb
cmpsb
inc
mov
fwait
enter
xchg
mov
jg
mov
or
hlt
push
repz
ret
mov
shll
fwait
cmp
xchg
aad
mov
popf
or
jg
fstpl
cmp
std
xor
or
sub
mov
or
push
dec
lods
jne
mov
sub
dec
xor
fwait
orl
pushf
cmpl
lods
push
test
push
xor
lret
nop
mov
pop
sub
imul
fildl
lds
mov
rclb
inc
sbb
dec
out
lahf
sub
shll
push
mov
outsl
cli
cmpb
pop
xchg
test
xchg
dec
outsl
pop
dec
js
mov
xchg
jb
popf
into
mov
roll
sub
outsl
or
push
loope
jg
test
clc
dec
or
xchg
push
pop
in
mov
mov
out
add
mov
cmp
jge
xchg
sbb
int3
lahf
mov
in
ja
mov
adc
xor
push
dec
jne
in
pop
pop
dec
into
sub
fucom
adc
jae
std
add
add
push
and
jo
dec
add
shrl
push
push
sub
lea
ret
imul
int
mov
lret
pop
rcll
fwait
loopne
mov
mov
jbe
add
add
fwait
pop
jmp
loop
push
push
dec
in
mov
movsl
shrb
push
in
or
and
rcll
test
xchg
mov
inc
dec
or
adc
mov
mov
sub
pop
mov
pop
xor
xor
int3
iret
xor
dec
mov
test
loop
cld
fsin
xchg
xchg
stos
imul
inc
addl
fcoml
mov
push
xorl
js
fcoml
call
cmc
data16
shr
bound
mov
daa
xor
mov
mov
mov
pop
daa
mov
push
ficomps
and
movsb
mov
outsb
sbb
pop
decl
xchg
ror
pop
pop
and
stos
js
inc
add
push
out
mov
push
ret
arpl
das
sbb
shl
shrb
dec
jmp
add
in
out
imul
add
push
pop
das
sbbb
in
xchg
add
loopne
mov
lods
xlat
cmp
je
fadd
bound
push
jo
dec
lods
jb
or
and
jae
out
mov
mov
push
pop
call
push
mov
aad
insl
sarl
cli
adc
xlat
jo
cmp
lret
imul
fbld
sub
pop
rol
shlb
imul
push
sub
enter
insb
pop
rep
cltd
test
sub
jno
push
and
stc
cmp
pop
adc
and
push
shl
push
xor
outsl
mov
xor
pop
test
rcll
shr
cmpsb
enter
dec
inc
inc
addb
jmp
jno
int
aam
adc
push
mov
js
sbb
je
push
aas
push
mov
dec
xorb
shll
es
addr16
jg
scas
call
shlb
mov
sar
cwtl
call
inc
repnz
xchg
inc
js
je
leave
imull
inc
pop
mov
sahf
push
pop
add
push
and
mov
mov
sarl
into
das
pop
cmp
pop
ret
inc
sbb
cmp
adc
stos
pop
aad
lea
cld
mov
lea
xchg
pop
cmpsb
adc
mov
pop
loop
pop
aad
lret
sbb
dec
fiaddl
xchg
rcrb
stos
jl
outsl
popl
add
xchg
sti
push
jae
mov
xlat
dec
stos
sub
push
push
mov
sbb
popf
xor
xchg
mov
insl
mov
ds
imul
outsb
in
add
out
pop
dec
lea
daa
add
or
dec
mov
ja
ret
stos
popf
fwait
mov
jns
add
aad
pop
test
pop
ret
out
out
jnp
mov
test
xor
cli
scas
pop
inc
sub
dec
out
scas
movsl
fcomps
and
inc
dec
cs
cld
daa
loopne
or
jo
mov
jnp
jo
es
std
mov
or
cmp
lahf
lds
or
jmp
ret
xor
adc
out
sub
data16
stos
ds
repz
ljmp
inc
xlat
mov
sahf
gs
jb
xor
cmp
xlat
stos
dec
aad
mov
cwtl
inc
sbb
or
jmp
addb
aas
xor
enter
adc
jecxz
cli
pop
and
jl
pushf
jp
xor
mov
pop
mov
jecxz
fidivl
lea
rclb
repnz
adc
imul
shrb
or
pop
mov
pop
or
loopne
jl
loop
adc
jo
mov
xchg
shlb
mov
jle
mov
mov
dec
cs
mov
jns
dec
and
sub
pop
sbb
filds
gs
negb
xchg
dec
lock
mov
xchg
fstps
inc
pop
add
aad
xchg
mov
push
dec
push
mov
sub
add
jl
movsb
push
push
in
cmp
jae
cmpsl
sub
daa
rorl
xlat
pop
pusha
xor
mov
insl
mov
in
ss
notb
mov
fwait
and
cs
sarb
push
cmpsb
and
ja
and
test
xchg
out
aad
pop
push
lods
ret
shrb
pop
icebp
or
test
add
jns
shrl
fs
lret
mov
mov
mov
or
dec
sub
inc
pushf
or
aas
arpl
jns
popf
xchg
dec
outsb
xor
andb
data16
ud2
mov
mov
pop
or
cmpsb
mov
sbb
in
into
stos
shl
fldcw
outsl
ss
push
inc
roll
xor
in
sub
jns
and
call
pop
jb
xchg
push
mov
xor
xchg
xchg
shl
jmp
or
popf
adc
lock
inc
cmp
jmp
in
std
ja
adc
popf
push
test
ja
cwtl
pop
js
lahf
insl
adc
daa
push
fsubr
popa
push
ljmp
adc
add
daa
sub
cmp
xchg
inc
loop
push
andl
repz
aam
lock
mov
ret
and
rcr
cmp
jns
cmpsb
aas
pop
jbe
dec
dec
xor
out
sub
mov
loop
icebp
into
add
mov
mov
inc
cmpsl
daa
cmp
fcomps
cmp
mov
movsb
mov
imul
inc
inc
add
push
adc
sahf
pop
inc
mov
pop
cld
dec
fidivrl
loope
pusha
rcll
jno
cld
js
fbld
dec
subl
cwtl
adc
add
out
dec
popa
mov
jg
add
fsubl
call
dec
adc
lea
or
test
shrb
popf
sub
mov
int3
addb
cmpsb
sbb
jg
cmp
cld
loopne
cmp
cmpsb
jl
lret
out
sub
jl
rorl
shl
cmp
pusha
mov
jle
mov
xor
dec
pop
ja
repz
push
cmc
aaa
aad
mov
call
test
jp
jbe
pushl
add
loop
test
jg
lock
pop
cmp
push
rorl
fwait
loopne
rcrb
add
adc
pop
lcall
push
scas
mov
addr16
mov
mov
pop
push
in
pop
xor
addr16
sub
aam
movsb
add
in
test
push
pop
ret
test
inc
loopne
pushf
imul
mov
cli
std
cltd
xchg
mov
push
push
leave
sbb
ss
mov
testl
sbb
mov
jne
fstps
or
add
xor
popf
in
cmp
mov
lea
jp
add
xchg
xchg
or
fscale
push
mov
cld
sbb
js
popf
pusha
mov
sbb
test
adc
jbe
sbb
cmpsb
and
mov
xchg
jnp
push
ret
xor
push
mov
jne
inc
pop
xlat
loop
fbld
fisubrl
add
xor
xchg
push
xchg
push
jge
pop
cmp
dec
inc
and
fidivrl
dec
outsl
icebp
or
mov
movsl
sbb
push
sub
mov
shll
out
stc
push
mov
jp
dec
sub
pop
add
sbb
and
xchg
and
das
movsl
rorb
push
sbb
cli
das
dec
push
jecxz
jae
push
xor
jl
mov
mov
out
push
in
xor
add
xor
push
pushf
data16
adc
int3
push
xlat
sub
xor
cmp
cmp
test
xor
fdivrs
jecxz
sbb
ss
xor
mov
sub
and
inc
xor
lcall
subl
pop
xor
clc
enter
push
ljmp
sub
sarl
fistl
pop
pusha
add
mov
hlt
fbld
cmp
jge
jp
ja
lock
arpl
inc
cmp
add
jno
pusha
imul
shrl
es
push
push
xchg
test
xchg
nop
js
add
in
ja
fdivs
jnp
ljmp
add
adc
aam
and
jecxz
fisttpl
mov
mov
fidivrl
lods
fidivs
inc
shlb
in
mov
int3
push
imul
sbb
inc
mov
sti
outsb
pop
push
xchg
pop
cwtl
movsl
sbb
lret
cs
out
into
ret
or
push
stos
in
xchg
les
stos
xchg
jno
sub
ljmp
gs
shr
pushf
jg
push
mov
mov
push
ds
xor
sti
push
stos
mov
push
sub
add
mov
insl
add
or
outsl
stc
mov
sbb
add
fimuls
aas
cmp
hlt
and
or
xor
mov
stc
add
mov
shll
or
mov
push
fwait
ror
scas
jecxz
push
test
mov
pop
test
sarl
push
addw
flds
mov
dec
adc
roll
dec
lret
roll
rorb
fwait
lahf
lea
xchg
push
loope
lea
ja
pop
hlt
sub
or
mov
xchg
mov
pop
addr16
xor
and
mov
ja
test
pop
nop
or
repz
xchg
rcr
mov
push
sbb
or
sbb
into
and
dec
cld
fsubrl
aam
in
jp
stc
mov
jle
aam
push
dec
sub
mov
push
sbb
dec
adc
loopne
je
xor
nop
hlt
in
sbb
hlt
pop
pop
int
mov
jnp
jne
int
lret
jnp
cmc
pusha
sarb
mov
jnp
dec
testb
in
mov
in
into
je,pt
add
es
sbb
mov
loop
sahf
mov
cmp
fsubrp
pushf
lcall
push
jno
mov
cltd
lods
inc
and
pop
xchg
inc
aad
push
or
ljmp
gs
es
in
jg
mov
inc
push
jle
sbb
mov
int3
das
push
out
pushf
add
jae
scas
push
in
add
roll
jo
loop
in
jnp
std
imul
notl
outsb
and
bndstx
jns
fcmove
lods
cmp
inc
mov
arpl
call
popf
jmp
stc
push
sub
jae
jmp
cmc
or
out
lods
stc
adc
adc
dec
pusha
movsl
outsb
mov
fisubrl
jp
ljmp
inc
mov
cmp
rcl
movl
mov
mov
cwtl
adc
add
mov
push
dec
lods
mov
loope
push
aas
pop
aas
call
cmp
clc
mov
pop
mov
scas
pop
inc
lret
lcall
xchg
out
in
inc
fcompl
mov
imul
call
push
sub
out
in
mov
movsb
fisubs
push
push
cltd
mov
clc
movsl
inc
test
and
ret
xchg
mov
inc
pop
inc
xchg
sub
es
aas
fdivs
dec
mov
sub
std
and
imul
daa
dec
negl
dec
pop
fmuls
xor
ds
jmp
pop
mov
lock
dec
bound
xchg
ret
adc
or
enter
test
and
test
push
cmp
mov
bound
adc
cli
rcrb
cmpsl
dec
enter
fidivrl
loop
test
rolb
inc
pop
mov
lods
icebp
fucom
adc
into
bound
xor
fwait
int
dec
xor
insb
xchg
jmp
cmpsl
sbb
push
mov
mov
xor
loopne
in
push
outsl
movsl
mov
pop
aam
pop
test
lock
aad
xchg
ljmp
call
sbb
cwtl
fnstsw
xchg
shll
scas
pop
movsl
fidivrl
outsl
adc
pop
jo
fisttpl
jb
enter
inc
sub
jnp
std
cmp
push
fwait
mov
test
or
cmp
pop
cmp
cmpsb
les
lret
inc
mov
addl
sub
sbb
xlat
test
pop
daa
stos
mov
mov
fiadds
popa
into
jg
movsb
inc
xor
and
shll
sahf
adc
inc
leave
sar
je
cli
xchg
mov
aas
mov
cmc
xor
data16
fmulp
adc
push
push
sub
xlat
jge
ljmp
sub
addr16
pop
cmpl
or
mov
inc
jae
imul
and
out
or
out
arpl
jae
fcmovnu
lock
sbb
jg
rorl
mov
mov
inc
test
into
stos
test
push
push
jne
push
push
and
cmpsl
aad
sbb
insb
xchg
lret
data16
insl
loop
xchg
ds
mov
mov
jno
clc
pop
push
push
adcb
in
mov
pop
pushf
dec
fstps
jle
push
movb
add
mov
add
jae
fstp
mov
in
pop
jp
arpl
aad
push
cmpsb
enter
sbb
cmp
add
aam
mov
jbe
cli
jnp
mov
inc
lahf
jecxz
mov
daa
mov
pop
cs
pop
mov
push
xor
and
es
shll
mov
mov
insb
push
inc
ds
jp
push
sub
outsb
rcrb
arpl
mov
ljmp
xchg
jno
mov
jecxz
push
jnp
jae
cmp
outsl
cmpsl
inc
js
mov
dec
ljmp
sub
sub
mov
xor
inc
subl
push
adc
fcoml
mov
lret
clc
sub
loope
test
xor
das
ret
lret
in
lods
mov
push
adc
pop
mov
cmp
mov
mov
loop
and
mov
mov
stos
xchg
lock
mov
addl
fmul
js
cld
or
and
faddl
pop
xor
jg
lahf
sub
ljmp
clc
data16
fs
cmp
addl
fstpt
adc
xchg
mov
or
insl
jecxz
lds
scas
dec
or
or
mov
mov
sbb
out
lods
adc
sti
addr16
shlb
push
inc
xchg
test
fstp
lcall
aad
mov
imul
ret
testl
inc
popa
ret
out
lret
into
insl
xor
sub
mov
pop
cmp
cmp
insl
rclb
xor
inc
ljmp
mov
rclb
push
aaa
inc
pop
inc
aad
mov
loopne
cmp
cwtl
sub
outsb
outsl
and
clc
cmp
push
or
insb
insl
fisttpll
mov
test
inc
enter
jle
es
ficomps
push
ret
jnp
dec
inc
sub
xchg
mov
repz
adc
fstpl
es
imul
faddl
pop
icebp
xchg
dec
cmp
dec
or
ss
popa
lods
leave
push
jae
lds
pop
sbb
decl
es
cwtl
mov
pusha
rorb
lods
in
int
aad
push
imul
test
addr16
lret
sti
loope,pt
add
icebp
movsb
sub
mov
icebp
or
add
stc
xchg
repnz
int3
mov
mov
in
fwait
pop
insl
xchg
dec
push
lds
movsl
iret
adc
out
inc
jge
jb
adc
ss
pushf
out
test
mov
mov
inc
add
dec
in
mov
and
enter
test
add
sub
ja
loope
mov
pop
lret
adc
mov
or
add
mov
in
cld
sub
sub
stc
mov
mov
das
mov
adc
sarl
fstl
loope
pop
inc
inc
or
xchg
jns
pop
out
cmpsb
dec
int3
sarl
cmp
jp
js
fisubrs
jno
adc
mov
jmp
push
mov
jl
and
popa
leave
cmovs
push
push
lods
dec
in
sbb
xchg
addb
mov
inc
sub
mov
dec
pop
pop
popf
xchg
adc
aad
cld
mov
sub
dec
nop
add
bound
dec
mov
add
or
movsb
fcomps
int3
test
insb
fwait
lock
fadds
cmp
add
xor
and
mov
push
mov
mov
xchg
or
dec
adc
dec
and
scas
xchg
mov
jns
pop
ljmp
xchg
xor
cmpl
sub
insl
andb
gs
aam
lret
daa
or
icebp
mov
mov
jnp
repnz
adc
loop
mov
int3
loop
out
mov
jp
cld
mov
dec
mov
pop
xchg
imulb
dec
mov
pop
mov
xor
mov
sbb
push
clc
fnstenv
or
cld
inc
fnsave
or
inc
insl
jbe
dec
push
ss
xchg
mov
jle
xchg
in
ja
loop
shrl
inc
cmp
jb
and
dec
dec
rorb
js
inc
xor
or
shrb
inc
and
sbb
nop
scas
inc
sub
cmp
out
jecxz
push
sub
or
cli
mov
or
xchg
push
inc
and
pushf
and
dec
sbb
push
ret
lcall
bound
ljmp
and
data16
xor
les
mov
pop
imul
mov
int
or
xor
push
hlt
push
mov
cwtl
rcr
mov
and
imull
mov
icebp
pop
adc
lcall
sub
fldcw
ljmp
outsb
fsubrl
adc
and
into
fwait
cmpsl
das
lret
pop
adc
cmp
pop
sbb
insb
sbb
sbb
pop
sub
lahf
inc
xchg
inc
adc
mov
fsub
test
jl
or
cmp
lea
and
insl
call
and
jle
jo
jns
xorb
push
into
lea
fsts
jge
xor
sbb
add
lar
push
push
xchg
addr16
xchg
mov
in
sub
sbb
mov
je
xchg
push
mov
mov
pusha
mov
cmp
or
inc
pop
aaa
popf
lahf
sbb
push
cmpsb
popf
popf
cmpsl
jae
xor
inc
loopne
scas
fs
or
xchg
in
mov
lahf
mov
insb
or
sahf
dec
dec
repz
mov
leave
jo
jl
popf
insl
lret
mov
push
jg
js
insb
or
mov
fidivrl
stc
adc
pop
pop
cmp
lods
imul
xchg
adc
sbb
aam
cmp
xchg
xor
xchg
dec
pop
out
dec
or
sbb
push
mov
stos
jno
mov
inc
lds
mov
cmpsb
jmp
sub
pop
shrb
das
jecxz
mov
pushf
xor
mov
xor
leave
dec
or
and
and
rolb
jmp
nop
sub
jno
dec
popf
cmovne
out
shr
insl
fs
in
xor
sub
sbb
adc
inc
lea
xchg
mov
adc
repz
fisttps
jle
xor
pop
js
repnz
test
iret
push
enter
adc
lahf
je
xor
repnz
cmc
outsl
add
jb
cmc
cmc
xor
sbb
and
es
or
mov
jmp
stc
jl
adc
mov
jg
sahf
dec
dec
fildl
push
fwait
jp
fsubp
pop
mov
test
jmp
cmc
popa
stos
into
sub
sahf
in
das
lret
jle
ficomps
dec
sahf
leave
jg
jmp
dec
adc
push
cmp
sbbl
adc
addr16
pop
dec
js
adc
add
cs
push
push
mov
push
jo
add
test
jns
sbb
xchg
pop
adc
ret
bound
idiv
mov
adc
cld
dec
in
jp
cwtl
ja
mov
mov
repnz
jo
sahf
sbbl
pop
jmp
subb
sbb
das
push
pop
cld
xchg
mov
orb
cltd
dec
enter
mov
push
stc
xchg
dec
inc
xchg
dec
dec
popf
pushf
sub
mov
in
ret
data16
mov
mov
in
and
shlb
sbb
daa
lret
xor
dec
adc
loope
push
loope
or
mov
enter
sbb
jmp
xchg
cmp
insl
jmp
dec
arpl
in
rcrb
lods
jnp
inc
sti
ljmp
mov
pop
pop
cmp
sub
bound
jle
lahf
andl
je
pop
fcmovnu
mov
lods
in
lret
sub
fildl
in
icebp
les
pop
out
clc
lock
orb
sub
shrb
mov
inc
stos
pop
popf
popa
dec
push
movsb
mov
leave
or
repz
push
repnz
pop
mov
loop
popf
loop
jg
imul
insl
or
add
mov
xchg
lahf
dec
jle
or
lcall
test
pop
inc
scas
mov
mov
fisubrs
jmp
cmp
dec
int3
sbb
scas
sbb
fcompl
mov
inc
shll
push
jae
stc
pop
pop
xor
insb
mov
aam
aam
adc
xor
push
in
negb
add
and
sbb
dec
add
xchg
and
or
jmp
adc
jmp
imul
cli
push
aaa
push
or
xor
pushf
ja
popf
cmp
leave
mov
sub
and
shlb
push
iret
out
insl
add
cmp
test
repz
jmp
ss
std
sub
in
mov
fcmovbe
adc
mov
lds
and
xchg
inc
loopne
test
loope
pop
cmp
mov
add
lcall
cmc
aaa
sti
outsb
in
mov
mov
or
hlt
dec
jle
je
inc
loopne
push
mov
daa
xor
jge
mov
push
dec
jb
add
fs
add
mov
mov
mov
fstp
and
mov
add
bound
fistpl
jge
test
and
push
pop
mov
push
loopne
sarl
mov
xor
je
mov
lods
cmc
cltd
push
or
sub
add
adc
fldcw
mov
lock
push
push
sub
fstpt
movl
adc
sahf
adc
ret
pusha
add
sbb
and
mov
push
ss
jp
shll
xor
sub
dec
and
test
mov
adc
mov
cmp
and
ss
out
mov
xchg
idivl
push
mov
ret
dec
push
mov
dec
mov
inc
lea
leave
xor
lock
cmp
mov
mov
sub
sub
std
sub
mov
push
and
pusha
dec
adc
cli
mov
das
mov
pop
mov
mov
movsb
test
lcall
adc
movsb
xchg
xlat
push
pusha
push
mov
xlat
cli
lret
lret
xchg
adc
jnp
jb
gs
cmp
shlb
lcall
or
stc
mov
fidivrs
hlt
mov
mov
mov
fsubrs
inc
sbb
ret
sbb
sbb
add
into
xor
push
add
out
je
inc
das
xchg
int3
movsl
lahf
xor
shlb
cltd
inc
jecxz
push
daa
mov
push
jbe
imul
lahf
ljmp
pop
cmpsl
push
jbe
or
dec
movsl
aam
in
mov
subl
pusha
mov
je
mov
and
pop
testl
dec
add
sbb
push
lret
lret
push
es
mov
jo
mov
sub
jns
push
push
add
mov
mov
imull
dec
xor
mov
mov
mov
aaa
add
je
xor
jne
push
scas
pop
and
cmpl
lods
jno
xor
cmp
dec
push
mov
push
ja
jo
sub
mov
daa
adc
aam
int3
aam
aas
xor
push
jns
cmpsb
fsub
popf
gs
sub
out
mov
mov
xchg
xchg
jae
shll
mov
mov
pusha
subb
shll
sahf
dec
movsl
popa
ret
push
mov
sub
inc
inc
in
int
sbb
cmpsb
lahf
pop
jno
pop
dec
scas
adc
imul
loope
inc
jg
fucom
repz
fs
pop
dec
imul
pop
mov
and
lds
cmp
iret
adcl
sarl
pop
lahf
pop
dec
push
cs
sub
bound
pop
fisubrs
sahf
xchg
pop
push
xchg
stos
mov
lea
lea
inc
mov
outsl
ss
mov
rolb
test
daa
mov
mov
negl
sarl
int3
xchg
in
mov
dec
pop
mov
loopne
push
xor
mov
or
xlat
mov
inc
pop
push
push
mov
mov
lods
arpl
push
mov
mov
mov
cli
push
xor
adc
insb
fnstenv
mov
sub
js
stos
jns
xchg
push
imul
popf
sbb
imul
and
int3
sub
cmpsl
or
mulb
scas
in
jo
xor
lret
scas
push
stos
cmpsl
insl
mov
pop
in
jno
or
jb
xor
push
pop
ror
fwait
push
xchg
test
sbb
sub
divl
inc
lea
inc
sbb
sti
cmp
xchg
xchg
ret
in
mov
lods
xor
add
adc
inc
cmpsb
scas
and
inc
dec
jmp
and
add
pop
sub
and
and
adc
and
pushf
subb
xor
lds
nop
fcompp
jle
test
gs
mov
xchg
scas
icebp
popf
in
bound
xlat
xlat
inc
cmp
rcrl
cmp
lock
sti
mov
stos
cltd
inc
scas
cmc
testl
mov
push
pushf
xchg
dec
inc
cmp
fidivrl
imul
aam
enterw
cwtl
hlt
push
testl
fxch
xor
outsb
jp
fcomps
sbb
bound
cld
stos
and
out
jne
push
negl
fs
mov
jp
pop
clc
data16
fst
sub
inc
imul
data16
sti
mov
fsubrs
cmp
lds
ds
imul
pop
mov
mov
decl
ret
sbb
test
adc
cmp
push
xchg
fmul
cmc
adc
sbb
jne
adc
add
xor
out
mov
cli
cmp
jp
mov
loope
inc
mov
aaa
mov
sub
jns
decl
sub
ja
xchg
mov
dec
shlb
insb
out
push
inc
add
sbb
xchg
mov
int
gs
addr16
ret
aas
push
and
mov
jae
fadd
imul
pop
cmpsb
ljmp
mov
in
adc
out
xchg
test
cmc
scas
inc
fcmovb
out
add
and
xacquire
sbb
orl
repz
xchg
push
js
jno
ret
inc
enter
push
popf
jg
mov
lret
loop
mov
pop
repnz
divl
dec
mov
pop
movsb
and
wrmsr
sbb
push
cwtl
sub
jg
out
sarb
xor
pusha
jmp
xor
cmp
inc
and
in
pop
xlat
loop
mov
jne
call
stos
push
or
pop
or
dec
adc
cmp
cmp
je
jg
xchg
cmpsl
loop
cmp
adc
int3
xchg
cwtl
xor
pushl
call
pop
xlat
sbb
push
rorb
hlt
mov
pusha
adc
aam
mov
nop
sub
push
mov
sbb
sbb
stos
jmp
jp
insb
sub
popa
mov
push
sahf
or
push
adc
cmp
aad
and
dec
loope
mov
pop
sub
insb
add
insl
mov
pushf
or
and
in
call
jecxz
dec
cmp
mov
mov
jbe
ret
hlt
enter
sbb
mov
jle
ficoml
sbb
fnstsw
cmpsb
mov
xchg
ds
outsb
pop
pop
inc
xchg
lock
dec
ret
and
adc
or
les
dec
shll
adcb
sub
sbb
int3
pop
in
lock
mov
add
xor
push
cmpsl
mov
fiaddl
lea
out
pop
into
jns
or
xchg
ds
mov
enter
mov
pusha
sub
push
xchg
sbb
popf
xchg
sti
dec
scas
addr16
sarb
imul
test
jb
cmp
jne
fimull
and
shll
in
mov
faddp
call
icebp
repnz
jne
roll
mov
stc
ficoms
les
pop
push
jae
fdivrl
sahf
push
sub
inc
mov
fs
sbb
and
orl
or
lds
sbb
ret
adc
or
xor
xorb
jge
ss
adc
xchg
outsl
movsb
lcall
fcomps
loope
in
pop
xchg
lods
dec
lret
add
cld
cltd
clc
or
sub
or
fsts
jmp
mov
xchg
divb
shll
sahf
lcall
pop
mov
fisttpll
lods
pop
ljmp
xor
loopne
xlat
cltd
push
test
add
cmp
imul
mov
mov
hlt
insb
add
in
jecxz
roll
rorb
push
pop
add
cmpsl
pop
ja
sbb
adc
and
mov
pop
inc
or
out
push
dec
or
ficomps
and
aaa
inc
hlt
jp
adc
test
jp
jae
xlat
mov
outsb
sub
or
aas
mov
out
mov
lcall
aas
and
ja
mov
sbb
mov
int3
movzwl
fidivrs
xor
xor
in
dec
in
ret
and
sarl
sahf
or
shl
jmp
xor
or
jl
dec
or
sub
cmc
jne
mov
mov
in
imul
mov
add
or
test
dec
test
stc
pop
stos
mov
jne
push
add
jbe
pop
push
pop
push
xor
sbb
push
lock
xor
mov
outsb
negb
inc
xor
in
inc
insl
lock
int3
mov
pop
push
mov
daa
popa
inc
negb
sbb
jnp
clc
jle
out
data16
xchg
sbb
jecxz
fbld
clc
add
add
ret
jnp
iret
add
mov
das
stos
mov
jle
in
adc
aas
stos
mov
adc
arpl
shl
push
movsl
jmp
scas
xchg
dec
je
insb
lods
scas
jmp
push
cli
pusha
push
dec
inc
mov
sub
test
ret
pop
jns
lods
mov
xor
mov
cli
leave
xchg
mov
xchg
pop
sub
sti
andb
pop
and
aaa
cwtl
push
or
push
test
mov
xchg
insb
sti
shll
ja
jnp
imull
in
xchg
and
fcmovnu
sub
mov
in
mov
rclb
add
pop
push
adc
push
inc
pop
sbb
das
lret
cltd
ret
mov
in
pop
rclb
addb
jnp
pop
inc
stos
sbb
cmpsb
pop
dec
or
insb
inc
sbb
jmp
adc
popa
std
sahf
addr16
sarb
xchg
push
hlt
jnp
or
aaa
jmp
lahf
jo
sti
stc
divl
gs
and
out
loopne
push
jge
sub
fwait
pop
jle
clc
lret
fcmovnu
and
sub
mov
aas
pop
fdivrs
repz
cwtl
mov
mov
adc
push
pop
addb
mov
mov
xor
mov
repnz
call
aaa
test
pop
dec
cmc
mull
push
lods
call
jb
mov
ror
out
cmc
inc
divl
cltd
lret
dec
cwtl
jge
vmovhpd
fnstenv
mov
cmpsl
inc
push
loope
sbb
cmp
mov
les
movsl
mov
mov
fbld
movlhps
or
nop
push
sahf
add
rcrb
mov
xchg
imul
testl
out
xor
cmp
clc
jb
mov
daa
sarl
jno
cltd
mov
pop
pop
cwtl
shll
call
dec
out
in
inc
roll
lret
inc
inc
push
push
fs
daa
push
aaa
cmp
mov
sub
insb
mov
cmpsl
mov
mov
add
lock
adc
pop
xor
and
xchg
or
andl
ds
mov
xchg
push
xchg
mov
cltd
jb
test
outsb
mov
movsl
repz
dec
sbb
cld
test
mov
jg
jns
andl
cmp
pop
gs
sbb
negb
push
mov
and
sarl
mov
js
jp
jp
daa
mov
movsb
aas
pusha
mov
or
into
dec
cld
dec
or
lret
push
sbb
jmp
xor
repz
mov
rclb
xchg
pop
and
and
mov
sub
push
in
add
jp
pop
push
test
cli
add
lahf
xor
icebp
xor
xchg
test
cs
cmp
cmp
or
add
jmp
add
push
filds
add
inc
add
stc
mov
out
add
dec
pop
jl
sbb
or
les
mov
inc
stc
pop
inc
push
cs
cmp
loopne
adc
clc
mov
cmp
fnsave
mov
mov
stc
fwait
cltd
sahf
gs
inc
jne
push
clc
cmp
pop
test
push
es
or
imul
xchg
push
jmp
test
add
sbb
mov
inc
xorl
daa
pop
pop
pushw
mov
mov
mov
aam
scas
mov
add
arpl
gs
adc
push
sbb
mov
es
stos
imul
or
call
add
test
jmp
inc
jbe
push
and
push
movsl
jmp
mov
repnz
sbb
stos
adc
sub
jae
sahf
jbe
lock
pushf
das
mov
jecxz
repz
jno
cwtl
push
das
jnp
jns
cmp
pop
imul
mov
clc
cltd
mov
xlat
or
cli
xchg
xlat
stos
cmpsb
divl
add
iret
les
int
not
bound
loope
xor
addr16
inc
rcll
dec
lods
pusha
push
test
mov
dec
and
fiaddl
fistpll
jl
popa
lret
and
out
xchg
and
es
aad
movsb
daa
jp
sub
mov
cwtl
push
jecxz
and
and
sub
bnd
sbb
xchg
jg
lock
cmc
repnz
ret
push
inc
sub
daa
jno
in
or
fstpl
push
lret
aas
jmp
mov
sub
cmpsl
push
call
jae
mov
mov
pop
subl
int3
int
insl
mov
add
lcall
mov
or
jmp
adc
popf
cmp
inc
dec
into
mov
scas
mov
xcrypt-ofb
cmpsl
jmp
repz
or
lods
cli
mov
addr16
add
out
mov
insl
cmp
icebp
out
mov
fdivl
pushf
mov
push
sbb
sbb
mov
sub
xor
sti
xor
fcmove
shll
inc
jg
or
fcoml
jl
stos
mov
inc
sarb
pop
mov
xchg
cmp
insb
shl
mov
xchg
mov
mov
add
out
pop
ds
nop
jecxz
cld
adc
scas
and
hlt
lea
inc
loope
sbb
mov
pusha
inc
sbb
mov
arpl
jmp
icebp
lods
xchg
pusha
or
xchg
mov
in
incl
inc
jno
lcall
or
cmp
imul
nop
fldl
sbb
fwait
push
adc
dec
xorb
cli
sbb
sub
hlt
mov
cwtl
in
pushf
jge
mov
jecxz
das
into
xor
cmc
mov
fimuls
cmp
xchg
or
pop
cwtl
add
jp
lock
xor
rcrl
scas
sbb
mov
outsl
int
add
add
fwait
cmpsb
jg
xor
and
loop
cmc
dec
loopne
sub
mov
adc
mov
in
test
cwtl
pop
dec
lret
or
mov
fnstenv
jecxz
cmp
test
inc
into
and
and
mov
sub
pop
mov
nop
cs
and
and
mov
pusha
ror
jne
sub
push
push
stc
leave
adc
les
push
or
jns
inc
loope
rcrl
imul
pop
sbb
sbb
cmpsl
push
mov
ljmp
data16
dec
rep
push
movsl
cmpsb
xchg
add
mov
rorl
lea
loopne
enter
fistpl
sub
fs
mov
sub
in
or
std
aas
xor
mov
or
pop
shl
push
and
add
repnz
pop
inc
pop
xchg
sub
out
mov
shl
inc
in
add
mov
test
insb
fidivrs
and
cmp
movsb
xchg
dec
mov
mov
imul
xchg
xchg
pushl
mov
gs
or
ss
or
push
enter
mov
inc
mov
pop
loope
jecxz
or
icebp
add
or
jl
mov
insl
cmp
mov
lahf
pop
xlat
push
mov
jno
jno
rcrb
insb
shr
enter
dec
push
inc
das
in
jmp
sahf
mov
movsl
dec
dec
fs
push
test
jl
test
xchg
fdivp
dec
sti
cld
gs
or
cmc
mov
lea
ds
daa
jmp
add
movl
sahf
xchg
addb
movb
loop
inc
jb
push
clc
push
jnp
mov
cli
bound
jno
jmp
stos
testb
ficoml
inc
rorl
sub
or
aad
inc
fldenv
shrl
inc
dec
dec
out
jp
rcll
pop
lock
and
call
scas
inc
or
pop
mov
sbb
lahf
xor
lcall
xchg
push
sbb
gs
in
test
add
faddl
cltd
fildll
cmp
lea
add
or
xor
inc
xor
sub
imul
or
and
jle
adc
mov
pop
pop
mov
sbb
aad
daa
das
fistps
testb
loope
adc
repz
cltd
imul
stos
inc
mov
cmpsb
mov
out
cmp
dec
cmp
shr
dec
movsl
dec
scas
push
dec
add
cmp
mov
stos
jo
pop
fisttpl
or
lret
sbb
cmpsl
fidivl
test
lods
ja
cmpsb
xchg
mov
mov
out
js
mov
add
in
add
mov
movsb
inc
inc
mov
std
lods
lock
mov
jecxz
orl
mov
jg
fcompl
push
push
pushf
or
inc
and
xchg
xor
jo
lods
in
push
fistps
stos
subl
or
sbb
and
cmp
into
dec
adc
jno,pn
pop
pusha
movsb
fidivs
into
flds
imul
pushf
add
add
mov
ds
mov
jne
sub
mov
mov
ret
stos
mov
jae
xor
std
cs
cs
adc
je
fisttpl
sbb
dec
inc
aam
mov
int
mov
testb
xor
mov
shrb
xchg
inc
mov
pop
push
sub
mov
inc
subb
call
out
push
cmc
loop
or
sub
xchg
add
cmp
or
outsl
les
inc
jo
test
adc
js
sti
mov
sbb
push
xchg
mov
ficoms
fiadds
dec
xchg
rcll
std
xchg
out
sub
pop
pop
lods
das
insb
xchg
ljmp
push
mov
in
mov
out
bndldx
imul
pop
lret
sub
fcoms
xchg
cmp
sbb
xor
sbb
jne
pusha
sub
and
negb
adc
stos
ljmp
outsb
or
adc
in
mov
dec
jns
inc
imull
sub
jp
or
xchg
aad
dec
mov
out
popa
daa
lock
add
shlb
stos
cmp
in
mov
fldpi
gs
test
push
aam
cltd
sub
nop
jecxz
lret
xor
popf
movsl
mov
sti
jno
ljmp
mulb
outsl
jle
pop
xor
iret
mov
shrb
sub
xor
popa
jp
movsb
sbb
jnp
sub
inc
jnp
pop
push
idivl
lret
add
repnz
test
xchg
pusha
add
inc
mov
mov
cli
scas
rolb
xor
and
fwait
ja
orb
enter
jmp
aas
or
dec
icebp
jne
clc
hlt
in
scas
jp
xor
mov
mov
push
fsubrp
lahf
divl
outsb
add
stos
aad
out
adc
mov
repnz
and
aas
out
shll
mov
mov
outsb
mov
ds
push
add
arpl
lahf
xchg
frstor
pusha
scas
xchg
jp
mov
inc
aad
push
mov
ret
imul
outsb
addr16
and
sbb
cwtl
or
jmp
sahf
or
jne
mov
or
cmp
aad
rcrb
push
outsb
add
cmp
sbb
cmp
dec
pop
lds
stos
popa
jb
fucomp
out
fisubrl
push
mov
loopne
cmp
jno
jne
push
addr16
imul
mov
dec
scas
test
cmp
sbb
stc
in
lods
loop
mov
lods
outsl
fcoms
inc
loopne
std
gs
mov
push
in
pusha
push
cmc
mov
lret
arpl
jmp
hlt
cmp
pop
or
or
sbb
jmp
je
iret
add
mov
cmp
push
mov
push
shr
test
mov
push
pop
lods
sub
lret
mov
pushw
aam
cmp
ljmp
jge
arpl
sbb
fistps
negl
mov
insl
xor
cmp
push
sub
jecxz
bound
cmp
stos
mov
jge
daa
aaa
adc
jge
cltd
aaa
mov
decb
jl
add
cmpsl
pop
mov
das
popf
xchg
and
xor
push
push
cmpsl
dec
aas
pop
fmul
push
fs
add
ret
repz
rcrb
arpl
mov
adc
rcrb
jae
xor
jecxz
dec
stos
into
std
xor
lods
cmp
inc
and
inc
inc
sub
cmpsl
data16
push
sbb
popa
xor
xchg
ds
push
pop
imulb
cmpsb
pop
into
push
test
mov
xchg
xor
rclb
lods
fildll
fwait
std
mov
mov
mov
aam
push
push
add
sbb
les
ljmp
scas
inc
jg
mov
xchg
mov
xor
and
aaa
pusha
insb
cmpsl
mov
mov
aam
cmc
jg
push
out
push
clc
mov
loope
loop
addr16
add
mov
lret
cmc
stos
mov
mov
dec
test
stc
sti
xor
inc
std
into
mov
aad
ret
jle
ret
lret
xchg
stos
jb
rcll
negl
jns
cmpb
xchg
mov
cli
out
pop
mov
mov
push
push
sbbb
outsl
in
lcall
ja
int3
call
sub
into
mov
cmpsl
add
fcmovnu
mov
inc
push
mov
push
jnp
stc
enter
imul
push
mov
jge
cltd
loopne
lahf
imulb
std
dec
xor
imul
cmp
repnz
push
out
mov
and
mov
cs
idivl
sbb
cmp
push
cmp
jno
xchg
jg
fidivl
loope
push
sbb
lcall
loop
inc
fbstp
cmp
jg
pushf
shr
lock
clc
mov
jecxz
jp
in
fldcw
sub
je
jb
jmp
sub
fs
cli
pop
xchg
mov
jae
pop
mov
and
dec
pop
cmp
jo
cmp
sub
jae,pn
in
pusha
pop
or
dec
hlt
dec
or
rol
pop
mov
das
mov
lods
mov
shll
icebp
cmp
lret
cmp
js
jns
xor
or
push
mov
lods
lret
iret
add
imull
daa
cmp
and
xchg
subb
sbb
xor
jp
lock
mov
stos
jg
and
adc
sbb
push
inc
jmp
fimull
sub
mov
push
cltd
mov
lret
xchg
sbb
outsl
pop
mov
pop
icebp
dec
dec
scas
xchg
out
sub
mov
cmc
jle
cmpsl
out
xor
mov
imul
cwtl
loop
sbb
push
pop
inc
jmp
push
mov
cmp
jmp
adc
cmp
addl
mov
push
clc
inc
mov
mov
sub
xor
into
fimull
add
hlt
loope
popa
aas
adc
cmpsb
lods
arpl
lds
ss
in
enter
int
sub
dec
cmc
popa
sahf
je
push
ljmp
add
add
rol
xchg
fs
push
ret
enter
mov
wbinvd
adc
popf
jns
and
adc
test
xchg
icebp
cwtl
test
fbld
aas
and
insl
pop
sbb
hlt
fstpl
out
popa
push
adc
push
jecxz
cmc
sbbl
push
es
cmpsl
mov
push
ret
insl
or
mov
ljmp
sub
aad
dec
mov
xchg
inc
fimuls
mov
pop
icebp
xchg
int3
jb
sti
je
cmpsb
je
sarl
sbb
mov
je
stos
xor
mov
jmp
js
mov
xor
sub
shll
shrb
lret
push
jb
shll
xlat
pop
pop
adc
stc
push
outsb
mov
daa
push
fmuls
adc
insb
out
mov
fmull
insl
push
clc
outsb
adc
cmc
cmp
sbb
xor
ds
or
repnz
xlat
dec
cmp
push
pop
or
and
scas
stos
or
mov
cmp
test
dec
pop
pop
cmp
sbb
xchg
mov
sbb
dec
sahf
pop
into
shrb
adc
js
les
push
jmp
mov
dec
pop
cmp
jb
mov
add
adc
mov
scas
lret
bnd
jecxz
aad
pop
idivl
mov
lret
testb
adc
jmp
sar
add
or
add
mov
mov
out
sub
xchg
sub
inc
cmc
test
aad
into
adc
lea
lcall
fwait
inc
xor
repz
rep
or
xor
cmp
scas
add
les
in
push
xorb
mov
cwtl
xchg
push
inc
int3
and
in
xchg
out
daa
insl
mov
push
cmpsl
xchg
scas
int
int
jne
lods
loop
mov
xor
xchg
adc
loope
mov
pop
mov
popf
lahf
sbb
mov
push
out
lret
mov
xchg
stos
push
in
cld
aaa
inc
cs
cwtl
iret
sbb
add
inc
cwtl
jp
or
dec
jbe
push
jge
lcall
mov
xchg
testb
cmpsl
sub
mov
push
hlt
sbb
ljmp
dec
fdivs
lea
mov
add
lahf
loope
sub
stc
mov
aam
test
leave
pop
jne
and
dec
adc
cld
pop
mov
pop
movsb
es
fcompl
lea
lcall
nop
add
mov
repz
inc
dec
xchg
fisubrl
mov
imul
adc
icebp
mov
cmp
lods
int3
xor
push
ret
or
call
mov
pop
std
cmp
adc
cmp
das
pusha
mov
orl
cmpsb
insl
or
out
into
ret
inc
dec
lock
jno
mov
or
inc
js
jecxz
daa
sub
xchg
mov
lods
daa
xor
cs
push
add
mov
or
cmp
pop
mov
and
mov
adc
mov
std
mov
or
rcll
dec
shlb
xor
jns
dec
aas
fisttpl
out
icebp
mov
clc
test
les
fdivrl
sbb
divl
test
out
jne
insl
ret
test
xchg
cmpsb
sti
in
or
mov
outsb
cmp
jp
cmp
mov
add
xchg
inc
xor
jo
inc
cmc
into
enter
inc
mov
sub
inc
aad
push
push
in
push
sub
paddusb
pop
and
xchg
repnz
imul
lods
add
jne
xchg
mov
movsl
cmpsl
shl
xor
cmp
iret
cwtl
nop
dec
test
cs
ret
fdivrl
es
inc
mov
xor
iret
inc
rol
cmp
mov
andb
push
xor
xlat
outsb
nop
jae
cmc
mov
inc
mov
sub
cmpsb
ja
adc
enter
fiaddl
fcmovnbe
and
into
insl
pushf
mov
or
jge
mov
icebp
inc
xchg
mov
loopne
shlb
xchg
mov
rolb
jecxz
inc
fcom
sbb
imul
into
mulb
mov
push
push
xlat
push
clc
inc
imul
sub
lea
jle
jne
inc
loope
cmc
pop
fldl
mov
xchg
fildl
test
sbb
loop
aas
push
xlat
jo
jb
xchg
push
inc
push
xchg
pop
xchg
push
dec
pop
data16
push
mov
cmpb
sti
push
jne
hlt
xchg
or
jmp
sub
sub
in
enter
sahf
and
sbb
call
pop
in
inc
lret
jb
mov
or
insl
cwtl
dec
loop
push
jmp
push
jp
loop
inc
mov
imul
sbb
lds
je
jg
xchg
daa
call
lahf
dec
mov
xchg
dec
inc
add
add
xchg
push
shlb
cmp
stos
sub
maxps
dec
repnz
int
cmc
into
mov
insb
in
add
movsb
push
add
aas
imul
sub
mov
sbb
dec
mov
pop
mov
sbb
call
cmp
xchg
ljmp
push
test
fcmovnbe
test
add
jge
xlat
jnp
pop
or
sti
dec
daa
mov
bound
adc
mov
iret
fstl
fcmovu
push
inc
test
nop
jbe
add
add
daa
aam
xchg
and
xlat
lret
je
out
xor
inc
cltd
cmpsb
mov
add
inc
lds
pop
loopne
std
es
inc
cli
jmp
push
fcmovnbe
stos
and
pop
and
fstpl
cmp
jmp
jbe
test
cs
inc
mov
cmp
loop
xchg
xor
adc
xor
loop
jne
into
daa
lret
testb
jns
mov
inc
pop
arpl
adc
lods
jno
sub
adc
push
and
imul
stos
sub
push
pop
sbb
les
aad
scas
roll
mov
aam
and
mov
mov
fmuls
std
mov
lahf
mov
mov
test
je
repnz
mov
sbb
sub
mov
xchg
enter
sbbb
rcll
sti
add
je
push
icebp
enter
movsb
loop
pop
inc
push
andl
jb
movsl
and
mov
scas
jp
mov
ja
outsl
push
xlat
inc
scas
xchg
jne
xchg
xor
outsb
and
adc
stos
push
pushf
pop
mov
nop
out
bound
stc
sbb
orl
jl
jg
sbbl
out
fdivs
add
and
inc
addr16
pop
lea
dec
in
stos
xchg
es
movsb
cmp
out
adcl
cs
cmpsl
mov
push
xchg
xlat
inc
sbb
cld
pop
jge
cli
add
inc
jb
dec
shll
push
mov
xor
aas
add
pushf
jecxz
leave
or
je
xchg
sub
fistpl
pop
sub
pop
sbb
in
fstps
lcall
repnz
outsb
xchg
push
xor
lahf
sub
adcb
xchg
mov
cmp
scas
push
mov
sbbl
dec
call
pop
mov
lret
dec
fidivrs
lods
or
push
or
and
mov
mov
sub
lcall
sub
sti
addl
xor
adc
mov
jnp
dec
dec
incl
fbstp
or
lods
dec
lea
sbb
mov
nop
lcall
pusha
cmpsl
jbe
xor
shll
andb
stc
imul
add
and
pop
lea
lea
call
jecxz
push
pop
xor
lds
loopne
mov
push
bound
sti
arpl
pop
lcall
mov
inc
inc
je
es
jbe
aas
mov
jae
xchg
incl
mov
jl
lock
sarl
lea
pop
clc
xorb
jne
je
test
pop
dec
mov
add
push
mov
bound
ss
mov
mov
movnti
nopl
mov
pop
imul
pop
mov
dec
fs
aam
aam
dec
and
scas
add
ret
mov
lock
cli
jp
xchg
shll
mov
and
and
jle
push
mov
jb
mov
cmpsb
sbb
inc
out
out
daa
pop
repz
test
jmp
sub
or
pusha
add
adc
sbb
cmp
mov
or
push
push
sub
loop
rolb
jmp
lods
test
add
fstl
add
imul
pusha
xchg
sbb
test
sbbl
xchg
add
pop
mov
cwtl
in
xchg
insl
shl
sbb
or
mov
std
add
sbbb
adc
scas
adc
pop
xchg
or
inc
xor
xchg
test
push
sub
mov
mov
push
adc
into
aas
add
sub
stos
sarb
or
pusha
icebp
xchg
adc
gs
mov
and
ljmp
push
sbb
inc
lcall
dec
cmpsl
iret
jecxz
cmp
sub
xor
or
jne
jg
out
ret
lcall
xchg
lock
adc
mov
cltd
jae
shll
in
pop
xor
iret
jne
mov
jle
sahf
int3
adc
sub
fadd
lods
jnp
or
dec
pusha
push
mov
cli
jbe
xchg
clc
daa
out
insl
sbb
jno
push
imul
rolb
negl
xchg
add
loop
aas
mov
jp
lret
arpl
xchg
pop
cmp
lods
fstpt
ds
xchg
outsl
adc
add
jge
mov
push
fcoml
stc
cmp
adc
dec
iret
xor
cmp
mov
push
sbb
mov
daa
in
fimuls
xchg
imul
ds
dec
xor
enter
cmp
push
mov
mov
push
adc
fsubr
insb
fsts
push
ds
lcall
fwait
stc
rcrb
mov
xchg
hlt
mov
fldl
push
ret
gs
mov
pop
mov
shlb
lods
cmp
movsb
popa
dec
lahf
inc
push
sbb
imul
and
cmp
mov
sbb
xor
rolb
cmp
cmc
ljmpw
out
mov
scas
ret
push
push
xorb
xor
jnp
insb
shlb
xor
pop
jge
mov
arpl
pop
xchg
cwtl
or
sarl
mov
xchg
shl
rclb
adc
pushf
fimull
fcmovbe
jnp
insl
mov
outsb
imul
adc
or
cwtl
daa
fcomps
outsb
fists
pop
jl
or
das
fisttpll
sbb
push
mov
mov
scas
fdivp
inc
lahf
dec
xchg
add
repnz
sub
or
aam
jl
jne
out
ret
jae
cwtl
lods
pop
movsb
loopne
filds
ds
inc
jnp
dec
fisttpll
cmp
jecxz
scas
in
dec
sbb
out
divb
fdivs
xchg
ret
clc
orl
nop
pop
repz
or
cmp
xlat
sahf
fisttpll
lods
loop
xchg
cmc
adc
adc
cmp
inc
lret
pop
out
inc
movsl
sub
add
xor
cmp
movsl
ljmp
fdivs
addr16
and
add
dec
jb
jne
bound
in
push
les
jnp
pop
jp
cmp
test
mov
cltd
out
xchg
or
lds
xchg
fstl
jp
adcl
rclb
adc
add
in
scas
leave
outsl
je
or
aad
push
xchg
sti
nop
lods
daa
das
fdivr
adc
xchg
adc
add
out
scas
mov
xchg
and
stos
fcoms
cmp
loopne
fisttpll
jmp
xchg
cwtl
repnz
imul
in
inc
lods
jge
aaa
dec
mov
lret
das
imul
testl
fstpl
out
test
dec
dec
sbb
sbb
lea
jecxz
in
xchg
out
lea
push
cwtl
mov
and
mov
dec
inc
jae
out
popa
fildl
js
lret
sahf
pop
xchg
cwtl
mov
pushf
add
pop
xchg
dec
addr16
aam
cmpsl
rorb
lret
insb
jp
push
push
or
jbe
mov
leave
out
lock
mov
jmp
push
inc
pop
or
lods
jmp
mov
jns
inc
xacquire
dec
leave
insl
cmp
stos
dec
stos
sbb
mov
sub
leave
cwtl
pop
scas
flds
lods
lods
int
mov
mov
lock
adc
pop
fdivrl
mov
ror
mov
push
in
sti
loope
dec
cmpsl
shrb
mov
push
divb
adc
xchg
xor
xor
mov
ljmp
mov
xor
cltd
xchg
icebp
mov
or
jge,pn
iret
add
lds
ret
jb
mov
cli
movsl
adc
cmpb
mov
rcl
cmpb
in
cmp
xchg
push
sti
mov
out
lret
mov
outsb
dec
cmpsb
mov
jg
xor
test
cmpsb
jb
and
mov
gs
decl
sahf
fs
rcl
lods
adc
pusha
mul
mov
jnp
js
mov
dec
sbb
adc
data16
dec
rorb
dec
mov
or
push
push
or
scas
loope
pop
sahf
movsl
pop
jg
push
repz
cmp
mov
mov
insb
xor
jmp
jne
pop
add
mov
mov
imul
dec
cmp
mov
dec
dec
xor
int
lds
addr16
test
inc
sahf
arpl
mov
xchg
lods
lods
xorb
icebp
mov
leave
lods
mov
arpl
cmpsl
sub
xchg
fistl
nop
pop
lret
add
aam
push
fnstenv
cld
fisubrl
and
int
mov
test
add
and
ss
mov
movsl
xor
or
pop
cmp
das
and
mov
sbb
shl
push
leave
aaa
jne
or
xor
xchg
subl
aas
or
mov
sub
sbb
pop
in
and
xchg
mov
sti
cmc
push
pop
repnz
adc
mov
ja
mov
ss
mov
outsl
mov
xchg
and
jnp
push
adcl
mov
cltd
ret
shlb
clc
jnp
hlt
pop
dec
divb
xor
push
mov
ret
data16
dec
int
sbb
inc
addr16
and
cmovno
ret
or
fbld
je
shl
or
pop
popf
rcll
mov
mov
js
jg
or
fucom
decb
or
fsts
dec
faddp
hlt
outsl
fnstsw
xchg
add
add
adc
sti
inc
sub
or
sbb
into
jnp
push
cmpsb
sbb
and
xchg
adc
cmpsl
jl
lods
nop
loop
inc
daa
lock
cmp
push
lock
cld
and
stos
stos
hlt
xor
jle
fiaddl
mov
mov
adc
lcall
mov
rolb
test
cmp
not
jl
movd
movd
sbb
es
fs
pop
movsl
hlt
aad
xchg
aaa
sbb
jnp
dec
add
sbb
pusha
test
adc
cmp
mov
test
std
lea
pop
xor
jp
in
pushf
sbb
mov
inc
jge
mov
sbb
cmp
call
mov
lods
pop
clc
push
rcrb
jmp
dec
test
imul
stc
lods
insb
pop
pop
mov
sub
mov
cmpsb
aas
scas
fists
popa
inc
stc
hlt
mov
cmpb
and
and
xor
outsb
into
cltd
xor
dec
mov
movsb
ffreep
pop
ja
outsl
cmpsb
inc
mov
push
cld
pop
pop
xor
repz
dec
cwtl
sbb
outsb
xor
and
inc
lahf
out
sub
push
mov
mov
mov
rorl
or
inc
lods
fwait
outsb
gs
je
pusha
outsl
cmp
inc
into
in
sub
lock
pop
mov
inc
add
xchg
jg
push
jp,pt
loope
clc
out
jo
pop
cli
mov
test
int
je
pop
loop
insb
xor
add
lock
rolb
add
test
jnp
and
jecxz
ljmp
aaa
sti
adc
mov
fwait
jmp
adc
aas
add
mov
in
stc
les
into
mov
mov
fcomps
cmpsb
in
inc
enter
adcl
out
test
push
inc
int
add
mov
pop
sti
pusha
dec
xchg
push
cmp
insb
mov
mov
mov
xor
pop
in
jb
das
push
xor
add
enter
lret
jg
mov
cmp
fmul
adc
jle
popf
push
pusha
xlat
sub
stc
xor
ss
add
dec
xchg
faddl
mov
dec
cmp
ss
jnp
fldt
mov
pop
mov
lret
xor
jle
mov
inc
xchg
xlat
es
ljmp
inc
and
adc
mov
add
stos
adc
rcll
hlt
inc
arpl
repnz
ss
sahf
jb
add
sbb
or
cmpsb
add
push
jne
sahf
and
repz
cmp
sub
or
mov
arpl
mov
cltd
mov
lret
ret
iret
cmpb
int3
pop
clc
ds
push
dec
pop
andb
std
imul
jae
icebp
repz
inc
adcb
inc
lock
cltd
mov
jmp
sub
or
jle
jmp
arpl
jmp
and
mov
fcompl
jno
mov
inc
jae
dec
push
sarb
push
std
mov
jl
xchg
dec
dec
inc
repnz
inc
xlat
mov
jmp
mov
lods
in
cld
into
or
in
pushf
aaa
push
jae
xlat
pop
in
ds
sarl
enter
jns
outsb
and
in
imul
pushf
add
fiaddl
mov
dec
stos
in
outsb
adc
mull
jmp
mov
insb
lret
inc
mov
sbb
and
sbb
outsl
inc
sub
in
xor
mov
sub
pop
xchg
cmpsb
pop
sbbl
sub
mov
mov
sbb
inc
mov
pop
pop
and
movsb
xchg
mov
cmp
fistl
sub
aad
lods
mov
andl
fimull
aad
xchg
cmp
and
out
cmc
push
pop
or
stos
pop
mov
push
dec
call
int3
outsb
bound
mov
arpl
jno
icebp
xchg
xchg
xchg
push
jp
loope
shrl
out
xor
lcall
pop
jecxz
xchg
mov
iret
jg
aaa
pop
mov
xor
inc
aad
shlb
or
cs
ficompl
xor
fnstsw
sarb
popa
mov
or
pop
repz
dec
xchg
cmp
gs
jbe
fwait
sbb
je,pn
aaa
insb
ret
dec
cmp
push
fs
pop
cli
movsb
div
jo
lock
sarb
gs
movsb
or
fsts
pusha
nop
test
movsb
ficompl
je
pop
sbb
bound
stc
call
adc
arpl
les
std
pop
lret
mov
hlt
mulb
sbb
lret
outsb
mov
sub
dec
gs
or
mov
push
ljmp
sbb
loopne
das
in
mov
cs
fcmovne
out
popa
xorl
push
push
and
mov
sub
adc
fisttps
mov
rclb
lret
add
mov
dec
aad
icebp
sub
or
fdivrs
pop
aad
popf
pop
imul
and
mov
in
lcall
mov
xor
xor
push
mov
jns
lcall
cmp
inc
push
jbe
add
xor
je
pushf
sti
adc
loop
add
filds
aas
mov
push
xchg
jae
mov
xor
sub
xbegin
stos
xor
pop
scas
jl
mov
adc
adc
in
ja
dec
pop
mov
add
fistps
or
add
adc
jo
iret
pop
subb
fmull
clc
mov
add
ljmp
lea
fwait
insl
mov
outsb
gs
lret
mov
ret
int
movsl
cmp
sbb
cmp
cwtl
add
fsubrl
aad
imul
mov
filds
mov
je
lods
daa
std
or
and
cli
add
in
mov
mov
sub
push
inc
ret
cmp
insb
roll
pop
adc
mov
sbb
jge
or
into
push
inc
jne
out
hlt
jno
cmc
pusha
popa
sbb
dec
insb
cwtl
je
imul
mov
es
insb
xchg
lret
add
jecxz
popa
inc
out
add
xchg
rorl
mov
ds
ljmp
mov
inc
lea
loopne
or
sbb
mov
pop
test
xchg
jo
mov
pop
insb
xor
or
int
mov
xor
xchg
add
int3
mov
out
jecxz
dec
test
cwtl
sub
outsl
pop
jmp
sbb
mov
dec
cli
fwait
add
mov
add
ret
pop
inc
inc
adc
sti
stc
xchg
psubusb
add
xchg
mull
mov
dec
xchg
xchg
mov
add
sub
or
pop
mov
pop
mov
dec
dec
and
inc
xchg
mov
ror
mov
mov
rorb
popa
out
sub
in
add
lods
dec
sub
and
dec
rclb
or
push
mov
sub
insb
out
test
dec
fidivl
mov
cmp
sub
jmp
dec
in
or
shll
push
xor
add
jae
pop
in
pop
imull
test
pop
in
xchg
cmp
push
lret
jmp
arpl
inc
mov
xchg
jae
fnstsw
int3
sbb
les
cmp
fnsave
xchg
and
pushf
out
inc
jle
add
jl
les
sahf
ja
or
sub
mov
test
xor
aaa
enter
sbb
aas
mov
jb
clc
cli
adc
adc
ja
mov
out
mov
les
cs
pop
nop
movsb
outsb
jae
fcomp
xor
filds
roll
adc
push
sub
jo
test
out
loopne
test
shrb
popf
xchg
sub
test
jne
dec
insb
sub
lret
or
cmp
xor
inc
gs
sti
data16
and
test
xchg
dec
push
jae
mov
mov
mov
mov
mov
mov
lods
mov
xor
xchg
dec
cmp
iret
push
call
popf
mov
pop
or
pop
orl
xchg
cmp
sbb
sub
mov
bound
push
int
into
je
jle
repnz
out
xor
pop
xchg
es
das
in
mov
jns
xchg
sbbb
or
hlt
aaa
xor
pop
je
xchg
enter
int3
xor
and
adc
sbb
popa
lea
inc
out
arpl
inc
imul
or
test
push
dec
notb
pushl
aam
add
testb
and
lods
xchg
out
xchg
adc
movsl
das
insl
mov
adc
aas
jne
jecxz
jns
shrl
fcomps
push
add
or
rcrb
sub
add
aas
adc
jb
mov
mov
cmp
mov
shll
fisubrs
and
or
cld
fldenv
icebp
pop
mov
mov
xchg
sarb
es
inc
add
in
mov
jl
cld
pop
xchg
push
das
cs
push
or
je
fistpl
les
mov
popa
lret
cmp
xchg
fwait
lahf
sahf
xorb
cmp
and
in
push
cmp
negl
mov
and
cmp
xchg
cltd
xchg
fmul
mov
leave
jmp
push
lahf
aas
cmpsb
pop
dec
push
inc
xor
test
add
outsb
pop
push
call
mov
mov
aam
clc
jbe
in
mov
sbb
pop
mov
inc
das
jle
pushf
mov
cli
lahf
out
cltd
sub
xor
xlat
ljmp
push
xchg
ljmp
int
shufps
xchg
in
sti
adc
lret
adc
bound
loope
sub
out
push
addr16
jne
or
fstpl
sahf
gs
aad
fnstenv
pushf
lock
ret
sub
stos
xchg
les
mov
mov
xlat
rolb
ret
loope
in
push
mov
sbb
mov
fs
cmp
and
add
ficoml
push
mov
cli
cltd
mov
mov
sbb
mov
pop
sub
ret
aad
mov
mov
ds
jne
fmuls
sarl
inc
and
xor
mov
enter
fsubl
mov
mov
gs
mov
adc
aaa
fildl
mov
pushf
push
mov
fsub
aaa
inc
or
arpl
xor
fmuls
mov
outsl
sub
arpl
into
pop
scas
movsb
sti
pop
sub
jg
adc
outsb
les
aas
add
in
push
enter
dec
sbbb
pushf
adc
jo
add
es
sub
jb
in
in
or
jl
out
xlat
or
pop
add
ret
xchg
push
jp
or
fucom
std
mov
or
int
cltd
cltd
icebp
adc
sub
or
jnp
jb
hlt
out
ret
faddl
mov
movsb
adc
cltd
push
arpl
andl
lea
hlt
xlat
das
pop
mov
subl
popa
std
inc
pop
das
pop
xor
jbe
cltd
outsb
js
and
xor
insb
in
and
cwtl
xor
fmuls
out
rcrb
xchg
das
xlat
cwtl
fs
jmp
cmp
mov
cs
cmc
fsubl
xchg
xor
and
mov
jg
imul
cs
cmovbe
mov
and
jbe
hlt
sub
repnz
lret
cmp
idivb
cmp
fsubl
lret
and
pop
fdivrl
cs
sbb
sahf
negl
mov
and
stc
aad
xor
xchg
push
gs
and
jo
pop
test
or
pop
xchg
aam
push
imull
mov
bound
add
shll
push
outsl
fwait
and
fnstsw
push
xor
lret
xchg
fisttpl
jae
dec
aam
cld
inc
int3
jbe
ret
bound
pop
push
mov
sbb
adc
and
inc
insb
mov
fsub
pop
pop
add
pop
test
xlat
stos
das
mov
pop
inc
inc
aad
dec
mov
test
sbb
jp
hlt
pop
jl
pop
ljmp
jbe
subb
int
in
mov
shrb
push
xlat
mov
adc
mov
add
xchg
jbe
push
loope
and
subb
in
in
xchg
add
xchg
cmp
jo
cmpsl
or
fistps
jne
push
pop
push
mov
xchg
arpl
bnd
inc
nop
cli
lods
sub
cmp
ficoml
testb
pop
push
push
cmp
lret
subl
add
pop
mov
mov
push
inc
add
push
test
jle
lods
pop
or
lea
pop
jbe
loop
leave
into
cmp
lret
stos
repz
imul
dec
testb
les
jns
mov
mov
xchg
out
xchg
mov
fcoml
jb
pop
int
mov
shr
push
or
loop
inc
jp
and
and
pop
scas
adc
out
out
aaa
lea
jmp
add
sbb
pop
add
mov
movl
xor
mov
xor
addb
lods
jns
jns
jl
pushf
sub
sar
int3
call
add
lcall
xchg
inc
push
and
or
loop
push
fmul
pop
test
dec
mov
bound
lcall
idivl
inc
add
mov
cmp
call
aaa
cli
leave
add
or
dec
jecxz
jb
adc
pop
mov
dec
fnstsw
mov
jno
movsb
mov
test
daa
xor
es
std
pop
or
jecxz
or
dec
or
mov
js
aad
pop
push
mov
jne
push
subl
push
repz
cli
cmp
ret
or
add
mov
cmp
imul
cltd
sbb
sbb
loop
decb
in
xor
jmp
fsts
sbb
cltd
mov
mov
lea
cmp
fnstsw
pop
aas
leave
dec
cmpsl
xchg
pop
insb
cmp
mov
xor
inc
push
adc
add
dec
leave
ficoms
sbb
sub
mov
and
imul
and
lret
jbe
in
inc
mov
mov
mov
aaa
and
sbb
roll
leave
decl
mov
lahf
mov
inc
xchg
addl
push
js
das
pop
xor
mov
filds
xchg
push
mov
mov
ud2
fucomip
repz
fcomip
mov
out
mov
inc
sarl
aam
sbb
repz
lret
push
inc
push
aam
leave
xor
adc
insb
sub
cmp
clc
lods
lods
xor
fadds
dec
jae
mov
iret
hlt
scas
popa
aas
fadds
sbb
push
jb
xchg
cwtl
and
and
cmpsl
divl
jb
push
arpl
hlt
cmpsb
add
xor
in
pop
push
mov
aas
fldt
es
fisubrs
out
xor
cmpsl
xlat
cmc
cli
test
cmpsb
loope
mov
jl
test
clc
out
xlat
idivb
jnp
pop
dec
sub
jg
scas
mov
dec
sub
inc
pop
leave
cld
mov
adc
adc
mov
dec
jno
sahf
push
and
and
fisubrl
outsb
mov
fsubs
dec
adc
icebp
int3
sahf
jb
repnz
repnz
sbb
mov
cmp
imul
sbb
add
mov
or
inc
arpl
ficoms
repz
xchg
dec
mov
inc
rcr
jecxz
and
test
and
arpl
cmpsl
adc
and
popa
adc
mov
lea
cltd
push
jne
adc
dec
pop
mov
js
jnp
mov
scas
adc
and
not
mov
mov
mov
gs
mov
cmp
ljmp
pop
scas
jb
clc
repnz
adc
aad
mov
or
push
sbb
ret
mov
jle
sbb
ss
adc
addb
add
mov
mull
jns
addb
sbb
mov
loope
addr16
jmp
hlt
pop
push
jp
movsb
sbb
adc
push
mov
mov
ds
jmp
pop
push
xor
push
repnz
iret
and
sahf
leave
pop
pop
cmc
mov
add
arpl
or
inc
sub
out
repz
mov
cs
cmpsl
sbb
aam
add
test
pop
js
repz
in
mov
fsts
or
mov
mov
out
inc
and
mov
add
dec
scas
insl
xlat
ss
xchg
cmp
mov
test
stos
shl
cmp
enter
jbe,pn
xchg
les
pop
jo
push
pop
dec
add
jmp
mov
xchg
and
sub
pop
out
shll
lds
test
das
fidivrs
cmp
sub
dec
addr16
and
jl
jns
or
adc
sti
mov
iret
push
inc
jo
mov
adc
push
pop
jns
pop
lods
lock
push
or
xchg
push
xchg
inc
ss
lods
lods
jnp
inc
test
mov
fstpt
sub
insl
mov
test
pop
jb
out
clc
and
insl
stos
cmpsb
fildl
add
mov
jnp
xor
cmpsl
repz
pop
jo
dec
leave
mov
insl
mov
icebp
pop
hlt
in
shll
lods
mov
mov
mov
mov
push
emms
mov
imul
shrb
sbb
add
mov
data16
sbb
sbb
xchg
dec
jns
xlat
cmpsb
roll
mov
xchg
imul
rclb
ss
cmp
pop
sbb
xor
inc
and
repnz
ret
shll
outsb
adc
repnz
aas
mov
stc
sub
loopne
or
pop
cmp
scas
lods
dec
push
outsb
fisubs
mov
dec
xchg
movsl
sub
cmc
mov
insb
outsb
mov
push
outsl
jge
mov
lcall
ficompl
es
sti
and
adc
inc
fidivrs
dec
adc
stos
scas
shll
mov
mov
hlt
fdivs
lret
stos
out
sti
jo
mov
sub
pop
xchg
dec
les
cmp
call
mov
mov
lahf
repnz
mov
xlat
daa
and
cltd
xchg
xorl
inc
js
push
shrb
add
ret
mov
shrb
stos
imul
sbb
sbb
push
cmp
jg
roll
jecxz
jp
pop
mov
scas
in
shlb
iret
loop
or
dec
adc
dec
mov
push
jae
lock
cmp
or
sub
push
add
mov
sbb
inc
adc
out
inc
dec
inc
addr16
push
jns
xor
out
mov
in
in
mov
mov
popa
xchg
push
cld
pop
fcmovb
sbb
orb
xchg
add
or
jbe
and
add
inc
mov
sub
push
adc
cwtl
gs
sarb
in
sarl
sbb
fdivr
adc
xor
lock
lret
jp
mov
xlat
jo
dec
lahf
lcall
scas
push
incb
push
aad
mov
xor
sbbl
mov
jae
dec
ja
add
xchg
insl
pop
scas
cmpsb
jne
ret
rorl
mov
test
jae
mov
sbb
mov
jns
jns
dec
xor
stos
pusha
xlat
idivb
notb
jbe
dec
test
icebp
adc
pop
xchg
cmpsl
mov
sub
sbb
mov
push
push
mov
xor
adc
and
nop
and
int3
iret
je
sti
test
xchg
jp
inc
mov
enter
test
sub
or
xor
mov
sbb
sbb
inc
pop
je
lahf
nop
mov
fsubl
pop
mov
push
mov
negl
hlt
jge
pop
mov
xchg
out
cmpsl
clc
or
pop
jae
popa
sbb
adc
mov
pop
jo
lock
repz
adc
mov
pop
fcoml
adc
das
lret
xor
paddsw
shrl
jb
cmpsl
pop
mov
jg
out
jno
xor
adc
mov
outsl
addr16
in
loopne
adc
push
add
mov
scas
aaa
push
inc
daa
lahf
sahf
subb
mov
outsl
jg
sub
stos
add
shr
and
push
nop
mov
mov
in
movsb
mov
cmp
adc
dec
dec
inc
pop
cmp
fstl
jge
scas
fsubrl
push
cmp
xchg
inc
jb
call
bound
dec
and
cwtl
aaa
mov
loop
movsl
out
clc
pop
decb
push
xlat
int
gs
inc
in
inc
mov
add
xchg
in
stos
add
jg
pmullw
push
cmp
adc
pop
daa
adc
fnstcw
ret
push
adc
jns
jne
cmp
mov
mov
cmpsl
dec
mov
call
leave
in
adc
imul
or
fs
std
movsl
mov
push
addr16
sub
fs
pop
jo
push
jge
xchg
pop
loope
pop
mov
mov
jbe
addl
dec
lock
cmp
sbb
sbb
sbb
cltd
push
repz
xchg
xor
xchg
sub
int
mov
cmc
sti
mov
mov
shl
ficomps
push
mov
mov
imul
jle
mov
sub
dec
fs
scas
test
xor
repz
xlat
mov
fisubl
shl
cltd
subb
mov
push
iret
rolb
sbb
push
in
imul
sub
arpl
sbb
xchg
xchg
stos
mov
jp
pushw
lea
icebp
in
subb
lock
test
push
push
mov
rorb
adc
sbb
loope
lret
mov
nop
adc
shrl
ret
les
push
sub
sahf
scas
bound
adc
sbb
outsl
fdivrp
adc
sbb
sbbl
call
push
or
adc
ds
lock
pop
adcb
sarb
mov
lea
out
decb
pusha
imul
fwait
inc
push
fnsave
inc
inc
lahf
ljmp
or
fdivs
push
fmuls
and
jmp
std
push
cli
loop
ret
cli
out
mov
and
in
jle
imul
push
jp
jns
mov
out
enter
dec
into
adc
sub
into
or
pop
popa
jns
or
pop
outsb
arpl
cmp
push
fidivl
lea
scas
inc
and
and
repnz
lret
iret
imul
adc
testb
jnp
gs
movsb
fucom
mov
or
pushf
xchg
and
js
xor
mov
jne
mov
sub
pop
in
imul
pop
ljmp
je
ja
sub
push
xor
movsl
negb
xchg
movl
xor
jbe
iret
fistps
scas
xchg
cld
lock
insb
xor
pop
inc
iret
lcall
in
sti
xchg
jge
pop
and
mov
sub
xchg
es
xchg
xor
aam
sbb
notb
in
cwtl
insl
cli
sti
out
and
hlt
xchg
or
mov
imul
cmpsb
xchg
fdivl
or
pushf
adc
clc
xchg
loopne
pop
sub
enter
aad
mov
mov
sbb
push
out
rorb
inc
adc
xor
sub
rcrb
push
test
iret
dec
jg
and
rcll
inc
iret
clc
jb
and
imul
decb
data16
jno
push
pop
lds
pop
mov
pop
pop
nop
and
sbb
movsl
sub
test
cld
mov
fbstp
mov
push
dec
sti
cs
dec
push
pop
sbb
inc
popa
in
pop
xor
sub
fnstsw
rclb
mov
pop
pop
data16
aas
in
cmp
cs
in
push
inc
sti
je
or
lock
jne,pt
mov
jae
in
jge
out
mov
repnz
sub
hlt
or
cwtl
xchg
cli
mov
and
shl
insl
xchg
xchg
scas
sbb
pushf
outsb
loope
cmp
xchg
push
sub
bound
xchg
adc
ret
lods
lea
rorb
repnz
insb
sub
xchg
or
sub
jl
add
mov
pop
mov
stc
dec
xor
out
push
adc
xor
pop
sti
jne
js
sbb
outsb
js
mov
adc
clc
ljmp
lds
icebp
cmp
int3
clc
adc
cmp
cli
add
daa
jns
sbb
pop
pop
orl
push
leave
push
mov
mov
add
cmc
gs
dec
and
fbld
imulb
dec
rclb
jnp
scas
cmp
pop
xchg
mov
inc
push
ljmp
cs
dec
fsub
or
adc
inc
xchg
jne
adc
in
adc
cwtl
pop
mov
pop
outsl
mov
out
out
push
aaa
imul
lods
mov
cmp
push
mov
jecxz
lcall
in
stos
lret
push
rcrl
mov
loop
mov
mov
ffree
enter
es
mov
cld
jmp
fnstenv
mov
inc
cli
ret
lahf
xor
adc
out
or
mov
fsts
das
ds
sbb
mov
stos
ds
es
notl
iret
lds
sbb
outsl
push
adc
shlb
enter
insb
xor
pop
sbb
pushf
mov
push
xchg
fs
pushf
xorl
call
or
gs
int
cmp
add
stc
scas
sbb
xchg
mov
inc
xor
xor
or
and
push
fwait
adc
icebp
or
pop
sub
jbe
gs
pop
sub
shl
rclb
dec
in
das
mov
mov
loopne
add
les
fs
lock
adc
mov
vpsraw
loope
lahf
sbb
xchg
cmpsb
std
sahf
es
ret
adc
cld
pop
jmp
push
gs
pop
mov
shll
cmc
ret
cli
pop
sub
repz
in
sbb
xchg
mov
xor
addr16
cli
inc
ljmp
add
lods
test
mov
sbbl
inc
jle
pop
rolb
pop
mov
cmpsb
and
sub
jb
xchg
xchg
mov
adc
sbb
mov
and
sar
sub
xor
mov
adc
outsb
into
imul
sbb
cmp
push
and
sarb
xlat
jb
jb
fs
cwtl
xlat
mov
push
mov
je
xor
push
test
aaa
adc
xchg
adc
mov
sbb
div
cmp
mov
sub
mov
mov
fsubrl
aam
and
outsl
push
les
testl
and
or
sub
sbb
mov
mov
sbb
mov
jmp
adc
int
sbb
repnz
in
mov
sbb
aad
imul
jmp
popa
add
mov
aam
cmp
mov
sub
mov
and
iret
or
xchg
adc
test
xchg
orb
lret
pop
dec
dec
mov
sub
clc
pop
push
test
inc
iret
mov
lea
leave
pop
sti
mov
xchg
push
loope
bound
mov
push
pop
mov
xchg
jae
ds
in
adc
out
jmp
jbe
push
jge
sti
inc
jno
sti
test
in
mov
sub
mov
std
xchg
dec
insl
dec
cmpsb
pusha
or
xor
bsr
pop
add
and
xor
insb
adc
mov
lret
or
dec
gs
mov
scas
jl
add
fsts
hlt
repnz
rol
xor
mov
pop
push
testb
arpl
dec
mov
add
clc
mov
mov
cmp
dec
fistpll
cli
aaa
jae
mov
jne
dec
je
ret
fists
and
pop
or
push
test
mov
jnp
push
addr16
mov
sub
dec
adc
sbb
adc
add
shlb
stos
fcoms
adc
add
fbstp
movsl
cmp
enter
xor
sbb
xchg
popa
xchg
insb
adc
ja
in
fistpl
out
jg
mov
cltd
sub
sbb
xchg
scas
mulb
xorb
jo
or
lret
insl
not
int
int3
push
xchg
test
push
lods
ret
lods
in
inc
in
push
mov
mulb
mov
jmp
pop
nop
test
int
sbb
pushf
shll
push
iret
jbe
repnz
pusha
jg
loop
pop
push
inc
outsb
cmp
loop
mov
lahf
lret
mov
rorl
inc
pop
cmc
mov
jbe
lock
mov
push
inc
dec
ret
cmp
mov
lret
jp
fbstp
in
sub
xchg
inc
push
dec
push
cmp
loopne
test
mov
mov
mov
mov
cmpsl
cli
fdivs
xchg
xor
iret
mov
je
int
sahf
iret
mov
push
lret
dec
jns,pn
cmp
push
dec
inc
iret
inc
push
add
jno
pushf
nop
add
push
mov
jb
add
loop
jnp
mov
movsl
lahf
fsubrs
adc
dec
call
test
push
jmp
add
jmp
cmp
pop
cli
xor
lret
aaa
cmp
cmp
jmp
les
sbb
aam
jbe
inc
iret
bound
jnp
sub
xor
push
out
repz
int
in
add
movsb
cmp
mov
mov
xchg
clc
jnp
imul
jo
idivb
adc
jb
test
jne
and
fadds
movsl
loop
and
jl
pusha
iret
and
call
pop
arpl
les
dec
stos
pop
mov
sbb
cmp
in
ret
and
addr16
mov
popl
mov
push
mov
int3
lahf
mov
repz
popf
rorl
jle
int
add
fistpl
inc
rolb
ss
push
mov
scas
mov
dec
mov
test
or
pop
sub
orl
imul
lahf
and
pop
xchg
push
pop
sub
add
and
or
jae
daa
inc
inc
fmuls
ds
das
mov
push
ret
aam
dec
ret
sbb
adc
mov
sbb
subb
ja
lea
pop
jns
xchg
cli
scas
enter
xchg
pop
pushaw
xor
sbb
inc
mov
pop
sub
pushf
cltd
mov
call
jmp
mov
mov
sbb
inc
mov
mov
inc
jo
push
push
pop
cmpsl
or
lahf
out
decl
stos
mov
cmpsl
xor
pop
fnstcw
push
out
pop
or
fs
fldt
and
mov
add
repz
in
es
push
stc
stos
cmpb
sub
fcoms
sbb
aaa
push
lret
cmc
lret
adc
rol
pop
mov
inc
shll
adc
mov
loope
jecxz
sbb
cmpsl
hlt
mov
aad
jbe,pn
lahf
fmuls
fistl
sarb
hlt
imul
imul
sarb
jbe
rorb
clc
insb
dec
jecxz
sbb
stos
xor
pop
insl
mov
hlt
std
cmpsl
es
sub
ljmp
xchg
dec
rcll
popa
test
pop
cmpb
adc
lock
mov
fadds
loopne
mov
out
jge
mov
xchg
and
ret
fldenv
call
stc
mov
filds
shrb
and
xor
lahf
les
jl
stos
lahf
adcl
dec
frstor
sahf
jl
sahf
hlt
jp
scas
xor
rorl
xor
jp
mov
or
fcomps
lahf
fwait
arpl
push
pop
xchg
arpl
dec
mov
bound
lcall
xlat
repnz
and
shrb
pop
out
jb
in
pop
inc
xchg
icebp
ljmp
outsl
call
fbld
inc
stos
mov
test
jge
mov
popa
lcall
js
mov
mov
insl
daa
dec
sub
sub
jne
adc
dec
shrl
push
xchg
jle
dec
shrb
or
push
jg
negb
test
mov
xchg
jne
xchg
mull
aas
jns
or
nop
dec
add
sub
and
jo
inc
lods
movsb
push
pop
and
jl
push
das
jge
test
pop
ret
popa
rol
xorb
aas
cmp
xchg
pop
mov
adc
mov
lods
in
call
ret
jecxz
out
mov
popa
pop
addr16
add
mov
xchg
pop
xor
jg
xchg
mov
lods
cmpsb
ja
mov
push
sub
or
mov
sti
mov
in
xchg
push
jae
rcl
cmpsl
add
fmull
dec
jp
aad
test
dec
rcll
sbb
popf
ss
and
adc
fildll
jno
dec
sti
call
sbb
pop
dec
inc
cmp
inc
out
adcl
cli
mov
das
shrl
and
pop
addr16
je
lret
add
aas
and
insb
nop
lods
push
shr
pop
cwtl
aaa
xchg
sbb
sarl
out
dec
dec
fstps
pop
lea
mov
ret
mov
imul
jae
fcmovnu
js
xchg
mov
push
repnz
ja
ss
sub
push
rcll
and
inc
mov
cmp
int
lock
cmp
cld
fsub
sbb
adc
sub
daa
adc
adc
loopne
rcl
mov
pushf
sbb
iret
push
loop
xchg
cmp
in
cmc
and
lahf
test
iret
dec
jae
push
stos
jmp
mov
add
sar
ret
cmp
aad
call
loope
notl
inc
sub
jg
out
divb
int
xor
jno
inc
ret
pushf
shrl
pop
mov
std
sbb
pop
out
rolb
mov
or
int
insb
call
sub
in
ds
mov
cmp
cmp
or
loopne
rcll
jmp
or
fmuls
cmp
ficoms
dec
in
bnd
sahf
outsb
data16
sub
fdivrp
and
and
lock
and
popl
call
test
aas
cmp
sub
add
push
inc
iret
hlt
cmpb
jecxz,pn
xorl
movsb
mov
insb
fildll
rcrl
mov
mov
xchg
insb
cltd
ja
aam
pusha
aaa
dec
mov
mov
fldenv
xchg
adc
icebp
mov
sbb
xor
sub
add
add
xor
cmp
movl
lret
lret
jbe
mov
push
pop
into
fucomi
bound
call
ss
jp
sub
sbbb
xor
cmp
adc
dec
ja
dec
add
ja
icebp
adc
sub
mov
push
pop
icebp
int3
push
fwait
cmp
xchg
sbb
ss
xchg
ret
fcomip
movb
stos
jno
lods
repnz
shrl
jg
push
test
sub
and
xchg
push
mov
xchg
adc
mulb
sub
test
mov
or
jle
adc
lcall
and
stc
sti
dec
scas
sbb
xor
movsb
adc
or
iret
jne,pt
aaa
stos
xchg
fildll
mov
or
iret
mov
xor
sbb
or
into
fcmovnbe
insb
mov
incl
faddl
ds
cmp
cmp
mov
sbb
xlat
mov
in
mov
pop
xchg
hlt
inc
cltd
push
mov
adc
jb
cld
pushf
popf
popa
cwtl
loopne
mov
call
sub
cld
dec
fcoms
xor
popl
test
lea
incl
adc
fcoms
les
mov
gs
or
cwtl
xchg
dec
pop
inc
ret
out
dec
aad
pop
mov
in
stc
icebp
xchg
clc
insl
jmp
test
insb
pushf
hlt
test
shrl
fstps
jne
pop
mov
or
push
popf
push
and
imulb
cs
xlat
add
and
or
iret
and
jmp
sbb
in
jns
ja
repz
sbb
enter
aam
inc
jp
push
clc
jnp
lret
shlb
sahf
loope
enter
cmp
test
js
stos
dec
or
pushf
cmp
imul
fs
lahf
fucomi
cmc
out
sub
sbb
incl
pop
sbb
adc
outsl
lret
mov
mov
test
jp
sub
xchg
xchg
sub
out
dec
sar
xchg
sbbb
rcrb
ss
dec
mov
xor
aaa
cltd
sarl
adc
mov
andb
cmp
mov
lcall
mov
repnz
enter
test
popa
xchg
out
cwtl
push
cwtl
mov
mov
mov
stc
cmp
daa
icebp
call
mov
inc
mov
pop
daa
out
scas
cmp
or
nop
repz
or
aaa
flds
dec
fcmove
cltd
icebp
xchg
sahf
inc
mov
adc
add
movsl
lods
sub
hlt
mov
stos
ret
dec
sub
sub
sbb
icebp
adc
mov
aam
and
cmp
outsb
sub
out
or
cmpsl
xor
fildll
mov
jmp
mov
nop
int
mov
jge
sar
arpl
out
cs
dec
jns
das
mov
subl
repnz
pop
mov
jae
outsl
call
das
inc
push
call
or
jne
adc
icebp
jl
ss
push
out
out
frndint
sbb
inc
pop
cmc
adc
adc
mov
mov
ds
addr16
lods
sub
and
lret
stc
nop
jo
pop
cli
sbb
push
movsl
es
jne
es
jle
les
repz
xchg
or
jb
fwait
pop
push
sub
sahf
ret
imulb
xchg
ds
or
arpl
mov
push
mov
sbb
call
sub
or
test
hlt
in
push
xchg
cmp
aas
icebp
das
mov
lds
jg
xor
inc
js
movsl
mov
xchg
lret
lret
xor
in
pop
sub
xlat
lret
mov
and
fmull
lods
adc
arpl
add
sbb
scas
lock
add
fwait
pop
aas
lahf
pop
repz
xchg
mov
jae
cmp
int
inc
push
mov
add
fldenv
push
xchg
into
mov
in
loopne
xor
jne
jle
push
fsubrs
outsl
mov
jns
fcoml
repz
push
add
or
sub
jbe
add
cld
dec
add
daa
les
int
testl
and
sbb
xchg
sbb
pop
adc
mov
push
xor
mov
out
movsl
dec
out
js
shll
sub
push
mov
lret
sub
lods
arpl
cs
mov
cmp
cmp
cli
shll
push
enter
pop
and
cli
cmp
scas
outsl
xchg
jnp
scas
in
jbe
scas
jp
adc
rclb
rclb
bound
adc
sbb
arpl
lahf
popf
loope
jp
or
aad
dec
xlat
cs
popf
push
in
and
out
ror
cs
sbb
std
iret
mov
cmp
add
aas
mov
ljmp
ss
jae
dec
lret
icebp
into
push
in
cmc
push
es
dec
inc
insb
mov
cmp
mov
arpl
js
add
dec
jns
push
sub
or
jl
dec
orb
lods
fstpl
scas
xchg
dec
xor
in
mov
fwait
scas
xorl
bound
pop
cmp
mov
sbb
inc
int3
inc
ret
ret
dec
dec
dec
bound
fdivs
mov
xor
movb
inc
idiv
inc
sbbb
pop
add
test
add
push
pop
xor
push
sar
adc
adc
cmp
ret
es
test
sbb
in
xor
mov
xor
mov
cmp
out
std
mov
mov
push
push
jbe
push
roll
or
insb
test
cmpsl
adc
jecxz
push
rep
in
or
fldlg2
mov
jb
icebp
ss
add
cmp
stos
cmove
mov
jnp
out
fistl
in
repz
int3
mov
call
in
leave
adc
add
stos
cltd
in
sahf
cmpsb
js
adc
js
jmp
test
ss
xorb
sbb
mov
mov
ret
push
xor
add
xchg
cmpsb
mov
outsl
outsb
push
mov
lea
lea
pop
sbb
lock
lret
jno
mov
xchg
dec
dec
ljmp
in
iret
cmpsb
pusha
cltd
adc
mov
cmp
mov
cld
push
rcrb
ret
sub
lcall
shlb
pop
les
mov
maskmovq
mov
sub
push
fs
leave
out
out
loopne
push
js
pop
or
out
mov
or
and
xor
mov
mov
repnz
mov
mov
repz
pop
aaa
subl
nop
xor
fdivs
sbb
push
sahf
push
cmpsb
inc
ret
dec
in
out
mov
inc
mov
or
sub
cmp
dec
fldcw
jno
ljmp
adc
ja
ret
inc
mov
mov
push
add
dec
les
sub
jo
in
xchg
dec
push
imull
lcall
or
jne
jl
lock
in
inc
mov
and
cmp
inc
aaa
repz
lcall
insl
cmp
jg
stos
dec
mov
pop
orl
cmpsl
cmpsl
and
inc
push
push
mov
mov
das
cmp
mov
popa
mov
cmc
inc
push
enter
push
sub
loop
inc
jmp
jo
stos
sub
outsb
mov
outsb
and
repnz
out
je
xor
fsts
mov
sti
in
mov
rclb
clc
nop
sub
jb
and
push
xchg
in
loope
shrb
jae
sub
and
psrlq
push
cmp
sbb
and
fdivs
dec
jle
xchg
ds
cmp
pop
mov
mov
int3
inc
inc
roll
insl
jnp
adc
aad
or
xor
xlat
shr
aam
int3
or
dec
mov
pop
cmpsl
rcl
mov
enter
lods
adc
jb
clc
push
pop
inc
ret
insl
mov
mov
int3
daa
xorb
push
div
hlt
stos
push
dec
cmp
loop
cmp
mov
jecxz
dec
fiaddl
sar
adc
xor
and
sbb
adc
rcr
adc
call
dec
and
imul
ljmp
dec
mov
out
and
xor
add
add
add
or
mov
push
pop
orb
add
in
jecxz
sti
xchg
fwait
adc
push
out
mov
sub
loope
fcmovnbe
scas
add
ficomps
sbb
stc
mov
nop
fcmovu
push
lea
cmc
xchg
js
lahf
ret
bound
out
dec
mov
mov
and
fwait
out
add
pop
insl
test
dec
or
or
jbe
lcall
andb
xchg
push
insl
and
cwtl
sub
movsl
push
dec
push
sub
pop
gs
in
aam
aam
imul
push
jecxz
pop
imul
fwait
and
and
hlt
hlt
inc
lds
mov
xchg
inc
aad
ljmp
pop
cmpl
data16
out
movsl
rclb
adc
adc
pop
mov
lahf
sbb
push
mov
insl
js
ss
gs
cli
test
cmp
cmc
fadds
mov
ficoms
xor
or
sti
cmpsl
lcall
pop
leave
sahf
les
dec
aaa
fs
in
or
loope
push
jp
xchg
int3
call
push
shl
out
mov
into
out
push
negl
pop
or
lods
sbb
rcrl
stos
outsl
jns
pop
inc
pusha
pop
push
dec
mov
fildl
jnp
mov
cmovbe
or
ret
jns
mov
add
int
xchg
out
fnsave
insb
lods
xchg
movsb
push
loop
test
sbb
cmp
repnz
leave
cmp
sub
pop
xor
add
xchg
sub
repnz
dec
xor
or
lock
mov
fdivl
xchg
shr
popf
popa
dec
pusha
cmp
movsl
cmc
xlat
push
sbb
xlat
icebp
ds
mov
cwtl
imul
mov
stos
push
xchg
arpl
dec
xor
out
dec
mov
aaa
pop
mov
mov
mov
and
push
xlat
push
lock
daa
jecxz
cs
test
into
sub
sub
sti
ss
xchg
xchg
test
out
inc
mov
daa
sbb
jmp
pushf
push
jl
fmuls
jnp
mov
data16
outsb
dec
shl
repz
cmp
mov
mov
je
push
mov
inc
push
xchg
loope
cli
fdivr
push
aaa
mov
out
fldenv
rcr
rcrb
and
mov
dec
dec
mov
xor
xor
mov
rcrl
int
add
pop
clc
add
add
insl
dec
lcall
push
pop
mov
stc
rcll
aad
cmp
jle
dec
stos
add
rolb
sub
xchg
push
mov
lahf
popa
je
jnp
push
push
push
outsl
mov
js
ja
das
push
lods
loopne
sub
xor
inc
jle
dec
fistpll
leave
std
push
xchg
bound
repz
pusha
or
jbe
jae
xchg
dec
inc
cmp
or
loopne
dec
dec
mov
in
pop
inc
adc
mov
arpl
cli
std
ja
stos
test
fnstenv
fxtract
add
scas
add
int
lock
mov
push
call
ds
jge
mov
insl
sub
inc
in
mov
cld
mov
test
cmp
and
sub
inc
fxch
subl
repnz
lret
pop
pop
inc
mov
adc
dec
xor
adc
xor
xchg
orl
inc
dec
push
or
mov
loop
in
stc
lds
in
fiaddl
xor
mov
repnz
push
decb
dec
pop
outsl
daa
aas
jbe
insb
test
dec
and
add
xchg
dec
jbe
sub
ljmp
xchg
jp
mov
aad
inc
js
jg
outsb
imul
mov
sub
imul
mov
ja
mov
pop
mov
push
push
divb
dec
push
adc
adc
dec
pop
sub
lods
iret
sbb
dec
push
sub
cmp
imulb
mov
lea
pop
mov
jb
push
sbb
pop
addr16
shll
pop
rcl
mov
lds
push
fstl
xor
cld
mov
xorl
mov
push
scas
push
mov
jecxz
push
and
lods
and
xor
repz
sbb
jle
mov
or
cmp
ret
test
into
mov
loope
arpl
mov
xchg
or
outsl
or
pop
inc
xchg
push
sbb
les
iret
test
insl
ja
in
mov
testb
sti
fsubr
sbb
scas
je
icebp
jbe
xlat
jns
push
icebp
xor
xchg
sti
int3
add
int
push
popa
xchg
or
mov
adc
ja
scas
loope
xchg
xor
lds
mov
mov
cmp
xor
rclb
sbb
sbb
imul
test
push
inc
cmpsl
es
pop
pop
loopne
mov
push
pop
imul
call
xchg
loope
or
xor
fstpl
xchg
mov
push
scas
test
into
add
scas
aam
sti
dec
xchg
rcr
out
and
adc
test
fisubrs
cmpsl
sbb
bound
hlt
jae
xor
jmp
dec
xchg
js
push
mov
sub
ja
pop
in
leave
sub
xchg
test
sahf
rcr
faddl
aam
sbb
sahf
aam
pushf
inc
icebp
andl
lds
popa
inc
xchg
repz
push
dec
fwait
push
aaa
xchg
outsb
test
aaa
or
lock
adc
cmc
stos
sbb
push
mov
enter
loopne
out
ret
test
pop
fsubrl
jae
ss
cmp
dec
pop
inc
div
and
push
xor
enter
cli
pop
mov
nop
popa
xchg
notb
mov
das
fabs
addr16
das
sub
pop
mov
fucomip
adc
mov
lods
fisubl
fimull
mov
movsb
sbb
inc
int
rcrl
fldl
popf
xor
std
jp
add
inc
call
mov
mov
mov
push
les
scas
stc
cli
sub
push
push
insl
mov
add
gs
out
mov
push
test
pop
das
jne
movsb
pop
xchg
xor
or
ret
sbb
imul
jmp
jnp
jle
mov
and
test
ja
ficomps
xchg
cli
add
jno
sub
push
pop
lea
adc
jae
loope
dec
dec
pop
mov
ds
adc
mov
cli
xchg
and
mov
jb
ljmp
pop
out
xlat
pop
cltd
and
mov
xchg
dec
and
repnz
add
mov
push
cmp
xor
mov
dec
adc
mov
jmp
lret
mov
adc
shrb
jns
add
pushf
jbe
fstpl
cltd
popf
xorl
inc
and
dec
scas
cmpsb
vzeroupper
aad
xchg
mov
push
ret
xchg
pushl
or
ja
subl
shlb
and
push
imul
cmc
cli
fcoms
aam
rorb
xchg
sbb
hlt
movsl
into
sub
sub
shl
jb
nop
rol
popa
je
mov
pop
data16
pop
ja,pt
aaa
add
jns
mov
mov
mov
push
jecxz
jecxz
movsb
jecxz
shr
push
lret
mov
mov
sub
cwtl
jl
dec
pop
add
or
aad
stos
mov
cmpsl
ret
std
enter
pop
jl
push
bnd
sbb
int
cmc
test
repz
iret
push
sbb
or
test
mov
push
dec
adc
add
jo
out
mov
inc
roll
dec
push
mov
aas
out
std
fdivrl
std
jne
icebp
int
xchg
dec
jae
insb
ja
loopne
mov
lcall
mov
xchg
ret
fcoms
out
and
sbb
and
es
mov
mov
in
aaa
pop
and
sbb
dec
popa
shrl
and
ds
je
pop
mov
inc
mov
inc
adc
js
lods
outsl
add
sub
mov
popf
and
cmpsl
in
xchg
jge
fisttpll
cmp
stos
mov
cmpl
jge
shrl
icebp
sub
out
or
push
lret
sub
xchg
mov
pushf
pop
xor
push
adc
mov
or
call
aaa
sub
arpl
jbe
fldenv
xchg
shl
push
in
xchg
addr16
test
cmpsl
cwtl
mov
test
or
xorl
push
cmp
into
jb
les
jge
mov
movsl
scas
xor
push
jmp
das
mov
sbb
mov
pmullw
test
sti
ret
sub
cld
lock
cmp
mov
sbbl
add
imul
pop
inc
pop
adc
jns
add
out
push
add
aas
cmp
push
or
ret
insl
inc
xchg
shlb
cmpl
andl
ret
out
mov
mov
in
inc
push
aas
ds
mov
ror
jg
xor
cmp
cmp
xchg
test
rcrl
mov
decl
jmp
xlat
popa
loop
dec
adc
iret
push
lret
cmpsb
mov
ret
ja
aad
push
xchg
data16
sub
and
cmc
xchg
cmp
out
outsl
or
out
insl
int
dec
mov
sub
outsb
shl
das
push
fldl
inc
bound
xchg
test
lcall
push
pop
sub
xor
daa
xchg
and
xor
push
je
sbb
xlat
mov
mov
cltd
movb
jb
adc
fadds
sbb
inc
mov
xlat
sbb
xchg
add
sbb
cmpsb
sub
push
pushf
lret
ja
add
mov
cmp
jecxz
iret
sbb
xor
sti
out
call
test
je
pushf
xor
ss
stc
push
mov
mov
jl
xlat
pop
js
addr16
xchg
in
lods
xor
pop
or
adc
test
sub
outsb
sbb
sbb
xchg
pop
cli
push
repz
scas
cmp
mov
popa
shl
jg
xchg
mov
ljmp
jp
js
dec
jge
jecxz
ffree
jg
js
jno
mov
xlat
xorl
push
jg
imul
inc
xchg
loop
bound
mov
fstpl
nop
cli
and
pop
cwtl
and
repz
inc
and
mov
addr16
pusha
jmp
xor
cltd
or
cmp
inc
adc
sub
pop
sbb
lock
int3
aaa
scas
lret
inc
out
dec
sahf
pop
push
insb
inc
fdivs
rcrb
jmp
xchg
std
lahf
mulb
cltd
cld
addb
cli
pop
aaa
mov
movsb
adc
add
mov
cmc
push
mov
fcoms
lods
xor
push
mov
out
mov
mov
jae
xchg
test
stc
hlt
lea
jecxz
rorb
cltd
mov
out
push
mov
fsts
pushf
cli
cmp
arpl
add
aad
and
fsubrl
ds
xor
jmp
ficompl
inc
int3
pop
sub
insb
push
pushf
dec
mov
or
std
mov
pop
pop
mov
jge
jo
subb
stc
cmpsb
mov
xor
push
sarl
clc
enter
hlt
adc
in
fucomp
cltd
sub
jns
inc
cmpsl
dec
pop
aad
stos
pop
sub
pop
jbe
dec
push
sbb
fdivs
rcll
addr16
rorb
pushf
xor
fsubl
xchg
std
xchg
jb
cmp
mov
cli
xor
jo
je
cmp
sub
aaa
inc
cs
daa
mov
sub
sbb
push
ds
jmp
dec
fs
mov
test
mov
cmp
mov
jb
sbb
cmp
repz
lock
lea
call
push
mov
jb
sbbl
popa
mov
and
add
stos
aam
or
int3
pop
mov
push
xchg
pop
call
aaa
outsl
push
in
sub
out
xchg
adc
mov
psadbw
nop
fildll
and
cmp
nop
js
lea
mov
mov
fwait
loope
mov
cmp
and
call
adc
inc
call
dec
and
test
incl
and
shrb
and
pop
fxch
pop
lret
jmp
sub
mov
push
test
xor
xchg
sub
fidivl
adc
lahf
inc
xor
dec
adc
movsl
ficompl
loopne
test
mov
pusha
mov
es
fmulp
aas
dec
repz
ficoms
push
adc
test
jne
jae
call
cmpl
adc
ret
mov
and
xor
aad
repnz
push
sahf
dec
sbb
push
mull
movsl
and
popf
cli
aam
rcrl
das
push
inc
rcll
sbb
addl
repz
aas
sahf
or
or
push
pushf
push
push
sbb
das
inc
fiadds
pop
cmp
dec
jae
negb
subb
push
mov
jp
loop
inc
mov
xchg
ret
adc
push
and
jl
push
lds
js
fsubr
repz
outsl
cmp
fldcw
mov
inc
push
imul
ficoml
bound
push
scas
lcall
xchg
adc
inc
fs
jge
repnz
pusha
pop
notl
out
sbb
mov
dec
push
dec
cs
xor
repz
dec
rolb
mov
push
inc
hlt
or
aad
int3
cli
xor
cmp
ss
adc
lret
imul
mov
rolb
out
sbb
sti
mov
lock
cmpsl
lds
bound
pop
adc
adc
stos
or
stos
ds
jge
sub
cmp
test
inc
jecxz
cmpsb
rolb
loope
imul
sbb
icebp
sti
xchg
lds
mov
ret
fbstp
enter
nop
loop
outsb
in
adc
arpl
add
or
lret
lds
push
inc
orb
adc
fs
mov
mov
repnz
pushf
mov
jo
jno
mov
mov
cmc
movsl
fimuls
xchg
sub
cmpsl
and
shll
mov
sbb
xchg
push
inc
icebp
filds
in
jp
sbb
jge
dec
aam
addb
cli
mov
repz
in
in
cltd
xchg
and
loopne
sahf
daa
outsb
shrb
push
nop
push
in
push
iret
or
xchg
fcomip
push
data16
fbstp
scas
jno
insb
sub
jno
mov
mov
lcall
stos
repnz
jg
adc
xchg
sub
jno
movsl
sbb
pop
test
add
xor
mov
cli
out
lds
test
and
xchg
jl
dec
and
bound
aaa
scas
pop
dec
xchg
pop
rcll
lds
sub
sub
mov
mov
or
jbe
arpl
shl
adc
aas
das
adc
jns
sub
sbb
out
sub
dec
jp
sbbl
add
in
cmp
inc
xchg
fstl
cltd
pop
or
inc
call
add
mov
loopne
insb
cs
jmp
fistl
dec
xchg
cs
ja
jno
adc
int
cld
push
or
mov
es
shlb
sub
fwait
sbb
inc
xchg
shll
movsl
jp
cmp
ss
jecxz
lret
insl
repnz
das
cwtl
pop
ss
stos
sbb
cmpsb
or
sub
pop
lcall
mov
leave
mov
xchg
dec
setp
sbbl
xor
sub
pop
mov
mov
mov
cmc
pop
xor
mov
decb
out
mov
jae
mov
ss
outsb
into
inc
lret
sub
xor
pop
bound
mov
jmp
push
lret
xor
and
pop
insb
mov
sbb
inc
xlat
pmaddwd
movsb
sub
cmp
xchg
add
test
icebp
neg
pushf
data16
outsb
int3
aam
in
cmp
jns
popf
into
aad
popa
xchg
jecxz
jnp
xchg
popf
pop
popf
arpl
mov
sub
jae
jbe
inc
push
mov
pop
jge
xchg
inc
mov
ret
sub
lret
flds
sbb
add
cmp
xchg
sbb
jbe
mov
push
iret
mov
fs
sub
movzwl
pop
movsb
pop
sub
pop
arpl
dec
mov
inc
ds
stc
sub
fisubl
or
add
xor
sbbb
and
test
stc
mov
mov
int
push
rclb
fwait
xor
xor
scas
incl
or
insl
mov
movsb
xor
in
in
cli
adc
test
cmc
inc
add
rcr
sub
lret
dec
and
insl
shll
mov
ret
jno
repz
sbb
sub
or
mov
xor
in
movsb
ljmp
mov
jnp
push
je
pop
jmp
sub
xchg
push
sub
mov
mov
in
sub
adc
stos
and
jo
jae
idivb
mov
es
in
xlat
mov
fdivr
dec
add
inc
lret
incb
dec
xchg
add
jb
lods
mov
cmp
lret
lahf
fsubp
lret
enter
ljmp
and
mov
sahf
cwtl
stc
dec
mov
inc
addr16
xor
call
xor
jp
add
movsb
xchg
popa
test
les
jge
dec
enter
mov
movsl
daa
movsl
cmc
mov
lds
fwait
nop
je
icebp
adc
sbb
add
jecxz
jnp
or
mov
pop
or
imul
jbe
pop
insl
popf
mov
dec
xor
movsb
cmp
in
int3
cwtl
in
test
push
nop
scas
imul
and
adc
or
inc
jno
pop
repnz
loope
jge
add
dec
jl
jae
cs
frstor
addr16
gs
sti
mov
lret
bts
mov
mov
cld
pushf
pop
sbb
fisttpl
aaa
sub
adc
gs
int
mov
cmp
push
aas
lcall
gs
loop
addb
in
cmp
je
sub
out
mov
outsb
mov
jo
fwait
je
xor
dec
clc
outsl
arpl
adc
dec
rorl
cmp
add
push
or
negl
adc
lods
xor
cmpsb
sbb
sub
pushf
adc
pop
mov
dec
mov
aas
mov
popa
adc
lock
adc
add
or
dec
jne
lea
inc
imul
pop
test
pop
jp
sbb
shll
or
lret
arpl
cmpsl
rclb
sbbb
xor
stos
inc
add
mov
jge
and
ds
sbb
jp
push
sbb
out
mov
add
pop
inc
flds
push
insl
dec
lret
es
mov
push
sbb
jle
fs
das
mov
push
movsb
cltd
std
clc
insl
test
fs
add
cmpl
cmp
xchg
mov
dec
jbe
stc
daa
dec
adc
mov
ret
popa
mov
stos
mov
in
in
frstpm(287
movsl
psubsb
pop
mov
pop
aas
outsb
outsl
insl
icebp
push
movsb
adc
mov
icebp
push
rcll
movsb
pop
es
js
or
mov
out
pop
push
add
out
ret
cmp
movsb
int3
pop
das
mov
jbe
icebp
pusha
fs
fcomi
repz
addr16
mov
mov
insl
ret
jne
push
mov
xchg
fs
cltd
idivl
or
xor
cltd
adc
test
mov
adc
ds
stos
ja
or
jb
in
mov
and
data16
in
adc
pop
cmp
jo
enter
pop
push
stc
aas
cwtl
shl
imul
mov
dec
push
gs
inc
inc
xchg
push
repnz
mov
mov
and
repnz
pusha
add
fimuls
loop
and
enter
fidivrl
push
mov
sbbb
dec
popa
std
fdivl
lret
pop
outsb
jl
push
mov
out
mov
fucomip
lock
clc
add
jbe
add
fnstcw
adc
jl
mov
rol
insb
out
mov
add
xor
xor
das
ja
aad
je
sub
movsl
fsub
lods
xor
js
std
push
std
shrl
lret
and
mov
pusha
mov
add
test
sub
rcll
or
aas
push
addr16
pop
sub
jnp
adc
inc
jnp
dec
imul
arpl
adc
fstpt
int3
adc
testl
adc
cmpsl
mov
xor
jns
cmp
jl
movsb
sub
and
movsl
test
ficoml
daa
mov
sbb
sbb
fwait
scas
pop
jle
mov
mulb
inc
mov
lods
mov
pop
fwait
and
arpl
pop
jae
test
or
jl
outsb
pop
test
inc
xchg
ds
test
bound
add
or
in
fxch
popf
cltd
and
stos
ds
xchg
sub
fistl
xor
fiadds
push
out
dec
cs
rclb
testl
rclb
lock
fcomip
les
shrb
push
or
xchg
pop
cmc
pushw
sub
ret
out
add
xor
data16
adc
sbb
mov
push
mov
pop
or
pushl
scas
dec
cmp
sub
and
test
sti
pop
push
push
mov
adc
and
shl
or
sbb
cmp
inc
dec
adc
and
add
movsl
stos
or
fwait
sub
fwait
xchg
in
jle
xchg
push
add
mov
or
sub
and
add
xchg
pushf
cmp
movsb
sbb
and
or
xchg
into
sbb
pop
or
mov
or
xchg
adc
lret
in
iret
outsb
shr
stc
call
shll
push
xchg
pop
ret
jmp
add
in
xchg
add
divb
outsb
xchg
pop
lea
mov
fmuls
sbb
jmp
ss
sbb
xchg
add
fnsave
orb
xor
test
fmuls
aam
fmull
pop
stc
clc
in
fucomp
loop
xchg
push
lcall
leave
test
scas
mov
xlat
mov
inc
mov
jg
push
sub
sbb
mov
mov
xchg
shl
addr16
cwtl
lcall
dec
adc
das
scas
pop
and
add
ss
int3
cwtl
out
mov
mov
and
and
jae
push
cmp
cmp
xchg
xchg
mov
fidivrs
sbb
dec
pop
arpl
jbe
cmp
mov
in
lret
ljmp
stos
les
movsl
movsb
mov
into
aad
mov
jl
mov
sarl
sti
push
cmc
enter
push
mov
nop
or
in
cs
pop
sbb
cmp
pop
mov
or
sub
imul
jp
sub
mov
cmp
outsb
dec
inc
pop
daa
sbb
xchg
push
js
test
bound
sbb
loopne
andb
cwtl
sbb
test
mov
mov
outsb
inc
mov
movsb
jb
in
sub
addr16
shl
mov
pop
mov
add
gs
outsl
dec
es
mov
mov
mov
test
pusha
leave
xor
test
dec
inc
loopne
add
push
adc
cmp
imul
cltd
pop
scas
cmpsb
cmp
cmpsl
hlt
out
adc
jge
aaa
std
aam
nop
sti
aas
out
aaa
sti
or
lods
hlt
xor
popa
dec
and
ja
data16
lods
mov
xchg
and
iret
out
inc
lods
push
in
mov
pop
enter
in
dec
sarb
and
jnp
sbb
xchg
xchg
sub
add
push
cltd
add
test
repz
and
push
jae
outsl
sub
mov
sahf
data16
cmp
scas
add
leave
push
in
es
outsb
mov
jae
lods
aad
nop
mov
dec
shll
jnp
daa
jno
inc
adc
imul
cmpsl
sbb
shl
and
push
xchg
roll
mov
jecxz
add
divb
mov
and
xchg
inc
lods
sub
sbbl
sub
mov
jmp
cltd
and
mov
data16
lods
outsb
popw
cmp
inc
ja
sbb
or
icebp
scas
cmpsl
pop
data16
andps
xchg
push
xchg
int3
adc
cmp
dec
inc
stos
repz
clc
cmp
in
mov
xchg
inc
adc
sti
es
push
lds
jnp
mov
xor
dec
aas
sub
mov
lahf
sub
cli
xor
jmp
test
or
push
jmp
jbe
into
flds
shl
mov
push
jae
outsb
pop
mov
add
scas
leave
mov
imul
stos
out
inc
dec
and
int
sbb
mov
inc
pop
lds
int
xchg
shll
mov
lahf
mov
xchg
push
xor
int
xor
push
xor
adc
fcomi
aaa
add
dec
pop
adc
add
adc
aas
loope
ss
push
adc
push
jns
push
jae
cmpsb
xor
ljmp
inc
adc
insb
in
xor
inc
lods
xor
fwait
push
jb,pn
jnp
mov
lods
idivb
jmp
icebp
pop
jae
push
jne
loopne
jg
std
lods
popa
dec
out
ret
fisttps
mov
mov
test
push
dec
dec
insl
pop
xor
mov
lret
insb
jge
pop
or
into
adc
imul
or
xchg
sbb
mov
lret
jmp
mov
xor
ja
in
ja
test
and
add
push
adc
lds
das
pusha
fldenv
add
mov
orb
adc
cmp
ljmp
arpl
push
lea
jb
pop
push
adc
cld
xlat
jb
push
hlt
push
movsb
cmp
notl
popf
ret
dec
ret
inc
subb
xor
fwait
pop
movsl
sbb
jl
mov
pop
or
push
ss
cmpsb
repnz
push
mov
adcb
hlt
adc
mov
xchg
subl
ret
add
inc
mov
loop
jnp
outsl
out
pop
pop
rclb
mov
jle
icebp
popf
pushl
add
push
movsl
pop
imul
cmpsb
or
rcrl
xchg
mov
out
mov
in
loope
bound
icebp
fisttpll
cmpsb
mov
sbbl
xchg
sub
mov
mov
movsl
into
jg
stos
adc
fnstenv
pop
les
ds
shll
pop
fwait
ret
outsb
mov
lods
cmp
stos
push
or
mov
xchg
pop
int
mov
movsl
mov
sub
xchg
push
xchg
fisubs
popa
and
mov
mov
mov
add
push
add
xchg
in
adc
in
mov
adc
mov
bound
xchg
mov
push
lcall
or
in
rep
and
lea
xchg
sub
jns
inc
fwait
jbe
push
test
add
pop
adc
dec
movsb
jo
pop
xor
push
xchg
xor
sbb
mov
push
push
cmp
iret
dec
mov
imul
pop
pusha
test
sub
adc
cmp
xlat
cmp
jmp
leave
push
lea
fldt
es
sbb
aaa
push
push
sub
clc
rcll
fldl
push
ret
xor
pop
int
push
sbb
sub
fwait
push
push
sbb
es
cwtl
cmc
sbb
cmp
pop
jle
add
pop
sahf
sub
pop
psubd
xchg
repz
pusha
repnz
jle
pop
push
movsb
dec
adc
and
jnp
outsb
push
ret
pop
enter
js
ja
sbb
in
cmc
pushf
or
scas
faddl
out
and
mov
push
cmp
xchg
mov
imul
insb
push
leave
jge
or
ja,pt
sbbl
mov
repz
xor
cmp
in
fwait
sub
or
mov
jo
out
out
xlat
xor
or
sbb
and
pop
testb
cmp
cmc
fs
mov
mov
pop
mov
dec
das
rcrl
jecxz
inc
xor
cld
adc
sbb
aam
push
test
out
xchg
add
cmp
arpl
fs
sub
lret
test
hlt
stos
jne
shlb
pavgb
add
enter
xchg
dec
repz
sub
sbb
sbb
arpl
test
fimull
pop
dec
lods
cmpsl
mov
ret
aaa
ss
vpunpckhwd
or
sub
mov
sbb
lods
cmp
ret
mov
das
fbld
inc
in
cs
mov
ja
push
in
jmp
push
dec
inc
push
mov
aaa
xor
lods
xor
ja
into
push
push
adc
mov
jb
repz
outsb
mov
cli
inc
adc
or
fistl
mov
orb
jbe
jl
xor
sti
or
in
aam
mov
inc
lret
repz
inc
mov
stos
outsb
cmp
xor
or
inc
inc
and
jmp
sbb
push
inc
scas
inc
sarb
fildl
push
dec
hlt
out
sub
in
xchg
insb
sub
cld
pop
stc
sbb
dec
call
fdiv
add
mov
in
adc
mov
jle
dec
push
sbb
push
insl
std
cld
dec
mov
adc
mov
or
insb
pop
mov
ret
psubsb
jae
dec
lods
out
xor
xchg
cmpsl
and
push
adc
push
sbb
add
cld
jnp
fnstsw
in
push
andl
fisubrs
sbb
test
dec
jle
shll
outsb
daa
mov
insl
dec
or
inc
leave
sub
mov
mov
xor
cmpl
dec
xchg
test
sbb
push
or
out
xchg
mov
sarb
cmp
push
cwtl
out
mov
cmp
jmp
jo
dec
and
mov
mov
aam
dec
mov
push
testb
movzbl
mov
notb
pop
mov
pop
insb
push
sti
jb
clc
cmp
in
arpl
cs
pusha
jecxz
xchg
cmpl
out
jecxz
cli
sbb
loope
sub
mov
and
cwtl
cwtl
rcrl
ja
mov
xor
jns
enter
cmpsb
jbe
mov
cmpsb
out
lock
bound
loop
lret
hlt
pop
xchg
xor
icebp
sub
aaa
pop
dec
fwait
add
mov
push
or
and
mov
loopne
enter
mov
stc
stos
mov
imul
data16
and
cld
and
push
imul
lahf
xor
sub
sub
mov
push
mov
in
lcall
stc
leave
pushf
pop
inc
and
mov
mov
sbb
dec
and
dec
cmc
orb
int
fcoms
repz
xchg
jnp
push
in
xchg
pop
jecxz
dec
xchg
int
mov
les
xorb
push
push
insl
and
xlat
fwait
dec
nop
test
in
add
sbb
rdmsr
test
addr16
ret
mov
mov
mov
shrb
mov
add
xchg
mov
inc
mov
push
stc
and
ret
pop
loope
sti
jle
movups
add
fcompl
mov
movsb
pop
hlt
jns
mov
cmpsb
mov
xor
enter
sbb
lods
sbb
add
ret
dec
nop
push
adc
dec
and
push
pop
push
mov
cli
inc
jle
jl
mov
push
sahf
scas
int
ds
xchg
jb
adc
cwtl
add
mov
jb
jne
iret
test
or
mov
mov
jne
lret
and
std
add
or
sub
inc
inc
les
fstps
mov
pusha
and
mov
data16
lret
test
es
adc
int
adc
jnp
leave
ljmp
sbb
fnstcw
jo
mov
push
lret
pop
xor
sahf
pop
mov
gs
in
lock
inc
pop
mov
lds
adc
inc
xor
mov
cmp
push
add
in
repnz
dec
inc
sub
and
jg
jae
pop
fldt
adc
cs
and
push
pop
adc
and
lods
mov
push
fbstp
or
jb
fldcw
pop
loope
dec
mov
out
fs
clc
and
jmp
aad
pushf
movsb
inc
push
xchg
xchg
insl
lcall
lods
mov
xor
cmp
loope
scas
or
orb
sub
clc
out
and
movntps
and
icebp
add
mov
popa
fcoml
out
mov
mov
pop
das
xchg
jg
add
and
pushl
cmp
cmp
xchg
jne
arpl
pop
in
and
dec
add
or
scas
push
dec
or
stc
xchg
jbe
out
cmp
insl
jl
out
ds
inc
inc
pop
mov
inc
lret
fwait
mov
shlb
shlb
jmp
ficomps
test
rclb
lods
push
mov
lods
loope
or
insb
outsl
mov
inc
push
lret
push
addr16
jns
call
sub
cwtl
cltd
lcall
iret
divl
jbe
mov
jne
push
sti
add
fdivp
xchg
pop
std
dec
xor
or
sbb
in
js
into
jb
xchg
cli
xchg
out
mov
or
fmull
sub
jae
push
fnstsw
mov
cmp
bnd
mov
push
sarb
ds
lret
sbb
dec
sbb
add
sub
and
in
movsl
add
imul
je
out
sub
ror
aas
mov
sub
test
int3
int3
xchg
orb
ds
hlt
test
into
fnstenv
jmp
imulb
mov
inc
jg
sbb
pop
push
push
gs
insl
push
in
es
add
cmp
ljmp
xor
add
pop
popa
push
xor
cmp
pushf
adc
pop
lret
repnz
cmp
dec
lods
or
stos
out
push
gs
mov
cmp
xchg
push
jl
add
lret
in
out
inc
stos
lahf
dec
mov
js
xchg
lret
cmp
in
aam
ss
xchg
push
addl
jle
cli
ret
or
movsl
out
mov
es
shll
inc
add
pop
xchg
dec
jno
add
dec
jno
outsb
xchg
movsb
jae
punpcklwd
das
enter
or
xor
mov
xchg
test
mov
fisttps
pop
fwait
adcl
sub
xchg
sbb
clc
shl
and
test
loope
sti
inc
mov
subl
adc
jecxz
test
popf
xchg
push
jmp
inc
mov
cmp
hlt
aad
fnstenv
pop
and
pop
in
aad
rcrb
cmc
mov
mov
and
jne
dec
lret
arpl
clc
sbbl
push
or
movsl
cmp
repz
out
mov
gs
jg
out
aas
adcb
push
insl
stos
and
dec
xor
mov
or
inc
enter
or
in
call
jo
xchg
cwtl
test
leave
std
xor
push
xchg
lds
lret
adc
or
popa
fs
jle
adc
mov
adc
mov
popa
loopne
mov
fs
lahf
mov
sahf
xchg
mov
and
mov
push
in
push
mov
ds
cwtl
sbb
cli
ds
lret
ret
aam
movb
xchg
addl
push
rcrb
xchg
cmpsl
mov
or
movsb
pop
jecxz
cmp
mov
shrb
push
cmp
out
push
mov
jecxz
cmpsb
cmpsb
mov
arpl
mov
out
dec
mov
ja,pt
inc
mov
and
call
inc
xchg
mov
jg
mov
or
jmp
out
dec
in
and
push
pusha
popf
popf
and
testl
jne
out
icebp
pop
call
hlt
lods
cwtl
stos
clc
js
dec
jnp
sbbl
popa
test
ud1
dec
dec
or
int3
sub
xchg
rcl
in
add
or
adc
jmp
jae
repz
cli
adc
mov
xchg
shl
jmp
ja
mov
mov
xor
mov
inc
mov
lret
divb
cli
outsb
std
jecxz
sbb
ret
test
je
add
stos
push
in
push
cmpsb
pop
jl
xchg
cmpsl
mov
xor
lods
push
hlt
test
cmpsb
push
shlb
jle
test
push
outsl
mov
push
mov
sahf
roll
aas
fstpt
cmp
mov
adc
push
ret
lret
mov
out
pop
sub
in
sub
mov
xchg
add
cmp
xor
ja
add
cmp
xchg
pusha
xor
pop
jle
jae
mov
xor
jo
add
dec
push
test
aaa
das
mov
push
stc
push
cmpsb
cmp
add
pop
inc
fstps
cmp
xchg
sbb
mov
xchg
pop
arpl
add
mov
fsubrs
mov
push
xor
lods
or
and
cmp
add
push
push
jb
pushf
sub
pop
test
jl
popa
cli
das
mov
fwait
gs
faddp
jne
cltd
push
cmp
push
fldl
rorl
lcall
mov
or
sti
fcmovnb
cmp
xchg
push
add
xor
fistps
scas
sbb
mov
xchg
imul
push
outsl
xchg
add
jno
sub
shll
xchg
push
mov
cwtl
test
and
stc
je
int
nop
dec
popf
add
lret
lahf
inc
cmc
xchg
cltd
insb
clc
les
jmp
cmpsl
jecxz
inc
sbb
ret
ss
cs
ja
repnz
addl
fsubrs
jns
jle
jle
sub
mov
js
push
or
lret
ffree
mov
popa
loop
xchg
mov
pop
dec
mov
dec
pop
sub
sub
movsl
sub
out
inc
negl
sahf
shrb
sub
pop
lods
popa
push
sub
arpl
loope
rorb
and
icebp
sbb
rolb
xor
cli
lea
insl
push
xor
sbb
jnp
sarl
mov
cmovb
mov
dec
pop
or
loope
or
adc
cmp
dec
mov
push
push
push
xor
sbb
and
lret
xor
jg
cmp
jbe
mov
pop
mov
mov
imul
les
ret
jno
mov
iret
div
dec
clc
rcrl
cmp
mov
cltd
xchg
dec
sar
jl
add
js
dec
into
int
xor
pop
mov
adc
xchg
pop
test
xchg
cmp
pop
mov
data16
andb
jle
or
bound
adc
in
cmpsb
cmp
cwtl
pop
mov
jl
fistpll
sbb
mov
inc
insb
imul
decb
sar
test
rcr
jg
fs
jmp
js
xchg
dec
mov
xchg
jnp
mov
or
mov
pop
cmc
cmp
mov
outsb
inc
xor
ret
es
movsb
xor
popa
repz
sbb
mov
js
and
aas
mov
push
lods
and
sub
xor
mov
or
ljmp
lock
sub
xchg
pushf
loop
adcb
push
lahf
stos
fwait
jne
out
int
cmp
push
add
xchg
js
mov
pushf
cmp
inc
outsl
movsl
pop
mov
mov
mov
call
or
push
and
xor
sub
les
aaa
stos
jbe
sbb
jno
sbb
enter
adc
lret
jne
imul
leave
mov
mov
push
xchg
jg
mov
push
inc
mov
cwtl
adc
mov
jb
pop
dec
and
sub
mov
mov
sbb
mov
mov
ret
lods
ret
sbb
add
inc
mov
sbb
mov
outsl
and
pop
jmp
push
push
addr16
clc
call
sub
and
sub
shll
push
cmp
jnp
mov
dec
int3
in
adc
mov
lahf
aam
pushf
mov
jmp
ljmp
xor
pop
cmp
stos
fdivp
xchg
and
lahf
fsubl
out
xlat
pop
sbb
cmpl
push
call
popa
push
sbb
icebp
mov
adc
xor
cs
loope
jmp
movsb
xchg
popa
push
cmp
into
je
dec
pop
sub
cld
out
rorl
in
jle
pop
adc
fmulp
mov
f2xm1
sbb
into
or
out
inc
mov
fsubs
int3
int
aaa
out
push
xor
push
xchg
dec
push
bound
cmpsl
inc
aaa
in
inc
sub
add
dec
movsl
dec
aam
inc
mov
fcompl
out
and
mov
inc
sbb
addr16
into
pop
pop
bound
movsb
push
divl
jmp
push
jno
mov
clc
mov
sbb
fisubs
fld1
push
cmp
or
inc
xchg
dec
rorl
imul
xchg
xchg
lods
push
mov
jecxz
mov
call
stos
fwait
cltd
fstpl
popf
and
xor
sbb
aaa
mov
mov
sarb
or
dec
inc
test
mov
repz
add
xor
addb
fildll
sub
aaa
insl
jmp
inc
sarb
andb
lods
dec
pop
jo
push
filds
inc
rcll
push
insl
cmp
icebp
movsb
outsl
jbe
fstl
clc
fisubrs
mov
sub
and
sub
fwait
int
sahf
pop
repz
iret
imul
filds
jl
movsb
jmp
ja
jmp
add
sub
fs
mov
movsl
in
push
xchg
into
jp
pusha
jecxz
in
xchg
loop
pop
outsb
xor
cs
sub
and
inc
shrl
sub
add
bound
daa
or
js
xchg
xor
mov
sub
sti
push
testb
mov
push
je
fistps
mov
and
xchg
cs
cmpsb
arpl
jmp
mov
pop
sub
jecxz
adc
clc
sbb
lret
popf
ja
into
xor
lret
adc
dec
in
mov
out
fidivrs
xchg
mov
dec
dec
scas
loope
dec
mov
mov
fdivrs
sti
sub
cmp
in
jnp
jge
rcl
push
ret
pop
inc
inc
adc
jns
jo
out
loop
movsb
ret
push
xchg
and
sub
ret
inc
in
jg
fbstp
out
mov
pop
sbb
jmp
cmp
hlt
or
mov
sub
cmp
xor
push
xchg
mov
sbb
dec
addr16
cwtl
jl
in
dec
sbb
bound
or
stos
xor
sbb
insl
movsb
lods
push
daa
sti
push
dec
cmp
test
aad
add
and
outsb
aas
cmp
mov
sbbl
xchg
out
sub
in
aad
xchg
cmc
inc
std
or
cmp
mov
xor
aas
mov
adc
icebp
fwait
sub
mov
insl
mov
cmpsl
jne
movsl
bound
sbb
xchg
insb
pop
jmp
out
call
pop
test
pop
insb
adc
push
mov
cmp
push
jge
xchg
push
cld
lret
or
cltd
adc
loopne
push
mov
push
int3
lds
sub
sub
push
adc
push
popa
ds
inc
mov
mov
cmp
outsl
in
scas
fildl
xor
movsl
out
push
movsl
jo
aad
fs
push
testb
repz
loop
xor
mov
add
out
jle
cmp
gs
inc
and
ret
fwait
sub
dec
mov
test
aaa
pusha
out
aad
cmpsl
adc
jno
sub
out
add
stc
push
sti
or
inc
sub
or
mov
dec
stc
mov
sbb
push
xchg
mov
aad
or
std
loopne
mov
jp
jl
loope
jb
or
orb
repnz
or
pop
pop
sub
dec
pop
xor
adc
or
lcall
test
test
inc
pop
add
push
mov
hlt
sbb
fnsave
ret
pop
lods
sar
push
scas
pusha
pop
popa
jno
jge
or
jg
add
jnp
cmc
and
or
pop
cmp
pusha
dec
mov
insl
imul
sbb
pop
aad
add
mov
fidivrs
jle
sub
mov
lds
add
dec
dec
pop
testb
pop
mov
hlt
cmp
sbb
and
out
mov
pop
dec
fisubl
and
mov
pusha
or
inc
add
or
sub
inc
gs
or
push
cmp
test
bound
nop
shr
adc
mov
mov
dec
cltd
sbb
cs
sbb
mov
sahf
mov
imul
jge
into
mov
and
cmp
loope
aad
in
xchg
pop
and
xchg
xor
mov
cmp
adc
in
sbb
frstor
icebp
inc
loop
push
add
jae
jge
cmp
pop
in
insl
jp
mov
cltd
rolb
fdivp
es
and
and
stc
mov
adc
push
push
cmp
loopne
inc
in
jnp
imul
imul
stc
lods
mov
jge
pop
xor
arpl
mov
lock
adc
loopne
or
ds
shrl
dec
mov
enter
subl
dec
aam
jne
mov
addr16
xchg
fwait
mov
popf
pop
js
mov
dec
mov
out
jp
ljmp
push
cld
dec
jno
mov
mov
fistpll
pop
mov
aad
push
aas
clc
fdivr
sub
xchg
jmp
xchg
mov
cmp
jo
xor
jle
in
pop
mov
push
in
out
js
aam
cmp
ret
fsubl
inc
ss
pop
xchg
mov
pop
aas
dec
enterw
jbe
xorb
pop
cmp
sub
mov
out
pop
xchg
mov
sar
leave
dec
add
repnz
lods
std
add
test
add
jle
pusha
movsb
jge
mov
inc
adcl
sbb
insb
add
test
adc
mov
test
std
not
out
pop
inc
scas
xchg
push
cmp
shll
jl
pop
xchg
jo
adc
or
xchg
jae
jb
stos
push
scas
notb
adc
daa
in
and
je
push
jbe
imul
pop
jl
push
dec
pop
dec
mov
push
aaa
cmp
test
outsb
or
lret
and
inc
std
mov
je
ret
scas
xchg
ss
add
jle
std
outsl
in
lret
mov
mov
fcompl
fstpl
ljmp
imul
imul
cs
adc
xlat
or
dec
fstl
out
pop
mov
pop
ljmp
sbb
outsb
test
sub
push
scas
loope
push
out
out
lods
xchg
int
pop
cld
shl
cmc
repz
dec
and
rcr
inc
outsb
test
xchg
int
add
pop
or
lods
out
dec
stos
xchg
popf
outsb
adc
sahf
jp
dec
sbb
in
and
push
daa
jmp
mov
mov
scas
insb
jecxz
mov
ret
jge
add
lods
adc
ljmp
outsl
mov
fcmovnbe
cmc
ret
push
in
push
or
mov
xor
add
cmp
and
adc
lret
fsubrs
push
emms
out
add
mov
lods
gs
add
imul
cwtl
std
push
add
pop
lea
cwtl
pop
stc
in
stos
aad
push
outsb
mov
gs
mov
cmp
pusha
sub
or
mov
push
sub
outsb
nop
aad
ss
pushl
jle
imul
xchg
pusha
aad
cli
subb
ds
sbb
or
xorl
cmpsl
mov
pop
add
aam
repnz
sbb
aad
cmp
pop
lcall
or
xchg
push
lods
fnstcw
or
cmpsl
sub
and
es
jecxz
test
mull
pop
fildl
jbe
fildll
pusha
lock
push
mov
inc
test
push
xor
loopne
aad
sub
mov
fidivl
or
pop
cltd
fs
adc
aas
jb
fisttps
add
fucomi
fwait
dec
out
or
adc
and
fadd
movsl
mov
test
push
mov
or
aad
arpl
and
mov
adc
out
inc
aaa
test
mov
xor
js
lods
mov
xor
pop
cmpsl
pop
rclb
std
add
ret
xorb
rcrl
aad
xor
mov
fisubl
dec
pop
lcall
rclb
or
jg
jne
mov
pop
ret
mov
adc
push
mov
loop
mov
and
sbb
addl
fstps
inc
adc
stos
push
mov
test
clc
pushf
cmp
out
pop
adc
call
lcall
jb
cli
ds
sub
arpl
pop
out
in
jl
mov
pusha
sti
push
es
mov
in
jne
int
fcomip
icebp
bound
xor
lds
fdivrs
xchg
shll
arpl
mov
mov
xchg
pop
loopne
mov
mov
push
std
and
inc
mov
or
cmp
stos
clc
xor
xlat
cwtl
iret
aad
cmp
adc
arpl
xchg
icebp
mov
imul
pop
dec
fmul
or
jb
xchg
fsubs
jb
and
popa
dec
mov
add
fstpt
and
loop
scas
cli
adc
cmp
test
sub
dec
daa
repnz
sub
je
lods
jns
outsl
dec
icebp
xorl
jmp
cli
xchg
sahf
xchg
icebp
mov
out
pop
int
lods
mov
mov
xchg
ds
inc
lahf
fsubr
andl
mov
insb
xor
inc
lret
or
push
ficoml
and
lea
xor
add
mov
xor
jp
inc
jnp
pop
cmp
js
and
mov
addl
rcll
mov
test
adc
mov
jmp
pushf
cmp
xor
cmp
daa
sbb
popf
cmp
loop
lods
neg
cmp
fcoms
sub
inc
jb
inc
lcall
mov
push
jmp
xchg
mov
aas
lea
nop
mov
inc
cmp
in
sbb
enter
in
cmpsb
loopne
fdivl
enter
lahf
jmp
push
ja
fisttpl
xchg
shl
push
daa
xor
lock
jecxz
jno
pop
popa
inc
or
das
add
inc
xor
int
mov
orl
jg
std
add
addr16
fst
or
shrl
iret
mov
add
and
and
in
and
addr16
xchg
orb
insb
dec
nop
lods
and
in
lds
mov
xlat
pop
stos
js
pop
repnz
jecxz
pop
mov
jmp
inc
pop
loopne
mov
stos
dec
into
pusha
call
into
es
adc
sub
pushl
cmp
lods
mov
add
popf
dec
cli
imul
add
shr
jne
scas
jae
into
mov
mov
xor
pop
fisubs
push
cwtl
pop
pop
movsb
sub
loope
jg
mov
lahf
inc
mov
rcrb
sti
loope
in
popf
xor
sub
cmp
notb
mov
movsb
std
ljmp
mov
add
in
imulb
pop
inc
aaa
add
adc
pop
mov
insl
sub
adc
repnz
jge
push
mov
or
mov
or
add
and
mov
mov
sub
mov
cmc
dec
sbb
mov
repnz
inc
inc
sbb
int3
adc
mov
fdivr
xorb
jns
mov
inc
mov
test
pop
sti
add
ret
and
int
add
add
mov
mov
mov
sub
sbb
xchg
shrb
xlat
cmp
mov
adc
out
out
mov
cmpsb
icebp
sahf
cs
test
jb
jbe
xor
mov
or
inc
fsubrs
cli
out
inc
mov
or
push
popf
int3
dec
or
jmp
rcrb
mov
jno
jo
mov
inc
out
and
mov
adc
daa
nop
outsl
and
fiadds
lahf
cmp
ljmp
cs
and
addr16
inc
or
xor
repz
ja
and
shll
fwait
mov
sub
out
sub
out
push
fcmove
gs
jmp
dec
xlat
add
imul
call
mov
push
push
dec
xchg
mov
pop
fdivs
es
popa
mov
lcall
mov
add
inc
push
xchg
xor
out
scas
sbb
push
movd
ja
cld
push
mov
jo
ds
jne
adc
rol
mov
adc
sub
cmpsb
sbb
adcb
sarb
xchg
inc
dec
das
xchg
cmp
xlat
sbb
pop
push
nop
inc
jno
xor
xchg
subl
dec
xor
ja
mov
addr16
std
jl
popf
jle
js
aad
dec
sub
xchg
mov
or
lds
push
xor
cmp
movsb
mov
pop
pop
push
test
sbbl
push
push
iret
pop
sbb
mov
movsl
pop
add
idivb
inc
into
push
xor
jmp
or
xchg
sub
add
adc
cmp
jb
push
sbb
sbb
andl
cmpsb
and
mov
test
mov
loop
and
add
fstps
mov
and
mov
mov
mov
test
jle
cltd
pop
sar
mov
push
xchg
push
fisubrs
and
int
cmp
cs
lret
outsb
xchg
call
xchg
addr16
frstor
lods
and
loopne
gs
fwait
sub
loopne
hlt
pusha
xchg
xchg
fbstp
test
push
cmp
mov
insb
cli
adc
into
adc
cmp
mov
cli
xchg
or
add
ror
mov
insl
js
cmp
insl
push
sbb
push
in
mov
cwtl
pop
xor
jne
cwtl
add
rol
push
shll
jp
dec
outsl
addb
mov
dec
pop
dec
adc
in
push
in
test
jg
dec
add
jno
xchg
inc
icebp
pop
int
fsts
jmp
cmp
lods
addb
ret
call
ficoml
push
imul
lods
lret
aas
std
lods
in
push
xchg
xchg
hlt
mulb
mov
int
ljmp
out
push
pop
push
cmp
or
or
arpl
sbb
push
stos
or
in
push
cmpsl
in
out
daa
dec
sub
adcb
in
pop
xchg
inc
ret
mov
testb
xor
mov
test
jns
iret
or
jns
and
lret
jl
shlb
sub
sub
jg
or
sahf
cmp
jo
push
das
cmp
sub
xchg
aad
xor
imulb
xlat
adc
push
repnz
jp
fidivl
addr16
fistl
loopne
lea
jbe
sarl
in
sbb
xchg
pop
outsl
mov
popa
mov
bound
or
inc
dec
or
xlat
das
data16
ss
movb
push
dec
lret
aam
or
jp
or
in
mov
pop
and
mov
inc
xor
mov
jge
or
stos
sbb
sub
xchg
dec
jge
aas
ficompl
fnstsw
cld
cmp
aad
cld
xlat
push
jle
out
and
int3
or
ret
nop
nop
pop
xchg
into
adc
push
movhps
je
fsubr
mov
fmull
loope
test
mov
inc
jl
adc
mov
les
test
push
movsb
cwtl
ds
fwait
xor
mov
cmp
sti
ja
popf
ss
adc
mov
inc
into
jecxz
shrl
popf
test
sub
cmpsb
push
pop
adc
stc
decl
jg
mov
mov
sbb
in
inc
lods
sbb
cmc
or
push
insb
sbb
fimull
scas
bound
jmp
push
xchg
mov
repnz
popf
scas
jmp
movsb
enter
xchg
cs
dec
stc
sub
div
add
das
les
xchg
rcl
xchg
lods
ss
jge
dec
imul
pop
and
cwtl
addl
mov
out
aam
and
adc
loop
data16
fsubrl
jmp
add
push
fsts
mov
sbb
jno
jg
leave
daa
mov
xchg
outsl
or
jmp
and
in
outsb
lret
sub
xchg
cli
imul
icebp
and
aaa
hlt
dec
xchg
mov
addr16
inc
mov
add
jg
das
xchg
sbbl
cli
int3
adc
mov
lock
xchg
ja
and
es
adc
jg
lods
hlt
cmpsl
imul
xor
std
shl
out
jo
pop
movsb
decb
xor
lods
jge
popf
jp
lahf
leave
mov
loope
iret
inc
and
add
jecxz
push
sbb
push
mov
aam
mov
and
outsb
pop
insb
pop
stos
and
push
add
shrl
xor
mov
xchg
cmpsl
das
popa
gs
add
out
cld
mov
pop
dec
cwtl
call
xor
pop
aaa
mov
pusha
adc
mov
pop
inc
push
dec
pop
pop
adc
addr16
ficoms
dec
push
jle
mov
dec
insl
in
mov
aas
adc
in
push
and
sub
loop
daa
push
sti
pushl
pmulhuw
and
lahf
cmp
popf
cmp
or
pop
imulb
pop
faddl
jmp
int3
shrl
push
lret
pop
cwtl
xor
lret
xchg
cld
gs
jge
test
sar
xchg
ret
pop
inc
xchg
imul
popf
xchg
mov
mov
cmp
jle
lret
inc
inc
or
pop
inc
scas
incb
testb
add
ret
shlb
xor
jle
test
stc
or
addr16
xor
add
xchg
cmp
aaa
fstpl
les
insb
test
mov
cmp
sahf
sar
shll
fisubrs
xchg
out
xlat
out
pop
sub
adc
push
push
cwtl
arpl
lret
jmp
insl
int
data16
bound
mov
cmp
addr16
cmp
mov
out
jnp
mov
mov
cmpsl
sbb
dec
int3
xlat
icebp
pop
push
sub
emms
sub
ret
push
sub
jae
dec
imul
xchg
ret
mov
pop
shrl
iret
push
push
inc
cwtl
jl
ret
fucomp
in
sub
imul
jno
jl
mov
pop
cmp
xor
es
lods
ret
jno
ljmp
jae
or
pop
dec
repz
xchg
es
mov
cld
lds
push
divb
push
mov
pop
add
in
mov
stos
lea
ficompl
call
push
xlat
and
cltd
ja
test
or
mov
lea
repnz
loopne
stos
jns
adc
or
lret
aas
pop
lock
and
add
fwait
jb
cmp
imul
pop
lahf
popa
loopne
xchg
push
sbb
outsl
jg
xor
mov
scas
insb
loopne
jb
cmp
mov
insb
mov
jmp
cwtl
sub
xor
sub
out
lods
jbe
push
iret
cs
fwait
in
cmp
int3
xchg
xlat
popa
cli
pop
int3
pop
js
push
in
and
add
loopne
imul
xor
test
lea
mov
mov
fimuls
insl
test
mov
out
mov
mov
test
dec
aad
jno
lcall
push
jne
scas
call
outsl
jae
mov
pop
pop
out
sub
repnz
cmp
adc
mov
jnp
jnp
xchg
out
add
cli
jno
cmp
in
cmp
cmpsl
jb
cmp
aas
cmp
gs
stos
pop
mov
aam
inc
mov
xor
popf
gs
pop
fisttps
out
call
adc
cwtl
push
aad
ljmp
xor
ret
jmp
jp
in
push
dec
add
add
sub
pop
xlat
arpl
fcomp
leave
insb
xchg
ret
push
out
ss
or
pop
cli
mov
int3
mov
sub
arpl
scas
nop
inc
jg
fwait
xchg
adc
ja
lahf
pop
fisubrs
hlt
and
mov
pop
mull
add
into
push
pop
scas
and
pushf
mov
fcmovnbe
test
inc
sbb
inc
xor
or
fbld
mov
mov
lahf
and
pusha
fldenv
adc
pop
mov
cmpsl
btr
je
mov
sbb
or
iret
int3
push
lds
mov
int
sbb
popa
orl
mov
push
adc
jno
push
add
sbb
daa
pop
test
fildll
lcall
adc
pop
mov
lret
lcall
pop
orb
dec
imul
xchg
insl
sub
iret
mov
lret
sarb
in
pop
cld
data16
xchg
test
loop
adc
and
jp
mov
jae
inc
mov
fnsave
pop
insb
pop
mov
imul
add
repz
repnz
arpl
into
inc
inc
fdivl
push
cmp
out
test
ret
pushf
jno
or
popf
es
add
addr16
mov
shrl
xchg
fildll
cld
or
cmpsb
add
test
in
adc
inc
ss
mov
xor
push
xlat
adc
add
ljmp
scas
adc
and
lea
lcall
dec
adc
imul
sub
fists
les
in
sarb
add
lods
pop
push
sbb
cmp
inc
cmp
xor
lret
in
dec
orl
sbb
sbbl
dec
and
inc
shrl
sarl
mov
jecxz
in
xor
subb
or
push
add
nop
stc
pop
cmp
les
jle
mov
aad
sub
sub
xchg
dec
push
xchg
xchg
sub
xchg
jnp
push
push
loope
mov
scas
sti
sbb
jmp
and
int3
push
cmpsb
inc
into
imul
rolb
loop
jp
adc
out
and
and
pop
dec
pop
pop
cmp
pop
dec
sbb
inc
arpl
mov
ret
sub
pop
mov
inc
lea
sbb
dec
punpckhbw
stos
shl
out
cmpsb
out
inc
xchg
cwtl
pop
mov
jnp
repnz
cmpl
inc
adc
inc
test
sbb
sbb
jl
hlt
xor
daa
cmp
std
xchg
imul
cwtl
lock
mov
inc
xchg
out
lret
xorl
jge
jge
fidivl
jno
loop
sbb
xor
push
xchg
and
enter
mov
ljmp
cmp
fwait
adcb
ja
mov
fldl
je
icebp
shl
or
xor
in
lock
lea
clc
pop
cmp
mov
push
pop
gs
cs
add
pushf
inc
test
mov
jmp
pop
loope
push
fdivl
cmc
mov
call
aam
jp
imul
sub
scas
shl
iret
mov
stc
or
call
scas
jb
addr16
xor
pop
mov
addr16
mov
cmp
push
jp
or
popf
mov
cmp
pop
leave
jo
cmpsb
cmp
add
nop
pop
ja
fisubrl
dec
mov
repnz
mov
test
lock
out
cwtl
pop
jno
jg
inc
popf
sahf
xchg
stos
js
add
cmp
stos
cmp
inc
xor
cs
xor
ret
lahf
ret
shlb
es
dec
shll
mov
lods
roll
pop
jg
cmpsl
js
mov
push
stc
jmp
fsts
loopne
sbb
jge
sti
cmp
pop
lds
xchg
adc
leave
in
jns
negb
outsb
sbb
dec
mov
sbb
iret
loope
mov
leave
mov
ficoms
jle
mov
pop
stos
add
cmp
rcr
loope
push
sbb
jg
sub
xor
sub
mov
dec
cli
jle
into
mov
adc
push
ds
nop
cwtl
jo
fucomp
sarl
arpl
mov
xor
mov
cmp
call
in
out
in
push
jae
dec
push
add
daa
jne
mov
pop
jns
rcrl
ds
jno
movsl
dec
fs
cmp
ss
dec
in
push
mov
roll
dec
mov
out
mov
jne,pn
mull
andl
daa
push
repnz
or
push
lods
sti
jbe
push
frstor
loop
clc
push
cmp
mov
sti
cmp
jo
ret
pop
loop
push
jge
jg
push
ret
mov
sub
pop
push
lock
push
sub
jmp
insb
mov
dec
mov
cli
ds
xorl
ljmp
stos
push
ljmp
jo
ret
sub
sbb
stc
jbe
ret
dec
xchg
mov
or
clc
or
popa
lret
dec
mov
push
dec
mov
ret
jmp
push
cmc
insl
enter
cmpsl
jb
int
int
cmp
mov
pop
mov
lahf
rcll
adc
inc
push
mov
cmp
in
sub
inc
jle
hlt
shll
fs
adcl
gs
and
cltd
xor
xor
push
dec
push
mov
jo
add
jno
gs
adc
cs
cmp
inc
jne
js
lcall
inc
sub
lds
les
shrb
inc
jl
jns
sahf
mov
jnp
roll
popa
jl
ret
clc
xchg
mov
pop
scas
movsb
jp
or
sbb
iret
and
jns
and
mov
mov
lcall
clc
cmp
sbb
xchg
dec
xor
jno
or
xchg
xchg
and
mov
xchg
and
nop
dec
push
movsl
pop
fnstenv
sbb
std
mov
insb
ljmp
xchg
das
push
lds
mov
mov
xor
cmp
cltd
aam
ljmp
or
jge
fldenv
mov
and
add
inc
cmpsb
xchg
aas
pop
mov
loope
leave
out
mov
dec
cmpsl
xchg
mov
out
add
mov
pop
cmpsb
push
mov
ss
pop
cmpsl
scas
outsb
mov
loope
mov
sti
icebp
cmp
gs
fiaddl
or
cwtl
in
mov
sti
fists
sbbb
dec
pop
push
clc
xor
in
imull
jmp
mov
mov
xor
push
sarl
adc
addr16
ret
mov
loop
and
sub
mov
mov
test
add
jmp
lahf
out
pop
sbb
scas
mov
add
jge
jb
push
movsb
cmc
jge
aas
sbb
clc
mov
push
in
mov
rclb
push
enter
fimuls
xchg
jmp
push
jnp
pop
fs
adc
imul
sbb
inc
cmpsb
mov
lea
cmp
sti
mov
lea
leave
psubsw
ljmp
dec
xchg
or
sbb
or
sub
dec
stc
popa
aad
les
sub
mov
cld
jp
push
jb
stc
jne
in
pcmpeqw
int
mov
sbb
les
push
cs
bound
ret
push
hlt
xchg
out
inc
mov
lea
sub
cmp
leave
iret
jo
inc
popl
mov
loopne
notl
pop
cltd
nop
cmpsb
fwait
add
inc
sbb
mov
jbe
loop
push
push
push
aad
jb
adc
test
mov
std
lret
subl
xchg
dec
lea
jecxz
sbb
pop
cmpsb
jne
scas
dec
loopne
cmp
movsl
stc
adc
or
push
imul
ljmp
mov
xor
adc
sahf
sub
mov
jmp
pop
xchg
sub
nop
addr16
and
sbbb
add
popa
pop
stos
pushf
cmpsb
mov
clc
mov
fldenv
sbb
inc
sti
mov
iret
jne
js
andb
pop
xchg
push
pop
test
pop
std
jg
cld
aas
cwtl
jecxz
ds
ficomps
leave
push
dec
iret
stos
imul
push
cli
jo
xor
ljmp
sub
push
jb
xor
lea
popf
pop
rcrl
xchg
mov
mov
sub
mov
xor
cmp
mov
mov
adc
nop
arpl
or
shrl
scas
or
mov
and
in
sarb
mov
pop
fstl
lret
pop
clc
jmp
shrl
fisubl
xor
cmp
sarb
adc
adc
inc
pop
mov
add
add
sti
scas
pop
dec
mov
in
mov
test
jbe
xor
shr
mov
std
add
in
lret
fsubrs
add
xchg
mov
mov
push
cmpsl
mov
lret
aad
add
imul
mov
addr16
push
add
fdivrs
jbe
sbb
dec
cltd
out
filds
xchg
jge
jl
add
adc
mov
int3
xchg
lahf
out
sub
push
int
mov
push
pop
cmpsb
xor
bound
mov
lea
or
js
scas
sarl
xor
lds
lcall
ljmp
mov
adc
mov
jns
push
lds
std
lea
mov
mov
or
negb
cs
dec
sbb
ret
sbb
gs
xlat
ficoms
inc
push
fs
popa
movsb
scas
ja
push
enter
pop
sbb
aam
testl
dec
mov
rcr
xchg
daa
cmpsl
cmpsb
arpl
inc
jge
loope
imul
push
stos
mov
adc
fwait
xchg
es
rorl
jecxz
dec
subb
mov
or
cmp
outsb
sub
adc
mov
daa
sub
imul
pushf
sub
add
fisubl
addb
aaa
std
pop
loop
jecxz
shr
and
pop
test
and
push
insb
gs
push
mov
cld
xchg
fcoms
adc
sahf
add
push
sahf
jb
icebp
sub
loopne
repz
pop
xor
cmc
in
sbb
sub
pop
mulb
mov
jmp
jp
aas
loope
pop
cmc
movb
sbb
pop
and
fnstenv
sbb
pushf
shll
insl
scas
and
sbbl
stc
push
push
stos
cmp
stos
mov
popf
cltd
sti
add
andb
ret
dec
mov
sarb
jb
pop
jo
mov
iret
jns
call
cli
xorl
cmp
test
mov
repnz
mov
out
and
inc
scas
fcoms
lea
jl
push
lods
jnp
leave
aad
jbe
test
iret
mov
pop
pop
mov
test
je
aad
jl
add
dec
rcr
into
stos
or
xchg
mov
mov
aas
cwtl
dec
fwait
or
xor
xor
mov
pop
sub
out
fstps
addr16
xadd
jg
mov
add
xchg
das
dec
mov
fisubrl
loopne
fcoml
jb
jge
xchg
xlat
pop
xchg
mov
jae
ljmp
mov
push
mov
daa
inc
stc
lahf
in
es
inc
add
lea
sti
aaa
pop
pusha
bound
pop
jo
push
mov
inc
mov
out
or
xor
aas
jle
jmp
xchg
sti
mov
jb
xor
arpl
ret
xor
shrb
cmpsl
jmp
cmp
jmp
popf
sbb
xchg
lret
jne,pt
mov
push
mov
xchg
pop
xchg
daa
mov
lock
cmp
aad
fnstenv
add
xor
and
cmp
add
and
insl
movsl
into
sarl
mov
push
leave
lcall
mov
adc
adc
mov
into
out
mov
pusha
das
shlb
push
cmp
cmp
inc
sub
sti
fcom
ja
dec
pop
aaa
pop
js
push
jo
mov
test
iret
jmp
mov
or
jmp
jle
cltd
mov
pop
sub
mov
mov
insl
xor
cmp
orl
or
push
pushf
stos
pop
add
jmp
in
jbe
cmp
xchg
int3
in
push
fs
das
mov
add
push
dec
pop
push
inc
inc
pop
aas
mov
testl
dec
daa
adc
mov
adc
mov
inc
and
dec
sub
mov
sub
pop
push
cs
cmp
repnz
jne
jns
push
pop
pop
fstpt
push
sub
bound
dec
jge
and
mov
aam
pop
je
xchg
pop
int3
cmpsb
in
add
mov
arpl
adc
jnp
adc
cmc
popf
add
xchg
and
pop
inc
cmc
loop
test
ret
jecxz,pn
loopne
xor
cwtl
dec
jae
popf
or
mov
mov
daa
je
sub
mov
pushf
pop
repz
or
adc
inc
push
inc
push
cltd
xchg
stos
adc
into
sub
adc
inc
fs
repz
movsl
lock
adc
xor
sbbl
pop
and
and
addr16
or
pop
mov
repnz
icebp
stc
outsb
call
xor
adc
addr16
mov
lds
fisubrl
xor
cmpsb
movsb
dec
sarl
mov
cmp
fidivl
inc
fucomp
fildll
shlb
test
lret
jnp
mov
sbb
ret
cmp
ds
pusha
mov
cmpsl
push
in
mov
mov
loope
fwait
enter
mov
inc
bound
fisubs
jae
cmpsl
inc
and
mov
adc
or
mov
notl
pop
inc
or
and
lret
xchg
loop
dec
sub
mov
mov
mov
sahf
pop
mov
jge
lahf
or
jae
aas
push
mov
push
aas
jae
das
xor
jp
lods
movsl
push
mov
or
out
loop
test
aad
iret
das
aas
or
xchg
sbb
mov
xor
xchg
push
cs
mov
mov
sbb
jb
and
inc
cmc
test
lcall
jb
xlat
stos
int3
jnp
mov
ret
push
sti
cmp
es
push
xor
jns
add
mov
in
ljmp
popa
mov
imul
sub
sbb
test
enter
push
scas
add
jno
jmp
sbb
popf
cs
cmp
pop
movsb
mov
inc
jbe
popf
cmp
out
or
mov
mov
jmp
addr16
jecxz
and
aas
mov
repnz
clc
mov
sub
fs
mov
repz
and
daa
aaa
fistpll
adc
jae
pop
mov
sub
call
outsb
iret
sub
subl
adc
lret
jmp
std
mov
mov
sub
xor
jp
fwait
mov
pop
mov
xor
mov
and
and
int3
pop
outsl
jno
enter
lcall
pop
notb
fsubp
lods
gs
and
das
daa
ljmp
mov
sub
test
scas
jle
mov
addr16
sub
out
add
jg
mov
repz
jp
sbb
xchg
hlt
pop
outsb
lcall
mov
mov
push
mov
cmp
pop
test
sbb
aad
push
or
out
sub
decb
xchg
fimuls
pop
fsubrp
add
pusha
lds
cmc
or
push
test
xor
mov
or
add
subb
push
mov
gs
bound
cs
nop
xchg
mov
jnp
pop
inc
out
int
xor
rclb
jp
pop
fwait
mov
mov
and
xor
inc
loop
inc
push
inc
or
mov
cld
xchg
rorb
sahf
lds
pop
ret
jge,pt
loope
rolb
and
popf
test
lret
icebp
fwait
and
ret
scas
fwait
cmpl
in
pop
or
push
sti
pop
and
in
rcrb
out
es
pop
bound
outsl
scas
cmp
push
mov
mov
mov
shll
jnp
and
xchg
xchg
addr16
cs
iret
fs
or
inc
mov
add
push
pusha
inc
mov
jno
test
add
mov
jecxz
jp
mov
sbb
aaa
sti
popf
mov
ret
int
out
cmp
and
lock
sbbb
and
stos
xchg
mov
push
mov
mov
xchg
inc
xor
fdivr
sbb
mov
ss
jmp
ja
adc
sub
vpinsrw
call
xchg
add
jmp
or
ljmp
out
dec
xchg
fs
or
push
pop
xchg
js,pt
mov
pusha
aas
pop
push
xlat
adc
mov
add
inc
mov
lcall
mov
mov
roll
mov
sti
dec
in
pop
cmp
pop
pop
shrb
enter
xor
mov
jecxz
mov
jnp
repnz
inc
push
mov
push
xchg
cmpsl
or
ss
or
mov
add
popa
rcr
insl
mov
mov
and
cmp
repnz
fnstenv
ja
movsl
bound
cmc
pop
add
adc
roll
movsb
fbstp
movsb
sub
iret
xor
js
xchg
pop
inc
cmp
pusha
xchg
or
xchg
ds
in
movaps
push
mov
xchg
pop
ljmp
dec
cmp
aaa
or
and
mov
ss
push
add
push
mov
fcompl
fisttpll
ss
cld
xlat
dec
les
or
adc
pop
test
cmc
sbb
sbb
loope
lret
dec
cmp
xchg
mov
aaa
mov
pop
sbb
add
ljmp
add
jnp
mov
add
and
movl
pop
xchg
xor
add
shll
push
mov
mov
cmpsl
repnz
aad
push
cmp
das
sbb
cmpb
xchg
fisubs
cli
pop
inc
fdivrl
push
movsb
jmp
sub
xchg
cwtl
xor
adc
mov
negb
add
push
into
cs
jg
xor
cli
push
ret
test
xchg
inc
inc
push
push
push
mov
pop
mov
into
mov
popf
push
or
or
mov
rcrl
or
or
push
xor
rorl
std
sbb
dec
dec
push
dec
jne
mov
and
jecxz
xor
xor
es
lahf
jns
ss
dec
dec
cmp
mov
mov
cld
push
nop
xor
push
data16
mov
test
ret
adc
popa
push
aad
sbb
xor
mov
dec
imul
pop
scas
scas
mov
mov
sub
xor
pop
pop
sub
gs
lcall
mov
fisttps
test
gs
jo
hlt
jg
test
test
add
cltd
std
pop
inc
mov
in
leave
inc
into
and
stc
addr16
mov
int
and
push
sahf
xchg
xchg
mov
mov
add
es
dec
pop
push
cmp
mov
mov
xor
xor
xchg
enter
jle
nopl
jae
sbb
nop
fcoml
rol
mov
gs
xchg
in
subb
cmpb
aam
cs
or
into
inc
jno
xchg
mov
imul
and
std
inc
sub
lret
adc
dec
out
mov
out
jno
out
push
repz
jge
xor
xchg
clc
mov
mov
or
std
lods
popf
cmp
loop
test
test
test
movsl
jl
sbb
sbbb
sbb
hlt
mov
jl
push
cmp
xchg
or
cli
lea
inc
jecxz
pop
mov
xchg
sub
and
fcoml
mov
adc
mov
jmp
xor
pop
xchg
mov
inc
add
dec
data16
and
gs
jmp
cmp
push
adc
xchg
xchg
push
xchg
cli
shlb
rorl
lods
and
push
sbb
adcl
dec
mov
push
adc
decl
adc
aaa
mov
and
and
ljmp
sub
push
jnp
lret
or
loope
fwait
in
push
test
pop
inc
iret
push
repnz
shrb
xchg
inc
xor
cmp
sub
pushf
imul
jno
loopne
jns
sti
sub
jecxz
out
adc
scas
xor
dec
femms
push
push
sub
xor
lret
outsl
nop
in
adc
cmpsb
lahf
push
mov
adc
cli
fists
lahf
ja
sub
and
in
movsl
mov
inc
loope
pop
xchg
and
push
jmp
aad
push
push
mov
movsl
in
adc
pop
pop
xchg
popf
or
daa
stc
mov
mov
pusha
stos
ds
sub
push
shlb
mov
pop
xchg
dec
stos
arpl
push
push
mov
jne
movsb
mov
add
pop
imul
pop
adc
out
xor
hlt
jbe
les
test
cmpsl
adc
sbb
lods
xchg
pop
arpl
dec
icebp
movsb
xor
jecxz
or
popa
pop
adcb
enter
in
stos
and
fwait
push
fidivrl
fistl
or
xor
jmp
lock
and
xchg
cmp
loop
cmpsl
movsb
daa
jbe
sub
jmp
rclb
push
jl
lods
add
and
loopne
jg
pop
xchg
jo
sbb
int3
cltd
sbb
cmp
mov
mov
leave
lock
mov
scas
ficoml
mov
sbb
out
mov
repnz
jno
add
sub
sbb
mov
fisubrs
arpl
fnstcw
dec
out
test
pop
fimull
xchg
mov
adc
jle
insb
sbb
mov
jns
notb
mov
clc
int3
cmp
lods
inc
stos
xchg
mov
sahf
pop
adc
movl
dec
std
mov
stc
jg
xor
adc
sbb
mov
test
mov
mov
inc
test
out
imul
icebp
and
es
shrb
out
addr16
adc
mov
jb
sub
decb
mov
jecxz
xchg
cmp
clc
push
pop
push
push
fldl
mov
les
scas
cmc
sub
mov
fs
add
jl
daa
fdivrl
mov
add
roll
pop
dec
movsl
cmp
fnstenv
mov
fdivp
test
bound
dec
or
je
cmp
lock
pop
and
insb
idiv
fsubs
daa
mov
mov
fwait
jp
andl
and
je
ret
cmp
cli
cltd
sar
sub
jecxz
inc
pushf
movsb
and
daa
scas
and
rorl
idiv
js
les
test
pop
sub
daa
lret
push
sti
dec
jno
cli
out
cmp
cltd
test
shr
loope
inc
enter
mov
scas
sbb
cmp
repz
nop
dec
daa
adc
push
int3
adc
fwait
enter
jecxz
in
add
or
adc
fnstenv
inc
lcall
pop
lcall
ljmp
adc
mov
jl
fs
test
rorl
es
je
rcr
arpl
mov
lret
out
pusha
ja
outsl
xor
mov
imulb
out
pop
sub
sahf
xchg
loop
pop
les
mov
loope
imul
ss
sub
mov
inc
cltd
subb
lods
mov
mov
bound
les
push
lods
pop
iret
xor
push
pushf
mov
mov
inc
mov
inc
test
adc
popa
pop
mov
or
sub
xor
jmp
adc
inc
sahf
xchg
inc
sub
mov
and
push
mov
in
std
pop
lret
cltd
pop
xchg
mov
ror
mov
mov
lds
xorb
addr16
dec
pop
adcl
push
mov
inc
dec
sbb
lds
mov
movsb
outsl
sti
inc
xor
jae
and
sarb
jae
movsb
adc
adc
fldenv
bound
push
jb
sub
testb
dec
mov
aaa
testl
add
les
sti
mov
out
das
jmp
inc
pop
inc
sahf
call
sbb
outsb
js
loope
test
cmp
movsb
lds
and
jae
fisttpll
or
or
lret
jmp
mov
pop
icebp
adcb
sub
ja
push
lea
jae
addr16
jg
lret
sub
imul
outsb
xorb
out
add
xor
mov
push
mov
jecxz
mov
popa
enter
xchg
mov
int
call
pop
call
lcall
cltd
mulb
xchg
mov
stc
sbb
sti
daa
jle
mov
lahf
xchg
push
into
add
xchg
fsubs
addl
jmp
inc
testb
jmp
lcall
add
jb
adc
jmp
dec
adc
insl
das
repz
cwtl
mov
lods
mov
inc
jns
inc
add
add
inc
insb
sub
stos
test
iret
insl
bound
inc
pop
loop
add
ret
mov
in
or
lods
test
loop
addr16
push
cmp
xchg
lahf
mov
mov
or
xor
adc
inc
mov
call
jno
ret
mov
mov
cmp
pop
shrb
repz
xchg
dec
jo
pop
push
shl
xor
pop
or
pushf
push
insl
popl
sbb
repz
pop
pop
cmc
cmp
inc
mov
pop
inc
sub
jg
ror
mov
mov
idiv
or
les
out
sbb
sti
cmpsl
jb
inc
mov
repnz
cmp
aam
es
mov
add
cmc
pop
movsb
jns
or
popf
hlt
js
mov
push
loop
mov
inc
cmp
mov
into
xor
lods
push
sahf
cmc
add
pop
push
mov
ss
ret
pop
cmp
ds
cmp
push
jle
mov
sub
mov
sub
cmp
inc
push
dec
pop
mov
enter
ret
nop
add
sub
push
sub
mov
ror
sub
imul
jo
sub
adc
dec
jae
cs
cmp
sti
jo
mov
push
jg
mov
in
dec
movsb
imul
ja
pusha
xchg
rcrl
dec
and
dec
ss
cmc
mov
jle
scas
loope
roll
or
aad
push
les
aaa
pop
add
and
leave
sbb
push
and
scas
std
notb
ss
shll
push
or
adc
mov
lock
pusha
in
or
sub
xchg
int
popf
mov
pop
add
adc
ret
mov
jns
daa
sarl
mov
jge
mov
fmull
insb
in
xchg
inc
jne
inc
call
sbb
dec
jne
in
leave
shlb
stos
ds
ds
lret
shl
xor
imul
mov
sbb
sbb
sahf
xlat
call
or
pop
lret
mov
insb
test
in
jecxz
and
jp
aaa
repz
dec
mov
adc
mov
outsl
in
jo
mov
xchg
sar
xchg
js
outsb
js
cmp
adc
bound
addr16
into
cmp
add
sbb
cmp
cmpl
pop
repnz
fnstcw
in
lcall
mov
repz
test
push
inc
fcoms
lods
pop
lret
pop
cmp
add
cmc
lcall
rorb
notb
inc
stc
popa
inc
adc
enter
push
lods
cmp
jb
ret
lds
insb
int
push
es
adc
clc
lret
push
dec
push
outsl
int3
xor
or
jmp
ds
das
jge
pop
adc
outsl
dec
sub
add
rorl
or
and
ffreep
push
imul
outsb
outsl
push
adc
pop
xor
xor
sbb
jo
cmc
dec
aam
pop
mov
lcall
pusha
jae
mov
adc
dec
jmp
fcoms
stc
sbb
orb
pop
aas
jo
sub
movsl
mov
cmp
jae
or
repz
sbb
xchg
popf
test
add
imul
int3
pop
enter
sub
movsl
mov
daa
inc
hlt
loope
sti
push
cmpsb
dec
jmp
imul
mov
sbb
jbe
arpl
xchg
push
dec
stc
ljmp
pop
pop
pop
mov
fwait
add
punpcklwd
lahf
fs
ds
sub
fcoms
cmpps
scas
fldt
out
mov
xor
xor
ror
dec
pushf
mov
adc
mov
push
xor
cmc
sbb
add
pop
fstl
xchg
lods
sti
into
popa
push
inc
stos
sub
mov
lods
stos
nop
cltd
icebp
insl
adc
and
or
aas
lahf
or
pop
std
pop
jns
stos
xchg
or
pop
aam
sahf
push
or
and
lret
rorl
xchg
push
ja
dec
ss
aas
divb
into
imul
adc
add
test
cmpsl
ret
sbb
lret
adc
push
call
hlt
mov
daa
faddl
sbb
dec
sbb
shrb
js
cld
jecxz
mov
and
pop
out
ret
imul
push
add
mov
mov
sti
jbe
stos
decl
pop
sahf
mov
cmp
iret
std
inc
and
popa
push
leave
jg
push
ljmp
out
and
mov
push
xchg
push
aad
js
movsl
xor
or
cmp
cmp
push
sub
cltd
inc
inc
popf
ds
scas
jb
add
insb
inc
fnsave
addb
push
jno
mov
sub
lret
sub
shrl
inc
ret
orb
pop
add
in
aas
or
xchg
mov
clc
pusha
sbb
loopne
adc
cld
mov
adc
pop
push
ret
das
mov
cmc
repnz
icebp
out
dec
cld
inc
and
sahf
mov
mov
insb
negl
fwait
inc
jne
cmpsl
add
or
lods
cmc
or
movsl
int3
stos
jb
pushl
js
les
pop
sbb
push
and
mov
mov
or
push
popa
mov
xchg
jecxz
lahf
adc
test
add
fld
in
dec
addr16
das
rclb
aad
sahf
in
insb
ja
mov
mov
jno
adc
test
add
rolb
jns
mov
push
inc
pop
mov
or
cmp
sub
xchg
add
movsb
sbb
pop
fwait
inc
andl
push
xchg
stc
xlat
pushf
xor
add
lret
push
sub
mov
aam
dec
push
inc
sub
push
jge
fsubl
jns
int
stc
pop
dec
hlt
cmpsb
sbb
lock
decb
push
andb
add
add
mov
and
jnp
dec
repnz
lock
pop
stc
mov
add
push
stos
sahf
dec
inc
inc
jnp
loopne
dec
push
repnz
mov
xchg
pop
aad
inc
mov
push
ja
jbe
jmp
pop
add
xchg
mov
out
hlt
aad
pop
test
cmc
sbb
jg
mov
rep
ja
xchg
adc
les
adc
hlt
dec
push
out
inc
aaa
divl
jne
jg
in
dec
inc
iret
or
stc
xchg
lods
xchg
pop
stc
mov
mov
pop
ds
or
js
mov
cmp
lea
push
jmp
pop
test
cmp
das
or
mov
sahf
mov
add
mov
fldpi
into
stos
cmpsb
cmc
je
out
cmp
not
xchg
cmp
mov
cmp
lea
je
cmpl
aas
test
imul
mov
add
push
cmp
jge
out
mov
or
pop
mov
pop
inc
adc
lahf
loop
push
adc
idiv
cmp
data16
mov
inc
mov
sub
pusha
movsb
xlat
jp
push
push
sarb
mov
rcll
lcall
mov
test
je
scas
push
add
push
lahf
sti
dec
in
xchg
outsb
imul
xchg
jb
orb
sub
cmp
add
mov
sti
movsl
pop
adc
mov
jge
nop
push
mov
sub
jl
mov
push
adc
mov
push
fnstenv
adcl
adc
mov
inc
cltd
jnp
mov
cmpsl
adc
push
pop
pop
insb
std
bound
inc
push
and
rcll
jae
add
fsubrl
rcl
jl
mov
rol
clc
jns
ljmp
lret
arpl
xor
cli
mov
fdivp
and
dec
in
push
mul
jo
xor
and
ss
in
icebp
imul
pop
mov
out
jge
gs
mov
cmpsl
push
stos
ret
mov
mov
mov
jo
mov
bound
aad
in
testb
push
ret
mov
inc
fwait
push
mov
dec
pop
fisubrl
push
mov
imul
jne
in
pushf
and
movsl
aam
sbb
fldl
movsl
sub
add
inc
sub
xor
xor
mov
dec
out
pop
cmp
push
mov
stc
enter
test
aas
xor
inc
cmc
jne
imul
sti
rorb
adc
out
sub
push
jns
test
out
mov
in
std
xlat
push
mov
mov
or
shlb
arpl
cmpsl
loop
mov
sub
dec
jge
pop
adc
daa
mov
push
addl
lods
aad
in
sbb
mov
push
adc
adc
jae
xlat
loopne
cmp
xchg
xchg
sbbb
push
test
lods
cltd
pushf
test
sbb
fcomps
mov
jb
dec
adcl
mov
add
sbb
in
insl
in
and
aaa
stos
mov
out
mov
inc
stos
out
and
outsb
popf
or
cmp
pop
pop
add
dec
inc
dec
xchg
and
push
inc
addr16
int3
outsb
test
lock
mov
push
cwtl
mov
jbe
enter
sti
data16
enter
out
push
out
ja
push
cmpsb
enter
das
imul
fxch
into
cld
jns
in
sti
aaa
mov
xorl
push
sahf
iret
sub
cmpsl
mov
aaa
js
jle
repz
lods
aad
mov
and
adc
mov
jl
adc
push
dec
int3
mov
testb
cmp
pusha
inc
into
fwait
pop
xor
cltd
push
push
jmp
scas
sub
leave
xchg
mov
push
cmpsb
cmp
sub
cs
cmpsb
and
pop
mov
push
shlb
push
xchg
neg
test
je
add
ret
mov
cmc
mov
xlat
out
jmp
mov
mov
mov
or
rorl
cwtl
out
push
mov
cs
mov
jno
popa
les
mov
sbb
sub
addr16
out
xor
mov
xor
lods
xchg
shl
mov
jbe
jns
dec
sarl
sbb
cmp
lsl
pushf
pop
pop
je
inc
ret
mov
ljmp
data16
popf
ds
push
inc
std
in
cmp
das
lock
mov
push
inc
sti
sbb
inc
inc
sub
out
int
scas
lret
mov
cmp
xchg
movsl
aas
mov
and
mov
cld
xor
xchg
enter
jb
push
dec
iret
jmp
push
aaa
imul
mov
outsb
or
mov
popf
or
cld
lods
and
push
inc
inc
jno
mov
mov
lea
ds
jbe
cmp
cmpsb
or
push
sbb
sbb
xchg
xchg
xor
insl
fidivs
rcrb
adc
outsl
cmc
xor
cmpsl
mov
aas
aas
inc
inc
xor
loope
xchg
int3
repnz
sub
test
addr16
fcomps
fnstenv
xchg
mov
dec
push
adc
push
fstpt
jp
and
jecxz
xchg
arpl
lcall
lret
add
or
mov
neg
inc
jne
pop
mov
out
cmp
repnz
and
cwtl
sub
pop
cli
or
lret
out
mov
insb
mov
sahf
sub
jp
jg
div
jns
rolb
push
xchg
sahf
clc
outsb
insl
cmp
cmp
pop
lcall
mov
aas
xchg
repnz
out
ficoms
dec
mov
mov
and
and
mov
lods
je
sbb
jnp
mov
into
je
dec
jne
adc
arpl
pop
pop
aaa
jnp
sbb
stos
jnp
xlat
lea
fimuls
cmpsb
and
add
push
mov
sarl
mov
xchg
aas
mov
push
mov
movsb
mov
lds
sarb
dec
pop
shll
mov
scas
js
mov
imul
mov
pop
out
leave
out
inc
cmp
test
sahf
or
lret
sar
pop
pushl
push
pop
fdivp
mov
or
ret
mov
popl
ret
mov
inc
adc
jne
push
aad
pop
push
inc
ret
mov
test
adc
out
fldcw
addr16
in
push
stos
sub
lret
mov
bnd
push
fdivrs
repnz
or
dec
sub
sti
jp
dec
out
and
xor
jmp
pusha
cmp
mov
outsb
mov
js
inc
cli
inc
fs
inc
jns
adc
test
inc
outsl
fdiv
and
push
inc
jo
lds
mov
fbld
lods
mov
divl
push
es
mov
mov
push
pop
add
xchg
jge
jb
push
push
out
sbb
hlt
mov
xchg
pop
or
or
idiv
inc
in
arpl
cltd
cmp
jecxz
jb
fsubs
jle
mov
inc
push
xchg
sub
mov
sub
popf
jno
xchg
pop
jno
das
inc
jle
fistpll
jmp
out
pop
mov
fdivs
jbe
movsb
fwait
arpl
in
add
mov
xchg
and
mov
dec
stc
jns
test
gs
mov
mov
popa
mov
dec
js
lock
aad
mov
mov
iret
mov
or
pop
bound
push
dec
rcrl
or
and
push
in
and
frndint
ss
sbbb
imul
mov
std
sbb
xchg
push
mov
push
mov
fisubrl
je
sbb
stos
or
outsl
js
mov
mov
stos
loopne
lods
fs
sbb
or
cmp
xor
push
pop
push
das
cld
and
loopne
ret
pop
in
add
cmpsb
adc
mov
xor
fiaddl
sahf
and
and
cwtl
dec
fcomp
push
fidivrl
mov
out
xchg
sbb
lods
shr
and
addr16
frstor
sahf
jge
loop
cmp
test
xchg
cld
out
mov
mov
jecxz
hlt
stc
xor
sub
loope
pop
pop
pop
movsl
add
xor
shrb
pop
or
flds
and
mov
out
dec
pushf
mov
push
push
pop
stc
jle
fcomps
mov
and
shrb
pop
iret
repnz
loope
xor
repnz
add
fucom
loope
out
xor
mov
xor
jns
or
clc
arpl
xchg
inc
je
ret
add
adc
rorl
repz
fdivrs
mov
jbe
mov
cmp
lret
sub
cwtl
imul
js
and
or
je
faddp
xadd
andps
test
pop
in
ds
in
push
cmp
fidivl
inc
fcomps
mov
cmc
das
mov
enter
add
jb
insl
inc
ret
ss
ret
inc
sbb
je
adcl
mov
or
xchg
andl
insl
sub
xchg
lds
sbb
xor
popf
out
dec
jnp
cs
mov
jno
jb
inc
push
vpextrw
jno
jo
jo
cltd
lahf
loopne
cli
lret
cwtl
lds
in
fdivrl
sbb
push
push
push
inc
cmpsb
push
or
dec
push
push
daa
jno
loop
leave
addb
aam
fsubs
push
orl
jp
adc
mov
jmp
mov
lock
pop
xor
pushf
mov
dec
std
jmp
pop
test
inc
rcpps
mov
or
push
cmp
imul
scas
pop
roll
jb
adc
mov
repz
push
push
dec
add
adc
and
adc
jb
dec
mov
adc
es
xchg
push
movq
adc
inc
xchg
mov
push
xchg
mov
shrb
dec
lock
mov
inc
jl
repz
mov
and
xchg
xor
hlt
add
inc
incb
mov
lahf
sbb
and
adc
and
mov
mov
push
in
cld
xor
clc
sbb
mov
push
je
xchg
sbb
in
mov
js
rol
xor
scas
sti
xchg
cmpsb
jle
jl
inc
sarl
je
pop
sbb
out
add
daa
xor
das
mov
imul
cld
fsubp
jmp
sahf
pushf
push
mov
inc
mov
sbb
mov
or
or
jmp
test
push
sbb
mov
neg
mov
or
out
repz
fbld
xor
movsl
add
das
jg
or
cmp
insl
loopne
cmp
imul
mov
push
rolb
inc
call
lock
xchg
cmp
add
mov
pushf
adc
mov
into
adc
loopne
je
pushf
sahf
and
push
adc
push
addr16
test
xchg
sub
add
or
adc
mov
scas
rcr
push
sbb
test
mov
test
out
xchg
movsb
ljmp
outsl
mov
arpl
lea
jecxz
in
lcall
or
rcrb
stos
es
adc
rclb
popa
sub
mov
jns
jno
enter
xor
and
cwtl
out
mov
inc
push
cmp
or
cmp
pushf
ret
pop
mov
inc
and
lods
add
pop
sbb
lret
jmp
xchg
rol
pop
in
xchg
mov
dec
mov
adc
ret
lea
movsb
sbb
mov
cmp
push
loop
shl
mov
mov
or
pop
in
int
hlt
sbb
adc
push
and
xor
aas
sub
xchg
ret
iret
sahf
xchg
rol
sarl
mov
cmpb
mov
pushf
lock
mov
jg
enter
push
out
mov
pop
mov
mov
cwtl
in
int
mov
mov
mov
daa
fstps
mov
xor
xchg
aas
and
aaa
loop
xchg
mov
fistl
dec
sub
push
jne
test
pop
sbb
daa
je
adc
jbe
mov
outsb
nop
addr16
sti
pop
stos
mov
and
add
sbb
aam
lcall
mov
mov
lods
mov
xor
push
sti
call
pop
xlat
fistl
pop
sub
dec
repz
out
fisubrl
sub
scas
add
or
inc
out
das
int
pop
cmp
shlb
fwait
rolb
push
push
xchg
rclb
loopne
push
inc
mov
out
scas
call
jl
int
jge
cwtl
mov
or
addl
cld
cmp
adc
cmc
ljmp
pop
dec
push
aaa
mov
sahf
mov
inc
cwtl
lea
in
imul
js
jbe
sbb
dec
pop
jl
aad
adc
scas
xchg
xchg
pop
stc
aad
dec
int3
rolb
jg
data16
sub
incl
pushf
xchg
out
loope
int3
jbe
fcoml
addr16
adc
mov
jge
cmp
inc
adc
jl
and
xchg
je
stos
scas
imul
mov
cmpsb
pop
mov
inc
js
sbb
aam
add
shlb
stc
adc
cmpsl
xchg
sbb
int
or
add
cmp
xchg
or
int
andl
xchg
outsl
mov
jg
jmp
test
popf
or
xor
cli
mov
sbb
or
inc
mov
in
add
lds
aaa
jge
dec
push
or
fbstp
inc
ror
pushf
or
cli
cld
rcrl
in
and
xor
sahf
and
clc
xor
mov
xchg
fnstcw
lahf
int3
sbb
xchg
sub
je
jbe
aaa
push
inc
add
call
in
ds
leave
push
pop
sbb
aaa
lds
popf
jmp
sub
jmp
call
fldenv
mov
jg
pop
jmp
add
shlb
xor
inc
sub
aaa
cld
mov
cmp
mov
push
aam
xchg
es
xchg
bound
mov
xlat
outsb
fcomp
cld
pop
aaa
sbbb
mov
jno
add
insl
pop
fwait
mov
mov
mov
in
enter
inc
ss
imul
pop
cmp
pop
out
mov
mov
sub
adc
jmp
inc
repnz
jmp
das
sbb
add
pop
dec
leave
push
cmp
xlat
adc
mov
test
cwtl
xchg
push
popf
fwait
push
cmp
inc
push
iret
mov
and
xchg
bound
jns
push
div
leave
cmp
or
jb
inc
lahf
mov
pop
push
mov
mov
stos
xchg
clc
scas
fwait
lahf
lret
fcoml
push
popf
ds
ja
mov
dec
sbb
hlt
es
fdiv
in
pop
push
add
adc
cltd
dec
add
mov
adc
adc
enter
cltd
mov
loopne
jo
push
cltd
negb
xchg
data16
push
in
mov
lcall
lods
mov
fneni(8087
or
xchg
xorl
adc
xlat
inc
pop
inc
pop
push
adc
pop
add
jb
in
fsubrl
enter
sbb
stc
inc
testb
push
pop
test
xor
inc
add
sub
mov
mov
xor
insb
jns
dec
pop
xor
or
jns
jmp
rcrl
popf
jle
jno
sub
out
mov
cmpsl
and
pusha
cmp
pop
in
arpl
hlt
adc
jo
rcl
and
xchg
sub
xchg
mov
fcmovnu
incb
lret
in
fisttpll
inc
out
mul
mov
sub
mov
ficoml
lahf
xchg
mov
or
and
shlb
gs
movsb
lods
adc
xor
inc
leave
jecxz
das
jb
cmp
xor
push
roll
stc
dec
pop
cltd
xchg
mov
jae
sub
repz
clc
cs
push
inc
jae
pop
xor
int3
std
mov
dec
adc
push
test
sbb
std
mov
fisubl
rorl
cld
add
pop
dec
sbb
std
jmp
cmpsb
es
adc
aaa
scas
jp
fisubrs
xor
inc
sub
and
mov
and
jns
xor
test
or
incb
adc
outsl
fwait
jecxz
pusha
mov
sbb
fsubrl
imul
addr16
xor
xor
xchg
jns
loope
cld
lcall
out
or
pop
jae
jae
sbb
inc
xchg
loop
jns
sub
cmp
add
leave
fwait
outsb
inc
stc
mov
and
cwtl
push
in
mov
pop
lret
jbe
dec
xchg
inc
dec
pop
push
dec
xor
cmpsb
shr
scas
call
or
stc
jo
push
and
in
dec
inc
cmpsl
cmp
adcb
mov
sub
ljmp
pop
leave
cmp
stos
mov
mov
pop
stc
repnz
or
pop
ss
nop
dec
pop
sti
add
jo
aam
pop
movsb
lods
or
mov
icebp
mov
dec
push
and
xor
xor
cmp
mov
mov
xchg
hlt
and
fcmovnbe
jae
clc
inc
inc
ds
popf
jnp
cli
ret
push
mov
xlat
les
lahf
enter
sbb
les
mov
imul
std
in
inc
nop
mov
jge
and
sahf
xchg
cmp
sbb
adc
jb
cmp
mov
sub
es
ljmp
lret
mov
pop
stos
dec
psubw
in
adc
ret
push
in
movb
rclb
rcll
les
fcomi
insl
mov
fisttps
mov
xor
dec
mov
icebp
movsl
mov
mov
and
inc
out
gs
out
mov
adc
ds
xor
and
push
jnp
testl
push
pushf
pop
jmp
js
push
loopne
sarb
cmp
dec
lcall
in
xchg
lods
pop
cmc
stc
clc
nop
add
cmp
inc
mov
arpl
jecxz
out
cli
adc
sbb
xor
loopne
iret
cld
std
out
mov
pop
and
out
and
in
add
xchg
lea
call
push
out
das
xchg
mov
inc
pop
xchg
mov
mov
add
or
adc
or
dec
popf
cmp
add
fisubl
scas
test
iretw
mov
dec
xor
or
daa
mov
jns
adc
push
outsl
test
ret
inc
mov
push
push
pusha
sub
aaa
roll
pushf
sub
lret
push
jecxz
or
aas
sbb
fsubs
mov
repz
jne
push
scas
sti
loopne
loope
mov
cmp
xchg
jbe
jo
js
jp
pop
cmp
dec
test
xor
repnz
inc
mov
cltd
jnp
pop
or
imul
out
mov
dec
push
mov
mov
ss
int
xchg
push
out
sub
inc
push
mov
xor
mov
daa
xchg
xor
sbbl
fimull
in
fisubs
add
xchg
insb
pop
lods
insb
push
adc
dec
inc
or
jle
xchg
lods
aam
inc
inc
mov
ret
push
pop
xor
das
ror
jle
pop
or
fsubrl
sbb
scas
jg
push
dec
data16
icebp
loopne
add
xorb
mov
es
or
mov
mov
or
sbb
mov
mov
jnp
rcr
or
sti
pop
mov
push
int3
mov
repz
dec
enter
inc
or
xor
mov
aam
loop
in
and
out
add
mov
je
and
ja
add
jo
push
push
push
clc
inc
inc
jp
es
xor
stos
scas
and
or
inc
pop
dec
imul
enter
inc
mov
pop
scas
pop
pusha
out
movl
adc
out
shll
xchg
sbb
adc
movl
lahf
sub
inc
mov
loop
js
inc
rcll
sarl
push
in
push
mov
push
jp
inc
and
and
push
lret
cwtl
enter
mov
xlat
loopne
or
mov
or
jg
iret
std
sar
cld
jmp
add
outsl
xlat
cltd
inc
sub
cmp
mov
mov
filds
push
add
jmp
out
cmp
mov
clc
jp
xchg
ret
fs
xchg
pop
xchg
adc
rcrl
outsl
xchg
stos
loope
out
mov
xor
in
mov
adc
xor
mov
add
sub
jns,pn
mov
adc
test
repnz
jo
fs
pop
or
rcr
lea
xor
jne
cmp
clc
int3
sub
stos
int
repnz
push
pop
adcl
fmuls
dec
imul
data16
iret
add
js
data16
jp
pop
sbb
in
mov
ja
sbb
test
fisubrs
aas
jb
popf
push
add
lock
xchg
adc
rolb
add
or
mov
add
or
push
push
arpl
test
adc
inc
lods
jle
ffreep
xchg
jno
cmp
in
xor
iret
adc
xchg
repz
lds
or
test
mov
test
sbb
adc
fs
pop
lock
jne
dec
pop
push
stc
mov
loopne
dec
scas
test
test
push
dec
pop
sub
adc
in
lret
cs
dec
ret
ja
lret
cmp
lods
incb
push
mov
and
push
dec
push
movsl
rorb
xchg
push
push
mov
lret
jnp
jb
mov
and
mov
mov
stos
push
dec
gs
jo
js
jecxz
sbb
arpl
adc
sub
mov
jb
je
test
jne
jae
subps
add
adc
cmpsl
cmc
sub
std
std
dec
push
imul
pop
dec
xor
mov
std
hlt
adcl
stos
outsl
inc
repz
cld
mov
jg
test
pop
rorl
ja
push
lsl
mov
and
insl
lret
and
mov
movsb
test
sub
xorb
flds
into
das
push
mov
pusha
es
ds
jnp
xlat
aad
inc
and
scas
ret
cmp
outsl
into
xchg
adc
fnstenv
inc
ljmp
fucom
mov
lock
push
xor
cwtl
pop
dec
inc
ljmp
mov
pop
adc
and
jg
and
xchg
inc
outsb
test
adc
mov
xor
popa
shl
js
mov
arpl
or
cmc
mov
test
or
inc
inc
sub
add
push
mov
add
inc
hlt
fidivrs
loopne
mov
xchg
shll
int3
mov
hlt
imul
mov
call
push
ret
cmpsl
mov
and
out
and
mov
and
sub
push
dec
push
cmp
adc
mov
out
test
xor
xor
lret
lds
call
flds
nopl
xor
mov
mov
lcall
xchg
cltd
mov
insl
pop
inc
xchg
aas
outsb
out
cltd
fcmovnu
cld
cmpsb
lods
push
add
daa
mov
dec
push
imul
mov
in
aas
cmp
scas
sti
xchg
int3
cmpsl
jo
fidivrl
mov
mov
bsf
lret
cmp
aam
das
pop
adc
cltd
pop
cmc
negb
jo
ds
sub
dec
mov
xor
hlt
and
addr16
and
xchg
gs
adc
push
or
cmp
data16
jo
das
sbb
lds
les
aam
xlat
sbb
inc
pop
sahf
mov
cmp
emms
sub
pop
push
stos
push
jae
adc
ss
mov
add
int3
adc
xchg
lret
mov
aad
pop
mov
outsl
and
fneni(8087
mov
xor
xlat
and
mov
js
jge
cmp
gs
in
insb
adc
mov
cmp
std
jle
mov
dec
scas
lret
pop
out
ret
in
push
mov
push
push
pop
lock
cmp
pop
insl
test
into
sarb
leave
popa
lock
repz
pushf
cli
frstor
inc
mov
mov
cmc
push
adc
aad
icebp
push
mov
dec
xor
pushf
and
sub
sar
cmpsb
add
mov
ja
popa
dec
mov
out
out
cmp
dec
cmp
xchg
push
fdivrs
or
pop
test
outsb
jnp
inc
sub
push
pop
lret
adc
rsm
push
repz
scas
aad
stos
mov
mov
jmp
shrb
inc
inc
pushf
jns
add
lret
lods
icebp
roll
pop
mov
inc
test
popf
mov
test
sahf
scas
pop
mov
mov
out
mov
roll
imul
mov
xchg
jno
insb
mov
or
fldenv
jne
and
dec
scas
sub
mov
mov
dec
movsb
dec
inc
push
das
clc
repz
jnp
mov
jbe
sbb
test
jecxz
sub
ds
pop
push
jle
repz
jmp
test
mov
push
xor
imul
dec
sbb
inc
pop
icebp
sub
cltd
mov
sub
dec
xchg
xchg
sbb
stos
cmpsl
xchg
jbe
mov
fwait
xor
dec
ficompl
xor
pop
push
insl
insl
bound
mov
sub
and
pusha
out
xchg
pop
mov
pop
add
loope
out
add
into
pop
xor
and
xchg
lea
cmpsl
addb
inc
lea
xor
shrl
imul
shlb
and
and
loope
pop
aad
jecxz
fsubrs
xor
add
adc
and
adc
jae
in
and
sub
xor
or
stos
lcall
jl
cmpsb
sahf
pop
mov
repz
xchg
scas
cmp
xchg
dec
cmpsb
clc
in
inc
js
jge
sbb
mov
mov
mov
cli
cwtl
cli
cmp
mov
stos
outsb
mov
mov
es
add
dec
jae
imul
stos
push
fistpl
icebp
inc
cmpl
xchg
inc
fistps
in
ret
inc
jl
enter
out
imull
jns
pop
xchg
lods
push
inc
jns
addb
sti
insl
mov
imul
xchg
dec
jno
nop
addl
sahf
jae
vsubsd
and
mov
jl
mov
addr16
stos
in
push
lahf
cmpsb
fdivrl
jg
popa
imul
leave
fldenv
push
testb
adc
stos
xor
jl
jns
inc
aas
add
xchg
dec
sbb
cmc
pop
ljmp
or
inc
popa
cmc
pushl
dec
sbb
jb
pushf
scas
xchg
inc
rolb
stos
pop
mov
lret
jae
jg
dec
movsb
jmp
adc
notb
cmp
fisubl
gs
add
cmc
jns
xchg
push
add
mov
pushf
adc
int
adc
ret
ds
mov
insb
adc
negb
movsb
push
dec
ds
and
add
push
inc
insl
mov
add
in
outsb
stos
sbb
movsb
mov
cmpl
xor
outsl
fdivrs
xlat
xor
pop
es
xchg
sbbb
movsb
dec
and
arpl
add
inc
push
insb
xchg
repnz
cmp
hlt
sbb
sub
push
fwait
lea
loope
movsl
inc
aaa
ret
mov
and
jmp
insl
lea
cli
fdiv
loop
mov
and
fucomp
shlb
sub
and
mov
lret
int
fisttpl
push
fst
xchg
pop
cmpsl
push
add
ret
enter
cmpsb
aaa
mov
xlat
xor
jo
xor
cmpsb
fbld
push
push
and
sbb
inc
mov
in
sbb
into
jb
mov
imul
cmp
fmul
and
cmp
fisttps
es
dec
test
test
push
mov
fwait
sub
sbb
loop
dec
stc
ss
or
sbb
pop
cmp
jge
xor
in
xor
repz
adc
dec
mov
cmpsl
xorb
or
sub
lock
xor
std
bound
cmc
mov
movsl
push
stos
sti
inc
push
xchg
sbb
cld
shll
sbb
cmp
loope
mov
push
mov
add
cmpsb
pop
sub
call
xor
xchg
jae
clc
mov
cltd
push
sub
or
jmp
jecxz
cmp
lret
sub
ljmp
or
dec
push
repnz
ss
sbb
lret
insb
jmp
pushf
jecxz
test
hlt
sub
shl
ficoms
test
out
push
xor
push
dec
fldz
adc
fcmovnu
aas
repnz
mov
movsb
test
cltd
mov
and
xor
mov
adcb
jno
add
jae
xchg
lds
inc
sbb
xchg
insb
or
out
nop
jp
mov
adc
popa
push
and
addr16
nop
mov
bnd
pop
inc
push
sbb
add
test
iret
je
in
lods
enter
mov
pop
lds
iret
add
inc
test
fs
or
lcall
dec
mov
xlat
cwtl
cs
fldt
jo
add
xor
icebp
inc
xchg
and
cmc
js,pn
and
adc
dec
sbb
fcom
imul
adc
js
add
jne
cmp
ss
pop
push
jl
inc
std
cmpsb
cmp
fwait
pop
sub
xor
es
or
addr16
cli
inc
add
cmp
clc
insb
push
jne
and
in
push
lret
bnd
fnstenv
sub
xchg
outsb
das
xor
outsb
aam
sti
jecxz
out
xchg
cmp
or
insb
in
dec
sbb
je
gs
rolb
adc
push
and
jnp
cli
or
out
and
cmp
pop
push
scas
popa
pop
jb
shlb
dec
cmovs
cmpl
outsb
jbe
pop
loopne
fisubs
and
mov
clc
in
out
mov
iret
mov
pop
scas
adc
fdivrl
sbb
adc
add
add
xor
ret
sub
add
or
leave
inc
data16
lret
cmpsl
pop
jbe
pop
dec
repz
jb
cmp
popa
sub
jbe
xchg
iret
add
pop
jae
xor
xchg
insb
jbe
xor
and
push
ja
pop
outsl
fidivs
jns
mov
ds
add
js
sub
fildll
clc
mov
pop
cmc
jne
repnz
jecxz
jo
or
outsl
pop
mov
dec
pop
roll
repnz
js
dec
lcall
fistpl
jbe
pop
lock
push
sbb
add
orl
or
repz
cmpsb
mov
cwtl
stc
push
loope
arpl
aaa
jge
sbb
mov
imul
fisubrl
adc
xchg
inc
fwait
scas
and
out
mov
lods
and
data16
push
lahf
and
xchg
scas
push
xor
sbb
fs
push
push
lock
popf
push
popa
jae
scas
dec
insl
sbb
cmc
fwait
shrb
mov
cmpsb
pop
push
inc
xacquire
aaa
iret
in
mov
pop
mov
cmp
orb
and
add
cmpl
loop
push
imul
hlt
xor
xlat
xor
filds
push
lcall
pop
xchg
data16
lcall
push
fisubs
sbb
push
inc
jbe
dec
mov
cmp
adc
mov
dec
out
sbb
jns
lods
cmp
adc
jbe
mov
bound
mov
mov
lods
sbb
mov
cmp
stos
sbb
xor
mov
sbb
arpl
test
sbb
xchg
push
pushf
addb
insb
in
push
jnp
pop
fs
imul
mov
xor
jge
js
jae
dec
stos
sbb
loope
ret
adc
inc
mov
push
pushf
cmp
push
and
cs
adc
sahf
lret
xchg
mov
dec
cmp
push
cmp
or
push
loope
icebp
popf
mov
jns
test
movsl
mov
repnz
pop
pop
das
mov
stos
loope
mov
cmpsl
int
and
imul
mov
add
negl
stos
and
call
fmull
das
data16
gs
leave
fdivr
mov
dec
add
test
daa
add
stos
repnz
jg
repz
xchg
repnz
cmp
add
mov
je
clts
add
add
ja
test
jmp
or
pop
xchg
cmpsb
and
push
repz
aas
in
and
cld
addl
inc
nop
out
and
cmc
and
nop
stos
out
mov
and
loopne
lss
enter
shll
rcll
mov
sub
inc
sbb
leave
stc
les
xchg
inc
jg
stos
jns
js
sub
rclb
xor
jne
dec
jp
fsub
int3
xchg
mov
inc
ret
mov
inc
mov
inc
shlb
jno
daa
xor
push
mov
mov
jp
int3
lods
rcll
jne
push
sbb
subl
mov
rcrl
hlt
fwait
xchg
push
pop
aas
jns
pop
pslld
std
mov
lret
and
ret
fs
adc
xlat
test
mov
xchg
out
pop
repz
inc
adc
sub
inc
push
in
repnz
jae
mov
iret
push
andb
add
mov
push
pop
sarl
hlt
arpl
ficoml
adc
pop
and
int
sarb
fs
dec
imul
icebp
mov
out
pop
mov
iret
push
adc
sbb
xor
scas
aaa
cmp
pop
xchg
jno
adc
test
push
bound
xchg
inc
mov
or
mov
adc
xor
fwait
push
push
fwait
ljmp
inc
jle
jno
lods
out
es
adc
daa
sbb
bound
dec
loope
das
insb
pop
adcb
sbb
push
std
stc
xor
out
mov
sub
xchg
jmp
jmp
loope
hlt
leave
mov
xchg
sub
jns
dec
clc
sub
ljmp
insb
jge
mov
pop
push
into
movsb
aaa
xchg
lret
sbb
dec
outsb
bound
xlat
sbb
jo
jmp
aad
xor
out
mov
jle
popf
lea
sti
fistl
cmp
iret
outsb
push
pop
dec
jae
stos
dec
cmp
mov
mov
sub
fninit
or
adc
push
mov
jp
movsl
adc
pop
xlat
pop
xchg
es
xchg
sub
sbb
add
pop
xlat
aad
bound
rcl
mov
adc
pop
xchg
in
push
insb
or
iret
pusha
mov
jle
cmp
in
stos
outsb
dec
mov
push
sub
jbe
and
and
push
imul
pop
xor
jecxz
mov
mov
dec
pop
cmp
imul
xor
xchg
or
adc
movlps
sbb
jmp
push
data16
mull
cmp
add
or
jmp
gs
jb
sahf
hlt
stc
imul
push
xor
daa
adc
jmp
xchg
add
test
mov
negb
pop
loope
pop
inc
sti
inc
hlt
loope
imul
lret
dec
test
xor
dec
lcall
inc
mov
mov
dec
xor
rcrl
mov
inc
lret
daa
test
add
leave
cmp
out
stc
xchg
inc
mov
cmp
push
enter
dec
in
in
and
push
mov
sub
xchg
cmp
dec
repnz
pop
cltd
push
xchg
loope
movsb
add
jo
or
inc
mov
cmp
adc
adc
jbe
fwait
lret
test
fisubl
out
mov
gs
cmp
xchg
leave
mov
push
xchg
inc
mov
daa
adc
shlb
in
out
fucomp
outsb
cmp
push
scas
lahf
jecxz
addl
and
in
icebp
fstps
pusha
lds
push
or
xor
loop
adc
and
pop
mov
jno
dec
pop
aaa
xor
fnstsw
pop
mov
mov
xchg
sbb
insl
jmp
in
push
roll
mov
mov
ret
sub
dec
repz
push
or
shll
mov
nop
enter
cmc
mov
fcompl
loop
jnp
int3
mov
xchg
rcrl
data16
jnp
das
push
xor
mov
out
aas
out
scas
push
push
cli
pop
int
mov
repnz
stos
ds
pushf
xchg
movsl
mov
dec
repz
fdivrl
adc
add
mov
dec
call
clc
js
mov
adc
dec
out
sbb
ss
mov
data16
das
jge
gs
imul
fucomp
sti
adc
es
and
add
repz
dec
movsb
movsb
les
in
pop
xchg
inc
testb
nop
lcall
cwtl
andl
mov
adc
xor
fdivrs
imul
mov
xor
call
fistl
bound
mov
mov
and
cltd
rol
pop
icebp
cmpsl
inc
push
mov
and
ret
hlt
dec
sub
lret
sbb
aaa
fisubl
push
sbb
sti
or
incb
fsts
and
icebp
insb
orps
jp
fistl
scas
inc
sbb
mov
and
aas
pushf
rorb
sub
inc
cmp
fadds
sahf
lret
in
pop
lods
inc
xor
mov
and
cwtl
jne
mov
ss
orb
ret
int3
adc
xchg
imul
or
add
cmpsl
cmp
dec
fidivl
cld
or
loopne
sbb
jecxz
idiv
movntq
xchg
mov
lret
sbb
mov
aad
fnstsw
fidivrl
xchg
or
lcall
sub
idivl
mov
push
mov
and
insl
call
inc
sbb
fstpl
pop
aad
sub
push
shrb
fisubs
dec
jge
ja
push
push
push
arpl
adc
call
push
subl
mov
shll
lahf
add
or
and
mov
dec
push
mov
mov
mov
mov
inc
mov
mov
inc
pop
mov
fstpl
daa
mov
xchg
cmc
and
push
int
adc
push
push
xor
push
inc
lret
or
cmc
fildll
inc
sti
cmp
xchg
stos
addr16
inc
mov
in
mov
rcll
fcomps
js
loope
aam
push
test
insl
pop
ja
fimuls
ret
gs
divb
es
adc
stc
movsb
in
nop
mov
xlat
imul
sbbl
dec
daa
xchg
mov
add
fiaddl
jp
adc
or
repnz
add
out
or
sahf
add
sbb
mov
sbb
sbb
pop
call
shrb
sahf
sahf
loop
xchg
mov
sarb
out
or
inc
imul
fstps
loope
out
adc
fcoms
push
lret
push
cwtl
push
pop
xchg
pop
mov
xchg
adc
mov
ds
data16
in
nop
xchg
jae
or
add
imul
fcoml
pop
out
cli
jp
pop
out
hlt
adcb
pop
cs
pop
mov
pop
cltd
daa
test
je
xchg
lret
clc
out
dec
test
and
cld
xor
adc
xlat
mov
js
dec
std
and
or
int
mov
cmp
adc
mov
jl
sub
lret
cltd
js
arpl
xchg
inc
push
mov
icebp
lock
jb
fld
pop
icebp
xor
mov
adc
mov
cmp
xchg
push
std
push
pop
jb
push
dec
dec
dec
std
inc
loopne
icebp
dec
ds
lea
sbb
mov
jne
pop
cld
sbb
jne
insl
xor
xchg
mov
and
dec
push
and
and
mov
pop
jno
mov
xor
mov
sahf
lret
mov
es
mov
jmp
subl
dec
fisubl
pusha
mov
mov
jp
jge
mov
cld
int
or
add
mov
adc
js
add
jecxz
inc
fnsave
xchg
xor
inc
jle
xchg
cmp
mov
push
cmp
pop
int
mov
je
adcb
test
in
jne
jno
fwait
insb
adc
cmc
xlat
mov
test
cli
ds
decb
dec
xchg
sub
ja
jbe
cmp
ljmp
mov
adc
in
dec
int3
add
pop
xor
gs
pop
add
xchg
xchg
mov
push
xchg
cli
clc
mov
aam
mov
notb
fldcw
jbe
push
cmp
aad
and
aas
lock
jecxz
push
push
int
or
aas
inc
pop
xor
adc
sub
stos
mov
js
fisubl
mov
push
jbe
int3
inc
daa
lret
or
inc
mov
pusha
mov
mov
mov
lock
js
mov
cld
ficomps
loope
and
xchg
jb
adc
orb
imul
mov
pop
clc
sbb
mov
arpl
daa
imull
xchg
faddl
pop
cwtl
xor
jecxz
fildll
jns
ret
cmp
movsl
sub
and
add
fwait
cltd
jle
mov
ds
pop
adc
out
out
fcmovbe
bound
add
mov
inc
sbb
test
add
in
sub
add
inc
xchg
push
xor
test
andl
dec
aaa
xor
ljmp
jne
mov
es
movsb
insb
sbb
jnp
stos
idivb
cmp
pop
test
mov
es
lods
mov
loopne
repz
push
mov
aam
outsb
insb
cmp
loope
xchg
push
insl
and
add
cmp
mov
xchg
lds
sbb
sub
cmc
dec
push
pop
cld
adc
lock
js
sub
add
lea
enter
movb
push
and
mov
sub
push
dec
jle
inc
sbb
mov
sti
popf
push
cmc
add
lea
test
dec
jge
je
cmp
fdivrs
sub
rcrl
dec
pop
sbb
sub
call
cmc
sti
ljmp
sub
cltd
jmp
ljmp
shlb
dec
sub
xchg
scas
and
sbb
push
mov
xchg
lods
sub
push
xchg
adc
or
jecxz
push
addr16
inc
jnp
or
mov
out
js
inc
loopne
fildl
outsb
and
push
mov
mov
arpl
int
filds
mov
mov
sarl
sbb
out
cs
bound
xor
es
in
ss
je
mov
pop
lcall
clc
insb
aam
adc
pop
call
icebp
jbe
sbb
fcomip
rcll
mov
lods
mov
lret
cmp
inc
mov
xchg
jns
into
sub
push
inc
mov
pushf
cmp
add
xchg
inc
int
xlat
mov
fs
pop
das
aad
inc
add
cmp
mov
pop
lcall
push
jg
mov
push
loop
push
push
mov
inc
xor
adc
inc
push
stc
ret
hlt
push
mov
ss
mov
mov
pusha
iret
dec
repz
lods
ret
sbb
into
lods
popa
sub
call
mov
sub
mov
inc
push
flds
cld
aam
in
cmp
mov
inc
add
cmpsl
fnsave
jbe
mov
jp
adcl
xchg
stos
leave
inc
dec
shl
lcall
fcmovnu
lock
xor
enter
sbb
sub
out
cmpl
fdivrs
and
push
out
ds
lahf
pop
jb
pop
sahf
mov
dec
push
add
insl
gs
sub
push
inc
inc
mov
stc
popf
or
xor
jmp
push
scas
lods
xchg
or
and
mov
jae
jmp
adc
jg
or
jp
cmpsl
mov
call
sarb
aam
out
push
mov
inc
and
mov
dec
lea
arpl
sbbl
loopne
cmc
adc
mov
dec
add
not
dec
pop
mov
popf
jl
dec
adc
mov
add
jno
lods
xchg
cmp
inc
jo
in
pop
int
mov
out
mov
cmp
stc
push
fisubs
in
mov
dec
lock
push
pop
sub
pop
popa
out
inc
pop
cmp
pop
jle
dec
inc
shl
adcb
cmpsb
cmp
pop
lea
ja
es
inc
in
andl
leave
dec
cmp
lahf
mov
jnp
xchg
xor
lahf
mov
lock
mov
adc
call
pop
sub
add
pop
lds
inc
ret
mov
jae
cli
movl
mov
ret
push
jp
in
lods
insb
and
and
or
inc
push
sbbl
add
and
xor
sub
subb
fnstsw
jbe
loope
fstps
pop
hlt
nop
outsb
mov
outsb
lret
fmull
and
je
stos
mov
cmp
or
lcall
jmp
jno
or
adc
lret
lret
repz
js
cmp
pop
outsl
xor
mov
push
xchg
fadds
inc
mov
dec
jne
pop
addl
cmp
int
fisubrl
in
popa
cmp
pop
mov
dec
orb
pop
dec
dec
imul
push
pop
xchg
std
outsb
aaa
dec
jecxz
inc
pop
and
jl
pop
sbb
je
decl
fs
nop
stos
sbb
f2xm1
sbb
loopne
xor
imul
ret
lret
cld
cwtl
loopne
into
push
push
icebp
xor
mov
ja
dec
jno
adc
ja
aam
movsb
xchg
mov
cmc
xchg
sub
loopne
lret
in
daa
lods
movsb
sbb
mov
mov
movsl
pop
push
icebp
insl
xor
jnp
sbb
lret
repnz
into
popf
jge
sbb
adc
mov
test
pop
fstps
xchg
ficompl
xchg
mov
int3
sub
jge
jl
pusha
mov
decb
push
daa
add
push
sub
fistpll
mov
in
push
xor
hlt
add
cli
pop
cmp
push
fcoms
aas
aad
sbb
xchg
xor
and
inc
pop
xchg
popa
mov
cmp
mov
mul
jbe
and
push
fndisi(8087
in
imul
mov
or
push
fildll
pop
scas
addr16
ds
or
popa
int
add
leave
push
add
pop
sub
bound
loope
pop
shrl
aas
xchg
cltd
adc
into
popa
cmp
xchg
xor
mov
call
jne
xchg
loope
mov
cmp
scas
jecxz
loopne
sbb
adc
ficoms
jge
jno
sbb
mov
scas
pop
sbbb
data16
out
xor
inc
in
mov
hlt
xor
out
cltd
imul
mov
mov
xchg
mov
enter
jmp
lds
jnp
add
ret
inc
imul
loope
mov
and
cmp
in
test
pop
mov
test
outsl
call
sbb
mov
mov
movsl
push
mov
cmp
adc
mov
jnp
push
lcall
shrl
mov
push
mov
inc
dec
hlt
cmp
pop
lods
mov
clc
arpl
adc
ret
push
sti
cli
xchg
imul
dec
mov
xchg
repnz
dec
mov
rolb
xchg
mov
cmpsl
push
mov
xor
sbb
in
add
xchg
sub
mov
in
inc
cmp
pop
es
jmp
inc
cwtl
cmp
out
leave
js
mov
adc
xchg
icebp
lock
nop
jns
loopne
jmp
push
add
or
mov
lods
sbb
test
push
mov
push
jmp
jl
out
stos
mov
and
cmp
jns
fcmovu
xchg
cmp
cmpsl
rcll
in
test
fnsave
xchg
aas
pop
sbb
sbb
pop
loopne
nop
cmp
mov
imul
es
xor
xchg
mov
nop
xchg
sbb
popa
push
ret
mov
lret
mov
lcall
into
xchg
mov
jl
push
nop
cwtl
mov
insb
sti
outsb
pop
and
push
pop
sti
dec
mull
fstpl
cmp
pushf
out
mov
filds
in
orl
push
cmp
mov
mov
outsl
nop
jns
ret
test
nop
aas
ljmp
sbb
add
inc
xchg
int3
movsb
pop
adc
sbb
mov
mov
movsb
pop
fucomp
push
dec
outsb
frstor
out
insb
push
das
mov
xor
les
sti
sti
pop
xor
mov
push
in
out
xchg
dec
fwait
pop
xchg
test
mov
inc
je
cs
fisubs
fcoms
dec
cmp
in
xchg
jns
and
mov
jecxz
je
shl
xor
pop
mov
in
out
adc
inc
add
and
into
movsl
scas
call
adcl
clc
xor
xor
push
out
dec
sub
fs
adc
pop
cmc
xchg
insb
and
arpl
inc
sbb
stos
inc
add
jmp
scas
inc
repz
lcall
popf
mov
pop
lock
icebp
mov
cmp
sbb
dec
sub
mov
dec
pop
out
mov
mov
mov
test
or
dec
and
mov
push
mov
inc
cmp
jecxz
add
fidivrs
subb
lret
pop
push
outsl
movsl
out
push
out
hlt
sti
fdiv
data16
lods
scas
cmp
pop
dec
psubusb
rolb
push
jg
stos
pop
call
sahf
in
pop
pop
hlt
mov
mov
mov
sbb
cmp
scas
add
movsl
loopne
push
loope
push
pop
es
ja
insb
outsb
sarb
call
sub
mov
pop
pop
pop
ror
or
cwtl
aaa
mov
lahf
pop
cwtl
push
xchg
sub
pop
inc
enter
jge
pop
sub
jo
shrb
adcb
subb
sub
stos
mov
inc
cmp
lret
mov
cmp
push
addr16
movsb
jecxz
insb
sub
adc
and
push
and
movsl
mov
sbb
push
add
test
xchg
leave
das
mov
enter
or
jle
add
inc
xor
fbstp
sub
call
pop
sbb
mov
jb
les
adc
inc
push
cmc
adc
hlt
pop
insb
iret
mov
int
xor
movsb
pcmpgtb
pop
movsl
cld
jmp
cmp
pop
push
and
fsub
xlat
mov
mov
stos
test
cltd
mov
cmc
inc
sti
jmp
addb
push
mov
inc
adc
pop
fmul
pop
push
loopne
movsl
add
xchg
mov
xor
lret
mov
mov
in
daa
xlat
and
cmp
adc
xor
fwait
aas
test
sub
ja
loop
sbb
inc
fucomi
mov
xchg
das
leave
mov
mov
mov
and
cmp
out
popa
pop
insl
pop
pop
outsb
in
push
lret
mov
sbb
fbld
or
and
shl
aad
xchg
inc
inc
push
int
xchg
int3
inc
lds
aad
mov
mov
mov
add
jne
mov
sti
adc
push
inc
idivb
ljmp
add
push
jne
inc
dec
jo
xor
push
rclb
gs
in
adc
shl
insb
xchg
fldenv
aaa
push
add
in
mov
dec
pop
jl
xchg
jnp
adc
mov
xchg
je
and
mov
xchg
mov
data16
ja
cmc
lahf
or
inc
lcall
dec
lret
push
sub
inc
pusha
loopne
mov
dec
mov
push
stc
ficomps
ss
movsl
mov
clc
lret
test
adc
sub
jg
push
aad
push
or
pop
mov
cmp
test
xchg
sbb
cmp
cmc
inc
int
mov
jecxz
jle
int3
jae
pop
pop
push
push
push
jb
or
cmp
cltd
jns
nop
neg
mov
dec
push
mov
rolb
jg
jne
inc
adc
fidivs
adc
push
jp
jl
cmp
es
jae
out
pop
emms
xor
inc
gs
int3
mov
pop
cmp
xchg
adc
adc
pushf
mov
dec
jo
mov
or
xor
add
dec
int
shll
js
cli
in
add
cli
aam
and
pop
adc
xor
pusha
sbb
ljmp
cld
out
dec
dec
push
xchg
xor
dec
or
sub
add
movsb
dec
jne
lret
call
out
mov
push
pop
test
or
dec
or
or
fldl
js
cmp
mov
sbb
xchg
into
loop
in
dec
sub
pop
sub
dec
pusha
push
mov
dec
pop
jns
mov
cltd
jbe
and
dec
movl
pop
pop
in
std
loope
inc
jle
adc
leave
aad
ja
in
xchg
sbb
and
subl
imull
xchg
outsl
icebp
std
lds
sub
mov
mov
rep
cmpsb
pop
jbe
clc
dec
cs
inc
aad
mov
std
pushf
sub
das
inc
xor
fcmovbe
mov
or
cmpsb
and
aam
or
pop
leave
stos
fists
jmp
and
pop
cli
idivl
call
xchg
xor
push
stos
insb
cmc
jno
not
lahf
notl
jns
ss
mov
cltd
mov
and
gs
dec
add
daa
pushf
test
stos
std
sub
pop
add
jmp
push
incb
lds
mov
push
shlb
mov
mov
nop
pop
test
ds
xchg
ds
cwtl
aad
pop
pop
and
cmpsb
test
adc
pop
sub
or
push
cwtl
sbb
dec
popf
cmpsb
adc
dec
push
les
cmp
arpl
jne
and
push
pop
leave
mov
loopne
inc
pop
sub
pop
adc
push
rcr
pop
fcmovnb
or
mov
mov
jae
xchg
pop
ds
pop
icebp
setno
btr
cwtl
push
shl
fwait
xchg
pop
mov
subb
add
mov
stc
mov
inc
mov
je
jecxz
mov
aas
fdivl
ret
repnz
mov
inc
jbe
or
jb
mov
xchg
push
loope
cmp
push
inc
fists
shrb
ds
jecxz
addr16
jne
pop
lds
and
cli
test
jns
sbb
mov
lods
add
xor
xor
mov
mov
mov
in
daa
xchg
mov
sub
dec
mov
xor
outsb
sbb
cld
cmp
clc
sbb
cwtl
sbb
pushf
sbb
ljmp
das
lds
flds
pxor
ret
negb
cmp
jno
dec
push
gs
lock
cmp
xlat
push
xchg
add
les
xchg
dec
je
bound
xor
outsb
sahf
les
addr16
jmp
gs
inc
ret
cs
std
push
mov
mov
addb
mov
cmp
push
lret
insl
mov
jnp
sbb
add
push
es
out
ret
push
sbbl
or
scas
jb
add
add
ljmp
pop
mov
inc
fstps
mov
xchg
fcmovbe
push
cmp
mov
push
inc
and
xchg
lods
sbb
or
cmpb
mov
pop
imul
jne
lods
dec
sub
sarb
and
mov
nop
cmp
lret
pop
or
or
or
xor
dec
xchg
pop
sbb
call
mov
or
pusha
fstpt
fcoms
mov
lret
pop
cmp
mov
push
sub
jl
out
push
mov
ljmp
mov
xchg
push
in
ss
les
inc
insb
ret
push
fwait
pushf
fildl
aad
in
mov
in
or
ljmp
outsb
imul
repnz
cmpsl
inc
outsb
shl
addr16
imul
and
xor
fimull
iret
lock
in
insl
mov
sbb
pushf
sub
pushf
aaa
ja
popf
stc
inc
jecxz
mov
xchg
push
fldcw
stc
cmp
in
fdivl
sub
mov
ret
mov
adc
mov
faddl
push
testb
iret
pop
mov
movsl
jecxz
inc
call
js
lods
sbb
push
cli
add
ja
sub
inc
test
add
lds
xor
movsb
mov
dec
mov
jns
cmp
mov
xchg
jge
fcmovbe
xlat
popa
dec
push
cmc
pop
fwait
cltd
outsb
push
pop
fs
call
inc
dec
ffreep
repnz
pop
rolb
nop
mov
cmp
or
movsb
and
jne
test
imul
addr16
or
jnp
xor
je
mov
pop
popa
sub
movsl
cmpsl
add
movsb
inc
jge
pushf
push
call
mov
sub
xchg
or
xchg
test
std
jmp
inc
xor
outsb
fwait
pushf
or
xchg
xchg
jb
mov
popa
loop
aam
cmp
ss
xor
shll
pop
lock
sbb
adc
pop
mov
pop
mov
adc
or
mov
jns
sub
push
sbb
rcll
hlt
mov
adc
nop
pop
aad
rol
repnz
fidivrl
push
xchg
mov
pop
das
and
adc
push
jo
das
cmp
or
scas
push
test
jecxz
adc
mov
ds
out
enter
movsl
cmpb
inc
and
cmpsb
jnp
filds
inc
testb
sub
out
loope
call
add
push
lods
dec
inc
pop
cmpsb
push
jge
aaa
icebp
jle
in
subl
cmp
sub
jge
test
jnp
es
in
sub
xchg
jbe
arpl
imul
daa
add
cmp
jmp
shl
popa
imul
xchg
and
jg
in
jmp
dec
xchg
movsl
outsb
cmc
bound
je
sbb
rolb
add
jge
ljmp
shr
mull
jns
out
mov
mov
or
xor
jbe
add
pop
and
pop
movsb
and
dec
cmp
pop
test
pop
sub
subl
sbb
adc
add
fsub
push
jnp
fs
int3
jg
js
xor
ficoms
sbb
jmp
cwtl
fistpll
push
stos
mov
roll
loopnew
mov
mull
mov
sbb
bound
insl
dec
pop
xchg
mov
imul
inc
pop
into
das
adc
in
mov
push
rolb
or
sbb
sub
pop
js
sarb
xor
and
sar
mov
dec
rolb
sub
stos
or
push
push
mov
dec
ret
fistl
mov
cmp
imul
fwait
fwait
add
insb
or
mov
pop
or
ror
loopne
inc
in
jns
and
icebp
jnp
lcall
lods
mov
xchg
inc
jnp
add
fcoms
hlt
insl
incl
in
pop
sbb
cmpsl
mov
or
leave
pop
adc
int
mov
dec
insl
flds
sub
pop
push
or
xor
cmp
sarb
movsb
mov
mov
sub
sahf
pop
ret
ret
mov
imul
xor
lods
ja
cmp
xchg
dec
ja
testl
lcall
sbbl
xchg
add
sbb
jl
lcall
add
lret
mov
loopne
or
mov
out
xchg
pop
pop
out
popa
xor
xchg
mov
or
adc
inc
or
push
frndint
sbb
and
cmp
and
push
dec
cltd
lret
out
pop
dec
cs
jne
xchg
icebp
faddl
cwtl
call
rcl
mov
popf
ja
out
jo
jmp
push
xor
push
loope
lock
popf
in
sbb
or
mov
xchg
cmpb
adc
mov
test
sub
and
pushl
sbb
xchg
cmp
lret
stos
stos
cltd
aaa
fildl
xchg
cwtl
sub
das
es
xor
and
push
sbb
sti
jp
cli
add
pop
test
aad
out
fwait
out
insl
push
fisubrl
icebp
mov
loopne
xchg
data16
pcmpgtb
pop
push
insb
shrb
fsubs
pop
mov
jae
push
or
mov
in
dec
leave
addr16
int
pop
insb
mov
or
shr
xorl
mov
enter
mov
add
cmp
jnp
sarb
dec
adc
xchg
or
bound
movsb
push
jmp
outsb
in
cmp
rclb
mov
cmp
jnp,pn
cwtl
adc
dec
sahf
iret
in
cld
mov
das
add
mov
pusha
xorl
cli
div
xor
dec
aad
cmp
mov
es
xor
sbb
shll
push
or
and
cld
rcl
jl
jb
mov
or
gs
add
aad
cmp
cmpsb
xchg
mov
ljmp
push
inc
shll
cli
xchg
jne
jne
imul
mov
sahf
test
subl
mov
mov
loop
xchg
push
push
push
lcall
push
sbb
popl
gs
inc
pusha
mov
xchg
sbb
xchg
sarb
mov
les
fs
mov
push
cmp
push
xchg
push
mov
and
add
test
mov
xor
pop
xor
orl
and
fistpll
leave
sub
push
xor
fnsave
aaa
repnz
adc
daa
jbe
in
outsl
leave
mov
push
in
xchg
ljmp
xchg
and
in
pop
xchg
lods
lcall
xor
test
test
out
loopne
shlb
sti
sub
sub
lcall
inc
daa
add
arpl
sbb
sbb
fcoml
mov
out
and
roll
sub
push
cmp
scas
lahf
push
std
adc
ss
or
adc
sarb
or
pop
lcall
adc
mov
sub
insb
inc
and
mov
push
xchg
push
adc
jmp
shlb
mov
lock
in
sbb
mov
insb
sbb
push
addl
jno
jg
jnp
sbb
lods
cmc
ret
xor
add
jecxz
daa
lds
cld
push
adcb
add
xchg
mov
xor
out
adc
jge
sub
bound
int
push
arpl
mov
sbb
adc
aas
mov
test
add
xor
leave
fistl
add
xchg
loopne
out
pop
stc
jo
dec
mov
cmc
mov
xchg
mov
pop
mov
and
mov
push
aas
cmp
test
mov
mov
data16
jl
push
cmc
sub
test
movsl
cmp
mov
mov
pop
push
jo
push
cmp
xor
int
sbb
rcrl
imul
adc
ds
loope
movsl
or
add
fidivrl
stos
inc
repnz
in
pop
adc
push
ja
ds
push
stos
jp
adc
popa
adc
sti
inc
pop
test
repnz
jl
mov
mov
inc
jmp
fisttpl
and
xchg
ljmp
cmp
pop
out
add
sub
outsb
imul
decl
test
xor
leave
push
mov
aad
cltd
jo
add
fdivs
lret
mov
push
push
mov
push
push
cwtl
clc
and
jbe
jp
pop
out
and
fsubrs
inc
js
out
mov
je
cltd
mov
adc
gs
cmp
stos
scas
dec
ss
pop
jae
pushl
mov
movsl
jg
lcall
stc
cs
outsb
xchg
xor
xor
daa
cwtl
mov
loop
push
loop
push
insl
dec
inc
mov
mov
sub
mov
sbb
inc
mov
pop
dec
and
inc
test
mov
mov
iret
cmp
popf
enter
cwtl
and
insb
lods
cmp
divl
jge
pusha
and
scas
pusha
mov
mov
jbe
fcomps
js
dec
adc
mov
mov
mov
aas
inc
in
mov
inc
inc
ret
test
dec
loope
int
pop
pop
xlat
fdivr
and
cmp
cmp
ljmp
fcomip
or
push
fists
dec
or
push
in
mov
dec
xor
gs
xchg
aas
cmp
addr16
and
sar
into
add
adc
jns
cld
or
xchg
nop
push
idivb
inc
iret
test
and
sahf
int
sub
cltd
mov
xchg
add
jl
cli
xor
or
xchg
repz
gs
and
push
mov
jl
sahf
push
cmp
xchg
jne
sbb
and
roll
cmpl
ficomps
push
jae
mov
pop
push
or
ljmp
adc
pop
loope
cmp
fwait
push
stos
jmp
dec
ja
imul
int3
sub
popf
mov
test
test
dec
add
stos
mov
cmp
fs
push
adc
lahf
mov
pop
jb
fcoms
std
out
scas
repz
repnz
imul
add
aad
jo
sti
xchg
out
xchg
mov
ss
imul
adc
setbe
in
loop
mov
and
je
shll
push
test
push
inc
xchg
lock
ja
pop
mov
inc
fcomi
cmpsl
push
sub
std
jne
sbb
call
cltd
mov
mov
lods
repz
lods
fwait
xlat
pop
in
shll
pop
addr16
out
fwait
mov
hlt
or
popa
mov
pop
arpl
dec
es
cmc
fistpll
iret
mov
jmp
lods
hlt
xlat
inc
mov
js
pop
or
mov
inc
mull
popa
mov
int3
popa
push
pusha
sbb
fistpll
shlb
ds
shll
xchg
jle
cmc
cltd
jae
ret
andb
enter
push
and
add
stc
orw
push
dec
sahf
icebp
loopne
pop
sub
lods
or
xchg
insl
out
jo
pop
cli
push
mov
dec
xchg
dec
mov
cwtl
push
cmp
dec
mov
push
push
leave
push
sahf
int3
xlat
insl
xchg
pushf
icebp
cli
sarb
or
pushl
orps
sub
cmp
fsubrs
aaa
imul
ret
ja
and
jns
test
mov
popf
mov
fcoms
jns
dec
mov
popf
pop
sbb
stc
ret
mov
pop
fadds
and
add
push
mov
imul
ja
stos
xchg
jae
or
test
mov
loope
pushf
jb
fisubs
push
push
mov
test
cmp
xchg
pusha
jno
inc
xor
jmp
jmp
add
jg
int
jmp
push
add
cmp
fucomp
sti
fsubp
cltd
lret
movsl
inc
mov
cmp
push
into
imul
cmpb
addr16
out
or
jg
cli
pop
mov
aam
sbb
or
les
mov
inc
mov
test
xchg
mov
aas
dec
lahf
stos
mov
shrl
fnstenv
push
sub
popa
dec
sub
sub
movsl
stc
cwtl
xor
repz
push
decb
aas
lcall
or
shlb
loope
sub
pop
jne
add
test
sbb
inc
lret
inc
lea
out
push
push
shl
ljmp
pop
arpl
in
inc
movsb
dec
lcall
mov
movsb
sti
stos
push
pop
out
flds
mov
fisubs
cld
repz
lret
and
inc
mov
scas
jo
inc
fcmovne
pop
popa
lcall
mov
pop
xor
and
push
dec
leave
push
mov
or
mov
mov
pop
mov
ret
push
sub
loope
aaa
nop
scas
fnstsw
xchg
imul
dec
cmpsb
rclb
add
jns
sbb
push
out
cmpl
std
xchg
and
lea
xor
int3
sti
push
or
test
jmp
es
cwtl
dec
test
test
pop
sarl
push
iret
xchg
jne
sbb
ret
add
not
mov
xchg
das
mov
push
not
movsb
mov
in
jp
inc
dec
inc
mov
xor
data16
mul
ljmp
hlt
xor
fsubrl
sbb
sbb
loopne
xchg
movl
sbb
add
test
adc
jb
les
xchg
shlb
mov
daa
add
jne
pop
push
sub
movsl
sub
push
adc
push
sbb
stos
iret
loope
fbstp
pop
and
mov
fdivrl
repz
pop
icebp
mov
push
mov
sub
inc
add
push
mov
insb
in
ja
inc
leave
inc
ret
cmp
popa
xchg
jb
push
mov
scas
mov
sarl
jae
jg
ret
and
inc
iret
jge
bound
pop
popa
flds
fcmovbe
loop
adc
xor
mov
inc
lahf
insl
jb,pn
dec
cmp
lcall
jne
lods
rol
aam
push
dec
dec
jno
adc
adc
dec
pop
das
repnz
out
and
jbe
jecxz
add
push
and
mov
adc
cmp
push
popf
sahf
roll
sub
je
int3
pop
scas
jmp
or
aaa
daa
call
dec
jmp
stos
nop
dec
and
push
std
xchg
push
jge
jecxz
fwait
xchg
outsl
sbb
fbld
adc
dec
lock
pop
or
inc
dec
and
sub
rorb
mov
push
dec
hlt
push
shlb
xor
cmpsl
push
les
or
inc
ja
stc
xor
xchg
arpl
lret
dec
push
jb
pop
mov
pop
dec
stc
sar
inc
fstpl
pop
xchg
sbb
sbb
push
loopne
sbb
xor
fs
cmp
in
or
push
addr16
call
mov
mov
cwtl
or
mov
dec
sbb
mov
sub
pop
loopne
and
add
aad
rorl
inc
push
ss
mov
cmpsl
xor
mov
leave
test
lret
pop
divb
dec
rol
add
cltd
outsb
jmp
daa
ja
mov
das
imul
fst
cmp
dec
sti
sbb
call
pop
stos
popf
push
int
adc
lret
loope
sbb
fisubrs
adc
sub
mov
fists
mov
inc
popa
mov
out
and
inc
cmc
cmpl
fdivs
inc
push
adc
pushf
add
sbb
pop
cmpsl
movsl
cmp
xchg
dec
pop
sub
cmp
aam
insb
imul
and
xlat
mov
and
jmp
mov
xor
cmpsb
push
sbb
cld
mov
js
pushf
xchg
stos
and
sbb
mov
jmp
fcmovnu
loopne
mov
mov
cmp
cmpsb
or
adc
lds
andl
or
pop
leave
sahf
mov
mov
or
mov
xchg
pop
or
js
xlat
int
repnz
pop
es
add
and
sbb
xor
push
in
adc
mov
negb
push
xor
and
dec
out
rclb
rolb
mov
std
lahf
mov
into
das
aad
mov
ficompl
cmc
pop
push
les
lret
stos
sub
fiadds
sbb
push
les
cmp
jbe
mov
xor
mov
test
dec
xchg
sar
inc
or
call
dec
jmp
test
dec
or
movsb
sbb
pop
repz
std
jle
in
add
aas
xchg
fstl
cli
mov
stc
inc
xchg
shll
loope
inc
inc
mov
and
dec
xchg
aaa
ds
std
jns
xor
mov
popf
inc
out
fidivs
jne
test
xchg
rcr
test
dec
out
lock
and
pop
adc
sub
jbe
xchg
call
pop
dec
jmp
cmpsl
xor
dec
cli
dec
out
dec
mov
mov
popf
ljmp
pushf
mov
sbb
dec
pop
adc
jnp
enter
addr16
mov
cmp
rcrb
loop
sub
shlb
xor
ficoml
xor
inc
loope
aas
pop
mov
mov
jb
movsl
adc
mov
test
pop
xchg
jge
popf
inc
fs
js
push
inc
sub
cmp
cs
xlat
std
loope
xorb
lock
push
adc
jo
ss
pop
and
cmp
and
xor
jg
popa
sbb
add
sub
imul
dec
mov
xlat
add
inc
pop
inc
gs
and
mov
mov
shl
je
aas
sbb
leave
popf
sbb
mov
adc
inc
jb
notl
push
pop
mov
nop
loopne
daa
fcom
dec
pop
fld
fcomp
xchg
out
arpl
ss
clc
sub
xor
pop
cmp
cmc
fdivrp
ljmp
mov
and
fs
mov
dec
cmp
mov
mov
jge
out
cwtl
add
fcmovnbe
inc
xchg
fiadds
lret
mov
clc
or
pop
cmpsl
in
orl
push
rclb
add
shrb
and
jg
cmp
loop
sub
test
stos
cli
push
not
in
cmp
jb
mov
ljmp
dec
push
mov
pop
fildll
into
jle
fldl2e
jmp
imul
xlat
call
adc
rorb
mov
jbe
jl
and
mov
cmp
clc
nop
dec
xor
leave
adc
jae
sub
cmpsb
inc
or
add
fsubr
xor
mov
dec
sub
lods
cld
pushf
xchg
ja
sub
pop
ret
stos
jb
pop
repz
sarl
jo
sbb
sub
xchg
push
fists
imul
adc
scas
dec
iret
loope
shl
loopne
ret
inc
push
mov
movsb
push
sbb
cs
xchg
xchg
push
lea
insb
in
lods
jns
fisttps
sahf
xlat
mov
mov
sub
psubw
add
mov
lret
add
xchg
push
icebp
xchg
push
mov
addr16
adc
mov
fldenv
aaa
cmp
call
sbb
insb
fsubr
sub
jns
sub
loopne
xor
mov
out
push
cwtl
dec
scas
jae
push
iret
loope
nop
xor
sub
add
jne
cmp
pop
imul
or
adc
mov
or
mov
je
out
daa
lcall
or
jmp
andl
inc
stos
adc
enter
sub
cmp
lods
lods
xor
outsl
add
or
leave
xor
mov
ja
sub
pop
cwtl
sbb
repnz
fistpll
call
sub
jo
cld
aas
loope
stc
mov
xchg
sarl
nop
aas
rclb
orl
and
xchg
pop
push
fdivp
lds
xchg
or
stos
int
test
insb
cmp
jg
testb
add
xchg
adc
das
dec
inc
jg
mov
mov
jmp
or
test
pusha
scas
push
add
in
cmpsl
jg
xor
mov
dec
std
out
fstps
pop
insb
push
push
std
lods
scas
je
scas
out
je
daa
sub
leave
fistps
jl
and
add
adc
push
int3
xchg
ljmp
dec
stos
mov
ficoms
cmp
mov
mov
popf
cwtl
imul
push
xor
mov
push
jno
rcr
lret
mov
dec
dec
divb
mov
adc
mov
ud1
test
sti
outsl
xchg
clc
ret
adc
vunpckhpd
nop
lea
mov
shrb
pusha
mov
std
sbb
add
cmp
jno
jns
or
dec
adc
xchg
pop
hlt
mov
lock
pop
jle
movsl
imul
shlb
xchg
outsl
pop
sbb
ret
adc
outsb
cmc
sti
sti
xor
out
add
mov
ret
mov
xchg
ss
popa
lcall
cmp
fcoml
enter
aaa
stos
mov
sbb
jmp
pop
test
ja
jecxz
or
xor
pop
sub
jb
stos
faddl
mov
mov
inc
adc
mov
das
fs
mov
cmpsb
mov
push
leave
push
mov
push
sub
inc
ja
and
lods
or
test
test
add
sub
inc
xchg
lea
inc
cmp
and
and
fidivs
or
push
jecxz
hlt
ret
bound
es
pusha
push
imul
stos
and
in
scas
pop
in
shrb
test
and
mov
push
sahf
xchg
xchg
insl
lds
mov
iret
cwtl
cmp
inc
loope
and
mov
aaa
pop
add
mov
jecxz
out
or
xor
push
dec
mov
adc
push
test
arpl
mov
test
je
mov
push
in
mov
enter
xchg
pop
cmc
clc
decl
pop
xchg
pop
in
fstl
clc
xor
fwait
dec
inc
mov
push
mov
test
lock
mov
push
adc
fsubrl
xchg
or
inc
arpl
dec
sub
jmp
sub
add
imul
mov
jmp
jg
ret
inc
subl
push
xor
stc
imul
pop
mov
aaa
cmp
mov
xor
pop
xchg
xchg
out
lahf
adc
imul
aas
and
in
jl
les
lods
jle
or
fisubrs
push
sub
push
cmp
xchg
stos
pop
fs
mov
mov
out
cmp
xchg
repz
adc
popa
push
lcall
aaa
dec
popa
ss
aad
or
sahf
jns
imul
mov
xor
and
sbb
scas
xor
in
dec
out
sub
pop
mov
movsl
jbe
jecxz
dec
stc
nop
inc
jl
cmp
mov
jne
push
push
add
and
popf
add
and
es
ds
adc
pop
add
les
stos
push
dec
jne
push
movsb
lcall
dec
push
xor
pushf
adc
mov
push
mov
pop
xlat
scas
or
rcll
ljmp
stc
dec
or
jnp
inc
pop
sbb
rcll
insl
inc
adc
filds
sub
std
sub
mov
lret
pop
and
mov
lcall
lds
bswap
or
and
xchg
out
enter
adc
ds
cmp
mov
pop
ret
neg
insl
ds
jae
shll
mov
cmp
and
test
push
jg
jecxz
or
mov
xor
mov
pop
inc
faddl
mov
cmp
cld
cmp
and
pop
pop
mov
or
jl
cmpb
sbb
aas
or
int3
push
insl
mov
inc
ret
pop
xor
xor
push
iret
aas
mov
mov
leave
add
xchg
dec
loopne
or
fsubrl
rolb
xor
push
mov
sarl
cmp
insb
sub
lcall
mov
lock
ror
or
xor
loope
imul
lea
out
fsubrl
adc
add
inc
cmpsl
sub
jb
sbb
xchg
lcall
jno
int
pop
test
jmp
insl
arpl
mov
clc
inc
adc
jg
cmp
faddl
cmp
pop
mov
movsl
jbe
and
loopne
sub
stos
cmc
mov
call
lds
xor
mov
repnz
push
sub
aam
dec
sbb
xor
pop
outsl
scas
testb
adc
cmpl
dec
cmpsb
pop
xor
mov
out
sub
outsl
jns
icebp
out
jb
or
xor
jmp
mov
ret
in
mov
arpl
jae
outsl
loop
sbb
mov
scas
add
flds
hlt
add
sub
js
cwtl
inc
pop
jle
out
fimull
xor
adc
cld
cmp
cli
mov
xor
mov
xlat
fcmovne
mov
divb
insl
mov
cmp
push
sub
adc
inc
daa
jle
jmp
movsb
cmpsl
pop
mov
test
iret
adc
in
ja
fcomip
pop
push
das
cmp
jb
push
push
in
sbb
sbb
xchg
outsb
fsubrp
scas
xor
inc
mov
mul
call
adc
mov
movsb
ret
mov
ret
enter
push
sbb
pop
negl
out
mov
idivb
jge
data16
adc
outsl
lock
inc
and
or
cmp
dec
out
mov
nop
out
xor
sti
cmp
lret
mov
movsb
inc
jnp
pop
mov
or
lea
inc
mov
mov
movsb
adc
xor
lods
hlt
out
mov
mov
test
dec
push
test
adc
dec
repz
adc
xor
in
int
in
shll
adcb
in
xor
lahf
dec
add
pop
xchg
pop
jecxz
sub
movsb
popa
repz
or
and
bound
jo
jg
push
mov
or
aad
scas
mov
or
adc
jl
faddl
ret
mov
into
jbe
dec
daa
fsubs
mov
xorb
dec
cltd
ljmp
inc
xchg
aaa
nop
push
push
push
ficomps
jo
and
dec
sbbb
cld
sbb
dec
aas
dec
jo
popa
repz
orb
lahf
into
fcoms
rorb
mov
inc
lahf
or
add
cmp
jcxz
cmp
test
dec
jp
leave
je
xor
sbb
fimull
out
movsb
jno
mov
cwtl
in
dec
add
fwait
jo
push
push
sbb
pop
pop
movsb
or
cmpsl
stos
xlat
mov
std
inc
pop
loope
add
mov
in
scas
pop
xor
ret
sbb
push
push
das
or
xor
rorl
mov
inc
mov
and
jp
jge
movsl
dec
sbb
mov
sub
mov
imul
insb
test
mov
dec
stos
jg
fldt
mov
bound
adc
inc
cli
push
xchg
leave
mov
into
rorl
popa
mov
add
jmp
add
push
rcr
jae
or
xchg
popa
std
mov
je
out
fidivrs
or
mov
dec
xchg
and
push
aas
xor
push
mov
sbb
movsb
insb
fildl
inc
add
sbb
out
cmp
in
adc
outsb
mov
lcall
aam
test
in
sub
out
repnz
pop
push
stos
pop
dec
stos
stc
adc
in
jns
dec
in
int
loope
or
pushl
imul
cltd
jle
and
aad
xchg
mov
cmp
mov
data16
hlt
pop
adc
cmp
pushf
stos
mov
stc
sub
inc
aam
pop
and
shlb
jne
mov
cs
testb
in
adc
push
jo
and
xchg
fcoml
cmp
js
std
outsb
lds
imul
icebp
outsl
insb
std
scas
xchg
jmp
mov
push
pop
mov
mov
jns
mov
cmp
enter
arpl
dec
push
loop
daa
add
cmp
loopne
loope
in
mov
dec
loop
punpcklbw
lock
lea
flds
push
xlat
pushf
lcall
jbe
jns
xlat
repnz
mov
mov
insl
push
push
mov
lahf
lahf
sub
mov
jp
popa
push
rcrl
in
imul
mov
stos
adc
mov
lahf
pop
cmp
outsl
test
mov
lret
adc
dec
cmp
mov
std
and
fsubs
sub
cmp
popf
js
mov
sahf
int
cmc
bound
nop
and
add
mov
xchg
orb
xchg
loope
cmp
pop
push
or
or
in
mov
or
repnz
dec
push
dec
orb
out
fmull
xchg
or
push
xchg
cmp
and
ficompl
mov
mov
sar
cld
outsb
mov
and
dec
jbe
xchg
jnp
out
fistl
or
mov
and
addb
imul
or
aam
rorb
xchg
rcll
jmp
push
pop
cmpsl
testb
clc
rol
lock
fwait
pusha
inc
jmp
jge
push
xchg
pop
outsl
or
popf
xor
lret
into
sbb
mov
adc
or
or
imul
mov
outsl
movl
xor
bnd
test
test
pop
cmp
jns
add
cmpsl
mov
add
mov
mov
imul
jmp
xchg
mov
dec
mov
lcall
inc
mov
sarb
mov
hlt
sbb
js
out
xorb
arpl
pusha
ror
jno
nop
xchg
adc
jge
jg
cmovbe
fidivrs
popf
push
lods
into
inc
sub
mov
fdivrp
dec
test
dec
jmp
cmp
jbe
sub
js
dec
and
cmp
rcl
push
das
stos
push
stos
push
lahf
mov
mov
cmpsb
ljmp
aas
adc
jo
ret
ljmp
jnp
cmp
jno
add
jo
icebp
aas
sbb
dec
or
inc
cs
test
sti
nop
test
arpl
roll
inc
pushl
jb
push
sahf
out
int3
hlt
std
push
stc
pop
inc
bound
loope
movl
add
outsl
jmp
aam
push
cmp
in
clc
xor
das
jmp
jecxz
adc
sar
jo
jae
lret
adc
pop
pop
sbb
xchg
sub
mov
pusha
repnz
rolb
loop
cwtl
and
lock
fcomip
dec
nop
jno
jl
xchg
test
xchg
cmp
inc
sarl
jmp
andb
test
xchg
stc
push
sti
stos
rcl
xor
pop
jne
xor
pop
stos
adc
dec
jp
xchg
enter
imull
or
push
rcrb
lods
mov
dec
inc
das
loope
stos
out
imul
in
xor
pop
and
inc
dec
sbb
sti
lds
movsb
mov
mov
xor
mov
push
add
sbb
jae
dec
ja
call
mov
mov
dec
mulb
loop
lea
add
xor
repz
xchg
ffreep
ret
mov
icebp
movsl
decb
mov
pusha
xchg
push
push
nop
sti
pop
mov
mov
push
adc
jp
mov
out
aad
adc
xchg
jmp
mov
out
sbb
jg
lods
shlb
push
sbb
cs
or
lods
in
push
loopne
sahf
out
mov
out
adc
fimull
cmp
xchg
dec
popa
jp
jo
arpl
leave
jmp
stc
scas
nop
sub
out
dec
adc
daa
daa
mov
or
adc
jae
push
lock
cltd
sarl
dec
mov
nop
std
inc
jne
adc
push
add
data16
and
jo
jp
sahf
push
popf
dec
mov
sub
movsl
jns
addb
lods
mov
jbe
nop
rcrb
jnp
jne
mov
mov
jmp
rorb
xor
aas
sahf
in
nop
sub
jp
lods
ja
jmp
fs
and
je
mov
fimull
stos
mov
push
pushf
popa
fsubrp
mov
js
jb
mov
push
in
fcomi
repz
lret
mov
fists
xchg
pop
mov
or
bound
sub
fnsave
push
inc
cmp
scas
faddp
and
scas
and
sbb
inc
into
sub
sti
mov
gs
fwait
jmp
call
mov
push
mov
xor
sub
cld
add
sub
je
or
jmp
adc
addl
push
loopne
and
stos
cmp
lock
shll
insb
push
idiv
pop
das
cltd
cmc
pop
pop
and
ss
scas
mov
xlat
sub
iret
test
push
scas
fadds
cmp
dec
push
aad
inc
jmp
daa
test
not
inc
pop
jmp
mov
pop
sti
jmp
or
pop
mov
call
push
lods
pop
xchg
outsl
out
cmp
adc
push
mov
pop
js
outsl
dec
add
sub
icebp
pusha
jne
cmpsl
jae
sbb
xlat
ficomps
dec
inc
xor
ja
enter
ret
or
push
fidivl
cmpsb
sbb
push
mov
hlt
xor
xchg
aas
jg
mov
ret
inc
inc
inc
xorb
inc
xchg
das
int
ret
and
lcall
or
aas
or
sub
cmpsl
and
sub
push
cmp
adc
mov
pop
clc
or
jecxz
out
stos
stc
push
adc
inc
dec
arpl
xchg
mov
ja
push
lods
in
iret
shl
mov
lea
pop
dec
xrelease
lods
sub
int3
arpl
pop
mov
mov
and
push
scas
xchg
ljmp
pop
shlb
imul
popf
jmp
lds
and
rorb
mov
cmp
mov
sahf
popa
pop
js
out
xor
std
xchg
or
lret
mov
scas
adc
or
pop
test
in
dec
jns
dec
xchg
xchg
inc
jbe
cwtl
push
mov
inc
cmpsl
or
mov
addr16
rclb
push
pop
sbb
out
and
aas
outsb
and
xchg
mov
in
rol
push
ret
push
mov
sub
xor
scas
cmc
sahf
cmpsb
mov
shrb
and
mov
call
jb
test
test
repnz
imul
orb
push
mov
push
cmc
cmp
inc
mov
loop
enter
stc
mov
dec
add
pop
hlt
jg
cmp
jnp
mov
mov
out
jmp
fdivl
jno
addb
bound
jnp
pusha
cli
out
mov
lods
jge
pop
call
pusha
sbb
jb
fwait
pop
popf
jb
cmp
mov
rcl
fsubr
xor
mov
pop
and
bndldx
call
adc
or
pop
icebp
lcall
xchg
xor
add
std
sbb
sub
xlat
push
mov
aam
xor
daa
ss
test
cmpsl
cmpb
inc
and
mov
or
icebp
dec
xor
ret
popa
cs
push
dec
and
test
or
adc
and
out
push
scas
sbb
xchg
pop
ja
loop
test
mov
fildl
pushf
inc
mov
and
sub
cld
stc
scas
loopne
sahf
mov
inc
jmp
cwtl
push
sub
es
sahf
sub
mov
inc
rcll
pop
in
pop
aaa
cmp
add
mov
mov
add
addl
xor
lea
lahf
push
scas
std
outsl
cmpsb
lcallw
fs
repnz
pop
call
mov
inc
or
cmpsl
pushf
adc
je
subb
out
add
rcll
rolb
je
push
cltd
add
mov
es
arpl
pop
jnp
cwtl
cmp
mov
enter
jne
xor
jns
loop
imul
mov
je
icebp
push
das
and
adc
mov
inc
lret
fstps
pop
out
ja
lcall
into
push
inc
dec
push
or
push
adc
hlt
mov
ret
xor
or
hlt
pop
inc
ss
and
cmp
sbb
mov
or
imul
fmuls
mov
or
dec
inc
addl
fs
xlat
bound
fsubr
cld
mov
je
mov
xchg
pop
mov
xor
pop
cmp
and
in
push
and
testb
imul
adc
lods
sub
daa
sub
popl
mov
jo
fisubl
xchg
scas
jne
adc
bnd
sub
les
sub
lea
pop
syscall
push
in
mov
mov
popa
sbb
mov
push
sbbb
adc
xor
or
push
test
sahf
les
repnz
add
and
inc
mov
fiadds
jle
hlt
add
adc
xchg
stos
cwtl
aas
bound
pop
mov
cmp
push
clc
or
adc
mov
ja
fidivrl
sub
popa
out
mov
shrd
ds
sbb
rcrl
xchg
push
push
push
aaa
push
ja
mov
sar
or
ds
push
and
out
push
testl
lods
mov
cmp
xor
mov
dec
mov
gs
jns
or
lods
jge
test
mov
pop
inc
leave
lret
mov
sub
mov
sbb
push
pmullw
xor
loop
std
into
sbb
cwtl
hlt
xchg
leave
mov
icebp
fs
inc
sti
push
cmpsl
dec
push
out
mov
in
shr
popa
mov
mov
adcb
sub
shll
adc
mov
sbbl
cmp
fwait
loop
test
idivb
jns
jp
mov
pop
lock
pop
stos
ret
jge
xchg
pop
pop
dec
or
xor
mov
sarl
movsl
mov
lret
shl
cli
scas
fwait
adc
and
sbbb
dec
mov
lret
xchg
dec
sub
adc
repnz
jmp
call
or
add
aas
loopne
sub
adc
sub
adc
jne
and
je
out
es
pop
into
aad
fwait
loope
dec
mov
and
loope
stc
repnz
enter
dec
dec
sbb
fidivl
add
inc
fcmovb
out
dec
jne
sbb
imul
sbb
cmpl
xchg
fs
sbb
sub
sub
xor
mov
ja
jno
sbb
data16
sub
jbe
aas
lret
add
xor
mov
jg
sbb
mov
fimuls
scas
inc
xchg
add
dec
mov
mov
ret
pop
push
adc
inc
rol
mov
push
xchg
decl
ret
xor
dec
cmp
lds
scas
mov
icebp
outsl
aad
arpl
movsl
sbb
mov
adc
mov
movsl
and
push
pop
mov
rcll
in
pop
pusha
js
jecxz
mov
inc
mov
add
shlb
pop
dec
jo
push
imul
sar
sub
shrb
jne
aad
pop
jo
jecxz,pn
imul
cmp
pop
mov
loop
daa
cmp
adc
idivb
daa
pop
sbb
outsb
dec
xor
ljmp
flds
ret
test
jge
js
mov
lfs
sub
xchg
cmp
add
sub
pop
imul
mov
push
test
into
ret
aad
or
outsl
add
lret
packuswb
std
xchg
hlt
xor
aaa
push
pop
mov
nop
fldl
sahf
popa
fisubs
out
fcomp
movsb
int
gs
fmull
hlt
mov
mov
mov
std
dec
xchg
test
xchg
xor
sub
sub
scas
call
lock
xor
ljmp
xchg
movsb
fcmovb
in
fidivl
std
adc
jnp
mov
pop
sub
sub
sahf
scas
inc
in
pusha
and
inc
mov
or
pushf
arpl
sub
mov
xchg
ss
inc
push
jmp
adcl
addr16
lock
bound
pop
inc
xchg
js
inc
mov
subl
test
ret
mov
rclb
movsb
jnp
lcall
add
or
popf
sub
xor
xor
jnp
pop
shl
adc
xor
or
pop
sbb
imul
push
bound
xor
adc
or
adc
push
mov
inc
loopne
test
ljmp
mov
dec
inc
mov
push
insb
sub
clc
jmp
xor
rcrb
stos
pop
inc
jne
pusha
mov
repnz
cmp
enter
pop
push
jg
bound
loope
xchg
cmp
xlat
dec
out
mov
les
outsb
ja
sub
sarb
ljmp
cmpsb
push
and
pop
push
mov
adc
loopne
push
push
pusha
pusha
or
fwait
es
fwait
arpl
aaa
pop
mov
xchg
test
stos
jb
pop
out
fldl
es
cmp
jns
mov
in
in
fcmovnbe
stc
arpl
mov
xchg
lcall
jl
jne
repnz
leave
cmp
adc
loopne
icebp
cli
call
sbb
ss
add
dec
pop
adc
mov
mov
inc
leave
std
xchg
ds
dec
jb
dec
jle
dec
int
cmpl
mov
inc
sbbl
int
pop
out
fwait
nop
repnz
sbb
sahf
fsubrs
sarl
xlat
mov
sub
test
mov
jle
fcoml
sbb
out
loop
push
push
das
jbe
lcall
fstl
push
inc
or
outsb
and
push
shl
test
jnp
mov
and
sbb
xchg
xchg
leave
lds
sub
inc
fs
std
andl
int3
in
add
xor
push
xor
rolb
sbb
cwtl
or
icebp
imul
lret
mov
cli
or
insb
ret
jp
pop
cmp
insb
add
int3
loope
sub
sub
outsl
adc
mov
and
addr16
xchg
stc
adc
jae
int
dec
cltd
dec
mov
ds
xchg
nop
icebp
mov
adc
pushf
xor
dec
das
mov
pop
loope
aas
xchg
mov
cli
sub
mov
add
mov
cmp
xchg
pop
pop
cmp
lret
lcall
sbb
int
sbb
cmc
pop
lret
cltd
and
iret
pop
or
mov
or
mov
xchg
mov
aad
sub
cmp
or
inc
and
and
jmp
int
or
xchg
adc
ss
ffreep
adc
bound
data16
sub
mov
mov
inc
push
push
push
push
sub
in
add
cli
hlt
div
and
cmpsl
inc
aad
aad
rolb
cmp
or
cmp
fmuls
popf
imul
sbb
cli
push
shll
mov
dec
inc
dec
mov
mov
inc
xor
push
outsb
scas
sbb
rolb
mov
jl
test
adc
mov
ds
cltd
pop
daa
xor
cmp
repnz
mov
push
cwtl
xchg
push
and
sbb
mov
je
shll
inc
icebp
mov
xor
jns
roll
cmp
arpl
adc
ficompl
daa
mov
mov
mov
fimull
cmpl
dec
xor
mov
cld
cmp
sub
data16
sti
mov
arpl
pop
or
lret
mov
arpl
pop
sbb
push
call
xchg
sub
jge
mov
lea
lea
adc
sarl
imul
sub
cmpsl
sbb
in
xor
mov
xchg
daa
pop
jb
sbb
xchg
dec
cmp
mov
mov
sbbb
lock
por
adc
cmp
cs
xlat
out
xchg
xchg
dec
or
xor
xor
add
mov
xchg
inc
nop
subb
fld
aad
movsb
mov
fisttpl
arpl
add
jno
sbb
roll
fiadds
hlt
les
xchg
or
repz
mov
xchg
pop
mov
and
xchg
mov
int
bndstx
add
sub
mov
sahf
push
enter
sbbb
pop
sbbl
jmp
insb
mov
mov
jae
arpl
xchg
mov
fcompl
outsl
xchg
fcomip
repnz
push
dec
aaa
ret
cmp
mov
es
dec
and
pop
push
loop
xchg
xchg
inc
inc
sbb
int
in
rolb
dec
test
mov
out
mov
idiv
pop
lret
pop
adc
jmp
cmpsl
push
jbe
scas
mov
fiaddl
mov
push
data16
cmp
xlat
or
incl
pop
jb
mov
sbb
sub
fwait
xchg
or
jge
cltd
lods
out
pop
addr16
xor
add
inc
xor
pop
in
adc
lea
stos
cmpsb
jb
xrelease
adc
xorl
adcl
cwtl
mov
scas
mov
hlt
mov
inc
adc
lods
mov
mov
shrb
and
sti
and
js
adcl
add
nop
dec
cmp
js
sbb
movsb
adc
fimuls
popf
add
clc
loopne
or
jl
sbb
and
in
add
push
jle
enter
jbe
mov
add
xchg
loope
pusha
push
les
inc
loop
dec
pop
dec
push
jae
les
sub
in
push
mov
cmp
in
outsl
inc
pop
bound
xor
push
dec
pop
xchg
jg,pn
mov
fildll
mov
insl
push
shll
sahf
adc
int
or
mov
add
fbstp
in
pushf
data16
xchg
insb
inc
aad
ljmp
outsb
gs
bound
inc
xor
mov
js
pop
cmp
xchg
and
out
sarl
movsl
lahf
ds
mov
add
out
js
arpl
test
push
sarl
jb
aas
mov
or
stc
mov
and
push
rorl
cmc
imul
loop
cmp
in
clc
lods
xchg
xchg
cld
pop
shr
sub
xorb
sbb
or
clc
mov
and
aad
shrb
sbb
dec
out
xor
jle
xchg
bound
lret
jne
movsb
pop
inc
or
ret
les
sbbb
push
inc
jo
lods
in
data16
add
int
lahf
and
iret
lahf
dec
add
in
ret
add
sbb
xchg
push
pop
testb
push
cltd
sbb
mov
sub
inc
rorl
ficomps
stc
sbb
mov
adc
mov
inc
in
andb
dec
push
adc
sbb
stos
insl
or
test
test
ficoms
push
hlt
mov
dec
aam
into
lret
ret
push
out
pop
mov
cmpsb
lds
cmc
xchg
cmc
jne
movsl
xor
or
call
mov
lcall
arpl
fidivl
push
lods
mov
nop
sbbb
subb
jp
and
xchg
scas
cmp
lods
aad
pop
inc
push
adc
inc
jl
mov
cmpsb
es
out
movsl
jnp
lahf
clc
xor
cmpsl
decl
aas
movsb
push
sub
mov
std
jns
jno
lods
pop
sarl
test
and
adc
xchg
adc
dec
test
lock
lcall
roll
cmp
and
sti
test
pusha
inc
outsl
jnp
jb
test
ja
dec
testl
dec
xchg
test
iret
idiv
xchg
cmpsb
jmp
shrb
push
mov
jno
inc
push
outsl
lahf
cmc
test
fdivl
cmp
jno
or
xchg
mov
pushf
dec
pop
jle
ffree
stos
mov
inc
mov
mov
test
andl
inc
jl
sbb
xor
inc
int3
shrl
adc
pop
repz
jl
and
repz
add
loope
movsl
mov
test
dec
nop
movntps
mov
dec
insl
test
mov
dec
ds
dec
push
jnp
sub
cli
cs
mov
xchg
dec
mov
adc
xchg
mov
mov
nop
popa
inc
and
lret
cwtl
scas
adc
int
jle
add
out
ljmp
je
nop
imul
cmp
xor
outsl
push
insb
xchg
js
sbb
sbb
aam
cmp
adc
ret
pop
sbb
jecxz
cmp
jg
adc
push
arpl
enter
mov
xchg
sbbb
pop
sbb
xchg
sub
cmp
sti
and
jge
sub
rep
xchg
rcr
mov
xchg
repnz
push
out
or
popa
loopne
fwait
loope
xor
bound
xchg
dec
insl
lret
pusha
mov
xlat
sbb
xchg
out
xor
std
dec
out
addr16
xchg
cmp
pop
xorl
mov
lret
mov
nop
lods
and
ret
call
mov
testb
mov
mov
int3
int3
add
mov
mov
sbb
mov
fcmovnu
sub
sub
adc
lcall
into
movsl
insl
enter
aaa
xchg
mov
fiadds
push
push
add
xchg
movsb
mov
stc
inc
cwtl
mov
outsb
and
xor
sub
sbb
and
mov
outsb
xor
leave
dec
inc
mov
dec
pop
mov
mov
fwait
out
cltd
cmp
test
push
jp
call
ja
out
pop
adc
pop
ja
scas
mov
popf
add
cwtl
daa
jg
cmpsl
scas
dec
adc
mov
js
repz
vpmulhuw
addr16
ljmp
cmc
out
adc
xor
rcrl
pop
jp
mov
or
and
stos
xor
mov
inc
call
punpcklwd
sub
jmp
push
push
outsb
mov
leave
fdivrs
cmpsb
jge
mov
dec
rcr
xchg
outsb
or
jmp
int3
fs
lods
and
xchg
mov
mov
push
jae
jne
mov
push
popf
inc
data16
jnp
xor
or
push
movsb
icebp
dec
ja
dec
fs
dec
inc
mov
sbb
ret
inc
add
outsl
cmpl
mov
mov
shlb
pop
jno
lcall
stc
movsl
lea
cwtl
fdiv
push
clc
and
out
cmpsl
jmp
dec
gs
or
out
pop
or
or
jle
out
pusha
and
fiadds
es
adc
int3
add
jle
dec
and
iret
movl
fidivl
je
jp
pushw
mov
xchg
addr16
sbb
imul
mov
push
ret
dec
add
scas
rclb
push
ljmp
xchg
xor
mov
pusha
push
mov
cmp
movsl
imul
ds
sbb
fmull
ret
andl
xchg
xlat
push
insl
imul
sbb
pop
stos
lret
outsb
movsl
jle
stc
jno
mov
mov
xchg
fisttps
jle
shlb
add
in
insb
orb
shl
sbb
cmc
movsb
dec
mov
sub
inc
dec
imul
insb
rcl
ja
in
push
xorps
mov
cmp
and
mov
addr16
dec
cld
pop
imul
xorl
xchg
jmp
adc
lods
xchg
xchg
or
in
cwtl
push
loope
lahf
in
xchg
sahf
sbb
push
fcoms
push
sub
jb
inc
xchg
sbb
cltd
jp
and
mov
dec
xchg
and
push
adc
xchg
xor
dec
add
stos
out
gs
mov
mov
outsl
xchg
das
ror
fsubl
xor
sub
call
adc
cmp
into
iret
dec
cmpsb
pop
jl
sarl
dec
cld
add
jle
icebp
adc
add
lahf
call
add
fimull
imul
int3
jns
outsl
in
cld
or
pop
adc
mov
mov
std
xor
ja
aaa
mov
mov
in
bound
insl
cmp
sub
loopne
stos
ficomps
jb
dec
ds
sti
ss
push
mov
stos
push
jmp
cmp
push
and
push
pop
mov
mov
jl
enter
in
add
mov
int
imul
or
std
mov
xchg
lods
imul
outsl
movsl
xor
cmpsl
inc
inc
cld
xor
mov
jb
test
adc
lea
jg
xchg
mov
into
leave
pop
repz
getsec
mov
inc
pop
push
cli
dec
lods
pop
inc
hlt
adc
pop
jle
pop
push
push
mov
push
icebp
jg
sbb
mov
popa
cld
push
jecxz
adc
sti
bound
adc
cli
int3
or
push
mov
add
popa
fdivs
rcr
loop
jo
xchg
fwait
pop
cwtl
jns
cmp
pop
add
inc
popl
int3
aam
lods
jecxz
adc
sbb
and
bound
xchg
sahf
lcall
les
jp
dec
rcll
mov
or
ja
dec
aas
add
loopne
mov
cli
cmp
sub
notb
pop
outsb
or
scas
ja
les
rol
icebp
xchg
and
adc
nop
outsl
xchg
out
pop
add
insb
daa
sti
cmp
inc
or
inc
adc
test
pop
ret
sbb
jge
push
pop
mov
dec
scas
test
push
cmp
pop
dec
in
js
adc
sbbb
in
std
mov
inc
insl
sbb
xor
dec
out
adc
inc
push
jb
lea
adc
andl
jb
insb
in
push
leave
imul
lea
jae
jbe
xchg
pop
test
sbb
subl
inc
repnz
rcll
jmp
mov
popa
push
icebp
clc
clc
pushf
adc
fldcw
hlt
and
sahf
cmp
cld
mov
repz
mov
jb
adc
scas
xchg
jecxz
movsl
push
subb
or
dec
push
mov
sbb
mov
rclb
fs
mov
adc
mov
and
inc
add
xchg
pop
repnz
and
jbe
jno
sbb
int
orl
jle
fmull
cmpsb
icebp
movsb
jle
jnp
jo
adc
adc
xchg
lods
ss
lcall
outsb
int3
std
add
aam
fwait
or
mov
cmp
outsl
jg
ret
leave
mov
xchg
movsb
push
imul
enter
cli
pop
pusha
push
inc
cs
cmc
push
in
add
dec
sbb
dec
js
sbb
shrb
incl
in
mov
push
adcb
push
jno
hlt
and
cmc
pop
fwait
stc
add
mov
ror
pop
xor
repz
outsb
insb
in
mov
mov
pop
aam
mov
cmp
frstor
cltd
es
leave
jno
popf
js
add
sti
cmpsb
mov
cmp
lea
dec
add
pop
pop
arpl
test
nop
cmpsb
push
fadd
inc
mov
sbb
mov
push
test
add
sub
mov
jl
out
mov
loop
clc
movsl
shll
sbb
icebp
jno
mov
sbb
mov
or
mov
xor
iret
mov
es
into
lcall
sahf
lret
clc
in
fimull
add
and
xchg
mov
adc
stos
aas
inc
fists
mov
in
mov
outsb
hlt
and
movsb
pop
in
mov
xor
mov
xchg
jnp
mov
ret
mov
aam
aaa
fisttpll
std
cmp
jecxz
sbb
popf
mov
sub
or
in
stos
dec
repz
mov
push
pop
cwtl
js
sbb
mov
jmp
mov
call
scas
into
push
pop
outsb
test
iret
rolb
cltd
lds
mov
fcmovbe
add
fmulp
xchg
mov
cmp
test
fisttpll
cmp
das
mov
xchg
sub
mov
jmp
sub
repnz
xor
test
add
subb
mov
push
sub
imul
jge
add
ja
dec
incb
out
xor
ret
popf
sbb
popf
out
addr16
and
and
sbb
mov
scas
lcall
daa
leave
lcall
nop
or
daa
mov
pop
idivb
into
dec
fmuls
mov
lea
fsubl
daa
das
cmc
push
test
movsb
loope
add
dec
inc
in
cmp
mov
je
push
pop
ja
out
sbb
xchg
dec
lahf
imul
pushf
call
pusha
ret
push
enter
cmp
adc
jg
sbb
cmp
push
mov
lds
scas
mov
fisubs
imul
xlat
cld
inc
aaa
cltd
dec
lret
and
lcall
pop
hlt
mov
jecxz
or
xchg
mov
dec
lods
sbb
inc
pop
and
sub
in
je
stos
enter
mov
inc
outsb
arpl
xlat
ficomps
test
mov
imul
les
add
mov
faddl
les
in
repz
push
mov
and
push
mov
fldl
adc
adc
mov
xchg
push
xchg
mov
test
cmp
xabort
cmp
push
cmpsl
incb
dec
andb
outsb
js
shlb
inc
in
dec
shrb
xchg
adc
cmpsl
popf
cwtl
xchg
xor
subl
mov
and
out
mov
dec
loopne
jp
add
addr16
test
sti
jo
pop
hlt
sub
and
or
outsb
data16
lret
mov
add
xchg
mov
mov
inc
mov
pop
fdivs
add
test
dec
notl
xchg
dec
sahf
mov
adc
push
mov
popf
sub
xchg
push
push
xor
testb
popa
mov
sub
subl
ljmp
push
aad
mov
daa
fisubrl
shlb
push
adc
sti
pushf
push
sub
lahf
cmp
repz
mov
std
jecxz
hlt
push
arpl
fcomps
add
cmp
notb
fwait
sti
mov
ds
inc
pop
xor
sbb
cmp
jne
push
add
lods
lods
fldcw
adc
lret
pushf
cmp
lock
jo
jg
ljmp
out
jp
jmp
gs
pop
jg
pop
inc
shrb
subb
negl
dec
ret
lcall
or
sbb
or
dec
sti
cli
jl
daa
int3
mov
add
adc
inc
add
arpl
sbb
rcr
js
repnz
xor
test
jnp
into
push
xchg
das
imul
jge
pop
test
rcl
pop
loopne
mov
dec
lods
stos
add
push
addr16
fdivrs
cmpsl
enter
lahf
pop
xacquire
loop
inc
repz
mov
jp
bound
pop
mov
dec
pop
imul
add
ja
xchg
and
cltd
lret
lods
es
pop
lock
imul
adc
pusha
mov
into
stos
jmp
stc
xor
insl
scas
jb
mov
pop
inc
adc
push
add
pop
push
mov
es
or
jns
aas
mov
popa
stos
icebp
push
and
cld
push
sbb
mov
mov
fstl
mov
andb
add
or
mov
sti
jecxz
movsl
pop
jno
aad
repz
xchg
lea
and
shll
bound
cmpsb
xchg
mov
shrl
and
or
iret
insb
lods
or
outsl
bound
push
sahf
sub
in
lods
cmpsb
add
in
dec
add
and
jmp
dec
movsl
jle
pop
xchg
jno
iret
fs
jae
push
inc
dec
mov
inc
mov
mov
aaa
mov
pop
enter
adc
add
add
sub
fldt
inc
dec
iret
mov
ja
pop
jle
cwtl
je
pop
push
movsb
fists
mov
scas
repnz
popf
lahf
lret
pop
enter
cmp
aad
jle
nop
test
mov
xchg
ja
cli
pop
addl
dec
out
call
jno
fmull
cmp
lods
into
push
fs
int3
dec
pop
push
mov
pop
nop
sbb
sbb
jl
dec
sbb
outsb
push
cwtl
ds
or
fyl2x
rep
and
outsl
shrb
fcompl
outsb
lahf
mov
lock
cmpsl
push
and
xor
jo
pop
dec
inc
imull
mov
and
shrl
dec
dec
push
ja
sbb
xor
subb
test
loop
imulb
add
fwait
out
lret
fnstenv
scas
fwait
or
fimull
jmp
sbb
lods
jle
aas
xor
leave
les
cld
inc
adc
sarb
mov
andb
hlt
add
inc
pop
push
packssdw
jo
fisttpl
lods
xchg
xchg
lds
es
cmp
inc
lret
cmp
and
test
or
sti
repnz
jecxz
mov
es
test
mov
sbb
or
arpl
fnstsw
test
idiv
inc
ljmp
jo
sbb
and
stc
ds
jle
mov
add
jecxz
mov
int
jbe
push
in
push
xor
stc
mov
mov
cli
dec
sar
mov
out
jo
fnstenv
mov
adc
not
test
mov
pop
push
push
dec
stc
dec
cli
xor
mov
shll
push
aaa
aam
test
sub
loop
pusha
jg
flds
fwait
mov
xlat
insl
mov
adcl
cmp
add
mov
mov
push
pusha
cltd
scas
addb
jne
inc
lea
mov
imul
push
push
inc
scas
je
in
and
and
aas
leave
inc
mov
push
xor
ret
cmpsb
xchg
lds
xor
ljmp
sbb
in
or
cmp
dec
mov
xor
sarl
adc
mov
shlb
adc
and
pop
loop
leave
ss
cltd
or
jl
xor
push
jb
xor
pop
scas
out
and
mov
rcrb
das
mov
pop
adc
movsb
cmpsl
scas
fbstp
cmp
fisttpll
or
aaa
loop
rol
jge
pop
xor
ret
icebp
dec
inc
dec
fsubl
inc
aad
cltd
push
add
int
cmp
sbbl
pop
negl
int
jle
jl
scas
sbb
mov
fincstp
jge
mov
inc
movhps
jno
dec
add
mov
lods
pop
aam
push
pop
xor
cmp
push
shrl
add
pushf
xchg
addb
out
imul
mov
sbb
insl
cmpl
repnz
out
mov
rcll
fimuls
push
push
push
int
sahf
test
aaa
into
iret
loope
mov
pop
gs
jl
incb
loopne
mov
bound
or
addr16
mov
leave
push
scas
es
popf
push
div
test
gs
xor
insb
sub
cli
or
test
int3
cmpsl
sbb
stc
pop
mov
jne
mov
dec
jle
sbb
inc
lahf
pop
dec
je
daa
pop
js
xchg
ret
push
inc
into
xchg
ret
cmp
test
sti
mov
mov
cmp
jp
push
cmpsb
xchg
fmul
test
mov
cmp
xor
popf
adc
push
add
mov
into
pop
mov
aaa
jae
out
pop
cmc
mov
out
mov
jns
pop
test
aaa
xchg
push
push
int3
or
repnz
hlt
xchg
sbb
and
fcoms
jo
test
outsl
popa
outsl
add
add
in
dec
insl
rclb
ja
push
jecxz
push
mov
mov
scas
push
mov
cmp
xor
ljmp
mov
cmpsb
and
call
jno
pop
mov
scas
enter
lock
sbb
and
inc
mov
bound
into
sahf
mov
and
jns
sub
test
fsub
mov
hlt
jns
in
adc
jmp
andb
test
lods
xor
mov
cmc
aam
push
addr16
add
and
cmp
ret
hlt
add
push
dec
scas
pop
jmp
call
jmp
fldenv
adc
ja
fucomip
test
add
and
adc
jg
ficomps
push
mov
js
cld
xor
add
sti
and
sub
outsl
jmp
ret
outsb
inc
in
dec
aam
pop
pop
js
lods
lcall
hlt
loope
test
dec
xchg
add
push
lods
dec
lock
mov
mov
push
push
insb
repnz
add
in
in
mov
mov
ljmp
add
cmp
jl
dec
pop
movsl
outsb
ficoml
popa
pop
or
mov
and
and
stos
scas
xchg
dec
jbe
jnp
xor
add
aad
push
and
push
sub
adc
in
fdivr
mov
inc
testb
mov
pop
fmull
icebp
xchg
sahf
insl
daa
nop
xor
enter
lret
mov
shll
and
xchg
or
out
push
jg
push
mulb
andl
test
popl
mov
leave
xor
or
call
jno
mov
into
push
adc
stc
pusha
fiaddl
mov
mov
mov
adcl
cwtl
adc
dec
push
ss
sti
sbb
inc
xor
stc
data16
aam
repnz
inc
pop
cmpsb
or
inc
jmp
mov
inc
out
inc
loope
jecxz
hlt
pop
jns
add
push
cmp
sets
push
mov
mov
pushf
fucom
mov
dec
cld
xchg
mov
sub
sbb
xchg
lods
repz
test
push
adc
cld
or
xchg
adc
sub
movsb
jle
mov
sbb
mov
push
fyl2xp1
dec
or
xor
push
add
xchg
sbb
xor
jecxz
mov
sbb
pop
mov
mov
adc
scas
jbe
and
bound
clc
adc
std
jns
rcll
or
inc
je
repnz
fucom
popa
mov
xchg
sbb
stc
xchg
icebp
out
and
fadd
mov
iret
xchg
mov
mov
sti
xor
pop
loope
inc
adcb
or
ret
enter
inc
pop
xchg
cmpsl
jb
push
or
mov
cmp
das
cmc
ss
adc
sub
mov
adc
outsl
shlb
pop
add
pop
mov
xchg
mov
push
jb
xchg
fisttpll
ss
sbb
cmp
adc
push
orl
repnz
into
jbe
cmp
xor
push
lahf
pop
out
mov
lahf
repz
dec
and
jbe
adc
fistl
pop
loop
push
push
fisubs
call
dec
add
outsl
shr
test
in
inc
nop
jno
push
out
ds
mov
in
add
push
cmc
and
push
bound
popf
add
cmpsl
pusha
push
mov
xchg
das
mov
aad
push
ds
mov
mov
add
outsl
jp
test
popf
push
xchg
mov
xchg
push
insl
cmp
into
add
push
in
push
mov
fwait
icebp
sub
or
test
lds
movsb
cmp
fs
std
push
mov
xor
push
out
cli
lahf
lea
in
sub
lods
mov
arpl
adc
repz
es
sbb
pop
cmpsb
ljmp
int3
ljmp
sbb
mov
incl
outsl
jnp
sub
push
ja
cmp
xchg
clc
mov
xchg
push
sti
pop
scas
fstpl
cmp
pusha
loope
jae
sbb
jl
into
or
xchg
repz
inc
mov
sbb
mov
jo
jb
shlb
fldl
nop
lods
fisubrs
mov
int
push
test
pop
inc
ljmp
pop
test
ret
xchg
mov
mov
xor
or
cli
fsubl
sbb
xor
out
data16
enter
dec
adc
adc
mov
xchg
jbe
out
lret
pop
repz
add
stos
lcall
sbb
aad
inc
and
add
sahf
dec
xor
loopne
repz
adc
pop
loope
cmp
pop
cmpsb
repnz
mov
mov
xchg
mov
ret
inc
pop
xor
jns
sbb
test
testl
nop
in
inc
popa
jl
dec
fldcw
popf
lods
lret
sbbl
cmp
mov
cmp
cmp
xor
sbb
xchg
cmp
aam
mov
pop
sbb
daa
pushf
roll
mov
push
jl
andl
stc
stos
add
das
sbb
sbb
fmull
into
cmp
pop
push
cwtl
pop
add
std
adc
pop
out
sub
dec
stos
cmc
push
call
jne
je
popa
jno
cmp
cmpsl
pop
adc
dec
pop
mov
lahf
jo
sbbb
fadd
push
mov
ret
pmaxsw
lcall
sar
xor
sbb
mov
xlat
orb
dec
mov
negl
lcall
out
inc
push
not
in
es
mov
cmpsb
mov
fnstenv
adc
push
leave
aaa
repz
add
xor
jl
pop
mov
push
dec
xchg
xchg
or
mov
jmp
cltd
push
ljmp
mov
add
jmp
inc
fistpl
aaa
sub
dec
loopne
inc
jg
sbb
data16
rolb
push
xchg
mov
fistps
xchg
dec
sub
movsb
aad
and
arpl
mov
andl
int3
jp
push
fstps
fidivl
imul
je
inc
mov
jns
sbbl
push
xchg
push
lret
dec
jno
mov
mov
insl
push
xchg
mov
dec
sub
or
jns
jg
jecxz
push
out
addb
popf
mull
mulb
ljmp
test
ja
loope
js
aaa
add
sar
test
ja
movsb
not
dec
sub
jle
ss
test
cmp
nop
jg
xchg
sbb
push
fldcw
add
pop
adc
stos
dec
test
scas
xchg
jp
push
push
xor
jge
loop
cld
lods
or
inc
leave
dec
in
sar
sub
mov
mov
lea
arpl
pop
push
mov
mov
lret
jns
pop
xchg
xchg
bound
sahf
inc
mov
mov
sbb
pop
loope
call
dec
in
jmp
divl
scas
rsqrtps
or
movsl
inc
jbe
push
mov
es
add
lods
sbb
jnp
push
mov
pop
push
inc
jle
mov
sbb
out
iret
adc
mov
xchg
orb
sub
mov
daa
mov
out
out
leave
outsb
cmp
adc
xchg
pop
jl
pop
jg
jbe
out
arpl
push
pop
xchg
xchg
dec
dec
es
mov
push
shlb
adc
push
sbb
jmp
or
pop
push
push
lcall
in
mov
test
sub
mov
loopne
mov
jae
lea
push
xchg
insb
sbb
adc
ds
jbe
shlb
pop
push
xchg
xchg
daa
jp
push
push
in
cmp
mov
or
push
fildll
loopne
mov
push
jnp
add
les
sub
or
aam
dec
fisubl
mov
adc
ficomps
mov
dec
arpl
sub
js
add
cmp
lret
jnp
daa
jl
xchg
pop
push
sbb
jns
cmp
movsb
aam
mov
pop
dec
jp
test
stos
fisubl
jmp
jae
mov
jnp
or
jb
pop
and
out
outsb
cld
cld
push
mov
test
and
xorl
cvtps2pi
loope
mov
or
pop
jo
mov
outsb
xchg
adc
sbb
mov
inc
aas
repz
popf
jbe
call
jns
jae
mov
and
je
inc
xchg
roll
pop
jo
popf
loopne
cwtl
test
sti
ficoml
or
add
cmpsb
test
icebp
pop
fcoml
jg
push
scas
leave
pop
cltd
or
lods
push
pop
mov
repnz
shlb
sub
lret
dec
sti
mov
adc
insb
das
movsb
fldcw
dec
mov
jle
xor
jmp
arpl
pop
test
in
outsl
lahf
loopne
add
pop
lahf
out
loop
pop
cmp
loopne
pop
shrb
jo
push
fisubl
outsb
test
xchg
xor
jecxz
sub
jnp
loop
je
fstpl
jg
mov
data16
loope
mov
cmp
fadd
aaa
add
test
cmc
jmp
ljmp
lods
push
cmp
mov
adc
data16
inc
addr16
subl
stos
jne
ror
into
sbb
push
mov
pop
aad
adcl
lock
mulb
insl
imul
push
cwtl
divb
movsb
fidivs
or
stos
out
outsb
dec
inc
aas
aaa
and
pop
pop
xor
aaa
clc
test
mov
cmp
push
cmp
pushf
add
aam
cmp
sbb
clc
cmpsb
add
sub
icebp
lret
fnstsw
dec
ljmp
jnp
dec
out
stos
adc
pushf
and
and
mov
lods
pop
pushf
movsl
movl
push
xchg
xchg
mov
xor
jnp
loop
sub
gs
or
scas
fs
dec
jecxz
cs
add
push
jnp
mov
xlat
repnz
out
and
push
cmp
ret
iret
xchg
inc
inc
xchg
cmp
push
mov
lret
aaa
or
xchg
arpl
mov
inc
mov
mov
orb
scas
jle
push
pop
aaa
outsl
shl
mov
shll
adc
add
cmp
sbb
sbb
adc
add
cmp
xor
push
or
adc
xchg
dec
mov
xchg
out
lods
jo
shll
fisttpl
pop
fwait
lods
gs
and
xchg
out
call
rclb
addr16
out
fwait
add
fcoml
sub
jb
fimull
int3
xlat
add
adc
aas
push
loopne
xor
hlt
stos
and
cli
in
cmp
add
jl
out
mov
dec
inc
jp
clc
xchg
cmp
jp
fimull
mov
stc
das
test
in
pop
ljmp
loopne
add
loopne
lods
pushf
outsb
or
and
sub
test
adc
ret
repz
xor
or
cmpsl
dec
lods
imul
je
xchg
sub
js
or
sub
lds
je,pn
rcr
xchg
test
and
enter
jo
xchg
flds
lcall
fbld
cmp
fwait
imul
int3
in
adc
js
add
cmp
xchg
sbb
add
lods
fldenv
rcrb
and
fildl
lds
cmp
cmp
jb
mov
and
ret
xor
mov
loope
les
test
je
mov
xor
sarb
cmp
mov
repz
repnz
in
imul
mov
loope
inc
jns
mov
cmp
test
in
ret
sbbl
mov
push
mov
testb
fstp
hlt
xor
xorl
lret
outsl
add
or
mov
adc
xchg
movsb
stos
je
pop
pop
mov
pop
sbb
sahf
pop
shll
cmp
add
jecxz
cmp
fldl
xor
and
add
mov
xor
pop
testl
enter
push
mov
or
das
mov
movsl
js
mov
jge
and
lret
xchg
add
xchg
insb
pop
cmp
scas
add
xchg
into
out
dec
mov
bound
jmp
adc
shr
mov
mov
or
xlat
scas
loope
repz
daa
aad
out
mov
dec
stos
rol
mov
je
fnclex
inc
das
push
sbb
inc
cmp
pop
nop
insl
xor
xor
ror
inc
mov
sbb
popa
addl
adc
js
sbbl
out
loope
ljmp
sbb
arpl
fwait
das
sbb
aaa
xchg
imul
push
aam
mov
rolb
jmp
dec
js
jp
sub
daa
push
xor
mov
dec
xor
push
push
iret
call
insb
or
xlat
in
add
push
or
clc
fisttpl
xorl
mov
hlt
stc
pop
xchg
push
jp
je
cs
cmpsl
aaa
add
mov
add
lret
add
mov
repz
dec
enter
mov
int
cmp
pop
scas
mov
imul
imul
jecxz
std
sbb
mov
xchg
sbb
adc
push
inc
adc
push
jl
fcmovnu
es
ficomps
test
pop
jns
mov
or
mov
mov
jae
mov
jmp
pop
out
or
cmp
jbe
test
push
pop
mov
leave
out
push
lahf
jbe
movsl
inc
daa
lds
mov
lods
addr16
adc
daa
mov
shrl
xchg
ret
ffreep
push
push
scas
clc
das
pop
jne
xor
mov
sbb
mov
adc
stos
ret
xor
outsb
lcall
sar
filds
hlt
or
ret
sbb
outsb
leave
dec
in
mov
push
jae
inc
mov
cmp
mov
lahf
in
jnp
jo
js
jge
cmp
sbb
cmc
sub
xchg
bound
int
cmp
jg
pop
in
loop
ds
daa
insl
inc
mov
mov
jb
stos
loope
mov
loope
mov
mov
add
aas
int
mov
inc
adcl
push
addb
enter
pop
jne
in
pushf
test
xchg
inc
test
lds
mov
sbb
push
je
fldl
dec
pop
das
subl
adc
xchg
inc
and
dec
dec
fs
shrl
hlt
and
cld
mov
dec
fucom
dec
push
rcr
jbe
movsb
test
adc
ret
ret
dec
xchg
mov
mov
pop
mov
rolb
lods
jl
xchg
stc
push
push
ret
xor
es
mov
int
mov
out
dec
and
or
or
std
or
xor
clc
pop
sahf
outsb
and
adc
pop
fwait
xlat
outsl
in
pop
fxch
adc
pushf
test
rorb
push
inc
sarb
mov
cmpsb
push
mov
dec
mov
cmp
sbb
jno
mov
repz
in
sbb
dec
xlat
cmp
cs
icebp
cmp
push
arpl
xor
out
xchg
cs
mov
dec
addr16
out
test
pop
inc
mov
inc
in
cmp
ret
outsl
mov
iret
rep
pushaw
mov
sub
sti
xor
shll
jae
cwtl
pop
jg
push
jmp
pop
orb
lret
mov
stos
bound
cmp
adc
jmp
or
mov
dec
xor
dec
jbe
testl
les
bound
cli
fistl
fidivs
adc
insb
in
add
push
into
or
and
ja
push
inc
push
in
iret
dec
mov
insl
pop
mov
push
cmp
pop
jo
cld
fs
das
stc
xchg
ss
or
data16
adc
fists
or
jne
lcall
xchg
mov
popa
cmc
leave
pushf
jnp
int3
cmp
add
ret
cmpsb
adc
pop
data16
xchg
loope
pop
xor
xchg
test
sahf
push
imul
clc
or
sbb
nop
cli
mov
and
sbb
mov
jl
leave
xor
and
sbb
sbb
adc
pop
add
sbb
xor
in
jo
push
daa
jo
scas
inc
lahf
sbb
inc
enter
js
daa
mov
cmp
movsb
xchg
enter
ja
mov
and
or
ds
je
in
mov
xchg
inc
enter
mov
push
ret
orl
cli
pusha
test
adc
in
pop
scas
cwtl
add
mov
dec
iret
icebp
and
minps
sub
push
inc
xor
sbb
and
jle
out
xor
sub
and
cmpsl
and
adc
hlt
lods
and
call
insl
data16
or
and
int3
inc
sub
add
test
mov
jecxz
leave
cmp
mov
es
sub
out
pop
fisttps
mov
adc
or
lcall
clc
frstor
ds
cmp
pop
mov
out
xchg
or
outsl
loop
popa
das
lea
xchg
out
loopne
stc
fnstenv
xchg
icebp
xor
fiaddl
das
sbb
add
mov
rcll
js
sub
mov
fdivrs
loope
lret
push
cmpsb
imul
xchg
test
call
sar
push
inc
mov
and
into
int
xor
dec
push
lcall
push
jmp
or
cltd
sbb
dec
mov
outsb
mov
dec
pop
js
addr16
push
mov
ficompl
or
scas
jl
inc
fcomp
pop
jg
shrl
cld
cltd
imull
pop
out
inc
adc
mov
cli
lcall
outsb
pop
ret
repz
push
pushf
or
frstpm(287
jo
xor
leave
or
dec
mov
adc
data16
arpl
aas
in
loopne
pop
cmpl
test
popa
dec
xor
popa
mov
repz
testl
rcrb
jnp
add
pushf
loopne
rcrb
pop
test
dec
dec
ja
ffree
add
jmp
das
mov
inc
mov
push
fisubl
jne
pop
dec
cmp
jg
mov
scas
xor
xchg
xor
jns
mov
ja
mov
subl
sbb
sbb
in
outsb
test
and
dec
push
mov
loopne
lock
dec
out
adc
adc
sbb
leave
cmpsb
addl
dec
in
hlt
imul
pushf
movsl
add
sbb
pusha
mov
and
sbb
pop
repz
stos
and
add
lret
jg
lds
movsb
pop
aam
mov
mov
jmp
xchg
cmp
cmp
push
aad
sbb
dec
mov
inc
dec
repz
sbb
ja
adc
cmp
and
or
pop
shll
push
adc
std
fistl
test
xchg
cmpsl
cwtl
fistpll
mov
lods
test
mov
lret
inc
in
pop
insl
sbb
jg
in
ds
mov
pop
inc
inc
pop
bound
in
loop
push
mov
mov
aad
mov
xor
arpl
jo
push
icebp
lcall
lea
push
xor
add
in
ret
outsb
or
std
cwtl
movsb
rcrl
inc
loop
pop
movsb
fisttpl
je
rsm
pop
or
cmp
pop
adc
xor
loopne
push
rcr
loopne
test
push
jle
inc
pushf
scas
psrlw
fistl
lods
mov
in
hlt
mov
mov
mov
xchg
sbb
daa
mov
pushf
mov
adc
push
mov
adc
and
jle
xor
and
aad
in
test
shll
insl
push
ds
out
xchg
gs
in
xor
cmpb
stos
in
loop
push
lea
les
or
pop
fisttps
pop
loop
cmpsl
aaa
xor
dec
mov
bnd
cmp
stos
inc
and
hlt
jne
dec
sti
sub
mov
mov
and
xchg
fucomip
cmp
pop
enter
divb
aas
mov
outsb
movaps
adc
cmp
fistl
jl
mov
adc
lods
sbbb
push
inc
mov
test
dec
dec
cmp
push
and
in
mov
push
add
inc
nop
xchg
cmp
push
stos
gs
mov
mov
int
cmp
in
mov
add
jmp
jmp
std
out
int
aam
fwait
leave
add
test
gs
sbb
mov
mov
push
fs
popa
in
xchg
aad
out
adc
jae
adc
mov
data16
stos
cmpsl
push
jnp
xor
aas
push
mov
mov
pop
ljmp
inc
or
pop
arpl
push
cmpl
add
lock
fsubs
icebp
arpl
or
nop
xchg
mov
idiv
cmp
ficomps
cmp
mov
jl
lods
dec
pushf
fldenv
xor
lods
or
cmp
out
repz
and
xchg
loop
add
sti
dec
jp
mov
cmpb
int3
aad
and
mov
out
adc
fistpl
mov
dec
mov
lcall
pusha
add
xor
dec
bound
xlat
mov
push
push
dec
jecxz
cltd
cltd
dec
jns
inc
daa
clc
mov
in
ret
jno
and
inc
sahf
pop
push
aam
mov
push
and
outsb
les
mov
xchg
sbb
inc
cmp
sbb
test
fwait
dec
cmpsb
push
out
jae
xor
push
add
mov
cmp
les
pop
test
incb
ja
popf
les
nopl
test
stc
mov
mov
mov
loope
std
jg
daa
cs
inc
cmpsb
inc
sub
pop
xchg
repnz
push
frstor
mov
pop
xchg
cmp
dec
outsl
xor
cmp
mov
xchg
fs
jo
loop
aas
push
add
sbb
cmp
mov
jmp
aad
pop
clc
pushl
pusha
mov
int
scas
movsl
dec
fldt
mov
adc
das
mov
arpl
push
jmp
aas
nop
sub
push
jbe
fwait
push
les
mov
or
adc
data16
mov
loope
js
in
lret
nop
jae
lea
sub
lcall
ret
push
cltd
ds
cli
out
mov
and
test
and
xchg
lcall
or
pop
or
lock
sub
or
jae
ror
popf
cld
mov
fidivrs
push
in
cmpsl
push
dec
out
adc
in
fs
shlb
xchg
cli
sbb
and
adc
cld
ja
test
and
shlb
xchg
fs
scas
icebp
xor
clc
sub
mov
push
int3
cld
into
push
and
inc
adc
sbb
mov
repz
pop
adc
inc
sub
and
subps
adc
mov
lea
nop
out
aas
push
jge
mov
inc
push
jbe
xchg
fsubrs
out
dec
jo
out
cmp
into
insb
add
jecxz
movl
jbe
fidivl
mov
mov
call
add
fidivrl
mov
nop
xchg
test
pop
in
roll
sti
gs
das
sbb
test
jno
mov
cwtl
faddl
shrb
jmp
add
test
xor
pop
mov
mov
pop
gs
sbb
and
sbb
push
mov
imul
cmpsb
out
push
orl
lods
out
aam
xchg
aaa
xlat
sub
loope
jnp
inc
js
rcrl
fmuls
or
xlat
stos
mov
pushf
xor
ss
push
sbbb
mov
mov
cmpsl
jmp
or
cmpl
xor
shrl
leave
dec
data16
push
out
mov
mov
loopne
sbb
xchg
into
or
fnsave
hlt
repz
loopne
or
mov
jle
test
sbb
fidivrl
lods
pop
adc
out
push
in
pop
int
add
cltd
pop
or
xlat
add
mov
push
stos
mov
movsb
mov
imul
mov
inc
out
mov
push
test
push
push
xlat
cmp
dec
cs
je
outsl
in
cmpsb
mov
dec
xor
sbb
loopne
xchg
movsb
movsl
sbbb
fsubrl
addr16
iret
mov
gs
mov
jecxz
lds
xchg
mov
cmpsb
pushl
and
xorb
and
push
cmp
rclb
psubusb
sub
xchg
and
lcall
sub
mov
in
adc
sub
adc
and
cmc
xlat
sub
mov
data16
push
in
test
xor
imul
jns
push
or
mov
mov
and
lret
push
mov
push
in
aaa
xor
or
xchg
bound
pushf
xor
pushf
mov
or
das
cmp
jg
or
sbb
sub
mov
push
mov
adc
lahf
out
cmpsb
or
les
dec
pop
sub
push
in
dec
es
shrb
xchg
jp
je
inc
loop
xor
xchg
mov
insl
outsl
rol
iret
sarb
add
icebp
and
out
push
ljmp
pop
paddsw
into
sahf
jle
addb
push
test
cs
add
out
pop
lods
fcomip
jmp
cmpb
aad
jo
xchg
rcll
sbb
inc
aas
frstor
push
pop
adc
jg
cmp
cmp
dec
sahf
imul
push
pop
xchg
nop
cmp
lea
mov
or
shrb
jl
or
shrl
hlt
mov
ds
je
sub
jmp
inc
push
xadd
adc
mov
icebp
in
adc
inc
lret
int3
sub
xchg
push
add
cmp
adc
in
mov
sbb
and
adc
or
jno
in
sub
stos
ja
mov
outsl
mov
out
xchg
jge
enter
xchg
fsub
cld
in
mov
inc
sbb
stos
mov
push
in
and
mov
push
jp
std
pushf
fildll
flds
mov
add
mov
mov
mov
pop
lret
mov
xchg
scas
hlt
xchg
or
out
into
jno
mov
sbb
orl
mov
pop
and
test
jbe
mov
in
dec
add
jne
and
inc
and
mov
movsl
imul
mov
lods
cs
jo
test
outsb
js
push
inc
mov
and
jnp
mov
pop
push
dec
sbb
jno
fwait
rorb
test
js
call
jmp
push
sti
dec
lods
hlt
dec
imul
outsl
mov
fistps
push
iret
dec
cmp
xchg
aam
addl
xchg
inc
jno
sarl
cmpsl
pop
popa
xor
test
repz
nop
xorl
xor
loope
pop
or
mov
inc
xchg
jbe
or
xchg
nop
cmp
test
push
pop
hlt
in
cmp
imul
mov
push
loope
repnz
xor
out
xor
jns
pop
xor
fwait
jge
push
jl
sbb
insl
mov
out
jbe
ljmp
aaa
sbbb
sub
jp
dec
repz
jle
jnp
sbb
and
lds
lret
addr16
sarl
mov
sti
add
and
hlt
aam
sub
iret
ljmp
xor
cmp
repz
lock
pop
pop
lds
lods
das
sub
add
push
or
cli
dec
mov
add
mov
mov
decb
pop
mov
lret
jnp
outsb
mov
add
dec
or
cmp
out
hlt
je
fisttpll
pop
subb
popa
jo
inc
adc
fstpl
push
test
mov
mov
xchg
xchg
sbb
sti
filds
les
jbe
adc
dec
mov
mov
out
insl
mov
rolb
call
ljmp
xor
fsubrs
popf
stc
cmp
mov
xor
lcall
dec
and
or
sbb
ja
xchg
out
lds
scas
aaa
les
test
stc
adc
xor
sbb
rol
test
test
cltd
add
bound
lock
or
lds
mov
adc
and
push
int3
inc
push
ror
ret
jns
jns
imul
pop
daa
add
inc
les
lds
jmp
sbb
add
arpl
xchg
pop
and
out
dec
lret
fld
xor
mov
imul
mov
xor
test
xchg
xchg
mov
pop
movsl
insl
cli
les
mov
xabort
je
fxch
ror
rorl
xor
roll
aam
lods
orl
mov
pop
and
inc
push
push
ss
bound
adc
mov
pop
rorl
pop
scas
mov
lock
jns
fcmovne
lret
adc
pop
fcomps
pop
mov
pop
loopne
outsb
les
roll
arpl
xlat
jmp
cld
shlb
pop
in
das
inc
loop
sbb
les
test
rorb
jbe
adcl
cmc
enter
call
mulb
xchg
test
adc
cmp
sbb
js
subb
lcall
adc
sub
enter
aas
cmp
aaa
into
mov
test
xchg
lock
fwait
scas
nop
mov
sbb
inc
xor
arpl
fwait
into
in
sub
xchg
out
or
pop
popl
loope
sbb
imul
js
xchg
std
push
imulb
xchg
xor
repnz
mov
add
xchg
out
icebp
subl
cmpsl
div
es
mov
movsl
and
or
push
loope
popf
int
xchg
mov
pop
add
jecxz
jle
movsb
jo
sbb
push
leave
mov
bnd
ljmp
stos
stc
sbb
fdecstp
test
dec
loop
xor
xchg
xchg
in
lods
adc
int3
int
repnz
pop
jle
dec
xor
adc
loopne
inc
adc
xor
or
xor
adc
jecxz
lods
mov
mov
iret
scas
mov
mov
push
imul
or
mov
adc
adc
fistpll
adc
mov
out
push
iret
int3
adc
mov
jg
repnz
cs
gs
and
popf
imul
fdiv
cs
sbb
in
inc
add
aaa
popl
adc
ja
dec
pop
cmp
scas
lea
loop
inc
insb
adc
sbb
xchg
push
sub
sub
daa
mov
mov
jae
je
fisubs
stos
jo
sub
xchg
popf
mov
sbb
or
in
scas
movsl
test
outsb
jno
lahf
xchg
add
mov
inc
imul
dec
push
cmp
inc
addr16
fldcw
fsubs
cs
push
jne
cmpsl
je
cmpl
adc
jno
imul
out
std
mov
roll
rcrl
cmp
loopne
pop
fsubl
bound
xor
push
pop
mov
ds
push
orl
iret
das
dec
lods
sbb
es
data16
insb
xchg
xchg
jae
fcompl
out
add
pop
clc
adc
mov
dec
lods
and
sub
js
mov
pushf
int
data16
mov
nop
and
lret
sbb
jle
jl
pop
cmp
mov
push
adc
mov
mov
leave
lahf
mov
int
test
push
push
xchg
or
dec
cmp
dec
mov
inc
mov
sub
imul
xchg
xchg
jge
sbb
cli
iret
mov
test
dec
sti
dec
dec
mov
insb
mov
push
fimull
xchg
fisttpll
mov
data16
pop
push
aas
push
std
sbb
push
fbstp
shlb
lcall
rorl
sub
push
cmp
ja
mov
pop
test
gs
addr16
lret
cltd
xor
cmp
sub
lret
mov
scas
aas
inc
or
adc
int
cmpsb
aaa
call
insb
mov
cmpsb
incb
popa
sti
inc
movsb
insl
out
ja
decb
pusha
in
mov
lea
cltd
sbb
ja
lods
mov
stos
jb
add
ret
rol
iret
test
insl
fsubs
aas
pop
stc
adc
loopne
cmpsb
inc
xchg
mov
in
cs
push
ret
pop
lcall
shll
int
lret
and
lcall
sub
cmc
ja
jl
mov
mov
lods
adc
push
dec
imul
pop
leave
cmp
fdivl
imul
ficoml
ss
out
dec
pop
mov
xor
pop
jns
adc
mov
or
mov
pop
xchg
je
cmp
aam
enter
mov
popf
mov
push
js
jae
int3
jne
sbb
jno
jp
mov
mov
cmc
push
jnp
fldenv
lods
inc
dec
pop
jbe
mov
mov
out
adc
mov
rcl
inc
jecxz
or
addl
push
into
pop
and
stc
sbb
rol
adc
sub
cmpl
inc
test
popa
xor
cmp
mov
add
dec
xorl
xor
xlat
outsb
gs
jge
sub
push
pop
imul
leave
je
rcrl
xor
sbb
inc
dec
dec
jno
in
inc
shlb
jo
jno
mov
fstps
cmp
jae
out
mov
inc
mov
inc
push
or
xchg
in
adc
dec
or
loope
xchg
dec
loop
or
ljmp
lds
bound
pop
xor
push
pop
bound
mov
imul
subl
inc
leave
jp
scas
das
xlat
sbb
ss
hlt
dec
fwait
mov
lods
inc
pop
ror
push
into
insb
out
push
aaa
stc
cmp
and
sub
sti
lcall
mov
and
mov
push
add
or
push
cli
mov
inc
xor
jmp
dec
arpl
mulb
dec
sbb
stc
out
aam
aam
mov
fiaddl
movl
mov
or
cmpsl
aaa
sarl
in
push
mov
lcall
sub
xor
loop
jle
jge
sti
add
adc
dec
rcr
mov
and
xchg
nop
push
mov
jmp
hlt
cmp
jle
stc
dec
inc
popa
rol
add
xor
mov
scas
pmovmskb
pop
ljmp
nop
push
cmpsl
cmpsb
fwait
inc
imul
dec
repnz
inc
and
jg
inc
shl
daa
pop
lahf
mov
and
jns
inc
inc
push
sub
rclb
sub
enter
pop
or
shlb
daa
dec
inc
fisttps
mov
nop
push
add
in
jg
push
movsb
xchg
rcrl
fsubp
mov
mov
int
mov
pop
mov
jo
or
dec
test
push
mov
cwtl
inc
aam
or
add
inc
or
jge
xchg
push
rcll
lds
out
lcall
icebp
sbb
test
sbb
cmpsl
loop
outsb
add
cmp
das
xor
scas
ja
pop
sbb
mov
jl
jg
mov
pop
cmp
lcall
ljmp
sbb
nop
push
add
and
add
jbe
mov
push
sbb
adc
iretw
subw
sahf
cmp
test
lds
aaa
jmp
inc
jno
adc
mov
and
cwtl
mov
xchg
sbb
cs
pop
loop
sub
call
mov
adc
pop
les
inc
pusha
jnp
clc
lock
and
movb
xchg
daa
xchg
popa
mov
push
pop
and
int3
mov
mov
shll
insb
rorl
pop
orl
adc
out
xor
cmpl
outsb
sbb
insl
mov
mov
lahf
idivl
scas
std
repnz
inc
sub
nop
loope
xor
mov
push
mov
loop
xchg
dec
inc
and
fisubl
fwait
adcl
push
jle
dec
xor
inc
inc
clc
xchg
fcompl
mov
in
test
inc
in
imul
jne
call
jp
ds
lahf
push
cmp
test
movsb
repz
pushf
in
jno
xor
pop
mov
gs
mov
out
insb
mov
aam
std
and
lret
cmp
xchg
sbb
or
mov
negb
cli
cmp
or
and
and
imul
das
ret
and
movsl
in
xlat
push
cld
mov
icebp
scas
xor
sbb
sahf
inc
dec
cltd
jle
jb
push
lods
xchg
or
and
loope
das
popf
jge
popf
xchg
stos
pop
data16
push
add
out
sub
repnz
call
call
xchg
xor
jns
sub
pop
mov
cmp
sub
fwait
sahf
pushf
mov
inc
pop
call
dec
xchg
arpl
mov
push
xchg
dec
mov
dec
jns
xchg
mov
adc
push
shlb
sub
inc
xlat
cmp
jo
in
sbb
shlb
ret
test
mov
ds
xchg
push
loopne
jl
mov
jno
cmc
cmp
pop
fmuls
stc
pop
lret
add
pop
mov
inc
mov
sub
push
int
insl
dec
inc
inc
xchg
sub
lods
test
outsl
mov
inc
add
push
lcall
popa
dec
jns
daa
lds
xor
arpl
cld
mov
push
fisubl
in
pop
aaa
pop
add
jno
adc
fsubs
popf
loopne
aam
lcall
fstl
lcall
mov
lock
inc
add
ret
lea
push
jne
jp
in
lsl
xorb
mov
lods
movsb
scas
mov
cmp
jmp
jo
sbb
das
test
enter
lods
ljmp
push
pop
lea
or
sbb
dec
and
das
out
jns
fmul
sbb
pop
push
and
mov
ljmp
ret
cld
stos
lret
gs
xchg
stos
dec
lcall
adc
and
push
pop
mov
mov
add
push
and
lods
jecxz
cltd
cmc
and
add
stos
pusha
push
pop
jmp
fcom
dec
int
aam
orb
jne
xchg
out
sub
imul
inc
mov
xchg
mov
push
or
and
and
sub
ret
mov
jmp
loope
dec
mov
cs
sbb
add
push
xchg
rcr
adc
mov
lcall
lea
into
inc
mov
lret
and
cmp
nop
rcrb
shl
xchg
xchg
fnstsw
fs
sarb
aam
pushf
add
out
out
mov
mov
cmpsb
and
nop
cmp
jmp
lds
cs
ret
mov
adc
sbb
pop
scas
xchg
mov
pop
add
adc
imul
movsl
push
xlat
lret
jl
mov
jle
vcmppd
aad
and
mov
add
ja
popf
in
mov
int3
cmp
and
ficomps
jmp
cwtl
sub
inc
mov
sti
jb
push
pushf
xor
mov
call
jae
xchg
push
cmp
mov
adc
sbb
aas
pop
fsubs
fistl
imul
mov
nop
sarl
bound
push
popf
push
in
pop
push
lcall
adc
icebp
repz
movsl
dec
js
sbb
test
adc
mov
or
insb
sbb
pop
pop
xchg
or
repnz
cmpsb
dec
mov
push
push
aaa
sub
notl
ds
xchg
ds
test
mov
dec
xchg
add
loop
mov
push
out
and
movsl
popf
shld
xchg
mov
cmpb
mov
sbb
adc
lcall
sbbb
push
les
negb
notl
push
aad
xor
repz
popf
sbb
sub
cmp
push
mov
fbstp
add
xchg
pop
mov
and
cltd
sti
outsb
jb
xlat
push
sahf
in
or
in
insl
pop
inc
gs
cs
cltd
cmpsb
or
mov
jge
call
or
adc
inc
flds
dec
pop
les
inc
cmp
arpl
jnp
mov
push
dec
rol
aam
jle
sub
in
cltd
jo
adc
mov
add
inc
insl
pop
push
pop
push
mov
push
lahf
inc
lods
adc
inc
and
call
fs
push
mov
mov
movsl
filds
add
mov
push
xchg
xchg
xchg
and
mov
out
arpl
lahf
mov
sub
jp
aaa
fstl
push
repnz
ret
sbb
out
sub
in
not
mov
jne
jge
sub
jle
push
add
mov
insl
add
mov
mov
jp
cmp
test
xor
test
jnp
push
add
ja
lret
push
inc
xlat
test
out
xor
mov
mov
lods
movsb
sbb
or
xor
sbb
insb
add
in
pop
cmp
jb
lahf
push
mov
rcrl
pop
ret
mov
mov
mov
inc
pop
faddl
pop
sti
ds
mov
shlb
fists
cmpl
in
dec
mov
pop
mov
fldt
aam
dec
mov
dec
addl
fimuls
iret
fidivl
inc
add
stos
sbb
xchg
repnz
lea
cmp
es
mov
jmp
push
mov
sub
outsl
repz
fidivrl
adc
out
push
push
std
push
cwtl
push
scas
fwait
jno
push
rclb
push
cmp
pop
mov
xchg
mov
push
cmpl
hlt
pop
movsb
mov
cmp
movsl
mov
imul
mov
push
jne
adc
addr16
and
add
sbb
jbe
aam
bound
lea
mov
in
dec
idivb
and
adc
cmp
je
jp
jecxz
cs
mov
pusha
inc
mov
xlat
shll
jmp
test
xor
add
les
pop
pop
push
cmc
inc
xor
les
or
cmpsb
jg
sbb
jns
fiadds
outsl
sbb
into
sbb
adc
int
push
lods
cwtl
mov
mov
or
fsubs
xchg
and
fistps
iret
sbbb
jge
push
test
push
ds
rorb
mov
xor
xor
cs
je
lret
dec
ljmp
in
mov
in
outsb
jae
sub
mov
lret
xchg
mov
adc
jge
xchg
lahf
inc
je
test
testl
dec
jb
cmp
pop
or
xor
cmp
push
cmp
cmc
leave
fisttpl
popa
clc
movsl
push
movsl
ljmp
add
cld
lods
in
jne
pop
rcrl
popf
inc
mov
mov
inc
fidivrl
xor
adc
addl
flds
sarb
imul
pop
repnz
xchg
mov
stos
and
lret
xchg
sub
cmp
fists
jl
cltd
xor
arpl
jns
scas
mov
add
popa
sti
xchg
lock
xchg
outsb
mov
pop
daa
inc
repz
sbb
adc
mov
test
mov
add
scas
decb
lods
movsb
or
or
or
mov
jmp
add
insb
and
add
lods
xchg
arpl
mov
inc
xchg
jo
int3
sub
add
mov
adc
aaa
dec
out
mov
rol
pop
xlat
mov
pop
mov
lods
inc
push
push
xorb
xchg
roll
popf
repz
jnp
jns
dec
push
pop
adc
or
mov
loope
movsb
lret
addr16
cmp
mov
push
add
cmp
fists
inc
sub
out
iret
lods
or
pop
adc
push
jecxz
lods
xor
mov
nop
test
push
xor
das
cmp
fs
or
mov
mov
mov
push
shrl
adc
dec
ds
sub
bnd
js
js
mov
sbb
push
jb
movsl
roll
xchg
jge
jns
test
push
out
mov
push
adc
stos
hlt
and
jp
mov
aaa
fldl
cwtl
int3
mov
jmp
mov
add
les
mov
cmpl
adc
mov
pop
std
pop
and
negb
cmp
mov
addl
pushf
out
add
pop
mov
vmovdqa
aaa
test
push
jnp
xchg
dec
icebp
mov
and
dec
scas
sub
inc
add
push
jmp
dec
pop
jecxz
xchg
or
xchg
sub
push
popa
mov
push
mov
xor
icebp
aaa
int
sbb
sbb
pop
ficompl
jecxz
push
inc
lcall
push
push
xchg
mov
push
jo
pop
mov
mov
sbb
cmpb
mov
mov
xor
test
jmp
mov
xchg
cmp
jmp
in
push
out
cmp
push
mov
cmp
daa
fwait
inc
push
mov
xor
std
mov
adc
stos
mov
and
movsl
xor
imul
xchg
addr16
mul
ljmp
mov
sbb
dec
test
adc
negl
sub
shll
add
pop
jl
xor
repnz
xor
or
dec
lret
lods
mov
adc
xchg
or
push
inc
in
popl
pop
into
cmp
out
push
add
sti
xorl
stc
xor
pop
stos
cmpsl
cmp
mov
xlat
fistl
fiadds
pop
mov
or
mov
dec
pop
xchg
mov
dec
inc
pop
add
jmp
mov
cmc
adc
bound
jl
sub
or
cmp
int3
pop
mov
or
in
cmp
jnp,pt
pop
dec
dec
aas
mov
sarl
or
scas
rcrb
lods
xor
ret
mov
mulb
int
xchg
int3
out
add
imul
ret
adc
add
out
mov
xor
dec
add
mov
data16
fisttpll
insl
xor
jnp
lahf
jb
mov
call
jns
dec
xchg
js
mov
sbb
ss
cmp
test
pop
leave
shlb
jmp
cmpsl
xchg
dec
cmc
sub
cmp
or
imul
fwait
repnz
mov
mov
in
icebp
mov
xchg
and
addr16
cli
or
mov
out
data16
cmp
mov
es
dec
lret
jnp
xchg
add
mov
out
mov
xorb
pop
gs
mov
xchg
imul
cmp
loope
lea
loop
jno
mov
mov
or
xor
into
xor
sti
dec
loop
dec
jmp
test
jns
adc
inc
subl
fsubr
jg
aas
in
jge
outsl
jb
xor
ret
arpl
add
sbb
ret
shll
sbb
imul
mov
jp
jo
out
scas
mov
movsl
sbb
mov
daa
loope
sub
js
xchg
popf
lock
loopne
shl
rorl
dec
scas
loop
testb
push
push
popf
push
push
mov
lods
jno
add
lret
out
or
pop
and
call
inc
mov
mov
sbb
jns
ds
xchg
addr16
mov
adc
push
out
push
lock
out
or
jp
icebp
scas
push
in
js
sub
mov
stc
push
or
xor
jl
push
cmc
cwtl
in
cmp
sbb
mov
mov
pop
into
dec
lcall
mov
int3
sti
loope
jecxz
jl
notb
pusha
out
into
push
nop
dec
loope
push
bound
adc
push
mov
int3
dec
out
or
loop
enter
ret
das
and
loop
jecxz
pop
jb
pop
jecxz
mov
fildll
aaa
rorb
mov
test
mov
dec
xor
jmp
push
dec
testl
push
xor
pop
fsts
fsubrp
or
and
icebp
or
mov
lock
and
dec
int3
arpl
sbb
out
mov
cltd
sub
sti
lahf
and
dec
outsb
lds
lret
ret
in
mov
push
loope
jne
pop
mov
insl
out
dec
jmp
rcrl
cwtl
mov
xor
out
lcall
push
movsb
xlat
fimuls
push
lock
insb
push
push
out
xchg
cwtl
jno
pop
rcr
ss
ljmp
jns
jecxz
inc
mov
pop
inc
cwtl
cmpsl
sbb
popa
addr16
jb
test
lds
dec
cmp
fistl
sbb
sbb
insb
cmc
xorl
imul
lret
in
pop
rcl
imul
outsl
fsubl
out
inc
inc
in
sbb
cmpb
aam
lahf
jp
lds
mov
cld
loope
test
mov
mov
es
std
addl
mov
adc
push
cmp
sahf
cmp
shrl
inc
adc
stc
std
cmp
movsl
scas
dec
loop
lret
cmp
pop
loop
jge
test
push
stc
inc
pop
adc
dec
push
loopne
inc
clc
jno
std
add
dec
dec
mov
pop
js
sub
lret
add
sbb
ljmp
ds
cs
sahf
jg
fsub
jb
stos
pop
xlat
mov
out
push
mov
in
cmp
fs
iret
add
jo
inc
pop
mov
sbb
test
lret
ljmp
cs
fimuls
xor
cltd
push
movsl
inc
bound
fisubrs
rol
in
mov
inc
pop
scas
test
ret
dec
bound
arpl
shrl
sbb
cli
nop
mov
cli
repnz
dec
jnp
lret
in
movsb
xchg
push
inc
cmp
jge
icebp
rclb
mov
mov
aaa
js
mov
imul
insb
pop
inc
fists
adc
jge
pop
test
pop
xor
or
inc
adc
fsubrl
mov
rolb
imul
inc
dec
lahf
push
mov
push
xchg
cmp
sub
mov
add
inc
cmp
cmp
jmp
dec
xchg
insb
insl
push
data16
lret
push
stos
aaa
test
and
fiadds
cmpl
mov
movsl
push
mov
adc
sub
in
xor
pop
sbb
sarb
stc
addl
mov
shrl
mov
das
adc
add
mov
subb
mov
sub
jo
mov
mov
lock
push
sub
jg
cld
push
cli
sbb
dec
and
fsubs
or
jns
ret
mov
xrstors
sub
add
lea
cwtl
adc
cmp
cmp
jns
xchg
outsb
adc
mov
out
xor
mov
mov
pop
shl
test
jg
jb
jl
lret
pushf
rclb
test
and
inc
fmull
push
or
xlat
outsb
rcr
lret
lahf
adc
pop
fnsave
mov
pop
push
dec
flds
mov
ret
addr16
mov
mov
or
xchg
test
inc
enter
xchg
or
pop
push
cltd
dec
mov
iret
jp
and
mov
mov
mov
cli
in
push
mov
mov
push
or
cmpl
stos
das
fldcw
push
mov
sub
jl
scas
cmp
mov
xchg
push
xchg
adc
xchg
jno
jne
ljmp
insl
out
fs
inc
repz
xor
pop
sbb
faddp
flds
xchg
sar
ja
or
adc
ja
and
mov
and
push
movsl
stos
pop
dec
adc
sub
lods
cli
push
mov
idiv
add
inc
push
push
and
jle
and
jnp
scas
inc
loope
mov
inc
xchg
jle
and
aad
push
icebp
adc
xor
aad
cmpsb
pop
mov
data16
mov
je
xchg
lods
test
xor
mov
fwait
mov
mov
push
xor
jmp
stos
js
push
iret
push
adc
add
dec
pop
int3
cmpsb
ja
cmp
mov
cmpsl
cld
cmp
ret
out
mov
push
cld
cmp
mov
xor
and
mov
dec
into
int3
dec
ja
out
push
fdivrp
sbb
sub
aad
mov
mov
push
loope
jne
xchg
and
cld
push
mov
loope
inc
xchg
out
jo
adc
rcr
mov
inc
and
stc
or
xor
pop
das
int3
lea
and
lods
lods
jae
mov
orb
xchg
lods
pop
dec
out
fldt
jmp
jne
sbb
ss
divb
mov
ret
imul
jb
dec
test
push
cli
mov
andb
mov
adc
cmp
negl
or
lcall
mov
ss
push
icebp
sbb
xor
lock
add
or
in
daa
inc
fisubs
sarb
push
lds
or
xchg
push
arpl
pop
pop
jecxz
lret
or
js
jnp
jns
hlt
cmp
mov
pop
ss
push
push
mov
mov
dec
add
mov
in
push
mov
stc
sahf
cmpsl
inc
add
dec
testl
sub
pop
insl
mov
inc
aas
or
sub
cli
jmp
pushf
xchg
ret
nop
push
cmp
iret
in
fwait
cmp
and
or
gs
cmpsb
jnp
dec
cmpsl
dec
sub
mov
xchg
adc
inc
cmp
repz
sbb
sbb
inc
lcall
xor
inc
jb
loopne
jae
int3
inc
or
test
es
outsb
mov
jp
stos
sub
fcomp
add
cmpsl
dec
fnstenv
js
adc
imul
mov
pushf
insb
out
dec
ss
in
in
sbb
dec
add
idivl
sbb
push
in
push
sub
shl
mov
cmpsb
inc
pop
ja
aaa
fs
inc
push
lret
pop
mov
lods
daa
mov
mov
inc
xor
fnsave
add
mov
fcmovnbe
ljmp
pop
fstl
lock
gs
inc
loope
repnz
xchg
xchg
jne
adc
lcall
nop
in
mov
enter
adc
pop
adc
sbb
ds
adc
inc
push
frstor
call
lea
test
pop
xor
pop
add
mov
rcrb
lods
test
sar
mov
pop
hlt
push
loop
add
in
and
or
mov
pop
push
jl
jb
idivb
icebp
scas
jp
int3
loopne
incb
ljmp
fxch
or
movsb
test
jge
ja
repz
mov
adc
movsb
push
cltd
lahf
mov
sarb
jmp
sbb
sub
in
cmp
mov
dec
xchg
lret
jecxz
outsb
cmpsb
js
mov
push
int3
lret
and
lahf
mov
shrb
fbld
sub
lock
or
add
inc
xor
sub
mov
xor
push
mov
fdivrl
mov
inc
pop
adc
fisubl
pop
mov
jmp
fldt
jns
cmp
mov
push
sbb
cmovnp
fstpt
mov
sbb
pop
or
fnstcw
stos
sbb
lods
ja
hlt
ja
lret
cmc
out
fwait
xchg
ja
sub
adc
lock
int3
inc
cltd
or
mov
bound
add
sub
pop
pop
mov
sti
sahf
dec
lds
pop
mov
lds
clc
mov
mov
dec
push
clc
pop
pop
mov
xchg
mov
rorl
pop
mov
sbb
jge
and
sub
mov
sub
dec
or
jecxz
xchg
sub
fldl
mov
mov
in
lds
clc
out
xor
lret
push
jp
sub
mov
jmp
rcrl
test
pop
repnz
jnp
icebp
clc
mov
out
call
movsl
repnz
mov
xchg
jg
sbb
ret
cmp
les
cld
mov
insb
cmp
mov
xor
adc
jl
xlat
mov
mov
ret
mov
xchg
mov
aad
push
jbe
push
roll
cmp
inc
mov
xor
xor
pop
lock
or
shrb
push
scas
mov
fs
and
aaa
lcall
push
lods
dec
leave
sub
mov
iret
dec
lods
xor
and
mov
xor
call
fisubrs
mov
push
xorl
shlb
sbb
loope
xorb
mov
gs
cmc
jno
inc
pop
cwtl
fmuls
out
aad
dec
push
cmp
jbe
fimull
jns
jb
loope
shrl
or
test
and
fsubrl
les
sbb
lods
je
pop
push
mov
inc
sbb
fstpt
add
mov
shl
push
xchg
js
xchg
push
mov
jmp
stc
jb
mov
cmp
pop
push
xchg
mov
inc
fstpt
jns
and
movsl
and
inc
sbb
dec
xchg
arpl
and
sbb
pushf
ljmp
pop
lock
ror
cmpsb
pop
cs
notb
shrl
mov
stos
add
test
sub
movsb
mov
cwtl
or
rcl
push
adc
mul
dec
dec
xor
push
bnd
jmp
mov
lods
invd
and
xchg
cmpl
arpl
fistl
sub
ficomps
and
aad
lret
cmp
jp
jge
call
fnsave
pop
arpl
ret
cld
push
stc
cmpsb
cmp
jp
mov
or
push
add
sbb
rcrb
sbb
cmp
ret
and
imul
loope
inc
cmp
inc
xchg
mov
test
sbb
mov
les
aaa
ds
xor
scas
xchg
mov
cmp
xor
insl
and
ds
loop
xchg
xchg
cmp
negl
xor
or
lcall
pop
jp
jae
dec
bound
inc
mov
add
sub
loop
xchg
jb
cmovne
enter
sbb
insb
xchg
sbb
jp
xchg
sbb
mov
ljmp
push
jle
cmpsb
push
adc
sbb
inc
and
push
jp
push
orps
push
mov
ljmp
stc
adc
test
call
cmp
rorb
daa
add
cmp
cmp
push
push
cs
adc
jns
outsl
push
jge
push
inc
dec
xchg
in
test
sbb
movsb
push
sti
pusha
adc
or
clc
mov
mov
inc
mov
sub
movsb
push
cs
push
testb
add
scas
je
xlat
jb
scas
iret
stos
xchg
int3
dec
scas
inc
int3
add
cwtl
adc
jp
or
in
cmp
std
mov
lea
orl
mov
shll
or
addr16
aaa
cmp
arpl
dec
sub
lcall
jge
jnp
jp
sbb
mov
repnz
jbe
dec
xor
dec
cs
pop
icebp
or
push
sub
test
lds
pop
fstl
lret
shll
mov
or
and
addr16
loop
push
dec
mov
shll
xchg
lock
aaa
add
int3
out
into
rol
jmp
out
cmp
mov
pop
or
adc
inc
inc
repz
pop
enter
int3
mov
in
push
call
or
aad
cltd
cmp
xchg
mov
in
int3
test
xchg
mov
jae
push
js
sbb
testl
push
inc
outsb
mov
lret
les
popa
or
data16
add
insb
ret
jo
cmp
cmp
test
lahf
mov
daa
outsl
and
out
aaa
ds
aad
cmpsl
and
push
adc
imul
jp
or
cmc
mov
int
mov
cwtl
mov
mov
add
jg
push
mov
cli
pop
dec
cld
out
pop
xlat
lods
andl
xor
iret
push
mov
pcmpeqw
push
cmp
test
pop
ljmp
dec
daa
mov
pop
rcrl
hlt
push
xor
fidivl
mov
stos
test
mov
mov
repnz
sub
stos
out
cmp
fisubl
jnp
dec
sub
xor
out
das
xchg
pop
imulb
cld
pop
adc
cmp
dec
daa
cmp
hlt
dec
setge
in
rorl
sub
mov
jno
dec
jge
pop
dec
push
ds
pop
inc
int3
mov
loopne
imul
mov
adc
dec
add
outsb
aam
pop
jne
out
mov
push
lcall
ficoms
out
iret
enter
lret
inc
and
cmp
mov
cwtl
negl
jle
push
xor
pop
jne
out
sbb
jno
add
scas
sets
add
mov
stos
inc
pushf
fstl
jnp
out
pop
aaa
lods
fmull
pusha
xor
push
arpl
inc
pop
ret
mov
and
addl
mov
xor
cmp
in
cmp
shll
addr16
loope
mov
sub
ss
out
mov
aam
sbbb
insb
push
mov
mov
jmp
dec
mov
lock
inc
js
mov
or
mov
xor
outsl
lea
int3
insl
mov
adc
imul
mov
pop
or
fs
xlat
aam
dec
xchg
pop
xchg
xchg
add
push
mov
lds
mov
xchg
into
jne
mov
xchg
mov
int3
fidivrl
imul
fstp
sbbl
sub
or
ret
lock
jno
sbb
add
push
imul
pop
stc
dec
xor
xchg
dec
ja
ret
ffreep
inc
inc
cmp
and
lods
dec
sahf
cmc
push
insb
mov
lods
pop
sbb
jmp
cmpsl
mov
xchg
test
out
cmp
mov
movsb
movsb
pop
or
mov
imulb
xchg
popf
xor
cmpsl
cmpsb
repnz
jns
loope
jg
lret
mov
mov
lcall
std
arpl
orb
sub
or
sub
push
dec
jno
mov
or
rcr
stc
pop
xchg
lret
or
jno
mov
sti
jg
and
xor
mov
add
stos
cmp
pop
xchg
insb
xlat
es
sbb
pop
sub
sahf
jp
mov
sbb
sti
psubd
in
mov
cltd
out
hlt
mov
hlt
inc
cmp
xor
sub
lret
cmpsl
xor
movsl
das
jg
insb
mov
sbb
add
test
pop
shll
fistps
insl
mov
cmp
jns
aas
jnp
ficoms
lock
in
sbb
popf
fidivs
cmp
jg
cld
cmpsb
out
std
mov
fisubs
adc
loop
bswap
rcrb
repnz
add
scas
push
std
sbb
push
and
fdivrl
mov
std
lds
pop
xchg
add
adc
outsl
fcomi
cltd
rol
xor
js
sahf
movsl
psubd
popf
or
cltd
push
sub
push
insb
cs
jae
arpl
das
les
adc
std
imul
test
ja
jmp
in
and
add
sub
and
cmp
push
xchg
push
mov
loopne
test
xlat
mov
mov
les
outsb
mov
addr16
push
testb
movsb
fmull
push
or
cmp
stos
cwtl
mov
fimuls
xchg
and
fisttpll
aas
sbb
mov
clc
leave
scas
mov
in
jmp
shll
xchg
sahf
in
xor
dec
inc
pusha
mov
ret
pop
push
xor
xchg
outsb
in
mov
out
sarb
fs
cwtl
mov
xor
and
cmc
repnz
xor
enter
jns
imul
or
and
adc
js
inc
inc
sbb
lods
and
cmp
sbbl
and
loop
jmp
sbb
pop
sbb
mov
scas
push
xchg
inc
int
pop
cmp
and
sub
xor
roll
push
sub
out
nop
add
mov
orl
shrb
call
dec
pop
jae
sahf
inc
mov
fsubrs
cmp
jge
shlb
data16
pop
fs
pop
bts
adc
pop
cmp
dec
ja
insb
xchg
cmp
jmp
xor
shrb
add
dec
add
flds
ljmp
js
adc
mov
jmp
neg
scas
sbb
mov
mov
jle
or
mov
sarl
and
jge
or
dec
lret
sbb
gs
lods
xchg
adc
gs
cmpsb
jg
loopne
push
dec
push
sub
outsb
jno
push
scas
fists
adc
or
in
jae
mov
and
popa
ss
dec
fdivrs
push
pop
cmp
add
push
in
lahf
lahf
lahf
xchg
les
into
push
add
mov
bound
jo
and
xor
jg
push
dec
mov
lods
adc
cmpsb
mov
cmpsb
pop
not
orl
xor
notl
cld
mov
jae
ja
lock
movsl
lret
filds
test
mov
mov
int
lahf
push
scas
out
data16
bound
pop
sbb
mov
imul
push
push
es
sti
fwait
cmc
divl
pop
xlat
jl
mov
xor
adc
fiaddl
mov
loope
inc
or
inc
repnz
mov
and
std
cmpsb
pop
pusha
push
dec
push
arpl
inc
mov
inc
jns
mov
out
fidivrs
xor
or
pop
jno
pop
loope
jnp
out
mov
pop
fcoml
jmp
dec
sbb
mov
negb
fcomps
jmp
ja
push
imulb
scas
dec
add
je
sbb
std
lock
cld
stos
pusha
inc
icebp
mov
pop
dec
repnz
popa
fadd
add
push
imul
pop
add
adc
mov
or
push
mov
das
and
ret
aaa
jno
jbe
sub
shll
sub
cli
loope
dec
test
push
inc
xor
adc
push
xchg
ljmp
lahf
mov
inc
pop
and
mov
sbb
push
mov
out
lcall
fsubr
insb
sbb
rolb
jge
push
icebp
jle
fldenv
cmpsb
push
popf
cld
aam
mov
nop
push
imul
and
xchg
mov
adc
dec
cmpsb
push
rcrl
dec
mov
mov
stos
dec
mov
jecxz
push
cmp
test
sbb
mov
add
jecxz
mov
cmp
inc
mov
or
aam
mov
sbbl
out
ret
cld
cmp
xor
mov
das
imul
fnsave
pop
ror
adc
cltd
cmp
jl
add
enter
cld
mov
xor
push
gs
icebp
mov
add
rcl
into
xchg
xchg
sbb
cmc
pop
mov
mov
mov
sub
shlb
iret
jnp
sub
push
test
outsb
xchg
sub
pop
lret
outsl
ljmp
sub
push
xor
cmc
jmp
mov
loopne
inc
insb
xchg
jne
fnstenv
mov
add
xchg
in
xchg
add
or
outsl
mov
adc
insb
outsl
jp
cli
repz
mov
xlat
inc
int3
jae
stos
lea
pop
push
cltd
cld
aas
or
xchg
jecxz
fwait
mov
push
jns
sahf
sti
mov
lret
cmp
test
sbb
stos
je
pop
test
sub
mov
popa
aas
xor
add
sub
push
xchg
or
jl
dec
inc
inc
inc
dec
sub
sub
push
mov
pusha
sbb
faddl
pop
repnz
mov
fstp
out
and
pop
decl
int3
mov
sub
jecxz
lock
mov
add
cs
xchg
test
mov
add
icebp
adc
add
loopne
outsl
data16
out
insl
or
mov
decl
dec
sbb
mov
cmp
cmpsb
or
les
cwtl
push
adc
js
push
mov
cltd
jp
cs
mov
xor
das
add
sbb
inc
sub
cld
cltd
sete
aad
sti
jp
sar
repnz
and
sub
ss
sbb
loopne
popf
pop
aad
pop
mov
push
xchg
inc
clc
adc
dec
sub
adc
out
js
mov
xchg
push
out
enter
xchg
jno
pop
dec
cmp
lds
call
add
clc
int
out
inc
negb
ds
test
in
inc
push
stos
pop
jns
pop
jnp
popf
out
aad
fcom
mov
mov
hlt
pushf
cmc
mov
icebp
repnz
aaa
jbe
pop
pop
mov
sahf
cs
pop
sub
mov
mov
imul
loopne
lahf
sub
inc
adc
test
jge
mov
mov
cmp
and
and
pusha
insl
ja
pop
mov
fisttps
nop
dec
inc
and
pop
cmp
aam
int3
mov
into
push
jnp
addb
int
xor
and
pcmpeqb
lret
daa
ss
mov
out
cmp
aad
ja
and
mov
les
ret
adc
add
inc
arpl
fwait
pop
sbb
push
push
xlat
jb
movsb
xchg
or
or
std
out
loop
cmp
add
inc
ds
dec
push
dec
mov
ror
and
jge
imul
inc
das
jmp
cmp
subb
cli
xchg
push
or
mov
lds
ffree
cmc
aam
mov
jnp
shrl
dec
in
pop
push
mov
sti
mov
out
clc
sbb
and
jmp
xchg
aad
mov
cmpsl
inc
push
jl
lret
test
sub
fwait
xlat
xchg
popa
outsb
mov
stc
jbe
out
mov
xchg
cltd
jne
mov
sub
dec
out
xor
mov
xor
int3
xor
sbb
into
lods
flds
inc
out
push
add
inc
xchg
fistps
dec
mov
adc
fs
sub
add
cltd
push
push
mov
xor
test
push
mov
pushf
xchg
push
aad
and
jp
pushf
push
ret
mov
cmp
dec
jp
or
std
stc
std
push
mov
gs
aam
js
mov
jg
lahf
aaa
mov
jle
pop
repnz
adc
dec
add
sbb
pop
das
int
sub
dec
and
push
xchg
or
jl
cmp
mov
insw
lods
mov
fwait
push
cmp
and
jl
insl
insb
out
mov
sub
mov
outsl
mulb
xlat
adc
mov
xor
rcll
inc
and
inc
fcomip
lds
ljmp
aas
xor
test
es
cwtl
or
jmp
es
daa
cmc
adc
data16
stos
adc
imul
mov
mov
popa
cmc
cwtl
pop
mov
push
das
negb
popa
inc
mov
sub
lds
iret
and
outsb
xchg
mov
aaa
pop
sbb
mov
test
cmc
hlt
xchg
pop
dec
cmpl
sub
xor
pop
dec
call
adc
into
jo
aam
lcall
sub
pop
int3
aam
les
pop
add
xor
dec
mov
bound
imul
aaa
dec
or
inc
out
inc
stos
mov
cmc
mov
push
mov
push
in
lods
pop
xchg
mov
imul
sub
cmp
sbb
lds
jecxz
das
orb
dec
mov
pop
popf
xor
sbb
dec
push
xor
jmp
cwtl
mov
ljmp
and
les
gs
add
mov
mov
out
lret
mov
insb
jp
sbb
test
daa
fnsave
dec
sub
jp
lcall
lahf
xor
mov
jmp
aaa
dec
jae
inc
adc
dec
jnp
inc
insl
dec
arpl
mov
push
xor
stc
je
sub
mov
adc
popa
out
lcall
xor
repnz
sub
pop
mov
pusha
mov
push
inc
xchg
mov
dec
inc
jmp
push
dec
mov
adc
in
test
push
stc
scas
push
fidivl
jecxz
jg
mov
xchg
jnp
xor
xchg
inc
into
shll
iret
rcrb
notb
mov
fs
shl
test
out
pop
pop
jne
push
pop
xchg
aas
out
cmp
adc
cmp
mov
mov
inc
and
mov
out
je
sub
lahf
aaa
sbb
and
aaa
nop
cmpsb
cmp
push
mov
inc
mov
aaa
mov
or
insb
shlb
pop
aaa
xorb
mov
int3
jmp
loope
or
loopne
mov
imul
fwait
jmp
leave
mov
push
xchg
xchg
ret
rclb
push
inc
jne
sub
sub
data16
sahf
mov
sub
xor
xchg
loope
int3
or
in
repnz
fcmovbe
cmp
dec
jne
popa
mov
outsl
jmp
push
jno
mov
jne
push
aam
das
add
push
xchg
cmc
add
leave
cmpsl
mov
lret
data16
xchg
push
cmp
dec
test
shll
cmc
stc
xor
gs
or
cmp
sbb
inc
add
call
dec
imulb
iret
mov
ret
xor
jne
mov
add
or
pop
fdivr
jo
xchg
imul
rcll
jle
or
push
add
nop
enter
cmp
xor
jmp
icebp
push
push
or
jns
mov
fs
iret
push
xor
cmp
sbb
jns
pop
pop
mov
jb
into
iret
ret
xchg
das
cmp
icebp
sub
mov
in
jmp
and
in
fdivr
adc
xchg
adcl
lret
dec
fbstp
aas
jl
test
add
add
mov
pop
lds
xlat
push
or
mov
sti
sti
sbb
imul
pop
add
inc
or
mov
sub
mov
test
mov
add
es
adc
mov
xchg
inc
pop
sub
loop
int3
cwtd
out
out
xchg
fstl
jne
imull
test
outsb
or
popa
lods
pop
repnz
outsl
pop
ss
lret
dec
orl
fwait
add
sub
sub
sub
int3
sub
aam
mov
mov
xor
pop
fbld
mov
xor
mov
ret
pop
stc
cmpsb
xchg
push
in
xor
aaa
inc
mov
jmp
lahf
inc
shll
mov
and
push
cwtl
int
jmp
xchg
nop
or
addl
push
fcmove
cwtl
shrl
loope
insb
je
mov
lahf
mov
sub
iret
sbb
pop
mov
mov
push
mov
jecxz
daa
pop
xchg
popa
mov
inc
dec
lock
ds
cmp
sbb
or
pusha
sarl
xor
popf
loope
popa
inc
push
je
or
pop
mov
cmpsb
or
enter
sub
jnp
leave
xchg
sub
jl
adc
xchg
or
sarb
sub
popa
jg
xchg
es
std
nop
mov
int
lods
std
mov
mov
aaa
xor
bound
mov
in
addr16
enter
shll
jne
fwait
adc
xchg
scas
cltd
dec
pop
sub
out
adcl
dec
pop
mov
push
xchg
iret
sub
xchg
jno
cli
arpl
sub
insl
addr16
mov
sbb
jg
dec
insb
xorl
in
bound
sub
jecxz
fnsave
and
adc
push
xor
cwtl
sub
popf
sbb
loop
xchg
xor
lahf
imulb
and
ja
mov
test
arpl
cltd
mov
sbb
clc
lea
outsl
daa
dec
pop
lret
jne
cwtl
xchg
fcomps
ret
les
fcoms
in
out
aam
in
jge
mov
scas
mov
and
mov
sbb
shlb
das
addr16
aad
pop
sub
dec
cli
fidivl
mov
js
movsl
clc
sub
mov
repnz
sbb
test
inc
lock
adc
sbb
arpl
cs
test
xchg
inc
push
jnp
or
imul
cmp
fsubr
push
arpl
mov
dec
movsl
pusha
pop
mov
ret
pop
cs
shlb
test
mov
xchg
push
xchg
in
out
sub
xor
push
and
pop
push
lds
incb
stos
adc
push
inc
inc
gs
mov
imul
data16
pop
xor
lods
push
mov
je
xchg
sahf
cmpsl
mov
shlb
dec
gs
and
mov
add
mov
negb
std
mov
mov
je
or
jne
negl
enter
push
lods
and
fisubl
xor
aaa
mov
es
sub
imul
xchg
sti
pop
inc
and
adc
cmp
sbb
test
add
xchg
test
jmp
je
loopne
dec
sahf
add
movsb
cmp
nop
out
cmc
and
xchg
push
cmp
daa
mov
mov
into
mov
or
out
push
es
in
fstpt
lock
sbb
fwait
cmp
test
adc
pop
imul
cld
imul
jp
test
das
adc
popa
rcrl
adc
dec
dec
test
adc
icebp
xlat
sub
fwait
dec
or
pop
pop
jbe
sbb
push
cmp
jp
mov
sarl
jb
sbb
mov
push
testb
xor
aaa
push
add
inc
push
arpl
mov
loopne
push
lret
and
xor
and
push
bnd
stc
push
inc
int3
push
nop
daa
cmp
iret
loop
lods
ss
rcr
xchg
mov
sub
xlat
lret
adc
out
xchg
sbb
sbbl
push
push
xchg
adc
mov
fcmovbe
dec
adcl
xchg
int
leave
out
mov
pop
push
out
nop
and
aas
stc
stos
or
dec
mov
push
fwait
loop
lds
into
mov
scas
sti
jmp
push
mov
jle
sahf
movsl
shlb
sbb
adc
inc
lcall
pop
addl
lahf
xchg
fcoml
orb
or
mov
sub
push
xor
movsl
push
movsb
sti
cltd
and
daa
cmp
enter
aad
jns
addb
jle
mov
cmp
jle
mov
push
jns
sub
pop
and
cmp
fadd
jno
mov
cltd
jecxz
mov
movsl
aam
lods
jl
jbe
loop
insb
in
inc
fsubl
cmovl
cwtl
and
mov
out
adc
inc
iret
jns
add
xchg
hlt
aam
inc
dec
ret
outsb
arpl
popf
sbb
pop
pop
call
test
fldcw
lahf
loop
push
pop
test
pushf
or
push
lods
add
push
cmp
jno
repz
cmp
ljmp
inc
mov
fwait
jmp
fcmove
xchg
enter
popf
loopne
addb
fwait
push
jmp
push
jle
call
pop
jbe
jns,pt
lea
push
insl
and
pusha
or
jmp
aam
sahf
mov
das
inc
jnp
in
mov
fcomi
rclb
mov
mov
cmp
xchg
rcrl
int
push
jbe
add
cmp
lea
aas
add
scas
xchg
pop
popa
fwait
incb
arpl
adc
das
loope
push
mov
idivb
mov
xor
sbb
mov
push
and
xchg
mov
pusha
je
nopl
xchg
ret
fs
popa
cmp
mov
test
xor
jae
push
mov
test
fdivrl
cli
mov
je
adc
or
push
or
add
xchg
pop
pop
loope
push
pop
andl
xor
int3
xchg
call
test
ret
repz
push
cmc
gs
push
mov
rcrl
jge
cltd
out
lret
xchg
push
pop
mov
les
inc
cli
popf
cli
data16
stc
daa
push
fsub
out
sub
cmp
fcoml
in
out
dec
gs
arpl
popa
dec
lret
mov
iret
and
vmovntpd
ja
arpl
adc
add
lock
push
push
xchg
mov
lcall
mov
sbb
test
stos
push
mov
jns
xchg
stc
pusha
hlt
inc
nop
call
cmp
mov
stos
push
push
lds
loope
icebp
mov
and
jecxz
in
les
xor
in
dec
sbb
sub
xor
sub
jg
and
push
test
aaa
mov
sub
jge
push
out
out
pop
test
arpl
mov
dec
xlat
inc
test
or
mov
rorl
mov
scas
rorb
sbb
shl
cwtl
test
adc
jbe
cmp
int
lods
outsb
into
push
adc
aad
insl
cmc
xor
or
xor
jae
cmpsl
out
or
in
in
in
and
adc
add
shrb
jns
out
or
nop
ret
jne
pop
push
inc
xor
mov
cmp
aam
mov
cltd
rclb
xor
xchg
push
ljmp
std
push
mov
cmpsl
ljmp
stos
xor
daa
jecxz
and
fdivp
pushf
mov
loope
aam
into
or
adc
rcrb
das
jp
jmp
dec
adc
jnp
sbb
sub
mov
bound
ljmp
lock
iret
push
push
xor
pop
out
xchg
test
jge
scas
dec
jecxz
add
cmc
mov
popf
repnz
and
ds
inc
jo
jnp
and
xorb
imul
loopne
pop
or
or
cmp
and
sub
mov
inc
adc
add
cmp
mov
jge
pop
pop
sub
push
lret
pop
inc
adc
insl
pop
jecxz
xchg
jae
push
test
in
orb
pop
fwait
jmp
stos
pop
fstpl
mov
dec
int
popa
cmc
mov
cmp
lods
call
cmpb
aad
int
xor
stos
iret
syscall
mov
imul
cmp
inc
push
hlt
mov
arpl
jns
or
mov
fsubrs
fildll
sub
push
lock
xchg
jb
mov
push
cli
ds
mov
mov
pop
and
xchg
outsl
jo
xchg
sbb
das
fiaddl
or
mov
sahf
jno
push
sarb
filds
push
xchg
and
jecxz,pt
bound
pop
test
ficompl
insb
movsl
inc
ret
inc
xlat
xor
inc
in
cmp
push
fs
lahf
stc
loope
aaa
xchg
add
mov
fiadds
pop
xor
test
lcall
shrb
mov
push
in
cld
fsubrp
pop
add
sbb
mov
push
mov
xor
xor
inc
inc
mov
ret
xchg
mov
aaa
mov
pop
xor
out
das
scas
lret
xchg
dec
sbb
dec
int3
stc
aaa
pusha
movsb
xchg
cmpsl
call
dec
test
and
push
jno
sub
push
or
sbb
roll
aas
xchg
mov
fs
mov
jo
jle
mov
dec
jmp
and
fsubrs
adc
xor
jo
cmp
cmpsl
cmp
add
pop
push
mov
sub
and
add
fistpl
loopne
js
bound
adc
jno
data16
stos
adc
in
rcrb
aam
cmp
push
cmp
mov
into
sub
pop
mov
pop
or
shrl
and
push
push
push
sub
adc
inc
adc
loope
aad
out
loop
push
xor
bound
or
rcrb
jge
arpl
xchg
xor
add
insb
test
rorb
mov
add
xchg
pushf
sub
in
fdivr
in
adc
inc
xor
arpl
cmc
or
shlb
dec
fists
ljmp
dec
repnz
gs
xchg
pop
sbb
cmp
mov
int
fnsave
push
sub
xor
jl
xchg
jge
sahf
popa
stos
cmp
aaa
mul
cltd
leave
mov
je
ss
and
mov
fwait
dec
loop
or
test
push
imul
jmp
sets
stos
rcll
mov
mov
cmpsb
or
loop
aas
shrl
cmc
pop
cltd
fmuls
inc
dec
rcrl
sub
pop
dec
xchg
mov
rcrl
jl
cmp
stc
jle
repz
mov
mov
xchg
lret
addr16
cmp
mov
push
outsl
arpl
adc
lods
dec
sub
dec
mov
push
xor
cld
jb
and
movsl
popf
ljmp
movsb
cmp
cmpsb
inc
push
aad
dec
xchg
sbb
rcrb
movsb
adc
jge
or
loop
xlat
mov
and
idivl
mov
pop
clc
mov
ret
sub
pop
push
inc
mov
lcall
pushf
push
call
sbb
andb
aad
mov
out
jle
jl
imul
adc
sub
add
inc
inc
nop
mov
mov
sub
cmp
push
movsb
pop
or
jmp
dec
fcmove
sub
int3
jp
mov
cmc
push
xor
add
mov
pop
dec
jns
push
xor
mov
ret
xor
push
les
out
lcall
lds
dec
in
mov
mov
movsb
fists
call
pusha
enter
xor
sub
adc
push
xchg
movsb
mov
out
pushl
adc
sub
xorb
test
push
ret
lods
cmp
pop
imul
fwait
incb
jecxz
push
mov
xchg
jmp
push
ljmp
or
daa
in
and
scas
sbb
sbb
or
jns
test
dec
cmp
pop
mul
test
mov
bound
inc
push
mov
dec
stos
push
movsb
jb
or
xor
test
cmp
test
dec
mov
fisubl
hlt
into
cltd
adc
leave
dec
and
mov
inc
inc
push
in
aas
xchg
add
sbb
popa
jb
cmp
test
mov
aad
enter
leave
xchg
inc
dec
or
xchg
adcb
ljmp
dec
mov
lods
call
jg
js
popa
or
sbb
mov
and
jae
jg
rolb
sbb
ja
out
in
inc
aad
pop
and
movsl
shll
mov
lods
in
xchg
cmp
fimull
aaa
jns
out
mov
mov
mov
cmp
aaa
cwtl
fmull
push
ror
sbb
xchg
push
mov
loope
ss
imul
and
in
mov
fimull
test
dec
lds
das
ret
fnstcw
mov
cmp
mov
ss
movsl
pop
and
pop
lret
pop
sahf
mov
lea
outsb
lret
add
adc
stc
xchg
call
mov
add
mov
sbb
sbb
repz
mov
adc
aas
out
push
pop
push
pop
add
and
pushf
or
push
xor
pop
jle
adc
cwtl
mov
xor
icebp
xor
or
pop
mov
gs
pop
das
test
sub
sbb
sub
or
es
arpl
imul
icebp
hlt
stos
mov
rcrb
jl
jo
jbe
mov
and
mov
and
sub
mov
or
loope
cmpl
pop
jo
push
mov
cli
popf
jae
and
dec
stos
sub
pop
int
ds
cmp
xchg
fisubs
sub
lock
mov
push
cmp
and
test
xor
mov
lds
push
or
faddl
outsb
sub
das
test
add
outsl
ds
and
push
mov
jb
test
popf
inc
cltd
das
lea
add
mov
push
sub
mov
loop
cmpsl
pop
push
orl
add
xlat
sbb
fldl
pop
dec
icebp
jg
lea
xor
dec
insl
xor
push
push
xor
xchg
jo
insb
inc
ficompl
into
lret
xchg
jb
aam
jl
sub
icebp
cmp
movsb
rcrb
sub
pop
or
add
pop
mov
sub
andl
dec
fsubrp
nop
jb
cmpsb
sub
xor
ljmp
loop
rcll
jne
sub
mov
lret
cli
xchg
ficompl
xor
mov
andb
lcall
mov
bound
arpl
js
insb
add
mov
inc
cmp
rorl
sbb
fimuls
pop
xchg
icebp
pusha
lret
or
cltd
xlat
push
mov
jbe
pop
ljmp
dec
or
repnz
das
xchg
add
test
retw
fs
mov
ret
sbb
scas
push
jo
movsb
je
pop
adc
push
pop
mov
popa
loopne
fdivp
stos
dec
mov
jle
add
dec
jb
add
test
xchg
mov
decl
inc
setno
mov
ret
leave
cmp
xchg
cmp
mov
cmp
lock
lea
into
mov
lahf
pop
lock
ret
sub
xor
cmp
ret
add
pop
pop
push
in
ss
pop
cmpsb
enter
lcall
cmp
ljmp
xchg
in
push
ja
dec
rcll
aam
cltd
pop
lods
adc
call
and
inc
movl
xor
pop
xchg
test
ficomps
sbb
jns
adc
mov
in
push
push
jne
fmull
jecxz
dec
mov
dec
dec
dec
into
mov
dec
loopne
cmpsb
push
lods
mov
outsl
lret
xor
and
jns
jnp
cltd
lcall
test
add
out
out
outsb
pop
xor
mov
sbb
add
mov
inc
icebp
push
insl
fistpl
pop
adc
in
test
push
outsl
les
adc
lods
jno
ds
sub
shr
jno
sti
popfw
cmpl
and
ss
pop
lods
fstpt
inc
popa
push
imul
add
and
fidivl
repnz
jnp
mov
aas
repz
push
xchg
std
sub
cmp
loope
mov
xchg
inc
sti
add
dec
xor
inc
adc
pop
sub
pop
divb
fldt
sub
addb
dec
ljmp
fmuls
inc
pop
das
cmp
ret
cmpsl
test
ss
arpl
and
std
pop
outsb
pop
xchg
pop
std
call
out
dec
shlb
mov
or
push
jle
loop
adc
repz
push
subl
dec
outsb
adc
xor
mov
aad
mov
lcall
test
cmp
cli
xor
xchg
movsb
sub
push
daa
jmp
loop
enter
inc
in
push
inc
cmp
or
mov
pop
sbb
adc
cmp
outsb
mov
sbb
fwait
es
shlb
dec
nop
mov
inc
jo
imul
fisttpl
pop
mov
es
int
mov
pop
jg
out
dec
add
pop
bnd
stos
fucomi
icebp
test
inc
out
dec
jns
add
jo
jns
aam
dec
fnsave
push
cmc
push
test
ret
and
das
int3
repnz
and
bsr
scas
xchg
loopne
add
and
pop
imul
xchg
add
jecxz
push
les
sti
and
push
pop
mov
stc
imul
imul
adc
sub
cs
ret
pop
dec
out
cmpl
test
das
lcall
xchg
ret
push
lret
arpl
lret
add
jnp
movsl
sbb
leave
fisubl
popa
dec
mov
out
packsswb
pushf
lss
mov
pop
lods
sbb
cmp
and
inc
push
nop
jge
in
add
lcall
pushf
roll
pop
mov
sti
cmp
dec
loope
popf
jg
mov
sub
pushf
aam
sub
dec
clc
inc
push
cmp
add
push
rcrb
and
xchg
inc
jb
add
jmp
clc
pop
sub
xor
pushf
sub
pop
std
clc
xor
inc
mov
ss
sub
and
inc
lret
inc
mov
add
mov
xchg
jns
lahf
push
or
ret
jne
xchg
loope
mov
jmp
jge
xchg
sar
bound
mov
lds
and
scas
add
sahf
cmpsl
out
lea
mov
imul
cmp
lock
and
fildl
imul
xorl
in
aad
dec
sbb
cmp
sub
adc
dec
inc
negb
sbb
gs
iret
in
ficompl
loop
aas
jne
sbb
out
jo
xchg
mov
and
inc
fdivrs
sub
xchg
xchg
sub
ja
test
das
xor
push
cmp
pop
aas
sub
cld
cmpsb
cmc
fmull
lds
cmp
add
sahf
hlt
xor
add
int
rorb
xor
sti
imul
loop
inc
lods
mov
fstl
shrb
jo
push
xchg
inc
fistl
iret
jb
in
negb
fldcw
into
xchg
cmp
sbbb
mov
push
std
test
push
mov
in
cmpsb
popf
movsl
cmpsb
shrb
loop
stos
in
daa
fisubs
in
data16
inc
xchg
sti
cltd
pushf
ss
pop
or
std
sub
rcl
stos
push
movsl
mov
or
sub
lds
xchg
loopne
push
push
inc
iret
inc
or
dec
pop
notl
cmp
repz
mov
shrb
test
loop
inc
add
cmc
pusha
sub
je
lret
adc
sub
aam
ljmp
or
mov
pop
push
jbe
jo
mov
sti
imul
or
fwait
inc
lret
push
outsb
inc
popf
jbe
adc
mov
pop
into
jno
cmpsb
loope
dec
cld
adc
pop
adc
lret
fucomip
lds
shr
sarb
dec
xchg
mov
int3
std
xchg
pop
mov
mov
shlb
and
das
dec
adc
inc
jle
dec
shll
jnp
add
jne
sbb
dec
fidivrs
mov
insl
sbb
ds
nop
inc
dec
mov
sub
pop
xchg
lea
movsb
adc
mov
hlt
enter
or
add
insl
push
daa
push
jp
or
jne
lcall
jge
pop
lods
sbb
mov
dec
jmp
stc
push
add
fsubrp
cmp
fdivp
dec
mov
int3
add
cmp
adc
fstpt
mov
jne
fbld
mov
dec
test
dec
xchg
fists
inc
dec
jbe
sub
outsb
popf
fs
cmpsl
shlb
loop
adc
cwtl
fdivrp
dec
clc
divl
xchg
dec
aam
push
xor
int3
pop
cmc
dec
adc
dec
or
and
pop
fcomps
push
testb
jecxz
fcoml
in
pushl
repnz
fcmovnb
cld
leave
inc
jno
xchg
test
dec
and
cmp
in
in
mov
inc
xor
cmp
insl
ret
sahf
inc
mov
adc
enter
scas
dec
pushf
aad
je
ljmp
scas
push
sub
dec
sbb
ja
mov
addr16
and
imul
mov
dec
dec
xlat
xlat
mov
jnp
pop
cld
pop
xor
cmc
push
out
les
dec
lret
pusha
add
daa
jl
movsl
pop
ret
loopne
inc
xchg
adc
jbe
pop
dec
loopne
push
xchg
aaa
and
mov
daa
push
mov
fistpll
cli
mov
int3
aad
jge
jecxz
xchg
lcall
pop
or
xchg
repz
jle
mov
popa
pop
sti
inc
icebp
mov
movsb
xchg
int3
inc
cld
dec
mov
mov
dec
les
cmp
bound
cmp
cmpsb
sub
add
cli
pop
jmp
mov
sbb
pop
jo
movsb
inc
xchg
in
jbe
xchg
push
jl
push
mov
inc
ficoms
inc
adc
xor
cmc
push
add
sub
xchg
jl
inc
xchg
leave
inc
inc
mov
push
fcompl
das
clc
dec
into
and
pusha
shr
repnz
cwtl
repnz
pushf
scas
jno
stos
jmp
inc
subb
dec
rorl
xchg
push
js
repnz
rcrl
sbb
gs
pushf
lahf
stc
fbld
idivl
shrb
cmp
pop
xchg
mov
lcall
fsubrp
cmc
add
sti
lret
pop
ret
push
idiv
inc
enter
lahf
cmp
leave
fs
dec
mov
and
mov
pop
sbb
pop
xchg
adc
cs
push
pop
cs
xchg
inc
push
rep
xlat
xchg
dec
push
jns
xor
pop
repnz
cmp
push
cmp
icebp
jnp
jge
push
mov
in
fsin
inc
scas
mov
xchg
xchg
cmpsl
cmc
pop
or
in
jns
xchg
repz
in
nop
push
mov
jb
into
xor
pop
xchg
cli
xor
cmc
test
mov
in
mov
xchg
jle
jg
adc
or
pop
out
sarl
mov
ss
inc
fldt
pop
test
xchg
pop
ljmp
cmp
mov
bound
sbb
gs
sub
call
pop
push
sbb
xchg
add
jge
cmp
sub
xchg
mov
mov
scas
mov
or
mov
pushf
add
scas
pop
imul
mov
mov
inc
leave
int3
repnz
dec
xchg
mov
mov
lods
outsb
lods
jl
jle
rcr
adc
jae
stos
sub
int
es
lcall
test
fldenv
testb
and
ljmp
xchg
mov
cmp
imul
xor
fs
mov
mov
xor
fwait
sbb
cmpl
xor
cld
and
cmp
mov
or
xchg
mov
repz
into
test
jnp
sti
mov
pop
xchg
mov
rorb
stos
aas
pop
lret
xchg
fmull
push
pop
mov
test
xchg
es
in
and
dec
es
push
les
mov
rcll
mov
dec
pop
sahf
dec
mov
sahf
push
rorl
mov
and
aad
xlat
mov
fdivl
mov
jl
lret
das
push
aam
cli
xor
sub
xchg
dec
scas
add
call
push
adc
or
cmp
mov
push
mov
add
andl
add
cld
xchg
pop
mov
mov
std
leave
ds
pusha
inc
insl
aam
loope
mov
jne
sub
test
jle
jnp
insl
aad
adc
xchg
and
hlt
jge
pop
mov
xchg
adc
sbb
xor
or
fldl
insb
or
push
fcom
lea
cmp
mov
dec
out
xchg
jbe
std
cmp
cmp
fcmovbe
cmpsl
inc
rcrb
stc
jbe
les
addr16
lock
repz
or
inc
fstpl
jae
jo
fcompl
in
pop
inc
sbbb
mov
jl
sti
sub
cmpsl
push
jge
pop
lock
pop
sbb
jae
cmpsb
push
pop
xor
mov
lret
bound
mov
push
movl
mov
ss
and
lret
pop
aaa
xor
mov
or
mov
mov
aad
into
and
sbb
sub
cli
jae
in
push
sbb
and
dec
or
or
lcall
push
stos
ret
dec
fcomps
pop
pop
lret
or
cmpb
test
adc
mov
and
and
out
inc
or
jl
out
sbb
decl
sbb
dec
pop
inc
adc
pop
xor
mov
jns
fwait
int3
fs
xchg
fldenv
sub
pop
inc
pop
scas
int3
inc
aaa
fwait
pop
push
mov
adc
mov
mov
sub
les
adcb
push
dec
adc
pop
ret
int
fsts
stc
in
clc
adc
mov
outsl
push
int
pop
cmp
mov
pop
cmpsb
mov
add
orb
adc
and
xchg
rcll
filds
ret
arpl
mov
mov
pusha
or
push
fldl
insl
sub
jmp
loope
push
pop
dec
mov
popf
loop
jmp
call
push
incb
ljmp
mov
loop
loopne
scas
or
cmpsl
pusha
and
rol
stos
stc
pusha
or
mov
add
rol
pusha
mov
lock
lret
push
jne
sbb
cmp
lock
mov
mull
adc
loopne
push
arpl
sub
jp
inc
aad
lcall
pop
or
jmp
jae
xchg
sub
dec
rorb
into
enter
jne
push
pop
stc
cmp
popf
std
add
sub
pop
mov
pop
roll
dec
ljmp
mov
test
into
loopne
lcall
adc
cmp
mov
imul
in
cld
or
jne
mov
jl
push
add
lea
push
jle
pushf
cltd
std
or
sbb
xchg
out
lock
add
outsl
and
jl
sbb
insl
fldt
aaa
in
cmp
outsb
shl
mov
fcomps
mov
outsb
add
dec
pop
xchg
stos
or
sub
cmp
sbb
mov
scas
out
cs
lcall
pop
push
mov
push
outsb
stos
push
stos
ret
ss
inc
inc
mov
test
imul
outsl
jnp
sbb
pop
add
bnd
sbb
icebp
shl
mov
xlat
std
xor
out
jg
inc
arpl
sbb
xor
lahf
mov
insl
pop
pop
loopne
or
lret
xor
int3
jnp
or
dec
out
ds
fdivr
fcmovb
dec
mov
mov
insl
xchg
jno
pop
pusha
push
loopew
stos
pop
mov
arpl
dec
repz
mov
stc
or
loop
adc
shlb
or
mov
fmuls
mov
cmp
ret
out
mull
shlb
lcall
rcl
icebp
das
jmp
xor
add
inc
inc
insb
pop
jle
or
xor
inc
lcall
scas
negl
pusha
push
cld
call
stc
imul
and
ds
fstps
movl
cld
insb
xor
je
addr16
pop
out
sbb
cmc
insb
xchg
jnp
incb
lret
ror
xchg
stos
xchg
and
pop
adc
push
mov
je
pop
jp
and
outsb
xchg
aad
lock
sahf
mov
or
or
dec
not
stos
imul
scas
push
sub
out
mov
into
out
xchg
dec
out
inc
or
push
pop
sbb
cmp
in
aad
es
lock
stc
insb
pop
jl
sbb
lret
int
test
dec
xlat
test
rclb
bound
jno
and
pop
mov
push
xchg
jmp
mov
addr16
pop
call
inc
out
push
aad
enter
and
repz
jmp
xchg
bound
sbb
and
fsubrl
popa
add
sahf
pop
jbe
cwtl
aaa
cmc
and
jnp
pop
jbe
xchg
mov
pop
adc
sarb
movsb
ficoml
sahf
and
add
ja
xchg
mov
jp
push
icebp
je
hlt
xor
sbb
push
jns
in
scas
ficompl
mov
fcompl
pop
pop
xchg
pop
or
xchg
push
cmp
enter
fmull
fsubp
lds
cmp
sub
pop
sub
loope
mov
ret
adc
insl
int
stos
xchg
repz
repnz
or
outsb
insl
roll
cld
in
xchg
popa
outsb
stos
enter
lds
int
adc
pop
cli
ss
xchg
es
cmpsb
int
mov
lret
fstl
add
mov
stc
xchg
and
inc
and
jb
dec
mov
pop
xchg
pusha
dec
jne
mov
daa
and
dec
jno
ficompl
dec
dec
cmpsb
inc
jno
xchg
enter
in
in
aas
ds
push
scas
imul
or
testb
fldt
inc
int
xor
inc
xor
inc
mov
inc
push
dec
mov
filds
add
inc
xchg
ret
pop
cmp
imul
sbb
pop
std
fs
nop
outsb
pop
sti
xchg
add
or
das
sbb
data16
in
es
mov
cmpsb
fwait
xchg
std
mov
mov
rorb
call
xor
dec
xchg
xor
mov
sub
frstor
shl
sub
clc
jb
xor
pop
sub
sbb
sbb
cli
fwait
lods
adc
cmp
rcrl
sub
xor
out
and
imul
out
mov
imulb
pop
cmp
sbb
xor
test
dec
mov
jno
mov
test
mov
pop
and
mov
out
mov
adc
in
push
ret
and
pushf
dec
outsb
xor
cmp
mov
xor
popa
in
fsubr
call
rclb
ljmp
hlt
enter
sub
mov
enter
imul
test
aam
addr16
das
xchg
mov
shlb
les
leave
loop
xor
fcmovnbe
ror
and
push
xorl
add
jecxz
shr
je
in
pop
loopne
leave
fstps
jmp
stos
mov
outsb
and
test
or
or
jbe
adc
enter
inc
shrl
mov
pop
mov
addr16
mov
mov
adc
mov
adc
xor
jne
fsubs
sub
xor
inc
push
mov
adc
sbb
loope
inc
popf
fcmovnb
insb
nop
pop
mov
cmp
or
jp
out
insl
push
sbb
daa
out
pop
adc
fs
push
add
jno
inc
dec
sub
andl
les
add
fcoml
push
pop
inc
mov
dec
lds
or
iret
adc
adc
in
in
and
dec
mov
xchg
jo
inc
lods
mov
mov
push
lods
in
add
stc
dec
sbb
push
pop
loope
fsubs
jmp
push
sti
mov
test
or
int3
notb
arpl
dec
and
js
jle
sarb
repnz
mov
mov
std
mov
sbb
loop
ljmp
adc
clc
inc
nop
ja
jg
les
aam
dec
push
add
lret
rcrl
shll
addr16
hlt
xchg
push
and
repnz
add
movsl
test
xchg
mov
cmc
ljmp
shrb
cmpsl
jb
xchg
das
sarl
imul
cmp
and
or
add
es
push
in
cmpsl
call
xchg
sub
jae
mov
cmc
mov
push
jnp
imul
pop
test
lret
lea
jbe
das
add
in
cmpsb
leave
push
mov
xor
sbb
adc
mov
lret
stc
mov
jg
scas
mov
mov
push
cmp
xchg
jae
adcl
pop
mov
jno
mov
test
es
jge
insb
adcl
xor
rol
aaa
xor
add
fsubl
std
push
pop
ror
sbb
mov
inc
outsb
popf
xchg
lret
cld
imul
push
out
cmp
adc
cs
xor
adc
lret
cmp
xchg
jle
mov
sti
cmp
sbb
push
lahf
and
xchg
sub
insb
jl
lods
lcall
dec
loope
mov
jbe
dec
rol
sbbb
imul
push
mov
adc
jae
int
inc
cmp
dec
pop
push
xor
ficoms
and
out
xor
aad
insl
pop
sub
aam
sbb
sbb
push
stc
fcomps
aaa
imul
sbb
lret
outsl
xlat
sub
push
mov
imul
mov
push
rcl
or
cmp
add
dec
sbb
and
fucomip
add
mov
fcoml
and
xor
sub
inc
sub
mov
mov
js
mov
sahf
add
pop
fdivrs
jae
daa
sub
sbb
xor
add
out
cs
daa
adc
pop
loop
cs
sub
shll
jae
outsl
into
sub
roll
or
jno
syscall
and
lds
sbb
xchg
sub
or
inc
ficompl
cld
cmp
sub
fnstsw
aaa
mov
js
aam
mov
test
lcall
ficoml
inc
out
xor
xlat
push
inc
mov
inc
movb
enter
cli
inc
xor
gs
push
popf
or
jle
sti
rcrl
or
sub
xchg
xchg
mov
jecxz
insb
push
out
into
pop
jp
jge
imul
sub
vpmulhw
or
divb
push
les
pop
push
xchg
xor
or
loopne
dec
in
aaa
iret
jnp
push
scas
sarb
xor
add
lcall
mov
adc
outsb
jl
popa
mov
push
outsl
or
add
and
and
mov
or
inc
inc
adc
push
lret
in
pop
inc
adcl
mov
insl
cmpsl
and
aas
jbe
pop
inc
ret
movsb
sbb
mov
dec
lds
push
jl
outsb
adc
mov
inc
xchg
sbb
mov
dec
xor
mov
jnp
jle
add
and
jns
dec
js
adc
fbld
push
xor
aaa
in
lcall
xchg
ret
andl
mov
sub
mov
leave
mov
push
outsl
xchg
cmpsb
pop
pusha
mov
ret
pop
cmpsb
aam
inc
pop
ds
xor
xor
adc
int
mov
pop
aad
xchg
addb
and
iret
rcrb
mov
push
xor
dec
xchg
aaa
dec
xor
mov
mov
test
push
mov
hlt
loop
dec
test
xor
xchg
jae
mov
jl
pop
push
frstor
addr16
push
sysenter
inc
insb
rcr
ja
or
fs
sub
data16
adc
ret
arpl
aaa
xchg
test
rcll
mov
je
xchg
lds
xor
mov
shl
and
inc
fdiv
jp
mov
fxch
and
shrl
pop
cli
and
push
insl
sub
cmpb
mov
pop
data16
mov
dec
pop
mov
and
sarb
clc
jno
adc
lock
cmp
mov
mov
add
cwtl
icebp
es
push
adc
fists
subb
imul
push
jecxz
xchg
sbbl
xchg
or
aam
lahf
lahf
dec
mov
outsl
std
pop
mov
sbb
mov
xor
mov
pop
jo
popa
out
shl
insl
adc
mov
clc
movsl
inc
sub
out
xchg
in
hlt
inc
jb
lcall
test
xor
mov
enter
in
jmp
rolb
pop
test
aaa
mov
shlb
inc
mov
mov
mov
mov
outsl
push
add
rcrb
adc
int
xor
and
xlat
mov
fwait
insl
std
inc
por
pop
jl
xchg
les
or
jbe
cld
popf
mov
movsl
mov
loop
aaa
sbbl
ljmp
shlb
mov
cmpsl
adc
shll
jp
scas
stos
fstps
mov
repnz
inc
lcall
xor
cs
stc
jmp
inc
and
out
push
jns
imull
idiv
sub
sbb
into
pop
mov
out
sub
daa
pop
mov
and
adc
test
cmp
inc
int
push
jp
dec
cmpsb
and
xchg
popf
pop
leave
cld
lcall
rorb
fimuls
iret
dec
out
xor
push
cli
cmc
js
rclb
lret
push
outsb
pop
je
adc
int
loope
push
insl
xor
sbbl
mov
push
cld
cmp
inc
repz
push
dec
add
outsl
insb
or
les
inc
push
les
aaa
ljmp
pop
fsubl
jnp
adc
xor
dec
lret
mov
ret
xchg
lock
mov
cwtl
cmp
mov
mov
out
add
and
test
pop
push
sti
pop
dec
insl
leave
push
dec
fbld
and
imul
xor
out
cmc
test
mov
mov
xchg
adc
stos
jb
pop
xchg
inc
cmpsl
pop
cmp
jbe
outsl
or
fsubrl
mov
push
incb
addr16
jp
sub
es
pop
add
popf
and
mov
xor
cmc
ds
lcall
outsb
idivb
cli
xor
gs
inc
popf
xor
scas
cmpsb
fbld
sub
rolb
cmp
jp
xchg
lock
inc
sbb
mov
nop
insb
add
push
inc
cmp
push
push
mov
shrl
pop
xchg
mov
gs
mov
push
loope
sub
pcmpeqw
lods
lret
in
and
push
mov
ret
add
into
es
test
fidivrl
lods
jb
add
aad
clc
jecxz
arpl
push
stos
shlb
insb
push
xchg
or
dec
jnp
in
lret
xchg
imul
mov
cli
cmp
sar
mov
movsb
dec
int3
adc
sbb
bound
cwtl
cli
fiadds
push
fwait
jnp
jecxz
aad
icebp
fimuls
addr16
pop
add
shlb
mov
cwtl
rcr
mov
jp
inc
ss
mov
dec
mov
cmp
divl
test
jne
inc
imul
std
mov
inc
rcll
repz
lcall
rorb
dec
shll
lods
mov
mov
orl
mov
jge
xchg
add
mov
dec
mov
movsb
jno
stc
hlt
icebp
inc
dec
inc
and
shlb
dec
ja
sbbb
and
push
mov
loope
cli
sbb
mov
test
ja
mov
leave
ficoml
sub
xchg
aad
pop
fsubr
mov
je
xor
inc
lods
sbb
xchg
sarb
xchg
sbb
mulb
mov
pop
dec
or
insl
lods
cmpsb
jp
mov
cwtl
mov
loop
cld
jae
adc
lret
mov
sbb
lahf
nop
loopne
fs
ret
clc
dec
jnp
das
in
cs
sbb
pusha
sbb
iret
outsl
push
dec
push
out
push
inc
inc
fstpl
push
sbb
mov
mov
or
mov
lds
std
cs
mov
inc
lods
test
test
in
filds
push
jbe
jb
lret
lret
inc
lock
scas
mov
sub
push
aaa
cmp
loopne
push
jbe
sarl
push
pop
push
sarb
out
add
jns
and
or
es
mov
data16
sub
jne
lcall
in
xor
push
adc
shr
popf
test
mov
ret
sub
jb
adc
out
mov
sbb
aam
pusha
mov
mov
pushf
sbb
pusha
sub
fs
fs
xlat
sub
out
inc
fldenv
scas
bndldx
jne
aaa
jnp
lahf
shrb
inc
push
inc
mov
cmp
dec
fwait
lock
push
movl
repz
mov
shll
outsl
js
and
jecxz
or
jno
sahf
push
cmpsb
pop
js
jb
push
fsubr
add
outsb
jecxz
jl
pop
mov
cmp
dec
in
loopne
lods
leave
stos
es
add
mov
aaa
dec
mov
jmp
mov
dec
mov
pop
ds
pop
sbb
scas
lock
or
stos
lcall
cmpsb
cs
push
jb
add
sub
sub
scas
fnsave
push
test
sub
sarb
and
push
mov
add
pop
dec
loope
mov
test
pop
in
xor
adc
inc
dec
add
xchg
into
lods
mov
jnp
fsubrl
mov
in
std
xchg
mov
cltd
and
jb
cmp
enter
push
icebp
loop
lret
sti
jmp
adc
popf
pop
or
jl
out
movsl
jae
test
or
loopne
push
insl
aaa
inc
xchg
clc
mov
mov
dec
out
shll
sub
jmp
jb
push
bound
das
cmp
push
pop
sub
sbb
cmp
pop
in
xchg
mov
stos
cmpsl
or
cld
sub
adc
bound
out
jp
stc
push
xchg
cmp
mov
dec
out
dec
inc
lahf
push
jl
xor
stos
pop
or
es
aam
sbb
pop
and
nop
outsb
push
cmp
imul
pop
or
fs
xchg
mov
adc
and
int
jl
loopne
or
mov
pop
jnp
sub
cmpsl
lahf
add
mov
movsb
movsl
nop
inc
or
mov
xor
sub
jg
cmp
xchg
ss
push
sub
add
mov
dec
imul
ret
xchg
cltd
daa
shr
jge
dec
mov
xchg
cld
movsl
mov
divl
and
js
adc
lcall
int
in
fdivrs
adc
jl
leave
call
iret
mov
ret
jnp
and
jmp
loopne
mov
movsb
mov
inc
pushf
xor
mov
xor
adc
adc
or
jp,pn
cwtl
aas
mov
adc
inc
mov
cmp
pushf
mov
sbb
dec
test
fnstsw
jo
sub
scas
fisubrl
inc
dec
mov
popf
cmc
mov
insb
leave
or
mov
in
pusha
and
repz
fwait
scas
lahf
jmp
xchg
insl
insl
dec
cmp
loop
sub
pop
in
scas
ficompl
or
aad
sbb
in
pop
sub
dec
xor
fdivl
mov
dec
cmp
xchg
lods
add
jmp
cli
lods
lret
mov
xor
push
lock
and
jne
add
stc
push
sub
mov
es
mov
clc
das
lret
xor
in
dec
dec
aam
push
pop
inc
imul
test
push
imull
in
push
xchg
adc
pop
je
and
insl
scas
les
es
idivl
push
js
lea
aad
arpl
test
ss
rolb
iret
push
mov
stos
dec
sub
mov
outsb
mov
repz
push
dec
mov
adc
jae
pop
dec
fidivl
mov
pop
rcrl
sub
lea
pop
int3
lods
jbe
bnd
push
dec
stos
rclb
lods
into
bound
ficoml
repnz
inc
xchg
cwtl
pop
xchg
inc
mov
mov
push
adc
add
adc
addr16
loop
xchg
insl
sbb
add
and
xchg
xor
xor
rcll
lock
ret
aas
add
negb
fistps
stos
rclb
pop
loope
xchg
xlat
pop
sbb
lret
lret
cmp
inc
scas
or
pop
sahf
dec
aas
cli
mov
in
cvtpi2ps
cmp
shll
pop
mov
je
inc
in
shlb
jbe
push
dec
cmc
xlat
cmp
xchg
jmp
add
fs
adc
test
cmp
pop
lock
push
mov
push
movsb
sbb
std
xchg
mov
push
aaa
in
cli
mov
sub
arpl
mov
lods
pop
or
movsb
cli
add
adc
jl
adc
pop
lret
adc
xor
jne
rcrl
push
pop
sbb
inc
in
loop
sahf
arpl
mov
xor
mov
inc
rcll
jbe
inc
in
dec
mov
shrb
mov
cmpsl
cmc
add
push
xchg
jnp
imul
fists
les
pop
xchg
rcr
lcall
roll
jl
jl
imul
or
rcr
sub
bound
test
and
and
out
xchg
int3
and
or
or
ds
pop
mov
jo
cltd
ror
icebp
jle
push
add
xor
insl
jbe
dec
adc
es
cmc
movnti
cmp
data16
mov
mov
jp
mov
repnz
orl
mov
pusha
das
inc
adc
daa
and
call
ret
sti
xor
sub
pushf
inc
jg
pusha
in
adc
cmpl
cmp
or
lea
fsubl
and
mov
dec
mov
dec
mov
adc
nop
or
add
fcmovu
lock
fnstcw
imul
cmpsb
jg
out
mov
lods
pop
pop
and
mov
movsb
pop
xchg
mov
pop
bound
sub
cmpsl
cmc
pushf
popa
imul
push
sbb
lock
push
xor
push
xchg
pop
jb
rolb
push
cmpsb
inc
pop
xor
clc
push
xor
lahf
cmp
cmp
push
inc
xchg
cmp
push
pmulhw
sub
mov
pop
jb
adc
dec
sub
mov
pop
inc
adc
dec
mov
pop
or
pop
cmpsl
xorl
ljmp
xchg
ror
push
mov
out
fildll
inc
cmp
aas
subb
adc
push
lods
xor
adc
pop
xor
jg
sub
sbb
imul
dec
inc
fnstsw
daa
fisubrs
dec
lods
loop
adc
adc
aam
in
inc
cltd
dec
cmp
xor
test
lcall
test
out
cltd
xchg
xor
jl
mov
mov
xchg
sub
pop
js
pop
inc
inc
jmp
bound
push
leave
push
out
push
stc
jne
push
pop
or
xchg
dec
fstl
sbb
pop
dec
or
mov
adc
xor
div
push
dec
and
inc
das
fstpt
fs
aad
into
mov
push
cmp
out
leave
sbb
jno
aaa
add
negb
std
enter
imul
cmp
into
mov
add
mov
pushf
jbe
or
add
adc
insl
sub
orb
inc
sbb
cs
cltd
mov
lods
xor
inc
or
pop
sbb
inc
mov
mov
cmc
adc
mov
pop
icebp
lods
mov
mov
xchg
cmp
and
sbb
sbb
je
jno
adc
or
mov
out
pop
xor
aas
push
inc
arpl
sub
pop
movsl
fwait
scas
notb
mov
jecxz
int3
lea
and
pop
dec
movsb
repnz
or
push
inc
mov
sahf
aaa
and
aad
or
aad
mov
test
inc
mov
outsb
pushf
sbb
mov
cmpsw
add
addl
sti
xor
jge
pop
pop
mov
js
cld
lods
je
lods
into
lcall
arpl
in
jp
rcrb
sbb
mov
scas
aas
loop
lret
lcall
testl
inc
inc
ljmp
lock
mov
sub
dec
and
cli
lcall
jae
xchg
push
pop
pop
pop
mov
popfw
add
lods
ja
cli
jl
lcall
shll
mov
ja
and
mov
addl
cmpsl
out
movsl
js
and
push
mov
sbb
test
push
imulb
shl
inc
out
sti
sbb
inc
jno
sub
inc
scas
xor
dec
sti
bound
xchg
aaa
push
push
fcoms
pop
aaa
inc
sub
sub
sbb
push
dec
sahf
and
out
inc
xchg
inc
fldt
pop
das
out
sbb
sahf
sub
adc
push
adc
mov
jae,pt
mov
push
push
push
pop
mov
dec
in
xchg
mov
in
mov
movsb
push
inc
xor
mov
pop
dec
mov
js
jnp
ret
test
and
fstps
push
sbb
fisttpll
cli
sub
pop
arpl
add
xchg
and
pop
test
inc
aad
jle
cmp
push
cmpb
push
sbb
stc
jnp
jp
pop
pop
insb
mov
test
jle
adc
push
icebp
lds
dec
popf
and
sub
aas
mov
or
mov
sbb
push
out
stc
mov
das
xchg
jno
fnstsw
cmp
mov
push
xor
jmp
dec
cmp
xchg
popa
mov
push
clc
ss
call
and
mov
lods
sbb
push
cmp
xchg
inc
adc
mov
or
inc
lea
rcrb
mov
dec
cmpsb
in
ljmp
std
aam
adc
fimull
or
adc
xchg
xchg
cmpsb
mov
leave
outsb
push
jmp
mov
sarl
jns
mov
jmp
push
jo
jp
outsl
loopne
pop
or
add
and
movsb
mov
das
push
sbb
pop
adc
dec
aas
mov
movsl
mov
fdivrl
in
in
aam
mov
sub
cs
fsubl
xchg
push
pop
rcll
call
lcall
jne
cmp
push
in
jnp
jnp
and
pop
rorb
and
ret
jb
lret
gs
clc
in
sub
mov
push
jae
add
shrb
xor
pop
xchg
jo
sbb
sarl
mov
les
sub
pop
xchg
add
and
fwait
mov
test
dec
jae
push
loope
in
loope
or
inc
jbe
test
sti
add
xor
movsl
out
stos
imul
dec
mov
mov
xor
fwait
cmp
push
or
and
cmp
insb
adc
mov
sbb
mov
dec
xor
inc
jne
pop
mov
test
cs
aas
jae
sub
inc
inc
inc
xor
jb
outsl
adc
mov
and
mov
pop
popa
stc
mov
data16
mov
mov
sbb
in
mov
and
xor
xor
inc
adc
lret
rorl
lret
cwtl
sahf
shl
push
pushf
loop
mov
sub
cwtl
shll
clc
mov
cmc
push
adc
mov
push
notb
adc
nop
mov
mov
cmp
ret
adc
fisttps
sbb
outsl
pop
adc
into
repz
xchg
gs
dec
jbe
mov
push
scas
xchg
dec
jmp
xor
sbb
fwait
cmp
arpl
ret
mov
scas
push
mov
ja
inc
pusha
xchg
sbb
ljmp
pop
scas
or
dec
pop
cmp
adc
in
mov
inc
inc
jnp
cmpl
jnp
jecxz
cmp
xchg
int
imul
lret
adc
bound
or
dec
cs
push
xor
fwait
inc
ja
pop
pop
jns
in
jo
movsl
fstps
sub
aad
cmp
sub
xor
fcmovbe
xchg
jl
mov
mov
add
cmp
scas
fsubr
and
jle
push
jmp
test
dec
int
xor
push
ret
push
cmp
inc
dec
mov
jbe
clc
int3
cmpsb
imul
ret
jl
ss
icebp
mov
lcall
or
cmp
sbb
jbe
pop
adc
repnz
push
lock
mov
or
mov
adc
dec
pop
adc
and
inc
pusha
push
mov
adc
mov
notb
repz
addr16
enter
sub
fdivr
arpl
or
push
fisttpl
xorl
fstpt
sub
mov
lods
adc
add
jbe
adc
or
loope
dec
adc
inc
neg
fs
ds
adc
in
mov
rorl
push
inc
pop
adc
or
push
xor
vucomisd
mov
and
xchg
lcall
ds
cmp
add
fdivr
out
pop
loopne
dec
jecxz
jne
loop
sbb
mov
in
lods
mov
jl
sub
stos
scas
imul
pop
aas
jae
jo
add
xlat
add
bound
outsb
mov
mov
xchg
inc
mov
sbb
es
sahf
ficomps
inc
xchg
adc
fstl
insw
outsb
mov
orb
les
ljmp
push
xchg
jnp
bound
testb
xor
cmp
xor
stos
lcall
dec
shlb
cmpsl
enter
pop
ret
mov
adc
cmpsl
cmpsb
pop
mov
pop
sub
jns
insl
ret
add
test
pop
adc
jp
jmp
xlat
outsb
xor
dec
std
sbb
shll
push
lock
dec
adc
inc
xor
cwtl
ret
pop
hlt
aaa
cmp
orl
lcall
rol
rol
inc
in
mov
xchg
mov
testl
loope
mov
stos
movsb
int
push
aam
out
dec
imul
and
push
mov
pop
mov
inc
sub
adc
lock
mov
insl
das
shll
nop
imul
inc
xchg
mov
flds
clc
xor
mov
in
repz
hlt
ficomps
push
imul
icebp
clc
mov
cmc
mov
mov
pop
inc
addr16
loopne
or
jmp
pop
mov
in
ljmp
cmp
jle
xor
cmp
inc
repz
sbbl
test
movups
xor
pop
inc
aam
pop
int3
lret
xor
xor
sub
outsl
jno
enter
pop
cmp
nop
stos
je
enter
jmp
cmp
and
fidivrs
xchg
out
das
cmp
cmp
jle
sub
ret
call
dec
pushf
sbb
movsl
pop
orb
mov
test
clc
ret
rol
sub
insl
cwtl
lcall
xchg
or
hlt
scas
shlb
push
out
mov
mul
sbb
and
jg
lahf
insb
pop
aas
adc
daa
outsb
test
adc
pushf
mov
cltd
shrb
popf
sub
sbb
shlb
ljmp
shlb
js
sbb
bound
addr16
ss
out
pop
cmc
ret
pusha
icebp
mov
or
notb
lea
nop
jbe
movsb
ljmp
adc
in
pop
or
adc
jmp
pop
mov
or
aaa
mov
shr
mov
gs
mov
outsb
scas
call
xchg
call
ret
test
pushfw
jmp
fisttpl
pop
pop
xlat
xchg
sti
aas
call
lds
call
and
lods
sub
mov
nop
aad
loope
sub
aam
fs
sbb
push
jb
adc
imul
xchg
imul
imul
adc
add
cmp
cli
and
or
pushf
and
repz
jmp
jge
outsl
inc
int3
daa
out
inc
adc
in
push
jg
ljmp
xchg
mov
xchg
arpl
xor
cs
stos
mov
pop
lret
jge
pushf
cmp
sbb
mov
int3
xchg
imul
stc
add
and
fildll
dec
rorb
fildll
jmp
xchg
aas
xchg
sub
mov
fidivs
out
mov
sbb
push
adc
dec
pop
test
pop
mov
js
cmc
mov
mov
inc
xchg
ret
dec
mov
test
push
clc
inc
push
xchg
stc
ds
xchg
mov
or
js
in
not
jecxz
mov
loope
insl
aad
ret
xorb
lea
gs
hlt
cmp
jnp
sahf
sbb
push
inc
xlat
add
jecxz
adc
lret
fildll
xchg
mov
inc
inc
rorl
sub
notl
cli
repnz
pop
sub
addr16
sub
jmp
sbb
mov
imul
popf
adc
outsl
sbb
movsb
xlat
push
push
dec
cmp
lods
sbb
jp
xchg
xchg
pop
push
add
fs
jae
cmpsl
mov
inc
inc
push
pop
pop
jnp
adc
in
nop
xor
je
xlat
sti
cs
int
popf
dec
fsts
mov
sub
cmpsl
and
mov
mov
sub
movsl
subl
fdivrl
mov
movsb
decb
outsl
push
mov
stos
sbb
and
cli
inc
shrb
imul
sub
shrb
fwait
lret
push
xlat
test
int3
leave
fidivl
nop
out
hlt
mov
mov
lods
cli
cmp
pop
mov
fs
mov
mov
jns
in
mov
arpl
lret
aam
mov
pop
push
and
xchg
xchg
mov
jne
lds
jmp
ret
and
push
addb
outsb
repnz
pop
jle
cmp
mov
push
sbb
pusha
lea
jo
dec
mov
mov
ja
push
movsl
imul
mov
cmp
xor
out
lea
rolb
mov
jnp
mov
decb
push
test
test
cltd
push
mov
pop
repz
outsb
xor
adc
sbb
cwtl
xchg
mov
aad
cmp
bound
jne
adc
inc
dec
pop
xchg
aam
xor
jmp
and
jne
push
sub
stos
shll
sbb
cmpsl
cmc
test
fcmovne
pop
fidivrs
xor
dec
sbb
push
jle
mov
adcl
sti
mov
push
sbb
xor
popl
jg
pop
jne
je
mov
mov
xlat
inc
inc
sub
imul
sub
flds
or
into
pop
cs
push
pop
ret
mov
adc
jne
nop
mov
mov
lret
dec
and
addr16
ljmp
stc
gs
inc
out
fidivl
adc
icebp
jmp
cmp
inc
mov
les
cmp
pop
inc
in
rorb
or
lods
cld
push
mov
in
xchg
jge
icebp
pop
push
fidivs
iret
mov
pop
out
cmpsl
pop
inc
sbb
int
mov
loopne
and
xor
xchg
mov
xchg
mov
dec
and
lds
and
insl
clc
jmp
inc
xchg
ficompl
push
or
cmp
loop
xchg
int
popf
mov
neg
mov
insl
mov
lahf
call
mov
test
cmp
sub
fwait
loope
popa
out
cwtl
pop
sbb
notl
xchg
push
push
mov
loop
cmp
andl
insb
jnp
dec
push
decb
xchg
and
ficoml
ret
jmp
cli
loope
and
outsb
jnp
mov
xor
push
push
mov
test
sbb
fistl
test
mov
test
fisubrs
and
cmpsb
mov
mov
sub
dec
into
or
aad
aaa
pop
and
cmp
jne
sub
sti
aad
les
lahf
stc
mov
in
push
and
adc
inc
bound
sub
add
out
fidivs
out
dec
fistl
in
insl
shll
shlb
inc
fildll
imul
js
add
pop
loop
xorb
mov
int
inc
lods
popf
pop
bound
test
push
xchg
mov
fildl
call
sub
jae
repz
std
jl
int3
dec
mov
out
clc
mov
repnz
fnstenv
pop
lret
sarb
stos
or
pop
sbb
hlt
mov
clc
bound
fstl
cmpsl
in
dec
test
clc
test
das
sub
addr16
nop
in
jne,pt
adc
fdivl
sbb
or
pusha
or
mov
je
leave
or
dec
pop
or
aas
int
xchg
sbb
dec
out
ficompl
and
and
dec
pop
push
es
sub
xchg
push
std
cvtps2pi
data16
sub
fs
out
jb
jne
adc
jl
mov
xor
or
inc
or
jmp
movsl
mov
sbb
or
or
pop
cmp
addb
out
mov
push
inc
push
mov
mov
xlat
stc
mov
pop
pop
cmp
arpl
jmp
dec
jns
mov
cs
push
inc
xor
clc
pop
cmp
rclb
jne
mov
pusha
fs
add
outsl
xchg
xchg
xlat
cld
movsl
daa
push
mov
pop
ja
hlt
out
lock
andl
shl
punpckhwd
fisubl
lods
cli
mov
add
cli
mov
jae
cmpsl
push
jle
inc
mov
addl
pusha
dec
lock
dec
push
loope
or
pusha
pop
mov
dec
lahf
pop
and
pop
lret
in
aam
rcll
out
sti
cli
add
jne
inc
test
or
and
and
and
adc
sub
into
xchg
adc
mov
icebp
add
stc
push
sub
pop
aaa
cmpsb
push
ja
inc
mov
push
lea
imul
int
cli
lahf
add
xlat
scas
jo
or
mov
insl
cmp
pushf
sub
out
cmp
cld
pop
ss
iret
jns
clc
xor
je
mov
ljmp
bound
movsl
test
fistpll
cld
dec
push
sub
addr16
data16
xorl
pop
inc
out
arpl
and
or
in
pop
lret
fs
lods
andl
xlat
lods
das
add
arpl
sub
icebp
or
adcb
add
sarb
sub
push
dec
andl
js
jle
sbb
adc
adc
out
movsl
mov
mov
push
cmp
inc
pop
push
idivb
mov
into
sub
popf
imul
dec
fwait
add
aas
outsl
ret
ja
out
ret
mov
lds
cmovs
in
and
mov
cmpsl
out
jne
sbb
mov
dec
xchg
cmpsl
aam
into
cmp
sti
cmp
cmp
ret
in
pop
ja
test
xchg
xchg
sub
insb
mov
push
aaa
mov
pop
outsb
lret
jb
xlat
cmp
or
repnz
sbb
fidivrs
sahf
popl
sub
mov
lock
jg
pop
mov
push
add
adc
inc
or
xchg
aas
hlt
and
xchg
idiv
outsb
add
add
test
arpl
arpl
ret
out
popa
pop
jns
lret
dec
cmp
pop
and
iret
sbb
inc
test
and
pop
pop
les
fidivrl
adc
icebp
out
stos
fwait
sbb
and
int3
lret
mov
arpl
jbe
popa
sarb
and
pushl
dec
fisubl
adc
paddb
adc
ret
mov
out
pop
ja
xchg
jae
or
jae
push
in
mov
into
lret
loopne
xor
sbb
aaa
js
xor
xor
adc
add
leave
lods
dec
and
mov
xchg
sub
inc
mov
adc
icebp
stos
xchg
adc
out
xor
int
add
mov
arpl
dec
push
add
mov
in
out
imul
xchg
popf
pxor
in
push
gs
nop
test
mov
adc
cmp
fs
dec
rorb
xchg
adc
xor
push
rorl
pop
lret
mov
popa
std
les
add
and
and
pop
std
push
dec
popa
push
jp
lea
rolb
fistpl
mov
gs
notb
mov
out
xchg
iret
filds
pop
xchg
xchg
add
insl
into
ret
or
fisttps
je
test
movsl
xchg
mov
inc
cmp
call
lods
sub
xor
scas
add
add
in
pop
int3
mov
and
outsb
mov
add
xor
lcall
sbb
les
dec
test
or
cmpsl
xchg
pop
pushf
rol
out
clc
jg
inc
sti
cmp
in
pushf
inc
mov
out
jge
cltd
lods
pop
and
test
jns
jmp
out
insl
xchg
iret
sti
sbb
jo
or
jge
frstor
mov
in
lcall
xor
mov
mov
adc
test
aad
adc
adc
rcrb
cmpsl
add
imul
mov
mov
loope
inc
mov
mov
xchg
addr16
int3
and
in
insl
pusha
add
cli
xor
push
adc
xor
jb
hlt
cmp
inc
adc
test
xchg
mov
aas
cli
inc
stos
sbb
loopne
xchg
mov
mov
cmc
mov
es
cwtl
aas
add
scas
pusha
or
xor
xchg
jae
movd
dec
rcl
pop
pop
jg
out
mov
aam
and
cli
cmc
add
cmp
inc
push
xlat
fucom
and
xchg
lret
push
loopne
testb
loop
sbb
imul
sbb
xchg
adc
shr
sbb
movsb
sub
pop
mov
in
popf
or
in
sbb
mov
add
lahf
scas
inc
pop
fsubs
cmp
or
xchg
negl
mov
lret
sbb
sub
sahf
leave
fwait
jb
pop
jb
in
jp
ss
cltd
mov
or
or
jbe
sbb
out
cmp
mov
shrb
sbb
mov
fsts
arpl
or
and
mov
sub
ja
pop
mov
jge
imul
faddl
sti
push
adc
ss
das
in
sbbb
jge
cmp
inc
aam
shrd
imul
sbb
ret
sub
nop
call
in
dec
xchg
adc
push
xor
cld
shrl
jns
add
inc
adc
std
sbb
add
jl
je
jg
jp
aam
test
jge
mov
repnz
mov
sbb
and
mov
insb
mov
jo
js
mov
aas
add
outsb
mov
cltd
fmul
cwtl
das
setnp
roll
mov
daa
pop
out
stos
sbbl
jns
mulb
pop
mov
cltd
mov
cmp
mov
ffree
xchg
add
lahf
sbb
cmpsb
rol
pop
mov
sbb
mov
jae
inc
into
dec
stos
popf
push
xchg
test
add
pop
cmp
call
mov
test
je
je
or
inc
movsl
sbb
sub
pop
mov
lret
int
jle
gs
inc
mov
sub
repz
out
add
jae
fwait
sbb
out
into
aaa
xor
addr16
mov
rolb
dec
lret
xlat
mov
out
iret
and
push
test
and
mov
mov
std
mov
push
fwait
into
pop
mov
movsb
idivl
popa
or
mov
lret
add
or
xchg
cltd
add
xor
add
pop
jb
adc
and
push
mov
xor
test
adc
movsl
push
sahf
es
popf
lock
add
xor
cmp
gs
pop
add
popf
mov
cmp
mov
daa
popf
dec
cltd
and
rol
scas
dec
xchg
nop
jg
cld
add
dec
shrb
pop
int3
dec
jecxz
cmc
lock
add
cld
cmp
xor
mov
dec
jns
push
lret
cltd
mov
js
je
push
je
ffreep
mov
or
xchg
mov
jnp
cmp
and
inc
ljmp
loop
xchg
fcoms
add
inc
and
out
popa
xchg
cmp
ret
in
lods
ds
jns
xrelease
jle
sub
add
mov
and
xchg
es
xchg
sbb
ss
or
push
cmpsl
test
loopne
cld
mov
aas
shrb
mov
pushf
pop
ret
dec
mov
push
or
xchg
scas
inc
int
leave
subb
es
es
ljmp
mov
mov
stos
jbe
daa
repz
mov
out
lods
cltd
test
mov
cli
xor
pusha
cmp
imul
fldenv
aas
add
testl
fidivs
mov
mov
jp
gs
pop
jbe
push
xor
jge
inc
insb
sti
mov
test
pop
notb
or
test
fldl
mov
jecxz
cmpsb
push
idivb
push
jge
dec
lods
cs
dec
jle
test
push
sub
sbb
adc
lods
inc
lods
in
ljmp
sbb
mov
repnz
jl
ret
xor
sbb
adc
sti
pushf
mov
dec
or
push
js
lea
sti
dec
jmp
jo
in
mov
xchg
imul
jae,pn
push
inc
icebp
stc
push
in
cmc
or
js
push
adc
aas
adc
mov
fdivrl
add
dec
mov
or
das
sti
pushw
out
mov
xlat
xchg
in
dec
shll
pusha
lcall
pop
sahf
or
push
shlb
scas
jg
out
mov
xchg
or
add
insl
pushf
clc
ljmp
mov
dec
cwtl
and
pop
sbb
loopne
jmp
mov
jns
ja
and
add
mov
and
les
ficoms
popf
sbb
sbb
push
cmpsl
inc
push
inc
je
sub
scas
cmp
jbe
cmc
scas
into
lret
lods
aas
adc
into
into
leave
xorb
push
or
into
xchg
daa
inc
add
cli
in
stos
xchg
imul
lret
cmc
push
push
pop
dec
outsb
sub
jecxz
fisubrl
stos
mov
add
icebp
iret
adc
or
xchg
xchg
popa
out
test
iret
mov
mov
xor
cmp
dec
lcall
add
mov
pusha
imul
cltd
imull
aas
mov
adc
push
dec
gs
sahf
icebp
das
dec
jg
mov
mov
jne
aad
es
dec
fcomps
mov
popa
es
cmp
mov
shl
pop
into
pop
gs
loope
or
ljmp
sub
push
or
xor
xchg
sub
clc
fnstcw
jmp
lahf
or
pop
mov
aam
jbe
ja
das
dec
xchg
push
mov
xor
dec
mov
out
add
imul
xchg
fs
stos
inc
loopne
mov
icebp
sahf
mov
inc
sbb
das
jbe
adc
ret
icebp
inc
cs
mov
mov
fisttpl
push
and
mov
cmp
mov
fadds
popf
push
xchg
dec
je
jecxz
call
aam
mov
adc
lahf
movsb
lahf
mov
xchg
jb
jbe
xchg
sarb
xor
push
insb
jns
test
out
lea
mov
psrad
push
mov
push
mov
push
mov
andl
mov
ljmp
and
pop
cmp
mov
sarl
xor
rorb
xor
cli
xor
sub
jge
fdivrs
aaa
or
test
mov
pushf
out
pushf
cld
push
mov
pop
mov
mov
push
sub
fbstp
cmp
sbb
mov
fistps
in
leave
pop
mov
iret
dec
movsb
adcb
popa
test
or
push
bnd
lods
in
lcall
int3
scas
lock
or
push
push
test
xor
gs
sarb
lahf
cmpb
fnstcw
add
sub
or
out
je
jle
cwtl
jne
fldt
popa
data16
hlt
and
pop
sub
sahf
arpl
mov
pop
jecxz
push
stos
sbb
test
dec
pop
inc
pop
dec
lds
pop
sbb
jle
fsubrl
mov
fnstenv
lret
push
out
sbb
mov
jo
test
repnz
test
stc
xchg
aas
gs
mov
out
adc
push
pop
push
mov
push
mov
xchg
nop
inc
inc
mov
xchg
scas
push
mov
push
fmull
sub
dec
mov
or
js
pop
rcll
or
test
loop
cli
mov
mov
loope
ljmp
fst
iret
aam
sbb
dec
movsb
das
aas
arpl
pop
mov
orb
or
mov
pop
inc
xchg
sbb
shl
mov
les
loope
adc
mov
sub
or
push
out
xchg
push
push
and
dec
ss
in
jae
xor
lock
ljmp
test
lds
or
push
bnd
mov
shrl
gs
mov
out
sbb
adc
mov
add
xchg
push
jle
or
aam
pop
aam
cmp
ficompl
jl
and
lret
pop
call
xor
jbe
lcall
pop
sub
cwtl
mov
mov
mov
lock
cmp
inc
cli
xlat
loopne,pn
xor
cwtl
adc
rcll
jae
mov
mov
sti
mov
sub
pop
inc
out
test
mov
mov
mov
mov
or
inc
mov
push
or
mov
mov
sub
imul
sub
dec
add
loop
push
jle
jl
jle
fwait
sub
inc
movsl
and
les
pop
lcall
fimuls
shlb
sbbl
jb
das
pop
mov
mov
lods
add
shlb
sbb
outsb
sbb
test
clc
loope
stos
clc
mov
adc
fmull
mov
xor
into
mov
push
jl
std
fisubl
fwait
mov
push
mov
arpl
xor
push
shrl
mov
push
ss
sub
pop
adc
mov
shrb
clc
jle
cmp
xchg
adc
or
jle
adc
push
cmp
adc
sub
arpl
mov
dec
or
xor
ret
mov
fistl
xchg
and
xchg
cld
mov
pop
loope
daa
add
sub
daa
mov
lods
mov
xor
dec
scas
pop
pushf
outsl
mov
daa
mov
adcb
dec
gs
sub
dec
outsl
pop
pop
cmp
push
pusha
lods
mov
push
into
cld
push
arpl
cli
out
nop
push
xor
imull
gs
push
xlat
ret
out
insl
pop
mov
mov
mov
adc
pop
das
pop
push
andb
loopne
inc
xor
cs
gs
cmp
shrb
sub
fdivl
sub
or
and
push
push
addb
out
cmpb
mov
test
jo
mov
jecxz
fldenv
sbb
add
lret
int
add
test
ds
jmp
sub
sub
jl
and
pop
lods
out
xchg
dec
xchg
xor
mov
leave
sti
outsb
lea
sahf
cwtl
push
sbb
dec
lahf
push
inc
movsl
test
xorb
cld
pushf
xchg
xchg
and
out
adc
in
cli
cmpsb
icebp
mov
mov
std
rcl
pop
jno
lahf
cmp
out
or
mov
call
pop
data16
mov
dec
jmp
ret
add
test
mov
jne
mov
xchg
pop
push
fmuls
mov
mov
divl
aam
adc
and
jno
cmc
emms
outsb
sub
std
mov
push
add
push
subb
pop
out
repnz
mov
dec
adc
shrb
and
xor
adc
inc
repz
mov
flds
jno
jle
adc
ss
loopne
sub
fwait
jno
mov
repz
pop
mov
lret
gs
jp
and
adc
inc
int3
mov
xor
adc
sbb
push
arpl
clc
add
rorl
sbb
stc
mov
sub
cs
push
pop
adc
lds
mov
sbb
jp
aas
xchg
xchg
mov
add
bsr
sbb
fwait
pusha
sahf
mov
cmpsb
out
cmp
or
xor
mov
pop
loopne
fs
mov
pslld
mov
ret
repz
push
or
sub
xchg
test
mov
in
add
pop
pushf
adc
cmp
dec
divl
aad
or
in
int
shlb
div
pop
sub
aad
and
sbb
xor
mov
popa
push
pop
add
sub
lret
mov
mov
mov
sub
and
xchg
mov
inc
or
fnstsw
inc
sub
push
mov
jmp
or
ret
add
mov
rorb
ret
sbb
jns
int
sub
mov
ja
add
mov
xor
add
std
push
jmp
shll
lcall
push
fwait
jbe
xchg
adc
xor
mov
insl
inc
out
mov
loope
dec
adc
fld
mov
sbb
in
movq
je
gs
mov
xor
sub
and
mov
lret
setge
cmp
xor
insb
je
xor
std
negb
xchg
pop
sahf
push
ret
test
cltd
in
fstl
adc
sbb
mov
dec
pop
mov
popf
xchg
pop
mov
je
std
dec
sub
shr
dec
repz
call
add
add
jmp
xor
xchg
rcrl
or
mov
mov
cld
mov
int3
push
pop
inc
cmp
sbb
lods
pop
jecxz,pt
fildll
fldenv
arpl
inc
imul
and
adc
shlb
inc
loope
or
and
fdivs
icebp
xchg
in
mov
add
cs
int
adc
call
and
pop
int3
cmp
cli
mov
add
call
popf
mov
dec
jmp
mov
push
shrl
mov
idiv
sbb
mov
lds
inc
aam
leave
icebp
flds
dec
outsl
rorb
lds
cmpsb
loopne
and
fistpll
xor
add
loope
out
test
sub
push
pop
jecxz
lea
lds
pop
repz
and
jo
in
in
jmp
andb
pop
std
pop
sub
or
adc
sahf
adc
sbb
jmp
push
xorl
scas
rorb
ja
aam
add
dec
daa
cltd
je
jnp
cmp
mov
les
or
pop
cltd
cmp
popf
movsl
sbb
mov
fidivl
sar
gs
lret
fsts
sbb
test
sbb
fldl
mov
cmpsb
jns
stos
hlt
sub
cmp
push
mov
aam
mov
das
and
sub
nop
repz
scas
mov
test
dec
cmp
push
lods
out
outsb
icebp
out
sbb
fsub
xchg
cmpxchg
add
xchg
sahf
test
xchg
aaa
fwait
jns
sbb
jne
sbb
xchg
sub
ljmp
repnz
dec
lret
inc
fcmovbe
cmc
loopne
push
aad
xor
add
les
jp
fistpl
adc
movsb
movsb
shll
mov
and
mov
int
mov
mov
icebp
iret
pop
cli
and
and
or
lret
add
xchg
xchg
cmp
aad
jle
cmp
mov
fs
js
sub
fnstenv
jmp
add
in
pusha
hlt
shlb
xchg
xchg
icebp
data16
ds
push
inc
add
les
clc
rcll
vaddsubps
push
xor
jmp
mov
cmp
ss
call
in
in
arpl
mov
aaa
icebp
repz
add
shrb
inc
mulb
ss
xorl
jge
test
jle
popa
push
lret
jno
mov
scas
and
pop
fisubrs
fldenv
dec
into
faddl
ret
mov
outsb
fmulp
aam
dec
int
ja
lcall
dec
inc
fistl
pop
jge
mov
pop
mov
cmpsl
pop
cltd
lcall
pop
xor
xchg
mov
shll
rol
sbb
mov
mov
outsb
sub
loop
xchg
sbb
ljmp
syscall
in
jae
push
add
into
push
cmp
jg
imul
ds
nop
mov
mov
cld
std
mov
cmpsb
inc
js
xchg
movsl
mov
dec
lods
and
out
xchg
mov
xchg
and
inc
leave
push
test
cli
cmp
mov
add
sbb
psrld
fdivrs
xor
movsb
push
inc
or
adc
add
mov
rcl
fistl
xor
dec
in
cli
jecxz
gs
cmpl
sub
dec
out
imul
hlt
xor
fildll
sbb
sbb
lea
add
mov
mov
data16
push
mov
test
inc
adc
outsl
repz
cmpsl
adc
mov
push
xchg
rcll
rcll
ret
int3
add
stos
push
push
cmp
jg
test
pop
jnp
jns
add
lea
scas
std
xchg
icebp
jo
and
rorl
sbb
jl
popf
insb
jl
scas
add
jno
lods
mov
fistl
push
xor
xor
pushf
mov
sti
mov
jp
push
fcomp
and
fisttps
cmp
pop
xorl
out
flds
insl
push
jmp
sti
aam
and
sbb
push
mov
loopne
int3
and
sbb
ffreep
pop
mov
mov
inc
scas
mov
push
add
lret
pop
aas
mov
add
push
sub
mov
aad
test
sbb
lea
iret
dec
pop
jmp
aas
addr16
jp
mov
adc
in
xchg
arpl
mov
add
mov
add
mov
jg
rcrl
sti
mov
ljmp
mov
insb
mov
dec
mov
gs
inc
dec
pop
cmp
mov
mov
stos
dec
js
loope
sti
je
jmp
loopne
dec
xor
ret
outsl
xchg
aas
mov
icebp
pop
xor
add
sub
cmp
pop
shll
or
xchg
add
lock
nop
sbbl
mov
das
lock
gs
ds
pushf
mov
test
es
push
adc
je
stos
push
jmp
push
jne
push
mov
std
addr16
jns
lahf
xor
mov
call
xor
lds
sti
push
cmp
popa
stos
fwait
xchg
repz
mov
xchg
stos
imul
sbb
fcompl
outsb
cmp
push
push
adc
adcb
stos
enter
adc
push
hlt
inc
pop
repnz
pop
add
int3
dec
pop
push
xor
inc
mov
mov
push
or
push
fbstp
shll
stos
fwait
lcall
nop
popf
addr16
pop
cmp
fs
shrl
push
inc
fwait
rcrb
sub
out
mov
mov
jge
or
sbb
lock
or
xchg
lret
mov
rorb
cmpsb
xor
lret
scas
sbb
jmp
in
inc
push
mov
dec
mov
xor
ret
push
sub
or
cs
aam
mov
shll
mov
mov
inc
stos
dec
adcb
pop
xchg
pop
gs
jl
addb
outsl
jo
mov
icebp
xchg
sub
pop
add
push
lods
xchg
sbb
mov
aaa
mov
lcall
mov
dec
mov
popf
test
clc
rcll
cld
add
xchg
shll
mov
jle
ljmp
sti
or
dec
lea
inc
mov
inc
xlat
popa
ljmp
das
inc
adc
outsb
mov
popf
jge
call
jp
add
insl
mov
test
out
mov
add
movsb
mov
ds
in
mov
sbbl
call
pushf
mov
cmp
mov
push
mov
inc
outsl
mov
clc
stos
pop
aaa
pop
movsl
scas
out
stos
incb
mov
cld
cmpsl
shll
hlt
enter
cs
mov
xchg
aam
lea
fimuls
icebp
push
xor
adc
into
lods
xchg
mov
lods
and
push
xchg
add
sbb
jmp
dec
adc
fnstcw
push
in
imul
fsubr
out
lret
punpckhdq
fdivs
jno
mov
loope
lahf
xor
vmptrld
pop
push
cmp
mov
push
fwait
lret
xchg
fcoms
jg
sbb
in
mov
arpl
sub
mov
cld
test
mov
jp
pop
pop
sbb
hlt
cmc
xchg
scas
mov
mulb
negb
mov
adc
sub
arpl
scas
jge
jmp
shl
mov
aaa
push
sarb
push
mov
mov
movsl
jnp
fwait
notl
mov
fisubl
lcall
xchg
stos
shll
fwait
inc
scas
cmp
movsb
das
mov
hlt
fbstp
sti
orl
cwtl
sbb
add
xchg
xchg
fwait
pop
lods
fsubrl
sub
mov
cmpsl
test
cs
or
sti
imul
clc
call
or
es
gs
cmp
add
push
jne
jne
stos
push
pop
shr
adc
fstpt
or
adc
lods
loopne
or
popf
das
test
ss
pop
stos
cs
lahf
popf
aas
test
movsl
mov
in
push
xlat
mov
dec
inc
iret
dec
imul
stos
in
cld
pop
cmpsl
mov
shlb
mov
push
cmp
jp
test
push
hlt
js
das
lret
ljmp
push
sahf
xchg
inc
rcll
push
cmpl
jns
mov
pop
pop
sbb
lock
mov
sub
jb
sbb
mov
push
pop
mov
jp
mov
jo
inc
xchg
jae
bound
sbbb
xchg
mov
into
jns
sub
push
nop
test
ret
les
push
sahf
ret
adc
in
leavew
cs
xor
adc
xchg
popf
fcompl
mov
jns
subl
jne
xor
fs
fdivrl
inc
out
xor
loope
jbe
in
sub
xchg
std
in
mov
jge
xor
dec
subb
mov
cmpb
clc
stos
repnz
cltd
cmp
add
add
mov
jae
mov
flds
hlt
push
mov
mov
pop
addr16
pop
sub
adc
fisubl
mov
outsb
add
inc
cmp
int3
loope
inc
shl
sbb
lret
and
test
lahf
sub
fwait
aaa
add
adc
jns
stos
jl
and
pusha
sub
test
jge
sbb
in
dec
divb
shll
xlat
cmpsl
scas
gs
mov
mov
mov
pop
cli
add
push
popf
push
mov
inc
jne
iret
sub
sub
push
out
iret
inc
mov
xchg
out
fdivrl
add
jl
pop
shrl
sbb
loop
xchg
js
push
mov
fldt
sbb
push
rcrl
aaa
in
stos
test
outsb
and
mov
mov
in
or
mov
mov
lods
mov
lret
es
mov
test
push
jle
imul
mov
cwtl
xchg
inc
pop
test
push
add
stos
inc
and
sbb
sub
mov
mov
jo
lds
dec
icebp
jno
outsb
inc
test
jge
sub
mov
push
shll
xchg
cmp
add
ss
dec
sbb
pop
inc
call
cmc
call
pushw
xchg
jae
ret
sahf
scas
mov
dec
int
cwtl
push
adc
adc
nop
add
call
aaa
and
scas
jp
aad
mov
and
lahf
leave
or
xchg
cs
sar
inc
jl
jp
xchg
dec
mov
add
test
jb
inc
lea
ja
push
mov
sbb
arpl
push
dec
cli
out
jns
dec
cmc
ja
push
repnz
mov
mov
sub
popl
popf
xor
mov
fldl
iret
mov
insb
adc
push
xor
and
push
int
fdiv
xchg
mov
popf
fists
sbb
sbb
mov
cmpsl
mov
xor
mov
push
cli
sti
in
cmp
mov
in
insb
mov
pop
add
mov
jle
sahf
adc
orb
daa
les
adc
jae
inc
or
fimuls
call
movsl
xor
shrl
stos
test
pop
daa
enter
idivl
dec
daa
mov
test
cli
pop
mov
rcrl
xchg
ret
dec
xor
xor
add
test
sbb
mov
loopew
xchg
std
insl
jmp
or
mov
call
sub
fisttpl
add
outsl
lods
ret
jl
mov
jge
xor
jmp
aam
and
jnp
xchg
movsb
mov
or
mov
aas
pop
outsl
cwtl
cmp
jno
ret
fwait
aam
popf
stos
pop
call
add
inc
add
imul
push
testb
aad
cmpsb
into
int3
lahf
fnsave
daa
insb
ja
das
imul
add
adc
mov
mov
pop
scas
aad
sub
push
lds
push
mov
rep
xchg
aas
push
pushf
mov
mov
jecxz
inc
jge
inc
fisttps
dec
push
xchg
sub
shlb
jo
inc
xlat
push
cld
push
loop
cmp
clc
fcmovu
aam
xchg
xchg
add
out
rcrl
jne
lock
lods
js
out
sub
jmp
jb
das
shrl
dec
repnz
mov
in
xor
fwait
pop
das
mov
and
mov
rcll
pop
lods
das
and
mov
call
hlt
in
cltd
mov
cmpb
sbb
jge
jae
int3
or
pop
xlat
jne
nop
xchg
mov
les
iret
cmp
imulb
addl
insb
sti
movsl
inc
or
sub
pop
inc
out
push
data16
test
and
dec
pop
mov
or
mov
call
adc
xchg
in
rclb
test
daa
mov
aas
popa
nop
jb
pop
jge
pop
sub
sbb
pop
call
fwait
and
push
pushf
or
rorb
add
sub
mov
adc
cmp
ljmp
mov
rep
pop
fs
pop
and
push
pop
push
nop
popa
stos
in
mov
movsl
push
sub
push
pop
xchg
mov
mov
ljmp
mov
xor
and
cltd
xor
fdivrl
cmp
jmp
lret
data16
test
jbe
xchg
pop
insl
lahf
xchg
push
js
repnz
pop
mov
pop
fwait
pop
rcrb
push
mov
arpl
pop
jae
pop
and
jle
sub
mov
pushf
in
arpl
or
das
inc
out
sub
inc
dec
mov
loop
nop
in
lcall
daa
fcomip
xchg
or
rcll
mov
outsl
mov
gs
stos
adc
sub
adc
inc
sub
jg
mov
mov
cs
fsts
negb
shrl
mov
rcll
xor
out
and
daa
enter
or
mov
dec
popf
mov
pop
in
lea
loope
dec
push
dec
mov
push
subl
das
mov
std
cmp
xor
xor
fldcw
test
sbb
in
cli
or
push
jecxz
adc
lea
mov
jg
div
pop
pushf
mov
cmpsl
icebp
adc
out
stc
dec
repz
sbb
cli
frstor
lea
int3
pop
cmp
iret
icebp
inc
bound
clc
sub
and
push
jbe
mov
xchg
mov
jo
rcl
movl
nop
jp
mov
fadd
jle
xlat
imul
and
jae
loope
int
leave
movsl
rcll
lahf
add
jg
pusha
fs
jo
je
mov
sub
stos
shrl
add
addl
cmp
sbb
je
loope
mov
popf
out
jmp
testb
sbb
sbb
inc
push
imul
jbe
mov
pop
fwait
cmp
jne
xchg
xchg
mov
sbb
movsb
xchg
shll
push
and
xor
movsb
test
cmp
in
roll
cmpsl
fdivrl
cmp
int3
ja
sbb
iret
inc
daa
fcomps
and
out
or
mov
xchg
movsl
sbb
cmp
cli
enter
xchg
pop
pusha
ret
testl
addr16
out
insl
sbb
rclb
sub
dec
inc
mov
jg
xchg
sbb
out
gs
mov
fwait
idiv
adcb
push
jle
fs
repz
push
in
inc
rorl
loop,pn
or
cld
jmp
loopne
jecxz
repnz
and
adc
dec
fdivr
sbb
xchg
into
push
inc
sbb
movsl
jbe
or
push
xor
adc
sbb
pusha
inc
push
in
popw
iret
push
mov
and
or
js
fstpt
cltd
push
fildll
cltd
mov
test
and
hlt
nop
and
push
cmp
pop
mov
in
mov
xor
sbb
movsb
movsb
push
ds
cmc
xchg
imul
jo
cmp
mov
lods
sub
test
lods
jmp
rorb
imul
mov
pop
lods
es
outsl
orb
jecxz
aad
lcall
and
shrl
push
inc
cmp
mov
xchg
mov
pushf
mov
pop
lcall
xor
addr16
sub
xchg
jo
push
pusha
push
sbbl
fs
mov
dec
iret
and
push
inc
out
jnp
adc
mov
out
add
aad
add
xor
push
rclb
sub
xlat
lahf
icebp
push
sub
cmc
fldcw
push
push
and
subl
lods
test
loopne
adc
fmul
cmpsb
push
dec
sbb
mov
cwtl
call
xchg
cmpsb
inc
cmp
stos
xchg
mov
push
int3
scas
lock
sub
add
repz
push
test
data16
adc
stos
push
cltd
dec
sbb
outsl
hlt
ss
sub
rcrb
dec
pop
lret
stc
xchg
fsubs
xchg
scas
push
stc
xchg
cmp
and
es
xchg
fwait
jns
mov
xchg
mov
movsl
jo
cmp
imul
repz
addb
in
sldt
std
mov
mov
xlat
mov
shlb
cwtl
into
cs
inc
loopne
jmp
rclb
dec
inc
lret
pop
add
push
jns
add
xchg
jne
dec
fwait
insb
icebp
lret
jle
jnp
hlt
inc
jp
cs
fisttpll
cmc
repz
cmpb
mov
xorl
mov
cmp
shlb
and
mov
mov
adc
mov
pop
push
in
xchg
jmp
popf
adc
adc
push
rcrl
in
cmc
fisubrl
mov
mov
xor
scas
inc
aaa
push
xor
jg
push
subl
aam
push
inc
fs
xchg
test
inc
jl
jns
popa
test
std
iret
add
scas
shl
in
loope
and
adc
sbb
push
test
rcr
xlat
sub
sbb
in
adc
addl
test
sbb
pop
daa
imul
add
es
imul
nop
pop
ds
sahf
mov
ret
inc
cmp
popf
jbe
push
fdivs
mov
mov
cmp
cli
outsb
out
cmc
push
repz
or
xchg
addr16
adc
sbb
sti
push
push
sbb
loop
aas
jl
fstpt
push
pop
cmc
enter
and
mov
dec
jae
cmp
push
and
pop
lock
das
add
mov
mov
xchg
xchg
or
shl
mov
gs
adc
push
lea
and
lahf
sub
adc
cmp
lods
ret
and
sub
ja
xor
inc
bound
dec
or
loope
jmp
lods
test
hlt
xor
or
pop
lods
imul
addr16
xorb
cli
dec
insl
outsb
ficompl
mov
repnz
jno
fcomip
cmp
rcrb
jbe
daa
in
add
xchg
out
xchg
fcomip
and
fucomi
xchg
sbb
jmp
fs
sbb
stos
and
xor
mov
jp
lock
test
adc
pop
aaa
xchg
mov
add
popa
add
jecxz
cwtl
scas
sub
xor
mov
cmp
lahf
fisttpll
push
adc
cmp
cld
inc
dec
lret
mov
loop
out
xchg
cmp
ljmp
fisttpll
ss
xor
fldl2t
push
push
scas
pop
out
jb
cs
lock
fcmovb
mov
xchg
jnp
add
dec
push
test
cmp
xor
leave
subl
mov
mov
jne
inc
cmp
add
call
jns
insb
sub
dec
dec
xorb
xchg
fwait
cmpsl
inc
ret
pop
test
push
into
gs
jmp
inc
inc
sbb
aas
pop
lret
mov
test
xor
push
xor
mov
aas
jne
mov
iret
cmpsl
sub
and
clc
pop
push
and
pop
push
pop
iret
mov
fists
jno
addr16
pop
add
lret
mov
leave
lock
rcrb
inc
sub
in
lahf
jno
aam
jno
jno
mov
cltd
adc
in
aam
divl
imulb
push
mov
push
sub
jl
rcrl
stc
bound
jo
das
cmp
pushf
rol
shll
sub
mov
cli
pop
jnp
icebp
jns
out
sar
out
gs
mov
addr16
mov
rcrl
outsl
fadds
insl
inc
pusha
fs
push
inc
add
lock
shl
ret
std
jge
push
lret
inc
mov
scas
popa
mov
into
add
lret
into
in
fcmovnu
clc
hlt
test
scas
sbb
cmp
push
nop
popa
leave
addr16
std
aaa
pop
ds
fwait
sub
push
or
shll
add
je
ja
xor
shl
mov
inc
daa
sbb
arpl
mov
and
or
mov
mov
inc
cmp
mov
inc
mov
mov
dec
cmpsl
dec
mov
stos
nop
aaa
jno
mov
mov
xor
jno
and
add
xchg
cmp
pusha
xchg
push
test
adc
scas
or
or
xor
mov
pop
push
iret
mov
pop
negl
mov
sbb
push
das
jg
int
aaa
or
outsl
subb
xor
mov
pop
sbbb
sub
std
pop
adc
sub
mov
pop
stos
jg
fstl
outsl
lahf
xchg
push
mov
mov
and
cld
mov
stos
mov
cmp
mov
mov
out
sti
mov
arpl
mov
lods
sbb
lea
jmp
jnp
jmp
lcall
sarl
fwait
or
addr16
repnz
add
es
cmp
lret
repnz
push
cmpsb
repnz
lds
dec
fcmovnu
imul
pop
jb
fsubs
or
xchg
lret
dec
mov
cli
xchg
mov
dec
lods
dec
mov
sarl
sub
loop
sbb
jns
dec
push
xor
add
xchg
push
dec
jbe
cli
cld
addr16
stos
sub
cmp
mov
mov
ret
lock
sub
jnp
jb
push
cmp
add
loope
dec
int
enter
sti
jl
stc
femms
int3
add
gs
jle
sbbl
frstor
jecxz
aad
scas
adc
xchg
pushf
sbb
jnp
cmp
mov
jo
sub
adc
cld
hlt
pushf
inc
mov
loop
ret
mov
daa
push
lods
lret
lahf
pop
scas
mov
loope
popf
test
int3
mov
dec
insb
sub
data16
lret
sbb
push
popf
scas
xor
iret
mov
xchg
and
dec
mov
push
hlt
xchg
dec
cmc
fcmovnbe
sbb
mull
mov
lret
pop
push
dec
nop
jle
in
movsl
lds
add
inc
sbbb
testb
pop
inc
mov
popf
xor
ret
push
or
xchg
mov
mov
mov
mov
inc
test
xor
pop
imulb
shr
pop
push
dec
sbb
dec
fidivs
push
pop
dec
xor
mov
das
mov
je
mov
frstor
mov
and
mov
test
xchg
sbb
loopne
jg
and
ror
dec
and
mov
fadds
mov
outsl
shll
sub
cmp
cli
sbb
pushl
lret
mov
mov
inc
jno
push
sarl
andps
sbb
and
icebp
xor
adc
shr
cmpsl
mov
sub
lcall
gs
and
and
mov
les
into
fs
int3
ficoms
and
and
mov
popa
insb
rcl
arpl
adc
loop
and
or
mov
lcall
repz
loopne
imul
add
dec
cwtl
cmp
ljmp
outsl
insl
adc
icebp
fimull
std
push
mov
rcrl
or
pop
stos
cmp
clc
out
mov
mov
push
aad
out
lret
or
int
aas
pop
loope
cmpsb
lock
clc
cmp
pushf
push
xor
mov
dec
or
test
xor
ret
insb
pop
push
xor
mov
jne
std
mov
mov
cmc
cs
mov
add
sbb
stos
mov
push
xchg
and
push
push
fs
pop
sti
adc
cmc
xchg
ss
mov
fisubrs
lcall
jo
and
notb
cltd
xchg
shrl
dec
mov
hlt
ss
nop
add
pop
outsl
jl
daa
nop
pusha
adc
sub
jo
inc
aaa
dec
sub
pop
jmp
xor
adc
enter
mov
enter
jl
xlat
mov
push
aas
mov
into
sbb
scas
add
test
push
mov
xor
jecxz
insb
mov
mov
pop
push
pop
nop
cli
pop
cli
adc
xchg
andb
aad
das
ret
dec
fldcw
pusha
negl
lret
ja
ret
xchg
xor
imull
lret
test
popa
inc
mov
jno
adc
mov
les
hlt
repnz
int
sbb
fnstenv
xchg
push
adc
push
xlat
lods
fidivrl
push
cmpsb
xchg
mov
das
leave
push
test
sahf
gs
push
dec
push
sbb
mov
incb
pop
inc
or
dec
mov
mov
loope
addr16
mov
popa
out
je
xor
stos
dec
shrb
lret
icebp
das
inc
or
movsb
xchg
jbe
jb
gs
test
aad
shll
test
push
repz
data16
and
pcmpgtw
pushf
sub
rolb
jl
cwtl
jae
pop
insb
dec
lahf
sub
scas
das
outsl
sbb
mov
outsl
mov
test
add
add
inc
test
shr
scas
loopne
fldenv
ret
sub
mov
adc
lods
jo
mov
add
sbb
mov
inc
pop
jae
inc
inc
xor
rorb
mov
scas
lods
push
fmul
mov
xor
inc
dec
sbb
std
mov
xchg
sub
in
jbe
inc
dec
cmp
aas
sub
leave
add
shll
inc
aam
popf
leave
mov
jnp
in
fadds
mov
enter
xchg
add
inc
into
mov
inc
repz
rcl
lcall
push
ret
xchg
popa
push
cmp
js
mov
cmp
cmpsb
cltd
mov
leave
add
bound
mov
enter
sbb
jle
xchg
insb
sub
mov
loope
or
or
fcoml
mov
ret
dec
jl
push
push
mov
or
and
adc
test
jae
pop
dec
mov
arpl
add
mov
pushf
pop
int
popf
xor
pop
inc
aas
mov
frstor
ret
ret
or
jge
mov
mov
jecxz
stos
jne
cs
stos
cmp
push
or
repz
push
dec
sbb
push
mov
stc
mov
clc
sub
movsl
outsb
pop
lcall
addr16
push
jno
or
decl
fadd
cltd
lds
and
bnd
sbb
in
ds
jg
mov
xchg
mov
jnp
imul
ja
call
xlat
aaa
sbb
cmp
xchg
and
outsl
jge
stos
sub
ret
push
out
push
movsl
fwait
das
jbe
stos
insl
pop
push
lds
pusha
je
aaa
or
sbb
inc
leave
enter
adc
cmp
imul
dec
xchg
andl
fsts
cmc
movsb
int3
mov
mov
jae
mov
out
adc
xor
mov
test
insl
xchg
mov
lods
xchg
jb
fwait
rol
push
movsb
jg
jp
and
fwait
pop
testl
push
iret
lret
stos
orb
mov
inc
mov
push
cmpsb
or
inc
icebp
jmp
xorb
or
sahf
xor
pop
sub
cmp
sbbb
add
rorb
jo
ret
mov
or
fcomps
or
xor
push
xor
mov
sub
out
fwait
in
lret
in
aaa
mov
push
pushf
fldcw
shl
mov
mov
add
sbb
lods
jge
dec
xor
fnclex
repnz
pop
or
mov
xchg
inc
fcoml
push
outsl
sub
adc
insb
mov
mov
test
push
or
xchg
mov
sbb
jecxz
into
inc
jmp
mov
daa
pop
stos
in
fs
pop
push
mov
mov
mov
inc
movsb
gs
jbe
insl
jbe
dec
cld
lds
cmp
dec
test
dec
in
lret
cwtl
mov
push
fisttpl
pop
ja
je
cmp
shrd
mov
lea
xor
inc
or
xchg
push
int
jae
adc
sbb
mov
add
repz
cli
sub
inc
push
cli
enter
pop
jl
mov
and
hlt
cmp
cmpsl
mov
gs
lcall
xchg
mov
jns
mov
and
jg
insb
out
mov
pop
add
dec
outsl
sti
add
adc
jne
mov
cltd
fiaddl
mov
adc
mov
fildl
and
cld
jmp
fs
xchg
push
push
lods
add
xor
mov
scas
imul
pusha
ljmp
mov
je
mov
add
int
mov
test
jecxz
nop
and
and
add
xchg
mov
add
inc
mov
fcmovu
mov
cmp
cmp
pop
out
jmp
ret
imul
ljmp
push
push
addr16
dec
fprem1
mov
jle
inc
push
mov
andb
mov
dec
sbb
nop
je
repz
sub
jp
xchg
sub
jnp
in
enter
or
jns
js
xchg
pushf
pop
jle
mov
test
fisubs
mov
nop
icebp
sub
or
add
loop
sarb
xorl
mov
xchg
mov
and
outsl
jge
test
out
call
add
xchg
inc
push
icebp
addr16
mov
ljmp
mov
fsubr
ret
inc
push
aam
lods
push
cmp
sbb
scas
jo
xchg
jae
adc
fnstenv
jecxz
loopne
hlt
aas
sbb
inc
incl
test
jnp
sbb
sub
sbb
mov
and
mov
sti
test
and
sub
mov
ds
push
aaa
pushf
pop
xchg
cmp
jnp
push
pop
out
jge
xchg
lcall
xlat
xlat
mov
sub
or
xlat
and
ds
dec
insl
stos
lock
fidivl
xchg
ja
and
packsswb
stos
mov
adc
adc
stos
mov
rcl
pop
and
sti
pop
jo
mov
mov
sbb
lds
idivb
jmp
int3
dec
js
push
sub
outsl
push
pop
cmp
mov
cmp
xchg
sbb
mov
cmpsl
imul
xlat
ret
pop
sbb
push
mov
daa
in
jnp
mov
nop
push
mov
mov
push
push
cs
dec
mov
aad
ficompl
mov
popa
mov
push
clc
xor
imul
jl
cmp
out
icebp
ljmp
pop
int
popa
push
adc
addl
lods
arpl
mov
or
enter
pop
or
pop
sbb
mov
mov
xchg
loop
mov
subl
fistpl
xchg
lcall
mov
ror
shrb
xor
jp
fwait
movsl
call
fdivr
sub
insb
dec
or
ret
mov
and
mov
fstpt
daa
repnz
add
fbstp
mov
push
leave
aad
pop
out
jnp
pop
imull
xchg
call
enter
out
inc
cmpsl
mov
mov
imul
in
and
cltd
jp
or
push
cltd
adc
pop
fdivrs
stc
imul
cmp
cmc
mov
int
out
mov
fstl
push
cld
push
and
pusha
stos
out
lods
lods
inc
xchg
mov
push
addr16
dec
mov
cmp
pop
sbb
cmp
fld1
sbb
inc
pop
xchg
aaa
mov
in
adc
pop
jl
jb
xchg
xor
into
ds
sbb
inc
mov
pop
inc
sbb
cmp
lahf
sbb
ss
andb
dec
clc
stc
push
loopne
shll
xchg
in
testb
movsl
sbb
test
cmp
jb
push
jbe
ja
lret
nop
pop
push
sbb
add
push
or
xlat
inc
adc
int
lret
cmp
inc
js
mov
mov
add
popa
jmp
cmc
and
cmp
add
filds
mov
pop
mov
pusha
inc
mov
aas
int3
in
cmp
adc
pop
out
test
and
mov
or
push
xorb
test
in
cmp
xchg
fwait
cltd
sub
lea
jle
xor
into
rclb
stos
pop
fs
or
lret
int
addr16
or
cltd
mov
stc
mov
sbb
mov
in
lods
sub
sbb
lock
mulb
sub
mov
jnp
test
sub
in
orl
repz
or
in
es
mov
and
or
xor
and
or
cmc
mov
clc
sbb
or
icebp
adc
shlb
cs
in
sub
lcall
sub
inc
jne
or
mov
jo
mov
jns
pop
stc
ficompl
sub
sbb
xor
fiaddl
ljmp
lods
icebp
add
xor
mov
cmp
push
jne
jmp
rcrb
add
pop
jb
xor
sub
outsb
cmc
hlt
sub
sbb
and
out
dec
jp
add
jnp
pop
and
cmp
and
mov
jnp
in
or
pushl
jl
std
icebp
pop
popf
hlt
xlat
ljmp
lea
push
lcall
outsl
into
mov
iret
dec
jecxz
inc
mov
jecxz
xchg
ficomps
lock
mov
jl
mov
vdivpd
loopne
cmpsl
or
sbb
adc
cmp
jge
and
xor
pop
jmp
xchg
ja
pop
lcall
je
ljmp
adc
xor
in
les
into
cmpsl
cmc
pop
push
shr
popf
scas
aaa
inc
pop
ret
hlt
sub
pop
stos
int
fstp
clc
and
pop
imul
xorl
orb
sbb
stc
sub
jmp
mov
fwait
xchg
into
dec
fnsave
mov
jno
jl
or
in
dec
ja
insb
pop
sub
movsb
aas
mov
jecxz
sub
or
fcom
cmp
and
int
xor
jo
jbe
es
add
rolb
mov
jg
dec
outsb
xchg
xor
or
adc
in
cld
in
lods
xlat
cmp
and
dec
dec
popa
insb
mov
inc
jb
jnp
movsb
xor
bndstx
xor
dec
je
and
fmull
in
in
push
movsb
mov
or
pop
mov
push
pop
in
gs
es
jp
add
insl
push
xchg
mov
add
std
pusha
iret
cmpsb
sbb
pusha
loopne
push
jno
jge
lods
movsl
xlat
dec
cmp
adc
ret
or
or
adc
adc
add
lret
aad
xchg
daa
sbb
xchg
pusha
fmul
adc
mov
les
jbe
outsl
cli
repz
add
lret
mov
cmp
push
push
aam
pop
xor
std
popa
mov
test
inc
cmp
push
pop
das
or
xchg
mov
adc
sub
cmpsl
ljmp
cwtl
in
dec
ljmp
jnp
lock
pop
in
call
sahf
outsb
mov
imul
inc
adc
sar
repz
mov
lods
movsl
adc
hlt
add
sbb
sbb
cmp
jns
es
cmp
adc
add
push
rclb
jns
bound
aas
adc
sbb
or
inc
loope
sub
subb
lea
cmpsl
rorb
add
ret
loop
arpl
lock
sub
aam
imul
sbb
int3
xchg
scas
mov
or
push
push
stc
outsl
pop
inc
fidivl
sub
cmp
sbb
mov
pop
dec
fadds
cmpb
sahf
xor
mov
mov
sbb
jb
out
aas
movsl
das
in
pop
test
rcrl
mov
push
xor
sub
sarb
xchg
lods
jo
test
add
js
adc
std
movsl
jne
ret
pushf
mov
dec
xchg
stos
dec
mov
and
xor
ds
mov
jb
sub
sbb
dec
jno
addr16
scas
sbb
stos
mov
push
jns
mov
insl
popa
push
and
mov
sti
xor
cli
push
mov
stc
je
test
inc
and
pop
dec
lahf
fcoml
push
xlat
adc
cmp
pop
lret
xchg
and
and
and
xor
pop
ljmp
mov
std
pushf
mov
push
pop
dec
and
or
mov
add
push
movsl
jbe
cli
loopne
movsl
lods
add
sub
mov
push
adc
push
stc
cmp
add
fdivrs
lea
stc
decb
mov
fadds
in
cmp
in
ss
leave
call
mov
jmp
test
jl
leave
roll
idivb
xor
inc
imul
mov
sbb
jb
mov
or
mov
cmp
mov
xor
jno
movsl
inc
insb
pop
sub
mov
icebp
addb
jns
xchg
adc
rorw
pusha
cmc
jne
lods
mov
xchg
les
inc
sbb
daa
push
les
movsb
shl
jmp
mov
mul
insl
mov
push
mov
dec
dec
outsb
push
rcrb
outsl
fldt
addr16
bsf
les
dec
shl
jmp
pop
jne
aad
jnp
pushf
pop
and
inc
test
mov
lea
jg
adc
xchg
or
enter
mov
roll
hlt
pushf
jns
loopne
dec
repz
pop
pop
jmp
adcl
movb
jno
add
dec
or
test
movsb
adc
jo
sub
cmp
jmp
lea
cwtl
out
cmp
jge
lods
jle
xchg
inc
push
insl
ficoml
dec
ds
lods
rcrl
ret
mov
inc
ss
divl
gs
xchg
sub
in
push
in
or
adc
inc
icebp
aam
xor
push
nop
cmp
or
test
inc
or
mov
add
movsl
jle
repz
pop
mov
push
xchg
incl
push
out
and
out
sbb
add
andl
xchg
stos
lcall
out
stos
imul
cmp
xlat
jle
lds
cmpsl
mov
mov
sub
fsubrs
xchg
mov
push
lcall
icebp
movsb
pop
lods
and
mov
jl
insl
adc
bound
or
leave
or
jo
lock
adc
or
ja
dec
cmp
push
mov
xchg
sub
aad
and
fidivrs
mov
sub
and
add
in
fwait
or
jae
out
or
lods
jne
int
pop
xor
shlb
cmp
jnp
xchg
ljmp
mov
cmp
adcb
sub
fwait
pop
stc
fnop
jle
pop
dec
push
fdivrl
aas
mov
sub
out
mov
xor
ljmp
mov
mov
cs
mov
mov
jg
push
sbbb
sub
cld
jno
insb
cmpsb
imul
mov
inc
sub
fwait
mov
mov
inc
pop
add
push
xor
stos
dec
sub
das
jno
call
jl
add
or
scas
mov
pop
adcl
push
insb
and
sub
add
sub
jmp
je
movsb
lock
fsubs
dec
cmp
add
je
mov
shll
loopne
fldt
add
adcl
pop
jp
int3
dec
mov
cli
iret
add
repnz
lods
test
pop
test
addb
mov
dec
inc
fisubrs
mov
push
jne
and
mov
int
test
jno
and
mov
orl
or
pop
mov
push
adc
xor
xlat
es
xor
scas
les
push
dec
xchg
cwtl
hlt
cmpsb
mov
icebp
sub
shll
sbb
test
enter
stc
jecxz
cwtl
or
insl
sub
adc
ret
incb
add
mov
sbb
test
mov
mov
mov
dec
mov
loope
in
pop
fistps
mov
xchg
jecxz
bound
mov
cmc
loope
fdivl
test
xor
xchg
or
pop
and
adc
dec
repnz
loop
out
inc
push
jno
pop
lods
adc
add
sub
aas
jle
xchg
push
cltd
movsb
js
ja
sbb
movd
push
movsl
pop
leave
mov
or
inc
mov
cmpsl
mov
jo
sbb
insl
cmp
daa
or
dec
mov
sub
outsl
pusha
ret
or
inc
popf
ror
push
cmp
test
test
push
push
jge
push
add
adc
insl
adc
xchg
jmp
mov
daa
xchg
notl
cmp
pusha
add
jns
push
add
and
es
imul
fidivs
mov
sbb
rcrb
stos
jno
and
add
ljmp
lods
jle
xor
sbb
push
into
add
push
push
xor
hlt
mov
lahf
repz
sub
xchg
cli
stos
mov
or
ss
test
cmp
scas
cmc
xor
sti
call
adc
xchg
jne
or
mov
pop
xchg
lds
sar
sub
fsubrs
cmp
push
mov
adc
loope
jecxz
or
jl
aad
add
outsb
add
mov
mov
gs
sub
add
xorl
rcll
xchg
inc
ss
ret
subl
notb
mov
js
loopne
jp
mov
push
jmp
xchg
in
ret
inc
or
rolb
shl
sbb
sub
dec
stos
jl
dec
repz
mov
sbb
pushf
lcall
xchg
andb
cltd
cld
cld
or
mov
pop
pop
push
out
jno
add
mov
nop
push
notb
fsin
and
cmc
lcall
test
and
mov
rcrb
jmp
xchg
pop
xchg
xchg
adc
mov
sub
jl
call
mov
xchg
push
es
jg
pop
push
add
scas
xor
xchg
pusha
outsb
xchg
ds
jecxz
jg
rorb
shrl
dec
sti
sahf
mov
sbb
sub
add
shlb
cli
fsub
mov
nop
fists
sbb
lret
cmp
jns
jno
xchg
pop
aam
in
jo
inc
mov
add
into
sahf
popa
icebp
xor
add
popf
movsb
jmp
cmc
idivb
ror
mov
pcmpgtw
push
repz
imul
setle
icebp
iret
aad
shr
xlat
adc
mov
incb
dec
cltd
cmp
out
pop
mov
ret
pop
shrl
fcompl
shrl
mov
fadds
test
rolb
mov
add
cmp
cltd
lea
dec
jecxz
jmp
stc
ljmp
and
jno
dec
add
xorb
fcoms
idivl
vpaddusb
sbb
mov
ljmp
iret
push
stc
shll
pop
mov
mov
ret
lahf
mov
loop
aad
out
pop
pop
push
ret
js
jl
mov
shrl
add
push
rcr
call
ja
test
mov
mov
ficomps
int
movsb
pop
mov
test
mov
cmp
pop
mov
out
mov
dec
repnz
in
dec
sti
jae
in
in
cwtl
xor
push
shr
inc
dec
xchg
xor
jns
adc
add
pusha
mov
cmp
or
fsts
jl
mov
leave
aaa
iret
mov
int
incb
adc
or
push
andb
rcrb
mov
sahf
inc
scas
jge
gs
cmpsl
mov
loopne
andl
mov
jne
int
or
jb
ret
out
lret
push
inc
clc
inc
mov
movsb
push
into
lea
add
movsl
add
outsl
pushf
mov
stos
lret
inc
xchg
divb
xchg
mov
clc
cmp
or
push
lahf
adc
lcall
push
ret
inc
rcl
std
mov
fsubp
pop
mov
xchg
add
repz
cmp
sbb
jae
clc
in
mov
addr16
mov
adc
xchg
sub
push
pop
push
je
mov
xchg
push
outsb
mov
fisttpl
rclb
xchg
pop
cmp
into
jmp
sbb
jmp
scas
xor
notl
cmpsl
inc
ret
cmovo
inc
out
push
xor
mov
rorl
xchg
dec
push
dec
push
movsl
mov
or
adc
push
mov
stos
jnp
sbb
xchg
mov
test
sub
sbb
and
lock
rclb
cmp
popf
adc
adc
mov
adc
jno
fcmovnb
es
cld
dec
sub
push
sbb
icebp
mov
inc
jbe,pn
stc
mov
push
aad
pop
or
jae
std
or
xchg
or
mov
rol
sub
adc
pop
lods
mov
sub
insb
cli
mov
mov
mov
dec
movsb
sahf
xchg
out
bound
xchg
adc
xchg
insb
out
out
lcall
mov
xchg
cmp
call
out
fucomp
ficoms
or
dec
xor
pop
rorl
inc
push
pop
cmp
insl
cmpsl
sbb
ljmp
jb
arpl
xlat
je
in
jnp
xor
pop
dec
movsb
push
loop
cmp
push
std
xchg
mov
xor
adc
loop
push
fisubs
xor
inc
fnstcw
sarl
sub
cwtl
movsl
mov
cmp
bound
aam
sbb
enter
sbb
test
hlt
test
cs
ljmp
xchg
ret
mov
js
jno
lcall
xor
nop
pop
pop
fucomi
xchg
dec
int3
popf
js
add
inc
mov
adc
jnp
mov
popa
xchg
xchg
cs
and
rol
push
mov
stc
adc
movb
dec
negl
add
push
imul
xchg
inc
cmp
mov
mov
sti
scas
cmp
imul
xchg
lds
ret
mov
mov
lret
pop
jle
adc
and
or
shr
xor
adc
pop
mov
arpl
mov
int3
dec
out
mov
sbb
push
adc
ret
and
fdiv
shr
or
mov
push
loope
lahf
gs
and
and
mov
sti
ret
inc
inc
add
insl
in
enter
or
mov
jo
test
outsl
cmp
or
scas
mov
jbe
sahf
fwait
pop
daa
sbb
daa
shll
popl
and
mov
xchg
inc
sub
mov
stc
dec
rorb
xlat
sub
rcll
into
rcrl
xchg
loope
int3
jns,pt
sbb
test
sbbl
rorl
out
jecxz
fisttpll
mov
add
fcomps
xor
ljmp
mov
mov
addr16
xchg
test
inc
loope
pushf
sub
push
jl
imul
out
sub
lret
or
sbb
mov
loopne
ret
sub
fldcw
pop
xchg
xchg
testb
loope
imul
leave
push
and
icebp
fsubs
jns
push
and
cmp
push
or
data16
or
push
adc
cmpsb
sti
out
adc
push
ds
aam
std
sub
inc
jbe
dec
push
push
mov
inc
clc
or
cmp
ret
enter
mov
jg
sub
loopne
lret
aas
popf
adcl
adc
mov
xchg
mov
jmp
mov
add
or
add
std
inc
testb
jbe
popa
aam
test
push
and
imul
inc
pop
cwtl
inc
cmpsb
arpl
push
add
popf
cmp
jbe
sbb
mov
dec
daa
sbb
cli
imull
lret
mov
cltd
mov
cld
xchg
shrb
fwait
movsl
call
or
add
push
sub
sub
mov
mov
cmpl
stos
or
ret
into
test
dec
les
mov
xor
repnz
fmul
aas
xchg
lods
aad
int
imul
or
movsb
or
xor
movl
repz
in
mov
inc
jns
inc
inc
call
stos
pop
aam
aad
push
lcall
add
loope
loope
jno
pop
sub
sub
ret
mov
aas
mov
jae
add
je
lock
mov
hlt
jmp
stos
jbe
shl
push
je
pop
in
xchg
cmp
mov
addl
leave
std
sub
pop
mov
and
stc
inc
sbb
mov
inc
arpl
sub
add
jns
and
gs
mov
insl
in
call
pop
roll
jp
rclb
sti
gs
jge
xor
mov
insl
sbb
sar
dec
mull
jmp
std
dec
imul
dec
xchg
sub
add
incl
xor
daa
daa
or
jno
cmp
jae
xor
in
mov
fmulp
xchg
mov
mov
mov
xchg
js
scas
xchg
test
push
add
divb
stos
mov
orl
inc
nop
insb
dec
add
mov
jns
dec
sub
mov
push
movsb
xchg
test
out
sub
add
push
push
dec
fsts
sub
pop
and
in
das
jnp
mov
jnp
jle
popf
push
in
rorb
mov
mov
inc
std
jl
stc
push
xor
add
aad
dec
inc
lock
xorl
cmc
fdivrs
and
add
cmp
xchg
lods
aas
push
xchg
add
ja
aam
jns
divb
xchg
sub
ljmp
or
mov
jle
add
lods
and
adc
mov
sub
stos
out
pop
shl
rolb
and
scas
adc
sbb
roll
lods
lret
arpl
add
in
and
out
mov
cmpsl
mov
or
repnz
mov
mov
lods
inc
cmp
pop
cld
xchg
imul
fsubrl
dec
sub
inc
subb
sti
mov
aad
stos
les
xchg
cli
xchg
mov
popf
xlat
xchg
jle
mov
add
xchg
mov
mov
in
je
mov
mov
push
inc
stc
rcrl
dec
jge
dec
into
shrb
and
sbb
xchg
es
jg
insb
sarb
fnstenv
js
repz
jp
sarl
add
imul
adc
loopne
mov
fs
inc
ss
ds
fs
inc
outsl
inc
xchg
jmp
and
mov
insl
jmp
ds
or
loope
adc
jg
fwait
leave
mov
lcall
pop
movsl
roll
insb
cli
clc
push
cmpsb
fidivs
pop
mov
shl
mov
mov
jnp
xchg
jo
movsl
iret
jg
lcall
fisubl
xchg
inc
in
adcb
inc
mov
adc
inc
xchg
adcb
inc
out
xchg
fistps
cld
jb
stos
adc
sbb
cmp
mov
hlt
aaa
add
movsl
ficoml
test
and
fistpll
lods
or
sbbb
ljmp
jp
arpl
out
mov
repz
insb
cli
xor
repnz
jbe
mov
xchg
inc
pop
inc
repnz
xchg
jns
xchg
mov
mov
insb
call
pop
iret
repz
out
mov
xchg
aad
xor
jns
jns
ds
arpl
add
mov
xlat
push
inc
loop
cmp
stos
cmp
xchg
std
jp
jne
leave
mov
jnp
and
mov
mov
sub
arpl
aad
mov
out
pop
mov
adc
arpl
and
out
shl
mov
in
cwtl
outsl
repz
adc
pop
das
aas
mov
out
and
rolb
jne
je
sub
sub
js
test
adc
or
fisttpl
add
mov
and
jb
addr16
inc
imull
movsb
mov
add
ja
leave
nop
jmp
inc
test
mov
test
add
jnp
inc
or
mov
xor
fs
inc
test
stc
dec
push
in
and
incl
cmp
push
fldl
lret
xor
pop
jp
popa
push
daa
psrad
rcr
jg
cli
pop
pop
subps
or
pop
andb
mov
push
push
mov
jbe
fwait
in
xchg
jp,pn
cld
in
shlb
nop
repz
ss
ret
gs
pop
adc
arpl
fcompl
add
pop
mov
rorl
push
xor
mov
mov
lods
pop
mov
scas
fistpll
lds
lcall
or
sbb
xor
call
xchg
pusha
bound
push
bound
jg
pop
cmp
or
xchg
or
cld
dec
sbb
pop
and
lods
out
movsl
xchg
xchg
adc
arpl
xchg
cmp
adc
and
xchg
repnz
or
sub
aad
bound
xchg
ficoml
pop
sahf
loopne
nop
jae
adc
sti
jp
inc
jne
cmc
cs
call
scas
sbb
dec
mov
pop
dec
fcoms
or
sbb
mov
into
push
ljmp
dec
cmp
inc
adc
vmaxpd
or
dec
pop
ljmp
fidivl
dec
scas
jo
cmp
pusha
xor
dec
add
cmp
mov
inc
pop
mov
adc
aad
inc
add
mov
jnp
scas
fldenv
ss
imul
scas
shr
fdivs
out
stos
xchg
inc
xchg
cmp
mov
cld
dec
add
sub
pop
pop
xor
nop
pusha
add
inc
insl
inc
pusha
cmp
mov
cmpsl
orb
push
bound
testl
ja
and
and
add
inc
jns
lret
aam
mov
cmpsb
mov
sub
or
cmp
ja
mov
ljmp
insl
jg
push
xor
cwtl
imulb
xchg
call
idivb
sbb
loope
fbld
neg
cmp
or
out
or
out
xor
xor
sub
cmp
sti
leave
mov
test
mov
fwait
cmp
test
jno
jbe
cmp
fbstp
scas
mov
xor
dec
xchg
out
inc
divb
dec
and
push
les
sub
popa
js
xor
jecxz
adc
xchg
mov
mov
stos
ljmp
xchg
jp
mov
je
push
mull
push
pusha
sbb
cmp
les
inc
adc
sub
subl
sub
std
sbbl
xor
jb
mov
pop
hlt
and
push
jle
mov
test
sub
xchg
dec
pop
out
push
pop
jle
add
sub
mov
fimuls
sub
cs
mov
loopne
add
lds
imul
mov
adc
jg
add
hlt
jb
lret
mov
pop
xor
xlat
rdmsr
xor
out
in
outsb
mov
and
jno
mov
add
sub
sbb
lret
fisubrs
jo
add
mov
sub
test
push
mov
pop
sub
in
push
xor
mov
stc
imull
sub
lea
movsl
ficoml
popf
push
dec
call
sti
xor
dec
stos
lock
mov
loopne
fbstp
and
hlt
lret
xor
aad
pop
aaa
mov
dec
jmp
and
push
filds
bound
orl
sub
sub
addr16
es
neg
testb
jbe
mov
add
es
shll
sub
sahf
lahf
mov
bound
cli
pop
xchg
fwait
sub
leave
nop
push
pushf
mov
in
cmp
mov
les
into
dec
adc
jo
jo
lods
shll
out
push
sti
mov
pop
xor
ret
fildl
xor
mov
cmp
adc
aaa
repz
insb
sub
hlt
push
mov
mov
in
push
and
pop
dec
stos
mov
das
lahf
cmp
or
jl
xchg
pop
and
sbb
es
es
int3
cld
cmc
and
out
jl
aam
lock
mov
jle
sub
lods
sub
dec
test
mov
repz
pop
icebp
fbstp
mov
pop
and
cmp
cwtl
popa
in
cmp
cmp
fs
adc
out
dec
arpl
loope
aad
xor
mov
adcl
cmp
call
addr16
mov
cmp
ljmp
adc
mov
xor
mov
lods
aad
xchg
cmp
jnp
ret
jae
inc
bnd
mov
outsl
xchg
imul
push
push
inc
scas
lds
mov
in
mov
jge
fisubl
mov
mov
stos
pop
pop
ds
xor
scas
pusha
xor
mov
dec
push
mov
jns
pop
mov
mov
sahf
mov
jle
or
popf
mov
push
test
mov
sti
push
sbb
testl
cmp
mov
xlat
pushf
mov
pop
adc
dec
in
add
sub
fwait
pusha
add
lcall
shlb
push
cmp
repnz
stos
and
fcomps
movsl
pop
mov
jo
inc
divb
gs
inc
pop
aad
gs
sbb
decl
mov
xor
rorl
sbb
out
lcall
andb
push
add
lahf
and
or
xor
xor
nop
mov
outsl
or
mov
xchg
jbe
sbb
aas
popa
icebp
push
outsl
adcl
jmp
aaa
ja
sub
stos
xchg
repnz
in
imul
mov
mov
cmp
clc
in
dec
ja
scas
dec
adc
lods
aam
dec
mov
push
and
jnp
cmp
jge
or
cs
fs
sub
lcall
sti
into
dec
scas
int3
mov
inc
mov
push
or
fcmovne
push
sub
mov
sbb
push
movb
mov
mov
mov
loopne
lock
sbb
iret
dec
lret
ljmp
pop
sub
or
sbb
jae
aam
popf
adc
xor
mov
push
fs
lods
outsl
or
sbb
in
jg
inc
add
movsb
loop
and
fisubs
mov
loop
sbb
jecxz
leave
dec
or
push
dec
sbb
stos
jle
stos
mov
fildl
sbb
in
cmpsb
adc
mov
int3
orl
shll
add
aaa
add
insb
sti
out
xchg
sbb
jne
lret
fwait
sti
ss
repnz
out
xchg
icebp
mov
xorb
ficoml
adc
mov
ror
adc
jle
cmp
adc
cmp
in
adc
mov
lahf
and
lock
add
mov
out
loope
add
fstps
adc
insb
leave
push
push
repz
sbb
rclb
insb
dec
enter
mov
inc
inc
int
mov
mov
add
push
es
cmp
cmpsl
mov
je
data16
cmp
xchg
lods
xor
aad
in
push
mov
and
and
mov
push
andnps
mov
sqrtps
es
inc
in
xchg
and
inc
mov
mov
pop
xchg
xchg
mov
fwait
or
int
fdiv
unpckhps
xor
lock
mov
inc
aaa
imulb
test
adc
mov
adc
pop
std
xor
sub
cmp
push
push
loopne
movsb
mov
sar
mov
stc
decb
movsb
repz
popa
ret
and
mov
js
push
shrl
pop
mov
add
xchg
fisubl
push
cs
push
loopne
sbb
mov
imul
mov
cwtl
test
mov
into
or
mov
ljmp
ja
xchg
es
in
aas
pop
xor
mov
push
ficompl
jns
mov
xor
sub
fisubl
pop
push
daa
es
psrlq
cmp
inc
mov
cli
push
lock
push
or
jne
push
repz
add
rcl
and
js
pop
mov
pusha
push
jle
in
push
pop
addr16
lds
loop
imul
ds
insl
jmp
shll
mov
sahf
pop
sar
xchg
mov
jno
dec
or
jne
icebp
or
test
fs
sbb
rorb
xchg
jle
add
adc
test
and
push
push
jb
sub
or
sub
add
mov
jmp
xchg
dec
int
shll
insb
jae
jbe
loopne
jmp
cwtl
icebp
sahf
lret
sbb
inc
xor
pop
fcompl
sub
adc
ds
xchg
jmp
sub
imul
ja
push
xchg
mov
fs
pop
lods
dec
adc
mov
pop
adc
xor
xchg
rcr
repnz
pop
mov
sbb
imulb
clc
sub
aad
lods
call
xor
mov
mov
outsb
adc
jecxz
pop
cmp
jae
xchg
arpl
repnz
mov
sub
push
jne
jl,pt
pop
insb
cmp
pop
sbb
ds
xchg
outsl
fiaddl
ficompl
push
insl
loopne
fstpl
xchg
cld
jno
sbb
repz
stos
addr16
movl
xor
inc
cmp
sbb
sub
fsubp
pop
rcl
dec
int3
push
aaa
or
mov
test
fidivs
inc
push
pushf
cmp
jno
xchg
test
shll
out
call
je
pushf
xor
fs
or
xchg
push
and
test
std
mov
mov
jg
aas
inc
push
add
in
test
gs
je
cmp
sti
dec
pop
and
mov
add
push
mov
jp
xor
dec
jno
or
mov
xor
or
add
lods
stc
jp
sahf
jg
pop
scas
pop
rcl
out
xor
outsl
jmp
jo
mov
pushf
adc
movsl
jl
loope
jne
adc
jo
mov
pop
dec
fs
lahf
scas
jecxz
dec
jmp
imul
sub
int
mov
mov
into
inc
out
mov
xchg
je
mov
ffree
mov
and
outsb
fnstcw
je
dec
ss
dec
hlt
sub
pop
fistpl
jge
arpl
jnp
or
cmp
mov
adc
hlt
push
icebp
inc
jns
lret
pop
daa
mov
sbb
call
in
add
clc
pop
lods
test
jb
shl
shlb
dec
dec
into
in
pop
int3
mov
ss
xchg
cmpsb
xchg
pop
dec
adc
mov
xchg
dec
aam
push
adc
sbb
fwait
add
fs
and
jp
jnp
flds
jo
aaa
mov
les
mov
pop
addr16
data16
pop
scas
sbb
rcr
aaa
and
aaa
xor
loopne
aam
xchg
js
rorb
push
into
cmpsb
mov
je
jae
pop
rolb
xor
add
cwtl
inc
pop
mov
sub
das
mov
jle
cmp
mov
call
or
sbb
dec
lea
xchg
aas
repz
mov
icebp
das
sub
push
pop
and
fsts
mov
xor
mov
in
add
shlb
test
lods
movb
int
iret
loopne
jl
outsb
leave
cmp
push
into
pop
outsb
inc
and
xor
mov
pop
mov
pop
das
lods
add
in
jbe
xchg
mov
cld
dec
lock
xchg
mov
mov
or
or
mov
jno
lahf
jb
jle
adc
sub
push
enter
push
mov
mov
dec
lds
inc
jge
stc
enter
insl
int3
push
sbb
pop
sub
mov
sti
xchg
sti
ds
scas
pop
std
xchg
scas
jl
pop
rolb
mov
test
out
and
jp
push
scas
mov
jbe
ljmp
negb
lods
andb
into
rorl
sub
lcall
or
ss
rolb
jmp
inc
sbb
xchg
movsb
sarb
cmp
clc
in
cld
xchg
sbb
in
inc
adc
loop
insb
cmc
fistps
jnp
inc
push
adc
jae
sbb
pop
jl
scas
call
xor
add
pop
sbb
mov
rorl
insl
mov
mov
add
cmp
xor
pop
push
jne
xchg
in
jl
in
aas
dec
jb
dec
insl
out
aaa
xchg
rorb
or
adc
shl
dec
mov
ret
mov
dec
inc
in
xor
adc
sahf
adc
das
dec
or
dec
cmp
jmp
into
or
push
xchg
fiaddl
popf
filds
in
cmp
ja
mov
nop
jge
fisubs
lock
popa
push
loop
test
cmp
or
cltd
repz
xchg
mov
dec
sub
cmp
movsb
out
xrelease
jno
ljmp
push
pop
push
pop
inc
jecxz
jmp
subl
je
pop
pop
outsb
push
jns
ret
les
ljmp
cmpsb
pop
iret
call
shlb
and
inc
stos
pusha
scas
cwtl
inc
psrlw
mov
js
rclb
adc
lret
sahf
repz
push
push
int3
jno
aas
ret
push
mov
hlt
pushf
lods
rclb
mov
insb
push
and
mov
sti
aas
in
insb
jp
jle
jb
out
aas
pop
push
pop
mov
jl
add
and
int3
cs
inc
data16
xchg
xor
scas
jge
into
pop
push
jne
cmpsb
mov
mov
pop
cmp
push
sub
push
push
rorl
js
loope
push
xor
adc
inc
xchg
shll
jae
imul
shl
jns
lods
cmp
out
cmp
push
aam
inc
rol
sbb
sahf
leave
xchg
fs
sub
mov
enter
mov
sbb
lahf
inc
or
cmpb
or
pop
nop
mov
dec
test
loop
fsubrl
pop
xorl
jg
sahf
and
jl
daa
arpl
in
scas
jnp
mov
inc
push
ret
mov
xor
xor
test
call
mov
ss
mov
or
mov
inc
dec
bound
dec
repz
pop
inc
adc
repnz
sub
xor
shlb
aaa
testb
xchg
fcompl
jns
sbb
icebp
ret
or
imul
jge
push
arpl
sahf
clc
cmp
es
mov
inc
outsl
leave
ret
daa
push
or
addr16
push
mov
and
pop
sahf
loopne
popa
call
xchg
mov
ss
mov
cmp
pop
push
adc
jl
sub
xor
es
out
sub
ds
ss
push
out
push
out
idivb
cli
push
xor
push
jmp
ficompl
testl
mov
mov
dec
mov
add
jmp
sahf
cmp
mulb
mov
cld
es
sbb
outsl
pop
les
pop
or
in
adc
insb
enter
push
in
cmpsb
push
loop
int3
mov
and
fldt
lahf
mov
cli
gs
sub
imul
mov
sbb
shr
and
dec
ljmp
out
mov
inc
testl
or
outsb
in
adc
lcall
loope
dec
enter
leave
test
inc
in
xchg
mov
pop
xchg
lock
pop
loop
pop
cmovae
stc
sbb
cmp
ljmp
push
mov
repz
fnstenv
and
mov
in
push
sub
dec
mov
shrb
mov
mov
rcrl
push
jae
mov
dec
xchg
jnp
dec
ret
mov
jle
repnz
jo
pusha
cmc
sub
test
repz
sbb
push
dec
fnstcw
inc
fists
push
popa
and
adc
out
std
adc
popa
xlat
mov
daa
leave
lret
inc
ficoml
sub
inc
jbe
jnp
lea
insb
outsl
insl
push
mov
sub
xor
cmpsw
pop
shrb
nop
sbb
outsb
je
xor
mov
jg
pop
cli
fdivr
notl
fdiv
sub
outsb
ja
loopne
pop
imul
sbb
decl
xor
xchg
cmp
inc
push
cmpsl
aad
pushf
mov
sub
popa
mov
jge
or
rcll
icebp
popa
mov
lods
enter
add
xchg
and
das
xlat
scas
jb
push
jns
mov
push
aam
lret
and
jne
jmp
push
add
ret
inc
xchg
les
filds
add
mov
push
in
lods
test
pop
addr16
mov
mov
sub
mov
insl
lahf
mov
stc
mov
jecxz
cltd
push
or
clc
dec
test
pop
negb
sub
pop
jae
xor
out
dec
pop
mov
frstor
pop
ds
push
jecxz
cmpl
sbb
sbb
mov
pop
leave
fwait
daa
scas
sarb
pop
cmp
or
adc
mov
out
imul
jnp
arpl
in
mov
mov
sub
inc
cwtl
push
cmp
adc
scas
xchg
dec
sbb
ficompl
shl
push
sub
sbb
sbbb
jle
mov
xchg
sbb
cmp
jecxz
rcr
sbb
or
popf
pop
cmc
fwait
push
rcl
pop
inc
jmp
enter
push
iret
imul
push
flds
jae
cvtpi2ps
stc
bound
es
pop
gs
pop
dec
push
mov
jnp
or
add
or
pop
adc
divl
pop
ftst
aad
mov
sbb
roll
sub
leave
test
iret
data16
insl
scas
pop
jns
xlat
repnz
jnp
int
jle
scas
fstpl
dec
bound
sub
je
mul
inc
loopne
or
xor
sbb
sbb
das
add
in
fisttpll
jo
stos
pop
mov
cmovno
add
fidivl
test
out
fucomip
sub
mov
xchg
out
loope
dec
fistpll
int3
jle
lds
insl
lahf
mov
les
and
adc
jl
stos
jbe,pn
iret
sahf
add
pop
arpl
adc
popl
mov
jo
cmp
in
mov
rcr
mov
arpl
stc
push
inc
cmp
ds
cwtl
stc
hlt
sub
out
addr16
push
inc
lock
xor
imul
test
icebp
stc
fst
and
stos
ss
cmpsb
aam
adc
scas
arpl
jne
fisubrs
and
scas
jnp
sbb
mov
jecxz
dec
test
sbb
pop
adc
ficoml
mov
inc
lods
in
cltd
sahf
into
icebp
adc
add
int3
ret
scas
push
cwtl
inc
sub
sub
or
xor
pop
adc
adc
mov
in
loope
fisubrl
push
cmpsl
out
lds
fwait
and
je
rclb
test
or
mov
mov
adc
cmp
jl
sbb
jp
sub
mov
lea
push
and
mov
adc
aad
adc
pop
xlat
xor
das
out
sbb
cmp
sbb
xlat
mov
push
pop
icebp
jl
sub
jbe
scas
imulb
cwtl
fs
test
jo
sti
cs
adc
movsb
xchg
incl
aaa
adc
push
stos
cwtl
fnstcw
sbb
int
mov
pop
mov
pop
aas
dec
sbb
les
loope
mov
xor
cmp
mov
mov
push
mov
movsb
ret
mov
sahf
jmp
jle,pn
xor
aaa
push
lods
fists
xor
sub
pop
mov
and
sub
add
out
aaa
push
add
sub
stc
jne
inc
dec
add
jno
push
pushf
js
pop
inc
lret
pop
in
mov
lcall
rcrl
mov
outsl
adc
es
mov
mov
out
sbb
jb
into
sub
dec
int
negl
data16
dec
sarl
jo
xchg
adc
dec
jne
or
xchg
popf
and
dec
jl
imul
ret
test
pop
popa
mov
iret
jmp
and
out
and
lds
aas
push
insl
ljmp
cmp
mov
dec
mov
test
stc
pop
sti
dec
mov
loope
jg
cmp
stos
pop
pop
repz
inc
cmp
xor
push
push
xchg
mov
dec
mov
out
xor
fldcw
and
jmp
lret
scas
pop
adc
xor
jge
and
xor
das
in
ret
andl
pop
sub
call
add
andl
aam
push
jo
insb
jne
jg
xchg
pop
imul
imul
mov
mov
fcmovnbe
leave
or
sub
pusha
jne
fstpt
add
cmp
sbb
pinsrw
sub
mov
adc
adc
mov
bound
addr16
pop
xlat
mov
and
jbe
pop
shll
dec
push
mov
and
jae
jo
add
gs
lea
push
leave
aas
sub
les
mov
nop
js
push
dec
aam
lcall
mov
xor
mov
mov
xor
mov
xorl
dec
das
mov
lods
imul
pop
xchg
mov
jp
loope
dec
sbb
sbb
jmp
mov
pop
pop
enter
mov
mov
mov
pop
pop
push
incl
arpl
dec
out
adc
ficoms
or
push
inc
js
xchg
push
mov
lock
repnz
lds
jo
push
or
aaa
xor
aam
sub
test
push
shll
lods
mov
push
mov
out
data16
je
or
push
jno
pusha
fsubr
sbb
ret
cmp
and
out
in
push
pop
cmp
decl
popf
mov
mov
ljmp
bound
pop
test
mov
cmp
stc
sbb
rorl
lcall
lret
pusha
popa
lahf
scas
cmc
sub
fistps
and
ja
das
inc
jb
imul
sub
dec
int
mov
movb
push
jmp
lea
cmp
jbe
push
mov
inc
rcll
lcall
loope
insb
mov
sub
inc
adc
cmc
add
sbb
mov
jno
inc
imul
ja
lods
mov
out
xchg
ret
xlat
popa
cmp
gs
pushl
dec
mov
push
mov
or
iret
enter
lret
dec
scas
mov
es
sbb
mov
in
dec
or
cli
fdivs
inc
and
cmpsl
gs
rorb
movb
jae
cmp
imul
add
shll
cmc
out
lea
mov
or
xchg
xor
ja
dec
mov
repz
and
cmp
add
jl
jnp
fucomp
ret
sbb
daa
ficoml
add
jl
dec
dec
dec
cltd
xor
pop
les
mov
stos
mov
aam
adc
mov
xor
inc
les
adc
fildl
jae
shrl
scas
and
faddl
pop
repnz
xor
lock
and
jmp
data16
nop
sbb
dec
inc
out
xchg
mov
mov
dec
das
jle
inc
pop
jle
enter
clc
cmp
or
cmp
js
pushf
or
xchg
mov
aaa
data16
sub
mov
jl
sti
dec
or
mov
and
adc
sbb
xor
sub
pop
xchg
fdivrl
mov
ds
sub
mov
jmp
ror
sar
stos
fsubr
or
ja
cwtl
sub
cmp
add
mov
out
rorl
dec
adc
inc
cmc
movsb
add
fisttpll
ja
cmpl
pop
and
arpl
pop
dec
xchg
adc
jge
repnz
shrb
or
push
leave
sbb
lret
inc
int
cmp
jb
mov
lcall
sbb
and
cmp
out
lahf
and
inc
push
popa
mov
in
jns
mov
or
cmp
jge
mov
fwait
or
inc
mov
push
adc
pop
loop
cmp
mov
adcl
clc
ss
pusha
sub
xchg
mov
mov
outsb
clc
and
push
jno
ss
hlt
inc
pop
xchg
adc
add
push
imul
jmp
jb
loopne
cltd
data16
test
loope
sub
inc
aam
sbb
faddp
leave
xchg
mov
jae
cltd
adc
adc
out
aaa
pop
movsb
insl
dec
xchg
insl
mov
jo
cmp
push
add
std
mov
fildll
or
cmp
jg
push
out
es
cmp
aas
cmpl
shlb
loope
fidivrs
addr16
mov
adc
xchg
imull
fs
pop
andl
adc
dec
je
xchg
or
push
jo
and
add
mov
and
lahf
jg
fistps
mov
outsb
inc
testl
pop
decl
icebp
fdivs
std
adc
int3
push
push
adc
push
sti
dec
dec
mov
adc
xor
cmp
inc
mov
ja
ds
cld
sbbb
sbb
xor
in
xor
mov
out
icebp
inc
stc
addr16
aad
pop
pop
sbb
dec
push
mov
addr16
imul
or
pop
imul
add
inc
adc
out
and
andb
adc
pusha
out
pushf
jg
mov
xchg
xor
push
test
adc
in
rolb
mov
pop
pop
mov
mov
stos
add
xchg
cs
xor
sti
mov
jnp
insl
push
movsb
xchg
lea
dec
xor
add
pop
xor
mov
or
pop
repz
fistpl
bound
mov
decb
jae
out
mov
push
dec
xchg
xor
imul
mov
popf
xor
test
and
inc
fcmovbe
sub
mov
xorl
xor
fsts
inc
jne
pushf
xlat
testl
add
push
popf
pusha
cmp
xor
and
cmp
cmpsb
or
add
fwait
jno
jns
ficoml
mov
andl
rorl
lret
fstps
xor
jge
sbb
stc
mov
inc
out
sub
lea
cmp
fldcw
mov
pop
xor
mov
hlt
movsl
into
dec
scas
fdivr
pop
fxam
fldcw
cmp
add
inc
cmpb
add
dec
xor
jb
in
push
dec
cmp
xor
xorb
mov
xor
in
xor
xchg
pop
in
stc
mov
ror
and
dec
pop
mov
daa
outsl
adc
into
mov
mov
mov
dec
popa
and
loop
int
jmp
leave
in
pop
lods
addb
addr16
sbb
cmp
mov
mov
adc
gs
mov
aam
mov
inc
je
addb
mov
push
mov
ljmp
push
test
fs
pushf
xchg
jecxz
jo
das
dec
xor
mov
test
push
nop
mov
or
out
xor
xchg
cmp
jbe
roll
ret
incl
stc
push
gs
push
dec
fsubs
imul
dec
test
ss
jecxz
sbb
out
sub
adc
mov
sbb
jg
adc
aam
push
aad
dec
cvtps2pd
repz
inc
or
rcl
push
cli
mov
lods
fcomps
cmp
xor
mov
mov
sub
outsl
inc
and
into
in
add
pop
mov
popf
xchg
test
adc
cld
or
arpl
lret
sub
jae
enter
loope
sti
and
cmp
movsl
ficoml
lds
mov
mov
adc
jne
sub
test
jnp
aaa
xchg
jns
jl
jbe
pushf
xchg
in
frstor
cli
mov
nop
jne,pn
hlt
push
in
rep
ret
xchg
inc
xor
sub
xchg
add
inc
xchg
sub
jo
mov
xchg
xor
sub
sti
roll
scas
jle
enter
dec
xchg
push
and
jo
cmpsl
adc
sahf
fidivrl
je
push
fmuls
mov
fildll
add
enter
cmpsb
mov
gs
fildll
xor
push
negb
mov
sub
nop
mov
dec
leave
cld
jmp
pop
cmp
mov
sbb
mov
jle
add
push
test
cs
sbb
fcmovnu
lods
movsl
ret
arpl
sbb
or
mov
mov
pop
into
push
dec
call
pop
lods
sbb
push
icebp
sbb
jbe
mov
test
arpl
mov
insl
jmp
xchg
or
push
or
adc
cltd
jbe
popl
cmc
je
adcl
sub
in
out
das
ja
out
mov
mull
and
stos
dec
insb
sti
loop
jmp
mov
add
push
enter
cmc
aam
mov
mov
lock
std
push
mov
dec
rol
movsl
movsl
sbb
mov
jne
rclb
shll
scas
int3
mov
adc
or
cli
cwtl
movsb
push
pop
loopne
or
sub
packssdw
lcall
ss
test
inc
out
xchg
push
push
push
scas
adc
int3
push
lods
xchg
mov
mov
mov
cmp
negw
push
sbb
addr16
iret
mov
fyl2xp1
ss
ljmp
iret
clc
in
lods
shll
inc
fnstcw
sbb
call
enter
movsb
adc
jb
out
dec
adc
and
scas
loopne
cld
shll
movsb
daa
pop
into
repnz
popf
inc
xor
ljmp
sahf
jnp
or
mov
inc
pop
cli
add
lcall
bound
jmp
mov
and
movsl
aas
mov
cmp
or
push
mov
in
add
subb
or
lods
movsl
out
cmpsl
popf
lock
mov
in
sti
mov
pop
movsb
inc
xchg
dec
insl
push
outsl
hlt
paddd
rcrb
sarb
sbb
mov
cs
stos
faddl
mov
xchg
adc
and
and
loop
out
inc
sahf
mov
hlt
mov
adc
jns
repnz
xor
lahf
out
sub
mov
lods
xchg
fcomip
push
mov
mov
sub
push
jge
out
stc
push
adc
inc
cmp
jge
sbb
pop
or
adcl
add
sub
in
push
mov
pop
sub
jbe
inc
xor
sub
or
push
js
cmp
xchg
shll
movntq
inc
xor
pop
ret
aaa
jle
cmp
inc
outsb
mov
lahf
loope
cmc
lock
push
popf
lods
aad
ficomps
push
bound
addr16
dec
sbb
pop
jbe
movl
cltd
mov
fs
sarl
cli
mov
mov
or
lret
loopne
sahf
dec
outsl
je
push
xor
push
js
sbb
push
xlat
lret
test
stos
cs
pop
inc
xor
push
or
mov
mov
dec
imul
xor
in
add
mov
sub
mov
add
and
pop
dec
and
inc
aam
dec
data16
mov
push
cmp
pop
dec
sbb
cld
loope
cmp
dec
je
xchg
dec
cmc
mov
jno
clc
repz
push
lods
sbb
or
add
addr16
orb
mov
inc
dec
insb
push
and
loopne
cld
test
aas
xlat
or
jbe
mov
sbbl
arpl
fs
into
call
jns
rolb
mov
or
inc
shr
sbb
cmp
add
outsl
test
mov
into
push
out
loope
arpl
sbb
cld
sub
pop
xor
jmp
pop
jbe
inc
iret
lret
dec
mulb
push
xor
shrb
push
push
jg
add
gs
das
jl
and
call
mov
adc
adc
jecxz
stos
xchg
hlt
outsb
xor
mov
bound
mov
cmp
adc
jp
sub
cwtl
mov
bnd
push
outsb
popa
xchg
jbe
push
outsb
outsl
es
jge
cmp
push
mov
mov
xor
adc
loope
in
outsb
cmp
fsub
ss
cmp
sbb
popl
fsubs
fistpl
aam
push
iret
sub
push
lock
addr16
mov
sahf
loopne
adc
inc
jg
sub
icebp
shlb
bound
or
mov
adc
lods
and
push
popf
stos
hlt
inc
mov
out
cmc
fisttpl
mov
lock
bound
inc
jbe
jg
cmpsb
fwait
cmp
jo
fidivrl
mov
and
lea
add
shll
mov
fisttpl
aaa
mov
cld
out
ss
test
sbb
loopne
cmp
ret
fnsave
popa
push
jnp
xchg
or
cmpb
inc
outsb
adc
adc
iret
pop
mov
or
repz
and
aaa
pop
je
flds
inc
inc
sbb
jp
cmp
loope
lods
pop
mov
or
cli
cmpsb
subb
fdivs
push
test
aam
jnp
jp
dec
lcall
xlat
dec
sub
sti
xor
test
lret
movsl
mov
push
sbb
out
add
dec
jle
sbb
xor
addr16
adc
in
sub
cmp
sbb
push
bound
sub
mov
jne
or
ret
jge
sbbb
lods
scas
inc
rep
lahf
add
arpl
orb
int3
pop
adcb
inc
lea
add
int3
sbb
inc
adc
and
inc
jge
cli
adc
mov
push
gs
call
pop
shll
push
loop
or
add
add
aaa
mov
mov
and
and
aad
out
inc
imulb
xor
adc
aam
jmp
hlt
adc
push
dec
xchg
cmpsb
in
call
out
jg
mov
sbb
cmpsb
sahf
iret
cmp
lods
es
shr
jb
mov
xchg
test
call
sbb
arpl
xor
ja
push
data16
aad
ljmp
sahf
xlat
sbb
aam
jne
lock
xchg
in
lcall
pop
pop
test
and
pop
stc
int
mov
mov
xchg
lret
pop
lcall
or
fwait
push
jb
cld
mov
loope
xor
icebp
dec
mov
popf
std
push
dec
cmp
add
adc
int3
push
imul
subl
into
xor
cs
lret
jmp
lea
mov
out
or
xchg
int
mov
lret
mov
jbe,pn
leave
mov
insl
fs
cltd
mov
sti
xor
pop
out
std
mov
movsl
mov
into
repz
fadds
mov
rcrl
cmp
cmpl
insl
xchg
dec
insl
and
cmp
mov
shll
lock
imul
cld
aam
push
and
inc
mov
push
out
ret
je
or
lahf
scas
inc
push
cli
rorb
jg
xor
into
mov
pop
imul
leave
es
fnsave
in
es
int
js
je
and
in
lahf
das
or
rcll
in
and
icebp
ret
daa
data16
jmp
clc
or
inc
shrb
xchg
movl
ja
hlt
xor
dec
aaa
ja
or
stc
and
ret
inc
jge
jecxz
push
inc
bound
xchg
leave
mov
push
or
pusha
pop
push
mov
push
subl
push
sbb
cmp
out
int
daa
outsb
mov
inc
fsubs
ds
push
jecxz
cld
aam
cwtl
dec
xchg
in
in
inc
leave
jns
cmp
or
lods
adc
rol
in
xchg
pop
jb
pusha
push
cltd
sub
int
or
lret
xchg
pop
out
add
mov
and
and
test
push
cwtl
ljmp
imul
mov
mov
sub
jb
lcall
xchg
cmp
add
sbb
sub
hlt
sub
iret
pop
mov
mov
mov
cmp
mov
sub
dec
add
in
xor
in
xchg
cmp
jb
jmp
pop
rol
lock
and
jl
inc
rcl
fmulp
out
xchg
sbb
daa
lock
dec
mov
movsw
mov
mov
cmc
mov
les
pop
adc
insl
mov
aam
and
subb
test
jo
and
add
out
cmpsl
pop
jle
adc
stos
sbb
mov
cmp
daa
loop
movsl
inc
sub
push
xchg
aad
in
mov
fldcw
jp
xchg
mov
aaa
stos
pop
addb
ret
adc
dec
jo
pop
les
fmull
push
mov
test
add
inc
fisubrs
jg
sbbl
iret
test
push
jecxz
dec
adc
fldcw
or
test
and
pop
fsubr
sub
leave
sarl
setg
xchg
cmc
fisubs
test
cli
sbb
mov
xor
dec
or
inc
mov
dec
xlat
fidivrl
out
aam
xchg
daa
xorl
add
cli
inc
sbb
mov
and
add
sub
mov
out
xor
enter
push
ret
push
adc
insb
shlb
aas
jle
fstl
push
sti
inc
xchg
imul
dec
stos
sbb
insb
jbe
rolb
push
push
test
iret
jl
fstps
jne
and
enter
les
daa
int
xor
xchg
xor
fwait
pop
sti
int3
imul
clc
aas
xor
mov
imul
imul
gs
incl
cmp
sbb
in
mov
ja
xlat
xor
or
adc
in
mov
arpl
out
sbb
aam
enter
lock
popa
gs
frstor
cmp
cmc
loop
push
popf
scas
mov
rcr
pusha
dec
in
je
push
shrb
mov
iret
fwait
jns
or
movsb
or
or
ljmp
hlt
jle
shll
and
sbb
sub
rolb
xchg
sbb
cmp
nop
loop
pushf
pop
or
xor
int3
lret
and
sahf
or
xor
push
cmpb
fisttpl
enter
xor
fs
fwait
icebp
or
mov
sbb
mov
movsl
test
mov
negb
jae
out
ljmp
movsb
dec
ret
push
lcall
loope
mov
outsb
push
dec
inc
xor
je
aas
cs
push
std
jl
dec
and
xor
mov
gs
leave
push
insl
popa
icebp
cld
dec
pop
xor
jecxz
sub
dec
or
add
fsubrs
repz
jl
fwait
imul
sbb
dec
lock
ljmp
push
jo
adc
pop
mov
xchg
fnstenv
dec
lods
push
je
push
enter
repz
cmc
xor
xchg
shll
cli
lea
inc
add
mov
mov
inc
out
mov
mov
or
and
fldl
mov
or
jle
xor
mov
not
aad
adc
je
inc
insb
inc
pop
or
enter
mov
xor
loopne
and
pop
sub
fisubrl
mov
and
xor
subb
movaps
filds
jb
sbb
fidivs
jp
mov
cmp
rolb
popf
mov
ficoms
lods
xor
jl
and
mov
pop
lcall
cmp
lret
xchg
jo
jbe
mov
push
ret
xchg
sub
mov
mov
sbb
pop
xchg
movsl
mov
and
mov
mov
jne
imul
stc
sub
ret
and
pop
divb
cmp
outsb
shr
js
ja
pop
rorb
xchg
and
pop
in
sti
pop
outsl
pop
sub
ss
mov
cli
ficompl
pop
dec
stos
push
aaa
sbb
pushf
insb
je
sub
push
ret
pop
in
insb
ljmp
adc
data16
rcll
dec
leave
sbb
inc
aas
lock
in
push
sub
push
adc
pop
push
mov
popf
jns
lahf
or
xor
shlb
loope
and
mov
fnstsw
and
sahf
outsb
dec
jl
jl
mov
jne
dec
lret
xor
ret
and
jg
int3
iret
ss
add
test
mov
xor
mov
jo
pop
sbb
daa
inc
xchg
inc
inc
cmp
scas
aas
cwtl
call
js
test
jne
mov
pop
jle
mov
addl
outsb
es
testb
or
ret
push
cmp
adc
ja
push
lods
iret
jl
sbb
mov
pushf
and
or
add
inc
sbb
pop
push
adc
sub
frstor
pop
clc
sbb
mov
scas
pop
mov
shrl
mov
mov
xchg
in
xor
je
push
fadds
addl
ja
scas
in
mov
mov
sbb
and
dec
sarl
test
xor
das
sarl
push
or
test
dec
sbb
xorl
aaa
stos
xchg
std
imul
pop
mov
push
inc
int
and
mov
daa
pop
bound
stc
add
xlat
ret
sbb
and
push
aas
imulb
subb
nop
imul
popa
sbb
sub
push
insb
mov
xlat
rcll
jg
jae
lea
cmp
fscale
pusha
pop
int
jg
lahf
mov
xor
jbe
mov
clc
jbe
daa
ljmp
xchg
xchg
adcb
das
into
inc
in
jge
xchg
in
sub
fnstcw
int
mov
arpl
cltd
subl
leave
test
cli
fisttpl
adc
xchg
popf
cld
enter
and
jne
shrl
aas
arpl
jecxz
sti
mov
add
or
xchg
lret
mov
test
loope
dec
add
jg
dec
mull
xchg
in
dec
jmp
xor
pop
mov
cmpsb
adc
sbb
jo
and
cmp
jbe
das
inc
ja
add
shl
adc
dec
lock
mov
push
inc
jmp
add
sbb
sbb
jecxz
std
vcvtss2si
stos
repz
adc
pusha
insb
les
mov
or
repnz
cld
dec
lods
fcompl
and
cmpsb
lea
out
cs
in
cmc
iret
pop
cmc
arpl
and
ja
xlat
aad
int
fs
fsubs
mov
mov
inc
aas
add
das
outsl
test
sub
leave
das
cli
ror
xor
out
cmpsl
xchg
into
ror
sub
test
dec
add
aam
jnp
cwtl
xor
out
inc
pop
or
movl
roll
mov
sbb
adcb
mov
mov
ret
dec
pop
or
dec
xor
mov
test
sar
lcall
pushf
add
adc
xchg
mov
push
xchg
jb
fldenv
int
stc
in
rorl
cmp
push
bound
shlb
inc
jnp
mov
hlt
rcll
push
shl
fbld
mov
mov
mov
test
rorb
mov
xchg
call
js
inc
nop
mov
dec
mov
fdivrs
fs
cmp
mov
push
fnstsw
adc
ds
bound
cld
mov
jnp
mov
ret
jge
lahf
adc
addr16
push
and
ja
and
clc
cmp
sub
cmp
jae
pop
pop
cld
pop
js
jg
orb
push
fs
mov
arpl
mov
and
mov
or
mov
pop
andb
add
mov
adc
popa
sbb
jne
fldenv
testb
movsl
fstpt
stc
mov
xchg
mov
scas
inc
adcb
stos
mov
xor
scas
icebp
push
inc
dec
cmp
ret
stc
or
movsb
push
scas
test
cli
lcall
filds
fs
addr16
pop
xchg
xchg
xchg
xchg
das
inc
call
stos
shlb
jecxz
repnz
sbb
cmp
dec
fwait
data16
ret
out
je
adc
gs
lahf
lcall
jbe
push
adc
mov
add
mov
sub
adc
jo
ret
ret
sub
and
jle
lock
mov
push
jnp
imul
daa
test
imul
pand
fsubrl
mov
xchg
stc
test
add
decl
xchg
adc
sbb
ja
push
sbb
mov
insl
leave
mov
lock
pop
cmp
repz
mov
push
mov
out
push
out
jg
and
psubd
inc
or
sti
lods
mov
mov
sbb
lret
pop
adc
or
and
jg
push
ss
divb
out
xor
fists
add
stos
inc
ljmp
subb
rorb
loop
push
push
inc
pop
pop
aas
cmp
push
lahf
icebp
imul
in
jmp
push
outsl
rcrl
aam
sbb
mov
push
jl
stc
xor
cmp
jbe
xchg
adc
imul
mov
xchg
cmp
pop
sar
xchg
adc
sahf
mov
leave
add
or
pop
pop
inc
movsb
dec
pop
inc
pop
mov
push
sti
push
ds
ret
stc
push
mov
pop
ss
pushl
movsl
sti
aas
clc
leave
shlb
and
mov
movsb
xor
in
cmp
push
insb
jnp
outsl
inc
adc
push
add
stc
jae
arpl
mov
into
and
mov
xchg
mov
test
fmuls
repnz
sbb
scas
xchg
int3
sbb
dec
ds
adc
cmpsb
dec
lahf
fwait
pop
push
cld
fistpl
mov
mov
enter
fcompl
push
adc
jnp
sbb
and
cmc
roll
mov
es
js
data16
cmpsl
push
lods
sarl
lods
inc
into
notb
iret
push
mov
and
push
xor
pusha
jno
stos
mov
dec
aad
cld
mov
fistl
sarb
pop
mov
sbbb
movsb
outsb
sbb
cmp
inc
push
sbb
mov
jl
ljmp
xor
frstor
inc
jbe
repnz
mov
add
in
pop
adc
xchg
lods
lahf
adcb
test
fiadds
cmp
bound
add
cli
mov
negl
ret
test
es
adc
xchg
cmpsb
fisubrl
icebp
inc
rorl
and
call
xchg
inc
pop
pusha
cmp
pop
std
mov
push
inc
xchg
test
insb
jg
mov
cld
mov
icebp
or
lcall
adc
push
enter
scas
sbb
or
std
btc
lret
cs
xchg
mov
push
jmp
push
mov
loop
sub
or
lret
js
sti
ret
jge
xchg
fstpl
adc
jae
mov
xchg
ret
push
pop
sbb
push
push
movsb
nop
sahf
or
xchg
jno
mov
test
dec
add
xchg
into
mulb
insb
dec
xchg
or
neg
jmp
cmpl
movsb
mov
jmp
ja
dec
sbb
mov
lock
pop
jg
out
pop
cmpsl
in
mov
out
or
shr
sbb
push
pop
inc
cwtl
loop
cmp
test
addr16
out
add
pusha
mov
lret
xchg
and
pusha
push
push
aad
cli
loopne
inc
push
bound
enter
xlat
jge
ror
inc
xchg
cmp
shrb
sub
pop
lds
dec
enter
iret
popf
dec
adc
mov
cli
sbb
xchg
push
data16
mov
adc
adc
cmpl
xchg
hlt
lock
lods
mov
loopne
aaa
js
mov
aam
and
inc
push
sub
cmp
insb
and
mov
push
sahf
xchg
out
mov
movsb
lods
inc
shlb
js
inc
test
cs
or
fnsave
cmpsb
out
out
clc
mov
add
rcrl
fidivl
mov
aas
ja
sub
push
je
test
push
inc
std
popf
cwtl
int
in
lret
sub
dec
ss
sub
jecxz
xchg
jae
out
xor
pop
sub
add
lods
and
add
hlt
les
aas
in
clc
cs
ret
out
insl
add
test
pop
aam
mov
mov
bound
pop
push
sub
add
out
test
mov
push
xchg
iret
lahf
rcll
scas
inc
andl
push
adc
icebp
fs
push
xor
push
test
xchg
or
stc
pop
mov
ja
dec
repnz
mov
push
jg
cmp
mov
sub
sbbl
adcl
pop
call
or
mov
push
jle
pop
into
inc
lret
ds
mov
test
add
xchg
fnstcw
mov
push
xor
cmpsl
jae
mov
mov
icebp
decl
xchg
pop
cmpsl
push
fnstenv
es
xor
mov
sbb
mov
outsb
mov
mov
js
std
sub
btr
and
adc
adc
inc
xchg
mov
add
mov
and
pushf
add
and
or
sbb
call
and
push
ror
and
jmp
call
dec
shll
xchg
sbb
int3
addr16
call
and
mov
push
je
aas
cmp
xchg
inc
jp
stos
push
cmpl
ljmp
inc
sbb
rcll
xor
jle
sbb
pushf
and
jp
out
mov
pushf
lret
pop
push
imul
lret
int
lcall
fcoms
cmc
cmpsl
inc
jmp
pop
jb
pushf
dec
ja
add
idivb
cli
cmp
sub
bound
iret
jmp
xchg
pop
outsl
mov
and
dec
mov
outsb
dec
xlat
sbb
lods
xor
add
cwtl
sbb
push
data16
cmpsl
push
pusha
dec
mov
in
sbb
mov
test
sub
cmp
push
jae
nop
cli
jg
mov
jg
xchg
pop
jno
repz
sbb
xchg
loop
sti
in
or
mov
sub
inc
idivb
mulb
popf
adc
or
insl
mov
cmpsb
inc
xor
push
scas
push
dec
ret
ljmp
jmp
push
fidivrl
mov
test
or
cmpsb
xor
orl
loope
pop
jns
and
ja
jp
inc
cwtl
sub
cs
ror
xorb
add
pop
xchg
outsl
mov
jp
adc
fsubs
jp
lock
xlat
arpl
push
push
shlb
cltd
addr16
xchg
push
out
cmc
pop
sbb
fists
imul
outsb
dec
push
imul
pop
sub
insl
ficomps
dec
dec
push
mov
mov
pop
into
ds
es
addb
xchg
out
sub
or
jnp
test
mov
aas
sarl
jno
outsl
sbb
or
je
push
dec
outsb
mov
fmuls
in
xchg
clc
add
fdivl
out
shlb
xchg
push
jge
insb
jne
sti
xchg
inc
loope
std
call
pop
pusha
mov
sub
mov
in
mov
fisubrl
cmpb
push
inc
add
push
pop
test
dec
inc
or
stc
enter
enter
dec
test
add
sbb
mov
int3
in
mov
and
lahf
gs
push
push
push
sbb
les
loop
cld
mov
aaa
sbb
in
icebp
fstps
pop
mov
stos
adc
pop
stos
lock
and
jl
jbe
or
lret
mov
dec
ret
call
in
jle
xor
cmpsl
rorb
push
lods
shrb
mov
cwtl
sti
or
int
std
cwtl
push
js
and
enter
adc
int3
lahf
pop
out
jo
out
xor
test
or
imul
lea
shlb
test
jg
dec
lcall
push
push
add
mov
ja
cmp
and
mov
cmc
adc
faddl
pop
fmull
inc
test
je
imulb
inc
mov
out
jns
outsb
add
in
cwtl
jbe
nop
sbbb
xchg
push
rcrl
popf
jne
push
insl
mov
sbb
jb
dec
stos
ds
xchg
xchg
xchg
imul
lea
pop
sbb
cld
je
stos
and
les
dec
dec
adc
int
push
inc
les
imul
pop
or
mov
test
add
sub
mov
jbe
aaa
out
jo
or
insb
daa
pop
ffreep
or
adc
cmp
jb
cli
mov
cltd
out
scas
inc
in
xchg
int
sbb
pop
pop
mov
out
leave
andl
jb
adc
in
test
xor
fwait
cwtl
fs
pop
repnz
xor
sbbl
push
adc
ds
je
mul
cmp
or
xchg
jns
mov
es
push
lods
mov
mov
pop
pop
lea
and
add
mov
insl
cmpsb
adc
movb
sbb
push
or
fistl
adc
jno
scas
das
out
ror
dec
je
rcrl
jae
jge
xchg
ret
pop
lret
mov
fstpt
sbb
jb
jno
mov
dec
cmpsb
push
fisubrs
in
jne
pop
insl
rorl
aas
cmp
jmp
aam
inc
push
mov
nop
mov
jne
insl
daa
mov
adc
dec
jmp
js
sbb
inc
adc
cmp
jmp
jo
xchg
mov
cmpsb
adc
mov
mulb
mov
call
jae
dec
cmp
fwait
loopne
out
movsl
les
jae
aam
xor
test
test
fsts
push
push
mov
jp
fisubrs
shlb
les
mov
mov
push
add
pop
sahf
cltd
fwait
xchg
ud2
fnstsw
cmp
push
insl
mov
repz
notb
popf
shll
jecxz
outsb
and
pop
xor
test
pusha
inc
je
pop
cwtl
fisttpll
mov
es
push
lret
xchg
orb
xchg
and
in
xchg
in
xlat
xor
mov
psubd
xchg
bound
aad
push
mov
add
test
pop
pop
fildl
das
push
test
into
das
mov
fcomp
xchg
jno
fadds
test
int3
stos
jmp
pop
adc
sbb
out
adc
pop
in
sub
es
sbb
hlt
and
pop
lahf
loop
pop
fstp
and
gs
jo
lahf
pop
fwait
jp
ret
mov
lret
loope
and
test
push
leave
dec
xlat
or
pushf
jns
mov
sub
jg
sar
mov
push
shll
loopne
inc
xchg
cmc
jo
fistpl
cli
mov
vxorps
movsl
repz
jmp
outsl
adc
js
clc
sub
lds
pop
mov
les
sbb
fisttpll
test
cmp
clc
repz
jle
ret
pop
push
lods
test
mov
add
xchg
push
cmc
test
sbb
mov
test
xchg
xorl
subl
sbb
and
jecxz
mov
fdiv
cli
add
fldt
fs
dec
in
dec
sbb
into
imul
popf
mov
lods
fwait
jno
popl
loope
lret
lcall
sti
xor
repnz
hlt
mov
mov
add
mov
test
pop
add
xor
addb
or
mov
je
sub
pop
dec
jge
divl
add
das
call
jns
les
sub
xlat
repnz
add
mov
sti
pop
fsubr
pop
jle
in
ja
push
sbb
xor
sti
mov
lods
jmp
stos
sbb
cmpsl
pop
hlt
fisubl
xchg
sub
adc
sbb
cwtl
pop
push
jl
mov
or
mov
mov
add
mov
lea
push
and
fisubs
fwait
test
ljmp
jno
jmp
cmp
mov
in
inc
sbb
adc
into
scas
cmp
xchg
dec
pop
lea
into
mov
std
jmp
or
mov
fmul
dec
nop
cltd
sub
daa
mov
pop
jno
xor
sbb
lock
ret
sbb
jne
adcl
or
call
cmp
xchg
lahf
or
lcall
lock
and
js
inc
js
gs
mov
stc
les
pop
and
scas
das
inc
pop
outsb
sub
out
iret
cltd
ret
lods
lods
jge
cmp
shll
and
push
in
nop
push
sbbb
adc
or
fwait
xchg
jmp
jo
or
mov
das
and
jl
es
js
les
ljmp
jae
mov
mov
sti
ja
jp
dec
and
adc
push
lock
fistps
decl
out
jle
mov
push
mov
add
aas
mov
enter
xchg
paddb
add
loop
sub
jb
jp
mov
inc
aas
outsl
jbe
jge
add
shrl
jp
sub
push
inc
push
call
dec
rcr
mov
push
pop
sub
dec
xchg
in
sbb
dec
xor
jae
scas
sbb
inc
adc
cld
je
shll
dec
xor
pop
and
dec
test
ret
lret
fcoms
popa
push
cmp
daa
xchg
out
jae
adc
push
pop
jle
movsl
ss
push
mov
je
jno
aam
lods
into
lods
nop
fwait
insl
push
xchg
lods
loope
jae
inc
mov
sbb
push
dec
and
inc
inc
push
enter
xchg
int
jg
ret
fisubl
clc
mov
jge
pop
push
cmpsl
jno
stos
jae
cli
and
jo
nop
daa
cmp
dec
sbb
and
adc
js
or
sbb
dec
lds
ret
pop
xchg
dec
inc
icebp
xor
mov
dec
mov
push
cmc
and
or
scas
sbb
mov
push
add
outsb
nop
xchg
test
repz
dec
mov
or
pop
jae
xchg
sub
imul
cmpb
push
test
xchg
jle
dec
std
or
mov
push
push
imul
dec
les
cmp
jne
inc
ret
iret
xor
adc
jecxz
loope
outsb
fcomps
pop
fmul
sub
inc
jns
psadbw
popa
and
sbbb
xchg
jo
inc
sbb
imul
lahf
jp
stos
jp
inc
ret
jnp
call
das
mov
js
outsb
mov
mov
nop
std
add
jns
adc
add
fidivrs
mov
or
std
in
inc
and
add
inc
pop
sbb
int
sahf
inc
inc
or
dec
notb
dec
ja
xchg
push
push
and
rol
and
call
jne
aam
test
xor
xor
fistl
dec
mov
push
mov
mov
jmp
push
inc
jae
mulb
cmpsb
mov
and
cld
pop
dec
pushf
lret
loope
xchg
xlat
sub
imul
call
fcomp
ds
dec
sahf
bound
xchg
int3
outsb
mov
xor
fimull
outsl
mov
sub
dec
popf
dec
je
arpl
jl
jl
inc
dec
push
sbbb
pop
popf
mov
cwtl
and
xor
mov
aas
xor
dec
push
mov
xchg
inc
lods
sub
paddq
xchg
or
sub
cmpsl
xor
jmp
xchg
daa
fsubrp
mov
test
popa
gs
mov
cmp
lret
push
mov
and
dec
loop
inc
dec
jl
push
xchg
and
pop
push
loopne
xchg
mov
sbb
adc
shll
loope
mov
jecxz
loopne
jae
mov
and
popf
ret
add
cwtl
pop
lods
adc
out
in
aas
jp
out
jns
pushf
sbb
mov
xor
and
jb
push
add
fimuls
push
pop
movsl
dec
imul
add
lds
mov
add
add
mov
xchg
popa
adc
mov
sbb
push
mov
xlat
mov
add
imul
sub
inc
sub
pop
xlat
pop
aad
inc
movsl
outsb
lock
pushf
adc
ss
or
pop
nop
pop
pop
inc
sbb
lods
xor
inc
mov
xchg
gs
cmp
orl
hlt
inc
sbb
adc
mov
mov
mov
xchg
sbbb
push
cmp
fidivrs
mov
out
add
jg
lret
in
mov
jmp
mov
dec
es
lcall
stos
dec
xchg
iret
push
call
sahf
jno
mov
loopne
pop
test
nop
mov
jmp
loop
stos
popa
mov
testl
out
repnz
arpl
enter
addb
mov
mov
mov
arpl
std
fidivrs
into
aad
bound
and
jg
mov
mov
sbb
sub
pop
rcll
xchg
mov
pop
mov
sbb
mov
call
jge
je
out
mov
loopnew
mov
mov
xchg
jle
in
inc
mov
pop
cmp
movsb
icebp
movsb
dec
mov
xor
gs
inc
je
sbb
fcmovnu
ret
jae
and
scas
inc
sahf
pop
pop
lea
cli
xor
and
cmp
shll
sub
divl
mov
in
jbe
out
mov
adc
ss
and
jae
pop
dec
xchg
or
sub
jnp
mov
dec
add
xor
std
test
enter
add
pop
add
int3
or
push
sub
xchg
gs
jl
cmp
adc
int3
in
js
loope
sub
xchg
inc
xchg
xlat
and
sbb
dec
pop
movsb
scas
inc
cmpl
cwtl
mov
inc
pop
test
pop
jl
clc
mov
fcmove
xchg
aad
dec
cmpsl
nop
sbb
into
adc
repz
jge
jl
jge
xchg
inc
xchg
adc
push
inc
stc
cmp
push
leave
xchg
mov
sbb
nop
sub
sub
sahf
repnz
xor
mov
mov
jne
pop
jmp
lcall
lods
dec
addr16
fstp
cmpsl
leave
xchg
lret
sti
jae
adc
mov
jne
out
icebp
in
pop
jmp
lret
mov
out
jnp
dec
std
inc
mov
out
ja
and
rclb
int
lahf
das
insl
cmp
sub
fcomp
je
loop
loop
pop
stos
fscale
xchg
aam
je
add
inc
notb
push
jae
in
enter
jbe
movsl
mov
sbb
push
gs
pop
out
pop
outsl
out
xchg
lods
repz
inc
test
add
leave
mov
iret
dec
or
push
repnz
mov
inc
insl
mov
add
sub
push
movsl
pop
xlat
nop
mov
add
sbb
or
pop
mov
arpl
fistpl
mov
aam
movsl
jg
lret
cwtd
push
sub
mov
lods
scas
mov
bound
mov
outsb
cmp
outsb
dec
xor
loopne
aas
and
ret
sbb
mov
addl
push
inc
loope
jne
cwtl
mov
loope
cmp
xor
sbb
mov
mov
push
in
mov
adc
js
add
pop
lock
mov
in
movsb
jne
ret
fwait
jl
cmpsl
mov
cld
movsb
xchg
pop
cltd
jge
jle
pushf
into
cwtl
or
loopne
outsl
inc
gs
js
sbb
jle
incl
fucomp
clc
adc
adc
addl
cmp
addl
test
mov
mov
cmpl
or
ja
ret
cmp
lret
dec
cmc
xchg
jl
cmp
jae
dec
out
jg
push
inc
stos
mov
popf
repz
int
mov
inc
mov
ret
inc
aad
jp
pop
jne
jbe
xor
adc
pop
xchg
cmp
xor
jp
testb
stc
inc
push
push
loop
ds
xchg
cmp
scas
sub
jmp
jl
int3
xchg
sub
into
cmpsl
fnstenv
jns
call
insl
pop
adc
mov
push
jnp
mov
jbe
jg
call
sub
or
pop
es
cmp
lret
push
inc
loop
ljmp
push
xor
inc
or
pop
popf
in
sbb
add
sbb
cmc
add
or
test
dec
cltd
jge
cmp
adc
jae
insl
or
sbb
sbb
xchg
cli
and
mov
popa
es
jnp
or
inc
in
clc
xor
push
jg
push
aas
jne
inc
and
adc
xor
jbe
imul
xor
push
int
sahf
imul
xor
pop
mov
sub
adc
lock
pushw
push
inc
test
cmpsl
adc
in
enter
int3
dec
lret
shr
mov
and
or
and
rorb
pop
or
push
dec
xor
mov
popa
ja
push
sbb
lea
je
clc
mov
ljmp
lock
jl
mov
das
cmp
mov
daa
arpl
sbb
inc
adc
cld
mov
into
int
mov
lcall
fisttpl
inc
sbb
xor
dec
fcompl
sub
jmp
shrb
sahf
adc
aaa
cli
push
shlb
inc
jb
cmpsb
xchg
xchg
std
pop
inc
aam
mov
xchg
out
stos
fwait
daa
pop
movsb
mov
hlt
cmpsb
pop
xchg
bound
sahf
jns
scas
fimuls
jb
cmp
icebp
add
add
ss
push
and
jmp
dec
shll
mov
test
sbbl
out
mov
fstpt
fstpt
addr16
mov
adc
repz
call
enter
cmp
push
outsb
pop
mov
shr
add
dec
lods
cmpsb
loope
jne
pop
aas
test
push
leave
dec
shll
jae
sub
push
lcall
push
in
sbb
fisubs
lods
jge
addb
enter
inc
cmpl
mov
cld
int3
xor
pop
xchg
lret
push
push
push
dec
test
or
rorb
xchg
xchg
xchg
pop
ret
aaa
lods
jge
fldl
and
pop
call
xor
shll
addr16
shlb
push
jl
icebp
insl
dec
mov
pop
xchg
adc
adc
mov
add
add
mov
inc
ja
fimuls
mov
lahf
shll
pop
hlt
sub
popa
out
cmpsb
jb
cmp
insl
pop
mov
in
dec
push
addr16
sub
insl
mov
dec
lods
xchg
push
ljmp
cltd
jb
mov
inc
xor
in
xchg
dec
in
roll
or
pop
clc
out
push
dec
fs
adc
lret
leave
cmp
cmpsl
adcb
ret
out
and
imul
jne
sbb
stos
ret
add
push
jg
stos
xchg
repz
push
xor
jp
cltd
push
imul
sbb
xchg
sbb
pmaxsw
addl
dec
sbb
cmp
mov
cmpsl
mov
xchg
aam
icebp
jnp
mov
fmuls
jg
out
stc
stos
clc
arpl
add
push
jg
icebp
push
movsb
int
xor
mov
mov
cmp
cmp
mov
pop
shrl
xchg
test
int3
loope
outsb
jbe
popa
fstps
adc
mov
jle
hlt
pop
aaa
loopne
sti
jno
xlat
int3
cwtl
xchg
ret
mov
xchg
hlt
aad
xorb
xchg
test
fbstp
jg
les
inc
lret
or
inc
pop
and
ljmp
dec
pop
push
cmp
fcomi
mov
xor
cmp
in
push
das
xor
cmpsb
loop
inc
adc
enter
inc
mov
jae
lea
sbb
mov
xor
xchg
movsb
decl
outsb
jl
mov
sbb
xchg
adc
dec
push
clc
jp
pop
sti
or
cmp
das
shlw
mov
imul
outsb
sbb
dec
or
xor
dec
in
xchg
sti
push
call
sub
cmp
out
mov
sub
cmp
sub
lock
cmp
pop
sbbl
into
test
xchg
sbb
in
inc
ficomps
mov
fstpl
mov
mov
inc
fdivr
in
mov
cmp
xchg
xchg
mov
loopne
std
add
jns
test
jge
in
pop
andl
mov
cs
sbb
in
push
push
cld
sbb
cmp
imul
lock
add
sbb
lret
and
sub
dec
test
push
xchg
dec
popa
adc
dec
lret
sbb
pop
inc
mov
mov
cld
cmp
fldenv
cmp
not
dec
rol
popf
and
imul
ret
out
fnsave
push
mov
jb
jmp
imul
jle
fcom
jecxz
push
and
lods
pop
sub
xor
mov
fwait
xor
dec
jb
mov
movsl
xchg
sbb
sarl
ds
cmp
cld
dec
cmc
mov
das
mov
rolb
jns
sti
push
out
ret
negl
fnstcw
aas
and
data16
cmp
dec
stos
cmp
jmp
cmp
iret
pop
mov
mov
adcl
pop
jge
nop
cmp
stos
sbb
and
mov
sbb
push
push
add
cmp
out
stc
add
push
rol
mov
ret
jnp
fwait
insl
loope
mov
add
or
and
pushf
xor
insl
stos
sarl
dec
data16
sti
adc
js
mov
test
jl
fisubrl
mov
jne
ret
jne
inc
fsubs
cwtl
inc
xchg
pop
adc
lcall
and
dec
loop
int
pusha
hlt
add
sbb
add
pop
in
aam
fisttps
and
arpl
rcrb
in
rorb
data16
loopne
lahf
fsub
and
push
stos
xor
out
sub
cs
dec
sahf
and
push
pop
test
bound
insb
rcl
fnstsw
add
xchg
and
push
cwtl
dec
test
sub
jg
adc
cltd
xchg
dec
imul
mov
ljmp
stc
popf
daa
cmp
sbb
cmpsb
pop
imul
repz
mov
xchg
and
jmp
adc
xorl
ds
imul
mov
in
pop
inc
pushf
pop
in
add
cmp
sub
cli
sub
push
jge
mov
hlt
pop
shlb
adc
push
mov
cmp
leave
xor
dec
cmp
sub
sbb
or
addr16
bound
jno
adc
insl
xchg
hlt
xor
adc
out
jle
mov
flds
xchg
push
inc
xlat
fnstenv
sub
dec
mov
roll
pop
daa
xchg
je
insb
cs
mov
cmp
jl
jno
aam
and
out
movsb
repz
notl
ljmp
xchg
addr16
adc
jns
shrl
push
sbb
les
je
mov
push
mov
mov
cs
push
movsl
mov
test
dec
or
mov
mov
push
call
addr16
cmp
or
in
cwtl
iret
ja
decl
std
mov
adc
sub
or
cmp
out
addr16
lcall
push
inc
xchg
add
xor
in
jle
mov
pop
mov
push
add
or
cmp
sarl
xchg
add
xchg
idiv
fwait
imul
mov
dec
out
in
outsl
and
das
rclb
push
clc
sub
out
mov
mov
mov
push
repz
jne
inc
cmp
xchg
mov
push
mov
dec
add
push
stos
repnz
pusha
aam
inc
xchg
fwait
dec
mov
push
loop
sub
or
adc
aam
mov
aam
int
and
stos
xchg
pop
test
lea
ds
leave
pop
test
pop
push
dec
xor
and
mov
arpl
mov
cs
enter
es
mov
popa
cmp
or
in
jge
mov
push
pavgw
xchg
push
jp
les
cld
ja
insl
loope
push
insb
shll
rcr
ljmp
add
and
pop
jb
xchg
movsl
ds
mov
jl
lret
enter
rcrb
mov
sbb
push
adc
xchg
insl
out
mov
in
adc
mov
rcl
and
inc
inc
inc
xchg
add
push
out
sbb
lods
scas
repz
mov
iret
jge
aad
pushf
add
cwtl
movsb
or
sub
pop
daa
shlb
sti
test
test
xchg
or
ljmp
dec
ret
lcall
and
adc
xorb
das
loopne
test
mov
dec
seta
nop
and
sbb
mov
xchg
fildl
jmp
lds
push
dec
lds
pop
mov
data16
xchg
scas
bsf
icebp
and
rcrb
push
fdivl
insl
addb
incb
mov
push
fnstenv
roll
sbb
add
jmp
pop
add
and
xor
mov
fwait
jg
jo
in
sahf
xchg
fistpl
popa
pushf
mov
out
jns
stos
lea
sahf
cmp
hlt
movsl
hlt
dec
or
loopne
mov
adc
or
aaa
adc
push
vpavgw
fistps
aaa
pushf
push
aaa
sub
dec
cli
mov
inc
sbb
movups
dec
leave
hlt
dec
pusha
shll
cld
mov
cmp
and
push
jo
pop
xchg
movsb
dec
mov
fisttps
mov
mov
push
lahf
or
je
push
notb
add
inc
scas
xor
ss
out
xor
mov
or
mul
cs
sahf
int
sub
shlb
cli
nop
and
mov
push
cmp
dec
inc
div
outsb
adc
xchg
adc
mov
mov
push
push
fisubs
push
and
enter
outsl
add
cmp
mov
mov
mov
push
cmp
test
xchg
sbb
in
sti
orb
lret
hlt
int
push
dec
mov
scas
xchg
jae
shlb
sub
mov
push
mov
sbb
inc
and
fsubrl
xchg
jbe
add
shlb
xchg
cmp
jae
mov
mov
cmp
add
scas
sbb
mov
inc
andb
subl
loop
scas
lock
pushf
sub
imul
mov
mov
xchg
pusha
test
jae
daa
orb
adc
pop
jno
mov
iret
cmpsl
sbb
adc
jl
cld
push
xchg
scas
lods
ret
adc
fsubp
or
dec
add
loopne
cs
jp
fimuls
push
jl
sbb
aas
cs
sub
or
out
sub
stos
mov
lock
hlt
cmc
shlb
mov
xor
mov
pushf
jae
cld
xchg
subl
cmp
cmp
push
and
lcall
mov
push
out
pop
sbb
outsl
repz
mov
iret
sbb
cmp
cmp
mov
xor
sarl
test
push
jge
xchg
cmp
jb
add
jle
sbb
test
adc
inc
lods
jae
pop
push
addr16
sbb
sahf
cmp
lret
lret
inc
sbb
pop
xchg
cmp
es
dec
out
cmp
dec
arpl
ret
outsb
outsl
pop
xchg
je
ror
adc
xor
mov
sub
sub
les
or
xchg
sbbb
xchg
sub
push
pop
clc
int
fnstcw
test
adcl
xor
mov
out
add
in
es
jb
xchg
roll
hlt
pop
jns
scas
or
inc
cmp
mov
dec
js
rcrl
push
icebp
inc
sub
test
aad
insb
shr
nop
test
push
popa
dec
cmpsb
mov
cwtl
xchg
test
push
cmp
cmp
lahf
ret
outsb
adc
pop
shlb
sbb
mov
push
outsb
xchg
mov
roll
fstpt
stos
fdivrs
jmp
fdivl
int
pop
mov
jmp
movsl
jb
sbb
mov
mov
arpl
cld
sbb
mov
mov
jae
xor
rorl
push
les
inc
xchg
std
inc
fsubrl
mov
aad
push
dec
aaa
cltd
mov
xorl
imul
mov
pop
sub
call
test
ja
push
rcl
dec
mov
std
fwait
mov
jmp
gs
and
xchg
add
xor
int
or
xchg
cld
xchg
push
mov
outsl
cmp
stc
jae
imul
mov
stc
mov
adc
loop
jbe
insl
sbb
jae
or
outsl
daa
outsb
icebp
mov
mov
or
cmp
cmp
dec
orl
ljmp
adc
adc
xor
xlat
popa
icebp
mov
inc
and
pusha
pop
ret
ljmp
xchg
xchg
jg
cs
lret
imul
cli
js
stos
clc
es
sahf
xchg
pop
pop
mov
xlat
out
divl
inc
xor
or
lret
push
and
in
xchg
call
xchg
adc
call
fidivrs
add
outsl
cmp
adcl
cmpsl
test
jbe
pop
jne
rorl
cs
insl
data16
add
and
dec
fcomps
dec
in
or
mov
lea
aaa
ret
lock
into
int
lock
js
imul
outsl
repz
mov
clc
xchg
xchg
jle
push
fisubs
int3
call
rclb
lcall
add
mov
mov
add
clc
mov
xchg
sarl
insl
add
aad
jb
inc
pop
add
jne
cmp
rol
sbb
mov
fwait
or
and
jno
mov
cli
xor
int3
das
mov
sar
insl
inc
add
and
xor
dec
mov
xorl
push
fwait
mov
jbe
out
pop
cld
cli
pop
adc
dec
mov
and
jo
inc
subb
sub
pop
mov
stos
lds
or
push
inc
ljmp
addr16
pop
mov
jle
mov
xchg
mov
std
dec
pop
fs
scas
cmp
hlt
int3
shlb
sbb
adc
out
sub
cli
push
cmp
adc
scas
sarl
mov
icebp
or
xchg
decb
jmp
jmp
or
xchg
mov
dec
subl
cmc
sbb
cmpsb
adc
or
jb
pop
cmovl
insl
movb
sub
lret
cmp
mov
popa
xchg
mov
testb
pop
mov
sbb
icebp
add
dec
fsubr
sbb
adc
stos
xchg
insb
xchg
shll
movsb
je
fwait
dec
out
shlb
cmp
ret
data16
orb
fcoml
gs
clc
enter
or
ret
or
xchg
dec
shr
pop
mov
pop
dec
jg
fisubrl
or
test
lcall
data16
cmp
cmp
pop
or
setl
rolb
xchg
int
les
jp
jbe
add
jecxz
mov
cld
add
das
test
adc
xchg
and
scas
inc
outsb
lock
aas
xchg
adc
mov
push
fistpll
test
inc
out
test
xchg
iret
and
shl
fsubr
jno
xlat
ret
cmp
loope
xlat
cmp
repz
mov
imul
inc
cmpb
pop
sbb
mov
insb
mov
sahf
ret
and
jmp
ljmp
pusha
lods
in
sarl
jge
js
ret
ret
add
insl
and
test
test
ljmp
jns
je
xor
push
and
daa
cmp
xchg
ljmp
mull
aam
add
in
push
pop
mov
insb
imul
add
jbe
jmp
pop
lods
out
sbb
jecxz
mov
movsb
js
xchg
mov
jge
mov
dec
mov
xchg
jmp
lock
cmpb
push
inc
std
in
push
mov
mov
dec
adcl
dec
rolb
mov
cmp
sbb
push
out
and
sbb
ret
ror
jmp
add
mov
sub
sub
jge
pop
and
mov
loop
push
aad
and
and
xchg
jnp
and
push
jmp
push
inc
push
fisubs
or
cmp
shl
xchg
lcall
int
mov
outsl
cld
push
pusha
xor
push
in
or
insl
sbb
dec
jmp
sub
cmp
push
test
and
add
enter
mov
push
mov
or
ja
mov
add
in
push
xchg
xor
mov
mov
mov
push
sub
pop
push
jg
cli
ret
inc
hlt
jp
stc
gs
movsl
inc
sbb
mov
sub
jecxz
pop
mov
test
fidivs
fdiv
cmp
sbb
adc
xor
cmpsl
jge
mov
jo
aaa
inc
push
jb
mov
and
int
mov
ja
rcrb
pop
adc
ficoms
and
imul
mov
push
push
mov
ret
dec
aaa
hlt
sbb
scas
adc
cmp
mov
lods
call
jo
sbb
add
outsl
sahf
outsb
loopw
les
or
pushf
testl
push
es
xchg
inc
je
pop
std
mov
push
inc
pop
dec
push
lock
xchg
inc
jp
mov
out
scas
ss
xchg
xchg
push
dec
lret
addb
mov
mov
ficoms
inc
out
inc
xor
xchg
cs
adc
pop
pop
js
add
xchg
stos
mov
or
sub
push
lods
add
mov
in
aam
gs
sbb
pop
sbb
imul
cmc
leave
sub
add
mov
inc
mov
shll
fcoml
call
jp
cmc
adc
add
cmp
xchg
arpl
in
ljmp
test
jmp
xchg
pop
jbe
cmp
mov
pop
loopne
sub
xlat
outsl
mov
sub
imul
daa
push
xor
sub
imul
and
cwtl
movsb
pop
outsl
pop
inc
repz
lret
sbb
push
ss
adc
sub
loopne
movsl
cmp
or
pop
jb
xchg
fildll
push
icebp
mov
mov
jo
pusha
xor
gs
mov
jnp
push
jae
cmp
outsl
cmp
mov
fildll
fwait
mov
jp
arpl
jb
adc
imul
mov
es
imul
dec
pop
xor
lock
dec
loopne
les
je
xor
mov
int
sbb
arpl
mov
dec
mov
ds
cli
push
ret
lret
stos
bound
cmc
mov
cwtl
jno
aad
cmpsl
adc
es
jle
pop
push
xor
xorb
xor
in
scas
mov
sarl
jge
lock
ss
mov
scas
push
sbb
data16
lret
mov
sar
sub
loopne
and
inc
xor
xchg
add
imull
cltd
jg
repnz
dec
cmc
sub
cs
sbbl
es
mov
shrl
fsubrl
dec
scas
pop
scas
adc
fsubrl
sub
aas
xchg
arpl
xor
js
push
sub
sub
pusha
or
popf
pop
fucomip
gs
xor
cwtl
push
fnstcw
lret
mov
or
dec
gs
sbb
cld
in
sub
lahf
leave
lret
out
outsl
stc
popa
xor
aad
xchg
mov
xchg
pop
mov
fcompl
stos
xor
cmp
adc
aam
sub
xor
mov
cmp
fcoms
ss
pop
mov
aam
lock
rcrb
dec
xor
xchg
pop
mov
mov
nop
int3
mov
inc
lcall
add
int3
lds
adc
mov
jnp
stos
jmp
clc
stos
mov
push
hlt
pop
adc
out
loope
adc
sbb
dec
std
mov
inc
sub
add
add
fmuls
popf
scas
xor
pop
sbb
enter
callw
inc
push
mov
pop
js
and
mov
add
jae
jge
loope
xlat
ja
ljmp
lock
xchg
pop
sub
and
in
fmul
jns
dec
and
xchg
outsb
das
call
jns
imul
pop
insl
movntps
cld
cmpb
call
jl
gs
divb
ljmp
push
or
jl
push
in
mov
scas
mov
cld
or
xor
mov
push
shrl
sub
fstps
mov
out
xor
aas
pop
cs
xchg
pop
mov
mov
pop
dec
mov
inc
sub
out
bound
lcall
inc
xchg
add
pop
je
dec
push
js
add
rclb
sarb
cmpsl
ret
aaa
add
mov
push
or
cmp
push
out
stc
push
sub
test
xchg
xchg
adc
sub
sti
xor
movsl
outsl
inc
or
push
cmp
loop
je
push
cmp
sub
pushf
ljmp
das
or
mov
mov
add
jmp
fidivrs
mov
inc
jnp
test
ss
xor
and
sub
inc
or
push
imul
sahf
xchg
push
outsb
scas
push
fwait
pop
stos
jp
sbb
lods
jne
push
jle
and
loop
out
decl
xchg
adc
mov
jmp
out
mov
sub
cmp
add
xor
icebp
add
lcall
in
or
fistps
pop
and
imul
shll
mov
bound
lcall
call
aaa
add
cmc
das
aam
std
push
cltd
imul
pop
mov
nop
clc
push
xor
mov
loope
lods
mov
bound
and
xor
shll
jb
cld
mov
xor
fwait
cmp
jbe
pop
xchg
test
sub
adc
xchg
and
xor
jecxz
cmc
push
sub
mov
lret
cmpb
lcall
lock
lea
aad
cli
xor
or
xor
nop
in
lret
fsubp
xor
arpl
shl
ss
icebp
cmpw
js
xor
or
push
std
out
int
push
sub
jne
cmp
add
ljmp
mov
sbb
adcl
test
inc
cmpsb
mov
xchg
into
mov
mov
xor
mov
aad
shrb
jo
sub
xchg
push
push
stos
lahf
mov
aad
mov
jl
les
inc
and
lret
push
test
mov
xchg
mov
jmp
insl
out
push
cmp
jmp
jo
cmp
adc
scas
xchg
xchg
pop
aad
mov
loope
mov
movsl
lahf
mov
add
lcall
or
mov
jl
cmc
in
fcompl
sub
stc
sti
jno
adc
lea
adc
xchg
idivb
jg,pt
addr16
pushf
fisubrs
cmp
popa
push
lock
mov
movb
pusha
pop
mov
out
add
or
cmpl
sub
dec
jle
out
sub
cltd
pop
cmpsb
jmp
push
loop
xchg
mov
insb
sbb
xchg
arpl
mov
adc
jl
mov
inc
pop
xor
adc
cmp
sbb
jmp
ror
cld
inc
int
mov
jp
cmp
and
mov
add
out
dec
ja
imul
cmp
inc
xor
js
push
js
clc
lahf
dec
jo
xchg
mov
adc
sub
cltd
xchg
xor
push
and
mov
pop
xchg
push
mov
stos
jns
nop
xchg
mov
test
repnz
mulb
adc
jmp
and
dec
loop
xor
repz
adc
cli
hlt
push
ret
test
xchg
sub
push
in
cmp
inc
popa
mov
mov
add
data16
xor
inc
hlt
lods
adc
add
in
addl
add
dec
add
and
fwait
pop
data16
lret
push
insb
mov
scas
andb
mov
cmc
dec
lods
push
addl
adc
fildll
jnp
outsb
mov
xchg
imul
sub
xchg
xor
dec
addl
je
lods
std
push
insb
cli
arpl
aaa
xchg
inc
add
lret
aad
add
sbb
jae
mov
mov
sub
mov
lcall
int3
cmpsb
mov
dec
adc
push
popa
push
mov
pop
xor
jno
movsb
jae
loop,pn
loopne
xchg
fucomip
loope
xchg
fmuls
push
inc
add
mov
movsb
jge
outsl
bound
out
jo
adc
ja
and
adc
jnp
psrlq
cmc
leave
pop
in
sar
fs
and
in
pop
fldl
add
ret
mov
jne
outsb
xchg
xchg
loope
inc
inc
orb
mov
lods
stos
dec
or
subl
mov
loopne
xor
rcrb
mov
or
rcrb
mov
sbb
jae
dec
shrb
pop
and
push
jns
out
push
cmp
xor
js
testb
imul
xchg
mov
adc
outsb
sub
xchg
sbb
add
pop
cmpsl
test
mov
outsb
jmp
push
cmp
lock
xchg
push
cs
mov
pop
sbb
out
loopne
xchg
shr
jb
es
outsl
test
lcall
mov
sahf
fwait
xor
sbb
data16
clc
or
aad
sub
test
jb
in
or
mov
jmp
insb
cmp
shrl
incb
add
aas
sti
ds
push
and
sub
scas
in
inc
sbb
ja
js
imul
push
xchg
out
xor
xor
dec
mov
daa
fisttps
adc
into
scas
mov
xchg
test
dec
push
mov
or
mov
fwait
xor
adc
dec
cli
ror
mov
std
test
jp
in
or
cltd
pop
leave
in
and
mov
rorb
and
sbb
ja
sbb
xor
fistpll
movsl
repnz
leave
lock
or
idivb
iret
inc
sbb
adc
data16
scas
mov
shrl
iret
sbb
repz
int
cld
leave
decl
mov
je
push
cmc
iret
gs
mov
add
jmp
pop
nop
fcompl
fidivs
mov
cmp
pop
aas
dec
mov
cs
dec
pop
xchg
mov
or
pusha
or
dec
xchg
pop
test
xchg
fs
xchg
xor
pop
in
inc
or
add
sti
and
cmpsl
mov
aaa
outsl
add
pop
push
push
movsl
icebp
xchg
adc
pusha
out
iret
enter
mov
aas
pop
sarl
mov
jns
cmpsl
jnp
fwait
mov
push
xchg
fists
ds
sarl
insl
dec
adc
add
popl
fsubrs
insb
sti
or
aaa
pop
aas
jecxz
cmp
xor
lret
push
sub
negl
cmp
les
xchg
aam
pushf
xchg
popf
lret
pusha
scas
loopne
inc
push
das
sub
xchg
push
inc
and
data16
mov
jno
mov
rcll
shr
sub
mov
stos
and
cmpsl
adc
xchg
decl
mov
lods
stos
nop
test
jmp
scas
xchg
mov
lret
xchg
adc
iret
mov
push
fbstp
ror
add
mov
mov
cmp
mov
xor
shlb
pop
push
fcmovnu
jmp
test
test
inc
into
div
fxam
das
outsb
cmpsb
push
cmp
mov
and
addr16
fisubl
clc
aad
shl
insb
shrl
in
fsubr
inc
xchg
jl
mov
sbb
leave
push
sarb
dec
imul
pop
cmp
in
xor
mov
push
mov
push
mov
ss
sub
sub
and
sub
adc
or
cmp
push
xor
je
in
fucomi
ret
test
aam
and
sbb
add
pop
js
je
inc
xor
and
pop
push
inc
mov
dec
les
das
inc
mov
dec
mov
lock
cld
dec
outsl
repz
pop
push
cmpsb
cmp
fdivrl
pop
jmp
sub
bndldx
push
out
je
aaa
fbld
pop
push
xchg
jno
mov
adc
sbb
jbe
iret
dec
pop
sub
scas
cli
jecxz
test
out
stc
mov
pop
es
xchg
shl
xchg
jmp
sub
jmp
and
in
and
sti
dec
enter
mov
xor
mov
jl
jb
xchg
add
adc
sbb
test
sbb
scas
lods
mov
or
xchg
aam
loope
ret
mov
inc
cmc
bound
pop
rcll
loop
mov
adc
stos
pop
cmc
addr16
js
nop
mov
imulb
sbb
push
insl
mov
xor
xor
test
ror
inc
aas
mov
xchg
sub
mov
push
test
jnp
jb
push
xchg
fsubrl
push
push
pop
ds
into
insl
jnp
jl
clc
jg
cmp
push
addb
mov
ret
shr
cmpsl
jecxz
mov
inc
rorb
add
push
push
movsb
repnz
jp
mov
adc
cld
clc
add
mov
xorb
push
cmp
push
jbe
shrl
sbb
or
in
daa
in
inc
shlb
shrb
mov
mov
pushf
insl
add
lahf
cmp
jmp
adc
and
and
sbb
icebp
rcr
hlt
jp
jo
jbe
pop
jne
fs
daa
add
push
xchg
mov
mov
mov
lock
int3
add
jbe
lret
subb
inc
add
loop
shrb
fs
add
cwtl
sar
jecxz
push
push
test
mov
cmpsl
es
sub
scas
out
push
test
fs
cld
aas
adc
xchg
sub
or
or
lods
pusha
lcall
out
ss
ds
or
imul
loopne
rorb
into
cmp
subb
pop
push
pop
out
cmpsb
enter
pop
jmp
sbb
aam
add
or
in
jnp
je
xor
dec
or
jge
xchg
lds
pusha
jle
jg
test
lcall
mov
xor
sbb
inc
sbb
mov
push
call
jno
or
mov
int3
mov
xchg
and
out
lret
xor
movsl
mov
addr16
inc
faddl
jl
shlb
lea
hlt
lret
dec
mov
sub
mov
pop
arpl
mov
mov
mov
std
sub
push
es
push
fsubr
xchg
lcall
sub
cmp
pop
jo
mov
popf
imul
mov
test
cli
out
sub
or
mov
mov
mov
pop
js
sub
punpckldq
and
cli
dec
test
push
jecxz
cmp
loope
enter
mov
mov
pop
dec
inc
enter
pop
outsl
inc
repnz
and
jg
out
lret
cmp
or
mov
or
loopne
push
jno
and
sahf
push
jnp
inc
push
sub
and
mov
jge
in
mov
or
adc
ds
inc
mov
lret
xor
adc
mov
mov
add
push
fwait
push
inc
sub
pushf
bound
icebp
xchg
inc
mov
stos
inc
add
testl
sbb
push
dec
aaa
push
popa
mov
pop
clc
gs
cwtl
push
hlt
jl
pop
lock
cs
ficoms
icebp
pop
pop
sbb
out
jne
arpl
sar
js
les
ja
rcr
fisubrl
inc
push
stc
or
inc
jo
push
ljmp
aas
jb
loop
movsb
sbb
into
adc
idiv
xchg
icebp
out
inc
in
cli
cmp
out
dec
and
out
ja
cmp
or
jb
incl
inc
mov
adc
push
jge
das
jbe
sbbl
das
lret
insb
insb
lret
jp
loop
popa
jmp
sti
lahf
xlat
aaa
ss
and
test
jns
push
pop
mov
lods
push
ja
inc
test
jp
jnp
inc
movsb
xchg
movsb
pop
pop
xchg
mull
cmp
pop
subl
mov
test
fstp
pop
or
pushf
fadd
jb
out
or
pop
pop
lods
jge
push
cmp
sbb
sub
decb
jns
lods
pop
or
shl
lods
pop
lods
mov
dec
pop
pop
repnz
push
das
jecxz
sub
xor
push
divb
inc
popf
and
dec
jle
ret
pusha
adc
orl
dec
inc
push
clc
pop
inc
cli
imul
shll
sub
mov
ss
and
das
add
divl
out
push
test
int3
out
sub
mov
aas
jnp
sbb
mov
add
push
mov
inc
mov
cltd
int
mov
out
int3
xor
out
lahf
andl
and
adc
fcmovnb
push
test
sub
enter
rcpps
shlb
mov
lods
pushf
subl
inc
push
inc
scas
fcmovnb
mov
sub
imul
out
and
pop
and
inc
dec
sti
fisttpl
and
shrb
jnp
xor
loopne
jge
or
cmp
pop
mov
sbb
push
rorl
fwait
cmpsl
xchg
dec
jnp
test
leave
mov
push
les
jp
sub
movsl
xor
adc
pop
or
mov
shll
sbb
or
pop
rcrb
cld
dec
rorb
mov
subl
lcall
lahf
sub
jg
sub
mov
daa
jne
pop
and
lods
pop
lock
push
daa
cmp
leave
cwtl
mov
xchg
inc
popf
xchg
call
dec
imul
ja
inc
pop
fistps
add
fimull
aam
cmpsb
mov
xlat
or
and
mov
dec
and
arpl
push
mov
xlat
mov
fisubrl
mov
add
xchg
sub
cmc
push
inc
sbb
pop
fisttps
fwait
dec
cmpsl
scas
dec
jnp
xchg
call
xchg
adc
nop
insb
call
iret
add
jns
xchg
or
pop
sub
iret
lods
cltd
mov
add
pop
jge
mov
dec
ret
fwait
pusha
es
mov
cmp
xchg
clc
mov
repnz
mov
in
dec
ljmp
sar
xchg
lods
sbb
aas
ljmp
push
jae
int
cwtl
insl
ss
scas
lock
bound
lret
mov
iret
aam
shlb
mov
lock
dec
dec
inc
mov
cmp
pop
je
test
mov
and
add
mov
mov
sub
in
repz
cmp
jbe
pop
jnp
fistpl
imul
in
mov
cmp
xchg
xchg
jle
cmpsb
mov
mov
cltd
mov
sub
jae
popf
enter
in
div
lds
iret
cmp
outsl
cmpsl
shll
sbb
out
fwait
hlt
cltd
lds
cmp
jo
mov
cmp
inc
cs
push
push
ret
adc
scas
aas
ds
adc
mov
fadds
xor
popf
dec
push
stc
adc
inc
mov
and
testb
roll
cwtl
decl
hlt
adc
loope
mov
fwait
lcall
push
pop
adc
lea
lock
and
jnp
sbb
sub
es
jge
jne
jno
mov
in
ds
sbb
andb
jb
in
loop
bound
xchg
popa
adcl
loop
jae
adc
push
cmc
das
mov
jno
int3
mov
popa
hlt
push
push
loope
jae
pop
out
sub
testl
ja
xor
sub
lds
push
js
mov
fs
xor
mov
push
dec
test
in
scas
and
test
xchg
and
add
xchg
in
pop
pop
lcall
dec
jne
scas
pushf
lock
dec
aad
xor
lock
xchg
cmpsb
insb
add
push
and
mov
mov
js
cmp
inc
adc
enter
mov
inc
movsl
pop
push
sub
movsb
mulb
mov
mov
push
adc
xchg
push
adc
and
jl
loope
mov
xor
mov
fisubrl
sbb
sti
adc
mov
push
jno
adcb
mov
or
test
ret
fimull
jmp
shlb
push
insl
adc
fadds
aas
sahf
dec
std
adc
mov
loop
inc
inc
out
dec
mov
mov
rcll
xchg
movsl
sahf
xchg
iret
xor
push
cmp
cld
in
mov
xchg
xor
imul
cli
xchg
cmc
rorl
movsb
ret
inc
xor
addr16
cwtl
pushf
js
iret
out
sahf
test
daa
mov
sbb
in
outsl
pop
cld
or
insl
push
inc
pop
xchg
xchg
xchg
shrl
jle
or
add
xor
inc
mov
sub
pop
clc
rcll
jae
stos
fidivrl
jnp
mov
xchg
xchg
add
outsl
dec
mov
incb
add
je
movsb
cmp
insl
push
jnp
cmp
dec
lahf
jo
sbb
jge
leave
repnz
mov
sub
pop
sbb
int3
mov
cmpb
mov
sbb
jmp
sbb
fdivs
shll
push
pushf
pop
pushf
test
cltd
mov
out
stos
fbld
jl
das
jle
arpl
icebp
repz
jmp
mov
and
cmp
inc
loopne
pop
fisttpl
ja
and
sub
pop
loopne
mov
push
fcmovu
mov
push
or
pop
es
fldenv
xchg
repz
kunpckwd
inc
push
icebp
or
push
add
decb
push
mov
pop
shlb
loopne
lea
inc
mov
xchg
push
mov
sarl
push
sahf
push
loopne
ds
pop
lods
sbb
add
insl
rcll
push
shll
mov
and
add
jecxz
mov
cltd
shll
outsb
jns
repnz
imul
in
pop
xchg
sbb
xchg
into
adc
test
mov
mov
subb
push
mov
sub
jno
sub
mov
fsts
mov
mov
cmpsb
adc
jns
andl
add
xchg
call
popf
popa
sub
repz
data16
sub
shll
shl
add
cld
mov
cmp
jns
cmpsl
popa
fwait
mov
push
add
mov
stos
cmpsl
jle
add
jbe
adc
aaa
bswap
stos
jg
repz
push
sub
fisubrs
int3
adc
out
repz
daa
fadd
sbbb
int3
mov
inc
pop
cmc
and
fldl
pop
cmp
pop
adc
mov
jmp
add
insl
sbb
dec
fcompl
aaa
dec
fs
xchg
ds
mov
dec
outsl
dec
jb
jmp
enter
jp
in
jno
popa
arpl
mov
mov
and
dec
arpl
sbb
mov
in
pop
dec
push
and
cli
inc
aaa
aas
aas
movsl
cmp
lret
mov
bound
or
mov
push
out
test
cmp
mov
dec
scas
test
xor
pop
rcll
cmp
mov
outsb
adc
mov
es
dec
dec
mov
lods
mov
leave
mov
jecxz
cli
gs
adc
out
sbb
xor
pusha
dec
xchg
sub
clc
dec
shrb
mov
lahf
inc
les
leave
lret
imul
push
mov
sbb
jg
add
sub
or
out
sub
mov
out
jle
lret
xlat
movsb
xor
sahf
out
xchg
and
push
call
sti
in
outsb
mov
mov
or
sbb
sub
ja
mov
xchg
jno
cwtl
mov
int
adc
lds
subb
push
xchg
xchg
pop
pop
repz
mov
popf
xor
mov
jnp
cmpsb
and
adc
mov
ret
pop
dec
xchg
dec
out
lcall
xlat
lds
adc
rcr
in
test
mov
incb
fucomp
scas
dec
mov
cltd
xchg
xor
and
sbb
icebp
jle
test
pop
aad
clc
cmp
push
es
in
out
movsb
push
and
push
aam
sbb
mov
pmuludq
pop
inc
leave
push
sub
push
mov
loopne
xchg
rcrb
andl
push
fisubrl
jg
mov
mov
add
in
daa
jmp
xlat
sbb
adc
cmp
das
cltd
ds
ja
jmp
gs
orl
in
adc
fnsetpm(287
loop
aaa
jae
lds
and
aaa
fnclex
mov
lret
mov
lds
cmpsl
fs
sub
mov
jg
test
jecxz
mov
int
fisubs
mov
jnp
cmp
mov
fwait
mov
or
push
shrl
or
andb
mov
fcmovnbe
sub
jle
jo
add
stos
jmp
adc
dec
xor
divl
sarl
jl
push
bound
inc
insb
gs
dec
inc
adc
addb
cmc
pop
sub
leave
push
mulb
sbb
rol
call
cmp
adc
mov
or
mov
scas
inc
mov
pop
mov
ret
mov
xchg
fiadds
mov
mov
push
xor
ljmp
ss
aam
xlat
mov
push
jecxz
ja
xor
fwait
stc
lret
mov
rcr
and
cmp
mov
jns
add
pop
xchg
je
sub
outsl
aas
cltd
or
shrl
xchg
inc
push
pop
add
xchg
and
adc
mov
or
add
or
movsb
test
movsl
iret
sti
xchg
adc
sub
inc
sbb
dec
sbb
cmpsl
sbb
mov
mov
jb
cmp
sub
shll
ss
fimull
xchg
inc
xchg
or
fisttps
jne
push
jp
out
in
pop
fdivs
cld
sbb
std
add
xchg
fisubrs
push
ffree
xchg
xchg
cmp
sub
and
sub
nop
aam
cmp
into
cs
test
or
bound
sbb
sbb
fidivrl
add
sub
in
xor
cmp
mov
add
pop
dec
test
daa
sbb
mov
xchg
adc
push
mov
es
xchg
xor
ja
add
and
scas
and
cs
xchg
mov
and
mov
aas
adc
int
sub
inc
sub
mov
cmc
jecxz
fdivr
dec
mov
lahf
xchg
mov
pop
xchg
cmp
xchg
jg
ret
icebp
lcall
add
sub
insl
jg
mov
shrl
sub
insl
fnstenv
add
sub
or
and
das
shlb
jle
repz
sub
out
loop
fst
lods
adc
mov
nop
cmp
and
cmp
out
repnz
dec
xor
fnstcw
sar
int
add
pop
mov
mov
mov
sub
xlat
inc
push
add
out
xlat
out
mov
lea
jns
mov
xor
arpl
sbb
in
pop
lods
xor
jge
xchg
xlat
jecxz
sub
shrl
repz
sub
cwtl
sub
daa
and
cli
scas
iret
mov
dec
fcompl
roll
jge
lret
shl
dec
jmpw
lret
cmp
xchg
lcall
xor
lods
fldcw
add
jmp
xchg
ficomps
or
xchg
sub
mov
xchg
and
cmp
fidivrl
insb
sub
ds
inc
popf
insb
in
lock
int3
fsubs
test
stc
mov
push
iret
sub
stc
fdivrl
add
and
push
call
insb
pop
push
jo
xor
xor
movsl
pushf
fxch
jnp
jb
inc
mov
shll
cwtl
aaa
aaa
fwait
jmp
cld
subb
sbb
pop
movsl
mov
mov
cmp
push
movsb
arpl
lock
icebp
mov
fdivr
jae
sbb
aas
stc
out
addr16
enter
iret
mov
shll
loop
popf
mov
scas
outsl
into
dec
xor
jo
into
loope
inc
push
jl
pushf
call
push
insl
jg
lea
and
out
jmp
insl
fsts
cmp
add
rcl
jl
jae
push
pop
xchg
mov
in
in
fbld
mov
cltd
push
xchg
mov
aas
add
or
sub
mov
push
inc
ret
xchg
or
push
fnstsw
or
loope
in
test
inc
arpl
lock
data16
cmp
push
aas
mov
pusha
sti
inc
or
aas
int
xor
fiadds
xlat
inc
pop
outsl
or
enter
in
fadd
aaa
jnp
sbbb
pop
or
int3
aad
mov
fisttps
inc
sysret
hlt
pop
in
ret
fbld
inc
clc
mov
shrl
mov
push
cli
or
divb
out
xchg
sub
insb
cwtl
hlt
test
stos
push
das
ficoms
jecxz
pop
dec
cmp
and
sbb
pop
scas
push
xchg
jnp
dec
mov
push
jl
sahf
ficoml
dec
hlt
lds
and
negl
dec
mov
ror
xlat
push
cmc
in
mov
or
pop
push
push
push
jmp
xchg
pushf
adc
sti
mov
inc
test
test
std
lcall
xchg
sub
pusha
adc
outsb
pop
pusha
imul
leave
clc
pusha
mov
xor
daa
loopne
dec
ja
sbbl
in
ja
mov
add
push
and
sarb
es
mov
in
sub
push
jg
push
stos
cmc
push
cmp
xlat
ret
fs
mov
clc
leave
rorl
inc
sub
subb
out
aas
add
out
sbb
out
cmc
scas
add
sub
inc
int
hlt
jbe
add
xor
mov
shl
push
push
and
mov
xchg
pop
cld
xchg
clc
adcb
aas
push
mov
stos
faddp
inc
es
mov
pop
scas
push
sbb
jns
xor
inc
lret
push
xchg
mov
sbb
mov
lret
lcall
pop
cmpsl
sahf
mov
hlt
fmull
sbb
sub
sbb
push
mov
scas
sbb
fwait
scas
mov
outsb
add
int3
negb
push
mov
mov
xchg
jp
out
fldl
and
sub
repnz
fimuls
adc
jb
ret
push
les
ficoms
cmc
push
shll
test
add
arpl
pop
or
mov
adc
ror
jo
sub
fnstsw
adc
dec
iret
ffree
fadds
rcrb
fcomip
ljmp
scas
dec
cltd
mov
or
pop
pop
jecxz
adc
sub
inc
push
inc
arpl
out
xchg
aad
sbbl
add
popa
bound
pusha
xor
daa
out
dec
and
stos
mov
jge
pop
orb
mov
shl
fidivrs
cwtl
jg
ret
xor
sarb
sbb
bound
aad
mov
stos
cmp
ret
sub
fnstcw
outsl
xchg
adc
jne
loop
shrb
mov
stc
popa
dec
outsl
mov
and
xchg
cmp
jg
adc
in
in
sarb
call
addr16
out
or
outsb
mov
adc
sub
sbb
cwtl
aad
inc
test
out
mov
stos
cmp
xchg
inc
jb,pn
mov
ret
lahf
orb
das
test
sbb
out
sbb
dec
cmp
jno
push
das
add
dec
lahf
add
cmpsl
push
scas
enter
mov
sbb
adc
cmp
cmpb
sub
push
lods
sbbb
aad
fidivs
cmc
sbb
test
cmpb
ljmp
dec
test
gs
mov
sahf
out
pop
mov
fmul
popf
popa
xchg
jae
clc
xor
scas
in
pop
cwtl
inc
cli
sbb
cmp
pop
inc
adc
sub
and
or
cmpsl
sti
orb
mov
xchg
push
pop
dec
inc
mov
loopne
imulb
push
mov
loope
jbe
ret
out
sahf
or
or
outsl
sbb
aas
or
xchg
scas
out
ss
bound
or
insl
loopne
push
push
push
inc
and
xor
gs
add
inc
or
daa
pusha
pop
fcomp
imul
cmp
add
orl
and
adc
pop
mov
cmc
shll
sbb
xchg
xor
in
mov
fwait
xchg
outsl
adc
add
data16
or
cli
mov
fidivrl
aad
mov
xchg
dec
inc
ds
test
ss
cmp
xchg
and
jmp
sbbb
mov
mov
fwait
xor
out
std
push
jnp
out
cwtl
dec
push
lods
pop
outsb
fistps
das
cmpsl
inc
shll
iret
adc
xchg
fstpt
popf
test
subb
jge
inc
dec
cmp
sub
pop
push
mov
pop
imul
hlt
test
inc
in
subl
pop
and
and
add
aam
pushf
push
lods
test
mov
ss
and
and
inc
add
rcrb
mov
mov
outsl
mov
ficomps
xor
jnp
mov
push
cmp
dec
adc
jae
scas
aad
mov
jle
mov
shr
scas
enter
push
add
xchg
sahf
and
mov
ret
rcl
aam
imul
mov
lods
adc
and
xchg
pusha
lds
push
es
out
mov
cmc
mov
adc
add
xchg
cmp
mov
imul
lret
lret
sbb
sahf
js
mov
imul
into
fsubrp
cwtl
jno
xorb
stc
jmp
push
sbb
jns
xchg
sbb
addr16
aad
cmp
std
lcall
mov
mov
adc
lds
lret
and
mov
and
xor
int3
mov
cmp
cwtl
in
ror
test
xor
pop
arpl
popf
push
test
fisubrs
jo
or
fwait
ljmp
add
xchg
fstl
xlat
out
or
subb
jmp
popa
and
aas
scas
int
sbb
inc
cmc
push
or
dec
ret
daa
mov
jns
out
sub
or
cmp
mov
hlt
jg
out
pop
call
arpl
mov
mov
movsb
push
gs
or
fwait
shl
jo
jbe
vmovntdq
jb
out
sub
mov
inc
mov
sbb
jg
repnz
xchg
addl
cwtl
cli
idivb
jns
sahf
cmp
cmpsb
sub
pop
lods
jmp
sub
cli
and
rorl
fdivrl
cli
pop
sbb
fsub
cmpsl
cmc
lcall
cs
add
cli
jmp
fisttpl
pop
xor
dec
hlt
adc
int3
and
loop
bnd
jp
xchg
add
add
test
mov
push
addr16
pop
push
push
xchg
aaa
stos
cs
inc
in
mov
ljmp
push
inc
popa
mov
xor
mov
sbb
int3
lods
pmaddwd
rol
ror
mov
mov
ljmp
imul
mov
aad
cmc
test
jecxz
in
mov
shrl
test
subl
sbbb
mov
lcall
cmp
js
ret
inc
pushl
or
dec
icebp
jb
fs
cwtl
popf
jne
jg
inc
sub
xchg
arpl
out
dec
cld
xorb
int3
testb
outsb
and
out
out
jl
out
fmuls
fwait
jae
push
xlat
xor
lock
jae
ficoml
js
jg
xor
jns
xor
hlt
xor
ss
cmp
orl
in
fstpt
test
je
enter
pushf
add
push
scas
pop
cmp
aad
jne
or
inc
mov
lcall
lahf
pusha
cmp
mov
clts
mov
and
in
hlt
das
pop
push
test
fstps
pop
pop
pop
insl
icebp
addb
fistpll
sub
gs
sbb
xor
jmp
cmpsb
pop
or
push
push
into
mov
dec
adc
mov
int
mov
inc
loop
lods
arpl
lret
rcr
aam
js
lds
cmp
cmpsb
stos
inc
push
dec
pop
push
ja
dec
ljmp
add
call
pop
or
movsb
std
xor
push
push
xchg
xchg
out
lock
cmp
mov
adc
mulb
sbb
add
add
je
jle
je,pt
jnp
cmp
mov
mov
adc
lock
inc
aam
xchg
clc
cltd
subb
sahf
pop
pusha
ret
push
shll
cmc
push
cmp
mov
mov
lock
add
rcl
pop
cmp
inc
addr16
mov
loopne
mov
sahf
bound
aad
sbb
xor
es
ror
out
jae
xor
xor
leave
sahf
mulb
out
mov
jp
dec
orb
imulw
loop
xor
or
mov
mov
jecxz
jl
pop
mov
in
jae
test
andb
test
adc
pop
inc
and
addl
ja
xchg
dec
mov
dec
in
rcll
scas
lahf
jecxz
ss
add
dec
fdiv
cmp
dec
pusha
mov
mov
jbe
bound
addl
sbb
xchg
add
stc
pop
popa
out
bound
andl
mov
or
data16
mov
and
or
dec
insl
negb
jmp
sub
or
jle
movsb
or
push
hlt
ja
mov
lret
xor
add
lods
aad
xchg
xchg
movsl
icebp
push
test
mov
test
cltd
das
sti
xchg
mov
push
xor
add
ret
push
cmpsl
outsl
sbb
or
iret
lret
je
nop
cmp
pop
mov
push
lahf
inc
sahf
jp
test
xchg
pushf
pop
int
repnz
mov
push
lds
dec
test
inc
lahf
or
stos
and
lock
xchg
dec
xchg
scas
add
bound
out
xor
sbb
mov
mov
sub
in
das
stos
jae
inc
mov
addb
cltd
jno
mov
mov
sub
or
or
xchg
leave
mov
cmp
ds
cmp
fiaddl
push
roll
add
fcompl
mov
in
pop
mov
push
pop
mov
dec
xor
push
add
pop
addr16
xchg
push
je
fisttps
push
push
mov
inc
testl
pop
fdivrl
lret
sub
divb
jmp
xchg
mov
leave
testl
mov
or
jecxz
mov
dec
out
popa
popa
dec
add
mov
test
fisttps
pop
add
jle
push
lret
ret
in
sbb
icebp
nop
xor
mov
sbb
sub
jb
ret
jno
push
pop
insl
out
xor
jle
fisubrs
push
jb
push
fiaddl
insb
into
inc
sub
adc
xor
mov
mov
andl
imul
or
push
jle
sbb
push
jecxz
pop
dec
stos
adc
sub
stc
and
inc
test
adc
sub
cmpsb
mov
sbb
sarb
lcall
inc
dec
pop
in
dec
out
xor
out
std
add
inc
iret
add
test
pop
jo
mov
nop
xor
cmp
test
lret
jbe
mov
and
sub
fidivrs
push
inc
out
xor
mov
in
dec
xor
fstpt
test
mov
sub
setb
and
xor
mov
imul
repnz
and
and
inc
aaa
rcll
xor
adc
dec
cmc
fcmove
fwait
dec
insb
stos
add
xor
xor
es
dec
jmp
mov
or
inc
xchg
mov
cmp
adc
jo
js
dec
movsb
add
loop
xchg
jge
xchg
aad
imul
inc
inc
xchg
push
ja
push
add
xchg
pop
dec
mov
fisubrs
and
scas
jne
in
es
xor
sub
add
xor
jo
xchg
and
bound
xchg
pop
adc
out
mov
mov
test
dec
sbb
ja
mov
lods
lods
into
mov
dec
insb
pop
sahf
sbb
ss
das
int3
cmp
pop
jo
jge
test
nop
inc
ret
ret
mov
push
enter
add
ja
push
icebp
ljmp
rcll
dec
sub
jno
jo
xorb
cltd
mov
jns
imul
lret
add
mov
sahf
scas
mov
push
addr16
or
jnp
add
xchg
xlat
pop
sahf
mov
jle,pn
pop
iret
pop
testl
popa
loope
mov
stos
and
xor
sbb
pop
dec
lahf
test
insb
and
xor
add
dec
xlat
jns
mov
inc
xchg
and
adc
ja
and
pushf
aad
movsb
lea
loopne
pop
sbb
and
inc
xchg
pop
dec
push
aam
xchg
mov
adc
sub
sbb
or
dec
xchg
mov
pop
imul
imul
jne
xchg
dec
lcall
fcomps
ror
cmp
jle
mov
mov
jns
int3
clc
inc
das
jnp
pop
pop
push
dec
sub
fildl
mov
and
iret
push
sti
xchg
sub
test
les
test
jnp
insb
inc
jb
cmp
xorb
add
lods
sub
mov
cmp
mov
cli
jle
mov
push
dec
arpl
cmp
out
or
sahf
lods
cmp
es
add
nop
lea
repnz
add
push
hlt
dec
mov
sbbl
test
adc
dec
pop
sub
loop
add
mov
mov
sub
enter
xchg
jb
mov
in
std
xor
cmpsb
xchg
into
xchg
push
mov
lods
daa
les
clc
dec
fmuls
mov
in
orb
add
xlat
lea
sbb
push
or
leave
out
ds
push
rorl
xchg
cmp
insb
cmp
jns
loope
and
xor
xchg
andb
dec
mov
xchg
mov
cld
cmpsb
push
jl
rcr
aam
push
sbb
out
lret
in
inc
arpl
icebp
and
or
lea
fwait
sbb
xchg
cmpsb
xor
sti
mov
loope
adc
aad
cmp
inc
cwtl
inc
xorb
stos
sarl
or
rcrl
xchg
cmp
repz
cmp
mov
push
push
jg
pop
jae
pop
shrb
pop
sbb
cmpl
lock
push
pop
fs
jo
or
std
pop
sbb
or
ljmp
jno
in
add
pushf
lahf
inc
stos
and
mov
testl
xchg
es
sbb
out
mov
out
pop
xorl
fists
fwait
or
adc
push
xchg
mov
jne
stos
cmp
dec
xor
roll
and
add
or
inc
test
jp
fldl
jmp
mov
xchg
push
sub
push
std
mov
mov
inc
mov
insl
mov
enter
nop
pop
sbb
pop
mov
sub
mul
testl
and
in
scas
js
repz
jns
mov
and
sub
andl
out
scas
mov
pushf
int3
cmp
cld
pushf
loopne
mov
stos
jb
fadd
hlt
pushf
jne
pushf
mov
mov
insb
pop
push
repnz
mov
mov
push
sbb
xchg
pop
lock
insb
cltd
pop
rcll
adc
jmp
adc
xchg
test
xor
loopne
mov
mov
xor
stos
xorb
xchg
pop
jecxz
sbb
push
rclb
jbe
xorl
outsl
test
ss
pop
mov
iret
movsl
fcompl
sahf
mov
std
mov
push
lret
jecxz
in
inc
call
iret
xchg
jae
adc
jne
out
pushf
data16
cmp
sbb
ds
popf
dec
xor
jne
shlb
ficoml
inc
shll
enter
pushf
leave
xor
adc
ror
call
ss
jle
xor
js
test
mov
out
mov
rcrl
dec
xchg
sbb
cmc
std
jp
dec
into
jns
outsb
scas
dec
stos
sbb
fnstenv
xchg
adc
dec
bound
push
fidivrs
jae
clc
jae
sub
lea
xlat
jae
add
xchg
sbb
enter
inc
mov
inc
ss
movsb
setno
pop
inc
ror
test
jno
pop
mov
push
rcll
outsb
int
imul
decl
xor
popf
js
cmpsb
inc
cmp
dec
das
sbb
xor
aas
mov
es
mov
xchg
mov
fsin
inc
les
mov
xor
inc
jg
push
pop
push
ljmp
sbbb
jne
add
loopne
ljmp
pop
and
insl
repnz
enter
test
addr16
ds
cmp
add
mov
dec
and
mov
xchg
ds
jae
ja
lret
xor
insl
insb
and
repnz
adc
jmp
and
popa
ret
sbb
hlt
sbb
add
pop
in
add
adc
leave
leave
xor
out
gs
xchg
jmp
enter
dec
or
ljmp
mov
xor
push
movsl
stos
xor
int3
sahf
sbb
and
fcmovnb
fwait
test
sbb
in
test
or
dec
xor
cmp
pop
roll
test
mov
out
or
lods
arpl
cmpb
push
inc
jbe
fsubrl
ljmp
das
dec
ljmp
ret
sbb
in
cmc
dec
inc
imul
mov
mov
cmp
rcl
xchg
xchg
mov
stc
repz
pop
mov
in
inc
lods
xor
lret
and
add
lods
jo
test
dec
mov
call
and
mov
add
outsl
lods
or
rorl
xchg
mov
inc
inc
dec
sarl
int3
aaa
jnp
cmp
sti
std
mov
imull
imul
push
dec
or
aam
push
pushf
jnp
add
inc
mov
adc
xor
jo
dec
adc
mov
ret
rcl
cmpsb
pushf
cmp
leave
lret
stos
mov
dec
stos
dec
adc
ja
xchg
inc
lcall
jae
insl
subl
orb
adc
sbb
xchg
and
popa
jmp
es
out
mov
shll
inc
fmul
subl
mov
mov
pop
jmp
jmp
pop
xor
call
test
add
outsb
push
pop
mov
or
mov
sbb
stos
jo
xchg
aam
xchg
cmp
fisubrl
xor
outsl
mov
or
cmp
inc
or
or
push
daa
call
lock
hlt
leave
and
orb
mov
sbb
sub
inc
sbb
pushf
in
and
popl
in
fcmovbe
jne
pop
adc
lahf
mov
lea
sbb
cmp
mov
aaa
jno
nop
push
ja
test
cmp
sbb
mov
test
les
mov
sbb
jae
mov
cmp
pop
cmp
and
adc
out
cmp
es
cmp
and
frstor
mov
decb
ss
lret
jo
xor
jg
mov
xorl
lock
xchg
inc
jp
loop
xchg
pop
rorb
subb
movb
addr16
test
xchg
mov
test
xor
out
adc
or
fstps
add
xor
xor
sti
add
sub
loope
and
in
clc
insb
movsl
mov
in
xchg
bound
ficompl
push
fwait
cmc
sbb
pop
sti
push
jb
sbb
and
mov
pop
fs
cmpsl
fisubrl
adc
pusha
push
cmpsl
sarb
jecxz
and
dec
sub
pop
jne
mov
and
cmp
adcb
out
lock
xor
sysexit
scas
mov
or
mov
xor
fistpl
je
scas
dec
lret
jecxz
gs
mov
or
rclb
lcall
call
pop
push
and
inc
dec
imul
add
cmp
xchg
mov
mov
inc
shrl
xchg
mov
outsl
insl
rorb
outsl
pop
push
pop
fstps
sarb
in
push
ljmp
aas
push
movsb
jnp
xor
addr16
movsl
push
fisubrs
inc
cmpsb
cs
mov
fadd
mov
in
popa
xchg
es
int
imul
fistpl
dec
repz
mov
xor
add
mov
or
lcall
mov
xor
sbb
or
push
and
pop
jno
rclb
and
dec
jne
aaa
lods
fsubs
lods
push
jns
stc
xchg
jecxz
sbb
clc
dec
cld
jo
int3
cmp
ds
lods
daa
pop
xor
add
je
xor
lods
aas
shlb
adc
enter
mov
pushf
popa
push
jb
jl
mov
mov
inc
dec
jb
lcall
fidivs
ret
mov
movsb
sbb
jbe
cmpb
push
mov
and
add
jnp
mov
pop
xchg
sbb
stos
out
in
mov
popl
inc
mov
jbe
dec
mov
stc
push
push
gs
iret
scas
sub
aaa
arpl
stos
out
mov
mov
mov
inc
and
xor
in
pop
in
lret
movsl
pop
cmp
cmc
sub
je
inc
add
dec
int3
sub
movsl
mov
movl
out
inc
popf
pusha
pop
outsl
fisubrl
sub
pushf
lahf
loope
add
insb
fdivl
xchg
jp
cmpsl
jecxz
cmp
imul
push
jno
add
jmp
int
in
cld
pop
rorl
aas
jp
js
cmp
mov
mov
or
jmp
mov
push
leave
sbb
mov
or
and
pop
notb
push
cmp
stos
mov
loop
add
repnz
daa
dec
sub
dec
mov
add
xrelease
xchg
data16
jge
inc
neg
and
xchg
mov
mov
xor
mov
and
lods
pop
and
fisttpll
mov
xchg
sahf
jle
xchg
inc
push
enter
mov
mov
fmuls
xlat
int3
xchg
stos
xor
incb
mov
push
push
xor
sub
ljmp
sbb
repnz
subb
add
gs
out
das
movsb
or
shrl
lret
mov
inc
jnp
mov
dec
or
lock
ret
mov
js
jb
aaa
aas
sti
mov
sahf
xor
mov
cmp
ret
jno
mov
sub
dec
and
sbb
mov
or
jl
mov
add
sub
iret
and
pusha
sub
repz
mov
mov
xchg
in
xor
xchg
sahf
stc
pop
cmc
call
mov
xor
adc
adc
nop
mov
lock
push
popa
or
in
outsb
jns
pop
mov
data16
xlat
clc
mov
lods
cmp
fs
jmp
jbe
test
stos
sti
and
cmp
xlat
mov
jno
idivb
mov
jns
scas
aas
dec
adc
sarl
add
cmpb
sub
in
jg
xchg
hlt
es
lret
outsl
test
sbb
fmul
pushf
pop
mov
dec
adc
test
leave
stos
pusha
lock
sub
adc
sub
das
add
je
push
pop
adc
push
rorb
xor
mov
stos
js
push
xchg
ljmp
nop
outsl
add
test
adc
jle
in
adc
mov
leave
int3
xlat
mov
test
xor
lcall
mov
testb
push
mov
insl
inc
pusha
jae
icebp
sbb
movsl
jbe
jb
push
je
out
cld
jnp
and
lcall
pop
in
jg
xchg
and
cmp
or
ret
xlat
jp
insb
jg
jge
andl
push
push
or
shrl
sub
push
inc
ret
leave
inc
xlat
testb
xchg
ret
pop
push
or
scas
push
mov
jno
adc
push
mov
and
fidivl
in
adc
lret
adc
lret
mov
movsb
nop
push
sub
sahf
xor
frstor
mov
adc
clc
pop
imull
aaa
xchg
lods
icebp
sub
mov
push
mov
xchg
sti
xchg
into
pop
cld
mov
mov
sbb
mov
sub
jmp
shrl
inc
std
mov
mov
pop
mov
jmp
sti
mov
xchg
out
loop
xchg
iret
sbb
ja
mov
cmp
xor
or
in
sbb
push
outsl
jbe
mov
push
xchg
or
daa
int3
aas
rcrl
lods
pop
sub
jne
dec
mov
inc
clc
ficoms
push
ss
push
jne
repnz
popa
and
outsb
jmp
movsl
push
cltd
loope
loopne
push
inc
mov
in
sahf
jecxz
jnp
xor
or
cmc
pop
mov
jmp
aad
jo
ljmp
push
add
and
pop
ja
in
cs
outsl
mov
jecxz
and
jp
xlat
or
repz
lret
sbbb
cmp
incb
int
lcall
or
push
push
inc
inc
scas
stc
pop
push
mov
out
movsl
xlat
xchg
push
inc
jle
std
pcmpgtb
or
mov
mov
sub
in
dec
movsl
xchg
jle
outsb
cmp
scas
sub
sbb
nop
inc
gs
bound
outsl
xchg
sub
sbb
cmpsl
mov
lret
fsubs
jb
insl
xor
jns
sbb
in
pop
cmp
fwait
movl
jne
int
fs
fidivrs
jecxz
pop
mov
push
add
sub
mov
push
xor
fldenv
lret
or
scas
or
lret
inc
push
jbe
and
adc
addb
test
cmp
out
pop
jno
loopnew
into
test
lret
inc
sub
popf
sti
daa
addr16
add
xor
xor
add
jnp
mov
xchg
mov
ds
test
scas
gs
lock
loopne
mov
bound
test
jecxz
push
das
and
and
inc
pop
movsl
cmovge
mov
and
ss
and
or
icebp
shl
cmpsl
pop
dec
enter
movsb
js
mov
sub
mov
mov
scas
xchg
sbb
mov
sbb
jno
inc
adc
lahf
xor
xchg
fwait
test
rcr
cmp
sub
jecxz
repz
mov
xchg
adc
adc
sbb
mov
dec
mov
dec
pop
and
xchg
popa
pusha
outsb
loope
mov
addb
add
imul
push
inc
mov
inc
fdivr
in
aas
inc
rcll
loopne
inc
add
jnp
call
cmc
xchg
push
mov
sarl
cmp
test
inc
stos
lret
cmpl
inc
call
sbbl
sbb
flds
dec
or
loop
push
out
dec
xlat
pop
sub
xor
add
shll
pop
push
arpl
xor
mov
jl
xchg
fidivl
xor
inc
fisttpl
xchg
ret
imul
cmp
mov
xchg
fisttpll
imulb
pop
mov
sub
mov
iret
imul
aad
xor
or
lods
ljmp
add
xchg
sbb
sub
enter
jl
rcrb
leave
push
js
push
lret
or
and
push
jne
xor
das
dec
mov
in
int
cmp
addb
dec
jb
in
cmpsl
inc
stos
jl
aam
jb
xor
andb
rorb
testb
divb
lahf
das
push
mov
test
lods
push
aam
dec
xor
sbb
movsb
rorb
sahf
pop
jae
push
sahf
lds
mov
test
mov
mov
cmp
mov
mov
clc
sbb
pop
xchg
jnp
sbb
andb
mov
fwait
xchg
stos
sbb
jmp
das
add
loopne
dec
cmc
xor
faddl
push
dec
or
scas
ret
ss
lods
lds
push
xor
pusha
push
cmpsb
cmp
xor
std
add
pop
and
mov
jge
and
sti
cmpsb
fsubp
movsl
dec
aaa
adc
rolb
adc
sbb
popf
sub
out
or
daa
cld
daa
mov
and
xchg
mov
adc
dec
and
mov
stc
cmp
or
fmul
fidivl
sti
cmp
push
inc
jle
fwait
repz
pop
xchg
loop
into
in
pop
jno
aam
ja
pop
inc
and
cltd
xor
inc
lcall
mov
nop
scas
into
pop
xchg
imul
int3
and
enter
andb
push
xor
push
mov
or
arpl
scas
ret
jl
clc
rcll
rol
movsl
add
xchg
adc
adc
mov
popa
lret
adc
aam
xlat
add
push
lahf
push
mov
call
xlat
aam
leave
xor
mov
lock
adc
xchg
shl
xchg
cmc
das
fwait
jbe
std
je
cmpsl
jno
sbb
popf
enter
pop
mov
cwtl
sub
xchg
aad
xor
jae
shlb
inc
mov
jns
les
decl
insb
ds
rcrb
pop
dec
adc
mov
push
andb
negl
das
shll
xor
insl
mul
jae
rorb
dec
lods
rorb
pop
rorb
das
sub
bound
rorb
scas
cmpsb
xchg
insb
add
pop
or
pop
lret
jmp
lea
insb
cmpsl
adc
imul
dec
and
or
hlt
sti
repz
xor
icebp
cld
shll
lahf
jae
pop
shr
shlb
mov
iret
pop
xor
cmp
mov
jb
jnp
push
jmp
aaa
cld
and
fst
pusha
dec
jae
or
push
jo
shrb
mull
cmpsb
loope
iret
mov
fcoms
gs
mov
pop
xchg
arpl
dec
iret
sbbl
jnp
sbb
inc
gs
fisubrl
andl
bound
jno
sti
inc
cs
push
mov
addl
inc
push
pop
jo
fdivr
repz
lods
cmp
ljmp
je
pop
mov
rclb
jg
and
je
addr16
sbb
sbb
jbe
dec
or
inc
mov
sub
lock
pop
or
adc
pop
jmp
in
cmp
movsb
cmp
jp
pop
ret
les
and
das
out
out
dec
shrl
pop
test
orl
adc
js
jno
xchg
xlat
push
mov
pop
jae
sub
rorb
push
clc
in
lcall
sbb
mov
jne
jo
inc
out
lret
call
imulb
push
xchg
mov
cmp
mov
mov
push
jge
outsb
or
jecxz
js
into
cmp
push
mov
jne
fcmovnbe
push
add
xchg
andl
or
push
cmpl
rorl
popa
les
nop
arpl
pusha
or
xchg
xchg
inc
mov
sahf
rcr
into
subl
les
stos
in
cmpb
mov
add
popa
in
jl
stc
add
xor
sbb
loop
ret
icebp
aam
shlb
stos
jns
mov
psubd
mov
inc
and
les
jmp
ficoml
cmpsb
lcall
adc
lods
inc
leave
popa
stc
out
out
adc
sub
int
fdivrs
mov
xor
sub
lock
aad
cmpsb
ds
in
in
push
dec
lcall
jae
bound
cltd
cs
pushf
lods
icebp
mov
adc
jbe
jne
jb
xor
out
lods
or
mov
xchg
sub
movsb
subb
xchg
lods
lret
hlt
mov
in
fwait
pushf
insl
jg
cmp
dec
dec
or
stos
ja
pop
fildll
push
cmpsb
scas
mov
cmpsb
movhps
ljmp
and
mov
inc
push
mov
shrb
cmovo
jnp
out
xlat
jecxz
adc
and
jl
lcall
and
aad
sub
fstps
sbb
mov
rcr
jle
jg
adc
sti
inc
faddp
jge
push
dec
pushf
in
fwait
sbb
xor
sbb
cmp
rcr
mov
jle
add
mov
fwait
cmpb
and
push
push
adc
push
repnz
xchg
jp
das
push
cmp
rorb
out
or
xlat
ljmp
into
jb
inc
push
call
inc
mov
push
push
dec
aam
add
stc
shl
movsl
cmpsb
lret
out
enter
loope
repnz
ret
lahf
insb
stos
cmp
cmp
aad
aad
fmull
test
idivl
sub
and
xchg
cld
mov
mov
dec
xchg
test
mov
fwait
shr
sub
lea
mov
gs
leave
out
mov
mov
pop
subl
push
push
cltd
mov
int3
mov
lret
and
into
das
imul
xor
pop
and
sbb
push
lock
mov
outsb
inc
cmp
push
lcall
fs
push
inc
out
xor
daa
dec
add
inc
fs
dec
jmp
lods
pop
jmp
scas
fildl
cmp
mov
adc
pop
mov
jecxz
mov
adc
dec
inc
add
sbb
icebp
cltd
arpl
jmp
sub
in
loop
dec
sti
xor
and
lahf
xor
mov
stc
or
xchg
mov
push
mov
sub
test
dec
addb
ljmp
jmp
inc
loope
jae
push
push
add
adcl
call
pop
dec
andl
movsb
outsb
and
pushw
sarb
aaa
cmp
jnp
jae
adc
test
or
dec
push
adc
popa
push
and
xor
fcoms
lcall
dec
ret
cs
inc
outsb
push
inc
mov
mov
xchg
fnstcw
sub
sbb
in
pop
pop
lret
inc
sbb
cmp
out
popf
lods
test
mov
repz
sub
push
loopne
mov
mov
pop
fmull
movsb
aad
stos
cli
mov
sbb
pop
cld
mov
pusha
add
ror
test
and
sub
es
aaa
lcall
adc
out
dec
aam
and
and
xchg
dec
mov
mov
or
push
or
jle
push
inc
pop
xor
lahf
inc
sbb
loope
out
iret
mov
jmp
loope
sbb
add
jno
or
sbb
add
aam
mov
push
out
inc
sahf
lahf
cmpsb
and
pop
jnp
insl
mov
inc
shll
ret
xchg
dec
mov
mov
xchg
mov
stc
pop
data16
mov
rclb
movsl
or
fisubrs
and
push
pop
sar
adc
inc
xlat
rcll
mov
inc
test
in
sbb
movsb
dec
dec
xor
je
andb
leave
xchg
test
rclb
inc
dec
lcall
add
sbb
push
pop
inc
iret
mov
leave
jae
mov
leave
test
xor
arpl
xor
bnd
xchg
popa
pop
inc
hlt
mov
insl
dec
hlt
xchg
movsb
test
xor
or
jnp
in
ja
incl
pusha
movsb
xchg
sbb
mov
imul
mov
adc
dec
jbe
adcb
mov
cmpsl
mov
mov
and
andb
mov
mov
fldt
cmpl
sbbb
shll
inc
mov
cmpsb
push
fildll
adc
push
mov
jp
lret
daa
pop
mov
mov
push
pop
ret
cmp
daa
out
pop
mov
std
scas
lret
call
in
cmpsl
rcrl
sub
add
jne
ja
movlps
jge
push
idivb
loopne
test
add
lahf
mov
add
xor
insl
or
pop
inc
icebp
ret
cmp
xor
adc
mov
xor
pushf
aam
hlt
lcall
cli
mov
sub
shrl
sbb
clc
pop
sti
ds
mov
enter
fsts
shrb
or
les
push
add
mov
sbb
pushl
dec
movsl
push
and
es
cmc
jbe
lcall
and
imul
mov
xchg
aam
mov
sub
mov
jle
or
into
daa
mov
in
test
popa
xchg
ds
out
cmp
lcall
sub
sbb
or
mov
lea
pusha
xor
xor
inc
mov
mov
jg
inc
xor
xor
call
imul
cmp
mov
icebp
push
xor
cmpl
sbbb
imul
push
adc
adcb
leave
cmp
cmp
push
mov
xchg
xchg
jecxz
inc
pop
jg
repz
sbb
data16
mov
stos
inc
mov
ljmp
popa
cmp
adc
out
lcall
xchg
enter
sub
add
enter
aam
popa
xlat
jle
sbb
imul
jo
push
rcll
add
dec
fnsave
push
jmp
insl
jg
xchg
or
dec
ret
xor
cmpsl
pop
push
xor
sahf
jno
and
in
add
ljmp
outsb
cwtl
and
fistl
fwait
pop
xor
mov
repz
push
loop
arpl
push
ja
outsb
jle
outsb
push
mov
js
insb
int
fadd
les
dec
mov
pop
outsl
dec
inc
std
inc
cmp
and
xlat
or
popa
test
pop
jbe
or
sahf
sbb
lcall
and
andb
fmuls
sbb
cmc
jl
es
pop
jo
loopne
sbb
fcompl
jae
cmc
jl
push
push
xor
inc
sub
or
addr16
push
shll
mov
adc
mov
sbb
loop
jo
sbb
ret
ja
mov
je
rorl
mov
or
jecxz
shlb
xchg
mov
cli
cs
jnp
xchg
int
mov
mov
clc
cli
les
or
fld
pusha
mov
xor
dec
insl
inc
mov
jno
rol
test
sti
jb
fs
rcl
shl
mov
or
int3
or
xchg
aaa
dec
push
or
jo
jns
adc
cwtl
add
loope
jae
rcll
aad
xlat
xorl
scas
rorb
das
or
mov
stos
fwait
jno
aad
cmc
leave
jnp
aam
inc
lret
notb
cmp
lret
pop
addr16
adc
push
ret
cld
add
int
pop
jne
iret
mov
outsb
out
pop
bound
in
mov
mov
test
stos
lcall
sbb
fidivrl
and
adc
mov
push
cmp
sbb
mov
lcall
mov
add
je
test
pop
xor
push
jge
lcall
lcall
shll
mov
lret
add
les
faddp
pusha
addl
pop
pop
mov
pop
fsub
inc
test
lcall
popa
pop
in
sbb
push
icebp
outsb
mov
sub
mov
shrl
in
cld
xor
sbb
es
xor
int
out
fwait
cmpsl
loopne
mov
cmp
mov
ss
adc
and
push
push
xchg
je
or
adc
jl
dec
test
cmpsl
scas
call
repz
xchg
pop
xchg
mov
jae
mov
lock
fwait
out
inc
sbb
xchg
out
push
lea
pop
je
dec
mov
dec
ljmp
movsb
cs
or
pop
movsb
notb
je
in
es
lock
adc
aas
inc
cmp
les
ljmp
or
rorb
mov
pop
inc
cwtl
xchg
xchg
test
hlt
dec
xor
out
call
inc
mov
imul
cmc
xchg
inc
jl
dec
stos
mov
pop
jo
js
nop
jmp
lds
xor
cmpsb
sarl
sub
cmp
mov
shlb
pop
or
aad
lods
dec
sbb
sbb
test
ss
fs
test
jl
mov
mov
das
push
or
inc
adc
test
ljmp
xchg
push
push
sub
xchg
jge
aam
ret
xorl
ja
imul
sbb
xor
test
ljmp
cmp
add
push
in
test
xchg
std
imul
push
pop
pop
jnp
cmp
int3
mov
inc
das
pusha
pop
test
in
or
xchg
dec
xchg
into
xchg
loop
jg
pop
outsb
test
test
jnp
pop
mov
or
xor
cmp
jno
insb
testb
nop
les
jmp
jae
call
aas
test
push
outsl
scas
adc
out
gs
xor
movsl
out
sub
loopne
mov
and
adc
dec
cmp
mov
mov
lea
jl
rcr
or
add
loopne
hlt
cmpsb
jns
sub
roll
sbb
inc
imull
in
mov
mov
dec
gs
addr16
out
in
aas
jecxz
or
dec
out
pop
and
pushf
popa
dec
lods
or
lods
xor
add
inc
lods
jmp
popa
orl
add
pop
in
hlt
lock
pop
jbe
xor
xchg
inc
iret
test
add
and
popf
inc
push
mov
mov
jle
add
ds
add
dec
call
push
xchg
sub
imul
popa
sbb
mov
cmpsl
inc
imul
in
sub
frstor
push
dec
fstps
imul
inc
mov
or
push
xor
mov
std
in
push
shrl
push
in
in
mov
lcall
les
mov
outsl
dec
cmp
and
xchg
ja
ja
insb
popf
roll
lock
xor
jl
test
jb
xor
mov
xor
mov
loop
call
push
push
fsubl
push
roll
out
push
insb
loope
pmulhw
jno
push
lds
push
inc
ret
lret
pop
dec
loope
fsub
dec
in
in
lcall
push
adcl
or
es
sbbb
ret
fs
mov
fdivl
cmp
sbb
xor
or
addl
cwtl
daa
in
outsl
pop
mov
movsl
push
into
mov
push
ficoml
lock
js
icebp
imul
jge
add
jbe
push
repz
jle
pop
xchg
add
add
outsw
popf
fistpl
add
and
mov
mov
in
mov
mov
lea
lock
imul
jl
or
insb
into
cmpsl
lock
push
jo
sub
rcrb
mov
mov
aaa
and
add
pop
pop
inc
adcl
les
cwtl
mov
lea
mov
inc
orb
mov
pop
xor
out
rcrb
sbb
test
cld
outsb
repz
out
arpl
jb
lret
enter
push
mov
jmp
push
nop
pop
xlat
sub
or
xorl
jnp
loop
shlb
sbb
mov
ret
push
test
xor
sub
mov
mov
test
out
and
stos
or
cmpsb
cmp
clc
jne
xchg
cmpsb
add
ret
insb
pop
repnz
shl
xlat
clc
mov
sub
or
inc
out
cmpsb
jo
xchg
shl
cld
xor
cmp
sbb
cld
cmc
test
xchg
test
loop
sbb
lods
xchg
xchg
push
int3
push
outsl
cmp
xchg
clc
xchg
jecxz
and
outsb
pop
pop
push
dec
cmc
mov
xor
xchg
mov
pop
imul
push
imul
out
repnz
clc
ficoml
fwait
push
dec
fcoms
out
test
inc
rep
dec
iret
in
xor
aad
lret
test
mov
xor
pop
jecxz
inc
std
insl
xchg
aaa
or
cmp
cmp
push
es
inc
push
push
sahf
push
inc
jp
xlat
sub
mov
test
mov
xchg
popf
pop
sbb
in
mov
mov
lea
mov
popf
cmp
repnz
push
pop
mov
outsb
loopne
insb
ljmp
ds
sbb
loopne
ss
outsl
or
jns
inc
and
sub
push
stc
mov
lea
pusha
inc
push
sbb
scas
dec
dec
pop
xchg
fcmovne
and
les
jecxz
dec
sub
inc
xchg
mov
daa
pop
pop
jno
aam
flds
mov
pop
sbb
xchg
jecxz
cmp
jae
push
sahf
subl
in
sbb
add
jl
cmpb
push
or
insb
add
cmpsl
xlat
repz
mov
jns
sbb
jo
pop
push
fisubl
hlt
push
mov
pop
pushf
inc
xor
negl
cmp
inc
stos
dec
icebp
nop
mov
loope
pop
negb
inc
sbb
pop
int3
jmp
mov
adc
dec
cmp
mov
xchg
xor
stos
fisubl
mov
loope
pushf
jo
push
sub
jae
loop
mov
lods
aas
outsl
xchg
arpl
ret
inc
mov
cwtl
cmp
out
sub
or
pop
adc
push
rolb
fsubrl
mov
jae
sub
lods
lods
adc
dec
add
mov
mov
aam
pop
push
movq
iret
sub
push
pop
orb
test
sbb
je
clc
xchg
paddusw
or
repz
repz
xchg
jo
inc
xchg
sar
sbb
push
in
sti
push
movsb
mov
loop
sub
pop
andl
ds
fisttpll
sahf
pop
ss
lods
cmp
push
gs
movsl
xchg
jne
js
lock
mov
pusha
loope
test
pusha
sbb
rcrl
sbb
mov
and
aaa
loopne
je
sub
mov
add
rcr
cmpsb
test
in
aad
ficoml
adc
adc
pop
push
jns
xor
incl
lret
aaa
xor
shll
inc
ret
stos
aad
mov
add
push
je
hlt
out
or
test
xor
ss
xor
mov
pop
mov
and
and
dec
movsl
inc
fnstenv
fcmovnu
push
push
pusha
fnstcw
outsb
lret
mov
mov
addl
fwait
data16
movb
loopne
adc
insl
jmp
mov
test
insb
jecxz
adc
add
gs
inc
xchg
mov
sbb
imul
pop
fistpl
out
jno
rcll
ret
ret
mov
jnp
lret
sub
or
inc
add
and
repnz
mov
cmpsl
push
test
js
stos
adc
and
mov
add
cmpsl
out
mov
rcr
adc
jge
jge
imul
dec
or
sti
mov
out
push
ss
xor
dec
sbb
mov
xchg
xlat
pop
xchg
aaa
fsubrs
pushf
dec
pop
mov
sub
xchg
ja
es
or
add
in
aad
pop
sar
ds
into
in
jne
xor
cmp
fwait
push
jg
jge
mov
aam
dec
addr16
das
rol
mov
cwtl
pop
push
pop
jp
mov
jg
adc
adcl
enter
pop
scas
les
movups
rclb
cmp
push
cmp
addl
subb
xchg
fnstenv
mov
loope
cwtl
push
imul
inc
loope
dec
popf
in
cli
adc
inc
lods
in
ret
pop
cmp
sbb
lcall
xchg
movsb
add
jl
xchg
mov
in
out
mov
add
das
ret
xchg
in
nop
adc
roll
into
shrl
jge
pop
jno
inc
imul
cmc
push
stos
imul
xchg
pop
fnstcw
outsl
jnp
loop
mov
jno
js
mov
clc
cld
popf
push
cli
iret
dec
test
inc
ret
add
andl
rcrb
sbb
and
cmc
mov
pop
xchg
lods
xchg
out
xor
cmp
ds
cmp
pop
ja
push
jp
xchg
and
mov
mov
xchg
jno
xlat
dec
xor
shlb
dec
aas
adc
jae
jmp
xchg
sbb
mov
adc
xchg
sub
push
es
rcrl
dec
ret
insl
push
jae
loopne
mov
sub
push
mov
outsl
xchg
add
jp
movsb
test
ds
cmc
test
push
jl
cmc
pop
aam
mov
aam
iret
ja
sub
testb
dec
test
sub
mov
pop
ds
jns
jl
mov
xchg
gs
imul
mov
and
or
mov
loop
mov
or
mov
or
jne
outsb
sub
mov
das
push
aad
int
dec
or
aas
aam
push
fcoml
mov
rcl
push
adc
mov
xor
shlb
jns
jmp
xchg
cmp
arpl
mov
pop
lret
cmp
jmp
insb
cmpsl
mov
ds
mov
pop
jmp
fucomp
shl
ss
and
icebp
jne
adc
in
rcr
sub
je
jno
xchg
movl
sub
add
aam
sub
aas
lea
or
cs
rcrb
inc
pop
stos
cmpsb
nop
jbe
out
imulb
cmpsb
jnp
arpl
sbb
sub
add
mov
lahf
fstps
nop
adc
pop
insl
testb
outsb
cmp
push
std
pop
rorb
mov
lock
cwtl
or
aas
xchg
cmp
data16
stos
fistl
stc
xor
shrb
incl
js
add
pcmpeqd
mov
les
dec
loop
lea
ja
push
dec
insb
enter
popa
or
pop
imul
inc
fimuls
loopne
sub
rcr
retw
iret
andl
inc
jae
bound
movsl
push
cmp
int3
add
mov
mov
cmp
sti
imul
pop
repz
mov
test
movsb
or
les
popa
scas
les
ja
lods
xor
rcl
mov
mov
ss
aam
fistps
jo
repnz
roll
loopne
je
sbb
pop
push
cltd
enter
lds
sub
sti
cld
mov
xor
adc
daa
fcoms
mov
push
loop
aad
push
fbstp
push
push
out
push
subb
mov
add
sti
ret
pop
mov
mov
mov
or
test
jg
dec
mov
inc
add
xchg
in
push
cmp
sbb
mov
xor
add
rcrb
jne
rorl
data16
cltd
andl
mov
imul
jl
sub
inc
outsb
push
faddl
sbb
rolb
mov
push
leave
mov
fisttpll
mov
es
mov
jne
mov
mov
cmp
sbb
mov
shr
je
push
ret
xor
daa
les
xchg
push
mov
mov
pop
mov
stc
push
mov
pop
add
jecxz
out
push
xor
pop
call
cmp
jg
adc
out
and
xchg
pop
or
fists
xlat
xor
or
add
into
xor
xlat
je
mov
jne
popf
jmp
xor
ret
sbb
dec
mov
rol
jns
cmpsl
push
inc
xor
pop
or
in
repz
sbb
inc
xchg
sbb
or
cltd
outsl
inc
inc
pop
pop
mov
and
mov
xchg
lods
sub
jo
sub
pop
negl
aad
jmp
popf
pop
jecxz
jge
sbb
gs
int3
in
mov
into
ja
roll
aas
cmp
cmc
adc
nop
inc
cmp
pop
insl
iret
push
adc
in
fistpl
lea
into
jne
sbb
lret
jl
and
cmp
lods
dec
or
mov
inc
dec
adc
xchg
mov
js
lock
xor
out
je
arpl
and
mov
imul
lahf
dec
pop
jne
sbbb
mov
inc
jb
ret
sahf
leave
fwait
aas
test
xchg
mov
mov
or
sar
fld
ss
and
test
loope
mov
out
mov
ficoml
pop
pop
jg
ja
pop
mov
js
fs
fs
push
ljmp
outsb
jns
es
scas
pop
jge
jmp
cld
stos
mov
nop
sbb
lret
out
aaa
stos
les
les
int
and
movsb
cltd
adc
inc
incb
xor
rep
out
fcmove
push
mov
push
out
repnz
cmp
jae
dec
fcomi
cmc
scas
pop
enter
inc
mov
add
xor
mov
movsl
orl
stc
movsl
mov
push
rorb
bnd
jae
insb
addr16
mov
inc
mov
jmp
clc
adc
iret
cmpsl
dec
push
and
inc
gs
sub
sub
dec
clc
loopne
sahf
pop
je
dec
iret
adc
adc
xchg
clc
sti
imul
mov
mov
fadds
mov
lds
sbb
jno
mov
xor
xor
sub
dec
and
sub
dec
mov
cmp
or
imul
or
gs
mov
and
jne
xor
loop
lock
adc
mov
dec
stos
mov
bound
ficoms
icebp
insb
mov
frstor
sub
pop
aam
ret
inc
repz
push
aam
xor
mov
int
in
mov
dec
add
xor
cmp
decl
mov
lods
jmp
mov
push
dec
lock
sbb
das
rol
add
or
imul
xchg
cwtl
pop
enter
inc
sarl
test
jbe
or
out
popa
nop
add
stos
repz
popa
xchg
fnstsw
jl
sbb
xor
mov
out
add
incl
stos
ja
and
int
xor
repz
popf
inc
mov
mov
test
insb
in
jb
insl
aaa
xchg
xchg
pushf
xor
imul
sbb
clc
mov
nop
hlt
cmp
stos
orb
or
pop
inc
jb
push
sub
ret
mov
ja
mov
iret
mov
push
jmp
aam
push
push
mov
sub
mov
xchg
mov
xchg
insl
add
imul
mov
shrb
pop
pop
arpl
mov
xchg
push
int3
cmp
hlt
xchg
xchg
mov
adc
lods
and
test
hlt
dec
mov
adc
gs
dec
aam
imul
pop
scas
jge
decb
push
jne
mov
ss
pop
test
shlb
jns
push
movsb
mov
jbe
jno
out
pop
std
fildl
aas
mov
movsb
jge
jecxz
xor
jmp
ss
jmp
jle
dec
mov
xchg
inc
cmp
jae
hlt
lahf
jbe
cmp
inc
sub
cmp
loope
sub
roll
xor
js
xor
insb
sbb
daa
ljmp
ds
xchg
in
ret
pop
mov
xlat
fcomps
cli
mov
test
iret
sub
enter
fiaddl
or
push
ret
jns
add
movsb
push
mov
and
push
push
lods
and
push
jp
mov
fstp
lock
std
adc
xchg
lea
adc
lcall
aas
fstp
js
sub
mov
mov
out
mov
dec
or
sbb
jmp
fwait
aad
mov
pop
popf
sbb
insb
out
insl
das
in
das
cmp
jne
test
xchg
pop
cmp
cmp
jge
push
je
mov
adc
rcl
add
mov
pop
push
ret
and
jb
ds
and
adc
pop
fsubl
add
sub
or
cmp
es
sbb
idivb
stos
pop
xchg
cwtl
mov
sub
fidivl
xor
insb
mov
jb
pop
jae
popa
pop
cli
push
jl
pop
cmc
sarb
lods
or
xlat
imul
adc
popa
mov
mov
arpl
pop
arpl
andl
stos
clc
sub
push
mov
cmp
pop
mov
add
add
pop
sub
dec
sbb
mov
and
fsts
mov
jb
scas
imul
aad
pop
push
divb
xor
loope
and
cmpsb
mov
push
aam
fstps
stos
fs
xchg
sbb
push
jae
adc
fstpl
lock
cltd
adc
test
push
popf
dec
inc
dec
xor
mov
mov
stos
cwtl
mov
loope
jmp
rolb
mov
scas
sbb
sub
gs
push
inc
jne
js
repz
jmp
fbld
push
dec
daa
xor
fisttps
mov
fldt
jp
scas
repnz
jns
test
enter
cmpsl
cmp
sub
pop
cmp
mov
jg
roll
mov
imul
xchg
cli
or
pop
sbb
sub
ds
lods
sbb
add
out
in
pop
cwtl
xor
leave
loope
mov
repz
movsb
dec
insl
lods
mov
adc
ror
xchg
into
xchg
pop
mov
inc
xchg
xchg
test
adc
sbb
in
test
into
inc
inc
jl
push
xchg
push
pop
add
push
std
mov
mov
fwait
pop
sub
mov
call
stos
arpl
pusha
mov
call
mov
mov
mov
lock
jecxz
adc
pushf
mov
out
lock
ret
test
cmpsl
dec
adc
sub
mov
and
add
mov
xchg
ljmp
sahf
scas
add
stos
xlat
push
imul
adc
xchg
pop
int3
and
cli
adc
mov
fs
mov
dec
arpl
dec
rorb
fmul
push
mov
daa
out
sar
xor
sarb
cmpsl
jnp
ret
xor
cli
das
adc
jb
mov
std
jbe
test
in
fbld
and
mov
lods
pop
jg
inc
popf
leave
lods
sub
icebp
out
pop
enter
or
rorb
insl
add
das
scas
stc
leave
ds
xchg
ffree
cli
stos
xor
cmpsb
xor
testl
inc
aas
cmpsl
cmp
sub
test
ret
xor
sub
ficompl
popf
inc
fdiv
movsb
pop
int
xchg
mov
push
and
dec
cmp
cmpsb
push
pop
sbb
pop
dec
and
imul
dec
clc
sbb
out
gs
mov
outsb
cmp
jns
sbb
pop
das
loope
pop
test
push
in
mov
sahf
mov
or
mov
imul
stos
ret
or
mov
lods
lock
adc
vpmacswd
mov
fldcw
aad
push
fistps
inc
fldcw
inc
scas
mov
insb
dec
cli
movl
mov
jb
in
aaa
gs
sbb
push
je
stos
mov
fadds
xor
addr16
fidivl
pop
insl
xlat
jne
jg
ret
mov
test
xchg
ljmp
cmpsb
xor
or
popf
jbe
mov
orb
fwait
outsl
in
call
call
xor
test
daa
mov
rol
mov
sbb
mov
incb
mov
inc
inc
rcrl
outsb
xchg
cmc
shl
push
mov
xor
fcoms
mov
cmp
mov
cmp
xchg
gs
je
mov
pop
outsb
xchg
xchg
int
popa
xchg
dec
ss
adc
pop
or
loope
ds
ljmp
xor
in
mov
sti
mov
insl
jnp
aad
push
mov
or
pushf
mov
sti
das
and
sbb
adc
scas
and
stc
xchg
jne
nop
xor
pmaxsw
fwait
in
shr
aad
iret
fwait
out
push
int
daa
mov
sub
adc
jo
clc
insb
mov
enter
repz
jo
and
punpckhbw
push
pop
cmp
cmp
mov
add
dec
dec
add
repz
dec
push
shlb
and
push
popa
or
pop
or
insl
mov
sub
push
cmpsb
test
lods
mov
jnp
and
stc
mov
lods
mov
add
or
pop
push
insl
xchg
mov
jmp
adc
imul
xchg
stos
cwtl
mov
pop
sub
enter
enter
test
dec
into
lods
and
dec
rorb
mov
sbb
les
xchg
gs
and
and
jecxz
lea
sahf
leave
sub
sarl
cmp
jle
sahf
js
ficomps
shlb
sahf
out
fldcw
cmpsb
and
pop
clc
mov
sbb
into
insb
jbe
mov
dec
jmp
movsb
mov
pop
movsbl
add
je
inc
aas
xor
rcrb
inc
cltd
popa
inc
repz
or
dec
sbb
cmc
xor
repz
push
js
mov
cld
push
je
lods
stos
sbb
pop
cmp
dec
cmpsb
or
imul
outsb
and
jb
cmpsl
ror
inc
pop
mov
add
inc
cmp
adc
in
jbe
loopne
mov
push
xor
xlat
jns
or
mov
adc
dec
mov
shrb
dec
nop
sahf
iret
mov
dec
rclb
gs
and
mov
pop
nop
mov
jbe
cmp
mov
push
pop
je
int3
loopne
ss
sti
fildll
inc
and
mov
mov
jge
inc
sub
push
jmp
inc
fisubrs
int
lret
cmp
or
xchg
cltd
xchg
mov
inc
xchg
cmpsb
mov
mov
clc
jne
xor
push
pop
cld
bound
dec
sbb
mov
das
push
popf
mov
sti
out
sub
pop
adc
xchg
popf
mov
xchg
jecxz
es
mov
or
hlt
sbb
xchg
daa
movb
stos
and
jge
inc
popf
pop
in
lods
push
jnp
cld
cmp
and
cmp
out
pusha
sarb
jmp
out
lds
add
adc
jo
jo
push
adc
fdivs
mov
sbb
pop
push
dec
sarl
movsl
enter
imul
gs
cmpsb
js
fisubs
mov
in
pop
cmpsb
sbb
lret
dec
jno
imul
jecxz
jmp
mov
repnz
jmp
in
sbb
sub
inc
pusha
xor
das
xchg
nop
movsl
and
sbb
test
inc
and
push
test
add
xchg
lcall
jnp
loope
jb
push
stos
dec
adc
xchg
push
lds
mov
in
mov
icebp
jb
dec
rol
or
dec
aam
lods
push
mov
and
repz
push
jae
je
xor
xchg
aas
dec
sbb
cmp
lahf
nop
cwtl
adc
sbb
shrb
mov
jno
and
out
mov
outsl
jle
aas
imull
shrl
inc
or
out
push
pop
push
outsl
pop
inc
sub
sub
cmp
rorb
repnz
pushf
lahf
cld
cmp
pop
adc
test
in
and
jb
mov
shlb
ret
clc
cmp
repnz
push
je
test
sub
movsb
jne
shlb
cld
std
jb
dec
scas
cmp
cmpsb
daa
nop
sub
sarb
adc
push
hlt
outsl
dec
out
cmp
push
sbb
pop
insb
addr16
push
lods
mov
jo
outsl
aad
enter
enter
jle
in
mov
mov
call
mov
in
jne
jo
inc
pop
jmp
in
test
jbe
ds
push
fwait
insl
xor
add
lahf
xor
mov
xlat
sub
jecxz
jbe
pop
mov
repnz
push
pop
cmp
shll
decb
add
sbb
cltd
dec
fisubs
or
push
sbb
gs
arpl
pop
test
addr16
push
lods
test
pop
xchg
push
mov
icebp
push
push
adc
setg
scas
mov
sub
popf
divb
and
andl
xor
mov
mov
xlat
adc
out
xchg
hlt
shrb
jg
sub
je
jl,pt
test
xchg
lahf
sub
dec
or
xchg
mov
insb
mov
cli
gs
xor
push
aad
sub
or
mov
in
leave
outsl
int3
dec
xchg
jbe
rep
lock
jae
inc
pop
sub
pop
xor
jge
pop
mov
xor
jle
xchg
sbb
cmp
aas
xchg
aam
cwtl
in
std
or
mov
test
sbb
push
mov
push
sbbb
sarl
xchg
push
sbb
in
lret
arpl
test
cmpsl
out
aad
int
rclb
xchg
jno
sub
gs
adc
sub
mov
sub
jecxz
dec
jae
aad
or
mov
inc
enter
cmp
fisubs
outsl
gs
insl
jae
pushf
or
in
xor
clc
mov
mov
inc
adc
stos
pop
pop
repz
mov
repnz
ds
lds
test
rcrl
cmp
jl
loop
push
jno
adc
lods
xchg
and
add
in
incl
mov
inc
in
pop
orl
lret
in
mov
sbb
daa
movsl
cmp
push
inc
rcll
mov
adc
fincstp
push
xor
xor
sub
das
push
sub
mov
lock
mov
cmp
mov
or
or
pop
and
inc
mov
xchg
adc
test
iret
jp
scas
sub
jmp
pop
push
jmp
add
popa
sti
ljmp
adc
or
add
sbb
aad
idivl
lea
les
sbb
mov
out
out
nop
int3
adc
aaa
push
lahf
xor
es
data16
movsl
pop
sbb
sarl
std
lahf
mov
xlat
dec
lret
sub
xor
fsubrs
aaa
sub
mov
std
xchg
jnp
rolb
cmc
cmp
js
out
jnp
sbb
sub
pop
jbe
fistps
movsl
lea
add
and
stos
mov
scas
and
pop
ret
inc
out
daa
test
or
sub
loope
fwait
cmp
scas
cmp
scas
mov
xor
cwtl
imul
fildl
jnp
js
push
fldt
add
xlat
jmp
xchg
popa
ja
pop
jg
ret
rcl
xor
adc
push
orl
xor
lods
in
push
push
lock
cli
ja
loope
xorl
filds
in
shl
mov
js
add
fcmovne
push
xchg
test
leave
or
mov
xchg
sarb
es
jns
mov
adc
fs
int3
rcrb
clc
sub
add
xchg
stos
mov
mov
ss
adc
stos
not
cmp
daa
dec
loope
cmp
cli
or
jnp
pop
and
cwtl
mov
fxch
sub
faddl
push
add
movsl
mov
les
aad
push
fcmovb
daa
rorb
dec
sub
mov
insl
adc
inc
pusha
adc
sub
push
pop
adc
ret
bound
out
js
lods
adc
jno
xchg
push
xchg
cmp
cwtl
ljmp
insl
hlt
inc
icebp
pop
mov
push
loope
stc
adc
mov
outsl
and
test
inc
mov
stos
lods
mov
pop
mov
xchg
mov
roll
push
aad
iret
fdivrs
xchg
mov
xchg
mov
inc
ljmp
cwtl
mov
iret
mov
popf
cmp
in
inc
je
cmpsb
stos
push
sahf
xor
mov
pop
in
pop
insb
sbb
dec
insl
pop
lret
into
sbb
cli
xor
xor
cmp
xchg
into
std
shl
xorb
rorb
add
pusha
mov
or
mov
adc
inc
out
cltd
jle
mov
xor
push
ss
clc
sbb
xor
cltd
sarb
add
mov
mov
adc
add
jmp
lcall
pusha
push
sub
repz
pop
add
adc
imull
sbb
jne
sub
shlb
xor
aam
pusha
push
das
notl
mov
stc
xor
repz
jp
adc
mov
add
shrl
dec
arpl
popf
or
or
pop
dec
js
adc
ss
aas
and
test
out
add
xor
mov
add
pop
push
aaa
test
sahf
and
pop
test
lahf
dec
rclb
mov
pop
cmpsb
adc
push
pop
mov
mov
loopne
lcall
imul
out
ret
mov
pop
fs
jmp
sbb
mov
sbb
movsb
lcall
sahf
pop
sbb
pusha
sub
sahf
fisubrs
xchg
xlat
xor
imul
cmp
loope
icebp
mov
into
push
pop
ljmp
jne
jns
and
test
pop
inc
out
mov
and
scas
repz
movsl
mov
sub
addb
lea
pop
lret
mov
sbbl
addr16
xor
lret
movsl
data16
test
out
loop
lcall
and
mov
push
cmp
mov
out
inc
mov
pop
sti
mov
dec
add
pop
rcrb
push
dec
push
ja
sub
mov
dec
mov
cmp
sub
sbb
push
sahf
xlat
mov
sub
clc
incl
inc
mov
negl
idivb
dec
fnstcw
xlat
jb
jne
cltd
xchg
int
pop
or
arpl
jnp
fwait
hlt
mov
dec
aam
sub
call
pop
mov
cmp
outsl
mov
faddl
rclb
faddp
mov
jnp
xchg
aas
xor
or
clc
dec
decl
sbb
and
dec
mov
mov
mov
mov
cltd
sub
jae
dec
mov
loopne
stos
cmp
popa
outsl
sar
xchg
and
divb
pushf
gs
and
cmp
fldenv
ljmp
and
cmp
ret
dec
arpl
xchg
push
sbb
push
mov
or
orl
mov
imul
or
jno
idivl
cld
repz
popf
fistpl
sbb
jg
push
dec
adc
xchg
shl
sarb
fisubs
mov
fdivs
imul
movsb
mov
scas
rol
xor
out
out
xchg
push
mov
cmp
adc
cmp
xchg
in
mov
adc
add
popa
out
dec
loope
ss
push
jo
call
lea
out
sub
sub
sahf
push
stos
jp
test
cld
aad
mov
push
insb
icebp
jmp
mov
cmp
negb
mov
xor
mov
push
repnz
iret
bound
cmc
mov
test
cltd
sbb
std
add
ljmp
shrb
cmpsb
and
ja
mov
add
stos
mov
lret
xchg
mov
mov
jne
push
mov
in
xchg
cli
stos
push
shl
xor
mov
mov
enter
dec
outsb
shll
jno
lcall
ja
stc
pop
mov
outsb
or
in
pop
xchg
and
push
aaa
sti
cmpsl
or
mov
iret
cmp
and
fcoml
lods
in
popf
xorl
push
mov
mov
and
mov
xchg
jecxz
sbb
adc
fdivs
repnz
ss
test
mov
push
call
jmp
in
dec
xchg
mov
sar
push
shll
gs
adc
repnz
mov
xchg
adc
and
jle
enter
jae
mov
repnz
mov
aaa
sub
mov
xor
lods
sub
pop
sub
cmp
adc
in
jge
and
add
and
popf
push
std
lret
push
inc
rcl
out
cld
and
adc
insb
jg
push
insb
cmpsl
mov
es
addr16
mov
enter
push
xor
fisttpl
sha1nexte
push
mov
dec
cs
jnp
sub
outsb
test
and
shrl
shrl
sahf
call
mov
dec
push
lods
sti
stos
data16
lods
cmpsb
bound
push
fdiv
nop
lret
lods
loope
jle
or
ret
xor
adc
lock
repnz
rcr
pop
lods
cwtl
sub
ljmp
xchg
fwait
addr16
dec
loopne
mov
mov
inc
es
add
mov
mov
mov
daa
movsb
mov
xchg
lods
stos
mov
dec
adc
mov
lret
ficoms
push
xchg
sub
outsb
aas
int
rcrl
fmuls
xlat
mov
sahf
mov
mov
or
fsts
push
jmp
in
clc
cmc
mov
scas
sbbb
loope
cltd
fs
out
scas
xor
mov
ret
push
stc
inc
mov
or
cmp
stc
adc
ror
xchg
lea
jp
cmc
fidivrs
cmp
jbe
outsl
mov
jb
sub
lds
xor
push
sbb
fisubrs
gs
xlat
pop
sub
push
stos
lods
sbb
loopne
dec
xor
lods
ljmp
mov
pop
add
pop
clc
xor
lock
push
mov
mov
jle
dec
adc
mov
and
mov
outsb
lcall
dec
xor
xlat
andl
loope
mov
xor
outsl
mov
lds
add
mov
fimuls
pop
or
loop
jbe
push
gs
lret
lock
add
iret
cwtl
pop
jno
xor
cli
nop
std
adc
fucomip
fldenv
mov
int3
sub
adc
dec
xor
sub
lds
mov
test
in
mov
jecxz
xor
loop
popf
rolb
sub
or
mov
fadd
xor
fcoml
jge
cmp
outsb
pop
push
lret
mov
jmp
inc
popf
rolb
mul
jl
insl
or
xchg
jge
and
das
test
push
sbb
add
dec
lods
lods
clc
fstpt
mov
dec
cmp
fistpll
fwait
std
cmpsl
inc
mov
xchg
nopl
adc
ljmp
mov
psubd
test
inc
loope
scas
mov
add
mov
mov
jecxz
xor
test
xlat
mov
dec
arpl
jg
dec
ret
std
xchg
ljmp
fstpl
mov
push
sahf
out
push
jecxz
add
sbb
mov
scas
lods
and
push
hlt
jg
or
sarl
cld
add
mov
int
addr16
xor
sbb
push
xor
and
cmc
popf
stc
xlat
addr16
xchg
pop
notl
mov
and
out
jge
xchg
xchg
mov
lahf
test
sub
loop
mov
mov
jbe
bswap
out
jo
dec
adc
fs
mov
mov
sub
inc
test
outsb
jmp
and
fs
lods
nop
pop
mov
rolb
inc
sub
xlat
dec
loopne
mov
add
dec
sti
pusha
loope
jno
lret
iret
jns
je
push
js
adc
xchg
aas
or
jns
test
mov
ret
hlt
add
outsl
lods
pop
loope
xchg
mov
adc
and
or
jp
insl
xchg
mov
out
dec
cmp
pop
addr16
leave
cld
enter
mov
dec
lock
add
sub
rcll
in
xor
pushf
pop
inc
mov
insb
fldcw
imul
push
and
rorl
js
add
mov
inc
les
add
inc
sbb
sub
mov
sti
cmp
push
roll
jp
test
js
xchg
pop
lret
mov
loop
cld
scas
pop
data16
mov
mov
int3
inc
add
inc
scas
jno
fcmovnu
ja
mov
mov
xchg
repnz
sbb
sti
pop
dec
sbb
add
push
push
leave
mov
fucom
xchg
fidivrs
flds
shll
roll
std
adc
push
jne
pop
mov
mov
mov
addr16
or
add
mov
stos
sarl
imul
or
push
mov
mov
fdivrs
mov
repz
sub
pushf
add
push
arpl
pop
int
mov
push
test
imull
pop
cmp
xchg
test
mov
call
jecxz
xchg
cltd
mov
cmp
adc
xor
lock
out
cmp
popa
notl
mov
insb
les
mov
in
mov
out
imull
sahf
pop
test
or
pop
or
fimuls
movsb
fimull
cmp
sbb
lret
dec
leave
dec
xor
arpl
call
push
xchg
outsb
dec
sbb
dec
mov
cmp
adc
sub
roll
xlat
ljmp
gs
adc
push
clc
jge
in
das
mov
testb
and
arpl
mov
inc
sub
dec
cmp
mov
lret
fadds
xor
nop
sbb
call
ret
jge
jns
adc
scas
mov
xchg
pop
lahf
arpl
popa
ds
icebp
rorb
cmova
cmpsl
push
xor
cwtl
push
xchg
mov
push
xor
push
mov
mov
sar
jecxz
hlt
sub
pop
sti
mov
jo
je
push
aad
lahf
enter
cmp
push
and
data16
test
les
mov
aam
fisubs
jp
mov
xchg
or
mov
dec
lds
lret
or
sub
dec
push
push
inc
int3
jg
aam
jno
add
fisttpl
inc
pop
dec
cmpsb
cmp
out
cmpb
shll
in
inc
insb
jns
icebp
pop
dec
movsb
test
mov
cmp
push
sub
cwtl
inc
in
xor
push
ja
cmp
dec
mov
test
daa
sarb
outsb
fadd
mov
bound
xchg
es
lock
fcomps
add
out
cmc
mov
daa
sub
movb
shlb
mov
inc
xchg
jecxz
adc
insl
xor
cmp
divb
jge
out
mov
ljmp
test
orb
mov
in
jge,pt
sub
or
inc
divb
insb
xlat
iret
vfrczpd
push
adc
clc
mov
adc
dec
lods
mov
sbb
sbb
iret
dec
or
out
iret
mov
ss
sub
mov
mov
addr16
mov
popa
pushf
adcb
mov
es
mov
inc
insb
stc
roll
add
pop
aaa
sub
add
test
fdiv
add
add
rcrl
outsb
cs
adc
in
rcll
jecxz
fnstsw
std
xchg
push
fiaddl
int3
and
cmp
sub
sbb
scas
pop
aad
divl
sahf
loopne
and
push
lcall
jmp
jo
mov
rorl
xor
lahf
out
in
das
mov
cwtl
xor
fucomp
data16
adc
clc
movsl
fwait
inc
xchg
pop
or
and
dec
daa
jmp
and
adc
stos
cltd
rclb
out
imul
mov
dec
push
lods
addr16
out
sti
int
addr16
movsl
cwtl
push
loop
mov
hlt
mov
cwtl
gs
push
fsubrs
jmp
mov
sub
popf
ja
add
aaa
mov
and
adc
std
decb
aad
push
push
jmp
xchg
lahf
aaa
push
cmp
je
rolb
arpl
xlat
cmp
popa
add
push
lock
les
sub
rorl
push
std
lds
cs
pop
jmp
or
lea
addr16
scas
jbe
and
sbb
movsl
pop
stc
xchg
jg
or
sub
pop
outsl
pushf
icebp
bound
mov
xchg
or
repz
je
xchg
arpl
xlat
sahf
xchg
mov
and
xor
test
cmpsl
xchg
add
pop
mov
imul
xchg
xchg
xchg
and
jb
sahf
mov
ljmp
sbb
popf
std
add
fwait
shrb
sub
push
cmc
cmp
push
bound
cmpsb
lods
xor
add
fs
arpl
sbb
fcomps
pop
cmpsl
rcrb
repnz
daa
or
jno
sbb
sub
mull
xor
and
fdiv
popa
pop
popf
shlb
cmp
or
imul
cmp
adc
jnp
aas
aaa
adc
pop
sbb
inc
out
or
lock
mov
lock
imul
adc
iret
mov
xchg
lea
cwtl
xlat
jb
pop
repz
cmp
add
mov
mov
ss
stos
arpl
bound
xor
sub
aas
mov
jecxz
sub
push
add
nop
jae
mov
repnz
jg
adc
lcall
adc
lret
xchg
into
sub
int
pop
push
sbb
lcall
and
out
xchg
xorb
jge
shl
jl
pop
and
repz
or
xor
popf
mov
scas
stos
and
lret
cs
sub
lgs
aaa
and
adc
lahf
in
das
mov
mov
mov
test
adc
adc
sub
xor
pop
sub
aas
sub
inc
jbe
dec
lock
inc
loope
adc
inc
jae
push
cli
dec
xchg
jno
outsb
and
jbe
loopne
clc
or
rol
out
adc
aas
stc
sti
cmp
and
js
dec
in
fdivrl
adc
jp
inc
lods
test
push
mov
movsl
subb
aaa
pop
and
mov
pop
idiv
sbb
ja
dec
imul
add
in
cmp
jl
xor
lret
ljmp
fld
and
stos
jb
clc
mov
popa
cwtl
in
cmpsl
jmp
icebp
movsl
pop
ficomps
push
dec
sbb
push
mov
mov
popf
mov
movsb
leave
mov
lret
push
dec
push
outsl
loop
push
jno
es
mov
leave
sub
or
lcall
push
push
cld
sahf
inc
push
and
and
xchg
addb
push
rorl
xchg
xor
sbb
jno
fucomp
inc
test
dec
orl
gs
adc
aaa
sbb
shll
leave
pop
imul
mov
inc
mov
xchg
stc
pop
scas
mov
pop
inc
mov
cmp
pop
sub
xor
and
inc
inc
jb
push
dec
inc
loope
xchg
mov
cmp
mov
mov
cmp
inc
mov
sbb
mov
daa
outsb
shlb
subb
push
imul
inc
xchg
jp
and
dec
push
mov
dec
sbb
mov
mov
cld
or
ljmp
cltd
orb
pop
xchg
scas
pop
cmp
xchg
xchg
or
hlt
mov
xchg
pmullw
lock
ret
xchg
outsb
mov
push
int
pop
movsl
insl
dec
imull
pop
js
sbb
xor
cmpsl
inc
push
push
or
loopne
jb
and
scas
int3
fwait
jecxz
scas
lcall
add
mov
jle
fsubrl
push
lret
xlat
stos
add
sbb
call
xchg
dec
jg
cld
addb
stos
mov
insb
or
jge
stc
dec
in
xchg
addr16
cmc
arpl
jl
sbb
shl
dec
push
pop
popf
insl
in
fwait
push
inc
in
outsb
lods
or
dec
imul
xchg
xor
pop
lds
nop
mov
cmpsb
and
ret
add
icebp
dec
rcl
adc
scas
aaa
push
jnp
jg
repz
pop
jecxz
aam
sbb
cmpsb
pop
ljmp
add
popf
addb
cwtl
mov
sbb
jae
repz
std
xchg
sbb
fisubl
mov
popa
adc
sti
rclb
inc
push
pushf
and
adc
mov
iret
loopne
outsb
push
mul
rcll
stc
insb
bound
je
adc
inc
mov
in
ficompl
xchg
in
cli
push
xor
xchg
push
adc
jnp
pusha
adc
xor
in
sub
xchg
jmp
mov
and
sub
subb
movsl
lret
je
xchg
roll
int3
mov
mov
jge
fsubl
repz
dec
ds
in
sub
mov
rorl
jae
dec
fnsave
mov
xor
inc
fcompl
add
int3
jecxz
insb
ret
mov
sub
loop
inc
scas
sub
mov
mov
in
in
mov
and
add
push
dec
inc
aaa
inc
pusha
inc
arpl
inc
fimuls
jno
andb
add
fstl
xchg
lret
and
cmp
dec
dec
push
or
pop
jmp
cld
mov
push
cmp
cld
pop
add
leave
or
add
adc
aam
outsl
negb
lock
mov
popa
dec
imul
or
data16
lcall
pusha
mov
xchg
inc
sbb
sub
xchg
adc
sbbb
inc
push
mov
add
mov
push
or
lea
push
dec
loope
sub
push
loope
mov
pop
sub
xlat
xor
dec
cmp
jmp
add
add
dec
sub
mov
inc
gs
jnp
inc
xor
or
es
mov
addr16
add
out
sti
push
jg
jle
cs
mov
pop
stos
sub
imul
leave
outsb
jnp,pn
gs
pop
cld
cmp
mov
mov
mov
rorb
cmpsl
xor
push
leave
and
mov
xor
add
add
mov
mov
repnz
repnz
adc
out
aas
push
cli
lock
movsb
mov
dec
pop
sbb
cld
dec
xchg
push
jecxz
imul
pop
aaa
xchg
icebp
and
out
das
repnz
mov
mov
aam
push
sbb
inc
push
jle
lahf
adc
popa
fdivrl
adc
xchg
lret
jnp
and
sbb
scas
xchg
inc
stos
std
lods
cwtl
adc
mov
fwait
ja
cli
fidivl
sbb
adc
jecxz
out
add
lock
mov
xor
sub
int3
cli
xlat
mov
inc
mov
xor
sub
push
ret
mul
push
fcmove
push
loop
mov
mov
std
xor
add
stos
gs
cmp
test
mov
cltd
pop
out
loop
adc
je
adc
cmp
xchg
inc
mov
dec
mov
xlat
push
repnz
cmpsb
nop
cmc
ss
in
inc
mov
or
dec
pop
aas
es
cmpsl
fstpt
mov
shlb
cli
jbe
add
aas
js
out
or
das
or
icebp
push
and
xor
jle
xlat
aas
cmc
fwait
jg
int3
addr16
or
mov
inc
imul
cwtl
jnp
or
mov
push
outsl
nop
push
scas
jns
fstps
aad
add
test
jg
adc
inc
inc
stos
inc
adc
xor
jae
mov
jmp
scas
jle
lods
dec
sbb
lock
mov
and
or
std
sub
lret
outsb
test
ret
inc
cmp
add
dec
add
or
lods
adc
xchg
and
jmp
push
mov
push
push
mov
incl
movsb
ss
xor
cmc
adc
cmp
mov
lods
jno
xchg
cli
mov
push
inc
das
movsl
loope
inc
adc
dec
mov
inc
enter
js
jmp
jne
pop
mov
dec
mov
dec
ja
mov
or
andl
mov
stos
mov
push
cmp
jbe
inc
dec
mov
push
inc
out
das
and
and
inc
dec
les
lock
sub
daa
jecxz
adc
scas
ror
jbe
pop
jp
mov
xchg
stc
xchg
mov
inc
stos
leave
cmp
pop
repz
inc
pop
out
xor
lcall
ds
lcall
movsb
add
loopne
jecxz
push
lods
ja
mov
lcall
ljmp
out
cwtl
mov
mov
dec
mov
or
nop
sub
xchg
shll
mov
fxch
sbb
rclb
enter
repnz
pushf
xchg
or
jge
lahf
ret
jg
xchg
insl
fimull
ja
rcr
dec
test
js
mov
jmp
icebp
sub
xor
rclb
mov
adc
insb
insl
stos
out
mov
cmp
push
mov
and
addb
lods
jmp
jbe
or
xor
jns
xchg
sub
jns
and
loope
in
or
cmp
imul
push
ret
jae
test
pushf
adc
insl
sbb
cmp
jb
jp
xchg
dec
xchg
mov
jns
lcall
testl
fldenv
sub
ret
adc
add
lds
pop
data16
imul
lret
sbb
dec
add
mov
popf
popa
cltd
push
mov
out
push
xor
and
out
push
jp
or
into
add
inc
mov
sbb
mov
pop
test
je
mov
decl
push
test
rclb
mov
test
mov
push
aad
xchg
popf
push
mov
test
adc
mov
cmp
dec
jp
fldt
dec
dec
insl
arpl
mov
test
shll
pop
pop
lea
hlt
mov
mov
inc
das
lods
gs
leave
inc
scas
sub
cmp
fnstcw
or
jnp
sbb
mov
addr16
mov
test
sti
xor
and
lock
and
or
jne
outsl
adc
mov
in
les
pop
andl
jns
aas
adc
fsts
pop
fcomi
adcb
lret
std
lods
fs
lea
test
sbb
mov
add
inc
in
stc
cltd
xchg
jg
cmp
scas
lret
or
and
sub
dec
daa
frstor
inc
scas
inc
inc
or
sahf
test
inc
sti
or
out
jo
lcall
insb
lods
pop
loopne
into
push
test
test
xchg
es
mov
jecxz
add
movsl
jl
jge
fisubrs
jnp
ds
flds
fidivrl
mov
negb
arpl
jbe
dec
popf
addl
pop
fsubrl
lahf
push
xchg
movsl
dec
ret
popf
dec
leave
jl
sub
jl
dec
push
mov
arpl
mov
fimull
gs
ret
and
push
mov
aas
addr16
or
data16
add
xchg
sti
xor
arpl
pushw
cwtl
jae
ret
mov
je
push
mov
dec
jmp
lea
arpl
jecxz
cmpsb
sti
jg
push
lock
jne
xchg
inc
push
fbstp
sbb
adc
mov
xor
std
fistpll
decb
andl
aas
jge
scas
jo
mov
mull
ljmp
sti
xchg
mov
pushf
push
sti
mov
sbb
mov
stos
loop
mov
lods
or
les
inc
stc
pop
int
roll
pop
out
out
fists
sbb
xor
inc
lret
mov
pop
pop
mov
scas
ljmp
xor
sbb
mov
jecxz
inc
sbb
add
sub
cmpsb
lret
test
in
xor
out
call
and
inc
xor
mov
jns
cs
mov
mov
das
dec
cwtl
jb
jne
sub
add
call
inc
and
pop
rclb
pminsw
or
or
push
push
mov
or
enter
jmp
sbb
adc
cmp
cmp
lock
movsl
mov
mov
pop
bound
inc
xor
cmp
or
mov
dec
push
test
movsl
cltd
test
mov
mov
fldt
out
int3
mov
jl
push
enter
jo
pushl
adc
xchg
xchg
enter
lea
jb
or
push
cmpsl
jg
loop
sbb
and
dec
fcmovne
sub
inc
mov
in
jo
sub
lahf
stos
iret
sub
bound
cmp
movsl
inc
inc
lahf
hlt
adc
jb
jmp
push
mov
in
loopne
out
sub
lcall
jne
popa
loope
or
pop
je
jmp
inc
call
js
orl
mov
dec
insb
adc
repz
sub
sbb
rcr
jle
rorl
les
ss
std
cmpsb
pushf
dec
test
clc
mov
push
jge
sbb
mov
mov
jnp
push
imul
loope
cmpsb
mov
lock
mov
out
loope
pop
or
mov
push
repnz
aaa
jno
or
adc
sbb
cmp
xchg
aaa
xorb
shlb
push
mov
lcall
xchg
outsl
sub
je
fcompl
loopne
repnz
inc
outsb
mov
dec
push
inc
cltd
or
test
fdivl
enter
addl
pop
gs
or
aaa
sbb
cmp
pop
jae
in
lcall
movsb
arpl
xlat
jmp
bound
inc
and
xchg
xchg
clc
mov
clc
aaa
inc
aam
push
fcomps
push
jne
ljmp
loop
arpl
xor
mov
add
mov
lods
jge
mov
out
add
es
fnsave
cld
push
les
cmp
fistpll
xchg
or
pop
dec
movsb
xchg
test
pop
mov
ret
cmp
mov
mov
xor
dec
pop
pop
mov
shlb
mov
xor
aaa
or
lea
sbb
bound
in
jg
or
push
add
cmpsl
lds
jns
fstp
repnz
and
jge
cwtl
mov
int3
sti
arpl
xchg
adc
or
pop
mov
sub
cs
push
xchg
and
or
sbb
hlt
inc
adc
mov
mov
pop
aas
or
popa
sbb
mov
insl
pop
adc
clc
adc
jno
loop
in
ficoml
sarb
insb
pop
and
pop
mov
lea
and
data16
or
jp
out
and
sub
adc
cmc
movsl
lods
rclb
scas
add
in
fs
int3
mov
push
push
loopne
lock
das
stc
and
lods
arpl
stc
xchg
and
mov
setnp
jo
rcrb
cmpsb
mov
jb
sub
mov
jmp
stos
xchg
and
add
mov
repnz
repnz
pop
mul
pop
fadds
adc
out
mov
push
xlat
insl
xor
cmp
mov
int3
push
jb
jo
pushf
lds
mov
push
lds
insb
add
in
stc
into
aas
filds
cmc
mov
or
inc
ja
mov
push
pop
fstps
sbb
jp
mov
aas
and
adc
pop
imul
mov
mov
xchg
lods
mov
push
fnstsw
adc
imul
scas
xlat
xchg
and
and
sub
in
sbb
out
or
adc
mov
mov
repz
out
fadds
and
neg
and
sbb
mov
dec
insl
lret
jne
and
xor
pushf
mov
dec
mov
cmc
push
loopne
mov
ret
test
out
pop
sbb
ds
jno
stos
push
jne
xor
call
add
xchg
ja
cmp
insb
ret
mov
sarl
and
and
daa
loopne
and
xchg
ficomps
loop
call
or
add
sub
mov
es
sbb
push
scas
push
lock
xor
pop
mov
ror
mov
insb
shlb
dec
cmpsb
data16
mov
pop
jg
test
mov
jns
mov
js
ljmp
stc
jge
mov
insb
mov
call
rclb
push
nop
cmp
shl
or
dec
mov
or
fneni(8087
add
out
jecxz
fwait
mov
gs
sub
lock
or
jg
fcomps
inc
lcall
das
mov
jge
ljmp
fs
aam
adc
mov
pop
mov
jne
cmp
movsb
inc
lods
push
scas
lea
pop
repz
cmp
sbb
jbe
jg
mov
mov
outsl
mov
aas
imul
pop
int3
dec
lods
xor
movsl
ljmp
or
push
pusha
call
mov
lahf
scas
or
sub
cmp
mov
push
jp
mov
pop
stc
mov
rcr
iret
subl
data16
xchg
adc
push
push
in
test
repz
lock
sub
test
pop
xchg
mov
cmp
movsl
inc
mov
dec
dec
popa
adc
ja
repz
xlat
sub
cmp
cmc
jb
sub
dec
sub
and
imul
cs
movsb
hlt
pop
xchg
mov
cltd
adc
sahf
testb
push
jl
mov
xchg
mov
ss
push
pop
and
cmpb
jecxz
xor
incl
fsts
mov
dec
mov
rorl
pop
inc
or
jp
inc
mov
jecxz
lds
mov
mov
cmp
stos
sbb
inc
adc
and
ficoms
pop
aas
sub
xchg
out
daa
pop
stos
or
out
or
lds
pop
and
cwtl
les
mov
ss
add
jg
pop
incl
int3
xchg
push
lock
jo
sarl
xlat
cmp
jnp
fldenv
mov
mov
jne
fsubs
jle
adc
fwait
pop
push
daa
xlat
dec
loope
pop
aad
mov
out
xor
ja
add
nop
idivb
push
cmp
ljmp
and
jecxz
cmp
push
enter
daa
imul
insl
cmpsb
andl
xor
insb
push
push
cmp
movsb
shrl
xchg
cmpsl
and
add
xchg
lds
jmp
jecxz
out
into
xor
pop
cmp
flds
xchg
addr16
inc
add
popf
sbb
mov
fistpll
sbb
sub
sub
mov
movsb
or
ss
xacquire
imul
cmc
into
adc
jo
loopne
ljmp
fildl
rcrb
mov
cmp
dec
push
jge
lds
adc
in
fistpll
scas
loop
push
xchg
pop
pop
dec
dec
ljmp
inc
testl
push
sub
jae
clc
imul
iret
and
adc
ss
pusha
or
jbe
dec
aad
xor
xor
repz
xor
fnsave
xchg
sarb
push
xchg
sub
mov
cmp
out
adc
insl
and
lret
lret
inc
sbb
push
shrl
enter
pop
in
mov
pop
gs
mov
iret
mov
mov
scas
jno
dec
mov
pusha
cli
clc
or
mov
jecxz
into
ljmp
out
stos
fwait
pusha
xor
ljmp
mov
test
insl
jmp
push
inc
sbb
arpl
jp
push
push
lea
fnstenv
mov
adc
test
inc
pop
fnstsw
sbb
cmp
fidivl
cli
in
xchg
movsl
adcb
in
mov
xchg
adc
and
mov
mov
or
pop
inc
xor
push
aas
ss
pushf
dec
leave
dec
or
icebp
inc
xorb
int3
adc
jb
stc
fiaddl
dec
rol
fld
sub
push
sub
aaa
and
push
add
push
jno
push
cmp
xchg
mov
inc
sahf
sbb
ss
adc
xchg
stos
repz
sbb
inc
jg,pn
cmp
cmpsl
cmpsb
adcl
in
mov
daa
mov
cli
test
sbb
cwtl
shrl
pusha
lret
sub
inc
clc
pop
sbb
test
push
push
mov
cwtl
ljmp
sbb
xchg
adc
xor
adc
gs
jne
outsb
knotb
adc
dec
dec
enter
aam
jecxz
push
insb
or
xor
nop
test
outsb
aam
xor
aad
sbb
orl
sbb
push
mov
xchg
mov
inc
pop
cs
imul
out
pop
ds
in
mov
int3
add
and
test
pusha
inc
sti
lods
filds
shl
mov
test
cmp
push
jle
pop
cmc
inc
push
in
insl
xchg
push
mov
sub
mov
inc
push
scas
xlat
push
insb
or
xchg
popf
test
addr16
leave
mov
jle
pop
pop
cmpsb
cmpsl
rcrl
jge
lret
inc
or
mov
jg
fiaddl
push
fstpt
lds
add
sahf
jle
test
pushf
enter
stos
jns
jmp
pop
inc
iret
push
bound
mov
sub
aam
test
int
scas
pop
jbe
add
cmp
rcrb
inc
inc
fiaddl
test
popa
scas
fwait
add
pop
inc
ds
cli
xchg
push
aaa
jmp
adc
fldt
cmp
xchg
or
rorl
fisttpll
orb
rorl
into
pop
jae
call
std
jle
andb
sbb
loopne
mov
ror
sbb
cmpsl
lock
sub
popf
lods
inc
push
jecxz
bound
cli
lcall
imul
push
jae
jle
xchg
pop
push
pop
dec
mov
outsl
jge
xor
add
dec
loopne
dec
mov
xchg
jb
nop
popf
pop
mov
push
sbb
jge
fdivrl
fstpt
cmpsb
decl
cli
sub
dec
pop
int3
or
lea
arpl
leave
push
cltd
push
shrb
xchg
dec
es
cmp
mov
scas
cmpsl
bound
sbb
xorl
cmpsl
mov
xchg
cmc
dec
cltd
bsr
pop
stos
stos
cmp
repz
or
stos
shrl
add
in
test
mov
test
loope
jns
cli
call
out
jl
test
inc
sti
cmc
cld
push
aaa
lods
out
loop
rcr
fldl
addr16
add
outsl
into
xchg
xor
inc
jno
xchg
jp
leave
cmp
mov
jno
push
or
ret
fistpll
ljmp
sub
or
sets
adc
ret
pop
push
out
dec
add
inc
push
push
in
xchg
jle
lahf
pop
cmpsl
and
inc
adc
mov
jae
and
jp
adc
dec
pop
in
sbb
mov
es
fwait
or
pop
pop
mov
lods
sub
push
inc
movsb
fcmovnb
into
adc
cwtl
mov
sub
pop
in
inc
add
pop
ss
dec
cmc
jb
pop
fidivl
sub
push
mov
mov
sahf
pop
rol
sbb
push
mov
inc
jmp
jmp
imul
push
icebp
pop
sbb
sbb
cs
clc
xor
inc
jecxz
fcmovu
les
xchg
scas
ret
shrl
mov
inc
out
inc
jno
ret
scas
xchg
xor
pop
pop
jg
popl
push
xor
mov
cmp
daa
jge
and
enter
inc
ja
cmp
mov
mov
ds
add
in
mov
mov
arpl
nop
mov
in
and
ds
enter
push
inc
mov
je
jne
push
stos
rolb
cmp
jns
xchg
push
push
adc
out
fwait
scas
mov
dec
pop
xchg
popf
pop
les
ret
imul
rcrb
xchg
xchg
mov
add
popf
out
dec
cs
cmp
mov
aaa
push
jo
fisubrl
push
jae
jne
cmp
sbb
mov
xor
orb
bound
sti
adc
nop
xchg
dec
push
aas
int3
scas
popa
mov
push
xchg
lock
inc
notl
inc
push
adc
xchg
mov
cmp
scas
mov
test
mov
xchg
sub
mov
xor
je
push
shrl
jo
add
fidivrs
add
icebp
and
movsl
icebp
jmp
xchg
shlb
push
inc
scas
cmp
cmp
test
pop
and
jns
mov
xchg
stos
dec
xor
xchg
mov
inc
call
add
jns
bound
je
fcmovnbe
jle
leave
sub
push
aas
mov
pop
pop
shll
xor
iret
pop
cmpb
jbe
aas
ret
or
pushf
jns
push
sbb
cmp
sub
enter
dec
and
mov
rorl
into
cmp
mov
popf
clc
inc
pop
fcomp
inc
ss
or
mull
pop
mov
add
pop
mov
sahf
xlat
xchg
and
mov
inc
xchg
cmp
pop
das
push
pop
adcl
and
cmpsb
jg
and
test
pop
outsb
sub
mov
mov
outsl
outsl
inc
jnp
in
jne
add
movsl
mov
andl
push
outsl
cmpsb
pushf
movzwl
aad
adc
ret
mov
jmp
push
test
inc
sbb
sub
xchg
ficompl
addr16
fadds
sub
adc
repnz
fs
pop
in
sub
leave
sbb
daa
dec
popf
adc
or
fcompl
pop
or
sbb
jge
jb
inc
lods
shrb
imul
jmp
repz
and
pop
inc
mov
push
inc
cltd
or
test
xchg
sub
leave
inc
cmp
fisttpll
fdivl
ss
adc
insl
sub
xchg
rolb
and
cwtl
add
or
lahf
mov
push
movsl
or
mov
add
fcmovnbe
mov
out
cmp
cmp
loope
xchg
xor
fists
push
and
and
push
popa
mov
sbbl
inc
mov
inc
push
pop
jge
in
mov
jg
mov
arpl
push
mov
adc
lahf
cmpsb
push
mov
jp
xor
out
data16
lods
mov
mov
cmp
fwait
pop
stos
test
fistpll
sbb
mov
dec
repnz
cltd
shlw
sub
add
adc
divl
pop
mov
push
roll
pop
dec
add
mov
out
pop
int3
cmc
cmpsl
ja
test
jo
cs
push
loope
jo
sub
daa
mov
jbe
aas
enter
cli
sti
lcall
cmp
out
xchg
mov
testl
ljmp
mov
xor
inc
ss
mov
sub
inc
push
inc
pop
xchg
out
mov
jns
mov
loopne
lcall
add
roll
jns
push
enter
or
outsb
insl
adcb
xor
outsl
out
inc
adcl
pop
nop
jmp
lret
jo
and
imul
ret
and
mov
mov
gs
push
and
ljmp
push
test
cmpsl
cmpl
ret
outsl
sbb
leave
mov
and
in
jb
xchg
xor
xor
mov
ja
pop
dec
pop
daa
rorb
cwtl
push
and
outsl
mov
xchg
repz
cmpsb
add
pop
mov
sub
push
fmul
add
push
lods
daa
cmp
mov
je
mov
push
pop
clc
das
test
xchg
sub
pop
or
clc
mov
mov
jae
addb
sbb
sti
hlt
or
cmc
xor
ret
insb
push
pop
pop
jge
pop
cld
dec
ret
inc
dec
fwait
hlt
sub
and
dec
mov
pop
or
cs
xor
xchg
stos
add
xor
add
push
or
jns
add
add
xor
jnp
inc
and
lret
cmpsb
push
iret
cmp
idivb
jbe
sbb
test
out
and
repz
fcom
decl
movsl
mov
jns
pop
pop
xorl
jl
popa
pop
mov
and
lahf
movsl
stc
mov
or
dec
mov
pop
jmp
sub
push
mov
loop
cmc
cmp
std
jno
fcomip
mov
std
ja
mov
enter
xor
ficoml
inc
fdivr
cli
int
ljmp
xchg
add
add
adc
cmp
mov
fstps
ss
mov
add
les
test
xchg
mov
call
jbe
test
or
sub
cmp
dec
repnz
shl
sub
and
cwtl
lods
add
out
movsb
xchg
jp
fcoms
jmp
mov
iret
mov
jge
adc
in
pop
adc
mov
push
push
jae
icebp
imul
in
fwait
sbbl
sub
push
mov
scas
movsl
jnp
std
and
xlat
mov
jae
push
jecxz
xor
or
pop
dec
cmp
test
sub
andb
xchg
adc
xchg
push
or
in
pop
hlt
cli
push
jae
or
and
pop
push
mov
pop
ja
cmp
mov
rcrl
and
or
xchg
xchg
mov
arpl
stos
test
or
lret
push
lcall
sub
mov
mov
or
xor
loop
dec
js
ret
cmp
or
push
mov
xlat
cld
adc
cmpsl
and
add
ret
xor
mov
andb
insl
shlb
dec
xlat
pop
pop
mov
ret
sub
out
mov
cmp
shll
mov
subl
in
ret
aas
xchg
add
jp
inc
imul
adc
movsl
sbb
int3
xchg
repnz
and
sub
lock
fcoml
adc
mov
repnz
pop
test
xor
fnstenv
nop
ja
cmpsl
test
pop
scas
adc
cmp
out
loope
movsl
cmp
aaa
daa
sub
jnp
out
icebp
mov
add
test
fsubrl
cmp
movb
mov
mov
ljmp
push
js
adc
and
popf
rcrl
sub
fnstsw
mov
mov
test
sub
and
insl
mov
iret
enter
inc
push
pop
mov
or
and
call
cmp
in
jecxz
dec
jp
mov
mov
fwait
sbb
mov
std
inc
pop
roll
incl
pusha
inc
mov
icebp
out
lahf
pop
leave
xor
neg
pop
xchg
fmull
pop
movsb
mov
data16
lock
in
ret
lret
mov
lods
push
dec
lret
sbbl
inc
mov
daa
test
addl
mov
xor
mov
fiadds
mov
dec
sub
adc
sbb
das
or
mov
stos
mov
loop
push
sti
ja
cmc
scas
jae
aam
mov
repz
xlat
pop
mov
inc
sub
sub
ret
jp
arpl
xchg
outsl
mov
pop
popf
movsl
mulb
jl
mov
je
push
adc
addr16
and
inc
scas
loope
fidivrs
xchg
mov
push
fs
das
dec
mov
mov
xor
jmp
pop
stc
out
lods
lret
repz
adc
loope
pop
imul
mulb
or
aad
or
push
xor
sarl
dec
add
xor
mov
jo
test
rcll
pop
testb
sbb
lret
push
cmp
jbe
mov
popf
loope
add
push
adc
mov
jmp
test
xor
pop
iret
lret
mov
mov
sbb
ss
test
shrb
dec
in
data16
xor
rcl
popa
cmpl
sub
push
push
xlat
or
in
test
inc
xor
fldenv
push
jnp
add
cld
mov
sbb
daa
pop
loop
pop
ret
popa
pop
test
push
jmp
jbe
orb
adc
aad
shlb
or
lea
dec
dec
and
xchg
test
gs
popa
push
rclb
jno
fiaddl
mov
dec
sub
mov
sub
repz
loope
cltd
enter
test
dec
stos
repnz
pop
aam
pop
mov
insb
add
in
popf
xchg
pusha
push
fcmovnbe
and
leave
or
ss
movsb
dec
inc
jne
or
push
rcll
pop
jle
pop
clc
push
ss
fidivs
jno
xchg
gs
pop
cmp
push
mov
jno
add
xchg
imul
imul
fcomip
pop
fiadds
cmpsb
mov
mov
jmp
test
push
push
cmp
lds
jp
imul
dec
lret
imul
mov
mov
inc
paddd
xchg
cli
aas
stc
mov
mov
xchg
rorb
push
jno
cwtl
mov
mov
shll
insl
push
outsb
loop
jno
and
fucom
pop
push
daa
inc
out
inc
bound
or
bound
lea
cwtl
dec
loopne
and
fdivs
jl
subl
mov
jmp
sti
inc
roll
pop
add
pop
out
xchg
fs
cmp
cli
xchg
loope
jb
pop
mov
fistpll
mov
stos
ss
out
test
sub
and
adc
jno
pop
int
shrl
lods
nop
fmull
xchg
cmp
fisubrl
decb
adc
jnp
sbb
repz
cmp
pop
add
insb
and
cmp
and
scas
add
mov
push
flds
leave
pusha
cwtl
xor
push
push
fnsave
loope
mov
adc
int3
scas
mov
push
sbb
daa
int
cmp
bound
xor
ret
repz
inc
adc
cmpsl
es
sbb
out
test
ret
addr16
add
jbe
test
scas
fdivrs
push
mov
popa
and
mov
movsb
mov
inc
stos
sahf
repnz
mov
mov
iret
es
mov
xchg
fidivs
rorb
mov
ljmp
sub
mov
idivb
adc
sub
clc
mov
sub
sub
mov
xorl
xchg
fidivrl
les
lods
in
aaa
rorb
mov
into
inc
cmp
adc
aad
fxch
xchg
xchg
xor
aam
pop
adc
sbb
mov
into
dec
push
das
sbb
push
sahf
les
push
inc
mov
cmp
lahf
cli
cmp
inc
scas
push
push
add
pop
popa
loope
iret
or
jbe
ret
bound
aam
ds
adc
dec
cmp
cmp
arpl
scas
ret
leave
loop
stc
mov
or
cmc
inc
cmp
fimull
and
stos
jo
dec
fchs
adc
test
cmc
xchg
push
push
xor
shl
lcall
and
sbbb
mov
loope
xchg
inc
sbb
fmuls
lods
mov
outsl
imul
cwtl
clc
sub
int3
sub
frstor
popa
movlps
or
fidivl
mov
test
inc
mov
jb
xor
loopne
pop
pop
cmp
xlat
fincstp
shll
push
pop
and
mov
sarb
cli
push
mov
stc
mov
scas
dec
mov
mov
xchg
jns
jbe
sub
push
sbb
add
sahf
mov
dec
lock
fidivs
ja
sub
sbb
loope
add
mov
push
cmp
fcompl
popa
xor
call
fs
cmp
xor
push
xor
pop
cmc
or
xor
mov
out
test
mov
imulb
frstor
mov
xchg
lea
sti
jge
cld
div
data16
gs
pop
xor
les
sahf
out
and
sub
jecxz
inc
outsb
dec
rcrb
ret
fbstp
sub
in
add
xchg
call
xchg
mov
xlat
loope
clc
xorl
fsubs
sbb
jecxz
cmpsl
dec
adc
gs
out
jbe
push
mov
sbb
jg
cmc
dec
rsqrtps
cmp
insb
pushf
adc
mov
div
sbb
add
scas
rcrb
rclb
sti
insl
out
shll
cmp
push
out
mov
xchg
sti
mov
cmp
jns
fsubrl
xor
mov
sbb
pop
adc
aaa
and
test
hlt
movsb
cmpsl
jp
dec
push
or
pop
jbe
in
mov
xor
push
das
out
jmp
pop
mov
rcrb
ret
rcrb
movsl
mov
xor
dec
xor
bound
and
xchg
add
mov
xor
pop
jge
ror
adc
jae
sbb
ljmp
and
mov
sub
sub
rorl
aam
jecxz
mov
adc
jns
jle
ret
mov
and
scas
and
xorb
jecxz,pn
fwait
lods
sbbl
ficoms
aad
js
shll
ret
sub
and
and
and
adc
out
xor
les
xchg
jbe
into
pop
mov
mov
repnz
xor
ljmp
sub
ja
cmpsl
dec
dec
adc
pop
pop
jge
dec
das
mov
in
jnp
aam
sub
sub
inc
loop
and
push
add
pop
mov
imul
sti
adc
call
into
xchg
loope
in
jge
cld
cmp
repnz
sub
lahf
les
jmp
sbb
pop
sti
mov
daa
mov
adc
dec
sbb
mov
add
aad
aaa
scas
add
popf
xchg
push
orl
popa
jecxz
fsub
mov
repz
popf
mov
xor
hlt
cltd
sub
popa
push
in
cld
popa
adc
insl
addr16
and
dec
nop
mov
das
jbe
pop
lcall
out
mov
cltd
cmp
test
or
test
int
adc
jne
stc
push
fdiv
insl
cwtl
shll
leave
xlat
xchg
outsl
outsl
mov
push
mov
pushf
mov
dec
enter
rolb
and
repnz
and
in
mov
xchg
jne
cmc
loope
adc
or
lret
sahf
add
dec
sahf
rolb
shlb
sbb
ljmp
ret
imulb
sub
icebp
leave
cmp
pop
and
jb,pt
das
jecxz
pop
out
aaa
test
push
pop
stos
push
jp
dec
add
fs
mov
push
test
es
cmp
iret
sub
add
movsb
fdivr
popf
enter
or
push
adc
add
ljmp
inc
fwait
aam
rcrb
movsb
mov
fstpl
test
cmpsl
add
xchg
rcll
inc
jle
adc
lahf
aas
lahf
sti
xchg
cmp
mov
mov
shl
bound
clc
inc
out
pushf
lea
jmp
and
mov
cmc
mov
js
mov
pushf
ljmp
fwait
outsl
xchg
fisubs
mov
dec
in
aad
sahf
gs
and
sbbl
dec
outsb
test
imul
in
inc
sub
test
jno
mov
sub
pop
sbb
addr16
sbb
ljmp
pushf
int3
js
jge
hlt
rorl
gs
dec
adc
jecxz
inc
dec
out
aad
arpl
jae
insl
cs
add
fistpll
int
leave
mov
xchg
mov
pop
cmp
xor
daa
add
repz
or
add
lods
mov
or
sbb
shl
xchg
pop
and
shrb
mov
jns
mov
jge
inc
fcmovb
sbb
into
lods
add
sbb
or
sbb
test
hlt
in
xchg
mov
xchg
inc
lret
call
mov
imull
in
push
loopne
rolb
dec
xchg
clc
minps
pushf
sub
or
repz
adc
cmp
loope
sub
mov
dec
cltd
and
xor
jno
mov
notb
rcll
movsb
test
aas
aam
data16
cltd
push
insl
cmc
push
mov
mov
fnstsw
insb
mov
lds
and
or
inc
lods
jg
cld
push
adc
aaa
push
outsb
fistpll
xor
shlb
mov
adc
inc
stos
jmp
pop
mov
test
dec
jg
pop
in
stos
jae
int3
pusha
repnz
adc
mov
xlat
push
mov
push
adc
mov
push
jmp
das
notl
and
pop
repz
mov
xchg
lods
jno
data16
imul
jp
adc
add
cli
jo
pop
dec
or
jbe
incb
cwtl
jno
scas
jne
pop
iret
mov
xchg
cmovo
outsl
mov
add
faddl
cltd
push
xor
mov
pop
mov
adc
aas
into
lock
insb
fsubrs
out
pop
lcall
mov
pushf
cmp
inc
cmp
les
adc
sub
sti
ss
adc
cs
sbb
jmp
int
xchg
icebp
jge
inc
mov
cmc
and
stos
jnp
mov
cmpsl
pop
sti
add
mov
push
inc
cli
lods
mov
sub
xor
push
mov
or
mov
std
fwait
and
clc
pop
and
push
inc
es
arpl
mov
sahf
push
int
xchg
out
sti
xorl
dec
shll
mov
out
jo
imul
inc
out
mov
subb
cmp
sbb
jno
imul
push
xchg
add
stos
inc
mov
or
or
adc
mov
je
and
xor
pop
jecxz
xchg
stos
les
push
adc
cmc
decb
out
jo
fstpt
mov
xchg
xchg
in
call
xor
repnz
mov
mov
push
xlat
pop
aaa
pop
dec
popf
mov
fmul
loop
jge
sbb
jnp
enter
inc
out
or
jge
jo
jne
push
push
call
push
inc
add
pop
push
bound
xor
out
cmc
movsl
xchg
ja
out
loope
shrb
mov
cmpsl
negl
jp
testl
or
jle
add
pop
sbb
cltd
add
adc
push
mov
jg
jmp
or
mov
test
or
and
fmul
dec
sbbl
clc
xchg
mov
dec
in
pop
scas
mov
pushf
lock
add
mov
adc
cmpsl
stos
xchg
sbb
hlt
outsl
mov
xchg
cmp
mov
mov
xchg
icebp
lret
hlt
movsl
xchg
push
xor
shl
sub
push
shll
in
or
mov
out
gs
inc
lahf
fsubrl
jne
call
dec
fidivrl
fwait
lret
andl
pop
das
sub
mov
pusha
mov
test
enter
push
sbb
ja
cmp
jp
dec
xchg
adc
push
inc
dec
loop
outsb
les
pushf
je
sbbl
pop
lahf
fdivrp
cs
and
movl
fisubs
push
push
dec
and
repz
ja
and
sub
mull
xchg
xlat
insb
and
sbb
mov
jb
aad
fdivrp
shll
mov
pop
jmp
xor
std
inc
inc
lcall
mov
cld
inc
not
mov
fs
jnp
sbbb
pop
push
aam
push
xchg
xchg
xchg
ljmp
mov
jne
sub
aam
pop
or
pop
jb
push
cld
in
mov
sti
loope
addr16
loop
jae
pop
popf
scas
mov
xchg
push
cmc
mov
cwtl
cmpsl
adc
add
pushf
bound
xchg
movsl
cmpsb
pop
das
lret
notb
jno
fldt
rorb
mov
clc
gs
mov
push
lret
out
mov
shr
test
scas
andb
mov
lods
mov
fisubrs
mov
shrl
mov
loop
daa
sub
mov
pop
ljmp
ret
cmp
xchg
inc
ret
dec
pop
jne
or
mov
hlt
jle
mov
dec
loop
int
outsb
mul
jecxz
sbb
mov
cmp
insb
cmp
fisubs
insb
sub
test
arpl
mov
les
jg
arpl
outsb
aaa
add
adc
std
sbb
out
mov
or
jno
insb
cltd
xchg
in
hlt
cwtl
icebp
cmp
mov
jg
and
cmp
js
lea
cltd
icebp
or
push
push
add
xor
jecxz
repz
mov
cwtl
pop
mov
adc
data16
int3
pop
popf
pop
cmc
dec
jmp
popa
jl
stos
ret
ja
xchg
aaa
movsb
add
mov
sub
or
into
inc
and
inc
lcall
sub
cli
out
cmp
cmp
add
sbb
pop
push
stos
out
mov
aad
push
or
outsl
or
fcmovnbe
jle
add
xorl
leave
ja
cli
xor
lahf
inc
bnd
les
add
jmp
cmp
adc
pop
sub
cmc
add
or
shrl
add
das
imul
and
cltd
in
cli
sbb
mov
scas
pushl
cmp
adc
dec
xchg
jp
jmp
sbb
lods
movsb
call
sbb
jnp
outsl
cwtl
pusha
stos
dec
aad
or
call
lods
shll
add
sub
call
loopne
test
or
xor
and
test
outsl
aas
shrl
scas
aas
imul
xchg
dec
js
and
xor
mov
or
or
mov
cmpsb
int3
sub
fidivrs
push
sub
inc
xchg
mov
movsl
push
pop
fadds
aam
sub
sarb
cmc
push
cmpb
dec
js
pop
lods
rcll
inc
and
jne
mov
mov
cmp
inc
jnp
addr16
cmpsl
mov
push
in
loopne
popa
add
inc
mov
jne
xlat
jnp
add
das
jg
scas
pop
cmp
push
jge
push
mov
lcall
imul
outsl
scas
xor
sbbb
inc
cmp
pop
sub
mov
inc
xchg
dec
sbb
jge
cwtl
fcom
mov
stc
mov
xchg
sbb
cmove
aad
mov
mov
jo
mov
scas
mov
lahf
dec
enter
and
push
pop
lret
inc
adc
stc
ss
xchg
jecxz
adc
cmp
cmp
xchg
push
cmp
dec
mov
ds
movsl
inc
sbb
cwtl
jl
dec
int3
ja
rcrb
dec
jne
ss
insb
mov
scas
mov
mov
mov
mov
mov
push
cmpsl
add
movsb
xchg
aaa
pop
mov
inc
out
and
cmp
in
push
or
mov
out
fsub
and
sarl
jg
in
jp
scas
loopne
mov
or
mov
popa
dec
lahf
repz
lds
pop
inc
mov
mov
leave
adc
mov
out
xchg
adc
cmpsb
jle
ret
insl
mov
pop
test
scas
aad
jg
adc
xchg
cmp
dec
andl
test
cmc
jle
mov
push
aaa
iret
out
add
adc
fcoml
and
fwait
sarl
test
sbb
cmp
les
sub
mov
mov
jns
inc
testb
insl
add
jmp
clc
loop
push
jmp
arpl
leave
adc
inc
pop
inc
xor
inc
fwait
test
push
mov
xchg
ffreep
out
inc
pop
mov
je
fstpl
lea
or
push
pop
and
fdivrl
lret
mov
orb
mov
ret
mov
stos
push
mov
xchg
sub
fiaddl
stos
push
push
sbb
xor
popa
arpl
pop
loop
imul
enter
sub
clc
movsl
xor
add
lret
mov
mov
es
jecxz
jnp
sbb
and
shrl
xlat
repz
mov
sub
popf
loop
insl
xor
dec
mov
sub
jnp
push
cltd
xlat
in
out
mov
jmp
push
out
pop
and
outsb
mov
and
filds
js
xor
movsb
cmpsl
or
fs
push
out
hlt
add
lods
xlat
fs
xchg
sbb
out
loopne
out
xor
popa
js
mov
movq
rcrb
or
ret
iret
inc
out
sub
dec
leave
mov
pusha
test
xchg
sbb
jg
add
nop
or
pop
out
out
ret
sub
insb
test
dec
fcom
out
dec
lcall
mov
add
fwait
xchg
mov
mov
aaa
lods
lret
arpl
push
or
add
lret
mov
dec
xor
adc
sbb
sti
scas
cld
dec
mov
adc
test
cmp
jb
fmull
adc
les
outsl
fldl
cmp
jg
in
hlt
adc
icebp
and
dec
mov
sub
std
lds
leave
jno
out
outsb
adc
jmp
pop
xchg
fs
dec
xlat
aaa
push
pop
in
mov
rorb
sbb
adc
das
sub
jno
mov
adc
or
push
add
push
getsec
daa
repz
shrb
daa
fidivrs
cmc
loope
fdivrs
sbb
adc
jne
jns
clc
stos
daa
shl
call
pop
or
xorl
jecxz
loop
mov
mov
cmp
out
mov
add
inc
jge
repnz
mov
shrb
addb
in
jne
inc
cmp
cmp
into
rcl
mov
add
sub
ljmp
out
nopl
lock
jle
mov
fdivr
adcl
mov
cmp
sub
sub
and
mov
xchg
or
and
mov
incl
mov
jae
jge
dec
mov
or
in
cmp
sarb
lret
sub
xchg
fcoms
std
cmp
insb
xchg
push
fmul
sbb
loopne
aaa
fs
fcompl
and
std
mov
inc
dec
lock
bound
je
lret
lret
ficomps
jge
push
jle
mov
clc
aad
inc
jno
lcall
adc
sahf
mov
addl
push
and
repnz
and
jecxz
ret
mov
in
aam
and
sbb
pusha
ss
sbb
xlat
inc
sub
dec
fcomp
jb
mov
cmp
out
inc
xor
jne
jae
sub
test
out
xor
xchg
imul
jmp
mov
or
sub
sub
dec
mov
in
xor
mov
xorl
fcmovnb
leave
sub
push
cmp
aas
lods
jnp
mov
enter
inc
popl
int
xchg
or
repnz
loopne
cmpsb
addr16
test
add
mov
mov
ss
test
je,pt
incb
add
addr16
jb
mov
mov
jb
xlat
jg
aas
ror
jns
int3
insb
scas
or
adc
lret
cmc
jg
in
and
xchg
lret
daa
pop
rorl
rcrl
sub
pop
pop
in
repnz
stos
and
mov
rcl
rep
lods
inc
jae
or
inc
testl
cmpsb
mov
enter
ss
ret
mov
add
leave
xchg
mov
mov
sti
pop
ss
add
mov
sub
mov
inc
dec
pop
cltd
sbb
outsl
fildll
xor
sbb
mov
xlat
and
pop
fstl
dec
inc
lahf
mov
push
jle
push
sub
inc
or
ljmp
gs
xchg
sbb
cmp
sub
cwtl
outsl
dec
popa
xchg
rep
testl
lret
arpl
xchg
and
cmp
adc
ret
cwtl
mov
movsl
dec
sbb
iret
lea
fimull
sarb
push
adc
push
add
jp
push
pop
push
movsb
mov
bound
xor
dec
cmp
fistps
hlt
lahf
or
push
push
sbb
outsl
xor
ds
ljmp
movsl
sub
push
rcll
push
and
adc
inc
addb
clc
in
dec
push
loop
mov
stos
data16
test
pop
dec
call
cltd
adc
mov
pop
adc
adc
push
bound
lock
mov
xlat
pop
xchg
push
push
adc
add
mov
xchg
scas
int3
pop
clc
les
push
sub
cmp
xor
mov
sarb
pop
loopne
pop
pop
mov
and
pop
imul
loop
adc
rcrb
and
lahf
idiv
or
fimull
pop
sti
and
fistpl
mov
jne
movsb
jb
jns
jmp
xchg
xchg
fsubrl
cmp
adc
lret
outsb
xchg
repnz
mov
xchg
shr
data16
aam
fwait
mov
repz
in
jns
pop
imul
fldcw
push
xchg
dec
sub
inc
fwait
int
adc
in
push
sub
jecxz,pn
xor
ja
cltd
jbe
movsl
and
or
aad
sbb
cmc
out
xor
or
insl
lods
movsb
fcmovnb
sahf
push
icebp
vfrczpd
pop
or
pop
jo
mov
cli
pop
xchg
cmp
stos
xor
jns
jp
mov
addr16
pop
insl
fmull
lock
scas
dec
in
sub
or
aam
lahf
pop
push
rsm
ljmp
cmovl
pop
mov
lods
enter
pop
jbe
jl
mov
mov
call
push
add
jg
xchg
pop
dec
fadds
cmp
das
cmp
mov
inc
jecxz
sub
add
jecxz
adc
outsl
xor
xchg
js
imul
int
xchg
adc
les
sbb
data16
xchg
pop
stc
rolb
and
add
neg
rclb
ja
push
mov
push
lret
jnp
cmp
push
imul
xchg
lods
push
test
or
cmp
fimuls
or
lret
dec
lcall
aaa
in
jmp
call
inc
mov
pop
pop
pop
inc
out
pop
sahf
sub
pop
and
xchg
sub
lcall
xchg
sub
stos
out
jne
inc
or
scas
xchg
out
xchg
mov
daa
testl
leave
aad
sbb
lods
das
sbb
stos
push
cmpsb
jg
jb
add
outsb
rcr
mov
mov
fldt
in
add
adc
std
pushl
adc
jg
cmp
xchg
loop
jmp
and
outsb
popa
xchg
sbb
enter
pop
stc
jo
mov
jns
xor
fs
outsl
out
jns
sbb
aaa
mov
and
or
sub
xchg
jae
or
cmpsb
cli
ret
lds
comiss
and
mov
xchg
ljmp
mov
adc
pop
insb
lret
pop
outsb
dec
sti
dec
mov
jbe
pop
lahf
sub
loopne
and
fwait
es
pop
jecxz
out
subl
xor
sub
pop
xor
sbb
mov
mov
cmpsl
cmp
mov
or
dec
lock
dec
cmp
pop
sbb
loope
or
stos
rolb
jg
add
imul
repz
into
in
adc
bound
jle
pop
cmp
pop
push
inc
test
adc
lea
loopne
stc
jecxz
fcoml
hlt
cmc
jge
repnz
dec
and
call
mov
mov
or
js
mov
ret
out
adc
sbb
jae
fidivs
dec
xor
ljmp
mov
jbe
sub
mov
out
inc
mov
fcomps
int
fnstsw
lret
outsl
into
xchg
fwait
or
nop
sub
add
mov
stc
sbb
push
icebp
jne
or
sub
movsl
pop
inc
cltd
in
setnp
xchg
pushl
mov
iret
mov
mov
mov
aaa
add
xor
fisubrl
jb
scas
addr16
sub
nop
or
sub
sbb
sarb
add
pop
shrl
push
fwait
leave
mov
stos
inc
cli
mov
inc
bound
mov
dec
jg
aam
xchg
sbb
xor
or
lods
shrl
mov
adc
sbb
mov
sti
adc
ds
xor
stos
movsb
outsb
adc
loop
sarb
add
sub
add
adc
das
push
pop
sub
pop
lds
iret
notb
sahf
call
xlat
lock
adc
mov
adc
xlat
dec
icebp
jne
int
test
sub
lret
sbb
jns
ret
repz
fisttpll
jb
xor
push
jne
mov
int
call
xchg
cld
cmp
js
inc
lea
add
movsb
aas
inc
out
std
or
rcrb
iret
xchg
or
and
and
dec
insl
loop
mov
sbb
mov
scas
out
out
adc
jle
rcl
jge
and
movsl
pop
fstpt
push
and
cmp
jbe
and
enter
imul
bound
orl
test
mov
push
and
mov
add
aad
inc
jle
and
in
scas
stos
cmp
dec
out
jmp
cmp
in
mov
bound
popf
sarb
out
popf
adc
in
sbb
pushf
aaa
in
sub
mov
pop
js
push
out
in
repz
fucom
fcomp
adc
adc
fbld
orl
mov
dec
xchg
ljmp
add
or
out
or
cmp
mov
ret
dec
inc
vcvtsi2ssl
es
rolb
mov
xchg
in
cmp
xor
stos
ror
mov
add
cmp
addr16
xchg
mov
inc
jmp
sbb
jb
js
mov
idivb
cmp
fdivs
xor
lcall
imul
mov
cmp
pushw
out
movsl
ret
cmp
sbb
or
cltd
out
and
aam
icebp
popa
imul
lret
fwait
xor
ljmp
mov
push
pop
sub
shlb
xor
cmp
decl
lods
jb
les
out
out
jae
fidivrs
xchg
cld
shl
fdivl
popa
loop
or
lods
aad
mov
aam
mov
add
cld
inc
and
mov
jo
pop
lret
pop
adc
movsl
ljmp
xchg
sub
int
pop
sahf
loope
ds
outsl
leave
mov
dec
lret
adcl
mov
mov
aaa
cmpsl
lods
mov
xchg
mov
cmp
mov
sub
pushw
inc
cmp
xchg
push
mov
fiadds
xlat
hlt
push
das
test
aaa
sbb
lods
pop
fwait
jmp
sub
test
push
ds
mov
sbb
cmp
push
into
mov
and
rcrl
sub
adc
fs
add
xchg
lods
ret
sbb
cwtl
stos
jne
jge
add
aas
cmc
sti
jne
aad
jo
cmp
adc
insb
cmp
mov
dec
mov
inc
cltd
mov
negl
lods
mov
sbb
jp
inc
sub
stos
inc
mov
fiaddl
lret
out
insb
sub
mov
pop
mov
mov
mov
movsb
int3
rcrl
or
filds
push
adc
jp
subl
fisttpll
int3
iret
pop
aas
cmpb
cmp
mov
repnz
cmp
mov
sub
addr16
jno
mov
sbb
pop
add
test
sbb
lods
fdivs
test
js
loop
mov
sbb
sub
lcall
or
repnz
cmp
ret
in
lea
push
xchg
dec
lret
lds
cmpsb
jae
add
test
and
jmp
notl
insb
insb
in
rcll
out
inc
sbbb
sub
xor
sub
mov
aad
popa
leave
popa
jo
xchg
lret
test
movsl
sbb
push
add
loopne
inc
fmull
mov
repnz
pop
jle
cmp
cmp
test
push
sbb
fcmovu
add
dec
or
xchg
imul
fsubr
out
mov
hlt
jae
scas
cli
mov
jmp
jg
popa
xchg
push
adc
push
out
push
aas
movb
repnz
cmp
inc
xchg
scas
xchg
xchg
incl
je
lea
cmc
jg
lock
add
in
inc
lea
movsb
xchg
xchg
mov
mov
add
push
daa
addr16
sbb
lahf
cld
popf
sbbl
mov
in
mov
addb
adc
push
mov
xchg
xchg
rcll
shr
and
cwtl
movsl
or
in
js
int
lcall
outsl
push
mov
sbb
ror
test
xchg
pop
ss
arpl
in
cmp
lock
jle
add
inc
push
shrb
xor
dec
pusha
push
mov
jl
add
xchg
inc
pop
mov
mov
push
mov
jne
incb
mov
pminub
or
iret
fadds
aam
add
mov
fisttps
push
inc
lea
jae
mov
pusha
loope
punpcklwd
mov
mov
inc
dec
ret
cmpsb
mov
shl
lock
or
mov
or
pop
sbb
pop
lret
push
or
test
clc
push
push
das
xchg
cltd
iret
lret
fwait
nop
negl
mov
pop
sbb
mov
test
aaa
adc
jmp
fldl
jle
andl
imul
or
lds
cmp
bound
jmp
dec
xor
fs
sbbb
mov
leave
int3
and
jmp
lods
outsb
inc
adc
sub
mov
jo
cmp
jo
mov
lahf
mov
xchg
inc
shll
inc
dec
in
sbb
cmpsb
out
push
push
push
mov
arpl
movsb
cltd
sbb
inc
lcall
fnstenv
filds
jl
cmp
cvtpi2ps
nop
repnz
addb
mov
fnstsw
and
repz
mov
push
add
data16
xor
ret
nop
mov
xchg
or
inc
movl
and
insl
pushf
adc
loope
das
jge
sub
or
xor
sahf
adc
push
repz
sub
rolb
push
lock
xchg
int
repnz
sub
decl
jl
lret
inc
mov
push
ret
pop
cmp
xor
das
fldl
lds
and
popl
cmp
pop
mov
and
mov
mov
pop
xchg
xchg
jle
popf
insb
mov
add
cmp
into
aas
je
xchg
fwait
xchg
pushf
and
mov
pop
mov
jmp
pop
cmp
test
dec
pop
aaa
repnz
add
pop
mov
int3
jae
ss
mov
mov
push
scas
xlat
jmp
inc
mulps
xchg
mov
jmp
fwait
lret
fistpl
mov
in
call
aas
aam
mov
xor
push
xchg
fcoml
lret
push
mov
inc
jo
mov
popa
pop
jmp
adcl
jb
andl
push
sub
in
bound
sbb
enter
mov
stos
add
cli
das
in
rolb
or
jns
shl
pop
in
sbb
cmp
push
pop
test
cwtl
ljmp
cmp
xor
daa
adc
js
ret
dec
pop
gs
pop
cmp
cli
mov
adcl
xchg
lcall
inc
repnz
pop
sbb
or
enter
mov
pop
data16
sbb
std
cltd
lret
lock
sbb
push
insb
dec
inc
movd
arpl
push
cmp
movl
xchg
inc
cld
sub
out
mov
sub
dec
and
dec
push
sbb
sbb
stos
add
pop
punpcklwd
das
push
mov
jg
xchg
xor
dec
xchg
rolb
sub
dec
jno
movsl
not
pop
fiadds
repz
nop
fisttpl
lret
xor
adc
jp
ret
popa
mov
jns
hlt
mov
sti
sbb
jno
push
jnp
cs
jl
mov
pusha
into
jb
or
push
shll
mov
sub
aas
add
in
data16
xor
stos
push
inc
fyl2x
inc
dec
cmpsl
mov
out
imulb
xor
adc
mov
fbld
xorb
jnp
and
lret
out
adc
push
push
dec
mov
insl
dec
imul
jmp
mov
test
aaa
sahf
gs
movl
jae
ret
pop
jge
mov
jb
out
and
push
push
mov
mov
mov
int
jb
lds
data16
scas
add
rcll
das
and
hlt
mov
ds
repz
into
dec
jne
adc
loope
add
mov
inc
ret
sbb
jle
add
adc
adc
loop
push
push
fistl
mov
mov
mov
insb
cmp
xchg
inc
dec
das
add
es
loopne
lock
and
lock
pop
daa
and
js
mov
lds
jmp
mov
daa
dec
shrb
mov
mov
bound
les
dec
push
outsb
or
pop
add
andb
jbe
int
popa
mov
and
adc
ja
xchg
push
inc
or
test
es
jp
gs
pushf
jns
xchg
scas
pop
imul
sbb
pop
pop
mov
pop
popf
mov
pop
pop
xor
shrb
push
jnp
test
push
sub
popa
xchg
dec
in
insb
push
out
push
jle
push
mov
xchg
mov
aas
dec
jp
xchg
jle
cs
fs
xchg
inc
jo
or
imul
sahf
cmp
pop
dec
lret
loopne
mov
test
and
shl
shrl
push
fadds
inc
mov
mov
cwtl
imul
loopne
cmp
pop
mov
cmpsb
fisubrl
in
push
int3
ljmp
jne
test
fwait
and
xor
mov
daa
int
into
mov
xchg
aas
imul
pop
leave
push
add
fcmovnb
jbe
icebp
push
mov
mov
imul
add
pop
ds
shl
sub
mov
into
in
aas
mov
subl
mov
pop
dec
adc
lods
sub
dec
repnz
les
in
jmp
lds
mov
arpl
pushf
pusha
push
scas
fwait
cli
xchg
fidivl
into
cmp
or
addr16
ss
fdivr
out
sbb
cmp
xchg
or
fnstenv
loopne
pop
lret
jnp
mov
xchg
cmp
pushf
icebp
xorl
gs
sub
mov
mov
and
cmp
imul
lahf
cwtl
pop
sub
pop
dec
mov
inc
movsb
xor
lret
mov
lret
and
add
inc
push
mov
push
rclb
popa
xchg
ds
or
xchg
sbb
lret
out
addl
xchg
inc
mov
ds
shll
cmp
enter
in
mov
pushf
xor
mov
jmp
cmp
es
dec
sti
pop
add
insl
into
mov
sub
mov
or
vfrczps
das
shrb
inc
movsb
gs
aaa
push
filds
and
mov
or
in
push
push
les
pop
adc
jb
add
jb
lods
sti
fstpt
xor
pop
push
xor
mov
scas
out
sub
lret
xor
xor
pusha
or
sbb
addr16
inc
and
xchg
jno
jge
imull
insl
aad
sub
gs
mov
lock
and
out
notb
movsl
pusha
addr16
lds
cmp
jb
lea
dec
cmp
loopne
cmp
out
inc
mov
pop
movsl
cwtl
mov
mov
shrb
jb
xchg
pop
push
push
add
test
pop
mov
imul
icebp
pop
mov
cli
and
movsb
test
adc
adc
xchg
xor
iret
xchg
and
movsl
out
mov
jle
push
test
xchg
jmp
es
mov
jb
mov
sbb
incb
and
out
mov
mov
jbe
add
dec
jno
push
xor
inc
int3
imul
filds
xor
test
mov
pop
inc
dec
add
rclb
pop
les
scas
sbb
mov
pop
dec
dec
ret
mov
das
xor
lret
sbb
mov
xor
mov
lret
inc
movsl
test
adc
pop
add
jecxz
or
mov
lods
fimuls
mov
push
mov
dec
xchg
lock
insb
sahf
icebp
shll
aam
xchg
popf
mov
push
cmpsb
inc
pop
das
or
adc
and
mov
inc
jp
andb
push
stos
ss
jmp
mov
push
and
pusha
and
jmp
fsub
dec
add
out
or
xorb
mov
sar
mov
lcall
pop
fwait
outsl
add
pop
sub
pusha
dec
lret
mov
mov
icebp
jno
cmp
pop
jns
loop
sub
mov
outsb
lods
repnz
js
sub
add
scas
mov
subb
xchg
imul
add
cmpsb
fwait
inc
cmc
iret
and
pusha
mov
fldenv
sub
pop
test
inc
into
rol
iret
data16
pop
jae
stos
jo
test
divl
les
xchg
mov
jl
pop
cmp
leave
sbb
out
dec
xchg
push
push
test
mov
cmp
push
jp
lods
or
push
adc
arpl
mov
adc
and
sar
lret
lock
xor
loop
cmpsb
inc
inc
imul
sbbl
fsts
lret
lock
and
xlat
mov
sbb
inc
ja
pop
xchg
adc
rcll
roll
push
lods
or
push
in
inc
sahf
sti
fbld
mov
mov
scas
mov
add
addr16
stos
repnz
sub
pop
mov
dec
add
sub
loop
sub
jge
int
pop
cmpsb
mov
sbb
movsb
repz
ficoms
inc
pushf
subb
xchg
push
lahf
jb
sub
inc
sbb
sbb
stos
and
movsb
daa
push
or
rep
jo
xchg
pop
push
and
push
mov
xchg
jb
mov
lods
clc
or
push
hlt
inc
test
sbb
clc
stos
mov
or
dec
fnstsw
rorl
outsl
sub
push
loop
adc
add
sub
daa
pop
cmp
push
xrelease
add
aas
testl
pusha
mov
hlt
push
jecxz
inc
jb
popf
sbbl
pop
frstor
push
dec
ret
mov
dec
or
rorb
adc
fs
fs
sahf
xor
stos
and
enter
out
adc
nop
cltd
ja
xchg
fdivs
add
lea
cmpsb
mov
jbe
push
outsl
or
xchg
inc
lea
add
mov
pusha
xlat
add
out
iret
or
push
imul
sub
repz
push
fs
xor
dec
xchg
mov
or
push
ficompl
ja
iret
addl
cmpsl
pop
mov
jl
cmp
test
std
push
and
sbb
sbb
dec
clc
ret
mov
jbe
sub
add
or
mov
insb
dec
js
jmp
ljmp
int
and
aaa
es
in
test
push
in
mov
shr
xor
and
fidivrl
mov
aas
mov
xchg
or
enter
xchg
fistl
jmp
mov
adc
jle
stc
inc
dec
sar
nop
pop
add
adc
mov
repnz
adc
add
pushf
stos
xor
mov
sbb
ds
arpl
pop
bound
or
ds
pop
mov
jl
stc
push
mov
rcll
outsb
cmp
imull
test
jae
into
lock
lock
pop
push
cmp
stos
sub
stc
fcmovnu
mov
inc
xor
push
loopne
adc
mov
sbb
sub
or
dec
add
jnp
fdiv
repz
inc
int3
push
jp
into
icebp
nop
cmp
xorb
repnz
fcoms
adc
xor
push
mov
or
es
jp
mov
jb
sub
cmp
scas
addr16
shrl
mov
mov
push
lds
std
lcall
push
sbb
pop
xchg
sbb
icebp
stos
push
das
stc
xor
ret
sbb
js
fs
scas
popl
xlat
test
lcall
or
xchg
pushf
add
jecxz
or
pop
mov
fsubrs
adc
mov
dec
imul
jmp
jecxz
in
adc
aam
xor
pusha
mov
sbb
lret
js
bnd
cltd
outsb
movsl
ja
cmp
sbb
cmpsb
rep
fcoml
dec
ficoms
sub
push
add
out
rclb
shl
pop
cli
into
xor
sahf
lahf
mov
sbb
movsl
es
sbb
test
sbb
aas
rol
and
sub
adc
push
inc
test
out
mov
in
jae
pushf
xchg
cmp
sub
or
imul
push
adcb
and
pop
into
xor
or
andb
mov
cs
hlt
push
idivb
mov
mov
loope
fildl
out
imul
lret
sbb
imul
add
ret
xchg
repnz
in
add
dec
flds
push
push
dec
pushl
push
pop
xchg
or
mov
dec
fsts
movb
cmp
fcoml
jae
sbb
jmp
adc
fistpl
out
adc
sbb
cmpsb
pop
das
sub
in
xchg
repnz
cld
jl
dec
sbb
or
mov
inc
and
in
in
and
pop
sub
dec
cs
out
rcrb
int
insl
or
inc
scas
gs
sbb
pop
and
ret
mov
cld
xlat
xchg
imul
cmp
xlat
or
xor
stos
jb
stc
sbb
sub
rclb
movsb
jbe
sbb
leave
ret
xchg
das
xor
add
insb
das
mov
dec
in
mov
pop
test
xor
sbb
aas
or
jle
imul
pop
iret
fstpl
pop
mov
and
sub
xor
sbb
dec
in
mov
aaa
test
sbb
add
test
js
mov
jnp
xchg
negb
imul
mov
jo
mov
clc
cmpb
lea
jae
imul
test
lcall
cs
repnz
je
flds
lds
movsl
jnp
cmp
cmp
dec
xorl
into
mov
outsb
rcl
int
jbe
pop
pop
data16
jmp
roll
in
jl
sahf
ja
inc
mov
popa
fnstenv
dec
xchg
mov
test
fucomip
inc
das
imul
shll
cmpb
cltd
xchg
pop
out
outsl
or
inc
cmp
mov
mov
lcall
es
rclb
mov
mov
pop
push
cmp
push
outsb
mov
mov
pop
fwait
mov
outsl
mov
sub
xor
lahf
loope
sub
xchg
dec
mov
jmp
fidivrs
daa
xchg
xor
movsl
clc
xchg
rcll
mov
lea
sub
push
push
push
pop
mov
rcll
repz
sbb
mov
cmc
pop
cmp
push
call
mov
or
sbb
cmpsl
adc
aam
repnz
hlt
and
hlt
mov
andb
mov
js
xor
js
lret
mov
stos
or
sbb
xor
dec
mov
lret
daa
xchg
cmp
ss
inc
rorb
adc
add
xchg
int3
insb
inc
shlb
pop
jp
mov
and
push
lret
mov
das
fisttps
out
push
push
pcmpgtd
mov
sbb
mov
and
out
fwait
push
loope
in
imul
sti
jo
xor
xor
insl
and
in
mov
in
mov
ret
inc
push
clc
fdivl
xlat
movsl
mov
sub
or
out
cmp
pushf
adc
cmp
jne
ja
mov
push
stos
dec
aas
shr
and
pushf
xchg
pop
or
xor
jo
push
sahf
adc
cmp
inc
je
mov
jbe
in
int
push
dec
push
or
xchg
dec
jns
pop
dec
fmull
test
clc
lods
adc
dec
or
loope
mov
rcrb
inc
mov
cmp
adc
or
stos
cld
shll
jnp
shll
xchg
or
lods
mov
and
pop
jge
jecxz
add
push
xchg
xchg
cs
mov
jg
ljmp
lods
jle
ret
adc
test
out
adc
lock
cmc
jae
lcall
adc
adc
jecxz
xchg
jbe
sbb
and
outsb
fbstp
or
jo
shrb
daa
pop
nop
shrb
xchg
and
in
lahf
pop
fsub
je
push
lea
fcmovne
rcl
daa
adc
cmp
repnz
jb
fstpt
push
add
sub
test
xchg
xchg
fstps
jb
stc
cmc
and
jg
lods
sub
mov
add
insl
mov
mov
inc
xchg
out
and
repz
stos
inc
and
loopne
or
andl
and
rcrl
iret
dec
xor
call
mov
dec
negb
movsl
jo
adc
push
mov
shl
out
mov
mov
push
mov
aam
or
ds
jecxz
or
aaa
ds
hlt
cli
pop
pop
pop
push
jae
cmp
push
sub
sbbl
inc
jae
mov
sub
dec
lds
and
dec
push
ret
or
push
and
std
xor
fmuls
lds
inc
mov
mov
push
call
xor
jb
int3
mov
imulb
es
and
insl
test
mov
outsl
and
popa
call
jbe
fs
mov
dec
or
gs
lea
jne
push
push
stc
rcl
pop
pop
mov
dec
sahf
in
hlt
jge
orw
lds
mov
add
jle
xchg
int3
lret
pushf
je
dec
sti
or
test
mov
fs
fdivrl
aaa
cmp
pop
sarb
arpl
mov
dec
jno
mov
jp
mov
sub
add
jl
ficomps
stos
jns
scas
mov
aaa
fidivrl
out
add
sbb
and
loopne
dec
es
or
mov
adc
test
cld
cltd
insb
mov
adc
dec
mov
mov
outsb
adcb
daa
xor
imul
inc
push
stc
adc
imul
scas
mov
jg
aaa
inc
lods
sbb
jle
xchg
xor
cmp
mov
ret
cli
lret
cmp
mov
stos
cmp
imul
jb
and
cmpsb
fcompl
hlt
cmp
in
jnp
cltd
sub
jo
fsubrs
and
push
loope
or
mov
dec
xor
test
push
dec
xchg
sub
sarb
decb
fistpll
sbb
aam
sbb
dec
pop
rclb
insb
pop
cltd
outsb
jne
xchg
rolb
pop
adcl
int3
or
aaa
jecxz
int
pop
xlat
fisubrl
xchg
xchg
adc
cmpsl
sub
dec
add
xor
cld
inc
dec
ss
aas
jp
xor
loopne
adc
mov
fidivs
pop
lcall
mov
enter
cmp
int
inc
lock
xchg
shrb
test
subb
adc
ja
sbb
loopne
in
mov
inc
adc
sub
cmp
xchg
adc
rol
add
xor
loop
lret
push
jecxz
adc
repz
or
add
insb
pop
push
out
stos
and
lahf
js
mov
push
clc
push
xor
mov
pop
jg
sub
mov
push
or
push
mov
gs
xor
int
push
mov
ljmp
aad
sbb
lret
mov
push
xchg
push
dec
lret
sub
add
rol
lcall
adc
leave
cmp
pop
cmovge
fdivs
sbb
adc
jg
std
mov
std
es
test
xchg
cmp
xorb
adc
sub
leave
adc
int
and
insb
lds
or
fdiv
sahf
scas
popf
adc
add
outsl
cmc
push
or
push
mov
call
in
stc
fldt
inc
stos
pop
into
cmp
rcl
dec
out
js
inc
decb
xchg
sbb
bound
or
sbb
jecxz
dec
pop
sbb
add
dec
cltd
pop
add
shlb
push
push
xchg
andl
mov
bound
out
sub
lods
xor
mov
lock
int3
outsb
hlt
mov
cmpb
hlt
mov
and
scas
dec
lock
mov
adc
xchg
rcll
fidivs
push
inc
dec
js
xchg
adc
adc
jmp
mov
sbbl
pop
dec
test
xchg
mov
push
push
mov
out
or
or
inc
stos
je
pop
push
xor
cmp
cmpsl
ljmp
and
testl
push
pop
mov
pop
cld
outsl
cmp
psrad
scas
dec
mov
test
cmc
mov
popf
repz
ficompl
arpl
lea
mov
ja
loop
or
scas
mov
jp
cli
jle
add
xchg
sub
sbb
adc
or
lods
movups
xor
pop
push
pop
stos
ret
inc
lea
xchg
mov
or
aad
imul
icebp
sbb
scas
mov
mov
xchg
adcb
inc
sub
cmc
pop
add
sahf
cmp
sbb
dec
out
push
stos
and
scas
adc
dec
inc
and
xchg
setp
lret
push
arpl
pop
das
pop
sbb
arpl
and
rorl
adc
sbb
outsl
arpl
dec
popl
fs
pop
or
lret
movsb
pop
mov
std
loopne
addr16
ficompl
jg
stos
inc
jle
xchg
mov
orl
cmp
jbe
nop
xlat
add
sub
xchg
aad
mov
adc
inc
fsubr
add
xchg
in
push
cmpl
inc
xor
pop
fisubrs
movsl
les
ficoml
movsl
ds
mov
test
fwait
mov
aas
push
fs
fstpl
xchg
lret
ja
movsl
pop
fbstp
orl
into
cltd
xor
push
sbb
mov
pop
xlat
mov
push
idiv
jo
or
test
mov
mov
jge
fprem1
cmp
adc
and
ret
neg
pop
sbb
mov
leave
xchg
xchg
lock
and
mov
pop
outsl
sub
cmp
jecxz
pusha
andb
lods
outsl
imull
sub
inc
lret
jnp
pop
xor
out
fldenv
lcall
jbe
cmpsb
int3
jbe,pn
sbb
push
rclb
mov
lcall
push
xchg
xor
mov
adc
add
sbb
inc
rcrl
pop
icebp
push
sub
andl
pop
pop
push
rclb
std
sbb
xor
out
lods
in
inc
pop
cmpsb
cmpsb
push
sti
push
mov
or
hlt
dec
xor
or
dec
cmpsb
loop
popf
imul
mov
jecxz
lahf
dec
dec
aas
and
fldl
ret
fcoml
mov
mov
ret
xor
adcl
cli
add
jg
add
lret
xchg
lret
shlb
scas
cmc
xlat
sub
loope
bound
mov
jae
sub
in
into
push
dec
movb
cmc
out
jmp
cmp
jp
mov
jb
fiadds
repz
xchg
pop
divb
int
push
stos
dec
in
xor
pop
arpl
outsl
adc
inc
or
xchg
mov
or
push
shrl
xor
xor
push
cmp
xorl
inc
mov
mov
dec
cwtl
cwtl
out
lods
in
js
lret
jmp
push
fstl
ret
push
xor
push
scas
and
cli
pushf
popa
ret
cmp
dec
es
xchg
lea
mov
aad
adc
ret
jl
out
lods
cwtl
ja
into
mov
imul
je
loope
and
sub
mov
cmp
dec
mov
add
xor
lcall
clc
sbb
and
mov
sbb
xor
sbb
fmull
int
pop
outsb
sbb
cmp
mov
push
push
inc
popa
les
enter
sti
repz
sub
das
jmp
cmp
imul
mov
aam
roll
lock
mov
stc
es
mov
pop
cld
popa
bound
cld
iret
ficoml
jns
push
mov
pop
pop
sub
enter
das
or
mov
shlb
xchg
or
subb
cmpsl
mov
sub
popf
jmp
sbb
mov
repz
adcl
inc
popf
pop
push
mov
jno
or
mov
add
fildl
lods
sti
cld
push
add
dec
mov
ds
enter
cld
lods
hlt
icebp
repnz
stos
push
xchg
jae
divb
cmc
xor
sahf
add
scas
fbld
sbb
mov
int3
ret
push
cs
add
pop
not
in
jae
lret
inc
xor
fabs
test
fisubl
dec
ficomps
jbe
fnstenv
dec
test
cmp
adc
cmpsb
repnz
mov
mov
adc
das
xchg
loop
ret
or
mov
fs
icebp
cmpsb
aas
stos
cmp
adc
xor
push
shlb
shr
jmp
test
mov
enter
in
xor
and
dec
inc
ljmp
xchg
sbb
sti
frstor
out
daa
lea
adc
add
xchg
lea
aad
mov
adc
xor
mov
gs
arpl
hlt
cmpsb
mov
out
out
pusha
ljmp
loopne
jl
stos
and
fwait
jne
add
fcomps
imul
in
inc
les
outsl
hlt
cwtl
aad
xchg
xor
or
out
push
add
push
push
mov
in
sbb
lahf
iret
gs
test
div
stos
lods
mov
and
cmp
push
push
xor
test
cwtl
and
mov
cmpsb
scas
sub
xlat
inc
push
pop
xlat
and
inc
pop
movsb
movsb
lea
mov
fwait
outsl
jae
add
mov
subl
sub
jbe
pop
sub
je
and
fistpll
lahf
in
or
mov
clc
add
fisttpl
shrb
movsb
push
add
dec
fisttpll
add
aam
mov
mov
in
loopne
xchg
push
mov
adc
repnz
adc
pop
mov
js
push
adc
repz
addr16
or
mov
in
and
dec
push
pusha
pop
mov
jo
pop
jne
roll
dec
in
and
inc
fs
adc
and
jle
adc
mov
arpl
dec
mov
ret
aam
mov
imul
enter
les
push
mov
pop
loop
out
imul
enter
push
aaa
jg
lcall
and
divb
push
jo
push
cltd
mov
jns
jns
add
out
stos
rcrl
pop
lret
cmc
lcall
idiv
cmp
adc
gs
jbe
rcl
push
adc
insl
idivb
push
xor
ds
add
cmpsl
in
fs
cmp
fisttpl
imul
jmp
or
push
sub
inc
ja
inc
and
movsb
mov
mov
stos
push
sub
adc
loop
push
push
hlt
popf
mov
cmp
and
enter
jno
push
aam
cld
add
insl
or
pop
cld
out
jp
cld
lea
cs
movsb
add
cmpsl
sub
popa
mov
push
loop
jno
cli
out
ficoms
iret
jl
pop
in
mov
xor
addr16
lcall
ret
lods
rcr
arpl
mov
adc
and
mulb
dec
es
jbe
pushf
loope
insb
std
test
mov
xchg
leave
jo
pop
lret
sbb
in
leave
pop
sbb
lret
out
aaa
xor
fwait
inc
loop
push
sahf
xor
rorb
testl
sub
mov
xchg
pop
mov
fisubrs
xor
xlat
mov
or
lock
adc
add
xor
push
roll
hlt
scas
add
scas
int
push
jnp
setbe
test
outsl
insl
add
std
inc
das
jmp
loop
fisttpl
lods
mov
in
sbb
repnz
pushf
lret
cmp
xor
pop
ret
push
aam
adc
fdivrl
adc
ret
sub
dec
and
in
adc
popa
xchg
inc
ss
jo
lock
ret
jbe
mov
adc
addr16
fstp
push
out
jl
js
insb
call
arpl
and
cli
push
imull
mov
push
shll
sti
add
in
popa
repnz
insb
mov
xchg
jp
cli
mov
mov
imul
mov
cli
xchg
repz
sbb
movsb
clc
jnp
iret
leave
dec
jo
test
mov
andb
in
jns
mov
xchg
inc
cmpb
pusha
dec
das
push
dec
lret
js
mov
inc
mov
lret
mov
push
cmp
clc
mov
xlat
ret
lock
mov
pop
add
lret
ss
xchg
cld
bound
lahf
adc
shlb
rclb
dec
test
or
sbb
out
sbb
adc
mov
sbb
mov
repnz
enter
xchg
mov
sub
xchg
lret
inc
jmp
jl,pn
fidivrs
decl
pop
cmpsl
lahf
fnstenv
cmp
call
lahf
cmp
xchg
or
lods
xorb
dec
mov
stos
stos
movsb
test
jns
sub
mov
aad
adcb
into
jne
test
insl
lods
jae
js
push
inc
scas
out
andb
sbb
sbb
nop
and
and
or
into
jp
repz
hlt
shlb
and
fwait
out
mov
test
xchg
arpl
cmp
sub
and
jno
std
pop
je
xchg
jmp
jo
dec
inc
mov
xor
pop
sub
jmp
mov
inc
dec
inc
stos
nop
mov
pop
adc
mov
adc
daa
repnz
mov
sub
pop
repnz
mov
frstor
mov
shlb
ret
negb
sti
dec
ss
adc
gs
cmp
enter
mov
leave
mov
xor
jmp
fldt
test
dec
inc
xor
std
pop
xchg
mov
ret
push
sbb
inc
push
outsl
sub
leave
pop
mov
add
push
push
inc
xchg
arpl
shr
and
inc
add
std
arpl
inc
notb
pop
pop
mov
mov
inc
das
cmpsb
mov
xor
sbb
rorb
and
lret
cli
mov
stos
pop
xchg
xchg
push
fiaddl
jge
sub
xchg
xor
shrb
sub
inc
iret
sbb
dec
movsb
add
xchg
pusha
add
jl
mov
movsl
xor
jge
add
cltd
and
cltd
push
push
out
sub
jmp
addr16
sbb
xorl
fdivrs
jns
dec
sub
pop
cs
mov
cmc
clc
jnp
fwait
cli
aas
jae
aad
leave
push
insb
xor
push
cs
inc
testb
mov
pop
idivl
xor
jle
pushf
and
xor
into
mov
push
movsl
ljmp
stos
mov
pushl
sub
push
mov
cmp
sar
cmp
mov
pushf
testb
or
xchg
or
lods
test
mov
pushf
test
pop
fidivl
pop
aas
xlat
sbb
in
mov
push
jnp
inc
jmp
adc
pop
repnz
push
stc
mov
xchg
and
das
push
mov
cli
xchg
std
setle
dec
mov
sub
jg
cld
dec
dec
dec
stos
sub
fscale
fwait
imul
add
inc
cs
or
inc
cmp
xchg
outsl
js
in
call
movsl
rorl
hlt
jae
jmp
mulb
dec
ficoml
adc
or
inc
cmp
jmp
pop
ret
xor
iret
dec
mov
inc
cmp
inc
mov
jecxz
iret
js
out
xor
mov
sbb
inc
inc
loopne
dec
mov
pop
ficompl
sub
adc
sub
cli
icebp
add
nop
fildll
mov
xor
sarb
iret
faddl
inc
fnstcw
fisubrs
test
fdivrl
clc
lods
jae
loop
mov
popf
inc
es
shrl
fisttpll
mov
fistps
mov
or
inc
xor
inc
dec
pop
ljmp
pop
out
insb
js
pushf
push
mov
dec
inc
ljmp
in
mov
cmpsb
and
loop
xchg
add
icebp
es
call
int3
enter
and
lods
mov
push
scas
pop
dec
shr
mov
cmp
pop
cwtl
idivb
adc
xchg
dec
push
fisubrl
jge
fcmovb
fstps
pop
mov
sbb
mov
iret
daa
ds
xor
shlb
dec
jl
mov
in
push
fndisi(8087
push
pusha
aas
push
or
loope
push
ds
push
adc
dec
aad
pop
xlat
inc
aaa
notb
andl
enter
push
aas
pop
inc
xor
imul
inc
push
or
shr
adc
inc
xchg
xchg
sub
shl
jmp
mov
or
jle
ljmp
insl
decb
push
xlat
imul
xchg
lods
mov
jp
push
mov
jecxz
clc
addr16
mov
and
and
push
xchg
jp
loope
enter
stc
ret
lds
rcrb
ret
jns
fistl
shll
xchg
cmp
mul
xchg
xchg
dec
jnp
fisttps
in
jmp
dec
movsl
mov
jmp
mov
and
sbb
mov
push
mov
movsl
shrb
loop
repnz
adc
es
imul
std
cmp
inc
mov
rorb
into
testb
fucomi
adc
insl
mov
cmp
insb
hlt
fucom
xor
das
aam
inc
sbb
xor
xchg
jmp
inc
sbb
mov
fimuls
xor
adc
sub
jae
aaa
push
mov
lcall
jne
lret
xchg
imul
sbb
dec
mov
jle
or
pop
not
add
scas
sub
push
jl
repz
jns
xor
pop
inc
nop
std
inc
xchg
sbb
push
scas
loopne
les
cmpsb
int3
pop
insl
je
adc
mov
aam
jne
movsb
xchg
inc
mov
push
sti
call
mov
incl
mov
fmull
ficoms
mov
lea
insl
push
adc
pop
daa
ficoml
psubd
mov
in
popf
ds
push
shll
mov
jl
dec
cmpsl
sahf
or
xchg
mov
loop
add
xchg
add
dec
pop
mov
xor
push
dec
push
sbb
aad
dec
or
pusha
mul
out
dec
in
shlb
xchg
jmp
and
movsl
scas
add
cwtl
dec
rcr
sti
mov
out
jge
idivl
out
jo
sbb
std
inc
icebp
or
loop
jecxz
lcall
and
pop
aad
or
fmuls
sub
icebp
lods
int3
outsl
js
data16
lret
cmc
sbb
loope
jecxz
xchg
and
pushf
lcall
or
xchg
loope
dec
or
negl
push
roll
daa
push
sub
add
cmp
adc
mov
movsl
rorb
or
add
out
mov
int
lds
roll
push
stos
loopne
adc
cmp
and
das
jmp
sub
cli
sub
inc
leave
pop
cmp
lock
outsb
or
les
das
jecxz
xchg
enter
lds
cmp
lret
dec
jge
mov
mov
aaa
jecxz
xor
out
push
xchg
movsb
adc
stc
adc
mov
mov
xor
rol
push
repz
cmp
neg
leave
jg
sbb
cmc
dec
dec
insb
fimull
sbb
add
mov
test
cvtdq2ps
movsb
cmp
test
jle
inc
js
and
outsb
sbb
sar
pop
or
cmp
addr16
jge
das
dec
ret
bound
testb
cmp
sub
mov
mov
mov
push
test
or
ds
xor
les
out
je
jg
dec
fisubs
call
pop
cltd
sbb
push
xchg
cltd
inc
pusha
arpl
dec
fdivl
scas
jno
cltd
jl
test
adc
ficompl
jg
push
sub
lods
jp
jmp
pop
mov
mov
out
sbb
fcomp
inc
sarb
mov
mov
jg
mov
js
mov
filds
in
cmpsl
hlt
daa
lahf
mov
push
xorl
aam
les
lret
popf
push
aas
xchg
fisubl
out
scas
stos
test
mov
mov
ja
stos
adc
ja
clc
popf
pushf
fst
scas
movl
xchg
decb
das
shll
inc
jmp
pop
jb
jns
int
fistl
loope
inc
cmp
leave
mov
add
adc
insl
mov
fimull
fwait
lods
aaa
stos
dec
mov
or
divb
adc
fdivs
popa
mov
lods
testb
pop
shlb
cmc
push
and
push
in
in
or
cmp
loop
dec
and
aaa
sbb
adc
fisubl
pushf
sub
popf
data16
fcoms
iret
mov
push
loopne
fbld
inc
out
sti
mov
ja
aad
cmp
cmc
sbb
adc
mov
nop
mov
sahf
popf
push
mov
xchg
bound
imul
mov
sti
push
pop
mov
push
nop
sub
cld
loope
into
les
cmp
and
mov
sub
jns
or
or
cmp
pop
stos
flds
and
andb
cld
mov
scas
rorb
cld
aas
stos
lahf
int
jbe
jae
jle
out
mov
cmpsb
push
xchg
pop
push
roll
push
jns
inc
add
subb
aaa
or
call
jae
jp
inc
inc
icebp
jno
lret
popa
dec
iret
adc
xchg
jmp
push
ret
sub
dec
std
insl
dec
gs
aam
push
std
es
outsb
popa
sub
sub
mov
fldt
mov
lret
call
pop
shlb
push
xchg
jbe
scas
icebp
ss
stc
std
ds
sbb
in
or
sub
lock
icebp
stos
jbe
out
jp
loopne
shrb
es
mov
fsubrl
pop
mov
cmp
jp
pop
pop
mov
loop
pop
pop
cmp
loopne
sahf
hlt
outsb
lods
popf
inc
rclb
loop
adc
pop
xor
sbb
pop
movsl
bound
jae
sub
adc
enter
sub
cwtl
xlat
imul
push
pusha
std
jp
fisubrs
cmc
or
push
mov
leave
outsl
pop
pop
iret
inc
sbb
mov
xlat
mov
push
add
cmovns
jbe
mov
aad
rolb
into
mov
repz
dec
aaa
call
and
xor
stos
or
pop
cmp
and
pop
je
repz
sub
in
lahf
fcompl
sbb
pop
outsl
pop
mov
lea
cmpb
negl
stc
sbbl
jne
test
cmp
sbb
xor
pop
cmp
aam
cs
and
add
js
leave
jbe
out
cmp
aad
xchg
mov
sub
jmp
test
xchg
mov
stos
jo
jae
or
mov
jno
imul
sbb
movsb
pop
sub
aas
cmp
das
in
sbb
or
adc
mov
sahf
pushf
sbb
sbb
das
fisttpll
pop
lods
lret
dec
hlt
lea
push
push
mov
imul
arpl
pop
loopne
lods
sbb
or
xchg
frstor
xchg
pop
add
enter
mov
imul
cs
and
int3
xor
daa
sub
add
imull
or
mov
or
sub
jns
dec
lods
push
icebp
dec
vpaddw
xor
lds
adc
orb
dec
sub
cli
adcl
int3
cmp
mov
insl
xchg
push
mov
dec
mov
stc
dec
movsb
push
pop
scas
inc
or
mov
sbb
adc
daa
negb
test
jge
sub
imul
inc
mov
cmp
iret
loop
aaa
adc
mov
mov
jmp
xchg
mov
loope
pop
fwait
xor
frstor
cmpsl
mov
fucom
jo
mov
test
adc
mov
xor
das
push
pop
sbb
sarl
imul
es
and
stos
sub
or
mov
jo
sbb
fwait
pop
outsb
das
sub
mov
dec
or
mov
mov
adcl
mov
sub
adc
subl
icebp
xchg
push
push
fdivl
in
loop
mov
sub
mov
call
loop
call
gs
ds
inc
js
fisttpll
add
add
aaa
sub
and
jge
test
or
orl
loop
es
icebp
dec
sahf
fisubrs
mov
cltd
ss
xchg
call
cmp
nop
gs
imull
or
addr16
sar
mov
mov
xorl
out
and
pop
lds
lods
mov
push
ror
pushf
insl
mov
xchg
inc
jg
je
push
inc
outsb
out
ret
pop
je
adc
vpsrld
pop
jg
arpl
push
lods
jns
jnp
jnp
hlt
mov
mov
pop
jb
movups
les
mov
aam
mov
adc
mov
mov
and
jge
xor
dec
lea
adc
data16
int3
aad
cmpsb
lea
mov
std
outsl
cs
xor
jns
pushf
sbb
fdivs
add
xchg
sbbb
inc
xchg
imul
inc
outsb
mov
inc
mov
jl
jae
sbb
insl
adc
xchg
arpl
mov
es
in
cmpl
and
xchg
pop
or
xlat
mov
and
addr16
fstpt
fmuls
jmp
ret
inc
push
cmp
sub
icebp
lcall
mov
mov
inc
jecxz
jle
jbe
loopne
xchg
mov
in
add
xchg
sub
push
add
shrl
call
inc
iret
lret
shrl
push
loopne
sbb
cmp
fists
aas
insb
fwait
inc
xchg
daa
xchg
cmp
scas
sbb
push
push
subl
rorl
cld
cmpsb
mov
push
aaa
mov
adc
ss
test
sub
in
mov
cmp
pop
jno
or
rcrl
call
sub
xor
adc
dec
mov
pop
out
clc
adc
pop
mov
sub
out
pop
out
xchg
cmpsb
dec
pop
aad
test
cmp
push
lods
jl
addr16
ss
fldt
orl
pop
xchg
fdivr
cli
imul
mov
ljmp
imul
into
dec
fwait
int3
adc
stos
adc
inc
or
outsl
iret
mov
hlt
add
popf
or
scas
fs
outsb
cld
sarl
push
xchg
adc
andl
xchg
xchg
pop
jbe
inc
jae
jns
push
cltd
xchg
popf
adc
jbe
dec
je
push
jge
sbb
stos
mov
rcrl
adc
lods
adc
jae
rorb
js
test
insl
ret
and
fsub
or
repz
and
filds
cmc
sub
push
out
shll
ret
mov
roll
mov
pop
shl
mov
cmc
scas
iret
jl
pop
das
xchg
stos
xor
mov
ljmp
mov
jp
mov
xchg
mov
add
imul
dec
or
and
divl
or
outsl
js
fistl
loopne
lds
mov
aaa
sar
and
inc
int3
aam
sti
add
in
and
jae
or
popa
push
js
mov
imull
xchg
and
jo
cmp
adc
dec
insb
push
sub
mov
xor
and
sub
fwait
roll
lods
rorl
pop
dec
sti
sbb
data16
sub
sub
pop
xchg
or
cmp
jg
push
aad
outsb
sbb
notb
rcrl
fidivs
iret
add
sahf
xor
sbb
sub
dec
fimuls
fsubrs
mov
insl
add
nop
shll
and
insl
sbb
in
aad
dec
nop
push
das
xchg
cltd
fstpt
sbb
sub
pushf
mov
pop
in
xor
aaa
sub
xchg
jp
aaa
imul
adc
xchg
add
gs
daa
push
inc
shl
cmp
scas
orl
enter
pushf
fnstenv
dec
dec
movsb
fcompl
lods
dec
lods
fs
mov
mov
scas
adc
insb
sub
out
adc
inc
xlat
inc
bound
dec
std
lret
mov
pop
cli
mov
mov
jle
ds
mov
mov
fs
shrl
jno
sbb
sbb
aas
dec
pop
dec
xchg
pusha
aas
jae
jmp
cs
jbe
pop
pop
dec
mov
adc
fldl
bound
mov
push
std
add
into
push
mov
xor
aam
adc
repnz
mov
lea
adc
test
add
in
lods
add
or
mov
outsl
dec
sbb
jge
or
inc
aad
sbb
sub
and
shr
int
aad
xchg
sarl
out
cmpsl
repz
repnz
cmp
dec
add
inc
jae
ljmp
cmp
hlt
shlb
es
out
enter
gs
call
int
out
lahf
xchg
js
inc
xchg
push
mov
or
shr
or
jle
add
sub
or
std
ret
and
movsl
pop
nop
dec
inc
inc
notb
leave
mov
subl
lods
adc
xchg
xlat
or
scas
test
push
jge
addr16
mov
insl
ret
shlb
mov
cld
ret
and
cmpb
pop
adc
and
sbb
sbbb
and
iret
sub
dec
cmpl
jae
cld
clc
or
adc
pop
jne
cs
negl
mov
mov
add
jae
mov
xchg
mov
in
sbb
or
into
jg
dec
xor
outsl
add
lods
and
stos
call
test
push
fsubp
bound
inc
in
sbb
pop
sbb
je
jae
std
dec
pop
or
and
or
sub
out
testl
cmp
cmp
js
mov
mov
arpl
pop
icebp
mov
sub
inc
and
flds
dec
cld
sub
pop
mov
daa
xor
mov
lahf
jns
mov
std
dec
std
out
or
and
mov
arpl
inc
test
leave
cwtl
jge
jb
lods
mov
jle
addr16
gs
aam
cmp
jp
or
mov
mov
iret
rcr
popa
rorl
jb
jl
out
dec
dec
popf
pop
xchg
gs
sub
inc
movsb
out
lret
fs
jle
xchg
sub
rorb
cmc
pop
push
mov
pop
mov
mov
fnsave
push
lret
sub
mov
cwtl
push
loopne
jne
dec
push
les
push
enter
fiaddl
and
inc
pop
std
dec
inc
rorl
cwtl
mov
push
and
fimuls
adc
pop
test
fcmovnu
ss
aaa
push
pop
test
ja
popf
mov
cmp
ret
cmp
jmp
cwtl
or
aaa
icebp
mov
inc
repnz
decl
fildll
cmp
pop
mov
repz
sarl
enter
adc
dec
push
leave
adc
push
rorl
add
scas
xchg
lods
add
or
adc
adc
insl
aas
lcall
sti
mov
rolb
iret
add
aas
addb
and
adc
cmp
push
mov
sub
dec
jle
mov
pop
or
or
inc
sbb
div
pop
cmp
jmp
mov
lahf
xor
sub
fdivl
clc
cld
testl
pop
push
mov
adc
pop
out
std
adc
lret
loopne
in
outsl
adcl
or
mov
cmc
lcall
incl
test
insb
mov
ret
pop
cwtl
mov
xchg
xor
xchg
sbb
sti
cli
xchg
cmp
cltd
leave
pushf
shrb
das
jecxz
xchg
pusha
jnp
push
xchg
pushl
or
cmp
fisttpl
loopne
ret
push
cmp
clc
imul
rolb
sub
or
stos
xchg
arpl
jbe
xchg
sub
mov
aas
sbb
adc
and
hlt
push
and
mov
add
neg
scas
js
lods
sbb
jns
nop
aad
fisubrl
adc
sub
dec
adc
aas
nop
arpl
cmpl
lock
sbb
push
ljmp
xor
nop
inc
pushf
lahf
ret
ss
aas
arpl
lds
xor
pushf
xchg
push
addr16
cmpl
mov
cli
xor
sbb
andl
sarb
xchg
ja
sti
sahf
cli
fmulp
shlb
or
mov
pop
adc
jl
ss
std
out
xchg
into
xlat
adc
movsb
in
xchg
aaa
jmp
insl
pop
mov
out
or
mov
in
adc
sbb
or
std
mov
sub
mov
and
or
mov
lret
sbb
inc
mov
sub
loope
sub
aas
xchg
lds
fstp
fwait
ds
adc
hlt
outsb
dec
call
sbb
insl
dec
or
add
jno
adc
je
gs
mov
dec
int3
push
push
movsl
jne
inc
loopne
cld
sbb
movsb
dec
icebp
pop
shr
hlt
and
scas
jbe
push
insl
jg
imul
or
das
push
in
sbb
pop
cwtl
es
fsubl
stos
not
xchg
movsl
mov
ss
add
inc
add
and
js
push
ja
loopne
cli
dec
fsubrl
pusha
and
jae
push
push
out
daa
dec
out
add
jo
sub
sahf
jbe
outsb
xorb
dec
cmpl
push
stos
sub
lcall
jnp
add
mov
inc
enter
pop
jp
nop
pop
shll
mov
das
iret
jg
popf
push
push
xchg
inc
push
loope
repz
push
bound
popf
mov
or
pop
nop
pop
xor
fcmove
mov
mov
push
or
xchg
xchg
in
mov
insl
cltd
iret
cli
cld
or
push
insl
aaa
in
arpl
push
into
xor
lea
or
mov
rcl
xchg
fidivs
xor
xchg
ret
xor
fsubrl
imul
jne
xlat
cmpsl
loop
cmpsb
or
popl
neg
push
dec
add
and
andb
dec
and
insb
mull
add
add
dec
popa
sub
sub
std
mov
xchg
adc
test
pusha
dec
jb
pop
loopne
sub
adc
jno
ss
jge
leave
inc
mov
inc
aam
cmp
out
add
pusha
daa
fistpl
mov
idivb
imul
jecxz
loopne
loop
push
pop
cld
mov
jbe
addl
cmc
inc
mov
std
push
out
fdivrl
ljmp
jb
mov
ja
jmp
mov
mov
or
jle
outsb
mov
add
ss
and
mov
loop
fiaddl
or
incb
adc
mov
cmp
lods
imul
mov
rcrl
dec
pop
stos
sub
movsl
xor
or
and
loopne
and
and
test
outsb
outsl
roll
mov
jg
movsl
cld
sub
mov
sbb
mov
add
xchg
movl
jge
add
rcpps
int3
mov
mov
fistps
cld
cmp
cmpsl
dec
push
int
adc
add
mov
ret
enter
mov
pop
pop
ss
mov
ror
test
dec
and
sub
adc
adc
call
mov
cli
call
aaa
pop
mov
in
fcmovnu
cmp
lret
icebp
xlat
lea
ror
sbb
mov
popf
sbb
faddl
pop
ss
lock
or
cmp
aaa
push
cmc
ja
test
add
je
punpckhbw
dec
jnp
mov
inc
sar
daa
xchg
add
mov
and
cmp
ret
sbb
cmc
addr16
xor
sti
dec
jmp
lcall
jbe
cmp
push
paddsb
fstp
jno
push
and
popa
loopne
cmc
adc
or
shlb
in
pop
test
aam
fldl
cmp
aam
insl
dec
mov
pop
aad
icebp
jp
outsl
xchg
mov
cmp
push
inc
lea
cmpsb
imul
icebp
push
lock
das
or
in
xor
adc
mov
push
cmp
notb
mov
jge
outsl
dec
aam
fsubs
xor
lods
sub
imul
fmuls
push
pop
test
in
ljmp
cmpb
daa
and
cmp
test
jae
sbb
rorl
mov
in
int3
jbe
popa
sbbb
lods
cmp
inc
add
mov
cld
sti
or
stos
inc
in
jge
cmp
adc
icebp
adc
lret
adc
sub
leave
sahf
sub
or
icebp
aas
aas
push
pushf
push
push
movsb
int3
pop
pop
cmp
jbe
ljmp
cmp
lss
daa
jle
scas
pop
xchg
pop
inc
aaa
adc
outsb
mul
adc
loopne
loopne
xchg
pop
pushf
rcrl
sub
out
add
and
dec
push
fs
adc
mov
daa
popa
les
xor
or
testb
jae
mov
pushf
ret
aas
dec
xchg
push
xchg
jle
lret
add
add
out
sbb
push
pop
inc
sbb
cli
inc
mov
push
xor
iret
dec
ss
lods
mov
imul
push
xchg
or
xor
or
xchg
pushf
movsb
pop
gs
or
aad
mov
jecxz
lcall
mov
jo
lds
test
stos
lret
mov
adc
pop
xor
in
mov
aaa
jnp
jle
and
push
push
arpl
popf
imul
data16
cmp
in
rcll
jb
inc
aas
fiaddl
ja
arpl
mov
jno
mov
sub
and
movsb
sub
lock
repnz
or
xor
add
mov
and
cwtl
ja
dec
and
sbb
xor
dec
xchg
idivb
xchg
rolb
out
popa
push
out
and
icebp
outsb
test
mov
jl
test
imull
mov
sbb
cmp
cs
xchg
adc
movsl
fwait
jno
roll
jl
dec
inc
dec
div
iret
add
insl
pop
mov
dec
cmpsl
xchg
aam
push
mov
insb
cmp
pop
pop
sub
mov
flds
lods
jnp
les
loope
scas
out
repnz
adc
movb
cmp
and
dec
aam
daa
lret
out
scas
mov
xor
mov
push
scas
ret
out
xchg
outsb
xorl
mov
lcall
push
mov
jns
mov
fldt
sub
push
xor
push
push
adc
stc
fs
into
and
fimuls
fdivrl
push
sub
push
add
test
xchg
scas
mov
and
jge
cmc
std
pop
ja
cmp
test
adc
testb
call
outsb
push
dec
mov
add
mov
and
cmp
add
xchg
or
mov
repz
loop
scas
pop
pop
inc
test
pop
cmp
mov
sar
sbb
or
adc
jno
decl
ljmp
and
repz
jne
jo
mov
popf
pop
sub
push
repz
outsb
sub
shr
push
xchg
add
xchg
daa
or
subb
enter
cmp
adc
mov
dec
inc
cmp
icebp
xchg
ss
jns
add
imul
leave
imul
mov
lds
pushf
sbb
mov
cmc
mov
mov
aas
lcall
fnstcw
iret
jae
inc
adc
push
jp
aad
and
sahf
xchg
xchg
adc
xchg
sub
out
in
hlt
mov
push
push
add
xchg
pop
adc
push
das
shl
push
add
jmp
mov
sbb
sub
sbb
movsb
lods
loopne
dec
iret
lcall
lods
std
subl
jl
je
mov
dec
sub
aam
mov
aad
pop
cmc
inc
or
and
into
mov
lods
gs
xchg
loope
add
push
cs
subb
fidivrs
test
add
adc
sbb
aad
shll
std
lret
icebp
cwtl
in
jnp
aad
add
mov
mov
dec
jmp
sbbl
in
ffreep
es
pop
js
pusha
push
insl
notl
iret
movb
add
lahf
xchg
mov
adc
mov
pop
gs
cmp
cmc
add
xchg
out
xor
arpl
sub
mov
jp
cmp
mov
inc
jle
dec
push
imul
fldlg2
mov
cmp
out
mov
fsub
popa
sbb
inc
roll
jle
or
xchg
or
jns
adc
dec
adc
aad
jae
xor
out
cmp
cmpl
stos
cmpsl
dec
pusha
sub
je
sub
mov
test
sub
insl
inc
in
shll
push
xchg
cmp
xchg
ljmp
sub
outsl
xchg
mov
pop
lods
outsl
sbb
sub
lcall
shrb
imul
fstpl
xchg
aam
mov
daa
incb
cmp
roll
shr
adc
jl
movsl
pop
sbb
adc
pop
outsb
push
bound
cmpb
add
jnp
cli
fdivr
loopne
jg
push
imul
or
test
xorl
stc
pusha
stos
xchg
mov
pop
mov
sahf
pop
add
shl
sub
push
mul
scas
lock
repnz
sbb
sub
inc
xchg
inc
add
mov
pop
sub
imul
pop
jg
or
add
jns
or
repnz
mov
adc
cmpsb
sbb
test
adc
mov
mov
xor
sub
push
or
or
gs
std
and
sti
push
pop
loop
shll
cmpsl
cltd
test
loope
sarb
mov
jo
mov
add
cwtl
sbb
cmp
imul
sbb
mov
pop
and
and
push
leave
xor
int3
clc
fistpl
mov
inc
sub
sbb
testl
xlat
mov
arpl
les
mov
pop
dec
aaa
adc
xchg
push
inc
cmp
xchg
or
push
lret
ljmp
adc
lret
stos
jne
and
mov
ja
adc
rclb
fcoms
and
push
lcall
ss
sbb
pop
adc
add
inc
dec
and
add
das
xor
and
lds
dec
mov
jne
xor
mov
xor
mov
sub
xor
xor
out
clc
xor
dec
xor
and
leave
cmp
push
xchg
dec
jae
sbb
icebp
cltd
mov
in
mov
inc
test
dec
aas
dec
aad
push
movsb
shr
sbb
in
mov
lock
dec
xchg
mov
mov
imul
movsb
mov
cmpsb
jl
insb
pop
or
mov
leave
pop
cmc
mov
mov
rcrb
imul
std
jmp
jecxz
jg
push
pop
pop
jge
fsubrl
orl
bswap
mov
jb
out
rcll
fcmovnb
pushf
les
adc
std
sub
xchg
enter
pop
aam
js
push
bound
mov
xchg
mov
cmp
popf
jbe
and
shl
push
xor
test
jns
popa
ja
pop
popf
ret
xchg
out
and
test
push
mov
mov
scas
mov
push
sub
es
aaa
lmsw
dec
je
cs
push
ret
fmuls
test
mov
cmpsl
jno
push
jbe
mov
sub
pop
loope
test
jmp
sub
fists
arpl
shlb
xchg
aam
or
or
sti
fs
sbbl
pop
aaa
dec
popf
mov
and
sub
imul
ja
scas
lret
movsl
incb
mov
push
mov
stos
pop
or
xlat
lods
and
cmp
clc
mov
gs
or
mulb
sub
cmpsb
mov
and
fadds
addr16
cld
repz
push
iret
dec
pushf
xor
cmp
jl
mov
imul
ret
cli
mov
and
xchg
aas
stos
nop
out
rcrl
dec
or
sbb
cmpsl
mov
xchg
rolb
lods
fs
sbb
add
fisttps
lret
jns
inc
jb
int3
and
xor
or
in
das
xorb
insb
jne
sbb
movsb
nop
add
xchg
sbbb
or
stc
aad
xchg
hlt
dec
clc
shll
pop
cld
outsb
addl
add
fwait
and
push
scas
fdivs
sbb
test
imul
out
lcall
stc
sbb
xchg
int3
loop
push
add
test
dec
xchg
ss
idivb
mov
int
sbb
pop
mov
ds
dec
pop
xorl
adc
mov
cmp
fcmovnbe
dec
loop
jecxz
inc
xlat
fidivrl
pushf
xor
movsl
ljmp
dec
pop
add
insl
and
out
loope
ss
clc
cmp
movsl
mov
add
sub
jmp
xchg
cmp
dec
sub
aad
jo
std
lret
mov
mov
imul
xchg
lods
jae
lret
mov
int3
lret
and
loop
int
out
fildll
xchg
testb
or
imul
negl
and
lcall
test
rclb
and
pop
fildl
cmp
pop
push
and
test
stc
ficoms
add
leave
mov
xor
into
testb
icebp
cmp
xor
jno
fnstenv
int3
ds
mov
arpl
pop
mov
mov
repz
push
fstpt
or
sbb
mov
add
mov
lods
sub
xchg
mov
and
lret
out
sub
mov
insl
mov
sti
jno
jns
fdivr
mov
xlat
sub
fcmovu
push
adc
push
inc
lea
adc
mov
cmp
and
jle
in
and
je
stc
rol
adc
mov
mov
dec
adc
dec
mov
mov
mov
mov
ret
add
je
pop
lods
mov
or
xorl
fwait
add
int
mov
aaa
or
inc
and
xchg
fisttpl
sbb
jge
shll
fisttpll
lods
in
xchg
iret
pop
push
mov
fmull
mov
ss
jg
jg
mov
dec
mov
rcll
imul
int3
sub
xchg
ficompl
dec
lds
hlt
lret
push
cmpb
inc
lcall
or
and
mov
repz
leave
int3
inc
mov
out
and
fisubs
cmpsb
and
inc
ret
lods
mov
ret
sub
gs
ss
xchg
test
jns
mov
dec
mov
and
mov
xor
add
iret
repz
imul
insl
imul
xor
popf
scas
mov
fwait
dec
push
sbb
mov
jecxz
mov
sbb
ja
fcom
into
xchg
popa
dec
movsl
jb
jno
outsb
jmp
adc
imulb
daa
xor
push
ljmp
mulb
mov
pop
rorl
pop
pop
test
das
mov
sbb
sub
andl
dec
int
xor
into
cmp
scas
int3
xchg
cmp
popf
outsb
cmpsb
xchg
xor
inc
fists
ljmp
outsb
mov
bnd
pop
push
stos
lods
icebp
xor
test
outsb
movsl
mov
rol
popf
cltd
mov
loopne
sbb
xchg
sbb
arpl
sub
pushw
mov
lret
repnz
aad
enter
jns
popf
pop
out
and
xor
bnd
inc
sub
and
icebp
push
and
cmpsl
clc
stos
sti
cmp
out
xchg
mov
adc
in
ljmp
jle
pop
mov
ffree
push
jbe
arpl
cmc
test
dec
jecxz
pop
hlt
in
pop
jge
sahf
sub
jecxz
and
jae
rcrl
ret
pop
cmp
out
xchg
loopne
out
es
movsl
add
jg
or
fcoml
arpl
mov
cmpb
or
or
cmp
jae
jnp
fiadds
mov
cld
jno
push
mov
sub
xchg
add
stos
out
je
mov
mov
cld
push
inc
push
hlt
mov
sub
sub
xor
mov
popf
movsl
sti
icebp
stos
mov
aaa
adc
repnz
lret
loopne
sub
fcoml
insb
les
mov
decl
outsl
xchg
jge
test
inc
dec
std
in
adc
insb
jno
out
xchg
popa
mov
jmp
imul
mov
cmpsb
pop
xor
dec
dec
fsts
stos
xor
mov
xchg
and
ret
jle
sub
mov
cli
and
mov
adc
cmc
imul
sub
aam
inc
es
arpl
std
add
repnz
fwait
clc
push
adc
jo
imul
ja
gs
sub
iret
xor
inc
adc
ret
in
orb
inc
push
mov
repz
repnz
xchg
xchg
push
or
cli
xchg
ret
or
jecxz
lcall
int
scas
and
inc
mov
cmp
test
inc
mov
stos
sub
out
mov
sarb
inc
and
cli
mov
je
lret
nop
adc
ret
das
in
ja
test
pusha
mov
and
sbb
sbb
mov
sub
inc
xchg
mov
xor
je
mov
lock
jnp
test
subl
lret
hlt
pop
or
stc
out
and
or
scas
adc
adc
int3
push
int3
movsb
addr16
test
ret
mov
negb
or
sbb
or
pop
jne
xchg
outsl
mov
sbb
push
scas
xor
mov
or
xchg
xorb
shll
dec
jno
stos
mov
mov
outsb
rcrl
js
insb
sub
jb
add
mov
faddl
xor
es
into
ficompl
inc
and
in
or
cmc
out
xor
cli
ret
or
les
scas
sbb
shrb
jge
sbb
adc
dec
hlt
mov
cmc
pop
leave
push
push
inc
mov
mov
cmp
lcall
inc
mov
jns
aam
push
test
mov
push
data16
fmull
mov
mov
mov
aam
push
push
cs
rorb
aad
adc
mov
iret
out
cld
idivb
xor
ja
int3
mov
cmp
fcomp
xor
clc
ret
or
xchg
mov
cmp
iret
and
and
push
jnp
notb
scas
mov
push
push
lock
push
fdivrs
shll
loop
jl
cltd
inc
mov
dec
loop
jecxz
mov
mov
ja
push
loope
aam
push
notb
lret
push
and
pop
push
push
loopne
stos
leave
dec
mov
in
lods
jmp
jge
lods
push
push
mov
int
clc
adc
xor
pop
gs
sti
loope
clc
mov
fwait
mov
xchg
mov
xchg
sub
test
mov
jbe
jl
sbb
test
sarb
lds
lret
jne
ja
dec
bnd
sub
xchg
dec
sub
adc
xchg
add
call
ja
pop
pop
and
fs
inc
pop
subb
es
sbb
sub
adc
cld
mov
and
iret
int3
shrl
pop
stos
sub
setb
in
sub
inc
fstps
fimuls
sub
push
inc
or
jns
test
cmp
rcr
and
push
mov
pop
inc
call
repz
cwtl
test
add
sub
jmp
adc
jge
cltd
pop
in
shlb
out
test
scas
and
xor
mov
sub
mov
lds
mov
pop
imul
sbb
stc
push
sbb
idivl
sarl
iret
push
icebp
jl
cs
adc
mov
insl
xor
mov
xor
mov
loopne
xchg
add
ja
inc
jae
fiaddl
push
aas
iret
aas
cmp
aad
jns
js
add
mov
xchg
leave
jns
mov
or
and
fldl
sub
mov
cmp
lods
test
sbb
pop
cmp
jmp
and
stc
leave
addr16
cltd
into
pusha
mov
leave
inc
popa
mov
cmpb
push
jne
sbb
insl
imul
jl
mov
pextrw
jle
int3
test
loope
and
out
sbb
insb
inc
xchg
lds
or
data16
adc
test
jl
cmp
daa
adcl
xor
rcll
fsubs
in
sahf
sub
mov
add
cmp
cltd
fcoms
lahf
jge
fadd
mov
cmc
lret
mov
lea
nop
inc
push
mull
daa
pop
imul
and
pusha
negb
mov
loop
pop
fisubl
and
cld
inc
sbb
cs
xchg
xchg
sub
repnz
fists
adcb
mov
orb
in
out
mov
int3
arpl
push
push
es
sbb
mov
push
fimuls
lds
and
inc
pusha
cmp
pop
adc
loopne
fsubp
fnstsw
mov
mov
loop
test
cwtl
fs
dec
arpl
cltd
adc
sub
xor
repz
pop
adc
hlt
es
cmp
lods
add
lods
xor
adc
fstps
push
cmp
clc
cld
aas
add
adc
xor
pop
jmp
aas
xchg
addr16
mov
push
das
into
hlt
out
mov
xchg
dec
xchg
loope
ret
aam
jmp
xchg
adc
rcl
push
loopne
dec
dec
mov
sbb
mov
outsl
push
out
ret
lret
dec
cmpsl
adc
fadd
dec
mov
fdivl
dec
andl
adc
xchg
repz
cmp
mov
loop
test
mov
aam
pushf
push
jmp
push
add
scas
cmpsl
das
cmp
jmp
xor
in
incb
dec
pop
dec
sub
xor
gs
rcll
lcall
jnp
sub
mov
notb
fcoml
xchg
and
mov
dec
and
and
mov
out
dec
ja
or
fwait
cs
mov
pusha
es
sub
xlat
xchg
dec
push
clc
outsb
je
lret
cmp
pop
push
mov
int3
sahf
xchg
orb
loopne
or
or
sti
pop
es
ja
ja
pop
roll
scas
sarb
or
mov
out
mov
cmp
mov
mov
push
pop
xor
mov
sub
das
lea
mov
ss
fdivrs
loopne
cmp
loope
aad
sbb
ret
xchg
hlt
and
xchg
nop
inc
aad
fsubrs
loope
unpckhps
mov
leave
cmp
insl
push
pusha
and
inc
out
jo
lds
and
int
inc
je
ja
lods
mov
lret
sub
sbb
data16
insb
test
leave
flds
mov
xor
push
and
movsl
fisttps
mov
xor
cmp
pop
sub
pop
adcb
in
and
outsb
sub
adc
cld
lahf
pop
outsb
dec
in
out
imul
jbe
inc
adc
into
mov
add
sub
sahf
shll
frstor
divb
mov
repz
push
test
push
loope
pop
les
test
clc
insl
or
sub
ljmp
fwait
cwtl
xchg
aam
test
ret
sbb
sarb
inc
sub
lea
std
ds
push
push
add
jl
sub
js
xchg
loope
into
add
cmp
or
lahf
cmp
into
lret
imul
mov
sbb
cmp
jb
int
mov
daa
movsl
in
or
dec
out
adc
or
adc
add
ret
add
imul
jns
bts
or
or
push
movsb
scas
cmpsl
clc
fwait
dec
rcl
mov
cmp
mov
int
jmp
dec
or
popf
mov
mov
mov
cmpsb
mov
jcxz
sub
cwtl
adc
jnp
inc
loop
mov
xchg
outsb
jle
fidivl
into
add
cmp
mov
enter
mov
ja
ja
inc
push
fwait
push
test
lret
cwtl
imul
mov
sbb
mov
dec
js
adc
lods
mov
out
jle
lcall
arpl
cltd
dec
dec
xchg
leave
std
fnstsw
dec
jmp
push
push
mov
sub
add
sbb
adc
es
push
dec
sbb
cmp
test
sub
call
int
inc
lcall
arpl
stc
and
sub
in
sahf
cmp
out
jecxz
xchg
arpl
mov
push
popf
adc
sub
dec
adc
test
mov
test
push
incl
gs
scas
mov
adc
aad
clc
sub
cmpsl
jae
xchg
jno
pop
push
push
stos
dec
stos
push
ss
mov
xor
jae
adc
sbb
mov
and
mov
sbb
push
pop
icebp
imul
inc
push
loop
and
pop
das
push
ja
inc
addr16
push
outsb
shlb
and
daa
ficompl
bound
jl
push
pop
add
or
jecxz
or
jnp
int3
iret
insl
lock
pushf
jne
lds
lods
xchg
mov
lret
addr16
push
xor
fisubl
in
cmp
push
aas
xor
divb
ds
fstps
or
loope
mov
je
cld
insl
cmp
loopne
xor
xor
jge
cltd
mov
mov
movswl
cmp
mov
jae
push
setns
sti
or
lock
inc
fildl
lahf
mov
lahf
dec
pop
icebp
push
adc
push
clc
shrb
dec
aaa
adc
fcoms
jne
jp
mov
ljmp
dec
jg
popa
sbb
dec
push
adc
and
fdivrp
mov
nop
mov
or
sti
xchg
jo
lods
pop
mov
call
stc
out
sbbb
mov
insl
sbbl
or
inc
xchg
dec
hlt
nop
mov
out
lret
sub
xor
adc
icebp
pop
fiadds
outsl
add
cltd
hlt
popa
xor
scas
sahf
jle
push
adc
sub
in
mov
mov
push
lret
pop
pop
jns
stos
pop
xchg
fildll
mov
mov
int3
jecxz
inc
stos
add
cmp
jno
mov
aam
outsl
xchg
mov
pop
into
mov
xor
adc
mov
scas
xchg
mov
lock
sar
ret
movsl
xor
push
jnp
xor
icebp
pusha
andl
or
sbb
sahf
shlb
sbb
dec
mov
stc
std
or
js
or
ja
xlat
pop
and
inc
and
rcrl
pop
inc
pop
xchg
icebp
cli
sbb
outsb
xchg
ret
aaa
jne
and
add
leave
stos
gs
outsb
pop
sbb
lcall
test
nop
sbb
cmp
ja
dec
ljmp
cld
cmpsl
in
mov
insb
mov
insb
and
mov
cmp
mov
pop
fisubl
je
in
sbb
sbb
pop
mov
mov
cmp
xchg
mov
pop
jmp
push
jo
adc
sbb
pop
jmp
ljmp
xchg
aas
jns
dec
loop
outsb
cli
mov
dec
push
inc
out
rorb
push
testb
mov
inc
mov
leave
adc
adc
popf
into
loopne
adc
ret
pop
rol
negb
xchg
mov
cmc
jnp
pop
imul
sub
shl
out
gs
jmp
negl
lret
stos
je
lods
xor
fwait
xchg
test
pop
call
popf
cmp
mull
call
dec
cmpsb
loop
rcrb
sub
lahf
imull
shrb
ret
xchg
or
sub
dec
in
inc
pop
filds
movsb
mov
xadd
addr16
cmp
adc
ret
popa
out
sbb
adc
pop
in
std
push
cmpsl
mov
xchg
outsb
fs
shl
out
lret
aam
cmp
insb
inc
cmp
mov
or
adcl
inc
jo
mov
add
popf
ss
and
pusha
adc
int3
mov
mov
adc
lret
es
shl
push
sbb
imul
add
mov
popf
stos
fwait
jge
les
loop
sbb
mov
jge
lods
and
cmpsb
lahf
jne
sub
pop
mov
pop
adc
adc
imul
jae
mov
dec
xor
or
jo
jp
imul
sub
pop
scas
sar
mov
push
inc
cmp
popf
lea
divl
mov
inc
mov
int
mov
xlat
xchg
inc
sbb
sub
mov
jmp
lds
ds
inc
imul
popf
xor
outsb
je
mov
dec
inc
data16
or
repnz
jge
jp
inc
sbb
inc
xchg
outsl
add
xchg
xchg
xlat
dec
std
gs
mov
xor
pop
add
mov
arpl
sub
jb
lahf
stos
ss
or
iret
sbb
cli
loope
add
inc
mov
ficompl
or
shl
js
mov
xchg
jg
jne
daa
imul
stos
push
cmp
mov
sbb
out
dec
push
inc
jns
jnp
bswap
mov
insl
mov
lods
ret
stc
leave
and
push
mov
push
cmp
iret
scas
mov
andl
addr16
push
sbb
push
inc
lcall
loopne
mov
mov
mov
les
jne
in
push
xlat
scas
mov
stos
int
jne
xchg
inc
inc
sub
in
jecxz
stos
adc
mov
sub
fs
fwait
mov
xor
sub
mov
xchg
inc
ret
lods
push
sti
scas
lods
repnz
xchg
jne
test
jns
fwait
cltd
dec
cmpsb
xchg
mov
enter
sarl
add
hlt
in
mov
xchg
xor
add
daa
leave
sub
fisttpl
sbb
mov
or
sti
mov
sti
push
pop
cmpsl
int3
dec
out
and
cmc
cmpsb
bound
sbb
mov
jge
out
les
mov
inc
sub
mov
push
cmpsb
push
adc
or
aaa
and
push
insl
idiv
and
lret
aad
cmc
dec
js
loope
mov
xchg
sub
jne
mov
insl
repnz
fnsave
push
fsubl
add
xor
ret
pop
jne
or
movsl
daa
xor
sbb
pushf
jmp
hlt
test
mov
test
and
jge
and
push
in
fstp
shrb
addl
dec
cld
test
mov
out
test
mov
xchg
mov
shrb
sub
shll
inc
mov
popf
mov
repnz
or
mov
push
pop
dec
cmc
sbb
mov
aam
mov
mov
int3
and
push
xchg
push
lsl
lock
mov
cmp
ljmp
cmpb
ds
pop
lcall
cmp
addl
sub
cli
sub
repz
in
sub
mov
popa
out
add
lret
les
pop
mov
lahf
pop
push
and
out
xor
out
adc
and
in
and
fsubrs
std
or
or
in
add
aaa
rcrl
je
pop
dec
std
push
mov
iret
xor
inc
sbb
pop
sub
sbb
mov
mov
push
imul
stos
fists
aas
cmp
mov
mov
ret
jnp
and
dec
pop
mov
imul
scas
scas
movsl
rol
inc
cmp
lea
in
lret
pop
add
sbb
jae
outsb
fs
push
xchg
fwait
leave
js
mov
cmc
movsb
mov
xlat
loop
fldt
xor
sti
ror
pop
nop
push
movsl
adc
sbb
in
jae
je
shrb
sarl
fwait
add
ror
cmp
lods
shll
pop
insb
mov
mov
cltd
repnz
in
sbb
add
xor
scas
test
push
aaa
lds
xor
incl
mov
push
loope
rcll
add
sbb
lahf
stos
pushf
addr16
pop
adc
stos
fnclex
mov
mov
aas
jns
jl
and
xor
lcall
test
add
push
ret
sbb
sar
sbbb
psllw
xchg
push
scas
mov
lahf
imul
push
mov
pop
inc
hlt
shll
shlb
cmp
ljmp
sbb
lods
mov
int3
dec
fmuls
sbb
sub
jp
lods
dec
fcomps
push
sub
jno
push
dec
int3
hlt
dec
test
jl
jge
sub
jecxz
mov
sub
xchg
xchg
jle
xchg
ds
sbb
mov
ficompl
xor
mov
sbb
xor
pop
out
jecxz
leave
hlt
rorb
and
movsl
pop
movsl
imull
adc
cmp
nop
leave
mov
jge
in
jb
arpl
mov
adc
call
sarb
stos
jl
lret
mull
ds
cmp
jb
rcrl
cmpps
inc
fnsetpm(287
pop
lret
mov
xor
iret
mov
aad
lea
ja
and
xlat
inc
xchg
mov
cmp
inc
cmp
loope
pop
arpl
in
dec
xor
xor
orl
or
sbb
cmpl
out
fcmovbe
or
mov
or
bound
bound
test
icebp
in
inc
jecxz
imul
xor
sbb
loope
or
adc
out
shll
emms
xor
lock
mov
sti
outsb
aad
in
xlat
stos
scas
sbb
stc
xchg
shlb
xchg
icebp
cmp
sbb
sbb
cs
jo
fldl
rorl
pop
and
pushf
into
jne
loopne
movsb
push
push
sbb
fwait
jecxz
cmp
dec
pusha
in
mov
cli
imul
add
outsl
mov
dec
jmp
mov
jbe
rorl
mov
mov
subb
out
subl
sbb
dec
nop
in
into
out
jg
lahf
movsl
jae
push
cmp
mov
sbb
jb
and
roll
jae
shl
mov
into
outsb
scas
nopl
orb
xor
repnz
aaa
orb
dec
adc
add
xor
cltd
xor
pop
sahf
ds
or
pop
out
xchg
sbb
call
in
rcr
cltd
push
pop
xchg
js
mov
nop
std
shl
stos
mov
out
les
repz
xor
adc
add
loop
or
data16
outsb
lahf
mov
leave
add
jb
in
ljmp
clc
aaa
pop
push
sbb
add
xchg
adc
shlb
jbe
or
mov
test
push
push
jnp
jno
outsb
xor
mov
xorl
push
jo
sbb
out
add
xor
add
xor
icebp
push
add
das
ficoml
insb
adc
mov
jbe
fidivrl
xor
dec
out
imulb
push
aam
loopne
or
lcall
mov
clc
sbb
jb
inc
fiaddl
inc
lods
ss
in
cs
pop
je
inc
insl
adc
loop
leave
ret
mov
mov
das
sbb
scas
mov
push
nop
mov
sbb
or
sbb
gs
data16
movsb
out
in
push
inc
push
cli
mov
mov
imul
dec
test
sub
inc
jecxz
mov
add
stos
mov
xchg
jmp
test
ja
pusha
xor
pop
jns
xchg
lods
mov
or
repnz
cmp
mov
mov
mov
test
and
out
add
stc
insl
adc
out
mov
cli
jbe
adc
aam
leave
icebp
dec
test
pop
mov
lds
aam
dec
or
push
push
shl
mov
sbb
jnp
or
cmp
jecxz
fstpt
aas
sahf
mov
mov
decb
and
mov
into
sub
adc
aaa
mov
cmp
popa
push
dec
imul
divb
cmp
mov
adc
sbb
in
pop
imul
cmp
lds
fwait
test
movl
jg
xor
lods
cmp
lahf
mov
jbe
aam
loope
adc
lea
out
fidivl
popa
loope,pt
jae
cmp
xchg
pop
icebp
shlb
inc
into
data16
ret
adc
aad
int
clc
xchg
ja
in
lea
mov
mov
test
dec
and
cld
inc
push
mov
imul
stos
movl
xchg
cltd
das
and
and
push
gs
push
cld
or
jle
push
mov
jns
hlt
sbb
int3
xchg
mov
adc
daa
mov
push
insl
mov
nop
nop
loop
jnp
push
and
mov
insl
rcrl
jo
les
dec
pop
add
outsb
leave
inc
out
lock
imul
clc
aas
jle
inc
fdiv
push
dec
dec
mov
movsl
cmpsl
insl
popa
imul
test
fnstcw
fisubl
adc
das
lahf
mov
dec
andl
insl
popf
xor
sbb
adc
or
jmp
addb
mov
pop
mov
mov
push
sub
sub
push
pop
lahf
mov
xchg
push
xchg
xchg
xlat
and
and
out
mov
cmp
cmp
lods
ljmp
sbb
sub
jae
dec
mov
push
enter
dec
inc
xor
mov
xor
pop
test
mov
aas
gs
inc
int
aaa
ja
xlat
fmul
sub
in
shr
dec
je
cwtl
xchg
data16
inc
xor
mov
xchg
aam
pop
test
cmc
inc
inc
fidivl
cld
pop
aam
lcall
or
pop
leave
mov
jge
lret
arpl
cmc
loope
pop
jno
rclb
jecxz
jecxz
xchg
dec
dec
inc
test
dec
or
out
stc
fsubl
mov
xor
movsl
mov
mov
and
adc
jg
fwait
and
movsl
lds
imul
test
dec
mov
js
ret
aad
fwait
push
pop
jb
dec
pushf
out
ss
imul
jl
test
xchg
sub
inc
cmp
push
dec
lea
jecxz
rcl
fimuls
mov
adc
in
sbb
sbbl
inc
jl
sub
adc
pop
inc
or
rolb
dec
jo
fcompl
mov
and
sti
push
jbe
jo
push
sub
mov
cmpsl
data16
addb
shrb
cli
or
aas
cmp
mov
orl
cmp
cmpb
xor
loopne
dec
push
pop
adc
mov
or
push
mov
push
jae
jge
mov
mov
rclb
das
mov
arpl
dec
dec
add
adc
add
data16
lds
or
sub
cmpsl
xor
out
xchg
pop
push
out
push
cli
fxch
pop
clc
je
push
insl
out
sbb
lret
inc
sub
loopne
mov
les
into
inc
lock
insb
pop
inc
pop
out
xchg
add
cmp
mov
pop
ficompl
cmp
push
in
adc
test
adc
dec
cmpsl
test
idivb
mov
enter
jle
cwtl
sub
jmp
or
pop
push
inc
and
scas
sub
test
inc
dec
ljmp
xchg
jns
pop
jmp
xchg
daa
bound
fmuls
jo
in
mov
or
testl
lea
sbb
pop
mov
jge
ds
inc
popf
push
dec
in
sub
dec
pushl
inc
jne
mov
pop
icebp
cld
xor
stos
cwtl
int
mov
jle
ljmp
rcrl
jp
fsubrl
cmc
adc
pop
or
dec
mov
cmp
xchg
fisubrs
xor
test
jmp
iret
dec
mov
movsl
test
repnz
add
cmp
mov
xchg
push
xor
iret
push
lods
fisubs
and
xor
testl
sbbl
inc
mov
gs
cmp
test
aas
mov
shll
ret
cmpsb
inc
scas
inc
or
popa
xor
cmp
dec
push
xor
dec
adc
cmp
xchg
flds
dec
adc
sub
jmp
jmp
inc
mov
push
xchg
fildl
std
pop
ficoml
test
xchg
jecxz
std
dec
adc
pop
fwait
shlb
dec
cmp
mull
ds
pop
out
jl
sub
lock
push
nop
js
outsl
cmp
inc
andb
xchg
mov
sbb
xor
dec
cmp
aad
push
rcrb
fcomps
inc
dec
mov
xchg
add
sub
scas
dec
lret
dec
or
cmp
dec
or
in
mov
call
cwtl
add
fistps
iret
or
aaa
dec
sbb
lret
cmp
out
into
mov
jns
and
pop
push
in
shll
aad
ror
sarl
pusha
xchg
adc
sbb
or
test
xchg
mov
push
or
testl
xor
popa
scas
loop
pop
popf
mov
pushf
sbb
mov
mov
xsha256
cmpsb
xchg
aam
inc
push
adc
mov
dec
ss
lea
push
and
sbb
or
movsl
xchg
dec
push
nop
push
adc
jmp
sub
int
fcomps
lods
or
inc
pop
dec
pusha
mov
and
mov
in
out
jb
push
int
mov
push
jmp
fnstenv
fdivl
insl
xchg
es
xor
pop
push
lods
jae
xor
jns
sub
sub
sub
push
push
lcall
dec
mov
in
sbb
add
mov
jmp
xlat
jmp
adc
xchg
cwtl
mov
sub
nop
out
into
xor
out
push
sti
pop
and
outsl
loopne
sub
add
push
xchg
dec
mov
inc
xchg
aad
pop
sbb
mov
sub
loop
bound
lcall
int3
sti
cltd
pushf
fsub
repnz
jns
arpl
negb
or
scas
ret
bound
adc
and
lods
jmp
inc
mov
subb
fcmovnbe
adc
fdivr
cmp
sahf
push
outsl
hlt
fcmovbe
add
jle
dec
loop
pop
mov
int3
xchg
loop
in
lahf
xchg
jecxz
decl
push
loope
push
jg
inc
dec
ds
push
insl
test
xchg
lods
cmc
fstpt
aas
add
mov
ss
inc
gs
inc
stc
push
ds
pop
sar
xchg
xlat
add
dec
call
test
mov
sbb
dec
add
js
es
insl
jno
lds
xor
dec
adc
jecxz
out
xchg
jns
push
loope
shll
and
pop
mov
pop
inc
sub
or
cmpsl
and
and
pop
xor
loopne
roll
scas
nop
jb
insl
les
je
aam
fmuls
adc
sahf
insl
xchg
and
inc
mov
add
and
test
add
lret
scas
arpl
in
mov
xchg
add
mov
cli
sbb
js
inc
stos
jb
aam
addb
rcrl
lahf
xor
loope
mov
movsb
arpl
les
dec
daa
add
pop
ret
push
and
repnz
or
lret
cmp
mov
mov
sub
test
push
shrb
lcall
inc
dec
dec
and
fs
adc
inc
dec
pop
jo
jbe
sbb
mov
stos
sbb
aas
mov
das
test
and
into
inc
xor
fldl
and
jl
inc
insb
mov
sbb
pop
inc
data16
xchg
cwtl
dec
cmp
in
imul
push
sarb
sarl
pop
mov
ds
mov
bound
xlat
and
mov
jb
mov
movsb
fmull
pop
lods
scas
std
in
repz
push
stc
xchg
sub
dec
cmp
das
icebp
leave
imul
mov
das
test
movsl
std
cmc
fmuls
and
sahf
push
imul
inc
mov
or
jl
fisttpl
sub
leave
and
xor
loopne
or
xchg
sub
pop
xchg
cmp
mov
push
cmp
pop
ret
pushf
push
mov
call
jge
sbb
out
sub
es
push
repnz
stos
lods
jecxz
nop
pop
xchg
cli
jns
stc
dec
imul
sarb
jl
icebp
stos
rcrb
aam
inc
xor
inc
jge
mov
push
add
cmp
sub
mov
in
and
pop
jae
in
inc
mov
mov
adc
pop
xor
and
mov
dec
cmp
je
jmp
xchg
cltd
gs
cmp
push
notb
das
test
out
pop
test
sub
out
sub
xchg
gs
cmc
sti
xchg
jecxz
stos
ljmp
xor
or
push
mov
loopne
sub
movsl
mov
clc
lret
test
inc
xor
sbb
xor
mov
out
je
jnp
xorps
push
adc
or
icebp
stc
cmp
jns
and
push
cli
push
scas
cld
insl
stos
mov
jne
dec
cli
das
mov
call
lds
fcoml
out
fstpt
hlt
adc
mov
fldt
mov
sub
iret
ror
add
aad
pop
stos
jns
adc
cwtl
adc
mov
iret
sti
repnz
outsb
rorb
push
mov
mov
push
call
fidivs
lock
mov
call
inc
sti
mov
subl
and
pop
jmp
sbb
int3
push
jnp
xlat
push
das
out
fxch
popl
shlb
lea
mov
int3
cmpsl
outsb
adc
ror
mov
inc
push
add
mov
orl
out
add
push
mov
mov
sarb
pop
outsb
mov
dec
fs
adc
test
mov
jge
xor
adc
leave
and
add
repz
xchg
mov
fmuls
cli
add
dec
movsb
add
mov
mov
sbb
stos
ret
pushaw
dec
test
xor
xchg
xchg
iret
sbb
adc
dec
and
das
sbb
push
mov
mov
aad
inc
movsl
mov
aad
jae
sub
testl
pop
xor
ja
and
add
jbe
add
mov
mov
imul
mov
xor
xchg
mov
in
scas
cld
cli
fists
pop
cmp
or
xor
cwtl
in
jge
push
ja
adc
mov
add
push
jno
mov
pop
mov
mov
test
lods
and
fucom
cmp
ret
xlat
pushf
inc
js
cmc
in
sti
xchg
mov
xor
inc
pop
and
push
cmovno
ja,pt
scas
arpl
add
repnz
xor
or
movsb
adc
push
fistpll
fdivrl
sti
and
movsb
jbe
lea
inc
push
push
jb
repz
imul
pop
leave
mov
xchg
and
pop
jg
mov
or
test
jecxz
ret
int3
clc
shl
and
jb
mov
cmp
cmp
mov
sub
lret
std
in
gs
movsl
int
mov
mov
shll
push
xchg
into
stos
sub
rol
pop
or
data16
js
lret
jns
cmp
cli
test
add
repnz
jle
jbe
xor
or
arpl
cld
mov
aaa
test
xchg
and
or
jbe
xlat
inc
jo
lods
xchg
mov
push
jl
cli
scas
lods
or
shrb
js
sahf
inc
clc
fs
rol
lea
fwait
test
insl
push
call
aad
pop
out
lcall
xor
inc
xor
or
dec
cmpsl
mov
dec
cld
iret
movsl
ss
sub
cmpsb
pop
jl
ja
js
aas
jb
in
mov
hlt
stc
inc
mov
stos
cs
xchg
fdivrs
outsb
leave
cmp
and
scas
call
test
cwtl
sti
xorl
inc
push
cli
cmp
sbb
xchg
data16
stos
pop
int
add
cwtl
jbe
popw
rcrb
sbb
rorb
jb
sbb
lods
repz
or
pop
xchg
xchg
cmpsl
fadd
mov
and
dec
pop
call
dec
pop
repz
call
push
jno
int3
and
aad
dec
gs
mov
jmp
dec
mov
mov
cli
fcoms
xor
sbb
aad
xor
jmp
add
cmpsl
popf
test
negl
mov
pop
sub
mov
jnp
add
mov
sti
mov
icebp
out
mov
adc
push
and
mov
addl
ficomps
fcoml
and
es
jp
cld
decb
mov
enter
mov
sub
mov
mov
jne
ret
aaa
sub
repnz
and
ljmp
cmp
andb
fnstcw
dec
xchg
push
xlat
pop
sub
jae
out
fldl
add
add
fwait
repnz
cli
and
iret
aam
inc
adc
or
mov
sub
pop
dec
fidivrl
ret
push
or
lds
xor
fsubr
icebp
adc
aaa
jmp
mov
dec
leave
ss
and
jns
filds
repz
sbb
jae
mov
xchg
in
pop
repnz
mov
xor
int3
xor
repz
mov
push
addb
mov
rolb
in
out
xor
cmp
mov
push
sbb
js
add
pop
or
out
push
or
mov
inc
je
sub
mov
adc
test
add
stos
xchg
cs
xlat
push
lods
arpl
outsb
sub
popa
adc
das
push
std
test
and
adc
and
sbb
pop
fiadds
mov
xor
dec
mov
rcll
pop
mov
mov
xor
popf
cmp
sbb
add
pop
ret
sub
push
push
mov
inc
jg
aam
mov
popf
in
cmc
xchg
mov
pop
fst
sahf
sbb
or
or
mov
add
arpl
subl
in
push
ficoml
jb
xlat
filds
stos
fwait
sub
aaa
lcall
pusha
pop
xchg
in
aas
shrb
xor
sbb
sbb
outsb
sbb
cmp
mov
pop
xchg
pushf
test
jae
ror
mov
mov
sbb
sub
repz
and
jns
push
add
daa
stc
lock
cmp
fisubrl
and
push
jo
lea
adc
sbb
pop
lret
sbb
jg
lret
push
lods
push
pop
call
clc
push
cmpsl
mov
xlat
psubsw
int
push
inc
sar
and
mov
into
push
cmc
jge
cmp
scas
mov
sbb
int3
pop
icebp
and
icebp
enter
adc
lods
mov
cmpb
mov
repnz
jne
mull
lret
pop
xchg
xchg
xor
rcrb
ss
outsb
out
rcrl
or
xchg
push
pop
xlat
dec
adc
pop
push
or
mov
cmp
pop
pop
jns
clc
pop
shr
and
jle
xor
iret
mov
nop
std
stc
iret
pushf
sbb
xor
sbb
mov
jmp
mov
stos
dec
les
push
jae
data16
add
xchg
ds
adc
dec
decb
mov
jp
add
sbb
sbb
push
iret
hlt
cld
jecxz
pop
lcall
mov
popf
sbb
add
add
cltd
ljmp
aaa
out
rcrb
cltd
or
test
into
sub
xchg
xchg
stc
pop
roll
dec
lcall
add
iret
inc
push
in
xor
push
jne
or
pop
iret
scas
dec
lods
insb
sub
rorl
mov
jl
mov
jp
cmp
rolb
mov
mov
out
ret
pop
int
xor
outsb
cltd
mov
lods
enter
mov
repnz
fidivrs
xchg
test
xchg
adc
lock
mov
push
and
rcrl
lret
mov
lds
aas
cmp
es
adc
mov
leave
jge
xchg
pusha
popa
daa
adc
pop
pop
adc
je
ds
add
mov
mov
mov
xor
push
or
int
lret
rorl
inc
and
fmull
xchg
icebp
push
pop
pop
sub
push
lea
jno
cs
and
lea
push
sub
enter
cltd
sahf
ret
mov
or
lahf
xor
in
cmp
rolb
sbb
mov
sub
dec
daa
jbe
addr16
pop
dec
pusha
and
xor
pop
jl
int
sarb
jg
inc
jmp
mov
fisubl
or
sub
inc
inc
or
inc
in
loope
mov
adc
cmp
add
cmpsb
jecxz
lcall
xchg
aaa
in
rcr
pop
mov
mov
outsb
rcrl
incb
int
adc
xorb
sbb
in
pusha
or
int
sub
push
lods
inc
lods
jne
imul
jecxz
push
jno
dec
movsl
add
cmc
jle
dec
sbb
stos
add
mov
repz
loope
dec
inc
mov
gs
or
adc
dec
fists
mov
sbb
insl
cwtl
xorl
mov
add
test
loopne
shl
mov
xchg
pop
mov
or
mov
xor
loope
or
pop
mov
loope
lcall
and
lods
sub
out
test
rorb
jo
repnz
ss
dec
fidivrs
bound
orl
mov
sahf
pushf
push
in
mov
out
push
push
imul
push
push
sub
jbe
sbb
imul
ss
mov
add
loopne
imulb
mov
iret
xor
mov
cmp
std
jl
or
out
testl
cmp
and
rcl
push
inc
pop
dec
jne
xchg
movsb
sbb
xor
arpl
dec
xor
mov
push
cmp
in
jb
add
xorl
dec
cmp
aam
mov
adc
mov
fcomps
insl
dec
cmpsl
lds
fstl
int
data16
jge
movsl
lods
xor
and
adc
addb
es
push
push
xlat
cmpl
icebp
hlt
rorl
lret
xchg
jp
pushf
jecxz
int3
ljmp
test
popl
jle
lods
hlt
add
push
mov
push
das
out
out
test
push
add
add
jb
je
daa
jno
sbb
pop
popa
cmp
movsb
scas
jne
cmp
mov
adcb
adc
adc
sbb
mov
mov
imul
cltd
dec
mov
sub
pop
leave
pushf
cmp
in
int3
sub
push
sub
mov
and
es
jae
jp
pushf
lods
dec
lds
mov
cld
sbbl
xor
cltd
mov
mov
pop
fiadds
push
ror
xchg
mov
ja
pop
push
xchg
rcrb
lods
loopne
push
mov
xchg
call
sahf
cmp
jo
mov
xchg
scas
test
push
and
and
xor
fisubs
rorl
pop
add
rcll
fmulp
dec
hlt
pop
sbb
out
rcr
aas
mov
and
sahf
ja
rcll
jmp
push
xlat
inc
xor
imul
outsl
or
jmp
std
pop
pop
push
fisttpll
pop
pop
icebp
lods
push
cli
or
mov
jno
jo
push
mov
test
jg
loope
jbe
push
mov
scas
jb
push
mov
jl
call
pop
add
add
xlat
icebp
adc
xchg
sti
xor
inc
loop
icebp
adc
pop
xacquire
lods
mov
jle
rclb
js
jp
cmp
in
js
xchg
sbb
xor
lods
or
dec
outsb
mov
or
lret
pop
in
mov
mov
cld
sub
out
mov
movsl
mov
shrb
stos
jne
cmpsb
and
push
and
jns
dec
or
clc
stc
push
cld
push
jge
fs
orb
std
orl
adc
inc
cwtl
xor
sub
sub
popa
mov
jbe
add
in
inc
push
cld
cld
repz
mov
xchg
adc
mov
jge
insl
jp
shrl
jecxz
push
fistpll
in
push
mov
dec
nop
push
push
int3
sahf
jle
xchg
mov
repnz
imul
mov
mov
jecxz
test
sbb
inc
cltd
mov
sub
push
nop
push
ffree
lret
fisubl
cmpsb
cmp
xchg
popa
mov
mov
jl
push
in
imul
xchg
jb
in
xchg
inc
pop
pop
mov
lods
lret
or
stos
aam
leave
dec
sti
mov
jecxz
xchg
and
repz
scas
sub
add
push
jmp
in
fcomip
incb
ret
nop
xor
mov
dec
mov
xchg
mov
push
lods
pop
das
into
lods
xor
out
outsl
call
test
mov
cmp
popf
sbb
fdivl
fbstp
decb
ljmp
outsl
jl
cltd
mov
sbb
or
int3
shll
push
aas
xchg
and
sbb
push
imul
jns
lahf
cmp
mov
cmp
aas
test
inc
in
mov
lret
inc
shlb
or
ret
cmp
stos
mov
and
vmwrite
and
iret
inc
sub
mov
cmp
aas
stos
push
rcr
movsb
jbe
mov
adc
push
xor
jmp
push
mov
out
sub
cmp
and
mov
nop
cmpb
pop
mov
das
pushf
push
ret
call
sbb
mov
jp
jns
lods
dec
mov
int3
cmp
outsl
mov
push
int3
mov
jno
test
pop
clc
in
jns
lock
cmpsl
inc
lods
enter
nop
mov
stc
xor
lods
or
fildl
push
xlat
lods
push
and
xor
cs
fsub
xchg
sbb
fcmovnb
lods
data16
fwait
les
cmp
mov
popf
xor
and
add
jl
fstpl
cmovns
or
fidivl
arpl
push
loope
push
stos
insl
cmp
arpl
lds
and
fisttpll
in
push
pushw
clc
repnz
data16
mov
mov
fisubrs
popf
mov
mov
cmp
movsl
cld
loopne
cmp
dec
or
shr
sbb
and
mov
xor
dec
cwtl
cwtl
jge
mov
imul
aam
pop
popa
fstpl
lods
xor
insl
mov
push
cmp
shrl
adcl
repnz
imul
xorb
push
dec
lret
and
lret
pop
push
cmc
push
movsl
mov
mov
das
test
pop
jp
lea
cwtl
cwtl
add
clc
dec
xor
jp
lock
lds
sub
jo
fidivs
mov
sub
mov
mov
daa
pushf
mov
push
iret
mov
stc
mov
pop
jl
shl
ds
insl
les
push
push
cmpsb
push
dec
mov
xor
insb
out
stc
inc
add
mov
addb
add
sbb
add
xlat
jbe
in
out
dec
daa
std
xchg
mov
adc
ljmp
arpl
ljmp
mov
push
fistl
fs
movsl
faddl
lea
les
mov
popf
arpl
dec
dec
cwtl
jno
fdivrs
push
jb
jo
lret
rol
or
cmpsl
insb
cli
stos
add
add
aas
movsl
and
sbb
mov
mov
xor
into
xchg
imul
mov
mov
inc
add
clc
xlat
popa
rcrb
ja
mov
xlat
pop
fcomip
lods
sbb
cmp
in
je
in
fistpll
fstpl
add
xlat
dec
jmp
out
sub
pop
sbb
jge
jae
sarb
in
into
das
mov
adc
ret
mov
or
push
cli
jne
pop
fdivr
adc
push
inc
add
repnz
scas
add
in
out
ljmp
xchg
cld
es
dec
cmp
mov
ljmp
pushf
popa
add
dec
enter
fdivl
mov
sti
xor
arpl
jns
sbb
outsb
and
sbb
jge
adc
mov
int3
mov
jg
dec
int
sbb
je
push
inc
xor
dec
fs
and
pusha
mov
and
les
iret
push
lods
sbb
cwtl
fcomip
xor
ret
in
sub
decb
xchg
cmc
shlb
push
xlat
stos
pop
cmpsb
sub
dec
mov
add
gs
aam
or
ret
outsb
pop
push
aad
jno
push
scas
mov
mov
mov
xor
test
adc
inc
sbb
loop
dec
lret
dec
std
adc
hlt
jmp
xor
sbb
cs
sub
xlat
add
xchg
daa
inc
aaa
push
orl
pushf
movsb
xor
xchg
inc
add
orb
push
stc
pop
inc
mov
push
and
out
cli
ror
jg
insb
inc
dec
test
add
push
je
inc
adc
dec
pop
jp
jecxz
mov
mov
lcall
mov
je
xor
jbe
add
jg
xor
mov
or
jmp
xor
popf
sub
push
mov
out
xor
les
xor
imul
outsb
test
out
inc
or
cli
aam
sub
mov
or
ret
xor
pushf
gs
add
inc
xor
ds
cwtl
xor
shrl
xor
push
std
hlt
jb
mov
sub
add
sub
jno
and
roll
jg
iret
add
dec
repnz
jne
push
int
jo
or
push
not
cmp
cli
jmp
js
jo
jmp
pop
lds
subl
cs
push
ror
je
dec
mov
add
pop
mov
bound
and
sbb
les
test
or
mov
ds
arpl
push
jnp
push
nop
jecxz
dec
in
sarb
or
stc
outsb
insb
scas
push
jecxz
xchg
add
or
clc
fdivrs
outsl
jle
adc
insb
cmpsl
pop
test
leave
mov
insb
xor
or
inc
adc
xor
cmpsl
or
lds
in
mov
js
test
and
xchg
std
or
lock
mov
inc
add
loope
jo
cs
in
xchg
jns
sbb
mov
int
out
add
sub
dec
mov
or
stos
sti
cmpsl
push
push
popf
dec
push
js
or
pop
adc
xchg
mov
fldln2
lods
and
jne,pt
mov
das
in
jo
add
fstpt
inc
loopne
fs
mov
add
pop
popa
dec
sbb
pop
sahf
push
jle
jmp
aam
mov
and
scas
icebp
movsl
sub
xchg
je
sbb
adc
repnz
jne
notb
aam
outsl
cmp
and
fstps
push
scas
sbb
fstpt
call
lcall
adc
mov
mov
xchg
shll
outsl
inc
lcall
in
jb
pop
pop
popf
inc
cmp
and
pop
xchg
lea
ljmp
lahf
adc
out
cmp
imul
mov
test
test
jb
cmp
push
sbb
adc
mov
mov
in
aad
les
ljmp
subb
aad
xor
aas
insb
sahf
shrl
repz
les
dec
pop
jb
push
stos
mov
ror
js
mov
jno
mov
jg
add
in
push
push
mov
orl
push
fldt
in
das
clc
daa
scas
dec
dec
sarb
jg
ret
push
hlt
test
add
sbb
iret
sub
inc
push
pusha
push
mov
mov
dec
inc
movsl
pop
test
mov
enter
adc
adc
ds
add
mov
push
sbb
lret
cmp
rcr
adc
or
das
popf
xchg
icebp
loop
movsl
addr16
fistps
lret
or
jne
pop
sub
cmpl
aaa
insl
inc
sbb
into
cmc
shll
pusha
scas
aaa
push
outsb
xor
repnz
popa
jg
dec
stos
stos
das
sbb
xor
shlb
sub
rcrl
in
fwait
sbb
scas
inc
aas
insb
xor
jmp
fnstcw
xchg
mov
xchg
or
lcall
icebp
test
dec
or
call
cmpsb
incb
cmp
dec
pusha
stc
pop
inc
int3
insb
lcall
fiadds
push
lods
inc
lds
iret
mov
jecxz
jnp
inc
jecxz
fsubr
or
dec
sbb
or
mov
cs
pop
sub
push
mov
inc
aam
pop
sub
test
out
push
xor
pop
jp
dec
mov
lods
es
push
mov
aam
and
pushl
outsb
or
mov
fstps
shll
aad
push
pop
adc
movl
mov
out
nop
dec
mov
fmul
gs
loopne
sub
mov
jl
mov
pop
cwtl
insl
insb
enter
pop
dec
in
push
xor
fbld
imulb
add
dec
lcall
cmp
mov
aam
cmpsl
jno
xor
jl
pop
cmp
jne
int3
popa
add
add
push
sub
loope
arpl
dec
sbb
xchg
test
pop
into
or
in
in
mov
pop
xchg
jg
outsl
sbb
mov
xchg
out
mov
adc
mov
pop
sub
or
decb
mov
push
jecxz
pop
mov
out
fwait
add
fldlg2
aas
in
jp
mov
dec
pop
sub
pop
stc
ja
xchg
cmp
enter
push
dec
lods
shr
inc
dec
sub
mov
hlt
cmp
jecxz
sbb
out
xor
cli
pop
push
xor
add
pand
int3
lea
cmp
sub
add
sbbb
fwait
or
loopne
sbb
xchg
mov
xor
jp
and
fcomi
add
out
scas
mov
sub
insl
cmp
punpcklwd
jae
es
xchg
or
repnz
arpl
popa
scas
adc
inc
loope
sbb
cmpb
loope
shl
push
xor
push
push
inc
mov
jbe
dec
add
push
mov
push
test
pop
neg
push
jo
int
and
xchg
xchg
add
push
push
xchg
fisubrs
xchg
sbb
mov
xchg
in
test
dec
mov
out
lret
and
test
or
dec
fiaddl
test
mov
sbbl
xor
aas
ret
push
or
out
hlt
adc
bound
js
inc
sub
cmp
js
mov
pop
xchg
xchg
or
aam
dec
inc
jb
adc
test
mov
pop
push
fnstenv
mov
jmp
rol
inc
fs
jb
aad
xor
mov
mov
xor
xchg
inc
xor
ud2
xchg
push
nop
xchg
insb
jp
pop
cwtl
in
cwtl
out
icebp
and
rol
fstl
lods
imul
adc
dec
adc
lds
fs
mov
cmp
enter
leave
xchg
sbb
or
xchg
inc
adc
sbb
fisubrs
push
xchg
xchg
cmpsl
add
inc
mov
xchg
scas
jg
cmp
mov
pop
jo
or
push
dec
dec
jb
out
push
push
add
aas
adc
jb
xor
inc
add
cmp
mov
outsb
or
stc
jne
das
cmp
movsb
stos
scas
mov
ljmp
std
addr16
sub
jecxz
mov
mov
inc
aaa
jo
fs
pop
in
xchg
jge
fdivp
push
mov
mov
sbb
add
cmpsl
sub
xchg
mov
ljmp
inc
cld
push
ret
cmc
or
ss
lods
xchg
add
and
fnstenv
push
lods
mov
lcall
std
xchg
jne,pt
mov
push
xacquire
pop
sub
ret
cmp
push
daa
add
stos
shrl
dec
lret
clc
fdivrl
add
push
cwtl
enter
fst
or
lcall
xchg
dec
lahf
nop
sbb
mov
inc
and
push
imul
cwtl
stc
cmpsl
adc
scas
pop
sub
loope
sub
sbb
sbb
cmc
sbb
ss
lahf
arpl
rcll
mov
fs
mov
movsl
arpl
rorl
ror
repnz
outsb
cmp
sub
stc
hlt
imull
mov
sub
fdivl
xchg
or
insl
jbe
or
aad
into
mov
hlt
cmp
sti
inc
in
lock
jp
inc
mov
inc
mov
lods
adc
push
xchg
jb
adcl
sbb
mov
ficoml
frstor
push
out
dec
add
jb
repz
inc
push
lods
out
ja
jne
push
push
cmp
jno
lock
pop
sub
adc
mov
lret
sub
pop
push
ret
int
sub
inc
rcrb
rcll
lret
scas
fwait
mov
cmp
mov
cmp
push
js
loopne
mov
pop
lahf
jnp
movsb
xchg
test
les
movsb
mov
xor
int3
ficoms
dec
cmp
mov
cs
mov
sub
add
pop
adc
rcll
sub
aad
outsb
inc
pop
xor
pop
sub
ja
and
pop
subl
inc
rclb
inc
cs
rorl
mov
dec
jg
pop
sub
sub
cltd
enter
sub
ljmp
jbe
scas
jae
out
mov
outsb
adc
loopne
fcoms
lcall
add
cmp
jmp
outsb
loop
sub
pop
jo
pop
inc
dec
add
xor
xchg
into
int3
and
and
fstl
lods
roll
sub
mov
add
mov
cmpsb
out
notl
jnp
xchg
sub
movsl
sub
fs
mul
hlt
dec
daa
test
push
xor
out
rcrb
dec
cli
shrl
mov
cmp
lret
or
stos
ret
push
push
ljmp
mov
xor
inc
cmp
pop
in
xchg
mov
sahf
cld
dec
mov
out
push
movsb
push
push
cld
mov
and
test
ret
cmp
push
loopne
cmp
out
iret
sub
inc
aad
xchg
sbb
inc
mov
shlb
pop
test
add
push
jno
mov
inc
xchg
mov
dec
movsl
sbb
icebp
cmpsl
dec
popf
mov
test
cmpsl
push
paddusb
dec
repnz
or
bound
push
rolb
xchg
cmpsb
cmpsl
push
inc
sahf
aaa
stc
jle
xor
mov
shll
push
push
cmp
fidivrs
mov
xlat
and
fs
imul
mov
sub
dec
fdivrp
fwait
mov
dec
mov
cmp
mov
fninit
jge
js
jge
repz
nop
loope
inc
psubsb
push
dec
mov
imul
jb
lcall
sahf
mov
jge
imul
cld
jnp
das
fs
sbb
int3
in
and
or
jecxz
mov
orb
xor
arpl
in
shl
and
dec
cmpsb
push
mov
inc
sub
icebp
std
daa
xchg
int3
pop
push
fstl
mov
fmul
rcrl
dec
test
adc
mov
xchg
call
insl
xchg
gs
jp
jo
rcr
cmp
sub
je
call
sti
lods
and
out
lret
aad
into
adc
movsb
je
lock
dec
dec
mov
dec
push
std
xor
and
sub
dec
push
push
mov
not
pop
aaa
incb
cmp
int
mov
mov
aas
jbe
aaa
xchg
jo
adc
scas
pushf
cmc
jge
fwait
sbb
ljmp
out
jno
cmc
into
jnp
and
cmp
dec
or
and
xchg
jns
enter
notl
mov
or
pop
pop
xchg
pop
mov
test
cmp
adc
xor
xchg
sub
in
sti
sub
xor
movsl
inc
std
out
push
movsb
or
xchg
cmp
rorl
mov
mov
xchg
xor
pop
gs
fidivs
int3
cwtl
stos
sbb
fwait
inc
out
sub
dec
push
inc
pushf
and
jmp
testl
fs
push
inc
adc
mov
lods
dec
cmpsl
out
jmp
fcmovb
mov
cmc
icebp
mov
mov
notl
or
pop
push
insl
sbb
sub
into
aad
xchg
sbbb
and
sti
add
stos
fcmovnb
fs
mov
or
imul
out
jmp
and
pop
sbb
dec
sub
dec
roll
jmp
dec
sub
repz
cmpsb
adc
dec
mov
es
xor
rolb
sub
movsl
lcall
adc
hlt
int
pop
mov
adc
fistpl
adc
popf
sbb
fcmovbe
pop
xchg
mov
into
into
leave
std
loop
loop
mov
mov
inc
adc
jg
lock
insb
mov
divb
cwtl
sti
mov
pop
push
shr
add
into
pop
sbb
aas
xor
pop
cmp
sbb
mov
mov
push
add
and
pop
and
data16
mov
jecxz
push
test
push
push
inc
cwtl
push
adcb
in
out
std
pop
push
mov
imul
cmp
std
je
clc
sub
push
push
ret
cmp
nop
jecxz
jne
fsub
fwait
dec
push
sti
arpl
mov
cmc
cmpsl
arpl
cmpsl
enter
jmp
decb
pop
inc
movsb
sbb
cmp
loopne
xchg
jbe
dec
mov
mov
and
xor
push
cld
dec
sbb
inc
sahf
xlat
xchg
ss
daa
in
add
test
pop
mov
adc
sub
out
divb
inc
inc
cmp
call
xor
push
mov
aaa
xchg
sub
inc
pop
sub
push
test
cli
call
insl
and
sti
ficompl
pop
pop
xor
lock
out
shlb
lods
sbb
testl
xchg
pop
jne
sbb
or
push
in
add
ret
or
in
pushf
sub
daa
xchg
sbb
add
cmp
sub
lret
or
stc
cmpsl
xchg
cmpsb
dec
xchg
push
sub
jmp
push
ja
sub
decl
jge
xor
inc
ds
ret
repnz
mov
mov
push
enter
call
jb
mov
and
pushf
inc
sbb
cmp
inc
les
pop
rorl
push
xchg
into
in
sbb
and
pop
mov
rcrb
pop
xor
rcl
adc
mov
mov
addb
aad
and
out
xchg
icebp
popf
adc
rcrb
pop
inc
jns
pop
or
push
xor
sub
pusha
outsl
mov
out
lahf
dec
xor
cs
xchg
or
mov
repz
pusha
sub
inc
jg
push
fs
jle
leave
iret
shll
inc
adc
jp
sub
out
gs
scas
cmp
xor
arpl
ret
test
loopne
jl
add
das
mov
lahf
lcall
adc
pushf
mov
int3
pop
mov
clc
xchg
xor
jae
dec
jecxz
andb
inc
mov
sub
sbb
pop
aad
pushf
jecxz
inc
sbb
push
stc
jmp
and
nop
and
mov
xor
jbe
lods
cmp
fdivl
cmpsb
add
xor
cmpl
ret
divb
add
push
push
or
rolb
sahf
lds
xor
or
mov
xor
dec
or
adcb
jae
cli
sbb
pop
pushf
sbb
jno
nop
mov
leavew
pop
test
xlat
arpl
cmp
arpl
inc
mov
push
adc
repnz
addr16
xchg
fucomip
bnd
mov
jnp
stc
mov
pop
xchg
repz
dec
enter
test
lods
xchg
testb
dec
enter
out
push
push
mov
mov
sbb
std
fisttpll
pop
sti
shll
in
lret
sub
pushl
pop
or
aad
xchg
mov
and
enter
out
pop
xchg
xlat
ljmp
in
scas
push
lahf
sbb
stc
push
lahf
gs
mov
mov
ficomps
fwait
lret
jnp
or
dec
dec
insb
push
test
and
mov
scas
lods
push
imul
outsl
mov
sbb
in
fs
das
lret
gs
addr16
stos
inc
inc
scas
dec
cmc
arpl
adc
mov
dec
jne
dec
or
fsubr
sti
mov
outsl
cwtl
add
imul
jmp
dec
xor
mov
fistps
mov
xor
pop
pop
inc
in
fstl
inc
sbb
lock
and
ds
dec
push
sahf
push
xor
push
lods
ret
push
inc
xor
pop
hlt
test
mov
dec
ret
jmp
push
mov
cmp
dec
lods
xorb
out
xchg
adc
es
ret
bswap
cmpsl
xlat
mov
inc
fsubl
inc
movl
inc
and
fldl
xchg
jnp
outsl
sub
jo
dec
xchg
addr16
jns
mov
jmp
sub
sbb
push
repnz
fimuls
into
dec
ror
mov
sbbl
xor
fistpl
in
mov
sbb
fistl
dec
jmp
mov
lahf
std
mov
pop
pop
pop
push
xchg
xchg
adc
lahf
mov
fcmovu
in
imul
std
sub
push
push
cmp
mov
fadd
aas
or
or
popa
xor
loopne
stos
add
mov
and
add
movsl
dec
enter
mov
jmp
stos
push
jecxz
cmp
jge
or
and
push
mov
lea
sub
cmp
xor
mov
xchg
mov
cltd
mov
inc
pop
mov
jbe
dec
push
das
scas
sub
mov
in
pop
push
daa
inc
mov
push
and
ljmp
test
push
lahf
inc
push
rclb
out
aaa
ret
xor
ljmp
cmp
aam
icebp
push
lcall
les
xor
or
mov
or
imul
js
ss
fs
or
aaa
nop
pop
pusha
out
sub
neg
cltd
push
stos
push
inc
out
mov
pushf
int3
mov
lea
xchg
adc
repz
mov
push
xchg
addb
inc
mov
icebp
jne
cmc
es
test
hlt
mov
add
ljmp
dec
into
mov
mov
pop
std
or
inc
xor
and
add
cmpl
adc
stos
ds
sbb
lds
and
sub
iret
push
or
std
push
cli
out
xlat
push
mov
push
mov
cmp
ja
and
ss
mov
push
jl
nop
mov
mov
fsts
sbb
cmp
lret
daa
stos
mov
divb
pop
jge
mov
mov
cs
cmp
dec
int3
es
in
xor
dec
cmpb
xor
lds
lea
mov
fcmovne
or
sbb
fsubrp
pushf
and
insb
fistpll
jl
out
cmp
push
out
aaa
push
and
jb
mov
out
or
imul
sahf
cmp
int
mov
mov
cld
adc
popl
ret
or
add
rcrb
mov
mov
jle
adc
jmp
mov
adc
mov
mov
and
fidivrl
in
faddp
dec
push
push
jnp
ficoms
out
testb
fnsave
ret
mov
mov
or
enter
lahf
cmp
cwtl
call
pop
dec
push
pop
mov
mov
faddp
push
mulb
add
call
sbb
xor
cmp
enter
jle
mov
fsubrl
iret
cmpl
clc
xor
bound
and
sbb
lods
jbe
pop
push
dec
mov
addb
xchg
cltd
loop
bound
fndisi(8087
dec
xchg
stc
inc
mov
xchg
fimull
jo
pop
mov
std
sbb
aaa
out
adcl
sbb
and
mov
inc
test
cli
leave
pop
xor
dec
add
lahf
stos
loopne
xor
hlt
aad
fcompl
into
mov
imul
ljmp
aas
popf
testl
popf
jbe
sbb
xchg
push
mov
sub
adc
add
adc
movsl
mov
daa
cmc
jo
jge
xchg
scas
and
cmp
fwait
out
int3
ss
and
js
lock
nop
insl
pop
subl
mov
in
mov
int3
sarb
push
push
mov
ret
jmp
adc
lahf
pop
lds
mov
mov
mov
stc
mov
mov
pop
push
or
mov
push
jns
xchg
inc
mov
cs
lock
sub
sbb
imul
cld
sbb
mov
aam
push
ret
out
sbb
ds
mov
mov
mov
pop
mov
insl
push
outsl
and
mov
and
mov
pop
or
pop
mov
fyl2x
and
mov
mov
dec
adc
jge
add
push
push
sar
or
pop
movsb
mov
push
inc
inc
inc
push
xor
lods
cmp
out
xor
dec
psubusb
mov
push
mov
push
scas
movsb
xchg
inc
rcrb
and
jecxz
dec
shl
filds
fidivrl
scas
fwait
push
inc
jecxz
mov
cmpsb
stc
scas
or
mov
adc
call
sub
adc
fisttpll
lds
mov
cmp
popf
pop
addb
fstpt
out
movsb
lea
sbb
mov
jae
sarb
dec
lahf
call
incb
xorl
mov
outsb
popa
and
add
repnz
out
dec
cld
sbb
arpl
rcl
push
pushf
lds
data16
fcompl
cmpsl
pop
int
cltd
insb
add
push
mov
sub
popa
dec
jno
inc
es
in
jmp
pop
js
pop
mov
pop
jge
xchg
int
mov
and
cmp
and
clc
subb
pushf
cld
dec
insl
pop
xchg
dec
fcomi
mov
arpl
decb
push
sub
movsl
iret
idiv
sbb
add
add
stos
fnsave
shrl
daa
cwtl
test
stos
sarb
xor
sahf
pushf
push
out
cmpsb
dec
mov
icebp
pop
ja
std
jo
test
dec
test
sub
jecxz
mov
stc
sbb
shll
movsl
leave
mov
pop
sbb
pop
cmp
test
rolb
out
jp
push
xor
outsl
out
fldenv
or
imul
pop
les
imul
dec
xlat
mov
jge
pop
xor
nop
scas
ficoml
fiadds
jg
mov
clc
cmpsb
out
or
test
inc
pushl
lock
mov
cmp
sbb
mov
adc
jne
pushf
jo
push
inc
inc
outsl
shll
mov
pusha
sbb
lea
xor
inc
out
inc
adc
and
add
jns
and
stos
mov
icebp
aaa
jl
push
sub
test
sbb
out
aad
mov
testl
add
sub
aad
mov
xor
add
dec
out
push
pop
shlb
xor
out
aaa
push
inc
adc
test
out
leave
test
inc
mov
mov
xchg
xor
jnp
repz
imul
xchg
pop
sbb
push
rcr
or
push
cwtl
orb
adc
and
arpl
fs
out
cmp
inc
movlps
dec
jo
jl
popf
push
ret
lods
push
and
sti
mov
bound
add
shll
int3
repz
popf
pop
mov
adc
test
push
lret
iret
xlat
push
nop
leave
imul
and
inc
es
cmp
add
fcomip
jl
in
adc
out
pop
aaa
sub
cmp
add
scas
dec
lock
inc
jmp
push
into
pop
sbb
pop
pop
pop
xchg
xor
cltd
mov
movlps
mov
filds
scas
jg
xor
or
jmp
daa
inc
enter
addr16
pop
popf
test
jl
sub
mulb
jge
out
test
sarl
stos
or
in
mov
xor
mov
fmul
jno
pop
dec
pop
or
mov
and
sub
cmp
sbb
cmp
and
ljmp
jecxz
sbbb
and
scas
fmull
pushf
aaa
mov
dec
push
cmp
mov
pushf
pop
or
lods
sbbl
int
push
pop
test
pop
inc
sub
mov
test
adc
shl
xor
insl
mov
stos
sub
add
stos
inc
in
mov
xor
aas
fsubl
frstor
cmp
test
ficompl
adc
jl
push
mov
ret
pusha
ss
rcl
enter
xor
jo
xlat
jne
adc
mov
jp
xchg
mov
popf
addb
sbb
xlat
adc
bound
in
frstor
pop
dec
shrl
add
outsb
sub
test
ja
push
add
jae
adc
js
jb
jo
lock
out
push
adc
sti
adc
or
icebp
xchg
sti
cld
icebp
sub
mov
push
mov
sti
jne
aaa
stos
xchg
xchg
ficompl
loop
stos
or
insl
sub
call
jge
mov
lret
cld
mov
push
loop
sarl
scas
nop
adcb
inc
dec
cmp
mov
pop
jle
cld
cmc
cwtl
xchg
fwait
ja
rolb
and
rcll
stos
dec
push
mov
iret
adc
sub
push
test
pushf
mov
mov
fwait
repz
fistps
push
inc
add
fisttpl
popa
sub
xchg
jg
cmc
std
jp
cmp
xor
sub
push
int3
xchg
fwait
pop
inc
incb
mov
lahf
pushf
das
pop
out
scas
push
push
sti
mov
push
loope
pop
mov
fsubrl
out
push
cbtw
pop
add
dec
lods
xor
xlat
in
scas
rcrb
fisttpll
arpl
xor
xor
fldenv
cmp
or
dec
test
add
data16
int3
push
cmp
lcall
dec
mov
out
ja
bound
sbb
arpl
dec
mov
mov
push
loop
xchg
jbe
arpl
test
jecxz
loop
into
addr16
pushl
xchg
xchg
and
lret
out
mov
arpl
inc
shrb
xchg
mov
jle
in
xchg
cmpsb
push
notl
cmp
nop
cmc
lahf
insl
lods
jnp
jns
push
push
and
mov
xchg
popf
cltd
jecxz
adc
push
outsl
mov
aaa
sbb
out
mov
pop
aad
mov
lahf
jg
icebp
mov
xor
or
mov
sub
jns
movsl
inc
jne
sub
cmp
jp
push
sub
sbb
xchg
mov
xorb
out
and
or
int
xor
mov
adc
les
xchg
jno
and
add
jnp
sub
out
imull
inc
stos
stc
aad
int3
sbb
ss
ss
xchg
add
aaa
mov
push
adc
push
push
dec
movsl
cld
mov
inc
out
cmp
push
jg
pand
jmp
pop
jl
fistpll
in
or
sub
loope
outsb
or
or
cmp
push
push
xlat
pop
shl
ja
hlt
test
fsubp
sub
cmp
sub
test
jecxz
fildl
or
inc
daa
and
stos
adc
nop
or
sbb
jmp
fsubs
out
mov
stos
pop
call
lahf
icebp
mov
aad
idiv
sub
xor
push
bnd
mov
aaa
push
stos
xlat
xchg
add
cmp
push
orb
dec
xchg
xchg
or
mov
je
es
push
je
and
in
mov
stos
outsl
jbe
jbe
outsb
mov
xor
and
mov
xchg
inc
xor
and
test
les
lds
in
lahf
js
popf
ss
icebp
adc
daa
pop
scas
xor
jo
jl
push
push
mov
add
fiadds
xchg
bound
inc
push
pop
shrb
xlat
jb
ret
repz
inc
add
cs
out
nop
mov
adc
jl
ds
lahf
pop
fstl
sbb
xchg
pop
mov
mov
in
cmpsl
xchg
sub
push
sbb
adc
adc
aas
ror
jmp
aad
push
pushf
or
xchg
stos
rcrb
and
gs
or
pop
out
jno
fs
lahf
loope
faddl
in
sbb
icebp
jmp
dec
lods
add
xchg
divb
pusha
popa
xchg
out
data16
jge
dec
popa
test
sub
mov
mov
imul
popf
push
pop
loopne
lret
test
xchg
xchg
iret
outsb
scas
cmpl
iret
mov
fcoms
pop
jae
fildl
jo
testl
pop
into
adc
fisubrl
dec
jle
shl
push
test
stos
cmp
mov
lods
sbb
mov
clc
push
mov
out
call
ret
add
pushf
xchg
jecxz
outsl
test
fcmovnbe
sub
cwtl
cltd
stos
roll
daa
inc
add
inc
sbb
push
mov
mov
aaa
push
push
clc
sbb
dec
insl
jbe
adc
lock
shr
add
cmpb
jae
insl
adc
hlt
movsb
in
nop
mov
dec
lods
xchg
int3
add
inc
sub
adc
imul
jne
shll
jle
faddp
adc
pop
lret
jae
repnz
pusha
les
pop
test
cmp
in
push
fimuls
add
or
xor
mov
add
ja
les
dec
int
xor
leave
aad
and
pop
fwait
and
mov
pop
and
test
jbe
pop
lahf
dec
mov
popa
lret
cmpsb
and
popa
scas
jg
mov
pop
or
xchg
loopne
imul
and
jb
jl
xchg
inc
xchg
in
pop
ljmp
inc
push
hlt
imul
jbe
push
mov
enter
hlt
out
push
enter
in
mov
jg
ljmp
hlt
xchg
push
jae
push
cwtl
cmp
mov
je
or
jns
jbe
shlb
add
mov
insb
pusha
adc
xchg
and
pushf
cli
cwtl
lds
jne
cld
fbld
cmp
xor
iret
out
les
std
cmp
es
jmp
mov
aaa
dec
lods
sbb
add
pop
jge
scas
mov
scas
add
mov
push
cmp
in
pop
push
stos
sbb
cmc
pop
stos
mov
and
mov
dec
jg
mov
xchg
in
jecxz
aad
jo
xchg
arpl
xor
push
add
out
sbbl
add
push
xchg
repz
mov
push
add
and
shrb
add
sub
loopne
sbb
xchg
cwtl
xchg
cmp
addb
lret
and
add
rorl
clc
out
mov
rolb
nop
cmpsb
inc
clc
mov
iret
xchg
sub
push
cltd
addr16
and
mov
out
repnz
push
jge
cmpsb
sbb
mov
xchg
rcl
lds
inc
out
cmpsl
or
inc
sub
inc
insb
rorl
iret
fisubl
out
movsb
shll
arpl
outsb
lret
cmp
lods
out
adc
push
out
adc
jb
aam
jb
push
inc
or
imul
lcall
jne
orb
pop
lods
in
mov
je
getsec
fidivrs
scas
iret
test
cwtl
mov
xchg
inc
js
mov
push
fstl
pop
test
lods
shlb
or
shr
pop
cltd
rcrb
add
in
xor
nop
push
jecxz
mov
stc
mov
stos
test
dec
push
and
fwait
sbb
mov
repnz
jnp
mov
xlat
xlat
fs
movsb
cmp
xchg
lods
ficompl
mov
dec
sub
inc
jl
cmpsl
sub
in
ret
cmp
data16
sub
in
push
pop
xchg
jecxz
call
inc
adc
imul
stc
sub
lret
movsl
xor
jle
jb
mov
and
mov
cli
cld
enter
mov
outsb
sub
and
jl
jns
repnz
xchg
shrb
push
mull
push
fidivs
in
loop
mov
push
push
sub
push
aad
adc
hlt
out
into
sahf
jo
or
das
mov
fsubs
insl
idivl
iret
negb
mov
jo
xlat
adc
xor
jg
inc
test
dec
fisttps
jb
sahf
jge
sbb
ror
sahf
jb
daa
icebp
ret
cmp
add
or
in
lcall
orl
les
lret
push
xlat
mov
sahf
aaa
and
sbb
add
cmpb
dec
xchg
fs
and
push
cltd
icebp
dec
xor
leave
jmp
dec
aam
cld
gs
mov
xor
push
sbb
mov
inc
aad
dec
int3
add
gs
repz
pop
pop
mov
xor
mov
jns
loop
push
cmp
ds
xlat
jno
mov
ds
xor
imul
pop
jb
popf
divb
loope
push
ljmp
fistpll
pop
dec
pop
sbb
mov
dec
dec
jmp
mov
das
xlat
xor
cmc
out
or
lcall
enter
cmpsb
out
xchg
dec
outsl
pop
scas
pop
cwtl
inc
inc
rolb
push
push
push
jl
test
jae
jle
movb
cmp
dec
daa
ljmp
hlt
or
fdivs
sub
bound
adc
ficoms
in
and
or
mov
pop
and
cwtl
hlt
pop
in
sbb
loopne
fisubs
stos
je
add
add
fs
xchg
icebp
mov
adc
cltd
push
mov
fistpl
kunpckbw
fs
je
add
or
cltd
jbe
pop
inc
jne
jns
sub
arpl
pop
dec
lahf
mulb
mov
add
hlt
add
je
lods
gs
repnz
sbb
outsl
dec
sub
adc
mov
in
arpl
rcrb
incb
dec
pop
mov
mov
cwtl
scas
dec
xchg
pushf
inc
pop
bound
pop
dec
pop
test
fadds
jg
cmp
stos
mov
sbb
insl
jmp
xchg
into
jecxz
inc
sub
lods
hlt
add
enter
ljmp
rclb
or
or
push
imul
or
jp
div
mov
cld
ds
cmpsl
adc
jne
pop
sub
mov
push
lcall
cmp
push
add
rcrl
xlat
adc
push
das
ss
in
inc
sub
mov
push
jo
pop
mov
cmpsb
pop
or
in
xchg
xor
mov
dec
jge
sbb
mov
popf
dec
test
test
aaa
mov
mov
scas
xlat
icebp
aaa
xlat
fstps
jne
sahf
jbe
mov
pop
out
int3
les
out
gs
arpl
pop
push
add
aas
pop
hlt
dec
mov
add
mov
in
icebp
push
dec
out
repz
or
mov
pop
pop
popa
pop
stc
inc
int3
ret
arpl
stos
insl
xor
in
bound
pusha
cli
or
repz
or
popf
xchg
cmp
and
xchg
ret
in
mov
inc
call
lahf
sbb
xor
dec
in
cmc
sbb
test
jmp
cmpl
cmp
outsl
jp
push
jb
pop
insb
shll
movsb
or
int
jo
push
inc
jle
out
jbe
push
add
aas
aam
rcrl
lods
lcall
cmc
sbb
mov
insl
test
and
dec
mov
xchg
push
in
pop
sbb
xor
mov
arpl
pop
or
and
movsb
dec
int
inc
psubusb
and
pop
rorl
jo
mov
icebp
jbe
ficompl
fdivrs
xor
rcrl
sbb
pop
sbb
test
jmp
notb
jge
cli
loopne
sbb
push
pop
inc
push
xor
mov
and
dec
in
test
lahf
jge
clc
rclb
shrb
xchg
stos
lods
cmpsl
fistps
repnz
mov
cmp
cli
lock
xchg
xor
or
pop
in
stc
jmp
je
xor
jnp
mov
ja
lods
loopne
test
mov
mov
pop
mov
out
cmp
add
push
jbe
mov
movsb
pop
outsb
or
xchg
mov
arpl
mov
and
aaa
cmp
or
andl
mov
repz
xchg
stos
sti
xchg
test
sub
adc
aam
jle
in
add
pop
fs
mov
xchg
mov
lahf
xchg
nop
in
inc
inc
xor
sub
mov
jae
lahf
sbb
sar
pop
push
push
test
mov
xor
lret
xor
arpl
inc
shrl
jle,pt
cmpsl
ja,pt
icebp
into
je
mov
xchg
cmp
add
push
test
add
stos
or
sbb
push
loope
lret
inc
ljmp
mov
std
add
mov
sub
addr16
lcall
int
ljmp
filds
je
in
pop
idivb
push
sub
call
clc
cwtl
fnstsw
into
mov
pop
int3
jg
adc
mov
ja
add
leave
cmpsb
mov
aam
imul
jae
scas
inc
dec
push
movl
std
jmp
nop
xchg
movsl
jg
imul
pop
xchg
out
adc
push
xor
cmp
jp
push
mov
mov
push
jno
xor
mov
xor
mov
mov
inc
pop
lods
adc
pop
pop
fstpt
or
push
setp
js
int
sub
cwtl
mov
xlat
sahf
test
aaa
fisttps
xor
sub
xlat
jae
cmp
sbb
leave
xchg
sbb
divl
or
in
or
fidivrs
or
xlat
adc
outsb
aam
in
mov
inc
cld
iret
xor
les
xlat
sbb
xchg
lahf
pusha
mov
mov
out
ffree
xchg
jns
jmp
out
xlat
sbb
insb
or
xchg
push
jbe
shl
ljmp
and
sbb
mov
aaa
mov
cltd
mov
fwait
jg
push
mov
push
cmp
fisubrl
ss
sub
push
jge
sub
xor
sbb
icebp
adc
and
sbb
xor
xor
jecxz
push
fldcw
aam
add
out
lds
jle
ret
jno
pop
repz
add
shl
cwtl
xor
push
xor
out
pop
inc
adc
pop
jno
sbb
pop
data16
pop
pop
mov
jbe
mov
loopne
cmpsb
add
out
inc
sahf
and
xor
insl
push
add
xchg
dec
call
pop
dec
aaa
lret
adcb
test
mov
xchg
repnz
mov
call
in
aam
je
lcall
xor
shll
or
push
int
repnz
push
stos
test
call
jge
push
mov
xchg
lds
testb
lods
jmp
les
push
imul
mov
loop
enter
mov
mov
movsl
bswap
js
lock
icebp
mov
pop
lea
cmp
insb
iret
stc
mul
inc
or
cmp
xchg
push
jne
inc
aaa
cmp
daa
inc
popa
test
in
xor
icebp
sbb
stc
xchg
mov
movsl
imul
test
out
pop
aaa
pop
jl
imul
in
push
xchg
hlt
out
fimuls
xor
xchg
pop
orb
xor
ss
lock
loopne
and
in
in
fdivrl
add
test
ds
lods
arpl
lea
sub
flds
push
cmp
mov
jecxz
sub
ds
sar
in
test
fdiv
sbb
lods
xor
dec
jne
movsl
cmovb
inc
dec
fs
xor
shll
es
scas
mov
mov
fsubl
push
and
stos
push
ret
ret
ljmp
clc
mov
push
loop
fnsave
movb
in
imul
xchg
ja
or
sbb
mov
cmp
mov
inc
sbb
stc
push
bound
xchg
inc
iret
xchg
mov
push
sub
xor
mov
xor
push
push
and
dec
in
imul
es
xor
leave
mov
int
jmp
cmp
popf
int
add
lret
adc
bsf
imul
cmp
xchg
pushf
fs
add
mov
aam
sbb
jne
lds
loop
hlt
addr16
andb
mov
mov
shr
add
mov
jmp
stc
shll
mov
push
cltd
or
jg
movsb
filds
int3
xchg
mov
jmp
xchg
jnp
aas
jnp
insl
stos
sub
mov
mov
enter
jnp
decl
and
sbb
sub
mov
xor
sub
stos
pop
adc
sbb
or
fdivr
test
das
mov
inc
add
hlt
sub
ljmp
and
mov
and
imul
mov
inc
movsl
cmp
pop
inc
mov
movsl
jo
popf
sub
jg
pop
fucomi
clc
and
mov
dec
jo
jecxz
aam
sub
mov
cmp
push
or
and
add
in
popa
mov
rdpmc
lds
or
lret
shlb
mov
mov
sbb
fs
add
repnz
in
or
mov
scas
mov
imul
ret
mov
push
mov
push
mov
adc
xchg
data16
jb
dec
cmp
cltd
cmp
xlat
jno
repnz
xchg
out
test
wbinvd
inc
dec
pop
xor
cmp
shlb
call
lock
dec
cmp
dec
mov
int
cmp
jns
cltd
or
call
mov
sbb
clc
iret
push
ljmp
sbb
push
push
in
mov
xorl
bound
xchg
mov
push
mov
ret
dec
mov
inc
pop
push
ljmp
mov
and
xchg
sbb
sbb
pop
or
cli
es
add
int
mov
test
insb
lods
mov
in
dec
andb
or
inc
sahf
mov
popa
imul
xchg
sub
push
and
in
jl
sbb
lds
cwtl
inc
cmpsl
movsl
decb
and
aad
dec
mov
sub
js
jmp
pushf
loope
or
mov
and
sahf
aaa
mov
lret
lret
xchg
dec
and
adc
adc
bound
inc
in
mov
dec
test
loopne
cltd
andl
andl
clc
mov
push
add
pop
xchg
sbb
push
les
fists
xor
push
mov
push
xor
stos
ja
inc
iret
jp
jb
sbb
pop
testl
fistps
jl
mov
mov
ret
test
pop
lahf
adc
imul
jae
and
push
jb
fnstsw
popf
fistl
imul
push
xor
inc
jae
stc
dec
cld
or
cmpsb
lods
loopne
inc
in
imul
hlt
dec
fnstcw
or
mov
xchg
out
test
pop
cltd
and
xor
sar
mulb
adc
pop
sbb
movsb
je
iret
pushf
mov
lcall
pop
mov
inc
in
jl
mov
pop
in
arpl
loope
xor
daa
mov
fmuls
filds
test
push
hlt
mov
cld
repnz
pop
fdivrs
jmp
mov
pop
and
add
stc
pop
inc
jg
push
mov
mov
sbb
adc
pop
int
std
inc
mov
xchg
push
addr16
mov
fs
add
pop
popa
repnz
dec
push
push
shrl
in
push
repnz
adc
inc
pop
mov
sub
sub
out
pop
fnsave
test
inc
fwait
pop
out
cmp
push
mov
in
sub
les
push
xor
movsl
ljmp
cmpsl
leave
in
and
repnz
sarl
movsb
insb
sarb
inc
inc
bound
pop
aad
loope
les
pushf
jle
jbe
mov
xchg
fs
mov
or
and
ja
adc
push
xchg
mov
fwait
adc
pop
les
sbb
mov
sub
mov
and
testb
jae
fisubl
mov
test
push
sbb
std
or
insb
lock
sub
or
call
add
and
mov
out
imul
xlat
pusha
cld
cmp
jns
popf
lods
mov
cmpsb
test
hlt
cmpsl
nop
xchg
pop
lret
mov
imul
imul
outsb
inc
int
clc
enter
cmp
push
popf
sub
push
mov
sbb
ljmp
inc
push
scas
xlat
frstor
inc
es
add
popa
popf
dec
mov
push
test
cmp
clc
jo
enter
adc
call
mov
cmp
mov
mov
xchg
shlb
popa
fsubl
in
out
sub
ret
std
shlb
jp
push
cmp
call
and
lret
or
outsb
std
adc
add
idivl
pop
mov
mov
lds
loop
adc
push
cmp
arpl
out
loope
push
stos
jo
mov
dec
pop
pop
push
jmp
mov
daa
and
add
cmp
or
jb
nop
mov
fcmovbe
jbe
xor
mov
jmp
arpl
xor
xor
in
ss
addr16
inc
adc
mov
inc
outsb
fiaddl
out
nop
cltd
jo
mov
sub
push
movsl
mov
fxch
jmp
cmpsb
cmp
gs
mov
push
lret
mov
ja
cmpsb
mov
into
pop
fcmovne
ror
pop
mov
sbb
in
mov
daa
adc
inc
into
shlb
icebp
sbb
jmp
into
sub
and
rcrb
gs
mov
cmp
mov
cmpsb
repnz
mov
nop
xchg
xchg
mov
mov
imul
scas
in
movsl
data16
pop
sub
inc
sahf
sub
mov
maskmovq
negl
dec
imul
fcmovnbe
or
push
cmp
cmp
ret
xchg
arpl
xchg
cmpsl
ss
aaa
add
clc
rcl
push
bound
shll
pushf
and
mov
out
sahf
ds
leave
push
xchg
adc
adcl
mov
mov
jb
ja
outsl
arpl
sahf
lret
mov
icebp
and
adc
sub
jae
test
jo
push
arpl
arpl
sbb
jge
arpl
pop
and
fsubrl
xor
lret
and
inc
in
leave
rol
mov
loope
and
mov
fsubr
mov
mov
pop
jp
xor
add
inc
inc
lcall
cmp
repnz
mov
lahf
daa
dec
fstpl
pop
loopne
mov
es
enter
cmp
xor
dec
rsqrtps
push
mov
lret
adc
ja
jp
jge
scas
inc
shlb
sbb
clc
dec
aas
push
jle
stos
jp
jae
xor
int3
sub
cli
mov
add
add
aaa
xchg
scas
dec
mov
loop
mulb
cmp
in
xchg
mov
adc
mov
out
js
xor
out
pop
stc
fisubs
adc
mov
dec
pop
pop
stos
lcall
movsb
or
aam
mov
mov
pop
mov
cmp
out
sub
loopne
scas
inc
dec
js
and
test
xchg
mov
rol
adc
enter
movsl
les
adc
bound
std
dec
inc
rcrl
or
cmp
flds
jae,pn
dec
push
fs
cmpl
fsubrs
adc
xchg
pop
mov
inc
fcomps
call
add
shlb
mov
adc
cmp
lahf
sub
push
jge
fwait
jmp
es
sub
push
out
lret
jl
test
cmp
rcr
push
cld
int3
pop
dec
mov
sub
mov
and
sub
dec
adc
jnp
jo
xor
insl
xor
pop
push
add
loope
mov
sub
pop
adc
push
out
lea
lea
jbe
sub
sub
lcall
add
add
test
and
lods
push
push
dec
jmp
pushf
xchg
jmp
test
jb
mov
xchg
or
xchg
adc
ror
mov
aad
xor
fsubl
inc
xor
shlb
enter
test
or
lods
mov
rcrb
iret
or
aas
rol
mov
cmp
push
adc
and
dec
int3
and
mov
sbb
out
in
in
out
add
lahf
pop
cmpsb
adc
push
aad
mov
pushf
ret
scas
dec
dec
cli
int
daa
fcoml
dec
shll
mov
ljmp
aaa
mov
subl
dec
mov
add
cmp
and
pop
cld
imul
es
dec
xchg
ss
push
mov
mov
lds
jae
and
pop
test
inc
cs
loop
flds
scas
inc
cmp
sub
fcoml
and
add
data16
and
out
mov
mov
mov
pop
fimuls
bound
imul
mov
shrl
stc
pop
pop
xchg
shlb
and
push
ja
enter
in
jb,pt
lea
push
xorb
aam
push
iret
testl
jo
push
stos
jnp
sahf
or
mov
in
loopne
pop
lock
shrl
in
cmp
aas
cmp
push
push
out
pop
add
push
adc
sbb
mov
cs
xor
sbb
lret
ret
inc
mov
sbb
inc
insb
inc
xor
mov
lea
sub
xchg
mov
clc
mov
xchg
out
std
mov
ljmp
pop
push
add
sub
je
add
xor
adc
or
outsb
int
sarl
adc
out
arpl
mov
out
sbb
and
and
adc
movsb
jp
or
jb
data16
and
arpl
jo
add
mul
xchg
mov
mov
jo
mov
cmpsb
fdivrs
icebp
push
xchg
into
and
movsl
ljmp
call
xchg
mov
xlat
dec
push
add
lock
dec
ret
xchg
cwtl
mov
xor
cmp
dec
rcr
push
out
cltd
mov
dec
icebp
lret
in
or
xchg
xorb
mov
inc
dec
dec
iret
rcrb
stc
rcl
aas
xor
mov
int
xchg
jg
sub
xchg
mov
push
or
sbb
pop
push
pop
dec
stc
push
or
repnz
sub
test
jg
insb
imul
and
pop
push
fs
xor
cmp
xchg
jl
in
push
cmp
or
mov
mov
push
in
loop
test
pop
mov
or
xor
sbb
stos
xchg
fcomi
and
push
xor
sar
mov
mov
stos
mov
aas
pop
mov
popf
mov
xor
arpl
ret
xor
xchg
scas
adc
cmp
inc
sub
inc
mov
sbb
icebp
pushf
aam
hlt
mov
bound
dec
sahf
test
xchg
lods
mov
add
push
mov
add
ja
lret
sbb
shrl
dec
ljmp
adc
sahf
or
add
xor
into
outsb
dec
addr16
mov
push
add
dec
fdivr
pop
jmp
jne
cmpsl
jno
push
cli
sahf
insb
hlt
pop
loope
and
shrb
imul
js
xor
mov
dec
or
add
call
fistl
jl
push
cmc
inc
fidivl
lcall
xchg
and
mov
jnp
js
dec
mov
sbb
push
dec
mov
and
xlat
bnd
pop
test
loope
fistps
cmpsb
mov
sti
mov
pop
fcoml
aam
jmp
pop
addb
push
hlt
testb
dec
sbb
mov
fbstp
fcomi
xchg
or
or
and
or
leave
sbb
jp
test
pop
mov
xchg
out
ja
int3
mov
dec
and
push
stos
jns
loop
sub
xchg
jnp
rorl
loop
call
cmp
and
test
mov
outsb
xchg
test
sbb
nop
mov
mov
inc
xchg
adc
ret
jecxz
call
loopne
fsubrs
mov
inc
arpl
inc
enter
fwait
xchg
aas
repz
push
insl
ret
dec
imul
out
or
cmp
sbb
cmpsb
shr
lret
cmp
dec
cmp
cltd
dec
push
mov
dec
data16
mov
gs
test
stos
adc
das
sti
mov
jge
inc
sbb
lret
mov
lds
ja
inc
xlat
incl
stos
popf
imul
loop
pop
or
into
out
lds
jmp
sbb
hlt
jne,pn
lods
push
lcall
or
add
jne
and
adc
inc
xchg
lea
inc
pop
add
jae
pop
nop
call
push
sub
pop
popf
add
outsb
into
movsb
cmp
mov
outsb
sbb
mov
mov
shlb
std
data16
xor
push
adc
notl
mov
fsts
inc
inc
xchg
adc
mov
push
fstl
or
jecxz
or
cmpsl
pop
mov
imul
out
cmpsl
add
inc
push
push
mov
push
ds
push
sub
cltd
xor
popa
popf
fdivs
jae
mov
dec
pop
mov
imul
cld
push
lahf
xchg
psrad
mov
sarl
arpl
adc
sbb
lock
or
icebp
clc
mov
pop
daa
jnp
adc
mov
rolb
jle
sub
imul
dec
lods
or
dec
cmpsb
xchg
sbb
jo
jae
lret
mov
push
pop
adc
dec
add
incb
je
mov
test
pop
inc
pop
loopne
iret
in
add
dec
xchg
lcall
jne
roll
mull
ja
in
sbbl
sahf
push
dec
xchg
inc
pop
lret
fs
xor
shll
sub
pop
std
in
packssdw
dec
mov
sub
jbe
scas
add
rcrb
ss
popa
xchg
pop
in
arpl
stc
dec
pop
and
inc
mov
mov
jecxz
pop
or
dec
flds
addl
jae
mov
sbb
outsl
js
sbb
mov
ret
out
les
ficomps
mov
sbb
adc
push
mov
mov
mov
cwtl
push
mov
ds
jp
test
rcrb
and
rcrl
sbb
pop
mov
enter
cmp
movsw
or
cmpsb
inc
sbb
shlb
es
test
clc
ljmp
push
push
pusha
in
daa
mov
pop
pop
sbb
jecxz
adc
call
mov
sub
lcall
sbb
sbb
test
mov
out
cltd
mov
lock
mov
rcrl
sub
xchg
push
das
roll
rorl
inc
fildl
sarl
and
mov
pop
cmpsb
sbb
cmp
sarb
xor
cvtpi2ps
cmpsl
shl
jo
sub
mov
sbb
sub
add
mov
mov
daa
daa
xchg
ds
mov
arpl
sbb
lock
jno
cmp
loopne
loopne
pop
pop
mov
lea
sub
cmp
test
mov
andb
js
xor
mov
xchg
cmp
jge
mov
inc
xor
repz
mov
jmp
cmp
push
or
sub
mov
xor
ja
add
sti
nop
lock
cli
loope
mov
cmp
mov
xor
sti
pushf
inc
cwtl
cmp
into
push
cmpsb
shlb
leave
pop
push
xchg
pop
mov
and
lea
mov
cmc
jne
or
scas
insb
push
imul
or
hlt
and
pop
ss
and
loope
add
fwait
sbb
lcall
out
or
adc
loope
jl
dec
out
jmp
mov
loopne
mov
popa
icebp
jae
xor
ror
mov
in
sub
sbb
test
ret
imul
mov
add
inc
push
dec
adc
in
ja
push
dec
add
repz
pop
push
daa
push
sub
in
je
aaa
cmp
repnz
dec
mov
add
xor
jg
in
shrl
fcmove
inc
mov
adc
sbbl
cmp
jge
aam
dec
cmp
rolb
test
into
std
jb
xor
xchg
fcomps
rorl
mov
sub
mov
cmpsb
adc
les
adc
mov
cmpsb
int3
test
xchg
orl
orb
mov
fcoml
or
push
xor
mov
inc
fmull
and
fildl
push
ret
jg
hlt
stc
or
dec
mov
xor
fwait
shrl
jecxz
cmp
mov
push
stc
or
movsl
lock
mov
jae
ficoms
mov
outsl
sbb
push
jb,pt
mov
lret
adc
fnstsw
pop
pushf
sahf
arpl
inc
pop
xor
cmp
arpl
lock
or
or
push
adc
push
push
pushf
addr16
xor
xor
call
aad
jg
xchg
enter
mov
out
or
popf
addr16
hlt
push
dec
into
in
xor
mov
fistl
pop
inc
in
out
xchg
je
cmpsl
sub
iret
sbb
cs
out
pusha
pop
inc
sub
aaa
xchg
inc
xor
pop
jno
inc
shlb
adc
cmp
push
loope
fstl
xor
clc
movsl
arpl
sub
imul
and
inc
mov
mov
jae
mov
movsl
out
scas
sar
nop
insb
xchg
ss
jns
ja
mov
nop
fdivp
idivb
mov
clc
pop
xor
or
cmpl
add
in
mov
cwtl
rorb
outsb
js
jl
dec
iret
adc
cmp
movsb
push
mov
cld
dec
jnp
clc
cs
or
add
loope
cmp
loope
dec
fs
push
cmpl
pop
mov
ret
movsb
adc
sahf
xchg
push
adc
nop
sub
add
mov
pop
pop
sbb
add
aam
push
data16
push
pop
inc
adc
faddl
xchg
xchg
sub
xchg
mov
sbb
mov
or
insl
mov
lds
xchg
push
mov
sarl
and
testl
xor
pop
cmp
dec
mov
ljmp
adc
pop
and
lcall
daa
fisubl
loop
jbe
xorb
inc
fstpl
push
test
outsl
cmpsl
retw
mov
cmp
mov
inc
xorb
pop
or
xor
jnp
push
add
ja
repz
icebp
push
lcall
push
pop
rcr
jecxz
dec
and
stos
xchg
push
jp
int
aad
mov
xor
rcl
sub
xchg
insl
rolb
ja
cmp
jae
test
mov
add
add
sub
inc
xchg
leave
mov
stos
insl
dec
pop
stos
lods
iret
xchg
mov
push
push
enter
mov
or
fidivrl
leave
clc
xchg
shll
enter
dec
negb
pop
jg
and
icebp
pop
sub
add
cs
ds
test
shlb
dec
xchg
aaa
jnp
xchg
movb
sbb
xchg
sub
push
or
dec
jbe
xlat
adc
scas
inc
xor
les
adc
cltd
add
repnz
and
lret
stos
lods
or
repz
in
jp
push
mov
movsl
iret
fidivrs
or
in
push
jmp
pop
dec
mov
push
or
push
inc
rcrb
ret
in
hlt
in
dec
lds
dec
sbb
mov
ret
mov
pop
mov
int
pop
outsl
shl
int
stc
dec
inc
push
sbb
stos
push
sbb
nop
dec
je
scas
lea
loopew
add
hlt
lea
loop
hlt
pop
pop
pop
sub
pop
dec
in
lods
mov
mov
adc
dec
pushf
xchg
mov
in
pushf
outsb
sahf
daa
cltd
push
pop
sbb
stos
jg
je
repz
lret
mov
in
and
or
adc
lcall
pusha
jecxz
stos
mov
cwtl
pop
les
jp
aas
imul
xchg
out
lock
inc
and
sub
xchg
lcall
and
movsl
and
inc
data16
mov
inc
mov
push
pushf
out
es
pop
or
xlat
test
mov
mov
pop
es
stc
lret
inc
or
fildll
push
insl
push
pop
icebp
pop
shrb
enter
fisubs
push
push
lock
sub
dec
mov
ffreep
sbb
fwait
push
iret
jae
push
push
mov
mov
add
and
dec
iret
add
into
lea
fdivrl
les
les
mov
cmpsb
push
or
repnz
ret
add
lods
mov
mov
xor
push
and
sbb
inc
dec
test
hlt
out
add
jno
jg
jl
test
fisttpl
outsb
dec
bound
pop
iret
mov
rolb
lret
aad
les
fistps
or
cmp
add
shrl
sbb
inc
rcrb
aam
clc
dec
inc
insl
jo
jge
sbb
rorl
inc
adc
outsl
out
ret
mov
rolw
addr16
push
mov
in
lds
dec
dec
or
and
dec
orl
push
ljmp
push
jecxz
and
lea
lea
add
and
test
mov
push
ljmp
pop
movl
je
js
insb
cltd
or
ret
inc
adc
test
arpl
push
popa
mov
fcomps
lods
lea
loopne
sub
push
imul
fnsave
mov
dec
repnz
and
adc
ret
leave
adc
mov
mov
gs
push
mov
stos
jge
jle
adc
adc
sahf
imul
in
adc
lock
add
jnp
jg
popa
inc
mov
xchg
mov
mov
call
sbb
pop
push
cmp
mov
mov
ror
inc
enter
rol
xor
dec
sub
jmp
jmp
ja,pn
mov
inc
cmp
jae
lcall
jp
mov
xchg
fldl
insb
and
out
loopne
test
sbb
and
femms
cwtl
inc
add
imul
in
and
gs
sub
xor
sbb
pop
dec
dec
cli
popl
pop
add
mov
mov
arpl
dec
mov
test
iret
push
sti
insl
shrb
mov
scas
xchg
addb
das
hlt
test
shrb
out
inc
sub
clc
loopne
dec
popf
cmp
push
push
sarl
nop
jecxz
out
push
sbb
mov
mov
add
es
insl
test
cmp
xlat
mov
jo
nop
mov
xchg
in
insl
popf
pop
stc
push
dec
sbb
in
inc
dec
pop
xchg
cmp
in
inc
cmpsb
fcompl
cmp
jns
aad
lret
les
xorb
sub
out
jns
mov
jb
jb
add
insl
rcl
fisubrl
push
in
lods
xlat
movl
cmp
test
fucompp
idivb
dec
mov
cwtl
dec
dec
add
push
adc
aad
xlat
pop
mov
xor
imul
adc
push
adcb
xchg
ret
rcl
or
lods
push
bound
fistpl
adc
in
pop
shl
mov
stos
in
fdivrs
fmul
stos
stc
xchg
pop
xchg
pop
addr16
push
cmc
push
xlat
mov
add
push
or
xchg
add
xor
and
frstor
pop
dec
lds
rcrl
sti
mov
fstps
inc
ret
dec
inc
or
push
pop
inc
lret
sub
dec
xchg
popa
enter
popa
aam
push
dec
dec
sbb
push
adc
push
or
inc
loopne
cmp
pop
out
xlat
stos
xor
pusha
jmp
sub
stc
and
pop
and
daa
jg
cmp
int3
aaa
idivl
jl
frstor
subl
andb
inc
int3
movsl
fcmovnb
inc
and
gs
pop
clc
pusha
cmp
int
or
cmp
mov
test
ljmp
divb
push
fcompl
pop
loope
out
fs
das
mov
jno
int3
ljmp
popa
mov
inc
popf
add
loop
rorb
xchg
xchg
push
inc
popf
fistl
or
or
stos
push
ret
cmp
in
icebp
jnp
cmp
or
and
cmpsl
cmp
mov
insl
scas
xchg
shl
jne
mov
sub
mov
jmp
adc
imul
repz
dec
fcoms
fiaddl
xor
pushw
adc
xor
pop
pop
inc
test
mov
cmc
imul
mov
aaa
out
push
jp
mov
addl
int
push
outsb
gs
rol
iret
pop
jne
cmp
pop
repnz
dec
sahf
insb
fprem
ljmp
jb
in
mov
pop
cmp
sub
in
xor
mov
xor
mov
push
push
jg
xor
jle
lea
scas
add
cmc
andl
xchg
push
test
fwait
xor
stos
jno
xchg
call
jnp
inc
mov
pop
movhps
push
pop
xchg
scas
fmul
fstpl
shll
lea
xor
mov
mov
cmp
sub
jae
lods
stc
cli
xor
into
ds
icebp
adc
loop
and
rcll
inc
inc
fwait
mov
jbe
xlat
insb
scas
mov
or
sub
cmp
fidivrl
xor
sbb
add
sub
das
mov
pop
jle
imul
std
sahf
je
sbb
sub
jb
or
fidivrs
mov
cmp
std
mov
sbb
cli
outsl
mov
or
sti
pushf
flds
mov
stos
sub
cmpsb
fs
repnz
add
push
lret
jns
les
es
repnz
aad
sub
mov
pop
in
pop
nop
cmp
jge
sbb
inc
inc
cli
shll
add
and
mov
stos
lret
jl
xchg
pop
dec
sahf
pop
out
in
and
push
data16
cmc
push
xchg
popl
mov
jecxz
xor
cmpsl
cmp
ror
repz
aam
adc
cmpsb
daa
mov
pop
fldl
push
mov
add
xor
lods
shll
lret
outsl
aam
fistl
xor
bound
inc
adc
ret
aad
in
jns
sbb
pop
popf
mov
inc
push
add
cmc
orl
jl
xchg
les
loope
mov
mov
inc
push
es
and
aas
arpl
or
outsb
inc
and
or
test
imul
push
mov
shlb
inc
test
sub
popw
outsb
mov
js
ja
jge
je
pop
mov
sbb
sub
fsincos
movsl
insb
setbe
and
sbb
cmp
stc
ja
push
xor
mov
push
adc
outsl
fs
xchg
in
jbe
call
or
and
arpl
insl
lea
cld
dec
stc
fistpll
cmp
cmp
push
dec
cmp
pop
mov
fwait
test
or
roll
mov
pop
push
mov
or
repz
ficoms
js
cmp
or
add
pushf
add
out
or
fwait
mov
mov
outsb
or
aaa
adc
arpl
and
dec
or
les
cmp
push
and
fstl
inc
rcll
mov
fsubrp
and
jns
fdivrs
sub
shlb
arpl
loopne
xlat
hlt
js
into
cmp
pop
aas
into
or
es
push
cmp
lods
jb
jle
bound
mov
stos
gs
movb
fisttps
mov
mov
aam
popa
in
andb
test
mov
fcoms
or
pop
dec
inc
jp
cmc
and
dec
push
sarl
push
test
mov
mov
test
push
test
jecxz
and
cmpsb
mov
fidivl
adc
adc
xchg
and
fsubs
loop
cmpb
repz
push
jle
lods
call
les
notb
mov
stos
dec
push
pop
je
cs
aam
adc
shr
aad
add
pop
mov
sbb
out
pop
daa
adc
inc
icebp
xor
jnp
mov
in
sbb
mov
fnsave
and
ror
and
xchg
pop
rcl
clc
insb
xchg
out
addr16
sbb
jecxz
lahf
inc
jne
xchg
pop
das
cs
dec
mov
mov
stos
push
aaa
lea
and
out
fwait
sub
shlb
add
or
sahf
add
inc
cs
fwait
sahf
mov
int
popf
enter
out
push
mov
cmp
sub
mov
xchg
je
cmp
mov
inc
test
lds
inc
call
sbbb
cmc
push
mov
andl
cmpb
or
in
insl
in
jne
arpl
fmuls
dec
fisttpl
cmp
jle
inc
inc
shr
faddp
lods
fsubl
jns
js
mov
xchg
inc
outsl
outsb
sbb
arpl
jbe
pop
mov
inc
cmp
stos
ja
xor
int3
das
dec
pusha
add
lcall
xorb
lret
stos
inc
sub
ret
mov
jo
or
fsubrl
mov
add
jp
sahf
dec
mov
int3
cli
std
dec
push
jno
roll
push
pop
lret
mov
lods
jmp
push
lret
repz
mov
jbe
cmp
add
inc
push
or
mov
out
gs
sti
stos
aam
xor
pop
sbb
rolb
or
fcoms
gs
xchg
jne
test
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
and
add
pusha
add
addb
add
add
add
cmp
add
add
add
add
add
push
add
add
add
addl
add
add
add
add
add
nop
add
add
or
adc
add
mov
add
add
add
add
add
add
sbb
add
add
orb
add
add
add
add
incl
add
add
incl
add
add
incb
add
add
push
push
repnz
rol
lock
std
call
sar
adc
std
add
incl
add
add
incb
add
add
incb
add
add
incb
add
add
std
add
incl
add
add
add
add
add
incb
add
add
incb
add
add
incb
add
add
incl
std
lock
call
mov
call
incb
add
add
std
add
incb
add
add
std
add
incb
add
add
incb
add
add
incl
add
add
add
add
add
incb
incl
add
add
adc
sti
pusha
std
mov
lock
pushl
xor
add
incb
add
add
sahf
mov
push
repnz
jmp
and
add
incb
add
add
incb
add
add
incb
add
add
incb
add
add
incl
add
add
add
add
add
incb
add
add
std
add
incb
add
jo
pushl
std
inc
ret
std
add
incb
pusha
cld
inc
inc
inc
ret
lock
cld
mov
incl
add
add
std
add
incl
add
add
incb
add
add
incb
add
add
incb
add
incb
rol
mov
pushl
rcl
cld
push
repnz
push
adc
inc
ret
loop
nop
xchg
pushl
decl
ud0
decl
push
bnd
incb
add
add
incb
add
add
incl
add
add
incl
add
add
add
std
push
icebp
jmp
jecxz
push
icebp
jmp
std
jmp
loope
decb
jmp
add
incb
add
add
std
add
jo
std
ret
je
std
rcl
mov
incb
add
add
incl
add
add
incb
add
add
std
add
add
add
mov
incb
add
add
cld
and
incl
cld
rcl
std
aam
std
rcl
call
std
ds
std
adc
std
add
incb
add
add
aas
inc
mov
std
push
push
std
add
incb
add
add
incb
add
add
add
add
xchg
nop
mov
std
xor
incb
add
add
incl
add
and
pushl
rcl
jmp
loop
iret
sar
std
std
push
repnz
ret
xchg
cld
popa
arpl
jg
std
loop
std
and
aas
aas
std
inc
inc
std
add
incl
add
add
add
adc
add
incl
add
add
incl
add
and
pushl
incl
nop
xchg
xchg
xchg
incl
incb
std
inc
inc
push
push
std
addl
std
push
repnz
xor
std
das
cs
incl
cld
add
pushl
incb
add
add
add
add
add
incl
add
add
jg
std
push
repnz
mov
incl
add
add
std
add
incb
add
push
push
std
test
rcl
std
call
std
pushl
incb
add
rol
pop
and
incb
add
movups
mov
std
push
icebp
std
outsl
jno
add
incl
add
jno
std
std
inc
ret
ret
std
lcall
and
cld
std
addb
mov
add
add
add
add
std
add
inc
ret
std
std
std
incb
ljmp
std
inc
ret
and
addl
cs
sar
mov
std
incb
incl
incl
incl
add
add
add
add
push
and
std
jmp
loope
std
std
cld
cld
add
ljmp
xor
xchg
nop
push
push
std
add
std
bound
hlt
icebp
push
repnz
std
out
cld
mov
incb
add
ds
std
ret
inc
ret
std
xor
std
loope
cld
push
dec
incl
incb
add
add
add
add
aas
inc
cld
call
sar
push
repnz
cmp
incl
jmp
aas
inc
xor
mov
cli
decl
incl
mov
dec
sar
inc
ret
add
sbb
incl
inc
sar
incl
add
add
add
add
inc
inc
sti
sti
inc
sar
std
push
icebp
std
hlt
repnz
mov
std
mov
cld
adc
push
icebp
std
incl
repz
std
std
jmp
jecxz
repnz
push
repz
pushl
std
add
incb
add
add
loop
incl
add
add
add
add
pop
push
cld
repnz
ret
jmp
loop
iret
sar
pushl
call
std
mov
inc
ret
std
mov
sti
std
std
loope
decb
adc
add
incb
add
pop
and
incb
add
add
add
add
add
rcl
std
push
bnd
std
lock
ret
call
sar
mov
call
sar
bound
xor
std
xchg
nop
rcl
mov
incl
incb
add
add
incb
add
mov
pushl
add
add
add
incb
add
jge
cld
into
sar
repnz
loopne
std
adc
lcall
loope
cld
xchg
push
icebp
std
std
std
jge
std
xchg
xchg
inc
ret
jmp
loop
ret
xor
std
add
jmp
pushl
std
add
std
add
lcall
std
std
aas
aas
std
incb
add
mov
jo
std
xchg
nop
std
incl
add
add
and
cld
mov
std
call
loope
cld
rcl
cld
std
call
aam
rol
mov
std
rcl
cld
rcl
adc
incl
add
arpl
std
cld
lahf
mov
add
add
add
add
ljmp
das
std
outsl
jb
add
std
test
adc
incb
add
add
incb
add
pusha
std
repnz
std
bound
std
pushl
cld
ret
mov
pusha
std
adc
std
inc
aas
jmp
std
pushl
std
add
incl
add
add
add
add
add
incb
add
add
ljmp
incb
std
add
incb
add
add
incb
add
popa
pusha
std
pushl
push
icebp
push
repz
ret
std
icebp
std
std
std
std
push
icebp
incl
add
incl
add
incb
add
add
incb
add
xor
mov
lcall
incl
add
add
incl
add
push
and
std
cld
std
addl
inc
ret
pop
push
push
scas
mov
addb
inc
std
add
incb
add
xor
pushl
incl
add
incb
add
add
incb
add
repnz
incb
add
add
incl
add
add
std
dec
push
cld
push
repz
std
call
sar
rol
mov
xor
incl
add
add
incb
add
adc
incl
decl
incb
add
incb
add
add
pop
std
std
incb
incb
incb
sti
inc
inc
std
addb
mov
mov
jmp
jmp
incb
ds
cld
bound
mov
sti
call
sar
add
incl
add
add
add
add
add
incl
add
add
mov
cld
call
sar
std
call
std
std
nop
xchg
incl
icebp
icebp
std
std
std
call
sar
adc
cli
add
incb
add
incb
add
add
incb
add
add
std
dec
push
inc
ret
std
rcl
pushl
std
inc
ret
sar
sar
jno
jmp
std
hlt
repnz
mov
std
arpl
add
incb
add
add
incl
add
incb
add
add
incb
add
add
std
add
incb
add
xor
mov
jmp
loope
xchg
xchg
std
sti
std
jmp
incb
incl
add
add
incb
add
add
incb
add
add
incb
add
add
cld
add
incl
add
add
add
add
add
incl
add
add
incb
add
add
incl
add
add
std
add
std
add
lcall
cld
std
cld
addl
aas
inc
sti
add
incb
add
add
incl
add
add
std
add
incb
add
add
incb
add
add
incb
add
incb
add
add
incb
add
add
incb
add
add
incl
add
add
incb
add
add
decl
jmp
jecxz
hlt
icebp
cld
incb
cld
repnz
lcall
incb
add
add
sti
add
incl
add
add
incb
add
add
incb
add
add
add
add
add
std
add
incl
add
add
incb
add
add
std
add
incb
add
add
incl
add
add
and
aas
inc
cld
add
pushl
pushl
jmp
std
test
add
incb
add
add
incb
add
add
incl
add
add
incl
add
add
incl
add
dec
or
add
add
and
add
add
sbb
test
add
add
les
add
add
add
dec
or
mov
add
add
dec
or
ljmp
add
dec
or
sbb
add
dec
or
add
add
xor
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
ja
jo
imul
add
add
mov
pop
cwtl
mov
mov
cwtl
lds
fwait
push
daa
fwait
mov
pop
mov
imul
xchg
addr16
push
aas
popf
mov
imul
imul
daa
aam
sub
aad
arpl
div
outsl
leave
cld
jp
out
jbe
dec
call
dec
int3
not
enter
mov
cmpxchg
dec
sub
mov
inc
sub
int
mov
adc
out
lcall
shll
mov
movsl
jp
and
cltd
fldl
sub
repz
addr16
jp
mov
and
jae
dec
loop
arpl
or
movsb
insl
movl
popa
mov
aas
andl
js
pusha
pop
ja
jge
inc
sahf
xchg
sahf
mov
inc
push
mov
cmp
push
fsubr
nop
frstor
adc
out
fld
lret
insl
sbb
add
fisubrs
adc
inc
cmpsl
int3
push
jmp
sbb
mov
inc
fisubs
js
cs
cld
fdivrs
jns
or
hlt
jmp
add
pusha
dec
stc
pushf
dec
nop
ret
pop
sar
pop
add
popf
cmp
cmpsl
jle
push
mov
into
sub
pop
pop
push
and
aaa
fidivrs
cmpsl
or
or
nop
cmp
mov
cmp
daa
jle
dec
inc
fcoms
fs
popf
cld
adc
andb
imul
jl
insl
cmp
xchg
insb
scas
add
insb
xor
adc
ret
lahf
inc
add
sbb
push
jle
and
xor
push
push
addr16
cs
aas
imul
js
cltd
scas
int
aaa
mov
and
mov
testl
mov
jecxz
sbb
and
mov
nop
mov
mov
mov
fsubrs
and
sbbl
mov
mov
push
test
mov
mov
sbb
mov
cli
cwtl
xchg
sub
sbb
adc
sbb
and
jmp
add
sahf
arpl
cltd
inc
and
cwtl
in
xchg
sbbl
mov
xchg
mov
jmp
cwtl
and
pushf
and
add
cmpl
inc
sbb
ds
mov
repz
xchg
arpl
sbb
and
cwtl
jae
jnp
iret
loopne
sbb
jle
lret
test
mov
lcall
and
fwait
lds
mov
fwait
dec
and
mov
adc
bound
dec
xor
frstor
add
int3
in
lret
lods
outsl
sub
int3
xchg
imul
jl
cmp
and
out
mov
xorb
push
and
shlb
mull
subl
cld
cmp
popf
decl
pop
jno
rolb
lahf
add
mov
adc
xor
repnz
mov
aam
cwtl
shlb
insl
inc
cmp
loopne
or
push
cmp
fs
iret
cmp
loopne
jecxz
rolb
fs
adc
mov
cmp
push
pop
testl
mov
roll
or
add
into
lcall
addr16
pop
addl
mov
mov
mov
jecxz
cltd
js
lds
sbb
jl
pop
inc
adc
pushf
add
jg
sti
xchg
cmp
ja
jl
xor
scas
sar
movsl
xchg
jl
mov
pop
lahf
jcxz
ret
jns
sub
jbe
add
cwtl
js
in
xchg
inc
dec
xor
mov
jle
mov
xchg
psrlq
imull
int
and
mov
cltd
loopne
push
test
dec
push
dec
test
cmp
push
out
xchg
fisubrl
ret
push
add
dec
jae
push
adc
pop
and
push
sub
movl
mov
daa
cmp
jg
stos
repnz
sbb
pop
cmp
test
loop
js
xchg
cwtl
jle
pop
inc
addr16
xchg
dec
mov
fistps
jg
inc
movl
adc
pop
add
incb
inc
fsubr
loope
jecxz
mov
xchg
call
lock
add
daa
and
mov
sub
or
arpl
pop
call
sub
adc
sbbb
dec
jnp
mov
out
xchg
lods
cmp
aas
lds
xchg
pushf
mov
orl
lea
pop
scas
or
rcrl
ret
dec
fwait
and
in
outsl
add
pop
pop
mov
test
jp
mov
jge
add
mov
ja,pt
shlb
jge
out
loopne
cmp
sbb
movsl
or
bound
pop
or
jp
or
mov
sarb
cmpsl
inc
popf
enter
loopne
jmp
repz
ja
jl
xchg
mov
loop
xchg
jae
mov
shlb
and
dec
push
inc
movsl
cmp
push
lods
mov
insl
pop
loopne
mov
js
lds
xchg
subl
jns
stos
push
sbb
ficoms
inc
adc
xlat
pop
mov
das
ljmp
inc
push
clc
sbb
push
xchg
pop
pop
push
mov
jb
jp
sahf
js
adc
ja
loop
mov
sub
inc
aaa
xchg
sbb
add
mov
add
arpl
mov
int3
outsb
or
lds
jecxz
cmp
mov
inc
xchg
js
inc
fidivrl
mov
pop
js
outsl
sbb
mov
in
push
mov
push
sbb
and
mov
jbe
or
std
mov
ja
jl
adc
jb
mov
arpl
sbb
aad
fdivl
rcr
iret
add
mov
mov
pop
stos
or
ljmp
fstp
bound
pop
jge
adc
sbb
push
test
ret
pushf
inc
xchg
mov
mov
sub
pop
sub
sbb
xor
xchg
inc
stos
inc
lea
mov
gs
mov
mov
pop
pop
cmc
rcl
xchg
lahf
mov
sahf
cwtl
add
pop
adc
adc
adc
and
shlb
push
xorb
int
push
mov
cmp
mov
ret
lcall
jnp
inc
enter
pop
dec
dec
inc
mov
hlt
cmp
sub
and
arpl
pop
sbb
je
cltd
push
dec
push
test
add
xlat
cli
ss
mov
bound
dec
jl
enter
dec
stos
data16
cmp
or
or
pop
cli
xchg
loope
jge
inc
mov
jns
mov
addr16
fistpll
pop
pushf
sub
push
jl
dec
inc
jmp
int3
in
pop
jg
mov
jnp
lret
movsl
add
ljmp
mul
cmc
xchg
inc
sbb
lods
jge
jmp
sti
dec
subl
aas
add
pop
insl
pop
ret
xlat
lds
shlb
rorl
lods
nop
pop
aaa
testl
arpl
popf
push
cmp
movsb
jl
insb
sarl
je
push
jno
movsb
fnsave
add
pop
sarl
cld
mov
xor
mov
push
flds
into
cmp
push
in
orl
out
mov
add
or
daa
and
pop
or
jns
ret
stos
jle
test
add
cmp
popf
pop
enter
mov
std
inc
xchg
inc
call
outsl
pop
mov
scas
xor
pusha
sbb
stc
mov
pop
dec
inc
adc
push
push
jne
pop
pushf
jg
mov
inc
add
add
insl
push
lods
pop
std
jmp
jae
add
pop
pop
insl
dec
push
dec
into
mov
cmpsb
fbstp
sbb
sarb
sub
rorl
or
aad
push
cwtl
je
adcl
fcoml
inc
xchg
pop
daa
aas
dec
insb
xor
jno
insl
xchg
adc
lcall
push
int3
test
cmp
loopne
movsb
mov
out
xor
lods
aaa
outsb
lds
scas
int
negb
mov
std
push
dec
bnd
and
test
pusha
and
shr
flds
data16
lock
pushf
pop
pop
fisubl
ret
fidivs
fcmovu
cmpsb
push
nop
jnp
add
fcomps
sub
push
mov
lahf
out
mov
sti
leave
in
sarl
pop
shlb
adc
call
pop
and
sub
and
adc
outsl
push
xor
gs
clc
inc
sub
push
cmp
pop
iret
mov
nop
outsb
lret
repz
shll
aad
and
mov
mov
mov
xorl
jnp
dec
pop
push
mov
jp
sbb
xor
xlat
divb
and
xor
fistl
roll
fdivl
jl
ror
jg
cmp
pop
push
jg
inc
cmp
sbb
stos
adc
sub
ss
aad
mov
jecxz,pn
jno
cmpsb
pushf
fildl
jle
push
scas
ret
push
sbb
sbb
in
sbb
sbb
push
in
sub
js
xor
pop
fs
push
or
jmp
movsb
jo
pop
insl
dec
adc
push
dec
lds
or
lret
dec
sub
cmp
add
test
inc
cmp
lcall
das
push
out
push
mov
and
lods
hlt
ret
fs
int
cmp
jmp
mov
push
or
daa
into
cmp
xchg
addr16
push
and
dec
sbb
icebp
enter
punpckhwd
push
sar
add
push
cmp
inc
out
subb
pop
fs
int
ficoml
lods
jmp
xchg
xlat
pop
xchg
insb
cld
push
dec
pushf
inc
scas
sbb
sub
push
stc
push
fs
and
fldcw
sarl
pop
flds
shlb
loope
inc
pop
into
sbb
xor
jl
repnz
xchg
fldl
xor
jbe
add
mov
inc
bound
mov
inc
inc
test
xor
jno
cwtl
nop
mov
xor
leave
mov
pusha
sub
jg
push
ljmp
ja
sarl
jmp
jge
mov
push
lcall
sub
cmpb
add
sub
ret
sti
jg
subb
or
pushf
shl
dec
lock
sbb
mov
sub
int
mov
cmp
and
repz
scas
test
xor
xor
jge
dec
adc
sbb
ret
insb
or
lods
mov
fs
stc
cmc
push
notl
insb
rclb
sets
aaa
lret
and
mov
movl
arpl
jae
popa
lods
mov
adc
and
or
jmp
push
sub
xchg
and
lcall
push
xor
xor
stos
bound
add
pop
cltd
mov
xor
add
adc
add
in
pop
rcll
fiadds
push
jecxz
dec
sbb
xor
or
cmp
inc
xor
dec
jae
jg
xor
xchg
cmp
imul
lock
in
test
movsl
jmp
stc
inc
insb
leave
mov
int
sub
fisttps
in
fwait
jbe
or
or
mov
inc
jae
jle
mov
out
lahf
xor
jno
test
cs
push
push
adcb
xchg
xchg
xor
daa
outsb
into
aas
cmp
das
adc
nop
jg
jnp
jbe
adc
sub
sub
push
mov
out
xor
pop
imul
xchg
ret
test
hlt
adc
or
int3
inc
mov
jge
jg
dec
or
adc
mov
daa
mov
hlt
lds
xchg
sbb
and
and
adc
sbb
pop
pop
xlat
lock
shrb
shrl
dec
and
mov
jl
mov
push
scas
push
scas
xchg
dec
sub
orb
add
pop
cmpsb
rclb
jg
xchg
insl
sub
test
mov
adc
ljmp
jns
push
aad
lea
loop
and
in
xor
mov
fxch
bound
cmp
adc
lret
xor
out
inc
xchg
adc
or
cmpsl
lea
lds
adc
insl
jno
stc
pop
loop
and
cmp
pushf
sub
scas
test
xchg
icebp
adc
cmp
mov
movsl
adcb
pop
lahf
dec
icebp
in
lods
hlt
xlat
jg
mov
loop
jne
mov
xchg
pop
add
pop
jle
jb
mov
mov
fxch
pop
dec
push
pop
or
cmp
enter
jns
movsb
inc
cmp
negl
mov
sti
ret
sti
mov
mov
dec
das
sarb
insb
cld
pop
sub
clc
add
stc
and
mov
inc
scas
xchg
les
aad
mov
lahf
dec
inc
mov
sub
mov
mov
dec
aas
cmpsb
lds
pop
movsb
sahf
or
stos
jns
push
xor
push
add
inc
add
adc
pop
jb
sbb
out
pushf
adc
in
leave
inc
lds
mov
cmpsl
dec
mov
and
addr16
in
dec
jbe
ljmp
cmp
rorb
iret
mov
xor
fidivrs
out
mov
mov
jns
pop
xor
mull
movsb
mov
in
test
out
jg
add
and
into
cmp
and
dec
push
adc
xchg
mov
xchg
lock
mov
mov
je
inc
xor
mov
nop
push
xchg
je
mov
xchg
dec
cli
sub
push
mov
mov
jbe
fcmovnbe
mov
aam
push
push
xor
fbstp
arpl
sarb
lock
fs
sbb
ds
out
sbb
add
cmp
cmp
push
pusha
fwait
jmp
loop
mov
pusha
shll
movsl
idivl
in
inc
sbb
jp
sbb
jmp
sbb
shlb
push
sub
xchg
pop
outsl
outsb
push
mov
mov
int
add
stc
ss
jnp
push
int3
shll
push
rcrl
ds
mov
adc
neg
or
pop
sbb
out
aaa
push
adc
out
push
loop
or
ja
icebp
mov
adc
cmp
incb
std
push
xchg
dec
jmp
sub
mov
testl
imul
das
jbe
call
fwait
and
add
inc
insb
xchg
adc
test
sbb
call
or
push
jmp
push
fdivp
out
mov
bound
or
fisubs
mov
ljmp
push
mov
push
adc
fcmovbe
outsb
push
xchg
jle
or
lods
inc
dec
ret
daa
push
repz
loopne
mov
mov
nop
mov
sub
adc
cli
sub
test
mov
mul
je
mov
out
imul
in
sub
outsl
lock
or
or
xchg
dec
jb
and
xchg
mov
sbb
dec
cmc
fsubrs
jmp
add
loopne
pop
rcrl
inc
inc
rcrb
out
xchg
cltd
repz
add
insb
mov
out
sahf
fsubl
xchg
stos
and
cmp
mov
fistpll
cmp
xchg
add
jne,pn
scas
mov
js
add
add
inc
les
cmp
and
mov
inc
push
mov
cmp
negl
popa
push
int3
mov
jle
lea
sub
imul
xchg
jnp
push
mov
mov
stos
jbe
repnz
add
push
out
movsl
rcr
xchg
scas
jecxz
out
inc
mov
les
out
fldl
es
xlat
cmpsb
push
jmp
sbb
icebp
fistps
ret
fistps
clc
vshufps
movsb
pop
jg
mov
xor
cmpsl
dec
repnz
jecxz
push
scas
sbb
inc
ret
in
xor
frstor
inc
hlt
mov
outsl
add
push
jb
xchg
aas
ficoml
test
lods
cltd
fs
jle
jns
xor
pushf
les
dec
out
xorl
pop
cmp
jl
int3
lods
dec
jmp
rolb
test
push
sahf
data16
imull
sub
push
lock
mov
mov
jae
push
push
push
or
mov
roll
inc
sub
push
mov
push
lcall
ficoml
test
mov
dec
addr16
aad
mov
rclb
or
and
icebp
push
fwait
xor
ret
test
sub
bound
adc
dec
jl
in
xorl
nop
popf
dec
out
inc
movsl
mov
mov
gs
mov
cmp
xchg
scas
jbe
mov
cmp
xor
or
enter
icebp
gs
pop
gs
push
stos
daa
aas
jns
add
lods
pop
inc
lock
cmpsb
cld
push
mov
test
js
scas
pop
jg
stos
into
and
jg
sub
mov
imul
sahf
ret
loopne
jb
or
inc
cmp
xlat
push
xor
insl
xchg
mov
add
inc
ljmp
mov
mov
cmpsb
iret
mov
or
cmpsl
cmp
and
ljmp
xchg
dec
push
in
xchg
jl
sbb
xor
cmp
rorb
test
mov
jmp
aad
xchg
jmp
testl
xor
adcb
cmp
jl
popa
adc
mov
pushf
jnp
mov
lds
jb
mov
dec
rcl
leave
add
nop
push
add
lahf
sahf
mov
leave
movsl
jecxz
sub
daa
sahf
cs
shrb
jb
js
mov
mov
out
pop
mov
jnp
out
cwtl
mov
mov
test
ret
xchg
test
out
insb
sub
mov
popf
cmp
or
push
xor
pushw
pop
loope
scas
cmp
sbb
int3
fnstsw
sbb
fcoms
not
movb
or
jg
cli
arpl
arpl
mov
xchg
int
lds
adc
mov
cmp
insl
fidivrl
jge
sarl
mov
or
cld
push
mov
mov
mov
xchg
dec
inc
or
jl
xlat
push
test
es
sbb
cmc
lods
aaa
pop
lods
mov
rclb
in
outsl
je
xchg
push
xor
loop
rcrl
popf
adc
xor
inc
fprem
clc
xor
enter
ds
out
fdivr
inc
adc
js
cmp
mov
inc
cmc
clc
mov
in
xchg
lret
into
test
shll
nop
arpl
int
jbe
dec
dec
and
insb
lds
arpl
xlat
nop
gs
stos
mov
adc
cmp
ror
pusha
sub
cmp
int3
fwait
icebp
add
mov
es
pusha
fstl
sbb
fcompl
loopne
jne
cs
leave
lds
daa
mov
xlat
jmp
mulb
dec
data16
inc
mov
and
mov
hlt
cmpsb
mov
or
out
cs
aam
es
movsl
push
push
xchg
dec
mov
out
das
xchg
lahf
cmpsl
aad
insb
imul
std
daa
adc
repnz
fists
xchg
mov
dec
leave
adc
jno
aam
push
imul
xchg
dec
in
mov
aas
mov
sbb
pop
mulss
add
cltd
fdivrs
dec
or
dec
loope
and
rorb
cmp
sbbl
push
mov
aam
data16
iret
movb
repnz
xor
in
add
jp
insl
in
mov
push
sarl
dec
xor
pushf
fstl
mov
mov
and
jle
push
andl
xchg
adc
pop
xchg
and
popf
cmp
sti
ljmp
inc
cmpsb
jno
mov
iret
adc
push
sbb
adc
mov
icebp
mov
and
mov
jo
fistpll
orb
push
lahf
repz
jge
fiaddl
das
fsubrs
sbb
mov
jg
cmpsb
in
iret
mov
shl
jg
inc
rorb
mov
je
lret
cmp
push
in
mov
or
sbb
add
mov
sbb
std
aad
push
dec
out
add
adc
adcl
jge
adc
push
fstpl
xor
mov
inc
cmp
xor
cmpsb
dec
pop
gs
stos
mov
pop
xlat
lret
xor
mov
mov
int3
xor
lret
push
pop
jnp
shr
jg
cmc
imul
mov
movsl
sub
jge
xchg
mov
ret
cmp
lea
adc
shrl
pop
push
mov
cmp
ljmp
and
cmp
repnz
xchg
cmp
cmp
std
push
sarl
les
pop
add
pop
inc
inc
out
cmp
out
mov
subl
test
jle
xor
mov
mov
fbstp
adc
decb
imul
mov
xorb
outsl
adc
lds
rorl
lock
fcompl
fadds
shlb
adc
jmp
push
inc
rorl
dec
jle
out
roll
pop
dec
mov
mov
fwait
mov
shlb
jns
imul
sbb
fnsave
dec
inc
cmpsl
adc
daa
mov
mov
pop
cltd
imul
aam
mov
cmc
inc
xor
mov
mov
mov
loope
pop
xchg
fldl
scas
dec
stc
jns
sub
fwait
inc
popf
fwait
mov
mov
dec
pop
xor
mov
imul
cld
jo
mov
and
push
lret
inc
in
popa
mov
fs
cmpsb
dec
and
inc
mov
ret
and
mov
dec
cld
dec
pop
popa
mov
test
dec
aaa
sbb
lds
nop
mul
mov
cmpsb
xchg
aam
shlb
inc
dec
pop
sti
int
adc
xor
dec
pop
sahf
sti
mov
outsl
test
dec
and
les
jl
inc
cmp
sbb
inc
icebp
in
lock
xchg
andb
dec
insb
lock
sub
mov
add
repz
mov
cmp
pop
push
jl
sub
clc
push
in
xchg
adc
cmpsb
sub
push
mov
and
addr16
mov
jmp
push
data16
repz
add
adc
push
xchg
mov
ljmp
xchg
sub
call
or
test
lcall
and
inc
pop
aaa
test
stos
repnz
add
adc
mov
pop
inc
push
sbb
cs
sbb
cld
xchg
dec
sub
jmp
mov
and
inc
mov
push
imul
and
adc
and
outsb
jl
test
popf
mov
adc
push
sbb
dec
xor
dec
jbe
cmp
mov
mov
jo
xor
push
call
ficompl
pop
jmp
fisubrs
add
lret
jbe
push
mov
xchg
clc
rorl
hlt
ret
and
subb
test
dec
test
mov
mov
daa
popf
xchg
hlt
or
dec
dec
mov
mov
xchg
sub
pop
jo
mov
fcos
push
lock
fcmovnb
push
ss
lock
mov
fwait
push
xchg
xchg
adc
icebp
mov
ret
dec
mov
in
daa
sub
xchg
daa
xchg
sub
xchg
fucomip
movsl
add
out
mov
push
scas
mov
mov
mov
dec
inc
sub
inc
pushf
enter
mov
arpl
jmp
in
mov
mov
xchg
lahf
cmp
arpl
adc
rcrb
out
sub
cltd
cwtl
cmp
ret
repnz
adc
xor
les
cld
add
jl
xor
jo
xor
mov
add
gs
cmp
xchg
mov
xchg
popf
push
xor
in
arpl
xor
inc
sbb
and
jle
lods
xchg
mov
dec
int
ss
add
pop
out
int3
imul
movsb
lods
test
sub
loop
push
pop
xchg
int
inc
imul
loop
clc
out
xchg
adcb
xor
mov
mov
cmp
lcall
lret
fcompp
xchg
or
andb
pop
ficomps
cmp
incb
xchg
mov
fldl
push
shl
mov
xlat
ljmp
or
push
and
jns
push
jecxz
mov
aad
bound
hlt
pop
movsl
shlb
test
add
fs
xchg
push
pop
dec
and
dec
push
movsw
pop
xor
xchg
sbb
gs
xchg
inc
mov
negb
mov
inc
mov
dec
xor
movsl
push
lahf
push
sub
add
movsb
xchg
push
mov
fwait
ljmp
das
or
xor
pop
repnz
dec
out
mov
lret
test
test
rcrb
cmp
lret
push
clc
adc
jne
cld
idivb
cmpsl
int3
das
cmc
lods
out
xor
inc
aaa
sub
xor
mov
stos
mov
pushw
scas
inc
pop
movsb
push
or
mov
dec
jno
data16
in
cmp
mov
mov
pop
test
mov
adc
cmp
stc
pop
clc
sti
leavew
in
pop
fistpl
mov
push
lret
jno
xchg
iret
jp
addr16
icebp
push
lret
and
cmp
push
jge
push
or
mov
shlb
add
in
mov
jo
inc
push
mov
sbb
mov
jno
mov
popl
mov
ficompl
inc
pushf
stc
lea
cmp
and
pop
xchg
ficomps
sbb
jmp
xlat
mov
stos
mov
cmp
inc
fildll
mov
sbb
push
push
mov
dec
outsl
rolb
jl
outsl
int3
insb
mov
stos
rcr
icebp
jl
mov
lret
lds
push
stc
mov
and
jle
stos
ficomps
adc
mov
and
jnp
addb
jg
mov
lcall
pop
in
jno
pop
xor
pop
icebp
idiv
xchg
push
bound
cmp
loop
pop
or
int
movsb
add
dec
ljmp
add
stos
out
mov
sub
dec
inc
inc
jnp
xor
les
push
xchg
cli
adc
adc
fisttpll
cmc
icebp
push
out
mov
jp
push
push
lret
cli
stc
out
xchg
data16
ja
sti
add
daa
inc
roll
lock
in
sahf
xchg
sbb
adcb
scas
dec
cltd
cmp
pop
or
inc
movsl
leave
ficoml
mov
jnp
pop
shll
cmp
adc
push
inc
popf
xchg
addr16
dec
jmp
add
mov
mull
cmpsb
jo
clc
push
add
dec
pop
sahf
push
clc
loopne
sbb
and
cmc
cmpsl
leave
push
int3
inc
and
jl
pop
add
push
mov
and
into
xor
push
xor
push
cmc
pop
inc
ljmp
xchg
fs
ret
adc
jne
mov
fldl2t
subb
pmullw
pusha
xchg
test
xor
clc
or
add
add
pop
mov
push
movsl
mov
pusha
fcmovnbe
loope
jecxz
xchg
xchg
ffree
dec
icebp
sahf
inc
cwtl
out
dec
ret
mov
or
out
or
cs
mov
leave
popa
xchg
nop
lods
bswap
xchg
push
aas
push
mov
dec
dec
cli
mov
jl
pop
mov
repz
xor
in
insl
or
mov
or
dec
test
stos
lcall
aam
fisubrs
lock
sti
or
je
stc
lock
xchg
sbb
cmpsb
repnz
sti
out
fidivrs
mov
jecxz,pn
mov
gs
cmp
mov
inc
ret
inc
cmp
cmc
dec
fmull
pop
or
shlb
fisubs
fnstenv
sub
scas
jmp
and
in
lods
js
into
dec
int3
les
outsb
fs
rcrb
and
mov
jmp
hlt
daa
cmp
mov
mov
pop
flds
mov
cmpsl
stos
mov
insb
aaa
in
sub
inc
pop
arpl
cltd
mov
pop
insl
adc
and
push
aam
sub
mov
test
ss
outsb
fcomps
mov
lea
movsl
out
or
repnz
sub
ror
lea
cld
stos
add
fcmovnbe
lcall
imul
fidivrs
outsb
test
hlt
das
and
sbb
inc
mov
cwtl
or
out
inc
jp
pop
cmp
in
lds
mulb
cmp
pop
lret
addr16
dec
shl
scas
add
or
call
jo
mov
fmuls
int
sti
pushf
in
je
xlat
sub
fisubl
mov
insl
cmp
in
ret
pop
xor
mov
stos
mov
cmc
ja
ficompl
sbb
push
das
jge
push
and
daa
roll
rol
inc
fmull
push
sbb
xor
jle
lahf
ret
repz
aaa
test
jp
jo
mov
pop
repnz
adc
push
sti
int
fistl
es
adc
enter
sbb
push
into
xchg
mov
mov
scas
adc
aad
jp
mov
cltd
xchg
and
cmp
push
les
push
inc
xchg
ret
es
movsb
ljmp
das
add
dec
mov
xchg
comiss
or
mov
dec
jne
imul
rcll
pop
cmp
fs
aas
fprem
sub
push
mov
mov
sub
cmp
cmc
add
adc
cwtl
rcrb
jnp
mov
push
stc
in
push
xor
pop
xchg
pop
bound
cld
out
ljmp
cmpsb
push
sub
out
xor
inc
xchg
sar
pop
shl
jmp
mov
add
andl
into
les
clc
movb
cli
stos
fbld
sbb
idiv
xor
dec
cmp
loopne
pop
mov
adc
xchg
adc
popf
add
sub
popf
enter
call
movsb
mov
gs
inc
and
sub
inc
icebp
inc
loopne
sbb
sbb
arpl
pop
push
sbb
or
nop
xchg
pop
les
push
testb
insb
orl
xchg
xor
in
add
ficoml
mov
add
xchg
mov
out
or
outsl
orb
cmp
push
sbb
push
loop
repz
repnz
cwtl
pop
movsb
pop
icebp
jg
jp
cwtl
inc
dec
pop
sti
xchg
inc
int
xchg
int3
add
mov
xorl
mov
loop
cmp
xor
push
adc
insb
xchg
stos
icebp
cmp
adc
pop
dec
cmp
ja
stc
push
push
dec
int
dec
rolb
sbb
pop
mov
add
and
xor
icebp
sbb
pusha
push
fdivrl
cli
cmc
mov
sti
fadds
xor
push
loopne
sahf
ja
insb
jb
jb
loope
dec
mov
das
hlt
add
sbb
aam
idivl
inc
aas
rorl
in
nop
xchg
ret
mov
js
or
mov
mov
rcrl
rolb
add
and
inc
pop
adc
rcrl
stc
xor
xchg
mov
jp
notb
dec
xchg
lds
ret
xchg
mov
ds
in
pop
inc
or
cli
fisubl
or
test
lods
lds
rorb
lret
push
cmp
jnp
lret
cmpsl
pushf
ror
xor
test
shr
cmc
pop
ljmp
mov
add
adc
cmc
imul
movsl
inc
outsb
adc
add
nop
jns
les
sbb
andl
movnti
ret
gs
fsubp
es
outsl
push
jp
pop
ljmp
sbb
rclb
stos
sub
fwait
test
test
dec
xchg
pop
sbb
loopne
aaa
imul
movsb
adc
jp
push
dec
add
lods
jecxz
fstpl
mov
mov
lods
pop
add
dec
push
mulb
dec
mov
sub
cmpb
push
jae
ret
mov
dec
fs
loopne
call
pusha
pop
mov
fidivs
mov
movsb
jg
lret
mov
pop
jmp
push
adc
pop
outsb
fistpl
xchg
fmull
in
mov
pusha
pop
sti
or
xchg
ret
mov
cmp
dec
les
imul
pop
add
icebp
cmpsl
repz
jg
adc
sti
pushf
aas
fcompl
sarb
fsubrl
mov
imul
sbb
xchg
repz
rolb
sti
jb
dec
cmp
adc
jg
inc
das
dec
jbe
push
or
mov
pop
in
cmc
xor
shlb
bound
pop
lea
sbb
mov
jle
lret
test
pop
hlt
cmpsb
rolb
pmulhw
xchg
movsl
inc
xchg
ljmp
push
dec
mov
cld
xchg
ds
sbbb
iret
adc
out
push
sbb
ds
adc
test
sbb
fcompl
push
mov
and
push
adc
or
sub
dec
lds
sahf
fiadds
es
mov
inc
ror
mov
aad
clc
xchg
addr16
and
hlt
aad
push
stos
lock
lcall
xchg
daa
popa
les
push
inc
iret
loope
out
jecxz
sbb
int3
xchg
into
cmpsb
fs
or
rorb
iret
mov
pop
fisttpl
jp
leave
adc
pusha
push
ss
inc
out
imul
jmp
roll
mov
xchg
fisttpll
mov
sub
out
loop
inc
clc
adc
xlat
lods
sbb
or
push
test
sbb
jb
mul
insb
mov
je
mov
add
inc
lret
out
mov
sub
mov
sub
mov
sub
mov
imul
jl
testb
lcall
outsb
sbb
std
lea
test
test
lock
or
lahf
sub
test
mov
fsts
mov
sub
mov
and
push
in
es
xlat
adc
cmp
daa
clc
lret
in
push
shlb
fwait
les
xor
or
sub
mov
mov
and
das
mov
sbb
inc
pop
in
cmp
sahf
sbb
xchg
orl
mov
pop
jo
cmpsb
cld
jae
test
xor
push
scas
dec
arpl
pop
adc
cmpsl
into
das
mov
adcl
adc
xchg
pop
movsb
sahf
pusha
jne
mov
sti
cwtl
outsl
lds
clc
fldt
jo
pusha
mov
jne
das
jg
sub
jae
out
fs
add
jne
int
repz
dec
mov
xchg
cmc
cmp
mov
rolb
sbb
and
daa
push
imul
dec
daa
and
cltd
dec
out
mov
repz
sbb
xchg
push
sub
dec
xchg
and
scas
aas
cmp
mov
leave
xchg
dec
enter
lods
jno
test
lret
inc
xor
test
iret
pop
les
xchg
fwait
xchg
xchg
addr16
sbb
jns
test
cli
xchg
es
push
push
jge
adc
in
push
sar
call
ficoml
cld
mov
mov
xchg
cmp
pop
andl
in
mov
mov
adc
lcall
dec
cmp
inc
push
and
outsl
jg,pt
rcrl
pop
shl
int3
xor
out
leave
or
sbb
or
out
je
pop
ja
iret
repnz
push
sub
push
fstpl
imul
sbb
mov
mov
loop
xlat
and
jl
out
mov
out
aad
add
call
cmp
and
mov
daa
in
push
mov
mov
cmpsb
rol
dec
std
mov
icebp
movsl
outsb
stos
fcompl
scas
out
in
jne
adc
cmp
pop
enter
push
mul
push
mov
in
add
cmp
rorb
jg
popa
xlat
pop
mov
scas
out
call
jo
loope
push
ja
cld
mov
adc
test
pop
sbb
xchg
into
add
xor
shrl
lea
movsb
outsl
inc
test
lret
movsb
jbe
jle
rol
mov
addr16
sub
sbb
addb
cli
gs
push
lea
or
and
mov
cli
mov
das
lds
push
fsqrt
cmp
sbb
and
fwait
adc
inc
ja
pop
adc
pop
and
push
or
mov
cwtl
jmp
imul
add
jns
out
xor
lods
and
push
or
gs
dec
jge
lret
mov
push
fsub
xchg
add
scas
and
shlb
outsb
lcall
fwait
into
test
push
sub
mov
jne
addr16
outsl
icebp
repnz
out
xor
clc
and
sbb
bnd
insl
cmp
and
sbb
mov
jb
aas
cmp
mov
ss
jbe
into
xor
sub
push
mov
mov
push
lods
mov
jbe
dec
sub
hlt
lahf
popa
frndint
cmp
mov
mov
and
jne
xchg
push
es
xlat
ljmp
cs
shrl
repz
pop
in
jno
or
ss
sub
xchg
jb
ret
mov
bound
imul
ss
jg
xor
pop
mov
sub
imul
aad
mov
pop
pop
aam
adc
pop
pop
in
adcb
or
insb
mov
sub
mov
cli
orl
ja
loope
xchg
fdivl
stos
repnz
out
lods
icebp
add
repnz
jne
sar
loopne
insl
xchg
int
cmp
and
insl
movsl
popf
pop
push
rcrb
into
and
push
lcall
xor
je
icebp
sbb
daa
lea
stos
into
lock
lcall
mov
adc
jg
add
pop
adc
cli
fwait
je
sbb
sub
pop
mov
cmp
fiadds
xor
pop
xlat
rcrb
or
std
mov
mov
add
cmc
bound
js
mov
cmc
push
out
iret
ja
cmovae
lods
call
clc
xor
cwtl
stos
iret
inc
loop
push
sbb
shrb
dec
cltd
imul
test
notb
rcl
fmuls
xchg
fdivrs
push
fldenv
push
sahf
adc
jne
adc
cmc
add
loopne
jnp
es
ds
mov
jo
mov
add
cmc
loop
lea
push
pop
push
mov
cmpsl
popa
ret
push
dec
movl
and
icebp
push
sub
shlb
or
or
lods
pop
sub
adc
mov
test
out
shlb
push
mov
pop
mov
aad
jge
adc
inc
cwtl
xchg
or
inc
scas
jecxz
push
push
mov
or
mov
arpl
repz
outsl
pop
mov
dec
test
aad
fisubs
out
sub
fs
push
push
add
mov
sbbl
cmp
outsb
icebp
or
fcoml
dec
popf
mov
sbb
xchg
sub
or
push
sub
std
pushf
and
call
jo
inc
repnz
int3
mov
loopne
int3
fmull
mov
cmp
sbb
dec
mov
jl
into
add
testb
in
sub
inc
xchg
fdivp
incl
out
pop
idivb
arpl
loop
push
test
inc
mov
pushl
jb
xchg
pop
jecxz
xchg
sbbb
xor
cmp
lds
fists
pop
sbb
cwtl
mov
shll
movsb
dec
sbb
loop
out
pop
incl
out
leave
push
in
out
and
imul
push
pop
jmp
setno
leave
leave
pop
outsl
sahf
adc
scas
pop
push
ja
inc
icebp
cwtl
jb
inc
iret
and
jmp
add
nop
js
push
pop
test
sub
pop
call
mov
mov
clc
js
and
divb
push
out
cmp
arpl
in
mov
sbb
sbb
testl
sub
sarl
sbb
cmp
or
dec
ss
shlb
xchg
jae
call
push
sbb
test
cmp
call
and
adc
jl
or
pop
andb
addl
into
xor
jmp
fucomip
iret
fnstsw
loopne
xor
pop
lahf
aas
sub
pushf
outsb
add
inc
aam
add
fs
or
add
out
cmp
cli
jo
mov
test
xor
mov
mov
pop
dec
mov
cld
sbb
dec
lea
int
cmc
dec
push
cmpsb
adc
mov
sub
cmp
pop
pushf
cld
out
aas
into
sahf
lcall
mov
xor
push
das
inc
outsb
in
mov
mov
popa
mov
dec
pop
out
sbb
xor
push
sbb
enter
pop
push
fsubr
pop
and
inc
mov
test
mov
jle
aad
ret
iret
sub
lret
imul
mov
out
scas
shll
push
fs
hlt
and
call
ja
xor
loopne
lret
dec
lahf
cli
pop
aaa
sub
add
and
xchg
lods
inc
imul
and
push
pop
nop
lret
jg
push
jb
fiaddl
jge
cmpsl
lods
into
mov
jmp
stc
add
das
jmp
push
mov
fcompl
stos
pop
xchg
and
add
addb
jne
int3
fwait
data16
stos
adc
add
jg
iret
pushf
in
dec
mov
jp
add
add
cmp
xor
imul
test
scas
mov
filds
ja
mov
sti
push
ja
mov
push
mov
jge
lcall
ja
jb
imull
sahf
addb
dec
ja
jne
dec
jmp
outsb
mov
push
sar
and
jno
insb
cmp
add
loop
mov
iret
adc
pop
lock
test
xor
jecxz
jne
pop
ss
add
pop
ror
lea
sbb
cmp
mov
add
cmp
add
push
lahf
and
in
call
dec
aaa
vcvtps2pd
inc
dec
lret
aam
movsl
pushf
lock
imulb
iret
mov
mov
add
data16
mov
jns
aad
and
add
jo
jg
jge
fidivrs
xor
jg
scas
lods
test
xlat
mov
int
mov
rcll
and
xchg
add
fwait
roll
xchg
mov
cmp
call
push
mov
jmp
jo
push
push
pop
sahf
jo
mov
icebp
in
xor
pusha
adc
ds
lea
inc
les
popf
sahf
rol
adc
lock
push
mov
lods
push
mov
mul
jno
fmul
imul
movsl
xchg
ret
adcb
data16
ret
call
sub
aad
cmpsl
fmuls
scas
in
lds
xor
cmp
mov
repnz
jno
inc
xor
das
mov
adc
push
adc
shll
adc
lcall
shl
jbe
stos
pop
insb
pop
insb
andl
sub
int3
or
or
insl
inc
ret
sbb
lods
in
fcomp
mov
or
adc
out
jmp
pop
js
pop
aam
adc
mov
testb
icebp
cmp
call
out
pop
test
lods
popf
pop
fisubrs
inc
lret
push
loopne
and
xor
jbe
je
mov
shrb
scas
mov
test
lcall
rolb
pop
ja
frstor
sub
pop
into
cmp
loope
movl
cmp
ret
pop
ja
push
mov
cli
lock
subb
or
xchg
push
scas
xor
hlt
enter
addb
lret
std
out
sbb
mov
sbbb
int
mov
push
loop
xchg
cmp
repnz
cmpsl
or
jge,pn
dec
sbb
sbb
push
pop
enter
mov
fwait
or
lods
pusha
push
xor
je,pt
popa
inc
add
adc
cli
jnp
xor
jmp
or
mov
mov
cmp
rolb
sti
outsb
sub
push
scas
xchg
daa
inc
cmpsb
cli
pop
push
cmpl
jge
jnp
or
cmpsb
or
push
inc
popa
xor
mov
pop
popf
ret
gs
dec
add
mov
push
dec
xchg
sub
loopne
mov
movsl
sub
cmpl
sbb
inc
sbb
inc
clc
rorl
jb
cmp
xchg
cli
adc
and
lods
jno
les
cmc
js
cmp
push
fadds
lock
lods
pop
loope
push
rcl
pop
bswap
sti
test
pop
mov
loope
pop
adc
dec
subps
inc
out
aad
imul
mov
adc
fistl
inc
push
lret
adcl
lds
inc
sub
inc
cli
sbb
pop
insb
and
std
mov
inc
aad
or
mov
shll
pusha
mov
out
adc
imul
xor
lahf
mov
pop
sbb
bound
outsl
out
in
push
xor
repnz
out
mov
inc
test
mov
pop
in
xchg
mov
es
and
jmp
cs
jno
push
jle
stos
mov
or
fidivl
jns
mov
sub
popf
divl
call
arpl
and
mov
pushf
jne
into
jb
dec
push
sub
cmp
lret
pushl
testb
push
rcrl
mov
fxam
mov
pop
je
push
cmp
push
or
jbe
jg
push
shll
clc
and
push
dec
fwait
mov
andb
sbb
lods
mov
mov
dec
in
int3
inc
inc
stos
scas
push
pop
movsb
push
movsb
sub
es
daa
lcall
in
push
push
and
out
ds
scas
adc
sub
mov
int
mov
cltd
test
push
mov
in
mov
popa
js
push
outsb
enter
movsl
adc
shrl
push
rcll
inc
repz
movsl
rclb
popa
enter
das
or
fbstp
add
out
jle
xor
ds
sbb
sub
faddl
xorl
mov
ljmp
sub
cltd
push
sbb
scas
cmp
mov
lds
jg
fildll
xchg
mov
icebp
in
cmpsb
inc
inc
imul
int3
lret
stos
push
sub
fwait
xor
lea
popf
out
jb
sysexit
leave
mov
mov
jno
or
mov
aad
inc
mov
jbe
imul
jno
ss
pop
daa
adc
xchg
jns
ljmp
mov
add
hlt
sub
cmc
iret
mov
loopne
roll
xchg
es
call
dec
push
pushf
call
hlt
jns
or
xor
popf
jge
cltd
dec
pop
int
mov
cmc
sub
cmpsb
out
mov
cwtl
loopne
stos
cmpsb
and
push
aaa
aam
insl
mov
push
cmp
cmp
arpl
in
sbb
int3
mov
shlb
cld
cmp
or
jecxz
cmp
out
adc
out
xor
jp
mov
xorb
jl
into
bnd
mov
leave
cmp
in
ret
sahf
sbb
jmp
leave
mov
lahf
in
pop
push
inc
rorl
pop
mov
lcall
fs
out
pop
or
cli
test
xor
movsb
cwtl
add
push
push
stos
lea
mov
and
xchg
dec
sbb
mov
xchg
xchg
mov
mov
das
loop
push
outsl
inc
cmpsb
cltd
enter
xchg
xor
stc
mov
or
mov
into
bound
dec
roll
lret
jbe
in
mov
add
inc
es
adc
sahf
jno
ljmp
push
jmp
and
inc
rcrb
dec
out
or
stc
pusha
in
loope
pop
out
and
popa
aad
and
pop
xchg
aas
mov
outsl
cs
out
push
jbe
and
jecxz
mov
jo
repnz
cltd
es
mov
shlb
aad
fstps
jmp
test
jb
enter
inc
filds
ss
or
fdivl
inc
cmp
insl
mov
dec
push
loopne
cmpsl
bound
cmp
leave
nop
shlb
jl
movb
cmp
push
ss
mov
adc
in
xchg
xchg
sub
pop
dec
add
xlat
out
pop
and
adc
cmp
lret
sub
or
mov
jno
fmul
leave
imul
pop
rclb
in
mov
jmp
loopne
inc
sub
outsb
das
push
xchg
pop
or
cwtl
pop
xlat
imul
imul
test
push
cmpsl
lock
pushf
shlb
add
sbb
sahf
je
pop
mov
mov
outsb
push
mov
gs
ljmp
jl
mov
icebp
out
movsl
fldenv
mov
shrl
sub
pop
sub
jne
lea
das
pushf
in
or
push
sarl
jmp
push
sbb
sbb
jbe
xor
idiv
ds
stos
xchg
dec
push
in
in
decb
dec
push
cmp
jo
movsb
inc
xor
dec
dec
es
hlt
push
jge
rorb
inc
mov
imul
pop
movsl
push
cwtl
mov
sub
cmc
fimull
cmc
out
fsubrs
inc
push
js
xor
jo
loopne
cmp
std
dec
mov
cmp
in
loope
shlb
and
jb
int
fildl
mov
push
out
imul
dec
movsb
fdivr
imul
pop
xor
inc
mov
ret
pop
imul
cmp
push
out
jnp
jb
pop
cmpsb
shll
jno
into
or
lret
out
pop
push
pop
sbb
inc
sti
dec
sti
fcompl
lods
mov
xchg
test
adc
test
adc
pop
arpl
mov
or
mov
cmp
xchg
dec
xor
pop
sub
ret
das
and
push
sub
jae
sbb
lret
push
jge
ret
arpl
ss
mov
cmp
ljmp
leave
jns
cmp
pop
les
xchg
cmpsb
ljmp
lea
cmp
call
mov
testl
sahf
push
cmp
add
movsl
inc
scas
jnp
fisttps
sahf
and
push
cmp
fucomi
push
pushf
push
push
iret
adc
into
xor
popf
adc
out
ja
xor
rorb
je
repnz
sti
jno
push
cmpsb
fcoml
arpl
sub
jnp
xlat
jno
push
test
jnp
or
push
das
jmp
mov
mov
dec
pop
push
stos
testl
pusha
xchg
pusha
cwtl
jecxz
adc
push
popa
add
in
xor
test
inc
verr
aas
loopne
loopne
imulb
xor
fisttps
mov
xor
adc
mov
mov
pop
test
inc
jp
pop
lods
nop
aam
mov
addr16
sub
aam
sar
mov
leave
push
mov
mov
arpl
xlat
std
out
inc
repz
jg
push
repnz
loop
test
mov
xchg
ja
call
ss
insl
sub
push
dec
aas
nop
cli
stc
insb
fwait
sbb
loopne
lahf
xchg
pusha
and
imul
mov
int
sub
dec
push
cmp
scas
jae
lea
jnp
dec
push
jno
idivb
mov
mov
xor
sbbb
dec
jb
fcomi
sbb
cli
xchg
mov
std
loope
jo
stos
out
ja
fdiv
mov
lret
outsb
sbbb
je
fmuls
xor
je
gs
xor
and
fidivrl
out
out
add
xchg
add
add
imul
mov
leave
xchg
repz
outsb
cmp
mov
xor
xor
xor
call
sbb
dec
and
add
int3
or
add
xor
xchg
inc
and
in
jge
sbb
push
and
stos
iret
iret
cmp
pushl
lds
call
shl
pop
push
sub
push
stos
pop
aaa
outsl
xlat
jl
and
cld
icebp
xor
push
test
mov
or
mov
mov
cmpsb
jmp
scas
sub
stos
mov
mov
pop
add
xor
pop
fimull
pop
mov
inc
leave
adc
push
bound
jno
sub
or
cltd
test
int
cli
adc
pop
push
in
pusha
call
sub
xor
test
pop
in
pop
lods
aad
vmwrite
movl
loope
dec
inc
daa
or
or
insl
add
adc
outsb
clc
xor
xchg
push
gs
xchg
fists
stos
imul
js
sbb
xchg
or
out
out
cmp
pop
jbe
mov
sub
stos
pop
lock
mov
into
sbb
and
je
lcall
cmpsl
push
or
push
sbb
add
stos
adc
inc
out
es
loope
pop
sub
sub
imulb
fildll
xlat
adc
cmp
lods
lea
popf
es
lea
fxtract
das
xor
pop
fucom
test
aad
aas
mov
cld
add
jle
stc
inc
sub
push
mov
stos
jl
add
subl
pusha
icebp
sbbl
cmpb
jno
pop
lret
push
adc
fucomi
pop
out
pop
xchg
cmpsl
roll
pop
sahf
push
jmp
push
jle
sub
repnz
xchg
mov
movsb
sbb
jp
fsubrl
or
cmp
push
add
sub
jg
jae
dec
cmp
fstl
lods
dec
cmc
hlt
jne
dec
and
test
dec
cmc
sub
mov
cmp
notb
and
stos
jae
and
stos
mov
popa
push
lods
jecxz
and
lea
push
test
cmp
inc
aaa
push
push
icebp
pop
lret
mov
sbb
inc
icebp
xor
push
daa
hlt
xor
lock
int
ja
daa
adcl
cmpsb
jp
test
bound
stc
leave
add
rorl
dec
aaa
int3
fbld
ds
xchg
popa
sub
ret
mov
mov
adc
ret
cli
ja
shll
cmp
add
dec
int3
inc
sbb
outsl
scas
and
aad
dec
into
add
jge
lcall
pop
inc
inc
cld
mov
inc
sarl
test
mov
xor
imul
or
outsl
cmc
sbb
and
pop
adc
enter
cs
bound
fcompl
pop
pop
dec
jo
ret
stos
dec
fdiv
xor
jecxz
lahf
ret
lods
xchg
repnz
dec
and
aaa
mov
jae
outsb
mulb
insl
sbbl
mov
xor
pop
add
mov
jbe
adc
scas
jge
sub
in
jne
test
xor
pop
mov
push
cs
jo
nop
lea
call
je
inc
mov
mov
xchg
int
or
inc
shrl
cmp
js
fistpll
or
fsub
daa
mov
jecxz
sub
add
es
pop
loop
cmp
cmp
xor
or
cmpsl
popf
push
stos
pop
lds
clc
inc
inc
sbb
sbb
fstps
push
lods
add
dec
jecxz
mov
std
jns
imul
cli
mov
sub
dec
mov
test
out
stos
and
es
mov
test
jno
xor
add
std
lods
or
int3
iret
ret
daa
dec
add
inc
push
jcxz
adc
push
test
or
push
xor
fnsave
jno
dec
xchg
nop
imul
add
cmpsb
sub
pop
add
jg
pop
js
cli
push
stos
cmp
ja
dec
nop
fs
int3
lret
mov
js
xchg
inc
adc
xchg
lock
pop
add
cmp
inc
sbb
inc
out
sub
mov
decl
sbb
jnp
inc
mov
je
pop
ficoms
dec
cmp
inc
cwtl
or
or
shl
mov
inc
popf
mov
popf
cmp
mov
sub
pop
out
mov
inc
ss
jnp
inc
cmpsb
fdivrs
pop
cmp
and
xchg
lcall
or
jb
mov
sbb
add
cmp
adc
das
std
aam
call
sbb
push
fildl
sbb
xor
sbb
fsubrp
add
jbe
dec
cmp
cmp
mov
mov
pusha
sub
fisubs
sbb
rcr
xchg
xchg
xor
dec
mov
cs
add
pop
lods
xchg
push
out
inc
cmp
sub
adc
in
hlt
adc
nop
add
cmpsb
add
add
sahf
mov
dec
stos
daa
aad
arpl
in
pop
lock
pop
cmp
fidivrs
xor
or
pushf
inc
mov
negl
mov
xchg
lods
repz
jae
or
cmp
imul
insl
and
adc
xor
icebp
xchg
inc
mov
lock
mov
adc
mov
sbb
popa
sti
and
pusha
push
push
sti
in
test
es
and
xor
pop
imull
pop
jno
jnp
adc
pop
dec
aad
mov
cmpsb
dec
cmpsb
out
pop
std
and
stos
gs
cwtl
mov
lock
aas
fnsave
push
add
jb
cmpsl
ja
lds
sbb
mov
cmpsl
fcompl
and
mov
push
cmp
jmp
mov
mov
int3
lds
nop
out
cmp
sti
fisubrl
imul
testb
pop
stc
dec
shr
inc
mov
pusha
je
inc
cmp
mov
and
iret
pop
enter
or
imul
jge
add
xlat
loopne
or
pop
adc
xchg
jecxz
pop
xchg
inc
mov
inc
js
xchg
mov
mov
pop
sbb
cmp
iret
aaa
xor
cmp
push
xor
cmp
rol
xor
mov
pop
push
into
popaw
jae
fcmovb
int3
mov
enter
fimuls
js
test
jbe
repnz
pop
sarl
movsl
xchg
pop
fcomip
add
xor
pop
jb
mov
sub
inc
push
fs
push
xchg
inc
fistl
lahf
mov
pop
rolb
rorl
addl
leave
insl
sahf
lods
dec
stos
js
inc
or
pop
inc
cld
test
fistpl
inc
cs
insb
add
rcll
mov
imul
js
repnz
xchg
cmp
rorl
fildl
cltd
cmp
pop
divb
mov
dec
lahf
aaa
pop
pusha
xchg
popf
pop
cmp
fcomps
cmp
jle
mov
mov
cmc
inc
inc
and
movb
pop
clc
stos
push
not
in
mov
inc
add
clc
push
aam
jge
adc
jns
lahf
mov
pop
sbb
fs
xor
addb
inc
push
lock
jg
xor
es
loope
aam
sar
mov
push
mov
sahf
iret
mov
mov
xchg
sti
sbb
pusha
fdivs
cwtl
xchg
outsl
mov
mov
sub
cmc
sub
jbe
repnz
push
divl
dec
rcr
out
adc
push
mov
or
xlat
adc
and
cmp
lods
cmp
outsl
mov
sub
xchg
mov
and
push
add
xchg
subl
mov
add
xlat
mov
inc
int
pop
rol
dec
lods
mov
mov
testl
rol
sbb
es
jns
dec
aaa
jo
xchg
je
out
jae
popf
movsb
iret
scas
mov
ss
ja
pop
fisubs
add
xchg
jbe
adc
popf
mov
pop
fisubrs
cmp
pop
cld
lret
in
inc
xchg
push
push
scas
cli
mov
mov
dec
mov
and
mov
pop
les
adc
mov
add
dec
cmp
jmp
cltd
jle
int3
or
adc
push
mov
stc
lret
mov
pusha
adc
ljmp
mov
push
leave
pop
xor
lcall
stos
jno
mov
aad
std
mov
dec
cmp
or
in
fmuls
orb
test
mov
lret
and
push
int3
icebp
jl
inc
orb
sub
pop
lods
cmp
shll
cltd
xchg
cmp
inc
enter
mov
push
sahf
movsl
xchg
das
push
mov
inc
fidivs
sub
iret
lahf
mov
out
rcrl
sbb
mull
xor
test
stos
adc
lock
push
mov
xchg
test
pop
xchg
arpl
std
daa
add
pop
adc
jns
mov
pop
cld
jb
xchg
sub
inc
outsl
cs
mov
jo
je
fiaddl
xor
adc
sahf
lret
add
inc
inc
add
ja
icebp
bound
inc
xchg
sub
ss
cmc
mov
xchg
xor
repnz
adc
popf
dec
or
repnz
adc
and
divb
lds
rorb
out
mov
in
jno
into
pop
jb
add
test
and
test
pop
and
mov
cmpsl
jg
mov
sub
mov
lds
loopne
xchg
outsb
leave
outsb
adc
lock
dec
mov
push
pusha
test
or
in
cld
mov
sbb
repnz
push
pop
movsb
mov
mov
xor
inc
seto
or
ret
repnz
inc
sub
and
sbbb
dec
out
fcomps
inc
cmp
stc
out
bound
jae
pop
out
xchg
outsl
cmc
xchg
add
int
sbb
pop
stos
inc
jae
in
test
idivb
cmc
pop
test
jnp
jo
xor
aas
push
sub
outsl
pusha
data16
xchg
lea
push
test
cwtl
arpl
cmp
sub
xor
rorb
fs
sbb
cmp
ficoms
aas
xchg
int3
je
ja
jae
xor
adc
or
rcr
adc
dec
loopne
cmpsl
cmp
inc
aaa
outsl
cs
adc
push
jno
sarl
cwtl
jg
subl
popa
std
sbb
sub
sbb
cwtl
xchg
sub
lods
and
sub
sahf
call
cmpsl
mov
mov
fldl
insb
cs
adc
and
test
and
fldt
scas
mov
pop
inc
js
mov
ja
jbe
shlb
stos
cmp
cmpb
xorb
ja
iret
adc
inc
push
adc
sbb
aad
bound
xor
mov
or
pop
pop
stos
push
outsl
push
es
scas
outsb
cmp
pusha
mov
mov
lret
sarl
rclb
std
addr16
mov
xor
outsb
push
inc
sbbl
movsb
pop
lock
data16
outsl
je
jp
fiaddl
cld
sub
das
push
fcos
inc
mov
loop
mov
xchg
mov
push
enter
xlat
cmpsl
adc
sub
inc
jp
jmp
stos
push
push
jecxz
inc
jae
add
sti
movsb
imul
add
pop
sbb
shrb
xor
mov
xchg
pop
mov
loopne
mov
loopne
xchg
mov
add
fwait
cmp
loope
jg
sub
iret
and
push
jecxz
xchg
sub
pop
or
xor
shlb
mov
mulw
or
adc
xor
rcrb
pop
sub
lahf
push
dec
inc
dec
sahf
push
fs
call
add
loope
inc
inc
cmp
repz
shrb
dec
hlt
mov
cmpsb
push
addr16
sub
mov
dec
push
or
jle
adc
leave
jno
jo
sbb
and
pushf
inc
testb
insl
test
adc
pop
pop
xor
mov
mov
hlt
jle
movsb
std
pop
addb
inc
push
stos
or
arpl
lcall
cltd
mov
xor
pop
mov
or
test
rclb
sub
push
inc
cld
sbb
pop
mov
leave
add
add
sbb
shrb
xchg
into
jo
dec
movhps
add
sbb
shlb
lret
imul
push
mov
xchg
je
repnz
sub
jle
fldenv
add
adc
shll
test
lods
orl
aad
enter
subl
int3
std
push
imul
sbb
cmpsl
mov
call
sbb
lahf
xchg
sbb
imul
mov
jle
loope
out
mov
hlt
cmp
mov
push
lods
or
and
faddp
and
sub
imul
push
fdiv
adc
inc
or
add
push
in
lock
mov
sub
jne
xor
dec
push
out
aam
imul
int
dec
nop
es
aam
xchg
adcl
aad
stc
fistpl
mov
and
das
dec
pop
notb
jle
xorl
fs
xchg
add
sbb
mov
aas
add
fsubrs
out
js
out
add
jno
pop
loope
popa
cmp
adc
jne
dec
sub
xor
pusha
mov
fdivp
mov
jns
cmovp
cmp
stc
movsl
push
or
idivl
aad
sbb
int3
cwtl
jle
xchg
pop
jbe
stc
lea
ljmp
subl
push
xor
jb
inc
cmp
lret
icebp
pop
lea
pusha
insl
jp
cmc
out
call
aaa
aaa
aad
lret
cmp
jle
popf
iret
js
jg
das
push
or
and
sbb
inc
je
mov
pop
mov
mov
lahf
aaa
push
add
pop
sub
out
sti
fldl
inc
or
inc
js
lods
sbb
sbbl
out
rcrl
dec
mov
jge
jbe
pop
sub
out
fwait
clc
popf
jg
xor
sub
mov
or
ret
xlat
ja
test
xchg
mov
mov
jp
repz
push
cmp
movsb
mov
es
or
pop
dec
pushf
ljmp
mov
call
dec
xchg
xor
je
cmpsl
sbb
inc
mov
imulb
cmp
sub
arpl
pop
imul
jbe
call
sbb
outsb
dec
popa
xchg
adc
cld
roll
add
xor
test
repnz
adc
lods
fstps
jmp
aad
sbb
fisttpll
adc
pop
out
mov
fdivp
loopne
test
shlb
test
pop
sub
cmp
inc
or
xchg
pop
push
aad
iretw
push
push
mov
call
mov
adc
jle
cmp
add
add
popf
outsl
sub
call
sbb
mov
xlat
stos
orl
push
cli
pushf
aam
push
jg
cmpsl
cld
in
add
aas
mul
lea
sub
or
pop
aad
mull
push
dec
dec
mov
insb
mov
cmp
rorl
sbb
sti
mov
sub
jne
push
clc
and
insl
pushf
mov
mov
out
ja
mov
mov
sub
xchg
rol
jp
add
bt
dec
mov
loopne
jb
lock
xchg
and
call
outsl
add
xor
ret
stos
cmp
out
aam
jae
push
clc
sub
cmp
into
push
xchg
push
sbb
test
xchg
testl
cltd
adc
lock
mov
and
or
gs
addb
adc
push
dec
loopne
repz
mov
int3
clc
mov
and
out
aad
jnp
fstl
nop
push
flds
pop
jae
xchg
stos
mov
loopne
pop
cwtl
add
xlat
icebp
sub
ret
push
jno
mov
xor
xor
sahf
jle
mov
xchg
inc
sub
pop
repz
and
int
sbb
pop
pop
adc
xchg
dec
es
das
daa
dec
inc
sub
faddl
mov
cltd
jge
popa
jae
cmp
push
and
xchg
bound
mov
psubw
inc
cmc
add
cmc
add
ljmp
add
pushf
ja
into
push
ret
mov
jecxz
dec
loop
outsb
lods
sbb
pop
add
sti
dec
jmp
fcmovbe
mov
call
xor
cld
pop
rcll
ds
inc
or
imul
add
in
stc
sub
cmpsb
mov
sti
popa
dec
fsubrl
movb
sub
adc
ds
fdivrl
sbb
mov
adc
push
jne
in
or
shlb
inc
mov
push
andl
and
pop
negb
cmp
insb
insl
popf
mov
jo
ficomps
dec
pop
pop
cld
mov
inc
add
push
mov
push
mov
stos
xchg
mov
dec
aad
mov
insl
shll
pop
cmp
lea
and
daa
jl
loope
push
xchg
cmpsl
leave
call
push
insb
jnp
jns
or
or
dec
outsl
jno
or
xor
pop
jecxz
push
mov
push
lods
add
jle
fimuls
xor
ret
js
sbb
xchg
sub
sbb
sbbl
jae
popa
fisttps
daa
adc
push
arpl
lds
dec
leave
mov
jle
int
sub
das
in
movsl
lods
lret
mov
fiadds
adc
sbbl
scas
icebp
adc
inc
push
xchg
addl
push
xchg
std
data16
sub
sub
sbb
cli
addr16
or
fucomip
lahf
push
push
mov
sbb
aad
sub
loop
cmp
push
adc
mulb
pop
std
loope
jge
cwtl
fdivrs
adc
mov
fistpll
popa
mov
imull
hlt
insl
push
xchg
rcll
push
orl
xchg
fildll
push
lock
xlat
or
dec
xor
imul
or
les
les
jmp
inc
aas
iret
jbe
repz
aam
in
pop
loopne
ret
je
test
cmc
sub
and
test
leave
dec
cld
sub
mov
data16
adc
push
sub
jo
sub
daa
hlt
in
xchg
inc
sub
repnz
jnp
cmp
stc
mov
xchg
adc
es
test
mul
mov
call
mov
fists
sbb
sbb
xor
jg
loopne
xchg
dec
cmp
ja
lea
inc
adc
scas
aam
inc
outsb
xor
fsts
dec
in
xchg
xchg
pop
xchg
push
or
subl
movsb
and
inc
dec
stc
fiadds
mov
xchg
outsl
adc
in
mov
into
aad
add
cld
mov
roll
jo
cmpl
adc
jecxz
lods
fnstsw
negl
or
aam
inc
imulb
cmpsl
push
xchg
adc
fst
cmpsb
cmc
out
sbb
xchg
lret
sti
mov
xor
data16
push
jmp
out
ja
pushf
xor
rolb
mov
pusha
inc
std
jl
cwtl
cmp
loope
inc
inc
cwtl
pop
dec
dec
mov
xor
shl
mov
out
hlt
js
aam
insl
xlat
das
jb
adc
add
mov
inc
lods
mov
adc
jg,pn
mov
xor
mov
cli
rclb
pop
inc
test
push
movsl
bound
cs
decl
int3
jmp
xor
mov
loopne
add
push
gs
mov
aam
ret
jle
pushf
cmpsl
bound
test
inc
sbb
dec
fisttpl
jns
and
repz
push
xor
lret
and
hlt
or
mov
xlat
push
jno
sub
pop
aad
cmp
mov
pushf
mov
fnsave
and
shr
ljmp
inc
mov
and
rol
loope
sbb
aad
mov
leave
lcall
cmp
or
and
inc
jle
rcrl
sbb
rol
push
mov
xor
pop
fs
mov
and
sub
shrl
rorl
out
adc
ljmp
das
pop
fmull
cs
mov
fsubrs
and
cmp
test
push
cli
pushf
lods
rolb
cs
dec
ret
xor
cltd
arpl
scas
stos
jp
sbb
jo
cwtl
jecxz
ficomps
mov
sbb
add
mov
test
or
aad
aad
dec
dec
add
ljmp
mov
lahf
aam
pop
mov
insb
cmc
push
movsb
mov
insl
in
repnz
mov
xchg
cmpb
push
std
aaa
mov
jge
insb
pop
fs
call
rcll
pop
push
jnp
mov
mov
rcrb
cmp
adc
mov
inc
dec
fdivrl
and
jmp
call
ficoms
cli
xchg
and
pop
insb
movzbl
es
or
in
inc
mov
out
sbbb
mov
and
fildl
or
pop
xchg
rorb
jns
xorl
ret
xor
fcoml
cmp
stos
xchg
outsl
cmpsl
mov
repnz
lea
lods
and
xor
push
push
daa
fbld
roll
nop
xlat
pop
sub
aas
jp
nop
in
cmpsb
xchg
jb
subl
add
pop
xchg
xchg
pop
sbb
mov
aaa
rorb
cltd
test
jl
lock
mov
mov
push
in
push
fbld
lods
cmp
aas
inc
cli
mov
pop
cmpsl
mov
int
add
int3
hlt
inc
nop
or
mov
dec
cld
jne
jg
test
mov
add
ret
xorb
add
mov
push
cmp
sbb
sub
mov
push
xor
add
mov
rcrb
fidivl
out
insb
sti
cli
lahf
xchg
jns
popf
sbb
xchg
pop
in
lods
fsubrs
mov
pop
lret
or
xor
rol
mov
repz
out
mov
sti
push
shrl
sub
sbb
dec
jae
mov
stos
into
inc
loope
in
push
in
push
mov
lret
outsl
lds
xchg
je
adc
dec
rcl
or
push
bound
rcr
je
insl
inc
pop
ja
xchg
fisubs
cmp
loopne
pop
or
int
mov
or
call
jecxz
inc
cmp
idivl
mov
stos
sti
ljmp
dec
pop
cmp
jbe
sbb
push
push
jbe
fisttpl
jle
ja
cmc
insl
push
pop
push
mov
adc
pop
cmp
adc
iret
adc
pop
mov
fxtract
subl
scas
rorb
ja
iret
mov
or
fxch
jb
add
jbe
leave
sahf
xor
pshufw
and
addr16
xchg
jb
in
jmp
add
or
pop
add
fmull
arpl
push
lods
cmp
and
sahf
dec
lcall
mov
int
xor
xor
repnz
pop
dec
hlt
sub
hlt
jnp
mov
insb
jge
mov
repnz
sub
xchg
mov
jge
xchg
aas
mov
insb
inc
ficoms
mov
and
aas
inc
pop
push
daa
repz
into
into
out
sub
enter
dec
adc
dec
or
into
inc
xchg
mov
repz
mov
adc
adc
dec
push
push
mov
sbb
repz
cltd
es
add
dec
sarb
es
push
fstps
mov
push
pop
popa
sbb
jg
dec
insl
jns
sbb
pop
std
push
stos
add
jp
adc
decl
sub
mov
hlt
mov
fdivrl
push
jg
mov
in
mov
scas
xor
sbb
aaa
cmpsb
mov
mov
mov
xor
or
aam
dec
xor
lea
jb
jle
sub
push
mov
out
xor
idivl
loop
insb
pop
pop
inc
mov
jl,pt
sub
into
xchg
and
mov
movsl
lock
push
les
jae
xchg
out
outsb
sub
mov
out
xor
xor
jle
push
inc
fstpt
jl
std
insb
in
jns
repnz
movsl
arpl
aam
out
xchg
movsl
cmc
scas
in
shll
out
pop
aaa
call
out
jl
aam
dec
and
out
add
cmp
mulb
push
fcoms
cmpsb
or
and
rcrb
mov
cmp
xchg
arpl
mov
adc
pop
inc
mov
jl
jmp
mov
mov
mov
cmp
cmpsb
or
mov
mov
xor
xchg
in
push
lods
test
dec
clc
and
in
fs
lahf
inc
ds
sub
xchg
xchg
mov
rcll
arpl
imul
add
mov
xchg
push
psrld
sub
and
mov
je
ljmp
pusha
push
pop
lock
out
mov
mov
lock
pop
sbb
das
jg
scas
xor
dec
ds
movsl
bound
mov
mov
pop
and
ljmp
ljmp
test
or
inc
dec
mov
mov
cmp
sbb
lods
or
rcl
add
or
push
popa
xchg
jb
push
and
adc
jecxz
stos
cltd
mov
cld
shrl
jno
mov
inc
leave
cmpsl
ret
add
pop
mov
pop
pop
jnp
adc
xchg
sbb
fwait
push
shrl
jge
pop
jnp
je
mov
int3
push
pusha
mov
out
mov
push
fcmovb
pop
pushf
ret
add
mov
push
loop
aaa
test
pushf
scas
sub
dec
cmpsb
xchg
lds
add
scas
mov
mov
gs
mov
add
in
ja
or
jg
sbb
movzwl
lret
enter
psllw
lods
ss
pop
mov
out
mov
imul
push
mov
leave
sbb
inc
mov
push
jecxz
sbbl
cmp
sahf
repnz
adc
dec
sahf
rcll
loopne
in
outsl
add
jb
stos
pop
cs
xor
jne
call
sbb
lcall
jge
into
push
adc
fnsave
outsb
add
dec
popl
fwait
jo
mov
rorl
inc
pop
ljmp
roll
mov
xchg
mov
mov
xlat
xor
cmpsl
sub
out
and
xor
icebp
addr16
add
mov
adc
data16
in
lret
and
and
jmp
push
jl
mov
push
imul
xchg
mov
sbb
dec
test
cmpsb
popf
fistl
popa
mov
mov
sbb
std
or
jl
fdivrl
aaa
cltd
das
clc
repnz
push
call
sbbb
cmpsb
popa
and
or
stos
dec
outsb
cmp
and
sti
pop
xor
xlat
cs
sbb
sub
insl
sub
addr16
mov
xor
push
mov
nopl
pushf
jo
mov
pop
jo
or
dec
jg
inc
or
paddd
xchg
shl
cmp
add
xor
jp
pop
ret
adc
cwtl
pop
and
fwait
cld
and
lds
jno
in
stos
decl
imul
cwtl
les
sahf
xchg
mov
push
or
push
fcomps
xor
in
loopne
sbb
sub
es
scas
scas
pop
inc
xchg
push
sbb
xor
mov
hlt
nop
scas
nop
sub
cmp
push
pop
pop
xlat
pop
imul
jle
scas
daa
sbbl
loope
inc
mov
add
sub
inc
nop
hlt
shll
and
push
filds
fldenv
inc
sub
xor
inc
xchg
inc
loope
jmp
sub
sub
movsl
mov
int
lret
pop
sbb
js
hlt
mov
adc
add
sarb
fs
mov
shll
or
das
inc
mov
call
inc
push
sbb
arpl
adc
and
fistpl
dec
nop
jle
aas
push
sbb
enter
xchg
mov
rep
adc
jns
nop
cmp
lret
in
xchg
inc
pop
dec
sbb
jge
mov
mov
cltd
sub
mov
aaa
es
js
mov
cmpsl
movsb
sub
es
ja
filds
std
pop
jno
loop
lods
dec
ljmp
iret
clc
adcb
das
clc
lret
inc
ret
xor
add
cmpb
stos
dec
ss
iret
insl
dec
fucom
pop
lock
mov
add
scas
xlat
insl
lds
bound
adc
mov
and
jb
sub
mov
inc
add
cmc
jbe
lods
mov
add
icebp
xchg
outsl
jmp
pop
mov
hlt
jmp
outsl
fimuls
inc
push
sub
pusha
in
mov
push
inc
push
es
mov
jne
or
or
xchg
or
pop
xchg
cli
pusha
inc
in
mov
sbb
aas
ficoml
cltd
cmp
je
je
mov
and
mov
xchg
xchg
add
sub
sub
into
push
outsb
inc
lcall
push
ror
mov
jb
and
loop
rcrb
pushf
dec
pop
loopne
andb
std
and
mov
adc
mov
xor
daa
pop
stos
mov
in
hlt
es
pushf
xor
ja
cmc
clc
xchg
push
jecxz
sub
aaa
test
push
sahf
add
cmp
adc
sbb
stc
scas
test
xchg
outsb
shll
push
mov
xor
adc
and
popf
cs
stos
dec
mov
dec
push
sbb
mov
loope
cwtl
mov
mov
loop
mov
icebp
mov
lods
aas
push
aad
int3
jae
ljmp
fistpl
popa
mov
test
sarl
jbe
scas
jp
popf
int3
subb
lret
sub
jo
mov
cmp
dec
fs
subl
jge
adcb
lds
push
fcompl
in
in
dec
sbb
xor
pop
push
sahf
xchg
rorl
test
ret
mov
popf
jl
push
adc
pop
mov
sar
push
jo
cwtl
xor
das
scas
daa
mov
xor
fldenv
dec
lea
je
push
out
movsl
les
lods
dec
and
sbb
push
es
pop
xor
and
stos
dec
outsb
mov
rolb
mov
xor
mov
cmpsb
sbb
push
push
jo
jbe
pop
adcb
loop
dec
xor
insl
sbb
out
daa
rclb
out
ror
sbb
subl
pop
mov
aaa
mov
stos
loope
fimuls
dec
inc
mov
ret
dec
cmpsb
lods
movsl
aad
je
cld
and
lahf
lahf
lcall
sub
mov
inc
pmaxsw
call
movsl
test
mov
lods
rcl
movsl
scas
xor
dec
sub
xor
in
mov
lret
data16
or
fs
sbb
add
or
sub
jbe
mov
inc
je
xor
lret
mov
cwtl
cmpl
ss
jp
test
addr16
sub
adc
int3
jle
xor
cli
and
push
pop
push
fbstp
test
xchg
enter
orl
jno
and
jmp
jl
jg
pop
jb
pop
push
mov
pop
idiv
pop
cmpsb
mov
into
cmpsb
mov
and
lret
cmp
adc
jnp
adc
repnz
inc
pushf
dec
push
sub
push
gs
or
mov
or
mov
inc
leave
or
rorb
inc
dec
inc
inc
cli
shrl
mov
sahf
push
push
cmc
inc
and
std
mov
xchg
or
pusha
xor
scas
and
mov
cwtl
fisttpl
jno
xchg
jg
lret
or
daa
mov
inc
mov
shrl
add
icebp
mov
fbld
lahf
int
and
lret
or
cs
or
loope
adc
rcrb
inc
jae
cmp
out
adc
and
addr16
outsl
dec
sahf
in
push
sub
leave
cmc
daa
jne
lret
sub
cmpsl
dec
fsubrl
sahf
xchg
cmp
insb
test
leave
lods
push
lock
or
fcompl
push
shlb
pop
mov
xor
xchg
or
sahf
adc
scas
imul
leave
fisttpl
or
cmp
inc
inc
fadd
fisubs
jbe
or
aad
dec
or
xchg
adc
dec
push
mov
dec
or
divps
sbb
mov
mov
sbb
add
out
jmp
jge
sbb
dec
aas
mov
inc
push
jge
dec
stos
cmpsl
scas
imul
fisubrl
addl
leave
or
jmp
dec
xchg
add
data16
sbb
pop
loopne
cmpsb
jmp
sub
fcoml
add
dec
inc
pop
addr16
pop
pop
stos
sub
inc
xchg
out
lea
jb
test
sub
cs
sub
lret
ja
sbb
xchg
sarl
adc
nopl
add
pusha
adc
out
mov
inc
jp
cmp
movsb
jge
ret
fnstcw
jmp
xchg
pop
push
jge
cmc
xchg
cmp
cmp
xor
sub
pop
add
push
arpl
lahf
ja
lods
mov
push
xor
xchg
fucompp
js
addl
and
lret
mov
shrl
leave
push
test
or
fistpll
nop
or
popf
js
call
imulb
push
mov
or
out
insb
scas
cmpsb
loopne
popl
lods
jae
xchg
xor
inc
xor
inc
pushf
nop
mov
fstl
sbb
in
out
sub
addr16
lcall
mov
ljmp
ret
push
or
xlat
mov
stc
pop
xchg
das
out
sbbl
cmp
xor
in
xor
fidivl
xchg
xchg
in
test
adc
lcall
lds
in
push
sbb
or
xor
cmpsl
notb
jne
jb
cli
addr16
or
jne
or
jb
ret
or
repz
sub
jb
xor
mov
jle
cmp
ljmp
adc
xor
and
pop
or
or
loope
imul
in
repnz
xor
movsl
sub
and
xchg
xor
in
mov
repnz
cli
jbe
lcall
arpl
push
and
popa
ss
sbb
imul
pop
sbb
mov
stos
in
xchg
pop
jmp
push
mov
scas
mov
fwait
add
xlat
ret
cmp
mov
cmp
cmp
scas
jl
and
cs
inc
mov
add
and
out
mov
rdpmc
bswap
or
sbb
xchg
int3
and
popf
sub
ret
outsb
sbb
sti
iret
lahf
lods
cmp
fs
dec
fs
pop
rolb
cld
gs
xchg
movsb
xchg
add
testl
call
loop
fisubs
fdiv
sub
test
repz
cs
adc
insb
lea
push
mov
lds
andb
insl
and
inc
or
cbtw
les
xor
push
and
or
jno
imulb
xchg
movsl
mov
aad
xor
lods
enter
mov
mov
sbb
stos
xor
fcomip
iret
or
add
cmc
leave
in
sahf
pop
enter
mov
sub
aam
sbb
xchg
out
in
xchg
mov
clc
pop
push
add
enter
ja
add
xchg
jl
repnz
data16
dec
push
and
shll
jbe
push
xchg
scas
lea
pushf
push
add
ret
mov
push
sub
mov
data16
push
sbb
push
bound
sahf
pop
dec
push
lds
lock
xchg
stc
mov
mov
pop
daa
mov
and
repnz
xchg
jbe
push
lret
and
dec
daa
insl
mov
cmp
das
lds
xadd
movsl
cli
mov
pusha
xor
cmp
xchg
repz
mov
jmp
ret
in
mov
in
mov
or
sbb
fwait
shl
fisubrl
pop
mov
jle
fs
stos
mov
incb
add
push
mov
cltd
dec
fwait
je
inc
jne
pop
sbb
lock
sub
mov
xor
push
pop
fimull
add
xchg
and
mov
lcall
push
jne
insl
rol
call
mov
call
mov
lahf
in
movsb
mov
loope
loope
mov
mov
jmp
ret
add
div
popa
xchg
psllw
xor
mov
test
jmp
xor
hlt
lret
add
cmp
pop
int3
lcall
bound
xchg
fs
jae
mov
mov
add
insb
dec
adc
cmp
out
cmp
in
and
push
jo
lock
shr
push
dec
es
add
std
mov
inc
and
outsb
inc
mov
cmp
rcrl
fsub
sbb
inc
xor
mov
adc
imul
dec
leave
mov
movsl
or
lea
mov
cli
in
inc
cli
mov
aas
adc
mov
pop
cld
push
xchg
pop
in
aas
push
push
xor
gs
push
sub
call
jp
xchg
mov
mov
scas
imul
les
fidivl
jb
jle
xor
int
adc
fistpll
push
out
jmp
xchg
out
mov
lret
rcrb
jg
add
stos
in
insl
and
and
mov
fwait
and
push
roll
jp
inc
adc
shrl
daa
xchg
es
inc
rcl
outsl
icebp
inc
and
mov
mov
mov
push
xorb
aad
mov
jecxz
cmp
imul
clc
arpl
mov
and
rcrb
lcallw
pop
xor
jnp
jns
ja
cwtl
outsl
pop
pop
test
out
adc
and
je
cmpb
ret
int3
clc
or
ljmp
push
or
out
data16
fbld
push
sub
xor
repnz
cld
mov
lods
cltd
stos
dec
scas
repnz
out
sti
or
test
scas
js
jno
shrl
popa
dec
les
sbb
mov
xor
jo
stos
and
mov
xchg
cmpsb
lret
xchg
shll
leave
inc
nop
jl
repnz
jb
addb
add
in
lds
idivb
jbe
jae
mov
imul
jecxz
jecxz
and
xchg
jp
push
mov
insl
enter
lock
push
mov
pop
in
push
or
mov
imul
adc
test
inc
cmpsl
pop
mov
sbb
in
ret
les
fld
es
adc
sbb
fwait
add
bound
jle
fdivs
lret
add
jbe
iret
jge
bound
bound
int3
ret
pop
stos
inc
sbb
loopne
fbld
insl
test
xchg
rorl
add
std
cld
xorl
inc
scas
adc
in
jo
popf
mov
ljmp
ret
inc
mov
dec
orb
iret
push
and
ret
xlat
andnps
jns
inc
mov
dec
xor
mulb
xchg
mov
xor
fs
cmp
xor
inc
arpl
mov
push
xchg
insl
data16
lahf
jl
mov
repz
popl
fsubrl
mov
inc
ds
lods
subb
imulb
dec
xor
bound
out
mov
scas
add
int3
stc
adc
adc
gs
cmpsl
lahf
aas
xorl
lods
mov
leave
xchg
mul
sub
ret
adc
jns
cs
jae
pop
js
mov
es
pop
cmp
sahf
decb
and
test
data16
in
push
pop
fs
adc
or
shrb
enter
mov
daa
jmp
push
movsb
inc
dec
mov
mov
xchg
mov
mov
or
cwtl
ljmp
lods
dec
and
xor
sbb
xor
jb
dec
push
aad
pop
test
mov
flds
add
outsb
adc
mov
mov
mov
cmp
mov
xlat
or
repz
pop
aad
mov
loop
mov
lock
fildl
fcomps
dec
enter
sar
sub
pop
pop
xchg
cmp
stos
xor
add
sbb
ds
push
mov
push
jae
int3
mov
and
scas
cmp
mov
rorl
das
test
cmp
pop
mov
insb
arpl
jb
jmp
shlb
mov
adc
add
imul
push
gs
push
nop
loopne
mov
mov
lea
mov
stos
sti
dec
and
adcl
mov
mov
fstpt
and
loopne
outsb
decb
rcll
out
push
or
push
dec
movsl
nop
test
mov
adc
repnz
aas
sub
pop
icebp
ficoml
js
mov
ljmp
lods
xor
jno
sahf
aad
cmpsb
daa
fistl
aad
or
call
sub
fwait
lahf
dec
cltd
sub
jnp
iret
mov
enter
and
shlb
mov
sbb
xorl
inc
les
out
shll
loope
ja
push
mov
mov
mov
inc
fldt
cmp
out
loop
xchg
mov
inc
repz
into
add
xchg
push
rcrb
xor
iret
inc
lret
sub
test
inc
jl
in
pop
or
jg
popa
pop
in
sbb
adc
xlat
lods
mov
pusha
mov
add
lods
mull
inc
ja
sub
push
add
aam
inc
stos
mov
mov
jp
fdivrp
sbb
in
icebp
ljmp
gs
push
mov
and
lea
push
inc
dec
xchg
mov
jae
popf
pop
ljmp
bound
rcrb
jl
adcl
inc
andl
and
lea
pop
push
dec
push
mov
cmpsb
jb
push
pop
cltd
movsb
pop
push
test
adc
mov
outsb
lahf
call
adc
out
xorb
loop
and
cmpsl
aam
ret
mov
xchg
test
mov
jmp
movsl
testl
imul
filds
sub
daa
lock
ja
jl
push
pop
ja
movsl
jp
mov
mov
ja
mov
pusha
sub
xor
sub
adc
shlb
ret
mov
rcr
shll
divl
inc
mov
mov
cmp
push
call
cmpsb
push
xchg
cltd
cli
in
negl
inc
xchg
js
sub
pop
fchs
push
test
push
ds
mov
mov
mov
test
sub
push
mov
call
adc
insb
cli
loopne
and
imul
jno
adc
and
loop
mov
or
stc
movsl
repnz
inc
fnsave
mov
scas
cltd
pop
jae
repnz
sbb
mov
adc
lcall
or
mov
ficoml
daa
xchg
scas
into
nop
sub
xchg
les
xchg
outsl
fstl
roll
pushf
xchg
cmp
jo
xor
cmp
adc
jns
data16
mov
ret
dec
roll
mov
mov
subb
jnp
add
sbbb
in
mov
add
out
mov
rcrb
xchg
and
sub
mulb
mov
loop
pop
aam
pop
jo
mov
int
sbb
js
dec
scas
dec
xor
sbb
mov
bound
mov
push
or
push
fldcw
or
ja
mov
inc
cld
stos
in
in
cmp
loop
inc
add
imul
cltd
pop
cmp
xchg
popa
mov
jo
subb
or
pop
les
pusha
inc
addl
xchg
into
or
mov
dec
lcall
add
pop
and
dec
testb
mov
xorl
fdivl
pop
out
and
jne
sub
add
in
push
std
jns
sub
and
jmp
jge
inc
dec
test
xor
mov
imul
sbbl
mov
ljmp
mov
mov
adc
out
mov
cltd
ljmp
or
out
dec
push
pop
sub
adc
mov
push
mov
out
ds
mov
mov
pop
mov
dec
cwtl
dec
and
push
push
adc
sub
sti
stc
ret
pop
xchg
sub
repz
sub
lods
mov
mov
std
sbb
xchg
xchg
rcrl
stos
movsl
sub
dec
scas
fcoms
test
push
cmp
push
adcb
scas
and
jbe
inc
ret
lcall
cmp
ret
sbb
or
pop
xor
or
mov
dec
adc
push
movsl
dec
cld
adc
data16
shlb
adc
sti
jge
cmp
inc
mov
xlat
enter
cmp
loop
cmp
ret
ret
stos
ds
ja
pmaddwd
movsl
insb
xor
add
in
or
jo
adc
or
lods
cmpb
sbb
jmp
shll
add
xchg
dec
inc
insb
add
push
sbb
jecxz
hlt
movsl
jns
sub
test
out
std
mov
push
in
imul
jecxz
mov
mov
xchg
mov
mov
je
andl
popf
lret
stos
test
dec
rcll
jl
pop
sbb
mov
adc
xchg
icebp
arpl
xchg
or
jo
push
leave
inc
cwtl
iret
pop
xor
inc
int3
shlb
mov
ret
sub
mov
popa
scas
outsb
aaa
add
mov
pop
dec
xchg
out
xchg
or
or
int3
pusha
and
pop
inc
filds
cli
xchg
dec
loop
iret
or
cmpsl
dec
test
fldt
mov
mov
addr16
sbb
add
cs
loope
std
mov
lret
lcall
sarl
mov
outsl
mov
sub
out
sub
jno
add
negl
pop
pop
scas
mov
pop
ss
inc
enter
jmp
cmp
insb
dec
push
ret
mov
mov
mov
and
xor
nop
repnz
bound
pop
enter
insl
xor
or
add
pop
pop
push
inc
lret
cmpsl
xor
adc
cmp
inc
cmpsb
xor
enter
jb
cmp
jnp
xchg
es
test
fsub
insl
pop
popl
mov
loope
in
xchg
mov
mov
mov
cld
add
pop
enter
xchg
nop
insl
lahf
sbb
call
sub
arpl
mov
sub
testb
push
dec
adc
cmp
std
pop
call
or
xor
dec
pop
xlat
dec
mov
js
lods
add
rorl
xchg
mov
cwtl
push
mov
les
cmp
in
jo
mov
negb
xchg
imul
insl
mov
leave
adc
jnp
les
sbb
icebp
sti
pop
sahf
insl
mov
pop
ret
fwait
inc
lret
jo
mov
xchg
jno
push
mov
ret
jge
jbe
imul
adc
pop
push
into
xchg
push
cltd
dec
call
jne
or
push
scas
and
xchg
test
imul
in
jecxz
or
lock
push
das
push
lock
gs
mov
sbb
je
in
jb
and
call
adc
adc
add
add
or
sub
mov
movsb
in
jno
xchg
xchg
sbb
add
scas
je
push
adc
cmpsl
cmp
inc
jmp
or
inc
cmp
dec
loop
enter
orb
sbb
jnp
test
out
inc
or
mov
cmp
and
test
xor
out
shrb
and
movsl
aas
lcall
sbbl
fcmovnb
mov
inc
dec
cmpsb
loopne
mov
sbb
in
int3
or
bound
jbe
subb
mov
jo
aam
xchg
cld
adc
ja
pop
pop
idiv
stos
mov
aam
cmc
dec
adc
cltd
mov
lds
xorl
sbb
xchg
in
pop
or
dec
lahf
popa
lock
jp
bnd
call
ret
mov
scas
push
sbb
fmul
lods
pop
mov
cs
scas
jns
idiv
nop
insb
lds
in
jo
push
mov
inc
adc
push
sub
add
pop
clc
pop
roll
call
jae
jb
into
jb
insb
pop
dec
inc
adc
lahf
dec
jne
pop
dec
mov
aad
and
xchg
sub
cmp
negb
ja
mov
cmpsl
jl
push
sbb
shrb
or
jo
daa
out
cmp
adc
lock
mov
popa
push
xchg
cltd
mov
cmp
jp
out
jns
loop
shll
pop
cwtl
lock
push
xor
push
xor
jmp
jecxz
mov
inc
add
arpl
or
add
pop
jl
mov
push
stos
nop
mov
mov
xor
paddd
cmc
fcompl
shrl
mov
mov
add
jb
stos
sbb
pop
cmpsl
into
scas
fs
mov
xlat
push
jp
xchg
adc
xor
sbb
lret
inc
mov
rol
cmc
mov
xor
pop
aaa
daa
orl
fistpl
lcall
add
mov
push
pop
stc
dec
nop
test
jp
sbb
movsb
lods
cld
iret
popf
or
sti
dec
dec
into
push
mov
mov
xchg
addr16
mov
das
pop
xor
mov
adc
adc
jmp
mov
lock
or
sti
das
pop
dec
jno
adc
push
xchg
mov
in
xor
pop
adc
jge
add
xchg
pop
inc
mov
int3
xchg
pop
testl
std
movsl
out
pop
pop
es
lock
xchg
pop
sub
ja
inc
leave
in
mov
and
insl
push
sbb
dec
mov
mov
popf
inc
push
sti
mov
jno
jno
rclb
adc
fwait
cmpsb
push
mov
sbb
dec
out
stc
int3
push
inc
inc
pop
sub
lret
loopne
and
jne
inc
jecxz
loope
dec
or
loop,pt
mov
sti
daa
xor
jne
mov
dec
mov
xor
ret
add
popa
les
in
cmove
rorb
ret
push
outsb
ja
or
pop
ds
cs
aas
fisttpll
ljmp
or
mov
jbe
mov
rcl
jns
inc
push
mov
cwtl
stc
rcrl
stos
pop
or
int3
movl
adc
data16
lods
fildl
int3
jbe
adc
dec
je
pop
lcall
aad
mov
mov
add
pop
mov
pop
notl
fistps
gs
shll
push
clc
in
mov
pop
adc
cli
aaa
dec
adc
inc
or
pop
xchg
std
std
jnp
sahf
fistpl
jae
leave
ljmp
and
xchg
mov
and
and
push
sbb
lea
mov
inc
out
push
sub
lock
fwait
mov
cmpsl
leave
mov
sub
cmpl
push
inc
cmp
inc
outsb
adc
shrl
jle
cmc
fs
sbb
inc
lcall
pushf
push
push
scas
push
out
gs
adc
loope
dec
add
in
sbb
push
pop
lds
mov
cwtl
adc
and
fimuls
jecxz
les
jge
cwtl
enter
fsubrl
add
test
sbb
test
sbb
imul
fsubrl
sub
mov
sbb
test
cmp
in
mov
cmp
aaa
sbb
sar
mov
js
cmp
push
xor
push
inc
insb
dec
popf
out
cltd
cltd
sti
sub
pop
jnp
xchg
popa
mov
in
xchg
in
hlt
adc
dec
and
and
insb
movsbl
sub
js
mov
mov
pushf
cmp
sbb
popf
add
sub
dec
int
je
rolb
jp
dec
cmp
sti
add
out
push
pop
jo
inc
addr16
xor
inc
loop
add
xor
aaa
lahf
outsl
pop
push
pop
push
cltd
jp
inc
jae
lret
cltd
xchg
pushf
or
lahf
fsubl
lahf
outsb
test
loopne
lcall
adc
xchg
add
jge
js
inc
jns
and
shlb
mov
pusha
pusha
notl
pop
pop
pop
data16
or
iret
jmp
ljmp
and
fistl
push
add
jl
cmpb
fwait
in
dec
or
xchg
out
cmc
xchg
or
jne
and
mov
movl
ljmp
int3
pop
adc
lds
mov
fsubl
cmp
fsub
hlt
push
mov
xor
mov
adc
int3
lock
xor
int3
lret
aam
mov
jns
mov
ret
add
ret
dec
jge
jg
dec
lahf
cmc
bswap
test
sahf
int3
jl
mov
lahf
ja
add
xor
mov
cmp
out
gs
push
pop
test
test
and
dec
sub
dec
mov
push
popa
fnstcw
mov
cmp
mov
push
cmp
das
inc
lock
push
mov
jp
mov
fistpll
jp
jb
leave
rcrb
pop
pusha
dec
xchg
pop
add
sub
and
pop
stc
ja
cmp
mov
mov
clc
ljmp
mov
fimull
cmp
sbb
inc
fdivl
loop
lcall
add
mov
pop
xchg
arpl
jne
nop
inc
mov
out
lock
mov
movsb
and
mov
lods
decl
mov
das
repnz
fstl
int3
sub
mov
pop
sbb
inc
mov
pop
pop
movsl
cmp
ljmp
call
or
push
addr16
cmp
push
pusha
xorb
push
adcb
jl
faddl
jns
pop
or
jp
adc
fstl
cwtl
insl
mov
mov
inc
mov
adc
add
add
xchg
shlb
pop
cmp
mov
ret
mov
xor
adc
xchg
loop
sbb
mov
jno
js
sbb
and
xchg
mov
push
mov
sti
inc
outsl
arpl
iret
andl
js
push
enter
aam
push
outsb
and
daa
xchg
pushf
inc
pusha
mov
mov
xor
adc
loope
mov
loopne
sti
jb
std
cmp
and
cltd
sub
hlt
push
push
lock
test
outsl
pop
subb
loop
cltd
pop
test
sub
lea
fwait
xchg
repz
pop
jb
shl
test
xor
out
inc
mov
mov
cltd
push
push
jo
fiadds
xor
scas
iret
jp
test
pop
outsb
jp
int3
mov
jnp,pt
sbb
iret
or
pcmpeqd
lahf
aas
mov
push
icebp
mov
mov
push
adc
xlat
std
mov
mov
sbb
dec
outsl
push
or
dec
push
cmpsb
cmpsb
mov
jle
sbb
outsb
out
jp
ss
inc
bnd
dec
gs
cwtl
repz
or
loopne
aam
pop
subb
cmp
pop
cs
mov
inc
mov
jb
xor
inc
push
mov
out
scas
push
add
pop
ja
movsl
daa
lock
jns
neg
int
sahf
mov
int3
pop
mov
outsb
jle
add
es
lahf
or
popf
lahf
lret
aad
divb
icebp
adc
test
fstpl
sbb
aam
inc
adc
or
ret
aad
imull
bnd
pop
jbe
outsb
cmpsl
add
jl
cmp
or
pushf
daa
mov
test
dec
dec
test
mov
sub
test
sti
mov
xlat
sbb
lcall
pop
mov
add
aas
cmp
fmul
xor
dec
lock
shr
leave
pop
imul
mov
push
repnz
mov
jecxz
push
push
or
cmp
cli
fwait
pop
cmc
add
enter
jae
repz
xchg
popa
xor
push
sbb
cmp
out
daa
js
out
mov
dec
pop
popa
dec
hlt
mov
mov
sbb
pop
adc
add
test
or
dec
add
stc
mov
jno
inc
sti
fldt
sbb
jg
outsl
dec
loopne
adc
xor
mov
xor
jb
pop
mov
hlt
arpl
adc
mov
jne
mov
dec
adc
push
mov
hlt
test
jmp
loope
inc
dec
mov
jl
xor
sti
lahf
mov
popa
inc
and
pop
mov
xchg
inc
cmp
mov
jmp
mov
xlat
les
imul
sbb
inc
jle
lds
mov
xor
fwait
lods
or
add
mov
aad
pop
inc
imul
mov
add
inc
or
ficoms
ret
lret
xchg
jno
push
mov
or
mov
mov
test
push
inc
mov
push
rclb
imul
lahf
out
cmp
jle
dec
add
out
mov
mov
and
fsubrs
sbb
ja
jp
jmp
mov
push
leave
push
pop
mov
cmpsl
sub
arpl
sarl
test
pop
insl
mov
mov
je
in
dec
inc
int
movsl
aad
das
in
outsl
imul
loop
jle
enter
out
jae
jecxz
sub
xchg
dec
inc
out
xchg
ss
cmp
push
hlt
lcall
and
mov
test
mov
or
or
fildl
cmp
lods
pop
jne
sbb
in
std
mov
popa
test
std
int
aad
mov
movl
rcll
xor
fidivs
inc
pop
pop
adc
add
lods
insb
xlat
push
mov
ficomps
test
popa
mov
pop
push
sub
addr16
js
or
and
outsb
jp
lods
sbb
cli
orl
pop
nop
push
jmp
cmp
and
mov
movsb
xchg
hlt
lret
fsubr
jecxz
adc
int
pop
mov
adc
or
push
and
repnz
sbb
je
add
sub
pop
pusha
in
ja
cmc
lods
adc
push
add
cmp
sahf
or
dec
bnd
xor
sbbl
push
pusha
cvtps2pd
adc
cs
in
xchg
stos
mov
sbb
pop
dec
cmp
or
add
xor
or
adc
ja
in
ficoms
stos
push
xchg
cwtl
out
mov
out
ljmp
mull
gs
dec
loope
mov
push
and
mov
insb
repz
mov
adc
pop
jnp
iret
add
adc
movsl
dec
jge
mov
idiv
mov
push
jbe
dec
mov
or
lock
mov
fisubs
xlat
int3
add
es
cmp
dec
jle
inc
push
popf
sti
jo
xchg
imul
inc
jne
popa
enter
sahf
xchg
and
movsl
xlat
les
pop
inc
lcall
and
jecxz
addl
pop
adc
lahf
leave
jmp
leave
and
ss
cmp
mov
dec
cs
test
xchg
outsl
mov
cmp
pop
dec
mov
call
das
sub
mov
stos
fs
negl
lret
fisubs
out
inc
pop
jmp
test
and
push
mov
pop
loope
cwtl
sub
xor
lret
insb
in
lahf
push
fiaddl
sti
xor
popf
lret
cwtl
sub
in
mov
sbbl
movsb
push
mov
aaa
imul
jg
mov
rcrb
nop
cmc
push
xor
jno
push
pop
jns
ret
inc
xor
push
pop
ror
push
int3
stos
orb
mov
ss
stos
dec
xchg
bound
lods
fsub
popa
push
mov
out
in
mov
jmp
mov
out
and
sbbl
jns
test
push
sbb
nop
push
test
sahf
or
pop
mov
push
mov
mov
mov
leave
xchg
jae
data16
pop
in
js
add
xchg
xchg
lods
jl
xchg
divl
xchg
and
cmp
fldcw
inc
push
test
cs
adcl
pop
bound
icebp
xchg
push
loop
scas
inc
cltd
pop
aaa
in
dec
push
mov
mov
mov
popa
stc
cltd
jno
pop
mov
inc
sbb
mov
stc
pop
push
lods
cmp
sub
jnp
inc
or
and
sbb
sbb
push
roll
arpl
lds
cmp
loopne
cwtl
negl
scas
incb
dec
add
add
cmp
push
mov
rcr
sbb
popf
cmp
sbb
or
mov
sbb
bound
in
cli
cmp
add
into
mov
clc
iret
and
add
rcrb
mov
aaa
pop
jl
jecxz
lcall
shr
cs
hlt
inc
aam
rcrb
ljmp
xchg
je
popa
sbbl
movsb
xor
int3
pop
xchg
std
repz
pop
inc
test
pop
sbb
fs
cmp
fbld
xchg
cli
inc
decb
ds
add
jbe
mov
xchg
jecxz
test
adc
or
test
jo
jmp
lret
or
into
ds
sbb
iret
lret
mov
fldenv
mov
xchg
jnp
outsb
mov
adc
inc
sub
fistpll
cmp
and
adc
add
xchg
mov
jl
dec
dec
int3
jmp
inc
lock
fcmovb
or
aad
push
call
lods
out
cmpb
movsb
repnz
push
leave
mov
jecxz
int
add
mov
loopne
push
cwtl
xchg
mov
mov
lcall
decl
mov
outsl
jae
mov
dec
mov
shrb
test
sbb
mov
mov
aaa
fdivs
sbb
xchg
out
xor
dec
stos
xchg
pop
aad
mov
mov
adc
mov
cwtl
orl
mov
jg
push
addl
push
jmp
inc
dec
mov
jge
push
mov
adc
push
test
adc
jmp
jmp
movsb
mov
sahf
insb
mov
aaa
push
lret
test
cltd
ds
xchg
sbb
inc
bound
repz
loope
fcmovnb
ss
lret
add
pop
int
rolb
dec
daa
fmull
sub
loope
rorb
test
add
in
iret
mov
pop
inc
cmp
das
jo
nop
fcmovbe
adc
sbb
in
push
inc
fwait
mul
cmp
push
cmpsb
mov
add
cmpsb
push
scas
pop
jae
jl
imul
ja
cmpsb
pop
cmp
inc
push
ja
add
ret
cmp
cli
cld
cmp
stos
pop
lods
adc
lahf
push
xor
cwtl
mov
lods
cmp
out
sbbl
jg
arpl
cmp
mov
and
add
in
xchg
adc
push
jne
hlt
mov
loop
pop
ljmp
xchg
xchg
adc
test
and
mov
fnstsw
stos
lret
lret
jb
dec
out
std
mov
mov
jbe
cltd
dec
sti
clc
lahf
ret
pusha
xchg
push
xchg
push
test
fdivs
cltd
test
hlt
test
sub
add
xchg
pushl
rcll
out
imul
stc
lcall
sarb
jmp
notb
push
sbb
mov
sbb
xor
out
push
stos
rcl
rcrl
xchg
xor
sub
inc
lds
cmp
inc
xchg
lea
testb
sbb
mov
or
enter
adc
movsl
lock
bound
xor
xlat
push
or
lds
sub
stos
mov
or
lods
rclb
jnp
xor
in
mov
sbb
popa
or
loopne
mov
xchg
mov
dec
mov
jmp
rcrl
test
fists
add
andl
in
nop
fimull
sbb
push
scas
in
fs
mov
call
dec
int3
push
cli
shlb
aas
push
fs
jno
dec
fcoml
inc
pop
xor
daa
add
sarl
mov
mov
xchg
push
pop
pusha
mov
sub
cmpb
push
xchg
shl
or
out
in
cltd
lock
lock
mov
adc
stos
imul
fnstsw
repz
xor
inc
lea
inc
repnz
and
cmp
pushf
jmp
and
std
xor
mov
cmpl
mov
jle
imull
cli
outsl
cmp
jl
shrl
enter
andl
xchg
xchg
mov
std
jns
xor
pop
outsb
push
in
sahf
xor
test
xchg
inc
mov
or
shlb
pop
popf
imul
int
mov
and
push
insb
mov
aam
ficoms
mov
ds
push
in
mov
pop
cmpsb
sub
gs
cmpl
xchg
mov
jecxz
test
mov
inc
xor
cmp
rcrl
pop
dec
loopne
rclb
or
repz
jbe
clc
sti
jno
stc
cmp
ss
lahf
leave
call
push
iret
out
imul
lcall
in
outsb
adcb
jge
sbb
scas
push
loope
push
loope
mov
decl
mov
inc
or
inc
mov
dec
lret
mov
xorb
lahf
outsb
cltd
add
fsts
jp
lds
jg
push
sbb
popa
iret
inc
in
outsb
dec
mov
test
imul
inc
lods
test
lock
mov
inc
in
dec
std
ja
adc
xchg
or
push
push
jns
adc
test
fsubrp
repz
fbld
mov
mov
sub
fwait
mov
sub
icebp
out
jns
and
sbb
adc
jecxz
idiv
inc
sub
or
leave
sbb
and
adc
push
jl
ror
push
adc
pop
or
jecxz
shll
jne
pushf
and
adc
popl
jae
sbb
jns
cmpsb
ljmp
push
hlt
sub
dec
dec
scas
sbb
sbb
mov
mov
int
or
jo
rolb
enter
push
cmp
jmp
add
dec
popf
popf
scas
push
adc
mov
pop
aaa
jmp
insb
mov
mov
inc
add
lea
fbld
xchg
lcall
iret
xchg
lods
mov
push
out
shll
aam
inc
fidivs
pushf
pop
add
mov
sub
inc
pop
mov
pop
jg
add
ja
push
xacquire
push
pop
push
jns
in
mov
std
and
out
adc
movsl
jns
sbb
test
clc
pusha
lret
stc
dec
mov
adc
lock
rorl
sub
imul
jmp
cmpb
dec
js
cmp
flds
fsts
adc
inc
outsb
pop
hlt
loope
lods
popf
jno
xor
xorl
xor
lods
dec
inc
fdivp
pushf
pop
fs
loope
fcompl
sar
mov
test
mov
insb
mov
divb
fdivl
cmp
std
stc
push
adc
xor
stos
lds
cmp
movsl
fadd
test
shrl
test
sbb
pop
rcrl
push
ss
mov
clc
adc
jg
jbe
in
loopne
aam
dec
and
push
push
or
ret
movsl
and
inc
pop
sub
mov
push
mov
adc
jge
scas
dec
sbb
mov
xor
jmp
stc
mov
dec
xlat
nop
sarb
stos
out
out
push
cmpsb
cmpsl
shr
shlb
imul
call
fdivr
or
or
outsl
xchg
leave
adc
out
lahf
mov
xchg
xchg
cmpsl
out
popa
inc
repnz
mov
sub
adc
and
std
arpl
and
mov
addr16
add
jecxz
sbb
das
aam
in
nop
sub
mov
xchg
or
mov
imul
fs
stc
imul
xchg
and
and
sbb
cli
ret
jb
jae
xlat
adc
jecxz
les
push
stc
cmp
repnz
ret
call
xor
cli
mov
dec
dec
mov
sub
lea
xor
mov
mov
ja
sub
push
ljmp
cs
mov
add
pop
sub
cmp
clc
in
mov
std
lods
jns
sbb
mov
stos
fisubs
xchg
ljmp
loope
lret
popa
pop
push
xchg
insb
push
mov
pop
lods
adc
repz
adc
pcmpeqw
nop
mov
push
scas
adc
cmpsl
stos
in
inc
mov
les
pusha
push
mov
nop
and
jno,pt
js
inc
pop
lods
mov
inc
add
imul
pop
clc
push
jmp
ss
and
in
adc
out
test
pop
pop
mov
mov
jne
out
inc
dec
add
sbb
movsl
lods
cmpsl
jecxz
aam
sub
mov
or
fwait
inc
int
data16
cli
js
sbb
jne
test
out
and
push
popa
loope
and
rcr
xchg
xchg
push
mov
int
sbb
mov
pusha
mov
test
push
call
adc
lods
xor
add
and
mov
bound
inc
jl
push
inc
je
add
inc
movsl
movsl
lods
mov
or
sti
mov
xor
push
jge
sub
add
test
push
pop
xor
pop
stc
idivl
out
jle
jo
jl
out
inc
add
xchg
push
push
enter
xchg
xor
repz
and
push
addl
ficompl
mov
loopne
push
decb
push
icebp
push
mov
hlt
and
pop
aad
mov
ljmp
lret
push
add
shlb
xor
xor
dec
adc
cltd
ficompl
cmpsb
in
imul
jecxz
stos
lcall
scas
and
decl
les
and
mov
mov
inc
cld
push
insl
fnstcw
pushf
arpl
inc
mulb
inc
ss
inc
das
or
fadd
pop
outsb
js
inc
sbb
xor
jg
cmp
daa
pop
insb
ja
fsub
into
sbb
adc
push
cmc
mov
gs
mov
aam
test
out
andl
dec
push
xor
subl
sbb
pop
xchg
adc
in
lcall
lret
xchg
fisubs
xor
sub
lret
push
or
outsb
test
cwtl
sub
mulps
dec
pushf
pop
sub
xor
call
test
mov
cmp
add
mov
out
fisubrl
lret
ja
push
fwait
arpl
or
popf
xlat
pop
movsb
pop
fwait
pushf
xor
dec
add
pop
jmp
add
xor
daa
and
add
or
ret
mov
repz
test
and
jo
push
lea
or
cs
pop
mov
push
mov
sub
jae
xchg
add
pusha
jns
xlat
inc
fistps
add
add
shll
enter
dec
int
movsl
int3
and
adc
adc
adcb
ret
xchg
mov
lods
jg
xchg
lds
push
jbe
and
dec
stos
lock
insb
cmp
dec
fnsave
and
mov
adc
mov
jb
and
mov
jl
mov
push
ret
pop
je
adc
jb
mulb
xchg
mov
inc
jno
jge
std
dec
mov
add
fwait
push
cmc
mov
enter
stc
lods
mov
jle
push
and
push
jo
inc
sbb
push
jp
les
ljmp
mov
popa
mov
iret
stos
jge
jle
inc
cltd
push
or
inc
orb
and
sbb
mov
pushf
mov
std
mov
dec
daa
mov
idivl
call
icebp
sbb
cmp
inc
pusha
pop
fidivrs
sub
jno
subb
imul
inc
les
lods
rcrb
push
es
fsubl
cwtl
out
mov
mov
push
aad
pop
cld
push
sub
ficoml
xchg
outsb
rcrb
jge
mov
std
adc
lcall
add
inc
xchg
hlt
mov
cmpsb
outsb
push
jmp
stc
and
mov
mov
mov
sar
jle
shl
imul
dec
or
adc
xor
inc
repnz
cmp
sbb
fwait
and
pop
add
sbbl
wrmsr
loopne
ret
stos
and
mov
mov
inc
push
aad
subl
out
inc
mov
mov
push
inc
cmc
or
pop
sub
mov
dec
cmp
ret
les
cmpsb
jns
sahf
or
test
imul
jl
push
mov
add
cmp
or
imul
movsl
pop
sbb
stc
cld
dec
aas
sbb
in
or
add
jmp
shll
or
xchg
xchg
out
in
add
pop
lcall
and
fincstp
inc
iret
inc
cmp
outsl
mov
iret
jg
out
dec
jb
sub
repz
rorl
scas
sbb
sbb
sbb
fwait
int3
mov
pop
in
pop
push
mov
insl
xor
cltd
pop
and
xchg
push
stos
notl
popf
stos
loopne
daa
sub
mov
or
cmp
mov
arpl
in
jne
dec
cmp
ds
dec
fs
addb
cmp
pminsw
lret
int
popf
nop
jl
fwait
pop
cmp
xor
inc
sub
call
jb
push
enter
jp
or
pop
and
lret
mov
dec
fstpl
pop
pusha
mov
pop
inc
dec
out
sbbl
hlt
xchg
ss
mov
jecxz
xchg
insl
jp
sub
mov
pusha
ret
jns
rol
jno
test
pop
xor
pop
push
jb
sbb
cli
jmp
fwait
sub
cmp
frstor
or
and
inc
out
xor
hlt
test
cmp
adc
and
dec
ljmp
push
cltd
push
cmpsl
test
mov
imul
adc
cwtl
dec
mov
adc
cmp
sbb
pusha
movsl
or
adc
dec
pusha
cmp
pop
pop
inc
xchg
xor
jne
jmp
pop
jbe
clc
xor
rcrb
les
xchg
jnp
push
push
sub
out
lret
mov
add
mov
sub
cmp
or
mov
or
pop
ffree
fdivl
pop
popa
adc
movsb
fs
insb
in
pop
jecxz
repnz
loope
pop
adc
cmp
or
jae
iret
imul
mov
pop
xchg
iret
aam
int3
push
push
mov
xor
inc
lods
pop
pop
cld
add
inc
mov
int
sti
mov
add
stos
jo
in
and
push
push
or
sub
ret
xchg
sub
adc
insb
dec
imul
stc
ss
scas
xchg
push
call
dec
cmp
push
xchg
fistpll
into
add
mov
add
jns
cmp
inc
je
add
mov
mov
popf
mov
inc
rorb
cmp
int3
dec
rclb
orl
mov
addr16
fidivrl
test
aaa
sbb
sub
xor
into
cmp
add
push
pushf
cmpsb
jne
imul
adcl
mov
inc
lods
and
dec
xchg
add
mov
push
jnp
sub
shll
es
fsubrs
mov
pusha
leave
and
shrl
mov
push
jbe
adc
scas
add
lds
call
sbb
cmp
js
enter
inc
sub
inc
inc
adc
dec
insb
out
cmpsb
xchg
stc
out
ss
je
pop
or
cmp
sbb
inc
data16
std
inc
stos
arpl
push
jmp
notb
shld
or
jb
add
xchg
pop
out
fildl
dec
cmp
pusha
sbb
mov
and
and
negb
xor
fnstsw
mov
ljmp
popf
stc
test
pushf
inc
pop
mov
jne
lret
mov
std
movsb
fsubp
loop
dec
add
sub
cmp
xor
mov
lods
mov
sub
and
pop
jmp
xchg
xchg
bswap
outsl
sarl
inc
xchg
cmpsb
nop
lods
sahf
shlb
jge
jle
mov
inc
sbb
cmp
sbb
dec
inc
fs
into
sbb
pop
test
sub
dec
sahf
pop
and
xor
not
push
test
inc
test
sbb
jg
mov
push
fcmovne
loopne
push
jp
or
test
mov
aad
fnstcw
mov
nop
mov
iret
imul
pop
adc
out
sarb
nop
xor
xchg
push
xchg
in
xchg
add
and
std
dec
or
sub
dec
xchg
sub
test
sbb
ljmp
ret
popa
insl
ljmp
jbe
mov
jg
adc
mov
pop
jp
xchg
mov
pop
es
or
add
fwait
or
in
push
icebp
movsl
jecxz
sbb
pop
cld
mov
push
icebp
adc
loop
mov
push
sti
sarl
pushf
and
test
test
cmp
sbb
or
cli
nop
mov
idivl
dec
pop
imul
out
xor
cmp
test
scas
cmp
test
sub
pop
pop
cmp
push
xor
mov
xor
movsb
movsl
mov
loopne
scas
xchg
rolb
lock
outsb
and
sbb
xor
out
add
pop
xchg
out
ss
incb
jmp
fcmovnbe
dec
call
xorb
stos
jns
cmp
jne
pusha
test
sbb
ret
mov
scas
bound
out
cmp
inc
add
jle
in
mov
sub
rorl
inc
popa
movsl
stos
mov
fucomp
lret
int
and
adc
push
mov
js
icebp
repnz
xchg
push
mov
stos
inc
orl
jge
in
insl
sar
sub
incl
xchg
xlat
or
testl
mov
in
fwait
aas
jle
sbb
add
mov
or
mov
fiadds
aam
lcall
cmpsb
int
testl
xor
pop
ljmp
mov
mov
mov
outsb
pushf
dec
lcall
adc
jecxz
cmpb
sbb
in
xchg
bound
pop
inc
outsb
inc
stc
fisubrs
mov
loopew
cmpsb
fnstsw
inc
fs
add
ret
cs
mov
jne
mov
lods
repnz
fcomp
lods
mov
stos
cmp
dec
arpl
fadds
pop
push
xchg
sbb
outsl
fcoml
mov
cld
sub
cmp
arpl
xor
in
sbb
lods
cld
movsl
loop
popa
cld
mov
in
xchg
add
out
rcll
adc
fiadds
sahf
test
pop
push
outsl
je
sbb
adc
into
in
sbb
movb
lea
or
pushf
addl
add
lock
jnp
imul
add
jmp
lret
adc
or
out
lds
aas
les
jbe
pop
mov
mov
add
lock
inc
mov
jns
inc
imull
lds
mov
pop
mov
repz
add
cmp
int
out
pcmpeqw
xchg
inc
mov
adc
xlat
sub
ljmp
mov
jecxz
and
out
test
xchg
call
jle
test
dec
je
jbe
sarb
sbb
push
push
in
mov
hlt
lock
mov
daa
mov
cmp
jp
dec
lahf
xor
jecxz
scas
cmp
jae
sub
jbe
pop
ja
pop
and
out
stos
popf
sbb
rolb
jne
jl
fs
xor
lea
rclb
hlt
adcl
push
imul
xor
in
pushf
jl
stos
cli
jno
push
gs
sbb
adc
cmp
popf
push
pop
cmpsl
ja
push
push
add
fs
sbb
sahf
mov
je
imul
es
push
cmp
cmp
cmp
lcall
sbb
int
and
cmpsl
or
xchg
aad
mov
test
cmc
and
sahf
pop
mov
xor
mov
jne
mov
xchg
sub
xchg
xchg
fdivrs
xor
cmp
nop
push
ljmp
inc
pop
stos
shl
pop
jae
mov
mov
pop
pop
lahf
pop
mov
jo
pusha
push
cs
xchg
xchg
cltd
xchg
mov
fwait
jle
subb
sub
xor
xlat
inc
xchg
pop
es
xor
fwait
mov
cli
gs
lods
xchg
pop
add
je
repz
lret
pop
mov
mov
cmp
sahf
cmpsb
fwait
mov
lds
daa
sub
pop
pop
push
pop
fadd
ja
or
jb
dec
lret
lea
data16
push
orps
aaa
xlat
loop
push
jecxz
inc
ret
mov
xchg
iret
shlb
rcll
pop
push
jle
in
dec
push
std
push
lret
mov
call
lret
in
inc
sub
cmc
stc
clc
mov
ds
sub
mov
sbb
dec
pop
fwait
and
pop
fwait
sub
test
repnz
sbb
pop
jne
mov
fs
xor
hlt
dec
and
xchg
fimull
insb
mov
mov
addr16
daa
pextrw
xchg
xchg
rorb
sbb
ror
jp
loope
mov
in
lret
out
mov
fwait
or
xchg
stos
in
sbb
xchg
movsl
lret
dec
cmp
jns
dec
push
sbb
std
mov
xor
les
adc
xor
cltd
lock
push
out
dec
insl
jae
cmpsl
mov
aaa
int3
mov
call
push
pop
fisttpl
cld
cmp
bound
js
or
mov
add
mov
orl
adc
inc
lods
xor
fucomip
out
mov
lds
dec
out
sub
mov
mov
iret
dec
aad
xchg
xchg
lock
or
pop
aaa
push
loop
fisubs
aaa
stc
out
js
insl
lds
adc
testl
out
and
inc
aam
or
in
insb
xchg
jb
hlt
xchg
sbb
inc
xchg
cmp
rorb
sub
sub
cli
fdivr
add
xchg
clc
xlat
push
adc
lods
mov
add
jmp
fbld
jo
mov
sub
sbb
sbb
addr16
push
mov
lock
jl
shrl
push
pop
jl
mov
push
das
jmp
pop
mov
jmp
fildll
mov
push
cmpsb
pop
sbb
or
dec
das
inc
std
cmpsb
cmp
es
adc
das
add
inc
in
enter
add
mov
xchg
cli
lods
mov
data16
nop
cwtl
insl
cmc
cwtl
pop
cmpsb
into
fs
inc
mov
ficoms
jmp
pop
adcl
xor
lret
fs
inc
cmp
add
lahf
add
les
std
popa
xchg
mov
popa
or
ret
jp
fisttpl
cmp
nop
out
xor
cmp
xchg
cmc
outsb
mov
ljmp
movsl
push
test
mov
fsubrl
clc
xor
xor
loopne
push
je
test
dec
jmp
fimull
push
imul
and
inc
pop
xor
scas
je
lods
std
push
outsb
or
int3
ret
cmp
push
xchg
mov
push
inc
pop
cmpsl
std
ret
xchg
test
xchg
fisubl
movsl
xchg
push
mov
mov
dec
sub
imul
ret
sahf
jb
inc
in
mov
mov
pop
loop
popa
scas
adc
or
push
push
ljmp
out
mov
cltd
in
push
out
or
mov
out
jne
push
mov
aam
les
inc
in
add
adc
mov
out
sub
decb
push
or
hlt
mov
jns
pop
pop
stos
iret
shll
add
dec
inc
or
pop
bound
jnp
movb
ret
xchg
xchg
mov
mov
insl
lret
pop
mov
rclb
sahf
mov
outsb
stc
in
addl
jg
sub
and
xchg
cmpsb
mov
sbb
adc
cs
inc
cld
popa
sub
jae
stc
mov
in
in
sbb
shrl
xor
pop
add
cmp
xor
xlat
repnz
data16
jecxz
cmp
adc
mov
rorl
dec
into
nop
xchg
jg
aam
les
inc
push
movsb
mov
mov
inc
pusha
aaa
pop
ret
dec
pop
enter
mov
adc
mov
or
add
bound
pushl
gs
push
rol
push
movsl
xor
out
jmp
push
mov
dec
pop
dec
xchg
mulb
xchg
dec
mov
jno
inc
or
outsl
movsl
push
repnz
lret
sbb
sub
lret
pop
and
divb
sub
int
fs
loopne
sbb
subl
jmp
cmc
and
jle
push
in
inc
cmc
add
cld
and
clc
shrl
inc
jbe
fxch
xor
pop
iret
outsl
hlt
cmc
sub
daa
mov
ret
cltd
jbe
je
je
enter
sbb
loop
scas
mov
stos
rcll
push
adc
lcall
mov
push
push
xchg
jb
mov
ret
cmc
andb
inc
add
ljmp
scas
mov
sarb
es
ror
sbb
ret
sarb
pop
lret
pop
out
jae
mov
pop
mov
xchg
mov
frstor
leave
lret
and
ljmp
jmp
cmp
mov
or
jmp
hlt
mov
sbb
xor
mov
lcall
or
lret
test
cmpl
roll
cmpsb
xchg
fiaddl
dec
cwtl
dec
fldt
movsb
or
adc
movsl
mov
mov
xchg
push
and
mov
shlb
pop
push
jno
mov
lcall
sub
mov
out
lret
movsl
jl
icebp
decl
push
shrb
push
js
fimull
lret
sar
call
pushf
pop
jl
mov
test
mov
inc
jg
mov
adcb
sbb
xor
push
push
mov
rcrb
cmp
push
into
mov
ret
scas
hlt
jne
add
xchg
pushf
mov
add
insb
jb
arpl
cli
int
or
mov
inc
hlt
loopne
xor
imul
jle
lret
fidivl
mov
in
sbb
xor
xchg
neg
xchg
xor
mov
sbb
mov
pop
mov
nop
shrl
or
fistpll
les
enter
insb
nop
or
sahf
xor
push
xchg
sub
mov
pop
inc
sbb
mov
jge
mov
sub
jb
out
ss
bound
mov
cmp
pusha
xchg
sbb
cmc
mov
out
pushf
pop
leave
xchg
sbb
mov
adc
pop
test
adc
adc
dec
or
sub
sub
xchg
mov
outsl
push
or
sarl
jo
push
adcl
cwtl
xor
bnd
xchg
or
cmp
scas
cmp
and
enter
hlt
cmc
inc
movl
or
cltd
dec
or
mov
adcb
push
clc
jns
fistpl
or
aad
roll
ret
out
dec
add
aad
mov
pop
test
mov
or
pop
mov
push
mov
fwait
push
bound
mov
push
xchg
dec
jae
fildll
call
add
cs
cli
roll
lock
outsb
jl
add
test
shll
xlat
cmp
xor
std
pop
fistpl
jae
push
sub
sti
frstor
fcomip
cmp
sbb
mov
inc
dec
imul
mov
sbb
mov
add
pop
and
repnz
cmp
jne
xor
mov
xlat
jae
dec
sub
shl
xor
repnz
icebp
aad
or
adc
adc
dec
icebp
mov
fiaddl
sub
cwtl
and
dec
and
outsb
cmp
loope
cmpsl
lret
dec
or
aad
fimull
lret
cmp
and
xchg
xor
imul
mov
or
fdecstp
in
outsl
xchg
int3
and
loope
ja
pop
scas
mov
or
int
mov
lahf
sub
out
or
cmp
in
lret
mov
aaa
je
mov
jle
f2xm1
loopne
test
adc
cmc
push
mov
int
push
das
sbbl
clc
lock
push
aam
outsb
mov
jge
or
mov
mov
in
pop
jle
add
movsb
mov
roll
iret
mov
outsb
inc
es
cmc
in
jne
icebp
xor
xchg
dec
sub
mov
leave
lahf
push
sar
xor
pop
mov
pop
inc
mov
sbb
pop
sbb
xchg
mov
movsb
push
pop
call
lret
mov
loopne
in
xchg
pop
mov
popa
jl
pushf
sub
aaa
test
xor
mov
mov
adc
outsb
popf
lds
push
dec
mov
sub
xor
add
inc
lcall
xor
popf
pop
pop
mov
mov
dec
fidivs
pushf
ret
fiaddl
mov
lods
imul
loop
mov
into
cld
movsb
icebp
scas
movsl
dec
inc
adc
imul
cmp
fwait
sub
scas
imul
adcl
dec
dec
out
lea
push
xchg
arpl
jb
insl
loop
adc
fs
add
add
xchg
pushf
fs
mov
outsl
mov
repnz
in
sbb
test
or
push
add
xchg
or
shll
outsb
inc
inc
push
jge
movsb
enter
das
sub
jmp
dec
dec
xor
or
insb
or
aam
pop
jo
leave
jno
pusha
xchg
lods
outsl
out
je
iret
repnz
pop
lcall
sbb
fucom
aam
out
cmpsb
into
xchg
xchg
cmpsb
mov
scas
xor
jle
pop
jg
je
lret
pop
cwtl
pop
lret
stos
or
test
mov
add
test
xorl
repnz
push
dec
jecxz
jno
cmp
add
int3
mov
xchg
mov
mov
dec
sahf
mov
and
or
test
pop
cmp
pop
cld
sar
mov
inc
jmp
push
outsl
cmc
ret
dec
push
ja
inc
and
jns
or
in
ljmp
push
cld
pop
out
neg
jbe
push
insb
repnz
push
lods
iret
jae
mov
add
push
or
xchg
adc
pop
mov
pop
mov
mov
stc
les
int3
dec
push
out
dec
mov
int3
and
or
jle
aaa
rorb
loopne
sub
adc
adc
in
cmpb
mov
shll
into
mov
jb
inc
cli
sarl
xchg
and
imul
xor
popf
dec
inc
or
mov
jb
and
and
mov
sub
bound
fwait
mov
iret
and
aas
xchg
sbb
inc
js
mov
fstpt
cmp
arpl
icebp
or
int
fcos
push
pop
pop
xor
xchg
xor
cs
mov
inc
ds
or
rcrb
std
lret
push
ret
hlt
out
jnp
scas
cs
lods
mov
jmp
pop
gs
jb
cmp
dec
mov
test
sub
xchg
lods
arpl
xchg
cmp
rcrl
in
sti
lahf
and
cld
pop
movsl
imulb
popa
pop
fisttpll
cmp
inc
imul
lock
filds
push
pusha
push
and
jb
insl
pop
dec
icebp
divl
repz
out
sbb
inc
fildll
mov
loopne
jno
jnp
add
outsb
xchg
xchg
popa
pop
pop
out
mov
fwait
cmp
fstps
push
loopne
aam
lret
inc
or
xor
cmp
popf
cld
mov
popf
jnp
jg
adc
mov
xchg
ret
or
mov
mov
mov
out
push
aas
xchg
out
int
mov
sti
clc
xlat
out
fdivr
int
adcb
push
xchg
iret
mov
push
das
outsl
je
mov
xor
pop
iret
test
fsubrl
xor
scas
dec
add
push
lds
xor
ret
daa
xchg
dec
lods
shll
popa
and
insl
and
stc
jg
mov
jle
pop
cmp
push
shll
movsl
jnp
aaa
test
das
xor
fmuls
cmpsb
sbb
pushf
adc
repnz
cld
push
xchg
aad
pop
jmp
add
mov
lods
or
shrb
xchg
dec
push
sbb
outsb
aas
dec
jbe
lds
in
pop
cmp
call
movsl
out
add
adc
cmpb
add
pusha
sub
add
and
inc
xchg
out
jne
mov
cmp
movsl
movsb
pop
dec
push
cs
int3
popf
sbb
daa
ja
xchg
ljmp
add
dec
pop
les
loopne
mov
cltd
sahf
mov
xchg
sub
mov
jmp
jo
movsb
xchg
cmp
negb
inc
imul
sub
sbb
cltd
je
ficoml
bound
loope
jns
sbb
mov
cmp
jmp
xchg
add
lea
leave
xchg
xchg
push
add
dec
gs
enterw
in
mov
sbb
push
adc
mov
xchg
mov
cmp
push
movsl
mov
pop
ja
mov
fsub
jp
leave
or
imul
pop
or
xchg
aaa
dec
xor
push
push
lret
rcrl
es
xchg
mov
fidivrs
adc
fistpl
jmp
adc
ret
xor
scas
imul
lea
pop
nop
add
sub
dec
and
and
mov
je
mov
dec
es
in
dec
lret
stos
jbe
out
and
in
insb
sub
xchg
clc
inc
cmp
adc
iret
lahf
aas
pop
inc
je
mov
mov
rcrl
lods
call
jo
in
push
test
int
push
das
push
inc
add
scas
or
add
jns
enter
sub
stc
loope
popf
ss
lahf
iret
pop
je
fcomi
rorl
mov
mov
ret
ljmp
lahf
sbb
fdivrl
add
stc
mov
lret
or
shlb
xchg
mov
sub
jge
xchg
lret
mov
lods
ror
mov
inc
icebp
test
and
mov
xchg
cwtl
push
xlat
out
dec
pusha
incb
fsubrl
out
adc
mov
cmp
adc
lcall
sahf
fcoml
cmp
adc
adc
test
test
push
imul
adc
into
jmp
into
test
cld
mov
or
icebp
mov
mov
mov
getsec
aad
and
xchg
push
lcall
adc
jmp
jo
popf
sbb
popl
sbb
out
add
xchg
push
or
scas
pop
sub
aad
jae
repz
cmpb
jle
push
and
movsl
sbb
mov
hlt
mov
arpl
xor
out
inc
in
add
xchg
out
or
test
jl
cmpsb
adc
das
test
les
icebp
sub
shlb
mov
pop
inc
stc
add
mov
test
in
cld
add
movl
or
clc
xchg
mov
and
aas
push
pop
enter
push
mov
out
shrl
pushf
scas
push
xor
push
int
pop
in
call
adc
sbb
or
pop
mov
mov
rclb
add
mov
mov
out
jge
pop
fcmovnbe
cmp
mov
in
or
insl
push
or
std
ret
push
call
and
sub
push
cmc
xchg
add
aad
push
push
mov
jns
adc
clc
jbe
xor
and
fsubs
fcmovne
idiv
xchg
in
jns
dec
inc
pop
das
and
popa
repnz
xor
ffreep
xor
nop
inc
mov
cwtl
mov
push
xor
inc
cmp
sbb
stc
mov
rorl
push
push
jns
xchg
loope
push
ret
sub
jl
sbb
shlb
mov
js
mov
xchg
mov
mov
cmpsb
adc
arpl
les
nop
ss
int3
mov
int
imul
sbb
mov
pop
xchg
jo
push
incb
xchg
loop
mov
dec
inc
lret
and
testl
jo
aaa
mov
mov
sbb
mov
in
loop
out
adc
adc
jg
xchg
push
push
repz
push
movsb
mov
ss
loopne
pop
test
icebp
mov
mov
rclb
mov
shlb
cs
into
and
and
shlb
sarb
movsb
outsb
int
mov
xor
sbb
dec
pop
xorl
jg
mov
dec
je
lret
dec
add
mov
lahf
enter
sub
psrad
dec
mov
pusha
xchg
mov
jns
test
push
add
and
aad
sarb
and
mov
push
jae
xor
stc
sbb
mov
orl
fldl
cmp
sub
in
mov
fistpl
aas
out
xor
aad
fucomp
and
adc
test
and
dec
sbb
fistpll
push
adc
mov
hlt
adc
jae
xchg
shrl
das
stos
mov
icebp
adc
pop
push
lret
mov
loop
add
lods
cld
cmp
adcb
dec
imul
call
je
cmpsb
adc
xorl
pop
inc
mov
bound
cmc
pop
or
xor
mov
or
popa
je
mov
filds
xor
mov
or
mov
xor
sub
lret
cmp
jnp
jp
shlb
jno
pop
pop
in
aam
fs
or
test
and
shrb
filds
mov
dec
out
sbb
fnstsw
jle
int
test
inc
lret
push
dec
mov
push
adc
loopne
fwait
push
imul
push
test
hlt
fbld
scas
out
jl
jp
sub
mov
inc
mov
imul
xchg
cmp
mov
and
pop
jl
adc
push
mov
jae
imul
rcr
testl
sbb
das
movsl
lea
insb
pop
repnz
pop
orb
push
in
les
cmp
mov
push
clc
xor
inc
ja
ficoml
testl
je
adc
ds
test
pop
test
sbb
int3
into
xor
jl
sbb
pop
xlat
mov
add
pop
imul
movsb
jge
or
mov
addl
pop
rorb
cli
pusha
mov
xlat
vandnps
sahf
sbb
inc
mov
nop
insb
addr16
out
mov
or
adcl
fldt
fsubs
hlt
mov
xchg
ror
leave
int
adc
push
pusha
push
shlb
push
aad
adc
add
pop
lahf
adc
das
cmp
iret
or
pop
insl
popf
das
mov
js
in
jb
enter
out
jp
ss
lahf
leave
pusha
shrb
xor
sub
insl
cmp
ds
cmpsb
cmpl
xchg
add
fdivr
fistl
insl
xchg
adc
mov
aam
addr16
cli
fmuls
push
jns
inc
ljmp
xchg
mov
loope
sbb
iretw
call
jae
sub
add
sub
negl
pop
dec
adc
inc
js
xchg
adc
addl
add
jnp
dec
enter
fisubl
xchg
jo
mov
add
mov
lret
fwait
divb
xor
jl
out
stc
scas
mov
scas
call
mov
jl
mov
mov
insb
push
push
jle
jle
repnz
add
and
js
mov
adc
xchg
jnp
das
pcmpgtb
sbb
pop
movsl
cmp
sti
push
test
adc
push
pop
leave
xchg
aaa
test
mov
dec
mov
push
ja
xor
ja
sbb
andl
jbe
cmpsl
xchg
jg
or
dec
roll
dec
es
push
ret
dec
cwtl
sub
into
mov
or
std
push
ret
sbb
ljmp
push
sub
push
pop
add
sbb
cmpsl
adc
loope
data16
or
test
mov
dec
pop
sbb
shlb
adc
aaa
xchg
stos
adc
vmwrite
push
adc
cmp
mov
and
scas
or
adc
cmp
addl
jno
mov
out
push
loop
in
add
sti
pop
in
mov
jns
in
std
and
je
dec
inc
mov
stc
add
stos
jle
or
lock
mov
cmpsl
add
aam
es
shlb
sbb
aas
or
pop
jne
stos
in
dec
in
or
dec
jmp
or
sub
je
jne
adc
mov
jecxz
mov
sti
push
push
jae
dec
sbb
out
jmp
repz
jmp
cmc
mov
add
mov
sub
imul
sub
shll
sbbl
or
pop
pop
sbb
mov
mov
cmp
or
xchg
lahf
data16
push
inc
cmp
sbb
mov
pop
rcll
loop
push
int3
pop
mov
bound
popa
mov
out
rolb
es
jb
push
jno
mov
dec
push
pusha
jg
push
jp
pop
cmp
clc
jae
pop
sahf
xor
movsb
mov
mov
cmp
xchg
and
rcr
imul
lret
out
sahf
test
lods
mov
hlt
int3
and
xchg
inc
daa
hlt
arpl
cmp
arpl
daa
data16
inc
jecxz
lods
stos
lods
cmp
mov
outsb
mov
out
jmp
pop
jnp
fildll
rcll
je
cmpsb
or
out
out
scas
add
or
outsb
push
lcall
out
lcall
sub
or
cmpsb
addr16
jb
jns
mov
fisubl
repz
ret
or
sarl
cmpsb
and
adc
push
scas
das
dec
cs
aas
ja
in
adc
leave
push
dec
imul
inc
imul
cld
add
punpckhdq
dec
sub
in
ljmp
dec
pushf
xlat
xchg
xlat
dec
sub
cmp
push
dec
mov
push
into
stos
sub
lea
mov
popa
or
and
pop
xor
enter
mov
insb
xor
mov
cwtl
in
test
add
mov
pushf
mov
fists
and
jns
pop
push
pop
push
mov
and
push
mov
adc
xchg
outsl
js
xor
and
fldt
push
leave
cli
addr16
leave
jge
imul
xchg
and
dec
inc
sbb
inc
xchg
data16
mov
stos
test
pusha
inc
sub
sub
stos
imul
pop
jge
lds
and
mov
cld
add
sbb
mov
pop
aas
xchg
xchg
fcomi
xchg
mov
std
cmpsl
mov
lret
int3
mov
stos
sub
push
or
out
in
cmp
lcall
mov
add
scas
sbb
cmp
and
daa
jl
and
cmc
and
mov
cli
repnz
fisubrs
mov
push
pop
sbb
cmpl
pop
xor
ss
imul
add
pop
mov
sub
aad
hlt
or
xchg
push
jns
inc
jb
cmc
and
ret
dec
xchg
ds
mov
adc
nop
popa
mov
aad
lock
push
stc
int
inc
mov
mov
and
jecxz
add
dec
fwait
jp
int
in
jns
das
movsb
lret
scas
mov
adc
mov
faddl
push
push
cld
arpl
sti
test
sbb
pop
jmp
jle
push
loopne
pop
inc
push
pop
nop
out
je
cmp
dec
cmpsb
movsl
jge
fwait
lahf
sbb
adc
add
xor
adc
mov
mulb
in
imul
xchg
popf
lods
jg
jg
outsl
xchg
sahf
daa
xchg
fstl
mov
mov
mov
sub
adc
mov
stos
and
sub
mov
popf
rorb
jo
mov
cmp
jle
xchg
out
movsl
outsl
in
lret
adc
mov
cli
pop
ficoms
pop
push
cmp
sbb
std
add
addr16
sub
xchg
mov
jne
scas
inc
jge
jb
sbb
ds
mov
push
rorb
cmp
sub
xchg
mov
lods
nop
mov
sub
stos
fstpt
das
sub
popa
lret
popf
mov
mov
pop
imul
sbb
roll
adcb
and
les
cmp
fistps
bound
xchg
daa
fwait
icebp
inc
pop
cmp
ja,pt
mov
pop
into
push
hlt
iret
inc
push
fisttpl
fdivrs
pop
jle
lret
pusha
les
mov
jno
jl
sub
in
out
pop
and
imul
pop
cs
push
fcompl
xor
push
stos
xchg
pusha
into
rcl
sahf
jecxz
cli
mov
xchg
lea
jb
test
dec
xorb
sete
pop
dec
mov
cmp
dec
cld
das
sarl
jmp
mov
mov
xor
cld
xor
push
mov
popa
fwait
out
add
rcr
xchg
mov
cmpsl
mov
inc
add
push
hlt
ss
jecxz
imul
subb
fmul
xor
sbb
stos
and
ret
les
lds
or
cmpl
in
jnp
lret
add
je
popf
repnz
mov
outsl
mov
add
arpl
popl
or
lock
inc
out
int3
mov
mov
jo
das
pushl
or
inc
je
lods
fcoml
lahf
xor
sub
dec
mov
ret
mov
outsb
jge
cmpsl
xchg
sbb
cs
mov
mov
movsb
fmulp
test
mov
popf
jg
lods
es
and
push
sub
mov
fistpll
jecxz
mov
mov
xor
mov
jge
adc
mov
mulb
addl
jns
and
mov
jl
mov
inc
and
sahf
cmpsl
inc
roll
arpl
sti
or
jae
inc
ret
sbb
or
imul
es
ret
inc
ja
jmp
jp
int3
rcrb
std
inc
test
inc
cltd
hlt
xor
stc
xchg
pusha
popl
xchg
std
mov
adc
sub
lret
test
inc
push
dec
jmp
add
addr16
add
outsb
cmp
std
lret
ficoml
push
pop
fdivs
dec
int
loopne
in
fildll
cmp
fildl
test
insb
dec
xchg
cs
sbb
aas
mov
pushf
hlt
idiv
mov
pop
fidivrs
xor
xor
sbb
push
inc
xor
xor
pop
stos
icebp
es
out
add
adc
insl
lcall
out
xcrypt-cfb
cmpsl
out
xor
mov
test
jns
cmp
cltd
inc
dec
sbb
imul
fwait
or
adc
jo
inc
cmpsb
aam
jle
mov
xchg
addl
add
push
call
lcall
cmp
xor
sub
adc
push
inc
mov
rorl
loopne
orb
adc
xchg
mov
inc
scas
iret
out
jl
or
cs
cmovp
mov
or
and
jne
xorl
push
jg
dec
scas
mov
sbbl
xchg
mov
add
xchg
ss
fisubrs
or
or
js
and
rorb
mov
and
dec
pop
loopne
sbb
adc
pop
aam
xlat
xchg
mov
and
or
mov
sti
sbb
mov
insb
das
jae
inc
mov
adc
xor
sbb
sbb
push
loopne
imul
push
cmp
ds
jmp
dec
adc
jnp
repnz
add
mov
mov
mov
repz
hlt
mov
mov
mov
dec
cmpsl
push
push
lea
ljmp
ljmp
enter
push
sti
adc
and
fildll
vmwrite
roll
sbb
sbb
mov
lds
sub
pushw
pop
in
movsb
sbb
mov
dec
push
cmp
jnp
jecxz
push
outsl
xlat
jle
ret
fdivp
inc
pop
or
xchg
adc
out
iret
or
movsl
dec
sbb
jge
fs
fisubs
dec
inc
mov
push
mov
sti
pop
mov
cmp
int3
cli
or
jmp
test
mov
or
shr
out
jne
adc
inc
bound
mov
sahf
jle
lds
add
dec
pop
push
orb
pop
cmp
test
fbld
or
rclb
negb
lcall
scas
cmpsl
cmovs
test
jecxz
mov
imul
out
add
jmp
std
inc
stc
std
jecxz
adc
fisttpll
cwtl
mov
hlt
pop
pop
add
push
in
aaa
cmp
fwait
insl
outsl
xchg
mov
enter
sbb
sahf
xchg
push
sub
repz
or
sub
popa
xchg
cmp
jb
movsb
cltd
xor
in
arpl
into
mov
push
or
jecxz
adc
push
push
out
xor
cmp
inc
in
arpl
sub
xchg
mov
mov
leave
adc
dec
fdivrl
xlat
push
andl
xchg
cs
pop
or
imul
popf
std
xlat
loope
xor
push
fs
mov
inc
or
jns
cpuid
lahf
enter
adc
and
popf
sub
popa
mov
inc
insl
repz
pusha
and
test
aaa
ficompl
pop
ds
sub
dec
ja
xchg
inc
or
out
mov
jmp
push
nop
mov
sub
ss
in
jmp
adc
jne
fs
lret
pop
imul
lcall
scas
das
add
pop
pushf
dec
sbb
out
in
roll
pop
sbb
insl
test
sahf
dec
out
lcall
ja
jle
cli
sarb
mov
push
loopne
inc
mov
sbb
testb
add
lcall
xor
lret
mov
adc
or
xor
lcall
enter
idivb
or
pop
mov
push
test
add
mov
jg
arpl
icebp
inc
mov
fwait
insb
jecxz
add
or
mov
add
pop
mov
jnp
xchg
repnz
inc
shrl
scas
lret
lret
mov
sbb
mov
sbb
mov
jg
pushf
jl
xlat
add
sbb
cmpsl
cmpsl
and
and
in
out
sbb
mov
xchg
lcall
jle,pt
nop
test
inc
lock
fidivl
xor
push
mov
arpl
insl
in
dec
xor
insb
lret
lret
in
mov
lea
sbb
mov
inc
cmp
jge
sub
xor
int3
aam
mov
cmp
xchg
mov
jbe
or
push
xor
les
imul
movsl
adc
pop
xor
jmp
ljmp
cmpsb
leave
push
dec
dec
pop
and
lret
xchg
repz
stos
bound
sub
shlb
insb
jae
fisttps
sub
cmpsb
in
int
inc
lds
xchg
jp
or
fisubrs
daa
push
out
aas
mov
fucom
and
jecxz
inc
loop
sub
lds
fs
mov
push
dec
addb
js
xchg
lods
push
sbb
push
xchg
out
cmpb
mov
xor
scas
and
adc
or
ljmp
jbe
icebp
stc
iret
arpl
adc
dec
int
sbb
aad
shrl
aas
add
pop
push
aas
push
pop
pop
xor
cli
inc
loop
push
lods
dec
jae
add
lods
xchg
into
and
sub
or
insl
add
cmc
cmpsl
call
in
mov
cmp
sub
jne
mov
bound
xchg
outsb
jnp
mov
adc
xlat
mov
sti
std
popf
jg
cmc
loope
inc
add
inc
adc
jp
dec
xchg
iret
and
gs
jns
xor
fists
dec
sub
pop
out
mov
cmp
inc
adc
lea
adcl
fidivl
pop
mov
lcall
or
mov
add
je
bndldx
fcomip
or
leave
push
or
jecxz
loop
imul
shl
xor
sti
mull
pop
je
cmpsl
mov
push
imul
mov
mov
aas
jmp
fwait
push
mov
push
cltd
or
shlb
ss
int3
xor
cmp
rcrl
jns
stos
out
push
aaa
xchg
dec
mov
and
cmp
cmp
jle
out
out
jo
inc
stos
dec
fs
sbb
repz
dec
test
dec
sub
and
or
mov
adc
mov
adcb
mov
mov
andl
in
cmp
pop
push
mov
imul
addb
sbb
xchg
loop
push
xor
cmp
push
test
aaa
test
or
push
cmc
sub
lock
sbb
outsb
xchg
pop
addr16
mov
add
push
scas
cmpl
xchg
xchg
dec
int3
fsts
arpl
push
in
popf
loope
sbb
xchg
into
xor
fwait
xor
sbb
ljmp
popa
daa
mov
and
cld
pop
xchg
jge
fistl
mov
in
xchg
fidivrl
out
lcall
xor
pop
fisubrl
sbb
roll
mov
sub
mov
adc
push
pop
das
aam
hlt
sbb
and
mov
ljmp
jno
mov
enter
jnp
popa
xchg
xor
iret
loop
mov
scas
jno
idivl
jbe
pop
orl
cwtl
into
pop
insb
push
mov
sbb
add
mov
mov
mov
jp
push
jnp
lcall
ror
fwait
add
adc
ficompl
push
add
push
cli
lret
mov
cmp
cmp
mov
cmc
repnz
xor
das
fcoms
push
pop
loopne
push
xchg
add
lret
mov
div
mov
in
xor
sbb
addl
cmpsb
notl
cmp
push
xchg
add
jns
mov
mov
cli
ret
loop
xchg
inc
sti
cs
push
sub
push
jl
dec
dec
popf
adc
and
jp
ljmp
adc
cmc
adc
dec
stos
leave
lods
pop
xchg
pushf
pop
xlat
bnd
or
sbb
jb
js
out
sbb
aas
fs
mov
dec
sti
pop
shlb
ss
xlat
inc
push
mov
and
icebp
jbe
pop
xchg
enter
mov
mov
lods
ds
adc
inc
lds
fistpll
mov
sbb
pushf
mov
adc
fistpl
sub
lea
push
std
inc
movsb
cmpsb
mov
out
adcb
mov
cmc
loopne
ss
in
xchg
popa
lods
inc
jae
fldcw
pusha
nop
push
mov
mov
rcl
ss
pop
jbe
imul
xor
rorl
iret
sar
repnz
mov
jl
in
and
ljmp
dec
cwtl
aas
dec
push
xchg
jns
inc
je
push
mov
pop
dec
fiaddl
mov
paddd
sub
xchg
xchg
xor
mov
ret
inc
rorb
push
sbb
lcall
repz
push
loopne
add
inc
dec
ret
pop
jmp
lods
das
jmp
pop
imul
inc
mov
out
icebp
mov
add
adc
fs
arpl
sub
mov
dec
lods
xchg
jno
iret
push
call
pop
fcomip
lods
sbb
mov
mov
sub
pushf
idivl
movsb
stos
dec
bound
or
xchg
gs
inc
sub
popa
mov
cmp
shll
aad
inc
in
into
sub
sub
pop
mov
jae
jns
sbb
movsb
mov
cmp
jns
rcll
xchg
sub
ret
pop
cmc
add
adc
gs
out
faddl
jb
lds
sbb
jbe
mov
sub
inc
test
and
imul
lcall
pop
mov
aas
and
lret
stos
pop
outsl
stc
ret
mov
dec
cwtl
or
pushf
dec
mov
lcall
in
test
sub
or
aaa
push
fistl
stos
rolb
mov
cmp
mov
pop
add
mov
arpl
pop
pop
push
mov
lods
insl
cmp
xorb
inc
hlt
mov
sbb
mov
mov
std
mov
aam
sub
mov
pop
or
and
nop
or
test
and
daa
adc
loopne
lcall
dec
popf
sahf
xchg
lahf
repz
rorb
mov
fcompp
pop
test
adc
dec
mov
fwait
dec
pop
ret
push
sbb
and
nop
and
mov
jnp
ljmp
push
jo
enter
pop
aam
xor
enter
fwait
nop
add
fisubl
add
mov
mov
rclb
fucomi
test
sbbb
jl
jmp
xchg
pop
es
lods
add
cld
inc
repz
mov
mov
pop
dec
sbb
jb
repz
in
das
idivb
test
pop
mov
adc
fisubl
ret
xor
sbb
mov
cmp
jb
lret
dec
jne
daa
mov
rolb
insl
mov
mov
or
dec
inc
popa
div
addr16
mov
fistps
clc
pop
jmp
movsl
mov
and
cld
aas
lsl
pop
movsl
xor
dec
ss
mov
pop
rolb
fnstenv
addr16
incl
fnstcw
shll
fcmovnu
mov
xchg
inc
push
test
sub
cmc
push
push
cmp
das
lret
sub
test
xor
mov
rorl
outsl
shr
mov
jl
fadd
jge
scas
aam
adc
dec
mov
mov
mov
out
loope
test
stc
jecxz
fbld
inc
mov
mov
inc
xor
mov
inc
mov
cld
xchg
stos
andb
dec
insb
fs
jmp
stos
popa
mov
shll
test
xchg
lcall
xchg
in
push
scas
hlt
jp
loop
xchg
loopne
pop
jmp
lock
fst
repnz
int
into
aas
call
inc
and
or
in
repz
sub
pusha
dec
dec
push
mov
negb
sbb
xor
ret
adc
shll
dec
dec
xchg
add
aaa
xchg
test
pushf
out
in
mov
pop
std
cmp
in
int3
repnz
sahf
sti
mov
hlt
inc
test
repnz
sub
popf
pop
aad
mov
cmp
and
add
js
test
xchg
jne
push
ja
ret
ret
inc
adc
shr
rcl
psubd
popf
add
xor
outsl
cmc
ljmp
cmc
lock
ja
sarb
mov
out
ret
lret
mov
add
cwtl
mov
outsl
mov
inc
sbb
and
in
xchg
sbb
pop
pop
jns
ja
mov
inc
scas
adc
shll
jle
sbb
fcoml
ds
mov
or
mov
iret
mov
ret
int
aam
mov
sbb
mov
adcb
bound
int
loopne
fsubrl
xchg
mov
clc
pop
adc
movl
ret
xor
dec
jo
test
mov
sbb
jne
adc
test
pop
mov
fsubrs
push
push
inc
xchg
mov
cmc
jae
xchg
push
mov
mov
dec
jo
rolb
xlat
pop
jbe
enter
fstpl
mov
mov
lea
push
and
push
mov
mov
jns
push
and
and
sbb
and
mov
pushf
cli
fistl
dec
push
jge
repz
fisubrs
pop
jp
adc
inc
fwait
cmp
cmc
movsl
push
pusha
int
adc
divl
dec
dec
rcpps
cmp
add
rcrb
dec
pop
xor
add
lret
jecxz
daa
push
push
push
mov
outsb
mov
iret
scas
out
sahf
inc
int
push
push
lahf
adc
pop
mov
popf
leave
xor
sbb
fcoms
shlb
lret
jae
shlb
xlat
mov
outsb
lret
cmp
mov
add
shlb
cmpsl
stos
icebp
push
aam
fcomi
movsb
and
lahf
sahf
cmp
imul
int
add
xchg
es
mov
add
fs
sub
addb
inc
ss
push
mov
sbb
lods
fnsave
adc
scas
sub
ljmp
std
es
mov
mov
push
inc
test
cwtl
sahf
movsb
and
into
pop
in
data16
jne
popf
cmp
inc
hlt
in
cmp
add
ja
aas
das
testb
mov
int3
pop
push
mov
outsb
scas
pop
and
out
sub
xor
aas
mov
cli
jbe
jae
lea
mov
add
mov
push
jmp
xchg
in
pop
xor
xchg
in
pop
mov
add
sahf
xor
mov
xchg
mov
inc
adc
xchg
xchg
pop
and
mov
xchg
fimuls
jmp
fcoml
sub
sub
xor
inc
cld
shr
jl
cli
lods
popa
add
ds
adc
js
shr
movsl
push
and
js
sub
xor
fldenv
js
fsubp
xchg
adc
imul
mov
jnp
mull
jbe
aas
or
out
jo
out
inc
mov
dec
push
cwtl
popf
roll
fidivrs
pop
pop
jnp
jl
jge,pn
movsb
xor
cwtl
pop
roll
mov
ljmp
pop
pop
sub
cli
into
and
mov
add
insl
lret
lret
aad
mov
add
std
lods
sub
popa
std
fmuls
xchg
les
xlat
mov
or
imul
sub
or
enter
jns
mov
add
imul
xchg
cwtl
mov
insl
outsl
sub
sub
add
sbb
fistl
pop
leave
mov
jb
int3
popf
mov
push
cs
jb
dec
jl
aas
sbb
cmp
mov
imul
andl
hlt
jb
cmp
inc
loope
push
pop
decl
jge
shl
pop
cltd
movsb
clc
lock
ret
loopne
adc
pop
fcos
dec
nop
xchg
out
pusha
adc
cmp
movsb
mov
sub
jne
nop
mov
enter
xchg
lret
ds
hlt
pop
sbb
cld
cwtl
repz
arpl
leave
xchg
pop
dec
and
fwait
adc
call
mov
imul
aad
aas
leave
adc
sahf
cmp
call
cmp
mov
popf
mov
jo
inc
out
cli
popa
or
aam
les
add
andb
dec
add
add
add
je
bound
jo
fwait
mov
fdivl
out
jmp
mov
jl
pop
xor
aad
arpl
mov
sub
sahf
ret
cmp
les
and
xor
push
pushf
cmp
out
cmp
cmp
in
in
add
popa
stos
into
xorb
aam
mov
stos
fidivl
xchg
jnp
lods
cmc
push
fsts
mov
arpl
push
mov
mov
test
mov
sti
cltd
mov
scas
cmp
js
pop
jne
pop
cmc
out
int3
jno
mov
sbb
mov
cld
push
aam
mov
cmp
faddl
cmp
xor
fadds
cs
into
shll
push
dec
int
test
mov
mov
mov
or
pop
xchg
and
dec
jge
sahf
test
bound
call
jecxz
bound
or
in
icebp
mov
mov
mov
loopne
aad
movsb
cmc
adc
pop
mov
add
pop
sbb
cld
and
xchg
jle
mov
dec
push
ja
mov
mov
outsb
leave
mov
dec
mov
pop
xchg
test
iret
out
gs
xchg
sub
out
loopne
sub
test
scas
fs
movsl
pop
lcall
mov
les
scas
fadds
cmpl
pushf
xor
rcll
mov
pop
mov
inc
ss
dec
inc
mov
push
cmp
xchg
aas
pop
insl
pusha
push
push
and
mov
add
aad
and
jbe
flds
call
and
notl
cmpsb
cld
out
out
inc
in
js
cltd
pop
dec
stos
fiadds
rorb
sub
jg
xchg
jg
mov
adc
imull
sti
sbb
sbb
mov
cltd
inc
mov
in
stos
cmpsl
and
sub
xor
mov
sbb
and
push
pop
push
jl
xor
jcxz
out
pop
add
xor
daa
arpl
testl
rcll
push
fwait
js
nop
cmpsl
jg
ret
cmc
fiadds
jle
cld
roll
gs
shrl
mov
mov
es
inc
sbb
addr16
loop
pushf
dec
inc
push
inc
xlat
jnp
sbb
movb
mov
xchg
push
ficompl
inc
aaa
aas
das
adc
mov
aaa
loop
jmp
sub
jnp
loopne
mov
adc
mov
fmull
sar
jno
cli
scas
mov
mov
pop
dec
subl
pop
lret
icebp
mov
inc
icebp
jae
jae
imul
adc
pop
repz
push
jecxz
xor
adc
icebp
test
cld
lret
inc
push
iret
adc
ret
and
repz
out
orb
push
popf
cmp
pop
addl
dec
xor
push
fs
pop
mov
dec
in
mov
mov
mov
inc
adc
ljmp
sti
inc
or
int3
out
mov
push
jbe
mov
dec
fdivrp
adc
push
add
mov
sbb
add
adc
stos
sbb
adc
je
xchg
cld
mov
in
rolb
mov
fimull
int3
mov
inc
mov
and
fucomip
mov
test
inc
lods
mov
jmp
cmp
arpl
sub
dec
sub
or
jbe
stos
ficoml
jmp
sbb
bound
inc
mov
dec
aad
sub
in
and
insl
mov
call
push
mov
test
jo
jmp
mov
add
jmp
cmp
lock
das
jmp
daa
push
adc
jg
pop
outsb
xchg
daa
mov
jne
push
loope
movsl
push
imul
lock
add
test
push
and
mov
mov
cltd
fsubl
jge
hlt
sbbb
xchg
out
sbbl
cs
imul
outsl
or
mov
dec
lods
cmp
sbb
aas
pop
pop
mov
jno
mov
pop
cld
adc
sarl
inc
inc
and
push
cmc
cli
xlat
loopne
daa
test
cmp
push
jle
js
loope
xor
roll
sahf
inc
cwtl
lea
dec
out
and
push
jl
jnp
mov
std
or
jecxz
adc
mov
pop
or
sbb
sub
mov
addr16
rcl
out
stos
and
shl
push
pop
push
add
inc
inc
scas
and
xchg
lods
in
ds
cmp
bound
lret
push
cmp
mov
test
xchg
xchg
xor
add
das
cli
jmp
xchg
pop
inc
in
adc
inc
jo
dec
add
call
add
cmp
daa
movsb
jg
cwtl
mov
movsb
or
data16
test
xchg
dec
xor
add
ja
int3
or
sti
popa
jns
cwtl
dec
and
sti
cmp
pop
mov
and
je
pop
pop
push
or
inc
or
inc
aaa
inc
adc
aam
dec
mov
xchg
inc
push
nop
es
push
jge
dec
stos
or
outsl
popa
xchg
loop
movsb
push
mov
xchg
mov
add
or
mov
mov
out
cld
insb
add
rol
xchg
adc
test
xchg
inc
xchg
add
jge
pop
mov
jo
inc
xchg
mov
ret
fwait
test
adc
loope
cmp
testb
call
movsl
cmp
loope
xchg
pop
imul
xor
and
inc
cmpl
out
or
mov
dec
stc
subb
ljmp
dec
and
and
fsubrl
push
jo
fdivr
call
xchg
sub
or
xchg
inc
mov
cmp
dec
and
sub
jg
sub
fdivr
push
pop
pop
mov
sbb
dec
cmp
push
push
push
or
ds
jle
or
sarl
fsubs
lret
call
repz
sti
xor
les
jbe
sbb
in
add
adc
fldt
rorb
cmpsl
pushw
loope
mov
add
cwtl
mov
fidivrs
faddl
orl
outsb
out
in
sbb
sbb
xchg
xor
popf
fbld
adc
mov
and
or
repz
mov
push
xor
ffreep
xor
cmp
mov
fiadds
ja
sbb
dec
jne
jmp
lahf
fildl
dec
clc
ljmp
into
inc
mov
int
notl
adcl
xchg
pop
inc
dec
fldt
sbb
es
js
imul
cmp
push
cmpsb
inc
fcoms
repz
sbbl
test
pushl
lahf
negl
in
mov
mov
pop
or
xorb
movsl
je
aaa
fistps
dec
sub
jb
sbb
movsb
jmp
cmp
and
or
jg
imull
ret
or
enter
movsb
inc
push
outsb
std
xor
mov
xchg
pop
add
dec
sahf
push
mov
sub
mov
out
dec
js
bound
mov
or
dec
inc
dec
jnp
enter
int3
movsl
add
add
idivb
das
in
adc
xor
fs
pop
into
leave
push
mov
nop
jne
addl
lret
pop
gs
sti
divb
inc
sbb
pop
cmp
popa
sbb
stos
jge
js
add
je
push
imulb
stc
sti
fsubl
jb
aad
inc
jl
movsb
and
int3
and
mov
lret
push
ret
xlat
dec
mov
dec
push
sub
xchg
ret
test
mov
nop
pop
add
jns
addr16
out
inc
cmp
test
xchg
mov
lret
sub
push
loope
adc
adc
mov
out
xchg
enter
push
push
mov
push
imul
icebp
dec
movsl
jns
inc
and
inc
cli
jge
xchg
in
add
shll
inc
or
aaa
shl
or
mov
jns
xor
mov
test
leave
jnp
repnz
test
iret
sub
adc
add
shrb
inc
xor
jecxz
es
sub
iret
fs
rcr
and
dec
cmp
stos
fisubs
xchg
mov
jmp
push
lret
sti
cwtl
shll
adcb
or
rcrb
dec
data16
pusha
test
fcmovu
adc
mov
mov
cs
mov
adc
adc
in
mov
daa
adc
mov
pop
push
das
sbb
je
stc
mov
inc
xor
add
xchg
pop
pop
popf
dec
loop
mov
inc
loop
adc
xor
sub
xchg
xchg
cmc
sub
stc
cmp
mov
dec
add
add
mov
jns
mov
mov
stos
lock
sub
push
shr
xlat
xor
pop
dec
xchg
sub
fbstp
popf
mov
push
jbe
rorl
push
jbe
cs
mov
xlat
mov
adc
das
dec
inc
inc
jb
mov
push
in
jl
divl
into
ja
outsb
in
dec
cmp
call
xor
ja
inc
leave
clc
jp
enter
jp
ljmp
jo
adc
or
inc
adc
cmp
mulb
jmp
hlt
cwtl
imul
fsubrs
addr16
in
sbb
and
loope
cmp
mov
faddp
pop
jmp
jno
push
pop
jno
mov
and
neg
sub
mov
loope
mov
divl
mov
adc
xor
nop
sub
xor
xor
pop
icebp
lods
and
subl
mov
dec
in
push
out
xchg
pop
xor
mov
addr16
nop
jmp
loop
movsb
xor
jbe
andb
mov
push
dec
mov
int3
mov
xchg
cmp
pop
adc
sub
pop
lods
loope
fisubl
sub
dec
cwtl
cmpl
push
xor
xchg
xor
xchg
add
stc
pop
test
ljmp
push
mov
ret
icebp
lea
lock
inc
int3
fdivrl
int
flds
sbb
pop
mov
pop
mov
je
gs
xchg
adc
in
push
mov
mov
test
jge
bound
es
sti
lret
jle
loop
in
scas
mov
dec
mov
push
lret
mov
jp
pusha
add
xlat
iret
mov
in
sti
movsl
aaa
xor
adc
ja
fisubrl
mov
lds
mov
das
push
and
dec
push
ja
loop
outsl
mov
or
mov
pusha
jmp
hlt
sbb
and
and
in
and
fildl
push
iret
insb
push
xor
push
lahf
push
pop
add
mov
scas
pushf
out
stc
adc
call
xchg
inc
jl
out
fisubrl
dec
es
icebp
xchg
adc
int
stos
sahf
ret
jbe
rcr
cmc
in
cmp
pop
imul
lea
mov
sub
mov
and
rcll
mov
inc
pop
sbb
pop
add
push
sti
mov
push
xchg
or
lock
shlb
xchg
ret
cmpsl
sbb
fs
mov
mov
insl
fsubs
push
cli
mov
clc
jne
data16
sub
les
jno
lcall
adc
out
xor
mov
cmc
pop
dec
push
sub
pop
lds
xchg
xor
inc
inc
mov
test
add
push
pop
inc
outsb
jo
pop
enter
inc
hlt
movsl
bound
cmp
xchg
out
dec
mov
cli
aas
sbb
mov
xchg
imul
gs
cld
cmpsl
jne
inc
insl
aas
xlat
insb
push
into
cmp
xor
mov
clc
setle
pop
lret
in
divb
lea
inc
pop
mov
insb
add
iret
cmc
cmp
pop
push
test
jmp
lret
ss
cs
das
test
mov
cwtl
mov
ja
jno
sahf
bound
jle
mov
outsl
dec
cs
dec
inc
cmc
repz
fnsave
repz
adc
push
jns
fstpt
lcall
dec
push
rclb
mov
popl
adc
in
add
push
mov
int
imul
sti
dec
jge
dec
xchg
ret
repnz
sub
xchg
xchg
dec
fdiv
push
mov
pop
shrb
sbb
adc
mov
xor
das
xlat
cs
pushf
and
sub
in
sub
mov
xchg
fs
daa
lcall
add
dec
inc
mov
je
notl
lods
cmp
test
jo
and
aas
loope
ja
ret
pop
inc
sbb
mov
push
dec
mov
leave
jae
add
nop
xor
push
imul
jb
les
cmp
dec
inc
jb
pop
inc
jg
jne
lea
and
setge
js
sbb
pop
sahf
lds
arpl
jae
push
sbb
xchg
clc
pop
lods
sub
jno
mov
mov
jg
flds
push
arpl
icebp
dec
xchg
xchg
jbe
sbb
push
pushf
adc
sarb
xor
es
inc
pop
jle
cmp
lret
mov
imul
xchg
mov
call
in
arpl
push
jl
test
adc
stos
sbb
xchg
das
cmp
xchg
lcall
ds
inc
shrl
stos
push
loop
insl
xchg
mov
aaa
sub
pop
dec
or
orb
mov
inc
popa
jp
lock
inc
xchg
xchg
jg
in
inc
push
sarl
movsb
repz
mov
xlat
or
in
mov
and
ljmp
testb
outsb
sbb
inc
mov
inc
mov
repz
daa
decl
int
mov
shlb
rcrb
sti
das
icebp
sahf
xlat
jle
aam
xchg
or
bound
adc
rcrb
push
inc
pop
mov
jl
mov
dec
push
sub
push
fidivrs
inc
adc
sbb
lods
dec
adc
sbb
or
dec
inc
push
cmp
push
pop
xchg
in
and
push
sbb
mov
je
mov
xlat
test
clc
add
sub
scas
dec
and
arpl
popa
jne
popw
into
outsl
fs
mov
scas
mov
mov
mov
add
or
ss
push
out
fidivrl
mov
sbb
and
xor
out
in
imul
jbe
sbb
sbb
or
push
sbb
lds
bound
outsb
ss
fistpl
sbb
cmpsl
xorb
pop
loopne
in
push
dec
sub
bound
xor
jle
daa
sub
xchg
xchg
cmp
sub
ret
ret
cmp
pop
andb
xor
xor
lret
jbe
cltd
and
fiadds
jo
bound
test
es
loope
cmpsb
pushf
test
clc
test
cmp
pop
pop
jmp
push
jl
xlat
aas
pop
ljmp
xchg
push
mov
jo
fwait
mov
cs
sbb
xlat
mov
and
xlat
scas
push
imul
out
push
xor
or
mov
dec
daa
repz
repz
movsl
dec
add
cmp
dec
int
mov
or
mov
hlt
pop
gs
out
aad
jo
loop
adc
cli
pop
or
setae
in
mov
jle
dec
in
mov
enter
sbb
rcrb
mov
mov
adc
jae
ret
adc
nop
popf
in
inc
xchg
or
and
dec
lcall
cmpsb
xchg
pop
outsl
lcall
ret
ret
in
popf
stc
fstl
leave
push
push
sub
jb
sbb
in
in
lret
ss
pop
dec
xchg
out
clc
adc
cmp
popl
repnz
aam
jmp
js
lahf
pop
in
frstor
repnz
jb
hlt
lahf
push
add
xor
lds
cmp
sub
adc
cmp
cld
mov
push
sbb
jg
or
xor
push
lods
or
jno
test
adc
mov
loopne
mov
jp
in
push
jnp
add
in
pop
fldcw
aam
add
xlat
sbbl
jbe
lea
out
fs
or
adc
mov
outsl
bound
imull
insb
stc
or
lret
jb
inc
aas
sbb
xorl
mov
hlt
repz
add
lret
xchg
xchg
repnz
push
cmp
sbb
mov
les
and
add
inc
nop
pushf
test
sub
dec
mov
out
adc
cmpsb
cmpl
test
adc
mov
stos
adc
mov
jp
negl
xchg
sbb
out
jb
sbb
or
cli
mov
jl
lahf
int3
push
push
push
in
aad
bnd
jbe
push
cs
cmp
inc
sbb
leave
int3
shr
jmp
aad
fcoms
xor
ds
push
cmp
test
int3
lahf
jp
imul
int3
ret
push
test
xchg
stos
add
adc
insl
sbb
dec
or
in
fistl
cmpsl
shlb
dec
lahf
add
insl
std
add
lea
sbb
adc
pop
loope
sub
stos
jg
mov
outsl
sub
push
dec
jmp
push
hlt
dec
and
aam
idiv
insb
stc
or
cmp
cmp
pop
fsubrs
add
cmpsl
mov
movd
push
leave
pop
icebp
ret
push
inc
lahf
sub
pushf
mov
jl
or
or
xor
hlt
cs
cld
fisttps
outsb
out
mov
nop
jecxz
and
aas
cs
mov
push
pop
jmp
dec
push
sti
xorb
movb
shlb
iret
leave
inc
mov
dec
repz
mov
jns
cmpsl
cld
mov
jo
inc
cli
sahf
lret
fdivrl
jmp
lock
les
sub
or
pusha
insb
adc
push
push
or
pop
fucomi
lahf
int3
popa
xor
test
pop
adc
mov
add
and
xor
aam
xchg
aam
add
pop
pop
insl
sarb
cmp
in
lds
fmull
mov
mov
in
dec
jno
push
sub
rcrb
shll
xor
jmp
jae
add
cmpsb
jmp
shll
mov
cltd
aaa
pop
add
mov
scas
imul
xor
inc
cltd
mov
scas
les
dec
fs
add
cld
push
arpl
push
push
psadbw
xchg
add
pop
adc
or
and
lods
inc
and
dec
lock
jg
scas
sub
call
sbb
sahf
mov
test
xchg
jmp
xor
push
rcll
mov
imul
mov
adc
mov
mov
jo
mov
hlt
js
xor
int
insb
outsl
jo
aad
ljmp
stc
out
mov
lea
sahf
int
xchg
aas
scas
jmp
int3
test
stos
fucomp
jbe
cltd
cld
mov
sti
pop
pushf
mov
pop
movsl
xchg
notb
rcrb
and
lds
aaa
fildl
imul
icebp
or
adc
hlt
arpl
fnsave
pop
sub
mov
mov
pop
out
dec
cmpsb
packsswb
scas
cmp
test
jmp
aad
test
cmp
fsubrl
fs
inc
cmp
mov
cmp
push
stc
cmp
inc
cmp
insb
jle
add
dec
daa
inc
rcr
xlat
jg
leave
stc
testb
or
lods
popa
xchg
aad
push
fldenv
fs
xchg
ljmp
dec
push
jns
fsubrl
rorb
jge
pop
lret
add
popf
fcompl
dec
jmp
sub
pop
push
pop
sub
add
je
and
sbb
in
dec
jo
dec
ret
xor
inc
sbb
lcall
jae
mov
mov
mov
addl
out
popa
jp
icebp
xor
mov
fcomps
pop
pop
fs
mov
dec
aam
rolb
mov
xor
mov
aaa
imul
jmp
xchg
dec
call
push
inc
ficoml
sbb
scas
shrb
mov
int3
xorl
int3
adc
out
cmp
test
lret
loope
cli
les
call
sub
into
and
repz
xchg
divb
mov
mov
mov
scas
push
scas
sub
int3
or
pushl
mov
inc
fcompl
jns
stos
shrl
and
pop
push
push
pop
and
push
xchg
testb
stc
pop
add
out
mov
mov
cmp
xchg
daa
fs
sbb
aad
gs
xchg
test
jp
cli
insb
sbb
mov
addb
jecxz
push
test
pushl
and
subb
jle
loope
out
xor
mov
xor
or
ss
mov
in
js
mov
and
repnz
and
lahf
pop
gs
cmc
dec
and
fld
push
cmpsl
or
or
rcrl
rcrl
je
push
iret
stos
das
fiaddl
int
popf
adc
pop
stos
in
adc
addl
xchg
cmp
and
test
and
popa
pop
stc
sahf
or
push
fcoms
jecxz
sbb
sbb
mov
sbb
outsl
cli
lret
out
outsb
imul
inc
loope
mov
pop
pop
or
popa
es
loope
mov
std
sub
mov
stos
negb
adc
out
pop
mov
ret
aas
cli
mov
popf
mov
mov
scas
xor
inc
gs
call
punpckhdq
rorb
mov
in
arpl
jmp
ja
cmp
stos
pop
subl
and
sub
mov
clc
insb
adc
inc
mov
jge
lock
fmuls
pop
rdpmc
lods
xor
inc
mov
clc
xchg
push
in
loope
dec
jg
push
xorb
pop
xchg
dec
int
test
fdivrs
add
lods
ret
out
sar
mov
int
data16
jns
inc
mov
push
pop
pop
xchg
lcall
dec
in
scas
stos
in
jle
cmp
das
sbb
inc
mov
int
sbb
mov
or
adc
pop
lods
out
lret
push
pop
jge
scas
mov
xchg
into
and
dec
fstpl
inc
jbe
pop
mov
imul
inc
dec
adcl
mov
push
pop
arpl
jp
aad
pusha
pop
push
loopne
hlt
cmp
push
mov
je
orl
movsl
inc
or
xlat
push
fwait
xchg
xor
mov
jbe
popa
push
popf
mov
adc
loopne
fstl
add
dec
fidivrs
ds
add
push
mov
jecxz
mov
nop
xchg
mov
xchg
pushf
shll
div
shl
sbb
femms
mov
pop
inc
pop
int
push
inc
or
inc
out
push
lea
xlat
pop
ds
cmp
nop
fimuls
pop
sbb
rclb
imul
scas
xchg
push
xlat
cmp
push
jb
lea
outsl
add
dec
mov
and
pop
std
jl
cmp
sahf
scas
mov
dec
push
sbb
out
jo
xchg
mov
inc
data16
and
mov
push
pop
pop
and
in
dec
pop
scas
negl
xchg
repz
cmpsb
mov
mov
push
icebp
cmc
ljmp
fs
jne
jnp
jge
jno
lds
dec
jmp
mov
adc
ret
lods
xchg
xor
mov
pop
and
adc
test
arpl
mov
dec
popa
enter
xor
iret
int3
stos
fadds
js
call
popf
gs
rcl
inc
aam
add
mov
pushf
rcll
mov
roll
rorl
shr
arpl
adc
adc
lret
and
jecxz
lcall
mov
mov
add
xchg
mov
inc
pop
insb
sub
lret
mov
sbb
dec
aam
nop
cld
dec
outsb
js
imul
mov
loop
sbb
test
mov
pop
xor
decl
pop
scas
mov
imul
lret
or
pop
nop
scas
pop
xchg
jge
jmp
stos
lret
xchg
cmpsb
data16
jle
mov
into
in
jge
adc
lcall
jb
cmp
shl
movsl
sbb
push
dec
push
test
js
lret
sbb
adc
pop
and
das
fisubl
and
jae
fcom
add
add
sub
xchg
fcoms
or
in
push
sbb
arpl
or
out
cmp
orl
mov
dec
mov
sub
std
inc
or
cmpsl
adc
sub
cwtl
mov
pop
cld
fcmove
sub
dec
xchg
das
xor
sub
cmp
das
push
loopne
mov
push
xchg
addr16
push
lds
mov
out
pop
xor
rolb
lea
cmpl
push
mov
mov
je
addr16
mov
movsb
imull
sub
adc
inc
dec
cmp
cli
adc
mov
outsb
mov
mov
mov
insb
mov
sbb
push
jb
and
xlat
imul
sub
insl
sub
out
ficompl
mov
fisttpll
shrl
cmp
cmc
rclb
inc
mov
or
add
cmp
pop
adc
movsb
flds
rcrl
insl
out
outsl
dec
scas
and
add
imul
jnp
movsbl
sti
gs
push
jne
mov
inc
aas
mov
std
ljmp
mov
adc
test
inc
out
int3
jg
xlat
ss
xlat
fbld
mov
sbb
movsb
outsl
dec
cli
ret
in
sub
negb
fucomi
outsb
mov
jge
dec
mov
mov
in
jge
int
and
inc
stos
inc
cmp
cmc
pop
adc
cmp
and
push
scas
icebp
xchg
nop
mov
pop
inc
popf
add
mov
stc
mov
cmp
cltd
dec
sahf
jle
dec
ret
dec
mov
cmp
add
jb
xor
sub
push
cli
lods
cmpsl
nop
mov
dec
loop
xor
gs
inc
push
cs
ljmp
andl
incl
rcr
mov
idivl
xchg
inc
out
ret
nop
out
inc
push
push
xor
repnz
int
out
mov
or
fistpll
adc
pop
pop
add
inc
jp
xor
dec
dec
push
or
cltd
inc
pop
pushf
das
lret
into
leave
pop
out
shlb
cmpsb
test
daa
fidivrl
roll
dec
xchg
mov
jne
ret
sbb
push
pop
jmp
mov
inc
std
jl
inc
ss
mov
hlt
incl
fstps
mov
je
int
in
loope
cmp
push
lcall
adc
cmp
loop
movsb
push
out
adc
push
mov
stc
sbb
outsb
flds
test
sub
add
popa
mov
mov
xlat
and
or
fucom
pop
pop
dec
insl
lret
scas
sahf
sub
imul
ret
xorb
sub
lds
cmp
cmpsl
pushf
cmp
pop
sbb
insb
mov
ds
data16
pop
pop
sub
imul
lods
ds
pop
faddp
call
mov
mov
lock
mov
jge
xor
aam
push
and
sub
mov
rorb
mov
sub
sbb
ficompl
mov
push
inc
xor
xchg
cmpsl
mov
ljmp
mov
insl
mov
and
jmp
frstor
xchg
mov
mov
adc
jge
int3
pusha
gs
mov
push
xchg
sahf
dec
or
xchg
andl
push
sub
aam
test
outsl
pushf
jmp
dec
xchg
cli
pop
mov
insl
and
xor
es
xchg
aam
aas
cmp
cs
or
sbb
mov
and
arpl
sub
arpl
das
das
stc
mov
aas
and
adc
mov
xlat
inc
mov
cmpsl
push
outsl
test
xchg
mov
jnp
jecxz
leave
mov
out
mov
mov
add
xchg
cmpl
lods
mov
cmp
inc
jg
and
jmp
js
sahf
or
push
push
cmp
dec
arpl
ret
mov
ret
dec
mov
cmp
sub
push
dec
mov
adc
loope
mov
or
repz
repnz
xchg
xchg
mov
test
cltd
jo
or
xor
movsl
pmulhuw
fstps
adc
fdivrl
loopne
mov
test
data16
outsb
cmpsb
cmp
testl
cmp
jecxz
repnz
scas
cmp
mov
or
jg
ss
cmp
aaa
mov
sbb
adc
daa
push
lods
out
in
test
mov
call
dec
mov
push
inc
imul
jl
sbb
lods
and
out
outsb
es
add
std
ret
mov
xor
stc
pop
imul
cmc
sbb
push
add
dec
phsubw
fstl
into
inc
pushf
jecxz
fsubr
mov
out
cmp
xor
push
cmc
xor
mov
sub
add
sub
xchg
or
mov
sbb
arpl
mov
mov
rorl
das
push
jp
inc
cs
mov
fcom
and
addb
scas
movsl
std
dec
ja
fisttpl
in
adc
mov
jmp
mov
jbe
ret
add
dec
jecxz
iret
rcrl
mov
add
dec
mov
mov
imul
sbb
and
std
into
shlb
push
or
mov
cmpsl
xchg
enter
inc
xchg
mov
insl
test
mov
mov
push
and
jle
xor
xor
mov
scas
cltd
in
movsl
sub
outsl
mov
cmpsl
push
jle
jecxz
xchg
mov
pop
xchg
inc
lret
gs
mov
ret
mov
mov
jbe
test
inc
or
jo
sbb
add
sbb
mov
das
cmp
lahf
push
bound
dec
rcll
push
shl
aam
push
xor
popf
fwait
imul
mov
push
mov
test
out
fs
mov
mov
div
loopne
jle
inc
inc
xor
mov
sbb
xlat
mov
adc
add
push
adc
sub
mov
mov
ret
jnp
inc
push
shll
jge
push
pop
insl
orb
stos
or
rorl
idivb
jns
sbb
fdivrs
xor
xor
dec
es
cmpsb
jb
je
adc
pop
pop
jecxz
mov
std
mov
cmp
aad
pushf
call
cmp
into
mov
mov
jno
leave
scas
pop
mov
idivb
lea
adc
int
scas
sub
dec
mov
dec
mov
call
js
lock
popa
stos
xlat
sbb
add
or
mov
aaa
cmpsb
add
add
sbb
and
fisttpl
fnstcw
aaa
jg
push
inc
gs
dec
cmpsb
outsl
test
pop
pop
cli
jle
add
mov
or
test
nop
push
and
xchg
mov
ljmp
and
jmp
je
lret
in
into
and
xlat
cmp
sub
gs
rcll
mov
or
repnz
lahf
sub
sbb
test
xchg
and
into
mov
push
shll
jmp
ror
xor
sbb
cltd
mov
enter
daa
outsb
int3
adc
in
adc
inc
push
pop
fisttpl
push
aas
inc
xor
jne
pushf
pop
stos
outsl
stc
clc
ljmp
cmp
clc
mov
sub
out
mov
ds
sbb
lcall
jg
in
pop
ret
into
stos
push
mov
iret
es
loop
push
movsb
ljmp
cmp
jb
jp
ficoms
outsl
sub
mov
lods
test
jp
xor
push
pop
xor
fbstp
stos
mov
jl
mov
aam
mov
mov
out
aas
xchg
or
inc
pop
test
or
negl
mov
jbe
cli
mov
fnstcw
lret
sub
test
jne
adc
add
push
cmp
push
outsb
inc
xor
inc
mov
xor
add
xchg
ror
lock
ljmp
or
sahf
xchg
sub
arpl
mov
mov
andl
or
jae
fisttps
loopew
nop
pop
insb
shll
sub
push
mov
repz
enter
sub
cmp
jnp
mov
rep
rcr
mov
fistl
inc
mov
sbb
and
repnz
rorl
mov
aas
lret
inc
sub
es
fdivrs
push
xor
push
or
fistps
adc
adc
rolb
xor
mov
aad
sbb
xchg
loope
sti
ror
pusha
add
les
xchg
add
dec
andb
jg
fwait
cld
adc
popa
jno
sahf
and
dec
sub
xchg
sub
cmp
mov
ret
outsl
push
std
sahf
cwtl
mov
xor
movsl
fistps
incl
arpl
fildl
scas
stos
fwait
orl
sub
icebp
sbb
fcoms
sub
mov
inc
push
mov
push
clc
sbb
rcl
fs
and
js
or
aas
add
fadds
movsl
ljmp
out
mov
mov
add
fs
sub
mov
xorl
mov
adc
mov
sbb
lds
cmp
adc
mov
cltd
cmp
lds
xor
xor
sbb
hlt
dec
out
data16
not
dec
pop
dec
add
and
andb
je
xor
test
add
test
aaa
pushf
adc
and
lea
pop
movsl
push
pop
push
stos
ss
sub
inc
inc
xor
pop
mov
xor
mov
loope
mov
jns
clc
or
fimull
test
iret
xchg
outsl
leave
movsl
idiv
sub
std
pop
aas
popa
int3
jle
aad
lahf
and
out
insl
dec
rcl
push
inc
mov
push
cmpsl
sbb
clc
cmpsl
and
push
xchg
iret
inc
cmc
sbb
push
dec
xchg
cmp
jbe
jno
pop
mov
pop
mov
pop
faddp
push
jae
push
shr
loop
mov
and
mov
cmp
sarb
add
fildl
fmuls
and
xchg
add
clc
adc
and
push
xchg
inc
shl
sar
adc
sub
mov
imul
xorb
clc
mov
jp
cmpsl
mov
mov
pop
imul
cmc
jge
or
repnz
mov
mov
adcl
pop
lock
std
sub
call
sbb
cmp
add
mov
mov
push
push
cmpsb
add
mov
mov
adc
or
mov
pushw
jmp
repz
inc
sub
neg
sub
mov
stos
or
ds
mov
push
pop
push
faddp
rcl
mov
mov
inc
fcoms
pop
inc
pop
andb
cmp
aad
adc
lret
stc
xor
std
push
push
xor
mov
and
dec
cltd
xchg
imul
scas
mov
and
xchg
xchg
ds
add
and
pop
xor
ja
pop
pop
pop
fwait
jl
lods
mov
dec
fdivrl
icebp
call
xchg
mov
clc
int3
or
adc
fsubrp
xor
je
pavgb
ret
push
mov
mov
ret
hlt
mov
dec
pop
dec
cmp
movsb
jecxz
mov
andb
daa
inc
mov
cld
lret
add
in
or
jne
sti
jg
nop
dec
and
cmpsl
repz
mov
pusha
or
jmp
rcrl
outsb
std
xor
out
xor
aaa
out
cwtl
mov
dec
int3
inc
push
mov
jns
lock
movsb
and
mov
sbb
xchg
inc
pusha
sbb
outsb
iret
inc
rcl
mov
cmpsb
jo
sbb
lea
cwtl
repnz
mov
lahf
mov
aaa
aaa
and
dec
ja
fildll
mov
out
out
mov
inc
dec
jnp
mov
xor
lret
int
shr
popf
jo
sub
xor
ds
mov
jmp
fadds
sub
sub
sub
test
int3
movsb
aas
imul
sbb
fs
outsb
out
cld
out
imul
fistps
jno
jae
pop
into
in
xor
and
retw
out
push
jmp
in
jb
dec
inc
mov
jno
xchg
ss
into
rcll
in
dec
ret
leave
jle
enter
aas
in
rorl
bound
dec
sub
aad
pop
xchg
mov
jae
add
loopne
push
shrl
pop
sub
mov
cmp
push
xor
imul
arpl
pop
pop
insl
aas
movsl
push
mov
dec
icebp
adc
adc
pop
and
mov
mov
ret
and
mov
sub
arpl
mov
lret
add
pop
mov
repz
sub
sahf
inc
jno
push
repz
les
pop
dec
mov
filds
mov
xchg
inc
mov
repz
and
pop
push
std
scas
jbe
lahf
cmp
mov
xor
rclb
in
xor
cmc
lods
mov
add
sub
mov
mov
cs
inc
mov
jge
and
push
je
jecxz
aam
fwait
and
push
jge
xor
fs
or
mov
shll
sbb
mov
fwait
mov
xchg
mov
les
mov
dec
test
xor
test
lcall
mov
xchg
inc
jbe
cld
stos
cmp
and
dec
mov
lcall
sub
fcoms
xchg
sarl
cmp
inc
and
sub
mull
jno
push
ljmp
inc
cmp
mov
test
pop
pop
loop
and
sti
push
call
sahf
add
aad
sub
mov
ret
mov
adc
cmc
fbstp
inc
add
xchg
fdivr
mov
cld
xchg
xchg
sub
adc
mov
xchg
inc
rorb
cwtl
pop
es
lock
cmpl
lods
pop
pop
outsb
jmp
push
cmp
xchg
sarl
es
jmp
push
sub
ror
mov
insl
mov
stos
inc
shl
xchg
aad
lcall
adc
mov
fistpl
or
repz
out
test
or
shlb
xor
das
jbe
cli
mov
pop
add
gs
jecxz
adc
and
ret
dec
and
jl
sub
pop
jecxz
rcr
xor
lea
lods
fs
das
int3
add
in
adc
jecxz
sbb
int3
js
jg
outsl
mov
push
scas
sbb
fldl
scas
inc
mov
jne
push
insb
cltd
test
mov
lahf
cmc
xchg
stos
pop
mov
fdivl
ja
pop
jb
push
xor
inc
sar
jl
scas
scas
mov
mov
fsub
and
stos
lods
ljmp
sub
cmp
cs
lock
sbbl
cmp
ss
adc
push
popa
dec
or
jl
divb
cwtl
ljmp
daa
stos
xorl
xchg
push
ljmp
or
dec
xlat
jg
lock
cmp
or
push
aam
adcb
fisttpl
int3
bound
cltd
xchg
sub
shl
lods
sub
nop
jle
pushf
in
lahf
cmpsl
test
add
mov
fwait
lock
test
and
ffree
out
sub
mov
jae
fcompl
loop
xchg
ret
nop
sarb
scas
cmpsl
outsb
mov
fstl
pusha
or
jns
js
cwtl
movsb
mov
popf
push
and
jo
fistpll
lret
push
loope
xor
cmc
cmpsl
sahf
stc
out
inc
push
xor
xor
mov
adc
pop
add
xchg
mov
jns
je
out
and
mov
or
mov
xor
pop
and
test
pop
dec
lods
push
ja
mov
mov
cwtl
aad
scas
xchg
or
ds
push
movups
jb
iret
pop
xor
xchg
aad
push
in
jb
sub
inc
jbe
mov
push
jp
jo
push
cmp
mov
inc
sbb
test
fisttps
out
cmpsl
ret
lods
inc
dec
pop
leave
out
xor
arpl
inc
aad
cwtl
dec
leave
push
movsl
sub
xorl
or
or
or
mov
popa
and
repnz
jns
adc
and
int
les
outsl
mov
jo
pop
gs
push
pop
mov
outsb
adc
or
stos
data16
mov
mov
in
pop
stos
leave
mul
xor
xchg
insb
int3
mov
mov
fstl
loop,pn
xchg
mov
cmpl
dec
xchg
mov
push
je
xchg
jno
add
fxch
jns
rorb
jbe
shrl
and
cltd
sub
stc
aaa
sbb
imul
sbb
outsl
test
add
mov
lods
adc
leave
ret
push
std
fisubrs
imul
imul
sub
in
and
in
jmp
out
inc
into
icebp
pop
mov
push
les
negl
mov
jbe
cmp
xor
lock
fistpl
mov
mov
out
inc
jmp
into
fwait
enter
ljmp
shrl
out
shlb
and
in
inc
mov
mov
adc
jo
call
int
lcall
pop
outsb
movsb
push
lret
insl
rcrb
dec
std
pushf
addb
bound
fcmovb
sahf
xchg
sbb
push
xor
push
push
and
xchg
fs
lock
loopne
frstor
lret
int
or
mov
mov
dec
cltd
xchg
int
jb
push
es
pop
sbb
aam
jo
cwtl
fists
std
mov
sbb
cmp
imul
add
mov
or
push
out
mov
push
and
mov
insb
lock
mov
dec
xchg
lret
aad
stc
repz
les
lret
mov
adc
push
scas
xor
insb
outsb
pop
add
and
iret
pop
sahf
bound
shrl
lods
pop
lahf
mov
xor
sub
mov
out
and
jle
inc
jecxz
mov
lea
mov
or
in
sbb
mov
incb
push
mov
jne
fcomip
push
push
inc
dec
cmp
lret
mov
js
push
test
inc
arpl
inc
push
test
dec
pop
mulb
mov
jmp
sbb
sbb
push
rorl
in
cmp
pop
add
push
mov
xor
xchg
and
cmp
in
push
mov
ljmp
pop
sub
cltd
lock
mov
mov
aad
jnp
ret
cli
fstpl
or
adc
pop
sub
lret
fadd
repnz
in
adc
lods
add
fcmovu
jecxz
and
jbe
push
cltd
mov
push
dec
sbb
movsb
repnz
pop
mov
movsb
iret
and
in
or
into
mov
ret
sbb
lock
pusha
insb
inc
in
mov
scas
pop
iret
sbb
adc
adc
add
adc
inc
scas
lahf
mov
push
sbb
insl
ficompl
mov
shrl
clc
and
rol
adc
movsl
testb
xchg
cmp
mov
fs
mov
lret
cld
add
bound
jle
inc
push
and
mov
in
daa
pop
arpl
mov
pop
jae
jbe
mov
adc
loopne
scas
inc
xor
mov
insl
es
add
and
js
insb
jge
mov
cli
lahf
jb
cmp
fisttps
ss
rcr
scas
or
ljmp
dec
stc
sahf
orl
cmp
scas
inc
fwait
lea
or
mov
cwtl
push
fsubs
xor
inc
sarb
push
imul
jg
pop
nop
outsb
cmpsb
aad
jmp
movsb
mov
xchg
dec
insl
fdivs
cmpsb
push
repz
push
addr16
sub
loop
lret
enter
jg
cld
mov
jo
das
mov
add
xchg
dec
js
inc
adc
cli
inc
les
push
pop
imul
cmp
clc
ds
push
cmp
or
cmpsl
mov
rol
push
fisttpl
jbe
lock
or
or
jbe
fadds
sub
hlt
jp
in
movsb
and
ds
pusha
adc
push
out
xchg
loope
movb
xor
bound
mov
xchg
push
xchg
mov
and
push
xor
inc
pop
push
sub
aas
pop
sub
sbb
jb
mov
scas
aas
xchg
jno
pop
jno
pop
loopne
dec
test
jp
mov
push
es
leave
mov
cmp
mov
icebp
jne
outsl
pop
int3
outsb
mov
stos
xor
jbe
xor
xor
lods
and
addr16
push
add
loopne
pop
sub
mov
fs
clc
cmp
dec
and
fldpi
stos
rep
pop
shrl
jp
push
and
add
mov
adc
sbbb
cmp
stos
sbb
xor
addl
test
jns
fistpl
out
out
pushf
scas
prefetchw
in
push
xor
xlat
xchg
adc
ror
sbb
ljmp
push
push
mov
jp
jbe
into
mov
out
hlt
leave
sbb
sarl
out
add
pop
xor
push
xchg
std
sub
mov
sub
lds
add
outsl
je
repz
xchg
add
pop
dec
inc
les
and
jmp
lock
cmp
xchg
popa
faddl
mov
shlb
lea
outsb
pushf
mull
cmp
add
add
shrb
push
push
mov
loop
cmp
stc
aas
or
xor
ja
xchg
jmp
mov
jns
cmp
inc
mov
call
sub
das
mov
or
bswap
inc
sbb
jge
cmc
lods
add
test
nop
loop
iret
scas
jp
insl
pop
cwtl
mov
jle
and
pop
lock
scas
mov
icebp
pop
push
bound
aad
push
cmp
inc
fcmovbe
sub
add
rorl
mov
mov
pop
subb
sarl
lret
lcall
jge
sub
data16
lret
movsl
mov
cli
rcrl
int
pop
cli
out
scas
xchg
out
push
fs
push
enter
in
sarl
in
cmpsb
jp
push
int3
inc
lock
jno
push
dec
sub
fistpl
rclb
push
in
movsl
data16
push
push
enter
hlt
cmc
mov
or
sub
lea
push
push
call
addr16
loop
popa
lret
fmul
mov
lret
add
pusha
fwait
test
out
imull
push
adc
and
cwtl
je
rcll
add
mov
pop
addr16
mov
add
scas
ja
mov
cmp
mov
xor
inc
sub
dec
push
outsl
test
aam
movaps
jp
mov
pop
xchg
dec
mov
dec
cmp
movsb
enter
push
xor
cmp
dec
scas
xor
xchg
fnstenv
cmp
xchg
dec
adc
sbb
push
ds
or
mov
out
sbb
mov
clc
mov
inc
mov
mov
scas
push
push
and
popa
cmp
cli
and
outsb
in
jo
cli
mov
xor
push
jp
icebp
jle
add
or
mov
add
inc
or
xor
jge
pop
inc
xor
leave
sahf
ljmp
sbb
cmp
pop
stos
add
mov
fmuls
jo
popf
push
shrl
repnz
enter
push
mov
int
ficompl
lods
cli
shr
mov
loopne
jbe
sub
cwtl
mov
xor
inc
lock
push
cld
test
jle
outsl
jbe
xchg
push
clc
cmp
dec
mov
enter
ljmp
mov
loopne
fisubrl
inc
mov
jl
cs
shlb
jp
push
aam
test
pop
xor
sub
mov
les
xchg
jno
push
clc
mov
in
out
sub
js
lahf
insb
mov
cwtl
mov
orb
ret
sti
test
mov
push
lds
lahf
shr
gs
adc
subb
stos
mov
fsts
jecxz
jno
aas
insl
out
inc
fisubs
add
cld
mov
adc
xor
shll
xchg
push
sbb
inc
pop
inc
enter
push
stc
or
xchg
out
push
and
add
xchg
daa
test
mov
ret
scas
add
mov
jo
movsb
sbb
push
insl
fists
ja
dec
pop
stos
pop
push
jbe
cmp
adc
pmulhw
repz
dec
aam
cwtl
adc
cwtl
test
scas
out
pop
out
cli
icebp
add
and
xor
divl
inc
mov
std
mov
xchg
xchg
lret
stos
push
jne
in
loop
jl
rcll
fbld
inc
lret
out
mov
xchg
into
fwait
sarb
pop
mov
jmp
sub
sub
fisubrs
pushf
push
enter
inc
fcoms
mov
adc
mov
arpl
jg
js
or
lahf
cmpb
in
inc
and
fwait
cmc
stc
xorb
fists
mov
pop
and
push
or
rorb
mov
and
xchg
inc
and
cmp
lock
lea
arpl
ja
mulb
or
movsl
loope
mov
out
cld
jmp
jno
or
out
fsubrs
das
xchg
fistl
sahf
cmpb
ret
jle
arpl
cmp
std
dec
mov
fs
xor
push
movsl
addr16
js
in
and
aas
or
cwtl
adc
test
mov
or
cwtl
fistpl
mov
mov
popa
mov
xlat
mov
mov
cld
ret
sbb
aam
pop
shll
xchg
mov
cmpsb
or
jp
xor
push
jns
fstpt
xchg
shrl
xchg
inc
aad
adc
xor
dec
push
mov
rclb
cmp
int3
push
jns
sub
in
pushl
std
jmp
sub
xor
ret
and
push
mov
sub
dec
cmp
push
rcl
jle
loope
shrb
or
iret
int3
out
push
lea
adc
rcl
sbb
out
xor
repnz
pusha
int
ja
aam
movsb
inc
js
daa
scas
lret
xchg
idivb
inc
dec
jp
dec
lock
data16
call
lcall
sbb
dec
cmpsl
daa
rorl
out
fcoms
xor
out
sbbl
data16
jle
outsb
leave
add
pop
push
lahf
popa
and
and
xor
stc
or
in
out
insb
test
cwtl
jp
ret
xchg
mov
test
inc
adc
cmpsb
insb
cmpsl
fnstsw
cld
and
mov
cmc
pop
in
jp
push
dec
cmp
push
mov
jmp
cmp
xchg
xchg
sub
bound
cmp
iret
loope
ret
call
test
shll
scas
pusha
out
cmp
sbb
mov
push
insl
repz
std
cmp
cmc
mov
add
xor
xor
add
sub
push
pop
pop
pop
xor
jle
xor
stos
addb
mov
mov
enter
pop
inc
int
push
jno
aaa
jp
add
xor
repz
repz
sub
pop
adc
in
in
mov
cmpsl
das
mov
jno
adc
cmp
fwait
mov
sub
ss
add
testb
movsl
ds
lea
xor
mov
mov
cwtl
sub
mov
push
dec
adc
shrl
add
mov
mov
shr
sub
xchg
sarb
in
mov
cltd
repz
imul
popl
bound
fsts
and
and
std
jmp
pop
xchg
bound
lods
adcb
jecxz
dec
movsb
jne
adc
into
adc
push
cmp
mov
ljmp
bound
popa
lock
fxch
sbb
jbe
je
sbb
adc
decb
ret
mov
mov
sub
and
mov
xchg
add
cmpsl
lds
or
mov
stc
mov
ljmp
out
loop
sbb
inc
or
mov
push
test
adc
jb
mov
in
sub
xchg
outsb
or
cmpsb
jne
lcall
sub
xchg
mov
sbb
movsl
add
std
sbb
add
stos
push
mov
adc
sbbl
cmpb
pop
inc
loope
pop
pop
sbb
fisttps
aad
push
and
ret
pop
jnp
jo
xor
sub
imul
stos
mov
loopne
or
scas
loop
sbb
cltd
inc
or
pushf
inc
or
push
cs
in
rorl
clc
loope
shll
fisttpll
inc
cwtl
mov
pop
aaa
mov
add
test
xor
vpsubusb
addl
popf
cmp
aam
push
int3
test
cwtl
mov
inc
in
aas
movsl
out
data16
std
inc
fldenv
outsb
aas
mov
jmp
stc
lahf
popa
sub
mov
inc
test
dec
jmp
jns
clc
xor
push
jp
xchg
sub
stos
stc
mov
ds
clc
xchg
stos
loop
fdivl
push
enter
xor
movb
add
stos
pop
add
popf
or
xor
pop
cmp
pop
cmp
push
faddl
fldt
push
and
add
and
frstor
inc
aad
mov
inc
cltd
inc
rclb
subl
incb
insb
push
push
push
scas
loop
dec
inc
cmp
scas
fimuls
and
or
fadd
push
mov
rclb
mov
daa
int3
mov
add
mov
adc
fiadds
pop
dec
push
dec
or
call
push
mov
and
mov
int
loopne
lock
pop
adc
cmpsl
loopne
mov
pop
fcmovne
xor
mul
shrb
int
adc
ja
cmp
inc
xchg
pop
push
fs
dec
sbb
xchg
out
mov
stos
outsl
xchg
pop
inc
lret
xor
or
mov
mov
cltd
shll
or
xlat
mov
cmp
inc
rcll
fmul
push
outsb
push
pusha
sahf
push
insb
and
pop
fs
adc
loop
shrl
pop
or
outsl
fdivrp
pop
insl
pop
iret
enter
subb
jmp
xor
fwait
jnp
inc
lea
and
scas
xchg
stc
dec
xor
mov
repnz
mov
popf
push
add
imul
add
arpl
mov
ret
fadds
sbbl
pushf
cmp
pop
stos
or
out
mov
mov
hlt
cmp
mov
cmpsb
cmpsb
push
outsl
sub
inc
rorb
insb
outsl
arpl
ficoml
scas
daa
fisubl
xor
or
mov
xchg
rorl
jno
add
mov
dec
mov
fs
add
enter
sub
sub
jmp
test
call
xor
xor
cmpsb
test
jae
mov
push
mov
ret
inc
sbb
es
testb
pop
push
jnp
lahf
jl
push
xchg
in
or
push
movsb
inc
jb
or
sub
xchg
in
jg
divb
addr16
jmp
cmp
lds
out
mov
add
lock
sahf
cltd
repnz
pusha
or
ljmp
data16
int
dec
cmpsb
mov
mov
sub
aaa
addr16
pop
icebp
cmp
dec
hlt
fldl
and
fsub
call
sbb
pop
js
add
loopne
inc
pop
xchg
into
mov
xchg
xor
fistpll
daa
aas
std
or
add
mov
outsl
es
add
enter
mov
mov
jecxz
xor
jl
nop
fmul
xchg
repz
sbb
sub
sbb
jne
fsubrl
lcall
lods
insb
inc
rol
int3
xor
out
in
xchg
jo
sbbl
daa
call
sbb
ret
mov
rorb
dec
mov
xor
xchg
rolb
cmp
cmp
pushf
sahf
mov
dec
mov
and
mov
stos
adc
xchg
and
into
ret
or
das
lock
xlat
jo
xor
aaa
inc
sbb
loope
subb
or
hlt
xor
mov
insl
xchg
sbb
mov
cmpsb
dec
int3
xchg
shrb
incb
dec
mov
cmpsb
jmp
call
or
add
out
pop
or
pop
and
lea
leave
repz
dec
xor
mov
test
out
or
outsb
dec
into
inc
ljmp
in
push
xchg
lret
cmp
mov
out
sub
mov
cmp
xchg
jno
or
out
sub
xor
sub
inc
jnp
into
shlb
es
sub
mov
xchg
lahf
mov
add
sub
xchg
adc
xchg
imul
push
fs
mov
jle
xlat
cmc
popa
dec
into
mov
loope
push
lods
add
shrb
mov
pop
shr
and
push
or
ret
out
rcrb
and
dec
cmp
jp
into
iret
js
xchg
and
push
inc
or
ret
xchg
lret
cmp
jns
mov
and
jge
xor
jmp
jp
add
mov
sahf
ja
mov
adc
dec
pop
call
xlat
fistps
xor
stc
xlat
or
push
sbb
in
mov
psubb
pop
lods
mov
sbb
roll
mov
push
aaa
js
scas
inc
addr16
inc
clc
ss
hlt
mov
mov
stc
mov
pop
mov
sarl
das
pushf
mov
flds
push
jno
pop
es
addr16
push
add
and
lcall
dec
push
sbb
cltd
iret
lret
mov
and
jp
aad
pop
inc
daa
and
nop
scas
pop
mov
frstor
in
lods
pop
push
mov
das
xchg
pop
push
push
jle
cli
mov
ffree
inc
lock
into
rolb
das
xchg
jle
xchg
mov
mov
lret
cmp
add
lret
xchg
stos
sub
or
or
and
pop
in
out
mov
xor
in
cwtl
sbb
call
xor
test
dec
inc
int
out
xchg
jo
stos
fucomp
scas
fisubs
jae
ret
mov
mov
push
xor
out
mov
jbe
ret
sahf
adc
into
clc
push
aad
xchg
jmp
cmp
out
sbb
jne
rcrb
cmpsb
cmp
and
loop
out
jno
push
or
inc
jle
sbb
xchg
pop
std
adcb
push
ret
jg
and
in
add
xor
nop
push
ret
pushf
fsubr
scas
xor
jno
mov
xorb
rcrl
int
push
shlb
xlat
test
adc
daa
testb
sti
mov
dec
pop
hlt
bound
cmp
mov
imul
or
nop
push
mov
std
fidivrs
pop
dec
sbb
in
lahf
jmp
addr16
cltd
insb
jbe
fstpt
cmpsl
fiadds
adc
cmp
jno
dec
jno
jo
mov
ja
ds
or
or
cmc
inc
mov
push
mov
imul
cli
xlat
push
movsb
xlat
or
lret
std
jmp
jne
imul
push
lcall
ljmp
jge
outsb
sub
ret
adc
xchg
adc
mov
idivl
push
dec
sahf
fwait
mov
and
or
fstpt
or
jb
inc
aaa
mov
fimuls
int3
lahf
cltd
cwtl
loope
dec
loop
lret
enter
inc
repz
mov
in
arpl
mov
sub
sub
and
repnz
adc
jp
je
dec
adc
and
push
push
or
das
arpl
mov
scas
mov
dec
pop
xor
loopne
fneni(8087
xor
ds
pusha
cmp
or
inc
jmp
into
cmpsb
and
addr16
leave
mov
jecxz
mov
lret
ja
sub
mov
js
mov
and
repz
ljmp
xlat
lea
jo
mov
stc
pop
scas
je
inc
dec
inc
push
sub
test
outsb
js
out
aas
or
push
mov
xchg
and
mulb
jmp
mov
int
clc
or
test
int
jecxz
mov
mov
in
mov
stos
out
lds
sahf
inc
push
mov
lea
arpl
pop
lods
xchg
mov
out
mov
daa
fcomp
dec
leave
adc
in
push
pop
inc
js
jbe
sbb
xchg
test
test
sbb
xchg
daa
mov
inc
pushf
dec
rorl
xchg
mov
add
sub
push
aaa
mov
insb
clc
sub
daa
mov
in
pusha
stos
leave
xchg
std
and
and
add
loope
add
test
mov
je
mov
or
xchg
mov
cmp
push
sbbb
dec
or
push
cli
xchg
jecxz
pusha
scas
mov
repz
repz
dec
orb
adc
lcall
bound
out
jns
ja
pop
cwtl
jg
pop
push
mov
mov
inc
call
mov
loop
sub
outsb
push
dec
mov
jae
cs
add
inc
xchg
cld
push
mov
lea
repnz
cmp
je
daa
xchg
js
rcll
inc
popf
les
or
jmp
push
xchg
inc
pop
cld
mov
aas
outsl
push
les
rorb
xchg
cld
lcall
or
pop
add
fstpl
mov
push
pop
nop
cmp
cwtl
pop
inc
push
addr16
xlat
dec
xor
imul
pop
or
dec
aam
xchg
sub
mov
add
lcall
icebp
clc
pop
lods
and
xor
arpl
or
sahf
int3
lods
popaw
rclb
jo
aaa
mov
dec
xlat
sub
scas
pop
leave
push
outsb
repnz
dec
shr
stc
xchg
xchg
pop
mov
add
fstpl
xor
shrb
adc
fisubrl
xor
cmc
loope
cld
rorb
pop
orb
adc
push
mov
push
cmp
rclb
cld
push
call
arpl
mov
cmp
mov
test
scas
pop
fs
mov
pop
cmp
mov
sahf
jo
inc
bound
sub
popa
notb
jmp
idivl
jnp
das
jle
inc
shufps
mov
and
imulb
leave
adc
scas
popf
dec
xor
pusha
mov
outsl
and
lea
and
xlat
dec
or
mov
xor
pop
in
cmp
lods
jnp
idivb
bound
xor
jg
sar
movsl
sub
xlat
rcr
jl
not
int3
out
sbb
cmp
ror
rcr
xchg
sahf
push
dec
xchg
push
subb
mov
test
ficoms
lret
push
adc
mov
int3
repnz
inc
pop
loope
movsb
aas
push
xchg
in
add
adc
icebp
mov
pop
mov
stos
xchg
mov
pop
add
fsubrs
in
or
int
jg
push
mov
mov
sahf
jp
aas
add
mov
lret
imul
fs
pop
jno
movsl
push
xchg
xchg
xchg
fimuls
mov
int
jne
or
cltd
pusha
rorl
mov
add
mov
jle
and
pop
jbe
daa
mov
pop
popa
jl
pushf
insb
movsb
or
test
dec
xchg
inc
lret
and
fsubrp
js
fisubl
ret
nop
mov
adc
cmp
jne
nop
outsl
in
arpl
or
fs
les
xor
jo
sbb
push
jno
or
cwtl
ljmp
stc
into
scas
mov
or
xchg
or
mov
in
pop
mov
ret
out
dec
xor
add
xor
test
lahf
negb
jb
or
push
or
dec
gs
int3
loope
lahf
subl
dec
inc
shlb
cs
cmp
mov
fcomi
push
add
je
pop
push
nop
mov
mov
inc
idivl
into
ret
decb
push
iret
push
xlat
lods
aam
xchg
movl
std
sbb
sbb
jbe
ja
xlat
mov
cmp
xchg
mov
daa
test
insl
dec
or
mov
mov
cld
stos
jl
jecxz
pop
out
lret
pusha
ljmp
iret
out
imul
dec
or
das
and
loopne
xchg
outsl
mull
and
adcl
dec
jmp
rol
and
shlb
jmp
inc
cwtl
xchg
add
fwait
movsb
pop
movsl
pop
jmp
or
sbb
cmpsl
sbb
pushf
xchg
dec
mov
test
push
and
lret
ret
jne
mov
stc
loopne
adc
insb
ds
or
lcall
sub
push
jno
mov
sub
lods
xchg
push
push
mov
and
dec
cmp
mov
lea
add
cmp
lret
mov
test
sbb
pop
push
repz
adc
jl
fmull
jecxz
fisttpl
inc
dec
pop
add
jle
mov
mov
mov
or
cwtl
scas
jmp
xor
ja
sub
pop
jbe
inc
int
cltd
int
loop
dec
scas
jbe
cli
jae
mov
mov
jecxz
jb
popa
sbb
stos
loope
mov
xchg
ds
ficoms
cld
mov
loop
pop
dec
or
imul
sub
jmp
test
sbb
mov
adc
jecxz
xchg
sub
cld
mov
sub
rcrb
and
cld
mov
ss
mov
cmp
bnd
std
pop
std
sbb
daa
jb
dec
into
or
test
inc
adc
negb
je
dec
ds
sahf
jge
pop
data16
pusha
push
imul
inc
out
outsl
dec
andb
mov
and
pop
aam
shll
stos
cmp
pop
rcrl
in
jno
mov
or
in
mov
cmp
push
adc
push
lods
mov
add
ds
insb
lods
sbb
stc
pop
icebp
or
adc
xchg
sbb
xchg
add
xor
subl
adc
cwtl
cmp
xchg
sahf
lds
stos
lret
dec
mov
xchg
xchg
and
lret
mov
daa
cmp
mov
lcall
addl
filds
and
nop
test
or
cmp
xchg
push
add
jecxz
and
mov
sub
inc
cs
test
int
ja
js
loop
mov
sti
or
dec
repnz
pop
or
cmp
fld
lret
sub
mov
adc
xor
gs
dec
out
addl
outsl
mov
movsl
mov
mov
xor
pop
ret
cmpsb
insb
mov
cmp
mov
sbb
jle
sbb
into
mov
dec
into
inc
push
push
and
ja
arpl
cmp
xor
or
sub
test
scas
xor
or
std
loope
out
mov
cmp
push
outsl
hlt
jl
lahf
xchg
cmc
pop
jmp
jb
mov
and
popa
or
fimull
xchg
mov
add
daa
ret
add
fucom
stos
inc
arpl
add
stos
aam
xchg
pushf
cmc
sbb
leave
repnz
ds
xchg
mov
popa
and
repnz
fistpll
or
jecxz
hlt
cli
inc
insl
icebp
mov
pusha
inc
pop
mov
ret
mov
or
push
jp
adc
inc
mov
mov
jns
enter
movsb
cltd
mov
cmp
movsl
daa
insb
rolb
repz
inc
sbb
mov
ss
dec
lcall
pop
or
inc
daa
sub
pop
sub
and
movsl
add
adc
xchg
cld
xchg
jae
pop
push
int
push
imul
divl
pop
push
scas
pslld
test
loopne
xchg
dec
xor
fwait
cwtl
js
mov
dec
nop
stc
adc
popa
cmp
fbstp
fs
fwait
ss
cmp
xchg
xorl
mov
push
sbb
push
or
dec
xchg
xchg
push
mov
jecxz
iret
push
loope
sbb
ja
xor
inc
xor
jb
push
lcall
dec
jl
mov
sbb
aam
mov
insb
rcrl
lds
icebp
mov
xchg
adc
push
in
jle
dec
ds
or
sti
mov
popf
add
orb
lods
mov
stos
nop
lret
idivb
sub
adc
mov
daa
mov
jg
test
cld
push
cmp
sar
cmpsl
mov
popf
sub
fsubl
xchg
pusha
jg
out
push
lcall
fdecstp
add
imul
adc
mov
push
int3
cmpsb
in
xor
xor
add
xor
jg
hlt
gs
loop
std
adc
mov
adc
shlb
ss
je
cmp
push
popa
aad
xor
imul
not
dec
jne
jbe
jmp
adc
sbb
adc
lods
fildll
add
lods
xchg
add
arpl
inc
xchg
imul
xchg
mov
imul
pop
sbb
push
pop
mov
mov
push
popa
push
cmp
push
test
pop
xchg
push
sub
ljmp
gs
clc
or
sbb
sbb
adc
jge
clc
mov
mov
cmc
jge
mov
arpl
hlt
mov
add
or
mov
ljmp
loopne
rolb
mov
xchg
clc
scas
mov
push
or
and
adcl
aas
push
lahf
lods
or
mov
sub
scas
lahf
jp
into
sti
ret
test
cltd
repnz
inc
dec
scas
mov
mov
push
out
fisttps
repnz
and
cmp
lods
adc
push
pop
or
imul
aaa
adc
out
ja
and
int
inc
mov
xlat
adc
jle
int3
in
sub
ficompl
scas
push
xor
pop
jnp
jae
lret
and
xor
mov
jae
loopne
mov
incb
xor
jbe
inc
addl
imul
mov
sbb
lock
and
add
into
lahf
xor
adc
inc
clc
cmp
aaa
cli
aas
mov
lock
sbb
sub
mov
ljmp
push
cwtl
fcmovu
push
pop
sbb
in
and
adc
push
sub
add
fdivs
mov
aam
xor
xor
adc
and
sub
shlb
jmp
pusha
xorl
add
outsb
mov
lods
lods
sbb
aas
adc
add
into
xchg
push
popa
fdivrl
mov
sub
arpl
cmc
adc
ret
cmp
aas
pop
and
push
push
mov
push
push
xor
lock
je
or
call
aam
pop
cmpsb
cmp
pushf
sbb
jmp
loop
shll
push
int3
fdivr
rclb
jmp
lahf
aaa
mov
stc
cmp
sbb
or
inc
addr16
daa
sbb
jno
xor
xor
aaa
mov
xor
xchg
adc
fnstenv
jge
ret
imulb
adc
out
je
je
jmp
lods
pushf
lret
xchg
roll
push
call
movsl
test
push
mov
lods
stos
aaa
inc
repz
xor
mov
push
mov
jae
test
xchg
out
dec
scas
test
xchg
cwtl
xlat
sti
fldt
insb
mov
xor
insb
daa
enter
scas
cmp
repnz
insl
add
mov
out
pop
sub
cmpsb
xchg
movsl
cld
lcall
ret
dec
adc
jae
pop
jae
in
mov
incl
pop
scas
sub
push
cld
orb
cld
js
or
cltd
jae
jp
out
push
pop
xchg
rclb
sbb
out
ret
push
cmp
stos
ja
adc
stc
xchg
mov
scas
cltd
sahf
sbb
pop
repnz
es
test
popf
push
popa
mov
dec
xlat
cmp
out
jp
fdivrs
push
and
subb
jb
testb
lods
lods
and
ljmp
mov
pusha
mov
pop
jmp
mov
xchg
adc
cmpl
mov
dec
std
pop
adc
xchg
lea
mov
mov
bound
and
scas
mov
cmp
das
adcb
cltd
repz
stc
or
ss
sbb
in
adcl
test
adcl
and
jno
push
cmp
mov
shrl
in
sbb
test
cli
nop
fldenv
mov
pop
push
mov
lahf
fnstcw
adc
and
jecxz
ss
cmp
mov
jmp
xor
out
mov
orb
fistpl
fs
es
imul
mov
pop
mov
outsl
in
push
adc
push
cmp
arpl
stos
and
pop
insl
jns
loop
rcl
cmc
xor
imul
stos
fbld
xchg
or
push
lock
jle
push
pop
sbb
insl
aam
out
and
adc
cmp
jae
mov
popf
scas
inc
adc
jp
repnz
dec
or
sbbl
adc
sub
inc
int
les
add
stos
lea
enter
sub
dec
scas
xchg
popl
xor
and
in
dec
add
inc
mov
inc
dec
je
xor
filds
cltd
lret
mov
popa
mov
jecxz
pop
sti
cltd
mov
mov
sahf
pop
cwtl
xorb
into
push
clc
out
insl
movl
dec
cmp
movsl
jle
stos
dec
sbb
popa
xchg
xchg
insb
lahf
in
mov
in
push
adc
push
inc
push
mov
inc
mov
cmp
sbb
sbb
xlat
test
pop
mul
sub
imul
inc
fwait
lret
roll
push
push
cmpsl
add
jns
adc
jmp
out
lahf
lods
mov
fistl
jge
jg
jge,pn
movsb
sahf
sub
xor
xchg
rorl
add
aad
sbb
adc
test
shlb
das
mov
sub
fidivl
adc
sbb
daa
mov
mov
cltd
jns
pop
or
xchg
in
inc
lahf
cmp
stc
mov
xor
mov
mov
clc
mov
shll
xlat
lcall
jae
aad
mov
das
inc
lock
lret
pusha
pop
inc
mov
xor
repnz
push
lds
push
dec
push
jnp
cld
jbe
mov
loopne
sub
mov
inc
mov
sbbb
push
sbb
inc
div
ret
aas
aam
cmp
idivl
push
add
movsb
aam
les
xchg
xor
xchg
and
lods
jg
leave
pusha
pop
repnz
out
push
jb
sub
stos
repz
jmp
sub
fwait
mov
mov
adc
mov
lahf
cmp
add
sub
sbb
xor
fsubl
jmp
sbb
aas
jns
loopne
mov
jns
jecxz
mov
jg
push
daa
scas
xor
mov
lcall
mov
jecxz
js
mov
in
mov
popa
dec
not
fstl
pop
fisttpl
mov
movsl
dec
fisubrl
push
cmpsb
dec
inc
arpl
shll
pop
psllw
ret
lcall
sbb
push
xor
mov
ja
sbbl
pop
mov
push
xor
jne
jecxz
and
add
jno
fnstenv
dec
pop
dec
xor
movsb
ss
aam
or
inc
xchg
xor
sahf
xchg
call
lret
test
popa
xchg
cmp
push
add
inc
cmpsb
add
out
mov
stc
pusha
jbe
stos
dec
or
test
inc
xchg
mov
push
mov
test
jno
loopne
inc
mov
pop
jae
rorl
inc
aaa
adc
jp
ret
leave
out
sub
pop
dec
adcb
push
xchg
mov
and
jbe
jns
imul
and
leave
aas
push
sbb
nop
push
push
xchg
sarb
arpl
jns
bnd
movsb
cmp
pop
pop
in
insb
xor
cs
sbb
in
jnp
and
insl
xchg
cs
mov
popa
fidivrl
mov
fnstsw
mov
cwtl
mov
or
sbb
xor
aam
jmp
scas
je
inc
sub
mov
xor
or
aas
push
stc
addr16
shrb
cmpsl
inc
push
mov
pop
addr16
add
insl
out
and
cmp
push
and
xchg
call
mov
push
push
xor
test
xchg
or
fldl
jb
lret
mov
test
gs
sub
push
filds
cli
lock
enter
jle
gs
lods
lea
mov
push
dec
xor
inc
int
lea
dec
movsl
scas
dec
push
aad
push
dec
mulb
hlt
fwait
xchg
jo
das
mov
jle
push
sub
jns
dec
inc
and
push
jno
cmp
sub
cmova
inc
jno
mov
pushf
jnp
int
adc
lods
les
inc
adc
hlt
sub
test
and
pop
dec
sub
rorb
ror
or
and
and
scas
into
add
clc
xor
ljmp
rcll
ljmp
push
cmp
inc
cs
loopne
add
add
jae
mov
jle
into
and
stos
cmp
or
lock
test
shrb
notl
call
outsl
stos
xchg
ret
jmp
ficoms
sub
jmp
jg
ljmp
dec
jne
les
adc
cwtl
testb
adc
outsb
popa
loope
test
add
insl
sbb
inc
mov
jne
xchg
or
fiaddl
cs
sub
mov
pop
cmp
cmp
fbstp
popf
movsl
jl
fcomps
movsl
xor
and
loopne
imul
add
pop
mov
dec
jno
push
or
dec
jb
fistps
xchg
frstor
adc
rclb
stc
add
mov
or
mov
lahf
rcll
push
xor
push
test
mov
aam
cmp
xlat
sbb
sbb
movb
test
inc
lods
jb
int3
inc
sub
cwtl
pop
movsl
jne,pt
mov
pusha
lock
jne
shlb
inc
bound
jecxz
jmp
inc
xor
imul
outsb
repz
and
out
arpl
arpl
sbb
dec
cmc
test
mov
mov
imull
sub
jl
xor
cmpl
pop
inc
test
adc
outsl
inc
mov
icebp
sbb
repnz
cmp
jnp
gs
dec
test
pusha
lea
cmp
mov
or
imul
pop
rcrl
lds
jecxz
inc
lock
sub
adc
and
adc
xchg
sbb
jne
sbb
inc
lahf
mov
mov
pop
or
and
sti
and
jle
in
mov
or
pop
sbb
rolb
mov
int
add
jbe
mov
adc
or
push
sub
xor
mov
das
shlb
sub
or
lock
icebp
dec
push
addl
imul
push
sub
dec
das
sbb
leave
sbb
sahf
ret
jmp
aam
iret
orb
dec
repz
jge
pop
fwait
das
ljmp
sbb
add
cs
movsl
or
loopne
mov
mov
aad
jg
push
add
adc
fs
out
ss
jmp
push
adc
inc
lods
add
mov
jb
cmpsl
mov
cmp
mov
mov
push
ljmp
cli
inc
sub
movsl
nop
push
shlb
testb
jns
pop
xchg
sbb
lahf
jns
push
scas
fdivrl
xor
scas
mov
dec
push
dec
out
sbb
ljmp
into
cltd
push
jl
sub
insb
stos
je
xor
adc
adc
cmpsb
scas
sbb
arpl
mov
jb
pop
xor
mov
lods
shll
pop
mov
test
xchg
mov
push
mov
mov
adcb
xchg
push
pop
or
sub
and
xchg
jmp
daa
and
leave
and
add
lea
cmp
por
push
out
push
lods
lock
jg
push
dec
cld
sahf
leave
lahf
rclb
addl
or
lods
xchg
out
loop
dec
iret
cli
inc
jae
mov
cmp
rcrl
lret
or
pop
sub
push
out
addr16
cmpb
cmpsl
cmp
mov
aam
stc
ljmp
insb
mov
les
jo
push
mov
mov
mov
inc
mov
insb
out
in
xor
movsl
shrb
and
mov
add
add
pop
pop
pop
fmuls
fwait
divb
xchg
cmc
insb
outsb
ja
in
ret
fwait
sub
loopne
addr16
ja
cmp
ficoml
xchg
add
js
mov
lret
sbbl
xor
shlb
xor
or
dec
lahf
sbbl
cmp
cmpsl
rorl
push
cmp
fwait
ret
iret
jg
push
in
mov
lret
sarb
dec
mov
jno
and
xor
mov
fmull
sbb
repz
pushf
aas
or
scas
inc
dec
sub
xor
ret
test
test
shr
pop
int
mov
sbb
out
jnp
outsl
aam
push
data16
mov
inc
and
nop
cmp
ja
filds
mov
adc
daa
adc
test
mov
xor
push
sahf
mov
stc
adc
test
or
bound
mov
mov
adc
out
out
cmc
dec
ss
into
stos
sub
xor
mov
adc
dec
dec
or
fsubs
and
push
sbb
ficompl
addb
leave
dec
scas
jae
out
test
xor
fwait
imul
daa
push
and
jo
cmpsb
stc
push
les
xchg
cmp
ficomps
inc
mov
dec
push
cmp
jb
cli
int
sbb
jmp
push
cmc
movsl
incb
lcall
int
dec
std
das
shr
mulb
mov
dec
lods
decl
test
xchg
inc
pop
xlat
xor
mov
lret
fisubs
add
cwtl
mov
cli
xor
lret
adc
lds
sbb
gs
scas
data16
clc
mov
ret
mov
mov
test
jo
dec
or
aam
sbb
dec
std
testb
out
jp
xlat
add
add
inc
leave
cmp
adc
pop
jge
aaa
mov
std
and
ljmp
into
xchg
inc
sbb
rorl
das
divl
mov
pushf
mov
fsubs
enter
rcl
or
fldl
cmp
ret
adcb
cwtl
loope
and
stc
push
mov
adc
inc
in
inc
test
cmpsb
incl
subb
sub
fwait
push
sub
push
xchg
sub
add
loop
dec
ds
sarl
sbb
push
mov
loope
out
and
inc
add
iret
mov
stos
popf
loop
jg
mov
adc
cmc
fbstp
pop
sub
push
mov
ret
xchg
adc
clc
movsl
shlb
cli
into
or
xor
pop
outsl
loop
add
push
fs
out
mov
mov
ja
out
test
mov
les
ud1
cs
pop
popa
ljmp
stos
mov
rclb
fiaddl
push
cmp
dec
or
cmp
rorb
and
pop
xor
mov
scas
cmp
and
fisttpl
pop
enter
loopne
mov
jno
dec
dec
dec
rcrl
and
addr16
xchg
mov
filds
scas
ss
stos
add
mov
aaa
sbb
out
fs
cld
adc
js
lods
into
or
xchg
jp
xor
jnp
and
movsl
test
push
pop
push
mov
cmp
sbb
shlb
dec
cld
pop
or
popf
pop
mov
mov
shll
xor
add
and
popa
inc
sahf
daa
popf
insl
daa
push
ja
daa
ret
adc
add
mov
pop
js
lret
pushf
je
jno
xor
test
jbe
sub
add
jl
movsl
ljmp
xor
xor
sub
xchg
sbb
fwait
pop
out
aad
mov
jnp
out
pushf
addb
dec
and
mov
sbbb
xchg
repnz
inc
cmc
cmp
sub
mov
add
mov
out
ja
test
loope
mov
and
repnz
insb
add
xchg
fistpl
lods
cli
sahf
mov
aaa
inc
out
in
mov
pop
or
insl
mov
ja
jne
lods
pop
cmp
cltd
push
popl
push
outsl
cmp
in
lock
ss
push
shrl
cs
xor
mov
cwtl
jno
cs
lahf
xor
imul
or
adc
lahf
cs
mov
and
lods
or
sub
jo
pop
push
mov
mov
fcoml
mov
dec
xor
enter
dec
sahf
pop
inc
pop
sub
outsb
sub
dec
loop
lods
xor
inc
add
aad
add
dec
inc
sub
daa
cmc
sbb
jle
or
arpl
sbb
and
mov
out
rcr
or
cmp
mov
fimuls
cld
aam
lret
and
xchg
mov
fwait
inc
sub
out
and
stc
jmp
mov
push
dec
inc
jb
sub
jne
dec
leave
push
test
add
hlt
and
fstpt
cli
es
adc
jb
movsl
adc
dec
sbb
scas
sbb
testb
pop
hlt
push
jg
out
in
jecxz
cmp
mov
cltd
std
pop
sahf
gs
lret
jnp
enter
je
inc
fisttpll
rsqrtps
sub
leave
out
mov
aad
inc
movsb
in
lods
xor
rclb
pop
mov
jne
jno
add
fs
xor
cltd
dec
imul
xor
adc
call
loope
icebp
insl
xchg
dec
sbb
fsts
std
lret
je
push
test
dec
enter
jae
dec
lahf
ret
mov
add
or
fucomi
movsl
rclb
mov
into
xor
mov
shrb
scas
iret
out
imul
out
fmul
and
sub
mov
xor
sub
shlb
mov
mov
subb
das
add
mov
xor
pop
fwait
mov
cmp
dec
pop
shlb
rcrb
xor
iret
gs
cmp
jge
or
pop
cmp
push
cmpsl
inc
pop
rorl
mov
mov
scas
jecxz
fst
pusha
mov
or
test
dec
popa
stos
sbb
xchg
mov
loope
dec
jae
adc
mov
push
xor
test
xor
mov
js
and
xchg
leave
sub
enter
into
ds
movsb
loopne
addl
pop
push
insl
inc
and
jae
push
push
lret
ja
xchg
adc
inc
xchg
add
xor
insb
negl
adc
out
int
pop
cmp
inc
jmp
push
xor
xchg
ljmp
inc
or
mov
add
rorl
xor
inc
xorb
dec
cmp
push
scas
sbb
lock
popf
pop
in
inc
mov
xor
fs
xor
mov
jbe
xor
call
sti
inc
adc
fsts
jne
xor
pop
or
push
cmc
int
daa
aas
nop
sub
sbb
push
repnz
mov
gs
shl
mov
sub
das
ret
sbb
loope
in
lods
jo
add
pusha
hlt
cmp
sbb
dec
sbbb
jbe
sbb
xor
xor
mov
mov
mov
xor
xor
cli
jae
jns
les
mov
pop
inc
and
xchg
and
mov
iret
lahf
push
dec
push
xorl
popf
int3
jmp
pop
cmp
imul
out
fwait
jns
or
jge
repnz
mov
popf
enter
cmp
repnz
ret
loopne
imul
fwait
pop
jne
push
cmp
scas
stc
add
xor
inc
pminub
sub
inc
pop
push
jae
adc
xchg
nop
test
es
push
inc
jne,pt
sub
inc
sahf
dec
clc
mov
add
jg
jnp
mov
adc
cmpsl
outsl
cmc
faddl
jae
flds
push
dec
mov
ljmp
fstps
shrb
insb
push
cli
jg
xor
fnsave
mov
test
xchg
in
shl
mov
jg
icebp
shl
pop
sbb
data16
mov
mov
mov
daa
lret
ljmp
xchg
push
nop
stos
xor
jbe
int3
clc
lock
push
pop
push
fdivp
or
or
out
dec
adc
adc
shrl
and
lds
xchg
imul
dec
lcall
push
dec
outsb
sbbl
repz
and
dec
lock
mov
rcrl
pop
pushf
pop
or
and
popa
and
lret
xor
lret
fisubrl
rorb
arpl
or
cs
pop
loope
cmc
std
pop
out
icebp
inc
mov
movl
xor
mov
imul
and
mov
imul
aas
dec
cmp
sbb
cmpsl
mov
jg
xchg
jns
iret
jno
insl
cmpsb
scas
or
pop
push
mov
mov
fnstcw
sbb
in
shl
or
push
xchg
popf
ret
mov
jo
imul
cmp
dec
and
mov
mov
imul
xor
subl
in
sub
insl
push
es
inc
mov
ret
jns
sbb
mov
mov
les
ret
les
push
popf
pushf
bound
into
out
mov
mov
roll
pop
lea
cld
test
xor
cli
push
jge
psubsb
push
push
jecxz
pop
icebp
mov
mov
cmpsl
cltd
mov
mov
push
push
pop
add
pop
fcoml
cli
test
push
mov
jns
or
insl
cmpsb
fsubr
pusha
xor
ja
ficomps
push
inc
xor
lock
daa
mov
pop
adc
lahf
inc
jne
movsl
fnsave
cmp
sbb
pushl
stos
and
test
jecxz
sbb
ret
or
push
and
sbb
pop
sbb
xor
pop
jp
loopne
ja
jb
notl
loopne
adc
push
fisttpll
fstp
mov
aam
mov
in
inc
icebp
ss
add
ljmp
or
in
push
mov
jae
bound
jno
sar
sbb
jle
int
sbb
aam
stos
mov
jb
pop
daa
jge
stos
push
inc
inc
adc
lret
and
jns
push
xor
jb
lods
and
jae
jecxz
lcall
loope
inc
movsl
pusha
or
sub
xor
push
pop
push
xchg
fs
sarl
push
xchg
adc
xchg
xchg
stc
pop
daa
xchg
jecxz
dec
add
repz
imulb
test
fsts
mov
and
ja
inc
xorl
int
paddsb
call
adc
inc
loope
xor
and
repz
fadds
dec
stc
faddp
push
popw
test
popa
popa
insl
fcmovnb
lahf
mull
lods
iret
jo
pop
push
jb
sbb
lea
subb
sti
mov
subb
or
les
jnp
in
outsb
enter
in
int3
loopne
jnp
out
rcrb
ret
ss
cld
jbe
or
jp
dec
daa
push
test
lcall
notb
or
push
cmpsl
sbb
jo
inc
inc
lock
xor
pop
or
test
or
aaa
sbb
test
cs
movsl
jl
or
fiadds
lods
mulb
ret
mov
or
and
xchg
js
adc
cwtl
data16
cld
dec
outsl
and
movsb
push
adc
xchg
dec
jo
mov
adc
cli
je
mov
in
je
xchg
mov
push
addr16
dec
scas
xchg
test
mov
pop
or
adc
dec
rcll
nop
xchg
in
or
push
or
sbb
stos
mov
push
repnz
inc
cli
hlt
int3
mov
jno
cmp
cmp
xor
or
dec
mulb
stos
sub
jne
push
mov
pushf
mov
bound
les
stos
and
push
mov
mov
push
push
out
sbb
in
pop
mov
pop
test
jo
cld
push
pop
add
es
pop
mov
dec
inc
in
jmp
jl
fiadds
jge
add
cwtl
std
xchg
cs
clc
out
inc
orl
sbb
ss
push
or
adc
sahf
fs
dec
cmp
jb
loop
sub
addr16
mov
mov
into
push
cmp
jb
xchg
aaa
ret
ss
out
test
in
sub
xchg
fwait
std
popa
or
loop
xor
rcr
dec
loop
or
push
mov
es
pop
lret
aam
sub
pushf
lcall
xor
pop
fldl
test
xchg
push
xor
js
hlt
lock
pop
testl
out
add
sub
add
or
mov
jmp
jmp
jge
fwait
loopne
adc
out
mov
or
shrb
mov
movl
add
xlat
dec
and
loop
fnstenv
xlat
pop
cmp
adc
ds
jl
jbe
sbb
or
and
xor
enter
in
rorl
sarb
imul
xchg
loop
mov
sbb
lea
pop
test
test
add
push
sbb
jno
cld
inc
test
mulb
xchg
mov
xchg
imul
push
int3
insl
sar
pop
sbb
cld
sub
xchg
bound
mov
lcall
inc
add
add
push
rcrb
data16
mov
cmp
int
icebp
fadd
test
adc
cmp
xchg
jo
ret
pop
pop
cli
shrl
xor
pop
sbb
sbb
sub
adc
mov
mov
adcb
jo
addr16
push
mov
add
and
imul
bound
rcl
mov
popa
dec
xor
push
xor
cmp
jbe
lcall
mov
mov
pop
pushf
xchg
into
sub
mov
push
mov
fs
scas
fstpl
pop
xchg
xorl
roll
in
movsb
mov
addl
movsb
push
mov
mov
sub
push
iret
jmp
push
mov
adc
xlat
leave
jp
cmpsl
mov
pop
data16
mov
adc
outsl
adc
inc
mov
push
jo
loop
lds
test
inc
insb
test
push
sbb
out
cltd
inc
sbb
mov
lods
adc
icebp
xor
out
js
and
push
push
jecxz
or
and
mov
adc
mov
repnz
leave
sbb
imul
jb
and
les
insb
push
push
lcall
hlt
iret
scas
data16
mov
mov
popf
je
mov
dec
pop
sbb
mov
ret
fwait
adc
mov
inc
icebp
inc
pushf
shlb
mov
inc
subb
xlat
pop
mov
pop
out
bound
rcll
fwait
and
aas
push
fldl
push
gs
ljmpw
imul
xchg
push
cmp
in
sbb
cmc
lret
inc
adc
push
cmp
mov
dec
pop
mov
sbb
sub
sti
in
mov
or
les
xchg
cmp
sbb
mov
imul
leave
xchg
jae
in
xor
dec
jge
inc
ret
les
xor
mov
inc
mov
stos
push
or
and
xchg
mov
int
cmp
lret
out
mov
fists
dec
inc
mov
push
clc
cmpsl
fimuls
jo
fdivrl
add
add
gs
cmp
or
jb
out
aad
pop
jl
mov
or
xchg
inc
out
add
test
adc
cmpsb
xchg
pop
xchg
adc
sub
xchg
and
enter
xchg
daa
xor
jo
xchg
pop
adc
fdivs
popf
mov
sbb
and
add
cld
sahf
dec
clc
sbb
loopne
enter
cmp
push
test
xchg
and
adc
xchg
or
sub
mov
fadds
add
sub
dec
cwtl
mov
mov
xor
jg
cmc
aaa
jmp
sbbl
mov
mov
dec
fwait
les
mov
lahf
filds
add
je
jle
out
inc
push
mov
nop
sub
xor
xchg
xchg
ret
lods
in
push
out
jge
popa
out
push
pop
push
pop
dec
sbb
divl
dec
sub
fcoms
cmp
jnp
jnp
pusha
shll
ja
shll
cmpsl
mov
mov
push
bound
stc
or
aam
ds
cld
xor
adc
arpl
sub
add
mov
push
inc
dec
in
shlb
sbb
leave
or
cmp
and
fistpl
js
in
xor
loopne
jge
loope
or
pop
dec
fsubl
sbb
fsubrp
jecxz
lret
xchg
fidivs
push
les
enter
es
into
or
fsubs
in
jmp
pop
dec
imul
insb
rorl
inc
push
inc
xchg
in
add
scas
jbe
nop
je
cmp
bnd
cld
fistl
sub
mov
mov
adc
jge
shll
xor
adc
lahf
sbb
repz
daa
mov
int
and
js
fstps
pop
dec
add
sbb
mov
mov
test
jns
or
lcall
out
or
movsl
inc
jge
std
out
adc
into
push
add
mov
mov
inc
inc
test
ja
xorb
mov
xchg
cmp
mov
mov
push
insl
pop
jns
mov
out
in
inc
sti
sub
push
addr16
ficoml
xchg
add
inc
outsl
scas
movsb
or
hlt
jns
lret
call
pushf
fcoml
js
outsl
cli
mov
inc
ss
jl
fld
or
dec
cmp
sahf
and
push
xchg
data16
inc
pop
shrb
je
stos
dec
and
ja
in
sbb
sahf
sub
push
jne
shr
in
lret
add
addl
sbb
aas
enter
xchg
jecxz
cltd
imul
cmp
sub
in
jle
sub
stos
psubsw
xchg
fidivrl
enter
popa
or
jge
sbb
js
xchg
pop
div
andb
mov
push
fdivrs
loope
push
sahf
xchg
dec
test
lea
pop
mov
pop
out
push
and
enter
loop
push
mov
hlt
pop
fs
inc
inc
pop
and
adc
mov
mov
mov
cmp
in
jle
add
clc
mov
inc
test
mov
loope
sub
and
adc
faddl
cmc
sub
inc
xchg
jnp
mov
adc
fwait
adc
jbe
push
ficoms
adc
notb
sub
sub
pop
in
jecxz
mov
lods
mov
mov
leave
mov
lods
add
pop
push
lea
xor
ror
js
mov
and
aam
insl
pop
incl
cmp
hlt
cli
ret
mov
movq
dec
out
popf
fadds
pop
mov
int3
enter
hlt
js
popf
fidivrs
adc
pop
add
pop
mov
add
enter
notl
fdivr
and
adc
scas
and
movsb
data16
mov
pmulhw
sub
xchg
pop
mov
stos
rorl
jge
out
fwait
ds
sub
mov
dec
ror
int3
inc
cld
test
enter
cmpsl
test
idivl
jo
add
sbb
and
shll
xchg
mov
mov
inc
xor
dec
mov
jno
pop
popf
test
cmp
shlb
sbb
push
mov
je
adc
and
jg
xor
inc
fwait
sub
mov
push
jg
cmc
jl
sbb
push
xchg
push
push
sub
pop
in
js
sbb
addb
push
sbb
or
or
mov
es
xlat
call
fcoml
push
in
mov
mov
scas
sbb
cmp
mov
jno
adc
xchg
out
pop
sub
fucomi
shlb
arpl
sub
icebp
fidivrl
jbe
push
jp
loopne
mov
dec
dec
sub
in
xorl
lds
sbb
xlat
mov
cmp
popf
loope
fs
inc
fdivs
xchg
sub
loop
xchg
jne
pop
loopne
sub
out
xchg
jge
jmp
xchg
jbe
aas
sub
xor
fisttpll
std
mov
das
xor
fmuls
repnz
adc
mov
cmpsb
scas
inc
jle
hlt
inc
fsubl
add
mov
addr16
in
or
jg
cmp
add
adc
add
sbb
lods
lret
adc
adc
dec
xchg
mov
lods
je
int3
cmpsl
xor
fbld
jbe
and
pop
dec
scas
mov
cmp
mov
xor
xor
pop
bound
scas
jmp
pop
mov
lret
or
hlt
dec
or
sbb
mov
or
cmc
loope
cmpsl
imul
xchg
xor
jl
inc
in
andl
ja
adc
fbld
cmpsl
inc
movsl
pop
imul
mov
dec
rcl
ficompl
adcb
shrl
dec
or
pusha
mov
xor
xchg
mov
push
les
jbe
insl
cmpsl
and
jno
fs
pop
lock
cmpsl
repnz
mov
xchg
cmp
jg
icebp
cwtl
pop
mov
cmpsb
cmp
hlt
inc
adc
jle
cmp
ror
cmp
add
icebp
in
aas
sub
js
sarb
ficoml
jb
loop
out
pop
push
dec
fcomps
xlat
adc
rcl
inc
sbb
pop
leave
mov
stos
sahf
movsb
push
xlat
ljmp
shll
cmc
push
bound
scas
nop
in
pmaxub
or
int
adc
ficompl
cmp
jae
aad
dec
pop
ret
lds
je
and
aad
lcall
xor
push
lcall
push
xor
sbb
xlat
mov
jmp
or
stc
and
inc
pop
mov
hlt
xorl
push
mull
pop
ret
aaa
and
bnd
add
std
pop
xor
dec
mov
push
into
daa
xorb
dec
mov
adc
idiv
mov
sub
xchg
orb
and
es
iret
ja
pusha
sti
in
mov
jae
pop
jg
cmpsl
lea
inc
jb
push
stos
aam
push
add
or
push
and
cwtl
xchg
out
cmp
sub
pusha
mov
pop
xchg
flds
pop
stos
add
and
sbb
mov
test
mov
sti
push
inc
sbb
inc
pop
mov
mov
bound
xor
xorb
mov
mov
pop
mov
test
aas
pop
nop
in
gs
jns
imul
push
cli
add
ljmp
inc
lret
cmp
js
mov
paddusb
aam
fisttpll
ss
stc
cmp
mov
xor
inc
push
int
push
movsb
mov
push
xchg
mov
fildl
in
pop
jno
fwait
push
mov
cmp
outsl
cmpsl
xor
add
push
mov
adc
mov
movb
adc
mov
lahf
push
sbb
xchg
pop
pop
sti
aas
in
mov
xor
aaa
ret
xchg
or
push
mov
lods
je
cmc
out
popf
dec
mov
adc
dec
xor
repnz
fidivrs
mov
or
loopne
jbe
cmp
xchg
mov
out
outsl
xor
pop
movsl
int3
and
push
push
jl
repz
testl
pop
adc
pop
jge
pop
test
inc
pop
cmp
mov
lahf
fwait
or
mov
push
or
jmp
ss
push
ror
das
movsl
rcrl
add
adc
xor
das
ss
cmc
push
pop
push
jnp
inc
fimuls
sbb
xchg
scas
jbe
push
ljmp
add
xchg
sub
es
inc
cmp
loop
mov
xchg
xor
jns
dec
incb
lods
push
add
aas
sub
xor
bound
pop
lds
fmul
add
in
sbb
movsb
pop
aam
mov
jg
jmp
loope
push
cmc
pop
push
dec
pusha
rolb
loop
in
outsl
xchg
jle
fisubrs
inc
into
pop
mov
and
cmp
jle
add
movd
adc
jne
out
push
inc
imul
and
mov
std
cmp
mov
xlat
xor
cltd
mov
inc
and
lods
xor
add
mov
lcall
lar
dec
data16
sub
add
std
leave
test
xchg
fdiv
xchg
out
mov
xor
es
icebp
int
xchg
aaa
add
lds
ret
cmp
push
out
xor
or
cmp
add
mov
add
cmp
loopne
and
jnp
inc
aad
fisttps
jo
and
mov
jb
ljmp
adc
out
add
push
dec
arpl
dec
lock
aaa
mov
xor
pop
pop
mov
cltd
clc
clc
test
hlt
ficoml
sbbb
bound
mov
aaa
add
add
dec
shll
inc
adc
out
push
imul
out
mov
push
xor
hlt
inc
fsubrs
add
and
mov
hlt
in
sub
mov
sub
sub
or
or
popa
mov
inc
adc
nop
push
outsb
mov
jns
fidivs
cld
cmp
int3
mov
xor
icebp
and
cmp
movsb
adc
es
stos
hlt
int
icebp
jb
xchg
fisttpll
sbb
outsb
test
es
inc
sub
jbe
and
lock
setnp
cld
cmp
repnz
imul
shrb
insl
lea
xlat
sarl
rol
cltd
fbld
sub
je
adc
mov
mov
or
jne
fwait
inc
shrb
data16
mov
lahf
cmpsb
repz
cld
leave
pop
mov
mov
int3
xchg
push
bnd
xlat
je
xor
ret
mov
adc
and
movsb
popa
fnsave
mov
mov
mov
jnp
jno
or
loope
sbb
cmp
scas
stos
sub
jb
or
dec
insl
mov
dec
cld
and
xchg
popa
inc
sbb
xchg
frstor
sub
sub
sub
or
jg
sbb
mov
xor
cmp
into
cmp
dec
pop
shll
repnz
sbb
ja
push
fidivrl
andl
ret
push
dec
sti
lcall
push
test
and
arpl
jle
and
push
movsb
pop
sub
sub
shlb
xor
jo
test
pop
sub
out
sub
sbb
outsl
and
inc
lock
sbb
xchg
cmp
mov
mov
insb
mov
nop
add
int3
dec
icebp
or
mov
stos
or
or
popf
out
xlat
xchg
xlat
mov
out
dec
mov
inc
mov
cltd
adc
icebp
mov
cld
pop
lods
mov
sub
xor
or
lds
stos
leave
xchg
inc
test
or
mov
jge
scas
mov
pop
sbb
pop
mov
add
flds
sub
mov
shrb
sub
stos
pop
push
push
sbb
jnp
pop
adc
out
adc
mov
outsb
daa
std
inc
outsl
clc
and
mov
push
sbb
or
jne
pop
nop
xchg
dec
shll
xor
xchg
cmp
in
dec
out
push
sub
push
stc
cmp
loope
cmp
cltd
scas
inc
insl
mov
pop
or
fmuls
rorb
cmc
ret
sub
aam
repz
lds
cmpsl
outsb
jecxz
insb
js
lahf
or
das
out
mov
fisttps
roll
dec
inc
inc
jne
das
add
mov
push
pop
js
stc
outsl
pop
outsb
and
lret
sbb
into
lds
icebp
xor
xor
pop
clc
xlat
cld
mov
adc
xor
or
mov
fsts
leave
cmc
aas
cwtl
lds
call
loop
jb
and
xor
xor
stos
sub
cmpsl
lds
sbb
or
incl
cs
mov
lret
daa
or
dec
or
sub
cwtl
sub
rcr
inc
mov
inc
inc
jne
stos
leave
ds
fwait
and
mov
je
sbb
es
cmpsl
fsubrl
ret
fcomi
pop
mov
adc
jbe
adc
add
in
sbb
inc
movb
push
into
dec
test
and
dec
pop
pushf
popf
jg
ficompl
mov
fst
cwtl
adc
cs
adc
add
xchg
mov
test
bound
mov
dec
add
dec
shl
xor
fcomp
cmp
sqrtps
add
fstp
cmp
mov
je
xchg
sub
nop
je
sahf
push
int
loope
pop
in
not
cmp
push
sbb
rolb
push
fnsave
inc
or
jl
xor
cmpsl
hlt
int3
lds
mov
push
call
fistpll
enter
pop
mov
pusha
xor
data16
fbstp
test
inc
cmp
jno
hlt
jge
adc
rolb
or
lods
fistpll
mov
gs
xor
mov
mov
sbb
int3
jo
lods
call
sbb
sbb
insl
scas
std
sbb
xchg
mov
xchg
stc
int
test
jns
fbstp
xor
cltd
pushf
mov
stos
decl
insb
adc
aaa
cmp
outsl
movsb
sub
stc
push
mov
cmp
push
sbb
test
cmp
out
lock
jne
ljmp
xchg
inc
or
pop
inc
xor
out
inc
les
mov
or
dec
add
push
push
lahf
jp
fwait
outsb
xlat
aas
fsts
dec
out
outsl
stos
cwtl
arpl
xor
in
dec
dec
cs
mov
decl
pop
push
jb
aad
fldl
rol
mov
push
pop
sub
ss
jp
fmuls
or
icebp
arpl
insb
push
loopne
mov
addb
and
jle
mov
push
sbb
push
xor
in
inc
fs
inc
loop
enter
lods
es
into
dec
inc
sbb
mov
in
add
fdivp
iret
iret
mov
adcl
mov
popa
in
movsb
and
inc
rorl
add
or
fldpi
cmpsl
stc
rorb
lods
icebp
dec
or
or
xchg
lods
lahf
in
fisubrs
adc
mov
daa
push
mov
lock
pop
adc
fcmovnu
dec
mov
das
repz
mov
cwtl
dec
shrd
inc
fisubrs
pop
add
sub
mov
cli
cmp
xchg
xchg
cltd
adcl
js
mov
cwtl
outsb
and
fbld
xlat
jp
les
mov
push
sub
xor
loope
cmp
xor
cmpsb
negl
cmp
leave
or
fidivrs
ret
out
loop
push
das
in
jo
mov
xchg
add
inc
push
pop
int
cli
cmpsl
inc
loop
dec
xchg
movsl
xlat
or
dec
dec
fsts
sub
mov
cmp
test
jbe
mov
mov
jge
mov
iret
xor
jmp
dec
xchg
fdecstp
mov
sub
jl
push
mov
add
or
or
jg
stc
push
xor
mov
pop
imul
repz
pop
outsb
notl
push
andb
jne
ss
arpl
nop
push
and
in
imul
ja
sub
mov
push
adc
inc
mov
inc
enter
movsb
cmp
xor
and
arpl
xchg
lods
data16
xor
enter
mov
ljmp
js
pop
shrb
loopne
jle
dec
sub
or
or
inc
lret
mov
cmpsl
outsb
adc
shrl
enter
sbb
jmp
push
pop
mov
sbb
sbb
xchg
xchg
inc
inc
imul
hlt
sub
pop
mov
aaa
in
and
jecxz
aad
dec
mov
dec
ljmp
mov
adc
sub
jge
scas
call
push
mov
aas
in
or
pop
popf
testb
cmp
sahf
hlt
mov
or
lret
fcoms
pop
sbb
fwait
mov
xchg
inc
jae
pop
add
push
test
outsb
jns
jge
inc
jmp
xchg
xchg
fld
sbb
cmp
dec
inc
and
cmp
mov
jns
fldt
push
and
pop
mov
mov
mov
xchg
dec
mov
mov
cwtl
xchg
aaa
mov
pop
cmpsl
inc
test
mov
and
in
cmp
dec
push
mov
jle
cmpsl
outsb
fwait
arpl
push
mov
movsb
movsb
cmp
sub
leave
ret
lods
orb
bound
sub
xchg
aaa
lahf
arpl
in
inc
cltd
sbb
bound
cltd
movb
jg
loopne
sbb
sub
inc
mov
cmc
hlt
cmp
jecxz
dec
mov
ss
pushf
fcoml
sub
lahf
pushl
hlt
dec
je
push
jbe
loope
add
xchg
icebp
cmpsb
push
fsubr
ja
into
stos
adcb
cwtl
mov
pop
jle
xlat
push
jns
add
push
push
xchg
push
cmp
pop
aad
cmp
test
jl
mov
add
lcall
sub
popf
out
lcall
fmulp
in
call
add
xchg
jo
lcall
jne
mov
in
idivb
mov
dec
dec
dec
mov
bound
out
rcr
and
mov
inc
sbbb
lret
enter
mov
dec
inc
dec
push
int
xchg
pop
inc
sub
mov
aaa
popf
xchg
sbb
loopne
ljmp
aaa
xchg
fisubrs
out
jno
and
sarb
stos
xchg
cwtl
addr16
fisttpl
mov
mov
mov
imul
cmc
pop
repnz
std
fisubs
in
sub
dec
je
fwait
xlat
or
es
and
mov
cli
jge
sbb
ret
inc
mov
mov
fldt
orb
pop
cltd
movsb
inc
cmp
ds
out
arpl
adc
pop
lods
and
js
dec
fwait
pop
ret
scas
mov
xchg
popf
or
add
inc
pop
xchg
push
push
jae
in
jbe
push
subb
inc
xchg
push
ja
cmp
mov
fs
add
dec
das
cmpsb
aad
inc
push
int3
cmp
xor
lahf
pusha
pop
in
xchg
imul
out
fistl
inc
popf
in
out
loopne
add
sbb
cli
shlb
cmp
ljmp
jl
into
sti
cmp
in
cwtl
adcb
lahf
pop
inc
pop
mov
mov
mov
fmull
jg
out
pop
dec
lahf
lret
aam
add
es
mov
add
out
negl
jg
loope
add
inc
fcoml
push
push
pop
popf
fcoms
out
cmp
jmp
inc
test
leave
lea
repnz
add
cmp
jg
rorb
mov
and
push
scas
cmp
lret
ds
xor
xchg
int3
inc
je
inc
add
daa
subl
cmp
and
mov
cmc
ja
lahf
mov
cmp
jb
rorb
sbb
lret
inc
shll
loopne
pop
int3
dec
and
pop
xlat
jl
mov
js
fcom
data16
repnz
les
stc
icebp
cmp
jb
fcompl
pop
sti
jbe
in
gs
mov
adc
mov
mov
push
fistps
daa
pop
push
dec
mov
sub
mov
in
pop
mov
test
sti
adc
lea
stos
sarb
cmp
testb
jae
pop
xor
mov
and
stos
je
lret
mov
lods
cmc
aas
xor
inc
xor
shll
dec
cmp
cs
dec
stos
int
inc
sbb
testl
xchg
scas
arpl
dec
jb
push
mov
into
inc
daa
add
pop
mov
repz
loop
sti
popa
push
out
xor
fimull
ljmp
std
xchg
dec
cmp
mov
inc
jno
and
and
lcall
cld
je
es
add
sub
adc
and
jmp
jp
lods
fimuls
sahf
call
mov
scas
dec
enter
inc
outsl
in
scas
leave
andl
movsb
insl
inc
hlt
fdivs
mov
dec
mov
aas
pop
stos
lcall
cmp
pushl
xchg
mov
daa
mov
lods
xchg
out
aaa
inc
sub
xchg
inc
jg
adc
inc
fists
mov
xchg
das
fisttpl
ret
xchg
add
adc
pop
loop
popa
inc
mov
push
xlat
es
ljmp
mov
cmp
out
fs
mov
enter
or
in
jns
sbb
push
in
mov
cmp
loope
mov
xchg
mov
out
fstpl
outsl
and
enter
jne
loopne
popa
fdivl
pop
mov
imul
dec
fdivs
dec
inc
dec
out
jno
cmp
rcrb
pop
arpl
mov
xchg
arpl
pop
adc
mov
mov
repz
arpl
xor
outsl
ljmp
sbb
mov
adc
pop
xchg
dec
dec
sub
xor
out
cltd
aad
lea
pop
and
xor
inc
lock
jg
dec
call
xchg
je
in
sahf
pop
pop
cmp
xor
lds
jmp
pusha
xor
outsb
into
mov
dec
cmpsl
frstor
test
jle
shlb
lods
push
push
push
mov
adc
orl
mov
xor
loop
xchg
leave
cmp
or
dec
cli
data16
jecxz
les
into
fisttpll
call
fldcw
adc
call
inc
and
jmp
std
sti
cmpsl
stos
popf
ds
jo
aaa
pop
loopne
jb
lods
jnp
pop
jno
scas
xlat
dec
stos
lcall
sbb
pop
rcll
stos
xor
xchg
js
cmc
jmp
xchg
ja
adc
test
in
xor
addr16
gs
add
cltd
movsb
out
mov
pop
mov
rcll
das
jb
jbe
imul
xor
out
xchg
int
mov
gs
xchg
dec
jo
in
loop
adc
int3
rolb
push
mov
jmp
push
sub
mov
in
or
mov
loopne
mov
lahf
mov
rorl
daa
xor
xor
mov
stos
inc
pop
jg
mov
cli
cmc
clc
cwtl
mov
into
xor
repz
adc
cs
cs
xchg
repz
outsb
and
inc
mov
pop
lahf
mov
inc
iret
jp
sbb
mov
lock
stc
xor
add
daa
mov
xor
jnp
jp
dec
adc
iret
inc
icebp
sbb
std
jno
push
pusha
andb
sub
jl
loop
loope
or
add
push
and
jno
mov
into
xor
fsub
cmc
inc
sbb
adc
les
lcall
mov
arpl
jl
insb
fcomip
lcall
ret
test
ret
mov
jecxz
or
cmc
cmp
fdivp
inc
rclb
sbb
test
mov
into
push
xor
and
sub
mov
outsb
addr16
adc
jge
dec
mov
divl
and
sub
movsl
call
jb
negl
lock
cmpsl
nop
cltd
fwait
push
sti
test
add
aad
js
push
jg
cmp
pop
movsl
out
mov
mov
cltd
ret
cmp
mov
hlt
mov
jecxz
ja
scas
aas
fldl
xlat
adc
jne
adc
loope
lea
ret
les
stos
dec
add
pop
fstl
imul
xor
imul
add
mov
adc
rclb
das
bound
mov
pushf
rcll
adc
cli
rcr
mov
mov
adc
sub
outsl
int3
sub
fnstsw
out
enter
loop
cltd
jmp
sub
push
aad
pop
sub
fisttpl
cmpsb
das
jo
xchg
xchg
inc
addr16
loop
into
adcb
insl
mov
jo
add
cmp
inc
hlt
xor
mov
or
outsl
adc
mov
adc
shll
jb
cmc
jmp
punpckhbw
aas
and
fimuls
pop
cmpsl
sti
xor
inc
scas
adcb
lcall
and
xor
add
push
mov
sbb
fs
sbb
fidivrs
enter
scas
sub
xchg
xor
cmp
push
in
ret
std
loopne
or
ret
cmp
lock
mov
in
in
fildl
dec
data16
loop
sub
jmp
dec
fdivrp
and
mov
jae
push
mov
or
push
mov
jb
push
shrb
cwtl
enter
adc
mov
add
pop
adc
test
movsb
lcall
repnz
jle
ljmp
out
and
lods
adc
stos
xchg
dec
lahf
mov
fwait
dec
aas
lods
sti
fsubrs
add
in
out
sbb
cmc
andb
hlt
jbe
in
test
push
stos
pop
aaa
pushf
add
push
sub
aaa
out
mov
or
adc
xor
cli
lods
push
sub
mov
dec
andl
clc
sub
outsl
sub
xor
cmp
jge
adc
enter
test
loop
xchg
in
push
mov
ds
loop
cltd
in
icebp
mov
mov
ficoms
mov
in
cmp
bound
sub
xorb
movsb
aad
cld
or
xlat
pop
fldenv
jg
std
lods
inc
mov
mov
ret
xchg
lahf
out
sub
ds
cmc
rcrl
xor
mov
mov
les
adc
stc
or
pop
enter
cmpsb
xor
pop
ds
mov
in
int
adc
into
jmp
idivl
jge
jl
out
xor
enter
and
and
mov
jno
inc
test
clc
inc
leave
lds
mov
add
inc
or
sbb
inc
inc
xor
movsb
jp
negb
xchg
icebp
mov
xor
enter
fidivrs
in
insl
movsb
push
cmp
leave
pop
ficoms
and
mov
sbb
mov
movsl
and
popf
and
mov
add
mov
out
sbb
popa
addb
adc
xor
push
inc
add
inc
fiadds
orl
push
mov
mov
mov
mov
and
and
out
fcomps
dec
push
xlat
stos
cmc
xchg
push
mov
mov
je
sbb
mov
je
mov
and
loope
addr16
fcmovnu
lahf
test
ss
aam
loop
mov
loopne
cmp
out
adc
scas
test
repz
ljmp
sbb
cmpsb
adc
icebp
ss
pop
scas
xchg
ret
neg
sub
push
add
jmp
xchg
popf
jmp
sahf
dec
outsb
sub
mov
loopne
sub
jp
hlt
sub
mov
dec
hlt
pop
mov
out
ljmp
xchg
pop
and
loopne
in
jno
pop
arpl
aam
dec
and
cmp
dec
decb
inc
mov
or
dec
adc
repz
cmp
jnp
sub
ja
inc
ja
add
pop
jmp
dec
lahf
sub
mov
sub
lods
adcl
mov
inc
push
jae
mov
test
jb
ja
cmpsl
or
notb
cmpb
imul
cmp
xor
test
mov
jns
sub
jecxz
cs
jb
aas
or
outsl
lds
push
inc
sbb
or
mov
cmp
dec
lods
mov
outsb
lods
insl
lcall
frstor
cmp
scas
movsb
jl
push
popa
inc
faddp
push
inc
adc
ja
xchg
test
mov
adc
pop
mov
mov
shlb
movsl
push
shll
fstpt
mov
mov
dec
mov
pop
fwait
and
xchg
aad
int3
push
callw
mov
loopne
lahf
fidivrl
xor
ljmp
inc
rclb
ja
mov
fstpl
push
popf
adc
mov
in
cmp
and
inc
lcall
inc
cmp
sbb
mov
in
xor
xor
jmp
jns
imul
or
loop
negl
sahf
xchg
out
sahf
mov
mov
fdivrl
outsb
icebp
jno
cmpsb
sbb
jmp
dec
push
orl
xor
xor
mov
lock
sbb
notl
enter
jecxz
dec
inc
sub
pushf
clc
repnz
ficomps
cmp
loopne
push
lahf
or
nop
dec
popf
mov
fsubrs
sbb
inc
mov
cmp
xchg
pop
mov
fbld
pop
leave
ret
pop
push
int3
pushf
mov
test
mov
icebp
lods
inc
rcl
aas
jp
pop
mov
jmp
lcall
pop
into
inc
cmp
push
flds
cwtl
add
sub
test
insb
sub
addb
mov
loope
add
loope
push
mov
mov
cmc
push
iret
push
sbb
out
push
rclb
fcoml
mov
mov
fstpl
sti
aaa
and
jg
push
fidivrs
gs
jns
xor
ss
ficoml
test
leave
aaa
add
inc
loope
pop
xchg
push
in
xor
loop
rorb
or
or
xor
push
ds
mov
rcrl
pop
jnp
add
pmaddwd
pop
xor
sbb
in
stos
mov
lods
stos
lea
pop
mov
fdivp
mov
cwtl
pushf
out
mov
fisttps
mov
jle
push
lcall
insb
pop
int3
mov
xchg
cmp
iret
ret
cmp
mov
fdivp
cmp
and
xlat
push
outsb
dec
movsb
stc
pop
push
xchg
jb
mov
mov
xor
lods
js
loope
jl
adc
add
and
mov
gs
lcall
or
dec
xchg
pop
xor
sbb
hlt
arpl
xchg
sub
jnp
mov
mov
int
push
aad
pop
adc
test
mov
cmc
push
and
sbb
sarl
imul
dec
in
fists
mov
jae
jecxz
add
shl
fwait
pop
sbb
or
pop
pop
push
loope
or
lock
iret
test
mov
jl
div
mov
pop
mov
jns
jmp
mov
xchg
jp
repnz
lods
or
stos
cs
sub
aaa
fcompl
mov
loopne
jo
out
jns
hlt
stc
bound
cmp
aas
clc
jp
std
aaa
dec
sahf
fsubrl
ljmp
mov
add
fists
jbe
adc
pop
lret
pop
sub
mov
test
idivl
ja
or
imul
push
sub
add
xchg
scas
stc
dec
das
pop
lods
js
mov
repz
shll
jmp
out
push
xor
push
lock
movsl
pop
push
or
aaa
push
arpl
lock
mov
fwait
xchg
arpl
sub
adc
insb
pop
lock
jno
fwait
sbbl
add
and
stc
sub
mov
pop
aaa
mov
jnp
jb
jne
fdivs
cmp
jp
imul
push
test
mov
daa
frstor
sti
mov
xchg
jecxz
arpl
pop
adc
pop
jge
mov
gs
sti
mov
iret
lahf
push
and
adc
jle
dec
pop
add
or
sub
push
mov
movsb
in
call
jecxz
inc
das
pushf
imul
sahf
lcall
fmull
xchg
mov
push
pop
push
lret
inc
adc
or
cmp
out
dec
cltd
out
dec
je
sbb
push
push
fs
scas
sub
mulb
adc
pushf
iret
dec
cmp
mov
fiadds
sub
mov
in
mov
roll
adc
xchg
mov
rcll
xchg
xchg
push
jp
push
cmp
bound
popa
jns
aaa
sbb
aas
xchg
cli
pop
push
movsl
inc
jle
push
lahf
cmc
mov
mov
pop
pop
into
mov
rorl
roll
dec
lds
push
pushf
dec
xlat
sbb
in
cmp
gs
mov
inc
xchg
jnp
addb
leave
popa
xor
or
push
adc
xchg
push
hlt
xor
mov
aas
inc
add
mov
subb
sub
out
stc
dec
cmpl
inc
adc
clc
pop
mov
out
lds
add
mov
jmp
icebp
pop
lahf
iret
sbb
cmp
mov
inc
mov
sbb
jbe
add
jmp
mov
sbb
mov
out
dec
and
test
stos
mov
call
insl
inc
loop
xchg
cmpsb
cli
pop
stc
scas
mov
mov
jne
xor
adc
inc
jmp
adc
cmp
lcall
int3
pop
in
aaa
fmuls
fwait
jmp
mov
mov
fnstenv
out
into
push
dec
sbb
lahf
pop
mov
mov
push
sbbb
std
fsubrl
dec
sbb
jae
pop
push
adcl
leave
push
push
fcmovb
test
outsl
subb
or
sti
xchg
fidivl
sbb
jmp
mov
mov
dec
cmp
mov
incl
jmp
jae
stos
push
sub
test
test
inc
aas
lods
outsb
in
adcl
xchg
pop
clc
ja
std
les
adc
cmc
sti
mov
push
insb
arpl
add
lcall
fnstsw
mov
repnz
movsl
cld
aam
dec
or
or
out
fnsave
sbb
jns
stos
inc
aas
icebp
xchg
cld
pop
jle
gs
push
push
inc
call
out
cs
jge
imull
outsl
dec
cltd
jge
pop
fwait
ret
cs
inc
and
xchg
sub
hlt
mov
lea
mov
sub
push
sub
imul
movsb
mov
mov
and
shll
pop
addr16
rcrl
mov
lea
ljmp
mov
imul
cltd
pop
mov
fwait
and
jmp
fdivs
cli
sub
pop
and
xor
sbb
fdivl
sahf
xor
inc
pop
pusha
cli
inc
subl
inc
rolb
add
lods
dec
push
mov
push
daa
pop
movsb
clc
add
xchg
fwait
int
outsb
xor
andl
push
and
jecxz
lcall
inc
jno
mov
mov
mov
out
gs
mov
in
loope
xchg
mov
pop
adc
fdivrl
dec
fidivl
lock
sarb
push
cwtl
lahf
or
jmp
fstps
cmp
shrl
adc
inc
adc
pop
rol
icebp
in
ret
sub
and
call
jne
inc
adcb
pusha
loopne
dec
mov
cmpsl
pop
xor
pop
repz
outsb
lea
addb
add
rcll
aad
insl
mov
mov
xchg
dec
dec
sbb
mov
mov
cmc
mov
cwtl
xor
imul
mov
lock
inc
mov
icebp
cmp
dec
mov
into
mov
or
mov
mov
cmc
roll
push
push
sub
sbb
movups
dec
ja
pop
sub
cmpsl
add
mov
xor
jns
sbb
cmp
adc
sti
and
nop
repnz
popa
sahf
mov
xchg
cltd
mov
pop
fildll
int3
mov
fdiv
mov
cwtl
sbb
add
mov
xchg
popf
outsl
adc
dec
insl
pop
jmp
loopne
notl
jge
mov
pop
mov
xchg
fwait
les
ds
int3
iret
out
cmp
push
in
rcl
xor
out
sub
mov
pop
or
mov
ficompl
mov
rol
jnp
adc
popf
jno
adc
push
cmc
sub
cmpsb
nop
repz
cmp
les
or
pop
out
aas
pop
xchg
mov
lea
sbb
cmp
insl
sbb
push
mov
push
push
xor
pop
sbb
int
mov
les
fsubs
push
leave
out
ret
pop
pop
or
add
out
inc
data16
mov
movsl
pop
mov
lcall
fcoms
addl
xor
je
ss
ret
mov
les
inc
cmp
mov
dec
iret
lcall
and
mov
dec
adc
sub
dec
and
pop
orb
out
aam
andl
sbb
jmp
lea
sub
fsubrl
lods
scas
mov
lods
mov
dec
mov
test
test
pop
or
rcr
arpl
push
outsl
mov
cmp
xlat
ret
fistpll
jne
jae
adc
xor
xchg
into
outsb
notb
fistps
cmp
add
mov
sbb
xchg
jne
pusha
test
mov
out
jl
pop
dec
ljmp
cmp
jno
iret
mov
int3
pop
push
rcr
and
mov
inc
mov
fcomip
jb
in
outsb
dec
aad
insl
pop
leave
lcall
adc
fldenv
int3
fnstenv
mov
push
out
dec
dec
mov
pop
mov
inc
jp
in
sub
pusha
xorb
aas
lcall
xor
adc
mov
pop
inc
pop
xlat
xlat
mov
movsl
mov
filds
xor
gs
fnstsw
enter
xchg
jne
mov
out
cmpsb
dec
push
pushf
jg
in
daa
dec
pushf
lods
sbb
mov
fnsave
loopne
cmp
es
push
push
mov
inc
hlt
push
add
jno
pop
mov
lock
jg
inc
mov
aas
cli
add
jnp
jo
shrb
mov
xchg
jno
sbb
lock
ret
in
mov
stos
push
fs
sub
inc
xorl
lods
hlt
lea
stos
jl
and
add
repz
shll
popa
stc
aaa
insl
scas
ss
es
or
push
lea
enter
ret
movsb
mov
push
cmp
xor
int
cmp
enter
inc
popf
fs
fdivp
sti
xor
cmpsl
adc
mov
pop
cli
mov
xchg
push
out
or
mov
out
cmp
lret
add
aas
mov
dec
fstpl
jg
popa
cmp
imul
xchg
fsubs
lods
addr16
xchg
mov
push
xlat
test
movsb
shll
into
mov
fs
icebp
in
mov
add
xchg
adc
int3
xor
stos
lret
pop
movsb
pushf
inc
push
dec
scas
out
aam
lods
fsts
mov
inc
fs
mov
xchg
adc
sti
mov
inc
jno
clc
mov
add
pop
cmp
jl
mov
jecxz
mov
mov
push
inc
xor
std
test
int3
popl
push
push
repnz
jecxz
inc
daa
jnp
push
cmp
inc
lahf
xchg
sti
cwtl
lahf
xchg
out
repz
mov
jb
xchg
in
dec
stos
lds
and
bound
jle
mov
xchg
sbb
sub
push
jbe
xor
push
dec
in
dec
pop
rolb
cmp
neg
repnz
ret
div
xchg
aas
js
addl
and
inc
inc
lods
pop
or
mov
in
pop
and
xchg
and
in
dec
pop
rcrw
mov
ja
enter
jbe
mov
sbb
and
push
mov
jno
push
xor
and
push
sbb
lcall
inc
inc
sti
ret
xchg
inc
stos
sub
xchg
xchg
pop
outsl
push
fucom
mov
adc
sub
cmpsb
xor
jge
maskmovq
divl
xor
dec
daa
stos
cmpsl
pusha
or
gs
jno
sub
jle
fimuls
adc
out
or
ss
xchg
xor
in
lock
rcr
adc
pop
icebp
mov
lahf
leave
xchg
test
adc
cltd
fidivl
xor
sbb
fbld
cmp
cmpsb
repz
rcrb
cmp
ret
sti
das
and
out
lods
push
orl
jne
aaa
dec
add
popa
movsb
addr16
sti
fstl
xchg
mov
subl
aas
data16
or
int
pop
sub
inc
dec
shrl
mov
xchg
cmc
imul
mov
dec
outsb
mov
imul
push
or
mov
sub
adc
das
js
cli
adc
adcb
add
push
pop
mov
xor
push
es
mov
xor
pop
in
sub
jge
ss
dec
pop
or
lods
push
cld
push
out
xchg
test
xor
enter
pop
mov
mov
mov
mov
ret
aaa
addl
pop
or
xor
addl
sbbl
mov
out
jbe
fldl
pushf
repnz
outsl
pop
cmpsl
fs
mov
shll
sbb
jo
in
adc
imul
add
mov
or
mov
andl
dec
cld
or
js
sub
test
jne
stos
hlt
cmp
js
xorl
adc
enter
mov
xchg
lret
jecxz
out
lahf
pop
fiaddl
cmpsl
aas
inc
inc
adc
xor
xchg
pop
shl
loopne
rorl
xchg
fwait
jle
iret
pop
shrl
pop
js
sbb
pop
popf
pushf
std
les
popa
lds
in
mov
lret
in
cmp
aas
pop
in
test
pop
mulb
sbb
stos
mov
imul
sbb
mov
ret
cmp
push
mov
loop
lods
and
outsb
or
pushf
rcrb
in
inc
mov
stos
movsb
inc
leave
pop
repnz
xor
aas
mov
dec
mov
filds
jb
fwait
mov
je
outsl
xchg
cld
push
ficoms
into
push
dec
pushl
pusha
sbb
xchg
ss
push
mov
jo
mul
testl
dec
jns
ret
dec
jg
cmp
xlat
lret
mov
push
mov
xchg
mov
lock
popa
in
js
mov
scas
loopne
insl
adc
imul
test
jne
scas
inc
lret
mov
xor
lcall
or
ret
ret
push
xor
scas
xchg
xchg
rolb
mov
mov
pop
movsl
mov
das
add
jnp
inc
push
pusha
in
mov
or
dec
pop
out
testl
movsb
fwait
sbb
movsb
test
sbb
cmp
testb
xor
icebp
push
addr16
gs
mov
push
mov
inc
cmp
xor
dec
nop
iret
test
arpl
xchg
repnz
loope
rclb
push
jp
lock
fdivp
lea
and
adc
not
insl
push
movsl
cmp
jnp
mov
xchg
pop
xlat
ficoml
scas
iret
fisttpll
and
ja
popl
push
pop
mov
push
insl
mov
loope
xchg
add
stos
call
sahf
inc
add
sub
push
insb
sub
pop
cwtl
and
push
popa
outsb
mov
aas
or
bnd
nop
mov
fdivs
test
cmpsl
jbe
mov
pop
test
mov
xchg
and
jnp
mov
pop
ss
icebp
scas
adc
movsl
xchg
lock
dec
or
scas
mov
pop
scas
imul
iret
loop
push
jmp
vpshlw
mov
hlt
enter
cltd
push
push
mov
hlt
aas
pop
push
hlt
cmp
or
mov
lcall
inc
mov
rcr
mov
in
rolb
jbe
cmp
or
fistps
jecxz
loopne
adc
xchg
sub
ss
sbb
ror
cmp
sarb
loope
push
pop
dec
xchg
imul
cmpb
add
add
xchg
adc
enter
cmp
popf
add
cs
enter
repz
loopne
sub
xchg
aaa
mov
nop
scas
xor
mov
pop
stc
add
scas
out
sarl
out
pop
mov
push
imul
lds
and
ljmp
movsb
stos
push
in
xlat
pop
or
rcll
sbb
xor
rorl
pop
cli
outsl
inc
mov
ret
ds
pop
add
orl
adc
sub
sbbl
lods
cmpsl
mov
lock
or
orl
pop
lods
movsb
lea
daa
add
push
mov
ljmp
out
mov
aam
pop
cmova
icebp
pop
xor
mov
xor
aad
mov
pop
push
adcl
outsb
push
lret
pop
xchg
push
xchg
rep
add
pop
lods
push
jo
scas
out
negb
push
call
mov
jg
stc
je
test
js
shlb
push
fildll
jae
adcb
call
adcl
mov
test
insb
imull
mov
lock
mov
jle
xorb
inc
push
frstpm(287
outsl
fs
cs
mov
sahf
mov
lea
andl
lods
push
push
or
mov
movsb
addr16
jge
xor
lret
inc
vpshad
sub
call
mov
mov
fisttpll
iret
nop
mov
pop
mov
mov
add
nop
leave
cmp
negb
or
add
lods
jbe
pushf
lock
insl
or
inc
decb
leave
je
mov
movsb
add
inc
sub
aad
or
mov
cwtl
cmpsb
jns
int
lock
push
xchg
push
sbb
mov
scas
lahf
jae
fistpl
cmp
mov
aad
test
enter
jg
mov
inc
lret
out
sub
adc
mov
lods
mov
popa
xchg
in
scas
push
lahf
andl
add
divb
xor
mov
ljmp
mov
mov
sub
iret
sbb
push
icebp
fs
cltd
add
bound
push
loope
sub
mov
cld
jl,pn
inc
ja
enter
jbe
cltd
dec
pop
sub
xchg
xchg
pop
push
es
mulb
xor
push
sti
lahf
fstpl
das
inc
std
movsb
rorl
into
rcr
xchg
out
cmpsb
insb
mov
sbb
dec
lahf
xchg
mov
lods
pop
pusha
sub
dec
ss
mov
sub
insb
in
in
cmpl
pop
mov
push
cmp
test
loopne
cmp
or
and
dec
repz
fstps
push
xor
sub
stos
lods
roll
in
mov
cmp
inc
shlb
loope
addl
andl
xorb
mov
inc
and
aam
enter
add
subl
inc
xchg
mov
sub
mov
jb
int
insb
lahf
pop
inc
cmp
scas
push
sub
pop
ja
dec
xchg
or
popa
mov
mov
lds
push
inc
cmpsl
cmp
mov
jecxz
jae
lret
out
and
push
jle
fisttps
repnz
dec
and
fwait
and
sbb
xor
gs
xchg
mov
lock
icebp
adc
sbb
inc
mov
adc
mov
add
jbe
inc
icebp
add
add
mov
rcll
les
push
mov
push
sbb
pop
push
insb
push
cmc
ja
fwait
aam
ss
xchg
push
xchg
jmp
mov
xchg
jl
je
loopne
imul
sub
das
pop
jns
test
clc
lret
setge
and
and
inc
mov
lahf
and
xchg
sub
loopne
pop
or
pop
or
in
dec
and
std
fwait
orl
push
sti
lods
dec
ljmp
leave
movsl
mov
pop
xchg
mov
mov
popf
and
call
or
xchg
jbe
cmp
mov
int3
inc
shll
cmp
icebp
and
leave
or
aad
js
push
jge
mov
mov
or
sbb
ds
enter
pop
push
ds
jnp
sbb
mov
ret
jne
mov
fmulp
ss
cld
lret
outsb
xchg
insl
mov
sub
test
and
or
pop
jnp
xorl
bound
cmpsl
inc
movsl
pop
cmp
dec
pop
cmp
dec
stos
arpl
adc
out
or
and
push
lods
mov
jg
aam
and
pop
stos
pusha
mov
rcll
test
shrb
mov
dec
mov
std
inc
cs
out
add
mov
hlt
push
dec
lahf
pushf
pop
or
jmp
pop
xor
rol
enter
imul
int
lea
fdiv
repnz
lcall
sar
jno
fbld
mov
cmp
cmp
mov
dec
sbbl
mov
sub
sub
mov
pop
xchg
sub
push
mov
jb
mov
adc
mov
push
push
add
and
pop
mov
dec
notb
ja
sbb
rolb
jbe
bnd
jno
mov
jo
mov
adc
fsubrl
xchg
inc
sti
fidivrs
mov
adc
out
popf
add
popf
sbb
mov
test
sbb
push
mov
pop
mov
and
inc
pusha
or
xor
outsb
push
add
testl
sbb
call
mul
adc
pop
fwait
or
jle
outsb
and
imul
xor
sahf
dec
ret
daa
pushf
xor
mov
xchg
push
pop
inc
insl
pop
xor
stos
jae
icebp
cmp
push
fists
test
mov
xchg
push
xchg
psraw
pop
push
cli
in
les
push
pop
js
scas
xor
sub
cmp
imul
mov
insb
adcl
adc
out
pop
ljmp
sbb
or
mov
in
and
pusha
call
imul
loopne
push
inc
repnz
roll
or
jnp
push
adc
scas
xlat
or
imul
dec
push
outsb
pop
push
or
push
popf
daa
dec
inc
mov
int3
test
cmp
into
call
add
je
cwtl
movsl
cwtl
lahf
sub
sti
fdivs
xchg
jns
sbb
ljmp
ficoml
lcall
inc
pop
xchg
cmp
sub
int3
inc
cli
jmp
fstpl
lods
fsubrl
hlt
rclb
shlb
cmpsb
cmp
push
cmp
jmp
xor
test
arpl
mov
cmp
out
push
loopne
mov
stc
les
out
ficoml
adc
ret
sbb
mov
sbb
mov
pop
jns
or
int
movsb
int
fdivs
xorb
add
fistpll
in
mov
xorl
rcl
test
mov
fisubrs
jle
mov
iret
std
cmpsb
cltd
mov
xchg
jle
jbe
mov
out
adc
movsl
and
sti
aam
xchg
mov
out
rcl
inc
ljmp
rol
jnp
xlat
dec
push
shl
pop
pop
mov
arpl
lahf
mov
xorb
mov
leave
mov
mov
repnz
sbb
add
cltd
pcmpeqb
sbb
nop
sbb
fmull
pushf
and
or
hlt
mov
and
mov
ljmp
jns
or
mov
aad
cwtl
add
add
cwtl
mov
mov
add
xchg
xor
aaa
mov
dec
dec
outsb
push
test
jmp
lret
in
sub
imul
dec
xchg
or
pop
push
sub
imul
mov
mov
sti
add
leave
add
inc
mov
imul
ja
mov
repnz
mov
adc
xchg
sbb
mov
mov
out
repnz
dec
repnz
shlb
cmpsb
loopne,pn
lret
push
jo
cmp
push
rcrb
pop
icebp
pop
pop
push
adc
inc
jns
adc
add
hlt
xor
clc
adcl
enter
mov
dec
inc
mov
xchg
and
cmp
fwait
push
adc
lods
inc
lods
xor
or
scas
push
aam
repnz
cmp
mov
and
mov
test
call
jns
rorb
roll
cmp
movsl
adc
mov
and
addb
xor
cmp
cmc
mov
in
loop
test
or
pop
inc
jp
sub
or
push
inc
mov
cmpsb
mov
mov
inc
data16
and
lcall
push
push
sbb
xor
dec
fucomip
stos
jno
fsubrl
xchg
jmp
ljmp
xchg
jl,pt
je
xchg
loop
adc
lds
shrl
xchg
and
add
enter
sarl
sbb
push
mov
icebp
call
adc
mov
xor
xchg
mov
fs
push
dec
xchg
flds
mov
fstl
cmp
fsubrl
push
and
imul
cmp
sub
mov
jmp
cmp
push
mov
mull
add
pop
and
cwtl
and
mov
sbbl
gs
jle
push
push
add
lea
and
lcall
inc
inc
push
lods
inc
fiadds
push
xchg
pop
mov
inc
shll
lods
inc
aaa
add
and
pop
push
out
mov
mov
inc
sub
and
iret
cmp
lods
gs
shll
repnz
jbe
or
push
mov
dec
pop
jle
jl
add
mov
pop
pop
mov
cld
scas
aam
push
loop
movsb
pop
das
pop
sbb
sbb
mov
or
mov
cmc
leave
jno
out
test
lahf
cmpl
mov
js
incb
sbb
ret
lock
jp
jg
cmovp
sbb
je
cmpsb
push
aad
int3
nop
movsb
xorl
cmp
stos
outsb
fucomi
jne
ss
jmp
cmpsl
mov
loope
mov
push
dec
or
fimuls
test
fstpl
sub
xchg
in
jnp
jp
mov
shll
jnp
jge
sbb
push
mov
test
push
scas
jno
rcr
jns
mov
jp
inc
push
insb
adc
adc
mov
mov
mov
shl
dec
sahf
aaa
pop
inc
test
movsl
inc
push
pusha
xchg
sbb
mov
xchg
inc
loop
sbb
dec
pop
push
pop
loopne
push
push
sbb
xchg
cmp
clc
jge
out
add
xor
and
jae
cmpsb
xchg
mov
and
or
pop
inc
popf
push
out
in
sub
add
sub
mov
xchg
xorb
add
data16
add
sub
sub
xchg
addr16
dec
test
and
bound
scas
mov
test
jns
je
rol
je
push
es
rol
je
inc
aam
add
or
pop
in
xchg
cs
pushf
mov
adc
lea
ja
dec
idivl
jl
adc
lods
imul
out
jb
pop
ljmp
dec
pop
repz
mov
stos
mov
hlt
lret
xor
imul
mov
pop
rcrl
mov
vsqrtps
jo
adc
dec
dec
outsb
mov
rorl
sti
adc
and
push
fwait
sbb
xchg
adc
mov
add
fs
mov
mov
xor
xchg
or
leave
movsl
mov
mov
inc
push
mov
jg
test
es
sub
in
and
addr16
cmpsl
decb
or
push
sub
sbb
jo
les
les
out
test
shrd
inc
je
out
insl
lds
push
xor
mov
add
mov
pop
pushf
ja
pusha
jo
in
js
jmp
push
in
lods
xchg
adc
cli
arpl
shll
cmpsl
stos
dec
mov
aam
repz
inc
pushl
outsb
and
mov
jmp
imul
movzwl
add
cld
mov
jmp
jl
mov
stc
mov
dec
pushf
xor
enter
int
push
loope
cs
fisubrs
and
or
pmullw
aam
xor
int3
mov
imull
arpl
cmc
popf
inc
pop
daa
roll
xor
out
sahf
lods
mov
xor
int3
push
je
push
lea
scas
mov
sub
popf
pop
roll
jae
and
cli
add
xchg
cmp
sbb
movsb
mov
push
cltd
jle
mov
lret
xor
lcall
outsl
adc
fdivl
call
mov
test
pusha
add
sti
jae
mov
addr16
notl
xor
jmp
scas
xor
adc
pop
or
mov
xchg
jl
push
push
aas
loope
xor
and
add
jg
and
insl
ficoms
pop
xor
add
dec
xor
out
pop
repz
push
sahf
sahf
sub
push
fs
mov
ss
cmp
pop
fcoml
call
into
cli
mov
int
inc
stc
mov
insl
lret
sbb
and
fimuls
clc
adc
mov
mov
add
out
ret
cmp
roll
repnz
jg
lcall
add
cmp
lret
push
cs
cld
fbld
jnp
add
pushf
ficoml
or
test
cmp
imul
xor
sub
pop
sbb
cmpsl
jmp
popf
push
sbb
mov
push
shll
mov
push
mov
pop
arpl
adc
ret
inc
stos
icebp
push
inc
fsubr
xchg
lahf
xchg
mov
mov
mov
jl
cmp
out
or
iret
xchg
mov
xchg
movb
fdivrl
stos
das
push
xor
imul
rcll
mov
mov
adc
lock
pusha
movsb
add
ret
jne
add
push
imul
daa
push
dec
adc
mov
shll
inc
adc
pop
xor
and
out
xchg
ja
push
mov
daa
jns
push
shlb
sbb
cmp
aaa
mov
or
dec
out
inc
sti
sbb
xchg
xchg
cmp
lods
and
xchg
dec
sbbb
pop
or
orl
in
pop
xchg
insl
push
sbb
sbb
cli
dec
bnd
jmp
out
cmp
inc
push
cli
inc
adc
clc
sub
inc
bound
insl
and
sahf
dec
flds
xchg
sahf
inc
lcall
stc
add
lret
xchg
fisubrs
xchg
xchg
insl
pop
hlt
or
insb
stc
je
ljmp
fistpl
jb
arpl
adc
inc
pop
int
dec
mov
arpl
mov
adc
sub
sahf
sahf
pusha
fcmovnb
push
imul
ja
sub
pop
pop
test
or
sub
push
and
mov
aam
xchg
nop
inc
adc
je
mov
push
and
imul
aaa
test
pop
cltd
push
push
fwait
in
gs
mov
inc
adc
out
ret
adc
repz
and
mov
mov
pop
pop
scas
lods
sti
movsb
das
pop
or
push
out
xchg
fdivl
push
xchg
mov
mov
in
push
int3
jp
notb
xchg
gs
cmpsl
mov
jns
xor
pop
mov
mov
addr16
add
xchg
fs
sbb
lret
mov
push
lock
test
data16
lods
and
test
mov
add
pop
out
sarl
incl
sbb
sub
push
dec
jge
loope
mov
gs
insb
sub
fbld
sbb
add
shlb
repz
pop
xor
jp
and
push
ret
addr16
jb
pushf
test
popf
fbld
mov
ret
mov
dec
inc
push
inc
ficoms
jle
jbe
inc
mov
or
mov
xor
rol
xor
push
fucomp
add
sbb
int
jle
aas
xchg
mov
inc
das
out
mov
mov
dec
xchg
popl
jmp
pop
scas
stos
mov
clc
add
into
movsl
dec
mov
mov
test
pop
mov
pop
inc
mov
push
sbb
inc
ja
cmp
jmp
sbbl
or
fmull
cmpsl
mov
mov
xchg
sarb
mov
add
inc
out
pop
lcall
jl
jae
mov
dec
aaa
into
rol
add
sbbb
sub
push
jmp
xor
push
xor
xchg
out
popa
lcall
lock
and
cmp
call
sbbb
push
cli
inc
and
jae
adc
dec
or
cwtl
or
repz
cmc
call
push
jle
addr16
lret
adcb
nop
arpl
add
ss
sub
add
sub
xor
adc
lock
push
xchg
mov
mov
cmpb
std
popa
push
jb
imul
daa
inc
jg
cmp
js
inc
pushf
fcomps
imul
mov
mov
out
mov
shll
push
jmp
add
mov
test
ficomps
xor
das
lahf
aam
mov
xchg
int3
arpl
lahf
andb
jbe
jne
pop
adc
sti
or
setle
cmp
jbe
mov
rcll
jecxz
outsl
xlat
push
pop
cmp
push
sbb
xlat
outsb
shrl
mov
lds
cs
mov
adc
inc
jp
stos
push
dec
or
adc
mov
xchg
xlat
xor
test
test
loope
pop
repnz
pop
jnp
mov
pop
mov
jge
test
cmpl
neg
add
imul
dec
les
mov
stos
test
xor
mov
pop
mov
pop
shrl
mov
loope
in
push
adc
std
and
pop
ret
into
addb
xor
sbb
sbb
int3
mov
mov
jno
adc
cmpsl
mov
xlat
push
mov
dec
loop
mov
mov
dec
loopne
divl
add
sub
and
jno
pop
hlt
lcall
scas
jge
insb
push
aas
imul
out
mov
scas
mov
imul
movsb
gs
out
mov
add
stc
add
inc
xor
push
imul
pop
sub
cmpsl
mov
jo
xchg
cmp
incb
mov
xchg
sub
pop
rolb
into
jecxz
and
cmpsb
popaw
jo
out
popf
aas
mov
shrb
or
adc
inc
das
cwtl
iret
jnp
in
mov
pop
mov
push
sar
mov
cwtl
lret
sub
jns
mov
xor
js
dec
push
mov
repnz
inc
adcl
sbb
scas
fisttpll
add
jmp
mov
inc
data16
shlb
dec
aad
pop
mov
fisubrs
push
sbb
repz
imul
test
add
jae
sahf
mov
and
cmp
cwtl
scas
fisubrl
or
ds
cmpsb
jecxz
es
imul
aam
and
jp
jns
sbb
xor
jp
out
add
jl
adc
mov
sub
dec
lahf
and
repnz
test
pop
pop
out
lcall
lock
test
or
ret
mov
or
inc
lea
daa
jno
stc
inc
aas
ds
into
mov
stc
int3
mov
cmp
call
jmp
idivb
mov
or
repz
fnstenv
inc
mov
sub
aaa
cmp
jmp
jb
ret
rclb
sub
jo
cmp
stos
addl
out
test
dec
fisttps
sub
jbe
shrl
fcom
xchg
shrb
cmp
stos
ret
cmpsb
insl
cli
mov
add
mov
lahf
mov
add
mov
divb
xlat
ds
iret
lods
fldenv
mov
lret
test
insl
arpl
js
sub
cmp
icebp
xchg
stos
mov
mov
sub
test
int
bound
jp
xor
sub
scas
sub
mov
or
or
cmp
mov
test
and
outsl
popf
lods
or
jmp
nop
pop
mov
inc
jle
ret
fs
subb
inc
dec
inc
cmpsl
mov
test
insb
popa
pop
jne
dec
in
dec
movsl
dec
addr16
sbb
jmp
mov
xchg
fcmovbe
mov
jb
sti
test
pop
rorb
ljmp
and
mov
cmpsb
in
fists
in
sti
sti
sar
or
sub
mov
addb
and
sub
inc
mov
push
int
nop
imul
fimull
insb
mov
pop
mov
jle
mov
jl
bound
mov
sbb
push
psubsw
or
call
and
in
jnp
sbb
cmc
mov
mov
in
aaa
test
addb
pop
dec
int
adc
push
pop
sbb
lea
test
outsl
ret
enter
adc
push
mov
das
outsl
mov
psadbw
fs
jle
cwtl
out
mov
lcall
jecxz
jp
push
or
cs
pop
jne
push
daa
jl
insb
or
cs
mov
in
hlt
xchg
sbb
jl
add
mov
mov
add
mov
xor
in
inc
xor
push
xor
jnp
nop
fidivrl
cltd
dec
inc
scas
jns
imul
mov
aas
fldcw
dec
pop
pop
ljmp
mov
mov
in
aas
sbb
mov
sahf
aaa
loop
mov
cwtl
lds
xchg
xchg
ds
outsl
popa
dec
cli
adc
xchg
insb
fs
into
ja
xor
sarb
rcrb
pop
mov
jns
pop
adc
mov
push
push
add
xor
mov
xchg
clc
jne
icebp
adc
xchg
les
xchg
dec
inc
cmp
mov
pop
scas
xchg
push
dec
cli
cmp
xchg
pop
mov
pop
popa
cs
sub
mov
movsb
xchg
xchg
pop
sbbl
out
in
push
add
or
clc
inc
stos
mov
das
xchg
jp
mov
mov
imul
cltd
out
inc
testb
jo
mov
cmp
jo
xchg
test
addr16
dec
out
xchg
mov
dec
jmp
int
test
addr16
fisttps
subb
jb
cmp
xor
sub
das
dec
xor
leave
push
fcoms
mov
adc
mov
rorl
sub
jae
mov
mov
clc
jae
cmp
push
popf
adc
cmp
push
je
add
movsl
imul
pop
pop
les
mov
mov
dec
sbbb
out
outsl
repz
in
loope
xchg
dec
push
mov
xchg
and
movsl
jp
push
fcmovne
xor
dec
sbb
in
std
ficompl
in
sub
jno
pop
adc
out
pop
push
mov
inc
rorb
loop
or
outsl
mov
pop
cmpsl
loope
fcomps
mov
inc
imul
lahf
push
push
sarl
push
in
dec
xchg
cld
and
mov
sbb
xlat
movsl
das
sub
cmpsb
insb
in
rcl
cmpsl
jo
aad
add
loop
fcoml
sub
notb
into
test
dec
jo
data16
push
outsb
xor
out
mov
frstor
mov
jle
mov
mov
jecxz
xor
pop
sbb
pop
jbe
jp
mov
js
int3
cmp
std
arpl
xchg
adc
lea
adc
sub
hlt
sub
call
ret
xor
sbb
xlat
aam
test
fcompl
dec
gs
xor
int3
pop
popf
mov
lret
mov
iret
push
or
fdivp
in
sub
out
loope
mov
push
push
insb
cmc
insb
pop
stc
bound
mov
xchg
push
ret
lret
imul
stos
fwait
scas
scas
scas
adc
push
aas
sub
insb
loopne
cmp
movsl
addr16
jmp
je
mov
mov
in
sub
and
dec
aam
pop
dec
mov
lret
push
mov
or
jne
insb
cmp
daa
movsl
fs
xchg
jl
inc
and
test
nop
sbb
cmp
jecxz
sahf
js
inc
shll
inc
jnp
mov
cmp
mov
popf
mov
mov
negl
cmp
lcall
cltd
iret
out
loopne
into
cmp
jg
outsl
aas
rorb
pop
push
out
cmp
or
lcall
arpl
push
jb
mov
int3
mov
xor
outsb
int
mov
or
sbb
xchg
insb
mov
inc
xor
mov
aam
outsl
dec
jmp
lods
enter
mov
xchg
push
xor
inc
pop
push
xorl
cmc
scas
dec
cmp
sub
pop
je
pop
inc
arpl
outsb
outsb
loopne
jns
mov
dec
lret
adcb
jecxz
xchg
add
mov
mov
lds
xorl
insl
or
stos
pop
mov
lds
scas
sub
shll
inc
int3
dec
add
aam
xor
xchg
push
push
mov
ljmp
es
adc
sub
xchg
fcmovnb
xchg
fisubs
inc
sub
and
leave
push
mov
fiaddl
fnstcw
jno
mov
std
subb
adc
jne
adcl
mov
scas
mov
pop
cmc
mov
add
dec
scas
adcl
into
jp
std
ja
loopne
mov
scas
test
imul
push
jmp
xor
xchg
dec
inc
lret
out
ljmp
cmpsl
iret
jg
xchg
clc
pop
mov
mov
mov
test
cmp
push
sbb
sbb
jae
dec
xor
aas
mov
xchg
inc
out
nop
imull
lock
ljmp
adc
sub
or
cmpb
add
sarb
imul
xor
xchg
jle
sarb
inc
add
stos
and
movsl
ds
loope
xchg
add
or
jnp
mov
into
lcall
dec
jmp
repz
dec
mov
xor
pop
xlat
and
sbb
xor
or
pop
xchg
js
out
fwait
jge
xor
xor
pop
pop
std
xor
or
imulb
inc
xchg
lretw
cld
cs
out
sub
sti
stc
jge
jle
lea
mov
mov
out
rcrb
jns
xlat
loop
mov
jae
test
out
dec
xor
shll
xchg
sub
mov
xor
add
xor
jg
xor
js
xchg
ret
jo
pop
rolb
mov
jbe
int3
push
or
jl
cmp
sbb
aad
mov
cmp
mov
out
imul
mov
dec
mov
ja
mov
push
adc
jno
jne
and
hlt
mov
cmp
mov
jmp
movsb
sti
cltd
mov
in
mov
add
pushf
cwtl
jae
and
sub
ljmp
jge
add
pop
int3
insl
out
add
or
ds
rol
loop
das
loop
bnd
sub
in
dec
lret
cmpsl
mov
lock
lods
xchg
movsl
jb
fs
ljmp
imul
and
int
shlb
mov
sub
add
popf
repnz
sub
mov
lret
cmc
shlb
or
dec
push
test
adc
psadbw
test
mov
arpl
fwait
pop
sbb
jmp
jp
daa
ret
adc
xchg
jb
ret
and
loopne
pop
jmp
pop
push
cmpsl
add
jge
aaa
mov
les
mov
int
sti
adc
inc
pusha
outsl
sahf
mov
jle
sbb
xchg
or
push
js
outsl
rcl
popa
xchg
and
mov
mov
int
adc
icebp
in
cld
insl
shll
dec
pop
mov
inc
or
xchg
fisttpll
fidivs
testb
lret
aam
int
jo
pop
rorl
daa
scas
jl
adc
loope
es
xchg
cmpsl
jno
aad
jecxz
out
cmpsb
movsl
popf
in
js
imul
adc
ret
movsb
sbb
push
pop
add
fisubs
outsb
filds
or
sti
inc
dec
pop
mov
adc
jmp
fsub
or
icebp
out
fsubl
lods
loopne
clc
adc
mov
jmp
lds
imull
jp
ficomps
mov
fimull
into
pop
jnp
push
test
inc
push
push
and
push
fimuls
mov
out
aad
int3
les
lret
push
sbb
xor
js
aad
repnz
sub
push
mov
pop
je
pop
mov
in
push
xchg
xchg
xorw
js
daa
xlat
cmp
jge
push
outsb
jmp
dec
jo
leave
push
push
cwtl
jbe
repz
jmp
jecxz
push
jp
pop
into
xchg
test
cmp
daa
sub
push
ror
jbe
rorb
add
mov
aaa
mov
push
xor
or
adc
cmpsb
cmp
andl
dec
int3
addr16
mov
lock
jbe
jno
es
add
cmp
jle
rorb
push
push
divb
adc
cmc
or
sbb
es
or
jle
push
dec
or
out
or
ret
mov
mov
push
mov
rorl
cmpsb
and
push
popa
xchg
ds
nop
sub
bound
adc
mov
cmp
leave
repz
adc
sahf
fs
ret
inc
add
cltd
negl
sub
add
xchg
sub
insb
fwait
into
call
mov
int3
mov
push
mov
sbb
push
loopne
jmp
cltd
lods
jb
imul
push
adc
icebp
jmp
sahf
cmpsb
or
repnz
push
push
out
cmp
stos
aaa
outsb
sbb
push
sub
sbb
push
sbb
fildl
dec
clc
sbb
cmp
sbb
test
repz
inc
and
push
popa
mov
arpl
out
pusha
push
js
test
lods
or
mov
push
xor
xchg
adc
into
sbb
lret
dec
lcall
jb
and
or
jbe
mov
mov
lret
mov
test
xorb
leave
out
outsb
fisubs
lret
mov
pop
dec
mov
loopne
cmp
insb
aad
xchg
mov
lods
in
mov
push
loopne
mov
jmp
clc
fsubr
imul
inc
repnz
mov
adc
aad
inc
adc
xor
or
fsts
das
add
fcomi
fbstp
imul
loopne
dec
hlt
sbb
dec
fidivl
lds
push
sbb
jl
jecxz
scas
jnp
jb
pop
mov
in
mov
adc
dec
push
mov
test
rcrb
jp
dec
pop
fcoml
xlat
scas
loope
cwtl
and
cmp
push
fwait
xchg
jns
std
mov
mov
orb
mov
dec
fsubs
rcrl
stc
pop
in
xchg
push
jbe
sahf
xchg
mov
lods
push
or
cmp
addr16
mov
cmpb
and
add
push
push
les
mov
ljmp
dec
mov
pop
outsl
sub
hlt
mov
push
pop
cld
outsb
cmpsb
xchg
jo
inc
jno
pop
sbb
jecxz
ffreep
rcrl
movsl
int
cmp
imul
inc
rorl
xor
fisttpl
lods
mov
iret
and
int3
mov
inc
rcll
adc
repz
inc
sub
repz
pop
push
xchg
lods
lret
jle
mov
and
push
add
dec
adc
in
aad
movsl
mov
es
test
sbb
fdivs
adc
mov
rorl
jge
xlat
call
sbb
imul
and
pop
ret
fwait
out
jb
mov
or
jge
std
cld
sub
loope
dec
inc
adc
xor
push
clc
sub
pop
mov
into
scas
arpl
insb
push
popa
mov
mov
mov
pop
inc
rorl
stos
xor
stos
sbb
daa
xchg
loopne
sbb
fidivrs
inc
lahf
xchg
pop
je
fucomi
mov
pop
loopne
and
idivb
and
sub
insl
or
ret
mov
hlt
jp
and
dec
iretw
jle
flds
pop
js
push
lds
xchg
cld
cmp
call
js
or
cwtl
mov
mov
mov
jle
or
or
out
cmpsb
hlt
scas
je
xchg
adc
cld
dec
mov
mov
shrl
out
pushf
dec
cld
adc
xchg
cltd
orl
call
out
or
cld
in
xor
add
ja
popa
sbbb
movsb
loop
stc
xor
dec
pushf
or
mov
dec
dec
dec
call
mov
sbb
in
pop
insl
jnp
sbbl
pop
jl
jnp
push
jge
jp
sbb
push
rcr
mov
dec
jp
rorb
insb
adc
loopne
cmpsb
js
je
sarb
push
loope
in
pop
bound
push
mov
sbb
xor
out
dec
push
mov
cmc
lcall
add
push
xor
orb
stos
iret
stc
repnz
push
push
aaa
inc
cli
outsl
sub
push
ret
cmp
jns
jne
inc
pop
mov
in
lret
stos
sub
cmpsb
js
hlt
in
push
mov
mov
cmp
aad
push
push
test
mov
push
push
sbb
cmp
sub
das
mov
sub
push
lahf
adc
pop
cltd
mov
adc
pop
mov
das
adc
or
sub
cmp
inc
adc
arpl
mov
lahf
adc
mov
jge
add
jl
enter
shrl
sub
dec
mov
push
push
repnz
sub
xchg
adc
push
jno
ja
xchg
nop
lret
enter
jle
pop
decb
jmp
sub
dec
lods
mov
cli
sbb
out
out
cwtl
jae
jae
cmp
icebp
add
mov
arpl
xlat
or
outsl
and
mov
loop
fldt
sbb
sub
mov
nop
lds
pop
lods
out
rcrl
ljmp
sub
into
push
and
sbb
out
int
pop
cld
mov
lock
sbb
mov
inc
add
jl
pop
mov
stos
decb
jns
fwait
mov
xor
cmp
jno
xchg
lret
mov
adc
push
pop
js
mov
fs
sub
cmpsb
pop
xor
xor
pop
add
dec
loopne
cli
je
dec
push
push
or
jno
jmp
loop
mov
jmp
adc
pop
xor
dec
lds
movl
cmp
loopne
testb
leave
mov
insb
out
lea
roll
js
xlat
xchg
in
push
int3
mov
testb
jnp
iret
inc
inc
pop
pop
test
pop
cmp
xlat
and
mov
lahf
es
push
clc
test
aaa
lods
mov
mov
sub
fcoml
dec
cmc
mov
stc
pop
test
xor
and
push
jo
inc
xor
mov
pop
jp
das
insl
data16
adc
icebp
inc
sub
pop
mov
out
push
data16
sti
mov
jne
adc
push
lcall
arpl
mov
mov
ljmp
ret
test
xchg
xchg
sbb
frstor
fcompl
aam
sbb
xchg
cmp
xchg
push
cmpsb
or
movsl
cwtl
xor
out
fwait
pop
mov
iret
test
cmp
dec
je
sti
nop
out
pop
xchg
aad
inc
loope
dec
xchg
dec
in
lret
cs
adc
sbb
mov
fimull
sbb
push
push
inc
add
test
std
cmp
fbld
add
pop
js
and
mov
dec
xchg
pop
cwtl
adc
outsb
stos
mov
lret
adc
sub
call
loope
scas
xchg
dec
xor
test
addr16
cmpsb
ss
cltd
adc
fcoml
and
jle
lods
andb
adc
adc
and
in
or
pop
repnz
sub
in
mov
jecxz
mov
ljmp
push
jae
and
lss
push
or
xchg
ficoms
xor
dec
inc
jl
xor
xchg
inc
and
leave
and
jbe
mov
negb
add
pop
mov
mov
jnp
shll
jmp
dec
push
and
cld
dec
ljmp
ds
mov
push
test
sbb
inc
lahf
dec
jle
or
loop
push
xor
push
ljmp
leave
lahf
scas
js
jg
mov
sbb
dec
pop
pop
sub
movsb
sti
mov
push
inc
std
iret
cltd
xchg
adc
mov
adc
enter
notb
in
cld
xor
aad
scas
dec
ror
dec
mov
aam
lods
mov
movsl
pop
xchg
lds
jp
mov
inc
adc
imul
pop
cmp
nop
adc
adc
leave
in
mov
mov
fs
pusha
jbe
in
sbb
out
pop
jmp
mov
sub
nop
sub
mov
sub
dec
push
pop
jb
push
dec
xor
adc
cmp
das
inc
sub
jo
test
xor
adc
aam
sbb
out
push
aas
push
inc
adc
mov
pop
gs
mov
scas
push
pushf
fistpl
jecxz
ds
scas
shll
mov
xchg
mov
insb
mov
jecxz
movsl
call
mov
shl
jg
aas
cmp
fxam
and
inc
test
mov
aaa
stos
cmpsb
and
in
cltd
dec
or
xchg
fs
leave
inc
daa
inc
inc
jge
mov
aas
and
mov
or
not
mov
sub
int
mov
xchg
mov
or
and
es
add
data16
jl
jge
in
loop
and
xchg
mov
pop
jl
xorb
in
sub
test
xchg
mov
fstpl
cmp
iret
cmp
cli
and
xchg
jl
xor
outsl
pop
inc
jmp
insl
pop
inc
loopne
xor
mov
adc
ret
or
flds
pop
inc
pop
jmp
jnp
jno
dec
rcrl
decl
test
sbb
cmc
leave
xor
xchg
lods
out
adc
cli
mov
jmp
clc
pop
ljmp
xlat
notl
cmp
lret
xor
mov
lret
add
daa
sub
or
aam
repz
cmp
pop
mov
cmc
adc
mov
mov
mov
mov
int
out
push
pop
cmpsl
or
test
sub
mov
fdivrs
mov
insb
add
or
xor
cmpsb
inc
scas
stos
cwtl
cli
inc
ss
in
xor
inc
and
mov
outsb
shll
mov
sti
add
or
or
fsubrl
or
mov
add
lahf
movsl
xor
pop
repz
stc
or
in
jmp
or
hlt
popf
pusha
mov
sub
cmp
in
iret
add
lds
dec
add
cmp
adc
hlt
or
jae
cltd
cltd
add
sub
sarb
and
jne
inc
notb
mov
fbstp
in
pop
stc
sbb
sbb
and
push
sbb
scas
xsha256
cmpsb
adc
xchg
movsl
sbb
mov
adc
xchg
mov
mov
adc
pop
inc
mov
mov
sub
push
jg
test
jno
lret
pop
ficomps
jp
imul
movsl
orb
andl
mov
fnsave
imul
hlt
clc
int
sti
pop
int
shrl
push
dec
dec
push
mov
jl
sub
and
das
jecxz
mov
jl
loopne
mov
pop
mov
inc
fs
into
jg
lahf
push
or
daa
mov
stos
mov
push
dec
jge,pn
ss
adc
mov
jge
into
lea
push
popl
loopne
push
mov
sbb
push
insl
jnp
mov
xchg
leave
cltd
push
cmp
pop
push
mov
jne
sub
sarl
cmpsb
ss
pop
mov
or
add
test
pusha
push
and
mov
fdivrl
ljmp
and
das
inc
lods
pop
das
push
icebp
adc
out
cltd
pop
movsl
inc
fidivrl
and
mov
popf
inc
inc
cmp
imul
sbb
pop
sbb
xchg
ficompl
lds
aaa
pop
ds
push
or
xor
xchg
cmp
inc
jne
sbb
outsl
jge
stc
out
test
xor
push
xchg
loope
sbb
mov
cli
pop
pop
lock
scas
data16
ret
lods
sbb
daa
cltd
mov
dec
jno
in
push
sbb
cmp
rcrb
rcrb
mov
ficomps
add
xor
adc
inc
mov
loopne
and
fistpll
push
sub
add
mov
mov
rcll
inc
mov
jbe
push
iret
bound
or
dec
lods
xor
mov
js
cmc
jb
mov
mov
inc
mov
pop
rcrl
in
mov
or
inc
stc
lcall
sbb
pop
pop
pop
adc
ds
lds
push
cmc
xchg
xchg
adc
int
and
cmp
sbb
dec
pop
repnz
push
paddd
push
sub
test
push
adc
inc
pop
mov
cmpl
sahf
sub
leave
fwait
xlat
fbstp
fildl
iret
out
insl
or
nop
xor
leave
mov
popf
cmp
cmp
cmpsb
and
sub
inc
les
fdivr
addb
pop
sub
cmp
inc
imul
push
pop
and
mov
js
iret
ljmp
test
in
xor
loope
popf
andl
lods
adc
push
sub
jge
enter
mov
lea
mov
fldl
mov
sub
jl
mov
and
je
imul
scas
imul
je
lods
xchg
pop
mov
imul
inc
pop
adc
ds
es
mov
out
sar
repnz
ss
test
cmpsl
out
adc
mov
push
lods
push
or
cmp
mov
jns
loop
sub
xor
push
mov
popf
arpl
stc
lds
imul
push
add
popa
xor
cmp
push
pop
sbb
xchg
mov
mov
push
fwait
adc
leave
loop
pop
mov
aam
inc
jo
bound
xchg
int3
lcall
jb
negb
or
xor
mov
mov
roll
imul
shlb
jbe
xor
addb
xchg
xchg
push
outsl
movb
ja
mov
xor
jb
out
cmp
in
xor
jmp
lds
mov
repnz
inc
test
xor
lret
xor
ljmp
js
sub
data16
adc
ss
and
jbe
mov
hlt
mov
cmpsb
adc
les
and
mov
out
mov
inc
sub
rorl
push
sbb
pop
shlb
outsb
pop
rolb
and
lret
add
dec
pop
iret
mov
movsl
inc
and
mov
cmpsb
fldl
andl
cmp
pop
push
mov
maxps
adc
mov
jp
sahf
and
jg
xchg
inc
jb
mov
jp
adcl
push
mov
data16
movsl
pop
fnstsw
sub
lahf
mov
xchg
lea
in
popf
fcomip
sbb
pop
mov
inc
sbb
shrl
xchg
mov
popa
cmp
gs
adc
addr16
sbb
fimull
repnz
fwait
jmp
and
dec
cmp
std
les
stos
push
and
das
cwtl
push
inc
jbe
jbe
test
push
mov
mov
sub
mov
stos
push
push
loop
insl
xor
aad
enter
xor
inc
push
pop
ret
int
sahf
adc
and
xor
add
lock
or
repnz
and
lods
add
inc
movb
add
or
xorb
cs
dec
adc
or
ds
inc
mov
stos
cltd
xchg
xchg
fs
ret
aad
xor
push
pop
in
pusha
mov
pushf
push
mov
pop
jb
dec
stc
push
xchg
mov
outsb
shll
xor
mov
mov
xchg
mov
dec
scas
mov
testl
push
sahf
imul
mov
add
ret
out
jl
lea
pop
inc
mov
in
mov
dec
dec
inc
int3
adc
out
scas
inc
pop
ja
mov
stos
cltd
dec
xchg
xchg
imul
or
xor
inc
ret
in
jo
adc
ds
shll
mov
jb
jae
jg
arpl
roll
loop
fsubs
test
dec
mov
mov
es
pop
mov
and
xchg
call
jl
jae
popf
popf
pop
outsb
jecxz
mov
pusha
jp
mov
aam
out
sbb
add
loope
jg
jg
fdiv
push
mov
addr16
and
pushl
dec
aam
in
push
dec
pop
popf
leave
dec
aam
add
pushf
cs
scas
ss
scas
sbb
mov
stos
stos
in
adc
shll
xchg
dec
fsubrl
shlb
pop
adc
scas
insb
fs
gs
outsl
sbbb
in
pop
stos
sbb
and
pop
fs
inc
outsb
jmp
mov
fildl
push
xchg
fsubl
sbb
bound
lcall
insl
xor
ja
fisubs
shll
int
daa
popa
xor
test
loope
mov
xor
sub
outsb
adc
dec
call
dec
rolb
pop
mov
jmp
fcmovnu
sub
mov
ljmp
pop
sbb
xchg
lcall
stc
cmp
mov
shl
sbb
scas
pop
daa
xchg
dec
mov
rcr
cltd
in
or
jo
cmpsb
xchg
xor
addr16
mov
jecxz
test
out
arpl
mov
mov
fiaddl
mov
cmpsb
popf
sbb
das
xchg
out
mov
push
rolb
fsubl
dec
sub
loop
jp
cmc
fsubs
adc
pop
mov
insl
je
mov
scas
jg
pusha
sahf
add
insb
das
sbb
je
lods
sti
fwait
nop
movsb
push
fisttpl
insb
int
mov
test
js
jns
out
pop
sub
pop
ret
popa
xchg
xchg
inc
lock
mov
das
sub
fdivl
dec
inc
fsubrl
xchg
dec
pop
mov
aas
mov
repz
outsb
jo
push
std
adc
adcl
fsubr
push
add
xchg
push
mov
xor
jl
sahf
push
xchg
test
xchg
into
jno
pop
jne
popa
sbb
and
pushf
sub
sbb
cli
ret
pusha
dec
arpl
pusha
repnz
pop
loop
xchg
jge
daa
ret
repnz
jmp
repz
lret
xor
jns
and
dec
and
push
cmpsb
xor
outsl
rorw
sarl
ss
scas
in
movsl
fwait
jl
inc
sahf
cmpl
dec
in
lods
xchg
test
inc
clc
ds
mov
dec
inc
cmp
test
cmpsb
into
mov
lret
lret
cs
pop
xor
inc
lds
sbb
cmpsb
pop
daa
call
mov
adc
mov
pop
push
je
sbb
push
shlb
lods
rol
and
mov
push
lret
fidivrl
sub
in
addr16
xor
or
sbb
out
in
clc
add
ljmp
bound
mov
sub
fisttpll
ljmp
xchg
adc
pusha
lea
jg
mov
cmp
out
shrb
rorb
sbb
bnd
sub
in
or
lds
dec
xchg
adc
inc
jp
leave
aas
and
pushw
jo
inc
jp
add
shr
pop
daa
aas
daa
xor
add
lret
insl
inc
add
pop
cmp
push
or
int3
push
addr16
rcr
and
stos
stos
loopne
mov
ja
ljmp
and
cmc
mov
mov
sub
and
lret
fst
insb
ror
adc
fistl
arpl
xchg
iret
pop
mov
or
insl
rolb
loope
xchg
test
jmp
cmpb
inc
pop
fisttps
lahf
sub
dec
push
movl
test
mov
jl
push
xchg
mov
lods
test
adc
das
jp
notb
stc
push
xchg
lods
fdiv
jns
data16
lock
jae
jp
inc
xor
pusha
pushf
loop
adc
push
lods
test
sub
xchg
hlt
sub
adc
aam
mov
loope
add
push
sarl
push
daa
mov
popa
fmulp
sahf
xchg
cmp
outsb
xor
add
dec
jb
enter
vpunpcklwd
je
sub
sbb
push
jne
cmc
and
rcl
jns
pop
cmc
enter
mov
and
aam
sbb
mov
xchg
je
fsubrl
add
mov
push
test
mov
rorb
mov
cmp
mov
cmp
push
cld
xchg
ss
xchg
fimuls
fistl
leave
jge
push
pop
ret
adc
aas
xchg
push
jae
imul
push
cmp
das
inc
aaa
ds
add
ficompl
cltd
cld
test
ds
stc
add
dec
call
aaa
dec
and
imul
mov
xchg
outsb
aas
adc
pop
xor
push
xchg
or
dec
scas
popa
fildl
xchg
outsl
outsl
or
out
push
popf
in
mov
js
cmp
not
push
inc
test
loope
dec
add
adc
cwtl
fucom
mov
in
xor
dec
mov
mov
out
out
imul
push
lret
add
repnz
aas
loopne
mov
xlat
call
repnz
add
cmp
cmp
loope
or
adc
or
bound
cmp
loop
shrb
adc
jbe
popf
sbb
inc
or
inc
xchg
xor
jge
insb
pop
dec
inc
imull
and
ret
sub
xchg
mov
stc
cld
dec
popl
jmp
inc
icebp
dec
jmp
lods
aas
mov
xchg
mov
adc
push
into
adc
je
pop
xchg
lret
cmp
adc
imul
sahf
dec
cmp
xor
aaa
dec
imul
sbb
xor
adc
cli
adc
out
jne
scas
js
in
jecxz
xor
ss
lea
test
lahf
scas
jno
cmpsb
movsl
cmp
push
and
add
andl
aas
das
mov
stos
insl
sbb
and
in
in
and
jb
jl
or
push
adc
cmp
push
add
loop
fists
outsb
cmp
cmp
push
push
pop
xor
cs
adc
xchg
pop
push
mov
popa
xchg
push
or
fisubl
inc
dec
mov
sti
sub
add
push
loopne
es
rorb
adc
enter
dec
testb
xor
orl
pop
out
popa
mov
adc
loop
and
or
fs
xor
subl
xchg
mov
pop
mov
cs
dec
mov
bound
cmp
mov
lock
and
pushf
sub
sarb
mov
lods
and
mov
mov
sub
push
cmpsb
sbb
dec
push
data16
push
pop
lods
mov
add
mov
pop
xchg
int
xor
imul
int
mov
jnp
xchg
mov
push
pop
cmp
jns
nop
dec
aam
enter
mov
sub
outsl
insw
testb
out
cmp
cmpsl
int
rcll
cmp
pop
fstpt
inc
pop
arpl
adc
jo
lret
add
lahf
sub
cmpsl
mov
jl
fimull
mov
mov
cmp
lea
pop
ja
xchg
lret
pusha
mov
and
pop
ljmp
fcomps
inc
or
pop
insl
aam
cmp
outsl
push
and
jge
push
inc
lcall
xchg
sub
push
decb
jno
loope
sbb
outsb
lahf
or
push
adc
cltd
pop
inc
xchg
cmp
sub
das
push
sahf
cmpsb
loop
int
testb
cmp
xor
xchg
mov
adcb
inc
sbb
sub
pusha
xchg
adc
and
iret
xor
outsl
cli
sti
jnp
out
inc
mov
cwtl
lock
mov
into
sbb
scas
inc
test
js
outsb
adc
jb
cld
call
mov
jne
dec
pop
or
fcmovb
adc
enter
leave
mov
sarl
push
fsubl
int3
mov
data16
or
xor
mov
leave
mov
inc
jecxz
adc
xor
push
fisttpl
fstp
mov
dec
gs
and
mov
lahf
data16
ljmp
pop
mov
les
cmc
sub
ror
ljmp
jl
add
out
push
int
mov
pop
pop
addl
or
cli
call
lret
xor
nop
rol
cmovb
jo
add
mov
sbb
add
pop
stos
cltd
mov
outsl
call
jecxz
adc
sbb
xchg
mov
mov
mov
dec
or
dec
jecxz
or
jmp
inc
xor
pop
push
xchg
pop
add
inc
pop
dec
loope
adc
notl
mov
addr16
jns
in
xchg
lods
mov
jo
push
and
ja
aas
cmp
roll
xchg
inc
xor
enter
xchg
mov
movsl
andb
inc
xchg
es
inc
mov
insl
jecxz
shll
sarb
lret
pop
pop
rol
dec
pop
cli
jno
cmp
add
out
dec
std
inc
pop
stos
bound
leave
mov
pushf
sbb
jl
sahf
push
jbe
jne
jno
cmp
fisubrs
shlb
pop
fsubs
mov
mov
dec
adc
xor
add
into
push
push
andb
arpl
adc
std
pop
jo
int3
mov
lods
mov
mov
fdivr
mov
pop
loop
clc
sarl
or
adc
movl
test
pop
stos
mov
andl
lret
lods
or
jge
subb
test
in
mov
sub
push
cltd
jge
and
xor
jg
jecxz
daa
push
xchg
xchg
xchg
mov
pushf
pop
pop
stc
pop
mov
jecxz
cmp
push
xor
sbb
enter
aam
lods
cltd
stos
or
sbb
mov
fwait
push
add
sbb
sbb
js
sarb
and
pop
cmp
clc
xchg
mov
mov
sti
out
test
imul
sbb
in
adc
jb
mov
inc
daa
loop
cmp
mov
dec
jo
xchg
adc
repz
or
mov
popa
outsl
add
test
popf
test
push
jne
adc
xchg
dec
sub
push
ss
and
int
test
push
loope
push
rorb
inc
mov
popa
jns
jecxz
mov
adc
arpl
fidivrs
cmp
fisubrl
add
push
sbb
add
xor
pop
adc
push
xchg
movsb
shl
orb
cmpsl
bnd
les
lcall
cmpsb
inc
sub
pop
mov
xchg
addb
test
lock
dec
xchg
je
or
xchg
cmp
lds
fstps
rolb
cmp
loop
lock
sbb
mov
pop
mov
test
frstor
cltd
xchg
mov
sub
jne
fs
pop
jnp
and
or
aaa
mov
cmc
je
adc
das
push
mov
or
mov
adc
dec
daa
xchg
mov
lock
xchg
inc
mov
jecxz
sbb
pop
int3
push
adc
rcll
adc
movsb
mov
mov
test
xor
and
mov
lods
shrb
sbb
cmc
push
sub
into
push
jp
cmovae
jb
pop
jle
push
adc
adc
dec
sbb
push
sbb
mov
adc
adc
xchg
call
sub
xor
and
mov
mov
dec
xchg
mov
int3
adc
es
and
mov
pop
add
repz
loopne
mull
test
adc
pop
sub
fistpll
cmpsb
repz
mov
loope
int
and
push
fwait
and
push
pop
or
icebp
fwait
mov
or
fistpll
lret
jmp
lahf
fucompp
or
dec
xchg
incb
fimuls
mov
mov
pop
rcrl
mov
mov
xor
stos
xchg
jmp
ja
jmp
insl
lods
bound
adc
decl
leave
dec
xchg
push
mov
rorl
scas
adc
cld
hlt
xchg
adc
or
nop
fcmovne
add
or
pop
inc
repnz
xchg
push
adc
or
pop
mov
xor
leave
pop
add
fisttps
jae
push
pop
jne
xchg
fiaddl
cwtl
xor
ss
scas
mov
sti
and
xor
push
inc
movsl
cli
mov
out
aas
scas
add
mov
fwait
sbb
xchg
jae
sub
mov
in
jg
bound
inc
sub
repz
lcall
mov
adc
jecxz
sbb
xor
mov
lret
xor
mov
add
mov
mov
popa
push
pop
or
xchg
add
outsb
cmp
cwtl
or
adc
mov
outsl
fimull
stos
cmp
ret
xchg
add
dec
sahf
push
xchg
mov
mov
dec
xor
adc
out
push
cmpsb
cltd
ret
lds
in
les
mull
outsb
push
pop
xchg
adc
sahf
add
push
fisttpl
cmp
sahf
in
out
nop
or
das
int3
or
cli
andl
pop
popa
fdivrs
repnz
jne
mov
mov
out
sar
daa
pusha
and
imul
loopne
inc
mov
out
sti
mov
pop
xor
add
push
es
or
dec
and
sbb
xchg
lahf
hlt
mov
pop
mov
mov
test
xchg
lret
das
add
stos
xchg
dec
cmp
fistl
sbb
and
jmp
int
or
xchg
lret
xor
push
mov
mov
scas
scas
cltd
pop
das
lods
push
jae
cltd
stc
fcmovb
fsubrs
test
pop
scas
push
fwait
push
push
je
xchg
cmp
jg
je
and
jns
aam
adc
mov
jbe
and
cmpl
lret
popa
cmp
in
push
imull
out
pop
push
out
and
xchg
xchg
xchg
dec
push
jno
xlat
mov
push
push
jno
loope
pop
popa
shll
add
push
and
or
sub
fisttps
mov
outsl
test
dec
in
adc
xchg
scas
cli
or
jnp
xor
leave
rclb
and
push
repz
pop
in
loop
mov
repz
cld
sar
xchg
and
inc
jl
adcb
and
das
bound
lods
sub
sbb
je
push
out
hlt
jo
adc
shr
xor
push
mov
jl
call
cltd
sbb
xor
sub
cmp
add
aam
popa
mov
pushf
adc
xchg
repnz
imul
sub
xor
fsubr
movq
into
subl
sub
cmc
push
testb
popa
dec
pop
jp
test
push
daa
sub
and
mov
mov
aad
and
mov
ja
test
insl
rorl
ds
inc
jo
aaa
pmulhuw
jno
addr16
addr16
arpl
aaa
jmp
xchg
push
mov
mov
add
xorl
ret
sub
dec
ljmp
jmp
test
sub
sbb
sub
outsl
scas
mov
sub
sub
xor
popa
lods
fstps
sbb
iret
mov
arpl
jle
add
cmpl
imull
xlat
arpl
push
mov
mov
lods
mov
pop
push
js
dec
test
cmp
push
cmpsb
jns
jl
xor
shrl
sti
addr16
add
or
iret
lahf
enter
push
mov
dec
insl
repnz
mov
lock
fistpl
mov
push
push
nop
rol
hlt
in
mov
mov
push
adc
cld
mov
fstp
in
int
or
or
push
lock
int3
push
or
adc
cmpsl
xchg
lret
push
push
outsl
push
mov
or
scas
pop
mov
inc
mov
inc
mov
lods
or
and
cmp
adc
enter
aas
mov
aaa
and
lahf
inc
aam
inc
adc
pop
leave
push
fildll
xchg
push
push
push
or
aam
in
sbb
aaa
mov
cmp
in
lea
mov
sbb
loope
scas
loop
mov
sti
pop
xlat
mov
int3
cmp
sub
loope
andl
adc
lds
js
mov
adc
or
repz
mov
subb
sbb
loop
xchg
lds
xor
mov
pusha
mov
test
add
sbb
jecxz
dec
sahf
mov
cmp
dec
or
pop
or
pop
int
mov
xchg
and
inc
adc
push
scas
xchg
add
jns
imul
mov
lds
mov
dec
enter
sbb
xchg
stos
xchg
cld
popa
aaa
jbe
sbb
bnd
adc
mov
fdivp
pusha
jl
mov
sbb
pushf
ret
pushl
mov
aad
leave
and
cmpsl
test
nop
mov
sub
inc
add
je
inc
mov
mov
adc
loope
scas
popa
mov
jge
rolb
cs
out
test
adc
out
push
dec
push
cmp
push
fcomps
out
dec
adc
repnz
das
sar
call
jl
daa
cmpsl
sbb
daa
dec
aam
cmpb
into
jbe
or
mov
lahf
shlb
stc
add
fsubrl
sbb
dec
mov
mov
push
pop
cld
stc
push
enter
lret
outsb
mov
es
pop
jno
sbb
mov
sbb
mov
pop
sbb
jp
or
adc
arpl
in
sti
std
lahf
ss
sub
shl
and
xchg
sub
movb
in
xchg
add
cmp
and
sahf
mov
add
fsubl
and
sahf
push
xchg
xor
adc
addr16
jg
push
arpl
rolb
insb
outsb
movsbl
sub
push
arpl
mov
stc
insb
cmpsl
aas
mov
mov
cs
mov
rcll
shll
push
xchg
std
test
in
add
cmp
jbe
clc
push
inc
pop
dec
mov
fxch
fbld
dec
cmp
icebp
ror
les
data16
decl
push
mov
sbb
push
or
mov
in
addr16
pop
jp
xor
lcall
cmpsl
jbe
jg
add
jbe
and
jae
and
rcll
mov
mov
out
lcall
add
mov
aas
sbb
or
add
aaa
dec
pop
into
into
mov
movsl
pushf
jae
and
cmp
fcomp
jmp
sbb
pop
sub
je
add
jl
pop
fnstenv
cmpsl
negl
in
xor
fdivrs
fwait
push
push
scas
mov
fiadds
scas
lahf
jns
scas
bswap
jb
xor
imul
mov
add
cmp
inc
addr16
bound
xchg
push
cltd
cmpsl
test
jmp
adc
lret
dec
aas
sbb
cmp
or
aas
push
pop
stos
adc
andl
and
mov
jae
leave
pop
sbb
hlt
xchg
imul
xchg
mov
fwait
loopne
cmp
jg
stc
cmpsb
mov
push
in
mov
addr16
mov
jnp
mov
xchg
gs
pop
jnp
and
addr16
cli
adc
mov
jle
mov
mov
lgs
mov
arpl
lods
insl
xlat
bound
push
test
int
cmp
mov
sub
push
xchg
mov
lock
fnsave
xchg
lods
jno
shrb
stos
xchg
dec
loop
insl
and
lahf
dec
xchg
stc
rorb
imul
iret
dec
imul
jmp
or
mov
addr16
lock
pop
adc
xor
mov
jno
adc
pop
xor
xchg
int3
lret
nop
inc
sbb
and
fldl
int3
test
add
lods
std
mov
mov
pop
leave
cmp
adc
nop
gs
mov
fidivrs
cli
jmp
push
inc
enter
call
insb
mov
mov
test
or
pusha
push
push
aas
jb
daa
sbbl
inc
inc
push
cmp
outsl
rcll
mov
test
sub
jae
sbb
rcrb
mov
adc
adc
cwtl
push
je
inc
pop
push
add
out
mov
add
adc
gs
std
in
sti
hlt
bound
sahf
cmpsl
test
in
mov
stc
mov
mov
lds
mov
mov
or
in
subb
shrl
cwtl
in
dec
jle
inc
bound
jecxz
lret
pop
into
adc
inc
mov
inc
or
pop
lods
xlat
pop
outsb
insb
mov
pop
btr
cmp
lahf
pop
fcomp
ljmp
push
inc
rorb
mov
cltd
insb
mov
cwtl
shll
jl
dec
and
mov
ds
stc
bound
add
adc
add
xchg
popf
mov
cwtl
xchg
push
in
out
push
push
insl
aaa
xchg
xor
and
imul
jno
in
dec
sahf
scas
gs
nop
adc
test
xor
shrb
jns
cmc
adc
jmp
dec
dec
or
shlb
xchg
inc
adc
sub
ja
test
sbb
sti
in
add
rcr
xor
dec
rcrl
sbb
dec
popl
aaa
xor
add
mov
inc
loopne
insl
xor
inc
push
mov
mov
mov
mov
les
loopne
pop
cmc
mov
adcb
mov
or
xchg
sub
jge
outsb
aam
popf
push
push
pushl
sub
cmpsb
xchg
cmpsb
xor
in
and
add
and
fcmovne
ret
adc
subb
bound
in
mov
lods
aaa
mov
stos
mov
dec
lret
dec
lods
notl
lcall
iret
jge
stos
cmp
testl
dec
or
or
xchg
cmp
dec
lret
lret
leave
mov
dec
iret
aam
xchg
stos
mov
xchg
sahf
icebp
inc
sarl
pop
popa
loopne
pop
cmp
sub
daa
dec
mov
andl
lock
and
out
mul
fdivrp
sbb
xchg
pop
or
inc
mov
fwait
sub
pop
mov
mov
add
dec
out
or
sub
mov
ficoms
cmpw
ds
push
cld
add
sub
imul
in
dec
shl
repnz
sarl
jne
push
sbb
pop
out
loopne
ret
cltd
cmpsl
pop
xor
jno
repz
jnp
aad
and
or
les
fldcw
sarb
notb
xor
jns
mov
int3
inc
and
cmpsb
scas
jecxz
out
cmp
mov
and
loope
xchg
add
xchg
mov
adc
out
rorl
mov
cld
cmc
pop
or
mov
ds
add
push
out
lea
ja
das
inc
jne
ja
mov
inc
movb
push
xchg
cmp
or
in
pop
xchg
jno
mov
xchg
ret
jecxz
ficoml
ror
dec
loope
or
add
jae
mov
mov
gs
push
mov
repz
inc
loope
mov
mov
inc
sub
pop
iret
xchg
shrl
adc
push
sub
inc
jmp
into
jb
add
in
cmp
in
mov
clc
dec
mov
and
lods
inc
add
in
dec
pop
jge
add
jne
test
jno
pop
int3
pop
mov
mov
addl
sbb
lcall
and
aad
mov
adc
sub
sahf
mov
push
or
ret
cmp
dec
adc
sbb
das
xchg
test
loope
ret
loopne
cwtl
mov
jle
inc
cs
mov
add
sbb
and
dec
xchg
fnstenv
fmuls
xchg
loop
repz
shl
mov
dec
iret
lahf
and
shl
push
lahf
inc
stos
push
clc
mov
lods
lods
mov
ret
lods
pop
dec
std
imul
ljmp
cwtl
cmp
pop
jo
xor
adc
ds
push
subl
and
in
xchg
mov
int
push
adc
divb
and
inc
icebp
inc
push
jns
into
add
popf
fmulp
jg
push
aas
out
xchg
in
iret
mov
sub
or
mov
mov
negb
xor
cmp
aas
or
ds
sahf
and
xchg
int
add
adc
outsb
insb
sub
mov
inc
pop
je
mov
and
cmp
cmp
je
push
rcrl
mov
cmp
ss
mov
cmp
pop
dec
arpl
ret
lea
add
rclb
pop
push
push
les
scas
in
xchg
lods
pop
stos
or
enter
add
and
out
inc
sbb
inc
lds
rcrb
ss
scas
or
push
sbb
pop
push
cmc
dec
or
sahf
mov
pop
mull
stc
cmp
in
ds
cmc
fstpt
sbb
xor
int3
push
mov
dec
enter
mov
movsl
adc
std
adc
cmp
orl
sbb
mov
test
lret
lret
aam
call
push
in
lods
xchg
test
int3
mov
hlt
sysret
out
neg
xorb
fdiv
xchg
jmp
pop
fnstenv
popf
ja
scas
pop
test
xchg
aam
mov
fidivs
mov
stc
bound
arpl
mov
addl
xor
cmp
out
inc
out
test
cmp
cli
cmp
jns
xchg
sbbl
xor
stos
rol
icebp
in
nop
fistpl
lods
inc
mov
fdiv
scas
xchg
lds
sbb
jnp
mov
push
cli
cmp
daa
inc
rcll
and
iret
test
movsl
das
fcompl
popf
or
or
out
add
int3
fs
loop
aad
lock
or
xchg
cmpsl
ds
xor
jnp
xor
aad
adc
ja
sub
add
in
fs
xchg
sbbl
popa
fisubs
jne
rol
scas
mov
sahf
inc
cmpsl
movsb
data16
fwait
ja
inc
mov
inc
xchg
adc
cmp
mov
jbe
push
and
xchg
fisubl
sbb
sarl
call
push
mov
add
repnz
dec
mov
movsl
cmp
mov
pop
ds
dec
subl
pop
lret
push
jge
xchg
dec
xor
pop
cmp
jle
imul
mov
ret
mov
pop
push
mov
mov
mov
addb
jnp
adc
cmp
mov
jl
jp
xchg
cmc
jecxz
das
shrb
out
gs
lret
mov
pop
push
adc
jle
or
xorb
shrb
daa
jae
ftst
pop
cli
xchg
jo
jecxz
rorb
xor
jns
cmpl
jg
or
or
jno
mov
ds
lret
les
lcall
xchg
lcall
cs
sbbl
and
push
movsb
fdivs
aaa
shlb
mov
mov
xor
or
faddl
lcall
inc
and
arpl
and
jge
inc
lods
mov
mov
testl
mov
ss
orl
enter
cmp
imul
stos
out
and
loopne
inc
xor
scas
pop
ds
ss
dec
xchg
fdivl
mov
aaa
fcoms
mov
xchg
inc
ret
ftst
cld
push
pop
push
xchg
pop
mov
adc
add
cmp
je
insl
dec
mov
mov
movsl
les
pop
fnstcw
sub
jbe
sbb
xor
cld
lahf
cltd
das
out
push
jl
addr16
ja
ret
lods
cli
xor
int
fiadds
pop
cltd
nop
adc
rol
fmul
in
sbbb
jno
mov
ret
shlb
and
cs
xor
mov
dec
mov
mov
lret
ja
dec
and
lods
sbb
lds
jecxz
std
jle
or
insl
cmp
incb
es
inc
push
xchg
aas
daa
fisttpl
mov
out
stos
rcl
stos
nop
mov
lret
sbb
std
mov
xchg
and
jl
mov
test
xorb
xor
add
mov
outsl
sub
test
imul
and
mov
inc
fistpl
loop
ja
testl
pop
cmpsb
stos
mov
or
inc
or
outsl
movsb
add
data16
push
ds
jne
movsl
fnclex
inc
pop
inc
push
loope
push
test
adc
sub
mov
test
jp
imul
into
fisubrl
mov
call
pop
push
repnz
cmpsb
inc
add
adc
outsb
iret
insb
ljmp
adc
fs
out
mov
push
test
dec
repnz
sub
cmpsb
out
out
mov
sahf
xchg
xchg
mov
mov
mov
jo
clc
mov
fwait
jge
pop
jle
mov
xor
mov
mov
in
andb
and
fwait
push
pop
popf
test
popa
insb
cmp
xor
int
ret
in
insb
js
fstpl
lock
movsl
sahf
sbb
call
ret
mov
pop
or
add
jmp
outsb
lahf
adc
mov
aam
pop
orb
push
lret
cmp
push
shrl
push
mov
repz
xchg
push
inc
lcall
mov
lahf
inc
cmp
or
hlt
mov
call
rcrb
dec
mov
out
jne
mov
and
out
sbb
out
sub
gs
dec
lods
popa
mov
cld
leave
in
mov
mov
rolb
xor
rcr
mov
jne,pn
shlb
test
jge
push
jnp
mov
movsb
cmp
sbb
into
lock
and
xor
dec
push
add
cmp
dec
sbb
adc
mov
mov
and
push
ljmp
pop
mov
jae
sbb
xor
in
clc
outsl
rorb
inc
sbb
bound
mov
sahf
subl
mov
pusha
rep
shrb
es
das
jle
or
mov
cmpsl
mov
cmp
mov
psubq
sub
fistl
xchg
jecxz
inc
arpl
or
pop
test
fldenv
push
and
adc
scas
cld
sahf
xor
push
arpl
sbb
xlat
pushf
flds
push
ret
dec
shrb
jp
jno
add
push
mov
or
test
sub
out
pusha
addr16
or
into
inc
inc
jg
lock
pushf
out
mov
adc
sub
lods
mov
xchg
aaa
shlb
call
mov
sbb
mov
bnd
dec
arpl
in
mov
pop
xor
retw
enter
mov
pusha
adc
xchg
push
ficoml
mov
jno
pop
inc
push
xchg
mov
in
out
in
mov
adc
addr16
cmpsl
or
inc
mov
fwait
dec
xor
repnz
movsb
inc
xchg
lock
fs
iret
mov
sub
xchg
adc
sar
add
addr16
sub
ret
in
inc
sbb
gs
fnstcw
sub
iret
adc
jo
pushf
inc
in
gs
adc
jmp
pop
fiadds
mov
cmp
cmpb
mov
orl
gs
fs
mov
cs
mov
imul
pop
jne
push
or
jb
xchg
aam
out
sub
mov
push
push
and
sbb
loop
adc
fisttpll
in
push
stc
mov
imul
pop
and
xor
imul
imul
push
sbb
push
push
enter
repnz
dec
mov
and
xchg
sbb
jnp
pop
jnp
roll
shll
ss
jp
xchg
std
jge
es
in
xchg
decb
stos
sbb
jecxz
xorl
in
loopne
jg
hlt
sbb
mov
push
dec
ret
clc
jno
xor
inc
and
shll
push
sbbl
adc
fisubrs
lds
test
fldl
mov
repz
test
pushf
sbb
test
and
loop
shll
dec
lcall
jns
movsl
xlat
orb
xor
xchg
fcompl
xchg
inc
adc
dec
cmpsb
push
ja
mov
cmpsb
adc
sbb
cli
xchg
sbbl
or
test
cmp
lods
mov
dec
pop
add
mov
pop
lods
out
les
jno
loopne
call
loopne
pop
in
mov
sahf
lret
aam
and
xchg
mov
push
pop
jge
test
jb
nop
in
fisubrl
sbb
into
push
jg
in
mov
dec
xchg
lret
adc
sub
aad
lods
cs
int
ljmp
add
ret
pushf
shrb
test
pusha
mov
sub
scas
xor
scas
pusha
inc
aam
push
mov
dec
in
add
es
fiadds
dec
pop
movsb
mov
imull
ret
aas
scas
clc
int
pop
jge
push
lret
jb
mov
mov
cmp
test
enter
pop
les
push
jne
add
mov
clc
sub
adc
mov
out
ret
lret
out
fnstsw
push
in
dec
jge
cmpb
enter
in
aam
call
jmp
dec
aam
dec
add
pop
sbb
imul
jg
pop
mov
aad
aam
push
xor
jo
mov
xchg
test
or
scas
jge
addl
aaa
sub
lods
mov
cmp
cltd
adc
movsl
pop
les
and
push
pop
das
dec
dec
jecxz
jo
sbb
mov
mov
push
lcall
rorl
push
adc
sub
clc
andb
outsl
jbe
xchg
pushf
and
xor
or
in
sbb
mov
push
xor
xchg
pop
leave
call
dec
lret
std
mov
pop
sbb
sub
cmc
js
xchg
add
mov
inc
cli
sbb
popa
and
lret
int3
push
fmull
dec
jb
dec
sbb
jae
ret
xor
adc
mov
fdivrl
ljmp
jge
out
push
inc
or
push
adc
repz
jmp
xchg
das
adc
mov
mov
jb
repz
testb
mov
pop
in
mov
jmp
jmp
push
sarb
sbbl
push
test
xchg
jne
sub
enter
mov
xchg
inc
adc
mov
aam
xor
ret
cmp
loop
cwtl
or
xor
push
cwtl
xor
inc
mov
sub
stos
sahf
out
pop
scas
push
data16
loopne
call
repz
cbtw
outsl
in
cld
pop
cmp
mul
shl
mov
cmpsl
mov
inc
sub
imul
movsl
cmpl
sbb
sbb
push
xor
jae
insl
and
scas
xor
cmc
and
movsb
jecxz
add
mov
jge
cmp
push
sub
lret
pop
ja
add
mov
mov
xchg
loopne
cmp
int3
loopne
call
inc
jp
fnsave
jns
test
pop
loopne
jge
pop
cwtl
outsb
sbb
pop
cmp
rol
xchg
orl
adc
push
outsb
cmp
pop
push
ljmp
daa
test
loopne
push
ret
jl
and
jbe
xor
push
outsl
int
xchg
sbb
xlat
sbb
cwtl
jg
scas
enter
mov
mov
negl
pushf
sbb
cs
push
daa
cmp
adcb
mov
into
mov
cmpsb
pop
add
cmpsl
push
xchg
jg
add
lds
nop
icebp
adc
jg
push
cmc
dec
inc
pop
pop
data16
ljmp
dec
mov
inc
test
je
insl
push
sbb
bound
mov
je
cwtl
xchg
cwtl
negb
jns
lds
adc
xor
ja
imul
andnps
jp
pop
fistps
ret
dec
inc
aam
cmp
fsubl
loope
rcl
mov
jne
cmove
stc
rorb
sub
and
fwait
int
out
and
mov
mov
lret
aad
gs
les
inc
or
mov
add
int3
push
aaa
int
jno
pop
xchg
sarl
mov
inc
sub
int
lahf
jge
xchg
nop
cmp
mov
xor
jbe
add
xor
add
les
jno
mov
pop
add
dec
aad
xchg
movsl
mov
pop
or
push
lods
jae
sahf
dec
out
lret
adc
xchg
pop
mov
sarb
push
xchg
je
cmp
lcall
lods
inc
cmp
and
enter
inc
xor
gs
in
and
lldt
mov
xlat
fs
push
stos
push
add
stos
shl
lea
enter
and
shl
aaa
stos
inc
clc
cmp
dec
imul
popa
sbb
aad
pop
js
outsl
cmpsl
dec
popa
or
sbb
pop
and
push
add
popf
adc
mov
je
int
in
jmp
shr
test
mov
fs
enter
jle
sub
in
sbb
adc
call
inc
ljmp
pop
ret
cli
movsb
sbb
push
lret
inc
nop
sbb
xchg
jg
dec
test
cs
lahf
dec
test
pop
xchg
faddl
psllq
push
lods
sub
mov
fisubrl
xchg
ret
popa
pop
lcall
enter
cs
inc
fldcw
sbb
pop
cmpsb
xor
bswap
flds
in
in
scas
sbb
nop
mov
mov
mov
loop
fxch
xchg
inc
inc
fdivl
iret
xor
or
mul
adc
mov
push
add
mov
push
push
lea
adc
pop
sete
push
aaa
dec
cmpsb
ljmp
icebp
scas
pop
ds
cmp
cmpsb
popf
fisubrs
bound
popa
sub
pop
negl
into
es
pop
push
clc
shlb
and
loopne
adc
insb
addr16
and
mov
in
push
loop
mov
mov
sbb
aam
cs
xchg
jno
loope
lcall
imul
in
mov
add
xlat
sbb
test
pop
negb
sub
shlb
push
sbb
push
jg
and
push
lahf
and
pop
push
mov
mov
inc
sub
das
movsl
les
cmpsb
popf
ljmp
das
inc
jae
fistl
rcrb
jmp
mov
and
test
lea
xchg
inc
push
pop
pop
lret
mov
mov
jo
jns
mov
mov
xor
mov
xchg
and
dec
je
test
mov
popa
loopne
stos
sbb
mov
push
push
repz
and
cmpsb
int3
jnp
mov
out
jg
mov
lds
movsl
sahf
jbe
stc
dec
inc
dec
xor
pushl
cmpsl
scas
arpl
scas
rcrl
pop
scas
pop
mov
cmpsb
lds
shrl
jmp
mov
xchg
cs
pop
rep
push
push
xchg
test
imul
pushf
pushf
insb
je
clc
fwait
push
cwtl
mov
jo
imul
xor
sti
out
pop
jno
bnd
subb
and
xchg
xchg
lcall
sahf
fwait
ds
movsl
lahf
pushf
dec
ret
dec
or
or
icebp
fnsave
out
in
lods
nop
mov
sbb
arpl
fwait
dec
pop
daa
dec
data16
loopne
pop
dec
cmp
jmp
add
xor
or
lahf
push
int
lret
cmpsb
xchg
popf
push
push
inc
imul
std
in
rol
pop
xchg
outsb
xorb
push
lods
lods
cmp
stos
test
mov
or
ja
sahf
rcrl
popa
stc
dec
sar
test
push
sub
imul
or
cmp
scas
add
std
add
push
pusha
adcl
cwtl
loopne
hlt
adc
inc
jbe
in
and
dec
lea
les
cwtl
push
in
or
nop
pop
mov
sbbb
mov
je
cmpsl
mov
add
and
pop
lds
rclb
adc
and
daa
lock
sub
jno
in
pop
inc
lock
mov
inc
shll
lahf
clc
mov
ret
sub
pop
xor
or
add
pop
in
loop
jae
cmc
fstpl
test
jbe
out
movsl
mov
dec
dec
inc
adc
xor
push
daa
sub
addr16
mov
pushf
adc
arpl
inc
stos
popf
xchg
aam
cwtl
cmp
xchg
ljmp
pop
mov
icebp
push
lahf
test
adc
cs
movsb
pop
inc
sub
cld
cli
xchg
pop
mov
adcb
sub
lret
into
decl
lea
fiadds
inc
pop
pop
jge
std
or
dec
push
fimull
rep
mov
jb
call
sbb
in
mov
or
jmp
adc
bound
pop
push
sti
pop
stc
or
cld
jge
scas
dec
out
mov
rcr
sub
and
jge
push
cmp
scas
or
mov
pop
dec
dec
mov
pop
xchg
adc
pop
xor
dec
and
leave
scas
and
ret
inc
in
adc
inc
xchg
rorl
jo
je
fdivrl
and
fldcw
out
fdivl
add
shlb
arpl
xor
mov
cmc
mov
jo
stos
xlat
add
push
pop
or
repnz
nop
xor
in
adc
in
test
xor
xor
xchg
mov
jmp
lods
out
lods
cli
fisubl
inc
lret
add
push
arpl
mov
addr16
mov
inc
rclb
fisubs
std
in
cmc
jno
stc
dec
xor
decb
pusha
popf
leave
push
and
or
lods
cmp
orb
testl
pop
cmp
pushf
sub
incb
js
imul
je
aad
push
pop
int3
aaa
xor
scas
pop
rcl
cmp
cwtl
dec
dec
pop
xor
push
pusha
xorl
sub
cmp
and
cmova
iret
les
aaa
dec
pop
icebp
ret
imul
js
cmp
cmp
and
les
rcrl
sbb
jp
push
imul
inc
mov
or
or
imul
mov
je
ss
test
push
movsb
jne
out
outsb
aas
sbb
xchg
fidivrl
jl
mov
dec
stos
mov
or
ret
into
inc
das
adc
add
and
sarb
mov
insb
adc
lods
and
cmp
js
dec
imul
imul
jne
jno
fists
pushl
sub
insw
leave
bound
stc
data16
or
out
test
inc
xor
mov
xrstors
lahf
sub
lea
test
jnp
lea
sbb
mov
inc
arpl
in
xchg
rcr
push
in
loope
test
adc
popf
push
xchg
incl
cmp
clc
icebp
sub
pop
je
dec
fimull
into
xlat
imul
push
dec
add
ud2
jge
xor
pop
mov
pop
add
pop
jne
test
cwtl
jb
loopne
push
lcall
cmp
cs
sti
or
sbb
push
xor
add
out
sbb
xchg
gs
pop
xlat
insl
clc
nop
ljmp
adc
jp
mov
push
jns
lahf
arpl
test
aam
push
andb
mov
push
dec
cwtl
repz
test
push
mov
mov
in
cld
sub
and
adc
inc
add
inc
mov
shlb
pop
imul
pop
pop
sub
scas
mov
fisubs
stos
in
mov
movsl
loop
sahf
fwait
pusha
cmpsl
loopne
sub
in
mov
jnp
mov
dec
xchg
cmp
push
addr16
ds
fnstenv
pop
shl
imulb
push
push
pand
jno
rcrb
mov
dec
push
add
sbb
inc
mov
push
jmp
xor
or
rorl
das
cmp
sub
lahf
mov
xchg
rorb
xorb
iret
out
add
sbb
pop
dec
push
test
test
dec
push
rcl
pop
aaa
test
inc
mov
add
mov
push
sahf
std
push
decl
xchg
in
into
ss
mov
data16
popa
pop
inc
aam
or
mov
test
mov
lahf
std
cli
stos
mov
mov
mov
sub
jge
fdivr
jb
stc
xchg
push
mov
mov
jne
shll
pusha
sbb
cmpsb
inc
mov
fwait
enter
xchg
mov
jg
mov
or
hlt
push
repz
ret
mov
shll
fwait
cmp
xchg
aad
mov
popf
or
jg
fstpl
cmp
std
xor
or
sub
mov
or
push
dec
lods
jne
mov
sub
dec
xor
fwait
orl
pushf
cmpl
lods
push
test
push
xor
lret
nop
mov
pop
sub
imul
fildl
lds
mov
rclb
inc
sbb
dec
out
lahf
sub
shll
push
mov
outsl
cli
cmpb
pop
xchg
test
xchg
dec
outsl
pop
dec
js
mov
xchg
jb
popf
into
mov
roll
sub
outsl
or
push
loope
jg
test
clc
dec
or
xchg
push
pop
in
mov
mov
out
add
mov
cmp
jge
xchg
sbb
int3
lahf
mov
in
ja
mov
adc
xor
push
dec
jne
in
pop
pop
dec
into
sub
fucom
adc
jae
std
add
add
push
and
jo
dec
add
shrl
push
push
sub
lea
ret
imul
int
mov
lret
pop
rcll
fwait
loopne
mov
mov
jbe
add
add
fwait
pop
jmp
loop
push
push
dec
in
mov
movsl
shrb
push
in
or
and
rcll
test
xchg
mov
inc
dec
or
adc
mov
mov
sub
pop
mov
pop
xor
xor
int3
iret
xor
dec
mov
test
loop
cld
fsin
xchg
xchg
stos
imul
inc
addl
fcoml
mov
push
xorl
js
fcoml
call
cmc
data16
shr
bound
mov
daa
xor
mov
mov
mov
pop
daa
mov
push
ficomps
and
movsb
mov
outsb
sbb
pop
decl
xchg
ror
pop
pop
and
stos
js
inc
add
push
out
mov
push
ret
arpl
das
sbb
shl
shrb
dec
jmp
add
in
out
imul
add
push
pop
das
sbbb
in
xchg
add
loopne
mov
lods
xlat
cmp
je
fadd
bound
push
jo
dec
lods
jb
or
and
jae
out
mov
mov
push
pop
call
push
mov
aad
insl
sarl
cli
adc
xlat
jo
cmp
lret
imul
fbld
sub
pop
rol
shlb
imul
push
sub
enter
insb
pop
rep
cltd
test
sub
jno
push
and
stc
cmp
pop
adc
and
push
shl
push
xor
outsl
mov
xor
pop
test
rcll
shr
cmpsb
enter
dec
inc
inc
addb
jmp
jno
int
aam
adc
push
mov
js
sbb
je
push
aas
push
mov
dec
xorb
shll
es
addr16
jg
scas
call
shlb
mov
sar
cwtl
call
inc
repnz
xchg
inc
js
je
leave
imull
inc
pop
mov
sahf
push
pop
add
push
and
mov
mov
sarl
into
das
pop
cmp
pop
ret
inc
sbb
cmp
adc
stos
pop
aad
lea
cld
mov
lea
xchg
pop
cmpsb
adc
mov
pop
loop
pop
aad
lret
sbb
dec
fiaddl
xchg
rcrb
stos
jl
outsl
popl
add
xchg
sti
push
jae
mov
xlat
dec
stos
sub
push
push
mov
sbb
popf
xor
xchg
mov
insl
mov
ds
imul
outsb
in
add
out
pop
dec
lea
daa
add
or
dec
mov
ja
ret
stos
popf
fwait
mov
jns
add
aad
pop
test
pop
ret
out
out
jnp
mov
test
xor
cli
scas
pop
inc
sub
dec
out
scas
movsl
fcomps
and
inc
dec
cs
cld
daa
loopne
or
jo
mov
jnp
jo
es
std
mov
or
cmp
lahf
lds
or
jmp
ret
xor
adc
out
sub
data16
stos
ds
repz
ljmp
inc
xlat
mov
sahf
gs
jb
xor
cmp
xlat
stos
dec
aad
mov
cwtl
inc
sbb
or
jmp
addb
aas
xor
enter
adc
jecxz
cli
pop
and
jl
pushf
jp
xor
mov
pop
mov
jecxz
fidivl
lea
rclb
repnz
adc
imul
shrb
or
pop
mov
pop
or
loopne
jl
loop
adc
jo
mov
xchg
shlb
mov
jle
mov
mov
dec
cs
mov
jns
dec
and
sub
pop
sbb
filds
gs
negb
xchg
dec
lock
mov
xchg
fstps
inc
pop
add
aad
xchg
mov
push
dec
push
mov
sub
add
jl
movsb
push
push
in
cmp
jae
cmpsl
sub
daa
rorl
xlat
pop
pusha
xor
mov
insl
mov
in
ss
notb
mov
fwait
and
cs
sarb
push
cmpsb
and
ja
and
test
xchg
out
aad
pop
push
lods
ret
shrb
pop
icebp
or
test
add
jns
shrl
fs
lret
mov
mov
mov
or
dec
sub
inc
pushf
or
aas
arpl
jns
popf
xchg
dec
outsb
xor
andb
data16
ud2
mov
mov
pop
or
cmpsb
mov
sbb
in
into
stos
shl
fldcw
outsl
ss
push
inc
roll
xor
in
sub
jns
and
call
pop
jb
xchg
push
mov
xor
xchg
xchg
shl
jmp
or
popf
adc
lock
inc
cmp
jmp
in
std
ja
adc
popf
push
test
ja
cwtl
pop
js
lahf
insl
adc
daa
push
fsubr
popa
push
ljmp
adc
add
daa
sub
cmp
xchg
inc
loop
push
andl
repz
aam
lock
mov
ret
and
rcr
cmp
jns
cmpsb
aas
pop
jbe
dec
dec
xor
out
sub
mov
loop
icebp
into
add
mov
mov
inc
cmpsl
daa
cmp
fcomps
cmp
mov
movsb
mov
imul
inc
inc
add
push
adc
sahf
pop
inc
mov
pop
cld
dec
fidivrl
loope
pusha
rcll
jno
cld
js
fbld
dec
subl
cwtl
adc
add
out
dec
popa
mov
jg
add
fsubl
call
dec
adc
lea
or
test
shrb
popf
sub
mov
int3
addb
cmpsb
sbb
jg
cmp
cld
loopne
cmp
cmpsb
jl
lret
out
sub
jl
rorl
shl
cmp
pusha
mov
jle
mov
xor
dec
pop
ja
repz
push
cmc
aaa
aad
mov
call
test
jp
jbe
pushl
add
loop
test
jg
lock
pop
cmp
push
rorl
fwait
loopne
rcrb
add
adc
pop
lcall
push
scas
mov
addr16
mov
mov
pop
push
in
pop
xor
addr16
sub
aam
movsb
add
in
test
push
pop
ret
test
inc
loopne
pushf
imul
mov
cli
std
cltd
xchg
mov
push
push
leave
sbb
ss
mov
testl
sbb
mov
jne
fstps
or
add
xor
popf
in
cmp
mov
lea
jp
add
xchg
xchg
or
fscale
push
mov
cld
sbb
js
popf
pusha
mov
sbb
test
adc
jbe
sbb
cmpsb
and
mov
xchg
jnp
push
ret
xor
push
mov
jne
inc
pop
xlat
loop
fbld
fisubrl
add
xor
xchg
push
xchg
push
jge
pop
cmp
dec
inc
and
fidivrl
dec
outsl
icebp
or
mov
movsl
sbb
push
sub
mov
shll
out
stc
push
mov
jp
dec
sub
pop
add
sbb
and
xchg
and
das
movsl
rorb
push
sbb
cli
das
dec
push
jecxz
jae
push
xor
jl
mov
mov
out
push
in
xor
add
xor
push
pushf
data16
adc
int3
push
xlat
sub
xor
cmp
cmp
test
xor
fdivrs
jecxz
sbb
ss
xor
mov
sub
and
inc
xor
lcall
subl
pop
xor
clc
enter
push
ljmp
sub
sarl
fistl
pop
pusha
add
mov
hlt
fbld
cmp
jge
jp
ja
lock
arpl
inc
cmp
add
jno
pusha
imul
shrl
es
push
push
xchg
test
xchg
nop
js
add
in
ja
fdivs
jnp
ljmp
add
adc
aam
and
jecxz
fisttpl
mov
mov
fidivrl
lods
fidivs
inc
shlb
in
mov
int3
push
imul
sbb
inc
mov
sti
outsb
pop
push
xchg
pop
cwtl
movsl
sbb
lret
cs
out
into
ret
or
push
stos
in
xchg
les
stos
xchg
jno
sub
ljmp
gs
shr
pushf
jg
push
mov
mov
push
ds
xor
sti
push
stos
mov
push
sub
add
mov
insl
add
or
outsl
stc
mov
sbb
add
fimuls
aas
cmp
hlt
and
or
xor
mov
stc
add
mov
shll
or
mov
push
fwait
ror
scas
jecxz
push
test
mov
pop
test
sarl
push
addw
flds
mov
dec
adc
roll
dec
lret
roll
rorb
fwait
lahf
lea
xchg
push
loope
lea
ja
pop
hlt
sub
or
mov
xchg
mov
pop
addr16
xor
and
mov
ja
test
pop
nop
or
repz
xchg
rcr
mov
push
sbb
or
sbb
into
and
dec
cld
fsubrl
aam
in
jp
stc
mov
jle
aam
push
dec
sub
mov
push
sbb
dec
adc
loopne
je
xor
nop
hlt
in
sbb
hlt
pop
pop
int
mov
jnp
jne
int
lret
jnp
cmc
pusha
sarb
mov
jnp
dec
testb
in
mov
in
into
je,pt
add
es
sbb
mov
loop
sahf
mov
cmp
fsubrp
pushf
lcall
push
jno
mov
cltd
lods
inc
and
pop
xchg
inc
aad
push
or
ljmp
gs
es
in
jg
mov
inc
push
jle
sbb
mov
int3
das
push
out
pushf
add
jae
scas
push
in
add
roll
jo
loop
in
jnp
std
imul
notl
outsb
and
bndstx
jns
fcmove
lods
cmp
inc
mov
arpl
call
popf
jmp
stc
push
sub
jae
jmp
cmc
or
out
lods
stc
adc
adc
dec
pusha
movsl
outsb
mov
fisubrl
jp
ljmp
inc
mov
cmp
rcl
movl
mov
mov
cwtl
adc
add
mov
push
dec
lods
mov
loope
push
aas
pop
aas
call
cmp
clc
mov
pop
mov
scas
pop
inc
lret
lcall
xchg
out
in
inc
fcompl
mov
imul
call
push
sub
out
in
mov
movsb
fisubs
push
push
cltd
mov
clc
movsl
inc
test
and
ret
xchg
mov
inc
pop
inc
xchg
sub
es
aas
fdivs
dec
mov
sub
std
and
imul
daa
dec
negl
dec
pop
fmuls
xor
ds
jmp
pop
mov
lock
dec
bound
xchg
ret
adc
or
enter
test
and
test
push
cmp
mov
bound
adc
cli
rcrb
cmpsl
dec
enter
fidivrl
loop
test
rolb
inc
pop
mov
lods
icebp
fucom
adc
into
bound
xor
fwait
int
dec
xor
insb
xchg
jmp
cmpsl
sbb
push
mov
mov
xor
loopne
in
push
outsl
movsl
mov
pop
aam
pop
test
lock
aad
xchg
ljmp
call
sbb
cwtl
fnstsw
xchg
shll
scas
pop
movsl
fidivrl
outsl
adc
pop
jo
fisttpl
jb
enter
inc
sub
jnp
std
cmp
push
fwait
mov
test
or
cmp
pop
cmp
cmpsb
les
lret
inc
mov
addl
sub
sbb
xlat
test
pop
daa
stos
mov
mov
fiadds
popa
into
jg
movsb
inc
xor
and
shll
sahf
adc
inc
leave
sar
je
cli
xchg
mov
aas
mov
cmc
xor
data16
fmulp
adc
push
push
sub
xlat
jge
ljmp
sub
addr16
pop
cmpl
or
mov
inc
jae
imul
and
out
or
out
arpl
jae
fcmovnu
lock
sbb
jg
rorl
mov
mov
inc
test
into
stos
test
push
push
jne
push
push
and
cmpsl
aad
sbb
insb
xchg
lret
data16
insl
loop
xchg
ds
mov
mov
jno
clc
pop
push
push
adcb
in
mov
pop
pushf
dec
fstps
jle
push
movb
add
mov
add
jae
fstp
mov
in
pop
jp
arpl
aad
push
cmpsb
enter
sbb
cmp
add
aam
mov
jbe
cli
jnp
mov
inc
lahf
jecxz
mov
daa
mov
pop
cs
pop
mov
push
xor
and
es
shll
mov
mov
insb
push
inc
ds
jp
push
sub
outsb
rcrb
arpl
mov
ljmp
xchg
jno
mov
jecxz
push
jnp
jae
cmp
outsl
cmpsl
inc
js
mov
dec
ljmp
sub
sub
mov
xor
inc
subl
push
adc
fcoml
mov
lret
clc
sub
loope
test
xor
das
ret
lret
in
lods
mov
push
adc
pop
mov
cmp
mov
mov
loop
and
mov
mov
stos
xchg
lock
mov
addl
fmul
js
cld
or
and
faddl
pop
xor
jg
lahf
sub
ljmp
clc
data16
fs
cmp
addl
fstpt
adc
xchg
mov
or
insl
jecxz
lds
scas
dec
or
or
mov
mov
sbb
out
lods
adc
sti
addr16
shlb
push
inc
xchg
test
fstp
lcall
aad
mov
imul
ret
testl
inc
popa
ret
out
lret
into
insl
xor
sub
mov
pop
cmp
cmp
insl
rclb
xor
inc
ljmp
mov
rclb
push
aaa
inc
pop
inc
aad
mov
loopne
cmp
cwtl
sub
outsb
outsl
and
clc
cmp
push
or
insb
insl
fisttpll
mov
test
inc
enter
jle
es
ficomps
push
ret
jnp
dec
inc
sub
xchg
mov
repz
adc
fstpl
es
imul
faddl
pop
icebp
xchg
dec
cmp
dec
or
ss
popa
lods
leave
push
jae
lds
pop
sbb
decl
es
cwtl
mov
pusha
rorb
lods
in
int
aad
push
imul
test
addr16
lret
sti
loope,pt
add
icebp
movsb
sub
mov
icebp
or
add
stc
xchg
repnz
int3
mov
mov
in
fwait
pop
insl
xchg
dec
push
lds
movsl
iret
adc
out
inc
jge
jb
adc
ss
pushf
out
test
mov
mov
inc
add
dec
in
mov
and
enter
test
add
sub
ja
loope
mov
pop
lret
adc
mov
or
add
mov
in
cld
sub
sub
stc
mov
mov
das
mov
adc
sarl
fstl
loope
pop
inc
inc
or
xchg
jns
pop
out
cmpsb
dec
int3
sarl
cmp
jp
js
fisubrs
jno
adc
mov
jmp
push
mov
jl
and
popa
leave
cmovs
push
push
lods
dec
in
sbb
xchg
addb
mov
inc
sub
mov
dec
pop
pop
popf
xchg
adc
aad
cld
mov
sub
dec
nop
add
bound
dec
mov
add
or
movsb
fcomps
int3
test
insb
fwait
lock
fadds
cmp
add
xor
and
mov
push
mov
mov
xchg
or
dec
adc
dec
and
scas
xchg
mov
jns
pop
ljmp
xchg
xor
cmpl
sub
insl
andb
gs
aam
lret
daa
or
icebp
mov
mov
jnp
repnz
adc
loop
mov
int3
loop
out
mov
jp
cld
mov
dec
mov
pop
xchg
imulb
dec
mov
pop
mov
xor
mov
sbb
push
clc
fnstenv
or
cld
inc
fnsave
or
inc
insl
jbe
dec
push
ss
xchg
mov
jle
xchg
in
ja
loop
shrl
inc
cmp
jb
and
dec
dec
rorb
js
inc
xor
or
shrb
inc
and
sbb
nop
scas
inc
sub
cmp
out
jecxz
push
sub
or
cli
mov
or
xchg
push
inc
and
pushf
and
dec
sbb
push
ret
lcall
bound
ljmp
and
data16
xor
les
mov
pop
imul
mov
int
or
xor
push
hlt
push
mov
cwtl
rcr
mov
and
imull
mov
icebp
pop
adc
lcall
sub
fldcw
ljmp
outsb
fsubrl
adc
and
into
fwait
cmpsl
das
lret
pop
adc
cmp
pop
sbb
insb
sbb
sbb
pop
sub
lahf
inc
xchg
inc
adc
mov
fsub
test
jl
or
cmp
lea
and
insl
call
and
jle
jo
jns
xorb
push
into
lea
fsts
jge
xor
sbb
add
lar
push
push
xchg
addr16
xchg
mov
in
sub
sbb
mov
je
xchg
push
mov
mov
pusha
mov
cmp
or
inc
pop
aaa
popf
lahf
sbb
push
cmpsb
popf
popf
cmpsl
jae
xor
inc
loopne
scas
fs
or
xchg
in
mov
lahf
mov
insb
or
sahf
dec
dec
repz
mov
leave
jo
jl
popf
insl
lret
mov
push
jg
js
insb
or
mov
fidivrl
stc
adc
pop
pop
cmp
lods
imul
xchg
adc
sbb
aam
cmp
xchg
xor
xchg
dec
pop
out
dec
or
sbb
push
mov
stos
jno
mov
inc
lds
mov
cmpsb
jmp
sub
pop
shrb
das
jecxz
mov
pushf
xor
mov
xor
leave
dec
or
and
and
rolb
jmp
nop
sub
jno
dec
popf
cmovne
out
shr
insl
fs
in
xor
sub
sbb
adc
inc
lea
xchg
mov
adc
repz
fisttps
jle
xor
pop
js
repnz
test
iret
push
enter
adc
lahf
je
xor
repnz
cmc
outsl
add
jb
cmc
cmc
xor
sbb
and
es
or
mov
jmp
stc
jl
adc
mov
jg
sahf
dec
dec
fildl
push
fwait
jp
fsubp
pop
mov
test
jmp
cmc
popa
stos
into
sub
sahf
in
das
lret
jle
ficomps
dec
sahf
leave
jg
jmp
dec
adc
push
cmp
sbbl
adc
addr16
pop
dec
js
adc
add
cs
push
push
mov
push
jo
add
test
jns
sbb
xchg
pop
adc
ret
bound
idiv
mov
adc
cld
dec
in
jp
cwtl
ja
mov
mov
repnz
jo
sahf
sbbl
pop
jmp
subb
sbb
das
push
pop
cld
xchg
mov
orb
cltd
dec
enter
mov
push
stc
xchg
dec
inc
xchg
dec
dec
popf
pushf
sub
mov
in
ret
data16
mov
mov
in
and
shlb
sbb
daa
lret
xor
dec
adc
loope
push
loope
or
mov
enter
sbb
jmp
xchg
cmp
insl
jmp
dec
arpl
in
rcrb
lods
jnp
inc
sti
ljmp
mov
pop
pop
cmp
sub
bound
jle
lahf
andl
je
pop
fcmovnu
mov
lods
in
lret
sub
fildl
in
icebp
les
pop
out
clc
lock
orb
sub
shrb
mov
inc
stos
pop
popf
popa
dec
push
movsb
mov
leave
or
repz
push
repnz
pop
mov
loop
popf
loop
jg
imul
insl
or
add
mov
xchg
lahf
dec
jle
or
lcall
test
pop
inc
scas
mov
mov
fisubrs
jmp
cmp
dec
int3
sbb
scas
sbb
fcompl
mov
inc
shll
push
jae
stc
pop
pop
xor
insb
mov
aam
aam
adc
xor
push
in
negb
add
and
sbb
dec
add
xchg
and
or
jmp
adc
jmp
imul
cli
push
aaa
push
or
xor
pushf
ja
popf
cmp
leave
mov
sub
and
shlb
push
iret
out
insl
add
cmp
test
repz
jmp
ss
std
sub
in
mov
fcmovbe
adc
mov
lds
and
xchg
inc
loopne
test
loope
pop
cmp
mov
add
lcall
cmc
aaa
sti
outsb
in
mov
mov
or
hlt
dec
jle
je
inc
loopne
push
mov
daa
xor
jge
mov
push
dec
jb
add
fs
add
mov
mov
mov
fstp
and
mov
add
bound
fistpl
jge
test
and
push
pop
mov
push
loopne
sarl
mov
xor
je
mov
lods
cmc
cltd
push
or
sub
add
adc
fldcw
mov
lock
push
push
sub
fstpt
movl
adc
sahf
adc
ret
pusha
add
sbb
and
mov
push
ss
jp
shll
xor
sub
dec
and
test
mov
adc
mov
cmp
and
ss
out
mov
xchg
idivl
push
mov
ret
dec
push
mov
dec
mov
inc
lea
leave
xor
lock
cmp
mov
mov
sub
sub
std
sub
mov
push
and
pusha
dec
adc
cli
mov
das
mov
pop
mov
mov
movsb
test
lcall
adc
movsb
xchg
xlat
push
pusha
push
mov
xlat
cli
lret
lret
xchg
adc
jnp
jb
gs
cmp
shlb
lcall
or
stc
mov
fidivrs
hlt
mov
mov
mov
fsubrs
inc
sbb
ret
sbb
sbb
add
into
xor
push
add
out
je
inc
das
xchg
int3
movsl
lahf
xor
shlb
cltd
inc
jecxz
push
daa
mov
push
jbe
imul
lahf
ljmp
pop
cmpsl
push
jbe
or
dec
movsl
aam
in
mov
subl
pusha
mov
je
mov
and
pop
testl
dec
add
sbb
push
lret
lret
push
es
mov
jo
mov
sub
jns
push
push
add
mov
mov
imull
dec
xor
mov
mov
mov
aaa
add
je
xor
jne
push
scas
pop
and
cmpl
lods
jno
xor
cmp
dec
push
mov
push
ja
jo
sub
mov
daa
adc
aam
int3
aam
aas
xor
push
jns
cmpsb
fsub
popf
gs
sub
out
mov
mov
xchg
xchg
jae
shll
mov
mov
pusha
subb
shll
sahf
dec
movsl
popa
ret
push
mov
sub
inc
inc
in
int
sbb
cmpsb
lahf
pop
jno
pop
dec
scas
adc
imul
loope
inc
jg
fucom
repz
fs
pop
dec
imul
pop
mov
and
lds
cmp
iret
adcl
sarl
pop
lahf
pop
dec
push
cs
sub
bound
pop
fisubrs
sahf
xchg
pop
push
xchg
stos
mov
lea
lea
inc
mov
outsl
ss
mov
rolb
test
daa
mov
mov
negl
sarl
int3
xchg
in
mov
dec
pop
mov
loopne
push
xor
mov
or
xlat
mov
inc
pop
push
push
mov
mov
lods
arpl
push
mov
mov
mov
cli
push
xor
adc
insb
fnstenv
mov
sub
js
stos
jns
xchg
push
imul
popf
sbb
imul
and
int3
sub
cmpsl
or
mulb
scas
in
jo
xor
lret
scas
push
stos
cmpsl
insl
mov
pop
in
jno
or
jb
xor
push
pop
ror
fwait
push
xchg
test
sbb
sub
divl
inc
lea
inc
sbb
sti
cmp
xchg
xchg
ret
in
mov
lods
xor
add
adc
inc
cmpsb
scas
and
inc
dec
jmp
and
add
pop
sub
and
and
adc
and
pushf
subb
xor
lds
nop
fcompp
jle
test
gs
mov
xchg
scas
icebp
popf
in
bound
xlat
xlat
inc
cmp
rcrl
cmp
lock
sti
mov
stos
cltd
inc
scas
cmc
testl
mov
push
pushf
xchg
dec
inc
cmp
fidivrl
imul
aam
enterw
cwtl
hlt
push
testl
fxch
xor
outsb
jp
fcomps
sbb
bound
cld
stos
and
out
jne
push
negl
fs
mov
jp
pop
clc
data16
fst
sub
inc
imul
data16
sti
mov
fsubrs
cmp
lds
ds
imul
pop
mov
mov
decl
ret
sbb
test
adc
cmp
push
xchg
fmul
cmc
adc
sbb
jne
adc
add
xor
out
mov
cli
cmp
jp
mov
loope
inc
mov
aaa
mov
sub
jns
decl
sub
ja
xchg
mov
dec
shlb
insb
out
push
inc
add
sbb
xchg
mov
int
gs
addr16
ret
aas
push
and
mov
jae
fadd
imul
pop
cmpsb
ljmp
mov
in
adc
out
xchg
test
cmc
scas
inc
fcmovb
out
add
and
xacquire
sbb
orl
repz
xchg
push
js
jno
ret
inc
enter
push
popf
jg
mov
lret
loop
mov
pop
repnz
divl
dec
mov
pop
movsb
and
wrmsr
sbb
push
cwtl
sub
jg
out
sarb
xor
pusha
jmp
xor
cmp
inc
and
in
pop
xlat
loop
mov
jne
call
stos
push
or
pop
or
dec
adc
cmp
cmp
je
jg
xchg
cmpsl
loop
cmp
adc
int3
xchg
cwtl
xor
pushl
call
pop
xlat
sbb
push
rorb
hlt
mov
pusha
adc
aam
mov
nop
sub
push
mov
sbb
sbb
stos
jmp
jp
insb
sub
popa
mov
push
sahf
or
push
adc
cmp
aad
and
dec
loope
mov
pop
sub
insb
add
insl
mov
pushf
or
and
in
call
jecxz
dec
cmp
mov
mov
jbe
ret
hlt
enter
sbb
mov
jle
ficoml
sbb
fnstsw
cmpsb
mov
xchg
ds
outsb
pop
pop
inc
xchg
lock
dec
ret
and
adc
or
les
dec
shll
adcb
sub
sbb
int3
pop
in
lock
mov
add
xor
push
cmpsl
mov
fiaddl
lea
out
pop
into
jns
or
xchg
ds
mov
enter
mov
pusha
sub
push
xchg
sbb
popf
xchg
sti
dec
scas
addr16
sarb
imul
test
jb
cmp
jne
fimull
and
shll
in
mov
faddp
call
icebp
repnz
jne
roll
mov
stc
ficoms
les
pop
push
jae
fdivrl
sahf
push
sub
inc
mov
fs
sbb
and
orl
or
lds
sbb
ret
adc
or
xor
xorb
jge
ss
adc
xchg
outsl
movsb
lcall
fcomps
loope
in
pop
xchg
lods
dec
lret
add
cld
cltd
clc
or
sub
or
fsts
jmp
mov
xchg
divb
shll
sahf
lcall
pop
mov
fisttpll
lods
pop
ljmp
xor
loopne
xlat
cltd
push
test
add
cmp
imul
mov
mov
hlt
insb
add
in
jecxz
roll
rorb
push
pop
add
cmpsl
pop
ja
sbb
adc
and
mov
pop
inc
or
out
push
dec
or
ficomps
and
aaa
inc
hlt
jp
adc
test
jp
jae
xlat
mov
outsb
sub
or
aas
mov
out
mov
lcall
aas
and
ja
mov
sbb
mov
int3
movzwl
fidivrs
xor
xor
in
dec
in
ret
and
sarl
sahf
or
shl
jmp
xor
or
jl
dec
or
sub
cmc
jne
mov
mov
in
imul
mov
add
or
test
dec
test
stc
pop
stos
mov
jne
push
add
jbe
pop
push
pop
push
xor
sbb
push
lock
xor
mov
outsb
negb
inc
xor
in
inc
insl
lock
int3
mov
pop
push
mov
daa
popa
inc
negb
sbb
jnp
clc
jle
out
data16
xchg
sbb
jecxz
fbld
clc
add
add
ret
jnp
iret
add
mov
das
stos
mov
jle
in
adc
aas
stos
mov
adc
arpl
shl
push
movsl
jmp
scas
xchg
dec
je
insb
lods
scas
jmp
push
cli
pusha
push
dec
inc
mov
sub
test
ret
pop
jns
lods
mov
xor
mov
cli
leave
xchg
mov
xchg
pop
sub
sti
andb
pop
and
aaa
cwtl
push
or
push
test
mov
xchg
insb
sti
shll
ja
jnp
imull
in
xchg
and
fcmovnu
sub
mov
in
mov
rclb
add
pop
push
adc
push
inc
pop
sbb
das
lret
cltd
ret
mov
in
pop
rclb
addb
jnp
pop
inc
stos
sbb
cmpsb
pop
dec
or
insb
inc
sbb
jmp
adc
popa
std
sahf
addr16
sarb
xchg
push
hlt
jnp
or
aaa
jmp
lahf
jo
sti
stc
divl
gs
and
out
loopne
push
jge
sub
fwait
pop
jle
clc
lret
fcmovnu
and
sub
mov
aas
pop
fdivrs
repz
cwtl
mov
mov
adc
push
pop
addb
mov
mov
xor
mov
repnz
call
aaa
test
pop
dec
cmc
mull
push
lods
call
jb
mov
ror
out
cmc
inc
divl
cltd
lret
dec
cwtl
jge
vmovhpd
fnstenv
mov
cmpsl
inc
push
loope
sbb
cmp
mov
les
movsl
mov
mov
fbld
movlhps
or
nop
push
sahf
add
rcrb
mov
xchg
imul
testl
out
xor
cmp
clc
jb
mov
daa
sarl
jno
cltd
mov
pop
pop
cwtl
shll
call
dec
out
in
inc
roll
lret
inc
inc
push
push
fs
daa
push
aaa
cmp
mov
sub
insb
mov
cmpsl
mov
mov
add
lock
adc
pop
xor
and
xchg
or
andl
ds
mov
xchg
push
xchg
mov
cltd
jb
test
outsb
mov
movsl
repz
dec
sbb
cld
test
mov
jg
jns
andl
cmp
pop
gs
sbb
negb
push
mov
and
sarl
mov
js
jp
jp
daa
mov
movsb
aas
pusha
mov
or
into
dec
cld
dec
or
lret
push
sbb
jmp
xor
repz
mov
rclb
xchg
pop
and
and
mov
sub
push
in
add
jp
pop
push
test
cli
add
lahf
xor
icebp
xor
xchg
test
cs
cmp
cmp
or
add
jmp
add
push
filds
add
inc
add
stc
mov
out
add
dec
pop
jl
sbb
or
les
mov
inc
stc
pop
inc
push
cs
cmp
loopne
adc
clc
mov
cmp
fnsave
mov
mov
stc
fwait
cltd
sahf
gs
inc
jne
push
clc
cmp
pop
test
push
es
or
imul
xchg
push
jmp
test
add
sbb
mov
inc
xorl
daa
pop
pop
pushw
mov
mov
mov
aam
scas
mov
add
arpl
gs
adc
push
sbb
mov
es
stos
imul
or
call
add
test
jmp
inc
jbe
push
and
push
movsl
jmp
mov
repnz
sbb
stos
adc
sub
jae
sahf
jbe
lock
pushf
das
mov
jecxz
repz
jno
cwtl
push
das
jnp
jns
cmp
pop
imul
mov
clc
cltd
mov
xlat
or
cli
xchg
xlat
stos
cmpsb
divl
add
iret
les
int
not
bound
loope
xor
addr16
inc
rcll
dec
lods
pusha
push
test
mov
dec
and
fiaddl
fistpll
jl
popa
lret
and
out
xchg
and
es
aad
movsb
daa
jp
sub
mov
cwtl
push
jecxz
and
and
sub
bnd
sbb
xchg
jg
lock
cmc
repnz
ret
push
inc
sub
daa
jno
in
or
fstpl
push
lret
aas
jmp
mov
sub
cmpsl
push
call
jae
mov
mov
pop
subl
int3
int
insl
mov
add
lcall
mov
or
jmp
adc
popf
cmp
inc
dec
into
mov
scas
mov
xcrypt-ofb
cmpsl
jmp
repz
or
lods
cli
mov
addr16
add
out
mov
insl
cmp
icebp
out
mov
fdivl
pushf
mov
push
sbb
sbb
mov
sub
xor
sti
xor
fcmove
shll
inc
jg
or
fcoml
jl
stos
mov
inc
sarb
pop
mov
xchg
cmp
insb
shl
mov
xchg
mov
mov
add
out
pop
ds
nop
jecxz
cld
adc
scas
and
hlt
lea
inc
loope
sbb
mov
pusha
inc
sbb
mov
arpl
jmp
icebp
lods
xchg
pusha
or
xchg
mov
in
incl
inc
jno
lcall
or
cmp
imul
nop
fldl
sbb
fwait
push
adc
dec
xorb
cli
sbb
sub
hlt
mov
cwtl
in
pushf
jge
mov
jecxz
das
into
xor
cmc
mov
fimuls
cmp
xchg
or
pop
cwtl
add
jp
lock
xor
rcrl
scas
sbb
mov
outsl
int
add
add
fwait
cmpsb
jg
xor
and
loop
cmc
dec
loopne
sub
mov
adc
mov
in
test
cwtl
pop
dec
lret
or
mov
fnstenv
jecxz
cmp
test
inc
into
and
and
mov
sub
pop
mov
nop
cs
and
and
mov
pusha
ror
jne
sub
push
push
stc
leave
adc
les
push
or
jns
inc
loope
rcrl
imul
pop
sbb
sbb
cmpsl
push
mov
ljmp
data16
dec
rep
push
movsl
cmpsb
xchg
add
mov
rorl
lea
loopne
enter
fistpl
sub
fs
mov
sub
in
or
std
aas
xor
mov
or
pop
shl
push
and
add
repnz
pop
inc
pop
xchg
sub
out
mov
shl
inc
in
add
mov
test
insb
fidivrs
and
cmp
movsb
xchg
dec
mov
mov
imul
xchg
xchg
pushl
mov
gs
or
ss
or
push
enter
mov
inc
mov
pop
loope
jecxz
or
icebp
add
or
jl
mov
insl
cmp
mov
lahf
pop
xlat
push
mov
jno
jno
rcrb
insb
shr
enter
dec
push
inc
das
in
jmp
sahf
mov
movsl
dec
dec
fs
push
test
jl
test
xchg
fdivp
dec
sti
cld
gs
or
cmc
mov
lea
ds
daa
jmp
add
movl
sahf
xchg
addb
movb
loop
inc
jb
push
clc
push
jnp
mov
cli
bound
jno
jmp
stos
testb
ficoml
inc
rorl
sub
or
aad
inc
fldenv
shrl
inc
dec
dec
out
jp
rcll
pop
lock
and
call
scas
inc
or
pop
mov
sbb
lahf
xor
lcall
xchg
push
sbb
gs
in
test
add
faddl
cltd
fildll
cmp
lea
add
or
xor
inc
xor
sub
imul
or
and
jle
adc
mov
pop
pop
mov
sbb
aad
daa
das
fistps
testb
loope
adc
repz
cltd
imul
stos
inc
mov
cmpsb
mov
out
cmp
dec
cmp
shr
dec
movsl
dec
scas
push
dec
add
cmp
mov
stos
jo
pop
fisttpl
or
lret
sbb
cmpsl
fidivl
test
lods
ja
cmpsb
xchg
mov
mov
out
js
mov
add
in
add
mov
movsb
inc
inc
mov
std
lods
lock
mov
jecxz
orl
mov
jg
fcompl
push
push
pushf
or
inc
and
xchg
xor
jo
lods
in
push
fistps
stos
subl
or
sbb
and
cmp
into
dec
adc
jno,pn
pop
pusha
movsb
fidivs
into
flds
imul
pushf
add
add
mov
ds
mov
jne
sub
mov
mov
ret
stos
mov
jae
xor
std
cs
cs
adc
je
fisttpl
sbb
dec
inc
aam
mov
int
mov
testb
xor
mov
shrb
xchg
inc
mov
pop
push
sub
mov
inc
subb
call
out
push
cmc
loop
or
sub
xchg
add
cmp
or
outsl
les
inc
jo
test
adc
js
sti
mov
sbb
push
xchg
mov
ficoms
fiadds
dec
xchg
rcll
std
xchg
out
sub
pop
pop
lods
das
insb
xchg
ljmp
push
mov
in
mov
out
bndldx
imul
pop
lret
sub
fcoms
xchg
cmp
sbb
xor
sbb
jne
pusha
sub
and
negb
adc
stos
ljmp
outsb
or
adc
in
mov
dec
jns
inc
imull
sub
jp
or
xchg
aad
dec
mov
out
popa
daa
lock
add
shlb
stos
cmp
in
mov
fldpi
gs
test
push
aam
cltd
sub
nop
jecxz
lret
xor
popf
movsl
mov
sti
jno
ljmp
mulb
outsl
jle
pop
xor
iret
mov
shrb
sub
xor
popa
jp
movsb
sbb
jnp
sub
inc
jnp
pop
push
idivl
lret
add
repnz
test
xchg
pusha
add
inc
mov
mov
cli
scas
rolb
xor
and
fwait
ja
orb
enter
jmp
aas
or
dec
icebp
jne
clc
hlt
in
scas
jp
xor
mov
mov
push
fsubrp
lahf
divl
outsb
add
stos
aad
out
adc
mov
repnz
and
aas
out
shll
mov
mov
outsb
mov
ds
push
add
arpl
lahf
xchg
frstor
pusha
scas
xchg
jp
mov
inc
aad
push
mov
ret
imul
outsb
addr16
and
sbb
cwtl
or
jmp
sahf
or
jne
mov
or
cmp
aad
rcrb
push
outsb
add
cmp
sbb
cmp
dec
pop
lds
stos
popa
jb
fucomp
out
fisubrl
push
mov
loopne
cmp
jno
jne
push
addr16
imul
mov
dec
scas
test
cmp
sbb
stc
in
lods
loop
mov
lods
outsl
fcoms
inc
loopne
std
gs
mov
push
in
pusha
push
cmc
mov
lret
arpl
jmp
hlt
cmp
pop
or
or
sbb
jmp
je
iret
add
mov
cmp
push
mov
push
shr
test
mov
push
pop
lods
sub
lret
mov
pushw
aam
cmp
ljmp
jge
arpl
sbb
fistps
negl
mov
insl
xor
cmp
push
sub
jecxz
bound
cmp
stos
mov
jge
daa
aaa
adc
jge
cltd
aaa
mov
decb
jl
add
cmpsl
pop
mov
das
popf
xchg
and
xor
push
push
cmpsl
dec
aas
pop
fmul
push
fs
add
ret
repz
rcrb
arpl
mov
adc
rcrb
jae
xor
jecxz
dec
stos
into
std
xor
lods
cmp
inc
and
inc
inc
sub
cmpsl
data16
push
sbb
popa
xor
xchg
ds
push
pop
imulb
cmpsb
pop
into
push
test
mov
xchg
xor
rclb
lods
fildll
fwait
std
mov
mov
mov
aam
push
push
add
sbb
les
ljmp
scas
inc
jg
mov
xchg
mov
xor
and
aaa
pusha
insb
cmpsl
mov
mov
aam
cmc
jg
push
out
push
clc
mov
loope
loop
addr16
add
mov
lret
cmc
stos
mov
mov
dec
test
stc
sti
xor
inc
std
into
mov
aad
ret
jle
ret
lret
xchg
stos
jb
rcll
negl
jns
cmpb
xchg
mov
cli
out
pop
mov
mov
push
push
sbbb
outsl
in
lcall
ja
int3
call
sub
into
mov
cmpsl
add
fcmovnu
mov
inc
push
mov
push
jnp
stc
enter
imul
push
mov
jge
cltd
loopne
lahf
imulb
std
dec
xor
imul
cmp
repnz
push
out
mov
and
mov
cs
idivl
sbb
cmp
push
cmp
jno
xchg
jg
fidivl
loope
push
sbb
lcall
loop
inc
fbstp
cmp
jg
pushf
shr
lock
clc
mov
jecxz
jp
in
fldcw
sub
je
jb
jmp
sub
fs
cli
pop
xchg
mov
jae
pop
mov
and
dec
pop
cmp
jo
cmp
sub
jae,pn
in
pusha
pop
or
dec
hlt
dec
or
rol
pop
mov
das
mov
lods
mov
shll
icebp
cmp
lret
cmp
js
jns
xor
or
push
mov
lods
lret
iret
add
imull
daa
cmp
and
xchg
subb
sbb
xor
jp
lock
mov
stos
jg
and
adc
sbb
push
inc
jmp
fimull
sub
mov
push
cltd
mov
lret
xchg
sbb
outsl
pop
mov
pop
icebp
dec
dec
scas
xchg
out
sub
mov
cmc
jle
cmpsl
out
xor
mov
imul
cwtl
loop
sbb
push
pop
inc
jmp
push
mov
cmp
jmp
adc
cmp
addl
mov
push
clc
inc
mov
mov
sub
xor
into
fimull
add
hlt
loope
popa
aas
adc
cmpsb
lods
arpl
lds
ss
in
enter
int
sub
dec
cmc
popa
sahf
je
push
ljmp
add
add
rol
xchg
fs
push
ret
enter
mov
wbinvd
adc
popf
jns
and
adc
test
xchg
icebp
cwtl
test
fbld
aas
and
insl
pop
sbb
hlt
fstpl
out
popa
push
adc
push
jecxz
cmc
sbbl
push
es
cmpsl
mov
push
ret
insl
or
mov
ljmp
sub
aad
dec
mov
xchg
inc
fimuls
mov
pop
icebp
xchg
int3
jb
sti
je
cmpsb
je
sarl
sbb
mov
je
stos
xor
mov
jmp
js
mov
xor
sub
shll
shrb
lret
push
jb
shll
xlat
pop
pop
adc
stc
push
outsb
mov
daa
push
fmuls
adc
insb
out
mov
fmull
insl
push
clc
outsb
adc
cmc
cmp
sbb
xor
ds
or
repnz
xlat
dec
cmp
push
pop
or
and
scas
stos
or
mov
cmp
test
dec
pop
pop
cmp
sbb
xchg
mov
sbb
dec
sahf
pop
into
shrb
adc
js
les
push
jmp
mov
dec
pop
cmp
jb
mov
add
adc
mov
scas
lret
bnd
jecxz
aad
pop
idivl
mov
lret
testb
adc
jmp
sar
add
or
add
mov
mov
out
sub
xchg
sub
inc
cmc
test
aad
into
adc
lea
lcall
fwait
inc
xor
repz
rep
or
xor
cmp
scas
add
les
in
push
xorb
mov
cwtl
xchg
push
inc
int3
and
in
xchg
out
daa
insl
mov
push
cmpsl
xchg
scas
int
int
jne
lods
loop
mov
xor
xchg
adc
loope
mov
pop
mov
popf
lahf
sbb
mov
push
out
lret
mov
xchg
stos
push
in
cld
aaa
inc
cs
cwtl
iret
sbb
add
inc
cwtl
jp
or
dec
jbe
push
jge
lcall
mov
xchg
testb
cmpsl
sub
mov
push
hlt
sbb
ljmp
dec
fdivs
lea
mov
add
lahf
loope
sub
stc
mov
aam
test
leave
pop
jne
and
dec
adc
cld
pop
mov
pop
movsb
es
fcompl
lea
lcall
nop
add
mov
repz
inc
dec
xchg
fisubrl
mov
imul
adc
icebp
mov
cmp
lods
int3
xor
push
ret
or
call
mov
pop
std
cmp
adc
cmp
das
pusha
mov
orl
cmpsb
insl
or
out
into
ret
inc
dec
lock
jno
mov
or
inc
js
jecxz
daa
sub
xchg
mov
lods
daa
xor
cs
push
add
mov
or
cmp
pop
mov
and
mov
adc
mov
std
mov
or
rcll
dec
shlb
xor
jns
dec
aas
fisttpl
out
icebp
mov
clc
test
les
fdivrl
sbb
divl
test
out
jne
insl
ret
test
xchg
cmpsb
sti
in
or
mov
outsb
cmp
jp
cmp
mov
add
xchg
inc
xor
jo
inc
cmc
into
enter
inc
mov
sub
inc
aad
push
push
in
push
sub
paddusb
pop
and
xchg
repnz
imul
lods
add
jne
xchg
mov
movsl
cmpsl
shl
xor
cmp
iret
cwtl
nop
dec
test
cs
ret
fdivrl
es
inc
mov
xor
iret
inc
rol
cmp
mov
andb
push
xor
xlat
outsb
nop
jae
cmc
mov
inc
mov
sub
cmpsb
ja
adc
enter
fiaddl
fcmovnbe
and
into
insl
pushf
mov
or
jge
mov
icebp
inc
xchg
mov
loopne
shlb
xchg
mov
rolb
jecxz
inc
fcom
sbb
imul
into
mulb
mov
push
push
xlat
push
clc
inc
imul
sub
lea
jle
jne
inc
loope
cmc
pop
fldl
mov
xchg
fildl
test
sbb
loop
aas
push
xlat
jo
jb
xchg
push
inc
push
xchg
pop
xchg
push
dec
pop
data16
push
mov
cmpb
sti
push
jne
hlt
xchg
or
jmp
sub
sub
in
enter
sahf
and
sbb
call
pop
in
inc
lret
jb
mov
or
insl
cwtl
dec
loop
push
jmp
push
jp
loop
inc
mov
imul
sbb
lds
je
jg
xchg
daa
call
lahf
dec
mov
xchg
dec
inc
add
add
xchg
push
shlb
cmp
stos
sub
maxps
dec
repnz
int
cmc
into
mov
insb
in
add
movsb
push
add
aas
imul
sub
mov
sbb
dec
mov
pop
mov
sbb
call
cmp
xchg
ljmp
push
test
fcmovnbe
test
add
jge
xlat
jnp
pop
or
sti
dec
daa
mov
bound
adc
mov
iret
fstl
fcmovu
push
inc
test
nop
jbe
add
add
daa
aam
xchg
and
xlat
lret
je
out
xor
inc
cltd
cmpsb
mov
add
inc
lds
pop
loopne
std
es
inc
cli
jmp
push
fcmovnbe
stos
and
pop
and
fstpl
cmp
jmp
jbe
test
cs
inc
mov
cmp
loop
xchg
xor
adc
xor
loop
jne
into
daa
lret
testb
jns
mov
inc
pop
arpl
adc
lods
jno
sub
adc
push
and
imul
stos
sub
push
pop
sbb
les
aad
scas
roll
mov
aam
and
mov
mov
fmuls
std
mov
lahf
mov
mov
test
je
repnz
mov
sbb
sub
mov
xchg
enter
sbbb
rcll
sti
add
je
push
icebp
enter
movsb
loop
pop
inc
push
andl
jb
movsl
and
mov
scas
jp
mov
ja
outsl
push
xlat
inc
scas
xchg
jne
xchg
xor
outsb
and
adc
stos
push
pushf
pop
mov
nop
out
bound
stc
sbb
orl
jl
jg
sbbl
out
fdivs
add
and
inc
addr16
pop
lea
dec
in
stos
xchg
es
movsb
cmp
out
adcl
cs
cmpsl
mov
push
xchg
xlat
inc
sbb
cld
pop
jge
cli
add
inc
jb
dec
shll
push
mov
xor
aas
add
pushf
jecxz
leave
or
je
xchg
sub
fistpl
pop
sub
pop
sbb
in
fstps
lcall
repnz
outsb
xchg
push
xor
lahf
sub
adcb
xchg
mov
cmp
scas
push
mov
sbbl
dec
call
pop
mov
lret
dec
fidivrs
lods
or
push
or
and
mov
mov
sub
lcall
sub
sti
addl
xor
adc
mov
jnp
dec
dec
incl
fbstp
or
lods
dec
lea
sbb
mov
nop
lcall
pusha
cmpsl
jbe
xor
shll
andb
stc
imul
add
and
pop
lea
lea
call
jecxz
push
pop
xor
lds
loopne
mov
push
bound
sti
arpl
pop
lcall
mov
inc
inc
je
es
jbe
aas
mov
jae
xchg
incl
mov
jl
lock
sarl
lea
pop
clc
xorb
jne
je
test
pop
dec
mov
add
push
mov
bound
ss
mov
mov
movnti
nopl
mov
pop
imul
pop
mov
dec
fs
aam
aam
dec
and
scas
add
ret
mov
lock
cli
jp
xchg
shll
mov
and
and
jle
push
mov
jb
mov
cmpsb
sbb
inc
out
out
daa
pop
repz
test
jmp
sub
or
pusha
add
adc
sbb
cmp
mov
or
push
push
sub
loop
rolb
jmp
lods
test
add
fstl
add
imul
pusha
xchg
sbb
test
sbbl
xchg
add
pop
mov
cwtl
in
xchg
insl
shl
sbb
or
mov
std
add
sbbb
adc
scas
adc
pop
xchg
or
inc
xor
xchg
test
push
sub
mov
mov
push
adc
into
aas
add
sub
stos
sarb
or
pusha
icebp
xchg
adc
gs
mov
and
ljmp
push
sbb
inc
lcall
dec
cmpsl
iret
jecxz
cmp
sub
xor
or
jne
jg
out
ret
lcall
xchg
lock
adc
mov
cltd
jae
shll
in
pop
xor
iret
jne
mov
jle
sahf
int3
adc
sub
fadd
lods
jnp
or
dec
pusha
push
mov
cli
jbe
xchg
clc
daa
out
insl
sbb
jno
push
imul
rolb
negl
xchg
add
loop
aas
mov
jp
lret
arpl
xchg
pop
cmp
lods
fstpt
ds
xchg
outsl
adc
add
jge
mov
push
fcoml
stc
cmp
adc
dec
iret
xor
cmp
mov
push
sbb
mov
daa
in
fimuls
xchg
imul
ds
dec
xor
enter
cmp
push
mov
mov
push
adc
fsubr
insb
fsts
push
ds
lcall
fwait
stc
rcrb
mov
xchg
hlt
mov
fldl
push
ret
gs
mov
pop
mov
shlb
lods
cmp
movsb
popa
dec
lahf
inc
push
sbb
imul
and
cmp
mov
sbb
xor
rolb
cmp
cmc
ljmpw
out
mov
scas
ret
push
push
xorb
xor
jnp
insb
shlb
xor
pop
jge
mov
arpl
pop
xchg
cwtl
or
sarl
mov
xchg
shl
rclb
adc
pushf
fimull
fcmovbe
jnp
insl
mov
outsb
imul
adc
or
cwtl
daa
fcomps
outsb
fists
pop
jl
or
das
fisttpll
sbb
push
mov
mov
scas
fdivp
inc
lahf
dec
xchg
add
repnz
sub
or
aam
jl
jne
out
ret
jae
cwtl
lods
pop
movsb
loopne
filds
ds
inc
jnp
dec
fisttpll
cmp
jecxz
scas
in
dec
sbb
out
divb
fdivs
xchg
ret
clc
orl
nop
pop
repz
or
cmp
xlat
sahf
fisttpll
lods
loop
xchg
cmc
adc
adc
cmp
inc
lret
pop
out
inc
movsl
sub
add
xor
cmp
movsl
ljmp
fdivs
addr16
and
add
dec
jb
jne
bound
in
push
les
jnp
pop
jp
cmp
test
mov
cltd
out
xchg
or
lds
xchg
fstl
jp
adcl
rclb
adc
add
in
scas
leave
outsl
je
or
aad
push
xchg
sti
nop
lods
daa
das
fdivr
adc
xchg
adc
add
out
scas
mov
xchg
and
stos
fcoms
cmp
loopne
fisttpll
jmp
xchg
cwtl
repnz
imul
in
inc
lods
jge
aaa
dec
mov
lret
das
imul
testl
fstpl
out
test
dec
dec
sbb
sbb
lea
jecxz
in
xchg
out
lea
push
cwtl
mov
and
mov
dec
inc
jae
out
popa
fildl
js
lret
sahf
pop
xchg
cwtl
mov
pushf
add
pop
xchg
dec
addr16
aam
cmpsl
rorb
lret
insb
jp
push
push
or
jbe
mov
leave
out
lock
mov
jmp
push
inc
pop
or
lods
jmp
mov
jns
inc
xacquire
dec
leave
insl
cmp
stos
dec
stos
sbb
mov
sub
leave
cwtl
pop
scas
flds
lods
lods
int
mov
mov
lock
adc
pop
fdivrl
mov
ror
mov
push
in
sti
loope
dec
cmpsl
shrb
mov
push
divb
adc
xchg
xor
xor
mov
ljmp
mov
xor
cltd
xchg
icebp
mov
or
jge,pn
iret
add
lds
ret
jb
mov
cli
movsl
adc
cmpb
mov
rcl
cmpb
in
cmp
xchg
push
sti
mov
out
lret
mov
outsb
dec
cmpsb
mov
jg
xor
test
cmpsb
jb
and
mov
gs
decl
sahf
fs
rcl
lods
adc
pusha
mul
mov
jnp
js
mov
dec
sbb
adc
data16
dec
rorb
dec
mov
or
push
push
or
scas
loope
pop
sahf
movsl
pop
jg
push
repz
cmp
mov
mov
insb
xor
jmp
jne
pop
add
mov
mov
imul
dec
cmp
mov
dec
dec
xor
int
lds
addr16
test
inc
sahf
arpl
mov
xchg
lods
lods
xorb
icebp
mov
leave
lods
mov
arpl
cmpsl
sub
xchg
fistl
nop
pop
lret
add
aam
push
fnstenv
cld
fisubrl
and
int
mov
test
add
and
ss
mov
movsl
xor
or
pop
cmp
das
and
mov
sbb
shl
push
leave
aaa
jne
or
xor
xchg
subl
aas
or
mov
sub
sbb
pop
in
and
xchg
mov
sti
cmc
push
pop
repnz
adc
mov
ja
mov
ss
mov
outsl
mov
xchg
and
jnp
push
adcl
mov
cltd
ret
shlb
clc
jnp
hlt
pop
dec
divb
xor
push
mov
ret
data16
dec
int
sbb
inc
addr16
and
cmovno
ret
or
fbld
je
shl
or
pop
popf
rcll
mov
mov
js
jg
or
fucom
decb
or
fsts
dec
faddp
hlt
outsl
fnstsw
xchg
add
add
adc
sti
inc
sub
or
sbb
into
jnp
push
cmpsb
sbb
and
xchg
adc
cmpsl
jl
lods
nop
loop
inc
daa
lock
cmp
push
lock
cld
and
stos
stos
hlt
xor
jle
fiaddl
mov
mov
adc
lcall
mov
rolb
test
cmp
not
jl
movd
movd
sbb
es
fs
pop
movsl
hlt
aad
xchg
aaa
sbb
jnp
dec
add
sbb
pusha
test
adc
cmp
mov
test
std
lea
pop
xor
jp
in
pushf
sbb
mov
inc
jge
mov
sbb
cmp
call
mov
lods
pop
clc
push
rcrb
jmp
dec
test
imul
stc
lods
insb
pop
pop
mov
sub
mov
cmpsb
aas
scas
fists
popa
inc
stc
hlt
mov
cmpb
and
and
xor
outsb
into
cltd
xor
dec
mov
movsb
ffreep
pop
ja
outsl
cmpsb
inc
mov
push
cld
pop
pop
xor
repz
dec
cwtl
sbb
outsb
xor
and
inc
lahf
out
sub
push
mov
mov
mov
rorl
or
inc
lods
fwait
outsb
gs
je
pusha
outsl
cmp
inc
into
in
sub
lock
pop
mov
inc
add
xchg
jg
push
jp,pt
loope
clc
out
jo
pop
cli
mov
test
int
je
pop
loop
insb
xor
add
lock
rolb
add
test
jnp
and
jecxz
ljmp
aaa
sti
adc
mov
fwait
jmp
adc
aas
add
mov
in
stc
les
into
mov
mov
fcomps
cmpsb
in
inc
enter
adcl
out
test
push
inc
int
add
mov
pop
sti
pusha
dec
xchg
push
cmp
insb
mov
mov
mov
xor
pop
in
jb
das
push
xor
add
enter
lret
jg
mov
cmp
fmul
adc
jle
popf
push
pusha
xlat
sub
stc
xor
ss
add
dec
xchg
faddl
mov
dec
cmp
ss
jnp
fldt
mov
pop
mov
lret
xor
jle
mov
inc
xchg
xlat
es
ljmp
inc
and
adc
mov
add
stos
adc
rcll
hlt
inc
arpl
repnz
ss
sahf
jb
add
sbb
or
cmpsb
add
push
jne
sahf
and
repz
cmp
sub
or
mov
arpl
mov
cltd
mov
lret
ret
iret
cmpb
int3
pop
clc
ds
push
dec
pop
andb
std
imul
jae
icebp
repz
inc
adcb
inc
lock
cltd
mov
jmp
sub
or
jle
jmp
arpl
jmp
and
mov
fcompl
jno
mov
inc
jae
dec
push
sarb
push
std
mov
jl
xchg
dec
dec
inc
repnz
inc
xlat
mov
jmp
mov
lods
in
cld
into
or
in
pushf
aaa
push
jae
xlat
pop
in
ds
sarl
enter
jns
outsb
and
in
imul
pushf
add
fiaddl
mov
dec
stos
in
outsb
adc
mull
jmp
mov
insb
lret
inc
mov
sbb
and
sbb
outsl
inc
sub
in
xor
mov
sub
pop
xchg
cmpsb
pop
sbbl
sub
mov
mov
sbb
inc
mov
pop
pop
and
movsb
xchg
mov
cmp
fistl
sub
aad
lods
mov
andl
fimull
aad
xchg
cmp
and
out
cmc
push
pop
or
stos
pop
mov
push
dec
call
int3
outsb
bound
mov
arpl
jno
icebp
xchg
xchg
xchg
push
jp
loope
shrl
out
xor
lcall
pop
jecxz
xchg
mov
iret
jg
aaa
pop
mov
xor
inc
aad
shlb
or
cs
ficompl
xor
fnstsw
sarb
popa
mov
or
pop
repz
dec
xchg
cmp
gs
jbe
fwait
sbb
je,pn
aaa
insb
ret
dec
cmp
push
fs
pop
cli
movsb
div
jo
lock
sarb
gs
movsb
or
fsts
pusha
nop
test
movsb
ficompl
je
pop
sbb
bound
stc
call
adc
arpl
les
std
pop
lret
mov
hlt
mulb
sbb
lret
outsb
mov
sub
dec
gs
or
mov
push
ljmp
sbb
loopne
das
in
mov
cs
fcmovne
out
popa
xorl
push
push
and
mov
sub
adc
fisttps
mov
rclb
lret
add
mov
dec
aad
icebp
sub
or
fdivrs
pop
aad
popf
pop
imul
and
mov
in
lcall
mov
xor
xor
push
mov
jns
lcall
cmp
inc
push
jbe
add
xor
je
pushf
sti
adc
loop
add
filds
aas
mov
push
xchg
jae
mov
xor
sub
xbegin
stos
xor
pop
scas
jl
mov
adc
adc
in
ja
dec
pop
mov
add
fistps
or
add
adc
jo
iret
pop
subb
fmull
clc
mov
add
ljmp
lea
fwait
insl
mov
outsb
gs
lret
mov
ret
int
movsl
cmp
sbb
cmp
cwtl
add
fsubrl
aad
imul
mov
filds
mov
je
lods
daa
std
or
and
cli
add
in
mov
mov
sub
push
inc
ret
cmp
insb
roll
pop
adc
mov
sbb
jge
or
into
push
inc
jne
out
hlt
jno
cmc
pusha
popa
sbb
dec
insb
cwtl
je
imul
mov
es
insb
xchg
lret
add
jecxz
popa
inc
out
add
xchg
rorl
mov
ds
ljmp
mov
inc
lea
loopne
or
sbb
mov
pop
test
xchg
jo
mov
pop
insb
xor
or
int
mov
xor
xchg
add
int3
mov
out
jecxz
dec
test
cwtl
sub
outsl
pop
jmp
sbb
mov
dec
cli
fwait
add
mov
add
ret
pop
inc
inc
adc
sti
stc
xchg
psubusb
add
xchg
mull
mov
dec
xchg
xchg
mov
add
sub
or
pop
mov
pop
mov
dec
dec
and
inc
xchg
mov
ror
mov
mov
rorb
popa
out
sub
in
add
lods
dec
sub
and
dec
rclb
or
push
mov
sub
insb
out
test
dec
fidivl
mov
cmp
sub
jmp
dec
in
or
shll
push
xor
add
jae
pop
in
pop
imull
test
pop
in
xchg
cmp
push
lret
jmp
arpl
inc
mov
xchg
jae
fnstsw
int3
sbb
les
cmp
fnsave
xchg
and
pushf
out
inc
jle
add
jl
les
sahf
ja
or
sub
mov
test
xor
aaa
enter
sbb
aas
mov
jb
clc
cli
adc
adc
ja
mov
out
mov
les
cs
pop
nop
movsb
outsb
jae
fcomp
xor
filds
roll
adc
push
sub
jo
test
out
loopne
test
shrb
popf
xchg
sub
test
jne
dec
insb
sub
lret
or
cmp
xor
inc
gs
sti
data16
and
test
xchg
dec
push
jae
mov
mov
mov
mov
mov
mov
lods
mov
xor
xchg
dec
cmp
iret
push
call
popf
mov
pop
or
pop
orl
xchg
cmp
sbb
sub
mov
bound
push
int
into
je
jle
repnz
out
xor
pop
xchg
es
das
in
mov
jns
xchg
sbbb
or
hlt
aaa
xor
pop
je
xchg
enter
int3
xor
and
adc
sbb
popa
lea
inc
out
arpl
inc
imul
or
test
push
dec
notb
pushl
aam
add
testb
and
lods
xchg
out
xchg
adc
movsl
das
insl
mov
adc
aas
jne
jecxz
jns
shrl
fcomps
push
add
or
rcrb
sub
add
aas
adc
jb
mov
mov
cmp
mov
shll
fisubrs
and
or
cld
fldenv
icebp
pop
mov
mov
xchg
sarb
es
inc
add
in
mov
jl
cld
pop
xchg
push
das
cs
push
or
je
fistpl
les
mov
popa
lret
cmp
xchg
fwait
lahf
sahf
xorb
cmp
and
in
push
cmp
negl
mov
and
cmp
xchg
cltd
xchg
fmul
mov
leave
jmp
push
lahf
aas
cmpsb
pop
dec
push
inc
xor
test
add
outsb
pop
push
call
mov
mov
aam
clc
jbe
in
mov
sbb
pop
mov
inc
das
jle
pushf
mov
cli
lahf
out
cltd
sub
xor
xlat
ljmp
push
xchg
ljmp
int
shufps
xchg
in
sti
adc
lret
adc
bound
loope
sub
out
push
addr16
jne
or
fstpl
sahf
gs
aad
fnstenv
pushf
lock
ret
sub
stos
xchg
les
mov
mov
xlat
rolb
ret
loope
in
push
mov
sbb
mov
fs
cmp
and
add
ficoml
push
mov
cli
cltd
mov
mov
sbb
mov
pop
sub
ret
aad
mov
mov
ds
jne
fmuls
sarl
inc
and
xor
mov
enter
fsubl
mov
mov
gs
mov
adc
aaa
fildl
mov
pushf
push
mov
fsub
aaa
inc
or
arpl
xor
fmuls
mov
outsl
sub
arpl
into
pop
scas
movsb
sti
pop
sub
jg
adc
outsb
les
aas
add
in
push
enter
dec
sbbb
pushf
adc
jo
add
es
sub
jb
in
in
or
jl
out
xlat
or
pop
add
ret
xchg
push
jp
or
fucom
std
mov
or
int
cltd
cltd
icebp
adc
sub
or
jnp
jb
hlt
out
ret
faddl
mov
movsb
adc
cltd
push
arpl
andl
lea
hlt
xlat
das
pop
mov
subl
popa
std
inc
pop
das
pop
xor
jbe
cltd
outsb
js
and
xor
insb
in
and
cwtl
xor
fmuls
out
rcrb
xchg
das
xlat
cwtl
fs
jmp
cmp
mov
cs
cmc
fsubl
xchg
xor
and
mov
jg
imul
cs
cmovbe
mov
and
jbe
hlt
sub
repnz
lret
cmp
idivb
cmp
fsubl
lret
and
pop
fdivrl
cs
sbb
sahf
negl
mov
and
stc
aad
xor
xchg
push
gs
and
jo
pop
test
or
pop
xchg
aam
push
imull
mov
bound
add
shll
push
outsl
fwait
and
fnstsw
push
xor
lret
xchg
fisttpl
jae
dec
aam
cld
inc
int3
jbe
ret
bound
pop
push
mov
sbb
adc
and
inc
insb
mov
fsub
pop
pop
add
pop
test
xlat
stos
das
mov
pop
inc
inc
aad
dec
mov
test
sbb
jp
hlt
pop
jl
pop
ljmp
jbe
subb
int
in
mov
shrb
push
xlat
mov
adc
mov
add
xchg
jbe
push
loope
and
subb
in
in
xchg
add
xchg
cmp
jo
cmpsl
or
fistps
jne
push
pop
push
mov
xchg
arpl
bnd
inc
nop
cli
lods
sub
cmp
ficoml
testb
pop
push
push
cmp
lret
subl
add
pop
mov
mov
push
inc
add
push
test
jle
lods
pop
or
lea
pop
jbe
loop
leave
into
cmp
lret
stos
repz
imul
dec
testb
les
jns
mov
mov
xchg
out
xchg
mov
fcoml
jb
pop
int
mov
shr
push
or
loop
inc
jp
and
and
pop
scas
adc
out
out
aaa
lea
jmp
add
sbb
pop
add
mov
movl
xor
mov
xor
addb
lods
jns
jns
jl
pushf
sub
sar
int3
call
add
lcall
xchg
inc
push
and
or
loop
push
fmul
pop
test
dec
mov
bound
lcall
idivl
inc
add
mov
cmp
call
aaa
cli
leave
add
or
dec
jecxz
jb
adc
pop
mov
dec
fnstsw
mov
jno
movsb
mov
test
daa
xor
es
std
pop
or
jecxz
or
dec
or
mov
js
aad
pop
push
mov
jne
push
subl
push
repz
cli
cmp
ret
or
add
mov
cmp
imul
cltd
sbb
sbb
loop
decb
in
xor
jmp
fsts
sbb
cltd
mov
mov
lea
cmp
fnstsw
pop
aas
leave
dec
cmpsl
xchg
pop
insb
cmp
mov
xor
inc
push
adc
add
dec
leave
ficoms
sbb
sub
mov
and
imul
and
lret
jbe
in
inc
mov
mov
mov
aaa
and
sbb
roll
leave
decl
mov
lahf
mov
inc
xchg
addl
push
js
das
pop
xor
mov
filds
xchg
push
mov
mov
ud2
fucomip
repz
fcomip
mov
out
mov
inc
sarl
aam
sbb
repz
lret
push
inc
push
aam
leave
xor
adc
insb
sub
cmp
clc
lods
lods
xor
fadds
dec
jae
mov
iret
hlt
scas
popa
aas
fadds
sbb
push
jb
xchg
cwtl
and
and
cmpsl
divl
jb
push
arpl
hlt
cmpsb
add
xor
in
pop
push
mov
aas
fldt
es
fisubrs
out
xor
cmpsl
xlat
cmc
cli
test
cmpsb
loope
mov
jl
test
clc
out
xlat
idivb
jnp
pop
dec
sub
jg
scas
mov
dec
sub
inc
pop
leave
cld
mov
adc
adc
mov
dec
jno
sahf
push
and
and
fisubrl
outsb
mov
fsubs
dec
adc
icebp
int3
sahf
jb
repnz
repnz
sbb
mov
cmp
imul
sbb
add
mov
or
inc
arpl
ficoms
repz
xchg
dec
mov
inc
rcr
jecxz
and
test
and
arpl
cmpsl
adc
and
popa
adc
mov
lea
cltd
push
jne
adc
dec
pop
mov
js
jnp
mov
scas
adc
and
not
mov
mov
mov
gs
mov
cmp
ljmp
pop
scas
jb
clc
repnz
adc
aad
mov
or
push
sbb
ret
mov
jle
sbb
ss
adc
addb
add
mov
mull
jns
addb
sbb
mov
loope
addr16
jmp
hlt
pop
push
jp
movsb
sbb
adc
push
mov
mov
ds
jmp
pop
push
xor
push
repnz
iret
and
sahf
leave
pop
pop
cmc
mov
add
arpl
or
inc
sub
out
repz
mov
cs
cmpsl
sbb
aam
add
test
pop
js
repz
in
mov
fsts
or
mov
mov
out
inc
and
mov
add
dec
scas
insl
xlat
ss
xchg
cmp
mov
test
stos
shl
cmp
enter
jbe,pn
xchg
les
pop
jo
push
pop
dec
add
jmp
mov
xchg
and
sub
pop
out
shll
lds
test
das
fidivrs
cmp
sub
dec
addr16
and
jl
jns
or
adc
sti
mov
iret
push
inc
jo
mov
adc
push
pop
jns
pop
lods
lock
push
or
xchg
push
xchg
inc
ss
lods
lods
jnp
inc
test
mov
fstpt
sub
insl
mov
test
pop
jb
out
clc
and
insl
stos
cmpsb
fildl
add
mov
jnp
xor
cmpsl
repz
pop
jo
dec
leave
mov
insl
mov
icebp
pop
hlt
in
shll
lods
mov
mov
mov
mov
push
emms
mov
imul
shrb
sbb
add
mov
data16
sbb
sbb
xchg
dec
jns
xlat
cmpsb
roll
mov
xchg
imul
rclb
ss
cmp
pop
sbb
xor
inc
and
repnz
ret
shll
outsb
adc
repnz
aas
mov
stc
sub
loopne
or
pop
cmp
scas
lods
dec
push
outsb
fisubs
mov
dec
xchg
movsl
sub
cmc
mov
insb
outsb
mov
push
outsl
jge
mov
lcall
ficompl
es
sti
and
adc
inc
fidivrs
dec
adc
stos
scas
shll
mov
mov
hlt
fdivs
lret
stos
out
sti
jo
mov
sub
pop
xchg
dec
les
cmp
call
mov
mov
lahf
repnz
mov
xlat
daa
and
cltd
xchg
xorl
inc
js
push
shrb
add
ret
mov
shrb
stos
imul
sbb
sbb
push
cmp
jg
roll
jecxz
jp
pop
mov
scas
in
shlb
iret
loop
or
dec
adc
dec
mov
push
jae
lock
cmp
or
sub
push
add
mov
sbb
inc
adc
out
inc
dec
inc
addr16
push
jns
xor
out
mov
in
in
mov
mov
popa
xchg
push
cld
pop
fcmovb
sbb
orb
xchg
add
or
jbe
and
add
inc
mov
sub
push
adc
cwtl
gs
sarb
in
sarl
sbb
fdivr
adc
xor
lock
lret
jp
mov
xlat
jo
dec
lahf
lcall
scas
push
incb
push
aad
mov
xor
sbbl
mov
jae
dec
ja
add
xchg
insl
pop
scas
cmpsb
jne
ret
rorl
mov
test
jae
mov
sbb
mov
jns
jns
dec
xor
stos
pusha
xlat
idivb
notb
jbe
dec
test
icebp
adc
pop
xchg
cmpsl
mov
sub
sbb
mov
push
push
mov
xor
adc
and
nop
and
int3
iret
je
sti
test
xchg
jp
inc
mov
enter
test
sub
or
xor
mov
sbb
sbb
inc
pop
je
lahf
nop
mov
fsubl
pop
mov
push
mov
negl
hlt
jge
pop
mov
xchg
out
cmpsl
clc
or
pop
jae
popa
sbb
adc
mov
pop
jo
lock
repz
adc
mov
pop
fcoml
adc
das
lret
xor
paddsw
shrl
jb
cmpsl
pop
mov
jg
out
jno
xor
adc
mov
outsl
addr16
in
loopne
adc
push
add
mov
scas
aaa
push
inc
daa
lahf
sahf
subb
mov
outsl
jg
sub
stos
add
shr
and
push
nop
mov
mov
in
movsb
mov
cmp
adc
dec
dec
inc
pop
cmp
fstl
jge
scas
fsubrl
push
cmp
xchg
inc
jb
call
bound
dec
and
cwtl
aaa
mov
loop
movsl
out
clc
pop
decb
push
xlat
int
gs
inc
in
inc
mov
add
xchg
in
stos
add
jg
pmullw
push
cmp
adc
pop
daa
adc
fnstcw
ret
push
adc
jns
jne
cmp
mov
mov
cmpsl
dec
mov
call
leave
in
adc
imul
or
fs
std
movsl
mov
push
addr16
sub
fs
pop
jo
push
jge
xchg
pop
loope
pop
mov
mov
jbe
addl
dec
lock
cmp
sbb
sbb
sbb
cltd
push
repz
xchg
xor
xchg
sub
int
mov
cmc
sti
mov
mov
shl
ficomps
push
mov
mov
imul
jle
mov
sub
dec
fs
scas
test
xor
repz
xlat
mov
fisubl
shl
cltd
subb
mov
push
iret
rolb
sbb
push
in
imul
sub
arpl
sbb
xchg
xchg
stos
mov
jp
pushw
lea
icebp
in
subb
lock
test
push
push
mov
rorb
adc
sbb
loope
lret
mov
nop
adc
shrl
ret
les
push
sub
sahf
scas
bound
adc
sbb
outsl
fdivrp
adc
sbb
sbbl
call
push
or
adc
ds
lock
pop
adcb
sarb
mov
lea
out
decb
pusha
imul
fwait
inc
push
fnsave
inc
inc
lahf
ljmp
or
fdivs
push
fmuls
and
jmp
std
push
cli
loop
ret
cli
out
mov
and
in
jle
imul
push
jp
jns
mov
out
enter
dec
into
adc
sub
into
or
pop
popa
jns
or
pop
outsb
arpl
cmp
push
fidivl
lea
scas
inc
and
and
repnz
lret
iret
imul
adc
testb
jnp
gs
movsb
fucom
mov
or
pushf
xchg
and
js
xor
mov
jne
mov
sub
pop
in
imul
pop
ljmp
je
ja
sub
push
xor
movsl
negb
xchg
movl
xor
jbe
iret
fistps
scas
xchg
cld
lock
insb
xor
pop
inc
iret
lcall
in
sti
xchg
jge
pop
and
mov
sub
xchg
es
xchg
xor
aam
sbb
notb
in
cwtl
insl
cli
sti
out
and
hlt
xchg
or
mov
imul
cmpsb
xchg
fdivl
or
pushf
adc
clc
xchg
loopne
pop
sub
enter
aad
mov
mov
sbb
push
out
rorb
inc
adc
xor
sub
rcrb
push
test
iret
dec
jg
and
rcll
inc
iret
clc
jb
and
imul
decb
data16
jno
push
pop
lds
pop
mov
pop
pop
nop
and
sbb
movsl
sub
test
cld
mov
fbstp
mov
push
dec
sti
cs
dec
push
pop
sbb
inc
popa
in
pop
xor
sub
fnstsw
rclb
mov
pop
pop
data16
aas
in
cmp
cs
in
push
inc
sti
je
or
lock
jne,pt
mov
jae
in
jge
out
mov
repnz
sub
hlt
or
cwtl
xchg
cli
mov
and
shl
insl
xchg
xchg
scas
sbb
pushf
outsb
loope
cmp
xchg
push
sub
bound
xchg
adc
ret
lods
lea
rorb
repnz
insb
sub
xchg
or
sub
jl
add
mov
pop
mov
stc
dec
xor
out
push
adc
xor
pop
sti
jne
js
sbb
outsb
js
mov
adc
clc
ljmp
lds
icebp
cmp
int3
clc
adc
cmp
cli
add
daa
jns
sbb
pop
pop
orl
push
leave
push
mov
mov
add
cmc
gs
dec
and
fbld
imulb
dec
rclb
jnp
scas
cmp
pop
xchg
mov
inc
push
ljmp
cs
dec
fsub
or
adc
inc
xchg
jne
adc
in
adc
cwtl
pop
mov
pop
outsl
mov
out
out
push
aaa
imul
lods
mov
cmp
push
mov
jecxz
lcall
in
stos
lret
push
rcrl
mov
loop
mov
mov
ffree
enter
es
mov
cld
jmp
fnstenv
mov
inc
cli
ret
lahf
xor
adc
out
or
mov
fsts
das
ds
sbb
mov
stos
ds
es
notl
iret
lds
sbb
outsl
push
adc
shlb
enter
insb
xor
pop
sbb
pushf
mov
push
xchg
fs
pushf
xorl
call
or
gs
int
cmp
add
stc
scas
sbb
xchg
mov
inc
xor
xor
or
and
push
fwait
adc
icebp
or
pop
sub
jbe
gs
pop
sub
shl
rclb
dec
in
das
mov
mov
loopne
add
les
fs
lock
adc
mov
vpsraw
loope
lahf
sbb
xchg
cmpsb
std
sahf
es
ret
adc
cld
pop
jmp
push
gs
pop
mov
shll
cmc
ret
cli
pop
sub
repz
in
sbb
xchg
mov
xor
addr16
cli
inc
ljmp
add
lods
test
mov
sbbl
inc
jle
pop
rolb
pop
mov
cmpsb
and
sub
jb
xchg
xchg
mov
adc
sbb
mov
and
sar
sub
xor
mov
adc
outsb
into
imul
sbb
cmp
push
and
sarb
xlat
jb
jb
fs
cwtl
xlat
mov
push
mov
je
xor
push
test
aaa
adc
xchg
adc
mov
sbb
div
cmp
mov
sub
mov
mov
fsubrl
aam
and
outsl
push
les
testl
and
or
sub
sbb
mov
mov
sbb
mov
jmp
adc
int
sbb
repnz
in
mov
sbb
aad
imul
jmp
popa
add
mov
aam
cmp
mov
sub
mov
and
iret
or
xchg
adc
test
xchg
orb
lret
pop
dec
dec
mov
sub
clc
pop
push
test
inc
iret
mov
lea
leave
pop
sti
mov
xchg
push
loope
bound
mov
push
pop
mov
xchg
jae
ds
in
adc
out
jmp
jbe
push
jge
sti
inc
jno
sti
test
in
mov
sub
mov
std
xchg
dec
insl
dec
cmpsb
pusha
or
xor
bsr
pop
add
and
xor
insb
adc
mov
lret
or
dec
gs
mov
scas
jl
add
fsts
hlt
repnz
rol
xor
mov
pop
push
testb
arpl
dec
mov
add
clc
mov
mov
cmp
dec
fistpll
cli
aaa
jae
mov
jne
dec
je
ret
fists
and
pop
or
push
test
mov
jnp
push
addr16
mov
sub
dec
adc
sbb
adc
add
shlb
stos
fcoms
adc
add
fbstp
movsl
cmp
enter
xor
sbb
xchg
popa
xchg
insb
adc
ja
in
fistpl
out
jg
mov
cltd
sub
sbb
xchg
scas
mulb
xorb
jo
or
lret
insl
not
int
int3
push
xchg
test
push
lods
ret
lods
in
inc
in
push
mov
mulb
mov
jmp
pop
nop
test
int
sbb
pushf
shll
push
iret
jbe
repnz
pusha
jg
loop
pop
push
inc
outsb
cmp
loop
mov
lahf
lret
mov
rorl
inc
pop
cmc
mov
jbe
lock
mov
push
inc
dec
ret
cmp
mov
lret
jp
fbstp
in
sub
xchg
inc
push
dec
push
cmp
loopne
test
mov
mov
mov
mov
cmpsl
cli
fdivs
xchg
xor
iret
mov
je
int
sahf
iret
mov
push
lret
dec
jns,pn
cmp
push
dec
inc
iret
inc
push
add
jno
pushf
nop
add
push
mov
jb
add
loop
jnp
mov
movsl
lahf
fsubrs
adc
dec
call
test
push
jmp
add
jmp
cmp
pop
cli
xor
lret
aaa
cmp
cmp
jmp
les
sbb
aam
jbe
inc
iret
bound
jnp
sub
xor
push
out
repz
int
in
add
movsb
cmp
mov
mov
xchg
clc
jnp
imul
jo
idivb
adc
jb
test
jne
and
fadds
movsl
loop
and
jl
pusha
iret
and
call
pop
arpl
les
dec
stos
pop
mov
sbb
cmp
in
ret
and
addr16
mov
popl
mov
push
mov
int3
lahf
mov
repz
popf
rorl
jle
int
add
fistpl
inc
rolb
ss
push
mov
scas
mov
dec
mov
test
or
pop
sub
orl
imul
lahf
and
pop
xchg
push
pop
sub
add
and
or
jae
daa
inc
inc
fmuls
ds
das
mov
push
ret
aam
dec
ret
sbb
adc
mov
sbb
subb
ja
lea
pop
jns
xchg
cli
scas
enter
xchg
pop
pushaw
xor
sbb
inc
mov
pop
sub
pushf
cltd
mov
call
jmp
mov
mov
sbb
inc
mov
mov
inc
jo
push
push
pop
cmpsl
or
lahf
out
decl
stos
mov
cmpsl
xor
pop
fnstcw
push
out
pop
or
fs
fldt
and
mov
add
repz
in
es
push
stc
stos
cmpb
sub
fcoms
sbb
aaa
push
lret
cmc
lret
adc
rol
pop
mov
inc
shll
adc
mov
loope
jecxz
sbb
cmpsl
hlt
mov
aad
jbe,pn
lahf
fmuls
fistl
sarb
hlt
imul
imul
sarb
jbe
rorb
clc
insb
dec
jecxz
sbb
stos
xor
pop
insl
mov
hlt
std
cmpsl
es
sub
ljmp
xchg
dec
rcll
popa
test
pop
cmpb
adc
lock
mov
fadds
loopne
mov
out
jge
mov
xchg
and
ret
fldenv
call
stc
mov
filds
shrb
and
xor
lahf
les
jl
stos
lahf
adcl
dec
frstor
sahf
jl
sahf
hlt
jp
scas
xor
rorl
xor
jp
mov
or
fcomps
lahf
fwait
arpl
push
pop
xchg
arpl
dec
mov
bound
lcall
xlat
repnz
and
shrb
pop
out
jb
in
pop
inc
xchg
icebp
ljmp
outsl
call
fbld
inc
stos
mov
test
jge
mov
popa
lcall
js
mov
mov
insl
daa
dec
sub
sub
jne
adc
dec
shrl
push
xchg
jle
dec
shrb
or
push
jg
negb
test
mov
xchg
jne
xchg
mull
aas
jns
or
nop
dec
add
sub
and
jo
inc
lods
movsb
push
pop
and
jl
push
das
jge
test
pop
ret
popa
rol
xorb
aas
cmp
xchg
pop
mov
adc
mov
lods
in
call
ret
jecxz
out
mov
popa
pop
addr16
add
mov
xchg
pop
xor
jg
xchg
mov
lods
cmpsb
ja
mov
push
sub
or
mov
sti
mov
in
xchg
push
jae
rcl
cmpsl
add
fmull
dec
jp
aad
test
dec
rcll
sbb
popf
ss
and
adc
fildll
jno
dec
sti
call
sbb
pop
dec
inc
cmp
inc
out
adcl
cli
mov
das
shrl
and
pop
addr16
je
lret
add
aas
and
insb
nop
lods
push
shr
pop
cwtl
aaa
xchg
sbb
sarl
out
dec
dec
fstps
pop
lea
mov
ret
mov
imul
jae
fcmovnu
js
xchg
mov
push
repnz
ja
ss
sub
push
rcll
and
inc
mov
cmp
int
lock
cmp
cld
fsub
sbb
adc
sub
daa
adc
adc
loopne
rcl
mov
pushf
sbb
iret
push
loop
xchg
cmp
in
cmc
and
lahf
test
iret
dec
jae
push
stos
jmp
mov
add
sar
ret
cmp
aad
call
loope
notl
inc
sub
jg
out
divb
int
xor
jno
inc
ret
pushf
shrl
pop
mov
std
sbb
pop
out
rolb
mov
or
int
insb
call
sub
in
ds
mov
cmp
cmp
or
loopne
rcll
jmp
or
fmuls
cmp
ficoms
dec
in
bnd
sahf
outsb
data16
sub
fdivrp
and
and
lock
and
popl
call
test
aas
cmp
sub
add
push
inc
iret
hlt
cmpb
jecxz,pn
xorl
movsb
mov
insb
fildll
rcrl
mov
mov
xchg
insb
cltd
ja
aam
pusha
aaa
dec
mov
mov
fldenv
xchg
adc
icebp
mov
sbb
xor
sub
add
add
xor
cmp
movl
lret
lret
jbe
mov
push
pop
into
fucomi
bound
call
ss
jp
sub
sbbb
xor
cmp
adc
dec
ja
dec
add
ja
icebp
adc
sub
mov
push
pop
icebp
int3
push
fwait
cmp
xchg
sbb
ss
xchg
ret
fcomip
movb
stos
jno
lods
repnz
shrl
jg
push
test
sub
and
xchg
push
mov
xchg
adc
mulb
sub
test
mov
or
jle
adc
lcall
and
stc
sti
dec
scas
sbb
xor
movsb
adc
or
iret
jne,pt
aaa
stos
xchg
fildll
mov
or
iret
mov
xor
sbb
or
into
fcmovnbe
insb
mov
incl
faddl
ds
cmp
cmp
mov
sbb
xlat
mov
in
mov
pop
xchg
hlt
inc
cltd
push
mov
adc
jb
cld
pushf
popf
popa
cwtl
loopne
mov
call
sub
cld
dec
fcoms
xor
popl
test
lea
incl
adc
fcoms
les
mov
gs
or
cwtl
xchg
dec
pop
inc
ret
out
dec
aad
pop
mov
in
stc
icebp
xchg
clc
insl
jmp
test
insb
pushf
hlt
test
shrl
fstps
jne
pop
mov
or
push
popf
push
and
imulb
cs
xlat
add
and
or
iret
and
jmp
sbb
in
jns
ja
repz
sbb
enter
aam
inc
jp
push
clc
jnp
lret
shlb
sahf
loope
enter
cmp
test
js
stos
dec
or
pushf
cmp
imul
fs
lahf
fucomi
cmc
out
sub
sbb
incl
pop
sbb
adc
outsl
lret
mov
mov
test
jp
sub
xchg
xchg
sub
out
dec
sar
xchg
sbbb
rcrb
ss
dec
mov
xor
aaa
cltd
sarl
adc
mov
andb
cmp
mov
lcall
mov
repnz
enter
test
popa
xchg
out
cwtl
push
cwtl
mov
mov
mov
stc
cmp
daa
icebp
call
mov
inc
mov
pop
daa
out
scas
cmp
or
nop
repz
or
aaa
flds
dec
fcmove
cltd
icebp
xchg
sahf
inc
mov
adc
add
movsl
lods
sub
hlt
mov
stos
ret
dec
sub
sub
sbb
icebp
adc
mov
aam
and
cmp
outsb
sub
out
or
cmpsl
xor
fildll
mov
jmp
mov
nop
int
mov
jge
sar
arpl
out
cs
dec
jns
das
mov
subl
repnz
pop
mov
jae
outsl
call
das
inc
push
call
or
jne
adc
icebp
jl
ss
push
out
out
frndint
sbb
inc
pop
cmc
adc
adc
mov
mov
ds
addr16
lods
sub
and
lret
stc
nop
jo
pop
cli
sbb
push
movsl
es
jne
es
jle
les
repz
xchg
or
jb
fwait
pop
push
sub
sahf
ret
imulb
xchg
ds
or
arpl
mov
push
mov
sbb
call
sub
or
test
hlt
in
push
xchg
cmp
aas
icebp
das
mov
lds
jg
xor
inc
js
movsl
mov
xchg
lret
lret
xor
in
pop
sub
xlat
lret
mov
and
fmull
lods
adc
arpl
add
sbb
scas
lock
add
fwait
pop
aas
lahf
pop
repz
xchg
mov
jae
cmp
int
inc
push
mov
add
fldenv
push
xchg
into
mov
in
loopne
xor
jne
jle
push
fsubrs
outsl
mov
jns
fcoml
repz
push
add
or
sub
jbe
add
cld
dec
add
daa
les
int
testl
and
sbb
xchg
sbb
pop
adc
mov
push
xor
mov
out
movsl
dec
out
js
shll
sub
push
mov
lret
sub
lods
arpl
cs
mov
cmp
cmp
cli
shll
push
enter
pop
and
cli
cmp
scas
outsl
xchg
jnp
scas
in
jbe
scas
jp
adc
rclb
rclb
bound
adc
sbb
arpl
lahf
popf
loope
jp
or
aad
dec
xlat
cs
popf
push
in
and
out
ror
cs
sbb
std
iret
mov
cmp
add
aas
mov
ljmp
ss
jae
dec
lret
icebp
into
push
in
cmc
push
es
dec
inc
insb
mov
cmp
mov
arpl
js
add
dec
jns
push
sub
or
jl
dec
orb
lods
fstpl
scas
xchg
dec
xor
in
mov
fwait
scas
xorl
bound
pop
cmp
mov
sbb
inc
int3
inc
ret
ret
dec
dec
dec
bound
fdivs
mov
xor
movb
inc
idiv
inc
sbbb
pop
add
test
add
push
pop
xor
push
sar
adc
adc
cmp
ret
es
test
sbb
in
xor
mov
xor
mov
cmp
out
std
mov
mov
push
push
jbe
push
roll
or
insb
test
cmpsl
adc
jecxz
push
rep
in
or
fldlg2
mov
jb
icebp
ss
add
cmp
stos
cmove
mov
jnp
out
fistl
in
repz
int3
mov
call
in
leave
adc
add
stos
cltd
in
sahf
cmpsb
js
adc
js
jmp
test
ss
xorb
sbb
mov
mov
ret
push
xor
add
xchg
cmpsb
mov
outsl
outsb
push
mov
lea
lea
pop
sbb
lock
lret
jno
mov
xchg
dec
dec
ljmp
in
iret
cmpsb
pusha
cltd
adc
mov
cmp
mov
cld
push
rcrb
ret
sub
lcall
shlb
pop
les
mov
maskmovq
mov
sub
push
fs
leave
out
out
loopne
push
js
pop
or
out
mov
or
and
xor
mov
mov
repnz
mov
mov
repz
pop
aaa
subl
nop
xor
fdivs
sbb
push
sahf
push
cmpsb
inc
ret
dec
in
out
mov
inc
mov
or
sub
cmp
dec
fldcw
jno
ljmp
adc
ja
ret
inc
mov
mov
push
add
dec
les
sub
jo
in
xchg
dec
push
imull
lcall
or
jne
jl
lock
in
inc
mov
and
cmp
inc
aaa
repz
lcall
insl
cmp
jg
stos
dec
mov
pop
orl
cmpsl
cmpsl
and
inc
push
push
mov
mov
das
cmp
mov
popa
mov
cmc
inc
push
enter
push
sub
loop
inc
jmp
jo
stos
sub
outsb
mov
outsb
and
repnz
out
je
xor
fsts
mov
sti
in
mov
rclb
clc
nop
sub
jb
and
push
xchg
in
loope
shrb
jae
sub
and
psrlq
push
cmp
sbb
and
fdivs
dec
jle
xchg
ds
cmp
pop
mov
mov
int3
inc
inc
roll
insl
jnp
adc
aad
or
xor
xlat
shr
aam
int3
or
dec
mov
pop
cmpsl
rcl
mov
enter
lods
adc
jb
clc
push
pop
inc
ret
insl
mov
mov
int3
daa
xorb
push
div
hlt
stos
push
dec
cmp
loop
cmp
mov
jecxz
dec
fiaddl
sar
adc
xor
and
sbb
adc
rcr
adc
call
dec
and
imul
ljmp
dec
mov
out
and
xor
add
add
add
or
mov
push
pop
orb
add
in
jecxz
sti
xchg
fwait
adc
push
out
mov
sub
loope
fcmovnbe
scas
add
ficomps
sbb
stc
mov
nop
fcmovu
push
lea
cmc
xchg
js
lahf
ret
bound
out
dec
mov
mov
and
fwait
out
add
pop
insl
test
dec
or
or
jbe
lcall
andb
xchg
push
insl
and
cwtl
sub
movsl
push
dec
push
sub
pop
gs
in
aam
aam
imul
push
jecxz
pop
imul
fwait
and
and
hlt
hlt
inc
lds
mov
xchg
inc
aad
ljmp
pop
cmpl
data16
out
movsl
rclb
adc
adc
pop
mov
lahf
sbb
push
mov
insl
js
ss
gs
cli
test
cmp
cmc
fadds
mov
ficoms
xor
or
sti
cmpsl
lcall
pop
leave
sahf
les
dec
aaa
fs
in
or
loope
push
jp
xchg
int3
call
push
shl
out
mov
into
out
push
negl
pop
or
lods
sbb
rcrl
stos
outsl
jns
pop
inc
pusha
pop
push
dec
mov
fildl
jnp
mov
cmovbe
or
ret
jns
mov
add
int
xchg
out
fnsave
insb
lods
xchg
movsb
push
loop
test
sbb
cmp
repnz
leave
cmp
sub
pop
xor
add
xchg
sub
repnz
dec
xor
or
lock
mov
fdivl
xchg
shr
popf
popa
dec
pusha
cmp
movsl
cmc
xlat
push
sbb
xlat
icebp
ds
mov
cwtl
imul
mov
stos
push
xchg
arpl
dec
xor
out
dec
mov
aaa
pop
mov
mov
mov
and
push
xlat
push
lock
daa
jecxz
cs
test
into
sub
sub
sti
ss
xchg
xchg
test
out
inc
mov
daa
sbb
jmp
pushf
push
jl
fmuls
jnp
mov
data16
outsb
dec
shl
repz
cmp
mov
mov
je
push
mov
inc
push
xchg
loope
cli
fdivr
push
aaa
mov
out
fldenv
rcr
rcrb
and
mov
dec
dec
mov
xor
xor
mov
rcrl
int
add
pop
clc
add
add
insl
dec
lcall
push
pop
mov
stc
rcll
aad
cmp
jle
dec
stos
add
rolb
sub
xchg
push
mov
lahf
popa
je
jnp
push
push
push
outsl
mov
js
ja
das
push
lods
loopne
sub
xor
inc
jle
dec
fistpll
leave
std
push
xchg
bound
repz
pusha
or
jbe
jae
xchg
dec
inc
cmp
or
loopne
dec
dec
mov
in
pop
inc
adc
mov
arpl
cli
std
ja
stos
test
fnstenv
fxtract
add
scas
add
int
lock
mov
push
call
ds
jge
mov
insl
sub
inc
in
mov
cld
mov
test
cmp
and
sub
inc
fxch
subl
repnz
lret
pop
pop
inc
mov
adc
dec
xor
adc
xor
xchg
orl
inc
dec
push
or
mov
loop
in
stc
lds
in
fiaddl
xor
mov
repnz
push
decb
dec
pop
outsl
daa
aas
jbe
insb
test
dec
and
add
xchg
dec
jbe
sub
ljmp
xchg
jp
mov
aad
inc
js
jg
outsb
imul
mov
sub
imul
mov
ja
mov
pop
mov
push
push
divb
dec
push
adc
adc
dec
pop
sub
lods
iret
sbb
dec
push
sub
cmp
imulb
mov
lea
pop
mov
jb
push
sbb
pop
addr16
shll
pop
rcl
mov
lds
push
fstl
xor
cld
mov
xorl
mov
push
scas
push
mov
jecxz
push
and
lods
and
xor
repz
sbb
jle
mov
or
cmp
ret
test
into
mov
loope
arpl
mov
xchg
or
outsl
or
pop
inc
xchg
push
sbb
les
iret
test
insl
ja
in
mov
testb
sti
fsubr
sbb
scas
je
icebp
jbe
xlat
jns
push
icebp
xor
xchg
sti
int3
add
int
push
popa
xchg
or
mov
adc
ja
scas
loope
xchg
xor
lds
mov
mov
cmp
xor
rclb
sbb
sbb
imul
test
push
inc
cmpsl
es
pop
pop
loopne
mov
push
pop
imul
call
xchg
loope
or
xor
fstpl
xchg
mov
push
scas
test
into
add
scas
aam
sti
dec
xchg
rcr
out
and
adc
test
fisubrs
cmpsl
sbb
bound
hlt
jae
xor
jmp
dec
xchg
js
push
mov
sub
ja
pop
in
leave
sub
xchg
test
sahf
rcr
faddl
aam
sbb
sahf
aam
pushf
inc
icebp
andl
lds
popa
inc
xchg
repz
push
dec
fwait
push
aaa
xchg
outsb
test
aaa
or
lock
adc
cmc
stos
sbb
push
mov
enter
loopne
out
ret
test
pop
fsubrl
jae
ss
cmp
dec
pop
inc
div
and
push
xor
enter
cli
pop
mov
nop
popa
xchg
notb
mov
das
fabs
addr16
das
sub
pop
mov
fucomip
adc
mov
lods
fisubl
fimull
mov
movsb
sbb
inc
int
rcrl
fldl
popf
xor
std
jp
add
inc
call
mov
mov
mov
push
les
scas
stc
cli
sub
push
push
insl
mov
add
gs
out
mov
push
test
pop
das
jne
movsb
pop
xchg
xor
or
ret
sbb
imul
jmp
jnp
jle
mov
and
test
ja
ficomps
xchg
cli
add
jno
sub
push
pop
lea
adc
jae
loope
dec
dec
pop
mov
ds
adc
mov
cli
xchg
and
mov
jb
ljmp
pop
out
xlat
pop
cltd
and
mov
xchg
dec
and
repnz
add
mov
push
cmp
xor
mov
dec
adc
mov
jmp
lret
mov
adc
shrb
jns
add
pushf
jbe
fstpl
cltd
popf
xorl
inc
and
dec
scas
cmpsb
vzeroupper
aad
xchg
mov
push
ret
xchg
pushl
or
ja
subl
shlb
and
push
imul
cmc
cli
fcoms
aam
rorb
xchg
sbb
hlt
movsl
into
sub
sub
shl
jb
nop
rol
popa
je
mov
pop
data16
pop
ja,pt
aaa
add
jns
mov
mov
mov
push
jecxz
jecxz
movsb
jecxz
shr
push
lret
mov
mov
sub
cwtl
jl
dec
pop
add
or
aad
stos
mov
cmpsl
ret
std
enter
pop
jl
push
bnd
sbb
int
cmc
test
repz
iret
push
sbb
or
test
mov
push
dec
adc
add
jo
out
mov
inc
roll
dec
push
mov
aas
out
std
fdivrl
std
jne
icebp
int
xchg
dec
jae
insb
ja
loopne
mov
lcall
mov
xchg
ret
fcoms
out
and
sbb
and
es
mov
mov
in
aaa
pop
and
sbb
dec
popa
shrl
and
ds
je
pop
mov
inc
mov
inc
adc
js
lods
outsl
add
sub
mov
popf
and
cmpsl
in
xchg
jge
fisttpll
cmp
stos
mov
cmpl
jge
shrl
icebp
sub
out
or
push
lret
sub
xchg
mov
pushf
pop
xor
push
adc
mov
or
call
aaa
sub
arpl
jbe
fldenv
xchg
shl
push
in
xchg
addr16
test
cmpsl
cwtl
mov
test
or
xorl
push
cmp
into
jb
les
jge
mov
movsl
scas
xor
push
jmp
das
mov
sbb
mov
pmullw
test
sti
ret
sub
cld
lock
cmp
mov
sbbl
add
imul
pop
inc
pop
adc
jns
add
out
push
add
aas
cmp
push
or
ret
insl
inc
xchg
shlb
cmpl
andl
ret
out
mov
mov
in
inc
push
aas
ds
mov
ror
jg
xor
cmp
cmp
xchg
test
rcrl
mov
decl
jmp
xlat
popa
loop
dec
adc
iret
push
lret
cmpsb
mov
ret
ja
aad
push
xchg
data16
sub
and
cmc
xchg
cmp
out
outsl
or
out
insl
int
dec
mov
sub
outsb
shl
das
push
fldl
inc
bound
xchg
test
lcall
push
pop
sub
xor
daa
xchg
and
xor
push
je
sbb
xlat
mov
mov
cltd
movb
jb
adc
fadds
sbb
inc
mov
xlat
sbb
xchg
add
sbb
cmpsb
sub
push
pushf
lret
ja
add
mov
cmp
jecxz
iret
sbb
xor
sti
out
call
test
je
pushf
xor
ss
stc
push
mov
mov
jl
xlat
pop
js
addr16
xchg
in
lods
xor
pop
or
adc
test
sub
outsb
sbb
sbb
xchg
pop
cli
push
repz
scas
cmp
mov
popa
shl
jg
xchg
mov
ljmp
jp
js
dec
jge
jecxz
ffree
jg
js
jno
mov
xlat
xorl
push
jg
imul
inc
xchg
loop
bound
mov
fstpl
nop
cli
and
pop
cwtl
and
repz
inc
and
mov
addr16
pusha
jmp
xor
cltd
or
cmp
inc
adc
sub
pop
sbb
lock
int3
aaa
scas
lret
inc
out
dec
sahf
pop
push
insb
inc
fdivs
rcrb
jmp
xchg
std
lahf
mulb
cltd
cld
addb
cli
pop
aaa
mov
movsb
adc
add
mov
cmc
push
mov
fcoms
lods
xor
push
mov
out
mov
mov
jae
xchg
test
stc
hlt
lea
jecxz
rorb
cltd
mov
out
push
mov
fsts
pushf
cli
cmp
arpl
add
aad
and
fsubrl
ds
xor
jmp
ficompl
inc
int3
pop
sub
insb
push
pushf
dec
mov
or
std
mov
pop
pop
mov
jge
jo
subb
stc
cmpsb
mov
xor
push
sarl
clc
enter
hlt
adc
in
fucomp
cltd
sub
jns
inc
cmpsl
dec
pop
aad
stos
pop
sub
pop
jbe
dec
push
sbb
fdivs
rcll
addr16
rorb
pushf
xor
fsubl
xchg
std
xchg
jb
cmp
mov
cli
xor
jo
je
cmp
sub
aaa
inc
cs
daa
mov
sub
sbb
push
ds
jmp
dec
fs
mov
test
mov
cmp
mov
jb
sbb
cmp
repz
lock
lea
call
push
mov
jb
sbbl
popa
mov
and
add
stos
aam
or
int3
pop
mov
push
xchg
pop
call
aaa
outsl
push
in
sub
out
xchg
adc
mov
psadbw
nop
fildll
and
cmp
nop
js
lea
mov
mov
fwait
loope
mov
cmp
and
call
adc
inc
call
dec
and
test
incl
and
shrb
and
pop
fxch
pop
lret
jmp
sub
mov
push
test
xor
xchg
sub
fidivl
adc
lahf
inc
xor
dec
adc
movsl
ficompl
loopne
test
mov
pusha
mov
es
fmulp
aas
dec
repz
ficoms
push
adc
test
jne
jae
call
cmpl
adc
ret
mov
and
xor
aad
repnz
push
sahf
dec
sbb
push
mull
movsl
and
popf
cli
aam
rcrl
das
push
inc
rcll
sbb
addl
repz
aas
sahf
or
or
push
pushf
push
push
sbb
das
inc
fiadds
pop
cmp
dec
jae
negb
subb
push
mov
jp
loop
inc
mov
xchg
ret
adc
push
and
jl
push
lds
js
fsubr
repz
outsl
cmp
fldcw
mov
inc
push
imul
ficoml
bound
push
scas
lcall
xchg
adc
inc
fs
jge
repnz
pusha
pop
notl
out
sbb
mov
dec
push
dec
cs
xor
repz
dec
rolb
mov
push
inc
hlt
or
aad
int3
cli
xor
cmp
ss
adc
lret
imul
mov
rolb
out
sbb
sti
mov
lock
cmpsl
lds
bound
pop
adc
adc
stos
or
stos
ds
jge
sub
cmp
test
inc
jecxz
cmpsb
rolb
loope
imul
sbb
icebp
sti
xchg
lds
mov
ret
fbstp
enter
nop
loop
outsb
in
adc
arpl
add
or
lret
lds
push
inc
orb
adc
fs
mov
mov
repnz
pushf
mov
jo
jno
mov
mov
cmc
movsl
fimuls
xchg
sub
cmpsl
and
shll
mov
sbb
xchg
push
inc
icebp
filds
in
jp
sbb
jge
dec
aam
addb
cli
mov
repz
in
in
cltd
xchg
and
loopne
sahf
daa
outsb
shrb
push
nop
push
in
push
iret
or
xchg
fcomip
push
data16
fbstp
scas
jno
insb
sub
jno
mov
mov
lcall
stos
repnz
jg
adc
xchg
sub
jno
movsl
sbb
pop
test
add
xor
mov
cli
out
lds
test
and
xchg
jl
dec
and
bound
aaa
scas
pop
dec
xchg
pop
rcll
lds
sub
sub
mov
mov
or
jbe
arpl
shl
adc
aas
das
adc
jns
sub
sbb
out
sub
dec
jp
sbbl
add
in
cmp
inc
xchg
fstl
cltd
pop
or
inc
call
add
mov
loopne
insb
cs
jmp
fistl
dec
xchg
cs
ja
jno
adc
int
cld
push
or
mov
es
shlb
sub
fwait
sbb
inc
xchg
shll
movsl
jp
cmp
ss
jecxz
lret
insl
repnz
das
cwtl
pop
ss
stos
sbb
cmpsb
or
sub
pop
lcall
mov
leave
mov
xchg
dec
setp
sbbl
xor
sub
pop
mov
mov
mov
cmc
pop
xor
mov
decb
out
mov
jae
mov
ss
outsb
into
inc
lret
sub
xor
pop
bound
mov
jmp
push
lret
xor
and
pop
insb
mov
sbb
inc
xlat
pmaddwd
movsb
sub
cmp
xchg
add
test
icebp
neg
pushf
data16
outsb
int3
aam
in
cmp
jns
popf
into
aad
popa
xchg
jecxz
jnp
xchg
popf
pop
popf
arpl
mov
sub
jae
jbe
inc
push
mov
pop
jge
xchg
inc
mov
ret
sub
lret
flds
sbb
add
cmp
xchg
sbb
jbe
mov
push
iret
mov
fs
sub
movzwl
pop
movsb
pop
sub
pop
arpl
dec
mov
inc
ds
stc
sub
fisubl
or
add
xor
sbbb
and
test
stc
mov
mov
int
push
rclb
fwait
xor
xor
scas
incl
or
insl
mov
movsb
xor
in
in
cli
adc
test
cmc
inc
add
rcr
sub
lret
dec
and
insl
shll
mov
ret
jno
repz
sbb
sub
or
mov
xor
in
movsb
ljmp
mov
jnp
push
je
pop
jmp
sub
xchg
push
sub
mov
mov
in
sub
adc
stos
and
jo
jae
idivb
mov
es
in
xlat
mov
fdivr
dec
add
inc
lret
incb
dec
xchg
add
jb
lods
mov
cmp
lret
lahf
fsubp
lret
enter
ljmp
and
mov
sahf
cwtl
stc
dec
mov
inc
addr16
xor
call
xor
jp
add
movsb
xchg
popa
test
les
jge
dec
enter
mov
movsl
daa
movsl
cmc
mov
lds
fwait
nop
je
icebp
adc
sbb
add
jecxz
jnp
or
mov
pop
or
imul
jbe
pop
insl
popf
mov
dec
xor
movsb
cmp
in
int3
cwtl
in
test
push
nop
scas
imul
and
adc
or
inc
jno
pop
repnz
loope
jge
add
dec
jl
jae
cs
frstor
addr16
gs
sti
mov
lret
bts
mov
mov
cld
pushf
pop
sbb
fisttpl
aaa
sub
adc
gs
int
mov
cmp
push
aas
lcall
gs
loop
addb
in
cmp
je
sub
out
mov
outsb
mov
jo
fwait
je
xor
dec
clc
outsl
arpl
adc
dec
rorl
cmp
add
push
or
negl
adc
lods
xor
cmpsb
sbb
sub
pushf
adc
pop
mov
dec
mov
aas
mov
popa
adc
lock
adc
add
or
dec
jne
lea
inc
imul
pop
test
pop
jp
sbb
shll
or
lret
arpl
cmpsl
rclb
sbbb
xor
stos
inc
add
mov
jge
and
ds
sbb
jp
push
sbb
out
mov
add
pop
inc
flds
push
insl
dec
lret
es
mov
push
sbb
jle
fs
das
mov
push
movsb
cltd
std
clc
insl
test
fs
add
cmpl
cmp
xchg
mov
dec
jbe
stc
daa
dec
adc
mov
ret
popa
mov
stos
mov
in
in
frstpm(287
movsl
psubsb
pop
mov
pop
aas
outsb
outsl
insl
icebp
push
movsb
adc
mov
icebp
push
rcll
movsb
pop
es
js
or
mov
out
pop
push
add
out
ret
cmp
movsb
int3
pop
das
mov
jbe
icebp
pusha
fs
fcomi
repz
addr16
mov
mov
insl
ret
jne
push
mov
xchg
fs
cltd
idivl
or
xor
cltd
adc
test
mov
adc
ds
stos
ja
or
jb
in
mov
and
data16
in
adc
pop
cmp
jo
enter
pop
push
stc
aas
cwtl
shl
imul
mov
dec
push
gs
inc
inc
xchg
push
repnz
mov
mov
and
repnz
pusha
add
fimuls
loop
and
enter
fidivrl
push
mov
sbbb
dec
popa
std
fdivl
lret
pop
outsb
jl
push
mov
out
mov
fucomip
lock
clc
add
jbe
add
fnstcw
adc
jl
mov
rol
insb
out
mov
add
xor
xor
das
ja
aad
je
sub
movsl
fsub
lods
xor
js
std
push
std
shrl
lret
and
mov
pusha
mov
add
test
sub
rcll
or
aas
push
addr16
pop
sub
jnp
adc
inc
jnp
dec
imul
arpl
adc
fstpt
int3
adc
testl
adc
cmpsl
mov
xor
jns
cmp
jl
movsb
sub
and
movsl
test
ficoml
daa
mov
sbb
sbb
fwait
scas
pop
jle
mov
mulb
inc
mov
lods
mov
pop
fwait
and
arpl
pop
jae
test
or
jl
outsb
pop
test
inc
xchg
ds
test
bound
add
or
in
fxch
popf
cltd
and
stos
ds
xchg
sub
fistl
xor
fiadds
push
out
dec
cs
rclb
testl
rclb
lock
fcomip
les
shrb
push
or
xchg
pop
cmc
pushw
sub
ret
out
add
xor
data16
adc
sbb
mov
push
mov
pop
or
pushl
scas
dec
cmp
sub
and
test
sti
pop
push
push
mov
adc
and
shl
or
sbb
cmp
inc
dec
adc
and
add
movsl
stos
or
fwait
sub
fwait
xchg
in
jle
xchg
push
add
mov
or
sub
and
add
xchg
pushf
cmp
movsb
sbb
and
or
xchg
into
sbb
pop
or
mov
or
xchg
adc
lret
in
iret
outsb
shr
stc
call
shll
push
xchg
pop
ret
jmp
add
in
xchg
add
divb
outsb
xchg
pop
lea
mov
fmuls
sbb
jmp
ss
sbb
xchg
add
fnsave
orb
xor
test
fmuls
aam
fmull
pop
stc
clc
in
fucomp
loop
xchg
push
lcall
leave
test
scas
mov
xlat
mov
inc
mov
jg
push
sub
sbb
mov
mov
xchg
shl
addr16
cwtl
lcall
dec
adc
das
scas
pop
and
add
ss
int3
cwtl
out
mov
mov
and
and
jae
push
cmp
cmp
xchg
xchg
mov
fidivrs
sbb
dec
pop
arpl
jbe
cmp
mov
in
lret
ljmp
stos
les
movsl
movsb
mov
into
aad
mov
jl
mov
sarl
sti
push
cmc
enter
push
mov
nop
or
in
cs
pop
sbb
cmp
pop
mov
or
sub
imul
jp
sub
mov
cmp
outsb
dec
inc
pop
daa
sbb
xchg
push
js
test
bound
sbb
loopne
andb
cwtl
sbb
test
mov
mov
outsb
inc
mov
movsb
jb
in
sub
addr16
shl
mov
pop
mov
add
gs
outsl
dec
es
mov
mov
mov
test
pusha
leave
xor
test
dec
inc
loopne
add
push
adc
cmp
imul
cltd
pop
scas
cmpsb
cmp
cmpsl
hlt
out
adc
jge
aaa
std
aam
nop
sti
aas
out
aaa
sti
or
lods
hlt
xor
popa
dec
and
ja
data16
lods
mov
xchg
and
iret
out
inc
lods
push
in
mov
pop
enter
in
dec
sarb
and
jnp
sbb
xchg
xchg
sub
add
push
cltd
add
test
repz
and
push
jae
outsl
sub
mov
sahf
data16
cmp
scas
add
leave
push
in
es
outsb
mov
jae
lods
aad
nop
mov
dec
shll
jnp
daa
jno
inc
adc
imul
cmpsl
sbb
shl
and
push
xchg
roll
mov
jecxz
add
divb
mov
and
xchg
inc
lods
sub
sbbl
sub
mov
jmp
cltd
and
mov
data16
lods
outsb
popw
cmp
inc
ja
sbb
or
icebp
scas
cmpsl
pop
data16
andps
xchg
push
xchg
int3
adc
cmp
dec
inc
stos
repz
clc
cmp
in
mov
xchg
inc
adc
sti
es
push
lds
jnp
mov
xor
dec
aas
sub
mov
lahf
sub
cli
xor
jmp
test
or
push
jmp
jbe
into
flds
shl
mov
push
jae
outsb
pop
mov
add
scas
leave
mov
imul
stos
out
inc
dec
and
int
sbb
mov
inc
pop
lds
int
xchg
shll
mov
lahf
mov
xchg
push
xor
int
xor
push
xor
adc
fcomi
aaa
add
dec
pop
adc
add
adc
aas
loope
ss
push
adc
push
jns
push
jae
cmpsb
xor
ljmp
inc
adc
insb
in
xor
inc
lods
xor
fwait
push
jb,pn
jnp
mov
lods
idivb
jmp
icebp
pop
jae
push
jne
loopne
jg
std
lods
popa
dec
out
ret
fisttps
mov
mov
test
push
dec
dec
insl
pop
xor
mov
lret
insb
jge
pop
or
into
adc
imul
or
xchg
sbb
mov
lret
jmp
mov
xor
ja
in
ja
test
and
add
push
adc
lds
das
pusha
fldenv
add
mov
orb
adc
cmp
ljmp
arpl
push
lea
jb
pop
push
adc
cld
xlat
jb
push
hlt
push
movsb
cmp
notl
popf
ret
dec
ret
inc
subb
xor
fwait
pop
movsl
sbb
jl
mov
pop
or
push
ss
cmpsb
repnz
push
mov
adcb
hlt
adc
mov
xchg
subl
ret
add
inc
mov
loop
jnp
outsl
out
pop
pop
rclb
mov
jle
icebp
popf
pushl
add
push
movsl
pop
imul
cmpsb
or
rcrl
xchg
mov
out
mov
in
loope
bound
icebp
fisttpll
cmpsb
mov
sbbl
xchg
sub
mov
mov
movsl
into
jg
stos
adc
fnstenv
pop
les
ds
shll
pop
fwait
ret
outsb
mov
lods
cmp
stos
push
or
mov
xchg
pop
int
mov
movsl
mov
sub
xchg
push
xchg
fisubs
popa
and
mov
mov
mov
add
push
add
xchg
in
adc
in
mov
adc
mov
bound
xchg
mov
push
lcall
or
in
rep
and
lea
xchg
sub
jns
inc
fwait
jbe
push
test
add
pop
adc
dec
movsb
jo
pop
xor
push
xchg
xor
sbb
mov
push
push
cmp
iret
dec
mov
imul
pop
pusha
test
sub
adc
cmp
xlat
cmp
jmp
leave
push
lea
fldt
es
sbb
aaa
push
push
sub
clc
rcll
fldl
push
ret
xor
pop
int
push
sbb
sub
fwait
push
push
sbb
es
cwtl
cmc
sbb
cmp
pop
jle
add
pop
sahf
sub
pop
psubd
xchg
repz
pusha
repnz
jle
pop
push
movsb
dec
adc
and
jnp
outsb
push
ret
pop
enter
js
ja
sbb
in
cmc
pushf
or
scas
faddl
out
and
mov
push
cmp
xchg
mov
imul
insb
push
leave
jge
or
ja,pt
sbbl
mov
repz
xor
cmp
in
fwait
sub
or
mov
jo
out
out
xlat
xor
or
sbb
and
pop
testb
cmp
cmc
fs
mov
mov
pop
mov
dec
das
rcrl
jecxz
inc
xor
cld
adc
sbb
aam
push
test
out
xchg
add
cmp
arpl
fs
sub
lret
test
hlt
stos
jne
shlb
pavgb
add
enter
xchg
dec
repz
sub
sbb
sbb
arpl
test
fimull
pop
dec
lods
cmpsl
mov
ret
aaa
ss
vpunpckhwd
or
sub
mov
sbb
lods
cmp
ret
mov
das
fbld
inc
in
cs
mov
ja
push
in
jmp
push
dec
inc
push
mov
aaa
xor
lods
xor
ja
into
push
push
adc
mov
jb
repz
outsb
mov
cli
inc
adc
or
fistl
mov
orb
jbe
jl
xor
sti
or
in
aam
mov
inc
lret
repz
inc
mov
stos
outsb
cmp
xor
or
inc
inc
and
jmp
sbb
push
inc
scas
inc
sarb
fildl
push
dec
hlt
out
sub
in
xchg
insb
sub
cld
pop
stc
sbb
dec
call
fdiv
add
mov
in
adc
mov
jle
dec
push
sbb
push
insl
std
cld
dec
mov
adc
mov
or
insb
pop
mov
ret
psubsb
jae
dec
lods
out
xor
xchg
cmpsl
and
push
adc
push
sbb
add
cld
jnp
fnstsw
in
push
andl
fisubrs
sbb
test
dec
jle
shll
outsb
daa
mov
insl
dec
or
inc
leave
sub
mov
mov
xor
cmpl
dec
xchg
test
sbb
push
or
out
xchg
mov
sarb
cmp
push
cwtl
out
mov
cmp
jmp
jo
dec
and
mov
mov
aam
dec
mov
push
testb
movzbl
mov
notb
pop
mov
pop
insb
push
sti
jb
clc
cmp
in
arpl
cs
pusha
jecxz
xchg
cmpl
out
jecxz
cli
sbb
loope
sub
mov
and
cwtl
cwtl
rcrl
ja
mov
xor
jns
enter
cmpsb
jbe
mov
cmpsb
out
lock
bound
loop
lret
hlt
pop
xchg
xor
icebp
sub
aaa
pop
dec
fwait
add
mov
push
or
and
mov
loopne
enter
mov
stc
stos
mov
imul
data16
and
cld
and
push
imul
lahf
xor
sub
sub
mov
push
mov
in
lcall
stc
leave
pushf
pop
inc
and
mov
mov
sbb
dec
and
dec
cmc
orb
int
fcoms
repz
xchg
jnp
push
in
xchg
pop
jecxz
dec
xchg
int
mov
les
xorb
push
push
insl
and
xlat
fwait
dec
nop
test
in
add
sbb
rdmsr
test
addr16
ret
mov
mov
mov
shrb
mov
add
xchg
mov
inc
mov
push
stc
and
ret
pop
loope
sti
jle
movups
add
fcompl
mov
movsb
pop
hlt
jns
mov
cmpsb
mov
xor
enter
sbb
lods
sbb
add
ret
dec
nop
push
adc
dec
and
push
pop
push
mov
cli
inc
jle
jl
mov
push
sahf
scas
int
ds
xchg
jb
adc
cwtl
add
mov
jb
jne
iret
test
or
mov
mov
jne
lret
and
std
add
or
sub
inc
inc
les
fstps
mov
pusha
and
mov
data16
lret
test
es
adc
int
adc
jnp
leave
ljmp
sbb
fnstcw
jo
mov
push
lret
pop
xor
sahf
pop
mov
gs
in
lock
inc
pop
mov
lds
adc
inc
xor
mov
cmp
push
add
in
repnz
dec
inc
sub
and
jg
jae
pop
fldt
adc
cs
and
push
pop
adc
and
lods
mov
push
fbstp
or
jb
fldcw
pop
loope
dec
mov
out
fs
clc
and
jmp
aad
pushf
movsb
inc
push
xchg
xchg
insl
lcall
lods
mov
xor
cmp
loope
scas
or
orb
sub
clc
out
and
movntps
and
icebp
add
mov
popa
fcoml
out
mov
mov
pop
das
xchg
jg
add
and
pushl
cmp
cmp
xchg
jne
arpl
pop
in
and
dec
add
or
scas
push
dec
or
stc
xchg
jbe
out
cmp
insl
jl
out
ds
inc
inc
pop
mov
inc
lret
fwait
mov
shlb
shlb
jmp
ficomps
test
rclb
lods
push
mov
lods
loope
or
insb
outsl
mov
inc
push
lret
push
addr16
jns
call
sub
cwtl
cltd
lcall
iret
divl
jbe
mov
jne
push
sti
add
fdivp
xchg
pop
std
dec
xor
or
sbb
in
js
into
jb
xchg
cli
xchg
out
mov
or
fmull
sub
jae
push
fnstsw
mov
cmp
bnd
mov
push
sarb
ds
lret
sbb
dec
sbb
add
sub
and
in
movsl
add
imul
je
out
sub
ror
aas
mov
sub
test
int3
int3
xchg
orb
ds
hlt
test
into
fnstenv
jmp
imulb
mov
inc
jg
sbb
pop
push
push
gs
insl
push
in
es
add
cmp
ljmp
xor
add
pop
popa
push
xor
cmp
pushf
adc
pop
lret
repnz
cmp
dec
lods
or
stos
out
push
gs
mov
cmp
xchg
push
jl
add
lret
in
out
inc
stos
lahf
dec
mov
js
xchg
lret
cmp
in
aam
ss
xchg
push
addl
jle
cli
ret
or
movsl
out
mov
es
shll
inc
add
pop
xchg
dec
jno
add
dec
jno
outsb
xchg
movsb
jae
punpcklwd
das
enter
or
xor
mov
xchg
test
mov
fisttps
pop
fwait
adcl
sub
xchg
sbb
clc
shl
and
test
loope
sti
inc
mov
subl
adc
jecxz
test
popf
xchg
push
jmp
inc
mov
cmp
hlt
aad
fnstenv
pop
and
pop
in
aad
rcrb
cmc
mov
mov
and
jne
dec
lret
arpl
clc
sbbl
push
or
movsl
cmp
repz
out
mov
gs
jg
out
aas
adcb
push
insl
stos
and
dec
xor
mov
or
inc
enter
or
in
call
jo
xchg
cwtl
test
leave
std
xor
push
xchg
lds
lret
adc
or
popa
fs
jle
adc
mov
adc
mov
popa
loopne
mov
fs
lahf
mov
sahf
xchg
mov
and
mov
push
in
push
mov
ds
cwtl
sbb
cli
ds
lret
ret
aam
movb
xchg
addl
push
rcrb
xchg
cmpsl
mov
or
movsb
pop
jecxz
cmp
mov
shrb
push
cmp
out
push
mov
jecxz
cmpsb
cmpsb
mov
arpl
mov
out
dec
mov
ja,pt
inc
mov
and
call
inc
xchg
mov
jg
mov
or
jmp
out
dec
in
and
push
pusha
popf
popf
and
testl
jne
out
icebp
pop
call
hlt
lods
cwtl
stos
clc
js
dec
jnp
sbbl
popa
test
ud1
dec
dec
or
int3
sub
xchg
rcl
in
add
or
adc
jmp
jae
repz
cli
adc
mov
xchg
shl
jmp
ja
mov
mov
xor
mov
inc
mov
lret
divb
cli
outsb
std
jecxz
sbb
ret
test
je
add
stos
push
in
push
cmpsb
pop
jl
xchg
cmpsl
mov
xor
lods
push
hlt
test
cmpsb
push
shlb
jle
test
push
outsl
mov
push
mov
sahf
roll
aas
fstpt
cmp
mov
adc
push
ret
lret
mov
out
pop
sub
in
sub
mov
xchg
add
cmp
xor
ja
add
cmp
xchg
pusha
xor
pop
jle
jae
mov
xor
jo
add
dec
push
test
aaa
das
mov
push
stc
push
cmpsb
cmp
add
pop
inc
fstps
cmp
xchg
sbb
mov
xchg
pop
arpl
add
mov
fsubrs
mov
push
xor
lods
or
and
cmp
add
push
push
jb
pushf
sub
pop
test
jl
popa
cli
das
mov
fwait
gs
faddp
jne
cltd
push
cmp
push
fldl
rorl
lcall
mov
or
sti
fcmovnb
cmp
xchg
push
add
xor
fistps
scas
sbb
mov
xchg
imul
push
outsl
xchg
add
jno
sub
shll
xchg
push
mov
cwtl
test
and
stc
je
int
nop
dec
popf
add
lret
lahf
inc
cmc
xchg
cltd
insb
clc
les
jmp
cmpsl
jecxz
inc
sbb
ret
ss
cs
ja
repnz
addl
fsubrs
jns
jle
jle
sub
mov
js
push
or
lret
ffree
mov
popa
loop
xchg
mov
pop
dec
mov
dec
pop
sub
sub
movsl
sub
out
inc
negl
sahf
shrb
sub
pop
lods
popa
push
sub
arpl
loope
rorb
and
icebp
sbb
rolb
xor
cli
lea
insl
push
xor
sbb
jnp
sarl
mov
cmovb
mov
dec
pop
or
loope
or
adc
cmp
dec
mov
push
push
push
xor
sbb
and
lret
xor
jg
cmp
jbe
mov
pop
mov
mov
imul
les
ret
jno
mov
iret
div
dec
clc
rcrl
cmp
mov
cltd
xchg
dec
sar
jl
add
js
dec
into
int
xor
pop
mov
adc
xchg
pop
test
xchg
cmp
pop
mov
data16
andb
jle
or
bound
adc
in
cmpsb
cmp
cwtl
pop
mov
jl
fistpll
sbb
mov
inc
insb
imul
decb
sar
test
rcr
jg
fs
jmp
js
xchg
dec
mov
xchg
jnp
mov
or
mov
pop
cmc
cmp
mov
outsb
inc
xor
ret
es
movsb
xor
popa
repz
sbb
mov
js
and
aas
mov
push
lods
and
sub
xor
mov
or
ljmp
lock
sub
xchg
pushf
loop
adcb
push
lahf
stos
fwait
jne
out
int
cmp
push
add
xchg
js
mov
pushf
cmp
inc
outsl
movsl
pop
mov
mov
mov
call
or
push
and
xor
sub
les
aaa
stos
jbe
sbb
jno
sbb
enter
adc
lret
jne
imul
leave
mov
mov
push
xchg
jg
mov
push
inc
mov
cwtl
adc
mov
jb
pop
dec
and
sub
mov
mov
sbb
mov
mov
ret
lods
ret
sbb
add
inc
mov
sbb
mov
outsl
and
pop
jmp
push
push
addr16
clc
call
sub
and
sub
shll
push
cmp
jnp
mov
dec
int3
in
adc
mov
lahf
aam
pushf
mov
jmp
ljmp
xor
pop
cmp
stos
fdivp
xchg
and
lahf
fsubl
out
xlat
pop
sbb
cmpl
push
call
popa
push
sbb
icebp
mov
adc
xor
cs
loope
jmp
movsb
xchg
popa
push
cmp
into
je
dec
pop
sub
cld
out
rorl
in
jle
pop
adc
fmulp
mov
f2xm1
sbb
into
or
out
inc
mov
fsubs
int3
int
aaa
out
push
xor
push
xchg
dec
push
bound
cmpsl
inc
aaa
in
inc
sub
add
dec
movsl
dec
aam
inc
mov
fcompl
out
and
mov
inc
sbb
addr16
into
pop
pop
bound
movsb
push
divl
jmp
push
jno
mov
clc
mov
sbb
fisubs
fld1
push
cmp
or
inc
xchg
dec
rorl
imul
xchg
xchg
lods
push
mov
jecxz
mov
call
stos
fwait
cltd
fstpl
popf
and
xor
sbb
aaa
mov
mov
sarb
or
dec
inc
test
mov
repz
add
xor
addb
fildll
sub
aaa
insl
jmp
inc
sarb
andb
lods
dec
pop
jo
push
filds
inc
rcll
push
insl
cmp
icebp
movsb
outsl
jbe
fstl
clc
fisubrs
mov
sub
and
sub
fwait
int
sahf
pop
repz
iret
imul
filds
jl
movsb
jmp
ja
jmp
add
sub
fs
mov
movsl
in
push
xchg
into
jp
pusha
jecxz
in
xchg
loop
pop
outsb
xor
cs
sub
and
inc
shrl
sub
add
bound
daa
or
js
xchg
xor
mov
sub
sti
push
testb
mov
push
je
fistps
mov
and
xchg
cs
cmpsb
arpl
jmp
mov
pop
sub
jecxz
adc
clc
sbb
lret
popf
ja
into
xor
lret
adc
dec
in
mov
out
fidivrs
xchg
mov
dec
dec
scas
loope
dec
mov
mov
fdivrs
sti
sub
cmp
in
jnp
jge
rcl
push
ret
pop
inc
inc
adc
jns
jo
out
loop
movsb
ret
push
xchg
and
sub
ret
inc
in
jg
fbstp
out
mov
pop
sbb
jmp
cmp
hlt
or
mov
sub
cmp
xor
push
xchg
mov
sbb
dec
addr16
cwtl
jl
in
dec
sbb
bound
or
stos
xor
sbb
insl
movsb
lods
push
daa
sti
push
dec
cmp
test
aad
add
and
outsb
aas
cmp
mov
sbbl
xchg
out
sub
in
aad
xchg
cmc
inc
std
or
cmp
mov
xor
aas
mov
adc
icebp
fwait
sub
mov
insl
mov
cmpsl
jne
movsl
bound
sbb
xchg
insb
pop
jmp
out
call
pop
test
pop
insb
adc
push
mov
cmp
push
jge
xchg
push
cld
lret
or
cltd
adc
loopne
push
mov
push
int3
lds
sub
sub
push
adc
push
popa
ds
inc
mov
mov
cmp
outsl
in
scas
fildl
xor
movsl
out
push
movsl
jo
aad
fs
push
testb
repz
loop
xor
mov
add
out
jle
cmp
gs
inc
and
ret
fwait
sub
dec
mov
test
aaa
pusha
out
aad
cmpsl
adc
jno
sub
out
add
stc
push
sti
or
inc
sub
or
mov
dec
stc
mov
sbb
push
xchg
mov
aad
or
std
loopne
mov
jp
jl
loope
jb
or
orb
repnz
or
pop
pop
sub
dec
pop
xor
adc
or
lcall
test
test
inc
pop
add
push
mov
hlt
sbb
fnsave
ret
pop
lods
sar
push
scas
pusha
pop
popa
jno
jge
or
jg
add
jnp
cmc
and
or
pop
cmp
pusha
dec
mov
insl
imul
sbb
pop
aad
add
mov
fidivrs
jle
sub
mov
lds
add
dec
dec
pop
testb
pop
mov
hlt
cmp
sbb
and
out
mov
pop
dec
fisubl
and
mov
pusha
or
inc
add
or
sub
inc
gs
or
push
cmp
test
bound
nop
shr
adc
mov
mov
dec
cltd
sbb
cs
sbb
mov
sahf
mov
imul
jge
into
mov
and
cmp
loope
aad
in
xchg
pop
and
xchg
xor
mov
cmp
adc
in
sbb
frstor
icebp
inc
loop
push
add
jae
jge
cmp
pop
in
insl
jp
mov
cltd
rolb
fdivp
es
and
and
stc
mov
adc
push
push
cmp
loopne
inc
in
jnp
imul
imul
stc
lods
mov
jge
pop
xor
arpl
mov
lock
adc
loopne
or
ds
shrl
dec
mov
enter
subl
dec
aam
jne
mov
addr16
xchg
fwait
mov
popf
pop
js
mov
dec
mov
out
jp
ljmp
push
cld
dec
jno
mov
mov
fistpll
pop
mov
aad
push
aas
clc
fdivr
sub
xchg
jmp
xchg
mov
cmp
jo
xor
jle
in
pop
mov
push
in
out
js
aam
cmp
ret
fsubl
inc
ss
pop
xchg
mov
pop
aas
dec
enterw
jbe
xorb
pop
cmp
sub
mov
out
pop
xchg
mov
sar
leave
dec
add
repnz
lods
std
add
test
add
jle
pusha
movsb
jge
mov
inc
adcl
sbb
insb
add
test
adc
mov
test
std
not
out
pop
inc
scas
xchg
push
cmp
shll
jl
pop
xchg
jo
adc
or
xchg
jae
jb
stos
push
scas
notb
adc
daa
in
and
je
push
jbe
imul
pop
jl
push
dec
pop
dec
mov
push
aaa
cmp
test
outsb
or
lret
and
inc
std
mov
je
ret
scas
xchg
ss
add
jle
std
outsl
in
lret
mov
mov
fcompl
fstpl
ljmp
imul
imul
cs
adc
xlat
or
dec
fstl
out
pop
mov
pop
ljmp
sbb
outsb
test
sub
push
scas
loope
push
out
out
lods
xchg
int
pop
cld
shl
cmc
repz
dec
and
rcr
inc
outsb
test
xchg
int
add
pop
or
lods
out
dec
stos
xchg
popf
outsb
adc
sahf
jp
dec
sbb
in
and
push
daa
jmp
mov
mov
scas
insb
jecxz
mov
ret
jge
add
lods
adc
ljmp
outsl
mov
fcmovnbe
cmc
ret
push
in
push
or
mov
xor
add
cmp
and
adc
lret
fsubrs
push
emms
out
add
mov
lods
gs
add
imul
cwtl
std
push
add
pop
lea
cwtl
pop
stc
in
stos
aad
push
outsb
mov
gs
mov
cmp
pusha
sub
or
mov
push
sub
outsb
nop
aad
ss
pushl
jle
imul
xchg
pusha
aad
cli
subb
ds
sbb
or
xorl
cmpsl
mov
pop
add
aam
repnz
sbb
aad
cmp
pop
lcall
or
xchg
push
lods
fnstcw
or
cmpsl
sub
and
es
jecxz
test
mull
pop
fildl
jbe
fildll
pusha
lock
push
mov
inc
test
push
xor
loopne
aad
sub
mov
fidivl
or
pop
cltd
fs
adc
aas
jb
fisttps
add
fucomi
fwait
dec
out
or
adc
and
fadd
movsl
mov
test
push
mov
or
aad
arpl
and
mov
adc
out
inc
aaa
test
mov
xor
js
lods
mov
xor
pop
cmpsl
pop
rclb
std
add
ret
xorb
rcrl
aad
xor
mov
fisubl
dec
pop
lcall
rclb
or
jg
jne
mov
pop
ret
mov
adc
push
mov
loop
mov
and
sbb
addl
fstps
inc
adc
stos
push
mov
test
clc
pushf
cmp
out
pop
adc
call
lcall
jb
cli
ds
sub
arpl
pop
out
in
jl
mov
pusha
sti
push
es
mov
in
jne
int
fcomip
icebp
bound
xor
lds
fdivrs
xchg
shll
arpl
mov
mov
xchg
pop
loopne
mov
mov
push
std
and
inc
mov
or
cmp
stos
clc
xor
xlat
cwtl
iret
aad
cmp
adc
arpl
xchg
icebp
mov
imul
pop
dec
fmul
or
jb
xchg
fsubs
jb
and
popa
dec
mov
add
fstpt
and
loop
scas
cli
adc
cmp
test
sub
dec
daa
repnz
sub
je
lods
jns
outsl
dec
icebp
xorl
jmp
cli
xchg
sahf
xchg
icebp
mov
out
pop
int
lods
mov
mov
xchg
ds
inc
lahf
fsubr
andl
mov
insb
xor
inc
lret
or
push
ficoml
and
lea
xor
add
mov
xor
jp
inc
jnp
pop
cmp
js
and
mov
addl
rcll
mov
test
adc
mov
jmp
pushf
cmp
xor
cmp
daa
sbb
popf
cmp
loop
lods
neg
cmp
fcoms
sub
inc
jb
inc
lcall
mov
push
jmp
xchg
mov
aas
lea
nop
mov
inc
cmp
in
sbb
enter
in
cmpsb
loopne
fdivl
enter
lahf
jmp
push
ja
fisttpl
xchg
shl
push
daa
xor
lock
jecxz
jno
pop
popa
inc
or
das
add
inc
xor
int
mov
orl
jg
std
add
addr16
fst
or
shrl
iret
mov
add
and
and
in
and
addr16
xchg
orb
insb
dec
nop
lods
and
in
lds
mov
xlat
pop
stos
js
pop
repnz
jecxz
pop
mov
jmp
inc
pop
loopne
mov
stos
dec
into
pusha
call
into
es
adc
sub
pushl
cmp
lods
mov
add
popf
dec
cli
imul
add
shr
jne
scas
jae
into
mov
mov
xor
pop
fisubs
push
cwtl
pop
pop
movsb
sub
loope
jg
mov
lahf
inc
mov
rcrb
sti
loope
in
popf
xor
sub
cmp
notb
mov
movsb
std
ljmp
mov
add
in
imulb
pop
inc
aaa
add
adc
pop
mov
insl
sub
adc
repnz
jge
push
mov
or
mov
or
add
and
mov
mov
sub
mov
cmc
dec
sbb
mov
repnz
inc
inc
sbb
int3
adc
mov
fdivr
xorb
jns
mov
inc
mov
test
pop
sti
add
ret
and
int
add
add
mov
mov
mov
sub
sbb
xchg
shrb
xlat
cmp
mov
adc
out
out
mov
cmpsb
icebp
sahf
cs
test
jb
jbe
xor
mov
or
inc
fsubrs
cli
out
inc
mov
or
push
popf
int3
dec
or
jmp
rcrb
mov
jno
jo
mov
inc
out
and
mov
adc
daa
nop
outsl
and
fiadds
lahf
cmp
ljmp
cs
and
addr16
inc
or
xor
repz
ja
and
shll
fwait
mov
sub
out
sub
out
push
fcmove
gs
jmp
dec
xlat
add
imul
call
mov
push
push
dec
xchg
mov
pop
fdivs
es
popa
mov
lcall
mov
add
inc
push
xchg
xor
out
scas
sbb
push
movd
ja
cld
push
mov
jo
ds
jne
adc
rol
mov
adc
sub
cmpsb
sbb
adcb
sarb
xchg
inc
dec
das
xchg
cmp
xlat
sbb
pop
push
nop
inc
jno
xor
xchg
subl
dec
xor
ja
mov
addr16
std
jl
popf
jle
js
aad
dec
sub
xchg
mov
or
lds
push
xor
cmp
movsb
mov
pop
pop
push
test
sbbl
push
push
iret
pop
sbb
mov
movsl
pop
add
idivb
inc
into
push
xor
jmp
or
xchg
sub
add
adc
cmp
jb
push
sbb
sbb
andl
cmpsb
and
mov
test
mov
loop
and
add
fstps
mov
and
mov
mov
mov
test
jle
cltd
pop
sar
mov
push
xchg
push
fisubrs
and
int
cmp
cs
lret
outsb
xchg
call
xchg
addr16
frstor
lods
and
loopne
gs
fwait
sub
loopne
hlt
pusha
xchg
xchg
fbstp
test
push
cmp
mov
insb
cli
adc
into
adc
cmp
mov
cli
xchg
or
add
ror
mov
insl
js
cmp
insl
push
sbb
push
in
mov
cwtl
pop
xor
jne
cwtl
add
rol
push
shll
jp
dec
outsl
addb
mov
dec
pop
dec
adc
in
push
in
test
jg
dec
add
jno
xchg
inc
icebp
pop
int
fsts
jmp
cmp
lods
addb
ret
call
ficoml
push
imul
lods
lret
aas
std
lods
in
push
xchg
xchg
hlt
mulb
mov
int
ljmp
out
push
pop
push
cmp
or
or
arpl
sbb
push
stos
or
in
push
cmpsl
in
out
daa
dec
sub
adcb
in
pop
xchg
inc
ret
mov
testb
xor
mov
test
jns
iret
or
jns
and
lret
jl
shlb
sub
sub
jg
or
sahf
cmp
jo
push
das
cmp
sub
xchg
aad
xor
imulb
xlat
adc
push
repnz
jp
fidivl
addr16
fistl
loopne
lea
jbe
sarl
in
sbb
xchg
pop
outsl
mov
popa
mov
bound
or
inc
dec
or
xlat
das
data16
ss
movb
push
dec
lret
aam
or
jp
or
in
mov
pop
and
mov
inc
xor
mov
jge
or
stos
sbb
sub
xchg
dec
jge
aas
ficompl
fnstsw
cld
cmp
aad
cld
xlat
push
jle
out
and
int3
or
ret
nop
nop
pop
xchg
into
adc
push
movhps
je
fsubr
mov
fmull
loope
test
mov
inc
jl
adc
mov
les
test
push
movsb
cwtl
ds
fwait
xor
mov
cmp
sti
ja
popf
ss
adc
mov
inc
into
jecxz
shrl
popf
test
sub
cmpsb
push
pop
adc
stc
decl
jg
mov
mov
sbb
in
inc
lods
sbb
cmc
or
push
insb
sbb
fimull
scas
bound
jmp
push
xchg
mov
repnz
popf
scas
jmp
movsb
enter
xchg
cs
dec
stc
sub
div
add
das
les
xchg
rcl
xchg
lods
ss
jge
dec
imul
pop
and
cwtl
addl
mov
out
aam
and
adc
loop
data16
fsubrl
jmp
add
push
fsts
mov
sbb
jno
jg
leave
daa
mov
xchg
outsl
or
jmp
and
in
outsb
lret
sub
xchg
cli
imul
icebp
and
aaa
hlt
dec
xchg
mov
addr16
inc
mov
add
jg
das
xchg
sbbl
cli
int3
adc
mov
lock
xchg
ja
and
es
adc
jg
lods
hlt
cmpsl
imul
xor
std
shl
out
jo
pop
movsb
decb
xor
lods
jge
popf
jp
lahf
leave
mov
loope
iret
inc
and
add
jecxz
push
sbb
push
mov
aam
mov
and
outsb
pop
insb
pop
stos
and
push
add
shrl
xor
mov
xchg
cmpsl
das
popa
gs
add
out
cld
mov
pop
dec
cwtl
call
xor
pop
aaa
mov
pusha
adc
mov
pop
inc
push
dec
pop
pop
adc
addr16
ficoms
dec
push
jle
mov
dec
insl
in
mov
aas
adc
in
push
and
sub
loop
daa
push
sti
pushl
pmulhuw
and
lahf
cmp
popf
cmp
or
pop
imulb
pop
faddl
jmp
int3
shrl
push
lret
pop
cwtl
xor
lret
xchg
cld
gs
jge
test
sar
xchg
ret
pop
inc
xchg
imul
popf
xchg
mov
mov
cmp
jle
lret
inc
inc
or
pop
inc
scas
incb
testb
add
ret
shlb
xor
jle
test
stc
or
addr16
xor
add
xchg
cmp
aaa
fstpl
les
insb
test
mov
cmp
sahf
sar
shll
fisubrs
xchg
out
xlat
out
pop
sub
adc
push
push
cwtl
arpl
lret
jmp
insl
int
data16
bound
mov
cmp
addr16
cmp
mov
out
jnp
mov
mov
cmpsl
sbb
dec
int3
xlat
icebp
pop
push
sub
emms
sub
ret
push
sub
jae
dec
imul
xchg
ret
mov
pop
shrl
iret
push
push
inc
cwtl
jl
ret
fucomp
in
sub
imul
jno
jl
mov
pop
cmp
xor
es
lods
ret
jno
ljmp
jae
or
pop
dec
repz
xchg
es
mov
cld
lds
push
divb
push
mov
pop
add
in
mov
stos
lea
ficompl
call
push
xlat
and
cltd
ja
test
or
mov
lea
repnz
loopne
stos
jns
adc
or
lret
aas
pop
lock
and
add
fwait
jb
cmp
imul
pop
lahf
popa
loopne
xchg
push
sbb
outsl
jg
xor
mov
scas
insb
loopne
jb
cmp
mov
insb
mov
jmp
cwtl
sub
xor
sub
out
lods
jbe
push
iret
cs
fwait
in
cmp
int3
xchg
xlat
popa
cli
pop
int3
pop
js
push
in
and
add
loopne
imul
xor
test
lea
mov
mov
fimuls
insl
test
mov
out
mov
mov
test
dec
aad
jno
lcall
push
jne
scas
call
outsl
jae
mov
pop
pop
out
sub
repnz
cmp
adc
mov
jnp
jnp
xchg
out
add
cli
jno
cmp
in
cmp
cmpsl
jb
cmp
aas
cmp
gs
stos
pop
mov
aam
inc
mov
xor
popf
gs
pop
fisttps
out
call
adc
cwtl
push
aad
ljmp
xor
ret
jmp
jp
in
push
dec
add
add
sub
pop
xlat
arpl
fcomp
leave
insb
xchg
ret
push
out
ss
or
pop
cli
mov
int3
mov
sub
arpl
scas
nop
inc
jg
fwait
xchg
adc
ja
lahf
pop
fisubrs
hlt
and
mov
pop
mull
add
into
push
pop
scas
and
pushf
mov
fcmovnbe
test
inc
sbb
inc
xor
or
fbld
mov
mov
lahf
and
pusha
fldenv
adc
pop
mov
cmpsl
btr
je
mov
sbb
or
iret
int3
push
lds
mov
int
sbb
popa
orl
mov
push
adc
jno
push
add
sbb
daa
pop
test
fildll
lcall
adc
pop
mov
lret
lcall
pop
orb
dec
imul
xchg
insl
sub
iret
mov
lret
sarb
in
pop
cld
data16
xchg
test
loop
adc
and
jp
mov
jae
inc
mov
fnsave
pop
insb
pop
mov
imul
add
repz
repnz
arpl
into
inc
inc
fdivl
push
cmp
out
test
ret
pushf
jno
or
popf
es
add
addr16
mov
shrl
xchg
fildll
cld
or
cmpsb
add
test
in
adc
inc
ss
mov
xor
push
xlat
adc
add
ljmp
scas
adc
and
lea
lcall
dec
adc
imul
sub
fists
les
in
sarb
add
lods
pop
push
sbb
cmp
inc
cmp
xor
lret
in
dec
orl
sbb
sbbl
dec
and
inc
shrl
sarl
mov
jecxz
in
xor
subb
or
push
add
nop
stc
pop
cmp
les
jle
mov
aad
sub
sub
xchg
dec
push
xchg
xchg
sub
xchg
jnp
push
push
loope
mov
scas
sti
sbb
jmp
and
int3
push
cmpsb
inc
into
imul
rolb
loop
jp
adc
out
and
and
pop
dec
pop
pop
cmp
pop
dec
sbb
inc
arpl
mov
ret
sub
pop
mov
inc
lea
sbb
dec
punpckhbw
stos
shl
out
cmpsb
out
inc
xchg
cwtl
pop
mov
jnp
repnz
cmpl
inc
adc
inc
test
sbb
sbb
jl
hlt
xor
daa
cmp
std
xchg
imul
cwtl
lock
mov
inc
xchg
out
lret
xorl
jge
jge
fidivl
jno
loop
sbb
xor
push
xchg
and
enter
mov
ljmp
cmp
fwait
adcb
ja
mov
fldl
je
icebp
shl
or
xor
in
lock
lea
clc
pop
cmp
mov
push
pop
gs
cs
add
pushf
inc
test
mov
jmp
pop
loope
push
fdivl
cmc
mov
call
aam
jp
imul
sub
scas
shl
iret
mov
stc
or
call
scas
jb
addr16
xor
pop
mov
addr16
mov
cmp
push
jp
or
popf
mov
cmp
pop
leave
jo
cmpsb
cmp
add
nop
pop
ja
fisubrl
dec
mov
repnz
mov
test
lock
out
cwtl
pop
jno
jg
inc
popf
sahf
xchg
stos
js
add
cmp
stos
cmp
inc
xor
cs
xor
ret
lahf
ret
shlb
es
dec
shll
mov
lods
roll
pop
jg
cmpsl
js
mov
push
stc
jmp
fsts
loopne
sbb
jge
sti
cmp
pop
lds
xchg
adc
leave
in
jns
negb
outsb
sbb
dec
mov
sbb
iret
loope
mov
leave
mov
ficoms
jle
mov
pop
stos
add
cmp
rcr
loope
push
sbb
jg
sub
xor
sub
mov
dec
cli
jle
into
mov
adc
push
ds
nop
cwtl
jo
fucomp
sarl
arpl
mov
xor
mov
cmp
call
in
out
in
push
jae
dec
push
add
daa
jne
mov
pop
jns
rcrl
ds
jno
movsl
dec
fs
cmp
ss
dec
in
push
mov
roll
dec
mov
out
mov
jne,pn
mull
andl
daa
push
repnz
or
push
lods
sti
jbe
push
frstor
loop
clc
push
cmp
mov
sti
cmp
jo
ret
pop
loop
push
jge
jg
push
ret
mov
sub
pop
push
lock
push
sub
jmp
insb
mov
dec
mov
cli
ds
xorl
ljmp
stos
push
ljmp
jo
ret
sub
sbb
stc
jbe
ret
dec
xchg
mov
or
clc
or
popa
lret
dec
mov
push
dec
mov
ret
jmp
push
cmc
insl
enter
cmpsl
jb
int
int
cmp
mov
pop
mov
lahf
rcll
adc
inc
push
mov
cmp
in
sub
inc
jle
hlt
shll
fs
adcl
gs
and
cltd
xor
xor
push
dec
push
mov
jo
add
jno
gs
adc
cs
cmp
inc
jne
js
lcall
inc
sub
lds
les
shrb
inc
jl
jns
sahf
mov
jnp
roll
popa
jl
ret
clc
xchg
mov
pop
scas
movsb
jp
or
sbb
iret
and
jns
and
mov
mov
lcall
clc
cmp
sbb
xchg
dec
xor
jno
or
xchg
xchg
and
mov
xchg
and
nop
dec
push
movsl
pop
fnstenv
sbb
std
mov
insb
ljmp
xchg
das
push
lds
mov
mov
xor
cmp
cltd
aam
ljmp
or
jge
fldenv
mov
and
add
inc
cmpsb
xchg
aas
pop
mov
loope
leave
out
mov
dec
cmpsl
xchg
mov
out
add
mov
pop
cmpsb
push
mov
ss
pop
cmpsl
scas
outsb
mov
loope
mov
sti
icebp
cmp
gs
fiaddl
or
cwtl
in
mov
sti
fists
sbbb
dec
pop
push
clc
xor
in
imull
jmp
mov
mov
xor
push
sarl
adc
addr16
ret
mov
loop
and
sub
mov
mov
test
add
jmp
lahf
out
pop
sbb
scas
mov
add
jge
jb
push
movsb
cmc
jge
aas
sbb
clc
mov
push
in
mov
rclb
push
enter
fimuls
xchg
jmp
push
jnp
pop
fs
adc
imul
sbb
inc
cmpsb
mov
lea
cmp
sti
mov
lea
leave
psubsw
ljmp
dec
xchg
or
sbb
or
sub
dec
stc
popa
aad
les
sub
mov
cld
jp
push
jb
stc
jne
in
pcmpeqw
int
mov
sbb
les
push
cs
bound
ret
push
hlt
xchg
out
inc
mov
lea
sub
cmp
leave
iret
jo
inc
popl
mov
loopne
notl
pop
cltd
nop
cmpsb
fwait
add
inc
sbb
mov
jbe
loop
push
push
push
aad
jb
adc
test
mov
std
lret
subl
xchg
dec
lea
jecxz
sbb
pop
cmpsb
jne
scas
dec
loopne
cmp
movsl
stc
adc
or
push
imul
ljmp
mov
xor
adc
sahf
sub
mov
jmp
pop
xchg
sub
nop
addr16
and
sbbb
add
popa
pop
stos
pushf
cmpsb
mov
clc
mov
fldenv
sbb
inc
sti
mov
iret
jne
js
andb
pop
xchg
push
pop
test
pop
std
jg
cld
aas
cwtl
jecxz
ds
ficomps
leave
push
dec
iret
stos
imul
push
cli
jo
xor
ljmp
sub
push
jb
xor
lea
popf
pop
rcrl
xchg
mov
mov
sub
mov
xor
cmp
mov
mov
adc
nop
arpl
or
shrl
scas
or
mov
and
in
sarb
mov
pop
fstl
lret
pop
clc
jmp
shrl
fisubl
xor
cmp
sarb
adc
adc
inc
pop
mov
add
add
sti
scas
pop
dec
mov
in
mov
test
jbe
xor
shr
mov
std
add
in
lret
fsubrs
add
xchg
mov
mov
push
cmpsl
mov
lret
aad
add
imul
mov
addr16
push
add
fdivrs
jbe
sbb
dec
cltd
out
filds
xchg
jge
jl
add
adc
mov
int3
xchg
lahf
out
sub
push
int
mov
push
pop
cmpsb
xor
bound
mov
lea
or
js
scas
sarl
xor
lds
lcall
ljmp
mov
adc
mov
jns
push
lds
std
lea
mov
mov
or
negb
cs
dec
sbb
ret
sbb
gs
xlat
ficoms
inc
push
fs
popa
movsb
scas
ja
push
enter
pop
sbb
aam
testl
dec
mov
rcr
xchg
daa
cmpsl
cmpsb
arpl
inc
jge
loope
imul
push
stos
mov
adc
fwait
xchg
es
rorl
jecxz
dec
subb
mov
or
cmp
outsb
sub
adc
mov
daa
sub
imul
pushf
sub
add
fisubl
addb
aaa
std
pop
loop
jecxz
shr
and
pop
test
and
push
insb
gs
push
mov
cld
xchg
fcoms
adc
sahf
add
push
sahf
jb
icebp
sub
loopne
repz
pop
xor
cmc
in
sbb
sub
pop
mulb
mov
jmp
jp
aas
loope
pop
cmc
movb
sbb
pop
and
fnstenv
sbb
pushf
shll
insl
scas
and
sbbl
stc
push
push
stos
cmp
stos
mov
popf
cltd
sti
add
andb
ret
dec
mov
sarb
jb
pop
jo
mov
iret
jns
call
cli
xorl
cmp
test
mov
repnz
mov
out
and
inc
scas
fcoms
lea
jl
push
lods
jnp
leave
aad
jbe
test
iret
mov
pop
pop
mov
test
je
aad
jl
add
dec
rcr
into
stos
or
xchg
mov
mov
aas
cwtl
dec
fwait
or
xor
xor
mov
pop
sub
out
fstps
addr16
xadd
jg
mov
add
xchg
das
dec
mov
fisubrl
loopne
fcoml
jb
jge
xchg
xlat
pop
xchg
mov
jae
ljmp
mov
push
mov
daa
inc
stc
lahf
in
es
inc
add
lea
sti
aaa
pop
pusha
bound
pop
jo
push
mov
inc
mov
out
or
xor
aas
jle
jmp
xchg
sti
mov
jb
xor
arpl
ret
xor
shrb
cmpsl
jmp
cmp
jmp
popf
sbb
xchg
lret
jne,pt
mov
push
mov
xchg
pop
xchg
daa
mov
lock
cmp
aad
fnstenv
add
xor
and
cmp
add
and
insl
movsl
into
sarl
mov
push
leave
lcall
mov
adc
adc
mov
into
out
mov
pusha
das
shlb
push
cmp
cmp
inc
sub
sti
fcom
ja
dec
pop
aaa
pop
js
push
jo
mov
test
iret
jmp
mov
or
jmp
jle
cltd
mov
pop
sub
mov
mov
insl
xor
cmp
orl
or
push
pushf
stos
pop
add
jmp
in
jbe
cmp
xchg
int3
in
push
fs
das
mov
add
push
dec
pop
push
inc
inc
pop
aas
mov
testl
dec
daa
adc
mov
adc
mov
inc
and
dec
sub
mov
sub
pop
push
cs
cmp
repnz
jne
jns
push
pop
pop
fstpt
push
sub
bound
dec
jge
and
mov
aam
pop
je
xchg
pop
int3
cmpsb
in
add
mov
arpl
adc
jnp
adc
cmc
popf
add
xchg
and
pop
inc
cmc
loop
test
ret
jecxz,pn
loopne
xor
cwtl
dec
jae
popf
or
mov
mov
daa
je
sub
mov
pushf
pop
repz
or
adc
inc
push
inc
push
cltd
xchg
stos
adc
into
sub
adc
inc
fs
repz
movsl
lock
adc
xor
sbbl
pop
and
and
addr16
or
pop
mov
repnz
icebp
stc
outsb
call
xor
adc
addr16
mov
lds
fisubrl
xor
cmpsb
movsb
dec
sarl
mov
cmp
fidivl
inc
fucomp
fildll
shlb
test
lret
jnp
mov
sbb
ret
cmp
ds
pusha
mov
cmpsl
push
in
mov
mov
loope
fwait
enter
mov
inc
bound
fisubs
jae
cmpsl
inc
and
mov
adc
or
mov
notl
pop
inc
or
and
lret
xchg
loop
dec
sub
mov
mov
mov
sahf
pop
mov
jge
lahf
or
jae
aas
push
mov
push
aas
jae
das
xor
jp
lods
movsl
push
mov
or
out
loop
test
aad
iret
das
aas
or
xchg
sbb
mov
xor
xchg
push
cs
mov
mov
sbb
jb
and
inc
cmc
test
lcall
jb
xlat
stos
int3
jnp
mov
ret
push
sti
cmp
es
push
xor
jns
add
mov
in
ljmp
popa
mov
imul
sub
sbb
test
enter
push
scas
add
jno
jmp
sbb
popf
cs
cmp
pop
movsb
mov
inc
jbe
popf
cmp
out
or
mov
mov
jmp
addr16
jecxz
and
aas
mov
repnz
clc
mov
sub
fs
mov
repz
and
daa
aaa
fistpll
adc
jae
pop
mov
sub
call
outsb
iret
sub
subl
adc
lret
jmp
std
mov
mov
sub
xor
jp
fwait
mov
pop
mov
xor
mov
and
and
int3
pop
outsl
jno
enter
lcall
pop
notb
fsubp
lods
gs
and
das
daa
ljmp
mov
sub
test
scas
jle
mov
addr16
sub
out
add
jg
mov
repz
jp
sbb
xchg
hlt
pop
outsb
lcall
mov
mov
push
mov
cmp
pop
test
sbb
aad
push
or
out
sub
decb
xchg
fimuls
pop
fsubrp
add
pusha
lds
cmc
or
push
test
xor
mov
or
add
subb
push
mov
gs
bound
cs
nop
xchg
mov
jnp
pop
inc
out
int
xor
rclb
jp
pop
fwait
mov
mov
and
xor
inc
loop
inc
push
inc
or
mov
cld
xchg
rorb
sahf
lds
pop
ret
jge,pt
loope
rolb
and
popf
test
lret
icebp
fwait
and
ret
scas
fwait
cmpl
in
pop
or
push
sti
pop
and
in
rcrb
out
es
pop
bound
outsl
scas
cmp
push
mov
mov
mov
shll
jnp
and
xchg
xchg
addr16
cs
iret
fs
or
inc
mov
add
push
pusha
inc
mov
jno
test
add
mov
jecxz
jp
mov
sbb
aaa
sti
popf
mov
ret
int
out
cmp
and
lock
sbbb
and
stos
xchg
mov
push
mov
mov
xchg
inc
xor
fdivr
sbb
mov
ss
jmp
ja
adc
sub
vpinsrw
call
xchg
add
jmp
or
ljmp
out
dec
xchg
fs
or
push
pop
xchg
js,pt
mov
pusha
aas
pop
push
xlat
adc
mov
add
inc
mov
lcall
mov
mov
roll
mov
sti
dec
in
pop
cmp
pop
pop
shrb
enter
xor
mov
jecxz
mov
jnp
repnz
inc
push
mov
push
xchg
cmpsl
or
ss
or
mov
add
popa
rcr
insl
mov
mov
and
cmp
repnz
fnstenv
ja
movsl
bound
cmc
pop
add
adc
roll
movsb
fbstp
movsb
sub
iret
xor
js
xchg
pop
inc
cmp
pusha
xchg
or
xchg
ds
in
movaps
push
mov
xchg
pop
ljmp
dec
cmp
aaa
or
and
mov
ss
push
add
push
mov
fcompl
fisttpll
ss
cld
xlat
dec
les
or
adc
pop
test
cmc
sbb
sbb
loope
lret
dec
cmp
xchg
mov
aaa
mov
pop
sbb
add
ljmp
add
jnp
mov
add
and
movl
pop
xchg
xor
add
shll
push
mov
mov
cmpsl
repnz
aad
push
cmp
das
sbb
cmpb
xchg
fisubs
cli
pop
inc
fdivrl
push
movsb
jmp
sub
xchg
cwtl
xor
adc
mov
negb
add
push
into
cs
jg
xor
cli
push
ret
test
xchg
inc
inc
push
push
push
mov
pop
mov
into
mov
popf
push
or
or
mov
rcrl
or
or
push
xor
rorl
std
sbb
dec
dec
push
dec
jne
mov
and
jecxz
xor
xor
es
lahf
jns
ss
dec
dec
cmp
mov
mov
cld
push
nop
xor
push
data16
mov
test
ret
adc
popa
push
aad
sbb
xor
mov
dec
imul
pop
scas
scas
mov
mov
sub
xor
pop
pop
sub
gs
lcall
mov
fisttps
test
gs
jo
hlt
jg
test
test
add
cltd
std
pop
inc
mov
in
leave
inc
into
and
stc
addr16
mov
int
and
push
sahf
xchg
xchg
mov
mov
add
es
dec
pop
push
cmp
mov
mov
xor
xor
xchg
enter
jle
nopl
jae
sbb
nop
fcoml
rol
mov
gs
xchg
in
subb
cmpb
aam
cs
or
into
inc
jno
xchg
mov
imul
and
std
inc
sub
lret
adc
dec
out
mov
out
jno
out
push
repz
jge
xor
xchg
clc
mov
mov
or
std
lods
popf
cmp
loop
test
test
test
movsl
jl
sbb
sbbb
sbb
hlt
mov
jl
push
cmp
xchg
or
cli
lea
inc
jecxz
pop
mov
xchg
sub
and
fcoml
mov
adc
mov
jmp
xor
pop
xchg
mov
inc
add
dec
data16
and
gs
jmp
cmp
push
adc
xchg
xchg
push
xchg
cli
shlb
rorl
lods
and
push
sbb
adcl
dec
mov
push
adc
decl
adc
aaa
mov
and
and
ljmp
sub
push
jnp
lret
or
loope
fwait
in
push
test
pop
inc
iret
push
repnz
shrb
xchg
inc
xor
cmp
sub
pushf
imul
jno
loopne
jns
sti
sub
jecxz
out
adc
scas
xor
dec
femms
push
push
sub
xor
lret
outsl
nop
in
adc
cmpsb
lahf
push
mov
adc
cli
fists
lahf
ja
sub
and
in
movsl
mov
inc
loope
pop
xchg
and
push
jmp
aad
push
push
mov
movsl
in
adc
pop
pop
xchg
popf
or
daa
stc
mov
mov
pusha
stos
ds
sub
push
shlb
mov
pop
xchg
dec
stos
arpl
push
push
mov
jne
movsb
mov
add
pop
imul
pop
adc
out
xor
hlt
jbe
les
test
cmpsl
adc
sbb
lods
xchg
pop
arpl
dec
icebp
movsb
xor
jecxz
or
popa
pop
adcb
enter
in
stos
and
fwait
push
fidivrl
fistl
or
xor
jmp
lock
and
xchg
cmp
loop
cmpsl
movsb
daa
jbe
sub
jmp
rclb
push
jl
lods
add
and
loopne
jg
pop
xchg
jo
sbb
int3
cltd
sbb
cmp
mov
mov
leave
lock
mov
scas
ficoml
mov
sbb
out
mov
repnz
jno
add
sub
sbb
mov
fisubrs
arpl
fnstcw
dec
out
test
pop
fimull
xchg
mov
adc
jle
insb
sbb
mov
jns
notb
mov
clc
int3
cmp
lods
inc
stos
xchg
mov
sahf
pop
adc
movl
dec
std
mov
stc
jg
xor
adc
sbb
mov
test
mov
mov
inc
test
out
imul
icebp
and
es
shrb
out
addr16
adc
mov
jb
sub
decb
mov
jecxz
xchg
cmp
clc
push
pop
push
push
fldl
mov
les
scas
cmc
sub
mov
fs
add
jl
daa
fdivrl
mov
add
roll
pop
dec
movsl
cmp
fnstenv
mov
fdivp
test
bound
dec
or
je
cmp
lock
pop
and
insb
idiv
fsubs
daa
mov
mov
fwait
jp
andl
and
je
ret
cmp
cli
cltd
sar
sub
jecxz
inc
pushf
movsb
and
daa
scas
and
rorl
idiv
js
les
test
pop
sub
daa
lret
push
sti
dec
jno
cli
out
cmp
cltd
test
shr
loope
inc
enter
mov
scas
sbb
cmp
repz
nop
dec
daa
adc
push
int3
adc
fwait
enter
jecxz
in
add
or
adc
fnstenv
inc
lcall
pop
lcall
ljmp
adc
mov
jl
fs
test
rorl
es
je
rcr
arpl
mov
lret
out
pusha
ja
outsl
xor
mov
imulb
out
pop
sub
sahf
xchg
loop
pop
les
mov
loope
imul
ss
sub
mov
inc
cltd
subb
lods
mov
mov
bound
les
push
lods
pop
iret
xor
push
pushf
mov
mov
inc
mov
inc
test
adc
popa
pop
mov
or
sub
xor
jmp
adc
inc
sahf
xchg
inc
sub
mov
and
push
mov
in
std
pop
lret
cltd
pop
xchg
mov
ror
mov
mov
lds
xorb
addr16
dec
pop
adcl
push
mov
inc
dec
sbb
lds
mov
movsb
outsl
sti
inc
xor
jae
and
sarb
jae
movsb
adc
adc
fldenv
bound
push
jb
sub
testb
dec
mov
aaa
testl
add
les
sti
mov
out
das
jmp
inc
pop
inc
sahf
call
sbb
outsb
js
loope
test
cmp
movsb
lds
and
jae
fisttpll
or
or
lret
jmp
mov
pop
icebp
adcb
sub
ja
push
lea
jae
addr16
jg
lret
sub
imul
outsb
xorb
out
add
xor
mov
push
mov
jecxz
mov
popa
enter
xchg
mov
int
call
pop
call
lcall
cltd
mulb
xchg
mov
stc
sbb
sti
daa
jle
mov
lahf
xchg
push
into
add
xchg
fsubs
addl
jmp
inc
testb
jmp
lcall
add
jb
adc
jmp
dec
adc
insl
das
repz
cwtl
mov
lods
mov
inc
jns
inc
add
add
inc
insb
sub
stos
test
iret
insl
bound
inc
pop
loop
add
ret
mov
in
or
lods
test
loop
addr16
push
cmp
xchg
lahf
mov
mov
or
xor
adc
inc
mov
call
jno
ret
mov
mov
cmp
pop
shrb
repz
xchg
dec
jo
pop
push
shl
xor
pop
or
pushf
push
insl
popl
sbb
repz
pop
pop
cmc
cmp
inc
mov
pop
inc
sub
jg
ror
mov
mov
idiv
or
les
out
sbb
sti
cmpsl
jb
inc
mov
repnz
cmp
aam
es
mov
add
cmc
pop
movsb
jns
or
popf
hlt
js
mov
push
loop
mov
inc
cmp
mov
into
xor
lods
push
sahf
cmc
add
pop
push
mov
ss
ret
pop
cmp
ds
cmp
push
jle
mov
sub
mov
sub
cmp
inc
push
dec
pop
mov
enter
ret
nop
add
sub
push
sub
mov
ror
sub
imul
jo
sub
adc
dec
jae
cs
cmp
sti
jo
mov
push
jg
mov
in
dec
movsb
imul
ja
pusha
xchg
rcrl
dec
and
dec
ss
cmc
mov
jle
scas
loope
roll
or
aad
push
les
aaa
pop
add
and
leave
sbb
push
and
scas
std
notb
ss
shll
push
or
adc
mov
lock
pusha
in
or
sub
xchg
int
popf
mov
pop
add
adc
ret
mov
jns
daa
sarl
mov
jge
mov
fmull
insb
in
xchg
inc
jne
inc
call
sbb
dec
jne
in
leave
shlb
stos
ds
ds
lret
shl
xor
imul
mov
sbb
sbb
sahf
xlat
call
or
pop
lret
mov
insb
test
in
jecxz
and
jp
aaa
repz
dec
mov
adc
mov
outsl
in
jo
mov
xchg
sar
xchg
js
outsb
js
cmp
adc
bound
addr16
into
cmp
add
sbb
cmp
cmpl
pop
repnz
fnstcw
in
lcall
mov
repz
test
push
inc
fcoms
lods
pop
lret
pop
cmp
add
cmc
lcall
rorb
notb
inc
stc
popa
inc
adc
enter
push
lods
cmp
jb
ret
lds
insb
int
push
es
adc
clc
lret
push
dec
push
outsl
int3
xor
or
jmp
ds
das
jge
pop
adc
outsl
dec
sub
add
rorl
or
and
ffreep
push
imul
outsb
outsl
push
adc
pop
xor
xor
sbb
jo
cmc
dec
aam
pop
mov
lcall
pusha
jae
mov
adc
dec
jmp
fcoms
stc
sbb
orb
pop
aas
jo
sub
movsl
mov
cmp
jae
or
repz
sbb
xchg
popf
test
add
imul
int3
pop
enter
sub
movsl
mov
daa
inc
hlt
loope
sti
push
cmpsb
dec
jmp
imul
mov
sbb
jbe
arpl
xchg
push
dec
stc
ljmp
pop
pop
pop
mov
fwait
add
punpcklwd
lahf
fs
ds
sub
fcoms
cmpps
scas
fldt
out
mov
xor
xor
ror
dec
pushf
mov
adc
mov
push
xor
cmc
sbb
add
pop
fstl
xchg
lods
sti
into
popa
push
inc
stos
sub
mov
lods
stos
nop
cltd
icebp
insl
adc
and
or
aas
lahf
or
pop
std
pop
jns
stos
xchg
or
pop
aam
sahf
push
or
and
lret
rorl
xchg
push
ja
dec
ss
aas
divb
into
imul
adc
add
test
cmpsl
ret
sbb
lret
adc
push
call
hlt
mov
daa
faddl
sbb
dec
sbb
shrb
js
cld
jecxz
mov
and
pop
out
ret
imul
push
add
mov
mov
sti
jbe
stos
decl
pop
sahf
mov
cmp
iret
std
inc
and
popa
push
leave
jg
push
ljmp
out
and
mov
push
xchg
push
aad
js
movsl
xor
or
cmp
cmp
push
sub
cltd
inc
inc
popf
ds
scas
jb
add
insb
inc
fnsave
addb
push
jno
mov
sub
lret
sub
shrl
inc
ret
orb
pop
add
in
aas
or
xchg
mov
clc
pusha
sbb
loopne
adc
cld
mov
adc
pop
push
ret
das
mov
cmc
repnz
icebp
out
dec
cld
inc
and
sahf
mov
mov
insb
negl
fwait
inc
jne
cmpsl
add
or
lods
cmc
or
movsl
int3
stos
jb
pushl
js
les
pop
sbb
push
and
mov
mov
or
push
popa
mov
xchg
jecxz
lahf
adc
test
add
fld
in
dec
addr16
das
rclb
aad
sahf
in
insb
ja
mov
mov
jno
adc
test
add
rolb
jns
mov
push
inc
pop
mov
or
cmp
sub
xchg
add
movsb
sbb
pop
fwait
inc
andl
push
xchg
stc
xlat
pushf
xor
add
lret
push
sub
mov
aam
dec
push
inc
sub
push
jge
fsubl
jns
int
stc
pop
dec
hlt
cmpsb
sbb
lock
decb
push
andb
add
add
mov
and
jnp
dec
repnz
lock
pop
stc
mov
add
push
stos
sahf
dec
inc
inc
jnp
loopne
dec
push
repnz
mov
xchg
pop
aad
inc
mov
push
ja
jbe
jmp
pop
add
xchg
mov
out
hlt
aad
pop
test
cmc
sbb
jg
mov
rep
ja
xchg
adc
les
adc
hlt
dec
push
out
inc
aaa
divl
jne
jg
in
dec
inc
iret
or
stc
xchg
lods
xchg
pop
stc
mov
mov
pop
ds
or
js
mov
cmp
lea
push
jmp
pop
test
cmp
das
or
mov
sahf
mov
add
mov
fldpi
into
stos
cmpsb
cmc
je
out
cmp
not
xchg
cmp
mov
cmp
lea
je
cmpl
aas
test
imul
mov
add
push
cmp
jge
out
mov
or
pop
mov
pop
inc
adc
lahf
loop
push
adc
idiv
cmp
data16
mov
inc
mov
sub
pusha
movsb
xlat
jp
push
push
sarb
mov
rcll
lcall
mov
test
je
scas
push
add
push
lahf
sti
dec
in
xchg
outsb
imul
xchg
jb
orb
sub
cmp
add
mov
sti
movsl
pop
adc
mov
jge
nop
push
mov
sub
jl
mov
push
adc
mov
push
fnstenv
adcl
adc
mov
inc
cltd
jnp
mov
cmpsl
adc
push
pop
pop
insb
std
bound
inc
push
and
rcll
jae
add
fsubrl
rcl
jl
mov
rol
clc
jns
ljmp
lret
arpl
xor
cli
mov
fdivp
and
dec
in
push
mul
jo
xor
and
ss
in
icebp
imul
pop
mov
out
jge
gs
mov
cmpsl
push
stos
ret
mov
mov
mov
jo
mov
bound
aad
in
testb
push
ret
mov
inc
fwait
push
mov
dec
pop
fisubrl
push
mov
imul
jne
in
pushf
and
movsl
aam
sbb
fldl
movsl
sub
add
inc
sub
xor
xor
mov
dec
out
pop
cmp
push
mov
stc
enter
test
aas
xor
inc
cmc
jne
imul
sti
rorb
adc
out
sub
push
jns
test
out
mov
in
std
xlat
push
mov
mov
or
shlb
arpl
cmpsl
loop
mov
sub
dec
jge
pop
adc
daa
mov
push
addl
lods
aad
in
sbb
mov
push
adc
adc
jae
xlat
loopne
cmp
xchg
xchg
sbbb
push
test
lods
cltd
pushf
test
sbb
fcomps
mov
jb
dec
adcl
mov
add
sbb
in
insl
in
and
aaa
stos
mov
out
mov
inc
stos
out
and
outsb
popf
or
cmp
pop
pop
add
dec
inc
dec
xchg
and
push
inc
addr16
int3
outsb
test
lock
mov
push
cwtl
mov
jbe
enter
sti
data16
enter
out
push
out
ja
push
cmpsb
enter
das
imul
fxch
into
cld
jns
in
sti
aaa
mov
xorl
push
sahf
iret
sub
cmpsl
mov
aaa
js
jle
repz
lods
aad
mov
and
adc
mov
jl
adc
push
dec
int3
mov
testb
cmp
pusha
inc
into
fwait
pop
xor
cltd
push
push
jmp
scas
sub
leave
xchg
mov
push
cmpsb
cmp
sub
cs
cmpsb
and
pop
mov
push
shlb
push
xchg
neg
test
je
add
ret
mov
cmc
mov
xlat
out
jmp
mov
mov
mov
or
rorl
cwtl
out
push
mov
cs
mov
jno
popa
les
mov
sbb
sub
addr16
out
xor
mov
xor
lods
xchg
shl
mov
jbe
jns
dec
sarl
sbb
cmp
lsl
pushf
pop
pop
je
inc
ret
mov
ljmp
data16
popf
ds
push
inc
std
in
cmp
das
lock
mov
push
inc
sti
sbb
inc
inc
sub
out
int
scas
lret
mov
cmp
xchg
movsl
aas
mov
and
mov
cld
xor
xchg
enter
jb
push
dec
iret
jmp
push
aaa
imul
mov
outsb
or
mov
popf
or
cld
lods
and
push
inc
inc
jno
mov
mov
lea
ds
jbe
cmp
cmpsb
or
push
sbb
sbb
xchg
xchg
xor
insl
fidivs
rcrb
adc
outsl
cmc
xor
cmpsl
mov
aas
aas
inc
inc
xor
loope
xchg
int3
repnz
sub
test
addr16
fcomps
fnstenv
xchg
mov
dec
push
adc
push
fstpt
jp
and
jecxz
xchg
arpl
lcall
lret
add
or
mov
neg
inc
jne
pop
mov
out
cmp
repnz
and
cwtl
sub
pop
cli
or
lret
out
mov
insb
mov
sahf
sub
jp
jg
div
jns
rolb
push
xchg
sahf
clc
outsb
insl
cmp
cmp
pop
lcall
mov
aas
xchg
repnz
out
ficoms
dec
mov
mov
and
and
mov
lods
je
sbb
jnp
mov
into
je
dec
jne
adc
arpl
pop
pop
aaa
jnp
sbb
stos
jnp
xlat
lea
fimuls
cmpsb
and
add
push
mov
sarl
mov
xchg
aas
mov
push
mov
movsb
mov
lds
sarb
dec
pop
shll
mov
scas
js
mov
imul
mov
pop
out
leave
out
inc
cmp
test
sahf
or
lret
sar
pop
pushl
push
pop
fdivp
mov
or
ret
mov
popl
ret
mov
inc
adc
jne
push
aad
pop
push
inc
ret
mov
test
adc
out
fldcw
addr16
in
push
stos
sub
lret
mov
bnd
push
fdivrs
repnz
or
dec
sub
sti
jp
dec
out
and
xor
jmp
pusha
cmp
mov
outsb
mov
js
inc
cli
inc
fs
inc
jns
adc
test
inc
outsl
fdiv
and
push
inc
jo
lds
mov
fbld
lods
mov
divl
push
es
mov
mov
push
pop
add
xchg
jge
jb
push
push
out
sbb
hlt
mov
xchg
pop
or
or
idiv
inc
in
arpl
cltd
cmp
jecxz
jb
fsubs
jle
mov
inc
push
xchg
sub
mov
sub
popf
jno
xchg
pop
jno
das
inc
jle
fistpll
jmp
out
pop
mov
fdivs
jbe
movsb
fwait
arpl
in
add
mov
xchg
and
mov
dec
stc
jns
test
gs
mov
mov
popa
mov
dec
js
lock
aad
mov
mov
iret
mov
or
pop
bound
push
dec
rcrl
or
and
push
in
and
frndint
ss
sbbb
imul
mov
std
sbb
xchg
push
mov
push
mov
fisubrl
je
sbb
stos
or
outsl
js
mov
mov
stos
loopne
lods
fs
sbb
or
cmp
xor
push
pop
push
das
cld
and
loopne
ret
pop
in
add
cmpsb
adc
mov
xor
fiaddl
sahf
and
and
cwtl
dec
fcomp
push
fidivrl
mov
out
xchg
sbb
lods
shr
and
addr16
frstor
sahf
jge
loop
cmp
test
xchg
cld
out
mov
mov
jecxz
hlt
stc
xor
sub
loope
pop
pop
pop
movsl
add
xor
shrb
pop
or
flds
and
mov
out
dec
pushf
mov
push
push
pop
stc
jle
fcomps
mov
and
shrb
pop
iret
repnz
loope
xor
repnz
add
fucom
loope
out
xor
mov
xor
jns
or
clc
arpl
xchg
inc
je
ret
add
adc
rorl
repz
fdivrs
mov
jbe
mov
cmp
lret
sub
cwtl
imul
js
and
or
je
faddp
xadd
andps
test
pop
in
ds
in
push
cmp
fidivl
inc
fcomps
mov
cmc
das
mov
enter
add
jb
insl
inc
ret
ss
ret
inc
sbb
je
adcl
mov
or
xchg
andl
insl
sub
xchg
lds
sbb
xor
popf
out
dec
jnp
cs
mov
jno
jb
inc
push
vpextrw
jno
jo
jo
cltd
lahf
loopne
cli
lret
cwtl
lds
in
fdivrl
sbb
push
push
push
inc
cmpsb
push
or
dec
push
push
daa
jno
loop
leave
addb
aam
fsubs
push
orl
jp
adc
mov
jmp
mov
lock
pop
xor
pushf
mov
dec
std
jmp
pop
test
inc
rcpps
mov
or
push
cmp
imul
scas
pop
roll
jb
adc
mov
repz
push
push
dec
add
adc
and
adc
jb
dec
mov
adc
es
xchg
push
movq
adc
inc
xchg
mov
push
xchg
mov
shrb
dec
lock
mov
inc
jl
repz
mov
and
xchg
xor
hlt
add
inc
incb
mov
lahf
sbb
and
adc
and
mov
mov
push
in
cld
xor
clc
sbb
mov
push
je
xchg
sbb
in
mov
js
rol
xor
scas
sti
xchg
cmpsb
jle
jl
inc
sarl
je
pop
sbb
out
add
daa
xor
das
mov
imul
cld
fsubp
jmp
sahf
pushf
push
mov
inc
mov
sbb
mov
or
or
jmp
test
push
sbb
mov
neg
mov
or
out
repz
fbld
xor
movsl
add
das
jg
or
cmp
insl
loopne
cmp
imul
mov
push
rolb
inc
call
lock
xchg
cmp
add
mov
pushf
adc
mov
into
adc
loopne
je
pushf
sahf
and
push
adc
push
addr16
test
xchg
sub
add
or
adc
mov
scas
rcr
push
sbb
test
mov
test
out
xchg
movsb
ljmp
outsl
mov
arpl
lea
jecxz
in
lcall
or
rcrb
stos
es
adc
rclb
popa
sub
mov
jns
jno
enter
xor
and
cwtl
out
mov
inc
push
cmp
or
cmp
pushf
ret
pop
mov
inc
and
lods
add
pop
sbb
lret
jmp
xchg
rol
pop
in
xchg
mov
dec
mov
adc
ret
lea
movsb
sbb
mov
cmp
push
loop
shl
mov
mov
or
pop
in
int
hlt
sbb
adc
push
and
xor
aas
sub
xchg
ret
iret
sahf
xchg
rol
sarl
mov
cmpb
mov
pushf
lock
mov
jg
enter
push
out
mov
pop
mov
mov
cwtl
in
int
mov
mov
mov
daa
fstps
mov
xor
xchg
aas
and
aaa
loop
xchg
mov
fistl
dec
sub
push
jne
test
pop
sbb
daa
je
adc
jbe
mov
outsb
nop
addr16
sti
pop
stos
mov
and
add
sbb
aam
lcall
mov
mov
lods
mov
xor
push
sti
call
pop
xlat
fistl
pop
sub
dec
repz
out
fisubrl
sub
scas
add
or
inc
out
das
int
pop
cmp
shlb
fwait
rolb
push
push
xchg
rclb
loopne
push
inc
mov
out
scas
call
jl
int
jge
cwtl
mov
or
addl
cld
cmp
adc
cmc
ljmp
pop
dec
push
aaa
mov
sahf
mov
inc
cwtl
lea
in
imul
js
jbe
sbb
dec
pop
jl
aad
adc
scas
xchg
xchg
pop
stc
aad
dec
int3
rolb
jg
data16
sub
incl
pushf
xchg
out
loope
int3
jbe
fcoml
addr16
adc
mov
jge
cmp
inc
adc
jl
and
xchg
je
stos
scas
imul
mov
cmpsb
pop
mov
inc
js
sbb
aam
add
shlb
stc
adc
cmpsl
xchg
sbb
int
or
add
cmp
xchg
or
int
andl
xchg
outsl
mov
jg
jmp
test
popf
or
xor
cli
mov
sbb
or
inc
mov
in
add
lds
aaa
jge
dec
push
or
fbstp
inc
ror
pushf
or
cli
cld
rcrl
in
and
xor
sahf
and
clc
xor
mov
xchg
fnstcw
lahf
int3
sbb
xchg
sub
je
jbe
aaa
push
inc
add
call
in
ds
leave
push
pop
sbb
aaa
lds
popf
jmp
sub
jmp
call
fldenv
mov
jg
pop
jmp
add
shlb
xor
inc
sub
aaa
cld
mov
cmp
mov
push
aam
xchg
es
xchg
bound
mov
xlat
outsb
fcomp
cld
pop
aaa
sbbb
mov
jno
add
insl
pop
fwait
mov
mov
mov
in
enter
inc
ss
imul
pop
cmp
pop
out
mov
mov
sub
adc
jmp
inc
repnz
jmp
das
sbb
add
pop
dec
leave
push
cmp
xlat
adc
mov
test
cwtl
xchg
push
popf
fwait
push
cmp
inc
push
iret
mov
and
xchg
bound
jns
push
div
leave
cmp
or
jb
inc
lahf
mov
pop
push
mov
mov
stos
xchg
clc
scas
fwait
lahf
lret
fcoml
push
popf
ds
ja
mov
dec
sbb
hlt
es
fdiv
in
pop
push
add
adc
cltd
dec
add
mov
adc
adc
enter
cltd
mov
loopne
jo
push
cltd
negb
xchg
data16
push
in
mov
lcall
lods
mov
fneni(8087
or
xchg
xorl
adc
xlat
inc
pop
inc
pop
push
adc
pop
add
jb
in
fsubrl
enter
sbb
stc
inc
testb
push
pop
test
xor
inc
add
sub
mov
mov
xor
insb
jns
dec
pop
xor
or
jns
jmp
rcrl
popf
jle
jno
sub
out
mov
cmpsl
and
pusha
cmp
pop
in
arpl
hlt
adc
jo
rcl
and
xchg
sub
xchg
mov
fcmovnu
incb
lret
in
fisttpll
inc
out
mul
mov
sub
mov
ficoml
lahf
xchg
mov
or
and
shlb
gs
movsb
lods
adc
xor
inc
leave
jecxz
das
jb
cmp
xor
push
roll
stc
dec
pop
cltd
xchg
mov
jae
sub
repz
clc
cs
push
inc
jae
pop
xor
int3
std
mov
dec
adc
push
test
sbb
std
mov
fisubl
rorl
cld
add
pop
dec
sbb
std
jmp
cmpsb
es
adc
aaa
scas
jp
fisubrs
xor
inc
sub
and
mov
and
jns
xor
test
or
incb
adc
outsl
fwait
jecxz
pusha
mov
sbb
fsubrl
imul
addr16
xor
xor
xchg
jns
loope
cld
lcall
out
or
pop
jae
jae
sbb
inc
xchg
loop
jns
sub
cmp
add
leave
fwait
outsb
inc
stc
mov
and
cwtl
push
in
mov
pop
lret
jbe
dec
xchg
inc
dec
pop
push
dec
xor
cmpsb
shr
scas
call
or
stc
jo
push
and
in
dec
inc
cmpsl
cmp
adcb
mov
sub
ljmp
pop
leave
cmp
stos
mov
mov
pop
stc
repnz
or
pop
ss
nop
dec
pop
sti
add
jo
aam
pop
movsb
lods
or
mov
icebp
mov
dec
push
and
xor
xor
cmp
mov
mov
xchg
hlt
and
fcmovnbe
jae
clc
inc
inc
ds
popf
jnp
cli
ret
push
mov
xlat
les
lahf
enter
sbb
les
mov
imul
std
in
inc
nop
mov
jge
and
sahf
xchg
cmp
sbb
adc
jb
cmp
mov
sub
es
ljmp
lret
mov
pop
stos
dec
psubw
in
adc
ret
push
in
movb
rclb
rcll
les
fcomi
insl
mov
fisttps
mov
xor
dec
mov
icebp
movsl
mov
mov
and
inc
out
gs
out
mov
adc
ds
xor
and
push
jnp
testl
push
pushf
pop
jmp
js
push
loopne
sarb
cmp
dec
lcall
in
xchg
lods
pop
cmc
stc
clc
nop
add
cmp
inc
mov
arpl
jecxz
out
cli
adc
sbb
xor
loopne
iret
cld
std
out
mov
pop
and
out
and
in
add
xchg
lea
call
push
out
das
xchg
mov
inc
pop
xchg
mov
mov
add
or
adc
or
dec
popf
cmp
add
fisubl
scas
test
iretw
mov
dec
xor
or
daa
mov
jns
adc
push
outsl
test
ret
inc
mov
push
push
pusha
sub
aaa
roll
pushf
sub
lret
push
jecxz
or
aas
sbb
fsubs
mov
repz
jne
push
scas
sti
loopne
loope
mov
cmp
xchg
jbe
jo
js
jp
pop
cmp
dec
test
xor
repnz
inc
mov
cltd
jnp
pop
or
imul
out
mov
dec
push
mov
mov
ss
int
xchg
push
out
sub
inc
push
mov
xor
mov
daa
xchg
xor
sbbl
fimull
in
fisubs
add
xchg
insb
pop
lods
insb
push
adc
dec
inc
or
jle
xchg
lods
aam
inc
inc
mov
ret
push
pop
xor
das
ror
jle
pop
or
fsubrl
sbb
scas
jg
push
dec
data16
icebp
loopne
add
xorb
mov
es
or
mov
mov
or
sbb
mov
mov
jnp
rcr
or
sti
pop
mov
push
int3
mov
repz
dec
enter
inc
or
xor
mov
aam
loop
in
and
out
add
mov
je
and
ja
add
jo
push
push
push
clc
inc
inc
jp
es
xor
stos
scas
and
or
inc
pop
dec
imul
enter
inc
mov
pop
scas
pop
pusha
out
movl
adc
out
shll
xchg
sbb
adc
movl
lahf
sub
inc
mov
loop
js
inc
rcll
sarl
push
in
push
mov
push
jp
inc
and
and
push
lret
cwtl
enter
mov
xlat
loopne
or
mov
or
jg
iret
std
sar
cld
jmp
add
outsl
xlat
cltd
inc
sub
cmp
mov
mov
filds
push
add
jmp
out
cmp
mov
clc
jp
xchg
ret
fs
xchg
pop
xchg
adc
rcrl
outsl
xchg
stos
loope
out
mov
xor
in
mov
adc
xor
mov
add
sub
jns,pn
mov
adc
test
repnz
jo
fs
pop
or
rcr
lea
xor
jne
cmp
clc
int3
sub
stos
int
repnz
push
pop
adcl
fmuls
dec
imul
data16
iret
add
js
data16
jp
pop
sbb
in
mov
ja
sbb
test
fisubrs
aas
jb
popf
push
add
lock
xchg
adc
rolb
add
or
mov
add
or
push
push
arpl
test
adc
inc
lods
jle
ffreep
xchg
jno
cmp
in
xor
iret
adc
xchg
repz
lds
or
test
mov
test
sbb
adc
fs
pop
lock
jne
dec
pop
push
stc
mov
loopne
dec
scas
test
test
push
dec
pop
sub
adc
in
lret
cs
dec
ret
ja
lret
cmp
lods
incb
push
mov
and
push
dec
push
movsl
rorb
xchg
push
push
mov
lret
jnp
jb
mov
and
mov
mov
stos
push
dec
gs
jo
js
jecxz
sbb
arpl
adc
sub
mov
jb
je
test
jne
jae
subps
add
adc
cmpsl
cmc
sub
std
std
dec
push
imul
pop
dec
xor
mov
std
hlt
adcl
stos
outsl
inc
repz
cld
mov
jg
test
pop
rorl
ja
push
lsl
mov
and
insl
lret
and
mov
movsb
test
sub
xorb
flds
into
das
push
mov
pusha
es
ds
jnp
xlat
aad
inc
and
scas
ret
cmp
outsl
into
xchg
adc
fnstenv
inc
ljmp
fucom
mov
lock
push
xor
cwtl
pop
dec
inc
ljmp
mov
pop
adc
and
jg
and
xchg
inc
outsb
test
adc
mov
xor
popa
shl
js
mov
arpl
or
cmc
mov
test
or
inc
inc
sub
add
push
mov
add
inc
hlt
fidivrs
loopne
mov
xchg
shll
int3
mov
hlt
imul
mov
call
push
ret
cmpsl
mov
and
out
and
mov
and
sub
push
dec
push
cmp
adc
mov
out
test
xor
xor
lret
lds
call
flds
nopl
xor
mov
mov
lcall
xchg
cltd
mov
insl
pop
inc
xchg
aas
outsb
out
cltd
fcmovnu
cld
cmpsb
lods
push
add
daa
mov
dec
push
imul
mov
in
aas
cmp
scas
sti
xchg
int3
cmpsl
jo
fidivrl
mov
mov
bsf
lret
cmp
aam
das
pop
adc
cltd
pop
cmc
negb
jo
ds
sub
dec
mov
xor
hlt
and
addr16
and
xchg
gs
adc
push
or
cmp
data16
jo
das
sbb
lds
les
aam
xlat
sbb
inc
pop
sahf
mov
cmp
emms
sub
pop
push
stos
push
jae
adc
ss
mov
add
int3
adc
xchg
lret
mov
aad
pop
mov
outsl
and
fneni(8087
mov
xor
xlat
and
mov
js
jge
cmp
gs
in
insb
adc
mov
cmp
std
jle
mov
dec
scas
lret
pop
out
ret
in
push
mov
push
push
pop
lock
cmp
pop
insl
test
into
sarb
leave
popa
lock
repz
pushf
cli
frstor
inc
mov
mov
cmc
push
adc
aad
icebp
push
mov
dec
xor
pushf
and
sub
sar
cmpsb
add
mov
ja
popa
dec
mov
out
out
cmp
dec
cmp
xchg
push
fdivrs
or
pop
test
outsb
jnp
inc
sub
push
pop
lret
adc
rsm
push
repz
scas
aad
stos
mov
mov
jmp
shrb
inc
inc
pushf
jns
add
lret
lods
icebp
roll
pop
mov
inc
test
popf
mov
test
sahf
scas
pop
mov
mov
out
mov
roll
imul
mov
xchg
jno
insb
mov
or
fldenv
jne
and
dec
scas
sub
mov
mov
dec
movsb
dec
inc
push
das
clc
repz
jnp
mov
jbe
sbb
test
jecxz
sub
ds
pop
push
jle
repz
jmp
test
mov
push
xor
imul
dec
sbb
inc
pop
icebp
sub
cltd
mov
sub
dec
xchg
xchg
sbb
stos
cmpsl
xchg
jbe
mov
fwait
xor
dec
ficompl
xor
pop
push
insl
insl
bound
mov
sub
and
pusha
out
xchg
pop
mov
pop
add
loope
out
add
into
pop
xor
and
xchg
lea
cmpsl
addb
inc
lea
xor
shrl
imul
shlb
and
and
loope
pop
aad
jecxz
fsubrs
xor
add
adc
and
adc
jae
in
and
sub
xor
or
stos
lcall
jl
cmpsb
sahf
pop
mov
repz
xchg
scas
cmp
xchg
dec
cmpsb
clc
in
inc
js
jge
sbb
mov
mov
mov
cli
cwtl
cli
cmp
mov
stos
outsb
mov
mov
es
add
dec
jae
imul
stos
push
fistpl
icebp
inc
cmpl
xchg
inc
fistps
in
ret
inc
jl
enter
out
imull
jns
pop
xchg
lods
push
inc
jns
addb
sti
insl
mov
imul
xchg
dec
jno
nop
addl
sahf
jae
vsubsd
and
mov
jl
mov
addr16
stos
in
push
lahf
cmpsb
fdivrl
jg
popa
imul
leave
fldenv
push
testb
adc
stos
xor
jl
jns
inc
aas
add
xchg
dec
sbb
cmc
pop
ljmp
or
inc
popa
cmc
pushl
dec
sbb
jb
pushf
scas
xchg
inc
rolb
stos
pop
mov
lret
jae
jg
dec
movsb
jmp
adc
notb
cmp
fisubl
gs
add
cmc
jns
xchg
push
add
mov
pushf
adc
int
adc
ret
ds
mov
insb
adc
negb
movsb
push
dec
ds
and
add
push
inc
insl
mov
add
in
outsb
stos
sbb
movsb
mov
cmpl
xor
outsl
fdivrs
xlat
xor
pop
es
xchg
sbbb
movsb
dec
and
arpl
add
inc
push
insb
xchg
repnz
cmp
hlt
sbb
sub
push
fwait
lea
loope
movsl
inc
aaa
ret
mov
and
jmp
insl
lea
cli
fdiv
loop
mov
and
fucomp
shlb
sub
and
mov
lret
int
fisttpl
push
fst
xchg
pop
cmpsl
push
add
ret
enter
cmpsb
aaa
mov
xlat
xor
jo
xor
cmpsb
fbld
push
push
and
sbb
inc
mov
in
sbb
into
jb
mov
imul
cmp
fmul
and
cmp
fisttps
es
dec
test
test
push
mov
fwait
sub
sbb
loop
dec
stc
ss
or
sbb
pop
cmp
jge
xor
in
xor
repz
adc
dec
mov
cmpsl
xorb
or
sub
lock
xor
std
bound
cmc
mov
movsl
push
stos
sti
inc
push
xchg
sbb
cld
shll
sbb
cmp
loope
mov
push
mov
add
cmpsb
pop
sub
call
xor
xchg
jae
clc
mov
cltd
push
sub
or
jmp
jecxz
cmp
lret
sub
ljmp
or
dec
push
repnz
ss
sbb
lret
insb
jmp
pushf
jecxz
test
hlt
sub
shl
ficoms
test
out
push
xor
push
dec
fldz
adc
fcmovnu
aas
repnz
mov
movsb
test
cltd
mov
and
xor
mov
adcb
jno
add
jae
xchg
lds
inc
sbb
xchg
insb
or
out
nop
jp
mov
adc
popa
push
and
addr16
nop
mov
bnd
pop
inc
push
sbb
add
test
iret
je
in
lods
enter
mov
pop
lds
iret
add
inc
test
fs
or
lcall
dec
mov
xlat
cwtl
cs
fldt
jo
add
xor
icebp
inc
xchg
and
cmc
js,pn
and
adc
dec
sbb
fcom
imul
adc
js
add
jne
cmp
ss
pop
push
jl
inc
std
cmpsb
cmp
fwait
pop
sub
xor
es
or
addr16
cli
inc
add
cmp
clc
insb
push
jne
and
in
push
lret
bnd
fnstenv
sub
xchg
outsb
das
xor
outsb
aam
sti
jecxz
out
xchg
cmp
or
insb
in
dec
sbb
je
gs
rolb
adc
push
and
jnp
cli
or
out
and
cmp
pop
push
scas
popa
pop
jb
shlb
dec
cmovs
cmpl
outsb
jbe
pop
loopne
fisubs
and
mov
clc
in
out
mov
iret
mov
pop
scas
adc
fdivrl
sbb
adc
add
add
xor
ret
sub
add
or
leave
inc
data16
lret
cmpsl
pop
jbe
pop
dec
repz
jb
cmp
popa
sub
jbe
xchg
iret
add
pop
jae
xor
xchg
insb
jbe
xor
and
push
ja
pop
outsl
fidivs
jns
mov
ds
add
js
sub
fildll
clc
mov
pop
cmc
jne
repnz
jecxz
jo
or
outsl
pop
mov
dec
pop
roll
repnz
js
dec
lcall
fistpl
jbe
pop
lock
push
sbb
add
orl
or
repz
cmpsb
mov
cwtl
stc
push
loope
arpl
aaa
jge
sbb
mov
imul
fisubrl
adc
xchg
inc
fwait
scas
and
out
mov
lods
and
data16
push
lahf
and
xchg
scas
push
xor
sbb
fs
push
push
lock
popf
push
popa
jae
scas
dec
insl
sbb
cmc
fwait
shrb
mov
cmpsb
pop
push
inc
xacquire
aaa
iret
in
mov
pop
mov
cmp
orb
and
add
cmpl
loop
push
imul
hlt
xor
xlat
xor
filds
push
lcall
pop
xchg
data16
lcall
push
fisubs
sbb
push
inc
jbe
dec
mov
cmp
adc
mov
dec
out
sbb
jns
lods
cmp
adc
jbe
mov
bound
mov
mov
lods
sbb
mov
cmp
stos
sbb
xor
mov
sbb
arpl
test
sbb
xchg
push
pushf
addb
insb
in
push
jnp
pop
fs
imul
mov
xor
jge
js
jae
dec
stos
sbb
loope
ret
adc
inc
mov
push
pushf
cmp
push
and
cs
adc
sahf
lret
xchg
mov
dec
cmp
push
cmp
or
push
loope
icebp
popf
mov
jns
test
movsl
mov
repnz
pop
pop
das
mov
stos
loope
mov
cmpsl
int
and
imul
mov
add
negl
stos
and
call
fmull
das
data16
gs
leave
fdivr
mov
dec
add
test
daa
add
stos
repnz
jg
repz
xchg
repnz
cmp
add
mov
je
clts
add
add
ja
test
jmp
or
pop
xchg
cmpsb
and
push
repz
aas
in
and
cld
addl
inc
nop
out
and
cmc
and
nop
stos
out
mov
and
loopne
lss
enter
shll
rcll
mov
sub
inc
sbb
leave
stc
les
xchg
inc
jg
stos
jns
js
sub
rclb
xor
jne
dec
jp
fsub
int3
xchg
mov
inc
ret
mov
inc
mov
inc
shlb
jno
daa
xor
push
mov
mov
jp
int3
lods
rcll
jne
push
sbb
subl
mov
rcrl
hlt
fwait
xchg
push
pop
aas
jns
pop
pslld
std
mov
lret
and
ret
fs
adc
xlat
test
mov
xchg
out
pop
repz
inc
adc
sub
inc
push
in
repnz
jae
mov
iret
push
andb
add
mov
push
pop
sarl
hlt
arpl
ficoml
adc
pop
and
int
sarb
fs
dec
imul
icebp
mov
out
pop
mov
iret
push
adc
sbb
xor
scas
aaa
cmp
pop
xchg
jno
adc
test
push
bound
xchg
inc
mov
or
mov
adc
xor
fwait
push
push
fwait
ljmp
inc
jle
jno
lods
out
es
adc
daa
sbb
bound
dec
loope
das
insb
pop
adcb
sbb
push
std
stc
xor
out
mov
sub
xchg
jmp
jmp
loope
hlt
leave
mov
xchg
sub
jns
dec
clc
sub
ljmp
insb
jge
mov
pop
push
into
movsb
aaa
xchg
lret
sbb
dec
outsb
bound
xlat
sbb
jo
jmp
aad
xor
out
mov
jle
popf
lea
sti
fistl
cmp
iret
outsb
push
pop
dec
jae
stos
dec
cmp
mov
mov
sub
fninit
or
adc
push
mov
jp
movsl
adc
pop
xlat
pop
xchg
es
xchg
sub
sbb
add
pop
xlat
aad
bound
rcl
mov
adc
pop
xchg
in
push
insb
or
iret
pusha
mov
jle
cmp
in
stos
outsb
dec
mov
push
sub
jbe
and
and
push
imul
pop
xor
jecxz
mov
mov
dec
pop
cmp
imul
xor
xchg
or
adc
movlps
sbb
jmp
push
data16
mull
cmp
add
or
jmp
gs
jb
sahf
hlt
stc
imul
push
xor
daa
adc
jmp
xchg
add
test
mov
negb
pop
loope
pop
inc
sti
inc
hlt
loope
imul
lret
dec
test
xor
dec
lcall
inc
mov
mov
dec
xor
rcrl
mov
inc
lret
daa
test
add
leave
cmp
out
stc
xchg
inc
mov
cmp
push
enter
dec
in
in
and
push
mov
sub
xchg
cmp
dec
repnz
pop
cltd
push
xchg
loope
movsb
add
jo
or
inc
mov
cmp
adc
adc
jbe
fwait
lret
test
fisubl
out
mov
gs
cmp
xchg
leave
mov
push
xchg
inc
mov
daa
adc
shlb
in
out
fucomp
outsb
cmp
push
scas
lahf
jecxz
addl
and
in
icebp
fstps
pusha
lds
push
or
xor
loop
adc
and
pop
mov
jno
dec
pop
aaa
xor
fnstsw
pop
mov
mov
xchg
sbb
insl
jmp
in
push
roll
mov
mov
ret
sub
dec
repz
push
or
shll
mov
nop
enter
cmc
mov
fcompl
loop
jnp
int3
mov
xchg
rcrl
data16
jnp
das
push
xor
mov
out
aas
out
scas
push
push
cli
pop
int
mov
repnz
stos
ds
pushf
xchg
movsl
mov
dec
repz
fdivrl
adc
add
mov
dec
call
clc
js
mov
adc
dec
out
sbb
ss
mov
data16
das
jge
gs
imul
fucomp
sti
adc
es
and
add
repz
dec
movsb
movsb
les
in
pop
xchg
inc
testb
nop
lcall
cwtl
andl
mov
adc
xor
fdivrs
imul
mov
xor
call
fistl
bound
mov
mov
and
cltd
rol
pop
icebp
cmpsl
inc
push
mov
and
ret
hlt
dec
sub
lret
sbb
aaa
fisubl
push
sbb
sti
or
incb
fsts
and
icebp
insb
orps
jp
fistl
scas
inc
sbb
mov
and
aas
pushf
rorb
sub
inc
cmp
fadds
sahf
lret
in
pop
lods
inc
xor
mov
and
cwtl
jne
mov
ss
orb
ret
int3
adc
xchg
imul
or
add
cmpsl
cmp
dec
fidivl
cld
or
loopne
sbb
jecxz
idiv
movntq
xchg
mov
lret
sbb
mov
aad
fnstsw
fidivrl
xchg
or
lcall
sub
idivl
mov
push
mov
and
insl
call
inc
sbb
fstpl
pop
aad
sub
push
shrb
fisubs
dec
jge
ja
push
push
push
arpl
adc
call
push
subl
mov
shll
lahf
add
or
and
mov
dec
push
mov
mov
mov
mov
inc
mov
mov
inc
pop
mov
fstpl
daa
mov
xchg
cmc
and
push
int
adc
push
push
xor
push
inc
lret
or
cmc
fildll
inc
sti
cmp
xchg
stos
addr16
inc
mov
in
mov
rcll
fcomps
js
loope
aam
push
test
insl
pop
ja
fimuls
ret
gs
divb
es
adc
stc
movsb
in
nop
mov
xlat
imul
sbbl
dec
daa
xchg
mov
add
fiaddl
jp
adc
or
repnz
add
out
or
sahf
add
sbb
mov
sbb
sbb
pop
call
shrb
sahf
sahf
loop
xchg
mov
sarb
out
or
inc
imul
fstps
loope
out
adc
fcoms
push
lret
push
cwtl
push
pop
xchg
pop
mov
xchg
adc
mov
ds
data16
in
nop
xchg
jae
or
add
imul
fcoml
pop
out
cli
jp
pop
out
hlt
adcb
pop
cs
pop
mov
pop
cltd
daa
test
je
xchg
lret
clc
out
dec
test
and
cld
xor
adc
xlat
mov
js
dec
std
and
or
int
mov
cmp
adc
mov
jl
sub
lret
cltd
js
arpl
xchg
inc
push
mov
icebp
lock
jb
fld
pop
icebp
xor
mov
adc
mov
cmp
xchg
push
std
push
pop
jb
push
dec
dec
dec
std
inc
loopne
icebp
dec
ds
lea
sbb
mov
jne
pop
cld
sbb
jne
insl
xor
xchg
mov
and
dec
push
and
and
mov
pop
jno
mov
xor
mov
sahf
lret
mov
es
mov
jmp
subl
dec
fisubl
pusha
mov
mov
jp
jge
mov
cld
int
or
add
mov
adc
js
add
jecxz
inc
fnsave
xchg
xor
inc
jle
xchg
cmp
mov
push
cmp
pop
int
mov
je
adcb
test
in
jne
jno
fwait
insb
adc
cmc
xlat
mov
test
cli
ds
decb
dec
xchg
sub
ja
jbe
cmp
ljmp
mov
adc
in
dec
int3
add
pop
xor
gs
pop
add
xchg
xchg
mov
push
xchg
cli
clc
mov
aam
mov
notb
fldcw
jbe
push
cmp
aad
and
aas
lock
jecxz
push
push
int
or
aas
inc
pop
xor
adc
sub
stos
mov
js
fisubl
mov
push
jbe
int3
inc
daa
lret
or
inc
mov
pusha
mov
mov
mov
lock
js
mov
cld
ficomps
loope
and
xchg
jb
adc
orb
imul
mov
pop
clc
sbb
mov
arpl
daa
imull
xchg
faddl
pop
cwtl
xor
jecxz
fildll
jns
ret
cmp
movsl
sub
and
add
fwait
cltd
jle
mov
ds
pop
adc
out
out
fcmovbe
bound
add
mov
inc
sbb
test
add
in
sub
add
inc
xchg
push
xor
test
andl
dec
aaa
xor
ljmp
jne
mov
es
movsb
insb
sbb
jnp
stos
idivb
cmp
pop
test
mov
es
lods
mov
loopne
repz
push
mov
aam
outsb
insb
cmp
loope
xchg
push
insl
and
add
cmp
mov
xchg
lds
sbb
sub
cmc
dec
push
pop
cld
adc
lock
js
sub
add
lea
enter
movb
push
and
mov
sub
push
dec
jle
inc
sbb
mov
sti
popf
push
cmc
add
lea
test
dec
jge
je
cmp
fdivrs
sub
rcrl
dec
pop
sbb
sub
call
cmc
sti
ljmp
sub
cltd
jmp
ljmp
shlb
dec
sub
xchg
scas
and
sbb
push
mov
xchg
lods
sub
push
xchg
adc
or
jecxz
push
addr16
inc
jnp
or
mov
out
js
inc
loopne
fildl
outsb
and
push
mov
mov
arpl
int
filds
mov
mov
sarl
sbb
out
cs
bound
xor
es
in
ss
je
mov
pop
lcall
clc
insb
aam
adc
pop
call
icebp
jbe
sbb
fcomip
rcll
mov
lods
mov
lret
cmp
inc
mov
xchg
jns
into
sub
push
inc
mov
pushf
cmp
add
xchg
inc
int
xlat
mov
fs
pop
das
aad
inc
add
cmp
mov
pop
lcall
push
jg
mov
push
loop
push
push
mov
inc
xor
adc
inc
push
stc
ret
hlt
push
mov
ss
mov
mov
pusha
iret
dec
repz
lods
ret
sbb
into
lods
popa
sub
call
mov
sub
mov
inc
push
flds
cld
aam
in
cmp
mov
inc
add
cmpsl
fnsave
jbe
mov
jp
adcl
xchg
stos
leave
inc
dec
shl
lcall
fcmovnu
lock
xor
enter
sbb
sub
out
cmpl
fdivrs
and
push
out
ds
lahf
pop
jb
pop
sahf
mov
dec
push
add
insl
gs
sub
push
inc
inc
mov
stc
popf
or
xor
jmp
push
scas
lods
xchg
or
and
mov
jae
jmp
adc
jg
or
jp
cmpsl
mov
call
sarb
aam
out
push
mov
inc
and
mov
dec
lea
arpl
sbbl
loopne
cmc
adc
mov
dec
add
not
dec
pop
mov
popf
jl
dec
adc
mov
add
jno
lods
xchg
cmp
inc
jo
in
pop
int
mov
out
mov
cmp
stc
push
fisubs
in
mov
dec
lock
push
pop
sub
pop
popa
out
inc
pop
cmp
pop
jle
dec
inc
shl
adcb
cmpsb
cmp
pop
lea
ja
es
inc
in
andl
leave
dec
cmp
lahf
mov
jnp
xchg
xor
lahf
mov
lock
mov
adc
call
pop
sub
add
pop
lds
inc
ret
mov
jae
cli
movl
mov
ret
push
jp
in
lods
insb
and
and
or
inc
push
sbbl
add
and
xor
sub
subb
fnstsw
jbe
loope
fstps
pop
hlt
nop
outsb
mov
outsb
lret
fmull
and
je
stos
mov
cmp
or
lcall
jmp
jno
or
adc
lret
lret
repz
js
cmp
pop
outsl
xor
mov
push
xchg
fadds
inc
mov
dec
jne
pop
addl
cmp
int
fisubrl
in
popa
cmp
pop
mov
dec
orb
pop
dec
dec
imul
push
pop
xchg
std
outsb
aaa
dec
jecxz
inc
pop
and
jl
pop
sbb
je
decl
fs
nop
stos
sbb
f2xm1
sbb
loopne
xor
imul
ret
lret
cld
cwtl
loopne
into
push
push
icebp
xor
mov
ja
dec
jno
adc
ja
aam
movsb
xchg
mov
cmc
xchg
sub
loopne
lret
in
daa
lods
movsb
sbb
mov
mov
movsl
pop
push
icebp
insl
xor
jnp
sbb
lret
repnz
into
popf
jge
sbb
adc
mov
test
pop
fstps
xchg
ficompl
xchg
mov
int3
sub
jge
jl
pusha
mov
decb
push
daa
add
push
sub
fistpll
mov
in
push
xor
hlt
add
cli
pop
cmp
push
fcoms
aas
aad
sbb
xchg
xor
and
inc
pop
xchg
popa
mov
cmp
mov
mul
jbe
and
push
fndisi(8087
in
imul
mov
or
push
fildll
pop
scas
addr16
ds
or
popa
int
add
leave
push
add
pop
sub
bound
loope
pop
shrl
aas
xchg
cltd
adc
into
popa
cmp
xchg
xor
mov
call
jne
xchg
loope
mov
cmp
scas
jecxz
loopne
sbb
adc
ficoms
jge
jno
sbb
mov
scas
pop
sbbb
data16
out
xor
inc
in
mov
hlt
xor
out
cltd
imul
mov
mov
xchg
mov
enter
jmp
lds
jnp
add
ret
inc
imul
loope
mov
and
cmp
in
test
pop
mov
test
outsl
call
sbb
mov
mov
movsl
push
mov
cmp
adc
mov
jnp
push
lcall
shrl
mov
push
mov
inc
dec
hlt
cmp
pop
lods
mov
clc
arpl
adc
ret
push
sti
cli
xchg
imul
dec
mov
xchg
repnz
dec
mov
rolb
xchg
mov
cmpsl
push
mov
xor
sbb
in
add
xchg
sub
mov
in
inc
cmp
pop
es
jmp
inc
cwtl
cmp
out
leave
js
mov
adc
xchg
icebp
lock
nop
jns
loopne
jmp
push
add
or
mov
lods
sbb
test
push
mov
push
jmp
jl
out
stos
mov
and
cmp
jns
fcmovu
xchg
cmp
cmpsl
rcll
in
test
fnsave
xchg
aas
pop
sbb
sbb
pop
loopne
nop
cmp
mov
imul
es
xor
xchg
mov
nop
xchg
sbb
popa
push
ret
mov
lret
mov
lcall
into
xchg
mov
jl
push
nop
cwtl
mov
insb
sti
outsb
pop
and
push
pop
sti
dec
mull
fstpl
cmp
pushf
out
mov
filds
in
orl
push
cmp
mov
mov
outsl
nop
jns
ret
test
nop
aas
ljmp
sbb
add
inc
xchg
int3
movsb
pop
adc
sbb
mov
mov
movsb
pop
fucomp
push
dec
outsb
frstor
out
insb
push
das
mov
xor
les
sti
sti
pop
xor
mov
push
in
out
xchg
dec
fwait
pop
xchg
test
mov
inc
je
cs
fisubs
fcoms
dec
cmp
in
xchg
jns
and
mov
jecxz
je
shl
xor
pop
mov
in
out
adc
inc
add
and
into
movsl
scas
call
adcl
clc
xor
xor
push
out
dec
sub
fs
adc
pop
cmc
xchg
insb
and
arpl
inc
sbb
stos
inc
add
jmp
scas
inc
repz
lcall
popf
mov
pop
lock
icebp
mov
cmp
sbb
dec
sub
mov
dec
pop
out
mov
mov
mov
test
or
dec
and
mov
push
mov
inc
cmp
jecxz
add
fidivrs
subb
lret
pop
push
outsl
movsl
out
push
out
hlt
sti
fdiv
data16
lods
scas
cmp
pop
dec
psubusb
rolb
push
jg
stos
pop
call
sahf
in
pop
pop
hlt
mov
mov
mov
sbb
cmp
scas
add
movsl
loopne
push
loope
push
pop
es
ja
insb
outsb
sarb
call
sub
mov
pop
pop
pop
ror
or
cwtl
aaa
mov
lahf
pop
cwtl
push
xchg
sub
pop
inc
enter
jge
pop
sub
jo
shrb
adcb
subb
sub
stos
mov
inc
cmp
lret
mov
cmp
push
addr16
movsb
jecxz
insb
sub
adc
and
push
and
movsl
mov
sbb
push
add
test
xchg
leave
das
mov
enter
or
jle
add
inc
xor
fbstp
sub
call
pop
sbb
mov
jb
les
adc
inc
push
cmc
adc
hlt
pop
insb
iret
mov
int
xor
movsb
pcmpgtb
pop
movsl
cld
jmp
cmp
pop
push
and
fsub
xlat
mov
mov
stos
test
cltd
mov
cmc
inc
sti
jmp
addb
push
mov
inc
adc
pop
fmul
pop
push
loopne
movsl
add
xchg
mov
xor
lret
mov
mov
in
daa
xlat
and
cmp
adc
xor
fwait
aas
test
sub
ja
loop
sbb
inc
fucomi
mov
xchg
das
leave
mov
mov
mov
and
cmp
out
popa
pop
insl
pop
pop
outsb
in
push
lret
mov
sbb
fbld
or
and
shl
aad
xchg
inc
inc
push
int
xchg
int3
inc
lds
aad
mov
mov
mov
add
jne
mov
sti
adc
push
inc
idivb
ljmp
add
push
jne
inc
dec
jo
xor
push
rclb
gs
in
adc
shl
insb
xchg
fldenv
aaa
push
add
in
mov
dec
pop
jl
xchg
jnp
adc
mov
xchg
je
and
mov
xchg
mov
data16
ja
cmc
lahf
or
inc
lcall
dec
lret
push
sub
inc
pusha
loopne
mov
dec
mov
push
stc
ficomps
ss
movsl
mov
clc
lret
test
adc
sub
jg
push
aad
push
or
pop
mov
cmp
test
xchg
sbb
cmp
cmc
inc
int
mov
jecxz
jle
int3
jae
pop
pop
push
push
push
jb
or
cmp
cltd
jns
nop
neg
mov
dec
push
mov
rolb
jg
jne
inc
adc
fidivs
adc
push
jp
jl
cmp
es
jae
out
pop
emms
xor
inc
gs
int3
mov
pop
cmp
xchg
adc
adc
pushf
mov
dec
jo
mov
or
xor
add
dec
int
shll
js
cli
in
add
cli
aam
and
pop
adc
xor
pusha
sbb
ljmp
cld
out
dec
dec
push
xchg
xor
dec
or
sub
add
movsb
dec
jne
lret
call
out
mov
push
pop
test
or
dec
or
or
fldl
js
cmp
mov
sbb
xchg
into
loop
in
dec
sub
pop
sub
dec
pusha
push
mov
dec
pop
jns
mov
cltd
jbe
and
dec
movl
pop
pop
in
std
loope
inc
jle
adc
leave
aad
ja
in
xchg
sbb
and
subl
imull
xchg
outsl
icebp
std
lds
sub
mov
mov
rep
cmpsb
pop
jbe
clc
dec
cs
inc
aad
mov
std
pushf
sub
das
inc
xor
fcmovbe
mov
or
cmpsb
and
aam
or
pop
leave
stos
fists
jmp
and
pop
cli
idivl
call
xchg
xor
push
stos
insb
cmc
jno
not
lahf
notl
jns
ss
mov
cltd
mov
and
gs
dec
add
daa
pushf
test
stos
std
sub
pop
add
jmp
push
incb
lds
mov
push
shlb
mov
mov
nop
pop
test
ds
xchg
ds
cwtl
aad
pop
pop
and
cmpsb
test
adc
pop
sub
or
push
cwtl
sbb
dec
popf
cmpsb
adc
dec
push
les
cmp
arpl
jne
and
push
pop
leave
mov
loopne
inc
pop
sub
pop
adc
push
rcr
pop
fcmovnb
or
mov
mov
jae
xchg
pop
ds
pop
icebp
setno
btr
cwtl
push
shl
fwait
xchg
pop
mov
subb
add
mov
stc
mov
inc
mov
je
jecxz
mov
aas
fdivl
ret
repnz
mov
inc
jbe
or
jb
mov
xchg
push
loope
cmp
push
inc
fists
shrb
ds
jecxz
addr16
jne
pop
lds
and
cli
test
jns
sbb
mov
lods
add
xor
xor
mov
mov
mov
in
daa
xchg
mov
sub
dec
mov
xor
outsb
sbb
cld
cmp
clc
sbb
cwtl
sbb
pushf
sbb
ljmp
das
lds
flds
pxor
ret
negb
cmp
jno
dec
push
gs
lock
cmp
xlat
push
xchg
add
les
xchg
dec
je
bound
xor
outsb
sahf
les
addr16
jmp
gs
inc
ret
cs
std
push
mov
mov
addb
mov
cmp
push
lret
insl
mov
jnp
sbb
add
push
es
out
ret
push
sbbl
or
scas
jb
add
add
ljmp
pop
mov
inc
fstps
mov
xchg
fcmovbe
push
cmp
mov
push
inc
and
xchg
lods
sbb
or
cmpb
mov
pop
imul
jne
lods
dec
sub
sarb
and
mov
nop
cmp
lret
pop
or
or
or
xor
dec
xchg
pop
sbb
call
mov
or
pusha
fstpt
fcoms
mov
lret
pop
cmp
mov
push
sub
jl
out
push
mov
ljmp
mov
xchg
push
in
ss
les
inc
insb
ret
push
fwait
pushf
fildl
aad
in
mov
in
or
ljmp
outsb
imul
repnz
cmpsl
inc
outsb
shl
addr16
imul
and
xor
fimull
iret
lock
in
insl
mov
sbb
pushf
sub
pushf
aaa
ja
popf
stc
inc
jecxz
mov
xchg
push
fldcw
stc
cmp
in
fdivl
sub
mov
ret
mov
adc
mov
faddl
push
testb
iret
pop
mov
movsl
jecxz
inc
call
js
lods
sbb
push
cli
add
ja
sub
inc
test
add
lds
xor
movsb
mov
dec
mov
jns
cmp
mov
xchg
jge
fcmovbe
xlat
popa
dec
push
cmc
pop
fwait
cltd
outsb
push
pop
fs
call
inc
dec
ffreep
repnz
pop
rolb
nop
mov
cmp
or
movsb
and
jne
test
imul
addr16
or
jnp
xor
je
mov
pop
popa
sub
movsl
cmpsl
add
movsb
inc
jge
pushf
push
call
mov
sub
xchg
or
xchg
test
std
jmp
inc
xor
outsb
fwait
pushf
or
xchg
xchg
jb
mov
popa
loop
aam
cmp
ss
xor
shll
pop
lock
sbb
adc
pop
mov
pop
mov
adc
or
mov
jns
sub
push
sbb
rcll
hlt
mov
adc
nop
pop
aad
rol
repnz
fidivrl
push
xchg
mov
pop
das
and
adc
push
jo
das
cmp
or
scas
push
test
jecxz
adc
mov
ds
out
enter
movsl
cmpb
inc
and
cmpsb
jnp
filds
inc
testb
sub
out
loope
call
add
push
lods
dec
inc
pop
cmpsb
push
jge
aaa
icebp
jle
in
subl
cmp
sub
jge
test
jnp
es
in
sub
xchg
jbe
arpl
imul
daa
add
cmp
jmp
shl
popa
imul
xchg
and
jg
in
jmp
dec
xchg
movsl
outsb
cmc
bound
je
sbb
rolb
add
jge
ljmp
shr
mull
jns
out
mov
mov
or
xor
jbe
add
pop
and
pop
movsb
and
dec
cmp
pop
test
pop
sub
subl
sbb
adc
add
fsub
push
jnp
fs
int3
jg
js
xor
ficoms
sbb
jmp
cwtl
fistpll
push
stos
mov
roll
loopnew
mov
mull
mov
sbb
bound
insl
dec
pop
xchg
mov
imul
inc
pop
into
das
adc
in
mov
push
rolb
or
sbb
sub
pop
js
sarb
xor
and
sar
mov
dec
rolb
sub
stos
or
push
push
mov
dec
ret
fistl
mov
cmp
imul
fwait
fwait
add
insb
or
mov
pop
or
ror
loopne
inc
in
jns
and
icebp
jnp
lcall
lods
mov
xchg
inc
jnp
add
fcoms
hlt
insl
incl
in
pop
sbb
cmpsl
mov
or
leave
pop
adc
int
mov
dec
insl
flds
sub
pop
push
or
xor
cmp
sarb
movsb
mov
mov
sub
sahf
pop
ret
ret
mov
imul
xor
lods
ja
cmp
xchg
dec
ja
testl
lcall
sbbl
xchg
add
sbb
jl
lcall
add
lret
mov
loopne
or
mov
out
xchg
pop
pop
out
popa
xor
xchg
mov
or
adc
inc
or
push
frndint
sbb
and
cmp
and
push
dec
cltd
lret
out
pop
dec
cs
jne
xchg
icebp
faddl
cwtl
call
rcl
mov
popf
ja
out
jo
jmp
push
xor
push
loope
lock
popf
in
sbb
or
mov
xchg
cmpb
adc
mov
test
sub
and
pushl
sbb
xchg
cmp
lret
stos
stos
cltd
aaa
fildl
xchg
cwtl
sub
das
es
xor
and
push
sbb
sti
jp
cli
add
pop
test
aad
out
fwait
out
insl
push
fisubrl
icebp
mov
loopne
xchg
data16
pcmpgtb
pop
push
insb
shrb
fsubs
pop
mov
jae
push
or
mov
in
dec
leave
addr16
int
pop
insb
mov
or
shr
xorl
mov
enter
mov
add
cmp
jnp
sarb
dec
adc
xchg
or
bound
movsb
push
jmp
outsb
in
cmp
rclb
mov
cmp
jnp,pn
cwtl
adc
dec
sahf
iret
in
cld
mov
das
add
mov
pusha
xorl
cli
div
xor
dec
aad
cmp
mov
es
xor
sbb
shll
push
or
and
cld
rcl
jl
jb
mov
or
gs
add
aad
cmp
cmpsb
xchg
mov
ljmp
push
inc
shll
cli
xchg
jne
jne
imul
mov
sahf
test
subl
mov
mov
loop
xchg
push
push
push
lcall
push
sbb
popl
gs
inc
pusha
mov
xchg
sbb
xchg
sarb
mov
les
fs
mov
push
cmp
push
xchg
push
mov
and
add
test
mov
xor
pop
xor
orl
and
fistpll
leave
sub
push
xor
fnsave
aaa
repnz
adc
daa
jbe
in
outsl
leave
mov
push
in
xchg
ljmp
xchg
and
in
pop
xchg
lods
lcall
xor
test
test
out
loopne
shlb
sti
sub
sub
lcall
inc
daa
add
arpl
sbb
sbb
fcoml
mov
out
and
roll
sub
push
cmp
scas
lahf
push
std
adc
ss
or
adc
sarb
or
pop
lcall
adc
mov
sub
insb
inc
and
mov
push
xchg
push
adc
jmp
shlb
mov
lock
in
sbb
mov
insb
sbb
push
addl
jno
jg
jnp
sbb
lods
cmc
ret
xor
add
jecxz
daa
lds
cld
push
adcb
add
xchg
mov
xor
out
adc
jge
sub
bound
int
push
arpl
mov
sbb
adc
aas
mov
test
add
xor
leave
fistl
add
xchg
loopne
out
pop
stc
jo
dec
mov
cmc
mov
xchg
mov
pop
mov
and
mov
push
aas
cmp
test
mov
mov
data16
jl
push
cmc
sub
test
movsl
cmp
mov
mov
pop
push
jo
push
cmp
xor
int
sbb
rcrl
imul
adc
ds
loope
movsl
or
add
fidivrl
stos
inc
repnz
in
pop
adc
push
ja
ds
push
stos
jp
adc
popa
adc
sti
inc
pop
test
repnz
jl
mov
mov
inc
jmp
fisttpl
and
xchg
ljmp
cmp
pop
out
add
sub
outsb
imul
decl
test
xor
leave
push
mov
aad
cltd
jo
add
fdivs
lret
mov
push
push
mov
push
push
cwtl
clc
and
jbe
jp
pop
out
and
fsubrs
inc
js
out
mov
je
cltd
mov
adc
gs
cmp
stos
scas
dec
ss
pop
jae
pushl
mov
movsl
jg
lcall
stc
cs
outsb
xchg
xor
xor
daa
cwtl
mov
loop
push
loop
push
insl
dec
inc
mov
mov
sub
mov
sbb
inc
mov
pop
dec
and
inc
test
mov
mov
iret
cmp
popf
enter
cwtl
and
insb
lods
cmp
divl
jge
pusha
and
scas
pusha
mov
mov
jbe
fcomps
js
dec
adc
mov
mov
mov
aas
inc
in
mov
inc
inc
ret
test
dec
loope
int
pop
pop
xlat
fdivr
and
cmp
cmp
ljmp
fcomip
or
push
fists
dec
or
push
in
mov
dec
xor
gs
xchg
aas
cmp
addr16
and
sar
into
add
adc
jns
cld
or
xchg
nop
push
idivb
inc
iret
test
and
sahf
int
sub
cltd
mov
xchg
add
jl
cli
xor
or
xchg
repz
gs
and
push
mov
jl
sahf
push
cmp
xchg
jne
sbb
and
roll
cmpl
ficomps
push
jae
mov
pop
push
or
ljmp
adc
pop
loope
cmp
fwait
push
stos
jmp
dec
ja
imul
int3
sub
popf
mov
test
test
dec
add
stos
mov
cmp
fs
push
adc
lahf
mov
pop
jb
fcoms
std
out
scas
repz
repnz
imul
add
aad
jo
sti
xchg
out
xchg
mov
ss
imul
adc
setbe
in
loop
mov
and
je
shll
push
test
push
inc
xchg
lock
ja
pop
mov
inc
fcomi
cmpsl
push
sub
std
jne
sbb
call
cltd
mov
mov
lods
repz
lods
fwait
xlat
pop
in
shll
pop
addr16
out
fwait
mov
hlt
or
popa
mov
pop
arpl
dec
es
cmc
fistpll
iret
mov
jmp
lods
hlt
xlat
inc
mov
js
pop
or
mov
inc
mull
popa
mov
int3
popa
push
pusha
sbb
fistpll
shlb
ds
shll
xchg
jle
cmc
cltd
jae
ret
andb
enter
push
and
add
stc
orw
push
dec
sahf
icebp
loopne
pop
sub
lods
or
xchg
insl
out
jo
pop
cli
push
mov
dec
xchg
dec
mov
cwtl
push
cmp
dec
mov
push
push
leave
push
sahf
int3
xlat
insl
xchg
pushf
icebp
cli
sarb
or
pushl
orps
sub
cmp
fsubrs
aaa
imul
ret
ja
and
jns
test
mov
popf
mov
fcoms
jns
dec
mov
popf
pop
sbb
stc
ret
mov
pop
fadds
and
add
push
mov
imul
ja
stos
xchg
jae
or
test
mov
loope
pushf
jb
fisubs
push
push
mov
test
cmp
xchg
pusha
jno
inc
xor
jmp
jmp
add
jg
int
jmp
push
add
cmp
fucomp
sti
fsubp
cltd
lret
movsl
inc
mov
cmp
push
into
imul
cmpb
addr16
out
or
jg
cli
pop
mov
aam
sbb
or
les
mov
inc
mov
test
xchg
mov
aas
dec
lahf
stos
mov
shrl
fnstenv
push
sub
popa
dec
sub
sub
movsl
stc
cwtl
xor
repz
push
decb
aas
lcall
or
shlb
loope
sub
pop
jne
add
test
sbb
inc
lret
inc
lea
out
push
push
shl
ljmp
pop
arpl
in
inc
movsb
dec
lcall
mov
movsb
sti
stos
push
pop
out
flds
mov
fisubs
cld
repz
lret
and
inc
mov
scas
jo
inc
fcmovne
pop
popa
lcall
mov
pop
xor
and
push
dec
leave
push
mov
or
mov
mov
pop
mov
ret
push
sub
loope
aaa
nop
scas
fnstsw
xchg
imul
dec
cmpsb
rclb
add
jns
sbb
push
out
cmpl
std
xchg
and
lea
xor
int3
sti
push
or
test
jmp
es
cwtl
dec
test
test
pop
sarl
push
iret
xchg
jne
sbb
ret
add
not
mov
xchg
das
mov
push
not
movsb
mov
in
jp
inc
dec
inc
mov
xor
data16
mul
ljmp
hlt
xor
fsubrl
sbb
sbb
loopne
xchg
movl
sbb
add
test
adc
jb
les
xchg
shlb
mov
daa
add
jne
pop
push
sub
movsl
sub
push
adc
push
sbb
stos
iret
loope
fbstp
pop
and
mov
fdivrl
repz
pop
icebp
mov
push
mov
sub
inc
add
push
mov
insb
in
ja
inc
leave
inc
ret
cmp
popa
xchg
jb
push
mov
scas
mov
sarl
jae
jg
ret
and
inc
iret
jge
bound
pop
popa
flds
fcmovbe
loop
adc
xor
mov
inc
lahf
insl
jb,pn
dec
cmp
lcall
jne
lods
rol
aam
push
dec
dec
jno
adc
adc
dec
pop
das
repnz
out
and
jbe
jecxz
add
push
and
mov
adc
cmp
push
popf
sahf
roll
sub
je
int3
pop
scas
jmp
or
aaa
daa
call
dec
jmp
stos
nop
dec
and
push
std
xchg
push
jge
jecxz
fwait
xchg
outsl
sbb
fbld
adc
dec
lock
pop
or
inc
dec
and
sub
rorb
mov
push
dec
hlt
push
shlb
xor
cmpsl
push
les
or
inc
ja
stc
xor
xchg
arpl
lret
dec
push
jb
pop
mov
pop
dec
stc
sar
inc
fstpl
pop
xchg
sbb
sbb
push
loopne
sbb
xor
fs
cmp
in
or
push
addr16
call
mov
mov
cwtl
or
mov
dec
sbb
mov
sub
pop
loopne
and
add
aad
rorl
inc
push
ss
mov
cmpsl
xor
mov
leave
test
lret
pop
divb
dec
rol
add
cltd
outsb
jmp
daa
ja
mov
das
imul
fst
cmp
dec
sti
sbb
call
pop
stos
popf
push
int
adc
lret
loope
sbb
fisubrs
adc
sub
mov
fists
mov
inc
popa
mov
out
and
inc
cmc
cmpl
fdivs
inc
push
adc
pushf
add
sbb
pop
cmpsl
movsl
cmp
xchg
dec
pop
sub
cmp
aam
insb
imul
and
xlat
mov
and
jmp
mov
xor
cmpsb
push
sbb
cld
mov
js
pushf
xchg
stos
and
sbb
mov
jmp
fcmovnu
loopne
mov
mov
cmp
cmpsb
or
adc
lds
andl
or
pop
leave
sahf
mov
mov
or
mov
xchg
pop
or
js
xlat
int
repnz
pop
es
add
and
sbb
xor
push
in
adc
mov
negb
push
xor
and
dec
out
rclb
rolb
mov
std
lahf
mov
into
das
aad
mov
ficompl
cmc
pop
push
les
lret
stos
sub
fiadds
sbb
push
les
cmp
jbe
mov
xor
mov
test
dec
xchg
sar
inc
or
call
dec
jmp
test
dec
or
movsb
sbb
pop
repz
std
jle
in
add
aas
xchg
fstl
cli
mov
stc
inc
xchg
shll
loope
inc
inc
mov
and
dec
xchg
aaa
ds
std
jns
xor
mov
popf
inc
out
fidivs
jne
test
xchg
rcr
test
dec
out
lock
and
pop
adc
sub
jbe
xchg
call
pop
dec
jmp
cmpsl
xor
dec
cli
dec
out
dec
mov
mov
popf
ljmp
pushf
mov
sbb
dec
pop
adc
jnp
enter
addr16
mov
cmp
rcrb
loop
sub
shlb
xor
ficoml
xor
inc
loope
aas
pop
mov
mov
jb
movsl
adc
mov
test
pop
xchg
jge
popf
inc
fs
js
push
inc
sub
cmp
cs
xlat
std
loope
xorb
lock
push
adc
jo
ss
pop
and
cmp
and
xor
jg
popa
sbb
add
sub
imul
dec
mov
xlat
add
inc
pop
inc
gs
and
mov
mov
shl
je
aas
sbb
leave
popf
sbb
mov
adc
inc
jb
notl
push
pop
mov
nop
loopne
daa
fcom
dec
pop
fld
fcomp
xchg
out
arpl
ss
clc
sub
xor
pop
cmp
cmc
fdivrp
ljmp
mov
and
fs
mov
dec
cmp
mov
mov
jge
out
cwtl
add
fcmovnbe
inc
xchg
fiadds
lret
mov
clc
or
pop
cmpsl
in
orl
push
rclb
add
shrb
and
jg
cmp
loop
sub
test
stos
cli
push
not
in
cmp
jb
mov
ljmp
dec
push
mov
pop
fildll
into
jle
fldl2e
jmp
imul
xlat
call
adc
rorb
mov
jbe
jl
and
mov
cmp
clc
nop
dec
xor
leave
adc
jae
sub
cmpsb
inc
or
add
fsubr
xor
mov
dec
sub
lods
cld
pushf
xchg
ja
sub
pop
ret
stos
jb
pop
repz
sarl
jo
sbb
sub
xchg
push
fists
imul
adc
scas
dec
iret
loope
shl
loopne
ret
inc
push
mov
movsb
push
sbb
cs
xchg
xchg
push
lea
insb
in
lods
jns
fisttps
sahf
xlat
mov
mov
sub
psubw
add
mov
lret
add
xchg
push
icebp
xchg
push
mov
addr16
adc
mov
fldenv
aaa
cmp
call
sbb
insb
fsubr
sub
jns
sub
loopne
xor
mov
out
push
cwtl
dec
scas
jae
push
iret
loope
nop
xor
sub
add
jne
cmp
pop
imul
or
adc
mov
or
mov
je
out
daa
lcall
or
jmp
andl
inc
stos
adc
enter
sub
cmp
lods
lods
xor
outsl
add
or
leave
xor
mov
ja
sub
pop
cwtl
sbb
repnz
fistpll
call
sub
jo
cld
aas
loope
stc
mov
xchg
sarl
nop
aas
rclb
orl
and
xchg
pop
push
fdivp
lds
xchg
or
stos
int
test
insb
cmp
jg
testb
add
xchg
adc
das
dec
inc
jg
mov
mov
jmp
or
test
pusha
scas
push
add
in
cmpsl
jg
xor
mov
dec
std
out
fstps
pop
insb
push
push
std
lods
scas
je
scas
out
je
daa
sub
leave
fistps
jl
and
add
adc
push
int3
xchg
ljmp
dec
stos
mov
ficoms
cmp
mov
mov
popf
cwtl
imul
push
xor
mov
push
jno
rcr
lret
mov
dec
dec
divb
mov
adc
mov
ud1
test
sti
outsl
xchg
clc
ret
adc
vunpckhpd
nop
lea
mov
shrb
pusha
mov
std
sbb
add
cmp
jno
jns
or
dec
adc
xchg
pop
hlt
mov
lock
pop
jle
movsl
imul
shlb
xchg
outsl
pop
sbb
ret
adc
outsb
cmc
sti
sti
xor
out
add
mov
ret
mov
xchg
ss
popa
lcall
cmp
fcoml
enter
aaa
stos
mov
sbb
jmp
pop
test
ja
jecxz
or
xor
pop
sub
jb
stos
faddl
mov
mov
inc
adc
mov
das
fs
mov
cmpsb
mov
push
leave
push
mov
push
sub
inc
ja
and
lods
or
test
test
add
sub
inc
xchg
lea
inc
cmp
and
and
fidivs
or
push
jecxz
hlt
ret
bound
es
pusha
push
imul
stos
and
in
scas
pop
in
shrb
test
and
mov
push
sahf
xchg
xchg
insl
lds
mov
iret
cwtl
cmp
inc
loope
and
mov
aaa
pop
add
mov
jecxz
out
or
xor
push
dec
mov
adc
push
test
arpl
mov
test
je
mov
push
in
mov
enter
xchg
pop
cmc
clc
decl
pop
xchg
pop
in
fstl
clc
xor
fwait
dec
inc
mov
push
mov
test
lock
mov
push
adc
fsubrl
xchg
or
inc
arpl
dec
sub
jmp
sub
add
imul
mov
jmp
jg
ret
inc
subl
push
xor
stc
imul
pop
mov
aaa
cmp
mov
xor
pop
xchg
xchg
out
lahf
adc
imul
aas
and
in
jl
les
lods
jle
or
fisubrs
push
sub
push
cmp
xchg
stos
pop
fs
mov
mov
out
cmp
xchg
repz
adc
popa
push
lcall
aaa
dec
popa
ss
aad
or
sahf
jns
imul
mov
xor
and
sbb
scas
xor
in
dec
out
sub
pop
mov
movsl
jbe
jecxz
dec
stc
nop
inc
jl
cmp
mov
jne
push
push
add
and
popf
add
and
es
ds
adc
pop
add
les
stos
push
dec
jne
push
movsb
lcall
dec
push
xor
pushf
adc
mov
push
mov
pop
xlat
scas
or
rcll
ljmp
stc
dec
or
jnp
inc
pop
sbb
rcll
insl
inc
adc
filds
sub
std
sub
mov
lret
pop
and
mov
lcall
lds
bswap
or
and
xchg
out
enter
adc
ds
cmp
mov
pop
ret
neg
insl
ds
jae
shll
mov
cmp
and
test
push
jg
jecxz
or
mov
xor
mov
pop
inc
faddl
mov
cmp
cld
cmp
and
pop
pop
mov
or
jl
cmpb
sbb
aas
or
int3
push
insl
mov
inc
ret
pop
xor
xor
push
iret
aas
mov
mov
leave
add
xchg
dec
loopne
or
fsubrl
rolb
xor
push
mov
sarl
cmp
insb
sub
lcall
mov
lock
ror
or
xor
loope
imul
lea
out
fsubrl
adc
add
inc
cmpsl
sub
jb
sbb
xchg
lcall
jno
int
pop
test
jmp
insl
arpl
mov
clc
inc
adc
jg
cmp
faddl
cmp
pop
mov
movsl
jbe
and
loopne
sub
stos
cmc
mov
call
lds
xor
mov
repnz
push
sub
aam
dec
sbb
xor
pop
outsl
scas
testb
adc
cmpl
dec
cmpsb
pop
xor
mov
out
sub
outsl
jns
icebp
out
jb
or
xor
jmp
mov
ret
in
mov
arpl
jae
outsl
loop
sbb
mov
scas
add
flds
hlt
add
sub
js
cwtl
inc
pop
jle
out
fimull
xor
adc
cld
cmp
cli
mov
xor
mov
xlat
fcmovne
mov
divb
insl
mov
cmp
push
sub
adc
inc
daa
jle
jmp
movsb
cmpsl
pop
mov
test
iret
adc
in
ja
fcomip
pop
push
das
cmp
jb
push
push
in
sbb
sbb
xchg
outsb
fsubrp
scas
xor
inc
mov
mul
call
adc
mov
movsb
ret
mov
ret
enter
push
sbb
pop
negl
out
mov
idivb
jge
data16
adc
outsl
lock
inc
and
or
cmp
dec
out
mov
nop
out
xor
sti
cmp
lret
mov
movsb
inc
jnp
pop
mov
or
lea
inc
mov
mov
movsb
adc
xor
lods
hlt
out
mov
mov
test
dec
push
test
adc
dec
repz
adc
xor
in
int
in
shll
adcb
in
xor
lahf
dec
add
pop
xchg
pop
jecxz
sub
movsb
popa
repz
or
and
bound
jo
jg
push
mov
or
aad
scas
mov
or
adc
jl
faddl
ret
mov
into
jbe
dec
daa
fsubs
mov
xorb
dec
cltd
ljmp
inc
xchg
aaa
nop
push
push
push
ficomps
jo
and
dec
sbbb
cld
sbb
dec
aas
dec
jo
popa
repz
orb
lahf
into
fcoms
rorb
mov
inc
lahf
or
add
cmp
jcxz
cmp
test
dec
jp
leave
je
xor
sbb
fimull
out
movsb
jno
mov
cwtl
in
dec
add
fwait
jo
push
push
sbb
pop
pop
movsb
or
cmpsl
stos
xlat
mov
std
inc
pop
loope
add
mov
in
scas
pop
xor
ret
sbb
push
push
das
or
xor
rorl
mov
inc
mov
and
jp
jge
movsl
dec
sbb
mov
sub
mov
imul
insb
test
mov
dec
stos
jg
fldt
mov
bound
adc
inc
cli
push
xchg
leave
mov
into
rorl
popa
mov
add
jmp
add
push
rcr
jae
or
xchg
popa
std
mov
je
out
fidivrs
or
mov
dec
xchg
and
push
aas
xor
push
mov
sbb
movsb
insb
fildl
inc
add
sbb
out
cmp
in
adc
outsb
mov
lcall
aam
test
in
sub
out
repnz
pop
push
stos
pop
dec
stos
stc
adc
in
jns
dec
in
int
loope
or
pushl
imul
cltd
jle
and
aad
xchg
mov
cmp
mov
data16
hlt
pop
adc
cmp
pushf
stos
mov
stc
sub
inc
aam
pop
and
shlb
jne
mov
cs
testb
in
adc
push
jo
and
xchg
fcoml
cmp
js
std
outsb
lds
imul
icebp
outsl
insb
std
scas
xchg
jmp
mov
push
pop
mov
mov
jns
mov
cmp
enter
arpl
dec
push
loop
daa
add
cmp
loopne
loope
in
mov
dec
loop
punpcklbw
lock
lea
flds
push
xlat
pushf
lcall
jbe
jns
xlat
repnz
mov
mov
insl
push
push
mov
lahf
lahf
sub
mov
jp
popa
push
rcrl
in
imul
mov
stos
adc
mov
lahf
pop
cmp
outsl
test
mov
lret
adc
dec
cmp
mov
std
and
fsubs
sub
cmp
popf
js
mov
sahf
int
cmc
bound
nop
and
add
mov
xchg
orb
xchg
loope
cmp
pop
push
or
or
in
mov
or
repnz
dec
push
dec
orb
out
fmull
xchg
or
push
xchg
cmp
and
ficompl
mov
mov
sar
cld
outsb
mov
and
dec
jbe
xchg
jnp
out
fistl
or
mov
and
addb
imul
or
aam
rorb
xchg
rcll
jmp
push
pop
cmpsl
testb
clc
rol
lock
fwait
pusha
inc
jmp
jge
push
xchg
pop
outsl
or
popf
xor
lret
into
sbb
mov
adc
or
or
imul
mov
outsl
movl
xor
bnd
test
test
pop
cmp
jns
add
cmpsl
mov
add
mov
mov
imul
jmp
xchg
mov
dec
mov
lcall
inc
mov
sarb
mov
hlt
sbb
js
out
xorb
arpl
pusha
ror
jno
nop
xchg
adc
jge
jg
cmovbe
fidivrs
popf
push
lods
into
inc
sub
mov
fdivrp
dec
test
dec
jmp
cmp
jbe
sub
js
dec
and
cmp
rcl
push
das
stos
push
stos
push
lahf
mov
mov
cmpsb
ljmp
aas
adc
jo
ret
ljmp
jnp
cmp
jno
add
jo
icebp
aas
sbb
dec
or
inc
cs
test
sti
nop
test
arpl
roll
inc
pushl
jb
push
sahf
out
int3
hlt
std
push
stc
pop
inc
bound
loope
movl
add
outsl
jmp
aam
push
cmp
in
clc
xor
das
jmp
jecxz
adc
sar
jo
jae
lret
adc
pop
pop
sbb
xchg
sub
mov
pusha
repnz
rolb
loop
cwtl
and
lock
fcomip
dec
nop
jno
jl
xchg
test
xchg
cmp
inc
sarl
jmp
andb
test
xchg
stc
push
sti
stos
rcl
xor
pop
jne
xor
pop
stos
adc
dec
jp
xchg
enter
imull
or
push
rcrb
lods
mov
dec
inc
das
loope
stos
out
imul
in
xor
pop
and
inc
dec
sbb
sti
lds
movsb
mov
mov
xor
mov
push
add
sbb
jae
dec
ja
call
mov
mov
dec
mulb
loop
lea
add
xor
repz
xchg
ffreep
ret
mov
icebp
movsl
decb
mov
pusha
xchg
push
push
nop
sti
pop
mov
mov
push
adc
jp
mov
out
aad
adc
xchg
jmp
mov
out
sbb
jg
lods
shlb
push
sbb
cs
or
lods
in
push
loopne
sahf
out
mov
out
adc
fimull
cmp
xchg
dec
popa
jp
jo
arpl
leave
jmp
stc
scas
nop
sub
out
dec
adc
daa
daa
mov
or
adc
jae
push
lock
cltd
sarl
dec
mov
nop
std
inc
jne
adc
push
add
data16
and
jo
jp
sahf
push
popf
dec
mov
sub
movsl
jns
addb
lods
mov
jbe
nop
rcrb
jnp
jne
mov
mov
jmp
rorb
xor
aas
sahf
in
nop
sub
jp
lods
ja
jmp
fs
and
je
mov
fimull
stos
mov
push
pushf
popa
fsubrp
mov
js
jb
mov
push
in
fcomi
repz
lret
mov
fists
xchg
pop
mov
or
bound
sub
fnsave
push
inc
cmp
scas
faddp
and
scas
and
sbb
inc
into
sub
sti
mov
gs
fwait
jmp
call
mov
push
mov
xor
sub
cld
add
sub
je
or
jmp
adc
addl
push
loopne
and
stos
cmp
lock
shll
insb
push
idiv
pop
das
cltd
cmc
pop
pop
and
ss
scas
mov
xlat
sub
iret
test
push
scas
fadds
cmp
dec
push
aad
inc
jmp
daa
test
not
inc
pop
jmp
mov
pop
sti
jmp
or
pop
mov
call
push
lods
pop
xchg
outsl
out
cmp
adc
push
mov
pop
js
outsl
dec
add
sub
icebp
pusha
jne
cmpsl
jae
sbb
xlat
ficomps
dec
inc
xor
ja
enter
ret
or
push
fidivl
cmpsb
sbb
push
mov
hlt
xor
xchg
aas
jg
mov
ret
inc
inc
inc
xorb
inc
xchg
das
int
ret
and
lcall
or
aas
or
sub
cmpsl
and
sub
push
cmp
adc
mov
pop
clc
or
jecxz
out
stos
stc
push
adc
inc
dec
arpl
xchg
mov
ja
push
lods
in
iret
shl
mov
lea
pop
dec
xrelease
lods
sub
int3
arpl
pop
mov
mov
and
push
scas
xchg
ljmp
pop
shlb
imul
popf
jmp
lds
and
rorb
mov
cmp
mov
sahf
popa
pop
js
out
xor
std
xchg
or
lret
mov
scas
adc
or
pop
test
in
dec
jns
dec
xchg
xchg
inc
jbe
cwtl
push
mov
inc
cmpsl
or
mov
addr16
rclb
push
pop
sbb
out
and
aas
outsb
and
xchg
mov
in
rol
push
ret
push
mov
sub
xor
scas
cmc
sahf
cmpsb
mov
shrb
and
mov
call
jb
test
test
repnz
imul
orb
push
mov
push
cmc
cmp
inc
mov
loop
enter
stc
mov
dec
add
pop
hlt
jg
cmp
jnp
mov
mov
out
jmp
fdivl
jno
addb
bound
jnp
pusha
cli
out
mov
lods
jge
pop
call
pusha
sbb
jb
fwait
pop
popf
jb
cmp
mov
rcl
fsubr
xor
mov
pop
and
bndldx
call
adc
or
pop
icebp
lcall
xchg
xor
add
std
sbb
sub
xlat
push
mov
aam
xor
daa
ss
test
cmpsl
cmpb
inc
and
mov
or
icebp
dec
xor
ret
popa
cs
push
dec
and
test
or
adc
and
out
push
scas
sbb
xchg
pop
ja
loop
test
mov
fildl
pushf
inc
mov
and
sub
cld
stc
scas
loopne
sahf
mov
inc
jmp
cwtl
push
sub
es
sahf
sub
mov
inc
rcll
pop
in
pop
aaa
cmp
add
mov
mov
add
addl
xor
lea
lahf
push
scas
std
outsl
cmpsb
lcallw
fs
repnz
pop
call
mov
inc
or
cmpsl
pushf
adc
je
subb
out
add
rcll
rolb
je
push
cltd
add
mov
es
arpl
pop
jnp
cwtl
cmp
mov
enter
jne
xor
jns
loop
imul
mov
je
icebp
push
das
and
adc
mov
inc
lret
fstps
pop
out
ja
lcall
into
push
inc
dec
push
or
push
adc
hlt
mov
ret
xor
or
hlt
pop
inc
ss
and
cmp
sbb
mov
or
imul
fmuls
mov
or
dec
inc
addl
fs
xlat
bound
fsubr
cld
mov
je
mov
xchg
pop
mov
xor
pop
cmp
and
in
push
and
testb
imul
adc
lods
sub
daa
sub
popl
mov
jo
fisubl
xchg
scas
jne
adc
bnd
sub
les
sub
lea
pop
syscall
push
in
mov
mov
popa
sbb
mov
push
sbbb
adc
xor
or
push
test
sahf
les
repnz
add
and
inc
mov
fiadds
jle
hlt
add
adc
xchg
stos
cwtl
aas
bound
pop
mov
cmp
push
clc
or
adc
mov
ja
fidivrl
sub
popa
out
mov
shrd
ds
sbb
rcrl
xchg
push
push
push
aaa
push
ja
mov
sar
or
ds
push
and
out
push
testl
lods
mov
cmp
xor
mov
dec
mov
gs
jns
or
lods
jge
test
mov
pop
inc
leave
lret
mov
sub
mov
sbb
push
pmullw
xor
loop
std
into
sbb
cwtl
hlt
xchg
leave
mov
icebp
fs
inc
sti
push
cmpsl
dec
push
out
mov
in
shr
popa
mov
mov
adcb
sub
shll
adc
mov
sbbl
cmp
fwait
loop
test
idivb
jns
jp
mov
pop
lock
pop
stos
ret
jge
xchg
pop
pop
dec
or
xor
mov
sarl
movsl
mov
lret
shl
cli
scas
fwait
adc
and
sbbb
dec
mov
lret
xchg
dec
sub
adc
repnz
jmp
call
or
add
aas
loopne
sub
adc
sub
adc
jne
and
je
out
es
pop
into
aad
fwait
loope
dec
mov
and
loope
stc
repnz
enter
dec
dec
sbb
fidivl
add
inc
fcmovb
out
dec
jne
sbb
imul
sbb
cmpl
xchg
fs
sbb
sub
sub
xor
mov
ja
jno
sbb
data16
sub
jbe
aas
lret
add
xor
mov
jg
sbb
mov
fimuls
scas
inc
xchg
add
dec
mov
mov
ret
pop
push
adc
inc
rol
mov
push
xchg
decl
ret
xor
dec
cmp
lds
scas
mov
icebp
outsl
aad
arpl
movsl
sbb
mov
adc
mov
movsl
and
push
pop
mov
rcll
in
pop
pusha
js
jecxz
mov
inc
mov
add
shlb
pop
dec
jo
push
imul
sar
sub
shrb
jne
aad
pop
jo
jecxz,pn
imul
cmp
pop
mov
loop
daa
cmp
adc
idivb
daa
pop
sbb
outsb
dec
xor
ljmp
flds
ret
test
jge
js
mov
lfs
sub
xchg
cmp
add
sub
pop
imul
mov
push
test
into
ret
aad
or
outsl
add
lret
packuswb
std
xchg
hlt
xor
aaa
push
pop
mov
nop
fldl
sahf
popa
fisubs
out
fcomp
movsb
int
gs
fmull
hlt
mov
mov
mov
std
dec
xchg
test
xchg
xor
sub
sub
scas
call
lock
xor
ljmp
xchg
movsb
fcmovb
in
fidivl
std
adc
jnp
mov
pop
sub
sub
sahf
scas
inc
in
pusha
and
inc
mov
or
pushf
arpl
sub
mov
xchg
ss
inc
push
jmp
adcl
addr16
lock
bound
pop
inc
xchg
js
inc
mov
subl
test
ret
mov
rclb
movsb
jnp
lcall
add
or
popf
sub
xor
xor
jnp
pop
shl
adc
xor
or
pop
sbb
imul
push
bound
xor
adc
or
adc
push
mov
inc
loopne
test
ljmp
mov
dec
inc
mov
push
insb
sub
clc
jmp
xor
rcrb
stos
pop
inc
jne
pusha
mov
repnz
cmp
enter
pop
push
jg
bound
loope
xchg
cmp
xlat
dec
out
mov
les
outsb
ja
sub
sarb
ljmp
cmpsb
push
and
pop
push
mov
adc
loopne
push
push
pusha
pusha
or
fwait
es
fwait
arpl
aaa
pop
mov
xchg
test
stos
jb
pop
out
fldl
es
cmp
jns
mov
in
in
fcmovnbe
stc
arpl
mov
xchg
lcall
jl
jne
repnz
leave
cmp
adc
loopne
icebp
cli
call
sbb
ss
add
dec
pop
adc
mov
mov
inc
leave
std
xchg
ds
dec
jb
dec
jle
dec
int
cmpl
mov
inc
sbbl
int
pop
out
fwait
nop
repnz
sbb
sahf
fsubrs
sarl
xlat
mov
sub
test
mov
jle
fcoml
sbb
out
loop
push
push
das
jbe
lcall
fstl
push
inc
or
outsb
and
push
shl
test
jnp
mov
and
sbb
xchg
xchg
leave
lds
sub
inc
fs
std
andl
int3
in
add
xor
push
xor
rolb
sbb
cwtl
or
icebp
imul
lret
mov
cli
or
insb
ret
jp
pop
cmp
insb
add
int3
loope
sub
sub
outsl
adc
mov
and
addr16
xchg
stc
adc
jae
int
dec
cltd
dec
mov
ds
xchg
nop
icebp
mov
adc
pushf
xor
dec
das
mov
pop
loope
aas
xchg
mov
cli
sub
mov
add
mov
cmp
xchg
pop
pop
cmp
lret
lcall
sbb
int
sbb
cmc
pop
lret
cltd
and
iret
pop
or
mov
or
mov
xchg
mov
aad
sub
cmp
or
inc
and
and
jmp
int
or
xchg
adc
ss
ffreep
adc
bound
data16
sub
mov
mov
inc
push
push
push
push
sub
in
add
cli
hlt
div
and
cmpsl
inc
aad
aad
rolb
cmp
or
cmp
fmuls
popf
imul
sbb
cli
push
shll
mov
dec
inc
dec
mov
mov
inc
xor
push
outsb
scas
sbb
rolb
mov
jl
test
adc
mov
ds
cltd
pop
daa
xor
cmp
repnz
mov
push
cwtl
xchg
push
and
sbb
mov
je
shll
inc
icebp
mov
xor
jns
roll
cmp
arpl
adc
ficompl
daa
mov
mov
mov
fimull
cmpl
dec
xor
mov
cld
cmp
sub
data16
sti
mov
arpl
pop
or
lret
mov
arpl
pop
sbb
push
call
xchg
sub
jge
mov
lea
lea
adc
sarl
imul
sub
cmpsl
sbb
in
xor
mov
xchg
daa
pop
jb
sbb
xchg
dec
cmp
mov
mov
sbbb
lock
por
adc
cmp
cs
xlat
out
xchg
xchg
dec
or
xor
xor
add
mov
xchg
inc
nop
subb
fld
aad
movsb
mov
fisttpl
arpl
add
jno
sbb
roll
fiadds
hlt
les
xchg
or
repz
mov
xchg
pop
mov
and
xchg
mov
int
bndstx
add
sub
mov
sahf
push
enter
sbbb
pop
sbbl
jmp
insb
mov
mov
jae
arpl
xchg
mov
fcompl
outsl
xchg
fcomip
repnz
push
dec
aaa
ret
cmp
mov
es
dec
and
pop
push
loop
xchg
xchg
inc
inc
sbb
int
in
rolb
dec
test
mov
out
mov
idiv
pop
lret
pop
adc
jmp
cmpsl
push
jbe
scas
mov
fiaddl
mov
push
data16
cmp
xlat
or
incl
pop
jb
mov
sbb
sub
fwait
xchg
or
jge
cltd
lods
out
pop
addr16
xor
add
inc
xor
pop
in
adc
lea
stos
cmpsb
jb
xrelease
adc
xorl
adcl
cwtl
mov
scas
mov
hlt
mov
inc
adc
lods
mov
mov
shrb
and
sti
and
js
adcl
add
nop
dec
cmp
js
sbb
movsb
adc
fimuls
popf
add
clc
loopne
or
jl
sbb
and
in
add
push
jle
enter
jbe
mov
add
xchg
loope
pusha
push
les
inc
loop
dec
pop
dec
push
jae
les
sub
in
push
mov
cmp
in
outsl
inc
pop
bound
xor
push
dec
pop
xchg
jg,pn
mov
fildll
mov
insl
push
shll
sahf
adc
int
or
mov
add
fbstp
in
pushf
data16
xchg
insb
inc
aad
ljmp
outsb
gs
bound
inc
xor
mov
js
pop
cmp
xchg
and
out
sarl
movsl
lahf
ds
mov
add
out
js
arpl
test
push
sarl
jb
aas
mov
or
stc
mov
and
push
rorl
cmc
imul
loop
cmp
in
clc
lods
xchg
xchg
cld
pop
shr
sub
xorb
sbb
or
clc
mov
and
aad
shrb
sbb
dec
out
xor
jle
xchg
bound
lret
jne
movsb
pop
inc
or
ret
les
sbbb
push
inc
jo
lods
in
data16
add
int
lahf
and
iret
lahf
dec
add
in
ret
add
sbb
xchg
push
pop
testb
push
cltd
sbb
mov
sub
inc
rorl
ficomps
stc
sbb
mov
adc
mov
inc
in
andb
dec
push
adc
sbb
stos
insl
or
test
test
ficoms
push
hlt
mov
dec
aam
into
lret
ret
push
out
pop
mov
cmpsb
lds
cmc
xchg
cmc
jne
movsl
xor
or
call
mov
lcall
arpl
fidivl
push
lods
mov
nop
sbbb
subb
jp
and
xchg
scas
cmp
lods
aad
pop
inc
push
adc
inc
jl
mov
cmpsb
es
out
movsl
jnp
lahf
clc
xor
cmpsl
decl
aas
movsb
push
sub
mov
std
jns
jno
lods
pop
sarl
test
and
adc
xchg
adc
dec
test
lock
lcall
roll
cmp
and
sti
test
pusha
inc
outsl
jnp
jb
test
ja
dec
testl
dec
xchg
test
iret
idiv
xchg
cmpsb
jmp
shrb
push
mov
jno
inc
push
outsl
lahf
cmc
test
fdivl
cmp
jno
or
xchg
mov
pushf
dec
pop
jle
ffree
stos
mov
inc
mov
mov
test
andl
inc
jl
sbb
xor
inc
int3
shrl
adc
pop
repz
jl
and
repz
add
loope
movsl
mov
test
dec
nop
movntps
mov
dec
insl
test
mov
dec
ds
dec
push
jnp
sub
cli
cs
mov
xchg
dec
mov
adc
xchg
mov
mov
nop
popa
inc
and
lret
cwtl
scas
adc
int
jle
add
out
ljmp
je
nop
imul
cmp
xor
outsl
push
insb
xchg
js
sbb
sbb
aam
cmp
adc
ret
pop
sbb
jecxz
cmp
jg
adc
push
arpl
enter
mov
xchg
sbbb
pop
sbb
xchg
sub
cmp
sti
and
jge
sub
rep
xchg
rcr
mov
xchg
repnz
push
out
or
popa
loopne
fwait
loope
xor
bound
xchg
dec
insl
lret
pusha
mov
xlat
sbb
xchg
out
xor
std
dec
out
addr16
xchg
cmp
pop
xorl
mov
lret
mov
nop
lods
and
ret
call
mov
testb
mov
mov
int3
int3
add
mov
mov
sbb
mov
fcmovnu
sub
sub
adc
lcall
into
movsl
insl
enter
aaa
xchg
mov
fiadds
push
push
add
xchg
movsb
mov
stc
inc
cwtl
mov
outsb
and
xor
sub
sbb
and
mov
outsb
xor
leave
dec
inc
mov
dec
pop
mov
mov
fwait
out
cltd
cmp
test
push
jp
call
ja
out
pop
adc
pop
ja
scas
mov
popf
add
cwtl
daa
jg
cmpsl
scas
dec
adc
mov
js
repz
vpmulhuw
addr16
ljmp
cmc
out
adc
xor
rcrl
pop
jp
mov
or
and
stos
xor
mov
inc
call
punpcklwd
sub
jmp
push
push
outsb
mov
leave
fdivrs
cmpsb
jge
mov
dec
rcr
xchg
outsb
or
jmp
int3
fs
lods
and
xchg
mov
mov
push
jae
jne
mov
push
popf
inc
data16
jnp
xor
or
push
movsb
icebp
dec
ja
dec
fs
dec
inc
mov
sbb
ret
inc
add
outsl
cmpl
mov
mov
shlb
pop
jno
lcall
stc
movsl
lea
cwtl
fdiv
push
clc
and
out
cmpsl
jmp
dec
gs
or
out
pop
or
or
jle
out
pusha
and
fiadds
es
adc
int3
add
jle
dec
and
iret
movl
fidivl
je
jp
pushw
mov
xchg
addr16
sbb
imul
mov
push
ret
dec
add
scas
rclb
push
ljmp
xchg
xor
mov
pusha
push
mov
cmp
movsl
imul
ds
sbb
fmull
ret
andl
xchg
xlat
push
insl
imul
sbb
pop
stos
lret
outsb
movsl
jle
stc
jno
mov
mov
xchg
fisttps
jle
shlb
add
in
insb
orb
shl
sbb
cmc
movsb
dec
mov
sub
inc
dec
imul
insb
rcl
ja
in
push
xorps
mov
cmp
and
mov
addr16
dec
cld
pop
imul
xorl
xchg
jmp
adc
lods
xchg
xchg
or
in
cwtl
push
loope
lahf
in
xchg
sahf
sbb
push
fcoms
push
sub
jb
inc
xchg
sbb
cltd
jp
and
mov
dec
xchg
and
push
adc
xchg
xor
dec
add
stos
out
gs
mov
mov
outsl
xchg
das
ror
fsubl
xor
sub
call
adc
cmp
into
iret
dec
cmpsb
pop
jl
sarl
dec
cld
add
jle
icebp
adc
add
lahf
call
add
fimull
imul
int3
jns
outsl
in
cld
or
pop
adc
mov
mov
std
xor
ja
aaa
mov
mov
in
bound
insl
cmp
sub
loopne
stos
ficomps
jb
dec
ds
sti
ss
push
mov
stos
push
jmp
cmp
push
and
push
pop
mov
mov
jl
enter
in
add
mov
int
imul
or
std
mov
xchg
lods
imul
outsl
movsl
xor
cmpsl
inc
inc
cld
xor
mov
jb
test
adc
lea
jg
xchg
mov
into
leave
pop
repz
getsec
mov
inc
pop
push
cli
dec
lods
pop
inc
hlt
adc
pop
jle
pop
push
push
mov
push
icebp
jg
sbb
mov
popa
cld
push
jecxz
adc
sti
bound
adc
cli
int3
or
push
mov
add
popa
fdivs
rcr
loop
jo
xchg
fwait
pop
cwtl
jns
cmp
pop
add
inc
popl
int3
aam
lods
jecxz
adc
sbb
and
bound
xchg
sahf
lcall
les
jp
dec
rcll
mov
or
ja
dec
aas
add
loopne
mov
cli
cmp
sub
notb
pop
outsb
or
scas
ja
les
rol
icebp
xchg
and
adc
nop
outsl
xchg
out
pop
add
insb
daa
sti
cmp
inc
or
inc
adc
test
pop
ret
sbb
jge
push
pop
mov
dec
scas
test
push
cmp
pop
dec
in
js
adc
sbbb
in
std
mov
inc
insl
sbb
xor
dec
out
adc
inc
push
jb
lea
adc
andl
jb
insb
in
push
leave
imul
lea
jae
jbe
xchg
pop
test
sbb
subl
inc
repnz
rcll
jmp
mov
popa
push
icebp
clc
clc
pushf
adc
fldcw
hlt
and
sahf
cmp
cld
mov
repz
mov
jb
adc
scas
xchg
jecxz
movsl
push
subb
or
dec
push
mov
sbb
mov
rclb
fs
mov
adc
mov
and
inc
add
xchg
pop
repnz
and
jbe
jno
sbb
int
orl
jle
fmull
cmpsb
icebp
movsb
jle
jnp
jo
adc
adc
xchg
lods
ss
lcall
outsb
int3
std
add
aam
fwait
or
mov
cmp
outsl
jg
ret
leave
mov
xchg
movsb
push
imul
enter
cli
pop
pusha
push
inc
cs
cmc
push
in
add
dec
sbb
dec
js
sbb
shrb
incl
in
mov
push
adcb
push
jno
hlt
and
cmc
pop
fwait
stc
add
mov
ror
pop
xor
repz
outsb
insb
in
mov
mov
pop
aam
mov
cmp
frstor
cltd
es
leave
jno
popf
js
add
sti
cmpsb
mov
cmp
lea
dec
add
pop
pop
arpl
test
nop
cmpsb
push
fadd
inc
mov
sbb
mov
push
test
add
sub
mov
jl
out
mov
loop
clc
movsl
shll
sbb
icebp
jno
mov
sbb
mov
or
mov
xor
iret
mov
es
into
lcall
sahf
lret
clc
in
fimull
add
and
xchg
mov
adc
stos
aas
inc
fists
mov
in
mov
outsb
hlt
and
movsb
pop
in
mov
xor
mov
xchg
jnp
mov
ret
mov
aam
aaa
fisttpll
std
cmp
jecxz
sbb
popf
mov
sub
or
in
stos
dec
repz
mov
push
pop
cwtl
js
sbb
mov
jmp
mov
call
scas
into
push
pop
outsb
test
iret
rolb
cltd
lds
mov
fcmovbe
add
fmulp
xchg
mov
cmp
test
fisttpll
cmp
das
mov
xchg
sub
mov
jmp
sub
repnz
xor
test
add
subb
mov
push
sub
imul
jge
add
ja
dec
incb
out
xor
ret
popf
sbb
popf
out
addr16
and
and
sbb
mov
scas
lcall
daa
leave
lcall
nop
or
daa
mov
pop
idivb
into
dec
fmuls
mov
lea
fsubl
daa
das
cmc
push
test
movsb
loope
add
dec
inc
in
cmp
mov
je
push
pop
ja
out
sbb
xchg
dec
lahf
imul
pushf
call
pusha
ret
push
enter
cmp
adc
jg
sbb
cmp
push
mov
lds
scas
mov
fisubs
imul
xlat
cld
inc
aaa
cltd
dec
lret
and
lcall
pop
hlt
mov
jecxz
or
xchg
mov
dec
lods
sbb
inc
pop
and
sub
in
je
stos
enter
mov
inc
outsb
arpl
xlat
ficomps
test
mov
imul
les
add
mov
faddl
les
in
repz
push
mov
and
push
mov
fldl
adc
adc
mov
xchg
push
xchg
mov
test
cmp
xabort
cmp
push
cmpsl
incb
dec
andb
outsb
js
shlb
inc
in
dec
shrb
xchg
adc
cmpsl
popf
cwtl
xchg
xor
subl
mov
and
out
mov
dec
loopne
jp
add
addr16
test
sti
jo
pop
hlt
sub
and
or
outsb
data16
lret
mov
add
xchg
mov
mov
inc
mov
pop
fdivs
add
test
dec
notl
xchg
dec
sahf
mov
adc
push
mov
popf
sub
xchg
push
push
xor
testb
popa
mov
sub
subl
ljmp
push
aad
mov
daa
fisubrl
shlb
push
adc
sti
pushf
push
sub
lahf
cmp
repz
mov
std
jecxz
hlt
push
arpl
fcomps
add
cmp
notb
fwait
sti
mov
ds
inc
pop
xor
sbb
cmp
jne
push
add
lods
lods
fldcw
adc
lret
pushf
cmp
lock
jo
jg
ljmp
out
jp
jmp
gs
pop
jg
pop
inc
shrb
subb
negl
dec
ret
lcall
or
sbb
or
dec
sti
cli
jl
daa
int3
mov
add
adc
inc
add
arpl
sbb
rcr
js
repnz
xor
test
jnp
into
push
xchg
das
imul
jge
pop
test
rcl
pop
loopne
mov
dec
lods
stos
add
push
addr16
fdivrs
cmpsl
enter
lahf
pop
xacquire
loop
inc
repz
mov
jp
bound
pop
mov
dec
pop
imul
add
ja
xchg
and
cltd
lret
lods
es
pop
lock
imul
adc
pusha
mov
into
stos
jmp
stc
xor
insl
scas
jb
mov
pop
inc
adc
push
add
pop
push
mov
es
or
jns
aas
mov
popa
stos
icebp
push
and
cld
push
sbb
mov
mov
fstl
mov
andb
add
or
mov
sti
jecxz
movsl
pop
jno
aad
repz
xchg
lea
and
shll
bound
cmpsb
xchg
mov
shrl
and
or
iret
insb
lods
or
outsl
bound
push
sahf
sub
in
lods
cmpsb
add
in
dec
add
and
jmp
dec
movsl
jle
pop
xchg
jno
iret
fs
jae
push
inc
dec
mov
inc
mov
mov
aaa
mov
pop
enter
adc
add
add
sub
fldt
inc
dec
iret
mov
ja
pop
jle
cwtl
je
pop
push
movsb
fists
mov
scas
repnz
popf
lahf
lret
pop
enter
cmp
aad
jle
nop
test
mov
xchg
ja
cli
pop
addl
dec
out
call
jno
fmull
cmp
lods
into
push
fs
int3
dec
pop
push
mov
pop
nop
sbb
sbb
jl
dec
sbb
outsb
push
cwtl
ds
or
fyl2x
rep
and
outsl
shrb
fcompl
outsb
lahf
mov
lock
cmpsl
push
and
xor
jo
pop
dec
inc
imull
mov
and
shrl
dec
dec
push
ja
sbb
xor
subb
test
loop
imulb
add
fwait
out
lret
fnstenv
scas
fwait
or
fimull
jmp
sbb
lods
jle
aas
xor
leave
les
cld
inc
adc
sarb
mov
andb
hlt
add
inc
pop
push
packssdw
jo
fisttpl
lods
xchg
xchg
lds
es
cmp
inc
lret
cmp
and
test
or
sti
repnz
jecxz
mov
es
test
mov
sbb
or
arpl
fnstsw
test
idiv
inc
ljmp
jo
sbb
and
stc
ds
jle
mov
add
jecxz
mov
int
jbe
push
in
push
xor
stc
mov
mov
cli
dec
sar
mov
out
jo
fnstenv
mov
adc
not
test
mov
pop
push
push
dec
stc
dec
cli
xor
mov
shll
push
aaa
aam
test
sub
loop
pusha
jg
flds
fwait
mov
xlat
insl
mov
adcl
cmp
add
mov
mov
push
pusha
cltd
scas
addb
jne
inc
lea
mov
imul
push
push
inc
scas
je
in
and
and
aas
leave
inc
mov
push
xor
ret
cmpsb
xchg
lds
xor
ljmp
sbb
in
or
cmp
dec
mov
xor
sarl
adc
mov
shlb
adc
and
pop
loop
leave
ss
cltd
or
jl
xor
push
jb
xor
pop
scas
out
and
mov
rcrb
das
mov
pop
adc
movsb
cmpsl
scas
fbstp
cmp
fisttpll
or
aaa
loop
rol
jge
pop
xor
ret
icebp
dec
inc
dec
fsubl
inc
aad
cltd
push
add
int
cmp
sbbl
pop
negl
int
jle
jl
scas
sbb
mov
fincstp
jge
mov
inc
movhps
jno
dec
add
mov
lods
pop
aam
push
pop
xor
cmp
push
shrl
add
pushf
xchg
addb
out
imul
mov
sbb
insl
cmpl
repnz
out
mov
rcll
fimuls
push
push
push
int
sahf
test
aaa
into
iret
loope
mov
pop
gs
jl
incb
loopne
mov
bound
or
addr16
mov
leave
push
scas
es
popf
push
div
test
gs
xor
insb
sub
cli
or
test
int3
cmpsl
sbb
stc
pop
mov
jne
mov
dec
jle
sbb
inc
lahf
pop
dec
je
daa
pop
js
xchg
ret
push
inc
into
xchg
ret
cmp
test
sti
mov
mov
cmp
jp
push
cmpsb
xchg
fmul
test
mov
cmp
xor
popf
adc
push
add
mov
into
pop
mov
aaa
jae
out
pop
cmc
mov
out
mov
jns
pop
test
aaa
xchg
push
push
int3
or
repnz
hlt
xchg
sbb
and
fcoms
jo
test
outsl
popa
outsl
add
add
in
dec
insl
rclb
ja
push
jecxz
push
mov
mov
scas
push
mov
cmp
xor
ljmp
mov
cmpsb
and
call
jno
pop
mov
scas
enter
lock
sbb
and
inc
mov
bound
into
sahf
mov
and
jns
sub
test
fsub
mov
hlt
jns
in
adc
jmp
andb
test
lods
xor
mov
cmc
aam
push
addr16
add
and
cmp
ret
hlt
add
push
dec
scas
pop
jmp
call
jmp
fldenv
adc
ja
fucomip
test
add
and
adc
jg
ficomps
push
mov
js
cld
xor
add
sti
and
sub
outsl
jmp
ret
outsb
inc
in
dec
aam
pop
pop
js
lods
lcall
hlt
loope
test
dec
xchg
add
push
lods
dec
lock
mov
mov
push
push
insb
repnz
add
in
in
mov
mov
ljmp
add
cmp
jl
dec
pop
movsl
outsb
ficoml
popa
pop
or
mov
and
and
stos
scas
xchg
dec
jbe
jnp
xor
add
aad
push
and
push
sub
adc
in
fdivr
mov
inc
testb
mov
pop
fmull
icebp
xchg
sahf
insl
daa
nop
xor
enter
lret
mov
shll
and
xchg
or
out
push
jg
push
mulb
andl
test
popl
mov
leave
xor
or
call
jno
mov
into
push
adc
stc
pusha
fiaddl
mov
mov
mov
adcl
cwtl
adc
dec
push
ss
sti
sbb
inc
xor
stc
data16
aam
repnz
inc
pop
cmpsb
or
inc
jmp
mov
inc
out
inc
loope
jecxz
hlt
pop
jns
add
push
cmp
sets
push
mov
mov
pushf
fucom
mov
dec
cld
xchg
mov
sub
sbb
xchg
lods
repz
test
push
adc
cld
or
xchg
adc
sub
movsb
jle
mov
sbb
mov
push
fyl2xp1
dec
or
xor
push
add
xchg
sbb
xor
jecxz
mov
sbb
pop
mov
mov
adc
scas
jbe
and
bound
clc
adc
std
jns
rcll
or
inc
je
repnz
fucom
popa
mov
xchg
sbb
stc
xchg
icebp
out
and
fadd
mov
iret
xchg
mov
mov
sti
xor
pop
loope
inc
adcb
or
ret
enter
inc
pop
xchg
cmpsl
jb
push
or
mov
cmp
das
cmc
ss
adc
sub
mov
adc
outsl
shlb
pop
add
pop
mov
xchg
mov
push
jb
xchg
fisttpll
ss
sbb
cmp
adc
push
orl
repnz
into
jbe
cmp
xor
push
lahf
pop
out
mov
lahf
repz
dec
and
jbe
adc
fistl
pop
loop
push
push
fisubs
call
dec
add
outsl
shr
test
in
inc
nop
jno
push
out
ds
mov
in
add
push
cmc
and
push
bound
popf
add
cmpsl
pusha
push
mov
xchg
das
mov
aad
push
ds
mov
mov
add
outsl
jp
test
popf
push
xchg
mov
xchg
push
insl
cmp
into
add
push
in
push
mov
fwait
icebp
sub
or
test
lds
movsb
cmp
fs
std
push
mov
xor
push
out
cli
lahf
lea
in
sub
lods
mov
arpl
adc
repz
es
sbb
pop
cmpsb
ljmp
int3
ljmp
sbb
mov
incl
outsl
jnp
sub
push
ja
cmp
xchg
clc
mov
xchg
push
sti
pop
scas
fstpl
cmp
pusha
loope
jae
sbb
jl
into
or
xchg
repz
inc
mov
sbb
mov
jo
jb
shlb
fldl
nop
lods
fisubrs
mov
int
push
test
pop
inc
ljmp
pop
test
ret
xchg
mov
mov
xor
or
cli
fsubl
sbb
xor
out
data16
enter
dec
adc
adc
mov
xchg
jbe
out
lret
pop
repz
add
stos
lcall
sbb
aad
inc
and
add
sahf
dec
xor
loopne
repz
adc
pop
loope
cmp
pop
cmpsb
repnz
mov
mov
xchg
mov
ret
inc
pop
xor
jns
sbb
test
testl
nop
in
inc
popa
jl
dec
fldcw
popf
lods
lret
sbbl
cmp
mov
cmp
cmp
xor
sbb
xchg
cmp
aam
mov
pop
sbb
daa
pushf
roll
mov
push
jl
andl
stc
stos
add
das
sbb
sbb
fmull
into
cmp
pop
push
cwtl
pop
add
std
adc
pop
out
sub
dec
stos
cmc
push
call
jne
je
popa
jno
cmp
cmpsl
pop
adc
dec
pop
mov
lahf
jo
sbbb
fadd
push
mov
ret
pmaxsw
lcall
sar
xor
sbb
mov
xlat
orb
dec
mov
negl
lcall
out
inc
push
not
in
es
mov
cmpsb
mov
fnstenv
adc
push
leave
aaa
repz
add
xor
jl
pop
mov
push
dec
xchg
xchg
or
mov
jmp
cltd
push
ljmp
mov
add
jmp
inc
fistpl
aaa
sub
dec
loopne
inc
jg
sbb
data16
rolb
push
xchg
mov
fistps
xchg
dec
sub
movsb
aad
and
arpl
mov
andl
int3
jp
push
fstps
fidivl
imul
je
inc
mov
jns
sbbl
push
xchg
push
lret
dec
jno
mov
mov
insl
push
xchg
mov
dec
sub
or
jns
jg
jecxz
push
out
addb
popf
mull
mulb
ljmp
test
ja
loope
js
aaa
add
sar
test
ja
movsb
not
dec
sub
jle
ss
test
cmp
nop
jg
xchg
sbb
push
fldcw
add
pop
adc
stos
dec
test
scas
xchg
jp
push
push
xor
jge
loop
cld
lods
or
inc
leave
dec
in
sar
sub
mov
mov
lea
arpl
pop
push
mov
mov
lret
jns
pop
xchg
xchg
bound
sahf
inc
mov
mov
sbb
pop
loope
call
dec
in
jmp
divl
scas
rsqrtps
or
movsl
inc
jbe
push
mov
es
add
lods
sbb
jnp
push
mov
pop
push
inc
jle
mov
sbb
out
iret
adc
mov
xchg
orb
sub
mov
daa
mov
out
out
leave
outsb
cmp
adc
xchg
pop
jl
pop
jg
jbe
out
arpl
push
pop
xchg
xchg
dec
dec
es
mov
push
shlb
adc
push
sbb
jmp
or
pop
push
push
lcall
in
mov
test
sub
mov
loopne
mov
jae
lea
push
xchg
insb
sbb
adc
ds
jbe
shlb
pop
push
xchg
xchg
daa
jp
push
push
in
cmp
mov
or
push
fildll
loopne
mov
push
jnp
add
les
sub
or
aam
dec
fisubl
mov
adc
ficomps
mov
dec
arpl
sub
js
add
cmp
lret
jnp
daa
jl
xchg
pop
push
sbb
jns
cmp
movsb
aam
mov
pop
dec
jp
test
stos
fisubl
jmp
jae
mov
jnp
or
jb
pop
and
out
outsb
cld
cld
push
mov
test
and
xorl
cvtps2pi
loope
mov
or
pop
jo
mov
outsb
xchg
adc
sbb
mov
inc
aas
repz
popf
jbe
call
jns
jae
mov
and
je
inc
xchg
roll
pop
jo
popf
loopne
cwtl
test
sti
ficoml
or
add
cmpsb
test
icebp
pop
fcoml
jg
push
scas
leave
pop
cltd
or
lods
push
pop
mov
repnz
shlb
sub
lret
dec
sti
mov
adc
insb
das
movsb
fldcw
dec
mov
jle
xor
jmp
arpl
pop
test
in
outsl
lahf
loopne
add
pop
lahf
out
loop
pop
cmp
loopne
pop
shrb
jo
push
fisubl
outsb
test
xchg
xor
jecxz
sub
jnp
loop
je
fstpl
jg
mov
data16
loope
mov
cmp
fadd
aaa
add
test
cmc
jmp
ljmp
lods
push
cmp
mov
adc
data16
inc
addr16
subl
stos
jne
ror
into
sbb
push
mov
pop
aad
adcl
lock
mulb
insl
imul
push
cwtl
divb
movsb
fidivs
or
stos
out
outsb
dec
inc
aas
aaa
and
pop
pop
xor
aaa
clc
test
mov
cmp
push
cmp
pushf
add
aam
cmp
sbb
clc
cmpsb
add
sub
icebp
lret
fnstsw
dec
ljmp
jnp
dec
out
stos
adc
pushf
and
and
mov
lods
pop
pushf
movsl
movl
push
xchg
xchg
mov
xor
jnp
loop
sub
gs
or
scas
fs
dec
jecxz
cs
add
push
jnp
mov
xlat
repnz
out
and
push
cmp
ret
iret
xchg
inc
inc
xchg
cmp
push
mov
lret
aaa
or
xchg
arpl
mov
inc
mov
mov
orb
scas
jle
push
pop
aaa
outsl
shl
mov
shll
adc
add
cmp
sbb
sbb
adc
add
cmp
xor
push
or
adc
xchg
dec
mov
xchg
out
lods
jo
shll
fisttpl
pop
fwait
lods
gs
and
xchg
out
call
rclb
addr16
out
fwait
add
fcoml
sub
jb
fimull
int3
xlat
add
adc
aas
push
loopne
xor
hlt
stos
and
cli
in
cmp
add
jl
out
mov
dec
inc
jp
clc
xchg
cmp
jp
fimull
mov
stc
das
test
in
pop
ljmp
loopne
add
loopne
lods
pushf
outsb
or
and
sub
test
adc
ret
repz
xor
or
cmpsl
dec
lods
imul
je
xchg
sub
js
or
sub
lds
je,pn
rcr
xchg
test
and
enter
jo
xchg
flds
lcall
fbld
cmp
fwait
imul
int3
in
adc
js
add
cmp
xchg
sbb
add
lods
fldenv
rcrb
and
fildl
lds
cmp
cmp
jb
mov
and
ret
xor
mov
loope
les
test
je
mov
xor
sarb
cmp
mov
repz
repnz
in
imul
mov
loope
inc
jns
mov
cmp
test
in
ret
sbbl
mov
push
mov
testb
fstp
hlt
xor
xorl
lret
outsl
add
or
mov
adc
xchg
movsb
stos
je
pop
pop
mov
pop
sbb
sahf
pop
shll
cmp
add
jecxz
cmp
fldl
xor
and
add
mov
xor
pop
testl
enter
push
mov
or
das
mov
movsl
js
mov
jge
and
lret
xchg
add
xchg
insb
pop
cmp
scas
add
xchg
into
out
dec
mov
bound
jmp
adc
shr
mov
mov
or
xlat
scas
loope
repz
daa
aad
out
mov
dec
stos
rol
mov
je
fnclex
inc
das
push
sbb
inc
cmp
pop
nop
insl
xor
xor
ror
inc
mov
sbb
popa
addl
adc
js
sbbl
out
loope
ljmp
sbb
arpl
fwait
das
sbb
aaa
xchg
imul
push
aam
mov
rolb
jmp
dec
js
jp
sub
daa
push
xor
mov
dec
xor
push
push
iret
call
insb
or
xlat
in
add
push
or
clc
fisttpl
xorl
mov
hlt
stc
pop
xchg
push
jp
je
cs
cmpsl
aaa
add
mov
add
lret
add
mov
repz
dec
enter
mov
int
cmp
pop
scas
mov
imul
imul
jecxz
std
sbb
mov
xchg
sbb
adc
push
inc
adc
push
jl
fcmovnu
es
ficomps
test
pop
jns
mov
or
mov
mov
jae
mov
jmp
pop
out
or
cmp
jbe
test
push
pop
mov
leave
out
push
lahf
jbe
movsl
inc
daa
lds
mov
lods
addr16
adc
daa
mov
shrl
xchg
ret
ffreep
push
push
scas
clc
das
pop
jne
xor
mov
sbb
mov
adc
stos
ret
xor
outsb
lcall
sar
filds
hlt
or
ret
sbb
outsb
leave
dec
in
mov
push
jae
inc
mov
cmp
mov
lahf
in
jnp
jo
js
jge
cmp
sbb
cmc
sub
xchg
bound
int
cmp
jg
pop
in
loop
ds
daa
insl
inc
mov
mov
jb
stos
loope
mov
loope
mov
mov
add
aas
int
mov
inc
adcl
push
addb
enter
pop
jne
in
pushf
test
xchg
inc
test
lds
mov
sbb
push
je
fldl
dec
pop
das
subl
adc
xchg
inc
and
dec
dec
fs
shrl
hlt
and
cld
mov
dec
fucom
dec
push
rcr
jbe
movsb
test
adc
ret
ret
dec
xchg
mov
mov
pop
mov
rolb
lods
jl
xchg
stc
push
push
ret
xor
es
mov
int
mov
out
dec
and
or
or
std
or
xor
clc
pop
sahf
outsb
and
adc
pop
fwait
xlat
outsl
in
pop
fxch
adc
pushf
test
rorb
push
inc
sarb
mov
cmpsb
push
mov
dec
mov
cmp
sbb
jno
mov
repz
in
sbb
dec
xlat
cmp
cs
icebp
cmp
push
arpl
xor
out
xchg
cs
mov
dec
addr16
out
test
pop
inc
mov
inc
in
cmp
ret
outsl
mov
iret
rep
pushaw
mov
sub
sti
xor
shll
jae
cwtl
pop
jg
push
jmp
pop
orb
lret
mov
stos
bound
cmp
adc
jmp
or
mov
dec
xor
dec
jbe
testl
les
bound
cli
fistl
fidivs
adc
insb
in
add
push
into
or
and
ja
push
inc
push
in
iret
dec
mov
insl
pop
mov
push
cmp
pop
jo
cld
fs
das
stc
xchg
ss
or
data16
adc
fists
or
jne
lcall
xchg
mov
popa
cmc
leave
pushf
jnp
int3
cmp
add
ret
cmpsb
adc
pop
data16
xchg
loope
pop
xor
xchg
test
sahf
push
imul
clc
or
sbb
nop
cli
mov
and
sbb
mov
jl
leave
xor
and
sbb
sbb
adc
pop
add
sbb
xor
in
jo
push
daa
jo
scas
inc
lahf
sbb
inc
enter
js
daa
mov
cmp
movsb
xchg
enter
ja
mov
and
or
ds
je
in
mov
xchg
inc
enter
mov
push
ret
orl
cli
pusha
test
adc
in
pop
scas
cwtl
add
mov
dec
iret
icebp
and
minps
sub
push
inc
xor
sbb
and
jle
out
xor
sub
and
cmpsl
and
adc
hlt
lods
and
call
insl
data16
or
and
int3
inc
sub
add
test
mov
jecxz
leave
cmp
mov
es
sub
out
pop
fisttps
mov
adc
or
lcall
clc
frstor
ds
cmp
pop
mov
out
xchg
or
outsl
loop
popa
das
lea
xchg
out
loopne
stc
fnstenv
xchg
icebp
xor
fiaddl
das
sbb
add
mov
rcll
js
sub
mov
fdivrs
loope
lret
push
cmpsb
imul
xchg
test
call
sar
push
inc
mov
and
into
int
xor
dec
push
lcall
push
jmp
or
cltd
sbb
dec
mov
outsb
mov
dec
pop
js
addr16
push
mov
ficompl
or
scas
jl
inc
fcomp
pop
jg
shrl
cld
cltd
imull
pop
out
inc
adc
mov
cli
lcall
outsb
pop
ret
repz
push
pushf
or
frstpm(287
jo
xor
leave
or
dec
mov
adc
data16
arpl
aas
in
loopne
pop
cmpl
test
popa
dec
xor
popa
mov
repz
testl
rcrb
jnp
add
pushf
loopne
rcrb
pop
test
dec
dec
ja
ffree
add
jmp
das
mov
inc
mov
push
fisubl
jne
pop
dec
cmp
jg
mov
scas
xor
xchg
xor
jns
mov
ja
mov
subl
sbb
sbb
in
outsb
test
and
dec
push
mov
loopne
lock
dec
out
adc
adc
sbb
leave
cmpsb
addl
dec
in
hlt
imul
pushf
movsl
add
sbb
pusha
mov
and
sbb
pop
repz
stos
and
add
lret
jg
lds
movsb
pop
aam
mov
mov
jmp
xchg
cmp
cmp
push
aad
sbb
dec
mov
inc
dec
repz
sbb
ja
adc
cmp
and
or
pop
shll
push
adc
std
fistl
test
xchg
cmpsl
cwtl
fistpll
mov
lods
test
mov
lret
inc
in
pop
insl
sbb
jg
in
ds
mov
pop
inc
inc
pop
bound
in
loop
push
mov
mov
aad
mov
xor
arpl
jo
push
icebp
lcall
lea
push
xor
add
in
ret
outsb
or
std
cwtl
movsb
rcrl
inc
loop
pop
movsb
fisttpl
je
rsm
pop
or
cmp
pop
adc
xor
loopne
push
rcr
loopne
test
push
jle
inc
pushf
scas
psrlw
fistl
lods
mov
in
hlt
mov
mov
mov
xchg
sbb
daa
mov
pushf
mov
adc
push
mov
adc
and
jle
xor
and
aad
in
test
shll
insl
push
ds
out
xchg
gs
in
xor
cmpb
stos
in
loop
push
lea
les
or
pop
fisttps
pop
loop
cmpsl
aaa
xor
dec
mov
bnd
cmp
stos
inc
and
hlt
jne
dec
sti
sub
mov
mov
and
xchg
fucomip
cmp
pop
enter
divb
aas
mov
outsb
movaps
adc
cmp
fistl
jl
mov
adc
lods
sbbb
push
inc
mov
test
dec
dec
cmp
push
and
in
mov
push
add
inc
nop
xchg
cmp
push
stos
gs
mov
mov
int
cmp
in
mov
add
jmp
jmp
std
out
int
aam
fwait
leave
add
test
gs
sbb
mov
mov
push
fs
popa
in
xchg
aad
out
adc
jae
adc
mov
data16
stos
cmpsl
push
jnp
xor
aas
push
mov
mov
pop
ljmp
inc
or
pop
arpl
push
cmpl
add
lock
fsubs
icebp
arpl
or
nop
xchg
mov
idiv
cmp
ficomps
cmp
mov
jl
lods
dec
pushf
fldenv
xor
lods
or
cmp
out
repz
and
xchg
loop
add
sti
dec
jp
mov
cmpb
int3
aad
and
mov
out
adc
fistpl
mov
dec
mov
lcall
pusha
add
xor
dec
bound
xlat
mov
push
push
dec
jecxz
cltd
cltd
dec
jns
inc
daa
clc
mov
in
ret
jno
and
inc
sahf
pop
push
aam
mov
push
and
outsb
les
mov
xchg
sbb
inc
cmp
sbb
test
fwait
dec
cmpsb
push
out
jae
xor
push
add
mov
cmp
les
pop
test
incb
ja
popf
les
nopl
test
stc
mov
mov
mov
loope
std
jg
daa
cs
inc
cmpsb
inc
sub
pop
xchg
repnz
push
frstor
mov
pop
xchg
cmp
dec
outsl
xor
cmp
mov
xchg
fs
jo
loop
aas
push
add
sbb
cmp
mov
jmp
aad
pop
clc
pushl
pusha
mov
int
scas
movsl
dec
fldt
mov
adc
das
mov
arpl
push
jmp
aas
nop
sub
push
jbe
fwait
push
les
mov
or
adc
data16
mov
loope
js
in
lret
nop
jae
lea
sub
lcall
ret
push
cltd
ds
cli
out
mov
and
test
and
xchg
lcall
or
pop
or
lock
sub
or
jae
ror
popf
cld
mov
fidivrs
push
in
cmpsl
push
dec
out
adc
in
fs
shlb
xchg
cli
sbb
and
adc
cld
ja
test
and
shlb
xchg
fs
scas
icebp
xor
clc
sub
mov
push
int3
cld
into
push
and
inc
adc
sbb
mov
repz
pop
adc
inc
sub
and
subps
adc
mov
lea
nop
out
aas
push
jge
mov
inc
push
jbe
xchg
fsubrs
out
dec
jo
out
cmp
into
insb
add
jecxz
movl
jbe
fidivl
mov
mov
call
add
fidivrl
mov
nop
xchg
test
pop
in
roll
sti
gs
das
sbb
test
jno
mov
cwtl
faddl
shrb
jmp
add
test
xor
pop
mov
mov
pop
gs
sbb
and
sbb
push
mov
imul
cmpsb
out
push
orl
lods
out
aam
xchg
aaa
xlat
sub
loope
jnp
inc
js
rcrl
fmuls
or
xlat
stos
mov
pushf
xor
ss
push
sbbb
mov
mov
cmpsl
jmp
or
cmpl
xor
shrl
leave
dec
data16
push
out
mov
mov
loopne
sbb
xchg
into
or
fnsave
hlt
repz
loopne
or
mov
jle
test
sbb
fidivrl
lods
pop
adc
out
push
in
pop
int
add
cltd
pop
or
xlat
add
mov
push
stos
mov
movsb
mov
imul
mov
inc
out
mov
push
test
push
push
xlat
cmp
dec
cs
je
outsl
in
cmpsb
mov
dec
xor
sbb
loopne
xchg
movsb
movsl
sbbb
fsubrl
addr16
iret
mov
gs
mov
jecxz
lds
xchg
mov
cmpsb
pushl
and
xorb
and
push
cmp
rclb
psubusb
sub
xchg
and
lcall
sub
mov
in
adc
sub
adc
and
cmc
xlat
sub
mov
data16
push
in
test
xor
imul
jns
push
or
mov
mov
and
lret
push
mov
push
in
aaa
xor
or
xchg
bound
pushf
xor
pushf
mov
or
das
cmp
jg
or
sbb
sub
mov
push
mov
adc
lahf
out
cmpsb
or
les
dec
pop
sub
push
in
dec
es
shrb
xchg
jp
je
inc
loop
xor
xchg
mov
insl
outsl
rol
iret
sarb
add
icebp
and
out
push
ljmp
pop
paddsw
into
sahf
jle
addb
push
test
cs
add
out
pop
lods
fcomip
jmp
cmpb
aad
jo
xchg
rcll
sbb
inc
aas
frstor
push
pop
adc
jg
cmp
cmp
dec
sahf
imul
push
pop
xchg
nop
cmp
lea
mov
or
shrb
jl
or
shrl
hlt
mov
ds
je
sub
jmp
inc
push
xadd
adc
mov
icebp
in
adc
inc
lret
int3
sub
xchg
push
add
cmp
adc
in
mov
sbb
and
adc
or
jno
in
sub
stos
ja
mov
outsl
mov
out
xchg
jge
enter
xchg
fsub
cld
in
mov
inc
sbb
stos
mov
push
in
and
mov
push
jp
std
pushf
fildll
flds
mov
add
mov
mov
mov
pop
lret
mov
xchg
scas
hlt
xchg
or
out
into
jno
mov
sbb
orl
mov
pop
and
test
jbe
mov
in
dec
add
jne
and
inc
and
mov
movsl
imul
mov
lods
cs
jo
test
outsb
js
push
inc
mov
and
jnp
mov
pop
push
dec
sbb
jno
fwait
rorb
test
js
call
jmp
push
sti
dec
lods
hlt
dec
imul
outsl
mov
fistps
push
iret
dec
cmp
xchg
aam
addl
xchg
inc
jno
sarl
cmpsl
pop
popa
xor
test
repz
nop
xorl
xor
loope
pop
or
mov
inc
xchg
jbe
or
xchg
nop
cmp
test
push
pop
hlt
in
cmp
imul
mov
push
loope
repnz
xor
out
xor
jns
pop
xor
fwait
jge
push
jl
sbb
insl
mov
out
jbe
ljmp
aaa
sbbb
sub
jp
dec
repz
jle
jnp
sbb
and
lds
lret
addr16
sarl
mov
sti
add
and
hlt
aam
sub
iret
ljmp
xor
cmp
repz
lock
pop
pop
lds
lods
das
sub
add
push
or
cli
dec
mov
add
mov
mov
decb
pop
mov
lret
jnp
outsb
mov
add
dec
or
cmp
out
hlt
je
fisttpll
pop
subb
popa
jo
inc
adc
fstpl
push
test
mov
mov
xchg
xchg
sbb
sti
filds
les
jbe
adc
dec
mov
mov
out
insl
mov
rolb
call
ljmp
xor
fsubrs
popf
stc
cmp
mov
xor
lcall
dec
and
or
sbb
ja
xchg
out
lds
scas
aaa
les
test
stc
adc
xor
sbb
rol
test
test
cltd
add
bound
lock
or
lds
mov
adc
and
push
int3
inc
push
ror
ret
jns
jns
imul
pop
daa
add
inc
les
lds
jmp
sbb
add
arpl
xchg
pop
and
out
dec
lret
fld
xor
mov
imul
mov
xor
test
xchg
xchg
mov
pop
movsl
insl
cli
les
mov
xabort
je
fxch
ror
rorl
xor
roll
aam
lods
orl
mov
pop
and
inc
push
push
ss
bound
adc
mov
pop
rorl
pop
scas
mov
lock
jns
fcmovne
lret
adc
pop
fcomps
pop
mov
pop
loopne
outsb
les
roll
arpl
xlat
jmp
cld
shlb
pop
in
das
inc
loop
sbb
les
test
rorb
jbe
adcl
cmc
enter
call
mulb
xchg
test
adc
cmp
sbb
js
subb
lcall
adc
sub
enter
aas
cmp
aaa
into
mov
test
xchg
lock
fwait
scas
nop
mov
sbb
inc
xor
arpl
fwait
into
in
sub
xchg
out
or
pop
popl
loope
sbb
imul
js
xchg
std
push
imulb
xchg
xor
repnz
mov
add
xchg
out
icebp
subl
cmpsl
div
es
mov
movsl
and
or
push
loope
popf
int
xchg
mov
pop
add
jecxz
jle
movsb
jo
sbb
push
leave
mov
bnd
ljmp
stos
stc
sbb
fdecstp
test
dec
loop
xor
xchg
xchg
in
lods
adc
int3
int
repnz
pop
jle
dec
xor
adc
loopne
inc
adc
xor
or
xor
adc
jecxz
lods
mov
mov
iret
scas
mov
mov
push
imul
or
mov
adc
adc
fistpll
adc
mov
out
push
iret
int3
adc
mov
jg
repnz
cs
gs
and
popf
imul
fdiv
cs
sbb
in
inc
add
aaa
popl
adc
ja
dec
pop
cmp
scas
lea
loop
inc
insb
adc
sbb
xchg
push
sub
sub
daa
mov
mov
jae
je
fisubs
stos
jo
sub
xchg
popf
mov
sbb
or
in
scas
movsl
test
outsb
jno
lahf
xchg
add
mov
inc
imul
dec
push
cmp
inc
addr16
fldcw
fsubs
cs
push
jne
cmpsl
je
cmpl
adc
jno
imul
out
std
mov
roll
rcrl
cmp
loopne
pop
fsubl
bound
xor
push
pop
mov
ds
push
orl
iret
das
dec
lods
sbb
es
data16
insb
xchg
xchg
jae
fcompl
out
add
pop
clc
adc
mov
dec
lods
and
sub
js
mov
pushf
int
data16
mov
nop
and
lret
sbb
jle
jl
pop
cmp
mov
push
adc
mov
mov
leave
lahf
mov
int
test
push
push
xchg
or
dec
cmp
dec
mov
inc
mov
sub
imul
xchg
xchg
jge
sbb
cli
iret
mov
test
dec
sti
dec
dec
mov
insb
mov
push
fimull
xchg
fisttpll
mov
data16
pop
push
aas
push
std
sbb
push
fbstp
shlb
lcall
rorl
sub
push
cmp
ja
mov
pop
test
gs
addr16
lret
cltd
xor
cmp
sub
lret
mov
scas
aas
inc
or
adc
int
cmpsb
aaa
call
insb
mov
cmpsb
incb
popa
sti
inc
movsb
insl
out
ja
decb
pusha
in
mov
lea
cltd
sbb
ja
lods
mov
stos
jb
add
ret
rol
iret
test
insl
fsubs
aas
pop
stc
adc
loopne
cmpsb
inc
xchg
mov
in
cs
push
ret
pop
lcall
shll
int
lret
and
lcall
sub
cmc
ja
jl
mov
mov
lods
adc
push
dec
imul
pop
leave
cmp
fdivl
imul
ficoml
ss
out
dec
pop
mov
xor
pop
jns
adc
mov
or
mov
pop
xchg
je
cmp
aam
enter
mov
popf
mov
push
js
jae
int3
jne
sbb
jno
jp
mov
mov
cmc
push
jnp
fldenv
lods
inc
dec
pop
jbe
mov
mov
out
adc
mov
rcl
inc
jecxz
or
addl
push
into
pop
and
stc
sbb
rol
adc
sub
cmpl
inc
test
popa
xor
cmp
mov
add
dec
xorl
xor
xlat
outsb
gs
jge
sub
push
pop
imul
leave
je
rcrl
xor
sbb
inc
dec
dec
jno
in
inc
shlb
jo
jno
mov
fstps
cmp
jae
out
mov
inc
mov
inc
push
or
xchg
in
adc
dec
or
loope
xchg
dec
loop
or
ljmp
lds
bound
pop
xor
push
pop
bound
mov
imul
subl
inc
leave
jp
scas
das
xlat
sbb
ss
hlt
dec
fwait
mov
lods
inc
pop
ror
push
into
insb
out
push
aaa
stc
cmp
and
sub
sti
lcall
mov
and
mov
push
add
or
push
cli
mov
inc
xor
jmp
dec
arpl
mulb
dec
sbb
stc
out
aam
aam
mov
fiaddl
movl
mov
or
cmpsl
aaa
sarl
in
push
mov
lcall
sub
xor
loop
jle
jge
sti
add
adc
dec
rcr
mov
and
xchg
nop
push
mov
jmp
hlt
cmp
jle
stc
dec
inc
popa
rol
add
xor
mov
scas
pmovmskb
pop
ljmp
nop
push
cmpsl
cmpsb
fwait
inc
imul
dec
repnz
inc
and
jg
inc
shl
daa
pop
lahf
mov
and
jns
inc
inc
push
sub
rclb
sub
enter
pop
or
shlb
daa
dec
inc
fisttps
mov
nop
push
add
in
jg
push
movsb
xchg
rcrl
fsubp
mov
mov
int
mov
pop
mov
jo
or
dec
test
push
mov
cwtl
inc
aam
or
add
inc
or
jge
xchg
push
rcll
lds
out
lcall
icebp
sbb
test
sbb
cmpsl
loop
outsb
add
cmp
das
xor
scas
ja
pop
sbb
mov
jl
jg
mov
pop
cmp
lcall
ljmp
sbb
nop
push
add
and
add
jbe
mov
push
sbb
adc
iretw
subw
sahf
cmp
test
lds
aaa
jmp
inc
jno
adc
mov
and
cwtl
mov
xchg
sbb
cs
pop
loop
sub
call
mov
adc
pop
les
inc
pusha
jnp
clc
lock
and
movb
xchg
daa
xchg
popa
mov
push
pop
and
int3
mov
mov
shll
insb
rorl
pop
orl
adc
out
xor
cmpl
outsb
sbb
insl
mov
mov
lahf
idivl
scas
std
repnz
inc
sub
nop
loope
xor
mov
push
mov
loop
xchg
dec
inc
and
fisubl
fwait
adcl
push
jle
dec
xor
inc
inc
clc
xchg
fcompl
mov
in
test
inc
in
imul
jne
call
jp
ds
lahf
push
cmp
test
movsb
repz
pushf
in
jno
xor
pop
mov
gs
mov
out
insb
mov
aam
std
and
lret
cmp
xchg
sbb
or
mov
negb
cli
cmp
or
and
and
imul
das
ret
and
movsl
in
xlat
push
cld
mov
icebp
scas
xor
sbb
sahf
inc
dec
cltd
jle
jb
push
lods
xchg
or
and
loope
das
popf
jge
popf
xchg
stos
pop
data16
push
add
out
sub
repnz
call
call
xchg
xor
jns
sub
pop
mov
cmp
sub
fwait
sahf
pushf
mov
inc
pop
call
dec
xchg
arpl
mov
push
xchg
dec
mov
dec
jns
xchg
mov
adc
push
shlb
sub
inc
xlat
cmp
jo
in
sbb
shlb
ret
test
mov
ds
xchg
push
loopne
jl
mov
jno
cmc
cmp
pop
fmuls
stc
pop
lret
add
pop
mov
inc
mov
sub
push
int
insl
dec
inc
inc
xchg
sub
lods
test
outsl
mov
inc
add
push
lcall
popa
dec
jns
daa
lds
xor
arpl
cld
mov
push
fisubl
in
pop
aaa
pop
add
jno
adc
fsubs
popf
loopne
aam
lcall
fstl
lcall
mov
lock
inc
add
ret
lea
push
jne
jp
in
lsl
xorb
mov
lods
movsb
scas
mov
cmp
jmp
jo
sbb
das
test
enter
lods
ljmp
push
pop
lea
or
sbb
dec
and
das
out
jns
fmul
sbb
pop
push
and
mov
ljmp
ret
cld
stos
lret
gs
xchg
stos
dec
lcall
adc
and
push
pop
mov
mov
add
push
and
lods
jecxz
cltd
cmc
and
add
stos
pusha
push
pop
jmp
fcom
dec
int
aam
orb
jne
xchg
out
sub
imul
inc
mov
xchg
mov
push
or
and
and
sub
ret
mov
jmp
loope
dec
mov
cs
sbb
add
push
xchg
rcr
adc
mov
lcall
lea
into
inc
mov
lret
and
cmp
nop
rcrb
shl
xchg
xchg
fnstsw
fs
sarb
aam
pushf
add
out
out
mov
mov
cmpsb
and
nop
cmp
jmp
lds
cs
ret
mov
adc
sbb
pop
scas
xchg
mov
pop
add
adc
imul
movsl
push
xlat
lret
jl
mov
jle
vcmppd
aad
and
mov
add
ja
popf
in
mov
int3
cmp
and
ficomps
jmp
cwtl
sub
inc
mov
sti
jb
push
pushf
xor
mov
call
jae
xchg
push
cmp
mov
adc
sbb
aas
pop
fsubs
fistl
imul
mov
nop
sarl
bound
push
popf
push
in
pop
push
lcall
adc
icebp
repz
movsl
dec
js
sbb
test
adc
mov
or
insb
sbb
pop
pop
xchg
or
repnz
cmpsb
dec
mov
push
push
aaa
sub
notl
ds
xchg
ds
test
mov
dec
xchg
add
loop
mov
push
out
and
movsl
popf
shld
xchg
mov
cmpb
mov
sbb
adc
lcall
sbbb
push
les
negb
notl
push
aad
xor
repz
popf
sbb
sub
cmp
push
mov
fbstp
add
xchg
pop
mov
and
cltd
sti
outsb
jb
xlat
push
sahf
in
or
in
insl
pop
inc
gs
cs
cltd
cmpsb
or
mov
jge
call
or
adc
inc
flds
dec
pop
les
inc
cmp
arpl
jnp
mov
push
dec
rol
aam
jle
sub
in
cltd
jo
adc
mov
add
inc
insl
pop
push
pop
push
mov
push
lahf
inc
lods
adc
inc
and
call
fs
push
mov
mov
movsl
filds
add
mov
push
xchg
xchg
xchg
and
mov
out
arpl
lahf
mov
sub
jp
aaa
fstl
push
repnz
ret
sbb
out
sub
in
not
mov
jne
jge
sub
jle
push
add
mov
insl
add
mov
mov
jp
cmp
test
xor
test
jnp
push
add
ja
lret
push
inc
xlat
test
out
xor
mov
mov
lods
movsb
sbb
or
xor
sbb
insb
add
in
pop
cmp
jb
lahf
push
mov
rcrl
pop
ret
mov
mov
mov
inc
pop
faddl
pop
sti
ds
mov
shlb
fists
cmpl
in
dec
mov
pop
mov
fldt
aam
dec
mov
dec
addl
fimuls
iret
fidivl
inc
add
stos
sbb
xchg
repnz
lea
cmp
es
mov
jmp
push
mov
sub
outsl
repz
fidivrl
adc
out
push
push
std
push
cwtl
push
scas
fwait
jno
push
rclb
push
cmp
pop
mov
xchg
mov
push
cmpl
hlt
pop
movsb
mov
cmp
movsl
mov
imul
mov
push
jne
adc
addr16
and
add
sbb
jbe
aam
bound
lea
mov
in
dec
idivb
and
adc
cmp
je
jp
jecxz
cs
mov
pusha
inc
mov
xlat
shll
jmp
test
xor
add
les
pop
pop
push
cmc
inc
xor
les
or
cmpsb
jg
sbb
jns
fiadds
outsl
sbb
into
sbb
adc
int
push
lods
cwtl
mov
mov
or
fsubs
xchg
and
fistps
iret
sbbb
jge
push
test
push
ds
rorb
mov
xor
xor
cs
je
lret
dec
ljmp
in
mov
in
outsb
jae
sub
mov
lret
xchg
mov
adc
jge
xchg
lahf
inc
je
test
testl
dec
jb
cmp
pop
or
xor
cmp
push
cmp
cmc
leave
fisttpl
popa
clc
movsl
push
movsl
ljmp
add
cld
lods
in
jne
pop
rcrl
popf
inc
mov
mov
inc
fidivrl
xor
adc
addl
flds
sarb
imul
pop
repnz
xchg
mov
stos
and
lret
xchg
sub
cmp
fists
jl
cltd
xor
arpl
jns
scas
mov
add
popa
sti
xchg
lock
xchg
outsb
mov
pop
daa
inc
repz
sbb
adc
mov
test
mov
add
scas
decb
lods
movsb
or
or
or
mov
jmp
add
insb
and
add
lods
xchg
arpl
mov
inc
xchg
jo
int3
sub
add
mov
adc
aaa
dec
out
mov
rol
pop
xlat
mov
pop
mov
lods
inc
push
push
xorb
xchg
roll
popf
repz
jnp
jns
dec
push
pop
adc
or
mov
loope
movsb
lret
addr16
cmp
mov
push
add
cmp
fists
inc
sub
out
iret
lods
or
pop
adc
push
jecxz
lods
xor
mov
nop
test
push
xor
das
cmp
fs
or
mov
mov
mov
push
shrl
adc
dec
ds
sub
bnd
js
js
mov
sbb
push
jb
movsl
roll
xchg
jge
jns
test
push
out
mov
push
adc
stos
hlt
and
jp
mov
aaa
fldl
cwtl
int3
mov
jmp
mov
add
les
mov
cmpl
adc
mov
pop
std
pop
and
negb
cmp
mov
addl
pushf
out
add
pop
mov
vmovdqa
aaa
test
push
jnp
xchg
dec
icebp
mov
and
dec
scas
sub
inc
add
push
jmp
dec
pop
jecxz
xchg
or
xchg
sub
push
popa
mov
push
mov
xor
icebp
aaa
int
sbb
sbb
pop
ficompl
jecxz
push
inc
lcall
push
push
xchg
mov
push
jo
pop
mov
mov
sbb
cmpb
mov
mov
xor
test
jmp
mov
xchg
cmp
jmp
in
push
out
cmp
push
mov
cmp
daa
fwait
inc
push
mov
xor
std
mov
adc
stos
mov
and
movsl
xor
imul
xchg
addr16
mul
ljmp
mov
sbb
dec
test
adc
negl
sub
shll
add
pop
jl
xor
repnz
xor
or
dec
lret
lods
mov
adc
xchg
or
push
inc
in
popl
pop
into
cmp
out
push
add
sti
xorl
stc
xor
pop
stos
cmpsl
cmp
mov
xlat
fistl
fiadds
pop
mov
or
mov
dec
pop
xchg
mov
dec
inc
pop
add
jmp
mov
cmc
adc
bound
jl
sub
or
cmp
int3
pop
mov
or
in
cmp
jnp,pt
pop
dec
dec
aas
mov
sarl
or
scas
rcrb
lods
xor
ret
mov
mulb
int
xchg
int3
out
add
imul
ret
adc
add
out
mov
xor
dec
add
mov
data16
fisttpll
insl
xor
jnp
lahf
jb
mov
call
jns
dec
xchg
js
mov
sbb
ss
cmp
test
pop
leave
shlb
jmp
cmpsl
xchg
dec
cmc
sub
cmp
or
imul
fwait
repnz
mov
mov
in
icebp
mov
xchg
and
addr16
cli
or
mov
out
data16
cmp
mov
es
dec
lret
jnp
xchg
add
mov
out
mov
xorb
pop
gs
mov
xchg
imul
cmp
loope
lea
loop
jno
mov
mov
or
xor
into
xor
sti
dec
loop
dec
jmp
test
jns
adc
inc
subl
fsubr
jg
aas
in
jge
outsl
jb
xor
ret
arpl
add
sbb
ret
shll
sbb
imul
mov
jp
jo
out
scas
mov
movsl
sbb
mov
daa
loope
sub
js
xchg
popf
lock
loopne
shl
rorl
dec
scas
loop
testb
push
push
popf
push
push
mov
lods
jno
add
lret
out
or
pop
and
call
inc
mov
mov
sbb
jns
ds
xchg
addr16
mov
adc
push
out
push
lock
out
or
jp
icebp
scas
push
in
js
sub
mov
stc
push
or
xor
jl
push
cmc
cwtl
in
cmp
sbb
mov
mov
pop
into
dec
lcall
mov
int3
sti
loope
jecxz
jl
notb
pusha
out
into
push
nop
dec
loope
push
bound
adc
push
mov
int3
dec
out
or
loop
enter
ret
das
and
loop
jecxz
pop
jb
pop
jecxz
mov
fildll
aaa
rorb
mov
test
mov
dec
xor
jmp
push
dec
testl
push
xor
pop
fsts
fsubrp
or
and
icebp
or
mov
lock
and
dec
int3
arpl
sbb
out
mov
cltd
sub
sti
lahf
and
dec
outsb
lds
lret
ret
in
mov
push
loope
jne
pop
mov
insl
out
dec
jmp
rcrl
cwtl
mov
xor
out
lcall
push
movsb
xlat
fimuls
push
lock
insb
push
push
out
xchg
cwtl
jno
pop
rcr
ss
ljmp
jns
jecxz
inc
mov
pop
inc
cwtl
cmpsl
sbb
popa
addr16
jb
test
lds
dec
cmp
fistl
sbb
sbb
insb
cmc
xorl
imul
lret
in
pop
rcl
imul
outsl
fsubl
out
inc
inc
in
sbb
cmpb
aam
lahf
jp
lds
mov
cld
loope
test
mov
mov
es
std
addl
mov
adc
push
cmp
sahf
cmp
shrl
inc
adc
stc
std
cmp
movsl
scas
dec
loop
lret
cmp
pop
loop
jge
test
push
stc
inc
pop
adc
dec
push
loopne
inc
clc
jno
std
add
dec
dec
mov
pop
js
sub
lret
add
sbb
ljmp
ds
cs
sahf
jg
fsub
jb
stos
pop
xlat
mov
out
push
mov
in
cmp
fs
iret
add
jo
inc
pop
mov
sbb
test
lret
ljmp
cs
fimuls
xor
cltd
push
movsl
inc
bound
fisubrs
rol
in
mov
inc
pop
scas
test
ret
dec
bound
arpl
shrl
sbb
cli
nop
mov
cli
repnz
dec
jnp
lret
in
movsb
xchg
push
inc
cmp
jge
icebp
rclb
mov
mov
aaa
js
mov
imul
insb
pop
inc
fists
adc
jge
pop
test
pop
xor
or
inc
adc
fsubrl
mov
rolb
imul
inc
dec
lahf
push
mov
push
xchg
cmp
sub
mov
add
inc
cmp
cmp
jmp
dec
xchg
insb
insl
push
data16
lret
push
stos
aaa
test
and
fiadds
cmpl
mov
movsl
push
mov
adc
sub
in
xor
pop
sbb
sarb
stc
addl
mov
shrl
mov
das
adc
add
mov
subb
mov
sub
jo
mov
mov
lock
push
sub
jg
cld
push
cli
sbb
dec
and
fsubs
or
jns
ret
mov
xrstors
sub
add
lea
cwtl
adc
cmp
cmp
jns
xchg
outsb
adc
mov
out
xor
mov
mov
pop
shl
test
jg
jb
jl
lret
pushf
rclb
test
and
inc
fmull
push
or
xlat
outsb
rcr
lret
lahf
adc
pop
fnsave
mov
pop
push
dec
flds
mov
ret
addr16
mov
mov
or
xchg
test
inc
enter
xchg
or
pop
push
cltd
dec
mov
iret
jp
and
mov
mov
mov
cli
in
push
mov
mov
push
or
cmpl
stos
das
fldcw
push
mov
sub
jl
scas
cmp
mov
xchg
push
xchg
adc
xchg
jno
jne
ljmp
insl
out
fs
inc
repz
xor
pop
sbb
faddp
flds
xchg
sar
ja
or
adc
ja
and
mov
and
push
movsl
stos
pop
dec
adc
sub
lods
cli
push
mov
idiv
add
inc
push
push
and
jle
and
jnp
scas
inc
loope
mov
inc
xchg
jle
and
aad
push
icebp
adc
xor
aad
cmpsb
pop
mov
data16
mov
je
xchg
lods
test
xor
mov
fwait
mov
mov
push
xor
jmp
stos
js
push
iret
push
adc
add
dec
pop
int3
cmpsb
ja
cmp
mov
cmpsl
cld
cmp
ret
out
mov
push
cld
cmp
mov
xor
and
mov
dec
into
int3
dec
ja
out
push
fdivrp
sbb
sub
aad
mov
mov
push
loope
jne
xchg
and
cld
push
mov
loope
inc
xchg
out
jo
adc
rcr
mov
inc
and
stc
or
xor
pop
das
int3
lea
and
lods
lods
jae
mov
orb
xchg
lods
pop
dec
out
fldt
jmp
jne
sbb
ss
divb
mov
ret
imul
jb
dec
test
push
cli
mov
andb
mov
adc
cmp
negl
or
lcall
mov
ss
push
icebp
sbb
xor
lock
add
or
in
daa
inc
fisubs
sarb
push
lds
or
xchg
push
arpl
pop
pop
jecxz
lret
or
js
jnp
jns
hlt
cmp
mov
pop
ss
push
push
mov
mov
dec
add
mov
in
push
mov
stc
sahf
cmpsl
inc
add
dec
testl
sub
pop
insl
mov
inc
aas
or
sub
cli
jmp
pushf
xchg
ret
nop
push
cmp
iret
in
fwait
cmp
and
or
gs
cmpsb
jnp
dec
cmpsl
dec
sub
mov
xchg
adc
inc
cmp
repz
sbb
sbb
inc
lcall
xor
inc
jb
loopne
jae
int3
inc
or
test
es
outsb
mov
jp
stos
sub
fcomp
add
cmpsl
dec
fnstenv
js
adc
imul
mov
pushf
insb
out
dec
ss
in
in
sbb
dec
add
idivl
sbb
push
in
push
sub
shl
mov
cmpsb
inc
pop
ja
aaa
fs
inc
push
lret
pop
mov
lods
daa
mov
mov
inc
xor
fnsave
add
mov
fcmovnbe
ljmp
pop
fstl
lock
gs
inc
loope
repnz
xchg
xchg
jne
adc
lcall
nop
in
mov
enter
adc
pop
adc
sbb
ds
adc
inc
push
frstor
call
lea
test
pop
xor
pop
add
mov
rcrb
lods
test
sar
mov
pop
hlt
push
loop
add
in
and
or
mov
pop
push
jl
jb
idivb
icebp
scas
jp
int3
loopne
incb
ljmp
fxch
or
movsb
test
jge
ja
repz
mov
adc
movsb
push
cltd
lahf
mov
sarb
jmp
sbb
sub
in
cmp
mov
dec
xchg
lret
jecxz
outsb
cmpsb
js
mov
push
int3
lret
and
lahf
mov
shrb
fbld
sub
lock
or
add
inc
xor
sub
mov
xor
push
mov
fdivrl
mov
inc
pop
adc
fisubl
pop
mov
jmp
fldt
jns
cmp
mov
push
sbb
cmovnp
fstpt
mov
sbb
pop
or
fnstcw
stos
sbb
lods
ja
hlt
ja
lret
cmc
out
fwait
xchg
ja
sub
adc
lock
int3
inc
cltd
or
mov
bound
add
sub
pop
pop
mov
sti
sahf
dec
lds
pop
mov
lds
clc
mov
mov
dec
push
clc
pop
pop
mov
xchg
mov
rorl
pop
mov
sbb
jge
and
sub
mov
sub
dec
or
jecxz
xchg
sub
fldl
mov
mov
in
lds
clc
out
xor
lret
push
jp
sub
mov
jmp
rcrl
test
pop
repnz
jnp
icebp
clc
mov
out
call
movsl
repnz
mov
xchg
jg
sbb
ret
cmp
les
cld
mov
insb
cmp
mov
xor
adc
jl
xlat
mov
mov
ret
mov
xchg
mov
aad
push
jbe
push
roll
cmp
inc
mov
xor
xor
pop
lock
or
shrb
push
scas
mov
fs
and
aaa
lcall
push
lods
dec
leave
sub
mov
iret
dec
lods
xor
and
mov
xor
call
fisubrs
mov
push
xorl
shlb
sbb
loope
xorb
mov
gs
cmc
jno
inc
pop
cwtl
fmuls
out
aad
dec
push
cmp
jbe
fimull
jns
jb
loope
shrl
or
test
and
fsubrl
les
sbb
lods
je
pop
push
mov
inc
sbb
fstpt
add
mov
shl
push
xchg
js
xchg
push
mov
jmp
stc
jb
mov
cmp
pop
push
xchg
mov
inc
fstpt
jns
and
movsl
and
inc
sbb
dec
xchg
arpl
and
sbb
pushf
ljmp
pop
lock
ror
cmpsb
pop
cs
notb
shrl
mov
stos
add
test
sub
movsb
mov
cwtl
or
rcl
push
adc
mul
dec
dec
xor
push
bnd
jmp
mov
lods
invd
and
xchg
cmpl
arpl
fistl
sub
ficomps
and
aad
lret
cmp
jp
jge
call
fnsave
pop
arpl
ret
cld
push
stc
cmpsb
cmp
jp
mov
or
push
add
sbb
rcrb
sbb
cmp
ret
and
imul
loope
inc
cmp
inc
xchg
mov
test
sbb
mov
les
aaa
ds
xor
scas
xchg
mov
cmp
xor
insl
and
ds
loop
xchg
xchg
cmp
negl
xor
or
lcall
pop
jp
jae
dec
bound
inc
mov
add
sub
loop
xchg
jb
cmovne
enter
sbb
insb
xchg
sbb
jp
xchg
sbb
mov
ljmp
push
jle
cmpsb
push
adc
sbb
inc
and
push
jp
push
orps
push
mov
ljmp
stc
adc
test
call
cmp
rorb
daa
add
cmp
cmp
push
push
cs
adc
jns
outsl
push
jge
push
inc
dec
xchg
in
test
sbb
movsb
push
sti
pusha
adc
or
clc
mov
mov
inc
mov
sub
movsb
push
cs
push
testb
add
scas
je
xlat
jb
scas
iret
stos
xchg
int3
dec
scas
inc
int3
add
cwtl
adc
jp
or
in
cmp
std
mov
lea
orl
mov
shll
or
addr16
aaa
cmp
arpl
dec
sub
lcall
jge
jnp
jp
sbb
mov
repnz
jbe
dec
xor
dec
cs
pop
icebp
or
push
sub
test
lds
pop
fstl
lret
shll
mov
or
and
addr16
loop
push
dec
mov
shll
xchg
lock
aaa
add
int3
out
into
rol
jmp
out
cmp
mov
pop
or
adc
inc
inc
repz
pop
enter
int3
mov
in
push
call
or
aad
cltd
cmp
xchg
mov
in
int3
test
xchg
mov
jae
push
js
sbb
testl
push
inc
outsb
mov
lret
les
popa
or
data16
add
insb
ret
jo
cmp
cmp
test
lahf
mov
daa
outsl
and
out
aaa
ds
aad
cmpsl
and
push
adc
imul
jp
or
cmc
mov
int
mov
cwtl
mov
mov
add
jg
push
mov
cli
pop
dec
cld
out
pop
xlat
lods
andl
xor
iret
push
mov
pcmpeqw
push
cmp
test
pop
ljmp
dec
daa
mov
pop
rcrl
hlt
push
xor
fidivl
mov
stos
test
mov
mov
repnz
sub
stos
out
cmp
fisubl
jnp
dec
sub
xor
out
das
xchg
pop
imulb
cld
pop
adc
cmp
dec
daa
cmp
hlt
dec
setge
in
rorl
sub
mov
jno
dec
jge
pop
dec
push
ds
pop
inc
int3
mov
loopne
imul
mov
adc
dec
add
outsb
aam
pop
jne
out
mov
push
lcall
ficoms
out
iret
enter
lret
inc
and
cmp
mov
cwtl
negl
jle
push
xor
pop
jne
out
sbb
jno
add
scas
sets
add
mov
stos
inc
pushf
fstl
jnp
out
pop
aaa
lods
fmull
pusha
xor
push
arpl
inc
pop
ret
mov
and
addl
mov
xor
cmp
in
cmp
shll
addr16
loope
mov
sub
ss
out
mov
aam
sbbb
insb
push
mov
mov
jmp
dec
mov
lock
inc
js
mov
or
mov
xor
outsl
lea
int3
insl
mov
adc
imul
mov
pop
or
fs
xlat
aam
dec
xchg
pop
xchg
xchg
add
push
mov
lds
mov
xchg
into
jne
mov
xchg
mov
int3
fidivrl
imul
fstp
sbbl
sub
or
ret
lock
jno
sbb
add
push
imul
pop
stc
dec
xor
xchg
dec
ja
ret
ffreep
inc
inc
cmp
and
lods
dec
sahf
cmc
push
insb
mov
lods
pop
sbb
jmp
cmpsl
mov
xchg
test
out
cmp
mov
movsb
movsb
pop
or
mov
imulb
xchg
popf
xor
cmpsl
cmpsb
repnz
jns
loope
jg
lret
mov
mov
lcall
std
arpl
orb
sub
or
sub
push
dec
jno
mov
or
rcr
stc
pop
xchg
lret
or
jno
mov
sti
jg
and
xor
mov
add
stos
cmp
pop
xchg
insb
xlat
es
sbb
pop
sub
sahf
jp
mov
sbb
sti
psubd
in
mov
cltd
out
hlt
mov
hlt
inc
cmp
xor
sub
lret
cmpsl
xor
movsl
das
jg
insb
mov
sbb
add
test
pop
shll
fistps
insl
mov
cmp
jns
aas
jnp
ficoms
lock
in
sbb
popf
fidivs
cmp
jg
cld
cmpsb
out
std
mov
fisubs
adc
loop
bswap
rcrb
repnz
add
scas
push
std
sbb
push
and
fdivrl
mov
std
lds
pop
xchg
add
adc
outsl
fcomi
cltd
rol
xor
js
sahf
movsl
psubd
popf
or
cltd
push
sub
push
insb
cs
jae
arpl
das
les
adc
std
imul
test
ja
jmp
in
and
add
sub
and
cmp
push
xchg
push
mov
loopne
test
xlat
mov
mov
les
outsb
mov
addr16
push
testb
movsb
fmull
push
or
cmp
stos
cwtl
mov
fimuls
xchg
and
fisttpll
aas
sbb
mov
clc
leave
scas
mov
in
jmp
shll
xchg
sahf
in
xor
dec
inc
pusha
mov
ret
pop
push
xor
xchg
outsb
in
mov
out
sarb
fs
cwtl
mov
xor
and
cmc
repnz
xor
enter
jns
imul
or
and
adc
js
inc
inc
sbb
lods
and
cmp
sbbl
and
loop
jmp
sbb
pop
sbb
mov
scas
push
xchg
inc
int
pop
cmp
and
sub
xor
roll
push
sub
out
nop
add
mov
orl
shrb
call
dec
pop
jae
sahf
inc
mov
fsubrs
cmp
jge
shlb
data16
pop
fs
pop
bts
adc
pop
cmp
dec
ja
insb
xchg
cmp
jmp
xor
shrb
add
dec
add
flds
ljmp
js
adc
mov
jmp
neg
scas
sbb
mov
mov
jle
or
mov
sarl
and
jge
or
dec
lret
sbb
gs
lods
xchg
adc
gs
cmpsb
jg
loopne
push
dec
push
sub
outsb
jno
push
scas
fists
adc
or
in
jae
mov
and
popa
ss
dec
fdivrs
push
pop
cmp
add
push
in
lahf
lahf
lahf
xchg
les
into
push
add
mov
bound
jo
and
xor
jg
push
dec
mov
lods
adc
cmpsb
mov
cmpsb
pop
not
orl
xor
notl
cld
mov
jae
ja
lock
movsl
lret
filds
test
mov
mov
int
lahf
push
scas
out
data16
bound
pop
sbb
mov
imul
push
push
es
sti
fwait
cmc
divl
pop
xlat
jl
mov
xor
adc
fiaddl
mov
loope
inc
or
inc
repnz
mov
and
std
cmpsb
pop
pusha
push
dec
push
arpl
inc
mov
inc
jns
mov
out
fidivrs
xor
or
pop
jno
pop
loope
jnp
out
mov
pop
fcoml
jmp
dec
sbb
mov
negb
fcomps
jmp
ja
push
imulb
scas
dec
add
je
sbb
std
lock
cld
stos
pusha
inc
icebp
mov
pop
dec
repnz
popa
fadd
add
push
imul
pop
add
adc
mov
or
push
mov
das
and
ret
aaa
jno
jbe
sub
shll
sub
cli
loope
dec
test
push
inc
xor
adc
push
xchg
ljmp
lahf
mov
inc
pop
and
mov
sbb
push
mov
out
lcall
fsubr
insb
sbb
rolb
jge
push
icebp
jle
fldenv
cmpsb
push
popf
cld
aam
mov
nop
push
imul
and
xchg
mov
adc
dec
cmpsb
push
rcrl
dec
mov
mov
stos
dec
mov
jecxz
push
cmp
test
sbb
mov
add
jecxz
mov
cmp
inc
mov
or
aam
mov
sbbl
out
ret
cld
cmp
xor
mov
das
imul
fnsave
pop
ror
adc
cltd
cmp
jl
add
enter
cld
mov
xor
push
gs
icebp
mov
add
rcl
into
xchg
xchg
sbb
cmc
pop
mov
mov
mov
sub
shlb
iret
jnp
sub
push
test
outsb
xchg
sub
pop
lret
outsl
ljmp
sub
push
xor
cmc
jmp
mov
loopne
inc
insb
xchg
jne
fnstenv
mov
add
xchg
in
xchg
add
or
outsl
mov
adc
insb
outsl
jp
cli
repz
mov
xlat
inc
int3
jae
stos
lea
pop
push
cltd
cld
aas
or
xchg
jecxz
fwait
mov
push
jns
sahf
sti
mov
lret
cmp
test
sbb
stos
je
pop
test
sub
mov
popa
aas
xor
add
sub
push
xchg
or
jl
dec
inc
inc
inc
dec
sub
sub
push
mov
pusha
sbb
faddl
pop
repnz
mov
fstp
out
and
pop
decl
int3
mov
sub
jecxz
lock
mov
add
cs
xchg
test
mov
add
icebp
adc
add
loopne
outsl
data16
out
insl
or
mov
decl
dec
sbb
mov
cmp
cmpsb
or
les
cwtl
push
adc
js
push
mov
cltd
jp
cs
mov
xor
das
add
sbb
inc
sub
cld
cltd
sete
aad
sti
jp
sar
repnz
and
sub
ss
sbb
loopne
popf
pop
aad
pop
mov
push
xchg
inc
clc
adc
dec
sub
adc
out
js
mov
xchg
push
out
enter
xchg
jno
pop
dec
cmp
lds
call
add
clc
int
out
inc
negb
ds
test
in
inc
push
stos
pop
jns
pop
jnp
popf
out
aad
fcom
mov
mov
hlt
pushf
cmc
mov
icebp
repnz
aaa
jbe
pop
pop
mov
sahf
cs
pop
sub
mov
mov
imul
loopne
lahf
sub
inc
adc
test
jge
mov
mov
cmp
and
and
pusha
insl
ja
pop
mov
fisttps
nop
dec
inc
and
pop
cmp
aam
int3
mov
into
push
jnp
addb
int
xor
and
pcmpeqb
lret
daa
ss
mov
out
cmp
aad
ja
and
mov
les
ret
adc
add
inc
arpl
fwait
pop
sbb
push
push
xlat
jb
movsb
xchg
or
or
std
out
loop
cmp
add
inc
ds
dec
push
dec
mov
ror
and
jge
imul
inc
das
jmp
cmp
subb
cli
xchg
push
or
mov
lds
ffree
cmc
aam
mov
jnp
shrl
dec
in
pop
push
mov
sti
mov
out
clc
sbb
and
jmp
xchg
aad
mov
cmpsl
inc
push
jl
lret
test
sub
fwait
xlat
xchg
popa
outsb
mov
stc
jbe
out
mov
xchg
cltd
jne
mov
sub
dec
out
xor
mov
xor
int3
xor
sbb
into
lods
flds
inc
out
push
add
inc
xchg
fistps
dec
mov
adc
fs
sub
add
cltd
push
push
mov
xor
test
push
mov
pushf
xchg
push
aad
and
jp
pushf
push
ret
mov
cmp
dec
jp
or
std
stc
std
push
mov
gs
aam
js
mov
jg
lahf
aaa
mov
jle
pop
repnz
adc
dec
add
sbb
pop
das
int
sub
dec
and
push
xchg
or
jl
cmp
mov
insw
lods
mov
fwait
push
cmp
and
jl
insl
insb
out
mov
sub
mov
outsl
mulb
xlat
adc
mov
xor
rcll
inc
and
inc
fcomip
lds
ljmp
aas
xor
test
es
cwtl
or
jmp
es
daa
cmc
adc
data16
stos
adc
imul
mov
mov
popa
cmc
cwtl
pop
mov
push
das
negb
popa
inc
mov
sub
lds
iret
and
outsb
xchg
mov
aaa
pop
sbb
mov
test
cmc
hlt
xchg
pop
dec
cmpl
sub
xor
pop
dec
call
adc
into
jo
aam
lcall
sub
pop
int3
aam
les
pop
add
xor
dec
mov
bound
imul
aaa
dec
or
inc
out
inc
stos
mov
cmc
mov
push
mov
push
in
lods
pop
xchg
mov
imul
sub
cmp
sbb
lds
jecxz
das
orb
dec
mov
pop
popf
xor
sbb
dec
push
xor
jmp
cwtl
mov
ljmp
and
les
gs
add
mov
mov
out
lret
mov
insb
jp
sbb
test
daa
fnsave
dec
sub
jp
lcall
lahf
xor
mov
jmp
aaa
dec
jae
inc
adc
dec
jnp
inc
insl
dec
arpl
mov
push
xor
stc
je
sub
mov
adc
popa
out
lcall
xor
repnz
sub
pop
mov
pusha
mov
push
inc
xchg
mov
dec
inc
jmp
push
dec
mov
adc
in
test
push
stc
scas
push
fidivl
jecxz
jg
mov
xchg
jnp
xor
xchg
inc
into
shll
iret
rcrb
notb
mov
fs
shl
test
out
pop
pop
jne
push
pop
xchg
aas
out
cmp
adc
cmp
mov
mov
inc
and
mov
out
je
sub
lahf
aaa
sbb
and
aaa
nop
cmpsb
cmp
push
mov
inc
mov
aaa
mov
or
insb
shlb
pop
aaa
xorb
mov
int3
jmp
loope
or
loopne
mov
imul
fwait
jmp
leave
mov
push
xchg
xchg
ret
rclb
push
inc
jne
sub
sub
data16
sahf
mov
sub
xor
xchg
loope
int3
or
in
repnz
fcmovbe
cmp
dec
jne
popa
mov
outsl
jmp
push
jno
mov
jne
push
aam
das
add
push
xchg
cmc
add
leave
cmpsl
mov
lret
data16
xchg
push
cmp
dec
test
shll
cmc
stc
xor
gs
or
cmp
sbb
inc
add
call
dec
imulb
iret
mov
ret
xor
jne
mov
add
or
pop
fdivr
jo
xchg
imul
rcll
jle
or
push
add
nop
enter
cmp
xor
jmp
icebp
push
push
or
jns
mov
fs
iret
push
xor
cmp
sbb
jns
pop
pop
mov
jb
into
iret
ret
xchg
das
cmp
icebp
sub
mov
in
jmp
and
in
fdivr
adc
xchg
adcl
lret
dec
fbstp
aas
jl
test
add
add
mov
pop
lds
xlat
push
or
mov
sti
sti
sbb
imul
pop
add
inc
or
mov
sub
mov
test
mov
add
es
adc
mov
xchg
inc
pop
sub
loop
int3
cwtd
out
out
xchg
fstl
jne
imull
test
outsb
or
popa
lods
pop
repnz
outsl
pop
ss
lret
dec
orl
fwait
add
sub
sub
sub
int3
sub
aam
mov
mov
xor
pop
fbld
mov
xor
mov
ret
pop
stc
cmpsb
xchg
push
in
xor
aaa
inc
mov
jmp
lahf
inc
shll
mov
and
push
cwtl
int
jmp
xchg
nop
or
addl
push
fcmove
cwtl
shrl
loope
insb
je
mov
lahf
mov
sub
iret
sbb
pop
mov
mov
push
mov
jecxz
daa
pop
xchg
popa
mov
inc
dec
lock
ds
cmp
sbb
or
pusha
sarl
xor
popf
loope
popa
inc
push
je
or
pop
mov
cmpsb
or
enter
sub
jnp
leave
xchg
sub
jl
adc
xchg
or
sarb
sub
popa
jg
xchg
es
std
nop
mov
int
lods
std
mov
mov
aaa
xor
bound
mov
in
addr16
enter
shll
jne
fwait
adc
xchg
scas
cltd
dec
pop
sub
out
adcl
dec
pop
mov
push
xchg
iret
sub
xchg
jno
cli
arpl
sub
insl
addr16
mov
sbb
jg
dec
insb
xorl
in
bound
sub
jecxz
fnsave
and
adc
push
xor
cwtl
sub
popf
sbb
loop
xchg
xor
lahf
imulb
and
ja
mov
test
arpl
cltd
mov
sbb
clc
lea
outsl
daa
dec
pop
lret
jne
cwtl
xchg
fcomps
ret
les
fcoms
in
out
aam
in
jge
mov
scas
mov
and
mov
sbb
shlb
das
addr16
aad
pop
sub
dec
cli
fidivl
mov
js
movsl
clc
sub
mov
repnz
sbb
test
inc
lock
adc
sbb
arpl
cs
test
xchg
inc
push
jnp
or
imul
cmp
fsubr
push
arpl
mov
dec
movsl
pusha
pop
mov
ret
pop
cs
shlb
test
mov
xchg
push
xchg
in
out
sub
xor
push
and
pop
push
lds
incb
stos
adc
push
inc
inc
gs
mov
imul
data16
pop
xor
lods
push
mov
je
xchg
sahf
cmpsl
mov
shlb
dec
gs
and
mov
add
mov
negb
std
mov
mov
je
or
jne
negl
enter
push
lods
and
fisubl
xor
aaa
mov
es
sub
imul
xchg
sti
pop
inc
and
adc
cmp
sbb
test
add
xchg
test
jmp
je
loopne
dec
sahf
add
movsb
cmp
nop
out
cmc
and
xchg
push
cmp
daa
mov
mov
into
mov
or
out
push
es
in
fstpt
lock
sbb
fwait
cmp
test
adc
pop
imul
cld
imul
jp
test
das
adc
popa
rcrl
adc
dec
dec
test
adc
icebp
xlat
sub
fwait
dec
or
pop
pop
jbe
sbb
push
cmp
jp
mov
sarl
jb
sbb
mov
push
testb
xor
aaa
push
add
inc
push
arpl
mov
loopne
push
lret
and
xor
and
push
bnd
stc
push
inc
int3
push
nop
daa
cmp
iret
loop
lods
ss
rcr
xchg
mov
sub
xlat
lret
adc
out
xchg
sbb
sbbl
push
push
xchg
adc
mov
fcmovbe
dec
adcl
xchg
int
leave
out
mov
pop
push
out
nop
and
aas
stc
stos
or
dec
mov
push
fwait
loop
lds
into
mov
scas
sti
jmp
push
mov
jle
sahf
movsl
shlb
sbb
adc
inc
lcall
pop
addl
lahf
xchg
fcoml
orb
or
mov
sub
push
xor
movsl
push
movsb
sti
cltd
and
daa
cmp
enter
aad
jns
addb
jle
mov
cmp
jle
mov
push
jns
sub
pop
and
cmp
fadd
jno
mov
cltd
jecxz
mov
movsl
aam
lods
jl
jbe
loop
insb
in
inc
fsubl
cmovl
cwtl
and
mov
out
adc
inc
iret
jns
add
xchg
hlt
aam
inc
dec
ret
outsb
arpl
popf
sbb
pop
pop
call
test
fldcw
lahf
loop
push
pop
test
pushf
or
push
lods
add
push
cmp
jno
repz
cmp
ljmp
inc
mov
fwait
jmp
fcmove
xchg
enter
popf
loopne
addb
fwait
push
jmp
push
jle
call
pop
jbe
jns,pt
lea
push
insl
and
pusha
or
jmp
aam
sahf
mov
das
inc
jnp
in
mov
fcomi
rclb
mov
mov
cmp
xchg
rcrl
int
push
jbe
add
cmp
lea
aas
add
scas
xchg
pop
popa
fwait
incb
arpl
adc
das
loope
push
mov
idivb
mov
xor
sbb
mov
push
and
xchg
mov
pusha
je
nopl
xchg
ret
fs
popa
cmp
mov
test
xor
jae
push
mov
test
fdivrl
cli
mov
je
adc
or
push
or
add
xchg
pop
pop
loope
push
pop
andl
xor
int3
xchg
call
test
ret
repz
push
cmc
gs
push
mov
rcrl
jge
cltd
out
lret
xchg
push
pop
mov
les
inc
cli
popf
cli
data16
stc
daa
push
fsub
out
sub
cmp
fcoml
in
out
dec
gs
arpl
popa
dec
lret
mov
iret
and
vmovntpd
ja
arpl
adc
add
lock
push
push
xchg
mov
lcall
mov
sbb
test
stos
push
mov
jns
xchg
stc
pusha
hlt
inc
nop
call
cmp
mov
stos
push
push
lds
loope
icebp
mov
and
jecxz
in
les
xor
in
dec
sbb
sub
xor
sub
jg
and
push
test
aaa
mov
sub
jge
push
out
out
pop
test
arpl
mov
dec
xlat
inc
test
or
mov
rorl
mov
scas
rorb
sbb
shl
cwtl
test
adc
jbe
cmp
int
lods
outsb
into
push
adc
aad
insl
cmc
xor
or
xor
jae
cmpsl
out
or
in
in
in
and
adc
add
shrb
jns
out
or
nop
ret
jne
pop
push
inc
xor
mov
cmp
aam
mov
cltd
rclb
xor
xchg
push
ljmp
std
push
mov
cmpsl
ljmp
stos
xor
daa
jecxz
and
fdivp
pushf
mov
loope
aam
into
or
adc
rcrb
das
jp
jmp
dec
adc
jnp
sbb
sub
mov
bound
ljmp
lock
iret
push
push
xor
pop
out
xchg
test
jge
scas
dec
jecxz
add
cmc
mov
popf
repnz
and
ds
inc
jo
jnp
and
xorb
imul
loopne
pop
or
or
cmp
and
sub
mov
inc
adc
add
cmp
mov
jge
pop
pop
sub
push
lret
pop
inc
adc
insl
pop
jecxz
xchg
jae
push
test
in
orb
pop
fwait
jmp
stos
pop
fstpl
mov
dec
int
popa
cmc
mov
cmp
lods
call
cmpb
aad
int
xor
stos
iret
syscall
mov
imul
cmp
inc
push
hlt
mov
arpl
jns
or
mov
fsubrs
fildll
sub
push
lock
xchg
jb
mov
push
cli
ds
mov
mov
pop
and
xchg
outsl
jo
xchg
sbb
das
fiaddl
or
mov
sahf
jno
push
sarb
filds
push
xchg
and
jecxz,pt
bound
pop
test
ficompl
insb
movsl
inc
ret
inc
xlat
xor
inc
in
cmp
push
fs
lahf
stc
loope
aaa
xchg
add
mov
fiadds
pop
xor
test
lcall
shrb
mov
push
in
cld
fsubrp
pop
add
sbb
mov
push
mov
xor
xor
inc
inc
mov
ret
xchg
mov
aaa
mov
pop
xor
out
das
scas
lret
xchg
dec
sbb
dec
int3
stc
aaa
pusha
movsb
xchg
cmpsl
call
dec
test
and
push
jno
sub
push
or
sbb
roll
aas
xchg
mov
fs
mov
jo
jle
mov
dec
jmp
and
fsubrs
adc
xor
jo
cmp
cmpsl
cmp
add
pop
push
mov
sub
and
add
fistpl
loopne
js
bound
adc
jno
data16
stos
adc
in
rcrb
aam
cmp
push
cmp
mov
into
sub
pop
mov
pop
or
shrl
and
push
push
push
sub
adc
inc
adc
loope
aad
out
loop
push
xor
bound
or
rcrb
jge
arpl
xchg
xor
add
insb
test
rorb
mov
add
xchg
pushf
sub
in
fdivr
in
adc
inc
xor
arpl
cmc
or
shlb
dec
fists
ljmp
dec
repnz
gs
xchg
pop
sbb
cmp
mov
int
fnsave
push
sub
xor
jl
xchg
jge
sahf
popa
stos
cmp
aaa
mul
cltd
leave
mov
je
ss
and
mov
fwait
dec
loop
or
test
push
imul
jmp
sets
stos
rcll
mov
mov
cmpsb
or
loop
aas
shrl
cmc
pop
cltd
fmuls
inc
dec
rcrl
sub
pop
dec
xchg
mov
rcrl
jl
cmp
stc
jle
repz
mov
mov
xchg
lret
addr16
cmp
mov
push
outsl
arpl
adc
lods
dec
sub
dec
mov
push
xor
cld
jb
and
movsl
popf
ljmp
movsb
cmp
cmpsb
inc
push
aad
dec
xchg
sbb
rcrb
movsb
adc
jge
or
loop
xlat
mov
and
idivl
mov
pop
clc
mov
ret
sub
pop
push
inc
mov
lcall
pushf
push
call
sbb
andb
aad
mov
out
jle
jl
imul
adc
sub
add
inc
inc
nop
mov
mov
sub
cmp
push
movsb
pop
or
jmp
dec
fcmove
sub
int3
jp
mov
cmc
push
xor
add
mov
pop
dec
jns
push
xor
mov
ret
xor
push
les
out
lcall
lds
dec
in
mov
mov
movsb
fists
call
pusha
enter
xor
sub
adc
push
xchg
movsb
mov
out
pushl
adc
sub
xorb
test
push
ret
lods
cmp
pop
imul
fwait
incb
jecxz
push
mov
xchg
jmp
push
ljmp
or
daa
in
and
scas
sbb
sbb
or
jns
test
dec
cmp
pop
mul
test
mov
bound
inc
push
mov
dec
stos
push
movsb
jb
or
xor
test
cmp
test
dec
mov
fisubl
hlt
into
cltd
adc
leave
dec
and
mov
inc
inc
push
in
aas
xchg
add
sbb
popa
jb
cmp
test
mov
aad
enter
leave
xchg
inc
dec
or
xchg
adcb
ljmp
dec
mov
lods
call
jg
js
popa
or
sbb
mov
and
jae
jg
rolb
sbb
ja
out
in
inc
aad
pop
and
movsl
shll
mov
lods
in
xchg
cmp
fimull
aaa
jns
out
mov
mov
mov
cmp
aaa
cwtl
fmull
push
ror
sbb
xchg
push
mov
loope
ss
imul
and
in
mov
fimull
test
dec
lds
das
ret
fnstcw
mov
cmp
mov
ss
movsl
pop
and
pop
lret
pop
sahf
mov
lea
outsb
lret
add
adc
stc
xchg
call
mov
add
mov
sbb
sbb
repz
mov
adc
aas
out
push
pop
push
pop
add
and
pushf
or
push
xor
pop
jle
adc
cwtl
mov
xor
icebp
xor
or
pop
mov
gs
pop
das
test
sub
sbb
sub
or
es
arpl
imul
icebp
hlt
stos
mov
rcrb
jl
jo
jbe
mov
and
mov
and
sub
mov
or
loope
cmpl
pop
jo
push
mov
cli
popf
jae
and
dec
stos
sub
pop
int
ds
cmp
xchg
fisubs
sub
lock
mov
push
cmp
and
test
xor
mov
lds
push
or
faddl
outsb
sub
das
test
add
outsl
ds
and
push
mov
jb
test
popf
inc
cltd
das
lea
add
mov
push
sub
mov
loop
cmpsl
pop
push
orl
add
xlat
sbb
fldl
pop
dec
icebp
jg
lea
xor
dec
insl
xor
push
push
xor
xchg
jo
insb
inc
ficompl
into
lret
xchg
jb
aam
jl
sub
icebp
cmp
movsb
rcrb
sub
pop
or
add
pop
mov
sub
andl
dec
fsubrp
nop
jb
cmpsb
sub
xor
ljmp
loop
rcll
jne
sub
mov
lret
cli
xchg
ficompl
xor
mov
andb
lcall
mov
bound
arpl
js
insb
add
mov
inc
cmp
rorl
sbb
fimuls
pop
xchg
icebp
pusha
lret
or
cltd
xlat
push
mov
jbe
pop
ljmp
dec
or
repnz
das
xchg
add
test
retw
fs
mov
ret
sbb
scas
push
jo
movsb
je
pop
adc
push
pop
mov
popa
loopne
fdivp
stos
dec
mov
jle
add
dec
jb
add
test
xchg
mov
decl
inc
setno
mov
ret
leave
cmp
xchg
cmp
mov
cmp
lock
lea
into
mov
lahf
pop
lock
ret
sub
xor
cmp
ret
add
pop
pop
push
in
ss
pop
cmpsb
enter
lcall
cmp
ljmp
xchg
in
push
ja
dec
rcll
aam
cltd
pop
lods
adc
call
and
inc
movl
xor
pop
xchg
test
ficomps
sbb
jns
adc
mov
in
push
push
jne
fmull
jecxz
dec
mov
dec
dec
dec
into
mov
dec
loopne
cmpsb
push
lods
mov
outsl
lret
xor
and
jns
jnp
cltd
lcall
test
add
out
out
outsb
pop
xor
mov
sbb
add
mov
inc
icebp
push
insl
fistpl
pop
adc
in
test
push
outsl
les
adc
lods
jno
ds
sub
shr
jno
sti
popfw
cmpl
and
ss
pop
lods
fstpt
inc
popa
push
imul
add
and
fidivl
repnz
jnp
mov
aas
repz
push
xchg
std
sub
cmp
loope
mov
xchg
inc
sti
add
dec
xor
inc
adc
pop
sub
pop
divb
fldt
sub
addb
dec
ljmp
fmuls
inc
pop
das
cmp
ret
cmpsl
test
ss
arpl
and
std
pop
outsb
pop
xchg
pop
std
call
out
dec
shlb
mov
or
push
jle
loop
adc
repz
push
subl
dec
outsb
adc
xor
mov
aad
mov
lcall
test
cmp
cli
xor
xchg
movsb
sub
push
daa
jmp
loop
enter
inc
in
push
inc
cmp
or
mov
pop
sbb
adc
cmp
outsb
mov
sbb
fwait
es
shlb
dec
nop
mov
inc
jo
imul
fisttpl
pop
mov
es
int
mov
pop
jg
out
dec
add
pop
bnd
stos
fucomi
icebp
test
inc
out
dec
jns
add
jo
jns
aam
dec
fnsave
push
cmc
push
test
ret
and
das
int3
repnz
and
bsr
scas
xchg
loopne
add
and
pop
imul
xchg
add
jecxz
push
les
sti
and
push
pop
mov
stc
imul
imul
adc
sub
cs
ret
pop
dec
out
cmpl
test
das
lcall
xchg
ret
push
lret
arpl
lret
add
jnp
movsl
sbb
leave
fisubl
popa
dec
mov
out
packsswb
pushf
lss
mov
pop
lods
sbb
cmp
and
inc
push
nop
jge
in
add
lcall
pushf
roll
pop
mov
sti
cmp
dec
loope
popf
jg
mov
sub
pushf
aam
sub
dec
clc
inc
push
cmp
add
push
rcrb
and
xchg
inc
jb
add
jmp
clc
pop
sub
xor
pushf
sub
pop
std
clc
xor
inc
mov
ss
sub
and
inc
lret
inc
mov
add
mov
xchg
jns
lahf
push
or
ret
jne
xchg
loope
mov
jmp
jge
xchg
sar
bound
mov
lds
and
scas
add
sahf
cmpsl
out
lea
mov
imul
cmp
lock
and
fildl
imul
xorl
in
aad
dec
sbb
cmp
sub
adc
dec
inc
negb
sbb
gs
iret
in
ficompl
loop
aas
jne
sbb
out
jo
xchg
mov
and
inc
fdivrs
sub
xchg
xchg
sub
ja
test
das
xor
push
cmp
pop
aas
sub
cld
cmpsb
cmc
fmull
lds
cmp
add
sahf
hlt
xor
add
int
rorb
xor
sti
imul
loop
inc
lods
mov
fstl
shrb
jo
push
xchg
inc
fistl
iret
jb
in
negb
fldcw
into
xchg
cmp
sbbb
mov
push
std
test
push
mov
in
cmpsb
popf
movsl
cmpsb
shrb
loop
stos
in
daa
fisubs
in
data16
inc
xchg
sti
cltd
pushf
ss
pop
or
std
sub
rcl
stos
push
movsl
mov
or
sub
lds
xchg
loopne
push
push
inc
iret
inc
or
dec
pop
notl
cmp
repz
mov
shrb
test
loop
inc
add
cmc
pusha
sub
je
lret
adc
sub
aam
ljmp
or
mov
pop
push
jbe
jo
mov
sti
imul
or
fwait
inc
lret
push
outsb
inc
popf
jbe
adc
mov
pop
into
jno
cmpsb
loope
dec
cld
adc
pop
adc
lret
fucomip
lds
shr
sarb
dec
xchg
mov
int3
std
xchg
pop
mov
mov
shlb
and
das
dec
adc
inc
jle
dec
shll
jnp
add
jne
sbb
dec
fidivrs
mov
insl
sbb
ds
nop
inc
dec
mov
sub
pop
xchg
lea
movsb
adc
mov
hlt
enter
or
add
insl
push
daa
push
jp
or
jne
lcall
jge
pop
lods
sbb
mov
dec
jmp
stc
push
add
fsubrp
cmp
fdivp
dec
mov
int3
add
cmp
adc
fstpt
mov
jne
fbld
mov
dec
test
dec
xchg
fists
inc
dec
jbe
sub
outsb
popf
fs
cmpsl
shlb
loop
adc
cwtl
fdivrp
dec
clc
divl
xchg
dec
aam
push
xor
int3
pop
cmc
dec
adc
dec
or
and
pop
fcomps
push
testb
jecxz
fcoml
in
pushl
repnz
fcmovnb
cld
leave
inc
jno
xchg
test
dec
and
cmp
in
in
mov
inc
xor
cmp
insl
ret
sahf
inc
mov
adc
enter
scas
dec
pushf
aad
je
ljmp
scas
push
sub
dec
sbb
ja
mov
addr16
and
imul
mov
dec
dec
xlat
xlat
mov
jnp
pop
cld
pop
xor
cmc
push
out
les
dec
lret
pusha
add
daa
jl
movsl
pop
ret
loopne
inc
xchg
adc
jbe
pop
dec
loopne
push
xchg
aaa
and
mov
daa
push
mov
fistpll
cli
mov
int3
aad
jge
jecxz
xchg
lcall
pop
or
xchg
repz
jle
mov
popa
pop
sti
inc
icebp
mov
movsb
xchg
int3
inc
cld
dec
mov
mov
dec
les
cmp
bound
cmp
cmpsb
sub
add
cli
pop
jmp
mov
sbb
pop
jo
movsb
inc
xchg
in
jbe
xchg
push
jl
push
mov
inc
ficoms
inc
adc
xor
cmc
push
add
sub
xchg
jl
inc
xchg
leave
inc
inc
mov
push
fcompl
das
clc
dec
into
and
pusha
shr
repnz
cwtl
repnz
pushf
scas
jno
stos
jmp
inc
subb
dec
rorl
xchg
push
js
repnz
rcrl
sbb
gs
pushf
lahf
stc
fbld
idivl
shrb
cmp
pop
xchg
mov
lcall
fsubrp
cmc
add
sti
lret
pop
ret
push
idiv
inc
enter
lahf
cmp
leave
fs
dec
mov
and
mov
pop
sbb
pop
xchg
adc
cs
push
pop
cs
xchg
inc
push
rep
xlat
xchg
dec
push
jns
xor
pop
repnz
cmp
push
cmp
icebp
jnp
jge
push
mov
in
fsin
inc
scas
mov
xchg
xchg
cmpsl
cmc
pop
or
in
jns
xchg
repz
in
nop
push
mov
jb
into
xor
pop
xchg
cli
xor
cmc
test
mov
in
mov
xchg
jle
jg
adc
or
pop
out
sarl
mov
ss
inc
fldt
pop
test
xchg
pop
ljmp
cmp
mov
bound
sbb
gs
sub
call
pop
push
sbb
xchg
add
jge
cmp
sub
xchg
mov
mov
scas
mov
or
mov
pushf
add
scas
pop
imul
mov
mov
inc
leave
int3
repnz
dec
xchg
mov
mov
lods
outsb
lods
jl
jle
rcr
adc
jae
stos
sub
int
es
lcall
test
fldenv
testb
and
ljmp
xchg
mov
cmp
imul
xor
fs
mov
mov
xor
fwait
sbb
cmpl
xor
cld
and
cmp
mov
or
xchg
mov
repz
into
test
jnp
sti
mov
pop
xchg
mov
rorb
stos
aas
pop
lret
xchg
fmull
push
pop
mov
test
xchg
es
in
and
dec
es
push
les
mov
rcll
mov
dec
pop
sahf
dec
mov
sahf
push
rorl
mov
and
aad
xlat
mov
fdivl
mov
jl
lret
das
push
aam
cli
xor
sub
xchg
dec
scas
add
call
push
adc
or
cmp
mov
push
mov
add
andl
add
cld
xchg
pop
mov
mov
std
leave
ds
pusha
inc
insl
aam
loope
mov
jne
sub
test
jle
jnp
insl
aad
adc
xchg
and
hlt
jge
pop
mov
xchg
adc
sbb
xor
or
fldl
insb
or
push
fcom
lea
cmp
mov
dec
out
xchg
jbe
std
cmp
cmp
fcmovbe
cmpsl
inc
rcrb
stc
jbe
les
addr16
lock
repz
or
inc
fstpl
jae
jo
fcompl
in
pop
inc
sbbb
mov
jl
sti
sub
cmpsl
push
jge
pop
lock
pop
sbb
jae
cmpsb
push
pop
xor
mov
lret
bound
mov
push
movl
mov
ss
and
lret
pop
aaa
xor
mov
or
mov
mov
aad
into
and
sbb
sub
cli
jae
in
push
sbb
and
dec
or
or
lcall
push
stos
ret
dec
fcomps
pop
pop
lret
or
cmpb
test
adc
mov
and
and
out
inc
or
jl
out
sbb
decl
sbb
dec
pop
inc
adc
pop
xor
mov
jns
fwait
int3
fs
xchg
fldenv
sub
pop
inc
pop
scas
int3
inc
aaa
fwait
pop
push
mov
adc
mov
mov
sub
les
adcb
push
dec
adc
pop
ret
int
fsts
stc
in
clc
adc
mov
outsl
push
int
pop
cmp
mov
pop
cmpsb
mov
add
orb
adc
and
xchg
rcll
filds
ret
arpl
mov
mov
pusha
or
push
fldl
insl
sub
jmp
loope
push
pop
dec
mov
popf
loop
jmp
call
push
incb
ljmp
mov
loop
loopne
scas
or
cmpsl
pusha
and
rol
stos
stc
pusha
or
mov
add
rol
pusha
mov
lock
lret
push
jne
sbb
cmp
lock
mov
mull
adc
loopne
push
arpl
sub
jp
inc
aad
lcall
pop
or
jmp
jae
xchg
sub
dec
rorb
into
enter
jne
push
pop
stc
cmp
popf
std
add
sub
pop
mov
pop
roll
dec
ljmp
mov
test
into
loopne
lcall
adc
cmp
mov
imul
in
cld
or
jne
mov
jl
push
add
lea
push
jle
pushf
cltd
std
or
sbb
xchg
out
lock
add
outsl
and
jl
sbb
insl
fldt
aaa
in
cmp
outsb
shl
mov
fcomps
mov
outsb
add
dec
pop
xchg
stos
or
sub
cmp
sbb
mov
scas
out
cs
lcall
pop
push
mov
push
outsb
stos
push
stos
ret
ss
inc
inc
mov
test
imul
outsl
jnp
sbb
pop
add
bnd
sbb
icebp
shl
mov
xlat
std
xor
out
jg
inc
arpl
sbb
xor
lahf
mov
insl
pop
pop
loopne
or
lret
xor
int3
jnp
or
dec
out
ds
fdivr
fcmovb
dec
mov
mov
insl
xchg
jno
pop
pusha
push
loopew
stos
pop
mov
arpl
dec
repz
mov
stc
or
loop
adc
shlb
or
mov
fmuls
mov
cmp
ret
out
mull
shlb
lcall
rcl
icebp
das
jmp
xor
add
inc
inc
insb
pop
jle
or
xor
inc
lcall
scas
negl
pusha
push
cld
call
stc
imul
and
ds
fstps
movl
cld
insb
xor
je
addr16
pop
out
sbb
cmc
insb
xchg
jnp
incb
lret
ror
xchg
stos
xchg
and
pop
adc
push
mov
je
pop
jp
and
outsb
xchg
aad
lock
sahf
mov
or
or
dec
not
stos
imul
scas
push
sub
out
mov
into
out
xchg
dec
out
inc
or
push
pop
sbb
cmp
in
aad
es
lock
stc
insb
pop
jl
sbb
lret
int
test
dec
xlat
test
rclb
bound
jno
and
pop
mov
push
xchg
jmp
mov
addr16
pop
call
inc
out
push
aad
enter
and
repz
jmp
xchg
bound
sbb
and
fsubrl
popa
add
sahf
pop
jbe
cwtl
aaa
cmc
and
jnp
pop
jbe
xchg
mov
pop
adc
sarb
movsb
ficoml
sahf
and
add
ja
xchg
mov
jp
push
icebp
je
hlt
xor
sbb
push
jns
in
scas
ficompl
mov
fcompl
pop
pop
xchg
pop
or
xchg
push
cmp
enter
fmull
fsubp
lds
cmp
sub
pop
sub
loope
mov
ret
adc
insl
int
stos
xchg
repz
repnz
or
outsb
insl
roll
cld
in
xchg
popa
outsb
stos
enter
lds
int
adc
pop
cli
ss
xchg
es
cmpsb
int
mov
lret
fstl
add
mov
stc
xchg
and
inc
and
jb
dec
mov
pop
xchg
pusha
dec
jne
mov
daa
and
dec
jno
ficompl
dec
dec
cmpsb
inc
jno
xchg
enter
in
in
aas
ds
push
scas
imul
or
testb
fldt
inc
int
xor
inc
xor
inc
mov
inc
push
dec
mov
filds
add
inc
xchg
ret
pop
cmp
imul
sbb
pop
std
fs
nop
outsb
pop
sti
xchg
add
or
das
sbb
data16
in
es
mov
cmpsb
fwait
xchg
std
mov
mov
rorb
call
xor
dec
xchg
xor
mov
sub
frstor
shl
sub
clc
jb
xor
pop
sub
sbb
sbb
cli
fwait
lods
adc
cmp
rcrl
sub
xor
out
and
imul
out
mov
imulb
pop
cmp
sbb
xor
test
dec
mov
jno
mov
test
mov
pop
and
mov
out
mov
adc
in
push
ret
and
pushf
dec
outsb
xor
cmp
mov
xor
popa
in
fsubr
call
rclb
ljmp
hlt
enter
sub
mov
enter
imul
test
aam
addr16
das
xchg
mov
shlb
les
leave
loop
xor
fcmovnbe
ror
and
push
xorl
add
jecxz
shr
je
in
pop
loopne
leave
fstps
jmp
stos
mov
outsb
and
test
or
or
jbe
adc
enter
inc
shrl
mov
pop
mov
addr16
mov
mov
adc
mov
adc
xor
jne
fsubs
sub
xor
inc
push
mov
adc
sbb
loope
inc
popf
fcmovnb
insb
nop
pop
mov
cmp
or
jp
out
insl
push
sbb
daa
out
pop
adc
fs
push
add
jno
inc
dec
sub
andl
les
add
fcoml
push
pop
inc
mov
dec
lds
or
iret
adc
adc
in
in
and
dec
mov
xchg
jo
inc
lods
mov
mov
push
lods
in
add
stc
dec
sbb
push
pop
loope
fsubs
jmp
push
sti
mov
test
or
int3
notb
arpl
dec
and
js
jle
sarb
repnz
mov
mov
std
mov
sbb
loop
ljmp
adc
clc
inc
nop
ja
jg
les
aam
dec
push
add
lret
rcrl
shll
addr16
hlt
xchg
push
and
repnz
add
movsl
test
xchg
mov
cmc
ljmp
shrb
cmpsl
jb
xchg
das
sarl
imul
cmp
and
or
add
es
push
in
cmpsl
call
xchg
sub
jae
mov
cmc
mov
push
jnp
imul
pop
test
lret
lea
jbe
das
add
in
cmpsb
leave
push
mov
xor
sbb
adc
mov
lret
stc
mov
jg
scas
mov
mov
push
cmp
xchg
jae
adcl
pop
mov
jno
mov
test
es
jge
insb
adcl
xor
rol
aaa
xor
add
fsubl
std
push
pop
ror
sbb
mov
inc
outsb
popf
xchg
lret
cld
imul
push
out
cmp
adc
cs
xor
adc
lret
cmp
xchg
jle
mov
sti
cmp
sbb
push
lahf
and
xchg
sub
insb
jl
lods
lcall
dec
loope
mov
jbe
dec
rol
sbbb
imul
push
mov
adc
jae
int
inc
cmp
dec
pop
push
xor
ficoms
and
out
xor
aad
insl
pop
sub
aam
sbb
sbb
push
stc
fcomps
aaa
imul
sbb
lret
outsl
xlat
sub
push
mov
imul
mov
push
rcl
or
cmp
add
dec
sbb
and
fucomip
add
mov
fcoml
and
xor
sub
inc
sub
mov
mov
js
mov
sahf
add
pop
fdivrs
jae
daa
sub
sbb
xor
add
out
cs
daa
adc
pop
loop
cs
sub
shll
jae
outsl
into
sub
roll
or
jno
syscall
and
lds
sbb
xchg
sub
or
inc
ficompl
cld
cmp
sub
fnstsw
aaa
mov
js
aam
mov
test
lcall
ficoml
inc
out
xor
xlat
push
inc
mov
inc
movb
enter
cli
inc
xor
gs
push
popf
or
jle
sti
rcrl
or
sub
xchg
xchg
mov
jecxz
insb
push
out
into
pop
jp
jge
imul
sub
vpmulhw
or
divb
push
les
pop
push
xchg
xor
or
loopne
dec
in
aaa
iret
jnp
push
scas
sarb
xor
add
lcall
mov
adc
outsb
jl
popa
mov
push
outsl
or
add
and
and
mov
or
inc
inc
adc
push
lret
in
pop
inc
adcl
mov
insl
cmpsl
and
aas
jbe
pop
inc
ret
movsb
sbb
mov
dec
lds
push
jl
outsb
adc
mov
inc
xchg
sbb
mov
dec
xor
mov
jnp
jle
add
and
jns
dec
js
adc
fbld
push
xor
aaa
in
lcall
xchg
ret
andl
mov
sub
mov
leave
mov
push
outsl
xchg
cmpsb
pop
pusha
mov
ret
pop
cmpsb
aam
inc
pop
ds
xor
xor
adc
int
mov
pop
aad
xchg
addb
and
iret
rcrb
mov
push
xor
dec
xchg
aaa
dec
xor
mov
mov
test
push
mov
hlt
loop
dec
test
xor
xchg
jae
mov
jl
pop
push
frstor
addr16
push
sysenter
inc
insb
rcr
ja
or
fs
sub
data16
adc
ret
arpl
aaa
xchg
test
rcll
mov
je
xchg
lds
xor
mov
shl
and
inc
fdiv
jp
mov
fxch
and
shrl
pop
cli
and
push
insl
sub
cmpb
mov
pop
data16
mov
dec
pop
mov
and
sarb
clc
jno
adc
lock
cmp
mov
mov
add
cwtl
icebp
es
push
adc
fists
subb
imul
push
jecxz
xchg
sbbl
xchg
or
aam
lahf
lahf
dec
mov
outsl
std
pop
mov
sbb
mov
xor
mov
pop
jo
popa
out
shl
insl
adc
mov
clc
movsl
inc
sub
out
xchg
in
hlt
inc
jb
lcall
test
xor
mov
enter
in
jmp
rolb
pop
test
aaa
mov
shlb
inc
mov
mov
mov
mov
outsl
push
add
rcrb
adc
int
xor
and
xlat
mov
fwait
insl
std
inc
por
pop
jl
xchg
les
or
jbe
cld
popf
mov
movsl
mov
loop
aaa
sbbl
ljmp
shlb
mov
cmpsl
adc
shll
jp
scas
stos
fstps
mov
repnz
inc
lcall
xor
cs
stc
jmp
inc
and
out
push
jns
imull
idiv
sub
sbb
into
pop
mov
out
sub
daa
pop
mov
and
adc
test
cmp
inc
int
push
jp
dec
cmpsb
and
xchg
popf
pop
leave
cld
lcall
rorb
fimuls
iret
dec
out
xor
push
cli
cmc
js
rclb
lret
push
outsb
pop
je
adc
int
loope
push
insl
xor
sbbl
mov
push
cld
cmp
inc
repz
push
dec
add
outsl
insb
or
les
inc
push
les
aaa
ljmp
pop
fsubl
jnp
adc
xor
dec
lret
mov
ret
xchg
lock
mov
cwtl
cmp
mov
mov
out
add
and
test
pop
push
sti
pop
dec
insl
leave
push
dec
fbld
and
imul
xor
out
cmc
test
mov
mov
xchg
adc
stos
jb
pop
xchg
inc
cmpsl
pop
cmp
jbe
outsl
or
fsubrl
mov
push
incb
addr16
jp
sub
es
pop
add
popf
and
mov
xor
cmc
ds
lcall
outsb
idivb
cli
xor
gs
inc
popf
xor
scas
cmpsb
fbld
sub
rolb
cmp
jp
xchg
lock
inc
sbb
mov
nop
insb
add
push
inc
cmp
push
push
mov
shrl
pop
xchg
mov
gs
mov
push
loope
sub
pcmpeqw
lods
lret
in
and
push
mov
ret
add
into
es
test
fidivrl
lods
jb
add
aad
clc
jecxz
arpl
push
stos
shlb
insb
push
xchg
or
dec
jnp
in
lret
xchg
imul
mov
cli
cmp
sar
mov
movsb
dec
int3
adc
sbb
bound
cwtl
cli
fiadds
push
fwait
jnp
jecxz
aad
icebp
fimuls
addr16
pop
add
shlb
mov
cwtl
rcr
mov
jp
inc
ss
mov
dec
mov
cmp
divl
test
jne
inc
imul
std
mov
inc
rcll
repz
lcall
rorb
dec
shll
lods
mov
mov
orl
mov
jge
xchg
add
mov
dec
mov
movsb
jno
stc
hlt
icebp
inc
dec
inc
and
shlb
dec
ja
sbbb
and
push
mov
loope
cli
sbb
mov
test
ja
mov
leave
ficoml
sub
xchg
aad
pop
fsubr
mov
je
xor
inc
lods
sbb
xchg
sarb
xchg
sbb
mulb
mov
pop
dec
or
insl
lods
cmpsb
jp
mov
cwtl
mov
loop
cld
jae
adc
lret
mov
sbb
lahf
nop
loopne
fs
ret
clc
dec
jnp
das
in
cs
sbb
pusha
sbb
iret
outsl
push
dec
push
out
push
inc
inc
fstpl
push
sbb
mov
mov
or
mov
lds
std
cs
mov
inc
lods
test
test
in
filds
push
jbe
jb
lret
lret
inc
lock
scas
mov
sub
push
aaa
cmp
loopne
push
jbe
sarl
push
pop
push
sarb
out
add
jns
and
or
es
mov
data16
sub
jne
lcall
in
xor
push
adc
shr
popf
test
mov
ret
sub
jb
adc
out
mov
sbb
aam
pusha
mov
mov
pushf
sbb
pusha
sub
fs
fs
xlat
sub
out
inc
fldenv
scas
bndldx
jne
aaa
jnp
lahf
shrb
inc
push
inc
mov
cmp
dec
fwait
lock
push
movl
repz
mov
shll
outsl
js
and
jecxz
or
jno
sahf
push
cmpsb
pop
js
jb
push
fsubr
add
outsb
jecxz
jl
pop
mov
cmp
dec
in
loopne
lods
leave
stos
es
add
mov
aaa
dec
mov
jmp
mov
dec
mov
pop
ds
pop
sbb
scas
lock
or
stos
lcall
cmpsb
cs
push
jb
add
sub
sub
scas
fnsave
push
test
sub
sarb
and
push
mov
add
pop
dec
loope
mov
test
pop
in
xor
adc
inc
dec
add
xchg
into
lods
mov
jnp
fsubrl
mov
in
std
xchg
mov
cltd
and
jb
cmp
enter
push
icebp
loop
lret
sti
jmp
adc
popf
pop
or
jl
out
movsl
jae
test
or
loopne
push
insl
aaa
inc
xchg
clc
mov
mov
dec
out
shll
sub
jmp
jb
push
bound
das
cmp
push
pop
sub
sbb
cmp
pop
in
xchg
mov
stos
cmpsl
or
cld
sub
adc
bound
out
jp
stc
push
xchg
cmp
mov
dec
out
dec
inc
lahf
push
jl
xor
stos
pop
or
es
aam
sbb
pop
and
nop
outsb
push
cmp
imul
pop
or
fs
xchg
mov
adc
and
int
jl
loopne
or
mov
pop
jnp
sub
cmpsl
lahf
add
mov
movsb
movsl
nop
inc
or
mov
xor
sub
jg
cmp
xchg
ss
push
sub
add
mov
dec
imul
ret
xchg
cltd
daa
shr
jge
dec
mov
xchg
cld
movsl
mov
divl
and
js
adc
lcall
int
in
fdivrs
adc
jl
leave
call
iret
mov
ret
jnp
and
jmp
loopne
mov
movsb
mov
inc
pushf
xor
mov
xor
adc
adc
or
jp,pn
cwtl
aas
mov
adc
inc
mov
cmp
pushf
mov
sbb
dec
test
fnstsw
jo
sub
scas
fisubrl
inc
dec
mov
popf
cmc
mov
insb
leave
or
mov
in
pusha
and
repz
fwait
scas
lahf
jmp
xchg
insl
insl
dec
cmp
loop
sub
pop
in
scas
ficompl
or
aad
sbb
in
pop
sub
dec
xor
fdivl
mov
dec
cmp
xchg
lods
add
jmp
cli
lods
lret
mov
xor
push
lock
and
jne
add
stc
push
sub
mov
es
mov
clc
das
lret
xor
in
dec
dec
aam
push
pop
inc
imul
test
push
imull
in
push
xchg
adc
pop
je
and
insl
scas
les
es
idivl
push
js
lea
aad
arpl
test
ss
rolb
iret
push
mov
stos
dec
sub
mov
outsb
mov
repz
push
dec
mov
adc
jae
pop
dec
fidivl
mov
pop
rcrl
sub
lea
pop
int3
lods
jbe
bnd
push
dec
stos
rclb
lods
into
bound
ficoml
repnz
inc
xchg
cwtl
pop
xchg
inc
mov
mov
push
adc
add
adc
addr16
loop
xchg
insl
sbb
add
and
xchg
xor
xor
rcll
lock
ret
aas
add
negb
fistps
stos
rclb
pop
loope
xchg
xlat
pop
sbb
lret
lret
cmp
inc
scas
or
pop
sahf
dec
aas
cli
mov
in
cvtpi2ps
cmp
shll
pop
mov
je
inc
in
shlb
jbe
push
dec
cmc
xlat
cmp
xchg
jmp
add
fs
adc
test
cmp
pop
lock
push
mov
push
movsb
sbb
std
xchg
mov
push
aaa
in
cli
mov
sub
arpl
mov
lods
pop
or
movsb
cli
add
adc
jl
adc
pop
lret
adc
xor
jne
rcrl
push
pop
sbb
inc
in
loop
sahf
arpl
mov
xor
mov
inc
rcll
jbe
inc
in
dec
mov
shrb
mov
cmpsl
cmc
add
push
xchg
jnp
imul
fists
les
pop
xchg
rcr
lcall
roll
jl
jl
imul
or
rcr
sub
bound
test
and
and
out
xchg
int3
and
or
or
ds
pop
mov
jo
cltd
ror
icebp
jle
push
add
xor
insl
jbe
dec
adc
es
cmc
movnti
cmp
data16
mov
mov
jp
mov
repnz
orl
mov
pusha
das
inc
adc
daa
and
call
ret
sti
xor
sub
pushf
inc
jg
pusha
in
adc
cmpl
cmp
or
lea
fsubl
and
mov
dec
mov
dec
mov
adc
nop
or
add
fcmovu
lock
fnstcw
imul
cmpsb
jg
out
mov
lods
pop
pop
and
mov
movsb
pop
xchg
mov
pop
bound
sub
cmpsl
cmc
pushf
popa
imul
push
sbb
lock
push
xor
push
xchg
pop
jb
rolb
push
cmpsb
inc
pop
xor
clc
push
xor
lahf
cmp
cmp
push
inc
xchg
cmp
push
pmulhw
sub
mov
pop
jb
adc
dec
sub
mov
pop
inc
adc
dec
mov
pop
or
pop
cmpsl
xorl
ljmp
xchg
ror
push
mov
out
fildll
inc
cmp
aas
subb
adc
push
lods
xor
adc
pop
xor
jg
sub
sbb
imul
dec
inc
fnstsw
daa
fisubrs
dec
lods
loop
adc
adc
aam
in
inc
cltd
dec
cmp
xor
test
lcall
test
out
cltd
xchg
xor
jl
mov
mov
xchg
sub
pop
js
pop
inc
inc
jmp
bound
push
leave
push
out
push
stc
jne
push
pop
or
xchg
dec
fstl
sbb
pop
dec
or
mov
adc
xor
div
push
dec
and
inc
das
fstpt
fs
aad
into
mov
push
cmp
out
leave
sbb
jno
aaa
add
negb
std
enter
imul
cmp
into
mov
add
mov
pushf
jbe
or
add
adc
insl
sub
orb
inc
sbb
cs
cltd
mov
lods
xor
inc
or
pop
sbb
inc
mov
mov
cmc
adc
mov
pop
icebp
lods
mov
mov
xchg
cmp
and
sbb
sbb
je
jno
adc
or
mov
out
pop
xor
aas
push
inc
arpl
sub
pop
movsl
fwait
scas
notb
mov
jecxz
int3
lea
and
pop
dec
movsb
repnz
or
push
inc
mov
sahf
aaa
and
aad
or
aad
mov
test
inc
mov
outsb
pushf
sbb
mov
cmpsw
add
addl
sti
xor
jge
pop
pop
mov
js
cld
lods
je
lods
into
lcall
arpl
in
jp
rcrb
sbb
mov
scas
aas
loop
lret
lcall
testl
inc
inc
ljmp
lock
mov
sub
dec
and
cli
lcall
jae
xchg
push
pop
pop
pop
mov
popfw
add
lods
ja
cli
jl
lcall
shll
mov
ja
and
mov
addl
cmpsl
out
movsl
js
and
push
mov
sbb
test
push
imulb
shl
inc
out
sti
sbb
inc
jno
sub
inc
scas
xor
dec
sti
bound
xchg
aaa
push
push
fcoms
pop
aaa
inc
sub
sub
sbb
push
dec
sahf
and
out
inc
xchg
inc
fldt
pop
das
out
sbb
sahf
sub
adc
push
adc
mov
jae,pt
mov
push
push
push
pop
mov
dec
in
xchg
mov
in
mov
movsb
push
inc
xor
mov
pop
dec
mov
js
jnp
ret
test
and
fstps
push
sbb
fisttpll
cli
sub
pop
arpl
add
xchg
and
pop
test
inc
aad
jle
cmp
push
cmpb
push
sbb
stc
jnp
jp
pop
pop
insb
mov
test
jle
adc
push
icebp
lds
dec
popf
and
sub
aas
mov
or
mov
sbb
push
out
stc
mov
das
xchg
jno
fnstsw
cmp
mov
push
xor
jmp
dec
cmp
xchg
popa
mov
push
clc
ss
call
and
mov
lods
sbb
push
cmp
xchg
inc
adc
mov
or
inc
lea
rcrb
mov
dec
cmpsb
in
ljmp
std
aam
adc
fimull
or
adc
xchg
xchg
cmpsb
mov
leave
outsb
push
jmp
mov
sarl
jns
mov
jmp
push
jo
jp
outsl
loopne
pop
or
add
and
movsb
mov
das
push
sbb
pop
adc
dec
aas
mov
movsl
mov
fdivrl
in
in
aam
mov
sub
cs
fsubl
xchg
push
pop
rcll
call
lcall
jne
cmp
push
in
jnp
jnp
and
pop
rorb
and
ret
jb
lret
gs
clc
in
sub
mov
push
jae
add
shrb
xor
pop
xchg
jo
sbb
sarl
mov
les
sub
pop
xchg
add
and
fwait
mov
test
dec
jae
push
loope
in
loope
or
inc
jbe
test
sti
add
xor
movsl
out
stos
imul
dec
mov
mov
xor
fwait
cmp
push
or
and
cmp
insb
adc
mov
sbb
mov
dec
xor
inc
jne
pop
mov
test
cs
aas
jae
sub
inc
inc
inc
xor
jb
outsl
adc
mov
and
mov
pop
popa
stc
mov
data16
mov
mov
sbb
in
mov
and
xor
xor
inc
adc
lret
rorl
lret
cwtl
sahf
shl
push
pushf
loop
mov
sub
cwtl
shll
clc
mov
cmc
push
adc
mov
push
notb
adc
nop
mov
mov
cmp
ret
adc
fisttps
sbb
outsl
pop
adc
into
repz
xchg
gs
dec
jbe
mov
push
scas
xchg
dec
jmp
xor
sbb
fwait
cmp
arpl
ret
mov
scas
push
mov
ja
inc
pusha
xchg
sbb
ljmp
pop
scas
or
dec
pop
cmp
adc
in
mov
inc
inc
jnp
cmpl
jnp
jecxz
cmp
xchg
int
imul
lret
adc
bound
or
dec
cs
push
xor
fwait
inc
ja
pop
pop
jns
in
jo
movsl
fstps
sub
aad
cmp
sub
xor
fcmovbe
xchg
jl
mov
mov
add
cmp
scas
fsubr
and
jle
push
jmp
test
dec
int
xor
push
ret
push
cmp
inc
dec
mov
jbe
clc
int3
cmpsb
imul
ret
jl
ss
icebp
mov
lcall
or
cmp
sbb
jbe
pop
adc
repnz
push
lock
mov
or
mov
adc
dec
pop
adc
and
inc
pusha
push
mov
adc
mov
notb
repz
addr16
enter
sub
fdivr
arpl
or
push
fisttpl
xorl
fstpt
sub
mov
lods
adc
add
jbe
adc
or
loope
dec
adc
inc
neg
fs
ds
adc
in
mov
rorl
push
inc
pop
adc
or
push
xor
vucomisd
mov
and
xchg
lcall
ds
cmp
add
fdivr
out
pop
loopne
dec
jecxz
jne
loop
sbb
mov
in
lods
mov
jl
sub
stos
scas
imul
pop
aas
jae
jo
add
xlat
add
bound
outsb
mov
mov
xchg
inc
mov
sbb
es
sahf
ficomps
inc
xchg
adc
fstl
insw
outsb
mov
orb
les
ljmp
push
xchg
jnp
bound
testb
xor
cmp
xor
stos
lcall
dec
shlb
cmpsl
enter
pop
ret
mov
adc
cmpsl
cmpsb
pop
mov
pop
sub
jns
insl
ret
add
test
pop
adc
jp
jmp
xlat
outsb
xor
dec
std
sbb
shll
push
lock
dec
adc
inc
xor
cwtl
ret
pop
hlt
aaa
cmp
orl
lcall
rol
rol
inc
in
mov
xchg
mov
testl
loope
mov
stos
movsb
int
push
aam
out
dec
imul
and
push
mov
pop
mov
inc
sub
adc
lock
mov
insl
das
shll
nop
imul
inc
xchg
mov
flds
clc
xor
mov
in
repz
hlt
ficomps
push
imul
icebp
clc
mov
cmc
mov
mov
pop
inc
addr16
loopne
or
jmp
pop
mov
in
ljmp
cmp
jle
xor
cmp
inc
repz
sbbl
test
movups
xor
pop
inc
aam
pop
int3
lret
xor
xor
sub
outsl
jno
enter
pop
cmp
nop
stos
je
enter
jmp
cmp
and
fidivrs
xchg
out
das
cmp
cmp
jle
sub
ret
call
dec
pushf
sbb
movsl
pop
orb
mov
test
clc
ret
rol
sub
insl
cwtl
lcall
xchg
or
hlt
scas
shlb
push
out
mov
mul
sbb
and
jg
lahf
insb
pop
aas
adc
daa
outsb
test
adc
pushf
mov
cltd
shrb
popf
sub
sbb
shlb
ljmp
shlb
js
sbb
bound
addr16
ss
out
pop
cmc
ret
pusha
icebp
mov
or
notb
lea
nop
jbe
movsb
ljmp
adc
in
pop
or
adc
jmp
pop
mov
or
aaa
mov
shr
mov
gs
mov
outsb
scas
call
xchg
call
ret
test
pushfw
jmp
fisttpl
pop
pop
xlat
xchg
sti
aas
call
lds
call
and
lods
sub
mov
nop
aad
loope
sub
aam
fs
sbb
push
jb
adc
imul
xchg
imul
imul
adc
add
cmp
cli
and
or
pushf
and
repz
jmp
jge
outsl
inc
int3
daa
out
inc
adc
in
push
jg
ljmp
xchg
mov
xchg
arpl
xor
cs
stos
mov
pop
lret
jge
pushf
cmp
sbb
mov
int3
xchg
imul
stc
add
and
fildll
dec
rorb
fildll
jmp
xchg
aas
xchg
sub
mov
fidivs
out
mov
sbb
push
adc
dec
pop
test
pop
mov
js
cmc
mov
mov
inc
xchg
ret
dec
mov
test
push
clc
inc
push
xchg
stc
ds
xchg
mov
or
js
in
not
jecxz
mov
loope
insl
aad
ret
xorb
lea
gs
hlt
cmp
jnp
sahf
sbb
push
inc
xlat
add
jecxz
adc
lret
fildll
xchg
mov
inc
inc
rorl
sub
notl
cli
repnz
pop
sub
addr16
sub
jmp
sbb
mov
imul
popf
adc
outsl
sbb
movsb
xlat
push
push
dec
cmp
lods
sbb
jp
xchg
xchg
pop
push
add
fs
jae
cmpsl
mov
inc
inc
push
pop
pop
jnp
adc
in
nop
xor
je
xlat
sti
cs
int
popf
dec
fsts
mov
sub
cmpsl
and
mov
mov
sub
movsl
subl
fdivrl
mov
movsb
decb
outsl
push
mov
stos
sbb
and
cli
inc
shrb
imul
sub
shrb
fwait
lret
push
xlat
test
int3
leave
fidivl
nop
out
hlt
mov
mov
lods
cli
cmp
pop
mov
fs
mov
mov
jns
in
mov
arpl
lret
aam
mov
pop
push
and
xchg
xchg
mov
jne
lds
jmp
ret
and
push
addb
outsb
repnz
pop
jle
cmp
mov
push
sbb
pusha
lea
jo
dec
mov
mov
ja
push
movsl
imul
mov
cmp
xor
out
lea
rolb
mov
jnp
mov
decb
push
test
test
cltd
push
mov
pop
repz
outsb
xor
adc
sbb
cwtl
xchg
mov
aad
cmp
bound
jne
adc
inc
dec
pop
xchg
aam
xor
jmp
and
jne
push
sub
stos
shll
sbb
cmpsl
cmc
test
fcmovne
pop
fidivrs
xor
dec
sbb
push
jle
mov
adcl
sti
mov
push
sbb
xor
popl
jg
pop
jne
je
mov
mov
xlat
inc
inc
sub
imul
sub
flds
or
into
pop
cs
push
pop
ret
mov
adc
jne
nop
mov
mov
lret
dec
and
addr16
ljmp
stc
gs
inc
out
fidivl
adc
icebp
jmp
cmp
inc
mov
les
cmp
pop
inc
in
rorb
or
lods
cld
push
mov
in
xchg
jge
icebp
pop
push
fidivs
iret
mov
pop
out
cmpsl
pop
inc
sbb
int
mov
loopne
and
xor
xchg
mov
xchg
mov
dec
and
lds
and
insl
clc
jmp
inc
xchg
ficompl
push
or
cmp
loop
xchg
int
popf
mov
neg
mov
insl
mov
lahf
call
mov
test
cmp
sub
fwait
loope
popa
out
cwtl
pop
sbb
notl
xchg
push
push
mov
loop
cmp
andl
insb
jnp
dec
push
decb
xchg
and
ficoml
ret
jmp
cli
loope
and
outsb
jnp
mov
xor
push
push
mov
test
sbb
fistl
test
mov
test
fisubrs
and
cmpsb
mov
mov
sub
dec
into
or
aad
aaa
pop
and
cmp
jne
sub
sti
aad
les
lahf
stc
mov
in
push
and
adc
inc
bound
sub
add
out
fidivs
out
dec
fistl
in
insl
shll
shlb
inc
fildll
imul
js
add
pop
loop
xorb
mov
int
inc
lods
popf
pop
bound
test
push
xchg
mov
fildl
call
sub
jae
repz
std
jl
int3
dec
mov
out
clc
mov
repnz
fnstenv
pop
lret
sarb
stos
or
pop
sbb
hlt
mov
clc
bound
fstl
cmpsl
in
dec
test
clc
test
das
sub
addr16
nop
in
jne,pt
adc
fdivl
sbb
or
pusha
or
mov
je
leave
or
dec
pop
or
aas
int
xchg
sbb
dec
out
ficompl
and
and
dec
pop
push
es
sub
xchg
push
std
cvtps2pi
data16
sub
fs
out
jb
jne
adc
jl
mov
xor
or
inc
or
jmp
movsl
mov
sbb
or
or
pop
cmp
addb
out
mov
push
inc
push
mov
mov
xlat
stc
mov
pop
pop
cmp
arpl
jmp
dec
jns
mov
cs
push
inc
xor
clc
pop
cmp
rclb
jne
mov
pusha
fs
add
outsl
xchg
xchg
xlat
cld
movsl
daa
push
mov
pop
ja
hlt
out
lock
andl
shl
punpckhwd
fisubl
lods
cli
mov
add
cli
mov
jae
cmpsl
push
jle
inc
mov
addl
pusha
dec
lock
dec
push
loope
or
pusha
pop
mov
dec
lahf
pop
and
pop
lret
in
aam
rcll
out
sti
cli
add
jne
inc
test
or
and
and
and
adc
sub
into
xchg
adc
mov
icebp
add
stc
push
sub
pop
aaa
cmpsb
push
ja
inc
mov
push
lea
imul
int
cli
lahf
add
xlat
scas
jo
or
mov
insl
cmp
pushf
sub
out
cmp
cld
pop
ss
iret
jns
clc
xor
je
mov
ljmp
bound
movsl
test
fistpll
cld
dec
push
sub
addr16
data16
xorl
pop
inc
out
arpl
and
or
in
pop
lret
fs
lods
andl
xlat
lods
das
add
arpl
sub
icebp
or
adcb
add
sarb
sub
push
dec
andl
js
jle
sbb
adc
adc
out
movsl
mov
mov
push
cmp
inc
pop
push
idivb
mov
into
sub
popf
imul
dec
fwait
add
aas
outsl
ret
ja
out
ret
mov
lds
cmovs
in
and
mov
cmpsl
out
jne
sbb
mov
dec
xchg
cmpsl
aam
into
cmp
sti
cmp
cmp
ret
in
pop
ja
test
xchg
xchg
sub
insb
mov
push
aaa
mov
pop
outsb
lret
jb
xlat
cmp
or
repnz
sbb
fidivrs
sahf
popl
sub
mov
lock
jg
pop
mov
push
add
adc
inc
or
xchg
aas
hlt
and
xchg
idiv
outsb
add
add
test
arpl
arpl
ret
out
popa
pop
jns
lret
dec
cmp
pop
and
iret
sbb
inc
test
and
pop
pop
les
fidivrl
adc
icebp
out
stos
fwait
sbb
and
int3
lret
mov
arpl
jbe
popa
sarb
and
pushl
dec
fisubl
adc
paddb
adc
ret
mov
out
pop
ja
xchg
jae
or
jae
push
in
mov
into
lret
loopne
xor
sbb
aaa
js
xor
xor
adc
add
leave
lods
dec
and
mov
xchg
sub
inc
mov
adc
icebp
stos
xchg
adc
out
xor
int
add
mov
arpl
dec
push
add
mov
in
out
imul
xchg
popf
pxor
in
push
gs
nop
test
mov
adc
cmp
fs
dec
rorb
xchg
adc
xor
push
rorl
pop
lret
mov
popa
std
les
add
and
and
pop
std
push
dec
popa
push
jp
lea
rolb
fistpl
mov
gs
notb
mov
out
xchg
iret
filds
pop
xchg
xchg
add
insl
into
ret
or
fisttps
je
test
movsl
xchg
mov
inc
cmp
call
lods
sub
xor
scas
add
add
in
pop
int3
mov
and
outsb
mov
add
xor
lcall
sbb
les
dec
test
or
cmpsl
xchg
pop
pushf
rol
out
clc
jg
inc
sti
cmp
in
pushf
inc
mov
out
jge
cltd
lods
pop
and
test
jns
jmp
out
insl
xchg
iret
sti
sbb
jo
or
jge
frstor
mov
in
lcall
xor
mov
mov
adc
test
aad
adc
adc
rcrb
cmpsl
add
imul
mov
mov
loope
inc
mov
mov
xchg
addr16
int3
and
in
insl
pusha
add
cli
xor
push
adc
xor
jb
hlt
cmp
inc
adc
test
xchg
mov
aas
cli
inc
stos
sbb
loopne
xchg
mov
mov
cmc
mov
es
cwtl
aas
add
scas
pusha
or
xor
xchg
jae
movd
dec
rcl
pop
pop
jg
out
mov
aam
and
cli
cmc
add
cmp
inc
push
xlat
fucom
and
xchg
lret
push
loopne
testb
loop
sbb
imul
sbb
xchg
adc
shr
sbb
movsb
sub
pop
mov
in
popf
or
in
sbb
mov
add
lahf
scas
inc
pop
fsubs
cmp
or
xchg
negl
mov
lret
sbb
sub
sahf
leave
fwait
jb
pop
jb
in
jp
ss
cltd
mov
or
or
jbe
sbb
out
cmp
mov
shrb
sbb
mov
fsts
arpl
or
and
mov
sub
ja
pop
mov
jge
imul
faddl
sti
push
adc
ss
das
in
sbbb
jge
cmp
inc
aam
shrd
imul
sbb
ret
sub
nop
call
in
dec
xchg
adc
push
xor
cld
shrl
jns
add
inc
adc
std
sbb
add
jl
je
jg
jp
aam
test
jge
mov
repnz
mov
sbb
and
mov
insb
mov
jo
js
mov
aas
add
outsb
mov
cltd
fmul
cwtl
das
setnp
roll
mov
daa
pop
out
stos
sbbl
jns
mulb
pop
mov
cltd
mov
cmp
mov
ffree
xchg
add
lahf
sbb
cmpsb
rol
pop
mov
sbb
mov
jae
inc
into
dec
stos
popf
push
xchg
test
add
pop
cmp
call
mov
test
je
je
or
inc
movsl
sbb
sub
pop
mov
lret
int
jle
gs
inc
mov
sub
repz
out
add
jae
fwait
sbb
out
into
aaa
xor
addr16
mov
rolb
dec
lret
xlat
mov
out
iret
and
push
test
and
mov
mov
std
mov
push
fwait
into
pop
mov
movsb
idivl
popa
or
mov
lret
add
or
xchg
cltd
add
xor
add
pop
jb
adc
and
push
mov
xor
test
adc
movsl
push
sahf
es
popf
lock
add
xor
cmp
gs
pop
add
popf
mov
cmp
mov
daa
popf
dec
cltd
and
rol
scas
dec
xchg
nop
jg
cld
add
dec
shrb
pop
int3
dec
jecxz
cmc
lock
add
cld
cmp
xor
mov
dec
jns
push
lret
cltd
mov
js
je
push
je
ffreep
mov
or
xchg
mov
jnp
cmp
and
inc
ljmp
loop
xchg
fcoms
add
inc
and
out
popa
xchg
cmp
ret
in
lods
ds
jns
xrelease
jle
sub
add
mov
and
xchg
es
xchg
sbb
ss
or
push
cmpsl
test
loopne
cld
mov
aas
shrb
mov
pushf
pop
ret
dec
mov
push
or
xchg
scas
inc
int
leave
subb
es
es
ljmp
mov
mov
stos
jbe
daa
repz
mov
out
lods
cltd
test
mov
cli
xor
pusha
cmp
imul
fldenv
aas
add
testl
fidivs
mov
mov
jp
gs
pop
jbe
push
xor
jge
inc
insb
sti
mov
test
pop
notb
or
test
fldl
mov
jecxz
cmpsb
push
idivb
push
jge
dec
lods
cs
dec
jle
test
push
sub
sbb
adc
lods
inc
lods
in
ljmp
sbb
mov
repnz
jl
ret
xor
sbb
adc
sti
pushf
mov
dec
or
push
js
lea
sti
dec
jmp
jo
in
mov
xchg
imul
jae,pn
push
inc
icebp
stc
push
in
cmc
or
js
push
adc
aas
adc
mov
fdivrl
add
dec
mov
or
das
sti
pushw
out
mov
xlat
xchg
in
dec
shll
pusha
lcall
pop
sahf
or
push
shlb
scas
jg
out
mov
xchg
or
add
insl
pushf
clc
ljmp
mov
dec
cwtl
and
pop
sbb
loopne
jmp
mov
jns
ja
and
add
mov
and
les
ficoms
popf
sbb
sbb
push
cmpsl
inc
push
inc
je
sub
scas
cmp
jbe
cmc
scas
into
lret
lods
aas
adc
into
into
leave
xorb
push
or
into
xchg
daa
inc
add
cli
in
stos
xchg
imul
lret
cmc
push
push
pop
dec
outsb
sub
jecxz
fisubrl
stos
mov
add
icebp
iret
adc
or
xchg
xchg
popa
out
test
iret
mov
mov
xor
cmp
dec
lcall
add
mov
pusha
imul
cltd
imull
aas
mov
adc
push
dec
gs
sahf
icebp
das
dec
jg
mov
mov
jne
aad
es
dec
fcomps
mov
popa
es
cmp
mov
shl
pop
into
pop
gs
loope
or
ljmp
sub
push
or
xor
xchg
sub
clc
fnstcw
jmp
lahf
or
pop
mov
aam
jbe
ja
das
dec
xchg
push
mov
xor
dec
mov
out
add
imul
xchg
fs
stos
inc
loopne
mov
icebp
sahf
mov
inc
sbb
das
jbe
adc
ret
icebp
inc
cs
mov
mov
fisttpl
push
and
mov
cmp
mov
fadds
popf
push
xchg
dec
je
jecxz
call
aam
mov
adc
lahf
movsb
lahf
mov
xchg
jb
jbe
xchg
sarb
xor
push
insb
jns
test
out
lea
mov
psrad
push
mov
push
mov
push
mov
andl
mov
ljmp
and
pop
cmp
mov
sarl
xor
rorb
xor
cli
xor
sub
jge
fdivrs
aaa
or
test
mov
pushf
out
pushf
cld
push
mov
pop
mov
mov
push
sub
fbstp
cmp
sbb
mov
fistps
in
leave
pop
mov
iret
dec
movsb
adcb
popa
test
or
push
bnd
lods
in
lcall
int3
scas
lock
or
push
push
test
xor
gs
sarb
lahf
cmpb
fnstcw
add
sub
or
out
je
jle
cwtl
jne
fldt
popa
data16
hlt
and
pop
sub
sahf
arpl
mov
pop
jecxz
push
stos
sbb
test
dec
pop
inc
pop
dec
lds
pop
sbb
jle
fsubrl
mov
fnstenv
lret
push
out
sbb
mov
jo
test
repnz
test
stc
xchg
aas
gs
mov
out
adc
push
pop
push
mov
push
mov
xchg
nop
inc
inc
mov
xchg
scas
push
mov
push
fmull
sub
dec
mov
or
js
pop
rcll
or
test
loop
cli
mov
mov
loope
ljmp
fst
iret
aam
sbb
dec
movsb
das
aas
arpl
pop
mov
orb
or
mov
pop
inc
xchg
sbb
shl
mov
les
loope
adc
mov
sub
or
push
out
xchg
push
push
and
dec
ss
in
jae
xor
lock
ljmp
test
lds
or
push
bnd
mov
shrl
gs
mov
out
sbb
adc
mov
add
xchg
push
jle
or
aam
pop
aam
cmp
ficompl
jl
and
lret
pop
call
xor
jbe
lcall
pop
sub
cwtl
mov
mov
mov
lock
cmp
inc
cli
xlat
loopne,pn
xor
cwtl
adc
rcll
jae
mov
mov
sti
mov
sub
pop
inc
out
test
mov
mov
mov
mov
or
inc
mov
push
or
mov
mov
sub
imul
sub
dec
add
loop
push
jle
jl
jle
fwait
sub
inc
movsl
and
les
pop
lcall
fimuls
shlb
sbbl
jb
das
pop
mov
mov
lods
add
shlb
sbb
outsb
sbb
test
clc
loope
stos
clc
mov
adc
fmull
mov
xor
into
mov
push
jl
std
fisubl
fwait
mov
push
mov
arpl
xor
push
shrl
mov
push
ss
sub
pop
adc
mov
shrb
clc
jle
cmp
xchg
adc
or
jle
adc
push
cmp
adc
sub
arpl
mov
dec
or
xor
ret
mov
fistl
xchg
and
xchg
cld
mov
pop
loope
daa
add
sub
daa
mov
lods
mov
xor
dec
scas
pop
pushf
outsl
mov
daa
mov
adcb
dec
gs
sub
dec
outsl
pop
pop
cmp
push
pusha
lods
mov
push
into
cld
push
arpl
cli
out
nop
push
xor
imull
gs
push
xlat
ret
out
insl
pop
mov
mov
mov
adc
pop
das
pop
push
andb
loopne
inc
xor
cs
gs
cmp
shrb
sub
fdivl
sub
or
and
push
push
addb
out
cmpb
mov
test
jo
mov
jecxz
fldenv
sbb
add
lret
int
add
test
ds
jmp
sub
sub
jl
and
pop
lods
out
xchg
dec
xchg
xor
mov
leave
sti
outsb
lea
sahf
cwtl
push
sbb
dec
lahf
push
inc
movsl
test
xorb
cld
pushf
xchg
xchg
and
out
adc
in
cli
cmpsb
icebp
mov
mov
std
rcl
pop
jno
lahf
cmp
out
or
mov
call
pop
data16
mov
dec
jmp
ret
add
test
mov
jne
mov
xchg
pop
push
fmuls
mov
mov
divl
aam
adc
and
jno
cmc
emms
outsb
sub
std
mov
push
add
push
subb
pop
out
repnz
mov
dec
adc
shrb
and
xor
adc
inc
repz
mov
flds
jno
jle
adc
ss
loopne
sub
fwait
jno
mov
repz
pop
mov
lret
gs
jp
and
adc
inc
int3
mov
xor
adc
sbb
push
arpl
clc
add
rorl
sbb
stc
mov
sub
cs
push
pop
adc
lds
mov
sbb
jp
aas
xchg
xchg
mov
add
bsr
sbb
fwait
pusha
sahf
mov
cmpsb
out
cmp
or
xor
mov
pop
loopne
fs
mov
pslld
mov
ret
repz
push
or
sub
xchg
test
mov
in
add
pop
pushf
adc
cmp
dec
divl
aad
or
in
int
shlb
div
pop
sub
aad
and
sbb
xor
mov
popa
push
pop
add
sub
lret
mov
mov
mov
sub
and
xchg
mov
inc
or
fnstsw
inc
sub
push
mov
jmp
or
ret
add
mov
rorb
ret
sbb
jns
int
sub
mov
ja
add
mov
xor
add
std
push
jmp
shll
lcall
push
fwait
jbe
xchg
adc
xor
mov
insl
inc
out
mov
loope
dec
adc
fld
mov
sbb
in
movq
je
gs
mov
xor
sub
and
mov
lret
setge
cmp
xor
insb
je
xor
std
negb
xchg
pop
sahf
push
ret
test
cltd
in
fstl
adc
sbb
mov
dec
pop
mov
popf
xchg
pop
mov
je
std
dec
sub
shr
dec
repz
call
add
add
jmp
xor
xchg
rcrl
or
mov
mov
cld
mov
int3
push
pop
inc
cmp
sbb
lods
pop
jecxz,pt
fildll
fldenv
arpl
inc
imul
and
adc
shlb
inc
loope
or
and
fdivs
icebp
xchg
in
mov
add
cs
int
adc
call
and
pop
int3
cmp
cli
mov
add
call
popf
mov
dec
jmp
mov
push
shrl
mov
idiv
sbb
mov
lds
inc
aam
leave
icebp
flds
dec
outsl
rorb
lds
cmpsb
loopne
and
fistpll
xor
add
loope
out
test
sub
push
pop
jecxz
lea
lds
pop
repz
and
jo
in
in
jmp
andb
pop
std
pop
sub
or
adc
sahf
adc
sbb
jmp
push
xorl
scas
rorb
ja
aam
add
dec
daa
cltd
je
jnp
cmp
mov
les
or
pop
cltd
cmp
popf
movsl
sbb
mov
fidivl
sar
gs
lret
fsts
sbb
test
sbb
fldl
mov
cmpsb
jns
stos
hlt
sub
cmp
push
mov
aam
mov
das
and
sub
nop
repz
scas
mov
test
dec
cmp
push
lods
out
outsb
icebp
out
sbb
fsub
xchg
cmpxchg
add
xchg
sahf
test
xchg
aaa
fwait
jns
sbb
jne
sbb
xchg
sub
ljmp
repnz
dec
lret
inc
fcmovbe
cmc
loopne
push
aad
xor
add
les
jp
fistpl
adc
movsb
movsb
shll
mov
and
mov
int
mov
mov
icebp
iret
pop
cli
and
and
or
lret
add
xchg
xchg
cmp
aad
jle
cmp
mov
fs
js
sub
fnstenv
jmp
add
in
pusha
hlt
shlb
xchg
xchg
icebp
data16
ds
push
inc
add
les
clc
rcll
vaddsubps
push
xor
jmp
mov
cmp
ss
call
in
in
arpl
mov
aaa
icebp
repz
add
shrb
inc
mulb
ss
xorl
jge
test
jle
popa
push
lret
jno
mov
scas
and
pop
fisubrs
fldenv
dec
into
faddl
ret
mov
outsb
fmulp
aam
dec
int
ja
lcall
dec
inc
fistl
pop
jge
mov
pop
mov
cmpsl
pop
cltd
lcall
pop
xor
xchg
mov
shll
rol
sbb
mov
mov
outsb
sub
loop
xchg
sbb
ljmp
syscall
in
jae
push
add
into
push
cmp
jg
imul
ds
nop
mov
mov
cld
std
mov
cmpsb
inc
js
xchg
movsl
mov
dec
lods
and
out
xchg
mov
xchg
and
inc
leave
push
test
cli
cmp
mov
add
sbb
psrld
fdivrs
xor
movsb
push
inc
or
adc
add
mov
rcl
fistl
xor
dec
in
cli
jecxz
gs
cmpl
sub
dec
out
imul
hlt
xor
fildll
sbb
sbb
lea
add
mov
mov
data16
push
mov
test
inc
adc
outsl
repz
cmpsl
adc
mov
push
xchg
rcll
rcll
ret
int3
add
stos
push
push
cmp
jg
test
pop
jnp
jns
add
lea
scas
std
xchg
icebp
jo
and
rorl
sbb
jl
popf
insb
jl
scas
add
jno
lods
mov
fistl
push
xor
xor
pushf
mov
sti
mov
jp
push
fcomp
and
fisttps
cmp
pop
xorl
out
flds
insl
push
jmp
sti
aam
and
sbb
push
mov
loopne
int3
and
sbb
ffreep
pop
mov
mov
inc
scas
mov
push
add
lret
pop
aas
mov
add
push
sub
mov
aad
test
sbb
lea
iret
dec
pop
jmp
aas
addr16
jp
mov
adc
in
xchg
arpl
mov
add
mov
add
mov
jg
rcrl
sti
mov
ljmp
mov
insb
mov
dec
mov
gs
inc
dec
pop
cmp
mov
mov
stos
dec
js
loope
sti
je
jmp
loopne
dec
xor
ret
outsl
xchg
aas
mov
icebp
pop
xor
add
sub
cmp
pop
shll
or
xchg
add
lock
nop
sbbl
mov
das
lock
gs
ds
pushf
mov
test
es
push
adc
je
stos
push
jmp
push
jne
push
mov
std
addr16
jns
lahf
xor
mov
call
xor
lds
sti
push
cmp
popa
stos
fwait
xchg
repz
mov
xchg
stos
imul
sbb
fcompl
outsb
cmp
push
push
adc
adcb
stos
enter
adc
push
hlt
inc
pop
repnz
pop
add
int3
dec
pop
push
xor
inc
mov
mov
push
or
push
fbstp
shll
stos
fwait
lcall
nop
popf
addr16
pop
cmp
fs
shrl
push
inc
fwait
rcrb
sub
out
mov
mov
jge
or
sbb
lock
or
xchg
lret
mov
rorb
cmpsb
xor
lret
scas
sbb
jmp
in
inc
push
mov
dec
mov
xor
ret
push
sub
or
cs
aam
mov
shll
mov
mov
inc
stos
dec
adcb
pop
xchg
pop
gs
jl
addb
outsl
jo
mov
icebp
xchg
sub
pop
add
push
lods
xchg
sbb
mov
aaa
mov
lcall
mov
dec
mov
popf
test
clc
rcll
cld
add
xchg
shll
mov
jle
ljmp
sti
or
dec
lea
inc
mov
inc
xlat
popa
ljmp
das
inc
adc
outsb
mov
popf
jge
call
jp
add
insl
mov
test
out
mov
add
movsb
mov
ds
in
mov
sbbl
call
pushf
mov
cmp
mov
push
mov
inc
outsl
mov
clc
stos
pop
aaa
pop
movsl
scas
out
stos
incb
mov
cld
cmpsl
shll
hlt
enter
cs
mov
xchg
aam
lea
fimuls
icebp
push
xor
adc
into
lods
xchg
mov
lods
and
push
xchg
add
sbb
jmp
dec
adc
fnstcw
push
in
imul
fsubr
out
lret
punpckhdq
fdivs
jno
mov
loope
lahf
xor
vmptrld
pop
push
cmp
mov
push
fwait
lret
xchg
fcoms
jg
sbb
in
mov
arpl
sub
mov
cld
test
mov
jp
pop
pop
sbb
hlt
cmc
xchg
scas
mov
mulb
negb
mov
adc
sub
arpl
scas
jge
jmp
shl
mov
aaa
push
sarb
push
mov
mov
movsl
jnp
fwait
notl
mov
fisubl
lcall
xchg
stos
shll
fwait
inc
scas
cmp
movsb
das
mov
hlt
fbstp
sti
orl
cwtl
sbb
add
xchg
xchg
fwait
pop
lods
fsubrl
sub
mov
cmpsl
test
cs
or
sti
imul
clc
call
or
es
gs
cmp
add
push
jne
jne
stos
push
pop
shr
adc
fstpt
or
adc
lods
loopne
or
popf
das
test
ss
pop
stos
cs
lahf
popf
aas
test
movsl
mov
in
push
xlat
mov
dec
inc
iret
dec
imul
stos
in
cld
pop
cmpsl
mov
shlb
mov
push
cmp
jp
test
push
hlt
js
das
lret
ljmp
push
sahf
xchg
inc
rcll
push
cmpl
jns
mov
pop
pop
sbb
lock
mov
sub
jb
sbb
mov
push
pop
mov
jp
mov
jo
inc
xchg
jae
bound
sbbb
xchg
mov
into
jns
sub
push
nop
test
ret
les
push
sahf
ret
adc
in
leavew
cs
xor
adc
xchg
popf
fcompl
mov
jns
subl
jne
xor
fs
fdivrl
inc
out
xor
loope
jbe
in
sub
xchg
std
in
mov
jge
xor
dec
subb
mov
cmpb
clc
stos
repnz
cltd
cmp
add
add
mov
jae
mov
flds
hlt
push
mov
mov
pop
addr16
pop
sub
adc
fisubl
mov
outsb
add
inc
cmp
int3
loope
inc
shl
sbb
lret
and
test
lahf
sub
fwait
aaa
add
adc
jns
stos
jl
and
pusha
sub
test
jge
sbb
in
dec
divb
shll
xlat
cmpsl
scas
gs
mov
mov
mov
pop
cli
add
push
popf
push
mov
inc
jne
iret
sub
sub
push
out
iret
inc
mov
xchg
out
fdivrl
add
jl
pop
shrl
sbb
loop
xchg
js
push
mov
fldt
sbb
push
rcrl
aaa
in
stos
test
outsb
and
mov
mov
in
or
mov
mov
lods
mov
lret
es
mov
test
push
jle
imul
mov
cwtl
xchg
inc
pop
test
push
add
stos
inc
and
sbb
sub
mov
mov
jo
lds
dec
icebp
jno
outsb
inc
test
jge
sub
mov
push
shll
xchg
cmp
add
ss
dec
sbb
pop
inc
call
cmc
call
pushw
xchg
jae
ret
sahf
scas
mov
dec
int
cwtl
push
adc
adc
nop
add
call
aaa
and
scas
jp
aad
mov
and
lahf
leave
or
xchg
cs
sar
inc
jl
jp
xchg
dec
mov
add
test
jb
inc
lea
ja
push
mov
sbb
arpl
push
dec
cli
out
jns
dec
cmc
ja
push
repnz
mov
mov
sub
popl
popf
xor
mov
fldl
iret
mov
insb
adc
push
xor
and
push
int
fdiv
xchg
mov
popf
fists
sbb
sbb
mov
cmpsl
mov
xor
mov
push
cli
sti
in
cmp
mov
in
insb
mov
pop
add
mov
jle
sahf
adc
orb
daa
les
adc
jae
inc
or
fimuls
call
movsl
xor
shrl
stos
test
pop
daa
enter
idivl
dec
daa
mov
test
cli
pop
mov
rcrl
xchg
ret
dec
xor
xor
add
test
sbb
mov
loopew
xchg
std
insl
jmp
or
mov
call
sub
fisttpl
add
outsl
lods
ret
jl
mov
jge
xor
jmp
aam
and
jnp
xchg
movsb
mov
or
mov
aas
pop
outsl
cwtl
cmp
jno
ret
fwait
aam
popf
stos
pop
call
add
inc
add
imul
push
testb
aad
cmpsb
into
int3
lahf
fnsave
daa
insb
ja
das
imul
add
adc
mov
mov
pop
scas
aad
sub
push
lds
push
mov
rep
xchg
aas
push
pushf
mov
mov
jecxz
inc
jge
inc
fisttps
dec
push
xchg
sub
shlb
jo
inc
xlat
push
cld
push
loop
cmp
clc
fcmovu
aam
xchg
xchg
add
out
rcrl
jne
lock
lods
js
out
sub
jmp
jb
das
shrl
dec
repnz
mov
in
xor
fwait
pop
das
mov
and
mov
rcll
pop
lods
das
and
mov
call
hlt
in
cltd
mov
cmpb
sbb
jge
jae
int3
or
pop
xlat
jne
nop
xchg
mov
les
iret
cmp
imulb
addl
insb
sti
movsl
inc
or
sub
pop
inc
out
push
data16
test
and
dec
pop
mov
or
mov
call
adc
xchg
in
rclb
test
daa
mov
aas
popa
nop
jb
pop
jge
pop
sub
sbb
pop
call
fwait
and
push
pushf
or
rorb
add
sub
mov
adc
cmp
ljmp
mov
rep
pop
fs
pop
and
push
pop
push
nop
popa
stos
in
mov
movsl
push
sub
push
pop
xchg
mov
mov
ljmp
mov
xor
and
cltd
xor
fdivrl
cmp
jmp
lret
data16
test
jbe
xchg
pop
insl
lahf
xchg
push
js
repnz
pop
mov
pop
fwait
pop
rcrb
push
mov
arpl
pop
jae
pop
and
jle
sub
mov
pushf
in
arpl
or
das
inc
out
sub
inc
dec
mov
loop
nop
in
lcall
daa
fcomip
xchg
or
rcll
mov
outsl
mov
gs
stos
adc
sub
adc
inc
sub
jg
mov
mov
cs
fsts
negb
shrl
mov
rcll
xor
out
and
daa
enter
or
mov
dec
popf
mov
pop
in
lea
loope
dec
push
dec
mov
push
subl
das
mov
std
cmp
xor
xor
fldcw
test
sbb
in
cli
or
push
jecxz
adc
lea
mov
jg
div
pop
pushf
mov
cmpsl
icebp
adc
out
stc
dec
repz
sbb
cli
frstor
lea
int3
pop
cmp
iret
icebp
inc
bound
clc
sub
and
push
jbe
mov
xchg
mov
jo
rcl
movl
nop
jp
mov
fadd
jle
xlat
imul
and
jae
loope
int
leave
movsl
rcll
lahf
add
jg
pusha
fs
jo
je
mov
sub
stos
shrl
add
addl
cmp
sbb
je
loope
mov
popf
out
jmp
testb
sbb
sbb
inc
push
imul
jbe
mov
pop
fwait
cmp
jne
xchg
xchg
mov
sbb
movsb
xchg
shll
push
and
xor
movsb
test
cmp
in
roll
cmpsl
fdivrl
cmp
int3
ja
sbb
iret
inc
daa
fcomps
and
out
or
mov
xchg
movsl
sbb
cmp
cli
enter
xchg
pop
pusha
ret
testl
addr16
out
insl
sbb
rclb
sub
dec
inc
mov
jg
xchg
sbb
out
gs
mov
fwait
idiv
adcb
push
jle
fs
repz
push
in
inc
rorl
loop,pn
or
cld
jmp
loopne
jecxz
repnz
and
adc
dec
fdivr
sbb
xchg
into
push
inc
sbb
movsl
jbe
or
push
xor
adc
sbb
pusha
inc
push
in
popw
iret
push
mov
and
or
js
fstpt
cltd
push
fildll
cltd
mov
test
and
hlt
nop
and
push
cmp
pop
mov
in
mov
xor
sbb
movsb
movsb
push
ds
cmc
xchg
imul
jo
cmp
mov
lods
sub
test
lods
jmp
rorb
imul
mov
pop
lods
es
outsl
orb
jecxz
aad
lcall
and
shrl
push
inc
cmp
mov
xchg
mov
pushf
mov
pop
lcall
xor
addr16
sub
xchg
jo
push
pusha
push
sbbl
fs
mov
dec
iret
and
push
inc
out
jnp
adc
mov
out
add
aad
add
xor
push
rclb
sub
xlat
lahf
icebp
push
sub
cmc
fldcw
push
push
and
subl
lods
test
loopne
adc
fmul
cmpsb
push
dec
sbb
mov
cwtl
call
xchg
cmpsb
inc
cmp
stos
xchg
mov
push
int3
scas
lock
sub
add
repz
push
test
data16
adc
stos
push
cltd
dec
sbb
outsl
hlt
ss
sub
rcrb
dec
pop
lret
stc
xchg
fsubs
xchg
scas
push
stc
xchg
cmp
and
es
xchg
fwait
jns
mov
xchg
mov
movsl
jo
cmp
imul
repz
addb
in
sldt
std
mov
mov
xlat
mov
shlb
cwtl
into
cs
inc
loopne
jmp
rclb
dec
inc
lret
pop
add
push
jns
add
xchg
jne
dec
fwait
insb
icebp
lret
jle
jnp
hlt
inc
jp
cs
fisttpll
cmc
repz
cmpb
mov
xorl
mov
cmp
shlb
and
mov
mov
adc
mov
pop
push
in
xchg
jmp
popf
adc
adc
push
rcrl
in
cmc
fisubrl
mov
mov
xor
scas
inc
aaa
push
xor
jg
push
subl
aam
push
inc
fs
xchg
test
inc
jl
jns
popa
test
std
iret
add
scas
shl
in
loope
and
adc
sbb
push
test
rcr
xlat
sub
sbb
in
adc
addl
test
sbb
pop
daa
imul
add
es
imul
nop
pop
ds
sahf
mov
ret
inc
cmp
popf
jbe
push
fdivs
mov
mov
cmp
cli
outsb
out
cmc
push
repz
or
xchg
addr16
adc
sbb
sti
push
push
sbb
loop
aas
jl
fstpt
push
pop
cmc
enter
and
mov
dec
jae
cmp
push
and
pop
lock
das
add
mov
mov
xchg
xchg
or
shl
mov
gs
adc
push
lea
and
lahf
sub
adc
cmp
lods
ret
and
sub
ja
xor
inc
bound
dec
or
loope
jmp
lods
test
hlt
xor
or
pop
lods
imul
addr16
xorb
cli
dec
insl
outsb
ficompl
mov
repnz
jno
fcomip
cmp
rcrb
jbe
daa
in
add
xchg
out
xchg
fcomip
and
fucomi
xchg
sbb
jmp
fs
sbb
stos
and
xor
mov
jp
lock
test
adc
pop
aaa
xchg
mov
add
popa
add
jecxz
cwtl
scas
sub
xor
mov
cmp
lahf
fisttpll
push
adc
cmp
cld
inc
dec
lret
mov
loop
out
xchg
cmp
ljmp
fisttpll
ss
xor
fldl2t
push
push
scas
pop
out
jb
cs
lock
fcmovb
mov
xchg
jnp
add
dec
push
test
cmp
xor
leave
subl
mov
mov
jne
inc
cmp
add
call
jns
insb
sub
dec
dec
xorb
xchg
fwait
cmpsl
inc
ret
pop
test
push
into
gs
jmp
inc
inc
sbb
aas
pop
lret
mov
test
xor
push
xor
mov
aas
jne
mov
iret
cmpsl
sub
and
clc
pop
push
and
pop
push
pop
iret
mov
fists
jno
addr16
pop
add
lret
mov
leave
lock
rcrb
inc
sub
in
lahf
jno
aam
jno
jno
mov
cltd
adc
in
aam
divl
imulb
push
mov
push
sub
jl
rcrl
stc
bound
jo
das
cmp
pushf
rol
shll
sub
mov
cli
pop
jnp
icebp
jns
out
sar
out
gs
mov
addr16
mov
rcrl
outsl
fadds
insl
inc
pusha
fs
push
inc
add
lock
shl
ret
std
jge
push
lret
inc
mov
scas
popa
mov
into
add
lret
into
in
fcmovnu
clc
hlt
test
scas
sbb
cmp
push
nop
popa
leave
addr16
std
aaa
pop
ds
fwait
sub
push
or
shll
add
je
ja
xor
shl
mov
inc
daa
sbb
arpl
mov
and
or
mov
mov
inc
cmp
mov
inc
mov
mov
dec
cmpsl
dec
mov
stos
nop
aaa
jno
mov
mov
xor
jno
and
add
xchg
cmp
pusha
xchg
push
test
adc
scas
or
or
xor
mov
pop
push
iret
mov
pop
negl
mov
sbb
push
das
jg
int
aaa
or
outsl
subb
xor
mov
pop
sbbb
sub
std
pop
adc
sub
mov
pop
stos
jg
fstl
outsl
lahf
xchg
push
mov
mov
and
cld
mov
stos
mov
cmp
mov
mov
out
sti
mov
arpl
mov
lods
sbb
lea
jmp
jnp
jmp
lcall
sarl
fwait
or
addr16
repnz
add
es
cmp
lret
repnz
push
cmpsb
repnz
lds
dec
fcmovnu
imul
pop
jb
fsubs
or
xchg
lret
dec
mov
cli
xchg
mov
dec
lods
dec
mov
sarl
sub
loop
sbb
jns
dec
push
xor
add
xchg
push
dec
jbe
cli
cld
addr16
stos
sub
cmp
mov
mov
ret
lock
sub
jnp
jb
push
cmp
add
loope
dec
int
enter
sti
jl
stc
femms
int3
add
gs
jle
sbbl
frstor
jecxz
aad
scas
adc
xchg
pushf
sbb
jnp
cmp
mov
jo
sub
adc
cld
hlt
pushf
inc
mov
loop
ret
mov
daa
push
lods
lret
lahf
pop
scas
mov
loope
popf
test
int3
mov
dec
insb
sub
data16
lret
sbb
push
popf
scas
xor
iret
mov
xchg
and
dec
mov
push
hlt
xchg
dec
cmc
fcmovnbe
sbb
mull
mov
lret
pop
push
dec
nop
jle
in
movsl
lds
add
inc
sbbb
testb
pop
inc
mov
popf
xor
ret
push
or
xchg
mov
mov
mov
mov
inc
test
xor
pop
imulb
shr
pop
push
dec
sbb
dec
fidivs
push
pop
dec
xor
mov
das
mov
je
mov
frstor
mov
and
mov
test
xchg
sbb
loopne
jg
and
ror
dec
and
mov
fadds
mov
outsl
shll
sub
cmp
cli
sbb
pushl
lret
mov
mov
inc
jno
push
sarl
andps
sbb
and
icebp
xor
adc
shr
cmpsl
mov
sub
lcall
gs
and
and
mov
les
into
fs
int3
ficoms
and
and
mov
popa
insb
rcl
arpl
adc
loop
and
or
mov
lcall
repz
loopne
imul
add
dec
cwtl
cmp
ljmp
outsl
insl
adc
icebp
fimull
std
push
mov
rcrl
or
pop
stos
cmp
clc
out
mov
mov
push
aad
out
lret
or
int
aas
pop
loope
cmpsb
lock
clc
cmp
pushf
push
xor
mov
dec
or
test
xor
ret
insb
pop
push
xor
mov
jne
std
mov
mov
cmc
cs
mov
add
sbb
stos
mov
push
xchg
and
push
push
fs
pop
sti
adc
cmc
xchg
ss
mov
fisubrs
lcall
jo
and
notb
cltd
xchg
shrl
dec
mov
hlt
ss
nop
add
pop
outsl
jl
daa
nop
pusha
adc
sub
jo
inc
aaa
dec
sub
pop
jmp
xor
adc
enter
mov
enter
jl
xlat
mov
push
aas
mov
into
sbb
scas
add
test
push
mov
xor
jecxz
insb
mov
mov
pop
push
pop
nop
cli
pop
cli
adc
xchg
andb
aad
das
ret
dec
fldcw
pusha
negl
lret
ja
ret
xchg
xor
imull
lret
test
popa
inc
mov
jno
adc
mov
les
hlt
repnz
int
sbb
fnstenv
xchg
push
adc
push
xlat
lods
fidivrl
push
cmpsb
xchg
mov
das
leave
push
test
sahf
gs
push
dec
push
sbb
mov
incb
pop
inc
or
dec
mov
mov
loope
addr16
mov
popa
out
je
xor
stos
dec
shrb
lret
icebp
das
inc
or
movsb
xchg
jbe
jb
gs
test
aad
shll
test
push
repz
data16
and
pcmpgtw
pushf
sub
rolb
jl
cwtl
jae
pop
insb
dec
lahf
sub
scas
das
outsl
sbb
mov
outsl
mov
test
add
add
inc
test
shr
scas
loopne
fldenv
ret
sub
mov
adc
lods
jo
mov
add
sbb
mov
inc
pop
jae
inc
inc
xor
rorb
mov
scas
lods
push
fmul
mov
xor
inc
dec
sbb
std
mov
xchg
sub
in
jbe
inc
dec
cmp
aas
sub
leave
add
shll
inc
aam
popf
leave
mov
jnp
in
fadds
mov
enter
xchg
add
inc
into
mov
inc
repz
rcl
lcall
push
ret
xchg
popa
push
cmp
js
mov
cmp
cmpsb
cltd
mov
leave
add
bound
mov
enter
sbb
jle
xchg
insb
sub
mov
loope
or
or
fcoml
mov
ret
dec
jl
push
push
mov
or
and
adc
test
jae
pop
dec
mov
arpl
add
mov
pushf
pop
int
popf
xor
pop
inc
aas
mov
frstor
ret
ret
or
jge
mov
mov
jecxz
stos
jne
cs
stos
cmp
push
or
repz
push
dec
sbb
push
mov
stc
mov
clc
sub
movsl
outsb
pop
lcall
addr16
push
jno
or
decl
fadd
cltd
lds
and
bnd
sbb
in
ds
jg
mov
xchg
mov
jnp
imul
ja
call
xlat
aaa
sbb
cmp
xchg
and
outsl
jge
stos
sub
ret
push
out
push
movsl
fwait
das
jbe
stos
insl
pop
push
lds
pusha
je
aaa
or
sbb
inc
leave
enter
adc
cmp
imul
dec
xchg
andl
fsts
cmc
movsb
int3
mov
mov
jae
mov
out
adc
xor
mov
test
insl
xchg
mov
lods
xchg
jb
fwait
rol
push
movsb
jg
jp
and
fwait
pop
testl
push
iret
lret
stos
orb
mov
inc
mov
push
cmpsb
or
inc
icebp
jmp
xorb
or
sahf
xor
pop
sub
cmp
sbbb
add
rorb
jo
ret
mov
or
fcomps
or
xor
push
xor
mov
sub
out
fwait
in
lret
in
aaa
mov
push
pushf
fldcw
shl
mov
mov
add
sbb
lods
jge
dec
xor
fnclex
repnz
pop
or
mov
xchg
inc
fcoml
push
outsl
sub
adc
insb
mov
mov
test
push
or
xchg
mov
sbb
jecxz
into
inc
jmp
mov
daa
pop
stos
in
fs
pop
push
mov
mov
mov
inc
movsb
gs
jbe
insl
jbe
dec
cld
lds
cmp
dec
test
dec
in
lret
cwtl
mov
push
fisttpl
pop
ja
je
cmp
shrd
mov
lea
xor
inc
or
xchg
push
int
jae
adc
sbb
mov
add
repz
cli
sub
inc
push
cli
enter
pop
jl
mov
and
hlt
cmp
cmpsl
mov
gs
lcall
xchg
mov
jns
mov
and
jg
insb
out
mov
pop
add
dec
outsl
sti
add
adc
jne
mov
cltd
fiaddl
mov
adc
mov
fildl
and
cld
jmp
fs
xchg
push
push
lods
add
xor
mov
scas
imul
pusha
ljmp
mov
je
mov
add
int
mov
test
jecxz
nop
and
and
add
xchg
mov
add
inc
mov
fcmovu
mov
cmp
cmp
pop
out
jmp
ret
imul
ljmp
push
push
addr16
dec
fprem1
mov
jle
inc
push
mov
andb
mov
dec
sbb
nop
je
repz
sub
jp
xchg
sub
jnp
in
enter
or
jns
js
xchg
pushf
pop
jle
mov
test
fisubs
mov
nop
icebp
sub
or
add
loop
sarb
xorl
mov
xchg
mov
and
outsl
jge
test
out
call
add
xchg
inc
push
icebp
addr16
mov
ljmp
mov
fsubr
ret
inc
push
aam
lods
push
cmp
sbb
scas
jo
xchg
jae
adc
fnstenv
jecxz
loopne
hlt
aas
sbb
inc
incl
test
jnp
sbb
sub
sbb
mov
and
mov
sti
test
and
sub
mov
ds
push
aaa
pushf
pop
xchg
cmp
jnp
push
pop
out
jge
xchg
lcall
xlat
xlat
mov
sub
or
xlat
and
ds
dec
insl
stos
lock
fidivl
xchg
ja
and
packsswb
stos
mov
adc
adc
stos
mov
rcl
pop
and
sti
pop
jo
mov
mov
sbb
lds
idivb
jmp
int3
dec
js
push
sub
outsl
push
pop
cmp
mov
cmp
xchg
sbb
mov
cmpsl
imul
xlat
ret
pop
sbb
push
mov
daa
in
jnp
mov
nop
push
mov
mov
push
push
cs
dec
mov
aad
ficompl
mov
popa
mov
push
clc
xor
imul
jl
cmp
out
icebp
ljmp
pop
int
popa
push
adc
addl
lods
arpl
mov
or
enter
pop
or
pop
sbb
mov
mov
xchg
loop
mov
subl
fistpl
xchg
lcall
mov
ror
shrb
xor
jp
fwait
movsl
call
fdivr
sub
insb
dec
or
ret
mov
and
mov
fstpt
daa
repnz
add
fbstp
mov
push
leave
aad
pop
out
jnp
pop
imull
xchg
call
enter
out
inc
cmpsl
mov
mov
imul
in
and
cltd
jp
or
push
cltd
adc
pop
fdivrs
stc
imul
cmp
cmc
mov
int
out
mov
fstl
push
cld
push
and
pusha
stos
out
lods
lods
inc
xchg
mov
push
addr16
dec
mov
cmp
pop
sbb
cmp
fld1
sbb
inc
pop
xchg
aaa
mov
in
adc
pop
jl
jb
xchg
xor
into
ds
sbb
inc
mov
pop
inc
sbb
cmp
lahf
sbb
ss
andb
dec
clc
stc
push
loopne
shll
xchg
in
testb
movsl
sbb
test
cmp
jb
push
jbe
ja
lret
nop
pop
push
sbb
add
push
or
xlat
inc
adc
int
lret
cmp
inc
js
mov
mov
add
popa
jmp
cmc
and
cmp
add
filds
mov
pop
mov
pusha
inc
mov
aas
int3
in
cmp
adc
pop
out
test
and
mov
or
push
xorb
test
in
cmp
xchg
fwait
cltd
sub
lea
jle
xor
into
rclb
stos
pop
fs
or
lret
int
addr16
or
cltd
mov
stc
mov
sbb
mov
in
lods
sub
sbb
lock
mulb
sub
mov
jnp
test
sub
in
orl
repz
or
in
es
mov
and
or
xor
and
or
cmc
mov
clc
sbb
or
icebp
adc
shlb
cs
in
sub
lcall
sub
inc
jne
or
mov
jo
mov
jns
pop
stc
ficompl
sub
sbb
xor
fiaddl
ljmp
lods
icebp
add
xor
mov
cmp
push
jne
jmp
rcrb
add
pop
jb
xor
sub
outsb
cmc
hlt
sub
sbb
and
out
dec
jp
add
jnp
pop
and
cmp
and
mov
jnp
in
or
pushl
jl
std
icebp
pop
popf
hlt
xlat
ljmp
lea
push
lcall
outsl
into
mov
iret
dec
jecxz
inc
mov
jecxz
xchg
ficomps
lock
mov
jl
mov
vdivpd
loopne
cmpsl
or
sbb
adc
cmp
jge
and
xor
pop
jmp
xchg
ja
pop
lcall
je
ljmp
adc
xor
in
les
into
cmpsl
cmc
pop
push
shr
popf
scas
aaa
inc
pop
ret
hlt
sub
pop
stos
int
fstp
clc
and
pop
imul
xorl
orb
sbb
stc
sub
jmp
mov
fwait
xchg
into
dec
fnsave
mov
jno
jl
or
in
dec
ja
insb
pop
sub
movsb
aas
mov
jecxz
sub
or
fcom
cmp
and
int
xor
jo
jbe
es
add
rolb
mov
jg
dec
outsb
xchg
xor
or
adc
in
cld
in
lods
xlat
cmp
and
dec
dec
popa
insb
mov
inc
jb
jnp
movsb
xor
bndstx
xor
dec
je
and
fmull
in
in
push
movsb
mov
or
pop
mov
push
pop
in
gs
es
jp
add
insl
push
xchg
mov
add
std
pusha
iret
cmpsb
sbb
pusha
loopne
push
jno
jge
lods
movsl
xlat
dec
cmp
adc
ret
or
or
adc
adc
add
lret
aad
xchg
daa
sbb
xchg
pusha
fmul
adc
mov
les
jbe
outsl
cli
repz
add
lret
mov
cmp
push
push
aam
pop
xor
std
popa
mov
test
inc
cmp
push
pop
das
or
xchg
mov
adc
sub
cmpsl
ljmp
cwtl
in
dec
ljmp
jnp
lock
pop
in
call
sahf
outsb
mov
imul
inc
adc
sar
repz
mov
lods
movsl
adc
hlt
add
sbb
sbb
cmp
jns
es
cmp
adc
add
push
rclb
jns
bound
aas
adc
sbb
or
inc
loope
sub
subb
lea
cmpsl
rorb
add
ret
loop
arpl
lock
sub
aam
imul
sbb
int3
xchg
scas
mov
or
push
push
stc
outsl
pop
inc
fidivl
sub
cmp
sbb
mov
pop
dec
fadds
cmpb
sahf
xor
mov
mov
sbb
jb
out
aas
movsl
das
in
pop
test
rcrl
mov
push
xor
sub
sarb
xchg
lods
jo
test
add
js
adc
std
movsl
jne
ret
pushf
mov
dec
xchg
stos
dec
mov
and
xor
ds
mov
jb
sub
sbb
dec
jno
addr16
scas
sbb
stos
mov
push
jns
mov
insl
popa
push
and
mov
sti
xor
cli
push
mov
stc
je
test
inc
and
pop
dec
lahf
fcoml
push
xlat
adc
cmp
pop
lret
xchg
and
and
and
xor
pop
ljmp
mov
std
pushf
mov
push
pop
dec
and
or
mov
add
push
movsl
jbe
cli
loopne
movsl
lods
add
sub
mov
push
adc
push
stc
cmp
add
fdivrs
lea
stc
decb
mov
fadds
in
cmp
in
ss
leave
call
mov
jmp
test
jl
leave
roll
idivb
xor
inc
imul
mov
sbb
jb
mov
or
mov
cmp
mov
xor
jno
movsl
inc
insb
pop
sub
mov
icebp
addb
jns
xchg
adc
rorw
pusha
cmc
jne
lods
mov
xchg
les
inc
sbb
daa
push
les
movsb
shl
jmp
mov
mul
insl
mov
push
mov
dec
dec
outsb
push
rcrb
outsl
fldt
addr16
bsf
les
dec
shl
jmp
pop
jne
aad
jnp
pushf
pop
and
inc
test
mov
lea
jg
adc
xchg
or
enter
mov
roll
hlt
pushf
jns
loopne
dec
repz
pop
pop
jmp
adcl
movb
jno
add
dec
or
test
movsb
adc
jo
sub
cmp
jmp
lea
cwtl
out
cmp
jge
lods
jle
xchg
inc
push
insl
ficoml
dec
ds
lods
rcrl
ret
mov
inc
ss
divl
gs
xchg
sub
in
push
in
or
adc
inc
icebp
aam
xor
push
nop
cmp
or
test
inc
or
mov
add
movsl
jle
repz
pop
mov
push
xchg
incl
push
out
and
out
sbb
add
andl
xchg
stos
lcall
out
stos
imul
cmp
xlat
jle
lds
cmpsl
mov
mov
sub
fsubrs
xchg
mov
push
lcall
icebp
movsb
pop
lods
and
mov
jl
insl
adc
bound
or
leave
or
jo
lock
adc
or
ja
dec
cmp
push
mov
xchg
sub
aad
and
fidivrs
mov
sub
and
add
in
fwait
or
jae
out
or
lods
jne
int
pop
xor
shlb
cmp
jnp
xchg
ljmp
mov
cmp
adcb
sub
fwait
pop
stc
fnop
jle
pop
dec
push
fdivrl
aas
mov
sub
out
mov
xor
ljmp
mov
mov
cs
mov
mov
jg
push
sbbb
sub
cld
jno
insb
cmpsb
imul
mov
inc
sub
fwait
mov
mov
inc
pop
add
push
xor
stos
dec
sub
das
jno
call
jl
add
or
scas
mov
pop
adcl
push
insb
and
sub
add
sub
jmp
je
movsb
lock
fsubs
dec
cmp
add
je
mov
shll
loopne
fldt
add
adcl
pop
jp
int3
dec
mov
cli
iret
add
repnz
lods
test
pop
test
addb
mov
dec
inc
fisubrs
mov
push
jne
and
mov
int
test
jno
and
mov
orl
or
pop
mov
push
adc
xor
xlat
es
xor
scas
les
push
dec
xchg
cwtl
hlt
cmpsb
mov
icebp
sub
shll
sbb
test
enter
stc
jecxz
cwtl
or
insl
sub
adc
ret
incb
add
mov
sbb
test
mov
mov
mov
dec
mov
loope
in
pop
fistps
mov
xchg
jecxz
bound
mov
cmc
loope
fdivl
test
xor
xchg
or
pop
and
adc
dec
repnz
loop
out
inc
push
jno
pop
lods
adc
add
sub
aas
jle
xchg
push
cltd
movsb
js
ja
sbb
movd
push
movsl
pop
leave
mov
or
inc
mov
cmpsl
mov
jo
sbb
insl
cmp
daa
or
dec
mov
sub
outsl
pusha
ret
or
inc
popf
ror
push
cmp
test
test
push
push
jge
push
add
adc
insl
adc
xchg
jmp
mov
daa
xchg
notl
cmp
pusha
add
jns
push
add
and
es
imul
fidivs
mov
sbb
rcrb
stos
jno
and
add
ljmp
lods
jle
xor
sbb
push
into
add
push
push
xor
hlt
mov
lahf
repz
sub
xchg
cli
stos
mov
or
ss
test
cmp
scas
cmc
xor
sti
call
adc
xchg
jne
or
mov
pop
xchg
lds
sar
sub
fsubrs
cmp
push
mov
adc
loope
jecxz
or
jl
aad
add
outsb
add
mov
mov
gs
sub
add
xorl
rcll
xchg
inc
ss
ret
subl
notb
mov
js
loopne
jp
mov
push
jmp
xchg
in
ret
inc
or
rolb
shl
sbb
sub
dec
stos
jl
dec
repz
mov
sbb
pushf
lcall
xchg
andb
cltd
cld
cld
or
mov
pop
pop
push
out
jno
add
mov
nop
push
notb
fsin
and
cmc
lcall
test
and
mov
rcrb
jmp
xchg
pop
xchg
xchg
adc
mov
sub
jl
call
mov
xchg
push
es
jg
pop
push
add
scas
xor
xchg
pusha
outsb
xchg
ds
jecxz
jg
rorb
shrl
dec
sti
sahf
mov
sbb
sub
add
shlb
cli
fsub
mov
nop
fists
sbb
lret
cmp
jns
jno
xchg
pop
aam
in
jo
inc
mov
add
into
sahf
popa
icebp
xor
add
popf
movsb
jmp
cmc
idivb
ror
mov
pcmpgtw
push
repz
imul
setle
icebp
iret
aad
shr
xlat
adc
mov
incb
dec
cltd
cmp
out
pop
mov
ret
pop
shrl
fcompl
shrl
mov
fadds
test
rolb
mov
add
cmp
cltd
lea
dec
jecxz
jmp
stc
ljmp
and
jno
dec
add
xorb
fcoms
idivl
vpaddusb
sbb
mov
ljmp
iret
push
stc
shll
pop
mov
mov
ret
lahf
mov
loop
aad
out
pop
pop
push
ret
js
jl
mov
shrl
add
push
rcr
call
ja
test
mov
mov
ficomps
int
movsb
pop
mov
test
mov
cmp
pop
mov
out
mov
dec
repnz
in
dec
sti
jae
in
in
cwtl
xor
push
shr
inc
dec
xchg
xor
jns
adc
add
pusha
mov
cmp
or
fsts
jl
mov
leave
aaa
iret
mov
int
incb
adc
or
push
andb
rcrb
mov
sahf
inc
scas
jge
gs
cmpsl
mov
loopne
andl
mov
jne
int
or
jb
ret
out
lret
push
inc
clc
inc
mov
movsb
push
into
lea
add
movsl
add
outsl
pushf
mov
stos
lret
inc
xchg
divb
xchg
mov
clc
cmp
or
push
lahf
adc
lcall
push
ret
inc
rcl
std
mov
fsubp
pop
mov
xchg
add
repz
cmp
sbb
jae
clc
in
mov
addr16
mov
adc
xchg
sub
push
pop
push
je
mov
xchg
push
outsb
mov
fisttpl
rclb
xchg
pop
cmp
into
jmp
sbb
jmp
scas
xor
notl
cmpsl
inc
ret
cmovo
inc
out
push
xor
mov
rorl
xchg
dec
push
dec
push
movsl
mov
or
adc
push
mov
stos
jnp
sbb
xchg
mov
test
sub
sbb
and
lock
rclb
cmp
popf
adc
adc
mov
adc
jno
fcmovnb
es
cld
dec
sub
push
sbb
icebp
mov
inc
jbe,pn
stc
mov
push
aad
pop
or
jae
std
or
xchg
or
mov
rol
sub
adc
pop
lods
mov
sub
insb
cli
mov
mov
mov
dec
movsb
sahf
xchg
out
bound
xchg
adc
xchg
insb
out
out
lcall
mov
xchg
cmp
call
out
fucomp
ficoms
or
dec
xor
pop
rorl
inc
push
pop
cmp
insl
cmpsl
sbb
ljmp
jb
arpl
xlat
je
in
jnp
xor
pop
dec
movsb
push
loop
cmp
push
std
xchg
mov
xor
adc
loop
push
fisubs
xor
inc
fnstcw
sarl
sub
cwtl
movsl
mov
cmp
bound
aam
sbb
enter
sbb
test
hlt
test
cs
ljmp
xchg
ret
mov
js
jno
lcall
xor
nop
pop
pop
fucomi
xchg
dec
int3
popf
js
add
inc
mov
adc
jnp
mov
popa
xchg
xchg
cs
and
rol
push
mov
stc
adc
movb
dec
negl
add
push
imul
xchg
inc
cmp
mov
mov
sti
scas
cmp
imul
xchg
lds
ret
mov
mov
lret
pop
jle
adc
and
or
shr
xor
adc
pop
mov
arpl
mov
int3
dec
out
mov
sbb
push
adc
ret
and
fdiv
shr
or
mov
push
loope
lahf
gs
and
and
mov
sti
ret
inc
inc
add
insl
in
enter
or
mov
jo
test
outsl
cmp
or
scas
mov
jbe
sahf
fwait
pop
daa
sbb
daa
shll
popl
and
mov
xchg
inc
sub
mov
stc
dec
rorb
xlat
sub
rcll
into
rcrl
xchg
loope
int3
jns,pt
sbb
test
sbbl
rorl
out
jecxz
fisttpll
mov
add
fcomps
xor
ljmp
mov
mov
addr16
xchg
test
inc
loope
pushf
sub
push
jl
imul
out
sub
lret
or
sbb
mov
loopne
ret
sub
fldcw
pop
xchg
xchg
testb
loope
imul
leave
push
and
icebp
fsubs
jns
push
and
cmp
push
or
data16
or
push
adc
cmpsb
sti
out
adc
push
ds
aam
std
sub
inc
jbe
dec
push
push
mov
inc
clc
or
cmp
ret
enter
mov
jg
sub
loopne
lret
aas
popf
adcl
adc
mov
xchg
mov
jmp
mov
add
or
add
std
inc
testb
jbe
popa
aam
test
push
and
imul
inc
pop
cwtl
inc
cmpsb
arpl
push
add
popf
cmp
jbe
sbb
mov
dec
daa
sbb
cli
imull
lret
mov
cltd
mov
cld
xchg
shrb
fwait
movsl
call
or
add
push
sub
sub
mov
mov
cmpl
stos
or
ret
into
test
dec
les
mov
xor
repnz
fmul
aas
xchg
lods
aad
int
imul
or
movsb
or
xor
movl
repz
in
mov
inc
jns
inc
inc
call
stos
pop
aam
aad
push
lcall
add
loope
loope
jno
pop
sub
sub
ret
mov
aas
mov
jae
add
je
lock
mov
hlt
jmp
stos
jbe
shl
push
je
pop
in
xchg
cmp
mov
addl
leave
std
sub
pop
mov
and
stc
inc
sbb
mov
inc
arpl
sub
add
jns
and
gs
mov
insl
in
call
pop
roll
jp
rclb
sti
gs
jge
xor
mov
insl
sbb
sar
dec
mull
jmp
std
dec
imul
dec
xchg
sub
add
incl
xor
daa
daa
or
jno
cmp
jae
xor
in
mov
fmulp
xchg
mov
mov
mov
xchg
js
scas
xchg
test
push
add
divb
stos
mov
orl
inc
nop
insb
dec
add
mov
jns
dec
sub
mov
push
movsb
xchg
test
out
sub
add
push
push
dec
fsts
sub
pop
and
in
das
jnp
mov
jnp
jle
popf
push
in
rorb
mov
mov
inc
std
jl
stc
push
xor
add
aad
dec
inc
lock
xorl
cmc
fdivrs
and
add
cmp
xchg
lods
aas
push
xchg
add
ja
aam
jns
divb
xchg
sub
ljmp
or
mov
jle
add
lods
and
adc
mov
sub
stos
out
pop
shl
rolb
and
scas
adc
sbb
roll
lods
lret
arpl
add
in
and
out
mov
cmpsl
mov
or
repnz
mov
mov
lods
inc
cmp
pop
cld
xchg
imul
fsubrl
dec
sub
inc
subb
sti
mov
aad
stos
les
xchg
cli
xchg
mov
popf
xlat
xchg
jle
mov
add
xchg
mov
mov
in
je
mov
mov
push
inc
stc
rcrl
dec
jge
dec
into
shrb
and
sbb
xchg
es
jg
insb
sarb
fnstenv
js
repz
jp
sarl
add
imul
adc
loopne
mov
fs
inc
ss
ds
fs
inc
outsl
inc
xchg
jmp
and
mov
insl
jmp
ds
or
loope
adc
jg
fwait
leave
mov
lcall
pop
movsl
roll
insb
cli
clc
push
cmpsb
fidivs
pop
mov
shl
mov
mov
jnp
xchg
jo
movsl
iret
jg
lcall
fisubl
xchg
inc
in
adcb
inc
mov
adc
inc
xchg
adcb
inc
out
xchg
fistps
cld
jb
stos
adc
sbb
cmp
mov
hlt
aaa
add
movsl
ficoml
test
and
fistpll
lods
or
sbbb
ljmp
jp
arpl
out
mov
repz
insb
cli
xor
repnz
jbe
mov
xchg
inc
pop
inc
repnz
xchg
jns
xchg
mov
mov
insb
call
pop
iret
repz
out
mov
xchg
aad
xor
jns
jns
ds
arpl
add
mov
xlat
push
inc
loop
cmp
stos
cmp
xchg
std
jp
jne
leave
mov
jnp
and
mov
mov
sub
arpl
aad
mov
out
pop
mov
adc
arpl
and
out
shl
mov
in
cwtl
outsl
repz
adc
pop
das
aas
mov
out
and
rolb
jne
je
sub
sub
js
test
adc
or
fisttpl
add
mov
and
jb
addr16
inc
imull
movsb
mov
add
ja
leave
nop
jmp
inc
test
mov
test
add
jnp
inc
or
mov
xor
fs
inc
test
stc
dec
push
in
and
incl
cmp
push
fldl
lret
xor
pop
jp
popa
push
daa
psrad
rcr
jg
cli
pop
pop
subps
or
pop
andb
mov
push
push
mov
jbe
fwait
in
xchg
jp,pn
cld
in
shlb
nop
repz
ss
ret
gs
pop
adc
arpl
fcompl
add
pop
mov
rorl
push
xor
mov
mov
lods
pop
mov
scas
fistpll
lds
lcall
or
sbb
xor
call
xchg
pusha
bound
push
bound
jg
pop
cmp
or
xchg
or
cld
dec
sbb
pop
and
lods
out
movsl
xchg
xchg
adc
arpl
xchg
cmp
adc
and
xchg
repnz
or
sub
aad
bound
xchg
ficoml
pop
sahf
loopne
nop
jae
adc
sti
jp
inc
jne
cmc
cs
call
scas
sbb
dec
mov
pop
dec
fcoms
or
sbb
mov
into
push
ljmp
dec
cmp
inc
adc
vmaxpd
or
dec
pop
ljmp
fidivl
dec
scas
jo
cmp
pusha
xor
dec
add
cmp
mov
inc
pop
mov
adc
aad
inc
add
mov
jnp
scas
fldenv
ss
imul
scas
shr
fdivs
out
stos
xchg
inc
xchg
cmp
mov
cld
dec
add
sub
pop
pop
xor
nop
pusha
add
inc
insl
inc
pusha
cmp
mov
cmpsl
orb
push
bound
testl
ja
and
and
add
inc
jns
lret
aam
mov
cmpsb
mov
sub
or
cmp
ja
mov
ljmp
insl
jg
push
xor
cwtl
imulb
xchg
call
idivb
sbb
loope
fbld
neg
cmp
or
out
or
out
xor
xor
sub
cmp
sti
leave
mov
test
mov
fwait
cmp
test
jno
jbe
cmp
fbstp
scas
mov
xor
dec
xchg
out
inc
divb
dec
and
push
les
sub
popa
js
xor
jecxz
adc
xchg
mov
mov
stos
ljmp
xchg
jp
mov
je
push
mull
push
pusha
sbb
cmp
les
inc
adc
sub
subl
sub
std
sbbl
xor
jb
mov
pop
hlt
and
push
jle
mov
test
sub
xchg
dec
pop
out
push
pop
jle
add
sub
mov
fimuls
sub
cs
mov
loopne
add
lds
imul
mov
adc
jg
add
hlt
jb
lret
mov
pop
xor
xlat
rdmsr
xor
out
in
outsb
mov
and
jno
mov
add
sub
sbb
lret
fisubrs
jo
add
mov
sub
test
push
mov
pop
sub
in
push
xor
mov
stc
imull
sub
lea
movsl
ficoml
popf
push
dec
call
sti
xor
dec
stos
lock
mov
loopne
fbstp
and
hlt
lret
xor
aad
pop
aaa
mov
dec
jmp
and
push
filds
bound
orl
sub
sub
addr16
es
neg
testb
jbe
mov
add
es
shll
sub
sahf
lahf
mov
bound
cli
pop
xchg
fwait
sub
leave
nop
push
pushf
mov
in
cmp
mov
les
into
dec
adc
jo
jo
lods
shll
out
push
sti
mov
pop
xor
ret
fildl
xor
mov
cmp
adc
aaa
repz
insb
sub
hlt
push
mov
mov
in
push
and
pop
dec
stos
mov
das
lahf
cmp
or
jl
xchg
pop
and
sbb
es
es
int3
cld
cmc
and
out
jl
aam
lock
mov
jle
sub
lods
sub
dec
test
mov
repz
pop
icebp
fbstp
mov
pop
and
cmp
cwtl
popa
in
cmp
cmp
fs
adc
out
dec
arpl
loope
aad
xor
mov
adcl
cmp
call
addr16
mov
cmp
ljmp
adc
mov
xor
mov
lods
aad
xchg
cmp
jnp
ret
jae
inc
bnd
mov
outsl
xchg
imul
push
push
inc
scas
lds
mov
in
mov
jge
fisubl
mov
mov
stos
pop
pop
ds
xor
scas
pusha
xor
mov
dec
push
mov
jns
pop
mov
mov
sahf
mov
jle
or
popf
mov
push
test
mov
sti
push
sbb
testl
cmp
mov
xlat
pushf
mov
pop
adc
dec
in
add
sub
fwait
pusha
add
lcall
shlb
push
cmp
repnz
stos
and
fcomps
movsl
pop
mov
jo
inc
divb
gs
inc
pop
aad
gs
sbb
decl
mov
xor
rorl
sbb
out
lcall
andb
push
add
lahf
and
or
xor
xor
nop
mov
outsl
or
mov
xchg
jbe
sbb
aas
popa
icebp
push
outsl
adcl
jmp
aaa
ja
sub
stos
xchg
repnz
in
imul
mov
mov
cmp
clc
in
dec
ja
scas
dec
adc
lods
aam
dec
mov
push
and
jnp
cmp
jge
or
cs
fs
sub
lcall
sti
into
dec
scas
int3
mov
inc
mov
push
or
fcmovne
push
sub
mov
sbb
push
movb
mov
mov
mov
loopne
lock
sbb
iret
dec
lret
ljmp
pop
sub
or
sbb
jae
aam
popf
adc
xor
mov
push
fs
lods
outsl
or
sbb
in
jg
inc
add
movsb
loop
and
fisubs
mov
loop
sbb
jecxz
leave
dec
or
push
dec
sbb
stos
jle
stos
mov
fildl
sbb
in
cmpsb
adc
mov
int3
orl
shll
add
aaa
add
insb
sti
out
xchg
sbb
jne
lret
fwait
sti
ss
repnz
out
xchg
icebp
mov
xorb
ficoml
adc
mov
ror
adc
jle
cmp
adc
cmp
in
adc
mov
lahf
and
lock
add
mov
out
loope
add
fstps
adc
insb
leave
push
push
repz
sbb
rclb
insb
dec
enter
mov
inc
inc
int
mov
mov
add
push
es
cmp
cmpsl
mov
je
data16
cmp
xchg
lods
xor
aad
in
push
mov
and
and
mov
push
andnps
mov
sqrtps
es
inc
in
xchg
and
inc
mov
mov
pop
xchg
xchg
mov
fwait
or
int
fdiv
unpckhps
xor
lock
mov
inc
aaa
imulb
test
adc
mov
adc
pop
std
xor
sub
cmp
push
push
loopne
movsb
mov
sar
mov
stc
decb
movsb
repz
popa
ret
and
mov
js
push
shrl
pop
mov
add
xchg
fisubl
push
cs
push
loopne
sbb
mov
imul
mov
cwtl
test
mov
into
or
mov
ljmp
ja
xchg
es
in
aas
pop
xor
mov
push
ficompl
jns
mov
xor
sub
fisubl
pop
push
daa
es
psrlq
cmp
inc
mov
cli
push
lock
push
or
jne
push
repz
add
rcl
and
js
pop
mov
pusha
push
jle
in
push
pop
addr16
lds
loop
imul
ds
insl
jmp
shll
mov
sahf
pop
sar
xchg
mov
jno
dec
or
jne
icebp
or
test
fs
sbb
rorb
xchg
jle
add
adc
test
and
push
push
jb
sub
or
sub
add
mov
jmp
xchg
dec
int
shll
insb
jae
jbe
loopne
jmp
cwtl
icebp
sahf
lret
sbb
inc
xor
pop
fcompl
sub
adc
ds
xchg
jmp
sub
imul
ja
push
xchg
mov
fs
pop
lods
dec
adc
mov
pop
adc
xor
xchg
rcr
repnz
pop
mov
sbb
imulb
clc
sub
aad
lods
call
xor
mov
mov
outsb
adc
jecxz
pop
cmp
jae
xchg
arpl
repnz
mov
sub
push
jne
jl,pt
pop
insb
cmp
pop
sbb
ds
xchg
outsl
fiaddl
ficompl
push
insl
loopne
fstpl
xchg
cld
jno
sbb
repz
stos
addr16
movl
xor
inc
cmp
sbb
sub
fsubp
pop
rcl
dec
int3
push
aaa
or
mov
test
fidivs
inc
push
pushf
cmp
jno
xchg
test
shll
out
call
je
pushf
xor
fs
or
xchg
push
and
test
std
mov
mov
jg
aas
inc
push
add
in
test
gs
je
cmp
sti
dec
pop
and
mov
add
push
mov
jp
xor
dec
jno
or
mov
xor
or
add
lods
stc
jp
sahf
jg
pop
scas
pop
rcl
out
xor
outsl
jmp
jo
mov
pushf
adc
movsl
jl
loope
jne
adc
jo
mov
pop
dec
fs
lahf
scas
jecxz
dec
jmp
imul
sub
int
mov
mov
into
inc
out
mov
xchg
je
mov
ffree
mov
and
outsb
fnstcw
je
dec
ss
dec
hlt
sub
pop
fistpl
jge
arpl
jnp
or
cmp
mov
adc
hlt
push
icebp
inc
jns
lret
pop
daa
mov
sbb
call
in
add
clc
pop
lods
test
jb
shl
shlb
dec
dec
into
in
pop
int3
mov
ss
xchg
cmpsb
xchg
pop
dec
adc
mov
xchg
dec
aam
push
adc
sbb
fwait
add
fs
and
jp
jnp
flds
jo
aaa
mov
les
mov
pop
addr16
data16
pop
scas
sbb
rcr
aaa
and
aaa
xor
loopne
aam
xchg
js
rorb
push
into
cmpsb
mov
je
jae
pop
rolb
xor
add
cwtl
inc
pop
mov
sub
das
mov
jle
cmp
mov
call
or
sbb
dec
lea
xchg
aas
repz
mov
icebp
das
sub
push
pop
and
fsts
mov
xor
mov
in
add
shlb
test
lods
movb
int
iret
loopne
jl
outsb
leave
cmp
push
into
pop
outsb
inc
and
xor
mov
pop
mov
pop
das
lods
add
in
jbe
xchg
mov
cld
dec
lock
xchg
mov
mov
or
or
mov
jno
lahf
jb
jle
adc
sub
push
enter
push
mov
mov
dec
lds
inc
jge
stc
enter
insl
int3
push
sbb
pop
sub
mov
sti
xchg
sti
ds
scas
pop
std
xchg
scas
jl
pop
rolb
mov
test
out
and
jp
push
scas
mov
jbe
ljmp
negb
lods
andb
into
rorl
sub
lcall
or
ss
rolb
jmp
inc
sbb
xchg
movsb
sarb
cmp
clc
in
cld
xchg
sbb
in
inc
adc
loop
insb
cmc
fistps
jnp
inc
push
adc
jae
sbb
pop
jl
scas
call
xor
add
pop
sbb
mov
rorl
insl
mov
mov
add
cmp
xor
pop
push
jne
xchg
in
jl
in
aas
dec
jb
dec
insl
out
aaa
xchg
rorb
or
adc
shl
dec
mov
ret
mov
dec
inc
in
xor
adc
sahf
adc
das
dec
or
dec
cmp
jmp
into
or
push
xchg
fiaddl
popf
filds
in
cmp
ja
mov
nop
jge
fisubs
lock
popa
push
loop
test
cmp
or
cltd
repz
xchg
mov
dec
sub
cmp
movsb
out
xrelease
jno
ljmp
push
pop
push
pop
inc
jecxz
jmp
subl
je
pop
pop
outsb
push
jns
ret
les
ljmp
cmpsb
pop
iret
call
shlb
and
inc
stos
pusha
scas
cwtl
inc
psrlw
mov
js
rclb
adc
lret
sahf
repz
push
push
int3
jno
aas
ret
push
mov
hlt
pushf
lods
rclb
mov
insb
push
and
mov
sti
aas
in
insb
jp
jle
jb
out
aas
pop
push
pop
mov
jl
add
and
int3
cs
inc
data16
xchg
xor
scas
jge
into
pop
push
jne
cmpsb
mov
mov
pop
cmp
push
sub
push
push
rorl
js
loope
push
xor
adc
inc
xchg
shll
jae
imul
shl
jns
lods
cmp
out
cmp
push
aam
inc
rol
sbb
sahf
leave
xchg
fs
sub
mov
enter
mov
sbb
lahf
inc
or
cmpb
or
pop
nop
mov
dec
test
loop
fsubrl
pop
xorl
jg
sahf
and
jl
daa
arpl
in
scas
jnp
mov
inc
push
ret
mov
xor
xor
test
call
mov
ss
mov
or
mov
inc
dec
bound
dec
repz
pop
inc
adc
repnz
sub
xor
shlb
aaa
testb
xchg
fcompl
jns
sbb
icebp
ret
or
imul
jge
push
arpl
sahf
clc
cmp
es
mov
inc
outsl
leave
ret
daa
push
or
addr16
push
mov
and
pop
sahf
loopne
popa
call
xchg
mov
ss
mov
cmp
pop
push
adc
jl
sub
xor
es
out
sub
ds
ss
push
out
push
out
idivb
cli
push
xor
push
jmp
ficompl
testl
mov
mov
dec
mov
add
jmp
sahf
cmp
mulb
mov
cld
es
sbb
outsl
pop
les
pop
or
in
adc
insb
enter
push
in
cmpsb
push
loop
int3
mov
and
fldt
lahf
mov
cli
gs
sub
imul
mov
sbb
shr
and
dec
ljmp
out
mov
inc
testl
or
outsb
in
adc
lcall
loope
dec
enter
leave
test
inc
in
xchg
mov
pop
xchg
lock
pop
loop
pop
cmovae
stc
sbb
cmp
ljmp
push
mov
repz
fnstenv
and
mov
in
push
sub
dec
mov
shrb
mov
mov
rcrl
push
jae
mov
dec
xchg
jnp
dec
ret
mov
jle
repnz
jo
pusha
cmc
sub
test
repz
sbb
push
dec
fnstcw
inc
fists
push
popa
and
adc
out
std
adc
popa
xlat
mov
daa
leave
lret
inc
ficoml
sub
inc
jbe
jnp
lea
insb
outsl
insl
push
mov
sub
xor
cmpsw
pop
shrb
nop
sbb
outsb
je
xor
mov
jg
pop
cli
fdivr
notl
fdiv
sub
outsb
ja
loopne
pop
imul
sbb
decl
xor
xchg
cmp
inc
push
cmpsl
aad
pushf
mov
sub
popa
mov
jge
or
rcll
icebp
popa
mov
lods
enter
add
xchg
and
das
xlat
scas
jb
push
jns
mov
push
aam
lret
and
jne
jmp
push
add
ret
inc
xchg
les
filds
add
mov
push
in
lods
test
pop
addr16
mov
mov
sub
mov
insl
lahf
mov
stc
mov
jecxz
cltd
push
or
clc
dec
test
pop
negb
sub
pop
jae
xor
out
dec
pop
mov
frstor
pop
ds
push
jecxz
cmpl
sbb
sbb
mov
pop
leave
fwait
daa
scas
sarb
pop
cmp
or
adc
mov
out
imul
jnp
arpl
in
mov
mov
sub
inc
cwtl
push
cmp
adc
scas
xchg
dec
sbb
ficompl
shl
push
sub
sbb
sbbb
jle
mov
xchg
sbb
cmp
jecxz
rcr
sbb
or
popf
pop
cmc
fwait
push
rcl
pop
inc
jmp
enter
push
iret
imul
push
flds
jae
cvtpi2ps
stc
bound
es
pop
gs
pop
dec
push
mov
jnp
or
add
or
pop
adc
divl
pop
ftst
aad
mov
sbb
roll
sub
leave
test
iret
data16
insl
scas
pop
jns
xlat
repnz
jnp
int
jle
scas
fstpl
dec
bound
sub
je
mul
inc
loopne
or
xor
sbb
sbb
das
add
in
fisttpll
jo
stos
pop
mov
cmovno
add
fidivl
test
out
fucomip
sub
mov
xchg
out
loope
dec
fistpll
int3
jle
lds
insl
lahf
mov
les
and
adc
jl
stos
jbe,pn
iret
sahf
add
pop
arpl
adc
popl
mov
jo
cmp
in
mov
rcr
mov
arpl
stc
push
inc
cmp
ds
cwtl
stc
hlt
sub
out
addr16
push
inc
lock
xor
imul
test
icebp
stc
fst
and
stos
ss
cmpsb
aam
adc
scas
arpl
jne
fisubrs
and
scas
jnp
sbb
mov
jecxz
dec
test
sbb
pop
adc
ficoml
mov
inc
lods
in
cltd
sahf
into
icebp
adc
add
int3
ret
scas
push
cwtl
inc
sub
sub
or
xor
pop
adc
adc
mov
in
loope
fisubrl
push
cmpsl
out
lds
fwait
and
je
rclb
test
or
mov
mov
adc
cmp
jl
sbb
jp
sub
mov
lea
push
and
mov
adc
aad
adc
pop
xlat
xor
das
out
sbb
cmp
sbb
xlat
mov
push
pop
icebp
jl
sub
jbe
scas
imulb
cwtl
fs
test
jo
sti
cs
adc
movsb
xchg
incl
aaa
adc
push
stos
cwtl
fnstcw
sbb
int
mov
pop
mov
pop
aas
dec
sbb
les
loope
mov
xor
cmp
mov
mov
push
mov
movsb
ret
mov
sahf
jmp
jle,pn
xor
aaa
push
lods
fists
xor
sub
pop
mov
and
sub
add
out
aaa
push
add
sub
stc
jne
inc
dec
add
jno
push
pushf
js
pop
inc
lret
pop
in
mov
lcall
rcrl
mov
outsl
adc
es
mov
mov
out
sbb
jb
into
sub
dec
int
negl
data16
dec
sarl
jo
xchg
adc
dec
jne
or
xchg
popf
and
dec
jl
imul
ret
test
pop
popa
mov
iret
jmp
and
out
and
lds
aas
push
insl
ljmp
cmp
mov
dec
mov
test
stc
pop
sti
dec
mov
loope
jg
cmp
stos
pop
pop
repz
inc
cmp
xor
push
push
xchg
mov
dec
mov
out
xor
fldcw
and
jmp
lret
scas
pop
adc
xor
jge
and
xor
das
in
ret
andl
pop
sub
call
add
andl
aam
push
jo
insb
jne
jg
xchg
pop
imul
imul
mov
mov
fcmovnbe
leave
or
sub
pusha
jne
fstpt
add
cmp
sbb
pinsrw
sub
mov
adc
adc
mov
bound
addr16
pop
xlat
mov
and
jbe
pop
shll
dec
push
mov
and
jae
jo
add
gs
lea
push
leave
aas
sub
les
mov
nop
js
push
dec
aam
lcall
mov
xor
mov
mov
xor
mov
xorl
dec
das
mov
lods
imul
pop
xchg
mov
jp
loope
dec
sbb
sbb
jmp
mov
pop
pop
enter
mov
mov
mov
pop
pop
push
incl
arpl
dec
out
adc
ficoms
or
push
inc
js
xchg
push
mov
lock
repnz
lds
jo
push
or
aaa
xor
aam
sub
test
push
shll
lods
mov
push
mov
out
data16
je
or
push
jno
pusha
fsubr
sbb
ret
cmp
and
out
in
push
pop
cmp
decl
popf
mov
mov
ljmp
bound
pop
test
mov
cmp
stc
sbb
rorl
lcall
lret
pusha
popa
lahf
scas
cmc
sub
fistps
and
ja
das
inc
jb
imul
sub
dec
int
mov
movb
push
jmp
lea
cmp
jbe
push
mov
inc
rcll
lcall
loope
insb
mov
sub
inc
adc
cmc
add
sbb
mov
jno
inc
imul
ja
lods
mov
out
xchg
ret
xlat
popa
cmp
gs
pushl
dec
mov
push
mov
or
iret
enter
lret
dec
scas
mov
es
sbb
mov
in
dec
or
cli
fdivs
inc
and
cmpsl
gs
rorb
movb
jae
cmp
imul
add
shll
cmc
out
lea
mov
or
xchg
xor
ja
dec
mov
repz
and
cmp
add
jl
jnp
fucomp
ret
sbb
daa
ficoml
add
jl
dec
dec
dec
cltd
xor
pop
les
mov
stos
mov
aam
adc
mov
xor
inc
les
adc
fildl
jae
shrl
scas
and
faddl
pop
repnz
xor
lock
and
jmp
data16
nop
sbb
dec
inc
out
xchg
mov
mov
dec
das
jle
inc
pop
jle
enter
clc
cmp
or
cmp
js
pushf
or
xchg
mov
aaa
data16
sub
mov
jl
sti
dec
or
mov
and
adc
sbb
xor
sub
pop
xchg
fdivrl
mov
ds
sub
mov
jmp
ror
sar
stos
fsubr
or
ja
cwtl
sub
cmp
add
mov
out
rorl
dec
adc
inc
cmc
movsb
add
fisttpll
ja
cmpl
pop
and
arpl
pop
dec
xchg
adc
jge
repnz
shrb
or
push
leave
sbb
lret
inc
int
cmp
jb
mov
lcall
sbb
and
cmp
out
lahf
and
inc
push
popa
mov
in
jns
mov
or
cmp
jge
mov
fwait
or
inc
mov
push
adc
pop
loop
cmp
mov
adcl
clc
ss
pusha
sub
xchg
mov
mov
outsb
clc
and
push
jno
ss
hlt
inc
pop
xchg
adc
add
push
imul
jmp
jb
loopne
cltd
data16
test
loope
sub
inc
aam
sbb
faddp
leave
xchg
mov
jae
cltd
adc
adc
out
aaa
pop
movsb
insl
dec
xchg
insl
mov
jo
cmp
push
add
std
mov
fildll
or
cmp
jg
push
out
es
cmp
aas
cmpl
shlb
loope
fidivrs
addr16
mov
adc
xchg
imull
fs
pop
andl
adc
dec
je
xchg
or
push
jo
and
add
mov
and
lahf
jg
fistps
mov
outsb
inc
testl
pop
decl
icebp
fdivs
std
adc
int3
push
push
adc
push
sti
dec
dec
mov
adc
xor
cmp
inc
mov
ja
ds
cld
sbbb
sbb
xor
in
xor
mov
out
icebp
inc
stc
addr16
aad
pop
pop
sbb
dec
push
mov
addr16
imul
or
pop
imul
add
inc
adc
out
and
andb
adc
pusha
out
pushf
jg
mov
xchg
xor
push
test
adc
in
rolb
mov
pop
pop
mov
mov
stos
add
xchg
cs
xor
sti
mov
jnp
insl
push
movsb
xchg
lea
dec
xor
add
pop
xor
mov
or
pop
repz
fistpl
bound
mov
decb
jae
out
mov
push
dec
xchg
xor
imul
mov
popf
xor
test
and
inc
fcmovbe
sub
mov
xorl
xor
fsts
inc
jne
pushf
xlat
testl
add
push
popf
pusha
cmp
xor
and
cmp
cmpsb
or
add
fwait
jno
jns
ficoml
mov
andl
rorl
lret
fstps
xor
jge
sbb
stc
mov
inc
out
sub
lea
cmp
fldcw
mov
pop
xor
mov
hlt
movsl
into
dec
scas
fdivr
pop
fxam
fldcw
cmp
add
inc
cmpb
add
dec
xor
jb
in
push
dec
cmp
xor
xorb
mov
xor
in
xor
xchg
pop
in
stc
mov
ror
and
dec
pop
mov
daa
outsl
adc
into
mov
mov
mov
dec
popa
and
loop
int
jmp
leave
in
pop
lods
addb
addr16
sbb
cmp
mov
mov
adc
gs
mov
aam
mov
inc
je
addb
mov
push
mov
ljmp
push
test
fs
pushf
xchg
jecxz
jo
das
dec
xor
mov
test
push
nop
mov
or
out
xor
xchg
cmp
jbe
roll
ret
incl
stc
push
gs
push
dec
fsubs
imul
dec
test
ss
jecxz
sbb
out
sub
adc
mov
sbb
jg
adc
aam
push
aad
dec
cvtps2pd
repz
inc
or
rcl
push
cli
mov
lods
fcomps
cmp
xor
mov
mov
sub
outsl
inc
and
into
in
add
pop
mov
popf
xchg
test
adc
cld
or
arpl
lret
sub
jae
enter
loope
sti
and
cmp
movsl
ficoml
lds
mov
mov
adc
jne
sub
test
jnp
aaa
xchg
jns
jl
jbe
pushf
xchg
in
frstor
cli
mov
nop
jne,pn
hlt
push
in
rep
ret
xchg
inc
xor
sub
xchg
add
inc
xchg
sub
jo
mov
xchg
xor
sub
sti
roll
scas
jle
enter
dec
xchg
push
and
jo
cmpsl
adc
sahf
fidivrl
je
push
fmuls
mov
fildll
add
enter
cmpsb
mov
gs
fildll
xor
push
negb
mov
sub
nop
mov
dec
leave
cld
jmp
pop
cmp
mov
sbb
mov
jle
add
push
test
cs
sbb
fcmovnu
lods
movsl
ret
arpl
sbb
or
mov
mov
pop
into
push
dec
call
pop
lods
sbb
push
icebp
sbb
jbe
mov
test
arpl
mov
insl
jmp
xchg
or
push
or
adc
cltd
jbe
popl
cmc
je
adcl
sub
in
out
das
ja
out
mov
mull
and
stos
dec
insb
sti
loop
jmp
mov
add
push
enter
cmc
aam
mov
mov
lock
std
push
mov
dec
rol
movsl
movsl
sbb
mov
jne
rclb
shll
scas
int3
mov
adc
or
cli
cwtl
movsb
push
pop
loopne
or
sub
packssdw
lcall
ss
test
inc
out
xchg
push
push
push
scas
adc
int3
push
lods
xchg
mov
mov
mov
cmp
negw
push
sbb
addr16
iret
mov
fyl2xp1
ss
ljmp
iret
clc
in
lods
shll
inc
fnstcw
sbb
call
enter
movsb
adc
jb
out
dec
adc
and
scas
loopne
cld
shll
movsb
daa
pop
into
repnz
popf
inc
xor
ljmp
sahf
jnp
or
mov
inc
pop
cli
add
lcall
bound
jmp
mov
and
movsl
aas
mov
cmp
or
push
mov
in
add
subb
or
lods
movsl
out
cmpsl
popf
lock
mov
in
sti
mov
pop
movsb
inc
xchg
dec
insl
push
outsl
hlt
paddd
rcrb
sarb
sbb
mov
cs
stos
faddl
mov
xchg
adc
and
and
loop
out
inc
sahf
mov
hlt
mov
adc
jns
repnz
xor
lahf
out
sub
mov
lods
xchg
fcomip
push
mov
mov
sub
push
jge
out
stc
push
adc
inc
cmp
jge
sbb
pop
or
adcl
add
sub
in
push
mov
pop
sub
jbe
inc
xor
sub
or
push
js
cmp
xchg
shll
movntq
inc
xor
pop
ret
aaa
jle
cmp
inc
outsb
mov
lahf
loope
cmc
lock
push
popf
lods
aad
ficomps
push
bound
addr16
dec
sbb
pop
jbe
movl
cltd
mov
fs
sarl
cli
mov
mov
or
lret
loopne
sahf
dec
outsl
je
push
xor
push
js
sbb
push
xlat
lret
test
stos
cs
pop
inc
xor
push
or
mov
mov
dec
imul
xor
in
add
mov
sub
mov
add
and
pop
dec
and
inc
aam
dec
data16
mov
push
cmp
pop
dec
sbb
cld
loope
cmp
dec
je
xchg
dec
cmc
mov
jno
clc
repz
push
lods
sbb
or
add
addr16
orb
mov
inc
dec
insb
push
and
loopne
cld
test
aas
xlat
or
jbe
mov
sbbl
arpl
fs
into
call
jns
rolb
mov
or
inc
shr
sbb
cmp
add
outsl
test
mov
into
push
out
loope
arpl
sbb
cld
sub
pop
xor
jmp
pop
jbe
inc
iret
lret
dec
mulb
push
xor
shrb
push
push
jg
add
gs
das
jl
and
call
mov
adc
adc
jecxz
stos
xchg
hlt
outsb
xor
mov
bound
mov
cmp
adc
jp
sub
cwtl
mov
bnd
push
outsb
popa
xchg
jbe
push
outsb
outsl
es
jge
cmp
push
mov
mov
xor
adc
loope
in
outsb
cmp
fsub
ss
cmp
sbb
popl
fsubs
fistpl
aam
push
iret
sub
push
lock
addr16
mov
sahf
loopne
adc
inc
jg
sub
icebp
shlb
bound
or
mov
adc
lods
and
push
popf
stos
hlt
inc
mov
out
cmc
fisttpl
mov
lock
bound
inc
jbe
jg
cmpsb
fwait
cmp
jo
fidivrl
mov
and
lea
add
shll
mov
fisttpl
aaa
mov
cld
out
ss
test
sbb
loopne
cmp
ret
fnsave
popa
push
jnp
xchg
or
cmpb
inc
outsb
adc
adc
iret
pop
mov
or
repz
and
aaa
pop
je
flds
inc
inc
sbb
jp
cmp
loope
lods
pop
mov
or
cli
cmpsb
subb
fdivs
push
test
aam
jnp
jp
dec
lcall
xlat
dec
sub
sti
xor
test
lret
movsl
mov
push
sbb
out
add
dec
jle
sbb
xor
addr16
adc
in
sub
cmp
sbb
push
bound
sub
mov
jne
or
ret
jge
sbbb
lods
scas
inc
rep
lahf
add
arpl
orb
int3
pop
adcb
inc
lea
add
int3
sbb
inc
adc
and
inc
jge
cli
adc
mov
push
gs
call
pop
shll
push
loop
or
add
add
aaa
mov
mov
and
and
aad
out
inc
imulb
xor
adc
aam
jmp
hlt
adc
push
dec
xchg
cmpsb
in
call
out
jg
mov
sbb
cmpsb
sahf
iret
cmp
lods
es
shr
jb
mov
xchg
test
call
sbb
arpl
xor
ja
push
data16
aad
ljmp
sahf
xlat
sbb
aam
jne
lock
xchg
in
lcall
pop
pop
test
and
pop
stc
int
mov
mov
xchg
lret
pop
lcall
or
fwait
push
jb
cld
mov
loope
xor
icebp
dec
mov
popf
std
push
dec
cmp
add
adc
int3
push
imul
subl
into
xor
cs
lret
jmp
lea
mov
out
or
xchg
int
mov
lret
mov
jbe,pn
leave
mov
insl
fs
cltd
mov
sti
xor
pop
out
std
mov
movsl
mov
into
repz
fadds
mov
rcrl
cmp
cmpl
insl
xchg
dec
insl
and
cmp
mov
shll
lock
imul
cld
aam
push
and
inc
mov
push
out
ret
je
or
lahf
scas
inc
push
cli
rorb
jg
xor
into
mov
pop
imul
leave
es
fnsave
in
es
int
js
je
and
in
lahf
das
or
rcll
in
and
icebp
ret
daa
data16
jmp
clc
or
inc
shrb
xchg
movl
ja
hlt
xor
dec
aaa
ja
or
stc
and
ret
inc
jge
jecxz
push
inc
bound
xchg
leave
mov
push
or
pusha
pop
push
mov
push
subl
push
sbb
cmp
out
int
daa
outsb
mov
inc
fsubs
ds
push
jecxz
cld
aam
cwtl
dec
xchg
in
in
inc
leave
jns
cmp
or
lods
adc
rol
in
xchg
pop
jb
pusha
push
cltd
sub
int
or
lret
xchg
pop
out
add
mov
and
and
test
push
cwtl
ljmp
imul
mov
mov
sub
jb
lcall
xchg
cmp
add
sbb
sub
hlt
sub
iret
pop
mov
mov
mov
cmp
mov
sub
dec
add
in
xor
in
xchg
cmp
jb
jmp
pop
rol
lock
and
jl
inc
rcl
fmulp
out
xchg
sbb
daa
lock
dec
mov
movsw
mov
mov
cmc
mov
les
pop
adc
insl
mov
aam
and
subb
test
jo
and
add
out
cmpsl
pop
jle
adc
stos
sbb
mov
cmp
daa
loop
movsl
inc
sub
push
xchg
aad
in
mov
fldcw
jp
xchg
mov
aaa
stos
pop
addb
ret
adc
dec
jo
pop
les
fmull
push
mov
test
add
inc
fisubrs
jg
sbbl
iret
test
push
jecxz
dec
adc
fldcw
or
test
and
pop
fsubr
sub
leave
sarl
setg
xchg
cmc
fisubs
test
cli
sbb
mov
xor
dec
or
inc
mov
dec
xlat
fidivrl
out
aam
xchg
daa
xorl
add
cli
inc
sbb
mov
and
add
sub
mov
out
xor
enter
push
ret
push
adc
insb
shlb
aas
jle
fstl
push
sti
inc
xchg
imul
dec
stos
sbb
insb
jbe
rolb
push
push
test
iret
jl
fstps
jne
and
enter
les
daa
int
xor
xchg
xor
fwait
pop
sti
int3
imul
clc
aas
xor
mov
imul
imul
gs
incl
cmp
sbb
in
mov
ja
xlat
xor
or
adc
in
mov
arpl
out
sbb
aam
enter
lock
popa
gs
frstor
cmp
cmc
loop
push
popf
scas
mov
rcr
pusha
dec
in
je
push
shrb
mov
iret
fwait
jns
or
movsb
or
or
ljmp
hlt
jle
shll
and
sbb
sub
rolb
xchg
sbb
cmp
nop
loop
pushf
pop
or
xor
int3
lret
and
sahf
or
xor
push
cmpb
fisttpl
enter
xor
fs
fwait
icebp
or
mov
sbb
mov
movsl
test
mov
negb
jae
out
ljmp
movsb
dec
ret
push
lcall
loope
mov
outsb
push
dec
inc
xor
je
aas
cs
push
std
jl
dec
and
xor
mov
gs
leave
push
insl
popa
icebp
cld
dec
pop
xor
jecxz
sub
dec
or
add
fsubrs
repz
jl
fwait
imul
sbb
dec
lock
ljmp
push
jo
adc
pop
mov
xchg
fnstenv
dec
lods
push
je
push
enter
repz
cmc
xor
xchg
shll
cli
lea
inc
add
mov
mov
inc
out
mov
mov
or
and
fldl
mov
or
jle
xor
mov
not
aad
adc
je
inc
insb
inc
pop
or
enter
mov
xor
loopne
and
pop
sub
fisubrl
mov
and
xor
subb
movaps
filds
jb
sbb
fidivs
jp
mov
cmp
rolb
popf
mov
ficoms
lods
xor
jl
and
mov
pop
lcall
cmp
lret
xchg
jo
jbe
mov
push
ret
xchg
sub
mov
mov
sbb
pop
xchg
movsl
mov
and
mov
mov
jne
imul
stc
sub
ret
and
pop
divb
cmp
outsb
shr
js
ja
pop
rorb
xchg
and
pop
in
sti
pop
outsl
pop
sub
ss
mov
cli
ficompl
pop
dec
stos
push
aaa
sbb
pushf
insb
je
sub
push
ret
pop
in
insb
ljmp
adc
data16
rcll
dec
leave
sbb
inc
aas
lock
in
push
sub
push
adc
pop
push
mov
popf
jns
lahf
or
xor
shlb
loope
and
mov
fnstsw
and
sahf
outsb
dec
jl
jl
mov
jne
dec
lret
xor
ret
and
jg
int3
iret
ss
add
test
mov
xor
mov
jo
pop
sbb
daa
inc
xchg
inc
inc
cmp
scas
aas
cwtl
call
js
test
jne
mov
pop
jle
mov
addl
outsb
es
testb
or
ret
push
cmp
adc
ja
push
lods
iret
jl
sbb
mov
pushf
and
or
add
inc
sbb
pop
push
adc
sub
frstor
pop
clc
sbb
mov
scas
pop
mov
shrl
mov
mov
xchg
in
xor
je
push
fadds
addl
ja
scas
in
mov
mov
sbb
and
dec
sarl
test
xor
das
sarl
push
or
test
dec
sbb
xorl
aaa
stos
xchg
std
imul
pop
mov
push
inc
int
and
mov
daa
pop
bound
stc
add
xlat
ret
sbb
and
push
aas
imulb
subb
nop
imul
popa
sbb
sub
push
insb
mov
xlat
rcll
jg
jae
lea
cmp
fscale
pusha
pop
int
jg
lahf
mov
xor
jbe
mov
clc
jbe
daa
ljmp
xchg
xchg
adcb
das
into
inc
in
jge
xchg
in
sub
fnstcw
int
mov
arpl
cltd
subl
leave
test
cli
fisttpl
adc
xchg
popf
cld
enter
and
jne
shrl
aas
arpl
jecxz
sti
mov
add
or
xchg
lret
mov
test
loope
dec
add
jg
dec
mull
xchg
in
dec
jmp
xor
pop
mov
cmpsb
adc
sbb
jo
and
cmp
jbe
das
inc
ja
add
shl
adc
dec
lock
mov
push
inc
jmp
add
sbb
sbb
jecxz
std
vcvtss2si
stos
repz
adc
pusha
insb
les
mov
or
repnz
cld
dec
lods
fcompl
and
cmpsb
lea
out
cs
in
cmc
iret
pop
cmc
arpl
and
ja
xlat
aad
int
fs
fsubs
mov
mov
inc
aas
add
das
outsl
test
sub
leave
das
cli
ror
xor
out
cmpsl
xchg
into
ror
sub
test
dec
add
aam
jnp
cwtl
xor
out
inc
pop
or
movl
roll
mov
sbb
adcb
mov
mov
ret
dec
pop
or
dec
xor
mov
test
sar
lcall
pushf
add
adc
xchg
mov
push
xchg
jb
fldenv
int
stc
in
rorl
cmp
push
bound
shlb
inc
jnp
mov
hlt
rcll
push
shl
fbld
mov
mov
mov
test
rorb
mov
xchg
call
js
inc
nop
mov
dec
mov
fdivrs
fs
cmp
mov
push
fnstsw
adc
ds
bound
cld
mov
jnp
mov
ret
jge
lahf
adc
addr16
push
and
ja
and
clc
cmp
sub
cmp
jae
pop
pop
cld
pop
js
jg
orb
push
fs
mov
arpl
mov
and
mov
or
mov
pop
andb
add
mov
adc
popa
sbb
jne
fldenv
testb
movsl
fstpt
stc
mov
xchg
mov
scas
inc
adcb
stos
mov
xor
scas
icebp
push
inc
dec
cmp
ret
stc
or
movsb
push
scas
test
cli
lcall
filds
fs
addr16
pop
xchg
xchg
xchg
xchg
das
inc
call
stos
shlb
jecxz
repnz
sbb
cmp
dec
fwait
data16
ret
out
je
adc
gs
lahf
lcall
jbe
push
adc
mov
add
mov
sub
adc
jo
ret
ret
sub
and
jle
lock
mov
push
jnp
imul
daa
test
imul
pand
fsubrl
mov
xchg
stc
test
add
decl
xchg
adc
sbb
ja
push
sbb
mov
insl
leave
mov
lock
pop
cmp
repz
mov
push
mov
out
push
out
jg
and
psubd
inc
or
sti
lods
mov
mov
sbb
lret
pop
adc
or
and
jg
push
ss
divb
out
xor
fists
add
stos
inc
ljmp
subb
rorb
loop
push
push
inc
pop
pop
aas
cmp
push
lahf
icebp
imul
in
jmp
push
outsl
rcrl
aam
sbb
mov
push
jl
stc
xor
cmp
jbe
xchg
adc
imul
mov
xchg
cmp
pop
sar
xchg
adc
sahf
mov
leave
add
or
pop
pop
inc
movsb
dec
pop
inc
pop
mov
push
sti
push
ds
ret
stc
push
mov
pop
ss
pushl
movsl
sti
aas
clc
leave
shlb
and
mov
movsb
xor
in
cmp
push
insb
jnp
outsl
inc
adc
push
add
stc
jae
arpl
mov
into
and
mov
xchg
mov
test
fmuls
repnz
sbb
scas
xchg
int3
sbb
dec
ds
adc
cmpsb
dec
lahf
fwait
pop
push
cld
fistpl
mov
mov
enter
fcompl
push
adc
jnp
sbb
and
cmc
roll
mov
es
js
data16
cmpsl
push
lods
sarl
lods
inc
into
notb
iret
push
mov
and
push
xor
pusha
jno
stos
mov
dec
aad
cld
mov
fistl
sarb
pop
mov
sbbb
movsb
outsb
sbb
cmp
inc
push
sbb
mov
jl
ljmp
xor
frstor
inc
jbe
repnz
mov
add
in
pop
adc
xchg
lods
lahf
adcb
test
fiadds
cmp
bound
add
cli
mov
negl
ret
test
es
adc
xchg
cmpsb
fisubrl
icebp
inc
rorl
and
call
xchg
inc
pop
pusha
cmp
pop
std
mov
push
inc
xchg
test
insb
jg
mov
cld
mov
icebp
or
lcall
adc
push
enter
scas
sbb
or
std
btc
lret
cs
xchg
mov
push
jmp
push
mov
loop
sub
or
lret
js
sti
ret
jge
xchg
fstpl
adc
jae
mov
xchg
ret
push
pop
sbb
push
push
movsb
nop
sahf
or
xchg
jno
mov
test
dec
add
xchg
into
mulb
insb
dec
xchg
or
neg
jmp
cmpl
movsb
mov
jmp
ja
dec
sbb
mov
lock
pop
jg
out
pop
cmpsl
in
mov
out
or
shr
sbb
push
pop
inc
cwtl
loop
cmp
test
addr16
out
add
pusha
mov
lret
xchg
and
pusha
push
push
aad
cli
loopne
inc
push
bound
enter
xlat
jge
ror
inc
xchg
cmp
shrb
sub
pop
lds
dec
enter
iret
popf
dec
adc
mov
cli
sbb
xchg
push
data16
mov
adc
adc
cmpl
xchg
hlt
lock
lods
mov
loopne
aaa
js
mov
aam
and
inc
push
sub
cmp
insb
and
mov
push
sahf
xchg
out
mov
movsb
lods
inc
shlb
js
inc
test
cs
or
fnsave
cmpsb
out
out
clc
mov
add
rcrl
fidivl
mov
aas
ja
sub
push
je
test
push
inc
std
popf
cwtl
int
in
lret
sub
dec
ss
sub
jecxz
xchg
jae
out
xor
pop
sub
add
lods
and
add
hlt
les
aas
in
clc
cs
ret
out
insl
add
test
pop
aam
mov
mov
bound
pop
push
sub
add
out
test
mov
push
xchg
iret
lahf
rcll
scas
inc
andl
push
adc
icebp
fs
push
xor
push
test
xchg
or
stc
pop
mov
ja
dec
repnz
mov
push
jg
cmp
mov
sub
sbbl
adcl
pop
call
or
mov
push
jle
pop
into
inc
lret
ds
mov
test
add
xchg
fnstcw
mov
push
xor
cmpsl
jae
mov
mov
icebp
decl
xchg
pop
cmpsl
push
fnstenv
es
xor
mov
sbb
mov
outsb
mov
mov
js
std
sub
btr
and
adc
adc
inc
xchg
mov
add
mov
and
pushf
add
and
or
sbb
call
and
push
ror
and
jmp
call
dec
shll
xchg
sbb
int3
addr16
call
and
mov
push
je
aas
cmp
xchg
inc
jp
stos
push
cmpl
ljmp
inc
sbb
rcll
xor
jle
sbb
pushf
and
jp
out
mov
pushf
lret
pop
push
imul
lret
int
lcall
fcoms
cmc
cmpsl
inc
jmp
pop
jb
pushf
dec
ja
add
idivb
cli
cmp
sub
bound
iret
jmp
xchg
pop
outsl
mov
and
dec
mov
outsb
dec
xlat
sbb
lods
xor
add
cwtl
sbb
push
data16
cmpsl
push
pusha
dec
mov
in
sbb
mov
test
sub
cmp
push
jae
nop
cli
jg
mov
jg
xchg
pop
jno
repz
sbb
xchg
loop
sti
in
or
mov
sub
inc
idivb
mulb
popf
adc
or
insl
mov
cmpsb
inc
xor
push
scas
push
dec
ret
ljmp
jmp
push
fidivrl
mov
test
or
cmpsb
xor
orl
loope
pop
jns
and
ja
jp
inc
cwtl
sub
cs
ror
xorb
add
pop
xchg
outsl
mov
jp
adc
fsubs
jp
lock
xlat
arpl
push
push
shlb
cltd
addr16
xchg
push
out
cmc
pop
sbb
fists
imul
outsb
dec
push
imul
pop
sub
insl
ficomps
dec
dec
push
mov
mov
pop
into
ds
es
addb
xchg
out
sub
or
jnp
test
mov
aas
sarl
jno
outsl
sbb
or
je
push
dec
outsb
mov
fmuls
in
xchg
clc
add
fdivl
out
shlb
xchg
push
jge
insb
jne
sti
xchg
inc
loope
std
call
pop
pusha
mov
sub
mov
in
mov
fisubrl
cmpb
push
inc
add
push
pop
test
dec
inc
or
stc
enter
enter
dec
test
add
sbb
mov
int3
in
mov
and
lahf
gs
push
push
push
sbb
les
loop
cld
mov
aaa
sbb
in
icebp
fstps
pop
mov
stos
adc
pop
stos
lock
and
jl
jbe
or
lret
mov
dec
ret
call
in
jle
xor
cmpsl
rorb
push
lods
shrb
mov
cwtl
sti
or
int
std
cwtl
push
js
and
enter
adc
int3
lahf
pop
out
jo
out
xor
test
or
imul
lea
shlb
test
jg
dec
lcall
push
push
add
mov
ja
cmp
and
mov
cmc
adc
faddl
pop
fmull
inc
test
je
imulb
inc
mov
out
jns
outsb
add
in
cwtl
jbe
nop
sbbb
xchg
push
rcrl
popf
jne
push
insl
mov
sbb
jb
dec
stos
ds
xchg
xchg
xchg
imul
lea
pop
sbb
cld
je
stos
and
les
dec
dec
adc
int
push
inc
les
imul
pop
or
mov
test
add
sub
mov
jbe
aaa
out
jo
or
insb
daa
pop
ffreep
or
adc
cmp
jb
cli
mov
cltd
out
scas
inc
in
xchg
int
sbb
pop
pop
mov
out
leave
andl
jb
adc
in
test
xor
fwait
cwtl
fs
pop
repnz
xor
sbbl
push
adc
ds
je
mul
cmp
or
xchg
jns
mov
es
push
lods
mov
mov
pop
pop
lea
and
add
mov
insl
cmpsb
adc
movb
sbb
push
or
fistl
adc
jno
scas
das
out
ror
dec
je
rcrl
jae
jge
xchg
ret
pop
lret
mov
fstpt
sbb
jb
jno
mov
dec
cmpsb
push
fisubrs
in
jne
pop
insl
rorl
aas
cmp
jmp
aam
inc
push
mov
nop
mov
jne
insl
daa
mov
adc
dec
jmp
js
sbb
inc
adc
cmp
jmp
jo
xchg
mov
cmpsb
adc
mov
mulb
mov
call
jae
dec
cmp
fwait
loopne
out
movsl
les
jae
aam
xor
test
test
fsts
push
push
mov
jp
fisubrs
shlb
les
mov
mov
push
add
pop
sahf
cltd
fwait
xchg
ud2
fnstsw
cmp
push
insl
mov
repz
notb
popf
shll
jecxz
outsb
and
pop
xor
test
pusha
inc
je
pop
cwtl
fisttpll
mov
es
push
lret
xchg
orb
xchg
and
in
xchg
in
xlat
xor
mov
psubd
xchg
bound
aad
push
mov
add
test
pop
pop
fildl
das
push
test
into
das
mov
fcomp
xchg
jno
fadds
test
int3
stos
jmp
pop
adc
sbb
out
adc
pop
in
sub
es
sbb
hlt
and
pop
lahf
loop
pop
fstp
and
gs
jo
lahf
pop
fwait
jp
ret
mov
lret
loope
and
test
push
leave
dec
xlat
or
pushf
jns
mov
sub
jg
sar
mov
push
shll
loopne
inc
xchg
cmc
jo
fistpl
cli
mov
vxorps
movsl
repz
jmp
outsl
adc
js
clc
sub
lds
pop
mov
les
sbb
fisttpll
test
cmp
clc
repz
jle
ret
pop
push
lods
test
mov
add
xchg
push
cmc
test
sbb
mov
test
xchg
xorl
subl
sbb
and
jecxz
mov
fdiv
cli
add
fldt
fs
dec
in
dec
sbb
into
imul
popf
mov
lods
fwait
jno
popl
loope
lret
lcall
sti
xor
repnz
hlt
mov
mov
add
mov
test
pop
add
xor
addb
or
mov
je
sub
pop
dec
jge
divl
add
das
call
jns
les
sub
xlat
repnz
add
mov
sti
pop
fsubr
pop
jle
in
ja
push
sbb
xor
sti
mov
lods
jmp
stos
sbb
cmpsl
pop
hlt
fisubl
xchg
sub
adc
sbb
cwtl
pop
push
jl
mov
or
mov
mov
add
mov
lea
push
and
fisubs
fwait
test
ljmp
jno
jmp
cmp
mov
in
inc
sbb
adc
into
scas
cmp
xchg
dec
pop
lea
into
mov
std
jmp
or
mov
fmul
dec
nop
cltd
sub
daa
mov
pop
jno
xor
sbb
lock
ret
sbb
jne
adcl
or
call
cmp
xchg
lahf
or
lcall
lock
and
js
inc
js
gs
mov
stc
les
pop
and
scas
das
inc
pop
outsb
sub
out
iret
cltd
ret
lods
lods
jge
cmp
shll
and
push
in
nop
push
sbbb
adc
or
fwait
xchg
jmp
jo
or
mov
das
and
jl
es
js
les
ljmp
jae
mov
mov
sti
ja
jp
dec
and
adc
push
lock
fistps
decl
out
jle
mov
push
mov
add
aas
mov
enter
xchg
paddb
add
loop
sub
jb
jp
mov
inc
aas
outsl
jbe
jge
add
shrl
jp
sub
push
inc
push
call
dec
rcr
mov
push
pop
sub
dec
xchg
in
sbb
dec
xor
jae
scas
sbb
inc
adc
cld
je
shll
dec
xor
pop
and
dec
test
ret
lret
fcoms
popa
push
cmp
daa
xchg
out
jae
adc
push
pop
jle
movsl
ss
push
mov
je
jno
aam
lods
into
lods
nop
fwait
insl
push
xchg
lods
loope
jae
inc
mov
sbb
push
dec
and
inc
inc
push
enter
xchg
int
jg
ret
fisubl
clc
mov
jge
pop
push
cmpsl
jno
stos
jae
cli
and
jo
nop
daa
cmp
dec
sbb
and
adc
js
or
sbb
dec
lds
ret
pop
xchg
dec
inc
icebp
xor
mov
dec
mov
push
cmc
and
or
scas
sbb
mov
push
add
outsb
nop
xchg
test
repz
dec
mov
or
pop
jae
xchg
sub
imul
cmpb
push
test
xchg
jle
dec
std
or
mov
push
push
imul
dec
les
cmp
jne
inc
ret
iret
xor
adc
jecxz
loope
outsb
fcomps
pop
fmul
sub
inc
jns
psadbw
popa
and
sbbb
xchg
jo
inc
sbb
imul
lahf
jp
stos
jp
inc
ret
jnp
call
das
mov
js
outsb
mov
mov
nop
std
add
jns
adc
add
fidivrs
mov
or
std
in
inc
and
add
inc
pop
sbb
int
sahf
inc
inc
or
dec
notb
dec
ja
xchg
push
push
and
rol
and
call
jne
aam
test
xor
xor
fistl
dec
mov
push
mov
mov
jmp
push
inc
jae
mulb
cmpsb
mov
and
cld
pop
dec
pushf
lret
loope
xchg
xlat
sub
imul
call
fcomp
ds
dec
sahf
bound
xchg
int3
outsb
mov
xor
fimull
outsl
mov
sub
dec
popf
dec
je
arpl
jl
jl
inc
dec
push
sbbb
pop
popf
mov
cwtl
and
xor
mov
aas
xor
dec
push
mov
xchg
inc
lods
sub
paddq
xchg
or
sub
cmpsl
xor
jmp
xchg
daa
fsubrp
mov
test
popa
gs
mov
cmp
lret
push
mov
and
dec
loop
inc
dec
jl
push
xchg
and
pop
push
loopne
xchg
mov
sbb
adc
shll
loope
mov
jecxz
loopne
jae
mov
and
popf
ret
add
cwtl
pop
lods
adc
out
in
aas
jp
out
jns
pushf
sbb
mov
xor
and
jb
push
add
fimuls
push
pop
movsl
dec
imul
add
lds
mov
add
add
mov
xchg
popa
adc
mov
sbb
push
mov
xlat
mov
add
imul
sub
inc
sub
pop
xlat
pop
aad
inc
movsl
outsb
lock
pushf
adc
ss
or
pop
nop
pop
pop
inc
sbb
lods
xor
inc
mov
xchg
gs
cmp
orl
hlt
inc
sbb
adc
mov
mov
mov
xchg
sbbb
push
cmp
fidivrs
mov
out
add
jg
lret
in
mov
jmp
mov
dec
es
lcall
stos
dec
xchg
iret
push
call
sahf
jno
mov
loopne
pop
test
nop
mov
jmp
loop
stos
popa
mov
testl
out
repnz
arpl
enter
addb
mov
mov
mov
arpl
std
fidivrs
into
aad
bound
and
jg
mov
mov
sbb
sub
pop
rcll
xchg
mov
pop
mov
sbb
mov
call
jge
je
out
mov
loopnew
mov
mov
xchg
jle
in
inc
mov
pop
cmp
movsb
icebp
movsb
dec
mov
xor
gs
inc
je
sbb
fcmovnu
ret
jae
and
scas
inc
sahf
pop
pop
lea
cli
xor
and
cmp
shll
sub
divl
mov
in
jbe
out
mov
adc
ss
and
jae
pop
dec
xchg
or
sub
jnp
mov
dec
add
xor
std
test
enter
add
pop
add
int3
or
push
sub
xchg
gs
jl
cmp
adc
int3
in
js
loope
sub
xchg
inc
xchg
xlat
and
sbb
dec
pop
movsb
scas
inc
cmpl
cwtl
mov
inc
pop
test
pop
jl
clc
mov
fcmove
xchg
aad
dec
cmpsl
nop
sbb
into
adc
repz
jge
jl
jge
xchg
inc
xchg
adc
push
inc
stc
cmp
push
leave
xchg
mov
sbb
nop
sub
sub
sahf
repnz
xor
mov
mov
jne
pop
jmp
lcall
lods
dec
addr16
fstp
cmpsl
leave
xchg
lret
sti
jae
adc
mov
jne
out
icebp
in
pop
jmp
lret
mov
out
jnp
dec
std
inc
mov
out
ja
and
rclb
int
lahf
das
insl
cmp
sub
fcomp
je
loop
loop
pop
stos
fscale
xchg
aam
je
add
inc
notb
push
jae
in
enter
jbe
movsl
mov
sbb
push
gs
pop
out
pop
outsl
out
xchg
lods
repz
inc
test
add
leave
mov
iret
dec
or
push
repnz
mov
inc
insl
mov
add
sub
push
movsl
pop
xlat
nop
mov
add
sbb
or
pop
mov
arpl
fistpl
mov
aam
movsl
jg
lret
cwtd
push
sub
mov
lods
scas
mov
bound
mov
outsb
cmp
outsb
dec
xor
loopne
aas
and
ret
sbb
mov
addl
push
inc
loope
jne
cwtl
mov
loope
cmp
xor
sbb
mov
mov
push
in
mov
adc
js
add
pop
lock
mov
in
movsb
jne
ret
fwait
jl
cmpsl
mov
cld
movsb
xchg
pop
cltd
jge
jle
pushf
into
cwtl
or
loopne
outsl
inc
gs
js
sbb
jle
incl
fucomp
clc
adc
adc
addl
cmp
addl
test
mov
mov
cmpl
or
ja
ret
cmp
lret
dec
cmc
xchg
jl
cmp
jae
dec
out
jg
push
inc
stos
mov
popf
repz
int
mov
inc
mov
ret
inc
aad
jp
pop
jne
jbe
xor
adc
pop
xchg
cmp
xor
jp
testb
stc
inc
push
push
loop
ds
xchg
cmp
scas
sub
jmp
jl
int3
xchg
sub
into
cmpsl
fnstenv
jns
call
insl
pop
adc
mov
push
jnp
mov
jbe
jg
call
sub
or
pop
es
cmp
lret
push
inc
loop
ljmp
push
xor
inc
or
pop
popf
in
sbb
add
sbb
cmc
add
or
test
dec
cltd
jge
cmp
adc
jae
insl
or
sbb
sbb
xchg
cli
and
mov
popa
es
jnp
or
inc
in
clc
xor
push
jg
push
aas
jne
inc
and
adc
xor
jbe
imul
xor
push
int
sahf
imul
xor
pop
mov
sub
adc
lock
pushw
push
inc
test
cmpsl
adc
in
enter
int3
dec
lret
shr
mov
and
or
and
rorb
pop
or
push
dec
xor
mov
popa
ja
push
sbb
lea
je
clc
mov
ljmp
lock
jl
mov
das
cmp
mov
daa
arpl
sbb
inc
adc
cld
mov
into
int
mov
lcall
fisttpl
inc
sbb
xor
dec
fcompl
sub
jmp
shrb
sahf
adc
aaa
cli
push
shlb
inc
jb
cmpsb
xchg
xchg
std
pop
inc
aam
mov
xchg
out
stos
fwait
daa
pop
movsb
mov
hlt
cmpsb
pop
xchg
bound
sahf
jns
scas
fimuls
jb
cmp
icebp
add
add
ss
push
and
jmp
dec
shll
mov
test
sbbl
out
mov
fstpt
fstpt
addr16
mov
adc
repz
call
enter
cmp
push
outsb
pop
mov
shr
add
dec
lods
cmpsb
loope
jne
pop
aas
test
push
leave
dec
shll
jae
sub
push
lcall
push
in
sbb
fisubs
lods
jge
addb
enter
inc
cmpl
mov
cld
int3
xor
pop
xchg
lret
push
push
push
dec
test
or
rorb
xchg
xchg
xchg
pop
ret
aaa
lods
jge
fldl
and
pop
call
xor
shll
addr16
shlb
push
jl
icebp
insl
dec
mov
pop
xchg
adc
adc
mov
add
add
mov
inc
ja
fimuls
mov
lahf
shll
pop
hlt
sub
popa
out
cmpsb
jb
cmp
insl
pop
mov
in
dec
push
addr16
sub
insl
mov
dec
lods
xchg
push
ljmp
cltd
jb
mov
inc
xor
in
xchg
dec
in
roll
or
pop
clc
out
push
dec
fs
adc
lret
leave
cmp
cmpsl
adcb
ret
out
and
imul
jne
sbb
stos
ret
add
push
jg
stos
xchg
repz
push
xor
jp
cltd
push
imul
sbb
xchg
sbb
pmaxsw
addl
dec
sbb
cmp
mov
cmpsl
mov
xchg
aam
icebp
jnp
mov
fmuls
jg
out
stc
stos
clc
arpl
add
push
jg
icebp
push
movsb
int
xor
mov
mov
cmp
cmp
mov
pop
shrl
xchg
test
int3
loope
outsb
jbe
popa
fstps
adc
mov
jle
hlt
pop
aaa
loopne
sti
jno
xlat
int3
cwtl
xchg
ret
mov
xchg
hlt
aad
xorb
xchg
test
fbstp
jg
les
inc
lret
or
inc
pop
and
ljmp
dec
pop
push
cmp
fcomi
mov
xor
cmp
in
push
das
xor
cmpsb
loop
inc
adc
enter
inc
mov
jae
lea
sbb
mov
xor
xchg
movsb
decl
outsb
jl
mov
sbb
xchg
adc
dec
push
clc
jp
pop
sti
or
cmp
das
shlw
mov
imul
outsb
sbb
dec
or
xor
dec
in
xchg
sti
push
call
sub
cmp
out
mov
sub
cmp
sub
lock
cmp
pop
sbbl
into
test
xchg
sbb
in
inc
ficomps
mov
fstpl
mov
mov
inc
fdivr
in
mov
cmp
xchg
xchg
mov
loopne
std
add
jns
test
jge
in
pop
andl
mov
cs
sbb
in
push
push
cld
sbb
cmp
imul
lock
add
sbb
lret
and
sub
dec
test
push
xchg
dec
popa
adc
dec
lret
sbb
pop
inc
mov
mov
cld
cmp
fldenv
cmp
not
dec
rol
popf
and
imul
ret
out
fnsave
push
mov
jb
jmp
imul
jle
fcom
jecxz
push
and
lods
pop
sub
xor
mov
fwait
xor
dec
jb
mov
movsl
xchg
sbb
sarl
ds
cmp
cld
dec
cmc
mov
das
mov
rolb
jns
sti
push
out
ret
negl
fnstcw
aas
and
data16
cmp
dec
stos
cmp
jmp
cmp
iret
pop
mov
mov
adcl
pop
jge
nop
cmp
stos
sbb
and
mov
sbb
push
push
add
cmp
out
stc
add
push
rol
mov
ret
jnp
fwait
insl
loope
mov
add
or
and
pushf
xor
insl
stos
sarl
dec
data16
sti
adc
js
mov
test
jl
fisubrl
mov
jne
ret
jne
inc
fsubs
cwtl
inc
xchg
pop
adc
lcall
and
dec
loop
int
pusha
hlt
add
sbb
add
pop
in
aam
fisttps
and
arpl
rcrb
in
rorb
data16
loopne
lahf
fsub
and
push
stos
xor
out
sub
cs
dec
sahf
and
push
pop
test
bound
insb
rcl
fnstsw
add
xchg
and
push
cwtl
dec
test
sub
jg
adc
cltd
xchg
dec
imul
mov
ljmp
stc
popf
daa
cmp
sbb
cmpsb
pop
imul
repz
mov
xchg
and
jmp
adc
xorl
ds
imul
mov
in
pop
inc
pushf
pop
in
add
cmp
sub
cli
sub
push
jge
mov
hlt
pop
shlb
adc
push
mov
cmp
leave
xor
dec
cmp
sub
sbb
or
addr16
bound
jno
adc
insl
xchg
hlt
xor
adc
out
jle
mov
flds
xchg
push
inc
xlat
fnstenv
sub
dec
mov
roll
pop
daa
xchg
je
insb
cs
mov
cmp
jl
jno
aam
and
out
movsb
repz
notl
ljmp
xchg
addr16
adc
jns
shrl
push
sbb
les
je
mov
push
mov
mov
cs
push
movsl
mov
test
dec
or
mov
mov
push
call
addr16
cmp
or
in
cwtl
iret
ja
decl
std
mov
adc
sub
or
cmp
out
addr16
lcall
push
inc
xchg
add
xor
in
jle
mov
pop
mov
push
add
or
cmp
sarl
xchg
add
xchg
idiv
fwait
imul
mov
dec
out
in
outsl
and
das
rclb
push
clc
sub
out
mov
mov
mov
push
repz
jne
inc
cmp
xchg
mov
push
mov
dec
add
push
stos
repnz
pusha
aam
inc
xchg
fwait
dec
mov
push
loop
sub
or
adc
aam
mov
aam
int
and
stos
xchg
pop
test
lea
ds
leave
pop
test
pop
push
dec
xor
and
mov
arpl
mov
cs
enter
es
mov
popa
cmp
or
in
jge
mov
push
pavgw
xchg
push
jp
les
cld
ja
insl
loope
push
insb
shll
rcr
ljmp
add
and
pop
jb
xchg
movsl
ds
mov
jl
lret
enter
rcrb
mov
sbb
push
adc
xchg
insl
out
mov
in
adc
mov
rcl
and
inc
inc
inc
xchg
add
push
out
sbb
lods
scas
repz
mov
iret
jge
aad
pushf
add
cwtl
movsb
or
sub
pop
daa
shlb
sti
test
test
xchg
or
ljmp
dec
ret
lcall
and
adc
xorb
das
loopne
test
mov
dec
seta
nop
and
sbb
mov
xchg
fildl
jmp
lds
push
dec
lds
pop
mov
data16
xchg
scas
bsf
icebp
and
rcrb
push
fdivl
insl
addb
incb
mov
push
fnstenv
roll
sbb
add
jmp
pop
add
and
xor
mov
fwait
jg
jo
in
sahf
xchg
fistpl
popa
pushf
mov
out
jns
stos
lea
sahf
cmp
hlt
movsl
hlt
dec
or
loopne
mov
adc
or
aaa
adc
push
vpavgw
fistps
aaa
pushf
push
aaa
sub
dec
cli
mov
inc
sbb
movups
dec
leave
hlt
dec
pusha
shll
cld
mov
cmp
and
push
jo
pop
xchg
movsb
dec
mov
fisttps
mov
mov
push
lahf
or
je
push
notb
add
inc
scas
xor
ss
out
xor
mov
or
mul
cs
sahf
int
sub
shlb
cli
nop
and
mov
push
cmp
dec
inc
div
outsb
adc
xchg
adc
mov
mov
push
push
fisubs
push
and
enter
outsl
add
cmp
mov
mov
mov
push
cmp
test
xchg
sbb
in
sti
orb
lret
hlt
int
push
dec
mov
scas
xchg
jae
shlb
sub
mov
push
mov
sbb
inc
and
fsubrl
xchg
jbe
add
shlb
xchg
cmp
jae
mov
mov
cmp
add
scas
sbb
mov
inc
andb
subl
loop
scas
lock
pushf
sub
imul
mov
mov
xchg
pusha
test
jae
daa
orb
adc
pop
jno
mov
iret
cmpsl
sbb
adc
jl
cld
push
xchg
scas
lods
ret
adc
fsubp
or
dec
add
loopne
cs
jp
fimuls
push
jl
sbb
aas
cs
sub
or
out
sub
stos
mov
lock
hlt
cmc
shlb
mov
xor
mov
pushf
jae
cld
xchg
subl
cmp
cmp
push
and
lcall
mov
push
out
pop
sbb
outsl
repz
mov
iret
sbb
cmp
cmp
mov
xor
sarl
test
push
jge
xchg
cmp
jb
add
jle
sbb
test
adc
inc
lods
jae
pop
push
addr16
sbb
sahf
cmp
lret
lret
inc
sbb
pop
xchg
cmp
es
dec
out
cmp
dec
arpl
ret
outsb
outsl
pop
xchg
je
ror
adc
xor
mov
sub
sub
les
or
xchg
sbbb
xchg
sub
push
pop
clc
int
fnstcw
test
adcl
xor
mov
out
add
in
es
jb
xchg
roll
hlt
pop
jns
scas
or
inc
cmp
mov
dec
js
rcrl
push
icebp
inc
sub
test
aad
insb
shr
nop
test
push
popa
dec
cmpsb
mov
cwtl
xchg
test
push
cmp
cmp
lahf
ret
outsb
adc
pop
shlb
sbb
mov
push
outsb
xchg
mov
roll
fstpt
stos
fdivrs
jmp
fdivl
int
pop
mov
jmp
movsl
jb
sbb
mov
mov
arpl
cld
sbb
mov
mov
jae
xor
rorl
push
les
inc
xchg
std
inc
fsubrl
mov
aad
push
dec
aaa
cltd
mov
xorl
imul
mov
pop
sub
call
test
ja
push
rcl
dec
mov
std
fwait
mov
jmp
gs
and
xchg
add
xor
int
or
xchg
cld
xchg
push
mov
outsl
cmp
stc
jae
imul
mov
stc
mov
adc
loop
jbe
insl
sbb
jae
or
outsl
daa
outsb
icebp
mov
mov
or
cmp
cmp
dec
orl
ljmp
adc
adc
xor
xlat
popa
icebp
mov
inc
and
pusha
pop
ret
ljmp
xchg
xchg
jg
cs
lret
imul
cli
js
stos
clc
es
sahf
xchg
pop
pop
mov
xlat
out
divl
inc
xor
or
lret
push
and
in
xchg
call
xchg
adc
call
fidivrs
add
outsl
cmp
adcl
cmpsl
test
jbe
pop
jne
rorl
cs
insl
data16
add
and
dec
fcomps
dec
in
or
mov
lea
aaa
ret
lock
into
int
lock
js
imul
outsl
repz
mov
clc
xchg
xchg
jle
push
fisubs
int3
call
rclb
lcall
add
mov
mov
add
clc
mov
xchg
sarl
insl
add
aad
jb
inc
pop
add
jne
cmp
rol
sbb
mov
fwait
or
and
jno
mov
cli
xor
int3
das
mov
sar
insl
inc
add
and
xor
dec
mov
xorl
push
fwait
mov
jbe
out
pop
cld
cli
pop
adc
dec
mov
and
jo
inc
subb
sub
pop
mov
stos
lds
or
push
inc
ljmp
addr16
pop
mov
jle
mov
xchg
mov
std
dec
pop
fs
scas
cmp
hlt
int3
shlb
sbb
adc
out
sub
cli
push
cmp
adc
scas
sarl
mov
icebp
or
xchg
decb
jmp
jmp
or
xchg
mov
dec
subl
cmc
sbb
cmpsb
adc
or
jb
pop
cmovl
insl
movb
sub
lret
cmp
mov
popa
xchg
mov
testb
pop
mov
sbb
icebp
add
dec
fsubr
sbb
adc
stos
xchg
insb
xchg
shll
movsb
je
fwait
dec
out
shlb
cmp
ret
data16
orb
fcoml
gs
clc
enter
or
ret
or
xchg
dec
shr
pop
mov
pop
dec
jg
fisubrl
or
test
lcall
data16
cmp
cmp
pop
or
setl
rolb
xchg
int
les
jp
jbe
add
jecxz
mov
cld
add
das
test
adc
xchg
and
scas
inc
outsb
lock
aas
xchg
adc
mov
push
fistpll
test
inc
out
test
xchg
iret
and
shl
fsubr
jno
xlat
ret
cmp
loope
xlat
cmp
repz
mov
imul
inc
cmpb
pop
sbb
mov
insb
mov
sahf
ret
and
jmp
ljmp
pusha
lods
in
sarl
jge
js
ret
ret
add
insl
and
test
test
ljmp
jns
je
xor
push
and
daa
cmp
xchg
ljmp
mull
aam
add
in
push
pop
mov
insb
imul
add
jbe
jmp
pop
lods
out
sbb
jecxz
mov
movsb
js
xchg
mov
jge
mov
dec
mov
xchg
jmp
lock
cmpb
push
inc
std
in
push
mov
mov
dec
adcl
dec
rolb
mov
cmp
sbb
push
out
and
sbb
ret
ror
jmp
add
mov
sub
sub
jge
pop
and
mov
loop
push
aad
and
and
xchg
jnp
and
push
jmp
push
inc
push
fisubs
or
cmp
shl
xchg
lcall
int
mov
outsl
cld
push
pusha
xor
push
in
or
insl
sbb
dec
jmp
sub
cmp
push
test
and
add
enter
mov
push
mov
or
ja
mov
add
in
push
xchg
xor
mov
mov
mov
push
sub
pop
push
jg
cli
ret
inc
hlt
jp
stc
gs
movsl
inc
sbb
mov
sub
jecxz
pop
mov
test
fidivs
fdiv
cmp
sbb
adc
xor
cmpsl
jge
mov
jo
aaa
inc
push
jb
mov
and
int
mov
ja
rcrb
pop
adc
ficoms
and
imul
mov
push
push
mov
ret
dec
aaa
hlt
sbb
scas
adc
cmp
mov
lods
call
jo
sbb
add
outsl
sahf
outsb
loopw
les
or
pushf
testl
push
es
xchg
inc
je
pop
std
mov
push
inc
pop
dec
push
lock
xchg
inc
jp
mov
out
scas
ss
xchg
xchg
push
dec
lret
addb
mov
mov
ficoms
inc
out
inc
xor
xchg
cs
adc
pop
pop
js
add
xchg
stos
mov
or
sub
push
lods
add
mov
in
aam
gs
sbb
pop
sbb
imul
cmc
leave
sub
add
mov
inc
mov
shll
fcoml
call
jp
cmc
adc
add
cmp
xchg
arpl
in
ljmp
test
jmp
xchg
pop
jbe
cmp
mov
pop
loopne
sub
xlat
outsl
mov
sub
imul
daa
push
xor
sub
imul
and
cwtl
movsb
pop
outsl
pop
inc
repz
lret
sbb
push
ss
adc
sub
loopne
movsl
cmp
or
pop
jb
xchg
fildll
push
icebp
mov
mov
jo
pusha
xor
gs
mov
jnp
push
jae
cmp
outsl
cmp
mov
fildll
fwait
mov
jp
arpl
jb
adc
imul
mov
es
imul
dec
pop
xor
lock
dec
loopne
les
je
xor
mov
int
sbb
arpl
mov
dec
mov
ds
cli
push
ret
lret
stos
bound
cmc
mov
cwtl
jno
aad
cmpsl
adc
es
jle
pop
push
xor
xorb
xor
in
scas
mov
sarl
jge
lock
ss
mov
scas
push
sbb
data16
lret
mov
sar
sub
loopne
and
inc
xor
xchg
add
imull
cltd
jg
repnz
dec
cmc
sub
cs
sbbl
es
mov
shrl
fsubrl
dec
scas
pop
scas
adc
fsubrl
sub
aas
xchg
arpl
xor
js
push
sub
sub
pusha
or
popf
pop
fucomip
gs
xor
cwtl
push
fnstcw
lret
mov
or
dec
gs
sbb
cld
in
sub
lahf
leave
lret
out
outsl
stc
popa
xor
aad
xchg
mov
xchg
pop
mov
fcompl
stos
xor
cmp
adc
aam
sub
xor
mov
cmp
fcoms
ss
pop
mov
aam
lock
rcrb
dec
xor
xchg
pop
mov
mov
nop
int3
mov
inc
lcall
add
int3
lds
adc
mov
jnp
stos
jmp
clc
stos
mov
push
hlt
pop
adc
out
loope
adc
sbb
dec
std
mov
inc
sub
add
add
fmuls
popf
scas
xor
pop
sbb
enter
callw
inc
push
mov
pop
js
and
mov
add
jae
jge
loope
xlat
ja
ljmp
lock
xchg
pop
sub
and
in
fmul
jns
dec
and
xchg
outsb
das
call
jns
imul
pop
insl
movntps
cld
cmpb
call
jl
gs
divb
ljmp
push
or
jl
push
in
mov
scas
mov
cld
or
xor
mov
push
shrl
sub
fstps
mov
out
xor
aas
pop
cs
xchg
pop
mov
mov
pop
dec
mov
inc
sub
out
bound
lcall
inc
xchg
add
pop
je
dec
push
js
add
rclb
sarb
cmpsl
ret
aaa
add
mov
push
or
cmp
push
out
stc
push
sub
test
xchg
xchg
adc
sub
sti
xor
movsl
outsl
inc
or
push
cmp
loop
je
push
cmp
sub
pushf
ljmp
das
or
mov
mov
add
jmp
fidivrs
mov
inc
jnp
test
ss
xor
and
sub
inc
or
push
imul
sahf
xchg
push
outsb
scas
push
fwait
pop
stos
jp
sbb
lods
jne
push
jle
and
loop
out
decl
xchg
adc
mov
jmp
out
mov
sub
cmp
add
xor
icebp
add
lcall
in
or
fistps
pop
and
imul
shll
mov
bound
lcall
call
aaa
add
cmc
das
aam
std
push
cltd
imul
pop
mov
nop
clc
push
xor
mov
loope
lods
mov
bound
and
xor
shll
jb
cld
mov
xor
fwait
cmp
jbe
pop
xchg
test
sub
adc
xchg
and
xor
jecxz
cmc
push
sub
mov
lret
cmpb
lcall
lock
lea
aad
cli
xor
or
xor
nop
in
lret
fsubp
xor
arpl
shl
ss
icebp
cmpw
js
xor
or
push
std
out
int
push
sub
jne
cmp
add
ljmp
mov
sbb
adcl
test
inc
cmpsb
mov
xchg
into
mov
mov
xor
mov
aad
shrb
jo
sub
xchg
push
push
stos
lahf
mov
aad
mov
jl
les
inc
and
lret
push
test
mov
xchg
mov
jmp
insl
out
push
cmp
jmp
jo
cmp
adc
scas
xchg
xchg
pop
aad
mov
loope
mov
movsl
lahf
mov
add
lcall
or
mov
jl
cmc
in
fcompl
sub
stc
sti
jno
adc
lea
adc
xchg
idivb
jg,pt
addr16
pushf
fisubrs
cmp
popa
push
lock
mov
movb
pusha
pop
mov
out
add
or
cmpl
sub
dec
jle
out
sub
cltd
pop
cmpsb
jmp
push
loop
xchg
mov
insb
sbb
xchg
arpl
mov
adc
jl
mov
inc
pop
xor
adc
cmp
sbb
jmp
ror
cld
inc
int
mov
jp
cmp
and
mov
add
out
dec
ja
imul
cmp
inc
xor
js
push
js
clc
lahf
dec
jo
xchg
mov
adc
sub
cltd
xchg
xor
push
and
mov
pop
xchg
push
mov
stos
jns
nop
xchg
mov
test
repnz
mulb
adc
jmp
and
dec
loop
xor
repz
adc
cli
hlt
push
ret
test
xchg
sub
push
in
cmp
inc
popa
mov
mov
add
data16
xor
inc
hlt
lods
adc
add
in
addl
add
dec
add
and
fwait
pop
data16
lret
push
insb
mov
scas
andb
mov
cmc
dec
lods
push
addl
adc
fildll
jnp
outsb
mov
xchg
imul
sub
xchg
xor
dec
addl
je
lods
std
push
insb
cli
arpl
aaa
xchg
inc
add
lret
aad
add
sbb
jae
mov
mov
sub
mov
lcall
int3
cmpsb
mov
dec
adc
push
popa
push
mov
pop
xor
jno
movsb
jae
loop,pn
loopne
xchg
fucomip
loope
xchg
fmuls
push
inc
add
mov
movsb
jge
outsl
bound
out
jo
adc
ja
and
adc
jnp
psrlq
cmc
leave
pop
in
sar
fs
and
in
pop
fldl
add
ret
mov
jne
outsb
xchg
xchg
loope
inc
inc
orb
mov
lods
stos
dec
or
subl
mov
loopne
xor
rcrb
mov
or
rcrb
mov
sbb
jae
dec
shrb
pop
and
push
jns
out
push
cmp
xor
js
testb
imul
xchg
mov
adc
outsb
sub
xchg
sbb
add
pop
cmpsl
test
mov
outsb
jmp
push
cmp
lock
xchg
push
cs
mov
pop
sbb
out
loopne
xchg
shr
jb
es
outsl
test
lcall
mov
sahf
fwait
xor
sbb
data16
clc
or
aad
sub
test
jb
in
or
mov
jmp
insb
cmp
shrl
incb
add
aas
sti
ds
push
and
sub
scas
in
inc
sbb
ja
js
imul
push
xchg
out
xor
xor
dec
mov
daa
fisttps
adc
into
scas
mov
xchg
test
dec
push
mov
or
mov
fwait
xor
adc
dec
cli
ror
mov
std
test
jp
in
or
cltd
pop
leave
in
and
mov
rorb
and
sbb
ja
sbb
xor
fistpll
movsl
repnz
leave
lock
or
idivb
iret
inc
sbb
adc
data16
scas
mov
shrl
iret
sbb
repz
int
cld
leave
decl
mov
je
push
cmc
iret
gs
mov
add
jmp
pop
nop
fcompl
fidivs
mov
cmp
pop
aas
dec
mov
cs
dec
pop
xchg
mov
or
pusha
or
dec
xchg
pop
test
xchg
fs
xchg
xor
pop
in
inc
or
add
sti
and
cmpsl
mov
aaa
outsl
add
pop
push
push
movsl
icebp
xchg
adc
pusha
out
iret
enter
mov
aas
pop
sarl
mov
jns
cmpsl
jnp
fwait
mov
push
xchg
fists
ds
sarl
insl
dec
adc
add
popl
fsubrs
insb
sti
or
aaa
pop
aas
jecxz
cmp
xor
lret
push
sub
negl
cmp
les
xchg
aam
pushf
xchg
popf
lret
pusha
scas
loopne
inc
push
das
sub
xchg
push
inc
and
data16
mov
jno
mov
rcll
shr
sub
mov
stos
and
cmpsl
adc
xchg
decl
mov
lods
stos
nop
test
jmp
scas
xchg
mov
lret
xchg
adc
iret
mov
push
fbstp
ror
add
mov
mov
cmp
mov
xor
shlb
pop
push
fcmovnu
jmp
test
test
inc
into
div
fxam
das
outsb
cmpsb
push
cmp
mov
and
addr16
fisubl
clc
aad
shl
insb
shrl
in
fsubr
inc
xchg
jl
mov
sbb
leave
push
sarb
dec
imul
pop
cmp
in
xor
mov
push
mov
push
mov
ss
sub
sub
and
sub
adc
or
cmp
push
xor
je
in
fucomi
ret
test
aam
and
sbb
add
pop
js
je
inc
xor
and
pop
push
inc
mov
dec
les
das
inc
mov
dec
mov
lock
cld
dec
outsl
repz
pop
push
cmpsb
cmp
fdivrl
pop
jmp
sub
bndldx
push
out
je
aaa
fbld
pop
push
xchg
jno
mov
adc
sbb
jbe
iret
dec
pop
sub
scas
cli
jecxz
test
out
stc
mov
pop
es
xchg
shl
xchg
jmp
sub
jmp
and
in
and
sti
dec
enter
mov
xor
mov
jl
jb
xchg
add
adc
sbb
test
sbb
scas
lods
mov
or
xchg
aam
loope
ret
mov
inc
cmc
bound
pop
rcll
loop
mov
adc
stos
pop
cmc
addr16
js
nop
mov
imulb
sbb
push
insl
mov
xor
xor
test
ror
inc
aas
mov
xchg
sub
mov
push
test
jnp
jb
push
xchg
fsubrl
push
push
pop
ds
into
insl
jnp
jl
clc
jg
cmp
push
addb
mov
ret
shr
cmpsl
jecxz
mov
inc
rorb
add
push
push
movsb
repnz
jp
mov
adc
cld
clc
add
mov
xorb
push
cmp
push
jbe
shrl
sbb
or
in
daa
in
inc
shlb
shrb
mov
mov
pushf
insl
add
lahf
cmp
jmp
adc
and
and
sbb
icebp
rcr
hlt
jp
jo
jbe
pop
jne
fs
daa
add
push
xchg
mov
mov
mov
lock
int3
add
jbe
lret
subb
inc
add
loop
shrb
fs
add
cwtl
sar
jecxz
push
push
test
mov
cmpsl
es
sub
scas
out
push
test
fs
cld
aas
adc
xchg
sub
or
or
lods
pusha
lcall
out
ss
ds
or
imul
loopne
rorb
into
cmp
subb
pop
push
pop
out
cmpsb
enter
pop
jmp
sbb
aam
add
or
in
jnp
je
xor
dec
or
jge
xchg
lds
pusha
jle
jg
test
lcall
mov
xor
sbb
inc
sbb
mov
push
call
jno
or
mov
int3
mov
xchg
and
out
lret
xor
movsl
mov
addr16
inc
faddl
jl
shlb
lea
hlt
lret
dec
mov
sub
mov
pop
arpl
mov
mov
mov
std
sub
push
es
push
fsubr
xchg
lcall
sub
cmp
pop
jo
mov
popf
imul
mov
test
cli
out
sub
or
mov
mov
mov
pop
js
sub
punpckldq
and
cli
dec
test
push
jecxz
cmp
loope
enter
mov
mov
pop
dec
inc
enter
pop
outsl
inc
repnz
and
jg
out
lret
cmp
or
mov
or
loopne
push
jno
and
sahf
push
jnp
inc
push
sub
and
mov
jge
in
mov
or
adc
ds
inc
mov
lret
xor
adc
mov
mov
add
push
fwait
push
inc
sub
pushf
bound
icebp
xchg
inc
mov
stos
inc
add
testl
sbb
push
dec
aaa
push
popa
mov
pop
clc
gs
cwtl
push
hlt
jl
pop
lock
cs
ficoms
icebp
pop
pop
sbb
out
jne
arpl
sar
js
les
ja
rcr
fisubrl
inc
push
stc
or
inc
jo
push
ljmp
aas
jb
loop
movsb
sbb
into
adc
idiv
xchg
icebp
out
inc
in
cli
cmp
out
dec
and
out
ja
cmp
or
jb
incl
inc
mov
adc
push
jge
das
jbe
sbbl
das
lret
insb
insb
lret
jp
loop
popa
jmp
sti
lahf
xlat
aaa
ss
and
test
jns
push
pop
mov
lods
push
ja
inc
test
jp
jnp
inc
movsb
xchg
movsb
pop
pop
xchg
mull
cmp
pop
subl
mov
test
fstp
pop
or
pushf
fadd
jb
out
or
pop
pop
lods
jge
push
cmp
sbb
sub
decb
jns
lods
pop
or
shl
lods
pop
lods
mov
dec
pop
pop
repnz
push
das
jecxz
sub
xor
push
divb
inc
popf
and
dec
jle
ret
pusha
adc
orl
dec
inc
push
clc
pop
inc
cli
imul
shll
sub
mov
ss
and
das
add
divl
out
push
test
int3
out
sub
mov
aas
jnp
sbb
mov
add
push
mov
inc
mov
cltd
int
mov
out
int3
xor
out
lahf
andl
and
adc
fcmovnb
push
test
sub
enter
rcpps
shlb
mov
lods
pushf
subl
inc
push
inc
scas
fcmovnb
mov
sub
imul
out
and
pop
and
inc
dec
sti
fisttpl
and
shrb
jnp
xor
loopne
jge
or
cmp
pop
mov
sbb
push
rorl
fwait
cmpsl
xchg
dec
jnp
test
leave
mov
push
les
jp
sub
movsl
xor
adc
pop
or
mov
shll
sbb
or
pop
rcrb
cld
dec
rorb
mov
subl
lcall
lahf
sub
jg
sub
mov
daa
jne
pop
and
lods
pop
lock
push
daa
cmp
leave
cwtl
mov
xchg
inc
popf
xchg
call
dec
imul
ja
inc
pop
fistps
add
fimull
aam
cmpsb
mov
xlat
or
and
mov
dec
and
arpl
push
mov
xlat
mov
fisubrl
mov
add
xchg
sub
cmc
push
inc
sbb
pop
fisttps
fwait
dec
cmpsl
scas
dec
jnp
xchg
call
xchg
adc
nop
insb
call
iret
add
jns
xchg
or
pop
sub
iret
lods
cltd
mov
add
pop
jge
mov
dec
ret
fwait
pusha
es
mov
cmp
xchg
clc
mov
repnz
mov
in
dec
ljmp
sar
xchg
lods
sbb
aas
ljmp
push
jae
int
cwtl
insl
ss
scas
lock
bound
lret
mov
iret
aam
shlb
mov
lock
dec
dec
inc
mov
cmp
pop
je
test
mov
and
add
mov
mov
sub
in
repz
cmp
jbe
pop
jnp
fistpl
imul
in
mov
cmp
xchg
xchg
jle
cmpsb
mov
mov
cltd
mov
sub
jae
popf
enter
in
div
lds
iret
cmp
outsl
cmpsl
shll
sbb
out
fwait
hlt
cltd
lds
cmp
jo
mov
cmp
inc
cs
push
push
ret
adc
scas
aas
ds
adc
mov
fadds
xor
popf
dec
push
stc
adc
inc
mov
and
testb
roll
cwtl
decl
hlt
adc
loope
mov
fwait
lcall
push
pop
adc
lea
lock
and
jnp
sbb
sub
es
jge
jne
jno
mov
in
ds
sbb
andb
jb
in
loop
bound
xchg
popa
adcl
loop
jae
adc
push
cmc
das
mov
jno
int3
mov
popa
hlt
push
push
loope
jae
pop
out
sub
testl
ja
xor
sub
lds
push
js
mov
fs
xor
mov
push
dec
test
in
scas
and
test
xchg
and
add
xchg
in
pop
pop
lcall
dec
jne
scas
pushf
lock
dec
aad
xor
lock
xchg
cmpsb
insb
add
push
and
mov
mov
js
cmp
inc
adc
enter
mov
inc
movsl
pop
push
sub
movsb
mulb
mov
mov
push
adc
xchg
push
adc
and
jl
loope
mov
xor
mov
fisubrl
sbb
sti
adc
mov
push
jno
adcb
mov
or
test
ret
fimull
jmp
shlb
push
insl
adc
fadds
aas
sahf
dec
std
adc
mov
loop
inc
inc
out
dec
mov
mov
rcll
xchg
movsl
sahf
xchg
iret
xor
push
cmp
cld
in
mov
xchg
xor
imul
cli
xchg
cmc
rorl
movsb
ret
inc
xor
addr16
cwtl
pushf
js
iret
out
sahf
test
daa
mov
sbb
in
outsl
pop
cld
or
insl
push
inc
pop
xchg
xchg
xchg
shrl
jle
or
add
xor
inc
mov
sub
pop
clc
rcll
jae
stos
fidivrl
jnp
mov
xchg
xchg
add
outsl
dec
mov
incb
add
je
movsb
cmp
insl
push
jnp
cmp
dec
lahf
jo
sbb
jge
leave
repnz
mov
sub
pop
sbb
int3
mov
cmpb
mov
sbb
jmp
sbb
fdivs
shll
push
pushf
pop
pushf
test
cltd
mov
out
stos
fbld
jl
das
jle
arpl
icebp
repz
jmp
mov
and
cmp
inc
loopne
pop
fisttpl
ja
and
sub
pop
loopne
mov
push
fcmovu
mov
push
or
pop
es
fldenv
xchg
repz
kunpckwd
inc
push
icebp
or
push
add
decb
push
mov
pop
shlb
loopne
lea
inc
mov
xchg
push
mov
sarl
push
sahf
push
loopne
ds
pop
lods
sbb
add
insl
rcll
push
shll
mov
and
add
jecxz
mov
cltd
shll
outsb
jns
repnz
imul
in
pop
xchg
sbb
xchg
into
adc
test
mov
mov
subb
push
mov
sub
jno
sub
mov
fsts
mov
mov
cmpsb
adc
jns
andl
add
xchg
call
popf
popa
sub
repz
data16
sub
shll
shl
add
cld
mov
cmp
jns
cmpsl
popa
fwait
mov
push
add
mov
stos
cmpsl
jle
add
jbe
adc
aaa
bswap
stos
jg
repz
push
sub
fisubrs
int3
adc
out
repz
daa
fadd
sbbb
int3
mov
inc
pop
cmc
and
fldl
pop
cmp
pop
adc
mov
jmp
add
insl
sbb
dec
fcompl
aaa
dec
fs
xchg
ds
mov
dec
outsl
dec
jb
jmp
enter
jp
in
jno
popa
arpl
mov
mov
and
dec
arpl
sbb
mov
in
pop
dec
push
and
cli
inc
aaa
aas
aas
movsl
cmp
lret
mov
bound
or
mov
push
out
test
cmp
mov
dec
scas
test
xor
pop
rcll
cmp
mov
outsb
adc
mov
es
dec
dec
mov
lods
mov
leave
mov
jecxz
cli
gs
adc
out
sbb
xor
pusha
dec
xchg
sub
clc
dec
shrb
mov
lahf
inc
les
leave
lret
imul
push
mov
sbb
jg
add
sub
or
out
sub
mov
out
jle
lret
xlat
movsb
xor
sahf
out
xchg
and
push
call
sti
in
outsb
mov
mov
or
sbb
sub
ja
mov
xchg
jno
cwtl
mov
int
adc
lds
subb
push
xchg
xchg
pop
pop
repz
mov
popf
xor
mov
jnp
cmpsb
and
adc
mov
ret
pop
dec
xchg
dec
out
lcall
xlat
lds
adc
rcr
in
test
mov
incb
fucomp
scas
dec
mov
cltd
xchg
xor
and
sbb
icebp
jle
test
pop
aad
clc
cmp
push
es
in
out
movsb
push
and
push
aam
sbb
mov
pmuludq
pop
inc
leave
push
sub
push
mov
loopne
xchg
rcrb
andl
push
fisubrl
jg
mov
mov
add
in
daa
jmp
xlat
sbb
adc
cmp
das
cltd
ds
ja
jmp
gs
orl
in
adc
fnsetpm(287
loop
aaa
jae
lds
and
aaa
fnclex
mov
lret
mov
lds
cmpsl
fs
sub
mov
jg
test
jecxz
mov
int
fisubs
mov
jnp
cmp
mov
fwait
mov
or
push
shrl
or
andb
mov
fcmovnbe
sub
jle
jo
add
stos
jmp
adc
dec
xor
divl
sarl
jl
push
bound
inc
insb
gs
dec
inc
adc
addb
cmc
pop
sub
leave
push
mulb
sbb
rol
call
cmp
adc
mov
or
mov
scas
inc
mov
pop
mov
ret
mov
xchg
fiadds
mov
mov
push
xor
ljmp
ss
aam
xlat
mov
push
jecxz
ja
xor
fwait
stc
lret
mov
rcr
and
cmp
mov
jns
add
pop
xchg
je
sub
outsl
aas
cltd
or
shrl
xchg
inc
push
pop
add
xchg
and
adc
mov
or
add
or
movsb
test
movsl
iret
sti
xchg
adc
sub
inc
sbb
dec
sbb
cmpsl
sbb
mov
mov
jb
cmp
sub
shll
ss
fimull
xchg
inc
xchg
or
fisttps
jne
push
jp
out
in
pop
fdivs
cld
sbb
std
add
xchg
fisubrs
push
ffree
xchg
xchg
cmp
sub
and
sub
nop
aam
cmp
into
cs
test
or
bound
sbb
sbb
fidivrl
add
sub
in
xor
cmp
mov
add
pop
dec
test
daa
sbb
mov
xchg
adc
push
mov
es
xchg
xor
ja
add
and
scas
and
cs
xchg
mov
and
mov
aas
adc
int
sub
inc
sub
mov
cmc
jecxz
fdivr
dec
mov
lahf
xchg
mov
pop
xchg
cmp
xchg
jg
ret
icebp
lcall
add
sub
insl
jg
mov
shrl
sub
insl
fnstenv
add
sub
or
and
das
shlb
jle
repz
sub
out
loop
fst
lods
adc
mov
nop
cmp
and
cmp
out
repnz
dec
xor
fnstcw
sar
int
add
pop
mov
mov
mov
sub
xlat
inc
push
add
out
xlat
out
mov
lea
jns
mov
xor
arpl
sbb
in
pop
lods
xor
jge
xchg
xlat
jecxz
sub
shrl
repz
sub
cwtl
sub
daa
and
cli
scas
iret
mov
dec
fcompl
roll
jge
lret
shl
dec
jmpw
lret
cmp
xchg
lcall
xor
lods
fldcw
add
jmp
xchg
ficomps
or
xchg
sub
mov
xchg
and
cmp
fidivrl
insb
sub
ds
inc
popf
insb
in
lock
int3
fsubs
test
stc
mov
push
iret
sub
stc
fdivrl
add
and
push
call
insb
pop
push
jo
xor
xor
movsl
pushf
fxch
jnp
jb
inc
mov
shll
cwtl
aaa
aaa
fwait
jmp
cld
subb
sbb
pop
movsl
mov
mov
cmp
push
movsb
arpl
lock
icebp
mov
fdivr
jae
sbb
aas
stc
out
addr16
enter
iret
mov
shll
loop
popf
mov
scas
outsl
into
dec
xor
jo
into
loope
inc
push
jl
pushf
call
push
insl
jg
lea
and
out
jmp
insl
fsts
cmp
add
rcl
jl
jae
push
pop
xchg
mov
in
in
fbld
mov
cltd
push
xchg
mov
aas
add
or
sub
mov
push
inc
ret
xchg
or
push
fnstsw
or
loope
in
test
inc
arpl
lock
data16
cmp
push
aas
mov
pusha
sti
inc
or
aas
int
xor
fiadds
xlat
inc
pop
outsl
or
enter
in
fadd
aaa
jnp
sbbb
pop
or
int3
aad
mov
fisttps
inc
sysret
hlt
pop
in
ret
fbld
inc
clc
mov
shrl
mov
push
cli
or
divb
out
xchg
sub
insb
cwtl
hlt
test
stos
push
das
ficoms
jecxz
pop
dec
cmp
and
sbb
pop
scas
push
xchg
jnp
dec
mov
push
jl
sahf
ficoml
dec
hlt
lds
and
negl
dec
mov
ror
xlat
push
cmc
in
mov
or
pop
push
push
push
jmp
xchg
pushf
adc
sti
mov
inc
test
test
std
lcall
xchg
sub
pusha
adc
outsb
pop
pusha
imul
leave
clc
pusha
mov
xor
daa
loopne
dec
ja
sbbl
in
ja
mov
add
push
and
sarb
es
mov
in
sub
push
jg
push
stos
cmc
push
cmp
xlat
ret
fs
mov
clc
leave
rorl
inc
sub
subb
out
aas
add
out
sbb
out
cmc
scas
add
sub
inc
int
hlt
jbe
add
xor
mov
shl
push
push
and
mov
xchg
pop
cld
xchg
clc
adcb
aas
push
mov
stos
faddp
inc
es
mov
pop
scas
push
sbb
jns
xor
inc
lret
push
xchg
mov
sbb
mov
lret
lcall
pop
cmpsl
sahf
mov
hlt
fmull
sbb
sub
sbb
push
mov
scas
sbb
fwait
scas
mov
outsb
add
int3
negb
push
mov
mov
xchg
jp
out
fldl
and
sub
repnz
fimuls
adc
jb
ret
push
les
ficoms
cmc
push
shll
test
add
arpl
pop
or
mov
adc
ror
jo
sub
fnstsw
adc
dec
iret
ffree
fadds
rcrb
fcomip
ljmp
scas
dec
cltd
mov
or
pop
pop
jecxz
adc
sub
inc
push
inc
arpl
out
xchg
aad
sbbl
add
popa
bound
pusha
xor
daa
out
dec
and
stos
mov
jge
pop
orb
mov
shl
fidivrs
cwtl
jg
ret
xor
sarb
sbb
bound
aad
mov
stos
cmp
ret
sub
fnstcw
outsl
xchg
adc
jne
loop
shrb
mov
stc
popa
dec
outsl
mov
and
xchg
cmp
jg
adc
in
in
sarb
call
addr16
out
or
outsb
mov
adc
sub
sbb
cwtl
aad
inc
test
out
mov
stos
cmp
xchg
inc
jb,pn
mov
ret
lahf
orb
das
test
sbb
out
sbb
dec
cmp
jno
push
das
add
dec
lahf
add
cmpsl
push
scas
enter
mov
sbb
adc
cmp
cmpb
sub
push
lods
sbbb
aad
fidivs
cmc
sbb
test
cmpb
ljmp
dec
test
gs
mov
sahf
out
pop
mov
fmul
popf
popa
xchg
jae
clc
xor
scas
in
pop
cwtl
inc
cli
sbb
cmp
pop
inc
adc
sub
and
or
cmpsl
sti
orb
mov
xchg
push
pop
dec
inc
mov
loopne
imulb
push
mov
loope
jbe
ret
out
sahf
or
or
outsl
sbb
aas
or
xchg
scas
out
ss
bound
or
insl
loopne
push
push
push
inc
and
xor
gs
add
inc
or
daa
pusha
pop
fcomp
imul
cmp
add
orl
and
adc
pop
mov
cmc
shll
sbb
xchg
xor
in
mov
fwait
xchg
outsl
adc
add
data16
or
cli
mov
fidivrl
aad
mov
xchg
dec
inc
ds
test
ss
cmp
xchg
and
jmp
sbbb
mov
mov
fwait
xor
out
std
push
jnp
out
cwtl
dec
push
lods
pop
outsb
fistps
das
cmpsl
inc
shll
iret
adc
xchg
fstpt
popf
test
subb
jge
inc
dec
cmp
sub
pop
push
mov
pop
imul
hlt
test
inc
in
subl
pop
and
and
add
aam
pushf
push
lods
test
mov
ss
and
and
inc
add
rcrb
mov
mov
outsl
mov
ficomps
xor
jnp
mov
push
cmp
dec
adc
jae
scas
aad
mov
jle
mov
shr
scas
enter
push
add
xchg
sahf
and
mov
ret
rcl
aam
imul
mov
lods
adc
and
xchg
pusha
lds
push
es
out
mov
cmc
mov
adc
add
xchg
cmp
mov
imul
lret
lret
sbb
sahf
js
mov
imul
into
fsubrp
cwtl
jno
xorb
stc
jmp
push
sbb
jns
xchg
sbb
addr16
aad
cmp
std
lcall
mov
mov
adc
lds
lret
and
mov
and
xor
int3
mov
cmp
cwtl
in
ror
test
xor
pop
arpl
popf
push
test
fisubrs
jo
or
fwait
ljmp
add
xchg
fstl
xlat
out
or
subb
jmp
popa
and
aas
scas
int
sbb
inc
cmc
push
or
dec
ret
daa
mov
jns
out
sub
or
cmp
mov
hlt
jg
out
pop
call
arpl
mov
mov
movsb
push
gs
or
fwait
shl
jo
jbe
vmovntdq
jb
out
sub
mov
inc
mov
sbb
jg
repnz
xchg
addl
cwtl
cli
idivb
jns
sahf
cmp
cmpsb
sub
pop
lods
jmp
sub
cli
and
rorl
fdivrl
cli
pop
sbb
fsub
cmpsl
cmc
lcall
cs
add
cli
jmp
fisttpl
pop
xor
dec
hlt
adc
int3
and
loop
bnd
jp
xchg
add
add
test
mov
push
addr16
pop
push
push
xchg
aaa
stos
cs
inc
in
mov
ljmp
push
inc
popa
mov
xor
mov
sbb
int3
lods
pmaddwd
rol
ror
mov
mov
ljmp
imul
mov
aad
cmc
test
jecxz
in
mov
shrl
test
subl
sbbb
mov
lcall
cmp
js
ret
inc
pushl
or
dec
icebp
jb
fs
cwtl
popf
jne
jg
inc
sub
xchg
arpl
out
dec
cld
xorb
int3
testb
outsb
and
out
out
jl
out
fmuls
fwait
jae
push
xlat
xor
lock
jae
ficoml
js
jg
xor
jns
xor
hlt
xor
ss
cmp
orl
in
fstpt
test
je
enter
pushf
add
push
scas
pop
cmp
aad
jne
or
inc
mov
lcall
lahf
pusha
cmp
mov
clts
mov
and
in
hlt
das
pop
push
test
fstps
pop
pop
pop
insl
icebp
addb
fistpll
sub
gs
sbb
xor
jmp
cmpsb
pop
or
push
push
into
mov
dec
adc
mov
int
mov
inc
loop
lods
arpl
lret
rcr
aam
js
lds
cmp
cmpsb
stos
inc
push
dec
pop
push
ja
dec
ljmp
add
call
pop
or
movsb
std
xor
push
push
xchg
xchg
out
lock
cmp
mov
adc
mulb
sbb
add
add
je
jle
je,pt
jnp
cmp
mov
mov
adc
lock
inc
aam
xchg
clc
cltd
subb
sahf
pop
pusha
ret
push
shll
cmc
push
cmp
mov
mov
lock
add
rcl
pop
cmp
inc
addr16
mov
loopne
mov
sahf
bound
aad
sbb
xor
es
ror
out
jae
xor
xor
leave
sahf
mulb
out
mov
jp
dec
orb
imulw
loop
xor
or
mov
mov
jecxz
jl
pop
mov
in
jae
test
andb
test
adc
pop
inc
and
addl
ja
xchg
dec
mov
dec
in
rcll
scas
lahf
jecxz
ss
add
dec
fdiv
cmp
dec
pusha
mov
mov
jbe
bound
addl
sbb
xchg
add
stc
pop
popa
out
bound
andl
mov
or
data16
mov
and
or
dec
insl
negb
jmp
sub
or
jle
movsb
or
push
hlt
ja
mov
lret
xor
add
lods
aad
xchg
xchg
movsl
icebp
push
test
mov
test
cltd
das
sti
xchg
mov
push
xor
add
ret
push
cmpsl
outsl
sbb
or
iret
lret
je
nop
cmp
pop
mov
push
lahf
inc
sahf
jp
test
xchg
pushf
pop
int
repnz
mov
push
lds
dec
test
inc
lahf
or
stos
and
lock
xchg
dec
xchg
scas
add
bound
out
xor
sbb
mov
mov
sub
in
das
stos
jae
inc
mov
addb
cltd
jno
mov
mov
sub
or
or
xchg
leave
mov
cmp
ds
cmp
fiaddl
push
roll
add
fcompl
mov
in
pop
mov
push
pop
mov
dec
xor
push
add
pop
addr16
xchg
push
je
fisttps
push
push
mov
inc
testl
pop
fdivrl
lret
sub
divb
jmp
xchg
mov
leave
testl
mov
or
jecxz
mov
dec
out
popa
popa
dec
add
mov
test
fisttps
pop
add
jle
push
lret
ret
in
sbb
icebp
nop
xor
mov
sbb
sub
jb
ret
jno
push
pop
insl
out
xor
jle
fisubrs
push
jb
push
fiaddl
insb
into
inc
sub
adc
xor
mov
mov
andl
imul
or
push
jle
sbb
push
jecxz
pop
dec
stos
adc
sub
stc
and
inc
test
adc
sub
cmpsb
mov
sbb
sarb
lcall
inc
dec
pop
in
dec
out
xor
out
std
add
inc
iret
add
test
pop
jo
mov
nop
xor
cmp
test
lret
jbe
mov
and
sub
fidivrs
push
inc
out
xor
mov
in
dec
xor
fstpt
test
mov
sub
setb
and
xor
mov
imul
repnz
and
and
inc
aaa
rcll
xor
adc
dec
cmc
fcmove
fwait
dec
insb
stos
add
xor
xor
es
dec
jmp
mov
or
inc
xchg
mov
cmp
adc
jo
js
dec
movsb
add
loop
xchg
jge
xchg
aad
imul
inc
inc
xchg
push
ja
push
add
xchg
pop
dec
mov
fisubrs
and
scas
jne
in
es
xor
sub
add
xor
jo
xchg
and
bound
xchg
pop
adc
out
mov
mov
test
dec
sbb
ja
mov
lods
lods
into
mov
dec
insb
pop
sahf
sbb
ss
das
int3
cmp
pop
jo
jge
test
nop
inc
ret
ret
mov
push
enter
add
ja
push
icebp
ljmp
rcll
dec
sub
jno
jo
xorb
cltd
mov
jns
imul
lret
add
mov
sahf
scas
mov
push
addr16
or
jnp
add
xchg
xlat
pop
sahf
mov
jle,pn
pop
iret
pop
testl
popa
loope
mov
stos
and
xor
sbb
pop
dec
lahf
test
insb
and
xor
add
dec
xlat
jns
mov
inc
xchg
and
adc
ja
and
pushf
aad
movsb
lea
loopne
pop
sbb
and
inc
xchg
pop
dec
push
aam
xchg
mov
adc
sub
sbb
or
dec
xchg
mov
pop
imul
imul
jne
xchg
dec
lcall
fcomps
ror
cmp
jle
mov
mov
jns
int3
clc
inc
das
jnp
pop
pop
push
dec
sub
fildl
mov
and
iret
push
sti
xchg
sub
test
les
test
jnp
insb
inc
jb
cmp
xorb
add
lods
sub
mov
cmp
mov
cli
jle
mov
push
dec
arpl
cmp
out
or
sahf
lods
cmp
es
add
nop
lea
repnz
add
push
hlt
dec
mov
sbbl
test
adc
dec
pop
sub
loop
add
mov
mov
sub
enter
xchg
jb
mov
in
std
xor
cmpsb
xchg
into
xchg
push
mov
lods
daa
les
clc
dec
fmuls
mov
in
orb
add
xlat
lea
sbb
push
or
leave
out
ds
push
rorl
xchg
cmp
insb
cmp
jns
loope
and
xor
xchg
andb
dec
mov
xchg
mov
cld
cmpsb
push
jl
rcr
aam
push
sbb
out
lret
in
inc
arpl
icebp
and
or
lea
fwait
sbb
xchg
cmpsb
xor
sti
mov
loope
adc
aad
cmp
inc
cwtl
inc
xorb
stos
sarl
or
rcrl
xchg
cmp
repz
cmp
mov
push
push
jg
pop
jae
pop
shrb
pop
sbb
cmpl
lock
push
pop
fs
jo
or
std
pop
sbb
or
ljmp
jno
in
add
pushf
lahf
inc
stos
and
mov
testl
xchg
es
sbb
out
mov
out
pop
xorl
fists
fwait
or
adc
push
xchg
mov
jne
stos
cmp
dec
xor
roll
and
add
or
inc
test
jp
fldl
jmp
mov
xchg
push
sub
push
std
mov
mov
inc
mov
insl
mov
enter
nop
pop
sbb
pop
mov
sub
mul
testl
and
in
scas
js
repz
jns
mov
and
sub
andl
out
scas
mov
pushf
int3
cmp
cld
pushf
loopne
mov
stos
jb
fadd
hlt
pushf
jne
pushf
mov
mov
insb
pop
push
repnz
mov
mov
push
sbb
xchg
pop
lock
insb
cltd
pop
rcll
adc
jmp
adc
xchg
test
xor
loopne
mov
mov
xor
stos
xorb
xchg
pop
jecxz
sbb
push
rclb
jbe
xorl
outsl
test
ss
pop
mov
iret
movsl
fcompl
sahf
mov
std
mov
push
lret
jecxz
in
inc
call
iret
xchg
jae
adc
jne
out
pushf
data16
cmp
sbb
ds
popf
dec
xor
jne
shlb
ficoml
inc
shll
enter
pushf
leave
xor
adc
ror
call
ss
jle
xor
js
test
mov
out
mov
rcrl
dec
xchg
sbb
cmc
std
jp
dec
into
jns
outsb
scas
dec
stos
sbb
fnstenv
xchg
adc
dec
bound
push
fidivrs
jae
clc
jae
sub
lea
xlat
jae
add
xchg
sbb
enter
inc
mov
inc
ss
movsb
setno
pop
inc
ror
test
jno
pop
mov
push
rcll
outsb
int
imul
decl
xor
popf
js
cmpsb
inc
cmp
dec
das
sbb
xor
aas
mov
es
mov
xchg
mov
fsin
inc
les
mov
xor
inc
jg
push
pop
push
ljmp
sbbb
jne
add
loopne
ljmp
pop
and
insl
repnz
enter
test
addr16
ds
cmp
add
mov
dec
and
mov
xchg
ds
jae
ja
lret
xor
insl
insb
and
repnz
adc
jmp
and
popa
ret
sbb
hlt
sbb
add
pop
in
add
adc
leave
leave
xor
out
gs
xchg
jmp
enter
dec
or
ljmp
mov
xor
push
movsl
stos
xor
int3
sahf
sbb
and
fcmovnb
fwait
test
sbb
in
test
or
dec
xor
cmp
pop
roll
test
mov
out
or
lods
arpl
cmpb
push
inc
jbe
fsubrl
ljmp
das
dec
ljmp
ret
sbb
in
cmc
dec
inc
imul
mov
mov
cmp
rcl
xchg
xchg
mov
stc
repz
pop
mov
in
inc
lods
xor
lret
and
add
lods
jo
test
dec
mov
call
and
mov
add
outsl
lods
or
rorl
xchg
mov
inc
inc
dec
sarl
int3
aaa
jnp
cmp
sti
std
mov
imull
imul
push
dec
or
aam
push
pushf
jnp
add
inc
mov
adc
xor
jo
dec
adc
mov
ret
rcl
cmpsb
pushf
cmp
leave
lret
stos
mov
dec
stos
dec
adc
ja
xchg
inc
lcall
jae
insl
subl
orb
adc
sbb
xchg
and
popa
jmp
es
out
mov
shll
inc
fmul
subl
mov
mov
pop
jmp
jmp
pop
xor
call
test
add
outsb
push
pop
mov
or
mov
sbb
stos
jo
xchg
aam
xchg
cmp
fisubrl
xor
outsl
mov
or
cmp
inc
or
or
push
daa
call
lock
hlt
leave
and
orb
mov
sbb
sub
inc
sbb
pushf
in
and
popl
in
fcmovbe
jne
pop
adc
lahf
mov
lea
sbb
cmp
mov
aaa
jno
nop
push
ja
test
cmp
sbb
mov
test
les
mov
sbb
jae
mov
cmp
pop
cmp
and
adc
out
cmp
es
cmp
and
frstor
mov
decb
ss
lret
jo
xor
jg
mov
xorl
lock
xchg
inc
jp
loop
xchg
pop
rorb
subb
movb
addr16
test
xchg
mov
test
xor
out
adc
or
fstps
add
xor
xor
sti
add
sub
loope
and
in
clc
insb
movsl
mov
in
xchg
bound
ficompl
push
fwait
cmc
sbb
pop
sti
push
jb
sbb
and
mov
pop
fs
cmpsl
fisubrl
adc
pusha
push
cmpsl
sarb
jecxz
and
dec
sub
pop
jne
mov
and
cmp
adcb
out
lock
xor
sysexit
scas
mov
or
mov
xor
fistpl
je
scas
dec
lret
jecxz
gs
mov
or
rclb
lcall
call
pop
push
and
inc
dec
imul
add
cmp
xchg
mov
mov
inc
shrl
xchg
mov
outsl
insl
rorb
outsl
pop
push
pop
fstps
sarb
in
push
ljmp
aas
push
movsb
jnp
xor
addr16
movsl
push
fisubrs
inc
cmpsb
cs
mov
fadd
mov
in
popa
xchg
es
int
imul
fistpl
dec
repz
mov
xor
add
mov
or
lcall
mov
xor
sbb
or
push
and
pop
jno
rclb
and
dec
jne
aaa
lods
fsubs
lods
push
jns
stc
xchg
jecxz
sbb
clc
dec
cld
jo
int3
cmp
ds
lods
daa
pop
xor
add
je
xor
lods
aas
shlb
adc
enter
mov
pushf
popa
push
jb
jl
mov
mov
inc
dec
jb
lcall
fidivs
ret
mov
movsb
sbb
jbe
cmpb
push
mov
and
add
jnp
mov
pop
xchg
sbb
stos
out
in
mov
popl
inc
mov
jbe
dec
mov
stc
push
push
gs
iret
scas
sub
aaa
arpl
stos
out
mov
mov
mov
inc
and
xor
in
pop
in
lret
movsl
pop
cmp
cmc
sub
je
inc
add
dec
int3
sub
movsl
mov
movl
out
inc
popf
pusha
pop
outsl
fisubrl
sub
pushf
lahf
loope
add
insb
fdivl
xchg
jp
cmpsl
jecxz
cmp
imul
push
jno
add
jmp
int
in
cld
pop
rorl
aas
jp
js
cmp
mov
mov
or
jmp
mov
push
leave
sbb
mov
or
and
pop
notb
push
cmp
stos
mov
loop
add
repnz
daa
dec
sub
dec
mov
add
xrelease
xchg
data16
jge
inc
neg
and
xchg
mov
mov
xor
mov
and
lods
pop
and
fisttpll
mov
xchg
sahf
jle
xchg
inc
push
enter
mov
mov
fmuls
xlat
int3
xchg
stos
xor
incb
mov
push
push
xor
sub
ljmp
sbb
repnz
subb
add
gs
out
das
movsb
or
shrl
lret
mov
inc
jnp
mov
dec
or
lock
ret
mov
js
jb
aaa
aas
sti
mov
sahf
xor
mov
cmp
ret
jno
mov
sub
dec
and
sbb
mov
or
jl
mov
add
sub
iret
and
pusha
sub
repz
mov
mov
xchg
in
xor
xchg
sahf
stc
pop
cmc
call
mov
xor
adc
adc
nop
mov
lock
push
popa
or
in
outsb
jns
pop
mov
data16
xlat
clc
mov
lods
cmp
fs
jmp
jbe
test
stos
sti
and
cmp
xlat
mov
jno
idivb
mov
jns
scas
aas
dec
adc
sarl
add
cmpb
sub
in
jg
xchg
hlt
es
lret
outsl
test
sbb
fmul
pushf
pop
mov
dec
adc
test
leave
stos
pusha
lock
sub
adc
sub
das
add
je
push
pop
adc
push
rorb
xor
mov
stos
js
push
xchg
ljmp
nop
outsl
add
test
adc
jle
in
adc
mov
leave
int3
xlat
mov
test
xor
lcall
mov
testb
push
mov
insl
inc
pusha
jae
icebp
sbb
movsl
jbe
jb
push
je
out
cld
jnp
and
lcall
pop
in
jg
xchg
and
cmp
or
ret
xlat
jp
insb
jg
jge
andl
push
push
or
shrl
sub
push
inc
ret
leave
inc
xlat
testb
xchg
ret
pop
push
or
scas
push
mov
jno
adc
push
mov
and
fidivl
in
adc
lret
adc
lret
mov
movsb
nop
push
sub
sahf
xor
frstor
mov
adc
clc
pop
imull
aaa
xchg
lods
icebp
sub
mov
push
mov
xchg
sti
xchg
into
pop
cld
mov
mov
sbb
mov
sub
jmp
shrl
inc
std
mov
mov
pop
mov
jmp
sti
mov
xchg
out
loop
xchg
iret
sbb
ja
mov
cmp
xor
or
in
sbb
push
outsl
jbe
mov
push
xchg
or
daa
int3
aas
rcrl
lods
pop
sub
jne
dec
mov
inc
clc
ficoms
push
ss
push
jne
repnz
popa
and
outsb
jmp
movsl
push
cltd
loope
loopne
push
inc
mov
in
sahf
jecxz
jnp
xor
or
cmc
pop
mov
jmp
aad
jo
ljmp
push
add
and
pop
ja
in
cs
outsl
mov
jecxz
and
jp
xlat
or
repz
lret
sbbb
cmp
incb
int
lcall
or
push
push
inc
inc
scas
stc
pop
push
mov
out
movsl
xlat
xchg
push
inc
jle
std
pcmpgtb
or
mov
mov
sub
in
dec
movsl
xchg
jle
outsb
cmp
scas
sub
sbb
nop
inc
gs
bound
outsl
xchg
sub
sbb
cmpsl
mov
lret
fsubs
jb
insl
xor
jns
sbb
in
pop
cmp
fwait
movl
jne
int
fs
fidivrs
jecxz
pop
mov
push
add
sub
mov
push
xor
fldenv
lret
or
scas
or
lret
inc
push
jbe
and
adc
addb
test
cmp
out
pop
jno
loopnew
into
test
lret
inc
sub
popf
sti
daa
addr16
add
xor
xor
add
jnp
mov
xchg
mov
ds
test
scas
gs
lock
loopne
mov
bound
test
jecxz
push
das
and
and
inc
pop
movsl
cmovge
mov
and
ss
and
or
icebp
shl
cmpsl
pop
dec
enter
movsb
js
mov
sub
mov
mov
scas
xchg
sbb
mov
sbb
jno
inc
adc
lahf
xor
xchg
fwait
test
rcr
cmp
sub
jecxz
repz
mov
xchg
adc
adc
sbb
mov
dec
mov
dec
pop
and
xchg
popa
pusha
outsb
loope
mov
addb
add
imul
push
inc
mov
inc
fdivr
in
aas
inc
rcll
loopne
inc
add
jnp
call
cmc
xchg
push
mov
sarl
cmp
test
inc
stos
lret
cmpl
inc
call
sbbl
sbb
flds
dec
or
loop
push
out
dec
xlat
pop
sub
xor
add
shll
pop
push
arpl
xor
mov
jl
xchg
fidivl
xor
inc
fisttpl
xchg
ret
imul
cmp
mov
xchg
fisttpll
imulb
pop
mov
sub
mov
iret
imul
aad
xor
or
lods
ljmp
add
xchg
sbb
sub
enter
jl
rcrb
leave
push
js
push
lret
or
and
push
jne
xor
das
dec
mov
in
int
cmp
addb
dec
jb
in
cmpsl
inc
stos
jl
aam
jb
xor
andb
rorb
testb
divb
lahf
das
push
mov
test
lods
push
aam
dec
xor
sbb
movsb
rorb
sahf
pop
jae
push
sahf
lds
mov
test
mov
mov
cmp
mov
mov
clc
sbb
pop
xchg
jnp
sbb
andb
mov
fwait
xchg
stos
sbb
jmp
das
add
loopne
dec
cmc
xor
faddl
push
dec
or
scas
ret
ss
lods
lds
push
xor
pusha
push
cmpsb
cmp
xor
std
add
pop
and
mov
jge
and
sti
cmpsb
fsubp
movsl
dec
aaa
adc
rolb
adc
sbb
popf
sub
out
or
daa
cld
daa
mov
and
xchg
mov
adc
dec
and
mov
stc
cmp
or
fmul
fidivl
sti
cmp
push
inc
jle
fwait
repz
pop
xchg
loop
into
in
pop
jno
aam
ja
pop
inc
and
cltd
xor
inc
lcall
mov
nop
scas
into
pop
xchg
imul
int3
and
enter
andb
push
xor
push
mov
or
arpl
scas
ret
jl
clc
rcll
rol
movsl
add
xchg
adc
adc
mov
popa
lret
adc
aam
xlat
add
push
lahf
push
mov
call
xlat
aam
leave
xor
mov
lock
adc
xchg
shl
xchg
cmc
das
fwait
jbe
std
je
cmpsl
jno
sbb
popf
enter
pop
mov
cwtl
sub
xchg
aad
xor
jae
shlb
inc
mov
jns
les
decl
insb
ds
rcrb
pop
dec
adc
mov
push
andb
negl
das
shll
xor
insl
mul
jae
rorb
dec
lods
rorb
pop
rorb
das
sub
bound
rorb
scas
cmpsb
xchg
insb
add
pop
or
pop
lret
jmp
lea
insb
cmpsl
adc
imul
dec
and
or
hlt
sti
repz
xor
icebp
cld
shll
lahf
jae
pop
shr
shlb
mov
iret
pop
xor
cmp
mov
jb
jnp
push
jmp
aaa
cld
and
fst
pusha
dec
jae
or
push
jo
shrb
mull
cmpsb
loope
iret
mov
fcoms
gs
mov
pop
xchg
arpl
dec
iret
sbbl
jnp
sbb
inc
gs
fisubrl
andl
bound
jno
sti
inc
cs
push
mov
addl
inc
push
pop
jo
fdivr
repz
lods
cmp
ljmp
je
pop
mov
rclb
jg
and
je
addr16
sbb
sbb
jbe
dec
or
inc
mov
sub
lock
pop
or
adc
pop
jmp
in
cmp
movsb
cmp
jp
pop
ret
les
and
das
out
out
dec
shrl
pop
test
orl
adc
js
jno
xchg
xlat
push
mov
pop
jae
sub
rorb
push
clc
in
lcall
sbb
mov
jne
jo
inc
out
lret
call
imulb
push
xchg
mov
cmp
mov
mov
push
jge
outsb
or
jecxz
js
into
cmp
push
mov
jne
fcmovnbe
push
add
xchg
andl
or
push
cmpl
rorl
popa
les
nop
arpl
pusha
or
xchg
xchg
inc
mov
sahf
rcr
into
subl
les
stos
in
cmpb
mov
add
popa
in
jl
stc
add
xor
sbb
loop
ret
icebp
aam
shlb
stos
jns
mov
psubd
mov
inc
and
les
jmp
ficoml
cmpsb
lcall
adc
lods
inc
leave
popa
stc
out
out
adc
sub
int
fdivrs
mov
xor
sub
lock
aad
cmpsb
ds
in
in
push
dec
lcall
jae
bound
cltd
cs
pushf
lods
icebp
mov
adc
jbe
jne
jb
xor
out
lods
or
mov
xchg
sub
movsb
subb
xchg
lods
lret
hlt
mov
in
fwait
pushf
insl
jg
cmp
dec
dec
or
stos
ja
pop
fildll
push
cmpsb
scas
mov
cmpsb
movhps
ljmp
and
mov
inc
push
mov
shrb
cmovo
jnp
out
xlat
jecxz
adc
and
jl
lcall
and
aad
sub
fstps
sbb
mov
rcr
jle
jg
adc
sti
inc
faddp
jge
push
dec
pushf
in
fwait
sbb
xor
sbb
cmp
rcr
mov
jle
add
mov
fwait
cmpb
and
push
push
adc
push
repnz
xchg
jp
das
push
cmp
rorb
out
or
xlat
ljmp
into
jb
inc
push
call
inc
mov
push
push
dec
aam
add
stc
shl
movsl
cmpsb
lret
out
enter
loope
repnz
ret
lahf
insb
stos
cmp
cmp
aad
aad
fmull
test
idivl
sub
and
xchg
cld
mov
mov
dec
xchg
test
mov
fwait
shr
sub
lea
mov
gs
leave
out
mov
mov
pop
subl
push
push
cltd
mov
int3
mov
lret
and
into
das
imul
xor
pop
and
sbb
push
lock
mov
outsb
inc
cmp
push
lcall
fs
push
inc
out
xor
daa
dec
add
inc
fs
dec
jmp
lods
pop
jmp
scas
fildl
cmp
mov
adc
pop
mov
jecxz
mov
adc
dec
inc
add
sbb
icebp
cltd
arpl
jmp
sub
in
loop
dec
sti
xor
and
lahf
xor
mov
stc
or
xchg
mov
push
mov
sub
test
dec
addb
ljmp
jmp
inc
loope
jae
push
push
add
adcl
call
pop
dec
andl
movsb
outsb
and
pushw
sarb
aaa
cmp
jnp
jae
adc
test
or
dec
push
adc
popa
push
and
xor
fcoms
lcall
dec
ret
cs
inc
outsb
push
inc
mov
mov
xchg
fnstcw
sub
sbb
in
pop
pop
lret
inc
sbb
cmp
out
popf
lods
test
mov
repz
sub
push
loopne
mov
mov
pop
fmull
movsb
aad
stos
cli
mov
sbb
pop
cld
mov
pusha
add
ror
test
and
sub
es
aaa
lcall
adc
out
dec
aam
and
and
xchg
dec
mov
mov
or
push
or
jle
push
inc
pop
xor
lahf
inc
sbb
loope
out
iret
mov
jmp
loope
sbb
add
jno
or
sbb
add
aam
mov
push
out
inc
sahf
lahf
cmpsb
and
pop
jnp
insl
mov
inc
shll
ret
xchg
dec
mov
mov
xchg
mov
stc
pop
data16
mov
rclb
movsl
or
fisubrs
and
push
pop
sar
adc
inc
xlat
rcll
mov
inc
test
in
sbb
movsb
dec
dec
xor
je
andb
leave
xchg
test
rclb
inc
dec
lcall
add
sbb
push
pop
inc
iret
mov
leave
jae
mov
leave
test
xor
arpl
xor
bnd
xchg
popa
pop
inc
hlt
mov
insl
dec
hlt
xchg
movsb
test
xor
or
jnp
in
ja
incl
pusha
movsb
xchg
sbb
mov
imul
mov
adc
dec
jbe
adcb
mov
cmpsl
mov
mov
and
andb
mov
mov
fldt
cmpl
sbbb
shll
inc
mov
cmpsb
push
fildll
adc
push
mov
jp
lret
daa
pop
mov
mov
push
pop
ret
cmp
daa
out
pop
mov
std
scas
lret
call
in
cmpsl
rcrl
sub
add
jne
ja
movlps
jge
push
idivb
loopne
test
add
lahf
mov
add
xor
insl
or
pop
inc
icebp
ret
cmp
xor
adc
mov
xor
pushf
aam
hlt
lcall
cli
mov
sub
shrl
sbb
clc
pop
sti
ds
mov
enter
fsts
shrb
or
les
push
add
mov
sbb
pushl
dec
movsl
push
and
es
cmc
jbe
lcall
and
imul
mov
xchg
aam
mov
sub
mov
jle
or
into
daa
mov
in
test
popa
xchg
ds
out
cmp
lcall
sub
sbb
or
mov
lea
pusha
xor
xor
inc
mov
mov
jg
inc
xor
xor
call
imul
cmp
mov
icebp
push
xor
cmpl
sbbb
imul
push
adc
adcb
leave
cmp
cmp
push
mov
xchg
xchg
jecxz
inc
pop
jg
repz
sbb
data16
mov
stos
inc
mov
ljmp
popa
cmp
adc
out
lcall
xchg
enter
sub
add
enter
aam
popa
xlat
jle
sbb
imul
jo
push
rcll
add
dec
fnsave
push
jmp
insl
jg
xchg
or
dec
ret
xor
cmpsl
pop
push
xor
sahf
jno
and
in
add
ljmp
outsb
cwtl
and
fistl
fwait
pop
xor
mov
repz
push
loop
arpl
push
ja
outsb
jle
outsb
push
mov
js
insb
int
fadd
les
dec
mov
pop
outsl
dec
inc
std
inc
cmp
and
xlat
or
popa
test
pop
jbe
or
sahf
sbb
lcall
and
andb
fmuls
sbb
cmc
jl
es
pop
jo
loopne
sbb
fcompl
jae
cmc
jl
push
push
xor
inc
sub
or
addr16
push
shll
mov
adc
mov
sbb
loop
jo
sbb
ret
ja
mov
je
rorl
mov
or
jecxz
shlb
xchg
mov
cli
cs
jnp
xchg
int
mov
mov
clc
cli
les
or
fld
pusha
mov
xor
dec
insl
inc
mov
jno
rol
test
sti
jb
fs
rcl
shl
mov
or
int3
or
xchg
aaa
dec
push
or
jo
jns
adc
cwtl
add
loope
jae
rcll
aad
xlat
xorl
scas
rorb
das
or
mov
stos
fwait
jno
aad
cmc
leave
jnp
aam
inc
lret
notb
cmp
lret
pop
addr16
adc
push
ret
cld
add
int
pop
jne
iret
mov
outsb
out
pop
bound
in
mov
mov
test
stos
lcall
sbb
fidivrl
and
adc
mov
push
cmp
sbb
mov
lcall
mov
add
je
test
pop
xor
push
jge
lcall
lcall
shll
mov
lret
add
les
faddp
pusha
addl
pop
pop
mov
pop
fsub
inc
test
lcall
popa
pop
in
sbb
push
icebp
outsb
mov
sub
mov
shrl
in
cld
xor
sbb
es
xor
int
out
fwait
cmpsl
loopne
mov
cmp
mov
ss
adc
and
push
push
xchg
je
or
adc
jl
dec
test
cmpsl
scas
call
repz
xchg
pop
xchg
mov
jae
mov
lock
fwait
out
inc
sbb
xchg
out
push
lea
pop
je
dec
mov
dec
ljmp
movsb
cs
or
pop
movsb
notb
je
in
es
lock
adc
aas
inc
cmp
les
ljmp
or
rorb
mov
pop
inc
cwtl
xchg
xchg
test
hlt
dec
xor
out
call
inc
mov
imul
cmc
xchg
inc
jl
dec
stos
mov
pop
jo
js
nop
jmp
lds
xor
cmpsb
sarl
sub
cmp
mov
shlb
pop
or
aad
lods
dec
sbb
sbb
test
ss
fs
test
jl
mov
mov
das
push
or
inc
adc
test
ljmp
xchg
push
push
sub
xchg
jge
aam
ret
xorl
ja
imul
sbb
xor
test
ljmp
cmp
add
push
in
test
xchg
std
imul
push
pop
pop
jnp
cmp
int3
mov
inc
das
pusha
pop
test
in
or
xchg
dec
xchg
into
xchg
loop
jg
pop
outsb
test
test
jnp
pop
mov
or
xor
cmp
jno
insb
testb
nop
les
jmp
jae
call
aas
test
push
outsl
scas
adc
out
gs
xor
movsl
out
sub
loopne
mov
and
adc
dec
cmp
mov
mov
lea
jl
rcr
or
add
loopne
hlt
cmpsb
jns
sub
roll
sbb
inc
imull
in
mov
mov
dec
gs
addr16
out
in
aas
jecxz
or
dec
out
pop
and
pushf
popa
dec
lods
or
lods
xor
add
inc
lods
jmp
popa
orl
add
pop
in
hlt
lock
pop
jbe
xor
xchg
inc
iret
test
add
and
popf
inc
push
mov
mov
jle
add
ds
add
dec
call
push
xchg
sub
imul
popa
sbb
mov
cmpsl
inc
imul
in
sub
frstor
push
dec
fstps
imul
inc
mov
or
push
xor
mov
std
in
push
shrl
push
in
in
mov
lcall
les
mov
outsl
dec
cmp
and
xchg
ja
ja
insb
popf
roll
lock
xor
jl
test
jb
xor
mov
xor
mov
loop
call
push
push
fsubl
push
roll
out
push
insb
loope
pmulhw
jno
push
lds
push
inc
ret
lret
pop
dec
loope
fsub
dec
in
in
lcall
push
adcl
or
es
sbbb
ret
fs
mov
fdivl
cmp
sbb
xor
or
addl
cwtl
daa
in
outsl
pop
mov
movsl
push
into
mov
push
ficoml
lock
js
icebp
imul
jge
add
jbe
push
repz
jle
pop
xchg
add
add
outsw
popf
fistpl
add
and
mov
mov
in
mov
mov
lea
lock
imul
jl
or
insb
into
cmpsl
lock
push
jo
sub
rcrb
mov
mov
aaa
and
add
pop
pop
inc
adcl
les
cwtl
mov
lea
mov
inc
orb
mov
pop
xor
out
rcrb
sbb
test
cld
outsb
repz
out
arpl
jb
lret
enter
push
mov
jmp
push
nop
pop
xlat
sub
or
xorl
jnp
loop
shlb
sbb
mov
ret
push
test
xor
sub
mov
mov
test
out
and
stos
or
cmpsb
cmp
clc
jne
xchg
cmpsb
add
ret
insb
pop
repnz
shl
xlat
clc
mov
sub
or
inc
out
cmpsb
jo
xchg
shl
cld
xor
cmp
sbb
cld
cmc
test
xchg
test
loop
sbb
lods
xchg
xchg
push
int3
push
outsl
cmp
xchg
clc
xchg
jecxz
and
outsb
pop
pop
push
dec
cmc
mov
xor
xchg
mov
pop
imul
push
imul
out
repnz
clc
ficoml
fwait
push
dec
fcoms
out
test
inc
rep
dec
iret
in
xor
aad
lret
test
mov
xor
pop
jecxz
inc
std
insl
xchg
aaa
or
cmp
cmp
push
es
inc
push
push
sahf
push
inc
jp
xlat
sub
mov
test
mov
xchg
popf
pop
sbb
in
mov
mov
lea
mov
popf
cmp
repnz
push
pop
mov
outsb
loopne
insb
ljmp
ds
sbb
loopne
ss
outsl
or
jns
inc
and
sub
push
stc
mov
lea
pusha
inc
push
sbb
scas
dec
dec
pop
xchg
fcmovne
and
les
jecxz
dec
sub
inc
xchg
mov
daa
pop
pop
jno
aam
flds
mov
pop
sbb
xchg
jecxz
cmp
jae
push
sahf
subl
in
sbb
add
jl
cmpb
push
or
insb
add
cmpsl
xlat
repz
mov
jns
sbb
jo
pop
push
fisubl
hlt
push
mov
pop
pushf
inc
xor
negl
cmp
inc
stos
dec
icebp
nop
mov
loope
pop
negb
inc
sbb
pop
int3
jmp
mov
adc
dec
cmp
mov
xchg
xor
stos
fisubl
mov
loope
pushf
jo
push
sub
jae
loop
mov
lods
aas
outsl
xchg
arpl
ret
inc
mov
cwtl
cmp
out
sub
or
pop
adc
push
rolb
fsubrl
mov
jae
sub
lods
lods
adc
dec
add
mov
mov
aam
pop
push
movq
iret
sub
push
pop
orb
test
sbb
je
clc
xchg
paddusw
or
repz
repz
xchg
jo
inc
xchg
sar
sbb
push
in
sti
push
movsb
mov
loop
sub
pop
andl
ds
fisttpll
sahf
pop
ss
lods
cmp
push
gs
movsl
xchg
jne
js
lock
mov
pusha
loope
test
pusha
sbb
rcrl
sbb
mov
and
aaa
loopne
je
sub
mov
add
rcr
cmpsb
test
in
aad
ficoml
adc
adc
pop
push
jns
xor
incl
lret
aaa
xor
shll
inc
ret
stos
aad
mov
add
push
je
hlt
out
or
test
xor
ss
xor
mov
pop
mov
and
and
dec
movsl
inc
fnstenv
fcmovnu
push
push
pusha
fnstcw
outsb
lret
mov
mov
addl
fwait
data16
movb
loopne
adc
insl
jmp
mov
test
insb
jecxz
adc
add
gs
inc
xchg
mov
sbb
imul
pop
fistpl
out
jno
rcll
ret
ret
mov
jnp
lret
sub
or
inc
add
and
repnz
mov
cmpsl
push
test
js
stos
adc
and
mov
add
cmpsl
out
mov
rcr
adc
jge
jge
imul
dec
or
sti
mov
out
push
ss
xor
dec
sbb
mov
xchg
xlat
pop
xchg
aaa
fsubrs
pushf
dec
pop
mov
sub
xchg
ja
es
or
add
in
aad
pop
sar
ds
into
in
jne
xor
cmp
fwait
push
jg
jge
mov
aam
dec
addr16
das
rol
mov
cwtl
pop
push
pop
jp
mov
jg
adc
adcl
enter
pop
scas
les
movups
rclb
cmp
push
cmp
addl
subb
xchg
fnstenv
mov
loope
cwtl
push
imul
inc
loope
dec
popf
in
cli
adc
inc
lods
in
ret
pop
cmp
sbb
lcall
xchg
movsb
add
jl
xchg
mov
in
out
mov
add
das
ret
xchg
in
nop
adc
roll
into
shrl
jge
pop
jno
inc
imul
cmc
push
stos
imul
xchg
pop
fnstcw
outsl
jnp
loop
mov
jno
js
mov
clc
cld
popf
push
cli
iret
dec
test
inc
ret
add
andl
rcrb
sbb
and
cmc
mov
pop
xchg
lods
xchg
out
xor
cmp
ds
cmp
pop
ja
push
jp
xchg
and
mov
mov
xchg
jno
xlat
dec
xor
shlb
dec
aas
adc
jae
jmp
xchg
sbb
mov
adc
xchg
sub
push
es
rcrl
dec
ret
insl
push
jae
loopne
mov
sub
push
mov
outsl
xchg
add
jp
movsb
test
ds
cmc
test
push
jl
cmc
pop
aam
mov
aam
iret
ja
sub
testb
dec
test
sub
mov
pop
ds
jns
jl
mov
xchg
gs
imul
mov
and
or
mov
loop
mov
or
mov
or
jne
outsb
sub
mov
das
push
aad
int
dec
or
aas
aam
push
fcoml
mov
rcl
push
adc
mov
xor
shlb
jns
jmp
xchg
cmp
arpl
mov
pop
lret
cmp
jmp
insb
cmpsl
mov
ds
mov
pop
jmp
fucomp
shl
ss
and
icebp
jne
adc
in
rcr
sub
je
jno
xchg
movl
sub
add
aam
sub
aas
lea
or
cs
rcrb
inc
pop
stos
cmpsb
nop
jbe
out
imulb
cmpsb
jnp
arpl
sbb
sub
add
mov
lahf
fstps
nop
adc
pop
insl
testb
outsb
cmp
push
std
pop
rorb
mov
lock
cwtl
or
aas
xchg
cmp
data16
stos
fistl
stc
xor
shrb
incl
js
add
pcmpeqd
mov
les
dec
loop
lea
ja
push
dec
insb
enter
popa
or
pop
imul
inc
fimuls
loopne
sub
rcr
retw
iret
andl
inc
jae
bound
movsl
push
cmp
int3
add
mov
mov
cmp
sti
imul
pop
repz
mov
test
movsb
or
les
popa
scas
les
ja
lods
xor
rcl
mov
mov
ss
aam
fistps
jo
repnz
roll
loopne
je
sbb
pop
push
cltd
enter
lds
sub
sti
cld
mov
xor
adc
daa
fcoms
mov
push
loop
aad
push
fbstp
push
push
out
push
subb
mov
add
sti
ret
pop
mov
mov
mov
or
test
jg
dec
mov
inc
add
xchg
in
push
cmp
sbb
mov
xor
add
rcrb
jne
rorl
data16
cltd
andl
mov
imul
jl
sub
inc
outsb
push
faddl
sbb
rolb
mov
push
leave
mov
fisttpll
mov
es
mov
jne
mov
mov
cmp
sbb
mov
shr
je
push
ret
xor
daa
les
xchg
push
mov
mov
pop
mov
stc
push
mov
pop
add
jecxz
out
push
xor
pop
call
cmp
jg
adc
out
and
xchg
pop
or
fists
xlat
xor
or
add
into
xor
xlat
je
mov
jne
popf
jmp
xor
ret
sbb
dec
mov
rol
jns
cmpsl
push
inc
xor
pop
or
in
repz
sbb
inc
xchg
sbb
or
cltd
outsl
inc
inc
pop
pop
mov
and
mov
xchg
lods
sub
jo
sub
pop
negl
aad
jmp
popf
pop
jecxz
jge
sbb
gs
int3
in
mov
into
ja
roll
aas
cmp
cmc
adc
nop
inc
cmp
pop
insl
iret
push
adc
in
fistpl
lea
into
jne
sbb
lret
jl
and
cmp
lods
dec
or
mov
inc
dec
adc
xchg
mov
js
lock
xor
out
je
arpl
and
mov
imul
lahf
dec
pop
jne
sbbb
mov
inc
jb
ret
sahf
leave
fwait
aas
test
xchg
mov
mov
or
sar
fld
ss
and
test
loope
mov
out
mov
ficoml
pop
pop
jg
ja
pop
mov
js
fs
fs
push
ljmp
outsb
jns
es
scas
pop
jge
jmp
cld
stos
mov
nop
sbb
lret
out
aaa
stos
les
les
int
and
movsb
cltd
adc
inc
incb
xor
rep
out
fcmove
push
mov
push
out
repnz
cmp
jae
dec
fcomi
cmc
scas
pop
enter
inc
mov
add
xor
mov
movsl
orl
stc
movsl
mov
push
rorb
bnd
jae
insb
addr16
mov
inc
mov
jmp
clc
adc
iret
cmpsl
dec
push
and
inc
gs
sub
sub
dec
clc
loopne
sahf
pop
je
dec
iret
adc
adc
xchg
clc
sti
imul
mov
mov
fadds
mov
lds
sbb
jno
mov
xor
xor
sub
dec
and
sub
dec
mov
cmp
or
imul
or
gs
mov
and
jne
xor
loop
lock
adc
mov
dec
stos
mov
bound
ficoms
icebp
insb
mov
frstor
sub
pop
aam
ret
inc
repz
push
aam
xor
mov
int
in
mov
dec
add
xor
cmp
decl
mov
lods
jmp
mov
push
dec
lock
sbb
das
rol
add
or
imul
xchg
cwtl
pop
enter
inc
sarl
test
jbe
or
out
popa
nop
add
stos
repz
popa
xchg
fnstsw
jl
sbb
xor
mov
out
add
incl
stos
ja
and
int
xor
repz
popf
inc
mov
mov
test
insb
in
jb
insl
aaa
xchg
xchg
pushf
xor
imul
sbb
clc
mov
nop
hlt
cmp
stos
orb
or
pop
inc
jb
push
sub
ret
mov
ja
mov
iret
mov
push
jmp
aam
push
push
mov
sub
mov
xchg
mov
xchg
insl
add
imul
mov
shrb
pop
pop
arpl
mov
xchg
push
int3
cmp
hlt
xchg
xchg
mov
adc
lods
and
test
hlt
dec
mov
adc
gs
dec
aam
imul
pop
scas
jge
decb
push
jne
mov
ss
pop
test
shlb
jns
push
movsb
mov
jbe
jno
out
pop
std
fildl
aas
mov
movsb
jge
jecxz
xor
jmp
ss
jmp
jle
dec
mov
xchg
inc
cmp
jae
hlt
lahf
jbe
cmp
inc
sub
cmp
loope
sub
roll
xor
js
xor
insb
sbb
daa
ljmp
ds
xchg
in
ret
pop
mov
xlat
fcomps
cli
mov
test
iret
sub
enter
fiaddl
or
push
ret
jns
add
movsb
push
mov
and
push
push
lods
and
push
jp
mov
fstp
lock
std
adc
xchg
lea
adc
lcall
aas
fstp
js
sub
mov
mov
out
mov
dec
or
sbb
jmp
fwait
aad
mov
pop
popf
sbb
insb
out
insl
das
in
das
cmp
jne
test
xchg
pop
cmp
cmp
jge
push
je
mov
adc
rcl
add
mov
pop
push
ret
and
jb
ds
and
adc
pop
fsubl
add
sub
or
cmp
es
sbb
idivb
stos
pop
xchg
cwtl
mov
sub
fidivl
xor
insb
mov
jb
pop
jae
popa
pop
cli
push
jl
pop
cmc
sarb
lods
or
xlat
imul
adc
popa
mov
mov
arpl
pop
arpl
andl
stos
clc
sub
push
mov
cmp
pop
mov
add
add
pop
sub
dec
sbb
mov
and
fsts
mov
jb
scas
imul
aad
pop
push
divb
xor
loope
and
cmpsb
mov
push
aam
fstps
stos
fs
xchg
sbb
push
jae
adc
fstpl
lock
cltd
adc
test
push
popf
dec
inc
dec
xor
mov
mov
stos
cwtl
mov
loope
jmp
rolb
mov
scas
sbb
sub
gs
push
inc
jne
js
repz
jmp
fbld
push
dec
daa
xor
fisttps
mov
fldt
jp
scas
repnz
jns
test
enter
cmpsl
cmp
sub
pop
cmp
mov
jg
roll
mov
imul
xchg
cli
or
pop
sbb
sub
ds
lods
sbb
add
out
in
pop
cwtl
xor
leave
loope
mov
repz
movsb
dec
insl
lods
mov
adc
ror
xchg
into
xchg
pop
mov
inc
xchg
xchg
test
adc
sbb
in
test
into
inc
inc
jl
push
xchg
push
pop
add
push
std
mov
mov
fwait
pop
sub
mov
call
stos
arpl
pusha
mov
call
mov
mov
mov
lock
jecxz
adc
pushf
mov
out
lock
ret
test
cmpsl
dec
adc
sub
mov
and
add
mov
xchg
ljmp
sahf
scas
add
stos
xlat
push
imul
adc
xchg
pop
int3
and
cli
adc
mov
fs
mov
dec
arpl
dec
rorb
fmul
push
mov
daa
out
sar
xor
sarb
cmpsl
jnp
ret
xor
cli
das
adc
jb
mov
std
jbe
test
in
fbld
and
mov
lods
pop
jg
inc
popf
leave
lods
sub
icebp
out
pop
enter
or
rorb
insl
add
das
scas
stc
leave
ds
xchg
ffree
cli
stos
xor
cmpsb
xor
testl
inc
aas
cmpsl
cmp
sub
test
ret
xor
sub
ficompl
popf
inc
fdiv
movsb
pop
int
xchg
mov
push
and
dec
cmp
cmpsb
push
pop
sbb
pop
dec
and
imul
dec
clc
sbb
out
gs
mov
outsb
cmp
jns
sbb
pop
das
loope
pop
test
push
in
mov
sahf
mov
or
mov
imul
stos
ret
or
mov
lods
lock
adc
vpmacswd
mov
fldcw
aad
push
fistps
inc
fldcw
inc
scas
mov
insb
dec
cli
movl
mov
jb
in
aaa
gs
sbb
push
je
stos
mov
fadds
xor
addr16
fidivl
pop
insl
xlat
jne
jg
ret
mov
test
xchg
ljmp
cmpsb
xor
or
popf
jbe
mov
orb
fwait
outsl
in
call
call
xor
test
daa
mov
rol
mov
sbb
mov
incb
mov
inc
inc
rcrl
outsb
xchg
cmc
shl
push
mov
xor
fcoms
mov
cmp
mov
cmp
xchg
gs
je
mov
pop
outsb
xchg
xchg
int
popa
xchg
dec
ss
adc
pop
or
loope
ds
ljmp
xor
in
mov
sti
mov
insl
jnp
aad
push
mov
or
pushf
mov
sti
das
and
sbb
adc
scas
and
stc
xchg
jne
nop
xor
pmaxsw
fwait
in
shr
aad
iret
fwait
out
push
int
daa
mov
sub
adc
jo
clc
insb
mov
enter
repz
jo
and
punpckhbw
push
pop
cmp
cmp
mov
add
dec
dec
add
repz
dec
push
shlb
and
push
popa
or
pop
or
insl
mov
sub
push
cmpsb
test
lods
mov
jnp
and
stc
mov
lods
mov
add
or
pop
push
insl
xchg
mov
jmp
adc
imul
xchg
stos
cwtl
mov
pop
sub
enter
enter
test
dec
into
lods
and
dec
rorb
mov
sbb
les
xchg
gs
and
and
jecxz
lea
sahf
leave
sub
sarl
cmp
jle
sahf
js
ficomps
shlb
sahf
out
fldcw
cmpsb
and
pop
clc
mov
sbb
into
insb
jbe
mov
dec
jmp
movsb
mov
pop
movsbl
add
je
inc
aas
xor
rcrb
inc
cltd
popa
inc
repz
or
dec
sbb
cmc
xor
repz
push
js
mov
cld
push
je
lods
stos
sbb
pop
cmp
dec
cmpsb
or
imul
outsb
and
jb
cmpsl
ror
inc
pop
mov
add
inc
cmp
adc
in
jbe
loopne
mov
push
xor
xlat
jns
or
mov
adc
dec
mov
shrb
dec
nop
sahf
iret
mov
dec
rclb
gs
and
mov
pop
nop
mov
jbe
cmp
mov
push
pop
je
int3
loopne
ss
sti
fildll
inc
and
mov
mov
jge
inc
sub
push
jmp
inc
fisubrs
int
lret
cmp
or
xchg
cltd
xchg
mov
inc
xchg
cmpsb
mov
mov
clc
jne
xor
push
pop
cld
bound
dec
sbb
mov
das
push
popf
mov
sti
out
sub
pop
adc
xchg
popf
mov
xchg
jecxz
es
mov
or
hlt
sbb
xchg
daa
movb
stos
and
jge
inc
popf
pop
in
lods
push
jnp
cld
cmp
and
cmp
out
pusha
sarb
jmp
out
lds
add
adc
jo
jo
push
adc
fdivs
mov
sbb
pop
push
dec
sarl
movsl
enter
imul
gs
cmpsb
js
fisubs
mov
in
pop
cmpsb
sbb
lret
dec
jno
imul
jecxz
jmp
mov
repnz
jmp
in
sbb
sub
inc
pusha
xor
das
xchg
nop
movsl
and
sbb
test
inc
and
push
test
add
xchg
lcall
jnp
loope
jb
push
stos
dec
adc
xchg
push
lds
mov
in
mov
icebp
jb
dec
rol
or
dec
aam
lods
push
mov
and
repz
push
jae
je
xor
xchg
aas
dec
sbb
cmp
lahf
nop
cwtl
adc
sbb
shrb
mov
jno
and
out
mov
outsl
jle
aas
imull
shrl
inc
or
out
push
pop
push
outsl
pop
inc
sub
sub
cmp
rorb
repnz
pushf
lahf
cld
cmp
pop
adc
test
in
and
jb
mov
shlb
ret
clc
cmp
repnz
push
je
test
sub
movsb
jne
shlb
cld
std
jb
dec
scas
cmp
cmpsb
daa
nop
sub
sarb
adc
push
hlt
outsl
dec
out
cmp
push
sbb
pop
insb
addr16
push
lods
mov
jo
outsl
aad
enter
enter
jle
in
mov
mov
call
mov
in
jne
jo
inc
pop
jmp
in
test
jbe
ds
push
fwait
insl
xor
add
lahf
xor
mov
xlat
sub
jecxz
jbe
pop
mov
repnz
push
pop
cmp
shll
decb
add
sbb
cltd
dec
fisubs
or
push
sbb
gs
arpl
pop
test
addr16
push
lods
test
pop
xchg
push
mov
icebp
push
push
adc
setg
scas
mov
sub
popf
divb
and
andl
xor
mov
mov
xlat
adc
out
xchg
hlt
shrb
jg
sub
je
jl,pt
test
xchg
lahf
sub
dec
or
xchg
mov
insb
mov
cli
gs
xor
push
aad
sub
or
mov
in
leave
outsl
int3
dec
xchg
jbe
rep
lock
jae
inc
pop
sub
pop
xor
jge
pop
mov
xor
jle
xchg
sbb
cmp
aas
xchg
aam
cwtl
in
std
or
mov
test
sbb
push
mov
push
sbbb
sarl
xchg
push
sbb
in
lret
arpl
test
cmpsl
out
aad
int
rclb
xchg
jno
sub
gs
adc
sub
mov
sub
jecxz
dec
jae
aad
or
mov
inc
enter
cmp
fisubs
outsl
gs
insl
jae
pushf
or
in
xor
clc
mov
mov
inc
adc
stos
pop
pop
repz
mov
repnz
ds
lds
test
rcrl
cmp
jl
loop
push
jno
adc
lods
xchg
and
add
in
incl
mov
inc
in
pop
orl
lret
in
mov
sbb
daa
movsl
cmp
push
inc
rcll
mov
adc
fincstp
push
xor
xor
sub
das
push
sub
mov
lock
mov
cmp
mov
or
or
pop
and
inc
mov
xchg
adc
test
iret
jp
scas
sub
jmp
pop
push
jmp
add
popa
sti
ljmp
adc
or
add
sbb
aad
idivl
lea
les
sbb
mov
out
out
nop
int3
adc
aaa
push
lahf
xor
es
data16
movsl
pop
sbb
sarl
std
lahf
mov
xlat
dec
lret
sub
xor
fsubrs
aaa
sub
mov
std
xchg
jnp
rolb
cmc
cmp
js
out
jnp
sbb
sub
pop
jbe
fistps
movsl
lea
add
and
stos
mov
scas
and
pop
ret
inc
out
daa
test
or
sub
loope
fwait
cmp
scas
cmp
scas
mov
xor
cwtl
imul
fildl
jnp
js
push
fldt
add
xlat
jmp
xchg
popa
ja
pop
jg
ret
rcl
xor
adc
push
orl
xor
lods
in
push
push
lock
cli
ja
loope
xorl
filds
in
shl
mov
js
add
fcmovne
push
xchg
test
leave
or
mov
xchg
sarb
es
jns
mov
adc
fs
int3
rcrb
clc
sub
add
xchg
stos
mov
mov
ss
adc
stos
not
cmp
daa
dec
loope
cmp
cli
or
jnp
pop
and
cwtl
mov
fxch
sub
faddl
push
add
movsl
mov
les
aad
push
fcmovb
daa
rorb
dec
sub
mov
insl
adc
inc
pusha
adc
sub
push
pop
adc
ret
bound
out
js
lods
adc
jno
xchg
push
xchg
cmp
cwtl
ljmp
insl
hlt
inc
icebp
pop
mov
push
loope
stc
adc
mov
outsl
and
test
inc
mov
stos
lods
mov
pop
mov
xchg
mov
roll
push
aad
iret
fdivrs
xchg
mov
xchg
mov
inc
ljmp
cwtl
mov
iret
mov
popf
cmp
in
inc
je
cmpsb
stos
push
sahf
xor
mov
pop
in
pop
insb
sbb
dec
insl
pop
lret
into
sbb
cli
xor
xor
cmp
xchg
into
std
shl
xorb
rorb
add
pusha
mov
or
mov
adc
inc
out
cltd
jle
mov
xor
push
ss
clc
sbb
xor
cltd
sarb
add
mov
mov
adc
add
jmp
lcall
pusha
push
sub
repz
pop
add
adc
imull
sbb
jne
sub
shlb
xor
aam
pusha
push
das
notl
mov
stc
xor
repz
jp
adc
mov
add
shrl
dec
arpl
popf
or
or
pop
dec
js
adc
ss
aas
and
test
out
add
xor
mov
add
pop
push
aaa
test
sahf
and
pop
test
lahf
dec
rclb
mov
pop
cmpsb
adc
push
pop
mov
mov
loopne
lcall
imul
out
ret
mov
pop
fs
jmp
sbb
mov
sbb
movsb
lcall
sahf
pop
sbb
pusha
sub
sahf
fisubrs
xchg
xlat
xor
imul
cmp
loope
icebp
mov
into
push
pop
ljmp
jne
jns
and
test
pop
inc
out
mov
and
scas
repz
movsl
mov
sub
addb
lea
pop
lret
mov
sbbl
addr16
xor
lret
movsl
data16
test
out
loop
lcall
and
mov
push
cmp
mov
out
inc
mov
pop
sti
mov
dec
add
pop
rcrb
push
dec
push
ja
sub
mov
dec
mov
cmp
sub
sbb
push
sahf
xlat
mov
sub
clc
incl
inc
mov
negl
idivb
dec
fnstcw
xlat
jb
jne
cltd
xchg
int
pop
or
arpl
jnp
fwait
hlt
mov
dec
aam
sub
call
pop
mov
cmp
outsl
mov
faddl
rclb
faddp
mov
jnp
xchg
aas
xor
or
clc
dec
decl
sbb
and
dec
mov
mov
mov
mov
cltd
sub
jae
dec
mov
loopne
stos
cmp
popa
outsl
sar
xchg
and
divb
pushf
gs
and
cmp
fldenv
ljmp
and
cmp
ret
dec
arpl
xchg
push
sbb
push
mov
or
orl
mov
imul
or
jno
idivl
cld
repz
popf
fistpl
sbb
jg
push
dec
adc
xchg
shl
sarb
fisubs
mov
fdivs
imul
movsb
mov
scas
rol
xor
out
out
xchg
push
mov
cmp
adc
cmp
xchg
in
mov
adc
add
popa
out
dec
loope
ss
push
jo
call
lea
out
sub
sub
sahf
push
stos
jp
test
cld
aad
mov
push
insb
icebp
jmp
mov
cmp
negb
mov
xor
mov
push
repnz
iret
bound
cmc
mov
test
cltd
sbb
std
add
ljmp
shrb
cmpsb
and
ja
mov
add
stos
mov
lret
xchg
mov
mov
jne
push
mov
in
xchg
cli
stos
push
shl
xor
mov
mov
enter
dec
outsb
shll
jno
lcall
ja
stc
pop
mov
outsb
or
in
pop
xchg
and
push
aaa
sti
cmpsl
or
mov
iret
cmp
and
fcoml
lods
in
popf
xorl
push
mov
mov
and
mov
xchg
jecxz
sbb
adc
fdivs
repnz
ss
test
mov
push
call
jmp
in
dec
xchg
mov
sar
push
shll
gs
adc
repnz
mov
xchg
adc
and
jle
enter
jae
mov
repnz
mov
aaa
sub
mov
xor
lods
sub
pop
sub
cmp
adc
in
jge
and
add
and
popf
push
std
lret
push
inc
rcl
out
cld
and
adc
insb
jg
push
insb
cmpsl
mov
es
addr16
mov
enter
push
xor
fisttpl
sha1nexte
push
mov
dec
cs
jnp
sub
outsb
test
and
shrl
shrl
sahf
call
mov
dec
push
lods
sti
stos
data16
lods
cmpsb
bound
push
fdiv
nop
lret
lods
loope
jle
or
ret
xor
adc
lock
repnz
rcr
pop
lods
cwtl
sub
ljmp
xchg
fwait
addr16
dec
loopne
mov
mov
inc
es
add
mov
mov
mov
daa
movsb
mov
xchg
lods
stos
mov
dec
adc
mov
lret
ficoms
push
xchg
sub
outsb
aas
int
rcrl
fmuls
xlat
mov
sahf
mov
mov
or
fsts
push
jmp
in
clc
cmc
mov
scas
sbbb
loope
cltd
fs
out
scas
xor
mov
ret
push
stc
inc
mov
or
cmp
stc
adc
ror
xchg
lea
jp
cmc
fidivrs
cmp
jbe
outsl
mov
jb
sub
lds
xor
push
sbb
fisubrs
gs
xlat
pop
sub
push
stos
lods
sbb
loopne
dec
xor
lods
ljmp
mov
pop
add
pop
clc
xor
lock
push
mov
mov
jle
dec
adc
mov
and
mov
outsb
lcall
dec
xor
xlat
andl
loope
mov
xor
outsl
mov
lds
add
mov
fimuls
pop
or
loop
jbe
push
gs
lret
lock
add
iret
cwtl
pop
jno
xor
cli
nop
std
adc
fucomip
fldenv
mov
int3
sub
adc
dec
xor
sub
lds
mov
test
in
mov
jecxz
xor
loop
popf
rolb
sub
or
mov
fadd
xor
fcoml
jge
cmp
outsb
pop
push
lret
mov
jmp
inc
popf
rolb
mul
jl
insl
or
xchg
jge
and
das
test
push
sbb
add
dec
lods
lods
clc
fstpt
mov
dec
cmp
fistpll
fwait
std
cmpsl
inc
mov
xchg
nopl
adc
ljmp
mov
psubd
test
inc
loope
scas
mov
add
mov
mov
jecxz
xor
test
xlat
mov
dec
arpl
jg
dec
ret
std
xchg
ljmp
fstpl
mov
push
sahf
out
push
jecxz
add
sbb
mov
scas
lods
and
push
hlt
jg
or
sarl
cld
add
mov
int
addr16
xor
sbb
push
xor
and
cmc
popf
stc
xlat
addr16
xchg
pop
notl
mov
and
out
jge
xchg
xchg
mov
lahf
test
sub
loop
mov
mov
jbe
bswap
out
jo
dec
adc
fs
mov
mov
sub
inc
test
outsb
jmp
and
fs
lods
nop
pop
mov
rolb
inc
sub
xlat
dec
loopne
mov
add
dec
sti
pusha
loope
jno
lret
iret
jns
je
push
js
adc
xchg
aas
or
jns
test
mov
ret
hlt
add
outsl
lods
pop
loope
xchg
mov
adc
and
or
jp
insl
xchg
mov
out
dec
cmp
pop
addr16
leave
cld
enter
mov
dec
lock
add
sub
rcll
in
xor
pushf
pop
inc
mov
insb
fldcw
imul
push
and
rorl
js
add
mov
inc
les
add
inc
sbb
sub
mov
sti
cmp
push
roll
jp
test
js
xchg
pop
lret
mov
loop
cld
scas
pop
data16
mov
mov
int3
inc
add
inc
scas
jno
fcmovnu
ja
mov
mov
xchg
repnz
sbb
sti
pop
dec
sbb
add
push
push
leave
mov
fucom
xchg
fidivrs
flds
shll
roll
std
adc
push
jne
pop
mov
mov
mov
addr16
or
add
mov
stos
sarl
imul
or
push
mov
mov
fdivrs
mov
repz
sub
pushf
add
push
arpl
pop
int
mov
push
test
imull
pop
cmp
xchg
test
mov
call
jecxz
xchg
cltd
mov
cmp
adc
xor
lock
out
cmp
popa
notl
mov
insb
les
mov
in
mov
out
imull
sahf
pop
test
or
pop
or
fimuls
movsb
fimull
cmp
sbb
lret
dec
leave
dec
xor
arpl
call
push
xchg
outsb
dec
sbb
dec
mov
cmp
adc
sub
roll
xlat
ljmp
gs
adc
push
clc
jge
in
das
mov
testb
and
arpl
mov
inc
sub
dec
cmp
mov
lret
fadds
xor
nop
sbb
call
ret
jge
jns
adc
scas
mov
xchg
pop
lahf
arpl
popa
ds
icebp
rorb
cmova
cmpsl
push
xor
cwtl
push
xchg
mov
push
xor
push
mov
mov
sar
jecxz
hlt
sub
pop
sti
mov
jo
je
push
aad
lahf
enter
cmp
push
and
data16
test
les
mov
aam
fisubs
jp
mov
xchg
or
mov
dec
lds
lret
or
sub
dec
push
push
inc
int3
jg
aam
jno
add
fisttpl
inc
pop
dec
cmpsb
cmp
out
cmpb
shll
in
inc
insb
jns
icebp
pop
dec
movsb
test
mov
cmp
push
sub
cwtl
inc
in
xor
push
ja
cmp
dec
mov
test
daa
sarb
outsb
fadd
mov
bound
xchg
es
lock
fcomps
add
out
cmc
mov
daa
sub
movb
shlb
mov
inc
xchg
jecxz
adc
insl
xor
cmp
divb
jge
out
mov
ljmp
test
orb
mov
in
jge,pt
sub
or
inc
divb
insb
xlat
iret
vfrczpd
push
adc
clc
mov
adc
dec
lods
mov
sbb
sbb
iret
dec
or
out
iret
mov
ss
sub
mov
mov
addr16
mov
popa
pushf
adcb
mov
es
mov
inc
insb
stc
roll
add
pop
aaa
sub
add
test
fdiv
add
add
rcrl
outsb
cs
adc
in
rcll
jecxz
fnstsw
std
xchg
push
fiaddl
int3
and
cmp
sub
sbb
scas
pop
aad
divl
sahf
loopne
and
push
lcall
jmp
jo
mov
rorl
xor
lahf
out
in
das
mov
cwtl
xor
fucomp
data16
adc
clc
movsl
fwait
inc
xchg
pop
or
and
dec
daa
jmp
and
adc
stos
cltd
rclb
out
imul
mov
dec
push
lods
addr16
out
sti
int
addr16
movsl
cwtl
push
loop
mov
hlt
mov
cwtl
gs
push
fsubrs
jmp
mov
sub
popf
ja
add
aaa
mov
and
adc
std
decb
aad
push
push
jmp
xchg
lahf
aaa
push
cmp
je
rolb
arpl
xlat
cmp
popa
add
push
lock
les
sub
rorl
push
std
lds
cs
pop
jmp
or
lea
addr16
scas
jbe
and
sbb
movsl
pop
stc
xchg
jg
or
sub
pop
outsl
pushf
icebp
bound
mov
xchg
or
repz
je
xchg
arpl
xlat
sahf
xchg
mov
and
xor
test
cmpsl
xchg
add
pop
mov
imul
xchg
xchg
xchg
and
jb
sahf
mov
ljmp
sbb
popf
std
add
fwait
shrb
sub
push
cmc
cmp
push
bound
cmpsb
lods
xor
add
fs
arpl
sbb
fcomps
pop
cmpsl
rcrb
repnz
daa
or
jno
sbb
sub
mull
xor
and
fdiv
popa
pop
popf
shlb
cmp
or
imul
cmp
adc
jnp
aas
aaa
adc
pop
sbb
inc
out
or
lock
mov
lock
imul
adc
iret
mov
xchg
lea
cwtl
xlat
jb
pop
repz
cmp
add
mov
mov
ss
stos
arpl
bound
xor
sub
aas
mov
jecxz
sub
push
add
nop
jae
mov
repnz
jg
adc
lcall
adc
lret
xchg
into
sub
int
pop
push
sbb
lcall
and
out
xchg
xorb
jge
shl
jl
pop
and
repz
or
xor
popf
mov
scas
stos
and
lret
cs
sub
lgs
aaa
and
adc
lahf
in
das
mov
mov
mov
test
adc
adc
sub
xor
pop
sub
aas
sub
inc
jbe
dec
lock
inc
loope
adc
inc
jae
push
cli
dec
xchg
jno
outsb
and
jbe
loopne
clc
or
rol
out
adc
aas
stc
sti
cmp
and
js
dec
in
fdivrl
adc
jp
inc
lods
test
push
mov
movsl
subb
aaa
pop
and
mov
pop
idiv
sbb
ja
dec
imul
add
in
cmp
jl
xor
lret
ljmp
fld
and
stos
jb
clc
mov
popa
cwtl
in
cmpsl
jmp
icebp
movsl
pop
ficomps
push
dec
sbb
push
mov
mov
popf
mov
movsb
leave
mov
lret
push
dec
push
outsl
loop
push
jno
es
mov
leave
sub
or
lcall
push
push
cld
sahf
inc
push
and
and
xchg
addb
push
rorl
xchg
xor
sbb
jno
fucomp
inc
test
dec
orl
gs
adc
aaa
sbb
shll
leave
pop
imul
mov
inc
mov
xchg
stc
pop
scas
mov
pop
inc
mov
cmp
pop
sub
xor
and
inc
inc
jb
push
dec
inc
loope
xchg
mov
cmp
mov
mov
cmp
inc
mov
sbb
mov
daa
outsb
shlb
subb
push
imul
inc
xchg
jp
and
dec
push
mov
dec
sbb
mov
mov
cld
or
ljmp
cltd
orb
pop
xchg
scas
pop
cmp
xchg
xchg
or
hlt
mov
xchg
pmullw
lock
ret
xchg
outsb
mov
push
int
pop
movsl
insl
dec
imull
pop
js
sbb
xor
cmpsl
inc
push
push
or
loopne
jb
and
scas
int3
fwait
jecxz
scas
lcall
add
mov
jle
fsubrl
push
lret
xlat
stos
add
sbb
call
xchg
dec
jg
cld
addb
stos
mov
insb
or
jge
stc
dec
in
xchg
addr16
cmc
arpl
jl
sbb
shl
dec
push
pop
popf
insl
in
fwait
push
inc
in
outsb
lods
or
dec
imul
xchg
xor
pop
lds
nop
mov
cmpsb
and
ret
add
icebp
dec
rcl
adc
scas
aaa
push
jnp
jg
repz
pop
jecxz
aam
sbb
cmpsb
pop
ljmp
add
popf
addb
cwtl
mov
sbb
jae
repz
std
xchg
sbb
fisubl
mov
popa
adc
sti
rclb
inc
push
pushf
and
adc
mov
iret
loopne
outsb
push
mul
rcll
stc
insb
bound
je
adc
inc
mov
in
ficompl
xchg
in
cli
push
xor
xchg
push
adc
jnp
pusha
adc
xor
in
sub
xchg
jmp
mov
and
sub
subb
movsl
lret
je
xchg
roll
int3
mov
mov
jge
fsubl
repz
dec
ds
in
sub
mov
rorl
jae
dec
fnsave
mov
xor
inc
fcompl
add
int3
jecxz
insb
ret
mov
sub
loop
inc
scas
sub
mov
mov
in
in
mov
and
add
push
dec
inc
aaa
inc
pusha
inc
arpl
inc
fimuls
jno
andb
add
fstl
xchg
lret
and
cmp
dec
dec
push
or
pop
jmp
cld
mov
push
cmp
cld
pop
add
leave
or
add
adc
aam
outsl
negb
lock
mov
popa
dec
imul
or
data16
lcall
pusha
mov
xchg
inc
sbb
sub
xchg
adc
sbbb
inc
push
mov
add
mov
push
or
lea
push
dec
loope
sub
push
loope
mov
pop
sub
xlat
xor
dec
cmp
jmp
add
add
dec
sub
mov
inc
gs
jnp
inc
xor
or
es
mov
addr16
add
out
sti
push
jg
jle
cs
mov
pop
stos
sub
imul
leave
outsb
jnp,pn
gs
pop
cld
cmp
mov
mov
mov
rorb
cmpsl
xor
push
leave
and
mov
xor
add
add
mov
mov
repnz
repnz
adc
out
aas
push
cli
lock
movsb
mov
dec
pop
sbb
cld
dec
xchg
push
jecxz
imul
pop
aaa
xchg
icebp
and
out
das
repnz
mov
mov
aam
push
sbb
inc
push
jle
lahf
adc
popa
fdivrl
adc
xchg
lret
jnp
and
sbb
scas
xchg
inc
stos
std
lods
cwtl
adc
mov
fwait
ja
cli
fidivl
sbb
adc
jecxz
out
add
lock
mov
xor
sub
int3
cli
xlat
mov
inc
mov
xor
sub
push
ret
mul
push
fcmove
push
loop
mov
mov
std
xor
add
stos
gs
cmp
test
mov
cltd
pop
out
loop
adc
je
adc
cmp
xchg
inc
mov
dec
mov
xlat
push
repnz
cmpsb
nop
cmc
ss
in
inc
mov
or
dec
pop
aas
es
cmpsl
fstpt
mov
shlb
cli
jbe
add
aas
js
out
or
das
or
icebp
push
and
xor
jle
xlat
aas
cmc
fwait
jg
int3
addr16
or
mov
inc
imul
cwtl
jnp
or
mov
push
outsl
nop
push
scas
jns
fstps
aad
add
test
jg
adc
inc
inc
stos
inc
adc
xor
jae
mov
jmp
scas
jle
lods
dec
sbb
lock
mov
and
or
std
sub
lret
outsb
test
ret
inc
cmp
add
dec
add
or
lods
adc
xchg
and
jmp
push
mov
push
push
mov
incl
movsb
ss
xor
cmc
adc
cmp
mov
lods
jno
xchg
cli
mov
push
inc
das
movsl
loope
inc
adc
dec
mov
inc
enter
js
jmp
jne
pop
mov
dec
mov
dec
ja
mov
or
andl
mov
stos
mov
push
cmp
jbe
inc
dec
mov
push
inc
out
das
and
and
inc
dec
les
lock
sub
daa
jecxz
adc
scas
ror
jbe
pop
jp
mov
xchg
stc
xchg
mov
inc
stos
leave
cmp
pop
repz
inc
pop
out
xor
lcall
ds
lcall
movsb
add
loopne
jecxz
push
lods
ja
mov
lcall
ljmp
out
cwtl
mov
mov
dec
mov
or
nop
sub
xchg
shll
mov
fxch
sbb
rclb
enter
repnz
pushf
xchg
or
jge
lahf
ret
jg
xchg
insl
fimull
ja
rcr
dec
test
js
mov
jmp
icebp
sub
xor
rclb
mov
adc
insb
insl
stos
out
mov
cmp
push
mov
and
addb
lods
jmp
jbe
or
xor
jns
xchg
sub
jns
and
loope
in
or
cmp
imul
push
ret
jae
test
pushf
adc
insl
sbb
cmp
jb
jp
xchg
dec
xchg
mov
jns
lcall
testl
fldenv
sub
ret
adc
add
lds
pop
data16
imul
lret
sbb
dec
add
mov
popf
popa
cltd
push
mov
out
push
xor
and
out
push
jp
or
into
add
inc
mov
sbb
mov
pop
test
je
mov
decl
push
test
rclb
mov
test
mov
push
aad
xchg
popf
push
mov
test
adc
mov
cmp
dec
jp
fldt
dec
dec
insl
arpl
mov
test
shll
pop
pop
lea
hlt
mov
mov
inc
das
lods
gs
leave
inc
scas
sub
cmp
fnstcw
or
jnp
sbb
mov
addr16
mov
test
sti
xor
and
lock
and
or
jne
outsl
adc
mov
in
les
pop
andl
jns
aas
adc
fsts
pop
fcomi
adcb
lret
std
lods
fs
lea
test
sbb
mov
add
inc
in
stc
cltd
xchg
jg
cmp
scas
lret
or
and
sub
dec
daa
frstor
inc
scas
inc
inc
or
sahf
test
inc
sti
or
out
jo
lcall
insb
lods
pop
loopne
into
push
test
test
xchg
es
mov
jecxz
add
movsl
jl
jge
fisubrs
jnp
ds
flds
fidivrl
mov
negb
arpl
jbe
dec
popf
addl
pop
fsubrl
lahf
push
xchg
movsl
dec
ret
popf
dec
leave
jl
sub
jl
dec
push
mov
arpl
mov
fimull
gs
ret
and
push
mov
aas
addr16
or
data16
add
xchg
sti
xor
arpl
pushw
cwtl
jae
ret
mov
je
push
mov
dec
jmp
lea
arpl
jecxz
cmpsb
sti
jg
push
lock
jne
xchg
inc
push
fbstp
sbb
adc
mov
xor
std
fistpll
decb
andl
aas
jge
scas
jo
mov
mull
ljmp
sti
xchg
mov
pushf
push
sti
mov
sbb
mov
stos
loop
mov
lods
or
les
inc
stc
pop
int
roll
pop
out
out
fists
sbb
xor
inc
lret
mov
pop
pop
mov
scas
ljmp
xor
sbb
mov
jecxz
inc
sbb
add
sub
cmpsb
lret
test
in
xor
out
call
and
inc
xor
mov
jns
cs
mov
mov
das
dec
cwtl
jb
jne
sub
add
call
inc
and
pop
rclb
pminsw
or
or
push
push
mov
or
enter
jmp
sbb
adc
cmp
cmp
lock
movsl
mov
mov
pop
bound
inc
xor
cmp
or
mov
dec
push
test
movsl
cltd
test
mov
mov
fldt
out
int3
mov
jl
push
enter
jo
pushl
adc
xchg
xchg
enter
lea
jb
or
push
cmpsl
jg
loop
sbb
and
dec
fcmovne
sub
inc
mov
in
jo
sub
lahf
stos
iret
sub
bound
cmp
movsl
inc
inc
lahf
hlt
adc
jb
jmp
push
mov
in
loopne
out
sub
lcall
jne
popa
loope
or
pop
je
jmp
inc
call
js
orl
mov
dec
insb
adc
repz
sub
sbb
rcr
jle
rorl
les
ss
std
cmpsb
pushf
dec
test
clc
mov
push
jge
sbb
mov
mov
jnp
push
imul
loope
cmpsb
mov
lock
mov
out
loope
pop
or
mov
push
repnz
aaa
jno
or
adc
sbb
cmp
xchg
aaa
xorb
shlb
push
mov
lcall
xchg
outsl
sub
je
fcompl
loopne
repnz
inc
outsb
mov
dec
push
inc
cltd
or
test
fdivl
enter
addl
pop
gs
or
aaa
sbb
cmp
pop
jae
in
lcall
movsb
arpl
xlat
jmp
bound
inc
and
xchg
xchg
clc
mov
clc
aaa
inc
aam
push
fcomps
push
jne
ljmp
loop
arpl
xor
mov
add
mov
lods
jge
mov
out
add
es
fnsave
cld
push
les
cmp
fistpll
xchg
or
pop
dec
movsb
xchg
test
pop
mov
ret
cmp
mov
mov
xor
dec
pop
pop
mov
shlb
mov
xor
aaa
or
lea
sbb
bound
in
jg
or
push
add
cmpsl
lds
jns
fstp
repnz
and
jge
cwtl
mov
int3
sti
arpl
xchg
adc
or
pop
mov
sub
cs
push
xchg
and
or
sbb
hlt
inc
adc
mov
mov
pop
aas
or
popa
sbb
mov
insl
pop
adc
clc
adc
jno
loop
in
ficoml
sarb
insb
pop
and
pop
mov
lea
and
data16
or
jp
out
and
sub
adc
cmc
movsl
lods
rclb
scas
add
in
fs
int3
mov
push
push
loopne
lock
das
stc
and
lods
arpl
stc
xchg
and
mov
setnp
jo
rcrb
cmpsb
mov
jb
sub
mov
jmp
stos
xchg
and
add
mov
repnz
repnz
pop
mul
pop
fadds
adc
out
mov
push
xlat
insl
xor
cmp
mov
int3
push
jb
jo
pushf
lds
mov
push
lds
insb
add
in
stc
into
aas
filds
cmc
mov
or
inc
ja
mov
push
pop
fstps
sbb
jp
mov
aas
and
adc
pop
imul
mov
mov
xchg
lods
mov
push
fnstsw
adc
imul
scas
xlat
xchg
and
and
sub
in
sbb
out
or
adc
mov
mov
repz
out
fadds
and
neg
and
sbb
mov
dec
insl
lret
jne
and
xor
pushf
mov
dec
mov
cmc
push
loopne
mov
ret
test
out
pop
sbb
ds
jno
stos
push
jne
xor
call
add
xchg
ja
cmp
insb
ret
mov
sarl
and
and
daa
loopne
and
xchg
ficomps
loop
call
or
add
sub
mov
es
sbb
push
scas
push
lock
xor
pop
mov
ror
mov
insb
shlb
dec
cmpsb
data16
mov
pop
jg
test
mov
jns
mov
js
ljmp
stc
jge
mov
insb
mov
call
rclb
push
nop
cmp
shl
or
dec
mov
or
fneni(8087
add
out
jecxz
fwait
mov
gs
sub
lock
or
jg
fcomps
inc
lcall
das
mov
jge
ljmp
fs
aam
adc
mov
pop
mov
jne
cmp
movsb
inc
lods
push
scas
lea
pop
repz
cmp
sbb
jbe
jg
mov
mov
outsl
mov
aas
imul
pop
int3
dec
lods
xor
movsl
ljmp
or
push
pusha
call
mov
lahf
scas
or
sub
cmp
mov
push
jp
mov
pop
stc
mov
rcr
iret
subl
data16
xchg
adc
push
push
in
test
repz
lock
sub
test
pop
xchg
mov
cmp
movsl
inc
mov
dec
dec
popa
adc
ja
repz
xlat
sub
cmp
cmc
jb
sub
dec
sub
and
imul
cs
movsb
hlt
pop
xchg
mov
cltd
adc
sahf
testb
push
jl
mov
xchg
mov
ss
push
pop
and
cmpb
jecxz
xor
incl
fsts
mov
dec
mov
rorl
pop
inc
or
jp
inc
mov
jecxz
lds
mov
mov
cmp
stos
sbb
inc
adc
and
ficoms
pop
aas
sub
xchg
out
daa
pop
stos
or
out
or
lds
pop
and
cwtl
les
mov
ss
add
jg
pop
incl
int3
xchg
push
lock
jo
sarl
xlat
cmp
jnp
fldenv
mov
mov
jne
fsubs
jle
adc
fwait
pop
push
daa
xlat
dec
loope
pop
aad
mov
out
xor
ja
add
nop
idivb
push
cmp
ljmp
and
jecxz
cmp
push
enter
daa
imul
insl
cmpsb
andl
xor
insb
push
push
cmp
movsb
shrl
xchg
cmpsl
and
add
xchg
lds
jmp
jecxz
out
into
xor
pop
cmp
flds
xchg
addr16
inc
add
popf
sbb
mov
fistpll
sbb
sub
sub
mov
movsb
or
ss
xacquire
imul
cmc
into
adc
jo
loopne
ljmp
fildl
rcrb
mov
cmp
dec
push
jge
lds
adc
in
fistpll
scas
loop
push
xchg
pop
pop
dec
dec
ljmp
inc
testl
push
sub
jae
clc
imul
iret
and
adc
ss
pusha
or
jbe
dec
aad
xor
xor
repz
xor
fnsave
xchg
sarb
push
xchg
sub
mov
cmp
out
adc
insl
and
lret
lret
inc
sbb
push
shrl
enter
pop
in
mov
pop
gs
mov
iret
mov
mov
scas
jno
dec
mov
pusha
cli
clc
or
mov
jecxz
into
ljmp
out
stos
fwait
pusha
xor
ljmp
mov
test
insl
jmp
push
inc
sbb
arpl
jp
push
push
lea
fnstenv
mov
adc
test
inc
pop
fnstsw
sbb
cmp
fidivl
cli
in
xchg
movsl
adcb
in
mov
xchg
adc
and
mov
mov
or
pop
inc
xor
push
aas
ss
pushf
dec
leave
dec
or
icebp
inc
xorb
int3
adc
jb
stc
fiaddl
dec
rol
fld
sub
push
sub
aaa
and
push
add
push
jno
push
cmp
xchg
mov
inc
sahf
sbb
ss
adc
xchg
stos
repz
sbb
inc
jg,pn
cmp
cmpsl
cmpsb
adcl
in
mov
daa
mov
cli
test
sbb
cwtl
shrl
pusha
lret
sub
inc
clc
pop
sbb
test
push
push
mov
cwtl
ljmp
sbb
xchg
adc
xor
adc
gs
jne
outsb
knotb
adc
dec
dec
enter
aam
jecxz
push
insb
or
xor
nop
test
outsb
aam
xor
aad
sbb
orl
sbb
push
mov
xchg
mov
inc
pop
cs
imul
out
pop
ds
in
mov
int3
add
and
test
pusha
inc
sti
lods
filds
shl
mov
test
cmp
push
jle
pop
cmc
inc
push
in
insl
xchg
push
mov
sub
mov
inc
push
scas
xlat
push
insb
or
xchg
popf
test
addr16
leave
mov
jle
pop
pop
cmpsb
cmpsl
rcrl
jge
lret
inc
or
mov
jg
fiaddl
push
fstpt
lds
add
sahf
jle
test
pushf
enter
stos
jns
jmp
pop
inc
iret
push
bound
mov
sub
aam
test
int
scas
pop
jbe
add
cmp
rcrb
inc
inc
fiaddl
test
popa
scas
fwait
add
pop
inc
ds
cli
xchg
push
aaa
jmp
adc
fldt
cmp
xchg
or
rorl
fisttpll
orb
rorl
into
pop
jae
call
std
jle
andb
sbb
loopne
mov
ror
sbb
cmpsl
lock
sub
popf
lods
inc
push
jecxz
bound
cli
lcall
imul
push
jae
jle
xchg
pop
push
pop
dec
mov
outsl
jge
xor
add
dec
loopne
dec
mov
xchg
jb
nop
popf
pop
mov
push
sbb
jge
fdivrl
fstpt
cmpsb
decl
cli
sub
dec
pop
int3
or
lea
arpl
leave
push
cltd
push
shrb
xchg
dec
es
cmp
mov
scas
cmpsl
bound
sbb
xorl
cmpsl
mov
xchg
cmc
dec
cltd
bsr
pop
stos
stos
cmp
repz
or
stos
shrl
add
in
test
mov
test
loope
jns
cli
call
out
jl
test
inc
sti
cmc
cld
push
aaa
lods
out
loop
rcr
fldl
addr16
add
outsl
into
xchg
xor
inc
jno
xchg
jp
leave
cmp
mov
jno
push
or
ret
fistpll
ljmp
sub
or
sets
adc
ret
pop
push
out
dec
add
inc
push
push
in
xchg
jle
lahf
pop
cmpsl
and
inc
adc
mov
jae
and
jp
adc
dec
pop
in
sbb
mov
es
fwait
or
pop
pop
mov
lods
sub
push
inc
movsb
fcmovnb
into
adc
cwtl
mov
sub
pop
in
inc
add
pop
ss
dec
cmc
jb
pop
fidivl
sub
push
mov
mov
sahf
pop
rol
sbb
push
mov
inc
jmp
jmp
imul
push
icebp
pop
sbb
sbb
cs
clc
xor
inc
jecxz
fcmovu
les
xchg
scas
ret
shrl
mov
inc
out
inc
jno
ret
scas
xchg
xor
pop
pop
jg
popl
push
xor
mov
cmp
daa
jge
and
enter
inc
ja
cmp
mov
mov
ds
add
in
mov
mov
arpl
nop
mov
in
and
ds
enter
push
inc
mov
je
jne
push
stos
rolb
cmp
jns
xchg
push
push
adc
out
fwait
scas
mov
dec
pop
xchg
popf
pop
les
ret
imul
rcrb
xchg
xchg
mov
add
popf
out
dec
cs
cmp
mov
aaa
push
jo
fisubrl
push
jae
jne
cmp
sbb
mov
xor
orb
bound
sti
adc
nop
xchg
dec
push
aas
int3
scas
popa
mov
push
xchg
lock
inc
notl
inc
push
adc
xchg
mov
cmp
scas
mov
test
mov
xchg
sub
mov
xor
je
push
shrl
jo
add
fidivrs
add
icebp
and
movsl
icebp
jmp
xchg
shlb
push
inc
scas
cmp
cmp
test
pop
and
jns
mov
xchg
stos
dec
xor
xchg
mov
inc
call
add
jns
bound
je
fcmovnbe
jle
leave
sub
push
aas
mov
pop
pop
shll
xor
iret
pop
cmpb
jbe
aas
ret
or
pushf
jns
push
sbb
cmp
sub
enter
dec
and
mov
rorl
into
cmp
mov
popf
clc
inc
pop
fcomp
inc
ss
or
mull
pop
mov
add
pop
mov
sahf
xlat
xchg
and
mov
inc
xchg
cmp
pop
das
push
pop
adcl
and
cmpsb
jg
and
test
pop
outsb
sub
mov
mov
outsl
outsl
inc
jnp
in
jne
add
movsl
mov
andl
push
outsl
cmpsb
pushf
movzwl
aad
adc
ret
mov
jmp
push
test
inc
sbb
sub
xchg
ficompl
addr16
fadds
sub
adc
repnz
fs
pop
in
sub
leave
sbb
daa
dec
popf
adc
or
fcompl
pop
or
sbb
jge
jb
inc
lods
shrb
imul
jmp
repz
and
pop
inc
mov
push
inc
cltd
or
test
xchg
sub
leave
inc
cmp
fisttpll
fdivl
ss
adc
insl
sub
xchg
rolb
and
cwtl
add
or
lahf
mov
push
movsl
or
mov
add
fcmovnbe
mov
out
cmp
cmp
loope
xchg
xor
fists
push
and
and
push
popa
mov
sbbl
inc
mov
inc
push
pop
jge
in
mov
jg
mov
arpl
push
mov
adc
lahf
cmpsb
push
mov
jp
xor
out
data16
lods
mov
mov
cmp
fwait
pop
stos
test
fistpll
sbb
mov
dec
repnz
cltd
shlw
sub
add
adc
divl
pop
mov
push
roll
pop
dec
add
mov
out
pop
int3
cmc
cmpsl
ja
test
jo
cs
push
loope
jo
sub
daa
mov
jbe
aas
enter
cli
sti
lcall
cmp
out
xchg
mov
testl
ljmp
mov
xor
inc
ss
mov
sub
inc
push
inc
pop
xchg
out
mov
jns
mov
loopne
lcall
add
roll
jns
push
enter
or
outsb
insl
adcb
xor
outsl
out
inc
adcl
pop
nop
jmp
lret
jo
and
imul
ret
and
mov
mov
gs
push
and
ljmp
push
test
cmpsl
cmpl
ret
outsl
sbb
leave
mov
and
in
jb
xchg
xor
xor
mov
ja
pop
dec
pop
daa
rorb
cwtl
push
and
outsl
mov
xchg
repz
cmpsb
add
pop
mov
sub
push
fmul
add
push
lods
daa
cmp
mov
je
mov
push
pop
clc
das
test
xchg
sub
pop
or
clc
mov
mov
jae
addb
sbb
sti
hlt
or
cmc
xor
ret
insb
push
pop
pop
jge
pop
cld
dec
ret
inc
dec
fwait
hlt
sub
and
dec
mov
pop
or
cs
xor
xchg
stos
add
xor
add
push
or
jns
add
add
xor
jnp
inc
and
lret
cmpsb
push
iret
cmp
idivb
jbe
sbb
test
out
and
repz
fcom
decl
movsl
mov
jns
pop
pop
xorl
jl
popa
pop
mov
and
lahf
movsl
stc
mov
or
dec
mov
pop
jmp
sub
push
mov
loop
cmc
cmp
std
jno
fcomip
mov
std
ja
mov
enter
xor
ficoml
inc
fdivr
cli
int
ljmp
xchg
add
add
adc
cmp
mov
fstps
ss
mov
add
les
test
xchg
mov
call
jbe
test
or
sub
cmp
dec
repnz
shl
sub
and
cwtl
lods
add
out
movsb
xchg
jp
fcoms
jmp
mov
iret
mov
jge
adc
in
pop
adc
mov
push
push
jae
icebp
imul
in
fwait
sbbl
sub
push
mov
scas
movsl
jnp
std
and
xlat
mov
jae
push
jecxz
xor
or
pop
dec
cmp
test
sub
andb
xchg
adc
xchg
push
or
in
pop
hlt
cli
push
jae
or
and
pop
push
mov
pop
ja
cmp
mov
rcrl
and
or
xchg
xchg
mov
arpl
stos
test
or
lret
push
lcall
sub
mov
mov
or
xor
loop
dec
js
ret
cmp
or
push
mov
xlat
cld
adc
cmpsl
and
add
ret
xor
mov
andb
insl
shlb
dec
xlat
pop
pop
mov
ret
sub
out
mov
cmp
shll
mov
subl
in
ret
aas
xchg
add
jp
inc
imul
adc
movsl
sbb
int3
xchg
repnz
and
sub
lock
fcoml
adc
mov
repnz
pop
test
xor
fnstenv
nop
ja
cmpsl
test
pop
scas
adc
cmp
out
loope
movsl
cmp
aaa
daa
sub
jnp
out
icebp
mov
add
test
fsubrl
cmp
movb
mov
mov
ljmp
push
js
adc
and
popf
rcrl
sub
fnstsw
mov
mov
test
sub
and
insl
mov
iret
enter
inc
push
pop
mov
or
and
call
cmp
in
jecxz
dec
jp
mov
mov
fwait
sbb
mov
std
inc
pop
roll
incl
pusha
inc
mov
icebp
out
lahf
pop
leave
xor
neg
pop
xchg
fmull
pop
movsb
mov
data16
lock
in
ret
lret
mov
lods
push
dec
lret
sbbl
inc
mov
daa
test
addl
mov
xor
mov
fiadds
mov
dec
sub
adc
sbb
das
or
mov
stos
mov
loop
push
sti
ja
cmc
scas
jae
aam
mov
repz
xlat
pop
mov
inc
sub
sub
ret
jp
arpl
xchg
outsl
mov
pop
popf
movsl
mulb
jl
mov
je
push
adc
addr16
and
inc
scas
loope
fidivrs
xchg
mov
push
fs
das
dec
mov
mov
xor
jmp
pop
stc
out
lods
lret
repz
adc
loope
pop
imul
mulb
or
aad
or
push
xor
sarl
dec
add
xor
mov
jo
test
rcll
pop
testb
sbb
lret
push
cmp
jbe
mov
popf
loope
add
push
adc
mov
jmp
test
xor
pop
iret
lret
mov
mov
sbb
ss
test
shrb
dec
in
data16
xor
rcl
popa
cmpl
sub
push
push
xlat
or
in
test
inc
xor
fldenv
push
jnp
add
cld
mov
sbb
daa
pop
loop
pop
ret
popa
pop
test
push
jmp
jbe
orb
adc
aad
shlb
or
lea
dec
dec
and
xchg
test
gs
popa
push
rclb
jno
fiaddl
mov
dec
sub
mov
sub
repz
loope
cltd
enter
test
dec
stos
repnz
pop
aam
pop
mov
insb
add
in
popf
xchg
pusha
push
fcmovnbe
and
leave
or
ss
movsb
dec
inc
jne
or
push
rcll
pop
jle
pop
clc
push
ss
fidivs
jno
xchg
gs
pop
cmp
push
mov
jno
add
xchg
imul
imul
fcomip
pop
fiadds
cmpsb
mov
mov
jmp
test
push
push
cmp
lds
jp
imul
dec
lret
imul
mov
mov
inc
paddd
xchg
cli
aas
stc
mov
mov
xchg
rorb
push
jno
cwtl
mov
mov
shll
insl
push
outsb
loop
jno
and
fucom
pop
push
daa
inc
out
inc
bound
or
bound
lea
cwtl
dec
loopne
and
fdivs
jl
subl
mov
jmp
sti
inc
roll
pop
add
pop
out
xchg
fs
cmp
cli
xchg
loope
jb
pop
mov
fistpll
mov
stos
ss
out
test
sub
and
adc
jno
pop
int
shrl
lods
nop
fmull
xchg
cmp
fisubrl
decb
adc
jnp
sbb
repz
cmp
pop
add
insb
and
cmp
and
scas
add
mov
push
flds
leave
pusha
cwtl
xor
push
push
fnsave
loope
mov
adc
int3
scas
mov
push
sbb
daa
int
cmp
bound
xor
ret
repz
inc
adc
cmpsl
es
sbb
out
test
ret
addr16
add
jbe
test
scas
fdivrs
push
mov
popa
and
mov
movsb
mov
inc
stos
sahf
repnz
mov
mov
iret
es
mov
xchg
fidivs
rorb
mov
ljmp
sub
mov
idivb
adc
sub
clc
mov
sub
sub
mov
xorl
xchg
fidivrl
les
lods
in
aaa
rorb
mov
into
inc
cmp
adc
aad
fxch
xchg
xchg
xor
aam
pop
adc
sbb
mov
into
dec
push
das
sbb
push
sahf
les
push
inc
mov
cmp
lahf
cli
cmp
inc
scas
push
push
add
pop
popa
loope
iret
or
jbe
ret
bound
aam
ds
adc
dec
cmp
cmp
arpl
scas
ret
leave
loop
stc
mov
or
cmc
inc
cmp
fimull
and
stos
jo
dec
fchs
adc
test
cmc
xchg
push
push
xor
shl
lcall
and
sbbb
mov
loope
xchg
inc
sbb
fmuls
lods
mov
outsl
imul
cwtl
clc
sub
int3
sub
frstor
popa
movlps
or
fidivl
mov
test
inc
mov
jb
xor
loopne
pop
pop
cmp
xlat
fincstp
shll
push
pop
and
mov
sarb
cli
push
mov
stc
mov
scas
dec
mov
mov
xchg
jns
jbe
sub
push
sbb
add
sahf
mov
dec
lock
fidivs
ja
sub
sbb
loope
add
mov
push
cmp
fcompl
popa
xor
call
fs
cmp
xor
push
xor
pop
cmc
or
xor
mov
out
test
mov
imulb
frstor
mov
xchg
lea
sti
jge
cld
div
data16
gs
pop
xor
les
sahf
out
and
sub
jecxz
inc
outsb
dec
rcrb
ret
fbstp
sub
in
add
xchg
call
xchg
mov
xlat
loope
clc
xorl
fsubs
sbb
jecxz
cmpsl
dec
adc
gs
out
jbe
push
mov
sbb
jg
cmc
dec
rsqrtps
cmp
insb
pushf
adc
mov
div
sbb
add
scas
rcrb
rclb
sti
insl
out
shll
cmp
push
out
mov
xchg
sti
mov
cmp
jns
fsubrl
xor
mov
sbb
pop
adc
aaa
and
test
hlt
movsb
cmpsl
jp
dec
push
or
pop
jbe
in
mov
xor
push
das
out
jmp
pop
mov
rcrb
ret
rcrb
movsl
mov
xor
dec
xor
bound
and
xchg
add
mov
xor
pop
jge
ror
adc
jae
sbb
ljmp
and
mov
sub
sub
rorl
aam
jecxz
mov
adc
jns
jle
ret
mov
and
scas
and
xorb
jecxz,pn
fwait
lods
sbbl
ficoms
aad
js
shll
ret
sub
and
and
and
adc
out
xor
les
xchg
jbe
into
pop
mov
mov
repnz
xor
ljmp
sub
ja
cmpsl
dec
dec
adc
pop
pop
jge
dec
das
mov
in
jnp
aam
sub
sub
inc
loop
and
push
add
pop
mov
imul
sti
adc
call
into
xchg
loope
in
jge
cld
cmp
repnz
sub
lahf
les
jmp
sbb
pop
sti
mov
daa
mov
adc
dec
sbb
mov
add
aad
aaa
scas
add
popf
xchg
push
orl
popa
jecxz
fsub
mov
repz
popf
mov
xor
hlt
cltd
sub
popa
push
in
cld
popa
adc
insl
addr16
and
dec
nop
mov
das
jbe
pop
lcall
out
mov
cltd
cmp
test
or
test
int
adc
jne
stc
push
fdiv
insl
cwtl
shll
leave
xlat
xchg
outsl
outsl
mov
push
mov
pushf
mov
dec
enter
rolb
and
repnz
and
in
mov
xchg
jne
cmc
loope
adc
or
lret
sahf
add
dec
sahf
rolb
shlb
sbb
ljmp
ret
imulb
sub
icebp
leave
cmp
pop
and
jb,pt
das
jecxz
pop
out
aaa
test
push
pop
stos
push
jp
dec
add
fs
mov
push
test
es
cmp
iret
sub
add
movsb
fdivr
popf
enter
or
push
adc
add
ljmp
inc
fwait
aam
rcrb
movsb
mov
fstpl
test
cmpsl
add
xchg
rcll
inc
jle
adc
lahf
aas
lahf
sti
xchg
cmp
mov
mov
shl
bound
clc
inc
out
pushf
lea
jmp
and
mov
cmc
mov
js
mov
pushf
ljmp
fwait
outsl
xchg
fisubs
mov
dec
in
aad
sahf
gs
and
sbbl
dec
outsb
test
imul
in
inc
sub
test
jno
mov
sub
pop
sbb
addr16
sbb
ljmp
pushf
int3
js
jge
hlt
rorl
gs
dec
adc
jecxz
inc
dec
out
aad
arpl
jae
insl
cs
add
fistpll
int
leave
mov
xchg
mov
pop
cmp
xor
daa
add
repz
or
add
lods
mov
or
sbb
shl
xchg
pop
and
shrb
mov
jns
mov
jge
inc
fcmovb
sbb
into
lods
add
sbb
or
sbb
test
hlt
in
xchg
mov
xchg
inc
lret
call
mov
imull
in
push
loopne
rolb
dec
xchg
clc
minps
pushf
sub
or
repz
adc
cmp
loope
sub
mov
dec
cltd
and
xor
jno
mov
notb
rcll
movsb
test
aas
aam
data16
cltd
push
insl
cmc
push
mov
mov
fnstsw
insb
mov
lds
and
or
inc
lods
jg
cld
push
adc
aaa
push
outsb
fistpll
xor
shlb
mov
adc
inc
stos
jmp
pop
mov
test
dec
jg
pop
in
stos
jae
int3
pusha
repnz
adc
mov
xlat
push
mov
push
adc
mov
push
jmp
das
notl
and
pop
repz
mov
xchg
lods
jno
data16
imul
jp
adc
add
cli
jo
pop
dec
or
jbe
incb
cwtl
jno
scas
jne
pop
iret
mov
xchg
cmovo
outsl
mov
add
faddl
cltd
push
xor
mov
pop
mov
adc
aas
into
lock
insb
fsubrs
out
pop
lcall
mov
pushf
cmp
inc
cmp
les
adc
sub
sti
ss
adc
cs
sbb
jmp
int
xchg
icebp
jge
inc
mov
cmc
and
stos
jnp
mov
cmpsl
pop
sti
add
mov
push
inc
cli
lods
mov
sub
xor
push
mov
or
mov
std
fwait
and
clc
pop
and
push
inc
es
arpl
mov
sahf
push
int
xchg
out
sti
xorl
dec
shll
mov
out
jo
imul
inc
out
mov
subb
cmp
sbb
jno
imul
push
xchg
add
stos
inc
mov
or
or
adc
mov
je
and
xor
pop
jecxz
xchg
stos
les
push
adc
cmc
decb
out
jo
fstpt
mov
xchg
xchg
in
call
xor
repnz
mov
mov
push
xlat
pop
aaa
pop
dec
popf
mov
fmul
loop
jge
sbb
jnp
enter
inc
out
or
jge
jo
jne
push
push
call
push
inc
add
pop
push
bound
xor
out
cmc
movsl
xchg
ja
out
loope
shrb
mov
cmpsl
negl
jp
testl
or
jle
add
pop
sbb
cltd
add
adc
push
mov
jg
jmp
or
mov
test
or
and
fmul
dec
sbbl
clc
xchg
mov
dec
in
pop
scas
mov
pushf
lock
add
mov
adc
cmpsl
stos
xchg
sbb
hlt
outsl
mov
xchg
cmp
mov
mov
xchg
icebp
lret
hlt
movsl
xchg
push
xor
shl
sub
push
shll
in
or
mov
out
gs
inc
lahf
fsubrl
jne
call
dec
fidivrl
fwait
lret
andl
pop
das
sub
mov
pusha
mov
test
enter
push
sbb
ja
cmp
jp
dec
xchg
adc
push
inc
dec
loop
outsb
les
pushf
je
sbbl
pop
lahf
fdivrp
cs
and
movl
fisubs
push
push
dec
and
repz
ja
and
sub
mull
xchg
xlat
insb
and
sbb
mov
jb
aad
fdivrp
shll
mov
pop
jmp
xor
std
inc
inc
lcall
mov
cld
inc
not
mov
fs
jnp
sbbb
pop
push
aam
push
xchg
xchg
xchg
ljmp
mov
jne
sub
aam
pop
or
pop
jb
push
cld
in
mov
sti
loope
addr16
loop
jae
pop
popf
scas
mov
xchg
push
cmc
mov
cwtl
cmpsl
adc
add
pushf
bound
xchg
movsl
cmpsb
pop
das
lret
notb
jno
fldt
rorb
mov
clc
gs
mov
push
lret
out
mov
shr
test
scas
andb
mov
lods
mov
fisubrs
mov
shrl
mov
loop
daa
sub
mov
pop
ljmp
ret
cmp
xchg
inc
ret
dec
pop
jne
or
mov
hlt
jle
mov
dec
loop
int
outsb
mul
jecxz
sbb
mov
cmp
insb
cmp
fisubs
insb
sub
test
arpl
mov
les
jg
arpl
outsb
aaa
add
adc
std
sbb
out
mov
or
jno
insb
cltd
xchg
in
hlt
cwtl
icebp
cmp
mov
jg
and
cmp
js
lea
cltd
icebp
or
push
push
add
xor
jecxz
repz
mov
cwtl
pop
mov
adc
data16
int3
pop
popf
pop
cmc
dec
jmp
popa
jl
stos
ret
ja
xchg
aaa
movsb
add
mov
sub
or
into
inc
and
inc
lcall
sub
cli
out
cmp
cmp
add
sbb
pop
push
stos
out
mov
aad
push
or
outsl
or
fcmovnbe
jle
add
xorl
leave
ja
cli
xor
lahf
inc
bnd
les
add
jmp
cmp
adc
pop
sub
cmc
add
or
shrl
add
das
imul
and
cltd
in
cli
sbb
mov
scas
pushl
cmp
adc
dec
xchg
jp
jmp
sbb
lods
movsb
call
sbb
jnp
outsl
cwtl
pusha
stos
dec
aad
or
call
lods
shll
add
sub
call
loopne
test
or
xor
and
test
outsl
aas
shrl
scas
aas
imul
xchg
dec
js
and
xor
mov
or
or
mov
cmpsb
int3
sub
fidivrs
push
sub
inc
xchg
mov
movsl
push
pop
fadds
aam
sub
sarb
cmc
push
cmpb
dec
js
pop
lods
rcll
inc
and
jne
mov
mov
cmp
inc
jnp
addr16
cmpsl
mov
push
in
loopne
popa
add
inc
mov
jne
xlat
jnp
add
das
jg
scas
pop
cmp
push
jge
push
mov
lcall
imul
outsl
scas
xor
sbbb
inc
cmp
pop
sub
mov
inc
xchg
dec
sbb
jge
cwtl
fcom
mov
stc
mov
xchg
sbb
cmove
aad
mov
mov
jo
mov
scas
mov
lahf
dec
enter
and
push
pop
lret
inc
adc
stc
ss
xchg
jecxz
adc
cmp
cmp
xchg
push
cmp
dec
mov
ds
movsl
inc
sbb
cwtl
jl
dec
int3
ja
rcrb
dec
jne
ss
insb
mov
scas
mov
mov
mov
mov
mov
push
cmpsl
add
movsb
xchg
aaa
pop
mov
inc
out
and
cmp
in
push
or
mov
out
fsub
and
sarl
jg
in
jp
scas
loopne
mov
or
mov
popa
dec
lahf
repz
lds
pop
inc
mov
mov
leave
adc
mov
out
xchg
adc
cmpsb
jle
ret
insl
mov
pop
test
scas
aad
jg
adc
xchg
cmp
dec
andl
test
cmc
jle
mov
push
aaa
iret
out
add
adc
fcoml
and
fwait
sarl
test
sbb
cmp
les
sub
mov
mov
jns
inc
testb
insl
add
jmp
clc
loop
push
jmp
arpl
leave
adc
inc
pop
inc
xor
inc
fwait
test
push
mov
xchg
ffreep
out
inc
pop
mov
je
fstpl
lea
or
push
pop
and
fdivrl
lret
mov
orb
mov
ret
mov
stos
push
mov
xchg
sub
fiaddl
stos
push
push
sbb
xor
popa
arpl
pop
loop
imul
enter
sub
clc
movsl
xor
add
lret
mov
mov
es
jecxz
jnp
sbb
and
shrl
xlat
repz
mov
sub
popf
loop
insl
xor
dec
mov
sub
jnp
push
cltd
xlat
in
out
mov
jmp
push
out
pop
and
outsb
mov
and
filds
js
xor
movsb
cmpsl
or
fs
push
out
hlt
add
lods
xlat
fs
xchg
sbb
out
loopne
out
xor
popa
js
mov
movq
rcrb
or
ret
iret
inc
out
sub
dec
leave
mov
pusha
test
xchg
sbb
jg
add
nop
or
pop
out
out
ret
sub
insb
test
dec
fcom
out
dec
lcall
mov
add
fwait
xchg
mov
mov
aaa
lods
lret
arpl
push
or
add
lret
mov
dec
xor
adc
sbb
sti
scas
cld
dec
mov
adc
test
cmp
jb
fmull
adc
les
outsl
fldl
cmp
jg
in
hlt
adc
icebp
and
dec
mov
sub
std
lds
leave
jno
out
outsb
adc
jmp
pop
xchg
fs
dec
xlat
aaa
push
pop
in
mov
rorb
sbb
adc
das
sub
jno
mov
adc
or
push
add
push
getsec
daa
repz
shrb
daa
fidivrs
cmc
loope
fdivrs
sbb
adc
jne
jns
clc
stos
daa
shl
call
pop
or
xorl
jecxz
loop
mov
mov
cmp
out
mov
add
inc
jge
repnz
mov
shrb
addb
in
jne
inc
cmp
cmp
into
rcl
mov
add
sub
ljmp
out
nopl
lock
jle
mov
fdivr
adcl
mov
cmp
sub
sub
and
mov
xchg
or
and
mov
incl
mov
jae
jge
dec
mov
or
in
cmp
sarb
lret
sub
xchg
fcoms
std
cmp
insb
xchg
push
fmul
sbb
loopne
aaa
fs
fcompl
and
std
mov
inc
dec
lock
bound
je
lret
lret
ficomps
jge
push
jle
mov
clc
aad
inc
jno
lcall
adc
sahf
mov
addl
push
and
repnz
and
jecxz
ret
mov
in
aam
and
sbb
pusha
ss
sbb
xlat
inc
sub
dec
fcomp
jb
mov
cmp
out
inc
xor
jne
jae
sub
test
out
xor
xchg
imul
jmp
mov
or
sub
sub
dec
mov
in
xor
mov
xorl
fcmovnb
leave
sub
push
cmp
aas
lods
jnp
mov
enter
inc
popl
int
xchg
or
repnz
loopne
cmpsb
addr16
test
add
mov
mov
ss
test
je,pt
incb
add
addr16
jb
mov
mov
jb
xlat
jg
aas
ror
jns
int3
insb
scas
or
adc
lret
cmc
jg
in
and
xchg
lret
daa
pop
rorl
rcrl
sub
pop
pop
in
repnz
stos
and
mov
rcl
rep
lods
inc
jae
or
inc
testl
cmpsb
mov
enter
ss
ret
mov
add
leave
xchg
mov
mov
sti
pop
ss
add
mov
sub
mov
inc
dec
pop
cltd
sbb
outsl
fildll
xor
sbb
mov
xlat
and
pop
fstl
dec
inc
lahf
mov
push
jle
push
sub
inc
or
ljmp
gs
xchg
sbb
cmp
sub
cwtl
outsl
dec
popa
xchg
rep
testl
lret
arpl
xchg
and
cmp
adc
ret
cwtl
mov
movsl
dec
sbb
iret
lea
fimull
sarb
push
adc
push
add
jp
push
pop
push
movsb
mov
bound
xor
dec
cmp
fistps
hlt
lahf
or
push
push
sbb
outsl
xor
ds
ljmp
movsl
sub
push
rcll
push
and
adc
inc
addb
clc
in
dec
push
loop
mov
stos
data16
test
pop
dec
call
cltd
adc
mov
pop
adc
adc
push
bound
lock
mov
xlat
pop
xchg
push
push
adc
add
mov
xchg
scas
int3
pop
clc
les
push
sub
cmp
xor
mov
sarb
pop
loopne
pop
pop
mov
and
pop
imul
loop
adc
rcrb
and
lahf
idiv
or
fimull
pop
sti
and
fistpl
mov
jne
movsb
jb
jns
jmp
xchg
xchg
fsubrl
cmp
adc
lret
outsb
xchg
repnz
mov
xchg
shr
data16
aam
fwait
mov
repz
in
jns
pop
imul
fldcw
push
xchg
dec
sub
inc
fwait
int
adc
in
push
sub
jecxz,pn
xor
ja
cltd
jbe
movsl
and
or
aad
sbb
cmc
out
xor
or
insl
lods
movsb
fcmovnb
sahf
push
icebp
vfrczpd
pop
or
pop
jo
mov
cli
pop
xchg
cmp
stos
xor
jns
jp
mov
addr16
pop
insl
fmull
lock
scas
dec
in
sub
or
aam
lahf
pop
push
rsm
ljmp
cmovl
pop
mov
lods
enter
pop
jbe
jl
mov
mov
call
push
add
jg
xchg
pop
dec
fadds
cmp
das
cmp
mov
inc
jecxz
sub
add
jecxz
adc
outsl
xor
xchg
js
imul
int
xchg
adc
les
sbb
data16
xchg
pop
stc
rolb
and
add
neg
rclb
ja
push
mov
push
lret
jnp
cmp
push
imul
xchg
lods
push
test
or
cmp
fimuls
or
lret
dec
lcall
aaa
in
jmp
call
inc
mov
pop
pop
pop
inc
out
pop
sahf
sub
pop
and
xchg
sub
lcall
xchg
sub
stos
out
jne
inc
or
scas
xchg
out
xchg
mov
daa
testl
leave
aad
sbb
lods
das
sbb
stos
push
cmpsb
jg
jb
add
outsb
rcr
mov
mov
fldt
in
add
adc
std
pushl
adc
jg
cmp
xchg
loop
jmp
and
outsb
popa
xchg
sbb
enter
pop
stc
jo
mov
jns
xor
fs
outsl
out
jns
sbb
aaa
mov
and
or
sub
xchg
jae
or
cmpsb
cli
ret
lds
comiss
and
mov
xchg
ljmp
mov
adc
pop
insb
lret
pop
outsb
dec
sti
dec
mov
jbe
pop
lahf
sub
loopne
and
fwait
es
pop
jecxz
out
subl
xor
sub
pop
xor
sbb
mov
mov
cmpsl
cmp
mov
or
dec
lock
dec
cmp
pop
sbb
loope
or
stos
rolb
jg
add
imul
repz
into
in
adc
bound
jle
pop
cmp
pop
push
inc
test
adc
lea
loopne
stc
jecxz
fcoml
hlt
cmc
jge
repnz
dec
and
call
mov
mov
or
js
mov
ret
out
adc
sbb
jae
fidivs
dec
xor
ljmp
mov
jbe
sub
mov
out
inc
mov
fcomps
int
fnstsw
lret
outsl
into
xchg
fwait
or
nop
sub
add
mov
stc
sbb
push
icebp
jne
or
sub
movsl
pop
inc
cltd
in
setnp
xchg
pushl
mov
iret
mov
mov
mov
aaa
add
xor
fisubrl
jb
scas
addr16
sub
nop
or
sub
sbb
sarb
add
pop
shrl
push
fwait
leave
mov
stos
inc
cli
mov
inc
bound
mov
dec
jg
aam
xchg
sbb
xor
or
lods
shrl
mov
adc
sbb
mov
sti
adc
ds
xor
stos
movsb
outsb
adc
loop
sarb
add
sub
add
adc
das
push
pop
sub
pop
lds
iret
notb
sahf
call
xlat
lock
adc
mov
adc
xlat
dec
icebp
jne
int
test
sub
lret
sbb
jns
ret
repz
fisttpll
jb
xor
push
jne
mov
int
call
xchg
cld
cmp
js
inc
lea
add
movsb
aas
inc
out
std
or
rcrb
iret
xchg
or
and
and
dec
insl
loop
mov
sbb
mov
scas
out
out
adc
jle
rcl
jge
and
movsl
pop
fstpt
push
and
cmp
jbe
and
enter
imul
bound
orl
test
mov
push
and
mov
add
aad
inc
jle
and
in
scas
stos
cmp
dec
out
jmp
cmp
in
mov
bound
popf
sarb
out
popf
adc
in
sbb
pushf
aaa
in
sub
mov
pop
js
push
out
in
repz
fucom
fcomp
adc
adc
fbld
orl
mov
dec
xchg
ljmp
add
or
out
or
cmp
mov
ret
dec
inc
vcvtsi2ssl
es
rolb
mov
xchg
in
cmp
xor
stos
ror
mov
add
cmp
addr16
xchg
mov
inc
jmp
sbb
jb
js
mov
idivb
cmp
fdivs
xor
lcall
imul
mov
cmp
pushw
out
movsl
ret
cmp
sbb
or
cltd
out
and
aam
icebp
popa
imul
lret
fwait
xor
ljmp
mov
push
pop
sub
shlb
xor
cmp
decl
lods
jb
les
out
out
jae
fidivrs
xchg
cld
shl
fdivl
popa
loop
or
lods
aad
mov
aam
mov
add
cld
inc
and
mov
jo
pop
lret
pop
adc
movsl
ljmp
xchg
sub
int
pop
sahf
loope
ds
outsl
leave
mov
dec
lret
adcl
mov
mov
aaa
cmpsl
lods
mov
xchg
mov
cmp
mov
sub
pushw
inc
cmp
xchg
push
mov
fiadds
xlat
hlt
push
das
test
aaa
sbb
lods
pop
fwait
jmp
sub
test
push
ds
mov
sbb
cmp
push
into
mov
and
rcrl
sub
adc
fs
add
xchg
lods
ret
sbb
cwtl
stos
jne
jge
add
aas
cmc
sti
jne
aad
jo
cmp
adc
insb
cmp
mov
dec
mov
inc
cltd
mov
negl
lods
mov
sbb
jp
inc
sub
stos
inc
mov
fiaddl
lret
out
insb
sub
mov
pop
mov
mov
mov
movsb
int3
rcrl
or
filds
push
adc
jp
subl
fisttpll
int3
iret
pop
aas
cmpb
cmp
mov
repnz
cmp
mov
sub
addr16
jno
mov
sbb
pop
add
test
sbb
lods
fdivs
test
js
loop
mov
sbb
sub
lcall
or
repnz
cmp
ret
in
lea
push
xchg
dec
lret
lds
cmpsb
jae
add
test
and
jmp
notl
insb
insb
in
rcll
out
inc
sbbb
sub
xor
sub
mov
aad
popa
leave
popa
jo
xchg
lret
test
movsl
sbb
push
add
loopne
inc
fmull
mov
repnz
pop
jle
cmp
cmp
test
push
sbb
fcmovu
add
dec
or
xchg
imul
fsubr
out
mov
hlt
jae
scas
cli
mov
jmp
jg
popa
xchg
push
adc
push
out
push
aas
movb
repnz
cmp
inc
xchg
scas
xchg
xchg
incl
je
lea
cmc
jg
lock
add
in
inc
lea
movsb
xchg
xchg
mov
mov
add
push
daa
addr16
sbb
lahf
cld
popf
sbbl
mov
in
mov
addb
adc
push
mov
xchg
xchg
rcll
shr
and
cwtl
movsl
or
in
js
int
lcall
outsl
push
mov
sbb
ror
test
xchg
pop
ss
arpl
in
cmp
lock
jle
add
inc
push
shrb
xor
dec
pusha
push
mov
jl
add
xchg
inc
pop
mov
mov
push
mov
jne
incb
mov
pminub
or
iret
fadds
aam
add
mov
fisttps
push
inc
lea
jae
mov
pusha
loope
punpcklwd
mov
mov
inc
dec
ret
cmpsb
mov
shl
lock
or
mov
or
pop
sbb
pop
lret
push
or
test
clc
push
push
das
xchg
cltd
iret
lret
fwait
nop
negl
mov
pop
sbb
mov
test
aaa
adc
jmp
fldl
jle
andl
imul
or
lds
cmp
bound
jmp
dec
xor
fs
sbbb
mov
leave
int3
and
jmp
lods
outsb
inc
adc
sub
mov
jo
cmp
jo
mov
lahf
mov
xchg
inc
shll
inc
dec
in
sbb
cmpsb
out
push
push
push
mov
arpl
movsb
cltd
sbb
inc
lcall
fnstenv
filds
jl
cmp
cvtpi2ps
nop
repnz
addb
mov
fnstsw
and
repz
mov
push
add
data16
xor
ret
nop
mov
xchg
or
inc
movl
and
insl
pushf
adc
loope
das
jge
sub
or
xor
sahf
adc
push
repz
sub
rolb
push
lock
xchg
int
repnz
sub
decl
jl
lret
inc
mov
push
ret
pop
cmp
xor
das
fldl
lds
and
popl
cmp
pop
mov
and
mov
mov
pop
xchg
xchg
jle
popf
insb
mov
add
cmp
into
aas
je
xchg
fwait
xchg
pushf
and
mov
pop
mov
jmp
pop
cmp
test
dec
pop
aaa
repnz
add
pop
mov
int3
jae
ss
mov
mov
push
scas
xlat
jmp
inc
mulps
xchg
mov
jmp
fwait
lret
fistpl
mov
in
call
aas
aam
mov
xor
push
xchg
fcoml
lret
push
mov
inc
jo
mov
popa
pop
jmp
adcl
jb
andl
push
sub
in
bound
sbb
enter
mov
stos
add
cli
das
in
rolb
or
jns
shl
pop
in
sbb
cmp
push
pop
test
cwtl
ljmp
cmp
xor
daa
adc
js
ret
dec
pop
gs
pop
cmp
cli
mov
adcl
xchg
lcall
inc
repnz
pop
sbb
or
enter
mov
pop
data16
sbb
std
cltd
lret
lock
sbb
push
insb
dec
inc
movd
arpl
push
cmp
movl
xchg
inc
cld
sub
out
mov
sub
dec
and
dec
push
sbb
sbb
stos
add
pop
punpcklwd
das
push
mov
jg
xchg
xor
dec
xchg
rolb
sub
dec
jno
movsl
not
pop
fiadds
repz
nop
fisttpl
lret
xor
adc
jp
ret
popa
mov
jns
hlt
mov
sti
sbb
jno
push
jnp
cs
jl
mov
pusha
into
jb
or
push
shll
mov
sub
aas
add
in
data16
xor
stos
push
inc
fyl2x
inc
dec
cmpsl
mov
out
imulb
xor
adc
mov
fbld
xorb
jnp
and
lret
out
adc
push
push
dec
mov
insl
dec
imul
jmp
mov
test
aaa
sahf
gs
movl
jae
ret
pop
jge
mov
jb
out
and
push
push
mov
mov
mov
int
jb
lds
data16
scas
add
rcll
das
and
hlt
mov
ds
repz
into
dec
jne
adc
loope
add
mov
inc
ret
sbb
jle
add
adc
adc
loop
push
push
fistl
mov
mov
mov
insb
cmp
xchg
inc
dec
das
add
es
loopne
lock
and
lock
pop
daa
and
js
mov
lds
jmp
mov
daa
dec
shrb
mov
mov
bound
les
dec
push
outsb
or
pop
add
andb
jbe
int
popa
mov
and
adc
ja
xchg
push
inc
or
test
es
jp
gs
pushf
jns
xchg
scas
pop
imul
sbb
pop
pop
mov
pop
popf
mov
pop
pop
xor
shrb
push
jnp
test
push
sub
popa
xchg
dec
in
insb
push
out
push
jle
push
mov
xchg
mov
aas
dec
jp
xchg
jle
cs
fs
xchg
inc
jo
or
imul
sahf
cmp
pop
dec
lret
loopne
mov
test
and
shl
shrl
push
fadds
inc
mov
mov
cwtl
imul
loopne
cmp
pop
mov
cmpsb
fisubrl
in
push
int3
ljmp
jne
test
fwait
and
xor
mov
daa
int
into
mov
xchg
aas
imul
pop
leave
push
add
fcmovnb
jbe
icebp
push
mov
mov
imul
add
pop
ds
shl
sub
mov
into
in
aas
mov
subl
mov
pop
dec
adc
lods
sub
dec
repnz
les
in
jmp
lds
mov
arpl
pushf
pusha
push
scas
fwait
cli
xchg
fidivl
into
cmp
or
addr16
ss
fdivr
out
sbb
cmp
xchg
or
fnstenv
loopne
pop
lret
jnp
mov
xchg
cmp
pushf
icebp
xorl
gs
sub
mov
mov
and
cmp
imul
lahf
cwtl
pop
sub
pop
dec
mov
inc
movsb
xor
lret
mov
lret
and
add
inc
push
mov
push
rclb
popa
xchg
ds
or
xchg
sbb
lret
out
addl
xchg
inc
mov
ds
shll
cmp
enter
in
mov
pushf
xor
mov
jmp
cmp
es
dec
sti
pop
add
insl
into
mov
sub
mov
or
vfrczps
das
shrb
inc
movsb
gs
aaa
push
filds
and
mov
or
in
push
push
les
pop
adc
jb
add
jb
lods
sti
fstpt
xor
pop
push
xor
mov
scas
out
sub
lret
xor
xor
pusha
or
sbb
addr16
inc
and
xchg
jno
jge
imull
insl
aad
sub
gs
mov
lock
and
out
notb
movsl
pusha
addr16
lds
cmp
jb
lea
dec
cmp
loopne
cmp
out
inc
mov
pop
movsl
cwtl
mov
mov
shrb
jb
xchg
pop
push
push
add
test
pop
mov
imul
icebp
pop
mov
cli
and
movsb
test
adc
adc
xchg
xor
iret
xchg
and
movsl
out
mov
jle
push
test
xchg
jmp
es
mov
jb
mov
sbb
incb
and
out
mov
mov
jbe
add
dec
jno
push
xor
inc
int3
imul
filds
xor
test
mov
pop
inc
dec
add
rclb
pop
les
scas
sbb
mov
pop
dec
dec
ret
mov
das
xor
lret
sbb
mov
xor
mov
lret
inc
movsl
test
adc
pop
add
jecxz
or
mov
lods
fimuls
mov
push
mov
dec
xchg
lock
insb
sahf
icebp
shll
aam
xchg
popf
mov
push
cmpsb
inc
pop
das
or
adc
and
mov
inc
jp
andb
push
stos
ss
jmp
mov
push
and
pusha
and
jmp
fsub
dec
add
out
or
xorb
mov
sar
mov
lcall
pop
fwait
outsl
add
pop
sub
pusha
dec
lret
mov
mov
icebp
jno
cmp
pop
jns
loop
sub
mov
outsb
lods
repnz
js
sub
add
scas
mov
subb
xchg
imul
add
cmpsb
fwait
inc
cmc
iret
and
pusha
mov
fldenv
sub
pop
test
inc
into
rol
iret
data16
pop
jae
stos
jo
test
divl
les
xchg
mov
jl
pop
cmp
leave
sbb
out
dec
xchg
push
push
test
mov
cmp
push
jp
lods
or
push
adc
arpl
mov
adc
and
sar
lret
lock
xor
loop
cmpsb
inc
inc
imul
sbbl
fsts
lret
lock
and
xlat
mov
sbb
inc
ja
pop
xchg
adc
rcll
roll
push
lods
or
push
in
inc
sahf
sti
fbld
mov
mov
scas
mov
add
addr16
stos
repnz
sub
pop
mov
dec
add
sub
loop
sub
jge
int
pop
cmpsb
mov
sbb
movsb
repz
ficoms
inc
pushf
subb
xchg
push
lahf
jb
sub
inc
sbb
sbb
stos
and
movsb
daa
push
or
rep
jo
xchg
pop
push
and
push
mov
xchg
jb
mov
lods
clc
or
push
hlt
inc
test
sbb
clc
stos
mov
or
dec
fnstsw
rorl
outsl
sub
push
loop
adc
add
sub
daa
pop
cmp
push
xrelease
add
aas
testl
pusha
mov
hlt
push
jecxz
inc
jb
popf
sbbl
pop
frstor
push
dec
ret
mov
dec
or
rorb
adc
fs
fs
sahf
xor
stos
and
enter
out
adc
nop
cltd
ja
xchg
fdivs
add
lea
cmpsb
mov
jbe
push
outsl
or
xchg
inc
lea
add
mov
pusha
xlat
add
out
iret
or
push
imul
sub
repz
push
fs
xor
dec
xchg
mov
or
push
ficompl
ja
iret
addl
cmpsl
pop
mov
jl
cmp
test
std
push
and
sbb
sbb
dec
clc
ret
mov
jbe
sub
add
or
mov
insb
dec
js
jmp
ljmp
int
and
aaa
es
in
test
push
in
mov
shr
xor
and
fidivrl
mov
aas
mov
xchg
or
enter
xchg
fistl
jmp
mov
adc
jle
stc
inc
dec
sar
nop
pop
add
adc
mov
repnz
adc
add
pushf
stos
xor
mov
sbb
ds
arpl
pop
bound
or
ds
pop
mov
jl
stc
push
mov
rcll
outsb
cmp
imull
test
jae
into
lock
lock
pop
push
cmp
stos
sub
stc
fcmovnu
mov
inc
xor
push
loopne
adc
mov
sbb
sub
or
dec
add
jnp
fdiv
repz
inc
int3
push
jp
into
icebp
nop
cmp
xorb
repnz
fcoms
adc
xor
push
mov
or
es
jp
mov
jb
sub
cmp
scas
addr16
shrl
mov
mov
push
lds
std
lcall
push
sbb
pop
xchg
sbb
icebp
stos
push
das
stc
xor
ret
sbb
js
fs
scas
popl
xlat
test
lcall
or
xchg
pushf
add
jecxz
or
pop
mov
fsubrs
adc
mov
dec
imul
jmp
jecxz
in
adc
aam
xor
pusha
mov
sbb
lret
js
bnd
cltd
outsb
movsl
ja
cmp
sbb
cmpsb
rep
fcoml
dec
ficoms
sub
push
add
out
rclb
shl
pop
cli
into
xor
sahf
lahf
mov
sbb
movsl
es
sbb
test
sbb
aas
rol
and
sub
adc
push
inc
test
out
mov
in
jae
pushf
xchg
cmp
sub
or
imul
push
adcb
and
pop
into
xor
or
andb
mov
cs
hlt
push
idivb
mov
mov
loope
fildl
out
imul
lret
sbb
imul
add
ret
xchg
repnz
in
add
dec
flds
push
push
dec
pushl
push
pop
xchg
or
mov
dec
fsts
movb
cmp
fcoml
jae
sbb
jmp
adc
fistpl
out
adc
sbb
cmpsb
pop
das
sub
in
xchg
repnz
cld
jl
dec
sbb
or
mov
inc
and
in
in
and
pop
sub
dec
cs
out
rcrb
int
insl
or
inc
scas
gs
sbb
pop
and
ret
mov
cld
xlat
xchg
imul
cmp
xlat
or
xor
stos
jb
stc
sbb
sub
rclb
movsb
jbe
sbb
leave
ret
xchg
das
xor
add
insb
das
mov
dec
in
mov
pop
test
xor
sbb
aas
or
jle
imul
pop
iret
fstpl
pop
mov
and
sub
xor
sbb
dec
in
mov
aaa
test
sbb
add
test
js
mov
jnp
xchg
negb
imul
mov
jo
mov
clc
cmpb
lea
jae
imul
test
lcall
cs
repnz
je
flds
lds
movsl
jnp
cmp
cmp
dec
xorl
into
mov
outsb
rcl
int
jbe
pop
pop
data16
jmp
roll
in
jl
sahf
ja
inc
mov
popa
fnstenv
dec
xchg
mov
test
fucomip
inc
das
imul
shll
cmpb
cltd
xchg
pop
out
outsl
or
inc
cmp
mov
mov
lcall
es
rclb
mov
mov
pop
push
cmp
push
outsb
mov
mov
pop
fwait
mov
outsl
mov
sub
xor
lahf
loope
sub
xchg
dec
mov
jmp
fidivrs
daa
xchg
xor
movsl
clc
xchg
rcll
mov
lea
sub
push
push
push
pop
mov
rcll
repz
sbb
mov
cmc
pop
cmp
push
call
mov
or
sbb
cmpsl
adc
aam
repnz
hlt
and
hlt
mov
andb
mov
js
xor
js
lret
mov
stos
or
sbb
xor
dec
mov
lret
daa
xchg
cmp
ss
inc
rorb
adc
add
xchg
int3
insb
inc
shlb
pop
jp
mov
and
push
lret
mov
das
fisttps
out
push
push
pcmpgtd
mov
sbb
mov
and
out
fwait
push
loope
in
imul
sti
jo
xor
xor
insl
and
in
mov
in
mov
ret
inc
push
clc
fdivl
xlat
movsl
mov
sub
or
out
cmp
pushf
adc
cmp
jne
ja
mov
push
stos
dec
aas
shr
and
pushf
xchg
pop
or
xor
jo
push
sahf
adc
cmp
inc
je
mov
jbe
in
int
push
dec
push
or
xchg
dec
jns
pop
dec
fmull
test
clc
lods
adc
dec
or
loope
mov
rcrb
inc
mov
cmp
adc
or
stos
cld
shll
jnp
shll
xchg
or
lods
mov
and
pop
jge
jecxz
add
push
xchg
xchg
cs
mov
jg
ljmp
lods
jle
ret
adc
test
out
adc
lock
cmc
jae
lcall
adc
adc
jecxz
xchg
jbe
sbb
and
outsb
fbstp
or
jo
shrb
daa
pop
nop
shrb
xchg
and
in
lahf
pop
fsub
je
push
lea
fcmovne
rcl
daa
adc
cmp
repnz
jb
fstpt
push
add
sub
test
xchg
xchg
fstps
jb
stc
cmc
and
jg
lods
sub
mov
add
insl
mov
mov
inc
xchg
out
and
repz
stos
inc
and
loopne
or
andl
and
rcrl
iret
dec
xor
call
mov
dec
negb
movsl
jo
adc
push
mov
shl
out
mov
mov
push
mov
aam
or
ds
jecxz
or
aaa
ds
hlt
cli
pop
pop
pop
push
jae
cmp
push
sub
sbbl
inc
jae
mov
sub
dec
lds
and
dec
push
ret
or
push
and
std
xor
fmuls
lds
inc
mov
mov
push
call
xor
jb
int3
mov
imulb
es
and
insl
test
mov
outsl
and
popa
call
jbe
fs
mov
dec
or
gs
lea
jne
push
push
stc
rcl
pop
pop
mov
dec
sahf
in
hlt
jge
orw
lds
mov
add
jle
xchg
int3
lret
pushf
je
dec
sti
or
test
mov
fs
fdivrl
aaa
cmp
pop
sarb
arpl
mov
dec
jno
mov
jp
mov
sub
add
jl
ficomps
stos
jns
scas
mov
aaa
fidivrl
out
add
sbb
and
loopne
dec
es
or
mov
adc
test
cld
cltd
insb
mov
adc
dec
mov
mov
outsb
adcb
daa
xor
imul
inc
push
stc
adc
imul
scas
mov
jg
aaa
inc
lods
sbb
jle
xchg
xor
cmp
mov
ret
cli
lret
cmp
mov
stos
cmp
imul
jb
and
cmpsb
fcompl
hlt
cmp
in
jnp
cltd
sub
jo
fsubrs
and
push
loope
or
mov
dec
xor
test
push
dec
xchg
sub
sarb
decb
fistpll
sbb
aam
sbb
dec
pop
rclb
insb
pop
cltd
outsb
jne
xchg
rolb
pop
adcl
int3
or
aaa
jecxz
int
pop
xlat
fisubrl
xchg
xchg
adc
cmpsl
sub
dec
add
xor
cld
inc
dec
ss
aas
jp
xor
loopne
adc
mov
fidivs
pop
lcall
mov
enter
cmp
int
inc
lock
xchg
shrb
test
subb
adc
ja
sbb
loopne
in
mov
inc
adc
sub
cmp
xchg
adc
rol
add
xor
loop
lret
push
jecxz
adc
repz
or
add
insb
pop
push
out
stos
and
lahf
js
mov
push
clc
push
xor
mov
pop
jg
sub
mov
push
or
push
mov
gs
xor
int
push
mov
ljmp
aad
sbb
lret
mov
push
xchg
push
dec
lret
sub
add
rol
lcall
adc
leave
cmp
pop
cmovge
fdivs
sbb
adc
jg
std
mov
std
es
test
xchg
cmp
xorb
adc
sub
leave
adc
int
and
insb
lds
or
fdiv
sahf
scas
popf
adc
add
outsl
cmc
push
or
push
mov
call
in
stc
fldt
inc
stos
pop
into
cmp
rcl
dec
out
js
inc
decb
xchg
sbb
bound
or
sbb
jecxz
dec
pop
sbb
add
dec
cltd
pop
add
shlb
push
push
xchg
andl
mov
bound
out
sub
lods
xor
mov
lock
int3
outsb
hlt
mov
cmpb
hlt
mov
and
scas
dec
lock
mov
adc
xchg
rcll
fidivs
push
inc
dec
js
xchg
adc
adc
jmp
mov
sbbl
pop
dec
test
xchg
mov
push
push
mov
out
or
or
inc
stos
je
pop
push
xor
cmp
cmpsl
ljmp
and
testl
push
pop
mov
pop
cld
outsl
cmp
psrad
scas
dec
mov
test
cmc
mov
popf
repz
ficompl
arpl
lea
mov
ja
loop
or
scas
mov
jp
cli
jle
add
xchg
sub
sbb
adc
or
lods
movups
xor
pop
push
pop
stos
ret
inc
lea
xchg
mov
or
aad
imul
icebp
sbb
scas
mov
mov
xchg
adcb
inc
sub
cmc
pop
add
sahf
cmp
sbb
dec
out
push
stos
and
scas
adc
dec
inc
and
xchg
setp
lret
push
arpl
pop
das
pop
sbb
arpl
and
rorl
adc
sbb
outsl
arpl
dec
popl
fs
pop
or
lret
movsb
pop
mov
std
loopne
addr16
ficompl
jg
stos
inc
jle
xchg
mov
orl
cmp
jbe
nop
xlat
add
sub
xchg
aad
mov
adc
inc
fsubr
add
xchg
in
push
cmpl
inc
xor
pop
fisubrs
movsl
les
ficoml
movsl
ds
mov
test
fwait
mov
aas
push
fs
fstpl
xchg
lret
ja
movsl
pop
fbstp
orl
into
cltd
xor
push
sbb
mov
pop
xlat
mov
push
idiv
jo
or
test
mov
mov
jge
fprem1
cmp
adc
and
ret
neg
pop
sbb
mov
leave
xchg
xchg
lock
and
mov
pop
outsl
sub
cmp
jecxz
pusha
andb
lods
outsl
imull
sub
inc
lret
jnp
pop
xor
out
fldenv
lcall
jbe
cmpsb
int3
jbe,pn
sbb
push
rclb
mov
lcall
push
xchg
xor
mov
adc
add
sbb
inc
rcrl
pop
icebp
push
sub
andl
pop
pop
push
rclb
std
sbb
xor
out
lods
in
inc
pop
cmpsb
cmpsb
push
sti
push
mov
or
hlt
dec
xor
or
dec
cmpsb
loop
popf
imul
mov
jecxz
lahf
dec
dec
aas
and
fldl
ret
fcoml
mov
mov
ret
xor
adcl
cli
add
jg
add
lret
xchg
lret
shlb
scas
cmc
xlat
sub
loope
bound
mov
jae
sub
in
into
push
dec
movb
cmc
out
jmp
cmp
jp
mov
jb
fiadds
repz
xchg
pop
divb
int
push
stos
dec
in
xor
pop
arpl
outsl
adc
inc
or
xchg
mov
or
push
shrl
xor
xor
push
cmp
xorl
inc
mov
mov
dec
cwtl
cwtl
out
lods
in
js
lret
jmp
push
fstl
ret
push
xor
push
scas
and
cli
pushf
popa
ret
cmp
dec
es
xchg
lea
mov
aad
adc
ret
jl
out
lods
cwtl
ja
into
mov
imul
je
loope
and
sub
mov
cmp
dec
mov
add
xor
lcall
clc
sbb
and
mov
sbb
xor
sbb
fmull
int
pop
outsb
sbb
cmp
mov
push
push
inc
popa
les
enter
sti
repz
sub
das
jmp
cmp
imul
mov
aam
roll
lock
mov
stc
es
mov
pop
cld
popa
bound
cld
iret
ficoml
jns
push
mov
pop
pop
sub
enter
das
or
mov
shlb
xchg
or
subb
cmpsl
mov
sub
popf
jmp
sbb
mov
repz
adcl
inc
popf
pop
push
mov
jno
or
mov
add
fildl
lods
sti
cld
push
add
dec
mov
ds
enter
cld
lods
hlt
icebp
repnz
stos
push
xchg
jae
divb
cmc
xor
sahf
add
scas
fbld
sbb
mov
int3
ret
push
cs
add
pop
not
in
jae
lret
inc
xor
fabs
test
fisubl
dec
ficomps
jbe
fnstenv
dec
test
cmp
adc
cmpsb
repnz
mov
mov
adc
das
xchg
loop
ret
or
mov
fs
icebp
cmpsb
aas
stos
cmp
adc
xor
push
shlb
shr
jmp
test
mov
enter
in
xor
and
dec
inc
ljmp
xchg
sbb
sti
frstor
out
daa
lea
adc
add
xchg
lea
aad
mov
adc
xor
mov
gs
arpl
hlt
cmpsb
mov
out
out
pusha
ljmp
loopne
jl
stos
and
fwait
jne
add
fcomps
imul
in
inc
les
outsl
hlt
cwtl
aad
xchg
xor
or
out
push
add
push
push
mov
in
sbb
lahf
iret
gs
test
div
stos
lods
mov
and
cmp
push
push
xor
test
cwtl
and
mov
cmpsb
scas
sub
xlat
inc
push
pop
xlat
and
inc
pop
movsb
movsb
lea
mov
fwait
outsl
jae
add
mov
subl
sub
jbe
pop
sub
je
and
fistpll
lahf
in
or
mov
clc
add
fisttpl
shrb
movsb
push
add
dec
fisttpll
add
aam
mov
mov
in
loopne
xchg
push
mov
adc
repnz
adc
pop
mov
js
push
adc
repz
addr16
or
mov
in
and
dec
push
pusha
pop
mov
jo
pop
jne
roll
dec
in
and
inc
fs
adc
and
jle
adc
mov
arpl
dec
mov
ret
aam
mov
imul
enter
les
push
mov
pop
loop
out
imul
enter
push
aaa
jg
lcall
and
divb
push
jo
push
cltd
mov
jns
jns
add
out
stos
rcrl
pop
lret
cmc
lcall
idiv
cmp
adc
gs
jbe
rcl
push
adc
insl
idivb
push
xor
ds
add
cmpsl
in
fs
cmp
fisttpl
imul
jmp
or
push
sub
inc
ja
inc
and
movsb
mov
mov
stos
push
sub
adc
loop
push
push
hlt
popf
mov
cmp
and
enter
jno
push
aam
cld
add
insl
or
pop
cld
out
jp
cld
lea
cs
movsb
add
cmpsl
sub
popa
mov
push
loop
jno
cli
out
ficoms
iret
jl
pop
in
mov
xor
addr16
lcall
ret
lods
rcr
arpl
mov
adc
and
mulb
dec
es
jbe
pushf
loope
insb
std
test
mov
xchg
leave
jo
pop
lret
sbb
in
leave
pop
sbb
lret
out
aaa
xor
fwait
inc
loop
push
sahf
xor
rorb
testl
sub
mov
xchg
pop
mov
fisubrs
xor
xlat
mov
or
lock
adc
add
xor
push
roll
hlt
scas
add
scas
int
push
jnp
setbe
test
outsl
insl
add
std
inc
das
jmp
loop
fisttpl
lods
mov
in
sbb
repnz
pushf
lret
cmp
xor
pop
ret
push
aam
adc
fdivrl
adc
ret
sub
dec
and
in
adc
popa
xchg
inc
ss
jo
lock
ret
jbe
mov
adc
addr16
fstp
push
out
jl
js
insb
call
arpl
and
cli
push
imull
mov
push
shll
sti
add
in
popa
repnz
insb
mov
xchg
jp
cli
mov
mov
imul
mov
cli
xchg
repz
sbb
movsb
clc
jnp
iret
leave
dec
jo
test
mov
andb
in
jns
mov
xchg
inc
cmpb
pusha
dec
das
push
dec
lret
js
mov
inc
mov
lret
mov
push
cmp
clc
mov
xlat
ret
lock
mov
pop
add
lret
ss
xchg
cld
bound
lahf
adc
shlb
rclb
dec
test
or
sbb
out
sbb
adc
mov
sbb
mov
repnz
enter
xchg
mov
sub
xchg
lret
inc
jmp
jl,pn
fidivrs
decl
pop
cmpsl
lahf
fnstenv
cmp
call
lahf
cmp
xchg
or
lods
xorb
dec
mov
stos
stos
movsb
test
jns
sub
mov
aad
adcb
into
jne
test
insl
lods
jae
js
push
inc
scas
out
andb
sbb
sbb
nop
and
and
or
into
jp
repz
hlt
shlb
and
fwait
out
mov
test
xchg
arpl
cmp
sub
and
jno
std
pop
je
xchg
jmp
jo
dec
inc
mov
xor
pop
sub
jmp
mov
inc
dec
inc
stos
nop
mov
pop
adc
mov
adc
daa
repnz
mov
sub
pop
repnz
mov
frstor
mov
shlb
ret
negb
sti
dec
ss
adc
gs
cmp
enter
mov
leave
mov
xor
jmp
fldt
test
dec
inc
xor
std
pop
xchg
mov
ret
push
sbb
inc
push
outsl
sub
leave
pop
mov
add
push
push
inc
xchg
arpl
shr
and
inc
add
std
arpl
inc
notb
pop
pop
mov
mov
inc
das
cmpsb
mov
xor
sbb
rorb
and
lret
cli
mov
stos
pop
xchg
xchg
push
fiaddl
jge
sub
xchg
xor
shrb
sub
inc
iret
sbb
dec
movsb
add
xchg
pusha
add
jl
mov
movsl
xor
jge
add
cltd
and
cltd
push
push
out
sub
jmp
addr16
sbb
xorl
fdivrs
jns
dec
sub
pop
cs
mov
cmc
clc
jnp
fwait
cli
aas
jae
aad
leave
push
insb
xor
push
cs
inc
testb
mov
pop
idivl
xor
jle
pushf
and
xor
into
mov
push
movsl
ljmp
stos
mov
pushl
sub
push
mov
cmp
sar
cmp
mov
pushf
testb
or
xchg
or
lods
test
mov
pushf
test
pop
fidivl
pop
aas
xlat
sbb
in
mov
push
jnp
inc
jmp
adc
pop
repnz
push
stc
mov
xchg
and
das
push
mov
cli
xchg
std
setle
dec
mov
sub
jg
cld
dec
dec
dec
stos
sub
fscale
fwait
imul
add
inc
cs
or
inc
cmp
xchg
outsl
js
in
call
movsl
rorl
hlt
jae
jmp
mulb
dec
ficoml
adc
or
inc
cmp
jmp
pop
ret
xor
iret
dec
mov
inc
cmp
inc
mov
jecxz
iret
js
out
xor
mov
sbb
inc
inc
loopne
dec
mov
pop
ficompl
sub
adc
sub
cli
icebp
add
nop
fildll
mov
xor
sarb
iret
faddl
inc
fnstcw
fisubrs
test
fdivrl
clc
lods
jae
loop
mov
popf
inc
es
shrl
fisttpll
mov
fistps
mov
or
inc
xor
inc
dec
pop
ljmp
pop
out
insb
js
pushf
push
mov
dec
inc
ljmp
in
mov
cmpsb
and
loop
xchg
add
icebp
es
call
int3
enter
and
lods
mov
push
scas
pop
dec
shr
mov
cmp
pop
cwtl
idivb
adc
xchg
dec
push
fisubrl
jge
fcmovb
fstps
pop
mov
sbb
mov
iret
daa
ds
xor
shlb
dec
jl
mov
in
push
fndisi(8087
push
pusha
aas
push
or
loope
push
ds
push
adc
dec
aad
pop
xlat
inc
aaa
notb
andl
enter
push
aas
pop
inc
xor
imul
inc
push
or
shr
adc
inc
xchg
xchg
sub
shl
jmp
mov
or
jle
ljmp
insl
decb
push
xlat
imul
xchg
lods
mov
jp
push
mov
jecxz
clc
addr16
mov
and
and
push
xchg
jp
loope
enter
stc
ret
lds
rcrb
ret
jns
fistl
shll
xchg
cmp
mul
xchg
xchg
dec
jnp
fisttps
in
jmp
dec
movsl
mov
jmp
mov
and
sbb
mov
push
mov
movsl
shrb
loop
repnz
adc
es
imul
std
cmp
inc
mov
rorb
into
testb
fucomi
adc
insl
mov
cmp
insb
hlt
fucom
xor
das
aam
inc
sbb
xor
xchg
jmp
inc
sbb
mov
fimuls
xor
adc
sub
jae
aaa
push
mov
lcall
jne
lret
xchg
imul
sbb
dec
mov
jle
or
pop
not
add
scas
sub
push
jl
repz
jns
xor
pop
inc
nop
std
inc
xchg
sbb
push
scas
loopne
les
cmpsb
int3
pop
insl
je
adc
mov
aam
jne
movsb
xchg
inc
mov
push
sti
call
mov
incl
mov
fmull
ficoms
mov
lea
insl
push
adc
pop
daa
ficoml
psubd
mov
in
popf
ds
push
shll
mov
jl
dec
cmpsl
sahf
or
xchg
mov
loop
add
xchg
add
dec
pop
mov
xor
push
dec
push
sbb
aad
dec
or
pusha
mul
out
dec
in
shlb
xchg
jmp
and
movsl
scas
add
cwtl
dec
rcr
sti
mov
out
jge
idivl
out
jo
sbb
std
inc
icebp
or
loop
jecxz
lcall
and
pop
aad
or
fmuls
sub
icebp
lods
int3
outsl
js
data16
lret
cmc
sbb
loope
jecxz
xchg
and
pushf
lcall
or
xchg
loope
dec
or
negl
push
roll
daa
push
sub
add
cmp
adc
mov
movsl
rorb
or
add
out
mov
int
lds
roll
push
stos
loopne
adc
cmp
and
das
jmp
sub
cli
sub
inc
leave
pop
cmp
lock
outsb
or
les
das
jecxz
xchg
enter
lds
cmp
lret
dec
jge
mov
mov
aaa
jecxz
xor
out
push
xchg
movsb
adc
stc
adc
mov
mov
xor
rol
push
repz
cmp
neg
leave
jg
sbb
cmc
dec
dec
insb
fimull
sbb
add
mov
test
cvtdq2ps
movsb
cmp
test
jle
inc
js
and
outsb
sbb
sar
pop
or
cmp
addr16
jge
das
dec
ret
bound
testb
cmp
sub
mov
mov
mov
push
test
or
ds
xor
les
out
je
jg
dec
fisubs
call
pop
cltd
sbb
push
xchg
cltd
inc
pusha
arpl
dec
fdivl
scas
jno
cltd
jl
test
adc
ficompl
jg
push
sub
lods
jp
jmp
pop
mov
mov
out
sbb
fcomp
inc
sarb
mov
mov
jg
mov
js
mov
filds
in
cmpsl
hlt
daa
lahf
mov
push
xorl
aam
les
lret
popf
push
aas
xchg
fisubl
out
scas
stos
test
mov
mov
ja
stos
adc
ja
clc
popf
pushf
fst
scas
movl
xchg
decb
das
shll
inc
jmp
pop
jb
jns
int
fistl
loope
inc
cmp
leave
mov
add
adc
insl
mov
fimull
fwait
lods
aaa
stos
dec
mov
or
divb
adc
fdivs
popa
mov
lods
testb
pop
shlb
cmc
push
and
push
in
in
or
cmp
loop
dec
and
aaa
sbb
adc
fisubl
pushf
sub
popf
data16
fcoms
iret
mov
push
loopne
fbld
inc
out
sti
mov
ja
aad
cmp
cmc
sbb
adc
mov
nop
mov
sahf
popf
push
mov
xchg
bound
imul
mov
sti
push
pop
mov
push
nop
sub
cld
loope
into
les
cmp
and
mov
sub
jns
or
or
cmp
pop
stos
flds
and
andb
cld
mov
scas
rorb
cld
aas
stos
lahf
int
jbe
jae
jle
out
mov
cmpsb
push
xchg
pop
push
roll
push
jns
inc
add
subb
aaa
or
call
jae
jp
inc
inc
icebp
jno
lret
popa
dec
iret
adc
xchg
jmp
push
ret
sub
dec
std
insl
dec
gs
aam
push
std
es
outsb
popa
sub
sub
mov
fldt
mov
lret
call
pop
shlb
push
xchg
jbe
scas
icebp
ss
stc
std
ds
sbb
in
or
sub
lock
icebp
stos
jbe
out
jp
loopne
shrb
es
mov
fsubrl
pop
mov
cmp
jp
pop
pop
mov
loop
pop
pop
cmp
loopne
sahf
hlt
outsb
lods
popf
inc
rclb
loop
adc
pop
xor
sbb
pop
movsl
bound
jae
sub
adc
enter
sub
cwtl
xlat
imul
push
pusha
std
jp
fisubrs
cmc
or
push
mov
leave
outsl
pop
pop
iret
inc
sbb
mov
xlat
mov
push
add
cmovns
jbe
mov
aad
rolb
into
mov
repz
dec
aaa
call
and
xor
stos
or
pop
cmp
and
pop
je
repz
sub
in
lahf
fcompl
sbb
pop
outsl
pop
mov
lea
cmpb
negl
stc
sbbl
jne
test
cmp
sbb
xor
pop
cmp
aam
cs
and
add
js
leave
jbe
out
cmp
aad
xchg
mov
sub
jmp
test
xchg
mov
stos
jo
jae
or
mov
jno
imul
sbb
movsb
pop
sub
aas
cmp
das
in
sbb
or
adc
mov
sahf
pushf
sbb
sbb
das
fisttpll
pop
lods
lret
dec
hlt
lea
push
push
mov
imul
arpl
pop
loopne
lods
sbb
or
xchg
frstor
xchg
pop
add
enter
mov
imul
cs
and
int3
xor
daa
sub
add
imull
or
mov
or
sub
jns
dec
lods
push
icebp
dec
vpaddw
xor
lds
adc
orb
dec
sub
cli
adcl
int3
cmp
mov
insl
xchg
push
mov
dec
mov
stc
dec
movsb
push
pop
scas
inc
or
mov
sbb
adc
daa
negb
test
jge
sub
imul
inc
mov
cmp
iret
loop
aaa
adc
mov
mov
jmp
xchg
mov
loope
pop
fwait
xor
frstor
cmpsl
mov
fucom
jo
mov
test
adc
mov
xor
das
push
pop
sbb
sarl
imul
es
and
stos
sub
or
mov
jo
sbb
fwait
pop
outsb
das
sub
mov
dec
or
mov
mov
adcl
mov
sub
adc
subl
icebp
xchg
push
push
fdivl
in
loop
mov
sub
mov
call
loop
call
gs
ds
inc
js
fisttpll
add
add
aaa
sub
and
jge
test
or
orl
loop
es
icebp
dec
sahf
fisubrs
mov
cltd
ss
xchg
call
cmp
nop
gs
imull
or
addr16
sar
mov
mov
xorl
out
and
pop
lds
lods
mov
push
ror
pushf
insl
mov
xchg
inc
jg
je
push
inc
outsb
out
ret
pop
je
adc
vpsrld
pop
jg
arpl
push
lods
jns
jnp
jnp
hlt
mov
mov
pop
jb
movups
les
mov
aam
mov
adc
mov
mov
and
jge
xor
dec
lea
adc
data16
int3
aad
cmpsb
lea
mov
std
outsl
cs
xor
jns
pushf
sbb
fdivs
add
xchg
sbbb
inc
xchg
imul
inc
outsb
mov
inc
mov
jl
jae
sbb
insl
adc
xchg
arpl
mov
es
in
cmpl
and
xchg
pop
or
xlat
mov
and
addr16
fstpt
fmuls
jmp
ret
inc
push
cmp
sub
icebp
lcall
mov
mov
inc
jecxz
jle
jbe
loopne
xchg
mov
in
add
xchg
sub
push
add
shrl
call
inc
iret
lret
shrl
push
loopne
sbb
cmp
fists
aas
insb
fwait
inc
xchg
daa
xchg
cmp
scas
sbb
push
push
subl
rorl
cld
cmpsb
mov
push
aaa
mov
adc
ss
test
sub
in
mov
cmp
pop
jno
or
rcrl
call
sub
xor
adc
dec
mov
pop
out
clc
adc
pop
mov
sub
out
pop
out
xchg
cmpsb
dec
pop
aad
test
cmp
push
lods
jl
addr16
ss
fldt
orl
pop
xchg
fdivr
cli
imul
mov
ljmp
imul
into
dec
fwait
int3
adc
stos
adc
inc
or
outsl
iret
mov
hlt
add
popf
or
scas
fs
outsb
cld
sarl
push
xchg
adc
andl
xchg
xchg
pop
jbe
inc
jae
jns
push
cltd
xchg
popf
adc
jbe
dec
je
push
jge
sbb
stos
mov
rcrl
adc
lods
adc
jae
rorb
js
test
insl
ret
and
fsub
or
repz
and
filds
cmc
sub
push
out
shll
ret
mov
roll
mov
pop
shl
mov
cmc
scas
iret
jl
pop
das
xchg
stos
xor
mov
ljmp
mov
jp
mov
xchg
mov
add
imul
dec
or
and
divl
or
outsl
js
fistl
loopne
lds
mov
aaa
sar
and
inc
int3
aam
sti
add
in
and
jae
or
popa
push
js
mov
imull
xchg
and
jo
cmp
adc
dec
insb
push
sub
mov
xor
and
sub
fwait
roll
lods
rorl
pop
dec
sti
sbb
data16
sub
sub
pop
xchg
or
cmp
jg
push
aad
outsb
sbb
notb
rcrl
fidivs
iret
add
sahf
xor
sbb
sub
dec
fimuls
fsubrs
mov
insl
add
nop
shll
and
insl
sbb
in
aad
dec
nop
push
das
xchg
cltd
fstpt
sbb
sub
pushf
mov
pop
in
xor
aaa
sub
xchg
jp
aaa
imul
adc
xchg
add
gs
daa
push
inc
shl
cmp
scas
orl
enter
pushf
fnstenv
dec
dec
movsb
fcompl
lods
dec
lods
fs
mov
mov
scas
adc
insb
sub
out
adc
inc
xlat
inc
bound
dec
std
lret
mov
pop
cli
mov
mov
jle
ds
mov
mov
fs
shrl
jno
sbb
sbb
aas
dec
pop
dec
xchg
pusha
aas
jae
jmp
cs
jbe
pop
pop
dec
mov
adc
fldl
bound
mov
push
std
add
into
push
mov
xor
aam
adc
repnz
mov
lea
adc
test
add
in
lods
add
or
mov
outsl
dec
sbb
jge
or
inc
aad
sbb
sub
and
shr
int
aad
xchg
sarl
out
cmpsl
repz
repnz
cmp
dec
add
inc
jae
ljmp
cmp
hlt
shlb
es
out
enter
gs
call
int
out
lahf
xchg
js
inc
xchg
push
mov
or
shr
or
jle
add
sub
or
std
ret
and
movsl
pop
nop
dec
inc
inc
notb
leave
mov
subl
lods
adc
xchg
xlat
or
scas
test
push
jge
addr16
mov
insl
ret
shlb
mov
cld
ret
and
cmpb
pop
adc
and
sbb
sbbb
and
iret
sub
dec
cmpl
jae
cld
clc
or
adc
pop
jne
cs
negl
mov
mov
add
jae
mov
xchg
mov
in
sbb
or
into
jg
dec
xor
outsl
add
lods
and
stos
call
test
push
fsubp
bound
inc
in
sbb
pop
sbb
je
jae
std
dec
pop
or
and
or
sub
out
testl
cmp
cmp
js
mov
mov
arpl
pop
icebp
mov
sub
inc
and
flds
dec
cld
sub
pop
mov
daa
xor
mov
lahf
jns
mov
std
dec
std
out
or
and
mov
arpl
inc
test
leave
cwtl
jge
jb
lods
mov
jle
addr16
gs
aam
cmp
jp
or
mov
mov
iret
rcr
popa
rorl
jb
jl
out
dec
dec
popf
pop
xchg
gs
sub
inc
movsb
out
lret
fs
jle
xchg
sub
rorb
cmc
pop
push
mov
pop
mov
mov
fnsave
push
lret
sub
mov
cwtl
push
loopne
jne
dec
push
les
push
enter
fiaddl
and
inc
pop
std
dec
inc
rorl
cwtl
mov
push
and
fimuls
adc
pop
test
fcmovnu
ss
aaa
push
pop
test
ja
popf
mov
cmp
ret
cmp
jmp
cwtl
or
aaa
icebp
mov
inc
repnz
decl
fildll
cmp
pop
mov
repz
sarl
enter
adc
dec
push
leave
adc
push
rorl
add
scas
xchg
lods
add
or
adc
adc
insl
aas
lcall
sti
mov
rolb
iret
add
aas
addb
and
adc
cmp
push
mov
sub
dec
jle
mov
pop
or
or
inc
sbb
div
pop
cmp
jmp
mov
lahf
xor
sub
fdivl
clc
cld
testl
pop
push
mov
adc
pop
out
std
adc
lret
loopne
in
outsl
adcl
or
mov
cmc
lcall
incl
test
insb
mov
ret
pop
cwtl
mov
xchg
xor
xchg
sbb
sti
cli
xchg
cmp
cltd
leave
pushf
shrb
das
jecxz
xchg
pusha
jnp
push
xchg
pushl
or
cmp
fisttpl
loopne
ret
push
cmp
clc
imul
rolb
sub
or
stos
xchg
arpl
jbe
xchg
sub
mov
aas
sbb
adc
and
hlt
push
and
mov
add
neg
scas
js
lods
sbb
jns
nop
aad
fisubrl
adc
sub
dec
adc
aas
nop
arpl
cmpl
lock
sbb
push
ljmp
xor
nop
inc
pushf
lahf
ret
ss
aas
arpl
lds
xor
pushf
xchg
push
addr16
cmpl
mov
cli
xor
sbb
andl
sarb
xchg
ja
sti
sahf
cli
fmulp
shlb
or
mov
pop
adc
jl
ss
std
out
xchg
into
xlat
adc
movsb
in
xchg
aaa
jmp
insl
pop
mov
out
or
mov
in
adc
sbb
or
std
mov
sub
mov
and
or
mov
lret
sbb
inc
mov
sub
loope
sub
aas
xchg
lds
fstp
fwait
ds
adc
hlt
outsb
dec
call
sbb
insl
dec
or
add
jno
adc
je
gs
mov
dec
int3
push
push
movsl
jne
inc
loopne
cld
sbb
movsb
dec
icebp
pop
shr
hlt
and
scas
jbe
push
insl
jg
imul
or
das
push
in
sbb
pop
cwtl
es
fsubl
stos
not
xchg
movsl
mov
ss
add
inc
add
and
js
push
ja
loopne
cli
dec
fsubrl
pusha
and
jae
push
push
out
daa
dec
out
add
jo
sub
sahf
jbe
outsb
xorb
dec
cmpl
push
stos
sub
lcall
jnp
add
mov
inc
enter
pop
jp
nop
pop
shll
mov
das
iret
jg
popf
push
push
xchg
inc
push
loope
repz
push
bound
popf
mov
or
pop
nop
pop
xor
fcmove
mov
mov
push
or
xchg
xchg
in
mov
insl
cltd
iret
cli
cld
or
push
insl
aaa
in
arpl
push
into
xor
lea
or
mov
rcl
xchg
fidivs
xor
xchg
ret
xor
fsubrl
imul
jne
xlat
cmpsl
loop
cmpsb
or
popl
neg
push
dec
add
and
andb
dec
and
insb
mull
add
add
dec
popa
sub
sub
std
mov
xchg
adc
test
pusha
dec
jb
pop
loopne
sub
adc
jno
ss
jge
leave
inc
mov
inc
aam
cmp
out
add
pusha
daa
fistpl
mov
idivb
imul
jecxz
loopne
loop
push
pop
cld
mov
jbe
addl
cmc
inc
mov
std
push
out
fdivrl
ljmp
jb
mov
ja
jmp
mov
mov
or
jle
outsb
mov
add
ss
and
mov
loop
fiaddl
or
incb
adc
mov
cmp
lods
imul
mov
rcrl
dec
pop
stos
sub
movsl
xor
or
and
loopne
and
and
test
outsb
outsl
roll
mov
jg
movsl
cld
sub
mov
sbb
mov
add
xchg
movl
jge
add
rcpps
int3
mov
mov
fistps
cld
cmp
cmpsl
dec
push
int
adc
add
mov
ret
enter
mov
pop
pop
ss
mov
ror
test
dec
and
sub
adc
adc
call
mov
cli
call
aaa
pop
mov
in
fcmovnu
cmp
lret
icebp
xlat
lea
ror
sbb
mov
popf
sbb
faddl
pop
ss
lock
or
cmp
aaa
push
cmc
ja
test
add
je
punpckhbw
dec
jnp
mov
inc
sar
daa
xchg
add
mov
and
cmp
ret
sbb
cmc
addr16
xor
sti
dec
jmp
lcall
jbe
cmp
push
paddsb
fstp
jno
push
and
popa
loopne
cmc
adc
or
shlb
in
pop
test
aam
fldl
cmp
aam
insl
dec
mov
pop
aad
icebp
jp
outsl
xchg
mov
cmp
push
inc
lea
cmpsb
imul
icebp
push
lock
das
or
in
xor
adc
mov
push
cmp
notb
mov
jge
outsl
dec
aam
fsubs
xor
lods
sub
imul
fmuls
push
pop
test
in
ljmp
cmpb
daa
and
cmp
test
jae
sbb
rorl
mov
in
int3
jbe
popa
sbbb
lods
cmp
inc
add
mov
cld
sti
or
stos
inc
in
jge
cmp
adc
icebp
adc
lret
adc
sub
leave
sahf
sub
or
icebp
aas
aas
push
pushf
push
push
movsb
int3
pop
pop
cmp
jbe
ljmp
cmp
lss
daa
jle
scas
pop
xchg
pop
inc
aaa
adc
outsb
mul
adc
loopne
loopne
xchg
pop
pushf
rcrl
sub
out
add
and
dec
push
fs
adc
mov
daa
popa
les
xor
or
testb
jae
mov
pushf
ret
aas
dec
xchg
push
xchg
jle
lret
add
add
out
sbb
push
pop
inc
sbb
cli
inc
mov
push
xor
iret
dec
ss
lods
mov
imul
push
xchg
or
xor
or
xchg
pushf
movsb
pop
gs
or
aad
mov
jecxz
lcall
mov
jo
lds
test
stos
lret
mov
adc
pop
xor
in
mov
aaa
jnp
jle
and
push
push
arpl
popf
imul
data16
cmp
in
rcll
jb
inc
aas
fiaddl
ja
arpl
mov
jno
mov
sub
and
movsb
sub
lock
repnz
or
xor
add
mov
and
cwtl
ja
dec
and
sbb
xor
dec
xchg
idivb
xchg
rolb
out
popa
push
out
and
icebp
outsb
test
mov
jl
test
imull
mov
sbb
cmp
cs
xchg
adc
movsl
fwait
jno
roll
jl
dec
inc
dec
div
iret
add
insl
pop
mov
dec
cmpsl
xchg
aam
push
mov
insb
cmp
pop
pop
sub
mov
flds
lods
jnp
les
loope
scas
out
repnz
adc
movb
cmp
and
dec
aam
daa
lret
out
scas
mov
xor
mov
push
scas
ret
out
xchg
outsb
xorl
mov
lcall
push
mov
jns
mov
fldt
sub
push
xor
push
push
adc
stc
fs
into
and
fimuls
fdivrl
push
sub
push
add
test
xchg
scas
mov
and
jge
cmc
std
pop
ja
cmp
test
adc
testb
call
outsb
push
dec
mov
add
mov
and
cmp
add
xchg
or
mov
repz
loop
scas
pop
pop
inc
test
pop
cmp
mov
sar
sbb
or
adc
jno
decl
ljmp
and
repz
jne
jo
mov
popf
pop
sub
push
repz
outsb
sub
shr
push
xchg
add
xchg
daa
or
subb
enter
cmp
adc
mov
dec
inc
cmp
icebp
xchg
ss
jns
add
imul
leave
imul
mov
lds
pushf
sbb
mov
cmc
mov
mov
aas
lcall
fnstcw
iret
jae
inc
adc
push
jp
aad
and
sahf
xchg
xchg
adc
xchg
sub
out
in
hlt
mov
push
push
add
xchg
pop
adc
push
das
shl
push
add
jmp
mov
sbb
sub
sbb
movsb
lods
loopne
dec
iret
lcall
lods
std
subl
jl
je
mov
dec
sub
aam
mov
aad
pop
cmc
inc
or
and
into
mov
lods
gs
xchg
loope
add
push
cs
subb
fidivrs
test
add
adc
sbb
aad
shll
std
lret
icebp
cwtl
in
jnp
aad
add
mov
mov
dec
jmp
sbbl
in
ffreep
es
pop
js
pusha
push
insl
notl
iret
movb
add
lahf
xchg
mov
adc
mov
pop
gs
cmp
cmc
add
xchg
out
xor
arpl
sub
mov
jp
cmp
mov
inc
jle
dec
push
imul
fldlg2
mov
cmp
out
mov
fsub
popa
sbb
inc
roll
jle
or
xchg
or
jns
adc
dec
adc
aad
jae
xor
out
cmp
cmpl
stos
cmpsl
dec
pusha
sub
je
sub
mov
test
sub
insl
inc
in
shll
push
xchg
cmp
xchg
ljmp
sub
outsl
xchg
mov
pop
lods
outsl
sbb
sub
lcall
shrb
imul
fstpl
xchg
aam
mov
daa
incb
cmp
roll
shr
adc
jl
movsl
pop
sbb
adc
pop
outsb
push
bound
cmpb
add
jnp
cli
fdivr
loopne
jg
push
imul
or
test
xorl
stc
pusha
stos
xchg
mov
pop
mov
sahf
pop
add
shl
sub
push
mul
scas
lock
repnz
sbb
sub
inc
xchg
inc
add
mov
pop
sub
imul
pop
jg
or
add
jns
or
repnz
mov
adc
cmpsb
sbb
test
adc
mov
mov
xor
sub
push
or
or
gs
std
and
sti
push
pop
loop
shll
cmpsl
cltd
test
loope
sarb
mov
jo
mov
add
cwtl
sbb
cmp
imul
sbb
mov
pop
and
and
push
leave
xor
int3
clc
fistpl
mov
inc
sub
sbb
testl
xlat
mov
arpl
les
mov
pop
dec
aaa
adc
xchg
push
inc
cmp
xchg
or
push
lret
ljmp
adc
lret
stos
jne
and
mov
ja
adc
rclb
fcoms
and
push
lcall
ss
sbb
pop
adc
add
inc
dec
and
add
das
xor
and
lds
dec
mov
jne
xor
mov
xor
mov
sub
xor
xor
out
clc
xor
dec
xor
and
leave
cmp
push
xchg
dec
jae
sbb
icebp
cltd
mov
in
mov
inc
test
dec
aas
dec
aad
push
movsb
shr
sbb
in
mov
lock
dec
xchg
mov
mov
imul
movsb
mov
cmpsb
jl
insb
pop
or
mov
leave
pop
cmc
mov
mov
rcrb
imul
std
jmp
jecxz
jg
push
pop
pop
jge
fsubrl
orl
bswap
mov
jb
out
rcll
fcmovnb
pushf
les
adc
std
sub
xchg
enter
pop
aam
js
push
bound
mov
xchg
mov
cmp
popf
jbe
and
shl
push
xor
test
jns
popa
ja
pop
popf
ret
xchg
out
and
test
push
mov
mov
scas
mov
push
sub
es
aaa
lmsw
dec
je
cs
push
ret
fmuls
test
mov
cmpsl
jno
push
jbe
mov
sub
pop
loope
test
jmp
sub
fists
arpl
shlb
xchg
aam
or
or
sti
fs
sbbl
pop
aaa
dec
popf
mov
and
sub
imul
ja
scas
lret
movsl
incb
mov
push
mov
stos
pop
or
xlat
lods
and
cmp
clc
mov
gs
or
mulb
sub
cmpsb
mov
and
fadds
addr16
cld
repz
push
iret
dec
pushf
xor
cmp
jl
mov
imul
ret
cli
mov
and
xchg
aas
stos
nop
out
rcrl
dec
or
sbb
cmpsl
mov
xchg
rolb
lods
fs
sbb
add
fisttps
lret
jns
inc
jb
int3
and
xor
or
in
das
xorb
insb
jne
sbb
movsb
nop
add
xchg
sbbb
or
stc
aad
xchg
hlt
dec
clc
shll
pop
cld
outsb
addl
add
fwait
and
push
scas
fdivs
sbb
test
imul
out
lcall
stc
sbb
xchg
int3
loop
push
add
test
dec
xchg
ss
idivb
mov
int
sbb
pop
mov
ds
dec
pop
xorl
adc
mov
cmp
fcmovnbe
dec
loop
jecxz
inc
xlat
fidivrl
pushf
xor
movsl
ljmp
dec
pop
add
insl
and
out
loope
ss
clc
cmp
movsl
mov
add
sub
jmp
xchg
cmp
dec
sub
aad
jo
std
lret
mov
mov
imul
xchg
lods
jae
lret
mov
int3
lret
and
loop
int
out
fildll
xchg
testb
or
imul
negl
and
lcall
test
rclb
and
pop
fildl
cmp
pop
push
and
test
stc
ficoms
add
leave
mov
xor
into
testb
icebp
cmp
xor
jno
fnstenv
int3
ds
mov
arpl
pop
mov
mov
repz
push
fstpt
or
sbb
mov
add
mov
lods
sub
xchg
mov
and
lret
out
sub
mov
insl
mov
sti
jno
jns
fdivr
mov
xlat
sub
fcmovu
push
adc
push
inc
lea
adc
mov
cmp
and
jle
in
and
je
stc
rol
adc
mov
mov
dec
adc
dec
mov
mov
mov
mov
ret
add
je
pop
lods
mov
or
xorl
fwait
add
int
mov
aaa
or
inc
and
xchg
fisttpl
sbb
jge
shll
fisttpll
lods
in
xchg
iret
pop
push
mov
fmull
mov
ss
jg
jg
mov
dec
mov
rcll
imul
int3
sub
xchg
ficompl
dec
lds
hlt
lret
push
cmpb
inc
lcall
or
and
mov
repz
leave
int3
inc
mov
out
and
fisubs
cmpsb
and
inc
ret
lods
mov
ret
sub
gs
ss
xchg
test
jns
mov
dec
mov
and
mov
xor
add
iret
repz
imul
insl
imul
xor
popf
scas
mov
fwait
dec
push
sbb
mov
jecxz
mov
sbb
ja
fcom
into
xchg
popa
dec
movsl
jb
jno
outsb
jmp
adc
imulb
daa
xor
push
ljmp
mulb
mov
pop
rorl
pop
pop
test
das
mov
sbb
sub
andl
dec
int
xor
into
cmp
scas
int3
xchg
cmp
popf
outsb
cmpsb
xchg
xor
inc
fists
ljmp
outsb
mov
bnd
pop
push
stos
lods
icebp
xor
test
outsb
movsl
mov
rol
popf
cltd
mov
loopne
sbb
xchg
sbb
arpl
sub
pushw
mov
lret
repnz
aad
enter
jns
popf
pop
out
and
xor
bnd
inc
sub
and
icebp
push
and
cmpsl
clc
stos
sti
cmp
out
xchg
mov
adc
in
ljmp
jle
pop
mov
ffree
push
jbe
arpl
cmc
test
dec
jecxz
pop
hlt
in
pop
jge
sahf
sub
jecxz
and
jae
rcrl
ret
pop
cmp
out
xchg
loopne
out
es
movsl
add
jg
or
fcoml
arpl
mov
cmpb
or
or
cmp
jae
jnp
fiadds
mov
cld
jno
push
mov
sub
xchg
add
stos
out
je
mov
mov
cld
push
inc
push
hlt
mov
sub
sub
xor
mov
popf
movsl
sti
icebp
stos
mov
aaa
adc
repnz
lret
loopne
sub
fcoml
insb
les
mov
decl
outsl
xchg
jge
test
inc
dec
std
in
adc
insb
jno
out
xchg
popa
mov
jmp
imul
mov
cmpsb
pop
xor
dec
dec
fsts
stos
xor
mov
xchg
and
ret
jle
sub
mov
cli
and
mov
adc
cmc
imul
sub
aam
inc
es
arpl
std
add
repnz
fwait
clc
push
adc
jo
imul
ja
gs
sub
iret
xor
inc
adc
ret
in
orb
inc
push
mov
repz
repnz
xchg
xchg
push
or
cli
xchg
ret
or
jecxz
lcall
int
scas
and
inc
mov
cmp
test
inc
mov
stos
sub
out
mov
sarb
inc
and
cli
mov
je
lret
nop
adc
ret
das
in
ja
test
pusha
mov
and
sbb
sbb
mov
sub
inc
xchg
mov
xor
je
mov
lock
jnp
test
subl
lret
hlt
pop
or
stc
out
and
or
scas
adc
adc
int3
push
int3
movsb
addr16
test
ret
mov
negb
or
sbb
or
pop
jne
xchg
outsl
mov
sbb
push
scas
xor
mov
or
xchg
xorb
shll
dec
jno
stos
mov
mov
outsb
rcrl
js
insb
sub
jb
add
mov
faddl
xor
es
into
ficompl
inc
and
in
or
cmc
out
xor
cli
ret
or
les
scas
sbb
shrb
jge
sbb
adc
dec
hlt
mov
cmc
pop
leave
push
push
inc
mov
mov
cmp
lcall
inc
mov
jns
aam
push
test
mov
push
data16
fmull
mov
mov
mov
aam
push
push
cs
rorb
aad
adc
mov
iret
out
cld
idivb
xor
ja
int3
mov
cmp
fcomp
xor
clc
ret
or
xchg
mov
cmp
iret
and
and
push
jnp
notb
scas
mov
push
push
lock
push
fdivrs
shll
loop
jl
cltd
inc
mov
dec
loop
jecxz
mov
mov
ja
push
loope
aam
push
notb
lret
push
and
pop
push
push
loopne
stos
leave
dec
mov
in
lods
jmp
jge
lods
push
push
mov
int
clc
adc
xor
pop
gs
sti
loope
clc
mov
fwait
mov
xchg
mov
xchg
sub
test
mov
jbe
jl
sbb
test
sarb
lds
lret
jne
ja
dec
bnd
sub
xchg
dec
sub
adc
xchg
add
call
ja
pop
pop
and
fs
inc
pop
subb
es
sbb
sub
adc
cld
mov
and
iret
int3
shrl
pop
stos
sub
setb
in
sub
inc
fstps
fimuls
sub
push
inc
or
jns
test
cmp
rcr
and
push
mov
pop
inc
call
repz
cwtl
test
add
sub
jmp
adc
jge
cltd
pop
in
shlb
out
test
scas
and
xor
mov
sub
mov
lds
mov
pop
imul
sbb
stc
push
sbb
idivl
sarl
iret
push
icebp
jl
cs
adc
mov
insl
xor
mov
xor
mov
loopne
xchg
add
ja
inc
jae
fiaddl
push
aas
iret
aas
cmp
aad
jns
js
add
mov
xchg
leave
jns
mov
or
and
fldl
sub
mov
cmp
lods
test
sbb
pop
cmp
jmp
and
stc
leave
addr16
cltd
into
pusha
mov
leave
inc
popa
mov
cmpb
push
jne
sbb
insl
imul
jl
mov
pextrw
jle
int3
test
loope
and
out
sbb
insb
inc
xchg
lds
or
data16
adc
test
jl
cmp
daa
adcl
xor
rcll
fsubs
in
sahf
sub
mov
add
cmp
cltd
fcoms
lahf
jge
fadd
mov
cmc
lret
mov
lea
nop
inc
push
mull
daa
pop
imul
and
pusha
negb
mov
loop
pop
fisubl
and
cld
inc
sbb
cs
xchg
xchg
sub
repnz
fists
adcb
mov
orb
in
out
mov
int3
arpl
push
push
es
sbb
mov
push
fimuls
lds
and
inc
pusha
cmp
pop
adc
loopne
fsubp
fnstsw
mov
mov
loop
test
cwtl
fs
dec
arpl
cltd
adc
sub
xor
repz
pop
adc
hlt
es
cmp
lods
add
lods
xor
adc
fstps
push
cmp
clc
cld
aas
add
adc
xor
pop
jmp
aas
xchg
addr16
mov
push
das
into
hlt
out
mov
xchg
dec
xchg
loope
ret
aam
jmp
xchg
adc
rcl
push
loopne
dec
dec
mov
sbb
mov
outsl
push
out
ret
lret
dec
cmpsl
adc
fadd
dec
mov
fdivl
dec
andl
adc
xchg
repz
cmp
mov
loop
test
mov
aam
pushf
push
jmp
push
add
scas
cmpsl
das
cmp
jmp
xor
in
incb
dec
pop
dec
sub
xor
gs
rcll
lcall
jnp
sub
mov
notb
fcoml
xchg
and
mov
dec
and
and
mov
out
dec
ja
or
fwait
cs
mov
pusha
es
sub
xlat
xchg
dec
push
clc
outsb
je
lret
cmp
pop
push
mov
int3
sahf
xchg
orb
loopne
or
or
sti
pop
es
ja
ja
pop
roll
scas
sarb
or
mov
out
mov
cmp
mov
mov
push
pop
xor
mov
sub
das
lea
mov
ss
fdivrs
loopne
cmp
loope
aad
sbb
ret
xchg
hlt
and
xchg
nop
inc
aad
fsubrs
loope
unpckhps
mov
leave
cmp
insl
push
pusha
and
inc
out
jo
lds
and
int
inc
je
ja
lods
mov
lret
sub
sbb
data16
insb
test
leave
flds
mov
xor
push
and
movsl
fisttps
mov
xor
cmp
pop
sub
pop
adcb
in
and
outsb
sub
adc
cld
lahf
pop
outsb
dec
in
out
imul
jbe
inc
adc
into
mov
add
sub
sahf
shll
frstor
divb
mov
repz
push
test
push
loope
pop
les
test
clc
insl
or
sub
ljmp
fwait
cwtl
xchg
aam
test
ret
sbb
sarb
inc
sub
lea
std
ds
push
push
add
jl
sub
js
xchg
loope
into
add
cmp
or
lahf
cmp
into
lret
imul
mov
sbb
cmp
jb
int
mov
daa
movsl
in
or
dec
out
adc
or
adc
add
ret
add
imul
jns
bts
or
or
push
movsb
scas
cmpsl
clc
fwait
dec
rcl
mov
cmp
mov
int
jmp
dec
or
popf
mov
mov
mov
cmpsb
mov
jcxz
sub
cwtl
adc
jnp
inc
loop
mov
xchg
outsb
jle
fidivl
into
add
cmp
mov
enter
mov
ja
ja
inc
push
fwait
push
test
lret
cwtl
imul
mov
sbb
mov
dec
js
adc
lods
mov
out
jle
lcall
arpl
cltd
dec
dec
xchg
leave
std
fnstsw
dec
jmp
push
push
mov
sub
add
sbb
adc
es
push
dec
sbb
cmp
test
sub
call
int
inc
lcall
arpl
stc
and
sub
in
sahf
cmp
out
jecxz
xchg
arpl
mov
push
popf
adc
sub
dec
adc
test
mov
test
push
incl
gs
scas
mov
adc
aad
clc
sub
cmpsl
jae
xchg
jno
pop
push
push
stos
dec
stos
push
ss
mov
xor
jae
adc
sbb
mov
and
mov
sbb
push
pop
icebp
imul
inc
push
loop
and
pop
das
push
ja
inc
addr16
push
outsb
shlb
and
daa
ficompl
bound
jl
push
pop
add
or
jecxz
or
jnp
int3
iret
insl
lock
pushf
jne
lds
lods
xchg
mov
lret
addr16
push
xor
fisubl
in
cmp
push
aas
xor
divb
ds
fstps
or
loope
mov
je
cld
insl
cmp
loopne
xor
xor
jge
cltd
mov
mov
movswl
cmp
mov
jae
push
setns
sti
or
lock
inc
fildl
lahf
mov
lahf
dec
pop
icebp
push
adc
push
clc
shrb
dec
aaa
adc
fcoms
jne
jp
mov
ljmp
dec
jg
popa
sbb
dec
push
adc
and
fdivrp
mov
nop
mov
or
sti
xchg
jo
lods
pop
mov
call
stc
out
sbbb
mov
insl
sbbl
or
inc
xchg
dec
hlt
nop
mov
out
lret
sub
xor
adc
icebp
pop
fiadds
outsl
add
cltd
hlt
popa
xor
scas
sahf
jle
push
adc
sub
in
mov
mov
push
lret
pop
pop
jns
stos
pop
xchg
fildll
mov
mov
int3
jecxz
inc
stos
add
cmp
jno
mov
aam
outsl
xchg
mov
pop
into
mov
xor
adc
mov
scas
xchg
mov
lock
sar
ret
movsl
xor
push
jnp
xor
icebp
pusha
andl
or
sbb
sahf
shlb
sbb
dec
mov
stc
std
or
js
or
ja
xlat
pop
and
inc
and
rcrl
pop
inc
pop
xchg
icebp
cli
sbb
outsb
xchg
ret
aaa
jne
and
add
leave
stos
gs
outsb
pop
sbb
lcall
test
nop
sbb
cmp
ja
dec
ljmp
cld
cmpsl
in
mov
insb
mov
insb
and
mov
cmp
mov
pop
fisubl
je
in
sbb
sbb
pop
mov
mov
cmp
xchg
mov
pop
jmp
push
jo
adc
sbb
pop
jmp
ljmp
xchg
aas
jns
dec
loop
outsb
cli
mov
dec
push
inc
out
rorb
push
testb
mov
inc
mov
leave
adc
adc
popf
into
loopne
adc
ret
pop
rol
negb
xchg
mov
cmc
jnp
pop
imul
sub
shl
out
gs
jmp
negl
lret
stos
je
lods
xor
fwait
xchg
test
pop
call
popf
cmp
mull
call
dec
cmpsb
loop
rcrb
sub
lahf
imull
shrb
ret
xchg
or
sub
dec
in
inc
pop
filds
movsb
mov
xadd
addr16
cmp
adc
ret
popa
out
sbb
adc
pop
in
std
push
cmpsl
mov
xchg
outsb
fs
shl
out
lret
aam
cmp
insb
inc
cmp
mov
or
adcl
inc
jo
mov
add
popf
ss
and
pusha
adc
int3
mov
mov
adc
lret
es
shl
push
sbb
imul
add
mov
popf
stos
fwait
jge
les
loop
sbb
mov
jge
lods
and
cmpsb
lahf
jne
sub
pop
mov
pop
adc
adc
imul
jae
mov
dec
xor
or
jo
jp
imul
sub
pop
scas
sar
mov
push
inc
cmp
popf
lea
divl
mov
inc
mov
int
mov
xlat
xchg
inc
sbb
sub
mov
jmp
lds
ds
inc
imul
popf
xor
outsb
je
mov
dec
inc
data16
or
repnz
jge
jp
inc
sbb
inc
xchg
outsl
add
xchg
xchg
xlat
dec
std
gs
mov
xor
pop
add
mov
arpl
sub
jb
lahf
stos
ss
or
iret
sbb
cli
loope
add
inc
mov
ficompl
or
shl
js
mov
xchg
jg
jne
daa
imul
stos
push
cmp
mov
sbb
out
dec
push
inc
jns
jnp
bswap
mov
insl
mov
lods
ret
stc
leave
and
push
mov
push
cmp
iret
scas
mov
andl
addr16
push
sbb
push
inc
lcall
loopne
mov
mov
mov
les
jne
in
push
xlat
scas
mov
stos
int
jne
xchg
inc
inc
sub
in
jecxz
stos
adc
mov
sub
fs
fwait
mov
xor
sub
mov
xchg
inc
ret
lods
push
sti
scas
lods
repnz
xchg
jne
test
jns
fwait
cltd
dec
cmpsb
xchg
mov
enter
sarl
add
hlt
in
mov
xchg
xor
add
daa
leave
sub
fisttpl
sbb
mov
or
sti
mov
sti
push
pop
cmpsl
int3
dec
out
and
cmc
cmpsb
bound
sbb
mov
jge
out
les
mov
inc
sub
mov
push
cmpsb
push
adc
or
aaa
and
push
insl
idiv
and
lret
aad
cmc
dec
js
loope
mov
xchg
sub
jne
mov
insl
repnz
fnsave
push
fsubl
add
xor
ret
pop
jne
or
movsl
daa
xor
sbb
pushf
jmp
hlt
test
mov
test
and
jge
and
push
in
fstp
shrb
addl
dec
cld
test
mov
out
test
mov
xchg
mov
shrb
sub
shll
inc
mov
popf
mov
repnz
or
mov
push
pop
dec
cmc
sbb
mov
aam
mov
mov
int3
and
push
xchg
push
lsl
lock
mov
cmp
ljmp
cmpb
ds
pop
lcall
cmp
addl
sub
cli
sub
repz
in
sub
mov
popa
out
add
lret
les
pop
mov
lahf
pop
push
and
out
xor
out
adc
and
in
and
fsubrs
std
or
or
in
add
aaa
rcrl
je
pop
dec
std
push
mov
iret
xor
inc
sbb
pop
sub
sbb
mov
mov
push
imul
stos
fists
aas
cmp
mov
mov
ret
jnp
and
dec
pop
mov
imul
scas
scas
movsl
rol
inc
cmp
lea
in
lret
pop
add
sbb
jae
outsb
fs
push
xchg
fwait
leave
js
mov
cmc
movsb
mov
xlat
loop
fldt
xor
sti
ror
pop
nop
push
movsl
adc
sbb
in
jae
je
shrb
sarl
fwait
add
ror
cmp
lods
shll
pop
insb
mov
mov
cltd
repnz
in
sbb
add
xor
scas
test
push
aaa
lds
xor
incl
mov
push
loope
rcll
add
sbb
lahf
stos
pushf
addr16
pop
adc
stos
fnclex
mov
mov
aas
jns
jl
and
xor
lcall
test
add
push
ret
sbb
sar
sbbb
psllw
xchg
push
scas
mov
lahf
imul
push
mov
pop
inc
hlt
shll
shlb
cmp
ljmp
sbb
lods
mov
int3
dec
fmuls
sbb
sub
jp
lods
dec
fcomps
push
sub
jno
push
dec
int3
hlt
dec
test
jl
jge
sub
jecxz
mov
sub
xchg
xchg
jle
xchg
ds
sbb
mov
ficompl
xor
mov
sbb
xor
pop
out
jecxz
leave
hlt
rorb
and
movsl
pop
movsl
imull
adc
cmp
nop
leave
mov
jge
in
jb
arpl
mov
adc
call
sarb
stos
jl
lret
mull
ds
cmp
jb
rcrl
cmpps
inc
fnsetpm(287
pop
lret
mov
xor
iret
mov
aad
lea
ja
and
xlat
inc
xchg
mov
cmp
inc
cmp
loope
pop
arpl
in
dec
xor
xor
orl
or
sbb
cmpl
out
fcmovbe
or
mov
or
bound
bound
test
icebp
in
inc
jecxz
imul
xor
sbb
loope
or
adc
out
shll
emms
xor
lock
mov
sti
outsb
aad
in
xlat
stos
scas
sbb
stc
xchg
shlb
xchg
icebp
cmp
sbb
sbb
cs
jo
fldl
rorl
pop
and
pushf
into
jne
loopne
movsb
push
push
sbb
fwait
jecxz
cmp
dec
pusha
in
mov
cli
imul
add
outsl
mov
dec
jmp
mov
jbe
rorl
mov
mov
subb
out
subl
sbb
dec
nop
in
into
out
jg
lahf
movsl
jae
push
cmp
mov
sbb
jb
and
roll
jae
shl
mov
into
outsb
scas
nopl
orb
xor
repnz
aaa
orb
dec
adc
add
xor
cltd
xor
pop
sahf
ds
or
pop
out
xchg
sbb
call
in
rcr
cltd
push
pop
xchg
js
mov
nop
std
shl
stos
mov
out
les
repz
xor
adc
add
loop
or
data16
outsb
lahf
mov
leave
add
jb
in
ljmp
clc
aaa
pop
push
sbb
add
xchg
adc
shlb
jbe
or
mov
test
push
push
jnp
jno
outsb
xor
mov
xorl
push
jo
sbb
out
add
xor
add
xor
icebp
push
add
das
ficoml
insb
adc
mov
jbe
fidivrl
xor
dec
out
imulb
push
aam
loopne
or
lcall
mov
clc
sbb
jb
inc
fiaddl
inc
lods
ss
in
cs
pop
je
inc
insl
adc
loop
leave
ret
mov
mov
das
sbb
scas
mov
push
nop
mov
sbb
or
sbb
gs
data16
movsb
out
in
push
inc
push
cli
mov
mov
imul
dec
test
sub
inc
jecxz
mov
add
stos
mov
xchg
jmp
test
ja
pusha
xor
pop
jns
xchg
lods
mov
or
repnz
cmp
mov
mov
mov
test
and
out
add
stc
insl
adc
out
mov
cli
jbe
adc
aam
leave
icebp
dec
test
pop
mov
lds
aam
dec
or
push
push
shl
mov
sbb
jnp
or
cmp
jecxz
fstpt
aas
sahf
mov
mov
decb
and
mov
into
sub
adc
aaa
mov
cmp
popa
push
dec
imul
divb
cmp
mov
adc
sbb
in
pop
imul
cmp
lds
fwait
test
movl
jg
xor
lods
cmp
lahf
mov
jbe
aam
loope
adc
lea
out
fidivl
popa
loope,pt
jae
cmp
xchg
pop
icebp
shlb
inc
into
data16
ret
adc
aad
int
clc
xchg
ja
in
lea
mov
mov
test
dec
and
cld
inc
push
mov
imul
stos
movl
xchg
cltd
das
and
and
push
gs
push
cld
or
jle
push
mov
jns
hlt
sbb
int3
xchg
mov
adc
daa
mov
push
insl
mov
nop
nop
loop
jnp
push
and
mov
insl
rcrl
jo
les
dec
pop
add
outsb
leave
inc
out
lock
imul
clc
aas
jle
inc
fdiv
push
dec
dec
mov
movsl
cmpsl
insl
popa
imul
test
fnstcw
fisubl
adc
das
lahf
mov
dec
andl
insl
popf
xor
sbb
adc
or
jmp
addb
mov
pop
mov
mov
push
sub
sub
push
pop
lahf
mov
xchg
push
xchg
xchg
xlat
and
and
out
mov
cmp
cmp
lods
ljmp
sbb
sub
jae
dec
mov
push
enter
dec
inc
xor
mov
xor
pop
test
mov
aas
gs
inc
int
aaa
ja
xlat
fmul
sub
in
shr
dec
je
cwtl
xchg
data16
inc
xor
mov
xchg
aam
pop
test
cmc
inc
inc
fidivl
cld
pop
aam
lcall
or
pop
leave
mov
jge
lret
arpl
cmc
loope
pop
jno
rclb
jecxz
jecxz
xchg
dec
dec
inc
test
dec
or
out
stc
fsubl
mov
xor
movsl
mov
mov
and
adc
jg
fwait
and
movsl
lds
imul
test
dec
mov
js
ret
aad
fwait
push
pop
jb
dec
pushf
out
ss
imul
jl
test
xchg
sub
inc
cmp
push
dec
lea
jecxz
rcl
fimuls
mov
adc
in
sbb
sbbl
inc
jl
sub
adc
pop
inc
or
rolb
dec
jo
fcompl
mov
and
sti
push
jbe
jo
push
sub
mov
cmpsl
data16
addb
shrb
cli
or
aas
cmp
mov
orl
cmp
cmpb
xor
loopne
dec
push
pop
adc
mov
or
push
mov
push
jae
jge
mov
mov
rclb
das
mov
arpl
dec
dec
add
adc
add
data16
lds
or
sub
cmpsl
xor
out
xchg
pop
push
out
push
cli
fxch
pop
clc
je
push
insl
out
sbb
lret
inc
sub
loopne
mov
les
into
inc
lock
insb
pop
inc
pop
out
xchg
add
cmp
mov
pop
ficompl
cmp
push
in
adc
test
adc
dec
cmpsl
test
idivb
mov
enter
jle
cwtl
sub
jmp
or
pop
push
inc
and
scas
sub
test
inc
dec
ljmp
xchg
jns
pop
jmp
xchg
daa
bound
fmuls
jo
in
mov
or
testl
lea
sbb
pop
mov
jge
ds
inc
popf
push
dec
in
sub
dec
pushl
inc
jne
mov
pop
icebp
cld
xor
stos
cwtl
int
mov
jle
ljmp
rcrl
jp
fsubrl
cmc
adc
pop
or
dec
mov
cmp
xchg
fisubrs
xor
test
jmp
iret
dec
mov
movsl
test
repnz
add
cmp
mov
xchg
push
xor
iret
push
lods
fisubs
and
xor
testl
sbbl
inc
mov
gs
cmp
test
aas
mov
shll
ret
cmpsb
inc
scas
inc
or
popa
xor
cmp
dec
push
xor
dec
adc
cmp
xchg
flds
dec
adc
sub
jmp
jmp
inc
mov
push
xchg
fildl
std
pop
ficoml
test
xchg
jecxz
std
dec
adc
pop
fwait
shlb
dec
cmp
mull
ds
pop
out
jl
sub
lock
push
nop
js
outsl
cmp
inc
andb
xchg
mov
sbb
xor
dec
cmp
aad
push
rcrb
fcomps
inc
dec
mov
xchg
add
sub
scas
dec
lret
dec
or
cmp
dec
or
in
mov
call
cwtl
add
fistps
iret
or
aaa
dec
sbb
lret
cmp
out
into
mov
jns
and
pop
push
in
shll
aad
ror
sarl
pusha
xchg
adc
sbb
or
test
xchg
mov
push
or
testl
xor
popa
scas
loop
pop
popf
mov
pushf
sbb
mov
mov
xsha256
cmpsb
xchg
aam
inc
push
adc
mov
dec
ss
lea
push
and
sbb
or
movsl
xchg
dec
push
nop
push
adc
jmp
sub
int
fcomps
lods
or
inc
pop
dec
pusha
mov
and
mov
in
out
jb
push
int
mov
push
jmp
fnstenv
fdivl
insl
xchg
es
xor
pop
push
lods
jae
xor
jns
sub
sub
sub
push
push
lcall
dec
mov
in
sbb
add
mov
jmp
xlat
jmp
adc
xchg
cwtl
mov
sub
nop
out
into
xor
out
push
sti
pop
and
outsl
loopne
sub
add
push
xchg
dec
mov
inc
xchg
aad
pop
sbb
mov
sub
loop
bound
lcall
int3
sti
cltd
pushf
fsub
repnz
jns
arpl
negb
or
scas
ret
bound
adc
and
lods
jmp
inc
mov
subb
fcmovnbe
adc
fdivr
cmp
sahf
push
outsl
hlt
fcmovbe
add
jle
dec
loop
pop
mov
int3
xchg
loop
in
lahf
xchg
jecxz
decl
push
loope
push
jg
inc
dec
ds
push
insl
test
xchg
lods
cmc
fstpt
aas
add
mov
ss
inc
gs
inc
stc
push
ds
pop
sar
xchg
xlat
add
dec
call
test
mov
sbb
dec
add
js
es
insl
jno
lds
xor
dec
adc
jecxz
out
xchg
jns
push
loope
shll
and
pop
mov
pop
inc
sub
or
cmpsl
and
and
pop
xor
loopne
roll
scas
nop
jb
insl
les
je
aam
fmuls
adc
sahf
insl
xchg
and
inc
mov
add
and
test
add
lret
scas
arpl
in
mov
xchg
add
mov
cli
sbb
js
inc
stos
jb
aam
addb
rcrl
lahf
xor
loope
mov
movsb
arpl
les
dec
daa
add
pop
ret
push
and
repnz
or
lret
cmp
mov
mov
sub
test
push
shrb
lcall
inc
dec
dec
and
fs
adc
inc
dec
pop
jo
jbe
sbb
mov
stos
sbb
aas
mov
das
test
and
into
inc
xor
fldl
and
jl
inc
insb
mov
sbb
pop
inc
data16
xchg
cwtl
dec
cmp
in
imul
push
sarb
sarl
pop
mov
ds
mov
bound
xlat
and
mov
jb
mov
movsb
fmull
pop
lods
scas
std
in
repz
push
stc
xchg
sub
dec
cmp
das
icebp
leave
imul
mov
das
test
movsl
std
cmc
fmuls
and
sahf
push
imul
inc
mov
or
jl
fisttpl
sub
leave
and
xor
loopne
or
xchg
sub
pop
xchg
cmp
mov
push
cmp
pop
ret
pushf
push
mov
call
jge
sbb
out
sub
es
push
repnz
stos
lods
jecxz
nop
pop
xchg
cli
jns
stc
dec
imul
sarb
jl
icebp
stos
rcrb
aam
inc
xor
inc
jge
mov
push
add
cmp
sub
mov
in
and
pop
jae
in
inc
mov
mov
adc
pop
xor
and
mov
dec
cmp
je
jmp
xchg
cltd
gs
cmp
push
notb
das
test
out
pop
test
sub
out
sub
xchg
gs
cmc
sti
xchg
jecxz
stos
ljmp
xor
or
push
mov
loopne
sub
movsl
mov
clc
lret
test
inc
xor
sbb
xor
mov
out
je
jnp
xorps
push
adc
or
icebp
stc
cmp
jns
and
push
cli
push
scas
cld
insl
stos
mov
jne
dec
cli
das
mov
call
lds
fcoml
out
fstpt
hlt
adc
mov
fldt
mov
sub
iret
ror
add
aad
pop
stos
jns
adc
cwtl
adc
mov
iret
sti
repnz
outsb
rorb
push
mov
mov
push
call
fidivs
lock
mov
call
inc
sti
mov
subl
and
pop
jmp
sbb
int3
push
jnp
xlat
push
das
out
fxch
popl
shlb
lea
mov
int3
cmpsl
outsb
adc
ror
mov
inc
push
add
mov
orl
out
add
push
mov
mov
sarb
pop
outsb
mov
dec
fs
adc
test
mov
jge
xor
adc
leave
and
add
repz
xchg
mov
fmuls
cli
add
dec
movsb
add
mov
mov
sbb
stos
ret
pushaw
dec
test
xor
xchg
xchg
iret
sbb
adc
dec
and
das
sbb
push
mov
mov
aad
inc
movsl
mov
aad
jae
sub
testl
pop
xor
ja
and
add
jbe
add
mov
mov
imul
mov
xor
xchg
mov
in
scas
cld
cli
fists
pop
cmp
or
xor
cwtl
in
jge
push
ja
adc
mov
add
push
jno
mov
pop
mov
mov
test
lods
and
fucom
cmp
ret
xlat
pushf
inc
js
cmc
in
sti
xchg
mov
xor
inc
pop
and
push
cmovno
ja,pt
scas
arpl
add
repnz
xor
or
movsb
adc
push
fistpll
fdivrl
sti
and
movsb
jbe
lea
inc
push
push
jb
repz
imul
pop
leave
mov
xchg
and
pop
jg
mov
or
test
jecxz
ret
int3
clc
shl
and
jb
mov
cmp
cmp
mov
sub
lret
std
in
gs
movsl
int
mov
mov
shll
push
xchg
into
stos
sub
rol
pop
or
data16
js
lret
jns
cmp
cli
test
add
repnz
jle
jbe
xor
or
arpl
cld
mov
aaa
test
xchg
and
or
jbe
xlat
inc
jo
lods
xchg
mov
push
jl
cli
scas
lods
or
shrb
js
sahf
inc
clc
fs
rol
lea
fwait
test
insl
push
call
aad
pop
out
lcall
xor
inc
xor
or
dec
cmpsl
mov
dec
cld
iret
movsl
ss
sub
cmpsb
pop
jl
ja
js
aas
jb
in
mov
hlt
stc
inc
mov
stos
cs
xchg
fdivrs
outsb
leave
cmp
and
scas
call
test
cwtl
sti
xorl
inc
push
cli
cmp
sbb
xchg
data16
stos
pop
int
add
cwtl
jbe
popw
rcrb
sbb
rorb
jb
sbb
lods
repz
or
pop
xchg
xchg
cmpsl
fadd
mov
and
dec
pop
call
dec
pop
repz
call
push
jno
int3
and
aad
dec
gs
mov
jmp
dec
mov
mov
cli
fcoms
xor
sbb
aad
xor
jmp
add
cmpsl
popf
test
negl
mov
pop
sub
mov
jnp
add
mov
sti
mov
icebp
out
mov
adc
push
and
mov
addl
ficomps
fcoml
and
es
jp
cld
decb
mov
enter
mov
sub
mov
mov
jne
ret
aaa
sub
repnz
and
ljmp
cmp
andb
fnstcw
dec
xchg
push
xlat
pop
sub
jae
out
fldl
add
add
fwait
repnz
cli
and
iret
aam
inc
adc
or
mov
sub
pop
dec
fidivrl
ret
push
or
lds
xor
fsubr
icebp
adc
aaa
jmp
mov
dec
leave
ss
and
jns
filds
repz
sbb
jae
mov
xchg
in
pop
repnz
mov
xor
int3
xor
repz
mov
push
addb
mov
rolb
in
out
xor
cmp
mov
push
sbb
js
add
pop
or
out
push
or
mov
inc
je
sub
mov
adc
test
add
stos
xchg
cs
xlat
push
lods
arpl
outsb
sub
popa
adc
das
push
std
test
and
adc
and
sbb
pop
fiadds
mov
xor
dec
mov
rcll
pop
mov
mov
xor
popf
cmp
sbb
add
pop
ret
sub
push
push
mov
inc
jg
aam
mov
popf
in
cmc
xchg
mov
pop
fst
sahf
sbb
or
or
mov
add
arpl
subl
in
push
ficoml
jb
xlat
filds
stos
fwait
sub
aaa
lcall
pusha
pop
xchg
in
aas
shrb
xor
sbb
sbb
outsb
sbb
cmp
mov
pop
xchg
pushf
test
jae
ror
mov
mov
sbb
sub
repz
and
jns
push
add
daa
stc
lock
cmp
fisubrl
and
push
jo
lea
adc
sbb
pop
lret
sbb
jg
lret
push
lods
push
pop
call
clc
push
cmpsl
mov
xlat
psubsw
int
push
inc
sar
and
mov
into
push
cmc
jge
cmp
scas
mov
sbb
int3
pop
icebp
and
icebp
enter
adc
lods
mov
cmpb
mov
repnz
jne
mull
lret
pop
xchg
xchg
xor
rcrb
ss
outsb
out
rcrl
or
xchg
push
pop
xlat
dec
adc
pop
push
or
mov
cmp
pop
pop
jns
clc
pop
shr
and
jle
xor
iret
mov
nop
std
stc
iret
pushf
sbb
xor
sbb
mov
jmp
mov
stos
dec
les
push
jae
data16
add
xchg
ds
adc
dec
decb
mov
jp
add
sbb
sbb
push
iret
hlt
cld
jecxz
pop
lcall
mov
popf
sbb
add
add
cltd
ljmp
aaa
out
rcrb
cltd
or
test
into
sub
xchg
xchg
stc
pop
roll
dec
lcall
add
iret
inc
push
in
xor
push
jne
or
pop
iret
scas
dec
lods
insb
sub
rorl
mov
jl
mov
jp
cmp
rolb
mov
mov
out
ret
pop
int
xor
outsb
cltd
mov
lods
enter
mov
repnz
fidivrs
xchg
test
xchg
adc
lock
mov
push
and
rcrl
lret
mov
lds
aas
cmp
es
adc
mov
leave
jge
xchg
pusha
popa
daa
adc
pop
pop
adc
je
ds
add
mov
mov
mov
xor
push
or
int
lret
rorl
inc
and
fmull
xchg
icebp
push
pop
pop
sub
push
lea
jno
cs
and
lea
push
sub
enter
cltd
sahf
ret
mov
or
lahf
xor
in
cmp
rolb
sbb
mov
sub
dec
daa
jbe
addr16
pop
dec
pusha
and
xor
pop
jl
int
sarb
jg
inc
jmp
mov
fisubl
or
sub
inc
inc
or
inc
in
loope
mov
adc
cmp
add
cmpsb
jecxz
lcall
xchg
aaa
in
rcr
pop
mov
mov
outsb
rcrl
incb
int
adc
xorb
sbb
in
pusha
or
int
sub
push
lods
inc
lods
jne
imul
jecxz
push
jno
dec
movsl
add
cmc
jle
dec
sbb
stos
add
mov
repz
loope
dec
inc
mov
gs
or
adc
dec
fists
mov
sbb
insl
cwtl
xorl
mov
add
test
loopne
shl
mov
xchg
pop
mov
or
mov
xor
loope
or
pop
mov
loope
lcall
and
lods
sub
out
test
rorb
jo
repnz
ss
dec
fidivrs
bound
orl
mov
sahf
pushf
push
in
mov
out
push
push
imul
push
push
sub
jbe
sbb
imul
ss
mov
add
loopne
imulb
mov
iret
xor
mov
cmp
std
jl
or
out
testl
cmp
and
rcl
push
inc
pop
dec
jne
xchg
movsb
sbb
xor
arpl
dec
xor
mov
push
cmp
in
jb
add
xorl
dec
cmp
aam
mov
adc
mov
fcomps
insl
dec
cmpsl
lds
fstl
int
data16
jge
movsl
lods
xor
and
adc
addb
es
push
push
xlat
cmpl
icebp
hlt
rorl
lret
xchg
jp
pushf
jecxz
int3
ljmp
test
popl
jle
lods
hlt
add
push
mov
push
das
out
out
test
push
add
add
jb
je
daa
jno
sbb
pop
popa
cmp
movsb
scas
jne
cmp
mov
adcb
adc
adc
sbb
mov
mov
imul
cltd
dec
mov
sub
pop
leave
pushf
cmp
in
int3
sub
push
sub
mov
and
es
jae
jp
pushf
lods
dec
lds
mov
cld
sbbl
xor
cltd
mov
mov
pop
fiadds
push
ror
xchg
mov
ja
pop
push
xchg
rcrb
lods
loopne
push
mov
xchg
call
sahf
cmp
jo
mov
xchg
scas
test
push
and
and
xor
fisubs
rorl
pop
add
rcll
fmulp
dec
hlt
pop
sbb
out
rcr
aas
mov
and
sahf
ja
rcll
jmp
push
xlat
inc
xor
imul
outsl
or
jmp
std
pop
pop
push
fisttpll
pop
pop
icebp
lods
push
cli
or
mov
jno
jo
push
mov
test
jg
loope
jbe
push
mov
scas
jb
push
mov
jl
call
pop
add
add
xlat
icebp
adc
xchg
sti
xor
inc
loop
icebp
adc
pop
xacquire
lods
mov
jle
rclb
js
jp
cmp
in
js
xchg
sbb
xor
lods
or
dec
outsb
mov
or
lret
pop
in
mov
mov
cld
sub
out
mov
movsl
mov
shrb
stos
jne
cmpsb
and
push
and
jns
dec
or
clc
stc
push
cld
push
jge
fs
orb
std
orl
adc
inc
cwtl
xor
sub
sub
popa
mov
jbe
add
in
inc
push
cld
cld
repz
mov
xchg
adc
mov
jge
insl
jp
shrl
jecxz
push
fistpll
in
push
mov
dec
nop
push
push
int3
sahf
jle
xchg
mov
repnz
imul
mov
mov
jecxz
test
sbb
inc
cltd
mov
sub
push
nop
push
ffree
lret
fisubl
cmpsb
cmp
xchg
popa
mov
mov
jl
push
in
imul
xchg
jb
in
xchg
inc
pop
pop
mov
lods
lret
or
stos
aam
leave
dec
sti
mov
jecxz
xchg
and
repz
scas
sub
add
push
jmp
in
fcomip
incb
ret
nop
xor
mov
dec
mov
xchg
mov
push
lods
pop
das
into
lods
xor
out
outsl
call
test
mov
cmp
popf
sbb
fdivl
fbstp
decb
ljmp
outsl
jl
cltd
mov
sbb
or
int3
shll
push
aas
xchg
and
sbb
push
imul
jns
lahf
cmp
mov
cmp
aas
test
inc
in
mov
lret
inc
shlb
or
ret
cmp
stos
mov
and
vmwrite
and
iret
inc
sub
mov
cmp
aas
stos
push
rcr
movsb
jbe
mov
adc
push
xor
jmp
push
mov
out
sub
cmp
and
mov
nop
cmpb
pop
mov
das
pushf
push
ret
call
sbb
mov
jp
jns
lods
dec
mov
int3
cmp
outsl
mov
push
int3
mov
jno
test
pop
clc
in
jns
lock
cmpsl
inc
lods
enter
nop
mov
stc
xor
lods
or
fildl
push
xlat
lods
push
and
xor
cs
fsub
xchg
sbb
fcmovnb
lods
data16
fwait
les
cmp
mov
popf
xor
and
add
jl
fstpl
cmovns
or
fidivl
arpl
push
loope
push
stos
insl
cmp
arpl
lds
and
fisttpll
in
push
pushw
clc
repnz
data16
mov
mov
fisubrs
popf
mov
mov
cmp
movsl
cld
loopne
cmp
dec
or
shr
sbb
and
mov
xor
dec
cwtl
cwtl
jge
mov
imul
aam
pop
popa
fstpl
lods
xor
insl
mov
push
cmp
shrl
adcl
repnz
imul
xorb
push
dec
lret
and
lret
pop
push
cmc
push
movsl
mov
mov
das
test
pop
jp
lea
cwtl
cwtl
add
clc
dec
xor
jp
lock
lds
sub
jo
fidivs
mov
sub
mov
mov
daa
pushf
mov
push
iret
mov
stc
mov
pop
jl
shl
ds
insl
les
push
push
cmpsb
push
dec
mov
xor
insb
out
stc
inc
add
mov
addb
add
sbb
add
xlat
jbe
in
out
dec
daa
std
xchg
mov
adc
ljmp
arpl
ljmp
mov
push
fistl
fs
movsl
faddl
lea
les
mov
popf
arpl
dec
dec
cwtl
jno
fdivrs
push
jb
jo
lret
rol
or
cmpsl
insb
cli
stos
add
add
aas
movsl
and
sbb
mov
mov
xor
into
xchg
imul
mov
mov
inc
add
clc
xlat
popa
rcrb
ja
mov
xlat
pop
fcomip
lods
sbb
cmp
in
je
in
fistpll
fstpl
add
xlat
dec
jmp
out
sub
pop
sbb
jge
jae
sarb
in
into
das
mov
adc
ret
mov
or
push
cli
jne
pop
fdivr
adc
push
inc
add
repnz
scas
add
in
out
ljmp
xchg
cld
es
dec
cmp
mov
ljmp
pushf
popa
add
dec
enter
fdivl
mov
sti
xor
arpl
jns
sbb
outsb
and
sbb
jge
adc
mov
int3
mov
jg
dec
int
sbb
je
push
inc
xor
dec
fs
and
pusha
mov
and
les
iret
push
lods
sbb
cwtl
fcomip
xor
ret
in
sub
decb
xchg
cmc
shlb
push
xlat
stos
pop
cmpsb
sub
dec
mov
add
gs
aam
or
ret
outsb
pop
push
aad
jno
push
scas
mov
mov
mov
xor
test
adc
inc
sbb
loop
dec
lret
dec
std
adc
hlt
jmp
xor
sbb
cs
sub
xlat
add
xchg
daa
inc
aaa
push
orl
pushf
movsb
xor
xchg
inc
add
orb
push
stc
pop
inc
mov
push
and
out
cli
ror
jg
insb
inc
dec
test
add
push
je
inc
adc
dec
pop
jp
jecxz
mov
mov
lcall
mov
je
xor
jbe
add
jg
xor
mov
or
jmp
xor
popf
sub
push
mov
out
xor
les
xor
imul
outsb
test
out
inc
or
cli
aam
sub
mov
or
ret
xor
pushf
gs
add
inc
xor
ds
cwtl
xor
shrl
xor
push
std
hlt
jb
mov
sub
add
sub
jno
and
roll
jg
iret
add
dec
repnz
jne
push
int
jo
or
push
not
cmp
cli
jmp
js
jo
jmp
pop
lds
subl
cs
push
ror
je
dec
mov
add
pop
mov
bound
and
sbb
les
test
or
mov
ds
arpl
push
jnp
push
nop
jecxz
dec
in
sarb
or
stc
outsb
insb
scas
push
jecxz
xchg
add
or
clc
fdivrs
outsl
jle
adc
insb
cmpsl
pop
test
leave
mov
insb
xor
or
inc
adc
xor
cmpsl
or
lds
in
mov
js
test
and
xchg
std
or
lock
mov
inc
add
loope
jo
cs
in
xchg
jns
sbb
mov
int
out
add
sub
dec
mov
or
stos
sti
cmpsl
push
push
popf
dec
push
js
or
pop
adc
xchg
mov
fldln2
lods
and
jne,pt
mov
das
in
jo
add
fstpt
inc
loopne
fs
mov
add
pop
popa
dec
sbb
pop
sahf
push
jle
jmp
aam
mov
and
scas
icebp
movsl
sub
xchg
je
sbb
adc
repnz
jne
notb
aam
outsl
cmp
and
fstps
push
scas
sbb
fstpt
call
lcall
adc
mov
mov
xchg
shll
outsl
inc
lcall
in
jb
pop
pop
popf
inc
cmp
and
pop
xchg
lea
ljmp
lahf
adc
out
cmp
imul
mov
test
test
jb
cmp
push
sbb
adc
mov
mov
in
aad
les
ljmp
subb
aad
xor
aas
insb
sahf
shrl
repz
les
dec
pop
jb
push
stos
mov
ror
js
mov
jno
mov
jg
add
in
push
push
mov
orl
push
fldt
in
das
clc
daa
scas
dec
dec
sarb
jg
ret
push
hlt
test
add
sbb
iret
sub
inc
push
pusha
push
mov
mov
dec
inc
movsl
pop
test
mov
enter
adc
adc
ds
add
mov
push
sbb
lret
cmp
rcr
adc
or
das
popf
xchg
icebp
loop
movsl
addr16
fistps
lret
or
jne
pop
sub
cmpl
aaa
insl
inc
sbb
into
cmc
shll
pusha
scas
aaa
push
outsb
xor
repnz
popa
jg
dec
stos
stos
das
sbb
xor
shlb
sub
rcrl
in
fwait
sbb
scas
inc
aas
insb
xor
jmp
fnstcw
xchg
mov
xchg
or
lcall
icebp
test
dec
or
call
cmpsb
incb
cmp
dec
pusha
stc
pop
inc
int3
insb
lcall
fiadds
push
lods
inc
lds
iret
mov
jecxz
jnp
inc
jecxz
fsubr
or
dec
sbb
or
mov
cs
pop
sub
push
mov
inc
aam
pop
sub
test
out
push
xor
pop
jp
dec
mov
lods
es
push
mov
aam
and
pushl
outsb
or
mov
fstps
shll
aad
push
pop
adc
movl
mov
out
nop
dec
mov
fmul
gs
loopne
sub
mov
jl
mov
pop
cwtl
insl
insb
enter
pop
dec
in
push
xor
fbld
imulb
add
dec
lcall
cmp
mov
aam
cmpsl
jno
xor
jl
pop
cmp
jne
int3
popa
add
add
push
sub
loope
arpl
dec
sbb
xchg
test
pop
into
or
in
in
mov
pop
xchg
jg
outsl
sbb
mov
xchg
out
mov
adc
mov
pop
sub
or
decb
mov
push
jecxz
pop
mov
out
fwait
add
fldlg2
aas
in
jp
mov
dec
pop
sub
pop
stc
ja
xchg
cmp
enter
push
dec
lods
shr
inc
dec
sub
mov
hlt
cmp
jecxz
sbb
out
xor
cli
pop
push
xor
add
pand
int3
lea
cmp
sub
add
sbbb
fwait
or
loopne
sbb
xchg
mov
xor
jp
and
fcomi
add
out
scas
mov
sub
insl
cmp
punpcklwd
jae
es
xchg
or
repnz
arpl
popa
scas
adc
inc
loope
sbb
cmpb
loope
shl
push
xor
push
push
inc
mov
jbe
dec
add
push
mov
push
test
pop
neg
push
jo
int
and
xchg
xchg
add
push
push
xchg
fisubrs
xchg
sbb
mov
xchg
in
test
dec
mov
out
lret
and
test
or
dec
fiaddl
test
mov
sbbl
xor
aas
ret
push
or
out
hlt
adc
bound
js
inc
sub
cmp
js
mov
pop
xchg
xchg
or
aam
dec
inc
jb
adc
test
mov
pop
push
fnstenv
mov
jmp
rol
inc
fs
jb
aad
xor
mov
mov
xor
xchg
inc
xor
ud2
xchg
push
nop
xchg
insb
jp
pop
cwtl
in
cwtl
out
icebp
and
rol
fstl
lods
imul
adc
dec
adc
lds
fs
mov
cmp
enter
leave
xchg
sbb
or
xchg
inc
adc
sbb
fisubrs
push
xchg
xchg
cmpsl
add
inc
mov
xchg
scas
jg
cmp
mov
pop
jo
or
push
dec
dec
jb
out
push
push
add
aas
adc
jb
xor
inc
add
cmp
mov
outsb
or
stc
jne
das
cmp
movsb
stos
scas
mov
ljmp
std
addr16
sub
jecxz
mov
mov
inc
aaa
jo
fs
pop
in
xchg
jge
fdivp
push
mov
mov
sbb
add
cmpsl
sub
xchg
mov
ljmp
inc
cld
push
ret
cmc
or
ss
lods
xchg
add
and
fnstenv
push
lods
mov
lcall
std
xchg
jne,pt
mov
push
xacquire
pop
sub
ret
cmp
push
daa
add
stos
shrl
dec
lret
clc
fdivrl
add
push
cwtl
enter
fst
or
lcall
xchg
dec
lahf
nop
sbb
mov
inc
and
push
imul
cwtl
stc
cmpsl
adc
scas
pop
sub
loope
sub
sbb
sbb
cmc
sbb
ss
lahf
arpl
rcll
mov
fs
mov
movsl
arpl
rorl
ror
repnz
outsb
cmp
sub
stc
hlt
imull
mov
sub
fdivl
xchg
or
insl
jbe
or
aad
into
mov
hlt
cmp
sti
inc
in
lock
jp
inc
mov
inc
mov
lods
adc
push
xchg
jb
adcl
sbb
mov
ficoml
frstor
push
out
dec
add
jb
repz
inc
push
lods
out
ja
jne
push
push
cmp
jno
lock
pop
sub
adc
mov
lret
sub
pop
push
ret
int
sub
inc
rcrb
rcll
lret
scas
fwait
mov
cmp
mov
cmp
push
js
loopne
mov
pop
lahf
jnp
movsb
xchg
test
les
movsb
mov
xor
int3
ficoms
dec
cmp
mov
cs
mov
sub
add
pop
adc
rcll
sub
aad
outsb
inc
pop
xor
pop
sub
ja
and
pop
subl
inc
rclb
inc
cs
rorl
mov
dec
jg
pop
sub
sub
cltd
enter
sub
ljmp
jbe
scas
jae
out
mov
outsb
adc
loopne
fcoms
lcall
add
cmp
jmp
outsb
loop
sub
pop
jo
pop
inc
dec
add
xor
xchg
into
int3
and
and
fstl
lods
roll
sub
mov
add
mov
cmpsb
out
notl
jnp
xchg
sub
movsl
sub
fs
mul
hlt
dec
daa
test
push
xor
out
rcrb
dec
cli
shrl
mov
cmp
lret
or
stos
ret
push
push
ljmp
mov
xor
inc
cmp
pop
in
xchg
mov
sahf
cld
dec
mov
out
push
movsb
push
push
cld
mov
and
test
ret
cmp
push
loopne
cmp
out
iret
sub
inc
aad
xchg
sbb
inc
mov
shlb
pop
test
add
push
jno
mov
inc
xchg
mov
dec
movsl
sbb
icebp
cmpsl
dec
popf
mov
test
cmpsl
push
paddusb
dec
repnz
or
bound
push
rolb
xchg
cmpsb
cmpsl
push
inc
sahf
aaa
stc
jle
xor
mov
shll
push
push
cmp
fidivrs
mov
xlat
and
fs
imul
mov
sub
dec
fdivrp
fwait
mov
dec
mov
cmp
mov
fninit
jge
js
jge
repz
nop
loope
inc
psubsb
push
dec
mov
imul
jb
lcall
sahf
mov
jge
imul
cld
jnp
das
fs
sbb
int3
in
and
or
jecxz
mov
orb
xor
arpl
in
shl
and
dec
cmpsb
push
mov
inc
sub
icebp
std
daa
xchg
int3
pop
push
fstl
mov
fmul
rcrl
dec
test
adc
mov
xchg
call
insl
xchg
gs
jp
jo
rcr
cmp
sub
je
call
sti
lods
and
out
lret
aad
into
adc
movsb
je
lock
dec
dec
mov
dec
push
std
xor
and
sub
dec
push
push
mov
not
pop
aaa
incb
cmp
int
mov
mov
aas
jbe
aaa
xchg
jo
adc
scas
pushf
cmc
jge
fwait
sbb
ljmp
out
jno
cmc
into
jnp
and
cmp
dec
or
and
xchg
jns
enter
notl
mov
or
pop
pop
xchg
pop
mov
test
cmp
adc
xor
xchg
sub
in
sti
sub
xor
movsl
inc
std
out
push
movsb
or
xchg
cmp
rorl
mov
mov
xchg
xor
pop
gs
fidivs
int3
cwtl
stos
sbb
fwait
inc
out
sub
dec
push
inc
pushf
and
jmp
testl
fs
push
inc
adc
mov
lods
dec
cmpsl
out
jmp
fcmovb
mov
cmc
icebp
mov
mov
notl
or
pop
push
insl
sbb
sub
into
aad
xchg
sbbb
and
sti
add
stos
fcmovnb
fs
mov
or
imul
out
jmp
and
pop
sbb
dec
sub
dec
roll
jmp
dec
sub
repz
cmpsb
adc
dec
mov
es
xor
rolb
sub
movsl
lcall
adc
hlt
int
pop
mov
adc
fistpl
adc
popf
sbb
fcmovbe
pop
xchg
mov
into
into
leave
std
loop
loop
mov
mov
inc
adc
jg
lock
insb
mov
divb
cwtl
sti
mov
pop
push
shr
add
into
pop
sbb
aas
xor
pop
cmp
sbb
mov
mov
push
add
and
pop
and
data16
mov
jecxz
push
test
push
push
inc
cwtl
push
adcb
in
out
std
pop
push
mov
imul
cmp
std
je
clc
sub
push
push
ret
cmp
nop
jecxz
jne
fsub
fwait
dec
push
sti
arpl
mov
cmc
cmpsl
arpl
cmpsl
enter
jmp
decb
pop
inc
movsb
sbb
cmp
loopne
xchg
jbe
dec
mov
mov
and
xor
push
cld
dec
sbb
inc
sahf
xlat
xchg
ss
daa
in
add
test
pop
mov
adc
sub
out
divb
inc
inc
cmp
call
xor
push
mov
aaa
xchg
sub
inc
pop
sub
push
test
cli
call
insl
and
sti
ficompl
pop
pop
xor
lock
out
shlb
lods
sbb
testl
xchg
pop
jne
sbb
or
push
in
add
ret
or
in
pushf
sub
daa
xchg
sbb
add
cmp
sub
lret
or
stc
cmpsl
xchg
cmpsb
dec
xchg
push
sub
jmp
push
ja
sub
decl
jge
xor
inc
ds
ret
repnz
mov
mov
push
enter
call
jb
mov
and
pushf
inc
sbb
cmp
inc
les
pop
rorl
push
xchg
into
in
sbb
and
pop
mov
rcrb
pop
xor
rcl
adc
mov
mov
addb
aad
and
out
xchg
icebp
popf
adc
rcrb
pop
inc
jns
pop
or
push
xor
sub
pusha
outsl
mov
out
lahf
dec
xor
cs
xchg
or
mov
repz
pusha
sub
inc
jg
push
fs
jle
leave
iret
shll
inc
adc
jp
sub
out
gs
scas
cmp
xor
arpl
ret
test
loopne
jl
add
das
mov
lahf
lcall
adc
pushf
mov
int3
pop
mov
clc
xchg
xor
jae
dec
jecxz
andb
inc
mov
sub
sbb
pop
aad
pushf
jecxz
inc
sbb
push
stc
jmp
and
nop
and
mov
xor
jbe
lods
cmp
fdivl
cmpsb
add
xor
cmpl
ret
divb
add
push
push
or
rolb
sahf
lds
xor
or
mov
xor
dec
or
adcb
jae
cli
sbb
pop
pushf
sbb
jno
nop
mov
leavew
pop
test
xlat
arpl
cmp
arpl
inc
mov
push
adc
repnz
addr16
xchg
fucomip
bnd
mov
jnp
stc
mov
pop
xchg
repz
dec
enter
test
lods
xchg
testb
dec
enter
out
push
push
mov
mov
sbb
std
fisttpll
pop
sti
shll
in
lret
sub
pushl
pop
or
aad
xchg
mov
and
enter
out
pop
xchg
xlat
ljmp
in
scas
push
lahf
sbb
stc
push
lahf
gs
mov
mov
ficomps
fwait
lret
jnp
or
dec
dec
insb
push
test
and
mov
scas
lods
push
imul
outsl
mov
sbb
in
fs
das
lret
gs
addr16
stos
inc
inc
scas
dec
cmc
arpl
adc
mov
dec
jne
dec
or
fsubr
sti
mov
outsl
cwtl
add
imul
jmp
dec
xor
mov
fistps
mov
xor
pop
pop
inc
in
fstl
inc
sbb
lock
and
ds
dec
push
sahf
push
xor
push
lods
ret
push
inc
xor
pop
hlt
test
mov
dec
ret
jmp
push
mov
cmp
dec
lods
xorb
out
xchg
adc
es
ret
bswap
cmpsl
xlat
mov
inc
fsubl
inc
movl
inc
and
fldl
xchg
jnp
outsl
sub
jo
dec
xchg
addr16
jns
mov
jmp
sub
sbb
push
repnz
fimuls
into
dec
ror
mov
sbbl
xor
fistpl
in
mov
sbb
fistl
dec
jmp
mov
lahf
std
mov
pop
pop
pop
push
xchg
xchg
adc
lahf
mov
fcmovu
in
imul
std
sub
push
push
cmp
mov
fadd
aas
or
or
popa
xor
loopne
stos
add
mov
and
add
movsl
dec
enter
mov
jmp
stos
push
jecxz
cmp
jge
or
and
push
mov
lea
sub
cmp
xor
mov
xchg
mov
cltd
mov
inc
pop
mov
jbe
dec
push
das
scas
sub
mov
in
pop
push
daa
inc
mov
push
and
ljmp
test
push
lahf
inc
push
rclb
out
aaa
ret
xor
ljmp
cmp
aam
icebp
push
lcall
les
xor
or
mov
or
imul
js
ss
fs
or
aaa
nop
pop
pusha
out
sub
neg
cltd
push
stos
push
inc
out
mov
pushf
int3
mov
lea
xchg
adc
repz
mov
push
xchg
addb
inc
mov
icebp
jne
cmc
es
test
hlt
mov
add
ljmp
dec
into
mov
mov
pop
std
or
inc
xor
and
add
cmpl
adc
stos
ds
sbb
lds
and
sub
iret
push
or
std
push
cli
out
xlat
push
mov
push
mov
cmp
ja
and
ss
mov
push
jl
nop
mov
mov
fsts
sbb
cmp
lret
daa
stos
mov
divb
pop
jge
mov
mov
cs
cmp
dec
int3
es
in
xor
dec
cmpb
xor
lds
lea
mov
fcmovne
or
sbb
fsubrp
pushf
and
insb
fistpll
jl
out
cmp
push
out
aaa
push
and
jb
mov
out
or
imul
sahf
cmp
int
mov
mov
cld
adc
popl
ret
or
add
rcrb
mov
mov
jle
adc
jmp
mov
adc
mov
mov
and
fidivrl
in
faddp
dec
push
push
jnp
ficoms
out
testb
fnsave
ret
mov
mov
or
enter
lahf
cmp
cwtl
call
pop
dec
push
pop
mov
mov
faddp
push
mulb
add
call
sbb
xor
cmp
enter
jle
mov
fsubrl
iret
cmpl
clc
xor
bound
and
sbb
lods
jbe
pop
push
dec
mov
addb
xchg
cltd
loop
bound
fndisi(8087
dec
xchg
stc
inc
mov
xchg
fimull
jo
pop
mov
std
sbb
aaa
out
adcl
sbb
and
mov
inc
test
cli
leave
pop
xor
dec
add
lahf
stos
loopne
xor
hlt
aad
fcompl
into
mov
imul
ljmp
aas
popf
testl
popf
jbe
sbb
xchg
push
mov
sub
adc
add
adc
movsl
mov
daa
cmc
jo
jge
xchg
scas
and
cmp
fwait
out
int3
ss
and
js
lock
nop
insl
pop
subl
mov
in
mov
int3
sarb
push
push
mov
ret
jmp
adc
lahf
pop
lds
mov
mov
mov
stc
mov
mov
pop
push
or
mov
push
jns
xchg
inc
mov
cs
lock
sub
sbb
imul
cld
sbb
mov
aam
push
ret
out
sbb
ds
mov
mov
mov
pop
mov
insl
push
outsl
and
mov
and
mov
pop
or
pop
mov
fyl2x
and
mov
mov
dec
adc
jge
add
push
push
sar
or
pop
movsb
mov
push
inc
inc
inc
push
xor
lods
cmp
out
xor
dec
psubusb
mov
push
mov
push
scas
movsb
xchg
inc
rcrb
and
jecxz
dec
shl
filds
fidivrl
scas
fwait
push
inc
jecxz
mov
cmpsb
stc
scas
or
mov
adc
call
sub
adc
fisttpll
lds
mov
cmp
popf
pop
addb
fstpt
out
movsb
lea
sbb
mov
jae
sarb
dec
lahf
call
incb
xorl
mov
outsb
popa
and
add
repnz
out
dec
cld
sbb
arpl
rcl
push
pushf
lds
data16
fcompl
cmpsl
pop
int
cltd
insb
add
push
mov
sub
popa
dec
jno
inc
es
in
jmp
pop
js
pop
mov
pop
jge
xchg
int
mov
and
cmp
and
clc
subb
pushf
cld
dec
insl
pop
xchg
dec
fcomi
mov
arpl
decb
push
sub
movsl
iret
idiv
sbb
add
add
stos
fnsave
shrl
daa
cwtl
test
stos
sarb
xor
sahf
pushf
push
out
cmpsb
dec
mov
icebp
pop
ja
std
jo
test
dec
test
sub
jecxz
mov
stc
sbb
shll
movsl
leave
mov
pop
sbb
pop
cmp
test
rolb
out
jp
push
xor
outsl
out
fldenv
or
imul
pop
les
imul
dec
xlat
mov
jge
pop
xor
nop
scas
ficoml
fiadds
jg
mov
clc
cmpsb
out
or
test
inc
pushl
lock
mov
cmp
sbb
mov
adc
jne
pushf
jo
push
inc
inc
outsl
shll
mov
pusha
sbb
lea
xor
inc
out
inc
adc
and
add
jns
and
stos
mov
icebp
aaa
jl
push
sub
test
sbb
out
aad
mov
testl
add
sub
aad
mov
xor
add
dec
out
push
pop
shlb
xor
out
aaa
push
inc
adc
test
out
leave
test
inc
mov
mov
xchg
xor
jnp
repz
imul
xchg
pop
sbb
push
rcr
or
push
cwtl
orb
adc
and
arpl
fs
out
cmp
inc
movlps
dec
jo
jl
popf
push
ret
lods
push
and
sti
mov
bound
add
shll
int3
repz
popf
pop
mov
adc
test
push
lret
iret
xlat
push
nop
leave
imul
and
inc
es
cmp
add
fcomip
jl
in
adc
out
pop
aaa
sub
cmp
add
scas
dec
lock
inc
jmp
push
into
pop
sbb
pop
pop
pop
xchg
xor
cltd
mov
movlps
mov
filds
scas
jg
xor
or
jmp
daa
inc
enter
addr16
pop
popf
test
jl
sub
mulb
jge
out
test
sarl
stos
or
in
mov
xor
mov
fmul
jno
pop
dec
pop
or
mov
and
sub
cmp
sbb
cmp
and
ljmp
jecxz
sbbb
and
scas
fmull
pushf
aaa
mov
dec
push
cmp
mov
pushf
pop
or
lods
sbbl
int
push
pop
test
pop
inc
sub
mov
test
adc
shl
xor
insl
mov
stos
sub
add
stos
inc
in
mov
xor
aas
fsubl
frstor
cmp
test
ficompl
adc
jl
push
mov
ret
pusha
ss
rcl
enter
xor
jo
xlat
jne
adc
mov
jp
xchg
mov
popf
addb
sbb
xlat
adc
bound
in
frstor
pop
dec
shrl
add
outsb
sub
test
ja
push
add
jae
adc
js
jb
jo
lock
out
push
adc
sti
adc
or
icebp
xchg
sti
cld
icebp
sub
mov
push
mov
sti
jne
aaa
stos
xchg
xchg
ficompl
loop
stos
or
insl
sub
call
jge
mov
lret
cld
mov
push
loop
sarl
scas
nop
adcb
inc
dec
cmp
mov
pop
jle
cld
cmc
cwtl
xchg
fwait
ja
rolb
and
rcll
stos
dec
push
mov
iret
adc
sub
push
test
pushf
mov
mov
fwait
repz
fistps
push
inc
add
fisttpl
popa
sub
xchg
jg
cmc
std
jp
cmp
xor
sub
push
int3
xchg
fwait
pop
inc
incb
mov
lahf
pushf
das
pop
out
scas
push
push
sti
mov
push
loope
pop
mov
fsubrl
out
push
cbtw
pop
add
dec
lods
xor
xlat
in
scas
rcrb
fisttpll
arpl
xor
xor
fldenv
cmp
or
dec
test
add
data16
int3
push
cmp
lcall
dec
mov
out
ja
bound
sbb
arpl
dec
mov
mov
push
loop
xchg
jbe
arpl
test
jecxz
loop
into
addr16
pushl
xchg
xchg
and
lret
out
mov
arpl
inc
shrb
xchg
mov
jle
in
xchg
cmpsb
push
notl
cmp
nop
cmc
lahf
insl
lods
jnp
jns
push
push
and
mov
xchg
popf
cltd
jecxz
adc
push
outsl
mov
aaa
sbb
out
mov
pop
aad
mov
lahf
jg
icebp
mov
xor
or
mov
sub
jns
movsl
inc
jne
sub
cmp
jp
push
sub
sbb
xchg
mov
xorb
out
and
or
int
xor
mov
adc
les
xchg
jno
and
add
jnp
sub
out
imull
inc
stos
stc
aad
int3
sbb
ss
ss
xchg
add
aaa
mov
push
adc
push
push
dec
movsl
cld
mov
inc
out
cmp
push
jg
pand
jmp
pop
jl
fistpll
in
or
sub
loope
outsb
or
or
cmp
push
push
xlat
pop
shl
ja
hlt
test
fsubp
sub
cmp
sub
test
jecxz
fildl
or
inc
daa
and
stos
adc
nop
or
sbb
jmp
fsubs
out
mov
stos
pop
call
lahf
icebp
mov
aad
idiv
sub
xor
push
bnd
mov
aaa
push
stos
xlat
xchg
add
cmp
push
orb
dec
xchg
xchg
or
mov
je
es
push
je
and
in
mov
stos
outsl
jbe
jbe
outsb
mov
xor
and
mov
xchg
inc
xor
and
test
les
lds
in
lahf
js
popf
ss
icebp
adc
daa
pop
scas
xor
jo
jl
push
push
mov
add
fiadds
xchg
bound
inc
push
pop
shrb
xlat
jb
ret
repz
inc
add
cs
out
nop
mov
adc
jl
ds
lahf
pop
fstl
sbb
xchg
pop
mov
mov
in
cmpsl
xchg
sub
push
sbb
adc
adc
aas
ror
jmp
aad
push
pushf
or
xchg
stos
rcrb
and
gs
or
pop
out
jno
fs
lahf
loope
faddl
in
sbb
icebp
jmp
dec
lods
add
xchg
divb
pusha
popa
xchg
out
data16
jge
dec
popa
test
sub
mov
mov
imul
popf
push
pop
loopne
lret
test
xchg
xchg
iret
outsb
scas
cmpl
iret
mov
fcoms
pop
jae
fildl
jo
testl
pop
into
adc
fisubrl
dec
jle
shl
push
test
stos
cmp
mov
lods
sbb
mov
clc
push
mov
out
call
ret
add
pushf
xchg
jecxz
outsl
test
fcmovnbe
sub
cwtl
cltd
stos
roll
daa
inc
add
inc
sbb
push
mov
mov
aaa
push
push
clc
sbb
dec
insl
jbe
adc
lock
shr
add
cmpb
jae
insl
adc
hlt
movsb
in
nop
mov
dec
lods
xchg
int3
add
inc
sub
adc
imul
jne
shll
jle
faddp
adc
pop
lret
jae
repnz
pusha
les
pop
test
cmp
in
push
fimuls
add
or
xor
mov
add
ja
les
dec
int
xor
leave
aad
and
pop
fwait
and
mov
pop
and
test
jbe
pop
lahf
dec
mov
popa
lret
cmpsb
and
popa
scas
jg
mov
pop
or
xchg
loopne
imul
and
jb
jl
xchg
inc
xchg
in
pop
ljmp
inc
push
hlt
imul
jbe
push
mov
enter
hlt
out
push
enter
in
mov
jg
ljmp
hlt
xchg
push
jae
push
cwtl
cmp
mov
je
or
jns
jbe
shlb
add
mov
insb
pusha
adc
xchg
and
pushf
cli
cwtl
lds
jne
cld
fbld
cmp
xor
iret
out
les
std
cmp
es
jmp
mov
aaa
dec
lods
sbb
add
pop
jge
scas
mov
scas
add
mov
push
cmp
in
pop
push
stos
sbb
cmc
pop
stos
mov
and
mov
dec
jg
mov
xchg
in
jecxz
aad
jo
xchg
arpl
xor
push
add
out
sbbl
add
push
xchg
repz
mov
push
add
and
shrb
add
sub
loopne
sbb
xchg
cwtl
xchg
cmp
addb
lret
and
add
rorl
clc
out
mov
rolb
nop
cmpsb
inc
clc
mov
iret
xchg
sub
push
cltd
addr16
and
mov
out
repnz
push
jge
cmpsb
sbb
mov
xchg
rcl
lds
inc
out
cmpsl
or
inc
sub
inc
insb
rorl
iret
fisubl
out
movsb
shll
arpl
outsb
lret
cmp
lods
out
adc
push
out
adc
jb
aam
jb
push
inc
or
imul
lcall
jne
orb
pop
lods
in
mov
je
getsec
fidivrs
scas
iret
test
cwtl
mov
xchg
inc
js
mov
push
fstl
pop
test
lods
shlb
or
shr
pop
cltd
rcrb
add
in
xor
nop
push
jecxz
mov
stc
mov
stos
test
dec
push
and
fwait
sbb
mov
repnz
jnp
mov
xlat
xlat
fs
movsb
cmp
xchg
lods
ficompl
mov
dec
sub
inc
jl
cmpsl
sub
in
ret
cmp
data16
sub
in
push
pop
xchg
jecxz
call
inc
adc
imul
stc
sub
lret
movsl
xor
jle
jb
mov
and
mov
cli
cld
enter
mov
outsb
sub
and
jl
jns
repnz
xchg
shrb
push
mull
push
fidivs
in
loop
mov
push
push
sub
push
aad
adc
hlt
out
into
sahf
jo
or
das
mov
fsubs
insl
idivl
iret
negb
mov
jo
xlat
adc
xor
jg
inc
test
dec
fisttps
jb
sahf
jge
sbb
ror
sahf
jb
daa
icebp
ret
cmp
add
or
in
lcall
orl
les
lret
push
xlat
mov
sahf
aaa
and
sbb
add
cmpb
dec
xchg
fs
and
push
cltd
icebp
dec
xor
leave
jmp
dec
aam
cld
gs
mov
xor
push
sbb
mov
inc
aad
dec
int3
add
gs
repz
pop
pop
mov
xor
mov
jns
loop
push
cmp
ds
xlat
jno
mov
ds
xor
imul
pop
jb
popf
divb
loope
push
ljmp
fistpll
pop
dec
pop
sbb
mov
dec
dec
jmp
mov
das
xlat
xor
cmc
out
or
lcall
enter
cmpsb
out
xchg
dec
outsl
pop
scas
pop
cwtl
inc
inc
rolb
push
push
push
jl
test
jae
jle
movb
cmp
dec
daa
ljmp
hlt
or
fdivs
sub
bound
adc
ficoms
in
and
or
mov
pop
and
cwtl
hlt
pop
in
sbb
loopne
fisubs
stos
je
add
add
fs
xchg
icebp
mov
adc
cltd
push
mov
fistpl
kunpckbw
fs
je
add
or
cltd
jbe
pop
inc
jne
jns
sub
arpl
pop
dec
lahf
mulb
mov
add
hlt
add
je
lods
gs
repnz
sbb
outsl
dec
sub
adc
mov
in
arpl
rcrb
incb
dec
pop
mov
mov
cwtl
scas
dec
xchg
pushf
inc
pop
bound
pop
dec
pop
test
fadds
jg
cmp
stos
mov
sbb
insl
jmp
xchg
into
jecxz
inc
sub
lods
hlt
add
enter
ljmp
rclb
or
or
push
imul
or
jp
div
mov
cld
ds
cmpsl
adc
jne
pop
sub
mov
push
lcall
cmp
push
add
rcrl
xlat
adc
push
das
ss
in
inc
sub
mov
push
jo
pop
mov
cmpsb
pop
or
in
xchg
xor
mov
dec
jge
sbb
mov
popf
dec
test
test
aaa
mov
mov
scas
xlat
icebp
aaa
xlat
fstps
jne
sahf
jbe
mov
pop
out
int3
les
out
gs
arpl
pop
push
add
aas
pop
hlt
dec
mov
add
mov
in
icebp
push
dec
out
repz
or
mov
pop
pop
popa
pop
stc
inc
int3
ret
arpl
stos
insl
xor
in
bound
pusha
cli
or
repz
or
popf
xchg
cmp
and
xchg
ret
in
mov
inc
call
lahf
sbb
xor
dec
in
cmc
sbb
test
jmp
cmpl
cmp
outsl
jp
push
jb
pop
insb
shll
movsb
or
int
jo
push
inc
jle
out
jbe
push
add
aas
aam
rcrl
lods
lcall
cmc
sbb
mov
insl
test
and
dec
mov
xchg
push
in
pop
sbb
xor
mov
arpl
pop
or
and
movsb
dec
int
inc
psubusb
and
pop
rorl
jo
mov
icebp
jbe
ficompl
fdivrs
xor
rcrl
sbb
pop
sbb
test
jmp
notb
jge
cli
loopne
sbb
push
pop
inc
push
xor
mov
and
dec
in
test
lahf
jge
clc
rclb
shrb
xchg
stos
lods
cmpsl
fistps
repnz
mov
cmp
cli
lock
xchg
xor
or
pop
in
stc
jmp
je
xor
jnp
mov
ja
lods
loopne
test
mov
mov
pop
mov
out
cmp
add
push
jbe
mov
movsb
pop
outsb
or
xchg
mov
arpl
mov
and
aaa
cmp
or
andl
mov
repz
xchg
stos
sti
xchg
test
sub
adc
aam
jle
in
add
pop
fs
mov
xchg
mov
lahf
xchg
nop
in
inc
inc
xor
sub
mov
jae
lahf
sbb
sar
pop
push
push
test
mov
xor
lret
xor
arpl
inc
shrl
jle,pt
cmpsl
ja,pt
icebp
into
je
mov
xchg
cmp
add
push
test
add
stos
or
sbb
push
loope
lret
inc
ljmp
mov
std
add
mov
sub
addr16
lcall
int
ljmp
filds
je
in
pop
idivb
push
sub
call
clc
cwtl
fnstsw
into
mov
pop
int3
jg
adc
mov
ja
add
leave
cmpsb
mov
aam
imul
jae
scas
inc
dec
push
movl
std
jmp
nop
xchg
movsl
jg
imul
pop
xchg
out
adc
push
xor
cmp
jp
push
mov
mov
push
jno
xor
mov
xor
mov
mov
inc
pop
lods
adc
pop
pop
fstpt
or
push
setp
js
int
sub
cwtl
mov
xlat
sahf
test
aaa
fisttps
xor
sub
xlat
jae
cmp
sbb
leave
xchg
sbb
divl
or
in
or
fidivrs
or
xlat
adc
outsb
aam
in
mov
inc
cld
iret
xor
les
xlat
sbb
xchg
lahf
pusha
mov
mov
out
ffree
xchg
jns
jmp
out
xlat
sbb
insb
or
xchg
push
jbe
shl
ljmp
and
sbb
mov
aaa
mov
cltd
mov
fwait
jg
push
mov
push
cmp
fisubrl
ss
sub
push
jge
sub
xor
sbb
icebp
adc
and
sbb
xor
xor
jecxz
push
fldcw
aam
add
out
lds
jle
ret
jno
pop
repz
add
shl
cwtl
xor
push
xor
out
pop
inc
adc
pop
jno
sbb
pop
data16
pop
pop
mov
jbe
mov
loopne
cmpsb
add
out
inc
sahf
and
xor
insl
push
add
xchg
dec
call
pop
dec
aaa
lret
adcb
test
mov
xchg
repnz
mov
call
in
aam
je
lcall
xor
shll
or
push
int
repnz
push
stos
test
call
jge
push
mov
xchg
lds
testb
lods
jmp
les
push
imul
mov
loop
enter
mov
mov
movsl
bswap
js
lock
icebp
mov
pop
lea
cmp
insb
iret
stc
mul
inc
or
cmp
xchg
push
jne
inc
aaa
cmp
daa
inc
popa
test
in
xor
icebp
sbb
stc
xchg
mov
movsl
imul
test
out
pop
aaa
pop
jl
imul
in
push
xchg
hlt
out
fimuls
xor
xchg
pop
orb
xor
ss
lock
loopne
and
in
in
fdivrl
add
test
ds
lods
arpl
lea
sub
flds
push
cmp
mov
jecxz
sub
ds
sar
in
test
fdiv
sbb
lods
xor
dec
jne
movsl
cmovb
inc
dec
fs
xor
shll
es
scas
mov
mov
fsubl
push
and
stos
push
ret
ret
ljmp
clc
mov
push
loop
fnsave
movb
in
imul
xchg
ja
or
sbb
mov
cmp
mov
inc
sbb
stc
push
bound
xchg
inc
iret
xchg
mov
push
sub
xor
mov
xor
push
push
and
dec
in
imul
es
xor
leave
mov
int
jmp
cmp
popf
int
add
lret
adc
bsf
imul
cmp
xchg
pushf
fs
add
mov
aam
sbb
jne
lds
loop
hlt
addr16
andb
mov
mov
shr
add
mov
jmp
stc
shll
mov
push
cltd
or
jg
movsb
filds
int3
xchg
mov
jmp
xchg
jnp
aas
jnp
insl
stos
sub
mov
mov
enter
jnp
decl
and
sbb
sub
mov
xor
sub
stos
pop
adc
sbb
or
fdivr
test
das
mov
inc
add
hlt
sub
ljmp
and
mov
and
imul
mov
inc
movsl
cmp
pop
inc
mov
movsl
jo
popf
sub
jg
pop
fucomi
clc
and
mov
dec
jo
jecxz
aam
sub
mov
cmp
push
or
and
add
in
popa
mov
rdpmc
lds
or
lret
shlb
mov
mov
sbb
fs
add
repnz
in
or
mov
scas
mov
imul
ret
mov
push
mov
push
mov
adc
xchg
data16
jb
dec
cmp
cltd
cmp
xlat
jno
repnz
xchg
out
test
wbinvd
inc
dec
pop
xor
cmp
shlb
call
lock
dec
cmp
dec
mov
int
cmp
jns
cltd
or
call
mov
sbb
clc
iret
push
ljmp
sbb
push
push
in
mov
xorl
bound
xchg
mov
push
mov
ret
dec
mov
inc
pop
push
ljmp
mov
and
xchg
sbb
sbb
pop
or
cli
es
add
int
mov
test
insb
lods
mov
in
dec
andb
or
inc
sahf
mov
popa
imul
xchg
sub
push
and
in
jl
sbb
lds
cwtl
inc
cmpsl
movsl
decb
and
aad
dec
mov
sub
js
jmp
pushf
loope
or
mov
and
sahf
aaa
mov
lret
lret
xchg
dec
and
adc
adc
bound
inc
in
mov
dec
test
loopne
cltd
andl
andl
clc
mov
push
add
pop
xchg
sbb
push
les
fists
xor
push
mov
push
xor
stos
ja
inc
iret
jp
jb
sbb
pop
testl
fistps
jl
mov
mov
ret
test
pop
lahf
adc
imul
jae
and
push
jb
fnstsw
popf
fistl
imul
push
xor
inc
jae
stc
dec
cld
or
cmpsb
lods
loopne
inc
in
imul
hlt
dec
fnstcw
or
mov
xchg
out
test
pop
cltd
and
xor
sar
mulb
adc
pop
sbb
movsb
je
iret
pushf
mov
lcall
pop
mov
inc
in
jl
mov
pop
in
arpl
loope
xor
daa
mov
fmuls
filds
test
push
hlt
mov
cld
repnz
pop
fdivrs
jmp
mov
pop
and
add
stc
pop
inc
jg
push
mov
mov
sbb
adc
pop
int
std
inc
mov
xchg
push
addr16
mov
fs
add
pop
popa
repnz
dec
push
push
shrl
in
push
repnz
adc
inc
pop
mov
sub
sub
out
pop
fnsave
test
inc
fwait
pop
out
cmp
push
mov
in
sub
les
push
xor
movsl
ljmp
cmpsl
leave
in
and
repnz
sarl
movsb
insb
sarb
inc
inc
bound
pop
aad
loope
les
pushf
jle
jbe
mov
xchg
fs
mov
or
and
ja
adc
push
xchg
mov
fwait
adc
pop
les
sbb
mov
sub
mov
and
testb
jae
fisubl
mov
test
push
sbb
std
or
insb
lock
sub
or
call
add
and
mov
out
imul
xlat
pusha
cld
cmp
jns
popf
lods
mov
cmpsb
test
hlt
cmpsl
nop
xchg
pop
lret
mov
imul
imul
outsb
inc
int
clc
enter
cmp
push
popf
sub
push
mov
sbb
ljmp
inc
push
scas
xlat
frstor
inc
es
add
popa
popf
dec
mov
push
test
cmp
clc
jo
enter
adc
call
mov
cmp
mov
mov
xchg
shlb
popa
fsubl
in
out
sub
ret
std
shlb
jp
push
cmp
call
and
lret
or
outsb
std
adc
add
idivl
pop
mov
mov
lds
loop
adc
push
cmp
arpl
out
loope
push
stos
jo
mov
dec
pop
pop
push
jmp
mov
daa
and
add
cmp
or
jb
nop
mov
fcmovbe
jbe
xor
mov
jmp
arpl
xor
xor
in
ss
addr16
inc
adc
mov
inc
outsb
fiaddl
out
nop
cltd
jo
mov
sub
push
movsl
mov
fxch
jmp
cmpsb
cmp
gs
mov
push
lret
mov
ja
cmpsb
mov
into
pop
fcmovne
ror
pop
mov
sbb
in
mov
daa
adc
inc
into
shlb
icebp
sbb
jmp
into
sub
and
rcrb
gs
mov
cmp
mov
cmpsb
repnz
mov
nop
xchg
xchg
mov
mov
imul
scas
in
movsl
data16
pop
sub
inc
sahf
sub
mov
maskmovq
negl
dec
imul
fcmovnbe
or
push
cmp
cmp
ret
xchg
arpl
xchg
cmpsl
ss
aaa
add
clc
rcl
push
bound
shll
pushf
and
mov
out
sahf
ds
leave
push
xchg
adc
adcl
mov
mov
jb
ja
outsl
arpl
sahf
lret
mov
icebp
and
adc
sub
jae
test
jo
push
arpl
arpl
sbb
jge
arpl
pop
and
fsubrl
xor
lret
and
inc
in
leave
rol
mov
loope
and
mov
fsubr
mov
mov
pop
jp
xor
add
inc
inc
lcall
cmp
repnz
mov
lahf
daa
dec
fstpl
pop
loopne
mov
es
enter
cmp
xor
dec
rsqrtps
push
mov
lret
adc
ja
jp
jge
scas
inc
shlb
sbb
clc
dec
aas
push
jle
stos
jp
jae
xor
int3
sub
cli
mov
add
add
aaa
xchg
scas
dec
mov
loop
mulb
cmp
in
xchg
mov
adc
mov
out
js
xor
out
pop
stc
fisubs
adc
mov
dec
pop
pop
stos
lcall
movsb
or
aam
mov
mov
pop
mov
cmp
out
sub
loopne
scas
inc
dec
js
and
test
xchg
mov
rol
adc
enter
movsl
les
adc
bound
std
dec
inc
rcrl
or
cmp
flds
jae,pn
dec
push
fs
cmpl
fsubrs
adc
xchg
pop
mov
inc
fcomps
call
add
shlb
mov
adc
cmp
lahf
sub
push
jge
fwait
jmp
es
sub
push
out
lret
jl
test
cmp
rcr
push
cld
int3
pop
dec
mov
sub
mov
and
sub
dec
adc
jnp
jo
xor
insl
xor
pop
push
add
loope
mov
sub
pop
adc
push
out
lea
lea
jbe
sub
sub
lcall
add
add
test
and
lods
push
push
dec
jmp
pushf
xchg
jmp
test
jb
mov
xchg
or
xchg
adc
ror
mov
aad
xor
fsubl
inc
xor
shlb
enter
test
or
lods
mov
rcrb
iret
or
aas
rol
mov
cmp
push
adc
and
dec
int3
and
mov
sbb
out
in
in
out
add
lahf
pop
cmpsb
adc
push
aad
mov
pushf
ret
scas
dec
dec
cli
int
daa
fcoml
dec
shll
mov
ljmp
aaa
mov
subl
dec
mov
add
cmp
and
pop
cld
imul
es
dec
xchg
ss
push
mov
mov
lds
jae
and
pop
test
inc
cs
loop
flds
scas
inc
cmp
sub
fcoml
and
add
data16
and
out
mov
mov
mov
pop
fimuls
bound
imul
mov
shrl
stc
pop
pop
xchg
shlb
and
push
ja
enter
in
jb,pt
lea
push
xorb
aam
push
iret
testl
jo
push
stos
jnp
sahf
or
mov
in
loopne
pop
lock
shrl
in
cmp
aas
cmp
push
push
out
pop
add
push
adc
sbb
mov
cs
xor
sbb
lret
ret
inc
mov
sbb
inc
insb
inc
xor
mov
lea
sub
xchg
mov
clc
mov
xchg
out
std
mov
ljmp
pop
push
add
sub
je
add
xor
adc
or
outsb
int
sarl
adc
out
arpl
mov
out
sbb
and
and
adc
movsb
jp
or
jb
data16
and
arpl
jo
add
mul
xchg
mov
mov
jo
mov
cmpsb
fdivrs
icebp
push
xchg
into
and
movsl
ljmp
call
xchg
mov
xlat
dec
push
add
lock
dec
ret
xchg
cwtl
mov
xor
cmp
dec
rcr
push
out
cltd
mov
dec
icebp
lret
in
or
xchg
xorb
mov
inc
dec
dec
iret
rcrb
stc
rcl
aas
xor
mov
int
xchg
jg
sub
xchg
mov
push
or
sbb
pop
push
pop
dec
stc
push
or
repnz
sub
test
jg
insb
imul
and
pop
push
fs
xor
cmp
xchg
jl
in
push
cmp
or
mov
mov
push
in
loop
test
pop
mov
or
xor
sbb
stos
xchg
fcomi
and
push
xor
sar
mov
mov
stos
mov
aas
pop
mov
popf
mov
xor
arpl
ret
xor
xchg
scas
adc
cmp
inc
sub
inc
mov
sbb
icebp
pushf
aam
hlt
mov
bound
dec
sahf
test
xchg
lods
mov
add
push
mov
add
ja
lret
sbb
shrl
dec
ljmp
adc
sahf
or
add
xor
into
outsb
dec
addr16
mov
push
add
dec
fdivr
pop
jmp
jne
cmpsl
jno
push
cli
sahf
insb
hlt
pop
loope
and
shrb
imul
js
xor
mov
dec
or
add
call
fistl
jl
push
cmc
inc
fidivl
lcall
xchg
and
mov
jnp
js
dec
mov
sbb
push
dec
mov
and
xlat
bnd
pop
test
loope
fistps
cmpsb
mov
sti
mov
pop
fcoml
aam
jmp
pop
addb
push
hlt
testb
dec
sbb
mov
fbstp
fcomi
xchg
or
or
and
or
leave
sbb
jp
test
pop
mov
xchg
out
ja
int3
mov
dec
and
push
stos
jns
loop
sub
xchg
jnp
rorl
loop
call
cmp
and
test
mov
outsb
xchg
test
sbb
nop
mov
mov
inc
xchg
adc
ret
jecxz
call
loopne
fsubrs
mov
inc
arpl
inc
enter
fwait
xchg
aas
repz
push
insl
ret
dec
imul
out
or
cmp
sbb
cmpsb
shr
lret
cmp
dec
cmp
cltd
dec
push
mov
dec
data16
mov
gs
test
stos
adc
das
sti
mov
jge
inc
sbb
lret
mov
lds
ja
inc
xlat
incl
stos
popf
imul
loop
pop
or
into
out
lds
jmp
sbb
hlt
jne,pn
lods
push
lcall
or
add
jne
and
adc
inc
xchg
lea
inc
pop
add
jae
pop
nop
call
push
sub
pop
popf
add
outsb
into
movsb
cmp
mov
outsb
sbb
mov
mov
shlb
std
data16
xor
push
adc
notl
mov
fsts
inc
inc
xchg
adc
mov
push
fstl
or
jecxz
or
cmpsl
pop
mov
imul
out
cmpsl
add
inc
push
push
mov
push
ds
push
sub
cltd
xor
popa
popf
fdivs
jae
mov
dec
pop
mov
imul
cld
push
lahf
xchg
psrad
mov
sarl
arpl
adc
sbb
lock
or
icebp
clc
mov
pop
daa
jnp
adc
mov
rolb
jle
sub
imul
dec
lods
or
dec
cmpsb
xchg
sbb
jo
jae
lret
mov
push
pop
adc
dec
add
incb
je
mov
test
pop
inc
pop
loopne
iret
in
add
dec
xchg
lcall
jne
roll
mull
ja
in
sbbl
sahf
push
dec
xchg
inc
pop
lret
fs
xor
shll
sub
pop
std
in
packssdw
dec
mov
sub
jbe
scas
add
rcrb
ss
popa
xchg
pop
in
arpl
stc
dec
pop
and
inc
mov
mov
jecxz
pop
or
dec
flds
addl
jae
mov
sbb
outsl
js
sbb
mov
ret
out
les
ficomps
mov
sbb
adc
push
mov
mov
mov
cwtl
push
mov
ds
jp
test
rcrb
and
rcrl
sbb
pop
mov
enter
cmp
movsw
or
cmpsb
inc
sbb
shlb
es
test
clc
ljmp
push
push
pusha
in
daa
mov
pop
pop
sbb
jecxz
adc
call
mov
sub
lcall
sbb
sbb
test
mov
out
cltd
mov
lock
mov
rcrl
sub
xchg
push
das
roll
rorl
inc
fildl
sarl
and
mov
pop
cmpsb
sbb
cmp
sarb
xor
cvtpi2ps
cmpsl
shl
jo
sub
mov
sbb
sub
add
mov
mov
daa
daa
xchg
ds
mov
arpl
sbb
lock
jno
cmp
loopne
loopne
pop
pop
mov
lea
sub
cmp
test
mov
andb
js
xor
mov
xchg
cmp
jge
mov
inc
xor
repz
mov
jmp
cmp
push
or
sub
mov
xor
ja
add
sti
nop
lock
cli
loope
mov
cmp
mov
xor
sti
pushf
inc
cwtl
cmp
into
push
cmpsb
shlb
leave
pop
push
xchg
pop
mov
and
lea
mov
cmc
jne
or
scas
insb
push
imul
or
hlt
and
pop
ss
and
loope
add
fwait
sbb
lcall
out
or
adc
loope
jl
dec
out
jmp
mov
loopne
mov
popa
icebp
jae
xor
ror
mov
in
sub
sbb
test
ret
imul
mov
add
inc
push
dec
adc
in
ja
push
dec
add
repz
pop
push
daa
push
sub
in
je
aaa
cmp
repnz
dec
mov
add
xor
jg
in
shrl
fcmove
inc
mov
adc
sbbl
cmp
jge
aam
dec
cmp
rolb
test
into
std
jb
xor
xchg
fcomps
rorl
mov
sub
mov
cmpsb
adc
les
adc
mov
cmpsb
int3
test
xchg
orl
orb
mov
fcoml
or
push
xor
mov
inc
fmull
and
fildl
push
ret
jg
hlt
stc
or
dec
mov
xor
fwait
shrl
jecxz
cmp
mov
push
stc
or
movsl
lock
mov
jae
ficoms
mov
outsl
sbb
push
jb,pt
mov
lret
adc
fnstsw
pop
pushf
sahf
arpl
inc
pop
xor
cmp
arpl
lock
or
or
push
adc
push
push
pushf
addr16
xor
xor
call
aad
jg
xchg
enter
mov
out
or
popf
addr16
hlt
push
dec
into
in
xor
mov
fistl
pop
inc
in
out
xchg
je
cmpsl
sub
iret
sbb
cs
out
pusha
pop
inc
sub
aaa
xchg
inc
xor
pop
jno
inc
shlb
adc
cmp
push
loope
fstl
xor
clc
movsl
arpl
sub
imul
and
inc
mov
mov
jae
mov
movsl
out
scas
sar
nop
insb
xchg
ss
jns
ja
mov
nop
fdivp
idivb
mov
clc
pop
xor
or
cmpl
add
in
mov
cwtl
rorb
outsb
js
jl
dec
iret
adc
cmp
movsb
push
mov
cld
dec
jnp
clc
cs
or
add
loope
cmp
loope
dec
fs
push
cmpl
pop
mov
ret
movsb
adc
sahf
xchg
push
adc
nop
sub
add
mov
pop
pop
sbb
add
aam
push
data16
push
pop
inc
adc
faddl
xchg
xchg
sub
xchg
mov
sbb
mov
or
insl
mov
lds
xchg
push
mov
sarl
and
testl
xor
pop
cmp
dec
mov
ljmp
adc
pop
and
lcall
daa
fisubl
loop
jbe
xorb
inc
fstpl
push
test
outsl
cmpsl
retw
mov
cmp
mov
inc
xorb
pop
or
xor
jnp
push
add
ja
repz
icebp
push
lcall
push
pop
rcr
jecxz
dec
and
stos
xchg
push
jp
int
aad
mov
xor
rcl
sub
xchg
insl
rolb
ja
cmp
jae
test
mov
add
add
sub
inc
xchg
leave
mov
stos
insl
dec
pop
stos
lods
iret
xchg
mov
push
push
enter
mov
or
fidivrl
leave
clc
xchg
shll
enter
dec
negb
pop
jg
and
icebp
pop
sub
add
cs
ds
test
shlb
dec
xchg
aaa
jnp
xchg
movb
sbb
xchg
sub
push
or
dec
jbe
xlat
adc
scas
inc
xor
les
adc
cltd
add
repnz
and
lret
stos
lods
or
repz
in
jp
push
mov
movsl
iret
fidivrs
or
in
push
jmp
pop
dec
mov
push
or
push
inc
rcrb
ret
in
hlt
in
dec
lds
dec
sbb
mov
ret
mov
pop
mov
int
pop
outsl
shl
int
stc
dec
inc
push
sbb
stos
push
sbb
nop
dec
je
scas
lea
loopew
add
hlt
lea
loop
hlt
pop
pop
pop
sub
pop
dec
in
lods
mov
mov
adc
dec
pushf
xchg
mov
in
pushf
outsb
sahf
daa
cltd
push
pop
sbb
stos
jg
je
repz
lret
mov
in
and
or
adc
lcall
pusha
jecxz
stos
mov
cwtl
pop
les
jp
aas
imul
xchg
out
lock
inc
and
sub
xchg
lcall
and
movsl
and
inc
data16
mov
inc
mov
push
pushf
out
es
pop
or
xlat
test
mov
mov
pop
es
stc
lret
inc
or
fildll
push
insl
push
pop
icebp
pop
shrb
enter
fisubs
push
push
lock
sub
dec
mov
ffreep
sbb
fwait
push
iret
jae
push
push
mov
mov
add
and
dec
iret
add
into
lea
fdivrl
les
les
mov
cmpsb
push
or
repnz
ret
add
lods
mov
mov
xor
push
and
sbb
inc
dec
test
hlt
out
add
jno
jg
jl
test
fisttpl
outsb
dec
bound
pop
iret
mov
rolb
lret
aad
les
fistps
or
cmp
add
shrl
sbb
inc
rcrb
aam
clc
dec
inc
insl
jo
jge
sbb
rorl
inc
adc
outsl
out
ret
mov
rolw
addr16
push
mov
in
lds
dec
dec
or
and
dec
orl
push
ljmp
push
jecxz
and
lea
lea
add
and
test
mov
push
ljmp
pop
movl
je
js
insb
cltd
or
ret
inc
adc
test
arpl
push
popa
mov
fcomps
lods
lea
loopne
sub
push
imul
fnsave
mov
dec
repnz
and
adc
ret
leave
adc
mov
mov
gs
push
mov
stos
jge
jle
adc
adc
sahf
imul
in
adc
lock
add
jnp
jg
popa
inc
mov
xchg
mov
mov
call
sbb
pop
push
cmp
mov
mov
ror
inc
enter
rol
xor
dec
sub
jmp
jmp
ja,pn
mov
inc
cmp
jae
lcall
jp
mov
xchg
fldl
insb
and
out
loopne
test
sbb
and
femms
cwtl
inc
add
imul
in
and
gs
sub
xor
sbb
pop
dec
dec
cli
popl
pop
add
mov
mov
arpl
dec
mov
test
iret
push
sti
insl
shrb
mov
scas
xchg
addb
das
hlt
test
shrb
out
inc
sub
clc
loopne
dec
popf
cmp
push
push
sarl
nop
jecxz
out
push
sbb
mov
mov
add
es
insl
test
cmp
xlat
mov
jo
nop
mov
xchg
in
insl
popf
pop
stc
push
dec
sbb
in
inc
dec
pop
xchg
cmp
in
inc
cmpsb
fcompl
cmp
jns
aad
lret
les
xorb
sub
out
jns
mov
jb
jb
add
insl
rcl
fisubrl
push
in
lods
xlat
movl
cmp
test
fucompp
idivb
dec
mov
cwtl
dec
dec
add
push
adc
aad
xlat
pop
mov
xor
imul
adc
push
adcb
xchg
ret
rcl
or
lods
push
bound
fistpl
adc
in
pop
shl
mov
stos
in
fdivrs
fmul
stos
stc
xchg
pop
xchg
pop
addr16
push
cmc
push
xlat
mov
add
push
or
xchg
add
xor
and
frstor
pop
dec
lds
rcrl
sti
mov
fstps
inc
ret
dec
inc
or
push
pop
inc
lret
sub
dec
xchg
popa
enter
popa
aam
push
dec
dec
sbb
push
adc
push
or
inc
loopne
cmp
pop
out
xlat
stos
xor
pusha
jmp
sub
stc
and
pop
and
daa
jg
cmp
int3
aaa
idivl
jl
frstor
subl
andb
inc
int3
movsl
fcmovnb
inc
and
gs
pop
clc
pusha
cmp
int
or
cmp
mov
test
ljmp
divb
push
fcompl
pop
loope
out
fs
das
mov
jno
int3
ljmp
popa
mov
inc
popf
add
loop
rorb
xchg
xchg
push
inc
popf
fistl
or
or
stos
push
ret
cmp
in
icebp
jnp
cmp
or
and
cmpsl
cmp
mov
insl
scas
xchg
shl
jne
mov
sub
mov
jmp
adc
imul
repz
dec
fcoms
fiaddl
xor
pushw
adc
xor
pop
pop
inc
test
mov
cmc
imul
mov
aaa
out
push
jp
mov
addl
int
push
outsb
gs
rol
iret
pop
jne
cmp
pop
repnz
dec
sahf
insb
fprem
ljmp
jb
in
mov
pop
cmp
sub
in
xor
mov
xor
mov
push
push
jg
xor
jle
lea
scas
add
cmc
andl
xchg
push
test
fwait
xor
stos
jno
xchg
call
jnp
inc
mov
pop
movhps
push
pop
xchg
scas
fmul
fstpl
shll
lea
xor
mov
mov
cmp
sub
jae
lods
stc
cli
xor
into
ds
icebp
adc
loop
and
rcll
inc
inc
fwait
mov
jbe
xlat
insb
scas
mov
or
sub
cmp
fidivrl
xor
sbb
add
sub
das
mov
pop
jle
imul
std
sahf
je
sbb
sub
jb
or
fidivrs
mov
cmp
std
mov
sbb
cli
outsl
mov
or
sti
pushf
flds
mov
stos
sub
cmpsb
fs
repnz
add
push
lret
jns
les
es
repnz
aad
sub
mov
pop
in
pop
nop
cmp
jge
sbb
inc
inc
cli
shll
add
and
mov
stos
lret
jl
xchg
pop
dec
sahf
pop
out
in
and
push
data16
cmc
push
xchg
popl
mov
jecxz
xor
cmpsl
cmp
ror
repz
aam
adc
cmpsb
daa
mov
pop
fldl
push
mov
add
xor
lods
shll
lret
outsl
aam
fistl
xor
bound
inc
adc
ret
aad
in
jns
sbb
pop
popf
mov
inc
push
add
cmc
orl
jl
xchg
les
loope
mov
mov
inc
push
es
and
aas
arpl
or
outsb
inc
and
or
test
imul
push
mov
shlb
inc
test
sub
popw
outsb
mov
js
ja
jge
je
pop
mov
sbb
sub
fsincos
movsl
insb
setbe
and
sbb
cmp
stc
ja
push
xor
mov
push
adc
outsl
fs
xchg
in
jbe
call
or
and
arpl
insl
lea
cld
dec
stc
fistpll
cmp
cmp
push
dec
cmp
pop
mov
fwait
test
or
roll
mov
pop
push
mov
or
repz
ficoms
js
cmp
or
add
pushf
add
out
or
fwait
mov
mov
outsb
or
aaa
adc
arpl
and
dec
or
les
cmp
push
and
fstl
inc
rcll
mov
fsubrp
and
jns
fdivrs
sub
shlb
arpl
loopne
xlat
hlt
js
into
cmp
pop
aas
into
or
es
push
cmp
lods
jb
jle
bound
mov
stos
gs
movb
fisttps
mov
mov
aam
popa
in
andb
test
mov
fcoms
or
pop
dec
inc
jp
cmc
and
dec
push
sarl
push
test
mov
mov
test
push
test
jecxz
and
cmpsb
mov
fidivl
adc
adc
xchg
and
fsubs
loop
cmpb
repz
push
jle
lods
call
les
notb
mov
stos
dec
push
pop
je
cs
aam
adc
shr
aad
add
pop
mov
sbb
out
pop
daa
adc
inc
icebp
xor
jnp
mov
in
sbb
mov
fnsave
and
ror
and
xchg
pop
rcl
clc
insb
xchg
out
addr16
sbb
jecxz
lahf
inc
jne
xchg
pop
das
cs
dec
mov
mov
stos
push
aaa
lea
and
out
fwait
sub
shlb
add
or
sahf
add
inc
cs
fwait
sahf
mov
int
popf
enter
out
push
mov
cmp
sub
mov
xchg
je
cmp
mov
inc
test
lds
inc
call
sbbb
cmc
push
mov
andl
cmpb
or
in
insl
in
jne
arpl
fmuls
dec
fisttpl
cmp
jle
inc
inc
shr
faddp
lods
fsubl
jns
js
mov
xchg
inc
outsl
outsb
sbb
arpl
jbe
pop
mov
inc
cmp
stos
ja
xor
int3
das
dec
pusha
add
lcall
xorb
lret
stos
inc
sub
ret
mov
jo
or
fsubrl
mov
add
jp
sahf
dec
mov
int3
cli
std
dec
push
jno
roll
push
pop
lret
mov
lods
jmp
push
lret
repz
mov
jbe
cmp
add
inc
push
or
mov
out
gs
sti
stos
aam
xor
pop
sbb
rolb
or
fcoms
gs
xchg
jne
test
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
