jae,pn
add
in
mov
push
inc
mov
inc
es
outsb
pop
mov
lods
add
fdivl
add
or
add
jp
add
mov
movsl
add
sbb
add
stos
lods
add
ds
fisubrl
add
sbb
xchg
add
xor
xchg
add
inc
mov
mov
out
push
mov
sbb
add
adc
pop
negb
add
sub
add
mov
movsb
add
loop
add
cs
add
idivb
dec
cmp
push
add
add
xchg
pop
add
nop
stos
add
jno
outsb
sbb
add
or
add
dec
xchg
jbe
add
and
add
inc
movsb
add
stos
mov
add
orl
xor
add
adc
add
lea
cmp
xchg
add
outsb
test
add
mov
add
push
inc
add
mov
test
add
jbe
add
add
lods
add
or
pop
add
jecxz
add
mov
imul
adc
add
fwait
pop
add
repnz
and
add
or
sbbb
add
fisubrs
add
jmp
add
ss
sub
add
aad
add
imul
add
daa
cmp
inc
adc
push
inc
add
jl
add
or
es
addl
in
adc
jp
add
cmp
or
lcall
xchg
add
addl
mov
mov
add
imul
push
xchg
add
negl
add
test
sti
add
scas
push
add
jp
add
pushf
jg
out
sub
add
xor
add
xor
push
mov
add
jno
add
cmp
cs
add
imul
add
jo
add
andl
clc
and
pop
insl
add
shr
add
data16
repnz
test
add
inc
xor
add
and
add
jnp
add
in
or
dec
sub
std
loop
inc
sbb
xor
add
lahf
add
das
mov
add
iret
fs
iret
add
mov
jb
push
int3
cwtl
add
mov
cmpsb
mov
add
cmp
add
jl
sbb
cltd
add
inc
movsl
add
push
add
push
add
push
add
add
jns
add
rcrb
jb
insl
add
mov
js
into
ja
add
pushl
add
pop
cwtl
add
xor
add
enter
lahf
add
mov
addl
lds
je,pn
add
pop
add
nop
add
lds
sahf
call
test
repnz
add
mov
add
sahf
jl
into
pop
push
add
and
add
and
add
pop
add
sbb
add
or
push
hlt
movsb
add
repz
push
and
out
cwtl
add
pop
add
outsl
add
insl
pop
add
mov
add
mov
jnp
mov
jbe
add
in
add
ret
mov
scas
pushf
nop
add
adc
add
xchg
add
enter
pusha
mov
add
sub
add
mov
pop
test
add
subb
test
outsb
sahf
in
add
dec
out
add
repnz
dec
push
dec
add
cmpl
pusha
add
lret
js
add
and
push
jmp
in
fiadds
outsb
fisubs
add
push
or
lods
jne
cs
ljmp
imul
add
icebp
scas
add
and
add
or
xchg
add
push
arpl
pop
cmc
add
sar
outsb
iret
es
fninit
add
rclb
add
hlt
add
ss
add
add
jge
add
imul
fidivl
add
adc
add
fcompl
dec
or
add
fstpt
add
sbb
xchg
js,pn
add
rolb
jp
inc
add
push
mov
mov
out
sbb
push
lretw
add
adc
add
push
mov
pop
cs
loopne
add
jno
add
iret
add
jno
add
scas
cmp
cli
dec
addl
out
and
add
call
add
in
add
andb
jle
add
jne
add
jb
add
mov
mov
add
lcall
mov
popf
add
je
add
outsb
insb
add
daa
scas
add
push
xchg
add
adc
add
cmp
add
adc
add
jmp
add
jbe
add
into
icebp
add
stos
add
movl
add
mov
add
or
or
insb
add
fbld
add
or
inc
add
aas
push
add
xor
pop
mov
idiv
add
movb
mov
add
loopne
add
je
add
insb
mov
add
sub
add
dec
add
push
outsl
movb
or
add
in
add
mov
add
pop
rolb
sarb
dec
add
mov
addb
inc
mov
add
mov
xor
jle
jns
mov
stos
imul
sub
add
imulb
cs
adc
or
adc
push
mov
ret
test
add
aam
add
jmp
add
add
add
add
inc
fs
cld
mov
add
cs
pusha
xchg
add
repnz
test
movl
stos
fcompl
add
cli
icebp
add
sbb
add
mov
add
incb
into
adc
scas
movsl
flds
out
mov
add
pop
add
pop
xor
add
xchg
jo
out
lahf
out
push
movsb
filds
ss
flds
inc
or
lods
lahf
add
push
lret
add
mov
add
js
add
shl
add
push
add
sahf
add
pop
lsl
imul
cmpsb
add
xchg
scas
add
enter
pop
push
add
mov
add
cmp
fisubs
movsb
add
and
add
mov
add
sub
add
jne
add
data16
notb
add
mov
sti
add
lcall
ds
mov
add
push
mov
add
or
add
or
add
addr16
neg
or
push
repz
add
pop
cmp
scas
add
add
mov
lds
bound
add
pop
sti
add
mov
insb
add
xor
scas
out
add
inc
push
add
std
add
iret
and
add
push
add
push
or
push
add
add
aaa
cmp
push
add
mov
aaa
ljmp
or
add
test
outsb
les
sahf
dec
jb
outsb
fsubrl
add
clc
mov
mov
push
add
iret
add
cmp
cmpsb
xor
add
and
add
int
add
mov
cltd
add
aas
add
xor
push
add
movsl
mov
adc
add
lods
stos
add
in
and
add
into
sbb
add
xchg
add
testb
or
data16
movsl
add
addb
imul
imulb
add
jg
add
xchg
add
mov
push
add
mov
jecxz
mov
mov
mov
out
jnp
repnz
popa
add
js
add
push
leave
add
or
xchg
mov
jle
incl
idivb
test
ds
inc
add
rolb
mov
loope
add
dec
add
iret
pop
add
mov
jb
jae
into
cwtl
fadds
add
stc
add
lret
cmp
add
das
add
push
cmp
daa
ret
mov
add
fdivrl
mov
jmp
filds
xchg
inc
add
or
add
and
add
push
inc
add
lcall
idiv
adc
out
cwtl
cmpsb
add
clc
add
mov
jl
jle
sbb
add
sbb
add
ss
add
lds
add
add
add
call
add
pop
ja
es
add
push
add
stos
mov
add
nop
in
sahf
call
inc
add
xor
cmp
add
xor
add
cli
mov
mov
cmp
outsb
or
add
pushf
ja
scas
inc
and
xor
mov
add
jmp
sbb
cmpsb
repnz
scas
push
add
cmc
in
push
lahf
pop
add
test
add
inc
sbb
mov
inc
jb
add
ret
aaa
add
addl
mov
add
push
dec
add
xor
add
sub
sub
repnz
scas
insl
add
sub
add
jo
add
push
inc
add
pop
add
add
repnz
add
mov
add
xchg
add
jbe
add
stos
in
mov
loop
dec
add
add
sub
push
shrl
push
xchg
and
add
cwtl
add
rcll
xchg
add
adcb
imul
notb
add
mov
add
pop
adc
inc
mov
ljmp
in
mov
out
add
nop
sbb
add
xchg
xchg
add
jnp
add
mov
add
cmp
add
xor
add
cmc
filds
ds
fdivrp
adc
push
adc
add
xchg
xor
sbb
cmpsl
add
push
pop
add
dec
mov
fisubs
idiv
jbe
and
ljmp
add
loop
push
repz
add
divl
dec
ljmp
inc
iret
scas
add
mov
pop
ljmp
mov
lcall
add
add
push
add
xchg
arpl
jle
mov
push
outsl
add
daa
add
loope
add
or
negb
add
jge
ret
add
jo
sub
incl
push
enter
lret
mov
mov
add
cwtl
cltd
add
in
add
pop
out
add
mov
add
mov
sbb
inc
in
pop
add
push
inc
add
jnp
add
out
into
pop
inc
add
test
add
sub
sahf
ds
cwtl
sahf
add
mov
add
fbstp
add
sub
add
clc
loopne
ds
cmp
push
xor
push
add
adc
add
imul
lret
jbe
cmp
lret
add
dec
repnz
xor
add
adc
add
push
mov
push
push
daa
add
pop
int3
add
daa
xchg
lcall
add
addb
cwtl
aaa
add
out
add
xchg
add
cmp
add
incl
jle
cmpsb
add
jge
xchg
cmp
shlb
mov
push
imul
push
or
jle
test
incl
cmp
inc
and
sar
out
push
jge
fidivrs
xor
add
fldt
add
repz
mov
add
inc
inc
ljmp
test
pop
fs
add
ja
add
int
add
xor
mov
cs
decl
add
xchg
and
pop
push
add
pushf
dec
add
mov
lds
add
or
adc
xchg
clc
sub
ljmp
scas
loop
ljmp
xchg
add
push
out
repnz
loop
lcall
dec
add
scas
inc
dec
pop
jmp
jg
cmp
scas
cmp
jle
mov
mov
jp
mov
dec
add
add
nop
add
inc
dec
or
cs
mov
push
fistps
mov
add
rcl
out
ja
std
push
outsb
dec
add
pop
add
add
xchg
mov
ljmp
add
mov
incl
jle
std
push
and
add
push
add
movsl
push
sahf
mov
add
flds
xor
mov
add
xchg
add
mov
std
jb
mov
outsb
mov
addl
fidivrs
add
mov
push
add
mov
or
outsb
in
xchg
add
adc
pop
add
aas
pop
add
ja
add
jnp
add
mov
ljmp
push
and
add
outsl
mov
add
xor
out
sub
decl
ss
outsb
aad
add
inc
inc
add
mov
add
jl
add
movsl
and
xchg
jle
add
dec
xchg
std
add
insb
add
and
pop
sahf
push
add
ret
stos
jnp
add
ret
jle
bound
hlt
jmp
int
decl
push
push
inc
fnstcw
sbb
out
xor
add
jb
dec
push
inc
adc
jno
jbe
add
or
add
ja
add
addb
xor
add
imulb
cli
shrl
jp
xchg
add
mov
add
scas
dec
add
push
jb
idivb
call
sbb
sahf
in
sbb
push
push
icebp
add
test
dec
add
test
cmp
and
into
mov
fisubs
jbe
cmpsl
add
mov
cmp
pop
movsb
aaa
add
out
add
inc
roll
mov
daa
std
outsb
pop
dec
add
sub
add
popa
inc
add
aam
mov
add
cmc
loopne
jb
inc
add
sti
dec
jle
jo
jle
mov
ds
cmp
call
push
das
and
add
lods
push
decb
pop
dec
add
xlat
or
std
notb
add
lret
add
sub
std
into
fsubs
add
sbb
add
call
int
add
idiv
out
mov
std
mov
cmp
cmp
add
mov
add
add
inc
aam
add
rcll
or
inc
in
ds
faddl
scas
pop
sbb
pop
scas
ljmp
xchg
add
jl
add
imul
pop
sub
fidivs
add
push
jl
xchg
push
jp
imul
lods
ss
or
add
out
add
xchg
outsb
dec
add
test
add
jle
add
mov
cld
inc
jae
add
jo
std
mov
add
and
add
test
cld
push
add
cmp
dec
sub
cmpsb
ds
add
jae
xlat
outsb
ret
and
xor
pop
mov
xor
scas
mov
add
xor
cs
dec
stc
aaa
add
sub
add
pop
add
and
dec
jae
add
dec
roll
dec
sbb
mov
xchg
add
test
add
pop
and
scas
mov
dec
add
jbe
add
push
or
scas
mov
mov
jecxz
add
jl
add
jecxz
outsb
movl
incb
mov
add
imul
jne
add
lret
aaa
add
mov
cld
xor
bound
sahf
call
pop
add
pop
incl
xor
scas
cmp
add
enter
shlb
std
sub
mov
cmp
scas
iret
scas
std
xchg
mov
std
inc
popa
sbb
dec
mov
jbe
inc
add
pop
inc
add
sarl
push
frstor
pop
aam
add
test
dec
xchg
add
jnp
add
xor
add
pop
add
mov
cli
add
and
cld
es
mov
std
lret
cld
cs
jbe
dec
add
iret
dec
xor
dec
sbb
cld
cs
add
fbld
sti
outsb
dec
dec
std
into
xor
jle
test
int
cld
dec
sbb
add
jae
bound
add
jo
dec
pop
xor
mov
outsl
mov
add
jecxz
add
xorb
push
cmpsb
xchg
add
xchg
add
je
add
jmp
add
lods
popa
add
add
push
adc
sti
scas
out
xchg
pushl
add
add
and
fisubs
add
pop
or
mov
or
scas
fsubr
sti
into
arpl
cld
push
adc
adc
std
ds
add
pushf
sbb
fs
add
scas
adc
jb
mov
sahf
lcall
add
std
testb
push
stos
push
std
out
push
jae
fidivrs
adc
into
loop
add
fidivrs
sti
push
cmp
sti
xchg
xchg
mov
sbb
movsl
and
lea
xchg
mov
ss
add
adc
sti
push
in
add
test
cld
jb
addb
pop
xor
jb
sub
scas
out
cmp
sub
mov
mov
fs
sbb
sti
jle
push
add
push
xchg
add
popa
cld
push
subl
mov
loop
xor
fdivr
ds
add
xchg
jmp
push
inc
xchg
std
mov
cltd
popa
cld
subb
outsb
enter
outsb
cld
dec
mov
add
repnz
std
cmp
add
int
and
sub
xchg
mov
inc
xor
cld
inc
mov
outsb
add
mov
cmp
push
sti
mov
push
stos
call
cmp
add
lock
pop
out
dec
mov
cld
sahf
pop
vshufps
add
stc
notb
cld
adc
mov
push
ret
sub
out
lock
jbe
add
cltd
add
in
xor
pop
ljmp
into
movsb
fwait
add
loopne
pop
mov
sti
add
cmp
into
push
add
ss
decb
add
push
cmc
ljmp
lea
add
mov
std
xchg
mov
and
sbb
xor
add
cmp
add
sbb
dec
add
mov
dec
stc
add
jnp
jbe
cmp
jecxz,pn
pushl
movsb
fimuls
lcall
std
dec
popa
lods
cld
mov
mov
repnz
ds
inc
mov
cs
ljmp
add
data16
cmp
add
test
arpl
out
inc
add
mov
pop
cld
andb
cmp
xor
mov
scas
xor
lcall
cld
repnz
sub
add
es
inc
std
repnz
roll
dec
xchg
push
insb
mov
push
mov
add
mov
add
leave
sti
push
stos
or
ds
jb
push
add
outsb
sbb
andb
inc
mov
mov
cs
mov
mov
mov
out
lcall
test
add
jmp
add
cmp
std
inc
jl
add
add
add
sti
push
lret
inc
sti
cs
and
mov
add
sub
xchg
cltd
cld
out
aad
add
movsl
jmp
mov
in
scas
cs
jle
push
cld
cmp
cld
sub
ljmp
sti
mov
lods
js
and
sar
or
add
xchg
iret
add
in
add
cmp
cli
into
lahf
mov
sti
push
loop
cli
push
pop
out
add
lcall
mov
cmp
incb
jbe
aam
xchg
jl
mov
cld
scas
lock
sti
mov
lret
loop
add
xor
dec
push
sahf
add
shll
incb
rcrb
add
sar
sbb
stc
sahf
jb
add
mov
adc
outsb
test
jbe
dec
cli
dec
incl
sti
adc
add
loopne
sti
push
xchg
scas
xchg
decb
push
jecxz
add
cmc
add
repnz
std
div
test
jb
outsl
std
cs
jp
sub
mov
mov
add
and
jbe,pn
std
inc
xchg
cltd
std
adc
iret
ljmp
jge
test
cld
stos
lahf
add
jbe
add
push
std
push
movb
icebp
leave
stc
out
movsb
pop
add
sub
add
push
xor
into
ja
pop
xchg
add
shr
cld
cs
incb
out
push
add
mov
jg,pt
add
popa
xor
std
adc
outsl
sti
dec
fdivrp
into
xlat
jb
repnz
adc
outsb
mov
add
pop
jae
testb
dec
jl
pushl
je
stc
push
push
test
sti
scas
nop
mov
fidivl
cli
cs
add
imul
out
mov
decb
pop
std
ljmp
stc
loop
int
scas
and
scas
shll
data16
std
scas
pop
loope
outsb
cmovns
cs
into
add
into
dec
push
cld
cli
into
jmp
into
fcomps
inc
cmc
sti
fidivrs
cld
repnz
cld
mov
mov
out
fs
add
pop
lods
add
jle
add
mov
add
adc
xlat
clc
xor
std
outsb
xchg
jp
push
inc
add
aaa
add
mov
cld
push
mov
xor
jb
push
stc
cs
xor
data16
add
aas
ljmp
out
stc
sahf
ljmp
into
es
stc
ds
add
test
ljmp
cld
out
movsb
pop
add
adc
cld
into
ds
scas
mov
mov
scas
mov
clc
jb
add
xor
add
stos
adc
add
sti
mov
outsb
xor
ds
ret
std
adcb
push
nop
adc
fisubrl
icebp
sti
jp
in
add
mov
push
stc
mov
lcall
adc
fimuls
add
sub
sti
into
xchg
call
sti
mov
jl
xchg
push
lahf
stc
jbe
cwtl
lcall
mov
cli
inc
clc
and
pop
jns
cli
push
adc
out
cwtl
cwtl
decb
push
cld
jle
xor
add
in
add
outsb
sti
clc
out
fdivrp
out
dec
add
imul
mov
stc
movsl
nop
pushl
jne
out
pop
testl
out
loop
xchg
scas
nop
add
fistl
ja,pt
add
pavgw
add
hlt
add
outsl
test
and
jmp
incl
stc
jle
push
stc
out
lcall
dec
test
cs
clc
mov
clc
mov
cli
out
outsb
fcompl
cs
cmp
shlb
push
inc
add
xorl
repnz
clc
cmpl
add
cmpsl
cmpsb
add
mov
or
sti
into
dec
mov
loop
inc
sti
cs
add
jmp
add
out
jmp
cld
outsb
mov
jno
push
mov
cli
ds
dec
add
and
stc
repnz
or
scas
into
std
sahf
add
sti
repnz
repnz
scas
jnp
pushl
push
std
xchg
lock
xchg
cwtl
add
fdivrp
rcrb
data16
sar
pop
outsb
add
xchg
cmp
mulb
push
pop
jecxz
scas
ss
and
dec
clc
ficomps
jl
cs
mov
cmpsb
popf
idiv
cmpsb
sbb
add
sbbl
add
jbe
add
inc
sbb
outsb
cltd
sldt
stos
iret
add
fisttps
add
sub
cli
push
fwait
xor
add
mov
and
imul
xchg
pop
xchg
jns
mov
add
xchg
daa
add
enter
push
mov
sbb
arpl
xor
cli
out
pop
faddl
sahf
test
add
popa
inc
sti
mov
add
mov
clc
mov
std
or
dec
addr16
out
sub
cmp
stc
outsb
nop
pop
cld
loop
sbb
push
xchg
pop
add
insb
and
mov
cld
jbe
and
out
cwtl
cmp
ss
daa
cld
pop
mov
add
dec
sub
dec
jl
cld
or
cli
outsb
leave
mov
incb
pop
sbb
push
mov
mov
jle
xchg
dec
loop
imul
jbe
mov
sti
dec
fnstenv
jp
inc
sahf
mov
fs
cs
xchg
mov
sbb
divl
dec
pop
testl
jmp
std
add
lock
push
lret
std
fmulp
out
push
jne
cli
ds
outsl
add
push
cltd
add
xor
es
cmp
push
or
cli
push
cs
cld
adc
fdivr
scas
pop
sar
dec
mov
outsb
adcb
pusha
out
stc
push
mov
add
mov
add
jbe
cld
push
inc
pop
sti
test
stc
lock
clc
dec
pop
addl
xchg
cmpsb
loope
into
mov
cli
cmp
adc
cs
xor
dec
sbb
clc
ret
add
xchg
rolb
push
push
pop
add
hlt
dec
add
test
out
jno
add
lret
jp
clc
sti
outsb
roll
sub
add
mov
jg
add
leave
fwait
add
add
add
sarl
jle
es
sti
loop
dec
imull
fdiv
push
daa
sti
inc
ds
std
out
jmp
add
mov
cli
push
jae
sub
ljmp
insb
sti
sbb
pop
sti
push
clc
dec
sub
sahf
jne
sti
dec
test
cld
scas
pop
push
imul
test
add
dec
rolb
lret
xchg
xlat
xor
or
loopne
add
mov
add
cs
insl
cli
pop
jno
idivb
popf
sbb
outsl
add
adc
cs
cli
push
mov
js
scas
sbb
add
dec
std
push
mov
idivl
pop
sti
scas
dec
jbe
dec
ljmp
xorb
stc
cmp
sahf
adc
shlb
imul
push
ficompl
cmpsb
shlb
add
dec
pop
add
mov
clc
pop
lret
bound
or
fiadds
dec
std
jbe
jmp
jecxz
add
inc
and
out
push
dec
negb
test
cld
jle
aaa
add
lods
js
jle
cmp
dec
or
cli
cs
inc
add
sar
ss
sub
cmp
std
cs
add
push
int
into
in
loope
loop
aad
into
mov
stc
mov
cmp
sbb
sti
data16
sti
mov
push
sahf
stc
sahf
inc
aam
push
push
jbe
cs
fiadds
cli
mov
stc
inc
fisubl
cli
mov
jnp
add
cmp
clc
test
add
xchg
sub
cli
out
adc
add
mov
pop
cmp
dec
xchg
stos
add
aad
cld
cs
insl
add
test
add
jmp
stc
sahf
scas
add
pop
testl
loop
sidtl
or
stc
mov
pop
divb
in
lret
pop
and
stc
stos
fs
pop
dec
add
mov
clc
outsb
adc
cld
mov
stos
add
jno,pt
fidivrs
jg
into
pop
add
insb
push
cli
push
lret
into
cmc
dec
add
imull
rolb
xor
and
dec
lret
sti
push
dec
add
xchg
test
stc
xor
imulb
shr
dec
sub
ss
pop
std
push
fstpl
out
ficoml
sti
cmpsb
loope
add
jmp
cld
ds
aam
into
inc
cmp
xchg
out
stc
mov
adc
neg
aam
mov
in
add
xchg
js
scas
push
jb
sahf
fsubrl
stc
mov
in
cmc
push
subl
add
insb
dec
add
adc
mov
lods
incb
sbb
jp
fdiv
mov
div
push
mov
xlat
cmc
scas
loope
cmp
lcall
lods
ss
inc
out
aam
sahf
mov
call
int
add
lcall
mov
inc
incl
loop
sti
into
repnz
fsubl
data16
and
testb
sti
xchg
insb
addl
push
sbb
pop
and
lcall
cmc
or
push
add
imul
add
mov
jle
jge
mov
cmpsb
add
test
add
je
outsb
add
outsb
sbb
mov
mov
lds
outsb
or
xchg
cmp
add
fcomps
ss
aas
jmp
out
popf
std
lret
std
outsb
jmp
pushf
add
mov
lods
sti
mulb
or
out
add
mov
cmc
cli
ss
lods
clc
sub
sti
fbstp
add
push
mov
scas
mov
cld
push
jns
incb
clc
or
add
dec
sti
push
ss
ss
out
push
fmuls
jp
add
mov
add
mov
sti
ss
jmp
inc
mov
lods
add
je
jge,pn
add
repnz
add
mov
cmp
mov
mov
aas
sti
fstps
out
push
pushl
jbe
divb
icebp
cmp
inc
dec
add
push
and
xor
imull
mov
mov
ret
std
jle
pop
add
out
cld
loop
push
cli
sub
add
nop
std
mov
jmp
add
mov
cs
in
add
xchg
cwtl
clc
or
imul
dec
mov
inc
in
add
test
cli
push
inc
clc
stc
jmpw
push
into
inc
testl
lods
cli
xor
cmc
negb
repz
add
add
mov
cmc
xchg
and
ds
push
notb
mov
cs
cli
or
cmp
cmpsb
fstpl
add
je
add
xchg
pop
testb
or
outsb
adc
clc
out
mov
sti
sahf
aam
cld
xchg
inc
stc
scas
push
push
notb
incl
mov
add
inc
xchg
or
lahf
dec
xor
std
scas
xchg
mov
push
stos
daa
add
lea
mov
enter
cli
xchg
dec
bswap
stc
sbb
jecxz
or
decl
push
std
jbe
lcall
jle
hlt
loop
add
jge
decl
stos
das
xchg
add
or
add
or
decl
pop
cmpsb
add
repnz
cmp
outsb
push
stos
std
push
nop
sub
clc
lret
out
jle
notb
faddp
hlt
xchg
mov
pusha
cld
scas
jmp
jne
push
das
mov
sti
fisubrs
loope
cmpsb
cli
fadds
ss
lcall
xchg
repz
lcall
jbe
cli
std
pop
and
clc
dec
iret
pop
add
push
mov
incl
xchg
adc
sbb
sbb
add
or
std
push
push
push
cmc
jp
clc
xchg
xchg
out
and
mov
sar
sub
stc
ret
decl
lods
cli
neg
es
mov
mov
add
aas
clc
cmp
push
lret
clc
or
std
push
testl
scas
dec
jmp
or
testl
xchg
cli
scas
push
test
push
push
addr16
sahf
lods
ss
dec
cmp
push
cmp
cli
arpl
add
jb
hlt
outsb
pop
shl
mov
sbb
jae,pn
idivl
stc
cli
scas
mov
sti
mov
sti
mov
scas
sbb
addl
mov
add
fnstsw
add
daa
lcall
sub
std
jb
cmp
divb
and
dec
pop
push
add
sbb
sti
xchg
push
add
and
jle
pushf
imull
movsb
hlt
push
stos
aas
add
xchg
enter
sbb
push
je
hlt
push
sbb
cmp
ret
cli
dec
push
repz
aam
add
mov
and
out
dec
add
cmp
and
std
push
clc
repz
xlat
imulb
call
mov
hlt
cli
mov
out
jb
aad
mov
stos
movsb
lea
scas
and
cmc
cs
and
sahf
je
clc
scas
cmp
add
jbe
stc
idivb
mov
out
fptan
add
sbb
scas
mov
decb
xchg
cmp
pop
rcll
repz
sub
test
fcmovnb
stc
cs
loop
push
outsb
int3
adc
cmpsb
jmp
cld
ss
std
cli
insb
mov
cs
in
add
jecxz
jo
stc
into
push
add
fs
cli
outsb
lea
clc
cmp
add
repnz
call
or
negb
mov
and
mov
bound
ljmp
cmp
add
es
jbe
ret
int
cld
cs
fdivr
scas
lret
xor
idiv
out
mov
add
divb
add
cmc
aad
mov
fdivrp
push
hlt
divb
sti
adc
es
adc
add
jne
cmc
pop
push
push
hlt
push
mov
lds
xor
test
add
scas
test
cld
outsb
stc
mov
inc
xor
testl
outsb
sbb
imulb
mov
hlt
inc
les
push
stc
cmp
notb
cs
clc
cmp
add
int3
out
cli
push
lret
cli
jle
pop
hlt
cmp
jl
pop
sbb
mulb
repz
push
psadbw
out
mov
add
mov
sti
sahf
mov
sti
aas
lret
xlat
jmp
cs
dec
incl
xor
jp
cmpsl
clc
push
cmp
out
push
add
push
pop
cli
push
mov
inc
add
movsb
iret
decl
adc
add
dec
add
stc
add
repnz
cmpsl
std
scas
pop
cmp
cmp
hlt
movsl
daa
std
mov
stc
sub
push
xor
idivb
mov
cmc
jno,pn
repnz
hlt
mov
js
clc
shll
repz
in
pusha
std
sub
add
pop
adc
out
pushf
rep
xor
clc
scas
flds
cld
mul
mov
cli
cs
jnp
mov
mull
and
std
cmp
repz
mov
push
dec
lret
or
push
loope
std
fidivs
add
imul
sti
mov
das
jle
jle
sbb
xor
ds
repnz
and
ret
repnz
pop
jg
scas
adc
shl
pop
push
add
mov
xor
xchg
std
cs
clc
sub
lds
cmpsb
call
scas
ljmp
movsl
push
jge
mul
sbb
cli
stos
cmp
test
xchg
jecxz
ds
mov
out
notl
jae
mov
inc
add
mov
push
adc
add
or
cs
cwtl
negb
jmp
jbe
add
pop
loope
add
add
add
adc
cld
loop
dec
decl
inc
aad
ficoms
add
fadd
cli
out
lock
pushw
mov
test
leave
shl
adcb
cs
push
add
fisubrs
testb
add
popf
hlt
scas
imul
clc
push
jns
hlt
jle
jns
outsb
cli
add
xchg
scas
scas
hlt
push
jno
cld
and
mov
scas
xor
or
mov
add
dec
cmp
stc
pop
cmp
xor
cli
adc
sti
sbb
mov
xor
jno
sahf
add
add
fiaddl
repnz
popf
or
out
into
adc
daa
sti
ljmp
add
leave
inc
hlt
loopne,pt
repnz
out
icebp
jle
jno
stos
es
add
jbe
cs
fwait
stc
inc
repnz
ds
push
cmc
bound
outsl
cmc
out
adc
pop
faddp
stc
pop
jecxz
cli
jbe
sti
dec
or
dec
pop
hlt
mov
call
nop
icebp
cmp
xchg
add
loope
inc
cmp
pop
clc
ljmp
clc
mov
mov
divl
pop
popa
sti
out
pop
xor
push
ret
push
stc
jle
xchg
cmpsb
ret
jle
add
cld
scas
adcl
into
mov
ljmp
or
push
jb
cli
push
fst
add
add
dec
jns
out
pop
std
mov
stos
xchg
hlt
lcall
stc
xchg
cli
push
cld
push
mov
lcall
aad
add
add
xchg
js
clc
outsb
int
jmp
xor
push
mov
mov
jp
ja
mov
cmp
fidivs
into
repnz
cli
xchg
or
cs
mov
xor
imul
push
jmp
div
fdivrp
fdiv
cli
outsl
scas
sti
dec
jp,pn
push
jne
repnz
mov
cs
into
and
icebp
out
icebp
clc
rolb
ss
cltd
sti
scas
cmp
repnz
sti
add
sbb
cld
rol
pop
add
in
iret
hlt
or
sbb
mov
lds
scas
cmp
sti
mov
ljmp
lret
add
jl
cmc
push
mov
div
scas
or
add
stos
jecxz
mov
pop
movb
int
add
les
decb
dec
lods
cld
cs
repz
jb
add
clc
mov
notl
push
jp
jecxz,pn
negb
mov
stc
lret
repz
xchg
cli
cmpsb
fistpl
jle
mov
testb
into
push
xlat
fidivl
xor
push
std
aad
repnz
faddl
jle
cmp
stos
and
add
pop
sub
jmp
stc
cmp
cli
mov
clc
add
out
out
cmc
fisubrs
lcall
call
mov
cli
into
pop
addb
adc
std
push
adc
outsb
int
std
ss
cld
scas
push
jp
and
push
cli
outsb
pop
aas
cmc
ret
cli
out
xchg
scas
lea
xchg
add
fmulp
pop
std
mov
add
add
cmp
add
xchg
repz
sahf
incb
les
sahf
cs
clc
scas
xor
bound
aad
ds
mov
cmpsb
repnz
pop
clc
repnz
inc
ljmp
dec
or
mov
cmp
repz
xor
lock
int
cmc
repnz
ss
out
jb
adc
cs
xor
repz
push
repz
repnz
movsl
mov
mulb
jbe
repz
sti
cmpsb
or
repz
mov
testb
sbb
sti
rorb
mov
shll
xchg
ljmp
out
cmc
xchg
adc
lcall
cli
pop
inc
popa
jmp
push
stos
ds
repnz
mov
mov
loop
imul
mov
mov
adc
clc
jb
add
daa
sar
jle
jne
sahf
scas
lock
inc
int3
xor
pop
data16
push
test
outsb
hlt
push
call
ret
mov
sti
push
hlt
icebp
scas
rcrl
push
das
and
scas
dec
loopne
push
xlat
fdiv
ret
cmc
cmpsb
test
cld
sbb
outsb
mov
push
adc
repnz
ljmp
hlt
cmpsb
adc
cmc
outsb
outsb
sub
lcall
repnz
and
mov
es
add
push
jl
outsb
notb
add
es
into
mov
cli
mov
jle
cmp
lock
ret
push
cld
out
add
mov
add
in
testb
add
mov
sbb
cld
shrb
out
mov
ret
cli
jbe
dec
repnz
mov
cmpsb
mov
ds
mov
cmc
cs
fcomip
jbe
int
out
pop
negb
nop
icebp
stos
ljmp
sbb
push
addr16
out
xchg
add
movsl
sti
cs
cmp
idivl
pop
test
into
lret
lret
les
pop
xor
cmc
mulb
jne
icebp
jns
add
out
repz
push
xor
ljmp
incl
inc
add
sub
repnz
mov
std
mov
std
jbe
pop
add
jl
cs
cld
orb
add
test
testb
dec
add
pop
cmp
jle
sub
add
ljmp
sar
pop
sub
mov
jo
ljmp
cld
mov
aam
push
fwait
and
inc
push
mov
cs
mov
jbe
sar
jle
or
cmpsb
mov
mov
std
mov
loop
cld
out
imul
mov
jle
fmulp
add
lcall
leave
stos
add
ret
jmp
cs
add
imul
adc
sti
xor
sub
outsb
dec
and
or
add
les
enter
addr16
test
clc
lcall
cmc
rol
sar
pop
or
jbe
hlt
cli
scas
mov
push
je
cli
xchg
pop
dec
cmc
dec
sub
cmc
push
pop
mov
cli
into
movsb
and
out
imul
inc
ds
sti
jp
adc
cld
bound
out
ficomps
cmp
outsb
ss
lcall
jle
add
pop
cmp
out
push
push
pop
lock
mov
cld
movb
dec
fisubl
push
aas
xlat
lock
inc
sahf
std
push
jo
sti
mov
rolb
mov
push
sbb
lock
test
xor
cmp
into
mov
sbb
cmp
cli
mov
push
cld
sahf
pushf
sub
jle
cwtl
test
stc
out
or
sbb
adc
add
push
fidivrs
pmuludq
push
rolb
scas
push
pushl
xor
sbb
out
outsb
cltd
jo
jbe
movsb
imull
mulb
mov
dec
out
jle,pn
repnz
add
pop
fs
test
std
push
idivb
idivl
in
mov
clc
into
add
sti
and
pusha
add
pop
push
lcall
call
cmp
jne
out
jbe
add
cmc
mov
mov
lock
add
div
into
int
add
xor
mov
mov
lock
mov
js
adc
stc
push
inc
movsb
loope,pn
pushl
jb
lcall
nop
out
cld
ret
out
xchg
push
clc
loop
imulw
repnz
ljmp
cld
fsubrp
loop
and
scas
add
aaa
jmp
add
lds
out
es
dec
adc
push
sbb
into
fdivrl
stc
push
xchg
imul
mov
fdivr
into
inc
out
cli
push
aam
jle
mov
and
repz
fwait
out
mov
mov
std
inc
sbb
scas
std
pop
lock
imul
aam
lock
pop
sti
mov
pop
cld
in
mov
andb
out
out
fisubl
xor
repnz
jb
std
or
push
loope
lret
repnz
sarl
add
add
stc
pop
pop
sti
bound
push
stc
out
sub
repz
int3
add
push
cmc
scas
stos
cmp
push
push
repz
jnp
sahf
adc
clc
jle
inc
pushl
mov
testl
pop
std
cs
cld
cld
into
dec
mov
in
mov
push
sti
fimull
hlt
jb,pn
add
inc
js
fidivrs
cmp
mov
add
out
adc
repnz
cmp
cli
outsb
jne
cld
and
shl
push
cmpsb
sbb
cli
fisubrs
mov
mov
push
decl
shl
xchg
lret
lock
xchg
or
pop
sbb
test
ss
cmc
es
cmc
cs
adc
push
dec
add
jno
notl
sbb
lock
lcall
hlt
sbb
ds
mov
imul
xchg
jmp
push
sbb
incl
pop
xchg
icebp
loop
sub
outsb
mov
repnz
mov
test
outsb
imul
repnz
mov
ljmp
mov
inc
sti
mov
cld
lret
add
jp
xchg
cmpsl
lret
and
add
cld
add
and
sti
ds
repnz
ret
ds
not
in
repnz
pop
test
out
dec
clc
sbb
stos
cld
push
sbb
add
rcrb
add
ljmp
cs
xchg
icebp
push
pusha
scas
lock
mov
bound
add
jge
lock
test
xor
add
cmp
filds
push
arpl
ret
lock
icebp
add
adc
jae
scas
loope
negb
xchg
std
ret
add
or
hlt
push
mov
xor
pop
lock
sub
add
in
add
pusha
add
dec
mov
ficoms
outsb
xchg
cwtl
add
xchg
dec
imul
test
stc
out
es
jb
ficoml
cmc
push
jno
repnz
and
test
out
scas
fidivl
mov
out
mov
add
dec
adc
or
mov
lcall
inc
mov
cli
iret
jl
out
sub
cmp
lock
popa
and
ss
and
lock
loopne
add
push
xor
std
stos
cmc
xor
mov
hlt
ds
jl
mov
loop
es
std
ficoms
push
dec
sbb
add
push
cs
stc
in
stc
mov
fwait
out
cmp
scas
call
mov
sti
sahf
mov
outsb
xor
ficoms
cmp
cli
sub
lock
pop
mov
ds
adc
cmpsb
in
bnd
cli
dec
scas
cltd
repnz
mov
add
mov
sub
jb
stc
ss
clc
xchg
repz
add
push
push
hlt
into
ljmp
cs
cmc
fsubs
cld
es
in
lret
add
dec
add
into
push
and
cli
mov
cld
add
testl
std
dec
pop
out
add
cmp
repz
sub
clc
add
mov
xchg
xchg
xchg
inc
sbb
sahf
pop
mov
push
cld
and
notb
dec
add
add
sub
cmp
add
adc
in
adc
negb
inc
add
add
dec
xor
add
pop
int3
add
add
repz
in
jle
mov
in
sahf
mov
cli
into
std
xor
xor
mov
popa
inc
cli
outsb
in
std
push
mov
out
or
scas
ret
or
push
jae
out
jae
cli
out
je
out
testb
mov
daa
sar
ds
int
ret
out
outsb
xchg
pop
lock
fadd
in
dec
mov
outsl
add
lcall
cmp
decl
inc
inc
out
push
push
stc
ds
jecxz
out
movsb
dec
testb
sar
stc
and
stos
aam
add
outsl
vptestnmq
jbe
int3
notb
mov
stc
push
sub
enter
push
push
sti
pop
fs
xchg
in
fdivp
add
out
mov
xchg
jg
in
fisubrs
popf
notb
imul
fiadds
add
hlt
mov
add
in
test
lods
icebp
cmpsb
pop
notb
inc
arpl
sbb
inc
clc
mov
lock
jno
clc
cmpsb
addl
xchg
add
repz
imul
push
xchg
shl
add
and
repz
pushf
scas
add
jmp
stc
add
mov
rep
cmp
add
bound
add
or
pop
test
sti
cmpsb
movsb
je
adc
add
into
arpl
repnz
adc
mov
dec
rolb
jle
in
subb
adc
icebp
cwtl
loope
fildl
hlt
pop
adc
push
sahf
cltd
out
inc
bnd
adc
imulb
add
mov
lock
inc
ret
push
mov
pop
stc
addr16
push
insb
xchg
jle
fwait
icebp
push
jg
add
jnp
out
xchg
in
add
cld
mov
bound
cmp
out
adc
std
loop
cmp
push
movsb
mov
jp
add
fdivrp
cmp
mov
cld
jle
inc
jmp
call
add
scas
push
cwtl
add
js
stc
mov
adc
imull
pusha
push
div
sbbl
xor
push
dec
int3
cli
inc
adcb
pop
xor
scas
es
or
stc
mov
sub
clc
inc
enter
roll
add
pushf
in
divb
out
loopne
imulb
das
call
cld
test
hlt
ds
add
daa
mov
xchg
pop
pop
add
pushf
filds
popa
repz
addl
xlat
adc
cli
testb
ljmp
pop
ljmp
dec
in
out
shrb
stc
mov
insl
std
push
mov
lock
cwtl
popf
std
and
add
mov
cmc
mov
push
call
into
add
jle
jecxz
jb
repz
outsb
mov
lea
push
jns
repnz
adc
divl
push
lock
add
not
mov
insb
repnz
std
adc
repnz
add
xchg
ds
cli
out
ret
add
out
ds
pop
decb
mov
in
jge,pn
icebp
dec
inc
add
bound
push
jmp
cmpsb
push
jne
testb
out
dec
xor
xchg
or
add
clc
adc
sti
out
fwait
test
bound
icebp
mov
mov
cmpsb
mov
jl
stc
cmp
pusha
in
cmpsb
pop
add
out
lret
jmp
sub
cli
icebp
push
add
out
outsb
test
mov
lahf
repnz
test
ds
add
push
inc
hlt
lahf
jmp
ss
icebp
dec
cmp
outsb
sub
in
mov
jmp
in
push
xor
std
dec
push
pop
add
inc
inc
cmc
mov
mov
and
xchg
imul
push
dec
clc
jb
cmc
in
pop
loope
clc
push
cmp
dec
in
sbb
xchg
jmp
mov
mov
jmp
out
mov
add
mov
cld
jmp
dec
mov
testb
pop
add
repz
jmp
mov
repnz
scas
sbb
and
sub
pop
xor
out
adc
out
cs
mov
sahf
adc
add
pop
push
pop
xbegin
mov
add
jp
add
dec
sub
lock
clc
mov
push
lret
fcmovne
add
fdivr
cs
hlt
cld
push
inc
out
out
sahf
xchg
stc
inc
cmc
jle
loop
sub
add
xchg
and
sub
dec
outsb
sub
mov
aad
in
sahf
adc
mov
adcb
add
jae
out
cwtl
dec
add
xlat
lcall
xlat
idivl
or
ds
repnz
cli
mov
mov
add
push
insb
add
repnz
in
push
dec
cwtl
cli
push
rcrl
xchg
pop
outsl
out
cs
mov
arpl
outsb
test
lcall
mov
rolb
scas
fbstp
jle
arpl
mov
adc
add
stos
inc
std
push
pop
xor
xor
and
outsb
leave
imul
lret
mov
sti
ds
or
adc
cli
jns
repz
sar
dec
mov
cmp
in
mov
inc
mov
push
mov
add
inc
cmp
push
fcomip
repnz
data16
mov
add
and
and
xlat
out
scas
adc
sub
outsb
enter
sar
add
lds
fiadds
ss
addl
out
mov
sti
fidivl
icebp
push
cmp
in
scas
jl
jmp
inc
ljmp
dec
add
sti
es
fcomi
into
jo
repz
ljmp
jmp
dec
cmp
dec
dec
in
ret
add
push
cmp
scas
orl
jmp
repnz
notb
add
cmpsb
ds
repnz
sbb
pop
sar
push
mov
mov
repnz
mov
jmp
sbb
fwait
sti
fs
pop
pop
and
lock
xor
cmpsb
and
mov
add
or
repz
add
xchg
add
popf
push
cli
cli
add
divl
aas
mov
clc
ficomps
xchg
mov
xor
push
jle
cli
sahf
fisubl
stc
dec
jge
add
in
jne
es
lcall
cli
sbb
cld
call
sahf
jae
cmc
mov
lock
mov
xor
lahf
lock
or
jmp
repz
add
jl
in
outsl
jmp
or
add
push
cs
jmp
sub
dec
push
bnd
mov
sahf
lods
jmp
inc
fdivp
scas
push
mov
in
scas
push
xor
dec
cld
xlat
stc
repnz
stos
jmp
scas
enter
mov
std
xchg
xchg
xchg
repnz
sub
repnz
outsb
aaa
sti
mov
or
cmc
lock
mov
int
mov
insb
out
adcb
jbe
mov
jbe
leave
out
dec
mov
add
cli
outsl
add
pop
mov
add
movsl
mov
cli
sahf
ret
cmp
and
push
sti
out
mov
add
or
sub
dec
sbb
clc
push
lcall
push
mov
pop
lahf
cltd
divl
outsl
repnz
xor
cs
or
testb
cmc
mov
jecxz
ret
cld
inc
stos
sub
outsb
out
idiv
xchg
leave
nop
call
push
je
lock
jnp
in
push
dec
mov
call
cs
std
mov
mov
mov
add
scas
lods
cmc
ss
pop
in
into
jns
out
push
fsubs
xchg
mov
cmp
add
hlt
fsubrp
movsl
clc
push
add
repz
out
in
mov
jo
dec
pop
stos
testb
lret
popf
dec
and
ljmp
loop
out
loop
daa
hlt
jno
jmp
outsb
mov
xchg
hlt
cs
aas
call
cs
add
pop
call
std
push
enter
pop
cli
push
or
outsb
lahf
div
jp
out
cs
repnz
pop
clc
into
fadd
stc
cmpb
jmp
gs
hlt
push
iret
jb
dec
daa
mov
jmp
mov
fs
hlt
ds
mov
outsb
jl
out
or
in
lcall
lock
jmp
addr16
ljmp
or
pop
cmp
add
mov
loopne
hlt
repnz
cld
sbb
fucomip
push
cmpl
mov
inc
cmpsb
xchg
stc
mov
add
out
outsb
sti
loopne
push
mov
out
push
subb
adc
divl
pop
jae
repnz
test
outsb
negb
cmc
push
push
pusha
clc
mov
jge
fsubrp
pop
std
ss
out
idiv
bound
icebp
dec
add
and
inc
mov
lock
repz
sti
mov
scas
testl
adc
repz
sub
adcb
mov
cld
fyl2xp1
sahf
xchg
popf
add
pop
ret
xchg
mov
add
faddl
cs
lret
fsubrs
jp
and
pop
popl
mov
lahf
mov
das
xchg
cld
cmp
mov
jge
sarb
mov
repz
sti
cld
xchg
dec
jmp
clc
or
call
scas
and
clc
jbe
imul
loop
lahf
add
in
mulb
out
xor
inc
hlt
jle
dec
in
pop
mov
out
sbb
sbb
pop
sahf
lock
rcll
out
add
jmp
jmp
add
push
push
cli
out
shll
add
lds
outsb
clc
cld
jb
roll
into
roll
cs
jp
cmp
into
repnz
out
sbb
lock
inc
inc
repz
sub
jmp
fwait
test
and
cli
cmpl
outsb
pusha
out
into
sti
icebp
clc
ds
mov
cmpsb
fstp
clc
out
lea
scas
lock
cmpsb
rol
mov
inc
cli
xor
out
add
mov
mov
outsb
aaa
imulb
or
ljmp
sbb
into
mov
dec
cld
push
movsl
sbb
and
out
lcall
push
into
or
jle
push
push
dec
test
add
std
dec
add
out
push
lock
mov
fsubrp
inc
out
and
hlt
xchg
sti
push
cmp
add
sub
cli
dec
imul
scas
mov
stc
data16
jbe
sbb
lds
add
lods
jns
mov
cld
rep
push
in
pop
into
xor
inc
pop
or
into
mov
sbb
push
mov
in
ss
icebp
sahf
jp
add
scas
stc
out
inc
mov
xchg
xor
int
mull
divb
imul
jl
cmc
jle
and
lret
ljmp
pop
out
push
adc
inc
pop
repnz
pop
mov
hlt
push
fildl
ljmp
in
loop
std
out
xchg
sub
scas
push
jmp
popf
loop
into
xchg
mov
jmp
data16
shr
out
push
push
ficomps
mov
xor
repz
jnp
sti
ret
in
push
inc
xlat
sti
rcrb
out
cs
bnd
int3
call
outsb
inc
add
mul
jbe
mov
push
roll
out
negb
outsb
sti
push
sub
cli
dec
scas
test
cmp
cld
out
xchg
pusha
add
jp
add
sub
negl
lock
stc
push
aam
idivb
test
mov
lret
and
push
icebp
jle
pop
jmp
mov
sbb
mov
stc
scas
mov
xor
sub
add
push
cs
cmpsb
nop
scas
stc
ds
mulb
leave
and
data16
fs
repnz
mov
inc
ljmp
jns
movb
add
mov
stc
sbb
push
sti
or
icebp
dec
adc
mov
idivb
and
push
mov
std
into
ret
fidivs
sub
mov
push
out
mov
cld
jmp
ret
ljmp
into
lock
mov
xor
sub
jmp
push
or
call
ds
lret
out
fs
add
push
hlt
ret
out
scas
adc
std
jle
mov
out
push
popf
sti
mov
mul
sbb
jae
into
pop
fdivrp
movb
add
int3
out
jle
outsb
add
add
out
stos
push
jmp
pop
push
in
adc
decl
daa
in
out
push
push
mov
ljmp
xchg
cli
push
in
idivb
inc
jmp
mov
inc
jl
jle
leave
clc
outsb
cmp
outsb
fwait
jl
outsb
pop
sahf
in
push
test
jae
sahf
sub
cli
testb
add
cmpsb
stc
mov
cmp
push
cmpsl
cmp
out
adc
cli
cmp
push
sbb
xchg
out
pop
test
lahf
jbe
paddw
push
testb
push
ljmp
scas
clc
dec
mov
lock
mov
dec
not
and
sahf
and
in
mov
mov
sahf
gs
cs
vucomisd
cmp
scas
popf
out
repnz
inc
add
sub
call
fisubrs
jns
mov
ljmp
scas
stc
pop
and
stc
mov
push
mul
jns,pn
jmp
push
addr16
mov
icebp
pop
mov
pop
sbb
ljmp
div
imul
adc
jmp
sbb
sti
mov
push
ds
imulb
mov
jge
mov
adc
mov
daa
cmp
mov
into
mov
das
in
push
jmp
add
mov
jmp
dec
dec
call
add
add
fsubrp
cs
xchg
cs
jmp
xor
add
xchg
shr
scas
ja
out
push
mov
cmc
outsb
sbb
repnz
sub
add
mov
adc
in
mov
jo
dec
xor
out
outsb
lret
cmp
in
mov
mov
repnz
push
idivb
sahf
cmc
mov
ljmp
dec
in
mov
ljmp
movsl
pop
imull
xchg
or
xchg
adcl
push
jg
jecxz
ds
push
jb
repnz
dec
lods
daa
cld
push
lock
sbb
outsb
and
in
cmpb
pop
push
lock
mov
imul
mov
mov
out
bnd
out
cmp
in
inc
ja
call
outsb
cli
fsub
scas
test
je
push
shl
cmc
xor
pop
add
pushl
mov
hlt
std
mov
gs
xchg
fwait
imul
jp
mov
cs
sub
bound
call
jmp
ja
jmp
fnsave
jecxz
push
mov
out
add
out
decb
jge
cmpsb
decl
jmp
xchg
jle
scas
pop
mov
test
inc
shl
scas
jno
add
jge
pop
mov
out
test
outsb
xchg
dec
ss
lret
repz
insl
fcomi
or
adc
in
xchg
in
cmc
jp
push
out
cs
sti
test
push
cmp
out
mov
out
add
cmpsl
jecxz
mov
add
mov
cmc
outsb
cli
cmp
stc
dec
adc
repnz
cmc
testb
push
inc
pop
add
lds
cs
add
inc
or
cmpsb
pop
add
leave
mov
call
add
sti
into
out
mov
mov
cmpsb
add
xchg
callw
cmp
xchg
pusha
test
loop
daa
icebp
push
pusha
and
stos
int
lcallw
jecxz
outsb
les
cmc
out
and
mov
out
loop
push
cli
push
pop
sbb
cli
scas
and
lock
testb
arpl
jns,pn
in
xor
in
sahf
rcr
sti
repnz
stc
sti
into
addb
dec
in
add
add
scas
pop
aad
inc
sbb
cmc
scas
push
pop
sti
mov
lahf
shr
cmpsb
jns
hlt
sahf
lret
or
in
push
test
cmc
and
xchg
mov
repz
xor
jmp
mov
ret
nop
jmp
ret
mov
mov
scas
sub
in
stos
scas
clc
mov
aaa
push
cli
into
mov
xchg
in
mul
movsl
out
push
add
mov
add
or
cs
push
out
jle
xchg
cmc
into
leave
test
push
out
add
ljmp
ds
mov
nop
loope
push
jge
ljmp
or
lahf
imul
or
pushl
xlat
shl
cmpb
outsb
and
std
lcall
hlt
add
push
cld
or
cmpsb
out
dec
sbb
push
cli
mov
sar
dec
addb
adc
cld
mov
pop
cmc
sbb
rolb
cmpsb
loopne
ljmp
push
in
lret
xchg
push
arpl
lret
out
sub
add
xor
lock
loop
repnz
sbb
dec
fiaddl
add
pop
arpl
xor
jecxz
or
in
cmp
mov
cli
cmp
jecxz
pop
iret
lock
mov
add
out
mov
cwtd
mov
add
dec
repz
push
xor
xchg
adc
hlt
and
push
in
mov
fcomps
insl
fdivrp
xor
loop
mov
popa
testb
insb
clc
and
mov
xor
sahf
mov
out
jb
loope
mov
lock
loop
adc
call
and
xchg
cld
stos
mov
cmpsb
rolb
ljmp
out
xchg
jg
pop
sbb
out
dec
int
clc
jnp
es
in
bound
out
es
leave
add
cmc
call
decb
clc
jle,pt
jmp
leave
cmp
cs
cmp
movsl
mov
outsb
jmp
test
in
int
std
add
or
sub
addr16
xchg
xor
mov
negl
jno
cs
cmp
jecxz
and
xchg
xlat
jp
scas
xlat
stos
std
xchg
and
call
cmp
call
fsubrl
dec
and
out
cs
add
push
jae
ljmp
jecxz
ja
lcall
jle
stc
dec
lret
sahf
xchg
lahf
std
xchg
or
cs
in
dec
dec
notb
dec
jmp
jle
and
push
jge
add
sub
scas
fidivrs
icebp
ds
push
hlt
add
je
adc
out
decb
idiv
outsb
iret
mov
push
clc
adc
sahf
mov
out
gs
add
pop
push
jmp
xchg
iret
add
sarl
cmp
out
mov
mov
sahf
nop
sub
gs
negl
stc
in
lahf
pop
jmp
decb
pop
idiv
outsl
scas
repnz
mov
fidivrs
add
gs
call
mov
inc
jecxz
xchg
sub
out
inc
add
lret
out
shlb
ljmp
inc
pop
loope
pop
inc
testb
stc
hlt
scas
out
in
out
jle
pop
hlt
xchg
das
in
loop
cwtl
sti
outsb
int3
mov
add
inc
mov
fidivrs
sti
xchg
std
sahf
or
adc
cs
icebp
icebp
out
xchg
dec
push
std
jb
push
out
xor
add
sbb
ljmp
fdivp
fdivp
pop
lock
push
ret
mov
cmp
rol
xchg
sti
fiadds
cmc
dec
push
ds
scas
andl
push
stos
ljmp
or
push
dec
mov
stc
dec
ficoms
ljmp
or
xchg
test
call
push
pop
scas
in
cwtl
mov
mulb
sti
pop
out
jae
out
bound
jle
fsubp
lcall
pop
jb
jbe
aad
addr16
jmp
mov
or
mov
pop
add
xor
std
jecxz
cld
inc
subb
jne,pn
in
jle
in
loope
add
fisubs
out
jg
lock
outsl
out
mov
fs
mov
add
xorb
lcall
xchg
insl
add
sub
add
and
scas
stc
xor
fisubs
push
pop
aad
data16
ficomps
jbe
mov
mulb
inc
in
out
push
test
inc
push
shr
push
les
sub
sbb
ss
repz
mov
in
lret
out
sub
sbb
ljmp
ds
dec
xor
loope
jns
in
test
scas
imull
xchg
jl
jmp
outsl
aam
ret
negb
in
testl
pop
out
movsb
leave
in
jb
loopne
sbb
cld
out
pop
out
pop
movsb
sbb
push
adc
cli
pop
addr16
mov
icebp
repnz
mov
mov
sub
cs
jno
xchg
into
not
lret
cmp
dec
or
out
scas
pushf
mov
jb
lahf
add
scas
xchg
testl
xchg
add
ret
mov
stos
push
sbb
fdivrs
ja
loopne
ret
call
fimuls
sbb
sahf
push
fabs
mov
cmp
mov
popa
jmp
push
insb
inc
stc
out
aam
lock
push
jo
out
leave
jmp
and
add
inc
jecxz
clc
cld
hlt
rcl
aad
jge
add
and
std
dec
outsl
xor
call
cs
pop
mulb
fisubrl
out
mov
out
pop
sub
std
data16
xchg
lret
add
push
jmp
inc
jb
add
ljmp
out
sbb
call
mov
hlt
sub
add
xchg
call
scas
sub
in
scas
mov
jmp
add
sar
scas
inc
std
out
cs
jmp
jle
jge
push
add
outsb
push
mov
add
mov
jmp
jo
ljmp
cmp
ljmp
loop
sti
add
out
dec
mov
dec
out
cs
dec
divb
pop
out
cmp
movl
out
lahf
scas
hlt
jb
mov
out
lret
xchg
jne
repnz
jge
out
xor
cli
pop
mov
xabort
cld
dec
lcall
imul
notb
pop
loopne
lds
into
add
loop
rcrl
add
cmp
jmp
cmp
ljmp
adc
jg,pn
stc
xchg
std
jle
out
repz
adc
fistpll
push
sti
inc
imul
xchg
loopne
pop
push
clc
inc
jns
out
aas
int
xchg
fwait
jnp
push
pusha
or
mov
jb
add
xchg
cmp
xor
outsb
fcomp
cli
push
mov
loopne
inc
clc
outsb
xchg
inc
add
or
inc
repnz
push
test
aad
loop
les
xor
clc
fidivs
add
loop
push
inc
xor
cs
out
cs
add
xchg
idivl
mov
repz
push
lcall
jg
loope
negl
lock
orb
bound
jae
scas
push
inc
in
out
inc
icebp
inc
js
std
sbb
sub
ds
jmp
jecxz
je
cmc
bound
mov
data16
out
push
push
repz
push
jmp
outsb
cmp
inc
dec
aas
jmp
add
decl
dec
stc
mov
out
repz
les
neg
inc
sar
dec
xorl
out
stos
ljmp
mov
loopne
scas
pushf
jecxz
adc
jecxz
test
jbe
mov
std
out
push
out
scas
jbe
add
mov
stc
cmpsb
adc
out
jle
dec
add
popa
jecxz
stos
adc
loop
ss
outsb
lret
repnz
add
sahf
dec
inc
cmc
mov
cld
sbb
jg
in
bnd
mov
and
in
pop
inc
call
jle
dec
lcall
lds
jecxz
ljmp
imul
pop
inc
cld
jmp
push
mov
inc
add
jge
dec
loopne
into
lea
xchg
or
and
scas
add
gs
xor
out
mov
test
mov
lcall
idivb
cmp
pop
lods
inc
loope
dec
in
loope
lods
mov
repnz
into
pop
call
push
fiadds
in
push
and
out
cs
push
push
js
mov
out
inc
icebp
cmp
aas
in
fdivrs
dec
loop
loope
adc
testb
mov
mov
testb
int3
sti
pop
sub
cli
scas
mov
int
dec
data16
jne,pn
fbstp
jb
repz
addr16
es
in
pop
or
push
jmp
add
xor
cmc
push
inc
cli
cli
subl
into
mov
data16
nop
dec
repnz
adc
scas
je
loop
mov
test
ret
testl
mov
fdivp
enter
call
add
movsb
jno
cmpsb
or
inc
in
pop
mov
ljmp
out
add
aas
in
incl
in
jl
in
fists
repnz
xor
lock
sti
gs
or
in
into
popa
out
inc
cmp
pop
repz
cs
ljmp
push
stc
push
push
lret
rcr
out
jns,pn
loope
or
add
mov
ds
push
jmp
iret
loop,pn
pop
jecxz
push
cs
ficomps
push
test
dec
jo
loopne
hlt
sub
add
repz
mov
in
out
jmp
xchg
and
mov
insl
mov
call
sub
scas
sahf
out
scas
xor
ret
idiv
sbb
or
mov
test
xor
fidivrl
mov
xchg
icebp
mov
testl
out
xchg
hlt
cld
lcall
add
mov
in
in
sbb
mov
icebp
stos
outsb
gs
mov
imul
or
jnp
hlt
add
idivl
inc
jmp
and
out
lret
in
mov
or
adc
scas
aas
incw
shl
sahf
jae
out
ljmp
cld
inc
ljmp
xchg
ljmp
or
mov
lcall
or
push
test
xchg
pop
in
xchg
and
cli
shrb
mov
mov
cli
repnz
testl
out
dec
cli
scas
lcall
xor
fwait
repnz
daa
ds
ljmp
add
iret
loop
mov
sti
rorb
sahf
jmp
push
sahf
lock
xchg
imul
pop
cmp
imul
scas
cmc
test
sbb
or
fiadds
into
mov
mov
jmp
sbb
fisubs
fs
jne
bound
repnz
jno
icebp
ret
clc
xor
xchg
stos
add
sbb
jbe
lea
fisubrs
cli
pop
pop
out
clc
ficomps
fucom
inc
sub
jecxz
int
dec
ljmp
faddp
xor
ret
cld
into
cmp
add
xor
outsb
loop
out
dec
cmp
orl
mov
roll
out
test
clc
into
xchg
mov
loopne
test
inc
out
into
dec
push
cmp
jnp
pop
sar
repnz
in
mov
jmp
scas
cmp
xchg
jne
hlt
idivb
cmc
clc
outsb
cmpsb
lret
add
les
add
mov
jle
jecxz
add
add
adc
jmp
mov
iret
hlt
xchg
add
push
es
sti
scas
add
and
filds
in
push
loopne
shr
scas
add
in
jbe,pt
fistpll
sub
loope
xchg
nop
out
xor
lock
mov
cmc
jbe
clc
cld
mov
jl
outsb
out
xlat
lock
sub
cmc
push
es
lock
out
mov
enter
jl
sti
outsb
call
pop
stos
cmc
add
push
loopne
rcr
out
mov
jmp
or
fsubrl
das
xchg
loope
xor
push
inc
add
sti
outsb
hlt
outsb
std
jmp
or
push
add
xlat
scas
add
fsubrs
repz
dec
sub
lret
in
sub
out
out
push
hlt
cmc
push
jmp
fnstsw
aad
icebp
dec
stos
clc
add
dec
add
incb
mov
repnz
out
push
loop
mov
jmp
add
fucomi
mov
mov
dec
int
fisubs
insl
jg
cmpsb
jecxz
loop
leave
or
fbld
mov
out
pop
jmp
outsb
mov
frstor
inc
icebp
mov
out
jb
dec
inc
pop
cmc
xchg
inc
out
ss
fisttpll
push
out
out
or
dec
and
cmc
or
fmull
mov
or
sbbb
xchg
lret
dec
icebp
dec
sub
outsb
push
pop
jecxz
sbb
outsb
inc
lret
add
incb
rcr
add
int3
call
shl
add
xor
pop
add
sahf
jg
add
lret
mov
out
imull
pop
xor
out
push
xlat
ficomps
cmpsl
add
cmp
repz
or
loopne
movsb
in
push
ss
jns
loopne
je
fldl
sbb
out
cmp
sub
ficomps
jmp
push
hlt
into
mov
xchg
inc
cmp
repnz
lock
and
push
push
xchg
add
xchg
faddl
fsubr
cs
jp
inc
cs
mulb
std
jle
stos
hlt
mov
inc
pop
cmc
jbe
inc
loopne
sarl
push
add
pushl
rcrb
loope
xor
loop
pop
cltd
cmc
movb
sahf
jp
repz
jmp
mov
push
int3
pop
fisttpll
sti
jp
mov
movsl
cld
pop
ret
inc
out
scas
pop
test
ss
push
fsubr
jp
out
sahf
movsb
xchg
repnz
cmpb
dec
xor
fidivrs
mov
in
divb
loope
sub
es
mov
jecxz
jge
incl
mov
xchg
fcomi
push
movsb
fstpt
sub
xchg
insl
push
out
sub
icebp
repz
dec
xor
out
outsb
test
faddp
lods
pop
jecxz
jp
in
jle
ja
fisubrs
pop
ficomps
popf
jecxz
fmulp
stos
in
outsb
leave
mov
push
gs
jbe
jge
xchg
jns
add
roll
xchg
lahf
add
sar
scas
fstpl
out
xchg
cmpsb
bound
jecxz
push
xor
add
xor
add
clc
xor
add
loopne
xchg
fisubs
lock
jmp
jle
cmc
stc
out
mov
push
repnz
dec
lret
sub
and
rolb
test
ja
repnz
cmp
jp
push
adc
daa
out
lcall
divl
lret
add
fistpll
fs
ljmp
add
dec
out
addb
jle
lcall
std
lret
fucomp
je
faddl
inc
div
push
jno
out
push
xor
out
std
out
scas
pop
xchg
out
pop
dec
add
addr16
stos
pop
mov
add
inc
or
mov
out
lock
imull
sti
into
ret
enter
in
das
push
in
push
insl
in
inc
in
in
into
out
fistl
les
ljmp
pushl
jmp
cmp
icebp
outsb
test
add
sbb
add
hlt
cs
xor
pop
cltd
fidivrs
jo
xor
and
out
pop
mov
jecxz
jecxz
ljmp
enter
pop
ljmp
and
push
sbb
loopne
and
sti
push
mov
and
out
loop
cli
mov
int3
in
cmpsb
incl
mov
push
repz
jmp
xchg
push
es
dec
imul
cmp
mov
sarl
mov
call
ss
mov
and
mov
xchg
cmp
out
adc
stos
mov
add
std
pmaxsw
dec
cltd
out
pop
jb
mov
dec
out
out
aad
out
andl
in
loop
ficoml
mov
cli
out
cs
repnz
inc
decb
sarl
rcll
inc
mov
std
mov
fsubl
xchg
lock
leave
cs
mov
in
into
push
adc
inc
and
ficompl
xchg
inc
stos
hlt
add
stos
mov
in
cmpsb
outsb
pop
add
and
outsb
inc
jb
push
dec
fwait
std
mov
mov
add
sub
ss
call
scas
dec
call
ljmp
addb
adc
std
ss
mov
in
and
in
outsb
fidivl
in
icebp
loopne
mov
lret
in
fidivs
mov
fldcw
je
std
mov
stc
jbe
loopne
cmpsb
pop
mov
hlt
cs
add
andl
icebp
mov
scas
orb
cwtl
and
add
rcrb
call
jbe
add
mov
adc
into
pushf
es
test
in
fimuls
ljmp
sbb
xor
jle
pushf
loop
mov
or
pusha
nop
fidivrs
jge
sti
sahf
and
icebp
data16
jmp
adc
testb
add
out
in
cmp
stc
mull
add
pop
in
sahf
leave
mov
dec
mov
je
jmp
clc
data16
fbstp
sbb
int
ret
fsts
push
cmp
in
jge
test
sbb
in
scas
int3
jmp
add
xlat
loopne
pop
push
in
lcall
push
or
ss
and
mov
fsub
scas
xchg
test
xor
hlt
xchg
lcall
push
jp
in
loopne
add
pop
outsl
jecxz
mov
cmp
ficoml
sub
out
stos
inc
cld
ljmp
icebp
lcall
out
push
inc
fucom
mov
cwtl
repnz
insb
inc
push
sub
into
andl
mov
fs
out
fwait
sbb
bnd
mov
jbe
jmp
add
neg
dec
push
out
fsubs
cld
out
mov
fistpl
xor
call
fisubs
iret
repz
add
inc
cld
cs
out
or
dec
out
scas
cld
jp
xor
scas
sbb
pop
daa
in
jne
testl
sbb
incb
lahf
mov
loop
test
outsb
rcr
jecxz,pn
imull
ret
dec
lods
mov
fcompl
in
mov
cs
movsb
sti
out
outsb
int3
outsl
stc
push
pop
in
sub
outsb
test
push
push
jmp
out
xchg
outsb
add
repnz
test
jle
gs
fsubrs
ljmp
pop
stc
xchg
cmp
ljmp
xchg
add
adc
push
out
or
fisubs
or
push
mov
repz
loop
sub
jecxz
popa
adc
ds
nop
out
lods
out
lcall
clc
fsubl
sbb
std
scas
inc
pop
add
fcmovb
add
aaa
sahf
ljmp
arpl
xchg
ss
cmp
in
or
std
outsl
lock
out
inc
stos
out
lea
std
jb
ljmp
rclb
add
enter
or
scas
cmpsb
repnz
pop
pop
inc
fisttps
pop
jp
pop
push
or
cs
outsb
xchg
repnz
add
xor
loopne
jp
idivl
pop
add
xchg
shr
ljmp
out
inc
fildl
repnz
xchg
push
dec
add
lds
cli
or
out
xchg
test
xor
test
mov
imull
xor
jle
inc
dec
jb
scas
xchg
iret
in
ret
mov
xor
push
add
outsl
clc
out
cs
xchg
add
sub
call
xchg
jno
out
mov
push
ja
xchg
in
jecxz
cmpsb
out
icebp
push
call
sahf
fsubrp
faddp
mov
inc
fmuls
jns
repnz
cld
scas
sub
out
lret
mov
cmp
outsb
xchg
div
xchg
out
mov
adc
push
div
in
or
push
hlt
cmp
adc
add
jns
call
xchg
ljmp
cmp
fcomps
pop
in
jle
push
sti
cs
lret
xchg
add
sub
into
fiadds
sar
xchg
out
mov
cld
sahf
xor
clc
data16
adc
fdivs
in
xlat
shrb
out
insl
cli
out
mov
jecxz
mov
clc
mov
push
fs
fisubrs
and
cli
sahf
aas
fwait
repnz
hlt
sbb
fcompl
push
loope
inc
jae
cs
std
push
fidivrl
ljmp
fs
out
dec
xor
pop
out
in
hlt
sahf
pop
inc
insl
icebp
jbe
fdecstp
pop
xorl
call
push
xor
scas
push
pop
clc
dec
add
xchg
sti
pop
aas
or
dec
jg
pop
pop
sbb
jno
clc
mov
insl
fnstsw
mov
fildll
decb
sub
cs
add
pop
psraw
pop
xor
fdivp
xchg
icebp
and
lods
xor
ficoml
xor
fisttpl
or
decl
sti
shl
pop
xchg
cli
pushl
nop
fdivr
mov
sbb
outsb
push
dec
sti
ret
fbld
clc
xchg
jle
lret
add
or
je
xlat
into
pusha
popf
repnz
push
shl
repnz
add
in
mov
add
jb
imulb
lahf
call
loopne
mov
test
mov
es
fstpl
push
popf
in
mov
jecxz
insb
test
push
mov
das
ficomps
mov
fsin
dec
add
out
cs
std
push
sbb
and
es
int
dec
xor
inc
aam
icebp
ds
mov
and
loop
andnps
ret
hlt
pop
ret
pop
movsl
cli
cs
mov
lcall
loope
gs
mov
xchg
test
add
scas
shl
in
fldcw
loop
out
xor
popf
in
enter
ret
push
lock
push
mov
cli
cmpsb
mov
out
push
shlb
fmull
adc
in
test
jecxz
sub
add
ja
fistps
cmpsb
loopne
es
hlt
dec
mov
lret
fmuls
sub
repz
sbb
push
inc
cld
out
mov
aaa
sub
add
in
jle
testb
vcvtpd2psx
sbb
push
jae
test
movsl
call
cmp
add
movsl
push
cmc
lret
out
and
xchg
test
cld
outsb
movsl
sbb
stos
add
jmp
cmp
jecxz
cmp
mov
shl
adcb
dec
and
cmc
ss
cmp
loope
ja
sub
icebp
mov
jbe
std
sahf
data16
adc
cmpsb
out
fisttpll
pushl
mov
rorb
stos
ljmp
int3
cmp
out
lahf
dec
fldt
aaa
fidivl
and
push
xchg
cli
jne
fstpt
imul
pop
and
fsubrs
mov
sar
xchg
jbe
cld
lret
jmp
mov
div
adc
sti
jmp
sbb
push
loop
fstpl
into
xchg
add
fwait
in
pop
sahf
out
lods
inc
lock
adc
scas
not
out
xchg
hlt
arpl
xchg
xchg
cmpsb
pop
lret
fnstsw
arpl
cli
mov
mov
fldcw
add
out
insl
mov
add
lods
fisubrl
popf
jb
data16
out
mov
popa
hlt
scas
fsubl
fxch
divl
in
mov
cwtl
fsubs
mov
add
js
std
inc
hlt
push
out
gs
mov
sbb
repz
jmp
in
add
mov
fucomp
cs
out
ret
mov
testl
cli
rcl
sahf
loope
add
pop
xchg
add
ja
stc
out
pop
fcoml
lret
pop
jno
repnz
mov
in
mov
stc
sahf
jne
fsubrs
dec
jp
test
fcoms
mov
in
push
shr
mov
repnz
cmpsb
or
out
inc
ss
add
in
and
repz
std
notb
push
add
aaa
add
xor
inc
fmul
jmp
xor
std
adc
lock
cmp
fnstcw
mov
fildll
lret
pop
lock
ja
outsb
rorb
icebp
data16
imul
std
mov
add
ss
outsb
pop
loopne
inc
lret
es
fucomp
out
rclb
xchg
mov
dec
add
and
jmp
sub
cmc
mov
sahf
out
cmpb
shr
scas
hlt
fildl
loop
jae
jg
fucomip
jo
cld
dec
out
jo
stos
pop
scas
or
fimull
sbbb
or
sub
icebp
ret
add
stos
push
sbb
outsb
popf
fst
data16
insb
out
xlat
mov
movb
es
push
incb
test
push
lock
je
push
and
out
pop
push
sub
cld
push
and
xchg
pop
sub
out
js
ljmp
cltd
cli
cmpsl
mov
cmpsb
mov
jmp
inc
dec
sahf
and
ljmp
lcall
loop
dec
in
loopne
sub
fisubs
inc
test
in
jle
push
call
cs
lock
lods
jmp
sub
xlat
mov
jo
push
ljmp
and
into
sbb
scas
fsubrp
xor
loope
inc
mov
push
leave
cmc
fisubl
mov
xchg
out
cwtl
sub
cs
out
mov
add
sub
add
pop
dec
cli
mov
cli
scas
ds
mov
movsl
inc
in
out
sahf
cld
dec
xor
call
decb
adc
jp
lock
test
mov
repz
jge
fmull
adc
repz
xchg
gs
push
lock
or
sbb
push
push
fcoms
inc
sub
xlat
sbb
jmp
dec
test
out
stos
inc
push
call
dec
pop
xchg
in
dec
movsl
aad
pop
mov
mov
sbb
scas
push
aam
outsb
lret
dec
jecxz
xchg
xchg
repnz
in
lret
fists
cmc
dec
nop
sub
push
pusha
stos
icebp
cmp
push
add
sbb
jnp
mov
pop
out
cs
clc
xchg
mov
in
out
mov
dec
and
push
repnz
jle
int3
push
mov
in
fiaddl
out
cs
jecxz
out
in
cld
inc
jmp
inc
imulb
cmc
add
mov
hlt
out
jecxz
aad
mov
int3
jecxz
leave
xchg
jle
and
jmp
out
mov
fcoml
inc
in
xchg
mov
out
jns
aam
es
inc
ds
outsb
rcrl
mov
imul
jecxz
fcomp
pop
inc
jmp
scas
loope
cmc
bound
sbb
fimull
ds
jns
fldl
jo
mov
fdivrs
mov
ljmp
sub
dec
pusha
jp
xchg
clc
xlat
ds
inc
out
dec
fwait
addb
push
sub
mov
testb
pop
sahf
in
mov
xchg
mov
clc
aam
out
loop
loopne
cmp
fstpl
cmc
outsb
cmpsl
div
cli
sub
fisubs
shll
fidivl
inc
outsb
aam
lea
xchg
das
lcall
gs
jecxz
mov
std
cmpsb
sub
cmp
repnz
repz
cs
stc
dec
dec
mov
dec
xor
fsubrl
sbb
inc
mov
fisubrs
mov
fnstenv
lret
cmp
pop
dec
stos
out
or
fistl
into
iret
fistps
and
repnz
xchg
frstor
dec
add
sub
fnstcw
bound
ljmp
push
fisttpl
jno
cli
cmpsb
jbe
fucomip
lcall
sahf
mov
outsl
cmc
divb
ret
clc
and
jnp
outsb
mov
ffree
cltd
dec
neg
call
mov
jle
cs
neg
push
loopne
outsb
fptan
loope
dec
xchg
lock
aad
repnz
jnp
sahf
sbb
and
pop
shll
xchg
xchg
ljmp
mov
cs
jmp
in
std
es
out
and
dec
ljmp
insl
and
fimull
ss
jbe
lock
into
fcomp
jp
mov
adc
jp
push
aam
mov
fistl
scas
gs
movsl
bound
in
in
sbb
mov
mov
mov
bound
cld
repz
ret
in
aam
in
test
xor
dec
pop
out
push
mov
std
push
sub
testb
call
shrb
fdivl
push
cli
in
jge
jbe
ds
push
mov
out
pop
fisubrl
mov
out
call
mov
pop
or
jne
mov
cld
scas
sub
call
sub
xchg
aad
loopne
std
sahf
jmp
mov
outsb
movsb
testb
jle
rorl
and
rcl
sahf
push
push
sbb
cmc
repnz
jae
into
repnz
rorl
int3
repz
adc
ret
adc
call
jle
and
stc
mov
sbb
repz
into
xchg
cld
rcll
dec
adc
loopne
test
fcmovne
jnp
lock
jg
ljmp
imul
out
sbb
mov
in
shlb
cs
adc
mov
ret
or
in
mov
rcr
mov
sub
cs
push
cld
out
adc
into
mov
imul
ljmp
testb
jae
cs
in
cmc
inc
je
fadds
cs
jle
mov
inc
pop
aam
incb
jmp
jns
clc
push
aaa
mov
xchg
es
outsb
dec
dec
fisubrl
pop
push
pop
xchg
in
bound
hlt
push
xorl
cmc
jp
lret
add
push
ljmp
jmp
add
ret
adc
mov
pop
jmp
bnd
push
ficoms
fimuls
sahf
pop
faddl
push
mov
repz
jns
out
add
repz
rcl
pop
mov
xlat
pop
push
jbe
or
jg
scas
ljmp
out
pusha
outsl
add
int
fiadds
popa
pavgw
in
mov
add
push
in
out
imulb
inc
aad
ljmp
jbe
sahf
sbb
jb
xlat
imul
adc
scas
xchg
in
incb
notl
mov
shlb
enter
jecxz
add
cld
data16
fisubrl
and
fsubrp
or
cltd
hlt
out
data16
out
hlt
call
push
jg
out
out
out
je
es
sub
divb
clc
cs
cmc
sub
hlt
in
and
add
xor
mov
mov
imul
arpl
sbb
mov
test
div
bound
in
scas
ja
sti
inc
ret
xchg
adc
xor
sahf
insb
or
mov
xor
scas
enter
and
push
and
pop
testb
inc
out
add
cli
fsubrp
dec
ljmp
inc
loop
mov
in
movb
fdivr
lods
push
out
cmpsb
and
bound
xchg
pop
ljmp
xchg
push
push
out
sbb
stos
cld
pop
hlt
mov
hlt
sub
push
mov
ficoml
dec
outsb
sti
xchg
lret
cs
ljmp
addr16
dec
mov
fcos
cli
pop
enter
mov
jmp
sub
push
rorl
cmpl
fidivs
pop
jecxz
out
jp
outsb
popa
ret
add
enter
popf
inc
out
push
dec
out
cs
pop
fisubrl
mov
add
or
fisubs
repnz
je
cli
outsb
aad
in
ror
out
dec
push
imul
sahf
cmp
push
cltd
imul
sbb
inc
cli
dec
shr
in
jle
push
add
fdiv
add
test
psadbw
cmp
jmp
push
xchg
xchg
flds
addr16
jp
out
dec
mov
xchg
outsb
clc
inc
mov
add
push
jl
data16
clc
outsb
fs
cs
push
shll
jmp
sub
sahf
repz
std
mov
data16
cmc
mov
dec
sar
stos
cmp
sti
out
inc
xchg
mov
inc
out
jmp
pusha
repz
into
les
loop
add
rclb
hlt
push
mov
jp
add
out
inc
imulb
or
aad
ret
and
test
out
push
push
pop
fldt
and
jmp
pop
shll
notb
aas
nop
loop
pop
and
push
dec
jmp
mov
and
and
jle
adc
out
sub
insb
rorl
adc
dec
mov
popa
int
into
sbb
out
push
jmp
fcmovne
push
mov
shrl
sub
div
pushf
iret
out
mov
dec
loopne
into
in
repnz
mov
lock
stos
dec
shr
add
and
hlt
loopne
mov
rcl
mov
out
data16
jmp
cmp
out
out
rcll
out
clc
sahf
adc
aas
add
pop
push
stc
jle
or
push
pop
dec
in
xchg
mov
sti
push
es
daa
fmull
mov
loope
lods
mov
rorb
js
scas
jl
lock
and
adc
outsb
mov
ljmp
mov
clc
or
push
ud0
das
je
push
aas
jp
adc
and
outsb
add
repz
jns
loop
xor
loopne
ds
pmaxsw
add
mov
divl
adc
in
mov
in
cmpsb
mov
loopne
clc
sti
lcall
add
cmpsl
lcall
inc
pop
imulb
in
jge
mov
lret
movl
outsb
repz
outsb
movsb
dec
loope
js
add
xchg
out
popa
mov
fidivrs
or
sbb
ds
cmpsb
mov
xlat
and
ss
cs
lcall
std
stos
insl
movsb
icebp
mov
inc
clc
ds
inc
cmc
sbb
loope
daa
adc
out
sbb
cs
out
scas
add
outsb
cs
ret
loopne
das
fsubr
sahf
push
xchg
shrb
lods
shr
mov
sar
divb
or
cmp
add
dec
and
add
dec
pusha
fnstenv
push
popf
out
rep
add
mov
push
push
repz
sub
mov
jmp
cmpsb
jg
shrb
mov
sbb
jp
out
cmp
mov
test
add
add
pop
shr
cs
out
fwait
push
push
arpl
lock
push
fidivl
cs
mov
mov
mov
inc
sub
add
adc
sti
push
push
cs
ds
pop
call
lcall
fmuls
bound
out
add
add
mov
aam
pop
cltd
and
inc
imul
loop
and
cmpsb
and
std
push
sbb
out
cs
into
out
cmp
pop
cli
pop
icebp
or
mov
sub
cmp
repnz
les
lcall
fnop
aad
push
inc
cld
push
adc
shr
pop
push
add
push
test
repnz
sbb
push
push
xchg
hlt
lcall
in
imull
jecxz
in
fsubrl
adc
sahf
cs
xchg
loope
pop
sub
andl
mov
push
ljmp
call
out
xor
roll
lods
icebp
add
mov
xlat
mov
xchg
mov
out
push
repz
push
inc
cli
cli
sbb
add
scas
in
push
std
stos
in
lds
in
inc
xor
aad
jge
stc
mov
ror
test
iret
cmpsb
sti
jne
add
call
jmp
jb
fcomp
ja,pn
stc
push
jo
mov
and
out
fcmovne
dec
pop
xor
inc
test
repnz
xor
call
mov
int
jbe
lcall
and
fistpll
pop
xor
outsb
stc
js
jle
mov
fstpl
arpl
out
pop
aaa
add
push
mov
out
sbbb
decb
jo
jb
pop
fnstcw
ljmp
repnz
xlat
mov
fdiv
jbe
jnp
push
je
out
decb
ficompl
xchg
repz
push
push
in
out
sahf
xchg
jecxz
popa
jle
mov
iret
jmp
sarb
mov
dec
cmc
cmc
sahf
addl
outsb
aam
fucomp
pop
ja
outsl
cmp
push
fisttpll
clc
into
pop
mov
in
push
in
mov
mov
into
jo
fbld
lahf
push
fsubl
xor
ret
loope
adc
ss
jbe
mov
mov
mov
ret
lock
movsl
outsb
ret
out
xor
jmp
out
sbb
loope
xor
push
jecxz
add
push
cmp
dec
add
shlb
adcb
scas
shlb
pop
shl
loopne
xor
fmuls
out
or
dec
adc
repz
jge
iret
pop
insb
pop
jecxz
mov
add
dec
cwtl
testb
sti
fdivrp
outsl
iret
es
fadds
dec
mov
cs
ror
inc
inc
mov
dec
cmc
insb
negl
in
in
push
call
std
sub
sti
fadds
sarl
out
scas
or
xor
call
and
pusha
inc
cmc
bound
mov
movsl
cmc
clc
dec
sub
add
scas
gs
ds
scas
xor
ds
push
add
icebp
jge
mov
std
cmpsb
f2xm1
ss
xlat
in
and
fisubrs
test
rol
inc
ljmp
pop
sti
cs
lea
inc
and
jmp
mov
loop
add
jge
mov
cld
push
add
push
xlat
ss
mov
mov
mov
scas
jb
repnz
iret
sub
jb
mov
out
dec
imul
clc
leave
iret
xchg
xor
into
sahf
test
and
inc
adc
fsubrs
imull
cmp
xor
test
outsb
cs
data16
push
pop
shr
mov
aaa
mulb
and
mov
dec
cli
sahf
int3
jnp
push
xchg
dec
out
into
mov
lret
icebp
outsb
scas
mov
xlat
jle
lahf
xlat
test
push
pop
loopne
xorw
je
into
add
cmp
cmpsb
or
fstl
push
add
inc
mov
cli
dec
ret
test
fisubrl
and
inc
dec
and
out
into
adc
mov
in
cs
mov
push
and
icebp
pop
aaa
cwtl
stc
outsb
repz
addb
push
cwtl
call
fildl
dec
push
rorl
mov
fsubrp
mov
std
ret
jmp
into
inc
in
mov
into
dec
divb
adc
mov
mov
cmp
test
in
rolb
pop
shll
inc
adc
or
out
cmp
das
add
or
icebp
push
std
xchg
into
jl
out
test
add
js
add
pop
aad
dec
sub
lds
in
add
fidivs
ds
push
push
jno
faddp
pop
aam
bswap
out
push
daa
fdivrs
mov
push
imul
dec
xchg
clc
leave
add
xchg
cli
add
lahf
xchg
aam
stc
leave
jecxz
xchg
push
ds
add
xchg
ficompl
into
bound
cld
cli
push
addl
scas
xchg
in
ss
and
inc
adc
add
xor
fiaddl
push
jb
es
lods
in
or
cmp
out
mov
in
sbbl
rcrb
repnz
add
xor
popf
cmp
scas
iret
sbb
adc
push
jmp
sbb
icebp
dec
leave
xor
fsubs
in
not
ret
jmp
sahf
and
jmp
push
insb
sub
outsb
test
adc
ds
sbb
mov
inc
out
jae
idivl
movsb
ds
adc
hlt
pop
xlat
cmp
push
jnp
loop
gs
jmp
clc
pop
push
out
fprem1
xchg
stc
sbb
lcall
shl
adc
jmp
cs
mov
pop
jecxz
add
and
into
mov
mov
out
xor
rorb
gs
cmp
hlt
ljmp
add
in
dec
fists
int3
daa
call
cs
cmpsb
mov
mov
jle
jnp
dec
popf
or
jbe
inc
add
mov
out
mov
imul
push
pop
add
sub
sti
push
cli
outsb
loop
adc
fildll
jmp
xorb
lret
fistpll
add
fsubr
mov
push
shrl
loop
jmp
add
out
outsb
ret
ss
adc
mov
mov
xchg
fstp
movsb
jo
mov
hlt
cs
shl
loope
iret
pop
call
dec
idivl
pop
jmp
pop
insb
shl
mov
fucomp
into
daa
or
clc
and
icebp
cmp
push
loope
lock
pusha
sbb
dec
cmp
int
leave
lock
pop
int
cs
adc
stos
pushf
cmp
hlt
sahf
mov
loope
cwtl
es
push
fists
inc
and
mov
sub
out
fwait
mov
cs
or
ds
in
mov
jle
push
push
xchg
cld
int
fildll
or
in
cmp
fcomp
das
lods
xlat
push
fdivr
notb
mov
jmp
in
out
mov
shr
and
cmc
jbe
in
jmp
cmp
xchg
ret
ss
jae
or
mov
es
cmc
fiadds
ret
fdivrl
fs
add
in
nop
cld
into
test
rcr
outsb
and
lret
imull
jecxz
inc
ss
iret
add
out
pusha
stc
sahf
push
or
fimull
mov
ds
std
clc
cs
lcall
ljmp
push
add
into
jae
fildll
fcmovu
jmp
iret
icebp
shr
and
loopne
push
and
dec
leave
add
mov
ja
imulb
out
sahf
call
outsb
push
stos
in
xchg
push
imul
stos
mov
push
sbb
ficomps
mov
loope
test
lret
scas
push
movsb
call
jle
xchg
fists
mov
in
push
leave
in
add
cmc
cs
stc
fisttpl
xchg
ficompl
adc
fisubrs
jge
dec
jae
cli
push
push
mov
std
xor
aaa
in
jbe
jecxz
nop
cli
out
xchg
cld
mov
inc
mov
icebp
jp
je
scas
mov
repz
neg
scas
stos
loopne
inc
push
out
adc
or
stc
cltd
jbe
out
rorl
out
jo
decb
ja
lock
imulb
stc
pop
in
int
movsb
sub
sub
in
mov
mov
divb
mov
jbe
hlt
clc
out
iret
cmp
cs
fistps
pop
mov
sti
outsb
inc
mov
mov
dec
pop
lret
jp
add
scas
sti
add
iret
push
adc
shl
lock
jb
in
pop
in
into
push
sarl
jge
lock
out
jp
sbb
out
mov
lock
lock
cs
stos
add
scas
fsubrp
mov
add
stc
movsb
insb
imul
roll
push
sbb
into
push
mov
push
mov
jbe
jge
add
cwtl
add
push
loop
jp
jb
scas
mov
add
xor
mov
push
jmp
ds
jp
ss
jp
pop
mov
rcll
mov
xchg
pushf
div
stc
jno
sahf
jmp
clc
cmpsb
ja
cmc
outsb
cwtl
movb
ljmp
inc
jns
fstl
cmp
lock
cmc
adc
push
push
repz
icebp
push
int
sub
call
mov
sbb
jmp
push
xchg
fldenv
and
stc
outsb
movsb
jl
repnz
stc
push
push
xor
cs
jns
mov
call
out
fwait
dec
in
es
sti
outsb
lds
shrb
sub
fsubs
jle
pop
push
loopne
push
inc
and
out
xlat
divb
mov
clc
outsb
pop
adc
sahf
pop
cs
cmovge
xchg
aad
lea
std
es
or
push
dec
jl
scas
and
xor
dec
scas
sub
outsb
jg
fisubrs
dec
pop
idivl
inc
mov
jle
aaa
int
leave
pop
in
push
into
sub
andb
jb
repz
loop
jmp
outsl
in
push
out
or
subb
out
lea
add
xor
dec
jb
out
push
loope
pop
ja
jbe
cmp
mov
js
and
repnz
push
xchg
add
cs
incb
xor
insb
jmp
jg
jmp
push
add
rclb
fimull
testb
hlt
sar
std
loopne
sub
fisubs
int
lret
xlat
outsb
jne
out
cmp
add
roll
dec
dec
jg
ds
pop
int
mov
ror
xchg
jns
cs
test
ds
pop
divb
fnstcw
fidivs
fcmovbe
mov
ljmp
dec
fmuls
out
filds
fstps
mov
xor
loop
inc
out
add
hlt
push
xchg
shll
push
psrad
mov
pop
rcrl
not
cmp
push
sub
cli
stos
mov
out
jle
repz
cmp
fidivl
in
push
adc
shr
es
std
mov
pop
idiv
cs
enter
outsb
sti
data16
leave
cs
inc
out
lret
sub
idivb
xchg
push
js
push
setb
cmp
aad
push
jp
mov
out
notb
or
stos
pop
push
fldcw
dec
jnp
rclw
push
push
pop
jecxz
sbb
into
add
cli
mov
repnz
lods
push
fisttpl
addr16
es
inc
jmp
sub
cli
push
test
add
mov
imul
lods
or
scas
ret
lcall
leave
cld
out
outsb
ja
add
mov
icebp
xchg
sar
pop
mov
xor
jmp
mov
xor
scas
dec
push
shl
mov
aam
cmpsb
stc
mov
outsb
sqrtps
addb
add
mov
sahf
out
imul
push
lods
fcmove
dec
enter
repnz
or
into
sbb
testb
push
or
repz
out
mov
stc
cli
push
cmpsl
mov
icebp
sahf
cmpsl
int3
fdivl
decb
loop
in
test
add
loop
repz
and
jmp
push
js
cld
mov
roll
fidivl
fisubl
mov
imulb
sarb
arpl
repnz
adc
es
fisttpll
test
cld
push
sub
icebp
outsb
hlt
jecxz
and
aam
mov
idiv
popa
mov
cmc
mov
daa
xor
or
xor
sahf
sub
add
mov
sbb
cld
into
addr16
ret
hlt
xchg
fcoml
clc
pop
lret
cs
mov
inc
add
mov
add
fnsave
sahf
arpl
repz
loop
sbb
icebp
sub
iret
mov
pop
jmp
in
xlat
cs
cmc
scas
xlat
jp
mov
xor
add
sbb
push
jmp
xor
shrb
or
inc
push
xchg
into
push
jne
and
xlat
jle
test
lock
outsb
outsb
lret
sub
dec
int3
jmp
aad
dec
sub
out
outsb
sub
mov
jge
int3
repnz
ss
imul
pop
cld
add
and
int3
dec
jg
out
dec
push
add
and
dec
fsubs
repz
movsl
fcomp
sub
int3
sarb
mov
in
jl
into
jp
mov
cmp
clc
push
add
out
loop
hlt
stc
dec
movl
incl
push
fsqrt
ret
outsb
enter
mov
in
outsl
xchg
out
xchg
loope
cmp
adc
cli
shl
clc
push
sbb
jle
ljmp
repnz
fsubl
cmp
cs
loop
test
je
clc
dec
out
inc
repz
jge
fistps
mov
sbb
cs
out
fsubs
in
xlat
jbe
add
cmp
xlat
push
mov
xlat
pop
movsl
mov
stc
push
sbb
xlat
pushaw
in
ds
mov
jle
mov
out
pop
jecxz
xchg
fldenv
jbe
mov
loope
xchg
pusha
cli
cmp
xlat
adc
clc
into
jo
sti
jb
leave
outsb
adc
cmpsb
and
add
sub
rol
pop
xchg
jmp
scas
xor
aam
inc
insl
cli
ds
shlb
jae
push
sub
in
mov
push
add
scas
imul
scas
inc
loopne
gs
push
ret
push
shrl
sahf
mov
enter
cld
repnz
mov
mov
ret
in
xchg
scas
and
shl
jbe
popa
out
repnz
aad
pop
xor
mov
aam
xorw
mov
mov
rcl
pop
or
sahf
adc
insb
jmp
stos
and
xlat
dec
jo
push
int3
adc
cmp
stos
fwait
in
icebp
xchg
xlat
nop
loope
mov
clc
push
ss
enter
jo
jb
dec
lret
out
pop
popa
fistps
and
push
ljmp
rcl
filds
lcall
mov
rcr
jno
std
push
iret
push
sarb
out
mov
xlat
into
adc
add
shll
loop
inc
test
lret
jle
push
mov
mov
cli
push
or
in
testb
jle
inc
in
mov
add
cmpsb
mov
aas
lock
in
push
xchg
push
xchg
mov
fimuls
xor
push
hlt
out
loop
add
outsb
push
xchg
mov
out
cli
fcmovne
lock
lea
push
jecxz
cld
dec
dec
cmp
sbb
icebp
push
pop
push
shl
sbb
xchg
inc
movsb
loop
popf
sub
scas
jnp
std
and
xchg
int
jno
icebp
cmp
in
xor
pop
jne
in
cmp
out
adc
sahf
cmp
aad
pop
ret
testl
cltd
stos
testb
loope
jnp
jecxz
and
add
ror
lret
idiv
xchg
mov
ficoms
neg
out
pop
xchg
pushl
pop
lods
loopne
fs
es
cld
jmp
es
pop
lock
push
div
dec
jb
leave
push
push
out
inc
lds
xor
sub
add
lods
add
popa
lcall
lret
mov
dec
inc
mov
xchg
jp
cmpsb
fldz
in
mov
jbe
or
into
add
cmc
jp
pop
out
push
push
add
es
ljmp
ljmp
xlat
out
mov
xchg
aam
mov
lods
ja
push
lret
loop
push
cmc
cs
fisubrl
dec
out
lret
sti
into
mov
stos
fcompl
jae
jg,pn
xlat
scas
push
scas
or
rorl
mov
mov
fnstenv
adc
out
inc
test
fcmovnb
adc
pop
xchg
pop
aad
out
lcall
cld
push
gs
out
cmc
inc
pop
inc
cmp
sahf
mov
movsb
ljmp
xor
fimull
fmull
cmp
out
pop
xor
mul
push
add
inc
cld
into
fsubs
add
mov
cmp
push
loope
mov
ljmp
iret
push
mov
rcrl
jnp
xlat
jbe
cmc
dec
adc
std
dec
scas
jns
mov
hlt
mov
iret
push
or
mov
jge
cmp
mov
or
mov
cmpsl
fildll
mov
add
stc
cmp
scas
int
jmp
or
jge
mov
into
push
fidivrl
or
cli
fisttps
jecxz
mov
scas
add
aam
add
fsubrs
lret
inc
ss
idivb
lcall
dec
inc
icebp
add
inc
push
xchg
sbb
repnz
test
ljmp
jnp
sbb
pusha
lret
cs
pop
roll
clc
fiadds
in
add
push
lret
enter
out
int3
xor
inc
adc
dec
das
cmp
lret
cld
xchg
outsl
cwtl
cli
push
jge
int
sub
jno
out
mov
into
cs
xor
jbe
cs
cli
shl
mov
xchg
filds
dec
ljmp
cli
ficoms
scas
lock
dec
daa
call
sub
fidivs
loopne
shrl
icebp
lahf
add
nop
fsubrp
mov
sub
iret
repnz
jmp
dec
sbb
inc
outsb
lar
iret
cmp
dec
mov
mov
faddp
jmp
sbb
xlat
mov
mov
enter
loope
sbb
add
push
mov
sahf
lret
dec
ljmp
and
cli
xor
fimull
or
push
sub
not
mov
cmp
out
sahf
xchg
jae
jle
out
out
shrb
into
add
scas
xor
jmp
sub
repz
sbb
sarb
xchg
cmp
outsb
jle
cld
ret
add
loope
fstps
dec
ljmp
ja
cli
and
scas
lods
adc
mov
cmp
push
jbe
in
push
popa
push
add
in
dec
clc
add
hlt
scas
imul
popf
iret
aad
cmc
jbe
cld
repnz
pop
jne
cli
or
outsb
jecxz
cmc
cs
shrb
shll
xorps
mov
cmpsl
cli
jbe
xor
ficomps
in
mov
sub
out
lcall
es
ret
jmp
into
cltd
push
ljmp
mov
cs
xchg
xchg
jmp
and
and
cmc
pop
push
xor
add
ja
ljmp
inc
out
mov
ljmp
movsl
sarb
gs
xlat
out
jl
dec
pusha
sbb
push
inc
jecxz
outsb
mov
or
fsubrl
inc
leave
enter
fsubr
or
lcall
movl
cld
lds
pusha
aaa
lret
jp
push
fimuls
mov
jne
sub
adc
scas
add
int
cmp
cld
push
cmp
fldenv
loopne
repz
lock
fwait
dec
sti
push
pop
pop
loop
add
push
out
lar
andb
out
mov
out
and
lds
flds
leave
ret
add
mov
jmp
pop
mov
out
adc
iret
sahf
mov
shrl
int
loopne
ret
sahf
push
aas
repnz
sub
cmpsb
dec
or
xor
mov
jae,pn
cld
mov
cmp
loope
mov
sub
ljmp
outsl
in
jmp
out
inc
cmc
add
pusha
into
push
or
pop
call
pop
sbb
mov
xlat
pusha
aam
js
loop
or
repz
xchg
repz
xchg
rol
testl
cmp
enter
lcall
pop
inc
call
pushf
or
mov
les
shl
jns,pn
cs
adc
mov
repz
in
loop
add
xor
pop
fnstenv
call
into
fiadds
lcall
push
int
push
mov
pop
in
faddl
ljmp
enter
leave
jle
adc
sbb
and
into
into
and
cli
out
lods
or
mov
adc
mov
out
out
ds
dec
loope
rclb
and
lret
inc
in
sarb
dec
fdivr
cmp
inc
xor
loopne
and
ja
mov
dec
aad
or
sar
jb
fadds
decb
push
mov
enter
hlt
subb
add
test
loop
lods
fists
jb
scas
and
jg
adc
dec
cld
sahf
jne
dec
imul
add
outsl
dec
fildll
test
int3
subb
scas
mov
xor
out
or
sarb
push
lds
add
push
jmp
rolb
adc
out
jmp
je
es
scas
push
pop
leave
pop
xor
adc
adc
std
scas
clc
shr
das
in
mov
cmp
xor
or
pop
xchg
pop
aad
jge
imull
mov
hlt
outsb
push
loope
dec
inc
sti
mov
lds
cld
sbb
aas
enter
xchg
out
push
xor
add
or
frndint
push
stos
fstp
mov
sbb
sbb
movb
adc
and
push
fwait
dec
aam
clc
js
xor
jae
outsb
aas
faddl
bound
into
inc
enter
add
call
and
jmp
dec
out
push
xchg
mov
out
and
push
pop
add
out
cwtl
ljmp
and
ljmp
hlt
fisubs
jo
jmp
scas
push
xor
outsb
ds
cld
dec
cmp
ljmp
shr
outsb
in
stc
scas
adc
add
out
in
dec
loope
cli
xchg
xchg
cmp
cmp
les
sub
mov
mov
loopne
cmpsb
mov
sub
movb
push
push
push
hlt
es
mov
aad
xor
lock
cmp
enter
les
call
pop
fdivrl
imul
inc
aaa
cltd
leave
movb
cs
in
nop
jle
jmp
subl
rorl
cld
sbb
cmpsb
sbb
add
jnp
clc
into
inc
or
xchg
mov
into
into
add
aam
insl
push
add
mov
inc
adc
jb
mov
cs
dec
jmp
leave
pop
ret
push
out
sti
add
cltd
cld
sub
pop
les
and
out
dec
mov
sbb
dec
jecxz
cmp
movb
int
mov
fpatan
adc
add
mov
pop
fisubrl
push
fmull
test
xchg
mov
pop
ror
aad
lar
push
fstl
lcall
stc
xchg
and
xchg
inc
sub
xchg
pop
ja
push
pusha
or
or
fildll
mov
icebp
add
xchg
push
jbe
sub
in
push
out
sbb
sti
jb
aad
push
outsl
jmp
add
jnp
lret
shlb
fisttpll
jo
out
mov
sti
cli
into
je
hlt
xchg
fadds
mov
in
mov
dec
incb
pop
mov
lret
fsub
xchg
xchg
mov
sti
lret
add
add
out
sbb
scas
out
dec
incb
mov
mov
in
xchg
int
into
daa
leave
imulb
cld
or
out
and
jmp
add
loope
in
mov
pop
cli
mov
dec
add
pop
pop
xor
lds
mov
hlt
ss
sti
add
inc
aam
in
icebp
push
or
jp
lret
es
sbb
jecxz
jbe
sahf
daa
pop
in
mov
or
mov
mov
fisubs
std
int
and
push
jg
stos
shl
aam
push
push
cmc
xchg
xchg
xchg
sti
outsb
push
icebp
out
scas
movsl
into
dec
ret
or
std
sahf
roll
pushl
orl
xlat
push
in
add
int3
stc
out
imul
into
sub
outsb
adc
lds
adc
fdivr
xor
out
dec
pop
decb
daa
inc
aad
jp
lret
mov
outsb
mov
aam
incb
pop
lock
jb
fmul
mov
lds
int3
lods
add
jmp
dec
std
fildl
neg
out
xchg
inc
push
mov
notl
sub
jae
cs
inc
shl
sbb
push
adc
loopne
or
pop
mov
clc
jle
and
or
jno
mov
lret
lds
push
addl
clc
out
pop
pop
shrl
jno
repnz
imul
sbb
filds
scas
or
cli
sub
add
xor
lds
bound
ss
mov
xchg
mov
icebp
push
adc
out
cmp
mov
dec
lds
jne
mul
cmp
fldenv
imul
or
in
mov
enter
shl
or
outsb
gs
rorb
and
pop
jnp
cld
scas
fisttps
in
test
outsb
lods
fldcw
sar
out
mov
shrl
sbb
cmpsb
jne
fisttpl
mov
fistps
dec
or
sahf
in
mov
pushw
in
ficompl
data16
fidivs
scas
mov
ljmp
cmp
ficomps
jg
stc
incb
shl
fwait
jecxz
into
arpl
and
out
jp
loopne
out
shr
rcl
cmp
aam
xchg
inc
jmp
ljmp
imulb
stos
sbb
jmp
xchg
daa
jecxz
lcall
cs
and
dec
loop
add
imul
fdivrp
fcmovnu
rcr
mov
fisubrs
sub
adc
in
repz
outsb
loope
repz
fnsave
push
js
in
ljmp
ficoms
mull
loopne
cltd
popa
aad
cmpsb
loope
outsb
jnp
leave
ljmp
rcrb
rcr
out
es
clc
push
loop
hlt
es
notl
pop
push
shlb
mov
mov
ret
into
mov
mov
test
add
fdivrs
xchg
negl
jae
loope
inc
aam
imul
push
pop
cmpsl
ret
jle
into
loopne
inc
ss
fstl
xlat
iret
adcb
ficomps
std
fiaddl
in
test
faddp
decl
cmp
dec
fdivr
fisubrs
in
cs
pop
ret
in
xlat
ficompl
fcmovnu
push
dec
or
adc
ss
dec
sub
pop
lods
outsl
imulb
daa
enter
lret
sahf
xor
aam
sub
mov
aad
mov
in
mov
jmp
je
fcmovnbe
adc
lret
mov
out
jbe
sub
scas
stos
in
mov
fst
adc
push
sbb
in
mov
loope
mov
mov
negl
lock
out
or
add
int
std
mov
negl
repnz
jl
iret
dec
dec
icebp
shr
test
test
ss
mov
fisubrs
xchg
push
aad
sub
aam
notl
and
sbb
cs
add
fcmovu
push
xor
mov
jle
je
add
jp
push
sbb
mov
stos
mov
ror
xor
hlt
jle
ret
pop
push
test
rol
jmp
icebp
cs
lar
cmp
inc
xchg
aas
jmp
push
out
jecxz
cmp
push
repz
stc
mov
fsubrs
jns
hlt
cmpsb
jmp
decb
fwait
call
es
negb
adc
pop
fwait
lahf
sti
movb
mov
jno
push
mov
in
mov
ret
cs
fildll
sti
out
loop
gs
push
cmp
addr16
or
jmp
cld
mov
aad
fwait
sbb
outsb
and
lds
mov
sarl
jno
call
jle
test
mov
sub
int
cmp
in
sahf
lcall
sahf
or
out
scas
mov
ss
xchg
push
add
mov
push
in
dec
lret
outsl
mov
rcrb
sahf
adc
dec
jecxz
enter
in
adc
cmpsb
ret
shl
out
movl
enter
lds
push
push
cmc
sub
add
into
push
into
outsb
cmpsb
lcall
scas
fsubr
ss
xchg
mov
sub
pop
push
or
lds
into
and
int
ss
lds
jae
loop
int
rcrb
hlt
dec
loopne
shlb
gs
push
rcr
pop
push
in
decl
loop
lds
scas
mov
cli
mov
dec
shl
mov
ljmp
adc
loop
ret
pop
js
mul
hlt
rorl
and
xor
fsubp
xchg
cli
xchg
mull
push
push
in
mov
sub
fldt
adc
sahf
lret
repnz
js
mov
in
in
ss
fsub
xchg
aaa
fcmove
lea
scas
push
add
repnz
cmpl
cmp
imul
rcrl
fimuls
leave
fcmovu
shrb
lock
lcall
mov
fmull
cmp
psllq
test
mov
fnstenv
call
cs
in
repnz
out
ret
aad
pushf
ss
dec
outsb
inc
sub
push
push
mov
add
push
add
jp
jle
inc
rorl
test
jp
cs
es
out
leavew
incb
fdivrp
pop
and
loope
add
xchg
pop
xor
out
push
sti
in
out
jno
bound
ljmp
lods
lahf
lds
mov
pop
cld
dec
add
fsts
sahf
in
mov
cli
pop
in
iret
push
sub
fsts
cltd
xlat
into
dec
mov
stc
dec
ret
fs
testl
repnz
jnp
mov
dec
lds
mov
lock
into
xchg
or
leave
jmp
mov
jle
aad
sbb
cli
cs
pop
cltd
mov
mov
int3
and
repz
mov
jle
in
loope
mov
notl
pop
push
lret
mov
mov
out
loop
ljmp
divb
mov
stos
data16
mov
mov
sub
shl
mov
inc
loopne
cs
sub
dec
xchg
sbb
mov
enter
sahf
jle
cmp
mov
add
loopne
dec
sbb
rclb
lret
mov
fnstcw
adc
mov
out
adc
testb
dec
xchg
rol
ss
xchg
lea
mov
sub
stc
out
xchg
jnp
lret
out
std
dec
repnz
addl
into
adc
jnp
mov
jns
xor
loopne
outsb
dec
data16
push
test
push
fisttpl
lret
ds
cltd
inc
jmp
incl
fisubrs
pop
add
xchg
jo
add
les
dec
in
outsb
je
lock
cmp
mov
push
pop
std
sbb
jle
fmulp
inc
mov
div
sbb
mov
push
iret
jecxz
push
cld
and
fcmovbe
lock
in
inc
lret
shr
fidivrs
cld
and
cmp
mov
xor
push
mull
outsb
jb
out
ds
lock
or
adc
outsb
dec
adc
lea
mov
int
mov
push
enter
loope
and
fmull
xlat
test
ds
add
and
stos
ljmp
xchg
repnz
js
out
sbb
jb
mov
ss
fisttps
mov
mov
stos
movb
mov
ret
scas
xchg
pop
loope
sub
scas
outsl
add
scas
mov
lret
jp
mov
out
xchg
pop
fsubrs
and
out
clc
scas
icebp
jle
cs
jp
and
add
incl
inc
add
inc
add
push
xor
mov
jns
incb
scas
lock
add
and
add
dec
add
lea
mov
add
daa
incb
fsub
xor
add
stos
loop
add
out
sbb
leave
lods
xor
add
mov
incb
mov
incb
push
mov
sub
xchg
cmpsb
dec
add
jb
leave
cmc
aas
mov
test
mov
aaa
incb
fdivs
mov
xchg
sub
gs
mov
insl
shll
incl
jb
jl
lods
or
js
sbb
add
add
pop
mov
add
pop
add
incl
jne
sbb
lcall
push
add
shrb
test
pop
test
jg
mov
cmp
push
lcall
loop
mov
add
inc
add
dec
add
iret
add
add
mov
jo
adc
add
add
incb
call
cs
cmc
xor
add
add
divl
lock
daa
incb
inc
add
add
add
adc
add
add
add
add
dec
shrl
hlt
in
mov
addr16
stos
data16
add
incb
addb
add
push
sbb
push
add
addr16
sub
add
xchg
cwtl
in
subl
jmp
xor
add
incb
mov
in
or
xor
add
add
dec
xor
add
lock
add
nop
outsl
orb
incb
daa
incl
mov
lods
in
jns
mov
add
movsb
dec
add
fnstcw
or
xchg
cltd
or
dec
mov
fidivrl
push
incb
aaa
incl
mov
and
mov
and
add
add
incb
dec
add
pop
cmpsl
sub
clc
pop
add
in
add
adc
mov
jg
add
idiv
and
add
mov
inc
add
lret
pushf
push
add
add
out
imul
and
add
incb
cltd
dec
add
add
mov
add
inc
add
mov
lock
stos
sbb
add
lods
in
dec
add
divb
outsb
add
lret
lret
incl
test
movsl
nop
repz
or
insb
add
add
or
cmc
clc
test
bound
jp
in
outsl
call
add
jb
test
pop
mov
adc
jl
mov
outsl
ljmp
loop
inc
add
movsl
sub
js
push
rorl
fwait
sbb
add
roll
sbb
add
fwait
and
add
stos
popa
pop
std
pop
incb
pop
incb
in
add
add
jp
fcomp
adc
incb
add
icebp
push
inc
add
cmp
jne
loop
sub
lock
sti
dec
add
incb
cmp
cmpsl
adc
add
sbb
insl
movsb
add
pop
fistpll
mov
xor
add
stos
shlb
repz
add
and
add
clc
sbbb
or
pusha
add
pop
incb
xor
add
push
inc
add
jge
add
add
arpl
mov
add
add
jle
inc
jl
cltd
pop
incb
push
add
jne
xchg
sub
xor
add
dec
add
incb
imul
push
incb
or
cwtl
rcr
lcall
or
incl
pop
and
add
sub
inc
add
mov
jmp
cli
outsl
jg
add
bound
in
cwtl
mov
dec
jp
pop
inc
ja
add
mov
or
add
xchg
cmp
das
sub
and
add
insb
add
add
add
js
in
out
test
incl
les
inc
add
inc
add
dec
xchg
iret
xchg
lret
sub
andl
in
ret
cmp
mov
adc
add
xlat
stos
lret
incb
lcall
stos
adc
add
filds
incb
sub
nop
mov
add
xchg
int
dec
lret
sbb
mov
lret
pop
icebp
sub
data16
add
add
incb
cmp
sbb
sbb
push
add
dec
add
incb
lock
add
add
inc
add
incb
sar
push
add
mov
add
push
incl
push
incb
inc
add
stc
in
cmp
call
cmp
add
add
incl
xchg
mov
pop
sub
mov
xor
add
incb
sub
incb
sub
mov
add
jnp
incb
mov
add
add
jecxz
cmpsl
or
inc
dec
add
jp
in
incb
aaa
incl
int
clc
xchg
fisubl
shll
add
incb
mov
scas
push
add
sbb
enter
incb
rcrl
cmp
scas
in
and
jge
outsb
add
cmp
popa
inc
add
lods
out
mov
adc
add
jne
add
repz
mov
mov
sub
popl
incb
fnstenv
inc
sub
fwait
push
shlb
test
inc
add
rcll
xchg
push
test
leave
gs
mov
xor
add
insb
add
loop
push
incb
and
add
mov
popf
add
adc
add
add
add
jne
cwtl
pshufb
sbb
int
sarb
add
sbb
push
xchg
jae
xor
add
incb
mov
push
add
test
imul
fwait
mov
incb
js
popf
xchg
je
or
mov
xchg
mov
incb
jno
rol
cmp
jp
pop
std
js
insl
pusha
add
incb
shrb
incb
in
inc
add
test
and
cmp
pop
popa
les
js
xchg
mov
inc
add
js
aam
incb
push
incl
or
cs
or
fs
movsl
pushf
pop
push
add
mov
add
les
and
add
incb
cmp
push
into
ret
repz
xchg
ja
add
mov
orb
mov
stc
push
incb
int
incb
stos
outsb
add
daa
incl
dec
mov
mov
sti
mov
mov
pop
add
inc
add
imul
dec
fwait
test
sub
test
cmpsl
cmpsl
lds
std
nop
inc
add
add
xlat
dec
sub
sbb
lods
xchg
icebp
hlt
stos
xor
incb
ljmp
mov
incl
dec
add
cli
int3
clc
cld
sub
incb
add
add
add
lcall
sub
dec
inc
add
dec
add
mov
inc
add
sti
pop
push
repz
xchg
nop
dec
add
dec
add
add
shrl
add
cmp
pusha
add
cmp
cmpsl
inc
add
mov
std
mov
push
add
jecxz
fisttpl
sbb
nop
shlb
pop
mov
dec
add
shlb
incl
xchg
dec
add
ret
mov
or
add
add
xchg
jnp
cmp
arpl
add
add
dec
fisubrl
xchg
insb
add
xchg
incb
notb
sub
dec
enter
pop
add
mov
jnp
sub
add
add
dec
add
stos
dec
add
add
iret
add
lret
into
and
push
lods
rcll
in
cwtl
call
inc
out
clc
push
mov
incb
scas
or
mov
adc
add
add
test
roll
add
inc
addr16
jns
dec
add
test
xor
add
push
add
incl
mov
add
imul
imul
or
fisttpl
mov
dec
push
mov
mov
pop
add
inc
fstl
incb
pop
xchg
scas
repnz
stc
shlb
jo
sub
hlt
sub
iret
sarl
add
dec
add
sbb
insb
add
incb
xorb
add
add
add
incb
mov
arpl
xor
add
shlb
add
pushf
dec
push
out
dec
add
test
dec
add
pop
incb
cmp
outsl
das
lods
mov
popf
pop
add
sub
pop
add
xor
add
mov
add
add
inc
and
add
incb
adc
add
pop
add
add
jmp
pop
incb
sub
fsubs
incb
rcrl
mov
add
jmp
jg
cld
outsb
add
incb
aad
lods
scas
in
add
xchg
fcmovne
sbb
sbb
sbb
jmp
dec
add
clc
xchg
insb
add
jbe
mov
inc
add
incb
dec
out
cwtl
test
mov
or
mov
rol
mov
add
jmp
add
pushf
aaa
incl
xchg
pushf
push
inc
mov
cmp
and
add
incl
inc
rclb
jae
mov
cli
push
incl
fwait
jmp
fstpt
pop
add
pop
add
insb
add
pop
incb
call
fisttpl
fsts
mov
incl
push
incb
lcall
incb
outsl
or
add
add
pop
push
add
lcall
pop
inc
add
add
jl
mov
jnp
incb
xor
add
sti
mov
stos
mov
call
xor
add
add
or
xlat
push
sar
bound
dec
add
xor
add
push
cmpsl
call
ret
add
lods
mov
jae
add
push
incb
incb
jecxz
pop
add
icebp
inc
add
inc
xchg
push
add
lcall
mov
leave
jns
int
add
push
incl
rol
ror
jle
or
stc
das
ljmp
mov
sub
xor
add
add
pop
add
hlt
pop
add
dec
add
incb
xor
add
mov
add
fwait
int
jb
test
rcrb
add
jecxz
push
push
incb
jecxz
pop
into
jbe
sbb
push
add
ficomps
mov
add
maxps
incb
mov
jle
lcall
adc
add
sub
rorl
jmp
or
xlat
cltd
xor
add
lea
add
sbb
incb
pop
sub
or
data16
in
pop
add
imul
inc
cwtl
scas
push
rorl
or
add
add
aam
and
ret
xchg
cmp
div
cld
xchg
repnz
incl
sbbl
push
incb
loop
add
incb
mov
sbb
sbb
add
pop
jp
inc
add
incl
mov
mov
xchg
inc
add
adc
add
aad
out
pusha
add
cmpsb
cmpsb
mov
ficoml
cmp
xchg
xchg
dec
jmp
int3
mov
cltd
insl
mov
add
cmp
add
add
add
xchg
in
sarl
and
add
add
incb
fbld
add
add
incb
shlb
leave
and
add
add
sub
mov
popl
incb
imul
mov
sbb
lea
mov
in
shld
orl
incl
mov
add
incb
dec
popa
jno
out
fisttps
adc
add
sbb
scas
movsl
jae
mov
jp
xchg
lock
and
adc
add
mov
push
add
incb
incb
fwait
mov
xor
add
incb
sub
adc
add
inc
pop
loop
inc
xchg
cmpsb
adc
add
jno
mov
add
into
mov
jne
add
rcr
mov
into
mov
add
push
add
frstpm(287
test
add
add
daa
incb
scas
rolb
out
incb
dec
add
sub
mov
add
or
incb
mov
add
add
incb
jb
xor
add
incb
arpl
cmp
mov
incb
insb
add
sub
add
incb
xchg
and
add
push
mov
xor
add
incl
popf
in
popf
inc
sti
lret
push
add
hlt
add
add
sbb
testb
cmpsb
or
nop
test
add
shr
incl
and
add
ljmp
inc
add
in
jns
add
push
incb
jnp
lahf
adc
add
jmp
rolb
incb
aaa
incb
xor
add
incl
xor
add
add
out
jl
stc
sub
add
jg
sbb
pusha
add
add
add
add
push
jmp
sbb
dec
add
incb
pop
jb
in
iret
jnp
pop
incb
xchg
add
pop
add
incb
mov
mov
add
bound
pop
add
incl
loope
je
fidivrl
loop
or
sbb
mov
xlat
imul
jb
lcall
add
incb
adc
add
incb
mov
dec
add
jecxz
add
pop
incb
adc
add
jo
in
add
int3
inc
add
or
jne
push
add
add
pop
xchg
inc
add
enter
incb
jp
jno
lock
mov
and
sbb
dec
add
incb
aas
popa
arpl
cmpsb
mov
incb
aas
xlat
daa
incl
out
jmp
mov
xor
add
add
incb
movsl
mov
incl
popl
dec
add
test
test
and
add
push
incb
aaa
incb
ja
mov
scas
rolb
xor
add
int3
int
mov
xchg
or
incb
pop
incl
lds
xchg
add
add
add
add
shr
and
xchg
add
add
enter
fisubl
out
adc
add
icebp
in
inc
add
std
mov
fs
xchg
mov
ret
addr16
xchg
and
add
cmp
loopne
add
jb
xor
add
cs
or
mov
mov
pop
imul
je
daa
incb
inc
add
cmp
cld
push
add
inc
sbb
movsl
lods
push
scas
sbb
mov
and
add
adc
add
iret
cld
push
add
add
ret
pop
incb
mov
add
add
dec
add
rorb
add
fcoml
incb
repz
incl
mov
cld
test
xor
daa
incl
push
push
incb
ror
mov
mov
push
add
stos
int
shr
inc
jae
gs
movsb
in
incl
call
mov
sub
add
incb
icebp
jns
add
add
fcomps
add
aad
jne
add
fwait
insl
imul
dec
add
and
add
pop
std
mov
add
xor
adc
add
out
cmp
dec
add
pusha
add
pop
lahf
mov
ret
mov
xor
add
push
add
add
jp
or
xchg
add
roll
test
cltd
or
movsb
adc
add
roll
xchg
fwait
idivb
add
movsl
add
lods
adc
add
push
insb
add
cmc
incb
incb
negb
xor
adc
add
push
inc
cltd
or
xchg
out
push
incb
fists
incb
arpl
incb
adc
add
push
nop
lret
add
insb
add
add
cmpsl
lret
pusha
add
mov
inc
add
pop
dec
add
incb
fwait
and
add
push
add
inc
dec
sub
shr
cmc
in
rcr
sarb
add
jbe
rolb
xor
add
scas
mov
dec
add
adc
add
mov
jne
pop
outsb
add
add
ficoms
movsl
imul
add
or
jnp
xchg
add
incb
data16
cmpsl
test
cmp
inc
pop
aaa
incl
nop
inc
icebp
xor
add
cld
jp
and
xor
add
add
incl
lods
out
cmp
add
pop
popa
aam
xchg
incb
gs
add
jg
add
incb
push
add
mov
incb
xchg
sub
add
or
mov
arpl
jp
pop
fisttpll
out
xchg
mov
out
sti
outsb
add
incb
icebp
xchg
cmpsb
push
mov
pop
or
incl
cwtl
mov
add
incb
mov
ja
xchg
jne
orb
add
rcrb
incl
inc
add
push
add
push
dec
add
incb
xor
incl
mov
test
and
add
enter
incl
inc
hlt
push
add
cmpl
add
incb
cltd
dec
add
lret
add
or
cmp
add
or
incb
stos
fnstenv
dec
add
and
add
add
add
cli
sbb
sub
pop
incb
rorl
pusha
add
add
add
mov
lahf
cmp
sarl
popa
std
sbb
pop
jmp
add
add
clc
addr16
lret
lock
test
adc
add
incb
add
xlat
push
add
dec
pandn
add
sbb
mov
incl
add
add
jns
lods
jle
mov
add
pop
dec
adc
adc
add
fistps
push
add
std
mov
dec
add
nop
test
add
cld
int
add
sub
out
or
add
imul
add
add
mov
inc
add
add
incb
jge
incb
cld
aas
lods
and
add
enter
or
add
incb
push
in
push
mov
scas
int
jmp
incb
dec
add
stc
clc
pop
add
lret
jb
xchg
lret
cmc
add
add
incb
bound
push
xor
add
incb
inc
add
aas
and
add
incl
lds
incb
inc
add
mov
pop
incb
popa
popf
mov
incb
rolb
incb
xor
add
incb
add
mov
incb
add
add
lret
hlt
dec
outsl
add
add
pop
pusha
add
inc
add
mov
leave
and
add
sub
push
xlat
jl
pop
incb
jge
add
int
jle
imul
or
dec
add
incb
sbb
dec
cmp
jp
sub
push
add
incb
call
incb
push
incb
sub
push
or
movsb
mov
sbb
and
add
add
incb
or
sub
data16
incb
jmp
incb
pop
add
add
sbb
add
jb
jae
add
add
incb
jno
add
add
add
add
add
lock
dec
add
cmpsb
cmp
inc
add
mov
idivl
lock
incb
data16
sarb
fcoms
pushf
rcrl
pop
inc
xchg
daa
incl
out
movsl
lcall
add
push
add
jnp
lahf
xor
add
aas
or
stos
filds
and
add
jo
jbe
and
mov
incb
push
incl
out
add
and
inc
add
jg
aas
adc
add
jp
mov
fwait
bound
into
inc
cli
mov
jmp
xlat
mov
add
incb
jg
dec
sub
adc
add
sbb
and
add
add
sahf
in
mov
incb
and
add
pop
add
add
incb
ficoms
icebp
aad
call
add
sub
nop
dec
add
incb
fnstcw
dec
add
incl
add
incb
movsb
mov
add
mov
add
loopne
mov
mov
lcall
pusha
add
or
add
incb
pusha
add
dec
add
shlb
jmp
add
incb
incb
fwait
repnz
and
incl
dec
loop
incb
jae
mov
add
add
incb
ret
cmp
mov
incb
adc
add
mov
shll
or
lcall
sarl
push
add
add
testb
in
loop
incl
sub
inc
jle
and
add
add
test
in
fsub
aam
repnz
inc
mov
add
loope
int3
in
lods
add
add
cmp
sub
and
add
cwtl
aam
add
add
add
and
add
add
mov
sub
jg
push
add
push
or
cmpsb
outsb
add
lds
fcmovnu
lds
incl
xor
add
add
dec
add
repz
roll
popa
add
incb
push
add
sbb
jae
adc
add
or
push
xchg
sub
fidivl
xchg
imul
enter
dec
add
lea
out
insl
cmpsl
sbb
mov
jo
sti
int
mov
add
add
incb
mov
jecxz
add
add
dec
push
add
test
xchg
insb
add
bound
xchg
fucomp
mov
decl
aas
ja
adc
add
aaa
incb
fcoml
add
add
add
cltd
mov
incl
mov
add
incb
adc
add
and
add
ljmp
add
adc
add
cld
pop
add
icebp
rorb
ret
inc
add
pop
mov
incb
leave
sub
stos
sbb
dec
je
int3
sub
push
fwait
jle
sbb
add
xchg
insb
add
inc
ret
add
incb
loope
mov
xchg
xchg
shll
out
repnz
add
incl
call
xchg
lods
mov
sub
and
add
ljmp
mov
incl
stc
les
pop
cmpsl
stos
cmp
iret
shrl
adc
add
adc
add
incb
push
add
pop
adc
add
incb
dec
add
std
popf
sub
cmp
add
add
incb
call
pop
roll
push
add
incb
xor
add
out
jns
incl
iret
adc
add
incb
jle
dec
repz
inc
xor
add
jle
mov
incb
jne
incb
lods
jne
xor
add
cli
nop
and
add
fcmovnu
adc
add
add
jo
inc
aas
push
add
int3
mov
push
lcall
popf
dec
inc
add
out
or
xor
add
sbb
mov
adc
add
test
clc
fistps
add
mov
loopne
sub
incb
repz
out
incb
cmpsl
lret
jnp
mov
push
sarl
mov
incl
pusha
add
jmp
sub
stos
mov
icebp
pop
cld
int3
or
testb
add
stos
mov
incb
sbb
in
xchg
aas
js
outsl
add
add
cmp
add
add
pop
add
popa
jno
mov
icebp
aas
push
add
incb
add
add
push
add
sbb
inc
add
cli
xor
add
xchg
jb
les
add
lret
int
ja
aam
fsubs
enter
add
incb
pop
mov
add
and
add
jno
mov
add
cmc
jnp
mov
and
add
out
inc
add
xor
add
pop
add
add
out
jle
dec
push
incb
arpl
add
cli
pop
incb
outsb
add
arpl
jb
aam
cmp
js
jg
sahf
sub
incb
xor
add
fisubs
incb
jge
dec
mov
lods
fcomip
add
add
pusha
add
lods
test
xor
xor
add
pop
add
mov
add
incl
xchg
aad
adcb
add
xchg
fwait
nop
ret
incl
lds
cltd
idivb
add
incb
mov
repnz
incb
icebp
and
add
incl
cmp
inc
mov
incl
sbb
incb
xor
jmp
das
jae
mov
incb
sbb
dec
dec
xor
add
xchg
and
add
pop
pusha
add
mov
scas
dec
dec
add
subl
cmc
jne
jbe
and
add
ljmp
in
push
add
adc
add
incl
test
mov
add
incb
jo
std
scas
push
incb
testb
xchg
aam
add
pop
pop
out
mov
out
pop
movsl
movl
insb
add
add
add
add
fstps
sbb
fiaddl
cmp
dec
add
jno
adc
add
jl
adc
add
dec
mov
add
loop
push
add
add
fwait
jecxz
incb
mov
incb
andl
pop
test
cli
adc
outsb
add
add
add
loope
aaa
incl
imul
add
sub
nop
xchg
mov
incb
test
addr16
mov
test
fs
xchg
adc
add
pop
add
sbb
xor
add
daa
incb
add
add
and
incb
xor
add
std
mov
mov
add
add
aas
xor
add
xchg
pop
add
jle
pop
add
sbb
into
xchg
and
add
xchg
pop
jmp
add
add
incb
lods
cmp
insb
add
out
or
xlat
xor
add
leave
imul
sarl
add
xor
add
jecxz
cmp
cltd
sub
incb
inc
add
popf
inc
sbb
adc
add
aas
cmp
dec
add
push
add
incb
das
xchg
jmp
incb
stos
dec
add
data16
fildll
xor
add
sbb
sub
daa
incb
pop
jns
jge
lods
nop
hlt
fnstcw
shrb
xchg
sarb
xlat
mov
add
add
adc
add
mov
incb
sahf
out
iret
out
add
adc
add
add
incb
and
sahf
mov
and
add
add
mov
incb
cmc
or
push
add
incl
enter
arpl
add
aam
push
pop
add
pushf
sbb
incb
xorl
or
lret
and
add
inc
lret
jecxz
mov
mov
out
inc
and
add
fisttpl
ror
add
add
add
test
incb
neg
popa
dec
add
in
cmp
incb
pop
add
test
mov
add
dec
add
add
add
cli
cwtl
adc
add
and
add
inc
cmp
push
aas
push
add
add
out
test
pop
and
nop
jecxz
mov
xchg
cmc
out
add
jmp
cmp
jbe
adc
add
bound
int
sti
test
incl
inc
aad
add
pop
add
jne
incb
bound
aad
pushl
incb
push
pop
add
incb
cmp
xorb
int3
pop
incb
mov
add
mov
xor
add
rorb
jl
cmp
mov
jle
cmpsb
push
out
dec
add
notl
shrl
imul
mov
xor
add
loop
shrb
add
xchg
cmpsl
xor
add
cmp
stos
nop
mov
pop
leave
aad
incb
lcall
into
lahf
icebp
test
add
add
add
mov
adc
add
push
incb
adc
add
xor
sarb
add
add
incl
outsl
sahf
jp
aad
ljmp
add
ret
incb
jg
add
add
add
add
incb
mov
fnstsw
pop
incb
cmc
mov
je
push
xor
add
int
incb
add
add
add
mov
incb
imull
xor
add
jg
push
incb
sbb
repnz
add
push
add
rcrl
add
daa
incl
mov
add
incb
sarb
pop
add
cmp
mov
adc
add
leave
hlt
or
xchg
ljmp
call
incb
dec
push
add
and
add
push
add
add
add
cli
jb
and
add
incb
popa
xchg
jg
add
sbb
test
outsb
add
ljmp
movsl
adc
add
in
pop
add
inc
jmp
cmc
shl
repnz
rcrb
xchg
xchg
add
add
incl
mov
add
imull
add
push
incb
movsb
or
lcall
add
incb
push
incb
imul
lods
jbe
insl
jnp
mov
popf
push
add
mov
incb
or
sbb
jne
push
add
mov
fdivrs
imul
mov
xchg
jmp
fld
cwtl
cmc
xchg
out
mov
dec
and
add
jecxz
sub
add
testb
push
add
das
out
cltd
push
push
add
add
jnp
cmp
add
loop
incb
into
daa
incb
aad
jb
xchg
adc
add
gs
ljmp
add
add
cwtl
sbb
ja
das
cmpsl
jge
mov
add
cmc
cmp
or
mov
rcr
sbb
jne
push
cld
fwait
sbb
insl
mov
clc
pop
incl
ja
push
popa
adc
add
sahf
nop
fsubr
pop
cltd
sahf
jg
mov
add
add
cmp
cmp
jecxz
incb
insl
out
cmpsb
iret
fisubs
incb
outsb
add
aad
incl
push
incb
stos
push
cmc
and
add
rcr
jmp
xor
add
add
pop
adc
add
add
add
add
incb
fisttpl
popf
shlb
add
xor
pop
add
xchg
inc
fwait
mov
mov
incb
pusha
add
lds
in
outsb
add
add
cmp
test
add
pop
insb
add
out
add
add
das
nop
dec
add
incl
nop
mov
incb
stc
addl
std
ja
add
pop
add
pop
add
mov
mov
fists
cli
and
add
push
lea
sbb
xor
add
incb
scas
out
daa
incb
pop
adc
add
pop
add
add
test
adc
add
ja
and
add
pop
and
add
jecxz
add
incb
movsl
and
add
test
sub
add
add
incl
add
add
jae
jb
loopne
sub
add
int
add
add
or
incb
jg
mov
mov
pop
xor
add
mov
lods
roll
mov
add
mov
add
mov
mov
incb
add
add
incb
fdivrs
push
stc
std
mov
je
push
add
incb
cmpl
add
imul
in
add
incb
push
add
add
add
pop
adc
add
jbe
mov
add
add
dec
fnsave
hlt
sub
popa
pop
add
add
or
adc
add
incb
or
dec
or
incl
addr16
pop
incb
mov
add
push
neg
mov
je
and
add
jno
cmpsb
push
nop
adc
add
lret
pushf
mov
cwtl
loopne
incb
nop
push
sbbb
bound
movsl
out
icebp
cmp
mov
add
les
push
add
add
xchg
inc
cltd
cmc
mov
outsl
mov
std
insb
add
jmp
push
or
loope
fisubl
subl
dec
jmp
incb
out
mov
aas
aas
sbb
cmpsb
out
cmpl
hlt
aam
cld
lret
in
adc
add
dec
loop
mov
add
leave
pop
sbb
pop
inc
adc
add
mov
pop
add
push
add
adc
addl
add
dec
or
add
jb
add
add
xchg
sahf
pop
incl
pop
push
add
mov
mov
incb
xor
add
notl
add
incl
mov
sbb
inc
add
jmp
add
negl
ja
add
incb
sub
lahf
mull
add
movsb
add
add
aad
incl
inc
sbb
lahf
cmp
add
add
incl
jbe
or
in
xchg
inc
add
cltd
mov
fidivrl
add
add
add
add
sbb
xchg
incl
jnp
incb
lods
movb
add
push
pop
shll
pop
incl
daa
incb
mov
jg
popa
and
add
push
add
rcrl
add
add
incl
decl
lods
mov
jmp
repnz
add
mov
add
xchg
or
add
incb
lea
add
pop
mov
add
dec
add
incb
int3
sbb
xchg
sahf
or
pop
add
cmc
push
push
push
xor
pushl
incb
pop
add
add
mov
xchg
testb
pop
incl
imul
cmpsb
pop
incb
popa
or
sub
test
lods
push
add
add
add
add
adcb
add
incb
repz
add
iret
adc
sahf
xchg
adc
incb
jne
incl
add
add
add
mov
sbb
add
pop
add
add
pop
jg
add
adc
add
popa
ret
push
pop
add
and
add
mov
add
and
add
mov
std
inc
jecxz
mov
cmpsl
and
add
fcompl
dec
add
sarl
or
add
xchg
adc
add
xchg
addb
inc
add
push
incb
sub
and
add
outsl
sbb
clc
pop
add
xchg
inc
add
daa
incl
pushf
data16
incl
cmpsl
lret
cltd
inc
out
and
add
stc
cld
pop
add
cmpsb
pop
add
mov
into
fwait
gs
xchg
jmp
add
into
filds
push
add
add
and
add
incb
scas
lret
add
adc
add
test
add
cmc
xor
incl
lret
add
dec
cmp
sbb
sahf
cs
aad
pop
add
test
or
pop
add
incb
and
add
incb
sub
xchg
mov
pop
incb
jg
pop
incb
addr16
add
in
incb
pop
add
add
pop
in
jb
xchg
lcall
dec
sub
call
jae
push
incb
fsubp
dec
insl
sbb
add
adc
add
push
add
outsl
loopne
add
shll
incb
dec
add
xor
add
scas
outsl
xchg
sbb
cmpsb
mov
add
incb
and
add
incb
fisubs
push
test
xchg
cli
dec
and
add
rorb
add
add
add
incb
or
jo
adc
add
int
aaa
incl
movsl
push
shr
add
add
cld
ret
lret
add
incb
sbbl
iret
mov
pusha
add
add
iret
cmpb
iret
fdivl
mov
movsb
stc
mov
add
lock
das
pop
xchg
fsub
mov
add
incb
loopne
fbstp
aad
rolb
add
or
insl
mov
call
dec
call
adc
add
adc
add
and
add
pop
mov
cmp
mov
lods
mov
add
mull
je
imul
mov
incb
cmp
push
add
scas
js
bound
imul
shlb
dec
test
ja
add
mov
in
add
incb
adc
add
lret
mov
dec
pop
add
mov
lret
cmp
ja
flds
movsb
insb
add
jne
sub
ret
in
mov
punpcklwd
incb
push
incb
cmpsb
mov
jno
incb
imulb
jb
sub
fdivr
inc
stos
adc
add
incb
and
add
incb
data16
mov
insb
add
jp
ret
sahf
mov
add
jno
cmp
add
add
add
nop
popf
push
dec
add
jp
xchg
mov
mov
add
add
add
add
in
sub
mov
pop
mov
or
subb
rol
add
add
push
xor
add
cmpsl
add
add
incb
add
pop
mov
incb
mov
add
mov
incb
aaa
incb
leave
jmp
push
add
int
add
in
xor
add
popa
jae
test
cmp
xchg
cmp
lea
add
add
add
leave
movsb
dec
dec
fnstcw
mov
gs
incl
movsb
cmpsl
jns
jns
bound
mov
add
inc
xor
add
addr16
add
incb
add
add
add
repnz
stc
ret
mov
dec
push
add
in
aaa
incb
pop
add
incb
outsl
or
std
push
popa
mov
incl
inc
mov
ja
fisubrl
add
cmc
adc
add
add
clc
mov
add
add
fnsetpm(287
inc
add
icebp
ljmp
incb
mov
jp
push
incb
cmp
cmp
cmp
xor
add
add
jle
cmp
add
add
out
jecxz
int
insb
add
dec
shll
lods
adc
add
mov
lock
add
jmp
popa
pop
test
push
add
mov
mov
or
and
add
bound
mov
add
incb
jmp
mov
incl
xor
add
sub
add
pop
add
incb
inc
add
add
cwtl
pop
adc
push
jl
movsl
pop
incb
js
sub
daa
incl
and
test
incl
data16
sbb
int3
repz
add
inc
add
sahf
cmpb
xchg
das
movsb
orb
incb
cmp
imul
ja
lock
incl
fdivrl
add
inc
add
cmp
and
add
add
mov
incb
and
add
outsl
sbb
incl
inc
add
incb
mov
dec
fidivrs
cmpsl
repnz
jbe
inc
sub
adc
add
pop
mov
in
xchg
or
xor
add
gs
ret
adc
add
in
mov
incb
iret
pop
add
add
incb
shrl
sahf
fisubrs
mov
add
jo
inc
add
incb
ret
lcall
testl
mov
add
incb
inc
add
jbe
jge
dec
add
and
or
mov
add
daa
incb
enter
icebp
cmp
pusha
add
incb
fbld
incb
xchg
outsl
into
std
jmp
bound
incl
enter
add
incb
rcll
add
incb
mov
outsb
add
push
inc
sub
in
xor
aad
incb
in
add
out
add
add
gs
pop
pop
add
jo
rcll
mov
add
mov
jne
add
test
inc
jo
leave
xchg
cli
aad
sbb
shl
popf
lods
mov
add
add
jecxz
incb
xor
add
stos
shlb
add
jp
or
jmp
add
cwtl
xchg
shr
movsb
aad
add
leave
addr16
mov
and
add
jle
mov
add
dec
aas
mov
jecxz
add
add
pop
add
xor
add
add
incb
fmulp
mov
add
clc
jae
push
incb
sti
mov
add
ret
adc
add
incb
ret
out
loopne
add
addl
aas
mov
add
incb
jo
movb
sahf
mov
incb
mov
int
mov
loopne
pop
incb
cmp
mov
pop
add
sahf
je
inc
loope
cmc
sub
add
pop
add
xor
incl
enter
mov
sbb
stc
cmp
and
add
add
jo
mov
std
notl
clc
cltd
add
roll
dec
add
pop
imul
add
mov
incb
leave
dec
add
aam
add
mov
incl
imul
mov
incb
scas
bound
lret
inc
fimuls
add
add
sbb
fildl
add
sti
add
cld
dec
add
mov
jle
ret
je
xchg
pop
outsb
add
add
add
add
add
add
add
pop
lods
pop
and
push
mov
sub
lea
push
push
call
mov
lea
mov
push
push
push
push
call
cmp
jo
mov
push
push
push
push
call
movzwl
xor
lea
and
or
push
push
shr
jne
ret
call
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
fdiv
add
dec
add
call
jae
push
add
push
add
incl
add
add
test
add
push
add
cmp
cmove
vcvtdq2ps
and
add
incb
outsl
lea
shll
incb
negb
jl
cmp
cmpsl
adc
add
clc
ret
add
add
jae
aam
jge
or
dec
add
jecxz
lea
add
add
add
incl
jmp
lcall
xor
add
push
add
add
add
add
sahf
push
pushf
std
bound
fdivl
das
fcoms
js
scas
fisttps
add
incb
pop
data16
sub
test
movsb
std
mov
dec
add
jbe
in
scas
push
and
add
xchg
xchg
or
push
mov
mov
lds
push
add
mov
test
incb
shrl
xlat
stos
arpl
or
incl
das
xchg
loop
incb
loopne
add
add
add
xor
add
adc
add
dec
add
inc
mov
add
mov
incb
jp
stos
daa
incl
add
add
pop
add
mov
pop
add
dec
add
xor
add
add
add
add
loopne
sbb
xchg
scas
pop
int3
sbb
mov
sbb
lret
inc
adc
add
add
push
push
add
pop
gs
and
add
sti
sub
test
cmp
inc
mov
jp
aad
mov
dec
add
js
out
add
add
add
fwait
inc
fwait
adc
add
mov
sbb
incl
mov
incb
incb
mov
add
add
mov
lret
xchg
ret
add
mov
mov
add
add
and
add
enter
add
xchg
mov
je
out
mov
sub
mov
cmp
andl
xor
add
push
lock
push
add
pop
incl
sahf
lret
lds
popf
adc
add
ficomps
jbe
std
sbb
push
incb
jo
pop
add
mov
clc
lods
aad
incb
add
add
hlt
xchg
popf
popf
cmp
pop
or
add
inc
mov
scas
xchg
adc
add
incb
fwait
sti
and
add
jno
add
xor
add
sbb
and
add
je
cmpsl
xchg
jecxz
incb
and
add
in
add
add
xor
add
lock
add
xor
add
in
push
incb
das
lret
xchg
push
add
nop
shll
add
scas
stos
jne
cmpsl
cmp
incb
pop
outsb
add
orl
add
add
xchg
push
dec
add
jnp
add
add
or
xchg
mov
imul
movsb
push
mov
add
sbb
inc
add
add
nop
push
add
add
add
test
add
add
cmp
data16
sub
dec
add
add
sub
xchg
xchg
dec
xlat
lret
test
push
add
jp
lret
push
incl
sbb
push
add
or
bound
lods
mov
cltd
cmc
cmc
cmp
inc
add
push
ds
fisttps
cmp
incb
ret
add
and
add
sarb
sar
mov
add
sub
mov
add
call
jb
dec
outsl
into
and
add
cmpb
add
jb
mov
cmp
mov
push
leave
xchg
and
add
xor
add
inc
sarl
test
sbb
scas
cmpsl
mov
push
add
incb
xor
add
incb
jnp
sbbl
sub
add
incl
fisubrl
incl
test
aas
iret
jp
test
leave
xchg
loop
incb
adc
incb
mov
add
add
mov
xor
add
or
push
add
arpl
sub
xor
add
adc
add
incb
inc
add
lds
test
add
add
add
and
add
arpl
outsl
fcom
sub
cmpsb
dec
add
push
incl
mov
addb
add
add
mov
add
add
add
add
pusha
add
cwtl
incb
add
add
repnz
add
incb
jp
mov
mov
mov
sub
dec
add
sub
in
pop
daa
incb
push
and
add
push
incl
add
add
incb
dec
cmp
aad
xor
add
insl
cmc
add
add
incb
sub
add
inc
call
incb
sub
sti
push
add
and
add
add
loope
xor
add
add
jg
incb
jmp
add
jmp
add
add
incb
jg
add
sub
incb
push
pop
add
imul
xor
add
add
data16
add
incl
das
jns
inc
sbb
fistps
test
add
lock
incb
xor
add
loop
cltd
enter
dec
mov
enter
out
pop
add
add
mov
clc
popf
push
cmp
and
loopne
out
test
add
inc
add
add
in
add
mov
add
incb
xor
add
adc
add
das
or
test
add
add
push
add
lahf
ds
mov
add
inc
shlb
incb
or
jo
mov
dec
jp
xchg
adc
add
pushf
daa
incb
outsl
ficompl
mov
add
ljmp
incb
push
add
incb
cmp
or
imul
int3
xlat
dec
test
xchg
adc
add
insb
add
add
add
xor
add
mov
add
rorl
add
add
pop
incb
sub
sbb
dec
js
ljmp
mov
ficoms
test
mov
je
push
incb
icebp
add
jmp
incb
mov
incl
cmpb
ror
cwtl
dec
add
or
jnp
pop
add
jmp
cmp
out
xor
add
bound
xchg
fdivrp
lock
dec
add
imul
or
shrb
add
incb
add
add
mov
mov
sti
mov
cmp
out
dec
pop
add
dec
loopne
mov
add
sbbb
xchg
inc
add
add
sbb
dec
xchg
push
incl
cmp
pusha
add
inc
and
add
addr16
xor
add
lock
add
test
fistl
leave
loop
jae
dec
das
mov
cmp
rcl
movsl
ljmp
mov
bound
sub
sbb
test
idivl
add
add
push
add
or
cmp
or
incb
cmpsb
inc
mov
add
fst
insb
add
lahf
adc
add
imul
add
pop
mov
mov
xor
add
or
add
into
ret
inc
pushf
sub
incb
push
add
add
incb
pop
add
add
sahf
cmp
dec
sbb
incb
sub
in
push
mov
add
add
incl
mov
add
add
into
shll
into
mov
xorb
add
push
dec
das
inc
mov
xlat
mov
inc
add
incb
sub
add
incl
xchg
mov
add
push
repnz
add
jne
add
sbb
shrl
incl
cmp
mov
mov
mov
mov
mov
cmp
mov
dec
add
add
add
nop
and
add
gs
pop
add
mov
daa
incl
out
scas
outsb
add
cmp
add
add
add
incb
mov
imul
incl
add
mul
push
mov
add
mov
divl
jmp
add
sbb
pop
inc
add
mov
into
add
add
sti
mov
pop
test
cli
add
rcrl
out
lock
add
adc
in
add
add
inc
add
add
add
xchg
adc
inc
mov
lods
and
add
or
jo
xor
add
nop
adc
add
incb
in
in
incb
insl
lods
mov
add
mov
add
incl
neg
pop
bound
repz
add
add
incb
fadds
pop
add
imul
fists
sti
dec
loop
pop
add
faddl
incb
inc
add
pop
incb
or
incl
arpl
incb
lock
incb
inc
add
gs
push
add
lods
imul
or
push
jg
incb
int
mov
dec
mov
xchg
bound
repz
jp
adc
add
ljmp
add
imul
add
lahf
orl
add
add
jle
out
pusha
add
js
mov
cli
lcall
outsl
sbb
in
mull
addl
out
add
cmp
add
add
push
xor
add
fiadds
incl
pop
icebp
les
incl
mov
add
pop
add
add
add
mov
orl
mov
scas
mov
add
mov
incl
lock
js
cmpsb
dec
or
imul
adc
add
sahf
js
mov
add
add
add
add
add
and
add
sti
pusha
add
push
cmp
add
incb
ret
add
sbb
add
incb
pop
jp
pop
add
adcl
add
add
les
incb
jo
push
add
iret
leave
jl
aad
incb
add
and
add
add
xor
add
xor
add
add
add
mov
add
subl
add
add
stos
xchg
add
cmp
jmp
add
fcomp
mov
or
mov
push
incb
into
fmul
cmpsb
stos
out
mov
inc
sbb
xor
add
add
add
add
add
incb
pop
add
cld
icebp
or
mov
fnstenv
and
add
aaa
incl
push
addb
add
add
cmpsl
sbb
incb
mov
incb
arpl
lret
inc
xor
add
add
add
incl
add
imul
incb
sbb
stos
lret
incb
outsl
mov
or
incb
xchg
add
incl
jle
cmp
xor
add
sub
arpl
sti
jne
lods
scas
iret
inc
add
add
les
add
fnstcw
add
xchg
lcall
lea
incl
in
mov
comiss
incl
std
popa
test
or
stos
add
add
incl
add
aad
xor
add
jno
dec
add
in
loop
pop
mov
add
add
add
add
add
add
hlt
dec
mov
data16
insl
inc
add
insl
inc
add
and
add
or
add
clc
imul
add
xchg
shll
incb
cli
or
push
add
loope
add
incb
shlb
add
jl
inc
add
fisttps
ja
add
incb
data16
jb
sbb
mov
add
add
push
incl
lahf
out
add
add
incb
cli
lea
add
pop
je
xchg
sbb
jl
je
hlt
xchg
loopne
ljmp
xlat
mov
sub
incb
pop
lahf
inc
add
add
mov
xor
add
incb
jo
cmp
insb
add
nop
fdiv
xor
add
imul
lcall
add
xor
add
sbb
xchg
ljmp
push
add
add
incb
js
jne
push
add
rol
mov
in
lgs
add
push
add
inc
test
xchg
lahf
cmp
ljmp
loop
add
stos
and
add
xlat
push
add
add
incb
ficoml
incb
iret
inc
add
int3
mov
mov
mov
pop
sbb
pop
test
mov
push
cmp
arpl
add
fld
imul
jne
push
cs
cmp
adc
add
add
add
push
add
add
push
mov
pop
jb
nop
addr16
lcall
add
inc
gs
mov
lahf
pop
incb
add
add
adc
add
xorb
add
add
xchg
inc
fistps
add
inc
add
add
sbb
sti
xchg
add
add
xor
add
aaa
incb
sbb
sub
incb
gs
fwait
xor
add
fsubrl
ja
add
ja
inc
add
incb
fcmovnb
pop
incb
outsb
add
cli
push
jbe
sub
cmp
lds
xor
add
imulb
push
xchg
addr16
rclb
incl
add
cmpsb
mov
test
aas
cmpl
add
add
incb
stos
or
fiaddl
or
push
add
hlt
push
or
lret
setno
add
pop
add
incl
popa
push
add
pushf
push
add
pushf
gs
test
out
bnd
adc
imul
add
xchg
jne
arpl
incb
xchg
push
incb
cmpsb
das
xchg
lret
pop
fmul
lret
testb
jo
imul
test
and
add
mov
incb
add
add
add
out
add
incb
push
add
add
incb
jp
xchg
ja
xchg
arpl
add
add
dec
add
incl
mov
add
incb
lds
mov
inc
shlb
popf
pop
mov
add
dec
sub
add
dec
orl
das
test
incb
xor
add
add
addr16
add
enter
pop
push
incb
cmp
fildll
add
add
add
incl
and
add
gs
incb
add
ljmp
add
sbb
add
add
cvtps2pi
add
cmp
add
add
add
incb
pop
incb
mov
xchg
push
add
sarl
sub
lcall
jnp
popf
xchg
or
and
add
mov
scas
mov
nop
mov
incb
subl
mov
add
ljmp
push
add
add
add
add
incl
cmp
jb
adc
out
push
add
incb
cmc
jb
adc
add
jge
add
xor
add
jae
fisubrl
fmul
std
popa
insb
add
bound
xchg
shrb
gs
xchg
cmp
xchg
in
jmp
stc
lea
add
xchg
adc
add
push
add
and
pusha
add
lret
pop
add
mov
inc
cmp
xor
add
incb
add
add
xchg
loopne
incb
iret
shll
incl
push
incb
aaa
incb
loop
pop
mov
lret
jnp
lahf
push
incb
mov
lret
cmp
aaa
incb
movsb
mov
push
add
icebp
adc
add
fistpll
fwait
pop
sub
movsl
or
lcall
xor
add
adc
add
xor
add
jp
in
push
out
fwait
mov
dec
sub
add
jb
aaa
incb
sub
sub
mov
add
push
add
push
fldl
incb
inc
jp
push
and
lahf
lods
insb
add
int3
js
xor
add
add
pop
incb
lea
mov
add
add
mov
xchg
inc
add
sti
mov
incb
aad
incb
mov
outsb
add
incb
imul
loopne
add
add
add
add
xchg
fstpl
add
pop
add
shlb
incb
inc
add
lret
mov
jns
mov
add
incb
mov
mov
je
cmp
add
add
incb
jmp
outsb
add
les
out
add
push
add
mov
add
push
incb
decb
in
add
add
incb
and
add
push
enter
dec
stos
sbb
jnp
add
scas
and
add
movsl
dec
push
add
jecxz
push
lock
pusha
add
sbb
dec
jge
pop
incl
gs
cmpsl
push
pop
pop
add
mov
jecxz
xor
add
rclb
add
jae
jnp
push
push
add
incb
mov
fs
repz
push
incl
leave
mov
add
push
incb
fcoms
mov
dec
fisttps
ds
mov
jecxz
add
incl
stos
imul
mov
incb
insb
add
sti
add
add
pop
add
incb
xchg
xor
add
pop
incb
inc
mov
pop
add
incb
aaa
incl
and
add
sbb
sbb
incl
inc
das
push
add
incb
jbe
ljmp
incb
dec
sub
movsl
push
pop
add
mov
jg
mov
mov
addr16
incl
pop
add
xchg
push
add
decb
incb
add
add
sar
mov
mov
cli
das
lret
jcxz
add
lods
xor
add
cmpsl
mov
test
mov
add
ja
not
scas
repz
push
add
mov
scas
xchg
add
add
cmc
dec
add
mov
push
inc
add
xor
add
incb
fsubs
fidivrl
lret
dec
add
cli
cmp
pop
xorl
scas
iret
pop
aaa
incl
loopne
arpl
add
incb
adc
add
incl
jae
add
and
add
xor
add
incb
or
lret
or
jb
or
gs
jg
in
jl
add
add
incb
fnsave
incl
inc
add
int3
jbe
add
xchg
idivb
jae
incb
jl
jne
jbe
clc
movsl
jmp
sbb
aaa
incb
jecxz
add
jp
shll
into
mov
add
add
incb
shrl
add
pop
add
dec
add
add
data16
clc
lock
xchg
lock
aam
add
mov
add
add
add
add
inc
dec
add
add
xchg
sub
mov
add
incb
xor
add
outsl
inc
add
incb
jno
sbb
push
cli
mov
incb
xor
add
incl
scas
sub
dec
stos
adc
add
test
lcall
sbb
xor
add
mov
add
add
xor
add
in
in
inc
sub
pop
add
mov
incl
cltd
call
lods
fcoms
adcl
cmp
incb
shll
incb
enter
jl
and
add
incb
lret
mov
xor
add
incl
xlat
and
cs
xor
add
in
inc
inc
add
test
push
add
add
scas
jae
add
xchg
dec
add
incb
inc
add
popf
std
pusha
add
pop
cmp
sbb
pop
sti
in
cli
mov
das
cmpsb
clc
and
add
incl
loope
or
mov
jmp
cmc
jno
add
add
add
call
faddl
addb
add
add
dec
add
sub
dec
add
addb
add
stos
lcall
mov
loope
incb
clc
mov
fbld
std
les
mov
pop
add
sti
dec
sub
in
test
jno
push
push
cmp
repnz
push
add
xchg
ja
sbb
dec
add
cmp
test
dec
aas
xchg
fldl
flds
incb
mov
std
into
add
xchg
or
test
lods
adc
add
push
mov
add
dec
add
inc
test
notl
pop
add
mov
push
add
add
jl
add
incb
dec
add
lods
fidivrl
add
popa
dec
fdivs
incb
loop
jne
cmp
imul
sub
xchg
jae
jge
andb
add
shr
add
add
imul
mov
jns
scas
push
incl
test
lret
push
add
jmp
bound
jmp
movsl
int3
test
lret
test
and
add
mov
sub
daa
incl
cmp
cmc
and
add
test
imul
lret
sub
dec
add
fmuls
incb
jl
pop
incb
dec
mov
incb
cwtl
sbbl
incb
call
pop
add
add
incb
jg
test
incl
inc
sub
in
les
add
xchg
jecxz
add
sbb
leave
adc
add
lahf
clc
add
popf
pop
incb
inc
icebp
notl
jmp
fldl
mov
call
incb
mov
cwtl
lret
sbb
lods
push
add
incb
out
mov
add
incb
int3
pop
jns
pop
add
adc
add
cmpsl
or
gs
add
les
addl
add
incb
scas
mov
incb
inc
add
cmpsb
cwtl
jbe
add
icebp
jb
xchg
pop
add
fwait
dec
add
incb
cmp
nop
iret
pop
ljmp
sub
xor
add
add
add
jo
cld
jecxz
xchg
xchg
popa
in
push
add
jmp
paddd
push
mov
push
outsl
outsl
ffree
notl
inc
add
push
add
movsl
add
add
add
add
lret
insb
add
incb
lds
mov
and
add
incl
aaa
incb
inc
add
jge
add
add
add
dec
jnp
pop
incb
adc
add
stos
sub
gs
ljmp
mov
mov
orl
cltd
fbld
incb
addr16
add
incl
xor
scas
sub
add
add
or
mov
imul
ret
mov
add
test
add
mov
incb
into
pop
xchg
jb
add
add
enter
pop
adc
add
aaa
incb
cwtl
push
pop
add
incl
mov
ja
add
call
fdiv
addr16
lahf
pop
add
leave
int3
and
add
incb
lea
sbb
incb
movaps
fwait
incb
add
dec
add
add
repz
or
movsl
fcmovnb
loope
add
out
imull
mov
adc
add
jo
clc
loope
inc
add
xchg
sti
or
nopl
inc
adc
add
ret
das
lods
sub
xchg
mov
incb
out
aaa
incb
adc
add
add
add
add
add
cli
mov
add
scas
shrl
lods
imul
movsb
bound
mov
add
add
xchg
stc
ret
add
add
cmpl
sbb
incb
push
add
mov
xchg
ds
sub
add
sub
add
add
add
add
add
add
pop
add
in
rcl
out
mov
addl
incb
in
xor
add
rcrl
jle
add
xchg
insb
add
add
or
add
incb
add
add
inc
add
add
add
add
mov
je
fimuls
scas
sahf
lock
das
aad
push
incb
insl
imul
sub
mov
adc
add
incb
jnp
lea
or
rcrl
mov
dec
and
add
fiadds
xchg
mov
cmpsb
rorl
aaa
incb
hlt
adc
add
incb
in
push
add
loop
imul
and
add
incb
data16
incb
jg
add
xor
add
mov
adc
ret
add
testl
jno
add
lods
adc
add
popa
jne
rcr
mov
incb
in
push
add
sbb
fsubrs
ja
inc
add
cli
dec
rorl
adc
add
incb
rorb
push
add
ljmp
outsb
add
incl
mov
lcall
add
incb
jbe
cmp
iret
sbb
push
add
incb
xchg
adc
add
incb
mov
add
xlat
pop
incb
dec
fwait
out
cmp
out
in
test
add
cmp
leave
lcall
push
repz
stos
xchg
incb
jmp
inc
add
sar
and
jecxz
shll
add
incb
dec
fisubs
fiadds
cmp
idivb
xor
add
jne
into
push
lods
sbb
into
pop
push
jns
lcall
out
inc
add
incb
ljmp
dec
shll
or
testl
incb
xchg
mov
mov
fildll
add
add
incb
pop
add
or
ljmp
incl
ret
add
pop
incl
and
add
push
cmp
push
add
imul
loope
incb
ret
in
and
add
incb
lcall
add
incb
inc
das
mov
xchg
lds
sub
add
mov
and
pop
incb
dec
add
xchg
push
add
daa
incb
and
add
scas
pushf
in
mov
sub
and
incl
or
cmp
add
sub
pop
jae
add
push
pop
add
add
js
cmp
xchg
and
add
add
sub
add
add
add
scas
push
add
add
cmpsb
pusha
add
xor
add
jbe
pop
add
scas
sub
mov
incb
std
mov
rcll
fnstsw
lods
pop
add
add
stos
inc
add
inc
add
mov
xor
incl
out
mov
xchg
xchg
add
scas
cmpsb
int3
xor
add
add
stc
adc
add
mov
push
push
add
incb
movsb
fcmovu
lea
lea
xchg
mov
incl
arpl
lods
adc
add
add
leave
sbb
inc
add
mov
loop
and
add
bound
bndstx
ja
add
add
push
cmp
xchg
jns
incb
mov
incl
inc
hlt
pop
bnd
incb
and
add
mov
incb
out
adc
sub
ret
add
cmpb
push
xor
add
lret
jle
xor
add
incb
dec
add
jno
or
push
mov
aam
leave
mov
movsl
lcall
push
add
and
add
pop
add
jge
pusha
add
jne
dec
add
testb
add
incb
mov
add
add
lock
push
incl
sub
lods
sahf
pop
incb
pop
gs
lds
add
lock
add
movsb
dec
add
incl
ds
daa
incb
xchg
add
add
ja
jl
insl
dec
ja
cld
int3
fimull
add
add
push
add
orb
add
add
incb
sbb
jl
cwtl
test
incb
or
aas
jae
enter
jmp
and
add
add
mov
test
movsb
fimull
xchg
repnz
incb
jmp
push
dec
add
dec
idivl
mov
add
incb
adc
add
add
add
add
add
xor
add
pop
add
add
cmp
mov
andl
call
incl
js
sbb
xchg
mov
lcall
add
bound
pop
push
std
cmp
push
incb
jge
jmp
add
xchg
imul
push
incb
sti
shlb
incb
add
xchg
adcl
add
mov
fwait
inc
add
icebp
popf
cmp
js
and
add
incb
xor
lds
mov
incb
loope
incl
lods
fdiv
fcom
adc
add
imul
add
incb
pop
add
push
add
add
mov
add
adc
add
push
jne
add
and
add
add
incl
and
add
incb
cmc
and
add
das
hlt
addr16
ret
add
add
add
add
cli
popa
sub
incb
mov
stc
sbb
add
add
or
jecxz
pusha
add
stc
loopne
int
popf
or
cltd
mov
add
add
rolb
sarl
add
jge
xor
add
incb
mov
fstl
add
add
aad
xchg
dec
add
xor
add
aam
sbb
add
fdivl
bnd
sahf
rorl
add
sbb
or
jg
incb
cmp
jnp
jl
pop
add
incb
inc
lret
add
jb
xchg
mov
add
push
pusha
add
xor
add
incb
fdiv
fcmove
sbb
incb
arpl
xor
add
gs
rcll
std
inc
push
incl
mov
iret
call
add
in
rolb
add
incb
pop
incb
call
sarb
movsb
add
add
repz
movsl
sub
adc
cltd
in
or
std
out
and
cmpsb
in
and
add
call
jmp
add
push
add
pop
add
mov
add
and
add
dec
pop
sbb
jg
add
out
jnp
incl
rcrl
add
int
lds
pop
shl
inc
lock
jae
inc
sbb
add
mov
incb
jbe
inc
add
mov
add
mov
arpl
inc
lcall
push
add
xchg
imul
add
xor
add
incb
mov
pop
push
sub
xchg
dec
pop
stos
adc
add
test
add
add
sub
add
insl
add
incb
pop
incl
lret
xchg
enter
bound
mov
add
scas
dec
incb
xor
add
popa
dec
add
imul
bound
sbb
push
add
sub
insb
add
adc
add
add
das
sub
and
add
incb
mov
add
add
sti
seto
xor
adc
add
add
enter
incb
test
jne
lea
mov
mov
add
add
adc
add
ret
mov
cmp
mov
mov
das
cli
gs
fildll
pop
add
fwait
add
xor
add
incb
xchg
lods
test
mov
add
je
repnz
xor
add
xor
add
pop
inc
sbb
add
ror
sti
inc
add
add
incb
sahf
rcll
add
mov
push
incb
jno
add
add
add
dec
add
mov
lcall
repz
mov
bound
rcl
xor
add
incb
xor
add
dec
mov
lahf
adc
aas
sar
dec
add
loope
xchg
mov
dec
add
add
leave
jnp
lret
mov
pop
add
dec
dec
push
incb
inc
add
mov
jne
incb
test
inc
add
clc
jno
add
pop
lahf
outsl
jle
dec
out
je
mov
xchg
call
aad
aad
das
data16
incl
dec
mov
int
incb
xorb
aas
aam
add
incb
fs
dec
add
je
and
add
mov
add
xor
add
je
out
jno
mov
add
jns
xorb
incl
push
add
incb
inc
cmp
loop
or
and
add
imul
dec
add
sub
hlt
mov
add
incl
add
push
add
incb
outsl
mov
inc
popa
int
incb
pusha
add
mov
add
negl
mov
clc
mov
mov
aam
stos
pusha
add
incb
ret
in
out
cmp
data16
add
repnz
add
test
add
incb
div
fnsave
incb
mov
incl
xchg
and
add
lret
in
lds
push
incb
xchg
lock
fstpt
mov
cmp
jl
add
dec
add
add
outsl
daa
incb
jbe
rcl
shl
repz
xchg
sbb
insl
stos
dec
and
add
and
add
push
enter
add
in
imul
incl
in
repz
jp
orb
add
jp
filds
incb
cld
pushf
and
add
repz
cmpb
mov
add
xchg
push
add
out
and
hlt
add
add
incb
jl
sti
sub
dec
mov
in
out
adc
adc
xchg
test
push
sbb
xchg
adc
add
mov
jmp
or
xchg
cmp
add
loop
mov
mov
cmp
cltd
dec
insb
add
xchg
xchg
fildll
daa
incb
rorl
in
mov
incb
js
fdivr
mov
cmp
rclb
in
adc
add
lea
add
imul
add
and
add
add
mov
jo
push
rorl
shl
sub
incl
insb
add
test
scas
lock
in
mov
and
add
xor
add
incb
cld
shlb
inc
add
incb
out
cmp
mov
clc
mov
push
add
add
add
cmp
imul
jecxz
add
mov
add
or
dec
add
push
pop
incl
std
test
or
jp
loope
sbb
or
aad
jl
out
in
pop
incb
test
add
add
or
cld
movsl
mov
in
addr16
add
subb
test
mov
dec
add
add
adc
pushf
adc
add
push
add
sti
test
add
cmp
lahf
bound
stos
cmp
lods
cmpsb
ret
add
and
add
incb
adc
add
add
incb
sti
lcall
addr16
in
int3
and
add
and
add
incl
incb
mov
pop
out
in
hlt
xor
add
add
sub
add
push
jg
jno
incb
scas
and
add
incl
push
add
add
popf
mov
in
repz
cwtl
aas
lds
add
scas
orl
dec
add
incb
add
add
add
incl
pushl
incb
std
repnz
incb
testb
loope
mov
jecxz
add
pushf
jb
mov
scas
inc
mov
mov
into
lock
adc
add
incb
daa
incb
xchg
out
incb
cmp
icebp
rcl
dec
ds
bound
jbe
mov
xor
add
add
aaa
incb
lock
add
outsb
add
add
sub
pop
fisubrl
stc
shlb
incb
cmp
ja
jle
jg
xor
add
mov
jl
ret
cltd
mov
add
incb
pop
movsl
insb
add
add
incb
cld
adc
add
cmpsl
jo
data16
add
shlb
test
cmp
ljmp
into
fld
mov
add
add
add
mov
and
add
incl
call
sub
xchg
rcrl
int3
jmp
fnsave
pop
rcrb
add
pop
cmc
and
add
incl
xor
add
rclb
incb
stos
sbb
into
cwtl
fwait
mov
mov
or
adc
add
pushl
xchg
xchg
inc
xchg
jle
and
add
add
incb
rcr
cmc
loop
jecxz
ret
cmp
xor
add
sub
dec
imul
dec
test
sbb
incl
mov
add
incb
fbstp
cmc
xlat
outsl
jp
xor
add
jecxz
or
or
faddp
and
add
shrl
in
ja
mov
pop
incb
xlat
and
add
incb
jecxz
das
mov
mov
or
mov
add
or
add
scas
xlat
dec
add
jge
cmc
rcrb
je
push
add
mov
in
xchg
inc
pop
add
add
fwait
cmp
or
out
push
cmp
cltd
testl
incb
mov
incb
mov
jecxz
incb
rcl
jp
add
add
add
add
adc
add
incl
inc
mov
incb
push
je
jg
jl
mov
add
incb
xchg
xlat
aam
push
incb
sbb
fildl
add
add
mov
incl
shlb
mov
data16
popf
dec
mov
xor
add
gs
add
out
incb
stos
push
pop
add
je
incb
daa
incb
std
js
lahf
mov
sub
add
jmp
xor
add
jne
add
shl
incb
pop
sub
sub
add
add
add
dec
and
sbb
inc
add
cwtl
inc
add
lret
and
add
bound
fisubl
incb
stos
sbb
jge
add
xchg
jb
das
mov
repnz
cmpsl
in
jno
add
or
mov
movsl
sbb
in
fcoms
sub
incb
mov
fisttpl
mov
xchg
xor
xchg
add
je
jg
add
add
dec
add
add
les
add
incb
mov
add
arpl
popl
add
add
sbb
add
adc
add
aas
cmpsb
jle
js
pop
gs
loopne
mov
add
mov
pop
movsb
lds
fmull
jp
or
jg
push
cmc
clc
mov
leave
mov
iret
xlat
daa
incb
xchg
push
add
enter
add
add
add
pusha
add
addr16
and
add
bound
cmpsl
stc
push
dec
mov
add
jge
cmpsb
jle
dec
add
inc
and
add
add
incl
shlb
into
ret
stc
stc
loope
jl
inc
xor
add
incb
xlat
push
pop
ficomps
enter
gs
aaa
incb
pop
scas
icebp
outsb
add
add
adcb
scas
sbb
jg
cmp
sti
inc
incl
incb
enter
add
incl
mov
add
incl
push
into
dec
push
out
neg
testb
jbe
mov
enter
add
jge
ja
fst
mov
sbb
clc
imul
sarl
flds
xchg
dec
add
incb
repnz
enter
hlt
bound
stc
test
push
add
fs
test
enter
enter
add
incb
incb
cmp
sub
add
push
add
add
add
add
add
add
add
incb
mov
add
sub
sti
mov
incb
or
in
push
incl
mov
xchg
incl
lds
add
incb
insb
add
add
int3
add
add
js
dec
add
adc
add
mov
incb
sar
add
nop
xchg
sbb
mov
mov
push
in
pop
add
movsl
les
add
out
cmp
or
mov
add
adc
and
add
incb
gs
incb
je
or
or
add
mov
mov
inc
add
push
incb
repnz
movsb
or
sub
pop
incb
dec
add
incl
sbb
add
add
aas
daa
incb
mov
movl
mov
add
add
pusha
add
mov
pop
mov
add
ret
pop
add
imul
add
add
push
incb
adc
add
mov
subl
add
daa
incb
sbbl
add
cmpsl
mov
add
divb
out
xor
add
mov
xor
add
nop
testb
sub
mov
add
push
add
adc
add
insl
mov
add
mov
add
push
add
int
fimuls
jmp
jo
push
add
mov
sti
mov
leave
imul
incb
jne
loop
add
add
filds
or
popa
into
int3
dec
add
add
cmpsb
push
add
enter
or
add
incb
adc
add
cwtl
mov
cs
push
add
add
cmp
cli
lods
add
incl
inc
sub
cmp
inc
mov
je
aad
incb
adc
add
push
sbb
les
jae
lahf
dec
add
add
xor
add
mov
cmp
cld
in
add
mov
incl
xchg
jge
or
sbb
les
dec
in
stos
mov
add
imul
add
xchg
andl
mov
mov
add
incl
iret
jae
lcall
and
incb
ljmp
repz
out
add
xchg
mov
dec
add
inc
enter
add
dec
add
incb
idiv
push
incl
jb
lock
ljmp
mov
inc
xor
add
les
add
fstpl
xchg
xor
add
incb
adc
add
xchg
push
add
sub
addr16
pop
outsl
xchg
xor
cmp
add
add
in
sbb
incb
repnz
add
add
loopne
jae
sub
add
add
and
add
mov
cli
mov
xorb
add
adc
add
sub
pop
add
add
imul
incb
imul
lcall
shr
and
add
xchg
iret
cmovs
dec
loopne
xchg
into
jns
mov
cs
ret
cli
add
add
sbb
loop
add
add
cmc
mov
mov
in
lret
jns
jecxz
add
lret
pop
push
add
add
pop
incb
and
lahf
jmp
incb
clc
sti
push
adcl
adc
add
incb
mov
js
cmp
jne
add
push
or
mov
jmp
mov
add
mov
out
cmpsb
aaa
incl
addr16
sbb
mov
incb
mov
add
jmp
inc
pop
inc
add
jmp
pop
incb
push
adc
add
sbb
imulb
mov
add
add
fsts
incb
sub
arpl
add
cmc
out
lods
xchg
jno
repnz
fucomip
mov
cmp
dec
add
popl
incb
xor
add
jp
shrl
nop
mov
inc
add
incb
bound
incl
mov
std
std
dec
test
fcomps
mov
pop
add
add
incb
mov
cmp
or
add
lods
roll
add
incb
fistpll
incb
inc
pop
mov
incb
mov
incb
imul
pop
add
aaa
incl
mov
aas
mov
int
loop
mov
incl
jno
loop
and
add
incb
mov
call
sbb
sahf
cld
jecxz
add
incb
sbb
or
incb
pop
mov
cmp
popa
push
scas
jb
jmp
cmc
je
data16
incb
loopne
add
jmp
add
add
scas
add
add
add
incb
cmp
insb
add
lret
add
add
add
sahf
adc
add
mov
or
into
sbb
xor
add
icebp
and
add
pop
add
xor
add
sub
ja
jbe
das
nop
dec
add
leave
cmp
inc
add
add
insb
add
iret
jnp
adc
add
push
incb
push
add
lea
pop
incb
mov
adc
add
outsb
add
inc
add
add
mov
orb
mov
or
out
add
inc
inc
push
shlb
add
pop
incb
push
add
icebp
loopne
add
lahf
mov
fbstp
add
cmp
sarl
jo
cs
sub
mov
jmp
mov
and
add
adc
add
ret
push
add
div
inc
add
xchg
movsb
insb
add
incb
dec
add
add
add
add
call
add
aad
shlb
clc
jp
add
add
xor
add
sub
jb
add
add
and
add
incb
outsb
add
add
inc
dec
add
stos
or
push
add
jl
dec
inc
add
lods
inc
add
push
add
std
shlb
incb
xchg
cwtl
rcrl
add
incl
mov
jle
add
add
incb
adc
add
mov
add
enter
lret
push
add
or
jmp
add
push
sub
pusha
add
push
and
add
jne
add
add
jne
lret
xchg
inc
add
cld
lahf
fdiv
test
pushf
inc
add
jecxz
mov
add
incb
fstpl
sti
jo
dec
push
add
incl
sarl
push
add
add
aaa
incb
jb
cmpsb
hlt
arpl
inc
add
pop
add
out
test
aaa
incb
hlt
add
add
add
incb
xlat
xchg
adc
add
xchg
nop
sub
pop
pop
add
call
adc
add
add
fs
sbb
jp
push
add
test
push
add
jmp
incb
inc
add
adc
add
lcall
mov
pop
add
test
incb
jo
ret
mov
test
bts
incb
mov
fistpl
daa
incb
add
add
data16
incb
enter
push
and
add
and
popf
xchg
cmp
test
jp
push
nop
addb
mov
add
sub
or
enter
and
add
adc
and
add
je
cmp
push
add
arpl
cmp
scas
stc
mov
incb
aad
sbb
mov
sbb
shll
shlb
repz
push
or
lock
add
das
pop
add
aam
cld
sbb
popf
movsb
mov
add
in
sub
sub
shrb
add
mov
int
lcall
push
incb
mov
add
add
sub
aaa
incb
out
pop
add
lock
add
incl
ret
pop
loope
enter
addr16
add
add
add
add
xchg
int3
cmpb
stos
jecxz
incb
das
int3
add
incl
jl
add
test
push
mov
incb
std
adc
add
stos
arpl
aam
inc
add
and
add
or
xlat
xor
out
leave
mov
jp
push
or
dec
add
cltd
sub
sti
mov
hlt
cmp
xchg
sbb
fidivs
add
add
lret
dec
neg
mov
push
add
add
add
add
add
add
out
pop
incb
mov
push
lods
mov
incb
push
pop
mov
andb
add
stos
rclb
sub
add
add
bound
stc
outsl
loope
add
fwait
and
add
and
add
dec
fdivs
incb
aas
cwtl
cmp
std
cmp
jmp
data16
dec
add
incl
xor
add
incb
not
cld
mov
sbb
push
add
mov
les
and
incb
sti
and
add
mov
xor
incb
fs
push
add
incl
xor
outsb
add
incb
pop
incl
xor
add
sbb
fnsave
mov
add
incb
xor
pop
rcrb
popa
and
add
dec
add
cmp
cmp
incb
frstor
sub
incl
js
add
add
cmp
push
or
cmp
lret
mov
sbb
in
jg
dec
add
incb
into
jnp
incl
in
mov
xor
add
jge
incb
lcall
add
mov
addb
add
cmpsl
dec
sbb
incb
dec
fistpll
adc
add
lcall
add
inc
add
ret
and
add
inc
add
ljmp
jns
add
inc
push
filds
or
jg
mov
add
add
add
add
incl
leave
or
fwait
into
scas
or
popa
push
incb
repz
popa
fisubl
push
cltd
incb
jo
cmc
xchg
nop
xor
add
incb
movsb
jecxz
adc
incl
xchg
loop
jl
pushf
lods
lods
rcll
hlt
test
add
mov
add
xchg
sub
out
lock
dec
cmc
sti
mov
add
sub
or
aaa
incb
xor
add
sbb
jmp
jmp
push
pop
incb
cmp
add
add
inc
dec
mov
inc
inc
add
incb
int3
push
add
add
adc
add
incl
insl
pushf
dec
sbb
mov
pop
add
mov
sbb
dec
movb
add
sub
pop
inc
or
add
incb
push
mov
add
add
std
adc
add
adc
incb
jg
add
add
fs
out
pop
add
mov
pop
jo
lea
inc
add
add
jg
arpl
xchg
enter
xchg
sbb
outsl
or
daa
incl
sbb
fwait
mov
inc
sub
enter
out
xor
add
arpl
add
jecxz
xchg
incb
test
les
imul
adc
mov
pop
lods
test
sbb
rdmsr
incb
xor
add
and
add
incb
cmpsb
les
add
repnz
mov
mov
ds
shl
cmp
dec
add
into
mov
xchg
or
data16
incb
psadbw
add
add
add
incb
mov
xchg
popa
sahf
lods
addr16
shlb
add
add
add
push
add
sub
add
incl
pop
dec
add
das
imul
add
incb
mov
add
jbe
icebp
insb
add
add
fimull
clc
xor
add
add
scas
cmp
mov
jb
testb
daa
incb
xor
add
insb
add
sub
mov
add
rcll
jo
xor
add
int3
xor
add
xchg
ljmp
pop
jno
int
xchg
cmp
incb
in
lds
incb
jl
outsl
lcall
add
add
incl
mov
inc
add
icebp
ret
mov
dec
mov
add
lahf
in
inc
jg
mov
incb
mov
mov
test
adc
add
repnz
in
pop
mov
loope
add
aaa
incb
test
incb
fcoml
rorl
arpl
int
shrl
scas
out
les
dec
jo
jmp
add
add
stos
int3
orl
add
add
add
shl
add
add
paddusw
mov
mov
sbb
or
fs
cmp
data16
mov
hlt
push
dec
into
inc
mov
add
incb
cmp
in
out
pop
add
add
add
in
xchg
mov
add
outsb
add
mov
mov
add
add
jp
cmpsb
and
add
stos
aam
incb
adc
add
cmp
add
or
fisttpll
inc
adc
add
add
xchg
push
pop
gs
pop
jl
out
and
add
lcall
arpl
add
sarl
pop
incb
sbb
das
mov
jns
add
mov
push
add
jg
imul
mov
les
or
push
add
mov
incb
mov
mov
add
add
rcrb
add
incb
cmp
push
add
add
sbb
sbb
inc
or
fdivrl
adc
add
push
pop
incb
popa
lods
push
jmp
cmc
xchg
add
xor
add
inc
add
mov
add
movsl
push
add
mov
je
xchg
xor
add
in
ret
mov
xchg
mov
cmpsb
mov
ret
cld
lret
mov
incb
fxam
pop
sub
or
subb
mov
lock
add
lods
add
add
add
incl
ljmp
add
icebp
incb
lahf
and
lahf
pop
add
incb
lods
push
add
incb
jle
mov
incb
push
add
xchg
push
add
sbb
stos
call
xor
add
incb
in
push
push
add
mov
add
addr16
incl
fwait
incb
pop
mov
add
aad
add
add
add
lret
mov
add
sbb
rorl
add
test
inc
add
cs
dec
add
adc
add
bound
ljmp
add
add
inc
adc
add
xchg
lods
lcall
cmp
add
mov
in
popf
xor
add
mov
test
add
add
incl
mov
adc
add
mov
pop
aam
add
mov
test
roll
add
incb
xchg
push
pop
sbb
push
ret
mov
incb
sbb
shll
add
add
adc
add
ja
add
pushf
imul
mov
and
add
add
incb
add
add
xchg
pop
add
incl
nop
loop
incb
fisubs
incb
mov
incb
arpl
mov
add
add
jmp
add
add
rcr
push
mov
incl
in
incb
add
add
repz
add
sub
incb
aam
xor
js
jb
cmpsl
xchg
and
add
rcrb
dec
mov
incb
xor
pop
add
out
xlat
add
add
fsub
pop
add
cli
stos
xchg
xor
add
incb
xlat
imull
mov
nop
mov
incb
fwait
xor
add
sarl
mov
add
popf
fsubrs
rolb
incl
push
add
mov
and
add
lock
loope
shrb
test
xchg
xchg
mov
pusha
add
outsb
add
xlat
sbb
das
sarb
outsl
daa
incb
mov
incb
pop
add
cwtl
enter
add
push
add
dec
scas
push
mov
scas
cmp
add
loop
xlat
aad
fyl2x
data16
add
loopne
incb
mov
and
add
mov
incl
inc
add
add
add
dec
popa
push
cmpsl
fwait
lea
imul
daa
incb
bound
test
in
mov
in
cmc
shrl
inc
add
add
dec
add
cmp
stos
xor
add
mov
out
stos
bound
mov
mov
add
incb
ret
incb
mov
ja
add
incb
les
in
stc
xchg
add
jne
incb
xchg
jecxz
leave
mov
add
incb
cmpsb
pusha
add
add
sub
fiadds
add
in
add
add
pop
in
add
shlb
incb
repnz
dec
add
incl
or
fstps
add
call
inc
aad
add
mov
add
nop
dec
add
incb
mov
clc
sbb
mov
fldcw
add
test
test
incb
mov
or
jg
xchg
fldenv
fnstcw
xchg
xchg
fwait
mov
call
push
incl
out
push
popa
inc
add
add
add
jmp
add
incb
mov
sbb
mov
lcall
cmpsl
incb
ffreep
lcall
add
sbb
mov
out
aaa
incb
push
add
incb
xor
add
incb
in
jmp
mov
push
mov
add
sarl
add
aas
cmp
stos
mov
insl
xchg
test
add
incb
xor
add
sub
xchg
inc
add
or
adc
add
incl
ljmp
in
or
mov
outsl
shlb
fsubl
incb
cltd
cmc
stc
mov
add
add
test
incb
jno
jne
incb
sbb
pusha
add
lds
hlt
aaa
incb
fcmovbe
aam
into
data16
add
adc
add
and
loop
jecxz
xor
add
or
fxch
mov
add
leave
add
add
call
cmp
iret
mov
adc
add
mov
dec
orb
inc
add
xchg
int
push
add
pop
scas
jbe
test
dec
add
pop
add
add
add
incb
dec
add
fsubp
pop
incb
push
adc
add
ja
sub
ljmp
push
mov
out
mov
add
imul
test
pop
add
mov
add
add
loop
adc
add
cmc
icebp
orb
incl
test
add
incb
sarl
arpl
adc
add
adc
add
sub
add
add
sbb
pop
test
add
outsl
cmpsl
popa
pop
lods
nop
jne
bound
or
repz
add
mov
add
mov
fstl
add
mov
fnstenv
adcb
add
mov
pop
incb
add
incb
fsts
dec
add
mov
fsub
in
sbb
mov
ja
xor
add
jno
cwtl
lcall
push
lret
add
jp
stos
addr16
and
add
sbb
lds
incb
push
add
add
cmp
incb
test
incb
movsb
fiaddl
add
or
rclb
add
outsb
add
test
add
or
and
add
incb
fidivrl
xorl
sub
pop
add
add
add
incb
mov
xchg
cmpsl
fstpt
add
cld
add
add
orl
mov
stos
shll
js
lods
xchg
xchg
add
add
add
xorl
incl
test
xchg
and
add
jl
push
add
add
incb
add
add
sbb
mov
ret
out
mov
fnsave
xor
add
xchg
push
add
add
incb
div
mov
pushf
mov
adc
push
add
add
cwtl
mov
and
fwait
push
add
jne
add
aaa
incl
jg
incb
or
inc
add
popf
xor
add
js
pop
into
jo
or
les
jg
dec
add
incb
test
sub
into
jno
jns
lcall
add
cli
sahf
int3
arpl
add
sbb
mov
dec
add
add
push
in
dec
add
add
loope
sbb
mov
gs
arpl
testl
push
mov
add
outsl
or
cmp
add
add
adc
add
cli
std
cmpb
incb
popf
mov
stos
out
fimull
add
into
and
add
jp
sub
lea
sbb
add
and
add
incb
jmp
aaa
incb
or
adcl
inc
add
pop
add
add
push
daa
incb
test
add
xor
add
sub
incb
call
in
add
ljmp
push
cltd
mov
add
incb
incb
push
add
and
add
imul
inc
add
cmp
add
add
dec
arpl
subb
sub
mov
in
xchg
mov
std
push
jg
adc
add
xchg
add
add
testl
add
xor
incb
int3
rol
xor
lret
ret
cmp
lods
xchg
in
daa
incl
and
stos
sbb
jns
ret
cs
sbb
sbb
jb
imul
cmpsb
fstps
scas
push
add
scas
pop
add
or
dec
and
add
fsubr
imul
add
dec
add
lds
add
xchg
mov
or
sysenter
incl
pushf
inc
add
push
mov
incb
int
cwtl
fcoml
add
add
out
push
incl
sub
lea
add
lcall
add
add
jnp
cmp
cwtl
mov
sbb
add
adc
add
cld
push
or
add
dec
add
jmp
shll
roll
incb
int
incb
mov
sbb
incb
rcr
in
call
cmp
and
add
cmp
sub
inc
add
data16
rcll
xchg
push
add
lods
inc
add
sub
xchg
je
incb
lret
lods
lahf
stos
push
int3
sbb
aam
xchg
or
add
lock
add
lcall
sbb
icebp
or
cmp
add
incb
out
mov
add
add
dec
arpl
cmpsl
movsb
xchg
adc
add
sar
ret
cmp
incb
xchg
mov
out
sub
dec
lcall
jp
pushl
or
rorl
mov
add
lahf
movsl
dec
add
idiv
sbb
lret
mov
subb
mov
rcrb
incb
jl
ret
push
add
insb
add
test
inc
add
add
jnp
or
popa
aam
add
or
xor
add
push
add
icebp
cmpsb
inc
add
loope
add
add
mov
cwtl
popa
je
jmp
mov
sti
jle
xchg
add
cmpsl
add
test
inc
incl
inc
jo
addr16
add
out
lret
pop
add
pop
mov
cmpb
jecxz
outsl
sub
jne
cmpsb
jp
adc
add
pop
rcl
clc
mov
stos
mov
add
inc
inc
mov
pop
add
enter
xchg
adcl
add
bound
loopne
lret
sbb
add
and
add
cmp
lahf
inc
add
sbb
and
add
adc
pop
jle
mov
out
out
adc
add
incl
aas
pop
cli
adc
add
adc
add
sbb
imul
add
scas
add
add
add
push
add
xchg
jp
lods
in
iret
inc
hlt
lods
popf
pop
xor
add
xchg
push
add
add
pop
incb
sbb
inc
in
inc
add
add
pop
cltd
sub
imul
inc
jns
mov
mov
pop
lcall
add
cmp
cmpsl
xorb
push
popf
mov
movsl
xorl
popa
push
add
incl
jle
jl
push
dec
xchg
mov
clc
mov
das
out
add
icebp
mov
mov
incb
lds
add
mov
add
std
outsb
add
dec
add
into
sahf
inc
adc
add
add
incb
lahf
or
jmp
add
xor
add
push
add
adc
dec
mov
jb
popf
in
aam
rcrb
add
add
incb
xor
add
sbbl
inc
addr16
add
incb
mov
add
add
adc
mov
sub
xor
add
pop
dec
add
out
push
add
cltd
dec
add
add
in
hlt
push
add
nop
sbb
push
add
sbb
sahf
movsb
ret
add
in
add
incb
dec
add
cmp
lret
daa
incl
pop
pop
add
inc
add
dec
add
incl
fisubrl
add
add
incb
movsl
sub
and
add
push
add
mov
sub
cwtl
stos
lods
mov
incb
mov
push
mov
cmp
add
cwtl
int3
xchg
addr16
sbb
das
rcrb
add
bound
or
dec
aas
inc
jmp
incb
jae
add
daa
incb
sbb
xor
add
add
pop
and
add
incl
mov
shrb
add
incb
add
add
fcompl
mov
incb
jne
mov
add
add
incb
xchg
sub
pop
add
push
add
fbld
incl
cmp
test
cmp
pop
and
add
jae
incb
dec
sbbb
incl
pop
incb
std
jecxz
incb
dec
jmp
push
cli
mov
add
in
or
cltd
push
add
jno
push
fisttpl
std
or
aaa
incl
test
test
dec
daa
incb
cmpsb
ljmp
adc
add
neg
adc
add
add
and
add
repz
add
iret
repz
rcl
mov
pushf
xchg
mov
mov
lock
sahf
xor
add
sub
das
js
loope
add
enter
insb
add
incl
cmp
fwait
push
incb
in
incb
lods
xlat
and
add
add
add
cmc
scas
add
add
xchg
cld
mov
xchg
incb
add
push
pop
add
add
int
add
add
push
add
incb
lods
fwait
pushf
repz
test
add
incb
ficompl
push
leave
pop
add
imul
mov
incb
adc
add
mov
dec
adc
add
scas
fsub
test
arpl
add
data16
mov
enter
cmpsb
dec
add
jno
incl
sbb
cltd
test
das
cmc
shll
sahf
adc
add
mov
enter
xchg
xchg
into
enter
lcall
add
add
imul
xchg
in
incb
pop
jbe
and
add
sahf
aad
dec
add
add
add
stos
loop
ret
mov
mov
inc
mov
add
movsb
mov
add
test
inc
add
add
out
cmp
mov
jbe
dec
add
pop
add
add
add
js
call
inc
mov
cli
adc
add
daa
incl
sub
int
sbb
negl
inc
pop
add
xchg
fdivrs
shlb
incb
in
rclb
mov
add
add
add
push
incl
call
jae
mov
push
fisttps
jecxz
rorb
je
stos
dec
add
pushf
xor
add
or
incl
inc
xchg
cmc
shl
jge
add
adc
add
incl
rcll
adc
add
in
cli
hlt
sbb
add
mov
lods
mov
sti
fnstsw
add
push
add
mov
ret
fldenv
xchg
lret
pop
incl
icebp
ja
insl
aad
ljmp
cmp
inc
add
mov
or
incl
ret
add
lods
add
add
lods
bound
aam
mov
dec
fidivl
incb
incb
mov
aad
out
repz
add
dec
add
incb
xor
add
inc
mov
pop
mov
add
popf
out
in
inc
add
in
pushf
push
add
incb
mov
adc
add
add
pop
add
out
fiaddl
and
add
imulb
test
fisubs
incb
out
mov
inc
add
incb
sbb
sahf
xor
add
incb
push
incb
xor
add
jl
lea
into
jo
xchg
cwtl
fcompl
aam
pop
incb
push
incb
xor
add
shlb
add
incb
push
add
xchg
jmp
sarl
xchg
fists
xchg
and
add
add
incb
cmp
adc
add
lds
in
add
add
add
incl
mov
incb
enter
add
jnp
add
cwtl
cwtl
js
jno
stc
mov
add
imul
mov
incb
sub
pop
rcrl
aaa
incb
mov
and
add
incb
cmpsb
int
sbb
add
incl
and
add
incl
repnz
incl
lock
lret
inc
add
fiadds
add
mov
or
out
in
jmp
add
mov
repz
xor
add
mov
add
adc
add
lcall
leave
jbe
dec
add
lahf
incb
xchg
mov
xchg
bound
roll
jecxz
add
push
add
lds
and
add
dec
add
incl
rcrb
pop
add
jecxz
jmp
add
adc
add
jnp
add
cld
pushf
shrl
add
add
add
add
incb
divb
mov
loope
add
aad
ret
out
xor
add
sub
sbb
sarl
xchg
mov
out
mov
push
hlt
int3
inc
add
mov
in
pushf
and
add
add
scas
cwtl
cmp
pusha
add
mov
movsb
lea
incb
sbb
add
les
shl
mov
fstps
mov
incb
mov
xchg
jl
mov
add
add
ljmp
add
incb
repz
inc
add
mul
mov
test
fmul
scas
cltd
cli
inc
scas
mov
scas
scas
adc
xor
add
incl
add
add
sub
cmc
arpl
incb
dec
popf
addl
mov
add
pop
add
sub
das
shl
in
mov
fdivrs
push
add
incb
or
incl
out
adc
add
mov
incb
nopl
mov
fcompl
cmp
mov
add
xor
add
incb
jnp
inc
add
jno
pop
incl
xor
add
add
std
or
incl
or
cmp
repnz
xor
add
incl
loope
incb
shlb
incb
test
sbb
mov
dec
add
add
inc
add
add
add
mov
mov
je
add
jmp
dec
jb
imul
je
fcmovbe
sub
push
incb
imulb
adc
add
incb
push
incl
sti
lahf
rclb
iret
and
cmc
mov
incl
jae
out
in
adc
add
cmp
xchg
aaa
incb
aam
inc
xor
xchg
jmp
inc
mov
cld
rorb
dec
or
mov
incl
lea
push
add
xchg
jmp
mov
lahf
int
pop
incb
push
mov
xchg
jmp
inc
push
js
pop
xchg
jne
sub
fmul
sub
incb
in
add
xchg
int3
int3
int3
add
ljmp
add
out
loop
cmp
mov
lahf
add
sti
or
add
scas
mov
incb
jns
add
movsl
int3
dec
imul
incl
xor
add
incb
xor
add
shrl
add
add
lock
std
mov
fwait
rolb
orl
pop
repnz
das
or
xchg
movsb
sub
sub
xchg
push
xchg
jmp
imul
testb
add
add
mov
adc
add
incb
jnp
xorb
jne
and
add
mov
add
gs
adc
add
xchg
and
add
sbb
pop
add
fwait
mov
or
add
add
jae
incb
inc
test
aas
and
incb
dec
bnd
mov
xchg
ret
mov
shlb
add
pop
add
dec
inc
add
sub
decb
je
mov
jge
adc
add
dec
enter
push
xchg
jmp
inc
ja
pop
incb
mov
dec
jbe
inc
add
add
fcmovb
je
test
add
incl
rorl
inc
mov
xchg
mov
xchg
jmp
sbb
xchg
mov
add
test
and
add
add
incb
push
aam
stos
sub
dec
lods
out
mov
incb
xchg
gs
add
mov
roll
sbb
add
in
imul
or
jmp
mov
mov
mov
call
push
add
add
add
ja
pop
mov
add
push
and
add
fiadds
mov
repz
mov
adc
add
jbe
fwait
jecxz
notl
incb
pushl
incb
mov
add
and
add
xor
add
add
add
pop
add
xchg
dec
add
incb
xchg
jnp
add
push
push
jge
incb
xor
add
add
clc
loope
jg
incb
dec
stos
dec
add
or
lea
xor
add
lcall
adc
add
add
add
jns
scas
cli
icebp
xor
xor
add
incb
stc
push
xchg
jmp
inc
shlb
repnz
add
incb
adc
add
je
xor
cmp
add
cmp
sub
and
add
mov
xor
add
incb
pop
add
pop
pop
incb
sbb
mov
outsl
lret
add
adc
add
inc
or
dec
add
add
lcall
das
push
incb
add
mov
add
lret
jo
mov
scas
xor
add
in
inc
mov
xchg
jmp
jb
mov
cmc
int
lods
shll
incl
dec
inc
pop
incl
cmp
addr16
push
add
push
sbb
mov
sbb
loopne
add
cmpps
jmp
repnz
pop
sti
mov
inc
lock
mov
xchg
ret
mov
imul
add
dec
add
loop
incb
xchg
pcmpgtd
scas
jae
fisttpll
test
xor
add
incl
repz
add
adc
add
psllq
jb
mov
out
sub
pop
add
dec
add
add
jne
incl
ret
in
fdivrl
add
jl
gs
add
push
add
xorl
cmp
xadd
incl
mov
incb
aam
add
adc
add
add
repz
sbb
aas
cmp
dec
add
incb
repz
xchg
cmp
add
add
mov
ljmp
push
add
mov
lahf
xacquire
jb
inc
fwait
push
add
inc
push
mov
sub
test
incb
aam
add
ficoml
mov
xchg
ret
mov
repnz
add
faddp
mov
add
and
add
add
incb
mov
adc
add
add
add
jmp
incb
clc
push
incl
and
aam
add
adc
add
lock
add
sbb
repnz
mov
incb
shl
or
jge
incb
add
add
add
incb
addr16
roll
add
incl
fbld
and
add
inc
add
add
ret
jno
adc
add
push
add
add
ds
sub
cltd
jns
add
push
incb
push
incb
into
dec
lret
fadd
push
sbb
dec
push
add
sbbl
cmp
in
in
pop
incb
jl
imul
repnz
sbb
in
adc
add
dec
ret
inc
mov
xchg
jmp
rcrl
pop
or
add
dec
add
das
lret
loope
mov
jecxz
incl
cmp
repnz
je
mov
imul
add
cmpsb
and
fcmovne
scas
nop
xor
add
stos
adc
add
add
add
xor
add
incb
mov
movsb
jge
sbb
mulb
incl
mov
or
add
add
add
adc
add
incb
sbb
out
repz
add
stos
insl
enter
out
mov
mov
iret
arpl
add
incb
stos
sub
and
add
add
add
loopne
pop
add
inc
add
add
add
add
mov
std
fsubl
cmpsb
jno
incl
xor
add
incl
inc
sub
sbb
mov
add
lds
xchg
hlt
xchg
cld
out
fcoms
cmpsb
push
add
push
aas
andl
add
add
rep
aas
sub
xchg
jp
xor
jns
add
xchg
sbb
incb
xchg
dec
add
incb
sbb
daa
incl
insb
add
dec
cwtl
loope
pop
and
add
or
test
add
add
add
out
add
xchg
jmp
xchg
pop
mov
jp
call
outsl
mov
jae
sbb
lods
lahf
dec
add
sbb
inc
cmc
inc
add
sahf
sub
lods
mov
mov
mov
push
imul
xchg
mov
xchg
decl
xchg
jmp
std
mov
add
ret
xor
add
clc
fimull
lds
mov
ljmp
incb
test
push
movsb
mov
incl
sub
orb
imul
daa
incl
add
add
aaa
incb
incb
sub
and
add
push
add
sub
incl
into
adc
add
scas
mov
xchg
jmp
imul
jo
mov
xchg
jmp
std
pop
imul
add
add
loope
fadd
fwait
cli
sbb
incb
cmpsb
mov
repz
add
ljmp
mov
add
incb
repz
push
incb
xor
add
inc
fistpll
add
xchg
mov
xchg
jmp
mov
inc
dec
add
sbbl
add
jo
icebp
daa
incb
popa
repnz
mov
xor
add
lods
sub
ret
test
add
js
xor
add
push
xchg
jmp
std
jb
pop
add
stc
mov
xchg
jmp
add
push
incb
mov
push
sti
mov
add
cmp
and
add
and
add
and
add
incl
inc
add
repnz
pop
push
mov
xchg
ret
dec
repnz
in
fsubrl
add
add
pop
add
testb
addl
push
incb
jbe
adc
dec
add
xor
add
jmp
mov
rcrl
add
incb
enter
mov
adc
add
lock
add
add
or
xchg
fsubrs
add
mov
mov
xchg
jmp
jb
lahf
ljmp
cmpsl
testb
ljmp
lds
ljmp
pusha
add
add
add
hlt
jnp
add
mov
shrl
repz
add
add
incb
and
add
jmp
into
push
add
arpl
in
push
incl
jne
incb
fnstenv
ljmp
imul
xor
add
add
cmp
insl
daa
incb
jbe
pop
add
hlt
mov
jmp
repnz
mov
add
pop
jg
dec
mov
sbb
leave
mov
incb
roll
incb
jp
pop
cmp
or
mov
addr16
add
add
add
repz
out
dec
xchg
movsb
xchg
jmp
roll
add
jge
and
dec
add
pushf
mov
push
xchg
jmp
jb
mov
data16
xor
add
incb
dec
add
lock
mov
sub
or
incb
mov
xor
add
jecxz
cwtl
or
cmp
add
pop
incl
cmp
push
add
add
add
add
incb
dec
add
incb
jp
mov
insl
inc
repnz
mov
hlt
jb
arpl
add
lock
xor
add
xchg
fwait
ret
ret
outsb
add
incb
push
incb
mov
incb
pop
cwtl
pusha
add
in
incb
cltd
movsl
aam
xchg
inc
pop
xchg
jmp
std
mov
mov
inc
dec
arpl
jns
push
xchg
jmp
lahf
pop
repnz
pop
pop
push
les
or
add
pop
out
add
jmp
sub
jb
sbb
nop
jmp
add
add
mov
add
add
jl
out
adc
add
nop
clc
inc
add
leave
movsb
push
aaa
incb
stc
push
xchg
jmp
mov
lahf
repnz
pop
pop
add
dec
add
add
cmc
aaa
incl
loope
incb
ja
add
xchg
xor
add
add
push
inc
sbb
jae
add
add
mov
incb
cmp
add
or
xchg
jmp
mov
int
mov
xchg
jmp
xchg
lds
add
add
vmovupd
add
incl
push
add
add
mov
add
test
add
data16
mov
sbb
cltd
xchg
icebp
frstor
and
add
ljmp
jge
cmp
repnz
xchg
test
add
mov
add
xor
add
or
add
stos
sahf
mov
aad
add
xor
push
mov
xchg
ret
mov
ror
add
orl
or
add
std
pop
imul
in
mov
pop
incb
fcompl
push
mov
xchg
ret
int
adc
add
mov
xchg
jmp
mov
push
add
aad
add
add
add
incb
loop
pop
in
int3
int3
int3
cmp
shll
cwtl
mov
cld
fsts
rcrb
dec
adc
add
lea
shl
bound
aas
lahf
dec
cmp
add
aad
cmp
xchg
jmp
xchg
mov
rcl
stc
ror
xchg
jmp
mov
xchg
lahf
test
add
or
incb
push
add
adc
add
add
xor
add
add
imul
xchg
jmp
mov
js
mov
mov
xchg
fimull
and
pop
inc
add
adc
add
and
add
dec
mov
mov
add
int3
add
inc
add
dec
and
add
fnstenv
cmp
mov
repz
popl
incb
pusha
add
xor
add
incb
imul
add
jbe
xor
lcall
add
scas
sbbb
bound
pop
add
or
mov
xor
add
and
add
xchg
test
aaa
add
xchg
jmp
xchg
mov
fwait
dec
add
ret
fsubr
lea
movb
add
andb
add
add
incb
outsl
fsts
incb
mov
dec
mov
dec
add
incb
or
mov
aad
sub
adc
add
push
arpl
add
scas
int
mov
enter
out
add
mov
and
add
incb
mov
incb
mov
cltd
mov
jmp
js
pop
ja
sub
lock
xchg
jne
xchg
jmp
rol
mov
add
add
js
icebp
enter
incl
and
add
and
add
add
lret
fistpl
cmpsl
dec
add
incb
in
add
add
inc
daa
incb
mov
jmp
sbb
mov
aad
mov
mul
rorb
lret
stc
incl
mov
dec
add
add
and
inc
add
add
out
orl
hlt
jl
add
add
add
add
add
incb
pop
incb
pop
adc
add
sub
stc
rep
xchg
jmp
int
lahf
sbb
add
aad
cmp
mov
mov
pop
add
cmp
dec
inc
add
enter
xchg
jmp
mov
ljmp
mov
sub
repz
mov
add
inc
add
cwtl
and
add
cmp
mov
add
rclb
add
pop
add
mov
and
add
add
incb
dec
xchg
aam
jo
loope
incl
lahf
in
stc
stos
xchg
jmp
dec
jb
xchg
mov
inc
or
idiv
lea
incl
jmp
rcr
and
pop
shll
cltd
add
add
add
add
int
dec
dec
adc
add
or
movsl
xchg
out
movsl
add
add
incb
stc
mov
xchg
jmp
in
xchg
push
inc
fsts
incl
leave
dec
lea
adc
add
jb
sub
mov
jmp
inc
mov
mov
inc
push
add
incl
add
add
aam
xor
add
push
mov
mov
test
xlat
jb
or
jo
pop
addr16
add
incb
int3
out
incb
mov
adc
add
inc
add
bound
ja
sub
xor
add
add
add
lret
incb
movsb
out
sub
repnz
cmpsl
xor
add
out
loopne
jp
mov
jmp
repnz
negb
jne
xchg
jmp
mov
pop
incb
ret
xchg
jmp
in
sbb
mov
cli
cmpsb
sbb
lods
xor
add
test
xor
add
mov
sub
jne
incb
into
sbb
incb
fbstp
fiadds
cmp
fildl
shrl
add
mov
mov
mov
fisubrs
daa
incb
adc
out
mov
lods
adc
add
pop
add
push
xchg
push
add
incb
aas
mov
out
das
inc
fldl
test
insb
add
xchg
jmp
mov
incb
dec
shll
xchg
cwtl
cmp
mov
add
out
movsl
iret
mov
add
inc
rep
xchg
jmp
imul
pop
inc
shrb
inc
jne
add
ja
icebp
push
mov
push
call
pop
xor
add
notb
incb
das
or
xchg
sbb
daa
incb
or
iret
test
incb
inc
add
add
add
dec
adc
add
mov
int3
mov
add
add
incb
fstpt
incb
inc
aaa
incl
and
add
pop
insb
add
add
stos
mov
insl
loop
repnz
add
incb
xchg
mov
cli
rolb
incb
subl
call
jnp
inc
cli
xlat
inc
add
idivl
sub
or
add
incl
pop
rorl
jo
add
repnz
incb
mov
data16
add
pop
add
fwait
or
jb
xchg
loop
inc
add
lahf
cltd
loope
mov
test
out
incl
add
ljmp
cmpsl
inc
mov
xchg
jmp
mov
mov
ljmp
out
incl
mov
lcall
lret
xchg
jmp
mov
ja
jb
mov
add
add
decb
jbe
lcall
push
incb
jb
adc
add
incl
stos
mov
incb
orb
data16
add
lods
cwtl
incb
and
add
jmp
pop
js
sar
int
incb
jmp
jnp
ja
add
add
shl
jo
int
int
incb
sar
add
xor
push
and
xchg
jmp
mov
imul
incb
rcr
dec
insb
add
scas
xor
add
add
xlat
sub
test
in
mov
xchg
jmp
ja
pop
repnz
add
sarl
incb
inc
or
sub
dec
add
inc
add
incl
incl
and
add
iret
ljmp
add
add
call
add
arpl
mov
sub
xor
add
movsb
push
add
sub
jae
test
incb
add
add
ljmp
lods
test
aam
incb
push
add
incb
inc
xchg
hlt
xlat
sbb
or
nop
fadds
add
add
testb
stos
mov
add
addr16
loop
pop
scas
xchg
jmp
add
insl
in
incb
stc
mov
xchg
jmp
std
sbb
push
mov
xchg
ret
repnz
pop
pop
incb
xor
add
add
incb
out
pop
sub
sbb
push
out
idiv
xchg
sbb
rorb
fsubl
and
add
pusha
add
aam
aas
adc
add
cmpb
add
adc
add
add
in
and
add
sbb
mov
fisubrs
add
push
add
mov
xchg
jmp
mov
lcall
incb
adc
mov
sbb
fmuls
cmpl
push
mov
xchg
ret
shll
pushf
add
incl
ds
fwait
sbb
push
add
call
add
lahf
pop
add
incb
scas
lock
jbe
dec
push
push
add
incb
fildl
add
xchg
ret
xchg
jmp
inc
pop
inc
sub
lea
test
and
add
lods
cmp
adc
pop
xchg
jmp
mov
in
repnz
mov
xor
add
jno
cmpsl
subl
add
nop
mov
sub
imul
incl
or
pop
add
outsl
bound
push
adc
add
incl
hlt
push
add
mov
adc
add
incb
mov
and
add
data16
push
in
xor
add
lods
xchg
jmp
pop
mov
sub
push
incb
outsb
add
scas
mov
lods
cmpsl
testl
lcall
lahf
add
xor
add
pop
incb
mov
dec
jecxz
hlt
add
add
add
mov
lods
cmpl
add
inc
add
incb
enter
push
add
add
hlt
test
incb
dec
adcb
xor
add
addr16
push
add
add
push
add
lds
test
incl
fsubl
add
sbb
test
loope
lods
aas
or
dec
add
xchg
add
add
mov
or
sbb
mov
xchg
jmp
dec
sbb
add
mov
mov
jns
or
add
jb
xchg
fisttpl
mov
xchg
ret
mov
nopl
and
add
or
mov
incl
mov
add
incb
stos
sbb
sub
add
add
sbb
add
sbb
fwait
pusha
add
insl
push
mov
bound
movq
incb
shlb
cmp
pop
inc
jmp
xchg
jmp
inc
push
ja
mov
jns
sbb
and
add
aas
push
out
leave
or
push
shr
and
add
incb
or
xor
add
dec
int
lock
cmc
or
outsl
push
incb
insb
add
push
mov
xchg
ret
jb
dec
repnz
mov
and
add
in
out
push
xor
add
incb
add
add
push
add
mov
add
pop
incb
hlt
movsl
mov
add
aas
adc
add
incl
xchg
xchg
jmp
mov
mov
xchg
mov
pop
xchg
jmp
sbb
int
loope
push
add
or
incb
out
sbb
sub
arpl
adc
add
mov
push
dec
add
add
pop
mov
add
notb
incb
pushl
add
adc
add
ja
repnz
lods
cltd
inc
add
jle
and
add
mov
sub
xchg
inc
add
outsl
xchg
push
add
aas
dec
ret
sbb
add
dec
or
orl
add
sbb
cmp
aas
daa
incl
std
sbb
mov
mov
je
inc
sub
incb
or
dec
dec
add
lahf
ret
jmp
adc
add
incb
pop
add
hlt
mov
inc
add
mov
mov
push
add
xchg
xor
xchg
jmp
lahf
lahf
xchg
xchg
fsub
xchg
orb
add
leave
jo
inc
aam
int3
cmp
or
or
shr
pop
add
mov
jge
sarb
incb
inc
add
mov
or
popa
push
incl
mov
fs
insl
push
add
incb
xorl
dec
add
xchg
pop
add
add
aas
insl
mov
add
xor
add
fstp
out
adc
add
incb
push
add
incb
xchg
mov
xchg
jmp
mov
mov
sbb
incl
add
add
mov
adc
add
add
incl
je
or
pop
add
add
add
lcall
fistpl
incb
sub
idivl
incb
arpl
stc
popa
xchg
jmp
inc
js
lcall
inc
mov
cmp
cmp
ret
shlb
incb
test
jno
lea
add
incb
adc
add
fmulp
push
shrl
incb
lea
add
sub
fxch
pop
ljmp
aam
add
call
arpl
lds
scas
mov
add
test
sbb
repnz
add
sbb
ret
sbbl
mov
incl
test
add
push
mov
xchg
ret
inc
repnz
add
push
add
pop
incb
push
cltd
movsb
movsl
mov
add
inc
add
int
shll
cs
imul
add
addr16
stc
inc
push
mov
xchg
ret
mov
add
or
jmp
add
push
incb
fnsave
add
add
push
add
fistps
sbb
dec
add
adc
add
add
incb
and
add
xor
add
jno
inc
add
add
incl
xlat
fwait
or
aaa
incl
test
cld
jecxz
mov
add
add
pop
add
or
mov
dec
add
pop
add
add
add
into
and
add
fstpt
inc
add
push
das
ljmp
inc
add
add
add
pop
loop
incb
stos
fcompl
add
push
mov
xchg
ret
pop
inc
push
add
dec
add
mov
add
loop
incl
mov
add
dec
mov
incb
adc
add
mov
xchg
jmp
ljmp
sub
add
mov
ljmp
nop
cmp
push
add
push
in
rcl
mov
addr16
shll
add
loope
cld
add
call
rcll
rol
cmp
xor
add
mov
mov
add
lret
mov
mov
mov
sub
jmp
add
add
incb
dec
jmp
jp
pop
add
mov
add
add
add
frstor
add
incb
sbb
data16
lock
mov
add
das
imul
jmp
xchg
jmp
repnz
adc
add
popa
xchg
icebp
fdivrl
add
jnp
add
jecxz
mov
xchg
jmp
ja
mov
shlb
add
adc
add
xchg
push
add
incb
add
incb
jmp
add
adc
add
add
pop
add
scas
sub
add
jg
add
push
add
out
aaa
incl
je
add
bound
lods
add
gs
incb
ret
test
or
test
add
incl
mov
cmpsb
mov
add
jmp
xchg
mov
push
mov
push
mov
jb
mov
icebp
imul
cmp
and
add
incb
lahf
cmpsb
aaa
incl
adc
add
cmp
aad
jbe
inc
add
sbbl
int
hlt
sbb
push
aam
add
mov
loope
or
sbb
jnp
add
push
xchg
sub
lds
sub
popa
je
sbb
cmp
nop
mov
add
dec
add
incb
and
add
incb
inc
add
add
outsb
add
insb
add
jmp
lahf
pop
inc
sub
add
add
jl
imul
into
out
imul
movsl
imul
add
add
add
xchg
and
add
incb
xchg
add
add
repnz
cld
sti
filds
popf
xchg
dec
add
mov
test
add
xchg
jmp
mov
aas
jb
pop
pusha
add
inc
je
xchg
jmp
shlb
jo
test
aaa
incl
jnp
jnp
incb
sub
xor
add
add
incb
data16
icebp
push
jno
incb
pop
incb
inc
fwait
aas
incl
pop
add
mov
iret
mov
test
les
arpl
incb
fidivl
test
pop
add
in
fidivrl
pcmpgtd
int
js
in
stos
push
mov
cmpsb
shrb
incb
lds
add
decb
inc
add
xchg
jmp
mov
xchg
imul
adc
add
incb
pop
insl
push
add
dec
add
and
add
mov
add
dec
adc
add
add
repnz
shll
test
sub
adc
add
lea
or
add
mov
incb
add
incb
incb
mov
or
xor
add
incb
mov
push
sub
xchg
xchg
xchg
jmp
mov
pop
inc
pop
mov
add
incl
xchg
xchg
jmp
mov
mov
roll
incb
xchg
sbb
add
test
enter
fsubrs
ficoms
lret
mov
incb
addr16
imull
cmpsb
jle
adc
or
lods
arpl
add
into
and
add
mov
dec
rol
call
mov
insl
jo
add
lahf
sbb
xchg
jmp
dec
fidivs
incb
inc
add
incb
jge
in
adc
mov
out
add
push
out
cmp
cli
xor
add
push
add
adc
add
mov
add
add
pushf
add
add
add
sbb
movsl
inc
add
incl
sub
inc
mov
add
js
cmp
inc
and
add
sub
inc
add
incb
inc
insb
add
mov
add
hlt
aad
fwait
stc
mov
xchg
jmp
mov
mov
repnz
add
and
add
add
lret
add
add
xchg
jmp
js
ljmp
push
add
mov
out
dec
add
or
mov
add
add
push
xchg
xor
add
rorl
in
push
test
stc
rep
xchg
jmp
inc
repnz
pop
pop
fisubrs
popa
adc
leave
mov
cmp
xchg
jmp
mov
xchg
sub
incb
mov
incb
dec
popf
xchg
adc
add
add
sub
add
add
push
add
fnstcw
ja
add
sub
add
add
add
ja
lock
incb
aad
xor
add
add
add
xor
add
mov
add
add
jp
cmp
incl
leave
add
js
pop
add
popl
incb
sbb
insl
adc
add
dec
add
fiadds
shr
lcall
xchg
sahf
mov
rcl
incb
xor
add
repz
or
jecxz
inc
test
xchg
jmp
sbb
lret
mov
incb
shlb
add
incb
movsb
fadd
insl
sub
incb
rcl
mov
add
add
pop
movsb
js
cwtl
mov
cmpsl
mov
mov
xchg
ret
sbb
bnd
add
stc
test
xchg
jmp
xchg
ficomps
add
aam
add
repz
incb
adc
loope
mov
adc
add
jbe
add
add
incb
sub
add
leave
push
push
enter
fisubl
incb
sub
xor
add
sbb
push
push
mov
xchg
ret
mov
fidivs
mov
and
jmp
pop
pop
mov
add
popa
xchg
jmp
push
ja
lds
incl
xor
add
xor
std
and
add
testl
fnsave
add
xchg
jmp
in
add
add
add
add
mov
shll
shrl
add
jmp
mov
mov
mov
pop
adc
add
and
add
xor
rorl
cmp
xchg
cmpsb
scas
xlat
jnp
incb
inc
add
mov
mov
cmc
push
add
incl
push
incb
fucom
xchg
incb
lcall
add
incb
scas
loope
das
repz
add
hlt
out
jbe
fistpl
and
add
cli
mov
pop
mov
enter
pop
fdivl
mov
dec
add
pop
popf
dec
add
mov
outsl
arpl
jmp
imul
mov
arpl
paddd
jo
pushf
pusha
add
add
cmp
sbb
mov
jmp
mov
xchg
jmp
push
add
addr16
and
add
push
jmp
add
add
add
and
add
add
jecxz
add
loope
hlt
cli
or
lods
hlt
aad
incl
add
incb
insb
add
and
add
cmc
xlat
xchg
xchg
notb
inc
and
and
sbb
rolb
das
inc
add
pop
shlb
cmp
pop
add
jge
jmp
incl
cmpsl
aad
data16
out
jnp
incl
insb
add
cmp
loop
xchg
jmp
pop
mov
mov
jbe
mov
add
rclb
cltd
inc
inc
add
lahf
add
add
push
add
add
scas
aas
jns
rcll
incb
fnstcw
or
fcoms
sbb
incb
or
add
inc
xchg
jmp
mov
mov
pop
push
sbb
incl
add
add
add
pop
adc
add
out
push
sub
cld
dec
add
add
lock
incl
std
xchg
mov
add
jmp
dec
in
mov
movsl
xor
repnz
jne
incl
dec
add
jl
loope
jno
shr
xchg
jmp
mov
sbb
loop
push
incb
dec
ret
cmp
inc
add
scas
jne
mov
inc
push
mov
xchg
ret
pop
inc
mov
fldl
les
pushl
xchg
jmp
push
mov
mov
xor
add
mov
dec
into
out
fidivrl
add
outsl
data16
pop
ja
jne
xchg
jmp
fidivs
incb
adc
add
stc
test
xchg
jmp
sbb
pop
movsb
fmull
add
cmp
in
pop
mov
pop
add
incb
xchg
jge
lock
popl
cld
in
push
repnz
fstps
and
add
and
add
pop
xchg
push
vdivpd
mov
xchg
jmp
mov
pop
pop
std
gs
sahf
movsl
cli
dec
loop
ret
push
add
mov
inc
add
add
add
jg
sub
clc
adc
add
mov
jae
jge
incb
pop
xchg
and
add
les
adc
add
add
add
add
cli
stc
mov
xchg
jmp
push
inc
imul
add
incb
insb
add
outsl
fucomip
jmp
add
data16
cmp
faddl
xchg
jmp
inc
in
push
xchg
pusha
add
daa
incl
dec
push
add
add
and
add
pusha
xchg
jmp
pushl
mov
incb
mov
adc
test
incb
enter
int3
lcall
add
xlat
push
cwtl
push
les
movb
xchg
pop
dec
add
loopne
xchg
jmp
mov
inc
push
mov
int3
int3
int3
pop
fnstsw
out
mov
lock
dec
add
rcr
clc
mov
add
xchg
xor
add
add
incb
scas
mov
pop
inc
add
incb
jbe
fnstenv
push
add
add
mov
xchg
jmp
int
shlb
mov
inc
push
pop
mov
jge
add
sub
mov
jl
daa
incb
jno
aad
out
push
add
cmp
incb
repnz
add
aaa
incb
cmp
jo
gs
add
ror
incb
pop
add
stc
push
xchg
jmp
inc
repnz
lea
incl
xchg
push
mov
bound
adc
add
mov
pop
add
add
out
cmpw
xchg
jmp
mov
inc
in
imul
adc
add
add
lret
insb
add
incb
mov
add
incb
popa
iret
dec
add
mov
xchg
jmp
sbb
int
popf
sub
cmpsb
repnz
incl
xchg
mov
movsl
ljmp
add
incb
or
add
adc
add
xchg
repz
repnz
ljmp
and
add
add
add
add
cmpsb
incb
jp
mov
js
outsb
add
stos
gs
loop
dec
int3
or
jbe
icebp
or
add
add
cmp
lret
aaa
incb
cwtl
pop
incb
jne
adc
add
dec
das
xchg
or
das
xor
out
repnz
add
cmc
rcll
incl
push
iret
sbb
mov
movsl
xchg
jmp
add
ja
js
lret
fcompl
push
movsl
in
cli
aam
add
xorb
add
sub
pusha
add
inc
add
add
or
shl
cmp
or
mov
pop
add
hlt
inc
add
or
sbb
cmc
push
lods
sbb
xor
xchg
jmp
sbb
pushl
inc
add
xor
mov
ja
clc
mov
incb
mov
int3
jecxz
incb
xchg
fdiv
push
test
sbb
push
add
and
int3
push
add
mov
sbb
adc
movd
fcoms
sbb
out
dec
adc
add
sub
cmpsb
int
sti
add
cld
fbld
dec
inc
jecxz
popa
jp
incb
cmp
incb
pop
incl
roll
add
jmp
add
pop
incl
mov
add
adc
add
sbb
inc
mov
xchg
jmp
inc
repnz
xor
fwait
sahf
dec
add
cwtl
les
jmp
ja
std
mov
fimuls
or
push
pop
add
xchg
xchg
fwait
out
incb
decb
xor
add
sarb
xor
add
loopne
and
add
mov
movswl
xchg
jmp
jb
push
imul
bound
add
xchg
sub
das
jmp
cmc
aad
xor
xchg
jmp
imul
cmp
push
add
clc
test
inc
mov
xchg
jmp
mov
mov
xchg
mov
xchg
jmp
std
pop
sub
rclb
add
cli
imul
imul
mov
add
sbb
add
dec
dec
iret
mov
add
out
jb
add
scas
push
adc
add
rcll
add
inc
push
xchg
jmp
in
ja
xacquire
lods
jle
jge
mov
insl
xor
add
pop
incb
rorl
incb
and
add
add
add
xchg
lds
incb
popf
nop
dec
xor
add
adcb
add
scas
fcoms
incl
imul
jne
xchg
jmp
ja
jo
mov
add
xchg
jmp
sbb
inc
add
add
lods
arpl
sub
add
incb
inc
add
jbe
xchg
cvtdq2ps
add
incl
dec
js
nop
into
push
add
call
xchg
jmp
int
mov
mov
out
lret
sbb
add
cmp
test
outsl
scas
adc
add
inc
add
incb
daa
incb
jge
incb
add
add
jo
sub
dec
add
shrl
xchg
mov
xchg
jmp
std
mov
mov
test
cmp
cld
popa
mov
dec
add
in
pushf
cmpsl
or
nop
mov
adc
add
incb
xlat
ficoml
add
push
popf
fcmovnu
fwait
sbb
add
gs
xchg
aas
das
adc
add
add
add
add
mov
lock
clc
and
add
incl
jg
outsb
add
jmp
incb
sbb
dec
outsb
add
daa
incb
dec
add
xor
out
jmp
stos
jg
dec
add
insl
add
loop
mov
xchg
jmp
int
mov
sbb
or
pop
incl
mov
add
int
xchg
jle
dec
add
lods
loopne
aas
sti
cmp
lods
clc
xchg
push
xchg
jmp
sub
inc
imul
add
pop
inc
add
loopne
mov
add
push
lods
sub
jmp
mov
ljmp
add
mov
add
dec
add
clc
test
add
cmp
jno
les
incb
jbe
outsb
add
pop
add
les
in
sbb
les
incb
nop
ja
jns
cmp
emms
push
add
add
dec
outsl
test
add
add
mov
adc
add
dec
fiadds
and
add
mov
add
addb
add
incl
jge
pusha
add
ret
pop
xchg
jmp
std
incl
push
js
mov
scas
cmpsb
inc
add
rcrb
cmp
xchg
add
add
roll
enter
imul
jmp
imul
ret
xor
imul
nop
repnz
adc
add
add
incb
fs
sub
add
adc
cltd
aad
add
add
test
push
add
xchg
ret
xchg
jmp
mov
mov
mov
push
lret
je
bound
enter
mov
inc
adc
jmp
mov
lahf
mov
cmp
incl
sahf
mov
jmp
mov
pop
mov
clc
sbb
push
incl
inc
lret
loopne
add
out
or
repz
add
add
pop
add
incb
mov
pop
add
push
add
incb
dec
add
add
bound
ljmp
push
add
insb
add
add
sbb
test
and
incb
ljmp
xchg
cmp
icebp
ficompl
aad
mov
incl
jecxz
pop
add
les
add
rcl
shrl
incl
shr
jbe
mov
jecxz
cwtl
cli
xchg
shr
jae
incl
scas
cwtl
out
adc
incl
ret
mov
add
incb
jae
add
je
xchg
jmp
mov
inc
add
out
add
add
inc
add
test
push
xchg
jmp
push
ficoms
dec
mov
mov
jmp
sbb
in
sbb
ror
into
sub
scas
jnp
cmp
lock
rorb
jno
xor
add
add
add
inc
incb
incl
sti
fidivrs
add
incb
pop
add
pop
add
lock
das
les
push
incl
sbb
add
add
and
add
incb
adc
add
adc
add
add
add
add
mov
incb
push
push
inc
add
pop
incb
mov
call
add
or
jns
xchg
jmp
lahf
add
push
xchg
jmp
sbb
std
fdivrp
add
incb
sbb
dec
mov
mov
mov
pop
incb
mov
jb
imul
xchg
arpl
add
add
mov
inc
add
add
add
add
incb
mov
bndldx
pop
incb
test
aam
add
inc
lds
mov
movsl
pop
incb
out
hlt
mov
inc
push
xchg
jmp
lahf
inc
add
mov
and
add
pop
add
test
or
add
lcall
pop
cmc
push
incl
lahf
sbbl
into
or
xor
add
jl
push
add
mov
cmp
dec
mov
xor
add
jnp
cmpsb
pop
incb
aaa
incl
enter
add
mov
inc
add
sbb
aad
push
lahf
enter
sbb
push
sub
movsl
clc
dec
test
jmp
shl
repnz
xchg
jmp
int
ficomps
or
scas
mov
repnz
add
in
jmp
pop
add
add
or
cmp
ret
lret
jbe
leave
mov
sti
test
mov
adc
jmp
mov
shrl
push
cltd
xor
add
add
add
je
incb
push
incl
into
or
cwtl
cmc
adc
xchg
in
jmp
add
lock
add
inc
cmp
dec
dec
pavgb
push
add
imul
cmpsb
loopne
insb
add
incb
bound
mov
daa
incb
lods
pop
enter
xor
add
incl
movsb
push
cmpsl
xchg
dec
jnp
add
cmc
and
add
add
movsb
out
add
add
xchg
sarl
shlb
incl
das
bound
mov
add
lret
push
xchg
adc
add
jg
mov
xorb
jb
adc
add
mov
js
stos
ret
add
mov
xor
add
add
xchg
jmp
add
in
pop
mov
notb
jmp
jb
inc
shll
add
out
pop
cld
or
mov
jnp
add
add
inc
add
scas
cmpsl
dec
add
incb
movsl
incl
fistl
add
pushl
add
and
add
scas
loope
push
add
nop
stc
cmpw
xchg
jmp
shlb
add
incb
mov
and
add
mov
or
cmpsl
leave
rorb
xchg
jmp
int
imul
pop
add
xchg
fidivrs
add
xor
add
add
stc
push
push
mov
xchg
ret
repnz
xchg
add
xchg
jmp
repnz
xchg
pop
pop
add
adc
add
jb
adc
add
and
loopne
add
mov
push
incb
aad
add
mov
fsubrp
sar
push
mov
sbb
jle
aad
into
or
movsl
bound
nop
in
inc
add
in
dec
cltd
mov
in
add
subl
data16
add
xchg
push
xchg
jmp
mov
mov
pop
xchg
pop
incb
inc
add
incb
cmp
sub
push
test
add
add
stos
test
movsb
rorb
add
xor
add
mov
dec
add
xor
add
add
jo
clc
add
add
add
into
icebp
pop
add
sarb
add
sbb
jnp
adc
add
mov
add
xor
add
xor
xchg
ret
inc
dec
rcrl
adc
add
add
sub
incb
movsb
mov
out
enter
incb
cmpsl
insl
jecxz
jmp
adc
add
insl
mov
add
adc
mov
lods
cli
push
add
sbb
mov
incb
stc
add
xchg
jmp
add
fsub
inc
add
incl
das
xor
ficoms
mov
mov
daa
incb
test
lcall
incl
xchg
sbb
incb
filds
cmp
repnz
imul
or
dec
fwait
jo
mov
add
out
scas
sbb
add
dec
jns
cmp
bound
add
add
rorb
int
incl
lcall
add
or
add
xchg
jmp
ja
ljmp
add
add
jnp
inc
xor
xchg
jmp
add
mov
add
incl
and
add
jmp
dec
push
repnz
imul
das
mov
iret
xchg
sahf
push
add
clc
push
mov
xchg
ret
dec
ficomps
pop
fwait
arpl
add
lods
pop
incb
xor
add
incb
push
add
pop
test
or
incb
mov
rolb
add
mov
fldl
incb
add
add
add
incb
jbe
aaa
incb
xchg
jle
lcall
cmp
data16
push
xchg
gs
mov
or
pop
add
into
fnsave
incb
cmp
incb
pop
xchg
pop
jp
mov
loope
dec
add
mov
int3
int3
xor
inc
inc
cmp
lret
xchg
add
xchg
jmp
std
ja
mov
add
out
insl
xchg
jmp
std
mov
jne
dec
or
jbe
js
xlat
inc
add
add
int3
scas
out
lods
and
add
sub
fimull
add
imul
xor
add
icebp
rolb
inc
add
push
jb
ljmp
stos
mov
mov
xchg
ret
mov
repnz
add
pop
add
pop
into
push
incb
scas
add
add
incl
je
arpl
mov
shrl
jmp
sbb
rolb
add
jg
andb
add
sbb
jnp
add
add
fldcw
add
icebp
dec
push
add
jbe
xchg
xchg
jmp
xchg
sbb
pop
inc
pop
xchg
jmp
mov
push
std
add
mov
insl
xor
add
dec
add
dec
add
dec
add
add
add
into
mov
dec
add
in
inc
int3
int3
int3
add
jmp
ss
add
sahf
movsl
divl
mov
incb
mov
adc
add
aad
negb
inc
add
sbb
jbe
daa
incb
cmp
push
add
mov
xchg
ret
pop
ja
stos
sub
in
add
sahf
or
mov
out
mov
add
add
movsb
lds
incb
mov
mov
xchg
ret
std
mov
mov
rcll
fmul
or
jmp
pusha
add
pop
incb
pop
add
jecxz
stos
leave
jecxz
add
incl
imul
lods
xchg
jmp
mov
pop
ljmp
incl
jno
addb
adc
add
pop
js
incl
std
mov
sbb
test
outsb
add
incb
inc
or
push
xlat
gs
incl
push
sbb
and
add
incb
pusha
add
add
add
leave
sub
xor
add
adc
add
inc
push
mov
xchg
ret
repnz
lahf
pusha
add
incb
mov
add
loope
cmp
add
add
add
push
add
dec
xor
add
mov
cmc
cmp
mov
dec
add
scas
mov
mov
add
xchg
jmp
repnz
mov
out
add
incb
mov
inc
add
add
and
add
add
lods
jb
jmp
jno
incb
cmp
jl
aaa
incl
lods
rcrb
inc
add
aas
push
jnp
arpl
pop
test
add
add
and
lret
lahf
and
add
incl
fsubrs
scas
jle
fsubrs
idiv
mov
xchg
jmp
xchg
cli
mov
mov
mov
and
add
fisubl
out
cmp
mov
aaa
incb
add
add
add
adc
add
jnp
incb
mov
pop
test
push
add
mov
add
jmp
fidivs
int3
inc
add
incb
jmp
add
xor
add
incb
xor
add
gs
daa
incl
xor
add
xor
add
jle
jno
add
xchg
xchg
jmp
bnd
xchg
jmp
ljmp
push
cmp
insl
enter
lods
movsb
and
add
jg
dec
add
divb
lock
pop
incb
jae
mov
inc
add
incl
xor
add
adc
add
add
inc
lea
xchg
jmp
std
mov
std
outsb
add
loopne
mov
lods
mov
jmp
jnp
add
mov
sbb
iret
js
pop
incb
mov
add
into
sub
ja
add
add
incb
out
test
cmpsl
popf
fiaddl
mov
add
mov
mov
fnstsw
aas
inc
add
mov
loop
std
mov
pop
inc
add
mov
test
add
xchg
jmp
mov
js
popf
out
mov
xchg
jmp
repnz
add
add
or
add
add
leave
xchg
fiaddl
add
gs
add
incb
xchg
jmp
stos
jle
fistpl
incl
mov
jmp
lods
adc
jge
dec
and
add
incb
xor
add
or
add
cwtl
pop
incb
dec
movsb
cwtl
mov
icebp
push
add
push
xchg
jmp
pop
mov
pop
xchg
repz
add
add
mov
add
add
sub
fistps
add
incb
mov
add
jp
mov
add
incb
cli
sub
inc
add
incb
mov
add
fdivrs
je
mov
inc
add
enter
push
add
inc
gs
xchg
jmp
rcrb
mov
add
add
sbb
sbb
push
cmc
or
push
add
add
add
outsl
arpl
call
sbb
mov
notl
incl
inc
add
sbb
dec
add
incl
int
sbb
gs
add
cmp
fdivrs
incl
incb
sub
cltd
adc
add
add
shlb
sub
incb
outsl
and
add
adc
add
incb
aaa
incb
test
incb
xchg
pop
bound
test
pushf
add
cmp
gs
add
call
add
mov
add
xchg
jmp
mov
mov
inc
js
test
add
inc
xchg
mov
inc
mov
xchg
jmp
inc
xchg
mov
test
jl
xchg
jmp
mov
andb
add
clc
lods
mov
incb
xchg
and
add
mov
out
into
loop
sahf
mov
jbe
bound
push
add
dec
ja
sbb
inc
jne
xchg
jmp
mov
adc
add
xor
add
hlt
adc
add
shlb
and
add
add
add
stos
imul
add
lock
add
inc
mov
push
jmp
mov
imul
sub
les
mov
inc
mov
xchg
jmp
mov
add
add
cwtl
xchg
pop
cmp
jmp
repnz
mov
mov
insb
add
inc
add
pop
incb
negl
add
add
push
loop
cmpsl
test
mov
add
xchg
jmp
pop
imul
ljmp
xor
add
sub
incl
jb
mov
add
mov
dec
xchg
jmp
mov
mov
in
pop
jbe
xchg
mov
out
add
incb
jo
jb
and
add
dec
or
in
test
incb
lods
std
and
add
inc
add
daa
incb
mov
mov
add
daa
incb
js
mov
fisubs
incb
cs
mov
out
incl
stc
pop
xchg
jmp
mov
mov
add
pop
mov
cld
incl
pushl
xchg
push
add
sbb
push
incl
jbe
jmp
add
add
pop
xchg
mov
enter
add
add
lods
rcrb
loop
inc
add
xchg
int3
int3
int3
add
add
clc
jne
inc
and
incb
mov
jl
mov
inc
das
add
add
jge
in
jg
sbb
xor
std
mov
pop
ljmp
aam
push
fsubs
push
aaa
incl
pop
jle
js
movsl
xchg
bound
arpl
jno
push
incl
jno
add
add
outsl
mov
push
push
insb
add
adc
add
xlat
adc
add
add
sahf
fwait
inc
jecxz
add
add
add
pop
add
sti
testl
in
add
incl
pop
add
add
or
xchg
dec
push
incb
or
and
add
inc
add
daa
incb
fdivr
jne
mov
incb
cmpsl
xchg
adc
add
dec
idiv
fidivs
lahf
jno
or
loope
int3
int3
int3
sbb
add
imul
add
or
incb
test
incl
add
incb
into
adc
add
sub
dec
cmp
add
incb
clc
lret
add
jae
xor
add
sub
adc
add
mov
xchg
mov
int3
out
add
push
mov
incb
cmp
shrl
add
fcomps
incb
xchg
mov
and
add
incb
mov
add
adc
add
adc
add
adc
add
dec
add
test
inc
push
add
add
and
add
inc
int3
int3
int3
add
mov
cmp
sahf
pop
pop
imul
push
aaa
incl
imul
add
mov
add
fisubl
add
incb
in
mov
add
add
incb
sbb
test
add
incb
jp
js
xor
add
cmp
movsb
shll
incl
rcll
add
popa
fwait
test
mov
xchg
jmp
ljmp
push
add
mov
mov
xchg
ret
mov
ja
mov
add
jno
add
je
jg
loopne
add
xchg
jmp
mov
jb
inc
lahf
jno
roll
push
inc
add
incl
shll
incb
fwait
std
mov
repnz
sub
shrl
sub
add
add
cmpsl
nop
bound
sub
add
add
xchg
decl
stos
jbe
push
incb
mov
cwtl
jge
popa
andb
add
incb
data16
add
add
add
incl
push
addl
incl
test
xchg
jmp
mov
rcrl
or
mov
add
incb
push
incl
bound
outsl
adc
add
icebp
push
add
mov
xchg
jmp
sar
sub
outsl
out
cmpsb
sub
jae
incl
inc
add
sbb
insl
mov
add
push
js
icebp
loop
popf
mov
movsl
xor
add
mov
nop
xchg
repz
shrl
add
adcl
or
les
or
push
mov
gs
add
lods
data16
incb
sub
add
add
add
hlt
lock
add
jmp
inc
std
mov
imul
mov
jmp
dec
mov
inc
pop
insl
jecxz
js
adcb
add
int
gs
fstps
adc
popl
xchg
jmp
mov
inc
lahf
mov
adc
add
repnz
lret
fucomip
xor
add
incb
int
incb
push
add
cmpsb
mov
add
add
adc
add
in
add
cmp
and
add
out
bound
in
aad
and
add
incb
fisubl
sbb
jbe
popa
inc
call
xchg
jmp
std
mov
ret
add
add
add
je
xchg
jmp
rolb
sbb
in
add
incb
push
hlt
mov
ljmp
in
mov
jns
add
sub
or
aaa
incb
mov
sbb
dec
add
lret
mov
mov
add
incb
test
add
xor
add
mov
loope
popa
jl
aad
add
add
pop
sub
mov
adc
add
fcompl
add
imul
in
xor
incb
sub
add
xchg
jmp
mov
sub
incb
mov
push
mov
push
add
incb
pop
xor
add
inc
ret
mov
lcall
sbb
inc
imul
in
sub
pop
add
arpl
dec
movsl
out
inc
jnp
xchg
add
add
icebp
ret
std
mov
incl
push
incb
divb
les
outsb
add
incb
jo
sub
addr16
insl
lahf
jb
je
jno
jmp
incb
lea
incb
cmpl
je
xchg
jmp
repnz
inc
add
cmpsb
inc
add
incb
test
add
cmp
mov
add
mov
xchg
jmp
std
mov
pop
fidivs
push
incb
jo
dec
add
movsb
adc
add
jnp
sbb
pusha
add
lcall
add
incl
jb
jecxz
in
cld
rolb
incb
sbb
and
add
add
iret
out
cmp
mov
push
add
pop
incl
shlb
das
and
add
incb
nop
lock
add
push
jb
imull
stc
mov
xchg
jmp
sub
xchg
add
fdivl
rolb
add
add
aam
mov
add
inc
add
loopne
popf
scas
fstps
fidivrs
and
aas
call
cltd
push
incb
and
add
dec
add
or
clc
xchg
jmp
sub
inc
in
lcall
jne
add
sbb
hlt
mov
pop
sub
shll
incb
push
mov
in
icebp
pop
repnz
leave
xchg
insl
add
add
test
adc
add
das
xor
add
add
xor
add
add
movsb
push
mov
xchg
ret
in
dec
aas
add
add
incb
sub
and
jb
out
iret
or
sahf
push
xchg
incb
jmp
incb
out
inc
pop
or
shr
add
inc
add
push
incb
outsl
mov
jns
cmp
int
mov
xchg
jmp
pop
imul
test
sbb
sbb
lahf
mov
add
incl
std
inc
adc
add
int
jb
inc
cmp
iret
rol
add
ljmp
incb
dec
cmc
fstps
mov
or
xchg
jmp
pop
mov
add
add
xor
add
sub
cmp
daa
incb
out
add
outsl
loopne
add
add
dec
push
mov
xchg
ret
mov
js
mov
pushf
jmp
lock
into
fistpl
add
popa
outsb
add
movsb
fstl
add
cli
lahf
divl
incb
popa
adc
add
fdivrl
bound
sbb
mov
push
mov
xchg
ret
add
adc
add
add
cmp
mov
stc
push
push
mov
xchg
ret
pop
js
adc
add
sub
test
cmp
xchg
jmp
shll
cli
or
dec
xchg
jmp
push
inc
mov
fisubrs
add
add
sbb
push
add
fimull
test
pop
xchg
inc
cmp
jmp
imul
ljmp
inc
rep
xchg
jmp
int
ja
jb
xor
add
cltd
adc
add
add
add
ret
movsb
adc
add
jb
cmp
add
add
add
dec
add
aas
fistl
incb
add
add
data16
shll
incb
leave
push
and
add
fwait
cmp
add
add
int
incl
call
add
push
add
pop
push
test
adc
add
mov
add
xor
incb
sub
cmp
aaa
incb
stc
mov
xchg
jmp
fsubp
pop
mov
xor
add
aaa
incl
daa
incb
add
add
add
incb
pusha
add
add
nop
mov
ja
sub
lcall
push
add
lock
or
stos
in
inc
fldl
add
add
lahf
pop
std
sub
pop
add
shlb
incl
popa
push
add
in
incb
sahf
leave
push
pusha
add
push
cmc
shlb
incb
sti
lock
add
sub
cmp
mov
adc
push
incb
sub
lahf
iret
mov
cwtl
inc
add
mov
cmpl
add
mov
jmp
imul
std
push
mov
mov
scas
cmpsb
mov
add
incb
cwtl
cmpsl
and
add
test
xor
add
shrb
cmp
mov
add
in
jl
lahf
sbb
adc
add
incb
xor
add
add
sbb
movb
add
out
mov
adc
add
sub
bound
push
add
stos
out
incb
popa
and
add
inc
lods
arpl
jle
ror
and
add
adc
add
jmp
pop
dec
inc
pop
inc
je
enter
add
incb
xchg
rolb
add
test
and
add
outsl
dec
add
xor
add
xor
add
mov
add
push
incb
jmp
inc
mov
lock
pushl
sbb
add
add
js
incl
and
add
add
xchg
jmp
inc
mov
mov
cltd
pop
std
xor
add
movsb
scas
dec
add
add
add
add
cmovo
dec
cmp
jo
xchg
mov
fisttpll
incl
lahf
lret
ret
add
add
fists
cld
push
incb
xor
add
xchg
push
incb
les
jle
out
xchg
jmp
add
pop
shll
sahf
stc
mov
xchg
jmp
xchg
repz
insb
add
add
dec
sti
or
add
fisubl
sub
aas
adc
dec
add
incl
dec
add
cmp
loope
js
pop
incb
mov
xor
add
xchg
or
sub
mov
call
add
loop
incb
fcom
movsl
pop
mov
xor
add
xchg
fisttpl
add
xchg
jmp
mov
xor
add
or
pop
stos
mov
int3
in
inc
stos
and
add
incb
push
add
add
xchg
xor
add
mov
xor
add
add
adc
pop
add
incl
add
addl
js
mov
mov
add
add
add
bnd
xor
add
or
addr16
xchg
jmp
mov
inc
repnz
sub
push
incb
in
pmaxub
fadds
pushf
out
incl
into
and
add
add
push
push
add
roll
incb
das
sbb
incb
mov
je
shl
mov
cmp
sar
pop
incb
les
add
sbb
int3
mov
add
hlt
rcrl
in
adc
add
xor
add
popf
lods
repz
insb
add
mov
pusha
xchg
jmp
mov
mov
pop
mov
sub
lods
addr16
add
add
std
adc
add
jmp
repnz
sub
ljmp
add
and
add
mov
mov
push
add
and
add
fwait
into
int3
push
jae
sbb
inc
add
das
jnp
sub
into
inc
out
inc
add
incb
cmp
rcrl
clc
fcompl
andb
add
das
icebp
sub
dec
push
incl
add
fistps
fmuls
in
jb
shl
fdivrs
add
add
mov
xor
add
jmp
pop
mov
lahf
mov
ljmp
cmp
data16
test
in
cmp
add
dec
mov
incb
das
cld
out
pop
pusha
add
or
incb
and
add
xor
add
inc
add
fwait
dec
sti
add
add
cmp
fsts
push
incb
add
add
add
add
in
imul
pop
xchg
mov
add
incb
insb
add
pop
add
ja
add
xchg
jmp
pop
mov
pop
add
js
add
xchg
jmp
mov
std
mov
sbb
incb
jns
add
add
pusha
add
fbstp
add
add
add
and
add
mov
loope
add
xchg
xlat
push
incb
imul
sbb
xchg
jmp
inc
mov
in
mov
add
add
addr16
add
incb
sbb
sub
incb
jno
add
pushf
stc
mov
xchg
jmp
dec
mov
mov
mov
inc
mov
incb
xor
add
stos
mov
push
add
cwtl
sbbb
sub
mov
loope
incl
or
incb
adc
add
pusha
add
pop
xlat
js
lret
xor
add
test
add
incl
add
add
push
add
cmp
cmp
je
das
lock
out
incb
jl
mov
add
jmp
xchg
pop
shll
add
incb
lcall
add
incb
stos
in
cs
add
add
cmpsb
push
add
inc
add
sub
ds
xchg
repz
xor
add
or
jmp
ja
pop
mov
xor
add
inc
ret
call
repnz
mov
lahf
sub
dec
add
add
add
add
add
pop
out
int
add
add
add
add
shrl
mov
mov
lea
jp
add
std
in
enter
dec
xor
add
add
add
leave
pop
movsb
loope
ljmp
jge
sbb
data16
imul
push
add
addl
mov
enter
add
add
add
shl
pop
incl
xchg
movsb
adc
add
incl
add
std
rcll
jnp
incl
mov
mov
lods
incb
mov
cmpsl
sbb
cmp
push
add
in
call
pop
add
mov
mov
aam
mov
add
add
add
mov
add
pop
sbb
push
jnp
mov
aad
add
cli
pop
add
and
add
incb
imull
push
add
add
push
mov
xchg
ret
inc
repnz
into
sub
inc
add
pop
push
mov
xchg
ret
mov
jb
add
add
mov
incb
dec
jl
das
loope
incb
sbb
xor
add
pop
lahf
xor
add
incb
sbb
push
xchg
jmp
mov
mov
add
test
sub
add
xchg
arpl
add
mov
xchg
ret
add
mov
jne
arpl
add
xchg
jmp
lahf
mov
add
call
lret
cmpsl
insl
shll
incb
and
add
inc
dec
xchg
jmp
pop
mov
bnd
fsubp
leave
shll
or
adc
dec
mov
int
add
add
incl
icebp
push
add
push
incl
lcall
add
add
cmp
popf
fsubr
daa
incb
ja
or
sbb
popa
jne
test
pop
push
add
data16
outsb
add
jge
lds
add
add
mov
movsl
jb
mov
add
mov
add
int3
int3
fst
fcmovnu
addr16
lds
incb
repnz
mov
push
mov
btr
out
cmp
jnp
jecxz
add
loop
incb
jo
inc
cli
push
add
repnz
clc
icebp
sub
mov
dec
add
incb
mov
incb
sub
add
add
add
add
incl
xor
add
add
xor
sub
mov
and
mov
je
ljmp
jb
je
repnz
lahf
mov
incl
pushl
xchg
je
xchg
jmp
sub
add
mov
iret
add
add
ds
adc
add
cltd
mov
add
test
add
xchg
jmp
js
adc
xchg
jmp
imul
add
jle
ficoml
add
sbb
loop
jmp
add
jmp
sub
insb
add
mov
incb
mov
arpl
xchg
xchg
jmp
std
fiadds
xchg
jb
inc
mov
xchg
jmp
dec
inc
xor
add
add
outsl
enter
add
add
mov
lcall
fsts
aaa
incb
ret
add
test
ror
add
lcall
fcoms
incb
push
jb
enter
clc
lahf
test
inc
nop
mov
mov
add
adc
add
sbb
mov
lock
jns
add
icebp
sbb
add
sarl
scas
rorb
jmp
in
sbb
scas
daa
incb
gs
push
incl
incl
icebp
dec
add
ret
iret
mov
xlat
add
add
add
incb
sti
jne
xor
add
fldl
add
sbb
add
add
cli
sub
add
add
add
inc
add
pop
mov
adc
add
adc
add
sti
mov
iret
fisubl
lock
xchg
and
add
mov
incb
sti
inc
mov
xchg
jmp
rolb
shll
cli
in
in
mov
ret
incl
incl
arpl
incb
lret
add
incb
sarb
mov
sbb
incl
int3
xchg
test
incl
ljmp
jb
mov
incl
sbbb
add
incb
divb
add
add
test
rep
into
out
xchg
roll
add
add
fmull
add
add
push
incb
cmp
test
out
push
lahf
cmp
shll
incb
mov
adc
add
add
add
xlat
adc
add
add
mov
mov
xchg
ret
mov
sbb
push
pop
jmp
incb
clc
dec
add
clc
pusha
add
sbb
cmpb
bts
cmp
cmc
jg
incb
aas
out
das
add
jbe
sub
push
add
incb
sub
in
incb
mov
cli
cld
aam
add
incb
jb
mov
and
add
inc
add
xchg
jmp
shlb
pop
or
out
incb
cwtl
add
add
imul
add
popa
xchg
mov
add
stc
jmp
xchg
jmp
inc
pop
xchg
jae
dec
je
and
add
incb
loop
inc
add
push
sub
cmp
jle
ret
push
sahf
cmc
fstps
add
incb
lret
jno
ds
dec
add
jle
push
add
incb
mov
mov
xchg
ret
pop
dec
sbb
jmp
add
sarb
push
add
sbb
mov
in
mov
add
jb
movb
pop
add
cmp
inc
add
incb
data16
incb
sbb
test
sub
out
scas
sub
sbb
incl
gs
sub
ljmp
jp
jb
cmp
jecxz
jb
shr
mov
mov
add
push
aaa
incb
mov
mov
incb
mov
add
incl
fistps
pop
ret
pop
pextrw
inc
add
incl
lret
add
add
inc
add
add
pop
xchg
jmp
mov
mov
push
repnz
add
icebp
mov
cmp
incl
add
add
andb
xor
mull
cmpsb
loopne
push
incb
mov
out
xchg
jmp
std
repnz
lahf
mov
add
in
ja
add
inc
add
cwtl
sar
incl
mov
pop
sbb
hlt
test
or
add
add
add
mov
incb
mov
incb
mov
xor
add
incb
into
xor
add
incb
inc
insb
add
jae
test
fbld
data16
loopne
incl
jmp
xchg
loopne
jno
add
sbb
xchg
jmp
xchg
incb
or
pop
add
dec
jmp
add
and
add
in
out
add
add
aaa
incb
cmpsb
in
mov
push
add
add
stos
ds
and
add
incb
jb
add
add
and
add
xchg
pusha
add
pop
or
add
mov
lods
jne
lods
xchg
popa
xchg
jmp
pushl
dec
div
push
add
out
lds
incb
jge
add
inc
add
stos
push
incb
pushf
xchg
in
add
add
call
add
add
mov
gs
insl
pop
add
imul
adc
add
pop
add
in
incb
and
add
add
add
and
add
incl
xor
add
push
outsb
add
add
jp
add
add
incb
call
push
lods
pusha
add
sahf
adc
pop
add
outsl
fisubrs
sbb
test
jo
mov
add
std
in
add
fdivl
push
jecxz
dec
fsubr
bound
cmp
pop
dec
fisttps
add
mov
cmp
and
add
mov
jge
je
adc
pushf
out
shl
add
sbb
cli
ret
add
add
incb
add
add
fildl
incb
add
add
mov
sti
push
and
add
mov
add
aas
mov
add
add
shrd
punpckldq
and
add
incb
jb
push
or
or
inc
call
xchg
jmp
inc
mov
outsb
add
cmp
add
add
dec
add
mov
add
jb
add
add
push
jnp
add
sahf
xchg
or
into
add
jg
pop
add
xchg
lcall
add
lods
stc
mov
xchg
jmp
mov
ficomps
inc
inc
push
mov
xchg
ret
ljmp
add
add
mov
add
add
inc
call
xchg
jmp
xchg
mov
mov
incl
mov
aam
lret
mov
aaa
incb
ljmp
mov
add
fdivs
or
cli
pop
add
incb
cmpsb
sub
jbe
sbbb
je
xchg
jmp
repnz
incb
idivb
add
add
add
xor
add
add
add
mov
fwait
pop
out
add
add
popf
and
add
ja
movb
push
add
adc
add
clc
call
incb
jecxz
add
add
push
add
outsl
and
add
push
add
incl
jmp
mov
fnstenv
add
mov
inc
cmp
incb
jecxz
cmp
cwtl
xor
add
addb
add
sbb
bound
int3
or
adc
add
mov
cmp
xor
add
jns
je
imul
cmp
incl
pop
lods
inc
int3
int3
int3
add
dec
add
addb
xchg
rol
xchg
or
dec
repnz
push
add
incb
lock
test
incb
aas
pop
and
add
lret
inc
cmp
pop
repz
or
movsl
jne
dec
add
fcompl
add
fdivrs
rcll
incb
dec
incl
mov
mov
mov
jmp
sub
mov
incb
out
pop
stc
popa
xchg
jmp
pop
sub
repnz
inc
mov
jb
add
add
nop
out
add
add
adc
add
push
ljmp
push
incb
xchg
pop
int
sbb
incb
mov
or
xchg
jmp
ja
dec
mov
shrb
cltd
xor
add
arpl
cmc
mov
out
and
add
pop
aam
repz
repz
sarl
xchg
xlat
call
jmp
roll
std
ja
test
push
fdivl
lahf
xchg
popf
xchg
jmp
mov
jb
mov
in
outsb
add
data16
lahf
sbb
movsl
or
push
aas
push
mov
incl
test
insb
add
xchg
cmpsb
aas
mov
incl
or
push
add
push
add
incb
pop
add
jg
int
incl
push
dec
add
lahf
jp
pop
add
inc
add
or
xor
add
mov
add
lcall
and
add
gs
add
incb
stos
inc
add
std
repz
add
add
rcll
adc
add
add
push
mov
xchg
ret
repnz
rcll
popa
mov
xchg
jmp
mov
std
repnz
cmpb
mov
add
inc
add
incb
mov
add
add
and
add
push
mov
mov
sbb
mov
jo
jmp
jl
mov
inc
insb
insb
xchg
jmp
add
inc
loop
push
push
mov
xchg
ret
mov
mov
mov
arpl
mov
pusha
add
cmp
data16
add
add
add
incl
pushl
mov
incl
mov
push
test
xchg
ret
inc
lahf
mov
incb
xor
add
inc
test
add
push
add
hlt
xor
add
jle
xchg
jmp
dec
sub
mov
rcr
repnz
add
imul
add
add
aas
cmc
int
push
incb
lcall
insb
add
add
lcall
inc
jb
incb
push
add
mov
incb
xchg
xor
add
add
add
inc
daa
incb
je
and
add
flds
inc
mov
mov
jne
add
add
fisttpll
or
adc
add
incb
roll
add
cmp
push
pushf
add
incb
je
push
incb
sbb
out
jg
jae
xor
add
add
add
mov
xor
add
add
xchg
jmp
ja
loopne
add
mov
fdivr
incl
pushl
cli
lcall
jnp
incb
mov
out
sub
daa
incb
lahf
sub
jle
sarl
add
stc
notl
xchg
jmp
mov
sbb
inc
sbb
lret
cmp
pop
sub
js
outsl
icebp
inc
xor
xchg
jmp
jb
xchg
lahf
inc
cli
imul
add
incb
ret
shll
add
stc
push
xchg
jmp
ljmp
inc
xchg
push
push
or
cld
rorl
sahf
jnp
push
xchg
jmp
repnz
repnz
mov
add
sub
sti
sbb
push
add
push
xor
add
pop
add
incb
mov
incb
jge
sub
mov
xchg
jge
lds
pop
sbb
sbb
or
sbb
adc
add
add
stc
push
xchg
jmp
sbb
push
pop
add
dec
add
cmp
jae
movsl
popf
jmp
inc
add
xchg
jmp
imul
mov
sarl
bound
divl
sub
xor
add
add
push
add
imulb
shlb
hlt
xchg
push
mov
xchg
ret
fiadds
fimuls
clc
cmp
push
add
jl
popf
add
add
mov
jecxz
xchg
inc
adc
add
incb
cltd
out
incb
inc
mov
xchg
jmp
std
mov
ja
rcrl
incb
popf
mov
pushf
mov
add
lods
and
imul
lcall
imul
add
xor
add
add
add
incl
cmp
push
add
int
jle
nop
mov
xchg
scas
push
add
incl
lcall
add
add
add
add
jp
xor
cmp
jecxz
add
add
incl
pushl
sub
arpl
xchg
jmp
jb
inc
jne
into
mov
stos
add
add
cltd
and
add
pop
add
add
add
addb
add
ret
mov
add
add
imul
pop
loope
popa
xchg
fstpl
push
add
push
and
add
add
adc
add
add
aam
mov
xchg
jmp
mov
mov
pop
fwait
lret
xchg
aad
add
add
in
repnz
cmp
js
clc
iret
insl
cmpsl
mov
out
pop
lret
test
loopne
cmpsb
or
mov
push
add
bound
inc
and
add
lret
mov
pop
xchg
jmp
mov
lahf
mov
repnz
scas
pushl
ljmp
add
incb
notb
call
sbb
sub
out
jb
pop
jmp
adcl
add
cmp
pop
incb
jo
mov
add
incb
daa
incb
mov
inc
jge
pop
incb
pop
add
cmp
push
xchg
jmp
xchg
sbb
incl
test
xchg
jmp
mov
mov
mov
or
mov
add
xor
add
push
cld
in
aad
subb
push
add
incb
or
dec
xchg
mov
xchg
jmp
std
int
inc
std
mov
add
bound
pop
incb
inc
add
push
push
add
jmp
incb
mov
sbb
in
icebp
popa
pop
add
sub
jno
or
sar
imul
mov
test
repnz
incl
std
pop
dec
add
add
add
inc
mov
xchg
jmp
jb
sbb
in
out
add
stos
push
incl
add
add
add
aad
jl
shr
testl
mov
addb
mov
add
add
fldcw
add
and
add
mov
xchg
ret
imul
imul
inc
dec
ret
adc
add
add
add
incl
mov
mov
xor
add
incl
inc
in
sbb
fistpl
sub
shlb
incl
mov
incb
mov
add
add
push
add
incb
sbb
mov
jnp
sarb
call
adc
add
add
icebp
or
ret
add
aam
add
shlb
outsl
mov
add
aam
add
push
jno
push
rolb
incb
mov
int
add
xlat
dec
fldl
mov
movsb
out
add
in
call
and
nop
jns
or
cmpb
push
and
add
add
push
add
fdivr
mov
xor
add
stc
mov
xchg
jmp
sub
mov
clc
scas
imul
shlb
mov
jne
xchg
jmp
inc
push
xor
add
cmp
mov
push
incb
mov
test
dec
inc
mov
inc
fsubrs
add
add
or
cmp
lock
fwait
cmp
jno
dec
jl
cltd
jb
jb
xor
add
jge
dec
test
add
aam
stos
mov
daa
incb
mov
add
add
xchg
sbb
incl
add
mov
sbb
ljmp
shll
mov
xchg
jmp
mov
fiadds
shrb
mov
incb
push
incb
clc
popa
je
stos
cmpb
mov
push
add
add
hlt
ja
xchg
inc
add
ljmp
mov
incl
xor
add
dec
add
daa
incb
js
xor
add
jle
xor
add
incb
and
add
incl
adc
add
add
xchg
lock
sbb
add
add
jge
xchg
lods
sti
xor
add
mulb
adc
add
incb
pushf
out
data16
mov
arpl
mov
incb
clc
xchg
jmp
js
mov
mov
mov
cmp
in
push
add
push
and
jmp
jb
fdivrp
sbb
call
mov
ja
jb
mov
add
mov
add
add
jge
add
mov
fisttpl
lret
ffree
out
add
in
xor
add
out
scas
int3
xor
add
push
incl
or
xor
add
add
add
icebp
mov
adc
add
add
add
and
add
incb
lahf
push
add
incl
add
xchg
repnz
add
jo
mov
cmp
add
add
or
push
incb
adc
add
js
dec
add
aad
or
add
cwtl
shlb
movsl
pop
cmp
fadd
and
ds
adc
add
aas
sbb
fdivl
stos
jne
add
add
xchg
aam
pushf
pop
jb
jp
mov
add
in
push
add
adc
add
ret
insb
add
add
incb
in
mov
ficomps
incl
sbb
dec
add
in
fwait
sub
sub
sub
fsubrl
rol
xchg
loopne
sahf
jl
sahf
inc
add
mov
loop
incb
mov
sbb
jmp
int
mov
add
pop
pop
incb
mov
mov
test
push
incb
out
push
add
rclb
incl
push
push
add
add
add
movsl
mov
pop
add
out
incb
xchg
test
scas
incl
pushl
xlat
aas
add
mov
xchg
ret
mov
in
xchg
mov
lcall
xchg
add
incl
loop
mov
add
in
popf
data16
push
mov
xchg
ret
jb
mov
inc
daa
incb
fists
inc
add
add
mov
incb
imul
mov
xchg
jmp
mov
mov
imul
mov
out
ret
jmp
or
and
add
incl
push
add
xchg
jmp
mov
in
incl
add
add
add
rcrb
loop
test
lret
add
cmp
xor
add
push
add
rorl
xchg
xchg
jmp
mov
add
mov
add
pop
pop
or
jp
push
add
incb
lds
add
pop
incb
adcb
add
fnstcw
popf
arpl
add
incb
fwait
das
in
push
ret
incl
test
pop
fimull
cltd
pop
jae
fsubrl
add
add
adc
add
incb
sbb
or
add
incb
ds
mov
int3
out
and
add
enter
incb
adc
add
mov
rcrb
or
lret
add
add
pushf
mov
add
sbb
inc
add
mov
roll
mov
push
mov
xchg
ret
imul
xchg
jmp
mov
repnz
mov
decl
xchg
jmp
push
pop
jb
inc
cli
cmpb
xchg
roll
std
js
repnz
and
add
incb
cmp
inc
add
xchg
jmp
inc
mov
adc
add
xchg
jmp
mov
inc
std
sbb
cmp
daa
incb
stc
jne
xchg
jmp
js
fidivs
jge
push
add
add
incl
add
sub
loop
add
incb
stos
adc
add
push
in
mov
incb
pop
lahf
mov
cmp
inc
dec
cli
mov
push
jmp
add
jmp
push
imul
repnz
movswl
push
add
dec
add
push
incb
sub
out
push
add
int3
aas
dec
add
mov
jno
inc
add
mov
sub
jmp
mov
repnz
mov
add
cmc
add
add
inc
add
jle
in
add
dec
add
add
incb
in
jo
dec
add
add
cmp
incb
cwtl
pop
incb
adc
add
incb
fldl
incb
adc
add
sub
mov
bound
lret
mov
outsb
add
add
jns
out
inc
add
aad
add
incb
mov
jmp
shrb
jb
inc
dec
push
add
nop
cmp
out
in
incl
mov
add
repz
jmp
imul
movsl
lret
inc
add
incb
cmp
add
add
and
add
jne
add
pusha
xchg
jmp
rcrb
mov
ljmp
add
add
aad
add
pop
add
popa
pop
incb
insb
add
int
arpl
in
in
out
fld
cmp
or
jmp
add
popf
nop
cmp
sub
incb
fs
std
dec
add
adc
add
add
add
insl
movsb
data16
push
add
or
out
sahf
dec
add
incl
cmpsb
mov
add
inc
pusha
add
push
add
stos
sarl
add
and
add
add
mov
cltd
pop
add
fdivs
jnp
inc
add
push
lds
incb
sbb
or
lds
jge
popf
xor
add
lods
and
add
incb
sbb
rclb
iret
cmp
add
push
mov
xchg
ret
sub
daa
incb
add
add
sub
mov
incb
and
incb
adc
add
add
add
mov
out
xor
add
incl
or
pushf
xchg
dec
add
sub
jb
ret
pop
inc
pushf
mov
outsb
add
std
add
add
outsb
add
mov
xor
add
incb
cmc
adc
add
jno
bound
push
jl
inc
fimull
lods
add
pop
jnp
add
add
add
rcl
mov
add
jle
and
add
incb
mov
fsubrs
xchg
mov
push
popa
add
add
push
add
jmp
ret
imul
xchg
push
incb
pop
roll
jmp
mov
pop
int
rorb
push
movsl
mov
mov
sbb
sub
xchg
test
incl
dec
mov
incb
jg
add
incb
xchg
xchg
jmp
lahf
repnz
js
pop
dec
dec
add
mov
mov
add
incl
test
push
incb
popf
out
mov
dec
xor
xchg
lcall
test
push
incb
adc
add
add
or
sahf
pop
mov
outsb
add
incb
stc
push
xchg
jmp
xchg
mov
add
mov
add
jp
ds
jl
add
add
repnz
rolb
ret
xor
add
add
add
inc
add
add
xchg
push
add
vxorpd
incl
pushl
add
incb
sti
test
add
add
cld
int
dec
mov
push
add
add
add
pop
scas
shrl
jmp
mov
rclb
pop
shll
adc
add
add
cmp
ret
repnz
and
add
add
add
je
xchg
push
test
incl
fadds
xor
add
inc
mov
xchg
jmp
jb
mov
mov
add
incb
inc
mov
xchg
jmp
mov
imul
incb
out
mov
sub
or
pop
add
mov
out
dec
add
adc
add
add
incl
xchg
fisttpll
push
add
pop
add
push
add
push
xchg
jmp
fidivs
add
scas
andl
mov
incl
adc
add
dec
je
dec
add
dec
add
add
sbb
movsl
fiadds
imul
cli
stos
inc
in
add
add
cmpsb
dec
mov
add
jbe
push
enter
pop
mov
add
lds
add
mov
leave
das
pop
adc
add
add
insb
add
pop
incb
mov
mov
mov
and
add
mov
incb
test
sub
add
incb
cmpsb
scas
loope
add
add
cwtl
adc
add
push
add
notb
add
sbb
mov
fimull
add
movb
add
outsb
add
mov
add
dec
add
sub
add
add
cs
inc
add
incb
push
add
imul
stos
cmc
pop
add
cmp
js
mov
push
add
xor
add
mov
xchg
dec
or
inc
add
incb
mov
add
add
add
cmp
jg
stc
mov
xchg
jmp
pushl
xor
add
incb
pop
jno
add
out
dec
add
add
leave
dec
add
gs
add
std
mov
add
add
add
add
add
std
aaa
incl
sub
pop
incl
and
add
push
cmpsl
insb
add
incb
in
movsl
outsl
pop
xor
add
inc
add
add
cmp
in
add
xor
add
add
incl
fdiv
add
mov
test
add
ret
imul
add
push
mov
xchg
ret
pop
inc
pop
add
incb
or
pop
xchg
jmp
jb
sbb
imul
incb
mov
js
out
push
incb
sbb
inc
add
fistpll
incl
or
add
incb
std
repz
inc
push
xchg
jmp
pop
fidivs
faddp
repnz
incb
arpl
add
add
sub
add
loopne
mov
mov
insb
add
add
jp
test
sbb
daa
incl
loop
in
pop
incl
cmp
int
in
ficompl
xchg
push
xchg
jmp
ja
xchg
add
or
das
xor
add
sbb
incl
into
xchg
je
repnz
incb
out
add
add
adc
add
add
fsubs
mov
add
incb
cld
adc
add
push
adc
add
incl
roll
jmp
xchg
daa
incb
add
add
push
incb
int
daa
incb
sub
sub
in
push
incl
insl
add
add
and
add
jg
loope
add
push
add
add
incb
aam
incb
fsubrl
add
jp
cmp
add
cli
and
add
in
nop
nop
sbb
into
sbb
xchg
jmp
mov
pop
shlb
add
xor
add
incl
cmpsl
das
test
test
add
pop
nop
mov
add
add
data16
xchg
in
sahf
push
lret
xor
add
incb
and
add
mov
dec
add
incb
les
pop
mov
test
add
dec
add
cs
ret
mov
incb
sub
add
xchg
stc
add
add
add
incl
jns
enter
add
into
or
mov
add
incb
cmc
fdivrs
or
out
inc
repz
push
add
insb
add
incb
out
aam
and
add
mov
add
dec
in
jl
cmp
incb
lcall
jg
or
mov
add
mov
dec
xchg
jmp
pop
xchg
xor
add
adc
add
pop
add
incl
sub
clc
inc
add
add
imul
add
sub
call
mov
cmpb
push
add
dec
add
mov
add
xlat
fcompl
add
incb
cltd
dec
xor
add
mov
icebp
jp
sahf
dec
add
aas
and
add
add
xchg
jb
xchg
jmp
sbb
xchg
clc
push
add
add
sbb
incb
sahf
nop
in
xchg
cmp
idivb
push
dec
inc
add
mov
shlb
pop
xchg
imull
incl
lahf
int3
inc
add
or
incb
int
add
insl
cmp
arpl
push
xchg
jmp
jb
pop
imul
pop
add
add
sbb
add
add
xchg
jmp
std
mov
lahf
repnz
fs
or
add
add
push
add
fistl
add
test
test
incb
insl
mov
leave
push
incl
clc
add
add
cmp
in
incl
stos
fwait
push
incb
ja
xor
add
add
xchg
jmp
repnz
pop
push
adc
add
pop
add
or
incl
lds
dec
inc
add
sbb
jmp
push
add
adc
add
incb
out
add
add
incb
out
decl
cld
aaa
incb
outsl
inc
add
sti
lock
flds
add
incb
push
sbb
inc
add
lahf
sbb
je
jae
add
add
add
icebp
lods
repz
add
lods
mov
xor
add
out
decl
jns
cltd
sub
push
incb
cmp
pushf
aam
incb
push
add
incb
ror
in
and
add
push
incb
aam
lods
add
add
aam
add
shr
xchg
jmp
ljmp
loopne
add
loope
mov
scas
and
add
incb
shll
out
ret
mov
pop
incb
and
incl
sbb
add
add
add
leave
popa
jbe
and
add
add
cmpsb
push
mov
lahf
bound
into
push
and
add
sub
mov
rcrb
in
in
add
add
push
cmp
jp
sub
mov
test
and
add
mov
inc
pusha
add
push
xchg
jmp
mov
inc
in
inc
jge
mov
xchg
jmp
mov
pop
ja
ljmp
or
mov
jmp
int
mov
sub
add
movsl
sub
jne
xchg
jmp
dec
in
mov
das
arpl
int3
int3
int3
lods
jb
xlat
add
fisubs
add
inc
dec
bound
inc
push
xchg
jmp
inc
xchg
xchg
push
mov
call
scas
mov
jle
in
mov
add
add
cltd
fwait
sbb
fisttps
cmp
lret
ret
add
add
cmpsl
push
xchg
leave
sub
or
add
push
add
mov
incb
leave
and
stos
int
sarl
add
or
adc
add
enter
and
add
pop
add
add
add
rcrb
lcall
jle
cmp
sbb
or
scas
ja
incb
xchg
insb
add
inc
add
push
add
xchg
mov
add
cmp
sbb
cmp
add
incb
and
add
pop
add
jae
dec
adcl
mov
leave
jg
add
add
adc
add
enter
add
roll
jmp
xchg
inc
mov
test
add
cmp
ds
das
add
sub
push
out
jnp
add
incb
mov
push
xchg
leave
dec
cmp
leave
add
add
in
add
fcomi
addr16
add
fdivr
mov
xchg
jmp
shlb
das
xchg
dec
add
add
fdivrs
jmp
nop
add
add
push
add
popf
sbb
inc
xchg
or
mov
mov
lea
xchg
jmp
incl
incb
push
add
fildll
cmp
add
xchg
inc
mov
xchg
jmp
std
mov
jne
xchg
jmp
mov
aas
clc
sti
dec
popa
movsl
insb
add
incl
pushf
mov
sbb
dec
cli
shl
cmp
add
add
ret
std
or
fsubl
incb
sub
cmp
and
add
ljmp
mov
sbbb
sarl
incb
sbb
push
bound
imul
and
cli
orb
out
inc
mov
xchg
jmp
inc
mov
sbb
pusha
xchg
jmp
shlb
stos
sarl
mov
incl
add
add
fmulp
incb
incb
aad
or
push
add
jno
and
add
filds
lcall
jnp
add
incb
pop
incb
stc
ror
push
mov
xchg
ret
mov
ror
push
xor
cmpsl
loopne
pushl
incb
aaa
incb
pop
lcall
sub
leave
out
sub
sub
incb
xchg
lea
add
in
add
add
push
lcall
jmp
ja
repnz
jmp
inc
xchg
add
add
pop
add
add
aad
shrb
jl
jnp
push
xchg
jmp
add
repnz
mov
adc
add
mov
call
ret
add
sbb
jg
aad
add
incb
dec
add
add
incb
inc
add
add
insb
add
add
movsl
add
add
push
and
add
in
mov
add
incl
xchg
add
add
popa
xor
add
mov
xchg
incb
add
add
daa
incb
pop
add
xchg
xchg
xchg
mov
mov
xchg
ret
lahf
sbb
decl
jmp
sub
mov
out
jg
jp
out
ja
add
mov
add
out
dec
test
push
add
in
pop
pop
add
incl
out
ljmp
pop
bound
mov
xorb
inc
add
xchg
adc
add
inc
add
stos
daa
incb
sarb
mov
push
decl
add
mov
cmp
mov
incl
inc
jnp
add
add
insl
daa
incb
push
incl
clc
xor
add
add
add
test
inc
je
dec
add
incb
subb
xlat
cmp
jle
scas
mov
xchg
jmp
std
lahf
pop
mov
add
incl
mov
incb
add
add
aam
add
outsb
add
leave
add
lahf
sbb
pop
add
incb
push
aam
jg
inc
add
add
add
mov
add
add
sub
fiaddl
incl
mov
mov
or
pop
stc
push
push
mov
xchg
ret
inc
imul
incb
mov
xor
add
mov
ret
jae
jmp
add
and
incl
pushl
incl
data16
jg
sbb
push
incb
ja
add
int
incb
inc
add
xchg
jmp
mov
js
mov
lret
add
xor
add
add
add
incl
into
or
cmp
add
add
adc
add
xor
add
inc
add
cmp
int3
mov
pushf
addr16
in
mov
loop
mov
inc
add
add
stos
in
enter
mov
add
pop
pop
incb
lret
adc
add
into
adc
add
or
nop
inc
mov
incb
outsl
push
stos
imul
add
mov
mov
fisttpll
add
add
jns
or
cli
negl
cmpsb
adc
add
nop
out
cmc
add
icebp
mov
incb
push
add
mov
dec
mov
std
mov
mov
incl
test
add
sbb
add
xchg
jmp
rclb
or
cmp
push
mov
xchg
ret
mov
inc
mov
or
stos
out
int
fprem1
mov
add
or
inc
or
xchg
jmp
ljmp
incb
or
mov
xchg
jmp
mov
add
pop
out
test
incb
fsts
sub
pusha
add
or
cmpb
pop
mov
addr16
mov
add
sub
loop
mulb
incb
push
arpl
cmc
adc
add
or
test
testl
shll
ljmp
jb
dec
push
add
add
incl
inc
add
sub
andps
push
add
add
daa
incb
arpl
outsb
add
dec
add
add
sub
add
add
cs
insb
add
jae
incb
add
xchg
movsl
mov
push
add
addr16
add
fcmovnb
adc
test
or
divl
imul
out
cli
mov
incb
jle
pop
sub
pop
sahf
mov
add
jecxz
incb
stc
and
xchg
jmp
dec
ljmp
int
mov
push
add
aad
and
add
adc
add
add
jmp
shr
mov
dec
mov
and
add
in
push
add
test
incl
data16
jns
incb
stos
fiadds
incb
cmpsl
je
xor
add
add
add
sub
add
dec
scas
mov
aam
mov
jecxz
dec
add
rep
xchg
jmp
js
inc
ja
inc
mov
incl
imul
jle
test
mov
xchg
jmp
sbb
or
incb
out
test
inc
add
incb
daa
incb
cmc
push
add
incb
testl
or
jmp
imul
mov
leave
shrl
incb
int3
sbb
or
pushf
jo
add
add
add
pop
incb
insb
add
incb
mov
add
incb
jne
clc
sub
in
xchg
test
mov
jmp
mov
fs
fnstsw
add
add
incb
inc
int3
fucomi
shlb
incb
data16
cmp
cld
add
add
mov
add
cld
mov
add
fcomps
xlat
jnp
add
dec
add
fsubrs
pop
scas
std
push
sbb
stc
mov
push
mov
xchg
ret
pop
pop
shll
jb
movsl
or
stc
decl
push
mov
xchg
ret
jb
sub
add
push
xchg
jmp
mov
dec
mov
shlb
incb
icebp
cli
pop
scas
xchg
mov
jle
not
pop
dec
add
fnstcw
out
pop
jecxz
int
push
incb
add
add
incb
out
call
add
add
incb
add
jmp
repnz
sbb
mov
incb
bound
inc
mov
mov
add
fisubrl
lock
add
or
mov
xchg
jmp
bnd
mov
aas
std
adc
add
add
pop
aam
add
jmp
sar
pop
shll
incl
cld
mov
incb
mov
stc
lea
push
mov
xchg
ret
repnz
adc
add
add
add
sub
incb
push
incb
lret
and
add
add
add
adc
add
inc
lcall
push
add
imul
add
stc
mov
push
mov
xchg
ret
inc
mov
jge
mov
xchg
jmp
sub
andl
jbe
ret
lods
dec
add
add
incb
in
mov
incb
aaa
incl
mov
dec
sbbl
in
inc
or
pop
add
add
gs
jmp
sbb
call
xchg
jmp
mov
rcrb
nop
xchg
or
mov
incb
arpl
fcomi
sbb
shlb
add
std
dec
add
dec
nop
das
mov
incl
ret
mov
add
add
add
add
jno
lea
push
mov
xchg
ret
shl
sub
jmp
gs
add
incb
push
add
incl
inc
sub
xchg
jmp
mov
dec
lods
ljmp
aam
incl
dec
jecxz
unpckhps
add
incl
jno
add
add
outsb
add
lods
mov
add
int
incb
pop
add
sbb
into
mov
inc
add
and
imul
daa
incb
cmp
mov
in
add
incl
mov
pop
push
add
jmp
mov
lahf
repnz
into
bound
xor
add
incb
outsb
add
incb
mov
push
daa
incb
lds
sub
xor
add
push
add
cmpl
add
cltd
mov
pusha
add
mov
divl
push
add
mov
incb
xor
mov
mov
incb
lret
xor
xchg
jmp
in
mov
inc
shl
xchg
jmp
repnz
std
sbb
mov
add
lcall
sub
incb
movsb
outsb
add
and
add
jmp
lahf
std
mov
ljmp
add
les
jns
mov
adc
add
stc
xor
xchg
jmp
pop
std
mov
pop
inc
je
mov
add
add
xchg
icebp
push
and
add
xchg
incb
push
inc
add
imul
xor
add
inc
add
add
data16
incb
decl
incl
cltd
nop
mov
out
mov
jmp
mov
std
in
mov
add
add
xchg
pop
incb
sbb
mov
add
incl
jle
mov
lret
add
iret
and
add
add
test
call
incl
lea
sub
xchg
jne
xchg
jmp
lahf
mov
mov
add
add
add
jns
xchg
xorb
adc
aaa
incb
fcomip
add
add
incb
inc
call
xchg
jmp
mov
dec
jb
add
jb
in
clc
push
dec
add
cmp
sti
into
ficompl
mov
fildl
add
adc
add
incb
loopne
cltd
xchg
div
xchg
jmp
ljmp
incl
clc
dec
nop
cmp
push
add
add
and
add
repz
adc
add
sbb
jbe
fadds
jmp
inc
inc
shlb
add
incb
pop
add
incb
and
add
incb
add
add
loop
mov
xor
add
add
out
xor
add
incb
inc
add
and
add
or
notl
xor
add
mov
incb
fstpl
dec
add
mov
mov
add
lods
mov
lret
add
loope
cmc
fcompl
jmp
sub
jmp
int
mov
pop
out
movsb
pop
incb
stc
pusha
push
mov
xchg
ret
mov
rcrb
add
add
xchg
inc
add
mov
xchg
jmp
mov
imul
add
fstpl
add
add
cld
incl
inc
std
js
add
incb
ret
mov
add
hlt
jb
xchg
xchg
inc
add
xchg
jmp
sub
dec
add
incb
rcl
adc
add
shlb
push
incb
stos
sbb
incb
int
fdivrl
adc
incb
test
cmp
lock
add
mov
pop
dec
add
aaa
incb
mov
sbb
loopne
jb
push
popa
cmp
add
xchg
ds
add
mov
mov
push
jnp
mov
push
xchg
jmp
pop
xchg
mov
add
add
incb
sub
leave
xchg
mov
and
add
incb
inc
add
jnp
incb
cmp
leave
out
cmp
fmuls
add
add
mov
jl
dec
jecxz
incb
sub
xor
add
add
outsl
scas
jb
movsb
popa
add
lods
mov
cmp
and
add
inc
idivl
mov
incb
jbe
xor
loopne
add
xchg
jmp
rcll
mov
in
iret
js
movsl
out
adc
add
add
incb
clc
les
add
cmp
adc
add
ds
movsl
adc
add
mov
xchg
jmp
repnz
mov
shlb
add
das
pop
lcall
loopne
xor
imull
pop
add
add
incl
xchg
sub
fldenv
incb
mov
incb
adc
add
incb
les
incl
mov
xchg
jmp
mov
lahf
lods
push
add
add
rcrl
push
mov
cld
mov
ljmp
incb
icebp
jno
sub
lods
into
adc
add
mov
jmp
repnz
mov
mov
jmp
mov
std
mov
repnz
loopne
add
jbe
xchg
rclb
push
pop
inc
add
js
lods
xchg
mov
dec
mov
xchg
sbb
dec
add
add
fildl
jmp
xchg
jb
add
scas
incl
lcall
add
or
add
incl
negl
add
incl
mov
adc
add
mov
and
add
mov
ret
leave
xchg
push
xchg
jmp
mov
fidivs
rcrb
jmp
mov
dec
jb
xchg
pop
add
add
jae
adc
add
incl
dec
add
inc
sysenter
incl
jo
pop
fisubs
pusha
add
add
lret
std
repnz
pop
pop
mov
add
repz
add
push
add
xor
mov
add
add
ljmp
add
add
jns
call
xchg
jmp
ja
ljmp
das
sbb
add
sbb
sti
pop
add
daa
incb
xchg
mov
mov
pop
xor
fisttpll
add
mov
in
push
add
incb
jmp
mov
shlb
incb
shlb
and
jmp
inc
inc
int
pop
adc
add
jg
mov
add
push
add
jmp
icebp
add
add
incl
pushl
and
add
std
add
add
scas
adc
add
or
mov
sbb
cld
pop
push
incb
adc
add
mov
mov
jp
or
cmp
incb
lds
add
imul
jbe
inc
mov
adc
add
incl
pushl
xchg
add
incb
or
hlt
mov
mov
push
add
mov
int
mov
repnz
cmp
sbb
jp
fistps
jecxz
add
add
incb
jbe
insl
pop
incb
and
add
incb
lret
jmp
add
sub
mov
test
add
add
loopne
add
jmp
add
sti
test
jmp
add
add
push
addr16
mov
aad
add
add
jge
iret
cmp
add
pop
incb
mov
or
pushl
adc
rol
add
push
incb
pop
incl
xchg
xor
xchg
jmp
mov
pop
sbb
mov
incb
int
add
push
add
push
inc
add
lds
pusha
add
incb
or
jge
in
cmp
inc
add
adc
add
inc
add
pop
sti
cmpsb
rorb
push
push
mov
and
add
mov
fidivrl
add
incb
mov
stos
lock
add
movsb
test
outsl
int3
repz
shrl
fldenv
inc
add
dec
add
movb
psrlq
add
xchg
jmp
shll
iret
xchg
loope
mov
xchg
jmp
mov
std
std
xchg
or
xor
add
inc
loopne
scas
sbb
test
cmp
lods
int3
cmpsb
outsl
or
incb
addr16
cmpsb
lret
xchg
les
inc
add
pop
cmpsb
xchg
nop
pop
lods
xor
add
incl
push
cmp
int
incb
lahf
stc
imul
xchg
jmp
std
lahf
pop
dec
push
xchg
js
add
incl
repnz
jno
pop
add
in
xor
add
inc
add
inc
add
add
incl
bound
cli
sub
or
add
add
xchg
int3
int3
dec
mov
or
add
mov
cmp
sti
pop
add
incl
cmc
push
add
add
pop
add
arpl
hlt
movsl
mov
rcrl
mov
mov
lods
ret
incb
ljmp
push
push
add
jmp
mov
in
sbb
js
dec
outsb
add
push
sub
dec
jle
sbb
sbb
add
bound
cli
fisttpl
add
incb
mov
repz
inc
add
and
mov
mov
incl
cmp
fwait
dec
add
int
xchg
sub
add
das
mov
je
xchg
jmp
sbb
sub
call
xchg
jmp
mov
imul
add
push
push
add
add
push
add
incb
and
add
xchg
loopne
add
sti
push
xchg
push
xchg
jmp
xchg
push
add
add
add
in
mov
lret
jmp
ficomps
adc
add
add
shlb
add
jp
clc
push
stc
mov
xchg
jmp
repnz
repnz
mov
add
add
popa
xor
add
add
jp
dec
dec
test
incb
mov
push
mov
scas
fisubl
iret
sarl
incl
push
add
hlt
jg
and
add
incl
or
inc
out
aaa
incb
outsl
mov
add
lret
ja
dec
add
dec
mov
incl
data16
sbb
out
add
incb
pop
add
incb
mov
lea
sbb
lret
ficompl
pop
add
je
add
add
incb
imul
add
incl
in
pop
mov
jmp
pushl
or
mov
cmp
add
or
out
enter
dec
add
cmc
cld
ficoml
incl
js
dec
add
cld
mov
xchg
add
xchg
jmp
mov
imul
in
incb
xchg
mov
push
mov
xchg
ret
xchg
aam
incl
and
add
mov
popf
mov
jmp
fst
subl
dec
add
add
cmc
in
add
add
in
add
fmuls
bound
xchg
ret
shlb
push
incb
stos
iret
add
add
mov
sub
xchg
popf
stos
jnp
stos
xchg
jmp
shl
inc
mov
sub
and
add
adc
add
mov
inc
add
aad
pop
add
add
xor
dec
or
inc
add
incb
bound
push
mov
std
test
incb
shlb
int3
int3
int3
add
dec
add
ror
sub
sbbb
sbb
xchg
mov
movsl
inc
and
add
popa
pop
incl
add
shll
repnz
push
add
add
xchg
jmp
inc
imul
and
add
outsl
addr16
call
xchg
lahf
icebp
jnp
incl
xchg
and
add
rolb
inc
add
hlt
push
add
add
add
cmp
xchg
jmp
ljmp
ljmp
add
xor
addr16
add
test
push
jl
inc
add
xor
add
int3
add
add
incb
arpl
fcmove
cwtl
popa
std
inc
add
mov
dec
add
int
incb
pusha
add
int
add
incb
out
fildl
add
xchg
jmp
ja
sbb
mov
incb
cwtl
sub
ret
mov
sbb
pop
and
add
inc
add
add
inc
lods
add
mov
insb
add
add
add
incb
leave
ljmp
incl
cld
xchg
in
and
add
jno
add
mov
inc
xchg
xchg
jmp
pushl
ja
pop
mov
dec
add
add
add
sub
and
add
dec
cld
xor
add
lfs
xchg
jmp
ja
add
int3
int3
int3
add
push
sub
xor
shrb
add
add
incb
lea
test
and
add
incb
or
inc
add
js
je
ficoml
add
add
incb
decb
pusha
add
xor
add
or
scas
jo
sub
ja
mov
jo
in
test
mov
mov
xchg
mov
mov
pop
mov
inc
into
add
inc
add
pop
push
add
add
incl
test
js
pop
add
xor
add
sbb
mov
add
mov
incl
movsb
out
cmp
mov
cmpl
clc
push
add
pop
incb
xchg
loope
lods
push
add
xchg
in
daa
incb
repz
add
and
add
add
pop
test
cmpsl
xchg
rcrb
add
shrl
xor
add
ja
sub
bound
enter
shlb
incb
xchg
lcall
std
push
pop
incb
pop
add
loop
add
or
xor
add
add
add
adc
add
sub
jae
add
outsl
adc
add
incb
fiadds
incb
mov
incl
and
add
pop
incb
pop
pop
and
add
mov
add
lods
mov
add
mov
loope
jge
push
insb
add
incl
jmp
add
sub
mov
adc
add
pusha
add
or
add
add
fistpl
in
xor
add
or
or
jecxz
incb
lea
add
das
or
add
sbb
mov
incb
push
incb
arpl
and
add
outsb
add
push
add
dec
add
inc
add
rol
add
out
leave
jbe
jae
ja
incb
cld
add
add
cmp
xchg
imul
and
add
incb
xor
xor
add
lods
and
add
enter
push
incb
mov
int
pop
xchg
mov
loope
imul
data16
mov
add
incb
stc
and
add
xchg
fcoml
add
insb
add
daa
incb
add
add
data16
adc
add
sub
sbb
push
pop
incl
in
adc
add
add
and
add
mov
add
add
adcb
add
push
pop
lret
imull
incb
push
add
mov
paddd
cltd
inc
add
incb
imulb
or
mov
incl
cmp
fcmovbe
mov
add
cmp
in
insl
or
add
outsl
pop
add
insb
add
insb
add
dec
add
incb
loopnew
add
dec
add
push
lods
mov
add
outsb
add
add
push
push
incb
jbe
rorb
pop
incb
xchg
rcr
dec
incb
add
add
fsubs
or
loope
enter
incb
repnz
add
incb
enter
and
add
incb
mov
xor
add
test
in
incb
icebp
inc
add
idivl
dec
add
incb
mov
incb
fidivrs
jb
push
and
add
popa
mov
xchg
sub
aam
mov
lret
incb
adc
insb
add
mov
test
add
mov
sbb
jno
add
sbb
add
stos
inc
add
or
xor
add
mov
imul
xchg
gs
stos
ljmp
sbb
adc
ljmp
add
dec
in
incb
add
add
and
add
outsb
add
cmp
pop
add
push
xchg
xchg
cmpsb
adc
add
add
add
add
add
add
faddp
inc
or
incb
or
or
bound
push
incb
xchg
sbbl
lret
stc
pop
pop
hlt
shrl
push
add
incb
test
mov
add
xchg
rorl
insl
mov
mov
out
add
sbb
add
and
add
sbb
dec
or
popf
mov
mov
aaa
incb
nop
mov
add
std
in
mov
lret
sub
mov
int3
cmp
cmp
xchg
stc
sub
mov
incb
inc
and
mov
add
jnp
add
xchg
pop
incb
out
add
add
add
loope
stos
fdivl
add
add
add
mov
add
das
fwait
addr16
popf
pop
add
add
and
add
add
pop
xor
add
mov
add
add
incb
imul
add
incb
jmp
push
add
and
add
shll
add
push
xor
add
incb
cmp
mov
add
lods
mov
fidivl
hlt
add
enter
and
add
xor
add
incb
push
mov
push
push
in
incb
xor
add
xchg
jo
in
out
pop
add
sahf
xchg
cmp
and
lds
sbb
hlt
cmp
ja
push
pop
incb
xor
mov
mov
adc
add
jne
add
aaa
incb
das
mov
mov
in
add
add
add
add
pop
aas
adc
add
add
add
dec
add
xor
add
add
add
add
mov
daa
incl
ds
in
add
addr16
mov
adc
add
sub
decb
ror
add
add
outsb
add
incl
cli
data16
sbb
je
in
sahf
push
add
incb
fiaddl
add
add
add
add
jmp
add
add
mov
pop
add
pop
add
incb
inc
add
xlat
jp
and
add
scas
push
pop
push
addb
add
mov
jb
push
add
divl
incb
add
incb
lds
cmp
add
add
andl
lret
movsl
push
add
cmp
jecxz
incl
sub
mov
popa
sbb
sub
sub
sub
push
faddp
int3
and
dec
add
add
add
incb
popa
loope
add
dec
sarb
repnz
cmc
sbb
test
cwtl
adc
add
jl
stc
sub
scas
fnstcw
push
incb
xor
add
and
add
push
add
loope
dec
add
cmpsl
movsl
jno
inc
add
arpl
shlb
pop
incb
add
add
incb
ret
jo
or
and
add
sub
bound
sbb
push
adc
add
add
add
push
xor
add
mov
add
pavgb
push
cmpsl
xchg
jo
dec
add
pop
add
js
cmp
pop
mov
add
jle
cltd
imul
add
and
add
push
add
incb
inc
push
add
add
add
add
add
xor
add
push
out
add
cmc
inc
push
or
cmp
mov
cmp
mov
addb
add
cmp
aas
mov
incb
mov
mov
add
add
mov
sar
dec
jecxz
incb
and
add
lahf
rorl
add
or
incl
or
out
jmp
xchg
lret
add
sub
jge
cmp
pop
incb
pop
incl
scas
pop
add
and
add
add
jmp
ret
cwtl
xor
add
incb
jmp
incl
stc
fisubl
out
add
stos
jae
jp
pop
add
dec
add
or
jmp
add
push
rcll
incb
pop
add
mov
incb
jmp
mov
out
popa
sbbl
cli
mov
incl
add
add
sahf
iret
and
add
sbb
mov
pop
inc
in
cltd
idivl
fwait
push
push
stos
pop
incb
inc
int
lret
lret
sub
xor
add
ret
mov
scas
outsb
add
les
add
fisubrl
incb
xor
add
lret
aaa
incl
and
mov
incb
stc
movl
xor
add
incb
out
add
incb
and
add
incl
push
sbb
sbb
mov
jbe
aaa
incl
mov
sub
xchg
cltd
fwait
outsl
mov
jp
push
add
xchg
lock
psubd
cmc
mov
icebp
dec
aaa
incl
add
add
incb
cmp
mov
mov
add
add
add
pusha
add
shrl
scas
mov
mov
incb
add
add
add
lds
sub
mov
xchg
addr16
adcb
pop
add
pop
add
push
add
incl
fldenv
data16
rcr
rcrl
jmp
jns
jg
incb
pop
repnz
jmp
lea
pop
mov
add
incb
jecxz
sbb
stos
test
cmp
cmp
pop
incl
dec
add
push
incb
test
movsl
add
add
dec
icebp
pop
jns
add
add
incb
pushf
bound
fbld
jmp
add
loopne
jbe
mov
incb
push
add
add
pop
stos
arpl
or
incb
mov
add
mov
incb
repnz
add
xchg
movsl
mov
dec
bnd
pushf
inc
mov
and
add
repz
push
add
test
add
cmpsl
aaa
incl
dec
add
add
add
repnz
add
add
incb
cli
incb
xor
add
add
inc
add
add
loope
adc
add
incb
inc
adc
add
lret
mov
add
incb
jecxz
pop
incb
sub
in
jae
add
outsl
pushf
push
push
incb
insl
cmpb
and
add
add
incb
stos
jmp
cmp
and
add
jl
roll
movsb
popf
ret
jge
add
add
scas
cmpl
add
adcl
add
sbbl
incb
dec
add
repz
adc
add
cmpsb
movsb
mov
imul
cmpb
inc
shll
add
mov
ret
aas
jg
data16
incb
mov
add
incb
mov
incb
dec
fistpll
lock
incb
adc
add
push
add
add
pushf
shr
jb
incb
fbstp
dec
jno
test
add
fmull
add
ret
inc
add
mov
pushf
call
add
xlat
inc
add
mov
incl
in
add
mov
insl
into
add
add
incl
inc
out
mov
incb
mov
add
add
add
add
nop
in
push
mov
divb
out
adc
add
sub
incb
rorl
add
mov
add
add
incb
dec
add
add
shl
sub
aaa
incb
inc
movsb
mov
push
add
icebp
xchg
add
incb
push
mov
out
incb
test
divl
incb
push
add
ret
incb
in
add
add
add
incl
bound
pop
insl
add
add
mov
cld
in
adc
add
add
sbb
adc
add
test
pop
add
ficomps
add
lods
push
lea
incb
sub
and
add
incb
ja
add
loope
incb
jns
out
xor
add
add
xchg
push
add
add
out
inc
dec
fidivrs
jne
xlat
push
add
dec
mov
push
incb
sub
das
out
adc
add
incl
icebp
test
test
cmp
arpl
incb
jle
inc
sti
jo
mov
add
scas
pop
mov
shr
outsl
sbb
xchg
fwait
lahf
mov
add
das
or
lahf
stos
sbb
mov
or
lcall
aas
shrb
add
mov
incb
mov
incb
jo
mov
addr16
add
add
add
incb
out
sbb
sbb
xchg
inc
dec
out
dec
adcb
add
pop
nop
out
mov
jecxz
incb
adc
mov
incb
mov
leave
out
add
incb
aaa
incb
fwait
adc
add
in
cmp
cmpsl
addl
add
add
iret
push
add
incb
pop
add
dec
add
sub
lods
cld
or
add
add
adc
add
and
add
xor
add
rorb
pop
incb
pop
mov
dec
add
or
lods
jmp
inc
add
lret
daa
incl
movsl
pushf
jge
pop
add
add
pop
add
add
add
add
pop
incb
cmpsl
jp
stos
add
add
incb
test
and
pop
add
push
add
enter
imul
add
sub
jne
cmp
fistps
test
cmp
cltd
in
add
add
je
or
push
incb
icebp
addr16
add
incb
pop
add
jns
add
add
or
gs
pop
inc
stos
dec
xor
insl
lods
adc
add
fistpll
dec
add
dec
mulb
incb
cmp
outsl
cmp
xchg
xchg
sbb
add
lock
add
add
add
incb
fst
cmp
adc
add
push
incb
mov
sbb
incl
dec
mov
dec
add
add
pop
add
incb
aad
incb
mov
pop
mov
incb
sub
dec
lods
sbb
incb
jno
or
insl
inc
add
adc
add
incb
push
incb
sbbl
add
inc
add
add
xor
add
push
add
incb
mov
iret
das
iret
and
add
xor
add
inc
add
incb
jns
out
jne
ja
mov
adc
add
incl
push
add
sbb
incb
pop
add
leave
lret
ret
inc
add
mov
test
jnp
inc
inc
dec
add
add
leave
jle
insl
inc
add
incb
adc
add
ja
iret
pop
incb
lds
cld
xor
add
and
add
ret
mov
xor
add
dec
enter
incl
dec
fistl
dec
add
add
inc
xor
add
mov
out
std
rorb
inc
add
incl
add
add
add
incb
add
add
add
incb
mov
sub
fmul
cmp
add
add
incb
inc
add
jmp
ljmp
lahf
fstpt
push
add
incb
ljmp
loopne
incb
jge
bound
mov
incb
xchg
incl
mov
dec
add
mov
cmpsb
js
sbb
add
push
add
incb
xor
add
incb
mov
fdivrs
xchg
cld
cmp
inc
add
add
and
add
add
jp
adc
add
incb
mov
adcb
add
incb
mov
pop
inc
add
push
add
incb
in
icebp
adc
add
ret
mov
sbb
test
incb
js
push
incb
xor
outsb
add
std
sbb
sub
repz
pusha
add
incb
push
add
fisttps
push
incb
push
sahf
jle
mov
incb
sbb
pop
lahf
test
add
add
pop
push
lods
cmp
pop
incl
pop
mov
in
xchg
aam
loope
movsl
divb
push
add
add
scas
shl
fmulp
loope
stos
push
adc
pop
add
outsl
fcom
dec
add
incl
jl
lahf
adc
add
adc
add
mov
popf
mov
pushf
push
add
pop
add
and
incb
sbb
arpl
xor
add
push
add
incl
jge
adc
add
rcrl
sbb
add
cmpsl
or
xchg
out
cmpsb
or
pop
push
incb
xor
add
shl
add
sub
sbb
lea
aad
mov
push
add
incb
fstl
incb
and
add
mov
add
fistpll
add
pmuludq
incl
inc
add
sti
fwait
dec
add
add
sub
mov
add
xchg
push
incb
test
incb
cmpsb
frstor
add
jp
mov
incb
in
xchg
mov
stc
push
pusha
add
incl
int3
hlt
dec
sbb
and
add
and
add
incl
ljmp
add
jp
xor
add
jge
mov
nop
add
add
incb
xor
add
fmul
incl
mov
add
jae
add
aas
les
add
mov
orl
inc
jmp
mov
add
lods
or
push
add
mov
incb
decb
out
mulb
dec
add
xchg
shrb
shrb
insb
add
out
in
add
add
loope
ja
jnp
stos
dec
add
sar
pushf
push
inc
lret
xor
add
in
adc
scas
add
add
incb
sbbl
incb
sub
incl
jb
lret
xor
add
cmp
add
add
add
pushf
aam
xchg
push
divb
stos
cli
js
nop
mov
add
add
incb
divb
cmp
incb
add
iret
aas
xor
mov
and
add
fdivrs
sti
outsl
pop
add
gs
adc
add
incl
add
add
inc
pop
cmc
xlat
lock
sahf
les
xchg
mov
incl
fidivs
incl
xchg
add
incb
mov
jae
push
add
xor
add
add
add
sub
add
add
aad
aaa
incl
sbb
incb
popf
ret
lods
cmp
jae
xchg
push
incb
movsb
test
incb
in
jecxz
loop
mov
sbb
add
add
xchg
add
or
dec
add
test
incb
mov
ret
mov
mov
mov
lods
mov
adc
add
incb
cmpsl
pop
add
sbb
adc
add
and
add
inc
sbb
push
sbb
incl
movsb
inc
add
cmp
cmp
push
lcall
incl
lods
sbb
inc
pop
jnp
sub
add
fadd
sbb
and
add
mov
add
sbb
or
repz
mov
add
bound
pop
incl
mov
add
add
repz
adc
add
add
add
mov
add
incb
clc
dec
add
xor
add
add
cld
cwtl
nopl
gs
push
add
enter
fwait
ret
mov
incb
mov
add
incb
add
repnz
incb
jne
inc
imul
inc
arpl
mov
test
gs
fstpl
add
jl
sbb
out
das
xchg
add
jle
outsl
sbb
stc
lret
fsts
mov
mov
ljmp
incb
or
push
incb
incl
imul
add
incl
mov
incb
loope
fisttpl
pop
addb
add
fstl
incb
jl
loopne
mov
sbb
fdivrp
out
incb
and
add
cwtl
loopne
and
add
out
add
add
push
incl
subb
leave
sti
fwait
int3
shrb
aas
add
in
jnp
or
sti
loope
int3
mov
cmpxchg
loopne
fcmovnu
flds
incl
cld
incb
ret
dec
add
dec
add
aam
enter
outsb
add
or
mov
incb
adc
add
add
add
test
cmpsl
mov
adc
add
incb
sub
xor
add
mov
inc
add
mov
inc
popa
and
add
movsl
cmc
data16
incl
mov
add
add
loop
decl
pusha
add
and
add
incb
mov
add
add
add
xor
add
add
add
mov
xchg
enter
sar
loope
incl
pop
push
incb
and
add
incb
bound
into
aas
jl
popf
popf
incl
iret
pop
add
fnstenv
incb
incl
incb
mov
mov
je
les
incb
push
adc
add
and
add
add
add
addr16
js
lret
addr16
add
inc
add
incb
gs
cwtl
pop
or
pop
add
mov
add
add
incb
lcall
les
push
incb
push
sub
fstps
jb
test
rcrb
add
add
add
pop
ja
jo
add
add
add
rcrl
sub
hlt
adc
loopne
add
add
test
cli
and
add
hlt
jb
insb
add
add
jle
adc
add
push
add
incb
jp
add
pop
jbe
sahf
leave
gs
add
aaa
incb
imul
dec
fisttpll
push
pop
mov
incb
xchg
add
add
incb
outsb
add
add
aas
stc
xor
leave
xchg
incb
incb
mov
add
fidivrl
or
push
add
les
incl
mov
nop
sub
incl
jmp
incl
arpl
dec
push
add
insl
push
add
dec
add
add
inc
adc
add
add
adc
add
in
add
add
push
add
incb
push
jbe
incb
cmp
mov
add
incb
test
decb
add
jp
dec
add
xchg
js
lods
cmp
dec
add
add
in
cld
rolb
incb
jmp
mov
fwait
fwait
xchg
inc
add
xchg
add
push
bound
scas
fdivrl
add
lods
pop
sub
in
jae
xchg
inc
add
add
add
add
dec
add
incb
out
mov
incb
adc
mov
incb
mov
mov
jbe
sbbb
out
fwait
or
pusha
add
add
cmpsl
mov
pop
incb
sub
nop
subl
mov
sbb
sbb
incb
insl
mov
add
add
call
add
scas
sbbb
add
incl
incb
daa
incb
popa
xchg
leave
sub
lret
incl
jnp
add
add
incb
inc
inc
sbb
mov
movl
call
add
pusha
add
addl
add
cmpsb
dec
add
lret
jmp
add
add
add
inc
add
add
daa
incb
adc
add
sarl
add
fwait
mov
add
add
enter
adc
add
dec
push
add
add
movsl
sbb
incb
test
add
and
add
add
add
incb
mov
add
incb
imul
add
pop
add
jns
incb
pop
sub
stc
jns
rorb
add
mov
movl
stos
aas
xchg
cmpsl
je
frstor
incb
mov
push
out
add
add
inc
add
pop
pop
add
incb
adc
add
add
add
cmpsb
jmp
or
pop
and
add
incb
scas
sti
int
mov
mov
bound
shlb
xor
add
incb
and
shrb
lds
dec
orl
xchg
repnz
aad
addr16
xchg
pop
add
popa
enter
sti
or
ret
push
add
pop
incl
xchg
addr16
add
aaa
incb
mov
xchg
inc
pop
std
dec
dec
add
incb
add
add
hlt
push
add
inc
xchg
cmp
rcrl
add
adc
add
incl
mov
insb
add
cmpsl
jl
addr16
incb
dec
add
inc
add
jp
loope
incl
push
add
jb
sbb
incb
xor
add
loopne
push
cli
das
mov
mov
mov
cmpsb
sti
jae
idivb
test
je
jns
incl
jmp
jl
int3
icebp
fidivrl
or
mov
arpl
xchg
and
incl
dec
add
cmp
mov
jo
jecxz
lods
cmp
add
jnp
cmp
ficompl
add
sub
enter
ffree
jmp
fisttpll
mov
jns
lods
inc
dec
adc
add
xchg
pop
add
lea
jb
std
or
mov
xor
add
xchg
out
dec
std
lods
sub
fiaddl
xchg
flds
loop
add
mov
int
incb
arpl
enter
add
pop
dec
add
icebp
ficoml
incb
fsubrs
inc
add
aad
stos
test
inc
add
or
incl
leave
loopne
out
jbe
inc
add
dec
add
cmp
add
lret
das
out
icebp
clc
js
testl
xor
add
add
add
dec
sub
mov
and
add
ret
incb
push
add
ljmp
xchg
push
incb
nop
pop
fiaddl
dec
push
out
push
lret
add
add
incb
push
add
mov
and
add
add
mov
stc
dec
add
dec
lahf
jno
cli
rolb
mov
incl
lahf
in
incl
mov
lahf
mov
xor
add
xchg
pushl
lahf
mov
xor
add
add
incb
xchg
push
add
pushf
push
incb
add
pop
jecxz
add
call
add
shll
or
incl
jae
aaa
incb
divb
popf
addb
mov
add
insl
xchg
add
add
fcomi
push
add
imul
add
add
push
out
loop
pop
sub
movsb
xchg
xchg
incl
xchg
inc
mov
mov
das
adc
mov
mov
in
sbb
incb
repz
shrb
cmp
add
incb
xor
add
adc
xchg
data16
stc
mov
jne
incl
insb
add
cmp
out
addl
mov
add
nop
aaa
incl
add
add
aaa
incb
pop
mov
incl
xorb
add
sub
outsb
add
incb
sub
pushf
xchg
mov
cmp
scas
jne
fsubr
and
add
sti
test
iret
adc
add
jecxz
xor
add
mov
cmc
cmp
add
sub
imul
add
add
or
pop
add
repz
imul
rorb
lods
xchg
sub
mov
add
incb
out
jle
mov
or
xchg
pop
add
cli
jno
pop
add
inc
add
mov
sbbb
pop
add
add
sub
movsl
push
add
fbstp
jge
incl
mov
adc
add
adc
add
incb
xor
add
dec
add
shrb
jnp
add
incl
rcll
data16
add
cmp
enter
das
pop
push
incl
aaa
incb
xor
add
add
add
movsb
add
add
or
add
add
push
add
popa
inc
sub
lds
push
add
adc
add
push
sbb
pop
add
incb
jae
push
jbe
xorl
add
sbb
ficoms
xor
add
testl
xchg
mov
add
add
lcall
incb
into
xor
stos
dec
add
and
add
incb
cmp
add
mov
push
add
popf
and
add
pop
mov
add
addr16
add
je
cmp
fistl
cld
frstor
rclb
in
add
add
add
add
incl
xchg
pop
ret
xchg
adc
add
into
add
jp
add
add
lds
push
add
add
add
pushf
sbb
xor
add
push
insb
add
add
mov
lahf
inc
bts
int
nop
or
jno
in
lcall
cmp
xchg
cmpb
add
scas
ja
pop
dec
add
add
adc
add
add
cwtl
shld
incb
or
outsb
add
lods
mov
incl
dec
cmpsb
repnz
add
incb
or
incb
lock
add
jmp
jne
xchg
notl
incl
add
add
movsb
xchg
inc
push
gs
incb
lret
out
and
add
incb
push
outsb
add
rcrl
mov
cmpb
lret
mov
add
xchg
cli
adc
add
incb
dec
mov
cltd
xor
add
gs
loopne
add
cmc
inc
add
ja
add
incb
and
add
mov
incb
cmp
out
xchg
ret
pop
incb
push
andl
xor
add
push
add
in
incb
dec
add
nop
das
cmovl
mov
push
add
arpl
mov
xchg
fdivrs
pop
mov
xchg
dec
paddsb
test
add
push
add
cmp
add
sub
incb
js
push
add
jg
incb
inc
dec
pop
adc
add
in
adc
add
jo
loope
sbb
dec
add
ret
inc
mov
in
cmp
repz
incb
jp
nop
sbb
incb
test
imul
in
xchg
add
mov
test
fsts
sub
ret
push
inc
add
push
incb
xchg
adc
dec
add
incb
xor
add
jne
outsb
add
push
sti
jno
add
mov
and
add
and
add
incb
mov
aas
dec
imul
jp
xchg
int3
ret
cmpsb
fisttps
outsb
add
fistpl
incb
lea
adc
fstpl
add
jecxz
in
add
add
add
aas
lods
std
pusha
add
incb
pop
incb
lahf
xchg
bound
inc
add
popf
jl
xor
add
and
add
xchg
mov
test
push
mov
add
popf
xchg
inc
add
add
jmp
jg
loop
scas
push
add
xchg
xchg
adc
add
incb
iret
into
shlb
mov
add
add
repz
js
jne
xchg
push
incb
mov
movsl
test
or
in
pusha
add
orl
ja
adc
add
mov
and
add
incb
push
jmp
incb
xchg
xor
adc
add
add
ret
pop
add
add
add
aas
mov
out
mov
out
imul
incl
xor
add
std
mov
out
daa
incb
gs
incl
cltd
mov
add
add
add
fwait
and
add
add
in
adc
add
imul
je
lret
std
idiv
fistpl
add
xor
add
xor
add
fadd
xchg
repnz
mov
xor
add
push
add
and
add
xchg
dec
add
js
pop
arpl
add
std
ret
add
push
incl
lea
int3
ret
add
push
add
shl
out
gs
add
add
add
out
jg
in
jp
scas
loope
inc
push
push
popf
aaa
incb
fs
cltd
and
add
add
incb
icebp
mov
incb
jb
shlb
int
sbb
push
incl
or
test
into
lods
xlat
int
jno
sub
dec
std
add
add
das
jle
mov
push
or
pop
add
inc
mov
iret
adc
add
fwait
incb
aad
sub
std
or
icebp
mov
into
sbb
scas
xor
add
add
add
inc
or
incl
mov
xor
add
cmp
cmc
xor
add
lcall
push
push
add
sub
mov
and
add
pop
cmc
mov
add
add
shll
incb
sbb
loope
sahf
cmpsl
insl
xor
add
add
xor
add
incb
fsubp
cmp
incb
jbe
fmuls
incb
cmc
mov
sub
pushf
sbbb
incl
stc
sbb
push
push
add
cmp
or
incb
fidivrl
incb
mov
pusha
add
inc
add
add
adc
add
add
mov
add
pop
add
fstpl
pop
mov
sbb
add
incb
jle
push
add
add
add
incb
push
xchg
out
aam
sbb
fcomi
ljmp
xor
add
xor
add
mov
add
adc
incb
or
or
int3
xor
add
push
add
add
in
cmp
incl
lret
mov
inc
mov
bound
enter
add
je
pop
gs
sbb
pop
or
lret
adc
add
jl
jge
pop
xlat
int3
inc
add
pop
add
pop
incb
cli
or
int3
f2xm1
mov
jnp
pop
add
loopne
or
lods
inc
add
xor
add
adcb
add
mov
add
pusha
add
push
xor
add
add
testb
out
adc
add
ja
add
add
inc
add
shl
outsl
jecxz
push
incl
jl
sbb
fnstcw
adc
add
jl
inc
incb
mov
xor
add
cwtl
adc
add
add
fs
jae
incl
outsb
add
push
add
add
push
add
incb
inc
adc
add
xor
incl
mov
push
pop
add
incb
jno
add
add
sbb
push
lods
fsts
incb
jmp
pushf
cwtl
and
add
and
add
add
mov
pop
stos
or
xor
add
incb
add
add
addl
sbb
add
incb
jne
ja
int
das
jecxz
add
lds
or
pop
add
cmpsb
mov
loopne
incb
mov
mov
incb
js
adcb
add
and
mov
mulb
xor
add
incb
call
incb
xlat
sbb
dec
andps
arpl
add
add
mov
fnstcw
lods
push
or
and
add
in
stos
dec
add
je
lcall
or
incl
fisttps
add
jne
rolb
add
incb
push
add
les
push
rcrb
dec
add
inc
add
or
inc
adc
add
and
add
incb
je
mov
das
xchg
cmpsb
mov
push
incl
movsl
adc
add
add
add
incb
ret
dec
cmc
jns
add
incb
xor
add
incl
repnz
fwait
movsl
add
incb
inc
add
add
jmp
cld
pop
add
lds
fldenv
add
add
xchg
dec
add
add
add
clc
int3
arpl
imul
test
add
insb
add
mov
rclb
subb
stc
xor
add
inc
hlt
pop
add
push
add
sub
cmp
rcrb
add
clc
shl
mov
add
add
incl
in
incb
gs
mov
add
or
xchg
lods
mov
add
push
add
inc
leave
push
add
incb
movsl
push
add
add
and
add
aaa
incb
pop
and
add
pop
incl
push
incb
mov
add
cmp
hlt
lret
mov
incb
js
inc
pushf
push
add
pop
add
add
and
add
incb
in
xchg
les
lds
inc
and
add
add
cld
push
add
dec
out
mov
rcl
pop
xchg
sbb
in
int3
int
cli
or
sub
or
fwait
cmp
sub
call
pop
xchg
bound
jmp
scas
xchg
inc
cmp
xorb
add
jl
push
add
call
pusha
add
jo
add
add
incb
dec
mov
xor
add
sahf
sbb
add
incl
xor
add
add
add
incb
jb
scas
sahf
xor
add
adc
add
jge
add
incb
push
mov
test
add
insb
add
ljmp
inc
inc
add
incl
mov
in
incb
cmp
orl
cmp
int3
cmpsl
sbb
test
add
jne
add
cmovbe
popa
mov
add
incb
ljmp
xor
add
mov
incl
dec
add
or
lret
ret
mov
incb
in
jb
add
add
pop
mov
mov
rorl
adc
add
xchg
cli
ljmp
icebp
lcall
stos
sbb
xlat
dec
iret
mov
lds
add
sub
aam
cltd
adc
add
pop
incb
ret
out
push
add
incb
cmp
sbb
or
cmp
loopne
in
inc
dec
add
mov
bound
sbb
or
incl
stos
pop
add
add
incb
sub
mov
add
jnp
inc
add
xchg
mov
incl
add
add
popa
push
add
or
pop
add
mov
add
push
lea
nop
out
ret
add
cli
dec
add
in
xor
add
and
add
sub
in
gs
fwait
orb
add
dec
add
incl
cmovnp
sbb
in
mov
and
add
fwait
stos
or
jnp
add
add
leave
push
add
push
sbb
add
incb
ret
push
add
xchg
xchg
xchg
push
add
ljmp
mov
add
adc
add
or
sub
fwait
push
incb
and
add
incb
sti
sub
leave
mov
cmc
xor
add
add
xlat
cld
je
lahf
int3
into
cmp
incl
xchg
mov
inc
fstp
add
add
incb
jge
xchg
xchg
inc
add
add
add
jns
popf
shrl
add
jge
mov
dec
add
incl
repnz
adc
add
xor
add
sbb
add
add
add
cltd
push
add
and
add
aas
xlat
pop
push
add
incb
cmpsl
shl
add
mov
add
outsl
or
aas
xchg
xchg
and
add
add
int
incb
ja
pop
incl
in
sub
add
mov
inc
pop
mov
mov
icebp
test
incb
loopne
add
add
adc
add
incb
icebp
xor
add
bound
clc
clc
dec
add
addr16
add
add
sub
inc
add
jno
dec
cmpsl
and
add
into
mov
jns
incb
and
ljmp
push
add
adcb
add
xchg
add
add
incb
inc
add
je
adc
add
incb
dec
pop
incb
gs
repnz
fimuls
add
fisubl
jmp
incb
mov
incl
pop
add
outsl
mov
add
add
incb
dec
add
incl
jmp
add
shrl
push
mov
incb
mov
incl
shr
inc
and
add
mov
add
lret
push
scas
cmpsb
in
sbbl
add
cmpsb
push
add
xlat
in
pop
add
into
xchg
pop
daa
incb
pop
add
fwait
repnz
mov
push
dec
movsl
xor
add
incl
jns
fcompl
incb
aaa
incb
bnd
test
push
add
sub
push
add
divl
incb
xchg
mov
jbe
mov
xchg
adc
add
pop
add
xchg
test
shll
add
add
push
push
enter
mov
pop
add
incb
fisubrl
add
aad
cmp
int3
movsl
lret
mov
add
in
xchg
clc
mov
add
mov
in
sbb
xor
add
sub
mov
add
add
add
pushf
inc
add
repnz
sub
jl
inc
jge
push
add
lds
or
add
lret
enter
incb
test
add
ljmp
add
add
fisttpl
test
repnz
scas
xor
mov
and
xchg
arpl
not
push
incb
in
mov
sub
lods
push
add
xchg
mov
jl
cmc
mov
push
add
cli
iret
mov
pop
add
incb
test
add
jo
test
jbe
cmc
mov
add
add
data16
cmp
idivb
dec
add
add
incb
aam
frstor
inc
psubd
aaa
incb
cmovnp
incl
fcmovbe
enter
mov
cmp
cld
xchg
mov
xchg
mov
mov
add
xor
add
add
xor
add
push
dec
add
or
push
sbb
js
sar
pop
push
pop
data16
push
pop
pop
add
mov
and
add
jae
in
shlb
add
push
incb
notb
out
or
pusha
add
add
insb
add
incb
dec
add
xchg
mov
or
cmpl
fmull
cmp
mov
movsl
out
sub
repnz
add
add
add
incb
fildl
mov
adc
add
xor
add
addr16
repnz
add
incl
test
jnp
incb
or
add
incb
data16
and
add
addl
das
fcomip
notl
incb
lret
incb
out
incb
sbb
nop
movsl
push
dec
out
sti
mov
add
add
add
incb
and
or
xlat
pushf
xchg
stos
sti
sarl
mov
xchg
cmp
and
add
incb
or
pop
add
incb
test
xchg
test
xchg
or
incb
call
incl
xchg
xor
add
cmc
sar
xchg
dec
mov
add
xlat
fisubrl
add
incb
pushf
aas
xlat
out
incl
mov
int
xchg
inc
add
pop
incl
sbb
incb
mov
mov
shl
test
incl
sub
xor
add
in
mov
add
stos
outsl
leave
bound
mov
les
add
loop
mov
movsb
rorl
inc
jge
incl
fs
aaa
incb
pop
push
incl
gs
add
pop
jp
sahf
out
pop
add
push
add
frstor
ret
xchg
incl
adc
add
incb
add
incb
fisubrs
cltd
adc
add
add
dec
daa
incb
add
add
in
mov
mov
fmuls
jno
inc
add
incb
outsl
dec
add
jmp
add
cmp
add
cwtl
popf
popa
fnstcw
test
cmp
sti
sub
repz
rcrl
add
pusha
add
jl
fsubrs
pop
add
test
add
out
add
jno
or
fstl
incl
aaa
incb
out
xchg
cmc
add
add
add
inc
add
movsl
hlt
test
push
mov
jno
incb
stos
les
lcall
incb
inc
lock
add
adc
add
js
popf
inc
movsl
mov
add
add
movsl
mov
shrl
add
jno
add
add
incl
xchg
cmp
insl
lahf
lahf
and
add
mov
incb
in
cmpsl
adc
add
incb
sub
fimull
repz
lea
add
add
inc
add
pop
sub
or
add
add
incl
adc
add
add
sbb
cmp
add
add
incb
stos
gs
rorl
neg
shrl
notl
incb
aad
out
lret
xchg
dec
add
incb
pop
popa
or
add
add
inc
add
add
imul
fmul
push
incb
cli
mov
add
popa
sbb
ret
sbb
incl
incl
out
inc
add
icebp
sub
jecxz
incb
adc
add
stos
addr16
incl
out
cmp
push
add
incb
xchg
push
add
inc
add
dec
add
imul
cltd
jns
incb
enter
add
xor
add
incb
scas
xorl
nop
xchg
sahf
add
add
test
xor
add
incl
xlat
jle
cmp
sar
jns
incb
and
add
lahf
pop
add
sub
mov
pop
subb
push
add
incb
mov
add
mov
cld
jle
movsl
dec
add
inc
push
add
incb
sub
sub
cltd
mov
incb
lods
xor
add
fld
or
cmp
into
xchg
sub
push
xor
add
xor
add
xchg
mov
mov
stos
inc
add
mov
je
in
push
add
bound
jl
hlt
incb
mov
inc
add
add
add
insl
sbb
mov
out
xor
add
cmc
stos
and
add
push
add
adcl
mov
movsb
popf
stos
push
getsec
incb
call
into
dec
shlb
aam
mov
inc
mov
fnsave
add
stos
insl
mov
add
add
jl
repnz
cmp
or
mov
or
adc
cmpl
sti
xchg
or
test
in
sub
xor
xchg
mov
xchg
je
or
dec
add
stc
push
arpl
addr16
push
incl
mov
incb
out
xchg
xchg
xor
add
movsb
mov
add
add
incb
je
out
incb
xlat
lods
jbe
fsubrs
add
in
cmp
imul
dec
add
mov
mov
div
add
add
incb
cmpl
int3
call
daa
incb
adc
add
push
incb
insb
add
shrl
orb
inc
add
mov
add
jl
and
add
add
popa
divb
incl
push
lock
incb
out
std
addr16
xchg
sar
inc
add
outsl
data16
xchg
ljmp
dec
add
incb
pop
add
add
sbb
incb
inc
and
int
jo
mov
add
aaa
incb
into
das
incb
mov
add
insl
fimull
add
cmpb
cmpsb
or
in
and
add
add
cmpsb
cli
into
sbb
add
add
add
lock
sbb
incb
in
mov
add
inc
add
movsl
cmpsl
lahf
nop
sbb
stos
xchg
add
cmp
inc
jo
add
add
insl
or
jp
jp
imul
fisttpl
add
adc
add
sbb
add
add
add
mov
add
pushf
sub
add
sbb
incb
add
push
divb
pushf
inc
add
xchg
mov
jg
fucom
je
mov
add
mov
mov
in
mov
clc
add
incb
nop
pop
add
mov
pop
js
test
jl
cmp
add
sbb
loop
incb
nop
push
add
mov
add
add
add
xchg
ja
incb
ret
jmp
imul
add
jg
incb
lds
rorl
ljmp
incb
inc
ret
addb
add
add
incb
test
jbe
add
add
sbb
sub
add
add
xor
add
mov
fldt
add
incb
dec
add
call
incl
jecxz
cmp
inc
add
jmp
bound
cmp
pop
add
jno
add
fisubrl
add
out
pop
incb
add
add
add
incb
pop
add
dec
add
negl
xchg
add
sti
cmp
sub
roll
add
push
mov
xchg
add
test
mov
in
pop
sti
xor
add
incb
imul
iret
test
xor
add
add
xor
add
cmp
mov
rolb
incb
push
add
dec
add
incb
xchg
add
dec
add
mov
incb
or
add
adc
add
cld
mov
add
add
or
loope
add
incb
push
mov
mov
in
cltd
lods
mov
mov
stc
fmuls
add
inc
add
inc
lock
incb
push
add
jbe
sarl
ficompl
add
cli
xor
add
fst
sub
mov
xor
xchg
dec
data16
add
cmp
rcrb
xchg
add
add
mov
incb
sbb
outsb
add
sub
add
push
sahf
test
jp
test
ret
data16
cmp
or
mov
dec
add
jle
xor
add
incb
dec
mov
popf
dec
add
add
fucom
into
add
add
incl
pop
add
push
add
add
add
movsb
push
incb
push
add
and
add
incb
dec
dec
add
or
int3
xchg
xchg
lock
incb
jge
incb
push
add
test
out
mul
std
push
incb
add
add
incb
push
push
add
and
add
incb
movsb
mov
add
add
and
add
fidivl
movsb
xchg
sub
les
out
lret
sbb
push
incb
cmp
repz
add
add
push
call
sbb
mov
fwait
shlb
add
incb
stc
jle
xchg
and
add
xchg
xchg
cmpsb
loopne
das
mov
incb
add
lock
hlt
pop
add
bound
mov
add
sbb
incb
jecxz
pop
ret
int
rorl
add
incb
and
add
idivb
mov
add
andb
movsl
pusha
add
incl
les
add
incl
cltd
cmp
fisubl
add
cmp
mov
add
fcom
mov
incl
leave
mov
incb
outsb
add
add
mov
jp
dec
stc
popa
std
imul
int3
dec
add
call
incl
lahf
mov
lret
add
jge
add
rsqrtps
lods
xlat
mov
adc
add
stos
mov
mov
insl
and
add
mov
data16
and
add
sub
add
push
incb
aas
cld
and
add
call
mov
sbb
add
mov
add
mov
incb
js
jnp
add
push
add
scas
and
add
and
add
add
sbb
xchg
jo
inc
sub
pop
incb
ret
and
add
rcl
das
aas
cmpsb
push
add
add
add
call
add
iret
push
add
add
add
rdtsc
incb
and
add
xchg
adc
add
or
aaa
incl
popa
dec
push
pop
add
mov
incb
daa
incb
push
sbb
mov
add
push
add
mov
add
add
cli
sbb
xchg
out
add
add
in
ljmp
add
add
push
xlat
mov
lea
inc
dec
add
incb
rclb
add
call
add
sbb
cmpsl
stos
repnz
add
add
incb
mov
add
std
scas
push
inc
add
add
add
daa
incb
mov
cli
mov
incl
inc
add
xchg
sub
cltd
out
add
pop
incb
pushf
mov
cld
ljmp
stc
int
add
pop
jl
xchg
mov
add
xor
add
sub
mov
insb
add
shrb
int3
xchg
push
out
jp
incb
add
add
sbb
adc
add
imul
test
mov
add
addr16
sub
incb
daa
incb
jns
lcall
incb
stos
or
lea
mov
pusha
add
lods
mov
enter
incb
and
add
incl
dec
mov
sub
mov
mov
nop
pop
add
push
incl
jbe
cmp
lret
repnz
add
incb
cwtl
cmc
aam
jb
jl
pop
add
mov
sti
mov
mov
xchg
add
fadds
shlb
incl
mov
shll
add
add
incl
pop
add
incb
bound
stc
enter
jne
incl
cmp
or
movsl
xor
add
jl
ret
add
dec
mov
adc
add
add
dec
loope
lahf
dec
add
add
gs
cmpsb
push
incl
jnp
add
add
sbb
xchg
push
add
test
inc
sbb
icebp
inc
push
incl
push
add
incb
push
add
xor
add
sub
cmp
push
mov
subl
mov
cmp
cmp
mov
mov
arpl
jnp
add
inc
add
dec
jno
outsb
add
into
jae
pop
cltd
inc
push
ret
iret
push
xor
add
add
sub
incb
sbb
fwait
sub
dec
push
incb
call
je
jge
shr
jp
incb
jmp
pop
add
jo
sub
or
add
stos
sub
int
push
add
fsts
push
incb
dec
call
pop
mov
mov
lds
add
incb
cld
aas
movsl
dec
add
incb
rclb
add
push
pop
add
outsl
xchg
inc
push
add
add
incb
sbb
xor
add
sub
cld
cmpsl
cli
shr
mov
mov
outsb
add
incb
pop
fstps
lds
add
xchg
jb
call
add
add
incb
add
add
enter
daa
incl
or
add
cmpsl
test
push
sbbl
xchg
in
stos
mov
and
add
cwtl
jecxz
incb
push
add
ds
dec
add
rcll
iret
push
int3
mov
icebp
mov
out
incb
pop
adc
add
pop
add
dec
push
add
xor
add
arpl
test
add
inc
and
add
or
incb
and
add
add
hlt
aad
add
xchg
xor
add
incb
pop
add
pop
incb
pop
inc
stc
jmp
add
cltd
imul
push
incl
pop
int
add
sub
mov
add
add
aaa
incb
cmc
fwait
add
add
fwait
pop
cmp
add
push
incb
lds
add
lcall
add
incl
or
sub
mov
add
loope
xor
add
adc
add
add
dec
add
add
incb
cli
addb
cltd
dec
add
push
add
jmp
mov
add
add
add
pushf
gs
add
add
shrl
xlat
sahf
jl
out
insl
and
add
incb
or
fwait
cmp
xchg
or
add
incb
mov
incb
or
mov
push
mov
inc
ja
add
icebp
or
lcall
add
add
ret
push
jle
data16
pusha
add
incb
push
fwait
adc
add
add
xor
add
add
inc
add
incb
rcrb
and
inc
lret
dec
add
add
and
add
add
popa
inc
add
sbb
rcr
cmpsb
push
incb
pop
incl
lcall
add
add
mov
add
ds
arpl
lcall
popf
test
lods
adc
add
lock
add
add
cmp
dec
add
outsl
out
add
push
incb
inc
add
add
add
add
sbb
outsl
xor
add
or
imul
add
cmp
jb
nop
rorl
clc
push
add
sub
les
sub
add
add
jp
inc
lea
xor
add
mov
xchg
pop
add
add
incb
or
divb
inc
lea
jbe
clc
jge
movsb
fnstcw
push
jo
add
add
pop
add
sub
incl
xchg
cmp
fdivrl
mov
incb
xchg
mov
das
popf
lock
add
incb
outsb
add
test
loop
ret
mov
mov
incb
mov
add
sarb
sbb
inc
add
incb
jle
test
add
std
mov
or
das
cltd
imul
loopne
add
add
pop
add
incb
and
add
incb
pop
add
incl
jb
call
add
add
incb
sbb
dec
enter
sub
pop
incb
inc
add
cs
insb
add
dec
add
pop
inc
add
add
add
stc
dec
jnp
mov
mov
add
jle
inc
add
pop
out
mov
insl
pushf
jge
add
and
add
add
incb
adc
add
jnp
loope
and
add
aad
incb
insl
push
add
sbb
incl
test
outsb
add
sub
incb
fwait
add
aas
jbe
data16
movsb
cmp
jp
in
cwtl
pop
sub
cs
push
incl
mov
sub
cmp
cmc
mov
xchg
mov
add
sti
mov
push
add
inc
add
add
incb
lock
incb
xchg
mov
loope
and
add
push
add
adc
add
pop
sbb
dec
add
pop
scas
xor
sarl
incb
jp
scas
incb
incb
dec
add
add
and
add
incl
mov
cmp
adc
add
or
cmp
outsb
add
incb
ret
sub
testl
dec
add
outsl
mov
pop
incb
sarl
dec
sub
ja
add
mov
movsb
mov
cwtl
icebp
jo
pop
incl
mov
lods
inc
add
incb
test
int
aam
mov
add
loope
add
add
add
xchg
pop
and
jp
push
add
incl
mov
mov
xchg
incb
add
incl
icebp
sub
or
add
incb
jmp
incb
clc
ret
mov
add
xor
add
out
sbb
or
into
xlat
push
incb
or
pop
incb
out
bound
push
add
add
add
dec
add
inc
add
incb
jmp
addr16
add
fstl
mov
int
add
add
mov
incb
lcall
mov
call
pop
pop
jno
cmpsb
ja
lods
inc
add
xlat
dec
inc
xchg
add
add
incl
dec
add
sbb
cmovp
push
adc
add
iret
mov
mov
add
add
add
and
add
add
sub
sbb
pusha
add
in
mov
push
inc
add
incb
dec
jmp
sbb
lret
push
incb
insl
jae
add
bound
outsl
jns
testl
add
add
add
sbb
incl
lahf
push
add
add
incl
lret
add
das
incb
outsl
mov
pop
divb
sub
cmpb
movsl
scas
ds
dec
add
fwait
lahf
and
add
bound
pop
add
inc
add
add
mov
mov
add
incb
mov
lds
add
out
mov
incb
mov
scas
lea
jp
mov
mov
mov
inc
add
in
add
add
or
cld
push
incb
push
addr16
add
jecxz
mov
add
add
incl
cmpsb
pop
add
cld
sub
incb
std
enter
repnz
and
add
incl
mov
loop
fisttps
add
incb
xchg
pop
add
add
add
jns
je
cmpsl
fistpl
pop
in
mov
add
incb
adc
add
xchg
or
sti
or
cmp
incl
sar
mov
add
inc
add
jb
and
add
add
incb
mov
in
dec
mov
cs
loopne
mov
and
add
pop
add
sub
adc
add
sub
in
test
incl
jo
shl
or
test
jnp
jg
add
push
cmp
incb
push
add
incb
data16
add
fcmovnb
and
add
adc
add
and
xor
add
add
add
outsb
add
mov
repz
jo
push
add
xor
add
incb
cmpsl
dec
add
incb
xchg
movsb
mov
and
add
add
inc
hlt
outsb
add
incb
pushf
test
add
cmp
add
push
add
cli
cmc
rcl
add
add
sub
fwait
jne
test
lea
or
add
pop
add
add
mov
add
incb
daa
incb
lods
test
and
add
incb
test
add
incb
mov
add
mov
cmp
in
jecxz
lcall
incb
out
sub
imulb
cmp
jmp
add
xchg
lds
add
adc
add
cmp
jmp
ljmp
push
cltd
scas
mov
frstor
test
mov
xor
add
sub
xchg
and
add
jle
in
jle
push
incb
xchg
incb
mov
add
add
add
or
lret
sbb
incl
pusha
add
cld
gs
jb
dec
pop
incb
ret
jg
mov
mov
add
add
add
lret
imul
sahf
xchg
jecxz
in
mov
jo
or
addr16
push
mov
fwait
mov
mov
std
push
sarl
add
popa
mov
add
pop
add
mov
add
sbb
push
add
sti
push
add
mov
add
ja
cmc
adc
add
fs
and
add
idivb
fbstp
add
mov
popf
loop
add
insl
lods
xor
add
lea
test
add
shl
and
add
add
add
fstl
and
push
imul
pop
mov
dec
add
xlat
lret
mov
incl
pop
cmpsb
shlb
in
add
add
and
incb
incb
mov
add
or
movsl
add
add
add
pop
push
add
add
add
in
xor
mov
or
mov
jns
insb
add
add
add
xchg
mov
xchg
pushf
adc
mov
clc
jle
incb
mov
into
inc
pop
and
add
incb
cmp
or
mov
lret
fidivs
add
incl
xor
add
push
add
mov
incl
pop
incl
add
pop
incb
or
call
dec
mov
enter
and
add
ds
sub
add
pop
incb
cltd
cmp
add
fs
pop
outsl
xor
add
incb
mov
ret
sahf
test
push
add
inc
add
pop
add
fistps
repnz
add
sub
adc
add
dec
cmp
or
add
add
adc
add
add
incb
rcr
add
mov
add
jmp
inc
cmp
jl
ret
sbb
fidivrs
jo
test
incb
mov
fistl
add
std
stos
push
incl
mov
filds
test
push
add
inc
sbb
push
add
incb
pop
add
add
aam
push
add
push
add
or
add
xchg
jno
mov
ret
call
scas
dec
add
mov
adc
add
incl
xor
add
mov
fsubl
add
incb
popa
mov
cmp
out
je
adc
xchg
add
add
sub
add
dec
imul
add
and
jbe
lahf
jno
sbb
inc
add
incb
jl
frstor
fidivl
mov
adcl
xchg
cmpsl
lea
push
add
movsl
inc
aad
push
add
incb
xlat
outsl
mov
std
aas
les
add
mov
movsl
and
add
inc
add
cmpsb
push
add
pushf
hlt
imul
cmpl
popf
push
push
add
add
mov
loop
or
daa
incl
add
test
incb
adc
add
jbe
sbb
fcompl
or
or
add
add
add
incb
sbb
push
add
sbb
jne
sar
in
sub
xchg
incb
ficoms
lods
push
add
incb
mov
mov
add
incb
fwait
lea
mov
enter
dec
push
mov
loopne
jo
dec
scas
cmp
sbb
dec
add
add
mov
inc
imulb
jmp
adc
add
or
lds
incb
cltd
in
and
add
incb
mov
shl
jge
push
add
add
incb
inc
add
incl
inc
out
jle
rcl
scas
testl
add
arpl
add
add
incl
dec
add
movsl
aam
or
push
in
in
test
jmp
xchg
pop
imul
add
inc
sub
in
push
add
cmp
xor
add
incb
test
mov
add
add
jmp
pop
add
incb
jg
repnz
mov
cltd
sub
add
js
jmp
push
ret
incb
sbb
xchg
push
leave
add
add
adcb
or
jle
scas
mov
mov
and
add
add
jnp
cwtl
mov
add
incb
sarb
in
xchg
orb
arpl
loop
incl
jp
jae
add
cmp
insb
add
add
add
rolb
incl
ja
jo
sbb
mov
add
pop
scas
add
cwtl
daa
incb
iret
pop
incl
enter
pop
out
les
add
mov
add
cmc
jno
push
incl
dec
sarl
adc
add
je
adc
add
fwait
mov
movsl
dec
in
add
add
jmp
add
incb
outsb
add
mov
loope
incb
pushl
insb
add
add
stos
or
incb
sbb
in
shl
cmpsl
xchg
adc
add
fcmove
mov
incl
roll
sub
dec
add
add
add
push
jp
inc
add
clc
jg
std
neg
jp
cmp
or
add
shl
add
lock
add
sti
into
or
cmp
lcall
lock
into
cmp
incb
inc
add
dec
add
jb
lods
and
add
repnz
incb
and
add
fbld
incb
popa
and
add
add
add
jbe
lahf
les
add
std
ret
mov
jne
ja
fwait
std
jb
incb
mov
cld
jne
add
test
jnp
add
movsl
pop
incl
mov
push
add
add
pop
shlb
incb
push
add
in
incl
in
data16
add
pop
incb
mov
mov
add
xor
add
incb
fnstcw
shll
xlat
mov
add
incb
jns
add
or
test
sub
and
add
incb
int3
data16
jne
in
pop
add
shl
lea
push
lret
jp
mov
mov
aaa
incb
lods
dec
add
xchg
add
dec
jo
out
add
enter
loope
setnp
shlb
incb
inc
or
lret
mov
cmpsb
cmp
incb
cli
fld
sbb
adc
add
pop
sub
incl
adc
add
add
add
xchg
mov
int
incb
sbb
hlt
mov
mov
xor
add
repnz
arpl
cmp
dec
dec
add
fdivl
jns
incb
xor
add
cmpsb
inc
add
add
inc
add
test
add
incb
xlat
arpl
push
add
mov
and
add
cltd
and
add
int
mov
stos
mov
out
pop
leave
aad
add
add
leave
xlat
out
orl
incb
sahf
cmpsl
nop
js
sub
mov
js
inc
repnz
incb
fwait
push
incb
xor
add
add
call
and
add
iret
adc
add
push
add
mov
and
add
xor
add
xchg
fidivs
incb
cmp
inc
add
sub
dec
add
fwait
imul
incb
sahf
repnz
jno
pop
incb
outsb
add
incb
jae
test
add
cltd
scas
mov
pop
add
add
sbb
lcall
fwait
lock
xchg
incb
scas
cld
dec
add
xor
add
add
rol
in
nop
and
sbb
sti
scas
sarb
call
daa
incb
and
add
adc
add
sub
loope
add
sub
hlt
int
add
jbe
cltd
jns
loopne
sbb
ret
add
add
or
adc
add
incb
pop
cli
jns
add
mov
dec
rorl
mov
add
add
lcall
jno
mov
incb
mov
stos
test
pop
add
and
add
add
add
int
incb
mov
add
rorb
adc
add
out
or
jno
outsl
lahf
jbe
push
mov
sub
ret
xchg
pop
and
in
sti
or
jmp
incl
lret
in
pusha
add
ret
dec
int3
and
mov
jb
push
fidivrs
add
add
sbb
and
add
and
add
dec
lds
incb
adc
add
incl
jo
roll
add
sbb
xorl
add
lret
das
push
add
add
add
mov
test
add
ja
push
jge
out
sbb
adc
add
addr16
aad
mov
jo
in
add
incb
lcall
stc
insb
add
and
add
add
incb
ret
test
and
jnp
xor
add
incl
jne
mov
test
add
test
push
and
add
jmp
inc
add
imul
test
incl
jb
pop
incb
ret
add
incl
xchg
xchg
add
jle
shr
out
add
dec
cmp
mov
cmpsl
movsb
imul
mov
and
add
sbb
add
xor
mov
out
fiaddl
mov
sbb
negl
jno
sbb
xor
add
add
in
insl
mov
icebp
rcr
adc
add
add
cmp
add
out
mov
jmp
pop
inc
sub
mov
sbb
popa
js
and
add
iret
int3
lock
fistps
xchg
xor
add
scas
je
sbb
add
add
add
incb
ficoml
incb
icebp
mov
fcoml
add
fdivrp
test
dec
inc
mov
xor
incb
bound
js
cli
sub
add
addb
add
add
jbe
mov
cmovae
add
pop
push
add
pop
add
jae
xchg
fs
stos
loop
add
inc
add
lods
cli
mov
incb
cli
stos
lods
jg
lret
leave
add
incl
push
add
repnz
and
add
rcrb
jle
push
incb
jns
jl
mov
add
ret
scas
int
dec
xor
add
popf
mov
push
add
enter
shl
jmp
adc
add
add
mov
incb
dec
add
mov
and
repz
add
incb
cmp
out
js
mov
mov
add
add
fsubs
adc
add
add
lahf
push
add
das
push
fldt
add
add
ror
and
xchg
lcall
pushf
or
jg
jbe
xor
add
incb
xchg
cmp
dec
mov
add
aam
push
rorb
add
mov
dec
add
add
pusha
add
dec
sub
incb
inc
dec
out
add
ljmp
add
push
add
add
cld
out
rcrl
jnp
in
incb
jne
outsb
add
cltd
fistl
incb
lods
mov
jbe
cmp
add
add
add
adc
add
leave
clc
lahf
push
add
add
add
jecxz
incb
mov
je
cmp
xchg
out
or
jp
out
addr16
add
xor
add
inc
add
mov
scas
lahf
jbe
pop
add
incl
cmpb
cmp
add
inc
add
sbb
xchg
push
jg
bound
popa
and
add
repnz
ljmp
mov
jg
cmp
adc
add
incb
mov
jecxz
mov
cli
ja
incl
fadds
add
add
mov
incb
pop
add
vmwrite
incb
add
add
lcall
adc
shrb
add
in
popf
scas
add
add
xchg
xchg
mov
mov
incb
rcr
lds
add
add
enter
jg
sub
push
incb
imul
add
incb
aam
add
ret
scas
pop
dec
cmc
xchg
mov
ljmp
incl
and
add
or
nop
out
int
xor
add
add
incl
mov
or
xchg
xchg
mov
add
leave
testb
dec
add
incl
movsl
nop
sti
sub
incb
sbb
lds
lret
testl
and
das
and
incb
insb
add
sub
nop
adc
add
adc
add
fstps
je
add
add
incb
rcrl
adc
add
insb
add
out
push
and
add
fnstcw
sbb
mull
add
xchg
shrb
out
mov
out
mov
aaa
incl
add
add
repnz
xor
add
dec
add
mov
data16
sbb
incl
pop
add
pop
incb
test
push
add
add
add
add
incl
out
add
incb
pop
incb
jb
cli
cmpsl
push
incl
sub
dec
mov
lahf
or
imul
add
incb
jbe
clc
adc
add
sbb
bound
push
stc
mov
cmp
push
jbe
cmp
mov
add
and
add
or
sbb
fwait
insb
add
mov
push
add
adc
add
pop
incl
mov
iret
shll
int
orb
mov
sbb
dec
cmp
adc
shll
add
cmp
incb
pop
sub
shrl
sbb
add
add
or
fcom
leave
mov
pushf
nop
movsb
mov
in
add
mov
fwait
xchg
outsb
add
rcr
incb
adc
add
add
incl
xchg
loop
lcall
repz
fldt
xrelease
incl
data16
cld
pushf
jb
mov
add
out
mov
pushf
xor
add
pop
add
fldenv
leave
jge
add
add
das
arpl
mov
incl
imul
scas
add
add
loopne
add
cld
pop
incb
jnp
incb
jnp
ret
les
pop
add
incl
inc
xor
add
incb
pop
pop
pop
add
xor
add
out
dec
adcl
lock
add
add
test
ror
inc
add
stc
in
add
add
add
insl
adc
add
push
add
add
add
repnz
add
mov
shll
add
add
incb
sahf
or
incb
rclb
incb
cmp
jl
mov
out
outsl
dec
add
pusha
add
add
mov
imul
dec
add
pop
rol
sbb
add
sbb
mov
incb
shrl
add
add
add
add
add
push
incb
stos
xchg
mulb
pop
incb
xchg
sub
inc
jle
cmp
sbb
adcb
inc
add
in
pop
add
add
add
outsb
add
sub
add
loop
lret
inc
pop
add
arpl
sbb
dec
scas
jg
fdivrl
movsb
inc
add
incl
sbb
sbb
andl
div
aaa
incb
push
cmc
jno
add
add
incb
call
dec
lds
sub
cwtl
ficoms
addr16
in
pop
int
shlb
push
add
out
add
push
js
cli
xchg
shll
push
add
ja
incb
test
incl
data16
push
and
push
incl
cmpsl
inc
repnz
mov
jns
jo
jb
insl
cmpsl
and
lret
pusha
add
fwait
in
mull
incb
icebp
sub
into
cmp
dec
lock
incb
popf
lds
dec
add
add
sbb
data16
pop
incb
jmp
add
cli
dec
add
add
add
mov
pusha
add
push
add
dec
fbld
cmp
xor
add
ja
push
jmp
lahf
add
add
push
stos
enter
cmp
mov
add
add
add
mov
pop
fisttpl
add
add
pop
pop
push
add
jbe
dec
or
mov
jns
in
push
loope
das
fistl
clc
pusha
add
adc
add
add
shll
incb
push
push
add
incb
std
std
or
rorl
jge
add
push
cmpsb
int3
outsb
add
adc
add
pop
mov
add
in
mov
les
adc
add
add
or
lahf
add
cli
push
cmp
incb
data16
add
add
sub
aad
pop
add
add
incb
or
add
popa
les
xor
add
push
add
lods
ret
add
sub
or
add
add
add
in
pop
incb
pushf
movsl
sbbb
incb
xor
or
add
incb
lds
nop
ret
daa
incb
jns
add
add
pop
sub
push
add
push
incb
flds
mov
xchg
mov
out
stos
addr16
add
adc
ljmp
test
cwtl
out
sub
incb
jns
add
xchg
aas
rolb
add
push
add
incl
push
jbe
or
add
incb
sub
ds
stos
adc
sub
flds
icebp
mov
xor
add
lods
je
pusha
add
xchg
or
arpl
add
lret
sub
vpsrlw
pop
fsts
pop
or
mov
adc
add
add
dec
add
andl
or
push
dec
add
fidivs
cmpsl
rorb
and
add
or
inc
add
push
cmc
jb
jnp
add
hlt
lock
pop
jle
test
aas
sub
inc
add
jge
dec
add
jge
negl
xor
repnz
out
sub
arpl
popl
incb
push
incl
insl
push
incb
sub
jmp
incb
pop
incb
and
add
cmp
incb
iret
or
fnsave
sub
outsb
add
mov
fdivp
jg
js
xor
add
add
jg
and
ljmp
movb
incl
cmp
push
add
cmp
shll
sbb
int3
dec
add
out
mov
add
incb
pushf
rorl
adc
add
leave
in
cmp
add
or
mov
add
add
lods
and
add
inc
jbe
nop
cmp
push
add
incb
sbb
mov
add
incb
pusha
add
jbe
add
add
pop
sbb
add
je
incl
or
incb
mov
inc
mov
push
add
add
add
aam
ljmp
mov
add
add
incl
pop
fnsave
popf
mov
add
incb
cli
pop
add
mov
icebp
xchg
imul
int3
gs
add
mov
incb
or
aaa
incb
push
jle
jbe
ljmp
add
movsl
jnp
incb
je
lcall
xor
add
in
aad
shll
incl
mov
stc
xor
add
add
lods
sbbl
add
xchg
pop
add
inc
inc
punpcklwd
cli
paddsb
xor
add
jl
cmpsb
in
hlt
inc
add
inc
add
pusha
add
add
incb
mov
iret
mov
lods
repz
sbb
loop
out
mov
add
incb
nop
cmpsb
adc
add
int3
mov
incb
adc
add
fstp
pop
add
pop
add
outsl
xchg
sbb
add
push
add
jnp
incb
jne
adc
add
incb
mov
add
add
add
add
add
add
lahf
mov
incb
jnp
incb
shlb
incl
mov
call
cmp
add
daa
incb
in
aad
shl
faddl
cli
mov
insb
add
add
ror
inc
mov
mov
fstl
pop
xor
add
add
incl
aaa
incb
stos
xchg
jmp
notl
incb
das
and
add
incb
mov
incb
sbb
and
into
xchg
or
incl
cmp
movsl
inc
xchg
xchg
lds
andl
cmc
xchg
lock
incb
sub
incb
fs
sarl
dec
add
in
add
ljmp
dec
pop
aas
xchg
push
add
lock
push
add
incl
cmp
cmpsb
mov
cwtl
shr
scas
imul
incb
and
add
push
add
call
adc
add
stos
rcr
fldt
aad
jg
add
add
add
add
incb
cmp
add
or
pop
lods
bound
addl
add
out
push
incb
push
aam
cli
cmp
enter
psubb
incl
pop
add
lea
add
incl
inc
add
add
sub
lds
pop
incl
push
mov
adc
add
mov
aad
jge
mov
mov
cmc
bound
push
pushf
adc
add
adc
add
incb
inc
inc
ljmp
add
add
add
mov
push
incb
lock
inc
outsb
add
add
mov
dec
sub
push
incb
dec
repz
incb
shll
add
out
scas
sbb
jl
stc
imul
xor
add
incb
xor
add
add
jecxz
add
add
jae
add
incb
add
add
popa
int3
sahf
in
xorb
out
add
xor
add
pop
add
add
repnz
andb
add
jmp
pop
add
ja
incb
mov
lret
mov
jns
pushf
call
outsl
jle
aaa
incl
sbb
mov
jbe
xor
add
jle
jle
mov
xchg
loop
mov
inc
add
xadd
cmp
loope
mov
add
test
incl
cli
xlat
mov
jp
scas
inc
jecxz
inc
shrb
incb
out
outsb
add
incl
and
add
add
lret
mov
fistps
mov
lahf
repz
test
mov
push
jge
rcrl
incb
lret
or
add
pop
mov
call
add
frstor
add
incb
je
ja
jg
add
incb
ljmp
add
incl
pop
add
bound
sub
in
add
mov
xchg
add
sub
jbe
inc
add
add
add
insl
or
add
push
jne
test
addl
dec
add
incb
mov
mov
leave
mov
add
loopne
add
push
add
incb
and
mov
add
icebp
bound
rorl
mov
sbb
mov
incb
loopne
bound
imul
imulb
mov
push
incb
pop
incb
sbb
add
add
add
xchg
cmp
dec
add
fnstsw
push
add
sbb
incl
mov
incb
inc
add
incl
stc
movsb
cmc
test
cmp
incb
sti
stos
dec
add
add
inc
add
add
incb
mov
or
add
incl
incb
ja
and
add
xchg
push
add
jae
add
add
add
add
pop
add
push
add
add
dec
add
push
incl
mov
shl
dec
add
roll
incb
out
incl
pop
add
cltd
cwtl
cmp
add
add
js
cmpsb
pop
add
in
cli
in
stos
sbb
incb
js
xchg
xchg
lock
mov
jecxz
movsl
leave
std
push
movsl
clc
scas
xchg
mov
outsl
stos
fdivs
dec
jle
pop
xor
add
add
loopne
outsb
add
add
jecxz
add
in
inc
jno
dec
ljmp
xor
add
shll
add
add
mov
outsb
add
add
dec
add
add
mov
incb
dec
push
add
insl
pop
add
add
add
inc
add
divl
push
add
sbb
repnz
pop
add
xor
add
push
add
pop
xor
add
hlt
xlat
add
add
add
jmp
or
fildl
incb
xchg
xor
add
add
pop
lret
push
incb
push
ret
mov
mov
inc
add
or
cltd
cmc
lahf
cmpsl
repz
ljmp
nop
mov
incb
mov
xor
add
add
dec
add
add
xchg
icebp
ret
out
into
jne
out
sbb
mov
ja
xchg
cmp
add
add
add
mov
xchg
push
add
push
ret
cmp
or
add
add
mov
ljmp
xlat
test
into
subl
add
lret
incl
push
pop
sbb
xor
add
dec
add
incb
inc
add
pop
incb
mov
add
test
mov
arpl
add
leave
pop
subb
xchg
incb
xchg
cmp
cltd
movsb
jl
fldenv
incb
scas
mov
push
add
sahf
cmp
cld
les
daa
incb
cmp
add
add
int3
mov
testb
add
add
incb
dec
add
add
incb
and
test
add
inc
scas
in
incb
mov
add
incb
and
add
mov
xor
add
ret
jb
mov
incb
jle
xor
add
add
cmp
xor
add
add
bound
stos
xor
add
incb
fwait
push
inc
ret
incb
repnz
incb
mov
stos
cmp
add
add
enter
mov
incb
andb
enter
mov
xor
add
add
jo
bound
xchg
js
xchg
out
inc
mov
mov
add
mov
add
hlt
mov
inc
add
orl
xlat
cmp
cwtl
sub
stc
mov
add
fadd
rclb
or
pop
imul
jne
in
enter
out
mov
popf
or
dec
int
add
add
bound
sbb
in
pop
inc
add
addb
mov
pop
popf
add
add
and
add
incb
fistps
add
imul
jne
pop
add
add
insl
hlt
scas
inc
add
mov
add
int
push
add
out
or
push
sar
pop
fincstp
in
fcmove
xchg
jb
das
scas
mov
add
sbb
incl
jno
sub
add
add
mov
incb
fistpll
test
lahf
xchg
test
add
add
testl
jge
mov
adc
add
xorb
nop
incb
and
add
inc
add
xchg
push
gs
add
cmp
inc
add
ret
inc
incb
fmuls
adc
add
xor
add
or
add
lret
pop
xchg
int
incb
lea
incb
sti
and
add
stos
pop
add
incb
lods
jg
add
add
incb
sbb
xor
add
ljmp
mov
push
icebp
loop
xchg
loopne
add
add
incb
ja
jge
add
add
add
add
add
add
mov
add
incb
jne
insl
mov
cmp
add
add
scas
mov
popf
xor
add
add
add
nop
sub
xor
add
sti
cmp
push
add
or
add
dec
add
insl
call
loope
incb
mov
incb
pop
pop
incb
movsl
pop
add
andb
add
sti
dec
add
jmp
shrl
mov
fldcw
incb
into
mov
add
add
scas
test
inc
loope
mov
add
add
repz
add
add
arpl
add
fcom
hlt
enter
add
incb
jne
fisubs
popf
popf
pushf
addr16
xor
add
ljmp
mov
sbb
incb
fstpl
add
add
push
push
add
sbb
mov
jnp
int3
xchg
sbb
cli
scas
jmp
lcall
std
or
adc
movsb
sub
jbe
push
add
lcall
push
add
add
incb
incb
mov
xchg
add
incb
mov
add
add
insl
and
add
arpl
add
cmp
add
add
pop
incb
jb
cli
xchg
add
add
incb
add
add
mov
or
mov
adc
add
add
leave
data16
add
and
add
into
rclb
insb
add
xor
add
movsb
movb
stos
cmp
bound
outsl
xchg
xchg
xor
add
jmp
incb
add
popf
lea
add
sub
incb
jl
loopne
push
incb
fwait
mov
popa
scas
cwtl
sti
pop
add
incb
jb
inc
out
shll
add
gs
pop
addr16
add
notl
add
incb
sub
enter
inc
add
add
add
jno
out
sbb
test
scas
add
and
add
incb
push
divl
add
incb
lods
and
add
fwait
xchg
loopne
add
incl
push
pop
incb
push
add
jnp
pop
js
jmp
mov
add
and
add
adc
add
or
mov
iret
cmp
enter
push
les
push
add
repz
scas
xchg
push
mov
jg
sub
xlat
lcall
das
adc
add
repz
add
fistpll
outsb
add
aad
ret
add
push
incb
adcb
int3
mov
push
mov
mov
cmp
incb
push
incb
xlat
loopne
incb
dec
add
fsubrl
pop
add
repnz
push
incb
stos
pop
add
mov
cltd
xchg
cltd
xor
add
mov
pop
push
add
inc
int
add
push
incb
mov
xlat
pop
mov
loope
imul
popa
bound
popa
cltd
dec
out
loop
incb
or
inc
push
js
test
jecxz
outsl
out
jg
add
mov
add
add
lcall
add
lret
mov
imul
jmp
incb
adc
add
add
incb
clc
ja
inc
add
push
add
inc
add
incb
cli
jmp
add
mov
out
call
add
add
incb
rcll
incb
incb
add
jl
out
scas
in
incb
jno
incb
cli
incb
les
sbb
mov
incb
xlat
cmc
or
jbe
xchg
fstl
sbb
incb
mov
dec
add
inc
add
pop
jecxz
xchg
add
adc
add
sbb
arpl
shll
lds
jbe
loopne
fdivr
loop
add
je
sub
test
jecxz
push
adc
add
add
sti
or
jecxz
xor
add
and
incb
adcb
add
imul
insb
add
cmc
inc
roll
add
je
add
ljmp
jge
dec
push
add
incb
das
jb
loop
imul
add
push
cmp
sub
lods
lods
inc
cmpsb
in
sbb
mov
incb
stc
sahf
insb
add
incb
pusha
add
js
fistl
push
mov
add
add
aas
cmp
out
xchg
inc
xor
cwtl
bound
mov
xchg
sar
cmp
ja
fstl
add
incl
fistl
daa
incb
push
add
incb
push
aad
and
add
mov
mov
xchg
or
ror
mov
dec
mov
mov
push
jnp
add
add
add
scas
jne
les
incb
mov
and
add
outsl
clc
mov
pop
xchg
fldenv
leave
pop
out
adc
add
je
jp
rorl
add
sbb
xchg
inc
clc
iret
adc
add
xchg
imul
incb
hlt
stc
add
add
add
add
add
dec
add
aam
jo
inc
arpl
mov
add
add
sub
push
add
mov
push
and
add
adc
int3
rcrl
add
inc
out
fisubl
incl
dec
add
fcompl
add
push
add
in
fsubr
mov
or
xchg
or
adc
add
scas
lods
jp
cmp
incb
xor
add
push
incl
add
incb
mov
add
add
gs
add
rep
add
test
add
add
push
add
and
adc
xchg
pop
jp
mov
adc
add
incl
push
add
or
incl
call
fdivrs
mov
pop
incb
mov
mov
and
add
incb
data16
inc
add
or
lods
lds
in
jl
lahf
scas
iret
dec
add
cltd
jecxz
incb
scas
jb
fistps
inc
add
dec
add
incb
xchg
pusha
add
pop
add
adcl
add
add
incb
mov
jno
mov
add
incb
iret
lock
arpl
push
add
jmp
incb
jae
and
add
incb
or
jnp
dec
add
incb
jp
or
ljmp
lea
rclb
pop
dec
add
ret
inc
inc
add
aad
fstps
xchg
ja
lock
inc
add
push
add
add
add
out
shl
pop
incb
and
add
scas
add
xchg
mov
incl
push
mov
add
or
sbb
jno
ficoms
add
test
pop
mov
jae
incb
into
mov
jno
ret
xor
add
lcall
mov
incb
sarl
incl
dec
mov
incb
sbb
je
xor
add
sub
enter
incb
mov
add
inc
add
cmpsl
movsb
xor
add
sbb
fstl
incb
nop
sbb
hlt
mov
dec
sbb
jne
cmpsb
xchg
lcall
das
jnp
out
loope
incb
aas
into
dec
add
add
and
add
incl
ret
test
cltd
dec
mov
and
add
add
cmp
mov
add
adc
add
push
add
incb
xor
add
stos
push
add
mov
out
scas
lret
sbb
repz
add
arpl
or
outsb
add
push
add
cmp
fldt
and
add
adc
add
incb
mov
cmp
mov
dec
add
sbbb
jp
insb
add
add
mov
incb
outsb
add
orl
mov
add
mov
inc
push
clc
add
add
incb
mov
sbb
lods
pop
add
add
add
sbb
jle
xor
add
imul
add
add
add
incb
sahf
or
ret
cmp
cmp
fistpl
bound
sub
add
add
je
cmp
push
add
les
incb
aam
notb
add
push
add
jb
add
add
add
or
rol
inc
add
mov
add
dec
cltd
inc
add
imul
add
stos
or
push
incl
out
sahf
and
add
sbb
test
dec
add
outsl
insb
add
cmc
ds
lods
dec
mov
roll
incb
movsb
and
add
mov
add
incb
xchg
addl
add
dec
add
incb
sysexit
incb
pop
add
pop
add
inc
add
cwtl
cmp
gs
sub
add
xchg
test
inc
dec
jbe
mov
add
mov
mov
xchg
dec
add
incb
mov
idivb
jnp
mov
add
cmp
pushf
add
incb
dec
add
pop
pusha
add
or
add
incb
stos
dec
add
mov
ret
add
jl
inc
sub
dec
add
incb
shll
or
ds
cwtl
jno
cltd
cwtl
mov
mov
hlt
or
and
add
dec
add
add
push
add
leave
mov
add
jmp
incb
xor
add
incl
or
stc
in
fistpll
xor
add
inc
adc
add
add
sbb
or
or
mov
incb
das
out
dec
cmp
sbb
js
pushl
cmp
std
jg
mov
push
movsb
arpl
jae
in
jmp
std
and
add
js
cmp
mov
adc
shrb
das
jl
lock
shll
incb
ljmp
add
cli
push
sbb
in
dec
add
xchg
add
jge
add
mov
fwait
cmpsl
incb
out
adcl
loopne
incb
xchg
leave
hlt
sbb
dec
pop
cmp
out
cmp
jle
adc
add
pop
add
out
add
add
incl
insb
add
repnz
pushl
xor
add
pop
sub
shl
shlb
movsl
into
shll
dec
add
cli
fstpl
pusha
add
or
sti
call
nop
xor
add
add
add
jb
out
xchg
add
incl
sub
jecxz
inc
add
je
xchg
sub
add
cmp
sti
sbb
clc
add
add
add
push
add
lea
mov
nop
fildll
pop
add
incb
insl
leave
and
add
lock
add
pop
add
add
add
sbb
xor
add
icebp
dec
add
push
sbb
add
cld
arpl
add
incl
pop
fnsave
incb
xor
add
add
fidivs
add
scas
pusha
add
add
aam
repnz
inc
add
add
add
fildll
mov
rclb
fisubl
add
incb
pop
add
std
cli
fsub
mov
jbe
sbb
incb
push
incb
xchg
loop
add
add
add
add
incl
jmp
push
incb
cltd
aad
dec
add
lret
xchg
jns
mov
mov
and
add
xor
add
inc
dec
add
add
jnp
add
incb
scas
cli
jns
add
sub
incl
bound
xchg
pop
incb
mov
rorl
add
scas
adc
add
add
add
mov
add
incb
mov
add
and
add
incb
inc
data16
add
and
add
add
fwait
mov
pop
incb
cld
ret
out
xor
add
push
lcall
mov
add
xchg
jo
das
adc
add
incb
push
add
cmpsb
outsl
stos
push
add
fwait
lahf
inc
add
add
jp
fsubr
inc
rcrb
add
jbe
push
adc
add
add
mov
incb
xchg
sub
std
push
pop
add
lret
mov
add
jl
cmp
lret
loop
clc
fidivl
out
add
jle
and
add
pop
add
incb
dec
fildl
add
in
incb
fucom
stos
in
or
jl
ljmp
inc
add
add
repz
cmp
stos
bnd
aam
jno
push
incb
pop
add
dec
jo
jnp
or
data16
add
rorl
add
incl
jns
jno
jle
dec
add
out
and
add
jne
xchg
daa
incl
adc
add
push
incb
and
add
adc
xor
add
mov
fwait
push
into
pop
dec
cmc
cmpsl
add
add
imul
mov
incb
push
add
add
mov
add
jns
jo
and
add
test
or
add
cmp
shl
xor
add
push
add
xchg
or
add
test
adc
add
ljmp
sbb
leave
sub
xchg
incl
shll
cmp
incl
mov
add
sbb
aaa
incl
outsb
add
adc
add
incb
and
add
add
incb
dec
and
add
incl
push
add
out
sti
clc
xor
add
add
incl
loopne
incb
cmpsl
das
rorb
mov
adc
add
imul
xlat
je
sbb
add
incb
bound
addr16
incb
dec
add
incl
mov
dec
add
lea
scas
gs
and
add
add
leave
sub
mov
lret
in
shrl
add
aad
jae
fwait
cli
lods
inc
movsb
insl
mov
in
jle
mov
add
add
add
inc
add
ljmp
push
add
sbb
xor
add
add
add
fldenv
add
das
xchg
in
imul
add
arpl
add
out
add
sbb
ret
test
xor
add
incb
sbb
inc
pop
add
pop
dec
add
push
add
incb
ret
adc
add
incb
xor
add
push
add
incl
rol
into
je
mov
insl
cmp
incl
inc
add
jb
test
dec
add
sbb
adc
add
pop
incb
sub
inc
add
incb
mov
mov
add
add
add
call
add
add
inc
scas
cmc
sub
add
jp
xchg
and
add
incb
incb
imulb
popf
sbb
sbb
incb
mov
add
mov
addr16
xor
add
shll
add
sub
add
stos
xor
call
add
pop
add
leave
jl
in
add
push
add
xchg
cltd
fwait
xor
add
add
filds
incb
add
incb
insl
idivb
jge
inc
test
mov
add
les
incb
scas
out
mov
and
pop
add
das
add
imul
add
inc
add
sub
push
lds
add
mov
and
add
scas
jnp
cmp
clc
or
add
mov
add
fsubp
mov
mov
std
fisubrs
xchg
arpl
add
in
add
jecxz
jmp
out
or
push
add
dec
add
adc
add
adc
xchg
add
add
incl
inc
pop
add
push
add
add
orb
loopne
bound
int3
xor
add
notl
cmc
xor
add
incb
fcmovne
idiv
push
dec
add
incl
inc
js
or
insl
dec
add
xchg
mul
sbb
push
incb
or
scas
cmpsb
mov
add
pop
add
push
add
incl
jbe
mov
enter
incl
incb
add
add
aam
xchg
dec
add
daa
incl
out
incb
inc
and
add
incb
insl
pop
incb
aas
push
je
in
add
enter
and
add
cs
stos
nop
jg
mov
adcb
add
adc
and
add
loope
incb
push
aam
dec
add
add
mov
add
add
das
jg
imul
sar
jns
movsl
dec
add
or
icebp
xor
add
add
incb
jns
add
scas
mov
cmp
cwtl
mov
incl
jl
popf
das
jecxz
incb
sub
orl
add
and
add
repz
cmpsl
mov
add
loope
add
add
dec
jl
js
cmp
pop
int3
xor
add
add
add
and
add
xchg
jle
jl
jp
bound
cltd
std
xor
add
add
pop
aaa
incb
lds
inc
jmp
cmp
mov
add
cli
int3
and
add
incb
out
and
add
push
mov
or
sub
shll
add
add
add
fcmovu
mov
loopne
mov
xor
add
scas
roll
add
pop
add
xor
add
mov
add
add
add
and
add
jo
push
add
inc
add
push
add
incl
cwtl
daa
incl
pushf
mov
add
add
add
fnstsw
add
add
dec
add
and
add
aaa
incl
aaa
incl
dec
add
add
or
mov
add
add
mov
xlat
push
add
cmp
data16
inc
leave
sub
sub
push
incb
hlt
or
cwtl
sub
cmc
and
add
in
pop
outsl
and
dec
add
sahf
addb
add
incb
dec
add
incb
fwait
movsb
mov
or
pop
incb
sub
pusha
add
add
add
add
in
add
add
mov
incb
lahf
lock
push
add
incb
scas
outsb
add
mov
aaa
incb
dec
add
stos
mov
pop
add
incb
jle
and
add
xor
add
or
xchg
adc
add
sub
add
add
fbstp
add
mov
add
into
incb
xor
add
adc
add
pop
xchg
xchg
or
incb
pop
test
test
incl
jne
jbe
xor
add
inc
add
xchg
fwait
movsb
mov
dec
add
clc
cmp
not
aad
out
dec
add
incb
dec
cltd
xchg
rclb
incb
aad
add
sub
add
incl
mov
push
incb
enter
sbb
or
pop
add
mov
pop
mov
xchg
sbb
divl
iret
jno
push
add
incl
pop
or
jnp
mov
push
dec
mov
incb
adc
add
xchg
or
add
xchg
out
incl
cmp
add
incl
xchg
rorb
add
hlt
adcl
add
sbb
mov
add
incb
or
ljmp
mov
shrl
incl
fsubl
jge
jns
add
add
and
add
add
lahf
pop
dec
mov
add
push
add
add
fisubs
incb
out
adc
add
sbb
mov
add
incb
leave
pop
and
add
lret
sub
xor
add
add
and
addr16
cmp
add
testb
push
incb
sbb
fdivrl
aad
sub
sahf
sbb
xchg
add
add
jecxz
adc
add
add
pmaxub
incl
pop
add
icebp
mov
xchg
push
add
mov
incb
cmp
adc
add
xorl
push
add
aaa
incb
mov
incl
jno
insb
add
and
add
sbb
xor
add
inc
add
dec
sbb
andnps
push
shr
jnp
add
add
add
sub
incl
add
add
adc
mov
incb
insl
mov
int
jmp
add
incb
mov
add
mov
add
incb
rcrl
incl
stc
out
jns
add
incb
bound
mov
fcmovb
mov
jge
jno
popf
mov
dec
add
ja
incb
imul
xchg
mov
sbbl
push
add
add
dec
mov
add
add
add
incb
mov
dec
adc
add
bound
sub
xchg
and
add
mov
xor
add
incl
out
enter
dec
pop
sbb
fwait
sub
incb
or
add
add
lret
inc
add
push
xor
add
add
incb
iret
pop
dec
add
add
rcll
incb
cmpsl
mov
incb
pusha
add
add
add
add
incb
pop
add
incl
mov
mov
incb
mov
jns
mov
pop
add
or
ja
fwait
sub
int3
push
add
incb
adc
add
jne
add
mov
mov
add
xor
add
incb
in
fwait
and
add
add
dec
add
sbb
fildl
add
xchg
add
incl
or
sbb
nop
jno
shr
mov
outsl
int3
xchg
inc
and
add
pop
add
push
add
incb
fsts
incl
jg
rol
inc
add
mov
test
lods
push
add
sbb
dec
add
add
add
repnz
incb
xchg
scas
incl
push
incb
outsb
add
lea
push
incb
add
add
xchg
adc
add
add
add
fs
cmp
lods
cli
rorb
jecxz
add
add
push
incl
xchg
mov
incb
cmp
add
add
mov
add
pop
incb
dec
inc
add
add
incb
and
add
jg
pop
xor
add
pop
add
int
mull
cmp
mov
or
xor
add
in
mov
incl
into
sub
push
mov
add
incb
in
inc
enter
jns
incb
xchg
sti
repz
add
ljmp
or
xor
je
dec
add
inc
add
sbb
leave
xorl
add
incb
inc
add
inc
add
test
incl
daa
incb
inc
add
dec
fcoml
cmp
hlt
sbb
sbb
mov
out
cltd
in
or
mov
jg
incl
mov
mov
jg
or
pop
xlat
mov
add
jmp
add
add
test
add
add
lahf
xor
add
add
and
add
inc
add
nop
push
incb
fmul
sub
add
cmp
incb
in
fldl
add
sbb
push
pop
incb
lret
add
push
incb
mov
incl
mov
push
mov
add
or
push
outsb
add
xor
add
dec
sbbl
push
incb
sbb
push
incb
or
pop
test
fdivp
inc
stos
and
add
jns
incb
xchg
cmp
jg
int3
stos
jg
sbb
incb
incl
roll
jne
incb
jns
add
add
add
incb
data16
add
add
shlb
add
mov
incb
xor
add
inc
add
aaa
incl
loope
add
add
add
ljmp
ljmp
or
push
incl
pop
incl
lret
cmpsl
cmpsb
lcall
incb
jl
lret
add
add
add
mov
jg
incb
jno
sub
add
aaa
incb
std
icebp
cmp
adc
add
add
incb
ficompl
add
incb
xchg
sub
into
stos
mov
add
mov
ja
shrd
sarb
sbb
pop
test
das
cmc
cmp
incb
sub
lods
jl
addl
sub
jbe
repnz
add
mov
enter
add
incb
into
sbb
incb
cld
push
add
stc
xchg
xchg
xchg
xor
add
xchg
in
fildll
pop
incb
ljmp
adc
add
add
xor
xchg
and
add
add
incb
insl
cmpsl
popa
xchg
imulb
into
jge
or
cmpsb
cld
out
lock
push
mov
sar
imulb
add
movsb
xchg
out
mov
add
incb
push
add
dec
add
add
xor
add
std
fcompl
or
xlat
rcr
ret
and
aas
and
add
mov
incb
cwtl
mov
xchg
int3
lods
shrb
add
mov
xor
add
add
add
add
incl
cwtl
lret
push
cmp
add
sbb
or
bound
cmpxchg8b
das
inc
or
clc
add
insb
add
add
add
in
icebp
movsl
xor
add
jnp
incb
mov
inc
mov
add
add
in
or
mov
pop
test
data16
pop
add
cmp
int3
mov
push
cmp
jns
incb
sub
inc
add
or
out
addr16
push
cmp
add
data16
add
mov
add
add
repz
xchg
lods
sbb
and
add
add
add
in
incb
in
incb
push
incl
jno
add
cwtl
addr16
add
adc
add
into
adc
add
loope
loopne
out
in
mov
add
add
add
pop
incb
pop
mov
pushf
adc
add
add
dec
add
add
add
mov
mov
dec
add
jne
out
incb
repz
cmp
sub
mov
shl
addl
sahf
rclb
add
lock
bound
notb
incb
sbb
add
push
incb
imul
sub
xchg
stos
rol
add
add
add
add
sbb
xchg
iret
les
push
add
incb
push
add
add
or
incb
jmp
xlat
lods
fsubs
incb
in
sbb
incb
rcll
dec
add
push
sub
push
add
and
add
ret
xchg
mov
add
add
int
incb
mov
pop
incb
inc
add
add
add
cmp
add
add
incb
jecxz
loope
push
rorb
out
add
add
shr
aam
stc
in
adc
add
mov
jb
mov
add
add
jnp
add
add
add
std
xor
add
mov
dec
adcb
jmp
adc
add
dec
sti
aaa
incb
xchg
add
add
xchg
add
add
add
add
incb
push
add
add
adc
xchg
mov
mov
add
add
dec
add
push
add
and
add
push
jne
incb
fisttps
in
gs
out
incb
xchg
add
incl
icebp
cli
pop
or
incl
jae
aad
xor
add
sbb
inc
outsl
pop
incb
enter
or
xor
add
incb
xchg
adc
fsubrs
add
add
subb
incb
loope
incb
shlb
out
aad
les
in
aaa
incl
pop
push
jbe
dec
add
int3
cmp
incb
cmp
mov
ja
outsl
inc
add
adc
add
add
test
faddl
incb
xchg
data16
add
add
cmp
jae
icebp
inc
jae
out
sbb
xor
push
call
mov
lea
incb
mov
add
add
add
add
test
incl
fistl
out
sbb
or
andb
add
add
ret
adcl
add
aad
incb
jge
mov
xorl
add
push
in
aam
add
incb
xchg
jmp
add
jnp
push
add
incb
test
pop
incb
inc
add
incl
sub
xchg
loope
jb
loope
stos
inc
jge
ds
xchg
ficoml
incb
lahf
shrb
add
adc
add
add
add
add
pop
incb
sub
and
add
mov
incb
pop
incb
sbb
nop
sarl
jbe
inc
mov
pop
add
inc
add
add
arpl
dec
pusha
add
cmp
mov
xor
add
add
incl
mov
fists
push
incb
adc
rcll
mov
xchg
test
dec
add
incb
mov
add
add
or
aam
add
sahf
pop
add
incb
jl
adc
xchg
add
incl
in
incl
loope
incb
and
add
test
dec
push
ljmp
clc
xchg
pop
add
cwtl
adc
add
popf
outsb
add
add
stos
xorb
add
incb
mov
ret
and
add
icebp
jne
popa
jno
aas
jmp
add
sti
out
stos
xlat
in
out
fbld
fbstp
idivl
add
insl
xchg
pop
pop
add
fisubrs
sub
cmp
or
xchg
test
inc
add
xor
add
push
add
testb
das
sbb
or
out
ficoml
scas
sbb
mov
add
mov
rcrb
push
incb
loopne
shll
add
incb
cmpsl
mov
incb
ficoml
xchg
fisttpl
xchg
sub
add
cmpsl
xchg
add
add
add
mov
add
incb
cmp
addr16
add
incb
inc
add
fbld
add
incl
xchg
xchg
inc
add
add
incb
loopne
or
add
mov
add
sub
ret
scas
pop
add
inc
add
push
add
mov
out
mov
add
add
fildl
jecxz
add
bound
divb
incb
mov
xchg
push
incl
movb
xchg
mov
incb
movsl
mov
mov
in
out
nop
mov
pop
incb
sub
fsubrs
sub
pop
in
sbb
dec
add
fists
add
add
add
incb
shl
mov
pop
incb
movsl
dec
adc
jle
clc
cmp
mov
mov
mov
lods
int
stos
shlb
cmc
rorl
int3
in
inc
add
add
xor
in
cmp
inc
push
add
xor
add
add
lahf
mov
mov
add
lods
mov
add
incb
mov
add
push
add
add
sub
incb
lds
push
add
xor
add
incb
sahf
cmpsb
div
loope
incl
adc
add
add
pusha
add
jbe
mov
repnz
pop
mov
fdivl
add
incb
or
mov
add
adc
add
shlb
add
add
add
dec
add
xor
add
incb
inc
add
incl
mov
add
jle
imul
scas
mov
out
lret
icebp
add
mov
incb
inc
push
sbb
jecxz
push
or
xor
add
test
pop
incl
imul
sbbl
cli
xchg
add
add
incl
sarb
lahf
data16
add
fwait
add
add
mov
ljmp
add
in
sub
enter
push
mov
xor
fsubrl
sbb
fsubs
incb
test
xchg
push
add
stc
cmp
icebp
lret
outsl
stos
inc
ret
incb
jae
aaa
incl
aam
jge
cld
aam
inc
push
incb
mov
incb
and
add
cwtl
movl
jmp
add
add
into
add
add
add
incb
sub
pushf
repnz
add
mov
dec
stc
enter
ret
mov
push
imul
add
nop
xchg
dec
add
incb
and
add
sub
incb
jb
mov
xchg
push
lock
test
add
ret
mov
push
add
mov
sti
nop
inc
add
incb
insb
add
icebp
xor
add
adc
add
popf
xchg
or
aad
xchg
mov
fsubl
inc
mov
ja
add
sarb
mov
cmp
inc
and
add
sub
sub
incb
sbb
push
push
add
lahf
mov
paddusb
clc
jne
loop
add
inc
add
in
pushf
inc
inc
add
test
add
dec
repz
dec
add
mov
jae
dec
cwtl
lock
mov
mov
xor
add
arpl
incb
shll
sarl
cmp
popa
mov
and
add
add
rolb
outsb
add
add
jg
inc
int
mov
mov
jle
icebp
popa
add
add
mov
add
add
add
aad
add
add
add
incb
lods
jns
mov
add
incb
int3
cmp
fldenv
mov
xchg
and
add
add
jle
mov
pop
jns
add
jl
lods
incb
rcrb
add
ljmp
add
or
incl
movsl
lea
dec
add
add
sub
mov
add
cmp
test
incb
icebp
push
incb
and
add
add
incl
pop
sti
cld
test
aas
das
in
mov
add
incb
repnz
add
jb
repnz
sbb
data16
cli
lret
je
sbb
mov
jmp
in
and
add
add
incb
jl
jmp
movsb
leave
in
gs
add
ffree
and
add
loop
push
loop
push
add
incl
push
incb
popa
loop
add
sbb
incb
cmp
addr16
or
nop
sub
xchg
mov
add
pusha
add
incb
inc
hlt
cmp
push
and
add
inc
mov
mov
lret
cltd
dec
xchg
jnp
out
mov
push
add
add
data16
xchg
ja
incb
adc
add
add
gs
add
lret
mov
add
add
add
incb
outsl
sub
and
add
incb
jl
icebp
add
incl
stos
into
addr16
cmp
or
incb
push
incb
push
add
mov
xchg
setbe
fwait
lock
data16
incb
int3
jl
mov
in
add
add
in
and
add
stc
xchg
lock
enter
scas
fildl
call
incb
out
push
push
add
ljmp
add
incb
xlat
bound
jae
incl
movsb
jbe
out
stos
pshufb
add
incb
fwait
xor
add
pop
add
stc
jae
fwait
mov
movsb
cwtl
inc
cld
jnp
cwtl
inc
add
push
add
incb
mov
add
lcall
inc
mov
add
jl
lret
and
add
push
incl
mov
pop
add
arpl
incb
jg
incb
jb
inc
add
fwait
mov
int
or
jmp
and
add
incl
mov
scas
xchg
stc
jecxz
dec
lcall
add
sub
add
icebp
sub
subb
sub
or
cmpb
loop
add
fs
out
jnp
mov
add
in
stos
push
add
or
dec
arpl
pushf
pop
add
cmpsb
pop
jns
out
or
jo
xchg
jbe
movsb
jnp
mov
sarb
add
add
fldt
cltd
incb
xor
add
arpl
push
nop
insl
or
mov
cmp
pop
add
add
incb
or
xchg
setbe
jl
ljmp
mov
mov
add
data16
aas
xchg
fdivl
add
incl
xchg
inc
and
dec
add
add
add
sub
adc
add
sbb
jle
sub
pushf
adc
add
aam
sbb
and
add
add
add
incb
jne
lock
icebp
out
incl
cmp
nop
adc
add
push
add
aaa
incl
mov
add
cmpb
ds
pop
add
add
and
add
add
add
xor
add
add
sub
cwtl
arpl
pop
incb
inc
add
incb
aad
iret
jge
outsb
add
xchg
or
inc
add
and
add
mov
les
mul
and
add
push
add
xor
imul
incb
sahf
jmp
les
jno
imul
add
dec
add
mov
incl
subb
jp
int3
cmp
insl
fucom
dec
roll
add
add
icebp
enter
add
add
add
add
add
add
mov
push
sbb
add
fcoml
sbb
ret
lds
mov
ljmp
add
incl
aaa
incb
stc
push
fadd
mov
add
out
in
imul
cmpsb
popf
gs
add
add
add
incb
inc
jge
mov
and
add
push
add
add
add
push
add
dec
add
sbb
incl
cmpsb
xchg
sbb
insb
add
div
rorl
add
incl
inc
cmpsb
movb
enter
lahf
shlb
imul
add
dec
das
sbb
addr16
aam
stos
inc
add
add
dec
add
rclb
int3
push
add
pop
or
repz
add
add
pop
add
incb
mov
pusha
add
push
add
add
incb
loop
in
mov
mov
xor
cmpsb
adc
fstps
push
add
pop
sub
add
fwait
inc
lcall
or
test
incb
jne
mov
push
add
add
mov
pop
incb
push
add
mov
or
frstor
incb
rcrl
add
jno
loop
mov
mov
jno
add
cmp
leave
cmp
incl
movsl
sub
add
add
jg
testl
rclb
push
imul
shlb
add
incb
mov
lret
add
add
inc
add
icebp
arpl
add
enter
sbbb
sbb
mov
add
incb
scas
fbld
lahf
and
add
call
add
incb
loope
scas
repz
add
mov
aad
add
aam
adc
add
push
add
test
out
incb
cmc
mov
add
push
pusha
add
incb
test
jno
add
add
clc
and
incb
sti
fidivs
incl
push
cld
mul
jb
jge
incb
add
add
incb
js
push
incl
repz
imul
pop
mov
loopne
mov
outsb
add
jo
dec
negb
stos
icebp
fildll
add
add
pop
jecxz
adc
add
out
mov
stc
xchg
mov
mov
pop
incl
xchg
jecxz
or
add
incb
scas
sti
sub
popf
out
xor
add
add
ret
cmp
add
incb
arpl
xchg
arpl
incb
add
add
add
add
and
jl
pop
xor
add
dec
xor
add
inc
add
adc
add
add
add
mov
xor
add
add
incb
ficompl
cmp
incb
in
jne
pop
incb
xchg
push
add
add
nop
cmp
icebp
xor
add
add
incb
lahf
test
incb
rol
sarb
outsb
add
cs
xchg
test
incb
sbb
incl
and
add
incb
aas
int
scas
or
mov
mov
aaa
incb
jb
loopne
incl
lea
add
add
mov
xchg
mov
lods
lahf
imul
incb
pop
add
push
incb
imul
jnp
add
outsl
push
or
xor
add
pop
add
incb
data16
fnstsw
iret
scas
in
dec
mov
adc
add
incl
mov
stos
or
cmc
push
add
stos
sub
repz
outsl
mov
cmp
cmp
ficomps
ret
ret
dec
or
les
and
add
add
popa
sub
mov
add
sarl
mov
ret
add
xchg
repz
sbb
or
push
add
lret
add
add
sbb
imul
jb
jp
lret
incl
aam
add
incb
incb
mov
add
incb
sub
sub
incb
xchg
rorb
push
xchg
dec
cmp
xor
add
lret
mov
add
dec
add
sbb
shrb
add
incb
movsl
adc
add
in
pusha
add
enter
add
addl
out
jns
incb
in
add
rcll
add
or
push
add
sub
lret
xchg
mov
incl
or
incb
outsl
and
movsl
xchg
inc
inc
add
adc
add
add
pop
test
mov
incl
into
cmovae
incb
mov
hlt
mov
sbb
add
add
incb
clc
pushf
jle
mov
pop
add
mov
cmpl
sub
or
push
aad
sub
incb
lahf
push
cld
mov
add
add
iret
test
dec
add
sbb
rcrl
stos
sbb
leave
mov
imul
incb
add
add
ja
xor
add
add
add
pop
incl
jb
lahf
sbb
adc
add
lock
hlt
aas
add
incb
movsb
in
sbb
add
test
jmp
incb
xor
add
fbstp
add
incb
cwtl
sbb
xchg
adc
add
imulb
das
call
incb
rcrb
add
popf
xchg
push
add
jb
sbb
fistpll
jbe
lahf
sbb
adc
add
lret
incb
xchg
in
cmp
add
jb
sti
in
mov
mov
add
jne
mov
xchg
push
add
lret
incl
repz
incl
lret
mov
add
adc
add
add
jns
inc
sbb
pop
test
incb
cmp
das
mov
add
add
addr16
mov
add
xor
pop
test
bound
sbb
pop
add
mov
fisubrs
add
add
sub
sub
xchg
cmp
add
fwait
xchg
adc
add
add
ficoms
xchg
push
clc
adc
add
xor
add
test
insb
add
incb
add
add
jle
dec
add
insb
add
or
ja
jp
lahf
and
add
add
je
pushf
sahf
mov
add
add
or
pop
add
add
pop
loopne
add
add
jge
iret
sbb
and
in
ja
gs
sbb
add
mov
or
add
cmpsl
push
incb
inc
jns
add
incb
out
push
mov
fists
cmp
adcl
add
rsm
dec
add
incb
addr16
fimull
mov
add
add
push
incl
aam
add
lret
jl
loop
incb
dec
add
xor
add
aas
subl
add
dec
add
fbld
add
lahf
popf
aam
incl
imul
lock
xor
add
int
mov
mov
sbb
add
movsb
mov
cmpb
incb
jae
pusha
add
lret
fmulp
int3
cmp
cmp
push
incb
outsl
push
add
pop
andb
pop
incb
loope
add
xlat
adc
add
incb
aad
pusha
add
add
incl
movsl
jb
sbb
pop
jbe
inc
add
test
mov
mov
jbe
push
mov
imul
incb
push
add
add
aad
adc
add
push
add
in
out
pop
mov
add
incb
xchg
incl
push
add
incb
jl
mov
xor
add
fistps
incb
push
incb
push
add
sbb
clc
jl
xchg
leave
bound
sub
pop
jb
inc
add
add
psrad
mov
or
les
lahf
cmp
jbe
adc
add
out
test
int
out
and
add
incb
lea
add
add
and
add
adc
add
add
mov
inc
add
push
fcoml
incl
jb
cmp
dec
add
incb
test
mov
jns
popf
push
xchg
out
and
add
jge
jl
js
jl
in
add
incb
mov
sub
flds
incb
scas
mov
cli
insb
add
imul
out
in
gs
lret
sarb
add
incb
notl
xor
add
or
lret
xor
add
mov
pop
test
push
out
incl
jg
jg
outsl
mov
add
cltd
or
addb
and
add
fistpll
add
incl
sub
push
and
add
incb
jl
inc
out
dec
add
mov
scas
add
add
out
icebp
jnp
mov
lods
call
jae
orb
push
add
dec
add
mov
mov
push
add
add
mov
stos
mov
add
mov
pushf
cmp
add
fisubs
pop
dec
add
add
push
add
lret
pusha
add
incb
pop
add
add
adc
add
add
idivb
add
arpl
daa
incl
ljmp
xor
add
enter
add
enter
cmpsb
mov
add
insl
in
adc
aad
push
adc
add
cmp
int3
clc
int3
scas
jbe
ljmp
int3
lea
out
add
jecxz
sti
adc
add
add
add
lret
mov
add
incb
sbb
enter
cmp
dec
add
adc
add
push
add
add
inc
add
push
add
cmpsb
dec
add
incb
inc
add
add
das
adc
add
incb
xchg
jg
lea
sti
aam
int3
lds
pop
pop
xchg
pop
fsts
hlt
mov
shrl
add
incl
fidivs
adcb
push
out
and
add
pop
add
repnz
add
push
add
incl
in
add
add
ficomps
incb
repnz
dec
add
and
xchg
add
add
gs
add
mov
add
or
mov
add
mov
icebp
mov
add
add
add
add
inc
pop
jne
incb
mov
incb
adc
add
nop
jb
jecxz
incb
lea
mov
add
mov
sub
adc
add
incl
adc
add
incb
inc
add
inc
add
xchg
add
add
incb
out
imul
sub
inc
add
iret
sbb
xchg
inc
add
pop
incb
mov
adc
add
add
jo
incl
pop
incb
mov
pop
mov
xchg
jl
push
add
add
add
stos
sub
addb
add
incb
in
and
add
mov
sub
add
incb
cmp
lea
pusha
add
incb
cmp
inc
add
mov
incb
sar
das
add
add
mov
incb
push
add
pop
add
pop
add
incl
call
shll
add
dec
mov
jo
sbb
outsl
pushf
and
add
mov
mov
incb
ret
mov
incb
iret
lahf
jns
fstps
imul
adc
add
inc
add
incb
psrad
mov
xchg
cmp
xchg
xchg
cwtl
mov
add
add
ljmp
leave
jg
stos
cli
imul
pop
add
add
dec
fiaddl
add
add
add
mov
add
inc
sbb
push
add
incb
ljmp
incl
mov
add
inc
add
jle
daa
incb
ljmp
sub
enter
pusha
add
aaa
incb
push
add
jl
mov
bound
jbe
movsl
mov
incb
pop
mov
cwtl
jge
int3
out
mov
add
pop
add
out
mov
add
mov
mov
scas
pop
incb
jno
incb
xlat
ja
enter
add
jne
add
mov
mov
incb
xor
add
test
std
mov
or
push
add
sbb
mov
incl
inc
xchg
jns
push
add
dec
xchg
xchg
incb
clc
stc
pop
ret
push
pop
pop
incb
pop
add
add
incb
add
add
insl
add
add
out
add
add
add
incl
addr16
stos
mov
incb
add
add
cmpsl
mov
pushf
push
add
stc
gs
jecxz
incb
inc
xchg
out
xchg
loopne
add
incb
pop
add
adc
add
add
incb
dec
add
xchg
push
pop
inc
xor
mov
nop
xlat
inc
mov
daa
incb
xor
add
pop
out
adc
add
add
cmpsb
add
incl
mov
add
add
fwait
pop
add
mov
incb
and
add
nop
std
aam
fisubl
add
incb
shl
mov
icebp
inc
mov
add
rcll
nop
lret
daa
incb
addr16
fildl
out
xchg
xchg
push
incl
pop
add
incb
dec
sbb
incb
shlb
pop
add
icebp
push
mov
mov
add
out
mov
fmull
imul
push
aaa
incb
pop
add
add
mov
add
jne
xor
xor
add
pop
dec
add
add
incl
int3
mov
ret
dec
ret
xor
add
push
add
add
or
sbb
sub
popf
mov
mov
add
add
incb
or
enter
add
in
or
or
jbe
outsb
add
jnp
cmpsl
add
add
jno
xor
add
pop
shl
sbb
add
add
add
popa
xchg
add
add
movsb
loop
incb
rorl
incb
mov
adc
add
adc
add
pop
add
enter
js
inc
add
incl
ret
inc
andb
incb
jl
iret
sub
sub
pop
add
push
add
lock
incb
or
test
add
add
inc
lahf
repnz
add
add
mov
out
add
rolb
incb
and
imul
test
incl
inc
add
dec
add
mov
cmp
incb
sub
add
incb
or
dec
ljmp
test
repz
lock
testl
add
or
mov
add
add
int
sbb
fldenv
cmp
dec
xchg
arpl
jae
add
add
add
mov
jo
inc
leave
test
pop
add
incb
lcall
mov
cmc
pop
xlat
movsb
loop
call
push
add
stos
and
add
incb
loop
mov
incb
mov
add
inc
add
jnp
xchg
xchg
sarb
add
cmp
dec
pop
add
outsb
add
add
into
subb
add
mov
out
inc
add
insl
xor
add
out
pop
add
inc
add
adcb
add
jle
bsf
sti
sbb
add
add
xchg
xchg
fwait
push
push
add
data16
pop
scas
pop
incl
sbb
adc
add
scas
pop
movhlps
add
insb
add
sahf
in
test
xchg
sbb
ret
add
add
cmp
add
incb
pop
add
incl
and
add
incb
jle
das
loop
adc
add
add
add
incb
shll
jns
sub
mov
add
lret
inc
enter
add
arpl
int
incb
call
mull
incl
dec
inc
mov
sbb
add
add
pop
hlt
aam
notl
adc
add
sbbb
and
add
add
mov
add
ljmp
add
add
add
insb
add
clc
dec
jno
div
cmp
cmpsl
dec
add
add
or
sti
lahf
out
dec
inc
add
xchg
xchg
adc
add
add
sti
sbb
mov
repnz
add
cltd
push
incb
xchg
and
add
add
cmp
mov
add
ret
mov
les
iret
mov
xor
cmp
dec
jne
fidivrl
incb
out
jp
or
add
add
mov
les
add
mov
out
xor
add
incb
xlat
gs
and
hlt
mov
lock
leave
cmp
mov
std
repz
add
push
add
loopne
add
cmp
add
incb
adc
add
aaa
incl
inc
cmp
add
dec
push
popa
sbb
fiadds
incl
mov
incb
mov
add
add
sahf
call
add
scas
mov
hlt
shl
out
add
add
incb
mov
movsb
pop
mov
addr16
or
aaa
incb
ret
incl
push
test
dec
jb
jns
xchg
cltd
shlb
mov
incb
popf
iret
xlat
mov
adc
add
inc
add
jb
cmp
pop
add
push
add
inc
rcrl
add
incl
sbb
add
add
or
push
mov
or
gs
test
call
lret
mov
ret
push
add
jb
fsubrl
add
mov
add
jbe
sub
dec
xchg
cltd
sub
scas
ret
aas
stos
push
add
jle
dec
add
add
add
incb
incl
sub
xchg
leave
incb
inc
add
mov
fidivl
add
arpl
push
adc
add
test
movsl
arpl
sbbb
lea
incl
ds
enter
incl
out
sbb
fiadds
btr
mov
lods
incl
sub
add
call
inc
int
int
sbb
xchg
or
lods
out
inc
add
test
sbb
lret
incb
nop
add
add
xchg
push
add
incb
or
adc
add
sub
faddp
clc
lahf
mov
jbe
dec
add
incl
insb
add
sub
jns
lret
bnd
fmull
add
incl
aad
or
add
add
mov
cmp
add
add
mov
call
mov
incl
sahf
jne
add
aas
outsb
add
incb
test
pop
add
add
add
adc
add
jmp
aam
xor
mov
lret
adc
add
sub
mov
push
add
incl
cmpsb
fnstsw
pop
js
mov
popf
hlt
xchg
das
scas
pop
add
in
dec
ja
incb
outsl
cwtl
push
add
repnz
add
sub
incb
lea
test
incb
jne
incb
jecxz
incb
mov
in
lock
jno
incb
aaa
incb
push
loope
incl
js
fnsave
fisttps
mov
cwtl
push
add
add
dec
add
incl
xor
add
fmuls
push
add
incl
xor
add
out
repnz
add
fwait
incl
jmp
testl
sbb
jmp
add
shll
inc
add
push
loopne
xorl
add
shll
mov
incl
iret
cmpsb
outsl
mov
pushf
daa
incb
pop
add
xor
add
add
dec
ret
int3
xchg
bound
add
add
data16
int
stos
lcall
mov
sub
xor
add
sub
cmp
pop
add
incl
jb
xor
push
add
das
xchg
loopne
xchg
loop
pop
add
add
sbb
sbb
jge
mov
incb
jle
mov
movsb
xchg
mov
push
add
add
cmpsb
enter
aad
add
and
add
add
sarb
incb
stos
push
out
xor
add
add
mov
incb
push
xor
add
push
add
jnp
xchg
and
pop
add
dec
js
aas
stos
jecxz
mov
push
add
incb
pop
add
incb
dec
repnz
loopne
incb
bound
sbb
aas
mov
addr16
cwtl
stc
xchg
sbb
or
into
fwait
icebp
int
mov
filds
incb
and
add
add
pop
nop
scas
loope
loope
add
idivl
incl
cmp
incb
mov
ret
xchg
hlt
aam
add
add
inc
push
incb
daa
incb
daa
incl
mov
add
dec
lret
lret
xchg
pop
or
sub
inc
ljmp
incb
adc
add
sahf
or
fcomps
push
dec
add
in
add
pop
sbb
sbb
repnz
test
sahf
sbb
pop
add
incl
jb
xchg
loope
fcomps
push
add
incb
mov
add
add
add
add
decl
and
add
mov
dec
pop
add
and
add
add
add
add
add
mov
fwait
gs
inc
add
add
jp
out
in
iret
pop
add
lea
fdivs
incb
sbb
call
sub
gs
add
add
in
pushf
mov
adc
add
sbb
hlt
inc
add
out
push
incb
sbb
push
inc
inc
pushf
sbb
lea
add
inc
add
repz
sbb
xchg
sub
cmpsb
stc
subb
add
adc
add
movsl
stc
sbb
out
gs
sbb
incl
sub
jne
inc
add
icebp
jge
pop
add
add
bound
lods
dec
add
and
add
incb
lds
incb
or
test
cmpb
add
incb
sbbl
or
add
add
add
lret
or
sbb
jae
cwtl
xor
add
scas
jne
scas
daa
incl
push
jl
or
test
xchg
insb
add
fildll
add
in
add
add
and
add
adc
add
add
incl
rcl
add
mov
incb
ljmp
and
add
scas
pusha
add
mov
pop
add
dec
fcoml
incb
add
add
add
mov
pop
add
adc
lret
add
sbb
cmp
pop
inc
add
add
incb
cwtl
leave
dec
xor
add
add
pop
add
je
sbb
push
add
xor
add
add
inc
add
incl
adc
add
incb
mov
add
sbb
jno
lds
in
ret
fdivrp
lods
enter
cwtl
stos
push
add
add
add
imul
out
cmpsl
popf
and
add
or
add
inc
add
test
hlt
mov
js
incb
xor
add
dec
mov
aam
add
incb
scas
add
jns
adcl
xchg
cmpsl
add
in
add
and
fisttpl
jmp
add
out
xchg
adc
das
pop
incb
mov
add
incb
xor
add
cmp
add
add
add
cmp
daa
incb
jg
incb
add
add
hlt
xchg
mov
add
fnsave
fwait
xor
add
daa
incl
std
or
add
xchg
xor
add
add
incb
dec
shll
add
add
into
cmp
rcr
xor
add
fisttpll
or
insl
test
adc
add
call
incl
iret
pop
shr
add
add
add
in
out
and
add
add
incb
loope
shrl
incl
dec
add
add
add
xor
add
push
incb
addr16
pop
mov
pusha
add
mov
in
test
xchg
lea
push
add
incb
mov
add
jo
addr16
pop
add
jmp
add
jae
mov
sbb
incl
push
xor
add
call
mov
in
add
movsb
pop
add
js
jnp
add
scas
lods
data16
pop
jmp
rcrb
add
ret
dec
add
add
push
mov
push
add
imul
add
incb
inc
dec
test
incb
mov
cmp
add
incb
mov
xchg
or
aam
add
ljmp
incb
sti
pop
add
or
xor
add
in
and
add
ret
pop
add
inc
sub
mov
incb
or
push
les
sbb
das
cmp
jb
loopne
sub
dec
mov
xchg
addr16
cmc
inc
mov
and
add
cmp
addr16
andb
or
dec
add
push
dec
add
add
mov
jg
adc
add
cmp
lahf
jo
dec
imul
add
incb
or
add
test
ret
mov
add
lret
or
add
andb
add
data16
shlb
add
incb
cmpsl
mov
incb
xchg
in
imul
dec
add
incl
pop
add
xor
add
xor
mov
pop
orb
incb
add
mov
add
incb
addb
and
add
test
cmp
fidivrl
inc
inc
into
and
add
ud2
sbb
addr16
add
mov
incb
mov
fwait
sub
imul
add
incb
jmp
divl
incl
xor
add
xor
add
incb
in
scas
jno
incb
sbb
or
insb
add
mov
int3
ret
or
iret
clc
mov
mov
incb
mov
and
add
ljmp
sub
mov
push
sub
test
cmpsl
cld
pop
add
pop
xor
add
adc
add
cli
in
xor
add
mov
fwait
cmp
sti
int
movlhps
add
lock
xor
add
push
add
ret
add
ja
add
lea
add
incb
sbb
mov
je
in
push
cmp
sbb
sbb
add
mov
dec
out
mov
add
aas
clc
stos
pusha
add
incb
mov
incb
sub
add
add
incb
push
add
lcall
mov
pop
add
add
repz
dec
add
add
sbb
adc
add
incb
xor
add
rorb
add
add
jnp
add
add
add
lock
outsb
add
incb
jno
add
addb
or
cmp
repz
pop
xchg
xor
add
inc
lret
out
mov
xchg
jae
lods
je
sbb
pop
cwtl
scas
dec
mov
add
cwtl
repz
add
add
incb
and
add
dec
sbb
add
pop
add
mov
sarb
add
incb
dec
add
incb
inc
incb
pop
ja
mov
cmpsl
adc
push
add
sahf
aam
xlat
test
mov
mov
loope
push
mov
add
dec
push
fsts
xchg
repz
incb
imul
fwait
xchg
xchg
cs
sbb
sub
mov
xchg
push
add
int
inc
add
incb
mov
sub
push
incb
scas
ja
add
out
jnp
jge
ficoml
push
pop
loopne
fistl
dec
add
mov
incb
rcr
out
and
add
fdivs
incb
enter
incl
hlt
mov
xchg
push
add
or
pop
out
ret
inc
add
mov
incb
out
add
add
add
insl
mov
incb
sbb
bound
insl
ret
mov
add
push
shr
xchg
ret
dec
xchg
jae
incb
add
sbb
mov
mov
inc
and
add
rcrb
mov
adc
out
add
fstps
and
add
lcall
sbb
ds
dec
mov
stc
pop
add
insb
add
and
add
incb
incb
out
mov
mov
incb
enter
add
add
push
add
add
stc
sbb
aaa
incb
fistpl
call
add
add
mov
incb
dec
add
add
sub
inc
add
incl
js
cmp
incb
mov
jo
pop
add
or
incb
movsl
cmc
test
add
dec
add
dec
add
cmp
inc
in
jnp
icebp
adc
add
inc
xchg
rorl
or
popa
mov
push
add
add
push
add
add
and
add
pop
fsubrl
dec
add
add
incb
rcrb
data16
or
test
jae
cmpsl
into
leave
in
mov
add
push
push
repnz
add
incb
je
test
add
mov
in
jmp
pop
incb
pop
cmpsl
stos
pop
add
bound
or
out
outsl
pop
lcall
cmp
pop
add
jns
int
incb
cmpb
jle
gs
mov
aaa
incb
enter
pop
mov
jecxz
add
pop
cmpsb
lds
test
xor
add
push
add
add
sub
out
outsb
add
lret
add
sahf
sub
aas
xor
add
incb
jae
lret
scas
xor
incb
test
ret
adc
add
incb
xor
add
dec
add
incb
sbb
scas
pop
add
pop
aam
ja
incb
push
add
add
gs
pushf
outsb
add
add
testl
stos
dec
add
incb
daa
incb
xchg
cmpsl
adc
add
shlb
outsb
add
jbe
add
add
xchg
push
add
incb
dec
add
incb
jne
add
sbb
add
incl
sbb
sub
push
add
cmpsb
scas
jg
add
pop
incb
dec
push
adc
add
incb
out
mov
imul
jns
incl
test
int3
sub
push
incb
lock
fnstenv
incb
lret
jge
icebp
cmp
mov
add
incb
in
aaa
incb
or
pushf
mov
aad
fs
daa
incb
add
add
incb
xor
add
add
lock
das
sti
cmp
cmpsl
sbb
push
add
subb
add
mov
xchg
pop
ja
test
sub
adc
add
stos
pop
incl
test
arpl
mov
incb
rcrl
add
mov
xor
add
add
incb
mov
je
aad
gs
mov
add
inc
add
incb
cmp
xor
add
adc
add
js
sub
testb
xchg
xchg
mov
sar
lock
xor
add
mov
sbb
rorb
pop
add
add
pop
push
cmp
stc
in
incb
xchg
mov
incb
jle
mov
sub
jmp
xchg
arpl
add
dec
fidivrs
sub
lret
incb
mov
incb
lds
incb
test
jl
lods
daa
incb
lcall
dec
add
lret
arpl
mov
add
test
add
add
push
add
incb
jb
call
sbb
fsubrl
and
add
add
add
jnp
cli
sahf
mov
add
lock
xchg
rcl
mov
add
les
sarl
add
xor
add
add
add
incb
sti
mov
incl
loopne
add
push
or
push
add
rcrl
pusha
add
incb
mov
fld
pop
movsl
sbbb
push
pop
xor
add
add
add
add
incl
inc
add
push
adc
add
into
nop
push
add
rorb
mov
incl
pop
incl
imul
out
cmp
fcoms
incb
pop
add
loop
incb
push
ret
push
adc
add
add
mov
fists
incb
or
or
mov
jl
jmp
xchg
out
add
lret
js
stc
insl
push
push
incb
mov
scas
inc
adc
add
out
test
incl
test
mov
adc
add
ljmp
mov
mov
add
mull
stos
lea
jo
cwtl
xchg
pusha
add
cmp
dec
fistpl
xchg
add
xlat
inc
std
idiv
dec
into
out
incl
sbb
incb
movsl
xchg
pushf
mov
add
incb
mov
lods
xor
add
add
add
add
add
incb
inc
inc
add
movsb
popf
mov
cmp
pop
add
dec
cmp
mov
sub
int3
aaa
incb
in
cmp
aas
lahf
push
rcr
cltd
xor
add
add
push
incb
mov
sbb
repz
aam
fwait
leave
adc
add
shrl
add
add
aaa
incb
dec
add
or
test
movsb
cmp
adc
add
incb
das
push
add
incl
cld
ja
xchg
fmuls
incb
or
into
fucomp
in
out
sbb
nop
outsb
add
add
incb
rorl
add
daa
incl
fdivr
fwait
iret
push
incl
add
or
stos
pop
add
cmp
adc
add
arpl
add
loop
mov
in
xchg
fistps
incl
add
incl
mov
cmp
loope
leave
push
add
inc
sub
insl
sub
adc
add
rcll
or
add
sub
or
adc
add
arpl
push
add
in
lahf
lds
add
lods
loope
in
mov
push
jno
and
jne
jmp
mov
and
add
jle
jge
mov
into
add
incb
subl
incl
scas
xor
add
push
sbb
divb
jge
adc
add
incl
out
daa
incl
add
add
enter
clc
enter
cmp
jbe
mov
loop
incb
push
jnp
aad
add
incb
and
add
incb
das
out
incb
je
cmp
incl
mov
fbstp
incb
add
add
add
add
add
sbb
sub
fstl
incb
push
out
add
jmp
out
mov
ja
out
loop
add
incl
mov
mov
add
jae
add
repz
aaa
incb
mov
incb
and
add
xchg
iret
push
add
aas
sbb
das
rol
fwait
pop
add
add
cmpl
xchg
jl
cmovne
add
inc
add
and
add
add
daa
incl
or
add
adc
add
add
inc
add
arpl
ret
incb
xlat
lret
mov
iret
sub
and
add
mov
add
incb
xchg
inc
out
push
add
add
add
xchg
scas
inc
xchg
out
pop
incb
clc
mov
mov
add
mov
test
dec
add
mov
out
xor
add
mov
add
cltd
sti
pop
mov
nopl
pop
add
mov
cld
test
xchg
lds
dec
add
in
in
dec
add
incb
mov
lds
xchg
add
movsl
jb
jl
andl
inc
add
mov
add
pop
jb
jae
pop
add
incb
cwtl
xor
add
hlt
xchg
and
add
fcoms
rcll
lds
incl
pop
add
dec
add
add
add
incb
pop
add
xlat
or
in
stc
and
add
mov
out
xor
add
jmp
add
add
add
shrb
cmp
clc
iret
push
dec
add
incb
xlat
or
test
add
incb
mov
nop
xorl
add
and
cwtl
and
int3
push
push
out
xchg
and
add
cld
ljmp
xor
add
inc
add
mov
push
add
add
stos
push
incb
cmp
sti
pusha
add
incb
or
sbb
add
stc
sbb
xorl
add
add
sub
pop
dec
add
incl
daa
incb
or
xor
add
dec
add
adc
add
ret
insl
incb
imul
scas
inc
add
rcll
incl
xor
add
add
xor
add
popa
mov
add
add
repz
je
das
adc
cwtl
pop
add
test
incb
jo
pop
cmp
clc
aad
nop
mov
and
add
add
loopne
incb
xlat
mov
xchg
xchg
and
add
mov
incb
jae
lods
xchg
inc
add
incb
movsl
jns
xchg
aas
xchg
mov
incl
mov
incb
cmp
flds
sub
mov
add
jmp
test
aas
sub
add
incl
icebp
and
add
and
add
adc
add
ja
incl
lds
pop
adc
add
int
add
mov
xchg
jb
add
add
pop
pop
mov
out
add
mov
pop
add
add
fadds
imul
add
in
loop
sbb
push
add
xor
add
loopne
cmp
cli
fs
pop
idivl
xor
add
incl
lahf
iret
xchg
sahf
imul
add
incl
call
jmp
loopne
clc
adc
add
testb
in
and
add
incb
repnz
add
insl
mov
aam
fdivrs
repz
fisubrs
test
inc
sbbb
lods
lret
add
jle
sub
add
add
incl
jno
filds
add
dec
add
add
add
inc
out
ljmp
mov
incb
repz
incb
rol
pop
add
aas
in
add
xchg
mov
mov
adc
add
incl
push
add
xorb
add
cmpsb
loopne
or
pop
and
add
test
lret
int3
lcall
fdivs
lret
add
leave
or
stos
out
incb
je
sub
incl
mov
incb
push
fsubrs
mov
incb
or
sti
adc
add
mov
add
pushf
out
sub
insb
add
jbe
scas
pop
add
pop
add
incb
and
add
mov
add
add
push
adc
add
jp
nop
inc
pop
sub
and
jno
popf
sub
shrb
mov
incb
push
add
add
jae
lea
add
pop
repnz
adc
add
mov
push
incb
repz
incb
cmpsb
shrb
push
add
add
add
add
xchg
jg
xchg
dec
add
add
and
add
add
push
add
incb
loope
or
in
lds
incb
js
call
js
sbb
add
pop
add
test
add
add
fbstp
incb
jo
aam
add
add
incb
fnstsw
jnp
pop
and
add
incb
mov
add
pusha
add
add
xlat
out
and
add
xchg
xor
add
add
mov
add
in
sbb
sub
ja
sbb
adc
add
add
dec
add
pop
add
pop
add
mov
adc
add
divl
incl
test
push
add
dec
and
add
cmpsl
push
and
add
fimull
sbb
push
add
je
push
lds
sub
dec
outsb
add
loope
add
movsb
xchg
lea
incb
or
push
in
aaa
incb
lcall
incb
mov
incb
pop
adcl
add
mov
add
incl
or
idivb
lret
or
aad
orl
jl
fcmovnu
jp
dec
add
stc
add
add
push
add
pop
incl
leave
push
add
push
adc
cwtl
ret
lahf
icebp
xor
add
mov
sub
sarb
add
jne
incb
sbb
cltd
lcall
add
add
add
xchg
jmp
push
add
add
add
outsl
inc
cmp
std
inc
mov
add
movsb
cs
sahf
outsb
add
push
fistpl
mov
incl
push
add
cltd
aam
incb
repz
shlb
incb
push
ror
cli
pop
add
leave
les
incl
iret
insb
add
cmp
add
add
add
enter
in
mov
add
out
mov
cmp
jo
and
add
push
push
incb
mov
add
add
incb
add
add
cmp
in
mov
add
add
add
add
dec
add
and
add
out
add
jo
mov
lcall
outsl
mov
incb
and
add
sbb
sbb
jnp
in
push
inc
leave
jmp
or
add
add
dec
xor
push
add
cs
adc
add
addr16
xchg
data16
add
mov
test
mov
sar
out
rorb
fdivp
flds
add
add
push
add
add
cwtl
adc
add
pop
incb
in
insb
add
in
jp
popa
jnp
shrb
xchg
push
add
xchg
inc
add
imul
pusha
add
xor
add
add
incb
push
add
incb
push
incb
sbb
nop
or
add
add
incb
pop
incb
mov
aam
pop
adc
add
cltd
mov
add
add
incl
dec
add
rcrl
add
add
incb
sub
xor
add
dec
add
add
add
movsl
xchg
in
xchg
and
add
notb
add
add
fmull
loopne
aam
cmpsl
add
out
add
incb
dec
add
lahf
call
incb
or
add
into
ficomps
sbb
hlt
add
add
mov
incl
sub
sarb
fisubrs
add
and
add
fcoml
adc
add
incl
mov
inc
pop
add
add
add
add
lahf
mov
data16
incl
ror
jg
adc
add
in
cld
test
inc
mov
xchg
adc
add
imul
add
mov
incb
je
add
add
mov
pop
add
incb
pop
add
incl
inc
add
jbe
mov
add
add
and
add
or
incl
add
add
incl
mov
xor
add
inc
outsl
cmpl
jns
add
cwtl
in
adc
add
std
pusha
add
incb
jge
incb
add
data16
cmp
xor
add
ret
cwtl
and
mov
adc
add
sub
stos
sub
cmp
aam
xchg
insl
sbb
add
add
inc
add
mov
inc
jmp
mov
and
add
lahf
xchg
push
incb
sbb
loopne
add
inc
call
sub
incb
lcall
shlb
xchg
push
add
pusha
add
lods
lea
nop
loope
incb
lock
xchg
jg
xchg
popa
dec
add
sbb
incb
jge
mov
lcall
incl
add
incb
dec
add
add
incb
sub
rcrb
lret
incb
mov
movsl
lret
push
stos
pop
aam
add
inc
add
add
add
inc
aad
mov
ds
fwait
in
popa
cmc
mov
dec
add
add
add
sbb
mov
xchg
aas
movsl
iret
rol
lea
incb
pop
add
add
sbb
in
lds
dec
add
incb
sub
adc
add
adc
add
lods
jmp
mov
and
add
inc
ljmp
xchg
les
add
inc
add
int
dec
add
testb
cmp
popf
rclb
hlt
jmp
cli
and
add
in
incb
mov
aam
add
dec
add
push
cmp
outsl
inc
add
incb
sbb
mov
mov
jno
test
incl
inc
add
add
add
add
int3
jl
mov
xor
mov
jno
incb
test
repz
loopne
sub
add
incb
clc
mov
add
adc
add
mov
xor
add
incl
ror
ljmp
pop
add
add
incb
dec
bound
adcb
add
add
movsl
and
add
inc
xchg
xchg
cwtl
cwtl
push
incb
aaa
incl
adc
add
incb
inc
lret
test
out
incl
inc
add
incb
sbb
arpl
ffreep
cmp
insb
add
cmp
sub
movsb
cmp
push
incl
das
int3
sub
mov
and
add
xor
add
mov
fdivr
adc
add
mov
out
push
jle
xchg
lods
adc
add
in
repnz
inc
inc
add
add
mov
loop
incb
inc
add
shlb
cmpsl
hlt
addr16
add
fwait
and
add
add
jge
incb
shlb
dec
popa
mov
incb
inc
xchg
push
push
add
fidivs
incb
into
fldt
out
incb
test
call
sbb
add
mov
add
into
pop
bound
ficomps
sahf
cmp
xchg
adc
add
lods
sub
rol
daa
incb
jae
incb
gs
imul
add
inc
mov
dec
or
or
sti
add
add
mov
jmp
mov
fcoms
shlb
incb
xor
add
arpl
incb
pop
add
data16
add
add
xchg
add
incb
xchg
fcomi
cmp
pop
incb
pop
incb
incl
gs
add
sbb
add
add
xchg
or
push
adc
add
add
incb
xor
loopne
fisubl
incb
dec
add
incb
xor
add
mov
add
incb
and
xchg
pop
in
adc
add
incl
xor
add
incb
loopne
in
add
add
std
aas
fcoms
incb
adc
add
sub
xor
add
incb
and
add
orb
xor
add
inc
dec
add
add
add
out
inc
add
incb
xchg
cmp
push
shll
add
fwait
mov
pop
add
xchg
mov
push
add
add
sbb
jecxz
xchg
mov
incl
loope
rol
fstl
incb
mov
movsl
movsl
inc
sub
cwtl
mov
incb
test
add
add
enter
incb
fstl
incb
insl
fisttps
add
add
lds
incl
mov
mov
add
incb
movsb
jo
push
add
incb
ja
xchg
js
test
iret
jnp
stos
lock
and
add
popa
mov
xchg
in
loopne
repz
xor
add
incb
mov
push
dec
adc
add
or
in
cli
xchg
xlat
sbb
mov
jecxz
lods
add
add
scas
int
add
incb
loop
adc
add
add
add
data16
daa
incl
push
stc
mov
repz
mov
ret
cmpsb
das
nop
test
incb
lcall
or
cltd
mov
filds
jp
shll
jo
addr16
das
jns
rclb
xchg
pop
int
add
add
pop
stc
test
and
add
ret
inc
add
incb
pop
lods
movsb
test
incb
loope
xor
add
lods
pushl
pop
jnp
add
mov
mov
pop
mov
cli
loope
int3
mov
and
xor
incb
shll
incb
inc
adc
add
incb
sahf
xchg
mov
inc
add
outsl
dec
add
add
incl
cs
sub
and
add
push
jl
pop
add
add
incb
jmp
add
incb
fidivrl
out
hlt
in
xchg
pop
xchg
dec
add
add
add
sub
xor
add
lahf
mov
push
add
add
push
std
idivl
into
leave
push
add
mov
add
into
lahf
cmp
call
add
add
add
incb
out
xchg
add
add
mov
pop
add
incb
testl
sbb
sbb
fisubs
pop
incl
fidivrs
out
insb
add
add
icebp
aad
add
add
sbb
cli
and
add
sahf
gs
xchg
dec
inc
adc
sbb
inc
mov
add
incb
mov
loop
mov
jno
lods
mov
xchg
or
add
add
incb
push
mov
add
incb
stos
stos
dec
gs
data16
add
pop
add
cwtl
dec
aaa
incl
clc
lds
push
add
jae
out
stc
cli
mov
adc
add
xchg
inc
mov
or
add
or
lret
cmp
cmpsb
jp
je
cmpsb
xchg
andl
add
pop
add
pop
adc
add
add
dec
add
andl
add
add
or
lds
incb
les
add
add
mull
icebp
in
ja
mov
mov
incl
pop
incb
mov
cltd
movb
inc
add
sbb
mov
mov
aam
add
cmp
stc
fcmovbe
pusha
add
mov
cld
pop
lea
and
jbe
js
aaa
incb
jp
adc
sbb
incl
daa
incl
push
add
add
aad
or
push
add
add
add
add
rorb
jmp
add
gs
add
out
rcrb
add
in
incb
lods
xchg
rcrl
add
incl
cmp
lock
test
incb
inc
add
dec
add
sub
mov
mov
push
inc
add
mov
lret
pop
incb
xor
add
mulb
xchg
sbb
jge
add
popa
cmpsl
sub
out
mov
sar
ja
test
jge
jno
in
stos
inc
add
cmpsl
mov
add
mov
inc
dec
add
incb
test
pop
add
sub
add
out
sarb
push
add
incb
sbb
add
in
sahf
jmp
sahf
loop
jecxz
inc
inc
add
loop
mov
push
incb
mov
jp
call
sub
inc
add
divb
add
test
add
aad
outsl
loope
lock
jge
incb
outsb
add
xor
add
add
mov
fdivrs
add
add
iret
sbb
pop
add
incl
inc
add
jo
sub
shll
andl
lods
incb
cmp
jbe
push
mov
add
les
incl
xchg
cmp
popf
lods
stos
push
mov
iret
incb
mov
fnstenv
and
add
add
sub
mov
add
add
incb
bound
mov
push
test
mov
popa
add
add
add
ret
incb
mov
incl
aam
rorb
jmp
add
add
add
add
pop
incb
jmp
add
iret
lret
xchg
mov
mov
data16
in
nop
nop
ja
bnd
sub
incl
test
sti
hlt
stos
ljmp
add
sbbb
ret
incl
cltd
sbb
shll
add
add
je
aaa
incb
ret
pop
add
incb
daa
incl
add
add
mov
lods
int
xchg
pop
incb
repz
inc
add
rorl
cmpsb
ficoms
mov
push
and
add
popa
aaa
incl
jns
add
fnsetpm(287
jns
inc
mov
xchg
leave
leave
insl
cwtl
gs
and
add
incb
jno
pop
incb
sbb
iret
xchg
rcrb
incb
adc
add
add
add
add
dec
andb
add
add
incb
rcll
subb
add
add
cs
sub
add
je
cmp
dec
add
pop
add
mov
sbb
pop
mov
repz
add
mov
stos
xchg
xlat
jno
add
incl
mov
sbb
incb
add
incb
jnp
incl
push
incl
mov
jge
add
mov
incl
testl
leave
sbb
add
add
add
mov
cmc
xor
add
incl
and
add
add
scas
inc
add
incb
add
add
add
add
add
add
stos
cld
neg
cmc
lret
add
pop
xor
add
adc
add
int
add
insl
lds
add
pushf
fidivrl
andl
andb
add
xor
add
adc
add
les
pusha
add
add
add
out
and
add
add
incl
std
inc
mov
adc
add
add
xor
dec
add
xchg
push
loope
xor
add
scas
in
mov
arpl
cmp
mov
mov
add
mov
inc
add
add
cmp
scas
xor
add
or
loope
fistps
in
cmp
rol
and
add
movsl
or
sbb
pop
incb
add
add
add
outsl
adc
incb
dec
sbb
js
fdivrs
push
incb
mov
xchg
das
mov
fidivl
add
stos
sub
add
mov
mov
arpl
incb
adc
add
pop
pop
add
adc
add
jg
das
add
add
dec
jb
xor
insl
mov
incb
mov
nop
jecxz
incl
repnz
or
incb
ret
loope
add
add
add
mov
aam
sbb
mov
cmp
pop
add
add
push
adc
add
xchg
jnp
add
jecxz
jg
xchg
xchg
pop
bound
stos
inc
loope
push
fwait
jbe
into
sbb
data16
iret
pop
add
lock
pop
add
add
push
add
mov
add
add
jp
in
mov
inc
push
add
sub
imul
aad
add
adc
add
add
add
push
fwait
cmpsb
push
jb
jnp
xor
add
leave
sbb
or
fwait
daa
incb
or
inc
data16
xlat
jno
incb
out
leave
cmpsl
sub
test
mov
rorl
mov
add
add
loop
dec
add
decb
loop
mov
incl
xchg
mov
incb
rorl
test
push
add
mov
and
jge
stc
xor
add
cmpl
and
sub
mov
pusha
add
adc
add
xor
xchg
test
pop
aad
add
add
shrb
add
pushf
pop
add
dec
mov
add
mov
add
mov
fstl
incl
sbb
incb
xchg
cmc
and
add
mov
mov
add
loope
add
add
add
add
aaa
incb
push
incb
push
add
jae
add
stos
incb
out
pop
adc
cld
fstps
add
das
call
dec
mov
sub
repz
out
adc
add
incb
repnz
pop
add
pop
mov
incl
loopne
daa
incb
mov
sbb
sbb
outsb
add
add
add
or
xchg
mov
imul
fstpl
add
add
incb
jl
js
loope
fstps
mov
mov
incl
in
mov
movsb
cmp
lret
imul
inc
popa
out
or
incb
and
add
adcb
add
std
popa
ljmp
adc
incb
sbb
icebp
rol
orl
add
incb
ljmp
add
jmp
add
frstor
incb
inc
psubusb
add
iret
and
add
sub
incb
sbb
sbb
imul
add
ljmp
incb
xor
add
inc
add
add
mov
pop
add
mov
incl
and
add
add
add
add
push
add
sbb
incb
daa
incb
jne
or
dec
sahf
mov
inc
mov
pop
and
add
sbb
and
add
jg
inc
cmp
int
mov
push
incb
mov
mov
dec
mov
cmp
xchg
lods
add
add
push
add
add
incb
cmp
xchg
sub
sbb
cld
sub
ffreep
add
mov
incb
rcrl
push
xchg
sbb
in
jmp
inc
add
add
cli
pop
add
xor
add
cmc
mov
incb
xchg
push
incb
cld
incb
aas
pop
incb
popf
test
incb
jp
test
sti
jecxz
add
xor
add
pop
mov
jle
or
add
push
add
cmc
jbe
sbb
nop
xchg
or
mov
aad
incb
dec
loop
incb
xor
mov
add
incb
test
pop
das
mov
add
cmpsl
popa
jb
sbb
in
mov
or
and
add
xor
add
dec
add
incb
sbb
push
add
std
jecxz
incb
sahf
test
add
jae
sub
mov
xchg
add
add
inc
andb
add
clc
sahf
incb
push
add
xchg
pop
add
mov
add
incl
aaa
incb
data16
pop
out
std
scas
jns
add
incl
push
add
lods
pushf
mov
jne
incb
mov
adc
add
add
add
incb
add
add
push
add
jns
insb
add
loop
into
xchg
pop
add
add
les
fistpll
mov
add
incb
in
incl
in
mov
add
pop
add
sub
in
pop
add
les
nop
addr16
pop
incb
aad
add
pushl
incb
xor
add
incb
mov
xor
dec
add
add
incb
pop
jbe
push
jb
jmp
adc
add
sbb
add
jmp
xor
add
repz
ljmp
in
dec
add
add
lahf
push
incb
and
add
sub
cs
les
int
scas
loope
incb
dec
incb
cmp
or
out
incl
test
xchg
jecxz
incl
lods
inc
add
aad
inc
add
incb
or
add
add
add
in
cmpsl
fiaddl
cmp
hlt
mov
or
push
mov
nop
jg
jns
popf
hlt
push
push
clc
repnz
testl
lret
addr16
add
incb
mov
incb
mov
xchg
push
and
add
xchg
das
dec
add
std
sti
inc
add
mov
cmp
mov
stos
loop
add
incl
std
in
push
incl
shrb
pop
add
add
sbb
pop
add
add
mov
add
xchg
cld
mov
push
fidivrl
add
incb
push
mov
out
incb
push
add
add
incb
leave
fincstp
out
pop
add
test
sub
ret
cmp
inc
push
add
add
add
push
add
ja
add
js
pop
inc
add
xchg
test
lds
mov
incb
call
add
add
pop
add
xchg
add
repz
cltd
fsubs
and
add
add
xchg
inc
add
add
lret
add
scas
cmpsl
in
adc
add
push
jnp
add
add
incl
mov
out
add
incl
gs
add
add
add
xchg
rol
sahf
sbb
inc
sti
sub
incb
xchg
push
rcr
inc
shrl
lea
movsb
push
mov
mov
inc
add
add
ret
push
push
incb
shrl
jge
add
incb
adc
add
stc
popa
xchg
aam
add
rcr
xor
add
add
incb
sbb
fnsave
incb
lock
or
rclb
jnp
push
adc
add
and
and
enter
add
das
int3
repz
add
movsb
adc
add
cmp
les
popa
cmpsl
int3
stos
cwtl
mov
dec
fsubrs
mov
dec
add
cltd
js
js
add
incb
incl
mov
loop
shl
add
incb
or
push
add
rorl
jl
fidivrs
add
and
add
incb
inc
xchg
jns
jnp
pop
adcb
add
push
add
push
stos
sub
xor
add
jae
incb
out
add
jmp
dec
add
fwait
mov
pushl
repz
add
add
add
sti
mov
lret
push
add
add
add
add
inc
scas
jg
mov
jl
mov
add
jnp
dec
add
cltd
cmc
mov
lods
mov
mov
add
add
incl
dec
out
add
clc
push
push
incb
mov
add
add
mov
ror
repnz
or
jle
icebp
loopne
jns
add
add
incb
out
or
clc
nop
xchg
adc
mov
cld
sub
sti
popf
ret
pop
dec
add
add
dec
add
cmp
sarl
ret
dec
mov
adc
add
hlt
fstps
add
fstpl
dec
clc
mov
add
add
sarb
fcoml
jecxz
incb
test
add
incb
fwait
jb
mov
xlat
jl
or
lahf
xchg
out
dec
popa
jne
add
add
iret
out
adc
add
add
add
dec
jmp
mov
test
xchg
or
out
data16
jp
jo
in
js
cmp
mov
inc
cwtl
push
add
pop
add
add
incb
and
add
incb
cmpsl
mov
inc
add
jl
and
add
mov
pop
add
mov
add
sub
add
incb
rcll
cmp
mov
add
add
and
add
inc
add
mov
mov
add
add
rorb
push
incb
or
xchg
aad
add
push
jecxz
and
add
mov
add
and
add
add
add
incb
aad
incb
dec
je
jb
xchg
inc
add
incb
add
in
push
add
sbb
pop
mov
or
pop
mov
incl
and
add
lea
incb
pop
push
dec
add
dec
add
incl
mov
in
aad
mov
add
or
test
lds
incb
sbbl
incb
jp
lock
push
add
add
imul
in
outsl
xchg
cmp
jl
pusha
add
mov
inc
xor
add
jmp
push
sahf
lcall
daa
incb
dec
in
incb
jae
mov
sti
imulb
push
inc
pop
push
add
mov
add
jnp
aaa
incb
jle
ja
leave
pop
add
test
cmpsl
jns
add
add
incl
jo
dec
xchg
mov
lds
gs
sbb
cmpb
ljmp
movsl
xchg
jb
dec
add
add
incl
pop
add
add
pop
mov
rcrl
rclb
add
incb
mov
in
sub
incl
adc
add
add
add
add
lahf
mov
jl
xchg
into
cmc
out
push
add
mov
dec
add
scas
in
dec
add
sbb
scas
adc
add
mov
and
add
data16
incl
jg
cmp
leave
sbb
ja
jbe
aad
out
add
incl
or
outsl
mov
sbb
test
in
incl
flds
add
add
jbe
repnz
add
lock
mov
add
push
xorl
add
incb
push
add
mov
add
sbb
add
pushf
xor
add
mov
xchg
add
add
push
add
jle
test
lret
fwait
mov
nop
mov
jg
add
incb
push
add
dec
movsl
sub
dec
stc
imulb
add
add
insb
add
sahf
and
add
add
add
out
repnz
cld
add
add
jnp
add
mov
push
add
push
incb
xor
add
inc
mov
pop
ljmp
test
incb
int3
sub
bound
push
add
scas
repnz
add
dec
rolb
incb
das
sub
pusha
add
adc
add
les
incl
leave
cmp
xor
add
add
incb
mov
add
das
lock
mov
push
incb
ret
sub
jmp
out
sbb
cmpsb
in
mov
dec
add
incb
repnz
test
mov
lahf
jo
data16
ljmp
out
outsl
cmc
xor
add
andb
or
mov
add
jl
popa
fsubs
incb
xchg
cmp
add
leave
xor
add
incb
ljmp
shlb
jle
sub
push
add
lods
cmp
addr16
nop
sti
iret
mov
incl
test
adc
add
add
mov
fs
mov
xor
add
jnp
test
incl
cmpsb
popf
pusha
add
add
incb
fisubl
incb
orl
sbb
add
incb
and
add
lods
add
add
add
cmp
div
jne
add
incb
pusha
add
test
repnz
cmp
xor
add
inc
and
lock
cli
adc
add
pop
jae
add
incb
into
inc
jbe
pop
add
incb
mov
stos
sarl
xchg
pop
pop
add
sbb
icebp
pop
or
add
xor
aaa
incb
push
add
inc
add
pop
add
xor
add
xchg
incb
orl
sub
in
add
dec
mov
add
add
add
pop
add
add
sahf
sub
push
dec
add
aaa
incl
push
incl
aad
add
imul
dec
shll
xor
incb
gs
out
mov
in
cmp
add
leave
jmp
stos
mov
or
add
xor
add
cmp
sarb
add
mov
jb
mov
sbb
jb
dec
adc
add
lods
pop
pushf
adc
add
cmpsl
out
popa
loop
incb
jns
in
add
add
out
push
add
add
add
incb
pop
incb
xlat
push
repnz
addr16
xchg
in
add
cmp
adc
add
mov
incb
jp
inc
xchg
pop
shll
inc
add
popf
popf
xor
add
add
rorl
add
add
incb
fsubs
loop
iret
cmp
call
test
bound
mov
add
cmpsb
mov
add
incl
imul
incl
xor
add
inc
sarl
movsb
lret
add
add
incb
shlb
pop
arpl
das
sbb
sub
add
inc
add
add
add
push
sub
sbb
popa
test
loop
rclb
inc
mov
out
or
mov
mov
incl
or
incb
mov
mov
out
sub
rorb
mov
and
add
outsl
lods
lret
mull
add
xor
and
add
cmp
add
mov
add
je
push
xor
add
cltd
adc
insl
test
add
enter
pushf
sar
aam
push
incb
jmp
jb
jno
lret
lock
add
dec
add
or
nop
nop
fmul
stc
addr16
add
test
dec
frstor
incl
mov
incb
std
popa
or
add
add
dec
add
xor
add
jns
incb
hlt
pushf
xor
add
incb
xchg
add
cmp
jmp
incb
nop
arpl
dec
add
mov
push
add
test
ljmp
add
ljmp
add
add
ja
and
add
cltd
add
add
lea
incl
and
add
mov
inc
add
jl
mov
add
mov
inc
add
add
insb
add
incb
mov
incl
dec
add
incb
mov
incb
adc
add
out
imulb
cmp
adc
add
incb
popa
in
movsb
jecxz
rorl
add
inc
in
shrl
add
jge
dec
or
and
add
mov
add
cmp
cmp
insb
add
incb
pusha
add
adc
add
incl
shlb
add
dec
daa
incb
dec
adc
add
sbb
bound
insl
icebp
aam
mov
push
incb
daa
incl
or
mov
mov
outsl
mov
stos
imul
mov
add
jns
incb
test
add
dec
add
data16
lods
enter
int
aaa
incb
jnp
adc
add
add
add
mov
incb
test
ficoml
aaa
incb
clc
mov
inc
add
adc
add
ret
or
dec
xchg
fcmovnu
inc
add
lret
inc
add
in
add
lods
inc
cwtl
cld
add
add
sbb
sbb
mov
dec
daa
incl
das
lahf
data16
jne
add
incl
incb
in
dec
add
add
mov
rcll
cmpsl
pop
add
test
add
add
js
addb
call
add
out
inc
xchg
adc
add
cs
fwait
push
xor
add
icebp
out
xor
add
pusha
add
adc
add
fs
dec
call
dec
xor
add
jb
and
add
push
fistpl
or
push
incb
in
add
mov
add
test
add
lods
inc
add
xor
add
push
add
incb
loopne
mov
inc
add
mov
xchg
sbb
cmp
add
push
sub
push
incb
adc
add
out
int3
mov
incb
adc
add
popf
leave
fcompl
or
xchg
shl
incl
pop
add
dec
add
icebp
xchg
mov
int
cmp
cmp
incl
jg
fwait
pop
incb
out
aam
incl
movsb
push
add
xchg
cmp
push
sub
add
out
sbb
movsb
cli
xor
cmp
lahf
jne
sub
mov
add
arpl
fdivrl
aam
add
insb
add
push
and
sbb
addr16
push
add
sbb
popa
test
daa
incb
test
add
popf
sbb
sub
aas
daa
incb
lret
test
add
incb
pop
add
test
fbstp
incb
dec
add
add
test
sbb
incb
add
add
add
xchg
popf
mov
jno
orb
sar
mull
pop
push
add
test
incb
pop
dec
mov
stos
pop
add
incb
aad
inc
add
pop
dec
add
test
aaa
incb
jl
jg
add
add
add
sub
daa
incb
xor
add
add
incb
push
incl
push
adc
add
add
mov
adc
add
sbb
cmpsb
inc
push
incb
fwait
adc
add
incb
outsb
add
push
incb
loopne
mov
cmp
add
add
add
add
pop
add
ljmp
and
add
sub
aad
fldl
add
mov
imul
nop
sbb
dec
add
add
push
add
add
ds
scas
mov
push
add
cld
xlat
jno
sbb
jns
into
popa
xchg
leave
xor
add
add
shlb
incb
std
add
add
fsubrs
add
daa
incb
dec
add
incb
aam
dec
add
incl
mov
lcall
lcall
dec
add
add
add
add
add
incl
fcmove
adc
xchg
loopne
lods
xor
add
sbb
add
jl
in
aad
add
incb
push
add
dec
push
lods
loop
pop
add
iret
and
add
add
add
add
sub
add
out
mov
add
incl
mov
add
pop
push
daa
incb
cmp
bound
lock
bound
and
add
mov
dec
out
add
add
add
cwtl
test
add
add
pop
jb
sbb
pop
incb
out
jecxz
add
incb
cmc
push
add
test
sub
scas
sbb
incb
push
add
ret
mov
incl
shll
fistps
sbb
add
add
outsl
pop
out
incb
popa
je
cmpsb
adc
add
xor
in
lcall
add
add
in
ret
icebp
shlb
lahf
loopne
cmp
add
adc
add
mov
rcrb
add
xor
add
enter
add
cltd
popa
adc
add
imul
push
mov
inc
pop
add
int3
sbb
les
incb
pusha
add
incb
pop
add
mov
movsb
mov
xor
add
lcall
incb
cmc
scas
mov
inc
add
idivb
adc
add
jmp
add
lcall
fadds
add
fcmovnbe
aaa
incb
roll
add
add
add
or
adc
add
mull
mov
dec
add
mov
mov
cmp
add
push
adc
add
incb
bound
rclb
incb
and
add
pop
fwait
sbb
inc
sbb
add
incb
insl
mov
incb
push
add
jns
insl
sub
add
incb
cs
outsb
add
xchg
in
stc
stos
insl
and
add
incb
mov
inc
stos
in
add
add
incb
pushf
add
add
incb
ret
dec
add
test
fidivrl
fbld
incl
ja
clc
call
inc
dec
add
incl
mov
adc
add
aaa
incb
fistl
mov
add
push
incl
faddl
mov
and
add
sahf
incb
incl
jns
add
mov
mov
push
add
pop
or
jne
push
mov
xchg
clc
inc
add
add
js
or
add
add
mov
cltd
jg
jne
incb
adcb
add
hlt
enter
mov
rcrb
lahf
jb
cmc
jnp
incb
sub
fcomp
jle
nop
movsl
enter
sub
or
data16
pop
add
xor
add
mov
add
and
add
xchg
add
add
cmc
pusha
add
lock
adc
add
incb
jmp
add
mov
sbb
mov
jae
incb
enter
lock
pop
incb
push
incl
insb
add
add
add
add
add
lds
in
mov
push
incb
repnz
mov
pop
add
add
add
jbe
das
add
add
out
add
data16
jne
fwait
gs
ret
rclb
and
add
add
incb
repnz
add
cmc
ja
mov
mov
add
add
aad
xchg
dec
insl
sub
sbb
sbb
xchg
outsl
add
test
cmp
clc
sbb
mov
xor
add
mov
add
adc
add
add
xchg
popf
aaa
incb
sarl
jmp
add
fdiv
jnp
cld
sbb
call
add
enter
jno
incb
dec
lods
sahf
js
pop
add
incb
sahf
cmp
jg
xchg
mov
aas
rcrb
nopl
movsl
cwtl
dec
or
cmp
inc
add
sahf
fwait
ja
mov
add
dec
mov
xchg
add
add
mov
lret
add
incb
or
ret
fldl
mov
incb
xor
add
lret
add
add
push
add
hlt
cmp
jmp
add
adc
mov
sub
into
mov
mov
leave
mov
incl
cmc
and
mov
push
adc
add
lahf
lea
das
in
jnp
add
fucomip
rol
dec
add
call
add
in
adc
add
lods
sahf
pop
add
stos
outsl
cltd
js
cmp
sub
add
incb
rcrl
nop
jl
jne
in
jmp
cmc
dec
add
add
dec
cld
sub
mov
or
outsb
add
jno
fcoms
add
add
incb
mov
inc
add
jmp
incl
mov
add
add
lea
pop
sbb
pop
add
incb
ja
add
movsl
loopne
fcomps
add
incb
add
add
dec
add
int
fldcw
ret
dec
add
push
push
add
xchg
push
add
mov
shr
mov
add
incb
aas
testb
push
add
fwait
adc
add
gs
add
shll
dec
add
add
cli
add
add
xchg
iret
pop
add
mov
incb
fisttpl
add
add
pop
call
pop
incl
push
incb
sub
jns
lds
incl
xorb
gs
add
rcrl
sbb
cs
add
add
incl
iret
jno
add
inc
add
add
add
add
cmpsl
push
gs
sub
add
lock
data16
insl
mov
incl
dec
loopne
add
add
add
lock
or
mov
jmp
popf
fwait
pop
or
mov
adc
das
movsb
add
add
incl
cmpsl
push
add
jbe
jne
mov
mov
ficompl
fisttps
lods
js
les
push
incb
sub
add
add
or
xor
add
or
add
add
add
pop
popa
shlb
incb
das
int3
inc
mov
xor
add
loop
xor
add
lods
xor
add
mov
jns
add
push
out
mov
jecxz
cmp
push
add
dec
add
sbb
incb
cmp
or
iret
ret
inc
add
scas
sahf
leave
jns
inc
loope
adc
add
shrl
push
incb
sbbl
int3
dec
add
push
incb
test
add
xchg
add
add
add
add
push
push
add
int3
fsub
mov
cwtl
int3
js
incb
int
test
pop
inc
add
sbb
incb
sub
add
add
incb
push
add
pushf
outsb
add
pop
push
add
mov
xchg
sub
incb
dec
pop
incl
pushf
push
add
pop
incb
mov
pmullw
add
add
add
adc
add
incb
enter
fcmove
out
xchg
pop
mov
add
gs
add
je
xor
add
or
aaa
incb
adc
add
popa
int3
add
mov
add
add
add
add
add
mov
dec
add
push
add
jmp
adc
add
imul
in
aaa
incb
sub
xor
add
incb
aam
add
add
shll
lea
mov
les
fcomp
ret
add
mov
add
fstps
add
xchg
push
incb
pop
incb
dec
sbb
dec
add
incl
loope
push
test
insl
mov
pop
add
incl
sbb
int3
sub
and
add
fdiv
out
add
incb
pop
add
aad
nop
test
mov
mov
loopne
add
adc
add
add
add
add
xchg
addb
pop
icebp
insb
add
add
mov
repnz
int3
jne
push
add
add
cmpsl
add
cmc
int
add
sbb
inc
add
adc
push
mov
add
push
add
add
incl
xor
add
sub
lcall
bound
pop
sub
mov
mov
pop
add
jecxz
jnp
add
add
sub
adc
add
push
add
cltd
mov
add
add
frstor
lock
add
incb
push
push
add
scas
addl
rcll
cltd
fwait
orb
add
add
out
and
add
aam
in
add
xor
add
addr16
pop
xor
add
stc
xchg
addr16
testl
adc
add
pop
ja
add
lcall
push
sbb
xor
add
lea
fistpl
add
std
push
add
jl
adc
aaa
incl
sub
push
incb
movsb
subb
mov
jl
pop
inc
sbb
pushl
incl
or
and
add
incb
outsl
jb
dec
xlat
fisubl
incb
pop
add
add
add
add
push
add
add
add
icebp
mov
mov
loop
loope
fildll
std
daa
incb
adc
incl
mov
mov
xor
adc
outsb
add
pop
incl
mov
or
jo
dec
add
lods
xchg
xchg
mov
push
in
inc
push
add
loop
lds
enter
add
negl
add
call
add
add
add
pop
push
add
jns
jge
add
mov
add
incb
call
adc
add
mov
sbb
adc
add
jp
sahf
cltd
mov
cli
icebp
xor
add
xchg
ja
add
incb
push
cmc
jne
je
sub
push
incb
jl
sbb
mov
mov
xor
add
std
mov
jae
incb
imul
xor
add
fildl
add
add
sub
cltd
test
jae
je
mov
clc
pushf
pop
incb
or
cmc
loope
mov
or
pop
adc
add
jg
out
adc
add
hlt
mov
lahf
in
add
add
stos
rorl
inc
mov
add
add
push
dec
in
inc
add
and
add
popf
outsl
pop
add
push
out
jl
jb
adc
add
inc
add
add
add
add
cli
sbb
ficomps
push
add
insb
add
mov
xor
add
sbb
push
add
outsl
push
add
incb
addr16
jb
gs
push
jmp
add
add
mov
fld1
stos
ficomps
mov
push
mov
cmp
iret
ja
cmc
jmp
mov
incb
mov
incb
fsubrs
int
xor
add
sbb
dec
pushf
andl
add
inc
add
xlat
add
add
incb
std
sub
negl
add
popf
test
loopne
pop
pop
mov
push
add
add
mov
incl
jns
add
add
std
popa
or
add
data16
incb
or
jl
fsubrp
push
incl
push
lahf
in
rcrb
add
add
xchg
into
cmp
test
cli
lea
dec
popf
jb
jmp
fnstenv
pushf
fldt
add
movsb
fucomi
das
shll
add
enter
push
add
mov
call
dec
add
incb
outsb
add
push
popa
cli
or
sub
mov
add
dec
add
incb
cs
int3
adc
push
add
dec
out
movsl
nop
bound
mov
iret
mov
add
adc
add
xor
add
adc
add
add
add
xor
add
incb
fdivrl
stc
jns
add
add
pop
incl
pop
sub
inc
xchg
int3
cltd
jmp
sti
lock
enter
sbb
jecxz
incb
and
add
xor
adc
add
pop
incb
xor
add
ror
pop
add
add
add
cmp
shl
mov
test
add
pop
incb
xorl
mov
push
incb
sub
pop
incb
das
adc
add
sbb
loope
add
sub
incb
push
add
imul
dec
jo
jp
add
add
add
add
jo
je
aam
add
jmp
in
dec
int3
sub
incb
in
add
add
incb
test
xor
add
add
mov
rorl
incb
mov
add
add
xor
add
out
gs
aam
jecxz
imull
scas
adc
add
into
sub
add
incb
mov
pop
add
xchg
test
les
incb
popl
incb
xchg
sahf
repnz
incb
adc
add
aaa
incb
sbb
push
incl
and
std
xor
add
xchg
cmc
xor
add
add
or
add
add
incb
out
or
mov
add
repz
add
incb
mov
incb
test
jl
dec
add
nop
in
out
add
add
add
add
loop
adc
add
sar
repnz
add
xor
add
inc
pop
xor
popa
push
pop
pop
xlat
jmp
xchg
incl
leave
jl
js
out
cmp
int
inc
pop
incl
in
incb
movsb
pop
add
mov
mov
test
pushf
lock
and
add
add
add
dec
add
or
mov
add
and
add
insl
fidivrl
outsl
fimuls
add
xchg
rcrl
incb
cltd
push
push
add
dec
add
add
add
add
push
add
out
mov
add
incl
mov
pushf
sbb
xchg
pop
add
add
sarb
loopne
incl
out
or
incb
xchg
cmp
jb
gs
mov
aaa
incb
gs
repnz
inc
je
adc
add
incl
and
add
and
inc
les
popa
mov
lcall
add
add
add
add
inc
add
add
mov
mov
incb
xlat
loope
dec
add
add
add
push
add
add
incl
inc
add
add
sbb
leave
inc
sub
rcrb
jns
jecxz
add
incb
mov
out
mov
adc
add
add
add
jmp
popa
arpl
add
in
fistps
add
iret
dec
jb
mov
inc
sti
arpl
add
xchg
add
incb
mov
fildl
incl
push
add
cmp
pop
clc
push
add
mov
add
nop
dec
and
add
xchg
incb
shlb
or
dec
add
add
push
inc
hlt
cmp
shrl
add
mov
aas
enter
add
incb
jb
mov
pop
sti
aad
incb
xchg
pop
incb
insb
add
add
incb
sub
xchg
roll
add
jno
incb
js
int
push
inc
scas
ljmp
add
add
pop
add
add
add
dec
add
dec
add
add
sti
loope
neg
lds
je
mov
fadd
lret
and
add
xchg
imull
add
mov
lods
hlt
pop
pusha
add
pushf
xor
push
xor
add
aad
pop
shll
aas
push
add
inc
in
call
xor
add
incb
scas
adc
add
outsb
add
iret
in
sub
xchg
js
mov
xor
add
add
push
add
xchg
fcmovnu
out
xor
add
add
add
mov
add
rcrb
add
mov
add
dec
sub
incb
cli
aas
into
out
inc
fmulp
movsl
jo
scas
cs
and
add
mov
mov
jo
movsl
xchg
xlat
adc
add
mov
orl
pushf
xchg
and
add
add
aam
sti
xchg
jp
std
add
add
jno
add
sbb
mov
fdiv
out
add
add
add
test
incb
fucom
mov
das
aas
push
and
xor
add
adc
add
mov
scas
xchg
fwait
sahf
mov
xchg
mov
jns
out
incb
sbb
mov
add
scas
cmp
inc
add
mov
sbb
shl
sub
pop
or
data16
inc
add
in
cmp
loop
cmc
dec
add
add
loope
incb
xchg
int
fwait
or
cmp
or
lahf
das
pop
incl
push
push
add
or
add
add
pop
jne
push
cmp
fstpt
add
add
call
dec
mov
cmc
cmp
test
incb
inc
pop
add
add
add
pop
add
inc
in
add
or
popa
and
dec
lcall
mov
jp
dec
lret
ds
subb
addr16
jns
add
incb
das
or
push
add
lds
mov
incb
or
mov
mov
xor
add
incb
add
add
dec
add
pop
add
add
add
add
and
add
incl
cltd
jno
incb
push
add
incb
mov
movsb
iret
add
cmp
pop
add
mov
dec
pop
fdivs
incl
and
add
incb
aam
mov
mov
scas
mov
cltd
cwtl
jp
adc
add
inc
add
mov
into
push
add
add
incb
cmp
add
pop
test
js
rep
add
mov
incb
push
push
add
or
add
sbb
inc
add
popf
test
cltd
aad
xor
add
incb
test
addr16
xor
add
xchg
mov
incb
xor
add
out
outsl
or
incb
in
xchg
adc
add
mov
sbb
popf
cmpsl
xlat
mov
test
mov
add
add
incb
dec
add
add
mov
out
add
nop
das
maskmovq
testl
push
add
incb
cmp
les
incl
rcll
add
lret
shrl
push
in
stos
cli
mov
add
imul
test
mov
incl
mov
add
pushf
int3
ljmp
add
add
stos
sahf
or
shlb
in
incb
adc
add
add
test
ljmp
rorl
cld
das
jge
shlb
incl
shl
or
add
mov
enter
rcll
add
or
add
push
incl
inc
add
incb
and
add
jge
incb
add
add
incb
jns
add
out
inc
repz
ffree
stos
jne
insl
jmp
cmpsb
adc
add
cmp
xor
add
test
add
ret
jecxz
inc
jge
mov
mov
gs
imul
incb
cmp
cmp
loopne
mov
sub
or
xchg
push
push
repnz
lods
shrl
push
add
insl
sbb
add
cmp
pop
add
incb
pop
incb
add
sti
lods
xor
add
inc
add
pop
incb
cmpsl
sbb
pop
push
add
inc
popa
test
lods
loopne
add
add
sbbb
add
mov
out
stos
or
add
mov
incb
xchg
outsl
cmp
cs
and
add
add
incb
sub
push
incb
push
add
rcr
outsl
div
add
add
add
out
fwait
mov
add
sub
incb
sub
pop
add
movsl
cwtl
out
clc
sub
incb
inc
add
incb
aaa
incb
mov
adc
cmp
xchg
add
add
stos
inc
add
add
incb
int
sbb
incb
mov
add
mov
add
mov
or
and
and
add
leave
or
push
addb
add
lret
add
add
incb
imul
out
dec
lcall
loopne
add
incb
xchg
xchg
lea
incl
and
rcll
pop
je
cmpsb
dec
xchg
incb
je
stos
aaa
incb
rcrl
scas
testl
add
incb
sbb
add
pop
add
incl
test
add
fstpl
add
fcoms
add
incb
ffreep
xchg
ret
std
pop
incl
pop
cmc
fsubp
xchg
incb
sbbl
cmp
outsb
add
and
add
add
add
add
jle
and
add
add
cmc
fldt
push
mov
out
push
incl
or
lods
mov
mov
add
stos
and
add
nop
cmp
add
incb
pop
mov
cltd
adc
int3
push
fcompl
das
push
incb
test
sbb
scas
push
mov
shr
lods
mov
lahf
sub
pusha
add
pop
mov
pop
incb
add
add
mov
sbb
test
incb
das
jne
inc
add
sbb
add
sub
cli
das
insl
xchg
aad
enter
stc
daa
incb
outsb
add
add
incb
dec
push
add
aam
add
dec
add
shrb
xor
add
adc
mov
add
add
fists
incl
in
incb
jecxz
icebp
jp
cltd
incb
add
add
add
mov
xor
add
sbb
push
add
cmp
shlb
xchg
dec
idivb
lahf
loope
incb
mov
add
rorl
adc
add
incb
aas
mov
mov
inc
add
cmp
insl
mov
js
xchg
xchg
popa
mov
cld
std
add
cli
xchg
sub
jl
test
mov
hlt
push
add
fsubr
jo
mov
dec
add
in
adc
add
mov
add
mov
add
add
lea
icebp
dec
mov
add
add
add
scas
aad
or
incb
test
dec
add
add
incl
sub
lods
mov
xor
add
add
int3
lods
or
add
add
add
sbb
jb
incb
mov
jne
incl
inc
mulb
incb
arpl
add
push
repnz
scas
fistps
and
add
and
add
add
push
add
add
add
push
and
add
cwtl
movl
add
add
add
adc
add
incb
and
add
incb
dec
mov
out
add
cmp
mov
inc
add
xor
xor
add
fildll
or
dec
mov
incb
push
divb
incb
popa
in
xchg
aas
cmp
add
pop
add
and
add
ficomps
sahf
divb
add
add
sub
inc
add
add
add
test
out
or
stos
insb
add
incb
fdiv
clc
add
imul
add
fisttps
incb
cmp
arpl
les
push
mov
pop
add
rolb
mov
fdivrs
jns
push
add
push
add
xchg
dec
add
add
lea
incb
data16
scas
push
add
incb
mov
xor
add
adc
add
ret
outsl
into
movsl
adc
add
xchg
mov
rorb
andl
pusha
add
jnp
add
mov
xchg
hlt
cwtl
lods
pop
add
pop
add
pop
add
jge
xchg
stos
insb
add
mov
incb
movsb
stc
push
incb
sub
lods
int3
lahf
shll
incl
shll
sbb
add
enter
add
xor
add
mov
xchg
lahf
rcll
fidivl
je
inc
sub
sub
incl
ds
inc
jl
add
add
incl
xor
add
cli
sbb
incb
jno
add
scas
inc
ljmp
incb
mov
add
fstpt
jns
jae
daa
incl
pushf
inc
repz
sarb
cld
jp
inc
sub
xor
add
icebp
or
das
lret
dec
xchg
data16
add
add
mov
incb
xchg
int3
dec
add
jge
or
sbb
pusha
add
add
add
mov
enter
incb
in
jecxz
add
scas
movsl
push
daa
incl
sbb
sbb
leave
inc
add
cmp
add
add
sub
inc
and
add
incb
pop
incb
dec
inc
xchg
cmp
jno
add
add
pop
add
fsubrs
add
xchg
pop
incb
sbb
adc
add
pop
add
add
jb
xor
add
mov
std
outsl
lods
lret
daa
incl
mov
add
nop
ljmp
je
lods
lcall
icebp
in
mov
fs
dec
add
je
bound
push
add
pop
add
mov
clc
add
add
mov
incb
das
jl
loopne
adc
add
lea
incl
bound
sub
jle
push
add
inc
cs
fstp
jns
add
add
les
adc
add
repz
add
xor
add
jg
jp
cmpsl
fidivl
incb
ljmp
mov
mov
add
lahf
subl
incb
pop
out
dec
add
add
dec
mov
add
incb
or
test
data16
xchg
mov
repnz
jle
adc
add
pop
add
dec
add
mov
incb
fwait
loopne
or
orl
sbbl
ljmp
incb
pop
add
js
push
adc
add
incb
push
insb
add
cld
rclb
add
add
add
icebp
jbe
and
add
mov
pop
sbb
clc
sahf
mov
add
scas
sub
ret
add
add
lds
test
xchg
push
out
rcr
jle
sub
incb
jno
or
loopne
lock
out
add
jle
xor
add
mov
add
add
add
add
xor
add
test
add
enter
mov
mov
enter
gs
scas
jge
xor
add
xor
add
incb
sub
jl
pop
add
fmuls
dec
add
or
jmp
sub
shl
pop
incb
lds
add
incb
repz
notb
add
dec
lcall
push
incb
shl
sbb
cli
imul
pop
cmp
inc
inc
add
cltd
loop
incl
dec
add
cmc
xor
add
imul
xor
add
push
or
pop
push
incb
and
add
stc
sti
stos
and
add
icebp
mov
arpl
pop
add
lret
sub
sbb
test
inc
add
incb
dec
mov
rcl
sub
les
js
add
add
std
fnsave
in
add
add
incb
hlt
fcmove
clc
shrl
add
add
jnp
push
incb
and
add
jmp
xor
add
jbe
jae
xor
add
incb
fucomi
mov
enter
incl
sti
hlt
cmp
mov
jecxz
inc
das
sub
stos
sbb
dec
add
popf
aas
add
add
cmp
leave
adc
add
cmp
stos
fisubrs
add
jae
sarb
cld
mov
mov
pop
iret
xchg
int
xor
push
add
scas
stos
mov
add
add
adc
add
lcall
cwtl
addb
ret
outsb
add
mov
add
incb
mov
add
cmp
insl
scas
xlat
jo
into
js
dec
fistpll
push
add
pop
incl
cwtl
imul
rclb
incb
mov
insl
fcoms
mov
incb
push
add
add
leave
in
add
add
incb
inc
add
add
add
loope
add
incb
pop
add
sbb
imul
jbe
pop
test
insb
add
stos
insb
add
sub
add
add
outsb
add
les
cs
std
lods
jo
push
jae
incb
cld
mov
jg
add
xchg
fwait
pop
inc
add
incb
cli
insl
call
jbe
and
add
or
imul
add
add
add
arpl
add
jno
incb
or
ret
cmp
incb
test
rcr
xchg
sbb
pop
add
add
push
xchg
aaa
incb
xor
add
add
push
add
call
lds
in
fldl
jno
add
add
xchg
dec
add
cmpl
mov
incb
dec
add
incb
xor
add
add
ja
incl
testl
icebp
pop
xor
add
adc
add
test
jno
inc
add
out
andb
push
sti
outsl
testl
ljmp
popa
xchg
xor
add
add
add
gs
add
lods
xor
add
jp
test
add
add
outsb
add
fildll
mov
mov
dec
and
push
incl
repz
add
cld
imul
add
add
add
push
incb
mov
add
add
imul
lea
add
incb
enter
incl
fnstsw
mov
add
incb
fwait
push
incb
push
fmull
xchg
push
push
incb
lods
add
add
add
add
or
incb
mov
add
add
add
mov
xor
add
insl
in
leave
adc
lret
data16
sbb
jbe
mov
cmc
push
add
data16
lahf
push
add
incl
pop
clc
dec
sbb
dec
add
incl
jmp
sahf
aad
mov
add
pop
mov
add
mov
incb
fdivl
xor
add
incb
aaa
incb
xchg
out
stc
cmpb
incb
popa
lods
stos
test
or
sarb
add
test
inc
je
imulb
movsl
loop
incb
lret
pop
add
inc
mov
repz
mov
xchg
lret
add
or
push
add
cmc
int
add
push
add
push
add
cmp
adc
add
sub
incb
xchg
mov
mov
jp
stc
aam
dec
mov
add
add
xchg
add
out
jp
out
add
stos
sbb
cld
xorl
and
add
gs
add
jmp
add
aas
int
add
jns
incb
movsl
jle
daa
incb
xchg
rorb
xchg
ret
cs
and
add
and
add
nop
mov
adc
add
incb
mov
arpl
push
inc
mov
add
and
add
lahf
scas
test
add
outsb
add
clc
mov
incl
jb
xchg
inc
add
mov
mov
or
inc
pop
in
bound
rol
or
add
mov
cli
enter
xor
add
add
add
jg
cltd
out
or
stc
in
ja
dec
pop
incb
into
and
add
inc
push
add
add
lcall
incb
push
lcall
jno
sub
rcll
orb
cli
xchg
or
adc
add
add
rcl
mov
incb
mov
push
add
inc
add
add
in
ret
add
mov
into
jl
inc
icebp
inc
add
incl
and
add
push
popf
js
incb
and
add
cld
fistpll
iret
mov
and
int3
sbb
mov
mov
jecxz
ljmp
negb
add
add
add
jmp
mov
incb
push
shrb
pop
mov
add
add
arpl
add
push
add
out
xor
add
xor
add
cmp
test
push
add
pop
jns
incb
and
add
in
jge
jecxz
incb
xchg
sbbb
dec
and
add
ficomps
test
pushf
cs
mov
scas
mov
incb
xchg
adcb
xlat
xchg
fisubrl
push
xchg
adc
add
xchg
rolb
rorl
mov
mov
xchg
inc
adc
add
std
cmp
dec
outsl
jle
test
mov
add
lahf
cs
xor
notb
sub
dec
jp
sub
lret
adc
add
add
add
arpl
xchg
incb
xor
add
aas
and
add
incb
add
incb
pop
cli
std
pop
incl
mov
adc
add
repnz
add
stos
out
cmp
xor
add
jbe
pop
stos
pop
cli
xchg
or
bound
push
add
push
push
add
pop
ret
add
mov
sub
into
shrb
jno
incl
test
inc
js
in
xor
add
inc
fiaddl
incl
and
add
add
add
iret
outsb
add
in
dec
add
incb
scas
add
add
stos
iret
repnz
add
incl
in
pop
incb
mov
add
rolb
xchg
jnp
incl
xchg
mov
add
nop
cmc
adc
add
sub
dec
movsl
shll
incb
jae
cwtl
sbb
pop
add
stos
mov
out
push
add
pop
incl
clc
pop
add
popl
cwtl
push
insl
mul
mov
mov
movsl
cmp
testb
add
inc
add
ljmp
adc
mov
cltd
jbe
jne
push
call
add
mov
fstpt
add
add
test
mov
add
add
bound
mov
push
pop
add
out
pop
add
sub
lock
sub
sub
incl
lods
jecxz
daa
incb
xchg
cmp
dec
add
lret
incb
xchg
stos
das
je
lret
test
movsb
add
add
enter
push
add
dec
cmp
int
insl
add
dec
mov
scas
aas
pop
pop
add
cmp
adc
jns
incb
mov
fisttps
add
add
add
mov
lret
leave
mov
xchg
jecxz
mov
add
add
popa
mov
loop
adc
add
sub
xchg
jnp
add
mov
sbb
and
add
mov
push
xchg
ja
incb
das
test
xchg
ficompl
add
mov
and
add
add
add
and
add
sarl
and
add
cwtl
cmpb
incl
sbb
xchg
lret
add
ret
cmp
stos
mov
sub
int3
int3
bound
mov
in
out
nop
push
incb
stos
xor
add
adc
add
aad
aad
inc
add
sbb
xchg
insb
add
push
outsl
jno
pop
xor
add
mov
incb
xor
add
jo
push
pop
mov
xchg
xchg
imul
sahf
test
incl
jle
test
jge
incl
fwait
jl
pop
mov
jl
add
data16
adc
add
movsb
cld
add
add
hlt
decl
add
stos
jo
popa
ret
nop
fsts
incb
test
mov
loop
add
add
int
leave
test
pushf
inc
dec
add
insb
add
push
mov
pop
add
sub
incb
or
fucomi
rcrl
in
ja
lcall
add
incb
repz
pushf
adcl
incb
cld
add
mov
sub
add
jo
xor
add
xor
xor
add
lods
sbb
and
add
add
pop
add
cmpb
add
or
aaa
incb
sbb
pop
aam
or
xchg
xorl
push
or
adc
add
jo
dec
add
leave
dec
loop
incb
adc
add
cmpsl
and
add
dec
cmpsb
repz
add
add
add
push
incb
lret
dec
cmp
incb
out
incl
adc
add
cs
movsl
arpl
cmp
test
incb
dec
andl
mov
push
incb
pop
add
incl
sub
inc
add
cmp
scas
cli
sbb
inc
add
incb
movsb
scas
add
add
add
add
push
add
xchg
popf
add
jns
fcomps
xchg
idivl
fldcw
mov
incb
cmp
sbb
fwait
mov
shlb
add
incl
data16
incb
cmp
push
add
cld
test
mov
add
or
add
ret
mov
popf
fnstsw
ja
and
add
push
incb
or
fdivs
incl
mov
lea
incl
cmpsb
sbb
add
jae
xor
add
incb
insl
and
add
and
pop
add
decb
movsb
sub
xchg
dec
add
out
cmp
shr
fsts
daa
incb
xchg
int3
dec
add
testb
cmp
push
xor
incb
repz
mov
push
add
incb
sbb
jae
incl
push
mov
ret
add
incb
ljmp
add
inc
jmp
add
push
add
rcrl
adc
add
add
incb
into
ljmp
sbbb
add
rolb
repz
incb
sub
mov
pop
stc
xchg
xor
add
mov
push
add
add
add
incb
movsb
popa
mov
xor
xor
add
inc
add
std
std
mov
add
stc
lret
pop
incb
lock
add
cmpsb
mov
inc
test
push
add
add
incb
andl
cltd
stos
mov
ds
jle
mov
idiv
insb
add
dec
add
incb
scas
pop
add
add
push
jns
mov
incl
std
movsl
jae
xchg
cwtl
cwtl
les
incb
sbb
or
movsl
inc
add
nop
lret
add
popl
add
mov
incb
stc
ds
add
adc
add
pop
add
ljmp
adc
add
add
popl
jmp
mov
incl
stos
push
add
ljmp
add
cmp
cmpsb
or
sub
lahf
fsts
incl
iret
push
cmp
mov
loopne
add
aam
incl
fistpl
incb
hlt
jns
xlat
les
xchg
incl
loopne
incl
das
sub
pop
add
jns
add
aad
incl
divl
imul
hlt
xchg
in
push
adc
xorb
push
incl
pop
leave
jmp
push
aas
mov
in
sarb
push
add
dec
add
cwtl
sbb
scas
rolb
add
incb
jne
cmp
add
add
aaa
incb
pop
add
add
incb
inc
add
push
add
lea
incl
out
push
dec
sub
add
aas
lods
rclb
add
add
cld
push
mov
add
add
adc
add
incb
or
push
mov
push
add
incb
jmp
add
or
add
cmpsb
jg
add
rorb
add
push
dec
mov
movsb
incl
sti
push
add
mov
or
incl
incb
inc
in
mov
cmpsb
xorps
cli
icebp
push
xchg
pusha
add
or
incb
xor
add
add
incb
rcll
push
add
sub
incl
dec
jl
mov
lods
dec
add
jmp
add
outsl
mov
incb
imul
arpl
add
cmpsb
js
pop
add
incb
xlat
out
rorb
call
aam
mov
and
add
lcall
imul
jle
push
add
js
mov
pop
add
aad
or
xchg
sbb
adc
add
mov
pop
cld
mov
dec
add
addr16
pop
add
dec
leave
inc
inc
mov
ljmp
incb
icebp
xchg
incb
ret
push
add
pop
incl
sti
insb
add
incb
xor
add
incb
ret
lea
or
push
rol
sbb
sbb
div
lret
add
lods
inc
add
add
mov
add
add
and
add
pop
pop
incb
ja
out
add
add
mov
mov
dec
pop
repz
add
add
add
add
jo
xchg
scas
das
dec
add
xor
add
or
out
add
dec
sbb
pop
add
cli
imul
jnp
add
add
incb
push
incl
arpl
inc
mov
lock
add
lods
gs
push
add
out
add
into
inc
incb
or
cltd
sbb
pop
push
add
outsl
mov
add
fsubrs
jmp
incl
xchg
insl
cmpsl
add
add
push
incb
pop
add
or
cmp
mov
lods
jmp
add
add
mov
incb
cs
mov
jecxz
jge
mov
cmpsl
out
sbb
pop
popa
mov
jbe
cltd
push
push
sub
add
incl
inc
add
mov
cmc
incb
pop
jo
inc
adc
add
xchg
add
daa
incb
jmp
incb
cmp
sub
pop
incl
pop
add
add
clc
mov
insb
add
add
add
incb
iret
arpl
add
pushf
pop
push
add
jnp
rcr
repz
sub
incl
outsb
add
add
frstor
push
add
mov
insb
add
fsts
mov
out
add
add
inc
add
aas
rcll
incl
fimull
push
add
push
mov
add
and
add
incb
jae
out
aad
add
out
cmp
add
add
incl
adc
add
add
and
add
push
dec
add
sbb
push
popa
jle
and
add
dec
pusha
add
xchg
les
add
add
add
incb
xchg
jae
leave
pusha
add
incl
adc
add
std
in
xchg
add
add
xchg
dec
add
test
mov
push
add
outsb
add
add
fidivs
das
cmpsl
pop
jae
and
add
mov
lods
cmp
stc
aas
sbb
mov
jg
or
mov
add
ja
add
add
add
out
in
pop
mov
add
sbb
mov
incb
adc
add
add
cmp
rorb
adc
add
pop
incb
mov
and
add
in
imul
aas
clc
push
add
incb
fiaddl
add
stos
xchg
add
add
incb
gs
adc
add
add
add
fs
pop
incb
add
add
sub
scas
pop
add
aas
lret
sbb
testb
popf
add
add
add
add
xchg
in
jle
out
pusha
add
out
das
dec
add
popf
stos
insl
hlt
incb
push
add
mov
in
mov
incb
sub
sahf
jmp
dec
add
xchg
incb
decb
push
incb
cmp
add
add
sub
and
add
cltd
pop
jmp
jmp
imul
int3
and
add
fwait
clc
jg
add
into
cli
ljmp
and
add
leave
mov
xor
add
and
add
out
push
incb
je
mov
incb
cmp
call
add
daa
incl
rolb
stc
cmp
add
cmp
xchg
mov
add
incb
cmp
daa
incb
adc
add
add
das
mov
add
incl
adc
add
add
cmp
add
add
add
adc
add
add
daa
incb
and
add
incb
xchg
pop
cmp
sahf
jle
int
add
add
incb
mov
incl
xchg
arpl
add
dec
add
inc
add
hlt
imul
lods
sbbb
add
push
incb
jmp
incl
incl
in
outsl
in
sar
pop
push
cmp
jle
mov
lock
dec
dec
in
incl
add
dec
adc
add
jmp
and
add
xlat
mov
roll
jb
adcl
mov
add
add
jg
mov
add
ret
jb
sbb
add
add
outsb
add
xor
cli
jbe
cwtl
out
sbb
add
add
shrd
aas
pushf
in
arpl
add
dec
add
add
add
mov
add
push
add
add
add
push
add
inc
and
add
sti
incb
inc
lods
scas
and
xchg
cmp
pop
cmc
in
incl
sahf
aas
mov
sbb
jl
push
add
imul
out
jp
add
add
rcrl
fistl
mov
sub
push
mov
daa
incb
subl
inc
add
mull
incb
pop
dec
add
incb
add
add
shrb
add
sub
lahf
inc
jle
pop
jnp
inc
add
incb
mov
dec
int
fistpl
and
add
std
mov
incb
fcomps
xchg
dec
xchg
add
add
push
incb
inc
add
pop
incl
adc
ds
incb
incl
or
push
mov
cwtl
jne
incb
xor
add
xor
add
or
incb
clc
push
add
incb
or
add
add
in
scas
add
add
add
insl
or
call
incl
push
add
incb
bound
mov
add
orb
fcmovb
hlt
pop
dec
data16
add
add
add
add
add
incl
outsb
add
or
incb
rclb
incb
sbb
shl
popf
xor
add
xchg
and
add
push
repz
incb
imul
test
lcall
or
add
add
incl
inc
add
push
add
incb
nop
in
test
add
cmp
daa
incb
inc
add
jge
push
cmp
xor
add
dec
sub
gs
incb
loop
and
add
adc
add
incl
xchg
jo
mov
sti
divl
lock
and
add
aaa
incb
pop
pop
incl
rcrb
into
rcll
movl
add
add
incb
push
add
adcl
xchg
mov
pop
mov
add
xor
add
add
ja
push
incb
insb
add
add
add
incb
into
dec
out
adc
add
xor
add
add
add
das
pop
das
and
push
add
jo
loop
incb
dec
sub
mov
add
imul
daa
incb
sti
std
shlb
adcb
sub
jmp
or
cltd
iret
jle
xchg
incb
jge
mov
mov
icebp
sub
or
iret
jg
push
add
pop
fld
ja
add
fistpll
xchg
pop
add
and
add
incb
xlat
test
mov
jbe
dec
add
incb
test
incl
push
incb
js
push
add
movsl
sbb
add
add
test
xor
add
cwtl
pop
jno
pop
add
add
add
incl
add
push
add
incb
sti
das
clc
mov
dec
nopl
roll
incb
sbb
xor
add
xchg
popa
mov
sbb
mov
push
add
xor
add
shlb
add
pop
xchg
xor
add
add
incb
test
incl
cmp
add
incb
dec
add
popf
mov
mov
outsb
add
sbb
hlt
lret
clc
pop
mov
test
add
and
add
add
xor
add
jg
incb
dec
push
add
dec
add
in
das
sbb
jl
xor
add
or
insl
push
or
in
dec
add
incb
mov
add
incl
mov
add
sub
dec
add
sbb
push
add
incb
enter
incb
aam
out
test
lock
xchg
incl
pop
cwtl
cmp
loopne
add
sbb
incl
icebp
dec
pop
push
incb
das
cs
fbld
incb
jnp
push
add
add
incb
aam
sti
sti
mov
and
add
incb
push
add
mov
ja
in
xchg
xor
add
pop
add
incb
mov
rcll
sub
std
repnz
sbb
mull
popa
fiadds
lods
data16
lcall
sub
dec
add
cltd
or
inc
mov
add
add
incb
pop
insb
add
scas
jp
sub
xor
add
testb
jp
pop
add
or
incb
int3
mov
cld
push
mov
je
jo
inc
imul
add
add
xchg
xor
add
xor
add
sbb
cmp
out
cltd
mov
mov
jge
incb
pop
incl
xchg
gs
incl
add
addr16
add
inc
and
add
sbb
div
mov
and
add
mov
test
adc
add
add
xor
add
incb
call
add
add
push
incl
mov
add
mov
mov
mov
inc
idiv
fimuls
xchg
loope
cmpsb
data16
mov
add
mov
pop
in
mov
incl
mov
add
sub
mov
xor
add
mov
jg
lea
cmpsl
sti
icebp
in
popa
mov
rcl
std
insb
add
incb
xchg
jnp
add
push
incb
inc
add
incb
add
mov
push
incb
inc
add
or
incl
mov
fwait
movsl
sahf
or
dec
dec
add
push
add
or
xchg
popf
loop
add
out
or
outsb
add
incb
push
add
push
incb
or
dec
add
out
push
sbb
xchg
mov
add
jae
add
push
incb
call
add
sub
and
add
incb
lea
add
incb
mov
jg
pop
add
sbb
rolb
aas
jne
lahf
sti
fidivrs
add
jb
xor
add
das
or
xchg
aas
outsb
add
incb
stos
push
add
leave
push
movd
add
add
add
and
out
lahf
pop
icebp
cmp
add
sub
jno
repz
sub
shll
incl
pop
repnz
test
xchg
addr16
add
add
incb
sub
push
clc
adc
add
sub
outsl
push
inc
jge
xchg
or
call
enter
add
scas
mov
inc
add
incb
out
pop
mov
add
into
pop
add
add
mov
add
incb
incl
repnz
test
mov
incl
or
fcmovu
or
and
add
lret
incb
hlt
test
pop
cwtl
pop
add
inc
add
sbb
fldcw
icebp
in
add
add
in
ljmp
inc
add
sbbb
dec
add
dec
fsubrp
inc
add
add
in
mov
jo
das
bound
in
incl
or
bound
add
cltd
inc
add
jae
mov
fsubrp
lea
lods
adc
add
push
pop
add
xor
add
add
pop
add
incb
pop
jecxz
sbbl
cmc
data16
add
add
add
clc
cmp
enter
xor
and
int3
sub
pop
push
add
xchg
jb
mov
out
add
movl
sub
jecxz
sub
adc
add
jmp
xchg
sbb
subl
sti
adc
add
int
frstor
or
push
idivb
je
jne
mov
add
xor
push
add
incb
test
scas
lea
incb
std
mov
add
add
icebp
lret
mov
and
add
incb
mov
xor
add
push
cmpsl
clc
mov
sbb
incb
mov
inc
add
pop
add
incb
dec
add
add
incl
add
add
push
incl
leave
or
add
stos
xchg
pop
add
mov
add
add
xor
add
inc
add
mov
xlat
in
mov
jmp
in
mov
and
add
mov
add
jb
test
in
fiadds
aaa
incl
mov
cli
in
pop
jno
add
add
incb
mov
push
add
cmp
incl
cmc
fwait
arpl
dec
mov
mov
add
cmpsb
mov
add
iret
ret
clc
xor
add
xchg
mov
jns
cmc
push
incb
cld
lock
into
lods
dec
add
cmpsb
sbb
push
xchg
adcl
add
mov
sbb
pop
fmul
test
add
add
jae
incb
jae
add
jnp
loope
add
jne
add
loopne
sbb
push
pop
addr16
add
mov
popa
mov
push
dec
add
jge
nop
dec
fsubl
incb
cltd
out
out
push
incb
fs
cmp
jge
sti
loope
add
and
add
and
add
add
add
std
mov
jno
movsl
sti
stc
mov
out
ficompl
add
add
hlt
cmp
sti
cmp
mov
sbb
testl
xchg
insl
push
add
add
hlt
mov
incb
xchg
cmp
mov
incb
or
popf
cmp
mov
incb
fbld
incb
rolb
or
into
cmc
inc
xchg
mov
pop
sub
and
add
stos
cmpsl
je
mov
imul
add
add
pop
out
add
add
jg
add
pop
add
add
popf
sub
jp
lcall
incb
sub
out
push
add
lods
out
jmp
out
sbb
sub
rcrb
mov
cli
mov
ja
add
add
outsl
mov
fcompl
sub
add
mov
bound
inc
popa
adc
xor
add
popa
jbe
cmp
mov
push
sbb
mov
icebp
jp
jmp
mov
xchg
subl
jne
incb
jg
sub
jns
add
add
add
incb
jle
icebp
or
mov
add
pop
add
add
inc
add
add
add
xor
add
cwtl
rcl
jno
xor
add
in
lret
jle
xchg
jnp
pop
incl
div
fldlg2
pusha
add
incb
push
mov
pop
shll
das
ljmp
push
add
mov
sar
cwtl
data16
inc
add
add
add
mov
bound
or
push
incb
inc
jnp
incl
and
clc
neg
cmp
js
cmpb
add
and
add
jae
int3
fnstcw
push
add
rorl
add
fsubrl
cmc
in
mov
add
cmp
leave
push
sub
incb
out
and
add
add
push
dec
add
mov
sub
mov
jae
add
incb
fsubs
int
fld
jecxz
incl
loope
add
add
jns
add
movsb
hlt
push
add
incb
mov
call
xor
add
incb
aaa
incb
aad
cmc
cmp
lahf
mov
add
incl
pop
dec
add
add
incb
adc
add
je
xorb
in
roll
or
mov
xchg
negb
and
add
add
add
cli
dec
add
cmp
shlb
incb
push
stc
mov
movsl
aad
sub
xor
add
xchg
push
push
incb
mov
in
add
outsb
add
add
incb
rcr
roll
cmp
xchg
xor
add
add
mov
popa
sbb
or
incb
mov
dec
add
add
cmp
add
cld
push
int
lods
std
or
incl
add
movsb
hlt
sub
insb
add
cmp
lea
inc
inc
add
shll
incb
sbbl
add
xlat
jo
dec
add
add
in
lods
xchg
pop
incb
inc
add
cmp
insb
add
mov
or
fstpl
sbb
xor
add
and
add
popf
sub
add
incb
sbb
add
incb
test
add
jb
lea
add
add
mov
pop
add
incb
pop
xlat
pushf
push
incb
xchg
sbb
cmp
dec
popf
lods
pusha
add
dec
add
enter
add
call
add
fimuls
incb
roll
jo
push
add
cli
int3
in
add
add
adc
add
clc
push
mov
leave
xor
add
pop
add
incb
mov
add
pop
mov
add
xchg
xor
add
incb
push
xchg
xor
add
popf
lea
lahf
dec
add
cli
btsl
mov
rcrb
inc
add
add
stos
outsb
add
push
fbld
add
xor
sub
addr16
mov
adc
add
pop
insb
add
add
adc
jp
mov
add
les
incb
lods
bound
mov
fsubrl
sbb
jl
mov
add
inc
add
loope
stos
lret
add
sti
dec
xchg
mov
mov
hlt
shl
inc
add
cmc
lcall
mov
mov
aas
popf
push
add
or
cmp
das
inc
add
jecxz
lahf
add
add
add
xchg
sub
jo
cld
je
stos
out
inc
add
or
incb
push
add
incb
shlb
pop
add
push
or
pushf
inc
add
imul
pop
add
adc
add
adc
add
lret
xchg
lahf
or
mov
cmc
dec
lret
xorb
add
add
sub
shrl
aaa
incb
jnp
sbb
incb
std
jno
out
sahf
dec
xchg
push
add
bound
daa
incb
sbb
add
outsb
add
loope
mov
mov
sbb
and
cmp
push
incb
dec
test
add
cli
movsl
sti
in
push
mov
cmp
incb
add
add
add
imulb
imul
incb
dec
add
mov
sti
div
je
cmp
or
add
add
incl
dec
rcl
call
and
sbb
pop
add
inc
add
xchg
icebp
push
add
mov
add
jl
addr16
xor
add
incb
dec
in
daa
incb
mov
mov
lcall
cmp
movsb
and
add
add
push
add
add
lea
imul
jno
add
bound
or
sub
inc
add
add
incl
dec
add
dec
xchg
pop
add
jmp
inc
add
incl
rorb
xchg
dec
add
incb
in
data16
sub
add
add
jne
inc
add
add
xor
add
add
lods
stos
hlt
aas
mov
mov
inc
mov
addr16
add
add
les
fimuls
popa
test
insl
mov
sub
popf
call
add
add
incl
adcl
add
sbb
inc
stos
pop
add
lahf
clc
and
add
incb
shrl
mov
scas
popf
mov
add
in
add
add
push
add
add
add
add
mov
cmpsl
ret
test
dec
add
inc
add
incl
scas
ret
cwtl
sarb
adc
add
aas
faddl
das
rcrb
add
add
push
add
dec
add
sub
mov
mov
faddl
push
cmp
add
add
cwtl
lcall
addr16
incb
pop
add
mov
add
add
cmpsb
les
fdivs
add
data16
hlt
mov
add
pop
or
sub
jecxz
sbb
cmc
insb
add
and
add
movsl
push
mov
add
add
xlat
data16
dec
add
add
add
add
add
dec
sbb
sarb
fisubrs
fcom
xchg
repz
jb
push
inc
add
add
fstp
adc
add
out
add
add
add
jmp
incb
or
ljmp
add
add
fldcw
loopne
and
add
add
push
lods
dec
add
adc
add
or
lret
xlat
stc
jb
in
add
add
sbb
add
mov
cmpsl
mov
jne
add
add
test
push
rolb
or
outsb
add
add
xchg
xor
jne
add
dec
add
add
incb
ret
jp
dec
xchg
sbb
mov
insl
fidivl
out
rolb
incl
lret
xchg
cld
lahf
ds
daa
incb
mov
js
stos
dec
add
mov
add
pop
incb
adc
add
incb
mov
add
pop
add
incb
xor
add
add
pop
bound
push
incb
test
add
jo
dec
cmp
insl
pop
add
add
cmp
test
add
add
pop
ror
cltd
sub
int
in
sbbl
incb
lods
xchg
dec
add
xchg
dec
jmp
in
scas
enter
push
cmp
incb
pop
add
jp
mov
push
incb
test
incb
cmc
push
add
add
mov
add
add
mov
add
incl
jo
mov
add
fdivrs
cmp
cwtl
lods
arpl
add
add
incl
xor
mov
adc
jae
stc
adc
add
jg
add
jmp
lret
mov
sbb
add
jnp
mov
hlt
sbb
cmp
mov
incb
mov
push
add
cmc
scas
sub
loope
fmuls
add
add
aas
aam
or
adc
add
add
pop
add
add
add
hlt
loopew
imul
cmp
or
add
test
add
in
push
add
and
push
shll
incb
iret
incb
xlat
aaa
incb
push
cltd
jae
add
incb
lret
in
cmp
mov
xor
incb
cmpsb
mov
adc
add
push
incb
mov
addr16
and
add
test
lods
cmp
xchg
add
add
incb
pop
incb
incb
xchg
les
test
incb
cwtl
push
incb
imull
mov
mov
incl
sub
jne
jns
incb
lret
xlat
dec
add
rcrl
adc
add
jge
jnp
jge
incb
les
incb
cmp
rcrb
mov
add
out
mov
incb
decb
inc
xchg
pop
incb
fisttps
shrl
add
add
add
imul
incl
and
shll
incb
into
divl
incb
add
pop
add
incl
inc
xor
add
jp
loope
incb
sub
add
and
add
add
sahf
xchg
cwtl
pop
xchg
jg
sbb
incb
inc
add
mov
incl
lods
sbb
loop
add
sub
fucomip
sub
sbb
sbb
inc
add
incl
mov
dec
add
push
add
inc
or
jbe
dec
add
pop
add
xchg
js
jo
loopne
jbe
xor
add
add
incb
cmpb
or
incb
jbe
loop
mov
incb
sbb
rol
mov
add
sbb
adc
add
lock
dec
sbb
repnz
sub
add
incb
jb
xor
add
incb
sub
mov
inc
in
incb
dec
sar
out
push
pop
incb
add
add
andb
add
add
incl
xor
add
push
incb
imul
add
lods
mov
stos
inc
add
add
incb
sahf
xor
add
push
add
loope
jmp
push
cmpsl
aam
add
add
incb
lret
out
incl
xchg
xchg
sti
scas
pop
add
cwtl
jne
cmp
into
add
add
incb
dec
incb
fiaddl
dec
rcll
add
mov
bound
adc
add
cld
cmp
pop
add
incb
aaa
incl
int
stos
lcall
mov
data16
cmp
fnstenv
add
add
bound
fmuls
add
inc
xor
add
incb
dec
mov
hlt
xchg
sub
add
jl
mov
mov
cmp
sub
add
mov
dec
add
mov
add
fldcw
xchg
loope
lret
add
shlb
punpckhdq
std
dec
add
mov
push
add
mov
dec
add
sub
fwait
xor
add
add
aam
add
sub
or
add
sub
inc
mov
in
aas
sub
imul
add
add
mov
add
incb
lret
fucomip
push
incb
mov
xor
add
lcall
add
add
add
add
incl
mov
incb
orl
sub
pushf
cmp
int
test
fistps
incb
std
push
scas
out
fdivrs
incb
movsl
adc
add
out
and
add
pop
add
incb
lcall
mov
sub
or
int
out
fimull
add
or
or
or
jne
inc
add
outsb
add
add
and
add
stos
stos
pop
incb
jnp
mov
mov
cld
leave
test
je
movsl
js
mov
add
mov
roll
incb
in
sahf
aaa
incb
pusha
add
jmp
orl
popf
mov
add
in
lcall
push
add
ja
dec
sarb
mov
lock
jbe
push
add
xor
add
dec
add
inc
mov
incb
out
nop
add
add
repz
incl
rol
inc
mov
incb
test
add
mov
jecxz
dec
add
out
mov
or
pusha
add
dec
in
add
add
adc
add
mov
incl
pop
add
push
incb
lds
add
repnz
add
jl
notl
jg
aas
stos
or
leave
enter
jbe
mov
incb
dec
mov
mov
add
incb
mov
mov
inc
add
incb
hlt
ret
incl
xchg
jp
in
in
mov
mov
xlat
jge
test
incl
pushf
pop
add
xchg
das
push
add
lret
cmp
jmp
add
test
or
aaa
incl
add
add
das
cli
xchg
mov
mov
add
test
mov
add
lcall
incb
pop
xor
add
jae
add
out
add
popa
sub
aaa
incl
jns
incb
xor
add
add
add
push
mov
dec
cmp
pusha
add
aas
test
les
inc
lea
add
shrl
add
das
and
add
int
insb
add
incb
insb
add
lods
int
add
add
imul
add
lret
outsl
pop
add
pop
add
test
jne
incb
sti
cmp
jns
add
ret
dec
fwait
add
add
incb
andl
mov
add
xchg
pop
xchg
stc
mov
popf
push
incb
aam
insb
add
incl
inc
lea
incb
loop
add
xchg
bound
outsl
push
add
add
add
inc
or
or
jb
inc
adc
add
xchg
dec
stc
jno
add
xchg
inc
add
sub
jge
add
dec
add
incb
ret
popa
pop
mov
incb
loopne
incb
shlb
push
sub
aas
cwtl
mov
mov
cmp
and
add
incb
mov
add
add
jle
imul
jge
mov
lods
sbb
mov
dec
lds
or
ret
ret
adc
mov
fcoml
add
add
incb
adc
add
inc
add
ljmp
fwait
sti
sbb
and
add
xchg
sbb
add
stos
popf
hlt
dec
mov
mov
idivl
cld
mov
incb
ja
mov
xchg
pop
in
add
add
testl
push
jmp
cwtl
sub
jp
mov
incb
sbb
icebp
movsb
cmp
rolb
pop
js
xchg
cmpsl
jg
incb
or
scas
fcoml
xchg
fwait
push
add
lahf
mov
add
andl
add
incl
cwtl
push
or
arpl
in
lods
jno
movb
add
inc
add
aad
and
nop
cld
mov
pop
mov
enter
das
or
aaa
incb
lret
incl
incb
push
jle
mov
add
incl
xchg
sub
inc
neg
xor
add
incb
or
les
dec
popa
popf
sub
incb
loope
add
incl
dec
or
sarl
mov
outsl
test
dec
add
add
sbb
add
outsl
stos
clc
dec
add
add
cwtl
add
add
add
lods
imul
add
sub
dec
packsswb
sub
push
jmp
add
aas
dec
add
je
clc
pop
jbe
in
ret
pop
add
sbb
dec
shr
jae
sub
lea
cmp
fsubrl
add
add
incb
shlb
add
add
or
cwtl
mov
incb
push
incl
and
add
incb
xchg
incl
jnp
add
sbb
adc
add
enter
and
add
mov
repnz
mov
pushf
lret
imul
xor
add
xchg
push
repz
lods
add
add
xor
add
push
sub
mov
add
add
add
scas
ret
cli
push
incb
and
add
or
adcb
sbb
lret
mov
add
add
push
sbb
setnp
adc
add
mov
movsb
add
add
xchg
movsb
add
inc
sbbl
pop
int3
into
cmpsb
mov
incb
addr16
or
das
std
faddl
incb
cmpsb
mov
mov
jecxz
dec
add
add
mov
mov
incl
insb
add
xchg
add
add
inc
jmp
insl
ja
bound
dec
andb
or
add
incl
cwtl
and
outsb
add
pop
add
add
arpl
incb
dec
dec
dec
adc
add
incb
loope
repnz
add
ret
nop
movsb
outsb
add
incb
sysret
incl
mov
add
xor
add
xchg
fs
mov
add
and
add
add
add
and
add
push
mov
sbb
shr
adc
add
nop
xor
add
adc
add
add
dec
add
add
aam
incb
popa
hlt
sub
sbb
jnp
incb
mov
sbb
hlt
mov
add
out
incb
xlat
loopne
out
add
outsb
add
icebp
push
incb
je
in
orl
incb
sub
pop
push
cmp
xchg
aad
pop
incb
mov
add
data16
incb
out
push
fisttps
add
mov
jg
subb
mov
fistpll
andb
dec
add
incb
jg
incl
xor
add
incb
lods
mov
add
insl
mov
push
add
add
add
incb
into
icebp
xchg
ja
mov
incb
jne
sahf
fcoms
sub
pop
add
mov
add
into
mov
sbb
iret
test
add
add
incb
jge
incb
mov
jbe
push
incb
nop
mov
add
push
fsubrl
push
add
push
add
xor
add
arpl
outsl
mov
inc
add
jb
test
fisttpll
add
adc
sbb
incb
jl
call
cwtl
jg
cmp
sbb
lods
sub
popa
out
xchg
sub
incb
rcrb
sarb
and
add
cwtl
add
add
les
test
push
add
fildll
mov
js
dec
add
scas
aam
jp
fwait
adc
add
add
incb
cmp
mov
xor
aam
incl
scas
cmp
data16
and
add
incb
dec
push
sub
clc
arpl
xor
add
add
ret
add
add
add
add
test
add
pop
shlb
xchg
fwait
jae
incb
jecxz
mov
repnz
add
dec
popf
mov
lods
jmp
shll
loop
incb
pop
incb
add
add
out
xor
add
inc
push
mov
in
loop
pop
add
movsl
ljmp
sub
mov
leave
pop
dec
mov
push
into
mov
pop
add
add
mov
aaa
incb
incb
mov
add
incb
fisubl
popf
pusha
add
incb
xlat
jnp
push
incb
xor
inc
sub
cld
cmp
xlat
add
mov
incb
mov
add
arpl
pop
fdivs
or
push
xchg
repnz
xchg
ret
add
add
test
xchg
cmp
inc
add
sbb
incb
stos
bound
xchg
in
test
adc
mov
add
popf
add
add
incb
lahf
xchg
jne
incb
jno
pop
lock
jb
add
lods
dec
add
jae
push
incl
add
add
inc
add
push
pushf
ja
incb
pop
cmpsb
data16
xor
sub
in
lret
pop
add
ret
sti
dec
add
lods
sbb
incb
scas
mov
mov
and
add
push
shlb
incl
imul
fcompl
dec
mov
cmp
jecxz
mov
lods
mov
shl
popf
mov
xor
add
bound
test
incl
mov
fisubrl
push
incl
jmp
cwtl
insb
add
pause
mov
add
mov
or
push
jmp
arpl
shl
incb
call
test
add
push
add
sarl
sbb
test
add
mov
clc
sbb
dec
xchg
and
add
incb
cmpsl
inc
cmp
sbb
testl
add
add
mov
adc
add
jb
cmpsl
push
incb
lret
incl
test
add
incb
sub
cmp
push
incb
adc
add
incb
shrl
pop
push
adcb
lret
mov
incb
cld
sbb
incl
sbb
add
add
xchg
lds
incl
daa
incb
pop
add
dec
mov
jg
and
add
sbb
mov
push
add
or
incb
add
incl
pmulhw
repz
dec
or
lods
dec
add
add
xor
add
incl
jmp
mov
sahf
lcall
jg
repnz
and
add
push
cmp
mov
add
mov
scas
jecxz
mov
add
incb
fcomps
push
jno
add
add
push
add
data16
push
add
cmpl
mov
add
inc
add
dec
add
sbb
mov
incb
dec
add
add
mov
sbb
cmpsl
sub
ljmp
pop
add
add
xchg
incb
movsl
shr
loopne
xor
add
notb
incl
stc
push
mov
scas
mov
xor
add
stos
je
push
jp
out
sub
cmp
add
pop
add
mov
sub
mov
pop
add
adc
add
add
or
insl
jmp
add
xor
add
stc
mov
add
adc
add
add
fidivs
sbb
dec
pusha
add
xchg
and
add
add
inc
push
add
in
in
incb
out
dec
lcall
cli
in
sub
incb
insl
icebp
out
aad
add
add
outsb
add
add
inc
mov
mov
jbe
xor
jb
pop
pop
incl
loope
add
fxch
inc
jl
imul
out
and
movsb
stc
lea
pop
and
add
lods
sub
addr16
add
data16
dec
add
jns
mov
aas
push
mov
stos
mov
add
jbe
lcall
sub
add
bound
aaa
incb
call
pusha
add
add
sbb
jae
incb
mov
xchg
add
push
incb
xchg
je
pop
add
pop
add
incb
xor
add
outsl
and
add
adc
add
add
filds
xor
add
xchg
cld
add
add
adc
add
add
sub
jnp
push
inc
add
add
add
adc
add
imul
fldl
push
pop
incb
xor
stc
adc
add
incb
xchg
das
mov
add
push
add
cmpsl
bound
mov
add
dec
inc
repz
add
add
incb
pop
incb
insl
mov
aaa
incl
adc
add
loope
adc
incl
bound
aaa
incb
cltd
xorb
hlt
incb
push
add
sti
pop
add
add
lret
inc
mov
cmp
add
insl
fnstsw
xchg
sbb
cld
push
incb
sbb
mov
cwtl
cmc
rcr
mov
mov
incl
lahf
add
add
sub
mov
incb
in
xor
add
add
insl
push
add
cmp
incb
jbe
jns
push
test
pop
incl
jmp
add
filds
incl
cmp
add
data16
pop
add
incb
pop
add
clc
jge
jmp
add
add
add
outsl
dec
push
add
addb
jb
xchg
or
inc
xchg
cmp
add
add
push
incb
pop
mov
mov
incb
cmp
iret
incl
add
sub
adc
insb
add
das
cmpsb
jmp
mov
lds
mov
add
fwait
inc
add
or
adc
add
add
incb
cmp
jo
mov
out
dec
add
pop
lea
adc
add
add
scas
or
add
xchg
inc
add
das
je
add
add
fdivl
add
dec
add
add
aam
addl
incb
movsl
cwtl
fistps
sahf
mov
loop
add
add
inc
add
sbb
add
sub
pop
jmp
insb
add
xchg
incb
rcrl
shrl
xchg
jnp
pop
scas
xchg
mov
add
pop
jmp
add
incl
aas
adc
sbb
add
or
add
add
mov
incb
loopne
les
add
hlt
mov
incb
aad
add
incb
lods
fadd
adc
add
adc
add
sbb
hlt
imul
add
incb
out
rclb
lds
add
pushl
or
mov
add
add
xorl
incb
mov
aam
scas
shrb
incb
sbb
orl
out
cmpsl
mov
mov
add
or
adc
add
sub
push
add
push
loop
incb
jp
lahf
adc
add
add
inc
dec
add
add
add
add
xlat
xchg
lods
dec
push
add
xor
add
add
rol
sahf
nop
adc
incl
push
add
add
sbb
add
adc
add
incb
fcompl
sbbl
outsb
add
incl
jp
pusha
add
ds
divl
out
add
xchg
dec
inc
add
sbb
outsb
add
xchg
idivb
push
add
pop
add
add
ret
dec
add
add
incb
mov
incb
jnp
subl
xchg
test
cltd
ret
arpl
shll
incl
rcrl
dec
add
adc
add
incl
push
incb
fbstp
loope
stos
jns
jne
jmp
lahf
cmp
incb
fcmove
incb
inc
add
mov
add
jge
adc
add
incb
adc
add
shlb
add
push
movl
sbb
jnp
mov
jmp
lahf
bound
pusha
add
inc
cli
add
add
incb
sub
pop
outsl
adc
xchg
filds
incl
and
add
sbb
xor
add
and
add
idivb
add
iret
loope
inc
cld
add
add
incb
data16
sub
ljmp
add
add
add
loopne
pop
incb
sbb
or
repnz
incb
sbb
mov
jno
mov
or
add
add
adc
add
subb
lds
bound
xlat
int
inc
lods
dec
mov
sbb
int3
mov
shrb
incb
sbb
add
jno
sub
pop
add
add
loop
add
add
imul
repz
xor
add
bound
jg
incb
aad
outsl
jle
push
fcoms
incb
mov
add
sub
fcomi
ret
pop
or
incb
push
add
js
insb
add
mov
add
add
iret
cmp
inc
sahf
adc
add
mov
incb
push
bound
inc
popa
and
add
and
add
incb
stos
push
push
incb
movb
jae
ror
and
add
loope
movsb
mov
sbb
ljmp
add
cwtl
sub
outsb
add
add
sbb
insb
add
cwtl
cmpsb
in
add
add
xchg
mov
incb
stos
cmp
push
add
stos
pop
push
add
incl
xlat
je
sbb
pop
add
pop
push
add
decb
push
add
testb
loope
bound
jbe
popa
in
and
add
mov
std
lds
faddl
add
cmp
and
add
pop
or
or
in
jbe
push
add
sar
loope
jp
dec
add
add
incl
jp
js
out
add
mov
mov
pop
mov
push
pop
incb
fwait
fwait
leave
add
incb
je
push
xor
add
incb
aas
mov
add
sub
add
mov
sar
inc
add
leave
jae
mov
incb
add
adc
add
pop
incl
lock
add
pop
repnz
adc
add
jne
push
incb
sahf
incb
test
cmp
js
cli
cwtl
imul
add
incl
fmul
mov
add
add
pop
incb
mov
jbe
test
jge
incb
lods
push
add
imul
xchg
sbb
int3
daa
incl
xor
add
movlhps
add
stos
mov
incl
sub
jmp
incb
in
add
inc
add
leave
pusha
add
sub
data16
inc
mov
incb
addb
ret
notl
jp
cmp
incb
aas
loope
idivb
mov
or
mov
aam
incb
mov
subb
jge
xchg
xor
add
mov
mov
add
pop
incl
xlat
int3
iret
stos
pop
icebp
jle
stos
add
add
xor
add
lods
xlat
jl
loope
add
incb
movsl
xor
inc
inc
cwtl
mov
mov
psrld
jbe
jg
push
out
pop
add
sub
cmc
and
add
jno
add
add
iret
lods
movsl
and
add
xchg
push
add
shl
incl
gs
add
add
incb
int
add
add
incl
mov
test
add
repz
add
das
addl
lcall
test
xor
add
inc
add
xchg
pop
add
shrd
outsl
test
arpl
add
insb
add
incb
fmull
jl
subb
adc
jb
xor
add
pop
push
add
cmp
ret
add
add
or
cmp
dec
icebp
cli
mov
add
add
fwait
cmp
shll
add
xchg
jns
sub
xor
add
inc
mov
mov
add
inc
add
add
pop
inc
faddl
add
insl
jp
fucomip
fnstcw
pop
loop
scas
cli
and
add
pop
add
xchg
adc
add
push
call
add
incb
push
incb
fstpl
add
in
aad
aam
incb
int
jecxz
aas
mov
xor
add
dec
add
incl
stos
aas
xchg
cmp
fsubrl
add
mov
push
add
add
cwtl
xor
add
push
add
incb
or
add
mov
leave
push
add
sbb
insb
add
add
add
incb
leave
dec
add
daa
incb
dec
aaa
incl
lea
incb
loopne
sbb
add
int3
add
sub
lock
mov
jae
negb
add
incb
dec
add
incb
pusha
add
outsl
sub
incl
daa
incl
insb
add
or
incb
popa
adc
add
rcr
pushl
incb
inc
scas
mov
incb
andl
dec
mov
add
add
mov
add
dec
add
mov
sbb
incb
imul
add
or
xrelease
push
incb
xchg
cmp
test
add
sbb
add
add
pop
sbb
pop
incb
decl
push
incb
jmp
add
inc
dec
add
sbb
add
pop
add
add
jmp
xchg
rorl
loope
pop
push
add
cmp
scas
push
repz
add
stos
loope
out
incb
push
add
add
sbb
mov
add
dec
add
incb
adc
add
and
add
add
fistl
loopne
add
mov
out
repz
incb
and
add
add
incl
scas
xor
add
add
sbb
in
dec
add
rorb
incb
stc
jns
mov
jle
dec
add
or
inc
add
xor
add
out
int3
mov
add
aas
pop
in
inc
add
incb
adc
add
add
std
inc
add
pop
add
and
add
out
mov
add
mov
stos
sbb
les
mov
jle
lret
jo
dec
add
push
push
add
aas
imul
mov
add
incb
mov
add
add
icebp
imul
cld
adc
add
cmovne
inc
add
incb
mov
add
add
incb
int3
sub
stos
adc
add
or
shlb
in
cmovb
sbb
dec
out
xor
add
outsb
add
bound
imul
cltd
clc
nop
xor
add
add
popf
sub
outsb
add
popa
jg
add
dec
aad
xchg
sbb
incb
sub
push
incb
div
mov
incl
hlt
test
add
add
add
aam
add
add
pusha
add
adc
add
hlt
lock
add
pop
incl
push
ljmp
adc
add
mov
fldl
incb
mov
cmp
sbb
in
xchg
arpl
xchg
sbb
repz
mov
or
incb
jno
incb
data16
push
add
pop
popa
xor
add
push
add
incl
movb
add
add
add
add
data16
jle
or
addr16
outsb
add
incb
lcall
call
mov
xchg
inc
cmp
scas
push
movlhps
add
adc
dec
cmp
mov
dec
add
push
imul
xor
xorb
leave
or
adcb
fisubrl
mov
iret
xor
add
dec
add
incb
jnp
jl
xor
add
and
add
incb
lds
incb
cli
rorb
shrl
sbb
and
lret
out
gs
incb
mov
loop
add
pop
gs
add
add
incl
add
add
jmp
fdivp
cld
pop
mov
out
pop
add
incb
inc
add
cmp
leave
mov
sbb
daa
incb
and
add
stos
int
add
add
cli
adc
add
mov
mov
cwtl
pop
cli
cmp
xor
add
add
imul
add
add
add
cmpsl
das
pop
incb
adc
add
ljmp
sub
dec
add
pusha
add
incb
sub
sub
mov
mov
add
add
mov
jae
add
mov
xchg
mov
jl
fdivs
pop
movb
test
std
dec
mov
add
pop
xchg
scas
adc
add
cmp
add
add
incl
sub
or
mov
aaa
incb
inc
add
mov
imul
adc
add
add
add
add
add
incb
sbb
mov
lods
mov
add
add
incb
cmpb
notb
incb
dec
add
incb
mov
add
scas
das
sarl
sub
cmp
mov
cld
scas
or
cmp
pusha
add
popf
test
add
insb
add
incl
in
pop
add
incl
mov
ljmp
xor
add
sbb
jmp
into
inc
add
lcall
dec
add
incb
jge
les
data16
incb
add
add
add
sbb
pop
incb
int
fnstsw
sbb
cld
fwait
xchg
sbb
ja
lods
or
incl
or
pusha
add
and
add
incb
mov
add
adc
add
shlb
ret
fdiv
mov
cmpsb
cmpsl
push
add
mov
add
push
incl
stos
dec
add
lock
loop
add
sahf
jbe
sbb
add
add
iret
in
jo
add
add
add
add
cli
add
insl
dec
fstp
push
add
daa
incb
fmul
push
fcomps
add
leave
xor
fisubrl
and
add
movsb
mov
incb
call
cmp
pop
incb
and
add
mov
xchg
mov
out
push
add
ljmp
mov
add
repz
or
in
and
add
add
mov
mov
int3
sub
and
add
add
push
test
rcll
sbb
push
or
lods
arpl
fbld
add
add
add
add
rorl
icebp
insb
add
dec
add
incb
adc
add
cmp
sar
lock
add
xlat
xchg
sbb
test
pop
ret
xor
add
mov
jmp
incb
pop
mov
mov
fsts
dec
add
lods
jne
les
mov
pop
add
add
rolb
bound
inc
add
add
in
test
push
add
adc
add
add
add
jnp
cltd
lret
iret
lret
incb
push
out
sbb
incb
into
stos
lods
xchg
fsubrp
dec
pop
incb
add
add
add
aas
sbb
add
and
incb
rorb
or
mov
in
jg
jnp
mov
jns
xchg
dec
add
in
repnz
add
incb
pop
pop
scas
test
mov
sbb
incb
dec
test
shrb
fwait
das
out
and
add
incb
fldt
jge
push
popa
add
add
or
loop
in
inc
or
ret
add
add
js
mov
add
or
add
fisttpll
add
dec
mov
xchg
mov
mov
incb
out
cld
fsubr
mov
sbb
incl
mov
enter
add
add
fcmovb
mov
add
add
add
add
xchg
or
add
cmpsl
incl
sub
add
cmp
push
add
push
incb
push
add
xchg
xchg
jg
adc
add
sti
out
aam
push
add
movsb
xchg
add
add
add
cmp
stos
mov
in
lds
iret
sbb
jo
mov
incb
les
add
cmpsb
xchg
lcall
jns
out
pop
incb
bnd
out
rolb
call
mov
out
mov
cmpb
dec
add
dec
add
incl
ljmp
add
lock
add
and
add
incb
lods
in
sbb
dec
enter
add
ljmp
mov
incb
xchg
leave
lret
mov
add
or
or
dec
mov
dec
imul
or
pop
add
outsb
add
cld
add
add
cmp
ljmp
mov
incb
bound
jle
ja
pop
add
pop
add
push
sbb
xor
add
outsb
add
mov
pop
incb
xchg
and
add
fsubrs
add
add
incb
dec
imul
subb
or
push
mov
test
inc
add
incb
in
jno
xchg
incb
loopne
rcr
cmp
cmp
incl
push
incb
call
add
add
incb
xchg
cmp
sti
mov
xchg
pop
xchg
sbb
insl
stos
mov
add
rorb
add
lret
into
xor
cwtl
movsb
aaa
incb
adc
add
incb
xchg
push
div
aas
add
pop
add
fidivrs
adc
incb
nop
jmp
enter
xchg
adc
add
and
add
incb
lods
popa
cmp
incl
jne
incb
xor
add
pop
xchg
fimull
incb
mov
lret
test
hlt
xchg
push
aas
mov
add
xor
add
addps
test
or
cmp
add
aad
incb
jae
add
incb
adc
add
mov
incl
add
add
cmp
push
mov
aaa
incb
cs
or
jae
cmp
add
sub
mov
add
mov
inc
add
sbb
cmpl
xor
add
xchg
sub
stc
fmuls
mov
pop
add
add
add
jae
add
add
incb
inc
add
add
xor
jbe
sbb
lock
enter
cltd
lret
pop
call
shll
lods
pop
cmc
movsl
ficoms
add
lock
pushf
add
add
pushf
pushf
icebp
roll
inc
add
clc
adc
add
xchg
cmp
loopne
push
add
push
add
faddl
xchg
or
sbb
mov
incl
in
jmp
lods
xor
add
incb
add
incb
and
sqrtps
jne
decl
or
sbb
xchg
lods
adc
add
incl
push
add
add
rcrl
inc
push
add
incl
dec
add
add
in
fsts
jecxz
push
xor
add
adc
scas
mov
add
stc
scas
pop
add
add
jmp
data16
sbb
add
into
imul
into
movsl
insb
add
fwait
daa
incl
sbb
dec
add
add
xor
add
xchg
or
mov
add
add
inc
add
das
popf
sub
ret
sub
jns
incb
sub
outsl
xchg
lret
sarb
das
push
insb
add
lahf
add
add
cld
clc
fisubs
mov
incb
sub
enter
sbb
adc
add
mov
ror
bound
inc
add
nop
xbegin
add
add
cli
std
xchg
imul
sti
add
sbb
add
pop
scas
aaa
incb
rol
mov
fidivrl
int3
xchg
stos
ret
or
pop
add
mov
lock
out
iret
pushf
test
inc
add
xchg
xchg
xor
in
push
jnp
xor
add
sbb
pop
leave
shll
add
incb
sbb
enter
sub
and
cmpsb
outsl
shll
mov
cltd
mov
add
mov
shll
xchg
loop
push
jne
add
cmc
mov
add
add
lods
test
incb
insl
add
add
inc
add
cmpsl
data16
ficompl
mov
add
add
bound
or
push
add
add
sbb
inc
add
incb
dec
imul
add
add
insl
shll
incb
stos
dec
add
inc
lret
adc
pop
incb
xor
add
add
add
inc
seto
incb
mov
int3
add
push
add
incl
dec
icebp
xchg
aad
lret
js
xor
add
xchg
inc
add
stc
fnstenv
push
incb
test
incb
incb
incl
mov
outsb
add
incb
fildll
add
add
incl
jno
bound
push
add
andb
add
pop
add
add
incb
xchg
ffreep
sbb
add
add
cwtl
iret
lret
movsl
fsts
push
incb
xchg
jns
xor
add
incl
mov
add
lret
jp
insb
add
pop
incb
addr16
test
add
insb
add
incl
push
jno
sub
hlt
pop
loope
dec
jecxz
repz
xor
add
jne
adc
add
mov
mov
add
lret
cmp
insb
add
lret
jae
sbb
push
dec
add
dec
add
das
lcall
cmpsl
aad
mov
imull
xchg
inc
add
add
data16
fcoms
incb
pushf
jo
or
add
xor
add
lods
rcrl
or
mov
sub
incb
ret
inc
pushl
incb
rcrl
test
inc
xchg
pshufw
mov
incl
sbb
ret
xor
add
add
fstpl
add
add
jae
incb
bound
jns
push
incl
and
add
incb
add
sarl
incb
add
add
jmp
incl
arpl
lcall
add
leave
sub
adc
add
jnp
xor
add
dec
push
incb
adc
add
jbe
jae
incl
pop
incb
andl
add
pop
incb
mov
incb
add
add
or
incb
cmc
fisttps
add
out
fiaddl
incb
outsb
add
imul
add
xor
add
and
add
add
aas
int3
scas
addr16
add
bound
jle
sbb
mov
icebp
xlat
in
test
sbb
incb
or
jns
notl
add
xchg
push
add
add
pop
in
jmp
push
sbb
add
call
pop
xchg
push
add
fisubrs
mov
inc
sti
or
incl
lock
shl
xchg
sar
icebp
in
test
add
incb
adc
add
push
incb
mov
add
add
add
test
add
loopne
incb
loope
incb
or
add
add
in
sar
arpl
das
fidivs
popa
int3
repnz
xor
add
push
fistpll
add
add
leave
clc
lahf
push
add
pushf
xchg
or
std
inc
add
incb
inc
lcall
push
add
xchg
xchg
inc
incb
adc
mov
test
xchg
adc
add
add
movsl
dec
add
fwait
add
add
das
dec
add
jecxz
jl
test
incb
in
popa
bound
mov
xchg
inc
add
insb
add
incb
dec
add
push
add
add
enter
je
shrl
add
inc
jp
in
insb
add
sbb
sub
cmc
lea
push
add
arpl
sub
loopne
mov
add
jecxz
incb
adc
add
cmp
sbb
incb
mov
add
incb
cltd
adc
add
xchg
sub
das
shll
rcrb
add
pop
jmp
or
scas
adc
add
mov
incl
stos
adc
add
mov
pop
incb
pop
add
add
fsts
incb
push
push
add
add
add
add
outsl
in
jb
in
mov
out
data16
fld
pop
cmp
pop
add
jb
rcll
add
pop
loope
cmc
lahf
je
mov
and
add
inc
add
mov
sub
fwait
bound
mov
dec
add
test
popa
stc
mov
movsl
pop
add
bound
mov
pop
mov
incb
stos
mov
sub
cvtps2pi
movsb
add
add
incl
adc
add
add
pop
add
add
add
incl
lods
xchg
cmp
xor
add
das
sbb
pop
add
push
add
incb
ja
out
add
lret
or
hlt
hlt
fimull
push
add
cmp
add
incb
mov
clc
icebp
enter
jae
sub
or
incb
mov
loope
insl
mov
and
jecxz
lock
sub
cmp
or
out
fdivrl
add
lods
cmp
sub
aaa
incb
cmpsb
int
jp
adc
add
cmpsb
adc
add
add
incb
xchg
jl
inc
jle
test
add
add
ljmp
in
clc
aaa
incb
sahf
sbb
test
add
incb
sahf
cs
pop
add
jl
das
xor
add
lods
fwait
add
sub
in
and
add
add
xchg
incb
or
incb
cmp
clc
pop
incb
fbstp
incl
lea
fiadds
enter
or
push
add
test
shll
add
mov
popa
outsl
out
add
out
or
cmp
sarb
mov
fdivl
in
push
incb
std
bound
and
add
or
lea
push
cmp
hlt
sbb
and
add
add
jno
inc
add
pusha
add
inc
add
loop
test
incb
mov
sbb
inc
add
aaa
incb
lret
inc
cmp
movsl
in
int3
push
add
incb
jge
jbe
xor
add
fnstcw
incb
fxch
jl
and
add
cli
fisttps
repnz
add
jge
pop
incl
rcrb
add
inc
movsb
mov
add
dec
mov
xor
add
incb
fcom
daa
incb
leave
jae
add
add
or
arpl
mov
data16
add
add
or
adc
add
in
dec
add
add
add
adc
add
incb
cli
push
add
add
add
enter
add
add
add
incb
dec
push
add
xchg
cmp
lret
xor
add
pop
incl
jns
mov
add
incb
push
daa
incb
fldcw
inc
add
incl
add
add
jmp
and
add
add
add
scas
cmp
incb
pop
out
enter
shrl
pop
daa
incl
test
add
jb
repnz
add
add
add
adc
imul
arpl
cmp
lock
add
mov
mov
fwait
xchg
mov
inc
inc
add
nop
inc
add
add
mov
add
sbb
out
inc
sbb
mov
inc
add
mov
rcll
outsl
sar
and
add
popa
loope
jle
fistpll
add
cmp
arpl
incl
movsb
int
incb
mov
incl
out
fisubs
cmp
lret
pop
sub
jmp
incb
mov
clc
jnp
lock
add
sbb
test
ljmp
add
cltd
inc
inc
add
add
add
add
incb
and
sahf
data16
jae
xchg
xor
add
fldcw
xchg
mov
add
inc
mov
incl
pop
add
add
fwait
mov
incb
cmpsb
sbb
inc
add
and
add
inc
lock
sbb
adc
add
mov
mov
cli
lods
in
test
ret
add
incb
repz
sbb
inc
push
xchg
inc
add
leave
fstpt
mov
js
push
incb
fists
fwait
mov
push
add
pop
add
leave
shll
add
inc
or
frstor
push
add
mov
cmp
xor
add
mov
mov
lret
cmc
cltd
xchg
rcl
xlat
and
push
bound
mov
daa
incb
cltd
mov
xchg
or
addr16
and
add
mov
out
xchg
lcall
adc
add
fdivrl
add
jns
or
incb
push
mov
xor
add
incb
adc
add
xlat
mov
add
incb
lods
pop
inc
add
adc
add
or
jg
insl
cld
pop
int3
mov
add
inc
pushf
pop
add
xorb
adc
add
incl
pop
dec
xor
add
pop
xor
add
inc
add
jle
outsl
push
add
incl
mov
mov
and
add
jno
incb
je
aas
jl
jno
xchg
sbb
pop
add
incb
jge
pop
incl
sub
add
push
push
add
jl
gs
incb
rcrb
or
or
mov
in
and
add
incb
or
scas
in
int3
mov
lea
mov
incb
iret
push
add
arpl
inc
add
add
incb
andl
add
push
add
or
std
cmp
enter
or
in
add
sti
insl
cmp
cli
test
incb
inc
dec
gs
add
add
incb
pop
int3
push
test
into
addr16
mov
xlat
mov
add
add
dec
add
incb
xchg
cwtl
popf
ret
incb
les
incb
or
and
add
and
add
rolb
icebp
push
incb
push
sbb
movsb
pop
add
pop
add
pop
out
mov
pop
incb
mov
add
incl
xchg
cwtl
add
xchg
and
add
incb
popf
xlat
jge
data16
xchg
mov
add
arpl
call
add
pop
incb
pushf
cmp
add
incb
or
out
scas
xor
add
scas
xchg
scas
mov
lahf
scas
adc
add
out
incb
icebp
sbb
add
pusha
add
add
mov
fistl
incb
data16
xlat
cmpb
add
mov
jl
shll
push
or
pop
nop
dec
add
push
add
add
incl
xchg
ljmp
add
pop
incb
ljmp
xor
add
pop
incl
fidivl
mov
decl
out
mov
mov
je
mov
sbb
pop
cmpsb
leave
loop
add
bnd
incb
mov
add
cmp
add
dec
sub
addr16
add
xor
add
incb
lret
add
add
add
add
add
incb
dec
add
add
int3
mov
mov
push
add
incb
shll
add
add
incb
fwait
dec
add
subl
incb
xor
add
incb
jecxz
lahf
xchg
mov
stos
mov
xchg
cmpsb
gs
adc
add
iret
push
or
leave
mov
mov
dec
arpl
add
sbb
xor
add
incb
daa
incl
fsts
incb
sub
xchg
in
add
inc
add
cli
mov
xor
add
incb
lods
lock
add
incb
pushf
aad
sbb
nopl
enter
add
icebp
imul
add
lret
xor
add
js
or
and
add
sbb
test
jns
js
xor
add
xor
add
sub
insl
xchg
inc
mov
incb
mov
dec
add
nop
int3
fisttpll
inc
add
incl
fwait
adc
add
pop
pop
add
test
dec
add
mov
jge
in
je
sub
add
add
lods
add
add
cmc
movsl
ja
incb
outsb
add
dec
add
add
sub
and
add
add
jnp
adc
add
incb
popa
jp
or
mov
push
incb
mov
push
add
rol
xchg
ds
aad
inc
add
incl
cmpsl
sub
add
add
and
add
add
and
add
add
out
fidivrl
test
mov
add
test
pop
add
add
incb
mov
xchg
icebp
or
call
in
xlat
movsl
mov
mov
cli
fstps
jb
sbb
lahf
std
int
add
sbb
mov
incb
cmc
mov
pop
add
lods
mov
incl
mov
incb
xchg
incb
or
inc
mov
mov
sbb
arpl
mov
add
incb
cmpsl
icebp
out
mov
insb
add
jae
nop
sbb
adc
add
inc
sbb
lcall
mov
sbb
lock
int3
lcall
popa
mov
fs
scas
data16
or
test
dec
add
subl
mov
add
add
add
incb
push
add
add
int3
cmp
in
or
test
dec
cmc
int
incb
mov
adc
add
test
lods
pusha
add
push
add
mov
jmp
mov
inc
pop
incb
sti
clc
rcll
sbb
sub
incl
and
add
dec
in
incl
add
add
cld
xor
mov
dec
add
add
incb
lea
add
popf
adc
insl
mov
addr16
add
jae
mov
lea
jno
xor
add
mov
cmp
rclb
dec
mov
cmp
jecxz
pop
add
incl
xor
add
incl
fistpl
subb
jno
jns
jne
ret
mov
or
sahf
mov
jo
cld
jne
add
incb
pushl
fcoms
mov
cmp
xor
add
add
xchg
xor
add
add
in
leave
add
add
cwtl
imul
jge
out
out
add
dec
ja
dec
add
xchg
in
ja
imul
push
or
loop
incb
mov
or
adcl
incb
out
pop
add
jb
jecxz
fldenv
incl
shll
incb
mov
add
add
xor
add
incb
inc
loopne
add
outsl
inc
xchg
mov
push
incl
repnz
mov
pop
lahf
mov
stos
sahf
cmp
cltd
inc
add
cwtl
out
ficompl
jg
scas
pushf
ficompl
xchg
dec
popf
mov
add
lods
xorl
and
add
incl
aad
add
add
add
add
dec
add
add
adc
add
cld
mov
pop
add
lock
fcoml
incb
pop
add
sbbb
add
incl
mov
incb
mov
adc
add
incb
rol
lret
rolb
and
add
cltd
cwtl
je
mov
incb
or
cld
les
test
mov
or
add
add
shl
cmp
incb
mov
stos
inc
testl
fidivrs
add
incb
push
add
dec
add
jne
pop
add
pop
add
add
test
int3
mov
rol
incb
popa
cmp
add
add
pop
add
and
add
stc
pop
fistl
incb
xchg
out
cmpsb
shll
add
add
js
ficomps
incb
ja
gs
sbb
add
add
mov
lret
stos
inc
adc
add
incb
dec
adc
add
mov
cmp
rcr
in
out
jl
add
add
pop
mov
incb
sub
lock
cmpsb
mov
int
loop
incl
and
dec
add
add
sbb
setbe
incl
out
cmp
xchg
incb
xchg
push
add
add
jo
mov
add
pusha
add
mov
repnz
add
fsubp
test
cwtl
movsl
cmp
movsl
insl
psadbw
push
incl
ror
push
rorl
aam
movsl
sbbb
in
mov
cltd
or
imul
popa
into
inc
add
fwait
or
aam
aas
ret
push
add
add
inc
add
dec
add
add
aaa
incl
pop
add
push
incl
cli
stc
dec
mov
int
pop
add
incb
fwait
sub
repz
fstpl
incb
sub
aas
in
dec
add
and
in
inc
add
jo
xor
add
add
mov
add
incl
ficompl
add
xchg
shlb
add
imul
les
or
sub
incb
lss
add
xchg
out
add
add
add
mov
into
add
add
movsl
add
insl
dec
inc
flds
incl
je
pop
incb
sbb
sahf
add
add
incl
cwtl
mov
add
jg
add
adcl
imul
jl
lea
xchg
push
add
movsl
mov
sub
incb
int3
mov
push
incl
lds
add
sbb
outsb
add
sub
mov
incb
cmc
fiaddl
xor
add
rcr
and
add
push
mov
movsl
gs
cmp
sub
sub
lahf
adcb
shll
mov
add
jno
incl
pop
add
jmp
push
inc
or
incb
push
incl
fwait
cmp
mov
mov
mov
mov
incl
jnp
mov
add
pop
incb
inc
adc
jno
ja
rorb
in
test
add
incb
lds
rcll
add
incl
dec
add
sti
push
xor
out
or
lock
ret
xchg
xor
add
incb
cmc
sar
and
add
add
add
add
orl
or
mov
nop
dec
push
add
jnp
stc
daa
incl
arpl
xchg
mov
add
add
mov
add
insb
add
add
add
mov
incb
sbbb
pop
add
fisubrl
incb
xchg
xor
add
sub
incb
mov
incb
std
mov
add
add
jno
stc
sbb
add
ficoml
scas
pop
incl
movsl
mov
add
mov
dec
add
add
add
in
stos
out
inc
xor
add
int3
icebp
incb
xchg
imul
fcoms
push
lock
add
push
add
add
test
popf
add
incb
gs
incb
aas
inc
add
jae
sahf
xchg
pusha
add
incb
aaa
incl
ret
cmp
xchg
fmull
jg
mov
flds
add
popf
cmc
xchg
inc
add
jns
add
incl
into
sbb
and
add
incl
incb
lret
jge
je
sbb
or
inc
bound
cmpsl
mov
adc
add
jmp
xchg
push
adc
add
mov
incb
int
incb
in
inc
add
notl
add
xchg
pop
int
xor
add
add
loop
insl
mov
jb
dec
aas
idivl
add
add
leave
insl
mov
addr16
add
mov
add
les
push
mov
add
mov
incb
sbb
add
add
or
sbb
pop
add
mov
lcall
das
fists
add
shrb
add
aas
ljmp
dec
adc
add
mov
lret
add
and
add
mov
add
add
add
xchg
pop
clc
lods
mov
xor
add
incb
mov
xchg
incb
outsb
add
incb
clc
xchg
mov
sbb
jmp
pushf
push
add
insb
add
cmp
addr16
add
icebp
jns
mov
add
dec
ffree
or
push
mov
incb
fisttps
fwait
rclb
incl
pop
incl
push
add
movsl
lahf
pop
mov
add
add
add
add
incl
and
add
fwait
lock
and
add
and
add
leave
push
mov
sbb
push
adc
lods
nop
xchg
fisttps
je
adc
outsl
fdivrl
add
test
add
add
add
push
add
mov
push
incb
pop
or
sti
jb
cwtl
adc
add
add
incl
mulb
cmpsb
add
add
add
mov
add
pushf
add
jmp
xor
add
ja
cmp
incl
das
std
or
adc
adc
fwait
dec
add
sbb
cmp
xor
add
out
test
popa
inc
add
xor
add
hlt
not
adc
add
add
sub
or
push
sub
or
mov
dec
add
fcompl
inc
add
add
push
repnz
outsl
xor
in
add
dec
jle
sbb
incb
and
add
movsb
out
cmc
mov
cmpsl
lret
sarl
push
add
cmp
mov
xchg
cmpsb
mov
add
jnp
inc
add
incb
sub
shll
jb
das
js
lods
jbe
dec
mov
outsl
fistpll
daa
incb
pusha
add
add
incb
xor
add
mov
incb
push
pop
incb
pop
add
orb
add
add
add
add
movsb
data16
add
mov
dec
sarl
push
add
incb
inc
lea
add
incl
xchg
mov
add
dec
add
add
pop
loop
je
loopne
incl
outsl
cmpsl
pop
sub
push
add
fdiv
pop
subl
xchg
mov
inc
add
inc
add
push
add
cld
jbe
mov
sbb
hlt
adc
add
incl
push
incb
xchg
imul
pop
and
add
and
add
repz
add
cmp
ljmp
cmc
pop
add
incb
in
jnp
add
add
mov
xchg
push
add
mov
pop
incl
incb
dec
xchg
iret
stos
adc
add
mov
pop
add
xor
fcoml
incl
int3
push
sets
add
ret
cltd
mov
incb
pop
mov
lret
jns
jno
cmp
incb
repnz
add
add
pop
in
xchg
jbe
cmc
cmp
mov
ljmp
incb
adc
add
jg
popa
pop
add
out
jb
add
add
mov
and
add
or
stos
push
add
incb
jp
rorl
xchg
stos
add
add
add
mov
aad
into
mov
psrad
flds
add
or
and
add
add
cs
mov
cli
jmp
mov
mov
aaa
incb
pop
add
fsubs
add
add
fldl
insl
add
add
in
in
add
pusha
add
sbb
scas
loop
fidivrl
push
add
push
add
incb
mov
mov
add
incb
nop
enter
incb
testl
add
add
pop
add
cmp
xchg
mov
add
popa
ja
xchg
aaa
incb
add
add
incb
and
add
out
jl
pop
sbb
aad
mov
sub
fcom
and
add
out
incb
add
add
add
inc
add
xchg
lcall
pop
add
cmp
mov
into
gs
add
jo
sub
or
add
sub
mov
movsb
stos
sbb
cli
punpcklwd
inc
add
iret
push
pop
add
sarl
add
mov
cld
cld
jl
mov
mov
and
add
lods
ljmp
data16
add
popa
cli
cmp
add
incb
ja
incb
out
mov
add
add
xlat
mull
incl
test
incl
or
jae
outsl
push
push
xchg
mov
add
incb
in
cmc
mov
xchg
xchg
inc
or
stos
push
add
jle
rcrb
incl
mov
incb
pop
incb
sub
dec
dec
add
push
add
incb
rol
add
incb
mov
add
mov
add
lds
movsl
xor
add
add
mov
or
cmpsl
mov
imul
pop
add
add
add
incl
data16
xor
add
incb
add
add
test
sti
xor
std
and
add
incb
push
push
incb
push
xchg
bnd
sbb
xchg
cmp
loopne
loop
shr
and
add
int3
jne
add
aad
mov
add
scas
cmc
cmp
fdivr
adc
add
in
popa
push
mov
fcoms
incl
inc
add
adc
incb
mov
incb
xchg
cmpsb
push
jb
sbb
or
incl
push
add
add
andl
movsb
adc
add
pop
add
shlb
incb
int3
outsl
rclb
add
cmpsb
xor
add
fbstp
inc
adc
add
in
mov
pop
incb
icebp
cmp
add
add
add
incl
lea
mov
test
add
incb
cld
xchg
loopne
add
add
adc
add
daa
incl
in
dec
xchg
data16
incb
loopne
sbb
mov
add
pushf
fcompp
std
cmpsl
or
add
add
sar
add
jo
mov
incb
idivl
mov
push
add
xor
add
jmp
incb
add
lret
in
mov
jge
xchg
and
add
mov
out
xchg
incl
push
dec
xchg
leave
dec
pusha
add
sbb
ds
stc
incb
pop
xor
incb
cmpsl
insl
mov
add
add
incb
mov
daa
incb
lcall
stos
fldl
incl
fistpll
add
and
add
cwtl
xor
add
test
cs
in
stc
lret
add
pop
mov
mov
push
incb
ja
movsb
jle
mov
movsl
in
sbb
test
cmp
incb
mov
mov
leave
pop
add
jmp
add
add
xchg
dec
mov
or
add
incl
movlhps
add
incb
cmp
mov
xchg
push
add
mov
jmp
inc
loope
add
mov
and
add
add
incb
lret
pusha
add
sbb
incb
add
add
incl
dec
subl
mov
incb
push
add
xchg
jle
jnp
incb
lods
pop
add
adc
add
ffreep
xchg
sub
xchg
mov
add
add
pshufb
in
add
mov
add
cli
jno
sbb
sbb
add
pushf
jne
mov
add
add
add
add
out
xchg
jae
add
push
in
inc
xlat
mov
add
mov
add
lock
subl
incl
jnp
and
add
add
add
add
sub
add
add
push
je
adc
add
add
add
adc
add
icebp
mov
mov
add
cltd
popf
dec
add
lret
jae
std
cmp
mov
mov
add
dec
add
cli
cld
into
loopne
sub
push
add
out
add
cld
sub
cmpb
xor
add
cwtl
pushf
mov
add
incb
enter
add
mov
or
cld
xchg
add
add
pop
xchg
mov
gs
add
add
incb
push
add
push
incl
mov
cmpsb
imul
add
cli
push
add
push
shlb
push
incb
popf
bound
mov
aad
add
xchg
test
hlt
mov
jl
into
nop
imul
add
add
xchg
rcrb
test
add
adc
add
clc
jp
ljmp
jp
aas
and
add
mov
add
add
cmp
incb
test
inc
out
mov
add
cli
outsb
add
xor
add
xchg
shll
stos
and
add
dec
inc
add
incb
jl
data16
incb
in
or
aaa
incb
pop
add
sbbl
mov
incb
shrl
loop
xlat
adc
add
pop
dec
add
or
and
add
sahf
je
push
add
add
add
mov
in
adc
add
mov
add
add
jge
push
test
jmp
or
push
add
cltd
scas
or
add
cltd
daa
incb
shrl
bound
push
add
mov
inc
add
incb
daa
incb
inc
movsb
add
add
jmp
add
add
shll
inc
add
incl
pop
add
loope
lahf
mov
add
add
cli
dec
add
sbb
xchg
adc
add
in
imul
push
incl
adc
add
test
clc
pusha
add
mov
mov
add
sbb
push
add
push
push
incb
sbb
mov
aad
mov
incl
pop
add
xor
add
stos
insb
add
loop
add
xchg
aam
push
dec
add
int
test
add
lcall
sti
js
lock
add
pop
incl
mov
incb
icebp
mov
jnp
lret
add
lret
or
mov
lcall
jae
add
incb
or
sub
dec
and
push
mov
incb
push
test
incb
jle
mov
mov
incb
pop
incb
mov
ror
pop
add
shl
sbb
push
push
fidivl
push
add
gs
incb
xchg
adc
add
add
and
add
int
incb
dec
add
int3
mov
icebp
jb
sbb
incl
mov
add
sub
repz
jb
push
add
incb
inc
add
incb
mov
add
out
xchg
mov
sahf
fdivl
push
add
incb
cld
leave
sub
jae
stc
jb
add
add
stos
adc
add
and
add
loope
mov
add
pop
incb
inc
add
add
add
lret
cmpsb
jae
movsl
xchg
push
add
add
dec
int3
or
fists
js
lret
stc
add
add
inc
add
jns
inc
addr16
add
add
aas
popl
add
ja
mov
incb
jb
cmp
pop
arpl
pop
out
out
dec
pop
incb
or
int3
mov
pop
add
incl
push
add
incb
dec
add
incb
and
add
or
incb
into
movsl
cs
adc
add
bound
test
lret
popa
lods
std
mov
popa
add
add
incl
mov
add
in
add
incb
insl
dec
add
add
mov
pushf
incb
adc
add
int
pop
incb
fs
aam
inc
dec
add
add
push
cld
push
mov
add
bound
pop
add
jb
out
mov
pop
sbb
and
add
adc
add
jl
je
adc
add
xchg
pushf
std
sub
pushf
or
incb
pop
pop
dec
fsubs
incb
or
xchg
jno
jge
add
and
incb
push
add
add
stos
xchg
ret
add
or
cmp
cltd
ret
mov
add
pushf
enter
incb
lret
sub
mov
test
call
add
push
add
add
add
incl
sbb
outsb
add
and
add
incb
cmpsb
mov
add
shlb
incb
cli
jge
movsb
dec
add
add
xchg
cmp
add
mov
dec
add
sti
mov
add
add
add
scas
cmp
sbb
out
inc
add
pushf
xchg
cmp
fsubrs
push
add
gs
popa
cmp
cwtl
inc
mov
add
insb
add
xor
add
incb
or
mov
add
add
dec
jbe
cmpsb
push
incl
inc
add
dec
add
jno
hlt
in
xor
add
test
rorb
pop
incb
mov
bound
dec
add
xor
add
lds
add
or
movsb
sarl
add
movsl
push
add
ror
jns
mov
incb
xor
add
add
adc
add
pop
add
add
push
incb
fmull
mov
clc
sub
dec
add
and
add
incl
imulb
incl
and
push
jns
add
incb
xor
add
push
incb
cld
mov
xchg
aad
cld
xor
jbe
sti
insb
add
mov
int3
jge
jecxz
into
lea
rdpmc
incb
fimuls
add
incb
mov
add
incl
add
add
in
adc
add
incb
pop
add
incb
out
dec
add
incl
outsl
jmp
add
daa
incl
adc
mov
mov
mov
scas
xor
add
incl
pop
add
add
jae
cmp
add
incl
stos
scas
pushl
incb
sbb
adc
add
cwtl
arpl
cmp
cmpsb
jno
adcl
faddl
add
push
incb
mov
sti
mov
enter
jge
incb
data16
push
add
add
fwait
outsl
jne
xor
incb
xor
add
jmp
jmp
add
mov
incb
or
inc
add
or
mov
xor
add
incl
pop
fldenv
incb
imul
add
or
add
and
add
clc
iret
movsb
sub
jbe
das
mov
int3
dec
add
xor
add
incb
jno
add
decl
add
add
mov
lods
push
int
mov
incb
inc
gs
add
ret
sub
repz
push
add
sub
dec
enter
xchg
dec
add
incb
inc
add
add
sbb
incb
jae
daa
incl
sub
pop
xor
add
incb
lret
fidivrs
popf
mov
incl
push
add
mov
jns
and
add
dec
add
add
sti
jmp
incl
mov
icebp
pop
incb
jns
mov
add
rcrl
xlat
add
inc
mov
jns
inc
push
icebp
dec
lahf
xchg
mov
push
pushf
xchg
xor
add
lods
xor
add
add
mov
insl
loop
clc
and
add
adcl
sbb
and
add
add
add
mov
mov
add
incb
jo
inc
add
incb
push
ja
movsl
jo
test
add
incl
adc
add
incb
sbb
fists
pop
add
loopne
imul
incl
pop
add
push
inc
add
add
mov
mov
daa
incl
inc
in
lahf
repz
cmc
incb
clc
fnstsw
call
incb
sub
aas
in
incl
mov
adc
in
or
bound
enter
inc
add
incb
pop
add
and
add
js
adc
add
incb
cmp
mov
movsb
sbb
mov
add
testb
incb
jg
mov
cmp
push
lods
test
incb
jo
pop
cltd
dec
andl
add
pop
cli
push
add
jge
incb
and
add
rcr
lds
incl
xchg
movb
push
add
incl
mov
add
jns
scas
cvtps2pd
and
add
test
sub
ja
cwtl
bound
pop
xchg
imul
mov
push
add
icebp
cmp
leave
daa
incb
and
add
add
mov
incb
in
fsubrs
je
fcmove
pushf
xchg
cli
mov
incl
mov
lea
imull
adc
add
jne
xchg
add
incb
stos
mov
push
cmp
insb
add
push
test
adc
add
add
xchg
jp
int
pushf
cmp
sbb
add
add
incb
mov
add
add
or
jp
lcall
add
add
add
incb
aaa
incb
insb
add
cltd
pushf
mul
lcall
inc
add
xchg
out
add
mov
incb
addr16
and
add
movsl
jae
inc
inc
pop
add
rcpps
xor
xchg
ret
sbb
xorb
inc
add
jb
adc
add
pusha
add
incb
mov
ficomps
add
mov
add
movq
add
mov
pop
add
into
adcb
add
insb
add
incb
mov
insl
dec
out
test
add
in
and
lods
cmp
sub
dec
add
incb
cmp
or
add
incl
in
stc
push
add
push
push
add
add
incb
pop
inc
outsl
rcll
incl
test
adc
add
cs
rcl
inc
mov
add
sbb
adc
add
or
fwait
loope
sbb
and
incb
jae
add
xchg
mov
mov
or
add
mov
repnz
push
add
sbb
not
and
add
dec
movsl
xor
and
add
incl
and
add
je
adc
add
jbe
jb
in
incb
xchg
sbbb
incb
pop
add
mov
incb
push
add
add
mov
and
add
jge
add
xor
add
add
iret
sub
add
add
incb
lods
mov
incl
loope
daa
incb
inc
add
xchg
aad
sub
fcmovnbe
rorl
add
incb
gs
and
add
lods
in
movsl
xchg
add
pusha
add
or
mov
mov
pop
pushf
repz
test
mov
fbstp
push
test
cld
arpl
incb
mov
and
add
incb
jp
in
enter
xor
add
nop
cmp
cltd
arpl
jbe
pop
les
incb
jne
int3
xchg
shll
shlb
jl
dec
shlb
loope
push
lcall
incl
imul
pusha
add
jbe
aaa
incb
pop
add
jle
enter
add
inc
cmpsl
dec
add
mov
shl
int3
out
test
xchg
cmp
xchg
mov
lahf
pushf
cmp
push
fiadds
pop
pop
xor
add
add
add
ret
add
mov
int
add
add
adc
add
mov
cmp
call
push
add
shlb
cmp
pop
jmp
add
incl
add
add
outsb
add
xor
add
incb
aad
mov
mov
scas
mov
cmp
cmc
cltd
mov
add
sub
add
testl
cmp
lcall
add
incb
sbb
push
add
xchg
sub
add
add
arpl
add
idivl
test
scas
loop
add
mov
lds
add
aam
add
dec
add
jp
into
cmp
incb
insl
dec
add
add
and
add
stos
aas
mov
add
add
ret
je
xor
add
mov
mov
add
push
incb
out
jo
daa
incb
push
mov
add
mov
ret
jl
xlat
loopne
incb
pop
add
shll
and
add
pop
add
repnz
sbb
inc
add
cmp
loop
dec
add
jno
insl
dec
in
cld
cltd
push
add
add
sbb
incb
imul
add
add
loope
incl
test
rolb
les
lcall
mov
ret
fbstp
incb
fwait
adc
incl
jne
or
stos
jno
mov
roll
bound
out
les
add
add
add
mov
pop
incb
push
test
add
add
ljmp
sub
fistpll
add
sbb
into
push
add
mov
add
incb
rcpps
loopne
incb
stos
adc
add
frstor
incl
movsl
adcb
add
mov
test
mov
mov
add
sbb
dec
mov
add
icebp
or
sbb
aas
mov
incb
out
incb
pop
ja
cmpsl
dec
dec
add
push
add
lret
mov
add
jmp
incl
and
add
dec
add
push
incl
dec
add
or
pop
add
add
sub
wrmsr
incb
mov
incb
mov
add
ljmp
out
add
incb
or
add
xor
add
xchg
sbbb
fcomps
incl
mov
add
sub
lret
xchg
jnp
movd
mov
incb
inc
add
pusha
add
add
cmp
and
sbbb
mov
stc
sbb
pop
push
add
insb
add
add
adc
add
fistps
ret
mov
add
repnz
lret
test
fwait
inc
inc
imul
add
push
add
add
je
mov
sarl
sbb
add
add
add
incl
mov
inc
add
incl
les
jae
add
rcrb
add
and
add
sahf
dec
fildll
add
add
xchg
rorl
sbb
nop
loope
xchg
add
add
clc
xlat
cs
adc
add
inc
add
incl
popf
pop
pop
lcall
mov
or
in
incb
lods
mov
add
mov
movsl
push
add
add
incl
ret
incl
lods
pop
add
add
cli
push
mov
xor
add
dec
add
jmp
iret
fwait
inc
pop
mov
add
loopne
sbb
add
xor
add
xor
add
add
sbb
faddl
push
push
add
cs
cmp
sub
dec
add
add
add
add
add
mov
or
scas
cmp
adc
add
push
push
jnp
gs
sub
or
data16
add
fsubr
aas
mov
cmc
jecxz
sti
loop
add
push
add
idivl
jno
sti
ljmp
test
or
jg
incb
mov
pop
add
push
movsl
lcall
add
incb
jns
incl
xor
adc
add
incl
sub
mov
out
jnp
imul
mov
add
add
lods
mov
add
add
add
add
incl
shrb
imul
add
add
sbb
pop
sub
jnp
incb
imul
cmp
xchg
bound
jmp
sbb
incb
cld
adc
fldenv
add
and
add
add
pop
add
add
or
jmp
adc
add
mov
add
xor
add
add
add
or
rcll
incb
and
add
inc
or
mov
push
sbb
or
dec
add
jp
addl
add
incb
mov
add
add
add
pop
add
adc
loope
sahf
arpl
clc
pop
jmp
clc
and
add
sub
sub
sub
mov
je
iret
shrl
add
mov
add
add
aam
fsubrs
aas
outsb
add
mov
incb
out
add
jge
fnstcw
insb
add
jecxz
addr16
add
ds
cmp
cmpsl
out
incb
fldl
clc
fisubl
loop
and
add
dec
dec
loopne
sbb
jbe
pop
or
mov
add
xchg
lret
daa
incb
pop
add
incb
jno
sti
push
add
incb
cmp
add
add
incb
mov
lock
dec
add
imulb
imul
lea
fwait
and
add
call
incb
dec
inc
add
xor
add
incb
stc
dec
sahf
gs
pop
mov
push
add
pop
add
xor
add
aad
leave
mov
test
add
add
cmp
ror
pop
mov
incb
jno
and
add
cmp
js
mov
mov
sarb
add
dec
into
xor
add
lret
cmp
add
cmp
xchg
cmpb
inc
add
incb
je
xchg
mov
cmpsl
int3
ja
incb
xor
popa
incb
inc
clc
testl
fists
incb
test
xchg
popa
add
add
in
or
ffree
pop
add
pushf
sahf
loop
into
xchg
and
add
incb
leave
sub
add
add
xchg
cwtl
enter
add
incb
cltd
adc
add
lahf
test
add
ljmp
add
mov
push
notb
incb
cli
pop
cmp
ret
mov
add
rorl
push
add
insl
loopne
aad
add
add
add
xor
add
mov
lods
and
add
add
add
into
inc
jmp
add
add
pop
xchg
jb
xchg
aaa
incb
gs
add
dec
mov
add
addr16
add
add
daa
incb
out
lahf
or
pop
test
ret
sbb
mov
mov
inc
std
cltd
dec
add
int
adcl
fdivrs
add
mov
incl
add
add
xor
add
pushf
add
add
lcall
adc
add
std
xchg
push
add
cmpb
int
mov
push
incb
cltd
dec
add
xchg
out
mov
push
add
add
cmp
sub
outsl
movsb
test
inc
add
loopne
mov
test
incb
enter
mov
xchg
add
fistl
les
insb
add
incl
stos
popf
pusha
add
aam
imul
add
fdivr
pop
xchg
add
loop
incb
inc
fcomps
incb
aam
sub
lcall
sahf
or
shlb
add
dec
jae
lret
shlb
ret
add
int3
jb
jb
sbbl
add
clc
loop
add
movsl
inc
add
incl
jns
sti
shl
and
add
sub
insl
and
add
cs
out
incb
xchg
sbb
adcb
out
add
lods
or
das
in
js
lret
shr
lcall
mov
add
or
jae
popf
jecxz
shll
adc
add
loope
incb
repz
ja
push
icebp
ljmp
add
add
add
add
incb
popa
incl
jge
add
mov
fwait
push
clc
pop
mov
add
mov
jns
stos
lock
adc
add
incb
int
aad
push
popl
add
incl
test
jne
jmp
into
shl
mov
push
add
in
aad
add
jl
or
jb
das
cli
pushf
int
mov
add
xor
add
adc
add
mov
incb
loop
mov
add
incb
scas
cli
leave
pop
incb
mov
jb
lahf
sub
mov
enter
xchg
lcall
add
push
push
incb
mov
sbb
add
mov
incb
shl
into
pop
push
add
data16
add
add
adc
add
incb
mov
not
dec
pop
and
add
pop
lea
sub
jp
outsl
add
add
push
push
add
add
add
add
lock
addr16
add
jno
insl
mov
add
ljmp
inc
add
xchg
adc
add
add
cmp
push
xchg
iret
lods
aam
sarb
push
jns
icebp
sti
mov
lds
add
cltd
pop
or
aaa
incb
fsubl
add
incb
add
std
mov
popa
push
mov
pop
add
push
bnd
mov
cltd
push
incb
lret
out
push
mov
pop
add
cmp
pusha
add
mov
incb
pop
add
xor
add
mov
push
cmp
pop
incl
orb
out
jb
sbb
xlat
frstor
incl
and
add
add
mov
mov
incb
xchg
xchg
icebp
ftst
mov
jb
test
in
stc
enter
fisttpll
add
incb
scas
xor
add
add
pushf
mov
incb
dec
add
push
add
mov
dec
cmc
mov
add
incb
inc
add
mov
add
incl
test
mov
fildl
pop
add
rcll
add
add
add
lret
mov
incb
test
incb
loope
incl
lds
mov
add
ret
insl
daa
incb
pop
incb
and
add
adc
add
add
repz
jo
lret
add
and
insl
mov
jns
mov
and
incb
incb
push
je
mov
cmp
addb
add
call
mov
add
inc
push
add
xchg
push
imul
rorl
pop
sbb
enter
add
out
pop
add
add
gs
add
incb
daa
incb
xor
add
sahf
mov
incb
mov
add
add
adc
add
incl
xor
add
les
nop
cmc
add
add
xor
add
add
ds
enter
sti
lea
cmp
add
iret
imul
into
insb
add
pop
add
add
add
adcl
stc
pop
mov
enter
incb
leave
fsubs
add
gs
add
add
mov
add
add
mov
fisubl
ljmp
add
add
xchg
jb
pop
add
stc
add
add
add
ljmp
incl
daa
incb
add
add
xor
add
xchg
cmpsl
pop
add
pusha
add
incb
aad
cmp
and
add
loop
add
add
jecxz
and
add
mov
test
fbld
incb
add
add
decb
add
add
sbb
cltd
jno
xor
add
in
incl
loope
sbb
repz
add
in
inc
add
jnp
xor
add
test
add
xor
add
add
in
or
outsl
mov
xchg
xchg
fldl
incb
mov
add
xor
add
in
add
add
pop
or
pop
push
add
add
frstor
add
dec
add
lods
push
sbb
adc
add
jo
push
add
add
sub
incl
mov
sub
rcll
incb
dec
add
and
incb
sahf
inc
add
test
mov
add
in
out
add
test
dec
add
sbb
add
add
dec
add
dec
add
add
push
add
pop
add
add
bound
dec
add
add
js
iret
mov
add
loope
add
dec
in
add
rcll
mov
lock
sub
cmp
sbb
sub
shlb
incl
dec
add
aas
sarb
sub
mov
incl
mov
incb
loope
outsb
add
sub
and
add
inc
in
and
add
incb
xchg
js
je
xchg
sbb
sbb
gs
xorb
push
inc
add
lret
pop
push
incb
jecxz
lds
add
adc
add
add
hlt
jno
add
subl
add
cmp
incl
daa
incb
inc
repnz
lods
sbb
adc
add
dec
test
incb
daa
incl
pop
std
xor
add
pop
add
sar
dec
add
sbb
incb
cmpsl
stos
sbb
mov
aad
lock
add
incb
pop
test
add
icebp
dec
add
sub
stos
bound
cmpsl
stc
pop
add
incb
mov
incl
push
mov
cmc
sub
popf
and
add
rorl
push
hlt
sbb
incb
movb
or
inc
add
mov
add
mov
incb
sahf
add
mov
popf
testb
push
add
push
add
cmp
incb
lock
add
minps
or
pop
add
jl
bnd
pop
ror
add
add
cmpsl
xchg
jecxz
pop
shll
xor
add
sub
scas
dec
inc
add
add
call
mov
add
repz
shrb
xchg
arpl
mov
add
add
jb
out
xchg
leave
fstps
add
add
cmp
inc
add
add
incb
mov
mov
or
xchg
lods
sbb
dec
add
incb
push
in
iret
or
add
ja
jp
adc
add
add
add
lds
incb
ret
dec
add
mov
incb
xor
add
incb
mov
incb
mov
add
xchg
pop
xor
add
mov
pushf
stos
mov
call
add
add
data16
andb
scas
push
pusha
add
mov
incb
xor
int3
xchg
std
dec
add
loopne
scas
xchg
pop
add
call
out
incb
mov
jg
add
add
mov
outsb
add
pop
xor
stos
push
incb
or
or
dec
add
incb
in
incb
sbb
ljmp
add
incl
fmul
test
add
incl
pushf
adc
add
negb
in
mov
jecxz
push
adc
add
incl
xchg
mov
add
incl
cmc
jae
add
add
incb
stos
nop
sbb
adc
add
pop
add
add
cltd
push
incb
pop
add
add
into
pop
incb
inc
add
incb
arpl
incl
fwait
jg
incb
popf
mulb
incb
sub
incb
out
add
mov
add
pop
jg
mov
lds
lods
insb
add
mov
shrb
pop
add
test
mov
incb
js
fisubrs
repz
add
ja
iret
stos
out
lock
add
addr16
incb
or
jno
add
incl
stos
aaa
incb
lods
stos
in
add
mov
hlt
sbb
incb
xchg
testl
add
lea
add
mov
xchg
lea
cmc
cltd
dec
add
add
push
mov
lds
inc
add
sti
add
add
adc
add
sub
inc
dec
stc
iret
inc
jp
xor
adc
add
add
incb
pusha
add
adc
add
pop
decl
iret
fwait
push
aaa
incb
fsubr
in
mov
incb
outsl
cltd
in
jns
incb
ja
add
add
add
add
jbe
fadds
incb
sub
jmp
stos
out
add
jl
jb
dec
add
lock
ret
add
mov
add
leave
inc
add
incb
pop
add
add
add
ret
xchg
push
add
test
add
mov
pop
add
incb
mov
xor
add
incb
sub
scas
outsl
adc
add
mov
popa
xor
add
incb
std
sub
les
sub
adc
add
xor
add
incl
cmc
femms
add
lea
dec
add
incb
mov
ja
cmp
test
incb
pop
cmpsl
mov
add
xchg
inc
cld
mov
push
incl
xor
add
add
ds
gs
add
daa
incl
dec
add
inc
dec
loopne
cmc
les
add
incb
stos
adc
add
inc
sub
mov
movsl
dec
orl
jo
sbb
jno
jp
and
add
incb
cmp
mov
xchg
xor
add
add
and
add
pop
add
mov
add
incb
out
jo
pop
insb
add
dec
sti
or
dec
mov
xlat
add
sbb
add
incb
bound
loop
incb
add
add
push
cmc
sub
divb
adc
add
push
add
imul
shrl
mov
xchg
adc
add
pop
pusha
add
incb
pop
add
adc
add
push
add
lds
and
add
add
sarb
add
add
sahf
stc
add
add
lahf
add
add
jo
pop
add
clc
test
or
test
icebp
or
sti
push
add
push
incb
xchg
cmp
add
add
jle
mov
lcall
std
jmp
add
add
xchg
jmp
lock
dec
out
xor
add
sub
sbb
into
or
in
incb
out
incb
jo
bound
enter
fisubs
xchg
andl
inc
cs
jae
incb
popf
lret
mov
add
or
incb
jo
out
cmp
jl
test
push
add
xchg
aas
mov
add
clc
mov
out
pop
loope
add
push
add
shr
sbb
gs
fisubs
incl
and
add
add
xchg
gs
test
shr
rcll
add
incb
jne
incl
in
dec
iret
popf
repnz
jo
and
add
cmp
test
mov
add
sbb
push
incb
pop
incb
imull
add
mov
incb
ds
test
mov
add
add
std
iret
mov
dec
cmc
xor
add
push
inc
add
aaa
incl
ja
hlt
pop
incb
movsl
xchg
jne
out
dec
add
ficoms
adc
add
xchg
add
add
add
roll
stos
and
add
outsl
mov
jge
test
add
push
push
add
mov
push
add
mov
add
incl
shll
incb
lret
add
add
add
incb
jnp
mov
pop
incb
andl
and
add
addl
mov
incb
fwait
icebp
cmc
mov
movsl
jl
in
int
push
push
add
incb
sbb
pop
add
incb
dec
sbb
mov
mov
orb
stos
insl
outsl
fbld
incl
sub
xor
add
arpl
test
popf
enter
imul
shrb
add
js
cmc
pop
add
cmpsb
and
add
add
dec
repz
cmpsl
fistpl
mov
incl
incl
inc
add
fsub
jmp
ret
cmp
sub
add
add
add
incl
push
push
xchg
add
imul
add
dec
add
cld
and
jbe
pop
add
jo
jbe
dec
dec
jae
jno
les
mov
incl
out
add
add
sub
jbe
xor
add
arpl
pop
and
add
gs
aas
jp
jle
lods
pusha
add
sbbb
add
add
add
adc
add
jecxz
je
mov
add
xorb
faddp
cli
push
add
push
mov
dec
int3
pop
inc
add
mov
adc
add
add
fwait
xchg
sub
pop
add
test
incb
xchg
sub
lret
add
mov
lahf
jmp
add
push
add
jae
hlt
jmp
incb
sbb
push
add
add
sub
mov
test
add
add
inc
lea
push
incb
add
add
loope
sar
icebp
pop
incb
jmp
mov
stos
jmp
add
add
incb
mov
stos
inc
add
mov
and
add
push
add
mov
jno
push
add
cmp
sbb
cmp
incb
or
nop
lcall
inc
add
add
dec
sti
lcall
gs
add
lret
int
incb
cmp
jle
outsl
movsb
push
incb
test
mov
incb
aaa
incb
mov
xchg
test
incb
les
add
sub
imul
add
imul
jo
mov
and
add
sub
incb
adc
add
incb
jmp
mov
add
incb
out
incl
xchg
pop
incb
jo
out
or
data16
push
incl
mov
sub
sub
sbb
inc
add
inc
add
xchg
les
dec
add
incl
fildll
fldlg2
cmc
pop
outsl
shlb
nop
test
jns
incl
test
push
incb
and
add
add
push
jbe
push
add
shrl
add
imul
jb
mov
add
mov
add
xchg
mov
ljmp
sbb
cmpl
adc
add
lock
add
add
rolb
incb
pop
fimuls
push
test
mov
add
xchg
jae
incb
mov
add
stos
dec
jmp
imul
gs
incb
fstps
mov
jns
add
mov
add
cmp
incb
ret
in
add
call
pop
mov
cmp
cld
jb
cmpsb
cli
cmp
orb
push
add
add
aad
add
or
fwait
sub
add
add
xor
add
inc
outsb
add
mov
xlat
sub
pushf
mov
incb
inc
movsb
add
add
and
add
pop
add
xchg
or
incb
fistl
incb
inc
add
dec
fsts
flds
sti
push
add
mov
adc
add
jns
or
incl
test
incl
mov
in
lds
pop
add
sub
xor
add
or
stc
jl
fmull
or
loopne
repz
add
incl
pop
add
ror
je
mov
add
scas
rcrl
and
pop
cmp
dec
mov
jne
mov
xchg
sarl
add
xor
add
mov
add
add
add
incl
lcall
add
push
add
and
add
dec
add
inc
add
ja
add
repz
add
sbb
bound
movsl
mov
dec
mov
sub
dec
add
jge
testb
incl
test
test
sbb
leave
lcall
sti
jle
pop
add
add
iret
sub
jg
pop
add
and
add
insb
add
pop
data16
sbb
aas
xorb
imul
movntps
add
dec
add
mov
add
incb
xor
incl
fisttps
mov
add
insb
add
push
add
add
int3
incb
and
add
add
xchg
add
add
incb
in
push
incl
mov
jo
inc
cli
sbb
or
or
cmp
addr16
or
cmp
push
lea
incl
sbb
incl
incb
xchg
mov
dec
mov
add
ljmp
add
jecxz
fildll
push
aaa
incb
je
inc
cmp
mov
incb
ret
pop
add
sub
aam
add
incb
aad
mov
mov
add
incb
std
xchg
xor
add
mov
jne
add
sub
mov
add
add
pop
add
mov
or
mov
add
pop
incl
add
add
add
xor
add
popf
jge
js
insl
xchg
andb
icebp
fsubr
inc
add
xor
cmp
adc
add
or
xchg
incb
cltd
incb
add
add
incb
cltd
test
add
xorb
add
ljmp
add
add
imul
and
add
mull
incb
xor
add
loopne
add
incb
jmp
add
fs
push
add
imul
into
or
incb
rcl
incb
rorb
push
incb
roll
incb
push
test
aas
hlt
insl
pop
incb
clc
cmp
xchg
push
add
add
mov
pop
add
sbb
mov
sub
mov
incb
fwait
decl
mov
incb
test
add
xchg
or
adc
mov
incb
sub
pop
or
ja
incb
int
notb
add
mov
add
add
ret
in
incl
push
jb
lods
outsb
add
incb
lea
incb
cmpsl
cmp
outsb
add
add
add
add
add
add
incb
aas
fiadds
incb
pop
loope
add
cmp
aaa
incb
insl
dec
add
jo
clc
rolb
xor
test
and
add
incb
cli
aam
out
incb
jmp
rol
cmp
push
add
incl
incb
mov
testb
add
jo
imul
arpl
add
push
mov
shlb
or
add
mov
jno
add
pushl
incb
push
sub
aaa
incb
les
incl
imul
cmp
push
pop
add
lcall
cmp
cmp
inc
add
and
add
mov
incb
or
sub
ja
inc
add
mov
incb
mov
pop
das
sbb
loope
mov
mov
dec
add
add
cmp
add
mov
bound
sbb
mov
incb
mov
or
out
movsb
sbbl
push
add
incb
std
cmp
test
incb
paddd
mov
in
pop
incb
cmpsb
mov
and
add
cmp
imul
and
add
and
add
mov
inc
add
popf
in
pop
add
incb
test
incb
push
add
incb
jl
jmp
pop
incb
adc
add
incb
dec
decb
add
add
add
add
clc
movsl
test
xchg
out
incl
inc
and
add
cwtl
cmp
cmp
xchg
cmpsl
adc
add
incb
mov
mov
add
lcall
incl
lock
test
andl
pop
xchg
cwtl
into
mov
incb
rclb
movsl
push
add
add
xchg
sbb
add
cmp
or
inc
add
fiadds
cmp
mov
add
incb
rorl
sarl
js
xlat
pop
jb
push
add
add
xchg
jae
add
add
std
add
add
add
add
add
outsb
add
adc
add
bound
outsl
sbbb
cltd
pushf
arpl
cmpl
hlt
add
add
add
fildl
incb
jmp
jne
xor
add
popa
lahf
ffree
inc
add
inc
add
adc
add
in
xchg
dec
add
cmc
push
add
adc
add
je
inc
jo
mulb
add
add
add
add
lds
rorl
addb
add
incb
pop
hlt
dec
add
cmp
jns
jne
mov
add
shll
incb
rorb
mov
fsubp
cmpsb
incb
jb
lods
fisubrs
ja
dec
add
lock
outsl
cli
pop
mov
repnz
sbb
sbb
jl
faddl
add
adc
add
add
cmpsb
xchg
cmpsl
test
jbe
flds
incb
jo
jle
mov
test
hlt
out
add
sahf
dec
add
in
add
add
ret
popf
aaa
incb
mov
aad
pusha
add
cmc
movsb
xor
add
fimull
add
add
pop
inc
add
add
add
pop
jne
nop
ja
add
incb
fstpt
incb
add
add
cmp
repz
incl
dec
or
pushf
dec
ljmp
jp
mov
aad
incl
push
add
add
in
incb
test
out
inc
add
outsb
add
fwait
jae
add
incl
pop
add
add
add
out
xlat
mov
stos
push
add
xchg
cmpsl
adc
add
jb
jge
cs
leave
movsb
cli
jns
add
outsb
add
incl
add
add
les
dec
lret
inc
add
mov
sub
test
mov
mov
add
mov
add
lret
loop
incb
mov
pop
mov
cld
mov
lret
mov
pop
cmpsl
inc
xchg
pop
jg
pop
xchg
les
adc
add
push
add
movsb
test
loope
incb
andb
movsb
sbbl
push
add
popa
dec
add
pop
fsubrl
mov
movsb
fbstp
incb
cwtl
mov
icebp
mov
bound
lods
add
add
inc
add
add
fdivrs
dec
and
add
incb
imul
add
add
fdiv
fsts
aas
sub
inc
add
loope
add
add
add
add
and
sub
out
sahf
push
andb
add
incb
aas
mov
mov
cmp
pop
inc
add
dec
add
incb
in
incl
fwait
mov
mov
add
add
lret
cmp
push
add
add
dec
or
add
fistps
adc
incb
pop
hlt
sbb
inc
aaa
incl
adcb
mov
add
incl
push
js
jno
cmp
out
add
add
add
incb
sub
imul
cwtl
icebp
lods
bound
xchg
jnp
and
sbb
pop
add
cmp
push
add
gs
mov
fbstp
incb
cmp
cmp
jo
lahf
cli
loop
add
cwtl
or
iret
push
dec
add
add
add
add
iret
js
pop
incb
mov
push
jno
add
mov
mov
add
pop
incb
ret
and
mov
push
xchg
std
inc
mov
incb
push
mov
add
incl
movsl
pop
add
lock
add
incl
adcl
incb
outsl
add
add
add
add
incb
repnz
incb
sarb
pusha
add
movsl
insb
add
mov
push
add
add
adc
add
faddl
incb
cwtl
rcrb
or
mov
jno
push
add
mov
sub
and
addb
add
incb
mov
sbb
pushl
incl
mov
sbb
add
jne
xor
add
incl
iret
fnstsw
incb
xchg
sbb
add
xor
add
lcall
incb
inc
add
add
ja
mov
mov
add
lock
add
jmp
sub
incb
cli
iret
addr16
lea
add
cmp
mov
mov
add
fwait
shlb
int
pop
incb
dec
add
xlat
push
dec
add
sub
incb
fwait
xor
add
lret
insl
loop
incl
pop
daa
incb
scas
xor
add
ja
push
add
add
sbb
or
xchg
loop
fwait
mov
xchg
imul
inc
mov
and
add
imul
sbb
add
add
mov
add
incb
xor
add
f2xm1
mov
mov
xor
add
add
incb
cmp
insb
add
add
lock
incb
stc
rorl
les
mov
incb
stos
arpl
out
mov
xchg
jae
incl
or
push
add
incb
pop
incb
gs
xor
add
sbb
lods
or
incb
lock
jbe
jnp
push
xchg
push
fdivl
incb
test
out
push
bound
jle
pop
ja
add
incb
dec
add
lods
out
daa
incb
xchg
inc
rorl
cmp
cmpsb
dec
and
add
jo
fcmovnbe
cli
ljmp
scas
loopne
ret
xor
add
jmp
incl
cmp
shrb
add
incb
push
add
leave
out
add
pushf
adc
add
incb
das
pop
add
add
test
pop
add
add
inc
add
lret
inc
add
cmc
cmp
xlat
ret
jb
push
add
imul
pop
add
add
add
cld
aad
add
incl
pop
cmpsb
mov
add
mov
cmpsl
and
add
test
add
aaa
incb
jmp
inc
add
jns
loop
test
aad
mov
add
inc
mov
lahf
scas
and
add
sbb
add
add
shlb
mov
incb
inc
add
mov
mov
push
incl
mov
add
xor
add
add
insb
add
add
mov
add
loope
add
ja
fcompl
mov
add
add
call
mov
add
arpl
arpl
incb
pop
cmp
fisttpl
sbb
pushf
pop
bound
div
jb
and
add
jo
inc
xor
or
xor
add
add
faddp
test
incb
iret
in
dec
add
fcmove
sbbl
mov
lea
adc
add
shrb
mov
add
add
incb
int
adc
add
push
add
in
aas
pop
add
pushf
push
stos
sbb
add
or
incb
mov
hlt
xor
add
add
stos
or
mov
arpl
mov
and
add
inc
add
dec
add
add
pop
add
incb
ljmp
jns
add
incl
ret
mov
lock
lods
xlat
xchg
mov
pusha
add
fildl
add
incb
test
push
incb
pop
insl
rclb
call
incb
xchg
incb
lock
mov
int
fsub
sbbl
fistpll
in
test
add
test
push
incb
inc
add
push
incl
enter
imul
adc
add
dec
add
out
pop
sbb
enter
adc
add
incl
inc
or
in
clc
fidivrs
add
call
push
jne
push
add
icebp
xor
dec
add
jp
xor
add
sti
dec
xor
add
ja
add
cmpsb
addr16
add
incb
xor
add
incb
incb
leave
cmp
and
add
aas
mov
incl
pop
incb
icebp
repz
add
incb
cltd
jg
ror
mov
add
mov
ljmp
xchg
inc
scas
adc
add
loop
xchg
cmp
into
addb
in
add
incb
adcb
add
xor
incb
mov
sbb
add
pop
stos
sbb
add
mov
pop
and
add
add
add
sbb
jne
scas
jmp
add
jb
adc
add
add
dec
or
push
add
lcall
add
lahf
adc
add
lock
add
aad
jo
stos
and
incb
jmp
stc
mov
incb
fdivrl
dec
add
in
in
push
add
add
sbb
mov
imul
xchg
and
add
pop
int
incb
or
xchg
popa
ret
in
mov
sub
pop
add
andl
incb
incb
mov
incl
sub
push
incb
adc
add
xor
add
and
add
aam
add
incl
fldl
int3
sbb
push
adc
add
lods
add
add
incl
loopw
stos
xor
jmp
incb
insl
add
add
cmp
inc
insb
add
mov
incb
hlt
and
add
incb
andb
jo
push
add
enter
iret
outsl
push
add
incb
lock
add
add
and
add
add
adc
add
incb
fidivs
cltd
dec
add
mov
add
xchg
jmp
fisubs
incl
ja
dec
push
mov
add
incl
aas
cwtl
test
xchg
pushf
sub
push
aam
mov
gs
fcompl
and
add
incb
jecxz
add
add
je
push
inc
lods
mov
add
add
incb
cmpsl
mov
add
enter
incb
stc
add
add
push
shl
je
in
hlt
dec
add
add
add
leave
sbb
lods
mov
loop
js
or
push
add
add
incl
cmpl
out
and
iret
mov
sti
mov
dec
xor
add
into
pusha
add
mov
test
movsl
mov
inc
push
add
or
dec
add
cmp
add
add
incl
bound
sub
fcmovbe
in
add
add
pushf
xchg
pop
scas
inc
add
sub
xchg
add
incl
loop
jmp
add
xlat
jo
push
incl
xchg
adc
add
into
and
incb
bnd
call
and
add
mov
pop
out
sarb
xchg
ljmp
add
jbe
fsub
sbb
pop
add
add
add
add
add
rcrl
incb
inc
add
incb
mov
pusha
add
xlat
dec
add
incl
pop
add
add
or
inc
add
adc
add
inc
add
or
inc
push
add
push
add
incb
lret
mov
rcrl
adc
add
incb
mov
int
add
aaa
incb
call
add
mov
sub
pop
add
ret
or
lret
jae
cmp
add
add
cltd
and
add
xchg
pop
add
add
incb
repz
icebp
dec
add
rcrl
add
int
rcr
push
mov
mov
or
cli
jb
mov
push
add
lcall
add
add
loop
mov
add
add
movsl
out
push
xchg
pop
incb
dec
mov
stos
xor
mov
cltd
in
test
divb
mov
shrl
cltd
ja
dec
add
incb
outsb
add
dec
add
stos
pop
add
add
mov
add
out
ret
dec
add
into
inc
mulb
add
jle
test
sti
add
jae
shr
repnz
cltd
nop
mov
fcmovb
jp
stos
pop
incl
adc
add
int3
ret
jb
cwtl
push
add
add
fs
mov
test
add
js
shr
add
inc
repz
add
incb
jg
outsl
inc
add
add
decl
add
aam
jns
incb
insb
add
incb
test
and
add
jne
sbb
add
xchg
mov
xchg
cmpsb
mov
or
outsb
add
add
and
add
ret
scas
leave
or
pop
incl
inc
add
add
rcrb
add
and
add
fcmovu
pop
or
mov
incb
mov
inc
add
push
incl
xchg
and
add
xchg
sub
enter
jns
incl
insb
add
pusha
add
xor
add
iret
psubd
stos
mov
incb
bound
dec
incl
inc
add
incb
mov
std
or
and
add
add
mov
sub
or
incb
pop
incb
mov
add
and
add
orb
incb
pop
pop
daa
incb
pop
jnp
add
add
popf
adc
add
push
add
mov
inc
data16
cmpsb
mov
in
sbb
sahf
dec
add
add
add
xor
add
setl
imul
int3
rcrl
jge
scas
or
iret
add
add
add
test
dec
add
add
mov
push
add
int3
sbb
jecxz
pusha
add
add
xchg
sbb
out
fsubr
je
pop
add
dec
add
dec
and
add
pop
add
fildll
mov
fld
stc
cld
push
add
in
cli
ror
cmp
pop
inc
add
dec
mov
xor
add
and
outsl
shrb
mov
incb
repz
stc
sbb
je
adcl
aas
jae
dec
push
incb
jae
incb
ljmp
add
insl
mov
das
in
in
add
out
incb
inc
or
incb
sbbb
add
incb
xchg
in
jne
sub
dec
dec
add
incb
popa
push
loopne
incb
push
incl
mov
add
cmp
mov
add
add
add
incl
dec
add
test
push
add
incb
sub
add
xchg
mov
repz
push
add
inc
inc
add
push
xchg
pop
incl
adc
add
xchg
je
sbb
pop
pop
add
cmpsb
mov
add
pop
push
incb
sub
incb
call
add
cmc
mov
mov
push
xchg
push
incb
xchg
stos
lret
lahf
bound
or
add
hlt
and
add
pop
incb
and
add
outsb
add
add
mov
jge
rcrb
incb
repz
cmp
add
test
imul
in
sahf
and
sbb
fnsave
incb
test
add
sbb
incb
sbbb
incb
ljmp
add
add
aad
js
fnstenv
incb
test
add
add
inc
ljmp
sub
mov
incb
arpl
incl
mov
add
incl
adc
add
fdiv
clc
jmp
add
mov
add
or
aad
mov
add
adcl
inc
add
dec
ficomps
ret
push
cmp
xorl
add
incl
or
pushf
rcrl
lock
std
lods
push
add
inc
scas
sbb
sub
add
inc
add
add
and
add
add
lcall
inc
addl
out
push
add
inc
sbb
mov
add
incb
sub
jo
or
repz
add
ret
adc
add
int3
jp
movsb
xchg
ret
adc
add
jp
int3
add
add
inc
push
add
incl
hlt
fdivr
inc
pop
fwait
mov
jg
in
sbb
fisubs
incb
daa
incl
or
mov
outsl
jmp
js
mov
and
into
xchg
xlat
jl
mov
pop
add
movsb
push
add
jecxz
in
sbb
add
or
inc
add
sarb
add
add
xchg
int3
rolb
xchg
push
out
xchg
cs
pop
incb
pop
insl
je
add
add
test
incb
aaa
incb
clc
push
inc
pop
shlb
incl
aas
rorl
insb
add
incb
cmovl
add
add
incb
jmp
add
add
in
jb
pop
add
add
pushf
dec
fnstsw
add
xor
add
jnp
mov
test
pop
xchg
and
add
incl
in
sub
pop
add
in
pop
movsb
dec
sbb
scas
dec
pop
leave
fsqrt
in
mov
jne
adc
add
push
mov
incb
or
mov
push
pop
out
xor
add
mov
incb
in
dec
add
int
xchg
loopne
mov
cli
lret
mov
jl
and
incl
xchg
xlat
and
add
mov
loopne
loop
and
add
sub
nop
mov
push
add
subl
mov
add
cmp
jno
insl
out
add
pop
incb
jb
and
add
add
push
rcrl
pop
incb
loope
add
and
add
ja
rcrb
fdivrl
and
and
ret
add
cmp
lods
mov
scas
mov
incb
push
or
add
rcr
test
and
add
mov
out
nop
mov
lret
mov
xchg
dec
mov
add
add
sti
pcmpeqd
jg
cmpsl
mov
add
adc
add
incb
mov
dec
add
push
shrb
xlat
filds
incl
jg
cmc
pop
pop
add
add
test
pop
incb
mov
mov
aad
jp
jmp
add
call
mov
shlb
pop
pop
incb
movsb
push
add
pushf
sbb
add
jne
incb
push
incb
inc
add
out
incb
push
add
add
add
cmp
jg
out
cmpsl
jg
add
enter
add
xor
add
mov
inc
sarb
shrl
jp
leave
cmc
cmc
aam
adc
add
sbb
add
cwtl
xchg
or
adc
add
dec
add
add
incb
popf
icebp
pop
scas
pop
incb
jnp
add
cmpsb
pop
or
or
cld
add
add
jmp
add
rcr
jns
jp
add
adc
add
loop
mov
inc
sub
in
std
xchg
sub
push
add
into
jle
mov
cli
jno
incl
mov
pop
add
scas
push
add
scas
inc
sbb
fwait
xchg
jb
aad
mov
add
loopne
mov
outsl
fistpl
pusha
add
mov
push
add
int3
test
incl
mov
xor
add
loop
das
xor
add
dec
add
incb
pushl
xor
add
imul
xchg
dec
xchg
lods
cmpl
aas
lds
add
jge
incb
push
add
inc
add
inc
add
inc
add
adc
data16
popf
cmp
push
pop
inc
mov
push
add
push
add
mov
push
add
orb
push
add
in
icebp
rep
out
push
add
aad
incb
bound
int
scas
incb
dec
mov
push
add
add
add
fsubr
mov
incb
mov
outsb
add
sbb
ret
mov
pushf
xchg
xor
add
add
add
incb
add
add
pop
in
jbe
andb
jne
lea
add
cwtl
daa
incb
inc
cs
sbb
shll
pop
mov
mov
add
add
mov
cmp
stos
push
add
outsb
add
add
sti
lea
test
xchg
mov
inc
add
movsl
loope
fimull
fstp
imul
add
aam
pop
xlat
push
xchg
pop
incb
faddl
sti
movsb
jnp
je
pop
xchg
xchg
jae
outsl
add
add
repz
mov
incb
or
mov
adc
add
add
add
cmp
mov
ror
cmp
out
pop
incb
shlb
leave
out
sub
cli
sub
mov
add
add
incb
add
add
and
add
add
loopne
bound
out
insl
data16
dec
loope
mov
aam
incb
xor
add
shr
push
out
add
inc
incl
cmc
push
add
mov
add
xlat
loope
add
jne
sahf
xor
add
cltd
pop
cmp
rorb
loopne
inc
in
mov
daa
incl
std
rorl
aas
lcall
add
incb
lret
inc
add
xchg
ret
add
xchg
inc
adc
add
ljmp
fistps
incl
daa
incb
cmpb
cli
or
repnz
jb
andl
mov
and
add
rcll
add
mov
cmp
int3
mov
sbb
or
sbb
mov
incl
cmp
add
xchg
icebp
jp
pop
add
sbbb
dec
xchg
notl
fcom
xchg
insl
imul
pop
add
or
into
xchg
xor
pop
incb
jle
rclb
add
mov
xor
add
imul
stos
stos
std
jnp
cmp
fmuls
incb
sbb
and
add
mov
and
mov
incb
jne
or
adc
add
xchg
hlt
sbb
add
popa
jbe
pusha
add
lret
call
cmc
lret
adc
lret
outsl
xchg
aam
incb
inc
imul
inc
add
mov
push
add
jb
mov
incl
mov
insb
add
xor
add
add
inc
push
incb
out
js
gs
ret
incl
cmp
cmpsb
cmp
incl
inc
add
or
imul
add
incb
sub
outsb
add
add
dec
rolb
adc
add
aad
incl
je
dec
add
incb
xchg
popa
lds
incb
sbb
std
sbb
out
mov
mov
scas
stc
pop
incb
hlt
jg
fidivrl
pop
incl
scas
fcomip
sarl
ja
xorb
push
incl
or
jne
add
stos
jmp
shll
add
incb
adcl
shl
cmp
pusha
add
dec
add
clc
cmp
incb
in
jmp
mov
pop
add
add
in
incb
test
add
movb
mov
lock
incb
jle
sub
incb
jo
sbb
loopne
sbb
incb
mov
loopne
mov
jb
push
add
add
sti
shlb
incb
pop
cmc
insb
add
loopne
in
incb
fwait
cmp
mov
add
add
jbe
xor
add
incb
add
add
in
jmp
scas
push
add
jg
mov
repnz
aam
incl
lock
loope
add
test
add
imul
sbb
sub
lods
xor
add
pop
imul
adc
mov
add
jg
jg
incb
in
in
rcl
mov
add
mov
add
add
ja
ficoml
int
dec
add
incl
xor
stc
xor
push
nop
test
add
test
and
add
push
add
add
rcrl
adc
add
or
sti
mov
pop
bound
ret
xor
add
pop
adc
add
daa
incl
mov
incb
imul
incl
scas
aam
lcall
sbb
bound
sub
pop
add
incb
push
add
pop
add
mov
add
add
out
mov
jecxz
jg
mov
fst
test
xchg
mov
incb
loopne
sbb
fstpt
xchg
jns
loope
and
add
adc
add
adc
add
adcl
jp
mov
incb
cli
sub
andb
rcr
xchg
incb
test
jbe
push
lock
xor
add
std
bound
or
pop
dec
lds
incb
xor
add
xchg
les
incb
cltd
inc
add
repz
push
incb
cmp
xchg
icebp
std
imul
push
inc
or
xor
add
and
add
fstpl
add
add
cli
mov
mov
add
stc
aaa
incl
cmpsb
inc
call
jns
incb
sub
rcl
add
aam
test
incb
cmp
je
stos
add
incb
mov
xchg
aam
pop
add
add
incb
data16
add
add
add
sbb
add
xchg
push
incb
in
sub
mov
fmull
popa
gs
mov
add
dec
add
jmp
add
mov
fcmovnb
repz
and
incl
mov
incl
dec
add
mov
add
add
add
or
or
pop
add
add
xchg
push
add
add
add
add
cld
lods
sub
mov
repz
add
mov
push
sub
pop
add
sub
enter
add
add
pop
incb
mov
jmp
and
add
leave
jnp
add
incb
sub
inc
dec
add
add
add
jmp
int3
insb
add
jl
jmp
sub
xchg
insb
add
sar
push
add
add
mov
out
fadds
incb
cmp
into
into
cmp
or
or
cmp
xchg
negl
add
iret
movsl
mov
leave
jg
jne
inc
add
popf
stc
leave
jb
mov
pop
add
fdivr
cmpl
stc
lahf
mov
dec
add
fdivrs
popf
roll
add
push
incb
cli
dec
popa
arpl
out
add
incl
test
int
adc
add
add
incl
hlt
mov
lea
out
mov
fbstp
incb
cld
jb
rcrb
push
incb
in
fldt
add
add
rorb
mov
fbstp
add
insl
in
adc
add
rclb
add
mov
add
cli
add
add
lock
in
jo
lods
cmp
push
add
add
add
add
cmp
incb
xchg
add
add
incl
add
add
incb
cwtl
push
add
incb
add
add
incb
lret
jmp
jl
jg
sbb
xchg
lds
push
incb
cmp
decl
or
add
cltd
pop
add
rcrb
xchg
lret
add
mov
popa
jnp
jecxz
pop
add
mov
inc
inc
dec
add
vcvttss2si
adc
add
inc
and
add
je
ficomps
add
xlat
mov
out
out
incb
xchg
or
or
add
push
jge
incb
stos
sub
decb
mov
stos
cwtl
in
add
je
pop
incl
mov
bound
xchg
dec
lods
xchg
push
add
incl
cmp
call
cmpsb
movsl
jmp
lods
fidivrs
add
pop
fdivs
sbb
popa
xrelease
push
add
incl
stos
fisubl
jbe
jne
mov
incl
movsb
mov
in
rcrb
scas
mov
add
add
lods
aas
cmp
mov
incb
jmp
call
incl
inc
add
enter
fs
icebp
mov
or
clc
lret
enter
jge
cmp
incb
and
add
pop
add
leave
repz
loopne
add
out
lods
mov
add
mov
dec
add
mov
test
and
add
push
adc
add
xchg
xchg
int3
jle
popf
push
add
lret
push
cmc
incb
ja
xchg
mov
add
incb
les
add
pop
fmuls
jb
mov
aas
jnp
in
stos
jno
add
and
add
incb
jg
pop
aad
xor
add
jl
mov
fcoms
incb
adc
add
pop
add
add
xor
add
incb
bound
dec
add
incb
lahf
add
add
push
add
rcrl
shll
xor
add
aaa
incb
dec
add
incb
incb
jb
insl
rolb
inc
add
add
bound
mov
sub
fcomi
ret
mov
add
inc
sbb
hlt
sbb
outsl
in
orl
cmp
incb
pop
inc
adc
add
add
incb
push
incb
pusha
add
fdiv
cmc
sbb
xchg
xchg
sub
and
add
jl
or
or
inc
add
incb
in
sbb
mov
scas
push
incl
pop
incb
shll
test
lods
xchg
sbb
add
dec
loope
je
loop
add
fwait
in
imul
xor
add
popa
add
fldt
add
cmpsl
cltd
mov
pop
push
or
mov
or
notl
incb
add
testl
add
repnz
incb
sbb
paddw
loopne
add
cmp
push
add
das
inc
add
add
cmp
mov
fwait
sbbb
ret
iret
xor
add
in
sub
xchg
cmp
add
jg
add
stc
in
or
sub
data16
add
test
pop
add
scas
mov
add
nop
mov
lret
dec
add
fnstcw
add
add
add
insl
leave
sbb
jne
pop
add
aam
movsb
sbb
jno
in
lods
in
repnz
adc
incl
test
add
and
add
add
cltd
sbb
add
incl
loop
mov
cmc
enter
add
call
xchg
js
xadd
add
out
test
jle
incb
adc
add
test
cmc
xchg
pop
add
pop
incb
stos
jne
pop
add
insb
add
incb
sub
incb
mov
in
stos
insl
js
lret
fstpl
add
rcl
call
jp
inc
mov
inc
adc
add
and
add
test
into
outsl
add
add
add
gs
add
push
add
xor
add
add
add
incb
lahf
mov
jecxz
jge
jno
sub
mov
incb
cmp
aad
add
stos
mov
loop
fwait
jns
ficomps
sub
data16
push
add
dec
sti
push
incb
scas
lret
inc
add
add
jae
add
add
incb
movsb
mov
or
test
incb
or
mov
jl
repz
xor
add
inc
jb
out
add
add
push
add
or
mov
inc
and
add
add
add
aas
aad
add
sub
adc
add
bound
add
add
incb
push
aaa
incl
int
dec
add
adc
add
pop
loopne
add
lods
or
add
addb
add
rcrb
fdivr
sarb
incb
in
cli
mov
add
incb
fidivs
add
and
add
add
mov
or
push
push
add
incb
pushl
dec
shll
loop
xlat
mov
mov
incl
adc
add
add
or
mov
add
pop
mov
call
mov
aad
incb
adc
add
incb
xor
add
incb
arpl
incb
clc
jg
add
in
incb
mov
cmp
pop
inc
mov
add
jl
sbb
in
out
fdivrl
imul
sahf
add
add
imul
mov
jg
xchg
push
add
add
push
shrb
incb
pusha
add
sbb
pop
cmp
outsb
add
incb
outsl
mov
or
add
add
cli
mov
add
xchg
fdivl
incb
mov
add
incl
cmpsl
cmc
pop
std
sbb
xor
add
cmpsl
xchg
incb
test
push
add
icebp
enter
or
test
jmp
lds
incb
mov
int
add
inc
mov
jb
jnp
add
mov
incb
xchg
out
push
xlat
cltd
loopne
sub
fiadds
test
adc
aaa
incb
cmpsb
lcall
rorl
add
incb
or
call
subb
jne
arpl
sbbl
out
xchg
mov
mov
into
jbe
and
add
jg
add
xchg
aaa
incb
stc
push
lcall
pop
incl
cwtl
mov
add
add
add
out
incb
sbb
incl
adc
add
incb
push
popa
les
cwtl
mov
add
add
jno
add
dec
daa
incl
das
cmp
add
add
incb
shl
xchg
shl
inc
push
add
inc
add
incl
popa
into
jg
test
incb
jecxz
incl
sbb
incb
sub
add
add
and
cmp
iret
data16
pop
lcall
incb
jmp
outsb
add
ret
add
cld
cmp
xchg
sbb
mov
add
or
sbb
jg
add
test
incb
cmpsb
xchg
lea
inc
jne
pop
jle
dec
add
out
inc
mul
add
add
sub
add
adc
add
mov
addb
or
das
incl
incb
or
incb
pusha
add
incb
dec
add
add
add
add
mov
add
push
add
lahf
jmp
pop
incl
ds
xchg
cmc
sub
mov
fisubl
cmp
add
add
add
add
mov
add
or
pop
add
mov
add
test
sti
out
hlt
dec
adc
add
incb
cmp
in
lahf
insl
enter
stc
mov
add
sbb
add
lods
inc
add
and
fldt
xlat
icebp
lahf
sbb
testl
incb
inc
pop
add
ja
add
aaa
incb
cmpsb
push
add
xchg
inc
cmc
push
jg
inc
or
push
push
outsb
add
xchg
stc
jmp
add
mov
mov
add
incb
push
jmp
incb
test
js
mull
incb
jecxz
push
incb
mov
in
cmovl
lret
data16
test
pushf
mov
add
add
add
add
add
push
incl
incl
cmp
lods
lds
incb
out
gs
add
xlat
sbb
decl
test
add
push
cmpsb
fptan
jg
mov
incb
cs
push
js
sbb
mov
add
sbb
xchg
xchg
xchg
push
add
jg
pop
fadds
dec
add
mov
add
pop
add
incl
fistps
add
fnstenv
jge
add
repz
sbb
fcoms
pop
incb
incl
fstl
incl
lcall
cli
lahf
and
add
xor
add
test
scas
mov
incl
in
pop
add
cmpsb
or
xchg
push
add
mov
testb
incb
and
add
sarb
xchg
mov
sbb
arpl
add
int
add
sti
rcrl
mov
add
mov
aas
sbb
push
add
incb
lahf
and
add
fidivl
incb
jns
pop
jnp
insb
add
aad
add
mov
add
add
daa
incb
dec
add
call
jge
add
sbb
inc
lret
add
sbb
sbb
cmp
arpl
mov
incb
mov
xchg
inc
pop
pop
add
add
insb
add
mov
xchg
add
add
incl
jb
sar
add
push
add
pop
add
fistps
adc
add
incb
subl
adc
add
add
incb
adc
add
jne
incb
pop
incb
inc
mov
fdivrl
in
add
incb
or
ljmp
xchg
add
add
dec
add
cltd
pop
push
add
test
or
mov
push
add
ret
xchg
gs
add
rolb
push
add
sbb
add
popf
pop
add
jecxz
hlt
jle
ljmp
add
stos
ret
jge
mov
mov
mov
js
lret
lock
in
push
incb
add
add
sub
and
add
incb
adc
add
jae
add
push
add
incb
jmp
add
pop
incb
cmpsl
jb
push
rclb
in
incb
mov
add
lret
add
jns
and
add
add
add
sub
mov
hlt
ret
ret
incb
mov
sbb
sarb
incb
in
popf
in
repz
icebp
pop
push
jno
inc
movsb
loopne
cltd
jg
push
add
sub
inc
sti
in
test
rcr
incl
jl
loope
add
add
add
pop
incb
icebp
pushf
xchg
inc
mov
jg
inc
lret
in
incb
imulb
push
jne
sahf
popf
push
add
in
in
inc
add
cmc
push
incl
mov
inc
add
lgs
xor
add
incb
rcrb
xor
add
add
bound
pop
add
add
push
lds
xor
add
add
incl
mov
add
sahf
test
dec
add
push
incl
aad
incl
rorl
and
add
jno
lods
cltd
aas
insb
add
movsb
clc
push
add
enter
incb
cmp
fwait
mov
add
fsubrl
test
xor
add
lods
mov
add
sub
incl
ljmp
bound
cmpsl
aaa
incb
push
les
imul
incl
cmp
xor
add
add
add
sub
mov
je
jns
inc
ljmp
add
xlat
dec
jmp
add
add
add
std
sahf
lds
add
and
add
jl
cmp
bswap
adc
add
incb
insl
pop
loope
lock
xchg
cmc
fdivs
outsl
add
hlt
or
ja
popf
aaa
incl
mov
fisubrl
incb
scas
cmp
mov
incb
frstor
incb
clc
fdivr
cmp
out
add
incb
test
test
rclb
add
push
add
add
sub
add
add
lahf
jne
rcrl
mov
inc
add
add
add
or
add
aam
mov
cmp
incb
jle
ficompl
adc
add
incb
push
add
add
xor
add
add
insl
inc
add
xlat
cmp
dec
sahf
xchg
mov
jns
add
fs
hlt
xchg
mov
pop
sbb
out
inc
add
push
jl
cwtl
insl
lods
mov
inc
add
add
add
filds
adc
add
add
in
repz
xchg
sub
xor
add
data16
and
add
incb
jbe
lods
sub
shrl
add
out
push
incl
imul
xor
add
add
add
incb
cs
clc
cmp
jg
xor
add
add
incb
imul
movsb
inc
scas
jmp
or
adc
add
add
add
incl
lret
jge
lock
add
add
add
out
stos
push
add
add
incb
fdivr
stos
sub
stos
push
insl
mov
push
add
incl
mov
lcall
incb
push
incl
daa
incl
adc
add
add
incb
sub
insb
add
push
add
std
push
add
incb
xchg
mov
or
mov
push
add
add
push
add
mov
add
mov
incb
jle
dec
sub
iret
gs
add
xchg
nop
lds
incb
pop
incb
xor
add
add
fisubrs
incb
repnz
add
incb
sbb
inc
jno
xchg
nop
stos
jne
sahf
movsl
enter
pop
incb
ds
push
adc
push
add
out
jmp
incb
lock
add
add
incb
stos
insb
add
dec
add
add
and
add
out
and
mov
lds
add
inc
or
sahf
lock
add
leave
and
lods
inc
mov
outsl
shl
faddl
add
incb
cmpsl
fcoms
jbe
movsb
jno
add
incb
or
add
incb
data16
stc
jbe
or
dec
push
sti
subb
incb
add
add
rcl
jb
adc
add
cmpsl
das
xchg
in
js
push
add
incb
push
incb
lods
mov
incl
outsl
cmp
sub
jle
in
ret
in
add
aaa
incb
sub
mov
iret
dec
loopne
adc
add
incb
adc
add
incb
addl
xor
add
incb
jns
jo
add
dec
add
mov
sub
scas
fbstp
add
fwait
movsb
xor
add
aas
and
add
out
mov
arpl
add
xchg
xchg
bound
repnz
or
push
je
jns
mov
add
daa
incl
dec
add
imul
push
inc
add
fldcw
mov
repz
and
add
mov
mov
or
outsl
inc
jb
repnz
add
add
sub
adc
add
add
loop
lcall
inc
fidivs
incb
sbb
stc
add
add
jle
and
add
in
sub
incl
cmp
add
jmp
mov
cmp
mov
add
cli
xlat
jb
ret
add
add
add
stc
fdivr
push
mov
incb
rcrl
add
inc
add
push
add
push
add
add
in
dec
add
pop
incb
mov
ret
add
jns
incb
jo
dec
add
lds
push
mov
add
push
dec
decl
add
ficomps
add
or
jno
or
sub
xor
incb
fnstsw
fcmovbe
fists
add
mov
or
in
cmp
mov
xor
add
adc
add
add
adc
add
mov
dec
enter
add
aam
push
incl
pushf
mov
xlat
repnz
dec
cmpsb
vrcpss
incl
inc
add
dec
add
jae
mov
mov
cmp
lcall
inc
ficoml
mov
mov
xchg
jb
add
lret
fwait
push
incb
cmp
fdivs
add
add
ljmp
ljmp
std
mov
add
std
inc
mov
incl
xor
scas
int
dec
push
add
in
mov
sub
push
addr16
xchg
dec
test
add
scas
jg
add
dec
add
mov
add
mov
incb
into
call
lods
in
jg
mov
push
incb
or
mov
push
mull
incb
and
add
xlat
mov
add
incb
pop
incb
pusha
add
incb
data16
incl
pop
je
daa
incb
dec
add
incl
sub
sbb
stos
cltd
mov
dec
cmp
and
add
mov
cmpsl
cmp
jo
incb
jns
and
add
add
xor
add
nop
hlt
push
incb
pop
add
ret
jl
sbb
or
xchg
cmc
cmpsl
push
add
imulb
jmp
add
mov
mov
incl
jno
add
test
add
add
mov
add
daa
incb
stos
lret
loop
push
incb
into
dec
add
incb
dec
add
add
adc
dec
and
add
sahf
sub
dec
mov
cwtl
pop
leave
cmp
incb
add
add
incb
jecxz
movsl
push
incb
xor
add
ret
xor
add
insl
sarb
add
xchg
or
add
inc
add
add
ficomps
add
xor
add
push
mov
dec
add
push
add
incb
mov
bound
lea
xor
add
lahf
mov
incl
lods
movaps
xchg
mov
add
add
push
add
mov
sbb
dec
add
push
addr16
lahf
xchg
add
add
add
incl
mov
add
fwait
jbe
sbb
add
incl
sahf
les
inc
adc
add
dec
pop
add
into
iret
out
xchg
call
jae
mov
jno
dec
xchg
subl
sti
ljmp
add
add
pop
sbb
jle
addr16
movsl
rclb
add
add
incb
adc
add
add
cmc
inc
add
mov
popa
das
out
test
sub
out
pop
add
incb
jle
ret
push
jnp
add
mov
add
inc
shlb
or
add
add
add
data16
add
add
xchg
mov
add
add
sbb
pusha
add
add
add
cmpsl
pop
scas
dec
mov
or
add
fstpl
fwait
ja
incb
sarl
imul
sbb
or
enter
push
add
js
mov
add
incb
lret
inc
add
mov
incb
mov
into
outsl
inc
jne
adc
add
lock
add
jns
and
add
pop
fld
dec
fwait
inc
add
xchg
aam
out
sub
incb
jl
fldl
mov
add
lock
pop
add
incb
sbb
lcall
popa
pop
add
jmp
lret
incb
push
add
in
adcl
testl
sahf
cmc
daa
incl
lahf
push
outsl
icebp
daa
incl
out
ret
push
add
cmc
jae
jno
add
incb
xchg
sti
jl
jg
mov
sbb
in
ja
incb
add
add
push
add
add
add
mov
inc
iret
imul
sbb
incb
push
inc
add
inc
add
inc
mov
incb
loop
xor
add
add
or
call
aas
jne
incb
std
sbb
mov
test
add
push
add
incb
jge
add
aam
add
dec
sbb
sub
pusha
add
mov
add
add
aad
add
mov
push
add
fcomi
repz
inc
add
sub
cmc
rcr
fcoml
les
sub
incb
xchg
rol
incb
xchg
incb
insl
out
and
add
pushf
sahf
mov
popa
into
cmp
jns
bound
jnp
add
mov
xor
negl
add
insl
sbb
mov
popf
data16
incb
adc
cmpl
fisubrl
dec
add
in
adc
incb
pop
incb
xlat
sbb
hlt
and
add
les
add
mov
mov
incb
push
push
jmp
xchg
inc
add
dec
inc
add
add
ret
mov
mov
pushf
xlat
push
and
add
add
out
fwait
push
incb
push
incb
orl
or
xchg
jbe
call
fistl
outsb
add
enter
add
enter
sti
rcl
mov
add
add
mov
shl
loop
lret
adc
add
incb
add
add
incb
icebp
add
add
add
dec
add
pop
add
fimull
cmp
nop
push
add
add
add
fidivl
and
add
mov
mov
fsubl
add
add
scas
lret
add
mov
and
add
push
inc
xchg
add
incb
out
adc
add
rcrl
insl
xchg
hlt
xor
add
mov
add
mov
jns
inc
push
incl
xor
add
fidivl
and
add
jns
jbe
popl
sub
add
incb
lds
inc
and
add
fnstcw
push
incb
jb
add
jp
xor
or
incb
pop
loope
js
push
add
sbb
scas
cmc
inc
add
add
incb
incb
in
push
dec
xchg
repnz
or
cmpsb
xor
add
mov
movsl
loope
fiaddl
incb
neg
hlt
add
add
sti
test
sbb
incb
xor
add
incb
cltd
mov
incb
pop
incl
fmuls
mov
imull
or
clc
lods
in
add
lret
xchg
sbb
fdivs
dec
add
data16
aas
pop
incb
js
cltd
xor
add
loopne
in
inc
add
incb
push
add
mov
inc
add
sbb
dec
cmp
mov
jo
scas
mov
dec
add
addb
incb
adc
add
inc
push
cwtl
loope
xchg
sbb
rorl
dec
add
repz
aaa
incb
mov
inc
add
add
xchg
roll
xchg
push
incb
sbb
stos
gs
add
add
shlb
xor
add
cmp
incb
pop
aad
add
iret
bnd
mov
sti
daa
incb
arpl
enter
mov
pop
add
out
test
xor
add
xor
add
mov
iret
mov
or
mov
test
add
clc
jae
pop
cmp
test
push
incb
mov
stc
lea
repnz
add
add
cwtl
lods
pushf
dec
add
add
incb
sbb
push
add
push
add
jl
pop
add
add
add
add
mov
add
incb
fdivrs
cmp
stos
data16
incb
enter
inc
push
add
jg
enter
add
mov
shrl
add
add
add
incb
jns
aad
add
sti
pop
inc
add
add
into
movsl
test
dec
add
outsb
add
add
incb
mov
incb
dec
jecxz
add
mov
pop
pop
mov
out
inc
add
cmpl
and
add
mov
add
add
add
arpl
enter
mov
or
mov
and
add
dec
xchg
xor
add
incl
enter
sub
push
add
imul
cmpsl
inc
add
loopne
ret
add
pop
mov
incb
repnz
push
add
add
push
add
mov
add
incl
scas
dec
cmp
or
test
adc
add
enter
stos
fsubr
cmp
push
add
and
add
incb
jmp
add
incb
push
jge
add
cwtl
xor
add
incl
movsl
xchg
dec
push
incb
cli
and
add
jns
decb
xchg
ret
mov
incb
pop
incb
cltd
mov
dec
jecxz
lcall
jae
add
add
add
incl
mov
jno
mov
das
mov
add
ret
cmc
or
jge
jnp
mov
incb
dec
enter
or
std
out
fsubr
mov
and
pop
dec
out
cmp
fyl2x
aas
inc
pusha
add
scas
loop
rcr
out
lock
int
shlb
and
add
mov
pop
jle
repz
cltd
lods
xchg
aas
les
add
lods
push
add
incb
mov
add
inc
add
daa
incb
mov
movntq
add
pop
mov
out
add
mov
mov
xlat
add
rorb
int3
inc
add
jle
xchg
dec
add
incb
mov
incb
enter
incb
ffree
call
add
add
cmp
cmp
xchg
mov
fwait
add
add
dec
add
in
stos
cltd
clc
pop
incb
sub
fsubrp
push
add
testl
ret
push
inc
add
incb
jnp
cmp
sbb
shlb
not
mov
incb
iret
mov
sbb
popf
outsb
add
jle
dec
fisubs
das
imul
push
add
dec
mov
incb
mov
or
dec
pop
incb
loopne
add
add
jnp
dec
sbb
aas
inc
pushl
daa
incb
popa
pop
rclb
add
xor
add
incl
popa
dec
call
daa
incl
inc
add
ljmp
incb
addr16
inc
add
add
ljmp
jbe
xchg
push
add
incb
sbb
mov
add
testb
add
dec
add
push
sub
sub
mov
add
incb
sub
out
push
add
add
add
into
jbe
in
or
test
push
add
incl
xchg
inc
mov
nop
xor
add
je
or
add
mov
cmp
insl
mov
out
push
xchg
out
xchg
jle
and
add
xchg
incb
push
add
incb
popf
pop
add
sbb
add
imul
mov
mov
je
jle
addl
add
int3
push
sub
mov
cmp
in
cwtl
mul
fsts
xchg
mov
dec
dec
add
mov
pop
add
incb
jge
in
out
jae
loopne
loope
out
testl
sub
mov
push
add
mov
sbb
cmp
add
out
xchg
jp
xchg
pop
je
sbb
incb
hlt
jae
incb
adc
add
add
mov
negl
add
and
add
and
incb
popa
sbb
add
incl
jle
push
or
and
cmpsl
stos
cwtl
and
add
addr16
add
adc
add
incb
pop
incb
and
add
pushf
jne
add
data16
je
push
add
incb
mov
add
incb
js
dec
lret
lods
mov
pop
add
add
mov
add
aaa
incl
mov
add
in
mov
sarb
incb
inc
add
movsb
or
add
lret
lcall
add
incb
loopne
ljmp
xor
add
incb
and
add
hlt
push
enter
add
rorb
sub
out
pop
incl
js
mov
fisubrs
test
movsl
jmp
ret
jo
lret
sbb
sbbl
mov
push
incb
popa
jno
ret
in
sbb
add
dec
add
out
add
xchg
sbb
dec
xchg
dec
add
add
adc
add
cmp
pop
imul
add
loop
dec
add
mov
cld
pop
add
incb
sahf
mov
inc
add
add
jnp
add
cmp
add
or
cmp
lret
jbe
or
repz
lret
add
incl
jbe
jno
std
xor
xchg
xchg
push
push
incb
jecxz
add
xchg
movsb
imul
lret
pop
add
jno
add
mov
sub
outsb
add
add
add
add
rorl
add
je
outsl
cmc
adc
add
incb
xchg
jno
int
mov
test
scas
in
mov
xor
add
xchg
add
incb
inc
add
add
add
push
ljmp
and
add
add
incb
maxps
insl
mov
outsl
mov
scas
xor
sbb
int
in
int3
and
add
dec
inc
add
in
outsb
add
incb
inc
jae
cmp
data16
add
incb
cld
sub
incb
mov
push
add
pusha
add
mov
adc
add
incb
xor
add
or
fisubrl
add
das
out
out
call
incl
add
mov
add
andb
xchg
cmp
cmp
mov
xchg
sbb
movsl
add
add
add
incb
adc
add
incb
mov
mov
add
push
incl
fwait
mov
and
add
xchg
mov
add
or
ret
xchg
daa
incb
cmc
push
add
add
add
mov
push
add
incb
pop
add
ret
clc
mov
mov
mov
add
add
outsl
sar
inc
sbb
lret
incl
pop
add
cmpsb
inc
cmp
add
add
inc
push
add
add
int
add
add
add
add
add
incb
addb
add
xor
add
add
add
push
push
add
add
add
add
les
inc
xor
add
incl
movsl
mov
fdivrs
push
add
test
add
incb
out
push
stos
sbb
mov
push
and
add
sub
pop
pop
test
in
pop
xchg
jmp
add
push
add
pop
add
cmp
in
mov
cmp
add
xor
add
xor
add
enter
jns
fdivs
imul
add
cmp
sub
popa
push
cmp
les
pop
test
scas
cmpsb
sbb
incb
insl
and
add
xchg
push
incb
sub
mov
pop
add
add
dec
dec
decb
add
add
neg
jmp
add
add
incb
xchg
push
cmp
jno
pushf
pop
add
add
add
xchg
add
add
xchg
lret
stos
test
jae
enter
sti
mov
incb
jp
pop
add
out
incb
and
bound
mov
insl
cld
or
add
pop
in
mov
repnz
daa
incb
adc
add
mov
pop
add
add
mov
and
cs
aam
add
or
mov
dec
add
jae
add
pusha
add
stos
incb
sub
add
incl
mov
jle
out
inc
fcompl
lret
shrl
add
add
lcall
int
fwait
lods
mov
sarb
scas
andl
test
cmp
incb
inc
add
cld
push
add
xchg
pusha
add
incb
mov
add
das
sbb
mov
add
and
add
pushf
mov
mov
mov
pop
add
xchg
incb
lahf
and
add
push
add
add
incb
mov
jecxz
or
pop
insb
add
imul
gs
add
mov
pop
incb
aam
lret
aas
or
sub
and
add
incb
xchg
int3
mov
add
incb
jno
pop
add
pop
inc
add
dec
mov
popa
imulb
ror
push
repnz
add
ror
cmp
xchg
xchg
jns
add
bound
out
xor
add
ds
in
mov
rcll
imul
lock
incb
jg
aad
incb
xor
add
mov
cmp
xor
add
nop
mov
add
addl
add
into
pop
incb
xor
add
sbb
lods
mov
inc
add
incl
mov
add
sarl
aam
incb
fisubrs
sbb
pop
mulb
add
fmul
cltd
lock
iret
sbb
mov
add
pop
add
dec
add
test
add
incl
sub
push
add
pop
add
cmp
adc
add
add
in
sub
inc
aas
shl
jb
mov
cwtl
frstor
incb
stc
call
in
add
push
incb
data16
lcall
jl
cmp
incb
adc
add
incl
add
add
add
sub
push
incb
rcll
incb
sub
cmp
add
or
lods
pop
imul
fiadds
aaa
incb
and
add
shlb
adcb
add
lcall
xchg
mov
dec
ret
jno
js
push
push
add
incl
addl
sahf
sbb
adc
add
sarl
add
incb
xchg
mov
incb
mov
icebp
addb
ljmp
cmp
in
rcl
adc
add
and
add
pop
adc
add
jg
int
lahf
jae
incb
cmp
pop
push
add
hlt
mov
xor
add
test
add
xor
add
jne
incb
dec
add
push
incl
adcl
pop
and
pop
add
bound
jnp
outsl
pop
incb
mov
dec
leave
pop
incl
sub
pushf
aam
add
push
add
mov
mov
fisubl
cmc
jb
push
add
lcall
in
add
orl
pop
add
add
fisttpll
or
adc
add
add
rorl
add
jae
add
incb
xor
aam
jno
lea
incl
popa
in
sub
imul
testb
add
push
add
add
add
add
pop
rcrl
insb
add
popa
ds
aad
add
add
dec
add
sub
push
add
stos
pop
mov
mov
outsb
add
xchg
add
push
incb
incb
int
loope
push
mov
push
add
sbb
xor
add
incb
insl
test
pop
add
call
jge
add
incb
daa
incb
lea
mov
dec
repz
sub
xorb
add
cmp
inc
add
subl
add
add
ljmp
add
mov
std
sub
add
incb
sbb
leave
push
add
add
add
je
mov
lock
add
icebp
sarl
add
not
gs
sbb
inc
mov
dec
add
pop
add
lcall
incb
sbb
andb
add
and
add
pop
add
movsl
loop
negl
fnsave
incb
sub
rcr
and
add
or
sar
add
add
jp
clc
or
mov
das
sysret
incb
fldenv
incb
dec
fldt
incb
out
pop
add
add
add
xor
add
out
dec
add
add
incb
add
shll
or
cmpl
mov
add
mov
add
incl
iret
push
xchg
push
push
add
adc
mov
incb
ror
movsl
sahf
dec
or
sti
xchg
test
shl
jecxz
add
and
add
jns
jge
movsb
jbe
aad
add
mov
jbe
dec
jecxz
add
mov
add
add
add
jae
incb
xchg
push
cmp
add
add
incl
jmp
incb
push
sbb
pop
add
inc
outsb
add
nopl
mov
repnz
bound
ret
add
push
add
add
add
outsb
add
add
rolb
incl
lret
inc
add
mov
pop
pop
and
add
add
repnz
add
jecxz
jl
test
adc
sbb
push
add
inc
add
add
jbe
loop
jmp
dec
add
nop
in
inc
rorb
ror
add
add
add
movsb
jbe
outsl
clc
mov
sbbb
popa
mov
mov
add
incb
push
add
xchg
test
incl
push
stc
sbb
scas
das
push
insl
test
daa
incb
mov
sub
addr16
lds
incb
mov
add
pop
incb
fadd
lods
test
push
lds
sub
xlat
in
shlb
incb
pop
add
sti
cmp
add
add
incb
xor
add
add
add
add
add
incb
pop
jns
add
jbe
arpl
add
push
rep
jns
add
incb
mov
fwait
adc
add
dec
add
incl
aam
incb
dec
add
cmp
mov
incb
repnz
add
add
sbb
int3
jo
cli
inc
add
and
add
fists
or
mov
mov
je
jnp
incb
sbb
daa
incl
incl
mov
add
incb
movsb
inc
das
incb
out
jbe
push
add
fidivs
mov
lods
lods
add
add
add
add
add
cmc
or
mov
test
incl
or
incl
sarl
add
mov
ret
inc
add
cmp
out
rolb
incb
xchg
or
inc
mov
popa
xchg
subl
incb
sbb
push
add
push
jnp
push
add
pop
add
incb
bound
fwait
mov
incb
stos
pop
add
mov
or
xor
add
add
adcl
nop
add
add
popf
jge
push
add
add
add
pusha
add
push
ret
mov
dec
loope
int
dec
add
out
or
lea
add
add
mov
add
add
test
daa
incb
test
in
stos
das
pushf
aam
or
outsb
add
or
lods
push
jne
adc
add
int
incb
or
mov
scas
idivb
incb
mov
incb
fwait
xchg
lods
nop
shl
popl
out
arpl
jo
lret
or
and
add
incb
pop
add
dec
add
add
ret
incl
sbbb
mov
incb
das
dec
sub
inc
inc
push
add
push
add
add
dec
add
add
add
add
jns
arpl
mov
lgs
lock
inc
inc
add
incb
mov
rorl
xor
add
adc
add
inc
add
daa
incb
sbb
imul
jbe
stc
repz
add
incb
mov
add
jno
or
add
int3
subb
add
scas
mov
and
add
xchg
push
add
les
addl
add
adc
add
or
pop
add
stos
push
add
incb
mov
movsl
dec
cmp
cmp
pop
out
xor
add
in
hlt
in
jp
jmp
dec
lock
add
pop
sahf
arpl
icebp
aad
dec
imul
lahf
adc
add
xorl
add
inc
add
aas
lods
xchg
scas
outsl
sbb
iret
jnp
decb
lahf
inc
add
add
and
add
insl
push
xchg
add
add
bsr
add
std
add
out
sub
incb
cmp
bound
mov
pop
incb
add
incl
sbb
adc
add
aaa
incb
fiadds
incl
test
sub
repnz
push
aad
xchg
add
incb
push
add
sbb
jns
incb
cmp
add
add
cwtl
test
incb
inc
add
cmpsb
cld
repz
outsb
add
sub
iret
dec
mov
add
add
lret
cmp
mov
inc
and
add
incb
popa
pushf
dec
and
add
jbe
pushf
lcall
hlt
add
add
push
add
cwtl
push
add
xchg
jb
xor
add
add
xlat
push
add
addr16
cmp
mov
test
mov
int3
mov
fidivrl
add
mov
frstor
add
hlt
sbb
in
mov
incb
xor
subl
mov
repz
test
or
outsb
add
and
add
imul
add
adc
add
incb
js
mov
and
add
add
add
test
add
popa
and
sbbb
xchg
lods
loopne
incb
cmp
pop
add
adc
add
add
jp
mov
data16
incl
bound
lea
rorb
add
or
mov
or
add
jp
pop
add
xchg
pop
add
pushf
cs
movsl
lock
movzbl
add
mov
pop
mov
add
and
add
mov
incl
add
add
jne
fstps
inc
add
test
shrb
push
loop
cltd
pop
add
incb
sub
add
add
incb
in
inc
add
fsubrl
xor
add
mov
in
sbb
mov
sub
cld
popa
mov
test
loopne
out
and
add
and
add
add
outsb
add
out
add
push
incl
mov
add
test
jae
xchg
lahf
and
add
add
mov
incb
sub
add
add
loope
incl
cmp
repz
add
cmpsb
and
add
lret
data16
int
sub
dec
add
mov
incb
loopne
add
add
jnp
incb
adc
add
add
aam
add
loop
repz
int
int3
jp
inc
iret
cmp
in
in
and
fld
into
in
add
and
add
into
fstpt
mov
test
add
fstl
incb
incb
inc
add
lea
out
incb
cmc
in
cmp
dec
add
incb
pop
mov
add
incb
ret
cmp
imul
test
add
inc
add
xor
add
add
rcr
xor
xor
add
add
add
repz
jmp
add
add
pushf
fisttpl
fcom
int3
mov
fisubrl
mov
sbb
incb
mov
leave
int3
mov
xor
add
add
mov
pop
or
inc
decb
mov
incb
std
mov
add
fsubs
add
add
mov
mov
add
incl
xchg
lock
add
add
add
add
ret
je
jns
xor
add
mov
mov
bound
inc
mov
incl
sbb
add
sub
cmp
cwtl
xchg
inc
add
xchg
adc
add
add
mov
add
add
into
lock
add
incb
and
les
add
xchg
call
icebp
incb
cmp
cmp
inc
insb
add
pop
hlt
popf
mov
jmp
and
add
f2xm1
push
add
add
incl
adc
add
incb
jmp
pusha
add
out
pop
incb
lret
lods
mov
add
lret
in
test
incl
shl
add
mov
repnz
add
dec
add
adc
into
sub
add
or
rclb
mov
inc
cmp
loopne
incb
ljmp
data16
add
add
add
incl
jg
add
sti
mov
sahf
stos
xor
add
mov
cmc
stos
jecxz
xchg
and
add
scas
hlt
xor
add
add
or
test
mov
stos
loopne
incb
fcomps
add
adc
stos
sahf
mov
add
xchg
xor
add
add
dec
add
incl
mov
xor
add
mov
pop
incb
add
add
jp
cs
adc
add
ret
push
mov
bound
xor
add
mov
frstor
add
lods
stc
data16
nop
dec
add
or
add
andl
clc
mov
incb
rcrb
add
add
incl
call
add
icebp
pop
add
push
incb
shrd
add
push
add
xchg
inc
out
adc
add
lret
dec
add
add
add
mov
stos
push
jno
notb
incl
test
jecxz
incb
inc
test
incb
mov
out
incl
sub
nop
push
test
out
inc
cwtl
dec
sbb
incb
sub
hlt
fmuls
add
add
in
out
sub
jo
movsl
hlt
jns
add
push
add
add
and
add
pusha
add
out
add
cmp
sarl
xor
and
add
incb
leave
cwtl
arpl
jl
out
add
incb
pop
add
sub
fsub
push
iret
push
incb
lret
xchg
and
add
add
add
clc
sbb
inc
fidivrl
cmpsl
pop
add
add
mov
shll
mov
cmp
xchg
or
add
incb
xorl
jns
mov
add
outsb
add
mov
dec
add
push
insl
and
add
add
add
mov
lock
or
pop
adc
pop
add
pop
icebp
mov
add
add
fdivr
sbb
add
jo
orb
incb
sbb
dec
add
lods
cmp
shrl
movsb
sbb
xorl
incb
cmp
add
or
fwait
out
or
incb
jecxz
add
add
add
mov
incl
sbb
mov
incb
sub
or
and
incb
fidivs
incb
push
pop
add
aam
incb
add
rcrl
cltd
or
mov
add
add
add
popf
cmp
mov
add
and
add
add
add
add
add
bound
mov
push
add
nop
insb
add
add
or
aaa
incl
push
add
pop
add
incb
xchg
imull
add
add
add
pop
mov
ds
cld
cmp
add
sbb
cmpsb
mov
jle
daa
incl
out
popf
and
add
incl
imul
add
out
fwait
cmp
repnz
dec
das
jp
push
add
push
incl
daa
incl
std
xor
mov
lock
sbb
incb
mov
mov
in
daa
incb
push
add
test
add
in
in
adc
add
sbb
incb
mov
add
add
push
add
jg
incb
or
jle
scas
sub
icebp
icebp
xchg
loop
incb
mov
incb
pushf
repnz
movsl
push
add
incl
hlt
pop
incb
imul
pop
rcrb
add
sbb
push
insb
add
clc
or
mov
add
add
stc
test
xchg
xchg
xor
add
dec
add
sbb
add
stos
adcl
cmpsb
pop
and
add
incb
add
incb
jb
xorb
and
cli
loopne
pop
add
and
add
incb
sub
mov
dec
add
add
incb
div
popa
and
add
sub
jecxz
mov
add
adc
add
scas
and
add
xchg
and
add
test
sbbl
mov
add
insb
add
pushf
fistl
lea
add
into
push
add
jne
add
repnz
fsubp
push
cld
incb
adc
add
incb
lret
popf
lcall
xchg
into
in
xor
add
add
push
add
dec
insb
add
add
or
not
or
push
push
mov
add
add
incb
add
add
mov
mov
cwtl
and
add
mov
incb
pop
add
incb
scas
rcrb
rolb
stos
adc
add
incl
adcb
cmc
push
movsb
adc
add
inc
add
mov
inc
add
push
add
add
push
add
add
jl
aam
loopne
add
push
xlat
shll
jns
jnp
divl
incb
subl
and
add
add
add
mov
pop
add
or
xorb
push
add
test
mov
push
jmp
dec
add
lret
mov
sub
lods
shl
inc
add
incb
ficomps
lds
add
lcall
cwtl
jge
add
and
incb
in
ds
jb
ds
sbb
push
push
add
add
mov
mov
or
jb
clc
out
in
roll
pop
add
aaa
incl
dec
rcll
incb
inc
add
add
out
inc
mov
incl
data16
incb
mov
rcrl
add
sbb
movsb
xor
add
add
je
xor
add
add
call
outsl
cld
lea
incb
dec
add
int
add
xor
add
sbb
incl
push
add
incb
lret
add
add
jo
sbb
pop
add
sbb
inc
add
incb
pop
lods
in
or
sbb
icebp
jo
lahf
mov
add
incb
mov
add
into
cmp
inc
add
incb
push
add
add
test
push
incb
mov
add
add
jo
pop
cmp
incl
xchg
adc
add
jo
aad
lret
add
add
add
inc
add
mov
mov
incb
jg
or
faddl
push
or
mov
incb
sbb
add
add
xor
add
and
add
push
add
ret
cmp
jo
outsl
arpl
and
add
std
mov
incb
pop
add
mov
imul
dec
add
add
incb
std
cli
cmp
xchg
stc
xor
add
incb
sub
cmp
add
jp
fisttpl
test
incb
cmp
arpl
add
sbb
das
sbb
loopne
incb
and
add
cmpsb
mov
mov
mov
sub
lret
add
add
negl
pop
add
adc
add
sti
jg
ffreep
mov
popf
mov
js
pop
add
add
lcall
imul
xchg
sbb
incl
outsl
and
add
out
shlb
add
int
scas
push
incb
xchg
stos
cmc
fisubl
incb
push
mov
and
add
or
mov
and
add
fcoml
add
mov
sub
insb
add
xchg
or
sub
pop
mov
insb
add
rorl
gs
incb
daa
incb
add
adc
add
mov
incb
decl
movsl
sub
incb
pop
xchg
std
sahf
sub
mov
incb
xchg
leave
jns
and
add
les
add
shll
lret
dec
add
dec
cmp
add
cli
xchg
test
add
push
icebp
mov
cmp
cmpl
incl
dec
icebp
aam
add
incl
pop
add
scas
mov
mov
dec
pop
incb
sahf
lret
add
hlt
xchg
mov
pop
add
out
shlb
addr16
aam
add
stos
mov
mov
cmp
cmpsl
pop
add
or
movsl
xor
add
std
dec
sub
add
add
lods
ljmp
mov
cmp
in
or
incb
sbb
pop
sub
add
sub
add
ds
pop
incb
testb
mov
add
add
xor
add
add
add
add
cmp
rol
lahf
outsb
add
incb
add
lea
add
xor
add
addr16
addl
add
mov
add
incb
iret
or
push
add
add
pop
loopne
mov
push
add
add
add
lods
rcr
incb
in
cli
jns
incl
pop
gs
dec
add
incl
xchg
and
add
add
incb
sub
mov
aam
push
incl
adc
add
shrb
pop
add
incb
icebp
mov
incb
push
add
or
add
push
add
incl
mov
daa
incl
xchg
dec
pop
nop
cs
mov
fnstsw
cmpsl
ljmp
and
add
mov
push
add
cmp
aam
incb
inc
jp
push
add
cmp
fadd
sub
aam
add
orb
cmpb
mov
incb
stos
dec
add
jl
sbb
int
and
push
push
or
add
popf
sub
lock
add
pop
add
lahf
mov
add
add
add
mov
add
incb
ljmp
xchg
add
test
cli
pop
incl
sti
fsubrl
add
add
mov
add
sub
pop
mov
mov
incb
jns
shrl
pop
add
mov
or
add
je
sub
add
xor
popf
or
inc
add
sbb
jmp
lods
call
cmp
xchg
jnp
add
mov
add
pop
incb
dec
add
dec
add
pop
cmp
xor
add
add
incl
loopne
add
cmc
scas
push
mov
in
dec
jb
sbb
fadd
jbe
sahf
testl
add
fcoml
inc
shrl
and
add
sbb
fs
add
add
andb
incb
and
add
dec
add
add
incb
mov
or
push
add
imul
add
xchg
add
adc
add
pop
repz
incb
add
add
incb
fisubs
stc
popa
add
add
xor
add
jne
add
sbb
incb
aaa
incb
sbb
lret
add
add
add
inc
mov
add
push
add
jecxz
add
gs
fdiv
jle
mov
incb
pop
incl
ret
add
scas
sub
incb
pop
sahf
mov
add
add
incb
scas
jnp
add
lahf
or
xchg
sbb
in
push
xchg
jmp
add
and
sbb
add
mov
incb
mov
add
or
ja
pop
add
sets
jnp
sti
jg
imul
fs
jb
mov
add
mov
punpcklbw
inc
add
jbe
lcall
lret
inc
ljmp
mov
cli
push
add
add
add
incb
mov
mov
pop
incb
push
cmp
cwtl
pop
add
jo
xlat
push
add
inc
add
mov
leave
pop
inc
add
incl
roll
in
mov
incb
inc
imul
incl
sub
in
sarb
sbb
add
add
incb
cmpsb
fidivl
pushf
dec
add
incb
aam
setns
add
dec
mov
mov
rcrb
and
add
inc
incb
xorb
add
iret
int3
jge
iret
call
pop
incb
add
add
or
data16
cmpsb
or
dec
add
add
ret
or
push
sbb
add
insb
add
jno
jp
out
jl
std
add
add
mov
scas
dec
add
xchg
aad
incl
test
fistpl
incl
xchg
mov
jg
incb
int
mov
sbbl
nop
iret
lret
testb
sbb
cld
in
jp
outsl
sbb
mov
scas
sbb
cmp
incb
cli
xor
or
sub
push
add
add
add
adc
add
xor
popa
insb
add
das
out
jo
push
lahf
and
add
inc
add
or
inc
fmuls
incl
adc
add
mov
sbb
sbb
je
jne
add
jl
pop
incl
mov
mov
mov
incb
faddp
xchg
ja
jns
add
lahf
ljmp
into
cmpsl
dec
sub
in
roll
jae
testl
or
mulb
ljmp
incl
mov
dec
scas
inc
or
repz
incb
jmp
cld
arpl
cmc
push
add
call
imul
mov
incb
mov
fidivrs
loop
test
shlb
incl
imul
cli
jo
outsl
loopne
enter
xor
add
add
insl
fsubl
adc
add
out
add
aad
add
enter
sti
stos
mov
lret
popf
or
mov
shll
aam
add
test
repnz
data16
add
add
add
lahf
aad
leave
xor
add
incb
xor
add
jp
fnstcw
daa
incb
and
add
incb
lods
adc
and
add
add
incb
pop
add
jb
push
add
adc
add
imul
xchg
jecxz
psrad
xchg
push
incb
and
add
and
add
xor
add
add
incb
mov
push
add
add
adc
add
add
pop
add
push
add
lods
loope
add
stos
fwait
jns
incb
inc
cld
imul
mov
test
incb
ret
scas
pop
xchg
movd
or
jmp
add
pop
add
mov
incl
call
incb
js
xor
add
jp
clc
sub
inc
add
add
into
sbb
xor
add
jns
dec
in
add
add
sbb
outsl
in
fldln2
cltd
popa
lahf
lea
incb
outsl
xchg
repz
or
xor
add
sbbl
fistps
add
add
adc
xor
add
adc
add
orl
inc
add
xor
add
add
add
add
add
add
adc
add
shrl
jecxz
call
mov
adc
add
incl
shll
sbb
pop
addr16
dec
add
add
and
add
mov
sbb
enter
incb
and
add
in
incb
and
incb
adc
add
incb
mov
incb
add
add
add
add
add
add
mov
add
add
enter
add
add
daa
incb
jb
cmp
lret
enter
add
add
insb
add
add
push
repz
test
xchg
popf
enter
cmovb
adc
mov
sbb
out
in
add
inc
add
xchg
loope
and
add
incb
imul
or
xor
add
incb
xchg
bound
in
push
sbb
add
add
add
incb
jnp
fimull
enter
jb
xor
add
add
add
call
add
repz
incb
sub
movsb
adcb
aas
fdiv
sbb
add
pop
push
test
in
jecxz
add
add
add
cmp
incb
xchg
inc
test
enter
mov
xchg
stc
mov
add
incb
pop
or
mov
testb
incb
xor
add
mov
pop
push
add
add
and
add
test
add
out
sbb
push
pop
jns
push
adc
add
incb
jo
loop
add
add
add
add
jg
add
ret
add
incl
sahf
adc
inc
xchg
inc
add
add
incb
mov
mov
incb
enter
lret
incb
cwtl
jno
incb
mov
add
hlt
push
loop
mov
incl
add
add
add
add
push
add
push
add
sub
add
pop
incl
test
imul
fcoml
incb
jg
lock
out
clc
xorb
add
incb
push
incl
add
add
xchg
mov
mov
loopne
add
incb
add
add
add
xor
xchg
push
add
mov
cltd
mov
add
dec
add
mov
fistl
call
incb
stc
icebp
xor
add
adc
add
add
mov
cmpsb
lahf
mov
int3
cmp
bound
icebp
adc
add
incl
push
add
into
int
jg
mov
mov
lods
add
push
add
add
add
rolb
add
mov
popf
repz
cwtl
xor
add
ja
add
repnz
incl
pushf
scas
mov
or
mov
or
les
or
push
lcall
scas
lcall
and
add
add
incl
addr16
add
xchg
adc
add
lods
std
adc
add
in
add
add
popl
cmp
and
add
incl
repnz
cld
jle
test
loope
pop
incb
push
incb
mov
xor
add
jnp
mov
add
cwtl
leave
xor
add
incl
sub
jo
inc
add
xchg
out
incb
mov
incb
xchg
or
jno
push
add
clc
pop
mov
mov
add
xor
add
std
jo
jb
sub
or
call
add
add
and
add
add
cli
repnz
push
loope
das
sahf
test
incb
sar
scas
xchg
imulb
inc
sbbb
push
add
popf
iret
cmc
or
hlt
and
add
incb
and
add
out
mov
dec
add
push
add
add
incb
cmp
jge
jmp
ljmp
leave
xchg
add
aaa
incb
mov
add
add
add
lret
mov
incb
js
inc
fld
movsb
in
jae
add
add
pop
add
mov
inc
add
ja
incl
cmp
incb
adc
add
incl
mov
push
sbb
add
xchg
add
incb
push
incb
jb
fisubl
mov
incb
adc
add
incb
adc
add
xor
add
push
add
add
dec
lods
ret
sub
cmc
movsb
or
add
dec
lods
gs
add
rolb
lahf
fldpi
mov
add
incl
mov
test
incb
rcrb
hlt
andb
add
xchg
sbb
add
add
incb
imull
lret
mov
add
cmc
and
add
ret
add
fbld
incb
sub
sti
jmp
add
and
add
add
data16
and
add
outsb
add
adc
add
xchg
add
aas
or
incb
jnp
sti
fistpl
add
fidivrs
insb
add
test
xlat
dec
dec
pop
incb
pusha
add
mov
mov
add
hlt
mov
dec
add
jno
add
incb
sub
push
mov
add
incb
aad
push
add
and
add
add
add
mov
pop
incl
sub
out
sbbl
lcall
fxch
adc
add
jnp
incb
xchg
incb
jno
incb
adc
add
dec
mov
xor
add
incl
cmp
xor
add
mov
incl
push
add
cli
push
add
cli
add
push
in
lcall
add
incb
or
mov
mov
in
mov
add
xchg
lcall
add
mov
push
sub
add
add
mov
add
out
adc
add
pop
incb
cld
xor
data16
mov
dec
add
and
add
nop
jno
push
add
shl
ret
mov
add
jge
incb
dec
add
push
add
out
incb
push
add
add
addr16
incb
adc
add
push
lahf
pop
incl
faddl
incb
imul
incb
leave
inc
add
sbb
jl
xchg
std
nop
xor
jo
pop
lock
incb
shr
inc
add
incl
cltd
sahf
mov
add
rcrl
incl
jb
dec
add
adc
add
xchg
out
mov
push
jo
add
add
incb
add
add
add
add
add
sbb
aas
hlt
pop
lsl
add
pop
incb
cmc
mov
cmpsl
add
incb
push
incb
push
or
sub
in
adc
add
xor
add
cmc
xchg
dec
addl
add
add
xchg
fldenv
loopne
add
incb
dec
iret
mov
xchg
pop
add
sub
arpl
add
add
lcall
xchg
insl
bound
pop
out
mov
mov
movsb
and
add
add
adc
add
imul
addl
incb
jbe
inc
mov
pop
clc
sarb
add
add
sbb
lahf
add
add
incl
sub
cmp
test
test
incb
add
push
adc
add
add
push
add
repz
lock
mov
pop
add
or
push
incl
ffreep
xchg
mov
popl
movsb
jnp
xchg
pop
add
add
add
add
incb
adc
add
push
add
bound
test
dec
add
shll
pop
add
sbb
adc
add
incb
call
add
add
push
add
incb
sbb
add
xor
add
daa
incb
insl
jne
daa
incb
add
add
mov
xor
add
push
mulb
mov
add
incb
cmpsb
fldl
mov
jno
incb
cmp
add
add
add
add
pop
push
jmp
incl
xchg
lds
inc
icebp
pop
add
add
add
add
add
data16
incb
orb
shl
test
and
add
bound
xchg
in
incb
test
add
sbb
add
mov
add
jecxz
or
fcoml
incb
out
push
cmp
add
add
lcall
mov
add
adc
add
inc
add
inc
mov
add
test
adc
add
incb
mov
add
out
add
in
dec
xchg
repnz
xchg
cmp
xchg
and
add
dec
mov
cmp
imulb
imul
pop
incb
rorl
movsb
fcmove
lods
incb
xchg
mov
inc
add
mov
jmp
xchg
sbbb
jge
imul
pop
shrl
jnp
movsl
repz
scas
mov
cmp
adc
add
shl
ds
or
aad
movsb
stos
sti
mov
lods
repz
jo
adc
add
push
push
dec
mov
add
movsl
clc
push
incb
leave
mov
add
add
cmp
inc
mov
jbe
out
push
jl
pop
add
inc
add
jne
add
add
add
cs
adcb
out
cmp
out
pop
add
cmp
or
jae
add
incb
lods
dec
add
sub
fsubl
incb
pop
incl
sahf
out
jg
inc
add
jbe
push
cmp
lcall
incb
and
add
incb
mov
add
add
loope
icebp
mov
add
dec
add
add
fcomi
adc
add
lcall
mov
je
mov
inc
pop
add
push
incb
rcrl
push
bound
push
add
incb
mov
scas
lds
push
jns
pop
add
incb
lret
bswap
xchg
sub
xchg
mov
cmp
jne
dec
mov
add
in
mov
lock
incb
cmp
jge
inc
lret
popf
jno
push
add
adc
add
fidivs
incb
pusha
add
add
add
incb
dec
add
sub
incb
or
add
add
fmul
and
add
add
iret
stc
test
add
add
lahf
sub
adc
add
lods
in
xor
add
add
mov
add
lock
or
push
loope
adc
xor
add
add
cmp
je
jbe
push
cmp
mov
nop
xor
add
pop
incb
sub
incb
test
incl
jnp
add
jbe
mov
leave
cmp
test
add
add
aad
sub
pop
test
add
movsl
sub
inc
add
xchg
or
push
add
add
add
add
pop
in
loopne
movsb
jbe
mov
loopne
add
incb
push
incb
mov
hlt
mov
incb
jle
popa
add
add
xor
add
add
pop
incb
flds
icebp
add
sub
add
shll
arpl
xchg
pop
add
add
add
mov
jae
add
mov
shrb
mov
lock
incb
test
add
add
sti
outsl
add
add
cmpsb
pop
jno
add
add
icebp
mov
cmp
incl
fisttps
inc
and
add
shl
sbb
add
inc
sbb
jbe
sbb
push
lods
scas
xchg
icebp
add
add
incl
repz
add
aad
aad
incb
xor
add
push
out
enter
add
ljmp
add
add
add
xchg
lods
push
and
add
xchg
daa
incl
xbegin
xchg
mov
pop
incl
jmp
add
out
incl
xchg
add
jae
aaa
incb
and
add
sub
incb
xor
add
stc
aad
or
outsb
add
sub
lds
xchg
and
add
jp
inc
add
incb
cmp
xorl
negl
incb
cmpsb
test
xchg
out
add
add
incb
xchg
das
add
incl
push
incb
jno
cmp
stc
jne
pop
add
sti
stos
jg
push
add
push
push
add
lahf
pushf
rcrl
incb
xor
add
outsl
incb
aas
dec
xor
add
test
arpl
add
adc
add
push
add
add
mov
out
cmp
add
mov
incb
xlat
dec
add
jecxz
mov
lds
xor
add
lods
sbb
xchg
add
jmp
cmovp
arpl
push
push
add
xchg
xchg
add
add
mov
add
add
add
add
out
incb
sti
call
shl
mov
add
adc
test
pop
incb
dec
add
inc
xchg
inc
add
push
add
movsb
fiaddl
xchg
sub
adc
add
jp
out
ja
in
addr16
add
incb
mov
add
incb
mov
add
incl
mov
ret
xchg
cmc
insb
add
in
jnp
icebp
mov
add
jne
sbb
lods
jmp
xchg
repz
add
out
add
add
push
rorl
dec
add
add
add
incb
dec
add
incl
jmp
add
jo
push
add
pop
add
test
add
add
add
sub
push
add
movsl
jb
negl
pop
pop
add
aam
inc
addr16
aaa
incb
std
dec
add
add
ficompl
fcoms
mov
fucom
cs
lahf
push
icebp
pop
incb
mov
fistl
incl
int3
jno
add
add
lods
mov
pusha
add
or
rcrb
add
jns
jge
incb
inc
push
add
add
mul
fbstp
incl
add
add
pop
shrb
add
jmp
jl
jge
cmp
mov
add
ficoml
jne
lret
add
add
add
incb
std
aaa
incl
rcrl
mov
mov
or
jmp
dec
add
add
lea
fwait
jae
adc
add
incb
mov
test
add
int
test
incl
ljmp
push
dec
mov
incb
pop
add
ljmp
incb
sub
xchg
popa
jb
push
incb
aaa
incb
cmp
sub
hlt
and
add
and
add
loope
imul
cli
das
hlt
add
add
cmpsl
mov
incb
cwtl
mov
repz
stos
push
add
cld
push
pop
incb
mov
cwtl
push
in
dec
add
add
add
mov
imul
or
loop
sbb
fidivrs
and
add
xchg
insl
and
add
loopne
rep
jbe
cmp
adc
add
incb
mov
incb
push
xor
add
fdivl
add
test
sbbl
incb
push
add
add
mov
inc
add
jge
shll
incb
cmp
incb
xchg
data16
pop
add
aas
push
add
incb
sub
xchg
ret
mov
mov
test
cmp
mov
les
incl
fisttpl
sbb
aad
jae
and
add
jo
adc
pop
sbb
jecxz
add
push
add
sbb
pop
incb
sbb
jnp
adc
add
add
cmp
sahf
and
add
sahf
leave
pop
push
add
fistl
incb
mov
adc
add
pop
incb
jns
mov
dec
jae
stc
pop
incl
adc
add
inc
add
jp
sbb
xchg
mov
add
add
pop
add
data16
incl
push
stos
cld
pop
push
xchg
and
add
add
jo
xor
add
fsubrl
xrelease
lahf
shll
ret
aaa
incb
cs
dec
mov
incb
cmpsl
adc
add
incb
mov
ret
mov
incb
aaa
incb
push
add
add
dec
add
xchg
fwait
sbb
rorl
add
incb
popf
xor
xchg
incb
mov
cmp
and
add
pop
incb
pop
add
loopne
add
aam
add
add
pushf
dec
xlat
jmp
js
mov
stos
pop
and
add
incb
and
add
iret
in
cwtl
out
movsl
pop
add
add
xchg
xchg
outsb
add
add
incl
sub
add
mov
scas
hlt
mov
incb
aas
bound
add
add
sbb
adc
add
fstpt
inc
add
add
jmp
movsl
mov
movsb
mov
pushf
push
cmp
xchg
incl
fimuls
loop
incb
sarb
mov
ficoml
incb
jle
cltd
add
add
mov
jo
mov
mov
incb
and
add
out
mov
test
mov
test
incb
out
mov
add
jmp
add
in
cmpsl
mov
jmp
incb
ret
incb
cmpsb
std
outsb
add
jge
sbb
xchg
cmp
pop
add
add
jbe
in
inc
sbb
cmp
shrl
adcb
add
incb
in
out
mov
stc
in
movsb
clc
cmp
dec
add
sub
incb
push
gs
mov
xchg
shlb
incb
push
jecxz
inc
rorl
inc
or
add
add
je
add
add
add
lods
fidivrs
jg
xor
add
add
xchg
mov
inc
pusha
add
mov
pusha
add
mov
push
add
add
out
sub
adc
data16
add
loope
dec
add
aad
fwait
clc
js
rorl
add
incl
jg
add
adc
add
add
aas
incb
and
add
fadds
xchg
fisubrl
inc
add
incb
mov
fisttpll
add
daa
incb
jp
xor
add
add
add
ljmp
xor
add
mov
mov
incb
push
adc
add
incb
mov
xor
add
pop
add
sbb
hlt
xchg
add
incb
setge
mov
in
add
add
incb
pop
mov
data16
push
pop
loop
decb
add
clc
dec
adc
add
incl
incl
and
mov
cmp
xchg
xchg
dec
mov
cmpsl
push
incl
out
scas
push
pop
jle
jne
sub
xor
add
dec
mov
inc
fcomps
add
inc
jge
push
add
testb
jns
incb
cmp
dec
xchg
in
test
and
add
dec
add
dec
andb
add
add
add
scas
repnz
add
add
incb
sbb
jne
add
add
incl
mov
movl
add
incb
xchg
in
int
xchg
adc
add
add
add
add
fcmove
xchg
xchg
out
pop
dec
and
add
add
jmp
add
push
add
insl
call
popa
sbb
sub
out
scas
push
incl
or
add
incb
jecxz
incb
sub
incb
dec
aam
lds
mov
cmpsb
rcr
mov
inc
and
add
adc
add
out
mov
incl
dec
push
fucomp
movsl
mov
push
add
les
fidivs
pushf
jmp
mov
add
jnp
notb
add
enter
mov
add
inc
add
sub
enter
movsl
repz
push
incb
add
add
popf
push
mov
test
shlb
add
mov
xchg
lods
out
push
add
add
scas
cld
movsb
enter
cs
gs
inc
inc
test
add
fsubrp
enter
incb
jle
sti
call
add
add
dec
mov
add
pop
data16
add
mov
js
leave
outsl
mov
add
cmp
mov
incb
xchg
lods
lock
js
lods
orb
incb
clc
dec
add
testb
add
add
and
add
incb
js
dec
std
shrb
pop
montmul
cmpsb
inc
sub
or
push
mov
add
mov
sub
dec
add
inc
add
incb
or
add
inc
shrb
dec
add
xchg
fwait
jbe
and
incl
mov
js
jle
mov
add
sbb
addr16
add
in
lahf
dec
add
incl
pop
mov
icebp
push
out
push
add
add
incl
mov
add
inc
add
add
push
add
incl
loop
incl
mov
popf
mov
incb
cld
mov
ja
movsl
mov
mov
add
mov
xor
add
add
fldcw
add
outsl
mov
js
pop
xchg
xor
add
mov
incl
aad
jl
je
push
add
incb
push
add
inc
fwait
mov
sti
test
pop
add
sar
cli
in
popf
sub
mov
iret
mov
mov
sahf
inc
aaa
incb
dec
incb
fisttpll
ja
negb
sub
add
mov
add
mov
sub
cld
iret
sarl
mov
pop
add
add
incb
fwait
pusha
add
incb
xchg
enter
mov
add
scas
xchg
push
add
test
shlb
sbb
inc
adc
add
add
or
movl
xor
add
push
add
popa
fldcw
mov
incb
ret
add
xchg
cmp
push
xchg
mov
add
incl
push
add
add
incb
icebp
orl
subb
add
xchg
sbb
test
aam
dec
add
incb
mov
push
add
xchg
mov
fwait
insb
add
repz
push
add
mov
jnp
popf
ljmp
add
dec
add
incl
hlt
inc
push
call
incl
xlat
imulb
add
jmp
xchg
push
and
add
sbb
sub
push
add
pop
loope
add
incb
lods
xchg
test
incb
mov
out
add
add
add
incl
lock
mov
push
add
outsb
add
push
fwait
ret
add
jg
add
incb
in
add
pop
inc
add
adc
add
incb
jae
xchg
sub
mov
add
incb
jecxz
out
js
mov
jae
xchg
in
add
dec
orb
fisttpl
add
pop
incb
jnp
mov
xchg
incb
das
or
call
add
mov
jg
fsubl
incb
xchg
popa
xchg
push
add
popa
or
invd
add
xchg
subb
lret
out
incb
roll
add
incb
cltd
mov
cmc
lgs
jg
add
add
jne
fsubs
incb
mov
incb
add
add
push
add
loope
pop
push
scas
inc
add
incl
idivl
add
add
add
add
pop
add
cmp
movsl
jmp
cltd
pusha
add
idiv
and
add
mov
incb
jns
incb
sub
add
incb
stc
repz
xor
add
add
inc
mov
push
add
sahf
outsl
jo
push
lcall
stc
loopne
adc
add
vxorps
add
incl
push
add
mov
add
mov
dec
add
and
cmp
pop
add
stc
inc
sub
cli
test
jg
out
xchg
sarl
add
add
inc
add
inc
add
incb
addr16
add
sub
lea
mov
add
icebp
rcrb
add
mov
add
jnp
ja
sub
push
add
sub
mov
shll
add
popa
push
add
int3
outsb
add
incl
inc
in
call
add
inc
add
incb
call
add
add
inc
cmp
add
jb
test
incl
mov
aam
incb
sub
gs
nop
mov
mov
sub
pusha
add
add
test
add
add
mov
outsl
into
mov
pop
add
incb
cwtl
mov
xchg
into
cmp
pop
popa
out
test
add
push
add
outsb
add
data16
incb
push
add
incb
or
mov
xlat
bound
nop
jbe
pop
incb
cwtl
test
lret
lcall
xlat
mov
mov
mov
pusha
add
add
mov
cmp
loopne
imul
add
incb
in
mov
incb
pop
add
into
fnstenv
incb
int3
jl
push
jb
loop
in
add
inc
jnp
or
mov
incl
cmp
jne
xchg
mov
pop
incl
bound
jno
dec
add
dec
add
dec
add
sub
or
decb
push
add
cmpsb
add
add
add
add
cmpsl
sbb
push
pop
add
incb
imul
add
add
xrelease
in
cmpsb
adc
add
cmp
incb
pop
incb
ja
lret
add
add
lahf
mov
add
sbb
rcll
add
stos
inc
add
orb
incl
std
jae
popf
je
push
incb
outsb
add
add
fwait
push
xor
add
xchg
mov
hlt
mov
add
cwtl
sbb
and
add
icebp
out
aad
incb
xchg
incb
inc
add
lods
push
mov
das
bound
inc
add
pop
add
incb
push
xchg
cmp
inc
add
incb
xchg
and
add
xor
add
iret
push
jmp
mov
int
aas
movsl
out
incb
dec
bound
xchg
pop
incb
ljmp
inc
add
add
incl
movsl
lea
clc
stos
inc
add
cwtl
std
insl
ja
add
pop
add
add
incb
push
add
add
add
add
icebp
cmp
andl
incl
lock
out
mov
incb
hlt
xor
add
xchg
sbb
and
add
cmpsb
jg
incb
pmaxub
xor
loope
incb
or
pop
add
hlt
incb
lret
nop
data16
imul
pop
add
dec
add
mulb
incl
sub
adc
add
sbb
icebp
cmc
arpl
pusha
add
xor
add
mov
add
incb
jmp
ret
imul
add
incb
add
add
fsubrs
lods
jmp
les
mov
jmp
incb
dec
add
daa
incl
mov
lret
cmp
add
pop
lret
mov
cmp
push
insl
iret
inc
out
cmp
pop
add
incb
aaa
incb
dec
sahf
int3
mov
add
xor
loope
xchg
std
inc
add
and
cli
sub
adc
add
incb
fldenv
incb
jg
mov
rorl
das
js
lock
and
add
hlt
adc
add
ds
xorb
add
incl
pop
add
cmp
jb
xchg
inc
add
ret
incb
pop
incb
shl
push
sbb
sbb
sarl
add
or
cli
push
add
incb
mov
jge
fnstcw
add
add
push
add
mov
add
add
add
mov
add
incb
mov
lcall
add
add
rol
jbe
xor
add
jae
jecxz
mov
incb
mov
js
gs
dec
add
add
incl
call
in
incb
jno
jp
xchg
push
out
movsb
add
add
add
incb
ficoms
cmpsb
cmp
push
icebp
ja
incb
les
test
and
incb
in
cmp
pop
add
xchg
mov
pop
out
shll
incl
icebp
sbb
xor
add
test
idivb
outsb
add
add
nop
and
add
dec
fcomps
cmp
ljmp
out
add
stos
gs
pop
add
fistps
incb
ja
add
iret
cwtl
cs
or
add
mov
xor
add
jp
in
mov
sbb
incl
rolb
test
stos
loopne
add
add
outsl
cli
push
add
ror
dec
add
add
add
adc
add
sahf
fucomi
mov
addr16
je
pushf
jnp
repnz
add
add
mov
sub
lret
or
push
popf
sbb
adc
add
add
add
lods
push
pop
test
jns
aas
hlt
mov
cmpsb
mov
lea
cwtl
andb
and
push
add
enter
jae
out
pop
add
xchg
dec
add
or
mov
rcl
sbb
iret
pop
ror
and
add
test
incb
mov
jp
rolb
add
pusha
add
enter
scas
data16
sub
out
lahf
sti
lods
cmp
incb
add
add
jp
jo
xchg
call
add
cmpsl
jno
xchg
xchg
ja
enter
fisubrs
mov
add
daa
incb
imul
incb
sarb
incb
je
push
jge
and
ja
xchg
mov
fiadds
pop
xlat
cmp
movsb
xchg
iret
jae
incb
mov
xchg
and
add
fistps
mov
adc
add
arpl
incb
pop
add
cmpsb
dec
jmp
mov
mov
adc
add
notb
incb
push
ja
repz
xchg
mov
add
incl
test
sbb
and
add
dec
add
sub
in
incb
jmp
mov
pop
popf
icebp
mov
add
mov
add
incb
lock
xlat
sub
dec
lds
stos
decl
and
add
push
add
cwtl
call
ret
add
sahf
int3
mov
add
incb
mov
ficoms
adc
int
incb
jg
movsl
ret
shr
sti
shr
add
dec
movsb
adc
add
leave
push
jmp
xor
pushf
mov
and
add
lock
shlb
sub
incb
jnp
add
incb
outsl
call
lock
cmp
xchg
add
add
adcl
add
cmp
mov
add
add
add
sti
sahf
add
add
and
add
sbb
imul
inc
add
add
incb
push
cmp
dec
add
cmp
cmp
sbb
imul
add
add
jmp
xchg
in
movsb
sahf
push
incl
and
add
push
or
xchg
mov
fcmovbe
clc
mov
add
pop
dec
daa
incb
xchg
or
push
incb
and
add
fimuls
adc
add
int3
jecxz
incb
lret
add
in
or
or
push
call
xchg
add
add
bound
lret
add
add
repnz
sbb
imul
push
add
ret
push
add
incb
arpl
push
add
inc
add
add
add
cmpsb
xor
add
jno
adc
add
sub
incb
adc
add
mov
pop
push
incb
fistps
incb
and
add
incb
cmp
lret
mov
incb
shll
sbb
sbb
mov
pop
add
faddp
lods
inc
add
add
stos
xor
add
add
lods
push
cmp
jnp
imul
incb
jae
sub
int3
jns
xlat
adc
add
sub
in
and
add
ffree
aam
inc
mov
add
cmp
aas
popf
daa
incb
aam
incb
jb
pop
incb
dec
add
stc
leave
fcmovbe
or
mov
cwtl
aaa
incb
mov
cs
xchg
test
lock
outsb
add
xor
add
jnp
test
incb
cmpsb
jl
ja
add
fnstenv
incb
ficomps
enter
mov
cmpsl
jns
add
int
push
add
sahf
jno
cmp
add
adc
add
incb
inc
add
outsl
fidivl
xor
incb
mov
mov
push
or
mov
jne
cltd
add
add
add
out
jmp
push
mov
icebp
in
add
add
mov
out
jge
add
add
test
xchg
push
add
sub
iret
out
idivb
add
dec
add
add
incb
inc
fsubp
or
lock
add
pop
add
incb
pop
add
cmp
movsl
cmp
pop
add
int
add
incb
hlt
icebp
push
add
incb
in
xchg
mov
add
lret
add
mov
incb
out
and
add
cmpsl
adc
rcr
and
add
lret
add
std
lods
push
add
xacquire
mov
xchg
mov
add
and
add
pop
add
add
incb
insl
push
incb
nop
popf
xchg
test
adc
mov
incb
insb
add
add
add
and
add
jns
ljmp
incb
aas
add
add
test
inc
xchg
xorl
test
mov
add
xchg
xchg
icebp
sub
adc
add
sbb
mov
mov
jle
loope
xor
add
test
jmp
add
incl
pop
incl
jbe
andl
add
ja
add
sbb
scas
lock
pop
clc
sub
mov
add
incb
lods
jl
add
stos
mov
and
add
inc
add
xor
add
add
outsb
add
add
data16
sbb
test
mov
add
fistps
mov
add
lret
incb
mov
sbb
xchg
stos
and
add
add
incb
imul
mov
iret
ja
xchg
sbb
arpl
lea
mov
incl
idivl
xor
mov
or
sbb
sahf
sub
jnp
incb
lea
nop
test
add
xor
add
mov
add
add
repnz
add
cwtl
aad
incb
sahf
pop
mov
in
sbb
popa
mov
inc
add
incb
fdivrl
add
incb
pop
add
add
lods
jo
sub
dec
mov
incb
mov
mov
mov
incb
loope
and
add
je
push
add
mov
add
mov
into
cmpsb
mov
loop
incb
jmp
lods
ret
mov
inc
sbb
insb
add
mov
add
addr16
add
js
or
dec
add
sub
fucomip
fidivrl
add
or
push
add
incb
jo
inc
push
add
ret
xchg
mov
pop
add
add
and
add
aam
out
inc
add
add
incb
daa
incb
pop
sub
add
jnp
adc
add
inc
add
icebp
jae
xor
add
rcl
aas
clc
cmp
add
call
cmp
add
std
xchg
je
push
add
push
incb
cs
andb
add
jl
incb
aas
fists
incb
aas
jbe
mov
cmp
in
add
xor
mov
add
dec
add
int
test
daa
incl
sarl
inc
cmc
sbb
lods
mov
data16
lcall
incb
jne
incb
cmp
cwtl
push
add
and
arpl
out
sahf
pop
cmc
or
push
sub
testl
incb
mov
push
xchg
cmp
repz
std
adc
incb
idiv
mov
sub
aas
sti
mov
dec
mov
and
gs
adc
add
add
lret
add
add
sbb
pop
add
out
mov
mov
sbb
xchg
aam
add
add
ja
jecxz
incb
xchg
jmp
jnp
int3
and
add
incb
sbb
and
add
adc
add
sbb
fiadds
add
add
or
data16
add
loopne
nop
dec
jo
out
add
add
pop
add
jmp
xchg
popa
lcall
add
rep
pop
incb
pushf
mov
adc
add
incl
mov
loop
subl
incb
ljmp
sbb
jae
nop
inc
test
in
bound
lret
repnz
xor
add
gs
adc
add
push
add
bound
dec
add
mov
icebp
loope
inc
lds
xor
fiaddl
incl
or
push
jg
add
sbb
push
incl
jl
stos
test
add
add
mov
out
jle
cmp
incb
outsb
add
testb
push
add
out
xchg
xchg
pop
lahf
call
movsb
push
incb
cltd
dec
add
or
ret
add
add
call
cmpsl
je
and
add
push
add
add
add
xchg
inc
add
repz
movsl
je
and
add
jl
pusha
add
sbb
jne
mov
incb
scas
paddw
mov
push
add
inc
mov
add
adc
add
pusha
add
incb
push
mov
dec
add
mov
sbb
int
mov
push
mov
fs
push
hlt
ret
les
add
cmp
in
jno
add
add
add
add
xchg
nop
sbb
incb
popa
cmpsl
clc
add
add
arpl
jo
jmp
add
incb
fsubrp
sbbb
mov
lahf
hlt
cld
pop
incb
lods
sub
and
add
pop
incb
jecxz
add
in
add
inc
add
add
add
add
aas
pop
add
in
pushf
jl
add
shrb
incb
gs
xchg
repnz
repz
popa
inc
add
pusha
add
adc
add
cld
gs
fxch
add
cmp
sbb
add
sahf
incb
add
add
addl
imul
jnp
data16
add
mov
stc
push
incl
fsubrs
add
in
mov
mov
add
adc
add
or
and
add
push
add
sbb
incl
mov
jge
add
add
adcb
scas
cmp
mov
testl
in
add
add
ljmp
push
incb
jae
add
and
add
and
add
lcall
incl
or
add
add
subb
incb
or
std
nop
xchg
xchg
test
ljmp
in
scas
lds
incb
int3
or
std
stc
inc
stos
ja
out
add
cmpb
incb
lret
inc
add
mov
add
int
int
popf
aas
sbb
loop
incl
mov
add
mov
xchg
cmp
inc
add
push
add
pop
add
inc
or
lahf
add
add
mov
out
inc
aaa
incl
jb
shrb
add
xor
add
add
addb
inc
xor
add
arpl
add
in
rorb
add
incb
and
add
add
add
jecxz
xor
add
incb
xor
add
incb
imul
add
incb
push
test
lods
cltd
inc
stos
xchg
outsb
add
incl
lock
add
mov
subb
pop
add
xor
add
xor
add
mov
mov
push
add
sub
or
in
and
add
incb
dec
test
incb
loopne
add
jns
mov
add
add
jle
sahf
aaa
incl
lea
andl
outsb
add
pop
mov
incb
into
insb
add
jae
mov
lahf
cwtl
add
add
incb
data16
clc
sbb
xchg
movsl
insl
mov
add
xor
add
incb
std
gs
incb
in
data16
fmuls
movsb
xor
add
add
xlat
enter
incb
lds
add
adc
add
or
loopne
sub
push
push
incb
ret
xor
add
pop
add
rorb
repz
fadds
rcrl
inc
add
pop
add
add
cld
imul
sbb
call
add
add
add
popf
enter
cmp
lods
mov
cmp
jo
stos
mov
mov
leave
inc
add
dec
mov
lods
repnz
jg
mov
incb
adc
add
das
mov
jbe
test
incb
rorl
xchg
mov
add
add
filds
incb
xor
add
lcall
fwait
adc
add
daa
incl
inc
add
jmp
mov
add
or
mov
add
mov
add
inc
add
add
and
in
mov
incb
ja
add
pop
add
mov
add
or
mov
incb
xor
add
out
movsb
mov
add
add
xchg
lret
repz
xchg
iret
mov
mov
adc
add
add
inc
push
or
mov
push
add
jo
mov
movsb
pop
add
subl
mov
jns
dec
pop
add
incb
addl
mov
xchg
cltd
in
incb
aaa
incb
out
outsl
mov
xchg
iret
insb
add
sbb
sub
adc
add
dec
add
ret
in
outsb
add
dec
add
incb
push
add
cmp
add
and
add
jo
std
push
incb
xlat
in
add
xor
add
stos
inc
add
add
mov
cltd
rorl
jmp
add
incb
xor
add
add
lds
pop
add
dec
mov
les
incb
out
bound
cli
inc
add
adc
add
incb
mov
dec
add
cmpsb
lea
incb
aad
xor
add
push
lret
pop
add
mov
add
mov
aam
add
test
leave
js
or
lret
adc
add
cli
jecxz
call
add
scas
je
enter
inc
and
add
mov
dec
dec
bound
je
adc
add
add
ja
incb
das
imul
jle
incb
andl
add
mov
incb
inc
add
incb
jo
ljmp
sbb
jge
push
add
movsb
rcr
push
sbb
dec
add
jmp
incl
bound
rcl
loop
push
add
add
add
incl
shll
adc
mov
popf
cmp
ja
idivl
test
les
add
lock
xchg
int
pop
pop
add
inc
add
push
incl
inc
pop
incl
and
add
mov
pop
lahf
xlat
movl
mov
or
add
incl
xchg
aas
cmp
xor
add
add
jg
add
mov
loop
add
push
add
dec
add
lock
push
imul
add
or
inc
add
add
fs
mov
mov
out
scas
scas
and
add
push
incb
cmc
bts
mov
jb
aam
add
sub
push
inc
add
xchg
add
xor
add
mov
add
iret
jne
push
xchg
mov
fwait
add
aad
xchg
incl
mov
add
mov
inc
add
add
pusha
add
les
add
adc
add
mov
jmp
push
addr16
add
add
enter
incb
mov
add
in
out
push
incl
xchg
daa
incb
out
imul
test
in
xchg
insb
add
add
incl
pop
add
add
add
imul
adc
add
add
push
mov
incb
fdivs
lea
incb
add
add
adc
add
into
lret
popf
pop
add
shl
cmp
add
incb
adc
add
push
cmc
dec
lds
add
or
pop
sbb
mov
aam
jns
shll
add
incb
into
test
cmp
aas
dec
mov
rcll
inc
add
incb
dec
stc
in
dec
stos
add
xor
add
sub
push
cmpsb
lods
mov
add
incl
aad
add
add
mov
mov
leave
fdivrs
or
jb
aad
incb
adc
add
push
incb
pop
add
add
add
add
incb
push
add
das
add
add
add
and
add
incb
push
cld
out
in
and
add
add
incb
cmp
mov
mov
dec
add
xchg
pusha
add
incl
sbb
mov
mov
mov
add
sbb
adc
add
xor
add
xor
add
gs
mov
mov
cmpsl
xor
add
incb
or
movsl
xor
add
add
incb
cmc
addr16
les
pop
add
incb
push
hlt
pusha
add
add
mov
out
or
xchg
pop
cmp
mov
add
jns
mov
and
add
inc
jg
rol
loope
incb
popf
pop
incb
rcll
add
add
cmpsb
xlat
sub
stos
aam
in
add
push
incl
fnstcw
mov
incb
sub
mov
shrb
incb
in
adc
add
addr16
add
in
iret
xchg
bound
and
add
incb
outsl
sahf
push
bound
add
incb
jmp
add
bound
movsl
adc
add
add
bound
cmp
cmp
mov
incb
mov
or
xchg
adc
add
add
add
shl
or
and
add
add
fisubrs
add
cmp
add
add
mov
incl
xor
add
or
nop
jne
fiaddl
add
jns
add
cmp
incb
gs
mov
aam
jb
ror
pop
incb
mov
insl
test
in
orl
divl
fnstsw
scas
or
xor
add
adc
add
inc
push
add
stc
mov
and
add
dec
add
add
shlb
add
add
or
stos
add
pop
add
enter
push
cli
sub
bound
cltd
adc
inc
add
aas
scas
dec
xchg
dec
dec
push
add
xor
add
dec
sub
pop
sbb
dec
add
add
mov
movsb
inc
add
add
sbb
pop
incb
dec
inc
cmp
sbb
incb
jb
fmulp
jne
shll
fwait
lods
mov
mov
and
add
mov
leave
mov
jg
mov
aaa
incl
int3
shll
add
sbbl
add
aam
incb
arpl
incb
in
jae
jne
mov
add
xlat
mov
imul
int
and
add
je
loope
pop
stc
dec
add
psadbw
xor
add
arpl
add
add
insb
add
mov
lock
pop
incb
push
icebp
into
repz
add
add
add
incb
and
add
incb
and
fsubp
lret
incb
sbb
test
add
aad
out
inc
inc
pop
andl
dec
add
incb
clc
mov
add
incl
aad
incb
out
jle
add
leave
inc
mov
inc
incl
xchg
ret
push
subl
xor
add
xchg
inc
add
add
aam
incb
cmc
or
shrl
sub
add
push
incb
cltd
push
movsb
jmp
add
incb
je
nop
sub
or
add
mov
inc
add
or
scas
mov
flds
incb
mov
fcmovb
inc
add
add
in
cmp
inc
add
fadds
js
or
xchg
add
outsb
add
mov
inc
add
add
push
add
or
outsb
add
pop
add
incb
jae
push
add
and
add
mov
mov
iret
int
add
add
add
jb
lret
xor
add
rclb
add
call
dec
ja
les
add
push
add
lock
and
add
js
pop
out
loopne
or
push
add
add
add
xlat
jecxz
add
incb
sub
fmul
mov
gs
mov
incl
xchg
pusha
add
add
mov
mov
mov
mov
sub
add
incb
sahf
lahf
les
incl
sub
add
or
incb
jo
mov
add
mov
scas
jne
lods
cmp
fsts
and
add
incb
dec
add
add
add
add
xchg
xchg
mov
add
push
incl
dec
add
repnz
add
and
add
incb
mov
sarb
add
inc
add
mov
incb
adc
add
mul
pop
add
shll
and
add
in
hlt
push
add
loopne
incl
sbb
jle
cli
adc
add
xchg
add
incb
and
add
add
add
icebp
mov
add
fildl
in
pop
add
xor
add
add
pop
add
add
xchg
or
or
pop
add
add
movsb
test
incb
popa
in
incl
mov
push
add
add
cmc
add
mov
incb
les
push
add
fisubrl
add
add
mov
add
je
hlt
nop
mov
in
in
pusha
add
incb
nop
incb
mov
incb
ret
add
enter
incb
mov
lds
mov
add
fcomps
lret
add
shlb
incl
sub
incb
lret
adc
incl
shrl
sbb
jge
jbe
loope
inc
add
insl
fbld
incl
cmpsb
rclb
imul
add
in
inc
add
pop
pop
mov
arpl
add
add
test
gs
cmp
push
incb
jmp
mov
incb
repz
push
add
sahf
clc
jns
or
incb
fadd
pop
add
incb
pop
incb
xor
add
incl
xor
add
aas
pop
dec
shll
pcmpeqd
gs
int
add
add
fwait
ljmp
incb
xchg
dec
mov
mov
ret
or
sbb
jp
push
add
add
cmp
and
add
mov
mov
add
stc
mov
push
add
dec
movsl
mov
add
shll
incl
dec
fdivs
incb
push
pop
add
jbe
push
imul
incb
push
bound
or
in
sahf
push
cmp
andb
pop
add
frstor
incl
sarl
mov
mov
add
incl
fiadds
jg
xor
add
add
add
mov
incb
xchg
pop
incb
add
inc
mov
jl
push
add
add
or
cmp
or
jnp
add
add
add
incb
stos
ja
incb
push
add
inc
add
cltd
cli
sbb
les
sbb
bound
das
xchg
cmpsl
inc
stc
daa
incb
add
add
js
mov
incb
lcall
ja
add
push
in
das
scas
lea
add
sub
movsl
mov
add
inc
add
incb
lcall
test
add
inc
add
add
sub
aam
incb
subl
jbe
pop
add
pop
push
incb
scas
and
add
in
and
add
incb
push
add
int3
mov
and
add
or
add
test
add
movsb
lock
add
sbbb
incb
sub
popf
cmp
adcl
adc
add
xor
add
popf
xor
incb
push
add
add
stos
std
jg
dec
add
popf
hlt
mov
mov
leave
cmc
lock
andl
push
cmp
push
incb
iret
repz
aaa
incb
fcompl
mov
add
mov
lods
lret
incb
pop
incb
jmp
inc
lahf
aad
add
xchg
inc
add
dec
or
test
add
mov
mov
add
add
add
adc
add
ret
add
incb
push
incb
das
mov
incb
outsl
cmpsl
adc
add
data16
jl
pushf
scas
enter
ljmp
jmp
imul
add
jno
add
mov
push
lods
xchg
nop
je
mov
jg
xor
sahf
and
add
icebp
or
aaa
incb
sbb
incb
lds
unpckhps
add
ja
cmp
incb
ljmp
test
mov
add
insb
add
loop
pusha
add
cmp
mov
add
add
incb
ljmp
sbb
incb
fdivrl
xchg
ja
cmp
shll
push
add
xchg
incl
sub
jmp
imul
in
xor
add
jae
mov
cmp
add
xchg
xchg
incb
and
add
incl
pushf
sub
test
mov
add
incb
cmpsl
pop
add
incb
adc
add
sti
inc
add
pop
or
test
lds
incb
scas
cld
jl
add
add
sub
rcrb
incb
out
add
incb
jae
cli
stc
jns
jge
arpl
inc
stc
sbb
sahf
cmpsb
adc
lahf
fistpl
add
lahf
pop
add
lahf
loopne
add
push
mov
clc
sbb
lods
outsl
mov
xchg
add
add
xchg
test
sub
test
and
testb
fisubrl
pop
add
in
pusha
add
mov
mov
imul
cli
mov
cmp
push
add
adc
add
pop
push
add
incb
and
add
add
movsb
sub
mov
add
push
add
add
or
sub
cmpsl
call
add
addr16
add
or
scas
sbb
incb
inc
testb
add
add
movsl
add
add
add
push
lret
add
add
nop
out
jp
sti
inc
lock
out
call
add
incl
mov
aaa
incb
xchg
iret
and
aas
scas
in
jnp
push
add
incb
mov
enter
adc
add
sub
and
add
xchg
add
add
orl
add
mov
cmp
dec
sahf
nop
out
cmc
loop
popa
idivl
arpl
add
loopne
or
push
out
or
lods
mov
add
push
incb
jp
out
push
add
mov
add
mov
incb
insl
jle
call
incl
mov
incb
insb
add
xlat
adc
add
add
addl
add
cmpsb
jbe
cwtl
mov
add
add
add
outsb
add
incb
sar
cmp
mov
loopne
incb
jmp
add
imul
out
add
add
inc
add
add
incb
jae
lock
add
std
jbe
incb
add
incl
icebp
mov
add
ficomps
add
or
mov
pushl
sbb
ja
add
add
dec
add
push
mov
inc
pop
incl
nop
add
add
scas
mov
push
data16
cmc
ret
cli
paddq
sub
lahf
aas
gs
mov
add
incl
outsl
jge
inc
mov
incl
push
or
sbb
in
pop
add
xchg
cmp
pop
add
jl
aam
inc
arpl
int3
jmp
inc
ret
incl
imul
cmp
incb
inc
add
icebp
aad
incl
scas
mov
incb
mov
add
add
aaa
incb
or
mov
mov
loope
lods
insl
cmp
outsb
add
lea
add
aam
lds
add
incl
mov
incb
or
xor
add
add
aas
pop
mov
incb
pop
daa
incl
out
incb
lock
incb
movb
incb
and
add
add
add
pop
and
add
add
pop
pop
add
gs
add
shr
sbb
add
add
add
loope
cmc
inc
adc
add
mov
add
incl
pop
incb
push
add
in
jp
aam
push
lea
incb
movsl
imul
incb
xchg
stos
lods
push
incb
vshufps
cmp
out
incb
inc
add
mov
sbb
incb
and
add
add
incl
sbb
add
incb
imul
add
pop
add
lahf
mov
jne
cmp
mov
ljmp
inc
add
data16
stos
push
dec
add
xchg
shl
mov
push
pushl
iret
lock
stc
and
add
add
dec
add
lret
add
sbb
test
js
hlt
mov
lret
push
add
add
incl
pop
add
or
fisubl
incb
outsl
xor
add
pushf
bound
in
mov
jns
dec
mov
add
add
add
push
incb
xor
add
hlt
out
push
add
ret
test
add
add
and
add
cmc
jmp
iret
pushf
xchg
lock
add
xchg
fldt
adc
add
incl
std
incb
xor
add
mov
iret
iret
imul
cmc
call
adc
add
cmp
cmc
jno
scas
lret
out
xchg
test
jl
repnz
cmp
shlb
add
sbb
add
add
rep
mov
cltd
add
push
jle
jge
add
pop
add
cmc
mov
test
cmp
incb
push
add
sbb
cmpsl
add
incl
test
add
aaa
incb
mov
jp
mov
test
test
jne
add
jb
imul
jns
fs
stc
xchg
gs
add
add
arpl
add
fisubrs
add
xorb
incb
loopne
out
pop
add
addr16
add
frstpm(287
out
stos
jge
bnd
pop
rcll
add
mov
and
add
enter
incb
or
js
dec
mov
outsb
add
std
lock
inc
add
in
jecxz
in
and
add
mov
jnp
call
daa
incb
jg
ficomps
mov
mov
cli
inc
add
in
add
add
push
incb
mov
fsubrl
add
mov
mov
aaa
incb
data16
sub
mov
or
push
incb
push
shlb
add
repz
add
into
out
xor
add
std
and
inc
add
rol
incb
adc
add
xor
add
data16
pop
add
incb
push
add
scas
popf
xchg
inc
add
add
jge
pop
add
push
jbe
fwait
push
incb
add
push
add
out
add
imul
incl
mov
inc
movsb
or
sahf
jns
add
pop
pop
add
add
arpl
sub
xor
add
add
incb
nop
dec
xchg
incb
sbb
add
push
sahf
jo
pop
incb
rep
inc
add
gs
sub
cmpl
add
add
incb
out
xor
add
dec
and
add
mov
add
add
add
incl
mov
cmp
das
or
mov
cwtl
mov
and
add
add
add
jge
neg
popf
pop
add
xchg
ret
adc
add
incb
hlt
incb
in
push
add
push
add
add
sub
mov
test
add
loop
inc
pop
inc
add
mov
pop
incb
ljmp
call
xlat
shr
incb
mov
call
scas
jae
incb
and
add
add
jmp
add
add
stos
add
add
add
add
sbb
jnp
int3
dec
add
incb
push
add
mov
icebp
mov
mov
mov
cmp
push
hlt
lods
and
add
push
add
lret
frstor
mov
jmp
sub
cmpsb
sub
add
xchg
and
add
add
divl
incb
add
incb
mov
incl
dec
or
cltd
data16
add
imul
add
in
sub
insb
add
add
call
dec
or
pop
incl
pop
add
add
mov
add
roll
add
add
int
iret
mov
bound
lock
jae
add
fiaddl
add
push
add
add
add
add
mov
add
add
jnp
cmc
sub
repz
incl
in
aas
lods
or
lret
pop
mov
fistpl
fdivs
out
xor
add
inc
add
add
add
add
movsl
xor
add
jb
popl
add
xlat
in
cmpxchg
arpl
add
fnstenv
incb
repz
incb
add
add
or
xor
add
cli
into
add
add
add
push
add
pop
push
add
dec
add
xchg
outsb
add
inc
cmc
xchg
add
add
inc
add
shrb
jge
or
add
ljmp
cmp
lret
popf
adc
sbb
add
pop
add
hlt
mov
add
and
add
incl
jbe
jp
mov
repz
add
loop
inc
and
pop
jp
std
pop
incb
push
add
decl
lds
mov
xorl
add
cmpl
out
and
add
jmp
aam
mov
pop
mov
mov
add
incl
loopne
lds
add
ja
incl
mov
mov
dec
call
xchg
scas
sbb
add
popa
xlat
push
incb
cli
cmpsb
sub
fldenv
jae
incb
lds
int
outsb
add
cltd
jne
test
fdivrs
scas
out
jae
incb
xorb
add
jno
pop
mov
incb
lea
incl
jo
popf
test
je
aas
inc
jnp
add
add
add
test
scas
xlat
scas
imul
cmpsl
mov
test
add
add
test
add
add
inc
mov
cmp
cmp
and
add
add
bound
out
rorb
je
jae
loop
incb
or
mov
sahf
jno
cmp
pop
add
add
incb
mov
ret
jmp
incb
rcll
add
sahf
popa
push
add
incb
jns
add
incb
std
add
add
incb
into
and
add
lods
adc
add
xchg
incl
loop
incb
cs
mov
incb
xlat
insb
add
mov
jp
cli
cmp
add
loop
mov
incb
test
mov
sar
add
jl
fwait
adc
add
incb
orl
pop
incl
je
mov
xlat
arpl
xor
add
pop
mov
jo
pop
pop
add
incl
add
add
add
push
add
adc
add
shl
pop
nop
inc
add
or
bound
cmp
dec
add
xchg
and
add
adc
add
xchg
add
hlt
inc
add
outsl
icebp
add
add
add
push
incl
add
add
add
mov
incb
lret
add
bound
add
add
incb
xchg
or
incl
mov
add
add
imul
add
incb
mov
push
add
pop
add
incb
je
pop
dec
int3
fldt
je
mov
cmc
data16
add
or
clc
mov
fidivrl
dec
add
inc
mov
ljmp
mov
pusha
add
in
incb
fldcw
cwtl
pop
int3
xor
incl
leave
dec
push
add
out
sbb
push
jecxz
incb
pop
mov
add
fmuls
inc
add
incl
cmp
pop
add
incl
jp
cs
icebp
insl
sub
add
incb
sub
add
aam
sarb
add
xor
add
out
shlb
js
aam
sub
add
add
testb
dec
cld
in
inc
add
popa
js
pop
add
jnp
incb
lea
or
mov
push
incb
push
mov
add
mov
add
stos
xor
add
test
add
add
add
inc
adc
add
mov
add
incb
sub
mov
incb
rclb
add
pop
push
incl
pop
add
incb
mov
incb
hlt
sub
arpl
lods
pop
incl
dec
add
loopne
notl
sub
sbb
incb
fstpl
xchg
xchg
mov
jnp
add
inc
dec
add
incb
inc
add
mov
add
add
das
inc
scas
cmp
xor
add
incb
in
out
pop
pop
incb
inc
add
add
xchg
lret
add
add
xor
add
cmpl
daa
incl
ljmp
add
incb
shlb
add
cmp
push
ror
loop
addr16
push
test
incb
pop
add
mov
movsl
cli
bound
mov
mov
sub
pop
mov
lret
arpl
incl
add
push
inc
add
les
xchg
push
incb
mov
push
mov
out
lcall
aad
adc
add
incb
inc
int3
sbb
lret
incl
into
and
add
push
cmpsl
scas
test
sub
jg
mov
cmp
incb
repnz
add
add
imul
stos
stc
popf
mov
test
incb
mov
into
xchg
cwtl
xchg
sbb
hlt
pop
imul
loop
popf
jecxz
add
jbe
in
pop
add
add
mov
incb
inc
add
and
add
add
push
incb
cmc
jecxz
lods
fcmovnbe
mov
xchg
incl
enter
test
insl
sub
loopne
lods
mov
incb
add
xor
add
add
incl
cmp
jns
add
incb
xchg
sbb
mov
incb
mov
add
push
add
jne
push
bnd
add
add
add
out
incb
sbbb
dec
add
mov
in
adc
add
js
mov
fsubrp
repz
sub
dec
out
jecxz
push
nop
jbe
aam
clc
icebp
mov
pop
incb
adc
add
push
lret
add
add
add
incb
fidivs
add
incb
int
add
out
inc
dec
pop
and
add
flds
incb
dec
add
mov
xchg
add
push
add
sbb
mov
jae
inc
add
dec
add
dec
add
sbb
add
incb
in
std
mov
xor
add
cmp
incb
dec
shrb
add
inc
stc
dec
add
incb
cmpsb
std
dec
add
push
lods
pop
sar
loopw
outsl
jge
lock
ffree
push
incb
test
incl
xlat
je
and
add
and
das
outsl
roll
add
add
push
xlat
outsl
jbe
xchg
clc
movb
fcomps
je
mov
lods
scas
adc
pop
add
lods
les
incl
dec
add
mov
push
mov
fcomip
fcompl
add
ja
add
add
jns
bound
xchg
mov
add
add
jg
incb
push
incb
mov
add
incb
js
lods
sbb
xchg
sahf
and
add
mov
mov
sbb
data16
outsb
add
nop
gs
mov
mov
shr
incb
add
add
fistps
or
out
and
add
incl
xchg
ljmp
add
aaa
incb
imul
loopne
incl
imul
xchg
orb
incb
mov
into
repnz
rol
repz
add
pop
add
push
cmpsb
int3
or
shl
sub
and
add
aam
incl
rcll
incb
xchg
or
jmp
mov
add
jnp
les
test
add
adcl
add
in
adc
add
incb
cmpsl
stos
lret
add
push
mov
add
mov
add
add
xchg
je
mov
add
push
add
cli
dec
add
shr
or
incb
dec
jp
cld
add
add
incl
mov
incb
jge
add
incb
test
cwtl
hlt
add
negl
cwtl
pop
jae
dec
jmp
cmp
jno
jns
loop
mov
pushf
push
incl
inc
add
add
lahf
sub
pop
out
xchg
add
andb
sbb
add
call
test
cmc
add
add
push
add
insb
add
add
add
sti
and
add
cwtl
jb
adc
add
add
incb
mov
dec
or
imul
add
add
add
call
add
aam
sub
ljmp
dec
or
add
lods
nop
push
add
push
add
sub
cmpsb
xor
add
xchg
mov
dec
add
inc
add
pop
hlt
jle
sub
xor
add
loop
add
add
or
ljmp
push
add
js
push
incl
mov
add
mov
inc
lahf
sbb
mulb
add
incb
inc
push
add
cmp
pop
add
add
incb
mov
incb
add
add
add
incl
cmc
dec
add
or
push
add
incb
push
xchg
mov
jb
imul
int
je
xchg
lea
mov
push
add
fwait
outsb
add
incb
mov
add
sbb
push
add
incb
hlt
imul
insl
xor
add
incl
test
add
mov
aad
incb
fbstp
das
mull
incb
push
enter
push
fldt
cmpsb
push
add
out
dec
add
pop
pop
add
int3
jns
add
sub
mulb
incb
jle
mov
incb
dec
inc
add
out
sbb
add
add
push
jle
or
repnz
mov
incl
jno
incb
daa
incb
inc
fcoml
addb
add
push
incb
subb
add
addr16
into
js
setbe
incl
clc
sti
push
add
incl
jae
push
incb
or
add
pop
push
nop
cmp
mov
dec
or
aad
inc
sub
cmpsb
insb
add
pop
dec
add
insl
mov
lret
mov
mov
insl
dec
insl
shlb
xor
add
and
add
add
add
add
ja
incb
les
incl
lcall
incb
pop
pop
add
test
or
add
sbb
mov
shll
incb
cltd
aaa
incb
mov
lahf
pop
incb
inc
pop
xchg
icebp
sbb
jnp
imul
les
rcr
fwait
ljmp
xchg
add
in
incb
data16
incb
inc
add
add
add
incb
xorb
xchg
pop
mov
mov
push
incb
add
add
xor
add
cmovo
sub
pop
add
clc
les
enter
add
inc
add
or
incb
push
insl
std
data16
mov
stc
div
ffree
incb
incb
mov
and
add
fwait
icebp
cmc
xchg
ficompl
incb
and
add
push
xor
add
daa
incb
xor
add
add
add
incb
adc
add
incb
lahf
movsb
imul
push
add
add
incb
push
add
jg
add
dec
add
ja
shlb
incl
jns
add
popf
call
and
add
popa
push
mov
incb
dec
add
ud1
incl
icebp
ja
add
bound
loopne
repnz
xchg
xchg
sti
out
mov
add
mov
add
iret
lcall
add
rcr
incb
mov
push
incl
hlt
in
movsl
inc
add
xchg
stc
sub
add
add
sbb
in
or
add
ja
incb
gs
add
incl
shlb
add
add
data16
imul
mov
stc
dec
add
ret
call
jl
add
add
arpl
xchg
roll
test
add
xchg
repz
add
push
incb
mov
mov
add
mov
cltd
imul
stc
xor
add
incb
xor
add
push
mov
pop
jno
inc
add
add
adc
add
jb
pushl
ret
cwtl
in
pop
incb
xchg
incb
pop
add
daa
incl
xchg
int
outsb
add
jo
mov
add
into
stos
pop
push
jle
mov
rcrb
mov
add
nop
in
incb
out
negb
jge
pop
mov
mov
lods
imul
incl
movsl
out
ret
fcom
mov
add
add
sbb
addr16
incl
xchg
pop
add
add
cmp
add
incb
mulb
add
leave
mov
inc
add
jecxz
add
add
nop
in
in
incb
and
add
incl
xor
add
add
add
push
incb
sbb
incb
jns
daa
incb
gs
add
adcb
cmp
cld
out
and
add
jp
cmp
fcomps
add
imul
pop
incb
loopne
sub
xchg
incb
push
add
mov
leave
adc
add
enter
cmc
cld
pushf
jbe
bound
aaa
incb
daa
incb
out
dec
add
and
add
xlat
test
mov
arpl
mov
adc
add
incb
push
out
arpl
push
incb
fcmovb
mov
pop
imul
mov
add
mov
sub
or
sub
jnp
cmp
scas
dec
or
cmp
xlat
cmp
dec
add
dec
push
add
loop
jle
inc
adc
lcall
incl
add
add
lret
lret
mov
mov
incb
xchg
imul
pushf
rcrl
in
addb
add
mov
dec
outsl
mov
in
fidivrs
add
add
mov
incb
sbbb
mov
jmp
xlat
clc
in
fstpl
add
push
sbb
fcomip
cmpsb
into
arpl
outsl
jbe
jmp
incb
push
mov
shr
pop
vmread
xchg
aas
xchg
mov
add
int
pop
pusha
add
clc
xchg
dec
and
add
incb
insb
add
mov
jne
push
add
cwtl
shl
mov
mov
add
aam
mov
add
incl
data16
add
incl
aad
int3
ja
mov
incb
jg
mov
daa
incb
repz
add
mov
inc
add
incl
sti
out
incb
push
add
sbb
imul
pop
or
subb
inc
std
cmpb
add
add
add
out
dec
add
jne
int3
sub
pushf
pop
add
incl
mov
incb
clc
insl
push
gs
push
xchg
fwait
adc
cmp
loopne
ret
and
add
incb
sub
out
jg
sbb
popa
lods
or
inc
add
xchg
icebp
and
add
add
add
outsb
add
fsubs
incl
loope
mov
push
add
add
xchg
sub
incb
testl
push
incb
or
int
add
add
imul
sbb
sub
xorb
add
incb
xchg
dec
add
stos
push
add
mov
add
mov
add
fildll
sarb
add
add
incb
xorl
mov
ret
incb
sbbb
mov
ret
inc
daa
incb
dec
add
incb
out
dec
jmp
inc
add
or
rcrb
into
xchg
addr16
add
incb
push
mov
leave
stos
add
add
add
adc
add
cltd
vpsubw
incb
add
add
js
enter
out
jne
outsb
add
cli
jnp
pushf
mov
mov
jp
xchg
sub
inc
add
incb
daa
incb
pusha
add
scas
das
cld
movb
add
incb
adc
add
inc
add
dec
add
incb
sbb
fcompl
add
add
ja
add
add
mov
incb
daa
incb
incb
cs
sbb
pop
xchg
insb
add
add
pushf
mov
hlt
stos
add
incb
test
incl
lcall
add
pop
incb
popa
add
aam
popf
inc
add
add
inc
inc
add
incb
mov
add
das
or
sub
shlb
incb
jge
and
add
cmp
or
add
add
pop
add
aas
fcoms
incb
cmpsb
adc
ljmp
cmp
loop
std
sti
negl
dec
add
dec
cmp
incl
push
add
and
pop
add
incl
xchg
dec
ret
pop
aad
lods
jecxz
sbb
add
inc
loopne
into
fmull
add
dec
add
popf
jmp
adc
add
incl
push
xor
add
and
add
jnp
add
adc
add
incl
fsts
rol
jo
jns
push
sbb
cmp
idivl
lods
cld
incl
enter
add
insl
test
mov
js
bswap
pop
mov
ja
incb
negl
pop
add
incb
arpl
and
add
incl
inc
inc
push
incb
sbb
add
dec
add
incl
les
incl
push
xchg
xchg
mov
nop
adc
add
xchg
dec
add
push
add
add
or
pop
incb
pop
incb
mov
shl
lods
pop
add
addr16
stc
xchg
and
add
sub
mov
xor
add
add
add
incl
into
jae
add
incb
shl
mov
test
push
incb
dec
adc
add
push
cmc
rolb
add
add
xchg
aaa
incl
jnp
adc
add
add
xchg
jmp
incb
or
cmp
popf
incb
push
add
add
inc
and
or
or
mov
popf
mov
add
jg
add
incb
xchg
insl
adc
add
cld
rcll
cmpl
incb
data16
pop
incb
lahf
push
and
add
incb
cmpsl
pop
dec
add
incl
and
add
add
aad
cmp
notb
incb
jbe
pop
xlat
fsts
enter
incb
mov
mov
pop
xor
adc
add
outsb
add
lret
lret
lret
loope
adc
add
incb
mov
mov
cmpsb
adc
add
incb
pusha
add
clc
sbb
incb
xchg
mov
xchg
push
incl
push
add
add
add
movsb
inc
add
cmp
xor
add
incb
dec
push
adc
add
in
mov
xor
add
pop
mov
mov
add
add
mov
or
clc
mov
add
adc
add
incb
ja
data16
int
jmp
mov
add
sub
mov
pop
xor
add
mov
gs
out
jle
add
add
add
mov
pop
das
outsb
add
incb
jno
mov
incb
jle
dec
add
sub
sub
hlt
sti
out
aas
movsb
inc
add
fs
rcrb
lods
clc
iret
inc
add
add
iret
mov
push
add
clc
add
add
mov
mov
incl
dec
add
jmp
incb
in
sub
or
lahf
loopne
incl
adc
add
lcall
xor
add
incb
fdivrs
add
add
in
pop
sub
jae
pop
add
add
add
inc
add
orl
ja
incb
add
add
add
lods
mov
loopne
add
add
add
incl
fwait
orb
pslld
add
cmp
ja
add
jbe
loop
daa
incb
sub
dec
add
gs
xor
add
xchg
lcall
pop
lret
sub
arpl
incl
mov
lcall
adc
add
cmpsb
imul
add
scas
jg
add
add
or
jl
jmp
xor
add
dec
add
add
add
add
push
aaa
incl
test
add
jp
xchg
loopne
mov
ret
and
add
incb
lds
add
incb
sub
les
add
cmp
cld
mov
add
add
test
lea
add
adc
add
call
add
add
and
add
add
add
mov
incl
push
add
incb
sbb
or
mov
fdivrp
inc
add
fists
incb
add
pop
add
mov
incb
mov
aad
push
mov
jecxz
cmpsb
adcb
add
ljmp
dec
add
fcmovnu
mov
add
lret
cmc
in
mov
add
add
add
mov
add
incl
call
std
cmpl
incl
popa
and
add
push
leave
mov
add
or
incb
hlt
and
add
cmc
push
add
lcall
or
cmp
incb
out
imul
cmova
adc
add
mov
add
incl
xor
add
mov
hlt
dec
aam
incb
dec
add
out
xor
add
sbb
push
incl
mov
jp
rolb
mov
movsb
xchg
incb
icebp
or
in
popf
out
outsb
add
sbb
in
fldenv
incl
xchg
subb
movsb
pop
popf
sbb
add
add
incb
ficoms
inc
fwait
lds
add
dec
sbb
add
add
pop
add
rolb
dec
pop
incl
nop
in
sub
push
fildl
incl
sub
incb
dec
add
adc
add
add
rclb
push
add
push
add
data16
test
mov
push
dec
add
pusha
add
xchg
mov
mov
andb
cmpsl
mov
xchg
or
aaa
incl
fucomi
xchg
pop
add
mov
add
pop
cmp
jnp
mov
jnp
incb
std
cwtl
adc
add
stc
push
incb
scas
xor
sti
divb
add
add
mov
add
and
add
push
add
out
pop
daa
incb
lods
push
add
add
or
stos
movsl
imul
adc
add
mov
mov
pop
dec
add
add
dec
add
or
add
scas
jg
incb
push
add
pop
repz
add
adc
add
pop
add
xor
add
mov
add
or
add
incb
xor
int3
jmp
mov
incb
pop
add
shlb
add
push
add
insb
add
jp
sub
fst
sub
sbb
lods
sbb
cmpsb
gs
add
sub
shrl
or
mov
dec
and
incb
mov
out
jmp
add
imul
add
add
cwtl
cmp
imul
insb
add
add
lods
icebp
inc
xchg
adc
add
popa
jp
sbb
mov
outsb
add
or
insl
icebp
int3
aad
dec
add
push
add
dec
mov
add
ret
sbb
incb
or
mov
cmp
add
fidivs
mov
dec
negl
mov
incb
sub
cmp
incb
sti
mov
stc
jns
pop
xor
fs
shrb
rcll
incb
mov
add
push
in
incb
incl
add
lea
sbb
add
incb
xchg
imul
or
cmp
les
incb
sbb
jle
insb
add
mov
subl
add
out
test
incl
add
mov
incb
ljmp
lcall
add
pop
jecxz
sbb
lret
incb
sub
aam
adcl
add
add
incl
adc
add
fwait
and
add
cmp
ficomps
push
add
int3
fnstcw
addr16
pop
add
incb
rorb
add
pusha
add
pop
incb
out
push
add
incb
jno
mov
incb
lahf
jge
popa
jmp
push
add
pop
incb
mov
dec
add
incl
mov
push
add
or
fistl
ret
pop
call
incl
sbb
leave
pop
sub
add
mov
inc
add
cmp
add
adc
add
fsubrl
xchg
cli
sbb
data16
add
push
mov
add
fimuls
mov
aaa
incl
incb
sti
stc
mov
push
add
add
inc
popa
add
add
loopne
incb
fwait
mov
fldcw
loopne
incb
and
add
cmp
jp
push
sti
fidivl
aaa
incb
out
jbe
sbb
jo
sub
repz
add
incb
lahf
lea
incb
or
stc
int3
inc
in
mov
add
add
add
dec
mov
incl
loopne
sub
mov
pop
push
data16
incb
inc
in
add
add
pop
incl
inc
cmp
fldt
add
xchg
adc
add
pop
incb
sbb
lock
test
adc
add
outsl
jae
ret
fwait
add
add
sbb
shll
int
add
add
scas
test
add
bound
dec
add
add
incl
inc
movsl
xchg
out
andl
fcoml
incb
sarl
incb
adc
add
xlat
pop
add
aad
and
test
inc
or
test
xchg
cmp
in
pop
add
incl
adc
add
sbb
movsb
repnz
add
add
fistpl
pop
add
mov
inc
add
incb
addl
divb
addr16
add
add
adc
add
add
add
incb
outsb
add
add
incb
xchg
fldenv
incl
gs
fnstcw
mov
incb
ret
mov
add
mov
les
add
mov
rolb
movsl
push
add
incb
pop
incb
rorl
add
adc
add
inc
add
xchg
cltd
in
add
or
add
add
and
add
test
or
daa
incb
and
add
cltd
out
add
mov
push
out
cmp
in
add
push
movsl
xor
add
sbb
int
and
add
lcall
enter
mov
add
sahf
sarl
and
add
lahf
xchg
sbb
out
test
incb
mov
incb
sub
xchg
pop
data16
sbb
imul
incb
out
nop
mov
fiadds
incl
pop
out
xchg
ret
adc
xchg
and
add
xchg
jno
cmpsl
ret
add
test
cmp
add
add
incb
push
daa
incb
sub
sbb
jnp
add
mov
jbe
cmc
sbb
sbb
cmp
add
xchg
incl
imul
add
incb
and
add
divb
mov
and
ja
xor
add
icebp
lds
into
or
add
incb
in
psrlq
add
push
add
test
add
incb
pop
incb
adc
add
scas
mov
popa
or
rclb
inc
fwait
hlt
xchg
jnp
add
mov
cmp
cmpsl
imul
ret
addl
xor
add
and
add
inc
add
fimull
add
add
push
clc
rorl
add
push
out
add
adc
add
add
pop
aad
pop
incb
cmpsb
andb
add
icebp
les
scas
loopne
add
pop
incb
or
cmp
sbb
adc
add
xchg
repnz
jbe
push
add
mov
sbb
sub
add
mov
subl
leave
incb
lret
or
jl
jmp
incl
popa
shrl
adc
inc
add
add
xchg
push
xor
add
cltd
test
out
outsl
pop
add
incl
xchg
fiadds
add
mov
enter
xlat
xor
add
add
and
add
jle
lods
out
data16
incb
xchg
jp
sub
fcomip
xchg
cmp
jae
cmp
and
add
fstps
adc
add
add
jg
dec
add
incb
clc
adc
add
add
out
int3
sub
lods
jae
xor
add
add
jmp
add
add
das
cmpl
sub
mov
addb
add
push
incb
stos
divl
pop
add
sub
dec
iret
or
dec
data16
fdivrl
bound
addr16
add
add
sub
mov
dec
inc
add
incl
dec
add
xchg
jge
push
add
incb
icebp
incb
mov
data16
fwait
add
add
xor
jmp
dec
add
mov
jnp
incb
sbb
and
add
jb
pop
incb
push
add
add
ds
and
add
incb
jno
sbb
test
add
dec
add
incb
adc
add
sbb
incb
lods
jno
add
and
add
sti
adc
add
das
mov
cwtl
dec
cmp
incb
test
nop
sbb
lret
stos
mov
dec
add
xor
add
jae
add
incb
mov
incl
popf
stos
add
add
enter
incb
mov
add
and
add
xchg
pushf
add
jg
push
add
incb
or
aam
aam
leave
xchg
push
incb
ficompl
add
popa
sbb
dec
call
pop
add
incb
jo
or
push
bound
int3
jbe
nop
test
cwtl
subps
mov
jecxz
add
mov
les
dec
add
incb
push
popf
gs
xor
add
add
incl
xor
add
add
stos
lea
add
xchg
out
imul
mov
add
aas
push
jns
mov
add
jp
jno
inc
out
call
add
cmpsl
jnp
mov
add
add
incb
je
in
andb
mov
mov
scas
insb
add
incl
imul
ljmp
pop
xor
add
xorb
add
into
jno
add
nop
inc
add
pop
add
push
sti
sbb
scas
aas
inc
sub
ljmp
add
incl
js
xchg
nop
outsl
fdivr
push
add
add
mov
push
add
add
incl
loopne
sub
int
add
inc
add
incb
cmp
inc
sbb
sbb
in
add
into
jbe
add
add
jle
incb
pop
add
push
add
incb
add
add
incl
sub
mov
cwtl
sub
add
dec
repnz
add
xchg
push
sbb
cmpsb
ror
cmpsl
dec
add
incb
jb
jl
jae
adc
add
add
add
incb
int3
shrb
add
dec
add
sbb
jg
cmpsl
lds
in
push
incb
jo
cmp
jno
incb
test
mov
add
clc
mov
incb
dec
add
cmp
add
leave
push
incl
fwait
shrl
addr16
adc
adc
add
add
add
incb
hlt
push
incl
add
mov
xchg
mov
sbb
add
push
add
aas
xor
add
mov
push
add
add
add
add
add
mov
mov
pop
int3
clc
in
data16
incb
orb
xor
add
inc
add
mov
push
add
iret
adc
add
add
add
add
push
inc
add
or
dec
sub
add
incb
jge
add
add
jo
outsl
push
add
incb
addl
pop
iret
sub
add
shll
incl
dec
aam
add
dec
add
add
add
iret
add
sub
add
loopne
add
stos
and
add
pop
inc
add
incb
mov
ficomps
add
mov
or
aam
incl
mov
sub
fsubs
add
incl
sbb
outsl
cmp
pop
add
dec
into
jmp
daa
incl
inc
mov
insl
repnz
add
incb
test
add
imul
or
iret
lcall
add
incl
test
inc
push
add
add
fs
out
add
ror
out
xor
add
test
or
popa
dec
lds
lret
jg
add
incb
push
pop
push
jno
add
push
incl
fildll
or
incl
and
add
incl
mov
arpl
incl
int
shlb
jle
dec
and
add
incb
aad
add
add
incb
nop
insl
enter
incb
push
add
inc
add
jecxz
incl
lcall
icebp
out
fstp
xchg
incb
fcmovu
and
ficoms
incb
int3
sub
jecxz
pop
push
add
incb
pushf
std
cmc
inc
add
incl
mov
mov
sbb
add
add
add
das
or
cmp
sbb
pop
add
js
mov
shrl
incb
inc
push
mov
fdivrl
mov
or
add
push
add
je
js
pop
add
incb
push
pop
sbb
dec
add
incl
push
add
incb
sub
lods
sub
xor
add
jo
into
pop
gs
incl
or
xor
add
inc
cmp
mov
notl
xchg
inc
add
incl
mov
lods
mov
mov
mov
incl
xchg
jnp
adc
or
incb
std
lret
lret
ret
daa
incb
push
rcrl
add
add
inc
in
dec
add
add
incb
add
and
add
add
incb
xchg
inc
popf
mov
incb
das
loop
cmp
dec
add
sbbl
add
cmp
pop
incb
lret
shr
add
repz
xor
add
lcall
mov
push
mov
adc
add
aaa
incb
iret
aam
push
add
decl
and
add
add
mov
sti
pop
jecxz
mov
jb
dec
hlt
xchg
fisttps
sub
adc
add
cmpsl
push
add
mov
add
and
push
incb
xchg
jo
inc
inc
add
push
add
pop
insl
jge
mov
data16
and
add
pusha
add
and
add
ljmp
add
jmp
ljmp
pop
add
ja
add
incb
mov
stos
repz
xor
add
xchg
inc
add
into
mov
call
out
add
jns
loopne
in
shl
jmp
movsb
or
xor
add
out
xchg
pop
add
sbb
stos
rcl
add
sbb
aad
pop
add
aam
add
incb
inc
add
iret
dec
add
add
add
incb
scas
sub
xchg
and
add
add
in
incb
and
add
add
int3
das
xchg
add
add
les
incb
sbb
mov
lea
incb
add
add
incl
xor
add
insl
or
arpl
mov
mov
push
add
pop
add
incb
mov
add
add
incl
cmp
xchg
cmp
mov
incb
inc
jno
jns
aaa
incb
in
push
sbb
mov
mov
sbb
add
xchg
js
imul
incb
fisttpll
add
mov
push
add
add
add
xchg
fisttpll
add
jmp
add
inc
add
dec
add
mov
enter
clc
nop
out
aam
lahf
mov
xlat
add
add
incb
sub
bound
mov
add
cmp
jmp
ret
out
andb
pop
add
out
adc
add
push
add
dec
add
pushf
in
pop
add
ficompl
jne
incb
mov
scas
ffreep
inc
test
jae
jbe
lea
mov
push
pop
sbb
mov
incl
loope
mov
incl
incb
stos
pop
xorb
add
mov
push
incb
push
sbb
cltd
pusha
add
jg
lret
scas
enter
ret
mov
add
mov
or
mov
pop
incb
inc
add
add
insb
add
je
shl
sahf
out
pop
add
cmpsb
mov
mov
or
mov
movsl
rolb
jecxz
add
lret
dec
push
add
insl
lahf
jno
add
fadds
icebp
cmp
and
add
pop
incb
sbb
fwait
cmp
dec
add
lcall
add
inc
lahf
test
aas
int3
aaa
incb
roll
rcll
incb
pop
cmpsl
lret
add
into
shll
incb
mov
push
add
incb
mov
gs
jnp
cmp
pop
fimull
add
mov
add
repz
in
pop
and
add
or
test
incb
repz
add
add
bound
shll
sub
pop
fcoml
adc
add
add
pop
incb
dec
mov
arpl
add
add
or
inc
mov
lret
shl
jmp
ds
loop
dec
mov
scas
int
lds
incb
hlt
rcr
or
and
add
lahf
sahf
jnp
fstps
incb
stos
ljmp
xor
add
incb
xorl
cmp
imul
add
incb
pop
add
in
cwtl
sarb
add
incl
and
add
movsl
pop
into
jmp
incb
push
push
add
inc
add
mov
add
add
cmp
mov
or
adc
add
xchg
mov
incb
inc
add
add
test
loop
ret
lds
test
jmp
fwait
sbb
outsb
add
sbb
bound
and
add
incb
push
incl
mov
jo
fcomps
test
add
add
movsb
add
add
add
testb
push
scas
sub
incb
fists
incb
or
sub
sub
xchg
inc
int
xchg
ljmp
xor
add
add
add
jnp
jmp
add
rcll
incb
pop
add
add
hlt
xchg
mov
bound
cmp
and
add
jne
aam
incb
push
dec
xchg
fisubrs
add
imul
pop
dec
lret
ja
incb
xchg
xchg
rorb
les
add
sti
mov
sti
adc
add
leave
push
add
incl
pop
add
inc
dec
add
add
incb
cwtl
aam
aad
jns
shl
mov
nop
ficompl
add
mov
incb
lods
ja
and
add
pop
incb
not
data16
pop
adc
add
sbb
std
mov
mov
add
sbb
mov
imul
xor
data16
or
jae
add
mov
repz
sub
mov
incl
pop
stc
int3
mov
fbld
inc
add
mov
push
add
test
add
add
dec
ljmp
add
gs
add
xor
add
jae
jno
mov
and
add
adc
add
xor
add
jmp
lret
repnz
or
jae
xchg
xlat
daa
incb
pop
loopne
loop
add
fisubs
incb
fstpt
add
cmc
add
scas
lcall
add
fdivl
incb
fistpll
lods
fcmove
inc
popf
sub
orl
out
arpl
mov
adc
add
add
add
add
dec
movsb
jl
rcr
push
sahf
xor
add
jle
dec
add
cld
out
mov
cmpsb
mov
add
movsb
scas
js
dec
add
incb
in
jb
lds
add
int3
cmp
add
mov
adc
add
add
incb
sbb
aas
dec
add
add
incb
mov
add
cld
push
addl
fbstp
incb
loopne
cmpb
or
add
jae
cltd
insl
sbb
jg
ja
add
add
cmp
das
mov
sub
sbb
incb
les
push
add
add
add
push
pop
and
add
incb
xlat
xchg
add
add
add
add
mov
lret
or
dec
add
ljmp
pop
incb
popa
and
add
sti
or
or
int
incb
or
mov
jnp
ja
add
mov
incb
incb
rcrb
mov
incb
cmp
mov
pop
mul
mov
add
outsb
add
add
mov
or
or
insb
add
jns
add
jns
sub
int
and
add
jb
shll
add
popf
push
add
add
out
add
add
sub
inc
fisubs
stos
in
jne
cmc
into
idiv
adc
add
add
pop
add
and
add
in
add
add
dec
add
int3
push
lock
incb
mov
mov
pusha
add
dec
add
and
add
add
sub
incb
sbb
mov
inc
add
pop
add
jo
mov
dec
nop
and
add
incl
mov
stos
mov
sahf
mov
add
incb
push
sub
or
cmp
hlt
lret
jle
in
out
incl
cli
addr16
add
mov
shlb
incb
ret
lods
dec
xchg
inc
add
sbb
in
enter
jbe
ja
addr16
inc
add
lods
aam
sbb
pop
add
xor
add
incl
add
add
stc
pop
incl
sub
aam
fisubl
les
movsb
inc
mov
dec
add
gs
sub
and
add
add
stos
cmp
push
lahf
adc
add
dec
int3
and
add
jb
cld
and
add
add
lock
xchg
jnp
jb
mov
inc
and
add
in
add
incl
inc
add
dec
and
add
xor
add
mov
push
add
dec
das
sbb
jns
fnsave
incl
jge
incb
inc
add
incb
in
or
pop
add
mov
xchg
mov
cmp
aas
pop
add
xchg
in
xor
add
pop
add
jle
cltd
cmpsb
scas
sub
jb
add
add
sub
push
incb
stos
sahf
and
add
mov
add
jmp
in
sub
add
add
add
push
push
add
jo
mov
add
jno
sub
rclb
incl
mov
incb
lret
add
in
pop
incl
stos
push
add
mov
pop
idivb
les
or
incl
cmp
inc
add
add
add
push
fildll
push
andb
add
mov
add
mov
incb
rclb
jmp
adc
roll
fldl
inc
add
incb
cmp
gs
add
jbe
add
add
fmulp
push
add
lds
sbb
testl
xor
add
sbb
std
sbb
mov
test
sbb
cltd
xchg
pusha
add
stc
sbbl
in
cwtl
cmp
enter
dec
mov
xor
add
incl
xchg
add
add
int
incl
adc
add
mov
sub
ljmp
dec
add
add
incb
mov
mov
incb
or
adc
mov
out
jg
incb
aaa
incl
mov
pop
sub
add
loop
mov
shrb
cld
sbb
scas
clc
cmp
cmpsl
push
incl
sbb
add
add
sub
test
incb
fcomps
add
dec
add
xchg
dec
add
incb
cmp
add
add
add
jp
mov
icebp
or
inc
add
sub
add
int3
adc
add
push
arpl
pop
dec
add
fs
push
incb
xchg
cmc
nop
ret
mov
daa
incb
imul
test
add
push
incb
xor
add
pop
incb
data16
incl
dec
xchg
add
mov
mov
hlt
mov
rcrb
pushf
stos
aad
pop
add
adc
jmp
dec
lahf
lret
out
fmuls
jle
sbb
imul
add
add
adc
add
iret
cli
pop
cmpsb
sbb
lea
movsb
adc
add
push
add
subb
idiv
data16
incb
pop
incb
cmp
inc
push
mov
add
test
mov
add
inc
add
out
xor
add
incl
add
mov
lret
add
gs
sbb
add
mov
add
cmpb
xchg
or
or
cmc
ret
add
push
add
add
stos
hlt
mov
incb
xchg
clc
stc
lahf
inc
hlt
shrl
xchg
std
add
add
mov
mov
add
dec
decb
or
stos
sarl
add
add
add
add
add
mov
rolb
jecxz
popf
push
cmpl
incb
out
push
incl
ljmp
add
xchg
xor
add
aam
mov
add
add
dec
add
add
cltd
add
add
dec
add
incb
stos
mov
incb
lahf
push
add
incb
cmpl
incl
dec
add
xor
add
fists
incb
push
add
jnp
rorb
incb
mov
add
add
add
mov
loopne
add
adc
add
fnstenv
incb
leave
inc
add
or
into
push
test
icebp
add
add
inc
add
add
incl
lods
out
shll
add
hlt
leave
or
incl
sbbb
add
add
or
stos
aad
shl
std
jns
lcall
jmp
fidivs
add
add
incb
loop
insb
add
incl
imul
mov
scas
lahf
sarl
pop
pop
incb
mov
xchg
ljmp
xor
add
add
push
mov
pusha
add
movsb
das
out
pop
lret
sub
push
add
push
inc
add
lahf
cmpsl
outsb
add
incl
fcoms
cld
mov
pusha
add
xchg
into
mov
add
and
add
inc
fists
sub
pop
add
cmc
inc
add
add
gs
xlat
mov
in
jecxz
add
pusha
add
fldl
and
add
inc
out
jl
push
cmp
add
xchg
cmpsb
movsb
in
incb
and
add
incb
sti
popa
sbb
mov
rcll
lds
incb
mov
out
add
xor
add
incb
add
add
outsb
add
call
adc
add
aad
xlat
arpl
add
add
dec
add
push
add
incb
cmp
imul
add
inc
add
jno
sbb
outsl
shrl
push
add
jp
adcb
sbb
add
push
add
adc
add
incb
and
add
rol
ja
jbe
cli
scas
jg
incl
decl
incb
pop
add
push
cmp
inc
sbb
jg
lock
mov
incl
pop
incb
sub
mov
mov
or
xchg
lods
cmp
les
jge
xor
add
fsubr
adc
add
add
test
and
add
push
popf
xchg
sub
jg
pop
incb
lock
mov
fwait
scas
int
pop
mov
add
pop
mov
out
mov
incb
lock
scas
xor
add
add
add
pop
add
and
inc
xor
add
add
add
out
mov
outsb
add
mov
or
mov
and
add
adc
add
outsl
mov
add
pop
incb
push
incb
cmpsl
xor
add
incb
jmp
push
incb
push
add
incb
inc
add
add
incb
or
bound
sub
arpl
add
lods
push
cmp
jl
inc
loopne
adc
add
add
sbb
and
add
add
incb
inc
cmp
adc
add
add
dec
dec
add
add
add
leave
or
sti
push
add
incl
push
incl
ret
add
add
sbb
call
popf
inc
jp
jno
add
mov
add
and
add
push
add
mov
incb
out
cmp
lahf
decb
add
add
add
mov
dec
add
sbb
shll
add
je
xchg
shrl
add
xor
add
push
test
incb
inc
add
mov
dec
mov
scas
aam
add
aad
add
jmp
incb
cmp
dec
add
out
imul
xchg
xchg
incl
inc
add
incb
jno
mov
test
add
scas
loope
aam
sbb
add
mov
add
add
incb
pop
inc
push
xchg
sub
jmp
jb
push
add
cli
test
xchg
cmc
mov
in
in
filds
cwtl
mov
test
push
sub
xchg
mov
add
add
nop
add
add
lret
add
add
add
cmp
int
js
and
add
in
mov
dec
jl
jnp
sub
lret
aad
add
incb
mov
aam
int3
fwait
xor
push
incb
rcrl
fidivl
lret
xor
add
incb
rcl
andl
inc
mov
aas
pop
add
jl
xor
add
add
add
push
add
in
add
cli
pop
push
jnp
mov
incl
int
incb
stos
cmp
or
data16
pop
incb
sbb
sti
fdivrl
add
mov
call
testb
inc
lret
incl
push
add
mov
incb
in
and
add
inc
arpl
add
jle
movsb
int
incb
cmp
js
sbb
pop
test
pop
add
add
jl
test
lret
cwtl
push
mov
add
bound
sahf
jle
andl
pop
sbb
repnz
add
frstor
push
add
les
adc
add
jmp
clc
push
xchg
cmc
pop
dec
add
cwtl
pop
pop
shll
incl
incl
icebp
jnp
or
adc
add
xchg
pushf
movsl
dec
mov
incb
add
add
into
mov
and
add
pop
incb
jb
pushf
adc
add
adc
add
sbb
das
insl
sbb
jnp
add
popf
push
push
call
testb
add
incl
sahf
aad
inc
add
dec
add
add
xchg
imul
dec
jmp
cmp
repnz
aas
cmpsb
adc
add
sbb
incb
out
and
add
xchg
inc
add
incb
pusha
add
pop
add
incl
sbb
sbbl
xchg
lock
adc
add
push
test
add
lret
outsl
stc
lcall
jbe
aam
add
dec
add
add
adc
add
pop
in
test
mov
ja
add
sub
out
sub
push
incb
inc
add
in
or
repz
int3
je
data16
push
add
vmovapd
stc
insl
and
add
dec
and
add
icebp
inc
sbb
hlt
and
add
add
incb
addb
fsub
push
add
inc
scas
iret
or
and
add
incl
fadds
fld
les
add
shlb
incb
xchg
mov
cmpsb
push
fwait
pop
push
add
mov
adc
add
jae
add
add
shlb
add
mov
mov
incb
xchg
cmp
lods
push
dec
out
iret
push
incb
outsl
int3
movsl
or
sub
incb
roll
add
mov
incl
gs
gs
cwtl
push
add
push
mov
sbb
jge
add
push
add
call
fcomip
rorl
add
incb
jb
out
cmpsb
xor
add
or
bound
cmpsb
inc
nop
jnp
cmpsl
lds
inc
add
repnz
incb
dec
sbb
xchg
sub
or
xor
add
add
add
incl
loopne
outsl
jnp
incb
mov
sbb
and
add
incl
and
add
sbb
in
adcl
add
xor
add
push
incb
sbb
dec
gs
bound
lea
incl
out
ljmp
add
add
add
in
dec
add
incb
icebp
sbb
push
add
enter
lds
jbe
pop
add
add
add
gs
xor
add
incb
popl
adc
add
incb
cli
xlat
sub
ficoml
mov
int3
push
add
je
cmpsl
pop
add
add
pop
std
push
add
dec
add
pop
add
enter
adc
add
lea
mov
das
arpl
call
dec
mov
jle
ljmp
call
int
push
add
fists
fsubr
std
cwtl
jmp
incb
lods
push
add
incb
sti
sar
out
rol
add
add
incb
out
push
add
add
lds
inc
add
pop
repnz
scas
mul
js
jge
add
mov
test
inc
add
js
push
add
call
add
add
incb
lods
incb
adc
add
incb
mov
scas
dec
mov
push
incb
test
shl
mov
incb
adc
add
incl
incb
sbb
incb
fadds
adc
add
lahf
imul
aad
pop
add
add
add
incb
in
incb
sbb
and
incb
mov
mov
mov
add
push
or
add
lret
fiaddl
incl
pop
add
incb
fcmove
mov
add
pop
add
fcoms
incb
mov
add
add
sbb
add
incb
and
add
jb
and
add
das
jle
dec
push
add
sbb
incb
cmpl
mov
xor
add
mov
incl
jne
incb
enter
add
shrb
mov
add
add
add
incb
push
fcmovnbe
mov
aam
add
dec
add
jg
add
test
add
das
xor
add
pop
add
incb
jmp
cmpsl
sub
xor
add
cmc
inc
add
stos
jb
stc
cmp
sub
clc
aaa
incb
icebp
shr
or
xchg
movsl
into
jecxz
incb
incb
push
push
incl
scas
sbb
call
add
or
insl
dec
add
add
add
add
sbb
stc
fistpl
stos
aam
lcall
xchg
insl
and
add
pop
incl
fsub
adc
add
pop
shll
lods
mov
add
push
add
and
add
incl
mov
xchg
das
inc
fwait
test
mov
stc
push
add
pop
incl
and
leave
out
cmp
loop
call
add
add
incb
sbb
lcall
inc
add
push
inc
out
daa
incb
fdivrs
incl
add
add
add
roll
incb
stos
mov
incb
sbbb
jnp
xchg
pop
add
add
or
lahf
mov
xor
add
add
inc
add
sub
push
ret
outsb
add
adcb
add
jl
mov
sub
or
sti
or
js
or
add
popa
nop
lea
sub
enter
add
adc
add
jno
or
fwait
push
add
xor
add
pusha
add
add
incl
cmp
adc
add
add
jae
incb
data16
and
add
incb
add
add
repz
add
gs
decl
cwtl
mov
sti
rcl
scas
push
add
mov
pop
fsubrl
jnp
add
popf
dec
loopne
cmp
fldt
add
incb
dec
add
pusha
add
add
add
incb
gs
add
bound
lods
pop
shll
xchg
fidivrs
add
mov
mov
cmpsl
call
mov
daa
incb
lds
add
jnp
scas
addr16
add
incb
cmp
movnti
imul
cmpl
xchg
cmp
out
stc
addl
add
add
add
js
lahf
outsb
add
mov
cmp
sti
sahf
rorl
mov
add
lods
cmc
cmp
xor
add
shlb
mov
icebp
dec
mov
sub
imul
push
add
test
add
incb
jmp
lahf
imulb
call
jg
adc
add
dec
sbb
mov
add
incb
jmp
incb
pop
add
test
idivl
add
jmp
mov
push
add
in
add
xchg
repnz
add
add
add
add
popl
add
loopne
inc
push
incb
pop
add
push
incb
das
nop
gs
jbe
xchg
xchg
cld
divps
cld
enter
jnp
sbb
stc
xor
add
fwait
jecxz
int3
xchg
jmp
add
add
add
repz
lahf
or
add
add
add
fsubrl
add
sub
aam
incb
repz
les
aam
jp
pop
xchg
negl
incb
xchg
lock
xchg
ret
incb
lods
int3
push
jecxz
add
incl
push
incb
mov
fmul
add
add
add
xchg
bound
shl
xchg
xchg
cmpl
add
ret
add
sbb
cmp
fnstcw
add
add
incb
xor
add
je
pop
incb
xchg
sub
sub
adc
add
pop
add
add
aaa
incb
mov
mov
xchg
incb
in
jge
incb
jo
jne
adc
add
fwait
cmp
in
jle
fistl
incb
sbb
fmul
pop
jae
sar
test
inc
push
sbb
sbb
add
dec
sbb
push
incb
call
mov
add
add
add
add
push
in
xchg
jae
sti
jp
dec
add
lds
incb
adcb
add
mov
add
add
nop
and
add
add
add
ja
fidivl
dec
cmp
inc
sub
incb
lods
icebp
inc
pop
inc
add
pop
incb
fidivs
mov
aaa
incb
jmp
mov
add
and
add
xchg
mov
xchg
xchg
add
ljmp
test
arpl
add
add
sub
add
add
sahf
aam
add
incb
dec
add
lret
aam
shl
into
add
add
push
add
incb
mov
insb
add
jmp
je
in
add
mov
or
and
add
add
sub
adc
add
push
add
inc
or
incb
adc
add
and
add
lret
divb
inc
add
adc
add
movsl
and
add
mov
das
xchg
fnsave
incb
les
into
repz
icebp
pop
add
jne
int
incb
leave
movd
bound
jne
test
add
outsb
add
add
adc
add
and
add
insl
cmp
mov
add
add
sti
adc
add
add
incb
xor
add
call
inc
add
popf
cmpsb
push
add
xchg
leave
adc
push
shrb
add
mov
stos
xchg
dec
add
std
and
add
incb
cmpsb
jns
add
ds
add
add
add
add
test
test
sti
or
lahf
xchg
arpl
rorl
add
sarb
adc
add
cmp
outsb
add
add
test
mov
add
sbb
cmp
cmp
add
add
inc
add
inc
add
add
adc
add
add
mov
insl
lea
sbb
jnp
mov
dec
add
pusha
add
incb
inc
add
daa
incb
shlb
incb
incb
xchg
int
incb
push
add
xchg
or
sub
mov
add
add
int3
sbb
cltd
cli
xchg
add
ja
lahf
cli
lods
pop
add
pop
add
into
mov
mov
mov
test
add
pop
incb
lret
pop
pushl
lods
dec
add
add
mov
incb
add
add
add
add
mov
mov
incb
jg
fwait
dec
add
add
sub
stos
mov
xchg
jmp
out
incl
dec
add
inc
dec
mov
mov
push
add
incl
xchg
pop
add
adc
add
incb
xor
add
add
pop
sbb
and
add
mov
add
aam
add
movsl
xchg
sbb
ret
aaa
incb
ret
clc
xchg
push
add
incb
int
icebp
push
prefetchnta
std
pop
inc
out
add
add
push
xlat
or
xchg
mov
lcall
and
add
add
sbb
xchg
arpl
rolb
add
popf
mov
add
jns
mov
inc
add
mov
add
add
add
push
fistpl
add
inc
add
mov
add
lret
push
add
inc
push
add
jno
incb
int3
inc
add
adc
add
jnp
mov
pop
sbb
imul
fstpt
aam
data16
add
xlat
clc
sbb
and
xchg
pop
add
add
add
incb
clc
add
add
xchg
and
add
mov
popa
int3
pusha
add
incl
adc
add
mov
add
incb
push
dec
add
incb
in
inc
movsl
inc
ljmp
add
into
jl
aam
incb
xor
js
mov
cli
outsb
add
add
pop
add
incl
sbbb
scas
imul
jne
inc
mov
movsl
jg
idivb
dec
sahf
repnz
sbb
sbb
mov
and
add
pop
incl
shrb
pop
add
incb
xlat
addb
jbe
mov
add
dec
or
jge
or
out
in
xor
mov
sarl
and
add
popa
bound
out
rorl
xchg
std
leave
mov
add
incb
sub
cwtl
inc
xchg
rcr
jbe
ret
add
call
add
cmpsb
fcomi
mov
or
pushf
jne
sub
cmp
scas
add
jmp
add
mov
jno
adc
add
sbb
jns
add
incb
jmp
ret
add
pop
mov
loop
add
jnp
jno
jle
loope
test
incb
daa
incb
les
pop
add
incl
add
add
mov
incb
out
add
std
mov
mov
add
xchg
incl
insl
sub
lcall
and
add
push
test
dec
and
add
daa
incb
shl
add
add
adc
add
cmp
inc
fstpl
enter
sbb
or
je
dec
add
incl
arpl
mov
ja
xchg
dec
jmp
jle
cmp
xchg
add
add
add
add
and
add
rclb
add
int
sahf
jo
fwait
js
adc
add
dec
pusha
add
add
in
mov
and
add
add
ret
test
int3
cli
jnp
xor
add
cmp
pusha
add
mov
lahf
xchg
or
lds
add
incb
sub
fidivrs
or
imul
add
mov
add
add
incb
icebp
cmpsl
test
incb
test
lods
pusha
add
test
sbb
ja
arpl
add
add
popf
in
xchg
jae
aas
loope
add
lret
stos
mov
stos
adcb
push
jae
adc
add
imull
jmp
movsl
adc
add
xchg
xlat
mov
add
outsl
adc
ja
test
incb
loop
test
add
incl
dec
mov
incb
add
add
test
in
jb
dec
xchg
xchg
or
dec
subb
popf
push
add
push
add
xor
add
pop
mov
xor
add
js
pop
lret
fnstenv
incb
adc
add
arpl
hlt
jne
pop
incl
sub
ficompl
add
mov
rcll
mov
fcmovbe
popa
aas
test
adc
add
xchg
sbb
bound
stc
mov
sahf
mov
add
loop
stos
inc
add
fmuls
add
incl
dec
add
jge
incb
inc
add
incb
cmp
ja
dec
add
cmp
psraw
add
test
inc
add
sub
push
add
incb
nop
scas
push
push
add
xchg
add
add
jnp
aam
loopne
push
add
xor
add
push
pusha
add
inc
xorl
mov
add
iret
cltd
aad
incl
out
push
pop
leave
int
add
inc
xchg
fdivrl
mov
add
inc
add
jae
and
add
dec
add
xor
out
mov
jo
cwtl
lds
cmp
incb
sbb
push
pop
loopne
dec
add
add
add
xchg
xchg
data16
xor
add
sbb
bsr
hlt
test
xchg
fwait
call
add
mov
fcoml
fnstsw
fisttpll
jne
incl
movb
add
mov
jno
aaa
incb
pop
call
add
pop
incl
and
pop
add
xchg
cmp
add
add
call
add
add
in
sub
fldcw
aad
jmp
xchg
daa
incb
sub
mov
dec
add
mov
ljmp
sbb
cmp
mov
incb
jle
pop
add
dec
add
xchg
jge
lods
cld
jns
xchg
rol
incb
or
je
jg
push
add
fdivs
aam
incl
mov
fucom
jle
mov
add
loopne
add
and
add
incb
mov
mov
add
push
incb
out
cmpsb
cmp
or
adc
add
mov
ret
incl
inc
bound
out
or
addr16
rol
les
incl
mov
add
lods
push
add
inc
xor
add
sbb
test
add
sbb
pop
incb
std
or
faddl
mov
add
addr16
mov
or
popf
dec
add
add
add
mov
mov
rcrb
add
incb
out
incl
pop
test
cmp
add
mov
incl
pop
popf
movsl
dec
add
fwait
adc
add
loopne
iret
xchg
stos
stos
inc
add
add
insb
add
jmp
xchg
incb
sbb
jge
sbb
fisubl
incb
arpl
aaa
incb
pop
daa
incb
mov
add
add
cmc
scas
mov
incb
mov
add
ret
adc
gs
ret
mov
cwtl
push
pushf
negb
out
incb
add
add
aaa
incb
decl
add
add
in
xchg
lret
add
add
dec
add
add
bound
idiv
data16
in
aaa
incl
cmp
mov
out
push
inc
lcall
in
inc
aad
pop
add
cmp
sbb
incb
lea
imul
add
inc
add
xor
incl
pop
add
cltd
jnp
add
aas
popf
and
add
add
call
mov
add
ds
xor
add
incl
pop
or
movsb
dec
adc
add
incb
or
dec
xor
add
add
incb
jnp
mov
add
add
jp
leave
les
add
lret
mov
add
add
add
fcoms
add
loop
fnstenv
add
nop
mov
push
add
incb
ret
xor
add
add
add
std
cmp
leave
xchg
popa
jne
ret
sbb
xor
add
lods
ds
subb
lcall
pop
add
sahf
push
add
cmp
jl
lods
fmul
jmp
add
loopne
ficomps
xchg
pop
insl
cmp
test
call
notl
incb
popa
dec
inc
add
add
jl
pop
mov
lahf
xor
add
mov
mov
add
add
add
add
jp
mov
nop
mov
add
add
cmpsb
aam
mov
add
jns
mov
xchg
repz
add
addb
mov
aas
mov
mov
adc
adc
add
add
lds
jecxz
mov
ljmp
add
add
incb
pusha
add
incb
call
or
sub
cwtl
lahf
pop
incb
inc
add
cmp
icebp
outsb
add
mov
add
incb
or
xchg
incl
xchg
mov
add
incb
in
jbe
inc
add
incb
jb
dec
and
add
sub
adc
add
outsb
add
xor
add
xchg
pop
fwait
mov
arpl
aas
inc
add
mov
mov
incb
mov
incl
pop
in
incl
out
cmp
sub
pop
add
js
fwait
stos
jbe
cld
adc
add
mov
add
jb
sbb
jne
xlat
adc
add
add
scas
fidivrl
or
push
incb
jecxz
mov
aas
imul
dec
xchg
xchg
jns
incl
push
add
pop
add
incl
inc
jle
subb
push
add
add
loope
mov
mov
xor
add
add
incb
call
in
add
add
mov
lahf
push
add
mov
add
sahf
jmp
incb
mov
call
mov
xor
add
add
push
add
stc
pusha
add
incb
or
daa
incl
lahf
push
add
incb
sbb
repz
add
incb
nop
and
add
mov
add
xchg
sub
cli
mov
add
fmuls
mov
add
mov
stc
xchg
add
mov
fistps
xchg
cltd
into
orl
cmp
movsb
push
push
add
inc
add
incb
clc
scas
adc
aam
outsb
add
add
incb
movd
lock
sub
sub
testb
add
subb
insb
add
data16
and
add
add
incb
mov
hlt
sbb
mov
xlat
push
jo
xlat
ja
lock
jle
adc
add
incb
sub
jecxz
aas
test
add
add
add
add
cmp
inc
add
data16
incl
outsl
clc
mov
or
cmp
and
add
mov
push
add
incb
ja
add
in
mov
add
sti
sbb
or
mov
jmp
scas
ds
push
add
pushf
orb
add
incb
sbb
test
add
add
or
sbb
popf
and
mov
add
add
add
add
incb
xchg
adc
add
in
mov
in
mov
mov
incb
sbb
fidivrs
adc
add
movsb
or
cld
and
add
dec
add
add
incb
pusha
add
shl
scas
dec
test
xor
add
xchg
mov
insl
fistpl
add
incl
data16
or
lret
adc
add
xor
add
xor
add
divl
incb
mov
incl
aas
pop
push
add
dec
mov
cld
mov
add
xor
add
xor
add
incb
mov
push
repz
xchg
mov
xor
add
add
mov
mov
add
incl
adc
add
add
and
add
int
int
pop
add
add
dec
add
fidivl
pop
loope
incb
subl
cmpsl
insl
lret
fstpt
push
add
imul
insb
add
std
fistpll
out
dec
sbb
incb
sbb
add
incl
mov
adc
add
fnstsw
mov
std
and
add
shlb
repz
mov
arpl
cmp
add
into
push
lea
pusha
add
sub
add
incl
or
jno
add
add
fwait
jp
add
add
incb
inc
in
das
xchg
inc
add
add
incb
cmp
arpl
add
jmp
add
adc
add
outsb
add
sahf
xor
add
incl
test
into
mov
incb
mov
add
nop
leave
mov
jmp
jmp
mov
add
add
or
pop
incl
inc
movsb
cltd
fwait
aaa
incl
inc
daa
incb
data16
add
add
incb
or
mov
add
enter
add
incb
pop
add
popa
cmp
ficoms
add
incb
inc
cli
stos
insl
xor
loope
add
add
incb
or
add
add
sbb
inc
add
int
clc
cmpsl
shrb
ljmp
incb
addr16
pusha
add
jbe
or
add
sbbb
add
bound
movsb
jnp
lds
mov
ja
fnstcw
add
iret
sub
rorb
mov
mov
jb
aam
add
jl
adc
or
pushf
das
test
adc
add
popf
sbb
call
movsb
ret
mov
add
and
add
add
incl
cli
iret
and
add
jmp
add
stos
cmovbe
mov
mov
mov
cmp
adc
add
incl
cmp
and
add
inc
add
jno
cmp
outsb
add
add
add
add
add
inc
add
incb
inc
fneni(8087
xor
add
incb
dec
add
std
sub
and
add
add
int
add
add
add
add
or
mul
out
xor
add
repz
pop
add
xchg
fiadds
jecxz
incb
lret
mov
jge
xchg
cmpsl
mov
bound
add
add
add
popa
bound
imul
incb
fdivr
test
add
js
mov
jecxz
incb
call
jl
add
add
fwait
cmp
mov
add
fmuls
pop
inc
add
testb
add
xor
add
jle
mov
stos
pop
add
add
add
mov
jb
push
add
dec
add
cmp
pop
nop
sub
cmpsb
jg
add
incb
cld
lcall
add
add
xchg
jns
repz
add
incb
xlat
mov
incl
sbb
xchg
add
add
add
pop
add
or
xor
add
add
stc
inc
mov
add
ds
sahf
fwait
jcxz
jle
mov
rcrl
add
lods
daa
incl
clc
sahf
dec
cld
dec
add
fstpl
add
mov
pushf
cmp
cmc
mov
add
incb
pop
mov
mov
push
xorb
incl
lahf
subb
lahf
sbb
sahf
pop
sbb
out
pop
add
jb
adc
add
fisubl
incb
add
incl
stos
jp
dec
add
fstps
add
inc
gs
jl
add
incb
mov
aas
adc
add
push
incb
rorb
sti
cmp
aas
mov
incb
out
dec
movsl
mov
push
add
data16
inc
add
mov
out
cmp
mov
pop
mov
dec
xchg
out
add
subl
push
cmp
push
incb
sub
xor
add
mov
movsb
or
daa
incb
inc
add
insl
mov
incl
arpl
incl
loop
iret
dec
add
stos
mov
incb
arpl
add
add
xor
add
incl
faddl
stc
mov
add
dec
xorb
add
add
add
xchg
pop
loope
rol
movsb
jae
cwtl
mov
xchg
mov
ja
incb
cmp
add
cmc
mov
add
movsl
and
add
sbb
movsb
cwtl
inc
and
add
in
add
loopne
add
cmp
jns
adc
add
or
cmc
add
daa
incb
mov
sbb
cmp
icebp
lret
stc
and
add
add
add
mov
sub
outsb
add
insb
add
addr16
incb
fsubrs
bound
out
ljmp
add
imul
inc
les
rorb
xchg
sti
inc
scas
clc
jns
mov
jmp
lock
pop
add
add
mov
incb
add
add
psadbw
add
xchg
in
add
add
fadds
incb
incb
add
popf
shl
fxch
push
incb
adc
add
xchg
add
mov
add
aam
mov
lahf
sbb
lock
add
mov
add
daa
incl
jne
and
add
push
scas
jecxz
incb
xor
add
ja
push
add
repz
mov
sub
jbe
jbe
adc
add
xlat
jge
push
add
mov
xchg
icebp
push
rcll
incb
sub
bnd
add
add
cwtl
pop
int3
out
pop
add
incb
cmpsb
enter
out
mov
sbb
xchg
stos
cld
lock
lds
lret
gs
add
add
push
pop
cmpsl
sbb
push
incb
mov
outsb
add
in
adc
add
incl
xlat
scas
shr
sbb
in
add
add
sbb
incb
clc
push
incl
push
popa
push
xor
add
add
incb
mov
add
pop
mov
fwait
inc
mov
daa
incl
pushf
and
add
into
inc
add
jae
les
jmp
add
mov
rolb
adc
add
mov
incb
add
add
mov
sbb
les
add
insb
add
incb
mov
imul
add
or
xlat
incl
cmp
jnp
or
add
aad
xchg
incb
inc
lds
add
add
in
data16
sub
pop
add
add
add
add
incl
clc
sub
dec
add
incb
adc
fdivp
mov
push
incb
push
add
xchg
jo
add
sub
bound
mov
fldl
incb
sub
fildl
mov
add
pop
incb
lock
add
add
incb
jl
mov
cmc
je
ds
mov
icebp
fisubrs
add
incl
push
add
aaa
incl
push
in
imul
lea
xor
add
inc
jns
ret
add
incb
in
xchg
dec
add
adc
add
jo
sub
orl
or
pop
add
add
add
push
add
pop
add
add
mov
inc
add
and
pop
add
data16
cmp
loope
cmp
out
jb
pushf
jo
add
add
int3
imul
add
les
adcb
inc
mov
aaa
incb
cmc
push
add
push
btr
incb
mov
pusha
add
enter
and
add
incb
in
cmc
fildl
inc
outsl
xchg
push
incl
xchg
out
pop
mov
sub
popf
movsb
inc
dec
pop
incb
addl
add
daa
incl
mov
repz
incb
scas
shrb
je
jnp
xlat
inc
cltd
mov
dec
out
mov
in
jl
inc
inc
add
add
and
add
pushf
ljmp
add
push
jecxz
adc
add
lds
shrl
add
add
nop
cmp
jl
scas
test
jle
imul
jo
add
add
push
add
incl
and
add
test
push
inc
add
add
mov
repz
xor
mov
test
add
inc
add
or
push
add
add
dec
or
mov
addl
mov
fcmovnb
sbb
lahf
shlb
mov
mov
stos
xchg
jns
incb
das
cmp
add
incl
or
dec
add
or
lcall
sahf
mov
and
add
test
cmp
and
add
add
adc
add
incb
sub
movsb
aaa
incl
outsl
mov
add
dec
jno
add
add
outsl
sbb
jne
outsl
add
add
incb
popf
mov
incb
pusha
add
pop
add
or
mov
or
mov
inc
add
incb
lods
cmp
jmp
incb
dec
jne
mov
mov
popa
dec
and
add
jg
repz
data16
incb
ja
sub
push
je
inc
add
incb
add
mov
add
xchg
inc
add
incb
or
cltd
mov
imul
test
cltd
out
mov
add
jbe
sub
inc
add
mov
incb
in
fcmovne
sub
add
xchg
popf
lcall
xor
add
jmp
incb
jbe
lret
test
mov
add
jg
scas
jmp
repnz
add
add
mov
mov
sbb
jae
add
push
incb
rclb
mov
movsl
mov
mov
mov
sbbb
mov
imul
add
xchg
sbb
sbb
incb
cli
jno
xorb
push
add
incb
sti
sub
incb
sbb
out
pop
add
add
add
incl
push
incl
xor
add
add
sahf
iret
cmpsb
pop
add
dec
outsb
add
pop
add
popf
push
incb
iret
cmp
jae
jno
incl
ja
add
nop
iret
mov
lea
incl
outsb
add
mov
pop
add
add
add
arpl
push
add
add
xchg
incl
incb
or
inc
aad
mov
cmp
jae
add
imul
add
std
flds
xchg
cmpsl
push
dec
sti
jns
sub
sbb
les
mov
in
add
xchg
sti
pop
add
incb
or
mov
incl
test
cmc
popl
incb
mov
imul
add
pop
add
incb
dec
xchg
or
stos
or
inc
popa
jmp
shlb
add
cmpsl
jno
add
lret
repz
cld
mov
rcrb
lods
mov
jnp
add
push
add
xchg
add
add
add
jbe
inc
rcrl
sbbb
push
add
repnz
incb
mov
jo
pop
add
incl
stc
inc
add
add
incb
das
xchg
mov
add
or
add
aam
pop
lods
lret
out
leave
xor
add
outsl
jg
incb
adc
add
incb
sub
mov
lock
incl
mov
add
add
lret
add
add
mov
jno
stos
push
call
pop
lods
mov
push
inc
add
xorl
lcall
add
arpl
ja
incl
adc
add
test
arpl
incl
cwtl
out
js
or
add
pushf
leave
subl
and
addb
incb
fldl
incb
test
or
dec
fcompl
imul
add
pop
add
pop
add
loopne
push
jp
test
adc
add
in
dec
add
dec
inc
add
imul
adc
add
dec
add
imul
and
add
add
incb
pop
add
cmpl
in
roll
incb
mov
push
div
cmp
incb
jb
and
add
xor
add
decb
arpl
inc
and
add
les
incb
adcl
aad
incb
xor
add
dec
and
add
incb
jbe
mov
inc
add
incb
dec
add
inc
add
cmp
cmpsl
fdivl
cltd
and
add
push
add
incb
dec
add
incb
dec
add
add
sbb
xor
add
mov
jae
xchg
mov
ficoml
xchg
jo
pop
mov
xchg
mov
mov
pop
cltd
mov
ret
add
xor
add
incb
dec
loop
incl
loopne
add
push
add
jns
adc
add
adc
add
sbb
push
add
cmpsb
xor
cmpb
jb
mov
add
mov
insb
add
incl
jnp
add
test
cmp
or
push
add
add
iret
out
push
incb
sub
xchg
jnp
into
adc
add
sbb
add
push
xchg
mov
incb
sub
incl
test
push
add
test
or
outsl
arpl
incb
in
push
in
incb
shll
dec
add
enter
rolb
or
push
add
incb
sub
dec
add
in
mov
mov
out
pop
adc
add
incl
in
popa
addr16
stc
push
enter
testb
in
loop
lret
sbb
out
adc
add
incl
add
add
rcr
cmp
incb
test
dec
add
sub
add
je
xor
lods
mov
incb
push
add
and
add
mov
incb
pop
testb
add
add
add
incb
lods
popa
cmpsl
add
add
add
scas
mov
incb
ffree
xchg
shrl
incb
mov
cmp
das
ljmp
add
fildll
incb
je
int
adc
std
mov
add
pop
incb
loopne
pop
add
add
add
test
push
sub
pop
incb
mov
add
add
incb
cld
fmull
push
mov
dec
add
leave
imul
int
cld
lds
push
sar
jbe
filds
xchg
xor
add
incl
test
add
mov
push
fwait
stos
mov
mov
incl
ds
xchg
les
lret
add
add
enter
mov
add
incb
pushf
xor
add
insb
add
pop
cs
leave
cmpsb
inc
add
add
jmp
mov
add
add
fisubl
add
and
add
jae
movsb
cmpsb
movsl
andl
add
hlt
pop
ret
fcomp
push
jne
cwtl
icebp
cmp
mov
fidivs
cli
popa
jmp
aad
jno
add
incb
int
incb
add
add
and
add
push
int
add
jp
and
add
add
and
add
adc
add
xchg
incb
xor
add
pop
add
xor
add
and
add
incb
sti
rcll
loop
add
incb
cmp
xchg
sbb
jge
mov
add
and
add
add
fsub
sbb
cli
out
sbbb
xchg
mov
xor
add
incb
scas
sarl
adc
mov
pop
add
add
repnz
shlb
incl
lcall
dec
or
scas
push
add
push
rcll
add
enter
add
or
xchg
add
add
cmp
ds
xlat
out
out
repnz
add
xchg
add
inc
stos
out
jmp
aaa
incb
icebp
push
add
ja
xchg
and
add
icebp
xchg
jne
shlb
add
inc
loop
incb
jl
fmulp
jmp
inc
jne
or
lods
lock
add
add
add
jnp
mov
add
adc
add
incb
cmp
lret
and
add
mov
add
incb
xchg
sub
pusha
add
popf
cmp
jo
popf
add
incb
jbe
push
cmc
jmp
incb
mov
out
add
add
jg
incb
subb
push
add
mov
clc
test
incb
sub
test
incb
pop
incb
add
incb
adcb
incb
or
push
scas
fstp
pop
add
add
add
sbb
cld
mov
add
incb
in
imul
adc
add
incb
inc
nop
mov
fldcw
add
lock
sbb
jno
fiaddl
pop
incb
add
add
add
in
lret
add
or
cmc
test
incb
dec
xchg
jg
push
incb
push
scas
mov
add
bound
xchg
or
or
jmp
add
cltd
or
add
add
incb
addr16
add
fstps
leave
cmp
data16
add
add
incl
adc
add
incb
jno
add
incl
mov
add
cmp
bound
sub
add
inc
add
loopne
mov
push
add
add
add
hlt
jmp
incb
dec
cmp
ret
mov
popf
imul
pop
cwtl
or
incb
jne
lahf
or
incb
cmpsl
xchg
jae
push
add
incl
xchg
add
and
add
mov
incb
jp
xor
add
add
jmp
incb
pop
incb
mov
pop
sub
ret
jg
add
jnp
add
add
vmovshdup
add
lret
fstpt
adc
add
pop
pop
incb
lahf
jecxz
xchg
incb
or
insb
add
jns
cmp
and
or
pop
add
ret
sub
jns
push
add
sub
add
aam
inc
int3
mov
leave
pop
add
add
loopne
add
add
pop
in
mov
add
mov
rolb
cmp
bound
aam
incb
movsb
mov
pop
or
sub
inc
sbb
sub
dec
sti
dec
add
xor
add
incb
xchg
fcomps
incb
mov
incb
add
add
add
incb
insb
add
les
aad
add
add
adcl
add
lret
mov
sti
incb
lods
test
push
add
add
push
add
pop
add
fimuls
mov
jb
pop
movsl
cmpb
add
fwait
test
pop
cmp
rcrb
xchg
movb
je
clc
cmp
lcall
or
test
sub
add
aas
test
icebp
stc
pop
add
mov
jg
adc
add
ficompl
ret
cmpsb
and
xchg
mov
add
cli
test
in
fcoml
mov
rclb
sub
movsb
pusha
add
clc
and
add
add
std
addb
add
ljmp
add
add
add
pop
icebp
clc
sahf
or
add
movsb
adc
add
add
subl
add
add
js
and
xor
add
incb
pop
add
push
add
outsl
xor
add
call
add
incb
fsubr
stos
ljmp
push
add
cli
pop
add
jl
push
incb
xchg
mov
loopne
add
daa
incb
push
add
inc
add
repz
jle
inc
aad
lods
push
add
pop
in
lahf
push
add
add
incb
insl
adc
add
loop
lcall
add
add
jmp
sub
loopne
add
add
incb
xor
add
cmc
clc
shr
inc
push
add
incb
add
add
test
pop
add
incl
jo
or
fwait
push
incb
pop
pop
add
incl
lcall
xchg
ffreep
out
add
add
pop
add
add
push
jecxz
cmc
bound
fwait
movq
dec
aad
incb
jge
inc
add
cmp
mov
jmp
jg
add
incb
lret
add
mov
dec
addr16
fldcw
add
sub
aam
add
add
inc
add
lods
jle
jb
adc
add
push
scas
popa
pop
into
xor
add
mov
roll
add
daa
incb
add
add
fnsave
add
outsl
mov
fwait
clc
pop
add
out
lods
sahf
out
jb
dec
lods
adc
add
incl
sub
add
test
pop
mov
dec
dec
ja
add
lret
lret
add
in
or
xor
incb
jae
or
sbbb
insb
add
cltd
mov
imul
lea
fwait
xor
add
dec
add
das
jge
add
mov
outsb
add
inc
xor
add
cmp
incb
pop
jb
andps
cli
les
std
shll
add
jecxz
add
jmp
add
fwait
mov
mov
incb
call
push
incl
int3
jb
push
ja
add
jg
vcvtpd2dqx
shr
push
sbbb
andb
or
out
lds
add
xor
add
icebp
sahf
fwait
loop
out
fisttps
fildll
add
hlt
or
or
xchg
incb
in
ljmp
mov
adc
add
incl
stos
repz
aad
incb
popf
jns
xchg
xor
add
je
xchg
stos
dec
add
add
lret
add
add
incb
xchg
sbb
cld
movsb
ljmp
add
and
add
repnz
incl
lcall
add
or
cmp
dec
mov
rcrb
add
push
in
cwtl
shll
mov
arpl
je
add
add
sub
and
add
add
incb
or
in
mov
xor
add
xchg
or
cmpsl
xchg
rolb
std
xor
add
add
sahf
push
mov
add
inc
add
pop
incl
mov
push
add
popa
adc
fisttpll
push
inc
cmp
ror
incl
loop
incb
sub
add
incl
jp
imul
inc
add
incl
pop
stos
inc
add
sbb
mov
dec
xor
add
incb
jns
incb
jmp
add
orb
and
add
loopne
addb
incb
mov
loopne
xchg
mov
push
xchg
mov
fdivrs
add
and
add
fmull
sbb
imulb
jns
movsl
push
add
pop
gs
add
adc
add
jns
popa
cmpsb
cmpsb
test
push
incb
mov
sbb
mov
out
rol
xchg
stos
icebp
rcl
add
incl
or
jle
dec
pop
incl
lds
nop
xchg
dec
and
jl
fildll
pusha
add
incb
subl
add
push
add
xor
add
sbb
mov
comiss
add
jl
and
add
xor
add
mov
incb
outsl
mov
incb
cs
xor
dec
add
pop
cltd
aad
cmp
sbb
push
add
mov
sub
call
pop
add
js
mov
add
incb
pop
subb
incb
lock
xchg
add
incb
incb
icebp
add
add
fnstenv
mov
jns
incb
jb
jmp
add
add
add
sbb
lea
xlat
nop
clc
xor
stc
mov
leave
sbb
mov
adc
add
incb
xchg
xchg
inc
or
out
nop
fcom
shl
fstps
adc
add
incb
or
sub
adc
pop
add
xchg
pop
jecxz
incb
xchg
dec
add
shl
add
incb
cmp
xlat
lea
xlat
push
xchg
mov
loop
cmpsl
pop
incl
lods
movsl
sub
outsl
ret
or
incl
jecxz
pop
dec
add
out
mov
dec
mov
cwtl
jns
add
pop
jmp
push
add
add
fsubrs
lret
scas
cmp
test
popf
add
add
pushf
scas
je
in
incb
push
incb
clc
dec
add
xchg
or
add
ret
in
lods
int
lcall
lahf
insb
add
pop
add
incb
sub
inc
fsubl
ret
xor
add
gs
sbb
push
mov
adc
add
into
sahf
test
les
addr16
add
mov
sbb
aad
add
incb
cwtl
xor
add
mov
dec
cmc
inc
add
add
add
mov
push
add
add
add
movsl
sub
inc
add
sbb
inc
add
incb
pop
imul
sbb
inc
dec
cmpl
add
add
add
xor
add
lods
outsb
add
hlt
mov
movsb
mov
imul
dec
dec
add
testb
cmp
out
add
incb
std
idivb
add
repz
sbb
icebp
add
add
jl
add
add
cld
push
lret
bound
movsl
push
or
add
inc
jge
add
incb
mov
jl
popf
cmovnp
incb
in
in
test
add
add
in
ja
add
lcall
cmp
pop
add
jb
sbb
je
xchg
ljmp
push
mov
shll
incb
dec
add
stos
lahf
mov
add
in
pop
add
incb
cwtl
lcall
add
out
sub
mov
imul
int
add
pop
add
push
add
in
sub
jno
mov
clc
dec
add
fcomps
mov
decl
mov
add
mov
incl
cmpsb
mov
add
loope
pop
ja
add
jmp
incb
pusha
add
test
add
push
add
out
lods
gs
xchg
inc
add
incb
test
jbe
mov
and
add
notb
dec
outsl
fdiv
jo
mov
jle
push
incl
adc
aam
imul
daa
incl
dec
add
add
incl
rcpps
add
jmp
push
data16
add
jg
jns
fsin
mov
push
or
pop
pop
add
add
notl
incb
mov
mov
outsb
add
mov
shlb
incb
movsl
xchg
incb
jl
adc
loopne
adc
add
add
add
cld
aaa
incb
or
incb
pusha
add
add
add
shlb
incb
data16
mov
push
mov
mov
push
add
test
add
adc
add
data16
lahf
add
incl
pop
ret
add
pushf
mov
add
stos
insl
jb
lret
push
add
incl
sub
sbb
out
sub
xchg
fdivl
dec
add
incb
xchg
push
add
add
in
adc
add
sub
mov
testl
add
xor
add
add
incb
lahf
les
add
add
jbe
lret
mov
incb
lock
dec
add
mov
xchg
shll
add
or
add
incl
insl
xor
add
sbb
lcall
incb
mov
add
mov
push
pop
sub
sti
in
incb
idivb
aad
incb
fwait
push
xchg
and
add
mov
adc
add
incl
mov
adc
mov
lods
inc
add
mov
mov
add
out
jecxz
mov
add
xchg
incl
mov
jns
jne
add
pop
incb
xor
add
test
mull
incb
scas
xchg
cli
loope
scas
cmc
dec
add
dec
and
add
incb
out
in
add
dec
sbbb
add
add
aam
ret
fdivr
stos
and
add
mov
add
out
pop
lahf
incb
aaa
incl
lods
loopne
cmc
mov
test
add
pushf
test
sbb
test
test
add
nop
sub
add
mov
add
pusha
add
jmp
dec
add
incb
inc
or
movsl
cmc
mov
outsl
lds
incb
add
add
mov
push
mov
and
add
add
scas
cmc
push
add
mov
mov
incb
add
add
add
add
pop
add
cmp
ljmp
incb
push
add
enter
xor
add
add
loopne
add
cmc
loop
adc
add
push
add
incl
jb
xchg
mov
add
add
outsb
add
add
add
add
insb
add
adc
add
add
incl
xchg
xor
add
mov
dec
aam
into
enter
incl
ljmp
cmp
imul
add
add
inc
cwtl
aas
mov
add
rol
xor
add
jbe
std
push
add
add
jnp
out
mov
add
repz
dec
add
add
incb
push
add
incb
rolb
pop
dec
cli
mulb
incb
leave
adc
add
rcll
cltd
pop
add
adc
add
incb
dec
inc
lock
pushf
mov
add
push
or
dec
add
add
fnsave
xor
add
incb
pop
ret
sbb
hlt
push
jb
repnz
mov
add
add
incb
fwait
cmc
inc
add
cmc
xchg
notl
fsubrs
and
add
mov
inc
pop
push
pop
add
pop
incb
inc
jl
stos
jno
add
inc
add
mov
mov
add
add
cld
shlb
incb
sbb
out
jns
dec
add
push
add
incb
jb
mov
dec
dec
add
mov
out
lahf
dec
add
stc
mov
inc
add
add
add
movsb
lods
adc
add
sub
incb
dec
or
sub
xor
add
sub
ljmp
add
ljmp
loope
push
pop
add
mov
sub
xchg
aas
fnsave
incb
dec
sar
fld1
in
add
pop
incb
pmulhw
pop
add
add
add
xchg
and
add
add
fsub
mov
scas
stos
in
ljmp
adc
add
incb
or
mov
cmp
lret
add
shl
idivb
ret
shlb
pop
incb
lods
cmp
add
incb
cmp
incb
das
fucomip
mov
mov
add
mov
add
incl
repz
in
sti
enter
add
into
clc
stc
cltd
inc
add
call
push
enter
fbld
cmp
incl
xlat
and
add
xchg
jecxz
add
popf
movsb
mov
call
jae
repnz
add
fldl
clc
pop
mov
incl
pop
add
pop
add
incl
lret
mov
push
repnz
lcall
lods
sub
jmp
rcll
add
add
mov
aam
fidivrs
add
incl
out
pop
add
dec
add
incl
lock
daa
incb
push
imul
stc
inc
pop
incb
std
roll
add
add
add
add
incb
addr16
incb
mov
aad
lahf
push
jbe
cmp
incl
adc
add
lock
add
add
jp
testb
incb
xor
add
lcall
jge
mov
dec
add
add
adc
add
add
dec
add
incl
daa
incl
rcr
mov
sub
pop
incb
cwtl
mov
add
add
and
add
inc
add
mov
push
fsubrs
pop
incb
fidivrl
testl
les
xor
add
incl
test
lahf
cmp
add
test
incl
or
arpl
mov
scas
add
add
add
add
int
and
data16
in
cmp
lcall
and
add
incb
sbb
aaa
incb
pop
incb
cwtl
cltd
gs
add
add
incl
push
xchg
inc
push
xchg
cmp
std
or
and
add
out
incb
cmp
cmc
push
add
add
testb
add
popf
stos
hlt
jbe
add
aas
xchg
xchg
fwait
adc
add
pop
incb
rcll
incb
addr16
fldenv
incl
sub
inc
add
lret
add
incb
insb
add
out
mov
mov
incb
sbb
xor
add
add
mov
stc
jno
mov
movsl
fwait
insl
lcall
mov
add
mov
adc
add
add
incl
arpl
arpl
icebp
icebp
aaa
incb
pop
dec
push
add
add
add
into
jo
pushf
pop
incb
mov
inc
add
xchg
lock
xor
add
add
add
call
ja
mov
lods
inc
add
add
mov
jmp
data16
lds
dec
add
and
add
sbb
mov
test
jg
push
add
sub
mov
incb
dec
add
lock
repz
cmc
into
pop
incb
shlb
add
incb
outsl
mov
push
add
add
inc
add
add
outsb
add
xor
add
add
push
incb
loope
out
addr16
outsb
add
cltd
aaa
incb
mov
add
add
add
incb
roll
mov
sbb
test
add
in
cmp
add
das
xor
add
subb
dec
add
incb
rol
loop
jmp
idiv
andb
add
pextrw
push
add
sahf
sub
mov
stc
add
add
and
add
incb
repz
incb
push
sbb
and
add
jge
les
add
movsb
in
movsb
ret
clc
dec
incb
pop
add
cmp
sbb
incl
mov
pop
add
bndstx
lock
lods
jnp
incl
mov
sub
push
ret
mov
add
gs
add
incb
orb
incb
fildl
fmuls
les
add
add
inc
pop
icebp
jmp
popf
xor
add
popa
popa
jmp
push
pusha
add
addb
add
add
add
pop
add
add
incb
cmp
arpl
xchg
dec
push
add
add
add
incb
hlt
inc
add
dec
movsl
wrmsr
incb
int3
scas
sbb
test
incl
mov
incb
test
repz
inc
jo
aaa
incb
fldt
xchg
sbb
incb
out
dec
add
fdivl
incb
stos
or
imul
pop
mov
sbb
imul
add
incl
mov
cmp
sti
pop
add
faddl
incb
lea
adc
add
push
add
pushl
incb
push
incb
inc
add
addr16
cwtl
test
xchg
ljmp
pop
add
clc
mov
add
add
pushf
dec
add
jge
and
add
add
mov
int
xchg
xor
add
in
mov
add
add
add
mov
incl
je
test
incl
pop
xchg
sub
xchg
in
mov
imul
mov
add
loop
cmpsb
sar
inc
repnz
mov
adc
add
and
add
incb
fcomp
in
ljmp
frstor
xchg
sti
les
adc
add
incb
xchg
jns
inc
add
ror
nop
push
mov
incb
lahf
lcall
shlb
incb
jnp
roll
incb
cld
sub
add
add
add
adc
add
inc
ljmp
pop
add
std
outsb
add
incl
xor
add
fsubrl
pop
add
cwtl
jo
sbb
add
cmp
add
je
sti
push
add
aad
incb
add
add
xchg
incb
push
add
inc
add
incb
and
xor
add
add
mov
add
incl
je
sub
jno
loopne
dec
add
or
inc
add
mov
add
incb
shrb
xchg
ret
mov
add
push
out
incb
pop
jg
xchg
call
add
stc
cmp
call
sub
add
add
add
sbb
mov
xchg
repz
sub
std
push
add
add
or
stc
outsb
add
aas
orl
mov
jp
jl
insl
icebp
stos
sbb
push
add
ret
jp
shr
xchg
lret
add
gs
push
add
and
adc
add
in
push
inc
add
xorl
add
imul
mov
push
incl
incb
sub
mov
fsubr
mov
ret
repz
pop
incl
int3
cmc
xchg
xchg
bound
les
jle
lret
jne
add
jno
sub
sbb
hlt
lock
das
push
add
enter
add
incl
incb
mov
fucompp
xchg
push
cmc
jo
incb
test
cld
fisttps
out
pop
fsubrp
js
lock
xor
add
push
add
add
incb
sti
das
mov
incb
sarb
add
push
incb
push
incb
hlt
xchg
outsl
mov
push
pop
adc
incb
aam
xchg
ljmp
adc
add
xor
add
xchg
or
jle
fucomip
lret
push
add
mov
jb
pop
cmp
add
sub
test
add
aam
add
push
incb
sbb
add
ljmp
incb
mov
cmpsb
cmpl
push
add
add
push
fwait
jnp
cmp
popf
fidivrl
cmc
inc
add
incb
popa
out
ljmp
rcrl
or
incb
push
add
andl
add
incl
adc
add
incl
xor
add
add
lret
add
data16
xchg
daa
incl
aad
add
lcall
cli
mov
cli
push
add
out
sarb
add
test
xchg
out
outsl
sub
lret
outsl
mov
in
mov
int3
jns
nop
xor
add
incb
enter
dec
sbb
xlat
dec
add
incb
lret
sahf
push
add
or
popf
sbb
out
aaa
incb
jmp
incb
shrb
add
pop
push
inc
fimull
js
stc
pop
add
add
cmc
inc
add
add
outsb
add
cltd
pop
loop
add
fidivl
pop
add
add
lock
add
add
cltd
shrl
xor
push
xor
add
add
incb
sahf
mov
iret
inc
add
gs
out
cli
push
ljmp
xchg
push
lock
add
mov
fisttpll
jnp
mov
cmpsl
inc
adc
add
pop
add
incl
mov
xchg
gs
add
add
mov
add
cli
daa
incb
pop
bound
lea
notl
insb
add
add
xor
add
leave
xor
add
jo
push
add
sarl
aas
shlb
incb
adc
push
add
add
in
and
add
jmp
add
psllw
adc
add
pop
jno
add
jne
stc
pop
add
dec
add
incl
fcomps
fdivs
dec
adc
add
add
dec
jae
add
shl
dec
add
aas
aas
xor
add
pop
incb
inc
mov
popf
mov
pop
mov
sbb
aas
jp
jb
fst
jp
pop
add
pop
dec
incb
shl
cmc
push
sbb
iret
jnp
add
add
incb
inc
add
add
incl
hlt
loopne
xchg
mov
incb
pop
jge
fadds
call
mov
add
pop
daa
incb
pop
incl
sbb
pop
test
mov
incb
fwait
dec
add
fistpl
pop
add
and
add
jnp
mov
add
incb
pop
idiv
out
test
pop
add
add
adc
add
cmp
add
imul
incl
nop
xchg
cmp
sbb
adc
sub
add
repnz
add
incb
pusha
add
ret
inc
add
push
jbe
loopne
enter
mov
adc
add
mov
cld
cmp
outsl
or
in
fwait
or
add
lcall
loope
inc
mov
lods
das
outsb
add
add
add
add
fcoml
and
add
ret
add
das
lret
cmp
sbb
xor
add
and
add
ret
mov
add
add
add
add
stc
xchg
scas
xor
add
push
add
add
incb
and
pushf
adc
aas
pop
add
iret
mov
loope
das
mov
rcrl
incb
int3
pop
add
xor
add
push
addr16
mov
repnz
add
lahf
sbb
cli
sti
xor
add
fistpll
add
add
test
xor
add
incb
dec
add
add
mov
inc
test
fidivrl
adc
add
rolb
in
inc
add
dec
imul
add
loopne
cmp
scas
adc
add
mov
mov
inc
add
pop
add
out
push
add
mov
pop
incb
inc
add
and
add
mov
mov
inc
add
inc
add
jns
add
into
testb
add
pop
add
int3
pushf
cmp
cwtl
pop
aam
jae
int3
xor
add
inc
add
adc
add
sbb
jle
xor
add
incb
cmp
mov
out
jge
stos
sub
xor
add
add
add
add
incl
cmp
incb
lock
mov
add
aam
dec
sbb
into
cmp
gs
cmpsl
inc
add
incb
movsl
cmp
add
add
add
incl
jae
fcmovb
add
add
add
incb
pop
incb
jnp
add
incb
enter
add
add
incb
loop
xchg
push
sbb
incl
leave
add
xlat
decl
sbb
mov
or
xchg
mov
add
incb
add
add
adc
add
adc
add
add
incl
adc
add
mov
dec
add
and
add
add
add
incb
das
mov
aas
xchg
bound
xchg
daa
incb
notb
or
incb
fwait
lret
js
push
jne
loop
incl
out
inc
leave
mov
mov
movsb
inc
mov
incl
or
sub
cltd
pop
adc
add
incb
or
testl
pop
incl
push
cmpsb
ljmp
pushf
pusha
add
add
scas
or
stos
stc
adc
push
mov
add
incb
dec
add
lret
pop
jo
subl
add
add
add
incl
outsb
add
incb
fsub
xor
add
add
push
popa
jp
or
ljmp
push
fwait
lret
in
add
pop
push
stos
gs
sub
sbbb
add
jge
and
add
pop
sub
sub
insb
add
jl
pop
incb
pop
incb
enter
cs
int3
add
add
incb
aam
xchg
cld
and
add
incb
cmp
pop
pop
add
mov
sbb
jno
push
fnstenv
add
les
fcoms
push
incb
xchg
xor
add
add
or
xchg
sbb
push
test
incl
xchg
and
mov
add
cld
imul
add
incb
sub
xor
add
or
add
add
incl
mov
sbb
xchg
jns
incb
add
add
incb
sti
pop
incb
xlat
out
incl
inc
ret
hlt
fsubl
cmp
adc
jno
add
incb
mov
add
add
jo
mov
add
add
shll
inc
add
movsb
inc
add
push
add
dec
add
jo
add
popl
incb
pop
add
xor
mov
bound
sbb
incl
inc
add
incb
xchg
repnz
outsb
add
add
incb
xchg
jmp
add
lods
push
add
nop
aad
lods
xor
add
lea
add
incb
cmc
incb
fistl
incb
inc
add
scas
divb
incb
sbbb
add
mov
add
add
dec
add
incb
stc
addl
push
add
incb
popf
dec
mov
imul
mov
nop
bsr
add
push
jp
add
add
mov
shlb
mov
fdiv
xor
add
add
test
pop
add
add
jae
add
add
add
add
add
add
push
add
aad
xor
add
pop
add
add
inc
add
incb
mov
pop
incb
mov
mov
loope
add
leave
out
or
cltd
add
in
incb
mov
hlt
aad
or
outsb
add
add
incb
cmpb
test
and
jp
dec
add
ret
push
filds
incl
add
incb
xor
add
add
add
jp
mov
lea
jne
incb
incb
pushf
lods
and
add
or
dec
popf
or
jl
stos
dec
add
incb
mov
sub
xchg
shr
out
dec
dec
add
lahf
add
add
cmp
lret
or
pop
add
loopne
incb
inc
mov
add
cld
mov
add
jge
jg
incl
adc
add
inc
lahf
inc
add
hlt
in
add
add
jnp
add
incb
out
rcll
loop
fstpl
jae
jge
xchg
lret
add
add
add
mov
out
jle
push
je
mov
xor
add
dec
sub
or
std
mov
add
add
cmp
test
add
add
in
cmpl
cmc
sarl
add
add
sbb
incb
jle
jnp
dec
fildl
shlb
incb
xlat
je
push
add
incb
cwtl
xor
add
xchg
push
add
incb
sti
dec
add
mov
loopne
incb
add
add
add
rep
and
add
mov
mov
bnd
dec
lock
stc
sete
add
xchg
mov
mov
add
lret
add
lret
in
ja
je
cmpsl
mov
push
add
pop
add
cmp
incb
cmpsb
cwtl
bound
lock
cwtl
out
ror
add
add
and
add
add
add
adc
add
lods
push
adc
add
test
scas
mov
test
sbb
add
xlat
xchg
incb
mov
out
daa
incb
inc
add
mov
add
mov
push
add
loopne
inc
lods
cmp
mov
mov
incb
mov
incb
maskmovq
stos
iret
stc
cwtl
pop
add
inc
mov
add
incb
cmp
scas
stc
xorl
fistps
jbe
out
and
add
in
inc
add
mov
pop
nop
sub
xchg
addb
add
shll
sbb
out
add
cltd
mov
mov
fldcw
add
add
hlt
jp
incb
idivl
test
in
lret
arpl
jmp
add
jnp
add
out
jb
jmp
add
stc
cltd
inc
jg
add
test
add
incb
sbb
daa
incb
lock
adcl
je
ja
or
incb
adc
add
cmp
add
add
inc
add
add
sbb
incl
enter
add
add
add
inc
add
mov
sbb
adc
add
pop
in
push
loope
incb
jns
sub
dec
add
jb
sbb
sub
jecxz
xchg
daa
incb
mov
add
and
add
adc
add
incb
rcrl
incl
out
incb
sbb
xor
add
mov
incb
incb
cli
mov
incb
sbb
incb
cmp
repz
lret
add
incb
xchg
sbbl
incb
shl
incl
and
add
jmp
iret
adc
dec
sub
mov
jb
push
add
incl
ljmp
out
out
sti
lods
movsb
sbb
lods
mov
mov
add
add
add
out
call
xor
add
dec
push
jmp
shrl
jp
mov
add
add
rclb
fildll
movsl
movsl
bound
cmc
pop
js
adc
add
push
xor
incb
or
test
lahf
test
fsubr
stos
xchg
incb
stos
loop
add
incb
add
add
test
insb
add
jns
cmpsl
inc
add
incb
sbb
add
stos
cs
inc
add
add
incb
add
add
cmpsl
xor
add
add
add
push
mov
inc
lret
repz
add
add
loope
cmpsl
xlat
sarb
sbb
ljmp
mov
mov
mov
jg
scas
push
movsb
incl
mov
incb
cmpl
incb
pop
add
add
mov
cltd
jmp
cmpsb
mov
pop
add
sub
add
incl
orb
add
xchg
insb
add
incb
repnz
and
add
call
mul
adc
add
add
add
incb
add
pushl
incb
popa
clc
xchg
sbb
inc
add
cmp
push
cmpsl
cmpsb
and
add
jae
mov
add
incl
incb
mov
adc
add
incb
in
add
incb
outsl
lcall
pop
vpsubw
add
push
add
icebp
fidivs
incb
mov
lcall
mov
fimull
add
popa
add
add
mov
sti
push
dec
test
xchg
sbb
lods
iret
sahf
sbb
and
add
inc
add
xor
add
jecxz
push
std
push
ljmp
lea
pop
fistl
jb
jle
jge
dec
add
add
pop
ret
rol
push
incb
and
add
add
push
push
add
cmp
or
test
add
and
add
imul
add
pop
add
incl
lea
add
popf
mov
add
in
in
fs
mov
out
sub
das
std
xlat
xor
add
cmp
or
aaa
incl
roll
incb
jno
inc
sti
out
ja
in
inc
add
jns
add
add
mov
daa
incl
fisubrl
popa
jle
aam
add
incb
mov
and
add
loop
pop
incb
jno
add
add
dec
add
dec
add
lret
push
add
incb
dec
adc
add
sysenter
incb
dec
add
incb
dec
or
call
xchg
pop
fiaddl
adc
hlt
add
add
push
add
or
stc
cmp
add
add
pop
mov
or
scas
xor
add
scas
mov
scas
push
cli
mov
incb
lods
pop
incb
fdivs
inc
test
sub
jl
inc
ror
push
incb
rorb
hlt
pop
rep
sub
mov
incb
call
add
xor
add
mov
shlb
incb
adc
add
iret
lods
lods
cli
jae
lcall
and
add
mov
sbb
mov
in
jg
add
aad
cmpsb
leave
jbe
mov
jne
out
add
add
test
incb
inc
aas
jecxz
jbe
mov
mov
add
hlt
lcall
add
inc
add
in
orl
ljmp
add
xlat
adc
add
incl
mov
mov
loopne
and
add
add
ret
incb
pop
add
incb
incb
shl
sahf
push
add
inc
add
add
or
and
add
addr16
add
clc
in
inc
popa
push
sarb
mov
pop
add
incb
popf
dec
or
mov
or
dec
add
bound
ficoml
rclb
inc
mov
incb
movsb
icebp
enter
sti
mov
jecxz
mov
incb
push
icebp
mov
add
dec
add
aam
adc
add
incb
mov
imul
incl
mov
add
incb
sbb
sub
cltd
in
mov
xor
add
push
add
incb
lea
push
incb
pop
dec
lret
mov
call
incb
xchg
push
add
incb
or
xor
add
add
add
jge
incb
mov
add
into
push
add
sbb
lods
sbb
cwtl
cmpsb
add
add
add
or
shrb
xor
add
repz
add
add
jb
cmpsl
iret
iret
adc
add
add
add
incb
jecxz
push
incl
jno
lahf
adc
add
incb
fcomps
xor
inc
fdivs
mov
jns
add
dec
add
add
add
incb
pop
pop
pop
incb
dec
add
add
movsl
mov
push
add
outsl
add
sub
push
incb
gs
incb
xchg
jmp
add
incb
insl
mov
xchg
dec
sub
jo
mov
incb
push
mov
insb
add
pop
add
push
add
inc
push
sbb
inc
add
incb
rcll
incb
cltd
mov
psrld
insb
add
bound
negb
cmp
pop
incb
cmp
jne
sbb
out
or
xor
add
add
add
cmpsl
stos
add
add
add
data16
sub
push
add
add
cltd
icebp
int3
add
add
ljmp
mov
aaa
incb
xor
add
incb
sub
enter
fidivl
add
incl
jmp
push
add
popf
cmp
mov
clc
pop
cmp
incl
rcrl
add
enter
out
pop
incb
leave
sbb
jns
add
cmp
jle
cmpeqps
in
or
outsb
add
scas
mov
pop
add
add
pop
add
shr
jb
mov
add
incb
cmp
add
mov
push
cmp
incl
rol
mov
ret
into
mov
test
inc
stos
out
fcompl
pop
ja
sbb
xchg
adc
add
call
pop
incb
mov
mov
pop
cmp
add
and
add
xchg
popf
test
jne
jbe
mov
add
incb
add
mov
add
add
mov
add
faddl
push
mov
and
add
jmp
mov
inc
mov
add
incb
and
add
mov
incl
pop
stos
cmp
inc
add
idiv
cld
xchg
les
add
adc
add
dec
pop
add
arpl
xor
add
xor
add
cmp
pop
add
jne
dec
aam
ret
out
out
loop
sub
incb
mov
add
xor
add
dec
add
incb
dec
adc
add
add
add
add
cld
cmpsb
in
pop
add
xor
add
add
sub
push
loope
insb
add
add
mov
add
xor
add
add
add
add
cltd
scas
lret
aas
inc
sub
sbb
add
add
push
incb
stc
mov
incb
jecxz
enter
add
popa
fmull
shrb
lret
mov
add
mov
add
in
lret
call
out
jno
add
jle
mov
add
daa
incb
or
incb
shr
add
incb
inc
call
incb
dec
add
pop
into
ret
add
add
cld
lret
stos
movsl
adc
add
incb
dec
add
pusha
add
into
mov
jp
sub
aam
add
mov
xchg
dec
jl
or
les
sub
test
incb
test
fwait
movsb
mov
mov
mov
inc
add
xchg
add
incb
mov
add
add
add
add
jo
into
lds
incl
inc
add
add
pop
shll
incb
adc
add
incb
stos
test
cwtl
cmp
das
jno
in
outsb
add
xor
add
xchg
in
incl
jne
pop
add
incb
pop
cmpsl
sub
mov
mov
push
cld
andb
add
incl
mov
loop
incb
sarl
je
add
add
push
incb
std
loope
add
incl
nop
in
add
push
in
imul
add
incb
sub
incb
add
add
cmp
in
jnp
loopne
add
add
incl
fsave
incl
lret
incb
sbb
incb
data16
dec
stos
popf
mov
inc
add
mov
add
add
add
incb
aam
adc
add
add
add
dec
stc
sbb
lret
incb
mov
mov
pop
add
ret
or
or
mov
cmp
dec
add
inc
int3
lea
incb
inc
add
xchg
cwtl
or
xchg
in
aaa
incl
dec
add
imul
push
add
ljmp
xlat
inc
add
incb
or
add
add
cld
pop
jl
mov
incb
cld
jl
movsl
mov
incl
lea
add
push
add
mov
incb
ret
dec
mov
push
push
add
js
push
add
addr16
incb
cltd
arpl
cmp
stc
jb
add
push
sub
add
add
incb
bound
clc
icebp
sub
pusha
add
test
add
fidivl
incb
dec
mov
fistpl
add
aaa
incb
mov
add
add
jg
adc
add
iret
lcall
mov
incb
imul
push
add
incb
mov
mov
dec
add
in
mov
add
inc
cld
out
inc
add
out
pop
xchg
adc
add
leave
test
mov
incl
fisttps
into
jg
iret
jne
mov
add
popf
dec
add
sub
in
xchg
lock
scas
cmp
testl
int3
and
add
xchg
std
xchg
jge
test
add
adc
add
jp
adc
add
incb
pusha
add
incl
mov
outsb
add
jle
cld
inc
add
pop
and
add
add
pop
add
in
add
dec
add
cmc
xorb
pop
add
push
adc
add
incl
arpl
add
imul
push
mov
dec
add
dec
add
lock
add
add
add
sbb
test
incb
xor
add
add
mov
add
inc
add
lcall
add
add
lods
iret
or
lea
scas
mov
push
jg
cwtl
lahf
test
incb
jbe
pop
mov
popf
mov
add
aad
add
lahf
jo
pop
rcl
mov
clc
insb
add
incb
fidivs
push
add
and
add
incb
lret
add
fwait
inc
lods
stos
cld
inc
add
out
incl
lods
iret
lcall
pop
add
enter
in
mov
cli
cmp
mov
pusha
add
push
add
add
add
pop
xor
movsb
std
cmp
fmulp
sbb
add
add
add
and
dec
pop
aaa
incb
mov
insl
scas
stc
sub
xchg
jb
cmpsb
aad
data16
incb
mov
out
xchg
push
incb
push
add
fadd
cld
fdivrl
stos
movsl
arpl
iret
flds
or
add
mov
xor
incb
mov
incb
or
add
aad
add
fmul
dec
incb
fwait
and
add
incb
add
add
add
dec
add
xor
add
jne
push
add
cmp
mov
incb
dec
add
push
shll
add
incb
enter
popf
js
mov
mov
push
add
xchg
inc
add
addb
add
xor
add
rclb
fnstsw
je
int
incb
xchg
cmp
stc
sub
incb
mov
and
add
xchg
pop
incb
jp
enter
add
add
out
lods
sbb
inc
add
xchg
add
add
mov
mov
mov
pop
pop
sbb
push
incl
aas
push
add
mov
nop
fistl
mov
add
mov
gs
pop
incb
incb
mul
mov
incb
cmp
shl
std
insl
sbb
int3
jle
rcl
aaa
incb
sub
dec
add
int3
push
incb
ljmp
add
unpcklps
add
inc
aad
adc
add
jns
nop
mov
incb
lods
jo
sub
jne
cwtl
xor
lds
incb
lahf
mov
mov
adc
add
fildl
add
pop
add
mov
xchg
scas
stos
pop
in
or
add
add
jp
pop
pop
add
add
jecxz
xchg
jp
jg
incb
je
and
add
incb
cld
ffreep
incb
enter
add
imul
sub
jge
add
xchg
jmp
add
and
and
add
adc
add
sub
lods
add
add
cmp
js
iret
inc
add
add
inc
add
sbb
fs
addr16
dec
add
incb
and
incb
rcll
jecxz
add
and
add
push
xchg
ror
add
pop
adc
add
shrl
xchg
insl
push
and
add
xchg
incl
mov
or
xchg
add
shll
add
add
incb
xchg
xchg
incb
lea
jle
iret
insl
push
add
xchg
ljmp
gs
in
push
add
push
add
inc
add
test
incb
mov
sbb
add
add
dec
add
add
incb
popf
xchg
shrb
cmpb
add
add
mov
mov
incb
popf
lock
push
incb
xor
add
popf
dec
add
incl
jmp
jnp
pop
push
incb
orl
aas
lahf
adc
add
incl
test
incb
nop
or
insl
push
aad
incl
inc
sti
data16
mov
ja
push
daa
incb
mov
or
cmpsb
rolb
add
xor
add
inc
add
repz
incl
mov
xlat
xor
add
sub
add
in
add
shrb
push
jp
sub
outsb
add
add
add
jno
leave
mov
rorb
pop
incb
jo
sar
sub
andl
add
incb
aam
add
and
add
push
incb
jle
add
add
add
into
jp
subb
and
add
jo
push
incl
push
jno
adc
add
mov
xor
add
xchg
xchg
xchg
adc
add
xor
add
cmp
incb
add
add
jg
sbb
sbb
mov
cmpsl
cltd
sub
cmp
add
jns
sub
mov
push
inc
add
push
incl
les
add
addr16
xchg
add
and
add
xlat
cmp
in
popa
jle
lock
pop
add
or
fnstcw
clc
mov
adc
add
in
add
add
dec
push
xor
or
shrb
adc
add
sub
loope
sub
incb
data16
xchg
inc
dec
pop
incb
xchg
add
incb
or
add
add
or
pop
incl
mov
add
outsl
adc
add
adc
add
incl
nop
pop
incb
mov
cmpsl
incb
push
add
add
incb
sahf
adc
add
arpl
add
incl
test
cmp
jbe
sti
jbe
add
add
fwait
lock
and
jecxz
fucomi
lock
stc
out
xchg
xlat
push
incb
cmpsl
aad
or
adc
add
ror
inc
add
js
aad
pop
incb
jo
mov
outsb
add
bound
xchg
in
xor
add
add
lcall
hlt
mov
test
add
add
jl
cmp
jo
xor
add
inc
and
add
in
incl
pop
mov
loop
mov
add
or
ficoms
cmp
nop
jo
loop
testl
mov
incl
scas
sub
inc
add
incb
xor
add
pop
ljmp
add
incb
adc
add
add
scas
dec
add
add
mov
xchg
lcall
add
xor
add
fisubrs
shrb
ficoms
add
jns
push
incl
incl
pop
mov
add
int
or
in
arpl
cmpsb
gs
incl
mov
cld
mov
incb
sbb
push
mov
cmp
lods
add
cmp
jb
rclb
incb
dec
cmp
pop
js
into
fwait
sub
incb
mov
das
push
add
cmp
out
and
dec
add
divb
add
add
cmpsl
bswap
jnp
lahf
leave
mov
or
xchg
push
or
repnz
adc
add
incb
and
add
aaa
incb
xor
add
scas
add
js
xchg
and
add
inc
add
add
stc
fwait
stc
cld
incb
test
jne
add
or
adc
add
add
rolb
mov
add
pushf
jb
mov
pop
sbb
stos
pop
add
movsb
mov
add
lds
add
adc
repz
add
incl
mov
ret
cmp
or
add
xchg
out
xor
outsl
daa
incb
lret
into
aaa
incl
ret
fisubrs
add
mov
xchg
mov
add
incl
xorb
xchg
mov
loop
sbb
incb
pop
add
mov
jle
out
mov
xchg
ds
lods
push
das
mov
add
loop
mov
fld
std
xchg
jb
int3
cmp
rorb
add
sub
addr16
mov
and
add
add
lock
lret
mov
incb
sub
test
adc
scas
aad
add
push
add
mov
js
int3
add
add
andb
sbb
call
xchg
cli
les
shll
add
movsb
imul
jp
inc
mov
jae
add
incl
adc
jo
dec
and
incb
xor
incb
incb
mul
mov
xchg
add
push
add
lock
add
incl
mov
incl
addr16
cld
jno
dec
add
push
or
sub
outsl
flds
incb
pop
incb
mov
fiadds
incb
outsb
add
mov
xor
add
inc
add
add
incl
mov
add
push
add
push
add
mov
orl
add
add
add
mov
fdivrl
add
push
add
lcall
add
incb
jnp
fldenv
loop
incl
inc
sub
mov
pop
push
cmp
add
add
in
std
ljmp
add
incb
sub
incb
push
add
ljmp
add
int3
in
add
incb
cmp
push
add
pop
add
cmc
push
add
mov
inc
mov
adcb
add
jbe
dec
jb
insl
in
subb
mov
ljmp
add
cltd
sti
ret
add
mov
add
add
ficomps
and
add
fistl
lea
mov
add
outsb
add
adc
add
bound
adc
add
mov
in
incl
stos
cmpsl
push
incb
aas
aas
sbb
add
gs
xchg
pop
add
int3
jo
mov
je
flds
mov
jge
dec
shl
xor
add
incl
popf
fidivrl
add
loop
xor
add
incl
mov
add
add
adc
incb
subl
add
and
add
adc
add
push
add
mov
add
xchg
push
add
adc
add
jnp
incb
dec
add
enter
dec
add
cwtl
icebp
cwtl
bound
or
push
incl
pop
cmp
add
mov
add
incb
jl
add
add
add
incb
xchg
inc
add
incb
jmp
or
loop
incb
test
jb
pop
add
add
fstps
outsb
add
pushf
out
incb
mov
push
xchg
jo
movsb
int
leave
cmpsl
shlb
mov
data16
out
test
add
add
sti
or
bswap
cmpsb
rcrb
mov
pop
mov
negl
sbb
int
add
add
add
inc
add
incb
in
mov
dec
xlat
xor
add
mov
jmp
incl
mov
movsb
mov
arpl
mov
cmp
fwait
daa
incb
inc
adcl
lahf
pop
add
dec
out
rcl
inc
test
add
jno
mov
push
incb
stc
jne
incb
inc
add
rcll
incl
push
add
add
xchg
repnz
aas
fdivrl
ret
mov
incb
pop
shll
jmp
add
incb
shlb
push
add
incb
iret
mov
popa
jmp
mov
popf
fwait
leave
push
incb
mov
sbb
jno
ds
add
add
mov
sar
int3
push
add
insb
add
in
xchg
push
pop
incb
outsl
mov
aad
add
add
add
ffree
mov
ljmp
dec
mov
dec
incb
xor
fdivrs
add
dec
shrl
mov
add
inc
add
fcmovnu
jo
icebp
in
and
incl
ja
sub
in
jns
add
pop
add
pop
mov
sti
in
pop
add
and
incb
rorl
add
clc
loopne
add
ljmp
lock
add
pop
pop
mov
lds
cmp
loope
add
popf
push
add
incb
and
add
xchg
xorb
sub
jg
rolb
xchg
add
add
incl
adc
add
dec
add
add
add
incb
xchg
sbb
incl
js
mov
fwait
push
incl
jae
or
push
add
add
jecxz
sbb
subb
add
sti
rorl
in
test
jnp
in
adc
add
mov
mov
pop
add
add
inc
add
add
ret
imul
icebp
mov
incb
and
add
inc
add
add
mov
add
add
mov
inc
dec
ficoms
je
ljmp
sub
inc
add
or
add
add
fcmovne
adc
add
xor
add
push
add
add
incb
jge
xchg
push
insl
hlt
jecxz
outsl
add
add
lret
mov
or
adc
add
sbb
add
and
add
incl
mov
outsl
je
push
add
incb
push
in
add
incb
mov
push
dec
add
incl
add
incl
add
incb
or
add
incb
movsl
stos
andl
std
xchg
xchg
rcrl
and
dec
call
movsl
arpl
add
add
add
mov
add
cmp
in
add
in
inc
add
push
add
add
add
loopne
shlb
add
add
add
or
ja
incb
ret
add
mov
add
push
add
stos
mov
mov
incb
rcll
jnp
xchg
orl
pop
cli
adc
add
fwait
int3
mov
add
add
add
push
add
add
mov
or
enter
lods
push
jno
add
add
mov
out
sub
test
pop
incb
inc
add
mov
rclb
mov
pushf
cli
mov
int3
imul
mov
or
incb
psubusw
mov
out
xchg
loopne
bound
cmp
pop
out
and
add
js
cmp
cmpsl
jmp
loope
int3
xchg
sub
and
xor
add
add
incl
lds
add
gs
insb
add
add
pop
cmp
aad
add
incb
hlt
dec
add
add
fidivrs
add
incb
dec
inc
add
ret
loop
ret
and
xlat
loopne
xchg
cltd
mov
test
adc
add
fs
imulb
pop
je
aas
test
add
inc
add
push
or
adc
add
movsl
movsb
sub
jle
dec
cmp
sub
ret
xlat
xchg
incb
or
add
incl
adc
add
incb
pop
bound
insl
sbb
jbe
dec
add
call
incb
jge
jns
test
out
mov
cmp
data16
test
incl
mov
xchg
outsl
pop
add
add
je
loop
add
shll
add
add
ret
cmp
add
outsl
add
enter
add
add
inc
add
mov
mov
add
cmp
test
fs
push
add
incb
enter
adcb
inc
arpl
fwait
xchg
adc
add
les
clc
divb
ret
jnp
pop
add
mov
out
movsb
mov
incb
test
incl
cmc
inc
add
incb
mov
aaa
incb
lock
ljmp
add
std
imul
mov
pusha
add
incb
lret
add
add
add
add
ret
in
pushf
jl
popf
jb
xchg
xchg
shll
add
and
add
mov
in
incl
sahf
push
push
arpl
add
repz
xchg
add
movsb
xchg
sbb
cmp
mov
jno
add
and
incb
incb
int
jl
pushf
rcrb
xchg
loop
xor
lock
add
incb
sbb
test
sbb
icebp
mov
mov
loop
clc
frstor
incl
push
add
pop
stos
gs
add
add
lahf
and
add
lods
jmp
add
incb
out
incl
push
add
fdivr
pop
cwtl
jge
cmc
mov
adc
add
mov
data16
jl
push
loopne
add
incb
stc
test
test
movsl
data16
push
incb
inc
add
incb
jge
incb
jecxz
mov
in
dec
add
mov
add
cmp
mov
sti
and
add
inc
add
enter
and
mov
add
insb
add
test
dec
add
xlat
xchg
pop
incb
xchg
mov
adc
add
incb
sbb
fcompl
dec
add
ret
xchg
cmc
cli
pop
incb
xor
mov
lcall
and
add
test
push
incb
cmp
dec
add
cs
loopne
inc
add
dec
add
enter
pop
sbb
incl
enter
jg
add
incb
xchg
je
push
adc
add
add
incb
xor
mov
add
add
add
add
add
sub
daa
incb
in
xor
add
sti
mov
adc
add
add
incl
jb
das
fiadds
incb
rolb
add
int
icebp
cmp
push
mov
xor
rorb
incb
fsubrl
add
stos
push
push
add
add
imul
incb
or
scas
movsl
loopne
dec
inc
add
add
sub
sbb
repz
incb
cmpsl
adc
add
pop
cli
xorl
pop
cli
mov
insb
add
add
push
add
incl
push
add
dec
add
incb
pushf
dec
cmp
sub
pop
ds
aas
xchg
ljmp
rolb
in
lds
mov
pop
incb
cmp
repnz
repnz
cmp
rolb
mov
incb
pusha
add
mov
sub
xor
add
jns
lret
incb
pop
sbb
cltd
cmp
stc
scas
fisubs
out
mov
add
or
pop
add
add
incb
aaa
incb
test
add
incb
aaa
incb
cmp
lret
mov
add
bound
fdivrs
dec
add
incb
out
int3
nop
cmpsl
into
fs
xor
add
incl
insl
fidivrl
incb
mov
bound
push
add
adc
add
inc
add
incb
pop
push
add
adc
add
ja
or
pop
incb
and
add
in
xchg
testl
cmp
incl
push
xlat
pop
mov
jno
lods
xchg
adc
add
incb
ret
bound
out
jns
incb
iret
sbb
fildll
add
pop
dec
add
add
mov
add
sub
stos
lock
sbb
incl
mov
insb
add
or
add
into
pop
popf
arpl
xchg
or
clc
mov
clc
dec
add
incb
ret
jle
add
add
loop
mov
cmp
je
fdivrp
das
shr
incb
call
push
rclb
jo
shrl
and
add
sbb
push
add
incb
push
lret
loope
fisubs
incl
push
add
incb
push
add
jno
incl
lahf
or
jnp
fwait
mov
xor
add
incl
aad
and
test
stos
sub
gs
add
inc
cli
cmc
test
xlat
mov
add
lret
shr
mov
cmp
sub
sahf
adc
add
incb
fisubrl
xchg
cmpsb
nop
adc
add
imul
add
cmp
lods
shll
cmpsb
sbb
mov
jmp
jl
cli
xchg
mov
incb
jl
sub
pop
loopne
incb
outsl
dec
xchg
mov
xlat
data16
pop
jp
dec
sbb
fwait
add
add
add
jnp
add
add
add
dec
add
incb
xor
add
popa
das
jo
arpl
stos
sbb
incl
cmc
insb
add
jns
and
add
add
add
xchg
xor
mov
movsb
mov
das
jecxz
movsb
add
adc
incl
fists
stos
cld
inc
pop
add
gs
add
add
int3
sub
pop
add
add
add
addb
push
loopne
fstpt
mov
sub
jmp
and
add
cmp
adc
add
xor
hlt
pop
add
popf
loop
pop
les
xchg
and
add
add
sbbl
lret
mov
imul
incl
and
add
incb
or
add
pop
add
cmpsl
add
add
jbe
rolb
incl
pop
xchg
fdivs
mov
xor
mov
xor
add
rcr
add
add
add
ljmp
cmpsb
out
inc
lret
outsb
add
aaa
incb
pop
incb
dec
add
mov
add
add
out
cwtl
push
or
pop
incb
jnp
add
cmp
push
add
incl
pop
incl
fnstcw
jbe
dec
add
inc
add
aam
add
gs
incb
fldl
add
add
in
enter
dec
test
add
ror
in
jle
data16
imul
addr16
incb
fucom
jns
lods
jmp
pop
add
incl
add
add
cld
cli
fwait
lods
out
cmp
sub
fcmovu
aaa
incl
dec
outsb
add
incb
mov
daa
incb
sbb
pop
or
xor
add
lods
sub
push
add
arpl
add
mov
add
fdivr
call
mov
incb
pop
cwtl
cmp
sbb
dec
aaa
incl
mov
incb
repnz
add
add
push
into
incb
jmp
insb
add
add
scas
adc
add
incb
add
add
add
incb
adc
add
les
add
add
imul
mov
jae
incb
sbbb
hlt
imul
add
incl
pop
add
imul
jmp
incl
fwait
or
lcall
add
add
movsl
xchg
sbb
jb
add
enter
push
xchg
adc
sahf
cwtl
or
jnp
test
pop
incl
cmc
add
add
shll
add
call
cmp
sub
add
incl
ja
cmp
add
xchg
xchg
and
add
incb
sbb
xchg
frstor
mov
adc
add
dec
add
incb
mov
cld
mov
out
xchg
cmc
int
loope
add
add
incb
mov
bound
jbe
pop
jne
int
mov
in
js
cmc
mov
inc
loope
pop
incb
mov
incb
in
or
aas
aad
mov
adc
add
int3
xchg
pop
incb
lock
std
lret
xor
add
mov
fsubrs
mov
repnz
pop
push
incb
stc
xor
add
sarb
in
add
add
leave
in
incb
add
mov
xor
add
ret
add
mov
mov
jnp
add
cmpsl
mov
xchg
in
lcall
incb
jnp
or
cld
or
xchg
dec
sub
or
pop
add
aam
incb
stc
jmp
leave
add
jb
and
add
cmp
ret
call
add
xor
add
add
incb
shlb
pop
sub
pop
add
cmp
add
add
lods
pop
add
mov
das
in
add
fstpt
add
insb
add
incb
push
mov
add
cltd
sub
mov
pusha
add
sbb
aam
mov
push
add
mov
add
incl
push
in
movsl
les
dec
add
adc
add
incb
sub
add
add
or
add
add
lods
dec
add
mov
enter
mov
incb
std
cltd
int
mov
lea
push
incb
aad
and
add
mov
scas
pop
pop
mov
sbb
std
cltd
out
inc
sbb
je
enter
xlat
ficoml
add
add
add
incb
push
imul
sub
in
push
add
mov
or
insb
add
incl
ljmp
jae
push
inc
mov
fucomp
in
xchg
pop
cmp
jo
adc
add
add
add
nop
out
xchg
and
add
test
mov
lock
loopne
add
jns
add
sub
xchg
xor
add
shr
mov
das
or
and
incb
in
add
dec
xor
add
push
add
push
incl
xor
add
and
mov
pop
add
push
cmp
inc
add
loop
mov
incl
xor
cld
scas
add
add
xlat
repz
push
add
mov
add
push
incb
xchg
int
pop
incb
lea
test
or
and
add
add
add
cmpb
mov
sbb
xchg
add
add
push
add
sbb
xlat
incl
dec
add
incb
jb
cmp
add
dec
xor
add
add
mov
sbb
andl
add
into
in
jmp
or
inc
add
add
sbb
push
add
mov
xchg
adc
add
repz
pop
incb
sub
fisubs
das
lcall
incb
push
add
idiv
stos
bound
push
incb
nop
outsb
add
cmp
mov
stos
movsl
ljmp
jl
add
add
add
bswap
or
stos
int3
jge
incb
test
add
incb
pop
add
adc
add
add
add
add
popa
orb
std
cli
xchg
out
sahf
dec
add
inc
inc
outsb
add
add
inc
add
insl
mov
add
add
nop
incl
incb
sbb
mov
incb
xchg
dec
add
leave
mov
mov
sub
jbe
rorl
sti
sub
pop
add
scas
pop
cwtl
adc
add
add
roll
add
std
bound
dec
add
xor
add
lret
add
add
fldt
push
mov
adc
add
sahf
insb
add
lea
incl
popa
test
add
add
add
mov
add
and
add
fnsave
push
add
dec
add
add
inc
dec
and
add
add
incb
add
add
jp
xchg
jecxz
xor
add
incb
jecxz
sbb
mov
imull
out
arpl
in
nop
jnp
loop
mov
imul
add
pop
push
incb
out
add
incl
adc
jbe
lock
pop
mov
fbstp
mov
add
jl
movsl
xlat
cli
loope
add
rolb
outsl
sub
cs
cmp
and
add
incb
out
inc
add
ret
imul
push
xlat
dec
add
mov
dec
add
out
dec
add
dec
push
sbb
incb
call
add
and
push
add
aam
je
and
add
jp
test
add
add
push
add
sti
repz
pop
incb
lret
add
incl
xor
add
mov
shlb
add
incb
hlt
jp
inc
fbstp
or
jp
loopne
data16
pushf
mov
cltd
inc
add
int3
addr16
fists
cltd
stos
out
sub
incb
xchg
xchg
mov
test
mov
xor
add
repz
add
incl
sti
mov
sbbb
outsb
add
xor
add
shr
add
lock
and
jge
cmc
inc
xor
add
incb
cmp
repnz
jbe
sub
enter
dec
add
incb
lret
mov
incb
repnz
add
add
test
add
insb
add
aaa
incb
mov
repz
add
sub
adc
add
incb
aaa
incl
mov
dec
stos
jle
data16
jne
incb
jle
xchg
sub
add
ret
clc
jg
cmp
push
add
scas
sub
pop
add
xchg
cmpb
ret
pop
add
arpl
sub
add
add
mov
daa
incb
mov
mov
xchg
add
add
add
incb
hlt
inc
add
dec
add
pop
inc
add
incb
stos
push
incb
int
jne
mov
add
xchg
push
add
add
add
jne
data16
js
add
add
add
lods
test
incl
jae
adc
add
push
add
bnd
cmp
pop
incb
movsb
aaa
incb
out
incb
or
cmpsb
stos
fists
add
add
dec
add
add
push
push
pop
add
push
add
int3
or
push
add
incb
cmp
push
incb
adc
add
in
ljmp
pop
add
or
add
incb
xchg
fnsave
incb
push
incl
clc
rorb
incb
and
imul
mov
and
add
and
shl
shr
push
add
add
sub
xor
xor
add
jg
aas
out
add
incl
mul
inc
out
daa
incl
inc
fistpll
sub
push
add
incb
inc
add
push
incb
dec
sub
xchg
inc
add
or
push
add
push
xchg
xchg
mov
add
add
stos
mov
call
leave
mov
call
incl
xchg
lcall
stos
stos
cmp
inc
add
mov
popf
arpl
incb
or
add
add
stos
ja
add
add
xor
add
add
add
cmpsb
or
push
or
pop
push
incb
pusha
add
fldt
incb
xor
add
scas
mov
out
jno
pop
push
incl
mov
stos
mov
loop
dec
mov
and
add
add
cld
and
add
jg
mov
add
and
add
adc
add
incb
push
add
incb
rclb
mov
push
incb
stc
gs
shrb
aad
and
add
add
add
incb
xchg
int3
cli
mov
inc
add
add
incb
xor
add
incl
jbe
mov
mov
out
xchg
mov
xlat
arpl
add
fldl2t
push
scas
lahf
xor
add
add
loope
adc
add
mov
and
add
incl
mull
mov
mov
sub
xchg
scas
sbb
incl
arpl
push
add
add
add
incb
pop
std
repnz
xchg
pop
add
mov
dec
add
lods
inc
pop
add
add
add
jnp
add
incl
inc
add
pop
mov
push
add
incl
dec
add
incl
out
xchg
push
mov
xchg
incl
jecxz
mov
incl
bound
push
add
add
inc
add
addr16
sub
dec
sahf
sub
add
test
add
add
sub
cmpsl
aaa
incb
push
add
incb
cmp
add
jae
lods
int3
sahf
jb
adc
add
add
add
add
cli
cmp
fiaddl
incb
cli
ret
mov
mov
js
inc
add
incl
mov
incb
pop
jg
testl
inc
add
dec
add
shll
incb
dec
pop
xchg
dec
pop
incb
das
inc
fisubrs
add
add
incb
ficompl
fucomi
out
cld
cmp
adc
add
iret
adc
mov
andl
mov
mov
add
incl
insb
add
xor
add
ret
out
movsl
push
inc
add
add
incb
jb
mov
mov
incb
sub
xchg
jp
faddl
test
adc
incl
or
into
xor
add
mov
push
call
sbb
push
add
xor
add
add
fidivrl
movsl
jmp
mov
mov
add
add
incb
push
add
mov
add
cmp
out
add
add
incl
daa
incb
xchg
shlb
add
mov
cmpsb
jmp
incb
cltd
cmp
mov
add
sbb
inc
add
add
incb
sub
jns
mov
incb
mov
sbb
or
repnz
add
jb
dec
popa
aad
addb
mov
sahf
mov
ret
add
dec
sti
mov
xchg
bound
push
add
sbb
sub
pushf
dec
add
add
loopne
insb
add
mov
fidivrs
add
cmpsb
pop
incb
popf
xchg
xchg
divl
jne
loope
gs
push
add
adc
add
sub
and
add
incl
and
mov
mov
inc
add
lcall
insb
add
movsb
arpl
scas
jo
movsb
popf
xchg
add
push
add
add
fcoml
inc
add
add
adc
sbb
or
fisubs
insl
scas
data16
incb
popf
scas
jmp
add
incb
dec
add
incl
push
sub
cmpsb
leave
loopne
sarl
push
add
add
pop
incb
cmp
push
dec
stos
xchg
jns
jl
cmc
push
repnz
fildl
jecxz
mov
gs
sarb
mov
add
add
pop
incb
in
jae
add
lock
out
add
icebp
inc
cld
lods
sub
incb
loop
lds
add
push
incb
ds
cmc
jae
pop
popf
sbb
add
add
mov
adc
incl
dec
add
push
add
mov
incb
pop
add
int
push
incb
mov
add
add
stos
pushf
pop
add
popa
push
mov
in
incb
fistpl
mov
add
or
pusha
add
and
add
sub
cwtl
inc
add
incb
mov
fcoml
mov
adc
roll
add
xchg
mov
add
mov
add
add
sbb
insb
add
add
add
or
add
mov
pop
add
incl
insl
in
sbb
cltd
adcb
stc
and
add
mov
incb
js
lds
incl
iret
adc
add
add
incl
pop
stos
sbb
add
faddl
incb
mov
xchg
mov
add
jae
incb
sahf
jmp
leave
pusha
add
dec
cmp
out
outsl
test
pop
push
add
cmp
sub
pop
add
pop
iret
loop
icebp
xor
mov
fisttpl
push
add
or
adc
add
add
pop
add
incb
add
add
add
inc
add
incb
push
add
add
ret
push
incb
js
clc
loop
in
sub
xchg
and
add
incb
sti
test
cmp
negb
add
add
add
test
add
pop
add
mov
int3
cmp
jmp
stc
js
adc
add
addr16
stc
pop
mov
add
push
add
jno
pusha
add
push
jge
incb
xor
add
xor
add
fcmovb
mov
incb
pushf
xchg
mov
jmp
outsl
and
add
sub
pop
add
out
push
add
and
pop
add
fadd
imul
pop
add
jns
andb
stos
jo
fsubr
or
and
add
add
incl
movsl
adc
mov
pusha
add
sahf
xchg
add
incb
pop
add
cld
inc
mov
cli
sti
in
xchg
mov
adc
add
pusha
add
mov
dec
add
lock
add
add
add
cltd
xor
add
aad
and
add
icebp
inc
add
stos
js
lea
jo
stc
cld
jns
incb
gs
add
lods
int
and
add
pop
fcompl
add
add
pop
add
sbb
incl
push
add
add
mov
mov
data16
loopne
sti
cld
inc
add
add
aam
rcll
add
fwait
rcrb
add
lock
jne
adc
add
adc
add
cmp
imull
mov
or
add
jp
adc
add
rorl
gs
fistpll
push
add
mov
xor
add
incb
add
pop
add
stc
stos
test
mov
cltd
mov
outsb
add
push
mov
xchg
sti
mov
add
icebp
dec
add
mov
add
ret
cmpl
incl
jle
cmp
popa
imul
incb
sahf
jmp
pop
incb
stos
imul
cmp
sub
mov
add
sti
cmp
dec
add
incl
in
insb
add
incl
in
add
add
mov
push
add
and
add
incb
lcall
add
push
mov
add
repnz
xor
add
add
pop
incb
xor
xor
add
sub
add
push
add
data16
push
das
or
add
adc
add
sahf
xchg
cmp
inc
mov
push
add
add
leave
fadd
pushf
push
incb
cmp
call
mov
push
incb
lahf
xchg
je
and
add
incb
loope
mov
add
stc
jle
jg
xor
add
xor
add
incb
mov
cmp
not
fldt
push
cmpsl
ljmp
sti
scas
das
xor
add
add
add
or
jmp
and
add
sahf
inc
add
incb
mov
int3
xchg
int3
adc
add
jne
mov
incl
ret
test
incb
add
add
in
pushf
cmpl
xchg
add
add
incl
add
add
mov
mov
incb
cmp
xchg
xchg
jns
mov
add
incl
push
add
pop
movsb
sbb
add
incb
inc
bound
add
add
push
add
add
fsubs
incl
cmp
mov
add
jmp
aas
jmp
push
add
dec
add
add
test
xchg
adc
add
out
daa
incl
sub
mov
insl
dec
xchg
shlb
incb
inc
add
iret
fldl
cmpsb
or
jle
push
sbb
ret
out
adc
add
sub
ret
int3
shlb
mov
add
incb
roll
imul
incb
mov
add
add
mov
inc
pop
add
add
add
cmp
inc
add
add
out
out
insb
add
jb
xchg
incb
pop
add
mov
push
incl
and
add
incb
fdivp
push
add
iret
cmp
fwait
int
adc
add
or
xor
add
incb
xor
add
add
mov
das
lret
mov
incb
mov
jb
adc
incb
insl
or
lods
sub
xchg
mov
add
and
add
inc
add
add
incb
and
add
sbb
leave
cmpsb
pop
add
imul
cld
add
add
add
add
popf
out
mov
icebp
inc
pop
add
in
and
add
fdivs
rol
fnstsw
clc
mov
stc
xchg
inc
jl
jmp
add
pop
incl
sbb
add
adc
add
or
incb
and
add
cmp
or
imul
jo
xacquire
xchg
mov
lahf
scas
fstl
add
adc
add
outsl
ljmp
sbb
repnz
add
mov
fiaddl
sub
xchg
lea
loope
pushf
push
sub
sbb
add
mov
mov
in
div
cli
sub
cmc
mov
xorl
inc
mov
add
add
dec
sarb
xlat
xchg
add
add
xor
add
addr16
mov
incb
push
xchg
and
add
sub
add
add
cltd
fldcw
push
add
pop
test
stos
add
add
lea
incb
mov
add
iret
pop
and
add
or
incl
int3
mov
repz
or
lods
cmp
gs
add
add
pop
incb
lods
mov
loopne
add
add
dec
add
add
out
adc
add
lds
add
and
add
out
push
add
add
add
jge
insb
add
fdiv
and
add
xchg
adc
add
add
xor
add
incb
ljmp
leave
cmp
sub
add
add
or
movsb
sbb
jae
stos
mov
incb
out
stc
and
add
sub
add
add
cs
add
add
incl
loope
lds
pop
fildl
outsl
mulb
inc
add
ret
enter
add
add
jge
incb
aas
or
jmp
xchg
idivb
popf
inc
add
cmpl
jmp
lahf
push
leave
pop
add
mov
add
insl
mov
test
add
add
les
incb
push
ljmp
cmpsl
outsl
fcompl
das
pop
daa
incl
dec
add
lcall
mov
add
add
incb
inc
xlat
out
xchg
iret
fnstsw
mov
inc
add
mov
hlt
pusha
add
jge
pop
add
add
add
sub
arpl
xchg
icebp
push
sbb
movsl
xchg
push
add
lahf
adc
add
gs
pop
dec
add
insb
add
shll
incb
xor
add
xchg
adc
add
adc
imul
jb
dec
add
add
sbb
xor
add
and
dec
jb
pop
incb
repz
cltd
scas
sub
incb
sbb
dec
add
add
psubsw
add
add
xor
add
incl
xlat
mov
adc
add
into
daa
incb
lahf
cmp
push
add
int3
stos
imul
mov
lods
scas
xor
add
imul
rcrb
incb
test
cmpsl
fidivrs
dec
cmpsb
mulb
xchg
add
add
mov
pop
int
xor
add
mov
cs
xor
add
sbb
push
xchg
incl
mov
into
mov
incb
ret
cwtl
xor
add
incl
bound
out
ror
loope
incl
xchg
insl
xchg
inc
add
out
fdivrl
incb
lods
incb
outsb
add
cmc
stos
adc
add
aaa
incb
add
add
call
imul
push
incb
mov
enter
incl
ja
daa
incb
pop
add
add
add
jp
push
incb
xor
add
add
xchg
sbb
fists
incb
jge
std
sbb
lock
subl
add
add
add
add
add
incl
dec
ret
data16
lcall
cwtl
xchg
pop
incb
jmp
add
incb
addr16
nop
popa
jne
jne
add
incb
or
icebp
les
add
cld
sahf
out
call
stos
sub
dec
and
add
add
add
push
add
add
add
mov
incb
clc
testl
stc
add
add
mov
mov
in
repz
add
xor
add
idiv
in
ret
frstor
mov
js
cmp
dec
add
sub
fwait
inc
add
xor
ffree
mov
add
cmp
jo
mov
cmp
aaa
incb
add
add
add
and
add
push
andl
add
fbstp
fldcw
add
add
sti
mov
mov
add
jb
pop
andl
add
mov
in
jns
ja
incb
dec
add
add
test
incb
pop
add
add
test
cmp
sbb
lret
add
incb
mov
mov
int3
mov
lahf
cli
cmp
jae
add
incb
fcompl
cltd
outsb
add
add
xor
add
add
incb
ljmp
fwait
mov
std
test
jle
or
push
mov
sub
jmp
add
test
add
inc
add
pusha
add
incb
inc
push
shl
sub
jnp
add
not
jp
mov
mov
incb
sub
mov
aam
incb
sub
jmp
add
mov
push
add
jno
test
not
mov
repz
mov
int
incl
rcl
test
add
add
add
subl
lock
imul
adc
add
incb
rorb
incb
imul
stc
ftst
mov
incb
adc
add
incb
lcall
pop
add
std
fisubl
incb
bound
push
jg
add
out
pusha
add
incb
or
add
add
add
add
jmp
jb
jp
sub
adc
in
enter
adc
add
lret
lret
push
add
add
sub
mov
jo
cmpsb
icebp
pop
sbb
pusha
add
cmp
incb
xor
add
add
std
xchg
jae
xor
add
andb
loop
iret
lcall
incl
mov
frstor
or
fst
mov
test
sbb
mov
and
add
add
add
pop
incl
mov
inc
add
sbb
icebp
add
add
sub
incb
lds
in
add
js
push
loopne
mov
incb
repnz
add
inc
add
add
test
add
jmp
lea
push
push
push
incl
incl
ror
add
loope
or
push
mov
mov
data16
mov
add
popa
out
sbb
rorb
incb
jne
sub
sbb
shll
rcrl
jb
movswl
stc
or
ja
incb
cmpsl
or
das
ficoms
jp
rcll
sbb
aad
cmp
add
add
sub
pop
mov
cmp
popf
out
andl
pushf
leave
or
dec
add
push
incb
incb
nop
incb
rorb
ret
and
rol
pusha
add
popf
jns
sbb
mov
rcr
push
add
dec
cmp
out
sti
sub
add
cmp
jecxz
xchg
ljmp
js
mov
add
js
insl
ljmp
adc
add
mov
or
lods
and
add
add
add
outsb
add
dec
test
dec
add
ret
add
add
lahf
movsb
cmp
xor
add
add
add
incb
stos
mov
jle
cwtl
hlt
add
add
les
add
add
add
cmpl
add
incb
pop
incl
xor
add
push
out
incb
aad
incb
pop
outsl
pop
add
push
add
incb
or
inc
add
incb
in
mov
incl
int3
and
add
add
lock
add
hlt
and
add
add
add
lock
incb
daa
incb
sub
aaa
incb
stos
jmp
push
incb
xchg
outsl
sub
dec
add
jbe
lret
mov
fwait
and
add
lahf
hlt
fisttps
pop
mov
gs
xor
add
pop
mov
inc
add
cmp
jo
rcll
incb
js
cmpsb
fsubl
jno
sarb
xchg
testb
shlb
in
cmp
lods
sub
popa
adc
add
add
xchg
inc
add
push
adcb
jo
pop
fldt
and
xchg
jne
shlb
incl
movsl
mov
pop
add
add
mov
inc
add
dec
add
add
test
cmc
lods
mov
mov
incb
sub
adc
cld
stos
jmp
das
push
add
in
fists
add
inc
or
dec
out
push
incb
test
incb
adcb
add
pusha
add
lcall
iret
jle
fsubrp
sub
add
incb
xchg
incb
xchg
xor
add
xor
add
add
dec
add
int3
push
add
and
add
stos
enter
mov
add
add
aad
pop
add
add
cmp
add
jae
incl
jns
cmp
lods
jns
les
inc
add
std
xchg
jg
incb
shlb
sub
sub
add
add
add
add
or
incl
aad
cmpsl
incb
dec
add
push
ffree
fucomp
mov
add
cmc
int3
sub
lods
jae
adc
add
add
mov
cmp
push
add
add
mov
add
add
add
add
incl
inc
add
movsb
rcr
dec
add
pslld
lock
xor
add
bound
icebp
lds
add
fwait
cmp
add
iret
inc
mov
add
incb
pushf
dec
jo
popf
push
test
aad
mov
add
pushf
rcrl
push
add
fcmovb
adcl
push
add
add
incb
push
add
outsl
inc
add
incb
dec
cmp
aad
cmp
clc
inc
ret
pop
add
gs
ja
add
add
incb
or
mov
add
rorb
mov
lret
mov
add
jmp
incb
in
lret
inc
add
add
dec
add
xor
sbb
add
lods
mov
cmc
outsb
add
aad
add
incb
add
add
bound
inc
push
dec
add
xchg
mov
test
addr16
push
xchg
cmp
add
or
incb
cmpsl
shll
dec
add
incb
les
incb
cmp
aam
iret
andb
add
mov
test
mov
inc
add
jbe
lods
adc
add
or
dec
leave
stos
mov
mulb
idivl
sbb
add
adc
add
jecxz
add
incl
add
add
fcmovb
jno
mov
pop
stc
scas
pop
incl
lock
add
and
add
incb
test
pop
incl
fs
pop
sahf
lods
and
add
xchg
mov
mov
fnsave
incb
cwtl
xor
add
incb
push
addr16
xchg
enter
add
in
add
loope
incl
push
mov
xlat
hlt
push
dec
inc
add
incl
pop
xchg
lods
fs
jno
lods
call
idiv
std
mov
jmp
mov
aam
in
imul
repnz
add
add
dec
int3
pushf
add
add
inc
xchg
loopne
mov
incb
jl
adc
add
incb
icebp
lods
sbb
sub
pop
incb
sub
scas
int
std
and
add
incl
mov
incl
lcall
or
mov
jg
and
add
inc
sub
aas
dec
adc
add
add
in
sbb
add
add
sub
xor
add
add
mov
xchg
scas
mov
test
incb
scas
push
add
js
push
add
incb
and
add
jmp
incb
repz
test
mov
add
add
add
incb
and
add
jl
jg
incb
repnz
jnp
ret
cmc
pop
sub
inc
add
add
incb
dec
push
scas
push
add
and
hlt
adc
add
inc
add
mov
mov
iret
incl
cmp
incb
pop
incb
xor
add
jnp
xor
and
add
add
incb
inc
daa
incb
pop
add
dec
test
add
sbb
data16
incb
nop
stc
pop
in
add
popa
inc
add
add
add
shl
ja
add
incb
out
incb
test
incl
and
incb
mov
add
pop
xlat
popa
and
add
incb
cmp
sti
mov
in
inc
add
incl
inc
add
incb
dec
add
dec
add
adc
add
outsl
add
add
jnp
jbe
sub
dec
add
add
cmpsl
shlb
add
and
fwait
jo
add
incb
mov
repnz
add
jbe
gs
jb
lods
push
add
fstl
incb
push
pushf
push
add
add
dec
dec
add
paddq
add
pusha
add
int
movsl
movsl
mov
lcall
bound
adc
mov
incb
popf
xchg
mov
iret
mov
add
dec
push
incb
jnp
incl
jnp
xchg
pushf
aas
fimuls
add
incb
mov
test
aam
add
add
inc
add
jne
cmp
add
ret
add
shrl
mov
mov
mov
jb
add
add
push
add
arpl
push
add
out
jmp
push
jmp
add
add
add
jge
lahf
add
sub
add
pop
lods
test
add
push
incb
xchg
neg
xchg
orb
scas
test
mov
add
lcall
mov
push
add
add
daa
incb
sub
pop
mov
scas
sbb
push
xchg
incb
bound
roll
incb
stos
jne
jae
incl
and
add
jne
incb
push
sahf
sar
cld
cltd
dec
repz
add
rol
push
add
incl
mov
add
add
incl
dec
add
sbbb
dec
cmpl
mov
icebp
adc
add
insb
add
xor
add
pop
cltd
jp
mov
or
testb
aad
clc
int3
or
js
push
add
jbe
cld
repz
lea
lcall
dec
add
dec
add
sub
mov
push
add
ds
pop
and
add
int
incl
divb
adc
or
adc
add
xor
insl
jle
lods
jl
das
and
add
jnp
mov
add
add
push
add
fdivrs
add
dec
fnstsw
add
mov
std
hlt
mov
mov
fsubs
inc
testl
add
ja
mov
incb
das
xor
dec
add
xchg
sbb
sbb
cmp
sub
inc
add
mov
in
fucomp
push
add
insl
idivb
inc
cmpsb
push
xor
add
mov
push
dec
add
add
add
add
orb
mov
xchg
push
add
or
sbb
add
inc
add
jo
rcrb
add
add
inc
add
aas
pop
mov
add
repz
lds
subl
xchg
dec
add
cmp
repnz
add
mov
add
aad
pushf
fistps
pushf
pusha
add
xor
add
je
lods
movsl
mov
mov
xchg
dec
aaa
incb
jp
stc
xchg
or
loop
xchg
cmp
fwait
mov
add
pop
add
data16
add
pop
popf
pop
add
scas
bound
jno
push
add
lods
add
add
push
adc
add
add
jno
addr16
xor
add
incb
shlb
add
add
pusha
add
sbb
rclb
mov
lock
dec
out
mov
add
pop
clc
xchg
dec
add
dec
add
xchg
add
add
incl
addb
xchg
and
add
xor
add
lock
adc
add
add
add
sbb
xor
add
mov
dec
sahf
push
pushf
insl
mov
loopne
fs
add
add
cmp
shlb
inc
add
lea
xor
add
in
push
insl
mov
dec
icebp
fld
ret
rolb
add
incb
movsl
push
add
fldt
add
add
jp
add
add
add
mov
add
add
ds
xchg
out
incl
xchg
xchg
fldcw
pop
xchg
cmp
incl
cmp
pop
add
in
in
add
cmp
sub
add
mov
popf
jecxz
push
popa
inc
add
mov
jge
cmpsb
fldt
pop
push
pop
add
imul
jbe
inc
aas
adc
add
out
sbbl
pop
outsb
add
mov
add
incb
fwait
dec
add
incb
pop
add
incb
add
ret
xchg
test
mov
out
aad
imul
add
dec
add
xor
add
inc
add
xchg
sti
scas
cmpsl
inc
mov
incb
ljmp
int
adc
add
and
incb
subl
adc
add
mov
incb
dec
add
incb
sbb
jbe
pusha
add
das
mulb
cmp
mov
fcmovnbe
xor
add
xor
add
add
incb
jo
push
push
incl
scas
xlat
jle
inc
sar
mov
cwtl
or
and
add
sub
cmp
test
add
mov
sbb
pop
xchg
movsb
jb
xlat
cmpsb
stos
adc
add
add
add
incb
xchg
sbb
out
fsts
pop
mov
add
cmc
in
mov
sbb
rcll
add
outsl
xchg
push
incb
xor
int3
in
out
or
arpl
add
sub
add
add
cmpsl
popf
or
add
in
call
dec
ret
cmp
sbb
bnd
movsb
mov
add
scas
push
add
xchg
sub
sbb
cwtl
jecxz
les
mov
mov
add
dec
add
sub
rcrl
add
pop
add
mov
mov
push
mov
mov
adc
add
push
incb
movsl
lds
add
mov
fistpl
add
add
cmp
int3
insl
in
out
incb
jo
or
shrb
add
add
daa
incb
push
aaa
incb
push
add
add
lcall
sub
loopne
add
in
mov
pushf
xor
add
mov
test
add
imul
incb
adc
add
bound
push
mov
lea
pop
cmp
and
add
rclb
aam
incb
adc
add
xchg
add
into
int
lods
and
add
add
and
add
inc
add
add
mov
add
lret
pushf
jne
cmp
push
add
sub
incb
pop
ljmp
add
push
add
sub
cmp
mov
add
add
mov
jno
push
push
push
add
fisttpll
add
mov
outsb
add
loopne
pop
dec
pop
add
lcall
incb
shll
incb
xchg
add
les
add
dec
jb
jno
icebp
outsl
push
incb
neg
inc
add
add
add
add
ja
incl
jg
iret
push
add
int3
jne
incl
inc
call
add
or
clc
dec
add
loope
cmp
mov
faddp
xchg
incb
imul
sbbl
incb
fldt
pop
add
add
test
add
incb
mov
or
lret
incb
inc
add
incl
sahf
cmp
and
into
mov
mov
incb
andl
add
popf
mov
outsl
cmc
and
add
aam
incl
jb
jnp
std
mov
add
add
add
gs
sub
in
icebp
push
add
add
loope
xchg
enter
jmp
incb
add
add
inc
add
xor
add
incb
xchg
fwait
addr16
hlt
je
mov
adc
add
shl
adc
add
js
lcall
mov
aaa
incb
lods
int3
mov
call
add
sbb
pop
incb
dec
add
mov
incb
adc
incb
xchg
add
add
xchg
incb
cmp
incb
and
add
mov
clc
mov
fildll
sbb
push
add
incb
adcb
incb
xor
add
aaa
incl
jo
scas
mov
add
cli
mov
incl
les
fsubr
cld
das
inc
insl
xchg
and
add
jecxz
mov
add
lret
add
ret
cwtl
cmp
mov
add
add
lret
mov
add
insb
add
dec
add
incb
ret
and
add
add
mov
hlt
test
xchg
push
add
and
add
hlt
imul
cmp
add
popf
push
incb
and
add
punpckhwd
int
mov
incb
pop
stos
xor
add
add
aas
adc
add
adc
add
or
mov
addb
add
add
add
push
mov
movsb
or
js
insb
add
shrb
outsl
mov
mov
incb
mov
add
add
push
add
jae
inc
add
lds
add
pop
add
rcl
dec
add
mov
nop
add
adc
add
lods
ficomps
pop
add
lahf
lahf
dec
sub
shl
scas
xchg
add
fldt
jmp
or
add
pop
mov
lods
std
rcll
fsubs
xchg
lahf
mov
mov
xor
add
inc
das
pop
nop
out
jnp
incb
sub
pop
add
incb
mov
push
mov
incb
mov
std
outsl
dec
add
incb
jmp
pop
add
outsl
fcoml
sub
loopne
test
out
addl
cli
cmpsl
dec
icebp
add
add
incb
test
add
and
add
clc
adcb
repz
arpl
push
add
call
push
add
incb
imulb
enter
test
dec
add
ja
dec
mov
out
add
fstp
stc
mov
testb
add
add
xor
add
and
add
inc
add
test
push
add
mov
hlt
mov
add
xchg
mov
incb
sarl
incb
icebp
and
incb
xchg
jo
scas
test
add
add
cmc
push
incl
in
mov
mov
inc
mov
mov
add
cmp
test
shlb
jae
push
sbb
mov
add
incb
test
incb
sub
outsb
add
and
add
jmp
imul
aam
incl
cwtl
out
sbb
sub
ret
test
fistps
jle
nop
in
mov
mov
add
add
mov
add
incl
out
daa
incl
iret
dec
push
add
test
push
add
int
jno
add
jnp
addl
ljmp
push
out
iret
rcrl
das
insb
add
incl
inc
add
jo
sti
sub
shll
incb
loop
incb
push
add
add
mov
ror
pop
incb
mov
incl
or
sarb
iret
cmc
push
pusha
add
jl
push
incb
insb
add
add
mov
adc
add
sub
lahf
pop
add
cmp
leave
xchg
cld
jg
ret
push
shr
push
in
xor
add
push
sub
pop
add
test
mov
add
pop
fiaddl
incb
mov
dec
add
inc
add
add
jle
out
lret
adc
add
incb
xchg
add
adc
add
jns
xchg
enter
add
cmc
stos
or
add
incl
push
test
adc
push
add
incl
mov
jb
mov
incl
push
lret
xor
add
add
pushf
and
add
inc
mov
mov
push
call
or
jnp
jmp
add
add
add
add
out
add
add
in
incl
mov
mov
dec
add
sbb
incb
xchg
pop
incb
aam
pop
incb
and
add
jns
and
add
pop
add
pop
and
add
iret
pop
incb
in
shlb
add
incb
js
daa
incb
lock
xchg
into
xchg
mov
push
add
std
outsb
add
incb
pop
jbe
cli
cmp
sub
inc
dec
popf
incb
test
incb
push
incl
imul
sub
push
add
in
rcrb
inc
mov
add
push
sub
incl
pop
dec
and
add
mov
add
std
inc
aad
add
mov
repnz
incl
int
push
addl
jbe
lods
sti
insb
add
add
add
incb
out
add
add
mov
incb
jne
or
incb
jnp
add
cltd
out
out
lahf
arpl
and
add
incb
frstor
add
cmp
outsb
add
xchg
add
add
push
add
inc
add
add
add
adc
add
mov
fnstenv
xchg
cli
jno
add
adc
dec
and
add
adc
add
incb
les
add
add
test
cltd
ja
cmp
clc
mov
mov
cmp
jno
mov
sbb
add
incb
dec
repnz
pop
add
add
add
je
in
dec
add
add
leave
pop
add
add
cmp
fisttpll
aam
lods
pop
in
add
incl
bound
sarb
mov
jmp
pop
ret
adc
sti
pop
out
jge
push
scas
int3
and
add
incl
xchg
imul
inc
add
out
dec
add
daa
incl
lea
das
mov
outsl
push
clc
mov
into
mov
arpl
rcrl
cmp
add
incl
inc
mov
add
add
sti
scas
cli
push
ja
pop
jae
sbb
push
daa
incb
xlat
movsl
push
incl
sbb
and
add
inc
sub
ja
incb
popa
add
add
pop
add
xlat
or
incb
loope
add
push
add
jne
xchg
ja
rorb
dec
push
rcl
mov
fucom
jl
xor
add
incb
lret
and
add
add
adc
add
xchg
leave
scas
sarb
out
sbb
shr
xor
add
aaa
incb
insb
add
add
mov
testl
data16
ja
incb
movsl
push
add
add
incb
scas
notl
add
lods
popa
daa
incb
mov
mov
sub
rcr
js
stos
mov
add
rorl
xlat
insl
cmpsb
lret
popf
mov
faddl
add
incb
dec
add
mov
add
lock
enter
xchg
cli
ja
lcall
fadds
mov
and
aam
add
incb
stc
loope
incl
and
add
std
xchg
inc
add
add
incb
jp
fdivl
incl
sub
fstpt
incb
adc
add
insl
iret
std
cli
mov
scas
stos
testl
incb
mov
add
rolb
cld
in
add
jne
out
add
incb
xchg
mov
pushf
lret
pop
mov
dec
or
pop
add
lcall
add
shll
or
mov
incb
clc
aas
xchg
je
call
incb
fisttpll
add
jne
jp
addb
add
dec
add
add
hlt
and
loope
add
incb
jmp
sbb
push
incb
mov
mov
add
or
add
add
mov
movsb
jmp
add
sbb
incb
sbb
cmp
xorb
add
add
pushf
push
add
rol
js
cmp
lods
mov
mov
add
ds
mov
add
push
add
fldl
jo
incb
cmpsl
scas
lods
loop
add
fdivr
out
dec
add
inc
adc
add
sahf
cmp
inc
add
orb
cmpsl
sbb
mov
addl
add
cmc
fisubrl
insb
add
pop
jp
mov
loop
add
mov
incb
add
add
and
add
lods
lret
add
lahf
test
dec
xor
jl
int
incb
test
add
mov
or
pop
shrl
dec
mov
sbb
shrl
pop
dec
add
add
scas
push
jbe
push
mov
out
push
add
add
lods
sub
cmc
fstpl
mov
incb
pop
jbe
mov
jnp
or
add
add
add
add
add
add
popl
add
and
add
mov
or
xor
add
add
add
add
iret
jmp
add
add
sub
repnz
mov
outsl
cmp
mov
add
incl
movsb
out
divl
fimuls
ret
add
incb
jns
mov
jnp
add
femms
add
push
mov
jae
xor
add
add
add
movsl
cmpsb
jp
mov
xor
add
add
and
add
into
mov
xor
add
daa
incb
sub
stc
mov
add
push
add
and
add
mov
incb
ret
gs
add
add
xchg
pusha
add
xchg
imul
bound
lret
mov
push
incb
cmp
mov
adc
add
add
pop
add
cmc
dec
xchg
arpl
out
fistps
dec
or
mov
adc
add
add
or
mov
add
inc
xlat
push
add
adc
add
jbe
inc
inc
add
add
incl
sub
pcmpgtw
add
movsl
adc
cmp
sub
jg
jb
mov
add
add
pop
add
add
add
cmp
lret
or
sbb
cld
or
hlt
inc
add
incb
push
xor
add
incb
mov
incb
repnz
out
aam
add
dec
and
add
movsb
leave
pop
add
sbb
and
iret
cld
xor
rcl
stos
insb
add
test
add
add
add
add
add
in
in
sbb
mov
add
add
ret
add
add
add
call
push
push
add
cmpsb
stc
sub
dec
je
inc
or
pop
roll
incb
add
jno
jnp
xchg
xchg
jns
mov
add
xchg
cmpsl
aam
int
incl
ljmp
div
movsl
bound
sbb
data16
add
subb
incl
xchg
xor
add
add
add
leave
push
movsl
fwait
bound
jecxz
pop
pop
add
xchg
adc
add
incb
int3
mov
jl
and
add
jle
or
insl
idivb
int3
push
incl
sub
cmc
movsb
xor
and
add
incb
xchg
insb
add
add
mov
add
cmpb
out
cld
mov
into
iret
mov
sub
jp
xchg
xor
add
faddl
lods
cwtl
xchg
imul
add
incb
pop
incb
xor
add
xchg
incb
push
adcl
icebp
hlt
or
scas
dec
add
mov
or
and
add
add
addb
xor
add
xchg
add
add
movsb
ljmp
add
movsb
leave
cmp
sub
aaa
incb
in
add
pop
cmp
mov
add
or
lods
mov
add
shll
mov
or
add
add
dec
sub
push
or
or
pop
add
cmp
pop
add
scas
out
nop
fcomps
add
add
hlt
fistps
add
incb
dec
add
or
imul
dec
aam
sub
repz
js
jnp
cmp
add
add
push
cmpb
add
incb
xlat
or
mov
add
ljmp
in
pop
or
sahf
jno
add
add
add
imul
incb
out
adc
gs
dec
cltd
cmp
jb
out
add
aas
fisubl
incb
mov
int3
pop
adc
fadds
incb
push
incb
jno
fsubl
incb
inc
aad
scas
pushf
jae
mov
or
add
add
incl
mov
cmp
scas
jo
sub
idivb
sarb
call
gs
add
data16
or
add
add
incb
inc
add
testl
mov
add
add
adc
add
add
clc
jecxz
fdivrs
add
incb
test
test
add
add
jae
inc
mov
incl
inc
sbb
fnstsw
incb
add
add
stos
cmp
incl
js
ret
out
enter
add
cld
mov
add
and
int
dec
aas
mov
add
sub
sub
stc
test
jp
add
incl
jae
ljmp
mov
enter
test
jnp
xor
add
xor
add
leave
mov
bound
aad
add
incb
rcrl
incb
js
addr16
fistps
shll
jno
incb
aam
jo
and
mov
push
mov
incb
stos
das
mov
aaa
incb
mov
jge
lret
push
add
incb
xor
add
call
insb
add
xor
incb
mov
in
sub
push
add
cmpsl
cmp
inc
add
rep
add
adc
add
imul
jle
or
jg
shlb
incl
cmp
add
rorb
incb
xchg
add
add
incb
inc
test
add
push
add
add
and
add
incb
pop
incb
mov
outsb
add
fucomi
rcrl
jne
dec
push
popf
or
aaa
incl
xchg
lcall
aas
out
jl
add
push
jecxz
iret
frstor
add
into
dec
and
add
and
add
dec
push
add
add
les
add
xor
add
push
adc
int3
ja
incb
mov
mov
shlb
lods
adc
add
xchg
mov
xor
add
lods
inc
add
cmp
push
add
pop
add
incb
mov
jle
and
add
inc
incb
mov
incb
push
adcb
or
push
xchg
xchg
jno
sbb
gs
add
incb
xor
xchg
pop
add
lcall
add
incb
aaa
incb
adc
add
aas
xor
add
jne
add
incl
pop
add
add
incb
add
mov
incb
lods
addl
incb
stc
cmpsb
or
mov
jg
add
add
aas
insb
add
push
add
and
add
lcall
lea
subl
add
add
les
incb
mov
pop
sarb
add
push
mov
sub
in
lret
sub
mov
incb
out
rorl
fiadds
incl
nop
test
mov
incl
hlt
xchg
mov
mov
aas
xchg
adc
dec
sbb
incb
fbstp
in
add
stos
inc
add
lock
add
mov
mov
jle
mov
cmp
push
add
incb
pop
incb
movsb
shl
push
incb
clc
jo
cmp
mov
mov
add
incl
cmp
incb
sti
data16
subl
bound
nop
push
xor
xchg
and
add
loopne
hlt
inc
inc
add
cmp
push
in
sub
xchg
push
add
jne
mov
add
incb
out
lock
add
cwtl
push
jmp
jne
incb
and
add
clc
scas
jae
mov
add
push
jae
add
add
out
add
incb
pop
mov
add
repnz
mov
xchg
xchg
adc
incb
lret
mov
incb
mov
mov
leave
cli
push
xchg
adc
add
incb
fstps
add
sub
push
add
inc
out
pushf
inc
add
stc
cmpl
add
imul
add
mov
add
mov
loope
stos
loopne
incb
mov
shll
outsb
add
ret
jno
xor
add
out
std
sbb
pop
sarb
clc
inc
add
jecxz
xor
add
incb
pop
sbb
incb
cmpsl
lret
stos
in
clc
mov
xor
add
incl
pop
mov
incl
imul
incb
idivb
add
fidivrs
daa
incb
imul
add
add
incb
fdivl
fistpl
pop
incl
insl
scas
xchg
inc
les
clc
adcl
cmp
incl
insl
insb
add
incb
movsl
ja
mov
dec
dec
add
incb
xor
add
int3
into
in
test
jo
or
jno
pop
add
inc
ljmp
loop
arpl
jge
ljmp
mov
int
add
add
push
add
dec
add
incl
out
add
mov
mov
lock
sbb
push
add
add
incb
fprem
push
add
and
add
push
mov
loopne
imulb
add
ljmp
add
add
lret
jecxz
incb
ljmp
loop
leave
icebp
mov
out
cmpsl
mov
dec
add
incb
pop
add
xor
add
mov
incl
or
bound
mov
data16
sbb
lods
pop
xorl
sbb
push
add
add
jae
add
incb
sbbb
add
adc
add
in
mov
jl
sub
sbb
rol
stos
repnz
incb
add
add
roll
adc
add
lods
lds
jmp
incb
and
add
jmp
xchg
incl
dec
add
add
add
add
add
add
push
incl
mull
add
incb
pop
add
sbb
jne
enter
sbbb
add
sbb
mov
stos
ja
insl
or
incb
adc
add
incb
lock
add
add
xchg
dec
add
ret
iret
jp
icebp
pusha
add
fdivl
jne
mov
incb
insb
add
push
pop
incb
xchg
cmpsl
mov
out
adc
push
incb
jl
add
add
push
cli
and
add
incb
xor
add
add
incb
int3
adc
add
repnz
lods
xor
add
lods
je
insb
add
add
incl
fbld
add
mov
lds
push
add
incb
inc
add
xchg
add
pop
aaa
incb
xchg
or
aas
mov
add
test
add
mov
icebp
ja
sarl
xor
add
stos
jns
add
mov
jge
ficoms
das
paddb
jle
imul
xor
add
push
add
incb
mov
and
add
data16
ljmp
add
cmp
inc
add
add
int
add
lock
incb
addb
cli
incl
je
push
dec
cmc
outsl
push
incl
or
dec
cmp
stos
aaa
incb
adc
sub
incb
rcr
mov
incb
fnstcw
cli
and
add
xchg
out
popf
jl
ja
loopne
int
std
iret
aas
data16
or
cli
dec
add
add
add
mov
add
pop
add
xor
add
std
mov
add
incb
jns
incb
aam
mov
inc
add
mov
sti
lods
cmpsl
mov
xchg
or
mov
add
incb
or
lret
icebp
dec
jmp
andl
add
incb
sub
pop
add
insb
add
and
ja
add
incl
les
lock
addr16
sub
jmp
add
pusha
add
addb
incb
add
hlt
mov
add
scas
lea
incb
lds
test
popf
jnp
add
push
fnstsw
add
xor
add
movd
jns
repnz
add
lcall
into
xchg
aad
sub
shl
js
sub
add
fcmovnu
mov
adc
add
xorb
lds
int
jecxz
int3
out
sbbl
testl
mov
incb
cwtl
mov
xor
add
and
add
inc
add
lret
pop
jg
jecxz
xor
add
mov
inc
add
mov
mov
dec
and
add
dec
sbb
sub
and
fldl
incb
movsl
xchg
insb
add
add
push
jle
or
mov
mov
add
incb
xchg
push
mov
add
xchg
fsubrp
mov
js
lret
add
lds
lds
iret
xchg
sarb
add
mov
jg
aam
jp
cmp
sbbl
add
bound
arpl
ret
cmp
idivl
add
mov
jl
test
pop
incb
inc
add
add
popf
adc
add
add
add
jecxz
out
popa
jp
sub
dec
add
incl
jno
add
incb
jno
jle
fsts
inc
pushl
incb
jecxz
je
sbb
sub
stos
xchg
jnp
enter
push
add
add
lods
sbb
xor
in
incb
jne
ja
incl
popf
rclb
jno
add
add
insb
add
sar
movsb
xlat
and
add
add
aam
add
rorl
add
stos
dec
add
add
fsubl
incb
mov
incl
xchg
pop
les
add
call
leave
xor
add
add
cmc
jnp
incl
inc
add
add
incb
leave
test
sub
popa
push
add
enter
sbb
mov
pop
incb
push
incb
xor
add
cmp
mov
cld
mov
hlt
sbb
filds
incb
popa
mov
add
incb
mov
mov
xchg
pop
add
add
add
stos
pop
add
add
xor
add
or
and
add
cmpsl
in
push
xchg
scas
mov
jae
add
outsb
add
gs
add
incb
in
stos
lret
out
data16
sahf
jle
ja
pop
ret
add
cmp
incb
push
inc
add
incb
rclb
incl
lds
inc
cmp
dec
jle
cs
ja
test
add
fisubrl
shll
add
sahf
int3
mov
in
imul
add
or
aas
xor
add
xor
add
shrb
push
add
mov
add
arpl
push
add
loop
add
incb
scas
push
add
bound
stc
xchg
je
xchg
cli
in
pop
add
add
incb
orl
add
xlat
mov
mov
mov
jge
cmc
push
add
fwait
cmp
add
inc
adc
push
incl
or
jo
sub
incb
and
add
pop
scas
lret
movsl
mov
push
xchg
icebp
add
add
incb
or
add
incl
adc
add
xlat
jl
loop
add
pusha
add
xlat
repz
pushf
out
xlat
pop
incb
cwtl
xchg
cli
dec
add
incb
push
add
incb
fs
pop
or
pushf
adc
add
out
incb
jmp
sqrtps
dec
add
and
add
movsb
sub
mov
aam
pop
incb
loopne
add
incb
shrl
ftst
loop
fildl
add
add
add
sub
or
mov
add
add
je
psubq
jnp
je
cmp
les
cltd
pop
lock
sbb
mov
xlat
add
incb
sbb
and
add
repnz
leave
lcall
add
int
mov
stos
pop
add
fs
inc
lock
call
or
data16
add
add
inc
add
incl
xor
add
data16
incb
test
mov
add
pop
incb
push
mov
incl
sbb
mov
add
xchg
push
add
dec
mov
add
jle
cmc
fs
leave
adc
add
nop
push
add
add
add
hlt
push
add
incb
and
pop
push
add
incb
scas
add
mov
inc
add
insb
add
mov
pop
add
xchg
incb
mov
and
add
add
add
movsb
int3
in
add
jns
inc
add
mov
call
incb
cmp
mov
add
sbb
nop
mov
add
fmuls
adc
add
and
add
xchg
mov
sahf
sbb
add
fsubrs
add
pop
mov
mov
pop
incb
push
add
mov
popa
rcll
incb
pushf
or
mov
cmp
repnz
jge
add
incb
or
and
add
icebp
clc
mov
incb
xchg
aad
add
incl
push
xor
in
loopne
sub
xchg
adcl
incb
and
add
lea
incb
xlat
sbb
push
out
mov
movsl
mov
ljmp
lcall
incl
test
cmp
insb
add
push
incb
aad
push
add
fstl
incl
sahf
jo
xchg
lods
and
add
push
xlat
jae
xor
add
les
sahf
lods
lock
add
xchg
jmp
sbb
icebp
pop
insb
add
mov
incb
pop
incb
imul
incl
popa
cmpsl
lahf
xor
add
dec
add
nop
mov
incb
lock
inc
xor
add
iret
pop
popa
cmp
stos
mov
incb
xor
add
incl
arpl
add
and
push
push
inc
add
popa
mov
incb
add
add
xor
add
movsl
arpl
add
sbb
or
mov
xchg
sbb
cmpsb
push
add
pop
add
inc
cltd
mov
add
imul
sahf
cmc
sbb
fmull
add
xlat
and
add
incl
mov
adc
add
aas
jne
mov
mov
gs
add
incl
insl
jne
incb
or
lret
add
mov
scas
fisttps
shl
and
add
pop
add
push
add
data16
fistps
incl
aam
sub
std
out
xchg
mov
imul
jae
incb
xor
add
ljmp
add
incb
nop
aaa
incl
cmc
sarl
add
mov
cmp
adcl
pop
incb
xchg
and
add
add
mov
incl
push
mov
mov
add
add
negl
int3
push
add
sbb
test
nop
stc
mov
arpl
add
add
sti
and
add
pop
add
push
mov
in
sbb
int
mov
jg
inc
lahf
inc
add
sti
int
jo
nop
cmp
push
and
add
add
incb
sub
loop
incl
cmp
stos
clc
mov
int3
hlt
pop
add
cmp
pop
incl
incl
not
fidivrl
add
add
add
and
add
add
dec
add
stc
dec
jo
ret
ja
sbb
ja
incb
out
andl
in
xor
mov
add
and
add
incb
mov
xor
add
inc
add
and
add
push
or
aas
repz
out
mov
pop
push
add
cli
push
push
test
aam
add
push
pop
push
add
jg
mov
fnstsw
add
add
jmp
incb
in
incb
rorb
bound
mov
incl
mov
add
imul
push
add
add
popa
lcall
or
mov
add
add
sub
rcrb
fiadds
test
incb
clc
aaa
incb
sub
add
lods
mov
int
mov
incb
or
add
xchg
fisubl
incb
inc
add
fucomip
mov
add
add
incb
cmp
push
repnz
add
add
incb
adc
add
add
cmp
cmc
push
add
out
int
add
incb
movsb
dec
lds
cmp
cltd
in
push
add
jne
lcall
add
push
incb
inc
mov
sub
data16
movsl
ret
mov
add
fisttpl
insl
inc
add
jo
inc
add
jp
xor
add
incb
sbb
push
add
add
fwait
and
add
lret
inc
add
jl
popa
inc
add
add
add
adc
add
incb
sub
xchg
inc
mov
scas
mov
inc
xor
add
xor
add
sub
imul
dec
add
int
sbb
sbb
or
pop
cli
push
add
das
inc
int3
cmpsl
pushf
cmc
mov
add
and
add
mov
add
test
jbe
mov
add
cwtl
push
incb
xor
add
mov
add
inc
or
add
cltd
jle
jecxz
aas
loop
incl
xor
add
out
iret
and
add
sub
add
ja
add
stos
popa
jns
incb
in
sbb
inc
mov
add
loopne
add
stos
aam
sti
cmp
mov
add
adc
add
popf
lods
rorb
add
add
mov
clc
mov
jbe
mov
or
ror
push
pop
dec
add
add
add
incl
mov
incb
sbb
test
add
or
fstps
and
add
add
aaa
incl
in
ljmp
add
push
add
incb
mov
pushf
out
jno
add
and
add
add
incb
jle
loope
js
pop
add
or
cmp
scas
sub
incb
ds
mov
add
add
add
sub
incb
nop
mov
mov
push
add
cmpsl
jecxz
add
incb
push
add
add
jne
add
xor
add
or
push
add
sti
bound
jmp
pop
add
mov
incb
push
add
add
incb
or
aam
add
andps
pop
add
incb
jl
xor
add
insl
les
dec
add
stos
test
mov
incb
sbb
xchg
sbb
dec
call
fstps
pusha
add
enter
aad
incb
mov
add
jl
mov
mov
into
inc
add
lea
hlt
fcoms
add
add
mov
jno
das
pop
add
xchg
popf
fildll
jecxz
rcrl
incl
and
add
jbe
sbb
add
enter
add
add
jle
loop
or
push
add
out
incb
arpl
out
loopne
fs
push
mov
cwtl
xor
add
jb
or
pop
sahf
std
xchg
xor
add
add
cmp
and
incl
and
add
push
roll
lds
scas
repz
mov
add
shlb
add
pop
insl
repnz
add
incb
sahf
mov
jne
xor
add
jmp
add
push
add
sbb
dec
mov
push
add
cmpsb
cltd
hlt
mov
dec
icebp
dec
and
incb
and
add
mov
incl
repz
or
add
or
push
add
xchg
pop
add
lret
add
add
mov
incb
dec
sbb
add
add
dec
les
xor
add
imull
mov
add
push
mov
add
dec
pop
add
lahf
cmp
xchg
mov
incb
cmc
cld
loope
jb
pop
add
add
mov
stos
daa
incb
or
jl
dec
add
add
add
jno
pop
add
incb
mov
add
mov
incb
in
adc
add
mov
jecxz
ret
add
and
lds
and
add
incb
inc
inc
cmp
orl
mov
inc
add
lds
out
ret
add
out
cmp
lahf
in
push
add
incb
int
sti
jl
lods
jns
add
inc
add
add
incb
and
add
incb
fsubrl
cmpsb
pop
add
in
push
in
lea
push
add
add
incb
and
add
lods
scas
pop
add
add
fsqrt
mov
add
mov
aad
add
cmpsl
xor
add
jbe
push
rcll
sub
icebp
in
incl
out
mov
add
add
mov
enter
mov
in
mov
xchg
cld
imulb
pusha
add
incb
pop
adc
add
pusha
add
incl
sub
rolb
add
add
out
lret
or
test
push
add
xor
add
cli
mov
add
subl
add
incb
dec
ljmp
add
sub
mov
hlt
cwtl
cld
pmuludq
add
mov
incb
movsb
fisubl
push
incb
test
aas
repnz
add
insl
test
incb
xor
add
fdivrs
add
pop
incl
xlat
or
add
add
jecxz
in
sbb
xchg
icebp
mov
out
jmp
add
incb
arpl
incb
dec
in
fdivl
dec
add
incl
xchg
imul
jo
jnp
mov
add
add
add
stc
insl
and
add
test
sbb
or
add
add
incb
or
mov
push
add
fnstsw
mov
out
call
xchg
adc
mov
les
cmp
cwtl
push
add
arpl
xchg
cmp
repnz
inc
add
clc
inc
lods
in
mov
addr16
mov
add
incb
arpl
incb
addb
add
rclb
cltd
sti
loopne
lea
test
add
incb
les
incb
stc
inc
sti
push
add
mov
out
loope
cmp
ljmp
sbb
mov
adc
add
incb
das
fnstenv
incb
mov
cmpsl
sbbb
add
cwtl
iret
and
add
adc
add
cmp
or
in
lahf
jbe
dec
repnz
add
add
ret
cmpsl
dec
add
cs
int
loopne
outsb
add
incl
inc
mov
sub
out
rorl
fistl
cld
mov
cmp
inc
add
addl
add
incb
mov
adc
add
add
pushf
movsl
xlat
push
add
dec
add
ljmp
rcr
lods
mov
aas
add
add
inc
add
ficoml
ljmp
add
std
jb
push
incb
xlat
pushf
cvtpi2ps
daa
incb
and
add
test
adc
add
incb
shrl
add
add
incl
xor
add
add
incl
lea
dec
add
add
scas
ja
add
sti
lds
xor
add
test
aas
outsb
add
incl
mov
incl
fists
jns
rorb
mov
xlat
sbb
aaa
incb
mov
add
add
loope
add
jo
inc
and
add
incb
add
add
push
incb
incl
fsubrs
pop
dec
cmc
cmp
pushf
and
add
sbb
js
clc
out
incb
data16
in
add
pop
incb
inc
add
adc
add
incb
sub
jbe
jg
lea
data16
sbb
mov
mov
inc
add
cltd
lock
add
add
fstpt
incb
cltd
sti
les
add
adc
add
mov
js
rcrl
in
and
add
add
pop
add
push
add
pop
xorl
sbb
pop
add
inc
add
incl
inc
jmp
repz
add
add
add
xchg
in
sbb
mov
aas
dec
in
and
and
add
dec
add
push
add
movsl
xchg
cmp
dec
add
mov
mov
mov
adc
add
add
mul
in
inc
add
push
add
mov
xchg
in
add
ja
js
inc
add
aas
dec
add
add
iret
add
pop
add
cld
call
add
data16
incb
mov
adc
sbb
add
jmp
xchg
inc
sbb
scas
dec
inc
xchg
push
incb
dec
mov
jbe
pop
add
idivb
lock
add
sub
jle
leave
adc
add
lcall
add
cli
cltd
in
xor
add
sub
adc
mov
add
jecxz
incb
xor
add
incl
pop
add
daa
incb
xchg
add
add
out
add
mov
cmp
imul
xchg
dec
imull
add
push
incb
sbb
xlat
ret
popf
pop
add
in
aam
incb
sbb
add
or
out
mov
daa
incb
cmp
jns
add
pop
add
add
add
cmpsl
adc
mov
add
or
rcr
movsb
mov
add
in
cvtps2pd
das
xchg
sti
popf
les
incb
mov
incb
outsb
add
incb
adc
andb
add
incb
add
add
push
add
incl
shrl
add
sarl
and
add
pop
addr16
pusha
add
add
add
mov
sub
xor
add
data16
add
iret
or
or
mov
mov
add
add
jb
out
add
add
test
incb
cmpl
mov
incb
add
add
incb
out
add
int
incb
and
add
add
incb
push
out
sbb
cmp
add
incb
jb
xchg
rcrl
je
loopne
or
js
fdivs
add
add
add
movsl
out
popa
push
incb
lret
jne
incb
loopne
add
fistpll
bound
pushf
sahf
test
movsb
adc
add
push
adc
add
add
add
pusha
add
jecxz
add
in
xchg
mov
incb
and
add
pop
add
cmp
in
add
jg
sar
inc
add
mov
in
lds
stos
inc
xchg
jg
imul
xlat
sbb
xchg
int
sbb
lock
test
incb
inc
add
add
push
add
aas
cmp
incb
mov
test
jmp
sub
sti
incb
add
pop
add
sbb
stos
push
xchg
test
mov
test
dec
push
mov
incb
popf
fdivl
data16
jge
shll
add
add
cld
in
testb
pop
incb
add
add
add
test
xchg
fstp
sbb
pop
add
das
cmpsb
push
incb
xchg
mov
addr16
add
mov
sbb
cli
repz
incb
jno
or
and
add
pop
xchg
xchg
sub
or
cwtl
adc
add
add
adc
add
mov
incb
sarl
pusha
add
mov
ret
add
add
dec
or
divb
or
inc
sub
incl
mov
incb
adc
add
add
test
ret
cmpsb
mov
add
and
add
add
add
incb
or
cmc
rorl
push
add
out
js
imul
add
push
add
add
js
dec
add
push
mov
std
cmp
mov
sub
add
leave
mov
out
add
test
add
add
mov
movsl
inc
push
fsubrs
arpl
fisttpl
incl
out
xor
add
push
cmp
rol
add
mov
repz
add
incb
pop
incl
sub
incl
dec
mov
sub
inc
add
hlt
push
add
scas
nop
fistpll
outsb
add
mov
jno
dec
xor
add
jne
sub
js
inc
add
stc
jne
sahf
ret
push
add
pop
add
pop
fmul
lret
inc
add
mov
and
add
inc
add
jge
add
dec
add
add
mov
xchg
aam
add
incb
rcrl
mov
sbb
ficoms
incb
stc
cmp
add
incl
mov
in
hlt
mov
sub
push
incb
xor
add
lret
imull
cli
inc
add
mov
inc
add
add
add
ljmp
cmp
lcall
leave
cmp
incb
dec
add
cltd
fcmovbe
mov
incb
in
push
add
ljmp
out
xchg
adc
add
add
ja
add
movsl
movsl
out
rcrb
push
jae
je
mov
xor
add
jne
push
add
shll
add
add
outsl
sub
aaa
incb
push
stc
adc
add
popa
gs
out
jle
cmc
out
incb
mov
mov
mov
adc
add
test
incb
push
incb
push
cmpsb
push
add
fldenv
hlt
and
add
pushf
in
shr
cmc
call
jmp
in
lret
in
add
data16
daa
incb
add
add
pop
add
shlb
jno
incb
dec
pop
incb
xor
add
adc
add
add
add
add
popa
lods
mov
dec
mov
sbb
incb
jmp
call
push
xor
add
cmp
fst
sub
cmp
inc
add
out
insb
add
aad
in
incl
aad
gs
add
loope
stos
or
addl
add
add
add
add
lret
imul
int3
adc
add
jns
testl
test
add
add
add
imull
add
mov
out
mov
add
stos
pop
incb
and
add
in
in
inc
add
mov
incb
daa
incb
or
movsl
add
add
xor
add
stos
inc
push
xchg
jmp
add
add
inc
mov
sbb
bound
push
incb
jmp
incl
inc
popa
stc
xchg
incb
push
add
lods
sahf
mov
add
jmp
sub
add
mov
rorb
add
lahf
pop
xchg
data16
sbb
cs
inc
hlt
adc
add
and
add
incb
sub
or
cmp
loope
add
xor
add
add
incb
mov
ret
jl
pop
add
rcl
jge
cwtl
cmp
jge
add
sbb
add
leave
cmp
add
add
add
fisubrl
loope
mov
mov
inc
add
add
add
xchg
mov
outsb
add
call
cwtl
and
add
add
int
add
sti
mov
incb
data16
mov
imulb
fmuls
xchg
loop
mov
mov
jbe
or
incb
and
add
mov
cmc
sarl
in
sub
incb
fwait
pop
add
incb
sub
jbe
shrb
incb
jecxz
das
std
or
fsubrs
loop
loopne
add
test
push
add
jecxz
shlb
add
incl
push
enter
pop
imul
jns
pop
fldl
incl
mov
push
add
addr16
lock
jmp
add
push
add
movsl
sub
in
js
sti
inc
add
push
incl
and
add
fidivs
popf
mov
loop
adc
add
incb
enter
add
incb
std
xor
add
add
cwtl
dec
in
and
inc
int
add
add
incb
jb
movsl
and
add
add
incb
pop
incl
xchg
inc
pop
xor
add
incb
push
icebp
lds
dec
add
incb
mov
or
mov
jp
in
push
js
mov
add
insb
add
int
hlt
mov
xchg
mov
sbb
xchg
or
xor
add
or
incb
lods
push
add
sub
mov
outsb
add
jmp
incb
lock
xchg
enter
frstor
dec
add
xor
add
imul
int3
fcmovnbe
dec
add
fimuls
jg
incb
inc
add
incl
sub
add
mov
addr16
out
add
incl
aaa
incb
mov
add
incb
mov
jns
incl
inc
add
add
lret
mov
mov
out
dec
mov
add
push
add
incb
pop
add
incb
insl
or
add
add
inc
mov
dec
jl
dec
add
mov
inc
xor
add
mov
incb
inc
sub
add
add
xchg
pop
sbb
cmp
incb
test
lock
jb
jns
adc
add
incb
incb
mov
add
sub
inc
add
add
inc
mov
incb
fistps
jge
add
arpl
mov
loop
mov
cmp
in
dec
fnsave
ja
and
xor
incb
sub
or
pop
inc
add
add
adc
add
or
jl
push
add
aas
inc
add
incl
add
jle
push
cltd
incb
xchg
jno
incb
cmp
ja
xchg
data16
fisttpl
dec
xchg
xor
add
mov
incl
inc
add
outsb
add
bound
cltd
add
incb
fwait
add
add
incb
xor
add
dec
sbb
pop
mov
cmc
and
add
lods
or
xor
add
dec
add
mov
add
incl
cmc
outsl
data16
fwait
jns
incl
test
add
fwait
jne
push
mov
rorl
loopne
lcall
add
add
ljmp
incb
lods
pop
add
xchg
clc
jmp
ficoms
add
mov
add
push
and
add
pop
loope
mov
dec
push
incb
push
add
jnp
clc
xlat
pop
add
hlt
add
add
add
add
mov
jno
pop
out
jne
mov
ret
in
add
jns
inc
mov
in
push
push
incb
shr
inc
int
mov
cmp
iret
push
incb
push
incb
mov
incb
mov
imul
shll
add
add
rorl
inc
mov
pop
xor
add
incl
sub
xchg
test
add
push
data16
pop
ljmp
fcmovnbe
inc
add
outsb
add
pop
add
mov
gs
test
add
imul
fisubs
add
incl
pop
je
add
shll
adc
add
mov
push
incl
mov
incb
adc
add
adc
add
jmp
aas
jae
add
xchg
or
mov
incb
pop
dec
int
in
cmc
ret
incb
rcl
jne
hlt
jnp
incb
insl
fdivrs
incb
cmp
add
incb
incl
inc
add
add
incl
or
test
push
incl
lcall
cwtl
scas
jne
fprem1
jmp
lahf
mov
test
repz
pop
add
jle
or
incb
push
add
ja
incb
in
mov
add
push
out
add
les
cld
jnp
incb
outsl
dec
aad
mov
mov
into
fisubrs
aaa
incb
jl
or
mov
sbb
repnz
enter
add
push
push
add
incl
pushf
mov
xor
add
incl
push
add
and
add
fldenv
nop
insl
mov
add
imul
cmp
xor
add
pop
incb
mov
dec
xlat
adc
add
push
adc
add
cmpsb
icebp
xchg
pop
add
rclb
mov
add
leave
add
fiadds
in
xor
add
fidivs
jnp
lock
incb
sbb
mov
cmp
push
idivb
into
push
divb
shll
add
lret
std
or
test
ja
cmp
or
pop
dec
jecxz
cmp
ljmp
cmp
push
add
fisubrl
add
lods
iret
incl
gs
add
add
add
jmp
add
add
out
test
add
aam
out
enter
add
add
les
out
mov
int3
lods
aam
incb
aaa
incb
fstps
mov
add
pop
mov
mov
cld
and
add
subl
add
incb
sub
add
in
fistpl
add
cld
daa
incl
xchg
aad
incl
pop
incb
or
dec
add
and
add
sub
adc
add
add
insb
add
xor
sub
outsl
jecxz
mov
mov
incb
jmp
add
test
mov
xchg
aaa
incb
negl
scas
jp
and
add
or
incl
or
cmp
popa
inc
jl
cmp
sub
fmul
or
add
hlt
push
mov
add
dec
jge
inc
test
incb
in
sahf
mov
cmpl
incl
adc
add
add
or
sub
adc
add
les
add
cmp
shll
add
add
mov
incl
aaa
incb
jmp
pop
add
mov
cmp
outsl
push
inc
add
add
add
add
add
cmp
fsubs
incb
popf
push
add
xor
ret
cmp
adc
add
incb
icebp
mov
insb
add
loope
mov
or
pop
add
addr16
std
inc
add
add
icebp
mov
pop
test
sahf
mov
gs
add
sub
incl
pop
incb
adc
add
loopne
inc
mov
popa
push
add
nop
jl
aam
add
mov
or
sub
incb
push
add
incl
test
add
or
lds
add
add
pop
add
pusha
add
ja
jle
test
add
in
push
incb
add
add
push
add
jmp
push
xchg
imull
test
xchg
add
incb
stos
sbb
fld1
scas
inc
add
lods
mov
popa
inc
lea
sub
incb
dec
add
jecxz
stos
add
add
pop
fnstenv
push
incb
pop
add
xchg
jbe
adc
add
add
clc
jecxz
pop
push
dec
iret
and
add
js
inc
int3
rclb
or
inc
add
mov
pusha
add
add
lds
add
push
xor
add
or
incb
push
add
incl
cltd
add
mov
mov
cmpsb
shlb
aam
out
ret
fstl
add
incb
popa
dec
add
cmp
jo
fsts
mov
push
dec
add
popf
push
add
add
pop
sub
dec
rorb
jb
xor
add
add
incb
or
in
inc
add
pop
add
adc
add
incl
mov
add
push
add
mov
add
sbb
sbb
push
add
add
fsubrs
sub
add
pusha
add
incb
cmp
incb
fcomps
aam
add
add
push
push
add
push
pushf
adc
add
je
or
incb
or
in
repz
jmp
insb
add
lret
add
incb
movzwl
add
nop
jle
mov
loopne
daa
incl
inc
jns
adc
adc
push
add
shrl
call
add
add
xor
add
shr
dec
add
add
pop
add
xlat
sarl
jb
add
inc
orl
xchg
sbb
lea
mov
repz
add
adc
add
add
incb
jno
scas
xorb
xor
add
ret
sub
adc
add
incl
shlb
add
dec
add
add
adc
add
outsl
push
inc
add
out
jnp
fucomip
pushf
add
add
sub
jae
outsb
add
loopne
sbb
add
pushf
pop
leave
add
add
add
add
xchg
int3
repnz
insb
add
cmc
add
add
incb
fstp
sub
add
repnz
icebp
xor
add
add
cs
lock
add
add
add
add
insb
add
and
add
incb
mov
add
incb
je
jl
gs
xor
sti
xchg
push
add
add
add
incb
sbb
lret
leave
loop
xchg
data16
movsb
sarb
xor
add
out
aad
incb
daa
incl
mov
jne
sub
mov
repnz
add
loop
cmp
pop
add
pop
incl
fiaddl
add
mov
incb
loop
jle
adc
mov
adc
add
push
add
lret
cltd
stos
adc
add
mul
ret
sub
push
add
add
test
adc
add
jno
add
incb
add
add
add
xchg
add
or
imul
aam
lret
in
xchg
xchg
popa
xor
incb
fdivr
xchg
stos
cmp
add
jae
incb
add
add
add
sbb
scas
dec
aam
add
cmp
add
add
incb
pusha
add
add
sbb
add
in
ljmp
xor
add
cmpb
jne
dec
add
call
add
adc
add
mov
stos
out
add
cmp
addb
add
lret
and
add
add
incb
push
mov
jo
jle
bound
into
outsl
movsb
and
add
addr16
push
jnp
notl
add
fisttpll
das
mov
cmp
scas
push
fwait
out
mov
add
insl
stos
les
add
incb
or
dec
add
cltd
sub
dec
ret
mov
sbb
add
and
add
dec
add
dec
popf
gs
incl
jecxz
add
pop
add
xor
add
mov
jne
add
add
push
add
incb
mov
mov
add
jbe
xchg
jp
dec
add
add
lods
mov
sbb
add
mov
lock
popa
shrb
push
add
incl
test
add
add
add
pop
rcrl
add
imul
incb
inc
add
and
xchg
rcrb
add
xor
add
incb
cmp
sub
lods
pop
test
lods
mov
add
xchg
pop
incb
divb
adc
add
add
add
add
incb
inc
add
sbb
mov
or
incb
bound
jno
ds
and
add
incb
ja
in
dec
add
out
fistl
dec
add
incl
stc
add
add
or
xchg
add
add
or
rcl
jo
cmp
push
incb
mov
mov
mov
incb
and
add
imul
xor
add
aas
cmp
inc
je
sahf
xchg
call
add
add
out
add
push
fwait
or
test
add
ror
mov
pop
add
mov
int
xchg
mov
add
add
loope
stos
fidivs
add
mov
mov
in
incb
inc
add
or
cmpb
lods
push
add
cmp
jne
add
mov
incb
decl
add
incb
aaa
incb
test
incl
push
add
incb
out
xchg
add
movsb
fstpl
adc
add
add
andl
incb
outsl
shll
or
add
sbb
dec
pop
push
add
add
incl
dec
xor
add
adc
add
into
xchg
jb
faddl
incl
add
add
ret
je
out
lahf
adc
add
mov
or
test
add
pop
add
add
cmpl
pop
jle
pop
sahf
in
push
add
incb
inc
xchg
pushf
insb
add
and
test
push
sahf
or
push
add
shrl
add
jmp
incl
sub
lea
bound
push
ret
jg
add
aad
incb
pop
jmp
fsubrs
dec
xor
add
add
sti
mov
incl
pop
add
add
sub
push
xchg
mov
cli
nop
scas
cmc
xor
add
rorb
repnz
incb
push
add
sub
incb
pop
jp
cmp
das
inc
add
add
hlt
mov
js
jmp
arpl
aad
add
add
add
lds
mov
incl
jns
pusha
add
adc
add
rcl
nop
test
incb
aad
int
add
push
mov
incl
stos
and
add
mov
incb
addr16
jne
and
push
sub
incl
jp
bound
jnp
sub
xlat
aas
mov
add
or
bswap
add
mov
popf
jno
dec
cltd
xor
add
add
sbb
int
dec
out
jnp
add
add
sbb
repz
rcrl
scas
loopne
dec
add
incb
lahf
or
incl
incb
jae
incb
in
add
incl
xor
imul
add
add
or
incb
or
pop
mov
push
add
or
incb
aaa
incb
inc
add
ficoml
incb
mov
mov
ret
add
add
shll
incb
xlat
int3
mov
add
outsb
add
push
add
incb
scas
xchg
incb
insl
sub
incb
jno
add
add
and
add
std
mov
adc
add
sbb
insb
add
xor
add
pop
xor
add
add
incb
dec
add
pop
incb
pop
xor
add
outsb
add
add
push
add
add
incl
or
stos
loopne
out
popa
adc
add
incb
jne
data16
data16
dec
int
dec
add
incb
insl
dec
add
mov
add
add
fnsave
incb
inc
stos
adc
add
incb
inc
add
mov
fcomp
leave
mov
in
add
mov
mov
mov
imul
mov
dec
ds
jle
or
mov
add
icebp
sahf
push
incb
outsl
jmp
arpl
mov
add
test
add
leave
loope
cld
out
and
add
and
add
loope
fsts
nop
ror
jp
jb
hlt
push
add
cltd
xchg
xorl
add
jno
insb
add
mov
add
add
mov
sub
add
jae
incb
fs
xchg
clc
insb
add
sbb
pop
add
add
push
mov
push
pusha
add
or
adc
add
and
add
test
add
incl
push
adc
add
dec
add
incb
push
add
add
sahf
mov
add
fwait
mov
dec
mov
out
out
xlat
xchg
add
push
add
add
stc
insl
sti
mov
add
incl
faddl
cmp
aad
incl
sarl
add
incl
dec
mov
add
add
jle
jns
fstpl
nop
fwait
jecxz
add
xor
add
or
fistl
incl
dec
add
mov
add
fbstp
add
repz
add
add
mov
ror
loope
incb
jo
pop
ret
iret
inc
add
into
movsb
jge
lods
add
add
incb
pop
incl
jno
xor
add
pop
or
push
incb
cmpsl
rol
repz
push
incb
jmp
stc
repz
add
add
aad
inc
push
test
dec
add
incb
adc
add
adc
push
add
popf
xor
add
data16
lea
and
add
add
fxch
shll
dec
add
jno
add
fcomps
add
add
sub
aaa
incl
dec
pop
das
inc
insb
add
lea
dec
push
int
pop
mov
dec
mov
jne
xchg
add
incb
jne
fidivs
pushf
or
stos
ja
lea
add
stc
stc
add
add
adc
add
ja
incb
push
add
mov
pop
incb
popf
sbb
jle
or
insl
aad
incb
out
jbe
and
add
outsl
data16
jmp
fdivs
and
add
ret
das
jae
add
jg
out
incb
push
add
clc
sub
mov
test
add
or
scas
mov
out
incb
stc
pop
dec
jp
cmp
lea
incb
bound
repnz
pop
add
pusha
add
sub
dec
shll
add
xchg
pop
mov
addl
add
loope
add
add
mov
push
add
cld
or
pop
incl
jmp
dec
lock
into
xchg
aaa
incb
lcall
incb
mov
add
mov
xchg
movsb
call
mov
add
movsb
inc
add
xlat
cltd
subb
jb
cmp
add
pusha
add
scas
cmpsl
gs
incb
outsb
add
xchg
push
incl
and
add
cld
andb
add
mov
jge
and
add
nop
insb
add
add
push
add
incl
adc
sbb
add
adc
add
pop
incl
and
add
add
add
mov
incb
out
add
imul
subb
jnp
incb
data16
addl
add
incb
mov
add
adc
add
sbb
add
add
xchg
add
push
add
iret
in
add
sub
xor
add
xor
or
mov
push
incb
mov
inc
fs
inc
add
push
mov
sbb
add
mov
sbb
mov
dec
add
sbb
pop
add
gs
incb
jo
sub
jb
jb
add
dec
add
rol
popa
xchg
add
add
sbb
add
addb
adcb
add
out
mov
gs
add
xor
add
push
add
arpl
xor
repnz
push
mov
sbb
stos
test
in
incl
lret
nop
cmpl
sbb
xchg
add
out
push
add
add
fcomps
fstpl
jge
pop
incb
xchg
add
mov
xchg
ljmp
incb
jge
clc
dec
add
jg
add
incb
push
incb
sbb
pop
xchg
mov
incl
movsb
pushf
sub
sbb
or
aad
add
add
push
lea
cltd
aaa
incb
and
add
decl
add
add
incb
and
add
icebp
or
add
in
mov
cmc
lret
mov
mov
jecxz
add
push
incb
mov
or
incb
push
lcall
incb
pop
sub
loope
decb
incb
cmp
aad
push
or
sbb
enter
or
incb
add
add
add
mov
mov
icebp
loop
jp
and
add
fistpll
add
movsb
leave
cmp
movsl
push
xor
add
add
add
and
add
dec
or
add
fcomp
daa
incl
out
insl
cmpsl
pushf
clc
scas
fstl
repz
lods
cltd
sub
push
adc
add
add
add
push
mov
add
jae
jge
pusha
add
sbb
test
add
incl
cmc
adc
add
mov
sarl
stc
add
add
push
mov
scas
inc
dec
xorl
add
add
jmp
flds
insl
pop
incb
test
jo
out
inc
add
cmc
bound
adc
add
addr16
int3
xchg
lods
fldl2t
loopne
dec
add
add
lds
incl
add
add
incb
sub
out
sarl
push
add
incl
scas
xor
add
mov
add
lods
inc
mov
add
xchg
mov
popa
lcall
incl
xor
add
add
fldt
sub
add
incb
data16
cmp
test
loope
push
add
cmp
mov
out
popa
fdivl
clc
mov
addl
sub
xchg
cmpsb
dec
dec
add
lahf
incb
je
shlb
incb
faddp
pop
inc
adc
add
adc
xchg
xor
add
add
incb
and
add
push
incb
popa
orl
jnp
test
cmp
jae
add
jecxz
jno
adc
add
xlat
ret
jg
out
mov
in
sub
sub
mov
jg
sub
add
mov
pushf
sbb
adc
add
sbb
add
jnp
dec
add
mov
incb
mov
jge
incb
sbb
addl
add
add
incb
push
add
nop
pop
fnstenv
mov
aam
add
incb
loopne
in
mov
add
add
add
fldt
add
mov
ljmp
dec
add
mov
xchg
or
insl
into
jnp
add
sti
mov
mov
ret
jne
incb
test
icebp
and
jle
sbb
add
add
iret
loop
incl
push
add
add
add
adc
add
add
add
call
add
sbb
inc
add
push
leave
nop
adc
jb
jle
sti
daa
incb
pusha
add
les
mov
push
add
nop
incb
adc
add
incb
ret
add
add
add
add
out
jns
add
xor
add
and
add
inc
imul
mov
incb
mov
incb
gs
jg
add
xor
add
jge
decl
mov
incl
jno
pop
add
dec
shlb
add
lret
jl
xor
incb
cltd
add
add
incb
push
pop
leave
cmp
adc
je
xor
add
mov
incb
fldcw
incb
sbb
dec
xchg
push
add
push
add
mull
sub
add
add
incb
lret
les
mov
add
sbb
movsb
test
int3
add
add
incb
push
incb
adc
add
insb
add
je
add
add
sahf
jns
add
roll
add
add
add
incb
iret
std
xchg
pusha
add
incb
lret
imul
cmp
xchg
sbb
inc
add
pop
incb
aaa
incb
sub
add
add
add
int
add
incb
inc
add
incb
lcall
add
pop
add
incb
pusha
add
test
repnz
add
idivb
mov
adc
add
lea
mov
ficoms
loop
cmp
sbb
or
lcall
mov
sub
in
add
aaa
incb
dec
imul
addr16
pop
sub
add
adc
add
jns
adc
add
ret
push
add
shr
pop
add
aaa
incb
in
incl
unpckhps
add
add
mov
imul
sti
and
add
or
and
add
incl
je
inc
add
incl
adc
add
add
mov
mov
out
or
movsb
aam
jne
cmp
xchg
jmp
roll
fcompl
add
and
add
incb
and
test
jp
or
adc
add
aam
mov
fs
lea
incl
sub
dec
add
add
mov
sbb
fnstcw
add
add
xchg
cwtl
in
incb
mov
subl
lods
test
incb
cmp
leave
inc
add
daa
incl
cmpsb
mov
push
and
add
push
inc
pop
incl
ljmp
incb
cmp
ret
mov
incb
xchg
dec
add
mov
add
add
incb
fwait
iret
and
add
call
add
incb
fiadds
bound
lds
jo
jne
repz
out
xor
add
incb
dec
add
pop
incb
leave
hlt
das
mov
push
incb
inc
add
psubw
mov
add
add
rorl
add
incb
clc
jg
push
test
add
incl
inc
add
popf
outsb
add
incb
stc
jns
pop
push
scas
stos
insb
add
incb
push
add
data16
incb
sbb
jmp
cmpsl
add
lcall
test
insl
or
movsb
imul
add
scas
js
leave
repz
or
mov
xchg
xchg
push
add
incb
movq
add
leave
lds
sahf
into
mov
scas
mov
xchg
imul
sub
movsb
sahf
adc
add
sbb
add
cmc
das
push
add
add
stc
mov
mov
or
test
sarl
popf
flds
jge
dec
add
imul
mov
cmp
stc
pop
repnz
sbb
in
pushf
pop
add
dec
add
ds
pop
incb
mov
fisttpl
std
inc
repz
stos
cmp
push
add
incb
pop
incb
mov
incb
js
sbb
fisttpll
fdivrs
or
and
add
add
popf
imul
incb
mov
incb
cmp
pop
push
push
add
lahf
imul
add
dec
adc
add
incb
lahf
ret
jne
jns
add
sbb
pop
incb
sbb
pop
and
add
add
data16
push
add
incb
arpl
add
adc
add
in
leave
je
xor
scas
mov
daa
incb
or
call
push
rclb
add
add
mov
add
jge
in
incb
cmp
add
mov
mov
incb
and
add
incb
mov
ja
incb
nop
dec
add
pop
add
stc
mov
jne
sbb
add
mov
add
mov
xchg
incb
mov
incl
mov
incl
fistps
and
add
dec
in
add
int
aas
arpl
incb
add
movb
pop
stc
loopne
add
mov
mov
cmp
add
push
add
fnsave
incl
push
add
incb
sbb
fidivs
add
mov
incb
or
in
or
sahf
enter
js
lahf
movsb
inc
add
pop
add
dec
add
push
add
out
sub
lret
fisttps
incl
inc
lea
add
addl
jo
jb
or
add
ror
mov
sbb
inc
add
add
call
add
idivl
push
add
lret
cs
sub
inc
add
adc
add
adc
add
incb
nop
scas
incb
loop
sub
cmp
xchg
jmp
mov
fdivrs
lret
test
pop
xchg
xchg
pop
add
xchg
sub
gs
sub
gs
add
lcall
add
pop
jge
sbb
je
aas
mov
pop
incb
loop
add
add
sbb
repnz
xchg
jno
dec
push
cmpl
add
add
subl
scas
stos
xchg
lock
pushf
xchg
std
or
and
push
add
add
add
pop
incb
jp
test
sbb
add
mov
mov
pop
add
add
xor
add
incb
mov
incb
bound
stc
in
pop
incl
ret
xchg
insl
ljmp
incl
mov
sub
add
adc
add
add
mov
add
sti
dec
xchg
add
push
jne
fcmovu
fimuls
add
fisubl
incl
add
add
xchg
adc
add
jno
xor
add
mov
add
mov
add
fmuls
add
gs
js
std
mov
fimuls
ds
pop
add
cmp
add
incl
pusha
add
incb
faddl
js
mov
pop
cmpsb
dec
mov
add
dec
add
jns
test
add
call
out
add
test
ljmp
shrb
or
pop
scas
pop
outsb
add
cmp
incl
fistpl
add
in
mov
sbb
incl
dec
add
adcl
test
add
add
mov
mov
xor
add
cmp
out
xlat
jecxz
add
into
testb
add
cmp
sbb
dec
cmp
incb
pop
add
stc
ret
pop
out
test
add
xor
add
add
incb
dec
add
add
lock
imul
sub
add
popf
sub
bnd
and
add
scas
lcall
add
incl
add
add
inc
lret
mov
mov
into
arpl
mov
xchg
xchg
mov
mov
scas
lcall
add
pop
add
incb
pop
in
gs
leave
push
add
jecxz
test
jb
xor
add
add
inc
add
test
xchg
xor
add
add
jl
fstps
cmpsb
loope
js
jo
lock
or
jge
mov
or
or
fstps
add
bound
leave
loopne
jnp
add
incb
clc
inc
pop
js
dec
int3
adc
add
dec
mov
call
add
add
dec
mov
ffreep
pop
incl
movsl
sub
inc
add
mov
pop
adc
add
incl
jge
add
stc
push
je
rclb
fwait
or
ja
je
sub
ljmp
xor
add
incl
jbe
pop
add
push
add
incb
outsb
add
add
mov
hlt
sub
inc
sbb
cld
mov
push
leave
lret
jb
adc
add
mov
data16
in
lcall
add
add
add
or
test
pop
add
push
mov
add
xchg
xchg
push
incb
add
xchg
jae
sub
daa
incb
xlat
xor
add
xchg
imul
mov
je
sahf
mov
incl
inc
add
jge
ret
lods
dec
add
int3
ljmp
incb
sub
mov
repz
add
iret
and
add
incb
mov
sbb
fsubrs
xchg
mov
clc
mov
add
add
inc
mov
pop
add
incb
test
add
add
adc
add
int
xor
add
cmc
or
cmp
fists
incl
inc
fnstsw
jge
mov
sub
mov
cs
dec
add
add
incb
decb
jmp
cltd
xchg
jmp
add
adc
add
xor
add
in
lods
test
add
shll
and
add
pop
cmp
roll
lcall
add
jl
incb
add
cs
pop
outsb
add
mov
lcall
push
add
inc
sub
add
pop
add
add
movsl
insb
add
js
and
add
xchg
fistpl
imul
cmp
scas
xor
add
in
aaa
incb
xor
add
adc
add
mov
mov
inc
popa
insl
pusha
add
pop
add
incl
ja
or
lds
aad
lcall
inc
add
add
add
cmp
and
add
cmpsl
xchg
sub
and
test
aas
lahf
or
fldt
sbb
incb
sar
and
add
add
negl
or
incb
inc
test
add
cld
sub
lret
xor
add
pop
add
mov
add
incb
aas
dec
insl
aad
jbe
adc
add
fistpl
xchg
aaa
incb
mov
incb
cmpl
cmc
mov
add
incl
mov
mov
movsb
stc
lock
incb
lcall
int3
dec
add
incb
xchg
testl
add
add
mov
mov
incl
jle
xor
add
pop
or
rcll
test
add
incb
out
add
mov
mov
sbb
xchg
mov
incl
push
in
dec
add
incb
pop
add
incl
ja
jg
inc
add
xor
add
cmpl
cmp
les
mov
test
fldl2e
xchg
pop
cmp
add
sub
insb
add
arpl
incl
in
incl
sbb
add
xlat
rol
mov
add
add
cmp
fucomip
sub
sbb
jmp
incb
xadd
out
add
add
std
movsl
ret
mov
add
mov
dec
mov
aam
jle
out
mov
add
jge
pop
add
add
inc
dec
ret
add
data16
loopne
lods
mov
incb
jns
add
repnz
inc
add
dec
add
adc
add
bound
mov
aas
in
pop
sbb
incb
jns
adc
add
push
incb
outsl
mov
incb
mov
pop
shlb
adc
add
out
pop
jnp
xor
add
adc
add
inc
rcr
subb
add
add
shl
add
cltd
mov
add
bound
lret
add
jecxz
jge
mov
scas
xor
add
add
add
add
mov
pop
push
insl
lods
iret
stos
pop
xor
add
into
xor
add
add
add
sti
or
adc
add
add
out
add
test
sti
lret
xchg
into
shl
pop
add
popf
sub
scas
sub
xor
add
incb
aaa
incb
stc
loop
inc
add
push
add
or
jp
das
dec
add
incl
jnp
add
incb
icebp
xchg
in
ds
push
add
add
insl
pop
add
xor
sbb
ljmp
mov
add
add
incb
lods
adc
add
add
jmp
aas
outsl
movsl
xchg
add
cmp
lret
xor
add
jp
adc
add
xor
add
ret
add
jmp
mov
fimuls
incb
bound
jno
inc
push
xchg
xor
add
adc
add
adc
add
loope
mov
or
mov
push
add
add
jge
push
inc
add
add
push
std
arpl
aaa
incb
cmc
mov
incl
xchg
dec
scas
jp
sub
adc
dec
imul
ja
sbb
incl
mov
fistps
incb
repz
add
dec
add
jnp
stos
aas
test
incb
cmpsb
dec
jne
pop
inc
sbb
add
add
add
mov
xor
add
incb
lcall
cmp
mov
add
mov
test
incl
xchg
nop
sbb
or
add
mov
repz
add
incb
mov
dec
loopne
incb
push
add
add
stos
pop
xlat
lods
mov
jo
push
incb
jmp
incl
flds
incb
fildl
jle
data16
inc
sbb
mov
and
add
popf
push
imul
outsb
add
jmp
fs
adc
add
incb
sbb
int3
jae
inc
add
incl
push
add
jmp
incb
cli
cmp
stc
mov
push
incl
xchg
xchg
add
in
pop
incb
out
mov
add
xchg
dec
out
mov
or
add
add
out
jg
sub
pop
add
jmp
ror
xlat
loop
incb
jb
add
add
add
push
add
add
jbe
dec
add
add
and
add
incl
cld
mov
incb
loop
mov
incb
out
outsl
cmpsb
adcb
add
add
add
add
add
sub
jg
mov
add
add
jb
les
mov
loope
mov
incb
ret
cwtl
push
add
addb
inc
add
or
outsl
jae
pop
add
cmp
adc
add
popf
test
incb
imul
add
mov
pop
or
incb
in
incl
movsb
adc
add
popf
test
add
das
adc
adc
add
call
add
lret
roll
incl
inc
add
add
adcl
mov
aaa
incb
out
add
je
cmpsl
hlt
adc
add
lods
pop
jb
bnd
mov
add
incb
sbb
incb
loope
loopne
incb
jp
ficoms
dec
add
lcall
adc
scas
pop
in
movsb
insb
add
mov
push
rcl
add
incb
jns
incb
xchg
add
add
add
add
cli
fists
inc
cmc
repnz
inc
jno
add
mov
incb
jge
incl
gs
shl
push
add
cmp
fucomip
adc
add
incb
dec
add
inc
pop
add
xchg
lret
and
add
cmp
fwait
dec
leave
mov
dec
mov
add
add
inc
test
mov
incl
sbb
into
cmp
shrl
add
add
add
add
dec
add
imul
add
jbe
stos
mov
incb
iret
pop
inc
add
incb
ror
cmp
daa
incl
adc
add
incb
divb
and
add
incl
lcall
lea
sub
mov
jbe
icebp
jge
fwait
and
add
inc
pushf
into
jb
out
div
mov
loope
add
fsubl
incb
repz
jno
xchg
movsb
rcll
cld
or
xor
jp
adc
add
push
or
incb
mov
int
icebp
movsb
lods
mov
and
add
pop
push
incb
push
or
add
add
add
incb
fmuls
cmp
ret
add
cmc
test
add
incb
popf
jge
add
stos
xor
add
incl
jge
lods
cwtl
adc
xorb
xor
add
incb
push
add
pop
adc
add
or
incl
jbe
popl
aaa
incb
data16
gs
or
pop
add
add
add
add
add
lods
sub
and
add
push
add
incl
push
add
incb
sub
sahf
sub
incb
mov
add
mov
add
xchg
dec
ficoml
sub
loopne
dec
addr16
dec
add
add
add
mov
incl
jmp
add
xor
add
push
inc
lcall
add
dec
add
icebp
jb
lock
cmc
pop
aad
incb
gs
incl
mov
add
incb
adc
add
add
add
add
add
add
andb
add
incb
jns
clc
cmpsb
pop
add
add
in
insb
add
inc
and
add
incb
lea
subb
pop
adc
add
incb
insb
add
cmpsb
aaa
incb
std
outsb
add
icebp
loopne
mov
rolb
sub
add
imul
sti
jns
cmc
loope
and
add
incb
clc
lds
add
add
or
lods
mov
add
popf
dec
adc
add
je
sti
mov
incb
cmp
mov
incl
push
add
testb
pop
incb
lods
aad
add
add
push
add
xchg
jno
add
add
incb
and
add
inc
mov
dec
cmpsl
sub
lds
sbb
jl
faddl
jl
scas
test
loopne
inc
mov
pop
fmuls
ljmp
lahf
fimuls
adc
add
jl
sub
cmp
push
add
loop
add
add
stc
insl
mov
lods
mov
mov
xchg
cmp
xchg
outsb
add
cltd
adc
add
incl
pusha
add
adc
add
inc
add
push
les
inc
add
incl
sbb
add
int3
xchg
scas
push
add
incb
adc
or
xor
add
hlt
iret
int
add
incb
mov
cld
mov
pusha
add
incb
imul
add
scas
in
popa
out
push
mov
add
stos
xlat
loope
pop
incb
mov
incb
push
add
mov
and
add
add
jecxz
hlt
fxch
icebp
incb
jl
ljmp
add
add
sbbl
mov
incb
sbb
sbb
outsl
data16
mov
add
add
rolb
mov
js
add
add
inc
add
pop
add
add
or
pop
call
pusha
add
add
add
pop
mov
adc
add
scas
stos
loop
incl
ja
incb
xchg
push
jecxz
jbe
fidivl
incb
cld
add
add
add
or
loope
icebp
jp
cmp
adc
add
cmp
jecxz
or
push
scas
pop
add
cmpsl
pop
add
or
hlt
leave
mov
incb
adc
pop
add
dec
add
je
mov
cltd
fnstenv
incb
sbb
lret
mov
jnp
pop
incl
xchg
push
incb
bound
sbb
pop
incb
sub
leave
jp
mov
incb
jecxz
out
xor
cmp
test
int3
or
or
xor
add
out
jb
jmp
fdivrs
xor
push
in
add
add
cmp
pop
incl
inc
add
incb
jbe
bound
cmp
mov
jg
daa
incb
dec
add
outsb
add
iret
inc
add
into
into
data16
aaa
incb
in
incb
lds
add
bound
mov
cmp
mov
sbb
sahf
and
add
sub
pop
sub
push
add
and
add
imul
push
dec
add
and
add
add
push
xchg
mov
or
adc
add
mov
mov
jne
iret
stos
loop
push
add
cmp
jne
push
add
jp
sub
mov
mov
add
add
movsb
ret
mov
jb
dec
pop
add
pop
xor
add
pop
incb
add
add
inc
mov
fistps
add
incb
incl
mov
push
add
add
aaa
incb
dec
add
add
adc
add
test
add
rcll
mov
incb
xor
loop
push
andl
add
add
pop
jmp
push
sub
adc
add
add
adc
add
xchg
push
incb
ficompl
add
popa
scas
cmpsl
sbbb
mov
adc
add
aam
sub
outsl
enter
clc
inc
imul
add
incb
xor
add
lcall
imul
popa
out
lret
sti
inc
or
dec
add
incb
frstor
jmp
mov
adc
add
sbb
jg
and
push
test
add
inc
add
incb
add
add
add
incl
aas
add
test
incb
stc
loop
jo
xchg
int3
mov
add
add
add
and
pop
lds
mov
push
mov
ret
lret
mov
sahf
imul
add
inc
add
popa
mov
add
cltd
xlat
je
lea
add
incb
scas
ret
fdivrl
cmpsb
je
imul
incb
rorl
jae
incl
pop
into
je
aas
adc
add
fsts
incb
repz
add
fldenv
incb
xchg
repnz
and
fdivl
incb
sbb
popf
sbb
mov
incb
cmp
xchg
add
add
fucom
xchg
adc
add
pop
add
loop
movsbl
loope
addr16
add
jecxz
mov
cmpsl
mov
rcl
std
fmull
xchg
jcxz
inc
add
out
add
add
insl
inc
add
incb
pop
inc
add
ficompl
daa
incb
pushf
in
sahf
ja
std
xchg
repnz
cli
pop
scas
aam
add
incb
add
add
sbb
lods
cmc
cmpsl
dec
add
inc
add
pop
and
fs
mov
or
cltd
dec
add
add
out
sarl
decl
add
fldt
lock
pop
incb
shlb
incb
incl
shr
cmpsb
push
incb
shlb
xchg
in
pop
stos
mov
push
sti
mov
mov
mov
mov
sbb
jp
jp
leave
dec
add
incb
pop
shll
and
add
cwtl
outsl
cmp
inc
add
add
add
add
and
add
ret
add
dec
int
xchg
add
nop
pop
addr16
add
fwait
jns
add
cli
aad
fmull
add
add
add
cmp
xor
add
and
add
add
incb
fldenv
add
movsb
pop
in
outsl
or
pop
mov
add
jle
mov
fdivr
aad
in
pop
incb
ret
push
add
dec
adc
add
mov
add
push
add
add
iret
or
fdivl
fcmovne
pop
xchg
add
add
incb
xchg
jecxz
add
inc
mov
xchg
daa
incb
push
add
out
incb
rorl
incl
mov
add
into
push
add
add
je
mov
incb
inc
add
data16
add
incl
cmp
lock
lods
shr
mov
xor
add
inc
rol
clc
jecxz
incb
xlat
sti
jns
push
fimuls
or
sbbl
mov
dec
add
cmp
ror
inc
add
incb
addb
cmp
or
dec
rcrb
enter
add
fmulp
cltd
fdivrs
add
add
add
mov
cmp
movsl
pop
roll
add
sti
and
add
arpl
jns
push
add
mov
add
incb
leave
mov
mov
add
jns
add
ja
adc
add
test
pop
incb
outsb
add
incb
jno
sbb
cltd
into
incl
stc
nop
stos
xor
add
add
add
dec
add
mov
and
mov
add
mov
xor
add
add
add
incb
pushf
and
cmp
shll
sub
incb
inc
sysexit
incl
out
incb
jl
sti
add
incb
data16
inc
cmpsl
das
mov
rcl
pop
add
les
sti
in
push
add
incb
push
incl
stc
shll
add
jge
les
loope
sbb
cmp
cmp
cmp
mov
ljmp
stc
mov
incb
movsl
pop
add
jno
incb
push
xchg
dec
xchg
mov
xor
add
out
add
fucom
mov
std
and
mov
pop
mov
in
outsb
add
clc
lds
xchg
or
add
add
add
push
incl
lock
incl
fldt
lcall
add
out
inc
in
incb
cmc
out
dec
add
insl
pop
add
add
sbb
in
add
incb
mov
ljmp
incb
xchg
pop
stos
pop
incb
xchg
add
add
fidivs
jecxz
incb
jmp
incl
ja
gs
pop
add
dec
add
test
shll
js
mov
cmp
inc
add
incb
insb
add
mov
incb
mov
add
xor
shl
add
add
mov
out
inc
add
imul
cld
movsb
push
add
cmp
dec
add
add
aaa
incb
inc
xchg
adc
add
jns
je
push
fcom
jmp
add
push
incl
pop
add
mov
hlt
fstpl
add
add
add
or
fstl
incl
lods
mov
add
incb
int
aaa
incb
gs
add
pop
lods
mov
pushf
leave
or
pop
add
jp
fimuls
add
add
enter
mov
xchg
xchg
mov
add
mov
push
incb
sub
inc
sub
jg
add
xchg
jbe
inc
add
push
add
dec
mov
xchg
fldt
jecxz
incb
mov
div
popf
and
add
mov
pop
add
sub
xchg
loopne
jno
sub
and
add
xchg
test
in
incl
cltd
add
add
cli
scas
jae
incb
scas
sbb
sbb
incb
xchg
fxch
lcall
add
iret
push
add
incb
mov
insb
add
add
incb
push
add
mov
out
je
dec
mov
jl
std
ja
add
adc
add
incb
dec
add
push
add
add
xor
add
jns
lock
cmc
push
add
adc
add
incb
and
add
incb
pop
add
pop
scas
jg
push
dec
add
xchg
add
add
mov
aam
add
add
add
jb
mov
lods
pop
pop
add
incl
adc
add
fdivrl
sbb
mov
dec
data16
addb
add
fcmove
xchg
or
lahf
sahf
push
dec
and
add
jle
cwtl
sub
xorl
add
cld
add
add
incb
mov
dec
add
shl
rclb
incl
subb
push
add
add
add
add
ljmp
add
incb
movb
incb
mov
outsl
jae
mov
incl
clc
sbb
add
shll
incb
inc
aad
incb
pop
push
out
incb
ret
cmp
dec
add
mov
imul
lahf
popl
add
insl
rclb
incl
out
dec
not
ljmp
imul
add
insl
in
inc
add
adc
add
mov
insl
pop
sub
jns
lods
jbe
lods
and
add
cmp
sub
incb
push
add
sti
mov
jno
jo
xor
add
adc
add
incl
sahf
pushf
cli
mov
xchg
add
add
out
mov
leave
jp
jl
jae
incb
test
push
incb
cmpl
aam
andb
rclb
outsb
add
jecxz
sahf
dec
cmpsl
push
add
xor
add
jge
pop
stos
pushf
mov
fsubr
faddl
cmpsb
cmp
pop
cmc
xchg
int3
xchg
into
fucomp
movsl
int
lea
scas
adcl
incb
repz
stos
cmp
incb
ret
add
xchg
or
push
add
mov
add
mov
add
nop
mov
cmpsb
xchg
stos
xchg
push
add
pushf
pop
xchg
push
add
add
clc
hlt
cmpsl
push
add
and
add
dec
add
incb
stos
rcll
add
sbbb
add
dec
jp
push
mov
xor
add
pusha
add
mov
incl
mov
jl
dec
add
mov
arpl
add
inc
add
adcb
add
xlat
subb
add
movsb
mov
xor
add
add
incb
aaa
incb
les
push
add
add
mov
dec
aas
push
add
jp
and
add
call
or
add
sar
lds
mov
add
add
incb
sub
repnz
or
dec
or
add
and
add
jne
addr16
repz
mov
test
cmp
pop
add
push
cmp
out
incb
push
or
add
add
add
dec
add
cmp
ja
incb
fst
mov
sbb
mov
add
adc
add
call
adc
add
jl
lret
or
jl
sahf
iret
and
add
pop
jno
addr16
add
incb
out
inc
add
push
add
add
inc
lds
add
incl
mov
add
hlt
iret
mov
movsl
add
add
incb
adc
add
incb
aas
repz
mov
incb
mov
addr16
pop
add
loope
incb
mov
add
jns
add
add
add
cmc
ret
adc
add
incb
xchg
imul
or
cmp
add
add
inc
daa
incb
push
add
incb
cwtl
and
add
add
incb
inc
push
incb
mov
incb
xchg
gs
aam
mov
leave
aad
add
add
call
or
push
add
xchg
push
out
add
pushf
jne
sbb
jmp
jno
mov
adc
add
sbb
cltd
test
das
pushf
scas
into
pushf
rcr
std
sbb
out
cmpsl
in
add
or
imul
mov
les
add
add
shlb
mov
lock
aas
push
mov
std
fidivrl
add
pop
xchg
fucomip
test
gs
sub
xchg
xor
add
or
jo
daa
incb
out
xchg
roll
add
incb
ret
sbb
imulb
incb
incl
add
in
cltd
xchg
cld
aad
cmp
pop
add
mov
add
add
lods
dec
cmp
add
incb
mov
add
incb
aam
in
rorl
add
add
add
cmpsb
and
add
add
or
adc
add
incl
xchg
out
incl
jle
pop
incl
gs
incb
insb
add
nop
incb
xor
add
mov
fnstsw
out
cld
dec
add
sbb
int3
adc
add
xchg
enter
pop
incl
cmc
pop
out
and
add
shl
jp
mov
add
cmc
sub
add
add
mov
add
pop
aad
incl
jb
sbb
rorb
add
or
call
add
out
cmp
and
add
aam
add
add
incb
cmc
addb
add
into
inc
push
add
mov
pop
and
add
xchg
test
nop
xchg
pushf
jbe
push
gs
arpl
movsb
aam
scas
sbb
xchg
jge
pop
incb
or
in
rolb
push
adc
add
aaa
incl
scas
test
pop
add
mov
cmp
add
sbb
pop
add
add
add
sbb
xchg
aaa
incb
jbe
int
push
add
add
das
xlat
je
sti
out
add
imul
add
add
add
xchg
stos
pushf
mov
imul
add
incb
inc
mov
jmp
add
and
add
xchg
fbld
add
fmuls
add
add
inc
mov
fimuls
stos
push
scas
cmp
je
nop
or
pop
incb
add
add
incb
sahf
cmpsb
mov
ja
fsubrs
aaa
incb
mov
mov
and
add
incb
mov
add
incl
in
and
add
cli
jno
das
jg
incb
pop
decl
add
incl
mov
lcall
movsl
inc
add
and
add
jo
push
adc
add
imul
add
add
xchg
push
add
sarb
shll
sahf
dec
add
inc
xor
add
add
sbb
xchg
jns
add
incl
xor
add
sbb
incb
adc
add
xor
add
adc
add
incb
cmp
add
push
push
jecxz
incb
pushf
xchg
add
add
pop
incl
cmc
inc
jbe
xchg
or
pusha
add
cmpsb
pop
incb
movsb
jle
movsb
jp
outsl
out
or
fistpl
mov
incb
popa
xchg
sbb
push
add
incb
mov
or
pop
add
add
add
dec
inc
add
incb
adc
add
jb
into
hlt
mov
and
add
add
jbe
mov
fstp
insb
add
out
add
incb
orb
mov
cmpl
add
data16
add
push
add
popf
hlt
dec
sar
xchg
add
xorb
nop
inc
add
incb
sbb
lahf
movsl
xor
add
xchg
nop
shll
incb
pop
add
mov
test
and
add
aas
mov
cmp
lock
add
add
add
mov
add
incb
call
sub
xor
add
out
sbb
repnz
add
imul
add
lea
push
add
incl
inc
add
sti
lret
xor
add
incl
mov
inc
add
incb
ret
ret
jp
out
addr16
add
add
jnp
push
loop
jg
ffreep
sub
inc
add
lock
out
mov
sbb
add
dec
add
cltd
pushf
xor
add
cltd
push
imul
incb
clc
xor
add
add
pop
incb
lea
test
incl
cmpsl
aad
lret
push
add
add
incb
dec
cmp
add
add
test
loope
rcrb
cmp
rcll
fcmove
sub
idiv
mov
jecxz
incb
adc
add
mov
orl
in
pushf
pushf
fcoms
sbb
lods
mov
loop
shrl
daa
incb
inc
add
add
cmp
cmp
scas
lret
fdivrp
lahf
je
push
add
add
add
add
and
add
test
test
sbb
push
incb
fwait
add
push
xchg
fdivrl
dec
add
push
incb
and
add
incb
xchg
jge
into
std
in
inc
push
subl
jns
fdivrl
adc
add
add
add
add
sarb
mov
add
enter
arpl
incb
mov
incb
pop
divb
pop
incb
dec
mov
sbb
pop
incb
repz
aam
das
pop
das
push
fcompl
add
fstl
pop
add
add
and
add
pop
incb
loope
stos
jecxz
add
cld
cmp
ucomiss
mov
incb
negb
add
add
mov
mov
dec
add
xlat
in
stos
hlt
incb
mov
fs
jb
or
and
add
add
dec
xor
add
add
incb
jl
leave
mov
dec
and
in
incl
dec
add
add
add
fmull
xchg
jp
push
add
and
add
incb
imul
add
insl
dec
add
add
incb
shlb
add
cld
inc
loop
lret
pop
incb
sahf
xchg
xlat
adc
add
daa
incl
jne
dec
add
mov
dec
add
add
mov
jne
loop
incb
jnp
incl
xorb
test
outsl
pop
sahf
sub
xchg
mov
xchg
subb
add
lahf
fcoml
add
ret
xchg
xlat
cmp
in
shl
lret
jg
std
cmp
push
push
gs
add
add
sub
ret
jl
add
add
dec
ficompl
incb
inc
orb
jge
cmp
incb
adc
popa
arpl
mov
out
dec
add
dec
and
add
add
add
outsl
jmp
add
incb
sub
mov
add
add
xchg
incb
cmp
sub
adc
add
addr16
incb
sub
xchg
aad
incb
data16
and
add
mov
int
jge
aad
incl
pop
test
lds
incb
dec
add
adc
add
das
add
add
jnp
push
incb
cli
pop
fwait
jecxz
add
incl
sbbb
jge
mov
add
insb
add
jl
xchg
stos
push
incl
add
add
ljmp
bound
int3
jecxz
sti
repnz
push
add
cwtl
stos
xor
add
loopne
add
pop
cltd
jbe
xchg
adc
add
xor
add
mov
inc
add
inc
add
add
mov
add
incb
movsb
out
incb
bound
or
and
mov
add
cmpb
shl
popa
mov
mov
incl
pop
add
add
in
mov
incb
jl
push
add
stos
mov
icebp
sub
jge
cmpsb
dec
xor
add
add
pushl
incl
incb
incl
xor
add
xor
add
std
jle
aaa
incb
xlat
xchg
lret
lcall
adc
rolb
xchg
add
into
into
loope
push
incl
sub
cmp
lcall
filds
incb
adc
add
jns
popa
jge
add
incb
cmp
push
add
jb
inc
add
add
stc
and
repz
add
incl
cmp
jecxz
pop
xchg
or
add
incb
mov
mov
or
popa
pushf
sti
in
add
dec
sahf
cmp
ja
fstpt
add
xchg
xlat
or
sahf
sub
add
add
aaa
incl
movsb
in
popa
jns
xchg
sbb
add
int
add
js
ljmp
add
incb
shl
gs
xchg
inc
add
popa
jl
js
movsl
mov
xor
add
mov
add
orl
insl
in
imul
incb
fisubl
incl
test
mov
incb
mov
dec
cld
jo
repnz
push
add
incl
ret
push
add
incb
fldt
push
add
insb
add
xchg
pop
add
and
add
nop
lcall
add
incl
cmp
add
add
test
and
add
incb
bound
stc
loopne
pop
mov
js
inc
adc
add
add
jbe
test
incb
xchg
mov
fstl
incl
push
add
test
add
cmpb
icebp
out
xlat
or
incb
push
add
call
add
or
in
incb
adc
add
incb
loope
jnp
add
and
add
add
add
xor
add
add
add
add
add
incb
loopne
jecxz
in
aas
inc
pop
movsl
cmp
add
add
and
add
add
jae
mov
add
push
sub
lahf
mov
lahf
scas
push
xorl
mov
jmp
add
loope
add
add
add
add
mov
add
add
mov
inc
imul
fsubrl
ljmp
incb
fwait
adc
add
hlt
sub
dec
push
mov
ja
add
test
add
incb
cmpl
test
and
add
incb
sub
outsl
cli
ljmp
sbb
je
jecxz
pop
cmp
cmpl
std
popa
mov
out
jbe
lock
clc
jb
lcall
inc
add
incb
scas
cs
add
daa
incl
mov
add
add
or
incb
xchg
xchg
ja
popf
movsl
inc
xor
icebp
das
jmp
sbb
push
incb
add
sub
sub
add
add
pop
incb
add
push
add
incb
xchg
loopne
inc
add
fcoml
add
jg
incb
jo
sbb
xchg
lcall
and
add
incb
xor
add
xor
add
leave
movsb
push
sbbb
incb
pusha
add
add
add
in
add
outsl
fildl
stos
or
add
add
pop
test
incb
xchg
dec
add
add
jmp
les
das
push
add
add
out
add
incb
push
push
sub
jecxz
fwait
lahf
pop
jge
add
push
add
hlt
cli
mov
add
hlt
cmpsl
xchg
mov
test
fdiv
xchg
dec
jne
add
inc
push
incb
movsl
or
push
add
fcompl
add
inc
push
pushf
mov
aas
mov
add
jbe
fwait
jno
shrb
ljmp
add
or
lods
and
cmpsl
das
push
bound
rclb
adc
add
inc
add
inc
add
mov
cli
incb
in
inc
pop
add
add
popa
rolb
fists
incb
mov
popf
cli
aaa
incb
xchg
sub
push
add
loop
cwtl
rorb
adcb
add
pusha
add
add
add
push
dec
add
pop
incl
lds
in
outsl
int3
rcll
add
push
push
add
incb
and
add
add
movl
fdivp
mov
int3
stos
mov
lds
add
push
push
add
xlat
lea
add
inc
add
negl
bnd
pop
mov
add
incb
fildll
jnp
incb
in
movsl
ret
sub
out
loopne
imul
cltd
or
mov
inc
into
popf
pop
incb
pop
inc
shll
add
push
add
movsb
xorl
test
add
xor
dec
mov
rol
xchg
pop
sub
movsb
and
add
sbb
sbb
rorl
xchg
jnp
loopne
push
inc
jne
inc
add
add
sub
mov
loope
fisubrl
pop
add
adc
add
hlt
mov
out
add
add
push
add
and
incb
mov
fdivrs
incb
mov
ljmp
dec
pop
add
add
arpl
fdiv
xchg
or
frstor
jno
fdivrs
lods
xor
sub
inc
add
sub
sbb
jecxz
sti
xchg
incl
jp
scas
mov
sbb
inc
pusha
add
add
add
subb
mov
or
inc
jg
incl
push
inc
add
add
add
outsl
bound
inc
add
add
sub
mov
pmullw
aad
pop
add
lock
mov
fucom
xor
add
adc
add
jle
lret
mov
jl
jge
add
dec
jbe
dec
add
push
adc
add
fdivs
or
repz
add
jno
sub
mov
dec
bound
add
add
jmp
or
xor
add
add
fdivr
xlat
adc
add
adc
add
fbld
sub
mov
lret
sbb
arpl
pop
rolb
add
add
mov
add
add
jnp
in
aaa
incb
and
add
mov
add
incb
lock
add
or
incb
fdivrl
std
imul
xchg
call
sahf
and
incb
in
mov
pop
add
add
pop
gs
repz
bound
out
int3
or
incb
popf
adc
add
mov
imul
lret
int
push
add
mov
push
add
jle
jecxz
jecxz
jl
mov
adc
add
pop
add
icebp
sti
add
add
incb
stos
aaa
incb
push
cmc
xor
add
rol
call
inc
xor
jge
add
mov
add
add
add
incb
pop
and
add
mov
jns
or
out
incl
mov
in
int3
pop
add
hlt
xor
add
mov
add
incb
data16
loop
incb
jbe
daa
incb
xor
add
repz
lret
sub
xchg
mov
incb
xchg
les
add
aam
testl
fadds
ja
mov
sub
add
cmp
pop
add
mov
sbb
jbe
mov
fsub
jne
add
out
incb
stos
in
js
ljmp
add
incl
shll
sbb
fucomip
add
add
mov
incl
xor
pop
incb
push
incl
pushf
pop
incl
sub
jb
pop
add
cmpsl
mov
mov
add
sbb
jnp
hlt
lret
ret
add
mov
ret
repz
add
fldenv
jae
add
aas
xor
add
inc
in
jge
ja
add
incb
je
in
loopne
adc
add
incb
in
incb
das
mov
sub
inc
data16
incl
stos
mov
add
add
add
incb
sbb
add
mov
mov
jge
incb
dec
add
iret
xor
add
incl
orb
add
clc
in
out
add
add
jge
add
incb
out
and
add
sbb
pop
incb
mov
in
jbe
pop
add
push
add
out
push
add
scas
mov
add
sar
js
cmpsb
push
add
incb
fbld
incb
cmc
and
add
cli
adcl
pop
hlt
das
push
and
add
cltd
cmpsb
fnstenv
incb
ror
mov
std
pop
add
add
xchg
or
cld
sub
add
add
add
add
add
add
incl
mov
add
jl
or
jno
xor
incl
cmp
sub
sub
dec
add
xchg
xor
cmpsl
stc
scas
std
out
aam
jb
repnz
push
cmc
jecxz
sbbl
add
inc
add
add
add
int
incb
jge
xchg
xor
add
and
add
pop
add
incl
shll
mov
in
push
add
add
jbe
cmp
inc
mov
add
incb
cmp
cld
lock
add
mov
sti
or
incb
mov
xchg
test
push
incb
lods
sub
incb
aas
je
out
push
add
fsubrs
add
mov
sub
xor
add
out
adc
cmp
push
dec
add
xchg
bound
idivb
add
add
lods
outsl
sti
mov
incb
movsb
push
add
incb
fmul
and
incl
into
push
incb
cmovne
incl
dec
add
add
xchg
pop
pushf
stc
jle
insl
pop
add
incb
scas
and
add
xlat
dec
add
repz
add
push
sbb
or
rol
sub
xchg
aad
add
ljmp
sub
mov
incl
xchg
lds
adc
repnz
push
aaa
incl
dec
insb
add
cmc
aad
incb
js
sbb
popa
jnp
lea
incb
push
add
popl
add
sub
rol
int
push
incb
pushl
incl
stos
dec
push
add
push
dec
add
jnp
incl
add
js
sbb
mov
add
call
incb
adc
add
add
cmc
sbb
mov
incb
out
add
test
push
add
jle
cmc
or
shl
pop
addb
push
add
xor
add
add
add
incb
add
add
clc
out
sahf
xor
add
push
add
sub
scas
cmp
inc
jg
incb
dec
jge
xorb
aad
add
incb
popa
add
incb
and
add
incb
or
nop
xor
incl
sahf
leave
xor
add
add
add
cmc
push
add
xor
add
mov
add
movsb
xor
add
incl
mov
aas
and
xchg
inc
and
add
dec
add
call
sub
add
sub
out
mov
add
loopne
imul
jbe
cli
push
dec
mov
add
jmp
vmovapd
mov
pop
in
call
add
push
incb
mov
cmp
sub
shrb
outsl
aaa
incb
imul
add
or
sub
incb
mov
mov
je
jp
inc
add
add
popf
fisubrl
add
sbb
cmp
movsl
insb
add
inc
add
and
add
mov
mov
add
aad
inc
add
add
incb
jle
fldt
jmp
add
incb
pop
incb
cwtl
dec
add
add
or
lds
or
icebp
das
pop
inc
stc
lock
add
repnz
xchg
daa
incb
movsb
pusha
add
incb
sbb
push
xor
add
or
pop
dec
push
out
pop
add
pop
incb
or
incb
cmpsb
call
xchg
jne
sbb
and
add
add
mov
lret
ja
incl
popf
xor
add
add
data16
incb
cmpsb
sarb
adc
add
incl
ljmp
sbb
jnp
add
mov
cmp
sbb
push
pushf
pop
add
jl
jo
fimuls
inc
add
jno
cmp
cmp
adc
add
xlat
adc
add
adc
add
add
add
incb
add
add
add
add
mov
pop
add
les
sahf
orb
popa
das
mov
sub
jl
adc
add
xchg
in
mov
sub
or
je
xchg
pushf
jo
in
jnp
mull
add
add
add
not
mov
add
add
lahf
sbb
repnz
add
incl
inc
pop
incb
or
les
shr
loope
sbb
incb
out
dec
add
rep
sub
sbb
testl
xor
add
incb
fsubl
clc
or
pop
add
imul
lock
add
fst
and
add
incb
add
add
incb
fisttpl
test
xchg
jp
sbb
loop
orb
add
popf
aam
add
data16
add
lcall
xchg
mov
nop
shrl
incb
xor
add
add
sbb
or
hlt
push
in
add
int3
movsl
loope
sbb
add
incb
mov
adc
add
mov
call
adc
add
les
incb
adc
add
add
incb
add
add
cmp
mov
incb
dec
incl
adc
add
or
push
add
add
xor
add
add
pop
dec
mov
add
cmp
pop
add
push
add
xor
add
dec
and
add
jl
mov
push
add
inc
add
mov
out
mov
incb
xor
add
push
incb
mov
mov
add
iret
ret
mov
add
jg
add
incb
xor
add
xchg
sub
mov
incb
stos
dec
imul
lret
jns
add
incb
loope
add
add
andl
push
mov
icebp
out
incb
scas
inc
fcoms
add
incb
push
add
add
add
mov
add
push
movsb
ds
clc
mov
incb
pushf
out
incb
fnstenv
add
incl
cmpsb
lcall
icebp
mov
add
xchg
push
add
pushf
add
incl
inc
sub
incl
lret
add
incb
jmp
add
incb
fisttps
add
jbe
xchg
sub
test
jle
mov
test
cmc
or
sahf
dec
je
jmp
pop
incb
cmp
js
mov
incb
push
incb
push
fdivl
jle
incb
push
add
incl
inc
aad
add
incl
or
mov
or
cmp
out
mov
add
incb
and
add
dec
add
add
daa
incl
and
add
dec
add
mov
push
add
adc
add
mov
adc
add
add
andb
cmpsb
lret
rcrb
add
add
add
jl
or
fidivrl
add
jp
pop
movsb
inc
add
add
incb
mov
add
add
incl
clc
jno
sub
repnz
add
incl
push
add
dec
lret
and
add
mov
add
xor
inc
cltd
ljmp
jle
jae
icebp
adc
add
inc
add
pop
add
incb
mov
incb
sub
fcmovbe
repnz
aaa
incb
pop
xlat
xor
add
shr
je
and
add
incb
mov
movsb
leave
nop
sub
jmp
ror
mov
call
incb
adc
add
ja
add
call
lods
or
pusha
add
incl
cmp
add
jno
imul
enter
xchg
jmp
xchg
incl
jnp
scas
and
add
mov
dec
loopne
add
sar
lock
xchg
loop
add
xchg
dec
add
add
incl
pop
jno
incl
inc
test
scas
push
add
cmp
add
mov
sbb
sbb
insl
xchg
add
incb
mov
shlb
add
gs
cmp
cli
mov
add
sahf
jns
incb
inc
fnstcw
mov
add
and
out
notl
add
jp
jo
xor
add
lods
mov
rcrb
test
xlat
adc
add
mov
test
push
xchg
dec
lcall
test
add
and
add
out
incb
cmpsl
shlb
adcb
addl
add
clc
imul
popl
add
ja
push
jae
jns
incb
or
incl
aad
add
pop
add
add
pop
incl
lahf
test
repnz
cmp
jge
adc
add
xchg
enter
lea
incl
rorb
xchg
inc
xchg
mov
lcall
fsubl
incb
push
cltd
dec
data16
mov
lea
sbb
mov
add
add
add
add
data16
add
incb
add
add
incb
ljmp
sub
cmp
add
dec
or
test
dec
or
fcomip
out
or
add
add
mov
cmp
xor
add
imul
add
add
inc
cld
scas
xchg
add
add
in
data16
add
mov
xchg
add
outsb
add
in
fsqrt
lret
pop
add
in
sub
pop
sub
mov
hlt
lret
add
fimuls
push
mov
sbb
add
add
incb
aaa
incb
xor
add
add
pop
add
add
or
inc
add
lock
xor
add
cmc
mov
sub
add
incl
sbb
mov
icebp
insb
add
pop
ret
xor
add
add
inc
lock
push
add
incb
mov
incb
call
push
add
sub
mov
mov
incb
xlat
in
in
xchg
out
push
in
add
add
cmp
incb
in
jb
iret
out
xor
add
stos
adc
add
or
clc
enter
add
test
inc
add
add
les
ret
push
add
int3
dec
sub
dec
mov
add
cli
cs
xlat
pop
mov
pop
incb
aam
stos
sub
add
incb
scas
fidivl
xorl
add
je
inc
ret
int3
cmp
aad
dec
scas
pop
xor
xchg
dec
add
incl
pop
add
dec
pop
add
xchg
rcl
das
dec
add
mov
arpl
inc
add
incb
adcl
push
sbb
insb
add
add
push
incb
fstl
sbb
mov
xchg
gs
xlat
sarb
aas
out
mov
add
incb
nop
push
fldt
sbb
sub
cmpl
add
push
add
insb
add
mov
loope
incb
xchg
cwtl
push
add
incb
inc
inc
add
dec
add
jno
and
add
add
pop
sbbl
lret
add
add
incl
arpl
dec
push
add
dec
add
test
iret
negl
andb
and
incb
xchg
push
out
rol
das
xchg
fld
jecxz
test
fdivp
lods
add
add
incb
and
add
incb
fcmovb
cmp
nop
mov
dec
ja
push
add
pop
add
and
add
add
insb
add
incb
sti
and
add
or
xor
jnp
incb
push
add
add
jmp
xor
add
pusha
add
addr16
xorl
add
incb
jb
xorb
add
inc
add
jne
xchg
xor
add
xor
incb
imul
add
incb
fsubrs
add
add
xchg
incb
dec
add
add
cmpsl
in
push
add
jae
sub
repnz
adc
add
pop
incb
hlt
int
add
pop
fcos
mov
ror
incl
sbb
mov
fmull
incb
repnz
add
add
sub
aam
push
add
leave
push
add
mov
out
icebp
inc
add
stc
movsb
les
incb
das
xchg
dec
add
test
js
push
mov
add
add
incb
xor
add
mov
add
add
or
push
add
add
mov
mov
and
add
incb
sbb
jle
adc
gs
push
lds
add
sub
fcom
cld
adc
mov
push
lea
fsub
test
fnsave
incb
sbb
jp
jmp
jne
xor
add
scas
pop
add
test
aam
incb
jb
cmc
int3
fcmovu
mov
incl
cmp
push
add
add
cltd
jle
lret
mov
add
add
xor
add
incb
lds
sub
clc
or
add
incl
add
add
int3
fstpt
mov
add
add
push
xor
add
clc
push
incb
xor
add
incb
insl
ret
xor
add
add
xchg
adc
add
fmull
add
add
rcr
mov
dec
add
mov
adc
add
add
in
sbb
add
rclb
movsb
iret
mov
pop
incl
adc
add
or
and
add
clc
sbb
popa
cmc
dec
lods
mov
in
imul
add
add
insb
add
mov
add
jbe
ret
add
stos
daa
incb
dec
add
in
incl
incb
lcall
cli
push
add
incb
mov
add
pushf
adc
add
adc
add
sbb
add
sbb
incb
pop
incb
or
movsb
mov
jne
add
add
add
sbb
and
add
incb
scas
pop
mov
and
add
stos
push
push
popf
lds
add
arpl
cmp
mov
ja
mov
hlt
fnstsw
lods
shll
add
das
mov
add
jp
add
add
dec
add
lea
dec
add
sti
mov
incl
stos
cmp
shrl
ljmp
sti
jmp
push
adc
add
mov
incb
scas
mov
inc
add
lcall
pop
add
add
mov
jne
xchg
jmp
mov
incb
and
add
mov
mov
ret
jmp
inc
fisubs
jne
loop
sbbb
jo
sarb
add
add
je
gs
add
stc
xchg
je
mov
add
add
lds
shr
dec
pusha
add
inc
add
cmc
and
add
xlat
push
add
xor
add
insl
adc
add
pop
add
push
add
incb
and
add
out
jne
add
incb
or
pop
icebp
adc
add
aaa
incb
mov
insl
jnp
cmp
cmp
jmp
incb
incl
bound
mov
pop
add
add
dec
adc
add
incl
xchg
jp
dec
or
inc
add
fbld
incb
xor
add
add
roll
mov
adc
add
popa
sti
shlb
imul
push
incb
incb
push
cmc
add
add
xchg
mov
pop
incb
jge
incb
hlt
arpl
incb
cld
jg
add
bound
notb
daa
incb
mov
sbb
incb
cmp
mov
fwait
jmp
mov
aad
add
mov
add
stos
fiadds
fisttpll
insl
fdivrl
ljmp
add
out
or
test
sub
fidivs
movsl
incb
arpl
pop
or
ljmp
mov
incb
or
push
add
incb
xchg
dec
add
pop
add
fildl
popf
je
or
incb
and
add
imul
add
sbb
adc
adc
add
incb
sub
push
incb
stos
jnp
incb
pop
das
xor
shll
add
mov
add
incb
imulb
sbb
add
and
sahf
jb
cld
dec
adc
add
add
add
add
mov
cmp
inc
add
leave
imul
mov
mov
mov
pop
add
add
xor
add
test
add
aaa
incb
xchg
cmc
add
add
into
pop
pop
add
jl
push
incb
insb
add
stos
pusha
add
cmp
insl
inc
add
mov
enter
call
iret
cmpsb
outsl
lds
je
push
incb
test
pop
incb
dec
test
insl
mov
incl
ret
sbb
add
incb
lahf
pop
add
shrb
add
fiadds
outsl
incb
add
incl
xor
add
incb
imul
jmp
add
repz
xchg
loopne
cmp
mov
in
incl
fildl
dec
addl
dec
in
test
incl
add
sti
or
hlt
shr
xlat
fstp
add
add
mov
test
xorb
add
test
cmp
jl
stos
push
incl
pop
sub
std
repz
add
mov
push
add
or
sbb
xchg
popa
pop
adc
add
jp
imul
add
add
pop
pop
incb
mov
xorb
mov
test
movsl
mov
cld
mov
sbb
xchg
sub
incb
call
daa
incb
mov
add
jnp
add
pop
add
or
stos
dec
lds
incl
jle
adc
add
add
incb
shrl
add
add
fwait
xchg
fsub
jle
add
incb
das
add
add
jmp
scas
out
sbb
rorl
and
add
movl
cld
add
add
incb
inc
add
hlt
xchg
mov
imul
xor
add
cmp
pop
add
push
add
mov
cld
mov
inc
or
sbb
push
jge
jns
pop
mov
add
stos
pop
add
arpl
cltd
movsl
mull
xchg
lock
dec
mov
add
xchg
add
push
add
incl
inc
mov
movsb
idivb
xchg
iret
cmpsl
loopne
int3
pusha
add
add
cmc
lds
add
add
cld
push
add
push
add
adc
add
movsb
dec
add
push
aam
mov
push
fwait
jnp
add
add
incb
addl
sub
sbb
xor
add
add
add
add
loopne
and
add
and
add
incb
data16
pop
add
dec
ret
add
ja
mov
scas
add
add
adc
add
incb
sarl
push
incb
push
add
add
add
add
incl
out
test
mov
inc
stc
lods
addr16
cmpsl
ljmp
pop
cmpsl
xor
add
add
into
imul
and
add
add
mov
jle
and
add
incb
das
sarb
add
add
sub
inc
add
jge
pushf
mov
into
loopne
icebp
sub
incb
in
and
add
dec
add
cmp
jae
add
or
adc
add
add
add
incl
add
add
stos
jge
incl
andb
lret
mov
stos
jge
mov
incl
into
jl
xor
add
aad
out
out
out
xchg
and
add
add
add
ja
rorb
ja
cwtl
call
push
add
add
mov
mov
dec
sahf
call
add
cltd
shl
bound
mov
jg
incb
push
call
add
cmp
incl
lcall
repz
incb
cmpsb
js
adc
add
incb
xchg
add
je
mov
imul
push
fimuls
add
add
cmpl
lock
xorb
add
add
add
add
mov
push
add
imul
iret
push
add
insb
add
incb
jmp
dec
into
or
mov
incb
in
pop
dec
ljmp
add
incb
cmpsb
push
add
and
add
add
mov
incb
dec
add
add
enter
mov
sub
inc
add
jg
movsb
sbb
incb
jg
sub
loop
lds
jb
jge
mov
aad
lods
mov
add
incb
ficompl
cld
test
loop
clc
inc
add
incb
out
cmp
in
dec
add
mov
add
loope
insl
out
loop
test
rcl
and
add
incl
repnz
jmp
jns
mov
push
add
js
jecxz
add
incb
das
mov
cmc
stos
jmp
mov
and
add
dec
add
add
add
add
incb
pop
add
sub
inc
add
add
add
fucomip
mov
pop
and
add
cmp
adc
add
jecxz
dec
add
shll
add
loope
add
test
pop
add
pusha
add
add
add
loop
incb
fadd
int3
lock
adc
add
sahf
gs
pop
jle
test
incl
popa
and
add
inc
add
push
js
rorl
incl
aas
push
daa
incl
push
add
and
add
push
incl
mov
loope
movsb
push
add
lcall
add
nop
dec
cmp
mov
mov
add
sub
int
cmp
dec
add
add
add
add
add
xchg
outsl
insl
outsb
add
aaa
incl
xor
add
flds
incb
mov
add
or
movsb
flds
adc
add
mov
inc
gs
int3
mov
push
add
sahf
imul
mov
aam
sub
add
add
add
inc
add
add
lock
add
pop
sbb
add
inc
fcmovb
jo
sbb
out
pusha
add
cmc
adc
add
sbb
sbb
push
int3
lds
incb
cltd
mov
jp
data16
sti
pusha
add
add
incb
rcll
ret
enter
fnstenv
incb
adc
je
mov
rcll
into
arpl
sub
loop
push
incb
stos
push
cmc
pop
add
add
adc
add
mov
xor
lahf
std
push
incl
push
add
sbb
and
add
pop
add
dec
sbb
aas
jp
add
incb
rcll
incb
icebp
pop
incb
mov
incb
xorb
inc
add
add
fucom
adc
add
push
pop
add
xor
mov
aaa
incb
jp
iret
xor
add
pushf
dec
movsb
jecxz
out
adc
add
cld
sbb
add
shll
incb
add
add
push
pop
dec
add
jne
incb
fadd
aad
add
outsl
or
incb
nop
stos
mov
dec
pushf
lret
sar
pop
std
push
add
add
jb
add
fmul
and
add
incb
adc
add
add
incb
dec
dec
mov
js
mov
incb
inc
pop
sbb
les
incb
cmpsb
cmp
movsb
push
add
add
test
incb
in
out
xchg
add
daa
incb
jns
xor
add
inc
add
add
jmp
incb
std
add
add
cltd
scas
dec
add
add
lahf
orb
mov
push
add
leave
sbb
test
jmp
imul
outsl
pop
add
sbb
add
add
add
mov
iret
mov
push
add
incb
fsub
pop
add
lods
stos
push
add
jg
mov
les
scas
or
add
incb
ret
loop
add
ret
pop
incb
xchg
jno
fsubp
test
add
cltd
int
inc
cltd
fidivrs
add
pop
add
into
add
cmpsl
pop
incb
xchg
fstl
fisubs
dec
inc
adcb
add
adc
add
incb
push
scas
mov
ljmp
add
incl
inc
test
nop
incl
incb
xchg
mov
sahf
ret
shrb
mov
add
cmpsb
cmp
aaa
incl
mov
add
incb
pop
adc
add
inc
xchg
sbb
sub
add
sub
and
add
inc
add
inc
add
xor
add
addl
scas
cltd
add
add
pusha
add
incb
mov
or
imul
shrb
in
add
and
add
push
add
add
incb
cli
mov
inc
mov
push
add
sbb
mov
stos
sbb
shlb
add
or
jecxz
outsb
add
arpl
inc
add
sbbb
ja
cmp
inc
ja
lods
xorl
add
shll
incl
push
incb
imul
fstpt
pop
add
jns
arpl
cmpsl
data16
add
add
sti
cmpsl
pusha
add
jno
pop
xchg
xchg
mov
mov
push
arpl
mov
add
stos
pop
add
addl
add
mov
out
clc
inc
xchg
mov
stc
outsl
decl
or
cmpsb
sahf
pop
and
add
dec
mov
push
incb
sub
lea
inc
lock
add
mull
rclb
and
add
cmc
push
add
lods
pop
xor
incb
jg
cmp
push
add
incb
and
add
incb
lret
cmp
idivb
movsl
adc
add
data16
sti
rcrl
rorb
jne
incb
fldt
add
jecxz
mov
inc
dec
xlat
xor
add
incb
cmp
sbb
add
incb
ret
inc
add
add
xchg
xchg
lods
jmp
pop
add
add
push
add
jno
repz
mov
adc
add
jp
popf
das
add
add
add
sarl
xor
add
add
add
jle
outsb
add
cld
adc
add
aas
dec
and
add
add
mov
add
mov
mov
mov
inc
add
sbb
adc
add
dec
xchg
adc
add
and
add
pop
add
add
push
sub
mov
or
add
lahf
daa
incl
mov
fcoms
add
and
jo
and
add
ljmp
add
cli
aaa
incl
dec
je
cmp
je
enter
mov
xor
add
incb
add
incl
sub
add
add
mov
add
adc
add
push
add
add
jle
xorb
add
xchg
cmp
xor
jne
arpl
stos
roll
add
mov
pop
lret
add
dec
rcrb
sub
in
popa
mov
call
mov
add
inc
add
mov
in
adc
add
or
punpcklbw
cwtl
in
addr16
add
incb
pop
add
pop
incb
and
add
inc
add
add
incb
dec
add
add
sbb
stos
addr16
mov
add
add
and
add
aas
add
add
sahf
inc
add
dec
incb
sbb
sub
jp
mov
add
mov
jno
incl
test
loop
flds
incb
aas
clc
fwait
add
stos
dec
dec
add
flds
sub
cli
add
add
add
loopne
add
pop
add
inc
add
sbb
add
iret
push
cltd
dec
cwtl
shr
add
jnp
incb
dec
mov
incb
dec
faddl
add
lahf
test
insb
add
incb
pop
add
add
add
dec
aas
mov
xor
add
incb
out
add
add
clc
loop
add
aas
adc
add
push
add
sub
fwait
lret
pusha
add
incb
add
add
xchg
cwtl
dec
add
push
add
sbb
mov
incb
inc
add
dec
add
insl
push
add
push
mov
cwtl
mov
xor
add
call
add
add
add
popa
faddl
incl
adc
icebp
mov
add
xor
add
sbb
push
incb
sbb
int
or
mov
test
or
jl
stos
sub
incb
cwtl
out
mov
xchg
shrb
incb
je
jle
lret
mov
je
xchg
nop
mov
incl
in
aaa
incb
sahf
pop
add
add
andb
add
das
bound
inc
add
dec
add
repz
add
cmp
xor
add
add
incb
dec
add
fcompl
pop
add
sbb
dec
insl
push
mov
adc
cmpb
add
add
pop
mull
incb
mov
inc
in
dec
or
xchg
sbbb
addr16
pop
add
add
incb
bound
js
icebp
sbb
add
incb
add
pop
add
add
scas
mov
aas
and
add
add
add
incb
rep
add
inc
add
dec
mov
add
xchg
cltd
stos
in
xor
add
incb
cvttps2pi
or
cltd
xorl
add
incb
dec
adc
add
incb
mov
fisubrl
rolb
gs
test
das
jecxz
add
sbb
pop
add
add
out
sub
cmp
and
add
or
lods
push
add
das
jb
push
add
sarb
add
dec
add
fwait
mov
incb
dec
add
incb
dec
fdivp
pop
dec
iret
dec
sub
adc
add
mov
pop
mov
incb
adc
add
fistps
add
daa
incb
add
add
add
std
push
add
add
add
mov
add
add
pop
incl
jae
pop
add
dec
cli
jno
add
add
lods
aad
adc
add
cwtl
ret
xor
add
mov
xchg
xorb
add
incl
jb
adc
add
add
xchg
mulb
sbb
adc
add
inc
or
std
add
add
pop
and
hlt
loopne
gs
add
incb
push
incb
lds
incb
push
incb
les
xchg
sarb
sbb
test
lret
ret
inc
xor
add
incb
mov
xlat
lea
push
push
add
lcall
and
add
xor
add
insl
mov
add
mov
xor
add
stos
cli
insb
add
xor
add
insb
add
add
incb
loop
enter
add
sbb
adc
mov
sub
add
add
or
test
mov
test
xchg
jg
out
cmpsl
pop
add
add
fistpl
add
pop
xor
add
enter
ret
push
add
add
incb
lods
adc
add
scas
and
add
ja
incb
ret
push
cld
in
or
push
incl
loopne
jecxz
std
int
das
out
fwait
dec
fists
incb
imul
mov
cmp
adc
add
popf
outsb
add
incb
mov
add
incl
sbb
cmp
jns
incb
leave
aas
mov
lock
dec
imul
xor
add
jae
add
mov
pop
incb
sbb
dec
sahf
leave
mov
cmp
scas
mov
cmp
cmp
outsl
sub
data16
jl
and
add
cwtl
cld
push
incb
pop
lea
or
cmp
rol
xor
add
imul
incl
dec
add
cmp
xchg
add
or
or
mov
incb
xchg
incb
or
roll
cs
mov
jo
stos
cmp
mov
incb
incl
shlb
and
rcrb
invd
add
add
incb
cmp
inc
mov
iret
pop
inc
add
incb
mov
divb
incb
nop
insl
lret
cwtl
push
jnp
pop
add
mov
push
add
jo
iret
mov
incb
mov
dec
add
add
scas
repz
cmp
lock
and
add
std
test
push
sti
popf
sub
pushf
cmp
inc
add
mov
jno
mov
xor
test
dec
add
add
pusha
add
lret
loope
add
fprem
rclb
add
repnz
add
incb
or
cmpsb
bound
xor
add
add
addr16
mov
mov
add
sbb
push
add
incb
inc
adc
add
incb
jae
push
xor
add
add
pusha
add
test
incb
mov
outsb
add
jnp
pop
hlt
mov
incb
aad
out
incb
aas
cmpsl
leave
in
or
ror
push
add
test
add
sti
imul
incl
dec
add
and
add
add
cmpl
add
insl
or
sbb
incl
ds
enter
mov
add
inc
add
rcll
sahf
mov
insl
jg
in
mov
add
aad
out
add
add
jge
mov
add
mov
jo
incb
int3
mov
incb
xor
add
in
rorl
mov
add
add
add
add
sbb
push
cmp
mov
add
cmc
push
add
scas
sub
shrb
fidivl
jb
loop
add
in
pop
add
cmp
add
add
loope
push
add
cmp
imul
add
add
in
hlt
into
and
add
das
ficoms
stc
fwait
mov
push
incb
inc
add
add
call
ja
and
add
repz
fwait
mov
out
incl
fldcw
add
inc
add
pop
add
add
mov
std
dec
leave
loop
add
incl
pop
incb
das
test
dec
add
popa
dec
mov
hlt
sub
orl
jne
incb
icebp
mov
dec
iret
lret
lahf
push
add
incb
into
push
dec
call
or
add
incl
pop
add
xor
add
incl
inc
add
or
add
add
ljmp
pop
add
jbe
insb
add
add
xchg
or
add
lret
incb
add
add
bound
das
ret
add
jecxz
ficompl
add
push
jmp
add
xchg
fimull
dec
add
bound
add
add
incb
gs
pop
inc
add
incb
and
add
incl
pop
incl
rcl
jnp
int
incl
push
incb
dec
add
add
inc
out
out
add
adc
mov
pop
pop
arpl
stc
cmp
add
add
add
incb
or
loop
or
mov
jb
pop
cmc
jmp
incl
test
jl
pop
sbb
outsb
add
mov
imul
add
incb
sbb
test
pop
add
jecxz
sbb
jp
test
xchg
incb
adc
add
lret
adc
add
lea
sub
mov
add
incb
in
inc
cli
sub
fstpl
dec
add
xchg
in
add
add
js
jle
mov
xchg
and
add
ret
pop
add
fadd
enter
add
add
add
sub
push
add
incb
shll
sub
add
add
data16
add
sbb
xor
imul
incb
jb
out
daa
incb
pop
or
sarl
pop
movsb
sarb
xor
add
lret
inc
or
dec
shrl
incb
mov
jmp
movb
jge
add
in
pop
incb
insb
add
fisubl
incb
jecxz
dec
add
dec
jae
add
mov
pop
add
data16
daa
incb
dec
add
insl
jne
jns
aas
and
popa
push
add
dec
add
and
add
fwait
in
push
add
mov
mov
incb
jae
cmp
aas
adc
xchg
mov
add
xchg
dec
add
scas
negl
add
mov
jge
add
pop
push
incb
movsb
std
call
add
jl
std
cwtl
add
incb
fists
mov
jno
add
incb
inc
add
cmp
clc
into
jmp
mov
xchg
aad
lahf
or
and
add
cmpsb
and
add
incb
rorl
mov
dec
pop
cltd
mov
push
fimuls
std
cmp
or
sbb
xor
add
cmp
push
add
incb
xchg
insl
mov
inc
jmp
sti
out
jnp
test
das
addr16
add
add
in
adc
repnz
aam
lret
mov
add
fidivl
pushf
jg
shlb
and
push
add
push
add
push
add
add
incb
shll
push
add
and
add
add
sbb
incb
mov
incl
sahf
repnz
add
incb
aad
and
add
incb
adc
add
cmp
andb
incb
mov
cmp
int
nop
adc
add
pop
add
incl
imul
mov
add
adc
add
push
add
push
incb
mov
aas
mov
fstpl
add
scas
mov
mov
add
pop
incb
in
add
cltd
sbbb
sbb
xchg
std
pop
add
mov
add
dec
mov
je
test
xchg
orl
add
cmp
gs
add
adc
add
int3
jl
incb
std
mov
incb
jmp
jae
xchg
lret
shll
cmp
xchg
sbb
push
add
jp
mov
pop
add
loope
incb
rcll
fsubs
incb
aas
mov
xor
add
push
add
add
inc
adc
add
xlat
notl
sbb
mov
mov
jecxz
push
add
incb
or
push
dec
cmp
mov
andb
add
scas
and
add
mov
int3
gs
mov
daa
incb
insb
add
adcl
incb
loopne
shrb
ret
movsb
add
add
loope
add
add
cltd
imull
out
shrl
and
incl
fiaddl
incl
and
incl
or
incb
scas
mov
fxch
inc
add
add
andl
add
add
mov
push
incb
dec
add
xlat
add
add
jb
xor
add
jl
cltd
jo
xor
add
add
inc
sub
xchg
adc
add
jne
ret
add
add
cmp
incb
ja
add
and
add
cmp
jg
lret
add
add
cmp
cmpsl
xor
add
or
pusha
add
jno
fcomps
pusha
add
adc
add
imull
incl
mov
stos
add
add
add
cmp
xchg
stc
fildll
loopne
add
add
int3
cmpb
sub
xor
add
popf
dec
add
ljmp
incb
jns
dec
add
incb
pop
add
rcrb
push
sub
add
add
add
jo
icebp
mov
insb
add
call
add
add
fmul
mov
incb
icebp
dec
add
mov
sbb
add
cmp
dec
and
add
incb
outsb
add
incb
lea
incb
fcmovne
mov
decl
add
incb
mov
add
push
add
cmp
popa
pushf
xchg
push
gs
inc
add
and
add
jo
xchg
push
add
and
add
addl
jge
aad
jns
out
sub
fstpt
sub
add
imul
incb
lods
sub
add
inc
add
fisttpll
pxor
cli
push
and
add
or
sbb
push
add
int3
and
add
incl
mov
add
and
insb
add
stos
dec
add
dec
call
and
add
xchg
jmp
mov
add
pop
mov
xor
add
xor
add
add
dec
scas
repnz
outsl
xchg
cmp
adc
add
out
xchg
sbb
outsb
add
and
add
das
sbb
mov
pop
add
incb
js
incb
fidivl
add
add
testl
jmp
out
mov
in
push
orb
add
add
incb
xlat
int3
sub
or
mov
add
incl
jge
add
add
xchg
and
add
add
enter
push
popa
frstor
xchg
push
add
add
add
hlt
popa
sahf
mov
dec
add
add
dec
arpl
add
incb
push
bound
sub
incl
mov
sub
add
iret
and
add
roll
cmp
add
sbb
dec
icebp
pop
int
or
push
add
fincstp
in
jae
das
mov
xorl
dec
add
fnsave
incb
incl
insb
add
add
mov
lds
add
add
scas
add
mov
lock
or
or
sahf
lods
cmp
push
add
fimull
cld
aas
lds
mov
add
incl
icebp
repz
add
incb
fnstenv
incb
adc
add
cmp
sub
lea
jp
bound
sbb
mov
movsb
pop
xorb
xchg
and
add
pop
pop
pop
xlat
push
sub
mov
add
add
pop
data16
xor
add
jb
pop
add
sahf
imul
add
scas
je
push
add
add
incb
pop
pop
sub
add
pop
incb
ja
and
add
incb
cwtl
mov
push
cmpl
out
dec
add
xor
out
adc
add
xor
add
push
add
scas
dec
add
incb
hlt
mov
or
add
rcrl
scas
adc
xor
add
movsl
adc
add
xor
add
add
incl
adc
add
incb
xor
add
jmp
and
add
or
hlt
add
add
ja
incb
add
xchg
mov
incb
jp
fwait
int
push
add
incl
pop
add
jmp
arpl
sarl
jge
add
add
imul
mov
xchg
inc
add
incb
cmp
incb
lahf
mull
xchg
outsl
fwait
call
xlat
jns
pop
stc
pop
ret
movsb
push
add
cs
mov
push
incb
je
adc
ljmp
add
mov
add
xor
add
add
add
sahf
sub
cmp
adc
add
mov
incl
push
pop
add
add
add
lcall
and
add
mov
std
pushf
jmp
add
repnz
add
incb
mov
or
fldcw
lcall
movsb
insb
add
loopne
fsts
push
add
into
and
add
fildll
adc
add
mov
repnz
add
incb
jne
test
daa
incb
andl
daa
incb
push
subl
lret
and
add
pushf
gs
jb
popa
repz
push
add
cs
adc
add
jp
inc
push
add
mov
mov
jle
test
xor
add
add
add
jecxz
pop
add
pop
incb
xlat
push
and
add
jae
sti
or
test
pop
fdivrl
add
scas
jno
dec
data16
std
jnp
out
rorl
push
incb
jbe
pop
add
add
inc
mov
outsb
add
addr16
inc
add
cmp
popf
fcoms
incb
and
add
imul
loop
add
out
dec
add
cmp
add
add
incb
ja
add
stc
cmp
cwtl
push
and
mov
cmp
cmp
add
xor
add
incl
push
lods
hlt
mov
xchg
xchg
mov
adc
add
add
add
testl
add
add
add
incb
sti
mov
add
incb
data16
add
adc
add
mov
in
repnz
incb
je
adc
add
or
ljmp
add
incb
pop
add
clc
ret
sub
push
add
push
add
incb
lea
push
incb
insb
add
add
incb
movsl
mov
aas
xchg
sub
stc
xor
add
add
xchg
add
lods
in
imul
lcall
arpl
mov
add
add
cltd
cmp
daa
incb
xor
add
incb
iret
nop
or
add
fdivl
int
outsb
add
ljmp
add
incb
xor
add
inc
add
out
incl
loope
cmpsb
inc
add
add
add
add
incl
iret
mov
inc
adc
add
add
add
xchg
cmp
pop
sbb
into
push
pop
add
jg
add
lock
add
add
add
xchg
in
pop
incb
bound
pop
loopne
add
add
cwtl
iret
rorl
decl
adc
add
mov
incb
aad
incb
test
stos
jmp
sbb
fcoms
mov
int3
movb
add
mov
add
mov
lahf
lahf
call
mov
mov
add
imul
adc
add
add
incb
jle
loope
incb
jl
mov
xchg
stos
and
add
jbe
jl
fisubs
add
add
icebp
mov
add
lcall
add
xor
add
pop
and
add
xchg
aas
gs
incb
aam
add
pop
jp
in
add
add
and
add
add
incb
xor
jb
imul
cwtl
mov
incb
mov
mov
add
adc
add
add
fwait
sahf
lds
pushf
xor
add
add
lods
pop
cmp
test
add
incb
aad
clc
fwait
enter
mov
cmp
std
aad
add
popf
fsubp
in
insb
add
add
arpl
in
sbb
sub
incb
sahf
lods
adcl
incb
ljmp
incb
cmp
insl
dec
add
mov
jg
getsec
incl
int
add
mov
mov
dec
pop
add
arpl
add
or
sti
xlat
addr16
aam
push
add
out
stos
xchg
add
mov
insl
push
incl
nop
cmc
xlat
push
adc
add
inc
lods
paddb
incb
mov
gs
add
pop
incb
add
add
ja
xor
add
aas
in
std
jecxz
add
incb
xorl
mov
add
fcomps
aad
loope
or
jge
add
add
add
pop
pushf
insl
mov
sub
int3
adc
add
xchg
pop
add
incl
or
call
mov
inc
add
add
add
add
push
push
add
in
or
add
clc
std
ljmp
dec
sbb
adc
add
cmc
inc
add
mov
sbb
fiaddl
jbe
jl
mov
pop
incb
std
loopne
add
add
inc
or
ret
mov
dec
add
add
sbb
and
incb
inc
and
add
push
sahf
loop
add
pop
incl
push
add
repnz
incb
jecxz
les
add
jno
add
add
incl
inc
add
mov
incb
movsb
shrl
add
add
inc
add
mov
dec
nop
xchg
sub
test
add
incb
arpl
incb
mov
inc
add
int
cmp
add
pop
add
insl
ficoms
incb
pop
sbb
out
sar
mov
add
add
ret
mov
add
and
add
rcr
incb
push
add
hlt
call
adc
add
or
incb
lcall
test
test
sbb
incb
add
pop
cmp
add
sbb
or
lods
cmp
ror
xchg
addr16
and
add
push
add
xchg
inc
seta
sbb
or
mov
test
or
xchg
fistl
incl
sti
push
add
jecxz
sub
leave
pop
add
add
incl
dec
jl
cwtl
xchg
addr16
cmc
add
gs
and
add
aad
add
scas
jbe
pop
add
incb
dec
add
incl
sti
test
fisttpl
jns
add
roll
in
testl
lods
cmc
add
add
in
out
loopne
add
or
aas
jge
out
outsl
enter
add
add
dec
add
je
xor
add
xor
add
incl
xchg
mov
addr16
out
out
mov
add
out
add
lcall
fidivrs
test
incb
pop
add
incb
in
add
dec
add
sub
jle
inc
pop
xchg
ret
pop
sub
push
add
subb
push
mov
add
or
adc
add
xlat
add
add
pop
inc
add
xor
add
mov
jecxz
add
add
enter
xchg
movsb
fsubrl
add
aaa
incb
ds
movsl
pop
incb
mov
aaa
incl
push
les
xchg
incl
and
add
mov
test
incb
fnstenv
and
add
mov
pop
add
add
add
aad
mov
lahf
adcl
add
add
inc
add
mov
jle
inc
fwait
in
je
pusha
add
jg
mulb
aam
xchg
push
add
mov
incl
ja
push
add
jae
add
cmp
shll
incb
mov
mov
lds
mov
pop
add
incl
mov
add
mov
add
fcoml
dec
int3
mov
lret
add
test
inc
add
add
inc
stos
sarb
jne
sti
dec
add
lcall
add
pop
pop
mov
rclb
add
xor
add
lret
incb
outsl
ljmp
cmp
xchg
fiaddl
fwait
add
add
xchg
sub
dec
add
nop
pop
stos
jbe
fcoms
incb
hlt
nop
mov
mov
add
or
or
sarl
sbb
notb
incl
rcll
incb
dec
add
push
incl
in
cs
incb
jmp
incb
push
clc
mov
stos
iret
fisubs
incb
add
add
mov
jb
test
add
mov
jmp
pop
add
mov
mov
incl
rcll
adc
lret
sahf
cmp
incl
sub
movups
add
pop
add
cli
dec
sbbl
xor
add
incb
jno
nop
cmpsb
inc
add
ret
dec
popa
xor
dec
add
add
pop
incb
lcall
sbb
mov
sub
incb
xor
add
incb
pop
incb
cmp
mov
lds
incb
cmp
mov
add
adc
add
add
sub
nop
inc
add
mov
mov
sub
add
push
add
or
insl
push
in
sbb
mov
sbb
add
mov
shlb
xor
add
add
add
jp
out
sbb
mov
pop
incb
sahf
out
xchg
bound
fldcw
jno
push
add
xor
incb
add
push
pop
aam
mov
orl
movsb
push
nop
xchg
push
add
sbb
in
inc
add
incl
push
add
or
push
add
incb
push
fptan
lcall
add
jno
incb
popf
fmulp
repnz
cmpl
add
cld
stos
out
incb
pop
incb
shrl
add
xor
add
add
incl
inc
aam
add
incl
adc
add
xchg
cli
xchg
mov
sbb
insl
xchg
jl
jecxz
jg
add
push
sahf
call
sub
lcall
sub
sub
xchg
xor
add
incl
xchg
rcrl
shll
incb
leave
repnz
incl
jl
ljmp
rcrb
pop
add
inc
ret
fisubrs
add
cltd
test
aad
call
incb
or
add
fdivrs
add
add
ficoms
sbb
cltd
js
mov
incb
dec
add
fisttpll
add
add
add
add
add
incl
test
incb
test
fildll
add
shll
cmc
scas
cmc
cmp
iret
xchg
sub
add
mov
inc
add
mov
or
iret
xor
add
cwtl
dec
add
inc
add
ret
add
incb
sbb
cmpsl
xlat
je
int
add
or
pop
dec
add
pusha
add
push
dec
add
incb
cmp
scas
mov
imul
add
jmp
adc
add
xor
add
iret
dec
add
push
incb
jae
add
incb
mov
jl
jnp
add
cmp
loopne
movsl
stc
mov
fucompp
jno
xor
add
add
incl
and
add
sbb
or
jg
add
add
adc
add
jp
cwtl
inc
xchg
enter
cli
mov
loop
cld
gs
aam
xor
add
jp
ror
add
incb
or
mov
add
add
add
incl
cmc
dec
fisubs
incb
push
mov
or
pop
add
push
add
inc
aaa
incl
pop
add
shlb
sub
cwtl
sbb
fmulp
dec
add
add
mov
loope
pusha
add
fisttps
add
sub
push
dec
add
call
or
incb
scas
in
test
add
insl
pop
add
add
mov
incl
sub
incb
aaa
incb
jle
stc
orl
add
xchg
outsb
add
in
jno
xorb
loop
jl
add
add
incb
push
push
add
add
incb
pop
incl
adc
add
add
xor
add
lcall
fildl
incb
mov
add
incb
loop
fisubs
leave
dec
add
and
add
in
inc
add
adcb
inc
stos
jge
or
sub
jno
push
add
add
incb
and
add
add
loopne
incb
into
pop
incb
ret
adc
add
mov
xchg
add
sub
scas
xlat
mov
clc
dec
cmpsb
jge
pop
out
je
push
add
or
or
push
add
incl
in
add
push
mov
incl
adc
add
dec
mov
incb
andl
add
test
bound
testl
stos
js
lcall
add
enter
cmp
or
add
test
add
lcall
sub
test
roll
in
insl
dec
add
and
add
je
movsl
inc
add
incb
mov
add
push
push
popa
add
xchg
push
add
incb
dec
and
mov
aam
cmc
xchg
mov
push
popf
mov
out
dec
add
cmp
incb
js
dec
test
cmp
adc
scas
mov
xlat
push
add
add
inc
add
test
inc
ret
test
jae
jmp
mov
add
fcmovbe
in
push
dec
lret
mov
mull
add
add
add
test
adc
add
arpl
or
incb
insb
add
jecxz
adc
add
add
pop
mov
loope
add
dec
popa
or
jnp
or
add
adc
add
push
push
add
add
add
xchg
xchg
imul
sti
ret
sbb
incb
dec
add
rol
and
add
inc
ret
fdivrs
or
jge
add
getsec
incb
push
add
mov
inc
add
incb
subl
cmpps
add
test
or
adc
add
incb
bound
incb
clc
insb
add
stc
jne
bound
dec
lods
sbb
inc
xor
add
incl
sub
inc
sbb
test
add
pop
dec
test
pop
or
das
mov
add
jns
incb
testl
repz
add
cld
jecxz
enter
add
incl
fisubrl
xchg
into
loope
incb
and
add
fsubrs
or
pop
cmc
sub
pop
add
jns
incb
and
add
mulb
and
add
aaa
incb
xchg
cwtl
out
pop
add
add
cmp
incb
mov
cmc
fwait
daa
incb
lds
add
incb
cmc
pop
incb
outsb
add
add
lea
lods
mov
add
xor
add
sub
cmp
add
outsl
jg
add
cli
and
incb
pushf
mov
xor
add
test
mov
pop
pop
fcmovb
mov
jo
das
pop
add
push
jbe
push
add
and
add
imul
inc
add
sub
pop
mov
aad
add
leave
cmc
repz
incb
jnp
incb
xchg
lret
pop
pusha
add
dec
add
lret
cmp
incl
mov
add
incl
incb
cs
into
cmpsl
insb
add
add
add
incb
mov
add
ret
imul
jmp
inc
xor
add
jb
popf
int
incb
ljmp
xor
add
add
incl
movsl
shl
fcmove
mov
mov
je
push
lret
pop
ror
inc
push
incb
movb
add
std
cltd
pop
incb
pop
add
incb
rorl
incb
movb
and
add
shl
sbb
shl
cld
hlt
push
add
cmpsl
repnz
add
inc
add
add
cwtl
xchg
fsts
add
lds
incb
xor
add
push
add
sub
add
xchg
add
add
add
incb
inc
les
incl
jmp
cs
dec
add
add
adc
add
or
fcoml
add
add
lock
inc
test
push
incb
pop
incb
dec
add
push
cli
xchg
mov
sub
or
jle
or
lods
inc
rclb
rcll
incb
mov
add
sbb
jno
mov
and
je
dec
add
mul
push
add
bound
mov
incb
imul
fcoml
fildll
lret
dec
add
sbb
pop
add
xchg
xorl
mov
cmp
pop
incb
push
add
inc
push
add
push
xchg
inc
ficoms
and
mov
repnz
add
arpl
add
repnz
add
mov
scas
fcmovne
popa
cmp
add
aam
negl
test
insl
sub
sub
incb
mov
mov
incb
sti
mov
or
cmpsb
add
dec
add
incb
subb
pop
add
jecxz
incb
pop
sti
loopne
push
jb
loopne
add
add
incb
and
add
pop
sub
repnz
incl
cmpb
repz
lret
push
incl
call
cs
pop
incb
inc
add
ljmp
in
cmp
or
orl
add
lods
aaa
incl
lock
aam
dec
btc
incb
cld
mov
mov
jecxz
cltd
push
add
jno
add
jge
push
push
add
add
fstpt
bound
add
add
add
add
mov
xchg
pop
xor
add
inc
cmp
popa
mov
mov
push
add
dec
adc
add
incb
and
add
add
or
mov
jmp
dec
add
sub
incb
out
jp
mov
mov
incl
cli
cwtl
mov
add
add
or
xchg
dec
add
adc
add
jbe
pushf
aaa
incb
jo
cmc
and
add
mov
incb
dec
add
fnstcw
int3
out
insl
jns
cwtl
xor
add
out
cs
cmc
inc
and
mov
lret
popa
add
add
incl
ror
jle
testl
pop
out
in
test
pop
add
or
xchg
add
lock
add
add
add
adc
add
add
test
dec
icebp
push
add
sbb
xchg
xchg
add
jg
movb
daa
incb
cli
inc
add
into
mov
std
or
add
add
cmp
adc
add
add
add
decl
incb
pop
sbb
cmpsl
inc
add
incb
pop
add
add
fdivrl
pop
cmp
incb
in
cmp
mov
or
shll
add
incb
pop
add
mov
in
sbb
inc
push
and
add
mov
dec
add
push
mov
add
mull
inc
and
add
dec
add
movsl
cmp
add
incl
jb
in
push
jnp
add
test
add
cmpl
cld
dec
add
cmp
add
incb
ljmp
add
adc
add
and
add
xor
add
incb
dec
in
loope
jns
incb
sub
lret
cmp
mov
inc
add
movsb
icebp
mov
movsb
add
sbb
add
add
push
add
add
test
dec
add
test
inc
add
movsl
inc
or
dec
add
incb
dec
add
add
add
mov
add
pop
icebp
mov
jl
mull
test
and
add
ds
inc
jle
jo
mov
insb
add
fmull
xchg
sub
add
mov
mov
dec
cmc
dec
push
add
lcall
cmp
addr16
fstpl
aad
ljmp
jmp
xor
add
mov
incb
enter
xor
add
inc
add
push
add
add
jl
or
inc
add
out
dec
add
add
incb
adc
add
mov
add
jne
pop
repz
incb
stos
and
add
xlat
adcl
incl
in
jle
test
sarl
pop
add
incb
call
xorb
in
add
add
shlb
incl
mov
pop
incb
jge
fwait
sub
add
incb
clc
cmp
in
les
cwtl
dec
mov
mov
mov
sbb
incb
and
add
add
pushf
je
into
pop
add
xchg
incb
mov
std
pop
call
sbb
add
incb
cmpsb
pushf
xchg
jns
stos
loop
lock
rclb
pop
add
sbb
incb
adc
add
add
fistps
insb
add
iret
rclb
test
lret
dec
add
mov
pop
fstp
xor
add
stos
je
das
xchg
incb
hlt
add
add
loope
bound
adc
add
inc
jmp
repnz
incb
out
incb
lcall
pop
add
add
movsl
sub
movsb
sti
test
xchg
add
add
icebp
xchg
or
and
add
ljmp
cmp
pusha
add
incb
fstl
enter
xor
loope
incb
sub
add
incb
xchg
fsubrs
jne
jnp
mov
and
incb
fisttps
add
push
incb
mov
mov
fildll
int
inc
xchg
int
add
add
mov
fwait
adc
add
adc
add
jnp
add
incb
xchg
stc
xchg
insl
pop
add
add
or
dec
movsl
mov
add
js
fstl
jbe
cmp
and
incb
mov
aas
push
add
jns
adc
add
inc
popf
rcrl
lods
inc
add
js
stos
jns
add
add
mov
push
add
xchg
repz
pop
xchg
pop
incb
or
cmpsb
push
je
loope
incb
mov
insb
add
push
cmp
xchg
ret
or
incb
push
mov
add
add
and
add
in
enter
add
add
add
fists
add
add
add
fists
incb
pop
incb
xor
add
xor
add
and
add
or
cmc
lea
add
aam
add
inc
add
incl
dec
add
enter
fwait
jl
out
add
and
fldt
pop
add
mov
xor
add
addb
mov
mov
dec
imul
ret
cli
sub
lret
stos
push
add
jb
push
out
jp
addr16
or
mov
add
incb
in
ret
add
mov
dec
movsb
int
pop
mov
push
incl
gs
scas
fldl2t
lock
add
pushf
in
cwtl
int
roll
add
fs
mov
ljmp
outsl
sub
imul
or
dec
add
pop
add
incb
pushf
enter
add
repnz
imul
lock
jae
xor
add
sahf
xchg
cmc
cld
mov
scas
stc
xchg
or
add
add
add
add
incb
mov
mov
xchg
jge
add
mov
add
out
mov
cmp
and
add
add
dec
and
add
mov
popf
pop
add
xor
add
xor
add
enter
add
add
add
outsl
mov
pop
add
incb
push
incb
xchg
loop
dec
adc
incl
incb
dec
shlb
incb
adc
add
incb
jg
add
nop
mov
mov
imul
push
inc
icebp
push
add
jmp
mov
imul
add
fistl
add
mov
push
stc
xchg
in
sub
jo
dec
in
orb
mov
push
add
notl
mov
add
jne
dec
lea
dec
add
add
add
xor
add
xchg
sub
xchg
popa
cmp
fwait
int3
push
add
call
incl
ret
mov
incb
adc
add
mov
add
mov
lcall
fildll
mov
repnz
jae
add
add
xor
add
les
dec
clc
and
add
mov
mov
incb
incb
or
cmpsl
stos
into
xor
loopne
int3
sbb
push
mov
incl
mov
cmp
iret
jge
test
cmc
jmp
add
incb
fisttps
inc
mov
mov
mov
stc
or
xor
add
incb
jmp
loope
sbb
nop
xchg
mov
iret
leave
out
xor
push
incb
jp
mov
add
add
add
repz
cmp
and
add
add
incl
cwtl
xchg
sahf
daa
incb
xlat
push
scas
js
xchg
shr
incl
jne
loop
add
lahf
xchg
imul
add
incb
mov
jecxz
incb
cmp
fsubs
add
fndisi(8087
mov
add
push
aaa
incb
nop
aas
mov
incb
inc
in
add
xor
add
add
loope
incb
inc
data16
incb
hlt
jp
mov
jo
orb
add
add
addr16
add
gs
add
push
test
add
incb
cltd
mov
out
sub
push
add
add
add
adc
add
mov
out
xor
add
incb
add
ret
cmp
add
out
or
ja
fs
ror
decl
add
incl
cld
test
add
add
jnp
inc
add
mov
int
mov
incb
int
dec
add
cwtl
mov
dec
sbb
addl
add
rol
xchg
push
test
cltd
adc
add
aam
mov
mov
add
incb
fwait
aas
cli
mov
pop
add
or
jnp
add
cmp
fiaddl
fnstenv
push
lea
jecxz
add
popf
mov
add
test
add
sub
js
or
dec
jns
lahf
jns
add
adc
add
scas
ljmp
addb
xchg
lds
add
pop
inc
lea
add
jecxz
push
incb
dec
add
loope
test
dec
add
arpl
incb
jbe
mov
icebp
adc
add
out
in
incb
imul
sbb
mov
mov
stc
mov
push
mov
incb
pop
add
adc
add
cmp
dec
pop
dec
add
and
add
incb
insb
add
incl
aad
jmp
loope
incb
mov
xchg
incl
mov
add
add
add
add
test
cmp
push
add
incb
jge
lods
mov
add
adc
add
insl
push
add
add
mov
add
incb
fucomip
stos
cmp
ja
popf
rclb
sub
inc
xchg
mov
sbb
xlat
ljmp
incb
inc
add
iret
jbe
dec
add
add
jno
test
add
and
add
pop
sahf
insb
add
jno
incb
outsl
addr16
incb
xchg
inc
add
cmp
in
imul
mov
cmp
icebp
xchg
mov
add
add
add
add
lods
je
inc
out
and
add
ret
pop
add
jb
mulb
inc
xor
add
inc
inc
add
incl
lds
nop
cmp
add
add
pop
add
xor
add
cltd
jmp
cld
into
dec
add
jno
jb
sti
aad
sahf
sti
incl
popf
rorl
or
dec
add
incb
fidivl
incb
mov
ret
test
mov
incb
shll
incb
add
aad
add
incb
icebp
cltd
int
xchg
test
aaa
incl
sub
pop
bound
push
add
xchg
test
adc
add
incb
inc
ljmp
fnstenv
incb
xchg
insl
jmp
add
stos
outsl
fwait
sub
mov
incl
push
add
and
incb
jmp
or
rcrb
mov
add
inc
fcoms
sub
incl
dec
add
push
test
mov
add
insl
aas
insl
sti
pop
add
mov
lods
out
mov
arpl
clc
pusha
add
dec
lahf
xor
add
add
les
rorb
mov
mov
incl
sti
loop
add
mov
incb
push
incl
mov
incb
or
mov
add
mov
jmp
mov
xchg
cmp
jne
jno
incb
imul
cmpsb
scas
dec
sarl
add
jg
pop
add
jl
outsb
add
pop
add
xlat
adc
add
jg
mov
jbe
popf
data16
dec
cld
adc
add
add
incb
lods
ljmp
add
sub
mov
add
dec
roll
ljmp
enter
mov
inc
add
incb
fmuls
add
xchg
xchg
add
jo
xor
add
incb
add
incb
mov
add
mov
dec
push
add
loopne
incl
and
add
add
add
incb
rolb
jg
incb
jns
incb
mov
add
incl
dec
push
pop
push
and
add
incb
std
mov
add
add
add
mov
fdivp
mov
and
add
inc
add
xchg
repz
jns
daa
incb
xor
add
incb
fcomps
outsl
or
adc
add
push
scas
xor
add
add
add
add
incb
cwtl
jbe
mov
pop
sahf
in
sub
xchg
aam
adc
add
add
pop
jle
bound
lret
push
add
out
ret
stc
add
add
incl
jo
loope
add
clc
icebp
scas
cmpb
add
add
roll
mov
incl
push
add
push
clc
add
data16
incl
adc
add
pusha
add
lods
ja
incb
jl
ljmp
add
sar
daa
incb
cmp
ljmp
test
mov
pop
adc
add
shl
js
jnp
rcr
dec
pop
add
jnp
mov
aaa
incl
xor
add
jbe
inc
sti
adc
add
incb
inc
add
incb
xor
add
dec
xchg
and
add
mov
add
add
arpl
mov
dec
cld
divl
add
imul
ljmp
in
cli
inc
add
fucom
pop
add
mov
lods
cmpl
push
inc
mov
incb
sbb
cmp
mov
cmp
ja
jmp
add
inc
cld
sti
fs
cmc
out
pop
adc
add
in
shrl
dec
add
incl
imul
aad
or
js
push
add
incb
mov
mov
adc
add
test
fxch
push
push
incb
xor
add
test
mov
decl
stc
cltd
lret
fisttpl
add
insb
add
in
stc
jbe
test
lea
xchg
div
adc
add
pop
add
mov
insl
fldl
jge
push
add
incl
fsubrs
add
pop
add
add
incl
je
sub
mul
add
add
xchg
push
pop
add
incb
outsl
xlat
sbb
lods
sbb
jl
icebp
das
in
btr
incb
mov
inc
add
cmpsb
xor
add
ret
add
pop
incl
daa
incb
or
add
cmp
stc
adc
add
inc
insb
add
incb
and
add
incb
psrlq
incb
and
add
shl
xchg
or
icebp
iret
cwtl
fcompl
ljmp
mov
addb
cwtl
insl
mov
add
add
pop
add
imul
add
mov
push
incb
jp
fistpll
pop
push
jae
add
or
sub
enter
add
and
add
incb
adc
add
xlat
dec
jle
imul
in
incl
add
lea
add
add
jb
jl
inc
add
aam
add
sti
ficomps
cmp
and
add
cmp
incb
jno
add
add
add
push
mov
incb
xchg
mov
out
mov
add
mov
xchg
cmpsl
sub
cmpsb
dec
scas
fimuls
mov
jae
mov
add
incb
pushf
enter
stos
scas
incb
fldt
in
lcall
xchg
dec
add
add
add
add
push
incb
mov
stc
jae
incb
jmp
add
add
pop
out
mov
cmpsb
jecxz
aam
movsl
jle
pop
incl
jnp
incb
push
add
sbb
dec
mov
out
sub
popa
cli
inc
add
incb
xchg
push
add
incb
inc
add
cmp
in
pusha
add
xor
add
imul
mov
add
ja
add
adc
add
incb
sbb
push
cmc
mov
pop
add
xchg
jne
add
add
incb
pop
sbb
add
gs
stos
sub
xchg
mov
add
jns
incb
fisttps
loopne
or
incb
out
cmpsl
bound
into
aaa
incb
mov
add
test
add
ret
jnp
push
incb
das
inc
add
add
add
incb
imul
mov
addr16
fnsave
incb
xor
add
add
fucomp
push
add
add
test
clc
jno
add
fwait
add
add
add
add
add
and
add
insl
cld
cmp
adc
add
adc
add
mov
repz
leave
fwait
sub
les
jb
test
test
shll
incb
mov
adc
mov
add
add
sub
lds
inc
or
insl
mov
add
test
mov
xchg
or
mov
add
inc
jb
xchg
adc
add
mov
add
incb
mov
inc
mov
movsb
cmp
loop
int
incb
cmpsb
jle
sub
rcrl
les
or
pusha
add
popa
dec
dec
add
lock
add
fisubl
incb
cmp
sub
fldenv
dec
cmp
adc
add
jne
cmp
pop
addr16
mov
add
mov
add
loopne
icebp
fndisi(8087
mov
incl
not
insb
add
cmp
adc
add
xor
add
popf
xor
add
mov
pushf
popa
cmp
xlat
or
lods
mov
incb
add
xor
add
add
int
xor
call
cmp
pop
pop
xchg
sub
icebp
xlat
test
incb
lds
call
incb
inc
sbb
xchg
pop
hlt
xchg
add
cmpsl
repz
dec
add
incb
inc
add
imul
aas
pop
incb
sbb
shll
mov
incl
mov
incb
push
add
add
xchg
inc
add
sti
int3
dec
jp
inc
add
and
add
call
sbb
cmp
mov
incl
mov
xchg
mov
and
add
inc
add
clc
and
add
add
incb
mov
pushf
push
add
push
add
add
add
xor
add
xor
add
inc
ret
int
or
sbb
jns
sub
fwait
add
add
insl
lods
push
add
add
or
mov
ficoml
insl
mov
push
incb
push
mov
mov
incb
mov
add
incb
add
add
mov
sub
repnz
stos
mov
in
add
aaa
incb
pop
pushf
adc
add
incb
cmc
pop
incb
imul
add
add
add
add
ds
in
incb
xchg
stos
mov
xchg
sbb
clc
sbb
cmp
fiadds
incb
jmp
repnz
incb
and
add
aam
mov
enter
incb
pop
add
incb
xchg
out
ret
fnstsw
jne
xlat
aas
fldcw
add
add
add
mov
pop
inc
add
adc
jae
incb
repnz
dec
orb
add
add
add
jns
mov
or
incl
push
cmpsl
popa
int3
and
movsl
addl
incb
testl
pop
add
add
pusha
add
incl
mov
add
cmp
xor
add
add
xchg
lods
adcb
pop
add
add
add
cmp
ror
lds
incb
or
cmp
outsl
sbb
add
add
add
popa
or
stc
incb
inc
add
add
add
ja
add
add
add
aad
pop
incb
aas
sbb
push
int
jae
and
incl
jb
lods
adc
incl
mov
add
jl
clc
xorl
xchg
add
add
incb
and
add
add
add
incb
pop
incb
popa
sbb
add
into
dec
lock
add
cmp
xchg
xchg
xor
add
incl
nop
xchg
mov
add
jmp
mov
testb
sbb
add
add
incb
adc
add
xor
add
add
add
incb
xchg
dec
cmp
incb
xchg
pop
add
push
add
leave
stc
pusha
add
push
je
jnp
lea
sbb
add
incb
xor
add
inc
add
add
pop
test
incb
push
incl
xchg
daa
incb
mov
xchg
add
add
incb
lret
or
xor
add
add
incb
enter
adc
add
add
add
add
fnstenv
add
add
bound
ja
jge
add
fstpl
add
or
mov
cmp
dec
ret
fidivrs
mov
lods
movsb
int
movsb
out
repnz
add
xchg
loopne
add
insl
add
add
xchg
mov
add
xor
add
and
add
add
cmp
push
add
imul
jg
add
push
sahf
lea
add
incl
pop
pop
add
add
incb
mov
iret
dec
push
push
add
jg
in
incb
sarl
mov
insl
mov
insl
xor
add
dec
pushf
sti
push
add
shlb
add
add
arpl
mov
sbb
cmpsl
mov
jo
lahf
xor
add
add
add
mov
add
xor
add
mov
les
movsl
ljmp
insb
add
incb
mov
mov
add
incb
and
add
fwait
sbb
lcall
add
add
mov
add
repnz
add
popa
or
mov
incb
iret
rcl
jbe
jno
cmp
jle
push
add
movsl
mov
incb
ret
add
cmove
incl
sbb
cmc
cmp
ret
add
pop
aad
add
add
incb
insl
fcmovbe
std
sbb
in
jnp
incb
rclb
add
incl
mov
xchg
push
add
add
add
pop
add
cmp
add
mov
aaa
incb
fsub
mov
imul
stos
aam
mov
add
mov
fistpl
add
incb
into
mov
add
incb
leave
movsb
aam
and
add
xlat
ret
orl
daa
incb
pushf
cmp
fsubs
xchg
icebp
mov
cli
mov
out
inc
out
xor
add
add
jne
std
mov
mov
add
incb
push
jecxz
push
hlt
xchg
inc
mov
lods
mov
push
add
add
incl
push
add
in
shrb
add
xchg
push
jmp
shl
das
loop
add
incb
inc
add
or
mov
pop
add
add
add
incb
jmp
add
lcall
cmp
add
or
incb
mov
add
dec
add
incl
jle
xchg
push
incb
dec
sbb
int
test
aaa
incb
fimull
mov
add
pop
add
incb
shr
add
add
add
add
mov
cltd
insl
dec
add
add
insb
add
xor
add
cmp
das
fcomps
iret
jb
add
add
pop
xchg
pop
add
add
in
add
add
sub
and
add
add
add
movsb
or
adc
add
incb
add
mov
incb
test
add
incb
and
add
pusha
add
incb
data16
xcrypt-ecb
cmpsl
int
add
inc
inc
xlat
add
add
mov
incl
jmp
xchg
mov
cmc
inc
add
add
xchg
dec
sub
add
inc
pusha
add
incl
lods
dec
add
loopne
add
ficompl
add
adc
mov
mov
rcll
add
dec
pop
add
incb
incl
and
add
add
bound
or
fs
pop
jbe
pop
shr
mov
and
add
sarl
adc
add
xlat
incb
jp
sarb
inc
push
add
xchg
dec
add
sub
pop
add
add
stos
adc
add
sbb
add
add
jo
sbbb
in
add
out
incb
addr16
sub
cmp
icebp
cmp
add
incl
mov
fcom
pop
add
incb
incb
movsb
in
in
mov
incb
in
incb
xor
add
adc
add
xlat
push
add
adc
add
incb
push
movsl
xchg
jb
jno
mov
add
inc
add
add
add
ret
add
int
add
adc
add
add
add
cwtl
mov
mov
add
repnz
add
add
imul
pop
shll
popf
int
incb
pusha
add
jp
push
out
cmpsl
pusha
add
incb
idivl
add
test
add
lcall
push
add
and
outsb
add
xlat
cmpb
outsl
jbe
stos
xchg
lcall
mov
cmp
push
add
or
add
popa
adc
add
jecxz
incb
mov
mov
movsb
mov
xor
add
outsl
jnp
hlt
fisubrl
in
out
fdivrs
mov
pop
cltd
movsb
adc
add
sti
cmpsb
xorb
add
lcall
incb
xchg
jnp
incl
or
out
jbe
icebp
rcr
outsb
add
add
and
add
add
add
add
add
inc
add
incl
loopne
add
xchg
sbb
add
add
add
add
iret
insb
add
push
nop
mov
incb
dec
add
cli
scas
aam
xor
add
jmp
incl
sub
incb
sub
add
das
mov
aaa
incb
int3
or
pop
incb
mov
sbb
incb
jg
aam
and
add
and
add
push
incb
push
add
cwtl
test
mov
sub
cltd
dec
add
incb
test
mov
bound
pop
add
cmc
stc
or
adc
add
xchg
cmp
add
mov
pop
lods
rolb
incb
push
incb
ljmp
mov
add
incb
xchg
lea
incb
jne
incb
enter
incb
lods
mov
add
jne
mov
pop
incb
nop
lods
out
std
sbb
sbb
add
in
in
or
imul
incb
in
out
or
mov
movsl
sbb
inc
add
out
in
stc
pop
add
add
incb
and
add
add
add
pop
add
push
outsb
add
cmp
int
push
add
sub
jno
popa
and
add
add
add
mov
aas
int3
subb
das
adc
add
aas
adc
add
bsf
mov
incl
in
test
fadd
cmpl
cmp
test
incl
jp
incb
jmp
add
fsub
shlb
incb
xchg
and
add
incb
lods
or
cmpsb
aas
push
add
sub
addb
add
incb
dec
add
dec
add
shrb
inc
add
or
jp
and
add
sub
incb
sbb
pushf
imul
stos
stos
dec
insl
fsubr
add
add
arpl
stc
or
incb
loop
mov
incb
cmp
mov
sbb
imul
leave
or
sbb
stos
cld
pop
jge
xchg
inc
or
mov
fisubrs
lcall
inc
mov
movsl
in
add
add
push
incb
pop
incb
fildll
lahf
xchg
sbb
add
add
shrl
mov
imul
add
incb
fisubl
add
jge
add
repz
add
add
add
add
add
loope
mov
adc
add
add
incb
xchg
xchg
pop
cmpsb
mov
add
push
incb
adc
add
mov
cmp
in
and
cmc
add
add
sub
jl
jbe
sub
jmp
dec
add
cwtl
xchg
hlt
add
add
xchg
insl
popl
add
incb
cld
jnp
add
mov
pusha
add
dec
add
pop
or
nop
xchg
dec
ret
iret
mov
add
add
sub
mov
lds
movl
mov
incb
sbb
push
incb
dec
adc
add
incb
or
pop
popf
lea
popf
pop
add
sti
movsb
jnp
jl
cmp
xchg
or
jge
add
incl
clc
adc
ret
mov
xor
mov
lock
lahf
xor
add
or
or
pop
add
insb
add
add
add
mov
idiv
inc
add
xchg
pop
add
imul
iret
out
lcall
hlt
ja
out
repnz
xchg
xor
add
ret
in
or
or
push
adc
add
sbb
cs
push
xor
add
incb
lock
fsts
push
in
incb
mov
repnz
add
incl
xchg
sub
xorl
add
push
pop
incb
dec
out
ja
incb
sub
add
sbb
xchg
hlt
jo
xor
add
incb
adc
add
add
pusha
add
add
pop
jnp
incb
dec
jo
outsl
or
in
add
incb
out
adc
add
jecxz
js
jo
call
in
fidivs
inc
ljmp
cltd
xchg
push
mov
cli
cmpsb
mov
lret
gs
lods
or
push
add
add
pushf
lahf
pop
jno
add
add
cmpsl
aas
repnz
add
incl
in
jge
push
add
add
add
incb
jnp
add
push
add
add
mov
add
add
ljmp
out
loopne
add
incb
fisttpll
add
das
mov
incb
insl
cmp
insb
add
les
pushf
cltd
nopl
sub
xor
add
incb
jl
xor
add
call
and
add
fisttpl
sbb
in
add
in
inc
int
push
inc
add
testb
incb
scas
mov
add
out
jbe
add
xor
push
add
cwtl
add
add
stos
mov
daa
incb
lock
incl
cmp
movntps
add
mov
cmp
pop
cmp
pop
add
sbb
cmc
popf
clc
nop
lods
sub
imul
sbb
cmpsl
cmpsb
dec
xchg
xor
xor
add
incb
dec
add
or
add
incb
pop
add
mov
pushf
into
cmp
mov
or
and
add
hlt
or
ror
shrb
add
sub
push
add
rorb
jle
lea
sub
std
mov
or
incb
adc
add
incl
mov
ret
lahf
push
add
sub
cmp
dec
add
incb
int
incb
mov
stos
shrl
cltd
rclb
add
incb
pop
into
lcall
ja
imul
adc
add
pop
add
ret
add
add
add
add
mov
cs
dec
add
push
add
sbb
addr16
cwtl
mov
stc
jne
mov
std
mov
add
add
daa
incb
and
add
xor
add
clc
cld
cmp
je
hlt
xchg
and
add
incb
mov
in
mov
mov
incb
mov
pop
scas
sbb
xor
incb
add
incb
mov
mov
incb
xchg
rorl
lret
jmp
sub
in
mov
add
pop
incb
mov
in
sbb
incb
rorb
lds
incb
xlat
fdiv
push
jmp
add
jecxz
xchg
sbb
sbb
cmp
adc
add
sub
cmovbe
push
add
add
stos
out
stc
or
out
rclb
add
mov
incb
andl
inc
cmc
adc
add
or
dec
add
fdiv
xor
add
jg
lock
add
add
int3
addb
je
clc
mov
add
pop
add
add
in
add
loop
incb
stos
lcall
add
fdiv
test
fistpl
add
aas
xchg
jge
test
inc
add
fisubrl
jecxz
incl
jbe
sbb
incb
pop
push
or
inc
arpl
stos
mov
std
sub
hlt
out
pop
xchg
inc
add
incb
ret
subl
mov
lret
add
incb
filds
cmp
push
lcall
test
add
add
incb
xchg
push
add
mov
incb
ljmp
add
dec
add
inc
imul
jmp
add
xor
add
incl
movsl
rcl
push
incb
scas
sub
sbb
push
add
add
sbb
fimuls
repz
mov
add
incb
divl
imul
push
add
loopne
add
pop
incb
mov
add
gs
out
mov
add
incb
outsb
add
std
imul
add
xchg
daa
incl
push
add
in
xchg
sbb
inc
push
add
incb
jg
rolb
mov
pop
incb
sbb
in
push
add
sub
pushl
leave
aad
leave
mov
jne
rcrl
xchg
pop
pop
add
ja
dec
addb
mov
dec
cmp
push
incb
dec
iret
insb
add
bound
add
add
incb
jecxz
aaa
incb
jp
mov
imul
incb
repnz
jns
add
imul
pop
add
push
add
jecxz
add
bound
xor
add
add
add
push
add
icebp
lcall
mov
and
add
incb
fbstp
add
add
mov
hlt
or
icebp
xchg
incb
lret
pop
add
incb
push
add
cmp
dec
std
mov
mov
shll
jns
js
or
add
add
pop
mov
mov
adc
add
sub
insb
add
add
xorb
add
and
add
add
add
mov
add
dec
add
xchg
push
add
add
mov
cmpb
mov
add
jmp
jae
test
pop
add
js
imul
add
daa
incb
cltd
cmp
lret
mov
sbb
leave
frstpm(287
aad
add
xlat
rcrb
add
repnz
lods
jne
pushf
mov
incl
dec
inc
sbb
incl
jns
add
incb
data16
sbb
push
incb
js
dec
cmp
test
add
int3
leave
aad
call
in
mov
incb
outsl
push
dec
add
add
push
add
dec
mov
cli
xchg
cmc
mov
incb
xchg
ret
add
add
push
mov
add
incb
aad
mov
add
cmp
ret
jecxz
xlat
movsl
movsb
add
add
add
push
add
lahf
jl
fldl
incb
sub
add
incb
and
add
add
jl
mov
add
add
test
add
sbb
jae
dec
add
push
add
cmp
xchg
mov
add
adc
add
pop
incb
fsubrl
add
add
aad
cmp
push
add
incb
mov
fwait
push
movsl
adc
add
enter
mov
std
in
push
incb
into
shl
test
add
pop
add
in
ja
push
add
stos
pop
add
mov
add
imul
vpxor
cmc
mov
shlb
xchg
push
int
add
dec
enter
dec
stos
rclb
ljmp
add
cld
cmp
sbb
add
incl
jns
pop
incb
movsl
loopne
mov
pop
add
pop
std
and
loope
add
add
sbb
dec
add
cwtl
mov
add
add
incb
aas
dec
popf
add
add
add
push
incl
adc
add
add
incb
cmp
add
add
les
jns
add
bound
in
add
and
add
icebp
jnp
incb
icebp
xor
add
sub
fistps
add
add
add
add
mov
incb
lret
in
mov
incb
sbb
inc
sub
mov
push
incb
jp
scas
adc
add
jns
fs
mov
addr16
add
int3
int3
jno
insl
out
incb
push
add
incb
xchg
rcl
repz
or
sahf
jmp
and
add
inc
push
add
add
incb
sbb
xchg
loope
adc
add
add
in
add
xchg
mov
push
add
incb
ret
cli
rcl
pop
incb
jns
add
mov
int3
jae
push
incb
pop
incb
pop
pop
incb
mov
xchg
insl
lcall
push
incb
aas
sarb
push
mov
incb
add
add
pusha
add
cld
jl
xor
add
incb
push
pop
add
incb
adc
incb
xor
add
notb
add
add
push
add
js
dec
dec
sahf
sub
sbb
jge
adc
add
pop
adc
add
adc
add
incb
adc
add
incb
out
add
cli
shlb
inc
and
add
decl
hlt
shl
or
incb
movsb
pause
mov
inc
pop
add
imul
jmp
xchg
xor
add
out
add
add
incb
test
int
mov
fimuls
add
jge
add
adc
add
incb
cmp
mov
incb
dec
add
incb
out
pop
add
add
add
add
add
add
rol
pop
add
cmp
adc
add
into
mov
add
sbb
xorb
add
add
incb
out
push
mov
insb
add
out
rcrl
mov
add
stc
loope
into
shlb
add
dec
inc
imul
push
add
incb
mov
xor
add
daa
incb
xlat
or
incb
jne
mov
in
dec
add
cltd
jno
sbb
gs
ficomps
xorl
lea
xor
add
adc
in
nop
jne
and
add
add
sbb
outsl
imul
incl
add
addl
add
mov
add
jne
add
xchg
inc
dec
add
incb
mov
inc
push
add
inc
add
arpl
jno
push
add
add
add
insb
add
add
xchg
insl
lahf
and
add
jnp
add
std
scas
sti
mov
push
inc
add
xorl
jbe
adc
incb
mov
add
incb
incb
int3
xchg
jg
test
cwtl
std
test
adc
les
lret
xchg
add
add
xchg
cmp
add
add
aaa
incb
inc
add
incb
test
add
incb
sbb
repnz
mov
add
mov
add
lret
in
fisubrl
and
icebp
sub
dec
mov
cmp
xchg
mov
scas
pusha
add
mov
cs
add
add
insl
fldcw
jno
add
stos
gs
add
incl
daa
incb
js
stos
inc
dec
or
adc
add
add
pop
add
das
scas
test
add
jbe
ficoml
add
jb
add
add
jmp
addr16
add
cld
mov
mov
xchg
push
sbb
iret
ret
xchg
icebp
inc
cmp
incl
fistl
incb
data16
mov
scas
test
mov
in
les
add
fidivrl
add
cmc
and
push
shrl
mov
jnp
mov
add
add
lret
int
imul
sbb
add
inc
add
sbb
lds
incb
out
enter
sbb
sub
cltd
inc
add
rcrb
xchg
jg
shrb
add
movb
add
mov
add
aad
insb
add
lds
pop
incb
jp
push
and
ret
jmp
mov
loop
aam
je
sbb
add
cli
pushf
sbb
ret
or
jne
bound
mov
add
xor
add
add
or
add
add
iret
clc
inc
add
adc
add
add
icebp
lahf
jnp
mov
add
push
add
add
add
incl
pop
incb
pop
dec
add
add
in
shll
add
pop
add
pushf
mov
mov
mov
loope
jns
imul
add
xor
xchg
adc
add
mov
xchg
sarl
jmp
lea
add
cmp
lds
clc
aam
incb
sti
cmp
cmpsl
jns
add
incb
addr16
data16
outsb
add
add
add
int3
dec
add
xchg
repnz
jle
int3
nop
mov
sbb
imul
and
add
divb
lds
add
je
jne
incb
xor
add
rorb
pushf
mov
in
mov
incb
cmp
add
add
dec
add
add
fdivl
test
pop
incb
aaa
incb
cmp
incb
inc
add
incl
test
incb
sub
out
daa
incl
xchg
fs
jmp
in
and
add
stos
sub
xchg
add
xor
add
nop
cmc
fdivs
mov
adc
add
add
andl
add
ja
aad
add
xchg
dec
stos
jmp
iret
jecxz
jle
jns
aad
incl
sahf
aas
cltd
fsubrp
push
incb
rolb
incb
mov
add
add
add
inc
mov
divl
pop
add
cmc
add
add
add
add
add
notl
add
pop
dec
add
adc
add
incl
ljmp
mov
roll
test
add
incb
nop
push
add
add
incb
xor
add
lcall
dec
add
incb
jecxz
lea
add
incb
adc
add
add
add
add
lahf
popa
scas
inc
add
je
xchg
xor
add
xor
pop
mov
or
ret
movsl
and
add
mov
add
cwtl
mov
cmp
lock
xchg
adc
add
in
roll
jecxz
std
in
rorl
pop
add
add
ret
sahf
pop
dec
fistpll
or
nop
in
mov
movsb
pop
add
mov
stc
xor
add
incl
inc
add
add
add
repz
lods
rcr
xchg
xlat
pop
add
add
clc
stos
push
fimull
incb
ret
cmp
incb
std
add
add
add
add
imul
jle
nop
loope
sbb
add
aas
mov
inc
test
push
incl
mov
incl
mov
jmp
test
add
incl
inc
add
jle
incb
pop
incb
popa
aad
add
rclb
fstpl
out
out
inc
mov
add
incl
mov
add
incb
mov
dec
add
ja
incb
push
push
add
add
dec
add
subl
and
roll
cmpsb
lods
cmp
das
xchg
push
lahf
shll
add
lret
add
and
add
mov
jnp
or
add
ret
clc
jge
pop
add
mov
lods
clc
in
mov
xchg
xchg
leave
xor
add
in
mov
add
mov
add
mov
and
add
ret
movsl
les
add
sbb
and
add
into
inc
add
add
out
jmp
pop
hlt
leave
xor
add
cmpsb
mov
adc
add
incl
ret
stos
mov
ret
push
add
incb
and
add
xchg
out
mov
add
push
add
add
iret
jle
or
dec
das
dec
add
lods
int
incb
movsb
sbb
sbb
jne
pop
or
nop
sbbb
lcall
add
add
jbe
sbb
xchg
sub
jmp
inc
outsb
add
xchg
add
imul
add
jmp
sbb
pop
int3
insl
shll
insl
in
inc
add
jne
cmp
pop
cmpsb
or
sbb
ja
jno
ja
pop
sbb
das
fstpt
loope
inc
add
incl
xchg
dec
add
mov
out
incb
aaa
incb
mov
popf
pop
imul
push
inc
enter
push
add
cmp
add
inc
mov
imul
dec
add
mov
or
add
les
add
gs
mov
pop
mov
push
add
xchg
cmp
bnd
cmp
add
add
scas
js
cmp
pop
incl
and
add
sti
inc
hlt
incb
incb
arpl
sbb
iret
add
add
test
jns
or
sbbb
lret
outsl
movsb
push
add
in
mov
jl
adc
pop
lea
incb
sbb
stos
or
or
pop
mov
int
push
add
cmp
adc
add
add
popa
loop
incb
sub
in
cld
incl
cmc
cmpsl
add
add
mov
mov
jne
add
jle
dec
and
add
incb
icebp
and
add
fcmovbe
or
jae
adc
add
xchg
cmp
add
inc
mov
pslld
jge
into
outsb
add
mov
adc
add
add
dec
stos
test
incb
loopne
ja
incl
out
add
add
popf
push
add
fdivrl
outsl
jp
add
incl
lcall
testb
mov
incb
test
incl
out
xchg
or
inc
add
sahf
fmull
mov
mov
out
sahf
loope
add
rol
test
add
incb
andps
loope
add
fwait
rorl
pop
mov
add
cwtl
push
add
add
add
hlt
imul
jmp
outsl
and
add
add
add
out
incb
mov
dec
ret
pop
mov
cmpb
and
lret
push
add
jmp
mov
add
add
test
mov
pop
add
mov
jb
mov
add
incb
cmp
fmul
fisubrs
xchg
inc
jecxz
add
add
incb
bswap
jl
sub
pop
mov
pop
add
cs
sub
pushf
lahf
outsb
add
inc
cs
pop
cwtl
out
cmp
add
add
add
dec
test
add
flds
insl
sbbb
jecxz
dec
mov
test
add
add
out
mov
enter
add
cwtl
bswap
ja
add
add
incb
xchg
mov
lods
adc
add
mov
mov
add
incb
lods
sub
add
add
incb
repnz
loopne
adcb
add
xchg
out
data16
incb
test
add
push
add
add
jo
fwait
mov
int3
adcl
sti
inc
add
jo
shll
add
or
ret
cltd
sar
pop
add
incb
mov
outsb
add
test
js
out
shll
add
add
jp
nop
inc
shlb
sub
incb
mov
add
mov
add
incb
in
xor
add
incb
mov
incb
enter
sbb
cmp
and
add
incb
aas
imul
adc
add
incl
fucompp
xor
add
ret
add
shl
icebp
jp
fldenv
xor
add
sbb
mov
outsb
add
clc
push
incb
sub
push
add
loope
push
add
incb
lods
movsb
insb
add
add
sbb
aad
mov
add
inc
lahf
pop
add
and
add
incb
xchg
xor
add
shlb
add
dec
add
pop
lds
push
add
sti
and
add
xchg
incb
push
add
loop
jp
add
add
incl
adc
add
incb
enter
pop
jcxz
and
add
incb
xor
add
sarl
rclb
incb
jmp
test
xchg
shll
sub
jae
incb
add
incb
sub
adc
ds
mov
inc
call
add
add
sbb
add
outsl
jae
incb
lds
incl
lret
pop
movsb
pop
in
or
in
pop
incb
and
add
add
lds
add
incb
mov
mov
fmulp
adc
xchg
rclb
sbb
pop
mov
add
int
add
push
push
incb
and
add
adc
add
add
inc
add
sbb
les
add
sbb
jnp
psubusb
shlb
incl
shrl
aas
cmp
inc
and
add
into
sarl
insb
add
pop
add
fcmovb
and
add
incb
in
mov
mov
add
cmp
mov
in
push
add
add
add
add
add
cli
mov
and
add
xor
add
out
push
add
incl
lcall
in
fdivrs
mov
add
push
repz
jmp
jne
insl
ret
xlat
cld
fnsave
test
decl
add
incb
inc
add
and
incb
pop
fstpt
xor
add
sub
mov
stos
lret
out
add
jg
inc
add
xchg
or
dec
mov
add
mov
push
and
add
add
mov
add
nop
stc
stos
jnp
xlat
cmpsb
pop
and
add
mov
add
and
add
xchg
add
xchg
scas
cmp
incb
js
jle
jl
mov
aad
pusha
add
shll
add
jge
jg
and
add
rorb
shlb
add
adc
add
jg
mov
and
add
add
add
jg
incb
lret
inc
add
incb
xchg
mov
inc
add
data16
incb
jg
in
add
incl
pop
add
jmp
incb
stos
xchg
in
lcall
add
sub
add
repnz
sub
mov
add
xlat
ljmp
add
jo
and
add
incb
adc
out
into
and
add
pop
in
push
add
sbb
movsl
setns
incb
lds
dec
adc
add
call
add
xchg
imul
add
xor
shrl
incb
arpl
test
sarl
mov
push
incb
sub
sub
push
incb
imul
je
xor
add
push
enter
ljmp
imul
sub
shlb
or
mov
ljmp
push
add
fsub
adc
add
jmp
add
add
cmp
add
leave
stos
add
add
mov
xchg
aaa
incb
test
aas
lea
fidivl
pop
add
out
incb
dec
add
mov
incb
std
jns
incb
adc
add
add
mov
pop
incb
sbb
mov
jnp
and
lret
mov
out
add
incl
cmpsl
fwait
aam
xchg
incb
jp
cmp
push
inc
cmpsl
cmpsl
cltd
add
adc
add
mov
sub
mov
add
mov
xor
add
cwtl
sbb
mov
add
addr16
or
loopne
sub
add
mov
jp
pusha
add
pop
add
add
mov
movsb
mov
add
add
add
sbb
incb
loopw
int
jnp
add
add
incl
mov
scas
call
add
dec
add
pop
incb
xchg
inc
add
icebp
xchg
sbb
add
incb
push
incb
mov
add
stos
addr16
add
incb
cs
mov
mov
int
incb
insl
in
incb
jae
incb
icebp
xchg
shr
inc
fmuls
fwait
push
rcr
add
add
sub
pop
repnz
nop
add
add
xchg
push
incb
sar
xchg
inc
add
xor
incl
sbb
sbb
in
add
pop
add
incl
mov
add
sarb
ja
add
add
rolb
adc
incl
and
add
scas
stc
sub
ret
cwtl
sbb
jl
adc
add
add
add
add
aad
and
add
cmc
lds
incb
popa
negl
dec
add
imul
jle
pop
mov
test
test
dec
add
cmc
jl
pop
movsb
icebp
nop
inc
sub
cmp
insl
inc
adc
add
ljmp
cmp
rcrb
add
js
ret
pop
add
shlb
add
push
add
xchg
add
iret
hlt
insb
add
daa
incb
out
incl
cmp
shr
shrl
add
add
fstps
in
inc
lods
jg
adc
add
incl
rcrl
decl
incb
aam
add
add
add
clc
xor
add
dec
add
add
mov
add
sbb
cmp
out
clc
dec
add
incb
ret
add
xchg
mov
add
addr16
push
in
mov
push
xor
add
incb
sub
shlb
add
adc
add
push
push
in
cmc
or
add
incb
push
mov
ret
iret
push
arpl
pop
dec
scas
jb
fisubl
incl
loop
add
jb
incb
xor
add
add
arpl
or
add
scas
pop
add
sub
in
out
jl
add
shll
jle
push
xor
add
mov
loope
incl
lcall
stc
jle
addr16
add
leave
std
sbb
in
push
incb
jne
rol
leave
mov
and
add
add
ljmp
popa
mov
pushf
mov
or
add
add
dec
iret
pop
jb
mov
inc
add
addb
add
dec
js
jne
add
mov
imul
mov
xor
add
stc
daa
incb
jle
push
incb
push
incb
ret
cwtl
fwait
imulb
add
aas
movsl
leave
push
add
xchg
adc
add
add
cld
push
add
lret
add
add
ret
add
add
incb
mov
pop
incb
out
call
test
incb
push
add
mov
add
add
add
add
insl
incl
inc
add
cmpl
incb
add
add
in
sub
incb
add
xor
add
fsubs
add
add
push
mov
addr16
inc
add
xor
add
nop
jns
pop
add
andl
and
add
dec
add
push
mov
xchg
adc
add
cli
inc
scas
mov
dec
xor
add
add
xchg
sbb
adcb
add
aad
push
cmpsb
fisubl
fwait
movsl
adc
inc
add
add
and
add
je
repnz
add
mov
lods
hlt
sbb
xchg
mov
pop
add
mov
add
loope
add
pop
add
cld
mov
sbb
add
add
loopew
add
repnz
fwait
dec
add
test
cmp
adc
add
mov
les
add
add
pop
incl
mov
mov
mov
jmp
or
jo
test
mov
xchg
fst
sbb
fs
cmp
les
add
and
add
incb
shlb
mov
cld
lret
inc
mov
movsl
movsb
nop
rcr
rcl
pmaxub
cmpsb
pop
add
or
aaa
incb
mov
push
add
in
xchg
incb
nop
in
cmpsl
std
rolb
pop
mov
jge
incb
lret
fs
sub
jmp
inc
add
add
add
int3
fists
lods
dec
sbb
dec
xorb
test
dec
add
add
or
dec
sub
add
add
mov
incl
push
incb
sar
sbb
decl
sbb
lods
dec
inc
add
add
add
loopne
inc
add
add
mov
add
call
js
mov
add
adc
add
sahf
mov
or
cmpsl
or
lahf
andl
or
adc
add
pop
incb
je
sbb
incb
test
add
incl
mov
nop
insl
mov
cmp
pop
add
fcom
incb
adc
add
add
pop
push
add
mov
ljmp
add
add
incb
in
ljmp
add
aam
adc
add
or
std
push
add
incl
mov
add
add
incl
dec
add
out
xchg
cmpsb
cmc
lock
add
les
pop
add
loopne
mov
incl
xor
add
pop
mov
push
and
add
fcomp
pusha
add
add
notb
cmc
xchg
add
and
add
cmp
ljmp
mov
or
iret
notl
incb
int3
call
std
loope
outsb
add
out
pop
add
movsl
adc
add
outsl
ja
stos
fldl
mov
int
int
pop
push
incb
shrb
mov
dec
add
fsubr
or
add
adc
add
sti
pop
push
add
incb
rorb
adc
add
popf
cwtl
inc
add
repnz
incb
out
add
aas
cwtl
inc
add
jle
pop
and
add
in
add
std
or
xor
add
popa
fldt
jne
or
jmp
xor
add
jns
stos
ficompl
xchg
push
add
incl
jmp
jmp
add
mov
add
jg
add
not
pop
add
mov
vsqrtpd
pop
ficomps
add
ret
xchg
jecxz
mov
incb
xchg
inc
add
lret
mov
mov
pop
add
incb
ret
mov
cltd
test
add
add
stos
or
xor
add
incb
xlat
dec
sub
incb
xchg
lea
incb
imul
test
ret
fstl
incl
cli
rorb
mov
inc
add
lret
incb
mov
add
mov
incb
das
adc
shll
sub
lds
fnstenv
incb
jle
inc
test
add
add
incb
lock
dec
add
das
mov
jl
mov
lret
pop
leave
ficoms
pop
outsb
add
iret
rcr
sub
lret
incb
pop
add
incb
icebp
fdiv
cmp
js
push
mov
mov
mov
bound
iret
xchg
jg
std
and
add
hlt
por
shr
or
mov
push
add
mov
add
pushl
mov
xor
add
inc
nop
and
add
lahf
sbb
add
cli
arpl
add
add
jb
lea
incb
out
sbb
insb
add
scas
adc
add
incl
shl
add
call
out
incb
das
iret
xchg
aad
push
incb
xchg
std
loope
add
cmpb
add
add
xor
add
add
lahf
xor
add
incb
rcl
adc
add
incl
and
add
add
add
cmpsl
push
outsl
sbb
add
add
inc
add
and
add
inc
fwait
mov
icebp
pop
add
add
add
add
insb
add
dec
shrl
add
mov
lods
cmp
pop
push
rorb
dec
add
incb
sbb
lahf
cmp
pop
add
incb
js
bound
push
arpl
sub
push
pop
add
add
mov
inc
aas
and
add
incb
int3
or
cmc
xchg
inc
shll
out
xchg
incb
iret
xor
add
add
jns
xchg
stos
push
imul
push
mov
incl
sbb
mov
add
or
orb
rolb
sbb
jne
fisttpll
mov
push
incl
je
insb
add
adc
add
jg
ljmp
addr16
xor
add
pop
incb
sbb
mov
sub
add
incl
mov
add
add
dec
hlt
cmp
push
add
shr
call
add
inc
inc
sbb
jno
incb
lahf
test
ret
outsl
adc
add
incl
mov
mov
push
daa
incb
xlat
dec
jmp
roll
add
bound
std
rolb
lds
add
xor
add
add
or
push
xor
add
add
dec
add
data16
incb
pop
scas
or
or
pop
jnp
add
test
mov
add
out
cmp
fdivl
incb
insl
shlb
iret
mov
add
incb
je
pusha
add
jp
repz
clc
nop
and
outsb
add
incb
xchg
cli
and
add
add
scas
loope
in
adc
test
and
add
or
arpl
mov
dec
pop
incb
mov
data16
incb
mov
jne
bound
int3
and
add
stos
imul
incb
cli
sarb
insl
inc
loop
into
sbb
add
data16
aam
in
lret
sub
inc
add
mov
aas
pop
add
add
add
and
add
fldt
imul
add
shlb
incb
cwtl
lock
mov
cld
test
sbb
or
and
add
sbb
stos
mov
or
pop
add
fildl
incb
push
incb
jl
repnz
jo
mov
add
jecxz
fildl
add
inc
add
add
add
add
shll
pop
mov
pop
incb
mov
add
sub
incb
arpl
sub
xchg
pop
lcall
cltd
xlat
dec
add
incb
loope
js
lock
xchg
and
add
xchg
pop
pop
add
stos
add
jno
sub
cmp
add
add
push
js
add
cmp
sub
sbb
les
add
add
incb
inc
inc
ljmp
add
iret
mov
push
add
incb
sar
and
add
imul
and
add
fxch
incl
int
movsb
aad
add
add
xor
add
incb
dec
add
push
add
xchg
cwtl
fstps
and
add
pop
add
ret
xor
add
dec
add
xchg
add
add
call
into
arpl
incb
je
lcall
aas
pop
add
divl
add
mov
out
out
lret
xor
add
add
dec
add
add
or
add
add
incl
cmpsb
sbb
push
jns
adc
add
dec
or
cmpb
mov
add
jnp
sbb
pusha
add
jno
pop
sub
sub
inc
add
and
add
mov
incl
fldz
xchg
mov
sarl
fdivrs
repnz
ljmp
int
incb
mov
incb
pop
jnp
ret
ret
in
pop
add
and
pop
add
add
incl
sbb
test
cltd
xchg
xor
add
or
incl
xchg
inc
add
loope
fnstenv
int3
lret
mov
add
or
mov
incb
add
add
insb
add
incb
out
sub
dec
add
incb
mov
add
and
add
aad
cmpsl
add
add
jns
dec
and
add
cs
dec
negb
mov
jnp
clc
data16
in
push
mov
sahf
jge
lahf
movsb
test
add
incb
sbb
sti
test
hlt
add
add
sti
jge
add
inc
add
sub
aaa
incb
mov
inc
add
loope
insl
cmp
shll
test
xor
add
fdivrs
stos
leave
ror
incl
push
mov
xor
add
add
add
pop
add
incb
mov
incb
scas
mov
aas
mov
fwait
lock
push
add
incb
mov
add
jg
and
add
testl
add
sbb
dec
add
mov
jmp
div
jo
sub
out
incl
xor
add
dec
lock
movsl
lret
decb
insl
nop
inc
add
and
add
cmpsl
arpl
sub
sub
jno
xchg
pop
scas
mov
into
fsubr
sbb
repnz
incb
jle
ja
jne
incb
je
rorb
add
test
incl
adc
add
out
sbb
inc
add
or
sub
add
add
add
mov
popf
mov
jle
add
add
add
incb
insb
add
andb
icebp
jbe
pop
push
add
ret
std
addr16
push
add
or
int
insl
cmp
sub
and
add
in
inc
pop
incb
xor
add
aad
negb
add
popf
mov
incb
call
incb
fcmovne
into
cmpsb
jp
jecxz
add
mov
and
add
js
popf
loopne
incb
cmpsl
dec
add
mov
add
incb
lret
xchg
adc
incb
sub
rcll
imul
jmp
add
nop
in
imul
add
out
incl
add
incl
jl
fldt
and
add
add
ret
add
les
sub
mov
jl
add
add
incb
xlat
cmc
mov
add
add
popa
jp
or
and
add
lds
incb
pop
out
adc
add
imul
ret
incb
addr16
scas
insb
add
mov
add
or
cmp
pop
add
add
add
add
fwait
push
add
mov
into
bound
push
mov
imul
mov
mov
cld
jb
sub
pushl
add
lret
adc
fldenv
incb
shl
push
push
sub
incl
leave
mov
leave
cmp
incl
push
add
add
mov
xchg
and
add
inc
add
sbb
add
pushf
fildl
incl
clc
test
ret
cmp
add
add
xchg
xchg
mov
incl
fld
pusha
add
popf
popa
jo
xchg
xor
add
xchg
sub
mov
add
ja
incb
push
add
mov
incl
fists
adc
add
add
and
add
xor
add
incl
out
or
sub
xor
add
incl
xor
add
push
add
cmc
dec
scas
pop
add
add
bound
lahf
hlt
mov
incb
mov
dec
pop
aam
incb
dec
add
gs
dec
add
push
or
sbb
xchg
jnp
and
add
stc
sbb
xlat
lds
inc
add
xchg
loop
incl
push
cltd
cmp
lret
fucomi
xorb
insl
xor
add
dec
fnsave
incl
push
int3
mov
call
add
aas
iret
or
add
test
fldcw
jge
data16
xor
add
incb
das
pop
add
add
jo
punpckldq
test
add
incb
jne
or
xchg
aaa
incb
call
add
pop
pop
mov
add
and
ja
add
incb
xchg
incb
adc
add
cmp
loope
add
incb
pop
lds
icebp
lret
add
adc
add
add
incb
add
add
clc
das
sbb
add
insb
add
sahf
insl
adc
add
and
add
icebp
fstl
mov
add
test
repnz
ret
imul
dec
cmc
mov
add
push
pop
xchg
loopne
adc
add
add
add
inc
add
adc
add
push
cmp
jmp
scas
mov
das
test
add
add
jns
sbb
in
cmp
add
inc
add
incb
ret
add
add
incb
je
arpl
pusha
add
add
std
stc
adc
add
inc
leave
mov
add
add
incb
rclb
xor
add
mov
xor
add
nop
xlat
hlt
dec
inc
add
or
lock
cwtl
and
add
test
add
cwtl
shlb
push
call
aad
aaa
incl
dec
add
adc
add
incl
pusha
add
add
add
incb
in
pop
add
add
add
mov
incb
mov
add
xor
add
mov
incb
fwait
repnz
mov
das
inc
add
popf
ds
mov
nop
push
add
add
aam
incb
arpl
or
orl
pop
fildl
incb
push
add
incb
inc
add
add
iret
lret
fmulp
shll
mov
incb
iret
add
xchg
mov
sbb
sbb
incb
xchg
fsubrs
add
mov
xlat
adc
add
clc
repz
add
pop
sbb
lea
faddl
add
jns
jno
or
or
inc
imul
les
add
add
incb
ja
inc
aaa
incl
js
or
inc
mov
adc
add
add
jns
aaa
incb
loope
incl
imul
cwtl
sbb
ljmp
add
incb
and
add
pushf
cmp
mov
add
aas
popf
jo
mov
incb
push
add
incb
incb
dec
xorb
add
add
add
incb
xor
add
shr
fists
pop
add
add
dec
pop
xor
jne
out
add
lret
mov
bound
incb
adc
add
std
aaa
incl
jp
adcb
sbbl
add
incb
xlat
mov
adc
dec
sbb
ret
add
pop
add
incb
sbb
add
out
adc
add
add
leave
sbb
nop
stos
les
adc
add
incb
enter
add
add
add
incl
pop
add
dec
aaa
incb
and
add
pop
add
in
mov
repz
xorl
pop
out
add
push
xchg
incb
add
add
add
xchg
cmpsl
fdivl
incl
orl
sbb
ljmp
add
cwtl
rol
add
jb
mov
addr16
clc
inc
jo
push
cmp
adc
add
incb
stc
movsb
add
loop
xchg
xor
add
repz
xorb
add
incb
jl
cltd
in
aas
cmp
sub
movsl
add
into
std
fwait
sub
add
add
incb
jmp
cmp
xchg
pop
mov
and
add
lods
lea
incb
sbb
push
add
incb
mov
movsb
nop
into
leave
add
add
add
fbstp
mov
negb
incb
or
mov
dec
std
or
ret
popa
mov
sbb
jl
mov
add
bnd
add
add
incl
roll
incb
xchg
mov
cmp
xor
add
mov
mov
test
test
roll
aad
adc
add
cmp
in
cmp
dec
add
sbb
in
add
repz
add
add
add
mov
std
aam
sbb
push
add
incb
mov
lock
add
mov
add
mov
add
push
pop
add
jmp
xchg
mov
repnz
add
add
jbe
icebp
pusha
add
add
faddp
push
cmp
out
jge
incb
iret
sbb
pushf
inc
push
add
dec
int3
jo
mov
sub
incb
cs
dec
add
pop
add
jecxz
mov
mov
add
add
add
sub
mov
cmc
add
add
adc
add
incb
stos
leave
jmp
add
incl
push
add
bound
arpl
enter
add
loopne
push
add
incb
lds
clc
daa
incb
sbb
ret
mov
rol
cld
or
push
add
orb
incb
and
add
sub
in
pop
add
xor
incb
gs
add
xchg
cmp
mov
mov
mov
incb
mov
sbb
and
add
dec
xor
add
xor
xchg
movsb
movsl
dec
fwait
aas
lret
xchg
push
add
inc
sbb
cmp
stos
adc
add
push
add
incb
pushf
dec
add
push
add
add
ficompl
add
xchg
dec
add
mov
rcr
sbb
mov
push
add
mov
pop
incb
xlat
mov
sbb
pop
lods
jnp
loopne
cmp
xchg
pop
sbb
lea
add
inc
sub
jecxz
push
add
mov
incb
mov
mov
int
add
cltd
jnp
clc
fildl
jne
outsl
add
add
adc
add
add
incb
push
incl
dec
lsl
add
sub
jg
sub
mov
add
lahf
xchg
xchg
push
pop
add
and
add
and
add
lds
incb
imul
add
lret
jl
fcompl
call
pop
add
push
dec
cmpsl
lret
testb
shll
add
bnd
incb
dec
add
incl
imul
lret
stc
xlat
xchg
adc
add
mov
stos
lock
mov
or
pop
add
push
incb
shrl
fsubrs
sbb
incl
vcvttps2dq
scas
mov
and
add
fcmovne
add
add
mov
pop
incb
xchg
aad
xchg
add
jns
mov
int3
aas
push
lahf
sarb
jge
incb
dec
and
mov
incb
cld
adc
add
jmp
outsl
in
xorl
add
cmp
lods
add
hlt
mov
jbe
push
add
add
incb
arpl
icebp
dec
into
shlb
dec
add
add
scas
mov
aad
std
mov
rorl
add
add
pop
incb
xchg
xchg
imul
cltd
pop
add
jg
in
repz
add
adc
add
das
test
stos
emms
sub
adc
add
div
xchg
out
add
jecxz
xlat
xchg
loopne
xlat
dec
add
mov
add
incb
adc
add
incb
xchg
jmp
add
mov
js
loope
in
add
add
movsl
rclb
incb
inc
add
mov
add
push
test
incb
cli
sar
incb
jbe
adc
add
incl
fisubs
add
add
mov
xor
add
js
ja
add
add
cwtl
dec
add
incb
or
stos
inc
add
mov
push
incb
shll
hlt
ret
add
ffree
push
add
mov
add
inc
add
add
dec
pushl
jae
incb
pop
xchg
addr16
sub
add
incb
jp
jbe
xchg
insl
sub
push
add
incb
jge
xlat
add
dec
add
nop
xchg
stc
xlat
aad
mov
pop
add
aaa
incb
mov
add
adc
add
repz
add
fdivrl
inc
add
mov
imul
incl
xor
add
incb
cmc
enter
les
add
add
lds
cli
dec
add
sbb
lahf
std
out
incl
scas
xchg
push
incb
fnsave
mov
xchg
mov
incb
xor
add
sbb
mov
mov
test
lret
xor
add
inc
add
incl
loopw
add
sub
sub
dec
fldt
add
lods
frstor
cmpsl
sub
inc
add
add
add
loopne
sub
push
incl
scas
push
add
incb
jecxz
xchg
incb
stos
cmp
cmp
dec
mov
sbb
stos
jl
adc
add
dec
lea
incl
cmp
in
mov
add
or
int
mov
add
incl
add
add
stos
and
add
std
cmp
add
mov
and
add
insb
add
jmp
rorb
add
in
lret
shll
incl
adc
add
push
add
popa
lds
lock
add
add
mov
mov
mov
hlt
or
sub
ja
add
incb
adc
add
incb
mov
testb
xchg
ds
cltd
jne
add
add
add
add
std
inc
add
jae
cltd
cmp
aas
repnz
jl
aam
fisubrl
add
add
add
xor
add
jno
and
mov
cli
out
mov
or
fwait
cmpsl
mov
movsl
popa
scas
loopne
mov
adc
add
add
incb
pop
incl
dec
add
or
mov
cmp
mov
negl
inc
add
jo
xor
add
add
inc
adc
add
pop
add
loope
add
clc
and
mov
pop
add
push
incl
dec
add
fdivs
ja
lret
les
mov
test
add
add
add
sub
jl
cli
cmp
inc
add
incl
sbb
nop
dec
add
dec
push
incl
xchg
shlb
incb
test
int
sub
out
xor
add
incb
sub
iret
sub
leave
daa
incl
push
incb
dec
push
add
add
add
add
leave
mov
cmpb
xor
add
pop
incb
loope
add
lods
repz
int
dec
add
incb
fcomps
sub
rcr
int
add
incl
stos
jmp
add
sti
mov
add
lret
out
jne
pop
in
rorb
mov
add
add
add
mov
gs
xchg
lea
dec
jne
incb
adc
add
mov
incb
das
dec
frstor
add
inc
add
dec
jb
data16
lcall
enter
fcom
adc
add
gs
incb
push
add
lea
add
incb
cmpb
incb
xchg
mov
inc
call
icebp
cmp
xor
add
incl
mov
xchg
in
jle
adc
add
add
add
loop
inc
add
inc
add
adc
add
xchg
or
sbb
sub
dec
add
cvttps2pi
or
sar
cmc
add
add
add
and
add
add
or
push
pop
cmp
out
inc
jno
add
sub
fwait
mov
dec
add
repnz
fwait
cld
lahf
popf
negb
add
out
rcr
cmc
mov
push
add
add
cwtl
inc
add
cmpsl
incl
xor
inc
pop
stos
adc
incl
cltd
mov
popa
or
subl
add
jl
push
add
sti
testl
mov
incb
mov
add
or
cmp
pop
add
add
in
pop
add
add
xchg
sbb
inc
mov
add
out
arpl
movsb
xchg
outsb
add
pop
out
and
cmp
pop
pop
loope
push
mov
add
incb
lds
lret
incb
lcall
mov
incl
dec
mov
add
jg
incb
jns
and
add
push
add
movsb
sub
test
idivb
add
add
add
out
shl
and
add
incb
fcoml
incb
jp
das
mov
push
add
and
add
stc
cmc
add
incb
mov
mov
push
mov
or
inc
add
insb
add
add
xchg
or
mov
add
loope
lcall
add
and
add
add
push
add
push
push
adc
pop
incb
pop
divl
incb
in
test
add
lret
mov
add
dec
mov
add
add
incb
mov
add
out
xor
add
incb
mov
push
add
incb
in
add
dec
cmpsl
dec
add
mov
ret
incb
cmp
incb
adc
add
add
add
mov
or
movsl
cmpb
jle
jp
xor
add
inc
mov
out
xchg
xchg
mov
cli
outsb
add
orb
incb
xor
add
incb
mov
cmp
sbb
arpl
add
add
jle
sbb
jns
fisubs
in
les
add
mov
jmp
pop
xchg
pop
add
das
bound
sbb
add
add
incl
out
xorb
daa
incb
enter
add
mov
add
out
push
add
add
stos
mov
add
les
incb
push
cmp
out
fbld
incb
add
std
pop
incb
js
pop
incb
imul
incb
sub
adc
add
gs
add
mov
incl
xor
push
mov
pusha
add
test
jns
pop
incl
lahf
frstor
add
add
xchg
out
fldt
mul
icebp
xchg
xchg
test
add
and
add
jae
add
daa
incb
lret
leave
mov
add
in
sub
sub
stc
mov
clc
fildl
push
stos
call
add
add
bound
fstps
add
or
add
add
incb
push
add
add
add
and
add
add
mov
lret
addb
add
jae
jl
add
add
push
incb
lcall
add
xchg
pop
incb
icebp
mov
incb
add
add
and
add
mov
and
push
sub
incb
and
add
add
ljmp
add
cmc
push
add
imul
sarl
dec
add
mov
loop
add
loopne
pop
add
fwait
mov
add
jns
sub
pop
and
inc
add
add
mov
add
outsl
movsl
icebp
popa
pop
add
sub
add
aaa
incl
sarb
incl
mov
add
cmp
add
mov
push
add
stc
jno
incb
sbb
sbb
push
sbb
data16
xchg
addr16
cmp
dec
add
cwtl
push
pop
push
jge
incb
mov
xchg
or
outsl
mov
dec
add
pop
incb
mov
addb
mov
out
pop
dec
dec
in
sbb
mov
pop
add
lods
into
pop
incb
add
add
in
add
lods
cmp
lods
cwtl
shll
add
pusha
add
push
add
in
jnp
movsb
dec
add
inc
cmp
and
add
out
incb
stc
daa
incb
inc
add
add
add
jmp
call
lcall
and
add
test
les
add
jmp
rcr
push
add
incb
push
add
repnz
push
movsb
lods
in
add
incl
xor
sub
call
lret
lds
add
mov
aas
sbb
or
jns
clc
mov
shrl
mov
gs
rorl
dec
lods
ds
xchg
mov
add
stc
cmp
add
aaa
incb
push
add
lods
adc
add
incb
sub
mov
add
add
incb
fcoml
push
int3
sub
push
add
push
incb
push
add
or
pop
incl
xchg
pop
add
mov
adc
add
cmp
add
fistpl
add
xlat
shl
incb
and
add
push
jne
add
or
pop
add
data16
inc
jecxz
xchg
incb
fmull
sbb
roll
ret
movsl
icebp
mov
nop
add
jb
mov
movsb
test
lea
add
cld
jb
negb
cmp
insl
repz
add
gs
lret
icebp
sub
stc
fsubrs
ret
fbstp
add
out
incb
scas
movsb
sub
mov
incl
hlt
mov
lret
add
add
pop
add
add
incl
cmpl
add
mov
add
incb
aam
pop
leave
orl
incb
mov
add
jne
aam
jns
add
push
incl
push
pop
incl
test
incb
or
sub
mov
incl
scas
ret
xor
add
xor
add
shrb
push
add
cmc
popa
popf
call
test
test
pop
add
add
add
incb
movsb
arpl
jb
in
int3
sbb
sbb
aaa
incb
hlt
sbb
cmp
sub
sub
lods
dec
add
jns
or
and
add
incb
hlt
add
add
add
mov
xorl
add
jne
add
incb
insb
add
and
add
insb
add
add
incb
nop
sbb
add
pop
jbe
push
add
mov
incb
mov
jae
incl
andl
add
incb
pop
add
add
adc
add
inc
out
cwtl
push
add
addr16
rclb
add
cmc
movsl
ljmp
inc
incb
sbb
add
add
add
add
mov
adc
add
insb
add
sub
incl
sub
add
add
sar
pop
daa
incl
int3
cmovb
test
mov
sbb
sub
jns
add
xor
add
add
enter
iret
push
insb
add
les
cmp
xchg
dec
fimull
movsl
dec
ds
add
incb
movsl
lcall
add
or
stc
in
incb
adc
add
mov
push
add
shll
push
add
sbb
mov
xor
js
sti
xchg
popa
leave
xchg
icebp
or
add
add
ficomps
add
inc
add
std
mov
pop
incb
cltd
incb
fcomip
testl
add
into
int
sub
rcrb
add
cmpsl
les
incl
jl
or
and
add
out
lret
loop
add
in
test
add
and
add
out
incl
arpl
mov
inc
add
incl
push
add
pusha
add
lock
ds
std
insb
add
incb
push
add
add
insl
out
in
add
pusha
add
incb
cltd
and
add
incb
outsl
mov
test
pop
incb
and
add
dec
subb
push
add
add
add
popa
mov
add
lds
xchg
incb
stos
cmp
aaa
incb
add
incb
mov
cmp
enter
in
push
add
cltd
jo
stos
cmpsb
mov
cmp
aas
cli
inc
faddp
cmp
incl
daa
incb
push
incb
inc
add
movsl
pushf
dec
inc
add
stc
adc
add
add
mov
lock
incb
lea
add
and
mov
mov
scas
loop
jge
incl
mov
xchg
adc
add
repz
mov
sbb
and
add
stos
shll
dec
subps
mov
in
jecxz
out
add
add
xchg
pop
add
incl
push
add
add
or
push
incb
jg
jo
inc
add
push
incb
into
pushf
sub
clc
popa
int3
aaa
incb
add
add
cld
cltd
cmp
inc
nop
mov
adc
add
pushf
cmp
xor
hlt
stos
or
push
xor
add
mov
incb
or
push
add
rorb
add
xor
add
ja
mov
sub
lret
dec
add
hlt
xchg
icebp
cs
xor
add
push
push
add
incb
lds
pop
xchg
mov
pushf
or
daa
incl
adc
add
ret
incb
adc
add
push
lret
and
add
les
mov
xor
add
fisttps
add
mov
add
add
mov
push
cmp
mov
incl
ret
test
sbb
mov
incb
or
in
push
add
lcall
add
mov
incb
sbb
push
add
and
add
js
scas
push
add
and
add
test
loopne
push
pop
sub
jns
loop
add
add
aas
mov
pop
lock
fidivl
jb
fnstenv
add
mov
adc
add
add
jge
cmc
mov
mov
add
decl
incb
cmp
int
aas
cld
xchg
imul
out
jp
mov
lcall
imul
add
sub
dec
add
lds
add
stc
imul
add
aad
addr16
add
incb
xchg
je
push
add
lahf
int
into
push
xor
add
out
or
loop
add
dec
add
incb
mov
loopne
add
arpl
add
inc
add
hlt
sbb
out
out
incb
and
add
mov
push
add
push
add
mov
cmp
cmc
mov
dec
add
add
inc
lock
ja
add
loop
incb
mov
cs
int
fadds
incb
popf
stos
lret
out
pop
fildl
daa
incb
leave
inc
xchg
inc
add
dec
in
inc
cs
jae
cs
xchg
mov
sub
sub
cmpsl
mov
jl
cli
dec
add
adc
inc
add
add
add
stos
pop
xchg
pushf
push
add
jecxz
add
incb
jmp
test
test
incb
insl
cmp
incb
sbb
incb
fisttpll
sti
stos
je
out
les
popa
dec
add
xorb
add
add
loop
pushf
and
add
xchg
pop
add
andb
add
testl
add
incl
ja
incb
xchg
mov
incb
movsl
int3
xor
add
xchg
sbb
pop
mov
add
add
loop
cmpsb
sti
mov
add
cmp
addl
add
cli
sbb
add
incl
mov
incl
mov
cwtl
mov
add
ret
add
push
add
xchg
loope
sbb
push
xor
add
addr16
fldcw
movsb
popa
add
add
cmp
cmpsl
xor
add
add
roll
cli
loope
aas
mov
sbb
add
add
dec
xchg
orl
incl
dec
sti
negb
mov
sbb
jmp
mov
cltd
dec
sub
mov
jb
mov
incb
popf
add
add
pop
add
mov
sbb
add
shll
add
call
add
incb
sbb
hlt
or
add
add
push
add
bnd
dec
add
dec
mov
add
add
dec
add
insl
mov
test
incb
fs
scas
push
incb
test
incb
mov
sbb
out
mov
push
aam
add
ret
daa
incb
jge
sub
call
add
adc
add
pop
out
and
add
incb
test
inc
cmpsl
lcall
fs
jmp
and
add
xchg
add
add
addr16
cmp
xor
add
cmp
add
add
cmp
sbb
xorl
add
aam
incb
jecxz
les
add
add
dec
fwait
aas
add
add
add
cmp
gs
stos
add
add
add
jmp
jg
mov
add
icebp
lock
and
add
mov
lret
add
add
incb
jns
incb
push
sbb
mov
flds
arpl
pop
mov
lret
push
add
incb
fucomip
in
sbb
xor
add
incl
adc
add
scas
mov
dec
mov
scas
shlb
xor
add
add
incl
ljmp
add
fdivrs
add
incl
fldenv
jg
pop
add
sub
add
mov
and
add
dec
lods
dec
jp
add
add
lea
mov
dec
fcoms
add
cmp
mul
pushf
jae
sbb
sub
aam
add
add
add
incl
or
inc
add
lods
cmpb
add
add
jbe
xlat
incb
dec
jp
leave
lods
push
add
cmp
add
xchg
enter
in
mov
aad
incb
sbb
mov
mov
scas
push
jnp
add
sub
incb
sbb
cltd
push
jge
iret
dec
add
add
inc
xchg
mov
add
sbb
pusha
add
mull
incb
mov
sti
jp
rorl
or
dec
dec
add
mov
gs
std
push
add
jp
or
and
add
pop
pop
incb
xor
add
add
test
mov
cli
and
add
out
ljmp
ret
imul
fwait
push
add
add
incl
jle
into
mov
sub
jnp
add
incb
pop
xor
add
mov
add
cmpb
add
add
fists
push
add
fs
test
jg
lcall
push
add
insb
add
incb
pop
add
and
add
cmp
icebp
call
jno
incb
dec
add
mov
repnz
cli
enter
add
push
adc
add
mov
test
pshufb
sub
sub
or
cs
lock
scas
notb
incl
mov
stos
les
sarl
call
js
jp
pop
lret
or
pop
add
jecxz
lea
push
lcall
xor
add
repz
fistpl
enter
out
jl
cmpsl
rcrl
mov
out
movsl
inc
add
push
jle
sub
cmp
pop
repz
lret
add
test
add
or
or
push
add
add
xor
add
pop
add
neg
add
add
mov
push
add
ret
add
pop
add
incl
daa
incb
aaa
incb
mov
push
add
cmp
cmp
std
pop
lods
fidivs
outsb
add
incb
push
add
xchg
jae
add
add
cld
data16
inc
test
sbb
or
incb
inc
add
add
mov
ret
add
and
add
incb
sbb
std
sbb
add
sbb
scas
pop
add
pusha
add
testl
add
in
incl
push
add
dec
add
jns
add
sarb
nop
in
add
push
add
mov
push
incb
out
out
jns
jp
adcb
add
push
add
lcall
cld
mov
enter
orb
incb
shll
add
jp
mov
add
add
subl
jb
pusha
add
and
add
add
incb
cli
adc
add
push
add
ret
and
add
out
dec
add
push
add
jnp
incl
addr16
in
int3
xchg
mov
add
and
add
mov
out
mov
int3
jmp
add
add
mov
push
mov
add
sub
add
repz
inc
sub
sbb
adc
add
incl
adc
sbb
popa
iret
inc
bswap
push
add
cmp
push
xchg
push
mov
and
add
incb
mov
lock
mov
arpl
and
add
incb
les
incb
imul
add
add
push
add
incb
rolb
xor
add
scas
or
incb
mov
add
push
pop
mov
push
addr16
push
incl
pop
add
add
jo
daa
incb
faddl
fisubrs
add
js
cmpsl
mov
incb
inc
add
int
push
lds
incb
fbld
incb
jnp
add
incl
cmp
jp
xor
dec
add
cli
fldcw
incl
jne
out
jns
incb
mov
mov
inc
cli
lret
push
add
adcl
cmp
test
add
add
movsl
jle
incb
mov
pop
fldt
sbbl
incb
test
add
incb
aad
incb
sbb
cwtl
data16
push
dec
sahf
xlat
hlt
mov
clc
cld
mov
jo
nop
test
movsl
stos
ret
lret
jbe
add
add
incl
out
adc
add
incl
pop
add
ficompl
mov
cs
and
add
arpl
add
outsb
add
xor
add
add
repnz
add
add
loop
jnp
or
mov
arpl
inc
add
pop
mov
add
mov
add
add
jmp
cmp
or
popa
pop
repnz
add
add
sub
rolb
data16
cmc
mov
sub
xchg
incb
xor
add
incb
or
jp
jecxz
xchg
ja
lcall
dec
sti
bound
push
add
push
fwait
add
add
add
add
add
add
add
enter
add
dec
mov
incb
sbb
sbb
push
add
pop
jmp
pop
add
incb
aas
sub
mov
pusha
add
ja
shlb
xchg
adc
add
incl
pop
inc
cltd
mov
add
and
add
inc
add
or
jp
push
or
cmp
incl
sbb
out
inc
add
mov
push
movsl
add
add
je
sbbb
mov
add
xchg
mov
add
mov
sbb
sti
fdivr
daa
incl
mov
hlt
lods
imul
movsl
mov
add
add
sbb
jae
popf
adc
add
incl
push
add
gs
add
add
incb
incb
jmp
incb
ljmp
xchg
incl
lret
fidivl
cmc
lock
pop
add
sbb
sti
pop
adc
add
incb
aad
xor
add
incl
and
add
insb
add
add
add
clc
adc
add
add
add
xchg
mov
incl
dec
xchg
or
pop
and
add
scas
inc
rcrl
add
into
and
add
xchg
or
add
incb
lret
fnstenv
dec
ret
jcxz
repnz
add
rol
test
mov
incb
mov
out
aas
add
add
sbb
movsl
jge
add
vunpcklps
add
add
addl
add
cwtl
test
add
add
adc
add
sub
dec
or
lock
add
dec
add
popf
add
add
jb
mov
cmp
incb
and
add
add
add
add
inc
xor
add
iret
fldcw
pushl
sub
mov
jnp
in
enter
mov
imul
add
inc
sti
aad
incb
sti
xchg
in
add
fldenv
incb
add
add
mov
out
xor
add
test
or
outsl
add
incb
sbb
or
inc
into
cmc
cld
mov
inc
add
lds
and
add
fildll
insl
pop
cmpsl
cmp
add
add
cmpsb
fidivl
add
incb
lds
incb
xor
add
add
jg
xchg
sbb
incb
adc
add
inc
cmp
add
or
or
incb
xor
add
incb
pop
add
incl
jge
bswap
lahf
fildl
incb
repz
add
incb
add
add
incb
dec
add
aad
jmp
or
stos
sub
and
add
add
incb
push
incl
popa
pop
add
out
incl
nop
pop
ljmp
incb
lcall
outsl
xsha256
cmpsb
rorl
inc
add
push
out
aaa
incb
adc
add
stc
add
add
out
cmp
or
mov
add
jmp
test
incb
mov
out
add
add
incl
shll
cld
xchg
push
incb
mov
in
inc
add
add
incl
outsb
add
incl
xor
add
movsl
stc
xchg
and
xchg
pop
add
inc
add
mov
add
push
add
incb
loop
or
cmpsl
push
in
pop
incb
xchg
cmp
push
add
incl
or
mov
imul
push
pop
add
add
add
add
push
shll
out
mov
int3
pop
add
cvtdq2ps
fwait
aad
incl
fstpt
add
sub
incb
fisubrs
incb
inc
mov
xor
add
fmul
mov
std
adc
add
incb
mov
lock
xor
add
cli
daa
incb
mov
add
adc
add
lcall
inc
add
test
call
incb
pop
incb
mov
mov
pop
push
ja
add
add
cli
inc
dec
add
imul
add
add
add
mov
add
dec
dec
push
incb
mov
icebp
inc
add
mov
add
add
push
incb
mov
lods
push
mov
fisubrl
and
mov
pop
add
add
ret
ret
mov
sbb
add
add
adc
add
incb
inc
add
sbb
add
andb
inc
add
cmp
pop
or
dec
cmp
jge
incb
pushf
aas
pusha
add
test
out
lcall
ja
imul
push
add
leave
nop
out
notl
incl
mov
incb
and
add
incl
add
add
add
mov
incb
out
incb
pop
add
jp
int
add
pushf
push
add
incb
jno
mov
sbb
add
jmp
sub
js
xchg
inc
add
add
cmp
sub
add
inc
lods
dec
sub
add
xchg
xor
add
add
or
sbb
jne
xor
add
push
add
mov
add
or
and
add
or
div
mov
imul
cld
mov
add
stos
inc
mov
xchg
and
add
in
incb
fnstenv
incb
lods
cmp
cmpl
daa
incb
push
movsl
xchg
out
mov
mov
add
add
add
lods
mov
outsb
add
popf
dec
test
mov
ffreep
andl
incl
pop
cmp
incb
lret
add
incb
shrb
push
incb
xor
add
pop
incl
mov
add
pop
add
add
mov
incb
and
add
push
add
add
jge
incl
icebp
testb
jge
xor
add
mov
sbb
xor
rcl
adc
add
movd
fsubs
incb
cli
rcl
add
cmp
xchg
pop
incl
xor
test
bound
mov
in
add
incb
or
mov
inc
add
add
incb
insb
add
inc
sbb
mov
pushf
sub
inc
add
incb
jns
add
jb
aad
fisttps
push
add
add
add
incb
iret
int3
mov
add
push
add
je
popf
sub
jl
rolb
fcompl
add
testb
lcall
fldenv
mov
add
iret
sub
incb
push
add
jbe
dec
sahf
stos
push
out
incb
mov
mov
adc
add
add
add
xchg
cli
sub
add
test
add
and
add
incl
test
pusha
add
sub
popa
jecxz
iret
add
add
xchg
cmpsl
xor
add
aam
add
outsl
cmp
xor
stos
pop
push
add
xchg
dec
jno
cmpsl
add
add
cmp
sub
add
mov
mov
loope
into
mov
xchg
mov
add
sahf
dec
xchg
incl
pop
cmp
icebp
or
jg
xchg
lcall
mov
jae
add
mov
incb
xchg
mov
push
pop
mov
jecxz
sti
add
add
add
in
push
add
mov
push
add
sub
mov
add
mov
push
add
add
add
in
arpl
xor
add
addr16
lahf
psubd
pop
add
jbe
add
add
add
add
add
cmp
pop
or
outsb
add
mov
add
add
incl
push
add
mov
in
leave
sub
adc
add
adc
add
fcomps
fwait
push
incb
clc
jnp
mov
mov
idiv
dec
out
add
ds
push
add
xchg
lret
add
pusha
add
shll
add
sbb
jg
enter
ret
push
sbb
fbstp
incb
inc
add
incb
or
xchg
bound
ja
xchg
mov
push
loop
add
push
daa
incb
add
testb
or
dec
add
sbb
mov
xor
push
add
add
add
xor
add
das
lods
add
add
loope
push
add
pop
incb
clc
mov
mov
leave
xor
add
sarb
mov
mov
inc
jns
cmpsb
and
add
notl
incb
pop
add
incl
loope
add
push
add
mov
add
insl
and
add
pop
xor
add
cmp
lods
mov
in
sub
cltd
mov
adc
add
div
test
push
jg
lods
jbe
test
and
cwtl
mov
incb
jecxz
mov
test
andl
jae
repz
add
xchg
sbb
jmp
incl
sub
loop
lret
xor
add
mov
add
cmp
and
add
push
scas
dec
lock
adc
add
incb
lea
add
add
add
incl
push
incb
aas
int3
mov
dec
pop
incl
and
add
sub
and
jo
pop
add
sub
jecxz
add
add
incb
pusha
add
call
xchg
pop
add
incb
fwait
xchg
leave
ret
jecxz
sbb
xchg
adc
add
cmp
add
add
dec
jno
insb
add
pop
add
add
shlb
incl
faddl
incb
xchg
add
add
cmp
in
jl
fcmovnu
les
add
incb
mov
adc
add
incb
in
bound
pop
add
ja
jae
add
incl
xor
add
mov
sbb
test
incl
push
add
dec
add
daa
incb
cld
add
add
incl
lret
incb
add
add
jne
add
add
add
inc
add
incl
std
adc
add
push
jp
jae
incl
ror
mov
add
and
add
dec
add
loopne
ja
add
orb
push
movsl
outsb
add
add
sbb
incb
sub
xchg
pop
add
add
cmp
shrb
add
fwait
sbb
push
add
gs
incb
inc
add
aas
int3
push
add
push
add
cltd
push
cld
or
add
mov
inc
jge
incb
add
add
enter
push
add
adc
add
data16
mulb
add
outsb
add
pusha
add
test
ret
jo
xchg
test
movb
push
add
add
incb
jecxz
add
lods
and
add
in
xor
add
dec
push
incb
or
incb
sbb
popa
xor
add
jnp
sbb
adc
add
pusha
add
add
add
add
rol
mov
add
add
pop
aaa
incb
push
pop
add
mov
adc
add
incb
dec
das
mov
incl
movsl
into
jl
stos
fistl
loop
xchg
cli
clc
and
add
imul
add
add
imul
add
incb
jmp
add
add
xchg
xchg
xor
add
ret
inc
fdivrl
incb
sub
shl
les
jns
add
stc
incl
adc
incb
incb
popf
adc
add
add
pop
movsl
je
mov
xor
add
addr16
lret
add
lcall
xchg
and
ror
adc
add
push
add
out
movl
xor
add
incb
mov
stos
aaa
incl
cmp
add
jbe
xor
sbb
sti
lock
adc
add
add
xchg
out
adc
add
add
mov
adc
add
out
imul
out
mov
add
jmp
inc
arpl
or
loopne
dec
mov
nop
popf
insl
lods
data16
ffree
testb
incb
rorl
add
add
cmpsl
sbbb
pushf
cmp
add
movsl
mov
stos
cmp
mov
cmp
sub
arpl
add
fistpll
mov
pusha
add
add
mov
add
incb
jnp
xor
add
incb
cmp
enter
add
add
sub
add
add
add
incb
add
pop
add
incb
pop
add
adc
xchg
jbe
fwait
xor
add
incb
inc
add
aad
incl
mov
fsubr
lahf
int
incl
sub
add
call
stc
leave
das
cmpb
adc
incb
mov
add
incl
les
call
push
add
incb
mov
je
mov
mov
mov
gs
xchg
sub
cmp
mov
aad
sbb
add
add
iret
sbb
mov
test
and
add
cli
xchg
popa
push
dec
fsubp
incb
icebp
popf
and
add
pop
incb
repnz
add
add
inc
inc
add
incl
pop
incb
icebp
mov
incb
data16
incl
leave
and
add
jo
jle
or
sub
add
call
jns
jns
iret
cmc
data16
incb
xor
add
pop
adc
add
add
xor
incb
push
add
add
add
inc
pushf
mov
or
cs
inc
add
add
incb
jmp
aas
jle
outsl
aaa
incb
xlat
fdivl
add
mov
rclb
incl
negb
incb
jmp
incb
add
add
incb
lret
imul
test
incl
sub
into
dec
add
xchg
outsl
dec
add
incl
std
pop
incb
jbe
jg
neg
sub
in
testb
aam
add
xchg
cmpsl
or
or
imul
fwait
mov
in
pop
add
add
incb
lcall
or
stos
addr16
pop
incl
idivl
add
push
add
das
mov
and
add
ret
outsl
inc
pop
incb
adc
add
jo
mov
push
ja
ljmp
fldl
mov
mov
movsb
mov
add
mov
mov
add
mov
bound
dec
add
push
xchg
lods
sub
add
mov
push
lods
cmpsl
rcr
pop
incl
std
pusha
add
test
pop
add
xchg
xor
add
add
add
arpl
scas
cmp
or
fwait
sahf
add
jle
mov
add
pop
add
incb
jne
incb
arpl
adc
add
sbb
movsb
cli
ror
loop
inc
push
movsb
sbb
mov
cmp
mov
adc
add
repz
cld
jmp
add
add
out
mov
add
pop
test
idivl
cmp
push
mov
push
incb
gs
incb
mov
add
and
jb
lret
xchg
shll
cmc
ljmp
add
arpl
sbb
push
add
jle
je
jp
bound
leave
dec
push
incl
cmc
das
in
and
add
sub
subl
mov
push
incb
xor
add
add
incb
je
ljmp
adc
add
movsl
mov
into
stos
cmp
aam
add
mov
lcall
add
xor
add
push
add
test
incb
jo
fisttps
push
aam
test
dec
push
iret
dec
filds
incl
data16
sbb
add
sub
add
lahf
sti
call
add
adc
add
mov
push
add
jns
ficomps
incb
cmp
inc
add
daa
incl
jecxz
pusha
add
add
incb
xchg
out
mov
in
push
adc
add
add
add
add
dec
add
movsl
and
add
enter
insb
add
xor
add
cmp
or
push
incb
or
add
add
stos
icebp
ja
push
loop
and
add
pop
mov
fsts
incb
jmp
lock
hlt
cmpsb
push
add
incb
dec
add
rcll
ret
incb
push
add
pop
pop
incb
outsb
add
xor
in
incl
and
add
xchg
add
adcb
add
loop
xchg
loope
xor
add
repnz
add
add
inc
add
sbb
out
add
xchg
dec
pop
int3
movl
call
incl
imul
incl
xchg
pop
popa
leave
incb
sub
push
pop
popf
hlt
mov
lret
cmp
jns
test
xchg
cmp
jl
fadds
mov
stos
and
add
pusha
add
lods
jecxz
iret
jmp
bswap
add
add
add
or
lcall
add
add
incb
sub
add
test
incb
dec
add
arpl
incl
fldt
outsl
cmp
add
je
in
loopne
add
incb
cmp
sahf
push
incb
sarl
rclb
add
mov
add
iret
shll
pop
add
mov
or
lock
sub
adc
jne
add
stos
jae
jns
jnp
jo
pop
add
fldenv
add
fildl
add
sub
add
add
add
fldl2t
sahf
mov
mov
add
stos
jecxz
sub
add
incb
xor
add
cwtl
pop
xchg
sub
cwtl
push
inc
add
xorl
add
shrb
add
sub
add
push
sti
cmp
fdivs
mov
xrelease
xchg
jle
mov
pop
incb
or
in
add
call
and
add
loope
sarl
pusha
add
jmp
xor
sti
rorl
push
add
iret
pop
jbe
xchg
addl
xchg
repnz
push
add
in
fwait
popf
icebp
pop
incb
jb
inc
jns
into
pop
add
incl
dec
add
out
divb
incl
lods
ret
leave
cwtl
stos
inc
adcb
ficomps
incb
ficomps
js
inc
jg
add
xchg
imul
add
lds
popf
leave
push
add
incl
inc
add
incb
icebp
call
dec
add
and
add
std
adc
add
jno
cmp
out
mov
sbb
incl
pop
stos
add
jb
les
push
add
cmp
add
add
pop
add
incl
icebp
push
add
add
incb
pop
mov
roll
sti
sbb
add
push
add
lret
xchg
jns
add
icebp
pop
ja
incb
push
incb
cld
shll
sbb
lahf
and
add
incl
jl
dec
add
add
jmp
add
push
incl
dec
add
add
incb
addl
incb
and
add
fwait
lods
ljmp
mov
incb
bound
cmp
mov
movsl
add
add
add
xchg
cwtl
addb
add
add
xchg
push
incl
jp
pop
add
jb
insl
mov
incb
into
inc
add
jnp
mov
mov
imul
pop
sbb
cmpsb
xchg
sti
fcomps
or
sbb
fs
addr16
add
add
add
jg
mov
and
add
mov
inc
add
sub
mov
push
add
incb
mov
add
add
and
add
lock
sub
jge
jo
in
icebp
mov
sti
bound
inc
test
sub
xchg
imul
inc
test
testb
ds
or
mov
mov
incb
fidivrl
incb
mov
imul
jno
xor
add
cmp
clc
fs
testl
inc
add
add
cmpsb
jno
call
add
cli
push
add
sbb
movsl
into
repnz
dec
add
int
xlat
daa
incb
repnz
insb
add
cmpsb
test
incb
mov
push
add
pop
jo
shll
add
inc
pop
ja
fistpll
add
add
add
les
mov
mov
dec
add
fidivs
sti
mov
mov
add
add
add
mov
add
add
incb
insb
add
add
add
popf
js
dec
add
stos
sahf
xchg
popf
mov
frndint
movsb
xor
add
sub
flds
add
stos
push
lret
adc
add
out
test
and
add
int
insb
add
incb
push
mov
mov
add
in
int
add
sub
pushf
je
inc
bts
xor
add
mov
sahf
ljmp
or
adc
add
inc
add
ret
incb
xor
add
xlat
push
insb
add
cmp
cmp
mov
and
add
dec
add
insl
leave
hlt
add
add
sub
add
jne
adc
add
xor
add
add
push
add
and
mov
add
adc
add
incb
xchg
mov
incb
pop
incb
in
inc
add
pop
dec
add
insb
add
clc
fldt
movsb
in
xor
add
incb
pop
out
leave
sbb
add
incb
and
add
incl
mov
divb
pop
cmpsb
sbbb
add
or
cli
orl
add
incb
sub
or
mov
inc
add
inc
add
incb
push
add
and
add
xor
add
stos
add
add
or
xchg
pop
sbb
and
in
negl
into
sbb
insl
dec
bound
and
add
insl
or
sub
test
dec
add
loope
incb
notl
incl
push
add
in
jmp
add
hlt
ret
ret
inc
or
push
xor
add
add
pop
add
inc
std
divb
incb
fbld
incb
adc
add
incb
cmp
incb
sub
in
loope
pop
incl
ljmp
jb
clc
or
ljmp
add
add
mov
mov
mull
add
xchg
or
add
add
add
imul
mov
pop
sbb
add
add
cld
cmp
xchg
stc
nop
mov
incb
inc
xor
xchg
inc
inc
add
cmp
adc
add
rcrl
lea
cmp
les
jnp
call
and
add
mov
adc
add
inc
pushf
lds
xlat
adc
add
incl
test
dec
outsl
loopne
or
data16
incl
pop
add
add
add
lret
add
cmp
iret
pop
add
dec
add
add
lahf
clc
xchg
xchg
rcll
lock
push
in
repz
and
add
push
jl
iret
inc
lods
loop
lods
mov
lea
imull
iret
mov
add
sbb
dec
insb
add
popa
mov
sbb
loopne
outsb
add
add
or
iret
bndstx
push
add
add
ja
push
incl
sub
dec
add
int3
jmp
add
add
add
add
dec
mov
pop
inc
pop
incl
sbb
scas
mov
push
inc
out
loope
cmpsb
rcl
loope
adc
add
add
arpl
or
cld
jo
negl
add
nop
int3
nopl
inc
das
lret
and
add
mov
add
int3
lcall
jp
popf
js
adc
clc
sbb
repz
test
rorb
cli
or
add
out
stos
ja
loopne
popf
pop
icebp
enter
adc
add
ret
add
sbb
pop
andl
pop
sub
and
add
incl
mov
incb
incl
sbb
incb
jb
push
add
mov
lret
cmpl
add
hlt
mov
aad
data16
add
pop
add
ffree
sub
cmc
pop
subl
sub
add
fisubl
rcr
lea
add
xchg
xlat
out
popa
cmp
fildl
fmull
add
enter
incl
inc
add
add
mov
pop
mov
incl
mov
int
loop
dec
add
cmp
incb
push
lods
stc
icebp
aas
sub
ja
add
pop
xlat
pop
add
add
push
incb
inc
add
and
add
add
add
add
fs
cld
popa
xchg
add
add
inc
pop
incl
ret
in
incb
ja
fisubl
add
add
scas
inc
sti
sahf
xor
add
popf
lret
and
add
xor
add
popf
and
add
pop
incb
nop
xchg
add
add
incb
sub
cmp
xchg
and
add
stos
add
incb
dec
add
mov
add
lcall
sbb
sub
jne
int3
sbb
gs
pop
scas
add
add
loopne
add
jbe
hlt
or
sbb
or
add
add
cmpb
inc
add
cmp
les
add
incb
rorl
push
add
orl
add
incb
test
clc
mov
leave
add
add
incl
push
xor
add
add
incl
pushf
inc
add
add
popf
cmpsb
gs
bound
and
add
incb
add
add
add
add
insb
add
incb
repnz
aaa
incb
mov
xchg
mov
lret
insb
add
dec
add
cmp
jle
cmc
sahf
adc
add
add
add
movsb
cmp
aas
sbb
mov
incb
hlt
and
incl
and
add
inc
add
add
incb
lahf
ret
cltd
sbb
lea
sbb
dec
add
incb
xchg
incb
cwtl
inc
add
sub
dec
shrb
fwait
shrb
cmpsb
or
mov
or
cmp
imul
add
mov
fsubp
leave
out
adc
add
imul
loope
test
movsb
pop
add
iret
loop
incb
jo
rcll
adc
add
cli
cmpsl
or
sbb
add
aas
mov
cwtl
jmp
or
sbb
leave
cmp
mov
lahf
fisttps
add
add
add
add
icebp
dec
add
mov
scas
cli
fnstcw
jle
jb
test
mov
inc
mov
inc
add
incb
xor
add
adcb
add
mov
incb
incb
mov
mov
mov
daa
incb
add
add
add
incb
xchg
rorb
add
out
movsl
cld
out
insl
jb
arpl
jb
fistl
pushf
cmp
add
sarl
sbb
incb
adc
add
push
add
or
push
add
pop
add
add
add
incb
movsb
iret
fldl
sub
mov
pop
jge
dec
add
incl
mov
scas
incb
adc
add
fmul
loop
xchg
lahf
push
add
incl
loop
inc
add
add
add
test
lds
popf
cli
cli
pop
incl
push
incb
mov
jmp
incb
adc
add
xchg
or
sahf
insl
lahf
xchg
mov
mov
adc
add
and
add
mov
incb
shrl
adc
add
add
hlt
pop
incb
aas
nop
orb
incl
out
int3
repz
subl
xchg
ljmp
fsubrl
mov
inc
ficoms
incb
loopne
dec
incb
mov
jne
and
add
lahf
mov
int
add
mov
incl
in
add
out
shlb
idiv
jmp
mov
add
out
jecxz
movsb
fimuls
incb
mov
incb
pop
add
incb
dec
add
or
push
add
fisubs
incb
rclb
fstpl
fmuls
cmc
sbb
inc
jb
int3
jbe
xchg
or
sbb
rcll
pop
add
mov
pop
incb
push
bound
mov
push
add
incb
outsb
add
mov
push
xor
add
add
incb
mov
or
xchg
jmp
adc
pop
add
daa
incb
les
iret
dec
add
add
adc
add
add
incb
and
add
push
sbb
les
add
incl
ret
fmuls
sbb
jb
scas
int
add
xchg
outsb
add
repz
add
popf
cmp
or
mov
incb
mov
incl
lcall
dec
add
add
enter
inc
ja
lods
add
add
add
shlb
incb
mov
incb
ljmp
mov
adcl
incl
ljmp
lret
sub
pop
pop
add
add
add
test
test
out
incl
push
fsts
dec
jne
sbb
mov
mov
js
dec
int
and
add
add
add
std
mov
jne
incb
int3
pop
add
mov
sti
mov
incb
xchg
ret
add
sbb
add
add
sbbl
sub
add
sbb
in
or
or
add
add
jp
pop
add
add
dec
xor
add
sahf
mov
push
incb
cmpsl
dec
add
add
jo
sub
out
adc
add
xor
add
mov
sarl
incl
adc
incb
jno
incb
mov
or
jp
imul
add
call
gs
incb
inc
add
push
inc
add
fidivl
dec
xor
add
incb
xor
add
mov
dec
add
fistps
sbb
lahf
aad
add
add
incb
adc
add
aad
mov
add
incb
jns
add
mov
adc
add
loope
incb
sarl
push
in
add
stos
aaa
incb
fidivrs
mov
dec
add
add
add
incb
push
add
add
push
add
test
incb
pop
incl
incb
sub
incb
jp
jle
push
add
cmp
push
add
incb
dec
add
push
add
loop
add
sbb
or
xchg
in
add
int3
sub
add
test
incb
mov
mov
repnz
incb
sub
push
add
and
add
incb
mov
xchg
in
loope
ret
mov
add
jmp
testl
pop
push
incb
push
sahf
sub
repnz
lods
jae
xor
incb
adc
add
mov
mov
add
incb
aam
and
add
out
add
push
or
incb
and
add
adc
add
imul
push
iret
into
repnz
rcrb
dec
mov
sub
inc
cmp
outsb
add
jne
cmp
xchg
cmpsl
in
adc
add
add
icebp
sub
mov
jg
mov
xchg
jge
fdivl
add
int3
mov
jmp
mov
stos
loopne
jecxz
gs
adc
add
incb
xor
add
stos
inc
neg
cmpsl
aas
dec
scas
push
add
and
add
add
aaa
incb
inc
add
add
incl
testl
push
add
mov
ja
add
push
adc
add
sub
aad
jno
add
incb
dec
push
gs
add
sub
lds
fidivrs
and
add
mov
incl
mov
stos
sbb
dec
add
imul
jb
mov
add
pop
arpl
add
add
incl
sti
cmp
hlt
fsubr
fisubs
add
add
add
mov
and
push
add
add
adc
add
add
and
add
ja
fisttpl
mov
incb
push
add
incb
and
add
incb
adc
add
adc
add
mov
popf
std
cmpb
gs
jbe
mov
xchg
mov
add
add
incb
jmp
test
pop
add
incl
xor
add
sub
lar
add
lret
xchg
pop
shlb
rcrb
imul
insl
lret
js
icebp
jno
incl
dec
pop
add
add
imul
push
add
inc
add
incb
insb
add
lock
xlat
popf
fistps
add
push
add
xchg
lds
add
incb
icebp
shrl
add
push
loop
movsb
mov
mov
fcomp
pop
imul
movsb
xchg
incb
xor
add
addr16
jle
sub
nop
fldl
add
sbb
cmp
test
cmp
xchg
test
incb
and
add
dec
add
cmp
incb
mov
enter
mov
add
adc
add
mov
or
fadds
outsl
or
pop
dec
add
dec
add
add
nop
in
push
xchg
pop
incl
inc
add
mov
test
add
out
mov
dec
add
pop
cmp
xor
add
movsl
pop
add
incb
add
xor
sub
mov
xchg
and
add
and
add
incl
mov
lods
loope
incb
mov
push
incb
jl
and
add
inc
add
add
incb
shrl
add
push
cmp
lahf
lcall
insb
add
xor
add
jo
sbb
push
mov
dec
add
add
incb
sub
outsb
add
enter
clc
mov
inc
add
sbb
incb
jge
add
add
add
add
incl
add
add
pop
add
add
inc
add
in
in
shl
jo
iret
mul
mov
add
sub
cwtl
aad
and
add
cmp
lods
adc
add
add
mov
incl
bnd
dec
xor
add
mov
push
add
ret
pop
lahf
mov
xor
add
incb
mov
pushf
push
pop
add
cmp
ret
mov
add
add
incl
icebp
xchg
shll
add
add
icebp
and
add
clc
lock
pop
add
mov
mov
clc
mov
inc
add
imul
sbb
pop
add
fcompl
xor
add
add
in
incl
test
incb
or
sub
jl
jp
fs
push
and
add
xchg
pop
mov
add
or
sbb
xchg
imul
incb
inc
add
add
sbbb
cmp
add
sahf
push
add
fcompl
popf
js
sbb
incb
popf
adc
add
hlt
test
mov
fsubrl
movb
add
daa
incl
in
add
ret
jo
loope
pop
movsb
jb
incb
xchg
push
add
scas
cmpsb
lods
push
add
incl
adc
add
fimull
insl
int
incl
pop
incb
ror
cmp
add
xchg
adc
add
xor
add
incl
dec
add
sub
ret
push
incl
and
add
inc
add
into
lret
pop
add
adc
add
add
icebp
sahf
repz
add
pop
add
incb
repnz
or
inc
pop
incl
clc
jno
add
lds
incl
shll
test
ret
bound
or
mov
incb
iret
idivl
adc
int
add
into
xchg
filds
add
jbe
mov
inc
add
add
incb
gs
sbbb
shrl
sub
arpl
push
pushf
or
enter
pop
add
incb
loope
add
add
std
pop
push
incb
ucomiss
mov
cld
sbb
inc
add
incl
sub
imul
add
incb
inc
loopne
aam
add
je
orb
add
incb
jmp
add
add
add
add
add
incl
inc
add
scas
dec
add
sarl
rol
push
sbb
data16
sub
cwtl
inc
add
incl
sbbb
insb
add
sbb
add
mov
mov
add
out
clc
incl
das
adc
add
scas
clc
loopne
dec
orl
incb
mov
lret
mov
lea
cmp
les
lret
xorl
jo
mov
fwait
xchg
mov
sub
add
jle
andl
add
dec
add
xlat
cli
scas
arpl
mov
incl
nop
clc
cmc
shlb
add
inc
testb
and
add
xor
inc
add
sub
add
sub
mov
in
dec
add
adc
add
inc
adc
add
leave
push
incb
lret
aad
sub
inc
loope
incb
pushf
add
jae
add
incb
xor
add
pushf
sub
add
pop
incb
loopne
ljmp
in
dec
add
test
cmp
xorb
add
mov
and
add
or
cltd
inc
add
add
add
mov
pop
sbb
mov
add
out
sarl
cmpsb
pop
add
jae
add
fmul
or
jne
xchg
lret
int3
jbe
mov
cmp
incl
dec
add
inc
add
in
push
add
push
mov
add
mov
fwait
push
inc
add
jmp
rcl
pop
add
mov
incb
in
dec
add
xchg
add
fmull
cmp
add
fwait
mov
dec
sti
les
fnstenv
incb
js
or
xor
add
aam
xchg
mov
stos
add
add
inc
aas
stc
push
add
aam
sub
jbe
out
incl
popa
lcall
sarb
add
daa
incb
ret
add
movsb
enter
inc
add
incb
mov
add
int
dec
inc
popa
in
mov
stos
xorl
incb
push
loopne
add
jb
je
outsl
dec
rclb
incb
sbb
rcrl
add
fwait
ret
jae
xchg
je
jle
out
call
bound
movl
mov
rolb
lret
hlt
data16
call
or
add
add
scas
fxch
cmp
das
je
and
add
incb
pop
test
and
add
data16
in
jl
mov
add
movsb
popa
sub
add
das
mov
loope
decl
incb
mov
mov
bound
js
push
dec
add
sub
push
incb
test
mov
add
add
sub
cmc
xor
add
loope
cmp
loope
cmc
int3
mov
aam
lods
imul
andb
cmp
mov
push
add
add
mov
jmp
ret
add
add
xchg
in
loope
pop
incl
repz
movsl
mov
push
incb
loop
incb
mov
push
incl
aam
repz
add
mov
incl
sahf
inc
mov
incb
prefetchw
aam
aaa
incl
bound
xchg
sub
xchg
sarl
pop
and
add
add
mov
incb
daa
incb
out
addr16
incb
loope
incb
cmp
cmp
test
fcmovu
mov
add
add
add
movsl
pop
add
add
pop
incb
or
mov
add
out
cmp
incl
mov
add
xchg
js
mov
adc
add
add
stos
outsb
add
incb
mov
add
mov
add
incb
dec
push
add
sub
inc
arpl
or
mov
add
imul
insb
add
sub
andb
jnp
pop
add
repz
or
scas
or
mov
mov
mov
jno
add
andb
aam
incb
hlt
mov
pop
and
add
incb
xor
add
incb
ret
vcvtsi2sdl
jl
addr16
add
add
cmpb
add
or
frstor
add
incl
mov
add
push
incb
and
add
add
in
jg
lock
mov
cmp
repnz
pop
add
add
pushf
call
add
out
pop
jecxz
incb
pusha
add
aas
adc
add
incb
add
add
out
add
popa
int
movsl
in
mov
lcall
add
jl
mov
incb
out
sub
add
imul
les
pop
incb
sub
movsb
mov
add
incl
mov
lahf
xor
add
incb
movsb
loope
mov
add
std
cmp
sti
dec
lret
add
add
mov
or
mov
fwait
subb
movsl
jmp
dec
add
incb
pop
incl
dec
pop
cmpsb
hlt
sub
push
shrl
sbb
enter
add
sbb
incl
add
add
pop
add
test
mov
pop
incb
sbb
lret
pop
add
incb
in
lock
aaa
incb
or
or
into
mov
dec
add
incb
push
orl
jp
xchg
aad
pop
add
lods
enter
dec
add
jb
movsl
or
add
add
add
add
jle
ret
add
pushf
cwtl
push
lret
mov
lock
add
incl
pushl
incl
and
add
pop
add
adc
add
xchg
fcmovb
ror
sub
das
add
add
sub
incb
sub
div
pop
mov
pop
movsb
out
clc
cmp
rcr
insl
mov
add
mov
xchg
std
add
add
mov
pop
add
sbb
cltd
std
incb
fists
ds
test
aam
fwait
push
mov
das
stos
sub
add
cmp
pop
add
add
jb
xor
add
add
add
movl
pushf
add
add
dec
add
repnz
ficomps
or
or
incb
jmp
add
clc
scas
mov
pop
incb
mov
setle
sub
roll
push
incb
sub
jo
ror
push
decb
loopne
hlt
xchg
cmp
cltd
jbe
xorl
ret
movsb
sahf
adc
add
incb
push
add
xor
add
imul
sbb
mov
dec
add
xchg
jo
push
add
mov
add
movsb
pop
add
or
adcl
incb
test
add
incb
mov
incb
cwtl
imul
add
add
cmp
dec
out
push
jecxz
add
incb
mov
imul
jnp
incb
testl
pop
incl
mov
push
add
repnz
add
incb
sub
push
add
mov
pop
sbb
incb
adc
add
pop
test
ret
incl
call
popf
dec
add
ret
incb
inc
add
push
incb
jp
inc
add
incb
lods
stc
aam
incb
incb
insb
add
incl
iret
out
sbb
incb
pop
add
incb
push
incb
fcoms
add
add
adc
add
add
pop
incb
mov
or
push
add
add
add
sub
or
cmpsb
xchg
or
out
adc
add
fs
insl
xor
add
add
incl
xchg
mov
add
add
add
or
pop
add
sahf
pusha
add
fsubrp
sub
push
push
mov
orb
xchg
out
xchg
xor
lods
add
add
add
incb
push
add
add
fdivl
fsts
xchg
subl
rcll
clc
cmp
fwait
mov
add
add
or
xor
add
add
pop
incb
stos
stos
in
orl
sub
sub
icebp
test
arpl
data16
xor
add
add
ljmp
add
aas
inc
add
sbb
mov
xor
add
fsubrs
rorl
add
js
scas
out
int
or
or
pop
add
incb
mov
std
leave
xchg
test
incl
inc
mov
incb
jnp
pop
incl
and
add
sbb
les
sbb
push
sbb
popa
scas
mov
clc
outsb
add
add
add
loop
mov
in
jp
sub
add
incl
mov
cld
mov
or
test
sbb
add
in
xchg
xor
add
add
iret
mov
xchg
dec
and
add
incb
mov
test
sbb
jo
inc
add
xchg
or
insb
add
or
sti
cld
pop
sbb
ja
mov
lea
add
or
pop
add
fsub
inc
repnz
incl
ja
into
out
cmp
ja
add
rcrl
dec
add
incb
lock
mov
add
incb
cmp
sub
imul
xchg
fcoms
add
ficompl
fcmovnbe
test
mov
inc
dec
stc
fisttps
lcall
add
push
add
test
jno
or
loope
add
incb
mov
add
dec
xchg
test
scas
les
incb
popf
lcall
and
add
incl
fsub
div
xor
add
into
push
add
cwtl
std
or
push
incb
fsubr
inc
add
add
incb
stos
test
incb
jae
push
incb
dec
add
cmp
incb
push
add
add
incb
mov
jno
incb
or
xlat
jns
shr
incl
inc
mov
push
inc
mov
incb
sub
dec
push
incb
daa
incb
insl
nop
adc
add
incb
push
sti
cmc
push
or
and
add
out
xchg
out
pop
incb
mov
mov
or
incb
mov
int
jp
jb
add
add
fidivrs
das
ja
addr16
jl
sub
rcll
add
jb
mov
sub
adc
add
incb
call
add
push
add
incb
gs
aaa
incb
shll
add
dec
insb
add
add
jo
insb
add
mov
dec
add
mov
jecxz
add
lret
mov
pop
add
add
xor
add
idiv
loop
jle
sbb
scas
sbb
add
push
gs
loop
in
pushf
pop
hlt
and
add
add
add
incb
sub
scas
inc
add
addr16
add
incb
cmpsl
sbb
sbb
mov
incb
add
xor
add
lret
push
out
sbb
mov
push
sub
add
add
push
add
xchg
or
popf
in
mov
lret
ja
lock
test
add
incl
std
rcrb
push
incb
add
add
mov
xor
add
add
add
daa
incl
cld
into
sub
cmp
je
mov
incb
pop
mov
adc
add
add
add
xor
add
jecxz
dec
sub
push
add
scas
loopne
cmp
bound
mov
incb
jne
and
add
scas
add
add
incb
stos
jnp
lods
xchg
pop
inc
add
insl
js
jle
add
add
sub
jbe
mov
add
cltd
lcall
pop
add
testb
jg
sar
out
loop
jg
int
add
in
xchg
pop
add
incb
lock
mov
add
xor
add
testb
dec
add
add
mov
add
stos
pop
sbb
pushl
lahf
in
jns
incb
and
add
mov
push
add
add
lock
mov
incb
test
dec
lcall
add
movsl
imulb
add
pop
sbb
xor
add
add
jmp
xor
lea
add
addr16
mov
cmp
mov
add
push
inc
out
incl
cwtl
xchg
add
push
add
push
add
incb
add
add
add
pop
incb
and
add
aam
dec
repz
add
add
add
add
add
test
mov
pop
add
mov
add
sub
add
incl
push
add
sbb
or
pop
add
inc
ret
add
add
add
xchg
setns
sub
cltd
pop
incb
add
pusha
add
or
cltd
adc
add
add
ret
add
in
incl
sub
add
add
incl
inc
add
incb
add
incl
cmp
mov
mov
jmp
cltd
mov
pusha
add
into
pusha
add
idivl
incb
cmc
stc
sub
fsubrs
add
incb
dec
xor
add
add
add
incl
or
int3
and
add
jp
ficoml
add
add
leave
or
add
incb
xchg
xchg
sbb
mov
add
add
incl
mov
repnz
incb
push
add
cmp
mov
xchg
push
add
xchg
fwait
movsl
xor
add
fwait
mov
insl
data16
mov
data16
jle
sbbl
icebp
daa
incb
andl
add
add
add
nop
xchg
inc
mov
ljmp
add
incb
pushf
xor
add
lret
stos
out
push
outsb
add
add
or
add
add
dec
jle
mov
incb
xchg
pop
add
adcb
add
add
xor
add
int3
adc
add
incb
pop
add
xlat
mov
movsb
and
add
sub
push
add
incb
outsb
add
test
add
mov
push
mov
add
add
mov
incb
popf
push
incl
push
pop
incb
incb
inc
add
add
std
shrb
pop
add
mull
push
add
add
lods
int3
jp
loop
add
mov
incb
or
lock
push
incb
mov
cltd
incb
out
lret
incl
add
mov
and
add
ljmp
cmc
pop
mov
xchg
xlat
stc
dec
add
incb
jge
add
test
out
pop
add
xor
add
js
jmp
aam
push
push
int
fnstcw
add
iret
in
and
add
and
add
pop
xchg
cmc
sub
incl
xor
add
incb
and
add
loop
in
jae
add
incb
jns
incb
fbstp
mov
incb
inc
sbb
xlat
sbb
mov
xor
add
mov
incb
inc
hlt
enter
mov
add
cltd
add
add
scas
lret
test
jl
in
dec
jno
incb
cmpsl
les
mov
adc
add
dec
sti
add
add
add
test
enter
xchg
cmp
lea
xchg
pop
xor
add
sub
sbbb
add
fcmovb
gs
add
incl
cltd
loopne
lods
xchg
inc
stc
loopne
mov
mov
lods
ror
stos
sbb
dec
sbb
push
add
mov
add
incb
xlat
add
add
add
and
add
add
add
incb
scas
mov
add
movsl
jecxz
sbb
sbb
xchg
add
add
incb
in
ret
incb
addb
add
add
add
adc
pop
add
xor
add
mov
dec
cmp
xor
dec
xchg
add
add
cmp
mov
add
call
or
add
add
jnp
out
add
insb
add
cmp
add
xchg
add
ret
xor
add
pop
fmuls
stos
ror
sub
pop
incb
sbb
mov
stos
jg
push
adc
add
sbb
sbb
add
in
sbb
adc
add
test
cmp
jnp
add
add
pushf
test
incl
mov
mov
add
xor
add
add
aam
movsb
das
ficompl
test
incb
insb
add
mov
add
add
imul
add
mov
and
add
enter
loope
pop
rorb
std
incb
aas
fwait
adc
inc
add
push
ljmp
add
add
int3
add
incl
jnp
addr16
into
pusha
add
incb
jg
incb
push
add
shll
adc
add
add
jp
fs
push
xor
add
incl
pusha
add
xchg
pop
add
dec
add
incb
add
ja
jl
or
aaa
incb
mov
incl
sbb
stos
sahf
pushf
xchg
ljmp
jge
mov
incb
icebp
sub
aas
icebp
in
cmp
sti
data16
movsb
add
add
incl
add
add
add
add
mov
iret
adc
add
incb
into
sub
cmp
add
mov
and
add
incb
je
or
aad
push
adcb
loope
incb
or
sbb
add
repnz
add
add
add
test
in
dec
add
incb
mov
mov
out
mov
add
dec
jle
lods
add
incb
sbb
lods
jg
adc
add
cmp
add
pslld
add
lock
mov
cmp
psubd
add
dec
pop
add
sbb
push
cli
jns
pop
add
add
add
rol
jg
mov
nop
xchg
sarl
add
andl
cmp
mov
lcall
dec
cmp
dec
add
sub
add
aad
add
inc
add
mov
add
mov
or
incb
int3
cmp
xchg
sbb
call
loop
mov
cmp
inc
add
add
incb
and
add
add
add
add
add
add
incb
sub
incl
leave
jno
add
add
jo
repnz
fimull
inc
add
incl
call
mov
mov
add
add
incb
xor
add
sbb
outsl
and
add
lods
dec
add
incb
negb
jo
dec
int
movsl
add
test
jo
cmpsl
int
xor
pushf
cwtl
mov
inc
or
pop
push
add
lds
adc
add
add
lock
ljmp
mov
incb
out
fsubrs
pop
incb
xor
add
incl
inc
jle
jno
incb
push
testb
add
outsl
std
sbb
movsl
mov
mov
mov
cmp
add
incb
sub
pop
add
sub
adc
add
incb
in
incb
call
add
add
xchg
push
push
add
sub
pop
jns
dec
add
incl
mov
sbb
incl
mov
mov
pop
adc
add
push
add
cwtl
push
add
leave
jbe
clc
inc
add
xor
add
add
add
add
xor
add
xchg
jnp
incb
dec
add
add
jae
incb
pop
push
add
incb
stos
jp
scas
push
add
fstpt
push
add
incb
movsb
jb
into
test
dec
shll
add
incl
insl
ret
mov
add
add
ret
mull
mov
adc
xor
add
lcall
pop
mov
incb
xorl
incl
adc
add
fstpt
add
add
mov
sub
jle
inc
rorb
sbb
fisubrs
add
add
add
xchg
jno
jl
incb
ljmp
mov
add
xor
add
add
add
adc
add
xor
add
std
mov
push
incb
pop
cmp
push
incb
incb
xchg
pop
pop
loopne
sub
out
imul
push
add
js
inc
add
mov
and
or
xchg
sub
das
lahf
xor
add
movb
incb
outsb
add
leave
icebp
mov
leave
inc
aaa
incl
and
add
mov
add
hlt
ficoml
incb
ljmp
add
mov
gs
add
sub
xchg
jecxz
add
test
incl
jnp
add
out
lret
std
jb
int
loope
lods
pop
add
mov
add
add
gs
incl
lock
xor
add
lock
dec
dec
jae
imul
add
incl
ds
sub
xchg
mov
pop
add
add
add
shl
cmpsb
inc
add
and
add
lahf
movsb
pushl
or
add
xor
add
add
add
pop
add
cmp
ljmp
invd
add
incb
push
add
xchg
les
add
cltd
push
sbb
incl
arpl
xchg
sub
sti
out
push
incb
sbb
mov
incb
sub
call
jl
cmp
jns
out
insb
add
shll
jo
call
fimull
shl
mov
xchg
imul
inc
add
dec
add
add
add
incl
sbbl
test
jmp
incb
mov
lea
test
incb
ret
cld
gs
xchg
adc
add
incl
and
add
js
shll
filds
incb
arpl
add
xchg
or
xor
add
xchg
imull
dec
add
push
add
lds
add
incb
packsswb
mov
mov
cmpsl
rcrl
dec
add
incb
out
loopne
add
xor
add
or
rcr
call
add
cmp
inc
mov
cmp
and
add
incl
push
incb
data16
pushl
movsl
xor
add
mov
incb
adc
add
sub
mov
cmc
incl
subl
add
daa
incb
or
js
add
add
pop
rcrb
xor
cmpsl
pop
test
clc
test
inc
lods
mov
mov
add
and
ja
incb
xor
add
xchg
addr16
add
incb
push
and
add
mov
add
and
fisttps
add
push
add
xchg
stc
xchg
sti
jp
add
add
incl
jno
add
cwtl
pop
incb
jb
mov
mov
rol
jmp
leave
stos
and
add
fisubs
jp
out
dec
add
mov
icebp
xchg
pop
add
xorl
insb
add
mov
data16
cmp
cli
inc
subb
add
xchg
or
push
add
add
inc
add
add
add
incb
add
add
incb
push
add
incb
insb
add
incl
movsb
lret
test
incl
outsl
push
add
incb
sahf
add
lea
xor
std
out
and
add
cld
xchg
add
incb
call
and
add
lcall
or
xchg
adc
aas
ficoml
mov
incb
arpl
inc
add
sub
sbb
mov
ds
ficomps
divl
jne
sub
iret
pop
add
mov
incb
inc
add
or
sub
shr
addr16
dec
add
add
jne
xor
add
xor
add
or
mov
sbb
mov
or
or
sub
sub
mov
add
loopne
xchg
inc
add
out
fisubrl
popf
aad
cmp
ret
add
add
dec
add
incl
dec
add
inc
scas
movsb
clc
fdivr
inc
add
add
add
add
push
add
incb
repnz
add
add
scas
push
add
incb
incb
and
add
mov
xchg
nop
pop
mov
cmpsl
jbe
pop
add
scas
adc
add
mov
inc
add
xlat
add
add
shr
add
xchg
lahf
jne
incb
push
dec
and
lahf
and
add
incb
imul
add
dec
xor
add
cmc
sbb
dec
add
lods
add
incl
fistl
incb
xchg
pop
mov
sub
inc
add
mov
cmpsb
shlb
jns
addr16
subl
add
add
add
sub
pop
add
incl
jno
fwait
mov
add
ret
test
sub
add
incb
lock
repz
adc
add
jb
xor
add
jp
pop
add
incb
ret
mov
fisttpll
incb
jb
ret
add
dec
add
cltd
pop
movsb
push
add
push
add
add
cmpsb
inc
sub
add
pop
incb
dec
ljmp
sahf
add
add
add
inc
clc
scas
fldenv
add
add
add
xor
add
add
add
aas
xchg
cmp
loopne
sti
sub
testl
mov
ds
fcomps
lahf
in
test
push
add
fsubr
sbb
dec
add
fcomp
clc
leave
bound
sahf
cmp
sub
add
add
push
add
js
mov
add
inc
and
add
fcompl
add
add
incb
mov
pop
add
imul
fcmovu
arpl
sbb
add
xor
add
fildl
incb
arpl
sbb
test
insb
add
sahf
jecxz
mov
pop
add
mov
or
aas
clc
cmp
movsl
add
dec
jne
mov
mov
add
add
mov
add
incb
xor
add
push
add
scas
push
add
add
push
outsl
arpl
test
mov
add
mov
incb
daa
incb
push
incb
data16
push
incb
dec
add
dec
add
jnp
or
add
pop
aaa
incb
jae
xchg
fisubrs
je
dec
add
mov
push
incl
fisttps
dec
add
hlt
iret
fidivl
nop
les
incb
sti
mov
lock
mov
cmpsl
mov
incl
pop
mov
add
add
sub
dec
ret
inc
repnz
cmp
add
push
fcmovne
adc
add
aaa
incl
in
out
pop
adc
add
inc
add
mov
incb
hlt
dec
add
test
incl
dec
mov
push
add
add
push
add
incb
icebp
inc
add
sbb
add
incl
incl
xchg
jbe
and
add
add
mov
and
add
add
add
incb
sub
mov
mov
add
incb
aam
incl
sbb
cmc
mov
inc
push
cmp
or
and
add
mov
mov
xchg
int
incl
push
incl
inc
add
add
incb
divb
incb
jns
cmp
leave
enter
or
add
popa
add
incb
inc
xchg
lock
lcall
or
in
push
add
incb
push
sub
ret
inc
add
add
incb
icebp
test
insl
mov
incb
cmp
jns
sbb
mov
mov
mov
outsb
add
push
test
mov
incb
mov
out
daa
incb
sti
jae
repz
xchg
loop
pop
add
mov
sbb
incb
incb
lahf
data16
jb
enter
xlat
insb
add
add
pop
in
gs
std
cmp
mov
js
adcb
incb
test
sbb
mov
add
add
das
mov
add
incl
inc
push
add
xor
or
mov
add
add
shll
incb
pop
jp
add
add
xor
add
push
add
dec
add
pushl
add
call
push
add
dec
add
sbb
incb
and
add
fadds
incb
rcr
int3
les
xor
add
adc
add
add
add
push
incb
fnstcw
cs
aam
incb
enter
imul
iret
pop
add
mov
inc
add
call
scas
movsb
xchg
arpl
adc
add
add
add
pop
incb
loope
cwtl
push
out
incb
arpl
mull
std
test
shlb
add
and
add
incb
xor
add
pop
xchg
xchg
add
lock
incl
daa
incb
jg
mov
inc
jle
test
aaa
incb
data16
fcompl
xchg
cwtl
in
adc
lock
data16
inc
add
ja
mov
fildll
add
test
out
add
test
shll
incl
outsb
add
xrelease
incb
movsl
push
add
incb
pushf
push
add
add
mov
jns
sbb
inc
add
dec
add
add
incb
fwait
stc
xor
add
adc
add
xor
add
fsts
add
fcomps
incb
rcrl
outsb
add
add
lds
incb
mov
movsl
aam
incl
xchg
movsl
roll
add
dec
add
ljmp
add
stc
dec
add
test
lods
je
aam
hlt
in
incl
int3
sti
popa
jle
nop
push
int3
loopne
inc
mov
incb
lahf
sbb
add
add
outsl
lock
incb
ja
je
and
jb
sub
cmpsl
push
add
stos
xchg
mov
mov
cmp
cltd
pop
imul
add
add
add
sarl
pop
inc
add
mov
pop
incl
and
add
pop
shll
sub
or
inc
add
hlt
std
add
add
incb
or
pop
incb
mov
add
incb
ljmp
out
xrelease
add
xor
add
in
cmpsb
jns
add
add
ja
sub
inc
add
add
inc
add
nop
mov
add
incl
push
sti
dec
add
sti
push
incb
pop
add
incb
arpl
jg
leave
sahf
orl
mov
cmp
push
xchg
dec
add
repz
add
incl
cli
push
add
loop
repnz
adc
add
pop
incl
mov
dec
add
pop
add
add
mov
adc
add
pop
add
nop
xchg
cmpsl
pop
incb
xchg
xchg
shll
insb
add
incb
bound
lods
add
add
add
mov
add
andl
mov
add
xchg
adc
add
adc
fimuls
fildl
lods
lods
jno
dec
sti
xorb
dec
add
loopne
sub
push
incl
aam
add
and
add
testb
add
xchg
jns
fists
mull
mov
push
std
mov
add
cmp
aam
lea
pop
add
incb
dec
add
inc
dec
add
add
xchg
ficoms
jecxz
cmp
incl
js
shl
add
incb
cwtl
push
incl
inc
rcrb
sti
aaa
incb
add
incl
jbe
pop
add
add
sarb
add
incl
cmp
mov
das
mov
add
aas
scas
clc
pop
add
add
incb
or
or
push
js
inc
add
incl
ja
incl
divb
scas
enter
incb
mov
add
fsubl
incb
inc
test
sbb
incl
pop
adc
add
add
push
incl
adc
add
and
add
dec
add
in
mov
test
pop
add
add
incb
add
add
ja
push
push
mov
mov
add
mov
add
xchg
adc
add
incb
imul
xor
add
add
xchg
push
bound
test
pop
add
add
incl
leave
das
add
add
inc
add
lret
mov
aad
test
pusha
add
xor
add
dec
add
incb
inc
fbld
inc
mov
pop
add
incl
shrb
add
jmp
fstpt
mov
ja
ljmp
add
insb
add
add
movsl
add
add
scas
lds
gs
clc
scas
dec
into
stos
or
mov
mov
incl
loope
out
aaa
incb
shl
pop
test
add
xor
add
incb
adc
add
orl
mov
jno
add
add
outsl
sbb
imul
cld
mov
add
incl
push
add
lret
jb
push
add
cmp
xchg
cmpsb
aad
xchg
jecxz
nop
sub
xchg
add
add
pop
add
mov
add
test
fsubrs
add
movsb
pusha
add
mov
incb
stos
jno
cmp
dec
push
add
mov
cmp
lock
add
incl
test
fwait
inc
shlb
add
add
sub
incb
push
incb
jl
cli
mov
add
stos
mov
outsb
add
xor
add
lret
enter
add
inc
add
incb
jnp
xor
add
jge
js
cmp
pushf
and
add
incb
add
incb
into
adc
add
incb
icebp
lahf
sub
add
add
jo
push
incb
pushf
mov
incb
clc
movsl
loope
add
in
mov
movsl
pop
add
in
movsl
into
adcb
nopl
lods
cltd
xchg
xchg
lret
mov
add
xor
add
ret
or
or
ret
hlt
mov
incb
leave
lea
fdivrs
int
add
xchg
incb
stos
cmpsb
push
popa
cmp
push
add
sbb
and
xchg
push
incb
and
add
incb
dec
lea
incb
mov
int3
out
mov
add
add
daa
incb
je
rolb
iret
add
adcl
mov
popa
lea
pop
add
fcmovu
inc
add
incb
mov
sbb
push
push
fstp
lods
push
mov
test
incb
cwtl
pop
jle
xchg
pop
incb
cmp
sbbl
xchg
lahf
and
add
ds
pop
in
jp
jp
jns
mov
imul
pop
add
hlt
sbb
imul
adc
add
push
mov
incb
loop
orb
imul
add
dec
or
incl
bound
js
add
add
cmp
fisttps
subl
pop
incl
cmc
ret
xor
add
addps
adcl
insb
add
xchg
jno
push
les
add
add
and
add
std
xlat
pusha
add
and
add
incb
lods
cld
push
add
out
fwait
adc
add
aad
jnp
jb
xor
add
and
add
arpl
movsb
mov
cltd
gs
je
sub
call
xchg
cmp
sbb
xchg
sbb
mov
incl
add
fdivl
scas
fnstsw
sub
std
lods
dec
scas
xor
add
popa
xchg
mov
inc
stc
mov
add
and
add
insb
add
jo
push
incb
jb
dec
fwait
push
push
add
add
enter
shll
test
ret
aaa
incb
push
loopne
pop
insb
add
mov
add
dec
and
add
jo
test
jbe
push
push
lods
dec
mov
mov
sub
cli
jecxz
das
inc
loope
cltd
jbe
ret
xor
add
adc
add
jo
orb
sub
sbb
in
add
incb
in
fiaddl
add
jmp
add
stos
in
mov
cwtl
jle
cmp
jg
in
in
leave
or
loope
jl
adc
add
test
sub
out
in
into
icebp
cmpsl
imul
gs
add
add
mov
dec
pop
add
xchg
incb
lret
jmp
cwtl
inc
jle
addr16
negl
outsl
jmp
jmp
cmpsl
pop
add
incb
push
add
bnd
ljmp
ja
add
cwtl
adc
imul
add
and
add
sbb
push
add
add
add
loopne
in
xor
add
out
dec
add
and
add
add
incb
sbb
sbb
sbb
adc
add
push
add
add
incb
inc
add
dec
add
mov
push
add
jmp
bound
testl
lods
insb
add
incb
js
jp
std
mov
mov
xchg
bound
lcall
incl
mov
jge
pop
xchg
insb
add
dec
imul
add
pop
pop
add
bound
add
jmp
xchg
daa
incb
out
add
nop
ljmp
push
add
incb
scas
add
add
add
push
add
mov
mov
incb
xchg
inc
add
and
add
add
dec
aaa
incb
fsub
mov
out
fiadds
loope
jo
std
movsl
mull
incb
dec
add
jne
aas
pop
add
push
incb
in
pop
incb
and
negb
lahf
or
and
add
lods
fwait
dec
add
push
incl
jle
or
mov
negl
lock
mov
or
pushf
jbe
push
add
arpl
dec
add
out
aaa
incl
adc
add
add
add
loop
ret
mov
cmp
xchg
ficoms
incl
icebp
adc
add
pop
add
incl
lret
shll
adc
add
adc
add
add
inc
add
data16
popf
in
dec
add
sahf
add
add
les
mov
lods
and
add
pop
incb
or
test
add
in
xlat
bound
sbb
add
add
incb
mov
inc
or
push
add
add
add
and
lea
sbb
mov
pop
add
fnstcw
orl
add
incb
add
add
in
outsb
add
mov
into
cli
das
cmp
stc
xchg
cmp
mov
mov
mov
fcomi
xchg
incb
hlt
jg
add
incl
in
xchg
je
decl
mov
incb
das
lahf
and
add
jmp
push
incb
cli
data16
incb
call
add
add
lea
lods
xchg
sub
dec
cmpb
mov
add
dec
push
cmp
ja
mov
incb
outsb
add
incb
dec
add
add
add
adc
add
add
pop
jp
out
testb
mov
incb
movsl
sub
in
loope
add
incb
push
cld
in
pop
dec
add
fidivs
incb
fnsave
incb
incl
incl
data16
mov
out
cmp
int
add
lods
cltd
lods
cli
add
pusha
add
incl
pop
cmpsb
mov
lods
jle
push
add
mov
incb
into
clc
hlt
adc
add
mov
add
incb
inc
xor
add
add
add
cmp
mov
add
add
pop
add
mov
pop
add
add
cmp
insb
add
jo
push
pop
add
xchg
ret
add
jp
add
add
sub
pop
dec
pop
add
xor
add
add
divb
mov
pushf
mov
jo
fdivrs
add
data16
pop
test
incb
mov
incl
cmp
dec
add
fcomip
popf
add
mov
add
incl
push
add
sub
cmp
incl
sub
call
add
incb
add
add
add
hlt
pushf
test
add
or
incb
rcrl
mov
mov
bound
sti
and
add
repnz
add
pop
add
jge
add
xor
add
jo
aad
fidivrs
hlt
in
fistps
jno
add
fbstp
dec
add
or
dec
sub
pop
add
add
or
jae
pusha
add
mov
repz
add
gs
incl
pushf
cmp
adc
add
add
ja
incb
lock
aam
incb
cli
mov
push
add
add
mov
incb
lahf
sub
push
addr16
outsl
sahf
pop
fsubs
add
rcll
sbb
jns
jo
lods
pop
in
jg
add
add
fldenv
xlat
push
add
movsl
mov
add
add
add
jg
insb
add
cwtl
lods
mov
pop
add
enter
add
add
pop
add
add
lods
jno
outsl
out
incb
and
add
stos
popa
imul
mov
inc
loope
mov
incb
pop
add
shll
push
incb
jo
mov
movsb
mov
mov
adc
add
incb
and
add
add
inc
add
add
mov
in
incb
mov
adc
add
xchg
sub
clc
xchg
add
cli
daa
incb
cltd
push
inc
add
push
add
push
add
xor
add
cmpsl
sbb
in
jge
incb
cmpsl
push
ret
repnz
add
pop
incb
dec
cmp
inc
add
lcall
sub
mull
incb
in
add
add
ja
daa
incb
inc
add
adc
add
add
jl
mov
rorb
mov
xor
add
jmp
mov
xchg
xor
add
jbe
sub
add
add
pusha
add
incb
pop
cmpsb
ret
pop
hlt
sub
sub
or
add
pop
add
incb
cmp
incb
or
loope
add
sbb
and
add
xchg
loop
incb
sub
xor
add
add
xor
add
cmp
mov
incb
mov
cmp
incb
sbb
das
mov
add
or
add
incl
add
incb
test
sub
inc
add
sub
call
and
add
mov
lds
stos
mov
pop
incl
test
jl
push
incl
fistl
add
aaa
incb
inc
adc
hlt
mov
inc
push
incb
adc
add
incl
and
iret
pop
lcall
addl
in
add
fisubl
incb
push
add
mov
incb
ljmp
pop
push
pop
jb
mov
call
mov
test
gs
xchg
and
incb
aad
adc
add
add
add
inc
imulb
add
jg
dec
je
jae
add
stos
lret
xlat
ja
inc
cmpb
add
and
add
add
ja
or
test
add
add
loop
fdivs
lock
add
lods
mov
jae
int
adcl
incb
in
inc
add
incl
js
sbb
jmp
cld
outsl
fildll
xlat
rorl
jb
add
cmp
nop
mov
incl
or
dec
sub
mov
repnz
push
add
sbb
push
add
incl
out
stc
nop
repz
call
daa
incb
inc
or
imul
add
jge
ds
jns
lea
add
outsb
add
push
add
outsb
add
fmuls
add
mov
test
fsubrl
dec
bound
xor
add
incl
dec
and
add
fnstsw
mov
incb
or
insl
scas
pop
incb
int3
sbb
bound
int
xchg
jmp
push
pop
xchg
or
test
cmp
mov
push
add
and
add
adc
test
incb
mov
add
add
add
xor
add
add
int3
jne
add
incb
into
adc
add
lahf
add
add
incl
out
add
add
incb
push
incb
lods
mov
xchg
push
add
cli
dec
add
shl
jne
add
incb
xor
inc
push
add
mov
imul
add
xchg
mov
pop
incb
jns
fiadds
ret
cmpsl
xor
add
fistpll
add
sbb
incb
cmc
movsl
addl
incl
sbb
incb
icebp
mov
xor
add
cmp
dec
jno
adc
add
pop
add
add
xor
add
repnz
pop
rolb
enter
cmp
popa
hlt
dec
push
add
cmp
pop
incb
rorl
imul
sbb
aam
push
fstpt
adc
add
sub
add
add
add
mov
xor
add
incl
icebp
inc
movsl
out
popa
ja
loopne
xorl
int
push
movsb
jmp
incb
mov
add
xchg
xchg
fiadds
fiadds
add
mov
and
add
add
rorb
das
xchg
xor
add
add
add
pop
add
add
hlt
sbb
and
add
cmp
adc
add
dec
outsl
popa
ja
or
add
add
mov
add
sbb
shlb
incl
add
mov
mov
incb
jnp
sub
mov
add
das
dec
xchg
andb
add
or
add
incb
pop
jo
jp
mov
pop
incb
xor
add
daa
incb
out
dec
add
jle
mov
add
popl
incl
aas
dec
add
inc
add
add
sbb
pop
add
incb
incb
adc
add
incb
movsb
inc
add
add
inc
add
add
stos
push
daa
incl
rcr
cmp
mov
test
pop
add
add
mov
jmp
push
xchg
xor
mov
pop
incb
push
jmp
mov
add
in
incb
push
add
inc
add
test
add
add
add
loopne
aad
fcmovb
inc
add
sub
add
dec
add
incl
incb
adc
mov
ja
add
incb
lahf
mov
incb
std
dec
add
sub
adc
adc
add
add
push
daa
incb
cli
mov
incb
mov
cli
testl
or
or
push
cmp
add
lcall
add
call
icebp
xchg
add
push
add
lahf
and
add
rcll
pop
add
pop
mov
add
incb
or
cmp
adc
add
and
add
add
add
incl
gs
add
xchg
jle
in
push
add
pop
add
add
add
incb
and
add
xchg
xor
add
add
add
add
incb
out
loopne
pop
mov
int3
dec
outsl
jmp
add
je
xor
lods
mov
add
add
sbb
sbb
add
nop
in
cwtl
add
add
je
std
sbb
test
pop
adc
pop
addr16
add
adc
add
incb
imul
add
incb
inc
mov
incb
sarb
inc
add
dec
incb
neg
or
xlat
out
cli
roll
subl
add
push
out
xchg
inc
pusha
add
push
add
incb
lods
mov
ja
push
incb
xor
add
mov
jle
mov
jo
push
mov
push
jbe
dec
add
add
int3
mov
movsl
jno
je
mov
mov
faddp
mov
add
jbe
daa
incb
xor
movl
mov
incb
and
add
dec
test
incl
sub
insb
add
incb
mov
add
incb
add
add
add
jle
push
incl
sbb
out
movsb
loopne
leave
mov
clc
dec
xor
add
push
inc
add
fcmovbe
jp
sbb
mov
incb
add
int3
pop
incb
sbb
iret
lds
out
push
add
xchg
jnp
dec
out
out
mov
incb
mov
add
add
add
notl
ja
aam
mov
insb
add
add
add
dec
mov
les
cmp
xchg
pop
test
ja
xchg
cld
mov
add
fsubs
add
incl
add
add
add
icebp
addb
lods
icebp
push
jle
cmc
sbb
add
daa
incl
jno
adcb
add
daa
incb
adc
add
rcl
clc
fistl
incb
js
outsb
add
mov
add
gs
add
mov
add
fstl
clc
push
add
ja
add
incb
mov
cli
dec
jl
push
or
cmp
test
lds
sbb
lock
scas
rolb
incb
andl
incb
leave
dec
xchg
sub
lods
fbstp
incl
pop
add
add
and
add
mov
shrb
add
xchg
aam
add
data16
add
incb
lods
data16
add
scas
jbe
mov
incb
in
pusha
add
or
pop
mov
mov
sub
incb
pop
incb
jmp
mov
push
incb
pushf
mov
add
add
pop
add
orb
jno
sysenter
incb
dec
add
jp
pop
jnp
incb
dec
out
mov
cli
addb
out
and
add
jno
add
movb
ret
ljmp
or
aad
cmp
push
or
test
or
js
cmp
in
cmp
jge
lahf
lahf
decb
mov
add
xchg
mov
lret
cmp
incb
gs
add
mov
in
test
cwtl
pusha
add
lret
cmpsb
jne
incl
cmp
imul
fmull
add
add
push
arpl
add
mov
add
je
lock
add
mov
xor
add
xchg
daa
incl
shll
incb
shlb
or
adc
add
xor
add
pushf
out
jecxz
inc
xlat
aaa
incb
dec
add
mov
add
add
add
incb
lods
add
add
add
and
add
push
mov
sti
test
ja
pop
push
add
jecxz
adc
add
or
dec
add
sub
jge
xor
add
dec
add
std
int
add
add
daa
incb
pusha
add
add
ljmp
aas
fistl
sub
mov
incl
dec
add
ret
or
xchg
adc
incb
shll
incl
inc
push
add
mov
incb
push
add
les
incb
scas
add
add
push
incl
dec
add
incb
xor
add
sarl
pop
add
sub
push
das
inc
add
add
mov
add
jge
mov
add
incb
fnstcw
add
cltd
mov
add
mov
imul
add
add
nop
shll
incb
xchg
push
incl
xchg
ror
incb
inc
add
insl
mov
add
incl
mov
incb
mov
push
add
imul
push
add
lock
jmp
add
add
ja
mov
lea
jnp
jl
xor
add
mov
test
add
sbb
fiadds
incb
mov
lds
incl
sbb
mov
dec
add
incl
pop
add
dec
aam
add
fwait
iret
scas
scas
lea
add
incb
out
incl
lcall
add
shlb
xlat
mov
ret
add
arpl
push
adc
and
add
mov
jg
out
incl
and
add
pop
mov
add
add
inc
add
inc
push
mov
add
add
push
add
add
add
incb
dec
inc
sti
jo
loopne
or
imul
sarb
pop
sub
cmp
add
incb
mov
movsl
sbb
sti
push
add
add
xchg
and
add
lock
add
add
inc
add
aaa
incl
mov
imul
pop
movsl
cmp
incb
loopne
xchg
sbb
mov
add
mov
jg
incb
hlt
and
add
xchg
repnz
add
lods
mov
incb
jge
sub
add
jne
fsubrs
add
or
sbb
arpl
mov
ficoml
ja
or
iret
sahf
test
flds
add
jno
stos
lret
push
add
incl
cli
ja
fdivrl
add
add
lret
xadd
add
push
add
or
cli
lods
pop
stos
or
inc
add
dec
add
incb
dec
add
or
or
shll
lret
sbb
mov
add
xchg
scas
mov
incb
pushf
sahf
adc
add
add
add
stc
sbb
test
test
dec
call
add
jbe
insb
add
das
movsb
push
add
pop
incb
fldenv
incl
cmp
sahf
pop
movsb
cmc
push
sub
add
sub
icebp
dec
xlat
dec
fsubp
pop
incl
loope
out
add
add
mov
incb
mov
add
in
mov
add
adc
add
xchg
jmp
incb
adc
add
pop
add
incl
lret
lahf
int
or
in
xor
add
andb
incb
fs
adc
add
addb
add
add
add
incb
xchg
lods
jo
adc
add
add
incl
xchg
add
jb
jno
ljmp
or
out
mov
pop
push
add
adc
add
jne
push
incb
dec
dec
add
xchg
imul
dec
add
fnsave
incb
add
incb
into
xor
add
cmp
mov
incb
shlb
incb
data16
incb
out
incb
lods
push
incb
dec
int
push
incb
cli
ret
jae
fwait
add
add
inc
scas
dec
add
out
data16
xchg
add
mov
push
cmp
ljmp
pop
incb
push
add
fdivl
incb
loope
mov
imul
or
and
add
add
imul
pushf
xchg
push
mov
das
and
add
add
jbe
aas
mov
incb
inc
add
js
jg
add
xchg
popf
aad
scas
sbb
mov
add
add
add
les
add
aad
movsl
test
addb
add
jae
pop
incb
out
incb
fwait
adc
add
mov
cli
adc
add
incl
into
bound
jae
aas
mov
add
jmp
add
add
incb
push
incl
add
add
add
jno
idivb
insl
cmp
data16
push
add
pop
add
pusha
add
pop
add
inc
add
mov
or
sbb
in
jns
das
lahf
push
add
xchg
incb
push
adc
add
mov
jge
add
aaa
incl
shlb
add
jo
xlat
pop
add
lret
incl
jne
stc
sbb
aad
push
adc
add
rcrb
cwtl
sarl
movsl
dec
add
icebp
incb
test
mov
sahf
pop
std
nop
jecxz
cmp
orb
stos
pop
add
or
sbbb
cli
jge
add
mov
gs
cli
stos
xchg
iret
mov
incb
mov
add
incb
adc
lock
jge
incb
adc
add
add
add
dec
add
mov
cmp
incb
repz
inc
add
add
incb
sbb
lods
or
dec
add
sbb
loope
add
add
int
inc
mulb
xchg
sti
mov
psubusb
add
scas
push
add
incl
gs
bts
add
enter
mov
add
mov
add
xor
add
call
add
shll
fsubs
incb
add
incb
push
orl
dec
add
jne
adc
add
or
push
aas
xor
add
pop
add
sbb
xchg
sbb
inc
rcll
mov
push
incb
bound
push
add
incb
sub
test
add
clc
fnsave
incl
repnz
jno
inc
add
sti
jns
aad
incb
sbb
enter
aad
pop
incl
adc
adc
add
push
add
incb
xor
add
add
push
icebp
inc
fldcw
test
test
jne
incb
fdivrs
sub
mov
sbb
movsl
fdivl
incb
shll
mov
add
incb
mov
add
add
add
jbe
sbb
sub
mov
cmpsb
loop
xor
incl
cmp
andb
loopne
add
sar
ds
push
rcl
inc
cmp
add
incl
icebp
int3
das
adc
add
popf
cmp
mov
mov
push
movsb
adc
add
adc
add
pop
aaa
incb
outsb
add
incl
lea
out
dec
mov
push
add
add
stos
adc
add
incb
jb
cmp
add
add
fxtract
fidivrl
cwtl
pop
incb
xchg
mov
incb
fcompl
popf
jle
and
add
push
adc
add
scas
out
mov
cmp
add
mov
rol
loope
fs
add
add
decb
mov
xchg
and
add
add
inc
xor
add
dec
add
add
loope
add
push
add
add
iret
and
add
bound
add
cwtl
sbb
cmp
ljmp
aaa
incb
lahf
xchg
dec
loop
add
add
xchg
inc
mov
add
jno
add
out
incb
pusha
add
jmp
incb
jae
lcall
inc
lock
jb
push
int3
daa
incb
test
jecxz
std
push
add
add
icebp
inc
jp
data16
xchg
mov
cmp
cmp
mov
sarl
add
pushf
push
add
add
add
xchg
xchg
jns
insb
add
notl
pop
pop
add
incb
jo
pop
incb
sub
and
add
jmp
hlt
loope
fs
lcall
add
sbb
add
incl
in
cmp
add
add
fsubr
or
xor
add
dec
add
fucomp
stc
mov
out
incb
adc
add
incl
xlat
mov
incb
test
incb
jns
add
incb
mov
inc
mov
jle
pop
push
add
in
mov
adc
add
cmp
add
repnz
imul
mov
add
dec
sub
stos
dec
pop
push
add
xchg
xorl
add
ljmp
jle
gs
fstl
add
call
mov
add
xchg
dec
test
clc
lret
scas
inc
adc
add
adc
add
mov
pop
add
fsubrl
incb
lret
arpl
pop
or
incb
pop
cmpsl
scas
or
jne
imul
add
push
mov
mov
fwait
cmpsl
xlat
out
add
add
outsl
and
mov
incl
add
lods
clc
ja
jle
ljmp
outsl
xchg
insb
add
incb
push
add
incb
int
incb
pop
incl
sub
sub
dec
or
dec
lea
jb
lods
pop
jecxz
push
xlat
mov
stos
mov
test
incb
pusha
add
incb
shrl
ja
mov
jo
mov
or
jne
repz
mov
add
lcall
arpl
adc
add
xchg
adc
scas
dec
or
or
fsubrs
add
add
incb
incb
psubb
jo
imull
cli
adc
add
add
ds
inc
and
mov
add
popf
jb
insb
add
add
add
je
sbb
incb
mov
add
sub
mov
add
int
add
incb
pop
cmc
data16
lods
push
iret
test
sbb
add
add
mov
and
popa
cltd
sbb
outsb
add
imul
add
add
incb
movsb
int3
add
add
mov
add
lds
incb
dec
add
mov
adc
add
into
mov
add
lods
mov
xor
add
jmp
loopne
enter
jae
mov
mov
aaa
incb
int
dec
dec
add
adc
add
adc
add
sbb
or
jnp
mov
jp
mov
sub
out
lods
sub
incb
enter
add
incb
in
xchg
dec
inc
jg
dec
add
loop
and
add
and
add
daa
incb
ja
push
add
adc
add
add
mov
push
add
add
add
mov
incb
lcall
incb
popa
cltd
xchg
shll
dec
add
and
add
adc
add
incb
repnz
sub
pop
dec
insb
add
ja
incb
sub
mov
mov
ja
xor
add
and
or
dec
dec
add
incb
inc
incl
daa
incl
mov
add
add
ds
cmp
sahf
mov
mov
jnp
incb
and
add
xchg
cld
dec
stc
roll
incb
incb
leave
clc
sub
inc
add
incb
mov
adc
add
add
gs
cmp
xchg
add
sbb
dec
add
inc
add
jmp
xor
sub
hlt
lret
add
loopne
add
gs
add
jg
and
add
mov
dec
aaa
incl
mov
jns
and
add
insb
add
cli
push
incb
imul
or
pop
incb
adc
add
add
dec
add
adc
add
or
and
add
ror
in
jne
add
in
stc
bound
idivb
sbb
mov
jp
lds
incl
lock
incb
fisttps
pop
add
push
leave
xor
add
cmp
add
xchg
mov
add
add
out
and
add
cmc
outsb
add
out
xchg
or
incb
sub
mov
incl
and
add
test
imul
adc
add
xchg
jp
pshufw
mov
add
sub
or
adc
add
push
incl
add
incb
xor
add
mov
adc
add
pop
add
xor
add
incb
incb
das
inc
cmpsl
std
scas
jl
cmpsl
pop
fistpll
std
rorl
cmp
mov
pop
incb
cmp
inc
push
incb
outsb
add
incb
cmp
mov
pop
and
add
and
add
lods
pusha
add
notl
add
add
fdivrp
outsl
add
dec
lea
inc
add
adc
add
incl
fsubp
cmp
xchg
in
bound
jl
mov
incb
jbe
push
add
add
inc
dec
add
inc
add
add
dec
mov
stos
sub
in
pop
xor
add
fisttps
cmp
aaa
incb
fsubrs
mov
push
xchg
xchg
xchg
cmp
add
insl
mov
incb
aam
jbe
or
sub
sti
push
pop
mov
or
inc
sbb
cmpsb
repz
mov
push
add
sbb
mov
push
add
adc
add
pop
push
add
adc
jns
pop
incb
push
add
push
add
incl
mov
mov
add
iret
push
xchg
pusha
add
incb
cmpsl
xor
add
lret
stc
test
sub
and
add
aam
add
aaa
incb
incb
or
pop
incb
out
rclb
push
add
incl
mov
incb
cli
popf
jae
incb
push
add
incb
jmp
das
lahf
sub
test
data16
cmp
jnp
dec
push
sarl
sub
or
lods
sbb
push
dec
add
dec
inc
add
lcall
add
incl
jg
add
or
add
dec
and
add
xchg
ljmp
incb
adc
add
pop
cmpsb
pushf
xchg
mov
incb
sbb
xchg
and
add
test
je
adc
add
or
test
adc
add
incl
push
adc
add
loop
cmp
mov
xor
add
cltd
loopne
lods
or
mov
lret
dec
add
incl
push
incl
xchg
shrb
inc
add
incb
sbb
add
stos
lods
addr16
add
inc
add
add
add
incb
inc
fisttpl
sub
add
inc
sub
pop
incb
add
add
test
or
outsl
adc
add
push
insl
in
push
add
inc
add
or
incb
bnd
lock
mov
incb
pop
incb
pop
add
incb
cmp
push
add
add
incb
shlb
add
incb
mov
add
add
icebp
or
cmpsl
sub
enter
xor
add
out
incb
pop
xor
add
aaa
incb
mov
add
mov
mov
add
ret
add
add
test
cmpsb
xor
add
sbb
add
incb
mov
pop
and
add
out
pop
incl
sub
fimull
add
add
add
cmp
incb
xchg
js
leave
inc
add
mov
daa
incl
mov
dec
je
stos
dec
add
outsl
xchg
jae
push
cmp
xchg
push
add
pop
push
add
mov
add
incb
mov
add
jnp
add
add
add
add
fldt
add
add
incl
sbb
cmp
pushf
ljmp
add
mov
xchg
cmp
lods
dec
add
incl
fimull
and
add
fnstenv
ljmp
jl
xor
add
aas
jg
incb
xchg
and
add
mov
add
incb
inc
sbb
hlt
mov
adc
add
push
add
incb
cli
add
and
add
int3
mov
mov
add
pop
incb
jo
pop
push
add
add
cwtl
int3
les
iret
cwtl
mov
cmp
push
add
lds
dec
mov
add
sub
movsl
adc
add
or
xchg
in
jo
xor
add
inc
or
rorb
loopne
add
jbe
fidivrs
inc
adc
add
int
js
add
add
lret
mov
jnp
sbb
xchg
imul
add
testl
cmp
cmc
sahf
out
sti
lods
adc
add
add
sub
and
add
insl
sub
add
add
incb
daa
incb
push
add
ror
addb
inc
add
incb
sbb
mov
shl
mov
imul
shlb
incl
jmp
sbb
movl
inc
add
mov
incb
std
xor
add
sbb
dec
xor
add
pop
incb
ficomps
sti
decb
jae
out
nop
pop
ret
add
incb
pop
add
iret
mov
add
inc
add
cmpsl
mov
pushf
push
incb
bound
dec
add
add
ret
sahf
push
sub
add
sahf
lret
adc
add
add
cmp
sub
cltd
inc
add
mov
add
incb
lret
shlb
add
mov
add
add
data16
incb
incb
fsubr
jle
nop
mov
add
clc
push
add
incb
cmpsb
add
add
incb
mov
repnz
add
mov
mov
into
fbld
jo
push
incb
or
and
add
add
incb
out
xor
add
jne
mov
int
cmp
add
add
mov
repz
add
testb
leave
jl
lea
sahf
pop
out
add
incb
shlb
add
adc
add
std
fists
push
sub
insl
sbb
dec
testb
outsb
add
add
shrb
and
add
incb
pushl
rcrl
add
pop
pop
xchg
imul
add
fcmovnb
lcall
adc
add
inc
inc
add
and
add
je
sbb
inc
xchg
xor
add
icebp
xchg
outsb
add
add
incb
sbb
add
add
add
add
jp
add
add
add
repnz
inc
add
ja
add
push
iret
dec
add
int
arpl
sbb
stc
scas
cltd
mov
mov
mov
add
jmp
andl
or
xlat
xchg
jno
aaa
incl
mov
fimull
add
add
add
xchg
xchg
shll
mov
add
incb
inc
add
add
imul
out
incb
pop
incb
movsb
lds
incb
mov
and
add
incb
xlat
cmpl
sbb
add
fsts
add
or
push
ja
scas
xor
out
fcoml
pop
incb
std
push
adc
add
incb
sbb
movsl
cmp
out
mov
incl
nop
loopne
mov
add
sbb
adc
add
add
pop
mov
add
fnsave
push
add
loopne
and
add
incl
dec
add
fwait
jle
lret
repnz
pop
movsb
push
add
in
and
add
adc
add
lea
incb
dec
mov
xor
add
stc
sub
mov
add
inc
xor
add
lret
xchg
mov
mov
je
pop
add
cmc
daa
incl
dec
add
adc
add
dec
mov
add
add
incb
lods
jne
sbb
add
cmp
stos
aaa
incb
mov
bound
and
add
incl
add
add
incl
fwait
xchg
dec
add
incl
data16
pop
incl
roll
add
adc
add
add
incb
mov
sahf
fdivrl
xchg
and
add
add
add
add
push
add
stos
cmp
mov
add
inc
fidivs
sbb
pop
add
inc
cmp
xor
add
inc
inc
add
cltd
flds
incl
cmpsb
test
icebp
jne
shlb
test
sbb
or
push
add
call
cmp
fidivl
out
incb
cmpsb
mov
sbb
or
popa
adc
add
sti
push
add
add
add
inc
add
decb
adc
add
clc
and
add
in
jg
inc
add
incl
out
inc
add
push
jne
dec
add
incb
not
fwait
pop
add
incl
in
pop
push
lret
add
add
push
and
add
incb
stos
incl
out
push
cwtl
add
in
nop
xlat
mov
ja
inc
add
mov
stc
xchg
sar
add
xor
add
loopne
pop
incb
xchg
arpl
ret
add
add
xchg
pop
call
add
add
add
sub
inc
andb
dec
add
jne
incb
out
nop
fstpl
add
rcrl
and
add
mov
incb
cltd
cltd
js
call
add
pop
add
push
add
cmp
adcb
hlt
jl
fsubrs
in
sub
sub
mov
test
fwait
jp
mov
jl
push
add
fistps
dec
push
add
je
cmp
push
add
incb
mov
cmp
incb
add
add
dec
sbb
inc
add
incb
jle
icebp
cmp
cwtl
add
cmp
xchg
aaa
incb
aam
incb
xchg
jb
test
add
add
incb
movsl
ret
mov
push
add
pop
add
arpl
incb
js
les
incb
movsb
sbb
add
std
mov
add
incb
mov
pop
add
or
in
inc
add
add
add
jnp
jo
hlt
mov
cmp
pop
incb
test
scas
popf
clc
push
or
fnstcw
xor
add
mov
jl
mov
arpl
sarl
add
incl
push
add
add
popf
js
mov
incb
sub
jne
add
jl
ja
sub
lds
dec
add
xchg
data16
add
pop
lcall
add
lods
xchg
loope
sbb
jo
daa
incb
mov
dec
inc
add
shl
and
add
add
incb
xchg
dec
add
sub
add
incl
push
add
rolb
add
pop
add
add
add
aas
sub
popf
mov
incb
in
push
add
incb
pop
out
add
cmpsb
nop
stc
adc
add
add
add
mov
add
add
incb
xor
add
inc
add
sar
mov
mov
add
aad
xor
add
xchg
mov
incl
mov
add
mov
incb
mov
test
add
add
incl
mov
xchg
mov
pushf
xor
add
add
into
int
push
jae
addl
add
cli
pop
add
add
pop
stos
add
cld
adc
add
jo
arpl
incb
push
add
popa
sbb
and
add
mov
outsl
arpl
incb
ret
hlt
mov
and
add
lahf
adcb
add
addb
add
incb
sbb
rcrb
and
add
cmp
in
imul
in
and
add
incb
out
add
dec
add
popf
loopne
adc
add
incb
inc
add
mov
bound
xchg
test
add
push
jbe
rcrl
pushf
into
iret
outsb
add
incb
js
mov
aas
lcall
add
add
addr16
incb
jno
loop
pop
sarb
enter
in
add
popf
xchg
repz
push
add
test
incb
xor
add
incb
pop
inc
dec
add
xchg
xacquire
outsb
add
pop
add
mov
cmp
loop
into
ljmp
mov
decb
and
add
scas
in
push
pop
add
ja
add
sub
mov
mov
add
shrb
cmp
mov
add
mov
incb
add
add
lcall
push
add
in
rep
add
add
pop
cmpl
mov
add
add
add
add
dec
icebp
and
add
incl
loope
dec
add
add
rcl
xchg
pop
incl
repz
bound
jmp
mov
adc
add
push
push
add
gs
push
add
adc
add
inc
add
add
dec
ret
add
incb
add
push
add
scas
cli
add
add
incb
cmpsl
push
push
add
mov
xor
add
pop
add
jbe
ret
add
sti
jbe
xchg
add
add
andb
add
scas
mov
icebp
pop
add
add
hlt
add
add
push
add
incb
mov
aaa
incb
xchg
nop
inc
add
add
incl
push
add
arpl
cmp
incb
jns
jb
and
add
into
das
dec
jecxz
pop
add
addl
loop
inc
add
pop
fwait
mov
incb
mov
mov
jl
insl
add
add
jae
and
sahf
incl
xchg
mov
push
out
scas
adc
add
sti
sub
xlat
push
incl
adc
add
add
addb
add
shrb
scas
mov
pop
add
incb
adc
add
add
add
incb
int3
fwait
push
fwait
bound
mov
cmp
mov
incb
mov
mov
add
lcall
fistps
incb
nop
xor
add
out
hlt
mov
imul
xlat
dec
mov
inc
cmpsl
push
dec
add
jp
adc
add
mov
add
testl
shll
incb
cmpsb
jbe
sbb
add
insb
add
incb
movsb
xchg
out
xchg
mov
fisttps
outsb
add
lahf
mov
fisubl
loop
incl
repnz
out
push
incb
pop
add
sub
imul
xchg
ljmp
or
incb
pop
add
inc
add
incb
xchg
adc
add
pop
add
xchg
adc
add
add
push
adc
add
loopnew
incb
xchg
test
incb
int
add
add
xor
add
xchg
add
inc
jge
data16
movsb
jle
pop
fists
ficoms
addr16
insb
add
add
add
add
add
add
mov
incl
into
cmp
xor
add
incl
pop
add
add
incl
pop
add
push
enter
add
mov
outsl
push
les
cli
push
add
jae
add
mov
incl
fisubs
incb
les
incb
inc
add
add
push
cltd
fwait
and
add
add
int3
jp
pop
incl
repz
inc
cli
loopne
pop
add
add
mov
sub
je
repz
scas
stc
jge
inc
add
sti
and
add
incb
jbe
popf
sbb
gs
incb
movsb
int3
push
add
add
push
incb
arpl
imull
incb
stos
mov
pop
incb
cmp
sub
xchg
lret
incb
dec
dec
xor
add
arpl
add
add
lock
aam
incb
sub
mov
incl
add
add
dec
add
out
mov
dec
add
add
clc
push
add
out
imul
add
incl
jb
shll
incb
push
stos
ficoml
dec
xchg
hlt
cmp
outsb
add
sbb
xor
add
cltd
mov
incb
mov
mov
pop
daa
incb
cmc
adc
add
incl
rol
fwait
mov
incb
lret
incb
xchg
inc
add
incb
nop
mov
jbe
sub
add
add
add
incb
mov
lods
sbb
mov
or
pop
add
fidivrs
incl
out
incb
adc
add
in
xchg
dec
add
add
mov
incb
aam
sbb
call
fldt
add
push
mov
push
add
add
mov
cmp
les
test
and
add
out
mov
adc
add
and
add
add
push
incb
mov
repz
mov
xchg
pop
add
pop
popa
insl
or
push
add
in
pop
scas
xchg
loop
add
incl
jmp
add
sbb
fwait
sub
mov
incb
adc
add
hlt
jae
cmpb
pusha
add
incb
popa
xlat
push
incb
arpl
cmp
mov
add
add
add
fmul
in
mov
add
xchg
and
add
add
std
pop
add
incl
inc
add
add
stos
in
repz
add
add
mov
sbb
mov
adc
add
das
jne
mov
incb
sbb
pusha
add
sub
movb
stos
sbb
lahf
inc
add
or
xor
jge
incb
xchg
fisubl
int
add
lret
add
out
cwtl
insb
add
add
lcall
xchg
inc
mov
mov
add
incb
pop
add
stos
mov
incb
int
inc
inc
jecxz
ljmp
fimull
cmp
mov
incb
out
pop
add
pop
add
add
sub
inc
add
test
incb
sbb
fistps
add
incl
imul
add
jnp
push
sarb
add
xor
add
dec
add
incb
mov
cltd
ret
fwait
mov
add
incb
jo
and
add
jg
incb
pop
dec
add
xor
add
mov
mov
das
pop
add
test
cmpsb
mov
loop
inc
cmp
gs
pop
add
gs
add
dec
add
incb
insb
add
and
add
add
incb
leave
mov
cs
xorb
outsb
add
cltd
test
sarl
loopne
stos
leave
lcall
pop
fwait
aaa
incl
pop
add
in
cmp
stc
cmp
jno
add
add
push
add
insl
and
add
add
subb
xor
add
xor
add
xchg
lods
js
push
jecxz
int3
mov
cmp
mov
add
std
xchg
jle
call
push
add
incl
xor
add
repz
sub
cmp
inc
add
sbb
loope
jp
addr16
pop
add
out
xor
add
sub
sbb
push
mov
cmpsl
dec
add
push
in
lods
imul
incl
pop
cmp
jo
adc
add
add
sub
mov
pusha
add
and
add
popf
push
add
dec
add
dec
lcall
jno
add
add
push
add
mov
outsb
add
add
incl
add
add
sub
xchg
adc
add
incl
xchg
dec
add
cmc
loop
mov
add
mov
sub
add
mov
sbb
lods
in
add
incb
push
mov
and
add
mov
add
incb
inc
add
incb
cmp
cmpsb
push
mov
xchg
inc
add
dec
push
add
add
in
add
incl
lret
add
add
xchg
xchg
stc
pandn
out
xchg
cwtl
jle
mov
sahf
test
sbb
mov
cli
jbe
out
mov
jb
ljmp
pop
push
jl
lods
push
add
incb
xor
add
add
add
incb
push
add
cmp
cltd
je
scas
push
add
lcall
outsl
shlb
push
cmpl
or
mov
pop
incb
or
stc
pop
das
imul
add
pop
inc
or
pop
movsb
scas
in
gs
sbb
xchg
repz
dec
mov
mov
pop
add
lods
shl
leave
mov
add
pusha
add
mov
incb
orb
inc
add
insl
lods
pop
add
incb
pop
incb
xor
add
mov
incb
sbbb
sub
aad
mov
out
push
add
add
jge
lds
mov
cmp
mov
hlt
bound
mov
fnsave
add
add
xchg
jo
in
stos
cmc
test
add
and
add
inc
add
xor
add
incb
cs
cmc
mov
aam
mull
incb
das
stos
pop
sbb
pop
ret
ja
mov
dec
cld
adc
add
xor
in
push
add
add
incb
mov
pop
add
shlb
fisttpll
add
jge
jno
mov
push
add
mov
add
into
push
add
incb
sbb
mov
aaa
incb
lods
mov
fisubrl
add
mov
imull
lret
add
call
add
incb
outsb
add
iret
pop
add
dec
add
mov
mov
dec
add
add
add
adc
add
insl
jno
add
add
add
add
incl
in
xor
add
incl
mov
mov
jbe
nop
mov
incb
xor
add
pop
mov
incb
mov
xor
add
sbb
adc
add
add
into
or
incl
jmp
jb
mov
add
add
add
mov
push
add
adc
add
aad
and
add
incb
pusha
add
add
inc
loope
add
jo
pop
incb
pusha
add
loope
fdivs
rorb
inc
les
mov
fnstsw
mov
add
rcrl
out
incb
fildl
incb
sub
insb
add
cld
int
nop
pop
add
sbb
incl
adc
lea
add
add
sarl
add
push
in
shl
incb
and
add
add
test
add
dec
add
sahf
cltd
idivb
add
add
push
add
incb
ret
mov
pop
add
sbb
xchg
aaa
incl
test
jne
add
jg
add
add
push
mov
jno
repnz
incb
insl
lods
jp
xor
add
add
rolb
incb
out
mov
insb
add
add
mov
push
incb
lock
mov
add
add
add
jl
xorl
out
jne
and
add
add
test
mov
and
add
incb
mov
xor
add
or
rcrl
jg
fdiv
xor
add
sbb
sub
imul
lods
xor
add
cltd
test
add
dec
add
sti
in
push
add
aaa
incb
lret
incb
push
pop
add
jae
iret
and
add
lea
shl
add
add
incb
jmp
sarl
incb
loop
incl
ror
aaa
incl
std
and
add
call
add
add
add
jmp
jne
add
cltd
rorl
pop
add
cli
icebp
jecxz
jp
and
add
inc
add
and
add
ds
add
add
popa
dec
mov
add
subb
fnstsw
stos
push
add
cmp
dec
xchg
loopne
inc
add
add
incl
add
add
mov
cmp
sbb
scas
outsl
enter
imul
pop
jb
fiadds
incb
incl
pop
incb
rcrl
add
add
mov
add
mov
add
push
call
fldl
in
xchg
add
add
add
imul
add
incl
fsubs
add
fistl
cwtl
jnp
aaa
incb
outsb
add
mov
inc
add
cmp
add
icebp
jae
jb
fadds
push
push
incb
loopne
add
pop
lods
out
mov
add
fdivl
incl
cwtl
adc
add
adc
add
incb
push
and
add
mov
daa
incl
js
inc
jg
outsb
add
out
std
cmp
xchg
jle
mov
add
stos
mov
stos
sbb
stos
pop
xchg
jle
sahf
mov
incb
icebp
or
dec
and
add
add
jl
xchg
mov
lock
add
lods
or
add
push
add
add
incb
outsl
add
add
adc
add
fimuls
add
add
cmp
lds
test
pop
mov
push
add
loope
add
lahf
add
add
lcall
pop
add
jge
stos
mov
or
insb
add
incb
pop
outsb
add
sbb
mov
xorl
add
decl
gs
mov
addb
add
mov
dec
add
incb
idivl
call
add
dec
add
incb
jno
push
xlat
mov
popf
or
add
push
das
sub
jl
mov
add
jg
aaa
incl
cs
mov
add
add
incb
pop
add
add
push
add
add
add
add
lock
out
add
mov
add
push
add
adc
add
out
sub
dec
add
or
adc
add
sahf
stos
cmp
pop
add
incb
mov
in
xor
add
incl
adc
add
aas
dec
add
cmpsb
ret
jo
cmp
inc
into
repz
mov
scas
in
add
add
jo
fidivrl
cld
hlt
cmp
and
add
lret
dec
add
incb
mov
jp
test
push
add
ret
data16
incb
mov
cmc
filds
rcll
hlt
adc
lods
jmp
jne
add
add
rclb
cmp
pusha
add
add
in
outsb
add
outsb
add
incb
cld
cltd
and
add
gs
sahf
pushf
jns
and
add
data16
call
mov
mov
pop
add
incb
pop
dec
add
incl
imul
xchg
and
add
jne
cmp
int3
fidivrs
pop
sbb
lcall
dec
add
add
fdivrs
pushf
nop
xor
add
add
inc
add
add
incb
scas
cmp
sbb
incb
mov
xor
add
cld
xchg
inc
adc
add
add
fwait
mulb
add
incb
lds
and
add
add
add
jns
xchg
pop
add
add
out
mov
pop
cs
xchg
mov
jecxz
out
push
add
or
arpl
in
fisubrl
xor
or
inc
stos
ret
sbb
sbbb
cwtl
dec
insb
add
movsb
mov
aaa
incb
std
popa
xor
add
mov
das
mov
daa
incb
dec
add
add
xchg
out
inc
xor
add
insl
insb
add
add
outsb
add
mov
sbb
bound
push
add
pop
add
xchg
aas
xor
add
and
add
add
into
xchg
lret
xchg
push
add
or
int3
dec
add
push
add
cld
sbb
push
add
dec
sub
lods
jg
xorb
add
push
outsb
add
incb
fucom
dec
add
sub
lret
xchg
inc
add
aad
pop
sub
fcompl
sbb
xchg
sub
lcall
out
add
ljmp
add
cmp
stos
pop
add
incb
push
movsb
scas
cmp
push
add
scas
and
add
add
outsb
add
add
out
jmp
pop
addr16
add
add
loop
leave
or
jb
xor
add
mov
add
ljmp
or
add
add
inc
add
incb
mov
adc
add
incl
aaa
incb
dec
nop
adc
add
add
xor
add
add
scas
fistps
out
repnz
sub
iret
test
add
add
add
subl
incl
adc
add
aas
pop
incb
pop
clc
mov
mov
add
cmpsb
insb
add
mov
push
insb
add
add
mov
stos
xchg
pop
add
add
incl
mov
iret
sub
pop
insl
adc
add
outsb
add
add
incl
push
stc
mov
lea
add
incb
mov
pop
or
sub
adc
add
inc
add
add
std
and
add
lea
add
xor
in
add
or
aaa
incb
pusha
add
pop
add
add
xchg
fstps
shl
mov
insb
add
add
incb
pop
pop
add
jg
incb
insb
add
incl
mov
add
jp
cmp
hlt
cmp
and
add
xor
add
add
inc
and
add
add
add
add
or
pop
incb
add
loope
inc
add
mov
add
incb
bswap
loopne
stc
aas
insb
add
add
inc
sahf
add
add
inc
mov
mov
add
incb
jp
ret
add
add
mov
fldt
add
mov
sub
xchg
pop
jns
mov
mov
xor
add
sbb
push
incl
ret
inc
add
incb
xchg
add
add
incb
clc
test
cmpsl
insl
push
add
lea
push
add
mov
cmpsl
pop
std
dec
in
add
test
add
sarb
lock
cmp
add
mov
mov
add
xchg
add
stos
jno
push
pop
add
add
incb
shl
jl
cli
sub
cmp
push
lahf
ror
jmp
incb
insl
jl
stc
xchg
repnz
mov
incb
jge
push
repnz
add
pop
in
pop
inc
add
inc
add
cmpsl
int
add
add
pop
sub
adc
scas
testb
push
add
incb
rorb
incb
cld
lea
push
add
loop
sub
jge
arpl
add
test
cld
orl
add
fbstp
sub
aam
incb
lock
or
movsl
scas
cmc
and
add
xchg
add
test
add
add
mov
push
add
sbb
incb
inc
add
add
push
movsl
call
notb
add
add
incl
js
inc
add
and
add
mov
add
add
addb
incb
mov
incb
push
push
incl
call
dec
add
mov
mov
add
pop
adc
add
aad
incb
and
add
in
dec
add
bound
ja
incb
sub
loope
incb
shll
fsubrp
xchg
add
out
js
int
incb
push
mov
add
xchg
mov
ljmp
mov
push
lea
cmp
adc
add
incb
leave
sub
mov
mov
xchg
lock
dec
std
icebp
push
add
stos
sub
jb
mulb
incb
push
mov
add
add
incb
mov
and
add
add
jne
add
loop
cmc
mov
scas
les
addr16
add
in
or
gs
push
add
incb
and
add
dec
sub
imul
push
add
rcrb
push
mov
lret
add
incb
adc
add
mov
pop
add
add
inc
mov
add
incb
fdivl
aaa
incb
xor
add
incb
xchg
mov
cli
leave
mov
repnz
adc
sbb
in
push
dec
mov
incb
jb
and
add
push
inc
pop
hlt
aad
add
add
add
fmuls
mov
inc
sbb
hlt
xor
add
mov
incl
inc
pop
add
incb
xchg
xor
add
incb
jae
incb
mov
add
mov
and
add
adc
add
add
sub
incb
or
fs
rcll
add
incb
ret
fcomp
icebp
pop
add
and
add
push
flds
incb
out
arpl
int3
nop
iret
pusha
add
incb
xchg
js
repz
add
sti
xor
add
push
or
add
add
add
out
jb
push
add
incl
sti
jp
mul
repz
imul
test
pop
incb
sahf
rol
incb
dec
add
mov
add
push
or
dec
add
fiadds
incb
and
add
push
incb
sbb
add
movsl
or
add
add
sti
mov
add
sbb
jb
fisttpl
add
test
add
inc
add
mov
xor
add
ret
push
sub
xor
add
incb
push
out
ja
outsb
add
cmpsl
call
jle
mov
mov
incb
ljmp
cmp
nop
sub
lock
add
incl
insl
inc
xchg
inc
loope
ret
aaa
incb
loop
adc
add
repz
add
add
incb
add
add
incb
push
incl
mov
insb
add
add
add
cmp
je
cmp
dec
add
or
scas
bound
shll
popf
add
mov
mov
incb
daa
incb
rcrb
incb
test
mov
icebp
repnz
xchg
int3
sarb
incb
in
cmp
add
mov
int3
sub
rorl
add
add
incb
dec
add
sahf
cmp
scas
or
out
adc
add
xchg
in
sub
and
add
movsb
roll
shl
cmp
adc
add
add
sub
mov
add
iret
sti
inc
push
fidivrl
mov
cwtl
outsb
add
incb
mov
orl
xchg
add
add
dec
add
incb
sbb
adc
add
xlat
push
pop
leave
xorb
in
adc
add
and
pusha
add
imul
lods
data16
jnp
add
add
add
add
incb
inc
add
push
jmp
icebp
sub
and
or
mov
add
add
incl
inc
add
incb
pop
xchg
mov
sub
andb
push
add
adc
add
add
lods
and
pop
add
xor
add
popf
jns
icebp
adc
add
cmp
inc
clc
shll
incb
out
sarl
add
incb
les
add
cmp
lcall
adc
add
incb
inc
mov
insb
add
aaa
incb
gs
add
add
incb
lea
incb
pop
incb
inc
add
cmpsb
popa
xchg
mov
add
push
add
add
add
add
add
add
jl
push
incb
data16
add
add
add
adc
add
lret
add
lret
mov
add
incb
jge
or
mov
arpl
incb
pop
add
sahf
xchg
push
add
test
dec
xor
add
add
incb
add
add
xchg
push
mov
pop
cmp
or
pop
cmp
cmp
add
clc
jne
incb
jno
mov
jmp
add
add
add
add
mov
testl
fadds
incb
mov
incl
sbb
out
lcall
incb
adc
add
add
add
mov
incb
mov
add
add
incb
dec
add
movsl
shll
int
pusha
add
or
add
xchg
hlt
pop
add
add
adc
add
add
incb
arpl
test
fwait
mov
bound
mov
je
mov
add
xchg
insl
ret
dec
out
add
popl
lock
int
dec
mov
std
lahf
push
incl
sbb
jne
push
add
add
pop
sub
ret
in
mov
mov
fsubrs
add
xchg
or
lret
add
fsub
aas
addr16
cmp
in
mov
inc
lcall
xor
add
pop
add
xchg
jne
jge
scas
lods
jmp
add
out
adc
add
xor
add
sahf
mov
in
inc
add
and
add
addr16
adc
add
add
push
add
push
add
incb
sub
adc
add
sbb
dec
dec
loop
aad
add
incl
inc
add
cmp
incb
sbb
add
add
add
inc
mov
cld
rorl
arpl
sbb
sti
push
add
add
mov
mov
incl
shll
add
adc
add
jmp
adc
add
or
enter
incb
out
push
add
shlb
jg
pop
and
add
cmp
rdtsc
incb
sbb
clc
test
pop
xor
add
or
fistpl
cmp
xchg
inc
inc
pushf
daa
incb
cmp
fst
and
add
mov
incb
sub
out
inc
add
add
add
arpl
sahf
cmc
inc
add
push
mov
incb
pop
cltd
mov
lea
add
cmp
jo
xchg
pop
cld
adc
mov
shll
add
incb
mov
sub
fdivl
loopne
stos
xlat
mov
test
jo
dec
add
and
add
add
add
add
add
lods
sbb
add
xor
add
int3
xchg
add
add
lods
incb
jle
fadds
incb
stc
cmp
pusha
add
add
or
dec
adc
add
ret
inc
and
mov
or
cmp
shll
xchg
xlat
cli
adc
add
jns
add
mov
out
jnp
sti
pop
mov
add
sbb
incb
dec
add
xor
add
in
xchg
sbb
mov
add
addl
mov
test
mov
lret
incb
jp
mov
add
incb
pop
add
incl
and
add
sub
add
incb
or
in
add
test
adc
xchg
stc
test
push
add
cmpsb
push
add
pushf
popf
mov
incb
jae
scas
nop
sbb
repz
and
add
popa
js
sub
lcall
jne
incb
add
add
mov
add
inc
or
clc
add
add
pop
add
incb
xchg
mov
push
xor
add
add
mov
test
incb
rcrl
call
pop
add
push
add
imul
incb
and
xorl
add
add
add
insl
mov
repz
sub
push
add
add
rcl
sbb
lahf
add
add
pop
add
loopne
incb
sbb
in
sbb
je
popf
pop
and
add
dec
ficoms
add
add
xor
add
inc
incb
pushf
pusha
add
or
lahf
mov
pop
push
add
incb
mov
dec
test
incl
push
xlat
imul
in
icebp
jp
cmpsl
lock
push
incl
fs
push
incb
adc
add
add
incb
testl
push
cld
cltd
mov
cmp
fistl
stc
divl
incb
cmp
xchg
jne
incb
push
iret
add
add
mov
mov
cld
lods
push
add
add
les
mov
inc
cmp
inc
in
shr
add
add
mov
add
in
add
incb
pop
jmp
shll
add
adc
add
sbb
dec
add
adc
add
incb
jae
cs
xor
add
incb
add
in
inc
add
add
incb
repz
jle
dec
xlat
xlat
incb
test
add
push
add
incb
dec
mov
insl
jle
mov
and
add
add
xchg
cmpsb
aas
mov
xchg
sti
push
add
daa
incb
incb
pop
add
call
mov
sbb
inc
add
jle
lods
push
add
negb
xor
add
incb
ret
incb
and
add
dec
add
incb
cmp
add
ljmp
scas
mov
add
incb
lds
hlt
sbb
popa
push
mov
add
push
add
xor
add
dec
jb
mov
jp
pop
incl
push
incb
pop
xchg
jne
xor
add
sahf
mov
jmp
add
incb
mov
je
push
mov
add
pop
mov
stc
inc
dec
negb
inc
add
push
imul
mov
add
xchg
jnp
incl
hlt
lcall
add
mov
incl
and
add
mov
and
add
add
sti
stos
icebp
or
jnp
add
add
incb
xor
incb
sti
jbe
mov
pop
incl
sti
scas
int
cmpsb
cltd
mov
gs
and
add
add
add
pop
dec
add
incb
add
bound
sbb
incb
nop
adc
add
incb
sub
fisttpl
daa
incb
jb
movl
xor
add
jns
sub
push
add
aaa
incl
aas
or
sbb
out
mov
mov
pop
cmp
add
push
add
idivl
add
lret
mov
mov
add
add
and
add
add
jae
push
incb
sub
dec
data16
loopne
jg
mov
add
sbb
nop
cmpb
sbb
pop
ret
lea
rolb
add
add
gs
add
ffreep
inc
mov
inc
add
ret
add
pop
stos
pop
clc
loopne
jae
incb
push
incb
dec
hlt
push
add
incb
fisubl
add
stos
in
add
or
in
mov
add
pusha
add
or
dec
add
addr16
add
add
incb
jbe
push
add
mov
dec
add
out
jnp
sub
add
decl
scas
iret
or
push
mov
mov
das
sbb
repz
push
add
add
incb
cltd
xchg
xchg
push
add
cmp
xor
add
adc
add
xchg
mov
cs
sub
xchg
movsb
aaa
incb
pop
xor
add
repz
add
add
cmpsb
rclb
push
add
add
aad
add
or
cmp
mov
xor
add
stos
xor
add
popa
sahf
ds
sub
and
add
add
jnp
jle
pop
incb
int3
mov
aad
or
movsb
addr16
insb
add
incb
fs
sbb
fstps
add
dec
lea
add
incb
dec
add
cmp
add
add
jmp
incb
pop
cmpsb
xor
add
add
or
fidivl
mov
jnp
add
mov
cli
cmp
incb
xlat
cmp
insl
aad
sub
adc
add
cmp
test
dec
data16
xchg
inc
mov
incl
push
add
sub
cltd
int
fwait
leave
mov
imul
add
fcoml
add
add
incb
and
add
mov
cmp
sbb
enter
movsl
daa
incb
add
dec
cmpsb
data16
xchg
dec
push
mov
adc
add
cmp
sub
scas
imul
incb
and
add
add
adc
add
fsts
incb
icebp
add
add
jg
cwtl
lcall
add
cmpsl
std
test
lock
shll
iret
and
sbbb
pop
push
add
add
add
push
add
lret
mov
incb
lcall
adc
or
mov
incb
or
mov
jb
mov
shll
add
adc
add
push
add
test
add
or
test
inc
xchg
add
add
pop
mov
add
add
mov
aas
stos
inc
add
add
add
je
aam
not
pop
add
jge
jge
cmp
incb
jo
lock
pop
add
sub
pop
add
rcrb
je
out
mov
les
loopne
imul
xchg
pop
add
rclb
add
incl
lods
js
sub
incl
adc
add
sub
jne
jecxz
incb
mov
or
xor
add
and
add
dec
add
add
gs
mov
dec
add
add
incb
jle
jge
xchg
fisubrs
add
mov
fisubs
mov
dec
add
outsb
add
incb
and
add
jmp
cltd
scas
pop
popa
std
mov
clc
imul
mov
faddl
jne
insb
add
sbb
dec
xchg
test
aaa
incb
sub
jle
fwait
push
xor
add
incb
and
imul
mov
frstor
add
aad
add
aad
and
add
incb
push
mov
add
jg
outsb
add
incb
popf
cmpsl
sub
xor
add
out
std
hlt
mov
loop
add
sahf
fdivl
bound
jb
dec
fmul
mov
add
gs
ret
cli
jnp
push
incb
xor
add
add
add
clc
mov
xor
add
incb
push
xor
add
add
incb
repz
lahf
std
into
jb
jmp
sub
push
popa
sarl
mov
add
sar
pop
sbb
add
incb
stos
ljmp
jge
cmp
add
add
incb
add
add
dec
incb
icebp
int
mov
outsb
add
xor
add
mov
add
add
fsubl
add
jns
sahf
sub
add
push
add
and
add
incb
xchg
xor
add
add
add
insl
xchg
mov
add
add
mov
incb
push
incb
fnstsw
and
add
mov
out
lcall
outsl
inc
add
lea
test
add
mov
incb
cmp
lcall
push
add
cwtl
ret
pop
add
fidivrs
mov
cmc
sbb
mov
sub
lea
incl
leave
sbb
andl
incb
cmpsb
int3
jne
push
add
incl
sbb
out
dec
add
and
add
ret
cltd
je
jb
or
lock
jbe
add
stc
loope
adc
add
add
add
daa
incb
mov
mov
incb
push
rcrl
add
incb
jecxz
xor
jecxz
incl
repz
adc
add
sbb
fdivs
out
cltd
sti
bnd
jmp
pop
dec
sbb
out
arpl
incl
lods
mov
add
fmul
cmp
add
add
mov
ja
add
add
add
incl
mov
xchg
push
add
add
add
add
add
nop
lret
add
test
add
push
cld
sub
loop
add
pushf
sahf
mov
mov
add
sbb
xchg
jmp
dec
add
add
aaa
incb
push
add
sbb
filds
call
test
ljmp
inc
repz
xor
add
sbbl
test
mov
add
rolb
add
pusha
add
leave
pop
test
lea
popf
int
jno
js
push
incl
dec
aas
xchg
sahf
pusha
add
mov
pop
add
mov
mov
and
add
pop
add
lahf
cmp
cltd
jg
add
push
add
incb
dec
add
mov
lret
data16
jno
clc
add
dec
add
push
add
data16
loope
test
incb
int3
mov
xor
add
push
inc
cmp
test
inc
push
incb
mov
incb
jge
incl
jl
cmp
add
incb
inc
ret
incb
xchg
sub
xor
jae
loopne
lahf
movsl
roll
push
incb
add
push
add
cmp
dec
jp
cli
gs
push
add
shlb
mov
sbb
dec
sub
out
mov
inc
add
mov
and
add
dec
add
scas
or
out
iret
push
incl
pop
add
ljmp
nop
jbe
and
add
jno
aam
sbb
je
int3
adc
add
iret
or
mov
dec
add
bound
outsb
add
pusha
add
repz
mov
incb
mov
add
adc
add
stos
popf
ja
incb
adc
add
ficoml
push
adc
incb
call
mov
mov
add
add
in
add
mov
jl
xchg
push
test
push
add
incl
daa
incb
cmpsb
insb
add
inc
add
lea
filds
add
pop
sbb
dec
add
cmp
add
incb
or
add
mov
adc
loopne
push
incb
loop
mov
add
add
add
in
add
push
xchg
rcl
jmp
and
add
jno
jecxz
orb
mov
add
add
mov
push
incb
lret
dec
add
pop
add
and
pop
add
incl
data16
dec
add
incl
mov
mov
cltd
sbb
incb
mov
pop
add
or
mov
xor
add
movsb
loopne
shlb
dec
sbb
out
add
incb
add
add
sbb
sub
and
add
cmc
or
inc
add
incb
pushf
push
pop
incb
jl
ja
icebp
cmp
out
mov
jae
add
mov
add
into
push
jecxz
pop
mov
push
add
cltd
mov
add
incb
jbe
cli
and
xor
add
outsb
add
add
add
inc
leave
cmp
leave
xchg
push
sub
push
add
test
enter
mov
incb
flds
incb
mov
sti
push
add
in
mov
out
cmpsl
dec
cmp
pop
adc
add
aaa
incb
rclb
add
add
add
ljmp
pushf
pop
rcrl
out
jmp
add
incb
sub
lea
mov
push
add
jl
lds
incl
cmp
push
add
cmc
push
xor
add
pop
add
sbb
mov
xchg
test
mov
stos
movsb
adc
add
incb
test
incb
mov
bound
in
dec
mov
jnp
add
push
test
or
add
lods
aad
add
incb
das
sbb
add
cli
mov
das
jnp
push
incb
add
loopne
jl
pop
add
mov
add
push
outsl
bound
and
add
push
add
incb
jbe
daa
incb
or
jno
jb
sbb
pop
jbe
incb
imul
add
add
ret
add
pop
add
add
add
fistpll
cmpsb
jge
sti
push
or
add
add
add
xor
add
pusha
add
in
mov
inc
cli
push
add
adc
add
out
inc
add
sbb
mov
jecxz
mov
int
xchg
pop
incb
je
fcmove
xchg
lock
incb
mov
cmp
aam
incb
cmpsl
mov
cwtl
ljmp
add
add
lea
repz
mov
add
mov
dec
add
popf
addl
test
pop
in
and
add
add
cltd
jmp
add
lcall
add
pushf
lahf
sbb
xor
add
incb
in
jo
int3
std
nop
mov
cwtl
push
add
xchg
sti
test
rcll
stos
cmpsb
inc
inc
into
sbb
inc
sti
push
fisttps
jge
sub
adc
add
incl
pop
pop
lret
pop
add
movsb
mov
mov
cmp
pushf
adc
add
add
add
repnz
inc
add
lret
and
add
add
mov
incl
add
add
add
add
add
mov
call
xchg
std
cli
insl
out
add
incb
push
cmp
add
addb
push
add
arpl
add
jnp
sbb
fsubrs
mov
into
mov
jg
adc
add
ljmp
call
dec
or
add
push
add
sbb
imul
into
loope
add
dec
add
jnp
adc
add
incb
dec
mov
add
adc
pusha
add
add
pop
add
incl
sbbb
incb
sub
add
add
add
incb
add
add
mulb
popf
sub
add
into
ljmp
push
add
sahf
add
add
add
nop
push
incb
pop
add
incb
sahf
mov
mov
or
add
cli
inc
add
add
add
add
push
incb
xor
add
test
add
mov
incb
jae
sbb
mov
nop
outsl
scas
jns
push
pop
add
imulb
jge
add
add
xchg
popf
idivl
test
pop
add
dec
add
incb
mov
and
add
cmp
pop
lcall
or
jo
aas
push
add
pop
jge
lret
dec
jl
faddl
stos
push
incb
add
add
pushf
push
dec
adc
add
push
add
dec
mov
add
incl
mov
gs
add
push
jae
add
jb
shll
incb
and
add
add
rcl
dec
add
mov
pop
adc
add
dec
add
nop
inc
cmc
pop
cli
imul
inc
add
add
cmc
or
add
incb
scas
sub
mov
incb
pop
incb
inc
out
sub
loopne
test
add
jnp
mov
add
cmc
or
in
aaa
incl
mov
imul
nop
inc
add
incb
adc
add
mov
jno
jmp
shlb
adc
add
dec
add
incb
nop
sub
jb
mov
or
dec
add
mov
je
inc
add
add
clc
dec
bound
jge
incl
inc
add
incb
jl
enter
shll
loopne
incl
test
inc
inc
add
incl
add
add
addr16
add
push
incb
mov
add
add
incb
or
dec
add
incl
pop
incb
sbb
jno
add
incl
insl
call
fcmovb
nop
scas
test
les
add
add
std
ret
lods
sub
jge
pop
incl
jo
pop
aaa
incl
pop
scas
sub
add
incb
push
popa
in
cwtl
adc
add
loop
mov
jmp
cmpsb
outsb
add
add
mulb
nop
pop
jbe
jp
movsl
outsb
add
xchg
nop
cltd
hlt
js
pop
incb
cmpb
add
add
fdivl
sar
nop
mov
mov
add
cli
ficoml
loop
add
or
pop
incl
pop
add
jp
arpl
fld
out
pop
shll
in
rcl
fisubl
imul
cmp
les
incb
sub
push
add
push
add
incb
sub
xor
add
inc
sbb
and
sbb
add
add
sbb
xor
add
testb
jmp
push
imul
xor
add
xor
add
incb
enter
mov
dec
jmp
mov
add
xchg
scas
inc
add
dec
add
mov
push
add
push
incl
jnp
cmp
fsubl
add
jnp
xlat
fwait
jge
pop
pop
add
je
adc
add
mov
nop
xor
add
out
clc
jmp
add
xor
add
incb
in
add
scas
fs
pop
add
lds
cwtl
mov
jb
shll
int
push
add
and
add
incb
shlb
add
incb
lea
dec
movsl
orl
or
push
add
incl
mov
lods
jns
bound
mov
incb
sub
jb
jg
pop
adcl
add
dec
add
push
je
adc
add
in
sub
mov
dec
add
xchg
adc
gs
add
cmp
incb
dec
mov
add
pop
add
mov
add
jae
std
pop
add
push
incb
shll
push
mov
mov
add
les
mov
add
std
adc
add
add
pop
iret
movsb
cmp
fnsave
ja
incb
dec
xor
add
incb
incb
fwait
sub
jg
enter
add
add
fs
cltd
scas
popa
sbb
mov
add
incb
lds
adc
add
mov
incb
lret
test
mov
inc
add
incl
int
incb
push
add
popf
xor
add
incl
fistpll
add
cmp
inc
add
lods
adc
add
push
add
incb
mov
mov
andb
push
incb
inc
add
or
mul
test
incb
loope
inc
in
xchg
mov
push
add
stc
jle
jp
lret
inc
add
clc
cmp
cmpb
insb
add
jmp
shll
and
add
cmc
data16
sbb
sbb
mov
add
push
lea
add
pushf
push
adc
add
push
jg
add
adc
add
add
dec
int3
sbbb
add
push
add
add
add
xchg
addr16
add
push
incb
jp
pusha
add
jbe
out
cmp
sub
incb
jnp
jmp
call
push
incb
sbb
lds
inc
add
jp
add
add
test
add
fst
out
pusha
add
jno
incb
mov
aaa
incb
pop
add
aam
add
incl
imul
cltd
push
xor
add
pop
add
and
add
out
repnz
add
cmp
incb
lods
repnz
adc
add
js
hlt
sar
dec
dec
add
add
jle
out
dec
and
add
incb
mov
add
popa
mov
xchg
mov
dec
test
dec
bound
fcomi
bound
jle
mov
mov
add
add
add
sub
jl
add
add
in
jbe
dec
adc
add
incb
aam
pop
add
incb
dec
add
or
cli
inc
add
xchg
xlat
fucomip
fiaddl
incb
lret
in
popf
or
sarl
int
add
hlt
push
add
add
mov
cmp
fbstp
xchg
aas
sti
mov
jmp
rolb
rolb
jmp
std
jl
add
mov
jg
push
adc
add
fldl
stc
sub
sbb
sbb
push
incb
aam
add
out
into
stos
pushf
push
mov
incb
fiaddl
jg
add
push
add
incb
nop
ret
mov
cmp
pop
add
push
stc
push
nop
ret
dec
add
outsb
add
pop
scas
adc
add
add
add
jae
hlt
inc
shrb
xlat
add
add
pop
loope
incb
xchg
movsl
and
add
bound
xchg
push
incl
loope
and
add
incb
and
jle
fcmovnb
add
sbb
gs
mov
lea
inc
adc
add
incb
and
add
add
add
mov
add
add
push
add
je
mov
add
dec
adc
add
xchg
test
add
add
sub
xor
add
or
popf
gs
leave
gs
add
incb
mov
lods
dec
mov
cld
popf
adc
add
test
lock
add
add
out
jb
cmp
aad
mov
outsb
add
mov
adc
add
add
xlat
dec
fistpl
add
adc
loopne
incb
stos
shrl
incb
xor
add
add
add
in
call
push
incl
and
add
add
int3
cltd
push
add
insl
sbb
incl
in
mov
or
loopne
add
loope
add
add
call
mov
nop
fwait
xchg
cmpsl
sub
sub
sub
std
push
lret
mov
xor
add
test
scas
shl
shrl
add
fsubp
pop
incb
and
add
out
divl
mov
add
dec
add
mov
incb
repnz
out
or
add
add
add
push
incb
xor
add
lods
in
in
sub
xchg
incb
jo
fistl
incb
into
dec
cld
in
adc
add
or
cmovle
jo
xorl
add
add
cmp
das
mov
add
loope
add
pop
add
push
add
ljmp
cmc
sbb
adc
add
incb
inc
or
sub
adcb
add
push
mov
add
add
incb
fnstsw
cmp
push
add
add
mov
add
add
mov
jg
add
aaa
incb
mov
add
punpckhbw
lods
xchg
jg
fisubrs
incb
cmp
pop
incb
push
push
cmc
xorl
or
out
scas
outsl
add
add
loopne
add
dec
inc
add
fdiv
dec
add
add
add
inc
je
ret
pop
incb
mov
jne
fmul
push
add
jae
sbbb
sbb
pop
jp
inc
add
push
add
inc
add
adc
xchg
or
mov
fwait
clts
incb
rcrl
or
jmp
inc
repz
dec
add
incb
or
jae
icebp
mov
push
add
cld
into
rorl
icebp
mov
jbe
pop
add
add
add
call
add
add
incl
pop
pop
loopne
pusha
add
mov
dec
xor
add
mov
jns
jae
incb
pop
incb
jns
pop
add
add
push
add
inc
add
sbb
lock
add
add
stos
add
add
pop
incb
mov
mov
add
stos
inc
and
add
add
shrl
add
add
add
add
add
nop
pop
incb
xor
xor
add
and
add
add
add
dec
add
add
incb
rorb
jae
sti
add
incl
stos
adc
add
in
das
shlb
data16
shll
add
in
add
and
add
test
jp
and
add
popf
in
incb
arpl
mov
fcoms
cmp
cmp
ljmp
mov
add
incb
push
incb
dec
add
sti
and
add
incb
mov
add
xchg
mov
add
push
xchg
xchg
loop
mov
inc
add
pop
sbb
decl
add
jmp
in
incb
push
add
imul
xorl
shl
sarl
incl
jnp
and
jns
pop
add
cld
cmp
jo
or
incb
data16
sub
and
add
sub
ror
lret
test
add
xchg
dec
push
push
pusha
add
add
add
cmc
stos
enter
jne
add
add
incb
dec
add
add
cli
test
incl
mov
mov
dec
cmp
incb
sub
loop
add
adc
add
sub
mov
nop
sbb
dec
add
add
or
xchg
jmp
enter
sbb
cmp
add
add
incb
mov
add
mov
test
sbb
push
imul
or
pop
incl
int
incb
add
into
shl
movsb
insl
aas
jge
dec
je
out
loopne
incb
shlb
adc
incb
adc
add
push
xchg
add
add
incb
xor
add
xchg
push
xchg
sbb
imul
dec
add
push
add
cmp
loopne
pop
add
push
add
add
add
xlat
adcl
add
add
add
jns
push
add
add
adc
add
add
incb
jno
adcb
sbb
add
arpl
add
incb
pusha
add
add
pop
add
xchg
cmpb
lds
add
add
pmulhuw
xor
add
mov
xchg
repz
incb
sub
or
inc
pop
add
int
cmp
pop
mov
pushf
cld
out
incb
adc
add
add
sbb
das
cli
pushf
dec
test
xor
add
xor
add
incb
movsl
mov
incl
in
push
incb
cmpsb
fs
push
incb
cmp
fcom
mov
xchg
cmp
add
movsl
jns
shl
jge
pop
incb
adc
add
incb
dec
addl
dec
popf
and
incb
scas
jecxz
add
sbb
lret
stos
and
add
jns
and
add
incb
xor
add
add
add
add
mov
push
add
add
dec
add
push
adc
add
incb
pushf
mov
outsb
add
cmpsb
in
insl
rcrl
cltd
movsl
push
jns
inc
add
sub
inc
add
incl
test
dec
add
nop
mov
daa
incb
mov
incb
mov
outsb
add
and
add
incb
and
add
incl
idivl
push
add
incb
xchg
incb
mov
cmp
add
incl
xchg
push
add
pop
xchg
and
add
mov
lcall
in
aam
arpl
add
incl
pusha
add
incl
cmp
sub
std
pop
add
pop
rorl
jo
fwait
in
push
incb
orl
xchg
pop
xor
add
imul
add
popa
out
adc
add
mov
add
mov
das
rorl
add
incb
jno
add
ljmp
pushf
jp
and
add
add
cmp
ret
movsl
mov
cwtl
jb
mov
test
repnz
inc
ret
add
push
std
adc
xchg
xchg
roll
add
rorl
rcrb
cmp
pop
xor
incb
add
add
jne
jg
incb
outsb
add
add
push
incb
push
add
rcr
enter
add
and
add
incb
mov
incl
mov
xor
add
add
incb
xor
add
add
addr16
ret
addl
outsb
add
cmp
data16
bound
jb
sub
pop
incb
add
add
hlt
push
add
out
add
ljmp
sbb
cld
fildl
stos
scas
loop
xor
add
out
incb
aaa
incb
cmp
cmp
pop
add
add
push
add
adc
insb
add
std
mov
dec
das
mov
cmp
mov
and
add
push
add
add
movsb
mov
add
int
fxch
add
add
sub
sub
lods
mov
int3
push
add
dec
add
pusha
add
jne
and
mov
arpl
dec
pop
add
push
aaa
incb
mov
imul
incb
sahf
incb
inc
add
sbb
mov
out
mov
mov
cmpb
loop
sahf
movsb
mov
jno
mov
shr
add
cli
ret
mov
incb
dec
add
incb
dec
add
mov
repz
daa
incl
push
loopne
sahf
in
add
pop
add
movsb
jg
incb
ud0
add
mov
cmp
add
add
mov
xor
add
mov
incb
test
jmp
add
add
add
test
incb
movsl
dec
add
sub
xchg
aaa
incb
incb
xchg
sbb
dec
add
xor
add
add
sahf
jae
push
add
rcll
add
psrlq
dec
add
or
add
scas
mov
add
jle
add
add
cmp
adc
add
ret
incb
outsl
imulb
add
add
je
mov
and
add
movb
add
incb
enter
fstl
in
iret
enter
add
add
add
cmp
xor
add
add
or
js
pusha
add
and
add
incl
mov
incb
pop
add
lahf
int3
add
notl
xchg
rolb
add
mov
add
incb
dec
mov
add
std
push
cmpsb
or
cmpsb
data16
jle
nop
sbb
adc
add
add
sub
pop
add
or
rcl
icebp
arpl
add
add
xor
add
cmpsl
mov
add
pushf
movsl
outsl
mov
inc
movsl
insl
mov
sub
sti
inc
add
ljmp
adc
add
add
dec
leave
push
add
incb
test
cs
fwait
jecxz
mov
mov
daa
incb
cmp
push
add
add
mov
incl
push
lds
adc
add
pop
incl
andb
add
push
into
and
add
lods
jbe
xchg
lods
insl
adc
add
incb
cmp
repz
push
add
incb
xlat
push
add
xchg
shl
in
add
inc
fstpt
add
and
add
incb
incb
fucom
add
or
inc
add
add
or
incb
adc
cmpsb
xchg
les
ja
push
cmp
pop
add
fdivl
and
add
add
dec
add
add
repnz
add
add
subb
je
rorl
enter
add
mov
add
xor
add
incl
cmp
int
add
inc
mov
dec
mov
jae
inc
nop
or
push
popa
int3
cmp
add
out
sub
and
add
cmovne
mov
adc
add
stc
mov
mov
das
mov
mov
push
pop
cmp
aad
sub
or
std
scas
or
incb
shlb
add
add
sbb
mov
add
add
sarb
adcb
cmp
adc
add
sbb
mov
call
mov
add
xchg
or
cmp
out
push
push
pop
mov
add
xchg
inc
add
add
pop
add
incb
sbb
lods
mov
mov
sub
mov
add
cmp
add
aaa
incb
mov
jge
jmp
pop
add
pop
add
add
incb
imul
js
out
inc
add
mov
incb
push
add
jp
inc
add
pop
test
rolb
aad
pop
lds
inc
add
incl
pop
incb
test
pop
in
push
add
add
incb
dec
add
adcl
jp
inc
sbb
pop
xchg
dec
add
addr16
add
xor
add
incb
inc
add
mov
incb
jle
xor
add
jnp
push
add
test
and
add
and
add
sub
cwtl
in
lret
lahf
dec
out
sub
iret
mov
pop
incl
adc
add
add
add
add
int3
add
add
incl
adc
add
add
add
nop
notl
shl
sbb
incl
sub
sbb
ret
mov
mov
loopne
daa
incb
push
incl
jge
push
add
xchg
lock
xchg
add
add
loope
dec
add
out
cmp
icebp
and
add
in
movsb
cli
repz
add
imul
lret
add
in
jmp
add
add
aaa
incl
jle
enter
lret
add
xor
add
or
incl
cld
sub
add
aas
stos
sbb
insl
mov
sbb
loope
add
add
incb
cld
into
mov
add
incb
sub
sub
incb
mov
mov
push
add
add
add
incl
insl
incb
or
pop
add
mov
add
add
mov
pusha
add
add
incb
push
mov
add
push
imul
scas
popf
lea
add
aam
stos
call
add
incb
popa
push
add
out
push
in
or
into
mov
movsb
lods
das
sub
cwtl
push
add
incb
and
add
jp
add
iret
hlt
adc
add
cmp
mov
or
mov
incl
jecxz
incb
inc
and
add
dec
xchg
daa
incb
jo
adc
add
incl
popa
popa
into
pushf
fistl
sub
pop
rclb
imul
and
add
add
incl
jbe
inc
add
add
cmpsb
adc
add
sahf
cmpsb
setp
incb
mov
jge
cltd
xor
add
outsl
and
add
add
add
jmp
cld
fldcw
mov
or
test
mov
add
add
insb
add
incl
xor
add
cltd
in
rcl
jge
push
add
xor
add
add
incb
lds
out
pop
add
pop
dec
add
incl
adc
add
popa
loope
fsubrl
mov
psubb
adcb
aad
incb
ja
xor
add
in
das
sbb
imul
fdivs
push
add
add
add
incb
sarb
fidivrs
orl
add
rol
enter
adc
add
add
add
incb
in
adc
add
pop
dec
clc
xor
add
incb
adc
repz
add
add
lods
mov
leave
push
add
incl
cmp
inc
add
dec
mov
xchg
mov
fs
adc
add
out
mov
sbb
rorb
mov
sbb
shlb
add
cmpsb
test
sub
mov
cmp
cmp
mov
add
add
incl
popf
incb
jns
inc
add
enter
add
or
incl
and
add
cmp
add
add
add
mov
orl
add
xor
add
in
mov
fimull
sbb
imul
adc
add
pop
add
lret
xor
add
add
icebp
hlt
xchg
pushf
cld
sub
push
add
add
js
mov
or
test
add
mov
and
add
add
sbb
mov
insl
in
mov
cmp
dec
mov
add
leave
shl
mov
add
test
std
mov
mov
mov
and
add
add
incl
push
cmp
xchg
sbbl
add
incb
cmpsl
pop
xchg
cmpsb
mov
arpl
add
fisubrl
jb
popa
inc
add
sub
cmp
loopne
mov
test
and
add
push
mov
lds
incb
pusha
add
jg
xchg
rep
ror
sbb
imul
push
incb
jb
fs
push
incb
or
inc
pushl
in
incl
mov
incb
aam
jp
fmuls
cmpsl
mov
incb
inc
inc
add
js
sti
xor
add
in
leave
pop
mov
pushf
aaa
incl
imulb
pop
incb
cld
divb
add
mov
pop
add
push
add
add
stc
mov
aaa
incb
dec
add
xor
add
mov
add
jno
dec
mov
sub
mov
inc
insb
add
pop
add
loopne
incb
and
add
adc
pop
add
cmpsl
inc
add
jb
pop
mov
dec
inc
add
das
sbb
add
jns
scas
lret
push
incb
push
inc
add
sbb
and
add
pushf
insb
add
cmpsl
mov
pop
add
add
or
int3
fdiv
sbb
movsl
fcmovb
push
in
incb
or
jae
fists
add
mov
in
mov
xlat
fidivl
incl
xchg
fdivrs
add
dec
lret
xlat
leave
fwait
sub
jmp
add
incb
pop
inc
test
pop
in
add
sahf
test
ja
fstl
add
adcb
add
mov
push
add
add
or
incb
and
add
daa
incb
lret
sub
rolb
sbb
pusha
add
incb
roll
mov
xor
add
incb
mov
les
add
add
cmpb
incb
xchg
lret
add
add
incb
mov
xchg
push
add
incl
xor
jp
pop
incb
cmpsl
and
add
fcomps
sbb
sbb
add
xor
add
add
incb
jp
push
add
incb
insb
add
ret
add
mov
incl
jbe
jl
and
add
incl
loop
js
rcrb
mov
sbb
addr16
push
mov
pusha
add
fimull
pop
ret
pushf
sahf
mov
incb
xor
incb
or
imul
add
add
orb
mov
aam
push
lret
loope
in
add
ljmp
add
inc
add
xor
add
mov
incb
pop
push
add
push
add
push
lods
aaa
incb
mov
fmuls
loop
mov
add
add
add
add
popa
out
lret
je
movsb
int
cwtl
sub
data16
push
add
incb
push
mov
add
cltd
mov
jb
ja
xchg
divb
push
test
or
sbb
add
jo
cmp
call
out
insl
das
test
add
or
iret
hlt
orl
dec
cmp
add
incb
xchg
incb
stos
adc
add
xchg
incb
shr
loopne
cld
add
add
incb
pop
incb
popf
cmp
lcall
mov
mov
mov
push
and
add
jbe
hlt
ficomps
sahf
jne
das
pop
incb
mov
add
add
shrb
incb
xchg
inc
add
dec
cmpsb
popa
gs
lret
or
add
incb
fwait
shrb
paddusb
dec
add
sbbl
fnstsw
outsb
add
add
dec
add
xchg
mov
mov
add
sbb
jge
sbb
incb
pop
add
lods
and
add
inc
add
push
sbb
or
add
sbb
push
add
incb
inc
test
add
jmp
add
repnz
add
add
add
incb
frstor
incb
gs
cmp
add
add
mov
cld
sti
nop
mov
lret
add
cmpsl
cltd
mov
add
mov
xchg
push
incb
jge
incb
in
lds
mov
loope
mov
jecxz
incb
adc
add
mov
and
add
add
jns
dec
pop
aam
push
add
push
incb
mov
jge
cld
mov
incb
xchg
out
nop
loope
or
cmp
lods
cli
push
incb
jo
push
adc
incb
cmc
pop
add
lcall
and
add
idivl
ret
xlat
in
add
add
add
in
lea
or
jnp
adc
add
add
add
push
add
call
clc
lcall
xchg
mov
incb
jo
imul
pusha
add
lret
mov
inc
add
add
cmp
cmp
pop
incb
xchg
loope
scas
adc
add
icebp
add
incl
mov
xor
add
sub
mov
incb
scas
loope
ret
pop
add
incb
or
sbb
pop
popf
ja
incb
js
jmp
add
iret
xor
add
movl
incb
inc
add
add
repnz
add
add
jns
inc
add
jl
cmp
lods
adc
add
incl
aam
incl
sbb
pop
incb
jl
cmp
test
mov
shr
emms
dec
dec
andl
add
lds
incb
pop
add
sbb
pop
add
jae
stc
fiaddl
incb
or
test
bnd
or
jns
imul
add
add
cwtl
cmpsb
fs
test
cmpsl
or
xor
add
push
add
add
incb
incb
das
jle
and
add
add
add
and
add
push
add
lods
dec
add
add
into
push
incl
popa
sti
lret
call
add
in
add
add
add
xchg
pop
add
mov
cmc
daa
incb
adc
arpl
mov
incb
lcall
xor
add
mov
add
test
xchg
loop
incb
insl
mov
and
andl
imul
or
test
jl
sahf
lcall
add
dec
lock
pop
incl
push
cmpsb
mov
xor
add
bnd
inc
xlat
pop
in
sbb
sbb
fisubs
movsb
mov
int3
cmp
mov
lods
sub
dec
jge
dec
add
repnz
mov
xor
add
jmp
adc
pop
mov
je
inc
mov
jmp
out
stos
lcall
add
mov
add
pop
incb
inc
add
fstps
mov
add
imull
add
aam
rolb
push
add
add
inc
and
add
xchg
xor
add
add
rclb
mov
scas
cmp
incb
push
jns
add
xor
add
mov
incb
add
gs
inc
add
notb
incb
fisttpll
scas
daa
incb
mov
inc
add
mov
pop
add
add
cwtl
clc
adc
add
sub
shrl
jle
incl
and
add
pop
ret
shlb
incb
push
add
sbb
cmp
add
lahf
stos
daa
incb
stos
sbb
call
leave
jnp
jge
incb
xor
add
cmp
mov
or
test
push
sbb
je
out
xchg
mov
add
add
repnz
add
dec
add
add
add
xchg
xorl
add
fnstenv
push
add
and
incl
leave
in
push
incb
cli
add
add
incl
and
add
ds
mov
scas
call
mov
add
mov
out
incb
icebp
xorb
mov
loopne
incb
in
icebp
jbe
mov
incb
jae
add
incb
orl
jmp
lods
jb
lods
push
mov
jae
add
jns
add
add
pop
push
add
sub
outsb
add
incb
out
inc
out
cwtl
fbld
incb
push
jnp
add
mov
adcl
add
sub
in
aad
mov
add
lods
fsubrl
sub
sbb
sub
popf
lods
xchg
mov
add
add
incb
stos
xor
add
incb
jl
dec
pop
add
add
push
add
xor
add
incb
pop
mov
incb
adc
test
into
mov
or
add
incb
push
add
dec
add
inc
dec
cmp
test
rolb
push
mov
add
add
adc
add
adc
add
jg
add
add
pusha
add
incb
mov
in
mov
incb
icebp
cmp
adc
add
mov
mov
add
jle
call
rcl
add
sbb
mov
in
lret
sub
and
add
ret
incb
cwtl
fnstenv
incb
jnp
les
xor
add
popa
sub
add
mov
incb
xchg
int
add
lahf
dec
add
loope
mov
push
add
incb
aad
testb
lods
pop
push
bound
scas
dec
adc
add
bound
fidivs
inc
ds
and
add
pop
add
cmpsb
pushf
in
xlat
mov
xchg
loopne
ror
je
daa
incl
add
add
add
add
add
add
jecxz
incb
outsb
add
add
mov
scas
testb
add
aaa
incb
lods
mov
outsl
or
inc
in
sbbl
gs
add
push
jne
add
sti
add
add
add
pop
xor
add
and
inc
in
ficomps
repz
aaa
incb
gs
add
les
out
xor
add
add
test
push
gs
inc
hlt
ficoms
incl
out
out
add
incb
dec
add
push
add
sub
sbb
sahf
dec
cmp
pop
incl
push
add
inc
ret
sbb
call
in
out
inc
cli
pop
add
add
in
add
gs
add
add
add
popa
cmp
shlb
push
add
in
adc
add
adc
add
cmpl
out
divb
incb
sti
enter
test
push
add
nop
fwait
aam
sub
sbb
pop
incb
add
add
cmp
cs
scas
out
and
add
add
add
incl
out
inc
test
cmp
add
push
or
cltd
or
pop
add
mov
fisubrs
jle
bound
jp
sbb
incb
add
add
shl
sub
incb
dec
add
incb
pop
incb
sti
in
incb
pop
add
jb
inc
sub
mov
cld
fistpll
sub
jge
add
jle
jp
push
add
incb
sarb
add
mov
mov
cmpsb
dec
add
add
bound
mov
adc
add
mov
incb
stos
mov
out
incl
icebp
add
incb
pushf
mov
adc
sub
divl
bnd
add
lret
incl
push
pop
add
incb
pop
add
cmpsl
xchg
cmp
cli
hlt
or
incl
xor
add
incb
pop
add
adc
jmp
sti
test
jmp
add
incb
jns
add
push
add
incb
and
add
add
incl
daa
incb
jecxz
add
add
scas
in
sub
mov
add
add
incl
pop
add
imul
inc
add
popa
bound
insl
test
cmc
scas
incb
add
or
lahf
jbe
sub
bswap
cmp
push
pop
and
add
xchg
jnp
incb
out
mov
and
add
bound
lea
stc
mov
incb
mov
mov
fmull
insb
add
xchg
and
add
jg
jle
adc
add
les
xchg
test
jmp
pop
add
iret
aad
in
and
add
add
sbb
aaa
incb
mov
js
cwtl
push
add
incb
sbb
and
add
lds
add
fidivrs
add
dec
adc
add
lods
lret
jmp
add
add
lds
loopne
cmc
jb
repnz
incl
fdiv
lods
hlt
sub
cmpsl
fisttpll
add
add
add
pushf
mov
cmp
adc
add
and
add
cmc
fimull
add
pop
incb
push
add
add
iret
lods
incb
sub
das
sub
and
add
incb
mov
shrl
inc
add
adc
add
pop
stc
test
add
adc
add
adc
add
add
inc
add
incb
cmp
std
scas
lods
and
add
fwait
sub
push
mov
test
pause
jmp
add
inc
sub
or
cltd
cmpsl
rorb
data16
lock
jns
add
sub
sbb
mov
add
add
add
xlat
xchg
mov
out
mov
test
sub
arpl
push
add
cmpsb
mov
incl
inc
add
in
mov
jle
mov
aad
add
xchg
add
in
and
add
negl
xchg
out
sub
push
add
add
push
loopne
iret
repz
xor
incb
xchg
jbe
inc
add
incl
push
add
sub
incb
or
push
add
incb
jo
mov
std
xchg
sbb
xor
add
incb
mov
add
in
incb
push
add
inc
add
inc
add
and
add
dec
out
incl
movl
ffree
sbb
xor
add
add
mov
add
adc
add
add
fistl
incl
push
incb
insl
or
incb
and
add
push
pop
ds
mov
add
or
xchg
sub
flds
or
sub
nop
imul
add
mov
sub
add
xchg
adc
add
test
adc
add
mov
pop
adcl
pop
add
add
mov
test
add
insb
add
fdivr
shl
mov
incl
or
mov
pop
das
mov
cli
outsl
cwtl
jno
add
add
incb
stos
pop
add
leave
pop
add
pop
add
movsl
rorl
add
adc
add
add
mov
popl
incb
shlb
incb
les
incb
sti
xchg
cmp
movsb
leave
push
add
add
add
fs
jmp
cmpsb
pushf
mov
incb
push
add
jmp
movsb
mov
add
incb
ja
add
push
add
push
add
incb
loope
add
add
push
add
lds
incb
xor
add
xor
incl
xor
add
bnd
add
idivb
add
add
push
cld
rcl
mov
xor
add
add
add
leave
popa
loope
jl
sahf
fs
stos
stc
jns
xchg
std
or
lock
add
incb
jmp
inc
add
push
add
push
incb
inc
cmp
push
incb
decl
add
incb
jge
add
xor
add
inc
xchg
out
sbb
push
incb
lar
add
jns
push
add
sahf
add
add
push
add
pop
incb
sub
incb
pop
xchg
sbb
pop
incb
hlt
and
add
push
add
incb
adc
mov
add
mov
mov
add
jle
lret
lock
add
incb
mov
add
mov
mov
or
and
add
mov
lcall
xor
add
shll
add
incb
cmp
movsb
scas
pop
add
incb
jmp
add
test
imul
lcall
arpl
add
cli
mov
pop
add
incb
lcall
fwait
xchg
repnz
dec
add
test
jle
pop
incb
cmp
cmp
lock
std
mov
incb
jmp
mov
cmp
rorb
adc
sti
cld
sub
gs
xlat
and
add
add
add
add
xchg
add
add
stos
dec
add
incb
aas
je
or
mov
xor
add
add
add
mov
adc
add
rcll
dec
add
incb
mov
ljmp
fsts
add
or
ret
adc
add
xor
add
mov
dec
imulb
add
sti
fdivl
ljmp
adc
add
incb
adc
add
stos
mov
sub
add
scas
in
xorb
add
cmp
fildll
mov
inc
add
add
dec
into
jecxz
pusha
add
ret
add
add
movsb
in
inc
mov
incb
xor
add
sahf
out
add
add
shlb
inc
push
test
imul
cs
jae
add
adc
add
mov
incb
jno
add
add
add
data16
or
push
incb
mov
incl
mov
xchg
jmp
out
mov
push
add
out
sub
jp
mov
and
add
incb
fcomip
cwtl
test
insl
cmp
xchg
sbb
add
incb
lods
aam
ficoml
incl
je
loopne
mov
cmp
and
add
and
add
incl
add
add
negb
incl
sub
add
add
ret
incl
loopne
in
fmul
nop
loope
incb
jmp
shlb
add
int
bound
jp
fcompl
out
adc
add
add
add
adc
add
incb
and
add
mov
xchg
sbb
outsl
or
jno
push
shrb
and
add
sub
inc
add
out
jae
add
imul
incl
ret
jmp
les
std
xor
mov
jno
dec
popa
or
inc
xchg
push
in
inc
or
dec
out
incb
mov
add
add
out
cmc
xchg
jae
out
mov
inc
add
test
add
mov
mov
test
jle
sub
jne
push
sahf
int3
jo
fmull
push
add
incb
bound
movsl
mov
pop
add
test
add
sub
sbb
incl
lret
mov
mov
cmp
and
add
sbb
add
inc
add
incb
aas
jge
incb
sub
incb
in
inc
hlt
dec
ja
or
incb
fcoml
push
or
std
lret
dec
add
incb
pop
inc
add
add
add
add
add
sti
popa
push
incb
inc
add
pop
push
add
add
adc
add
xlat
mov
add
add
fists
incb
inc
add
sbb
add
adc
add
adc
add
sbb
add
in
mov
xor
add
sbb
repz
add
mov
fiadds
add
add
lods
dec
pop
incb
gs
gs
add
lock
inc
and
add
mov
add
add
cmc
fwait
pop
xor
add
add
insb
add
dec
pop
arpl
pop
cltd
jno
mov
add
mov
add
sbb
mov
add
xchg
lock
and
add
sub
out
repnz
subl
into
push
add
and
add
out
add
adc
add
add
incl
cmpsb
cmp
push
add
add
cmp
int3
aam
aaa
incb
mov
add
subl
pop
add
ret
add
incb
out
add
mov
dec
adc
add
mov
mov
data16
add
jnp
stos
movsb
mov
cld
mov
inc
add
in
xchg
push
add
rorb
jno
cld
dec
add
adc
incb
push
incb
scas
call
add
dec
add
incb
bound
push
add
incl
add
add
icebp
xlat
sahf
add
add
outsl
add
add
call
imul
call
nop
pop
add
jle
add
add
jl
xchg
add
add
aam
in
shr
inc
add
inc
add
shl
outsb
add
out
xchg
push
add
inc
sub
add
sub
icebp
cli
imul
xchg
push
mov
push
icebp
test
jp
dec
add
pusha
add
incb
jno
mov
jns
pop
sahf
aaa
incb
in
incb
in
add
and
add
sbb
sbb
add
or
in
dec
add
push
adc
add
inc
xchg
data16
incb
fcomps
call
int3
pop
js
mov
xlat
add
mov
lahf
xchg
add
mov
push
add
add
movsl
xchg
loope
jge
into
xlat
push
or
add
sub
mov
add
push
add
and
add
add
and
add
push
add
add
dec
aad
add
add
mov
xor
add
mov
add
mov
ds
bound
sbb
jecxz
adc
add
jle
adc
add
ret
dec
cld
jnp
add
jge
push
add
incb
jnp
sti
xchg
xorb
add
add
add
push
add
push
add
incb
xlat
add
add
incb
sub
add
out
jle
pop
add
or
pop
add
xchg
add
add
lahf
in
inc
jno
add
add
xchg
call
add
sub
add
sub
xor
add
add
add
cld
les
or
mov
incb
pop
add
add
notl
incb
sbb
stos
xor
incb
mov
incb
pop
sub
xlat
sahf
shlb
mov
nop
pop
add
mov
push
xor
mov
incb
test
std
push
add
sbb
add
out
add
or
dec
lahf
jg
xchg
movsb
mov
push
incb
decl
mov
adc
add
incb
sbb
mov
incl
je
imul
fnstcw
add
fldt
jnp
stos
sbb
xchg
fstpt
ja
add
add
add
inc
add
add
incl
jbe
dec
nop
cli
in
lock
pop
incb
xor
add
dec
add
add
incl
fimuls
mov
outsb
add
mov
out
xor
jge
add
incb
pop
add
incl
push
add
test
incb
pop
xchg
mov
in
stc
scas
test
add
adc
add
incl
inc
scas
bound
faddl
incb
enter
pop
incb
inc
jb
std
jnp
lods
imulb
add
add
add
inc
testl
loop
or
aas
mov
repnz
push
add
or
sub
movsl
lea
add
lods
int3
sarb
les
and
add
or
push
add
in
in
mov
mov
fwait
pop
insb
add
add
add
add
sbb
jo
ds
outsl
mov
jae
inc
insl
mov
add
push
mov
arpl
xlat
xchg
add
jbe
mov
mov
adc
add
sahf
and
add
jbe
inc
add
or
stos
jno
add
incb
cmc
mov
add
incb
mov
dec
add
add
stc
dec
xchg
push
add
add
push
add
pop
scas
adc
add
cmp
xchg
pop
incb
lret
pop
cmc
and
mov
add
add
incb
notl
incb
sahf
xchg
add
xor
add
incb
adc
add
sbb
hlt
add
add
daa
incb
sar
nop
mov
insl
out
xchg
cmp
pop
add
push
add
fdivrs
and
add
fnsave
incb
xchg
xchg
ret
mov
out
pop
subl
add
add
cli
jp
dec
add
xor
add
repz
adc
add
jg
lds
dec
int
incb
lret
add
repnz
add
incb
push
lods
cmp
addr16
incb
in
pop
xor
and
add
add
sbb
sub
incb
xchg
inc
add
sbb
incb
pop
xor
push
add
add
push
dec
add
add
push
incb
push
add
loope
mov
mov
mov
add
adc
add
add
add
add
incb
push
je
or
stos
add
xlat
sbb
adc
add
or
or
dec
add
incl
icebp
sub
aad
sub
leave
xchg
jmp
add
pop
mov
add
mov
inc
add
adc
add
jne
add
incb
add
add
incb
add
add
data16
add
mov
add
add
add
mov
mov
fisttpll
adc
add
cmp
in
bound
lcall
int3
repz
add
test
incb
insb
add
jns
incb
int3
imul
add
incb
jae
add
incb
pop
add
popa
sub
clc
sub
lret
mov
lds
add
cmp
mov
inc
movsl
notb
incb
jl
pop
add
mov
shrb
adc
add
pop
cmpsl
jnp
add
push
cmpsb
mov
mov
and
add
add
incl
lcall
incl
xchg
sti
repnz
mov
incb
test
addr16
incb
loope
pop
add
jnp
incb
lahf
stos
xchg
mov
cmp
test
adc
add
mov
jmp
incb
lahf
in
cmp
fcoml
incb
push
jns
incb
sbb
incl
push
sub
pop
fsubrl
cmove
out
cmc
data16
and
repz
leave
jecxz
repnz
add
add
incb
jp
mov
add
out
sbb
incb
mov
inc
add
adc
add
add
incl
pop
mov
and
add
add
add
add
dec
cmp
inc
add
incb
sbb
lret
nop
mov
cwtl
test
mov
add
add
add
jbe
pop
shlb
add
mov
add
popl
mov
rorl
call
leave
andl
add
xchg
sub
sarb
add
pop
add
add
gs
add
add
add
add
pop
incl
fistl
icebp
mov
add
xchg
cmp
incb
sar
add
add
gs
cmp
mov
push
daa
incb
cmpsl
shr
mov
mov
incb
data16
inc
add
mulb
fwait
pop
push
add
subl
and
add
add
add
add
ds
xchg
popa
dec
add
incl
rcl
iret
adc
jge
ficoml
incb
data16
pop
add
adcl
add
incb
imul
popa
imul
lods
mov
adc
add
inc
mov
incb
les
sahf
icebp
clc
std
jmp
jmp
incb
xchg
mov
or
gs
xor
add
dec
add
incb
fisubl
jle
push
or
incb
pop
incb
jbe
add
add
push
add
jmp
mov
sub
incb
mov
loope
xlat
mov
daa
incl
out
mov
add
jae
add
xchg
incb
outsb
add
imul
sbb
add
xor
add
and
add
aaa
incl
addr16
lcall
jae
push
mov
inc
add
lret
pop
add
add
incb
lods
addr16
adc
add
add
dec
das
mov
incb
push
sbb
fcom
inc
movsb
sub
in
dec
add
add
addl
add
add
inc
out
add
adc
add
mov
or
add
incb
mov
push
add
incl
xchg
lea
incb
lcall
mov
push
mov
and
add
incb
test
add
add
incb
pushf
or
xchg
into
aam
dec
add
loopne
addb
mov
add
lods
dec
add
pop
in
sbb
mov
aad
addr16
jp
fsubr
push
incb
or
push
fbld
mov
add
add
mov
add
add
sub
sub
and
add
xchg
and
add
test
rcrb
add
scas
mov
add
xor
add
adc
lea
incb
and
add
incb
pop
mov
incb
push
shrl
or
neg
pop
add
adc
add
xor
add
sub
add
xchg
int
add
incl
adc
add
jne
test
inc
add
fwait
iret
cld
fisubrl
outsl
test
add
cwtl
xchg
stos
adc
add
add
stos
incb
inc
add
mov
add
ficoml
incl
mov
cmp
jp
fstpt
xor
add
add
add
test
push
incb
push
incl
xchg
adc
mov
in
sub
nop
dec
lea
incl
daa
incb
push
add
add
out
add
add
mov
pop
inc
and
add
sbb
aaa
incb
mov
inc
add
add
rcr
push
pop
stos
ret
pop
add
xor
add
inc
add
add
bound
xlat
mov
cmpsl
loopne
add
cmovno
jae
pop
add
cmpsl
movsb
lock
shll
add
ret
or
sti
inc
inc
or
pushf
sahf
and
add
or
or
jg
incb
or
cmp
in
and
add
jae
add
in
jns
add
add
incl
fnsave
mov
add
mov
add
add
loopnew
add
rol
in
cs
mov
js
push
add
lock
sbb
mov
cmp
lock
sub
xor
add
add
sbb
mov
incb
mov
orb
hlt
push
incb
sahf
xlat
shrd
lret
iret
iret
aam
jb
fsubl
mov
add
pop
and
add
imul
iret
bound
pushf
push
add
add
incb
mov
add
gs
incl
dec
add
sub
pop
mov
mov
pop
incb
jp
fsubrl
inc
add
sarb
aas
mov
outsl
lods
dec
incl
pop
add
cwtl
push
add
sbb
incl
incb
mov
add
sahf
xchg
jno
mov
lea
lahf
sbb
loopne
loopne
add
add
sub
daa
incb
les
jb
inc
mov
jb
add
in
xchg
ret
fwait
mov
add
inc
push
add
outsb
add
push
mov
ficoml
incl
or
or
incl
dec
mov
push
add
xor
add
inc
mov
xchg
pusha
add
iret
add
add
fisubl
icebp
adc
add
aaa
incb
sub
ficompl
mov
push
mov
or
repnz
out
incb
call
adc
add
add
cwtl
and
add
fwait
push
add
inc
add
incb
add
add
or
mov
incl
in
out
xchg
cmp
add
mov
rcrb
inc
cwtl
lods
int
xlat
subl
add
cmp
in
mov
and
jae
add
incb
sub
jo
add
mov
mov
fimull
add
incb
dec
add
adc
add
sahf
mov
shrl
nop
lcall
hlt
lea
rdmsr
incb
pop
jge
dec
pushf
or
add
add
or
or
or
sbb
xchg
notl
incb
xor
add
sub
xchg
add
add
incb
in
add
add
push
jmp
pop
add
lock
xor
add
test
add
pop
pop
add
cmovno
sbb
add
out
loopne
xchg
add
pop
fwait
push
inc
sub
mulb
incb
push
incb
popf
data16
jl
mov
add
incb
aad
add
call
mov
imul
or
incb
popa
out
incb
jnp
loope
adc
add
or
and
add
cmp
adc
add
outsb
add
incb
jo
xor
add
mov
fadd
int
mov
scas
dec
mov
xorb
data16
out
aam
mov
push
xchg
dec
jbe
test
sub
jmp
incb
push
add
jp
jecxz
add
add
add
js
xor
add
and
add
cltd
jecxz
pop
andb
add
aad
mov
pop
fwait
xchg
lret
adc
add
andb
add
das
imul
incb
jp
mov
xchg
incb
ds
lret
int
cli
dec
add
or
adc
add
adc
add
fidivrs
add
dec
pop
add
inc
add
mov
add
add
ljmp
or
cmpsb
push
add
incb
adc
add
incb
stc
xchg
fcoml
sbb
dec
add
incl
loop
repz
int
add
fldenv
pop
add
add
cmp
sub
popa
mov
outsl
andl
add
mov
incl
mov
incl
imul
add
out
shll
jg
incb
pop
add
incb
or
mov
stc
mov
jno
dec
cmpl
cmpb
loop
add
add
inc
add
push
add
insb
add
jo
adc
add
push
add
push
xchg
popa
dec
adc
add
dec
add
incb
lcall
add
add
cmp
pop
incb
imul
aam
pop
add
popa
adc
add
incb
or
scas
adc
add
bnd
add
incl
sarl
add
add
add
lea
add
pusha
add
add
pop
cmp
cmp
out
inc
aam
incb
addr16
out
into
lock
incb
sub
xchg
add
lea
mov
add
int
rcrl
je
cmpsb
add
add
aaa
incb
sub
cltd
xor
add
xchg
add
add
mov
incb
xlat
incl
out
incb
xchg
ret
sub
push
incl
xchg
sub
icebp
stos
adc
add
push
add
mov
mov
incl
cld
push
cltd
sbb
ret
incb
push
lcall
incb
add
pushf
outsl
in
push
add
sar
lods
rolb
lods
outsb
add
and
add
add
mov
sbbb
add
pop
add
ljmp
add
mov
add
add
add
add
pop
lods
test
incb
pop
incl
or
jae
cltd
sub
sbb
scas
jmp
pop
add
add
frstor
incb
jns
adc
add
mov
inc
add
rcrb
dec
fistpll
stos
outsl
gs
add
div
rclb
inc
loope
lock
add
add
incb
gs
xlat
in
add
fstpl
mov
pop
add
dec
jo
movsb
xor
movsb
outsb
add
cmp
adc
add
add
adc
add
std
jae
incb
loope
push
ret
pop
incl
test
add
test
add
incb
addl
add
add
add
jmp
incl
inc
jle
and
add
sub
xor
add
pop
add
incb
ljmp
add
in
call
incb
in
inc
mov
ja
dec
add
push
jae
incb
int
scas
jge
les
adc
add
xor
add
add
push
add
in
arpl
gs
mov
and
sub
xchg
data16
add
incb
sbb
push
add
sub
scas
stos
imul
out
add
incb
jg
ja
add
add
mov
fxch
pop
add
imul
add
adc
add
mov
lock
cli
out
xor
add
in
lea
or
fldenv
incl
clc
pop
add
incb
xchg
mov
fsubr
lods
or
jmp
xchg
cmp
jecxz
test
mov
rorb
lret
mov
push
add
incb
pop
incl
xchg
jb
add
add
dec
in
sbb
incb
ret
adc
add
mov
mov
add
add
add
add
std
cmc
lea
test
fabs
cltd
in
sub
or
inc
pop
add
int3
movsl
jae
sub
sbb
mov
jge
jnp
push
jnp
incb
mov
add
mov
add
lret
call
ja
in
fdivrp
ret
or
or
jecxz
mov
pop
shrl
add
incb
pop
insb
add
shll
fmuls
movsb
incb
daa
incb
adc
add
incb
popa
lods
jle
mov
lock
inc
incb
add
add
incb
xor
add
insb
add
add
add
mov
incb
iret
and
add
add
add
je
rcrb
add
sbb
fldcw
mov
incb
push
sti
mov
xor
add
add
pop
add
pop
add
inc
std
pusha
add
jmp
incb
shl
push
xchg
sti
mov
pop
push
jg
ret
and
add
incl
shrl
xor
add
test
cmp
mov
adc
add
add
incl
adc
add
pop
js
lcall
adc
add
push
incb
xchg
mov
xor
add
mov
sti
and
add
scas
dec
aam
xor
add
in
add
lcall
incl
push
add
ljmp
add
jecxz
mov
mov
enter
add
xor
add
sarl
mov
inc
out
mov
in
fisttpll
mov
add
incb
and
add
out
fdivrl
mov
arpl
mov
and
add
xor
add
scas
pop
add
pop
add
imul
hlt
dec
xchg
xchg
ljmp
xchg
sbb
add
incb
lahf
fmuls
xor
add
add
lods
data16
mov
cmpsb
adc
add
jbe
in
inc
add
add
or
mov
inc
add
out
cmp
sub
jmp
int3
ffreep
rcl
cmp
add
repz
add
add
add
loopne
inc
xor
sbb
fldt
add
add
jns
stos
lret
add
stos
pop
jne
incl
mov
incl
pop
add
add
out
pushf
loope
cmp
out
sub
pop
and
add
push
incb
sbbl
mov
adc
add
mov
or
cmpsb
mov
stos
fistl
sbb
call
pushf
cmpb
jg
pusha
add
and
add
adc
adc
add
xor
add
addr16
add
dec
cmp
mov
mov
loope
test
mov
mov
add
xchg
cmc
adc
add
add
aad
dec
add
incb
mov
push
add
add
inc
add
add
pop
incb
mov
add
int
mov
incb
cmp
bound
addl
std
movsb
insb
add
das
paddsb
push
add
sbb
jo
mov
mov
sbb
add
add
stc
and
add
add
pop
lock
add
jmp
push
add
in
mov
incl
in
lret
add
incl
lcall
add
incb
movsl
dec
popf
out
sbb
mov
add
mov
xchg
sub
sbb
mov
add
call
jmp
lahf
in
movsl
mov
jle
or
ror
incb
pop
mov
inc
add
add
les
add
incb
jmp
add
adc
fiadds
incl
sarb
pop
add
adcl
fstpt
add
add
add
add
out
jmp
add
arpl
jns
subb
push
xchg
loop
dec
add
in
add
xor
jle
incb
test
ja
add
add
add
add
sbb
scas
cwtl
and
add
push
push
mov
aad
add
fs
xlat
scas
lods
pop
shl
lea
into
in
incb
xchg
enter
cmpsb
xchg
nop
push
add
add
adc
add
incb
test
jae
adc
add
outsl
adc
add
jb
iret
or
fwait
in
dec
add
push
cmp
pop
add
movsb
les
add
subb
test
mov
add
and
add
jo
pop
inc
add
incl
cmp
jmp
add
incl
mov
xchg
imul
add
and
add
sub
add
mov
incl
stos
xchg
add
add
cld
pop
cwtl
aaa
incb
add
in
leave
dec
add
stc
lock
add
popa
xchg
push
add
mov
out
incl
mov
add
add
add
add
lret
mov
cmp
or
add
mov
dec
add
mov
add
sub
dec
iret
cmp
int
push
incb
jle
dec
add
int3
mov
sbb
mov
loop
dec
add
add
sub
dec
add
sub
aas
pop
jge
add
mov
incb
stc
in
int3
mov
add
add
add
imul
mov
incb
into
les
incb
inc
adcb
add
mov
adc
add
add
popf
push
add
add
cmpsb
mov
and
add
loopne
add
test
outsb
add
incb
jo
fwait
subb
mov
jne
imull
sbb
sbbl
add
mov
mov
sub
incb
add
incb
stc
and
add
push
add
sub
add
outsl
and
cmp
incl
testb
incb
add
add
inc
push
or
incb
out
dec
aaa
incb
gs
push
add
rclb
incl
push
add
mov
push
add
add
incl
outsb
add
add
or
mov
add
or
lods
pop
bound
test
incb
js
push
add
inc
add
pop
enter
add
adc
add
jl
js
mov
cld
jp
pusha
add
add
add
add
add
add
mov
mov
cld
popa
arpl
xchg
int
add
inc
mov
icebp
xor
add
incb
mov
adc
add
inc
call
enter
add
repnz
test
enter
addr16
incl
stos
clc
lea
cmp
xchg
inc
add
cmp
sub
pusha
add
sti
jge
add
add
incb
xlat
push
xor
add
add
cmpsb
insl
fnstenv
add
add
out
and
add
add
lahf
mov
fcmovb
dec
js
call
push
incl
test
add
ljmp
jno
push
push
add
add
cmp
jbe
out
mov
test
loopne
inc
add
fisubs
test
sbb
arpl
hlt
xchg
sbb
pop
incb
rolb
add
imul
incb
mov
incb
push
push
add
movsl
into
shll
incb
push
add
xchg
mov
in
incb
lret
ret
and
add
xchg
add
add
add
adc
add
sbb
pop
insb
add
push
add
insb
add
and
add
add
cwtl
das
ja
stc
xchg
mov
incb
mov
incb
cli
add
add
incb
mov
adc
add
xor
add
sti
int
shr
incb
sub
mov
and
add
or
test
pusha
add
mov
loop
stc
cmpsl
jne
rolb
cmp
add
add
add
pop
mov
incb
out
xchg
mov
ds
sbb
adc
add
addr16
incb
pushf
mov
add
sbb
add
add
add
add
cmc
jle
jbe
inc
add
adc
add
mov
incl
lods
or
xchg
push
add
jne
inc
jmp
bts
incb
mov
add
dec
add
add
ret
pop
jle
add
add
mov
xchg
out
int
add
cmp
jno
add
sub
incb
inc
add
cmpl
sbb
sub
dec
imul
add
test
stc
sahf
adc
add
lcall
test
lret
stc
ret
pop
add
stos
idivl
mov
jle
sub
xor
add
adc
add
jp
sti
sbbl
incl
sub
jmp
pushf
loopne
push
add
add
add
dec
add
add
add
in
scas
lods
fimuls
add
imul
jmp
add
add
stos
mov
mov
add
inc
push
add
aad
incb
jnp
addl
cli
imul
add
sbb
ret
add
lods
pop
add
cmp
push
add
faddl
incb
int
int3
xchg
repnz
add
bound
adc
add
aas
push
aaa
incl
sub
or
cmc
dec
add
add
orl
cmpsb
dec
lret
movl
rcrb
incb
pop
nop
mov
add
add
repnz
mov
mov
incl
out
cmp
mov
dec
push
imul
adcl
cmp
rcrb
add
sbb
clc
mov
add
add
outsb
add
add
shrb
sbb
jbe
int
rorb
in
mov
and
add
push
add
add
ret
add
xor
add
scas
imul
je
stos
adc
add
lret
ja
test
sbb
jp
jecxz
incb
push
add
xchg
daa
incb
fsubrl
imul
or
outsl
pushf
int3
mov
incb
dec
xchg
incb
das
hlt
add
add
call
add
jno
mov
mov
cmp
xlat
push
incb
lds
incb
pop
mov
add
outsl
adc
add
incl
lock
add
mov
jnp
incl
push
fcompl
data16
lret
in
cmp
push
mov
cld
in
fsubr
xor
add
add
lret
das
call
push
rol
adcl
add
add
pop
incl
jnp
test
pop
add
add
incb
in
add
out
in
stos
sub
add
frstor
or
outsb
add
mov
mov
jbe
mov
repnz
mov
sahf
xchg
in
std
cwtl
and
add
or
xlat
incb
repnz
add
incb
add
add
dec
pop
add
incb
cwtl
jne
incb
rorb
aad
iret
iret
dec
add
insl
pusha
add
ret
add
lar
add
incb
jle
push
add
and
add
dec
add
push
add
std
jecxz
mov
nop
jp
dec
leave
mov
xor
add
incl
or
nop
mov
add
add
incl
ret
int3
dec
test
add
xchg
sahf
xadd
incl
popf
cmpsb
fnstcw
aam
incb
je
fadds
xchg
stc
pop
ficoms
incb
out
inc
add
jno
xchg
mov
add
lcall
incb
cmp
mov
incb
mov
add
add
ja
out
sbb
add
rorb
adc
pop
test
add
or
stos
mov
pop
incb
int3
sbb
sar
xchg
shl
inc
fisubl
clc
mov
ror
popa
sub
dec
fildl
push
add
add
orb
je
cs
xor
add
js
mov
add
mov
add
add
xchg
jp
pop
pushf
imul
shrl
fnsave
adc
add
push
add
incb
into
xchg
mov
add
mov
incl
sub
sub
add
xchg
add
incb
or
add
add
add
push
add
add
add
in
adc
add
add
aad
pop
incb
std
rcl
push
outsl
pop
incb
nop
clc
les
sbb
xor
add
add
aam
lds
add
movsb
iret
push
or
and
add
xor
cmp
xor
add
nop
shlb
incb
jnp
push
add
jbe
sub
add
jbe
adc
add
incb
mov
insb
add
add
mov
add
add
add
incb
test
cld
dec
popa
fistpl
nop
js
lock
idivb
push
xchg
jno
add
add
incb
jp
jl
cmp
sbb
xchg
incb
rcr
and
add
scas
lods
shrl
add
stos
add
adc
add
in
mov
incb
xor
add
test
aaa
incb
fwait
pop
incb
push
add
ficomps
xor
adc
add
stc
push
add
lahf
outsl
sbb
adc
add
mov
sbb
add
add
add
xor
add
xlat
xor
add
add
incl
xor
add
cmp
inc
mov
fsubl
bound
daa
incb
lds
add
bound
pop
add
addr16
fistl
add
push
add
xchg
dec
jmp
pusha
add
lret
xor
add
repz
mov
xchg
or
lods
fsubp
push
add
or
mov
incl
push
stos
inc
scas
mov
inc
lods
mov
clc
fcmovnbe
cmc
sub
adc
add
cmp
daa
incl
sub
and
add
incb
cmp
idivl
sarb
add
and
incb
leave
jno
mov
add
out
int3
popa
mov
je
std
xchg
dec
add
push
lahf
test
add
sbb
mov
jg
filds
incb
in
int
test
cmp
stc
push
mov
xor
add
fisttpll
dec
insl
dec
add
xchg
sub
je
mov
cmc
pop
sahf
jne
dec
popa
pusha
add
mov
or
add
add
pusha
add
add
add
mov
adc
add
add
mov
add
aam
sbb
adc
add
ja
in
cli
rorl
jmp
incb
ret
or
pop
lcall
popf
sbb
incb
hlt
daa
incl
jbe
mov
add
incl
imul
add
seta
incb
clc
test
dec
add
aad
mov
add
cld
jnp
je
incb
test
mov
mov
add
incb
sbb
xor
add
xchg
lock
push
add
add
incb
pop
adc
add
add
in
push
add
inc
sarl
mov
incb
shlb
repz
imul
add
add
incl
mov
add
add
js
lea
fldl
cmpsb
pop
mov
js
lods
loope
ja
inc
add
add
jno
enter
lods
adc
add
xchg
xchg
cmp
lret
mov
scas
gs
add
push
add
cmp
pop
incl
adc
add
inc
inc
add
add
mov
push
insl
movsb
cmpsb
mov
inc
sbb
aam
add
add
aaa
incb
movl
sbb
pop
lret
das
fcomip
jae
incl
in
mov
adc
add
into
jnp
push
incb
and
add
incl
lahf
data16
and
add
incb
imul
xor
add
dec
add
cmp
popf
xadd
add
xchg
lahf
or
jmp
incl
pusha
add
jnp
xor
add
das
rcrb
add
ja
add
incl
fdivrp
or
outsl
aaa
incb
aam
incb
ljmp
sbb
xor
add
jp
adc
pushf
xor
add
mov
add
add
test
push
incb
pop
cmp
les
add
mov
loope
incb
mov
push
movsb
fnstenv
incb
cwtl
mov
out
add
incb
jmp
pusha
add
push
incb
bound
out
cmc
pop
test
add
add
cmpsb
jp
fnstcw
cltd
jp
xchg
popa
jmp
and
add
sub
imul
out
adcb
add
and
add
sahf
mov
add
cltd
imul
nop
aas
sahf
push
add
pop
add
mov
lock
add
push
inc
std
cli
jb
lds
andl
add
mov
add
add
sarl
enter
sub
mov
ljmp
or
incb
inc
cmpsb
mov
incl
nop
imul
add
jle
dec
add
outsb
add
add
add
add
out
add
dec
pop
add
and
add
incb
push
add
data16
add
repnz
add
incb
aam
add
arpl
incb
pop
cmp
daa
incb
xlat
test
insb
add
incb
xchg
xchg
xor
add
incb
sub
js
sub
dec
push
add
fisubrs
incb
mov
add
or
fists
add
outsl
inc
shll
test
fildl
sub
aas
into
xlat
incb
inc
add
xor
add
incb
cli
in
fmulp
ja
nop
neg
leave
incb
lret
add
push
and
add
mov
inc
add
incb
lea
pop
incb
xor
add
addr16
add
and
push
add
incb
jo
out
bound
insb
add
adc
add
fwait
cmp
pop
das
lret
icebp
cli
xorb
add
adc
add
add
in
mov
dec
add
push
incb
dec
jle
data16
push
incl
add
add
shrb
add
add
add
loop
ret
out
lods
pop
add
incb
mov
in
push
add
pusha
add
xchg
lea
add
add
faddl
adc
add
add
lock
sbb
incl
and
add
incb
inc
add
mov
add
or
movsb
test
add
mov
pop
popf
mov
cmp
enter
dec
int
test
adcl
incl
insl
lds
aaa
incl
into
pop
or
jp
pop
add
les
add
add
add
test
sbb
mov
xchg
and
add
and
add
clc
nop
add
add
pop
add
add
add
inc
int
add
incb
fsubl
dec
add
add
add
fucomi
pop
add
cmpsl
in
in
inc
add
incb
add
out
nop
mov
idiv
cmpsb
jo
mov
or
adc
add
sbbb
cltd
scas
push
incl
and
add
xchg
push
incb
jg
lcall
mov
add
add
add
cmp
add
cmp
inc
add
sbb
cwtl
cwtl
jno
cmp
cmc
or
cltd
mov
adc
add
incl
icebp
dec
xlat
lahf
or
jae
jecxz
rcl
jne
std
dec
in
scas
loopnew
add
jle
jp
xchg
mov
add
incb
jae
add
push
inc
add
adc
add
inc
leave
jne
or
push
dec
sbb
xor
add
xchg
cmp
jl
shrb
das
or
mov
mov
dec
add
incb
push
add
add
incb
mov
add
adc
add
add
mov
incb
test
jl
and
add
shlb
std
aam
dec
mov
add
add
add
add
incb
jecxz
mov
mov
xchg
ljmp
xor
add
insl
xchg
fistps
enter
popa
inc
add
rcrl
add
fcomip
enter
inc
sbb
or
repnz
incb
xlat
xchg
leave
xor
add
ret
stc
cmp
aaa
incl
sahf
insb
add
stc
mov
cmp
cld
hlt
jl
or
xor
add
push
add
inc
add
lea
push
or
inc
add
mov
incb
inc
add
rcl
push
jno
incl
or
dec
loopne
pusha
add
lea
xchg
add
add
das
scas
sti
into
xor
add
add
add
add
inc
mov
stos
scas
add
jmp
pop
add
dec
push
incb
cli
dec
add
testb
xor
pop
incb
addr16
test
movsl
mov
add
add
fstl
fdivrl
dec
sbb
repnz
add
pop
add
add
mov
sbb
mov
arpl
cmpsl
or
cwtl
in
fmull
sub
aam
add
add
push
test
sub
add
add
mov
add
incb
mov
inc
add
mov
add
inc
in
scas
int
insb
add
incb
in
lock
fnstenv
xchg
pushf
das
ja
incb
pusha
add
inc
add
pop
out
xchg
mov
dec
add
add
add
sub
daa
incb
stos
nop
loope
incb
out
xchg
mov
add
cmp
sub
cmp
aaa
incl
outsb
add
add
add
imul
incb
insb
add
add
insb
add
inc
mov
inc
add
add
pop
jp
push
add
cmpsb
rclb
incb
pop
incl
cmp
outsb
add
add
add
add
fidivs
cmc
jae
add
pop
aaa
incb
cmp
adc
clc
push
jae
stos
cmpsl
add
leave
andl
jo
stc
hlt
and
addb
inc
add
incb
mov
mov
incb
ret
cmp
fdivrp
sbb
xchg
add
loope
cmp
xor
add
push
add
clc
or
and
add
add
dec
add
add
sbb
add
add
pop
jp
stc
nop
fwait
mov
xchg
add
add
pop
push
add
add
sbb
iret
mov
add
inc
add
and
add
cmp
push
add
add
add
add
aaa
incb
inc
add
xor
dec
add
incb
push
add
add
rcrb
insb
add
add
or
leave
rolb
mov
scas
lret
cmp
lret
ret
shll
adc
add
in
incb
add
add
ds
shlb
test
mov
cmpsl
fs
incb
les
or
fnstsw
add
lods
and
add
pop
repnz
hlt
stos
test
bound
and
add
sahf
pop
add
adc
add
sub
jmp
push
shlb
add
add
aad
enter
add
fsubs
add
incl
xor
add
add
and
add
loopne
jae
pop
add
incb
shll
pop
add
push
incb
add
add
movsl
in
or
jns
nop
stos
lock
incb
xchg
add
add
jae
jnp
adc
add
lock
add
das
int
jns
add
incb
jp
aam
scas
sub
jmp
idivl
incb
pushf
les
add
add
mov
inc
scas
mov
mov
add
add
push
add
dec
add
daa
incb
inc
add
scas
fisubs
add
add
xchg
mov
add
inc
add
xor
add
out
fwait
adc
add
or
pusha
add
sub
add
add
or
and
add
add
fwait
lock
movsb
mov
shlb
test
add
lret
xchg
sub
add
and
add
add
dec
add
call
add
add
dec
add
aam
decl
bound
pop
incb
xor
add
mov
add
repnz
aaa
incl
cltd
xor
mov
add
icebp
push
add
push
jle
mov
or
xor
add
or
incl
jnp
xor
add
testb
add
shrb
scas
push
mov
add
and
add
add
dec
fisttpll
add
add
add
popl
incb
data16
in
add
xchg
adc
add
incl
sbb
sahf
push
test
incb
in
cmp
test
mov
scas
outsb
add
xor
xchg
out
incb
pusha
add
add
inc
add
incb
or
sbb
enter
fsubs
incl
mov
incb
pop
or
data16
incl
and
add
add
in
gs
add
imul
pop
add
rclb
incb
add
add
add
aad
incb
xchg
add
add
incb
subl
sub
add
addr16
incb
fsub
adc
add
add
push
leave
add
add
sub
or
incb
gs
pop
jl
shll
pop
add
add
iret
inc
push
incb
cld
lret
incb
fdivs
incb
sub
pop
or
aam
sub
mov
add
add
sub
aaa
incb
xor
add
in
lahf
aam
add
call
add
add
add
incb
xchg
test
cmp
push
incl
adc
add
add
in
add
mov
add
mov
add
incb
or
incl
cwtl
popa
add
ja
int
xchg
adc
add
incb
lods
out
push
add
add
push
incl
lcall
incb
jno
add
inc
call
add
dec
outsl
mov
loopne
cwtl
xchg
mov
cmp
cmp
add
jae
add
cmp
cltd
adc
subl
lods
fisubs
add
icebp
adc
add
incl
cmpsl
in
incb
ficoms
or
cli
dec
add
pop
sub
add
incl
cs
mov
rorl
incl
jge
call
add
push
add
add
push
incb
ret
cli
xor
add
and
add
add
incl
icebp
mov
fcomps
insl
dec
add
dec
add
add
shr
sub
incb
push
inc
add
sub
and
dec
add
les
test
add
add
add
jns
incb
cmpb
stos
scas
sub
out
add
sarb
ja
add
add
or
loop
incb
fadd
int3
cmpl
incb
in
loope
lods
ret
jns
incb
add
add
incb
dec
inc
add
lods
xchg
scas
sti
inc
add
push
sub
add
psubusb
cld
jle
test
push
add
mov
add
add
jecxz
adc
add
add
sub
mov
mov
pop
aas
sbbb
incl
stc
outsb
add
incb
sub
push
in
cltd
mov
incl
sarl
inc
or
pop
add
dec
outsl
xchg
cwtl
push
daa
incb
xchg
sbb
inc
leave
inc
cmpsl
mov
jp
enter
cmovns
loop
lcall
add
add
add
and
add
repz
inc
add
scas
cmp
add
add
add
mov
add
ret
jbe
jne
iret
cmp
outsl
jp
xor
add
out
js
xor
add
incb
pop
dec
sti
out
push
or
adc
add
out
incb
ret
adc
incb
add
bound
mov
popf
xor
add
das
pop
add
movsl
shl
xchg
sub
icebp
or
inc
add
fldcw
lods
mov
repnz
mov
negl
xlat
repnz
incb
sar
pop
add
mov
orb
sarl
add
loopne
xor
xor
add
add
sbb
cmp
pop
add
incb
mov
jmp
sahf
cmp
ja
incb
adc
add
ja
mov
add
add
pop
movsl
je
and
add
jl
xchg
sahf
jle
divb
add
cmc
jg
add
cmp
incb
mulb
xchg
addr16
cmpsl
xor
add
xor
add
add
call
daa
incb
lcall
add
xchg
sbb
pop
jnp
jle
adc
add
mov
or
in
addr16
loopne
loop
incl
testb
jge
incb
iret
lret
xor
add
inc
add
add
add
incb
sub
add
add
add
cli
aam
fwait
push
incb
int
mov
jecxz
add
cwtl
je
fwait
out
add
out
jb
add
adcl
add
aas
adc
incl
sub
out
cltd
inc
mov
scas
hlt
mov
add
or
test
push
add
push
lods
adc
add
lret
pop
incb
test
iret
lahf
jmp
add
add
sti
imul
xor
sbb
dec
pusha
add
xchg
add
add
rorl
mov
lock
lods
mov
icebp
enter
loop
xchg
fs
data16
add
add
jno
push
jmp
add
cli
das
data16
test
andb
add
add
sbb
adc
add
sbb
jmp
incl
loopne
add
and
add
in
insl
outsb
add
incl
xorl
cmp
into
xor
add
xor
je
cmp
rcrl
std
cld
and
add
push
add
mov
sub
add
popf
testb
add
adc
add
add
cmpsl
fnstcw
cmp
jne
add
incb
cwtl
das
stos
mov
adc
add
jno
incl
jns
in
add
stos
cmp
mov
incb
mov
addr16
dec
add
incl
xor
add
incb
fs
add
add
mov
loop
sub
test
xor
add
jl
repnz
test
repz
mov
add
ret
dec
xchg
add
pushf
std
jnp
mov
ret
fs
xor
add
incb
sahf
xchg
fidivs
fists
sub
inc
add
incb
push
add
add
aas
sub
or
push
incb
dec
add
loopne
adc
add
test
ud2
ja
mov
out
ffreep
mov
test
incb
lret
lret
data16
xchg
int3
mov
pop
movsl
nop
daa
incb
ljmp
add
mull
add
add
add
add
lcall
popf
jmp
or
push
add
divb
jne
and
add
incb
cmpsb
test
pop
add
incb
movntq
add
inc
mov
nop
pop
add
int
mov
pop
mov
cli
push
add
push
add
incb
mov
sbb
add
add
or
mov
push
add
fidivl
add
incb
cmp
add
add
icebp
fildll
add
jmp
add
ljmp
push
incb
mov
fcmovnu
fisubl
incb
mov
inc
fcoml
push
add
cld
xor
add
xchg
xchg
jbe
push
add
nop
sahf
add
add
incl
add
clc
cmp
add
incb
dec
pop
jecxz
add
cmp
jo
fildl
add
bound
push
lret
incl
inc
mov
push
add
add
incb
js
stos
mov
incb
jle
jle
add
add
stos
push
cmp
mov
pop
dec
sbb
dec
add
fld
pop
jge
mov
add
jmp
pop
push
push
sahf
inc
xchg
icebp
lock
sub
loopne
add
add
cld
lods
push
jae
test
out
int
add
lods
test
pop
add
int
cmp
jo
fidivrl
add
add
inc
and
add
add
add
incb
add
add
incb
popa
jp
mov
mov
push
add
shrb
cmp
jb
mov
incb
insb
add
xor
add
inc
imul
mov
sbb
or
sti
cmc
push
add
incb
std
fcomps
adc
add
ljmp
gs
add
inc
fxch
out
das
inc
push
leave
sub
push
add
incl
insb
add
frstor
xor
movsl
incb
or
imul
repnz
add
mov
mov
ljmp
mov
lds
xchg
jmp
arpl
incb
je
push
add
icebp
jl
lods
mov
adcl
incb
add
incl
pop
add
xchg
bound
push
add
sub
int
dec
add
cs
gs
in
add
add
incb
cmp
inc
inc
push
sbbl
bound
add
jge
loop
jecxz
inc
loop
incb
mov
add
add
incl
and
add
das
jb
mov
ja
add
or
incb
gs
add
adc
add
or
sbb
sub
push
add
cli
mov
incl
sbb
out
imul
add
add
jl
lods
dec
add
add
cltd
xor
add
pop
mov
add
incl
test
bound
idivb
xchg
or
outsb
add
push
lods
xor
xchg
repnz
add
add
add
add
incl
arpl
sub
loope
pop
stos
int
imul
add
lret
movsl
mov
mov
add
fwait
inc
aas
nop
jns
aam
add
cmp
fildl
incb
cmc
stos
loopne
lds
cmp
popa
add
add
out
bound
in
pop
incb
push
add
ret
nop
xchg
dec
add
dec
add
push
cmp
rcl
rclb
add
mov
add
incb
aam
pushf
add
add
adc
add
pop
jmp
add
incl
add
add
enter
adc
add
mov
incl
mov
jecxz
clc
jmp
add
add
stos
sub
roll
out
loopne
add
mov
into
into
add
popa
jmp
int3
push
pop
mov
add
xor
add
push
add
jmp
cmp
scas
ror
add
push
test
sub
mov
add
incb
push
add
incb
push
incl
rcl
clc
popf
mov
rcrl
out
mov
fldenv
add
or
js
aas
shlb
xchg
stc
fisubrl
add
add
add
aas
into
loopew
add
rorb
lock
xchg
sarb
dec
add
add
incb
cld
incb
clc
stc
adc
add
inc
add
add
incb
enter
data16
dec
add
ret
cmp
dec
add
aad
imul
add
add
push
jmp
jl
daa
incb
inc
fcompl
xorb
incb
pop
incl
outsl
jp
sub
mulb
or
xor
add
add
xor
add
add
add
add
sub
mov
jmp
jle
mov
mov
jbe
test
add
push
add
add
xchg
enter
rolb
in
pop
incl
clc
inc
jg
mov
jmp
aaa
incb
jp
add
mov
dec
arpl
add
pop
xchg
ljmp
clc
inc
add
test
incl
aaa
incl
mov
add
incb
incb
add
add
and
add
incl
mov
add
adc
add
addr16
add
outsl
mov
incb
jmp
add
mulb
incb
stos
sbb
pop
mov
cmp
jb
mov
cmp
dec
pop
stc
imul
xchg
sbb
incb
stc
gs
incb
jge
insb
add
pop
push
add
addr16
in
mov
sub
rolb
add
testb
repz
or
fdivs
incb
push
add
xchg
jbe
jmp
add
incb
adc
add
add
out
dec
add
xor
adc
add
mov
cmpsb
inc
add
pop
incb
movsl
inc
and
add
adc
add
gs
add
fucom
inc
add
add
dec
add
mov
add
popf
fcomps
add
ret
incb
rolb
add
add
add
adc
add
incb
adc
add
ret
stos
dec
add
cmpsb
incb
movsl
xor
add
add
gs
iret
add
add
xchg
add
jno
add
add
aas
aas
call
jno
pop
add
fadds
inc
add
adc
add
pop
xor
add
add
xchg
jne
incb
dec
add
sub
mov
jb
out
add
nop
int3
cmp
pushf
lock
add
imul
or
icebp
and
add
incl
ds
xchg
enter
cmp
fimull
add
cmc
mov
incb
iret
divl
incl
pop
adc
add
mov
scas
movsb
add
add
test
incb
addr16
xor
add
mov
add
add
add
incb
inc
xlat
jno
incb
mov
jns
add
inc
add
add
jge
pop
incb
and
add
xor
rol
jbe
sbb
xor
add
cmp
data16
dec
add
incb
into
pop
lods
sub
add
dec
ret
std
jmp
sbb
inc
add
incb
popa
testl
sti
mov
out
gs
incb
dec
movsb
mov
adc
add
mov
add
icebp
loopne
mov
rcrl
xchg
xchg
out
mov
add
add
mov
pop
je
add
add
add
jnp
lods
or
add
jb
pop
add
mov
jae
bound
push
incb
pop
incb
push
aaa
incl
add
add
incb
lahf
sbb
add
lret
mov
mov
add
push
add
incl
pop
add
adc
add
jne
jnp
add
roll
movsb
imul
add
aaa
incb
test
pop
add
sbb
mov
insb
add
cs
out
xchg
add
sub
push
push
add
or
mov
out
dec
add
xor
add
add
gs
incb
enter
xchg
sbb
add
addr16
incb
push
popf
jp
add
add
or
incb
mov
add
sti
loopne
ret
sbb
incb
data16
add
inc
add
cmp
bound
fst
inc
add
add
add
add
jmp
xor
add
incb
fdivr
pop
lds
out
test
mov
outsb
add
jmp
roll
incb
adc
add
fcom
jecxz
sahf
fs
fwait
sbb
add
add
pop
push
sub
cmc
sar
inc
add
incb
add
add
add
cli
xor
xor
add
lret
adcl
jbe
or
push
add
incb
push
jne
xor
add
aas
xchg
jecxz
sbb
add
xor
in
inc
add
incb
xchg
lea
imul
add
add
fwait
pop
out
aad
add
cmpsb
rcr
inc
add
test
add
add
incb
test
dec
aad
add
xchg
or
add
add
das
xchg
insl
pop
js
mov
add
in
lret
rep
add
mov
xchg
add
add
and
add
jmp
add
jp
fcomps
clc
minps
xor
js
dec
xor
add
incb
lahf
fldt
data16
incl
scas
movsb
adc
add
sbb
add
add
incb
mov
rol
int
mov
add
push
push
xchg
arpl
jno
add
fcoms
or
ds
lock
jne
insl
jae
jle
pop
incb
aad
in
int3
filds
incl
xor
add
and
add
imul
add
jae
push
add
pop
add
incb
jmp
mov
pop
add
push
push
add
push
incb
stc
subl
sahf
inc
add
add
pop
or
ja
in
sbb
and
add
xchg
pop
add
add
xchg
add
add
mov
or
into
shll
incb
sub
mov
add
inc
orb
scas
lahf
stc
in
stos
pop
sbb
cmp
mov
dec
lcall
add
add
inc
add
mov
pop
insl
and
add
incb
cld
shl
sahf
insb
add
in
incl
js
clc
pop
add
roll
test
add
popf
cmc
add
add
lods
inc
arpl
incb
push
add
add
incb
arpl
add
incb
scas
scas
push
pop
add
mov
pop
add
add
imul
pop
mov
dec
add
pop
sbb
fstpt
add
insb
add
add
fidivrl
add
hlt
testl
incb
dec
add
loope
jno
dec
jecxz
pop
mov
jo
out
and
add
fnsave
dec
add
fadds
xchg
iret
mov
rorb
incb
and
add
cmp
and
add
incb
scas
mov
rcrb
add
in
insb
add
incb
pop
sbb
sbb
add
add
sub
push
add
clc
pop
add
lcall
out
mov
enter
dec
add
pop
cmp
movsl
dec
add
and
add
dec
in
pop
add
xchg
push
incb
mov
shrb
add
add
xor
add
popf
adc
add
data16
push
das
mov
pop
fisubrl
add
add
add
mov
sub
fcom
data16
test
incb
jae
add
add
fwait
cmp
push
incb
xchg
lods
add
add
incb
scas
test
add
mov
or
pop
push
push
add
nop
lret
and
add
add
rcrb
daa
incb
xor
add
xchg
out
shlb
insl
jb
xchg
jmp
fiaddl
add
incb
popf
data16
and
incb
cmp
in
call
iret
push
fwait
adc
add
mov
incb
out
jle
lcall
incb
and
add
dec
inc
add
fdivl
jns
dec
sbb
add
cmpsl
jge
cmp
incb
adc
mov
jp
cmp
sbb
add
das
jp
sahf
aas
sub
ja
ljmp
roll
fisubl
add
std
mov
push
pusha
add
add
incb
and
add
add
inc
xlat
lods
cmpsl
stc
inc
stc
incl
push
incb
xchg
fsubl
incb
dec
fisubrl
sbb
out
popf
fildl
fisubrs
mov
rcl
add
incb
je
pop
add
incb
nop
push
push
add
add
mov
add
incb
hlt
jae
adc
add
add
in
sbb
das
inc
add
in
and
add
dec
add
out
les
movsl
and
add
xchg
cltd
fistpl
mov
cmp
fld
frstor
incb
lods
aaa
incb
or
rorb
add
incb
in
int
mov
incb
push
add
out
inc
add
incb
bound
sub
aad
jbe
mov
incb
mov
add
incb
xchg
testb
out
insb
add
add
push
add
adc
add
inc
ljmp
adc
add
sti
sub
movsb
clc
inc
add
sub
sbb
sbb
test
add
scas
pop
add
incb
push
incl
lods
fcompl
add
add
fdivl
incb
repnz
push
incl
lea
mov
add
sbb
icebp
xor
add
aaa
incb
add
add
add
incl
mov
jecxz
xchg
dec
aas
mov
add
mov
dec
pop
add
daa
incl
ret
pusha
add
cli
sarl
add
jno
icebp
sahf
cmc
mov
add
add
and
add
incl
dec
add
aad
add
lret
outsb
add
cltd
sbb
bound
sbb
incb
xchg
jo
jge
int3
je
in
incl
add
adc
add
jne
addps
jae
add
xor
add
add
sub
stc
inc
mov
push
add
inc
adcb
not
add
add
das
out
icebp
mov
data16
outsl
mov
push
incl
mov
mov
push
add
bound
dec
add
push
add
ja
add
incb
test
testb
add
insb
add
mov
add
add
hlt
jmp
add
xor
incb
cs
or
pusha
add
push
add
ret
incb
int
incb
inc
add
add
inc
mov
xor
inc
scas
call
mov
scas
or
out
movsb
push
add
mov
incb
mov
push
add
sbb
cmp
and
push
incl
mov
mov
fildl
push
push
test
incb
fldcw
add
incb
fs
insb
add
incl
ret
scas
repz
jmp
jns
inc
popf
aad
movsb
dec
dec
inc
lock
mov
or
incb
out
add
incl
dec
movl
add
xchg
into
add
sbb
add
add
mov
loope
add
test
pop
adc
add
out
mov
insl
addr16
or
idivb
add
incb
movl
lret
mov
cltd
pop
add
mov
das
mov
int
pushf
das
sub
pop
add
call
xor
add
mov
fstpt
mov
test
incb
popf
into
pop
add
incb
dec
add
inc
negl
add
and
incl
add
add
xor
add
add
add
xchg
dec
scas
sbb
pop
add
add
int3
inc
add
js
data16
nop
ljmp
push
add
add
pop
incb
outsb
add
mov
push
add
incb
pusha
add
xorb
add
cld
xor
add
incb
inc
out
iret
lods
and
add
incl
lods
sub
xor
xor
add
test
add
mov
addr16
xchg
mov
cmpsl
xor
cmp
jae
mov
clc
push
roll
add
add
ja
loopne
add
incb
mov
add
pop
mov
add
and
lcall
enter
cmpsl
dec
mov
incl
add
mov
pop
sub
incb
in
add
add
add
rclb
mov
movsl
inc
add
adc
add
incb
aaa
incb
and
add
incb
loopne
push
out
xchg
mov
adc
add
sbb
incb
enter
adc
incb
sbb
dec
xlat
add
add
add
xchg
hlt
add
outsb
add
add
push
incb
dec
pop
add
inc
inc
add
jae
add
and
add
loope
jnp
sub
mov
add
incl
and
add
incb
fmuls
and
add
out
sub
out
in
mov
incb
xchg
movsb
stc
sub
jge
add
jge
add
incb
pop
sub
lds
sbb
incb
fs
mov
incb
jmp
add
xor
add
and
add
scas
movsl
or
scas
aaa
incb
sbb
sarl
pusha
add
add
inc
repnz
fisubl
add
add
jp
popa
pop
mov
movl
xlat
jp
add
add
add
add
add
incb
loopne
incb
lahf
lret
cmp
lret
inc
les
add
xor
ja
xor
add
dec
popf
xchg
jb
push
pop
add
sub
icebp
iret
aaa
incb
adc
add
stc
mov
jl
cltd
rorl
xchg
mov
adc
add
std
aad
addl
xor
add
scas
cmp
mov
add
sub
daa
incl
push
fwait
add
add
leave
xchg
bound
repnz
lcall
sub
sti
or
adcb
pop
add
test
mov
cmp
lahf
mov
jp
out
or
mov
add
jmp
cmpsl
hlt
jl
scas
pop
cmp
data16
aad
add
add
incl
iret
popa
and
add
incb
mov
in
subl
pop
jnp
mov
add
mov
in
fidivl
cmp
xor
add
faddp
les
add
lods
inc
push
add
lods
mov
stos
and
scas
cmpsl
dec
add
mov
add
incb
cmp
add
lret
push
add
sbb
incb
mov
adc
add
dec
add
sbb
out
adc
add
adc
add
mov
xchg
fadds
incl
or
mov
lods
out
sti
das
jbe
push
add
add
daa
incb
cs
out
jae
add
and
add
add
outsl
sahf
out
add
mov
add
add
incb
data16
in
cmpsb
adc
add
mov
add
pushl
repnz
xorl
jle
add
mov
ja
incb
add
add
xor
add
xlat
dec
add
sub
add
ret
mov
add
add
pop
incl
pop
incb
push
incb
xchg
fistpl
add
data16
sarl
ljmp
add
add
push
xor
add
pop
add
mov
add
add
add
xadd
add
add
lcall
add
incb
into
inc
lret
insl
insb
add
sub
js
inc
add
mov
repz
incb
adc
add
icebp
mov
incb
int3
pop
mov
add
lret
int3
outsl
nop
pushl
incl
sbb
add
or
add
add
incl
jne
je
mov
incl
incb
xchg
test
bound
loopne
incb
cmp
mov
incl
outsl
insb
add
mov
incb
xchg
xor
add
add
add
add
mov
add
rclb
mov
test
je
cwtl
or
incb
push
add
add
incb
scas
or
data16
and
add
cmpb
arpl
incb
scas
push
incb
cmp
mov
add
ret
test
incb
fidivrl
incb
and
rorl
xor
add
jg
inc
xchg
les
incb
and
add
push
xchg
and
add
or
dec
add
mov
add
test
mov
or
in
fwait
jl
shrb
notb
incb
mov
incb
incb
mov
adc
add
pshufb
incl
mov
pop
incl
mov
mov
add
add
sub
rcrl
repnz
add
jp
mov
inc
add
pop
add
add
add
outsb
add
add
incl
jge
add
mov
les
ficoms
incb
jp
in
add
xor
add
add
add
and
add
cmp
loope
xchg
xchg
shrb
dec
ret
pop
add
imul
hlt
scas
fisubl
fdivl
add
incb
hlt
or
mov
std
in
fwait
sbb
cmp
jns
pushf
repz
add
cwtl
add
jge
call
incl
push
add
push
incb
lods
and
add
jno
incl
inc
lock
lock
add
incl
inc
add
add
add
sbb
imul
rcrb
or
ret
add
pop
and
add
add
jno
out
cmpb
add
pop
addr16
add
jnp
incb
inc
frndint
pop
push
shll
das
mov
lods
mov
rclb
incl
push
insl
push
cmp
leave
addr16
add
and
add
sub
and
add
icebp
out
mov
or
jmp
xor
sbb
out
add
add
sbb
add
add
mov
add
incb
sub
jne
lahf
stos
fdivr
cmp
bound
aam
sub
cmp
into
aas
bswap
outsb
add
arpl
arpl
jne
and
add
jge
incb
mov
add
inc
sbbb
add
loopne
cmp
xor
in
mov
pop
add
push
rcrl
call
add
repz
stos
sbb
mov
sahf
and
add
mov
mov
adcl
add
fstps
add
fcoms
incb
mull
incl
fldl2e
popa
add
add
fs
mov
incb
int
xor
add
add
data16
lret
outsb
add
add
and
add
andb
aas
scas
push
add
mov
incb
mov
cmpsb
mov
enter
xor
add
add
add
xchg
cmp
movsl
sbb
rcrb
xchg
repz
add
pop
add
add
sbb
pop
incl
sbb
cmp
dec
add
dec
add
out
aam
cmp
jp
mov
dec
add
add
push
incb
pop
add
xchg
cmpl
jno
aad
dec
cmp
mov
mov
add
out
sbb
pop
ja
dec
add
ds
rclb
push
incl
popa
into
cld
xchg
fcoms
incb
xor
add
jmp
stc
mov
test
movsl
data16
jp
sbb
data16
hlt
fidivrl
push
add
out
incb
pop
incb
loop
bound
je
test
divb
jae
pop
mov
loope
mov
push
add
inc
das
imull
sti
incb
ja
add
mov
in
and
add
add
fsts
incb
mov
jo
pop
add
stc
shll
add
inc
xchg
insl
xor
add
ret
add
mov
das
pop
xchg
andl
add
ret
mov
pop
hlt
or
test
add
pop
fcomp
dec
dec
add
add
add
sbb
iret
ret
pusha
add
addr16
jp
adc
add
xor
add
scas
mov
add
int3
in
lds
incl
jge
pop
ror
jns
add
out
xchg
cmpsl
pop
incb
mov
add
mov
jne
add
adc
add
pusha
add
jo
scas
ficomps
jle
jle
sub
mov
rolb
dec
add
shll
incb
cmpsb
outsb
add
incb
cmpsb
xorl
lods
fbld
add
cld
stc
pop
add
mov
add
data16
or
xchg
sub
add
add
mov
jle
and
add
add
hlt
sub
inc
int3
xor
add
add
lods
and
add
aas
movsb
icebp
cmp
xlat
movsl
aaa
incb
dec
add
incb
incb
enter
arpl
cltd
scas
icebp
cmp
add
add
push
add
mov
incb
stc
lods
aad
incb
inc
or
fildl
add
hlt
icebp
add
push
mov
add
add
add
ret
lret
int3
sbb
imul
in
push
loope
out
jmp
dec
add
fsubs
mov
add
push
incb
push
add
outsb
add
mov
xchg
mov
and
push
xchg
mov
incb
push
mov
add
incb
icebp
aam
adc
add
in
pop
pushf
ret
mov
inc
add
xor
add
add
incb
jno
add
add
out
nop
clc
jmp
fmull
loop
incb
aam
incb
data16
add
and
add
cli
cmp
sub
jb
pop
add
incl
lret
add
add
and
add
push
cmovp
mov
dec
add
dec
add
shll
add
add
incb
mov
add
push
add
das
mov
add
add
add
add
or
repz
aas
add
add
jno
incl
dec
add
les
add
aam
jmp
xchg
ja
add
add
cmp
dec
mov
add
xlat
push
pop
sbb
movb
add
loope
std
adc
add
pop
push
add
hlt
xchg
dec
add
xchg
mov
add
or
pop
add
movsl
call
faddl
incb
xchg
inc
insl
dec
add
add
add
adc
add
sbb
push
stos
or
mov
or
dec
push
icebp
data16
inc
add
imul
add
add
iret
loope
rclb
add
add
mov
add
insl
jnp
add
lcall
rorb
pop
xchg
adc
add
and
add
incb
sti
sbb
inc
loop
incb
sbb
xchg
jae
add
fildl
adc
add
incb
cmp
rorl
add
mov
dec
add
inc
cmp
add
test
jne
incl
xchg
dec
push
add
mov
cmp
or
sbb
add
add
sub
popf
add
add
add
lods
cld
lcall
incb
sub
ret
stc
cmp
scas
add
add
xchg
jge
add
add
cmp
pop
add
inc
mov
add
test
mov
add
sbb
sbb
loope
incb
pop
add
incb
insl
push
add
add
jae
cld
adc
add
add
incb
gs
add
repz
add
add
sub
xor
add
fdivr
std
divl
stos
mov
lock
mov
shrb
mov
mov
xchg
or
cmp
imul
mov
incb
stc
mov
call
out
sub
incb
xchg
divb
mov
adc
add
incb
xchg
and
add
enter
add
cmp
incl
push
incb
jle
iret
icebp
js
movsb
sbb
add
jl
cmpsb
jnp
cmp
push
add
add
jge
lock
mov
add
jo
iret
test
xchg
scas
lahf
xor
add
out
jg
shrl
adc
add
cltd
or
xor
add
incb
push
add
incb
pusha
add
add
ret
push
add
ret
scas
dec
lds
incl
adc
xor
add
mov
mov
jae
rcl
out
incb
mov
add
add
add
and
add
or
mov
xor
sbb
std
cmpsb
inc
add
in
jbe
shlb
mov
incb
add
gs
add
add
imul
shrl
mov
outsb
add
pop
add
icebp
sub
and
add
incb
addr16
incb
fwait
lsl
add
out
pop
rcrl
ror
fiadds
incb
xor
add
add
add
incl
int3
test
lcall
incb
lods
add
add
incb
mov
add
add
push
add
adc
add
incb
or
add
pushf
sbb
cmpsl
inc
xor
add
jo
aad
punpcklwd
adc
add
pusha
add
incb
dec
xor
add
cmp
mov
gs
add
sub
adc
add
jl
out
sub
imull
add
mov
incb
test
add
xlat
stos
fbld
sbbb
add
insl
jl
sub
mov
and
add
add
dec
add
add
mov
add
adc
add
xor
add
add
fadds
xor
add
outsb
add
sub
das
sub
test
jle
rcll
add
sti
add
add
into
lds
add
out
fisttpl
mov
add
incb
mov
pop
and
add
out
add
fisttps
mov
add
add
sbb
cmpsl
xchg
sbb
add
adc
shrl
jne
incb
inc
add
daa
incb
add
add
xchg
mov
incb
test
add
rorl
cmpsl
gs
add
jnp
sub
ftst
aam
arpl
incb
cwtl
inc
add
incb
mov
test
cltd
js
push
incl
popa
mov
add
add
dec
fstpt
incb
jae
incb
dec
inc
add
aaa
incb
mov
repz
mov
sub
pop
incb
in
mov
incb
inc
add
dec
add
or
sar
incb
cmpsl
loopne
jge
incl
and
add
shrl
dec
add
cmc
add
add
jg
add
push
test
jmp
sub
pop
add
fldt
xor
add
mov
mov
add
into
pop
incb
or
gs
xchg
xlat
js
pop
add
cmpsl
mov
ljmp
inc
popf
out
sbb
pop
add
add
out
add
clc
push
add
adc
add
outsl
or
xchg
cmp
loopne
incl
lahf
mov
mov
push
add
add
or
sbb
lret
cmp
add
mov
das
xchg
push
incb
jb
mov
incb
mov
incb
inc
lahf
icebp
or
pushf
stos
mov
incl
cmp
clc
dec
jl
je
xchg
loope
incb
push
jno
adc
add
pop
push
add
incb
add
add
add
movsl
mov
js
mov
daa
incb
pop
incb
xchg
cmp
sbb
outsl
xor
add
and
add
add
fcompl
add
imul
incb
cmc
jl
jb
repnz
add
repnz
std
data16
add
js
incb
xor
add
jno
ret
add
add
incb
dec
add
loope
sub
mov
test
incl
bound
dec
add
movsb
push
add
mov
add
ret
xchg
mov
dec
imul
gs
repz
clc
mov
add
add
add
and
add
mov
hlt
xor
add
test
incb
mov
cmp
add
out
add
or
xor
add
mov
je
sbb
into
add
incl
sub
push
lods
push
add
push
push
add
fdiv
adc
add
in
lret
xorl
incb
mov
inc
lock
xchg
xor
add
rcrl
add
mov
cmp
incl
rcr
inc
add
add
add
add
dec
add
add
dec
add
int
lret
sti
add
add
loope
incb
or
and
add
jb
xor
add
in
push
outsl
jns
add
push
add
bound
inc
cmc
loopne
cmp
popa
mov
incb
jo
icebp
jle
testl
incl
stos
int3
test
mov
icebp
or
pop
add
stos
popa
and
add
dec
add
mov
aam
cmp
push
add
push
shll
mov
add
add
cmpb
mov
add
add
incb
sbb
fnstenv
or
rcrl
adc
add
adcl
add
add
add
xchg
mov
incb
test
and
add
add
scas
mov
add
mov
jl
or
jge
bound
add
pusha
add
or
push
add
je
xchg
mov
out
add
add
jmp
pop
incb
pop
add
enter
lods
fildll
decl
incb
leave
fdivs
jle
test
push
add
add
shrb
add
inc
add
in
add
seta
incl
fdivrs
les
jp
and
add
in
dec
add
pop
mov
cmp
pop
stc
out
sub
add
mov
add
add
in
sbb
sub
jecxz
incb
push
incb
lcall
and
incb
fistpl
jg
add
sub
bound
xchg
inc
xchg
aaa
incl
mov
add
add
enter
pop
adc
add
lahf
add
add
add
adc
add
dec
and
add
add
ja
std
pop
xor
add
imul
jbe
popa
nop
in
sarb
incb
mov
incb
in
sti
dec
add
incb
mov
add
sbb
incl
cmpsb
xchg
shl
icebp
sbb
push
add
push
filds
fwait
pop
add
incb
mov
pusha
add
dec
mov
add
loopne
xchg
repz
pusha
add
test
data16
inc
xchg
jmp
add
add
jbe
xchg
push
incb
cli
hlt
sub
cmp
test
add
add
mov
add
add
inc
add
mov
add
cwtl
pusha
add
std
jnp
cmp
pop
add
xchg
incb
pop
incb
subb
cmp
incl
cli
add
incb
bound
inc
dec
mov
sbb
lahf
sub
mov
mov
aaa
incb
sbb
add
popa
mov
add
sahf
in
dec
add
mov
add
add
add
inc
and
add
mov
incb
in
pop
add
orl
iret
scas
daa
incl
cmpsl
insb
add
incb
popa
xchg
int
mov
incb
jmp
das
mov
jge
add
shrl
add
add
incl
adc
add
add
jg
add
incb
cmc
ret
or
add
lahf
sub
jge
add
or
mov
adc
add
incb
add
add
pop
add
mov
add
inc
add
incl
imul
incb
xor
add
incb
int
cld
stos
movsb
lahf
aas
adc
add
incb
push
add
incb
dec
add
incb
loop
mov
cmp
sti
push
in
and
add
add
xchg
push
add
add
insb
add
into
addr16
add
cmc
jmp
clc
mov
incb
or
lea
incb
mov
add
repnz
in
jp
or
mov
add
mov
jl
add
add
shl
scas
incb
inc
repnz
adc
add
push
and
add
mov
add
clc
bound
lods
xchg
shll
add
jge
and
add
icebp
sub
incl
push
add
jle
sbb
cmc
jae
xchg
sub
jno
mov
mov
add
add
incb
sbb
add
outsl
mov
add
incb
mov
sbb
addr16
add
add
adc
add
leave
aas
ret
repnz
imul
fcom
dec
add
roll
popf
popa
pop
add
inc
jne
incb
aaa
incl
inc
sub
push
and
add
sbb
adcb
incb
xchg
aam
add
incb
xchg
add
sub
ljmp
dec
add
xlat
das
sub
fsubl
incl
repnz
mov
incb
jp
dec
mov
inc
inc
add
sub
jno
sbb
lahf
das
incb
pop
add
movsl
cmc
lret
add
incl
test
jne
shl
test
and
add
int
test
jl
jo
sub
mov
outsl
popf
jecxz
xchg
pop
add
add
add
incl
sub
add
add
or
arpl
incb
or
mov
incb
sahf
mov
mov
pop
cld
push
add
incb
mov
incb
lods
or
add
lahf
or
in
jae
lock
or
mov
incb
insb
add
imul
add
sbbl
rol
adc
add
inc
mov
js
lret
pop
pop
cmp
add
add
jae
mov
cld
mov
std
cmc
mov
xor
add
mov
incb
jo
jo
dec
dec
add
incl
pop
push
pop
and
add
incb
lock
movsl
out
jl
sub
adc
add
repz
sbb
std
test
outsl
mov
incl
loop
push
inc
dec
add
add
add
mov
add
mov
incb
sub
rolb
sub
add
xchg
mov
cpuid
mov
out
add
mov
add
mov
mov
incl
jne
into
lahf
mov
inc
add
cltd
pop
xor
add
mov
je
pusha
add
mov
sbb
or
sarb
in
xchg
jmp
mov
incb
cwtl
ljmp
add
incl
jg
add
add
or
jp
and
add
add
popf
lods
add
add
push
incb
xorl
add
daa
incl
daa
incb
stos
setl
add
rcrb
pop
or
lret
inc
add
sub
pop
add
incl
data16
add
xchg
int3
pop
lea
incl
push
pop
add
ret
lahf
mov
jg
add
add
push
add
incl
dec
push
jne
add
pop
jno
loopne
sub
mov
add
stos
out
icebp
jecxz
dec
pop
add
out
loope
add
incb
push
ret
and
add
incl
nop
or
repnz
mov
test
mov
add
incb
addr16
pop
add
add
cmpsb
cmpsl
cmpsl
jg
fldenv
incb
lods
frstor
add
aad
or
lret
pop
inc
push
incb
or
jb
mov
test
aad
jbe
sti
mov
incb
xchg
mov
sarl
incb
fstpt
les
loop
aad
jg
scas
mov
ja
add
sub
pop
arpl
add
insb
add
mov
std
mov
add
add
add
and
add
mov
push
add
xchg
push
out
out
push
add
mov
mov
inc
pop
add
cltd
push
add
pop
add
mov
test
add
sbb
jmp
pop
xchg
mov
dec
add
pop
insl
xor
add
rcrl
ffree
aad
cmpb
ljmp
minps
add
ret
movl
add
incl
movsl
loope
pop
out
loopne
incb
dec
add
incb
pop
add
pop
incb
mov
push
add
add
incb
sbb
in
movsl
dec
ds
xchg
incb
scas
mov
popl
incb
cs
mov
add
add
cmp
and
add
add
push
cwtl
scas
popa
sbb
xlat
je
movsb
adc
add
aas
add
add
hlt
dec
add
jne
add
fcmove
int3
jmp
incb
movb
lret
add
lret
add
roll
xor
add
add
mov
add
incl
and
add
loope
in
mov
add
add
jl
cmp
fcoms
addr16
mov
xor
add
add
icebp
sahf
je
aas
pop
add
addr16
add
add
fisttpll
push
stos
adc
add
dec
add
loop
loop
mov
incb
mov
add
incl
xor
add
and
xor
add
sbb
les
incl
and
add
insl
imul
pushf
hlt
mov
jb
add
add
jbe
loopne
mov
sbb
lods
imulb
add
inc
add
sbb
pop
out
outsb
add
sti
movsb
mov
add
mov
inc
add
push
add
pop
add
push
add
cmp
adc
add
and
add
incb
pop
add
inc
mov
fldcw
push
inc
add
add
mov
incb
and
fisubrl
add
xor
add
cld
idivb
add
adc
add
ljmp
jmp
mov
or
dec
add
jno
lret
add
fdivp
sbb
loop
mov
incl
jno
add
incb
pusha
add
add
add
inc
add
jle
mov
imul
lods
out
scas
dec
sti
arpl
add
add
xchg
mov
incb
fcmovu
adc
add
popa
mov
incl
mov
and
add
add
pop
incb
outsl
inc
repnz
fdivp
push
incb
mov
push
add
add
add
add
and
add
add
push
je
lock
mov
aas
mov
add
in
xor
add
incb
shlb
xor
add
pop
rcr
pop
add
adc
add
cmpl
les
lea
add
incl
xor
add
aam
add
rcll
incl
jge
cmp
add
pop
jbe
mov
stc
nop
in
add
pop
incl
cmpsl
xchg
pop
jns
incb
lods
cmp
loope
add
mov
ret
push
lock
add
add
sahf
popf
cmp
and
add
sbbb
add
mov
inc
lret
dec
rcrb
add
add
mov
or
iret
adc
add
xchg
mov
stos
sub
int
daa
incb
insb
add
mov
push
add
aad
incl
push
or
aad
xchg
loope
sub
incb
inc
add
xchg
movsb
adc
add
inc
push
add
lret
add
add
fldt
out
xor
add
lods
clc
xor
add
cmc
pushf
xor
add
gs
loopne
or
add
adc
add
xchg
inc
add
mov
xor
mov
jp
mov
incb
sub
mov
loope
dec
sub
push
dec
add
incb
nop
into
lret
aaa
incb
js
mov
in
pop
incb
dec
out
inc
add
dec
cwtl
mov
pop
sub
add
add
add
cmc
mov
mov
decb
sbb
enter
inc
jo
incb
inc
add
incl
pop
mov
add
shr
sbb
daa
incb
pop
add
mov
jecxz
add
xchg
jge
iret
mov
add
push
jb
push
movsl
into
nop
or
sub
loope
outsb
add
pushf
xor
add
pop
add
add
or
cmp
data16
add
add
xchg
xor
jge
add
sub
push
pop
jle
mov
mov
popa
cltd
imul
mov
add
push
inc
add
add
mov
add
pop
add
add
rcll
xor
daa
incb
adc
add
mov
add
add
add
std
pop
incl
pop
add
add
jmp
lret
add
arpl
add
add
in
aad
mov
pop
icebp
das
inc
and
int
xchg
mov
jmp
incl
lret
dec
add
incl
inc
add
pop
incb
mov
add
add
rcr
lds
and
add
cmp
mov
incb
lods
cmp
cmp
rclb
sti
mov
shrl
add
incb
stos
mov
add
add
xor
add
or
add
shl
sbb
or
push
add
jb
mov
add
add
incb
pusha
add
add
add
dec
add
add
addr16
jge
mov
add
imul
add
add
mov
cld
inc
sub
repnz
jge
imul
add
add
or
add
dec
add
incb
push
incl
flds
xchg
dec
add
mov
or
iret
pop
sub
add
dec
shrb
cmc
rcrl
sub
add
add
js
das
sub
sti
push
incb
fwait
lds
pmulhw
adc
add
jb
jp
inc
xor
add
add
xchg
pop
arpl
add
and
add
dec
add
mov
mov
add
cmpl
push
add
out
sub
add
jmp
enter
daa
incb
jl
gs
add
add
out
in
outsb
add
incb
inc
add
adc
add
add
jno
dec
add
xlat
jmp
jle
inc
mov
je
jl
xchg
leave
aaa
incb
xchg
incb
and
add
and
add
clc
xchg
aad
incb
push
in
push
add
movsb
sti
insb
add
in
lret
test
mov
inc
add
cmp
pop
add
add
add
push
and
and
add
jp
dec
sub
add
incb
and
add
cltd
push
add
mov
fisubrl
in
mov
sub
or
jmp
push
add
xchg
ret
mov
mov
incb
lock
sbb
mov
loope
add
jb
adc
add
insb
add
dec
inc
add
popf
pushl
xchg
mov
inc
add
sbb
adc
add
mov
incl
in
mov
add
sub
sahf
sub
jnp
push
mov
add
add
sub
gs
push
add
xor
add
repz
iret
push
fisubs
add
cmp
incl
dec
add
incl
stos
lds
out
adc
add
enter
or
push
add
incl
xlat
lcall
pop
sarl
xor
add
scas
adc
add
les
incb
cmp
and
add
ljmp
add
add
test
add
incl
and
add
popf
dec
ror
xchg
pop
add
pusha
add
incb
int
push
incb
call
insl
incb
dec
add
add
add
pop
add
data16
add
lods
sub
sub
incb
inc
adc
add
int3
fnstcw
inc
jecxz
cmp
mov
aaa
incl
xor
add
rolb
icebp
sbbb
jp
pusha
add
pop
add
fwait
daa
incb
sub
std
push
add
dec
add
lret
outsb
add
add
incl
mov
or
bound
push
add
cmpsl
xlat
cltd
div
xchg
fucomp
hlt
incb
jns
lret
int3
out
cwtl
push
add
add
cmp
mov
rcrl
add
leave
orb
incb
js
bound
pop
cmp
push
mov
leave
adc
add
dec
add
fcomps
add
mov
add
incb
daa
incb
push
incb
pop
jns
outsb
add
mov
movsb
push
add
add
incb
push
scas
in
add
adc
add
bound
cmp
push
add
add
mov
or
xor
add
fwait
aad
sub
cmp
sbb
hlt
push
imulb
mov
aas
pop
stc
subb
lret
incb
repnz
add
js
xor
add
aas
push
adc
add
incb
int
jp
xor
mov
add
clc
add
add
xor
add
incl
dec
sarb
daa
incb
xor
add
add
lret
adc
add
add
incb
subl
incl
push
push
sub
rorl
jne
dec
add
incb
out
imul
incl
inc
cmp
mov
iret
xchg
push
add
in
test
add
add
inc
add
repz
xlat
fimuls
popa
jmp
and
xor
add
add
pop
incb
mov
inc
mov
stos
orb
addr16
scas
mov
add
add
js
cmp
rcr
add
incb
pusha
add
incl
jbe
mov
incl
mov
add
mov
and
sub
mov
jns
cli
cs
inc
jg
add
add
push
xor
add
incb
xor
add
incl
in
mov
das
insb
add
leave
outsl
jbe
pop
incl
ja
jns
add
add
cld
xchg
ret
mov
neg
out
cli
inc
add
incb
into
je
jl
push
insl
into
adc
add
add
add
add
lock
incl
push
add
xchg
mov
mov
incl
jno
incb
push
add
sub
sbb
dec
mov
cltd
add
add
add
mov
loopne
rorb
add
shlb
add
incb
xchg
leave
cltd
jmp
sbb
incb
push
add
repnz
lods
mov
incb
cmp
in
add
daa
incb
jne
inc
inc
inc
add
cld
mov
incb
mov
mov
incb
loopne
inc
add
jnp
cmp
fisttps
lds
incb
push
add
add
mov
fcoms
add
iret
xchg
add
add
ljmp
add
incb
adc
add
push
jo
or
inc
add
add
push
mov
paddb
out
popf
mov
mov
jne
xchg
fmull
add
xchg
add
add
xchg
jg
incl
aas
gs
add
jnp
out
imul
sahf
jbe
push
ficompl
outsl
mov
incb
pusha
add
incb
pop
incb
cmp
movsl
xor
add
dec
add
xchg
add
xchg
call
add
add
cld
lahf
sbb
mov
cmp
add
cmc
add
iret
push
add
incb
incb
inc
add
sbb
lret
cmp
incb
pop
lret
sub
popa
push
add
imul
hlt
and
add
incb
cmpsl
sbb
mov
jae
add
cmpsl
into
xor
loope
add
dec
rcrb
cmp
adc
in
push
add
add
incb
hlt
mov
add
push
incb
mov
push
xchg
dec
add
add
sub
incb
aad
add
incb
xchg
adc
add
cmc
mov
add
add
js
in
push
add
add
incb
pop
call
add
popf
add
jmp
add
fucomp
pop
cltd
out
addl
mov
add
mov
mov
sbb
add
lahf
movsl
pop
add
lock
add
cld
push
dec
mov
test
sub
incb
cmp
test
mov
arpl
dec
testb
add
cmpl
mov
mov
pop
lock
dec
xor
add
add
jl
adc
shll
add
add
incb
js
xor
add
arpl
incb
mov
or
cmpsb
or
adc
add
jle
sub
mov
add
add
add
add
incb
xchg
inc
lea
push
incb
and
add
clc
in
xchg
loope
xchg
outsl
lock
or
add
xor
add
and
add
adc
add
push
jnp
pop
and
add
xor
add
push
add
lods
lcall
xchg
add
add
incl
xchg
jge
inc
add
incb
shr
in
and
add
incb
or
incb
enter
jle
xchg
mov
add
push
add
incl
sbb
add
jmp
push
arpl
incb
insb
add
out
add
incb
addr16
scas
add
dec
add
incb
sbb
orl
add
add
push
incb
push
inc
jmp
leave
mov
xchg
push
jae
outsl
pusha
add
mov
aam
incl
pop
icebp
incl
subb
fiaddl
hlt
adc
add
incb
inc
add
jg
add
add
xchg
mov
inc
add
nop
push
add
incb
jae
out
xor
add
incb
lock
shlb
incb
mov
shrb
add
add
add
pusha
add
jge
mov
add
mov
incb
insb
add
dec
add
cmc
dec
in
incl
cmp
cmp
shr
inc
add
add
add
lods
scas
bound
push
add
push
add
incb
leave
repnz
pop
incb
fistpll
incl
lods
and
add
cmpb
xchg
jmp
push
incb
lock
incb
pop
incl
jp
xor
add
and
add
decl
incb
lret
out
or
xchg
movsb
out
dec
ficoml
mov
incb
clc
xor
add
add
incb
xor
add
inc
add
in
mov
sub
daa
incb
pusha
add
or
ret
adcb
push
add
add
incb
enter
cld
xchg
outsl
dec
add
ror
aas
jb
in
dec
lods
pop
nop
mov
incb
mov
cmp
lock
clc
in
data16
cmp
jbe
shrb
adc
add
add
je
sub
fs
bound
faddl
incb
sub
add
arpl
negl
push
add
arpl
jb
jno
inc
add
or
adc
sbb
cmp
or
rclb
add
imul
mov
mov
push
incl
adc
add
mov
clc
xor
add
out
add
ffree
sub
xor
add
dec
add
incb
push
add
int3
cmp
sbb
cmp
adc
add
or
jnp
add
mov
or
incb
imul
add
and
add
test
mov
lods
mov
or
mov
add
std
sub
adc
add
add
add
add
scas
adc
add
incb
and
push
das
cmp
add
xchg
outsb
add
incb
mov
ljmp
jo
inc
add
or
icebp
and
incb
mov
aaa
incb
sbb
bound
out
sahf
xor
add
and
add
add
loopne
mov
fs
inc
popf
mov
add
add
sarl
mov
incb
pop
xor
add
pinsrw
add
mov
add
add
fmuls
jge
push
into
js
sarb
imul
xchg
push
push
add
cwtl
xchg
test
sbb
stos
clc
push
jl
shrl
sub
repnz
push
add
sbb
add
add
add
add
incb
push
das
lds
incl
add
add
outsl
imul
and
add
add
js
adcl
jl
or
mov
mov
incl
fcom
lcall
insl
pushf
sbb
incb
fninit
ficomps
inc
add
sbb
clc
cmc
loopne
mov
mov
incl
arpl
pop
dec
in
mov
pop
add
and
add
mov
incl
data16
cmpsb
xchg
mov
incl
mov
test
add
and
add
shlb
incl
dec
xlat
and
add
movsl
movsl
daa
incl
fdivr
mov
sbb
fnsave
incb
incb
xchg
mov
dec
cmp
mov
add
cmp
movsl
mov
xor
sbb
mov
add
add
mov
incb
int
adc
add
xor
add
dec
insl
sub
orb
push
add
iret
mov
add
insl
pop
mov
mov
add
add
incb
mov
pop
add
test
add
jp
jne
incb
inc
sub
jno
add
push
incb
push
add
scas
int
jecxz
pop
add
add
movsl
ret
incb
jo
jo
jg
fwait
loope
incl
out
sub
add
pop
add
lea
xchg
into
in
add
incb
and
add
add
xor
add
das
stc
push
sub
push
add
adc
add
add
in
aad
adc
add
je
test
incb
inc
add
sub
lock
pop
cmc
arpl
adc
add
incl
incb
push
incb
mov
add
gs
push
add
incb
push
add
mov
out
incb
dec
jno
add
push
incb
aas
dec
add
incl
setbe
add
mov
cmc
push
fsts
add
xchg
into
imul
incb
xchg
xor
add
xchg
xchg
int3
cli
out
cmp
or
push
mov
jbe
mov
scas
enter
sbb
out
ret
and
add
leave
push
add
mov
pop
incb
testl
in
into
fbld
incb
pop
add
add
or
or
outsl
out
les
incb
addr16
add
add
xor
add
incl
fnsave
add
sub
sbb
stos
push
lods
loope
push
ljmp
inc
add
incb
in
mov
adc
add
jo
ljmp
jle
xchg
pop
incb
sub
cmp
repz
loopne
and
add
add
adc
add
add
push
addr16
cwtl
testb
add
xlat
xor
add
sbb
xchg
push
add
mov
in
add
cmp
jg
add
add
push
add
mov
incb
mov
xchg
xor
add
incl
notl
test
mov
incb
mov
add
fnstenv
incb
mov
mov
sbb
out
inc
cwtl
daa
incb
jmp
add
add
incb
pop
push
xor
add
pushf
or
push
adc
add
jge
pop
add
lahf
movsb
outsb
add
inc
int3
xor
add
jnp
daa
incb
cmpsb
pushf
or
loopne
sbb
arpl
sub
mov
incl
fisttps
xlat
in
pop
incl
out
roll
add
add
add
incb
iret
or
cli
adc
incb
in
lea
pushf
jo
dec
add
pusha
add
incl
mov
pusha
add
mov
xchg
hlt
or
nop
outsb
add
fwait
dec
add
movsl
test
addr16
add
add
mov
add
incb
mov
add
pop
imul
add
mov
add
shlb
mov
sbb
stos
lret
scas
icebp
inc
sbb
incb
add
or
je
je
xor
add
incl
mov
xor
add
add
inc
add
js
mov
stc
xchg
cmpsl
faddl
bound
xlat
inc
mov
jne
mov
mov
incb
lcall
pusha
add
xchg
lods
ds
jmp
lods
pop
imul
or
xchg
loopne
add
add
cmp
daa
incb
rclb
push
incb
pop
incl
dec
add
loope
adc
add
in
fistpl
add
add
add
add
stos
movsl
mov
outsb
add
sbb
cmpsl
dec
add
mov
pop
xchg
and
add
add
add
repnz
add
add
and
add
add
add
add
incb
cmp
aaa
incb
jp
rcll
add
or
incl
mov
xorps
add
incb
lret
add
xchg
or
stc
inc
add
incl
add
add
cmpsb
jmp
popf
push
incl
xor
add
add
bound
jne
outsb
add
add
add
push
shll
and
add
data16
pushf
nop
or
jle
mov
fisttpl
push
jecxz
incb
or
js
pop
xor
add
sbb
add
sub
xchg
bound
lea
shrb
add
cmp
xchg
pop
incb
pop
sbb
xlat
addr16
orl
add
mov
add
mov
lret
negb
xor
stos
pop
mov
add
sbb
aam
pop
add
repz
inc
add
jae
adc
add
cmpsl
fcomps
add
add
add
incb
and
add
and
add
push
das
and
mov
add
incb
xor
add
stc
mov
cmp
lret
add
incl
xchg
cmpsl
bound
rolb
sbb
bnd
sub
and
add
xchg
incl
and
add
or
jbe
mov
jmp
loop
dec
add
jg
add
cmp
push
xchg
loop
in
insl
cmp
xor
add
add
mov
jecxz
incb
push
incb
pop
add
insb
add
arpl
incb
repz
mov
mov
test
data16
int3
daa
incb
mov
or
jge
lds
fisttpl
lea
lock
add
loop
dec
add
out
push
add
incb
popf
out
sbb
lret
xchg
out
stos
loopne
stos
pop
add
add
add
in
cwtl
push
mulb
sub
add
out
std
sbb
incl
mov
incl
push
aad
rcll
add
rcrb
xor
add
adcb
ljmp
add
sbb
sub
mov
add
mov
push
fstps
incb
ret
pop
incb
mov
add
cli
xchg
ret
ficomps
lock
add
add
add
incb
stc
cmpl
movsl
hlt
mov
incb
jle
scas
imul
adc
add
flds
adc
add
sbb
adcl
sub
incb
add
add
fdivrs
jb
ljmp
push
jnp
outsb
add
stc
push
add
outsl
loope
incb
sbb
loope
and
sbb
xor
add
lea
add
inc
jle
iret
sub
add
add
mov
incb
mov
ja
aad
sahf
sahf
inc
add
out
inc
add
add
out
mov
xchg
incl
mov
dec
push
add
mov
mov
out
xor
add
incb
jmp
sarl
push
incb
add
add
imul
add
incl
imul
add
incb
pop
incb
sub
incb
icebp
movsl
add
sahf
xor
add
xchg
xor
add
mov
dec
add
subb
jbe
pop
add
incb
aam
into
mov
das
cmp
pop
bound
sub
mov
add
dec
add
js
dec
xchg
les
push
incb
sahf
int3
rolb
incb
mov
adc
add
imulb
add
incb
adc
add
add
add
mov
push
add
dec
lock
inc
iret
xlat
add
add
nop
lds
add
add
inc
insl
push
fwait
mov
add
xchg
sbb
incb
int
mov
dec
add
or
xor
add
out
pop
fwait
and
add
mov
daa
incb
cmp
std
ficoml
incb
popf
lds
incl
xor
add
incl
push
add
incb
loop
fsubrp
add
push
ljmp
and
add
jbe
aaa
incb
xchg
les
incb
mov
popf
lcall
incb
push
fsub
stos
mov
mov
adc
add
dec
dec
add
push
xor
add
incb
fwait
and
jnp
cmp
add
add
add
aad
arpl
dec
adc
add
incb
jnp
jb
mov
call
add
incb
stc
lods
enter
incb
cs
sbb
cmpl
jge
pop
sti
mov
cmpsb
loop
add
add
lock
or
sti
rcrl
jo
movsl
test
add
or
js
add
adc
add
add
mov
pop
add
add
add
add
add
incl
mov
add
incl
cld
test
add
addr16
add
add
incl
jl
leave
incb
das
add
add
sbb
int
incb
rolb
add
add
pop
incb
and
add
imul
iret
cmc
cwtl
pusha
add
leave
and
push
mov
incb
mov
adc
add
add
push
push
add
mov
add
mov
in
jg
data16
in
add
incb
testl
or
cmpsb
sub
push
add
outsl
data16
stos
inc
addr16
add
sarb
xchg
xchg
pop
incb
mov
incb
pop
or
sub
pushf
mov
loop
pop
incb
test
lret
sub
dec
inc
test
sub
cmp
incl
inc
and
add
add
xchg
incb
ficoms
pusha
add
inc
push
add
sarb
adc
add
sub
addl
add
sub
pop
std
cmpb
mov
iret
pushf
scas
dec
add
incb
incb
or
add
add
dec
add
xchg
adc
add
cmpsl
and
add
xchg
jmp
mov
insl
test
jne
cwtl
cmp
sbb
daa
incb
imul
icebp
xchg
or
cmp
xchg
fucomp
movsb
cmp
add
add
aam
or
push
add
out
add
add
js
mov
add
add
dec
add
sub
jge
incb
mov
shrb
lcall
mov
adc
add
xor
mov
mov
in
and
jge
sahf
lret
cld
sbbb
push
add
cmp
test
incl
leave
mov
add
aas
testl
xchg
ret
fcoml
add
incb
test
sbb
push
insb
add
add
mov
add
and
add
call
or
std
cmpsb
nop
mov
sbb
out
add
add
incb
jb
or
add
pop
jno
push
add
add
incb
cmp
inc
add
sub
add
incb
aaa
incb
gs
or
adc
add
incb
rcrl
incb
incb
push
incb
inc
add
and
add
push
xlat
mov
add
jl
mov
add
fstl
incb
inc
orl
pop
incb
or
incb
imul
js
inc
loopne
js
pop
enter
sbb
add
add
dec
out
add
sbb
add
incb
mov
insb
add
add
add
add
add
cwtl
icebp
sbbb
cmp
or
mov
mov
and
add
incb
mov
add
add
jb
sub
cld
xchg
test
call
mov
jns
mov
test
enter
rorl
add
mov
call
filds
add
add
pop
insl
in
aad
je
push
mov
sub
incb
push
incl
mov
lods
push
add
fdivs
cmpsl
cmp
scas
setb
xchg
daa
incl
loopne
sbb
dec
inc
cmp
incb
inc
add
pop
add
mov
int
jb
xor
add
incb
arpl
incl
icebp
mov
sbb
pop
cmp
repnz
add
incb
test
cs
or
incb
lahf
lret
in
fwait
icebp
fwait
mov
pushf
sub
pop
or
add
add
mov
incl
test
incb
stc
movsb
cmpl
add
dec
add
mov
imul
mov
push
incb
inc
stos
popa
sub
mov
incl
nop
ljmp
xchg
or
cwtl
rolb
mov
cld
xor
add
xchg
sahf
incb
jae
daa
incb
popf
dec
add
dec
fistps
add
mov
daa
incl
stos
incb
xchg
pop
add
leave
out
add
addr16
sahf
addr16
cmp
ljmp
rcl
iret
mov
add
incl
or
outsl
lods
push
incb
pop
movsl
pop
add
call
rcr
jnp
add
jp
cmp
xorb
add
lcall
ret
dec
inc
jns
fiadds
mov
inc
add
add
incb
faddl
incb
cmpsb
movsl
jmp
pop
add
add
incb
pop
mov
dec
add
fistl
xor
add
sbb
popf
test
xchg
add
and
add
add
call
add
adc
add
inc
inc
add
lahf
mov
jecxz
add
add
mov
mov
repnz
add
mov
or
push
add
fwait
inc
add
add
mov
add
out
cmpsl
add
xchg
incb
push
add
jo
test
add
xlat
std
push
add
subl
add
dec
addb
add
sbb
das
add
add
and
add
incb
in
jle
and
add
mov
add
jnp
mov
adcl
push
xchg
aas
gs
incl
pop
add
pop
add
incb
xor
add
incb
add
add
incl
outsb
add
add
incb
pop
add
add
ds
fimull
add
add
hlt
pop
incl
inc
add
outsl
pop
push
add
jl
and
incb
inc
add
add
incb
adc
add
push
incb
add
add
add
push
add
add
popf
or
pop
add
add
sub
incb
adcl
out
popf
jbe
aad
outsb
add
incl
gs
incb
pop
out
xlat
int3
xor
add
sub
out
mov
add
aas
or
mov
add
add
incl
bound
test
add
or
add
push
incb
ret
xor
add
stos
push
add
imul
or
mov
outsl
sbb
push
incl
cmp
add
add
add
aas
aaa
incb
out
add
add
add
add
imulb
inc
adc
add
add
add
add
and
jecxz
add
dec
add
add
add
pusha
add
add
lods
rcl
pushl
add
add
sti
loopne
subb
add
pushf
inc
add
out
nop
sbb
popf
cmp
xor
add
incb
xchg
pop
incl
stc
dec
mov
incl
dec
inc
insl
pop
add
incl
insl
dec
into
mov
rclb
xchg
jb
jg
je
adc
add
and
add
mov
insb
add
incb
mov
jno
jmp
incl
mov
out
gs
add
roll
lcall
in
inc
add
or
push
add
mov
cld
cs
push
add
add
jb
add
jmp
sub
xchg
fstpl
add
push
insl
add
enter
add
insb
add
add
sbb
jle
or
add
lahf
push
add
push
aas
xor
add
add
incl
add
add
cmp
test
cmp
fsubr
gs
add
sarb
add
pop
incb
ret
add
incb
aad
lahf
xchg
andb
mov
push
lock
add
incb
add
add
in
loop
add
incb
gs
add
incb
test
dec
divl
add
jmp
and
add
cli
xchg
or
mov
pusha
add
leave
mov
jecxz
popa
add
add
add
add
incb
xchg
jns
add
int3
sub
jae
in
sub
incl
jp
xchg
outsl
xchg
jp
jmp
negl
add
incb
jmp
cwtl
ret
stos
lods
cmp
dec
iret
dec
push
add
sub
mov
jmp
push
add
or
lahf
rorl
add
mov
lret
ja
or
fldenv
cmp
add
push
jo
push
mov
pop
lahf
lret
pop
add
dec
add
cmc
xchg
aas
xchg
das
rcll
add
sub
or
inc
out
jnp
incl
xchg
jle
mov
cwtl
sahf
js
xchg
sbb
incb
cltd
dec
add
jno
add
stc
dec
insl
xor
add
sub
add
add
add
incb
arpl
mov
lods
aaa
incb
je
test
fisttpl
call
dec
adc
add
mov
rol
sub
cli
and
add
xchg
shrb
incl
and
add
rol
clc
mov
ds
shlb
insl
and
add
add
out
incb
je
imul
add
add
bound
xchg
stc
pushf
scas
xchg
xchg
mov
imul
inc
add
add
add
mov
mov
neg
shrb
or
dec
and
xlat
adcb
inc
xor
add
mov
push
daa
incb
inc
cmpsl
push
mov
add
incb
jmp
fsubr
fsts
mov
js
aad
incb
scas
arpl
imul
incb
sbb
xchg
dec
add
mov
add
add
stc
xor
add
hlt
add
testl
add
leave
int3
push
dec
add
adc
add
imul
add
bound
pop
jge
add
jg
out
lahf
dec
add
pop
mov
jae
sbb
incb
ret
incb
ja
sarb
xchg
roll
incb
push
cmp
add
push
incb
dec
loopne
mov
les
cltd
pop
cmp
and
add
data16
dec
dec
add
ret
fsubs
add
repz
and
add
add
jle
mov
mov
dec
in
ja
enter
push
add
add
mov
jge
dec
incb
dec
add
cmp
add
push
add
incb
or
into
push
incb
sbb
sub
aaa
incb
mov
cmp
sub
fwait
incl
mov
incb
lock
xchg
andl
pushl
icebp
pop
incb
or
lcall
jbe
xor
stos
out
nop
mov
add
add
je
add
add
in
shrl
add
fwait
jmp
lods
push
add
incb
repz
movsb
jmp
outsb
add
popf
dec
add
mov
pop
add
adc
add
add
inc
add
lahf
sbb
insl
jae
add
in
cltd
das
pop
incb
push
add
lock
ds
dec
dec
ljmp
jb
mov
je
xchg
sub
mov
lcall
fisttpl
incb
push
lahf
ljmp
addr16
add
lahf
loope
add
aas
pushf
test
push
add
cmp
xor
add
adc
add
incb
rcr
les
test
add
xor
add
add
incl
addb
incb
mov
add
pop
incb
dec
add
in
cs
add
add
add
outsb
add
pop
pop
add
testl
add
add
fwait
push
stos
sti
int3
add
add
incb
or
or
adc
add
rol
fidivrl
add
add
mov
incb
daa
incb
lods
inc
add
incb
jo
push
add
sbbl
mov
add
add
incb
andl
and
add
ret
incb
nop
ret
add
incl
adc
add
ficompl
fildl
lret
mov
mov
lcall
stos
pop
add
or
jp
xchg
nop
test
les
xor
add
push
add
lea
cwtl
fnsave
incb
incl
push
push
in
mov
inc
add
ficoml
jmp
push
incl
jge
and
add
adc
add
lcall
outsb
add
cmc
aaa
incb
dec
insb
add
add
dec
fxch
lahf
daa
incb
dec
add
jge
data16
sbb
add
add
pop
add
inc
add
dec
add
lahf
repnz
add
incb
dec
loope
add
xor
add
incb
js
and
add
in
xorl
push
add
testb
je
xchg
adc
add
jecxz
sbb
add
fdivs
incl
jp
sub
cmp
push
add
xchg
dec
add
scas
xchg
loopne
add
shr
loopne
add
cmp
add
fwait
je
dec
dec
addl
add
xor
add
sbb
clc
data16
adc
add
mov
fdivs
shr
mov
test
add
mov
xor
add
addb
sbb
add
add
add
je
mov
add
or
pop
sub
add
icebp
lret
incb
mov
add
incl
sbb
xorl
fnstcw
adc
loop
adc
add
clc
shrb
incb
ja
int
xchg
mov
add
mov
sbb
xchg
lret
add
add
aas
sbbb
jns
add
incl
add
add
incb
aad
lcall
cwtl
push
icebp
jbe
out
mov
mov
and
in
mov
rcrb
inc
adc
add
pop
add
add
lods
das
outsb
add
add
movb
add
add
add
insl
cwtl
mov
fldl
scas
inc
add
add
add
fimull
add
incl
xor
add
incb
mov
mov
add
sbb
add
rcl
push
and
add
push
add
int
push
jg
add
pop
add
inc
add
mov
add
andl
incl
mov
add
cmc
lahf
setno
incb
lods
insb
add
mov
inc
repz
add
nop
lock
aam
add
push
cwtl
sub
les
incl
rclb
incb
lahf
cmp
aas
testl
incl
fbstp
gs
call
adcb
incb
push
pusha
add
incb
repnz
add
lcall
and
add
pop
incb
cmc
jo
cmp
jo
test
jbe
mov
movsl
or
in
and
add
add
cmp
add
add
incb
xchg
push
add
add
incb
dec
add
bound
test
add
push
incb
outsl
jae
incl
pop
add
incb
lock
or
je
mov
sub
jecxz
mov
mov
shll
mov
pop
sub
rol
add
xchg
repz
add
mov
jbe
jne
incb
add
add
add
xor
cmp
jns
loop
add
cwtl
xchg
jb
imul
sbb
sarb
cmp
rcrl
adc
add
loopne
incb
fdivrl
or
push
incb
cmp
sbb
fidivs
add
call
incb
lock
mov
sbb
ljmp
incl
icebp
loopne
cmp
dec
add
mov
or
sbb
add
add
call
loop
add
add
loop
add
bound
incb
inc
add
in
mov
pop
add
incl
mov
adc
add
lock
mov
ret
add
incb
add
add
lock
mov
aam
add
add
or
clc
addr16
pop
incl
inc
add
xchg
jae
add
add
add
add
lock
mov
add
stos
push
inc
add
or
mov
add
or
call
xor
add
incb
mov
mov
mov
sub
xor
add
mov
hlt
icebp
jl
cltd
add
add
xchg
mov
lods
xchg
add
add
arpl
adc
add
adc
add
incb
data16
pusha
add
sahf
jle
ret
xchg
inc
xchg
cmp
cmp
add
lahf
dec
xor
add
incb
xchg
push
add
dec
addr16
jmp
xchg
mov
pop
add
xor
add
movsb
mov
add
dec
push
add
int3
in
test
incb
mov
dec
shlb
add
roll
incl
icebp
or
fidivrl
popa
cmpsl
pop
sub
cmpb
stos
iret
ljmp
sbb
dec
dec
lcall
add
add
stc
lea
leave
in
outsb
add
mov
loope
sahf
lahf
sbb
incb
out
incl
test
incb
icebp
std
cmp
mov
add
add
sub
out
mov
add
sbb
incb
add
add
insl
mov
inc
fsts
incb
xchg
out
add
add
cli
lahf
mov
int3
mov
add
add
add
add
add
incl
sbb
and
add
addl
add
add
incb
mov
mov
xlat
cmc
lahf
inc
pop
pop
add
add
add
dec
cs
addr16
add
lock
mov
insl
xchg
hlt
in
dec
ja
xlat
or
cmpsb
sbb
insl
and
add
incb
sbb
lret
sub
dec
add
incl
mov
dec
add
imulb
add
pop
incl
fmuls
incl
imul
add
xchg
mov
sub
push
add
xchg
jle
dec
add
add
mov
incl
cmc
jmp
test
add
mov
sbb
int3
add
add
push
add
lret
pop
cli
mov
cwtl
incb
fistps
mov
add
pop
add
sub
add
mov
cs
subb
add
mov
sti
push
adcb
scas
add
add
or
add
cli
adc
add
xchg
jb
add
add
add
xchg
incb
mov
xchg
into
lea
fdivr
lcall
jg
push
incb
stc
adc
add
push
sub
pushf
xlat
out
add
add
push
int3
sarb
lock
mov
shll
insl
sub
popa
add
add
add
incb
adc
add
add
add
add
incb
cmpsl
jb
insb
add
and
add
mov
je
mov
jecxz
sbb
push
add
mov
or
into
mov
pop
add
add
add
incb
sub
add
incl
dec
add
add
xor
add
add
add
incb
js
leave
sub
and
add
imul
xchg
scas
pusha
add
stos
lcall
movsb
cmp
incb
xchg
aam
neg
test
or
and
jg
insb
add
add
add
add
scas
pop
incb
and
add
add
cld
xchg
add
in
loopne
incb
or
or
cmp
lret
push
jo
push
add
add
lods
xor
add
push
add
incb
or
in
ja
cmpb
jmp
shl
incb
sbb
shl
dec
add
stos
cmp
mov
add
test
dec
dec
lret
std
in
adc
add
loope
incb
or
mov
mov
add
xchg
inc
in
add
xchg
repnz
lahf
sbb
xchg
incb
repz
sub
add
pushf
mov
add
incl
sbb
repnz
std
adc
push
add
insl
mov
jae
ja
sarb
clc
shlb
add
pop
jbe
mov
incb
add
add
dec
mov
bound
popf
xchg
rclb
incb
rclb
add
add
mov
add
add
add
gs
add
lret
jecxz
add
mov
cmp
arpl
cmp
leave
pop
sub
shrl
pop
movsl
push
incb
mov
sarb
bound
repnz
popa
ds
fstl
incb
dec
clc
iret
rcrb
add
add
dec
add
cmpsl
inc
jne
incb
adcl
jnp
xchg
das
sub
add
incb
inc
sahf
movsb
adc
add
cwtl
pop
incb
rcr
inc
add
ljmp
bound
and
add
mov
add
scas
ja
pop
incl
push
add
imul
jmp
jo
add
add
mov
dec
add
xor
add
add
aad
movsb
sub
aas
repnz
add
add
scas
mov
xor
add
add
incb
sbb
iret
jnp
lcall
aas
clc
loopne
incb
enter
cmpsb
dec
sbb
shlb
jo
test
adc
add
repz
test
incl
cmpsl
arpl
adc
add
out
out
lea
add
sbb
add
lahf
dec
sar
cmp
or
mov
in
mov
data16
out
xor
inc
add
sub
cmpsb
in
mov
add
add
sbb
cmp
cmc
jbe
cmc
mov
xor
add
fdivr
mov
cmc
jp
push
incb
or
sbb
faddp
push
add
incb
jle
push
lods
sub
pop
incb
ja
rolb
mov
pop
add
negb
or
popf
push
add
cld
jge
incl
xor
add
clc
inc
loopne
add
add
jmp
dec
adc
pop
out
je
xor
add
call
lret
add
cli
rol
xor
add
adc
add
add
add
add
test
mov
add
call
add
mov
lds
cmp
pop
add
incb
jnp
dec
add
call
pop
incb
adc
add
jbe
ja
jle
mov
xor
add
push
incb
test
incb
cmp
add
loop
mov
add
gs
push
add
fucomp
jge
dec
add
add
xor
push
add
xor
add
out
mov
loopne
xchg
jo
and
add
mov
out
dec
add
ja
aas
cwtl
in
icebp
sbb
sti
xor
add
add
add
add
js
and
add
add
incb
sahf
and
add
int
fiadds
ficompl
std
lods
mov
cmp
int
mov
add
sbb
cwtl
insl
leave
push
loopne
add
add
cmp
sbb
push
lret
xchg
pushf
jmp
mov
ret
inc
in
add
mov
js
xor
add
cld
jmp
xor
add
sahf
xlat
jge
xchg
sub
add
scas
push
add
inc
test
daa
incb
xor
add
out
movsb
test
add
push
add
add
dec
shrl
mov
add
add
sbb
add
bound
jp
add
add
mov
dec
data16
incb
sub
aam
add
dec
add
add
hlt
aad
add
outsl
jl
push
add
scas
add
add
nop
push
out
incb
jo
inc
add
popa
xchg
incb
mov
test
sbb
andl
je
sti
jle
enter
mull
aas
add
std
push
add
lds
inc
nop
ds
scas
loopne
add
sbb
lods
in
add
add
add
incb
das
xor
add
in
enter
jle
mov
lock
add
add
pop
incl
add
add
sbb
lock
incb
mov
pushf
ret
or
xchg
loop
in
mov
rolb
incb
lcall
or
push
incl
inc
xchg
push
add
add
fisubl
incb
sar
pop
add
fadds
incl
aas
dec
inc
add
loop
out
andl
add
std
pop
add
incl
out
stos
icebp
and
add
fcoml
incb
push
mov
add
add
jns
sbb
stc
jno
add
inc
dec
lea
lahf
xor
add
adc
inc
cmp
or
sub
adc
add
test
mov
incl
push
add
stos
cmp
incb
push
add
iret
hlt
and
add
insl
inc
add
pop
add
ret
imul
and
add
and
add
incb
std
add
add
into
bound
fistpl
gs
push
test
daa
incb
mov
push
imul
mov
push
or
or
lret
hlt
jge
add
testl
out
mov
imul
add
fsubrs
add
icebp
pop
add
incb
cmp
fidivrl
and
add
incb
xchg
adc
add
add
add
ja
jnp
test
leave
stos
cmpsb
xchg
fnstcw
jbe
shrl
jno
test
lret
dec
add
add
hlt
mov
add
xor
add
add
inc
add
lods
cld
push
add
add
adc
add
lcall
ficoml
incl
leave
movsl
pushf
mov
dec
add
xlat
leave
idivl
inc
add
incl
call
add
pop
out
incb
jp
mov
pop
rorl
incl
orb
add
add
add
test
cli
mov
in
lahf
mov
ret
add
incl
arpl
add
add
lock
add
icebp
cmpsb
fldt
int
dec
add
ret
dec
insl
mov
mov
mov
mov
xor
add
les
lahf
xor
add
jne
cmpsl
stos
stc
shr
incb
cmp
xor
add
incb
fcos
repz
xchg
imul
add
add
repz
incb
pop
cmp
repz
add
ret
xchg
jmp
incb
jmp
fwait
pop
inc
add
incb
cmpsl
mov
fwait
imul
fisttpl
subb
incb
mov
hlt
int
add
lock
js
orl
in
add
out
outsl
mov
push
add
popa
mov
scas
inc
add
sub
xchg
xchg
int
sbb
xchg
sbb
xchg
sub
adc
add
add
add
pop
add
loope
inc
test
ja
xor
add
lds
add
add
pusha
add
xor
add
add
lret
add
add
std
cmp
cmpsl
andb
inc
add
add
add
lahf
mov
add
sbb
andb
add
or
add
push
add
lods
jb
cltd
sbb
repnz
call
dec
add
lret
xchg
cld
jne
cmpsl
out
sbb
incb
or
mov
sbb
adc
add
or
dec
add
repnz
add
incl
das
push
add
xchg
add
add
incb
je
fidivs
incb
leave
repnz
sub
pop
xorl
mov
add
pop
fstpt
add
add
nop
xchg
shlb
add
mov
add
add
incl
push
stos
inc
add
incb
sahf
into
mov
mov
bound
mov
add
sbb
pop
incb
popf
inc
add
cmp
out
inc
jae
mov
jecxz
incb
push
add
ret
jb
loopne
xchg
stos
jmp
int
incb
loopne
add
cmp
aam
adc
add
mov
add
test
sbb
xchg
mov
add
jb
pop
incb
xor
add
sbb
test
incb
ja
incb
dec
pop
inc
xchg
or
jmp
cmpsl
push
xchg
dec
add
sahf
adc
add
push
add
add
pop
incl
jae
incb
sub
or
in
add
iret
fcom
fists
add
add
jle
add
add
and
add
add
dec
les
incl
jb
inc
add
stc
and
add
jb
xor
add
outsb
add
jmp
add
rorl
dec
add
cwtl
leave
loopne
int3
jge
sarb
incl
pop
incb
xor
add
lods
int
mov
sub
jae
mov
incb
mov
add
sbb
push
mov
add
add
enter
xor
add
add
add
and
je
rorl
sub
sub
add
loopne
stos
test
rorb
mov
repz
mov
incb
shll
mov
pop
incl
aad
xor
add
incb
mov
mov
out
jno
adc
add
sub
iret
fidivrs
fsubr
outsb
add
add
and
add
pop
incb
push
add
add
aas
outsl
pop
jae
add
add
daa
incb
sub
bound
xorb
add
ja
jge
fcmovnb
lods
sahf
aaa
incb
jl
jb
dec
test
jns
xchg
adc
cli
xor
add
add
add
stos
pushf
adc
add
incb
std
push
incb
lods
mov
mov
push
mov
inc
lret
incb
mov
fadds
mov
dec
xchg
xor
add
into
repnz
add
shrb
lret
andb
add
add
incl
adc
popa
in
dec
loopne
shl
in
inc
add
adc
add
cmc
adc
add
bound
rcrb
cmpsl
iret
fildl
incb
repnz
fnsave
mov
jb
mov
incb
sbb
inc
adc
add
add
incb
push
add
xchg
pop
add
incb
push
fldenv
push
incb
leave
cltd
and
add
incb
loop
dec
lret
imul
add
cmc
data16
test
cmpb
loope
mov
add
add
into
adc
add
lea
incb
mov
jmp
incb
lahf
xor
hlt
iret
in
add
data16
movsb
adc
lahf
fistps
incb
shlb
incb
ret
inc
add
mov
add
push
add
add
add
add
add
incl
or
pop
add
incl
cmp
incb
push
hlt
pop
incb
ljmp
bound
out
add
incl
dec
add
push
add
add
incb
mov
in
pop
jns
add
outsb
add
incb
pop
add
das
mov
incl
incb
add
js
push
add
cmp
rcr
xlat
in
clc
fists
pop
add
add
mov
add
incb
sbbl
cmp
pop
imul
add
jae
add
add
incb
xchg
mov
incb
add
add
push
push
add
bound
or
daa
incl
dec
inc
add
add
and
add
cmp
lcall
incl
incb
mov
out
incb
jle
cmc
mov
add
incl
pop
incb
add
add
mov
incb
lahf
and
add
loopne
in
mov
add
mov
push
mov
push
add
xor
add
add
add
incl
inc
add
test
fcompl
push
or
dec
add
or
aas
in
xchg
stos
and
add
cltd
mov
pushf
dec
add
pop
add
out
or
lock
out
cmp
negl
add
cmc
sbb
stc
cmpsb
fsubl
add
or
bound
nop
out
incl
mov
std
pusha
add
mov
incb
cmp
cmp
bound
or
ficoml
das
mov
add
add
stc
ret
insb
add
add
add
shlb
mov
out
sub
fcomps
push
dec
add
test
ficompl
and
add
add
push
incl
jg
add
add
mov
aad
incb
inc
into
pushf
cli
jns
incl
adc
add
or
jbe
adc
add
add
cmp
stos
add
add
ja
adc
add
lahf
filds
incb
scas
add
mov
push
add
imul
incb
test
mov
add
pop
incb
mov
pop
jbe
inc
add
cmp
lock
add
incb
insb
add
incl
lcall
add
push
add
subb
jg
add
xchg
inc
cli
ja
incl
jo
mov
out
dec
add
out
imul
incl
inc
add
sar
push
inc
add
inc
add
js
test
cmpl
pushf
mov
add
fildll
incb
enter
push
add
jmp
rorb
xor
add
sub
cmc
inc
dec
mov
dec
jae
add
rol
add
incb
add
or
xor
add
ljmp
add
add
out
push
add
fadds
incb
mov
mov
testl
jle
adc
add
mov
jecxz
incl
dec
add
andb
adc
add
add
xor
add
movsb
sbb
incb
jecxz
incb
movsb
push
add
xchg
mov
add
movsb
rcrl
add
xchg
icebp
cli
sub
dec
inc
sbb
sbb
enter
add
add
loop
cli
incl
subb
incb
lahf
filds
incb
mov
add
cld
js
mov
divb
sub
ljmp
add
incl
push
push
add
push
incb
mov
in
and
add
in
jbe
in
add
fldl
add
add
add
incb
mov
call
add
daa
incl
pop
add
incb
xchg
jae
sub
push
out
mov
pushf
rcll
add
xchg
push
out
pmulhw
out
stos
adc
add
add
gs
mov
js
sub
add
aam
inc
incl
ds
repz
add
xchg
daa
incb
notb
xlat
test
lea
incb
push
incl
push
add
xor
add
scas
loop
mov
add
in
sahf
in
ret
pop
incb
mov
add
sub
pop
add
add
add
sub
add
add
mov
incl
incb
js
mov
mov
add
add
add
jno
add
mov
xor
add
pop
add
incl
xchg
mov
xchg
push
add
arpl
inc
add
jmp
push
add
incl
push
add
add
add
jp
mov
incl
fistl
sbb
sbb
add
incb
jae
dec
sub
scas
mov
push
daa
incb
jbe
push
add
add
add
and
add
incl
sbb
popa
jne
inc
add
mov
mov
cmp
mov
imulb
add
push
add
repnz
in
icebp
aad
push
add
add
mov
mov
add
scas
lods
xchg
lret
aaa
incl
mov
add
push
cmp
rcr
incl
popa
adc
push
add
or
add
bound
das
mov
or
inc
sti
aaa
incb
fldl
incb
fimuls
adc
add
lcall
push
add
or
imul
add
incl
sbb
lcall
add
add
sub
incb
mov
mov
je
mov
add
add
test
lock
cld
xchg
jmp
out
pop
incb
xchg
incl
mov
jmp
mov
push
add
incb
sub
clc
data16
jns
mov
add
incb
push
add
movsl
jb
push
add
xchg
sbb
incl
stos
sbb
mov
add
mov
xchg
xor
add
cwtl
jae
daa
incb
cwtl
dec
and
add
incb
enter
add
incb
pop
add
mov
jo
mov
add
add
add
incl
or
jp
mov
stc
nop
mov
incb
mov
add
incb
lods
add
sbb
repnz
mov
add
mov
incb
or
mov
add
adc
add
les
add
mov
incl
adc
add
js
ret
and
bndldx
sbb
jge
sub
sub
lds
sarb
incb
lcall
dec
sub
cli
sub
ret
xlat
in
incl
shrl
add
add
add
add
inc
add
and
add
test
or
les
incb
testl
incb
pop
ficompl
add
in
int3
inc
sarl
xchg
push
add
incb
cld
sbb
scas
inc
push
add
add
add
adc
add
add
mov
push
cmp
in
dec
cmpb
xchg
cmp
incl
lfs
add
lods
stc
enter
and
add
incb
dec
cmc
in
rorl
add
incb
mov
add
das
inc
add
or
add
add
xchg
add
xor
add
dec
nop
add
add
xchg
mov
add
pop
incb
shl
fldcw
push
jp
andb
pop
pop
add
fldcw
in
add
idivb
add
scas
inc
scas
mov
add
imul
ja
mov
xor
add
lret
add
addl
inc
dec
add
add
jmp
incb
negl
cmp
push
add
sbb
xchg
add
push
add
leave
cmc
incb
repnz
add
aam
jbe
in
or
incb
ds
adcl
rcrl
add
cmp
jbe
adc
stos
inc
addl
push
add
cltd
inc
jl
sti
pop
data16
add
mov
loopne
cmp
mov
push
add
roll
leave
push
add
incb
mov
add
add
incb
jg
mov
daa
incb
clc
or
orb
incb
xor
add
add
pusha
add
lcall
data16
das
adc
sub
pop
add
jmp
decl
lahf
addr16
test
incb
jo
inc
sub
sub
xchg
incb
inc
jg
incb
mov
decl
or
incb
xchg
mov
add
in
repz
add
inc
ljmp
and
enter
imul
add
incb
jle
mov
inc
icebp
add
add
add
add
clc
pmaddwd
jno
jle
xchg
mov
outsb
add
pop
add
scas
daa
incb
mov
push
pop
push
loop
movsl
idiv
idivl
add
aas
dec
add
add
mov
incb
inc
pusha
add
incb
mov
incb
add
icebp
sbb
push
add
incb
jecxz
add
fwait
inc
add
aaa
incl
incb
add
add
add
push
into
pop
cmp
out
pop
add
incb
push
incl
nop
push
out
or
adc
add
xor
add
cli
push
add
test
adc
add
add
cmp
sbb
or
mov
add
xchg
incb
mov
lods
mov
add
stos
clc
testl
jmp
int3
rcrl
add
incb
das
or
and
add
test
add
push
add
int3
lcall
and
scas
xchg
insb
add
sahf
stos
nop
and
add
inc
arpl
mov
add
fistl
add
jbe
adc
add
xchg
xorl
incb
js
aad
add
add
add
inc
push
push
lahf
test
incb
sbb
pop
add
dec
add
add
not
incb
pop
add
add
sub
jp
pop
add
incb
fnsave
incb
bound
sbb
push
or
adc
add
add
incb
insb
add
add
cmpb
shr
sbb
ret
jb
push
out
jae
mov
incb
xor
add
sub
in
sbb
push
add
enter
sub
and
add
add
add
mov
add
add
incb
int
incb
incb
dec
add
in
incb
xchg
rclb
incb
out
mov
pushf
pusha
add
mov
add
mov
add
clc
out
add
cs
shll
add
incb
cltd
pop
hlt
pop
incb
or
adc
add
sahf
jge
or
jge
icebp
stos
add
add
pop
add
incl
divb
sbb
push
movsl
add
add
add
cli
fmull
add
push
dec
jb
dec
add
incb
incl
incb
xchg
mov
insl
xchg
out
sti
scas
pushf
enter
xchg
lods
repnz
add
in
xchg
cltd
sub
incl
ret
pop
add
aam
sub
test
xchg
ljmp
loop
and
add
incb
cmp
dec
add
mov
incl
call
incl
xchg
cmp
xchg
add
push
inc
ds
dec
add
add
rcll
mov
cmpsb
adc
add
je
sub
out
cmp
mov
xchg
cmp
add
aas
jbe
sub
test
add
jmp
mov
xchg
aaa
incb
sahf
mov
xlat
sub
mov
xchg
xchg
ficoml
add
add
add
lahf
pop
negl
mov
incb
add
incb
mov
xchg
cmp
hlt
and
add
add
js
lahf
or
leave
hlt
stc
rcl
mov
add
add
add
bound
dec
push
incl
repnz
add
mov
lods
aaa
incb
and
add
pop
incb
aam
leave
cmp
add
add
imul
mov
sbb
lock
repz
test
add
xor
add
cmc
pop
add
mov
fiadds
cmpsb
mov
add
add
xor
add
sub
incb
and
add
addb
pop
xchg
xchg
ja
add
push
incl
sub
incb
hlt
sti
iret
add
pop
lahf
bound
mov
cmpsl
gs
loop
and
add
pusha
add
mov
add
incb
jp
adc
add
cmc
sarb
adc
add
std
ret
mov
incl
mov
dec
in
dec
in
out
jns
pushf
fucompp
incb
cmp
mov
mov
incl
sub
mov
iret
lret
add
lahf
adc
add
and
add
add
sbb
leave
sahf
mov
xor
add
cmpb
rcr
stc
pop
ret
movsb
pop
incb
mov
add
mov
inc
js
sub
pop
incb
das
int
incl
jle
dec
add
into
add
add
popf
sub
stos
mov
mov
xor
add
fnstenv
incb
mov
incl
sbb
sub
js
das
xor
add
push
incb
lock
xchg
sub
orl
add
shr
roll
add
inc
jp
inc
into
dec
mov
add
test
add
push
add
add
inc
add
inc
xchg
dec
sbb
psllw
add
add
rep
xor
add
sub
push
sub
fisubl
incb
pop
adc
mov
add
or
mov
mov
incb
dec
call
mov
call
add
jmp
add
sahf
sbb
fwait
test
aas
mov
push
add
incb
cmp
add
sbb
int3
pushf
js
mov
add
sub
and
add
add
ficomps
test
add
add
add
je
cmc
jmp
push
dec
add
cmp
push
cmpsl
cltd
pop
add
add
adc
add
mov
call
pop
add
into
out
fldt
outsb
add
jae
add
in
addr16
addr16
add
push
xchg
mov
add
lea
jg
dec
dec
imul
jno
and
add
js
jl
xchg
ror
fimull
add
add
incb
adc
add
incb
xchg
std
in
dec
ja
pop
add
inc
add
incb
std
push
ret
bound
mov
add
dec
pop
incl
stc
call
popf
int3
repnz
cmp
add
jbe
add
jno
push
incb
bound
adc
add
xchg
ljmp
rcl
out
jb
inc
sbb
icebp
test
ret
pusha
add
incb
or
cmp
xchg
xchg
fmul
shr
jno
xchg
xchg
cltd
pop
push
mov
add
hlt
testl
dec
add
mov
add
fimull
jmp
cmp
jnp
add
mov
lds
push
mov
add
pop
add
and
lock
incb
dec
add
incl
jecxz
add
sahf
mov
xor
add
incb
mov
incl
mov
test
add
movsl
icebp
dec
data16
incb
inc
xchg
lods
sub
fadds
incl
or
ffree
aad
mov
add
mov
imulb
jl
fcoms
add
add
add
lods
or
mov
mov
add
cmp
push
rcrb
add
shll
add
dec
add
test
inc
add
and
test
add
sbb
mov
ja
in
flds
add
lods
add
insl
pusha
add
outsl
aad
add
mov
loop
incb
imul
bound
rorl
or
push
add
add
incb
sar
push
add
cli
fistl
dec
add
add
loopne
add
add
incl
mov
pop
add
stos
sub
decb
add
incb
and
insb
add
incb
lods
xchg
in
push
add
incl
inc
lret
add
icebp
sub
push
in
fwait
and
add
pop
daa
incb
or
push
incb
add
add
pop
add
sarb
ljmp
dec
jg
inc
jp
lea
push
push
add
add
sub
push
sub
orl
adc
add
add
pop
add
repz
cmp
mov
add
incl
pop
incl
insl
mov
add
jg
popa
fstl
incl
cmc
mov
add
incb
dec
add
lds
mov
jne
addr16
pop
add
addr16
ret
nop
js
scas
adc
add
andl
and
incb
les
mov
jmp
daa
incb
inc
add
incb
xor
add
incb
fbld
add
mov
incb
xchg
xchg
sbb
inc
dec
add
push
out
icebp
in
incl
pop
add
daa
incb
mov
aaa
incb
lret
mov
popf
stos
inc
mov
jge
jnp
dec
add
incl
add
imul
mov
jae
pop
shlb
incl
push
mov
imul
dec
add
add
shll
sarb
and
add
add
incb
inc
shl
add
cmp
lahf
movsl
push
xor
add
mov
ret
mov
xor
add
add
aaa
incb
and
add
stc
popf
insl
jb
pop
leave
jno
dec
add
add
lods
insb
add
mov
incb
mov
adc
add
test
inc
add
incl
cmp
add
mov
sub
jb
imul
incl
subb
loopne
add
inc
add
inc
add
sbb
jbe
xchg
incb
adc
add
nop
repnz
push
mov
cmp
xchg
add
add
cmp
sbb
add
incb
out
enter
cmp
jmp
add
outsl
ja
add
cmpsl
out
sbb
pop
incb
mov
incb
xchg
sbb
xchg
faddl
add
add
stc
movsb
cmpsb
lea
rcr
incb
aas
mov
add
mov
jb
pop
mov
popa
inc
iret
fcomps
add
incb
sbb
enter
stos
shl
jae
inc
add
loopne
pop
add
mov
add
fcoml
adc
add
jl
sti
mov
rcl
add
add
mov
add
loope
add
add
sbb
sbb
jne
das
xor
add
incb
push
incb
lcall
pushf
mov
jno
incl
pusha
add
call
fwait
sbb
mov
add
adc
add
aam
enter
add
call
mov
add
sbb
jns
add
add
add
add
add
pop
add
fnstenv
incl
dec
movsl
mov
add
incb
mov
cmp
add
mov
incb
dec
xor
add
aam
add
incb
adc
add
lods
loop
xchg
incb
mov
push
add
je
outsl
add
add
lahf
inc
rolb
incb
xor
add
mov
incb
data16
incb
ret
pop
incb
popf
pushf
jg
add
ja
sub
aam
pop
add
add
xchg
in
xor
add
xchg
lahf
push
incb
or
add
mov
incb
cmpsl
clc
sbb
clc
mov
and
add
jno
mov
shrl
add
loope
add
lds
incl
lcall
and
add
add
push
add
ja
std
outsl
test
incb
pop
incl
popa
add
push
add
add
incb
test
dec
add
inc
aam
xor
add
incb
jp
test
jae
lea
add
incl
fiadds
add
lds
incb
imul
add
incb
addl
incb
test
push
adc
add
mov
push
add
mov
add
repz
add
imul
incb
add
mov
sbb
incb
dec
sub
call
add
adc
add
jo
repnz
add
inc
stos
popf
incl
add
call
fisubrs
incb
inc
add
inc
add
mov
sub
lods
cwtl
loope
nop
int
add
pop
add
add
mov
incb
sub
std
addr16
and
shrb
add
incb
push
incl
aam
and
add
cmp
push
add
jecxz
add
add
add
insl
fadd
xor
add
psubusb
arpl
or
jle
aas
outsb
add
xorl
add
add
clc
cli
andl
out
insb
add
incl
cmp
inc
rcl
mov
and
add
jmp
sub
incl
xor
add
pand
mov
incb
ja
add
push
add
adc
add
sarb
dec
imul
add
in
add
pop
push
pop
add
add
mov
lods
bound
inc
add
add
add
incb
loope
add
add
add
mov
incb
cmp
mov
incb
sub
fwait
orl
add
sub
outsl
outsl
mov
test
adc
add
sbb
push
add
fwait
cld
or
and
add
add
push
add
xchg
incb
aad
xorb
testl
add
push
dec
add
incb
mov
std
pop
mov
xor
add
mov
add
shll
dec
mov
add
int
and
add
add
jnp
adc
add
cwtl
and
add
sahf
push
add
incl
jns
or
xchg
add
incb
push
incb
xchg
lods
int
xchg
inc
add
add
stos
add
add
incl
je
mov
incb
push
lret
add
add
and
add
fs
cli
lds
add
pushl
mov
pop
push
adc
incb
and
add
in
int
dec
dec
push
pop
mov
jo
xor
sysexit
incl
or
adc
add
andb
add
cmp
mov
inc
add
lods
cwtl
xchg
rdtsc
incb
outsb
add
push
add
mov
xchg
add
in
mov
nop
movsl
xor
add
incb
jno
incb
daa
incl
add
incb
arpl
aaa
incb
push
add
add
incb
mov
repnz
les
add
dec
add
add
add
mov
pop
add
incl
xor
fwait
nop
out
incl
enter
iret
dec
mov
scas
add
xor
add
incb
movl
fdiv
pop
push
add
dec
fildll
add
pop
add
fcompp
push
sub
rcrl
add
jb
xor
add
pop
add
incb
add
add
add
xchg
pushf
movsb
jo
pop
add
adc
add
sub
incb
icebp
lods
mov
add
incb
out
movsb
or
and
add
iret
fbld
insb
add
or
sbb
loopne
testb
icebp
daa
incb
int3
push
add
add
add
inc
lds
incb
pop
incb
jne
pop
incb
pop
incb
pop
ror
shll
add
add
xchg
cmp
dec
clc
gs
add
incl
cmp
adc
add
addb
add
xchg
and
add
stos
sub
inc
icebp
lds
test
lahf
jns
lret
add
mov
adc
add
add
orl
fsubp
dec
pop
cmp
repnz
mov
mov
mov
jl
dec
bound
cmp
add
push
pop
add
add
hlt
insb
add
sbbl
call
mov
push
add
add
add
add
jmp
jmp
sub
incb
pop
add
movsb
mov
test
add
add
incb
lock
jl
out
pop
and
add
mov
inc
add
or
sub
push
add
lds
test
loope
xchg
cli
add
add
sbb
sub
xchg
cmp
lock
test
pusha
add
xor
add
push
and
add
mov
inc
lcall
add
add
lahf
jecxz
cltd
and
adc
add
imul
add
outsl
push
add
add
mov
incb
dec
sub
incl
mov
jl
addr16
incl
jecxz
incl
mov
add
incb
stc
or
adc
add
add
nop
push
popf
fiadds
jbe
pop
insb
add
or
repz
cmp
push
add
or
jmp
repz
incb
dec
add
incl
xchg
js
xchg
add
pop
incb
adc
add
mov
dec
cltd
cmp
lods
push
fimuls
incb
and
add
add
incb
mov
std
and
add
jge
imul
ret
sbb
add
xlat
or
inc
das
je
mov
add
add
add
and
add
sub
incb
mov
in
popf
xor
push
add
incb
clc
outsl
nop
in
scas
test
and
add
add
incb
and
add
nop
jnp
add
incb
enter
add
pop
add
pop
add
insl
insb
add
or
add
add
add
hlt
cmp
sbb
cmpsb
leave
pop
pop
add
add
incb
std
movb
cmp
push
add
shll
aad
push
add
cmpsb
or
dec
xchg
or
mov
aam
outsb
add
subl
push
cmp
incb
pop
mov
test
hlt
cmp
enter
mov
incl
popl
pop
push
incb
iret
cmp
lret
imul
add
add
push
add
add
mov
push
add
incl
xlat
or
xchg
sbb
aaa
incb
xchg
dec
add
mov
cmpl
add
movsb
inc
add
add
push
push
in
lret
xor
add
lret
ja
or
gs
add
aam
sbb
ret
xchg
adc
add
add
inc
add
or
sub
test
cmp
add
add
data16
incb
shl
and
add
in
cli
sahf
sbb
mov
sub
push
incb
add
add
add
push
incl
adc
add
add
sti
mov
js
push
add
out
add
loope
xchg
or
lea
and
add
sub
add
add
sahf
or
shl
movsb
sub
sub
imul
ret
add
adc
add
add
cmp
mov
xchg
stos
or
sbb
add
mov
test
inc
adc
add
xlat
inc
adc
add
lds
add
incb
push
incb
pop
add
hlt
and
add
scas
das
adc
add
xor
add
inc
in
add
mov
incb
loop
xchg
jge
or
aaa
incb
mov
lahf
sbb
add
incb
ret
test
incb
ljmp
inc
fists
test
incb
out
incl
adc
add
pop
sbb
outsl
ja
add
jns
add
add
incb
out
incb
xor
add
jb
pop
adc
add
mov
incl
or
jp
sahf
jge
pushf
jg
paddd
incb
dec
jne
incb
or
adc
add
mov
add
push
divl
xchg
pop
arpl
incl
aad
and
add
adc
add
mov
add
xor
add
adc
pop
add
add
add
addl
xor
add
xlat
dec
add
imul
add
out
rclb
incb
rolb
incl
mov
add
xor
add
incl
cmp
in
xor
add
cwtl
and
ljmp
dec
mov
inc
sahf
inc
add
sub
push
aas
jecxz
incl
das
scas
xchg
adc
add
dec
add
and
add
and
add
add
incl
int3
mov
add
push
add
xorl
cwtl
push
add
incl
push
add
incb
add
push
sbb
aad
incl
loopne
inc
mov
add
incb
cmp
lds
lods
mov
add
and
xchg
mov
movsb
and
add
scas
faddl
repnz
add
sub
cmp
add
jno
pop
incb
repz
add
outsl
ja
jae
add
adc
add
mov
add
add
add
add
jl
jmp
xchg
mov
sbb
incb
mov
add
sbb
leave
loop
incb
adc
add
fidivs
rcr
repnz
push
add
adc
mov
mov
or
aaa
incb
sbb
pop
add
add
inc
add
jg
sbb
mov
incb
int
incl
and
add
enter
add
flds
incb
iret
aas
lahf
cmpsl
xchg
cmp
xor
add
add
add
test
jmp
incb
mov
incl
cmpsl
mov
pop
push
incl
mov
pop
jge
add
incb
int3
adc
add
mov
aad
sub
cmp
add
add
jo
push
incb
test
xor
add
inc
adc
add
add
outsb
add
outsl
adc
add
add
inc
push
add
incb
shrb
decl
add
insb
add
arpl
push
add
mov
add
jp
xor
add
iret
data16
mov
jl
xchg
fistpll
add
pop
incb
inc
inc
add
scas
sti
xlat
or
aad
xchg
in
xchg
and
add
dec
sub
add
incb
cmp
adc
add
sbb
lods
adc
add
incb
xchg
loopne
add
repz
push
add
add
add
incl
stc
int
incb
xor
add
add
add
stc
icebp
addr16
sbb
decb
xchg
jmp
add
incb
cmp
push
or
lret
insl
mov
mov
add
lret
out
mov
push
add
mov
cli
pusha
add
xchg
add
mul
pop
test
add
rcrb
data16
cmpb
stos
pop
incb
cmp
adc
add
fdivrl
lods
test
jg
adc
add
sub
jns
sti
fldenv
incb
xlat
bound
or
add
add
fistpl
insl
xor
adc
add
add
add
fdivl
mov
in
addr16
mov
add
fists
jmp
sbb
lds
push
jbe
or
add
rcrb
add
incb
add
add
jmp
incb
rorb
fwait
dec
imul
fnstenv
stos
jmp
cmp
mov
js
sub
fists
inc
add
incb
test
pop
add
add
gs
stos
idivl
inc
add
add
rcll
incb
outsb
add
inc
inc
fisubrs
fistpll
out
push
and
add
add
bound
and
and
add
aaa
incl
jns
fsts
add
mov
adc
add
incb
inc
add
add
xor
add
xchg
nop
sahf
push
adc
add
jne
out
or
add
incb
mov
jae
loopne
push
add
incb
add
add
test
push
xor
add
icebp
add
add
push
add
outsl
rolb
incb
gs
add
lcall
cmp
mov
addr16
incb
insl
out
push
mov
add
fwait
and
add
add
fwait
test
imul
sbb
andl
pop
add
sub
mov
rcl
outsl
cmp
rcr
mov
incb
out
lea
sahf
fsubr
das
movsl
pop
scas
mov
leave
movsl
into
pusha
add
xchg
sub
movsl
mov
sbb
dec
add
jns
mov
mov
dec
add
cli
cwtl
lahf
loopne
and
add
mov
xlat
xchg
test
incb
add
fisubl
jo
and
add
sbb
and
cmpsb
pop
push
mov
add
popa
jb
jnp
aas
loopne
jge
incl
adc
add
incl
cmp
sarl
sub
lret
mov
add
cli
dec
movb
add
mov
and
add
pop
incb
ja
ret
cs
dec
or
dec
add
add
add
add
bound
test
add
test
add
mov
je
jbe
inc
add
add
add
or
add
add
adc
test
das
lds
xchg
jmp
incb
mov
and
add
incb
xchg
push
incb
test
fidivs
xchg
push
incb
cmpsb
add
xchg
push
add
incb
dec
mov
add
add
inc
lahf
push
add
pop
add
in
dec
clc
lea
incl
cli
jp
scas
test
ljmp
jno
push
add
sub
push
add
ret
dec
add
or
ficomps
xchg
adc
add
add
incb
push
dec
add
sar
mov
add
incb
push
add
incb
mov
dec
cmp
mov
popl
add
xchg
loopne
das
and
add
mov
les
incb
imul
scas
pushf
incb
insb
add
incb
jo
and
add
inc
sub
pop
inc
icebp
notl
incl
cmc
jbe
leave
mov
mov
add
pop
les
je
ljmp
inc
add
imul
push
pop
add
add
mov
mov
incb
mov
inc
inc
fnstcw
mov
incb
std
mov
add
add
incl
imul
or
in
xor
add
sbb
incb
test
filds
mov
add
add
rcl
sub
add
pusha
add
les
adc
add
add
incl
xor
add
mov
push
add
add
dec
xchg
faddp
mov
lret
or
inc
aad
fildl
in
cli
and
add
cltd
enter
mov
pop
add
iret
xor
add
aas
frstor
incl
add
add
jb
lds
shlb
incl
xor
add
int
stos
mov
test
adc
add
cmp
add
addb
pop
pop
bound
or
aad
add
incl
pop
incb
cmc
loop
incb
js
xchg
jo
shl
repnz
out
das
and
add
add
pop
jbe
loope
stos
add
add
fmuls
lcall
mov
int3
cwtl
pop
add
mov
add
incl
into
and
add
cmc
bound
inc
add
incb
xorb
xor
add
addr16
xorl
add
mov
add
cwtl
jmp
mov
add
out
ret
data16
arpl
ljmp
pop
add
mov
jb
fidivrl
adcl
add
fdivrs
add
add
movsb
xchg
loope
mov
add
loop
xchg
or
push
add
add
cmpsl
add
nop
mov
add
mov
incb
incb
fadd
ljmp
mov
sti
add
add
jnp
leave
pop
rep
lret
or
fucomp
add
add
mov
negl
incb
inc
sti
inc
insb
add
pushf
jno
dec
add
lret
popf
sbb
pop
add
aaa
incb
lahf
inc
add
add
add
jmp
inc
add
mov
adc
add
push
incb
ljmp
clc
add
add
nop
sub
incl
dec
add
mov
incl
cmpsl
sti
or
in
cmp
pop
push
add
scas
jl
popf
or
incb
inc
mov
sbb
push
add
sub
incl
jmp
out
xor
add
and
add
jns
pop
pop
incb
xlat
xchg
inc
add
xchg
xchg
or
cmp
mov
incb
dec
dec
add
incl
push
add
add
incb
xor
add
inc
pop
ljmp
mov
popa
adc
add
mov
out
pusha
add
add
mov
repnz
dec
int
pop
add
incb
mov
cmp
sub
push
sub
push
add
in
add
mov
add
mov
add
test
mov
add
js
int3
push
incl
fcomi
pop
add
into
jns
stc
pop
push
ret
jp
insl
add
add
loopne
incl
inc
add
call
add
sti
inc
aas
mov
ret
std
sti
jge
lcall
lea
incb
shl
mov
add
adc
add
ret
mov
add
add
incb
pop
mov
and
cmp
int3
dec
movsb
jb
mov
fstl
incb
xor
add
mov
add
add
add
incb
cmp
xchg
fbld
incb
mov
inc
add
xchg
mov
jg
add
loop
incb
dec
xchg
sub
add
cmp
and
add
xor
add
mov
add
add
add
enter
fimuls
int3
aaa
incb
or
add
push
sbb
mov
add
incb
sti
int3
inc
add
mov
not
shll
add
sti
cmpsb
icebp
xor
add
rorl
cmp
add
add
sbb
add
adc
add
out
xor
add
add
add
mov
icebp
lds
add
push
sub
addr16
scas
xor
fstps
add
cli
add
add
push
incb
out
cli
notb
incb
pop
add
sbb
shl
fbstp
add
jg
add
lret
outsb
add
add
pop
add
fsqrt
pop
cmp
or
addr16
addb
sbb
or
sub
add
cmp
mov
incb
scas
xlat
pop
pop
dec
sbb
cmp
add
incb
cli
jno
movsb
mov
add
bound
mov
mov
add
incb
adcl
cli
cmc
popf
fistpl
add
incb
jmp
dec
xlat
repnz
push
incb
cmp
and
add
add
add
cmpsl
nop
mov
cld
int3
cmp
add
dec
jno
add
add
rclb
dec
insb
add
add
mov
repz
nop
rcll
mov
jg
std
jnp
add
incb
sub
push
add
leave
lods
jmp
int
incb
data16
lret
scas
jae
add
add
call
and
test
aad
incb
rorb
std
cmpsb
std
mov
leave
push
lods
push
pop
in
in
incb
push
add
fstpl
mov
mov
dec
add
ljmp
incl
pusha
add
into
and
add
add
add
or
aad
jp
sub
incb
and
add
incb
in
add
aam
incb
aam
add
push
add
cmp
xor
mov
lods
lock
jns
inc
add
add
inc
das
sbbb
add
incb
data16
pop
add
dec
add
lods
pop
add
aaa
incb
stos
cmp
sbb
lods
mov
pop
jmp
incb
mov
mov
incl
sbb
insl
inc
add
add
add
add
incb
push
stos
mov
incb
fisttpl
inc
push
mov
shlb
incb
mov
push
mov
test
outsb
add
insl
push
mov
pop
push
add
add
add
or
in
sbb
xlat
mov
jge
incb
inc
xor
add
incb
repz
mov
push
add
push
push
add
lret
add
incb
mov
add
add
jbe
subb
mov
pop
fmuls
les
add
and
add
aaa
incl
xchg
xchg
mov
xchg
mov
jae
pop
das
jge
dec
add
and
nop
cmp
lea
cwtl
xchg
incl
adc
xor
add
dec
add
mov
sub
int3
movsl
rcr
mov
sub
incb
pop
jge
int3
xchg
sbb
jle
mov
inc
add
aaa
incb
test
repz
add
adc
add
add
jb
add
add
incb
loope
add
xchg
jp
lea
icebp
sarb
daa
incb
paddsb
xchg
stc
sbb
add
dec
add
dec
fisubrl
ret
cmp
jp
fstl
bound
xor
add
dec
shld
incb
push
incb
jb
scas
data16
jae
incb
aas
xchg
and
add
int
iret
adc
add
pop
cli
fadd
xchg
call
ret
dec
jb
popa
fiadds
incb
add
xchg
loopne
incl
dec
add
add
pop
incb
add
sub
int3
stos
xor
add
cmc
sbb
sbb
push
add
cmc
lcall
add
or
cld
xlat
fnstsw
mov
lahf
ja
incb
add
add
shl
ja
mov
in
add
test
rorb
add
push
cmp
pusha
add
incb
xor
add
in
xor
add
add
fstl
incl
pop
arpl
add
fistpl
add
add
add
add
add
add
shr
add
lods
mov
mov
cmpsl
outsl
imul
cltd
decl
add
scas
cmp
lret
xor
add
add
add
incb
rcrl
lods
imul
add
incl
insl
sub
dec
add
mov
movsl
sbb
fnstenv
dec
add
enter
add
pop
add
add
add
push
or
push
add
je
pusha
add
or
add
add
incb
lret
icebp
fisttpl
add
data16
fimull
add
rol
add
pop
loop
incl
shrb
lcall
fcoms
cli
call
add
add
xor
add
repz
mov
cmp
add
add
enter
ret
adc
add
out
cmpsb
into
je
mov
cmp
push
incb
sub
mov
dec
add
loop
add
stos
mov
inc
add
add
push
incl
jne
clc
iret
jl
cmpsb
and
add
hlt
incl
incb
pop
incb
adc
add
pop
dec
add
or
aam
incb
jle
negl
cld
sbb
sarl
add
aam
test
int3
sbb
outsl
dec
sub
and
mov
jge
cmp
movsb
mov
into
cmp
xchg
movsb
test
fbld
lcall
add
add
jo
stos
mov
cmp
dec
add
popf
mov
dec
add
add
incb
cli
pushf
call
in
xlat
and
add
enter
cltd
sub
mov
add
in
sbb
stos
scas
lods
and
add
incb
sbb
add
incb
push
incb
jb
fsub
push
incb
bound
cmp
jnp
and
add
sbb
add
add
sub
pop
jle
fsts
jle
call
add
sbb
jo
push
fwait
imul
push
incb
add
add
adc
add
sbb
filds
sarb
hlt
mov
sub
push
loop
in
mov
add
incb
cmp
add
add
incl
cmp
test
sbb
mov
add
add
cltd
push
incb
cmc
dec
fwait
inc
add
lea
das
mov
nop
cmove
pop
incb
jecxz
incb
xchg
ljmp
and
add
mov
add
incb
push
add
sub
mov
mov
incl
out
out
lcall
fcomps
mov
push
add
mov
pop
mov
idivl
lret
mov
int
incb
mov
aad
incl
inc
repnz
sti
adc
add
add
incb
or
add
add
ljmp
das
imul
iret
loop
add
mov
add
xor
add
repz
push
inc
add
or
adc
add
out
bnd
aaa
incb
in
mov
jnp
jbe
stos
mov
dec
or
incb
outsb
add
push
add
add
add
add
je
stc
push
xor
add
incb
add
mov
cmp
incb
pop
inc
das
xchg
sbb
loop
inc
add
xlat
movsb
outsb
add
xchg
xlat
movsb
and
add
incb
into
lcall
xchg
push
mov
lret
or
adc
add
js
in
incb
test
incb
and
add
add
incb
push
incb
ds
test
adc
add
add
adc
add
cmp
imul
add
inc
add
add
add
add
add
cmp
ror
sbb
xchg
pusha
add
push
test
add
incb
mov
add
cmp
add
pop
add
xor
add
std
sar
shll
or
popf
mov
mov
fstpl
nop
sahf
cmc
iret
sti
lods
outsb
add
add
lret
in
add
adc
add
into
ret
add
hlt
add
rolb
gs
imul
testb
mov
add
incb
aas
push
add
jmp
mov
shrb
xchg
xchg
incb
cld
mov
add
and
add
push
add
add
jne
add
add
sub
mov
std
aad
sub
popa
or
jl
add
add
addr16
push
add
push
add
shlb
add
loopne
arpl
sbb
incb
mov
cmpsl
ret
out
lock
add
add
out
cwtl
ja
lret
xor
add
lods
dec
sti
cmpsb
inc
add
push
add
dec
add
scas
mull
push
sbb
mov
incb
int3
inc
add
add
incb
ja
incb
fdecstp
add
add
cmp
xor
add
stc
mov
add
into
aam
add
imul
xchg
pop
inc
add
incb
pop
incb
les
fsubr
jbe
jl
pop
std
je
cmc
fistps
add
test
cmp
xchg
mov
mov
add
add
mov
cwtl
add
or
test
add
mov
daa
incl
loop
adc
add
incb
imul
jo
lcall
jbe
lret
add
or
shlb
add
mov
ljmp
incb
adc
add
add
sbbl
fsubrs
push
add
sbb
add
add
je
or
xchg
pop
add
cmpsb
jno
add
jne
mov
incl
test
dec
movsb
fcmovb
or
dec
jp
rcr
rorb
test
sbb
incl
pop
arpl
incl
cmp
incb
inc
sub
dec
add
add
scas
fisttpll
popf
mov
push
or
mov
in
mov
add
outsl
gs
ret
mov
xchg
jbe
lds
push
ljmp
stc
stc
dec
cmc
cs
adc
ret
lods
xchg
adc
add
sub
insb
add
incb
gs
lea
add
jns
popa
jmp
incl
or
add
sbb
stos
jmp
out
xchg
ret
sub
loopne
mov
fimull
inc
sub
push
add
test
incl
imul
add
ret
incl
and
add
jbe
push
push
xchg
sbb
incb
push
fisubrl
into
dec
jo
xchg
vpminub
xchg
shll
add
xchg
aam
incb
in
adc
add
icebp
mov
incb
aas
scas
out
jmp
add
mov
add
add
incb
mov
fwait
add
add
incb
jecxz
mov
add
jmp
incb
mov
add
push
incb
inc
xor
add
add
add
jl
jecxz
pop
fldenv
add
add
mov
popa
aas
negb
incb
sar
pop
incb
out
incb
inc
fisubrs
pop
js
cmp
in
jge
add
sar
pop
add
mov
mov
and
add
push
add
repz
std
outsb
add
push
leave
xchg
incb
dec
add
add
add
mov
fisubs
out
mov
incl
addr16
in
outsl
sub
sti
and
add
ljmp
dec
scas
aas
xlat
jmp
mov
incb
lea
add
xchg
aaa
incb
push
pop
fwait
push
add
push
pop
add
mov
pushl
incb
mov
incl
mov
ret
mov
adc
add
adc
add
dec
add
dec
add
push
add
jp
cmp
cmpb
incb
push
incb
out
std
add
add
sahf
cmp
pop
add
push
incb
mov
add
mov
pop
pusha
add
incb
negl
ret
add
sub
sub
int3
adc
add
jbe
cltd
incb
imul
insb
add
incb
je
jae
in
jae
add
ret
add
mov
add
add
fwait
test
add
and
subb
sub
add
add
ret
rcr
mov
add
add
enter
inc
add
test
push
add
incb
and
sbb
or
mov
add
push
dec
add
lea
lret
incl
loop
xchg
cwtl
push
incb
sbb
mov
add
adc
add
pop
xor
add
incb
adc
add
and
add
xor
loope
cmp
outsb
add
xor
add
loop
inc
ret
movsb
sbb
lds
add
mov
jmp
andl
jno
incl
incl
subb
add
pop
add
adc
add
push
add
pop
dec
jl
pop
add
jnp
inc
mov
mov
add
add
add
mov
adc
add
pushf
fisubrs
shll
add
gs
mov
sbb
mov
add
adc
add
incl
test
stos
lods
mov
daa
incb
in
sub
incb
jge
incb
mov
test
incb
push
stos
scas
and
pop
push
add
dec
add
push
incb
out
imul
xchg
cmp
jbe
push
enter
push
add
mov
and
add
negb
or
xchg
add
add
xchg
xor
add
add
cld
cmp
cmp
add
xor
add
add
incb
push
xor
add
or
incl
and
add
mov
add
incb
sbb
add
lods
mov
mov
inc
add
inc
add
add
incb
pop
add
adc
add
adc
add
adc
add
push
mov
aas
adc
add
mov
mov
add
repz
push
incb
mov
aam
fwait
adcl
pop
add
leave
cmp
add
mov
add
ret
cwtl
mov
leave
clc
mov
incb
jb
xchg
xor
add
notl
mov
add
dec
add
add
test
and
add
incb
call
add
test
loop
sub
int3
int
add
lret
push
je
and
incl
xchg
push
add
or
das
rolb
inc
add
fldenv
lcall
add
incb
jo
xchg
push
add
inc
daa
incb
clc
repz
inc
mov
andb
dec
mov
incb
jle
insl
sbb
or
sub
cmc
sub
push
add
add
incb
sbb
push
hlt
push
incb
ljmp
imull
lahf
push
push
add
jae
std
gs
push
adc
call
jne
popa
xchg
mov
add
lahf
push
xor
add
add
add
mov
lret
sub
sub
ja
fwait
mov
fbstp
add
incl
test
or
in
mov
cld
orl
incb
jb
in
cwtl
sbb
jo
into
leave
xor
add
daa
incb
popf
mov
push
incb
daa
incb
xor
add
loope
cmp
incb
mov
bound
incl
repnz
mov
adc
add
insl
adc
add
sbb
incl
aad
adc
add
rorb
push
out
int3
shrb
cmp
jl
cld
or
jecxz
mov
lock
stos
outsl
scas
popf
adc
add
sub
dec
jne
mov
aas
lods
jo
pop
in
stos
and
add
incl
add
add
dec
add
add
xchg
pop
add
in
incb
mov
mov
test
push
add
mov
mov
test
jne
sub
push
add
add
orl
add
clc
loop
cmpsb
pop
lcall
and
add
add
movsb
sub
ljmp
popa
mov
incb
push
add
into
mov
incl
in
mov
push
mov
sub
xlat
sbb
xchg
push
mov
std
lahf
cmp
incb
mov
stc
div
inc
ret
fabs
and
add
les
scas
push
incb
shlb
js
and
add
mov
mov
lock
add
stos
jo
jmp
mov
in
xor
add
cmpl
push
test
add
inc
add
outsb
add
push
add
out
stos
xchg
jg
adc
add
shll
add
mov
add
incl
enter
push
sub
fs
sbb
popf
or
cli
lahf
inc
add
mov
incl
inc
add
adc
add
add
pop
stc
std
lahf
dec
movsl
dec
add
sahf
push
add
jmp
je
out
push
add
pop
add
mov
test
cld
cmp
add
add
incb
jo
call
xlat
jge
add
add
incb
inc
add
add
clc
nop
into
pushf
ljmp
add
jae
push
jge
fwait
lods
xchg
out
int
out
fcomps
sbb
orb
add
incb
xchg
xchg
incb
rorl
mov
das
push
incb
mov
mov
xorl
and
add
out
jns
out
fisttpll
add
add
incb
mov
and
add
pop
xor
add
mov
jno
incb
loopne
add
add
add
fidivl
in
js
jmp
incl
mulb
mov
xchg
lock
add
fisubrl
mov
mov
mov
and
add
add
cmp
cld
test
test
add
notl
add
pop
add
lret
inc
add
mov
xor
incl
add
jno
mov
sbb
jmp
inc
add
add
or
repz
incb
pop
incb
mov
popa
pop
incb
jbe
xor
mov
repz
adcb
add
incb
test
cmp
add
add
incl
std
mov
or
incb
in
mov
nop
or
shlb
or
das
jg
sbb
incb
movsb
iret
cli
xor
add
sbb
inc
add
lods
data16
xchg
dec
add
scas
out
xor
add
pop
movb
xchg
bound
and
add
pop
inc
add
incl
ficomps
inc
add
add
out
incb
pop
dec
add
sub
push
incl
push
add
mov
jle
inc
aas
lret
movsb
loopne
ret
ret
subb
add
fnstsw
mov
sub
scas
add
add
add
add
add
dec
add
out
js
stc
push
add
sarb
std
lret
les
incl
cvttps2pi
mov
add
in
xor
aam
add
sbb
pop
lret
jb
push
add
sarb
xchg
or
add
incl
out
cld
aaa
incb
add
sbb
xchg
insl
data16
jge
add
mov
cmpsl
pop
add
mov
scas
xlat
jmp
popf
jno
push
add
std
mov
add
incb
add
add
add
xor
out
add
add
mov
stos
ret
testl
data16
jns
incb
inc
add
add
das
sbb
pusha
add
add
push
incl
push
xor
add
xchg
mov
add
inc
pop
mov
mov
pop
incb
cmp
dec
cmp
aam
or
jae
and
add
sub
add
cmp
sbb
xchg
dec
loopne
add
dec
push
add
movsl
daa
incb
xor
add
std
and
add
incb
jg
add
sub
cmc
shlb
sbb
aam
incl
popa
sub
mov
dec
dec
add
add
incb
fbstp
test
enter
incl
jl
dec
jg
incb
jno
xor
push
incb
mov
incb
adc
add
cmp
fimull
cli
mov
incb
dec
add
incl
scas
fstl
add
sbb
mov
lret
loopne
inc
add
rorl
fisubl
insl
jmp
mov
xor
add
push
xor
add
daa
incb
clc
rcrb
cwtl
push
incb
mov
sub
das
or
pop
jo
xor
add
cli
or
in
sub
incb
incb
cwtl
mov
sbb
mov
add
icebp
sbb
inc
add
lock
push
jne
mov
add
out
inc
stos
mov
add
add
xchg
ja
add
mov
out
jl
dec
push
jae
mov
add
call
sbb
cmp
test
mov
in
enter
arpl
jae
add
hlt
shl
incb
inc
pop
jge
add
add
sub
and
add
mov
unpcklps
add
dec
add
mov
add
incb
mov
add
incb
add
push
incb
sbb
loop
or
add
insl
mov
add
aaa
incb
nop
xor
add
sti
stos
popf
cmpsb
mov
add
cmp
arpl
inc
add
add
add
incl
pop
add
add
and
add
incl
incb
adc
add
add
pop
cli
sbb
incl
daa
incb
jmp
leave
mov
incb
xor
or
ret
cmpsb
mov
push
add
incl
mov
rcr
or
rolb
add
jo
inc
in
lret
add
enter
add
add
incb
in
xchg
xor
add
sbb
or
test
popf
xor
add
incb
cmc
add
add
add
add
in
and
add
js
test
add
pop
add
dec
push
add
add
scas
out
lret
add
push
add
add
jne
jne
dec
ret
add
dec
add
push
or
scas
scas
in
incl
xchg
jnp
test
add
add
add
add
sbb
jae
sti
and
add
adc
add
add
add
fwait
mov
incb
sbb
arpl
inc
add
or
add
add
dec
add
lods
pop
mov
sub
addr16
cmp
test
mov
or
fsubrs
js
cmp
jmp
incb
jbe
popf
lods
movsb
mov
push
add
incl
in
add
daa
incl
jl
inc
add
test
add
shll
loopne
rclb
incb
data16
mov
add
add
incb
into
shr
mov
incb
dec
add
ficoms
or
pop
add
jbe
incb
jbe
push
add
out
jmp
add
and
dec
cmp
mov
addr16
lock
pop
push
add
incb
push
jecxz
hlt
gs
mov
add
add
incb
sub
popa
jns
incb
jae
cmp
push
cmp
incl
xor
clc
mov
data16
lcall
mov
push
add
incb
int
dec
add
add
or
inc
test
icebp
add
add
add
add
incb
int
mov
and
inc
add
push
add
add
add
incl
add
add
add
cmp
jge
mov
lds
xor
add
xchg
and
add
mov
add
lea
fsubr
cmp
add
add
mov
inc
in
push
outsb
add
pop
incb
call
and
add
cmp
dec
bound
or
incb
gs
cmp
push
incb
adcl
mov
out
repnz
incb
out
mov
bound
in
incb
sub
lret
aam
pop
add
cmovne
pop
add
mov
cmc
jecxz
mov
out
push
add
aaa
incb
dec
add
add
dec
mov
incb
int
mov
sub
add
add
add
add
pop
add
and
add
nop
scas
cmp
jp
inc
add
push
add
mov
icebp
incb
mov
xor
add
aad
incb
out
jno
incl
scas
xchg
in
outsl
in
inc
add
add
incb
adc
add
incl
in
adc
add
sub
mov
mov
adc
add
add
inc
fdiv
jp
std
shl
add
sub
test
add
jp
test
jmp
mov
mov
xor
add
add
pop
aad
adcl
jbe
arpl
add
cmc
stc
loopne
imul
nop
push
or
add
add
mov
cltd
arpl
test
ds
mov
mov
incb
dec
push
icebp
add
jo
add
add
add
rcrl
or
incb
stos
cmpsb
sub
sub
sbb
jne
add
or
xor
add
or
xchg
xchg
sar
and
add
aas
jp
xchg
sbb
xchg
mov
movsl
nop
gs
jge
add
add
sub
into
in
adc
add
add
add
or
repz
add
pop
add
iret
push
add
hlt
pop
add
loope
icebp
lods
push
add
data16
adc
add
stos
incb
push
add
incb
loope
iret
add
add
fst
lret
add
jns
add
fnstenv
incb
mov
inc
add
je
add
iret
mov
xchg
dec
add
incl
mov
mov
xchg
add
and
add
lea
cmp
jns
jne
or
std
adc
incl
mov
push
incl
iret
popa
mov
imul
in
dec
mov
push
call
sub
add
add
add
add
incb
in
lcall
add
mov
xchg
jo
and
fxch
push
push
add
incb
jg
std
out
jle
mov
sbb
xchg
add
orl
cmpsb
push
xchg
sub
lea
incl
adc
add
add
scas
fistpl
mov
pop
add
test
add
incb
sub
in
loope
push
inc
mov
add
add
fmuls
aad
ret
dec
dec
adc
add
add
stos
in
ljmp
sbb
aam
mov
add
jno
cmpsb
mov
jmp
cld
inc
mov
and
add
mov
incl
dec
add
jp
and
add
adc
add
inc
xlat
xchg
insl
mov
add
cltd
inc
add
mov
add
in
add
das
or
pop
add
incl
imul
add
sub
test
incb
jo
fcmovbe
mov
int3
mov
add
push
add
adc
insl
lock
pop
add
xor
add
add
push
incl
or
mov
xor
add
add
adc
add
sar
pop
outsb
add
add
or
ret
mov
or
push
mov
add
sub
add
add
mov
out
add
jp
add
add
aaa
incl
mov
insl
lods
lods
xor
add
shrl
add
pop
push
incb
pop
stos
out
jae
add
incb
rcrb
xor
add
add
xchg
repz
add
ljmp
add
incb
dec
add
add
pop
incb
or
bound
add
add
add
insb
add
in
mov
incb
mov
mov
testl
incb
out
shl
clc
mov
movsb
inc
add
repz
add
jg
in
dec
add
incb
xchg
lcall
mov
add
jbe
mov
inc
jb
shl
or
incb
mov
aaa
incb
in
ret
cmc
lods
adc
push
add
cli
inc
incb
faddl
lret
repz
inc
add
xor
add
scas
push
add
jae
jp
daa
incl
mov
jg
add
incb
pop
add
adc
add
add
incb
pop
mov
add
jmp
popf
mov
xor
add
incb
xchg
xchg
sub
xlat
jns
mov
add
incb
adc
add
and
add
xlat
mov
and
add
subb
incb
inc
mov
add
add
add
mov
add
leave
icebp
push
sbb
cmp
pop
jae
add
ja
cs
std
addr16
mov
add
mov
incl
jbe
xchg
scas
and
add
add
add
xor
add
cwtl
daa
incl
xchg
insb
add
mov
in
adc
add
add
fiadds
xchg
cwtl
ficomps
or
ja
mov
sub
xor
add
add
mov
incb
sub
dec
ja
add
cwtl
mov
mov
fdivr
xchg
adc
add
xor
add
loop
sbb
ljmp
incb
insl
lods
sub
xor
add
sarb
sarb
fdivs
shlb
xorl
add
add
incl
inc
jb
mov
add
add
scas
dec
add
fnstcw
dec
add
incl
xchg
jns
add
std
cmp
lock
mov
incl
jmp
and
sbb
outsb
add
add
jl
xlat
pop
imul
add
xlat
lret
and
add
pop
js
inc
lea
mull
incb
ficoml
add
incl
movsb
bound
pop
add
jbe
mov
incl
push
add
incl
mull
incl
add
add
incb
add
popf
aad
incl
pop
add
dec
add
mov
pop
incb
sbb
loope
inc
mov
mov
incb
incb
dec
sbb
add
incb
mov
add
into
sahf
xor
add
incl
sbbb
and
add
adc
add
jge
add
insl
pop
mov
add
add
jno
mov
add
incb
lods
lds
incb
mov
incb
or
jae
mov
pop
add
add
xor
add
fs
sahf
inc
sub
test
cli
ret
pop
incl
inc
add
mov
mov
incb
jae
add
repnz
xchg
jg
add
mov
add
xor
add
stc
cmc
xor
add
cmp
incb
xchg
cli
jecxz
incb
cmp
push
mov
and
add
add
outsb
add
incl
scas
in
add
and
add
loop
clc
comiss
sti
push
mov
xorl
add
incb
xchg
out
repnz
test
sub
dec
cmp
cmp
incl
push
incb
push
add
pop
add
cmpsb
push
add
incb
loop
fimuls
test
add
incb
jbe
mov
add
shl
fwait
std
lret
das
data16
jl
gs
add
andb
add
out
add
dec
dec
add
mov
add
cwtl
insl
test
outsb
add
push
push
add
xlat
jae
add
add
mov
add
and
add
inc
add
stos
shl
into
jp
data16
ljmp
incb
call
lods
mov
lock
add
mov
push
incl
jle
adc
push
add
leave
mov
or
cmp
or
out
sti
je
sbb
imul
movsl
mov
and
sub
data16
add
fdivl
out
mov
add
lods
xor
add
push
add
dec
add
sbb
jp
ret
push
incb
add
add
dec
xor
add
push
stos
xchg
gs
add
mov
sbb
mov
jns
jb
rcll
incb
xchg
int
xor
add
imul
add
add
call
add
dec
outsb
add
add
add
push
add
fcmovne
incl
or
lret
xchg
and
add
addb
add
incb
or
or
xchg
incb
add
add
loop
dec
or
jge
rorl
jno
pop
incb
jecxz
add
incb
stos
add
add
mov
mov
and
add
daa
incb
scas
pop
incb
xlat
xor
add
jecxz
pop
add
incb
addr16
add
int3
xchg
dec
and
sahf
cmp
leave
dec
mov
rol
sbb
add
add
je
xchg
jle
mov
mov
or
fildl
cmpsl
test
in
js
in
or
gs
incb
mov
mov
iret
jge
add
add
sub
in
out
mov
in
and
add
jb
or
add
out
loop
add
incb
pop
sbbb
cmpsb
orl
outsl
icebp
adc
add
incb
xchg
xchg
mov
add
std
or
inc
add
adc
add
incl
push
add
xchg
iret
aas
addb
pop
push
add
add
add
pushf
data16
xchg
and
add
add
lods
adc
add
xor
add
stc
in
jl
mov
ffreep
or
cmp
clc
mov
add
incb
loop
sahf
incl
adc
add
push
add
add
ja
pop
and
add
add
add
cltd
movsb
inc
add
or
dec
iret
push
incb
pop
incl
sahf
mov
and
add
dec
push
add
sahf
xchg
xchg
dec
add
inc
add
inc
data16
xor
add
or
sub
sbb
negl
xchg
xor
add
mov
jl
adc
add
arpl
sarl
imul
sbb
incl
popf
mov
pushf
popf
xchg
pop
xchg
fsts
incb
fwait
incb
shll
sbb
mov
cmp
out
divps
cmp
cmp
lcall
add
add
add
incb
cmp
xor
add
jb
test
incb
popa
movsl
movsl
add
rolb
add
decb
test
lret
add
mov
or
mov
test
adcb
dec
in
bnd
jecxz
add
add
adc
add
bound
pusha
add
add
xor
add
add
add
add
incl
lahf
icebp
fstl
add
add
add
cli
mov
add
add
rcrl
xor
dec
add
loopne
sbb
sbb
sub
sub
dec
add
xor
add
add
cmpsb
std
or
lret
add
add
cli
data16
push
add
cmpsl
push
add
je
fsubrl
mov
je
loop
add
add
movsb
add
add
incb
mov
mov
arpl
fnstenv
out
in
int
add
jl
sar
add
incb
lcall
or
mov
in
decb
movsbl
sbb
lahf
ds
sbb
xchg
divb
incl
bound
pop
leave
sub
in
add
push
add
incb
and
add
out
imul
push
add
incb
imul
add
add
inc
cmp
push
adc
add
cltd
mov
push
xchg
out
fisttpll
subl
fidivrs
add
imul
add
fcompl
dec
popa
sbb
incl
cwtl
std
add
push
lret
dec
add
dec
add
add
add
push
js
pop
add
push
push
repz
add
adc
add
incb
xor
add
mov
aaa
incb
sti
pop
incb
xchg
imulb
out
xor
add
incl
cmp
mov
add
push
arpl
addr16
add
ffreep
pop
jnp
cmp
mov
ljmp
incl
repz
lret
test
xor
add
incl
loopne
cld
inc
add
add
or
push
addr16
bound
lds
nop
inc
out
push
scas
inc
jbe
mov
fstpl
add
add
pmuludq
incb
sbb
jecxz
adc
add
or
test
add
bound
in
push
incb
xchg
jns
push
add
pop
push
add
incb
in
add
lea
incb
cmc
cmp
call
add
mov
mov
add
sub
insl
push
add
xor
add
dec
add
add
incb
sbb
dec
add
call
add
or
pop
add
add
out
sbb
ficoml
movsb
inc
add
and
add
xchg
push
incl
xor
dec
add
data16
add
add
add
incb
cmp
add
jmp
fwait
jb
push
incb
lea
incb
dec
add
add
xchg
cmp
incb
mov
out
add
add
mov
jnp
cmpb
xor
add
stos
addl
add
xchg
add
add
add
add
add
add
inc
or
mov
pop
add
out
pushf
push
add
mov
incb
add
add
jle
jle
and
add
push
and
add
push
add
xor
add
mov
fcmove
clc
adc
repz
mov
incb
jne
mov
dec
add
incb
ret
and
add
inc
add
cmpsl
pop
incb
pop
xchg
pop
adc
add
mov
out
lea
addr16
mov
dec
cmp
add
lcall
incl
icebp
imul
call
add
incb
into
jle
stc
imul
fldenv
incb
test
pop
add
add
incl
out
mov
add
xor
xchg
incb
clc
pop
add
incb
incb
movups
add
pop
lret
fwait
ret
add
add
add
arpl
xor
incb
sti
arpl
sub
fdivl
pop
add
add
incb
xchg
jle
lock
hlt
push
incb
lret
sarl
add
loope
rorl
mov
add
incb
imul
add
add
test
in
jmp
jl
mov
incb
xchg
mov
cli
fwait
xlat
add
add
incb
ljmp
incb
testb
incb
cmp
add
shlb
incb
hlt
clc
daa
incl
xor
add
incb
inc
add
add
incb
sbb
stc
sub
add
add
incb
xor
xchg
das
mov
popa
add
push
add
lods
add
cmp
sub
adcb
add
add
add
incl
mov
sti
je
lea
idivb
jp
add
fwait
and
add
cmp
mov
mov
xor
add
dec
add
incb
fisubs
imul
push
add
incl
xchg
sbb
xchg
fsqrt
and
add
incb
cmp
dec
jge
jno
sbb
std
fwait
int3
pop
add
dec
adc
add
add
ficoml
xchg
push
or
lret
xor
add
incl
inc
add
add
push
add
incb
cwtl
xchg
add
incb
cmp
shl
in
mov
sbb
cmp
lret
mov
outsb
add
add
nop
fistpll
add
mov
call
inc
jmp
add
mov
int3
lcall
xor
add
pop
arpl
int
cmp
fisubrl
xchg
adc
add
fwait
mov
mov
add
mov
incb
pop
or
fistpl
out
pop
xchg
mov
mov
cltd
mov
dec
popa
mov
add
shrl
mov
dec
add
popf
mov
incl
lahf
cmpsl
mov
cmp
and
add
incb
int3
lea
cmp
jl
xor
add
xchg
xor
add
add
incb
sbb
rorl
mov
add
add
or
popf
cmp
xchg
mov
inc
add
sub
imulb
shl
js
mov
add
push
add
addr16
add
test
add
add
add
incl
xchg
dec
push
push
incb
add
add
mov
sbb
in
sub
jmp
insl
rolb
add
out
test
or
jae
incb
popf
lods
sbb
incb
add
add
jbe
sahf
or
incb
js
or
xchg
je
cmp
outsb
add
mov
incb
imul
xor
add
scas
cmp
in
sbb
mov
jg
mov
aas
dec
add
aaa
incb
aas
sub
iret
cltd
into
daa
incb
lret
outsl
dec
insl
imul
add
scas
jl
add
add
xchg
int3
dec
sbb
or
rorl
jl
mov
clc
fucomip
dec
add
je
inc
leave
inc
add
and
add
incb
xlat
xlat
push
mov
add
daa
incb
add
add
incb
loope
mov
add
add
insl
and
add
add
cwtl
add
add
inc
or
add
in
lock
add
sbb
int
jp
push
and
test
vmread
das
mov
add
pop
incb
das
add
add
incb
or
jle
jl
mov
incl
shl
xchg
xchg
push
add
add
je
mov
stos
pop
push
pop
incl
sbb
icebp
sub
cmp
and
add
incb
mov
mov
add
das
jl
fwait
test
cmp
add
mov
add
add
add
mov
add
loope
add
incb
ret
add
incb
mov
add
add
pusha
add
aam
pop
sarb
jl
mov
incl
add
add
mov
insb
add
sbb
in
sbb
sti
jp
add
add
xorb
push
incb
in
fwait
adc
add
std
mov
rclb
add
adc
add
mov
fstpt
add
sub
ljmp
cli
xrelease
roll
mov
ljmp
int3
stos
push
add
movsl
bound
push
sbb
shll
add
sbb
add
lds
adc
add
popa
xchg
repz
sahf
and
add
int
push
add
inc
add
add
ljmp
add
add
insl
lcall
rorl
ljmp
incb
pusha
add
inc
cwtl
xorl
sbb
pop
repnz
mov
icebp
out
test
dec
add
pop
add
scas
cmp
fildll
decb
add
mov
incb
lods
or
add
add
sbbl
inc
aam
test
rcll
sub
orl
incl
xchg
dec
add
mov
add
incb
add
add
push
xor
add
incb
pop
in
adc
add
sti
adc
add
pop
dec
add
incb
xchg
jle
ljmp
add
add
add
push
add
outsl
in
loop
adc
add
movsl
pop
incb
fsubrl
incl
inc
add
jmp
ficoms
dec
frstor
inc
sbb
push
add
mov
das
dec
mov
add
icebp
jge
xchg
add
addr16
xor
add
repnz
add
incb
cmp
std
sbb
add
add
add
aad
enter
add
jmp
push
add
dec
add
add
add
cmp
xchg
jno
jo
int3
out
push
add
adc
incl
daa
incb
cmp
pop
incb
add
add
sbb
add
add
inc
test
rclb
incb
scas
sub
xchg
adc
add
incb
aaa
incl
incb
pop
add
repz
inc
xor
add
hlt
pop
add
aam
add
add
sbb
incl
sub
sub
mov
cmpsl
sbb
lods
std
mov
fimuls
mov
xchg
add
add
add
and
add
add
xor
add
push
incb
fdivrs
add
mov
or
cmpsb
clc
fisttpll
in
iret
mov
xchg
xchg
xchg
cmp
add
insb
add
loopne
add
pop
add
incl
stc
mov
bnd
incl
ret
push
cld
in
inc
pop
pop
add
mov
dec
jno
push
incb
cmp
incb
icebp
sub
adc
nop
jae
movsl
stc
xor
add
incb
stc
mov
jns
add
incb
aam
add
add
sbb
ret
insl
cmp
or
into
mov
pop
add
fwait
xorl
sub
sbb
mov
shr
out
fwait
sbb
push
daa
incb
cmp
mov
or
jg
incl
adc
add
add
add
test
je
add
iret
js
cmc
dec
add
fdivrs
xor
add
mov
rclb
add
out
incb
sbb
mov
movsl
add
add
or
mov
cmpsb
sub
fxam
mov
cmpsl
mov
add
jae
push
mov
aam
add
jno
add
arpl
incb
mov
addr16
incb
xchg
or
xchg
lcall
sbb
sbb
sub
into
cmpsb
sub
add
add
inc
add
jecxz
incb
add
push
add
std
sub
incb
xchg
lahf
nop
add
sbb
add
out
push
dec
addr16
sub
gs
pop
add
ficoms
incb
adc
add
cmp
cmp
dec
add
add
incb
xchg
rcrb
add
adc
lods
xor
add
add
xchg
cmp
ret
adc
add
incb
arpl
and
add
xor
adc
add
lock
add
pop
incb
mov
add
incb
xchg
ja
sub
xor
and
add
popf
outsb
add
repnz
insb
add
dec
add
push
cmp
push
add
sub
inc
add
ja
incl
or
dec
add
imul
hlt
ja
or
jmp
incb
sahf
add
jge
add
sarb
loopne
cmpb
add
add
push
add
add
add
shlb
incl
pop
add
incb
jno
mov
div
pop
in
aad
imul
incl
sbbb
or
loop
incb
enter
icebp
or
stos
xor
add
out
dec
adc
add
lahf
push
sahf
lcall
popf
add
dec
add
incb
ljmp
add
add
incb
cld
dec
add
add
incb
shr
cmp
jns
leave
ret
pop
popa
or
incb
mov
data16
sbb
incb
push
bound
pusha
add
roll
incl
cmp
dec
add
enter
mov
xchg
jl
popa
in
add
xchg
add
add
repz
incb
aad
mov
xchg
roll
movsl
push
add
mov
in
aam
add
push
add
and
add
inc
add
and
add
sbb
cmpsl
push
add
incl
xor
add
add
incb
hlt
incl
cmpsb
mov
fwait
in
inc
lds
add
cmpl
loope
add
push
lahf
dec
add
incb
xor
add
jne
les
add
or
sti
add
add
cmp
mov
push
add
cmp
movsb
xorb
add
add
adc
add
add
jns
jle
outsb
add
mov
incb
daa
incb
fdiv
mov
inc
add
add
xlat
push
mov
xor
add
into
cltd
cld
mov
outsb
add
add
push
add
add
add
incb
cmp
in
test
xor
add
rcl
mov
inc
sahf
dec
leave
mov
sbb
fstp
outsb
add
sub
mov
add
fcmovbe
mov
ljmp
add
incb
das
push
addr16
hlt
sahf
and
add
jecxz
add
mov
dec
add
push
subb
in
nop
out
or
push
add
incb
cli
jl
add
add
incl
inc
add
adc
add
cmp
mov
leave
xor
add
loopne
add
jmp
stc
and
add
loope
incb
loopne
add
incb
cmp
sarl
add
ficomps
add
cmpsb
iret
adc
add
or
xchg
inc
add
add
add
xchg
jge
mov
mov
lret
mov
popa
mov
lret
xchg
and
add
or
and
add
push
add
dec
jmp
add
cmp
fsubs
test
add
incb
inc
and
add
jno
add
pop
incb
push
incl
adcl
incl
out
jp
and
add
incb
cmp
sub
out
out
jl
and
add
push
cmpsb
js
mov
pop
incb
pop
mov
or
push
incb
lods
mov
add
inc
add
mov
mov
add
add
add
dec
jae
add
add
in
fcompp
out
cmc
fstpt
add
fdivrp
imul
add
loop
cmc
pop
lret
add
daa
incb
jo
jge
dec
inc
cmp
addb
pusha
add
in
add
dec
xchg
xacquire
rcl
or
add
ret
mov
dec
add
mov
sbb
pop
xor
add
add
ljmp
jg
stos
or
cmpl
cmp
cltd
fildll
add
das
aaa
incb
int
add
and
add
cmpsl
xchg
jecxz
add
incl
insl
jns
add
add
mov
add
and
add
mov
add
sub
int
mov
inc
sbb
add
add
insb
add
mov
incb
mov
xor
add
and
add
add
cs
inc
add
incl
adc
add
ret
lods
incb
cs
xor
add
add
mov
adc
add
add
idiv
adc
add
mov
outsb
add
add
lcall
shrb
incb
leave
push
incl
sahf
push
add
jg
sub
sbb
jae
inc
mov
stos
imul
shlb
add
push
arpl
subb
pusha
add
mov
add
mov
pop
xor
js
cwtl
pop
add
incl
inc
add
daa
incb
pop
incb
out
jge
cwtl
or
vandps
in
out
rorl
inc
add
xor
add
incl
loope
add
jbe
fstpt
cld
pop
add
xor
add
add
lret
into
push
add
adc
add
add
incl
inc
add
scas
std
mov
adc
insl
arpl
incl
aas
pop
add
mov
add
xor
add
incb
lods
je
dec
add
add
pop
incl
mov
push
and
add
mov
add
xor
add
incb
pop
add
xor
add
xor
add
iret
mov
jecxz
ret
cmp
fsubr
ljmp
and
add
incb
push
movsb
enter
and
add
pushf
mov
negl
pop
pop
je
andb
add
incl
iret
dec
mov
sahf
call
sbb
add
incl
out
add
xchg
incb
out
cmpsb
or
cmc
cmpsl
test
incl
lock
incb
xchg
xor
add
pop
push
add
incl
imul
sbb
fdivs
incb
push
add
outsb
add
add
incb
push
incb
scas
sti
mov
sbb
add
add
js
bound
je
adc
add
add
push
add
incb
add
incb
movsl
adc
add
aaa
incl
xchg
push
add
mov
add
cmpl
sub
insb
add
jmp
cmp
addb
and
add
sub
lahf
xor
add
incb
sar
js
add
add
aas
mov
incb
sub
xor
add
insb
add
insl
int3
cmp
add
add
xor
add
incb
loopne
or
jge
outsl
aaa
incb
cmp
mov
add
add
mov
stc
add
add
incb
insb
add
icebp
das
push
xor
add
pusha
add
out
add
add
dec
std
stos
cmc
and
add
mov
mov
sbb
sub
cmp
add
add
incb
inc
add
mov
add
sub
ret
inc
mov
add
add
add
jno
add
pop
add
add
dec
mov
add
push
add
inc
add
pusha
add
incb
loop
incl
push
incb
fsts
shlb
jg
add
or
add
jge
dec
incb
mov
add
pop
add
bound
xor
add
incl
add
sahf
cmp
lods
or
fidivrs
add
push
loopne
pop
incb
out
ficoml
add
xchg
add
shl
add
add
incb
add
add
sub
jl
loop
jle
cwtl
ljmp
popf
xlat
lret
cwtl
push
add
add
add
add
incl
mov
incb
mov
popa
jle
jecxz
sbb
jg
scas
fldl
incl
xchg
dec
add
in
bswap
mov
aad
add
add
xchg
and
add
sub
bound
test
and
add
sahf
xchg
lret
mov
add
add
incl
in
ja
jge
incb
loop
add
add
add
cmp
xchg
add
mov
incl
in
dec
add
xchg
mov
add
add
nop
lahf
mov
incl
xchg
ret
push
add
mov
xchg
push
mov
xchg
cmp
pop
add
bound
cmp
add
add
incb
cmpsl
daa
incb
jb
inc
add
pop
incb
xor
add
inc
add
mov
loopne
incl
xor
add
movsb
popa
push
add
incb
pop
cli
sub
incb
fbstp
jno
gs
sub
and
add
out
add
cmp
add
in
inc
mov
pop
in
mov
in
or
icebp
pop
xchg
cld
mov
js
add
add
xchg
add
add
rclb
incl
add
add
adc
add
add
xchg
inc
jle
js
sbbb
mov
add
andb
add
add
cvttps2pi
or
add
aam
add
movsl
xchg
gs
cmp
or
movsl
xchg
pop
add
incb
cld
aam
cwtl
push
incb
mov
incb
aad
lds
bound
or
incb
adc
sbb
xchg
jmp
loop
loopne
into
mov
int
cmp
add
outsb
add
and
add
jno
mov
dec
jecxz
lods
jmp
stos
adc
add
mov
mov
incl
xchg
shlb
movsl
ljmp
or
adc
add
incl
sti
mov
data16
inc
add
xchg
inc
add
cli
pminub
scas
dec
push
ret
in
xlat
add
add
shll
add
add
add
add
add
stc
mov
push
add
shrb
cmp
cmp
lea
incb
daa
incl
jbe
xchg
sub
xchg
add
or
rcr
fwait
and
add
clc
push
incb
mov
add
add
mov
dec
add
add
add
cmp
bound
mov
outsb
add
incb
imul
incb
lock
nop
pusha
add
fnstcw
pop
incb
in
jns
jl
idivb
iret
push
incl
jmp
imul
pop
imul
add
add
test
push
add
cmpb
sbb
pop
sbb
fsubs
incl
popf
mov
mov
add
and
cld
fwait
sarb
xchg
out
movsl
and
add
lock
add
incb
rol
jecxz
mov
or
out
enter
cltd
sti
fwait
xor
add
lret
aam
adc
add
andb
add
add
incb
pop
xlat
adc
add
dec
add
inc
je
fwait
shrb
imull
pop
incb
ljmp
cmpsb
sub
lret
outsl
mov
cld
push
mov
cmpsl
divl
push
in
add
mov
dec
mov
stos
data16
xchg
out
dec
aad
lock
add
add
cltd
lods
leave
adc
add
adc
add
lods
bnd
data16
incb
cld
push
add
add
ret
ror
enter
add
and
add
add
das
shlb
incb
dec
dec
add
mov
push
add
data16
testl
mov
or
je
outsb
add
adc
add
mov
dec
add
add
add
push
add
incb
lock
incb
data16
stos
insb
add
add
jle
cwtl
mov
mov
mov
mov
incb
xor
or
add
incb
iret
jg
add
pop
incb
fstpt
inc
add
aas
fwait
sbb
or
inc
add
add
jl
add
testb
incb
movsl
rorl
xchg
in
test
bound
and
add
scas
loopne
add
add
fiadds
add
and
add
ret
cmpsl
pushf
nop
push
add
incl
dec
add
imul
jmp
add
lret
jbe
incb
stc
or
out
sti
xchg
popa
cmpb
or
or
enter
add
incl
scas
hlt
test
int
dec
bound
mov
jecxz
incb
sub
inc
xchg
add
add
shl
xor
add
ljmp
add
incb
add
add
mov
mov
sbb
lock
in
imul
sahf
data16
add
test
mov
data16
and
add
incb
cmp
add
clc
fsubs
pop
aas
sahf
dec
push
incl
inc
add
mov
adc
or
mov
shrl
mov
xor
add
push
ret
pop
add
jae
add
movsl
jecxz
incl
aaa
incb
outsb
add
and
add
loopne
add
fiaddl
incb
mov
add
add
add
fisubrl
add
add
cmpsl
xchg
inc
and
add
dec
add
inc
add
incb
mov
fdivrl
incb
cwtl
pushf
test
xor
add
add
incb
push
enter
subl
data16
xor
mov
call
mov
add
add
add
mov
add
add
add
adc
add
incb
sub
into
popa
popf
mov
inc
add
add
daa
incb
or
sub
incl
pop
jmp
push
shrl
sarb
add
ljmp
adc
hlt
pop
loope
adc
jne
add
add
incl
insl
pop
orb
mov
insl
shrb
and
add
add
add
mov
loopne
xchg
or
insl
out
jns
mov
frstor
incl
cmpsb
into
out
sub
incb
out
xlat
stc
int
push
pop
stos
les
xor
add
incb
cmp
incl
inc
add
incb
push
incb
push
add
inc
clc
jl
sahf
pop
add
push
incb
incb
adc
add
add
add
aam
add
cmp
in
add
incl
mov
hlt
scas
cld
jp
jl
dec
add
notb
add
inc
mov
pop
sarb
add
cmp
mov
add
rcrb
push
mov
bound
mov
rclb
incb
xor
add
add
add
mov
test
sbb
cmp
jne
cmpb
out
push
pop
adc
add
pop
add
dec
dec
add
add
clc
pushf
orb
cmp
and
add
add
popa
and
add
push
add
add
incb
incl
inc
add
add
dec
xor
push
inc
add
add
add
or
inc
add
incb
rolb
incb
lret
dec
dec
adc
add
scas
sbbl
gs
add
add
cld
lock
sub
mov
icebp
cmpsl
mov
imul
add
loope
add
incb
push
add
add
add
sbb
and
add
mov
mov
insb
add
add
incb
shl
popf
cmpsb
mov
and
add
shlb
sbb
imul
and
add
or
imul
ret
test
add
cmp
adc
add
add
pop
mov
mov
add
sub
push
add
lods
std
mov
clc
mov
sti
shll
mov
incl
or
mov
incl
jecxz
incb
xchg
push
lahf
push
add
mov
test
add
incb
test
xor
add
jns
add
pop
incb
inc
add
add
addl
push
mov
jae
add
dec
sbb
adc
add
incl
loope
inc
or
incb
push
sub
inc
add
add
and
add
incb
jbe
insb
add
add
sarb
pop
sbb
dec
add
movsl
imul
sbbl
jl
mov
xor
add
incl
mov
pop
incb
sbb
je
ljmp
xor
add
lret
cwtl
adc
add
jg
add
incb
gs
add
incb
xchg
and
add
outsl
out
and
add
adc
add
and
add
mov
addr16
mov
sub
add
add
add
add
cmp
jecxz
and
add
pop
add
incb
stos
cmp
out
xchg
and
add
push
xor
shll
incb
mov
std
jb
rcrl
sbb
mov
shrb
add
add
add
jp
jmp
test
adc
add
sbb
sub
mov
add
aad
incb
push
add
out
incb
pusha
add
insl
pop
or
add
add
mov
loop
shr
fnstcw
cmp
add
incl
incb
inc
adc
insb
add
add
cmc
mov
movsl
scas
jle
or
incb
mov
sarb
in
pop
fsubrp
insl
and
add
add
add
xchg
addr16
add
mov
add
subb
add
jle
mov
add
shlb
and
add
lcall
add
add
mov
fcomp
fistps
test
lea
add
add
mov
je
rcrl
pop
add
add
dec
jae
add
add
and
add
add
dec
add
jg
mov
pushf
addr16
add
daa
incb
inc
add
add
mov
add
add
or
xchg
inc
add
das
test
mov
scas
into
pop
adc
add
jg
leave
inc
jmp
nop
mov
nop
stos
mov
leave
lea
add
ljmp
cmpsb
pop
add
add
add
jl
lds
xor
add
sarl
add
add
mov
setl
lret
xchg
pusha
add
add
incb
data16
and
add
add
pop
stos
incb
mov
add
add
incb
cmp
call
ja
aad
add
add
rclb
pop
add
cmp
iret
loopne
add
in
or
cmp
xchg
and
add
add
incb
jmp
pop
xor
add
jo
aad
and
add
jns
notl
inc
add
pop
mov
sub
pop
add
add
push
add
out
les
add
imul
xor
add
add
add
add
push
add
ds
dec
add
jl
jmp
lret
push
add
mov
nop
xchg
xor
add
std
in
add
add
incb
in
push
hlt
cmp
push
add
incb
and
add
add
add
add
mov
add
jmp
incl
dec
add
add
adc
add
add
fildll
push
add
incb
cmpsb
mov
incb
push
scas
fwait
je
dec
jmp
arpl
add
in
xchg
mov
add
add
add
add
out
mov
add
aaa
incl
push
add
mov
mov
roll
add
lods
inc
jne
add
in
popa
jmp
incl
andb
cmp
incb
or
dec
jno
add
lods
addr16
add
push
inc
add
add
add
mov
lahf
dec
add
add
incl
add
add
mov
add
add
add
jno
scas
mov
add
xchg
add
inc
mov
mov
add
cmc
push
add
mov
jnp
ljmp
add
add
fnstsw
popf
cmpsl
ljmp
movsl
sbb
icebp
adc
add
shrl
lods
mov
pop
incl
movsl
arpl
in
sub
test
mov
add
add
inc
add
xor
add
incb
movsb
xor
add
movsb
jne
incb
outsb
add
jnp
test
incb
scas
mov
incb
add
xchg
add
les
mov
insb
add
dec
fucomip
mov
cmpsb
and
add
add
jae
incl
test
sbb
add
inc
sub
mov
cltd
push
add
incb
sbb
scas
pop
add
incb
scas
iret
dec
adc
add
xor
add
incb
fwait
arpl
add
cli
test
cmpl
stos
fstp
push
std
loopne
mov
xor
add
inc
stos
inc
xor
add
incb
mov
aam
pop
incb
jnp
into
and
add
fists
pop
ret
rcrl
add
call
lods
sub
add
incb
fdivrp
add
cmp
adc
add
data16
jge
push
or
mov
incb
xor
and
add
add
add
mov
jo
and
add
adc
add
jmp
add
add
incb
mov
add
pop
in
add
xor
add
add
jne
std
dec
add
push
cld
icebp
loopne
pop
inc
add
mov
incl
add
add
sub
incb
fsubrs
incl
dec
add
mov
xor
add
mov
add
add
inc
add
mov
add
out
fisubrs
arpl
mov
xchg
div
shll
ds
imul
add
das
scas
dec
cwtl
xorl
and
add
mov
incb
call
push
add
incl
lods
call
xlat
loope
or
add
insb
add
sbb
mov
and
add
incl
jge
sub
int
add
add
add
add
and
add
xor
add
inc
add
and
mov
add
xlat
loope
add
add
pop
cmovbe
and
pop
add
pop
add
int3
mov
rcr
les
in
sti
sahf
pop
mov
jge
test
add
incl
jns
inc
xchg
mov
mov
dec
add
incb
div
xchg
pop
cmp
cmpl
push
add
add
incb
adc
add
add
add
xchg
aaa
incb
or
test
add
xchg
inc
add
cmp
mov
add
add
call
push
std
lock
divb
add
add
sub
add
incl
sub
inc
add
add
add
rcr
add
push
add
popf
mov
mov
cwtl
sti
test
inc
push
mov
or
adc
incb
jbe
pop
add
add
add
xchg
push
lea
add
idiv
mov
incl
add
add
adc
add
faddp
lret
jae
incb
pop
add
insb
add
mov
cmp
ret
xabort
add
incl
dec
add
mov
vsqrtpd
movb
add
push
add
add
test
pusha
add
sti
incb
insb
add
sbb
mov
add
push
add
cmp
ret
stos
jb
repnz
add
incl
mov
outsb
add
icebp
sub
push
add
push
incb
inc
das
into
jbe
or
mov
mov
add
or
cmp
repnz
add
add
add
mov
add
icebp
stc
mov
jne
incb
xorl
add
incl
adc
add
add
add
add
in
mov
xlat
incb
repz
or
cltd
push
mov
daa
incb
jp
aas
mov
pushf
clc
je
test
negl
incb
inc
outsl
jne
xor
add
into
sbb
movsl
fbstp
adc
add
out
jmp
mov
js
xlat
jle
loop
jns
or
mov
lcall
jbe
into
into
xchg
in
out
in
incb
aas
fcompp
arpl
incl
adc
add
pop
incl
int3
mov
and
dec
imulb
lods
insl
sahf
in
adc
add
out
shr
test
adc
add
incb
xor
add
int3
cmp
incl
pop
add
and
add
and
add
xchg
fwait
jg
jnp
add
adc
add
notl
xrelease
sbb
popf
sbb
mov
incb
xor
add
add
pop
incl
divb
aad
dec
mov
fildll
jge
mov
mov
add
fistpl
add
jns
incl
dec
add
add
add
add
push
movsb
rcll
incb
dec
add
incb
pop
je
imul
dec
add
sbb
loopne
and
add
incb
pop
incl
or
int3
mov
jl
adc
add
movl
loopne
xor
add
into
mov
add
add
mov
repz
shrl
incb
xor
add
stc
dec
xor
add
insl
jne
mov
inc
add
sbb
mov
add
incb
movsb
xchg
add
add
or
add
incl
xchg
mov
pop
add
xchg
fadds
js
cli
outsl
fistl
pusha
add
add
add
into
push
rorl
incb
mov
add
add
jg
mov
add
push
icebp
jns
sub
icebp
jnp
sbb
loope
lea
ja
add
add
pusha
add
test
pop
add
incb
movsb
push
add
incb
jne
add
bound
pop
pop
xchg
push
cmpsl
test
add
add
add
pushf
test
sbb
xor
push
rorb
sti
push
lods
cmp
or
icebp
push
movsl
into
add
add
cmpb
dec
call
add
cmp
adc
add
mov
mov
add
add
inc
add
aad
add
add
add
add
frstor
incb
lock
jbe
jo
mov
add
mov
inc
add
or
push
incb
mov
incb
cltd
mov
add
or
in
test
les
std
pop
add
cltd
data16
add
jle
cmc
jno
add
pop
fnstenv
incl
loop
sbb
pop
pushf
xchg
jl
loopne
jns
test
add
add
test
pop
adcl
inc
add
incl
fwait
or
and
add
jge
add
dec
out
incl
add
add
incb
mov
add
incb
movsb
sti
mov
add
incb
fcoms
incb
xor
add
incb
and
push
sub
incb
pusha
add
inc
add
sub
add
shlb
push
je
mov
incb
mov
push
lcall
aam
add
lock
incb
out
mov
add
add
incb
jne
add
add
push
incl
sbb
dec
add
aaa
incb
cmpsl
incb
fxtract
je
test
cmp
push
incb
push
jb
mov
adc
add
incb
inc
xchg
and
add
add
test
xor
add
xchg
fimuls
add
add
cmp
push
add
incb
jle
lds
add
push
into
push
add
incb
scas
mov
add
incl
push
push
add
push
daa
incb
jmp
in
jne
lret
shll
add
or
mov
incb
stc
xchg
add
xorb
push
add
add
call
mov
out
cmc
int
cmp
cmc
fsts
incb
js
loope
repz
and
adc
add
add
add
scas
sub
shll
movsl
cmpb
pop
incb
mov
shll
add
mov
add
add
incb
shr
push
incl
incb
rcl
jbe
mov
das
stc
in
fucomi
das
pop
cmp
incb
mov
incl
jbe
out
sbb
mov
mov
pop
ret
mov
aam
mov
je
jmp
or
adc
add
incb
addr16
push
out
scas
cmpsl
xchg
add
add
aam
pop
add
add
incb
pop
insl
mov
inc
jmp
incb
pop
add
stos
cmpsb
xor
add
ret
add
incb
popa
push
xchg
mov
add
pop
js
add
lahf
andps
push
add
push
add
jg
fld
push
xor
add
incl
pop
stos
les
enter
decl
incl
mov
add
incb
repnz
add
incb
push
add
adc
add
mov
in
mov
or
push
repz
xchg
and
add
add
add
incb
ljmp
add
inc
or
add
add
in
and
add
add
hlt
aaa
incb
jmp
mov
incl
outsb
add
incl
push
outsl
int3
xor
add
hlt
imul
shrl
add
add
cmp
daa
incb
loop
push
orl
add
incb
pop
add
add
add
jle
sti
jg
lahf
add
add
lds
push
sub
incb
cmp
lock
pop
stos
sbb
add
push
mov
add
stos
js
pop
add
sub
aas
test
add
ljmp
iret
add
test
add
in
add
xchg
jp
jecxz
mov
add
xor
add
incb
aaa
incl
cmp
mov
xor
add
cwtl
jbe
jmp
dec
add
incl
pop
add
pop
mov
or
add
lods
lods
push
add
cld
dec
add
incl
add
add
pusha
add
mov
mov
aam
cmp
sbb
mov
incl
inc
shrl
add
add
add
xchg
iret
aam
sub
incb
pop
add
push
add
mov
incl
icebp
xchg
mov
xor
add
ret
into
adc
add
add
or
and
add
jg
sub
jmp
outsl
push
or
push
push
incb
dec
add
outsb
add
incb
fs
jnp
add
sahf
aad
jbe
rorb
out
cmp
add
sbb
incb
in
adc
add
mov
adc
mov
lea
xor
add
add
lds
add
jge
bound
and
add
ljmp
fwait
js
add
add
sbbl
kmovw
popa
add
add
add
xchg
jo
mov
sub
incb
mov
incb
stc
inc
lods
test
xchg
mov
lds
popf
mov
lcall
incb
clc
lcall
add
xlat
sti
fnstsw
mov
ds
adc
add
push
add
dec
add
sbbl
incb
loope
lods
lcall
add
test
mov
add
add
mov
add
incb
insl
inc
mov
add
cmc
jl
lds
addr16
push
add
add
outsb
add
incb
hlt
pop
add
incb
jo
mov
add
incb
mov
incb
xchg
addr16
pusha
add
add
add
add
repnz
push
loope
xlat
nop
cwtl
jge
add
incl
or
and
add
and
add
add
test
dec
add
movsb
pop
cmp
add
sbb
mov
cwtl
mov
sub
lcall
inc
add
aaa
incb
push
lea
jo
dec
int
pop
adcb
jecxz
lods
test
mov
je
push
incl
loope
incb
cs
lahf
lret
add
push
pop
incl
sarb
add
add
sbb
cmp
lock
incl
xchg
jp
add
dec
gs
add
xor
add
adc
out
mov
xor
add
push
add
stos
sub
push
incb
and
add
jae
add
iret
inc
pop
xor
add
add
add
cld
mov
sbb
int3
mov
add
lock
add
add
incl
dec
jl
jnp
cltd
pop
incb
stos
fcmovnbe
or
add
add
incb
xor
add
fwait
mov
xlat
xorb
add
cmp
stos
mov
into
mov
adcl
cmp
jecxz
scas
sub
scas
mov
pop
cmp
pop
dec
add
movsl
xlat
inc
add
add
add
leave
dec
pop
pushf
repnz
incb
adc
add
push
mov
cwtl
jo
mov
incl
xor
fnstcw
out
mov
cmc
nop
imul
add
incb
mov
mov
add
pop
add
add
popa
fistps
dec
add
xchg
jl
pop
add
pop
add
popf
iret
lods
inc
add
insb
add
incl
pop
add
fldt
cmp
in
inc
inc
add
inc
push
incb
neg
iret
subb
pop
pop
add
add
pop
incl
cmpsb
loopne
add
incb
or
xchg
inc
adc
add
jmp
incb
jne
incb
orb
jmp
add
jmp
add
mov
add
mov
enter
pop
lret
and
add
adc
add
hlt
inc
test
add
incb
out
incb
dec
add
incb
sbb
adc
add
or
ret
pop
int
clc
loopne
jp
rorb
incb
push
add
sbb
or
xor
add
dec
cmc
pop
mov
add
fists
adcb
add
incl
pop
add
pop
call
add
add
add
incb
sbb
add
or
dec
add
mull
insl
fistl
add
add
add
or
andb
sub
roll
incl
xor
add
incb
out
add
add
add
add
adc
add
xchg
sbb
add
and
add
dec
push
incb
mov
dec
add
push
mov
incb
cmp
push
testb
lret
jl
sub
lret
loop
js
stos
xchg
lock
mov
add
incl
jp
lcall
leave
mov
rcrl
cwtl
dec
mov
stos
iret
cmpsl
dec
add
incb
decl
insl
lcall
decl
adc
add
incb
add
add
sub
mov
lret
xlat
cmp
stos
je
jae
push
and
add
add
outsb
add
add
sbb
xchg
pop
and
add
inc
sub
push
repz
xchg
mov
add
incb
or
xlat
shlb
add
add
cltd
jb
pop
test
push
push
and
add
scas
dec
push
jmp
sub
cmp
daa
incl
mov
adc
add
incb
mov
add
ljmp
incl
sarl
incb
hlt
dec
add
add
adc
repz
rcrb
sbb
add
mov
cwtl
and
add
outsl
out
sub
in
lea
mov
add
dec
add
incb
out
pop
mov
incb
cmp
mov
leave
out
and
add
add
cmpsl
add
add
add
add
leave
pop
add
mov
arpl
in
incb
push
add
add
aad
add
inc
in
inc
add
add
add
ret
ja
dec
add
add
dec
add
incb
cmpsb
cmpsb
cmp
mov
orl
daa
incb
sbb
cs
pop
incb
fidivs
dec
dec
movsb
daa
incb
out
mov
test
pop
xchg
aam
add
add
incb
incb
and
add
incb
mov
xchg
or
mov
mov
incb
lret
arpl
add
add
fmull
mov
pop
add
inc
hlt
mov
mov
sbb
imul
sar
add
add
add
incl
push
data16
add
and
add
sub
mov
add
pop
add
inc
jge
add
xor
add
loop
incl
push
add
incb
cmp
incb
mov
incb
test
add
add
push
add
incl
and
add
scas
ret
add
shlb
add
incb
mov
sub
test
add
rorl
jae
ljmp
add
fstpt
jb
addr16
add
push
incb
lds
repz
add
mov
aaa
incb
dec
jnp
rolb
loop
je
sub
icebp
fildl
incb
or
aaa
incb
mov
add
add
incb
xor
add
add
add
les
stc
mov
incl
stc
pop
add
or
lahf
push
add
dec
inc
add
js
push
sub
add
inc
add
or
sub
aas
aam
pop
mov
incb
fsubs
aad
add
rorb
incb
cli
loop
xor
add
incb
xor
add
insb
add
mov
incb
adc
add
incb
stos
pop
fs
sarb
mov
inc
test
xchg
into
test
xchg
fcmovnb
sub
insb
add
add
mov
incb
push
sub
daa
incb
ret
mov
jle
sub
adc
add
out
fiadds
jl
mov
xor
add
jg
add
out
adc
add
mov
incb
cli
xchg
push
add
add
add
add
stos
aaa
incl
xchg
add
add
inc
adc
add
pop
incl
aad
movb
add
incb
fimuls
mov
add
and
jo
jmp
add
inc
add
incb
dec
add
cmp
or
mov
std
pop
adc
add
fs
inc
add
enter
jbe
aaa
incb
adc
add
xchg
adc
add
insl
pop
incb
adc
add
add
incb
jbe
adc
add
stos
adc
add
ror
in
in
add
add
xchg
popa
testb
dec
add
jb
xchg
xor
add
cli
int3
jo
cmpsl
hlt
jmp
mov
pushf
xchg
add
enter
addb
sub
dec
add
incb
ret
add
insb
add
movsl
sbb
jae
xor
add
incb
stos
pushf
push
add
jecxz
add
sbb
xlat
adc
add
and
add
sahf
sub
mov
loopne
add
incb
inc
add
lods
scas
push
movsl
lea
call
inc
in
push
incb
lcall
incb
cmp
push
push
add
sbb
push
add
mov
movsl
call
adc
add
xchg
xlat
in
bound
mov
lds
add
add
jae
or
jae
incl
cltd
or
insl
rcrl
fsubl
icebp
ljmp
add
add
add
incb
jge
add
incb
sbb
mov
and
add
incb
xchg
rorl
test
aaa
incl
loop
sbb
clc
fld
dec
add
icebp
rorl
rcrb
cmp
push
add
or
loop
pop
add
test
out
mov
xchg
or
mov
incb
inc
and
add
add
jne
sub
lods
push
add
enter
rolb
add
pop
add
incb
xor
add
lock
push
fimuls
add
xor
adc
incl
mov
dec
mov
incl
adc
add
fsubrs
pop
incb
pop
add
incb
hlt
sbb
mov
add
in
jecxz
mull
dec
add
incb
inc
add
xchg
cld
adc
add
lret
clc
xchg
xchg
aas
pop
add
add
add
add
incb
lahf
xchg
add
add
sti
add
add
add
mov
pop
add
push
add
cmovl
scas
enter
stos
fsubrp
aam
mov
scas
fucomi
gs
movsb
cmp
mov
rorb
add
add
fsubl
mov
add
incb
fisubrs
mov
pop
xchg
setg
add
pop
add
clc
mov
ljmp
push
incb
push
add
jle
sub
cmp
add
incb
sbb
repnz
cmc
shl
int3
loopne
add
gs
cmpsb
je
jbe
fstpt
pop
incb
out
xor
add
cmpb
cmpsl
shrl
add
push
add
push
add
sbb
dec
add
dec
mov
xlat
jecxz
xchg
mov
xorl
adc
add
incb
and
add
idivl
add
cmp
aaa
incl
aas
jmp
incb
nop
mov
jmp
add
aas
cmp
add
add
and
incb
jnp
sub
shlb
pop
add
push
in
bound
and
add
add
jp
inc
add
add
scas
repnz
gs
mov
incb
mov
incb
arpl
incb
stc
shl
in
push
add
cld
cmp
xor
add
incb
pop
mov
add
scas
or
pop
incb
icebp
jmp
incb
in
addb
incb
fiaddl
pushf
outsb
add
inc
aam
cld
dec
add
pop
stos
jmp
push
incb
sbb
into
jmp
sbb
add
jo
sub
clc
int3
and
add
in
push
scas
rolb
incl
add
into
cmp
add
add
and
add
add
dec
pushf
mov
movsb
mov
incb
fcmove
cmp
fs
xchg
mov
xchg
add
add
incb
or
mov
incb
dec
add
pmulhuw
or
cltd
inc
add
incl
popf
mov
incb
cwtl
gs
xor
leave
stos
dec
add
gs
jg
incb
jo
sbb
xchg
in
and
add
mov
incb
nop
mov
add
push
add
lcall
mov
add
out
jnp
mov
insl
or
push
incl
ret
jo
cmp
aam
out
jb
and
add
std
push
add
incb
insb
add
in
mov
incl
ret
cmp
push
add
adc
add
add
push
inc
add
pop
add
jmp
push
add
incl
mov
incb
dec
add
add
incb
mov
mov
aas
rcl
sahf
xor
add
neg
aas
cmc
lods
and
pusha
add
repnz
add
int
in
stos
mov
incl
scas
add
add
add
jne
sub
scas
inc
or
and
add
int
or
and
add
repnz
xchg
sbbb
incb
lds
add
incl
shll
incb
divb
add
pop
add
add
add
add
add
gs
xchg
clc
sbb
xor
add
aas
xor
add
mov
add
add
out
mov
lret
out
enter
incl
xor
jl
cmp
shrl
repz
incl
push
xor
add
add
mov
cmp
mov
in
mov
add
gs
pop
add
inc
add
xchg
dec
in
incb
test
sbb
cwtl
popa
aam
incb
lret
adc
add
bound
xchg
int3
cmpb
pusha
add
push
add
push
pop
add
dec
push
rcrb
jge
leave
pop
incb
jg
xor
add
pusha
add
xchg
lahf
cmp
int
xchg
add
add
movsl
int
incb
scas
pop
incl
pop
pop
add
cmpsb
call
and
add
add
add
incb
jge
pop
out
add
inc
add
seto
xlat
jl
jmp
incb
test
xchg
pop
xchg
aas
jns
or
add
add
shl
jecxz
add
xor
sahf
fs
std
sahf
jnp
xor
add
std
js
in
push
cmpsb
add
adc
add
insb
add
loop
add
incl
leave
or
stos
cmpsb
pop
add
mov
mov
sbb
imul
add
leave
and
add
or
xchg
jmp
in
incb
pop
add
mov
sub
lret
sub
xlat
xor
add
pop
incb
and
add
cmp
repz
add
xor
add
or
inc
add
lds
jne
mov
add
incl
jp
dec
add
cli
pop
add
cwtl
cmp
or
push
orb
add
and
add
jae
add
out
jae
mov
incb
rcll
incl
push
imul
add
mov
jb
out
sbb
outsb
add
incb
nop
jbe
push
add
incb
pop
pop
incl
sti
test
cltd
sarb
flds
lock
incb
incl
movsb
ret
and
add
incb
push
adc
add
mov
and
add
incl
add
and
add
push
icebp
mov
adc
add
movb
lods
fs
sbb
add
incb
aaa
incb
shl
incl
push
add
arpl
add
loopne
sti
sub
jp
pushf
jns
incl
mov
into
addr16
add
sbb
mov
test
enter
add
adc
add
inc
jns
pop
in
lock
dec
in
mov
adc
cltd
aaa
incb
jae
incb
test
nop
pop
add
jl
mov
or
add
sub
push
lcall
scas
xor
loop
sbbb
or
push
orl
addb
add
jnp
sub
mov
incl
xor
add
xor
add
test
loop
fnstcw
add
add
aam
cmp
inc
dec
add
loop
jmp
mov
mov
add
add
add
sub
nop
bound
push
incb
rclb
xor
add
lcall
add
jae
dec
loop
add
adc
add
int
adc
add
jo
push
data16
cmpsl
imul
push
add
xchg
incl
fidivrs
lods
scas
pop
nop
ljmp
imul
mov
loop
push
push
add
push
add
call
xchg
pop
jg
incb
push
incb
mov
dec
add
incl
push
xchg
push
mov
outsl
das
or
cmp
das
cmp
dec
shrb
lods
sbb
mov
aam
bound
mov
rcll
add
movsb
sahf
aad
out
sub
add
push
inc
sbb
add
fsubl
and
jle
inc
xor
add
mov
sarb
jp
stc
dec
incb
popf
enter
mov
inc
add
incb
fsubrl
add
add
push
aam
add
jnp
pop
call
incb
jb
cli
or
jno
inc
dec
loope
incb
and
add
xlat
imul
incl
leave
je
mov
pop
mov
push
add
out
sbb
add
add
mov
mov
xchg
add
incl
dec
cltd
rcr
sub
inc
add
mov
push
add
cmp
out
lahf
xlat
cmp
add
dec
jo
push
add
aas
mov
add
mov
and
add
incb
or
ffreep
cmp
stos
shlb
incl
sbb
cmpsl
loopne
sub
cs
sub
clc
lcall
adcb
add
jecxz
lret
or
inc
add
xchg
pop
add
add
mov
mov
repz
incb
je
mov
insl
movsb
xchg
les
add
sti
clc
jo
leave
mov
add
scas
add
add
ljmp
add
add
add
add
insl
sub
add
add
stc
mov
mov
nop
push
incl
psubusb
mov
add
add
mov
aas
add
add
add
xchg
lods
and
add
sbb
incb
scas
jg
mov
xchg
dec
jmp
les
mov
mov
in
sub
inc
add
sahf
popa
incl
je
jae
add
add
add
cli
lcall
sti
jns
fucompp
into
ja
xor
add
push
add
sahf
or
das
ret
fistps
nop
pop
out
incl
ficoml
incb
loop
incb
dec
add
add
add
imul
mov
push
add
add
pop
incl
adc
add
jle
into
test
incl
pop
incb
repz
testl
fidivrs
jb
pop
add
add
add
in
mov
fimuls
add
mov
incb
nop
cs
lret
arpl
add
jbe
les
sahf
cld
sbb
out
shrb
inc
jecxz
mov
aam
jl
xchg
inc
add
incl
outsl
cmp
mov
cmp
test
adc
add
sarb
popa
sub
incb
jge
add
pop
inc
shll
add
mov
fcmovnu
dec
cmc
stos
cmpl
adc
add
das
repz
mov
add
incb
dec
add
stc
cld
sar
incb
je
push
pushf
pop
xor
add
cld
inc
add
mov
mov
dec
add
inc
add
cmp
ret
fiaddl
incb
pop
add
lahf
mov
and
add
incb
sahf
incb
push
add
add
incl
inc
jmp
sub
lcall
cmp
in
inc
xchg
out
test
add
add
ja
xchg
aam
data16
aaa
incl
push
add
out
push
add
jl
xor
add
add
inc
sbb
incb
mull
outsl
test
fisubs
incb
mov
adc
incl
xor
add
lret
popa
rclb
out
imul
add
pop
add
sti
pop
add
incb
cmpsl
fidivs
shll
push
incb
das
mov
xor
add
pusha
add
add
add
daa
incb
jg
add
incl
gs
add
cltd
pushf
jmp
imul
push
add
outsl
test
incl
cli
pop
incb
rclb
incb
jle
xchg
mov
incb
int3
push
mov
add
add
pusha
add
sbb
sahf
push
incl
push
add
adcl
in
int
aam
lahf
sbb
xor
add
in
test
dec
add
mov
loope
add
jnp
hlt
push
incb
adc
add
and
add
sbb
sbb
mov
enter
in
movsl
adc
add
add
mov
gs
add
cmp
add
rcl
test
incb
ret
ljmp
adc
add
xchg
push
add
adc
add
sbb
jbe
add
add
add
lret
int
incl
push
jmp
incb
adc
add
add
add
ja
or
incl
cld
and
test
pushf
fidivrl
incb
adc
add
adc
add
clc
sbb
dec
mov
scas
push
add
add
mov
xor
add
incb
popa
inc
cmp
loopne
pusha
add
aad
and
add
sbb
nop
cmp
incb
pand
sub
jbe
fsubs
dec
add
add
add
mov
test
incb
cld
imul
jge
inc
sub
incb
push
add
mov
idivl
std
dec
xorb
add
mov
stos
xchg
xchg
mov
je
cmc
movsb
pop
mov
imul
push
add
test
add
ja
adc
add
aaa
incb
fistpl
cmpsl
sbb
cld
movsl
lret
rorl
xchg
jmp
add
incb
inc
outsl
sbb
std
sbb
push
incb
adc
add
incb
repnz
rcll
jns
incb
cmp
mov
add
add
aas
loop
lea
inc
add
rcrb
outsb
add
add
incb
push
add
mov
inc
add
dec
add
mov
fisubrs
mov
and
add
sub
jmp
incl
adc
add
cli
daa
incl
and
add
pop
mov
fsubl
dec
add
testl
add
sahf
xchg
imul
incb
lods
loop
aad
jmp
stos
pop
incb
dec
ror
sti
sbb
lock
mov
mov
mov
pop
add
daa
incb
jne
jp
pop
incb
xchg
enter
add
lcall
mov
add
incb
jmp
add
cmp
push
add
mov
add
add
incb
std
notl
mov
sti
cmp
out
fiadds
jge
push
add
pop
clc
xor
add
pop
mov
and
add
loop
out
scas
inc
pop
add
aaa
incb
push
inc
add
mov
add
dec
jne
cmp
incb
icebp
rclb
loop
dec
add
xorb
add
cltd
loope
dec
movsl
mov
addl
add
incb
sub
add
add
add
pop
add
mov
je
punpckhwd
call
les
incb
mov
add
incb
adc
add
add
incb
repz
add
add
incb
add
add
in
js
mov
pop
pop
add
out
lcall
outsl
or
dec
add
std
add
add
pop
incl
aaa
incb
mov
push
xor
add
add
sub
in
push
mov
add
incl
sub
xor
add
outsl
pop
or
add
cmp
notb
mov
iret
imul
add
jne
sub
add
movsl
cmpsl
aad
lret
incb
outsb
add
mov
and
add
in
incb
sbb
add
incl
cli
inc
add
cwtl
xor
add
add
loope
mov
outsl
test
jl
xchg
out
inc
in
mov
incb
jb
inc
add
pop
add
add
incb
xchg
add
add
cmp
pop
pop
incb
mov
add
loopne
out
add
add
jb
push
add
rol
add
jno
incb
test
add
imul
sbb
sbb
add
add
in
add
add
mov
mov
push
incb
jmp
add
add
lahf
or
mov
jae
lea
incb
xor
add
repz
incb
call
or
incl
mov
xor
add
push
add
filds
incl
jae
add
add
add
add
daa
incb
fcmovnb
xchg
sub
sub
fadds
incl
sub
sub
jl
ds
jge
shrb
add
and
add
incl
aam
lret
test
mov
mov
add
add
incb
aaa
incb
mov
incl
cmp
push
add
pop
fcoms
push
add
mov
sbb
dec
pop
add
add
xchg
pusha
add
incb
cmp
insb
add
incb
outsb
add
add
inc
mov
popf
fisubrl
add
add
out
cmpsl
rcll
incb
mov
push
add
add
icebp
fmull
iret
adc
add
imul
add
pop
movsb
push
incb
jo
aam
rolb
fwait
cmp
inc
add
add
addr16
and
add
psraw
push
add
add
add
fcmovnbe
sbb
nop
addr16
mov
ret
add
ret
repz
xor
add
sub
add
incb
jb
orb
add
add
mov
incl
pushf
fistl
incl
push
xchg
cli
mov
or
jg
xchg
mov
incb
pop
daa
incb
cmp
inc
xchg
js
repnz
sub
lods
fisubrl
cmc
mov
ja
lcall
add
dec
inc
add
mov
fstl
incb
push
incb
sub
mov
incb
sbb
jmp
add
stc
mov
add
xchg
aam
jge
incb
jne
add
adc
add
fistl
jno
adc
imull
mov
mov
ja
and
add
mov
add
aam
add
das
aam
mov
cmp
incl
incb
jb
cmp
outsb
add
incl
mov
out
dec
add
mov
scas
pushf
loop
pop
and
add
sub
rorb
incb
mov
incl
popf
inc
addr16
lcall
xor
sub
mov
and
add
add
add
add
add
sub
incl
mov
add
incb
cmp
ret
xor
add
incb
hlt
repnz
iret
popa
jnp
dec
add
leave
pop
add
mov
pusha
add
addr16
incb
les
incb
aaa
incb
dec
add
push
add
out
xchg
outsb
add
adc
add
add
jb
hlt
adc
incb
or
pushf
incl
xchg
mov
incb
lods
adc
add
add
add
mov
cmpsb
lods
pop
fwait
bound
stos
jg
incb
fnstsw
dec
add
add
jb
pop
add
mov
or
add
addr16
incb
push
insb
add
push
incb
scas
sub
add
add
xchg
pop
incl
dec
add
loop
or
cmpsb
push
cmp
add
add
xchg
jne
shl
adc
add
pop
ret
mov
push
inc
add
add
add
shll
incb
out
mov
je
pop
inc
loop
imul
jmp
shll
jle
sbb
movsl
divb
push
add
adc
add
call
incb
push
add
out
test
into
cmp
clc
je
add
add
incb
adc
push
and
add
add
shl
out
loope
testb
push
incb
mov
incb
aaa
incb
iret
insb
add
fidivrl
inc
add
cmp
adc
mov
test
xchg
mov
add
add
mov
incb
mov
mov
add
gs
cmp
scas
ljmp
add
lods
std
cwtl
jns
mov
icebp
mov
xor
add
incb
xor
add
mov
mov
add
jb
inc
add
jbe
jne
or
pop
fucomip
adc
add
adc
add
mov
incb
iret
test
push
mov
mov
add
jle
addr16
daa
incl
fistpl
call
dec
add
add
or
dec
ret
xor
add
incb
das
mov
add
mov
incb
ret
shrb
jp
cmp
lock
xor
add
push
add
sti
xchg
cmp
dec
add
inc
popf
jno
xor
add
call
add
in
in
idivl
pushf
outsl
sub
xchg
out
mov
add
add
ret
sub
xchg
mov
incb
jns
add
stc
fwait
aas
add
push
incl
sbb
xchg
pop
add
xchg
je
sub
mov
incb
rorb
mov
insl
adc
add
mov
dec
rorl
pop
dec
and
add
insb
add
incl
fld
pop
add
popa
out
sub
sahf
mov
test
add
iret
in
call
incl
mov
incb
push
push
add
stc
lds
jno
mov
ror
lea
pop
add
cmp
add
mov
add
add
add
pop
add
incb
fcomi
or
dec
add
daa
incl
sub
rcrb
jmp
mov
pushf
out
push
add
mov
aas
std
or
cld
js
stc
daa
incb
jl
cmpsb
enter
cmpsl
sbb
cld
pop
test
xchg
xor
add
lods
or
popa
imul
add
jp
popf
leave
push
incb
stos
inc
add
add
inc
or
incb
outsl
aas
xor
add
add
add
incb
dec
push
incb
jne
or
jne
hlt
shlb
incb
sub
add
add
aas
jae
out
or
add
pusha
add
sub
insb
add
add
push
add
adc
add
add
jp
arpl
incb
shlb
dec
adc
add
add
sub
dec
add
incl
pop
add
repnz
add
rcll
incb
pop
add
add
insb
add
adc
add
insb
add
add
fisubl
incb
and
add
push
add
mov
sub
out
xor
add
inc
add
add
fidivrl
jmp
repz
add
and
add
in
cwtl
loop
fsts
incl
push
incl
shrb
imul
incb
bsr
incb
jmp
data16
incl
adc
add
mov
add
shll
stc
add
incl
and
add
add
incb
xchg
mov
imul
sti
rcrb
add
add
outsb
add
add
jge
jp
pop
into
jnp
pop
sbb
mov
incb
push
incb
aas
dec
add
incb
inc
nop
incl
shlb
add
xor
add
adc
add
pop
add
add
stc
mov
and
add
sbb
xchg
jbe
sar
jge
mov
add
adc
add
push
add
push
fisubrl
jns
inc
or
add
xor
and
add
dec
iret
or
mov
push
add
dec
add
movsl
add
add
out
mov
add
add
add
add
inc
cs
mul
sbb
sbb
mov
stos
mov
add
push
xchg
jl
and
and
add
cmp
or
fstl
add
incl
push
add
incb
add
add
shrl
pop
pushf
fistpl
add
scas
test
add
add
add
lahf
lret
jae
jns
add
and
add
add
pop
add
adc
shlb
incb
mov
incb
xor
add
in
call
add
cmp
add
pop
pop
add
pop
addr16
mov
call
add
incb
push
popa
push
je
or
test
sbb
mov
mov
sub
incb
rolb
add
incb
cmp
mov
rorl
int3
sbb
xchg
stos
add
add
fisubrl
in
aaa
incb
sub
sbb
add
andl
mov
sbb
sub
test
mov
add
incb
iret
cli
jbe
ljmp
stc
lret
out
sub
mov
add
and
add
inc
add
fs
out
mov
incb
or
inc
add
add
imul
add
cmp
iret
mov
incl
push
sub
xchg
incl
and
add
mov
imul
sub
lret
xor
push
incb
cmpsb
mov
fnstcw
xlat
sbb
scas
mov
add
jmp
stos
pop
jg
out
push
clc
leave
mov
add
push
ljmp
xchg
mov
add
add
add
incb
pop
add
stc
out
add
shl
fidivs
dec
add
loopne
incb
inc
push
add
incb
out
add
add
iret
movsb
outsl
dec
mov
bound
pop
add
push
fdivs
lret
fcoml
add
push
add
repnz
pop
add
out
mov
gs
mov
push
loop
cmp
sub
idivl
incb
clc
pop
repz
add
incb
mov
mov
lods
add
add
mov
add
add
shl
incl
mov
scas
push
add
mov
mov
pop
mov
loop
mov
aad
add
add
sub
mov
incl
and
sub
pop
add
inc
pop
fnstenv
incb
arpl
add
sbb
inc
pusha
add
mov
lret
incb
inc
imul
into
cs
mov
sub
add
enter
sub
add
add
idivb
jge
test
pop
sarl
add
cwtl
and
add
insl
scas
dec
add
jno
fistps
fwait
jne
cmpsb
add
add
subl
xlat
pusha
add
cmp
lcall
xor
add
lods
adcb
add
incb
inc
add
add
inc
add
dec
xchg
add
inc
add
push
lret
lret
pusha
add
fimuls
add
add
ja
mov
pusha
add
insb
add
aad
out
divb
incb
in
data16
incb
mov
dec
or
jmp
add
ret
insl
mov
add
jge
aas
loopne
add
icebp
arpl
add
add
movsl
xchg
add
add
add
mov
push
add
add
incb
mov
sub
xchg
inc
pop
pop
sbb
sub
ret
add
sbb
scas
repz
xchg
out
add
add
incb
incb
mov
push
add
xchg
xchg
movsb
stos
stc
push
incb
adc
add
add
das
repz
cmc
js
mov
mov
add
data16
and
add
add
loop
inc
add
push
add
add
jae
add
jno
test
incl
repz
add
add
push
incb
cmp
std
pop
in
dec
shl
jg
add
test
add
pop
add
add
out
xchg
incb
sti
daa
incl
lea
add
jmp
das
cmp
mov
mov
lea
add
add
add
mov
cltd
add
add
add
xorl
loope
incb
cli
cmpsb
push
ret
movsb
lret
mov
mov
push
xchg
pushl
incl
sub
and
add
adc
add
push
add
stos
decl
mov
incb
adcb
add
add
add
xorb
add
lea
add
mov
add
add
sti
sbb
lcall
add
in
sub
add
push
add
sbb
push
xor
add
ud2
stc
lea
mov
incb
or
mov
add
incl
rorb
jecxz
incb
cltd
pop
add
add
inc
add
cld
add
test
mov
iret
aaa
incb
mov
add
xchg
rorb
add
fdivs
add
incb
jg
cmp
mov
add
xor
iret
bound
pop
incl
pop
cmpsl
adc
fdivl
fisubs
and
add
add
add
add
inc
inc
add
loope
incb
fstl
incb
jb
mov
fisttpl
bound
outsl
nop
cli
faddl
push
adc
add
cmpsl
mov
and
add
dec
add
lcall
sub
inc
jnp
out
std
outsb
add
jecxz
jle
aaa
incb
mov
ja
fimuls
incb
xchg
icebp
add
pop
sub
incb
add
add
sbb
in
add
add
stos
pop
addr16
add
add
gs
incb
cmpsb
pop
jg
add
ja
inc
ljmp
cwtl
push
pop
into
jmp
add
adc
xchg
mov
sbb
add
jb
xchg
jp
xchg
fiaddl
incb
push
jbe
test
incb
bound
bound
and
add
pop
add
mov
add
incb
dec
jmp
mov
incl
xchg
incb
add
mov
subb
les
pop
idivl
push
incb
add
add
push
add
fisttps
stos
mov
add
mov
add
add
xor
in
incb
out
pop
call
add
incl
cmpsl
sbb
outsl
mov
lock
add
add
incb
push
insl
jno
xchg
stos
test
add
aaa
incl
jge
add
incb
outsl
lahf
dec
cmpsb
sbbl
shlb
add
mov
aas
dec
pop
fmull
addr16
add
xor
hlt
pop
add
incb
jne
sbb
add
test
daa
incl
add
jae
lcall
fbstp
incb
insl
cltd
xchg
aam
mov
test
cmp
dec
nop
pop
psubusb
add
incl
add
jns
add
cmp
dec
xchg
incb
mov
cmp
sti
jno
jae
push
cltd
xor
mov
sub
inc
sbb
dec
rorl
sti
mov
push
pushf
and
add
add
incb
jne
jns
fdivr
in
add
inc
add
xchg
out
arpl
incb
test
incb
pusha
add
incb
sti
push
xchg
jbe
loop
icebp
ljmp
add
jno
mov
add
ja
sti
loopne
stc
add
incb
jbe
mov
add
add
incl
lret
inc
insl
or
push
xchg
test
jnp
dec
jge
and
add
in
incb
cmpb
incb
sbb
mov
mov
add
fdivrl
iret
out
sbb
sbb
pop
push
add
dec
add
incb
sahf
cld
aaa
incb
stc
cmp
push
add
adc
add
incb
fld
test
mov
add
mov
add
incl
mov
mov
fsubrs
mov
jle
in
add
incb
ljmp
add
test
incb
mov
andb
add
mov
inc
add
cmp
xor
add
incb
cmp
add
add
clc
or
rolb
std
test
jae
pop
incb
loop
mov
pushf
and
add
and
add
or
lea
add
incb
addr16
add
incl
jb
jmp
add
incb
pop
add
add
xor
add
xor
add
push
add
or
add
add
cld
push
add
incl
xchg
pusha
add
jmp
add
sbb
sub
pop
icebp
incb
je
shll
hlt
pop
add
incb
add
add
movsl
or
jmp
add
incb
sbb
data16
and
add
or
loopne
incb
dec
add
incb
xchg
add
rolb
add
cs
stc
out
and
add
scas
sbb
and
add
incb
lock
add
and
add
fidivrs
add
push
add
add
lods
mov
add
xchg
pushf
ljmp
test
mov
jl
jbe
or
outsl
gs
add
sub
imul
add
or
jne
jbe
and
add
pusha
add
add
add
add
out
xor
pop
xchg
xor
add
jp
xchg
add
hlt
push
mov
popf
cmc
xor
add
adc
add
jbe
push
incb
aaa
incb
pop
add
incb
mov
add
add
add
add
incl
fdivr
mov
sahf
sub
cmpsb
and
add
inc
add
pop
incb
dec
add
add
add
add
add
ret
inc
add
cltd
jmp
incb
cmp
cmpsl
lret
dec
add
loope
incl
pop
dec
add
jle
pop
add
in
add
je
mov
add
stc
nop
fadds
add
add
cwtl
jecxz
jb
aad
cli
pop
add
stos
js
add
add
cs
mov
int
add
incb
mov
add
and
add
adc
paddusb
add
in
out
add
aas
js
mov
incb
xor
add
add
add
and
add
push
mov
fwait
jo
pop
add
aaa
incl
pushf
pusha
add
ds
scas
mov
sahf
lds
aad
add
xchg
push
add
in
cmp
fimull
add
add
cld
sub
add
add
push
add
adc
add
into
push
out
in
jp
dec
fstpt
dec
mov
jns
out
mov
divl
dec
add
incb
addb
add
incl
stc
pushf
cmpsl
test
or
add
add
incb
xor
add
popf
jle
sub
aam
imul
add
incb
or
add
add
push
dec
call
add
incb
pop
lock
add
lea
cld
dec
add
incb
sbb
inc
jne
ljmp
incb
test
js
lds
incl
sbb
jne
incb
testb
incl
cmc
add
in
pop
jbe
incb
mov
push
add
add
int3
rcrl
push
pop
add
jge
adc
add
add
add
incl
xchg
push
mov
lock
bound
sbb
mov
dec
add
sub
clc
mov
mov
test
bound
cmp
pop
orb
test
add
incb
int
push
incb
insb
add
fninit
cli
jns
stc
jl
or
xchg
pop
or
sbb
dec
inc
lods
test
dec
outsb
add
sub
sbb
mov
icebp
int3
xchg
incb
lret
or
jp
xor
add
add
dec
add
push
add
adc
fimuls
pushf
push
add
add
add
repz
add
shrl
add
add
add
add
mov
sbb
rorl
lahf
adc
add
jecxz
incb
aam
push
add
repnz
in
lret
ret
adc
add
cwtl
and
add
test
add
mov
vmovupd
add
les
add
lcall
aas
fadds
incb
adc
add
dec
add
incb
sub
cld
popl
movsb
leave
pop
add
je
out
add
loope
incb
cli
popf
aaa
incb
cltd
mov
fisttps
xchg
lods
sub
push
incb
xchg
sbb
int
incb
js
xchg
mov
pop
testb
adc
add
jecxz
incl
imul
add
add
movsb
bound
sbb
add
add
cld
bnd
mov
sahf
cmp
daa
incb
scas
add
add
sti
std
outsb
add
fildll
addr16
jbe
mov
pop
add
add
jecxz
icebp
mov
incl
adc
add
incb
fisttps
add
jnp
xchg
pop
add
pop
xchg
add
incb
les
add
jmp
int3
rcll
push
cld
jecxz
enter
arpl
out
das
rcrl
jbe
out
inc
add
and
add
and
add
jae
outsl
add
add
mov
ljmp
inc
add
incb
xchg
clc
push
add
add
pusha
add
add
mov
add
add
add
incb
nop
not
or
pusha
add
shrl
dec
add
loop
incb
std
pop
add
icebp
sub
cli
in
and
add
repz
push
add
or
repnz
xchg
pop
sti
enter
jae
test
add
pop
incl
into
lods
mov
incl
mov
in
insb
add
add
add
and
add
mov
inc
add
add
dec
add
je
sub
cmp
xor
cmp
sarl
add
jmp
add
adc
add
add
add
pusha
add
add
add
sub
sub
sbb
fildl
incb
and
add
incl
push
cwtl
mov
incb
push
add
add
add
incl
popf
xchg
mov
add
sub
pop
add
mov
add
incb
clc
insb
add
add
incl
bound
mov
ret
fwait
lcall
bound
or
mov
insb
add
insl
arpl
scas
xor
add
aas
arpl
or
or
in
xor
add
daa
incl
aas
scas
xor
add
mov
jecxz
adc
add
incb
jno
add
mov
add
xchg
jae
push
push
add
add
jge
insl
pushf
cmp
cmp
incb
ljmp
add
cmpsb
sbb
push
xor
sub
lahf
jp
cld
xchg
xchg
shl
inc
add
add
add
push
hlt
std
leave
push
add
add
jns
push
cmp
mov
push
add
add
incb
xor
add
or
lods
sbb
incb
fcomps
cmp
incb
pop
add
std
jmp
and
add
adc
add
lret
inc
pop
add
add
add
mov
gs
add
mov
dec
mov
rorl
outsb
add
jb
stos
mov
test
jmp
add
incl
sbb
test
andl
ret
mov
or
and
add
mov
cmc
sahf
jno
push
add
add
add
pop
add
push
sub
incb
xorb
inc
xor
add
test
pushf
shrl
add
mov
add
incl
lret
shll
incb
loope
mov
push
add
add
incb
gs
inc
add
add
loop
jle
ficomps
pop
incb
das
clc
cmp
or
leave
icebp
cltd
fldt
ficoms
pop
add
add
incb
outsb
add
cmc
dec
xchg
xchg
xchg
inc
pop
add
int3
fstp
jae
incb
roll
andl
incb
or
mov
sub
mov
pop
scas
push
add
in
push
insl
movsl
loope
out
cwtl
add
dec
add
lcall
dec
add
add
ja
mov
push
incb
xchg
sub
repnz
mov
xchg
imul
cmc
and
add
jne
incb
mov
add
and
add
data16
insl
add
mov
incb
jp
out
test
sub
adc
add
sub
stc
push
add
out
incl
addb
add
add
add
jecxz
mov
pop
mov
incb
mov
add
add
incb
cmp
incb
sub
jnp
inc
add
add
sub
cmp
loope
push
add
sbb
hlt
add
add
add
in
incb
incb
and
add
sub
movsl
mov
incb
jae
sbb
mov
add
inc
add
sub
incl
mov
incl
fisttpll
xchg
and
add
cmp
push
add
pop
add
incb
fwait
mov
ds
das
jmp
add
dec
add
push
add
mov
repz
subb
fiaddl
incl
fldt
pusha
add
incl
in
test
add
add
repz
roll
repz
mov
scas
mov
incb
fmull
aam
lahf
inc
add
add
add
mov
add
xor
add
xor
add
lock
jl
sti
mov
add
lods
loope
add
incb
xor
add
or
add
mov
add
incb
or
incl
inc
add
aaa
incb
stc
pop
add
incb
cmpsb
sub
adc
add
push
add
mov
jne
pushf
test
mov
mov
add
loope
add
daa
incb
outsb
add
std
imul
add
add
adc
add
add
xchg
aam
push
add
incb
or
add
push
incl
sub
iret
and
add
or
sub
ja
mov
sub
xchg
testb
xlat
sbb
popa
mov
cmpsb
rolb
incb
fstpl
fdivrl
add
repz
add
pop
add
mov
add
mov
add
add
add
std
jmp
push
add
add
cmp
movsb
mov
add
scas
xchg
insb
add
test
adc
add
lods
adc
add
incb
xorl
add
add
add
add
incb
push
incb
rorl
call
add
mov
push
add
add
add
add
add
incb
xchg
sub
outsb
add
cld
cmpsb
adc
add
mov
movsb
push
add
add
mov
insb
add
sub
out
loopne
add
incl
xchg
lahf
cmp
mov
incl
scas
jbe
and
lret
ljmp
loopne
xchg
inc
add
add
out
jmp
incb
mov
fs
mov
lret
mov
mov
shrl
adc
add
incb
sub
jg
pop
mov
jmp
int
incb
mov
add
incb
dec
add
mov
xchg
xor
add
incb
lds
mov
arpl
cwtl
in
pop
sub
rol
shl
or
cmc
arpl
adc
add
rorl
mov
mull
incb
sbb
jae
lcall
mov
add
add
and
add
fimull
or
das
bound
insl
test
mov
outsb
add
incb
sbb
aas
icebp
xchg
incl
xchg
movsl
out
repz
or
pop
add
incb
insb
add
incb
sub
pop
incb
jle
testb
mov
dec
fdivs
inc
jns
or
lock
incb
test
and
add
adc
add
test
nop
std
mov
aas
ja
incb
imull
mov
int
xchg
dec
dec
add
incb
cld
jp
inc
arpl
add
jp
mov
dec
jns
push
sbb
incb
data16
pop
mov
incb
shl
das
jmp
add
test
mov
repz
in
inc
add
incb
testl
rcll
fimull
add
dec
push
add
cltd
rep
xlat
mov
cld
fcmovu
sbb
pushf
arpl
or
cli
js
xchg
lea
scas
jns
incl
cmp
test
add
add
push
add
ds
aas
add
add
add
and
add
sti
in
iret
mov
jb
subl
mov
add
mov
add
incb
cltd
into
push
incb
and
jno
mov
add
call
insb
add
mov
add
add
add
mov
add
sbb
mov
pop
xchg
mov
aas
adcb
xor
add
add
xlat
jl
fstpl
std
cld
or
pushf
mov
cmpsl
mov
movsl
mov
add
incl
pop
aaa
incb
mov
outsb
add
add
xor
pop
incb
mov
test
pop
add
add
aam
jl
jmp
incb
fwait
pop
add
add
incb
ret
adc
add
add
adc
add
incb
fldcw
mov
int
add
enter
push
add
push
add
add
mov
jae
mov
add
adc
add
incl
leave
stos
xchg
push
movsb
push
add
incb
js
out
sbb
incl
shlb
inc
hlt
mov
dec
aas
scas
fstl
jle
add
add
or
adc
add
and
add
incl
xsaveopt
int
sub
push
and
add
ljmp
imul
incb
std
movsl
push
incb
testb
jnp
sbb
push
bound
clc
xchg
mov
mulb
add
sti
data16
pusha
add
imul
loopne
mov
test
add
in
add
jp
jg
inc
add
add
add
bound
jmp
je
js
add
add
cmpsl
int3
or
test
add
nop
aaa
incb
dec
add
mov
push
incb
nop
call
hlt
lcall
and
add
xchg
lcall
adc
inc
add
add
incb
push
arpl
mov
scas
ret
mov
add
push
loop
or
lcall
in
loopne
fmul
outsl
fwait
data16
push
add
xor
add
add
lds
xchg
arpl
jbe
xor
add
int
int3
xor
add
incb
incb
xlat
aas
arpl
iret
xor
add
push
add
add
sub
add
and
inc
shll
lods
mov
dec
add
incb
pop
adc
add
add
or
mov
bnd
sbb
ds
lret
movsl
mov
loop
sub
push
add
add
incl
pop
add
shr
incb
and
add
add
add
aas
sub
scas
pop
add
pop
lret
add
and
add
inc
pop
mov
incb
sub
sbb
add
call
add
or
rorl
add
add
loop
addr16
jl
mov
jb
adc
add
ljmp
stos
incl
jecxz
incb
pop
add
add
push
add
incb
les
mov
dec
add
repz
js
incb
pop
incb
xchg
shl
das
jecxz
pop
push
add
leave
dec
add
inc
pop
incb
fs
orl
incl
mov
incl
inc
cltd
repz
mov
xlat
xchg
dec
in
data16
sbb
adc
add
aaa
incl
jecxz
gs
pop
scas
negb
add
add
orb
pusha
add
incb
lods
mov
sbb
insl
pop
add
add
add
add
ja
sub
into
mov
ret
mov
add
sbb
push
add
dec
add
out
jnp
mov
adc
add
pop
incb
pop
add
incb
and
add
mov
rorl
sub
in
and
add
sbb
pop
add
add
jns
cmp
aaa
incb
out
je
mov
add
mov
push
add
sub
inc
lods
jno
incl
pop
add
xchg
fisubrl
stos
shrl
cld
bound
insl
test
jae
incl
pop
add
inc
mov
incb
inc
mov
out
mov
incb
xchg
dec
add
fwait
xchg
nop
out
popa
add
add
incb
xorl
add
ja
add
add
nop
ret
inc
add
incb
andl
mov
pusha
add
incb
imul
mov
or
add
add
incl
ret
ja
pop
incb
mov
outsl
xor
add
incb
xchg
pop
add
cmp
sbb
call
add
test
incb
rclb
incl
mov
daa
incb
dec
jbe
aaa
incl
xor
add
incb
shrl
add
sbb
addr16
outsl
fxch
dec
test
pop
incb
xchg
mov
shll
insb
add
in
sub
scas
fucomi
das
push
adc
add
ret
jns
jb
negl
lahf
outsl
mov
sub
sbb
add
incb
xchg
xchg
je
xchg
pop
incb
pop
incb
mov
jecxz
and
add
adc
add
incb
inc
in
dec
mov
incb
popf
dec
add
fidivrl
adc
add
add
jl
push
sub
incb
clc
mov
lods
out
add
add
add
mov
hlt
and
add
push
add
cs
dec
add
mov
incb
xchg
ljmp
push
add
fcmovne
xchg
mov
incb
add
add
jmp
add
pop
push
pop
jg
cld
mov
add
mov
jg
pminub
repz
pop
incl
sbb
cmp
incb
dec
std
outsl
roll
incb
in
cwtl
aam
add
incl
ja
xor
add
divl
incb
or
pushf
or
xor
add
add
lods
cmp
mov
add
jp
mov
out
andl
add
inc
add
cmp
or
add
inc
add
pop
mov
test
add
orb
jg
add
test
add
add
incb
jnp
in
push
add
add
add
jmp
pop
pushf
stos
mov
incb
mov
sub
scas
out
sbb
aaa
incb
ret
incl
jno
add
incb
cltd
push
pop
incb
mov
add
incb
sbb
add
jmp
push
add
fucomp
adc
add
incb
mov
add
push
add
movsb
inc
push
mov
incl
rcrl
jb
in
loopne
dec
add
incb
dec
add
add
or
incb
pusha
add
test
dec
pop
add
leave
pop
incb
add
pop
mov
and
add
scas
hlt
je
jg
jge
push
add
mov
dec
add
incb
popf
lock
push
jmp
jb
mov
add
add
cmpsl
ret
int3
loop
incb
fisttpl
outsb
add
add
sub
cs
adc
add
pop
sub
rcrb
jge
fstps
add
incb
push
add
add
add
scas
push
ficompl
add
xchg
push
and
add
addr16
incb
mov
add
int
cmp
incb
cltd
xor
add
cmp
pop
add
add
add
mov
xchg
sbb
add
add
incb
je
adc
add
add
or
pop
add
xchg
les
addb
add
xchg
and
add
or
pop
icebp
add
add
test
fdivrs
inc
add
nop
inc
mov
sbb
add
scas
jl
sbb
cmpsb
cmp
push
add
fcoml
incb
lock
insl
push
add
incb
sbb
add
gs
jne
jmp
add
add
fistpl
add
add
fstps
dec
add
incb
mov
add
pushf
iret
mov
add
mov
scas
int
fwait
add
incb
jl
orl
dec
add
add
mov
movsb
pop
add
gs
sarb
add
add
add
sbb
push
daa
incb
aam
push
add
jae
inc
lea
outsl
inc
push
add
addr16
rorb
outsl
idivb
test
mov
push
aad
mov
or
adc
add
sbb
sbb
lods
js
xlat
mov
add
jmp
cmp
adc
add
rolb
add
add
sub
sub
sub
push
enter
mov
mov
test
fiadds
incb
testl
aas
dec
sbbl
arpl
incb
loop
incb
mov
in
pop
incl
inc
add
and
add
in
inc
mov
mov
testl
popa
outsl
cmp
pop
add
dec
inc
add
roll
add
add
or
lret
hlt
xchg
incb
dec
rclb
add
add
and
add
insb
add
cmp
incb
ficompl
mov
add
add
out
or
xchg
incb
shlb
incl
adc
add
add
in
insl
repnz
sub
fcoml
mov
mov
add
flds
add
add
incl
xor
add
add
add
vpsubsw
in
imul
add
add
add
xor
add
incb
mov
incl
cli
aam
add
call
in
push
add
daa
incb
pushf
jmp
add
movsl
pop
add
or
or
pusha
add
cmp
jo
jl
in
bound
pop
outsb
add
adc
add
fcoml
test
incb
sub
hlt
outsb
add
incb
inc
and
add
inc
mov
incb
add
add
sub
mov
addb
ret
jle
push
add
pop
add
pop
add
incb
and
add
add
add
dec
add
xchg
push
mov
add
pop
outsl
fldt
add
inc
inc
add
xor
add
sub
jle
sub
mov
andl
mov
cmp
mov
add
pop
add
pop
add
cmpl
push
mov
inc
add
inc
xor
add
incb
mov
sub
inc
add
popa
fadd
xchg
fcoms
incb
ljmp
mov
incb
jnp
add
incb
xchg
int
incb
sti
hlt
mov
sahf
ror
incb
mov
incb
cmpl
add
cmc
cld
push
add
pop
incb
call
out
push
add
mov
xchg
jle
cmp
cmp
add
jecxz
add
sbb
loop
daa
incb
int3
lret
mov
fsubl
add
clc
mov
incb
bound
daa
incb
inc
sbb
test
mov
dec
cmp
xchg
or
mov
incl
sahf
popa
xchg
lods
cmp
add
cli
and
in
inc
sbb
push
incl
mov
out
jno
incb
jnp
cmp
xchg
xor
pop
add
pusha
add
incb
stos
sahf
add
add
inc
add
add
add
xor
add
sub
inc
push
nop
push
add
incb
add
add
xchg
fdivl
aas
jnp
ja
incb
loope
add
cmp
incb
inc
mov
add
jmp
pop
add
pop
add
iret
add
add
iret
xor
add
sbb
adc
add
incb
mov
jg
aad
incb
adc
add
add
incb
push
add
pop
add
incb
test
loop
adc
add
cmp
ret
cmc
push
add
mov
andb
lds
jg
add
into
fmull
mov
shrl
sbb
cmp
add
add
lock
add
stos
jb
adc
add
mov
fdivrs
push
in
lds
imul
add
dec
mov
and
add
add
add
or
mov
incb
into
dec
pop
add
pop
inc
or
lar
add
shr
incb
faddp
lea
inc
pop
incb
pop
dec
add
incl
fsubs
scas
scas
mov
mov
incl
or
push
add
add
ljmp
add
std
call
and
cli
loopne
add
add
jbe
cmpsl
cmp
sub
jp
outsl
mov
add
pop
add
add
add
fistl
incl
or
cmp
inc
mov
add
pop
add
mov
nop
lret
mov
lock
add
stc
mov
sbb
xor
add
add
ret
and
add
add
push
incb
xchg
mov
incb
or
or
mov
add
incb
stc
loop
add
sbb
scas
aaa
incl
sti
bound
popa
adc
add
test
xchg
ljmp
cmc
div
inc
bound
les
test
add
incb
jne
add
das
repz
in
adc
add
std
pop
dec
xchg
add
incl
xor
add
aam
add
jb
cltd
push
add
add
incl
or
add
add
incl
cltd
popf
jp
or
add
pop
cltd
pushf
push
add
cltd
mov
add
lcall
add
add
push
incb
into
add
add
incb
cmpsl
or
mov
cmc
iret
stos
xor
add
incl
xor
add
jle
mov
inc
add
int
adc
add
incl
sarl
in
add
adc
add
incb
movb
add
hlt
sahf
iret
and
add
xchg
push
stc
jb
sbb
xchg
lcall
mov
movsl
gs
incb
inc
push
incb
outsb
add
mov
add
add
incb
icebp
mov
pop
incb
popf
xchg
or
xor
add
incb
leave
adc
add
adc
add
fsubs
xor
add
out
sbb
cmc
mov
dec
xchg
in
xor
add
fists
add
mov
add
add
mov
mov
sahf
xchg
fmull
dec
add
dec
add
jmp
in
mov
or
mov
incb
pop
dec
add
add
sub
outsb
add
je
pop
push
add
push
mov
add
cmpb
add
add
jns
loopne
xchg
insb
add
rol
sbb
int
add
pusha
add
incb
mov
iret
jl
dec
add
incb
pusha
add
incb
push
inc
add
incb
icebp
mov
incb
cltd
jle
das
ja
incb
mov
add
test
int3
loop
popa
mov
rorb
femms
add
xor
add
add
add
cmpsl
mov
xchg
mov
inc
jg
xchg
add
add
incb
in
dec
add
out
ja
xchg
jl
jae
cmpsb
test
add
xchg
xchg
call
inc
add
mov
aam
out
vpmacsdqh
add
cmp
jne
inc
push
orb
add
add
int
xchg
in
and
add
outsb
add
incl
arpl
dec
add
incb
popa
fidivrs
add
and
add
add
nop
and
incb
mov
mov
or
mov
inc
add
mov
fdivp
movsl
insb
add
movsl
fstl
add
cmp
pop
fdivs
rcr
imul
das
in
incb
push
push
pop
iret
into
imul
incb
sbb
cltd
fwait
pushf
je
ret
icebp
jecxz
push
mov
shll
xlat
xor
add
scas
bound
pop
add
add
mov
pop
add
incl
hlt
mov
inc
add
jnp
out
cmp
add
add
mov
mov
leave
repnz
add
pop
in
mov
add
dec
add
xchg
jecxz
call
add
shl
dec
xchg
pop
incl
pop
incb
in
jmp
add
cli
in
cmp
add
mov
scas
clc
notl
add
enter
lret
sbb
popf
nop
sub
aas
sbb
ret
mov
incl
push
jl
sbb
mov
incl
lret
sbb
add
pushf
rcrb
std
and
cmpsl
inc
stc
mov
and
add
out
mov
xor
add
dec
out
arpl
incl
xchg
push
add
add
popa
xchg
xchg
std
adc
add
incb
add
dec
add
add
aad
incl
lret
inc
add
jl
and
add
fbld
scas
cmp
popa
mov
push
add
add
test
add
enter
shl
fwait
jnp
incb
arpl
incb
cmc
popf
push
jb
cmp
aas
mov
adc
add
or
daa
incb
push
mov
add
push
or
add
incb
int
add
add
mov
test
mov
mov
mov
incb
movsb
add
add
insb
add
xchg
xchg
sub
adc
add
hlt
xchg
rorl
mov
fsts
incb
imul
mov
out
incl
lcall
shlb
adc
add
add
ret
fmull
mov
jg
add
add
xor
add
add
pusha
add
add
inc
cld
cmp
stos
mov
inc
add
push
add
cwtl
fcmovnbe
xor
add
jns
add
add
push
mov
and
add
add
stc
mov
mov
jnp
push
add
test
mov
incb
out
push
add
stos
xchg
sub
cli
popf
lret
enter
pop
incb
and
add
pop
fwait
sbb
nop
add
incb
pop
add
add
sub
and
bound
adc
add
incb
dec
jp
lret
inc
add
mov
sub
and
add
add
arpl
add
aas
jb
repnz
incb
jbe
mov
push
add
xchg
jmp
addr16
enter
nop
rcr
or
cmpb
nop
sub
incb
mov
jae
movsb
leave
cld
and
add
add
add
mov
cli
fs
push
mov
in
cmc
aad
add
test
mov
in
pop
add
pop
incb
mov
aad
incb
stc
mov
pop
add
add
inc
dec
add
push
lret
rcrl
incl
mov
cmp
jae
xchg
jbe
in
fcmovne
jae
stos
xor
add
mov
stos
lcall
xor
add
add
mov
pushf
mov
jb
pop
add
imul
mov
add
or
incb
incb
mov
add
incb
mov
add
je
sbb
addl
add
incb
pop
and
add
add
add
add
pop
push
incb
mov
in
add
cwtl
cwtl
addr16
push
add
outsl
adc
out
add
cmp
jl
in
fsubr
aaa
incb
movl
add
incb
push
add
cmp
das
icebp
jb
xor
add
jg
add
add
lret
cld
test
incl
jb
dec
inc
imul
mov
adc
add
incl
xchg
popl
push
add
incb
icebp
xchg
jge
insb
add
dec
add
int3
or
add
add
incb
add
add
mov
aam
jno
adcl
or
xor
add
popf
xchg
add
incl
mov
incb
stc
mov
incb
adc
add
incl
xchg
xchg
jb
data16
incl
insl
incb
mull
mov
or
lds
incl
inc
inc
jle
push
add
add
add
fdivrp
repnz
add
incb
movsb
fsub
push
add
sahf
xchg
stos
pop
jnp
enter
hlt
xor
add
test
add
ljmp
incl
or
divl
incb
cld
push
sub
mov
adc
add
push
push
add
fistpll
add
incb
or
mov
pusha
add
add
push
add
and
add
add
add
pop
js
xchg
into
imul
jo
xchg
out
outsb
add
icebp
mov
mov
rorb
dec
outsl
mov
mov
and
add
aad
incl
push
add
fadd
popf
adc
add
add
stc
lret
or
jo
cltd
xor
add
mov
or
add
incb
stc
lcall
test
incb
cs
pop
cwtl
push
shrl
add
incb
rorb
stos
jae
add
jnp
pop
aas
push
add
fwait
adc
add
incb
lcall
add
add
mov
mov
bound
dec
add
incl
cli
fnstsw
fiadds
clc
mov
incb
jo
lahf
inc
add
mov
xor
add
incl
nop
dec
add
shl
fbstp
pop
add
dec
add
dec
mov
imul
fstps
insb
add
incb
sbb
inc
add
cmpsl
cmc
imul
mov
push
in
out
cmpsb
mov
add
incb
sahf
rcll
add
adc
add
pop
stos
out
incl
jnp
incb
jmp
mov
add
add
mov
adc
add
or
adcl
incl
mov
incb
pop
mov
incb
xchg
aad
push
stos
jge
add
adc
add
add
sbb
mov
xchg
cmp
mov
add
add
or
shlb
add
das
jbe
mov
add
hlt
dec
jne
add
or
aas
sub
mov
incl
xor
add
test
cmp
push
add
add
imul
stos
movsl
dec
lds
mov
cmp
cmp
mov
xor
add
add
cmp
mov
add
test
push
add
xor
add
adc
add
arpl
push
add
incb
mov
mov
push
incb
ds
xor
add
iret
xchg
xlat
iret
dec
add
add
pop
incb
push
add
or
pushf
push
add
clc
fsub
dec
add
jb
fimuls
sahf
dec
add
sti
cmp
incb
adc
add
into
inc
add
add
add
lret
mov
mov
adc
add
mov
outsl
xor
add
add
mov
mov
ret
incb
push
cmpsl
xchg
push
fldt
cmp
push
stos
mov
mov
in
add
add
adc
add
mov
cmp
xchg
mov
add
add
jae
mov
incb
ljmp
cmp
lret
pusha
add
add
jge
jmp
sar
sti
lock
loope
add
mov
js
or
mov
idivl
incb
and
add
sarb
sub
mov
sub
mov
xchg
xchg
pop
incb
inc
add
add
mov
lret
or
in
push
add
add
incb
hlt
jae
and
ret
add
pop
incb
push
add
sub
test
hlt
popf
pop
add
aaa
incb
sub
outsb
add
insb
add
incb
lods
lds
mov
mov
out
movb
sub
leave
enter
add
add
daa
incl
fidivs
insl
inc
lret
push
repz
dec
pop
add
incb
sub
and
add
or
add
test
pusha
add
incb
popl
out
ja
mov
mov
push
add
add
sub
mov
ljmp
sbb
lods
aam
sbb
in
jle
mov
add
int3
int3
add
add
mov
push
add
incb
mov
pop
add
test
pop
sti
arpl
incb
inc
add
add
jnp
cmpsb
xchg
stos
idivl
pop
incl
imul
xchg
mov
pop
mov
in
add
add
sub
jb
aas
fisttpll
jns
lcall
add
cli
mov
pop
je
jae
jle
imul
repnz
mov
call
xchg
rolb
ljmp
add
icebp
sbb
or
add
sub
scas
xchg
add
add
or
and
add
push
add
hlt
insb
add
cmp
cmp
out
add
les
sahf
lea
cmc
lcall
sahf
mul
ret
stc
xor
add
xchg
add
add
jp
inc
adc
add
add
add
mov
incb
imul
add
cmp
or
or
incb
mov
call
sbb
outsl
push
add
sub
test
incb
icebp
lds
incl
adc
add
dec
add
jecxz
add
push
add
dec
add
inc
add
add
cli
and
add
sbb
std
incl
incb
sarl
inc
add
add
add
filds
xchg
xchg
pop
add
cmp
flds
mov
incb
hlt
sarl
push
add
incb
out
mov
adc
add
inc
popa
notb
incb
push
add
incb
js
in
jb
pop
incb
and
add
incb
push
incb
ffree
cmp
aad
inc
adc
add
stos
mov
incl
push
incb
je
jbe
jb
jmp
add
incb
dec
leave
repz
ljmp
add
daa
incb
loopne
sub
inc
pop
incb
incb
inc
stos
incb
fisubrs
add
jge
add
sub
jo
mov
call
mov
int
sbb
sahf
mov
incb
or
insb
add
vcvtss2si
mov
add
sahf
and
add
add
cmc
out
incb
pop
incl
mov
add
test
add
add
mov
add
rcll
nop
jmp
inc
add
cmp
add
incl
mov
lret
inc
add
incb
fldenv
add
sub
cmc
shr
mov
jg
aad
shl
das
mov
incb
inc
add
xor
add
ds
shll
add
cltd
loop
mov
bound
add
adc
add
add
add
or
lods
insb
add
push
incb
out
inc
mov
add
stc
test
adc
add
leave
mov
add
and
add
add
add
add
push
cld
mov
mov
inc
and
add
enter
test
cwtl
jecxz
xor
add
add
stos
xchg
jle
jnp
bound
sbb
sub
add
pop
cmpsl
xor
add
pop
mulb
pop
jg
cmp
add
repnz
pop
push
add
add
dec
xor
add
aaa
incl
mov
inc
add
adc
add
mov
incb
sbb
inc
arpl
movsl
imul
add
add
add
xlat
dec
add
test
xor
add
call
sbb
cmp
add
ja
sub
or
dec
add
test
incb
rolb
or
mov
add
mov
fsubrl
incl
sub
add
test
add
incb
push
add
inc
push
add
or
jmp
repz
gs
add
incl
mov
mov
add
push
push
cmpsb
inc
add
mov
add
add
jo
xchg
xchg
iret
lret
cmp
xor
add
add
or
movsb
mov
add
add
add
into
into
leave
shlb
incb
xor
xor
add
add
cld
cmpsl
add
add
cmp
add
pushf
push
add
add
and
add
loop
test
incb
cld
jl
push
add
add
add
cli
sub
cmp
add
inc
add
incl
inc
jbe
lods
and
add
stos
dec
mov
mov
sbb
movsl
imul
pop
ljmp
sbb
not
and
add
push
add
add
push
add
pop
incb
aam
or
inc
add
incb
inc
push
add
incb
pop
or
incl
fsubp
loopne
dec
add
out
push
add
add
pop
incb
hlt
mov
mov
inc
add
sub
dec
add
incl
mov
pop
std
pop
clc
cmc
inc
add
aaa
incb
add
aam
add
incl
out
fnstenv
jmp
adc
add
jl
das
push
add
push
pop
add
sbb
fsubr
call
fldt
push
mov
incl
sbb
add
into
les
incb
dec
cmpb
not
jmp
add
incb
and
add
incl
loop
incb
xchg
lret
add
add
add
add
pop
push
incb
stos
mov
add
in
xchg
lods
cmp
dec
add
orb
add
jbe
data16
pop
add
add
mov
jbe
push
add
incb
insl
push
dec
add
jbe
mov
mov
mov
incl
sarb
add
incb
notl
adc
add
or
push
incl
mov
sub
mov
add
cmpsl
mov
mov
lock
xchg
imul
mov
imul
sub
loope
add
add
sub
fbstp
incb
fmull
incb
fstp
push
add
jg
add
inc
add
jns
sti
cs
and
add
add
add
jnp
dec
dec
add
mov
pop
incb
sbb
cmp
or
mov
cmp
ret
pop
mov
add
add
xor
add
aas
mov
movsb
incb
push
lods
lock
mov
inc
hlt
push
adc
add
incb
in
add
mov
js
arpl
add
mov
pop
add
aaa
incl
adc
sub
nop
movsb
xchg
incb
pop
mov
incb
or
xchg
nop
lock
sub
cmp
add
dec
xchg
imul
data16
pop
incb
jnp
fnstenv
mov
dec
test
in
add
and
add
sbb
cmp
out
incb
addr16
test
add
imul
dec
jno
incb
lret
pop
add
sti
imul
test
pop
add
add
jnp
add
add
xor
add
add
cmp
sahf
jbe
adc
add
ljmp
in
add
add
jns
adc
add
push
mov
jl
sti
cld
xchg
jp
ret
add
incb
cmpsl
out
mov
cld
mov
add
jae
mov
incb
or
xchg
mov
lods
pop
incb
add
add
add
push
add
fcoms
add
insl
andl
arpl
add
and
movsb
mov
out
in
push
adc
add
lahf
jmp
add
push
add
dec
sub
add
insb
add
inc
add
add
idivb
popa
jg
out
and
add
dec
pop
incb
mov
dec
sbb
dec
stc
out
add
incb
fidivs
incl
clc
xor
add
incb
dec
add
incb
in
pop
incb
add
incb
cli
mov
out
add
mov
incb
add
add
add
enter
jno
or
xor
add
mov
add
lret
incl
pop
add
adc
add
add
cmp
in
mov
add
loope
dec
mov
xorl
add
setge
add
call
add
push
pushf
lock
sub
pop
add
push
popf
outsl
jae
add
sub
push
or
mov
mov
ret
mov
fidivrs
incb
into
push
mov
adc
add
imul
add
jne
in
cmc
sub
or
call
add
out
add
incb
into
addl
add
incb
push
add
popa
push
shl
pop
incb
testb
add
incb
mull
add
add
incl
lret
lret
jp
pop
add
incb
pop
jge
ljmp
stos
push
add
add
add
mov
push
and
add
add
push
add
mov
incb
fldenv
cmp
jae
pop
cmpsb
mov
popa
xchg
call
gs
cwtl
aad
pop
xchg
mov
add
adcl
incb
iret
stos
jne
mov
jge
daa
incb
mov
mov
incb
mov
cmp
incb
ret
push
add
push
notb
xchg
push
add
incl
inc
add
xchg
mov
incb
adc
add
das
stos
add
add
add
enter
jo
jmp
incb
mov
pop
incb
mov
mov
imul
jmp
push
and
add
incb
int3
push
incb
push
incb
mov
hlt
xchg
pop
add
add
add
jg
int
rcll
add
rorb
push
mov
fmull
add
dec
add
incb
cmp
add
add
mov
pushf
pop
add
les
test
sbb
or
push
incb
pop
or
xchg
add
add
scas
adc
add
in
call
jg
incb
nop
sti
mov
xchg
negb
cmpsb
pop
add
shrb
jl
cltd
cmp
mov
fidivs
mov
testl
je
ret
fsubs
loope
pop
add
cwtl
aaa
incl
mov
add
incb
fwait
call
clc
gs
sub
xchg
cmp
stc
jecxz
int
cmp
imul
into
push
lahf
out
lods
xchg
mov
add
add
cmc
popf
mov
imul
repz
mov
and
add
lcall
jge
incb
shr
mov
mov
mov
cmp
dec
adc
add
mov
and
add
inc
insb
add
mov
incl
pushf
mov
add
add
add
incb
rorl
add
add
add
sub
add
addr16
add
push
imul
test
lret
mov
out
add
mov
incb
pop
add
add
sbb
incb
and
add
add
sbb
cmp
lcall
int
rclb
enter
pop
add
je
pop
fiadds
inc
sbb
or
or
jo
stc
std
loop
cltd
mov
incb
imul
test
incb
fwait
mov
inc
add
outsb
add
xchg
call
test
push
incb
pop
incl
xchg
mov
mov
push
incb
test
add
add
pop
add
mov
adc
adc
add
into
dec
dec
add
incb
bound
dec
push
mov
lahf
pop
add
data16
push
add
add
stc
fnstcw
add
mulb
testb
aas
cmp
and
add
clc
cmp
cld
sar
incb
pop
and
add
xchg
add
add
int3
incb
mov
inc
push
repz
aam
lea
add
outsb
add
incb
mov
scas
inc
add
add
mov
incb
pop
add
incl
mov
ret
add
mov
add
jle
inc
add
dec
add
add
add
incb
pop
add
pop
add
test
mov
jge
mov
rorl
add
js
dec
std
add
add
sarb
incb
std
sub
stos
and
add
pop
adc
add
negb
cmp
js
inc
data16
push
add
or
mov
sti
hlt
popf
rcll
cmp
push
add
and
add
out
add
jl
xor
add
add
incb
jge
addr16
add
add
xor
add
cmp
pushf
mov
add
add
fstl
push
cmp
sbb
add
incl
mov
pop
aad
jbe
jns
ffree
fcmovne
and
add
incb
xchg
inc
add
add
cmpsl
lods
fwait
pop
jl
out
xchg
push
add
mov
ja
xor
add
pop
incb
mov
add
insl
xchg
mul
jne
pushf
lret
add
pop
add
push
add
fdivrp
sahf
imul
add
add
add
add
adc
data16
aam
add
add
add
mov
mov
xor
add
bound
mov
fmulp
mov
arpl
incb
ficompl
add
incb
mov
andb
add
lods
mov
sub
add
clc
data16
add
cli
cmp
testb
aam
xor
add
incb
xor
add
push
popa
test
pop
out
and
add
add
add
add
jg
loopne
orl
add
incb
and
add
add
mov
add
incb
in
testl
dec
jne
add
sbb
pop
add
ficompl
aaa
incb
in
movsb
dec
add
incl
push
add
lret
incb
js
lock
sub
push
fildl
ret
cmpb
incl
and
add
xchg
xchg
in
ja
xor
add
add
incb
add
shll
jl
test
lahf
sbb
mov
fucom
stos
jb
fnstenv
add
add
incl
ja
pusha
add
xchg
mov
mov
add
add
add
add
int
add
push
incb
lock
and
add
add
cmpsb
into
into
mov
clc
movsl
dec
add
add
idivl
add
add
add
add
pushf
in
sbb
incb
jmp
push
dec
mov
add
add
adc
add
loopne
cmp
add
incb
in
sarl
shrl
lods
cmpsb
test
movsl
add
push
add
add
incb
cwtl
sub
dec
pop
add
mov
adc
add
rorb
jb
data16
mov
sbb
add
or
xor
jo
popf
dec
add
incb
in
sarl
jl
cltd
mov
into
add
push
add
jnp
mov
add
pop
das
adc
add
notl
incb
int3
test
add
mov
in
fildl
add
add
push
fdivr
loope
imull
outsl
and
add
fldt
ret
incb
push
pop
cmp
push
add
daa
incl
adc
stos
xchg
je
adc
add
js
imul
shll
cmp
xor
add
js
jbe
in
push
incb
jg
aam
sbb
jno
incb
pushf
mov
and
add
mov
add
mov
arpl
mov
incb
je
dec
add
icebp
sbb
test
xchg
or
rorb
shr
inc
add
inc
lods
mov
stos
push
add
pop
incb
ljmp
dec
add
in
add
sbb
mov
add
sbb
mov
movsb
sbb
dec
fimuls
add
or
mov
sbb
pop
add
cmp
push
add
incb
insb
add
incb
xchg
lock
add
negb
add
sahf
hlt
pop
incb
adc
add
stos
jp
cmp
push
add
jnp
rcr
out
incl
cmpsb
dec
add
incl
mov
arpl
cmpl
imul
add
jno
add
add
xchg
xor
add
incb
sbb
inc
jns
incl
jns
xchg
inc
mov
push
push
xchg
pop
add
gs
ret
sub
mov
mov
inc
add
xchg
xchg
mov
sub
inc
add
incb
dec
cs
leave
pop
incb
data16
add
xlat
imul
je
insb
add
pop
incb
or
int
incb
push
xchg
jno
arpl
add
add
add
incb
inc
add
mov
add
incl
mov
add
add
out
sub
sub
movsb
mov
add
incb
jnp
add
incb
cli
incb
ret
incb
inc
int
add
stc
popf
adc
add
add
add
inc
inc
mov
mov
inc
fsubr
and
add
loop
add
cwtl
shl
or
fcmovnbe
pop
shl
int3
mov
add
incl
dec
leave
adc
add
loope
inc
add
stos
sub
cmpsb
loop
dec
add
fsubr
stos
xor
add
mov
push
add
add
incb
push
in
xrelease
ret
out
fisubs
cmp
fstpl
and
add
jp
ret
add
out
stc
pop
add
incl
aas
or
xor
add
mov
pusha
add
mov
lret
add
mov
adc
add
and
add
outsb
add
incb
aam
rorl
into
mov
mov
add
jnp
add
fsubp
sub
popf
sbb
mov
pop
incb
outsl
jae
xchg
jnp
and
add
xor
add
fildl
incb
sbb
mov
incb
mov
incb
sti
test
out
inc
out
incb
out
inc
add
add
incb
les
add
incb
push
add
dec
mov
add
aaa
incl
out
pushf
dec
nop
xchg
xchg
out
sub
mov
sbb
jnp
add
jno
pusha
add
data16
jmp
aaa
incl
sub
push
scas
mov
cmp
mov
push
incb
repz
sub
scas
insl
bound
mov
and
add
push
cmpsb
imul
push
add
incb
scas
push
add
sbb
add
add
incb
cmpb
dec
add
fisubrl
out
cmp
and
add
incb
lea
mov
ja
xchg
pop
add
pop
fsubs
or
seta
out
test
dec
add
shl
xchg
rcl
incb
imul
adc
add
sub
int
add
incl
enter
add
dec
add
add
add
into
mov
pop
push
add
pop
add
incl
out
push
add
arpl
lods
cmp
fs
adc
add
lock
xacquire
insb
add
incb
ficoms
test
xchg
incb
push
add
add
incb
out
stos
push
add
inc
add
stos
loope
scas
pushf
cli
jbe
add
add
daa
incb
push
incl
popf
shll
sbb
add
enter
pop
add
add
addr16
push
add
icebp
std
or
shlb
dec
add
add
lea
incb
ljmp
incb
jg
mov
andl
add
into
and
add
fisttps
sbb
or
push
add
mov
int
inc
add
ret
repnz
adc
add
adc
mov
add
int3
push
rorb
pop
incb
add
xchg
cmp
shll
mov
incb
sub
movsb
stc
cmp
add
incl
mov
sbb
das
fsts
incl
add
add
sahf
je
dec
popa
lret
and
mov
sub
incb
pop
incb
add
push
inc
mov
jae
dec
lock
cmp
add
lods
into
add
add
add
add
shll
incb
rcrl
mov
pop
incb
aad
shlb
test
in
decb
add
lcall
push
add
and
add
add
movsl
cmp
jae
jle
sbb
add
mov
out
aam
incb
in
and
mov
dec
add
add
xor
add
js
lock
shll
add
incb
mov
pop
shrb
fs
gs
cmp
add
rol
loopne
inc
movsb
jne
add
incb
mov
inc
add
incl
mov
cli
jg
jbe
push
mov
fbstp
inc
add
push
add
mov
xchg
xchg
stos
fistpll
incb
inc
mov
add
and
add
mov
aad
push
add
mov
push
add
inc
add
incb
mov
pushl
incl
test
xchg
xor
add
lahf
xchg
xor
add
incb
push
add
add
loop
push
incb
mov
incl
pop
add
adc
add
push
add
arpl
out
xchg
incb
or
lcall
add
incb
out
addr16
add
aas
xor
add
add
fwait
push
add
mov
sbb
xor
pop
sahf
mov
mov
pop
add
add
incb
lds
rcll
movsl
scas
dec
xor
add
not
push
add
jl
iret
jb
stos
loopne
mov
push
add
cmp
add
sub
or
or
mov
mov
loope
in
sbb
sub
scas
xchg
jp
sub
mov
add
xlat
cs
dec
add
ret
fstpl
jo
ficoml
lods
xchg
jle
jbe
fs
dec
or
incb
imul
pop
add
out
sahf
mov
add
incl
fdivr
aas
scas
cmpsl
ljmp
das
xorl
add
push
add
push
mov
lcall
pop
incl
push
add
add
sub
sbbl
add
add
xchg
ja
add
loope
js
xor
add
xchg
sub
sub
and
add
pop
jne
inc
add
add
je
out
cmc
rorl
sbb
aaa
incl
mov
iret
and
add
add
stos
jo
pop
add
add
cmpb
inc
imul
push
incb
addr16
stos
enter
sbb
ret
fcomps
stos
ficompl
jg
fiaddl
mov
lock
and
add
mov
push
add
pushf
pop
loop
mov
push
add
cmc
xor
add
incl
xchg
push
add
cmp
sbb
add
xchg
pop
add
adc
add
adc
add
pop
cmp
sbb
push
incb
jg
pushf
pop
sti
mov
sub
jecxz
pop
add
loope
add
mov
aad
add
mov
inc
imul
dec
add
push
add
das
inc
add
incb
pop
or
adc
add
mov
std
addr16
int
incl
push
add
shlb
jmp
xchg
pop
add
cmp
add
incl
shlb
incl
lock
mov
mov
in
sub
sbb
test
add
jne
inc
and
add
add
hlt
enter
cmovo
xchg
fistl
pop
pop
incb
fldcw
rcl
aas
fneni(8087
gs
add
add
incb
cmovo
sub
stos
jae
add
inc
add
stos
icebp
shll
ficompl
sarl
jmp
clc
inc
add
add
lea
shlb
aad
incb
jo
jle
daa
incb
push
incl
mov
add
adc
add
enter
xor
add
idiv
js
jns
add
int3
sarl
popf
jg
xor
add
incb
or
out
incl
mov
popa
mov
sub
add
into
lcall
pop
movsb
add
add
cli
jnp
add
add
fwait
add
add
fwait
adc
add
add
add
sbb
add
add
inc
mov
sbb
mov
dec
add
or
dec
add
mov
insl
aas
js
test
add
add
divb
xor
add
int
add
incb
mov
stos
xor
add
mov
add
aad
incl
cmp
add
incb
fucom
mov
add
mov
dec
push
add
add
js
ja
add
cmc
stos
neg
data16
sub
and
add
incl
loop
lahf
insl
mov
pusha
add
xor
add
cs
test
dec
add
add
testl
jmp
mov
xchg
inc
add
xor
add
add
imul
imul
add
and
add
add
ds
pop
add
push
add
inc
fisubl
incb
in
incb
xchg
repz
loopne
mov
aaa
incb
mov
add
loopne
vmread
dec
movsb
dec
mov
shl
push
add
add
add
push
push
and
add
aad
incl
add
add
sub
sub
shl
add
add
imull
sbb
incb
mov
sarl
test
lea
incb
mov
mov
incb
addr16
inc
sbb
sbb
sahf
cwtl
sub
or
in
push
lock
add
inc
adc
add
hlt
inc
add
pextrw
inc
add
pop
add
add
mov
lods
int3
jmp
add
inc
add
pop
cmp
sub
ljmp
add
cmp
mov
shl
add
incb
mov
add
xchg
cmp
gs
add
push
add
add
dec
push
push
sub
add
lds
cmp
xor
add
cltd
push
or
popf
iret
shll
incb
xchg
add
add
lds
incb
mov
add
add
add
cli
fbstp
add
add
lods
ret
arpl
incl
mov
inc
dec
add
add
add
jo
jmp
incl
or
popf
xor
add
add
daa
incb
mov
repz
add
add
sbb
push
incl
testb
add
add
push
add
cmpsl
xchg
add
add
in
outsb
add
incl
dec
xchg
add
add
into
test
lea
stc
into
jno
incb
stc
test
cltd
mov
add
incl
fxch
addr16
jne
push
add
inc
inc
add
xchg
cmp
aam
movsl
mov
ret
add
xchg
outsl
shrl
test
movsb
cmpsb
leave
aad
inc
add
or
dec
jmp
inc
add
leave
push
in
mov
cmpb
inc
ficomps
incb
xchg
cld
les
inc
mov
add
ret
cmp
lret
xlat
lahf
scas
imul
add
add
ljmp
add
incb
pop
loop
add
fbld
incl
and
add
jp
dec
add
fists
incl
les
dec
add
add
sbb
data16
add
incb
inc
pop
incb
add
add
mov
add
add
mov
add
into
xor
dec
add
hlt
fsubrs
popa
pop
incb
lahf
sbb
or
repz
incb
pop
jns
add
je
pop
inc
fs
rorl
pushf
enter
popa
popa
lahf
sbb
pusha
add
addr16
push
mov
add
inc
add
add
data16
incl
jl
mov
jns
in
inc
cmp
les
incb
out
jb
and
incb
xchg
testb
jb
sbb
fdivrs
xor
add
je
mov
add
pop
incl
incb
lcall
add
add
jl
pop
mov
inc
daa
incb
rorl
iret
lcall
fwait
outsl
in
aad
addl
mov
incb
js
in
ficoms
cli
and
add
mov
sbb
xor
add
xor
add
lock
and
incb
mov
add
subl
add
inc
mov
dec
add
add
add
mov
mov
and
add
pop
ret
pop
or
roll
incl
xchg
mov
add
push
add
js
pop
lcall
mov
add
mov
mov
mov
mov
xor
add
jnp
add
daa
incb
ljmp
jp
sti
mov
in
add
incb
cmp
inc
out
movsb
add
add
out
xchg
and
add
add
add
incl
xor
add
add
pop
mov
hlt
sub
xorl
add
incb
or
pop
mov
aaa
incb
lret
add
rorl
add
add
pop
mov
adc
add
incl
incb
sbb
add
add
mov
jnp
add
add
add
test
add
cwtl
pop
incl
outsl
fldcw
sub
lock
out
cmc
xchg
inc
pop
add
pop
incb
das
xchg
cld
fidivrs
mov
incb
xchg
adc
incb
inc
add
jb
pop
or
fwait
pop
mov
add
in
add
cmp
loopne
incb
aam
incb
int3
cmp
add
test
incb
fistpl
lret
imul
jmp
fdivl
incb
mov
popa
lds
mov
int
push
mov
push
add
rcl
mov
sbb
cmp
xchg
gs
ret
sbb
cmovae
add
dec
insb
add
push
gs
stc
add
add
incb
ja
add
sbbb
add
push
add
add
push
add
mov
leave
and
add
pop
add
push
push
add
sbb
arpl
add
add
xchg
add
incb
mov
add
incb
mov
jecxz
test
adc
add
incb
and
add
add
add
add
adc
add
data16
cmp
incl
and
add
xor
add
incb
cmp
add
xor
add
add
mov
or
mov
sbb
int
scas
loopne
fadds
incb
in
xchg
pusha
add
incb
test
add
fdivs
incb
aam
int3
iret
aaa
incb
push
push
add
pop
add
add
incl
pop
incb
jns
aaa
incl
mov
incb
shrb
add
ret
incl
xchg
inc
inc
add
incb
mov
mov
and
add
data16
mov
dec
add
inc
add
xchg
mov
add
sbbb
sub
dec
add
xchg
test
add
incb
push
add
stos
pushf
leave
in
out
add
mov
incb
xchg
push
add
incb
cltd
jno
mov
dec
add
add
sub
incb
adc
call
add
incl
ret
cmp
push
incb
out
xchg
fidivl
incb
test
jo
sbb
adc
add
incb
dec
xchg
push
add
add
pop
add
xchg
fwait
out
add
jmp
pop
xchg
incl
in
pop
push
add
add
bound
mov
aad
lcall
add
aas
xor
ret
inc
adc
add
repz
lahf
ja
rcrb
lcall
push
add
sarl
incb
push
mov
jle
mov
arpl
xor
add
add
pop
add
in
std
nop
lods
lods
xchg
xor
add
cwtl
mov
cltd
jbe
push
incb
sbb
pop
add
xchg
ret
add
mov
or
aaa
incb
jmp
aas
xor
add
pop
incb
add
add
test
loopne
xlat
jecxz
add
or
cmp
and
add
xor
add
add
aam
dec
bound
xchg
in
ret
dec
mov
mov
clc
scas
lock
add
add
incb
or
nop
je
fisttpl
push
shll
incb
cld
mov
xchg
dec
add
jecxz
mov
incb
add
jne
mov
add
incl
push
incb
jb
mov
and
add
repnz
cmp
and
add
movsb
push
add
add
fldcw
add
aam
out
push
mov
shll
cld
and
add
incb
in
or
out
mov
or
das
push
sbb
incl
sub
add
jecxz
sbb
lret
sti
pop
scas
scas
pop
add
loope
jb
lds
cmp
add
div
cmpsl
add
add
add
and
add
aam
mov
add
inc
add
incb
or
aas
nop
and
add
incb
pop
incb
and
xor
add
and
add
inc
add
mov
mov
mov
pusha
add
out
push
fmul
stc
rep
add
aad
lods
sub
dec
data16
incb
not
jbe
jne
incb
test
dec
aam
add
dec
js
aas
push
add
inc
push
add
add
fdivs
or
filds
cmpsb
sub
rol
shrb
incb
leave
imul
insl
incb
fstpl
test
pop
in
incl
sbb
incb
loop
incb
xor
add
bound
sbb
or
lds
je
xchg
incb
jg
fstpl
mov
incb
inc
push
jne
incb
bound
lret
add
mov
mov
int
sbb
add
add
jo
bound
fwait
loop
inc
negl
cmpsl
mov
ffree
out
dec
add
jo
adc
add
lods
sarb
incb
cld
jae
incb
cmc
push
incb
lcall
push
add
fstl
incl
xor
add
add
xchg
dec
add
inc
in
jl
or
xor
add
test
outsb
add
inc
insb
add
incb
int3
stos
mov
and
add
incl
icebp
sub
sbb
incb
cmp
sbb
daa
incb
test
add
add
push
add
aad
add
stc
lods
add
add
add
xor
add
adc
add
mov
out
orb
daa
incl
pop
outsb
add
lods
scas
cltd
xor
add
incl
mov
mov
test
aas
mov
cmpsb
mov
movl
adc
add
mov
mov
add
adc
fdivr
sub
movsl
mov
push
sti
sbb
cwtl
cmc
gs
inc
add
incb
jg
jmp
add
mov
mov
add
add
loop
sar
std
mov
add
xchg
mov
fsubr
xchg
mov
cli
into
sbb
cmp
mov
push
push
incb
or
cld
out
add
aaa
incb
adc
add
fistl
pop
mov
sub
cltd
clc
aas
in
movsb
add
add
mov
out
dec
and
adc
add
enter
incb
repnz
add
mov
add
add
mov
subl
add
dec
pop
pop
add
incb
lods
mull
add
add
push
incb
leave
data16
fcmovb
mov
and
add
add
add
incb
andl
popa
add
inc
mov
mov
pop
xchg
les
incl
mov
push
inc
add
jae
sub
push
and
add
mov
add
add
add
add
imul
sbb
or
add
incb
xor
add
or
scas
push
add
movsb
test
add
add
or
fstl
xchg
hlt
or
sbb
adc
add
incb
addl
add
jge
inc
or
loopne
mov
lods
xchg
stos
les
add
shr
xchg
dec
fmulp
jbe
lret
addr16
add
pop
sub
adc
add
test
insb
add
jge
incb
stos
test
testl
add
cli
cmp
xchg
stc
xchg
popa
adc
add
incl
cwtl
test
incl
shlb
clc
fwait
xlat
jnp
sbb
pop
incl
adcl
icebp
push
add
xchg
and
add
jbe
jmp
loope
add
pop
incl
popf
lds
add
fimuls
incb
into
and
add
pop
incb
pop
xchg
or
add
sub
add
push
adc
sarb
inc
outsl
je
jmp
add
or
out
add
pop
incl
leave
in
incl
sar
into
sbb
stc
aad
repnz
xchg
inc
cmc
mov
push
cmp
pop
incb
fsubs
mov
add
incb
jbe
rcrl
testl
push
imul
in
pusha
add
or
nop
movsl
cmc
add
incl
adc
add
add
mov
incl
add
add
sbb
insl
or
jp
loope
mov
stc
jecxz
xchg
push
add
lret
cmp
add
add
movsl
dec
add
dec
add
push
add
stos
and
add
dec
add
add
loope
cli
arpl
add
arpl
add
push
add
mov
inc
sbb
mov
mov
incl
push
add
xlat
adc
add
out
mov
lock
add
push
add
add
lea
add
sub
sbb
add
incl
imull
add
shll
or
jbe
dec
cmp
cmpsb
cmp
add
add
push
incb
mov
add
xchg
dec
outsl
movsb
out
dec
insb
add
orb
mov
add
mov
adc
add
push
push
incb
jle
imul
fldl
add
dec
add
repnz
add
adc
add
or
out
add
mov
mov
incb
push
add
incb
in
jl
dec
add
add
popl
incb
xchg
out
push
add
cli
xchg
call
mov
add
outsl
inc
add
add
jl
rorl
add
ds
cmpb
shll
incb
lods
mov
pop
add
lcall
leave
jecxz
popf
add
bound
xchg
mov
shll
lcall
popf
xlat
add
add
adc
add
loope
xchg
push
and
add
mov
cmp
in
clc
xor
add
cmp
add
into
nop
push
add
add
movb
add
xor
add
xor
add
add
add
add
je
cmp
add
jp
or
incl
or
inc
or
aam
add
incb
repnz
lods
lcall
incl
xlat
xlat
hlt
aad
sqrtps
add
ljmp
incb
or
loop
add
add
incb
add
add
xor
add
xchg
xor
push
in
leave
sub
add
xchg
mov
sub
jno
add
pop
stos
out
incl
push
add
mov
imul
add
insl
jl
mul
or
add
or
add
add
add
incb
cmp
xchg
jne
add
incb
cltd
inc
add
mov
lods
sub
lcall
int
push
outsl
jnp
fnsave
rorl
sbb
add
mov
cmc
cltd
mov
incl
and
add
insb
add
inc
mov
add
add
add
leave
nop
movsl
sti
cmpsl
xor
add
add
pop
add
incb
nop
jns
cli
mov
or
addr16
incl
cmc
jne
incb
dec
add
add
pusha
add
xchg
xchg
bound
sbb
cltd
xchg
pop
add
add
add
incl
pop
add
jmp
incb
mov
push
adc
add
scas
sahf
xor
add
add
mov
sbb
dec
add
test
add
outsb
add
movsl
outsl
sbb
dec
mov
add
add
incl
mov
add
add
incb
pop
xchg
je
leave
sahf
popf
jns
loope
fdivrs
int
repnz
inc
ret
fistps
mov
popa
scas
xor
add
adc
add
add
addr16
push
movsb
jecxz
repz
mov
incb
mov
incb
push
sahf
shrl
rorl
dec
add
sub
aad
incl
add
sub
add
jmp
incb
pop
add
ret
aaa
incb
add
add
icebp
adc
add
and
add
mov
in
pop
pop
loop
add
incb
stos
cmpsl
sbb
mov
add
add
push
jle
sbb
nop
push
add
add
mov
mov
aad
jmp
cmc
std
mov
incb
push
inc
test
incl
and
add
mov
or
jl
scas
int3
incl
jecxz
testb
inc
add
adc
add
incl
loopne
mov
inc
add
or
inc
sub
mov
add
add
mov
cmpsl
fwait
data16
ret
xor
add
incb
jo
sub
mov
add
js
sbb
xchg
incb
or
adc
add
inc
add
sub
pop
aam
add
incb
sub
push
add
sub
sub
add
add
incb
jg
push
add
cmp
incb
inc
mov
add
mov
addl
incb
push
fldl
mov
incb
pop
push
add
loope
jae
xor
add
incb
filds
jne
repz
add
add
incb
movsb
data16
ret
fwait
ret
pop
lcall
lahf
incb
cld
fmull
add
add
dec
arpl
cmp
dec
test
add
ljmp
icebp
hlt
dec
add
and
add
incl
xlat
cmp
xor
add
test
add
nop
or
in
incl
pop
incl
mov
xchg
xor
add
pop
repz
incb
add
add
pop
incl
ja
lahf
jno
cmp
add
arpl
cmp
mov
and
add
incl
cli
mov
add
ljmp
sbb
jmp
adc
add
in
mov
xor
add
mov
sbbl
stos
rorb
adc
add
add
inc
add
incb
int
dec
add
dec
push
add
out
pop
ret
incb
cmp
repnz
incb
and
test
in
call
cmp
incb
fwait
mov
incl
rclb
arpl
dec
add
mov
lods
or
push
xor
add
mov
dec
int
rol
jmp
fsubrl
add
pop
incl
push
incb
gs
mov
das
scas
inc
or
lds
add
add
movsl
add
add
dec
add
incb
sbb
mov
jne
add
scas
rorb
incb
inc
add
incb
cwtl
pop
incb
ja
incl
dec
add
incb
xchg
xor
add
or
incl
dec
add
pop
add
cmp
or
stc
mov
add
jno
xor
add
in
shr
pop
incb
cli
gs
incb
icebp
cmc
incb
or
sbb
or
add
push
add
dec
mov
and
add
incb
dec
js
xlat
mov
popf
lods
fldl2t
clc
sahf
dec
jmp
fdivrs
adc
add
aas
idiv
in
into
mov
pop
add
sahf
and
add
icebp
lods
enter
add
incb
xchg
sbbb
nop
mov
incl
add
add
adc
add
jl
cmp
add
pop
incb
pop
lods
ret
pop
incb
and
add
lret
push
cmp
mov
imull
incb
stos
addl
mov
loopne
sbb
jge
outsb
add
push
add
add
add
mov
rcll
incl
std
sahf
cmovb
shrb
or
scas
pop
add
mov
incb
xchg
xor
add
pop
leave
fcomip
pop
insb
add
outsb
add
sbb
add
fimull
ficomps
add
add
and
add
xlat
cmp
sub
ret
sub
incb
insl
dec
out
mov
cli
loop
ret
add
inc
inc
inc
add
incb
cmp
mov
add
in
mov
mov
mov
mov
adc
add
into
loop
add
add
mov
dec
add
enter
cmp
int
add
incb
ljmp
add
incb
movsb
dec
add
jp
aam
jne
xchg
push
add
jns
mov
add
incb
cmp
test
xchg
xchg
dec
add
incl
sahf
add
add
jecxz
in
pushf
je
mov
fmuls
xchg
lods
addb
add
add
add
push
add
loopne
xorl
shl
push
add
stos
aaa
incb
aam
incb
sbb
mov
in
aam
or
incb
sub
seto
cltd
push
incb
jb
xchg
iret
stc
push
add
call
pop
incb
pop
pop
add
shll
incb
mov
cmp
push
scas
pop
add
incb
xor
add
and
add
incb
sbb
add
in
mov
add
add
add
je
aas
add
add
incb
xchg
add
outsb
add
insb
add
add
incb
pop
add
aam
add
adc
add
incb
mov
stos
js
xor
add
cmp
dec
add
jae
imul
add
push
ficompl
mov
arpl
push
inc
dec
add
sbb
sbb
int
out
lods
je
dec
push
adc
push
add
add
gs
add
scas
lret
adc
add
add
jo
push
add
aaa
incb
shlb
incb
xor
add
add
shlb
outsb
add
fnstcw
mov
out
add
incb
std
jg
add
sub
cmc
int
out
add
add
or
rolb
out
adc
add
add
add
add
incb
xlat
pop
add
packsswb
add
add
incb
scas
sub
aaa
incb
fildl
incl
movsl
loope
add
add
incb
mov
sbb
out
ficoml
repz
rcrl
incl
lcall
add
fistl
add
adc
dec
aas
aam
fsubp
bound
inc
dec
into
jne
stc
sub
mov
lret
add
clc
scas
daa
incb
mov
popa
xchg
bound
mov
add
repz
daa
incb
push
incl
sarb
cmp
push
insl
icebp
out
add
add
incb
nop
fmuls
add
insl
popa
inc
ret
in
add
add
incb
add
add
pop
call
incl
testl
pop
outsl
incb
dec
add
dec
fldl
or
rcll
incb
adc
add
cwtl
mov
incl
jl
cwtl
outsl
xchg
rclb
incl
js
dec
or
add
add
push
incl
bound
pop
incb
push
sarb
cmp
cli
cmpsb
test
cmp
incb
cltd
cli
push
adc
add
cmp
mov
lahf
fstp
icebp
jns
cwtl
lods
adc
add
icebp
xchg
pop
add
fstpl
inc
cld
add
add
mov
pop
incb
pop
jp
pop
add
or
or
add
add
incb
bound
inc
add
pop
add
incb
pop
incb
imul
cmc
mov
incb
dec
ret
add
inc
add
fnstcw
and
add
push
incl
lods
mov
mov
incb
xchg
add
add
aam
inc
out
dec
add
incb
inc
add
cld
mov
and
add
popf
dec
add
cld
jnp
sub
cmp
add
jle
incl
stc
lock
sbb
inc
hlt
and
add
incb
and
mov
add
ret
and
add
incb
or
sbb
mov
add
add
add
incb
fdivrs
lods
sbb
add
and
add
cs
inc
add
and
add
repz
incl
and
add
aaa
incb
jge
pusha
add
xchg
adc
add
add
incb
aas
adc
add
sbb
add
add
incl
scas
out
cs
arpl
incl
cltd
push
aas
add
add
add
enter
js
mov
inc
add
incb
outsl
inc
add
outsb
add
add
add
or
jae
xchg
xchg
std
aaa
incb
xchg
int
mov
add
pop
incb
cmp
sbb
scas
shlb
incl
jnp
mov
cltd
test
incb
jno
or
into
fs
fdiv
sub
mull
mov
incb
jb
pop
incb
jmp
jns
mov
pop
inc
ror
orl
mov
icebp
push
incb
cmp
jmp
adc
add
add
pop
add
add
lods
adc
add
adc
add
push
add
mov
xor
add
xor
add
pusha
add
mov
lret
add
movsb
lahf
scas
mov
jnp
imull
add
lcall
lock
xor
add
incl
push
and
xor
add
incb
sarl
sbb
rorl
jbe
outsb
add
add
add
add
inc
add
data16
mov
dec
stos
loopne
add
and
int
incb
dec
test
add
push
in
lahf
add
sub
jbe
sbbl
idivl
add
inc
fnstsw
pop
mov
add
add
pop
add
incb
jne
test
ds
jnp
sub
incb
jle
xchg
repz
mov
mov
out
mov
mov
incl
cld
jl
adc
add
incb
incb
add
add
incb
sbb
mov
incb
rcrb
or
gs
or
jo
scas
jnp
call
push
xor
add
add
add
jo
nop
jecxz
adc
ljmp
mov
add
fmull
add
incl
ret
imul
orb
add
incb
in
rorl
push
add
mov
incb
sub
xchg
ret
dec
add
add
add
je
jg
stos
sub
jg
add
add
stos
clc
push
and
add
hlt
lea
add
jmp
add
xchg
incb
add
add
mov
cli
pop
outsb
add
pusha
add
add
add
add
dec
jecxz
cmpsl
pop
sahf
dec
daa
incl
jmp
inc
mov
cmp
push
adc
add
add
add
add
xor
add
shlb
stc
nop
xchg
and
add
xor
add
scas
sahf
incb
shlb
incl
mov
xor
add
cmpsb
and
add
inc
add
xor
add
add
aaa
incl
add
add
add
or
roll
mov
add
add
jge
mov
mov
mov
pop
imul
cmp
enter
mov
incb
ret
incb
pop
sbb
add
fimull
mov
repnz
decl
into
cmp
sbb
in
leave
sbb
stc
dec
add
push
add
incl
testl
incb
les
decb
add
add
xchg
xlat
out
mov
add
popf
sbbb
mov
sbb
incb
gs
add
xchg
sbb
mov
bound
and
add
imul
add
mov
fimull
incl
push
incb
sbb
dec
pop
das
xchg
test
xchg
sub
inc
insl
out
mov
add
and
add
add
incb
lea
and
add
push
incl
cmc
data16
sti
test
push
cmc
rcll
sbb
add
dec
add
push
incb
mov
push
add
add
lret
add
mov
shl
add
add
incb
and
add
shll
incl
insl
les
add
incb
bound
cmp
popa
outsl
repnz
xchg
insb
add
and
add
dec
add
add
add
cmpb
xchg
mov
iret
roll
add
inc
add
mov
add
cmp
mov
repnz
sub
nop
mov
xor
add
inc
insl
cmp
incb
cmp
add
mov
popf
jle
setl
add
incb
dec
clc
xchg
mov
incb
and
add
jae
incb
int
push
add
add
mov
add
add
incb
push
add
roll
xchg
andl
add
add
adc
add
add
incb
xchg
das
xchg
xchg
sbb
pop
mov
sub
popf
push
or
or
jns
incb
mov
adc
inc
lds
push
incb
mov
loopne
incb
xchg
call
add
cwtl
leave
in
mov
or
mov
incb
daa
incb
or
inc
and
add
test
jnp
sbb
sbb
push
add
rclb
pop
push
incb
shrb
xchg
lea
cwtl
stc
push
add
add
xchg
test
push
incb
ffree
repz
incb
fisubs
incb
inc
add
xchg
jb
push
incb
test
jecxz
add
incb
mov
incb
test
cld
xchg
into
pop
dec
add
add
call
push
add
out
bound
leave
movsl
sub
add
add
cmp
dec
mov
ja
mov
push
add
pop
scas
pop
icebp
mov
incb
inc
push
incb
aas
arpl
frstor
or
jo
js
pop
add
incl
sti
in
mov
sub
incl
aaa
incb
push
add
add
add
add
add
loopne
incl
outsl
ror
fdiv
push
add
mov
adc
add
add
pop
mov
mov
stos
out
cmpsb
data16
add
add
jae
incb
jnp
cmp
add
and
add
mov
movsl
outsl
aam
nop
int3
or
pop
sub
aaa
incb
or
lods
xor
add
dec
ret
jno
jo
adc
add
dec
push
fdecstp
inc
les
cld
loope
incb
cld
stos
push
add
imul
mov
incb
add
add
and
add
and
add
incl
mov
or
mov
incb
movsl
fnstsw
je
bound
out
add
roll
incb
ret
add
incb
decl
add
not
fildl
stos
xor
add
incb
adc
add
add
push
add
nop
sub
popf
imul
jbe
inc
add
add
out
dec
cwtl
pushf
xor
add
fisubrl
add
mov
add
test
incb
mov
adc
add
incl
xor
add
add
push
add
cwtl
sbb
adc
add
add
shlb
sbb
in
aad
loope
roll
add
cmp
shlb
rorl
inc
lcall
add
add
add
mov
add
add
xchg
ja
dec
pop
incb
js
and
add
push
add
push
add
out
add
add
jnp
cli
lahf
outsb
add
lds
hlt
jnp
add
mov
add
adc
add
bound
cmpl
add
add
push
add
incb
test
add
add
xchg
mov
add
add
sub
mov
add
push
xor
add
incb
imul
add
add
jl
jp
and
add
pop
fisubrl
push
das
pop
mov
add
add
add
mov
add
mov
incb
js
mov
add
sbb
xor
add
ficoml
incb
add
incl
sub
arpl
clc
xchg
test
mov
sbb
jge
add
incb
das
sbb
aad
jbe
mov
insb
add
rcrb
incb
mov
aaa
incl
mov
push
data16
std
mov
sub
and
add
add
lret
mov
xchg
cmpsl
inc
les
incb
dec
add
incb
jnp
int
into
sbb
sbb
imul
add
push
insl
adc
add
mov
sub
xchg
out
cld
nop
sarl
pop
incl
out
adc
add
sub
shlb
and
add
adc
add
add
add
rorb
push
ljmp
incb
adc
in
mov
inc
cmpsb
inc
std
mov
ljmp
lods
or
test
incb
xchg
loopne
incb
push
xchg
and
add
pop
add
je
nop
pop
loop
sub
inc
and
add
add
outsl
jge
add
pop
sbb
mov
movsb
fdivrl
sti
into
mov
and
add
incb
and
add
add
add
add
rep
lock
add
in
xchg
push
add
jne
add
add
sub
je
jl
andl
fisttpll
add
push
add
shrl
aas
jecxz
incb
pop
incb
push
test
lcall
sub
jae
fsubl
incb
inc
fldenv
pushf
mov
aad
roll
jno
push
add
incl
ret
leave
popa
insb
add
push
pop
incb
icebp
push
add
add
clc
push
push
add
sahf
mov
add
adc
add
push
incb
sbb
add
pop
jae
incb
out
in
xchg
sub
pop
add
pop
add
cmpsb
aas
lcall
add
add
jb
in
incb
lock
ds
scas
jg
jnp
push
pop
add
int
fmull
jo
rolb
incb
or
xor
add
mov
incb
xlat
xchg
push
add
jecxz
add
mov
test
add
mov
cmc
sub
les
jo
xchg
jbe
in
sub
test
or
add
inc
add
or
adc
mov
add
dec
outsl
bound
dec
jns
xlat
leave
nop
clc
cmp
lret
sub
sbb
pop
movsl
test
jp
in
fists
incl
inc
mov
add
js
push
incl
add
fldt
add
jo
mov
std
jecxz
int
ret
xor
add
add
dec
out
sub
mov
ja
add
adc
add
jbe
push
add
mov
incb
out
adc
add
xchg
incb
addl
fists
push
add
push
add
stos
add
add
pop
incb
fucomip
push
mov
inc
add
jnp
add
add
incl
test
cmc
add
add
imulb
sbb
push
incb
inc
add
xchg
jl
xor
add
jae
inc
xor
add
out
push
add
push
cwtl
lcall
pop
or
stc
jle
sbb
cmp
sbb
and
add
aam
in
jb
push
fldl
jp
test
sbbl
incl
into
in
xchg
jne
incb
adc
push
add
incl
push
test
cli
dec
xor
add
incb
stos
adc
add
add
jge
fnstenv
adc
add
xchg
stos
fwait
out
jbe
scas
into
push
add
incl
dec
add
xchg
and
xor
add
mov
dec
sahf
add
sbb
dec
add
xchg
mov
pop
add
jp
enter
adc
add
jle
xchg
pop
std
cld
into
push
add
jg
adc
add
add
cmp
mov
sbb
lods
ds
xchg
jmp
int3
mov
incb
call
incb
pop
add
lahf
cmp
dec
add
incl
pop
or
add
stos
cmp
add
or
jmp
add
cld
lea
aam
xchg
inc
jnp
nop
test
aad
inc
add
sahf
push
incl
xor
add
fnsave
dec
outsl
ja
add
add
push
mov
incb
add
add
add
mov
test
dec
pop
add
addr16
pop
sub
loop
mov
pop
add
xor
add
add
cli
outsb
add
sub
subl
adc
add
in
mov
sub
add
add
jg
in
outsl
sub
ret
jp
cli
ljmp
jnp
iret
xchg
mov
add
out
add
xchg
int3
or
lock
push
pop
jo
add
add
add
add
idivl
rol
hlt
loope
mull
jle
ffreep
movsl
jl
gs
push
add
rol
stos
xor
add
incb
lds
cmp
incb
add
add
mov
jge
cmpsl
hlt
in
mov
fwait
repnz
add
int3
repz
add
add
dec
add
xor
add
pop
add
xor
add
cmp
idiv
lock
dec
add
mov
cmpsl
sbb
jnp
incl
inc
add
or
sbb
repz
test
mov
incl
sbb
icebp
jmp
incb
mov
incb
jp
mov
in
mov
add
jg
add
or
add
fldenv
incl
add
push
add
hlt
addr16
inc
add
loope
add
int
int3
mov
pushf
cwtl
add
or
add
xchg
lock
mov
incb
mov
jge
movsb
add
incl
jb
hlt
add
mov
sub
pop
push
add
xchg
mov
add
xchg
or
push
add
cmp
sub
pop
incb
scas
xchg
jbe
dec
mov
cmp
xor
add
movsl
adc
add
lods
cmpsb
jmp
incb
add
add
push
je
in
incb
js
pop
add
add
iret
and
add
or
andb
add
addl
dec
add
in
add
incb
dec
mov
mov
incl
push
incb
js
scas
inc
add
fildll
adc
add
cmpl
mov
imul
lds
add
incb
sahf
stos
into
push
add
incb
in
mov
push
add
jecxz
aas
fsubrl
add
incl
dec
add
test
incb
mov
leave
jle
femms
add
adc
add
inc
insl
out
mov
or
push
incl
sbb
ret
rorb
dec
stc
cltd
jle
pushf
sti
pushf
dec
or
cmp
dec
jno
imul
incb
inc
jecxz
aam
incb
cmpsb
sbbb
and
add
add
incb
test
inc
add
aas
enter
sbb
add
cmpsb
or
dec
flds
pop
jb
xchg
les
daa
incb
test
movsl
daa
incb
mov
dec
add
out
incb
adc
add
add
add
xor
add
mov
mov
pusha
add
addr16
add
cli
inc
add
cmc
push
imul
push
add
incl
fildll
xlat
ret
bound
cld
adc
add
sarb
mulb
add
dec
lock
jo
rcrl
sbb
xlat
xlat
pop
incb
das
addr16
add
push
loop
incl
loope
add
incl
daa
incb
cld
mov
faddl
or
aaa
incb
cmp
cmpsl
insb
add
ror
rol
jne
jmp
sbb
dec
add
add
incb
shll
add
incl
mov
shll
aas
push
inc
pop
outsl
test
dec
add
add
incb
sbb
or
add
push
xchg
cmpsl
imul
aas
and
add
add
sahf
sbb
push
add
add
incb
and
add
or
add
add
lock
loopne
pop
jbe
xor
shll
incl
pop
add
jnp
add
sub
cs
xchg
xor
add
add
addr16
in
add
add
incb
and
add
stc
adc
add
incb
add
add
inc
add
and
add
and
in
cmpsb
mov
incl
test
ds
adc
add
dec
data16
incb
jo
arpl
add
xor
add
incl
inc
add
mov
jge
add
push
pop
incl
aam
pop
add
sub
incb
mov
add
pop
add
incb
fstpl
sbb
mov
and
add
jge
incb
adc
add
xchg
aam
shrl
loope
sahf
mov
int
dec
ret
push
sarb
xor
add
out
push
incb
xchg
lahf
movsb
mov
pop
adcl
daa
incb
xchg
mov
add
add
jl
push
incb
jle
fmulp
pop
add
sbb
int
add
incb
bnd
xor
add
xchg
inc
lea
add
incb
add
jge
ret
data16
mov
test
add
stc
sahf
xchg
add
incl
inc
add
bound
loope
adc
add
cmp
ljmp
adc
add
mov
hlt
lret
aam
add
std
in
test
mov
sbb
movsb
sbb
jo
push
add
dec
add
ficoms
add
or
adc
add
scas
mov
fdivr
mov
add
dec
add
arpl
sbbl
add
incb
divb
incb
add
add
xor
add
or
mov
incb
dec
add
incl
jg
add
add
add
jno
subb
mov
push
add
aad
pop
xor
add
add
xchg
bound
sub
sbb
pop
push
imul
add
xchg
cltd
and
add
mov
incb
lcall
imul
dec
add
incb
into
outsb
add
incb
repnz
std
aad
add
sbb
fistpl
lock
add
incb
xor
add
add
add
incb
and
add
lret
pop
add
cli
dec
push
jo
lock
mov
inc
jp
pusha
add
int
call
add
mov
div
int3
fdiv
adc
xlat
mov
outsl
imul
xor
add
insl
sub
mov
stos
out
stos
inc
add
das
iret
or
incl
fdivr
fbld
data16
mov
insb
add
push
push
add
incb
fidivrs
add
mov
sahf
mov
add
add
add
lcall
add
add
stos
rclb
xor
add
adc
add
add
sbb
jmp
lret
push
add
dec
adc
add
jle
mov
das
shrl
xor
add
push
add
incb
mov
pop
incl
adc
add
in
rcrb
stc
inc
add
lds
add
or
mov
cwtl
add
add
jmp
mov
and
stc
inc
add
negb
add
push
mov
jl
je
and
incb
jg
or
add
mov
xor
add
add
test
xlat
repz
jbe
scas
lret
incl
xchg
pop
add
mov
add
insl
daa
incb
add
add
adc
add
mov
xor
add
aas
mov
popf
clc
and
add
xchg
sahf
stos
in
out
add
add
pop
cmpsb
jbe
stc
inc
repnz
sbb
ficompl
insb
add
adc
outsl
push
add
xchg
pop
lods
sbb
incb
push
add
out
je
test
in
leave
int
sub
test
add
add
add
mov
jb
into
push
incb
cmpsl
andl
add
incb
inc
test
jb
cltd
iret
repnz
adc
add
sahf
mov
add
add
icebp
push
add
jp
cmp
mov
add
outsb
add
pusha
add
ljmp
incb
jmp
cmp
incb
outsb
add
add
repz
add
enter
add
add
lock
subl
outsb
add
incb
mov
inc
pop
add
aaa
incb
mov
cmp
add
push
inc
add
call
lret
in
shll
add
incb
push
add
jge
stc
lods
loop
mov
add
xor
std
popf
push
add
incb
adc
add
add
lret
add
mov
add
add
popf
push
add
add
mov
add
cltd
wrmsr
incb
mov
add
out
add
adc
add
sbb
int3
adc
add
incb
repnz
add
cmp
push
add
dec
add
scas
cmpl
jge
inc
add
inc
dec
add
incl
test
incb
mov
into
les
add
rclb
incb
inc
add
lods
jno
ret
cwtl
sti
mov
add
add
lret
add
popa
add
add
dec
insl
or
incb
cwtl
stos
imull
jl
fsubs
shlb
stc
shufps
cmpsb
icebp
shlb
add
data16
dec
push
incl
loopne
add
adc
add
inc
add
add
dec
pop
pop
add
cmpsb
fnsave
xor
add
lock
add
incb
jl
subl
push
add
aad
inc
add
and
add
lcall
add
adc
add
add
lret
cmpsb
pop
add
call
xchg
add
ja
pop
mov
into
insl
mov
insl
xchg
mov
sarl
xchg
shlb
out
pop
add
incb
sub
insb
add
sbb
push
add
incb
stos
sahf
inc
jecxz
out
lds
add
mov
add
push
push
int3
pop
add
jg
incb
daa
incb
push
incb
add
stos
jle
pop
pop
ret
incb
fiaddl
stc
sub
mov
add
loop
incb
fnstsw
and
add
pop
pop
add
inc
and
add
push
add
mov
rorl
test
stos
aad
add
sub
pop
add
add
mov
incb
int3
mov
dec
add
mov
test
jmp
jne
lods
scas
cli
xchg
insl
and
add
shr
test
jbe
and
add
dec
add
add
mov
add
cmp
mull
incb
jo
add
add
mov
mov
jns
mov
sub
mov
add
xchg
lcall
add
adc
add
and
add
incb
fnstenv
push
add
mov
add
je
into
lret
add
add
jae
add
sahf
mov
incb
and
add
shll
mov
mov
fnsave
aam
add
les
out
mov
cmc
push
add
rcr
add
push
add
sub
pop
incb
or
xchg
mov
incb
test
incb
pop
lret
pop
cwtl
adc
add
adc
add
jle
lret
movsl
nop
ja
jns
and
incb
mov
add
das
repnz
add
incl
mov
add
add
jge
mov
add
incl
mov
sbb
mov
xchg
repnz
xchg
sahf
out
in
pop
add
fwait
mov
sbb
xlat
jae
pop
inc
add
aam
incb
xchg
shlb
addr16
and
add
mov
in
out
push
push
add
add
push
add
add
int
add
incl
mov
add
icebp
rclb
push
incb
dec
add
incb
xor
add
lds
nop
out
add
push
add
add
hlt
loope
jns
add
incb
mov
incb
leave
ret
adc
add
add
jae
lea
aam
mov
xchg
dec
add
add
add
in
cmp
stos
push
incb
or
mov
daa
incl
and
add
cmp
dec
add
and
add
ret
add
incl
into
cli
inc
dec
jne
add
incl
push
enter
hlt
fwait
adc
add
lods
fs
and
add
mov
out
loopne
add
imul
pop
add
out
mov
ret
dec
lds
add
fsubrl
jbe
out
loopne
fdivl
incb
mov
adc
add
jg
cmp
repnz
fbld
incb
and
add
incb
or
int
fucomip
dec
add
jmp
add
cmp
pop
add
mov
add
addb
add
andb
cmp
test
cmp
dec
or
incl
mov
cmp
add
add
incl
insl
jecxz
push
add
in
iret
scas
popf
lods
or
add
pop
add
cmp
enter
add
adc
mov
push
add
loopne
add
sahf
cwtl
dec
add
jnp
cmc
shrl
scas
sub
dec
sti
loop
add
mov
mov
fsubr
pop
je
fcompl
add
movsl
cltd
aam
add
incb
ret
incb
fwait
push
incl
sbb
loopne
add
fisubs
add
push
add
rorb
clc
leave
pop
add
incb
mov
push
add
xchg
jb
mov
ljmp
add
je
xor
incb
pop
add
jb
xchg
cmpsb
inc
add
xor
add
adc
add
add
add
add
dec
xchg
sahf
pop
add
incb
adc
add
inc
jl
cmp
incb
adc
add
les
add
daa
incb
fstp
data16
cld
xchg
rclb
stos
pop
add
incb
sbb
jg
add
incl
xchg
std
adc
add
mov
inc
in
jmp
subb
cmp
aad
add
aam
movsb
iret
in
movb
add
mov
and
add
incb
std
fstp
fldt
cmp
pop
add
incl
push
add
add
push
incb
push
or
scas
mov
xchg
mov
movsl
inc
add
sub
aad
add
dec
add
inc
in
subb
jmp
movsl
fdivl
inc
lock
add
push
cmp
clc
out
xchg
incb
inc
add
popf
fdivrl
sahf
loop
push
popa
push
incb
int
sub
and
add
incl
in
or
adc
add
imul
js
sub
sbb
jmp
jg
bound
sbb
add
add
cmpsl
lea
add
jge
push
incb
imul
add
xor
add
add
add
mov
push
popl
adc
add
cmpsb
lret
sub
cltd
xchg
and
add
pop
add
mov
lcall
add
jns
loope
add
add
incb
shlb
add
incb
jb
loope
into
incb
pop
xchg
jno
incb
and
add
adcl
xchg
fcompl
add
add
add
shl
or
inc
scas
xchg
sbb
incb
into
rolb
incb
or
dec
aam
sub
pop
add
ja
incl
add
add
add
int3
rorl
mov
add
sbbb
add
or
ljmp
mov
lds
shlb
dec
test
fmuls
ficomps
in
xlat
das
pop
add
add
fdivs
incb
and
add
setb
ja
xor
add
add
add
jne
add
jo
sbb
push
mov
add
incl
movsl
mov
add
add
filds
incl
in
repz
add
dec
push
add
incl
inc
add
repnz
incb
xchg
inc
push
add
incb
js
mov
cmp
jae
xorb
xor
add
jb
popf
pop
push
incb
addr16
add
incb
test
push
add
fcomps
add
rolb
mov
adc
and
incb
adc
add
add
mov
incl
iret
mov
inc
add
lods
dec
mov
mov
add
or
repnz
xorb
add
mov
add
pusha
add
fisttpll
pop
jno
dec
add
mov
xchg
inc
add
add
test
jge
add
enter
add
mov
enter
add
jno
mov
outsl
jnp
add
incl
data16
jecxz
jae
pop
hlt
push
add
xor
add
add
dec
roll
cltd
je
movsb
push
add
add
add
movsb
scas
xchg
outsb
add
incl
and
add
outsb
add
incb
loopne
ret
mov
cmp
push
incb
mov
add
add
adc
add
mov
lods
xchg
pop
add
incb
inc
add
adc
add
cwtl
push
add
nop
mov
add
incb
sub
inc
pusha
add
std
lods
fnstcw
test
or
or
cltd
fisubrs
inc
arpl
inc
push
add
rorl
cwtl
and
add
cs
cmc
sbb
gs
xchg
incl
enter
lret
inc
mov
lock
push
jmp
add
pop
incb
jmp
test
push
lods
xor
add
jnp
addr16
gs
cmp
add
add
incb
cli
movsl
js
inc
add
adc
add
loop
out
adc
add
add
incb
out
incb
xchg
adc
add
repnz
add
jae
sbb
pop
add
pop
xchg
orb
xchg
mov
inc
add
add
insb
add
repz
incb
int3
xchg
add
pop
incl
iret
sub
inc
add
add
add
add
daa
incl
nop
xor
add
lahf
cwtl
fwait
adc
add
sub
push
incb
jb
push
add
add
incb
dec
add
out
jnp
or
add
loope
stos
xchg
sub
mov
aad
leave
loope
jle
adc
add
mov
subl
add
pop
incb
or
fnstenv
incb
and
or
jno
mov
xor
add
add
loope
dec
push
incl
sbb
mov
mov
xor
add
add
push
test
sbb
add
add
mov
and
add
pop
mov
add
sub
xchg
insb
add
incl
icebp
mov
repnz
add
incb
jae
add
xor
jecxz
subb
cltd
jb
sbb
mov
xor
adc
add
and
add
or
ret
incb
xchg
xorb
add
or
jns
out
jb
sti
xor
add
or
and
add
add
xchg
xlat
into
in
jne
add
adc
add
out
jle
mov
outsb
add
pop
incb
mov
loopne
add
shrb
rcr
iret
movsb
in
ja
add
cmp
cmp
cmpsb
and
add
add
add
add
incb
mov
add
add
aaa
incb
fdivrl
adc
add
inc
outsl
leave
jo
inc
js
and
add
test
dec
jl
outsb
add
imul
xchg
out
test
out
incb
call
incb
cltd
sbb
add
incb
data16
incl
fwait
popa
icebp
sub
sbb
pcmpeqd
incb
jp
sbb
dec
add
out
mov
dec
add
add
incl
pop
xor
add
incl
add
add
int
add
shr
xchg
into
mov
out
add
add
add
fdivrs
xchg
dec
inc
or
fiadds
sar
jo
in
xchg
lock
lahf
pop
add
incb
insb
add
int
add
xor
add
incb
popf
cwtl
add
add
or
add
loop
add
or
cmp
inc
aam
imul
dec
cmp
fnstcw
dec
add
lods
les
aam
aaa
incb
adc
add
add
add
incb
mov
incl
fwait
and
add
dec
add
stos
adc
add
out
out
inc
out
incb
xchg
js
adcb
add
add
add
or
sub
incb
sub
pop
push
notl
shll
incl
cmpsl
adc
add
add
add
incb
cmpsl
push
and
add
add
mov
pop
jge
add
add
incl
sub
xorl
jmp
add
inc
sahf
or
incb
incb
push
incb
mov
add
aad
loopne
add
add
add
or
jecxz
add
incb
fsubrs
jns
add
incb
mov
shlb
mov
das
mov
lds
add
mov
add
incb
addr16
add
psadbw
inc
roll
aad
inc
add
incb
and
add
incl
sbb
push
add
mov
add
or
test
incb
mov
inc
add
add
add
jmp
daa
incb
nop
je
repnz
add
xor
add
jle
std
adc
movb
add
incb
stc
inc
mov
incb
fimull
cmp
ret
jne
push
add
incb
outsl
dec
add
in
add
incb
jecxz
inc
pop
pop
add
enter
lret
ljmp
xor
add
mov
or
fdivl
add
add
incl
cltd
sbbl
add
cmp
pop
add
add
add
jmp
add
ret
sbb
stos
cltd
xor
add
add
add
add
add
mov
mov
mov
dec
xor
add
sbb
add
insb
add
incb
push
pop
movsb
incb
mov
mov
jl
aas
adc
add
stos
movsl
dec
push
incb
jne
add
cs
testl
or
push
lods
or
cmpsb
xchg
clc
mov
mov
pop
add
sbb
je
std
lahf
inc
pop
incb
mov
sub
mov
xor
add
xlat
adc
add
add
faddl
arpl
cmp
movsb
jo
scas
adc
add
sbb
pop
add
jmp
cmp
loope
iret
inc
add
add
lret
incb
pop
add
add
add
mov
incb
lods
lahf
adc
add
xlat
dec
incl
leave
js
incl
xchg
cli
sub
sti
xchg
leave
test
jae
aam
cmp
inc
xchg
push
sbbb
incb
inc
add
xchg
xchg
hlt
pop
add
pop
add
push
aam
mov
incb
test
int
incl
add
jns
add
mov
subb
add
cmpsb
ja
xchg
neg
adc
mov
add
add
add
pop
cmp
sbb
cmp
add
cli
push
ret
xchg
jmp
incb
stos
lds
push
add
add
add
lret
mov
rorl
fbld
incb
enter
pop
xchg
imul
xchg
imul
add
mov
add
add
incb
inc
push
add
jno
add
xchg
add
test
or
cmp
ja
cmp
divl
mov
lods
xor
add
js
and
add
mov
icebp
mov
andl
add
cmp
add
cwtl
js
lret
adc
add
fsubl
lods
ret
test
or
mov
push
bound
sbbl
add
add
sub
add
jno
jnp
pop
add
mov
data16
sbb
rcll
add
inc
data16
xor
add
add
popf
mov
lea
add
fxam
xchg
in
mov
incb
push
add
outsl
fstpt
or
push
xlat
add
add
dec
add
add
add
jg
incb
pop
mov
mov
jo
jg
incb
add
jns
mov
loop
jb
mov
test
add
addr16
add
inc
add
incl
nop
dec
lea
jge
lcall
add
mov
pop
add
incb
aas
aad
incb
pop
add
add
add
incb
xlat
daa
incb
mov
incb
sub
ja
xlat
adc
add
fistpll
xchg
pop
add
jae
jnp
incl
rclb
add
add
jno
incb
mov
incb
sub
loopne
movsl
add
add
pop
mov
test
call
adc
add
imul
test
add
bound
insl
daa
incb
fisubrl
popa
or
mov
lcall
cmpsl
mov
add
push
add
incl
mov
incl
inc
pop
out
mov
add
jb
out
dec
add
add
xlat
xchg
loop
add
add
