push
call
ret
ret
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
push
sbb
in
addl
push
push
push
add
xor
cmpl
pop
sbb
jne
int3
pop
lock
call
add
hlt
jae
push
jmp
mov
mov
mov
add
push
stos
mov
int3
dec
adc
mov
sarl
sbb
leave
cmp
je
sbb
mov
shl
or
inc
inc
xchg
cmp
pop
xor
and
sub
jge
sbb
jbe
push
add
xor
ret
sahf
or
add
movl
jae
mov
push
mov
sbb
loope
int
xchg
test
shr
imul
fdivrs
pop
addl
xorb
shr
add
pushl
xchg
add
lea
sub
or
test
fmuls
jl
add
lock
xor
cmp
rcrl
and
xor
jo
xchg
fdivs
mov
sbb
pop
adc
shl
pushf
ficoms
decl
xor
mov
ljmp
add
push
mov
sub
shl
test
decl
sbb
rolb
mov
lea
dec
or
cmp
xor
sub
jae
insb
cli
add
or
nop
les
mov
jp
sub
xchg
pop
xchg
aaa
xchg
jmp
adcb
xor
xchg
mov
pop
sahf
hlt
mov
xor
inc
and
add
adc
or
gs
and
filds
rolb
fwait
adc
sub
push
enter
dec
or
jp
push
shrl
add
sbb
and
add
inc
cmp
inc
fmull
call
and
rcl
jecxz
setge
dec
and
stc
stc
add
enter
jmp
filds
mov
inc
mov
xor
test
xlat
inc
xchg
enter
xorl
shll
sub
andl
jmp
clc
or
jns
enter
and
inc
icebp
add
pop
dec
insb
mov
adc
pop
sbb
inc
mov
add
mov
mov
test
xorb
sbb
and
inc
or
mov
mov
lock
pop
sub
push
mov
mov
xchg
mov
adc
inc
add
mov
adc
jmp
cltd
in
xor
nop
ss
test
adc
jmp
cmpsl
push
pop
ret
shll
pushl
shrb
and
mov
adc
push
and
dec
sbb
inc
dec
mov
push
inc
or
hlt
jb
adc
or
into
or
mov
sbb
lea
or
inc
xor
xchg
adc
or
aam
dec
add
les
mov
mov
sbb
shrl
inc
adc
mov
sti
loop
sarb
push
push
aam
pop
movsl
cmc
inc
push
add
cmp
test
xor
cli
shr
mov
cmp
adc
xlat
mov
fwait
aam
or
cwtl
shl
jmp
sub
xor
adc
xor
mov
bound
adc
pop
mov
pop
cmp
out
mov
pop
loopne
lea
pop
inc
sti
add
inc
jmp
pop
lcall
bound
and
cmc
shr
popf
movsb
sub
lods
lret
xor
xor
inc
adc
out
test
adc
lea
test
cmp
inc
cmp
jl
inc
lods
shll
dec
or
add
lcall
rcrb
mov
push
sbbb
push
dec
ds
add
and
dec
addr16
pop
rorl
cmp
jb
sub
or
push
psllq
add
out
enter
stos
pop
test
xchg
movsb
xor
mov
adc
jmp
popa
shlb
sub
inc
insl
sub
xchg
sub
lea
jge
mov
gs
adc
lea
jmp
cli
pop
inc
mov
je
inc
push
mov
mov
jae
mov
dec
divl
push
enter
xorl
sbb
loope
or
subb
jecxz
mov
adcb
pushf
jne
mov
push
loope
or
mov
pop
pop
leave
ret
addb
push
add
add
add
add
adc
add
add
xor
or
add
add
add
add
and
add
or
add
add
movsl
mov
sarl
jns
jae
outsl
outsl
outsl
outsl
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
push
add
clc
pop
add
sbb
add
mov
add
add
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
pop
or
or
add
in
add
add
add
add
add
add
add
loopne
add
rcrb
push
add
add
add
add
add
add
add
add
add
or
add
fcomps
add
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
or
xor
add
in
add
add
add
add
add
add
add
mov
add
xchg
pop
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
enter
mov
add
in
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
les
add
add
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
pop
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
imul
pop
add
add
add
add
add
add
add
add
add
rolb
add
insl
or
pop
add
add
add
add
add
add
add
add
add
call
outsb
or
pop
add
add
add
add
add
add
add
add
add
adc
add
outsl
or
in
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
add
jo
add
add
add
add
add
add
add
add
add
call
jns
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
in
add
add
add
add
add
add
add
cmp
or
sub
add
in
add
add
add
add
add
add
add
pusha
add
or
call
add
add
add
add
add
add
add
mov
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
rolb
or
or
add
in
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
or
xchg
add
add
add
nop
push
add
mov
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
test
add
rolb
add
add
add
add
add
add
add
add
add
addb
add
or
cwtl
add
add
add
add
add
add
add
add
add
test
add
les
add
in
add
add
add
add
add
add
add
rolb
add
inc
mov
add
add
add
add
add
add
add
add
add
add
clc
push
add
cmp
or
ljmp
add
add
add
add
add
add
and
add
sub
add
in
add
add
add
add
add
add
add
dec
pop
add
fcoms
add
in
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
pop
add
pop
cwtl
or
mov
add
in
add
add
add
add
add
add
add
rolb
add
or
loop
add
in
add
add
add
add
add
add
add
call
cltd
or
mov
add
in
add
add
add
add
or
add
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
sldt
enter
sbb
or
addb
add
add
add
add
add
add
add
add
add
js
add
jl
or
push
add
add
add
add
add
add
add
add
add
mov
fwait
or
sub
add
in
add
add
add
add
add
add
add
enter
clc
fwait
or
js
add
in
add
add
add
add
add
add
add
lock
add
or
les
add
in
add
add
add
add
add
add
add
sbb
add
xor
or
sub
add
in
add
add
add
add
add
add
add
inc
or
add
or
inc
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
or
add
mov
add
in
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
and
or
adc
add
in
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
or
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
orb
add
or
adc
add
in
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
loopne
add
jg
add
and
add
dec
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
fsubs
add
add
add
add
add
add
add
add
bound
add
in
movsb
or
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
push
data16
data16
mulb
mulb
jmp
outsw
jmp
push
outsl
mulb
mulb
jmp
outsw
imulb
outsl
imulb
outsl
mulb
jmpw
outsl
mulb
imulb
ljmp
data16
jmp
data16
data16
jmp
data16
push
imulb
data16
jmp
data16
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
clc
mov
clc
clc
mov
clc
mov
clc
decl
mov
clc
decl
mov
clc
clc
mov
mov
clc
mov
data16
data16
decl
clc
xchg
jmp
jmp
clc
clc
clc
jmp
mulb
mulb
clc
clc
mov
jmp
jmp
clc
clc
mov
push
jmpw
clc
decl
imulb
jmpw
clc
mov
clc
xchg
outsl
jmp
idiv
data16
decl
outsl
idiv
imulb
jmp
clc
mov
ljmp
jmp
clc
mov
clc
xchg
idiv
push
data16
decl
xchg
push
data16
decl
xchg
jmp
clc
clc
clc
clc
xchg
data16
mov
clc
mov
push
testb
mov
data16
clc
xchg
jmp
mov
mov
data16
clc
clc
clc
decl
decl
decl
decl
clc
mov
mov
clc
mov
decl
mov
clc
decl
clc
mov
decl
decl
clc
clc
mov
decl
clc
clc
mov
clc
mov
mov
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jg
push
ja
ja
push
jg
pushl
ja
ja
ja
ja
push
jg
pushl
pushl
ja
ja
push
jg
pushl
push
ja
ja
ja
jg
push
jg
push
ja
pushl
push
ja
push
ja
push
jg
pushl
ja
ja
push
ja
pushl
push
jg
pushl
ja
ja
pushl
ja
push
ja
push
jg
push
ja
div
ja
ja
ja
ja
push
ja
push
jg
push
ja
divl
jg
pushl
push
ja
push
jg
data16
pushl
pushl
push
jbe
data16
data16
push
data16
pushl
pushl
push
jbe
jmp
jmp
outsl
jmp
push
jg
divl
ja
jbe
push
push
data16
push
data16
pushl
pushl
ja
jbe
outsl
jmp
jmp
outsl
push
data16
pushl
push
ja
divl
push
push
data16
jmp
pushl
pushl
idivl
outsw
jmp
jmp
jmp
pushl
push
jbe
mulb
mulb
mulb
jmp
push
ja
push
jbe
jmp
jmp
jmp
jmp
push
ja
ja
push
jbe
push
push
push
outsl
jmp
push
ja
ja
push
jbe
outsl
jmp
jmp
imulb
data16
push
ja
jg
push
jbe
push
push
outsl
jmp
pushl
jg
push
jbe
outsw
jmp
jmp
pushl
push
jbe
data16
outsl
jmp
data16
push
ja
pushl
push
jbe
data16
jmp
data16
push
ja
pushl
jg
jbe
push
data16
pushl
push
jg
jbe
jmp
push
ja
idivl
jg
divl
data16
idiv
push
jg
divl
jg
divl
data16
push
outsl
idiv
pushl
pushl
ja
push
jbe
data16
push
outsl
div
ja
push
ja
divl
divl
data16
divb
jg
ja
push
jg
jbe
push
divl
divl
idivl
jg
jbe
jmp
ja
divl
ja
idivl
jg
data16
ja
pushl
idivl
jg
data16
pushl
push
ja
divl
jg
pushl
ja
pushl
pushl
jg
ja
jg
pushl
jg
ja
push
ja
jg
ja
idivl
pushl
jg
ja
push
ja
ja
push
jg
jg
ja
pushl
pushl
ja
ja
push
jg
push
ja
pushl
jg
ja
ja
ja
ja
push
jg
push
ja
push
ja
divl
ja
ja
ja
push
jg
push
ja
push
ja
push
ja
ja
push
jg
pushl
push
ja
pushl
ja
push
jg
push
ja
ja
pushl
pushl
push
jg
pushl
jg
push
ja
pushl
push
jg
push
ja
push
ja
push
jg
push
ja
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
pop
add
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
pop
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
pop
add
add
and
add
add
inc
add
insl
add
add
je
jae
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
or
enter
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
enter
enter
enter
add
add
std
enter
add
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
lea
xor
lods
test
je
cmp
ja
add
add
jmp
and
shl
lods
test
jne
lods
jmp
ret
add
fimuls
jbe
xchg
cltd
cmc
jbe
cltd
or
insl
inc
and
jg
pop
jle
jo
xchg
dec
push
movsb
shlb
mov
gs
insl
add
gs
in
jg
fxch
sub
jns
mov
imull
cmpsl
addr16
test
sub
sbb
adcb
cmp
nop
aaa
inc
xchg
adc
cmp
mov
xchg
rcrb
out
in
ja
js
xor
mov
out
incb
cs
test
dec
or
mulb
idiv
sub
into
dec
pop
mov
negl
or
nop
movsb
rcrl
imul
lahf
clc
daa
fsubs
ja
mov
cmp
xor
test
inc
lods
dec
testl
mov
js
iret
push
movsb
jge,pn
mulb
adc
imul
lea
sub
mov
push
mov
adc
pusha
inc
or
pop
mov
out
add
fdivrs
and
fwait
stc
popa
mov
mov
movsb
pusha
jg
les
scas
test
pushf
movsb
push
insb
in
dec
arpl
adc
loope
xor
test
mov
mov
xchg
shl
mov
cmp
das
lahf
lock
cltd
add
dec
pop
gs
add
in
call
sti
negb
loope
xchg
cli
movsl
popf
mov
inc
es
cmpsl
outsl
mov
sbb
in
xchg
dec
jg
testl
add
push
xor
dec
cmp
imul
cmpsl
outsl
cmp
and
push
stos
adcb
shll
lock
std
fnsave
ss
ljmp
cli
add
inc
fcmovne
test
push
inc
out
roll
outsb
outsb
mov
or
mov
mov
push
fwait
sbb
fsubrl
push
pop
dec
and
stos
jl
pushw
cmpsl
xchg
pop
cmpsb
in
cmpsl
cmp
fdivr
sub
sbb
popf
sub
repz
adc
shl
dec
repz
fimull
bound
gs
int
shll
cmp
ss
push
daa
fcmovnbe
jg
adc
cmp
adc
or
pop
dec
int3
popa
xor
ss
and
or
cmp
scas
cwtl
cmp
pop
out
out
adc
ret
xchg
or
push
mov
add
cmpsl
or
fstpt
insb
rcll
jecxz
out
push
push
add
inc
pop
lods
pusha
push
or
je
test
mov
mov
enter
adc
ja
dec
mov
xor
mov
sbb
xor
push
hlt
push
mulb
xor
pushf
xchg
pushw
mov
daa
and
jno
stos
and
inc
fiadds
or
inc
mov
mov
inc
test
push
nop
adc
cwtl
pop
stos
adcb
imul
pop
aad
pusha
push
in
push
dec
adc
imul
test
and
jmp
xchg
or
ret
stos
std
jne
aam
dec
outsl
jl
repz
sbb
add
fsubr
pop
adc
adc
inc
adc
and
pop
jnp
cmc
mov
ret
add
push
fistl
xlat
pop
push
adc
ja
iret
sub
aas
jl
adc
push
into
outsl
lcall
dec
mov
or
cmp
aad
adcb
out
xchg
gs
inc
and
je
icebp
xchg
mov
scas
movsl
cmc
dec
jnp
mulb
mov
movsl
jns
inc
test
int
arpl
mov
test
movsb
loopne
and
sti
fs
fnstsw
mov
xor
add
cmc
push
adc
pop
jle
or
subl
loope
rcr
cmpb
sti
ss
and
setne
scas
int
xchg
outsb
sub
mov
nop
jp
mov
cmp
pusha
shl
mov
xorl
repnz
sbb
mov
dec
sub
int3
aad
xor
jmp
imul
push
adcl
dec
mov
cmp
inc
push
or
jno
sub
nop
les
loopne
aas
pusha
lods
pop
mov
gs
lods
andl
sub
or
js
stc
mov
sub
es
or
je
loop
pop
roll
inc
cmpsb
cld
xchg
test
in
pop
sbbb
inc
stos
shlb
add
jno
cmp
mov
aaa
popa
xor
push
cmp
sbb
inc
pop
sub
inc
setbe
pop
enter
dec
jae
test
jp
call
jecxz
adc
ret
xor
das
ret
mov
fiaddl
xchg
clc
loopne
inc
add
les
sahf
xadd
sbb
repnz
hlt
je
dec
sub
xor
jo
idivb
mov
sub
paddusb
or
test
cmp
fidivrl
xchg
popf
cli
jnp
xchg
aas
and
std
sub
inc
push
mov
pop
mov
adc
hlt
int
aaa
arpl
fwait
mov
inc
jp
pop
cltd
adc
add
enter
cs
stos
xlat
mov
adc
pop
les
pushf
jbe
sbb
xor
cmp
pop
push
xchg
rcll
popa
mov
aad
and
into
lods
ja
sbb
inc
sbb
movsb
test
and
fs
or
stc
lods
jp
inc
mov
dec
jg
stos
mov
in
or
dec
or
jecxz
mov
insl
loope
mov
test
movsl
scas
dec
mov
mov
xchg
lock
mov
and
inc
lret
or
jo
dec
adc
xor
or
mov
adc
sahf
adc
mov
cmp
addr16
fmull
xor
or
mov
lahf
aas
fwait
loopne
or
adc
enter
popa
aas
adc
sbb
dec
aad
stos
stc
int3
ds
arpl
stc
and
jae
testb
mov
mov
fisttpll
stc
inc
nop
or
xlat
hlt
jg
lds
into
cmpsl
xchg
fadds
nop
fstpt
dec
cltd
out
jecxz
ret
mov
xchg
mov
mov
mov
in
add
cmp
stos
pop
xor
orl
or
test
mov
mov
mov
mov
mov
jbe
mov
scas
loope
mov
rcll
push
jg
xchg
xchg
cwtl
scas
addr16
jno
jp
movsb
pop
pop
in
decb
and
pop
cmpsl
into
imul
jb
fdivrl
mov
jno
sbbb
fnstsw
call
insb
mov
aas
adc
mov
xor
and
xchg
fisttpl
andl
and
and
ds
loop
cmp
or
sti
mov
jmp
mov
loope
popf
inc
dec
jge
or
adc
pop
stc
push
inc
cmpl
repnz
pop
and
jbe
lods
insl
hlt
dec
jne
push
movsb
mov
mov
insl
outsb
loope
push
imul
leave
adc
or
enter
stos
pop
shrb
gs
fbld
add
cltd
dec
stos
cmpsb
sbbl
xchg
mov
in
mov
es
xchg
xchg
test
and
leave
int3
dec
stos
aas
inc
ljmp
insl
loope
push
jae
cmpsl
xchg
cmpsb
lahf
imul
fldl
shlb
lahf
call
adc
mov
dec
push
jg
adc
and
lock
shrl
sub
jg
rol
sahf
push
leave
xchg
rcrl
movsb
fs
push
ret
push
popa
pop
adc
scas
mov
pop
sbb
mov
dec
stos
movl
cs
in
xor
cltd
fstpt
xor
inc
daa
stc
loopne
add
sub
dec
jns
rolb
test
das
insl
push
addr16
repz
pop
mov
orl
lock
bound
mov
cwtl
fldcw
add
iret
cmp
out
mov
scas
aaa
inc
int3
pop
add
subl
and
nop
popa
idivb
in
xchg
sarl
cmp
mov
orl
aas
push
dec
sub
aad
gs
pop
push
stos
gs
faddl
cli
popa
ljmp
bound
ret
subl
mov
and
adc
test
mov
sbb
enter
shrb
rcll
iret
xchg
xchg
int
mov
pop
and
shll
in
jb
cmp
jle
fmuls
dec
pop
lock
aas
test
xor
scas
imul
and
test
data16
jecxz
orb
sub
mov
mov
in
xchg
xor
xchg
mov
add
scas
add
mov
mov
mov
aad
inc
dec
mov
mov
cmp
dec
xchg
ja
adc
ficoms
add
and
rorl
mov
cmp
pop
push
mov
mov
bound
ficompl
dec
mov
or
call
cli
pop
test
scas
mov
movsl
inc
pop
outsl
ret
data16
std
outsl
sbb
mov
icebp
xor
mov
arpl
pop
jp
jmp
sub
cltd
or
iret
stos
aad
fildl
mov
xchg
sub
mov
sbb
inc
pop
xchg
pop
sbb
mov
in
pop
aaa
dec
sti
jno
sbb
add
les
out
add
inc
rolb
test
aaa
and
push
inc
enter
xor
icebp
cmp
imull
push
xchg
insl
je
lret
ljmp
push
and
enter
ret
inc
inc
mov
das
mov
cmp
in
pop
sbb
mov
mov
aad
mov
dec
loopne
xor
std
rol
or
int3
leave
and
pop
rolb
inc
pop
nop
cwtl
inc
push
jae
in
adc
add
repz
lock
inc
mov
stc
insl
aam
xor
sub
mov
pop
cmp
dec
in
push
in
mov
out
dec
push
mov
mov
iret
sub
jmp
jbe
cs
jmp
pop
dec
js
sbb
and
cld
clc
mov
or
xor
or
mov
loop
ja
xor
repnz
push
sbb
lea
adc
aad
pop
in
clc
out
pop
ja
in
popf
aam
rol
pop
insl
mov
xchg
adc
adc
cmp
pop
add
xor
adc
ds
mov
test
sub
lcall
xlat
mov
fsubrs
or
push
sar
mov
in
push
flds
into
insb
cs
cs
roll
inc
mov
rolb
dec
and
mov
push
cmpl
out
stos
daa
fdivs
jp
add
and
mov
shl
add
imul
mov
pop
lea
aad
negb
not
and
rorb
loop
sub
xorl
mov
push
jge
sub
xchg
inc
imul
inc
cmp
cmpsl
mov
in
lea
es
mov
mov
jp
jmp
inc
inc
movsb
adc
ret
shl
aas
mov
in
push
mov
sbb
xor
cmp
pop
push
pop
xchg
mov
fptan
xchg
jmp
loop
lahf
ficoms
divl
cld
bound
xor
shll
mov
call
push
xor
ds
xor
adc
adc
outsl
int3
mov
add
dec
or
aaa
fbld
hlt
sub
loopne
xchg
push
cmp
mov
mov
jbe
jae
sahf
xor
pop
cwtl
fisttps
cwtl
stos
inc
mov
aam
mov
inc
test
dec
cwtl
push
fistps
test
xor
cmpsl
mov
xchg
mov
add
sub
les
push
mov
inc
sub
jo
outsb
cmp
dec
les
loope
sub
lods
inc
add
push
test
sub
xchg
add
cmc
bound
call
in
fwait
add
aaa
lahf
add
cmp
push
adc
je
adc
test
xor
jp
mov
das
inc
cmp
rorb
sahf
inc
or
arpl
jne
jl
sub
xor
jo
icebp
in
loopne
xchg
loopne
fidivl
addr16
push
cmp
xchg
xchg
rcrl
stos
repnz
lcall
jmp
jne
mov
xor
mov
fsubs
nop
test
xchg
iret
in
cmc
jns
jne
aas
and
jle
je
jns
xor
sub
out
shrl
inc
mov
jge
adc
std
adc
and
in
or
add
mov
sub
call
call
and
add
mov
call
jno
adc
cs
addr16
sub
loop
dec
jbe
shll
push
xor
out
mov
fdivrl
sub
inc
daa
inc
aad
push
aam
add
xchg
push
push
lods
add
push
xchg
xor
sbb
stos
imul
inc
imul
jmp
inc
lcall
jo
sub
into
out
rorb
inc
jmp
mov
pop
aam
in
sahf
cmp
decl
fs
mov
cld
mov
aas
sub
jae
and
dec
xor
pop
sub
ja
ja
inc
movb
jg
aad
mov
cmp
pushf
and
loop
cs
mov
mov
iret
cmc
mov
leave
lock
iret
sbb
mov
lcall
test
mov
pop
cmpps
mov
movsb
push
xor
dec
dec
popa
sti
add
into
filds
xor
sbb
sub
mov
xchg
subl
pop
outsl
jle
popf
insb
and
pop
in
imul
sbb
sbb
inc
mov
incb
stos
or
or
push
in
sub
fisubrl
loope
cli
push
rcr
mov
icebp
mov
imul
hlt
sbb
inc
adc
incl
or
aad
hlt
out
mov
or
ss
jb
mov
mov
fwait
scas
movsl
pusha
rcll
addr16
imul
and
clc
xor
sahf
test
loope
hlt
dec
add
or
adc
jge
nop
push
cmc
or
cmp
movsl
je
int3
adc
int3
mov
or
and
add
and
sbb
or
ds
scas
cwtl
mov
xchg
add
in
jbe
ss
fwait
lods
js
adc
enter
xor
pop
inc
popa
push
jo
mov
mov
cli
in
loopne
and
rol
xchg
mov
mov
and
inc
test
pop
jge
fsubrp
insl
xchg
subps
data16
push
mov
shl
ss
push
push
jo
push
popa
dec
aad
mov
and
pusha
jg
sti
or
test
sub
sbb
mov
std
hlt
xor
cli
subb
out
fscale
or
dec
mov
pop
or
pop
lods
pop
jl
into
mov
mov
or
cwtl
mov
xchg
lcall
loope
insb
pop
push
shl
adc
or
xor
daa
aad
sub
mov
aad
mov
mov
inc
pop
cwtl
sub
mov
bound
xlat
mov
aam
and
jae
jae
movsb
rolb
divb
gs
mov
out
xor
mov
fisubrs
outsb
sub
xor
js
cmp
lods
xorb
sbb
mov
pop
push
notb
jle
mov
stc
mov
jo
xchg
cmp
sbb
sti
adc
and
pop
aaa
dec
sbb
outsb
adc
and
fs
push
pusha
or
jne
mov
scas
mov
xor
arpl
fldpi
cli
jmp
jns
cwtl
sbb
in
jbe
lock
and
and
in
imul
adc
inc
inc
imul
sub
mov
and
mov
addr16
push
test
jmp
inc
mov
int
sub
push
mov
mov
xchg
outsl
pop
sub
pop
or
cmc
push
rorl
out
pop
mov
sbb
cmpsl
mov
push
jecxz
hlt
cli
js
push
mov
mov
push
dec
insl
clc
lcall
or
addr16
ret
sbb
fwait
leave
sbb
pop
scas
insl
test
lcall
push
mov
push
push
push
int3
push
inc
loopne
inc
mov
stos
mov
lea
test
xchg
push
loope
jmp
jl
xor
xchg
lret
loop
xlat
xchg
rclb
or
and
sbb
mov
je
mov
cmp
jae
pop
or
lret
cmpb
jno
and
ja
outsb
scas
add
pusha
mov
lods
out
aaa
cltd
adc
add
outsb
icebp
movsb
jle
push
lcall
xchg
aas
test
popa
rolb
bound
ret
leave
fnsave
sarl
lretw
push
aam
insl
xor
imulb
inc
int3
push
mov
lods
dec
pop
fnstenv
xchg
ss
stc
jg
lods
mov
dec
or
nop
mov
mov
repz
les
mov
mov
xor
fisubs
cmp
icebp
into
add
aaa
push
dec
jle
cltd
jle
cwtl
xor
mov
inc
cmpsb
cmpsb
sahf
data16
mov
ds
movsl
orl
xlat
push
mov
or
jne
pop
cli
outsb
cltd
jnp
jge
push
or
out
add
icebp
mov
lahf
push
jl
dec
out
adc
or
mov
sub
call
sarl
sub
pop
mov
lret
movsl
add
and
or
loop
clc
cmc
ljmp
sbb
into
cmp
lods
adc
cmp
js
aas
sub
lea
imul
sti
push
push
andl
icebp
cmp
dec
stc
ds
in
and
test
push
push
jecxz
and
sub
jno
cwtl
xchg
jbe
fisubs
aas
ficoml
pop
out
push
pop
sbb
inc
adc
xorb
shlb
ja
xchg
push
rcll
ret
cmp
pop
jg
or
lret
xchg
lea
add
xchg
adc
or
aas
sub
xlat
push
mov
lods
js
vmwrite
pop
push
andl
mov
mov
stos
jnp
lret
lcall
push
mov
xchg
orb
jne
adc
rcl
jno
push
sub
cmpsl
out
orl
sti
enter
push
nop
cmpsl
repz
mov
pop
ss
fsts
clc
or
adc
mov
mov
arpl
idiv
mov
inc
mov
mov
pop
cmc
push
inc
insb
fcmovu
push
popf
faddl
ja
ret
lret
rolb
movl
xchg
jmp
sub
lcall
in
push
ret
std
hlt
xchg
mov
xchg
dec
lret
xor
in
das
pushf
mulb
inc
adc
cltd
xlat
and
jl
pop
pop
int
jbe
sub
fldpi
cmp
and
jg
add
pushf
test
loopne
inc
pop
jge
fcoms
jl
sub
aas
mov
stos
in
push
inc
mov
lds
mov
lods
and
mov
xlat
push
add
clc
push
jno
inc
enter
push
in
mov
lcall
push
adc
shufps
repz
or
out
shlw
out
in
bound
cmpl
push
aad
outsl
push
push
push
mov
imul
test
enter
dec
xor
ret
pop
js
into
inc
popa
out
mov
inc
fstps
call
fildll
pop
stc
fldcw
cli
outsb
cli
cmpsl
cmp
push
pop
mov
fiadds
jae
dec
mov
stos
enter
lds
adc
insb
push
daa
xlat
xor
xchg
mov
in
into
mov
rcl
push
pop
lcall
xchg
mov
pushf
in
mov
outsl
xchg
cli
or
fcoms
das
mov
jno
lcall
sahf
fwait
stos
mov
mov
popf
push
jmp
andl
test
dec
jge
or
pop
cmpsb
push
jno
dec
adc
or
mov
mov
cld
enter
ret
add
dec
push
cmp
add
xor
inc
cmp
sub
gs
add
xchg
mov
in
hlt
jns
adc
xchg
mov
stc
mov
mov
stc
aaa
aam
xor
sbb
xchg
movsb
test
cmp
push
inc
cltd
inc
sub
outsb
sbb
xlat
inc
les
mov
mov
mov
aad
jno
shll
xchg
fstpt
inc
mov
sub
repnz
push
pop
es
call
inc
inc
push
cmp
cld
subl
shlb
adc
pop
ret
adc
and
jl
fucom
and
xlat
push
jo
jbe
lahf
cli
add
jae
pop
add
mov
adc
lods
xchg
lcall
roll
loopne
test
jo
xchg
pop
clc
jge
mov
lret
rcr
loope
sbb
or
outsb
xlat
dec
cmpsl
shr
pop
mov
ret
dec
pusha
cmp
movsl
bnd
jl
push
jmp
out
pushf
jp
data16
cmc
jmp
push
jne
xor
cmc
ffree
jle
pusha
mov
push
scas
lds
lret
jnp
mov
imul
mov
push
popf
fsts
fnsave
pushf
mov
mov
cmpsl
jo
fstpl
paddsb
rorb
mov
xor
stc
loope
out
mov
sbb
xchg
add
jo
lods
lds
fs
sbb
out
std
lcall
inc
lret
hlt
fwait
out
cmpsb
xchg
mov
movsb
arpl
cwtl
stc
jge
inc
stos
mov
or
loop
enter
jge
dec
das
ja
jo
mov
add
outsl
ret
pop
push
repnz
push
popa
inc
mov
dec
xor
das
fiadds
test
push
add
stos
shrl
aas
insb
jmp
imul
hlt
mov
cmovl
testb
mov
xchg
stos
or
in
enter
lods
roll
jg
jnp
fsubp
jle
mov
out
loop
scas
mov
sbb
test
in
orl
dec
pushf
scas
fistps
in
xlat
js
xchg
insl
daa
jmp
aam
dec
pop
subb
jae
faddp
lahf
js
mov
sbbl
push
or
in
cmp
mov
fs
stos
or
test
or
pop
adc
prefetcht2
lahf
sbb
flds
inc
lahf
sahf
aaa
jge
jns
aad
jns
sbb
popa
int3
or
int3
insl
out
cmp
pop
ljmp
iret
cld
or
es
fdivl
out
mov
inc
shr
push
popf
dec
int3
jns
and
pop
xchg
mov
in
arpl
xor
popf
repz
hlt
lods
adc
jmp
testl
outsb
pusha
js
cmp
ret
mov
outsb
repz
sub
cmp
sub
faddl
pop
loop
cld
mov
and
std
cmp
pop
fwait
loope
xor
dec
dec
frstor
test
mov
lods
pmulhw
mov
pop
je
clc
cmpsl
mov
mov
mov
lock
pushf
xchg
fs
aad
mov
inc
push
gs
ret
repz
fmull
pop
gs
loopne
push
es
xchg
aas
mov
and
nop
xchg
push
fimuls
sbb
popa
aad
mov
pop
inc
fists
mov
jbe
mov
adcl
mov
mov
cmp
rol
in
xlat
js
out
aad
mov
in
rol
shll
ljmp
leave
ja
and
shrb
stc
shl
xchg
fcmovnu
cs
add
and
lods
inc
stc
mov
xorl
cmp
test
popa
int
jl
adc
jnp
lret
fs
xorb
add
aaa
ljmp
pop
std
and
scas
mov
sub
clc
adc
es
daa
jbe
into
notl
mov
inc
xchg
push
mov
cli
pop
movsl
cld
loop
pop
jecxz
inc
adc
cmp
or
pop
adc
jmp
insb
mov
dec
and
loopne
not
pop
in
jl
bound
mov
jae
inc
jb
cmp
movups
pop
sbb
std
pop
outsl
xor
dec
mov
inc
jecxz
mov
sub
adc
imull
loopne
stos
ljmp
mov
push
pop
lahf
pop
mov
adc
outsl
es
pusha
add
ds
inc
addb
fstpl
call
push
in
and
push
and
sti
xor
xchg
in
jecxz
cmp
xor
add
xchg
stc
mov
mov
add
out
movb
test
sahf
xor
cmpsl
ret
jb
add
fidivl
test
pop
add
add
dec
rcl
sahf
lret
mov
sub
pushf
push
cmp
subb
stc
sub
mov
je
enter
adc
dec
mov
data16
hlt
insl
mov
xchg
fnsave
out
sahf
loope
pop
push
mov
fbld
push
cmp
lcall
jb
adc
push
lahf
int
or
fsubs
pop
aad
cs
and
mov
setbe
outsb
push
inc
es
or
je
pop
push
arpl
outsl
mov
sbb
lock
out
mov
pop
iret
jb
popa
out
into
in
neg
cltd
fadd
add
dec
imul
xchg
adc
out
bound
lock
jmp
daa
sbb
push
ja
mov
xor
lods
or
addb
fnstcw
fbld
js
aaa
or
add
dec
mov
mov
lahf
adc
in
xor
leave
xor
sarl
pop
mov
subb
adc
xchg
outsb
clc
repnz
cmpsl
jne
jns
xchg
shlb
mov
dec
movsl
mov
andb
insw
lea
roll
mov
or
stos
test
icebp
add
jp,pt
mov
ret
sti
pop
and
mov
scas
es
sub
push
rcr
popa
push
arpl
lahf
jo
jne
adc
dec
outsb
cltd
imul
loopne
mov
outsb
test
jno
call
rorb
loop
leave
stos
xor
mov
dec
ljmp
in
mov
pop
cmp
dec
stos
dec
jb
jle
push
lcall
adc
dec
orl
xlat
xchg
cmpsb
push
movsl
cwtl
or
outsl
pop
cmp
cmp
in
cli
push
add
imull
lret
jo
lret
xor
int3
inc
mov
test
loopne
and
rcrb
and
adc
adc
fcompl
dec
out
out
pop
and
mov
jmp
cmp
inc
mov
inc
sub
test
jns
fs
sbb
nop
notb
mov
data16
push
mov
pop
pushf
adc
mov
add
inc
scas
adc
push
cltd
cmc
inc
std
fidivrs
push
fistpl
mov
ds
or
lods
in
pop
and
push
cli
aaa
mov
hlt
lcall
pushf
cmp
lcall
pop
cmpsb
or
mov
add
pushl
dec
push
leave
add
cmp
lock
mov
pop
sbb
or
jge
pop
jnp
cwtl
mov
xor
sti
decl
stos
mov
lea
gs
aaa
les
aad
sahf
hlt
jp
mov
mov
mov
in
std
outsb
clc
in
mov
fadds
mov
or
sti
cmp
jmp
inc
cmp
adc
cmp
mov
xchg
fs
and
and
loopne
data16
pop
in
mov
je
shrl
xchg
int
cld
adc
adc
and
clc
outsl
sbb
stos
push
jns
ds
adc
mov
lahf
int3
mov
dec
sbb
clc
jmp
xor
shr
lret
fsub
aam
rcrb
jae
int3
pop
jmp
gs
sub
mov
mov
mov
mov
adc
sub
mov
push
sti
push
rcrl
loopne
mov
inc
jl
and
mov
mov
fwait
nop
clc
nop
add
push
or
xchg
jns
sbb
stc
out
repz
fcoms
loopne
orl
fwait
mov
dec
out
jb
and
lock
xchg
lods
cltd
movsl
paddb
push
test
jnp
adc
mov
dec
inc
fcmovbe
and
iret
in
mov
into
lock
and
dec
adc
pop
add
xor
aad
rorl
repnz
aad
pop
das
mov
subb
in
adc
addr16
jmp
push
movsl
sub
sbb
sub
inc
inc
pop
and
or
out
fisttpll
and
nop
pushf
dec
aas
mov
or
pop
aad
add
loop
rclb
xchg
sub
call
dec
out
xorl
bound
cmp
sarl
push
or
or
mov
shlb
out
cmp
lret
scas
or
jmp
xchg
cmp
rol
xchg
cmc
in
ret
pop
aam
mov
add
stos
add
loope
mov
dec
insb
push
das
adc
cmp
adc
and
cmp
and
push
in
inc
cltd
dec
jmp
lods
out
cmpsb
sti
push
sbb
orb
xchg
cmp
outsl
mov
jnp
test
dec
fisubrl
push
popf
mov
or
adc
imul
fildl
insb
xor
mov
andl
cltd
gs
call
les
jg
outsl
scas
lds
push
lret
jcxz
mov
sti
enter
mov
mull
stc
stos
pop
inc
cmpsl
ss
clc
pop
cmp
pop
pop
push
adc
ret
and
inc
and
mov
addb
add
test
push
fwait
mov
sbb
inc
mov
sub
notb
inc
aad
movsb
mov
sub
cmp
xor
xchg
xor
xchg
data16
clc
push
jge
sbb
gs
clc
and
push
imul
pop
scas
stos
aaa
inc
xchg
andl
pop
jmp
aam
xor
loope
push
ss
jne
cmp
xchg
push
xchg
shrl
push
aaa
repnz
cmpb
inc
icebp
lods
inc
ljmp
dec
out
mov
jge
cmp
and
data16
xchg
sub
mov
fdivrs
xor
inc
push
push
aad
push
aas
xchg
xchg
jle
iret
sbb
popa
add
inc
sub
pop
mov
dec
mov
jmp
xor
call
in
das
leave
std
scas
andb
nop
fsubr
outsl
fisubrs
cmc
fmuls
in
cmp
fstl
repnz
negl
aaa
pop
xchg
dec
scas
push
dec
jge
cmp
xchg
sub
pusha
xor
movsb
dec
and
dec
push
in
int
or
nop
xchg
nop
fisttps
lock
outsb
ret
cmc
fs
out
inc
stos
pop
mov
pushl
cld
es
ret
and
mov
inc
sbb
call
inc
in
rcl
adc
fucomip
add
pop
and
fwait
or
pop
jecxz
ror
dec
jb
in
push
lock
cmp
and
sbb
out
mov
cmp
rol
cmc
outsb
lret
std
lea
scas
scas
push
dec
ror
xor
mov
stos
mov
popl
fs
and
xchg
adc
sub
in
mov
ja
inc
dec
fnsave
int
jbe
and
shl
jmp
mov
mov
imul
fadd
not
lods
insb
popf
sub
repz
pop
jmp
cmp
sbb
test
mov
enter
in
jbe
incl
xchg
xchg
sub
adc
adc
inc
scas
popa
sub
movsb
ret
pop
jmp
pop
std
cmp
pop
jle
push
xor
scas
sbb
xchg
stos
movsl
sbb
adc
mov
scas
adc
insl
or
fisttps
lahf
jmp
xchg
stos
lock
mov
inc
movsb
jnp
bswap
cmpb
out
inc
xchg
out
inc
sarl
dec
sbbl
jmp
subb
mov
and
xchg
pushw
sbb
iret
out
test
pop
cmp
inc
cmp
call
mov
mov
inc
ja
mov
adcl
xchg
mov
xchg
jl
fsubs
xchg
xor
xor
fwait
jae
into
xor
lods
mov
mov
call
cmp
negb
inc
out
decl
scas
xor
cmp
test
push
call
pop
bound
fdiv
inc
js
cmpsl
jge
push
xchg
inc
cmp
in
mov
adc
lock
call
push
scas
frstor
out
aas
xor
decb
nop
mov
roll
jg
loop
repnz
sti
add
bound
stc
jecxz
xor
inc
mov
xchg
add
pushf
cmp
mov
popa
adc
cmp
aad
jns
dec
nop
dec
xchg
push
mov
inc
insl
jge
sbb
pop
lea
mov
mov
xchg
mov
mov
loop
push
insl
xchg
rorb
add
leave
mov
scas
es
add
stc
dec
data16
in
je
jbe
fsub
xchg
inc
aas
aam
inc
out
add
cs
pop
cltd
mov
or
mov
and
out
sub
and
imul
es
mov
jb
mov
or
sbb
and
jmp
stc
adc
aad
cli
ljmp
mov
or
bound
mov
push
add
mov
flds
testb
lea
cmp
cwtl
pop
push
sbb
mov
jle
leave
xor
or
xchg
mov
orb
mov
cli
sbb
outsl
sub
shlb
roll
and
dec
mov
aam
mov
into
cmp
lods
fnstcw
cmpsl
mov
sub
cmp
popf
xchg
call
clc
sub
movsb
dec
popa
je
insb
fwait
scas
bound
ss
or
mov
push
jecxz
mov
and
insl
dec
movsb
xor
cmpsl
pop
jge
dec
cmp
dec
add
cwtl
daa
dec
mov
icebp
out
adcb
insl
mov
inc
sub
shrb
push
pop
jle
ret
pop
sub
jo
inc
cli
jno
mov
iret
aas
rcl
xchg
fidivs
xchg
aaa
sub
adc
bound
mov
jne
dec
dec
jo
xchg
mov
add
xor
cmp
cmp
xor
push
dec
push
sub
and
xlat
mov
aam
icebp
and
and
push
sahf
stc
sbb
or
adc
in
mov
or
stos
dec
std
daa
mov
ret
jno
or
sti
and
pushf
sub
popa
shll
mov
mov
scas
xor
xchg
jge
dec
imul
je
mov
and
push
fnstenv
clc
lret
cli
mov
sbb
int3
inc
push
pop
push
dec
iret
mov
aas
mov
stos
jp
xchg
fs
sbb
jne
cmp
aas
mov
add
add
sbb
xchg
inc
mov
inc
inc
dec
fidivrs
inc
xchg
loopne
dec
test
push
pop
jo
xchg
shl
outsb
and
mov
rol
imul
cmp
decb
movsb
xchg
idiv
xor
sub
pop
add
popa
out
xchg
push
addr16
sti
and
jg
sbb
sbb
int3
mov
pop
jle
pop
push
sbb
leave
movsl
cltd
or
jle
into
icebp
imul
cmp
leave
push
mov
pop
fidivl
pop
or
inc
into
loope
lcall
adc
cmpsb
or
pop
popa
loop
js
push
divl
cmpsb
cmp
mov
xchg
test
aad
into
mov
xchg
insb
mov
mov
xchg
dec
iret
lods
lcall
movsb
jge
mov
ret
mov
mov
or
add
xor
out
ja
lret
inc
jnp
cmp
pop
loope
in
flds
jne
push
dec
mov
add
ja
push
cwtl
loop
inc
mov
pop
xchg
mov
sti
xor
lea
lea
pop
and
inc
lret
fidivrs
jb
fisubl
dec
mov
lock
icebp
fnstsw
les
xor
arpl
push
call
mov
dec
add
dec
inc
test
lret
xor
loope
cmp
mov
pusha
pop
cld
lret
mov
sbbl
and
divl
sbb
pop
mov
cmp
outsb
cmp
sub
scas
int
imul
pop
lcall
es
in
imul
lock
jae
addr16
clc
and
mov
xor
push
sub
pop
mov
xlat
sub
xor
sbb
xchg
into
xchg
fsts
or
in
xchg
test
xchg
sbb
mov
and
test
mov
jb
sub
rcrl
cmp
and
pop
xchg
dec
or
call
outsb
xor
or
pop
mov
fldenv
jmp
cmpsl
stos
bnd
cmp
and
mov
or
cld
fwait
dec
adc
arpl
addr16
into
into
adc
lahf
and
imul
imul
push
mov
mov
xorb
cltd
call
lcall
ficompl
leave
mov
repnz
pop
add
add
fiadds
cld
insb
rorl
gs
mov
call
mov
sbb
push
int3
lock
cwtl
gs
pop
mov
jo
sub
add
in
and
or
fldcw
imul
into
xor
mov
es
cltd
fdivl
mov
inc
jns
fisubl
in
into
movsl
cld
ret
jge
sbb
nop
imul
push
dec
aas
adc
adc
pop
adc
and
and
movsb
push
fmuls
mov
out
mov
mov
and
push
dec
sub
enter
lods
aam
ret
dec
push
sub
outsl
sub
iret
cmpsl
dec
inc
call
loopne
pop
jbe
mov
dec
daa
mov
xor
sahf
repz
enter
push
mov
pop
xchg
dec
pop
push
loope
fs
jl
dec
push
mov
mov
jle
fnsave
aas
push
pop
clc
fcoml
add
pop
mov
mov
sub
hlt
xchg
cmc
xor
sbb
pop
xor
inc
lods
cmp
or
inc
fadd
mov
dec
xchg
mov
adc
add
xor
push
out
mov
push
lock
inc
out
mov
push
out
shrb
jp
sahf
mov
fxch
and
inc
dec
inc
insl
pop
stos
push
subb
orb
pop
pop
sub
lock
add
fiadds
pop
mov
inc
lea
vpextrw
lds
cmp
icebp
fdivrl
mov
push
sbb
int3
xchg
movsl
dec
xchg
pop
outsl
or
call
and
sbb
hlt
pop
and
adc
xchg
daa
and
push
sbb
and
sbb
dec
mov
sub
andl
test
push
mov
sbb
cmp
pop
dec
nop
push
sub
pushf
cmp
outsb
adc
add
dec
fs
xchg
cmp
jae
inc
push
jno
lods
pop
dec
sbb
scas
cmp
lds
inc
int
cwtl
gs
loop
xor
movsb
movsb
fcmovu
mov
sahf
clc
xchg
cmp
std
adc
or
leave
mov
sub
ja
daa
shll
test
push
scas
or
or
out
call
sub
xor
jns
jmp
outsl
std
mov
adc
sbb
cmpsb
jnp
lcall
dec
aaa
and
dec
mov
jp
push
and
mov
pop
and
ds
sub
jle
fstl
xor
mov
test
adc
xor
insb
das
cwtl
clc
cmp
adc
dec
enter
cli
in
mov
shrb
mov
cmpsl
push
jo
lock
mov
int3
cs
xor
fistl
or
aas
push
clc
xor
les
mov
orb
in
or
frstor
or
fcmovnu
adcb
in
mov
xor
cmp
out
xchg
into
xlat
dec
popf
push
test
je
cltd
in
mov
test
lock
int
in
add
pop
mov
dec
sbb
and
stc
or
xchg
arpl
fstp
in
push
push
js
xchg
add
js
movsl
push
das
sahf
jae
iret
fs
fcomp
scas
mov
mov
mov
cli
mov
cs
into
mov
in
inc
sbb
jl
adc
xchg
mov
clc
xor
jo
shlb
out
outsl
mov
mov
aad
movsb
aas
clc
mov
xor
popa
add
mov
addr16
cmp
and
mov
mov
enter
xchg
aas
pop
adc
cltd
repnz
push
jl
test
dec
lcall
sti
daa
mov
xchg
jbe
or
sahf
mov
fmuls
je
int
or
adc
jl
mov
aam
cld
into
ds
add
testl
arpl
in
nop
mov
bound
xor
cltd
mov
add
xor
subl
push
adc
push
mov
loope
shl
jb
test
add
adc
cmpsb
mov
lret
popa
imul
out
ljmp
push
arpl
rcl
push
mov
or
push
mov
xor
enter
jmp
hlt
es
orb
dec
inc
into
int
imul
mov
or
push
fadds
sub
pop
fcom
jle
xlat
int3
cmpsb
sbb
enter
lds
push
test
and
dec
xchg
mov
divb
stos
insb
xor
scas
insb
cmp
sub
outsb
lds
push
sbb
rorb
add
inc
mov
push
iret
imull
scas
inc
push
sbb
pop
subl
xorb
cmp
mov
outsb
mov
cltd
mov
and
mov
dec
mov
outsl
pop
xor
or
add
xchg
call
les
push
imul
mov
mov
xchg
mov
xor
fisubs
aas
mov
rclb
arpl
in
cmp
cmpl
rolb
adc
jae
stc
or
push
jne
lcall
adc
hlt
sub
cmpsl
add
push
pop
bound
rcrb
lcall
out
bound
sub
push
aad
iret
imul
xchg
add
push
xchg
xchg
mov
push
loop
mov
cmp
enter
jns
cmp
pop
cmp
dec
cmc
and
sbb
xlat
pusha
movsl
cs
inc
mov
addr16
das
rcll
test
out
cmp
pop
mov
cmpsb
in
sub
mov
lock
cmpb
sub
xchg
sbb
imul
scas
push
pop
pop
bound
mov
lods
das
xor
mov
mov
fs
dec
addl
sbb
dec
popa
and
sub
mov
sti
bound
iret
repz
cmp
test
mov
in
push
stos
icebp
xor
nop
ss
push
pop
jo
xchg
out
arpl
or
out
out
shrb
lret
pop
xchg
mov
imul
je
sbb
sahf
addb
jmp
jae
pop
and
cld
mov
fdivl
cmc
xchg
rcrl
aaa
inc
shll
jae
xchg
inc
push
into
sti
outsb
inc
push
mov
popa
cmp
in
sub
pop
jae
and
call
pop
sub
or
sub
pop
test
jmp
push
and
imulb
arpl
jno
lea
repnz
int
cmp
mov
iret
adc
xchg
push
or
lods
dec
fcomip
lcall
aas
lods
push
cmp
adc
xor
insl
in
inc
cmp
pop
jg
mov
loopne
insb
xor
sub
dec
outsl
mov
stos
stos
xlat
add
lahf
sub
xorb
adc
dec
loopne
in
addr16
mov
sub
out
mov
xorb
push
mov
sub
pop
and
push
cli
mov
ret
cld
pop
ljmp
cmp
movsb
jo
sub
imul
dec
push
ljmp
add
clc
imul
inc
sbb
testb
xlat
shlb
lea
mov
mov
dec
mov
dec
cmp
repz
je
and
push
sbb
femms
xor
push
push
lret
out
push
fnsave
push
mov
sbb
sub
in
icebp
or
adc
shlb
lret
inc
jl
pop
in
repz
cmp
pop
mov
sbb
insb
in
fisubs
addr16
cmp
cmp
out
and
ljmp
and
jg
sahf
adc
outsb
leave
push
pop
and
dec
lret
sbb
or
inc
sub
mov
push
mov
femms
inc
and
jns
mov
pop
popf
arpl
mov
clc
mov
movl
xchg
enter
test
stos
clc
aad
nop
adc
inc
adc
jle
icebp
pop
inc
mov
imul
jg
es
cmp
adc
or
data16
les
jb
sbb
test
or
scas
adc
pop
ljmp
mov
repz
and
mov
mov
and
mov
add
lcall
paddd
cmc
mov
ret
lret
push
mov
clc
je
sub
fidivs
movsl
popa
cmp
dec
jne
jo
sub
loop
adc
push
xchg
dec
popf
test
xor
outsl
ds
mov
roll
pop
jmp
outsl
mov
mov
out
push
mov
bound
sbb
in
rcl
mov
lods
push
fimuls
popa
loope
xorb
stc
decb
cli
mov
adc
lods
dec
mov
lret
cmc
and
aad
adc
filds
cs
cs
sbb
lahf
lcall
sbb
jecxz
fildll
jno
scas
stc
mov
mov
xchg
iret
out
popa
rolb
test
fcoms
imul
mov
xchg
and
rol
xchg
in
and
mov
add
insl
ss
xor
outsb
add
popa
fsubs
inc
and
inc
lods
cli
repz
adc
les
jnp
sbb
cld
int3
adc
fcmovb
pmulhw
loop
rcr
dec
mov
not
sub
sbbl
lock
mov
sub
xchg
push
cli
push
add
je
xlat
call
mov
shlb
nop
outsb
ret
add
sbb
ljmp
jb
std
and
movsb
mov
out
lahf
pop
hlt
jno
add
repz
ret
insb
sub
aad
ja
dec
pop
stos
in
stos
lock
jle
mov
aam
in
pop
sub
or
ds
inc
or
mov
push
push
jne
stos
test
flds
dec
js
cmp
cmp
cld
into
sub
lcall
iret
lods
mov
jp
sbb
cmpsl
mov
imul
push
out
mov
mov
outsl
or
rcl
ljmp
repnz
mov
ds
test
dec
or
jle
cmp
fmull
xchg
cwtl
inc
aas
and
orl
adc
stos
jp
ss
ljmp
mov
scas
divb
jmp
pop
or
lret
xchg
cmp
fwait
inc
cli
scas
adc
imul
sahf
sbb
insl
shl
sbb
dec
jns
fs
cmp
xor
jbe
pop
leave
movsl
mov
daa
out
shll
popf
mov
cltd
int3
in
loop
arpl
jge
pop
divb
leave
or
sub
mov
mov
popa
push
test
sbb
rclb
sub
xor
cs
insl
xchg
add
clc
jo
mov
lcall
dec
xchg
loope
out
xor
sub
ficomps
es
call
out
jae
mov
mov
push
nop
and
jecxz
rolb
sub
inc
xchg
cmp
imul
lods
push
add
jae
sar
ss
push
int
jle
mov
jb
xchg
mov
outsl
leave
sbb
insb
fmul
and
bound
jno
jg
outsl
inc
sti
cwtl
sbb
mov
ficoms
mov
gs
call
mov
cld
push
jl
mov
jne
mov
jns
insl
out
inc
out
daa
ljmp
xchg
mov
movsl
out
xlat
xchg
and
or
inc
inc
scas
sarl
pop
jmp
mov
in
imul
push
sub
lret
incb
sbb
mov
mov
or
pop
jp
sbb
mov
and
outsl
push
lcall
sbb
xorb
xor
stc
xlat
out
xor
mov
xor
repz
pop
sbb
add
jg
je
test
ljmp
push
fstl
dec
or
add
mov
test
inc
pop
cmp
fstl
push
xchg
add
mov
xchg
insl
and
cmpsb
and
inc
imul
ror
leave
or
cmp
cmovp
pop
mov
add
fwait
cmp
in
xchg
dec
es
repz
jge
stos
rclb
xchg
sahf
add
inc
jnp
pop
add
xor
sub
dec
cmp
shrb
sub
scas
xor
push
push
mov
fbld
mov
mov
in
faddp
das
mov
jno
je
rolb
std
repnz
cmpsb
les
pop
lret
clc
mov
and
pushf
in
orl
xchg
inc
xchg
and
cmc
xor
repz
orb
pop
push
xor
aas
lcall
jb
mov
dec
std
push
mov
jb
push
cmc
ret
sbb
sahf
call
mulb
lods
or
setb
push
fcompl
dec
scas
out
test
mov
es
xchg
insl
xchg
loop
popf
jae
push
inc
mov
xchg
mov
mov
das
xchg
mov
loope
ret
sub
mov
int
or
dec
paddw
repz
inc
mov
mov
add
inc
fnstenv
push
outsb
xor
inc
test
ja
gs
cld
lods
lods
ret
or
inc
mov
dec
inc
xchg
rclb
daa
movsl
test
push
insl
ret
xchg
add
pop
inc
aas
fsubs
in
cmp
jp
inc
out
stos
or
add
add
in
xchg
add
push
mov
cli
push
add
mov
stc
jb
loop
pinsrw
mov
pop
scas
in
adc
outsl
popf
adc
aaa
sbb
popa
and
pop
jg
in
jmp
pop
or
movl
sub
jnp
add
iret
or
mov
in
push
cld
cmp
xlat
stos
sarl
jle
mov
leave
imul
pop
mov
dec
jecxz
andb
jnp
iret
outsl
cmpsb
mov
test
jg
mov
addl
mov
sub
fiaddl
shr
inc
test
push
aam
jecxz
insl
jno
push
in
cld
cmp
sub
jae
jns
std
cmpsl
and
aam
sub
shrl
dec
rcrb
ds
xchg
icebp
jmp
jmp
addr16
xor
rol
loop
xchg
subl
mov
mov
push
jbe
iret
movsl
mulb
push
stos
fbstp
je
cmp
or
lahf
mov
shl
pop
scas
push
movsb
in
sarb
nop
rorb
adc
aaa
xchg
hlt
sahf
mov
into
or
or
xlat
rclb
aam
aam
or
mov
sub
fs
lea
jb
icebp
popf
push
sbb
imul
mov
stos
iret
jb
sbb
rcrb
cmp
cmp
daa
insb
add
mov
ljmp
and
cmpsl
in
cmpsb
push
dec
fcmove
dec
aas
int
andl
into
dec
stos
pop
cmp
dec
fdivs
nop
lods
xchg
loopne
data16
arpl
mov
lahf
lret
rolb
repnz
insl
push
mov
repz
cmc
mov
popf
cld
sub
leave
not
jmp
and
sbb
lea
mov
inc
add
cs
call
pop
cli
and
add
cld
loop
movsb
jp
lahf
in
mov
push
cmp
test
aas
sub
and
pushf
dec
dec
jg
xchg
push
aad
or
sbb
push
movsl
mov
and
jecxz
sti
stc
shlb
dec
ror
mov
lahf
xor
mov
aam
sar
mov
xchg
jle
and
and
pusha
xchg
dec
fnstenv
ss
shufps
mov
clc
jno
mov
aam
mov
and
andb
pop
xor
scas
fcmovb
and
call
cmp
sub
imul
imul
int
fistpll
or
pop
shrb
xor
xlat
inc
icebp
mov
es
pop
push
fldenv
sti
sbb
lods
push
std
mov
xchg
subb
adc
call
outsl
lahf
cmc
mov
cmp
jle
sub
fwait
stc
divl
push
nop
and
insb
inc
cld
test
loopne
dec
imul
cmpsb
in
push
xchg
pop
daa
sbb
in
pop
mov
lds
push
adc
cld
cmp
pop
repz
incb
scas
pop
and
jbe
mov
mov
outsl
push
pop
movsl
in
imul
inc
loope
mov
arpl
cmp
daa
inc
mov
push
cmp
sub
inc
out
lea
fwait
push
mov
popa
je
cli
shll
lea
aas
es
je
jb
lea
negb
clc
mov
out
repnz
popa
test
xchg
jg
jle
mov
mov
dec
repnz
sbb
push
nop
iret
das
orb
and
add
mov
in
stc
mov
and
dec
in
xchg
hlt
mov
jge,pt
call
ds
mov
dec
adc
or
cmp
jp
jg
rorb
lret
hlt
fcoml
jb
loope
aam
dec
jmp
imul
ret
or
ret
fsubrl
push
add
cmpsl
mov
xor
xchg
shrb
push
mov
dec
das
cmp
stos
pmaxub
test
adc
add
imul
dec
cwtl
data16
clc
add
outsb
fcomps
rol
push
pop
sbb
ret
mov
cwtl
pop
fists
fdivp
loopne
xchg
mov
mov
lds
enter
xchg
push
dec
xchg
mov
dec
cs
xlat
nop
cmp
mov
mov
addl
jecxz
jmp
out
dec
jno
mov
xchg
out
xor
inc
andb
sbb
push
sbb
mov
data16
adc
enter
sub
in
mov
lods
xor
jb
xor
pop
loope
outsb
adc
test
cs
movsl
push
jl
sahf
pop
arpl
pop
divb
xchg
ljmp
fldenv
sbbl
jmp
testb
jb
test
push
orb
lods
imull
sahf
inc
jmp
pusha
fstpl
in
imul
sub
movsl
and
and
add
add
mov
push
minps
iret
cwtl
adc
inc
dec
imul
scas
cmp
das
dec
leave
jnp
idiv
outsl
xchg
scas
cmp
sub
push
pop
pop
call
imul
or
movsb
scas
xchg
lds
enter
cwtl
scas
fcom
jns
stos
imul
push
add
mov
clc
add
jae
test
xorb
push
inc
cmp
clc
add
dec
cld
and
add
es
sahf
xchg
andb
mov
fisttpl
cmp
daa
icebp
jo
insl
mov
push
or
std
add
xor
aam
lret
mov
ja
mov
push
inc
adc
mov
in
aad
fdivr
xchg
adc
cmp
pop
xchg
lds
mov
pop
xor
mov
addb
and
cmp
or
or
fwait
ret
pop
mov
mov
test
je
jl
mov
add
div
pop
leave
mov
lcall
inc
add
inc
jbe
dec
xchg
sbb
pop
iret
xchg
mull
inc
stos
dec
adc
adc
fsubs
inc
rcll
jno
sub
cmpsb
adc
rorb
les
xchg
sub
xor
adc
insl
insb
movsb
sbb
push
jl
sbb
adc
dec
jno
dec
scas
sbbl
adc
loope
inc
dec
ficompl
pop
add
add
movsb
add
sti
mov
out
sbb
mov
pop
ljmp
shll
lock
xchg
aaa
movsb
mov
xor
jo
xchg
out
lret
mov
add
outsb
sbb
add
and
mov
or
roll
push
xchg
cmp
jae
add
out
lods
nop
mov
in
jbe
cs
fisttpll
lock
enter
sub
idivl
jne
cmp
nop
je
loope
dec
gs
pop
out
test
add
pop
aas
fwait
div
in
pop
test
dec
mov
cmp
or
push
mov
adcl
test
xchg
adc
xor
push
sub
xor
repz
outsb
xor
pop
mov
pop
jbe
jecxz
sbb
shll
es
pushf
cltd
mov
fdivl
lcall
and
cmp
adc
inc
xor
jg
push
js
mov
ss
aam
mov
lret
inc
mov
leave
cmp
loopne
loop
sbb
jle
sub
jns
loop
or
sbb
scas
mov
loopne
and
dec
dec
por
fstl
mov
mov
inc
xchg
pop
mov
mov
sbb
xor
jns
xor
adc
fldt
scas
jnp
cmp
ss
movsl
test
push
sbb
push
daa
mov
in
push
fldt
in
lahf
adc
cmp
jno
int
imul
jmp
das
sbb
cmp
add
aas
test
mov
cli
xchg
and
addb
movsl
aam
jbe
mov
pop
sub
repnz
adc
mov
mov
adc
adc
mov
fbstp
mov
ss
imul
call
push
mov
and
inc
fcoms
adc
xchg
dec
aas
sub
add
hlt
lds
xchg
dec
mov
push
scas
aas
repnz
mov
adc
pushf
jae
or
mov
push
jecxz
sti
rcr
jp
push
push
mov
cmp
pop
mov
stc
mov
aas
fildl
iret
imulb
cld
in
mov
xchg
xchg
mov
add
sub
aas
shlb
sar
cmp
push
ret
cwtl
insb
insb
pop
stos
movsb
sbb
lret
out
arpl
fisubl
mov
dec
lcall
xchg
roll
xor
push
push
imul
or
nop
stos
inc
aad
leave
mov
cmp
push
scas
imul
dec
in
leave
test
sbb
sbb
xchg
fdivr
loopne
lods
adc
jns
shll
sbb
shll
pop
shrl
shr
jp
out
add
or
lds
jge
jnp
lods
fbld
out
aam
jg
push
mov
jg
inc
cmp
jg
pop
es
jne
mov
xchg
adc
cmp
outsb
cmp
aas
jns
or
dec
das
push
es
add
loopne
clc
in
sbb
leave
into
xchg
jmp
rorb
imul
inc
mov
inc
mov
or
loope
movb
aas
stc
in
inc
lcall
inc
dec
in
imul
stc
xor
dec
push
int3
push
sub
fdivs
sub
cmp
es
enter
iret
mov
mov
outsl
dec
repnz
xchg
push
out
loopne
push
mov
jle
jbe
or
push
out
pop
or
test
sbb
sub
sti
mov
repz
push
mov
popf
mov
xchg
add
fidivl
and
movsl
push
in
mov
and
stos
inc
mov
inc
xchg
pop
neg
je
cmp
xchg
push
movsb
jecxz
adc
mov
fcmovnb
jb
out
mov
repz
dec
loope
enter
fbstp
pop
or
mov
icebp
ret
dec
push
mov
call
dec
cmp
nop
cmp
insl
jl
daa
mov
jno
imul
or
cwtl
xchg
shl
jb
xchg
pop
test
idivl
pushl
xchg
ss
stc
mov
push
popf
dec
mov
imul
xor
arpl
xchg
in
cmp
adc
js
in
int
mov
stos
mov
pushf
mov
out
xor
enter
mov
imul
call
mov
adc
and
outsb
std
lahf
aam
sahf
addr16
cwtl
jg
mov
aad
sub
dec
dec
mov
mov
pop
out
mov
lods
inc
int
sub
loopne
sbb
inc
lods
pop
test
adc
pop
lods
or
xor
test
pop
fsubrl
fadds
shl
jae
jbe
mov
je
push
or
xchg
insb
sbb
lea
jnp
fwait
das
adc
aaa
stc
xchg
loop
add
xchg
lods
test
mov
push
test
or
inc
adc
filds
inc
push
filds
incl
aad
push
cmp
jecxz
cmp
pop
xchg
inc
lods
mov
jg
lds
pop
jp
es
sub
xchg
sbb
cld
cld
pop
icebp
lea
or
sub
inc
push
inc
movsl
lods
ret
movb
hlt
sbb
stc
mov
test
mov
xchg
pop
movsb
cltd
pushf
adc
test
sbb
lods
ds
or
icebp
fwait
mov
in
xchg
jns
push
inc
mov
loope
lcall
aad
lcall
mov
jo
push
cmc
jnp
mov
daa
out
adc
jbe
xor
pusha
scas
sbb
pop
out
ljmp
jbe
shll
add
pop
add
std
sti
mov
inc
jmp
subl
aaa
xor
popa
gs
xchg
push
jl
jbe
adc
iret
add
movsl
cmp
stos
pop
nop
sub
xor
mov
pop
pop
loop
lock
mov
lahf
xchg
dec
mov
and
aam
fcmovbe
push
or
push
xchg
sub
outsb
inc
shll
sbb
movsl
int3
test
jle
push
loop
movsl
fdivrp
rorb
dec
loope
das
fstpl
push
stos
movsb
rcrl
jp
leave
call
mov
aam
je
out
sub
icebp
xor
bound
arpl
in
repz
call
out
xchg
sub
movsb
pusha
sbb
jecxz
movsb
pushf
ret
outsl
in
dec
imul
xchg
xchg
dec
cld
add
mov
xor
popa
pop
call
xchg
sub
stc
xchg
mov
push
adc
enter
xorl
scas
pushfw
xor
jbe
mov
sbb
aad
roll
mov
and
sbb
jns
lock
rcll
sub
mov
mov
sbb
xor
push
scas
std
xor
insb
push
jge
xor
cmpsl
jo
jl
int
xchg
in
test
jb
mov
push
xchg
xchg
add
xchg
lcall
dec
aas
and
shlb
out
mov
rcrl
loop
ljmp
add
cmp
pop
mov
push
cmpsb
jmp
or
insl
call
xchg
sbb
mov
mov
adc
iret
fistpl
mov
pop
xor
fwait
inc
jo
adc
sub
sbb
ret
push
movsl
out
int
imul
inc
and
cmp
sub
add
push
int3
into
les
in
pusha
sub
add
mov
lds
push
insb
ret
call
cmp
xor
mov
sub
adc
adc
movsl
scas
int
incl
scas
adc
xchg
push
pop
mov
push
popa
daa
shlb
sti
adc
add
ds
dec
aaa
testb
out
ret
push
sub
cwtl
jb
sbbb
mov
xor
ret
sbb
das
jmp
mov
lods
js
adc
lcall
imull
xor
inc
nop
stc
push
sub
lods
in
and
test
mov
js
das
inc
cmp
sbb
jne
or
and
rcr
test
jo
mov
add
push
push
mov
sub
dec
xor
inc
jp
xchg
addl
lods
jae
in
dec
stos
cltd
test
fdivrs
repz
push
repnz
sub
in
shll
fdivs
pusha
into
adc
sbb
push
lds
fildl
popf
xor
in
test
xchg
fmul
pop
imul
test
int3
int3
popa
xor
pop
add
jge
aaa
dec
cmp
dec
pop
xor
push
cmp
inc
lcall
lahf
test
mov
xchg
adc
mul
pop
testb
or
mov
ja
jl
lcall
fidivl
and
xchg
pop
lcall
outsl
ficoms
xor
adc
mov
scas
sahf
cwtl
in
addr16
cld
mov
adcb
popf
ret
xchg
stos
cwtl
test
sub
out
xor
pop
or
gs
dec
xor
push
xchg
jno
rcrl
sub
imul
sub
dec
xchg
arpl
push
jne
sbb
sbb
mov
push
dec
lods
push
sbb
jp
dec
and
test
cmp
js
roll
jmp
in
inc
lods
mov
in
mov
xchg
xchg
sub
outsl
ret
mov
push
pop
aam
pop
add
dec
es
popf
test
dec
in
sub
dec
test
sbb
sbb
lahf
jmp
adc
nop
inc
push
cmpsb
inc
ja
mov
lea
inc
jp
popf
adc
or
and
adc
pop
adc
scas
fidivs
shlb
test
cmp
inc
sti
push
fisttps
fdivl
notl
adc
add
loope
and
btsl
aam
xor
or
mov
mov
adc
adc
sbb
push
ljmp
in
sub
inc
incb
dec
cmp
add
outsl
adc
push
and
hlt
popf
mov
jmp
stc
cwtl
mov
pop
stos
jle
das
inc
stos
repz
mov
mov
fadds
lea
push
inc
mov
scas
mov
pop
divl
xor
push
pop
and
pop
nop
jp
into
jecxz
xor
popa
cld
mov
data16
mov
sub
mov
repz
push
add
data16
stos
popa
push
outsb
xchg
fld
xor
push
mov
arpl
and
out
ljmp
fisttpll
pop
shrb
mov
call
dec
loop
dec
stos
add
jne
les
insl
cmp
aas
xchg
gs
mov
sub
das
ljmp
adc
add
loope
pop
cld
mov
push
outsl
shlb
jbe
outsb
shl
mov
rcpps
push
inc
mov
rorb
add
xchg
mov
mov
cltd
jne
pop
nop
imull
stos
dec
xchg
cmp
or
xchg
imull
mov
sbb
nop
pushf
or
imul
mov
pop
pop
call
leave
out
mov
lds
cmpsl
xchg
push
xchg
sub
ror
mov
inc
lds
jno
cwtl
lock
push
es
incb
adc
pop
or
loope
mov
cs
push
fsubl
push
add
push
mov
jmp
ret
jmp
mov
jo
outsb
and
ret
push
shl
pop
test
add
call
mov
xor
mov
cmp
sarl
sub
mov
lret
xor
xchg
ljmp
add
pop
sub
cld
dec
rolb
int3
and
daa
jle
aam
dec
out
fcoml
sbb
pop
dec
cmpsl
leave
into
lock
inc
enter
mov
bound
xor
shl
push
lahf
cmp
dec
xor
iret
adc
mov
sub
popl
adc
ds
pop
push
aam
ret
das
add
push
xor
pop
addb
imul
jmp
addl
data16
movsl
out
into
pop
dec
into
sbb
mov
xor
clc
mov
out
mov
arpl
sub
pop
fnstenv
add
ds
jo
pusha
mov
add
outsl
test
ss
dec
mov
leave
adc
sbb
int
cld
stc
fmull
push
jecxz
cmpsl
enter
ljmp
mov
cmpsl
mov
cli
insb
or
aas
bswap
imul
sbb
sub
sbb
mov
inc
out
jecxz
lods
int3
add
loop
mov
sbb
dec
mov
mov
ret
jae
stc
fs
dec
icebp
xchg
aad
in
xchg
fcoms
mov
enter
inc
jbe
jb
int
or
ja
xor
stos
xchg
jae
test
or
clc
aas
pusha
sub
test
in
or
push
xor
cmp
sbb
out
outsb
loope
mull
jg
rolb
xor
icebp
addl
loop
add
movsl
lret
push
clc
jns
test
xchg
xor
test
cwtl
sbb
lods
and
test
cmp
and
ss
or
icebp
sbb
vmulss
jnp
or
dec
daa
iret
scas
arpl
xchg
ret
xchg
aaa
fnstenv
insl
cmpsl
nop
sti
or
aas
pop
out
sbb
xchg
loopne
and
xchg
or
push
ficomps
addr16
cltd
bound
dec
repnz
je
sub
xor
xchg
mov
dec
and
jae,pn
add
mov
lods
rclb
ljmp
mov
and
int
sub
jmp
popa
lods
cmc
jge
pop
jb
mov
pop
test
push
arpl
out
negb
mov
xchg
add
rclb
xlat
inc
cmp
sub
mov
push
mov
sub
loopne
inc
push
mov
jno
inc
mov
push
mov
rcrl
xchg
xchg
mov
adc
sub
and
push
xchg
push
dec
adc
outsl
dec
fsubrs
push
cmp
xchg
jge
jns
adc
notb
scas
mov
insl
push
jo
fstpt
inc
jge
popf
or
xchg
pop
movaps
loop
pop
movsb
in
adc
stc
iret
sarl
inc
lods
addr16
notl
addr16
push
jle
insb
pop
and
loopne
shll
push
mov
jo
ret
imul
sbb
jae
sub
jmp
and
mov
push
cli
lret
into
and
mov
mov
rcrl
ja
cmpsb
inc
fwait
xor
xchg
or
int3
outsb
mov
js
int3
sub
pop
xchg
push
je
ja
dec
js
add
mov
inc
sarb
cmp
movsl
sub
adc
dec
cld
push
xlat
push
iret
ffreep
cmpsb
jnp
ss
add
jle
cmp
dec
pop
dec
rcrl
shrb
mov
add
aas
mov
xchg
das
cltd
mov
and
je
pop
inc
add
jle
mov
pop
mov
pop
int3
inc
sahf
mov
xchg
loop
sbb
sbb
jp
xchg
ds
xor
jbe
lea
ljmp
das
idiv
jle
js
popa
mov
stos
cli
pop
ficoml
icebp
push
pop
loop
xchg
pusha
inc
fucomi
fcom
leave
adcb
or
imul
pop
push
or
out
xchg
test
adc
lahf
rcll
lret
test
sub
adc
xchg
jne
std
jmp
jbe
imul
xor
sbb
xlat
dec
pop
scas
insl
pop
mov
pop
pop
jg
rcrb
inc
mov
stc
lock
mov
clc
je
dec
jno
mov
or
mov
cld
ret
data16
out
outsb
sahf
nop
add
xchg
push
mov
mov
movsl
cli
popa
jo
cmpsl
pop
mov
or
sbb
outsl
stos
and
pop
mov
orb
je
sub
call
dec
mov
jae
mov
sti
sub
lret
lds
jg
pop
stc
push
ror
sti
popf
roll
jmp
inc
dec
sub
test
push
xchg
mov
stos
cmp
sub
mov
cmp
xchg
leave
mov
lods
out
inc
fldt
xlat
pop
mov
decb
ds
pop
push
sbb
sbb
jmp
xchg
lea
movsb
int
sub
aam
inc
aad
sbb
mov
in
adc
mov
fistpll
into
cltd
mov
cs
cli
pop
ret
outsb
insl
or
xchg
add
cmp
adc
and
mov
stos
xor
mov
outsl
mov
xchg
mov
pop
push
jmp
rcrb
dec
stc
cmpsb
push
fnstenv
sbb
fisttpll
pop
mov
mov
mov
mov
xchg
adc
pusha
mov
cli
cmpsb
inc
mov
out
sub
outsb
add
mov
jmp
mov
sbb
jecxz
xchg
inc
call
leave
daa
lahf
dec
ret
aas
push
jmp
xchg
push
push
cmpsl
mov
shrl
jge
nop
ret
pop
notb
cmp
pop
adc
ds
cmp
ljmp
mov
xchg
pusha
rolb
movsb
mov
movsb
mov
jle
dec
movsb
mov
les
and
popa
cmp
and
gs
xchg
and
js
pop
fnsave
mov
mov
dec
fs
mov
xchg
andb
xchg
xor
pop
mov
loope
into
push
cmp
int
sub
push
imul
jbe
sub
jp
popf
sub
pop
fldenv
add
test
leave
mov
ret
adc
ja
mov
loop
mov
pop
jae
shl
jbe
and
cli
jo
xchg
std
into
shll
adc
xor
pusha
popf
inc
push
mov
pop
and
xor
in
mov
in
lds
jbe
xchg
mov
mov
add
dec
mov
push
pop
xchg
xor
loopne
cld
int3
adc
cmpsb
mov
adc
das
call
mov
and
cmpb
mov
hlt
pop
jp
imul
dec
bound
pop
movsb
mov
inc
xchg
mov
fsubrs
mov
loop
repz
add
lock
xchg
pop
leave
mov
sbb
icebp
popa
loope
pop
iret
sbb
sahf
dec
add
push
or
roll
or
jg
dec
insb
mov
cli
mov
cmp
lods
call
jnp
enter
mov
push
jge
cmp
pop
aas
or
pop
int3
jo
testl
cmp
mov
and
cwtl
dec
outsl
rcll
sub
dec
std
cmp
inc
add
or
addr16
push
mov
test
imul
jmp
adc
hlt
sbb
and
div
fldcw
sub
xchg
sbb
ret
sbb
std
push
mov
xor
mov
cmpsb
hlt
test
test
aaa
dec
mov
pop
stos
rcrb
into
pop
clc
pop
push
xchg
jo
sbb
in
jb
pop
icebp
lea
out
add
or
xchg
push
xchg
shlb
jg
ret
ds
mov
push
movsb
pop
addr16
stc
lea
jle
mov
push
or
rorb
outsb
rol
xchg
scas
sbb
shlb
fnstcw
iret
xchg
xchg
lcall
js
adc
add
sub
lods
jns
jnp
push
inc
and
jp
les
cmpl
clc
fstl
pop
jmp
setb
xor
outsl
mov
cli
pop
lods
pop
cltd
push
outsl
cmp
pop
mov
stos
xor
pop
aam
mov
jns
sbb
leave
popf
pop
in
and
mull
iret
xor
push
gs
inc
pop
arpl
or
sbb
jg
ror
xlat
fwait
movsl
pusha
nop
add
js
sti
fwait
dec
es
sbb
pushl
mov
pop
add
mov
lret
push
adc
stos
push
out
mov
in
jp
stos
and
mov
adc
push
adc
push
cmp
movsl
fsubr
jns
pop
insl
cs
sbb
rcl
mov
insl
add
jecxz
xchg
xor
jb
std
pusha
xchg
mov
jne
and
outsl
test
out
das
lods
insl
stos
std
pop
sahf
lods
sarl
and
gs
mov
ftst
lahf
cmp
inc
pushf
into
shr
aas
pusha
add
pop
loopne
jg
pop
or
pop
clc
loop
rclb
mov
fs
aas
lret
gs
pop
xlat
and
xorl
push
cmp
sbb
and
jp
push
add
cmpsb
pop
xor
pop
ds
inc
jmp
or
push
and
or
decb
push
pop
data16
push
mov
jg
mov
mov
add
sarb
stos
shll
cld
movsl
cmc
jne
push
loope
mov
add
and
lret
mov
push
ficomps
push
push
xchg
pop
push
push
mov
mov
rcr
dec
and
xchg
es
jo
sub
push
mov
adc
pushl
pop
add
mov
cld
ljmp
inc
inc
mov
data16
pop
imul
frstor
ss
fcom
push
cmc
test
lds
test
aas
jp
insb
jbe
jns
mov
xchg
mov
sbb
dec
adc
push
fidivl
pop
mov
cmpsb
sahf
pop
xchg
mov
test
xor
bound
lcall
mov
cltd
mov
push
xchg
jl
cmp
mov
add
dec
iret
add
gs
repz
sub
jno
and
adc
mov
jge
sbb
leave
jo
bound
mov
nop
inc
into
js
push
test
sarl
es
push
cmp
mov
push
mov
popf
mov
pop
jnp
push
popf
ret
or
cwtl
loope
lock
cltd
stc
lea
add
lret
mov
sarb
lock
call
xchg
int
inc
je
add
add
rsm
sbb
xor
lock
repnz
ljmp
pushf
ret
addr16
mov
aad
cmp
aaa
pop
ret
sub
ds
loop
jae
jmp
pop
mov
dec
das
and
xchg
xor
inc
inc
xchg
int3
push
fidivl
cli
lds
aad
and
xchg
lock
dec
fdivr
mov
or
cmp
fsubl
cmp
addl
mov
push
ja
ficompl
jae
jae
jmp
lock
iret
xor
dec
mov
xor
ljmp
lods
loop
mov
out
fistps
dec
sub
lock
out
xor
sub
sbb
jns
xchg
mov
xor
dec
push
rcrl
inc
mov
fildll
mov
pop
or
js
jmp
fsubl
sbb
popf
daa
movsl
lods
fs
push
dec
std
jp
push
pop
loopne
mov
mov
js
xchg
fistl
inc
loope
jns
ljmp
xor
popa
dec
sub
test
bound
mov
xor
xchg
mov
mov
jle
pop
dec
xor
js
push
sub
icebp
dec
lods
mov
fcompl
shll
xchg
icebp
or
leave
adc
inc
arpl
cmpsl
sub
insl
or
pop
pop
cmc
orl
fwait
sbb
ss
into
repnz
hlt
add
sub
mov
testb
cli
test
imul
out
fdiv
xor
mov
push
out
mov
std
sbb
and
aaa
pushf
xchg
scas
std
bound
xchg
test
mov
adc
mov
cmc
push
mov
cmp
adc
push
adc
mov
pop
jo
and
pop
aam
and
dec
xchg
xor
mov
outsb
int3
scas
jno
lods
test
jbe
daa
cmp
fs
sbb
rclb
inc
pop
cmp
je
dec
addl
jnp
call
fsubr
pop
or
mov
mov
push
call
jae
pop
inc
push
movsb
cwtl
mov
test
add
inc
xchg
xor
xor
xor
mov
add
mov
xorb
push
and
xor
out
call
orl
mov
mov
ret
lds
add
stos
pop
and
or
stc
mov
cld
xor
lds
pop
aaa
cmp
dec
sbb
loope
insb
jbe
adc
jnp
inc
addr16
orb
enter
stos
sbb
popa
inc
fstpt
jmp
dec
dec
cli
ret
push
sbb
outsb
les
out
or
cmp
popf
fisttpll
pop
jbe
popf
scas
sub
movsl
dec
push
nop
fcmovne
out
mov
js
insb
in
inc
jge
add
out
mov
out
in
mov
testb
in
pop
pusha
lock
mov
inc
inc
fwait
out
lahf
pop
into
les
cli
aam
push
lahf
jae
aam
xor
sub
call
iret
fistpl
int
clc
sub
and
push
mov
xchg
fsubrl
pop
mov
outsb
scas
jno
cmp
sbb
inc
subb
dec
sbb
repnz
imul
mov
mov
or
fidivrl
outsw
andl
mov
fcmovbe
push
cmp
shl
mov
imul
popa
sub
dec
out
fbld
sarl
inc
das
pop
fcmovne
inc
and
mov
fstp
inc
dec
out
stos
ud1
outsb
and
mov
dec
jbe
movlhps
mull
push
icebp
xchg
jl
fcoml
repnz
repnz
cmp
ds
pop
fstp
jns
jle
xchg
in
std
popa
in
lahf
stos
pushf
mov
clc
push
pop
flds
sub
and
ljmp
inc
add
xchg
and
jmp
jno
mov
xor
inc
xlat
rorl
dec
adc
not
xor
adc
mov
xor
mov
arpl
dec
dec
and
push
xchg
jge
pop
inc
std
add
xor
xor
sub
outsb
and
pop
xor
jle
lret
xor
sti
pop
fdivl
dec
inc
mov
sbb
or
lret
push
jb
mov
or
jnp
sub
xor
xchg
orl
mov
inc
sbb
and
jge
mov
dec
mov
pop
pop
mov
mov
mov
notb
lods
movsl
push
lret
in
sbb
icebp
xor
sub
int
shlb
mov
in
int3
and
lahf
pop
out
imul
xchg
lea
push
or
rcll
cld
xor
fwait
adc
pop
rcll
cmp
inc
out
inc
scas
fwait
add
out
aad
adc
mov
cmp
aaa
in
mov
or
lea
test
xor
int
inc
out
xchg
mov
ss
std
ljmp
dec
aam
adc
or
xchg
jp
pop
lods
push
cltd
mov
arpl
adc
mov
data16
push
mov
xchg
sub
mov
jbe
inc
pop
ss
sbb
jns
add
out
pop
push
dec
jno
push
push
push
lcall
xchg
lret
jl
scas
add
leave
es
dec
outsb
adcl
or
rcrb
sub
out
hlt
sub
sahf
iret
scas
mov
fwait
lods
test
out
std
test
outsb
int
popf
insb
loope
cmpsb
mov
imull
add
sub
pusha
add
push
push
cmp
daa
sbb
dec
test
mov
loop
sub
dec
in
inc
inc
push
mov
jecxz
mov
pop
gs
scas
push
push
aad
in
dec
arpl
push
lock
jecxz
int
ljmp
adc
inc
scas
shll
cwtl
shll
xchg
popa
nop
dec
pop
dec
loope
scas
mov
xlat
andb
inc
xchg
nop
stos
rol
sbb
das
lods
pushf
lret
iret
xchg
fsts
cwtl
loopne
pop
sbb
das
jmp
mov
repz
jle
cmp
adc
adc
sub
lahf
shlb
lahf
pop
xchg
stos
adc
pusha
loopne
testl
mov
movsb
mov
cmp
mov
jg
jnp
aam
rcr
fidivrl
sahf
xchg
orl
sbbl
xchg
sti
daa
xorb
mov
lcall
cmpsb
push
mov
je
cmp
aam
xchg
lahf
sub
popa
popf
popl
mov
mov
mov
mov
rclb
jecxz,pt
nop
mov
jo
push
mov
push
xor
add
pop
daa
sbb
pop
jmp
sub
fisubrs
dec
mov
inc
mov
jb
mov
shll
cmp
mov
sbb
ds
or
es
fcmovnu
ss
inc
sarb
iret
add
cmpsb
sbb
in
add
fsubr
lea
inc
push
aam
add
dec
and
insl
jne
sbb
psrlw
std
inc
in
dec
push
nop
out
add
push
cmpsb
int
in
divl
pop
inc
sbb
push
fs
rol
sahf
jnp
xor
xchg
add
test
test
jg
jl
fsubr
lret
sahf
lods
xchg
xor
test
fisubrl
enter
mov
fnstenv
jo
repnz
jae
and
sub
mov
pop
push
mov
sti
cmpsb
jl
pop
or
mov
mov
andb
popf
jo
ja
cmpb
gs
lret
dec
push
ljmp
cmp
jle
push
sub
mov
lret
out
jno
enter
cld
jle
mov
repz
mov
nop
mov
xchg
push
mov
sbb
cwtl
and
jmp
dec
mov
inc
div
ror
or
icebp
daa
lock
adc
mov
or
jo
dec
icebp
mov
out
test
fstpl
fs
adc
pop
rcll
movsl
cmp
lret
popf
mov
popa
xchg
ret
xchg
sbb
aas
mov
insl
pusha
mov
and
xor
lea
jl
dec
dec
pop
or
divb
sbb
sub
push
jno
mov
inc
mov
pop
xor
jg
pop
inc
cltd
inc
mov
pop
ret
xchg
or
insb
test
call
xor
test
mov
push
sti
je
fimuls
out
daa
test
cmp
std
mov
and
ret
push
lahf
ss
fidivs
hlt
enter
sbb
sub
nop
mov
cmpsb
pop
push
aad
inc
scas
ss
and
sbb
cmp
test
jae
cmp
in
out
cmp
aam
movsl
jns
pop
sbb
jae
xchg
lret
js
nop
cmp
mov
inc
inc
jecxz
dec
mov
and
fimuls
adc
and
stc
notb
fcoml
adc
push
sub
loop
xchg
out
dec
or
je
mov
pusha
ret
dec
dec
jmp
inc
add
clc
fstl
push
mov
lods
fsubrs
mov
mov
adc
push
mov
adc
imul
gs
inc
push
push
test
pushf
jmp
add
mov
jp
dec
cld
xchg
add
push
addr16
andb
push
inc
lahf
ljmp
mov
and
out
or
mov
scas
loop
subl
fistl
mov
dec
adc
test
jle
pop
leave
mov
aas
pop
or
sahf
popa
faddp
faddl
insl
dec
shrl
or
push
inc
stos
aad
jg
inc
cmp
fs
stos
addr16
add
cmpsb
rcll
test
jbe
cmp
xchg
jno
cmc
add
mov
pop
push
adc
jp
int
inc
or
push
adc
adc
cmp
js
inc
ljmp
clc
adc
push
sbb
push
xchg
repnz
addr16
repz
push
mov
sub
cld
gs
xor
jae
adc
sti
inc
cmc
push
adc
inc
and
push
lret
popf
push
repnz
or
mov
pusha
cmp
addr16
pushf
daa
mov
dec
mov
and
inc
mov
cmc
cmpsl
pop
lret
loop
aaa
leave
cltd
cmpsb
and
and
sub
popa
add
fcompl
addl
lock
push
cld
push
cmpsb
mov
sbb
fstpl
and
aaa
int3
xor
mov
push
push
ret
ficoms
pop
sbb
sbb
test
mov
ljmp
mov
insl
add
jbe
imul
daa
mov
push
cmp
push
xchg
shlb
jb
mov
mov
jno
xor
dec
popa
xchg
pop
pop
sub
mov
inc
lock
addr16
lcall
mov
fistpl
or
adc
push
dec
nop
push
sbb
adc
xor
data16
cmp
cli
push
or
sbb
scas
aam
push
mov
rcrb
repnz
lods
into
jo
cmp
movsl
sahf
test
imul
pop
xor
adc
sub
jo
stos
lret
out
push
je
lods
jl
andl
cmp
outsb
clc
add
out
sbb
xchg
jg
enter
ds
mov
jmp
pusha
ret
test
aas
imul
pop
rorb
call
hlt
mov
enter
stos
aam
xchg
mov
ds
mov
cmp
sbb
jnp
lahf
and
mov
sbb
nop
imul
and
pop
mov
mov
sub
jne
pop
test
into
xchg
push
loopne
pusha
int
jb
clc
notl
push
add
jecxz
mov
fwait
in
aas
sbb
xchg
ror
mov
pop
in
imul
pop
adc
inc
cli
and
cmp
daa
jnp
add
data16
inc
push
or
fidivrl
or
or
popf
hlt
mov
loopne
shlb
arpl
dec
lcall
xchg
popa
adc
or
pop
pop
mov
xadd
xor
jg
add
lahf
hlt
push
aaa
fsubl
pop
dec
cld
test
inc
subb
push
int
mov
imulb
lea
dec
mov
pop
jae
adc
dec
dec
ljmp
or
inc
adc
out
add
adc
mov
xor
repz
cmp
arpl
ss
ja
fsts
push
sbb
xchg
pop
pusha
cli
lods
test
in
imul
fidivl
in
lret
cmc
popf
xor
test
stos
dec
cmp
insb
add
mov
loope
int
ret
xor
adc
jge
add
loopne
inc
push
scas
xor
mov
and
sahf
push
scas
sti
sbb
filds
fs
fs
mov
movsb
outsb
jl
xor
xor
testb
mov
rcrl
bound
aad
ss
pop
btsl
add
in
shlb
xlat
scas
in
pop
mov
dec
pop
push
mov
lea
pusha
das
int3
lds
lea
mov
aad
xchg
test
imul
loope
andb
sbb
push
stos
or
insl
das
and
dec
inc
pop
jns
xor
cmp
jge
dec
insb
or
jno
gs
sub
xor
add
cmpsb
repz
imul
xchg
test
push
jle
sbb
adc
addr16
enter
jbe
cmp
xor
sti
movsl
scas
xor
iret
pusha
lcall
push
and
sub
ds
lods
mov
mov
out
cmp
mov
ss
xchg
mov
xor
insl
cmp
ss
add
mov
jmp
scas
and
imul
inc
scas
bound
xchg
xchg
mov
push
pushf
js
sbb
push
sbbb
and
mov
dec
out
cmpsl
cwtl
hlt
or
mov
mov
test
xor
push
shll
mov
imul
fwait
or
or
pop
mov
dec
sub
ret
call
push
or
loope
loop
cmp
lcall
andb
mov
rcrb
dec
cmp
cmp
dec
push
lock
adc
shlb
ror
fcomp
dec
adc
aam
es
jnp
add
repz
push
test
push
in
test
popa
cmc
dec
cmp
hlt
mov
in
lods
jne
aam
jb
xchg
dec
loope
popf
inc
pop
popl
mov
or
sbb
daa
jl
ds
pop
jbe
xchg
lret
push
es
nop
int
pop
push
xchg
lock
push
scas
into
rorl
in
push
inc
dec
addl
outsb
mov
xor
push
out
push
mov
push
inc
sub
jns
lcall
inc
sub
pushf
dec
in
jns
xchg
mov
mov
sbbl
and
aaa
mov
divl
xchg
in
jb
pop
sbb
iret
lret
sbb
insb
sub
movsl
mov
inc
cmpsb
cmp
fstps
es
outsb
fmul
xor
inc
es
testb
repz
pop
sub
jp
sub
int3
clc
inc
add
sbb
scas
inc
repz
ffree
jnp
sub
es
int3
inc
mov
jmp
fcmovnu
inc
push
sub
aad
lods
pop
jno
dec
ret
push
mov
xchg
insl
jbe
shrb
push
pop
or
push
add
test
dec
cmpsl
ss
out
or
fs
outsb
xor
cmp
push
int3
aas
test
xchg
aam
mov
pop
ret
inc
jg
cmpsb
shll
cltd
mov
scas
les
or
ds
add
inc
sbb
lock
cld
or
mov
push
in
mov
outsb
repnz
add
push
sub
mov
loope
insb
lds
vpandn
insb
mov
xor
xor
rcll
outsl
pop
lcall
out
imull
in
rcrl
xor
test
mov
or
lods
pop
xchg
push
xor
fxch
xchg
in
imul
mov
cmpl
fsubp
xchg
pop
sbb
sub
scas
sbb
pop
lret
imul
mov
and
dec
aad
dec
cmp
push
jecxz
inc
jb
dec
repnz
dec
cli
mov
add
cltd
sbb
push
and
aad
add
mov
adc
out
push
xchg
cmp
aas
cmpl
imul
sub
lcall
out
ret
in
rcl
in
jae
rclb
pop
xor
push
dec
fldt
icebp
mov
ret
mov
jecxz
stos
sarb
add
jae
pop
push
add
inc
add
mov
sbb
sub
loopne
std
fildl
ds
add
inc
fadds
or
xchg
adc
mov
xor
insb
lds
push
fwait
mov
sbb
and
pushf
dec
aad
cmp
mov
ret
xchg
scas
add
mov
gs
enter
xor
xor
push
les
cmp
mov
or
sbb
das
mov
inc
pop
mov
ja
fprem1
leave
data16
popa
pop
push
pop
mov
mov
xor
inc
mov
repnz
sbb
jnp
fbld
into
test
sti
jecxz
outsb
xor
sbb
out
xor
xchg
orb
cmc
imul
dec
cmp
imul
movsb
into
jg
test
outsb
iret
and
sbb
lea
push
dec
xor
mull
stc
das
bnd
fs
jmp
cmc
add
pop
ficompl
inc
test
push
fwait
add
test
cld
lcall
mov
adc
lret
rclb
test
into
push
jbe
lea
or
shl
in
jecxz
adc
adc
sub
mov
movsl
mov
add
mov
out
pop
xor
and
and
pop
mov
dec
fistl
push
add
jo
imul
jbe
push
mov
xchg
jnp
jns
inc
cmp
in
jns
and
or
push
push
pop
es
inc
push
nop
jmp
in
inc
push
push
ret
cs
jge
cli
and
push
mov
fidivrs
cmp
icebp
sahf
mov
jno
orb
mov
push
cld
stos
push
lahf
mov
js
hlt
mov
xchg
pushf
aam
mov
xlat
leave
pop
mov
es
into
pop
enter
pushf
xor
pop
and
and
mov
rcrl
loopne
adc
sti
xor
push
aas
add
adc
int3
xor
fnstsw
mov
mov
add
iret
mov
adc
sahf
mov
xchg
push
push
hlt
add
in
cmpsl
jl
push
inc
fiadds
imull
mov
sahf
test
fdivr
pusha
xor
inc
xor
ljmp
mov
outsl
test
fstpl
sbb
jg
loope
shrb
lahf
jl
cmpsb
aam
add
inc
aas
lea
mov
cmp
push
pop
mov
add
enter
fmull
mov
mov
sarb
fstps
jnp
ds
gs
xor
push
push
popf
rol
pop
xor
add
icebp
lock
jae
mov
xor
ss
fstp
popa
jl
mov
loopne
or
pop
lcall
or
jb
xor
into
cltd
in
jle
movsb
add
pop
xchg
dec
popf
add
leave
test
pop
dec
push
push
add
jp
cmpsb
jp
mov
xchg
mov
ss
aad
mov
es
adc
jg
insb
icebp
inc
cmp
pop
cmp
nop
imul
sub
outsl
cmp
push
mov
mov
test
lock
or
popa
int
adc
inc
out
fsubrl
mov
repnz
icebp
inc
sbb
outsl
sahf
mov
vmovhps
loopne
aas
je
and
and
pusha
or
dec
aas
pop
jae
add
pop
cld
jge
and
mov
pop
inc
adc
mov
cmc
jge
mov
or
subb
lcall
fists
mov
pop
leave
roll
scas
mov
iret
mov
xchg
inc
adc
icebp
ror
push
push
stc
cmp
data16
xchg
dec
dec
out
shrl
scas
test
repnz
test
push
daa
add
inc
lods
mov
sbb
dec
paddusw
int3
std
add
jecxz
and
push
insl
mov
xchg
pop
mov
sub
shlb
movsb
and
add
stos
cmp
add
xlat
nop
add
pushf
xor
mov
jae
sbb
pop
dec
shll
cli
add
out
cmp
jl
mov
inc
cmp
out
and
sar
lcall
adcl
jae
call
dec
lods
nop
sub
movb
rcll
and
sub
push
popa
mov
testb
repz
inc
mov
and
sbb
pop
push
fcomip
les
mov
popa
lahf
mov
sub
push
pop
das
mov
enter
gs
lcall
les
je
adc
dec
cltd
mov
ret
ficoms
inc
loope
clc
adc
mov
ficoml
and
clc
orl
test
mov
jl
jge
and
cmpsl
test
sbb
mov
leave
in
jae
sbb
daa
fucom
push
ljmp
mov
ds
push
inc
aaa
insl
out
imul
cmp
pop
xor
xchg
addb
dec
mov
std
negb
xchg
cmc
push
scas
fnstenv
test
int
xchg
push
popf
mov
or
push
mov
xor
addr16
inc
xor
outsl
dec
mov
gs
fsincos
popa
or
and
inc
jecxz
sbb
iret
pop
cltd
xchg
dec
pushf
pop
and
inc
loope
shl
xchg
arpl
sub
iret
cmp
test
iret
lcall
mov
mov
sub
insl
mov
cli
sbb
mov
inc
inc
repnz
in
bound
rcrb
jl
sub
cmp
jp
pop
adc
lret
lret
push
hlt
fistps
add
inc
dec
jne
out
mov
xchg
popf
rorl
add
sbb
pop
push
stc
test
or
cmc
out
lods
inc
jmp
rcl
xchg
pop
dec
pop
bound
sub
xor
pop
aad
jmp
out
dec
lahf
rclb
xchg
pop
clc
or
push
cmp
xor
pop
std
cmp
mov
and
lods
gs
imul
xchg
shl
in
movsl
or
mov
out
jne
dec
incb
push
mov
mov
jl
repz
lods
xchg
out
fadd
mov
or
mov
imul
pop
cld
lret
decb
imul
mov
cmp
push
pop
mov
scas
cmp
cmpsb
inc
lods
js
cmpsb
inc
xor
xlat
push
push
out
inc
xor
mov
mov
in
cltd
xchg
jne
ss
dec
cmp
adc
jg
outsb
xchg
mov
jns
sbb
jl
imul
dec
lret
xchg
fucompp
fs
mov
jg
mov
shl
cmp
xchg
hlt
inc
aaa
into
aaa
mov
or
jg
add
mov
test
dec
fs
test
sahf
add
orl
adc
subb
jns
pop
push
push
sub
pop
or
inc
int3
int3
mov
cmp
sbb
sarl
adcb
push
dec
clc
push
enter
xor
scas
jle
pushf
xchg
push
loope
loop
sarb
sub
jmp
iret
loop
inc
add
pushf
enter
scas
and
inc
pop
mov
lock
sar
test
push
push
lea
sbb
rclb
jmp
lret
stos
mov
pop
add
push
mov
test
sbb
adc
pop
loop
or
xchg
int3
enter
sub
mov
dec
xor
popa
jno
outsl
xchg
lret
jne
xor
jae
aaa
push
xor
fadd
incb
movsl
cmp
adc
insb
push
xor
sbb
add
scas
mov
arpl
pop
daa
into
aad
jbe
idiv
clc
ret
and
inc
out
add
xor
sbb
pop
inc
clc
loop
pop
mov
jl
data16
mov
shrb
movsb
inc
into
fisubrl
push
mov
out
push
les
xchg
xchg
cmpsb
loopne
gs
add
add
cmp
lahf
repz
rcr
inc
xorl
lret
fucomp
xor
popf
inc
loopne
and
lret
dec
mov
mov
inc
pushf
adcb
mov
sbb
push
xchg
aas
push
add
cwtl
or
and
lcall
pop
je
stos
ss
enter
xchg
mov
jecxz
inc
outsb
dec
jo
jecxz
and
mov
mov
sub
mov
clc
into
mov
arpl
or
loope
pop
and
cwtl
mov
cmp
dec
sub
adc
push
int3
test
ficoml
xchg
xchg
loope
pop
gs
adc
loope
outsl
test
fiaddl
jnp
push
das
dec
xchg
sub
xchg
push
icebp
mov
sahf
in
pop
shrl
cmp
scas
sbb
scas
je
xchg
jbe
subl
leave
orl
out
mov
mov
or
xchg
inc
mov
hlt
cs
xchg
push
jb
loopne
cltd
mov
jns
loopne
add
inc
jle
jl
and
imul
arpl
sbb
and
ljmp
and
movsl
jl
pop
and
adc
jo
sbb
or
push
xor
fstl
push
push
cmp
test
data16
xchg
insl
in
cs
adc
jle
je
out
out
mov
test
xor
jne
adc
je
push
adcb
push
das
out
imul
jmp
inc
lock
xor
lods
xor
mov
orl
popf
enter
dec
in
push
sub
or
test
and
aam
mov
mov
test
add
les
fidivrs
iret
cmp
push
lret
stos
add
push
mov
shll
push
shll
scas
fs
divb
enter
lahf
adc
lcall
ljmp
imul
xchg
loopne
rorl
arpl
ret
jecxz
mov
xchg
add
popf
inc
dec
mov
or
push
or
aad
enter
jg
mov
push
fldl
jp
and
jmp
push
pop
out
or
xchg
aad
xchg
sub
dec
or
orb
dec
std
popf
or
or
shl
adc
lahf
lea
mov
outsb
stos
call
shll
xchg
pop
xchg
ret
or
test
or
fimuls
sbb
shld
jl
ss
shlb
adc
jge
xor
rorb
cwtl
adc
in
mov
clc
les
or
ficoml
push
jno
cli
jp
aad
push
pop
mov
les
or
or
dec
dec
nop
cmp
lods
mov
loopne
out
push
imul
insl
movsb
or
out
sbb
adcl
xchg
cmpsb
aam
dec
loop
shrb
dec
cmpb
clc
cmc
dec
jp
push
add
pusha
ret
mov
outsl
xor
mov
loopne
adc
dec
mov
lods
xchg
cmpsl
loope
jbe
add
sub
cmc
sarl
cmp
aam
mov
pusha
adc
stc
test
outsb
lret
or
movsl
dec
jp
test
mov
mov
cwtl
inc
mov
mov
mov
inc
fcoms
xchg
adcb
or
enter
xchg
jp
push
push
shr
sbb
in
jp
iret
call
shlb
out
jmp
fistpll
aad
xchg
loopnew
inc
dec
push
mov
mov
call
stc
lods
lods
sub
sbb
sub
jno
jbe
sbb
popf
add
aas
in
xchg
fnsave
and
jl
dec
and
adc
insl
jno
aam
push
xchg
sahf
jmp
je
ss
scas
insb
or
dec
int
cmp
inc
add
xchg
add
movsb
sbb
mov
push
jl
adc
inc
rorl
ljmp
loopne
jl
cmp
ljmp
mov
out
leave
or
jecxz
rorb
popf
push
test
lods
mov
xor
call
sbb
push
das
mov
es
stos
rcr
mov
jbe
inc
sti
dec
jnp
adc
adc
push
shlb
mov
fimull
dec
shll
daa
test
insl
xor
lret
rorb
subl
mov
lods
into
xchg
js
mov
cmp
or
lea
std
fs
or
inc
cwtl
mov
pushf
movsl
jnp
jb
dec
arpl
push
das
dec
xchg
mov
fwait
jno
out
sub
push
xchg
ficomps
cli
or
dec
or
mov
out
int3
jno
xchg
push
or
jmp
and
addb
adc
pmaxsw
mov
dec
cltd
xchg
lahf
js
dec
mull
xchg
xor
or
lret
sub
ficoml
or
adc
mov
lods
data16
aas
stc
adc
cld
or
mov
loope
std
push
subl
das
cli
jl
stc
fidivs
pop
ret
push
ficomps
jle
roll
or
packuswb
mov
pop
aaa
and
f2xm1
dec
push
test
jmp
test
inc
dec
std
stc
mov
jg
out
fwait
loopne
xchg
or
lahf
xor
or
fisttpll
xchg
and
pop
dec
jp
popf
cmp
mov
push
in
and
pop
sti
xchg
inc
outsl
sub
mov
sbb
out
stos
iret
push
lcall
mov
xor
outsl
xchg
and
loope
pop
ret
subb
jae
pop
jns
daa
data16
popf
sbb
lds
aas
je
repz
and
push
push
es
test
in
fmull
pusha
loop
mov
or
mov
cmp
movb
test
shrl
add
cmp
inc
arpl
and
jg
fdivs
popf
in
sub
adc
insb
movsl
in
mov
in
bound
rcrb
sub
addr16
mov
pop
cmc
lods
push
cwtl
push
arpl
imul
sub
jne
popa
leave
pop
int
iret
int3
mov
push
sub
dec
add
cmp
mov
xchg
les
sbb
xchg
pop
popa
test
mov
push
cmp
jp
cmp
xchg
and
jle
movsl
cmp
sub
scas
cmp
xorb
push
loopne
mov
orl
lret
adc
pop
inc
push
pushf
std
loop
cwtl
fnsave
hlt
and
movsb
out
jg
mov
xchg
cmp
xlat
pusha
lods
testb
outsl
mov
loopne
outsl
mov
add
xchg
inc
lcall
xchg
lods
adc
jae
jne
pop
fdivl
inc
lods
les
push
mov
and
sub
subps
stos
and
out
adc
adc
jno
daa
stc
test
jne
es
sbb
jmp
jae
mov
dec
sub
pop
hlt
and
filds
sahf
leave
roll
xlat
adc
in
xchg
cmpsl
orb
lahf
and
faddl
xchg
das
jno
push
push
jecxz
rol
aas
insl
push
pop
popa
stos
int
ret
pusha
call
stos
lcall
mov
arpl
paddd
pop
sarl
js
and
scas
shl
fwait
movsl
mov
xchg
sub
jp
call
iret
jle
xchg
sbb
cwtl
int
js
or
dec
mov
andb
inc
rcll
sarb
cmp
adc
dec
pop
sahf
jp
int
mov
cwtl
out
push
hlt
fnstcw
and
xor
and
mov
dec
out
pop
cltd
int3
pop
ja
shr
fistpll
mov
test
insb
push
sub
scas
mov
lds
jp
inc
inc
sub
mov
jle
add
push
pop
out
int
jns
adc
icebp
mov
outsb
adc
scas
outsl
enter
or
test
aaa
call
cmp
xchg
je
mov
rclb
out
mov
ds
ret
cmp
adc
add
xchg
inc
cwtl
dec
mov
outsl
lcall
mov
sub
sub
xchg
adc
push
loope
push
push
outsb
loop
addr16
bound
dec
sub
mov
xor
ss
mov
nop
je
sub
add
shll
or
fwait
cltd
test
adc
dec
adc
xor
mov
es
pop
push
stos
orl
push
lret
dec
lcall
std
rep
lock
sbb
cwtl
push
xor
outsl
test
xor
mov
pop
std
out
gs
xchg
arpl
push
movsl
mov
mov
lea
dec
mov
in
add
dec
fistl
mov
enter
imul
jns
jg
mov
test
sbb
dec
cmpsl
adc
adc
sahf
inc
jb
out
jo
pop
stos
fisttpll
ficoml
and
out
pop
scas
jne
pop
test
cmp
xchg
push
pushf
divb
push
rcr
mov
repz
pop
ja
mov
in
push
cmp
add
cmp
imul
mov
xchg
outsb
pusha
mov
in
mov
jl
mov
scas
pop
sbb
ds
shrl
bound
push
push
loope
cmpsl
cmp
sbb
popa
filds
loop
jae
add
mov
jns
pop
mov
insl
dec
mov
fsubrs
fs
jne
push
sarb
mov
pop
xor
insl
fildl
adc
sbb
mov
mov
lods
test
push
addl
inc
xchg
lcall
rcrl
xchg
jb
insl
test
in
mov
icebp
repnz
sti
cmp
push
hlt
ret
xor
sti
pushf
ret
rcll
or
push
lods
lds
repz
xchg
dec
push
outsl
dec
sbb
inc
iret
rcl
iret
lock
std
aam
push
mov
cmp
push
shrl
imulb
stc
jp
pop
js
int3
and
dec
scas
sarl
aaa
mov
push
fucomip
jmp
mov
or
xchg
aas
das
nop
jl
or
jnp
loope
push
sbb
jno
leave
xor
mov
sbbb
outsb
mov
or
test
push
and
aam
push
and
scas
lea
shr
adc
mov
in
mov
ret
lret
inc
js
pop
lea
or
aas
ja
imul
shlb
pusha
sub
jb
inc
dec
lock
cmp
cmp
xchg
std
xor
rcll
cmp
les
inc
mov
mov
push
call
out
fnsave
xchg
add
xor
dec
int3
stc
cltd
push
pop
push
cmp
inc
ss
js
cmp
mov
mov
andl
inc
and
jmp
fildl
mov
sub
cmp
xchg
push
inc
cmp
sub
fbstp
or
ret
lea
imul
jg
inc
push
xlat
rcl
je
repnz
add
pop
aam
neg
and
add
insb
cli
mov
ja
outsl
pop
jns
punpcklwd
iret
in
cld
sbb
inc
lods
loopne
mov
sti
mov
je
xor
arpl
rcl
dec
sbb
xor
out
xchg
sbb
lods
dec
or
pop
jg
mov
and
dec
adc
lods
xchg
pusha
mov
cmc
rcrb
cmp
mov
and
icebp
ret
fstps
xchg
push
jmp
das
adc
push
xchg
cwtl
pop
sub
std
pop
out
push
cwtl
shl
in
xorl
mov
cmp
lahf
or
jmp
out
mov
lret
jb
adc
sbb
and
sar
cli
xchg
ficoms
mov
pushf
cmpsb
test
test
rclb
test
ljmp
aam
push
mov
mov
gs
test
dec
sbb
or
int3
and
jo
push
inc
xchg
sub
cltd
and
push
lret
out
imul
cmpsl
repnz
aad
mov
fdivrs
adc
and
mov
cmp
or
rorl
xlat
mulb
push
push
jb
fadds
in
jnp
js
popf
ljmp
mov
iret
mov
movswl
sbb
icebp
negl
dec
xchg
inc
and
pop
fstl
adc
pushf
scas
and
sahf
nop
jg
arpl
jl
push
arpl
and
xor
lds
rolb
test
push
sub
pop
lret
out
and
leave
mov
pop
cwtl
cli
add
rorl
nop
lods
push
and
mov
add
push
sbb
mov
mov
out
sbb
mov
pop
sub
and
test
addl
das
xor
dec
je
shll
pop
imul
fdivrp
sub
bound
rolb
mov
repnz
sahf
sub
mov
cld
dec
test
call
mov
xchg
cmpsb
mov
push
sub
pop
xchg
call
mov
adc
inc
int
push
in
push
sub
pushf
mov
xchg
subb
pop
mov
xchg
test
or
fs
shr
mov
add
dec
jae
cli
cs
inc
dec
or
mov
cmp
jne
out
repnz
pop
outsb
loopne
popf
cmpsl
in
stc
dec
ljmp
jno
fstps
out
in
mov
in
sbb
pop
gs
jle
and
cmc
pop
sbb
aaa
cmpsb
lds
mulb
ss
call
lret
js
lcall
sarb
sbb
push
test
mov
add
xchg
and
inc
adc
fstpt
outsl
sub
and
addb
jp
push
adcb
and
ja
or
pop
jne
sbb
push
jmp
push
mov
xchg
addr16
mov
pop
mov
fxch
dec
movsb
fdivrp
inc
lcall
ret
xchg
jle
inc
clc
scas
or
push
fldt
jo
shlb
lods
int
dec
inc
popf
pop
adc
xchg
mov
sub
mov
arpl
cli
and
add
js
ds
inc
aad
inc
loopne
or
out
xlat
adc
and
ja
push
lcall
out
std
add
cmp
sbb
mov
push
push
mov
mov
cmp
adc
inc
in
pop
adcb
pusha
mov
mov
mov
jmp
push
in
loopne
bswap
sbb
in
aam
mov
cmp
sti
xor
icebp
xchg
fs
insb
cmp
sbb
xchg
jmp
dec
mov
sarl
leave
xchg
movsl
inc
pop
or
adc
leave
fcomps
out
fmull
inc
push
sbbl
ret
push
sub
daa
test
adc
cmpsl
pop
xchg
in
mov
stc
jmp
mov
loope
outsl
aas
jp
mov
add
adc
mov
insl
lcall
xchg
mov
fcompl
add
push
dec
cld
inc
push
push
jb
pop
stc
dec
sub
fistpl
add
sti
xchg
add
ud2
pop
and
int
push
push
arpl
sbb
push
js
push
jmp
sbb
and
push
cmp
lock
jns
or
pushf
push
insl
cmc
cmp
dec
jo
mov
bound
xchg
xor
insl
lahf
lods
gs
mov
mov
outsb
lods
btc
jp
popa
mov
cmp
xor
jge
add
mov
xorl
mov
and
sub
and
dec
dec
xor
mov
or
push
loopne
orb
sbb
nop
fwait
nop
sub
cmp
and
sbb
cmp
arpl
test
inc
ja
sti
cmp
jo
stos
dec
add
jne
add
test
mov
icebp
adc
incb
and
out
push
lds
adc
and
insb
rolb
pop
jb
pusha
dec
jge
add
inc
jl
or
test
add
shlb
pop
mov
repnz
sub
imull
or
jno
cmc
jg
test
mov
test
adc
pop
push
ljmp
and
sub
mov
jb
mov
test
enter
push
xlat
std
pop
mov
das
sub
ret
and
pop
popa
pop
rcll
pop
je
sbb
push
subl
mov
js
getsec
pop
test
lret
dec
ljmp
mov
mov
mov
mov
jp
lahf
mov
shr
into
fwait
movsl
jl
pavgw
xchg
add
stos
push
mov
mov
mov
xchg
or
cmp
adc
prefetcht2
jle
les
lock
xor
movsl
movsl
mov
imul
mov
outsl
cmp
in
dec
push
push
inc
jns
out
repz
fisttps
xor
fiaddl
push
lea
hlt
fsubs
inc
mov
xchg
cmc
ror
and
push
lods
sbb
imulb
cmp
or
je
push
xor
movsl
mov
insb
pop
mov
call
aaa
cwtl
out
jo
cltd
out
sysexit
pop
xor
push
mov
mov
pop
fists
and
push
xchg
cmp
out
xchg
mov
rcrl
js
pop
stos
jl
jo
lahf
lea
inc
sub
pusha
insb
sbb
nop
stc
pushf
scas
add
xchg
jne
add
jno
pop
jae
pop
push
jne
xchg
add
and
fwait
lods
pop
aas
xchg
mov
ret
mov
lods
push
ret
mov
xchg
mov
mov
fdivrp
out
mov
inc
into
dec
fwait
xor
pop
lods
mov
add
repz
push
out
cmpsb
and
call
pop
mov
dec
jge
fmulp
pop
mov
lret
and
lret
sahf
mov
jae
and
jmp
movsb
sub
jge
je
aam
imul
jecxz
mov
stos
dec
addr16
xchg
mov
or
lods
jl
sti
mov
outsl
mov
sbb
pop
lea
cld
out
fs
inc
fsubrl
das
fwait
mov
in
push
call
out
jl
lods
movsl
lods
mov
sub
dec
mov
pop
sub
jbe
movsl
add
xchg
inc
mov
negb
loop
push
cmp
int3
push
fsubr
call
repnz
dec
ret
mov
adc
outsb
or
movsl
sub
pop
loopne
fwait
data16
pop
xor
data16
rcll
sub
mov
loopne
test
push
add
outsl
je
lret
sub
mov
cmp
mov
gs
jge
or
adc
add
mov
roll
push
shll
push
adc
push
loope
ljmp
pop
scas
or
enter
and
stos
xor
stos
and
pop
out
ja
or
iret
xor
nop
jne
push
lret
out
adc
aad
inc
mov
popa
sbb
negb
outsb
lret
adc
hlt
jmp
popa
xchg
cmp
mov
or
fsts
scas
push
or
mov
icebp
testl
test
mov
test
xchg
mov
cmc
popf
pushf
cli
adc
or
popa
pusha
sub
pushf
stos
loopne
xchg
and
lea
sbb
test
fsubr
lret
mov
xchg
ja
mulb
data16
pusha
mov
les
and
aas
jge
and
sbb
or
inc
push
or
stc
orb
mov
lea
sbb
repnz
andl
negb
lods
insl
cmp
mov
xchg
shrl
sbb
jle
jg
lock
mov
cwtl
pusha
cltd
xorl
xor
cmp
cmp
aas
scas
aad
fldl
syscall
push
imul
inc
mov
test
mov
xchg
ja
xchg
insl
out
xlat
push
rcr
fildll
push
scas
or
inc
into
rcrb
mov
cli
fs
mov
xchg
cmp
pop
cmpsl
je
popf
jne
jecxz
test
mov
inc
mov
or
adc
mov
and
je
bound
xchg
stos
and
data16
xchg
push
cwtl
push
mov
pop
and
popf
jno
hlt
iret
push
cld
jecxz
into
lods
sbb
shlb
push
adc
jnp
fisubs
mov
mov
xchg
push
or
adc
push
mov
push
js
int
and
popa
lock
sbbb
jnp
mov
sbb
lret
cmp
mov
iret
leave
cmp
or
gs
lahf
test
lahf
shlb
mov
fwait
scas
enter
ljmp
fs
or
bound
pop
leave
jb
xchg
stos
aad
loopne
lock
in
stos
cmp
sarb
mov
push
xor
dec
inc
int3
cmpsb
shl
imul
mov
sbb
pop
and
call
repnz
dec
sub
ret
je
push
xchg
pop
lock
fnstenv
ficompl
test
pop
loope
add
and
add
xchg
repnz
in
test
int3
push
mov
shl
loop
cmp
test
sahf
shl
rorl
pop
js
popf
loope
mov
sbb
lods
cltd
movsl
lods
mov
adc
cld
adc
cli
nop
sbb
test
imul
xor
pushf
jbe
xor
es
xor
das
stos
cmp
jmp
sub
adc
pop
cmp
mov
addb
frstor
mov
dec
insl
pop
loopne
pusha
les
cmp
aas
idivb
aaa
flds
jne
sbb
outsl
cmpsb
sub
or
imul
cmp
dec
js
lret
aad
cmpsl
push
add
rcrl
loopne
fisubs
mov
notb
xchg
dec
push
push
push
aam
add
inc
and
mov
mov
rcrl
jg
test
sbb
mov
aam
jae
pop
push
daa
andl
xchg
jmp
xorb
jp
xor
popa
xchg
das
adc
out
jmp
lret
lret
sbb
pop
call
mov
rcll
sub
insl
arpl
sar
sbb
or
push
sub
into
ja
xchg
adc
aas
outsl
inc
pop
dec
add
scas
test
loop
xor
out
in
sub
clc
add
pop
add
jge
pop
dec
jns
gs
scas
sbb
repz
cli
sub
jl
int3
jo
popa
dec
stos
inc
xchg
inc
sub
xor
or
mov
cwtl
cmpb
push
push
int3
sti
icebp
cltd
mov
and
rclb
cmp
sbb
mov
mov
outsl
fwait
push
daa
inc
inc
cwtl
test
cwtl
mov
mov
push
xchg
repnz
rorb
fbstp
les
pop
xor
mov
push
pop
out
icebp
pop
je
lret
mov
adc
push
in
lret
sbb
aad
arpl
aaa
xchg
sahf
mov
stos
jl
push
out
lahf
mov
jle
mull
mov
pop
std
loop
iret
jae
adcl
jmp
lret
xor
in
js
mov
lret
add
inc
mov
dec
mov
in
out
int
jno
test
fstpl
xchg
out
cmp
mov
ret
mov
jmp
cwtl
push
das
addr16
in
sbb
inc
cmpsb
ljmp
xor
sub
es
movl
xchg
mov
cmp
outsb
add
mov
in
push
sti
xor
mov
jg
inc
ret
popa
mov
and
lock
mov
test
iret
ds
iret
push
sbb
or
inc
sub
cmp
repnz
std
fs
ja
vpcmpeqb
movsb
rcrl
cld
pop
insb
int
clc
sub
lods
lcall
pushf
push
repnz
cmc
fstl
femms
sub
jnp
les
jbe
rcl
arpl
outsl
push
dec
push
push
adc
in
sub
cmp
pop
adc
out
fnstcw
mov
nop/reserved
adc
jp
inc
loope
sbbb
mov
jo
sub
lods
mov
mov
fcmovbe
aaa
add
scas
dec
in
ljmp
xchg
cmp
lret
les
js
dec
ss
inc
jg
adc
shl
in
scas
mov
mov
repz
inc
and
mov
jg
inc
sub
stos
cld
bound
js
lret
repz
fdivs
ljmp
cmp
aam
dec
cmp
ljmp
cmp
or
or
mov
fdivr
cmpsl
xchg
andb
add
in
jne
clc
mov
cld
pop
adc
mov
roll
mov
dec
roll
push
std
cmp
and
pop
scas
xor
xor
fs
rol
rorl
das
xchg
stc
cwtl
jns
pop
cmp
jle
dec
lcall
test
in
jp
jbe
mov
loope
std
push
push
ds
mov
sbb
lahf
inc
sub
sub
pop
test
cli
aam
mov
mov
ror
adc
aaa
lret
mov
xchg
into
push
or
pop
stc
xor
loopne
mov
adc
dec
dec
mov
test
ljmp
test
mov
jl
xor
pop
and
push
cmc
repz
incb
popa
adc
arpl
pop
lcall
imul
mov
dec
jo
mov
sbb
loopne
pop
push
cs
mov
add
adc
insl
jl
sbb
hlt
mov
lret
rcll
outsb
xchg
jg
fwait
arpl
fwait
mov
add
dec
aad
sbb
jge
out
shll
mov
xor
ret
add
enter
outsl
sbb
loop
sub
loop
cmpl
ret
jb
ja
int3
pop
int
push
xor
mov
inc
xor
push
imul
aam
add
xorl
dec
rorl
leave
mov
xor
pusha
add
movsl
repnz
sbb
and
std
repz
mov
or
inc
jo
inc
imul
aam
jb
test
lock
call
in
cli
pop
xchg
ds
test
aaa
mov
lods
xchg
fstl
pop
call
lea
add
pop
scas
pop
scas
mov
imul
and
mov
lods
dec
insb
mov
add
dec
add
push
push
test
out
movsb
inc
int3
xor
mov
inc
decl
dec
cmc
and
sbb
xchg
mov
in
add
push
stos
fildll
mov
push
dec
xlat
aam
aam
jmp
and
cmc
int3
in
or
xor
mov
cmpsl
jb
cwtl
shlb
inc
sub
jns
push
pushl
mov
and
std
sbb
push
fs
ret
jmp
mov
mov
inc
sub
xor
jo
fildll
icebp
aam
imul
pop
lock
pop
orb
or
sarb
psubd
dec
or
lcall
dec
enter
or
add
push
pop
aaa
inc
fs
pusha
imul
pop
jo
daa
mov
jl
fldt
cmp
inc
pop
icebp
mov
mov
out
iret
lea
push
pop
lcall
xor
pop
sbb
clc
insl
pop
mov
imul
imul
push
push
repnz
aaa
out
rolb
mov
inc
adc
jne
rcr
negl
sbb
and
addr16
jns
aas
add
aad
mov
add
cmp
and
mov
data16
inc
cmp
int3
mov
hlt
mov
idiv
mov
sub
dec
mov
nop
icebp
pop
pop
inc
xchg
adc
cltd
iret
or
aaa
test
rcll
xchg
xchg
ret
cmp
sti
mov
xchg
pop
popl
repz
movsb
leave
stos
mov
fstl
mov
sahf
adc
movsb
popa
test
xchg
fsubrs
adc
call
mov
testl
push
mov
cmp
push
ret
pop
xor
mull
and
nop
dec
mov
xchg
push
mov
lods
iret
or
add
aam
mov
pusha
mov
addr16
in
out
inc
pop
jle
fucom
repz
enter
pop
test
fsts
or
je
mov
leave
outsb
dec
nop
lret
shrb
sub
or
cmp
mov
test
xchg
mov
adc
or
test
cli
mov
sbb
addb
scas
xor
jmp
push
mov
movhlps
sarb
aaa
ja
jae
sub
rclb
frndint
popa
cli
idivl
pusha
imul
sub
in
fidivs
cmp
dec
inc
push
sahf
int
sbb
push
mov
dec
xchg
jecxz
ret
adc
push
push
arpl
sbb
scas
cmovs
ret
mov
mov
jle
push
sarb
dec
into
jno
in
jae
out
xchg
mov
mov
push
xchg
das
mov
cwtl
decb
inc
jle
inc
movsb
and
mov
adc
inc
nop
aaa
fimull
mov
cli
testl
and
mov
cmp
and
lods
not
sub
nop
aaa
rcrl
shrl
cwtl
xchg
fmull
jecxz
push
repnz
pop
fwait
mov
pop
cmp
push
xchg
fiadds
push
push
ja
mov
fsub
mov
pop
xchg
xor
xor
in
ja
xchg
hlt
mov
rcl
mov
iret
ja
push
sbb
adc
cmp
xlat
in
xchg
sub
ret
test
pop
mov
addb
pusha
scas
xchg
push
out
dec
gs
add
lods
in
loop
push
int
lock
mov
cmp
cmpsl
xchg
inc
in
lahf
and
mull
dec
aad
pop
xchg
sbb
push
in
jmp
mov
enter
gs
adc
repz
scas
clc
or
inc
lds
dec
adc
xchg
jae
cli
rorb
pop
stc
xchg
iret
stos
cmc
scas
cmp
push
mov
xchg
repnz
sbbl
or
les
stos
lods
push
and
xor
sbb
add
iret
pop
xchg
cmc
adc
test
mov
jo
in
cmp
dec
je
mov
out
cmpsl
xorl
inc
rcll
stc
mov
lods
inc
jnp
jmp
push
inc
popf
ret
sarl
push
sbb
cmc
test
aam
outsb
scas
lahf
jl
rclb
add
insb
pop
jecxz
mov
fdivs
sub
pop
or
sahf
mov
push
sbb
xor
icebp
adc
push
ljmp
push
lods
repz
sub
adcl
or
mov
stc
jmp
scas
in
mov
dec
inc
xchg
pushf
xor
test
enter
nop
rcrl
movsb
lgs
les
jecxz
fsubs
pop
jg
out
dec
jge
popa
jecxz
and
dec
cmc
add
pop
jmp
movsl
aaa
sti
xchg
bound
fwait
insl
adc
inc
push
dec
push
in
mov
daa
mov
inc
or
dec
iret
mov
mov
and
cwtl
scas
cmp
data16
mov
aam
cs
clc
push
cld
or
lods
ret
jge
je
stos
push
mov
out
mov
rcrl
test
jcxz
and
or
loopne
shr
popa
mov
inc
push
push
pop
mov
xchg
dec
and
cli
mov
ja
mov
pop
out
adc
mov
xchg
and
xchg
pusha
mov
data16
sbb
jns,pn
pushf
dec
fwait
shll
add
icebp
jg
test
outsb
sbb
and
mov
ret
mov
cli
out
sub
mov
mov
out
and
fisttps
cwtl
das
gs
insb
cmp
addr16
push
xor
pop
xor
pop
dec
mov
dec
movsl
ror
imul
jge
lods
repnz
sbb
adc
js
dec
iret
test
xchg
bound
xor
xchg
push
int3
mov
sbb
jmp
xchg
out
push
loopne
push
pop
loopne
lock
add
dec
shll
push
xchg
cs
lret
shrl
out
xchg
cmp
cs
sbb
adc
lock
movsl
xchg
inc
mov
jne
and
jae
scas
sbb
pop
mov
fcmovne
outsb
in
daa
pop
xchg
fsubrl
in
xchg
out
call
adc
push
ds
insl
ds
mov
sbb
pop
cmp
sahf
cmpsl
js
cld
aam
lea
xor
pusha
or
sbbl
das
out
sahf
sarl
stc
push
mov
clc
sti
dec
lahf
cmpb
mov
sbb
jmp
adc
and
notb
scas
mov
test
mul
lds
cmp
xchg
lds
gs
and
cmp
mov
cwtl
out
mov
fiaddl
sub
popa
sahf
cmpsl
pop
jae
sbb
cli
mov
cmp
pop
enter
and
sbb
mov
shrb
dec
or
or
cmp
test
rcll
xchg
inc
add
push
xor
shl
movsb
jge
out
es
cs
mov
outsl
pop
inc
stos
jecxz
popf
loop
lret
mov
mov
pop
in
loop
cmp
fsubrl
in
fnstsw
inc
insl
lcall
dec
loop
mov
nop
push
jge
xchg
fadds
mov
fs
mov
int3
dec
enter
pop
and
out
cwtl
xchg
xchg
mov
mov
lea
xor
mov
and
dec
pop
stos
ds
jmp
lcall
dec
icebp
not
aam
add
mov
cld
mov
sbb
arpl
mov
test
mov
ljmp
adc
pop
lea
pusha
int
fdivs
ljmp
jmp
and
cmpsl
add
xlat
enter
jnp
ljmp
and
mov
rcl
adc
aas
cmp
xchg
lahf
out
mov
pop
push
sub
sub
inc
mov
mov
fbld
mov
jge
faddp
ss
sbb
add
imulb
xchg
jp
pusha
xchg
insb
sbb
and
inc
push
inc
addr16
mov
sub
sbb
pop
das
jg
pop
jmp
xchg
je
fadds
xor
test
idivl
mov
dec
loope
popf
rcrb
popa
movsl
cmp
out
cmc
ret
mov
jb
push
call
mov
sahf
inc
mov
lods
mov
arpl
xchg
dec
lods
mov
inc
xchg
fistpll
mov
sti
cmp
sarl
inc
jne
push
xor
push
cmp
fisttpl
cmp
dec
jnp
insb
scas
sub
aaa
mov
int
insl
imul
mov
fdivr
sahf
test
dec
adc
loope
fsubr
adc
andb
sbb
inc
fldt
add
fbld
test
int3
cmpsb
cmp
push
push
inc
int
insb
test
cmpb
imulb
sub
dec
in
push
and
rolb
out
bound
mov
xchg
cmpsl
jbe
xchg
gs
jns
stos
lods
pop
add
hlt
push
sub
into
push
jae
mull
pop
xor
xchg
mov
call
dec
sar
test
xor
std
scas
pushf
dec
pop
daa
sbb
jl
push
sub
cmp
sbb
cld
cwtl
subl
lcall
int3
cld
out
pop
jle
jae
push
daa
lods
stc
lds
flds
xchg
cld
fisubs
xor
jge
mov
jg
stc
inc
enter
pushf
or
frndint
or
and
jecxz
add
int
lret
mov
es
movsb
push
pop
nopl
sub
ss
or
push
clc
lahf
fistps
lods
int3
and
enter
sarb
jmp
cs
incl
dec
add
fbstp
stc
ret
aaa
dec
dec
ja
push
movsb
fsts
inc
hlt
ret
jp
push
rclb
sti
sub
insl
ret
ds
into
mov
cmp
pop
stos
es
mov
add
and
mov
xor
xor
lahf
rorl
fimuls
addr16
push
loopne
mov
push
inc
in
shrb
sub
ret
and
je
sbb
pop
lds
adc
pop
cmp
ljmp
push
icebp
hlt
mov
enter
js
add
inc
mov
int
hlt
mov
push
mov
dec
adc
cmp
xor
roll
mov
mov
jl
mov
dec
dec
sbb
xlat
pop
lea
or
mov
sbb
popa
shrl
lods
test
shl
int3
add
push
mov
lea
or
test
mov
dec
ret
std
popa
testb
and
les
int3
lds
outsb
jl
jnp
mov
rcll
fcos
dec
sbb
xchg
icebp
inc
aam
int3
mov
ret
hlt
mov
xchg
sahf
pop
jge
pop
loope
notl
push
repz
jae
cltd
mov
jl
mov
jmp
std
ss
insb
imul
pop
flds
lods
or
mulb
sarl
push
pushf
arpl
stos
and
daa
pop
mov
xorb
pop
jge
mov
pop
mov
and
cld
dec
push
sti
xchg
mov
mov
add
cmpb
push
cld
imul
subl
std
subl
push
inc
roll
inc
xchg
les
sbb
imul
outsl
xchg
or
pop
sbb
sbb
jl
mov
in
pop
mov
fstl
add
lret
sub
and
xchg
iret
test
mov
stc
xchg
sbb
bound
sarb
mull
pop
pusha
stos
lods
icebp
rcl
mov
mov
jle
jo
and
es
je
in
dec
mov
mov
lret
push
call
movsl
scas
mov
cmc
push
adc
xchg
dec
sti
ss
call
lock
shlb
filds
add
popa
insl
bound
arpl
pop
mov
mov
scas
push
in
mov
lcall
jmp
inc
xchg
or
mov
mov
lcall
mov
jle
pop
aas
adc
or
test
lock
mov
arpl
or
sahf
xor
notl
jge
add
cld
mov
scas
sahf
pop
mov
inc
cltd
mov
push
mov
fwait
inc
sarb
mov
mov
icebp
or
sbb
cli
mov
or
ret
lods
outsl
sbb
push
in
popa
dec
pop
fsubs
lahf
lret
push
fsts
inc
test
sbb
inc
mov
jg
jae
fistps
inc
adc
js
dec
data16
jae
repnz
dec
xor
cmp
mov
xchg
cs
rorl
sti
mov
aam
dec
cmpl
or
sbb
jp
pusha
push
hlt
push
sub
daa
shrl
push
fnstenv
push
ret
and
sub
cs
std
test
outsw
adc
xchg
repz
enter
shrl
adc
imulb
mov
cltd
adc
cmp
and
or
sub
lods
inc
jmp
xchg
or
dec
jbe
mov
adc
push
inc
jae
cmpsb
add
das
mov
dec
mov
jo
jecxz
or
cmc
add
fsubp
mov
jge
mov
inc
or
lds
fmuls
and
shll
pop
push
popf
xchg
or
inc
sub
mov
mov
pop
pop
pop
pop
sub
popf
sub
sub
jle
es
jecxz
call
pusha
adc
fsubrs
mov
mov
mov
xchg
lahf
add
mov
xchg
xor
mov
cli
fnstsw
dec
or
xchg
orb
mov
mov
jne
int
loop
sub
add
int
or
cmp
and
fimuls
cld
mov
leave
and
fs
mov
mov
fwait
lock
aam
call
lods
push
pop
sbb
push
test
cmp
nop
pop
int
int
arpl
in
pop
popl
and
faddp
stos
push
lcall
mov
cld
adc
idivb
jb
add
cmp
bound
sub
rclb
or
and
movsl
dec
loope
fs
lods
popl
cmp
jle
or
push
mov
mov
mov
jge
add
in
mov
jge
jns
add
push
adc
ljmp
scas
sub
inc
mulb
int3
fcmove
dec
jo
in
insl
daa
add
gs
lods
cli
ret
in
and
pop
xor
in
sub
ss
movsb
jnp
loope
xchg
nop
push
xchg
add
popa
pop
leave
cmpsl
sbb
xchg
sub
inc
addb
or
sbb
dec
lret
or
sbb
and
addr16
pop
hlt
insb
cli
sti
cs
lret
jo
adc
hlt
sbb
adc
and
jno
and
inc
inc
jb
in
sarb
loopne
in
inc
dec
jno
pop
jbe
lods
mulb
jle
shrb
fsts
fs
popf
pop
xchg
fisubs
loopne
fs
fisttpll
sbb
loopne
in
out
add
add
xchg
ret
lcall
leave
mov
mov
loop
and
fst
jge
push
dec
in
aas
mov
leave
incl
jl
enter
mov
sahf
js
das
mov
and
sub
fldcw
and
sub
ljmp
or
jne
out
outsl
push
lret
aam
dec
mov
insb
clc
out
sub
push
push
stos
xor
xor
jb
or
or
and
addr16
mov
mov
arpl
jmp
push
cmp
inc
dec
xor
fdiv
repz
pop
pop
mov
jne
push
ret
xchg
xchg
jno
or
jle
out
pop
testl
sti
sub
or
add
sub
aas
outsb
sub
fbld
push
lock
out
cmp
xlat
clc
cmp
aam
lock
xchg
popf
scas
sub
jno
fcompl
mov
dec
xor
inc
mov
inc
xchg
push
int
fldcw
into
inc
adc
ja
mov
push
mov
pop
test
dec
les
cmpsb
jle
inc
subb
xchg
hlt
test
cmp
dec
and
subb
fwait
or
jl
mov
frstor
push
jl
pushl
push
inc
adc
je
jbe
jecxz
inc
jnp
gs
or
notb
jae
enter
ljmp
pop
mov
dec
leave
icebp
in
call
cmp
sarl
ret
fists
mov
jmp
into
add
sarb
jle
jecxz
or
cmp
add
mov
cwtl
push
js
sub
repnz
mov
cmp
stos
push
add
int
in
dec
out
enter
inc
ja
or
and
dec
xor
nop
or
push
in
adc
fsubl
lahf
inc
idivb
mov
mov
xchg
jl
shlb
push
adc
jb
mov
xor
jo
popf
inc
loopne
rorl
xchg
xchg
repnz
push
rorl
and
fwait
adc
idivl
imul
ljmp
add
movb
ret
sahf
je
or
sub
push
jp
fdivl
in
adc
mov
jl
imul
adc
roll
imulb
icebp
or
sbb
jo
out
inc
fcoms
xor
cld
lret
loopne
ljmp
pop
test
nop
adc
incb
inc
mov
cmpsl
cmp
mov
cld
jbe
and
adc
mov
int
dec
cmpsb
dec
jnp
sarb
push
sub
and
lock
xor
jns
pop
mov
xor
iret
stos
add
fcom
jne
mov
jle
orb
jo
add
pop
fisttpll
push
in
ret
dec
pop
xor
dec
sbb
das
and
mov
jmp
rcll
lea
into
loopne
push
push
mov
lret
mov
mov
pop
mov
loopne
pop
pop
pop
dec
jns
and
adcb
lods
lods
sahf
xchg
pop
aaa
cmp
mov
es
in
test
sub
push
mov
ret
pop
bswap
or
inc
fimuls
dec
jns
movsb
bnd
fnsave
arpl
pop
rcrl
mov
push
mov
outsb
aad
shll
rorl
jb
cmp
in
sbb
fisubl
xor
out
mov
dec
loopne
or
mov
loope
add
bound
mov
xchg
lds
and
fldenv
mov
add
mov
out
sbb
sub
push
xchg
fnstenv
and
out
xchg
lret
jle
sbb
je
inc
out
and
adc
orb
sti
fldenv
ret
mov
inc
dec
icebp
push
mov
dec
shr
pop
mov
je
lock
add
insl
cs
popf
push
ljmp
movsl
xor
lock
in
and
js
bound
xchg
pop
sub
push
sti
xor
inc
jno
pop
push
mov
rcrb
aaa
daa
ja
pop
cmovb
loop
insb
inc
sub
xchg
js
out
mov
xchg
lret
jg
popf
cwtl
outsl
xchg
dec
cmp
dec
jl
dec
lock
sahf
xchg
inc
mov
dec
push
stc
jno
in
cli
adc
pop
xchg
push
adc
xchg
fwait
jg
jecxz
dec
sbb
hlt
mov
add
add
movsb
lods
loop
addr16
push
addl
lock
xor
repnz
and
sbb
int3
lds
mov
mull
dec
sub
push
mov
hlt
adc
pop
mov
jae
mov
or
scas
gs
clc
jmp
push
jg
pop
xchg
aas
lock
xor
hlt
sahf
fnsave
and
insl
pop
xchg
shl
out
add
and
cmp
mov
fbld
sub
stos
or
add
inc
sahf
mov
pop
scas
xchg
ss
push
cmp
scas
inc
pop
sub
enter
xor
mov
adc
ljmp
push
cmpsb
orb
mov
leave
rolb
mov
dec
bound
mov
inc
lahf
cmp
mov
mov
mov
rol
mov
cmpsl
mov
cmpsl
jmp
je
bound
or
mov
add
daa
pop
aas
mov
mov
inc
stos
popf
outsb
outsb
fimull
push
pop
popa
adcb
xchg
inc
mov
or
outsl
pop
mov
inc
fwait
call
idivl
jg
jmp
add
dec
fdivl
shrl
inc
ret
aam
enter
clc
fstl
inc
pop
sub
inc
aaa
gs
fs
xchg
inc
stos
push
xchg
fnsave
jg
rcll
gs
jp
movsb
nop
call
push
fimull
lods
in
jnp
mov
sub
and
lcall
rorl
cmpl
and
sbb
dec
and
xor
jae
inc
ffreep
mov
pop
mov
lock
icebp
push
in
dec
ljmp
jno,pn
xchg
in
mov
stc
add
mov
notl
push
inc
cmp
sub
and
add
xchg
enter
push
pop
insl
cmp
cs
out
jne
test
xchg
jne
lret
lods
add
xor
fadds
pop
xchg
aam
jg
pushf
fnstcw
add
es
fsubrl
fidivrs
xlat
test
hlt
and
fwait
xorl
rcrl
inc
out
repz
cmc
shll
daa
push
add
es
ja
call
adc
mov
sti
inc
scas
pop
adc
xor
out
cmp
test
jno
sub
shrl
sub
pop
cltd
lret
mov
cltd
lods
fwait
cmpsl
imul
or
jp
pop
ret
shlb
jno
cmp
scas
rorl
lods
inc
push
push
fnstsw
pop
fstl
add
insl
jmp
xor
push
cmp
loope
aas
cmc
outsb
mov
in
pop
outsl
pop
test
popa
xor
sbb
imul
roll
push
add
jg
inc
out
cmp
lret
adc
std
sbb
xchg
cmp
cmc
jo
subl
ja
xor
jecxz
xlat
and
pushf
nop
fisttpll
cmp
loopne
push
or
out
or
js
into
testl
das
add
decl
push
lret
adc
fistpl
add
ror
fldt
adc
mov
fidivrl
jp
cmp
jo
cmpsb
test
data16
aas
or
xchg
or
adc
xorl
test
push
cwtl
push
adc
movsl
pushf
xchg
mov
out
mov
loop
in
or
iret
sub
jbe
jnp
out
stc
and
outsl
loopne
sub
cmp
mov
fs
pop
dec
inc
stc
or
push
push
cmp
push
jecxz
popf
ret
insb
pop
loopne
adc
xchg
das
xchg
jne
stos
xchg
sbb
cmp
add
sub
insb
inc
xor
test
imul
insl
mov
mov
sub
insb
ljmp
jno
pop
int3
push
aaa
hlt
jp
mov
out
loop
xchg
cmc
shlb
xor
add
cmpsl
xchg
mov
or
les
xorb
xor
das
lahf
js
pop
cmc
es
in
or
pop
dec
popa
mov
sub
fstps
and
and
bound
dec
or
iret
xor
mov
les
stos
push
cmp
xchg
popf
mov
inc
les
cmp
cmp
pop
xrelease
xorl
jnp
iret
mov
std
sbb
xchg
xchg
push
and
or
sub
push
adc
popf
mov
jns
jecxz
lahf
ficomps
add
push
mov
test
aam
mov
call
sbb
icebp
sarb
lods
xor
xchg
push
sbb
mov
jecxz
stos
dec
fcmovb
jae
into
mov
lods
sub
sbb
outsl
or
pop
sahf
insl
test
enter
and
popa
cwtl
mov
cld
divb
cli
orl
rcl
pop
js
xchg
es
js
movsl
xor
push
fwait
popl
mov
and
fcoms
bound
outsb
cmp
into
jge
cmc
jg
hlt
imul
sub
add
add
pop
xchg
inc
mov
call
jb
xor
mov
push
addr16
cltd
icebp
sub
lret
imul
inc
push
inc
push
dec
mov
cmp
jge
cmp
mov
fdivr
sub
xchg
fists
or
adc
fwait
pushf
rolb
mov
les
sub
mov
sarb
imul
adc
mov
ret
inc
rcr
arpl
cmp
rol
gs
or
loope
out
sbb
jne
jbe
ja
lret
sahf
pmaxsw
jne
mov
xor
dec
jecxz
das
add
ja
jnp
cltd
and
cmova
mov
div
nop
lods
dec
fiadds
xchg
movsl
jl
xchg
loope
xchg
jl
adc
pop
adc
or
ljmp
mov
fsubr
xchg
ljmp
hlt
cltd
inc
subb
popa
xor
or
in
in
add
addb
loopne
sbb
jae
add
cmpb
jbe
xlat
mov
sub
cmp
test
or
sti
idivb
add
sbb
scas
out
lds
repz
add
sub
or
sbb
sbb
jbe
sbb
pushf
dec
imul
inc
test
insl
ret
call
sahf
mov
xchg
adc
nop
xchg
sbb
pop
rcl
leave
cmp
repnz
das
and
ficompl
movsl
inc
push
sar
inc
adc
dec
rcl
sbb
adc
xor
loop
gs
adc
inc
adc
sub
test
adc
cmpsb
data16
sbb
or
or
mov
enter
add
fisttpll
les
neg
mov
into
iret
aas
popf
sbb
cs
sbb
pop
test
xchg
pop
orb
sub
sub
jbe
xchg
cwtl
inc
call
addl
fwait
cli
mov
cltd
cmc
mov
iret
aad
repz
test
imul
push
xchg
dec
mov
inc
daa
dec
outsl
jb
pusha
sbb
cmp
mov
je
fcomi
xchg
out
movsb
mov
adcb
inc
in
or
sub
mov
mov
stc
mov
inc
jmp
shll
push
xorl
jge
or
inc
arpl
pusha
or
shl
dec
mov
and
adc
test
je
sbb
mov
and
repnz
sub
stc
outsb
pop
pop
adc
xor
lods
aaa
xlat
jl
aad
push
es
mov
xor
push
sbb
inc
nop
jle
leave
adc
and
dec
aam
sub
imul
jl
push
repnz
sbb
jae
cltd
mov
dec
adc
dec
jle
test
pop
test
jl
or
mov
dec
pop
or
mov
in
mov
and
loop
sbb
mov
adc
inc
in
cmpsb
adc
pop
lret
movlps
lods
test
jbe
xchg
ss
movsl
jb
cmc
mov
jecxz
fwait
add
nop
push
arpl
mov
jmp
sub
and
mov
imul
sbb
jo
fsubs
jecxz
in
mov
xchg
fs
into
dec
es
inc
mov
add
cwtl
mov
jae
mov
aaa
xor
fists
sarb
sbb
test
cs
fbstp
inc
popf
cmpsb
mov
pop
test
repz
fucom
mov
mov
rolb
mov
xor
icebp
inc
call
add
les
adc
xor
xor
lahf
fcmovb
dec
cmp
andb
mov
inc
roll
repz
sub
dec
outsl
rclb
ja
out
cmpsl
into
or
ja
popf
pop
mov
cli
mov
pop
repnz
sahf
jg
ss
mov
sub
call
out
loop
xor
sahf
sub
das
lock
in
or
outsl
cmp
sub
popf
sbbl
xor
add
bound
push
adc
dec
pop
test
das
fwait
clc
aam
jle
popf
mov
mov
jbe
insl
cmc
adc
addr16
fs
out
and
push
popa
jg
push
mov
pop
lods
pop
outsb
sbb
in
fdivr
inc
cld
pop
or
xchg
in
and
loop
pop
pop
jne
cmc
repz
scas
adcb
fucom
adc
testb
int
test
push
shll
mov
xchg
push
arpl
and
cmp
out
test
ljmp
div
dec
jge
push
and
ss
test
cmp
bound
inc
push
cmp
xor
push
cltd
testb
sub
in
xor
lret
insl
stc
clc
and
or
pushf
aad
inc
dec
sub
pop
fadds
cmovp
cwtl
mov
inc
push
xor
repz
sahf
push
sub
test
and
cmpsb
jb
imul
insl
roll
into
clc
jno
adc
fidivl
idivl
and
stos
xchg
and
loop
mov
mov
rcrb
ficomps
insl
fmuls
push
push
in
push
daa
adc
cmc
hlt
inc
ficoms
stos
push
test
sarl
cmpb
mov
push
cli
add
xor
sub
gs
test
sbb
into
mov
flds
dec
xchg
sbb
ret
icebp
mov
inc
xor
in
fildl
inc
aaa
lock
addr16
fimull
out
and
pop
test
outsl
sti
fwait
inc
ret
cmp
bnd
shlb
scas
or
add
xor
push
dec
pop
pop
adc
add
cmp
into
mov
jnp
mov
push
addr16
aad
das
mov
xchg
leave
sub
jge
sub
mov
fstps
or
sub
push
es
imul
movsl
push
xor
lret
ffree
cltd
xchg
call
cltd
mov
cmp
xchg
pop
shrb
nop
cmc
scas
cwtl
xchg
jl
mov
inc
xchg
cld
mov
sbb
aam
mov
and
pop
mov
pop
mov
icebp
cmp
sbb
and
out
in
jmp
ret
push
or
mov
xor
add
jmp
fucomp
loopne
mov
nop
sbb
scas
xchg
inc
push
cmovbe
mov
xchg
loope
xchg
mov
mov
icebp
fwait
jecxz
cmp
es
jle
mov
shrb
inc
fsts
cmpsl
les
sarb
adc
or
jnp
mov
ret
sbb
xchg
jbe
iret
push
divl
jl
cmpl
fbstp
push
push
or
int3
push
pop
add
je
jl
lods
pop
fstpt
je
and
xchg
ds
dec
cmc
pop
push
pushf
fmuls
adc
pop
pop
pop
shlb
mov
movsl
push
in
push
sbb
call
fwait
int3
ret
popa
xor
add
loop
popf
mov
iret
pop
cmc
pop
push
jl
out
addb
inc
mov
and
mov
repnz
cmp
lcall
dec
push
into
fisubl
xor
mov
xchg
inc
fwait
cmc
and
inc
and
or
mov
dec
shl
fldt
push
sub
and
add
push
add
mov
add
jb
stos
repz
dec
iret
sarb
jp
push
jne
neg
or
test
cwtl
hlt
and
pop
shr
loopne
push
call
xor
getsec
insb
mov
arpl
sbb
fwait
pushf
jno
iret
sub
jmp
jnp
lock
fsts
mov
adc
test
jge
movsb
shrb
outsl
dec
movsl
out
lods
adc
scas
sti
sbb
mov
dec
rclb
pop
lret
out
icebp
ss
pop
shl
add
adc
movsb
loop
inc
mov
xchg
mov
dec
lahf
sub
in
dec
mov
pop
inc
mov
jg
loop
movsl
pop
ret
add
jp
add
push
inc
lret
push
test
xor
sbb
inc
stos
fmuls
icebp
dec
push
push
aas
nop
mov
shr
mov
leave
pop
cmpw
jno
xchg
xchg
sub
add
push
dec
imul
pop
and
jg
inc
fcompl
mov
or
inc
jg
add
push
inc
xchg
add
in
enter
inc
in
push
pop
aas
std
xchg
dec
repnz
imul
jmp
fsubs
shr
stc
popf
mov
and
outsl
sub
inc
or
or
jo
pxor
test
ret
or
rcrl
cli
repnz
dec
xlat
sub
into
repnz
aas
addl
aaa
jbe
data16
mov
icebp
out
push
pop
lods
stos
ds
mov
mov
mov
adc
ret
addr16
pop
outsl
xchg
dec
sub
cmp
jg
into
ret
mov
scas
jb
shr
std
dec
push
inc
call
ss
in
push
pop
pusha
aaa
pop
lods
dec
mov
sbb
dec
push
mulb
loopne
insl
add
mov
andb
inc
and
pusha
out
push
pop
inc
sbb
inc
xor
cmp
jp
bound
jge
jg
ret
sub
and
icebp
and
xchg
test
cmp
jg
fisubl
insl
lods
scas
ret
pusha
xor
cwtl
inc
cmp
add
xchg
lods
daa
inc
cmc
repz
inc
push
lret
rcl
cmpb
fwait
cmc
jnp
icebp
fsts
jb
std
add
xchg
test
insb
imul
fidivrl
and
popf
sbb
sbb
or
sbb
dec
loope
scas
insl
loopne
int3
jb
stc
pop
nop
fdiv
cld
rolb
mul
cmp
jg
sbb
repnz
pusha
adc
shll
or
push
mov
xchg
pop
andb
inc
mov
jge
mov
cltd
pop
sbb
leave
arpl
and
or
mov
xlat
mov
insb
test
and
fidivl
loope
call
movsb
test
sub
dec
xchg
push
out
xchg
mov
pushf
cwtl
mov
xchg
mov
mov
cmpsb
sub
mov
cmp
loope
lret
cld
pop
sahf
xchg
push
shr
or
cmpsl
shl
stc
xchg
outsl
addl
cwtl
rorb
xor
lock
fmull
mov
lods
cmp
push
fdivrs
push
stos
mov
sub
sub
jecxz
pushf
sub
repnz
leave
xchg
inc
and
int
loop
nop
dec
test
sub
test
push
psllw
xlat
pop
out
stc
daa
or
pop
inc
mov
pop
pusha
adc
xchg
cmp
cmp
pusha
inc
mov
mov
and
ljmp
cmp
mov
cmp
push
push
scas
addr16
pop
in
cmpsb
jae
cmp
lods
pop
inc
inc
cltd
ret
add
pop
cmp
sti
test
add
movsb
and
icebp
xchg
lds
push
outsl
inc
xchg
aas
rclb
jno
test
jne
loop
ja
data16
xchg
imul
pop
push
adc
bound
jns
lret
sbb
pop
jb
and
addr16
adc
mov
in
ss
mov
xor
sahf
xor
push
xchg
sub
sub
add
and
mov
jg
pop
and
ja
cmp
mov
xlat
pushf
out
lods
push
sbb
mov
fs
pop
push
lock
cmpsb
sbb
insl
inc
imul
mov
fbstp
mov
lods
mov
imul
rcrl
clc
add
push
jbe
mov
testl
jae
es
js
or
in
dec
cltd
and
pop
test
push
xchg
sahf
or
mov
jmp
xlat
les
lcall
mov
pop
icebp
repnz
mov
ss
ja
in
xor
fmul
in
aad
cmp
add
cld
repz
sbb
fiaddl
inc
inc
in
js
movsb
pushf
cmc
movsl
mov
and
pop
lret
test
mov
pop
je
sbb
in
jmp
pop
ja
fisttps
and
test
addr16
cmp
mov
jns
mov
sub
adc
rcll
push
ljmp
enter
xor
sbb
movsb
pop
sub
mov
mov
dec
out
sbb
adc
js
mov
adc
aad
lahf
pop
sahf
sbb
add
daa
xchg
mov
mov
aam
fiadds
xlat
lea
pushf
sbb
jle
dec
cmp
pop
mov
test
pop
punpcklbw
jp
dec
shrl
nop
pop
cmp
cmpsl
lret
cmp
jl
push
loope
sbb
inc
popf
loope
or
loope
or
in
mov
arpl
xchg
out
lea
push
repnz
add
push
xor
dec
out
enter
sbb
dec
push
xchg
imul
pop
cs
out
inc
pop
inc
mov
pop
mov
out
into
dec
cmp
push
sub
or
cwtl
jp
or
ret
jb
imul
push
lret
stc
shlb
cmpsl
es
nop/reserved
cmpsl
pop
movsb
cmp
loopne
sbb
int
adc
add
push
test
mov
mov
inc
aad
adc
mov
fmull
icebp
inc
ds
inc
sbb
mov
mov
pop
shl
push
lods
push
mov
dec
jp
sbb
lock
jmp
js
xor
sub
enter
xchg
loope
inc
nop
sub
mov
add
jl
jmp
stos
inc
test
adc
jecxz
mov
sbb
loop
gs
ret
mov
scas
mov
fwait
inc
out
movsb
pop
iret
xor
ljmp
mov
in
ss
dec
in
popf
sbb
lret
inc
cwtl
mov
enter
outsl
cmp
fstpl
outsl
imul
inc
popf
add
cmp
jecxz
lock
out
into
adc
jnp
xchg
cmp
mov
xor
shlb
inc
ja
in
enter
test
cmpsb
popf
movsb
pusha
ret
xchg
insl
inc
dec
sub
fcoml
dec
aad
mov
cmp
stc
out
inc
das
sub
sti
xor
pop
in
aam
subl
xchg
and
jg
pop
or
enter
out
mov
movsb
adc
jnp
push
or
inc
cmp
cmpsb
test
xor
das
or
xor
pusha
into
add
push
xorb
push
mov
aas
push
das
lods
mov
loope
adc
sti
sub
dec
mov
xchg
cmpsl
add
std
xchg
push
into
xchg
dec
xchg
test
stos
fldt
sti
imull
add
pop
in
cmp
or
out
leave
jbe
add
mov
pop
jmp
insl
aas
adcl
stc
rcrl
jmp
mov
push
push
dec
cmp
iret
push
xlat
das
sub
or
mov
pushf
int
sbb
mov
sbb
xor
aas
and
stos
test
cmc
mov
aam
repz
adc
dec
lea
inc
iret
mov
sarb
imul
in
fiaddl
insl
orb
inc
pop
lcall
cli
shl
fstpt
cld
pop
jge
or
cmpsl
push
adc
dec
scas
and
or
cmpsl
sbb
xchg
inc
sahf
xlat
dec
mov
push
idivb
and
fdivs
gs
jb
ss
fs
ljmp
mov
mov
out
sarl
sbb
xor
jecxz
jnp
cltd
out
mov
loopne
ds
fists
call
adc
pushf
pop
icebp
sbb
in
fbld
jle
dec
push
ds
mov
ds
dec
pop
out
push
test
and
mov
pusha
xchg
fwait
inc
push
xchg
cmp
mov
mov
mov
leave
mov
cltd
lret
xchg
iret
sub
push
dec
fldenv
jp
jb
sub
jle
and
jle
and
sub
sub
pop
pop
movsb
mov
outsl
subl
and
jecxz
jmp
lock
jno
repz
lods
pop
jge
addl
push
fmul
das
iret
mov
testl
insl
inc
fdivrl
jae
xchg
aaa
dec
call
jecxz
mov
mov
ss
push
outsb
incl
xchg
dec
js
dec
adc
or
dec
mov
mov
jle
push
test
inc
sahf
mov
and
icebp
cmp
cmp
cmp
and
es
outsb
icebp
aas
aaa
call
jb
aam
adcb
push
mov
mov
lods
dec
daa
scas
mov
rolb
mov
mov
xor
popf
mov
add
cmp
shrl
jno
fisubrl
add
inc
mov
xchg
iret
dec
jnp
rcl
adc
movsl
inc
sub
fdivr
aam
shrb
js
in
pop
das
mov
test
sarl
in
int
or
or
sub
sbb
test
xchg
sbb
cmpl
inc
jne
fists
shrb
adc
iret
in
xchg
fwait
push
fdivrl
in
mov
add
pop
popa
mov
xchg
push
cmp
mov
and
push
sub
mov
mov
sub
leave
nop
add
xchg
test
mov
dec
inc
jb
sarl
adc
add
pop
cmp
dec
inc
aam
imul
mov
cli
lret
or
test
inc
hlt
lds
pushf
cmpsl
and
data16
pop
xor
stos
mov
dec
dec
imul
pop
sahf
out
leave
jo
cmp
inc
jo
push
test
insb
jmp
adc
or
sbb
dec
add
mov
lcall
loop
or
push
adc
js
nop
jmp
pushf
icebp
and
sub
push
xchg
pop
inc
cmp
outsl
addr16
or
inc
jmp
add
jns
cli
and
js
pusha
cmp
add
inc
pop
aaa
cmp
inc
in
imulb
mov
lcall
inc
and
push
cmc
cmpsb
dec
insb
pop
cmpsb
fisubl
or
dec
out
lods
xor
sub
ficompl
repz
dec
pop
sub
dec
xor
push
xchg
in
sbb
nop
inc
insb
div
sub
sub
int3
rorl
mov
lods
enter
roll
xchg
lock
cmpsb
lret
cmpsb
jbe
inc
lahf
mov
sbb
ficoml
adc
lahf
cli
cmpsl
xchg
leave
cs
sbb
push
inc
cmp
jg
xchg
xchg
mov
call
cmp
jae
mov
xchg
repz
stos
orb
mov
test
movsl
insb
cltd
test
xchg
inc
adc
mov
lock
push
inc
cwtl
or
or
rorl
nop
lea
dec
push
sbb
jo
fdivrp
clc
faddl
lea
mov
lret
and
out
lahf
pop
arpl
xor
pop
sbb
pop
pop
shll
mov
mov
nop
mov
cld
lret
pusha
bound
rolb
movsb
adc
mov
xlat
dec
pushf
add
jge
fldcw
xor
xchg
daa
xor
mov
das
stos
jae
push
inc
fsubr
sbb
push
fistl
ds
movsl
dec
repz
inc
inc
pusha
fidivrs
xchg
faddl
jl
rol
sub
fisttpll
pushf
cmp
push
adc
dec
inc
cli
jp
jne
pop
shrb
inc
daa
test
cld
adc
movsb
pusha
push
cmp
call
push
push
scas
data16
bound
and
xchg
das
jl
cmp
pop
adcl
add
outsl
cld
add
xchg
adc
mov
mov
idivl
xor
stos
sub
incb
cmp
es
call
xor
push
adc
jp
fistpl
push
and
int3
xor
xor
mov
popf
in
sub
dec
nop
push
daa
pop
pop
cmp
add
scas
mov
lahf
stc
xor
fnstsw
mov
and
mov
xchg
dec
add
mov
push
xor
scas
es
or
lahf
das
pop
jge
xchg
sub
aas
sub
dec
xchg
jae
loope
and
pop
push
call
es
mov
mov
adc
ja
loop
mov
dec
mov
cmp
aad
fcoml
lds
push
ficoml
xchg
leave
pusha
pop
jp
in
add
imul
cmp
sbb
pop
and
into
mov
xor
rol
sarb
adc
orl
push
test
mov
fldenv
inc
cmp
das
sbbl
jae
enter
outsl
mov
es
aad
cmp
sbb
fsubrs
jo
fldenv
pop
and
iret
adc
jp
scas
aam
or
outsb
pop
or
mov
xor
xlat
or
jb
sbbb
lea
movsb
wbinvd
sub
dec
add
fstpt
mov
mov
xchg
push
outsb
test
xchg
insb
test
add
mov
nop
pop
aas
scas
lcall
mov
jno
pusha
cmpsb
out
xor
in
adc
ss
pop
xchg
mov
dec
mov
mov
xchg
cmpsl
out
jecxz
mov
repz
movsb
jae
mov
outsb
xchg
xchg
loopne
jae
rcll
addb
jb
lods
lahf
icebp
cld
jno
aas
fdivrs
mov
push
in
imul
out
push
pop
cltd
and
sbb
add
repnz
and
xchg
notl
rcrl
int3
add
inc
fdivrs
mov
add
rorb
or
shll
inc
mov
sub
xor
int
cltd
les
xor
pop
add
sbb
cmp
stc
pop
lods
pop
xchg
insl
neg
lods
test
push
out
inc
loope,pt
jns
gs
movsl
jo
and
call
jge
or
push
push
cmpsl
test
inc
das
das
test
push
dec
jne
inc
imul
xchg
cltd
sub
lock
aad
sub
cltd
std
add
mov
rcrb
dec
inc
in
in
movsb
dec
pushf
pop
pop
jle
cs
pop
push
test
and
mov
jo
pop
add
dec
inc
out
clc
insb
outsb
adc
pop
jge
lds
rorl
ja
popf
mov
lock
jmp
es
and
or
pushf
arpl
mov
xchg
adc
inc
xchg
and
cmpsb
mov
insb
sub
pop
ss
sub
into
lret
push
jmp
sbb
sbb
int
xchg
in
mov
and
call
add
pusha
aas
dec
leave
push
jp
out
test
sub
jb
stos
scas
cmp
mov
iret
loopne
lret
call
call
push
jnp
setp
int3
xchg
les
push
sbb
arpl
enter
sub
mov
outsl
xchg
int3
xor
sbb
out
push
push
mov
sub
dec
repnz
mov
in
cmp
dec
mov
sbb
mov
mov
add
jg
addr16
mov
cmpsl
iret
out
iret
mov
and
mov
ja
push
jg
pop
orb
cmp
inc
mov
push
out
shll
addr16
les
aad
into
add
mov
lret
mov
mov
repnz
out
sbb
test
push
es
rolb
jecxz
xchg
mov
jnp
xchg
popa
ds
jb
dec
dec
xor
sub
leave
cmp
aam
fdivs
sub
inc
inc
cmp
es
into
mov
scas
dec
inc
add
jbe
mov
test
and
jbe
cmpsl
js
addr16
xchg
xor
inc
push
pop
push
sbbl
pop
es
xchg
xchg
dec
xor
mov
inc
push
push
repz
push
test
mull
xchg
das
cmp
insb
jnp
sbb
sbb
insb
fmulp
mov
sti
xchg
inc
addr16
lea
cmp
jnp
aas
sarl
pop
orb
cmpsb
enter
fcmovnbe
mov
lods
dec
daa
repz
pusha
add
ss
sbb
movsl
cmpsb
mov
dec
addr16
cmp
adc
imul
mov
mov
mov
fdiv
jbe
xchg
int
mov
push
aaa
cmp
dec
push
sbb
jno
ret
arpl
pop
mov
nop
arpl
arpl
xor
inc
sub
jnp
dec
lock
aas
jle
test
jns
lods
xor
jle
or
fcomps
das
pop
data16
xchg
mov
inc
adc
xor
test
call
rorl
vmfunc
xor
cmp
popa
adc
mov
idivl
xlat
push
lea
add
or
mov
movsl
mov
jb
loopne
or
lds
mov
xchg
repnz
xchg
js
iret
mov
jl
mov
pop
inc
xchg
cmp
lds
lahf
ja
es
sbb
fistps
push
mov
pop
pop
test
ja
and
inc
stc
into
adc
push
xor
aad
sbb
inc
roll
sbb
xor
or
outsl
xlat
or
sbb
mov
aad
repz
mov
pop
outsl
in
shrl
mov
not
insl
imul
sub
lds
notl
xchg
jle
in
dec
add
mov
test
aam
sahf
dec
rcrl
sub
xor
jnp
imul
imul
cmp
subb
push
in
dec
adc
psubusb
and
pop
enter
jne
pop
xor
and
cmpsl
lahf
or
daa
mov
rcrl
dec
out
pop
pop
dec
xlat
xor
add
mov
bound
mov
es
and
mov
xor
loop
fimuls
sub
cltd
andb
push
jno
add
dec
pop
pop
mov
or
call
daa
dec
jne
out
mov
push
mov
jmp
scas
and
lods
pusha
adc
jecxz
xchg
push
lock
push
dec
flds
cld
cmpsl
test
pop
cltd
and
pop
stos
ljmp
ret
icebp
bound
pop
sbb
cwtl
mov
cld
sahf
ja
jo
inc
pop
xchg
adc
mov
icebp
mov
loope
std
aas
jmp
xchg
xchg
hlt
leave
cmp
push
lods
cmp
xchg
jae
lock
ret
js
clc
pop
ret
popa
ds
add
sbbl
mov
sub
inc
jo
mov
std
sbb
int
in
mov
jmp
aad
lock
sbb
add
aaa
jns
mov
or
mov
enter
cmpsl
out
push
cmp
lret
andl
repz
pushf
pop
fs
push
mov
mov
aam
mov
jge
cmp
xchg
adc
jl
and
pop
fs
mov
cmp
xchg
jmp
push
jo
popf
adc
sti
dec
adc
and
lods
js
sub
and
rorl
pop
mov
dec
out
stos
mov
inc
jge
lahf
test
jmp
inc
stc
jbe
sbb
mov
push
mov
cmc
out
sbb
mov
sub
rorl
adc
scas
inc
sub
je
xor
sub
shll
and
sti
sub
xchg
adc
lds
fs
push
pusha
scas
cld
inc
out
cltd
xor
int3
icebp
adc
lds
adcl
and
mov
pop
mov
xor
sub
cli
pop
or
push
mov
pop
lret
xlat
push
mov
adc
xor
cmp
out
cmp
mov
sarl
jb
sub
push
push
ljmp
std
xor
adc
xor
xlat
push
and
mov
and
mov
fcmovne
xchg
lock
jne
sub
push
mov
fisttps
cmp
pop
xchg
out
mov
or
push
pop
icebp
arpl
xchg
faddl
ret
inc
sbb
dec
mov
cmpsb
xchg
lret
push
lret
pop
inc
movsb
in
and
sti
xor
adc
outsl
hlt
cmp
cmpsb
andl
clc
fnstsw
xchg
mov
dec
dec
mov
add
lcall
sub
sbb
cmp
cmpsl
aas
jno
or
mov
add
adc
dec
adcb
inc
or
pop
sbb
jecxz
aad
push
and
stos
ja
mov
sub
dec
std
add
mov
insl
mov
xor
add
mov
std
data16
push
lods
sub
adc
bound
mov
cli
push
pusha
test
mov
into
subb
fnsave
sar
into
int
das
lods
into
pop
jle
andl
rcrb
aaa
jge
sbb
inc
lahf
fwait
ret
pand
imul
or
dec
mov
dec
popa
xor
out
push
movsbl
clc
xor
xchg
and
fstpl
cmp
or
and
xchg
mulb
mov
insl
mov
jmp
scas
sbb
in
inc
test
jne
mov
pop
es
loop
imul
mov
repnz
dec
shrl
ljmp
outsl
inc
in
adc
pop
jmp
fisttpll
push
push
xchg
jo
popa
xor
jle
cmpsl
lcall
imul
pushf
mov
push
push
mov
xchg
js
rcl
sub
les
mov
out
sarl
and
call
mov
mov
cmp
jge
stos
rorl
and
and
gs
repz
outsl
pop
xchg
cmp
xchg
sub
push
add
inc
dec
pop
imul
dec
mov
in
cmpsl
lret
gs
fwait
leave
pop
daa
aaa
fidivrs
jge
fsubs
jle
push
idivl
mov
iret
negb
mov
push
enter
jle
rorb
aad
xor
dec
inc
bound
fsubrl
mov
subl
insb
xchg
mov
push
sarl
or
push
adc
popf
je
ljmp
insb
rcll
dec
mov
repnz
das
xlat
jae
xor
dec
ljmp
add
xor
push
scas
xchg
mov
and
js
xor
and
and
pop
and
mov
movsb
push
dec
mov
sub
outsl
pop
adc
outsl
lahf
and
out
dec
adc
aaa
testl
hlt
jae
mov
mov
int
nop
inc
add
call
out
xchg
xchg
inc
lods
mov
gs
sbb
adc
xor
out
inc
mov
xor
cmp
push
js
pop
mov
aad
loop
divb
mov
cwtl
xchg
jle
gs
jae
pop
pop
add
or
stc
ljmp
xor
jb
sarb
leave
mov
nop
jmp
sbb
shrb
pop
gs
ret
sbb
or
dec
pop
sbbl
cwtl
roll
mov
clc
sarl
xchg
out
lahf
xchg
add
sbb
aaa
or
outsb
cmp
test
jge
sub
nop
xor
or
adc
xor
xchg
loopne
fwait
mov
xor
pop
sbb
gs
repnz
rorl
dec
add
popf
enter
cmp
daa
mov
fnstsw
in
imul
aas
out
addr16
sub
imul
cwtl
xor
je
insb
notb
push
fs
lds
test
push
pop
call
stos
insl
stos
xor
push
scas
fildll
cs
mov
xchg
iret
jno
lods
lret
xchg
cmp
rcrl
cmp
mov
or
int3
fldenv
or
dec
pusha
mov
xor
jle
stos
test
sbb
mov
out
xor
std
xor
mov
aaa
call
pushf
icebp
push
cmc
push
jg
test
and
mov
lret
mov
scas
pop
in
jo
add
add
jns
clc
sub
push
push
shr
xchg
dec
adcb
mov
ja
movsl
leave
jmp
es
aaa
cmp
lret
pop
out
jl
jns
mov
adc
jns
lea
sbb
pop
sub
add
nop
and
sub
dec
fidivl
fwait
movsb
or
lods
push
push
stos
and
sub
roll
out
popf
mov
cmpsb
dec
push
mov
shr
dec
add
rolb
fs
aad
jge
movsl
iret
cmp
cmp
jo
sarl
nop
loop
sahf
jp
jecxz
jp
in
fmul
and
sub
sarb
inc
jae
xchg
pop
dec
cmp
push
xchg
mov
movsl
sbb
cmp
add
pop
mov
xor
cmpsb
outsb
aaa
into
pop
xchg
xchg
mov
xchg
adc
std
add
cmpsb
add
in
adc
ret
pop
dec
sbb
sti
add
loop
adc
es
imul
push
and
in
std
into
pop
scas
imul
notl
add
push
or
mov
rorb
in
xor
or
std
or
xorps
int
insl
add
mov
insl
idivl
loopne
leave
jp
ds
xlat
sbb
test
or
dec
lds
test
scas
int
jne
fmulp
je
add
sub
inc
clc
arpl
pusha
adc
xor
dec
jae
rorb
adc
repnz
jmp
adc
xchg
xor
mov
jmp
sub
scas
jl
mov
jl
out
cmp
cmpl
jo
add
sbb
jp
cltd
cmpsb
mov
cmp
cs
movsl
xor
and
and
repz
loop
jge
jle
push
out
mov
test
addr16
cmp
jns
adc
test
dec
jmp
xchg
divb
mov
cwtl
and
push
stos
pop
shlb
sbb
bound
jae
fadds
push
adc
test
push
mov
ds
arpl
push
lods
jle
mov
leave
outsb
cld
mov
mov
lock
cmp
mov
mov
testl
paddb
pop
out
in
push
inc
jl
cmp
mov
mov
outsb
and
sti
movsl
or
dec
data16
add
sbb
adc
jl
or
pop
in
test
roll
lahf
inc
pop
mov
jg
fisubs
xor
pop
xor
pop
and
add
mov
inc
vcomiss
jg
je
mov
lcall
mov
lret
dec
add
shll
pop
sbb
into
add
fucomi
cmp
out
jb
fidivs
out
gs
mov
in
in
cmp
mov
lret
jbe
sub
mov
push
mov
push
nop
cmp
pop
sub
sub
fcmovnu
popf
push
sbb
pop
inc
jp
loopne
loope
cmp
cmp
mov
cmp
outsl
leave
sahf
adcl
mov
sti
ss
int
repnz
mov
pop
adc
sub
add
sbb
pusha
push
loop
lahf
mov
xchg
xchg
push
insb
pop
lea
aad
aam
icebp
into
mov
orb
xor
mov
shlb
dec
jecxz
scas
xchg
in
mov
mov
insl
pusha
adc
dec
add
cs
push
dec
inc
ret
jg
push
xchg
cmpsl
in
xchg
sarl
fst
imul
rcll
add
or
and
jno
outsb
mov
jmp
out
popf
xchg
xor
inc
aas
in
mov
jecxz
xchg
loope
scas
lds
cmp
ljmp
xchg
mov
mov
add
and
xchg
enter
outsb
ret
loop
int
stc
or
mov
pusha
movsl
adc
push
jl
mull
jge
inc
inc
sub
xor
addr16
ljmp
push
mov
sbb
add
push
xor
ds
jo
mov
cmp
lock
outsb
inc
xchg
pop
dec
mov
in
sarl
jno
test
lret
sbb
xor
mov
lret
push
pop
out
pop
jmp
loop
and
inc
sub
sub
jno
in
test
or
int
mov
shlb
mov
out
mov
cmp
cmp
cmp
mov
in
mov
lret
lcall
lret
fwait
jecxz
jno
mov
mov
push
push
fistl
bound
scas
lahf
repnz
push
add
stc
add
dec
dec
arpl
xor
adc
mov
ret
xchg
es
push
mov
jne
daa
iret
jle
scas
dec
notl
jp
negl
adc
js
xchg
lea
and
call
cmp
push
mov
repnz
add
testb
add
xor
pop
jle
aas
lahf
fdivl
jnp
xchg
mov
mov
dec
aaa
cs
pop
ficompl
cmpsb
cmpsb
mov
call
lock
lret
clc
out
scas
and
imul
mov
andb
in
jo
fimuls
mov
rcrb
inc
dec
or
repnz
dec
sbb
sahf
dec
insl
sub
daa
pusha
xchg
sbb
sub
shlb
jb
int3
std
imul
push
or
rcr
je
gs
scas
into
sbbl
das
aad
gs
mov
push
inc
cmp
mov
int
pushf
stos
dec
ret
dec
mov
aaa
gs
cmpsb
cmp
jl
mov
dec
mov
or
and
sbb
les
adc
sub
xor
lock
std
outsl
inc
mov
loopne
stos
loope
inc
pop
lods
adc
ret
and
test
mov
sub
jns
in
les
in
les
dec
iret
test
jecxz
add
pop
adc
js
sub
lret
jno
inc
or
cmc
movsb
ficomps
pop
insb
inc
sub
fistpl
lea
xchg
and
pop
mov
sti
jno
push
divb
incb
mov
scas
out
push
mov
push
and
and
jl
jl
into
xor
jne
push
ret
pop
int
push
repz
ret
xchg
add
pop
jecxz
cli
pop
pop
pusha
mov
xchg
push
cmp
jp
add
fisubrs
rcrl
movsl
mov
pop
mov
push
hlt
shrb
hlt
je
mov
aaa
mov
and
enter
mov
sub
jae
inc
sub
dec
mov
mov
aam
dec
mov
cwtl
outsb
in
mov
cmpsl
pop
fcom
push
out
mov
cmpsb
movsb
jmp
jmp
mov
or
outsb
jo
adc
in
inc
mov
movsb
sub
xchg
gs
mov
adc
dec
and
lea
lock
cltd
add
andl
cwtl
or
insl
xchg
sbb
mov
outsl
cmpsl
dec
push
in
imul
add
xor
sub
mov
sahf
inc
jle
leave
push
iret
xchg
sbb
fisubrs
dec
mov
and
das
mov
leave
pop
pop
out
or
paddd
mov
out
scas
pop
hlt
mov
dec
addb
adcb
shrb
sub
bound
aam
icebp
mov
mov
lock
jae
cli
cmpsb
pop
jb
inc
lock
and
push
scas
xor
dec
sub
cmpsb
scas
movsb
test
pop
pop
mov
dec
test
xor
jecxz
mov
pusha
jp
xchg
je
mov
cmp
inc
sub
icebp
in
cltd
lods
rcr
test
fbld
mov
outsl
repz
inc
jo
mov
mov
leave
iret
jns
call
xor
imul
loop
rorb
cmpsb
cmpsb
inc
pop
cmpsb
cmc
jg
hlt
iret
xchg
xorb
xchg
jo
xorl
rorb
in
pusha
dec
xchg
and
ja
dec
stos
push
and
mov
fdivrl
push
in
shr
jbe
push
hlt
and
cmpsb
lods
push
dec
xor
adc
sbb
sub
test
sbb
lods
pop
out
mov
mov
sbb
dec
cmpb
lods
or
je
je
or
adc
lods
inc
xchg
inc
pop
mov
call
jnp
mov
pushf
mov
jge
mov
lea
and
dec
jl
xorb
pop
aas
das
mov
lods
or
loop
call
cmp
std
dec
xchg
xor
mov
pop
inc
push
imul
sti
sub
scas
or
pop
out
test
cltd
inc
in
xchg
lods
inc
imull
jg
lret
dec
lds
inc
scas
sbb
pop
dec
cmp
popa
nop
call
fdiv
loopne
iret
repnz
mov
mov
inc
adc
cs
std
xchg
es
jno
mov
int3
outsl
pop
mov
jg
in
test
mov
movsb
ret
jp
jae
pop
push
push
jg
dec
add
ret
xor
mov
adc
out
pop
pop
or
and
mov
popa
in
gs
inc
mov
xlat
imul
jge
fsubl
pop
add
add
push
sti
icebp
cmp
icebp
stos
pushf
pop
scas
push
add
mov
pop
and
xchg
shlb
shlb
xor
xlat
add
mov
jg
sub
xchg
mov
push
xor
jb
fcmove
adc
push
push
add
push
inc
xor
lods
sub
pop
fisttps
sub
loope
jno
xchg
pusha
pop
pop
shr
push
sar
pop
daa
test
jg
adc
repz
imul
xchg
jno
ret
mov
dec
push
xchg
jne
in
jge
lock
sub
push
lcall
rcl
into
push
cmp
loop
pop
cmpl
push
push
int3
jno,pt
out
jo
imul
add
and
ret
inc
fucomp
aam
xchg
adc
mov
dec
adc
jle
out
push
jbe
data16
push
or
and
dec
int3
or
mov
push
nop
cmpb
into
xor
pop
mov
push
xorb
sub
aaa
sub
cmpsb
push
in
sub
or
jp
lahf
pop
insb
add
sub
add
nop
loopne
insb
and
push
jo
out
nop
cmc
in
sbb
addb
xchg
repz
mov
adc
clc
fsubrl
mov
cmc
sub
test
int3
clc
aad
sbbb
lods
and
push
or
jno
dec
lods
inc
lahf
daa
xor
dec
lret
xor
or
test
lds
mov
fistps
jg
les
insl
jbe
je
ljmp
xor
lds
add
adc
xor
js
in
cmc
sbbl
loope
and
movsb
popa
jg
mov
idivb
cmp
cpuid
pop
cmp
sbbb
lcall
test
ja
lahf
sub
fwait
cltd
xchg
int3
iret
cmpsb
mov
imul
aad
and
lret
add
lcall
data16
cmpsb
sbb
inc
or
and
xchg
mov
movsb
jmp
xchg
sbb
sahf
mov
faddl
push
daa
dec
stos
pop
mov
repz
pop
sub
pusha
popa
rcrl
pop
popl
pusha
icebp
mov
rorb
push
cli
mov
cmpsl
push
push
inc
or
mov
lret
add
inc
data16
dec
xchg
fimull
dec
jl
jno
outsl
loopne
repz
addr16
jg
sbb
leave
inc
std
daa
pop
xor
cli
adc
mov
pop
push
add
pop
and
sbb
xchg
test
neg
mov
les
dec
mov
dec
cld
jmp
popa
and
cmp
dec
sbb
push
and
dec
mov
pop
out
mov
ljmp
setp
xchg
and
cli
fildll
imul
or
outsb
push
lret
push
jmp
insl
out
cmp
lods
insb
mov
dec
or
jle
std
xchg
pandn
dec
mov
pop
add
push
sbb
fwait
incb
mov
mov
add
jmp
sub
shrl
shr
jle
cmpsb
pop
fsubp
push
cmp
scas
ret
imul
add
outsl
popa
pop
iret
sti
xchg
jne
adc
lret
sbb
fstpl
test
std
daa
in
pop
pop
lcall
pop
incl
sbb
lock
ja
cmc
dec
xor
xchg
mov
xchg
mov
mov
rcll
or
push
repnz
decb
mov
std
fistpll
pop
xlat
adc
mov
add
out
ret
cmp
sahf
cs
imul
sbbb
fcomps
mov
xchg
xchg
or
and
pop
sub
jo
pop
pop
pop
mov
cmp
mov
mov
inc
fbstp
ja
leave
js
sub
popa
seto
out
cmp
cmp
cmp
lcall
test
dec
push
scas
jns
mov
inc
cmp
inc
mov
sub
or
mov
xchg
dec
push
scas
xor
add
rcrb
xchg
push
fwait
add
sti
test
faddl
sahf
pop
stos
fwait
inc
mov
mov
cmp
gs
daa
adc
mov
rorb
pop
mov
lds
xor
inc
mov
mov
movl
inc
or
or
out
or
sarb
inc
add
sbb
test
js
xor
int3
fcmovb
push
xchg
ficomps
push
loope
mov
dec
in
imul
repz
insl
sub
or
lock
std
mov
jmp
xlat
mov
std
repz
cmp
rcrl
pop
rcrl
sbb
push
sbb
test
xchg
adcb
mov
add
fldenv
adc
loopne
pop
push
lcall
jge
push
dec
pop
in
scas
dec
mov
and
pop
sub
mov
repz
push
mov
aam
adc
pop
aam
and
mov
shl
sbb
sbb
dec
push
cmp
cli
sub
stos
sbb
jbe
jl
sbb
cltd
cmp
add
and
jb
lods
adc
aad
dec
push
lds
sub
dec
mov
inc
mov
mov
cmpsb
jg
aas
pushf
mov
repnz
pop
add
jp
mov
dec
popf
aaa
ret
mov
in
mov
xor
or
scas
mov
jne
roll
testl
mov
sub
leave
cli
xchg
sbb
popl
call
add
mov
mov
aad
mov
sub
fadds
jno
sbb
ds
sbb
nop
xchg
aam
sbb
dec
lods
loope
jl
add
ret
cmp
push
mov
pop
jle
cmp
push
lea
inc
jle
daa
add
mov
and
mov
push
dec
jecxz
lret
push
mov
mov
data16
jbe
loopne
sub
hlt
mov
adc
push
fcomps
stos
stc
push
mov
pop
notb
cld
pop
sti
ret
jo
out
shl
fidivs
add
test
xchg
xchg
lahf
nop
and
or
je
jg
sbb
out
scas
addr16
rcr
xchg
fnstsw
cmpsl
xchg
mov
mov
sbb
jecxz
shlb
jo
mov
xlat
insl
popf
negb
push
sarb
iret
mov
repz
into
aaa
push
sub
aas
xchg
mov
push
inc
pop
sbb
in
sbb
lea
lods
dec
sbb
push
or
fisubl
adc
daa
inc
cmp
out
cmp
push
mov
insl
fs
stc
ds
nop
andb
insb
cmp
das
jne
jns
daa
sub
lahf
dec
cmpsb
sub
lret
inc
sub
ljmp
push
int
fsubl
rcl
xor
cmp
ror
mov
pushf
jno
push
jmp
sbb
mov
cmpl
std
fcmovu
or
and
fldlg2
lds
push
xchg
fcoms
mov
mov
adc
jecxz
xlat
add
int
dec
negl
dec
add
cltd
stc
mov
xchg
movsb
sub
nop
jg
mov
lds
and
mov
mov
push
mov
lret
daa
dec
pshufw
out
and
and
lods
loop
mov
subl
cmp
in
pushf
out
mov
rorl
js
shrb
ljmp
adc
inc
pushf
and
xorb
popa
call
or
and
shll
mov
adc
fdivl
mov
lcall
dec
push
data16
or
jbe
cmp
adc
mov
bound
filds
int
xor
fisubs
or
lock
icebp
and
lods
pusha
jae
ds
cmc
das
nop
xchg
int
xlat
sbb
push
cli
xchg
sbb
loope
addr16
inc
inc
cmp
adc
in
icebp
enter
int
xchg
xlat
cmpsl
stos
inc
dec
dec
mov
fcomps
idivb
add
pop
cwtl
pop
cltd
jbe
or
out
dec
das
or
sub
inc
mov
xchg
push
pop
gs
lds
fwait
xchg
enter
fcoml
add
leave
sbb
mov
mov
test
mov
cmc
nop
xchg
push
ljmp
mov
xchg
pop
ret
mov
pop
xchg
insl
xor
les
ds
stos
sbb
and
mov
jmp
push
inc
mov
mov
lret
sbb
mov
shll
test
fucomi
pusha
adc
and
xor
addb
jle
inc
fs
push
push
aam
fidivrs
sbb
or
mov
inc
sahf
mov
or
adc
push
pushf
jle
js
or
test
dec
stc
lds
out
push
push
call
fsubr
outsl
jle
bnd
in
fcompl
dec
jns
mov
mov
cwtl
or
inc
aam
ror
lahf
or
mov
xchg
mov
xchg
iret
mov
fisttpl
movsl
lds
stc
xor
fbld
add
xchg
xor
lahf
mov
adc
push
xor
and
sub
jecxz
arpl
push
xor
in
mov
pop
hlt
in
dec
dec
lret
push
out
outsl
or
and
daa
cmpsl
push
inc
add
pop
push
loope
cli
insl
and
mov
shrl
fstps
ret
aas
lcall
push
jne
out
sbb
fs
in
addr16
jne
int3
cmp
imul
sbb
dec
xchg
pop
sbb
inc
push
or
sub
pop
popf
inc
je
das
mov
fldcw
jb
cltd
sbb
jmp
int3
leave
lahf
jle
and
loope
jle
out
adc
ljmp
rcll
jbe
bound
leave
shrb
sub
and
push
insl
xorl
sbb
pop
sti
and
mov
outsb
popf
mov
sbb
imull
outsl
arpl
das
xchg
stos
rolb
jmp
scas
mov
sbb
in
cld
push
in
sti
xchg
adc
inc
je
dec
jb
lret
inc
mov
inc
xchg
fimull
inc
and
lds
mov
xor
mov
pop
and
mov
mov
cltd
loope
aam
xchg
pusha
mov
sbb
xorl
add
fmuls
shll
sbb
loopne
fs
mov
or
fnstenv
adcl
das
xchg
jae
ficoms
ss
pop
frstpm(287
pop
pop
inc
stc
es
xchg
sub
out
pusha
jge
out
mov
cmpb
pusha
mov
mov
stos
jge
add
add
push
cmc
outsb
xor
sub
xor
test
push
jne
lock
out
pop
cltd
cmp
cmc
jl
mov
fcomps
xchg
mov
cmpsl
dec
dec
mov
add
and
repnz
cmp
mov
mov
mov
xor
lcall
lahf
sbb
call
mov
xor
sbb
fisttpll
pop
subb
fisubrs
xchg
mov
scas
inc
popf
push
pop
es
mov
arpl
arpl
in
adcb
out
push
or
jge
mov
xor
adc
je
and
leave
out
call
pop
jl
test
daa
mov
sarb
jns
stc
jae
lods
popf
pop
outsb
fcom
sub
dec
jno
sbb
push
pop
fwait
xchg
adc
loope
rcrb
mov
inc
jo
sarl
jno
outsl
mov
or
lea
lods
cld
adc
repz
leave
xchg
mov
push
or
mov
stos
jge
xor
rcrb
cmpsb
fimull
pop
jnp
mov
xchg
xchg
add
nop
ss
pop
sar
rcl
dec
cmpsb
push
test
fwait
push
push
or
in
add
dec
xor
push
pop
shrb
adc
mov
icebp
adc
add
rclb
mov
cmp
mov
movsl
loopne
les
out
inc
fisttpll
jo
xchg
std
clc
xorl
and
cmp
clc
add
push
ficoms
lahf
cmp
loope
loopne
mov
mov
push
fs
pop
cli
sarb
jecxz
pop
push
cwtl
ss
test
nop
jne
xor
pop
into
sub
jp
je
xchg
add
cs
aad
inc
cmpsb
push
aaa
xchg
sbb
mov
or
inc
mov
pop
mov
adc
mov
stos
and
add
sub
mov
xor
or
or
and
lret
jns
dec
fsub
call
push
stc
jo
mov
icebp
sarb
stos
daa
daa
add
xchg
jb
mov
arpl
push
sub
sbb
lea
dec
xchg
jns
ja
dec
dec
aad
or
repnz
inc
dec
stc
loopne
std
loop
sbb
pop
adc
int
hlt
cmpsb
leave
mov
cmpsb
mov
mov
jbe
loopne
dec
jge
jb
aas
and
pop
fstl
mov
adc
mov
dec
out
dec
add
arpl
movsl
call
pop
jg
fs
ss
mov
cmp
bound
mov
dec
shr
enter
out
adc
rcrb
shlb
mov
inc
cmp
ret
imul
or
cmp
in
sub
gs
pop
adc
out
or
cmp
or
or
push
daa
mov
into
rcl
inc
test
and
mov
xchg
xor
sub
jge
pop
dec
loop
aas
adc
or
push
xor
out
cmpsl
dec
adc
pop
xor
cmpb
push
jecxz
mov
scas
test
jecxz
adc
pop
shll
cmp
mov
mov
adc
inc
dec
les
je
jmp
loope
int3
mov
jg
movsl
sub
jg
loope
mov
dec
ss
daa
adc
pusha
sbb
cmp
call
clc
loopne
loopne
les
lahf
adc
ja
add
push
mov
dec
dec
pop
out
icebp
jp
jl
int
and
popf
or
sub
mov
or
pusha
daa
push
roll
adc
movsl
in
fdivrs
inc
xchg
adc
pusha
sbb
jnp
pop
and
adc
repz
sub
lret
sbb
mov
sub
or
movsl
repnz
inc
enter
jl
sti
xchg
jo
mov
js
push
aam
dec
cwtl
mov
sbb
sub
add
imul
mov
sub
rorb
pop
jo
mov
xchg
mov
pushf
jnp
or
mov
pop
xchg
ss
xlat
push
rcrl
imul
insb
rolb
cwtl
decl
mov
mov
in
pop
cld
mov
add
jecxz
stos
movsl
cs
pop
sbb
lret
cmp
je
cmp
aam
pop
lods
xor
push
xchg
ffreep
movsb
push
push
mov
inc
inc
push
fisttpll
les
jp
pop
and
cmp
stos
add
nop
popa
out
and
sub
repnz
pop
adc
sub
imul
das
fdiv
push
mov
cmovs
aad
push
xchg
mov
or
mov
repnz
fidivrs
sub
push
lahf
fucom
push
cmp
pop
in
out
stc
clc
fcmovb
add
out
cmp
or
lahf
test
shrl
pop
cwtl
fbstp
adc
pop
adc
shr
cmp
jae
add
ret
int3
jmp
arpl
ljmp
dec
enter
sbb
dec
sbb
aas
fwait
mulb
push
xchg
xor
test
punpckhwd
aaa
and
repnz
push
sbb
ret
adc
xlat
aad
jg
scas
std
adc
leave
push
jno
add
pop
enter
mov
pop
fsubl
hlt
dec
sahf
push
or
adc
dec
push
aad
mov
pop
stos
fst
and
inc
xorl
repnz
pop
movsb
pop
pop
es
test
dec
dec
mov
push
inc
stos
int
sar
push
popa
outsb
mov
pop
jle
test
daa
das
xchg
xor
int3
lods
addr16
mov
push
ret
adc
std
movsl
sub
push
jmp
int3
dec
cmp
std
or
push
cli
mov
lahf
inc
mov
rcrb
or
or
xor
out
fs
pop
andl
jb
hlt
mov
shlb
pop
inc
push
ficomps
and
lods
sub
mov
scas
or
pushf
cmp
xchg
xor
mov
adc
stos
cmp
mov
incl
jne
test
in
test
aam
rcll
aad
insl
xor
lods
divb
sbb
ljmp
sbb
fdivrp
fidivl
xor
mov
inc
je
dec
insb
movsl
in
sub
inc
sub
mov
insl
std
imul
loop
sub
mov
rcrl
ffreep
sbb
and
sub
repnz
xchg
orb
sub
test
push
out
stc
push
jns
inc
mov
xchg
mov
xor
push
jle
pop
loopne
movb
test
xor
ds
xor
push
adc
mov
cmpsl
cmpb
xor
cmc
push
add
pop
ret
mov
mov
fsubs
dec
mov
cs
and
mov
inc
int
inc
roll
xorl
pop
xchg
dec
test
mov
mov
fldl
sub
stc
sub
out
jp
inc
dec
lds
sbb
push
pop
iretw
adcl
sub
test
cmpsb
pushf
pusha
add
aad
cli
std
ss
xor
insb
add
cmp
and
push
sti
push
rolb
sub
aam
mov
mov
mov
jb
sub
pop
mov
mov
mov
nop
lahf
xchg
jo
cmp
popf
sub
stc
add
ret
xchg
iret
or
mov
loop
add
inc
xchg
call
jmp
lret
gs
mov
push
mov
and
ret
js
and
shlb
ds
mov
xor
cwtl
in
dec
xorl
jb
jge
mov
clc
dec
les
add
test
cmp
inc
stos
push
inc
mov
or
xchg
lahf
mov
adc
rsqrtps
rolb
and
lock
cmp
std
stos
out
fidivrs
rorb
dec
jnp
popa
push
or
fs
mov
cwtl
or
int
loopne
push
push
add
sti
imul
outsb
and
cmp
jp
fmull
pusha
inc
sub
jmp
sub
mov
aaa
arpl
rcll
or
aad
ud1
scas
pop
cmpsl
cmpsl
inc
mov
mov
loopne
loopne
add
mov
and
lock
mov
je
outsb
daa
adc
or
sub
inc
sarb
bound
mov
cltd
and
stos
negb
dec
mov
out
jns
jb
pusha
in
repz
mov
sahf
daa
pop
rcll
add
int
jecxz
cltd
faddl
inc
dec
gs
xchg
ljmp
sbb
insl
js
and
xorl
test
add
imul
loop
mov
nop
in
scas
aad
aas
scas
sub
fabs
test
pop
push
push
rorb
push
or
scas
push
lock
sar
cmp
outsb
add
aad
pop
pusha
aad
xchg
sgdtl
fs
inc
cli
movsb
std
xchg
mov
push
aam
outsb
lods
fwait
jg
repz
mov
fwait
dec
scas
out
test
notb
mov
xorb
inc
popa
cltd
and
sub
xor
dec
iret
cmp
pushf
push
pop
cmp
test
pusha
es
xor
xchg
negb
lret
add
popa
pushf
add
dec
imul
dec
push
xor
jp
cltd
dec
or
in
push
adc
movsb
mov
or
mov
in
inc
hlt
loopne
sub
jno
test
and
and
lods
fstl
leave
and
mov
xchg
sbb
fcompl
jmp
std
les
inc
fsubs
scas
mov
mov
inc
push
and
popa
inc
xor
xor
fwait
les
cltd
in
mov
pop
jne
popf
pushf
movsb
xchg
aam
jae
jo
imul
xchg
sub
push
and
add
fidivrl
outsl
xadd
lds
push
pusha
aas
jo
cmc
pop
sub
mov
pslld
xchg
jg
and
cs
enter
pop
inc
jnp
ds
jae
stos
out
repz
fmuls
loop
orl
pop
mov
loopne
out
mov
pop
pop
imul
adc
fidivrs
mov
inc
jno
cltd
cmpsl
cmc
mov
out
imul
shrl
push
das
not
xchg
dec
push
pusha
cmpsl
ret
sub
add
cwtl
mov
lret
dec
mov
add
test
push
fldt
sbb
out
je
cli
mov
fs
shll
leave
mov
mov
pop
lock
icebp
mov
mov
mov
cld
xchg
fbstp
mov
shlb
test
in
pusha
push
lcall
int
pushf
mov
inc
pop
mov
adc
or
lcall
cmp
mov
test
mov
mov
dec
ret
xlat
xchg
jno
aaa
out
test
mov
roll
lahf
jbe
int3
and
xchg
stc
sbb
fs
mov
sub
mov
outsl
sub
mov
cmp
pop
push
pandn
jbe
scas
int
pop
in
and
jmp
inc
jne
pop
or
push
add
cltd
dec
fidivrs
ds
pushf
lcall
imulb
jl
pop
sti
stos
xchg
jb
xor
repnz
or
lds
mov
mov
xchg
fbstp
cmp
fnop
ja
ret
sahf
aaa
and
push
mov
push
push
mov
daa
cltd
sbb
add
jle
xchg
mov
jg
lock
inc
or
cmp
add
and
mov
adc
imul
test
cmovno
dec
pop
mov
sbbl
out
out
sahf
js
xor
es
and
testl
loop
adc
in
xchg
fsubs
pusha
sbb
sbb
jmp
lods
push
adc
sub
cmp
out
jmp
sub
cmp
int3
pop
andl
xchg
ret
and
lock
or
and
clc
add
fildll
arpl
cmp
push
fstpl
cli
je
fiadds
lahf
adc
loopne
std
xlat
mov
mov
gs
out
mov
mov
adc
cmc
cmp
xchg
dec
inc
nop
lahf
fistps
icebp
xor
fbld
test
mov
dec
call
mov
loop
clc
repnz
repz
clc
jmp
pop
es
sub
test
imul
popa
int3
test
jg
movsl
sahf
shl
cld
pop
std
cld
repnz
daa
ficompl
inc
hlt
inc
das
arpl
insb
add
stos
xor
jmp
dec
lods
fld
mov
dec
mov
xchg
add
pop
int
xor
lret
jecxz
je
ret
sbb
arpl
push
adc
inc
test
popf
push
cmp
push
mov
xorb
ret
push
xor
enter
cltd
mov
bound
stos
xchg
rorl
dec
rcl
push
data16
lods
jl
cmp
mov
mov
xchg
xor
sar
mov
mov
pop
stos
aaa
jns
push
inc
adc
std
push
push
fsub
mov
pop
mov
xlat
scas
xchg
in
add
hlt
mov
xor
fs
dec
imul
adc
out
and
and
int
push
sti
push
stos
pop
sub
mov
or
leave
push
pushf
sub
xor
fmulp
push
jae
jb
enter
sbb
add
adc
pop
adc
ja
sbbb
jl
mov
filds
fidivrl
lret
dec
mov
mov
mov
jl
mov
repnz
push
rolb
xor
inc
in
mov
sub
adc
xchg
cld
subb
sbb
inc
add
sti
out
cli
and
add
aaa
add
cwtl
adc
sub
jp
add
lods
adc
cli
add
js
push
push
xlat
sbb
push
xor
pop
lahf
sbb
cmp
jnp
add
into
fbstp
imul
lret
mov
lock
out
push
hlt
sub
sbb
rorl
outsb
jo
addr16
and
lea
xor
ss
ret
pop
push
daa
lods
in
and
lods
mov
pop
cmpsl
pop
pop
into
daa
sbb
xchg
outsb
or
push
pop
xchg
es
mov
add
dec
lahf
insb
jno
lods
das
cmpsl
pop
pop
mov
test
sbb
jbe
cmp
stos
push
mov
adc
jns
mov
aad
in
andb
scas
push
push
das
mov
lahf
daa
loop
pop
in
dec
out
sub
mov
ja
fxch
xchg
push
sbb
inc
sub
pop
fdivrs
cmp
loop
sbb
or
cmc
btr
xchg
stos
cs
jbe
mov
out
xor
into
pop
pinsrw
ljmp
jecxz
mov
into
es
sbb
test
jle
mov
inc
fucom
popa
mov
push
xchg
sbb
pop
jnp
dec
adc
imul
adc
in
stc
lcall
popf
or
mov
jle
pop
mov
loop
jge
jb
and
cmp
xchg
sti
jl
mov
sub
test
pop
in
movsb
fisttpl
aaa
test
jmp
pop
icebp
add
mov
mov
mov
out
pusha
sub
bound
cmpsl
and
inc
dec
mov
jmp
xchg
and
mov
push
mov
inc
test
or
ja
xchg
lcall
pusha
rdmsr
fmull
xchg
shlb
mov
mov
jae
xchg
scas
pop
xor
cmpb
mov
stc
pop
sub
push
shll
jecxz
scas
stc
lcall
jmp
pop
xor
fsubs
out
daa
je
sbbl
adc
push
dec
push
scas
popa
fidivl
scas
popa
push
jb
inc
cmp
cmp
arpl
push
orb
and
sbb
adc
lahf
outsb
vmovlps
ss
mov
lods
jp
mov
cld
movsl
push
jno
push
lcall
test
loop
mov
addl
ds
add
add
jmp
adc
fimuls
push
not
push
xlat
xchg
lret
jbe
cmpb
inc
xor
push
insb
movsb
jl
fwait
dec
orl
jnp
out
adc
fildl
jl
xchg
lods
rol
and
mov
mov
jmp
cmp
shld
adc
cmpsl
mov
jns
icebp
push
jmp
pop
sbb
sbb
and
jae
ffreep
pop
aam
or
and
add
leave
leave
addr16
xor
mov
repz
sarb
cli
add
rclb
leave
jp
add
mov
fsubrs
cmpsb
cltd
jae
jae
popf
jne
jbe
shll
sub
inc
enter
xchg
cmp
mov
pushf
dec
sub
adc
call
outsl
sbb
mov
cwtl
jmp
jle
test
or
jle
stos
sub
jg
das
pusha
inc
repnz
dec
xchg
jo
inc
mov
nop
add
ds
fs
or
jb
jg
cltd
out
sub
mov
daa
cwtl
sub
call
hlt
ret
iret
or
loopne
jp
mov
and
aad
fdivr
std
lret
sbb
fmul
lds
mov
lcall
js
imul
inc
dec
sarb
dec
shlb
inc
sub
ds
ljmp
nop
inc
nop
es
fstpl
mov
mov
mov
adc
pop
and
pushf
xor
sub
cmp
xor
lahf
aas
dec
bound
cmpsl
sub
hlt
dec
lret
data16
mov
imul
or
stos
data16
or
mov
int
addr16
mov
je
pop
in
mov
push
jecxz
push
and
sub
jecxz
inc
mov
jae
xor
out
fidivs
mov
jb
addr16
call
stc
hlt
pop
xchg
lret
aaa
and
adc
jp,pt
sub
stos
mov
sbb
push
mov
lea
pop
ljmp
rep
mov
pop
xor
cltd
pop
fadd
jge
lods
cmc
lcall
xor
jmp
dec
jecxz
shlb
xlat
clc
pop
shlb
gs
stos
stos
xchg
dec
into
mov
mov
ss
adc
push
loopne
lcall
push
sub
dec
lds
out
sbbl
mov
mov
mov
out
push
sub
adc
rcr
inc
push
jl
loop,pn
mov
shll
jle
call
pop
test
pushf
ljmp
pushf
call
in
pop
xlat
sub
aas
or
ficomps
sbb
push
in
jp
mov
pusha
lea
movsb
inc
in
push
push
out
adc
xchg
fimuls
loop
in
xor
inc
roll
in
loop
push
dec
push
ss
adc
pop
movsb
mov
push
dec
push
aam
push
push
and
dec
xor
pop
mov
cmp
jbe
mov
pop
sbb
pop
mov
lock
add
push
lret
sbb
mov
inc
jnp
mov
fsubr
or
mov
testl
jae
mov
std
sahf
fwait
and
into
and
adc
jo
xor
dec
bound
lods
sub
cwtl
in
xchg
repnz
test
cmpsl
mov
and
adc
or
mov
gs
dec
stos
imul
cmc
daa
mov
jns
push
imul
scas
sbbl
ret
cmpsb
push
jle
mov
dec
sbb
lret
mov
inc
and
ret
stc
out
or
xchg
ret
push
movl
nop
adc
mov
stos
ss
xchg
xchg
push
cltd
inc
neg
mov
sti
add
loopne
in
test
test
sub
mov
xchg
out
dec
pop
aam
popf
lods
into
jb
insb
inc
xchg
adc
das
sbb
jno
jmp
push
shl
jmp
das
xor
lret
call
fiadds
mov
mov
add
addl
loope
mov
mov
gs
inc
sub
jge
imulb
jae
dec
mov
jno
sbb
xchg
adc
push
shlb
mov
mov
in
pop
pop
dec
jmp
add
inc
or
sbb
mov
int
push
hlt
pusha
cs
lret
fistl
sbb
cmpsb
fdivs
push
mov
leave
push
leave
js
jecxz
js
xlat
push
pop
mov
xchg
flds
mov
mov
xor
mov
mov
shrl
lret
fiadds
and
ss
jne
xchg
aam
push
inc
mov
rorb
std
scas
cmpsl
push
xor
adc
fsubrs
sub
cmpsl
enter
mov
and
push
inc
dec
ret
add
call
sub
mov
inc
mov
push
scas
fs
std
fpatan
imul
jge
dec
or
xchg
lcall
pop
sbb
xchg
sbb
and
xchg
push
mov
pusha
xchg
in
add
repz
out
enter
cwtl
fildl
pusha
adc
pop
or
cli
imul
dec
or
cmp
cmp
insb
cmp
movb
and
ja
andl
cmp
add
xor
int3
enter
pop
xchg
neg
out
push
sub
lahf
movsl
mov
jge
push
mov
icebp
test
int3
daa
das
inc
push
sub
inc
ds
fwait
cmp
jg
divl
xorl
rorl
aaa
smsw
rcr
int3
fildl
add
lods
sub
mov
in
int3
mov
sbb
lock
inc
push
jo
xor
out
mov
push
cmp
sub
mov
xchg
fcoms
icebp
dec
loopne
addb
sub
sub
mov
mov
adc
sbb
dec
push
popa
cmp
int
mov
jns
leave
xchg
cltd
out
lahf
outsl
push
fildll
mov
rcrl
sahf
dec
push
ss
ljmp
sub
xor
mov
adc
dec
sbb
je
pop
inc
xchg
test
shrl
mov
into
dec
jb
ss
insl
fstpt
mov
dec
icebp
shlb
push
popf
data16
mov
js
mov
cmpsb
or
xor
adc
mov
cmpl
mov
mov
or
int
rclb
mov
les
sbb
xor
push
bound
repnz
mov
fs
xchg
push
mov
mov
in
mov
addl
jb
lret
jns
insb
mov
jnp
int
dec
popa
pop
ja
mov
jnp
lret
xchg
mov
pusha
int3
outsb
out
iret
jg
ffree
mov
les
imul
cwtl
cmpsl
js
pushf
stc
mov
adc
lea
dec
inc
push
xor
add
xchg
stc
insl
inc
push
cmp
cmp
lods
add
flds
ret
jl
adc
jns
and
or
enter
adc
push
inc
cmc
adc
and
aas
xor
cmpl
int3
fwait
das
push
leave
mov
sbb
mov
in
and
mov
sbb
scas
data16
mov
orl
xchg
push
mov
sarl
mov
cmp
ret
cwtl
pop
and
mov
pushl
mov
pop
iret
clc
es
push
ds
cmp
pop
test
xchg
cmp
lea
mov
daa
mov
fst
xchg
dec
cmp
jge,pt
mov
je
mov
es
sar
lds
add
adc
dec
shll
or
dec
dec
dec
enter
cs
or
and
jae
xor
test
fdivrp
cli
sbb
jl
mov
lods
loopne
push
popf
sub
adc
xchg
ss
sub
push
movsl
push
stos
ss
fnsave
arpl
xchg
sbb
mov
shlb
inc
pop
jns
outsl
mov
cmp
or
cmpsl
adc
bound
push
imul
cmp
cmc
test
mov
adc
mov
cs
mov
and
test
aam
fwait
inc
in
push
push
push
dec
xchg
pop
cld
insb
test
cwtl
cltd
js
sub
repz
xor
and
sti
xor
mov
cmc
dec
add
sbb
insb
loopne
add
inc
out
or
test
mov
outsl
cmc
pop
push
sbb
clc
stos
jle
inc
jmp
and
mov
stc
idivb
fdivs
or
es
jb
pop
icebp
and
aas
shlb
mov
nop
fcoml
cmpsb
pushf
fcomps
cltd
aam
sub
mov
mov
mov
scas
xor
repnz
fildll
cmp
jecxz
and
xchg
loope
cmp
int
sbb
xor
icebp
les
mov
lret
outsb
aad
decb
mov
jge
and
lods
ss
notb
movl
adc
mov
add
jg
into
or
pop
sarl
bound
sarl
push
adc
xor
pop
rolb
mov
xchg
inc
jno
mov
popa
and
les
sub
pop
lahf
in
add
mov
mov
mov
xchg
out
aad
out
popf
clc
push
data16
push
mov
jge
or
cmp
sarb
dec
dec
fld1
enter
insl
sti
ret
pop
shlb
addb
and
shrb
mov
lods
dec
int3
xor
sub
loop
loop
xchg
mov
mov
cld
or
inc
imul
adc
push
fldenv
adc
movsl
clc
inc
int
std
adc
pop
sub
outsl
or
mov
mov
out
arpl
push
cmp
sub
stos
test
jl
scas
dec
divl
cmp
ja
inc
lret
push
dec
and
cmc
in
push
mov
mov
add
pushf
iret
or
xchg
scas
and
sub
mov
lods
cmpsb
push
sarl
leave
pop
scas
ja
call
fdivrl
xchg
lods
repnz
arpl
into
cmpl
ret
test
ret
ret
fists
or
pushf
les
outsl
fs
fcompl
out
mov
mov
aaa
adc
push
jo
inc
ret
xorb
mov
testb
sub
outsl
cwtl
ljmp
jge
shll
pop
ror
lea
pcmpgtd
das
lods
dec
shlb
fldt
test
cmc
inc
jg
add
jg
jbe
xor
pop
iret
sub
inc
adc
xchg
sbb
or
cmp
jle
test
pop
test
sbb
ljmp
fsub
insb
fildll
xchg
aam
sub
dec
imulb
out
aas
and
mov
clc
out
pop
dec
in
and
xor
inc
jle
enter
xadd
into
xor
mov
clc
ret
push
sarb
testb
cmp
mov
fadds
xchg
mov
sbb
out
xchg
mov
mov
adc
hlt
lret
and
fildll
sti
jnp
repnz
sbb
clc
rorl
mov
aas
repz
xchg
scas
rorb
stc
in
cmp
jno
lcall
add
dec
dec
push
test
idivl
mov
imul
shl
mov
inc
pushl
movb
in
shrb
dec
push
xchg
movsb
int
in
jp
add
mov
shrb
jg
int
mov
test
jg
in
adc
pop
mov
push
out
push
push
inc
pop
adc
pop
fwait
adc
mov
test
movsb
ret
xchg
or
xchg
and
pushf
mov
or
pushf
mov
cmp
loope
outsl
jp
and
or
imul
xchg
adc
pop
or
add
push
jns
test
xchg
sbb
sub
dec
movsb
sub
lods
enter
adc
lods
mov
popf
js
jae
add
dec
aam
lcall
mov
adc
mov
push
dec
cpuid
adc
shll
aas
jmp
push
mov
lret
jmp
lods
rcrb
cmpsl
test
nop
mov
mov
dec
mov
inc
xchg
xchg
jle
sub
mov
daa
adc
push
int
test
inc
imul
mov
push
hlt
flds
xchg
daa
lcall
lret
std
mov
jno
pop
mov
in
js
mov
or
cmp
cmp
mov
pop
neg
mov
out
xchg
sbb
lret
aam
cmpb
push
jns
mov
outsb
es
iret
add
clc
in
andl
icebp
lret
cmpsb
mov
dec
or
test
fs
movsb
mov
jp
push
mov
mov
adc
push
sbb
les
mov
enter
rol
sti
jno
loopne
pop
orl
mov
jmp
in
outsl
test
lds
aad
mov
mov
sub
ljmp
ret
jl
ret
std
in
xor
sbb
push
mov
mov
jge
xchg
outsl
pop
repnz
dec
xor
mov
and
adc
mov
call
fnsave
cmc
outsb
sub
mov
ret
adc
jbe
mov
arpl
or
sbb
sub
cmp
gs
add
jb
adc
lret
lcall
test
pushl
adc
into
ret
movsl
add
mov
std
mov
push
fwait
mov
mov
push
cmc
addr16
push
and
sbb
dec
rcll
decl
adc
lcall
and
jge
and
jle
shll
dec
ss
popf
push
sbb
sahf
mov
sahf
ja
sbb
aam
outsl
mov
or
jl
dec
jbe
xchg
and
in
xlat
clc
mov
push
add
sub
adc
sub
pop
test
dec
jmp
push
test
ret
test
cmp
inc
mov
test
aaa
fsubs
xor
push
out
cli
or
int3
fwait
jle
rclb
repnz
xchg
std
sub
sbb
cmp
sub
sub
cmc
mov
pusha
pop
mov
jp
nop
lea
insb
push
in
leave
daa
sbb
fs
lock
or
cmpsb
dec
inc
mov
or
cmp
push
push
jmp
lret
enter
or
movsl
clc
cwtl
push
xor
out
jl
jno,pn
adc
pop
jbe
mov
outsb
lret
dec
cmp
dec
jle
out
loope
mov
outsl
int
jge
sbb
pop
repz
pop
mull
cmpsb
xor
and
mov
pop
inc
shr
push
inc
fprem
test
jbe
and
xchg
jns
push
xor
test
mov
jmp
dec
jge
ficoms
mov
dec
xchg
scas
aas
pop
inc
and
cmp
out
xor
insl
mov
jecxz
or
or
pop
in
dec
jno
cli
ja
adc
cmpsl
pop
sub
pop
call
popf
lods
clc
loopne
dec
jl
xchg
imul
daa
mov
aam
sub
sbb
mov
shll
mov
popf
jae
lods
sti
outsl
repnz
jne
mov
add
int
ficoms
outsb
subl
vsqrtps
or
dec
cmp
inc
sub
jp
iret
bound
cmp
jo
shll
enter
fistl
lea
cld
lret
ret
or
daa
js
or
jge
add
dec
ds
pop
daa
insl
rcrb
pop
cmp
shrb
push
popa
xor
mov
aad
mov
js
fldcw
mov
das
stos
jnp
sbb
pop
adc
mov
xor
mov
imul
fcomps
add
sub
daa
jbe
mov
fwait
int
in
and
xor
imul
jg
or
fisubrl
inc
lahf
push
ret
sbb
test
ficoms
xor
data16
cmpsb
insl
repz
jne
insl
out
pushf
out
cwtl
pop
cwtd
dec
pop
aad
pop
std
xor
mov
lds
push
sub
push
cs
sbb
dec
sub
adc
sub
mull
lahf
data16
leave
int3
lret
mov
push
adcb
jmp
cmp
and
mov
mov
push
mov
cmp
inc
aad
and
add
pop
jb
nop
in
scas
sbb
xchg
or
ss
aas
xor
pop
jne
imul
lds
dec
cmpsb
pop
add
ror
inc
push
test
dec
sahf
popl
lods
lea
aas
mov
lret
stos
adc
add
xlat
dec
mov
add
dec
add
cmpsb
jle
jmp
ds
jne
sub
repz
mov
sub
je
stos
pop
jno
inc
mov
xor
mov
adc
repnz
mov
push
das
lcall
add
fists
fdivl
xchg
xchg
push
sbb
push
addr16
adc
sub
rol
or
xchg
xchg
xor
leave
nop
stc
dec
inc
gs
mov
les
mov
push
in
enter
imul
testl
leave
dec
mov
dec
add
jle
jg
bound
nop
dec
cmpsb
push
push
and
mov
out
ljmp
mov
addr16
in
jo
scas
xchg
xchg
in
flds
mov
or
sub
popa
or
or
stos
nop
iret
cld
xchg
cmp
vpsraw
inc
xchg
push
shlb
jnp
movlps
pop
xor
imul
xlat
in
sbb
adc
dec
jg
test
sub
sbb
in
mov
jmp
movsl
aas
pop
loop
jnp
cmp
scas
dec
out
sub
dec
jl
mov
aas
andl
lods
xchg
enter
xlat
and
lret
mov
ja
cmp
out
test
pop
das
xchg
adc
xchg
dec
mov
add
sub
sbb
lcall
roll
das
xchg
pop
xchg
sbb
je
cmp
pushl
and
xor
in
cs
jnp
cmpsb
jno
mov
stc
mov
mov
mov
sub
pop
mov
add
inc
hlt
sub
xor
dec
inc
mov
or
cmp
stos
dec
call
xchg
jnp
mov
mov
sub
mov
in
dec
sti
or
xor
cwtl
xor
fnstenv
xor
aaa
lcall
or
xchg
mov
das
ljmp
imul
pop
jp
xor
jge
xchg
mov
mov
jg
adc
add
mov
and
pop
nop
repz
js
int3
rolb
insb
cmp
pop
iret
jl
rclb
cs
call
push
ljmp
pop
mov
lods
add
pop
pop
scas
xchg
push
inc
into
adc
lahf
les
push
mov
mov
jl
jg
sub
out
sub
pop
fdivl
sbb
mov
cmp
cld
lret
repnz
push
xchg
vcvtpd2dqx
jb
rcll
push
xchg
movsl
xchg
out
insb
stc
push
cmp
cs
xor
loopne
dec
cmp
or
cmp
addb
jmp
push
jb
icebp
sbb
pop
and
pop
rorl
lea
ss
xchg
mov
mov
adc
jae
lock
ss
xor
outsb
jns
push
mov
xchg
hlt
popa
push
pop
mov
push
movl
or
aad
dec
es
dec
inc
rorb
pop
nop
push
push
cmpsl
iret
cmp
ljmp
inc
xor
popf
cmpsl
sarb
mov
inc
jno
test
push
adc
sahf
cltd
mov
mov
pushf
sub
mov
add
js
jne
push
push
les
xor
sbb
ficomps
stos
imul
inc
ja
nop
lods
incb
std
adcl
jne
cli
movsl
add
cmp
pop
ds
shll
jmp
fiadds
test
push
mov
addr16
sarl
test
ret
mov
pop
lods
dec
pop
pop
insl
stc
sub
mov
mov
xlat
cmpsl
mov
dec
xorb
pop
mov
scas
add
stc
push
sub
lds
lret
inc
inc
aad
lods
mov
sbbl
jge
repnz
xorb
stos
dec
lds
push
sbb
jl
sub
popf
pop
and
fadd
dec
adc
jae
cmp
pusha
loope
mov
movb
rolb
shlb
or
fcmovnu
push
pop
or
pop
inc
fwait
jae
cmp
mov
inc
or
push
or
cmpsb
in
pusha
es
lods
cmc
fwait
sub
sbb
aas
cmpsl
outsb
pop
dec
cmp
andl
adc
or
mov
or
jbe
inc
scas
add
cmp
mov
xchg
jbe
loope
mov
xor
mov
jl
sbb
push
jo
fidivs
fs
loope
sub
or
rcrl
outsl
popa
xchg
pop
pop
dec
les
jns
pop
aad
jae
mov
cmp
or
cmp
stos
pop
es
push
add
ss
push
sub
dec
fisttps
adc
aad
cli
lret
add
cmp
cmp
cld
jae
in
arpl
popf
std
mov
scas
add
daa
popf
imul
push
imul
inc
es
and
adc
inc
jl
mov
mov
into
lret
and
dec
pavgb
pop
std
fdivl
and
inc
mov
aam
imull
push
add
pop
hlt
cmp
and
pusha
or
into
add
movsl
xlat
jne
lea
cmp
xchg
stc
lcall
in
xchg
mov
fidivs
call
jno
sub
adc
dec
sub
push
push
pushf
pop
and
push
insl
test
push
into
inc
add
inc
outsb
add
and
cmc
xchg
push
popa
push
bound
stos
xor
aad
xchg
adc
add
mov
push
lds
int3
xchg
push
je
mov
lret
mov
out
mov
in
sub
loop
gs
ds
mov
lds
mov
xchg
xor
mov
mov
fwait
addr16
push
cltd
bound
fs
aas
mov
stc
dec
imul
mov
in
fstpt
mov
clc
lret
faddl
sbb
dec
mov
lea
cwtl
xor
xchg
mov
xchg
enter
in
scas
sbb
fisttps
fidivs
test
xor
or
mov
cmpsl
cmpl
jge
pop
sahf
adc
mov
pop
adc
jb
shl
xchg
pop
xor
cmp
out
mov
pop
arpl
leave
stc
adc
repz
inc
push
scas
faddl
push
sbb
in
sbb
sbbb
pop
inc
lret
push
or
jp
sub
aad
sub
test
or
mov
xor
dec
or
mov
cmp
faddl
jl
out
mov
inc
pop
sbb
sbb
int
sub
pusha
aaa
outsl
ja
push
sbb
fwait
xor
fdivp
push
push
out
test
cmp
mov
cwtl
test
fisubrl
loopne
cmpsl
mov
cmc
and
shl
adc
inc
dec
fmuls
lret
rcrb
mov
sbb
mov
mov
mov
cmp
popa
fsubs
test
xor
mov
xor
add
enter
adcb
fwait
imul
daa
aaa
cmp
jae
xor
cmp
jo
addr16
insl
ret
mov
orl
sub
or
mov
mov
scas
sahf
cmp
jne
hlt
sahf
rorl
mov
and
sub
and
sar
sub
daa
repz
and
pop
test
mov
adc
lock
fwait
sahf
cmp
imul
mov
adc
xor
movsl
push
mov
movsb
in
out
add
push
jge
lret
pop
ljmp
pop
cmp
test
jno
add
mov
aaa
mov
sub
push
and
pop
sub
outsb
mov
les
push
sbb
xor
out
fldt
and
mov
sub
out
pop
test
nop
int
dec
iret
div
xor
test
fbld
insb
or
sub
pop
xor
mov
inc
clc
lds
or
adcb
cmpsb
cmp
fwait
adc
add
jg
sbb
mov
leave
adc
cmp
jle
add
nop
push
push
fcoms
xchg
repnz
lods
mov
push
or
imul
push
sub
cmpsl
lock
lea
lahf
aaa
paddusw
fucomi
sbb
in
jmp
adc
lcall
mov
pop
xor
sbb
jl
add
or
lret
negl
add
les
addb
xor
fistpll
pop
sbb
pop
iret
cmp
add
aaa
int3
hlt
in
subb
adc
sub
adc
push
push
push
shr
xchg
xchg
rclb
mov
dec
outsb
jge
or
or
out
xchg
imul
pop
jo
out
pop
pop
sub
adc
fldcw
inc
add
in
out
leave
lods
or
test
fucom
hlt
cmpsl
mull
push
xchg
out
mov
jbe
cltd
mov
jp
dec
aaa
mov
int
jl
in
in
dec
cmp
imul
add
xchg
inc
add
push
mov
ja
push
jae
cmpb
ret
inc
and
jnp
push
xbegin
popf
ss
inc
shll
dec
add
pop
popa
dec
adc
cltd
sbb
mov
sub
popa
pop
scas
cld
mov
call
inc
scas
ret
das
adc
and
std
imul
daa
push
lret
push
push
fsubrs
fcoml
push
and
insl
push
mov
mov
daa
mov
out
sbb
out
daa
pop
int3
ret
dec
mov
mov
aaa
xchg
in
mov
push
lcall
inc
loopne
push
mov
cmp
and
icebp
or
sub
cltd
add
dec
bndldx
add
sti
lods
push
incb
aas
movsl
int
mov
or
jle
sbbb
and
cmp
and
fwait
mov
push
pop
sub
jp
out
sahf
in
push
call
call
push
inc
xlat
sbbb
movsl
sti
test
frstor
cmp
jp
movsl
mov
stos
dec
ja
sbb
dec
inc
lock
es
out
add
pop
xchg
aaa
imul
add
stc
xlat
mov
pop
fcoml
mov
pop
pop
cltd
hlt
jle
nop
xchg
add
das
nop
ja
mov
dec
hlt
inc
aam
jmp
xchg
lods
ret
mov
rcrl
ret
sub
mov
push
je
mov
mov
bound
ss
test
jno
and
fbld
out
push
mov
xchg
mov
xchg
daa
lahf
fcmovu
mov
inc
mov
repz
sarl
jno
jg
pop
and
adc
shll
ss
push
sbb
insl
or
inc
push
mov
dec
das
call
mov
sbb
mov
mov
inc
or
hlt
mov
lret
cs
sbb
stc
xchg
int3
mov
jne
xchg
or
pop
out
data16
mov
out
xchg
mov
outsl
inc
lock
add
rorb
fabs
push
push
inc
out
lods
pop
cmc
ljmp
jbe
out
iret
stos
xchg
or
int
lods
push
inc
dec
xor
fcomps
jnp
shr
xor
inc
push
lock
aad
mov
jns
cmp
int3
inc
jnp
jl
dec
dec
push
outsl
pop
ds
sbb
jb
pop
push
add
ss
jecxz
popf
mov
adc
lea
cli
dec
lret
movl
push
shll
dec
cmp
inc
add
cli
sub
dec
loope
sub
mov
mov
jle
ret
xor
call
adc
jl
sub
xor
adc
cltd
inc
sub
jb
jg
scas
push
adc
jecxz
out
inc
fisubrs
sbb
cmp
gs
insb
nop
ss
and
maxps
inc
imul
pop
or
les
mov
add
iret
mov
push
mov
test
in
imul
jmp
xchg
loope
inc
mov
scas
mov
cmpsb
repnz
js
adc
call
fnsave
dec
fmulp
inc
loope
pop
jnp
push
mov
int
cmc
jp
push
stos
adc
test
dec
mov
adc
daa
fbld
int
test
sbb
mov
cmp
sbb
clc
ljmp
aaa
dec
push
or
daa
jne
and
push
fmull
cltd
push
imul
int3
addr16
add
or
fcom
pop
cmpsb
inc
mov
and
cmp
jle
adc
gs
in
mov
cmp
pusha
test
mov
pusha
insl
insl
stos
fdivrl
mov
ss
pop
insl
or
or
movsl
pop
add
mov
mov
ja
dec
xorl
enter
shlb
pop
xchg
mov
mov
aas
mov
or
mov
pop
inc
push
jecxz
cmp
test
pop
jno
ljmp
push
jmp
mov
xchg
repnz
idivb
stc
mov
mov
sub
test
stos
cmp
pop
loopne
xchg
pop
add
movlps
jns
jp
mov
sub
fldcw
add
testb
jl
cmp
aad
xchg
insl
cmc
pop
xchg
jmp
push
stos
lret
fwait
insb
test
mov
sub
rcl
and
fldenv
dec
daa
out
mov
jmp
xor
xchg
mov
dec
fisttps
mov
in
repz
xor
scas
mov
mov
mov
lahf
pop
push
dec
sub
jnp
loop
pushf
nop
or
cli
xchg
sbb
mov
push
int3
jge
aas
sti
xor
inc
pusha
in
inc
mov
inc
sub
push
sub
dec
mov
int
ret
faddp
adc
mov
ret
mov
fucom
les
push
or
pop
push
mov
arpl
pusha
push
sub
and
mov
inc
mov
mov
push
inc
push
loopne
push
fisubrl
arpl
sub
or
mov
mov
jge
lahf
and
mov
outsl
popf
aas
dec
daa
adc
insl
xor
jecxz
mov
int3
shl
pop
clc
jnp
imul
sbb
ljmp
std
das
ja
in
shr
mov
mov
aaa
sbb
data16
data16
daa
pop
mov
cmp
jae
jns
mov
jle
sbb
cmc
mov
mov
cltd
and
cltd
testb
dec
add
fcomp
popl
sbb
fisubl
inc
jns
aam
leave
sti
push
les
or
sbb
jae
cld
nop
sub
lret
pusha
imul
cwtd
fs
testb
scas
shlb
jbe
dec
add
pop
jno
ret
push
or
xor
lods
jae
int3
out
push
push
push
sub
mov
mov
dec
cmpsb
lods
fcompl
lret
pushf
lods
daa
mov
pop
test
sub
js
pusha
push
push
add
push
mov
inc
or
aad
repnz
sub
xor
test
mov
movsl
out
rorl
mov
popa
xor
nop
and
lock
mov
in
iret
shll
push
sub
mov
lds
adcb
mov
dec
jb
mov
mov
xor
xor
sbb
cmp
mov
scas
sarb
imul
cmp
ja
jbe
and
icebp
and
pop
popf
lds
out
out
push
mov
xchg
enter
outsb
rclb
fcomp
stos
ret
jl
xor
dec
movsb
jo
dec
fstpt
jmp
lods
and
movsl
mov
jae
repz
repnz
shrl
xor
lret
repz
rclb
and
mov
in
pop
sbb
out
adc
loope
addl
or
sar
jge
test
dec
in
or
or
sub
mov
sbb
iret
xchg
mov
and
adc
arpl
cmp
push
mov
xchg
xchg
xchg
dec
ds
cmp
test
mov
jge
mov
mov
xor
push
and
outsl
pop
mov
sbb
push
lods
loope
mov
fcmovnu
mov
gs
int3
mov
mov
push
sbb
rcll
test
test
xchg
and
sbb
mov
or
testb
mov
mov
inc
adc
scas
and
cmp
sbb
fstl
hlt
popf
mov
pop
leave
dec
mov
or
push
push
dec
int3
cmp
test
mov
fists
push
pop
nop
sbb
idivb
pop
push
rcrb
iret
lea
imul
adc
arpl
loopne
addr16
iret
add
or
xchg
fildl
and
sbb
or
or
mov
inc
xchg
xchg
cmp
sbb
dec
shl
mov
xor
mov
jg
movsl
jge
dec
pop
and
or
xchg
dec
inc
or
imul
mov
fistps
mov
inc
mov
xchg
ret
test
dec
imul
xchg
clc
adc
mov
cmovne
hlt
jp
pop
and
add
aas
imul
jle
jbe,pn
in
sbb
xchg
andb
mov
enter
ja
cmpsb
in
dec
jp
paddusb
cmp
cmpsb
outsb
and
cmp
jle
lea
add
or
arpl
xchg
scas
adc
dec
mov
sar
pushf
add
ljmp
test
cmp
sbb
js
inc
sbb
add
jns
or
push
push
cld
or
aad
nop
imul
mov
mov
mov
mov
push
push
push
push
rcrl
adc
adc
pop
imul
negb
popa
sub
cwtl
ficomps
lahf
cwtl
or
and
orb
sbb
insl
sti
insb
mov
pop
out
and
mov
jp
mov
push
inc
andl
das
and
aad
out
cmpsb
test
fisubs
and
cmp
jg
jne
push
cld
lods
push
sbb
inc
mov
push
outsb
out
nop
pop
bound
outsl
daa
jno
les
dec
cwtl
inc
icebp
mov
mov
jb
sbb
daa
mov
pop
jp
pusha
mov
mov
xchg
outsl
pop
push
stos
outsl
and
movsl
add
mov
mov
xchg
pop
rclb
sbb
inc
mov
sahf
outsl
sbb
and
and
fldcw
mov
mov
popa
xor
adc
xor
pusha
push
sub
sub
out
adc
cs
stos
adc
fsubs
into
les
aaa
out
sub
add
mov
mov
push
lds
xchg
lea
rcrb
roll
das
shll
xorl
rolb
adc
and
fbstp
std
incb
loop
leave
shrb
outsb
mov
cmp
call
out
into
scas
out
fstpl
pop
out
insb
push
int3
ja
imul
mov
leave
jns
sbb
mov
test
adc
pop
xlat
pop
mov
lret
mov
cmp
ret
xor
mov
mov
sbb
fwait
xchg
push
lods
sahf
mov
outsl
xor
das
cltd
jb
mov
nop
cwtl
jmp
push
adc
dec
das
push
ret
les
ret
or
outsl
mov
add
repnz
sub
xchg
fsubrs
ret
cltd
data16
shrl
mov
push
stos
xchg
add
pop
dec
mov
sarb
loopne
imul
ss
out
pusha
repz
sarb
lds
stc
push
out
jno
imulb
mov
inc
sub
xchg
xor
or
xlat
xor
push
dec
scas
sbb
jns
sub
mov
call
scas
jne
in
shll
xor
cltd
bound
add
ret
into
mov
scas
xchg
mov
pop
rcr
pusha
pop
shl
scas
iret
movsl
add
repnz
xor
mov
jge
adc
mov
insl
push
popf
mov
mov
arpl
xor
mov
jbe
int
jae
jo
aam
push
cmp
mov
cmp
fsubs
shlb
jne
cmp
inc
add
xchg
push
ja
push
mov
loope
xchg
sbb
mov
nop
notb
aam
add
mov
inc
paddw
pop
aad
and
sbb
cmp
loop
mov
sub
lock
cmp
in
xor
in
jo
movsl
push
jbe
cmpsb
test
xor
adc
fcoms
loopne
mov
jecxz
xchg
pop
lods
sti
std
or
dec
and
or
sbb
jp
sub
pop
scas
aas
into
int
or
pop
aas
push
in
push
xchg
jae
and
ds
popa
movsb
addr16
hlt
test
jnp
jo
dec
ficompl
sub
push
pop
push
inc
mov
jae
sub
pop
adc
daa
jns
in
insb
mov
fs
inc
lds
test
aad
gs
xlat
pop
stc
jns
dec
stos
jmp
push
add
stos
pop
fsubrl
sarl
xchg
cs
cmp
movsl
cmp
ss
ds
aas
xor
ficompl
movsl
lcall
mov
inc
xor
cmp
push
jbe
mov
sub
popf
popf
lea
cltd
xchg
dec
fsub
xorb
jns
push
xchg
iret
pop
int3
adc
push
push
imul
data16
pusha
bound
shlb
stc
dec
inc
jp
lea
xor
inc
lcall
inc
push
scas
adc
adc
sbb
ja
cmpsb
clc
mov
adc
mov
sbb
in
mov
xchg
pop
mov
cmp
jl
fists
pop
repnz
data16
ja
icebp
mov
push
sub
repz
sub
and
adc
xor
in
cwtl
inc
fs
xor
nopl
fildl
dec
cli
ss
sahf
daa
ret
jns
jp
xchg
out
hlt
xor
sahf
stos
inc
jecxz
or
xchg
scas
fcmovbe
arpl
mov
mov
aad
or
aaa
and
cmp
pop
lock
loop
ja
fdivrs
test
lret
mov
jge
xchg
fcoml
jne
es
movsb
sar
aad
push
add
movsl
rorl
push
jnp
outsl
and
hlt
mov
and
aaa
daa
xor
cmpsl
adc
daa
jo
lret
inc
sbb
xor
jo
or
or
lds
sub
mov
jle
pop
xchg
push
test
jge
adc
pop
xchg
xor
add
sub
fdivs
imul
xor
cs
adc
mov
outsl
lods
lret
adc
fidivl
mov
sbb
rcrl
adc
fdivs
nop
sub
mov
nop
sbb
data16
sub
mov
mov
mov
push
int
jg
fcomps
xor
addr16
repnz
pop
out
xor
into
pusha
pop
aam
sub
adc
inc
add
cli
xor
inc
into
push
push
movaps
fisttps
loopne
aad
cmp
inc
push
out
lock
mov
cmp
mov
or
cs
loop
aas
or
dec
cmp
and
lods
cmp
cld
mov
xor
xor
lea
sub
xorl
mov
mov
cmp
ja
test
js
stc
popa
inc
or
ror
push
arpl
data16
jecxz,pn
cld
nop
cwtl
jbe
mov
inc
mov
adc
adc
cmpb
rorl
inc
mov
daa
pushf
repz
or
sahf
adcb
jnp
dec
push
stos
or
dec
dec
mov
mov
xor
inc
mov
fldt
test
jmp
dec
or
or
sbb
pusha
push
add
orl
and
inc
insl
xor
repz
repz
pop
scas
jl
aas
push
mov
sub
inc
in
outsl
xchg
mov
push
jo
mov
data16
jbe
pop
add
stc
aas
inc
daa
sub
sti
xchg
aam
dec
push
mov
icebp
and
bound
data16
dec
lret
hlt
xor
push
in
in
dec
inc
push
add
call
pop
pop
cmp
test
and
and
inc
pop
loop
cmp
or
pop
rol
mov
std
jl
pop
sbb
xchg
push
pop
loopne
addr16
fwait
aad
inc
adc
push
test
xchg
mov
int
jp
jg
pop
add
shlb
jbe
imul
mov
stc
rcrb
loop
pushl
push
xor
sbb
add
test
testl
pop
pop
mov
mov
sub
push
xchg
movb
cwtl
xor
imul
sbb
fnstsw
scas
dec
inc
pop
lods
xor
add
leave
fdivrs
jmp
mov
push
into
lret
das
cmpsl
adc
ret
frstor
inc
idivl
mov
push
dec
and
push
jnp
rcrb
cmp
cmp
jae
adc
jb
jo
dec
inc
and
insl
cmpsl
fildll
dec
adc
cmpsl
ss
mov
sub
stos
popa
movsb
das
push
shl
sbb
mov
arpl
push
pop
pop
mov
jne
in
mov
sbb
imul
sub
adc
add
test
ret
sbb
pop
cld
cmpsl
mov
jnp
cli
leave
inc
add
mov
cmpsl
cmpsl
jp
cmpb
pop
call
push
fsubrl
les
loopne
lds
repnz
mov
pop
daa
pop
lock
jae
and
enter
aas
xor
push
jns
dec
or
add
stos
dec
push
xor
jge
in
xorb
mov
cli
fsubl
mov
shrl
jb
loop
adc
cmp
add
cmp
leave
adc
test
dec
jl
pop
jno
fimull
add
add
or
lods
test
leave
inc
test
jns
inc
fidivrs
cmpsb
lock
stos
mov
pop
mov
inc
lret
push
mov
sub
in
cmp
add
add
mov
mov
adc
add
sbb
push
lcall
scas
pop
mov
cli
sbb
cld
nop
imul
in
dec
in
xor
and
scas
rclb
push
add
pop
adc
and
or
sbb
imul
dec
push
jecxz
mov
add
add
sub
inc
dec
add
test
cmp
and
popa
jno
push
lret
mov
adc
into
push
imul
adc
nop
dec
insb
pop
and
aad
test
aad
pop
adc
mov
inc
test
jo
jne
int
pop
cmp
and
lock
sbb
mov
jne
loope
sub
push
mov
gs
arpl
fwait
repnz
jbe
pop
add
test
ljmp
jb
or
pop
pop
inc
rcll
push
adc
out
fs
and
jo
pop
roll
push
jno
hlt
scas
faddl
aad
movsl
pusha
xchg
mov
in
jno
mull
fisttpll
out
jge
mov
imul
pop
jno
data16
scas
cmp
cmp
out
pop
xchg
aas
pop
loopne
pop
roll
sub
fisubrl
and
pop
push
xchg
pop
mov
mov
in
mov
cmp
sub
das
push
aam
out
int3
xchg
mov
sahf
je
sbbl
decb
test
xor
cli
in
mov
sub
mov
fbstp
lods
std
mov
std
xor
out
dec
and
sub
inc
movsl
inc
jae
xchg
inc
lcall
xchg
or
es
cs
mov
inc
mov
andb
js
loope
test
cmp
xchg
jbe
and
fimull
lahf
clc
push
pop
je
cmp
jmp
mov
dec
cld
jl
in
shll
sub
and
aam
dec
test
enter
mov
fisttpll
daa
mov
or
gs
jmp
mov
daa
loope
sbb
int3
sub
lock
in
or
add
addr16
or
xchg
xchg
push
hlt
dec
push
jbe
sbb
loope
ja
jg
fsub
adc
sbb
sbb
mov
mov
push
dec
cltd
mov
dec
or
mov
out
or
dec
inc
cltd
fwait
lcall
ja
ss
pop
adc
mov
aas
sub
imul
inc
ror
lret
jle
cld
out
out
xor
cmp
jg
sub
push
push
mov
sub
mov
pop
mov
push
leave
js
sbb
jb
sbb
push
adc
scas
sbbb
sarb
pop
add
mov
mov
fxch
push
adcl
sub
imul
stos
and
inc
int3
loop
add
std
cwtl
inc
idivb
into
fnstenv
sbb
pop
in
dec
mov
pop
or
jbe
mov
cs
dec
xchg
push
mov
cli
jne
lret
pop
xor
xchg
test
push
fmull
loop
mov
aad
adc
jnp
test
je
xor
inc
dec
jp
push
lods
popf
pop
flds
js
mov
es
addr16
or
add
push
xchg
unpckhps
pushf
fcompl
mov
sub
push
test
add
stos
xchg
dec
and
scas
mov
cld
lock
push
xchg
fdivl
pop
and
pop
cmp
popf
aad
cli
push
push
add
cmp
pusha
scas
cmp
clc
jl
and
sub
sbb
in
fwait
adc
and
mov
and
jns
int3
sbb
shrb
or
jmp
push
rclb
inc
push
outsl
xchg
cwtl
lret
imul
data16
mov
push
push
jge
and
dec
ret
jge
mov
push
sbb
inc
loop
xchg
pop
mov
sti
or
cmpsb
in
xchg
loope
sbb
dec
xchg
sub
mov
mov
repnz
pop
jae
fistps
movsb
data16
or
daa
xchg
and
fsubr
jge
ds
adc
push
jecxz
repnz
sub
in
xchg
mov
loop
pop
jmp
andl
sbb
mov
sub
dec
push
sub
loop
xorps
xchg
test
jne
inc
std
inc
dec
lcall
das
and
inc
sbb
fsubrs
test
or
sbb
pop
call
inc
sub
test
sub
les
js
aaa
movsl
pop
int3
cs
jp
or
add
in
sarb
divb
sbb
sub
pop
fstpt
test
pop
or
cs
outsl
adc
call
popa
ja
out
mov
incb
sbb
lcall
out
addl
push
fwait
add
cmp
rcr
loope
cwtl
xchg
int3
call
xchg
das
mov
sbb
dec
call
cmp
dec
jno
aas
xor
pusha
fmuls
scas
mov
test
xchg
xchg
sbb
push
push
idivl
callw
mov
stc
jge
mov
mov
ret
shlb
and
ljmp
xor
push
in
jae
lea
inc
lcall
sbb
mov
scas
mov
inc
mov
cli
or
addr16
xlat
pushf
or
push
jp
sub
out
mov
add
mov
adc
ss
xchg
jbe
jg
pusha
ret
popf
insb
xchg
in
dec
add
jecxz
and
mov
int
or
cltd
jbe
xor
fstl
jae
fcoms
and
xchg
cmp
pop
test
add
das
mov
or
adc
cmpsl
adc
pop
std
sub
jne
cmp
aaa
mov
sub
dec
jge
mov
xchg
aas
cmc
mov
add
fmuls
mov
pop
stc
and
js
in
test
jl
loopne
adc
das
orb
xchg
les
mov
jmp
inc
add
divb
xchg
or
adc
repz
adc
aam
aas
mov
mov
inc
loope
stos
push
cs
idivl
cmp
sti
xchg
mov
cmp
cmp
adc
mov
adc
std
inc
ret
xchg
inc
and
add
jmp
orb
jecxz
sub
push
xchg
push
cmp
push
sub
sbbb
xchg
cmpsl
lret
addr16
push
loop
ret
xor
dec
adc
and
arpl
inc
push
test
adc
push
jnp
jle
lcall
lods
loop
xchg
fildll
dec
push
test
test
jns
pusha
push
cmpsb
in
push
xor
ss
movsl
ret
jne
push
cld
fs
xor
cltd
xchg
xor
sub
push
in
xor
and
jge
mov
in
push
xchg
mov
pop
xchg
cmp
cs
dec
cmpb
jg
jnp
xchg
lods
cmp
loop
sahf
out
sarl
pop
jno
sub
add
sbb
mov
mov
pusha
inc
ret
loopne
mov
dec
pop
pop
fldt
inc
adc
pop
push
push
pop
mov
lock
xor
xrelease
rcl
mov
test
and
divl
push
dec
mov
scas
or
inc
adc
mov
adc
mov
inc
add
add
in
mov
xor
les
sub
pop
pushf
in
push
mov
leave
dec
sub
mov
ror
and
jle
addr16
cmpsl
out
orb
lock
insl
sub
jge
iret
es
mov
mov
icebp
adc
in
gs
pop
scas
ss
movsb
sub
dec
mov
xor
out
sbb
ss
sbbb
sbb
pop
repz
inc
dec
xchg
rcr
daa
lcall
pop
fisttpl
add
jnp
xchg
xor
sbb
xchg
xlat
sarl
jnp
aas
mov
hlt
xchg
and
addr16
cltd
fbstp
int
mov
movsl
cmp
sbb
repz
leave
leave
adc
rorl
pushf
fidivrl
fdivs
aad
jl
mov
in
cli
lahf
mov
jle,pt
std
nop
mov
pop
dec
mov
cmp
std
in
add
sbb
js
xchg
test
loopne
jmp
cmc
jp
lret
mov
scas
push
inc
std
jne
sub
mov
mov
dec
mov
jnp
addr16
stos
mov
jae
test
xchg
and
mov
aam
movsl
nop
test
imul
adc
ss
in
mov
pop
push
or
xor
add
mov
scas
es
shlb
push
cltd
adc
cmp
imul
test
adc
add
repnz
jb
aad
outsl
stos
push
scas
pop
add
fmul
add
adcb
cmpsl
das
mov
outsl
fucomi
adc
mov
lea
jns
bswap
stos
cmp
sub
mov
movb
or
pshufw
sub
fxch
cld
sahf
inc
mov
popf
mov
push
loope
or
pop
mov
cwtl
nop
adc
mov
scas
nop
lret
aaa
jb
cmpsb
nop
and
dec
cli
xchg
arpl
mov
inc
dec
ret
inc
lds
sub
loop
into
jbe
xchg
aaa
inc
fucompp
push
or
adc
jb
jae
fcomps
int
aam
sbbb
test
subl
dec
pop
fldt
out
sub
pop
jno
cmp
fwait
insb
adc
xchg
xchg
fisttps
and
adc
sub
mov
jmp
stos
int3
fwait
xor
pop
shr
inc
nop
iret
pop
dec
xlat
push
push
xor
mov
cmpsl
mov
rolb
xor
add
and
iret
scas
pushl
jo
mov
mov
xchg
mov
and
cltd
cmp
adc
aas
test
imul
ret
mov
xor
jns
iret
push
sub
pop
int3
test
xchg
xchg
and
mov
xchg
mov
inc
push
or
add
aad
imul
xor
test
mov
push
repnz
inc
jmp
dec
mov
and
adc
fs
clc
adc
scas
stos
outsb
repnz
aas
rorl
push
out
cmp
in
cltd
adc
imul
mov
arpl
inc
adc
and
rcrl
inc
pop
divl
cwtl
mov
jns
inc
dec
mov
movsb
idivl
fs
rcll
mov
lahf
push
jle
xor
insl
and
inc
aam
and
mov
orl
sub
xor
and
or
mov
sbb
mov
mov
dec
pusha
shld
mov
push
and
sbb
mov
shrb
pusha
pop
subb
fsubrl
pop
inc
mov
loopne
test
and
leave
ja
mov
jns
add
pop
jecxz
dec
test
pop
dec
out
ret
mov
rcll
cmc
imul
dec
sbb
inc
push
cli
xor
cmp
inc
imul
mov
adc
ret
jge
in
fstps
mov
or
dec
jle
mov
repz
mov
leave
stc
movsl
xor
xor
insb
jl
adc
loope
or
push
cld
mov
fcoml
lcall
adcb
aas
dec
or
xor
jnp
popa
add
inc
hlt
testl
cld
into
push
xor
out
xchg
cli
pop
mov
cwtl
mov
into
cmp
push
hlt
je
nop
or
cmp
shl
dec
push
gs
mov
jo
fdivr
and
push
cmp
out
in
jle
push
jmp
cmpsb
cmp
test
aad
jl
dec
rolb
add
mov
lea
cmp
xchg
push
sbb
mov
leave
sub
pop
lcall
or
xor
dec
push
dec
rorl
outsb
popa
ret
pop
mov
imul
orl
gs
pop
push
push
pop
mov
jno
mov
inc
inc
mov
insb
add
jmp
or
test
fmuls
adc
lods
divl
pop
ja
push
cmp
or
mov
test
dec
arpl
stos
gs
adc
movsb
sub
mov
xor
pop
and
call
mov
loop
xchg
jecxz
add
sbb
cmp
ficoms
jbe
subb
inc
dec
aam
js
popf
mov
hlt
or
lret
test
inc
or
insl
jo
dec
inc
pop
das
sti
xchg
and
das
jg
and
repz
sbb
cmp
xchg
cmp
das
out
cld
mov
xor
sbb
dec
push
jmp
xchg
pop
stos
xor
or
into
mov
adc
lods
xor
xchg
ljmp
out
jmp
sbb
dec
inc
psllq
cmpsl
in
test
mov
dec
js
repz
roll
or
pop
stos
xchg
mov
sub
push
sub
push
orb
or
stos
imul
test
hlt
rcr
sbb
dec
add
leave
push
dec
std
jns
cmp
sub
aas
in
push
repnz
leave
jmp
dec
hlt
xchg
mov
pushl
and
ljmp
sub
xchg
lcall
jne
leave
jecxz
ja
imul
add
addl
pop
sbb
leave
cld
xchg
lods
push
add
push
fdiv
mov
stos
cld
push
mov
mov
mov
pop
jl
mov
jns
push
test
jmp
push
mov
mov
xchg
stos
rol
lahf
bound
push
jge
sub
aaa
fstpt
jo
sub
adc
inc
xor
fs
mov
and
cmpsl
mov
sbb
push
shlb
push
insb
loope
cmpsl
pusha
repz
loopne
iret
pop
iret
in
inc
clc
pop
dec
sub
imul
iret
sub
push
call
cmc
cli
ss
sti
outsb
adc
inc
mov
call
stos
clc
inc
xor
cwtl
adc
cmp
xor
mov
lcall
mov
mov
cmp
adc
stos
sub
dec
xchg
mov
adc
bound
outsb
mov
lret
std
enter
adc
pop
dec
ret
inc
and
dec
jmp
cld
cmp
and
mov
ss
cmp
fstpt
sbb
sbb
pop
xchg
add
mov
das
lea
leave
aas
pop
sbb
test
cltd
sbb
ret
adc
ret
fadds
lahf
dec
or
insl
xor
scas
mov
shlb
mov
movsb
ret
sub
pushf
inc
ljmp
dec
pop
ret
rorb
sarl
sbb
cmp
hlt
out
loope
leave
cmp
xchg
pop
xor
or
push
shll
scas
or
fdivs
and
and
adc
cmp
push
xchg
adc
movb
xchg
add
or
cmpsl
jno
push
int
or
or
xorl
push
cs
dec
popl
mov
fcomp
cmp
in
idivl
and
adc
jae
or
xchg
aam
jp
jne
ss
dec
sub
jecxz
and
add
inc
ss
push
insl
out
fs
cmp
jmp
cld
in
fyl2x
mov
loop
aaa
inc
daa
or
push
arpl
mov
lods
pop
xchg
jg
mov
mov
inc
hlt
xchg
push
mov
repnz
ffreep
subl
push
repz
orl
ret
xchg
push
out
xlat
mov
and
or
in
jl
repz
lods
pop
cmp
sub
xchg
xchg
stos
xchg
add
push
adc
sbb
mov
xorb
out
sub
stos
mov
adc
or
pop
xor
jmp
push
in
push
cli
nop
shlb
push
mov
leave
cmc
lret
adc
aas
aaa
iret
fsubl
jl
and
push
inc
scas
jp
inc
mov
dec
int3
push
lods
call
inc
add
jns
lret
push
push
enter
ffree
stos
xor
jo
add
ror
add
fwait
pop
icebp
pushf
mov
push
inc
iret
xchg
out
cmpsb
mov
scas
loope
xchg
data16
nop
adc
mov
add
mov
sub
xchg
dec
andb
xlat
push
mov
aam
jmp
jle
rorb
or
lock
call
adc
test
int3
cmp
sahf
xor
into
jno
push
jns
movsl
push
out
test
out
and
pop
and
adc
mov
mov
pop
pop
push
sahf
pop
cs
cmp
mov
adc
fdiv
leave
lret
add
jbe
add
or
bnd
jg
ljmp
jmp
inc
adc
xor
stc
inc
andb
mov
mov
lods
scas
adc
mov
push
mov
mov
cld
push
clc
out
es
nop
adc
ljmp
icebp
fld
lret
cmp
adc
mov
adc
inc
mov
outsl
push
sub
add
push
loope
push
mov
arpl
rcll
popa
adc
jb
push
fsts
xor
sbb
and
out
dec
mov
lcall
rorl
popa
or
pushf
rolb
ret
mov
std
enter
jns
int
sub
rolb
sbb
rcl
in
xor
lods
jns
inc
sti
cltd
push
push
cld
add
aaa
push
cli
inc
mov
ss
aad
xorl
mov
mov
lret
std
pop
pop
les
int
push
mov
std
test
mov
mov
out
mov
orl
repnz
pushl
scas
jb
jmp
clc
adc
pop
sub
mov
jg
outsb
subl
add
mov
xchg
jno
or
pop
cwtl
outsb
insl
xlat
sub
mov
inc
xor
jl
paddw
cltd
and
in
sti
pop
cmpsl
int
sahf
cmp
fidivrs
cmp
inc
sub
mov
std
or
adc
popf
out
add
test
repz
mov
cli
sub
mov
out
sub
ds
cmpl
fstl
in
loopne
roll
in
mov
sub
insl
mov
sub
push
jbe
daa
repnz
movsl
loopne
adcb
cmp
das
cmp
out
add
push
xor
ja
push
adc
push
stos
pop
hlt
mov
cwtl
scas
test
jo
into
loope
in
xlat
lcall
jge
lods
dec
imul
jg
adc
and
pop
jecxz
push
enter
jp
leave
scas
ffreep
lods
push
aaa
or
cmp
xchg
test
sbb
xlat
cmpsb
jecxz
add
fdiv
xor
push
jo
dec
and
aas
mov
ror
and
aad
shll
loopne
sahf
jne
outsb
adc
inc
sbb
cmp
mov
iret
xor
or
and
arpl
adc
jbe
ror
bound
sbb
cmp
filds
mov
sub
jl
call
push
jge
pop
sub
rclb
stc
mov
pop
adcb
add
shll
mov
mov
add
jecxz
cmp
sbb
jae
rorb
pushf
in
lods
imul
sub
xchg
cmp
mov
xlat
ljmp
push
fnsave
stos
mov
std
aad
shl
xchg
xchg
insl
cmp
lcall
aas
cmp
dec
repnz
test
arpl
pop
or
clc
xchg
lods
inc
inc
push
loop
fucomp
test
cwtl
push
push
pop
sti
shrl
xchg
pop
cmpsl
dec
add
out
dec
lds
sbb
or
jle
mov
test
movsb
jno
sbb
js
mov
shrb
sbb
pop
jne
sbb
mov
push
mov
imul
xor
mov
mov
cmp
arpl
jle
xor
mov
adc
adc
adc
add
dec
pop
popl
or
cmpl
and
adc
es
dec
mov
xor
pop
jns
xchg
leave
rcrl
mov
pop
xchg
repnz
dec
fwait
in
sub
sub
adc
mov
fimull
rclb
jnp
sbb
lret
xchg
mov
jae
inc
add
pop
iret
lds
mov
fwait
sub
sub
sbb
iret
scas
divl
push
movsl
and
movsl
pop
mov
mov
jmp
gs
adc
fdivrp
dec
mov
lds
frstor
adc
loope
jmp
mov
pop
xlat
xchg
stos
aam
in
or
clc
enter
xchg
aaa
iret
push
mov
andb
ret
fs
or
scas
jno
xchg
jns
push
cs
adc
cmpsb
div
mov
testl
imulb
xchg
mov
cmp
dec
cmp
or
int3
lcall
imul
adc
stc
int
cmp
adc
nop
fistl
jns
sub
push
xchg
push
cmp
add
xchg
arpl
pop
adc
sahf
mov
pop
xchg
es
push
add
inc
push
adc
outsl
or
movsl
nop
test
fistps
jb
pop
dec
and
out
cmp
push
mov
sub
lret
test
mov
movsb
mov
jl
hlt
jmp
inc
cli
pop
hlt
movsb
in
pop
ja
sub
sarb
push
inc
les
pop
and
insl
jns
mov
bound
gs
sahf
or
and
jb
pushf
and
sbb
loop
push
lea
pop
test
inc
cltd
add
add
dec
dec
ds
pop
mov
and
aas
cmp
or
push
push
add
xor
cmpsl
addl
cwtl
in
or
jle
mov
cmpsl
inc
or
dec
mov
pop
xor
dec
push
mov
lock
test
mov
lods
scas
stos
aad
lds
stc
mov
jns
lret
sbb
pushf
and
push
test
test
mov
cld
fisttps
test
shll
mov
jecxz
mov
orb
pop
pop
jge
hlt
fwait
mov
add
mov
adcl
lods
imul
sub
aaa
dec
mov
or
dec
lds
xchg
or
mov
bound
int
test
gs
add
popa
inc
fisttpll
nop
pop
pop
jp
push
lods
and
in
daa
lds
mov
jle
mov
daa
stc
and
sub
sbbl
jmp
push
mov
or
jecxz
rorb
int3
mov
mov
repnz
stc
mov
aam
push
adc
insl
stc
faddl
jmp
or
cmp
adc
hlt
outsl
shrb
addl
dec
mov
mov
jecxz
mov
and
shrb
jmp
xchg
mov
push
and
cmp
xorl
xchg
mov
inc
imul
or
aas
mov
jne
adc
add
jg
cmp
mov
fnsetpm(287
das
xchg
loope
pop
mov
xchg
or
nop
xchg
icebp
cmpsb
ds
xor
adc
pop
dec
in
sbb
jns
cltd
push
sub
addr16
dec
mov
xlat
cmp
movsl
ja
jns
xchg
jecxz
bound
ret
xor
das
into
adc
cmpsl
or
jne
inc
push
sub
lods
sbb
popa
mov
sbb
clc
mov
ror
pop
repz
inc
xchg
add
out
out
sbb
mov
mov
out
and
ret
xchg
enter
cmp
dec
jae
or
insb
xchg
add
xchg
ret
insb
cmp
add
push
push
xlat
int3
lret
and
inc
sub
dec
and
cmp
mov
je
inc
adc
pop
inc
shll
ret
xor
jle
and
mov
data16
mov
int3
outsl
jp
jmp
dec
lahf
rcrl
stc
lret
lock
jae
sub
test
loope
fchs
or
jl
aas
xor
and
ss
cmp
mov
jl
lcall
sub
inc
loopne
mov
mov
jle
test
stc
jno
jl
push
add
mov
mov
lods
loopne
loopne
imull
pop
cmc
and
xor
mov
icebp
sbb
xor
or
insl
dec
pop
int
js
ds
nop
or
inc
inc
fmull
push
lods
mov
popa
mov
xchg
adc
push
cli
dec
imul
dec
or
orl
std
push
jg
pop
pop
ret
rcl
xchg
push
xchg
mov
mov
dec
bound
ror
movsb
in
pop
and
and
sahf
imul
mov
mov
aas
or
pop
xchg
popa
in
pop
sbb
or
sbb
adc
pop
mov
push
push
sub
mov
stos
mov
push
and
add
xor
sbb
xor
mov
xor
fisubrs
int
mov
mov
imul
push
call
rcll
mov
jmp
popf
mov
in
mov
hlt
mov
pop
aad
pop
mov
mov
mov
sub
shrl
xor
adc
repz
loopne
pop
fadd
rcr
jo
movb
hlt
xor
inc
negb
stc
stos
movb
adc
jns
xchg
mov
add
repnz
xlat
and
mov
ret
jnp
pop
push
cmpl
mov
sub
outsb
movb
push
sbb
jne
outsl
mov
or
sti
enter
mov
lea
push
pop
sbb
dec
iret
outsl
subb
cmp
jae
lcall
push
outsb
sbb
adc
roll
push
mov
dec
jge
test
jno
and
das
imulb
xchg
es
xor
mov
jmp
jp
lcall
xor
xchg
adc
fcomi
xor
js
push
insb
stos
xor
cmp
mov
insl
cmp
mov
jno
mov
and
in
pop
lret
idivb
push
and
add
fidivrs
push
ds
fcomp
push
cmp
imul
mov
adc
pusha
pop
sarb
lods
fsubrs
in
xchg
cwtl
add
xor
fsubp
cmc
cwtl
pop
imul
adc
ja
xchg
das
xor
call
xlat
push
jne
outsl
scas
sbb
in
sub
pusha
mov
shlb
mov
add
in
xor
adc
in
stos
aaa
into
bound
sbb
jge
sbbb
ljmp
stos
mov
xchg
call
movsl
cmp
sub
dec
outsb
push
xchg
inc
lea
jbe
jp
movsb
scas
cltd
enter
or
sbb
mov
fistl
data16
mov
pop
push
outsl
mov
inc
sbb
inc
or
pop
lret
repz
hlt
jge
mov
and
pushl
jle
cmpsl
jge
cmp
fdivrs
adc
pop
aaa
mov
jb
mov
out
jecxz
jno
cmc
out
and
mov
jbe
or
scas
or
out
push
jle
bound
orb
push
cltd
jge
cli
and
lcall
xor
scas
pop
or
and
rcrl
aam
cmp
andb
xor
ret
adc
test
sub
xchg
sbb
pusha
cmp
sbb
aas
push
dec
push
xchg
xchg
imull
popa
jmp
imul
xorl
push
mov
in
andb
push
arpl
and
in
jge
xchg
shrb
push
ret
nop
aam
jo
xchg
call
push
dec
jns
mov
into
shl
xchg
inc
sbb
and
and
mov
inc
add
and
daa
shrl
cmp
lahf
add
and
pop
std
sub
add
loope
outsl
inc
popf
jg
dec
jb
popf
mov
sbb
lods
mov
cmp
push
nop
or
mov
xchg
loopne
rcrl
sub
outsb
in
stc
jge
js
or
in
mov
test
sahf
cmp
outsb
das
call
and
arpl
in
push
nop
stos
push
test
loopne
lods
pop
mov
mov
out
clc
fdivrl
and
sar
cmp
insb
jo
cmp
dec
cmp
or
data16
lahf
sbb
mov
int3
pop
ss
mov
inc
add
mov
pop
and
pop
cmp
push
test
movzwl
sub
test
gs
lods
icebp
arpl
push
popa
gs
mov
add
into
jg
lds
push
push
fisubrs
mov
and
mulps
test
adcl
dec
sub
or
sub
movsb
jb
sub
pop
mov
mov
imull
or
cwtl
test
xchg
aam
and
shlb
popa
andb
or
sbb
jle
cmp
dec
inc
lock
adc
je
xchg
jne
aad
lahf
dec
push
xor
jmp
lods
and
leave
repz
repz
mov
cs
rorb
mov
mov
into
jmp
push
scas
dec
orb
xor
xchg
push
scas
xor
das
jl
data16
sbb
pushf
pop
lods
popa
mov
cmovp
ss
jno
push
je
dec
pop
and
in
movsl
in
sbbl
push
jge
push
mov
dec
jmp
scas
sbb
into
stos
push
in
jo
push
add
nop
dec
mov
mov
cwtl
hlt
add
testb
xchg
sbb
insb
dec
in
sub
imul
scas
add
mov
mov
jl
js
inc
pop
xchg
testb
icebp
and
in
scas
push
add
pushl
in
arpl
push
mov
shl
add
inc
and
mov
xchg
sbb
sbb
jmp
mov
xor
in
inc
sub
cmp
in
test
inc
arpl
mov
mov
pusha
ja
jg
and
jb
jmp
sbb
lret
es
in
inc
sub
mov
xor
add
adc
push
sahf
dec
lcall
call
pop
fsubs
sti
lods
pop
fsubrl
js
scas
inc
outsl
loope
notb
pop
arpl
imul
out
sbb
xchg
pop
jae
jecxz
cli
push
push
pushf
mov
pop
mov
push
or
dec
jge
test
push
movsl
mov
enter
jl
and
push
pop
es
add
pop
lds
push
adc
aam
leave
jb
in
jno
mov
push
pop
inc
es
lds
imul
xchg
add
scas
bound
outsb
iret
adc
loop
adc
inc
test
in
mov
rorb
pusha
lcall
inc
loopne
lahf
xor
cmp
rcrb
data16
push
or
fnstenv
in
sub
sti
xor
sub
lret
push
ja
movsb
xchg
fwait
jmp
xchg
fisubrl
aam
mov
pop
push
shl
outsl
dec
cmp
or
mov
inc
dec
dec
mov
or
out
scas
mov
sbb
sbb
sbb
lret
repnz
sbb
cs
cvtdq2ps
adc
ljmp
sub
push
mov
push
or
shr
mov
out
jae
fisubrs
cli
push
cltd
icebp
das
mov
idivl
int3
pop
dec
cmp
xchg
sbb
xor
mov
ret
sbb
lcall
dec
xor
sbb
out
stos
sbbl
imul
lock
sar
inc
mov
mov
inc
jmp
push
xor
xlat
and
cli
mov
pop
bnd
stos
jl
dec
outsl
movsb
xchg
mov
adc
jo
ss
xchg
add
pop
iret
sub
xor
jecxz
sbb
dec
dec
or
test
xchg
xor
adc
shl
xchg
xchg
idivb
xor
cli
rolb
lods
jle
jle
add
cmp
out
xchg
pop
or
int
inc
aam
and
out
dec
in
push
jb
pop
pop
fstps
jmp
mov
in
stos
std
xor
cmp
cmp
das
or
mov
mov
jl
rolb
inc
jnp
jl
and
inc
mov
pop
je
sub
in
fdivl
push
xorl
xlat
testb
aaa
rorl
aaa
pop
or
sti
mov
cld
dec
inc
jns
ret
lahf
pop
jl
sahf
scas
int
mov
mov
popa
dec
xchg
mov
xlat
and
xchg
push
ret
add
xlat
sub
or
call
or
xor
lret
je
inc
push
jmp
int
les
movsb
fldenv
jmp
mov
mov
fdivr
imul
adc
sti
ret
cmpsl
mov
mov
jle
stos
mov
mov
stc
xor
jp
rol
xchg
aad
jecxz
cmpsl
mov
jnp
add
jl
inc
sub
mov
addr16
pop
cmpsl
cmpsl
pop
dec
jnp
mov
movsb
loopne
lea
and
loop
dec
push
or
mov
pop
in
stos
mov
xchg
push
sbb
movsl
lret
aad
and
dec
dec
xchg
les
xchg
sbb
repz
dec
pop
adc
testb
insb
std
test
add
arpl
ss
mov
mov
dec
lcall
push
fisubrl
out
sub
ja
shrb
adc
nop
pop
jg
stc
add
dec
ja
mov
mov
aad
xor
adc
mov
inc
sub
dec
cmpsl
loope
jp
aaa
pop
ja
xor
js
xchg
cwtl
loope
pop
ficomps
pop
adc
jecxz
fsub
lock
and
and
movsb
mov
sub
push
or
xchg
ljmp
arpl
mov
inc
gs
xor
mov
sub
inc
loop
out
push
jns
lret
xor
inc
or
cmpsb
or
adc
cmp
out
cmpsl
std
cmp
shrl
cmp
pop
xchg
into
adc
std
and
iret
sub
ret
jg
adc
roll
mov
dec
sbb
adc
dec
iret
loope
add
addr16
pusha
ret
test
je
decb
or
mov
adc
push
rcr
fstps
mov
mov
adc
testl
sbb
rorb
xchg
mov
pop
inc
pop
enter
mov
lret
cmpsl
mov
xchg
mov
cmp
cmpsb
nop
mov
xchg
ret
out
xchg
mov
or
mov
aam
cmp
sbb
daa
and
sbb
pop
les
push
leave
andb
dec
push
inc
inc
add
sbb
cmp
push
out
fildll
xchg
add
jl
movsl
xor
mov
hlt
mov
out
iret
mov
outsb
in
ret
inc
and
mov
popf
mov
fadds
jge
and
xchg
jl
jb
lods
fnsave
mov
lock
xor
je
imul
mov
mov
insb
mov
mov
fsubrs
stc
repz
jno
lods
jne
mov
xchg
or
ret
jb
dec
jg
mov
fcomps
xchg
sub
mov
scas
cwtl
push
mov
imul
dec
sarl
dec
sub
dec
imul
inc
insl
nop
dec
add
or
xchg
insb
rcrb
adc
in
pop
push
subl
mov
jae
jae
ret
inc
in
lret
dec
jmp
or
push
push
fidivrs
sub
pop
xor
clc
xor
test
mov
in
sbb
test
pop
xor
push
sbb
or
dec
mov
in
imul
inc
pop
push
fadd
loope
jg
mov
cwtl
les
in
mov
ljmp
xchg
mov
lcall
aam
mov
jecxz
std
dec
je
js
mov
push
mov
cmp
mov
iret
fnsave
addr16
movsl
popa
daa
mov
lret
iret
push
int
in
aam
dec
sub
push
mov
mov
cs
sbb
sarl
adc
fdiv
loop
test
cmp
mov
int3
repnz
cmp
subb
add
adc
loope
movsb
lcall
push
sub
aas
cmovbe
and
into
adc
add
mov
dec
fisttps
aaa
mov
pop
popa
jl
push
test
push
dec
fs
fs
das
sbb
dec
sub
adc
push
sar
mov
fwait
rcr
mov
je
imul
repnz
add
arpl
adcl
push
clc
jbe
stos
movhps
add
test
out
arpl
imulb
mov
dec
xor
out
pushf
ja
push
orl
pop
imul
mov
sub
inc
ja
mov
in
add
insb
stos
lods
mov
adc
jno
or
lahf
loope
and
sti
out
inc
jle
dec
xchg
neg
cwtl
dec
shrb
outsb
xorl
pop
enter
jg
insl
es
or
arpl
pop
mov
pop
mov
out
int
loope
cmpsb
pop
dec
inc
aaa
scas
adc
add
jg
xchg
movsb
lods
mov
jne
jmp
sbb
fcomps
fwait
ljmp
inc
jmp
stc
sub
ja
adc
iret
jno
das
xchg
sbb
enter
cmp
mov
xchg
mov
std
pop
cmc
jle
scas
lcall
lcall
hlt
pop
lods
sbb
out
insl
mov
rcr
push
aad
cmp
shll
pop
loope
pop
aaa
repnz
push
daa
out
xchg
xchg
cs
mov
insb
cmp
cmp
fdiv
jns
xchg
leave
in
aad
daa
mov
out
jbe
stos
push
sbb
outsb
sbb
cmp
pop
les
cld
adc
insl
add
fwait
nop
dec
fisubrl
ljmp
pop
loope
orl
xor
daa
cwtl
mov
or
xlat
push
dec
bound
popf
loop
jne
stc
xchg
lock
int
js
pop
ret
decl
arpl
or
aam
mov
sub
push
and
fmuls
rolb
out
jnp
jge
push
in
mov
add
sbb
jecxz
xlat
mov
enter
sub
adc
xlat
dec
push
movsb
insl
push
sbb
cmp
les
in
pop
mov
xchg
sbb
xchg
mov
pushf
xchg
ljmp
jmp
clc
pop
pushf
or
dec
cmp
and
pop
leave
loopne
adc
in
add
mov
mov
jle
jecxz
dec
rcrl
fmulp
ret
je
imul
lret
adc
xchg
dec
pusha
pushf
lea
jecxz
rcrb
push
mov
lahf
fstl
dec
mov
pop
mov
incl
xor
and
add
mov
sbb
gs
outsl
xchg
cmp
jo
jno
in
jno
in
or
dec
icebp
addr16
mov
popf
insl
mov
out
sti
aaa
xor
call
or
decl
inc
inc
pop
xchg
mov
popf
push
adc
inc
jo
pop
mov
push
pop
cmpsb
int3
clc
clc
sarl
pop
dec
outsl
daa
pop
or
cld
push
mov
insb
sahf
jp
pop
lods
lds
das
jmp
sti
into
xor
je
fwait
push
mov
mov
inc
mov
in
inc
rolb
insl
and
addr16
seto
iret
mov
sbbl
inc
mov
pop
rclb
pop
jnp
mov
jo
mov
xchg
sbb
cld
add
dec
pop
mov
mov
call
jecxz
add
ficoml
push
mov
mov
xchg
xlat
mov
cmpxchg
shl
mov
jo
rclb
and
lcall
lahf
push
mov
mov
sbb
mov
pop
adc
fcoml
es
jno
insl
mov
add
out
negl
xorb
imul
add
xlat
mov
adc
rclb
testb
insb
dec
mov
in
mov
sbb
lds
fcoms
pop
sub
xchg
cmpsb
std
aaa
push
das
mov
push
pushf
dec
cmp
jl
xlat
cli
jl
sbb
mov
mov
test
mov
xor
lret
inc
cmp
aas
insb
mov
push
push
out
mov
loope
sub
push
fists
aam
dec
ret
xchg
flds
loop
add
nop
imul
and
add
mov
jmp
inc
sbb
push
mov
mov
xchg
inc
inc
fimuls
je
int3
outsl
loope
and
ja
pop
sbb
add
pop
adc
adc
notb
repnz
push
push
mov
divb
push
mov
lcall
cmp
into
clc
pop
adc
add
adc
dec
jae
addr16
fdiv
and
pop
shl
into
fdivl
addb
add
mov
xchg
ss
and
insb
mov
mov
jns
lods
mov
xchg
sub
jae
adc
adc
bound
icebp
decl
in
lock
fmulp
ficoms
push
mov
inc
lahf
pop
cmp
lock
xchg
or
gs
adc
jo
stc
cmp
mov
cwtl
sbb
and
xor
rorb
in
or
xchg
pop
call
int
xor
adc
sub
push
jae
mov
jge
adc
sar
imul
jne
aam
pop
mov
and
in
add
das
mov
add
add
adc
icebp
into
jg
and
cltd
lds
adc
hlt
mov
xor
jbe
dec
out
aad
sub
mov
mov
xchg
notl
mov
lret
xor
sahf
mov
cltd
pop
mov
lods
cmp
push
popa
loopne
fisttpl
lahf
iret
enter
pop
and
add
jo
scas
aad
dec
es
and
xchg
mov
fcmovnu
xor
xchg
pop
adc
mov
adc
push
int
scas
mov
and
ret
pop
aad
aaa
lret
pop
daa
in
pop
js
daa
push
int3
scas
cli
nop
dec
ret
cltd
jp
das
movsb
mov
adc
mov
jb
cmc
pop
fdivrs
sarb
xor
or
mov
cmpsb
cmp
ja
aam
leave
jae
icebp
test
das
gs
test
fcomip
fdivl
mov
inc
rclb
or
ss
mov
lret
in
movsb
jnp
fidivrs
scas
in
ljmp
mov
or
js
push
mov
pop
jle
leave
jmp
jne
daa
jle
cs
scas
es
or
ret
lret
fs
mov
cmc
ds
test
aaa
push
mov
pop
lahf
pop
movsl
xor
call
sbb
mov
sub
aaa
test
jne
arpl
adc
xchg
sbb
mov
loop
sbb
or
sub
popf
test
shld
and
cmp
lds
sbb
and
sub
push
sub
and
and
mov
inc
xchg
imul
clc
notl
push
mov
ret
or
iret
adc
test
into
cmp
rcrb
or
into
xchg
pop
and
fcoms
popa
and
mov
outsb
jl
pop
test
or
mov
pop
mov
cmp
test
or
loopne
imul
cmp
sahf
mov
test
mov
cwtl
pusha
les
sbb
inc
fsubr
in
mov
jb
dec
pusha
xor
xchg
inc
xchg
push
leave
div
test
mov
scas
push
xor
jae
push
bound
mov
pop
jno
popf
mov
imull
aaa
dec
aaa
jne
repz
data16
iret
xor
sbb
and
loopne
pushf
icebp
jno
adc
movsl
and
jle
jg
mov
testl
das
cmp
je
ds
sub
popa
imul
jle
int3
insb
es
xchg
sub
mov
aad
mov
adc
pop
dec
loope
jo
add
sbb
loop
divl
and
in
fiadds
testl
push
lret
sub
pop
mov
fsubp
mov
jne
adc
addb
mov
icebp
jb
loopne
mov
loope
pop
mov
mov
lret
hlt
mov
cld
add
jb
add
std
jo
dec
adc
call
and
push
and
setg
rclb
insb
jge
mov
in
sti
fildll
movsl
ljmp
sbb
clc
std
cli
jp
push
inc
and
inc
and
hlt
insb
add
xor
mov
mov
pop
aaa
pop
add
and
icebp
mov
jge
pop
push
sbb
fcmovb
lret
lret
jle
jae
mov
sub
xor
jbe
xchg
lret
pop
bound
add
push
adc
cmpl
mov
xor
mov
push
cmp
mov
cmpsb
fstps
out
cli
movsb
lds
xor
gs
out
inc
mov
pop
xchg
hlt
fisubrs
and
das
xchg
scas
pop
dec
bound
cmp
jmp
sbb
dec
ljmp
shll
int3
in
shll
adc
daa
outsb
lret
fwait
cltd
push
cwtl
jno
test
aam
xchg
loopne
rolb
jne
lcall
dec
sub
push
sbbl
je
xchg
pop
adc
pop
movsb
mov
push
ja
pop
push
es
xor
clc
jle
mov
cmpsb
dec
insl
add
jp
xchg
lods
int3
es
sbb
mov
pop
sub
mov
mov
fcmovb
and
stos
push
adc
sbb
sarb
iret
jo
dec
cmp
push
xchg
into
add
hlt
cmpsl
outsl
das
push
fdivs
out
icebp
dec
mov
and
sbb
test
fsubrl
in
loopne
mov
jo
lods
movsl
sub
sbb
pop
sub
adc
inc
lock
fadd
jns
xor
inc
mov
jns
fcmovnb
out
repnz
jb
pmaddwd
shr
xor
push
ficoml
dec
mov
cmp
sub
mov
bound
push
inc
mov
out
xchg
xor
cmp
jmp
xchg
xchg
clc
imul
in
sbb
loopne
dec
inc
push
lock
lcall
pop
shrb
insb
in
das
rcl
add
clc
pop
mov
cltd
shrb
fldcw
or
out
movsl
pop
mov
add
mov
dec
mov
insb
scas
dec
scas
add
jg
xor
adc
cmp
push
xchg
cwtl
mov
sub
xchg
pop
iret
inc
in
mov
xor
and
aad
imul
xchg
push
repnz
pop
xor
subl
adc
inc
or
mov
jle
push
xchg
insl
xchg
bound
pop
pop
push
subl
jg
push
gs
pop
add
sub
xor
mov
jp
inc
or
xchg
loop
and
out
nop
out
repz
push
insb
mov
in
enter
or
mov
dec
rcll
xchg
lods
mov
mov
mov
adc
jp
in
mov
stos
add
pop
inc
dec
cmovo
daa
adc
ds
sbb
mov
cmpl
sar
mov
imul
mov
bound
ret
rorb
mov
and
sub
lds
out
and
jle
arpl
cli
dec
xchg
cld
pop
and
add
mov
xchg
bound
das
leave
sub
mov
push
dec
sub
icebp
ja
adc
scas
sub
jecxz
scas
pusha
pop
clc
mov
push
inc
pop
fdivrs
insl
jmp
pop
inc
or
lea
or
mov
lret
xor
mov
or
cwtl
sbb
push
ret
push
xchg
out
lret
imul
adc
sbb
mov
insb
mov
loopne
fists
pop
int3
test
or
xor
pop
rolb
lods
push
jge
inc
push
enter
inc
popf
cwtl
js
es
pop
xchg
lods
xchg
push
cli
xor
fistpll
cs
shrb
sub
xchg
popa
into
nop
mov
test
ljmp
inc
cltd
das
cmp
xchg
pop
ss
pop
les
adc
fisubs
pop
ja
or
or
loope
shll
mov
ror
mov
inc
and
xor
mov
popf
std
sub
jnp
cltd
rcr
aas
ljmp
iret
mov
dec
push
xor
out
pop
xchg
das
add
lret
mov
lods
mov
push
dec
insl
test
testl
bound
clc
mov
mov
mov
dec
les
lahf
negl
mov
clc
aas
lock
jle
dec
pop
idivb
push
fiaddl
cmpsb
clc
ss
push
pop
pop
in
mov
jb
lahf
leave
and
ror
mov
push
sub
jge
stos
rclb
mov
pop
sbb
pushf
adc
or
in
and
push
orb
sub
aas
dec
ljmp
xor
into
jl
mov
lods
or
and
adc
int3
ljmp
out
mov
cmp
add
mov
in
or
out
jnp
add
stos
jp
lea
sahf
lea
outsb
push
les
clc
in
mov
ret
mov
dec
mov
shrb
sub
xchg
cli
aam
mov
repnz
imul
out
lret
imul
cltd
rolb
ss
jecxz
mov
jge
into
loopne
sahf
out
sbb
mov
lods
mov
not
xchg
out
mov
jmp
jmp
adc
pop
ret
cmp
mov
repnz
sbb
and
loope
push
std
in
pop
fs
xchg
sbb
faddl
repz
pop
stos
and
jle
into
adc
daa
data16
jmp
lods
mov
or
bound
aad
les
push
xor
adc
frstor
and
movsb
out
mov
mov
loopne
inc
jle
std
popa
mov
aas
cmpsl
jno
jae
inc
lds
cld
scas
mov
les
ja
sarl
mov
sub
xchg
and
mov
lods
or
pop
and
and
add
andl
cmpsl
xor
add
jl
add
sbb
xchg
cmp
sahf
jbe
data16
mov
mov
cmpsl
inc
mov
mov
cmp
pop
mov
xor
clc
push
adc
ljmp
lret
or
imul
es
outsl
sub
jmp
mov
push
adc
sbb
jecxz
cs
mov
push
xchg
outsb
fcoms
out
stos
push
mov
jge
jecxz
mov
jno
mov
scas
or
in
cs
cmp
lods
jns
add
cs
cmpsl
fbstp
sahf
repnz
arpl
xchg
int
pop
lret
lods
add
cmp
xor
jno
add
mov
mov
adcl
xor
rorb
enter
int
fldl
dec
pop
cmp
js
nop
lret
xchg
sti
mov
setno
dec
push
sti
scas
and
rol
inc
cld
sbb
stos
cmp
or
stc
sbb
in
iret
mov
dec
and
jae
fisubs
ljmp
cltd
xchg
fistpll
adc
insb
lds
outsl
mov
lea
sahf
cli
arpl
sti
cmp
shr
inc
pop
or
scas
adcb
xchg
cs
negb
cli
push
jns
jb
pmulhuw
addr16
push
xchg
sbb
or
adc
sbb
sarl
cwtl
xlat
jg
sbb
mov
scas
mov
lcall
xor
xchg
iret
mov
pop
faddl
lea
xor
mov
in
fwait
adc
xchg
mov
pop
loope
fs
sbb
mov
movsb
xchg
xor
sbb
ret
mov
pop
test
add
adc
shll
flds
aad
sub
push
rep
inc
pop
fiadds
fsubrs
pusha
in
popa
xchg
pop
fistpll
ljmp
push
inc
mov
xchg
ja
push
repnz
push
mov
add
outsb
out
aas
fcmovnu
lahf
cmp
imul
sbb
cld
push
xor
in
pop
mov
hlt
sub
or
pop
cs
scas
dec
sbb
sub
stos
outsl
sti
pop
mov
inc
sbb
les
adcb
daa
pusha
pop
cmp
imul
fcomps
pop
loop
stc
lcall
push
mov
mov
es
inc
push
and
xchg
mov
sarl
pop
xor
leave
pusha
xchg
mov
sbb
rorb
sbb
cmpsl
mov
cmp
inc
iret
xor
mov
lods
inc
out
cmp
in
fwait
or
insb
lds
dec
jg
jg
jp
cmc
insb
mov
int3
lcall
je
or
ret
sbb
adc
xchg
or
jl
into
sbb
mov
mov
cltd
int
pop
xlat
mov
push
sub
call
xchg
loop
or
inc
dec
mulb
lahf
jnp
jo
iret
cwtl
sub
mov
imull
inc
push
not
jle
dec
popf
or
or
sbb
dec
icebp
test
pop
insl
pop
or
and
in
js
rcr
add
jecxz
imulb
pushfw
xchg
ljmp
fiadds
out
imul
pushf
lds
int3
aam
out
sub
sahf
pop
cmp
pop
dec
mov
std
notl
popf
sbbb
lods
les
inc
jecxz
push
aad
shl
and
fcmove
fnstsw
add
pop
mov
jle
jmp
sub
out
fidivs
xchg
fcmove
sarb
inc
jle
pushf
ja
aad
icebp
mov
lods
or
test
addb
add
pop
jnp
push
popa
insl
in
mov
rolb
cmp
addl
mov
roll
inc
lea
or
inc
inc
mov
push
mov
stos
das
sub
and
and
jmp
xor
inc
mov
sbb
cs
ja
xchg
sub
into
pusha
or
mov
push
or
and
inc
loopne
fsubs
inc
or
lcall
gs
outsl
test
sbb
cwtl
or
push
not
jnp
push
lock
gs
jns
sbb
pushf
hlt
adc
mov
jno
je
sub
test
cltd
and
test
imul
loope
arpl
and
movsl
and
adc
jnp
mov
cmpsb
adc
mov
push
repz
adc
inc
rcr
inc
rol
pop
data16
or
lods
cld
std
insl
push
jmp
sbb
sbb
stos
divl
xchg
cltd
fisttpll
xchg
jl
or
ja
arpl
adc
sbb
push
out
rclb
je
dec
mov
mov
insl
adc
fsubrs
dec
arpl
mov
sahf
add
pop
adc
bound
addr16
cmp
inc
cmp
cmp
enter
mov
aam
adc
cwtl
sub
xchg
outsl
pop
lret
cmpsb
sbb
test
sbb
ja
mov
cwtl
sahf
and
push
lret
jae
dec
mov
sub
jne
dec
int3
or
mov
push
adc
mov
mov
lret
jnp
or
shlb
sbb
ret
int3
stos
mov
dec
sub
xor
adc
inc
jmp
xchg
inc
out
lcall
push
sub
lods
cmp
mov
lea
fcmove
inc
xor
jg
mov
mov
call
inc
mov
aaa
mov
fwait
sbb
jge
push
aaa
dec
xor
aam
cmp
or
push
xor
add
aad
or
aaa
cmp
in
lea
mov
ret
test
std
mov
popf
mov
movsl
mov
aas
cmp
and
fdivs
insl
mov
stc
push
xor
push
sarb
dec
imul
mov
push
test
es
and
je
xor
push
or
cli
xchg
mov
add
mov
sub
sub
out
mov
insl
iret
sub
mov
sti
cli
jns
adc
inc
jnp
xor
incb
push
xchg
adcl
ljmp
dec
mov
out
in
in
inc
in
aad
test
and
push
jmp
aam
lods
mov
int
mov
ret
test
push
sti
pop
sub
jno
mov
sbb
sbb
add
inc
repz
add
cli
pop
repnz
stos
or
pop
inc
loopne
push
fmulp
lahf
mov
xchg
mov
xchg
mov
adc
repz
fidivs
jns
jne
sbb
nop
xor
push
pusha
stos
adc
je
testb
lret
rolb
ret
cmc
ret
push
lods
loopne
add
mov
xchg
mov
in
ss
scas
jno
adc
cmp
fbld
bswap
pop
rcrl
mov
jns
jno
sbb
inc
ljmp
add
or
sub
add
xor
dec
push
stos
fdivrs
stc
jb
testb
hlt
jns
leave
xchg
cli
mov
iret
stc
ss
xlat
pusha
data16
jmp
aad
jecxz
sub
and
or
lds
add
int
rcl
daa
popf
jmp
in
jg
dec
adc
jmp
outsl
pop
loop
cmp
and
push
mov
cmp
lcall
xchg
inc
movsb
js
adc
pop
cmp
shl
mov
addl
and
adc
fidivrl
push
sti
adc
xor
add
aaa
ret
sub
push
cs
push
jo
fs
push
and
mov
fisttpll
inc
inc
arpl
rolb
daa
fdivs
imul
pop
outsl
nop
cmp
sar
cmp
mov
addb
popf
jmp
adc
lods
notl
cld
out
and
aam
fcomps
jo
xor
test
ljmp
pop
mov
sub
cwtl
jno
mov
sbb
xchg
inc
mov
std
jmp
shlb
and
call
cmp
push
mov
add
nop
addl
cmpsl
fwait
push
out
rorl
lods
xchg
jo
insb
jb
push
hlt
jge
jmp
repz
test
ljmp
adc
mov
movsl
add
jg
add
lret
mov
mov
jne
adc
mov
sbb
hlt
sbb
lods
repnz
cld
sbb
clc
dec
mov
dec
mov
xchg
lahf
dec
mov
pop
out
dec
fistl
lock
mov
mov
test
or
sbbb
sub
pop
aaa
or
xlat
inc
and
aam
stc
push
gs
mov
mov
push
push
push
repnz
inc
dec
mov
xor
and
jno
push
shlb
push
cmp
mov
outsb
arpl
sbb
cmp
mov
adc
mov
and
add
push
les
sbb
mov
ljmp
jo
lock
mov
nop
xor
jmp
fsubrp
push
jp
cltd
mov
jp
lea
out
call
push
cmp
fcmovne
jecxz
mov
add
or
int3
xchg
orb
mov
outsb
xchg
sbb
in
popf
mov
daa
jmp
cmpb
inc
es
push
jae
call
add
pop
hlt
mov
sub
xor
int3
sti
pop
sbb
jae
lret
cmp
xlat
jp
insb
in
lahf
out
add
cmp
push
push
or
lods
int3
imul
pop
lret
test
mov
jmp
jnp
and
out
sbb
pushf
repnz
sbb
sub
pop
mov
in
clc
cld
fcomip
scas
mov
mov
xor
push
enter
int
push
pop
insl
mov
hlt
or
cmc
cmpsb
stos
push
out
mov
popf
mov
insb
out
icebp
dec
cmc
test
sub
sbb
stc
and
addl
test
dec
adc
dec
repnz
adc
or
movsb
insb
out
jle
out
add
cld
in
mov
scas
and
test
ret
lock
dec
jns
dec
enter
inc
mov
or
lds
pop
shr
rcr
xlat
shr
inc
mov
mov
sub
add
sbb
jns
popl
mov
into
fistl
je
adc
icebp
mov
add
lds
test
outsb
repnz
jl
in
dec
ljmp
loop
jle
jmp
es
sbb
push
or
outsl
inc
mov
xchg
jnp
inc
xor
dec
add
or
addr16
inc
push
mov
jge
jo
xchg
jbe
sbb
jo
inc
out
xor
es
popa
jge
js
orl
jae
push
dec
xor
int3
xor
pop
mov
mov
mov
jnp
lods
xor
xor
jne
mov
mov
adc
sub
sub
mov
in
gs
or
jp
pop
je
bound
adc
leave
mov
cmp
sub
inc
jp
scas
jnp
call
xor
popf
or
xchg
ss
stc
adc
popa
lock
adc
cmp
leave
scas
push
push
mov
movsl
lahf
adc
dec
inc
pusha
mov
sti
fwait
push
inc
int
cmp
lods
outsl
lock
cmp
mov
and
int
cmp
fidivs
vpmullw
je
insb
sub
push
fistpll
pop
push
lret
and
push
and
fiaddl
nop
cmc
outsl
pop
cmp
rcrb
xor
fbstp
ret
popa
mov
mov
dec
cs
int
scas
push
leave
xchg
dec
and
int3
cmp
stc
sub
xlat
dec
adc
sub
inc
pusha
dec
mov
or
lahf
popf
cmp
mov
jl
nop
out
aas
sub
push
in
push
out
aaa
xlat
andl
aas
mov
clc
insb
xchg
or
jmp
or
arpl
test
push
mov
std
std
jne
pop
sub
imul
pop
mov
jno
leave
xchg
int3
push
mov
ret
daa
push
movsb
cmp
cmpsb
xchg
std
daa
mov
mov
loope
push
je
inc
dec
sub
xor
xchg
inc
dec
inc
adcb
adc
cmpsb
add
lret
outsb
inc
xlat
cmpsb
jmp
jae
outsb
pop
and
lock
les
pop
and
lahf
fs
notb
mov
jle
add
jle
int
push
jge
adc
loop
or
adc
cwtl
mov
and
insl
subb
adc
jbe
or
rorl
mov
cs
mov
ss
ja
sub
inc
dec
or
xor
dec
fucomi
xor
xchg
in
xchg
imul
sub
pop
lods
mov
push
jo
stc
lcall
push
fstpl
jnp
mov
cmpb
das
and
adc
incl
mov
mov
lret
rorb
stos
pop
inc
or
shrb
sub
mov
fstps
inc
fcoms
es
es
aam
rorb
iret
jae
sub
sbb
push
pop
sti
mov
inc
ds
adc
mov
mov
push
adc
sub
add
rolb
jno
das
mov
mov
out
lea
shlb
jnp
mov
addr16
fimuls
push
jns
and
push
xlat
xor
push
test
shll
jmp
lahf
leave
mov
pop
dec
mov
mov
in
fistps
or
add
dec
icebp
iret
fdivrs
ja
clc
add
addb
cmp
pop
insl
fisttpl
pop
ficomps
hlt
lods
cli
stos
xor
in
sub
lcall
add
addb
rcrb
xchg
sahf
dec
outsb
jmp
inc
or
adc
add
sub
arpl
adc
fldenv
insl
jg
lahf
or
push
sbb
scas
jle
jecxz
xlat
inc
in
pop
jl
int3
pop
mov
popa
movsl
pop
sahf
ret
adc
stc
or
fistpl
cwtl
dec
ret
pusha
sub
inc
xchg
ficoms
ret
mov
shlb
xchg
jae
cmpsl
pushf
cltd
add
cld
imul
addr16
mov
stos
cltd
push
pushf
mov
cs
jb
cmp
shl
mov
mov
jne
bswap
test
jp
push
sahf
mov
sbb
mov
add
loopne
jbe
push
nop
dec
cmpsb
fsts
mov
data16
sbb
mov
fsubrs
sbb
pop
repz
push
popf
enter
or
cmpsl
outsb
xchg
mov
mov
pop
orl
push
jns
fadds
shr
inc
cmpsb
nop
test
lock
cmp
aaa
mov
pushf
jl
mov
mov
dec
inc
push
xchg
sub
xchg
adc
push
rclb
lock
iret
fsubr
inc
jmp
das
inc
and
push
mov
ficomps
movsl
sarb
sub
pop
push
mov
xchg
cmp
aaa
cmp
xchg
repz
cld
inc
and
push
outsb
xchg
and
fsubr
xchg
xchg
mov
jmp
and
adc
inc
or
mov
int3
shr
add
xchg
sub
flds
dec
subl
jecxz
add
inc
jbe
insl
outsb
mov
cli
xchg
mov
mov
add
orb
dec
repnz
rol
sti
in
imul
aaa
test
pushf
sbb
lods
cmp
inc
and
mov
jmp
inc
insl
mov
xor
into
mov
and
lods
aas
aad
fimuls
clc
enter
fcmovbe
cmp
mov
xchg
inc
sti
out
icebp
xchg
out
pusha
dec
xchg
mov
pop
loopne
in
fistl
mov
fwait
cmc
cmp
fwait
lock
sub
lret
inc
mov
xchg
sbb
pop
pop
inc
xchg
out
aad
ret
scas
outsb
fisubrl
stc
push
into
test
shl
mov
pop
push
xlat
mulb
movsl
pusha
add
mov
xor
mov
test
jmp
jle
fyl2xp1
lods
mov
ret
adc
mov
jnp
out
add
lds
sbb
insb
lcall
push
cmp
pop
or
xchg
xchg
cwtl
push
pop
xchg
sub
test
fs
mov
dec
into
pusha
iret
add
push
push
inc
ror
xchg
push
xor
in
lods
sbb
fdivrl
xlat
lock
jns
das
fsubl
push
push
movsl
cmpsb
xor
jbe
fimull
ret
aas
jnp
movl
pop
jl
ljmp
leave
out
add
movsb
dec
in
ja
or
xor
xor
fucomi
mov
cmpsl
cmpsl
or
add
sbb
xchg
pop
ljmp
movb
dec
out
jecxz
cltd
orl
mov
dec
cmc
ja
insb
dec
mov
lcall
xchg
fs
xor
xchg
pop
in
stc
jb
pop
sub
or
pop
sub
imul
and
mov
out
inc
popa
in
pop
inc
add
xchg
imul
call
mov
mov
push
and
leave
mov
xor
jbe
lods
inc
das
xchg
jnp
repnz
mov
lret
mov
in
jb
mov
jg
and
je
mov
add
loop
pop
xchg
js
mov
in
mov
int
mov
inc
mov
pushf
ljmp
insl
mov
dec
out
mov
dec
or
sbb
clc
lods
xchg
push
adc
cmp
xor
cmp
mov
stc
dec
dec
sbb
js
ss
sub
adc
sub
loope
xchg
and
out
sub
inc
sete
xchg
dec
insb
xchg
adc
adc
shll
lods
imul
adc
loop
push
adc
dec
movsl
and
cwtl
ss
push
mov
jbe
xchg
lods
xor
jecxz
inc
enter
inc
cmpsb
jg
adc
adc
mov
xchg
repnz
and
int
push
scas
in
shll
xchg
inc
lods
rcl
and
pusha
sub
fwait
cmp
xor
lea
push
out
ja
out
mov
out
add
push
pop
add
xchg
hlt
lret
xchg
outsl
outsl
xor
mov
sbb
push
cmp
aam
mulb
shl
test
cmpsb
les
and
shrl
lods
or
mov
cmp
sbb
outsb
imul
pop
repz
jge
cmpl
faddl
add
dec
add
push
lret
xor
mov
pop
repnz
nop
js
push
sub
inc
js
dec
mov
ds
dec
test
sbb
push
sbb
mov
fwait
not
mov
or
dec
leave
mov
push
jmp
push
in
xchg
add
and
shr
and
sub
push
ljmp
push
fs
dec
dec
and
outsl
xor
mov
pop
jle
lds
xchg
push
lods
insl
jbe
lea
dec
dec
das
and
in
cltd
add
js,pt
mov
aas
fsubs
into
aam
mov
xchg
sub
sbb
daa
and
xchg
fwait
imul
ds
push
jo
mov
inc
mov
push
pop
jmp
inc
pop
inc
addr16
inc
mov
int
fstl
xchg
cmc
dec
jne
addr16
sti
inc
pop
sbb
sbb
cs
ds
sbb
or
outsl
adc
dec
add
or
xchg
xlat
pop
mov
jl
jns
repnz
in
test
adc
push
test
ds
adc
pop
insb
hlt
aad
pop
lods
mov
in
jl
inc
or
mov
jb
sahf
dec
cmp
lods
mov
scas
inc
ficompl
pop
dec
lahf
pop
push
aas
shlb
mov
mov
xor
pop
adc
cmp
dec
or
adc
jmp
dec
cli
lock
and
sbb
aam
loop
inc
fs
cmpsl
pop
sbb
jge
push
dec
mov
and
and
jb
jge
cmpsb
fldcw
into
je
lods
sti
das
call
cltd
iret
sub
xor
pop
imul
pushf
shlb
mov
push
leave
mov
adc
mov
add
mov
lret
fs
clc
jmp
ffree
push
and
shlb
lcall
fsubrl
pop
xchg
movsb
les
rcrb
les
push
add
out
mov
ja
out
fwait
jb
iret
or
inc
cmp
mov
mov
xor
inc
mov
push
adc
ret
jecxz
xlat
movsb
mov
sbb
sbb
data16
add
jnp
add
jbe
adc
fs
push
jbe
les
jnp
or
cltd
cli
push
and
movsb
push
cs
or
sti
fisttps
sahf
sub
int3
fdivrl
mov
mull
push
adc
xor
cmp
xchg
pop
loopne
push
jmp
xor
or
mov
decl
lcall
imul
pop
push
jle
push
mov
test
lcall
test
rclb
mov
leave
stos
jmp
fwait
jl
nop
cmp
jb
pop
leave
cmpl
scas
dec
fbld
out
ja
lret
insb
jecxz
mov
inc
cmpsb
lret
iret
pop
and
push
jb
cmpl
xchg
xchg
jns
dec
cmp
pop
fidivrl
cltd
mov
sbb
stos
lods
mov
jmp
jne
aas
mov
jle
fwait
xor
adc
ret
mov
fbld
mov
fisubrl
mov
outsb
push
push
pop
sar
inc
into
jae
push
negb
xchg
lock
pop
adc
mov
shl
mov
je
fistps
or
mulb
mov
sbb
ljmp
jle
inc
push
jecxz
hlt
dec
scas
and
mov
lret
clc
xchg
es
icebp
or
mov
sbb
pop
and
fs
lods
in
sub
pmaddwd
inc
cmp
call
mov
bts
mov
adc
xor
sbb
icebp
sbb
or
dec
add
int3
stos
xor
push
scas
jo
outsl
xchg
jns
adc
or
test
inc
xor
sbb
inc
fsubrl
cmp
lods
or
add
mov
pop
xlat
pop
cmp
sbb
and
and
scas
les
mov
mov
stos
cmp
push
mov
jnp
mov
sbb
push
push
adcb
mov
jo
push
dec
arpl
xchg
xor
int
dec
jae
addb
je
push
lret
and
pop
sub
jo
fmuls
pop
cmp
pop
rcr
pop
popa
push
xlat
mov
xchg
mov
lahf
jg
mov
call
mov
sarl
dec
hlt
mov
imul
fwait
stc
mov
and
cvtdq2ps
add
cmp
subb
sbb
cs
jge
sub
lcall
mov
jg
inc
ljmp
cmp
xor
adc
mov
subl
mov
inc
fxch
add
int3
pop
andb
js
lock
cli
jle
pusha
adc
lahf
sub
sti
shll
cmp
sbb
repnz
daa
icebp
push
fbstp
lods
add
and
xor
sti
adc
add
aad
repnz
inc
mov
dec
cmc
adc
or
inc
mov
push
cmp
repnz
cmp
inc
test
add
popf
jp
inc
dec
inc
nop
xor
out
sahf
imul
and
dec
ja
stos
adc
xchg
push
in
iret
xor
dec
sub
xor
cli
fstl
imul
sub
aas
popa
arpl
sbb
inc
add
jb
fimull
ffreep
xor
or
sub
mov
mov
mov
add
fistl
mov
xor
jnp
ljmp
push
loopne
lcall
adc
dec
cmp
stos
repnz
loope
xchg
pop
cmp
jle
mov
mov
push
pop
xor
cmpsl
jg
arpl
push
mov
sarl
adc
and
dec
jno
mov
lahf
xor
mov
bound
push
test
lret
cmpsb
int3
out
xor
in
ret
das
pop
lock
or
ficoml
into
jno
jbe
mov
cmp
or
aas
push
popa
ret
lods
mov
and
and
jle
jne
jmp
and
imul
push
sub
pop
inc
jg
fwait
sub
inc
add
adc
jle
js
push
adc
jb
add
adc
out
mov
scas
xchg
cmp
xor
or
inc
or
inc
lea
in
ret
sbb
mov
fs
in
les
mov
cmp
loop
jl
outsb
out
pushf
rcll
lds
jbe
call
mov
push
xchg
sub
mov
nop
mov
repnz
jae
lods
pminsw
adcb
in
int
aam
in
sub
fidivl
sti
fcoms
or
dec
mov
sbb
divl
push
fndisi(8087
lcall
adc
pop
add
mov
jp
inc
scas
adc
or
add
lods
mov
lds
jae
jnp
add
mov
mov
xor
jb
fnstcw
gs
mov
ret
loop
mov
out
fadd
movsl
sbb
test
jbe
lcall
adc
cmpsb
mov
xor
bound
or
mov
add
subl
idiv
cmc
inc
sar
popf
sub
iret
cmp
push
pop
sub
pop
jbe
inc
scas
stc
loopne
jmp
outsl
mov
popa
ss
mov
sub
cmp
push
mov
lcall
xchg
je
xchg
in
popf
rorl
mov
adc
push
into
push
dec
jne
stc
bnd
lahf
in
inc
aas
shr
sub
gs
pop
fisttpl
dec
dec
data16
adc
ficomps
mov
pop
push
xor
mov
mov
mov
loope
jo
cmp
or
lcall
fisubrs
xchg
gs
sti
js
ficoms
ja
ss
lret
lea
add
rol
dec
lods
mov
jb
or
inc
xchg
adc
loop
sbb
rorb
xorl
js
add
pop
fsub
dec
push
movsl
rol
xor
or
outsl
xor
inc
into
or
imul
add
mov
popa
dec
mov
lods
adc
ror
repz
call
rcl
add
push
lahf
mov
jmp
inc
inc
xor
sub
dec
out
imul
jmp
xor
scas
sbb
std
push
sbb
in
popf
add
pop
and
scas
rcrb
pop
dec
scas
aam
jae
sbb
cmp
add
mov
and
test
rcr
and
rorl
mov
out
inc
inc
xchg
dec
push
call
aam
pop
pop
ljmp
sbb
push
lahf
outsl
xor
push
das
cmp
and
loopne
std
mov
addb
or
dec
pop
rol
fimull
and
mov
xor
imul
adc
and
sbb
test
pop
pop
repz
lock
xchg
cmp
mov
xor
fdivl
add
jecxz
and
push
movsb
mov
sub
addb
pop
mov
in
xor
jmp
xchg
mul
xor
or
pop
aas
inc
in
dec
adc
dec
push
sbb
movsb
lods
push
cmpsb
aad
add
out
or
out
in
repnz
enter
xor
sbb
in
add
inc
mov
adc
subb
adc
ret
out
aas
pop
mov
rcl
cmp
loop
dec
jb
out
jns
pop
imul
jns
sbb
dec
movsl
cmp
push
cmpl
repnz
bound
jge
inc
rolb
dec
aaa
lret
mov
outsl
adcl
icebp
repz
jmp
loope
xlat
mov
leave
fmuls
pop
push
icebp
push
icebp
out
add
or
pop
popf
das
mov
cmp
sub
jnp
push
shlb
push
jbe
je
inc
sti
dec
sbb
dec
into
mov
sbbb
ljmp
movsl
push
push
das
cmpsb
or
add
sub
mov
xchg
scas
les
mov
nop
insb
xlat
mov
movsb
lret
xor
xor
and
xor
movsl
cmp
lret
cmp
add
popa
pusha
andb
push
movsl
ja
push
push
mov
xchg
mov
das
ss
dec
mov
repz
loopne
and
out
or
fsub
nop
nop
sbbb
fiaddl
xor
pusha
incl
hlt
xchg
out
popf
mov
loopne
loopne
jno
jns
xorl
shl
add
stc
js
or
mov
jge
sahf
xchg
push
int
and
pusha
mov
stos
push
mov
sub
sub
sbb
push
enter
pop
push
xchg
jp
sbb
xchg
push
push
test
pop
shrb
dec
jo
dec
xor
mov
jl
add
in
and
in
andb
push
pop
xchg
adc
scas
jb
push
lret
repnz
mov
repz
cltd
imul
dec
or
jg
xchg
leave
sbb
and
inc
cmc
dec
cmp
fwait
pop
hlt
cli
inc
and
movsl
dec
inc
xor
cli
ljmp
ficompl
add
test
xor
orl
adc
sub
aad
enter
rolb
movsl
ret
mov
cli
add
cmp
sub
ljmp
out
aad
fmuls
sub
rorb
pop
pushf
pop
fcomps
cmpsl
push
xor
stos
stos
add
mov
repnz
inc
aad
fisubs
sub
cmpsl
pop
fs
out
nop
push
mov
ds
cs
xchg
js
test
ja
inc
repz
sbb
sub
mov
jl
mov
dec
push
aam
call
mov
addr16
mov
rorb
push
aaa
int
test
fisubrl
fcmovu
xor
jnp
out
xchg
loope
add
pop
pop
fbld
scas
test
dec
and
xchg
mov
mov
xchg
out
lret
inc
jmp
dec
lods
jg
or
orl
cmp
aaa
mov
mov
imul
fidivl
movsl
jl
out
aam
aad
cli
in
ret
pushf
adc
into
mov
rolb
sbb
out
mov
aam
repnz
imul
mov
sarl
xchg
dec
sub
enter
lret
fsubr
lret
and
lods
pop
movsl
sub
jns
sbb
inc
sbb
rcll
add
pusha
fsubrs
mov
jnp
push
sub
adc
je
popf
mov
mov
mov
daa
cmp
xor
jb
adc
and
add
dec
mov
add
push
mov
xchg
mov
out
mov
icebp
fs
pop
xor
inc
mov
mov
jg
inc
movsb
dec
sbb
incl
cwtl
pusha
pop
push
lods
mov
test
loop
mov
scas
std
mov
mov
xchg
loop
xlat
xor
pop
bound
enter
mov
push
lods
ja
push
inc
push
out
jno
movsl
fsts
add
mov
adc
cmp
cld
sarb
loope
cld
inc
pusha
les
fisubs
jbe
out
stc
jge
and
adc
dec
mov
jb
icebp
jg
pop
addr16
mov
int3
mov
ja
in
add
pushf
outsb
stos
outsl
inc
inc
add
fnstenv
jae
push
sarb
and
pushf
cltd
outsl
dec
iret
xor
out
cmpsb
insb
fstl
mov
cs
xor
movsl
mov
dec
adc
mov
or
andl
fisttps
aam
out
inc
sbb
and
and
imull
aam
mov
sub
push
dec
mov
popa
push
lcall
mov
jmp
pusha
push
stos
xor
repnz
pusha
ljmp
inc
es
lret
xchg
hlt
dec
fisttpl
or
sarw
mov
jns
sarb
mov
bound
int3
sub
push
jne
in
mull
imul
fidivs
in
jno
sub
subl
mov
fisttps
ret
sbb
nop
pusha
mov
test
or
mov
cmc
dec
cmp
xchg
adc
gs
mov
xor
cs
cmp
iret
jnp
mov
pop
cmp
dec
push
shlb
dec
pop
mov
xor
aaa
push
pop
dec
ja
fwait
dec
int
aas
xchg
adc
in
inc
in
mov
mov
cli
sbb
lock
ds
mov
sub
push
lcall
jne
jne
xchg
or
lock
dec
add
rclb
mov
mov
adc
inc
or
pop
inc
jb
inc
mov
aad
jnp
mov
mov
cmp
jmp
mov
or
adc
dec
cli
add
sti
dec
dec
adc
adc
dec
cmc
push
adc
push
test
fst
pop
fistpll
call
icebp
or
dec
add
data16
jmp
out
dec
adc
inc
sbb
test
in
sbb
sub
je
lods
ljmp
notb
push
mov
gs
mov
inc
fdivl
pop
pop
fucom
orl
mov
aam
sub
ficoml
jg
mov
dec
adc
push
ret
std
rcll
mov
aas
es
out
negl
jb
loope
cmp
pushf
pop
je
cmc
movsl
pushf
mov
out
dec
shll
mov
pushf
xor
lea
jecxz
mov
mov
dec
sbbl
mov
sbbl
shll
xor
mov
mov
das
pop
stc
in
pop
sbb
loop
jmp
mov
jns
gs
pop
pusha
xor
out
movsb
or
jge
addr16
sahf
sbb
scas
xor
xor
sub
stos
and
cmp
insb
inc
repnz
dec
ret
sbbl
into
outsb
movsl
push
pop
fisubrs
call
xchg
pushl
sub
cmp
lock
fwait
mov
cmpb
sub
fwait
or
mov
inc
inc
xlat
jg
and
cmp
or
ljmp
cmp
pop
mov
mov
jl
int
inc
fldcw
ds
hlt
xchg
je
add
add
sbb
push
shlb
shll
notb
or
dec
leave
icebp
subb
sahf
inc
sbb
xchg
aaa
jp
pop
imull
mov
loope
pop
mov
arpl
mov
fbstp
paddb
push
xor
arpl
pop
inc
and
push
jge
adc
popa
cmpsl
arpl
inc
inc
cmc
rcl
repnz
imul
sti
lock
sahf
sbb
fldenv
sti
sahf
cmp
jmp
inc
add
mov
pop
xor
and
fsub
pmaddwd
mov
test
xor
rcrb
sbb
lret
sub
inc
inc
fucom
lcall
xchg
pop
dec
dec
movsl
and
addl
rol
or
sbb
jb
dec
fsubrs
mov
call
aam
scas
jmp
pop
sub
add
daa
and
scas
sahf
fsubl
add
adc
daa
sbb
xchg
inc
xor
mov
jo
enter
mov
xchg
jg
out
xchg
xchg
sub
xchg
dec
jg
add
sahf
loope
sub
pop
sbb
mov
cmp
jge
jp
adc
lret
idiv
mov
pop
jno
fstps
movb
lahf
test
ljmp
push
dec
pop
imul
scas
push
jbe
call
jecxz
jb
mov
movsl
clc
and
push
inc
aaa
mov
and
pop
jg
cmp
dec
cmpsb
adc
test
mov
mov
stos
sbb
outsl
dec
add
mov
dec
cs
insl
adc
pop
fdivrs
loopne
mov
xchg
loopne
ds
sbb
rclb
sub
mov
.byte
.byte
.byte
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
push
add
clc
pop
add
sbb
add
mov
add
add
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
pop
or
or
add
in
add
add
add
add
add
add
add
loopne
add
rcrb
push
add
add
add
add
add
add
add
add
add
or
add
fcomps
add
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
or
xor
add
in
add
add
add
add
add
add
add
mov
add
xchg
pop
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
enter
mov
add
in
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
les
add
add
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
pop
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
imul
pop
add
add
add
add
add
add
add
add
add
rolb
add
insl
or
pop
add
add
add
add
add
add
add
add
add
call
outsb
or
pop
add
add
add
add
add
add
add
add
add
adc
add
outsl
or
in
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
add
jo
add
add
add
add
add
add
add
add
add
call
jns
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
in
add
add
add
add
add
add
add
cmp
or
sub
add
in
add
add
add
add
add
add
add
pusha
add
or
call
add
add
add
add
add
add
add
mov
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
rolb
or
or
add
in
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
or
xchg
add
add
add
nop
push
add
mov
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
test
add
rolb
add
add
add
add
add
add
add
add
add
addb
add
or
cwtl
add
add
add
add
add
add
add
add
add
test
add
les
add
in
add
add
add
add
add
add
add
rolb
add
inc
mov
add
add
add
add
add
add
add
add
add
add
clc
push
add
cmp
or
ljmp
add
add
add
add
add
add
and
add
sub
add
in
add
add
add
add
add
add
add
dec
pop
add
fcoms
add
in
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
pop
add
pop
cwtl
or
mov
add
in
add
add
add
add
add
add
add
rolb
add
or
loop
add
in
add
add
add
add
add
add
add
call
cltd
or
mov
add
in
add
add
add
add
or
add
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
sldt
enter
sbb
or
addb
add
add
add
add
add
add
add
add
add
js
add
jl
or
push
add
add
add
add
add
add
add
add
add
mov
fwait
or
sub
add
in
add
add
add
add
add
add
add
enter
clc
fwait
or
js
add
in
add
add
add
add
add
add
add
lock
add
or
les
add
in
add
add
add
add
add
add
add
sbb
add
xor
or
sub
add
in
add
add
add
add
add
add
add
inc
or
add
or
inc
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
or
add
mov
add
in
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
and
or
adc
add
in
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
or
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
orb
add
or
adc
add
in
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
loopne
add
jg
add
and
add
dec
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
fsubs
add
add
add
add
add
add
add
add
bound
add
in
movsb
or
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
push
data16
data16
mulb
mulb
jmp
outsw
jmp
push
outsl
mulb
mulb
jmp
outsw
imulb
outsl
imulb
outsl
mulb
jmpw
outsl
mulb
imulb
ljmp
data16
jmp
data16
data16
jmp
data16
push
imulb
data16
jmp
data16
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
clc
mov
clc
clc
mov
clc
mov
clc
decl
mov
clc
decl
mov
clc
clc
mov
mov
clc
mov
data16
data16
decl
clc
xchg
jmp
jmp
clc
clc
clc
jmp
mulb
mulb
clc
clc
mov
jmp
jmp
clc
clc
mov
push
jmpw
clc
decl
imulb
jmpw
clc
mov
clc
xchg
outsl
jmp
idiv
data16
decl
outsl
idiv
imulb
jmp
clc
mov
ljmp
jmp
clc
mov
clc
xchg
idiv
push
data16
decl
xchg
push
data16
decl
xchg
jmp
clc
clc
clc
clc
xchg
data16
mov
clc
mov
push
testb
mov
data16
clc
xchg
jmp
mov
mov
data16
clc
clc
clc
decl
decl
decl
decl
clc
mov
mov
clc
mov
decl
mov
clc
decl
clc
mov
decl
decl
clc
clc
mov
decl
clc
clc
mov
clc
mov
mov
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jg
push
ja
ja
push
jg
pushl
ja
ja
ja
ja
push
jg
pushl
pushl
ja
ja
push
jg
pushl
push
ja
ja
ja
jg
push
jg
push
ja
pushl
push
ja
push
ja
push
jg
pushl
ja
ja
push
ja
pushl
push
jg
pushl
ja
ja
pushl
ja
push
ja
push
jg
push
ja
div
ja
ja
ja
ja
push
ja
push
jg
push
ja
divl
jg
pushl
push
ja
push
jg
data16
pushl
pushl
push
jbe
data16
data16
push
data16
pushl
pushl
push
jbe
jmp
jmp
outsl
jmp
push
jg
divl
ja
jbe
push
push
data16
push
data16
pushl
pushl
ja
jbe
outsl
jmp
jmp
outsl
push
data16
pushl
push
ja
divl
push
push
data16
jmp
pushl
pushl
idivl
outsw
jmp
jmp
jmp
pushl
push
jbe
mulb
mulb
mulb
jmp
push
ja
push
jbe
jmp
jmp
jmp
jmp
push
ja
ja
push
jbe
push
push
push
outsl
jmp
push
ja
ja
push
jbe
outsl
jmp
jmp
imulb
data16
push
ja
jg
push
jbe
push
push
outsl
jmp
pushl
jg
push
jbe
outsw
jmp
jmp
pushl
push
jbe
data16
outsl
jmp
data16
push
ja
pushl
push
jbe
data16
jmp
data16
push
ja
pushl
jg
jbe
push
data16
pushl
push
jg
jbe
jmp
push
ja
idivl
jg
divl
data16
idiv
push
jg
divl
jg
divl
data16
push
outsl
idiv
pushl
pushl
ja
push
jbe
data16
push
outsl
div
ja
push
ja
divl
divl
data16
divb
jg
ja
push
jg
jbe
push
divl
divl
idivl
jg
jbe
jmp
ja
divl
ja
idivl
jg
data16
ja
pushl
idivl
jg
data16
pushl
push
ja
divl
jg
pushl
ja
pushl
pushl
jg
ja
jg
pushl
jg
ja
push
ja
jg
ja
idivl
pushl
jg
ja
push
ja
ja
push
jg
jg
ja
pushl
pushl
ja
ja
push
jg
push
ja
pushl
jg
ja
ja
ja
ja
push
jg
push
ja
push
ja
divl
ja
ja
ja
push
jg
push
ja
push
ja
push
ja
ja
push
jg
pushl
push
ja
pushl
ja
push
jg
push
ja
ja
pushl
pushl
push
jg
pushl
jg
push
ja
pushl
push
jg
push
ja
push
ja
push
jg
push
ja
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
pop
add
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
pop
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
pop
add
add
and
add
add
inc
add
insl
add
add
je
jae
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
or
enter
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
enter
enter
enter
add
add
std
enter
add
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
lea
xor
lods
test
je
cmp
ja
add
add
jmp
and
shl
lods
test
jne
lods
jmp
ret
add
fimuls
jbe
xchg
cltd
cmc
jbe
cltd
or
insl
inc
and
jg
pop
jle
jo
xchg
dec
push
movsb
shlb
mov
gs
insl
add
gs
in
jg
fxch
sub
jns
mov
imull
cmpsl
addr16
test
sub
sbb
adcb
cmp
nop
aaa
inc
xchg
adc
cmp
mov
xchg
rcrb
out
in
ja
js
xor
mov
out
incb
cs
test
dec
or
mulb
idiv
sub
into
dec
pop
mov
negl
or
nop
movsb
rcrl
imul
lahf
clc
daa
fsubs
ja
mov
cmp
xor
test
inc
lods
dec
testl
mov
js
iret
push
movsb
jge,pn
mulb
adc
imul
lea
sub
mov
push
mov
adc
pusha
inc
or
pop
mov
out
add
fdivrs
and
fwait
stc
popa
mov
mov
movsb
pusha
jg
les
scas
test
pushf
movsb
push
insb
in
dec
arpl
adc
loope
xor
test
mov
mov
xchg
shl
mov
cmp
das
lahf
lock
cltd
add
dec
pop
gs
add
in
call
sti
negb
loope
xchg
cli
movsl
popf
mov
inc
es
cmpsl
outsl
mov
sbb
in
xchg
dec
jg
testl
add
push
xor
dec
cmp
imul
cmpsl
outsl
cmp
and
push
stos
adcb
shll
lock
std
fnsave
ss
ljmp
cli
add
inc
fcmovne
test
push
inc
out
roll
outsb
outsb
mov
or
mov
mov
push
fwait
sbb
fsubrl
push
pop
dec
and
stos
jl
pushw
cmpsl
xchg
pop
cmpsb
in
cmpsl
cmp
fdivr
sub
sbb
popf
sub
repz
adc
shl
dec
repz
fimull
bound
gs
int
shll
cmp
ss
push
daa
fcmovnbe
jg
adc
cmp
adc
or
pop
dec
int3
popa
xor
ss
and
or
cmp
scas
cwtl
cmp
pop
out
out
adc
ret
xchg
or
push
mov
add
cmpsl
or
fstpt
insb
rcll
jecxz
out
push
push
add
inc
pop
lods
pusha
push
or
je
test
mov
mov
enter
adc
ja
dec
mov
xor
mov
sbb
xor
push
hlt
push
mulb
xor
pushf
xchg
pushw
mov
daa
and
jno
stos
and
inc
fiadds
or
inc
mov
mov
inc
test
push
nop
adc
cwtl
pop
stos
adcb
imul
pop
aad
pusha
push
in
push
dec
adc
imul
test
and
jmp
xchg
or
ret
stos
std
jne
aam
dec
outsl
jl
repz
sbb
add
fsubr
pop
adc
adc
inc
adc
and
pop
jnp
cmc
mov
ret
add
push
fistl
xlat
pop
push
adc
ja
iret
sub
aas
jl
adc
push
into
outsl
lcall
dec
mov
or
cmp
aad
adcb
out
xchg
gs
inc
and
je
icebp
xchg
mov
scas
movsl
cmc
dec
jnp
mulb
mov
movsl
jns
inc
test
int
arpl
mov
test
movsb
loopne
and
sti
fs
fnstsw
mov
xor
add
cmc
push
adc
pop
jle
or
subl
loope
rcr
cmpb
sti
ss
and
setne
scas
int
xchg
outsb
sub
mov
nop
jp
mov
cmp
pusha
shl
mov
xorl
repnz
sbb
mov
dec
sub
int3
aad
xor
jmp
imul
push
adcl
dec
mov
cmp
inc
push
or
jno
sub
nop
les
loopne
aas
pusha
lods
pop
mov
gs
lods
andl
sub
or
js
stc
mov
sub
es
or
je
loop
pop
roll
inc
cmpsb
cld
xchg
test
in
pop
sbbb
inc
stos
shlb
add
jno
cmp
mov
aaa
popa
xor
push
cmp
sbb
inc
pop
sub
inc
setbe
pop
enter
dec
jae
test
jp
call
jecxz
adc
ret
xor
das
ret
mov
fiaddl
xchg
clc
loopne
inc
add
les
sahf
xadd
sbb
repnz
hlt
je
dec
sub
xor
jo
idivb
mov
sub
paddusb
or
test
cmp
fidivrl
xchg
popf
cli
jnp
xchg
aas
and
std
sub
inc
push
mov
pop
mov
adc
hlt
int
aaa
arpl
fwait
mov
inc
jp
pop
cltd
adc
add
enter
cs
stos
xlat
mov
adc
pop
les
pushf
jbe
sbb
xor
cmp
pop
push
xchg
rcll
popa
mov
aad
and
into
lods
ja
sbb
inc
sbb
movsb
test
and
fs
or
stc
lods
jp
inc
mov
dec
jg
stos
mov
in
or
dec
or
jecxz
mov
insl
loope
mov
test
movsl
scas
dec
mov
mov
xchg
lock
mov
and
inc
lret
or
jo
dec
adc
xor
or
mov
adc
sahf
adc
mov
cmp
addr16
fmull
xor
or
mov
lahf
aas
fwait
loopne
or
adc
enter
popa
aas
adc
sbb
dec
aad
stos
stc
int3
ds
arpl
stc
and
jae
testb
mov
mov
fisttpll
stc
inc
nop
or
xlat
hlt
jg
lds
into
cmpsl
xchg
fadds
nop
fstpt
dec
cltd
out
jecxz
ret
mov
xchg
mov
mov
mov
in
add
cmp
stos
pop
xor
orl
or
test
mov
mov
mov
mov
mov
jbe
mov
scas
loope
mov
rcll
push
jg
xchg
xchg
cwtl
scas
addr16
jno
jp
movsb
pop
pop
in
decb
and
pop
cmpsl
into
imul
jb
fdivrl
mov
jno
sbbb
fnstsw
call
insb
mov
aas
adc
mov
xor
and
xchg
fisttpl
andl
and
and
ds
loop
cmp
or
sti
mov
jmp
mov
loope
popf
inc
dec
jge
or
adc
pop
stc
push
inc
cmpl
repnz
pop
and
jbe
lods
insl
hlt
dec
jne
push
movsb
mov
mov
insl
outsb
loope
push
imul
leave
adc
or
enter
stos
pop
shrb
gs
fbld
add
cltd
dec
stos
cmpsb
sbbl
xchg
mov
in
mov
es
xchg
xchg
test
and
leave
int3
dec
stos
aas
inc
ljmp
insl
loope
push
jae
cmpsl
xchg
cmpsb
lahf
imul
fldl
shlb
lahf
call
adc
mov
dec
push
jg
adc
and
lock
shrl
sub
jg
rol
sahf
push
leave
xchg
rcrl
movsb
fs
push
ret
push
popa
pop
adc
scas
mov
pop
sbb
mov
dec
stos
movl
cs
in
xor
cltd
fstpt
xor
inc
daa
stc
loopne
add
sub
dec
jns
rolb
test
das
insl
push
addr16
repz
pop
mov
orl
lock
bound
mov
cwtl
fldcw
add
iret
cmp
out
mov
scas
aaa
inc
int3
pop
add
subl
and
nop
popa
idivb
in
xchg
sarl
cmp
mov
orl
aas
push
dec
sub
aad
gs
pop
push
stos
gs
faddl
cli
popa
ljmp
bound
ret
subl
mov
and
adc
test
mov
sbb
enter
shrb
rcll
iret
xchg
xchg
int
mov
pop
and
shll
in
jb
cmp
jle
fmuls
dec
pop
lock
aas
test
xor
scas
imul
and
test
data16
jecxz
orb
sub
mov
mov
in
xchg
xor
xchg
mov
add
scas
add
mov
mov
mov
aad
inc
dec
mov
mov
cmp
dec
xchg
ja
adc
ficoms
add
and
rorl
mov
cmp
pop
push
mov
mov
bound
ficompl
dec
mov
or
call
cli
pop
test
scas
mov
movsl
inc
pop
outsl
ret
data16
std
outsl
sbb
mov
icebp
xor
mov
arpl
pop
jp
jmp
sub
cltd
or
iret
stos
aad
fildl
mov
xchg
sub
mov
sbb
inc
pop
xchg
pop
sbb
mov
in
pop
aaa
dec
sti
jno
sbb
add
les
out
add
inc
rolb
test
aaa
and
push
inc
enter
xor
icebp
cmp
imull
push
xchg
insl
je
lret
ljmp
push
and
enter
ret
inc
inc
mov
das
mov
cmp
in
pop
sbb
mov
mov
aad
mov
dec
loopne
xor
std
rol
or
int3
leave
and
pop
rolb
inc
pop
nop
cwtl
inc
push
jae
in
adc
add
repz
lock
inc
mov
stc
insl
aam
xor
sub
mov
pop
cmp
dec
in
push
in
mov
out
dec
push
mov
mov
iret
sub
jmp
jbe
cs
jmp
pop
dec
js
sbb
and
cld
clc
mov
or
xor
or
mov
loop
ja
xor
repnz
push
sbb
lea
adc
aad
pop
in
clc
out
pop
ja
in
popf
aam
rol
pop
insl
mov
xchg
adc
adc
cmp
pop
add
xor
adc
ds
mov
test
sub
lcall
xlat
mov
fsubrs
or
push
sar
mov
in
push
flds
into
insb
cs
cs
roll
inc
mov
rolb
dec
and
mov
push
cmpl
out
stos
daa
fdivs
jp
add
and
mov
shl
add
imul
mov
pop
lea
aad
negb
not
and
rorb
loop
sub
xorl
mov
push
jge
sub
xchg
inc
imul
inc
cmp
cmpsl
mov
in
lea
es
mov
mov
jp
jmp
inc
inc
movsb
adc
ret
shl
aas
mov
in
push
mov
sbb
xor
cmp
pop
push
pop
xchg
mov
fptan
xchg
jmp
loop
lahf
ficoms
divl
cld
bound
xor
shll
mov
call
push
xor
ds
xor
adc
adc
outsl
int3
mov
add
dec
or
aaa
fbld
hlt
sub
loopne
xchg
push
cmp
mov
mov
jbe
jae
sahf
xor
pop
cwtl
fisttps
cwtl
stos
inc
mov
aam
mov
inc
test
dec
cwtl
push
fistps
test
xor
cmpsl
mov
xchg
mov
add
sub
les
push
mov
inc
sub
jo
outsb
cmp
dec
les
loope
sub
lods
inc
add
push
test
sub
xchg
add
cmc
bound
call
in
fwait
add
aaa
lahf
add
cmp
push
adc
je
adc
test
xor
jp
mov
das
inc
cmp
rorb
sahf
inc
or
arpl
jne
jl
sub
xor
jo
icebp
in
loopne
xchg
loopne
fidivl
addr16
push
cmp
xchg
xchg
rcrl
stos
repnz
lcall
jmp
jne
mov
xor
mov
fsubs
nop
test
xchg
iret
in
cmc
jns
jne
aas
and
jle
je
jns
xor
sub
out
shrl
inc
mov
jge
adc
std
adc
and
in
or
add
mov
sub
call
call
and
add
mov
call
jno
adc
cs
addr16
sub
loop
dec
jbe
shll
push
xor
out
mov
fdivrl
sub
inc
daa
inc
aad
push
aam
add
xchg
push
push
lods
add
push
xchg
xor
sbb
stos
imul
inc
imul
jmp
inc
lcall
jo
sub
into
out
rorb
inc
jmp
mov
pop
aam
in
sahf
cmp
decl
fs
mov
cld
mov
aas
sub
jae
and
dec
xor
pop
sub
ja
ja
inc
movb
jg
aad
mov
cmp
pushf
and
loop
cs
mov
mov
iret
cmc
mov
leave
lock
iret
sbb
mov
lcall
test
mov
pop
cmpps
mov
movsb
push
xor
dec
dec
popa
sti
add
into
filds
xor
sbb
sub
mov
xchg
subl
pop
outsl
jle
popf
insb
and
pop
in
imul
sbb
sbb
inc
mov
incb
stos
or
or
push
in
sub
fisubrl
loope
cli
push
rcr
mov
icebp
mov
imul
hlt
sbb
inc
adc
incl
or
aad
hlt
out
mov
or
ss
jb
mov
mov
fwait
scas
movsl
pusha
rcll
addr16
imul
and
clc
xor
sahf
test
loope
hlt
dec
add
or
adc
jge
nop
push
cmc
or
cmp
movsl
je
int3
adc
int3
mov
or
and
add
and
sbb
or
ds
scas
cwtl
mov
xchg
add
in
jbe
ss
fwait
lods
js
adc
enter
xor
pop
inc
popa
push
jo
mov
mov
cli
in
loopne
and
rol
xchg
mov
mov
and
inc
test
pop
jge
fsubrp
insl
xchg
subps
data16
push
mov
shl
ss
push
push
jo
push
popa
dec
aad
mov
and
pusha
jg
sti
or
test
sub
sbb
mov
std
hlt
xor
cli
subb
out
fscale
or
dec
mov
pop
or
pop
lods
pop
jl
into
mov
mov
or
cwtl
mov
xchg
lcall
loope
insb
pop
push
shl
adc
or
xor
daa
aad
sub
mov
aad
mov
mov
inc
pop
cwtl
sub
mov
bound
xlat
mov
aam
and
jae
jae
movsb
rolb
divb
gs
mov
out
xor
mov
fisubrs
outsb
sub
xor
js
cmp
lods
xorb
sbb
mov
pop
push
notb
jle
mov
stc
mov
jo
xchg
cmp
sbb
sti
adc
and
pop
aaa
dec
sbb
outsb
adc
and
fs
push
pusha
or
jne
mov
scas
mov
xor
arpl
fldpi
cli
jmp
jns
cwtl
sbb
in
jbe
lock
and
and
in
imul
adc
inc
inc
imul
sub
mov
and
mov
addr16
push
test
jmp
inc
mov
int
sub
push
mov
mov
xchg
outsl
pop
sub
pop
or
cmc
push
rorl
out
pop
mov
sbb
cmpsl
mov
push
jecxz
hlt
cli
js
push
mov
mov
push
dec
insl
clc
lcall
or
addr16
ret
sbb
fwait
leave
sbb
pop
scas
insl
test
lcall
push
mov
push
push
push
int3
push
inc
loopne
inc
mov
stos
mov
lea
test
xchg
push
loope
jmp
jl
xor
xchg
lret
loop
xlat
xchg
rclb
or
and
sbb
mov
je
mov
cmp
jae
pop
or
lret
cmpb
jno
and
ja
outsb
scas
add
pusha
mov
lods
out
aaa
cltd
adc
add
outsb
icebp
movsb
jle
push
lcall
xchg
aas
test
popa
rolb
bound
ret
leave
fnsave
sarl
lretw
push
aam
insl
xor
imulb
inc
int3
push
mov
lods
dec
pop
fnstenv
xchg
ss
stc
jg
lods
mov
dec
or
nop
mov
mov
repz
les
mov
mov
xor
fisubs
cmp
icebp
into
add
aaa
push
dec
jle
cltd
jle
cwtl
xor
mov
inc
cmpsb
cmpsb
sahf
data16
mov
ds
movsl
orl
xlat
push
mov
or
jne
pop
cli
outsb
cltd
jnp
jge
push
or
out
add
icebp
mov
lahf
push
jl
dec
out
adc
or
mov
sub
call
sarl
sub
pop
mov
lret
movsl
add
and
or
loop
clc
cmc
ljmp
sbb
into
cmp
lods
adc
cmp
js
aas
sub
lea
imul
sti
push
push
andl
icebp
cmp
dec
stc
ds
in
and
test
push
push
jecxz
and
sub
jno
cwtl
xchg
jbe
fisubs
aas
ficoml
pop
out
push
pop
sbb
inc
adc
xorb
shlb
ja
xchg
push
rcll
ret
cmp
pop
jg
or
lret
xchg
lea
add
xchg
adc
or
aas
sub
xlat
push
mov
lods
js
vmwrite
pop
push
andl
mov
mov
stos
jnp
lret
lcall
push
mov
xchg
orb
jne
adc
rcl
jno
push
sub
cmpsl
out
orl
sti
enter
push
nop
cmpsl
repz
mov
pop
ss
fsts
clc
or
adc
mov
mov
arpl
idiv
mov
inc
mov
mov
pop
cmc
push
inc
insb
fcmovu
push
popf
faddl
ja
ret
lret
rolb
movl
xchg
jmp
sub
lcall
in
push
ret
std
hlt
xchg
mov
xchg
dec
lret
xor
in
das
pushf
mulb
inc
adc
cltd
xlat
and
jl
pop
pop
int
jbe
sub
fldpi
cmp
and
jg
add
pushf
test
loopne
inc
pop
jge
fcoms
jl
sub
aas
mov
stos
in
push
inc
mov
lds
mov
lods
and
mov
xlat
push
add
clc
push
jno
inc
enter
push
in
mov
lcall
push
adc
shufps
repz
or
out
shlw
out
in
bound
cmpl
push
aad
outsl
push
push
push
mov
imul
test
enter
dec
xor
ret
pop
js
into
inc
popa
out
mov
inc
fstps
call
fildll
pop
stc
fldcw
cli
outsb
cli
cmpsl
cmp
push
pop
mov
fiadds
jae
dec
mov
stos
enter
lds
adc
insb
push
daa
xlat
xor
xchg
mov
in
into
mov
rcl
push
pop
lcall
xchg
mov
pushf
in
mov
outsl
xchg
cli
or
fcoms
das
mov
jno
lcall
sahf
fwait
stos
mov
mov
popf
push
jmp
andl
test
dec
jge
or
pop
cmpsb
push
jno
dec
adc
or
mov
mov
cld
enter
ret
add
dec
push
cmp
add
xor
inc
cmp
sub
gs
add
xchg
mov
in
hlt
jns
adc
xchg
mov
stc
mov
mov
stc
aaa
aam
xor
sbb
xchg
movsb
test
cmp
push
inc
cltd
inc
sub
outsb
sbb
xlat
inc
les
mov
mov
mov
aad
jno
shll
xchg
fstpt
inc
mov
sub
repnz
push
pop
es
call
inc
inc
push
cmp
cld
subl
shlb
adc
pop
ret
adc
and
jl
fucom
and
xlat
push
jo
jbe
lahf
cli
add
jae
pop
add
mov
adc
lods
xchg
lcall
roll
loopne
test
jo
xchg
pop
clc
jge
mov
lret
rcr
loope
sbb
or
outsb
xlat
dec
cmpsl
shr
pop
mov
ret
dec
pusha
cmp
movsl
bnd
jl
push
jmp
out
pushf
jp
data16
cmc
jmp
push
jne
xor
cmc
ffree
jle
pusha
mov
push
scas
lds
lret
jnp
mov
imul
mov
push
popf
fsts
fnsave
pushf
mov
mov
cmpsl
jo
fstpl
paddsb
rorb
mov
xor
stc
loope
out
mov
sbb
xchg
add
jo
lods
lds
fs
sbb
out
std
lcall
inc
lret
hlt
fwait
out
cmpsb
xchg
mov
movsb
arpl
cwtl
stc
jge
inc
stos
mov
or
loop
enter
jge
dec
das
ja
jo
mov
add
outsl
ret
pop
push
repnz
push
popa
inc
mov
dec
xor
das
fiadds
test
push
add
stos
shrl
aas
insb
jmp
imul
hlt
mov
cmovl
testb
mov
xchg
stos
or
in
enter
lods
roll
jg
jnp
fsubp
jle
mov
out
loop
scas
mov
sbb
test
in
orl
dec
pushf
scas
fistps
in
xlat
js
xchg
insl
daa
jmp
aam
dec
pop
subb
jae
faddp
lahf
js
mov
sbbl
push
or
in
cmp
mov
fs
stos
or
test
or
pop
adc
prefetcht2
lahf
sbb
flds
inc
lahf
sahf
aaa
jge
jns
aad
jns
sbb
popa
int3
or
int3
insl
out
cmp
pop
ljmp
iret
cld
or
es
fdivl
out
mov
inc
shr
push
popf
dec
int3
jns
and
pop
xchg
mov
in
arpl
xor
popf
repz
hlt
lods
adc
jmp
testl
outsb
pusha
js
cmp
ret
mov
outsb
repz
sub
cmp
sub
faddl
pop
loop
cld
mov
and
std
cmp
pop
fwait
loope
xor
dec
dec
frstor
test
mov
lods
pmulhw
mov
pop
je
clc
cmpsl
mov
mov
mov
lock
pushf
xchg
fs
aad
mov
inc
push
gs
ret
repz
fmull
pop
gs
loopne
push
es
xchg
aas
mov
and
nop
xchg
push
fimuls
sbb
popa
aad
mov
pop
inc
fists
mov
jbe
mov
adcl
mov
mov
cmp
rol
in
xlat
js
out
aad
mov
in
rol
shll
ljmp
leave
ja
and
shrb
stc
shl
xchg
fcmovnu
cs
add
and
lods
inc
stc
mov
xorl
cmp
test
popa
int
jl
adc
jnp
lret
fs
xorb
add
aaa
ljmp
pop
std
and
scas
mov
sub
clc
adc
es
daa
jbe
into
notl
mov
inc
xchg
push
mov
cli
pop
movsl
cld
loop
pop
jecxz
inc
adc
cmp
or
pop
adc
jmp
insb
mov
dec
and
loopne
not
pop
in
jl
bound
mov
jae
inc
jb
cmp
movups
pop
sbb
std
pop
outsl
xor
dec
mov
inc
jecxz
mov
sub
adc
imull
loopne
stos
ljmp
mov
push
pop
lahf
pop
mov
adc
outsl
es
pusha
add
ds
inc
addb
fstpl
call
push
in
and
push
and
sti
xor
xchg
in
jecxz
cmp
xor
add
xchg
stc
mov
mov
add
out
movb
test
sahf
xor
cmpsl
ret
jb
add
fidivl
test
pop
add
add
dec
rcl
sahf
lret
mov
sub
pushf
push
cmp
subb
stc
sub
mov
je
enter
adc
dec
mov
data16
hlt
insl
mov
xchg
fnsave
out
sahf
loope
pop
push
mov
fbld
push
cmp
lcall
jb
adc
push
lahf
int
or
fsubs
pop
aad
cs
and
mov
setbe
outsb
push
inc
es
or
je
pop
push
arpl
outsl
mov
sbb
lock
out
mov
pop
iret
jb
popa
out
into
in
neg
cltd
fadd
add
dec
imul
xchg
adc
out
bound
lock
jmp
daa
sbb
push
ja
mov
xor
lods
or
addb
fnstcw
fbld
js
aaa
or
add
dec
mov
mov
lahf
adc
in
xor
leave
xor
sarl
pop
mov
subb
adc
xchg
outsb
clc
repnz
cmpsl
jne
jns
xchg
shlb
mov
dec
movsl
mov
andb
insw
lea
roll
mov
or
stos
test
icebp
add
jp,pt
mov
ret
sti
pop
and
mov
scas
es
sub
push
rcr
popa
push
arpl
lahf
jo
jne
adc
dec
outsb
cltd
imul
loopne
mov
outsb
test
jno
call
rorb
loop
leave
stos
xor
mov
dec
ljmp
in
mov
pop
cmp
dec
stos
dec
jb
jle
push
lcall
adc
dec
orl
xlat
xchg
cmpsb
push
movsl
cwtl
or
outsl
pop
cmp
cmp
in
cli
push
add
imull
lret
jo
lret
xor
int3
inc
mov
test
loopne
and
rcrb
and
adc
adc
fcompl
dec
out
out
pop
and
mov
jmp
cmp
inc
mov
inc
sub
test
jns
fs
sbb
nop
notb
mov
data16
push
mov
pop
pushf
adc
mov
add
inc
scas
adc
push
cltd
cmc
inc
std
fidivrs
push
fistpl
mov
ds
or
lods
in
pop
and
push
cli
aaa
mov
hlt
lcall
pushf
cmp
lcall
pop
cmpsb
or
mov
add
pushl
dec
push
leave
add
cmp
lock
mov
pop
sbb
or
jge
pop
jnp
cwtl
mov
xor
sti
decl
stos
mov
lea
gs
aaa
les
aad
sahf
hlt
jp
mov
mov
mov
in
std
outsb
clc
in
mov
fadds
mov
or
sti
cmp
jmp
inc
cmp
adc
cmp
mov
xchg
fs
and
and
loopne
data16
pop
in
mov
je
shrl
xchg
int
cld
adc
adc
and
clc
outsl
sbb
stos
push
jns
ds
adc
mov
lahf
int3
mov
dec
sbb
clc
jmp
xor
shr
lret
fsub
aam
rcrb
jae
int3
pop
jmp
gs
sub
mov
mov
mov
mov
adc
sub
mov
push
sti
push
rcrl
loopne
mov
inc
jl
and
mov
mov
fwait
nop
clc
nop
add
push
or
xchg
jns
sbb
stc
out
repz
fcoms
loopne
orl
fwait
mov
dec
out
jb
and
lock
xchg
lods
cltd
movsl
paddb
push
test
jnp
adc
mov
dec
inc
fcmovbe
and
iret
in
mov
into
lock
and
dec
adc
pop
add
xor
aad
rorl
repnz
aad
pop
das
mov
subb
in
adc
addr16
jmp
push
movsl
sub
sbb
sub
inc
inc
pop
and
or
out
fisttpll
and
nop
pushf
dec
aas
mov
or
pop
aad
add
loop
rclb
xchg
sub
call
dec
out
xorl
bound
cmp
sarl
push
or
or
mov
shlb
out
cmp
lret
scas
or
jmp
xchg
cmp
rol
xchg
cmc
in
ret
pop
aam
mov
add
stos
add
loope
mov
dec
insb
push
das
adc
cmp
adc
and
cmp
and
push
in
inc
cltd
dec
jmp
lods
out
cmpsb
sti
push
sbb
orb
xchg
cmp
outsl
mov
jnp
test
dec
fisubrl
push
popf
mov
or
adc
imul
fildl
insb
xor
mov
andl
cltd
gs
call
les
jg
outsl
scas
lds
push
lret
jcxz
mov
sti
enter
mov
mull
stc
stos
pop
inc
cmpsl
ss
clc
pop
cmp
pop
pop
push
adc
ret
and
inc
and
mov
addb
add
test
push
fwait
mov
sbb
inc
mov
sub
notb
inc
aad
movsb
mov
sub
cmp
xor
xchg
xor
xchg
data16
clc
push
jge
sbb
gs
clc
and
push
imul
pop
scas
stos
aaa
inc
xchg
andl
pop
jmp
aam
xor
loope
push
ss
jne
cmp
xchg
push
xchg
shrl
push
aaa
repnz
cmpb
inc
icebp
lods
inc
ljmp
dec
out
mov
jge
cmp
and
data16
xchg
sub
mov
fdivrs
xor
inc
push
push
aad
push
aas
xchg
xchg
jle
iret
sbb
popa
add
inc
sub
pop
mov
dec
mov
jmp
xor
call
in
das
leave
std
scas
andb
nop
fsubr
outsl
fisubrs
cmc
fmuls
in
cmp
fstl
repnz
negl
aaa
pop
xchg
dec
scas
push
dec
jge
cmp
xchg
sub
pusha
xor
movsb
dec
and
dec
push
in
int
or
nop
xchg
nop
fisttps
lock
outsb
ret
cmc
fs
out
inc
stos
pop
mov
pushl
cld
es
ret
and
mov
inc
sbb
call
inc
in
rcl
adc
fucomip
add
pop
and
fwait
or
pop
jecxz
ror
dec
jb
in
push
lock
cmp
and
sbb
out
mov
cmp
rol
cmc
outsb
lret
std
lea
scas
scas
push
dec
ror
xor
mov
stos
mov
popl
fs
and
xchg
adc
sub
in
mov
ja
inc
dec
fnsave
int
jbe
and
shl
jmp
mov
mov
imul
fadd
not
lods
insb
popf
sub
repz
pop
jmp
cmp
sbb
test
mov
enter
in
jbe
incl
xchg
xchg
sub
adc
adc
inc
scas
popa
sub
movsb
ret
pop
jmp
pop
std
cmp
pop
jle
push
xor
scas
sbb
xchg
stos
movsl
sbb
adc
mov
scas
adc
insl
or
fisttps
lahf
jmp
xchg
stos
lock
mov
inc
movsb
jnp
bswap
cmpb
out
inc
xchg
out
inc
sarl
dec
sbbl
jmp
subb
mov
and
xchg
pushw
sbb
iret
out
test
pop
cmp
inc
cmp
call
mov
mov
inc
ja
mov
adcl
xchg
mov
xchg
jl
fsubs
xchg
xor
xor
fwait
jae
into
xor
lods
mov
mov
call
cmp
negb
inc
out
decl
scas
xor
cmp
test
push
call
pop
bound
fdiv
inc
js
cmpsl
jge
push
xchg
inc
cmp
in
mov
adc
lock
call
push
scas
frstor
out
aas
xor
decb
nop
mov
roll
jg
loop
repnz
sti
add
bound
stc
jecxz
xor
inc
mov
xchg
add
pushf
cmp
mov
popa
adc
cmp
aad
jns
dec
nop
dec
xchg
push
mov
inc
insl
jge
sbb
pop
lea
mov
mov
xchg
mov
mov
loop
push
insl
xchg
rorb
add
leave
mov
scas
es
add
stc
dec
data16
in
je
jbe
fsub
xchg
inc
aas
aam
inc
out
add
cs
pop
cltd
mov
or
mov
and
out
sub
and
imul
es
mov
jb
mov
or
sbb
and
jmp
stc
adc
aad
cli
ljmp
mov
or
bound
mov
push
add
mov
flds
testb
lea
cmp
cwtl
pop
push
sbb
mov
jle
leave
xor
or
xchg
mov
orb
mov
cli
sbb
outsl
sub
shlb
roll
and
dec
mov
aam
mov
into
cmp
lods
fnstcw
cmpsl
mov
sub
cmp
popf
xchg
call
clc
sub
movsb
dec
popa
je
insb
fwait
scas
bound
ss
or
mov
push
jecxz
mov
and
insl
dec
movsb
xor
cmpsl
pop
jge
dec
cmp
dec
add
cwtl
daa
dec
mov
icebp
out
adcb
insl
mov
inc
sub
shrb
push
pop
jle
ret
pop
sub
jo
inc
cli
jno
mov
iret
aas
rcl
xchg
fidivs
xchg
aaa
sub
adc
bound
mov
jne
dec
dec
jo
xchg
mov
add
xor
cmp
cmp
xor
push
dec
push
sub
and
xlat
mov
aam
icebp
and
and
push
sahf
stc
sbb
or
adc
in
mov
or
stos
dec
std
daa
mov
ret
jno
or
sti
and
pushf
sub
popa
shll
mov
mov
scas
xor
xchg
jge
dec
imul
je
mov
and
push
fnstenv
clc
lret
cli
mov
sbb
int3
inc
push
pop
push
dec
iret
mov
aas
mov
stos
jp
xchg
fs
sbb
jne
cmp
aas
mov
add
add
sbb
xchg
inc
mov
inc
inc
dec
fidivrs
inc
xchg
loopne
dec
test
push
pop
jo
xchg
shl
outsb
and
mov
rol
imul
cmp
decb
movsb
xchg
idiv
xor
sub
pop
add
popa
out
xchg
push
addr16
sti
and
jg
sbb
sbb
int3
mov
pop
jle
pop
push
sbb
leave
movsl
cltd
or
jle
into
icebp
imul
cmp
leave
push
mov
pop
fidivl
pop
or
inc
into
loope
lcall
adc
cmpsb
or
pop
popa
loop
js
push
divl
cmpsb
cmp
mov
xchg
test
aad
into
mov
xchg
insb
mov
mov
xchg
dec
iret
lods
lcall
movsb
jge
mov
ret
mov
mov
or
add
xor
out
ja
lret
inc
jnp
cmp
pop
loope
in
flds
jne
push
dec
mov
add
ja
push
cwtl
loop
inc
mov
pop
xchg
mov
sti
xor
lea
lea
pop
and
inc
lret
fidivrs
jb
fisubl
dec
mov
lock
icebp
fnstsw
les
xor
arpl
push
call
mov
dec
add
dec
inc
test
lret
xor
loope
cmp
mov
pusha
pop
cld
lret
mov
sbbl
and
divl
sbb
pop
mov
cmp
outsb
cmp
sub
scas
int
imul
pop
lcall
es
in
imul
lock
jae
addr16
clc
and
mov
xor
push
sub
pop
mov
xlat
sub
xor
sbb
xchg
into
xchg
fsts
or
in
xchg
test
xchg
sbb
mov
and
test
mov
jb
sub
rcrl
cmp
and
pop
xchg
dec
or
call
outsb
xor
or
pop
mov
fldenv
jmp
cmpsl
stos
bnd
cmp
and
mov
or
cld
fwait
dec
adc
arpl
addr16
into
into
adc
lahf
and
imul
imul
push
mov
mov
xorb
cltd
call
lcall
ficompl
leave
mov
repnz
pop
add
add
fiadds
cld
insb
rorl
gs
mov
call
mov
sbb
push
int3
lock
cwtl
gs
pop
mov
jo
sub
add
in
and
or
fldcw
imul
into
xor
mov
es
cltd
fdivl
mov
inc
jns
fisubl
in
into
movsl
cld
ret
jge
sbb
nop
imul
push
dec
aas
adc
adc
pop
adc
and
and
movsb
push
fmuls
mov
out
mov
mov
and
push
dec
sub
enter
lods
aam
ret
dec
push
sub
outsl
sub
iret
cmpsl
dec
inc
call
loopne
pop
jbe
mov
dec
daa
mov
xor
sahf
repz
enter
push
mov
pop
xchg
dec
pop
push
loope
fs
jl
dec
push
mov
mov
jle
fnsave
aas
push
pop
clc
fcoml
add
pop
mov
mov
sub
hlt
xchg
cmc
xor
sbb
pop
xor
inc
lods
cmp
or
inc
fadd
mov
dec
xchg
mov
adc
add
xor
push
out
mov
push
lock
inc
out
mov
push
out
shrb
jp
sahf
mov
fxch
and
inc
dec
inc
insl
pop
stos
push
subb
orb
pop
pop
sub
lock
add
fiadds
pop
mov
inc
lea
vpextrw
lds
cmp
icebp
fdivrl
mov
push
sbb
int3
xchg
movsl
dec
xchg
pop
outsl
or
call
and
sbb
hlt
pop
and
adc
xchg
daa
and
push
sbb
and
sbb
dec
mov
sub
andl
test
push
mov
sbb
cmp
pop
dec
nop
push
sub
pushf
cmp
outsb
adc
add
dec
fs
xchg
cmp
jae
inc
push
jno
lods
pop
dec
sbb
scas
cmp
lds
inc
int
cwtl
gs
loop
xor
movsb
movsb
fcmovu
mov
sahf
clc
xchg
cmp
std
adc
or
leave
mov
sub
ja
daa
shll
test
push
scas
or
or
out
call
sub
xor
jns
jmp
outsl
std
mov
adc
sbb
cmpsb
jnp
lcall
dec
aaa
and
dec
mov
jp
push
and
mov
pop
and
ds
sub
jle
fstl
xor
mov
test
adc
xor
insb
das
cwtl
clc
cmp
adc
dec
enter
cli
in
mov
shrb
mov
cmpsl
push
jo
lock
mov
int3
cs
xor
fistl
or
aas
push
clc
xor
les
mov
orb
in
or
frstor
or
fcmovnu
adcb
in
mov
xor
cmp
out
xchg
into
xlat
dec
popf
push
test
je
cltd
in
mov
test
lock
int
in
add
pop
mov
dec
sbb
and
stc
or
xchg
arpl
fstp
in
push
push
js
xchg
add
js
movsl
push
das
sahf
jae
iret
fs
fcomp
scas
mov
mov
mov
cli
mov
cs
into
mov
in
inc
sbb
jl
adc
xchg
mov
clc
xor
jo
shlb
out
outsl
mov
mov
aad
movsb
aas
clc
mov
xor
popa
add
mov
addr16
cmp
and
mov
mov
enter
xchg
aas
pop
adc
cltd
repnz
push
jl
test
dec
lcall
sti
daa
mov
xchg
jbe
or
sahf
mov
fmuls
je
int
or
adc
jl
mov
aam
cld
into
ds
add
testl
arpl
in
nop
mov
bound
xor
cltd
mov
add
xor
subl
push
adc
push
mov
loope
shl
jb
test
add
adc
cmpsb
mov
lret
popa
imul
out
ljmp
push
arpl
rcl
push
mov
or
push
mov
xor
enter
jmp
hlt
es
orb
dec
inc
into
int
imul
mov
or
push
fadds
sub
pop
fcom
jle
xlat
int3
cmpsb
sbb
enter
lds
push
test
and
dec
xchg
mov
divb
stos
insb
xor
scas
insb
cmp
sub
outsb
lds
push
sbb
rorb
add
inc
mov
push
iret
imull
scas
inc
push
sbb
pop
subl
xorb
cmp
mov
outsb
mov
cltd
mov
and
mov
dec
mov
outsl
pop
xor
or
add
xchg
call
les
push
imul
mov
mov
xchg
mov
xor
fisubs
aas
mov
rclb
arpl
in
cmp
cmpl
rolb
adc
jae
stc
or
push
jne
lcall
adc
hlt
sub
cmpsl
add
push
pop
bound
rcrb
lcall
out
bound
sub
push
aad
iret
imul
xchg
add
push
xchg
xchg
mov
push
loop
mov
cmp
enter
jns
cmp
pop
cmp
dec
cmc
and
sbb
xlat
pusha
movsl
cs
inc
mov
addr16
das
rcll
test
out
cmp
pop
mov
cmpsb
in
sub
mov
lock
cmpb
sub
xchg
sbb
imul
scas
push
pop
pop
bound
mov
lods
das
xor
mov
mov
fs
dec
addl
sbb
dec
popa
and
sub
mov
sti
bound
iret
repz
cmp
test
mov
in
push
stos
icebp
xor
nop
ss
push
pop
jo
xchg
out
arpl
or
out
out
shrb
lret
pop
xchg
mov
imul
je
sbb
sahf
addb
jmp
jae
pop
and
cld
mov
fdivl
cmc
xchg
rcrl
aaa
inc
shll
jae
xchg
inc
push
into
sti
outsb
inc
push
mov
popa
cmp
in
sub
pop
jae
and
call
pop
sub
or
sub
pop
test
jmp
push
and
imulb
arpl
jno
lea
repnz
int
cmp
mov
iret
adc
xchg
push
or
lods
dec
fcomip
lcall
aas
lods
push
cmp
adc
xor
insl
in
inc
cmp
pop
jg
mov
loopne
insb
xor
sub
dec
outsl
mov
stos
stos
xlat
add
lahf
sub
xorb
adc
dec
loopne
in
addr16
mov
sub
out
mov
xorb
push
mov
sub
pop
and
push
cli
mov
ret
cld
pop
ljmp
cmp
movsb
jo
sub
imul
dec
push
ljmp
add
clc
imul
inc
sbb
testb
xlat
shlb
lea
mov
mov
dec
mov
dec
cmp
repz
je
and
push
sbb
femms
xor
push
push
lret
out
push
fnsave
push
mov
sbb
sub
in
icebp
or
adc
shlb
lret
inc
jl
pop
in
repz
cmp
pop
mov
sbb
insb
in
fisubs
addr16
cmp
cmp
out
and
ljmp
and
jg
sahf
adc
outsb
leave
push
pop
and
dec
lret
sbb
or
inc
sub
mov
push
mov
femms
inc
and
jns
mov
pop
popf
arpl
mov
clc
mov
movl
xchg
enter
test
stos
clc
aad
nop
adc
inc
adc
jle
icebp
pop
inc
mov
imul
jg
es
cmp
adc
or
data16
les
jb
sbb
test
or
scas
adc
pop
ljmp
mov
repz
and
mov
mov
and
mov
add
lcall
paddd
cmc
mov
ret
lret
push
mov
clc
je
sub
fidivs
movsl
popa
cmp
dec
jne
jo
sub
loop
adc
push
xchg
dec
popf
test
xor
outsl
ds
mov
roll
pop
jmp
outsl
mov
mov
out
push
mov
bound
sbb
in
rcl
mov
lods
push
fimuls
popa
loope
xorb
stc
decb
cli
mov
adc
lods
dec
mov
lret
cmc
and
aad
adc
filds
cs
cs
sbb
lahf
lcall
sbb
jecxz
fildll
jno
scas
stc
mov
mov
xchg
iret
out
popa
rolb
test
fcoms
imul
mov
xchg
and
rol
xchg
in
and
mov
add
insl
ss
xor
outsb
add
popa
fsubs
inc
and
inc
lods
cli
repz
adc
les
jnp
sbb
cld
int3
adc
fcmovb
pmulhw
loop
rcr
dec
mov
not
sub
sbbl
lock
mov
sub
xchg
push
cli
push
add
je
xlat
call
mov
shlb
nop
outsb
ret
add
sbb
ljmp
jb
std
and
movsb
mov
out
lahf
pop
hlt
jno
add
repz
ret
insb
sub
aad
ja
dec
pop
stos
in
stos
lock
jle
mov
aam
in
pop
sub
or
ds
inc
or
mov
push
push
jne
stos
test
flds
dec
js
cmp
cmp
cld
into
sub
lcall
iret
lods
mov
jp
sbb
cmpsl
mov
imul
push
out
mov
mov
outsl
or
rcl
ljmp
repnz
mov
ds
test
dec
or
jle
cmp
fmull
xchg
cwtl
inc
aas
and
orl
adc
stos
jp
ss
ljmp
mov
scas
divb
jmp
pop
or
lret
xchg
cmp
fwait
inc
cli
scas
adc
imul
sahf
sbb
insl
shl
sbb
dec
jns
fs
cmp
xor
jbe
pop
leave
movsl
mov
daa
out
shll
popf
mov
cltd
int3
in
loop
arpl
jge
pop
divb
leave
or
sub
mov
mov
popa
push
test
sbb
rclb
sub
xor
cs
insl
xchg
add
clc
jo
mov
lcall
dec
xchg
loope
out
xor
sub
ficomps
es
call
out
jae
mov
mov
push
nop
and
jecxz
rolb
sub
inc
xchg
cmp
imul
lods
push
add
jae
sar
ss
push
int
jle
mov
jb
xchg
mov
outsl
leave
sbb
insb
fmul
and
bound
jno
jg
outsl
inc
sti
cwtl
sbb
mov
ficoms
mov
gs
call
mov
cld
push
jl
mov
jne
mov
jns
insl
out
inc
out
daa
ljmp
xchg
mov
movsl
out
xlat
xchg
and
or
inc
inc
scas
sarl
pop
jmp
mov
in
imul
push
sub
lret
incb
sbb
mov
mov
or
pop
jp
sbb
mov
and
outsl
push
lcall
sbb
xorb
xor
stc
xlat
out
xor
mov
xor
repz
pop
sbb
add
jg
je
test
ljmp
push
fstl
dec
or
add
mov
test
inc
pop
cmp
fstl
push
xchg
add
mov
xchg
insl
and
cmpsb
and
inc
imul
ror
leave
or
cmp
cmovp
pop
mov
add
fwait
cmp
in
xchg
dec
es
repz
jge
stos
rclb
xchg
sahf
add
inc
jnp
pop
add
xor
sub
dec
cmp
shrb
sub
scas
xor
push
push
mov
fbld
mov
mov
in
faddp
das
mov
jno
je
rolb
std
repnz
cmpsb
les
pop
lret
clc
mov
and
pushf
in
orl
xchg
inc
xchg
and
cmc
xor
repz
orb
pop
push
xor
aas
lcall
jb
mov
dec
std
push
mov
jb
push
cmc
ret
sbb
sahf
call
mulb
lods
or
setb
push
fcompl
dec
scas
out
test
mov
es
xchg
insl
xchg
loop
popf
jae
push
inc
mov
xchg
mov
mov
das
xchg
mov
loope
ret
sub
mov
int
or
dec
paddw
repz
inc
mov
mov
add
inc
fnstenv
push
outsb
xor
inc
test
ja
gs
cld
lods
lods
ret
or
inc
mov
dec
inc
xchg
rclb
daa
movsl
test
push
insl
ret
xchg
add
pop
inc
aas
fsubs
in
cmp
jp
inc
out
stos
or
add
add
in
xchg
add
push
mov
cli
push
add
mov
stc
jb
loop
pinsrw
mov
pop
scas
in
adc
outsl
popf
adc
aaa
sbb
popa
and
pop
jg
in
jmp
pop
or
movl
sub
jnp
add
iret
or
mov
in
push
cld
cmp
xlat
stos
sarl
jle
mov
leave
imul
pop
mov
dec
jecxz
andb
jnp
iret
outsl
cmpsb
mov
test
jg
mov
addl
mov
sub
fiaddl
shr
inc
test
push
aam
jecxz
insl
jno
push
in
cld
cmp
sub
jae
jns
std
cmpsl
and
aam
sub
shrl
dec
rcrb
ds
xchg
icebp
jmp
jmp
addr16
xor
rol
loop
xchg
subl
mov
mov
push
jbe
iret
movsl
mulb
push
stos
fbstp
je
cmp
or
lahf
mov
shl
pop
scas
push
movsb
in
sarb
nop
rorb
adc
aaa
xchg
hlt
sahf
mov
into
or
or
xlat
rclb
aam
aam
or
mov
sub
fs
lea
jb
icebp
popf
push
sbb
imul
mov
stos
iret
jb
sbb
rcrb
cmp
cmp
daa
insb
add
mov
ljmp
and
cmpsl
in
cmpsb
push
dec
fcmove
dec
aas
int
andl
into
dec
stos
pop
cmp
dec
fdivs
nop
lods
xchg
loopne
data16
arpl
mov
lahf
lret
rolb
repnz
insl
push
mov
repz
cmc
mov
popf
cld
sub
leave
not
jmp
and
sbb
lea
mov
inc
add
cs
call
pop
cli
and
add
cld
loop
movsb
jp
lahf
in
mov
push
cmp
test
aas
sub
and
pushf
dec
dec
jg
xchg
push
aad
or
sbb
push
movsl
mov
and
jecxz
sti
stc
shlb
dec
ror
mov
lahf
xor
mov
aam
sar
mov
xchg
jle
and
and
pusha
xchg
dec
fnstenv
ss
shufps
mov
clc
jno
mov
aam
mov
and
andb
pop
xor
scas
fcmovb
and
call
cmp
sub
imul
imul
int
fistpll
or
pop
shrb
xor
xlat
inc
icebp
mov
es
pop
push
fldenv
sti
sbb
lods
push
std
mov
xchg
subb
adc
call
outsl
lahf
cmc
mov
cmp
jle
sub
fwait
stc
divl
push
nop
and
insb
inc
cld
test
loopne
dec
imul
cmpsb
in
push
xchg
pop
daa
sbb
in
pop
mov
lds
push
adc
cld
cmp
pop
repz
incb
scas
pop
and
jbe
mov
mov
outsl
push
pop
movsl
in
imul
inc
loope
mov
arpl
cmp
daa
inc
mov
push
cmp
sub
inc
out
lea
fwait
push
mov
popa
je
cli
shll
lea
aas
es
je
jb
lea
negb
clc
mov
out
repnz
popa
test
xchg
jg
jle
mov
mov
dec
repnz
sbb
push
nop
iret
das
orb
and
add
mov
in
stc
mov
and
dec
in
xchg
hlt
mov
jge,pt
call
ds
mov
dec
adc
or
cmp
jp
jg
rorb
lret
hlt
fcoml
jb
loope
aam
dec
jmp
imul
ret
or
ret
fsubrl
push
add
cmpsl
mov
xor
xchg
shrb
push
mov
dec
das
cmp
stos
pmaxub
test
adc
add
imul
dec
cwtl
data16
clc
add
outsb
fcomps
rol
push
pop
sbb
ret
mov
cwtl
pop
fists
fdivp
loopne
xchg
mov
mov
lds
enter
xchg
push
dec
xchg
mov
dec
cs
xlat
nop
cmp
mov
mov
addl
jecxz
jmp
out
dec
jno
mov
xchg
out
xor
inc
andb
sbb
push
sbb
mov
data16
adc
enter
sub
in
mov
lods
xor
jb
xor
pop
loope
outsb
adc
test
cs
movsl
push
jl
sahf
pop
arpl
pop
divb
xchg
ljmp
fldenv
sbbl
jmp
testb
jb
test
push
orb
lods
imull
sahf
inc
jmp
pusha
fstpl
in
imul
sub
movsl
and
and
add
add
mov
push
minps
iret
cwtl
adc
inc
dec
imul
scas
cmp
das
dec
leave
jnp
idiv
outsl
xchg
scas
cmp
sub
push
pop
pop
call
imul
or
movsb
scas
xchg
lds
enter
cwtl
scas
fcom
jns
stos
imul
push
add
mov
clc
add
jae
test
xorb
push
inc
cmp
clc
add
dec
cld
and
add
es
sahf
xchg
andb
mov
fisttpl
cmp
daa
icebp
jo
insl
mov
push
or
std
add
xor
aam
lret
mov
ja
mov
push
inc
adc
mov
in
aad
fdivr
xchg
adc
cmp
pop
xchg
lds
mov
pop
xor
mov
addb
and
cmp
or
or
fwait
ret
pop
mov
mov
test
je
jl
mov
add
div
pop
leave
mov
lcall
inc
add
inc
jbe
dec
xchg
sbb
pop
iret
xchg
mull
inc
stos
dec
adc
adc
fsubs
inc
rcll
jno
sub
cmpsb
adc
rorb
les
xchg
sub
xor
adc
insl
insb
movsb
sbb
push
jl
sbb
adc
dec
jno
dec
scas
sbbl
adc
loope
inc
dec
ficompl
pop
add
add
movsb
add
sti
mov
out
sbb
mov
pop
ljmp
shll
lock
xchg
aaa
movsb
mov
xor
jo
xchg
out
lret
mov
add
outsb
sbb
add
and
mov
or
roll
push
xchg
cmp
jae
add
out
lods
nop
mov
in
jbe
cs
fisttpll
lock
enter
sub
idivl
jne
cmp
nop
je
loope
dec
gs
pop
out
test
add
pop
aas
fwait
div
in
pop
test
dec
mov
cmp
or
push
mov
adcl
test
xchg
adc
xor
push
sub
xor
repz
outsb
xor
pop
mov
pop
jbe
jecxz
sbb
shll
es
pushf
cltd
mov
fdivl
lcall
and
cmp
adc
inc
xor
jg
push
js
mov
ss
aam
mov
lret
inc
mov
leave
cmp
loopne
loop
sbb
jle
sub
jns
loop
or
sbb
scas
mov
loopne
and
dec
dec
por
fstl
mov
mov
inc
xchg
pop
mov
mov
sbb
xor
jns
xor
adc
fldt
scas
jnp
cmp
ss
movsl
test
push
sbb
push
daa
mov
in
push
fldt
in
lahf
adc
cmp
jno
int
imul
jmp
das
sbb
cmp
add
aas
test
mov
cli
xchg
and
addb
movsl
aam
jbe
mov
pop
sub
repnz
adc
mov
mov
adc
adc
mov
fbstp
mov
ss
imul
call
push
mov
and
inc
fcoms
adc
xchg
dec
aas
sub
add
hlt
lds
xchg
dec
mov
push
scas
aas
repnz
mov
adc
pushf
jae
or
mov
push
jecxz
sti
rcr
jp
push
push
mov
cmp
pop
mov
stc
mov
aas
fildl
iret
imulb
cld
in
mov
xchg
xchg
mov
add
sub
aas
shlb
sar
cmp
push
ret
cwtl
insb
insb
pop
stos
movsb
sbb
lret
out
arpl
fisubl
mov
dec
lcall
xchg
roll
xor
push
push
imul
or
nop
stos
inc
aad
leave
mov
cmp
push
scas
imul
dec
in
leave
test
sbb
sbb
xchg
fdivr
loopne
lods
adc
jns
shll
sbb
shll
pop
shrl
shr
jp
out
add
or
lds
jge
jnp
lods
fbld
out
aam
jg
push
mov
jg
inc
cmp
jg
pop
es
jne
mov
xchg
adc
cmp
outsb
cmp
aas
jns
or
dec
das
push
es
add
loopne
clc
in
sbb
leave
into
xchg
jmp
rorb
imul
inc
mov
inc
mov
or
loope
movb
aas
stc
in
inc
lcall
inc
dec
in
imul
stc
xor
dec
push
int3
push
sub
fdivs
sub
cmp
es
enter
iret
mov
mov
outsl
dec
repnz
xchg
push
out
loopne
push
mov
jle
jbe
or
push
out
pop
or
test
sbb
sub
sti
mov
repz
push
mov
popf
mov
xchg
add
fidivl
and
movsl
push
in
mov
and
stos
inc
mov
inc
xchg
pop
neg
je
cmp
xchg
push
movsb
jecxz
adc
mov
fcmovnb
jb
out
mov
repz
dec
loope
enter
fbstp
pop
or
mov
icebp
ret
dec
push
mov
call
dec
cmp
nop
cmp
insl
jl
daa
mov
jno
imul
or
cwtl
xchg
shl
jb
xchg
pop
test
idivl
pushl
xchg
ss
stc
mov
push
popf
dec
mov
imul
xor
arpl
xchg
in
cmp
adc
js
in
int
mov
stos
mov
pushf
mov
out
xor
enter
mov
imul
call
mov
adc
and
outsb
std
lahf
aam
sahf
addr16
cwtl
jg
mov
aad
sub
dec
dec
mov
mov
pop
out
mov
lods
inc
int
sub
loopne
sbb
inc
lods
pop
test
adc
pop
lods
or
xor
test
pop
fsubrl
fadds
shl
jae
jbe
mov
je
push
or
xchg
insb
sbb
lea
jnp
fwait
das
adc
aaa
stc
xchg
loop
add
xchg
lods
test
mov
push
test
or
inc
adc
filds
inc
push
filds
incl
aad
push
cmp
jecxz
cmp
pop
xchg
inc
lods
mov
jg
lds
pop
jp
es
sub
xchg
sbb
cld
cld
pop
icebp
lea
or
sub
inc
push
inc
movsl
lods
ret
movb
hlt
sbb
stc
mov
test
mov
xchg
pop
movsb
cltd
pushf
adc
test
sbb
lods
ds
or
icebp
fwait
mov
in
xchg
jns
push
inc
mov
loope
lcall
aad
lcall
mov
jo
push
cmc
jnp
mov
daa
out
adc
jbe
xor
pusha
scas
sbb
pop
out
ljmp
jbe
shll
add
pop
add
std
sti
mov
inc
jmp
subl
aaa
xor
popa
gs
xchg
push
jl
jbe
adc
iret
add
movsl
cmp
stos
pop
nop
sub
xor
mov
pop
pop
loop
lock
mov
lahf
xchg
dec
mov
and
aam
fcmovbe
push
or
push
xchg
sub
outsb
inc
shll
sbb
movsl
int3
test
jle
push
loop
movsl
fdivrp
rorb
dec
loope
das
fstpl
push
stos
movsb
rcrl
jp
leave
call
mov
aam
je
out
sub
icebp
xor
bound
arpl
in
repz
call
out
xchg
sub
movsb
pusha
sbb
jecxz
movsb
pushf
ret
outsl
in
dec
imul
xchg
xchg
dec
cld
add
mov
xor
popa
pop
call
xchg
sub
stc
xchg
mov
push
adc
enter
xorl
scas
pushfw
xor
jbe
mov
sbb
aad
roll
mov
and
sbb
jns
lock
rcll
sub
mov
mov
sbb
xor
push
scas
std
xor
insb
push
jge
xor
cmpsl
jo
jl
int
xchg
in
test
jb
mov
push
xchg
xchg
add
xchg
lcall
dec
aas
and
shlb
out
mov
rcrl
loop
ljmp
add
cmp
pop
mov
push
cmpsb
jmp
or
insl
call
xchg
sbb
mov
mov
adc
iret
fistpl
mov
pop
xor
fwait
inc
jo
adc
sub
sbb
ret
push
movsl
out
int
imul
inc
and
cmp
sub
add
push
int3
into
les
in
pusha
sub
add
mov
lds
push
insb
ret
call
cmp
xor
mov
sub
adc
adc
movsl
scas
int
incl
scas
adc
xchg
push
pop
mov
push
popa
daa
shlb
sti
adc
add
ds
dec
aaa
testb
out
ret
push
sub
cwtl
jb
sbbb
mov
xor
ret
sbb
das
jmp
mov
lods
js
adc
lcall
imull
xor
inc
nop
stc
push
sub
lods
in
and
test
mov
js
das
inc
cmp
sbb
jne
or
and
rcr
test
jo
mov
add
push
push
mov
sub
dec
xor
inc
jp
xchg
addl
lods
jae
in
dec
stos
cltd
test
fdivrs
repz
push
repnz
sub
in
shll
fdivs
pusha
into
adc
sbb
push
lds
fildl
popf
xor
in
test
xchg
fmul
pop
imul
test
int3
int3
popa
xor
pop
add
jge
aaa
dec
cmp
dec
pop
xor
push
cmp
inc
lcall
lahf
test
mov
xchg
adc
mul
pop
testb
or
mov
ja
jl
lcall
fidivl
and
xchg
pop
lcall
outsl
ficoms
xor
adc
mov
scas
sahf
cwtl
in
addr16
cld
mov
adcb
popf
ret
xchg
stos
cwtl
test
sub
out
xor
pop
or
gs
dec
xor
push
xchg
jno
rcrl
sub
imul
sub
dec
xchg
arpl
push
jne
sbb
sbb
mov
push
dec
lods
push
sbb
jp
dec
and
test
cmp
js
roll
jmp
in
inc
lods
mov
in
mov
xchg
xchg
sub
outsl
ret
mov
push
pop
aam
pop
add
dec
es
popf
test
dec
in
sub
dec
test
sbb
sbb
lahf
jmp
adc
nop
inc
push
cmpsb
inc
ja
mov
lea
inc
jp
popf
adc
or
and
adc
pop
adc
scas
fidivs
shlb
test
cmp
inc
sti
push
fisttps
fdivl
notl
adc
add
loope
and
btsl
aam
xor
or
mov
mov
adc
adc
sbb
push
ljmp
in
sub
inc
incb
dec
cmp
add
outsl
adc
push
and
hlt
popf
mov
jmp
stc
cwtl
mov
pop
stos
jle
das
inc
stos
repz
mov
mov
fadds
lea
push
inc
mov
scas
mov
pop
divl
xor
push
pop
and
pop
nop
jp
into
jecxz
xor
popa
cld
mov
data16
mov
sub
mov
repz
push
add
data16
stos
popa
push
outsb
xchg
fld
xor
push
mov
arpl
and
out
ljmp
fisttpll
pop
shrb
mov
call
dec
loop
dec
stos
add
jne
les
insl
cmp
aas
xchg
gs
mov
sub
das
ljmp
adc
add
loope
pop
cld
mov
push
outsl
shlb
jbe
outsb
shl
mov
rcpps
push
inc
mov
rorb
add
xchg
mov
mov
cltd
jne
pop
nop
imull
stos
dec
xchg
cmp
or
xchg
imull
mov
sbb
nop
pushf
or
imul
mov
pop
pop
call
leave
out
mov
lds
cmpsl
xchg
push
xchg
sub
ror
mov
inc
lds
jno
cwtl
lock
push
es
incb
adc
pop
or
loope
mov
cs
push
fsubl
push
add
push
mov
jmp
ret
jmp
mov
jo
outsb
and
ret
push
shl
pop
test
add
call
mov
xor
mov
cmp
sarl
sub
mov
lret
xor
xchg
ljmp
add
pop
sub
cld
dec
rolb
int3
and
daa
jle
aam
dec
out
fcoml
sbb
pop
dec
cmpsl
leave
into
lock
inc
enter
mov
bound
xor
shl
push
lahf
cmp
dec
xor
iret
adc
mov
sub
popl
adc
ds
pop
push
aam
ret
das
add
push
xor
pop
addb
imul
jmp
addl
data16
movsl
out
into
pop
dec
into
sbb
mov
xor
clc
mov
out
mov
arpl
sub
pop
fnstenv
add
ds
jo
pusha
mov
add
outsl
test
ss
dec
mov
leave
adc
sbb
int
cld
stc
fmull
push
jecxz
cmpsl
enter
ljmp
mov
cmpsl
mov
cli
insb
or
aas
bswap
imul
sbb
sub
sbb
mov
inc
out
jecxz
lods
int3
add
loop
mov
sbb
dec
mov
mov
ret
jae
stc
fs
dec
icebp
xchg
aad
in
xchg
fcoms
mov
enter
inc
jbe
jb
int
or
ja
xor
stos
xchg
jae
test
or
clc
aas
pusha
sub
test
in
or
push
xor
cmp
sbb
out
outsb
loope
mull
jg
rolb
xor
icebp
addl
loop
add
movsl
lret
push
clc
jns
test
xchg
xor
test
cwtl
sbb
lods
and
test
cmp
and
ss
or
icebp
sbb
vmulss
jnp
or
dec
daa
iret
scas
arpl
xchg
ret
xchg
aaa
fnstenv
insl
cmpsl
nop
sti
or
aas
pop
out
sbb
xchg
loopne
and
xchg
or
push
ficomps
addr16
cltd
bound
dec
repnz
je
sub
xor
xchg
mov
dec
and
jae,pn
add
mov
lods
rclb
ljmp
mov
and
int
sub
jmp
popa
lods
cmc
jge
pop
jb
mov
pop
test
push
arpl
out
negb
mov
xchg
add
rclb
xlat
inc
cmp
sub
mov
push
mov
sub
loopne
inc
push
mov
jno
inc
mov
push
mov
rcrl
xchg
xchg
mov
adc
sub
and
push
xchg
push
dec
adc
outsl
dec
fsubrs
push
cmp
xchg
jge
jns
adc
notb
scas
mov
insl
push
jo
fstpt
inc
jge
popf
or
xchg
pop
movaps
loop
pop
movsb
in
adc
stc
iret
sarl
inc
lods
addr16
notl
addr16
push
jle
insb
pop
and
loopne
shll
push
mov
jo
ret
imul
sbb
jae
sub
jmp
and
mov
push
cli
lret
into
and
mov
mov
rcrl
ja
cmpsb
inc
fwait
xor
xchg
or
int3
outsb
mov
js
int3
sub
pop
xchg
push
je
ja
dec
js
add
mov
inc
sarb
cmp
movsl
sub
adc
dec
cld
push
xlat
push
iret
ffreep
cmpsb
jnp
ss
add
jle
cmp
dec
pop
dec
rcrl
shrb
mov
add
aas
mov
xchg
das
cltd
mov
and
je
pop
inc
add
jle
mov
pop
mov
pop
int3
inc
sahf
mov
xchg
loop
sbb
sbb
jp
xchg
ds
xor
jbe
lea
ljmp
das
idiv
jle
js
popa
mov
stos
cli
pop
ficoml
icebp
push
pop
loop
xchg
pusha
inc
fucomi
fcom
leave
adcb
or
imul
pop
push
or
out
xchg
test
adc
lahf
rcll
lret
test
sub
adc
xchg
jne
std
jmp
jbe
imul
xor
sbb
xlat
dec
pop
scas
insl
pop
mov
pop
pop
jg
rcrb
inc
mov
stc
lock
mov
clc
je
dec
jno
mov
or
mov
cld
ret
data16
out
outsb
sahf
nop
add
xchg
push
mov
mov
movsl
cli
popa
jo
cmpsl
pop
mov
or
sbb
outsl
stos
and
pop
mov
orb
je
sub
call
dec
mov
jae
mov
sti
sub
lret
lds
jg
pop
stc
push
ror
sti
popf
roll
jmp
inc
dec
sub
test
push
xchg
mov
stos
cmp
sub
mov
cmp
xchg
leave
mov
lods
out
inc
fldt
xlat
pop
mov
decb
ds
pop
push
sbb
sbb
jmp
xchg
lea
movsb
int
sub
aam
inc
aad
sbb
mov
in
adc
mov
fistpll
into
cltd
mov
cs
cli
pop
ret
outsb
insl
or
xchg
add
cmp
adc
and
mov
stos
xor
mov
outsl
mov
xchg
mov
pop
push
jmp
rcrb
dec
stc
cmpsb
push
fnstenv
sbb
fisttpll
pop
mov
mov
mov
mov
xchg
adc
pusha
mov
cli
cmpsb
inc
mov
out
sub
outsb
add
mov
jmp
mov
sbb
jecxz
xchg
inc
call
leave
daa
lahf
dec
ret
aas
push
jmp
xchg
push
push
cmpsl
mov
shrl
jge
nop
ret
pop
notb
cmp
pop
adc
ds
cmp
ljmp
mov
xchg
pusha
rolb
movsb
mov
movsb
mov
jle
dec
movsb
mov
les
and
popa
cmp
and
gs
xchg
and
js
pop
fnsave
mov
mov
dec
fs
mov
xchg
andb
xchg
xor
pop
mov
loope
into
push
cmp
int
sub
push
imul
jbe
sub
jp
popf
sub
pop
fldenv
add
test
leave
mov
ret
adc
ja
mov
loop
mov
pop
jae
shl
jbe
and
cli
jo
xchg
std
into
shll
adc
xor
pusha
popf
inc
push
mov
pop
and
xor
in
mov
in
lds
jbe
xchg
mov
mov
add
dec
mov
push
pop
xchg
xor
loopne
cld
int3
adc
cmpsb
mov
adc
das
call
mov
and
cmpb
mov
hlt
pop
jp
imul
dec
bound
pop
movsb
mov
inc
xchg
mov
fsubrs
mov
loop
repz
add
lock
xchg
pop
leave
mov
sbb
icebp
popa
loope
pop
iret
sbb
sahf
dec
add
push
or
roll
or
jg
dec
insb
mov
cli
mov
cmp
lods
call
jnp
enter
mov
push
jge
cmp
pop
aas
or
pop
int3
jo
testl
cmp
mov
and
cwtl
dec
outsl
rcll
sub
dec
std
cmp
inc
add
or
addr16
push
mov
test
imul
jmp
adc
hlt
sbb
and
div
fldcw
sub
xchg
sbb
ret
sbb
std
push
mov
xor
mov
cmpsb
hlt
test
test
aaa
dec
mov
pop
stos
rcrb
into
pop
clc
pop
push
xchg
jo
sbb
in
jb
pop
icebp
lea
out
add
or
xchg
push
xchg
shlb
jg
ret
ds
mov
push
movsb
pop
addr16
stc
lea
jle
mov
push
or
rorb
outsb
rol
xchg
scas
sbb
shlb
fnstcw
iret
xchg
xchg
lcall
js
adc
add
sub
lods
jns
jnp
push
inc
and
jp
les
cmpl
clc
fstl
pop
jmp
setb
xor
outsl
mov
cli
pop
lods
pop
cltd
push
outsl
cmp
pop
mov
stos
xor
pop
aam
mov
jns
sbb
leave
popf
pop
in
and
mull
iret
xor
push
gs
inc
pop
arpl
or
sbb
jg
ror
xlat
fwait
movsl
pusha
nop
add
js
sti
fwait
dec
es
sbb
pushl
mov
pop
add
mov
lret
push
adc
stos
push
out
mov
in
jp
stos
and
mov
adc
push
adc
push
cmp
movsl
fsubr
jns
pop
insl
cs
sbb
rcl
mov
insl
add
jecxz
xchg
xor
jb
std
pusha
xchg
mov
jne
and
outsl
test
out
das
lods
insl
stos
std
pop
sahf
lods
sarl
and
gs
mov
ftst
lahf
cmp
inc
pushf
into
shr
aas
pusha
add
pop
loopne
jg
pop
or
pop
clc
loop
rclb
mov
fs
aas
lret
gs
pop
xlat
and
xorl
push
cmp
sbb
and
jp
push
add
cmpsb
pop
xor
pop
ds
inc
jmp
or
push
and
or
decb
push
pop
data16
push
mov
jg
mov
mov
add
sarb
stos
shll
cld
movsl
cmc
jne
push
loope
mov
add
and
lret
mov
push
ficomps
push
push
xchg
pop
push
push
mov
mov
rcr
dec
and
xchg
es
jo
sub
push
mov
adc
pushl
pop
add
mov
cld
ljmp
inc
inc
mov
data16
pop
imul
frstor
ss
fcom
push
cmc
test
lds
test
aas
jp
insb
jbe
jns
mov
xchg
mov
sbb
dec
adc
push
fidivl
pop
mov
cmpsb
sahf
pop
xchg
mov
test
xor
bound
lcall
mov
cltd
mov
push
xchg
jl
cmp
mov
add
dec
iret
add
gs
repz
sub
jno
and
adc
mov
jge
sbb
leave
jo
bound
mov
nop
inc
into
js
push
test
sarl
es
push
cmp
mov
push
mov
popf
mov
pop
jnp
push
popf
ret
or
cwtl
loope
lock
cltd
stc
lea
add
lret
mov
sarb
lock
call
xchg
int
inc
je
add
add
rsm
sbb
xor
lock
repnz
ljmp
pushf
ret
addr16
mov
aad
cmp
aaa
pop
ret
sub
ds
loop
jae
jmp
pop
mov
dec
das
and
xchg
xor
inc
inc
xchg
int3
push
fidivl
cli
lds
aad
and
xchg
lock
dec
fdivr
mov
or
cmp
fsubl
cmp
addl
mov
push
ja
ficompl
jae
jae
jmp
lock
iret
xor
dec
mov
xor
ljmp
lods
loop
mov
out
fistps
dec
sub
lock
out
xor
sub
sbb
jns
xchg
mov
xor
dec
push
rcrl
inc
mov
fildll
mov
pop
or
js
jmp
fsubl
sbb
popf
daa
movsl
lods
fs
push
dec
std
jp
push
pop
loopne
mov
mov
js
xchg
fistl
inc
loope
jns
ljmp
xor
popa
dec
sub
test
bound
mov
xor
xchg
mov
mov
jle
pop
dec
xor
js
push
sub
icebp
dec
lods
mov
fcompl
shll
xchg
icebp
or
leave
adc
inc
arpl
cmpsl
sub
insl
or
pop
pop
cmc
orl
fwait
sbb
ss
into
repnz
hlt
add
sub
mov
testb
cli
test
imul
out
fdiv
xor
mov
push
out
mov
std
sbb
and
aaa
pushf
xchg
scas
std
bound
xchg
test
mov
adc
mov
cmc
push
mov
cmp
adc
push
adc
mov
pop
jo
and
pop
aam
and
dec
xchg
xor
mov
outsb
int3
scas
jno
lods
test
jbe
daa
cmp
fs
sbb
rclb
inc
pop
cmp
je
dec
addl
jnp
call
fsubr
pop
or
mov
mov
push
call
jae
pop
inc
push
movsb
cwtl
mov
test
add
inc
xchg
xor
xor
xor
mov
add
mov
xorb
push
and
xor
out
call
orl
mov
mov
ret
lds
add
stos
pop
and
or
stc
mov
cld
xor
lds
pop
aaa
cmp
dec
sbb
loope
insb
jbe
adc
jnp
inc
addr16
orb
enter
stos
sbb
popa
inc
fstpt
jmp
dec
dec
cli
ret
push
sbb
outsb
les
out
or
cmp
popf
fisttpll
pop
jbe
popf
scas
sub
movsl
dec
push
nop
fcmovne
out
mov
js
insb
in
inc
jge
add
out
mov
out
in
mov
testb
in
pop
pusha
lock
mov
inc
inc
fwait
out
lahf
pop
into
les
cli
aam
push
lahf
jae
aam
xor
sub
call
iret
fistpl
int
clc
sub
and
push
mov
xchg
fsubrl
pop
mov
outsb
scas
jno
cmp
sbb
inc
subb
dec
sbb
repnz
imul
mov
mov
or
fidivrl
outsw
andl
mov
fcmovbe
push
cmp
shl
mov
imul
popa
sub
dec
out
fbld
sarl
inc
das
pop
fcmovne
inc
and
mov
fstp
inc
dec
out
stos
ud1
outsb
and
mov
dec
jbe
movlhps
mull
push
icebp
xchg
jl
fcoml
repnz
repnz
cmp
ds
pop
fstp
jns
jle
xchg
in
std
popa
in
lahf
stos
pushf
mov
clc
push
pop
flds
sub
and
ljmp
inc
add
xchg
and
jmp
jno
mov
xor
inc
xlat
rorl
dec
adc
not
xor
adc
mov
xor
mov
arpl
dec
dec
and
push
xchg
jge
pop
inc
std
add
xor
xor
sub
outsb
and
pop
xor
jle
lret
xor
sti
pop
fdivl
dec
inc
mov
sbb
or
lret
push
jb
mov
or
jnp
sub
xor
xchg
orl
mov
inc
sbb
and
jge
mov
dec
mov
pop
pop
mov
mov
mov
notb
lods
movsl
push
lret
in
sbb
icebp
xor
sub
int
shlb
mov
in
int3
and
lahf
pop
out
imul
xchg
lea
push
or
rcll
cld
xor
fwait
adc
pop
rcll
cmp
inc
out
inc
scas
fwait
add
out
aad
adc
mov
cmp
aaa
in
mov
or
lea
test
xor
int
inc
out
xchg
mov
ss
std
ljmp
dec
aam
adc
or
xchg
jp
pop
lods
push
cltd
mov
arpl
adc
mov
data16
push
mov
xchg
sub
mov
jbe
inc
pop
ss
sbb
jns
add
out
pop
push
dec
jno
push
push
push
lcall
xchg
lret
jl
scas
add
leave
es
dec
outsb
adcl
or
rcrb
sub
out
hlt
sub
sahf
iret
scas
mov
fwait
lods
test
out
std
test
outsb
int
popf
insb
loope
cmpsb
mov
imull
add
sub
pusha
add
push
push
cmp
daa
sbb
dec
test
mov
loop
sub
dec
in
inc
inc
push
mov
jecxz
mov
pop
gs
scas
push
push
aad
in
dec
arpl
push
lock
jecxz
int
ljmp
adc
inc
scas
shll
cwtl
shll
xchg
popa
nop
dec
pop
dec
loope
scas
mov
xlat
andb
inc
xchg
nop
stos
rol
sbb
das
lods
pushf
lret
iret
xchg
fsts
cwtl
loopne
pop
sbb
das
jmp
mov
repz
jle
cmp
adc
adc
sub
lahf
shlb
lahf
pop
xchg
stos
adc
pusha
loopne
testl
mov
movsb
mov
cmp
mov
jg
jnp
aam
rcr
fidivrl
sahf
xchg
orl
sbbl
xchg
sti
daa
xorb
mov
lcall
cmpsb
push
mov
je
cmp
aam
xchg
lahf
sub
popa
popf
popl
mov
mov
mov
mov
rclb
jecxz,pt
nop
mov
jo
push
mov
push
xor
add
pop
daa
sbb
pop
jmp
sub
fisubrs
dec
mov
inc
mov
jb
mov
shll
cmp
mov
sbb
ds
or
es
fcmovnu
ss
inc
sarb
iret
add
cmpsb
sbb
in
add
fsubr
lea
inc
push
aam
add
dec
and
insl
jne
sbb
psrlw
std
inc
in
dec
push
nop
out
add
push
cmpsb
int
in
divl
pop
inc
sbb
push
fs
rol
sahf
jnp
xor
xchg
add
test
test
jg
jl
fsubr
lret
sahf
lods
xchg
xor
test
fisubrl
enter
mov
fnstenv
jo
repnz
jae
and
sub
mov
pop
push
mov
sti
cmpsb
jl
pop
or
mov
mov
andb
popf
jo
ja
cmpb
gs
lret
dec
push
ljmp
cmp
jle
push
sub
mov
lret
out
jno
enter
cld
jle
mov
repz
mov
nop
mov
xchg
push
mov
sbb
cwtl
and
jmp
dec
mov
inc
div
ror
or
icebp
daa
lock
adc
mov
or
jo
dec
icebp
mov
out
test
fstpl
fs
adc
pop
rcll
movsl
cmp
lret
popf
mov
popa
xchg
ret
xchg
sbb
aas
mov
insl
pusha
mov
and
xor
lea
jl
dec
dec
pop
or
divb
sbb
sub
push
jno
mov
inc
mov
pop
xor
jg
pop
inc
cltd
inc
mov
pop
ret
xchg
or
insb
test
call
xor
test
mov
push
sti
je
fimuls
out
daa
test
cmp
std
mov
and
ret
push
lahf
ss
fidivs
hlt
enter
sbb
sub
nop
mov
cmpsb
pop
push
aad
inc
scas
ss
and
sbb
cmp
test
jae
cmp
in
out
cmp
aam
movsl
jns
pop
sbb
jae
xchg
lret
js
nop
cmp
mov
inc
inc
jecxz
dec
mov
and
fimuls
adc
and
stc
notb
fcoml
adc
push
sub
loop
xchg
out
dec
or
je
mov
pusha
ret
dec
dec
jmp
inc
add
clc
fstl
push
mov
lods
fsubrs
mov
mov
adc
push
mov
adc
imul
gs
inc
push
push
test
pushf
jmp
add
mov
jp
dec
cld
xchg
add
push
addr16
andb
push
inc
lahf
ljmp
mov
and
out
or
mov
scas
loop
subl
fistl
mov
dec
adc
test
jle
pop
leave
mov
aas
pop
or
sahf
popa
faddp
faddl
insl
dec
shrl
or
push
inc
stos
aad
jg
inc
cmp
fs
stos
addr16
add
cmpsb
rcll
test
jbe
cmp
xchg
jno
cmc
add
mov
pop
push
adc
jp
int
inc
or
push
adc
adc
cmp
js
inc
ljmp
clc
adc
push
sbb
push
xchg
repnz
addr16
repz
push
mov
sub
cld
gs
xor
jae
adc
sti
inc
cmc
push
adc
inc
and
push
lret
popf
push
repnz
or
mov
pusha
cmp
addr16
pushf
daa
mov
dec
mov
and
inc
mov
cmc
cmpsl
pop
lret
loop
aaa
leave
cltd
cmpsb
and
and
sub
popa
add
fcompl
addl
lock
push
cld
push
cmpsb
mov
sbb
fstpl
and
aaa
int3
xor
mov
push
push
ret
ficoms
pop
sbb
sbb
test
mov
ljmp
mov
insl
add
jbe
imul
daa
mov
push
cmp
push
xchg
shlb
jb
mov
mov
jno
xor
dec
popa
xchg
pop
pop
sub
mov
inc
lock
addr16
lcall
mov
fistpl
or
adc
push
dec
nop
push
sbb
adc
xor
data16
cmp
cli
push
or
sbb
scas
aam
push
mov
rcrb
repnz
lods
into
jo
cmp
movsl
sahf
test
imul
pop
xor
adc
sub
jo
stos
lret
out
push
je
lods
jl
andl
cmp
outsb
clc
add
out
sbb
xchg
jg
enter
ds
mov
jmp
pusha
ret
test
aas
imul
pop
rorb
call
hlt
mov
enter
stos
aam
xchg
mov
ds
mov
cmp
sbb
jnp
lahf
and
mov
sbb
nop
imul
and
pop
mov
mov
sub
jne
pop
test
into
xchg
push
loopne
pusha
int
jb
clc
notl
push
add
jecxz
mov
fwait
in
aas
sbb
xchg
ror
mov
pop
in
imul
pop
adc
inc
cli
and
cmp
daa
jnp
add
data16
inc
push
or
fidivrl
or
or
popf
hlt
mov
loopne
shlb
arpl
dec
lcall
xchg
popa
adc
or
pop
pop
mov
xadd
xor
jg
add
lahf
hlt
push
aaa
fsubl
pop
dec
cld
test
inc
subb
push
int
mov
imulb
lea
dec
mov
pop
jae
adc
dec
dec
ljmp
or
inc
adc
out
add
adc
mov
xor
repz
cmp
arpl
ss
ja
fsts
push
sbb
xchg
pop
pusha
cli
lods
test
in
imul
fidivl
in
lret
cmc
popf
xor
test
stos
dec
cmp
insb
add
mov
loope
int
ret
xor
adc
jge
add
loopne
inc
push
scas
xor
mov
and
sahf
push
scas
sti
sbb
filds
fs
fs
mov
movsb
outsb
jl
xor
xor
testb
mov
rcrl
bound
aad
ss
pop
btsl
add
in
shlb
xlat
scas
in
pop
mov
dec
pop
push
mov
lea
pusha
das
int3
lds
lea
mov
aad
xchg
test
imul
loope
andb
sbb
push
stos
or
insl
das
and
dec
inc
pop
jns
xor
cmp
jge
dec
insb
or
jno
gs
sub
xor
add
cmpsb
repz
imul
xchg
test
push
jle
sbb
adc
addr16
enter
jbe
cmp
xor
sti
movsl
scas
xor
iret
pusha
lcall
push
and
sub
ds
lods
mov
mov
out
cmp
mov
ss
xchg
mov
xor
insl
cmp
ss
add
mov
jmp
scas
and
imul
inc
scas
bound
xchg
xchg
mov
push
pushf
js
sbb
push
sbbb
and
mov
dec
out
cmpsl
cwtl
hlt
or
mov
mov
test
xor
push
shll
mov
imul
fwait
or
or
pop
mov
dec
sub
ret
call
push
or
loope
loop
cmp
lcall
andb
mov
rcrb
dec
cmp
cmp
dec
push
lock
adc
shlb
ror
fcomp
dec
adc
aam
es
jnp
add
repz
push
test
push
in
test
popa
cmc
dec
cmp
hlt
mov
in
lods
jne
aam
jb
xchg
dec
loope
popf
inc
pop
popl
mov
or
sbb
daa
jl
ds
pop
jbe
xchg
lret
push
es
nop
int
pop
push
xchg
lock
push
scas
into
rorl
in
push
inc
dec
addl
outsb
mov
xor
push
out
push
mov
push
inc
sub
jns
lcall
inc
sub
pushf
dec
in
jns
xchg
mov
mov
sbbl
and
aaa
mov
divl
xchg
in
jb
pop
sbb
iret
lret
sbb
insb
sub
movsl
mov
inc
cmpsb
cmp
fstps
es
outsb
fmul
xor
inc
es
testb
repz
pop
sub
jp
sub
int3
clc
inc
add
sbb
scas
inc
repz
ffree
jnp
sub
es
int3
inc
mov
jmp
fcmovnu
inc
push
sub
aad
lods
pop
jno
dec
ret
push
mov
xchg
insl
jbe
shrb
push
pop
or
push
add
test
dec
cmpsl
ss
out
or
fs
outsb
xor
cmp
push
int3
aas
test
xchg
aam
mov
pop
ret
inc
jg
cmpsb
shll
cltd
mov
scas
les
or
ds
add
inc
sbb
lock
cld
or
mov
push
in
mov
outsb
repnz
add
push
sub
mov
loope
insb
lds
vpandn
insb
mov
xor
xor
rcll
outsl
pop
lcall
out
imull
in
rcrl
xor
test
mov
or
lods
pop
xchg
push
xor
fxch
xchg
in
imul
mov
cmpl
fsubp
xchg
pop
sbb
sub
scas
sbb
pop
lret
imul
mov
and
dec
aad
dec
cmp
push
jecxz
inc
jb
dec
repnz
dec
cli
mov
add
cltd
sbb
push
and
aad
add
mov
adc
out
push
xchg
cmp
aas
cmpl
imul
sub
lcall
out
ret
in
rcl
in
jae
rclb
pop
xor
push
dec
fldt
icebp
mov
ret
mov
jecxz
stos
sarb
add
jae
pop
push
add
inc
add
mov
sbb
sub
loopne
std
fildl
ds
add
inc
fadds
or
xchg
adc
mov
xor
insb
lds
push
fwait
mov
sbb
and
pushf
dec
aad
cmp
mov
ret
xchg
scas
add
mov
gs
enter
xor
xor
push
les
cmp
mov
or
sbb
das
mov
inc
pop
mov
ja
fprem1
leave
data16
popa
pop
push
pop
mov
mov
xor
inc
mov
repnz
sbb
jnp
fbld
into
test
sti
jecxz
outsb
xor
sbb
out
xor
xchg
orb
cmc
imul
dec
cmp
imul
movsb
into
jg
test
outsb
iret
and
sbb
lea
push
dec
xor
mull
stc
das
bnd
fs
jmp
cmc
add
pop
ficompl
inc
test
push
fwait
add
test
cld
lcall
mov
adc
lret
rclb
test
into
push
jbe
lea
or
shl
in
jecxz
adc
adc
sub
mov
movsl
mov
add
mov
out
pop
xor
and
and
pop
mov
dec
fistl
push
add
jo
imul
jbe
push
mov
xchg
jnp
jns
inc
cmp
in
jns
and
or
push
push
pop
es
inc
push
nop
jmp
in
inc
push
push
ret
cs
jge
cli
and
push
mov
fidivrs
cmp
icebp
sahf
mov
jno
orb
mov
push
cld
stos
push
lahf
mov
js
hlt
mov
xchg
pushf
aam
mov
xlat
leave
pop
mov
es
into
pop
enter
pushf
xor
pop
and
and
mov
rcrl
loopne
adc
sti
xor
push
aas
add
adc
int3
xor
fnstsw
mov
mov
add
iret
mov
adc
sahf
mov
xchg
push
push
hlt
add
in
cmpsl
jl
push
inc
fiadds
imull
mov
sahf
test
fdivr
pusha
xor
inc
xor
ljmp
mov
outsl
test
fstpl
sbb
jg
loope
shrb
lahf
jl
cmpsb
aam
add
inc
aas
lea
mov
cmp
push
pop
mov
add
enter
fmull
mov
mov
sarb
fstps
jnp
ds
gs
xor
push
push
popf
rol
pop
xor
add
icebp
lock
jae
mov
xor
ss
fstp
popa
jl
mov
loopne
or
pop
lcall
or
jb
xor
into
cltd
in
jle
movsb
add
pop
xchg
dec
popf
add
leave
test
pop
dec
push
push
add
jp
cmpsb
jp
mov
xchg
mov
ss
aad
mov
es
adc
jg
insb
icebp
inc
cmp
pop
cmp
nop
imul
sub
outsl
cmp
push
mov
mov
test
lock
or
popa
int
adc
inc
out
fsubrl
mov
repnz
icebp
inc
sbb
outsl
sahf
mov
vmovhps
loopne
aas
je
and
and
pusha
or
dec
aas
pop
jae
add
pop
cld
jge
and
mov
pop
inc
adc
mov
cmc
jge
mov
or
subb
lcall
fists
mov
pop
leave
roll
scas
mov
iret
mov
xchg
inc
adc
icebp
ror
push
push
stc
cmp
data16
xchg
dec
dec
out
shrl
scas
test
repnz
test
push
daa
add
inc
lods
mov
sbb
dec
paddusw
int3
std
add
jecxz
and
push
insl
mov
xchg
pop
mov
sub
shlb
movsb
and
add
stos
cmp
add
xlat
nop
add
pushf
xor
mov
jae
sbb
pop
dec
shll
cli
add
out
cmp
jl
mov
inc
cmp
out
and
sar
lcall
adcl
jae
call
dec
lods
nop
sub
movb
rcll
and
sub
push
popa
mov
testb
repz
inc
mov
and
sbb
pop
push
fcomip
les
mov
popa
lahf
mov
sub
push
pop
das
mov
enter
gs
lcall
les
je
adc
dec
cltd
mov
ret
ficoms
inc
loope
clc
adc
mov
ficoml
and
clc
orl
test
mov
jl
jge
and
cmpsl
test
sbb
mov
leave
in
jae
sbb
daa
fucom
push
ljmp
mov
ds
push
inc
aaa
insl
out
imul
cmp
pop
xor
xchg
addb
dec
mov
std
negb
xchg
cmc
push
scas
fnstenv
test
int
xchg
push
popf
mov
or
push
mov
xor
addr16
inc
xor
outsl
dec
mov
gs
fsincos
popa
or
and
inc
jecxz
sbb
iret
pop
cltd
xchg
dec
pushf
pop
and
inc
loope
shl
xchg
arpl
sub
iret
cmp
test
iret
lcall
mov
mov
sub
insl
mov
cli
sbb
mov
inc
inc
repnz
in
bound
rcrb
jl
sub
cmp
jp
pop
adc
lret
lret
push
hlt
fistps
add
inc
dec
jne
out
mov
xchg
popf
rorl
add
sbb
pop
push
stc
test
or
cmc
out
lods
inc
jmp
rcl
xchg
pop
dec
pop
bound
sub
xor
pop
aad
jmp
out
dec
lahf
rclb
xchg
pop
clc
or
push
cmp
xor
pop
std
cmp
mov
and
lods
gs
imul
xchg
shl
in
movsl
or
mov
out
jne
dec
incb
push
mov
mov
jl
repz
lods
xchg
out
fadd
mov
or
mov
imul
pop
cld
lret
decb
imul
mov
cmp
push
pop
mov
scas
cmp
cmpsb
inc
lods
js
cmpsb
inc
xor
xlat
push
push
out
inc
xor
mov
mov
in
cltd
xchg
jne
ss
dec
cmp
adc
jg
outsb
xchg
mov
jns
sbb
jl
imul
dec
lret
xchg
fucompp
fs
mov
jg
mov
shl
cmp
xchg
hlt
inc
aaa
into
aaa
mov
or
jg
add
mov
test
dec
fs
test
sahf
add
orl
adc
subb
jns
pop
push
push
sub
pop
or
inc
int3
int3
mov
cmp
sbb
sarl
adcb
push
dec
clc
push
enter
xor
scas
jle
pushf
xchg
push
loope
loop
sarb
sub
jmp
iret
loop
inc
add
pushf
enter
scas
and
inc
pop
mov
lock
sar
test
push
push
lea
sbb
rclb
jmp
lret
stos
mov
pop
add
push
mov
test
sbb
adc
pop
loop
or
xchg
int3
enter
sub
mov
dec
xor
popa
jno
outsl
xchg
lret
jne
xor
jae
aaa
push
xor
fadd
incb
movsl
cmp
adc
insb
push
xor
sbb
add
scas
mov
arpl
pop
daa
into
aad
jbe
idiv
clc
ret
and
inc
out
add
xor
sbb
pop
inc
clc
loop
pop
mov
jl
data16
mov
shrb
movsb
inc
into
fisubrl
push
mov
out
push
les
xchg
xchg
cmpsb
loopne
gs
add
add
cmp
lahf
repz
rcr
inc
xorl
lret
fucomp
xor
popf
inc
loopne
and
lret
dec
mov
mov
inc
pushf
adcb
mov
sbb
push
xchg
aas
push
add
cwtl
or
and
lcall
pop
je
stos
ss
enter
xchg
mov
jecxz
inc
outsb
dec
jo
jecxz
and
mov
mov
sub
mov
clc
into
mov
arpl
or
loope
pop
and
cwtl
mov
cmp
dec
sub
adc
push
int3
test
ficoml
xchg
xchg
loope
pop
gs
adc
loope
outsl
test
fiaddl
jnp
push
das
dec
xchg
sub
xchg
push
icebp
mov
sahf
in
pop
shrl
cmp
scas
sbb
scas
je
xchg
jbe
subl
leave
orl
out
mov
mov
or
xchg
inc
mov
hlt
cs
xchg
push
jb
loopne
cltd
mov
jns
loopne
add
inc
jle
jl
and
imul
arpl
sbb
and
ljmp
and
movsl
jl
pop
and
adc
jo
sbb
or
push
xor
fstl
push
push
cmp
test
data16
xchg
insl
in
cs
adc
jle
je
out
out
mov
test
xor
jne
adc
je
push
adcb
push
das
out
imul
jmp
inc
lock
xor
lods
xor
mov
orl
popf
enter
dec
in
push
sub
or
test
and
aam
mov
mov
test
add
les
fidivrs
iret
cmp
push
lret
stos
add
push
mov
shll
push
shll
scas
fs
divb
enter
lahf
adc
lcall
ljmp
imul
xchg
loopne
rorl
arpl
ret
jecxz
mov
xchg
add
popf
inc
dec
mov
or
push
or
aad
enter
jg
mov
push
fldl
jp
and
jmp
push
pop
out
or
xchg
aad
xchg
sub
dec
or
orb
dec
std
popf
or
or
shl
adc
lahf
lea
mov
outsb
stos
call
shll
xchg
pop
xchg
ret
or
test
or
fimuls
sbb
shld
jl
ss
shlb
adc
jge
xor
rorb
cwtl
adc
in
mov
clc
les
or
ficoml
push
jno
cli
jp
aad
push
pop
mov
les
or
or
dec
dec
nop
cmp
lods
mov
loopne
out
push
imul
insl
movsb
or
out
sbb
adcl
xchg
cmpsb
aam
dec
loop
shrb
dec
cmpb
clc
cmc
dec
jp
push
add
pusha
ret
mov
outsl
xor
mov
loopne
adc
dec
mov
lods
xchg
cmpsl
loope
jbe
add
sub
cmc
sarl
cmp
aam
mov
pusha
adc
stc
test
outsb
lret
or
movsl
dec
jp
test
mov
mov
cwtl
inc
mov
mov
mov
inc
fcoms
xchg
adcb
or
enter
xchg
jp
push
push
shr
sbb
in
jp
iret
call
shlb
out
jmp
fistpll
aad
xchg
loopnew
inc
dec
push
mov
mov
call
stc
lods
lods
sub
sbb
sub
jno
jbe
sbb
popf
add
aas
in
xchg
fnsave
and
jl
dec
and
adc
insl
jno
aam
push
xchg
sahf
jmp
je
ss
scas
insb
or
dec
int
cmp
inc
add
xchg
add
movsb
sbb
mov
push
jl
adc
inc
rorl
ljmp
loopne
jl
cmp
ljmp
mov
out
leave
or
jecxz
rorb
popf
push
test
lods
mov
xor
call
sbb
push
das
mov
es
stos
rcr
mov
jbe
inc
sti
dec
jnp
adc
adc
push
shlb
mov
fimull
dec
shll
daa
test
insl
xor
lret
rorb
subl
mov
lods
into
xchg
js
mov
cmp
or
lea
std
fs
or
inc
cwtl
mov
pushf
movsl
jnp
jb
dec
arpl
push
das
dec
xchg
mov
fwait
jno
out
sub
push
xchg
ficomps
cli
or
dec
or
mov
out
int3
jno
xchg
push
or
jmp
and
addb
adc
pmaxsw
mov
dec
cltd
xchg
lahf
js
dec
mull
xchg
xor
or
lret
sub
ficoml
or
adc
mov
lods
data16
aas
stc
adc
cld
or
mov
loope
std
push
subl
das
cli
jl
stc
fidivs
pop
ret
push
ficomps
jle
roll
or
packuswb
mov
pop
aaa
and
f2xm1
dec
push
test
jmp
test
inc
dec
std
stc
mov
jg
out
fwait
loopne
xchg
or
lahf
xor
or
fisttpll
xchg
and
pop
dec
jp
popf
cmp
mov
push
in
and
pop
sti
xchg
inc
outsl
sub
mov
sbb
out
stos
iret
push
lcall
mov
xor
outsl
xchg
and
loope
pop
ret
subb
jae
pop
jns
daa
data16
popf
sbb
lds
aas
je
repz
and
push
push
es
test
in
fmull
pusha
loop
mov
or
mov
cmp
movb
test
shrl
add
cmp
inc
arpl
and
jg
fdivs
popf
in
sub
adc
insb
movsl
in
mov
in
bound
rcrb
sub
addr16
mov
pop
cmc
lods
push
cwtl
push
arpl
imul
sub
jne
popa
leave
pop
int
iret
int3
mov
push
sub
dec
add
cmp
mov
xchg
les
sbb
xchg
pop
popa
test
mov
push
cmp
jp
cmp
xchg
and
jle
movsl
cmp
sub
scas
cmp
xorb
push
loopne
mov
orl
lret
adc
pop
inc
push
pushf
std
loop
cwtl
fnsave
hlt
and
movsb
out
jg
mov
xchg
cmp
xlat
pusha
lods
testb
outsl
mov
loopne
outsl
mov
add
xchg
inc
lcall
xchg
lods
adc
jae
jne
pop
fdivl
inc
lods
les
push
mov
and
sub
subps
stos
and
out
adc
adc
jno
daa
stc
test
jne
es
sbb
jmp
jae
mov
dec
sub
pop
hlt
and
filds
sahf
leave
roll
xlat
adc
in
xchg
cmpsl
orb
lahf
and
faddl
xchg
das
jno
push
push
jecxz
rol
aas
insl
push
pop
popa
stos
int
ret
pusha
call
stos
lcall
mov
arpl
paddd
pop
sarl
js
and
scas
shl
fwait
movsl
mov
xchg
sub
jp
call
iret
jle
xchg
sbb
cwtl
int
js
or
dec
mov
andb
inc
rcll
sarb
cmp
adc
dec
pop
sahf
jp
int
mov
cwtl
out
push
hlt
fnstcw
and
xor
and
mov
dec
out
pop
cltd
int3
pop
ja
shr
fistpll
mov
test
insb
push
sub
scas
mov
lds
jp
inc
inc
sub
mov
jle
add
push
pop
out
int
jns
adc
icebp
mov
outsb
adc
scas
outsl
enter
or
test
aaa
call
cmp
xchg
je
mov
rclb
out
mov
ds
ret
cmp
adc
add
xchg
inc
cwtl
dec
mov
outsl
lcall
mov
sub
sub
xchg
adc
push
loope
push
push
outsb
loop
addr16
bound
dec
sub
mov
xor
ss
mov
nop
je
sub
add
shll
or
fwait
cltd
test
adc
dec
adc
xor
mov
es
pop
push
stos
orl
push
lret
dec
lcall
std
rep
lock
sbb
cwtl
push
xor
outsl
test
xor
mov
pop
std
out
gs
xchg
arpl
push
movsl
mov
mov
lea
dec
mov
in
add
dec
fistl
mov
enter
imul
jns
jg
mov
test
sbb
dec
cmpsl
adc
adc
sahf
inc
jb
out
jo
pop
stos
fisttpll
ficoml
and
out
pop
scas
jne
pop
test
cmp
xchg
push
pushf
divb
push
rcr
mov
repz
pop
ja
mov
in
push
cmp
add
cmp
imul
mov
xchg
outsb
pusha
mov
in
mov
jl
mov
scas
pop
sbb
ds
shrl
bound
push
push
loope
cmpsl
cmp
sbb
popa
filds
loop
jae
add
mov
jns
pop
mov
insl
dec
mov
fsubrs
fs
jne
push
sarb
mov
pop
xor
insl
fildl
adc
sbb
mov
mov
lods
test
push
addl
inc
xchg
lcall
rcrl
xchg
jb
insl
test
in
mov
icebp
repnz
sti
cmp
push
hlt
ret
xor
sti
pushf
ret
rcll
or
push
lods
lds
repz
xchg
dec
push
outsl
dec
sbb
inc
iret
rcl
iret
lock
std
aam
push
mov
cmp
push
shrl
imulb
stc
jp
pop
js
int3
and
dec
scas
sarl
aaa
mov
push
fucomip
jmp
mov
or
xchg
aas
das
nop
jl
or
jnp
loope
push
sbb
jno
leave
xor
mov
sbbb
outsb
mov
or
test
push
and
aam
push
and
scas
lea
shr
adc
mov
in
mov
ret
lret
inc
js
pop
lea
or
aas
ja
imul
shlb
pusha
sub
jb
inc
dec
lock
cmp
cmp
xchg
std
xor
rcll
cmp
les
inc
mov
mov
push
call
out
fnsave
xchg
add
xor
dec
int3
stc
cltd
push
pop
push
cmp
inc
ss
js
cmp
mov
mov
andl
inc
and
jmp
fildl
mov
sub
cmp
xchg
push
inc
cmp
sub
fbstp
or
ret
lea
imul
jg
inc
push
xlat
rcl
je
repnz
add
pop
aam
neg
and
add
insb
cli
mov
ja
outsl
pop
jns
punpcklwd
iret
in
cld
sbb
inc
lods
loopne
mov
sti
mov
je
xor
arpl
rcl
dec
sbb
xor
out
xchg
sbb
lods
dec
or
pop
jg
mov
and
dec
adc
lods
xchg
pusha
mov
cmc
rcrb
cmp
mov
and
icebp
ret
fstps
xchg
push
jmp
das
adc
push
xchg
cwtl
pop
sub
std
pop
out
push
cwtl
shl
in
xorl
mov
cmp
lahf
or
jmp
out
mov
lret
jb
adc
sbb
and
sar
cli
xchg
ficoms
mov
pushf
cmpsb
test
test
rclb
test
ljmp
aam
push
mov
mov
gs
test
dec
sbb
or
int3
and
jo
push
inc
xchg
sub
cltd
and
push
lret
out
imul
cmpsl
repnz
aad
mov
fdivrs
adc
and
mov
cmp
or
rorl
xlat
mulb
push
push
jb
fadds
in
jnp
js
popf
ljmp
mov
iret
mov
movswl
sbb
icebp
negl
dec
xchg
inc
and
pop
fstl
adc
pushf
scas
and
sahf
nop
jg
arpl
jl
push
arpl
and
xor
lds
rolb
test
push
sub
pop
lret
out
and
leave
mov
pop
cwtl
cli
add
rorl
nop
lods
push
and
mov
add
push
sbb
mov
mov
out
sbb
mov
pop
sub
and
test
addl
das
xor
dec
je
shll
pop
imul
fdivrp
sub
bound
rolb
mov
repnz
sahf
sub
mov
cld
dec
test
call
mov
xchg
cmpsb
mov
push
sub
pop
xchg
call
mov
adc
inc
int
push
in
push
sub
pushf
mov
xchg
subb
pop
mov
xchg
test
or
fs
shr
mov
add
dec
jae
cli
cs
inc
dec
or
mov
cmp
jne
out
repnz
pop
outsb
loopne
popf
cmpsl
in
stc
dec
ljmp
jno
fstps
out
in
mov
in
sbb
pop
gs
jle
and
cmc
pop
sbb
aaa
cmpsb
lds
mulb
ss
call
lret
js
lcall
sarb
sbb
push
test
mov
add
xchg
and
inc
adc
fstpt
outsl
sub
and
addb
jp
push
adcb
and
ja
or
pop
jne
sbb
push
jmp
push
mov
xchg
addr16
mov
pop
mov
fxch
dec
movsb
fdivrp
inc
lcall
ret
xchg
jle
inc
clc
scas
or
push
fldt
jo
shlb
lods
int
dec
inc
popf
pop
adc
xchg
mov
sub
mov
arpl
cli
and
add
js
ds
inc
aad
inc
loopne
or
out
xlat
adc
and
ja
push
lcall
out
std
add
cmp
sbb
mov
push
push
mov
mov
cmp
adc
inc
in
pop
adcb
pusha
mov
mov
mov
jmp
push
in
loopne
bswap
sbb
in
aam
mov
cmp
sti
xor
icebp
xchg
fs
insb
cmp
sbb
xchg
jmp
dec
mov
sarl
leave
xchg
movsl
inc
pop
or
adc
leave
fcomps
out
fmull
inc
push
sbbl
ret
push
sub
daa
test
adc
cmpsl
pop
xchg
in
mov
stc
jmp
mov
loope
outsl
aas
jp
mov
add
adc
mov
insl
lcall
xchg
mov
fcompl
add
push
dec
cld
inc
push
push
jb
pop
stc
dec
sub
fistpl
add
sti
xchg
add
ud2
pop
and
int
push
push
arpl
sbb
push
js
push
jmp
sbb
and
push
cmp
lock
jns
or
pushf
push
insl
cmc
cmp
dec
jo
mov
bound
xchg
xor
insl
lahf
lods
gs
mov
mov
outsb
lods
btc
jp
popa
mov
cmp
xor
jge
add
mov
xorl
mov
and
sub
and
dec
dec
xor
mov
or
push
loopne
orb
sbb
nop
fwait
nop
sub
cmp
and
sbb
cmp
arpl
test
inc
ja
sti
cmp
jo
stos
dec
add
jne
add
test
mov
icebp
adc
incb
and
out
push
lds
adc
and
insb
rolb
pop
jb
pusha
dec
jge
add
inc
jl
or
test
add
shlb
pop
mov
repnz
sub
imull
or
jno
cmc
jg
test
mov
test
adc
pop
push
ljmp
and
sub
mov
jb
mov
test
enter
push
xlat
std
pop
mov
das
sub
ret
and
pop
popa
pop
rcll
pop
je
sbb
push
subl
mov
js
getsec
pop
test
lret
dec
ljmp
mov
mov
mov
mov
jp
lahf
mov
shr
into
fwait
movsl
jl
pavgw
xchg
add
stos
push
mov
mov
mov
xchg
or
cmp
adc
prefetcht2
jle
les
lock
xor
movsl
movsl
mov
imul
mov
outsl
cmp
in
dec
push
push
inc
jns
out
repz
fisttps
xor
fiaddl
push
lea
hlt
fsubs
inc
mov
xchg
cmc
ror
and
push
lods
sbb
imulb
cmp
or
je
push
xor
movsl
mov
insb
pop
mov
call
aaa
cwtl
out
jo
cltd
out
sysexit
pop
xor
push
mov
mov
pop
fists
and
push
xchg
cmp
out
xchg
mov
rcrl
js
pop
stos
jl
jo
lahf
lea
inc
sub
pusha
insb
sbb
nop
stc
pushf
scas
add
xchg
jne
add
jno
pop
jae
pop
push
jne
xchg
add
and
fwait
lods
pop
aas
xchg
mov
ret
mov
lods
push
ret
mov
xchg
mov
mov
fdivrp
out
mov
inc
into
dec
fwait
xor
pop
lods
mov
add
repz
push
out
cmpsb
and
call
pop
mov
dec
jge
fmulp
pop
mov
lret
and
lret
sahf
mov
jae
and
jmp
movsb
sub
jge
je
aam
imul
jecxz
mov
stos
dec
addr16
xchg
mov
or
lods
jl
sti
mov
outsl
mov
sbb
pop
lea
cld
out
fs
inc
fsubrl
das
fwait
mov
in
push
call
out
jl
lods
movsl
lods
mov
sub
dec
mov
pop
sub
jbe
movsl
add
xchg
inc
mov
negb
loop
push
cmp
int3
push
fsubr
call
repnz
dec
ret
mov
adc
outsb
or
movsl
sub
pop
loopne
fwait
data16
pop
xor
data16
rcll
sub
mov
loopne
test
push
add
outsl
je
lret
sub
mov
cmp
mov
gs
jge
or
adc
add
mov
roll
push
shll
push
adc
push
loope
ljmp
pop
scas
or
enter
and
stos
xor
stos
and
pop
out
ja
or
iret
xor
nop
jne
push
lret
out
adc
aad
inc
mov
popa
sbb
negb
outsb
lret
adc
hlt
jmp
popa
xchg
cmp
mov
or
fsts
scas
push
or
mov
icebp
testl
test
mov
test
xchg
mov
cmc
popf
pushf
cli
adc
or
popa
pusha
sub
pushf
stos
loopne
xchg
and
lea
sbb
test
fsubr
lret
mov
xchg
ja
mulb
data16
pusha
mov
les
and
aas
jge
and
sbb
or
inc
push
or
stc
orb
mov
lea
sbb
repnz
andl
negb
lods
insl
cmp
mov
xchg
shrl
sbb
jle
jg
lock
mov
cwtl
pusha
cltd
xorl
xor
cmp
cmp
aas
scas
aad
fldl
syscall
push
imul
inc
mov
test
mov
xchg
ja
xchg
insl
out
xlat
push
rcr
fildll
push
scas
or
inc
into
rcrb
mov
cli
fs
mov
xchg
cmp
pop
cmpsl
je
popf
jne
jecxz
test
mov
inc
mov
or
adc
mov
and
je
bound
xchg
stos
and
data16
xchg
push
cwtl
push
mov
pop
and
popf
jno
hlt
iret
push
cld
jecxz
into
lods
sbb
shlb
push
adc
jnp
fisubs
mov
mov
xchg
push
or
adc
push
mov
push
js
int
and
popa
lock
sbbb
jnp
mov
sbb
lret
cmp
mov
iret
leave
cmp
or
gs
lahf
test
lahf
shlb
mov
fwait
scas
enter
ljmp
fs
or
bound
pop
leave
jb
xchg
stos
aad
loopne
lock
in
stos
cmp
sarb
mov
push
xor
dec
inc
int3
cmpsb
shl
imul
mov
sbb
pop
and
call
repnz
dec
sub
ret
je
push
xchg
pop
lock
fnstenv
ficompl
test
pop
loope
add
and
add
xchg
repnz
in
test
int3
push
mov
shl
loop
cmp
test
sahf
shl
rorl
pop
js
popf
loope
mov
sbb
lods
cltd
movsl
lods
mov
adc
cld
adc
cli
nop
sbb
test
imul
xor
pushf
jbe
xor
es
xor
das
stos
cmp
jmp
sub
adc
pop
cmp
mov
addb
frstor
mov
dec
insl
pop
loopne
pusha
les
cmp
aas
idivb
aaa
flds
jne
sbb
outsl
cmpsb
sub
or
imul
cmp
dec
js
lret
aad
cmpsl
push
add
rcrl
loopne
fisubs
mov
notb
xchg
dec
push
push
push
aam
add
inc
and
mov
mov
rcrl
jg
test
sbb
mov
aam
jae
pop
push
daa
andl
xchg
jmp
xorb
jp
xor
popa
xchg
das
adc
out
jmp
lret
lret
sbb
pop
call
mov
rcll
sub
insl
arpl
sar
sbb
or
push
sub
into
ja
xchg
adc
aas
outsl
inc
pop
dec
add
scas
test
loop
xor
out
in
sub
clc
add
pop
add
jge
pop
dec
jns
gs
scas
sbb
repz
cli
sub
jl
int3
jo
popa
dec
stos
inc
xchg
inc
sub
xor
or
mov
cwtl
cmpb
push
push
int3
sti
icebp
cltd
mov
and
rclb
cmp
sbb
mov
mov
outsl
fwait
push
daa
inc
inc
cwtl
test
cwtl
mov
mov
push
xchg
repnz
rorb
fbstp
les
pop
xor
mov
push
pop
out
icebp
pop
je
lret
mov
adc
push
in
lret
sbb
aad
arpl
aaa
xchg
sahf
mov
stos
jl
push
out
lahf
mov
jle
mull
mov
pop
std
loop
iret
jae
adcl
jmp
lret
xor
in
js
mov
lret
add
inc
mov
dec
mov
in
out
int
jno
test
fstpl
xchg
out
cmp
mov
ret
mov
jmp
cwtl
push
das
addr16
in
sbb
inc
cmpsb
ljmp
xor
sub
es
movl
xchg
mov
cmp
outsb
add
mov
in
push
sti
xor
mov
jg
inc
ret
popa
mov
and
lock
mov
test
iret
ds
iret
push
sbb
or
inc
sub
cmp
repnz
std
fs
ja
vpcmpeqb
movsb
rcrl
cld
pop
insb
int
clc
sub
lods
lcall
pushf
push
repnz
cmc
fstl
femms
sub
jnp
les
jbe
rcl
arpl
outsl
push
dec
push
push
adc
in
sub
cmp
pop
adc
out
fnstcw
mov
nop/reserved
adc
jp
inc
loope
sbbb
mov
jo
sub
lods
mov
mov
fcmovbe
aaa
add
scas
dec
in
ljmp
xchg
cmp
lret
les
js
dec
ss
inc
jg
adc
shl
in
scas
mov
mov
repz
inc
and
mov
jg
inc
sub
stos
cld
bound
js
lret
repz
fdivs
ljmp
cmp
aam
dec
cmp
ljmp
cmp
or
or
mov
fdivr
cmpsl
xchg
andb
add
in
jne
clc
mov
cld
pop
adc
mov
roll
mov
dec
roll
push
std
cmp
and
pop
scas
xor
xor
fs
rol
rorl
das
xchg
stc
cwtl
jns
pop
cmp
jle
dec
lcall
test
in
jp
jbe
mov
loope
std
push
push
ds
mov
sbb
lahf
inc
sub
sub
pop
test
cli
aam
mov
mov
ror
adc
aaa
lret
mov
xchg
into
push
or
pop
stc
xor
loopne
mov
adc
dec
dec
mov
test
ljmp
test
mov
jl
xor
pop
and
push
cmc
repz
incb
popa
adc
arpl
pop
lcall
imul
mov
dec
jo
mov
sbb
loopne
pop
push
cs
mov
add
adc
insl
jl
sbb
hlt
mov
lret
rcll
outsb
xchg
jg
fwait
arpl
fwait
mov
add
dec
aad
sbb
jge
out
shll
mov
xor
ret
add
enter
outsl
sbb
loop
sub
loop
cmpl
ret
jb
ja
int3
pop
int
push
xor
mov
inc
xor
push
imul
aam
add
xorl
dec
rorl
leave
mov
xor
pusha
add
movsl
repnz
sbb
and
std
repz
mov
or
inc
jo
inc
imul
aam
jb
test
lock
call
in
cli
pop
xchg
ds
test
aaa
mov
lods
xchg
fstl
pop
call
lea
add
pop
scas
pop
scas
mov
imul
and
mov
lods
dec
insb
mov
add
dec
add
push
push
test
out
movsb
inc
int3
xor
mov
inc
decl
dec
cmc
and
sbb
xchg
mov
in
add
push
stos
fildll
mov
push
dec
xlat
aam
aam
jmp
and
cmc
int3
in
or
xor
mov
cmpsl
jb
cwtl
shlb
inc
sub
jns
push
pushl
mov
and
std
sbb
push
fs
ret
jmp
mov
mov
inc
sub
xor
jo
fildll
icebp
aam
imul
pop
lock
pop
orb
or
sarb
psubd
dec
or
lcall
dec
enter
or
add
push
pop
aaa
inc
fs
pusha
imul
pop
jo
daa
mov
jl
fldt
cmp
inc
pop
icebp
mov
mov
out
iret
lea
push
pop
lcall
xor
pop
sbb
clc
insl
pop
mov
imul
imul
push
push
repnz
aaa
out
rolb
mov
inc
adc
jne
rcr
negl
sbb
and
addr16
jns
aas
add
aad
mov
add
cmp
and
mov
data16
inc
cmp
int3
mov
hlt
mov
idiv
mov
sub
dec
mov
nop
icebp
pop
pop
inc
xchg
adc
cltd
iret
or
aaa
test
rcll
xchg
xchg
ret
cmp
sti
mov
xchg
pop
popl
repz
movsb
leave
stos
mov
fstl
mov
sahf
adc
movsb
popa
test
xchg
fsubrs
adc
call
mov
testl
push
mov
cmp
push
ret
pop
xor
mull
and
nop
dec
mov
xchg
push
mov
lods
iret
or
add
aam
mov
pusha
mov
addr16
in
out
inc
pop
jle
fucom
repz
enter
pop
test
fsts
or
je
mov
leave
outsb
dec
nop
lret
shrb
sub
or
cmp
mov
test
xchg
mov
adc
or
test
cli
mov
sbb
addb
scas
xor
jmp
push
mov
movhlps
sarb
aaa
ja
jae
sub
rclb
frndint
popa
cli
idivl
pusha
imul
sub
in
fidivs
cmp
dec
inc
push
sahf
int
sbb
push
mov
dec
xchg
jecxz
ret
adc
push
push
arpl
sbb
scas
cmovs
ret
mov
mov
jle
push
sarb
dec
into
jno
in
jae
out
xchg
mov
mov
push
xchg
das
mov
cwtl
decb
inc
jle
inc
movsb
and
mov
adc
inc
nop
aaa
fimull
mov
cli
testl
and
mov
cmp
and
lods
not
sub
nop
aaa
rcrl
shrl
cwtl
xchg
fmull
jecxz
push
repnz
pop
fwait
mov
pop
cmp
push
xchg
fiadds
push
push
ja
mov
fsub
mov
pop
xchg
xor
xor
in
ja
xchg
hlt
mov
rcl
mov
iret
ja
push
sbb
adc
cmp
xlat
in
xchg
sub
ret
test
pop
mov
addb
pusha
scas
xchg
push
out
dec
gs
add
lods
in
loop
push
int
lock
mov
cmp
cmpsl
xchg
inc
in
lahf
and
mull
dec
aad
pop
xchg
sbb
push
in
jmp
mov
enter
gs
adc
repz
scas
clc
or
inc
lds
dec
adc
xchg
jae
cli
rorb
pop
stc
xchg
iret
stos
cmc
scas
cmp
push
mov
xchg
repnz
sbbl
or
les
stos
lods
push
and
xor
sbb
add
iret
pop
xchg
cmc
adc
test
mov
jo
in
cmp
dec
je
mov
out
cmpsl
xorl
inc
rcll
stc
mov
lods
inc
jnp
jmp
push
inc
popf
ret
sarl
push
sbb
cmc
test
aam
outsb
scas
lahf
jl
rclb
add
insb
pop
jecxz
mov
fdivs
sub
pop
or
sahf
mov
push
sbb
xor
icebp
adc
push
ljmp
push
lods
repz
sub
adcl
or
mov
stc
jmp
scas
in
mov
dec
inc
xchg
pushf
xor
test
enter
nop
rcrl
movsb
lgs
les
jecxz
fsubs
pop
jg
out
dec
jge
popa
jecxz
and
dec
cmc
add
pop
jmp
movsl
aaa
sti
xchg
bound
fwait
insl
adc
inc
push
dec
push
in
mov
daa
mov
inc
or
dec
iret
mov
mov
and
cwtl
scas
cmp
data16
mov
aam
cs
clc
push
cld
or
lods
ret
jge
je
stos
push
mov
out
mov
rcrl
test
jcxz
and
or
loopne
shr
popa
mov
inc
push
push
pop
mov
xchg
dec
and
cli
mov
ja
mov
pop
out
adc
mov
xchg
and
xchg
pusha
mov
data16
sbb
jns,pn
pushf
dec
fwait
shll
add
icebp
jg
test
outsb
sbb
and
mov
ret
mov
cli
out
sub
mov
mov
out
and
fisttps
cwtl
das
gs
insb
cmp
addr16
push
xor
pop
xor
pop
dec
mov
dec
movsl
ror
imul
jge
lods
repnz
sbb
adc
js
dec
iret
test
xchg
bound
xor
xchg
push
int3
mov
sbb
jmp
xchg
out
push
loopne
push
pop
loopne
lock
add
dec
shll
push
xchg
cs
lret
shrl
out
xchg
cmp
cs
sbb
adc
lock
movsl
xchg
inc
mov
jne
and
jae
scas
sbb
pop
mov
fcmovne
outsb
in
daa
pop
xchg
fsubrl
in
xchg
out
call
adc
push
ds
insl
ds
mov
sbb
pop
cmp
sahf
cmpsl
js
cld
aam
lea
xor
pusha
or
sbbl
das
out
sahf
sarl
stc
push
mov
clc
sti
dec
lahf
cmpb
mov
sbb
jmp
adc
and
notb
scas
mov
test
mul
lds
cmp
xchg
lds
gs
and
cmp
mov
cwtl
out
mov
fiaddl
sub
popa
sahf
cmpsl
pop
jae
sbb
cli
mov
cmp
pop
enter
and
sbb
mov
shrb
dec
or
or
cmp
test
rcll
xchg
inc
add
push
xor
shl
movsb
jge
out
es
cs
mov
outsl
pop
inc
stos
jecxz
popf
loop
lret
mov
mov
pop
in
loop
cmp
fsubrl
in
fnstsw
inc
insl
lcall
dec
loop
mov
nop
push
jge
xchg
fadds
mov
fs
mov
int3
dec
enter
pop
and
out
cwtl
xchg
xchg
mov
mov
lea
xor
mov
and
dec
pop
stos
ds
jmp
lcall
dec
icebp
not
aam
add
mov
cld
mov
sbb
arpl
mov
test
mov
ljmp
adc
pop
lea
pusha
int
fdivs
ljmp
jmp
and
cmpsl
add
xlat
enter
jnp
ljmp
and
mov
rcl
adc
aas
cmp
xchg
lahf
out
mov
pop
push
sub
sub
inc
mov
mov
fbld
mov
jge
faddp
ss
sbb
add
imulb
xchg
jp
pusha
xchg
insb
sbb
and
inc
push
inc
addr16
mov
sub
sbb
pop
das
jg
pop
jmp
xchg
je
fadds
xor
test
idivl
mov
dec
loope
popf
rcrb
popa
movsl
cmp
out
cmc
ret
mov
jb
push
call
mov
sahf
inc
mov
lods
mov
arpl
xchg
dec
lods
mov
inc
xchg
fistpll
mov
sti
cmp
sarl
inc
jne
push
xor
push
cmp
fisttpl
cmp
dec
jnp
insb
scas
sub
aaa
mov
int
insl
imul
mov
fdivr
sahf
test
dec
adc
loope
fsubr
adc
andb
sbb
inc
fldt
add
fbld
test
int3
cmpsb
cmp
push
push
inc
int
insb
test
cmpb
imulb
sub
dec
in
push
and
rolb
out
bound
mov
xchg
cmpsl
jbe
xchg
gs
jns
stos
lods
pop
add
hlt
push
sub
into
push
jae
mull
pop
xor
xchg
mov
call
dec
sar
test
xor
std
scas
pushf
dec
pop
daa
sbb
jl
push
sub
cmp
sbb
cld
cwtl
subl
lcall
int3
cld
out
pop
jle
jae
push
daa
lods
stc
lds
flds
xchg
cld
fisubs
xor
jge
mov
jg
stc
inc
enter
pushf
or
frndint
or
and
jecxz
add
int
lret
mov
es
movsb
push
pop
nopl
sub
ss
or
push
clc
lahf
fistps
lods
int3
and
enter
sarb
jmp
cs
incl
dec
add
fbstp
stc
ret
aaa
dec
dec
ja
push
movsb
fsts
inc
hlt
ret
jp
push
rclb
sti
sub
insl
ret
ds
into
mov
cmp
pop
stos
es
mov
add
and
mov
xor
xor
lahf
rorl
fimuls
addr16
push
loopne
mov
push
inc
in
shrb
sub
ret
and
je
sbb
pop
lds
adc
pop
cmp
ljmp
push
icebp
hlt
mov
enter
js
add
inc
mov
int
hlt
mov
push
mov
dec
adc
cmp
xor
roll
mov
mov
jl
mov
dec
dec
sbb
xlat
pop
lea
or
mov
sbb
popa
shrl
lods
test
shl
int3
add
push
mov
lea
or
test
mov
dec
ret
std
popa
testb
and
les
int3
lds
outsb
jl
jnp
mov
rcll
fcos
dec
sbb
xchg
icebp
inc
aam
int3
mov
ret
hlt
mov
xchg
sahf
pop
jge
pop
loope
notl
push
repz
jae
cltd
mov
jl
mov
jmp
std
ss
insb
imul
pop
flds
lods
or
mulb
sarl
push
pushf
arpl
stos
and
daa
pop
mov
xorb
pop
jge
mov
pop
mov
and
cld
dec
push
sti
xchg
mov
mov
add
cmpb
push
cld
imul
subl
std
subl
push
inc
roll
inc
xchg
les
sbb
imul
outsl
xchg
or
pop
sbb
sbb
jl
mov
in
pop
mov
fstl
add
lret
sub
and
xchg
iret
test
mov
stc
xchg
sbb
bound
sarb
mull
pop
pusha
stos
lods
icebp
rcl
mov
mov
jle
jo
and
es
je
in
dec
mov
mov
lret
push
call
movsl
scas
mov
cmc
push
adc
xchg
dec
sti
ss
call
lock
shlb
filds
add
popa
insl
bound
arpl
pop
mov
mov
scas
push
in
mov
lcall
jmp
inc
xchg
or
mov
mov
lcall
mov
jle
pop
aas
adc
or
test
lock
mov
arpl
or
sahf
xor
notl
jge
add
cld
mov
scas
sahf
pop
mov
inc
cltd
mov
push
mov
fwait
inc
sarb
mov
mov
icebp
or
sbb
cli
mov
or
ret
lods
outsl
sbb
push
in
popa
dec
pop
fsubs
lahf
lret
push
fsts
inc
test
sbb
inc
mov
jg
jae
fistps
inc
adc
js
dec
data16
jae
repnz
dec
xor
cmp
mov
xchg
cs
rorl
sti
mov
aam
dec
cmpl
or
sbb
jp
pusha
push
hlt
push
sub
daa
shrl
push
fnstenv
push
ret
and
sub
cs
std
test
outsw
adc
xchg
repz
enter
shrl
adc
imulb
mov
cltd
adc
cmp
and
or
sub
lods
inc
jmp
xchg
or
dec
jbe
mov
adc
push
inc
jae
cmpsb
add
das
mov
dec
mov
jo
jecxz
or
cmc
add
fsubp
mov
jge
mov
inc
or
lds
fmuls
and
shll
pop
push
popf
xchg
or
inc
sub
mov
mov
pop
pop
pop
pop
sub
popf
sub
sub
jle
es
jecxz
call
pusha
adc
fsubrs
mov
mov
mov
xchg
lahf
add
mov
xchg
xor
mov
cli
fnstsw
dec
or
xchg
orb
mov
mov
jne
int
loop
sub
add
int
or
cmp
and
fimuls
cld
mov
leave
and
fs
mov
mov
fwait
lock
aam
call
lods
push
pop
sbb
push
test
cmp
nop
pop
int
int
arpl
in
pop
popl
and
faddp
stos
push
lcall
mov
cld
adc
idivb
jb
add
cmp
bound
sub
rclb
or
and
movsl
dec
loope
fs
lods
popl
cmp
jle
or
push
mov
mov
mov
jge
add
in
mov
jge
jns
add
push
adc
ljmp
scas
sub
inc
mulb
int3
fcmove
dec
jo
in
insl
daa
add
gs
lods
cli
ret
in
and
pop
xor
in
sub
ss
movsb
jnp
loope
xchg
nop
push
xchg
add
popa
pop
leave
cmpsl
sbb
xchg
sub
inc
addb
or
sbb
dec
lret
or
sbb
and
addr16
pop
hlt
insb
cli
sti
cs
lret
jo
adc
hlt
sbb
adc
and
jno
and
inc
inc
jb
in
sarb
loopne
in
inc
dec
jno
pop
jbe
lods
mulb
jle
shrb
fsts
fs
popf
pop
xchg
fisubs
loopne
fs
fisttpll
sbb
loopne
in
out
add
add
xchg
ret
lcall
leave
mov
mov
loop
and
fst
jge
push
dec
in
aas
mov
leave
incl
jl
enter
mov
sahf
js
das
mov
and
sub
fldcw
and
sub
ljmp
or
jne
out
outsl
push
lret
aam
dec
mov
insb
clc
out
sub
push
push
stos
xor
xor
jb
or
or
and
addr16
mov
mov
arpl
jmp
push
cmp
inc
dec
xor
fdiv
repz
pop
pop
mov
jne
push
ret
xchg
xchg
jno
or
jle
out
pop
testl
sti
sub
or
add
sub
aas
outsb
sub
fbld
push
lock
out
cmp
xlat
clc
cmp
aam
lock
xchg
popf
scas
sub
jno
fcompl
mov
dec
xor
inc
mov
inc
xchg
push
int
fldcw
into
inc
adc
ja
mov
push
mov
pop
test
dec
les
cmpsb
jle
inc
subb
xchg
hlt
test
cmp
dec
and
subb
fwait
or
jl
mov
frstor
push
jl
pushl
push
inc
adc
je
jbe
jecxz
inc
jnp
gs
or
notb
jae
enter
ljmp
pop
mov
dec
leave
icebp
in
call
cmp
sarl
ret
fists
mov
jmp
into
add
sarb
jle
jecxz
or
cmp
add
mov
cwtl
push
js
sub
repnz
mov
cmp
stos
push
add
int
in
dec
out
enter
inc
ja
or
and
dec
xor
nop
or
push
in
adc
fsubl
lahf
inc
idivb
mov
mov
xchg
jl
shlb
push
adc
jb
mov
xor
jo
popf
inc
loopne
rorl
xchg
xchg
repnz
push
rorl
and
fwait
adc
idivl
imul
ljmp
add
movb
ret
sahf
je
or
sub
push
jp
fdivl
in
adc
mov
jl
imul
adc
roll
imulb
icebp
or
sbb
jo
out
inc
fcoms
xor
cld
lret
loopne
ljmp
pop
test
nop
adc
incb
inc
mov
cmpsl
cmp
mov
cld
jbe
and
adc
mov
int
dec
cmpsb
dec
jnp
sarb
push
sub
and
lock
xor
jns
pop
mov
xor
iret
stos
add
fcom
jne
mov
jle
orb
jo
add
pop
fisttpll
push
in
ret
dec
pop
xor
dec
sbb
das
and
mov
jmp
rcll
lea
into
loopne
push
push
mov
lret
mov
mov
pop
mov
loopne
pop
pop
pop
dec
jns
and
adcb
lods
lods
sahf
xchg
pop
aaa
cmp
mov
es
in
test
sub
push
mov
ret
pop
bswap
or
inc
fimuls
dec
jns
movsb
bnd
fnsave
arpl
pop
rcrl
mov
push
mov
outsb
aad
shll
rorl
jb
cmp
in
sbb
fisubl
xor
out
mov
dec
loopne
or
mov
loope
add
bound
mov
xchg
lds
and
fldenv
mov
add
mov
out
sbb
sub
push
xchg
fnstenv
and
out
xchg
lret
jle
sbb
je
inc
out
and
adc
orb
sti
fldenv
ret
mov
inc
dec
icebp
push
mov
dec
shr
pop
mov
je
lock
add
insl
cs
popf
push
ljmp
movsl
xor
lock
in
and
js
bound
xchg
pop
sub
push
sti
xor
inc
jno
pop
push
mov
rcrb
aaa
daa
ja
pop
cmovb
loop
insb
inc
sub
xchg
js
out
mov
xchg
lret
jg
popf
cwtl
outsl
xchg
dec
cmp
dec
jl
dec
lock
sahf
xchg
inc
mov
dec
push
stc
jno
in
cli
adc
pop
xchg
push
adc
xchg
fwait
jg
jecxz
dec
sbb
hlt
mov
add
add
movsb
lods
loop
addr16
push
addl
lock
xor
repnz
and
sbb
int3
lds
mov
mull
dec
sub
push
mov
hlt
adc
pop
mov
jae
mov
or
scas
gs
clc
jmp
push
jg
pop
xchg
aas
lock
xor
hlt
sahf
fnsave
and
insl
pop
xchg
shl
out
add
and
cmp
mov
fbld
sub
stos
or
add
inc
sahf
mov
pop
scas
xchg
ss
push
cmp
scas
inc
pop
sub
enter
xor
mov
adc
ljmp
push
cmpsb
orb
mov
leave
rolb
mov
dec
bound
mov
inc
lahf
cmp
mov
mov
mov
rol
mov
cmpsl
mov
cmpsl
jmp
je
bound
or
mov
add
daa
pop
aas
mov
mov
inc
stos
popf
outsb
outsb
fimull
push
pop
popa
adcb
xchg
inc
mov
or
outsl
pop
mov
inc
fwait
call
idivl
jg
jmp
add
dec
fdivl
shrl
inc
ret
aam
enter
clc
fstl
inc
pop
sub
inc
aaa
gs
fs
xchg
inc
stos
push
xchg
fnsave
jg
rcll
gs
jp
movsb
nop
call
push
fimull
lods
in
jnp
mov
sub
and
lcall
rorl
cmpl
and
sbb
dec
and
xor
jae
inc
ffreep
mov
pop
mov
lock
icebp
push
in
dec
ljmp
jno,pn
xchg
in
mov
stc
add
mov
notl
push
inc
cmp
sub
and
add
xchg
enter
push
pop
insl
cmp
cs
out
jne
test
xchg
jne
lret
lods
add
xor
fadds
pop
xchg
aam
jg
pushf
fnstcw
add
es
fsubrl
fidivrs
xlat
test
hlt
and
fwait
xorl
rcrl
inc
out
repz
cmc
shll
daa
push
add
es
ja
call
adc
mov
sti
inc
scas
pop
adc
xor
out
cmp
test
jno
sub
shrl
sub
pop
cltd
lret
mov
cltd
lods
fwait
cmpsl
imul
or
jp
pop
ret
shlb
jno
cmp
scas
rorl
lods
inc
push
push
fnstsw
pop
fstl
add
insl
jmp
xor
push
cmp
loope
aas
cmc
outsb
mov
in
pop
outsl
pop
test
popa
xor
sbb
imul
roll
push
add
jg
inc
out
cmp
lret
adc
std
sbb
xchg
cmp
cmc
jo
subl
ja
xor
jecxz
xlat
and
pushf
nop
fisttpll
cmp
loopne
push
or
out
or
js
into
testl
das
add
decl
push
lret
adc
fistpl
add
ror
fldt
adc
mov
fidivrl
jp
cmp
jo
cmpsb
test
data16
aas
or
xchg
or
adc
xorl
test
push
cwtl
push
adc
movsl
pushf
xchg
mov
out
mov
loop
in
or
iret
sub
jbe
jnp
out
stc
and
outsl
loopne
sub
cmp
mov
fs
pop
dec
inc
stc
or
push
push
cmp
push
jecxz
popf
ret
insb
pop
loopne
adc
xchg
das
xchg
jne
stos
xchg
sbb
cmp
add
sub
insb
inc
xor
test
imul
insl
mov
mov
sub
insb
ljmp
jno
pop
int3
push
aaa
hlt
jp
mov
out
loop
xchg
cmc
shlb
xor
add
cmpsl
xchg
mov
or
les
xorb
xor
das
lahf
js
pop
cmc
es
in
or
pop
dec
popa
mov
sub
fstps
and
and
bound
dec
or
iret
xor
mov
les
stos
push
cmp
xchg
popf
mov
inc
les
cmp
cmp
pop
xrelease
xorl
jnp
iret
mov
std
sbb
xchg
xchg
push
and
or
sub
push
adc
popf
mov
jns
jecxz
lahf
ficomps
add
push
mov
test
aam
mov
call
sbb
icebp
sarb
lods
xor
xchg
push
sbb
mov
jecxz
stos
dec
fcmovb
jae
into
mov
lods
sub
sbb
outsl
or
pop
sahf
insl
test
enter
and
popa
cwtl
mov
cld
divb
cli
orl
rcl
pop
js
xchg
es
js
movsl
xor
push
fwait
popl
mov
and
fcoms
bound
outsb
cmp
into
jge
cmc
jg
hlt
imul
sub
add
add
pop
xchg
inc
mov
call
jb
xor
mov
push
addr16
cltd
icebp
sub
lret
imul
inc
push
inc
push
dec
mov
cmp
jge
cmp
mov
fdivr
sub
xchg
fists
or
adc
fwait
pushf
rolb
mov
les
sub
mov
sarb
imul
adc
mov
ret
inc
rcr
arpl
cmp
rol
gs
or
loope
out
sbb
jne
jbe
ja
lret
sahf
pmaxsw
jne
mov
xor
dec
jecxz
das
add
ja
jnp
cltd
and
cmova
mov
div
nop
lods
dec
fiadds
xchg
movsl
jl
xchg
loope
xchg
jl
adc
pop
adc
or
ljmp
mov
fsubr
xchg
ljmp
hlt
cltd
inc
subb
popa
xor
or
in
in
add
addb
loopne
sbb
jae
add
cmpb
jbe
xlat
mov
sub
cmp
test
or
sti
idivb
add
sbb
scas
out
lds
repz
add
sub
or
sbb
sbb
jbe
sbb
pushf
dec
imul
inc
test
insl
ret
call
sahf
mov
xchg
adc
nop
xchg
sbb
pop
rcl
leave
cmp
repnz
das
and
ficompl
movsl
inc
push
sar
inc
adc
dec
rcl
sbb
adc
xor
loop
gs
adc
inc
adc
sub
test
adc
cmpsb
data16
sbb
or
or
mov
enter
add
fisttpll
les
neg
mov
into
iret
aas
popf
sbb
cs
sbb
pop
test
xchg
pop
orb
sub
sub
jbe
xchg
cwtl
inc
call
addl
fwait
cli
mov
cltd
cmc
mov
iret
aad
repz
test
imul
push
xchg
dec
mov
inc
daa
dec
outsl
jb
pusha
sbb
cmp
mov
je
fcomi
xchg
out
movsb
mov
adcb
inc
in
or
sub
mov
mov
stc
mov
inc
jmp
shll
push
xorl
jge
or
inc
arpl
pusha
or
shl
dec
mov
and
adc
test
je
sbb
mov
and
repnz
sub
stc
outsb
pop
pop
adc
xor
lods
aaa
xlat
jl
aad
push
es
mov
xor
push
sbb
inc
nop
jle
leave
adc
and
dec
aam
sub
imul
jl
push
repnz
sbb
jae
cltd
mov
dec
adc
dec
jle
test
pop
test
jl
or
mov
dec
pop
or
mov
in
mov
and
loop
sbb
mov
adc
inc
in
cmpsb
adc
pop
lret
movlps
lods
test
jbe
xchg
ss
movsl
jb
cmc
mov
jecxz
fwait
add
nop
push
arpl
mov
jmp
sub
and
mov
imul
sbb
jo
fsubs
jecxz
in
mov
xchg
fs
into
dec
es
inc
mov
add
cwtl
mov
jae
mov
aaa
xor
fists
sarb
sbb
test
cs
fbstp
inc
popf
cmpsb
mov
pop
test
repz
fucom
mov
mov
rolb
mov
xor
icebp
inc
call
add
les
adc
xor
xor
lahf
fcmovb
dec
cmp
andb
mov
inc
roll
repz
sub
dec
outsl
rclb
ja
out
cmpsl
into
or
ja
popf
pop
mov
cli
mov
pop
repnz
sahf
jg
ss
mov
sub
call
out
loop
xor
sahf
sub
das
lock
in
or
outsl
cmp
sub
popf
sbbl
xor
add
bound
push
adc
dec
pop
test
das
fwait
clc
aam
jle
popf
mov
mov
jbe
insl
cmc
adc
addr16
fs
out
and
push
popa
jg
push
mov
pop
lods
pop
outsb
sbb
in
fdivr
inc
cld
pop
or
xchg
in
and
loop
pop
pop
jne
cmc
repz
scas
adcb
fucom
adc
testb
int
test
push
shll
mov
xchg
push
arpl
and
cmp
out
test
ljmp
div
dec
jge
push
and
ss
test
cmp
bound
inc
push
cmp
xor
push
cltd
testb
sub
in
xor
lret
insl
stc
clc
and
or
pushf
aad
inc
dec
sub
pop
fadds
cmovp
cwtl
mov
inc
push
xor
repz
sahf
push
sub
test
and
cmpsb
jb
imul
insl
roll
into
clc
jno
adc
fidivl
idivl
and
stos
xchg
and
loop
mov
mov
rcrb
ficomps
insl
fmuls
push
push
in
push
daa
adc
cmc
hlt
inc
ficoms
stos
push
test
sarl
cmpb
mov
push
cli
add
xor
sub
gs
test
sbb
into
mov
flds
dec
xchg
sbb
ret
icebp
mov
inc
xor
in
fildl
inc
aaa
lock
addr16
fimull
out
and
pop
test
outsl
sti
fwait
inc
ret
cmp
bnd
shlb
scas
or
add
xor
push
dec
pop
pop
adc
add
cmp
into
mov
jnp
mov
push
addr16
aad
das
mov
xchg
leave
sub
jge
sub
mov
fstps
or
sub
push
es
imul
movsl
push
xor
lret
ffree
cltd
xchg
call
cltd
mov
cmp
xchg
pop
shrb
nop
cmc
scas
cwtl
xchg
jl
mov
inc
xchg
cld
mov
sbb
aam
mov
and
pop
mov
pop
mov
icebp
cmp
sbb
and
out
in
jmp
ret
push
or
mov
xor
add
jmp
fucomp
loopne
mov
nop
sbb
scas
xchg
inc
push
cmovbe
mov
xchg
loope
xchg
mov
mov
icebp
fwait
jecxz
cmp
es
jle
mov
shrb
inc
fsts
cmpsl
les
sarb
adc
or
jnp
mov
ret
sbb
xchg
jbe
iret
push
divl
jl
cmpl
fbstp
push
push
or
int3
push
pop
add
je
jl
lods
pop
fstpt
je
and
xchg
ds
dec
cmc
pop
push
pushf
fmuls
adc
pop
pop
pop
shlb
mov
movsl
push
in
push
sbb
call
fwait
int3
ret
popa
xor
add
loop
popf
mov
iret
pop
cmc
pop
push
jl
out
addb
inc
mov
and
mov
repnz
cmp
lcall
dec
push
into
fisubl
xor
mov
xchg
inc
fwait
cmc
and
inc
and
or
mov
dec
shl
fldt
push
sub
and
add
push
add
mov
add
jb
stos
repz
dec
iret
sarb
jp
push
jne
neg
or
test
cwtl
hlt
and
pop
shr
loopne
push
call
xor
getsec
insb
mov
arpl
sbb
fwait
pushf
jno
iret
sub
jmp
jnp
lock
fsts
mov
adc
test
jge
movsb
shrb
outsl
dec
movsl
out
lods
adc
scas
sti
sbb
mov
dec
rclb
pop
lret
out
icebp
ss
pop
shl
add
adc
movsb
loop
inc
mov
xchg
mov
dec
lahf
sub
in
dec
mov
pop
inc
mov
jg
loop
movsl
pop
ret
add
jp
add
push
inc
lret
push
test
xor
sbb
inc
stos
fmuls
icebp
dec
push
push
aas
nop
mov
shr
mov
leave
pop
cmpw
jno
xchg
xchg
sub
add
push
dec
imul
pop
and
jg
inc
fcompl
mov
or
inc
jg
add
push
inc
xchg
add
in
enter
inc
in
push
pop
aas
std
xchg
dec
repnz
imul
jmp
fsubs
shr
stc
popf
mov
and
outsl
sub
inc
or
or
jo
pxor
test
ret
or
rcrl
cli
repnz
dec
xlat
sub
into
repnz
aas
addl
aaa
jbe
data16
mov
icebp
out
push
pop
lods
stos
ds
mov
mov
mov
adc
ret
addr16
pop
outsl
xchg
dec
sub
cmp
jg
into
ret
mov
scas
jb
shr
std
dec
push
inc
call
ss
in
push
pop
pusha
aaa
pop
lods
dec
mov
sbb
dec
push
mulb
loopne
insl
add
mov
andb
inc
and
pusha
out
push
pop
inc
sbb
inc
xor
cmp
jp
bound
jge
jg
ret
sub
and
icebp
and
xchg
test
cmp
jg
fisubl
insl
lods
scas
ret
pusha
xor
cwtl
inc
cmp
add
xchg
lods
daa
inc
cmc
repz
inc
push
lret
rcl
cmpb
fwait
cmc
jnp
icebp
fsts
jb
std
add
xchg
test
insb
imul
fidivrl
and
popf
sbb
sbb
or
sbb
dec
loope
scas
insl
loopne
int3
jb
stc
pop
nop
fdiv
cld
rolb
mul
cmp
jg
sbb
repnz
pusha
adc
shll
or
push
mov
xchg
pop
andb
inc
mov
jge
mov
cltd
pop
sbb
leave
arpl
and
or
mov
xlat
mov
insb
test
and
fidivl
loope
call
movsb
test
sub
dec
xchg
push
out
xchg
mov
pushf
cwtl
mov
xchg
mov
mov
cmpsb
sub
mov
cmp
loope
lret
cld
pop
sahf
xchg
push
shr
or
cmpsl
shl
stc
xchg
outsl
addl
cwtl
rorb
xor
lock
fmull
mov
lods
cmp
push
fdivrs
push
stos
mov
sub
sub
jecxz
pushf
sub
repnz
leave
xchg
inc
and
int
loop
nop
dec
test
sub
test
push
psllw
xlat
pop
out
stc
daa
or
pop
inc
mov
pop
pusha
adc
xchg
cmp
cmp
pusha
inc
mov
mov
and
ljmp
cmp
mov
cmp
push
push
scas
addr16
pop
in
cmpsb
jae
cmp
lods
pop
inc
inc
cltd
ret
add
pop
cmp
sti
test
add
movsb
and
icebp
xchg
lds
push
outsl
inc
xchg
aas
rclb
jno
test
jne
loop
ja
data16
xchg
imul
pop
push
adc
bound
jns
lret
sbb
pop
jb
and
addr16
adc
mov
in
ss
mov
xor
sahf
xor
push
xchg
sub
sub
add
and
mov
jg
pop
and
ja
cmp
mov
xlat
pushf
out
lods
push
sbb
mov
fs
pop
push
lock
cmpsb
sbb
insl
inc
imul
mov
fbstp
mov
lods
mov
imul
rcrl
clc
add
push
jbe
mov
testl
jae
es
js
or
in
dec
cltd
and
pop
test
push
xchg
sahf
or
mov
jmp
xlat
les
lcall
mov
pop
icebp
repnz
mov
ss
ja
in
xor
fmul
in
aad
cmp
add
cld
repz
sbb
fiaddl
inc
inc
in
js
movsb
pushf
cmc
movsl
mov
and
pop
lret
test
mov
pop
je
sbb
in
jmp
pop
ja
fisttps
and
test
addr16
cmp
mov
jns
mov
sub
adc
rcll
push
ljmp
enter
xor
sbb
movsb
pop
sub
mov
mov
dec
out
sbb
adc
js
mov
adc
aad
lahf
pop
sahf
sbb
add
daa
xchg
mov
mov
aam
fiadds
xlat
lea
pushf
sbb
jle
dec
cmp
pop
mov
test
pop
punpcklbw
jp
dec
shrl
nop
pop
cmp
cmpsl
lret
cmp
jl
push
loope
sbb
inc
popf
loope
or
loope
or
in
mov
arpl
xchg
out
lea
push
repnz
add
push
xor
dec
out
enter
sbb
dec
push
xchg
imul
pop
cs
out
inc
pop
inc
mov
pop
mov
out
into
dec
cmp
push
sub
or
cwtl
jp
or
ret
jb
imul
push
lret
stc
shlb
cmpsl
es
nop/reserved
cmpsl
pop
movsb
cmp
loopne
sbb
int
adc
add
push
test
mov
mov
inc
aad
adc
mov
fmull
icebp
inc
ds
inc
sbb
mov
mov
pop
shl
push
lods
push
mov
dec
jp
sbb
lock
jmp
js
xor
sub
enter
xchg
loope
inc
nop
sub
mov
add
jl
jmp
stos
inc
test
adc
jecxz
mov
sbb
loop
gs
ret
mov
scas
mov
fwait
inc
out
movsb
pop
iret
xor
ljmp
mov
in
ss
dec
in
popf
sbb
lret
inc
cwtl
mov
enter
outsl
cmp
fstpl
outsl
imul
inc
popf
add
cmp
jecxz
lock
out
into
adc
jnp
xchg
cmp
mov
xor
shlb
inc
ja
in
enter
test
cmpsb
popf
movsb
pusha
ret
xchg
insl
inc
dec
sub
fcoml
dec
aad
mov
cmp
stc
out
inc
das
sub
sti
xor
pop
in
aam
subl
xchg
and
jg
pop
or
enter
out
mov
movsb
adc
jnp
push
or
inc
cmp
cmpsb
test
xor
das
or
xor
pusha
into
add
push
xorb
push
mov
aas
push
das
lods
mov
loope
adc
sti
sub
dec
mov
xchg
cmpsl
add
std
xchg
push
into
xchg
dec
xchg
test
stos
fldt
sti
imull
add
pop
in
cmp
or
out
leave
jbe
add
mov
pop
jmp
insl
aas
adcl
stc
rcrl
jmp
mov
push
push
dec
cmp
iret
push
xlat
das
sub
or
mov
pushf
int
sbb
mov
sbb
xor
aas
and
stos
test
cmc
mov
aam
repz
adc
dec
lea
inc
iret
mov
sarb
imul
in
fiaddl
insl
orb
inc
pop
lcall
cli
shl
fstpt
cld
pop
jge
or
cmpsl
push
adc
dec
scas
and
or
cmpsl
sbb
xchg
inc
sahf
xlat
dec
mov
push
idivb
and
fdivs
gs
jb
ss
fs
ljmp
mov
mov
out
sarl
sbb
xor
jecxz
jnp
cltd
out
mov
loopne
ds
fists
call
adc
pushf
pop
icebp
sbb
in
fbld
jle
dec
push
ds
mov
ds
dec
pop
out
push
test
and
mov
pusha
xchg
fwait
inc
push
xchg
cmp
mov
mov
mov
leave
mov
cltd
lret
xchg
iret
sub
push
dec
fldenv
jp
jb
sub
jle
and
jle
and
sub
sub
pop
pop
movsb
mov
outsl
subl
and
jecxz
jmp
lock
jno
repz
lods
pop
jge
addl
push
fmul
das
iret
mov
testl
insl
inc
fdivrl
jae
xchg
aaa
dec
call
jecxz
mov
mov
ss
push
outsb
incl
xchg
dec
js
dec
adc
or
dec
mov
mov
jle
push
test
inc
sahf
mov
and
icebp
cmp
cmp
cmp
and
es
outsb
icebp
aas
aaa
call
jb
aam
adcb
push
mov
mov
lods
dec
daa
scas
mov
rolb
mov
mov
xor
popf
mov
add
cmp
shrl
jno
fisubrl
add
inc
mov
xchg
iret
dec
jnp
rcl
adc
movsl
inc
sub
fdivr
aam
shrb
js
in
pop
das
mov
test
sarl
in
int
or
or
sub
sbb
test
xchg
sbb
cmpl
inc
jne
fists
shrb
adc
iret
in
xchg
fwait
push
fdivrl
in
mov
add
pop
popa
mov
xchg
push
cmp
mov
and
push
sub
mov
mov
sub
leave
nop
add
xchg
test
mov
dec
inc
jb
sarl
adc
add
pop
cmp
dec
inc
aam
imul
mov
cli
lret
or
test
inc
hlt
lds
pushf
cmpsl
and
data16
pop
xor
stos
mov
dec
dec
imul
pop
sahf
out
leave
jo
cmp
inc
jo
push
test
insb
jmp
adc
or
sbb
dec
add
mov
lcall
loop
or
push
adc
js
nop
jmp
pushf
icebp
and
sub
push
xchg
pop
inc
cmp
outsl
addr16
or
inc
jmp
add
jns
cli
and
js
pusha
cmp
add
inc
pop
aaa
cmp
inc
in
imulb
mov
lcall
inc
and
push
cmc
cmpsb
dec
insb
pop
cmpsb
fisubl
or
dec
out
lods
xor
sub
ficompl
repz
dec
pop
sub
dec
xor
push
xchg
in
sbb
nop
inc
insb
div
sub
sub
int3
rorl
mov
lods
enter
roll
xchg
lock
cmpsb
lret
cmpsb
jbe
inc
lahf
mov
sbb
ficoml
adc
lahf
cli
cmpsl
xchg
leave
cs
sbb
push
inc
cmp
jg
xchg
xchg
mov
call
cmp
jae
mov
xchg
repz
stos
orb
mov
test
movsl
insb
cltd
test
xchg
inc
adc
mov
lock
push
inc
cwtl
or
or
rorl
nop
lea
dec
push
sbb
jo
fdivrp
clc
faddl
lea
mov
lret
and
out
lahf
pop
arpl
xor
pop
sbb
pop
pop
shll
mov
mov
nop
mov
cld
lret
pusha
bound
rolb
movsb
adc
mov
xlat
dec
pushf
add
jge
fldcw
xor
xchg
daa
xor
mov
das
stos
jae
push
inc
fsubr
sbb
push
fistl
ds
movsl
dec
repz
inc
inc
pusha
fidivrs
xchg
faddl
jl
rol
sub
fisttpll
pushf
cmp
push
adc
dec
inc
cli
jp
jne
pop
shrb
inc
daa
test
cld
adc
movsb
pusha
push
cmp
call
push
push
scas
data16
bound
and
xchg
das
jl
cmp
pop
adcl
add
outsl
cld
add
xchg
adc
mov
mov
idivl
xor
stos
sub
incb
cmp
es
call
xor
push
adc
jp
fistpl
push
and
int3
xor
xor
mov
popf
in
sub
dec
nop
push
daa
pop
pop
cmp
add
scas
mov
lahf
stc
xor
fnstsw
mov
and
mov
xchg
dec
add
mov
push
xor
scas
es
or
lahf
das
pop
jge
xchg
sub
aas
sub
dec
xchg
jae
loope
and
pop
push
call
es
mov
mov
adc
ja
loop
mov
dec
mov
cmp
aad
fcoml
lds
push
ficoml
xchg
leave
pusha
pop
jp
in
add
imul
cmp
sbb
pop
and
into
mov
xor
rol
sarb
adc
orl
push
test
mov
fldenv
inc
cmp
das
sbbl
jae
enter
outsl
mov
es
aad
cmp
sbb
fsubrs
jo
fldenv
pop
and
iret
adc
jp
scas
aam
or
outsb
pop
or
mov
xor
xlat
or
jb
sbbb
lea
movsb
wbinvd
sub
dec
add
fstpt
mov
mov
xchg
push
outsb
test
xchg
insb
test
add
mov
nop
pop
aas
scas
lcall
mov
jno
pusha
cmpsb
out
xor
in
adc
ss
pop
xchg
mov
dec
mov
mov
xchg
cmpsl
out
jecxz
mov
repz
movsb
jae
mov
outsb
xchg
xchg
loopne
jae
rcll
addb
jb
lods
lahf
icebp
cld
jno
aas
fdivrs
mov
push
in
imul
out
push
pop
cltd
and
sbb
add
repnz
and
xchg
notl
rcrl
int3
add
inc
fdivrs
mov
add
rorb
or
shll
inc
mov
sub
xor
int
cltd
les
xor
pop
add
sbb
cmp
stc
pop
lods
pop
xchg
insl
neg
lods
test
push
out
inc
loope,pt
jns
gs
movsl
jo
and
call
jge
or
push
push
cmpsl
test
inc
das
das
test
push
dec
jne
inc
imul
xchg
cltd
sub
lock
aad
sub
cltd
std
add
mov
rcrb
dec
inc
in
in
movsb
dec
pushf
pop
pop
jle
cs
pop
push
test
and
mov
jo
pop
add
dec
inc
out
clc
insb
outsb
adc
pop
jge
lds
rorl
ja
popf
mov
lock
jmp
es
and
or
pushf
arpl
mov
xchg
adc
inc
xchg
and
cmpsb
mov
insb
sub
pop
ss
sub
into
lret
push
jmp
sbb
sbb
int
xchg
in
mov
and
call
add
pusha
aas
dec
leave
push
jp
out
test
sub
jb
stos
scas
cmp
mov
iret
loopne
lret
call
call
push
jnp
setp
int3
xchg
les
push
sbb
arpl
enter
sub
mov
outsl
xchg
int3
xor
sbb
out
push
push
mov
sub
dec
repnz
mov
in
cmp
dec
mov
sbb
mov
mov
add
jg
addr16
mov
cmpsl
iret
out
iret
mov
and
mov
ja
push
jg
pop
orb
cmp
inc
mov
push
out
shll
addr16
les
aad
into
add
mov
lret
mov
mov
repnz
out
sbb
test
push
es
rolb
jecxz
xchg
mov
jnp
xchg
popa
ds
jb
dec
dec
xor
sub
leave
cmp
aam
fdivs
sub
inc
inc
cmp
es
into
mov
scas
dec
inc
add
jbe
mov
test
and
jbe
cmpsl
js
addr16
xchg
xor
inc
push
pop
push
sbbl
pop
es
xchg
xchg
dec
xor
mov
inc
push
push
repz
push
test
mull
xchg
das
cmp
insb
jnp
sbb
sbb
insb
fmulp
mov
sti
xchg
inc
addr16
lea
cmp
jnp
aas
sarl
pop
orb
cmpsb
enter
fcmovnbe
mov
lods
dec
daa
repz
pusha
add
ss
sbb
movsl
cmpsb
mov
dec
addr16
cmp
adc
imul
mov
mov
mov
fdiv
jbe
xchg
int
mov
push
aaa
cmp
dec
push
sbb
jno
ret
arpl
pop
mov
nop
arpl
arpl
xor
inc
sub
jnp
dec
lock
aas
jle
test
jns
lods
xor
jle
or
fcomps
das
pop
data16
xchg
mov
inc
adc
xor
test
call
rorl
vmfunc
xor
cmp
popa
adc
mov
idivl
xlat
push
lea
add
or
mov
movsl
mov
jb
loopne
or
lds
mov
xchg
repnz
xchg
js
iret
mov
jl
mov
pop
inc
xchg
cmp
lds
lahf
ja
es
sbb
fistps
push
mov
pop
pop
test
ja
and
inc
stc
into
adc
push
xor
aad
sbb
inc
roll
sbb
xor
or
outsl
xlat
or
sbb
mov
aad
repz
mov
pop
outsl
in
shrl
mov
not
insl
imul
sub
lds
notl
xchg
jle
in
dec
add
mov
test
aam
sahf
dec
rcrl
sub
xor
jnp
imul
imul
cmp
subb
push
in
dec
adc
psubusb
and
pop
enter
jne
pop
xor
and
cmpsl
lahf
or
daa
mov
rcrl
dec
out
pop
pop
dec
xlat
xor
add
mov
bound
mov
es
and
mov
xor
loop
fimuls
sub
cltd
andb
push
jno
add
dec
pop
pop
mov
or
call
daa
dec
jne
out
mov
push
mov
jmp
scas
and
lods
pusha
adc
jecxz
xchg
push
lock
push
dec
flds
cld
cmpsl
test
pop
cltd
and
pop
stos
ljmp
ret
icebp
bound
pop
sbb
cwtl
mov
cld
sahf
ja
jo
inc
pop
xchg
adc
mov
icebp
mov
loope
std
aas
jmp
xchg
xchg
hlt
leave
cmp
push
lods
cmp
xchg
jae
lock
ret
js
clc
pop
ret
popa
ds
add
sbbl
mov
sub
inc
jo
mov
std
sbb
int
in
mov
jmp
aad
lock
sbb
add
aaa
jns
mov
or
mov
enter
cmpsl
out
push
cmp
lret
andl
repz
pushf
pop
fs
push
mov
mov
aam
mov
jge
cmp
xchg
adc
jl
and
pop
fs
mov
cmp
xchg
jmp
push
jo
popf
adc
sti
dec
adc
and
lods
js
sub
and
rorl
pop
mov
dec
out
stos
mov
inc
jge
lahf
test
jmp
inc
stc
jbe
sbb
mov
push
mov
cmc
out
sbb
mov
sub
rorl
adc
scas
inc
sub
je
xor
sub
shll
and
sti
sub
xchg
adc
lds
fs
push
pusha
scas
cld
inc
out
cltd
xor
int3
icebp
adc
lds
adcl
and
mov
pop
mov
xor
sub
cli
pop
or
push
mov
pop
lret
xlat
push
mov
adc
xor
cmp
out
cmp
mov
sarl
jb
sub
push
push
ljmp
std
xor
adc
xor
xlat
push
and
mov
and
mov
fcmovne
xchg
lock
jne
sub
push
mov
fisttps
cmp
pop
xchg
out
mov
or
push
pop
icebp
arpl
xchg
faddl
ret
inc
sbb
dec
mov
cmpsb
xchg
lret
push
lret
pop
inc
movsb
in
and
sti
xor
adc
outsl
hlt
cmp
cmpsb
andl
clc
fnstsw
xchg
mov
dec
dec
mov
add
lcall
sub
sbb
cmp
cmpsl
aas
jno
or
mov
add
adc
dec
adcb
inc
or
pop
sbb
jecxz
aad
push
and
stos
ja
mov
sub
dec
std
add
mov
insl
mov
xor
add
mov
std
data16
push
lods
sub
adc
bound
mov
cli
push
pusha
test
mov
into
subb
fnsave
sar
into
int
das
lods
into
pop
jle
andl
rcrb
aaa
jge
sbb
inc
lahf
fwait
ret
pand
imul
or
dec
mov
dec
popa
xor
out
push
movsbl
clc
xor
xchg
and
fstpl
cmp
or
and
xchg
mulb
mov
insl
mov
jmp
scas
sbb
in
inc
test
jne
mov
pop
es
loop
imul
mov
repnz
dec
shrl
ljmp
outsl
inc
in
adc
pop
jmp
fisttpll
push
push
xchg
jo
popa
xor
jle
cmpsl
lcall
imul
pushf
mov
push
push
mov
xchg
js
rcl
sub
les
mov
out
sarl
and
call
mov
mov
cmp
jge
stos
rorl
and
and
gs
repz
outsl
pop
xchg
cmp
xchg
sub
push
add
inc
dec
pop
imul
dec
mov
in
cmpsl
lret
gs
fwait
leave
pop
daa
aaa
fidivrs
jge
fsubs
jle
push
idivl
mov
iret
negb
mov
push
enter
jle
rorb
aad
xor
dec
inc
bound
fsubrl
mov
subl
insb
xchg
mov
push
sarl
or
push
adc
popf
je
ljmp
insb
rcll
dec
mov
repnz
das
xlat
jae
xor
dec
ljmp
add
xor
push
scas
xchg
mov
and
js
xor
and
and
pop
and
mov
movsb
push
dec
mov
sub
outsl
pop
adc
outsl
lahf
and
out
dec
adc
aaa
testl
hlt
jae
mov
mov
int
nop
inc
add
call
out
xchg
xchg
inc
lods
mov
gs
sbb
adc
xor
out
inc
mov
xor
cmp
push
js
pop
mov
aad
loop
divb
mov
cwtl
xchg
jle
gs
jae
pop
pop
add
or
stc
ljmp
xor
jb
sarb
leave
mov
nop
jmp
sbb
shrb
pop
gs
ret
sbb
or
dec
pop
sbbl
cwtl
roll
mov
clc
sarl
xchg
out
lahf
xchg
add
sbb
aaa
or
outsb
cmp
test
jge
sub
nop
xor
or
adc
xor
xchg
loopne
fwait
mov
xor
pop
sbb
gs
repnz
rorl
dec
add
popf
enter
cmp
daa
mov
fnstsw
in
imul
aas
out
addr16
sub
imul
cwtl
xor
je
insb
notb
push
fs
lds
test
push
pop
call
stos
insl
stos
xor
push
scas
fildll
cs
mov
xchg
iret
jno
lods
lret
xchg
cmp
rcrl
cmp
mov
or
int3
fldenv
or
dec
pusha
mov
xor
jle
stos
test
sbb
mov
out
xor
std
xor
mov
aaa
call
pushf
icebp
push
cmc
push
jg
test
and
mov
lret
mov
scas
pop
in
jo
add
add
jns
clc
sub
push
push
shr
xchg
dec
adcb
mov
ja
movsl
leave
jmp
es
aaa
cmp
lret
pop
out
jl
jns
mov
adc
jns
lea
sbb
pop
sub
add
nop
and
sub
dec
fidivl
fwait
movsb
or
lods
push
push
stos
and
sub
roll
out
popf
mov
cmpsb
dec
push
mov
shr
dec
add
rolb
fs
aad
jge
movsl
iret
cmp
cmp
jo
sarl
nop
loop
sahf
jp
jecxz
jp
in
fmul
and
sub
sarb
inc
jae
xchg
pop
dec
cmp
push
xchg
mov
movsl
sbb
cmp
add
pop
mov
xor
cmpsb
outsb
aaa
into
pop
xchg
xchg
mov
xchg
adc
std
add
cmpsb
add
in
adc
ret
pop
dec
sbb
sti
add
loop
adc
es
imul
push
and
in
std
into
pop
scas
imul
notl
add
push
or
mov
rorb
in
xor
or
std
or
xorps
int
insl
add
mov
insl
idivl
loopne
leave
jp
ds
xlat
sbb
test
or
dec
lds
test
scas
int
jne
fmulp
je
add
sub
inc
clc
arpl
pusha
adc
xor
dec
jae
rorb
adc
repnz
jmp
adc
xchg
xor
mov
jmp
sub
scas
jl
mov
jl
out
cmp
cmpl
jo
add
sbb
jp
cltd
cmpsb
mov
cmp
cs
movsl
xor
and
and
repz
loop
jge
jle
push
out
mov
test
addr16
cmp
jns
adc
test
dec
jmp
xchg
divb
mov
cwtl
and
push
stos
pop
shlb
sbb
bound
jae
fadds
push
adc
test
push
mov
ds
arpl
push
lods
jle
mov
leave
outsb
cld
mov
mov
lock
cmp
mov
mov
testl
paddb
pop
out
in
push
inc
jl
cmp
mov
mov
outsb
and
sti
movsl
or
dec
data16
add
sbb
adc
jl
or
pop
in
test
roll
lahf
inc
pop
mov
jg
fisubs
xor
pop
xor
pop
and
add
mov
inc
vcomiss
jg
je
mov
lcall
mov
lret
dec
add
shll
pop
sbb
into
add
fucomi
cmp
out
jb
fidivs
out
gs
mov
in
in
cmp
mov
lret
jbe
sub
mov
push
mov
push
nop
cmp
pop
sub
sub
fcmovnu
popf
push
sbb
pop
inc
jp
loopne
loope
cmp
cmp
mov
cmp
outsl
leave
sahf
adcl
mov
sti
ss
int
repnz
mov
pop
adc
sub
add
sbb
pusha
push
loop
lahf
mov
xchg
xchg
push
insb
pop
lea
aad
aam
icebp
into
mov
orb
xor
mov
shlb
dec
jecxz
scas
xchg
in
mov
mov
insl
pusha
adc
dec
add
cs
push
dec
inc
ret
jg
push
xchg
cmpsl
in
xchg
sarl
fst
imul
rcll
add
or
and
jno
outsb
mov
jmp
out
popf
xchg
xor
inc
aas
in
mov
jecxz
xchg
loope
scas
lds
cmp
ljmp
xchg
mov
mov
add
and
xchg
enter
outsb
ret
loop
int
stc
or
mov
pusha
movsl
adc
push
jl
mull
jge
inc
inc
sub
xor
addr16
ljmp
push
mov
sbb
add
push
xor
ds
jo
mov
cmp
lock
outsb
inc
xchg
pop
dec
mov
in
sarl
jno
test
lret
sbb
xor
mov
lret
push
pop
out
pop
jmp
loop
and
inc
sub
sub
jno
in
test
or
int
mov
shlb
mov
out
mov
cmp
cmp
cmp
mov
in
mov
lret
lcall
lret
fwait
jecxz
jno
mov
mov
push
push
fistl
bound
scas
lahf
repnz
push
add
stc
add
dec
dec
arpl
xor
adc
mov
ret
xchg
es
push
mov
jne
daa
iret
jle
scas
dec
notl
jp
negl
adc
js
xchg
lea
and
call
cmp
push
mov
repnz
add
testb
add
xor
pop
jle
aas
lahf
fdivl
jnp
xchg
mov
mov
dec
aaa
cs
pop
ficompl
cmpsb
cmpsb
mov
call
lock
lret
clc
out
scas
and
imul
mov
andb
in
jo
fimuls
mov
rcrb
inc
dec
or
repnz
dec
sbb
sahf
dec
insl
sub
daa
pusha
xchg
sbb
sub
shlb
jb
int3
std
imul
push
or
rcr
je
gs
scas
into
sbbl
das
aad
gs
mov
push
inc
cmp
mov
int
pushf
stos
dec
ret
dec
mov
aaa
gs
cmpsb
cmp
jl
mov
dec
mov
or
and
sbb
les
adc
sub
xor
lock
std
outsl
inc
mov
loopne
stos
loope
inc
pop
lods
adc
ret
and
test
mov
sub
jns
in
les
in
les
dec
iret
test
jecxz
add
pop
adc
js
sub
lret
jno
inc
or
cmc
movsb
ficomps
pop
insb
inc
sub
fistpl
lea
xchg
and
pop
mov
sti
jno
push
divb
incb
mov
scas
out
push
mov
push
and
and
jl
jl
into
xor
jne
push
ret
pop
int
push
repz
ret
xchg
add
pop
jecxz
cli
pop
pop
pusha
mov
xchg
push
cmp
jp
add
fisubrs
rcrl
movsl
mov
pop
mov
push
hlt
shrb
hlt
je
mov
aaa
mov
and
enter
mov
sub
jae
inc
sub
dec
mov
mov
aam
dec
mov
cwtl
outsb
in
mov
cmpsl
pop
fcom
push
out
mov
cmpsb
movsb
jmp
jmp
mov
or
outsb
jo
adc
in
inc
mov
movsb
sub
xchg
gs
mov
adc
dec
and
lea
lock
cltd
add
andl
cwtl
or
insl
xchg
sbb
mov
outsl
cmpsl
dec
push
in
imul
add
xor
sub
mov
sahf
inc
jle
leave
push
iret
xchg
sbb
fisubrs
dec
mov
and
das
mov
leave
pop
pop
out
or
paddd
mov
out
scas
pop
hlt
mov
dec
addb
adcb
shrb
sub
bound
aam
icebp
mov
mov
lock
jae
cli
cmpsb
pop
jb
inc
lock
and
push
scas
xor
dec
sub
cmpsb
scas
movsb
test
pop
pop
mov
dec
test
xor
jecxz
mov
pusha
jp
xchg
je
mov
cmp
inc
sub
icebp
in
cltd
lods
rcr
test
fbld
mov
outsl
repz
inc
jo
mov
mov
leave
iret
jns
call
xor
imul
loop
rorb
cmpsb
cmpsb
inc
pop
cmpsb
cmc
jg
hlt
iret
xchg
xorb
xchg
jo
xorl
rorb
in
pusha
dec
xchg
and
ja
dec
stos
push
and
mov
fdivrl
push
in
shr
jbe
push
hlt
and
cmpsb
lods
push
dec
xor
adc
sbb
sub
test
sbb
lods
pop
out
mov
mov
sbb
dec
cmpb
lods
or
je
je
or
adc
lods
inc
xchg
inc
pop
mov
call
jnp
mov
pushf
mov
jge
mov
lea
and
dec
jl
xorb
pop
aas
das
mov
lods
or
loop
call
cmp
std
dec
xchg
xor
mov
pop
inc
push
imul
sti
sub
scas
or
pop
out
test
cltd
inc
in
xchg
lods
inc
imull
jg
lret
dec
lds
inc
scas
sbb
pop
dec
cmp
popa
nop
call
fdiv
loopne
iret
repnz
mov
mov
inc
adc
cs
std
xchg
es
jno
mov
int3
outsl
pop
mov
jg
in
test
mov
movsb
ret
jp
jae
pop
push
push
jg
dec
add
ret
xor
mov
adc
out
pop
pop
or
and
mov
popa
in
gs
inc
mov
xlat
imul
jge
fsubl
pop
add
add
push
sti
icebp
cmp
icebp
stos
pushf
pop
scas
push
add
mov
pop
and
xchg
shlb
shlb
xor
xlat
add
mov
jg
sub
xchg
mov
push
xor
jb
fcmove
adc
push
push
add
push
inc
xor
lods
sub
pop
fisttps
sub
loope
jno
xchg
pusha
pop
pop
shr
push
sar
pop
daa
test
jg
adc
repz
imul
xchg
jno
ret
mov
dec
push
xchg
jne
in
jge
lock
sub
push
lcall
rcl
into
push
cmp
loop
pop
cmpl
push
push
int3
jno,pt
out
jo
imul
add
and
ret
inc
fucomp
aam
xchg
adc
mov
dec
adc
jle
out
push
jbe
data16
push
or
and
dec
int3
or
mov
push
nop
cmpb
into
xor
pop
mov
push
xorb
sub
aaa
sub
cmpsb
push
in
sub
or
jp
lahf
pop
insb
add
sub
add
nop
loopne
insb
and
push
jo
out
nop
cmc
in
sbb
addb
xchg
repz
mov
adc
clc
fsubrl
mov
cmc
sub
test
int3
clc
aad
sbbb
lods
and
push
or
jno
dec
lods
inc
lahf
daa
xor
dec
lret
xor
or
test
lds
mov
fistps
jg
les
insl
jbe
je
ljmp
xor
lds
add
adc
xor
js
in
cmc
sbbl
loope
and
movsb
popa
jg
mov
idivb
cmp
cpuid
pop
cmp
sbbb
lcall
test
ja
lahf
sub
fwait
cltd
xchg
int3
iret
cmpsb
mov
imul
aad
and
lret
add
lcall
data16
cmpsb
sbb
inc
or
and
xchg
mov
movsb
jmp
xchg
sbb
sahf
mov
faddl
push
daa
dec
stos
pop
mov
repz
pop
sub
pusha
popa
rcrl
pop
popl
pusha
icebp
mov
rorb
push
cli
mov
cmpsl
push
push
inc
or
mov
lret
add
inc
data16
dec
xchg
fimull
dec
jl
jno
outsl
loopne
repz
addr16
jg
sbb
leave
inc
std
daa
pop
xor
cli
adc
mov
pop
push
add
pop
and
sbb
xchg
test
neg
mov
les
dec
mov
dec
cld
jmp
popa
and
cmp
dec
sbb
push
and
dec
mov
pop
out
mov
ljmp
setp
xchg
and
cli
fildll
imul
or
outsb
push
lret
push
jmp
insl
out
cmp
lods
insb
mov
dec
or
jle
std
xchg
pandn
dec
mov
pop
add
push
sbb
fwait
incb
mov
mov
add
jmp
sub
shrl
shr
jle
cmpsb
pop
fsubp
push
cmp
scas
ret
imul
add
outsl
popa
pop
iret
sti
xchg
jne
adc
lret
sbb
fstpl
test
std
daa
in
pop
pop
lcall
pop
incl
sbb
lock
ja
cmc
dec
xor
xchg
mov
xchg
mov
mov
rcll
or
push
repnz
decb
mov
std
fistpll
pop
xlat
adc
mov
add
out
ret
cmp
sahf
cs
imul
sbbb
fcomps
mov
xchg
xchg
or
and
pop
sub
jo
pop
pop
pop
mov
cmp
mov
mov
inc
fbstp
ja
leave
js
sub
popa
seto
out
cmp
cmp
cmp
lcall
test
dec
push
scas
jns
mov
inc
cmp
inc
mov
sub
or
mov
xchg
dec
push
scas
xor
add
rcrb
xchg
push
fwait
add
sti
test
faddl
sahf
pop
stos
fwait
inc
mov
mov
cmp
gs
daa
adc
mov
rorb
pop
mov
lds
xor
inc
mov
mov
movl
inc
or
or
out
or
sarb
inc
add
sbb
test
js
xor
int3
fcmovb
push
xchg
ficomps
push
loope
mov
dec
in
imul
repz
insl
sub
or
lock
std
mov
jmp
xlat
mov
std
repz
cmp
rcrl
pop
rcrl
sbb
push
sbb
test
xchg
adcb
mov
add
fldenv
adc
loopne
pop
push
lcall
jge
push
dec
pop
in
scas
dec
mov
and
pop
sub
mov
repz
push
mov
aam
adc
pop
aam
and
mov
shl
sbb
sbb
dec
push
cmp
cli
sub
stos
sbb
jbe
jl
sbb
cltd
cmp
add
and
jb
lods
adc
aad
dec
push
lds
sub
dec
mov
inc
mov
mov
cmpsb
jg
aas
pushf
mov
repnz
pop
add
jp
mov
dec
popf
aaa
ret
mov
in
mov
xor
or
scas
mov
jne
roll
testl
mov
sub
leave
cli
xchg
sbb
popl
call
add
mov
mov
aad
mov
sub
fadds
jno
sbb
ds
sbb
nop
xchg
aam
sbb
dec
lods
loope
jl
add
ret
cmp
push
mov
pop
jle
cmp
push
lea
inc
jle
daa
add
mov
and
mov
push
dec
jecxz
lret
push
mov
mov
data16
jbe
loopne
sub
hlt
mov
adc
push
fcomps
stos
stc
push
mov
pop
notb
cld
pop
sti
ret
jo
out
shl
fidivs
add
test
xchg
xchg
lahf
nop
and
or
je
jg
sbb
out
scas
addr16
rcr
xchg
fnstsw
cmpsl
xchg
mov
mov
sbb
jecxz
shlb
jo
mov
xlat
insl
popf
negb
push
sarb
iret
mov
repz
into
aaa
push
sub
aas
xchg
mov
push
inc
pop
sbb
in
sbb
lea
lods
dec
sbb
push
or
fisubl
adc
daa
inc
cmp
out
cmp
push
mov
insl
fs
stc
ds
nop
andb
insb
cmp
das
jne
jns
daa
sub
lahf
dec
cmpsb
sub
lret
inc
sub
ljmp
push
int
fsubl
rcl
xor
cmp
ror
mov
pushf
jno
push
jmp
sbb
mov
cmpl
std
fcmovu
or
and
fldlg2
lds
push
xchg
fcoms
mov
mov
adc
jecxz
xlat
add
int
dec
negl
dec
add
cltd
stc
mov
xchg
movsb
sub
nop
jg
mov
lds
and
mov
mov
push
mov
lret
daa
dec
pshufw
out
and
and
lods
loop
mov
subl
cmp
in
pushf
out
mov
rorl
js
shrb
ljmp
adc
inc
pushf
and
xorb
popa
call
or
and
shll
mov
adc
fdivl
mov
lcall
dec
push
data16
or
jbe
cmp
adc
mov
bound
filds
int
xor
fisubs
or
lock
icebp
and
lods
pusha
jae
ds
cmc
das
nop
xchg
int
xlat
sbb
push
cli
xchg
sbb
loope
addr16
inc
inc
cmp
adc
in
icebp
enter
int
xchg
xlat
cmpsl
stos
inc
dec
dec
mov
fcomps
idivb
add
pop
cwtl
pop
cltd
jbe
or
out
dec
das
or
sub
inc
mov
xchg
push
pop
gs
lds
fwait
xchg
enter
fcoml
add
leave
sbb
mov
mov
test
mov
cmc
nop
xchg
push
ljmp
mov
xchg
pop
ret
mov
pop
xchg
insl
xor
les
ds
stos
sbb
and
mov
jmp
push
inc
mov
mov
lret
sbb
mov
shll
test
fucomi
pusha
adc
and
xor
addb
jle
inc
fs
push
push
aam
fidivrs
sbb
or
mov
inc
sahf
mov
or
adc
push
pushf
jle
js
or
test
dec
stc
lds
out
push
push
call
fsubr
outsl
jle
bnd
in
fcompl
dec
jns
mov
mov
cwtl
or
inc
aam
ror
lahf
or
mov
xchg
mov
xchg
iret
mov
fisttpl
movsl
lds
stc
xor
fbld
add
xchg
xor
lahf
mov
adc
push
xor
and
sub
jecxz
arpl
push
xor
in
mov
pop
hlt
in
dec
dec
lret
push
out
outsl
or
and
daa
cmpsl
push
inc
add
pop
push
loope
cli
insl
and
mov
shrl
fstps
ret
aas
lcall
push
jne
out
sbb
fs
in
addr16
jne
int3
cmp
imul
sbb
dec
xchg
pop
sbb
inc
push
or
sub
pop
popf
inc
je
das
mov
fldcw
jb
cltd
sbb
jmp
int3
leave
lahf
jle
and
loope
jle
out
adc
ljmp
rcll
jbe
bound
leave
shrb
sub
and
push
insl
xorl
sbb
pop
sti
and
mov
outsb
popf
mov
sbb
imull
outsl
arpl
das
xchg
stos
rolb
jmp
scas
mov
sbb
in
cld
push
in
sti
xchg
adc
inc
je
dec
jb
lret
inc
mov
inc
xchg
fimull
inc
and
lds
mov
xor
mov
pop
and
mov
mov
cltd
loope
aam
xchg
pusha
mov
sbb
xorl
add
fmuls
shll
sbb
loopne
fs
mov
or
fnstenv
adcl
das
xchg
jae
ficoms
ss
pop
frstpm(287
pop
pop
inc
stc
es
xchg
sub
out
pusha
jge
out
mov
cmpb
pusha
mov
mov
stos
jge
add
add
push
cmc
outsb
xor
sub
xor
test
push
jne
lock
out
pop
cltd
cmp
cmc
jl
mov
fcomps
xchg
mov
cmpsl
dec
dec
mov
add
and
repnz
cmp
mov
mov
mov
xor
lcall
lahf
sbb
call
mov
xor
sbb
fisttpll
pop
subb
fisubrs
xchg
mov
scas
inc
popf
push
pop
es
mov
arpl
arpl
in
adcb
out
push
or
jge
mov
xor
adc
je
and
leave
out
call
pop
jl
test
daa
mov
sarb
jns
stc
jae
lods
popf
pop
outsb
fcom
sub
dec
jno
sbb
push
pop
fwait
xchg
adc
loope
rcrb
mov
inc
jo
sarl
jno
outsl
mov
or
lea
lods
cld
adc
repz
leave
xchg
mov
push
or
mov
stos
jge
xor
rcrb
cmpsb
fimull
pop
jnp
mov
xchg
xchg
add
nop
ss
pop
sar
rcl
dec
cmpsb
push
test
fwait
push
push
or
in
add
dec
xor
push
pop
shrb
adc
mov
icebp
adc
add
rclb
mov
cmp
mov
movsl
loopne
les
out
inc
fisttpll
jo
xchg
std
clc
xorl
and
cmp
clc
add
push
ficoms
lahf
cmp
loope
loopne
mov
mov
push
fs
pop
cli
sarb
jecxz
pop
push
cwtl
ss
test
nop
jne
xor
pop
into
sub
jp
je
xchg
add
cs
aad
inc
cmpsb
push
aaa
xchg
sbb
mov
or
inc
mov
pop
mov
adc
mov
stos
and
add
sub
mov
xor
or
or
and
lret
jns
dec
fsub
call
push
stc
jo
mov
icebp
sarb
stos
daa
daa
add
xchg
jb
mov
arpl
push
sub
sbb
lea
dec
xchg
jns
ja
dec
dec
aad
or
repnz
inc
dec
stc
loopne
std
loop
sbb
pop
adc
int
hlt
cmpsb
leave
mov
cmpsb
mov
mov
jbe
loopne
dec
jge
jb
aas
and
pop
fstl
mov
adc
mov
dec
out
dec
add
arpl
movsl
call
pop
jg
fs
ss
mov
cmp
bound
mov
dec
shr
enter
out
adc
rcrb
shlb
mov
inc
cmp
ret
imul
or
cmp
in
sub
gs
pop
adc
out
or
cmp
or
or
push
daa
mov
into
rcl
inc
test
and
mov
xchg
xor
sub
jge
pop
dec
loop
aas
adc
or
push
xor
out
cmpsl
dec
adc
pop
xor
cmpb
push
jecxz
mov
scas
test
jecxz
adc
pop
shll
cmp
mov
mov
adc
inc
dec
les
je
jmp
loope
int3
mov
jg
movsl
sub
jg
loope
mov
dec
ss
daa
adc
pusha
sbb
cmp
call
clc
loopne
loopne
les
lahf
adc
ja
add
push
mov
dec
dec
pop
out
icebp
jp
jl
int
and
popf
or
sub
mov
or
pusha
daa
push
roll
adc
movsl
in
fdivrs
inc
xchg
adc
pusha
sbb
jnp
pop
and
adc
repz
sub
lret
sbb
mov
sub
or
movsl
repnz
inc
enter
jl
sti
xchg
jo
mov
js
push
aam
dec
cwtl
mov
sbb
sub
add
imul
mov
sub
rorb
pop
jo
mov
xchg
mov
pushf
jnp
or
mov
pop
xchg
ss
xlat
push
rcrl
imul
insb
rolb
cwtl
decl
mov
mov
in
pop
cld
mov
add
jecxz
stos
movsl
cs
pop
sbb
lret
cmp
je
cmp
aam
pop
lods
xor
push
xchg
ffreep
movsb
push
push
mov
inc
inc
push
fisttpll
les
jp
pop
and
cmp
stos
add
nop
popa
out
and
sub
repnz
pop
adc
sub
imul
das
fdiv
push
mov
cmovs
aad
push
xchg
mov
or
mov
repnz
fidivrs
sub
push
lahf
fucom
push
cmp
pop
in
out
stc
clc
fcmovb
add
out
cmp
or
lahf
test
shrl
pop
cwtl
fbstp
adc
pop
adc
shr
cmp
jae
add
ret
int3
jmp
arpl
ljmp
dec
enter
sbb
dec
sbb
aas
fwait
mulb
push
xchg
xor
test
punpckhwd
aaa
and
repnz
push
sbb
ret
adc
xlat
aad
jg
scas
std
adc
leave
push
jno
add
pop
enter
mov
pop
fsubl
hlt
dec
sahf
push
or
adc
dec
push
aad
mov
pop
stos
fst
and
inc
xorl
repnz
pop
movsb
pop
pop
es
test
dec
dec
mov
push
inc
stos
int
sar
push
popa
outsb
mov
pop
jle
test
daa
das
xchg
xor
int3
lods
addr16
mov
push
ret
adc
std
movsl
sub
push
jmp
int3
dec
cmp
std
or
push
cli
mov
lahf
inc
mov
rcrb
or
or
xor
out
fs
pop
andl
jb
hlt
mov
shlb
pop
inc
push
ficomps
and
lods
sub
mov
scas
or
pushf
cmp
xchg
xor
mov
adc
stos
cmp
mov
incl
jne
test
in
test
aam
rcll
aad
insl
xor
lods
divb
sbb
ljmp
sbb
fdivrp
fidivl
xor
mov
inc
je
dec
insb
movsl
in
sub
inc
sub
mov
insl
std
imul
loop
sub
mov
rcrl
ffreep
sbb
and
sub
repnz
xchg
orb
sub
test
push
out
stc
push
jns
inc
mov
xchg
mov
xor
push
jle
pop
loopne
movb
test
xor
ds
xor
push
adc
mov
cmpsl
cmpb
xor
cmc
push
add
pop
ret
mov
mov
fsubs
dec
mov
cs
and
mov
inc
int
inc
roll
xorl
pop
xchg
dec
test
mov
mov
fldl
sub
stc
sub
out
jp
inc
dec
lds
sbb
push
pop
iretw
adcl
sub
test
cmpsb
pushf
pusha
add
aad
cli
std
ss
xor
insb
add
cmp
and
push
sti
push
rolb
sub
aam
mov
mov
mov
jb
sub
pop
mov
mov
mov
nop
lahf
xchg
jo
cmp
popf
sub
stc
add
ret
xchg
iret
or
mov
loop
add
inc
xchg
call
jmp
lret
gs
mov
push
mov
and
ret
js
and
shlb
ds
mov
xor
cwtl
in
dec
xorl
jb
jge
mov
clc
dec
les
add
test
cmp
inc
stos
push
inc
mov
or
xchg
lahf
mov
adc
rsqrtps
rolb
and
lock
cmp
std
stos
out
fidivrs
rorb
dec
jnp
popa
push
or
fs
mov
cwtl
or
int
loopne
push
push
add
sti
imul
outsb
and
cmp
jp
fmull
pusha
inc
sub
jmp
sub
mov
aaa
arpl
rcll
or
aad
ud1
scas
pop
cmpsl
cmpsl
inc
mov
mov
loopne
loopne
add
mov
and
lock
mov
je
outsb
daa
adc
or
sub
inc
sarb
bound
mov
cltd
and
stos
negb
dec
mov
out
jns
jb
pusha
in
repz
mov
sahf
daa
pop
rcll
add
int
jecxz
cltd
faddl
inc
dec
gs
xchg
ljmp
sbb
insl
js
and
xorl
test
add
imul
loop
mov
nop
in
scas
aad
aas
scas
sub
fabs
test
pop
push
push
rorb
push
or
scas
push
lock
sar
cmp
outsb
add
aad
pop
pusha
aad
xchg
sgdtl
fs
inc
cli
movsb
std
xchg
mov
push
aam
outsb
lods
fwait
jg
repz
mov
fwait
dec
scas
out
test
notb
mov
xorb
inc
popa
cltd
and
sub
xor
dec
iret
cmp
pushf
push
pop
cmp
test
pusha
es
xor
xchg
negb
lret
add
popa
pushf
add
dec
imul
dec
push
xor
jp
cltd
dec
or
in
push
adc
movsb
mov
or
mov
in
inc
hlt
loopne
sub
jno
test
and
and
lods
fstl
leave
and
mov
xchg
sbb
fcompl
jmp
std
les
inc
fsubs
scas
mov
mov
inc
push
and
popa
inc
xor
xor
fwait
les
cltd
in
mov
pop
jne
popf
pushf
movsb
xchg
aam
jae
jo
imul
xchg
sub
push
and
add
fidivrl
outsl
xadd
lds
push
pusha
aas
jo
cmc
pop
sub
mov
pslld
xchg
jg
and
cs
enter
pop
inc
jnp
ds
jae
stos
out
repz
fmuls
loop
orl
pop
mov
loopne
out
mov
pop
pop
imul
adc
fidivrs
mov
inc
jno
cltd
cmpsl
cmc
mov
out
imul
shrl
push
das
not
xchg
dec
push
pusha
cmpsl
ret
sub
add
cwtl
mov
lret
dec
mov
add
test
push
fldt
sbb
out
je
cli
mov
fs
shll
leave
mov
mov
pop
lock
icebp
mov
mov
mov
cld
xchg
fbstp
mov
shlb
test
in
pusha
push
lcall
int
pushf
mov
inc
pop
mov
adc
or
lcall
cmp
mov
test
mov
mov
dec
ret
xlat
xchg
jno
aaa
out
test
mov
roll
lahf
jbe
int3
and
xchg
stc
sbb
fs
mov
sub
mov
outsl
sub
mov
cmp
pop
push
pandn
jbe
scas
int
pop
in
and
jmp
inc
jne
pop
or
push
add
cltd
dec
fidivrs
ds
pushf
lcall
imulb
jl
pop
sti
stos
xchg
jb
xor
repnz
or
lds
mov
mov
xchg
fbstp
cmp
fnop
ja
ret
sahf
aaa
and
push
mov
push
push
mov
daa
cltd
sbb
add
jle
xchg
mov
jg
lock
inc
or
cmp
add
and
mov
adc
imul
test
cmovno
dec
pop
mov
sbbl
out
out
sahf
js
xor
es
and
testl
loop
adc
in
xchg
fsubs
pusha
sbb
sbb
jmp
lods
push
adc
sub
cmp
out
jmp
sub
cmp
int3
pop
andl
xchg
ret
and
lock
or
and
clc
add
fildll
arpl
cmp
push
fstpl
cli
je
fiadds
lahf
adc
loopne
std
xlat
mov
mov
gs
out
mov
mov
adc
cmc
cmp
xchg
dec
inc
nop
lahf
fistps
icebp
xor
fbld
test
mov
dec
call
mov
loop
clc
repnz
repz
clc
jmp
pop
es
sub
test
imul
popa
int3
test
jg
movsl
sahf
shl
cld
pop
std
cld
repnz
daa
ficompl
inc
hlt
inc
das
arpl
insb
add
stos
xor
jmp
dec
lods
fld
mov
dec
mov
xchg
add
pop
int
xor
lret
jecxz
je
ret
sbb
arpl
push
adc
inc
test
popf
push
cmp
push
mov
xorb
ret
push
xor
enter
cltd
mov
bound
stos
xchg
rorl
dec
rcl
push
data16
lods
jl
cmp
mov
mov
xchg
xor
sar
mov
mov
pop
stos
aaa
jns
push
inc
adc
std
push
push
fsub
mov
pop
mov
xlat
scas
xchg
in
add
hlt
mov
xor
fs
dec
imul
adc
out
and
and
int
push
sti
push
stos
pop
sub
mov
or
leave
push
pushf
sub
xor
fmulp
push
jae
jb
enter
sbb
add
adc
pop
adc
ja
sbbb
jl
mov
filds
fidivrl
lret
dec
mov
mov
mov
jl
mov
repnz
push
rolb
xor
inc
in
mov
sub
adc
xchg
cld
subb
sbb
inc
add
sti
out
cli
and
add
aaa
add
cwtl
adc
sub
jp
add
lods
adc
cli
add
js
push
push
xlat
sbb
push
xor
pop
lahf
sbb
cmp
jnp
add
into
fbstp
imul
lret
mov
lock
out
push
hlt
sub
sbb
rorl
outsb
jo
addr16
and
lea
xor
ss
ret
pop
push
daa
lods
in
and
lods
mov
pop
cmpsl
pop
pop
into
daa
sbb
xchg
outsb
or
push
pop
xchg
es
mov
add
dec
lahf
insb
jno
lods
das
cmpsl
pop
pop
mov
test
sbb
jbe
cmp
stos
push
mov
adc
jns
mov
aad
in
andb
scas
push
push
das
mov
lahf
daa
loop
pop
in
dec
out
sub
mov
ja
fxch
xchg
push
sbb
inc
sub
pop
fdivrs
cmp
loop
sbb
or
cmc
btr
xchg
stos
cs
jbe
mov
out
xor
into
pop
pinsrw
ljmp
jecxz
mov
into
es
sbb
test
jle
mov
inc
fucom
popa
mov
push
xchg
sbb
pop
jnp
dec
adc
imul
adc
in
stc
lcall
popf
or
mov
jle
pop
mov
loop
jge
jb
and
cmp
xchg
sti
jl
mov
sub
test
pop
in
movsb
fisttpl
aaa
test
jmp
pop
icebp
add
mov
mov
mov
out
pusha
sub
bound
cmpsl
and
inc
dec
mov
jmp
xchg
and
mov
push
mov
inc
test
or
ja
xchg
lcall
pusha
rdmsr
fmull
xchg
shlb
mov
mov
jae
xchg
scas
pop
xor
cmpb
mov
stc
pop
sub
push
shll
jecxz
scas
stc
lcall
jmp
pop
xor
fsubs
out
daa
je
sbbl
adc
push
dec
push
scas
popa
fidivl
scas
popa
push
jb
inc
cmp
cmp
arpl
push
orb
and
sbb
adc
lahf
outsb
vmovlps
ss
mov
lods
jp
mov
cld
movsl
push
jno
push
lcall
test
loop
mov
addl
ds
add
add
jmp
adc
fimuls
push
not
push
xlat
xchg
lret
jbe
cmpb
inc
xor
push
insb
movsb
jl
fwait
dec
orl
jnp
out
adc
fildl
jl
xchg
lods
rol
and
mov
mov
jmp
cmp
shld
adc
cmpsl
mov
jns
icebp
push
jmp
pop
sbb
sbb
and
jae
ffreep
pop
aam
or
and
add
leave
leave
addr16
xor
mov
repz
sarb
cli
add
rclb
leave
jp
add
mov
fsubrs
cmpsb
cltd
jae
jae
popf
jne
jbe
shll
sub
inc
enter
xchg
cmp
mov
pushf
dec
sub
adc
call
outsl
sbb
mov
cwtl
jmp
jle
test
or
jle
stos
sub
jg
das
pusha
inc
repnz
dec
xchg
jo
inc
mov
nop
add
ds
fs
or
jb
jg
cltd
out
sub
mov
daa
cwtl
sub
call
hlt
ret
iret
or
loopne
jp
mov
and
aad
fdivr
std
lret
sbb
fmul
lds
mov
lcall
js
imul
inc
dec
sarb
dec
shlb
inc
sub
ds
ljmp
nop
inc
nop
es
fstpl
mov
mov
mov
adc
pop
and
pushf
xor
sub
cmp
xor
lahf
aas
dec
bound
cmpsl
sub
hlt
dec
lret
data16
mov
imul
or
stos
data16
or
mov
int
addr16
mov
je
pop
in
mov
push
jecxz
push
and
sub
jecxz
inc
mov
jae
xor
out
fidivs
mov
jb
addr16
call
stc
hlt
pop
xchg
lret
aaa
and
adc
jp,pt
sub
stos
mov
sbb
push
mov
lea
pop
ljmp
rep
mov
pop
xor
cltd
pop
fadd
jge
lods
cmc
lcall
xor
jmp
dec
jecxz
shlb
xlat
clc
pop
shlb
gs
stos
stos
xchg
dec
into
mov
mov
ss
adc
push
loopne
lcall
push
sub
dec
lds
out
sbbl
mov
mov
mov
out
push
sub
adc
rcr
inc
push
jl
loop,pn
mov
shll
jle
call
pop
test
pushf
ljmp
pushf
call
in
pop
xlat
sub
aas
or
ficomps
sbb
push
in
jp
mov
pusha
lea
movsb
inc
in
push
push
out
adc
xchg
fimuls
loop
in
xor
inc
roll
in
loop
push
dec
push
ss
adc
pop
movsb
mov
push
dec
push
aam
push
push
and
dec
xor
pop
mov
cmp
jbe
mov
pop
sbb
pop
mov
lock
add
push
lret
sbb
mov
inc
jnp
mov
fsubr
or
mov
testl
jae
mov
std
sahf
fwait
and
into
and
adc
jo
xor
dec
bound
lods
sub
cwtl
in
xchg
repnz
test
cmpsl
mov
and
adc
or
mov
gs
dec
stos
imul
cmc
daa
mov
jns
push
imul
scas
sbbl
ret
cmpsb
push
jle
mov
dec
sbb
lret
mov
inc
and
ret
stc
out
or
xchg
ret
push
movl
nop
adc
mov
stos
ss
xchg
xchg
push
cltd
inc
neg
mov
sti
add
loopne
in
test
test
sub
mov
xchg
out
dec
pop
aam
popf
lods
into
jb
insb
inc
xchg
adc
das
sbb
jno
jmp
push
shl
jmp
das
xor
lret
call
fiadds
mov
mov
add
addl
loope
mov
mov
gs
inc
sub
jge
imulb
jae
dec
mov
jno
sbb
xchg
adc
push
shlb
mov
mov
in
pop
pop
dec
jmp
add
inc
or
sbb
mov
int
push
hlt
pusha
cs
lret
fistl
sbb
cmpsb
fdivs
push
mov
leave
push
leave
js
jecxz
js
xlat
push
pop
mov
xchg
flds
mov
mov
xor
mov
mov
shrl
lret
fiadds
and
ss
jne
xchg
aam
push
inc
mov
rorb
std
scas
cmpsl
push
xor
adc
fsubrs
sub
cmpsl
enter
mov
and
push
inc
dec
ret
add
call
sub
mov
inc
mov
push
scas
fs
std
fpatan
imul
jge
dec
or
xchg
lcall
pop
sbb
xchg
sbb
and
xchg
push
mov
pusha
xchg
in
add
repz
out
enter
cwtl
fildl
pusha
adc
pop
or
cli
imul
dec
or
cmp
cmp
insb
cmp
movb
and
ja
andl
cmp
add
xor
int3
enter
pop
xchg
neg
out
push
sub
lahf
movsl
mov
jge
push
mov
icebp
test
int3
daa
das
inc
push
sub
inc
ds
fwait
cmp
jg
divl
xorl
rorl
aaa
smsw
rcr
int3
fildl
add
lods
sub
mov
in
int3
mov
sbb
lock
inc
push
jo
xor
out
mov
push
cmp
sub
mov
xchg
fcoms
icebp
dec
loopne
addb
sub
sub
mov
mov
adc
sbb
dec
push
popa
cmp
int
mov
jns
leave
xchg
cltd
out
lahf
outsl
push
fildll
mov
rcrl
sahf
dec
push
ss
ljmp
sub
xor
mov
adc
dec
sbb
je
pop
inc
xchg
test
shrl
mov
into
dec
jb
ss
insl
fstpt
mov
dec
icebp
shlb
push
popf
data16
mov
js
mov
cmpsb
or
xor
adc
mov
cmpl
mov
mov
or
int
rclb
mov
les
sbb
xor
push
bound
repnz
mov
fs
xchg
push
mov
mov
in
mov
addl
jb
lret
jns
insb
mov
jnp
int
dec
popa
pop
ja
mov
jnp
lret
xchg
mov
pusha
int3
outsb
out
iret
jg
ffree
mov
les
imul
cwtl
cmpsl
js
pushf
stc
mov
adc
lea
dec
inc
push
xor
add
xchg
stc
insl
inc
push
cmp
cmp
lods
add
flds
ret
jl
adc
jns
and
or
enter
adc
push
inc
cmc
adc
and
aas
xor
cmpl
int3
fwait
das
push
leave
mov
sbb
mov
in
and
mov
sbb
scas
data16
mov
orl
xchg
push
mov
sarl
mov
cmp
ret
cwtl
pop
and
mov
pushl
mov
pop
iret
clc
es
push
ds
cmp
pop
test
xchg
cmp
lea
mov
daa
mov
fst
xchg
dec
cmp
jge,pt
mov
je
mov
es
sar
lds
add
adc
dec
shll
or
dec
dec
dec
enter
cs
or
and
jae
xor
test
fdivrp
cli
sbb
jl
mov
lods
loopne
push
popf
sub
adc
xchg
ss
sub
push
movsl
push
stos
ss
fnsave
arpl
xchg
sbb
mov
shlb
inc
pop
jns
outsl
mov
cmp
or
cmpsl
adc
bound
push
imul
cmp
cmc
test
mov
adc
mov
cs
mov
and
test
aam
fwait
inc
in
push
push
push
dec
xchg
pop
cld
insb
test
cwtl
cltd
js
sub
repz
xor
and
sti
xor
mov
cmc
dec
add
sbb
insb
loopne
add
inc
out
or
test
mov
outsl
cmc
pop
push
sbb
clc
stos
jle
inc
jmp
and
mov
stc
idivb
fdivs
or
es
jb
pop
icebp
and
aas
shlb
mov
nop
fcoml
cmpsb
pushf
fcomps
cltd
aam
sub
mov
mov
mov
scas
xor
repnz
fildll
cmp
jecxz
and
xchg
loope
cmp
int
sbb
xor
icebp
les
mov
lret
outsb
aad
decb
mov
jge
and
lods
ss
notb
movl
adc
mov
add
jg
into
or
pop
sarl
bound
sarl
push
adc
xor
pop
rolb
mov
xchg
inc
jno
mov
popa
and
les
sub
pop
lahf
in
add
mov
mov
mov
xchg
out
aad
out
popf
clc
push
data16
push
mov
jge
or
cmp
sarb
dec
dec
fld1
enter
insl
sti
ret
pop
shlb
addb
and
shrb
mov
lods
dec
int3
xor
sub
loop
loop
xchg
mov
mov
cld
or
inc
imul
adc
push
fldenv
adc
movsl
clc
inc
int
std
adc
pop
sub
outsl
or
mov
mov
out
arpl
push
cmp
sub
stos
test
jl
scas
dec
divl
cmp
ja
inc
lret
push
dec
and
cmc
in
push
mov
mov
add
pushf
iret
or
xchg
scas
and
sub
mov
lods
cmpsb
push
sarl
leave
pop
scas
ja
call
fdivrl
xchg
lods
repnz
arpl
into
cmpl
ret
test
ret
ret
fists
or
pushf
les
outsl
fs
fcompl
out
mov
mov
aaa
adc
push
jo
inc
ret
xorb
mov
testb
sub
outsl
cwtl
ljmp
jge
shll
pop
ror
lea
pcmpgtd
das
lods
dec
shlb
fldt
test
cmc
inc
jg
add
jg
jbe
xor
pop
iret
sub
inc
adc
xchg
sbb
or
cmp
jle
test
pop
test
sbb
ljmp
fsub
insb
fildll
xchg
aam
sub
dec
imulb
out
aas
and
mov
clc
out
pop
dec
in
and
xor
inc
jle
enter
xadd
into
xor
mov
clc
ret
push
sarb
testb
cmp
mov
fadds
xchg
mov
sbb
out
xchg
mov
mov
adc
hlt
lret
and
fildll
sti
jnp
repnz
sbb
clc
rorl
mov
aas
repz
xchg
scas
rorb
stc
in
cmp
jno
lcall
add
dec
dec
push
test
idivl
mov
imul
shl
mov
inc
pushl
movb
in
shrb
dec
push
xchg
movsb
int
in
jp
add
mov
shrb
jg
int
mov
test
jg
in
adc
pop
mov
push
out
push
push
inc
pop
adc
pop
fwait
adc
mov
test
movsb
ret
xchg
or
xchg
and
pushf
mov
or
pushf
mov
cmp
loope
outsl
jp
and
or
imul
xchg
adc
pop
or
add
push
jns
test
xchg
sbb
sub
dec
movsb
sub
lods
enter
adc
lods
mov
popf
js
jae
add
dec
aam
lcall
mov
adc
mov
push
dec
cpuid
adc
shll
aas
jmp
push
mov
lret
jmp
lods
rcrb
cmpsl
test
nop
mov
mov
dec
mov
inc
xchg
xchg
jle
sub
mov
daa
adc
push
int
test
inc
imul
mov
push
hlt
flds
xchg
daa
lcall
lret
std
mov
jno
pop
mov
in
js
mov
or
cmp
cmp
mov
pop
neg
mov
out
xchg
sbb
lret
aam
cmpb
push
jns
mov
outsb
es
iret
add
clc
in
andl
icebp
lret
cmpsb
mov
dec
or
test
fs
movsb
mov
jp
push
mov
mov
adc
push
sbb
les
mov
enter
rol
sti
jno
loopne
pop
orl
mov
jmp
in
outsl
test
lds
aad
mov
mov
sub
ljmp
ret
jl
ret
std
in
xor
sbb
push
mov
mov
jge
xchg
outsl
pop
repnz
dec
xor
mov
and
adc
mov
call
fnsave
cmc
outsb
sub
mov
ret
adc
jbe
mov
arpl
or
sbb
sub
cmp
gs
add
jb
adc
lret
lcall
test
pushl
adc
into
ret
movsl
add
mov
std
mov
push
fwait
mov
mov
push
cmc
addr16
push
and
sbb
dec
rcll
decl
adc
lcall
and
jge
and
jle
shll
dec
ss
popf
push
sbb
sahf
mov
sahf
ja
sbb
aam
outsl
mov
or
jl
dec
jbe
xchg
and
in
xlat
clc
mov
push
add
sub
adc
sub
pop
test
dec
jmp
push
test
ret
test
cmp
inc
mov
test
aaa
fsubs
xor
push
out
cli
or
int3
fwait
jle
rclb
repnz
xchg
std
sub
sbb
cmp
sub
sub
cmc
mov
pusha
pop
mov
jp
nop
lea
insb
push
in
leave
daa
sbb
fs
lock
or
cmpsb
dec
inc
mov
or
cmp
push
push
jmp
lret
enter
or
movsl
clc
cwtl
push
xor
out
jl
jno,pn
adc
pop
jbe
mov
outsb
lret
dec
cmp
dec
jle
out
loope
mov
outsl
int
jge
sbb
pop
repz
pop
mull
cmpsb
xor
and
mov
pop
inc
shr
push
inc
fprem
test
jbe
and
xchg
jns
push
xor
test
mov
jmp
dec
jge
ficoms
mov
dec
xchg
scas
aas
pop
inc
and
cmp
out
xor
insl
mov
jecxz
or
or
pop
in
dec
jno
cli
ja
adc
cmpsl
pop
sub
pop
call
popf
lods
clc
loopne
dec
jl
xchg
imul
daa
mov
aam
sub
sbb
mov
shll
mov
popf
jae
lods
sti
outsl
repnz
jne
mov
add
int
ficoms
outsb
subl
vsqrtps
or
dec
cmp
inc
sub
jp
iret
bound
cmp
jo
shll
enter
fistl
lea
cld
lret
ret
or
daa
js
or
jge
add
dec
ds
pop
daa
insl
rcrb
pop
cmp
shrb
push
popa
xor
mov
aad
mov
js
fldcw
mov
das
stos
jnp
sbb
pop
adc
mov
xor
mov
imul
fcomps
add
sub
daa
jbe
mov
fwait
int
in
and
xor
imul
jg
or
fisubrl
inc
lahf
push
ret
sbb
test
ficoms
xor
data16
cmpsb
insl
repz
jne
insl
out
pushf
out
cwtl
pop
cwtd
dec
pop
aad
pop
std
xor
mov
lds
push
sub
push
cs
sbb
dec
sub
adc
sub
mull
lahf
data16
leave
int3
lret
mov
push
adcb
jmp
cmp
and
mov
mov
push
mov
cmp
inc
aad
and
add
pop
jb
nop
in
scas
sbb
xchg
or
ss
aas
xor
pop
jne
imul
lds
dec
cmpsb
pop
add
ror
inc
push
test
dec
sahf
popl
lods
lea
aas
mov
lret
stos
adc
add
xlat
dec
mov
add
dec
add
cmpsb
jle
jmp
ds
jne
sub
repz
mov
sub
je
stos
pop
jno
inc
mov
xor
mov
adc
repnz
mov
push
das
lcall
add
fists
fdivl
xchg
xchg
push
sbb
push
addr16
adc
sub
rol
or
xchg
xchg
xor
leave
nop
stc
dec
inc
gs
mov
les
mov
push
in
enter
imul
testl
leave
dec
mov
dec
add
jle
jg
bound
nop
dec
cmpsb
push
push
and
mov
out
ljmp
mov
addr16
in
jo
scas
xchg
xchg
in
flds
mov
or
sub
popa
or
or
stos
nop
iret
cld
xchg
cmp
vpsraw
inc
xchg
push
shlb
jnp
movlps
pop
xor
imul
xlat
in
sbb
adc
dec
jg
test
sub
sbb
in
mov
jmp
movsl
aas
pop
loop
jnp
cmp
scas
dec
out
sub
dec
jl
mov
aas
andl
lods
xchg
enter
xlat
and
lret
mov
ja
cmp
out
test
pop
das
xchg
adc
xchg
dec
mov
add
sub
sbb
lcall
roll
das
xchg
pop
xchg
sbb
je
cmp
pushl
and
xor
in
cs
jnp
cmpsb
jno
mov
stc
mov
mov
mov
sub
pop
mov
add
inc
hlt
sub
xor
dec
inc
mov
or
cmp
stos
dec
call
xchg
jnp
mov
mov
sub
mov
in
dec
sti
or
xor
cwtl
xor
fnstenv
xor
aaa
lcall
or
xchg
mov
das
ljmp
imul
pop
jp
xor
jge
xchg
mov
mov
jg
adc
add
mov
and
pop
nop
repz
js
int3
rolb
insb
cmp
pop
iret
jl
rclb
cs
call
push
ljmp
pop
mov
lods
add
pop
pop
scas
xchg
push
inc
into
adc
lahf
les
push
mov
mov
jl
jg
sub
out
sub
pop
fdivl
sbb
mov
cmp
cld
lret
repnz
push
xchg
vcvtpd2dqx
jb
rcll
push
xchg
movsl
xchg
out
insb
stc
push
cmp
cs
xor
loopne
dec
cmp
or
cmp
addb
jmp
push
jb
icebp
sbb
pop
and
pop
rorl
lea
ss
xchg
mov
mov
adc
jae
lock
ss
xor
outsb
jns
push
mov
xchg
hlt
popa
push
pop
mov
push
movl
or
aad
dec
es
dec
inc
rorb
pop
nop
push
push
cmpsl
iret
cmp
ljmp
inc
xor
popf
cmpsl
sarb
mov
inc
jno
test
push
adc
sahf
cltd
mov
mov
pushf
sub
mov
add
js
jne
push
push
les
xor
sbb
ficomps
stos
imul
inc
ja
nop
lods
incb
std
adcl
jne
cli
movsl
add
cmp
pop
ds
shll
jmp
fiadds
test
push
mov
addr16
sarl
test
ret
mov
pop
lods
dec
pop
pop
insl
stc
sub
mov
mov
xlat
cmpsl
mov
dec
xorb
pop
mov
scas
add
stc
push
sub
lds
lret
inc
inc
aad
lods
mov
sbbl
jge
repnz
xorb
stos
dec
lds
push
sbb
jl
sub
popf
pop
and
fadd
dec
adc
jae
cmp
pusha
loope
mov
movb
rolb
shlb
or
fcmovnu
push
pop
or
pop
inc
fwait
jae
cmp
mov
inc
or
push
or
cmpsb
in
pusha
es
lods
cmc
fwait
sub
sbb
aas
cmpsl
outsb
pop
dec
cmp
andl
adc
or
mov
or
jbe
inc
scas
add
cmp
mov
xchg
jbe
loope
mov
xor
mov
jl
sbb
push
jo
fidivs
fs
loope
sub
or
rcrl
outsl
popa
xchg
pop
pop
dec
les
jns
pop
aad
jae
mov
cmp
or
cmp
stos
pop
es
push
add
ss
push
sub
dec
fisttps
adc
aad
cli
lret
add
cmp
cmp
cld
jae
in
arpl
popf
std
mov
scas
add
daa
popf
imul
push
imul
inc
es
and
adc
inc
jl
mov
mov
into
lret
and
dec
pavgb
pop
std
fdivl
and
inc
mov
aam
imull
push
add
pop
hlt
cmp
and
pusha
or
into
add
movsl
xlat
jne
lea
cmp
xchg
stc
lcall
in
xchg
mov
fidivs
call
jno
sub
adc
dec
sub
push
push
pushf
pop
and
push
insl
test
push
into
inc
add
inc
outsb
add
and
cmc
xchg
push
popa
push
bound
stos
xor
aad
xchg
adc
add
mov
push
lds
int3
xchg
push
je
mov
lret
mov
out
mov
in
sub
loop
gs
ds
mov
lds
mov
xchg
xor
mov
mov
fwait
addr16
push
cltd
bound
fs
aas
mov
stc
dec
imul
mov
in
fstpt
mov
clc
lret
faddl
sbb
dec
mov
lea
cwtl
xor
xchg
mov
xchg
enter
in
scas
sbb
fisttps
fidivs
test
xor
or
mov
cmpsl
cmpl
jge
pop
sahf
adc
mov
pop
adc
jb
shl
xchg
pop
xor
cmp
out
mov
pop
arpl
leave
stc
adc
repz
inc
push
scas
faddl
push
sbb
in
sbb
sbbb
pop
inc
lret
push
or
jp
sub
aad
sub
test
or
mov
xor
dec
or
mov
cmp
faddl
jl
out
mov
inc
pop
sbb
sbb
int
sub
pusha
aaa
outsl
ja
push
sbb
fwait
xor
fdivp
push
push
out
test
cmp
mov
cwtl
test
fisubrl
loopne
cmpsl
mov
cmc
and
shl
adc
inc
dec
fmuls
lret
rcrb
mov
sbb
mov
mov
mov
cmp
popa
fsubs
test
xor
mov
xor
add
enter
adcb
fwait
imul
daa
aaa
cmp
jae
xor
cmp
jo
addr16
insl
ret
mov
orl
sub
or
mov
mov
scas
sahf
cmp
jne
hlt
sahf
rorl
mov
and
sub
and
sar
sub
daa
repz
and
pop
test
mov
adc
lock
fwait
sahf
cmp
imul
mov
adc
xor
movsl
push
mov
movsb
in
out
add
push
jge
lret
pop
ljmp
pop
cmp
test
jno
add
mov
aaa
mov
sub
push
and
pop
sub
outsb
mov
les
push
sbb
xor
out
fldt
and
mov
sub
out
pop
test
nop
int
dec
iret
div
xor
test
fbld
insb
or
sub
pop
xor
mov
inc
clc
lds
or
adcb
cmpsb
cmp
fwait
adc
add
jg
sbb
mov
leave
adc
cmp
jle
add
nop
push
push
fcoms
xchg
repnz
lods
mov
push
or
imul
push
sub
cmpsl
lock
lea
lahf
aaa
paddusw
fucomi
sbb
in
jmp
adc
lcall
mov
pop
xor
sbb
jl
add
or
lret
negl
add
les
addb
xor
fistpll
pop
sbb
pop
iret
cmp
add
aaa
int3
hlt
in
subb
adc
sub
adc
push
push
push
shr
xchg
xchg
rclb
mov
dec
outsb
jge
or
or
out
xchg
imul
pop
jo
out
pop
pop
sub
adc
fldcw
inc
add
in
out
leave
lods
or
test
fucom
hlt
cmpsl
mull
push
xchg
out
mov
jbe
cltd
mov
jp
dec
aaa
mov
int
jl
in
in
dec
cmp
imul
add
xchg
inc
add
push
mov
ja
push
jae
cmpb
ret
inc
and
jnp
push
xbegin
popf
ss
inc
shll
dec
add
pop
popa
dec
adc
cltd
sbb
mov
sub
popa
pop
scas
cld
mov
call
inc
scas
ret
das
adc
and
std
imul
daa
push
lret
push
push
fsubrs
fcoml
push
and
insl
push
mov
mov
daa
mov
out
sbb
out
daa
pop
int3
ret
dec
mov
mov
aaa
xchg
in
mov
push
lcall
inc
loopne
push
mov
cmp
and
icebp
or
sub
cltd
add
dec
bndldx
add
sti
lods
push
incb
aas
movsl
int
mov
or
jle
sbbb
and
cmp
and
fwait
mov
push
pop
sub
jp
out
sahf
in
push
call
call
push
inc
xlat
sbbb
movsl
sti
test
frstor
cmp
jp
movsl
mov
stos
dec
ja
sbb
dec
inc
lock
es
out
add
pop
xchg
aaa
imul
add
stc
xlat
mov
pop
fcoml
mov
pop
pop
cltd
hlt
jle
nop
xchg
add
das
nop
ja
mov
dec
hlt
inc
aam
jmp
xchg
lods
ret
mov
rcrl
ret
sub
mov
push
je
mov
mov
bound
ss
test
jno
and
fbld
out
push
mov
xchg
mov
xchg
daa
lahf
fcmovu
mov
inc
mov
repz
sarl
jno
jg
pop
and
adc
shll
ss
push
sbb
insl
or
inc
push
mov
dec
das
call
mov
sbb
mov
mov
inc
or
hlt
mov
lret
cs
sbb
stc
xchg
int3
mov
jne
xchg
or
pop
out
data16
mov
out
xchg
mov
outsl
inc
lock
add
rorb
fabs
push
push
inc
out
lods
pop
cmc
ljmp
jbe
out
iret
stos
xchg
or
int
lods
push
inc
dec
xor
fcomps
jnp
shr
xor
inc
push
lock
aad
mov
jns
cmp
int3
inc
jnp
jl
dec
dec
push
outsl
pop
ds
sbb
jb
pop
push
add
ss
jecxz
popf
mov
adc
lea
cli
dec
lret
movl
push
shll
dec
cmp
inc
add
cli
sub
dec
loope
sub
mov
mov
jle
ret
xor
call
adc
jl
sub
xor
adc
cltd
inc
sub
jb
jg
scas
push
adc
jecxz
out
inc
fisubrs
sbb
cmp
gs
insb
nop
ss
and
maxps
inc
imul
pop
or
les
mov
add
iret
mov
push
mov
test
in
imul
jmp
xchg
loope
inc
mov
scas
mov
cmpsb
repnz
js
adc
call
fnsave
dec
fmulp
inc
loope
pop
jnp
push
mov
int
cmc
jp
push
stos
adc
test
dec
mov
adc
daa
fbld
int
test
sbb
mov
cmp
sbb
clc
ljmp
aaa
dec
push
or
daa
jne
and
push
fmull
cltd
push
imul
int3
addr16
add
or
fcom
pop
cmpsb
inc
mov
and
cmp
jle
adc
gs
in
mov
cmp
pusha
test
mov
pusha
insl
insl
stos
fdivrl
mov
ss
pop
insl
or
or
movsl
pop
add
mov
mov
ja
dec
xorl
enter
shlb
pop
xchg
mov
mov
aas
mov
or
mov
pop
inc
push
jecxz
cmp
test
pop
jno
ljmp
push
jmp
mov
xchg
repnz
idivb
stc
mov
mov
sub
test
stos
cmp
pop
loopne
xchg
pop
add
movlps
jns
jp
mov
sub
fldcw
add
testb
jl
cmp
aad
xchg
insl
cmc
pop
xchg
jmp
push
stos
lret
fwait
insb
test
mov
sub
rcl
and
fldenv
dec
daa
out
mov
jmp
xor
xchg
mov
dec
fisttps
mov
in
repz
xor
scas
mov
mov
mov
lahf
pop
push
dec
sub
jnp
loop
pushf
nop
or
cli
xchg
sbb
mov
push
int3
jge
aas
sti
xor
inc
pusha
in
inc
mov
inc
sub
push
sub
dec
mov
int
ret
faddp
adc
mov
ret
mov
fucom
les
push
or
pop
push
mov
arpl
pusha
push
sub
and
mov
inc
mov
mov
push
inc
push
loopne
push
fisubrl
arpl
sub
or
mov
mov
jge
lahf
and
mov
outsl
popf
aas
dec
daa
adc
insl
xor
jecxz
mov
int3
shl
pop
clc
jnp
imul
sbb
ljmp
std
das
ja
in
shr
mov
mov
aaa
sbb
data16
data16
daa
pop
mov
cmp
jae
jns
mov
jle
sbb
cmc
mov
mov
cltd
and
cltd
testb
dec
add
fcomp
popl
sbb
fisubl
inc
jns
aam
leave
sti
push
les
or
sbb
jae
cld
nop
sub
lret
pusha
imul
cwtd
fs
testb
scas
shlb
jbe
dec
add
pop
jno
ret
push
or
xor
lods
jae
int3
out
push
push
push
sub
mov
mov
dec
cmpsb
lods
fcompl
lret
pushf
lods
daa
mov
pop
test
sub
js
pusha
push
push
add
push
mov
inc
or
aad
repnz
sub
xor
test
mov
movsl
out
rorl
mov
popa
xor
nop
and
lock
mov
in
iret
shll
push
sub
mov
lds
adcb
mov
dec
jb
mov
mov
xor
xor
sbb
cmp
mov
scas
sarb
imul
cmp
ja
jbe
and
icebp
and
pop
popf
lds
out
out
push
mov
xchg
enter
outsb
rclb
fcomp
stos
ret
jl
xor
dec
movsb
jo
dec
fstpt
jmp
lods
and
movsl
mov
jae
repz
repnz
shrl
xor
lret
repz
rclb
and
mov
in
pop
sbb
out
adc
loope
addl
or
sar
jge
test
dec
in
or
or
sub
mov
sbb
iret
xchg
mov
and
adc
arpl
cmp
push
mov
xchg
xchg
xchg
dec
ds
cmp
test
mov
jge
mov
mov
xor
push
and
outsl
pop
mov
sbb
push
lods
loope
mov
fcmovnu
mov
gs
int3
mov
mov
push
sbb
rcll
test
test
xchg
and
sbb
mov
or
testb
mov
mov
inc
adc
scas
and
cmp
sbb
fstl
hlt
popf
mov
pop
leave
dec
mov
or
push
push
dec
int3
cmp
test
mov
fists
push
pop
nop
sbb
idivb
pop
push
rcrb
iret
lea
imul
adc
arpl
loopne
addr16
iret
add
or
xchg
fildl
and
sbb
or
or
mov
inc
xchg
xchg
cmp
sbb
dec
shl
mov
xor
mov
jg
movsl
jge
dec
pop
and
or
xchg
dec
inc
or
imul
mov
fistps
mov
inc
mov
xchg
ret
test
dec
imul
xchg
clc
adc
mov
cmovne
hlt
jp
pop
and
add
aas
imul
jle
jbe,pn
in
sbb
xchg
andb
mov
enter
ja
cmpsb
in
dec
jp
paddusb
cmp
cmpsb
outsb
and
cmp
jle
lea
add
or
arpl
xchg
scas
adc
dec
mov
sar
pushf
add
ljmp
test
cmp
sbb
js
inc
sbb
add
jns
or
push
push
cld
or
aad
nop
imul
mov
mov
mov
mov
push
push
push
push
rcrl
adc
adc
pop
imul
negb
popa
sub
cwtl
ficomps
lahf
cwtl
or
and
orb
sbb
insl
sti
insb
mov
pop
out
and
mov
jp
mov
push
inc
andl
das
and
aad
out
cmpsb
test
fisubs
and
cmp
jg
jne
push
cld
lods
push
sbb
inc
mov
push
outsb
out
nop
pop
bound
outsl
daa
jno
les
dec
cwtl
inc
icebp
mov
mov
jb
sbb
daa
mov
pop
jp
pusha
mov
mov
xchg
outsl
pop
push
stos
outsl
and
movsl
add
mov
mov
xchg
pop
rclb
sbb
inc
mov
sahf
outsl
sbb
and
and
fldcw
mov
mov
popa
xor
adc
xor
pusha
push
sub
sub
out
adc
cs
stos
adc
fsubs
into
les
aaa
out
sub
add
mov
mov
push
lds
xchg
lea
rcrb
roll
das
shll
xorl
rolb
adc
and
fbstp
std
incb
loop
leave
shrb
outsb
mov
cmp
call
out
into
scas
out
fstpl
pop
out
insb
push
int3
ja
imul
mov
leave
jns
sbb
mov
test
adc
pop
xlat
pop
mov
lret
mov
cmp
ret
xor
mov
mov
sbb
fwait
xchg
push
lods
sahf
mov
outsl
xor
das
cltd
jb
mov
nop
cwtl
jmp
push
adc
dec
das
push
ret
les
ret
or
outsl
mov
add
repnz
sub
xchg
fsubrs
ret
cltd
data16
shrl
mov
push
stos
xchg
add
pop
dec
mov
sarb
loopne
imul
ss
out
pusha
repz
sarb
lds
stc
push
out
jno
imulb
mov
inc
sub
xchg
xor
or
xlat
xor
push
dec
scas
sbb
jns
sub
mov
call
scas
jne
in
shll
xor
cltd
bound
add
ret
into
mov
scas
xchg
mov
pop
rcr
pusha
pop
shl
scas
iret
movsl
add
repnz
xor
mov
jge
adc
mov
insl
push
popf
mov
mov
arpl
xor
mov
jbe
int
jae
jo
aam
push
cmp
mov
cmp
fsubs
shlb
jne
cmp
inc
add
xchg
push
ja
push
mov
loope
xchg
sbb
mov
nop
notb
aam
add
mov
inc
paddw
pop
aad
and
sbb
cmp
loop
mov
sub
lock
cmp
in
xor
in
jo
movsl
push
jbe
cmpsb
test
xor
adc
fcoms
loopne
mov
jecxz
xchg
pop
lods
sti
std
or
dec
and
or
sbb
jp
sub
pop
scas
aas
into
int
or
pop
aas
push
in
push
xchg
jae
and
ds
popa
movsb
addr16
hlt
test
jnp
jo
dec
ficompl
sub
push
pop
push
inc
mov
jae
sub
pop
adc
daa
jns
in
insb
mov
fs
inc
lds
test
aad
gs
xlat
pop
stc
jns
dec
stos
jmp
push
add
stos
pop
fsubrl
sarl
xchg
cs
cmp
movsl
cmp
ss
ds
aas
xor
ficompl
movsl
lcall
mov
inc
xor
cmp
push
jbe
mov
sub
popf
popf
lea
cltd
xchg
dec
fsub
xorb
jns
push
xchg
iret
pop
int3
adc
push
push
imul
data16
pusha
bound
shlb
stc
dec
inc
jp
lea
xor
inc
lcall
inc
push
scas
adc
adc
sbb
ja
cmpsb
clc
mov
adc
mov
sbb
in
mov
xchg
pop
mov
cmp
jl
fists
pop
repnz
data16
ja
icebp
mov
push
sub
repz
sub
and
adc
xor
in
cwtl
inc
fs
xor
nopl
fildl
dec
cli
ss
sahf
daa
ret
jns
jp
xchg
out
hlt
xor
sahf
stos
inc
jecxz
or
xchg
scas
fcmovbe
arpl
mov
mov
aad
or
aaa
and
cmp
pop
lock
loop
ja
fdivrs
test
lret
mov
jge
xchg
fcoml
jne
es
movsb
sar
aad
push
add
movsl
rorl
push
jnp
outsl
and
hlt
mov
and
aaa
daa
xor
cmpsl
adc
daa
jo
lret
inc
sbb
xor
jo
or
or
lds
sub
mov
jle
pop
xchg
push
test
jge
adc
pop
xchg
xor
add
sub
fdivs
imul
xor
cs
adc
mov
outsl
lods
lret
adc
fidivl
mov
sbb
rcrl
adc
fdivs
nop
sub
mov
nop
sbb
data16
sub
mov
mov
mov
push
int
jg
fcomps
xor
addr16
repnz
pop
out
xor
into
pusha
pop
aam
sub
adc
inc
add
cli
xor
inc
into
push
push
movaps
fisttps
loopne
aad
cmp
inc
push
out
lock
mov
cmp
mov
or
cs
loop
aas
or
dec
cmp
and
lods
cmp
cld
mov
xor
xor
lea
sub
xorl
mov
mov
cmp
ja
test
js
stc
popa
inc
or
ror
push
arpl
data16
jecxz,pn
cld
nop
cwtl
jbe
mov
inc
mov
adc
adc
cmpb
rorl
inc
mov
daa
pushf
repz
or
sahf
adcb
jnp
dec
push
stos
or
dec
dec
mov
mov
xor
inc
mov
fldt
test
jmp
dec
or
or
sbb
pusha
push
add
orl
and
inc
insl
xor
repz
repz
pop
scas
jl
aas
push
mov
sub
inc
in
outsl
xchg
mov
push
jo
mov
data16
jbe
pop
add
stc
aas
inc
daa
sub
sti
xchg
aam
dec
push
mov
icebp
and
bound
data16
dec
lret
hlt
xor
push
in
in
dec
inc
push
add
call
pop
pop
cmp
test
and
and
inc
pop
loop
cmp
or
pop
rol
mov
std
jl
pop
sbb
xchg
push
pop
loopne
addr16
fwait
aad
inc
adc
push
test
xchg
mov
int
jp
jg
pop
add
shlb
jbe
imul
mov
stc
rcrb
loop
pushl
push
xor
sbb
add
test
testl
pop
pop
mov
mov
sub
push
xchg
movb
cwtl
xor
imul
sbb
fnstsw
scas
dec
inc
pop
lods
xor
add
leave
fdivrs
jmp
mov
push
into
lret
das
cmpsl
adc
ret
frstor
inc
idivl
mov
push
dec
and
push
jnp
rcrb
cmp
cmp
jae
adc
jb
jo
dec
inc
and
insl
cmpsl
fildll
dec
adc
cmpsl
ss
mov
sub
stos
popa
movsb
das
push
shl
sbb
mov
arpl
push
pop
pop
mov
jne
in
mov
sbb
imul
sub
adc
add
test
ret
sbb
pop
cld
cmpsl
mov
jnp
cli
leave
inc
add
mov
cmpsl
cmpsl
jp
cmpb
pop
call
push
fsubrl
les
loopne
lds
repnz
mov
pop
daa
pop
lock
jae
and
enter
aas
xor
push
jns
dec
or
add
stos
dec
push
xor
jge
in
xorb
mov
cli
fsubl
mov
shrl
jb
loop
adc
cmp
add
cmp
leave
adc
test
dec
jl
pop
jno
fimull
add
add
or
lods
test
leave
inc
test
jns
inc
fidivrs
cmpsb
lock
stos
mov
pop
mov
inc
lret
push
mov
sub
in
cmp
add
add
mov
mov
adc
add
sbb
push
lcall
scas
pop
mov
cli
sbb
cld
nop
imul
in
dec
in
xor
and
scas
rclb
push
add
pop
adc
and
or
sbb
imul
dec
push
jecxz
mov
add
add
sub
inc
dec
add
test
cmp
and
popa
jno
push
lret
mov
adc
into
push
imul
adc
nop
dec
insb
pop
and
aad
test
aad
pop
adc
mov
inc
test
jo
jne
int
pop
cmp
and
lock
sbb
mov
jne
loope
sub
push
mov
gs
arpl
fwait
repnz
jbe
pop
add
test
ljmp
jb
or
pop
pop
inc
rcll
push
adc
out
fs
and
jo
pop
roll
push
jno
hlt
scas
faddl
aad
movsl
pusha
xchg
mov
in
jno
mull
fisttpll
out
jge
mov
imul
pop
jno
data16
scas
cmp
cmp
out
pop
xchg
aas
pop
loopne
pop
roll
sub
fisubrl
and
pop
push
xchg
pop
mov
mov
in
mov
cmp
sub
das
push
aam
out
int3
xchg
mov
sahf
je
sbbl
decb
test
xor
cli
in
mov
sub
mov
fbstp
lods
std
mov
std
xor
out
dec
and
sub
inc
movsl
inc
jae
xchg
inc
lcall
xchg
or
es
cs
mov
inc
mov
andb
js
loope
test
cmp
xchg
jbe
and
fimull
lahf
clc
push
pop
je
cmp
jmp
mov
dec
cld
jl
in
shll
sub
and
aam
dec
test
enter
mov
fisttpll
daa
mov
or
gs
jmp
mov
daa
loope
sbb
int3
sub
lock
in
or
add
addr16
or
xchg
xchg
push
hlt
dec
push
jbe
sbb
loope
ja
jg
fsub
adc
sbb
sbb
mov
mov
push
dec
cltd
mov
dec
or
mov
out
or
dec
inc
cltd
fwait
lcall
ja
ss
pop
adc
mov
aas
sub
imul
inc
ror
lret
jle
cld
out
out
xor
cmp
jg
sub
push
push
mov
sub
mov
pop
mov
push
leave
js
sbb
jb
sbb
push
adc
scas
sbbb
sarb
pop
add
mov
mov
fxch
push
adcl
sub
imul
stos
and
inc
int3
loop
add
std
cwtl
inc
idivb
into
fnstenv
sbb
pop
in
dec
mov
pop
or
jbe
mov
cs
dec
xchg
push
mov
cli
jne
lret
pop
xor
xchg
test
push
fmull
loop
mov
aad
adc
jnp
test
je
xor
inc
dec
jp
push
lods
popf
pop
flds
js
mov
es
addr16
or
add
push
xchg
unpckhps
pushf
fcompl
mov
sub
push
test
add
stos
xchg
dec
and
scas
mov
cld
lock
push
xchg
fdivl
pop
and
pop
cmp
popf
aad
cli
push
push
add
cmp
pusha
scas
cmp
clc
jl
and
sub
sbb
in
fwait
adc
and
mov
and
jns
int3
sbb
shrb
or
jmp
push
rclb
inc
push
outsl
xchg
cwtl
lret
imul
data16
mov
push
push
jge
and
dec
ret
jge
mov
push
sbb
inc
loop
xchg
pop
mov
sti
or
cmpsb
in
xchg
loope
sbb
dec
xchg
sub
mov
mov
repnz
pop
jae
fistps
movsb
data16
or
daa
xchg
and
fsubr
jge
ds
adc
push
jecxz
repnz
sub
in
xchg
mov
loop
pop
jmp
andl
sbb
mov
sub
dec
push
sub
loop
xorps
xchg
test
jne
inc
std
inc
dec
lcall
das
and
inc
sbb
fsubrs
test
or
sbb
pop
call
inc
sub
test
sub
les
js
aaa
movsl
pop
int3
cs
jp
or
add
in
sarb
divb
sbb
sub
pop
fstpt
test
pop
or
cs
outsl
adc
call
popa
ja
out
mov
incb
sbb
lcall
out
addl
push
fwait
add
cmp
rcr
loope
cwtl
xchg
int3
call
xchg
das
mov
sbb
dec
call
cmp
dec
jno
aas
xor
pusha
fmuls
scas
mov
test
xchg
xchg
sbb
push
push
idivl
callw
mov
stc
jge
mov
mov
ret
shlb
and
ljmp
xor
push
in
jae
lea
inc
lcall
sbb
mov
scas
mov
inc
mov
cli
or
addr16
xlat
pushf
or
push
jp
sub
out
mov
add
mov
adc
ss
xchg
jbe
jg
pusha
ret
popf
insb
xchg
in
dec
add
jecxz
and
mov
int
or
cltd
jbe
xor
fstl
jae
fcoms
and
xchg
cmp
pop
test
add
das
mov
or
adc
cmpsl
adc
pop
std
sub
jne
cmp
aaa
mov
sub
dec
jge
mov
xchg
aas
cmc
mov
add
fmuls
mov
pop
stc
and
js
in
test
jl
loopne
adc
das
orb
xchg
les
mov
jmp
inc
add
divb
xchg
or
adc
repz
adc
aam
aas
mov
mov
inc
loope
stos
push
cs
idivl
cmp
sti
xchg
mov
cmp
cmp
adc
mov
adc
std
inc
ret
xchg
inc
and
add
jmp
orb
jecxz
sub
push
xchg
push
cmp
push
sub
sbbb
xchg
cmpsl
lret
addr16
push
loop
ret
xor
dec
adc
and
arpl
inc
push
test
adc
push
jnp
jle
lcall
lods
loop
xchg
fildll
dec
push
test
test
jns
pusha
push
cmpsb
in
push
xor
ss
movsl
ret
jne
push
cld
fs
xor
cltd
xchg
xor
sub
push
in
xor
and
jge
mov
in
push
xchg
mov
pop
xchg
cmp
cs
dec
cmpb
jg
jnp
xchg
lods
cmp
loop
sahf
out
sarl
pop
jno
sub
add
sbb
mov
mov
pusha
inc
ret
loopne
mov
dec
pop
pop
fldt
inc
adc
pop
push
push
pop
mov
lock
xor
xrelease
rcl
mov
test
and
divl
push
dec
mov
scas
or
inc
adc
mov
adc
mov
inc
add
add
in
mov
xor
les
sub
pop
pushf
in
push
mov
leave
dec
sub
mov
ror
and
jle
addr16
cmpsl
out
orb
lock
insl
sub
jge
iret
es
mov
mov
icebp
adc
in
gs
pop
scas
ss
movsb
sub
dec
mov
xor
out
sbb
ss
sbbb
sbb
pop
repz
inc
dec
xchg
rcr
daa
lcall
pop
fisttpl
add
jnp
xchg
xor
sbb
xchg
xlat
sarl
jnp
aas
mov
hlt
xchg
and
addr16
cltd
fbstp
int
mov
movsl
cmp
sbb
repz
leave
leave
adc
rorl
pushf
fidivrl
fdivs
aad
jl
mov
in
cli
lahf
mov
jle,pt
std
nop
mov
pop
dec
mov
cmp
std
in
add
sbb
js
xchg
test
loopne
jmp
cmc
jp
lret
mov
scas
push
inc
std
jne
sub
mov
mov
dec
mov
jnp
addr16
stos
mov
jae
test
xchg
and
mov
aam
movsl
nop
test
imul
adc
ss
in
mov
pop
push
or
xor
add
mov
scas
es
shlb
push
cltd
adc
cmp
imul
test
adc
add
repnz
jb
aad
outsl
stos
push
scas
pop
add
fmul
add
adcb
cmpsl
das
mov
outsl
fucomi
adc
mov
lea
jns
bswap
stos
cmp
sub
mov
movb
or
pshufw
sub
fxch
cld
sahf
inc
mov
popf
mov
push
loope
or
pop
mov
cwtl
nop
adc
mov
scas
nop
lret
aaa
jb
cmpsb
nop
and
dec
cli
xchg
arpl
mov
inc
dec
ret
inc
lds
sub
loop
into
jbe
xchg
aaa
inc
fucompp
push
or
adc
jb
jae
fcomps
int
aam
sbbb
test
subl
dec
pop
fldt
out
sub
pop
jno
cmp
fwait
insb
adc
xchg
xchg
fisttps
and
adc
sub
mov
jmp
stos
int3
fwait
xor
pop
shr
inc
nop
iret
pop
dec
xlat
push
push
xor
mov
cmpsl
mov
rolb
xor
add
and
iret
scas
pushl
jo
mov
mov
xchg
mov
and
cltd
cmp
adc
aas
test
imul
ret
mov
xor
jns
iret
push
sub
pop
int3
test
xchg
xchg
and
mov
xchg
mov
inc
push
or
add
aad
imul
xor
test
mov
push
repnz
inc
jmp
dec
mov
and
adc
fs
clc
adc
scas
stos
outsb
repnz
aas
rorl
push
out
cmp
in
cltd
adc
imul
mov
arpl
inc
adc
and
rcrl
inc
pop
divl
cwtl
mov
jns
inc
dec
mov
movsb
idivl
fs
rcll
mov
lahf
push
jle
xor
insl
and
inc
aam
and
mov
orl
sub
xor
and
or
mov
sbb
mov
mov
dec
pusha
shld
mov
push
and
sbb
mov
shrb
pusha
pop
subb
fsubrl
pop
inc
mov
loopne
test
and
leave
ja
mov
jns
add
pop
jecxz
dec
test
pop
dec
out
ret
mov
rcll
cmc
imul
dec
sbb
inc
push
cli
xor
cmp
inc
imul
mov
adc
ret
jge
in
fstps
mov
or
dec
jle
mov
repz
mov
leave
stc
movsl
xor
xor
insb
jl
adc
loope
or
push
cld
mov
fcoml
lcall
adcb
aas
dec
or
xor
jnp
popa
add
inc
hlt
testl
cld
into
push
xor
out
xchg
cli
pop
mov
cwtl
mov
into
cmp
push
hlt
je
nop
or
cmp
shl
dec
push
gs
mov
jo
fdivr
and
push
cmp
out
in
jle
push
jmp
cmpsb
cmp
test
aad
jl
dec
rolb
add
mov
lea
cmp
xchg
push
sbb
mov
leave
sub
pop
lcall
or
xor
dec
push
dec
rorl
outsb
popa
ret
pop
mov
imul
orl
gs
pop
push
push
pop
mov
jno
mov
inc
inc
mov
insb
add
jmp
or
test
fmuls
adc
lods
divl
pop
ja
push
cmp
or
mov
test
dec
arpl
stos
gs
adc
movsb
sub
mov
xor
pop
and
call
mov
loop
xchg
jecxz
add
sbb
cmp
ficoms
jbe
subb
inc
dec
aam
js
popf
mov
hlt
or
lret
test
inc
or
insl
jo
dec
inc
pop
das
sti
xchg
and
das
jg
and
repz
sbb
cmp
xchg
cmp
das
out
cld
mov
xor
sbb
dec
push
jmp
xchg
pop
stos
xor
or
into
mov
adc
lods
xor
xchg
ljmp
out
jmp
sbb
dec
inc
psllq
cmpsl
in
test
mov
dec
js
repz
roll
or
pop
stos
xchg
mov
sub
push
sub
push
orb
or
stos
imul
test
hlt
rcr
sbb
dec
add
leave
push
dec
std
jns
cmp
sub
aas
in
push
repnz
leave
jmp
dec
hlt
xchg
mov
pushl
and
ljmp
sub
xchg
lcall
jne
leave
jecxz
ja
imul
add
addl
pop
sbb
leave
cld
xchg
lods
push
add
push
fdiv
mov
stos
cld
push
mov
mov
mov
pop
jl
mov
jns
push
test
jmp
push
mov
mov
xchg
stos
rol
lahf
bound
push
jge
sub
aaa
fstpt
jo
sub
adc
inc
xor
fs
mov
and
cmpsl
mov
sbb
push
shlb
push
insb
loope
cmpsl
pusha
repz
loopne
iret
pop
iret
in
inc
clc
pop
dec
sub
imul
iret
sub
push
call
cmc
cli
ss
sti
outsb
adc
inc
mov
call
stos
clc
inc
xor
cwtl
adc
cmp
xor
mov
lcall
mov
mov
cmp
adc
stos
sub
dec
xchg
mov
adc
bound
outsb
mov
lret
std
enter
adc
pop
dec
ret
inc
and
dec
jmp
cld
cmp
and
mov
ss
cmp
fstpt
sbb
sbb
pop
xchg
add
mov
das
lea
leave
aas
pop
sbb
test
cltd
sbb
ret
adc
ret
fadds
lahf
dec
or
insl
xor
scas
mov
shlb
mov
movsb
ret
sub
pushf
inc
ljmp
dec
pop
ret
rorb
sarl
sbb
cmp
hlt
out
loope
leave
cmp
xchg
pop
xor
or
push
shll
scas
or
fdivs
and
and
adc
cmp
push
xchg
adc
movb
xchg
add
or
cmpsl
jno
push
int
or
or
xorl
push
cs
dec
popl
mov
fcomp
cmp
in
idivl
and
adc
jae
or
xchg
aam
jp
jne
ss
dec
sub
jecxz
and
add
inc
ss
push
insl
out
fs
cmp
jmp
cld
in
fyl2x
mov
loop
aaa
inc
daa
or
push
arpl
mov
lods
pop
xchg
jg
mov
mov
inc
hlt
xchg
push
mov
repnz
ffreep
subl
push
repz
orl
ret
xchg
push
out
xlat
mov
and
or
in
jl
repz
lods
pop
cmp
sub
xchg
xchg
stos
xchg
add
push
adc
sbb
mov
xorb
out
sub
stos
mov
adc
or
pop
xor
jmp
push
in
push
cli
nop
shlb
push
mov
leave
cmc
lret
adc
aas
aaa
iret
fsubl
jl
and
push
inc
scas
jp
inc
mov
dec
int3
push
lods
call
inc
add
jns
lret
push
push
enter
ffree
stos
xor
jo
add
ror
add
fwait
pop
icebp
pushf
mov
push
inc
iret
xchg
out
cmpsb
mov
scas
loope
xchg
data16
nop
adc
mov
add
mov
sub
xchg
dec
andb
xlat
push
mov
aam
jmp
jle
rorb
or
lock
call
adc
test
int3
cmp
sahf
xor
into
jno
push
jns
movsl
push
out
test
out
and
pop
and
adc
mov
mov
pop
pop
push
sahf
pop
cs
cmp
mov
adc
fdiv
leave
lret
add
jbe
add
or
bnd
jg
ljmp
jmp
inc
adc
xor
stc
inc
andb
mov
mov
lods
scas
adc
mov
push
mov
mov
cld
push
clc
out
es
nop
adc
ljmp
icebp
fld
lret
cmp
adc
mov
adc
inc
mov
outsl
push
sub
add
push
loope
push
mov
arpl
rcll
popa
adc
jb
push
fsts
xor
sbb
and
out
dec
mov
lcall
rorl
popa
or
pushf
rolb
ret
mov
std
enter
jns
int
sub
rolb
sbb
rcl
in
xor
lods
jns
inc
sti
cltd
push
push
cld
add
aaa
push
cli
inc
mov
ss
aad
xorl
mov
mov
lret
std
pop
pop
les
int
push
mov
std
test
mov
mov
out
mov
orl
repnz
pushl
scas
jb
jmp
clc
adc
pop
sub
mov
jg
outsb
subl
add
mov
xchg
jno
or
pop
cwtl
outsb
insl
xlat
sub
mov
inc
xor
jl
paddw
cltd
and
in
sti
pop
cmpsl
int
sahf
cmp
fidivrs
cmp
inc
sub
mov
std
or
adc
popf
out
add
test
repz
mov
cli
sub
mov
out
sub
ds
cmpl
fstl
in
loopne
roll
in
mov
sub
insl
mov
sub
push
jbe
daa
repnz
movsl
loopne
adcb
cmp
das
cmp
out
add
push
xor
ja
push
adc
push
stos
pop
hlt
mov
cwtl
scas
test
jo
into
loope
in
xlat
lcall
jge
lods
dec
imul
jg
adc
and
pop
jecxz
push
enter
jp
leave
scas
ffreep
lods
push
aaa
or
cmp
xchg
test
sbb
xlat
cmpsb
jecxz
add
fdiv
xor
push
jo
dec
and
aas
mov
ror
and
aad
shll
loopne
sahf
jne
outsb
adc
inc
sbb
cmp
mov
iret
xor
or
and
arpl
adc
jbe
ror
bound
sbb
cmp
filds
mov
sub
jl
call
push
jge
pop
sub
rclb
stc
mov
pop
adcb
add
shll
mov
mov
add
jecxz
cmp
sbb
jae
rorb
pushf
in
lods
imul
sub
xchg
cmp
mov
xlat
ljmp
push
fnsave
stos
mov
std
aad
shl
xchg
xchg
insl
cmp
lcall
aas
cmp
dec
repnz
test
arpl
pop
or
clc
xchg
lods
inc
inc
push
loop
fucomp
test
cwtl
push
push
pop
sti
shrl
xchg
pop
cmpsl
dec
add
out
dec
lds
sbb
or
jle
mov
test
movsb
jno
sbb
js
mov
shrb
sbb
pop
jne
sbb
mov
push
mov
imul
xor
mov
mov
cmp
arpl
jle
xor
mov
adc
adc
adc
add
dec
pop
popl
or
cmpl
and
adc
es
dec
mov
xor
pop
jns
xchg
leave
rcrl
mov
pop
xchg
repnz
dec
fwait
in
sub
sub
adc
mov
fimull
rclb
jnp
sbb
lret
xchg
mov
jae
inc
add
pop
iret
lds
mov
fwait
sub
sub
sbb
iret
scas
divl
push
movsl
and
movsl
pop
mov
mov
jmp
gs
adc
fdivrp
dec
mov
lds
frstor
adc
loope
jmp
mov
pop
xlat
xchg
stos
aam
in
or
clc
enter
xchg
aaa
iret
push
mov
andb
ret
fs
or
scas
jno
xchg
jns
push
cs
adc
cmpsb
div
mov
testl
imulb
xchg
mov
cmp
dec
cmp
or
int3
lcall
imul
adc
stc
int
cmp
adc
nop
fistl
jns
sub
push
xchg
push
cmp
add
xchg
arpl
pop
adc
sahf
mov
pop
xchg
es
push
add
inc
push
adc
outsl
or
movsl
nop
test
fistps
jb
pop
dec
and
out
cmp
push
mov
sub
lret
test
mov
movsb
mov
jl
hlt
jmp
inc
cli
pop
hlt
movsb
in
pop
ja
sub
sarb
push
inc
les
pop
and
insl
jns
mov
bound
gs
sahf
or
and
jb
pushf
and
sbb
loop
push
lea
pop
test
inc
cltd
add
add
dec
dec
ds
pop
mov
and
aas
cmp
or
push
push
add
xor
cmpsl
addl
cwtl
in
or
jle
mov
cmpsl
inc
or
dec
mov
pop
xor
dec
push
mov
lock
test
mov
lods
scas
stos
aad
lds
stc
mov
jns
lret
sbb
pushf
and
push
test
test
mov
cld
fisttps
test
shll
mov
jecxz
mov
orb
pop
pop
jge
hlt
fwait
mov
add
mov
adcl
lods
imul
sub
aaa
dec
mov
or
dec
lds
xchg
or
mov
bound
int
test
gs
add
popa
inc
fisttpll
nop
pop
pop
jp
push
lods
and
in
daa
lds
mov
jle
mov
daa
stc
and
sub
sbbl
jmp
push
mov
or
jecxz
rorb
int3
mov
mov
repnz
stc
mov
aam
push
adc
insl
stc
faddl
jmp
or
cmp
adc
hlt
outsl
shrb
addl
dec
mov
mov
jecxz
mov
and
shrb
jmp
xchg
mov
push
and
cmp
xorl
xchg
mov
inc
imul
or
aas
mov
jne
adc
add
jg
cmp
mov
fnsetpm(287
das
xchg
loope
pop
mov
xchg
or
nop
xchg
icebp
cmpsb
ds
xor
adc
pop
dec
in
sbb
jns
cltd
push
sub
addr16
dec
mov
xlat
cmp
movsl
ja
jns
xchg
jecxz
bound
ret
xor
das
into
adc
cmpsl
or
jne
inc
push
sub
lods
sbb
popa
mov
sbb
clc
mov
ror
pop
repz
inc
xchg
add
out
out
sbb
mov
mov
out
and
ret
xchg
enter
cmp
dec
jae
or
insb
xchg
add
xchg
ret
insb
cmp
add
push
push
xlat
int3
lret
and
inc
sub
dec
and
cmp
mov
je
inc
adc
pop
inc
shll
ret
xor
jle
and
mov
data16
mov
int3
outsl
jp
jmp
dec
lahf
rcrl
stc
lret
lock
jae
sub
test
loope
fchs
or
jl
aas
xor
and
ss
cmp
mov
jl
lcall
sub
inc
loopne
mov
mov
jle
test
stc
jno
jl
push
add
mov
mov
lods
loopne
loopne
imull
pop
cmc
and
xor
mov
icebp
sbb
xor
or
insl
dec
pop
int
js
ds
nop
or
inc
inc
fmull
push
lods
mov
popa
mov
xchg
adc
push
cli
dec
imul
dec
or
orl
std
push
jg
pop
pop
ret
rcl
xchg
push
xchg
mov
mov
dec
bound
ror
movsb
in
pop
and
and
sahf
imul
mov
mov
aas
or
pop
xchg
popa
in
pop
sbb
or
sbb
adc
pop
mov
push
push
sub
mov
stos
mov
push
and
add
xor
sbb
xor
mov
xor
fisubrs
int
mov
mov
imul
push
call
rcll
mov
jmp
popf
mov
in
mov
hlt
mov
pop
aad
pop
mov
mov
mov
sub
shrl
xor
adc
repz
loopne
pop
fadd
rcr
jo
movb
hlt
xor
inc
negb
stc
stos
movb
adc
jns
xchg
mov
add
repnz
xlat
and
mov
ret
jnp
pop
push
cmpl
mov
sub
outsb
movb
push
sbb
jne
outsl
mov
or
sti
enter
mov
lea
push
pop
sbb
dec
iret
outsl
subb
cmp
jae
lcall
push
outsb
sbb
adc
roll
push
mov
dec
jge
test
jno
and
das
imulb
xchg
es
xor
mov
jmp
jp
lcall
xor
xchg
adc
fcomi
xor
js
push
insb
stos
xor
cmp
mov
insl
cmp
mov
jno
mov
and
in
pop
lret
idivb
push
and
add
fidivrs
push
ds
fcomp
push
cmp
imul
mov
adc
pusha
pop
sarb
lods
fsubrs
in
xchg
cwtl
add
xor
fsubp
cmc
cwtl
pop
imul
adc
ja
xchg
das
xor
call
xlat
push
jne
outsl
scas
sbb
in
sub
pusha
mov
shlb
mov
add
in
xor
adc
in
stos
aaa
into
bound
sbb
jge
sbbb
ljmp
stos
mov
xchg
call
movsl
cmp
sub
dec
outsb
push
xchg
inc
lea
jbe
jp
movsb
scas
cltd
enter
or
sbb
mov
fistl
data16
mov
pop
push
outsl
mov
inc
sbb
inc
or
pop
lret
repz
hlt
jge
mov
and
pushl
jle
cmpsl
jge
cmp
fdivrs
adc
pop
aaa
mov
jb
mov
out
jecxz
jno
cmc
out
and
mov
jbe
or
scas
or
out
push
jle
bound
orb
push
cltd
jge
cli
and
lcall
xor
scas
pop
or
and
rcrl
aam
cmp
andb
xor
ret
adc
test
sub
xchg
sbb
pusha
cmp
sbb
aas
push
dec
push
xchg
xchg
imull
popa
jmp
imul
xorl
push
mov
in
andb
push
arpl
and
in
jge
xchg
shrb
push
ret
nop
aam
jo
xchg
call
push
dec
jns
mov
into
shl
xchg
inc
sbb
and
and
mov
inc
add
and
daa
shrl
cmp
lahf
add
and
pop
std
sub
add
loope
outsl
inc
popf
jg
dec
jb
popf
mov
sbb
lods
mov
cmp
push
nop
or
mov
xchg
loopne
rcrl
sub
outsb
in
stc
jge
js
or
in
mov
test
sahf
cmp
outsb
das
call
and
arpl
in
push
nop
stos
push
test
loopne
lods
pop
mov
mov
out
clc
fdivrl
and
sar
cmp
insb
jo
cmp
dec
cmp
or
data16
lahf
sbb
mov
int3
pop
ss
mov
inc
add
mov
pop
and
pop
cmp
push
test
movzwl
sub
test
gs
lods
icebp
arpl
push
popa
gs
mov
add
into
jg
lds
push
push
fisubrs
mov
and
mulps
test
adcl
dec
sub
or
sub
movsb
jb
sub
pop
mov
mov
imull
or
cwtl
test
xchg
aam
and
shlb
popa
andb
or
sbb
jle
cmp
dec
inc
lock
adc
je
xchg
jne
aad
lahf
dec
push
xor
jmp
lods
and
leave
repz
repz
mov
cs
rorb
mov
mov
into
jmp
push
scas
dec
orb
xor
xchg
push
scas
xor
das
jl
data16
sbb
pushf
pop
lods
popa
mov
cmovp
ss
jno
push
je
dec
pop
and
in
movsl
in
sbbl
push
jge
push
mov
dec
jmp
scas
sbb
into
stos
push
in
jo
push
add
nop
dec
mov
mov
cwtl
hlt
add
testb
xchg
sbb
insb
dec
in
sub
imul
scas
add
mov
mov
jl
js
inc
pop
xchg
testb
icebp
and
in
scas
push
add
pushl
in
arpl
push
mov
shl
add
inc
and
mov
xchg
sbb
sbb
jmp
mov
xor
in
inc
sub
cmp
in
test
inc
arpl
mov
mov
pusha
ja
jg
and
jb
jmp
sbb
lret
es
in
inc
sub
mov
xor
add
adc
push
sahf
dec
lcall
call
pop
fsubs
sti
lods
pop
fsubrl
js
scas
inc
outsl
loope
notb
pop
arpl
imul
out
sbb
xchg
pop
jae
jecxz
cli
push
push
pushf
mov
pop
mov
push
or
dec
jge
test
push
movsl
mov
enter
jl
and
push
pop
es
add
pop
lds
push
adc
aam
leave
jb
in
jno
mov
push
pop
inc
es
lds
imul
xchg
add
scas
bound
outsb
iret
adc
loop
adc
inc
test
in
mov
rorb
pusha
lcall
inc
loopne
lahf
xor
cmp
rcrb
data16
push
or
fnstenv
in
sub
sti
xor
sub
lret
push
ja
movsb
xchg
fwait
jmp
xchg
fisubrl
aam
mov
pop
push
shl
outsl
dec
cmp
or
mov
inc
dec
dec
mov
or
out
scas
mov
sbb
sbb
sbb
lret
repnz
sbb
cs
cvtdq2ps
adc
ljmp
sub
push
mov
push
or
shr
mov
out
jae
fisubrs
cli
push
cltd
icebp
das
mov
idivl
int3
pop
dec
cmp
xchg
sbb
xor
mov
ret
sbb
lcall
dec
xor
sbb
out
stos
sbbl
imul
lock
sar
inc
mov
mov
inc
jmp
push
xor
xlat
and
cli
mov
pop
bnd
stos
jl
dec
outsl
movsb
xchg
mov
adc
jo
ss
xchg
add
pop
iret
sub
xor
jecxz
sbb
dec
dec
or
test
xchg
xor
adc
shl
xchg
xchg
idivb
xor
cli
rolb
lods
jle
jle
add
cmp
out
xchg
pop
or
int
inc
aam
and
out
dec
in
push
jb
pop
pop
fstps
jmp
mov
in
stos
std
xor
cmp
cmp
das
or
mov
mov
jl
rolb
inc
jnp
jl
and
inc
mov
pop
je
sub
in
fdivl
push
xorl
xlat
testb
aaa
rorl
aaa
pop
or
sti
mov
cld
dec
inc
jns
ret
lahf
pop
jl
sahf
scas
int
mov
mov
popa
dec
xchg
mov
xlat
and
xchg
push
ret
add
xlat
sub
or
call
or
xor
lret
je
inc
push
jmp
int
les
movsb
fldenv
jmp
mov
mov
fdivr
imul
adc
sti
ret
cmpsl
mov
mov
jle
stos
mov
mov
stc
xor
jp
rol
xchg
aad
jecxz
cmpsl
mov
jnp
add
jl
inc
sub
mov
addr16
pop
cmpsl
cmpsl
pop
dec
jnp
mov
movsb
loopne
lea
and
loop
dec
push
or
mov
pop
in
stos
mov
xchg
push
sbb
movsl
lret
aad
and
dec
dec
xchg
les
xchg
sbb
repz
dec
pop
adc
testb
insb
std
test
add
arpl
ss
mov
mov
dec
lcall
push
fisubrl
out
sub
ja
shrb
adc
nop
pop
jg
stc
add
dec
ja
mov
mov
aad
xor
adc
mov
inc
sub
dec
cmpsl
loope
jp
aaa
pop
ja
xor
js
xchg
cwtl
loope
pop
ficomps
pop
adc
jecxz
fsub
lock
and
and
movsb
mov
sub
push
or
xchg
ljmp
arpl
mov
inc
gs
xor
mov
sub
inc
loop
out
push
jns
lret
xor
inc
or
cmpsb
or
adc
cmp
out
cmpsl
std
cmp
shrl
cmp
pop
xchg
into
adc
std
and
iret
sub
ret
jg
adc
roll
mov
dec
sbb
adc
dec
iret
loope
add
addr16
pusha
ret
test
je
decb
or
mov
adc
push
rcr
fstps
mov
mov
adc
testl
sbb
rorb
xchg
mov
pop
inc
pop
enter
mov
lret
cmpsl
mov
xchg
mov
cmp
cmpsb
nop
mov
xchg
ret
out
xchg
mov
or
mov
aam
cmp
sbb
daa
and
sbb
pop
les
push
leave
andb
dec
push
inc
inc
add
sbb
cmp
push
out
fildll
xchg
add
jl
movsl
xor
mov
hlt
mov
out
iret
mov
outsb
in
ret
inc
and
mov
popf
mov
fadds
jge
and
xchg
jl
jb
lods
fnsave
mov
lock
xor
je
imul
mov
mov
insb
mov
mov
fsubrs
stc
repz
jno
lods
jne
mov
xchg
or
ret
jb
dec
jg
mov
fcomps
xchg
sub
mov
scas
cwtl
push
mov
imul
dec
sarl
dec
sub
dec
imul
inc
insl
nop
dec
add
or
xchg
insb
rcrb
adc
in
pop
push
subl
mov
jae
jae
ret
inc
in
lret
dec
jmp
or
push
push
fidivrs
sub
pop
xor
clc
xor
test
mov
in
sbb
test
pop
xor
push
sbb
or
dec
mov
in
imul
inc
pop
push
fadd
loope
jg
mov
cwtl
les
in
mov
ljmp
xchg
mov
lcall
aam
mov
jecxz
std
dec
je
js
mov
push
mov
cmp
mov
iret
fnsave
addr16
movsl
popa
daa
mov
lret
iret
push
int
in
aam
dec
sub
push
mov
mov
cs
sbb
sarl
adc
fdiv
loop
test
cmp
mov
int3
repnz
cmp
subb
add
adc
loope
movsb
lcall
push
sub
aas
cmovbe
and
into
adc
add
mov
dec
fisttps
aaa
mov
pop
popa
jl
push
test
push
dec
fs
fs
das
sbb
dec
sub
adc
push
sar
mov
fwait
rcr
mov
je
imul
repnz
add
arpl
adcl
push
clc
jbe
stos
movhps
add
test
out
arpl
imulb
mov
dec
xor
out
pushf
ja
push
orl
pop
imul
mov
sub
inc
ja
mov
in
add
insb
stos
lods
mov
adc
jno
or
lahf
loope
and
sti
out
inc
jle
dec
xchg
neg
cwtl
dec
shrb
outsb
xorl
pop
enter
jg
insl
es
or
arpl
pop
mov
pop
mov
out
int
loope
cmpsb
pop
dec
inc
aaa
scas
adc
add
jg
xchg
movsb
lods
mov
jne
jmp
sbb
fcomps
fwait
ljmp
inc
jmp
stc
sub
ja
adc
iret
jno
das
xchg
sbb
enter
cmp
mov
xchg
mov
std
pop
cmc
jle
scas
lcall
lcall
hlt
pop
lods
sbb
out
insl
mov
rcr
push
aad
cmp
shll
pop
loope
pop
aaa
repnz
push
daa
out
xchg
xchg
cs
mov
insb
cmp
cmp
fdiv
jns
xchg
leave
in
aad
daa
mov
out
jbe
stos
push
sbb
outsb
sbb
cmp
pop
les
cld
adc
insl
add
fwait
nop
dec
fisubrl
ljmp
pop
loope
orl
xor
daa
cwtl
mov
or
xlat
push
dec
bound
popf
loop
jne
stc
xchg
lock
int
js
pop
ret
decl
arpl
or
aam
mov
sub
push
and
fmuls
rolb
out
jnp
jge
push
in
mov
add
sbb
jecxz
xlat
mov
enter
sub
adc
xlat
dec
push
movsb
insl
push
sbb
cmp
les
in
pop
mov
xchg
sbb
xchg
mov
pushf
xchg
ljmp
jmp
clc
pop
pushf
or
dec
cmp
and
pop
leave
loopne
adc
in
add
mov
mov
jle
jecxz
dec
rcrl
fmulp
ret
je
imul
lret
adc
xchg
dec
pusha
pushf
lea
jecxz
rcrb
push
mov
lahf
fstl
dec
mov
pop
mov
incl
xor
and
add
mov
sbb
gs
outsl
xchg
cmp
jo
jno
in
jno
in
or
dec
icebp
addr16
mov
popf
insl
mov
out
sti
aaa
xor
call
or
decl
inc
inc
pop
xchg
mov
popf
push
adc
inc
jo
pop
mov
push
pop
cmpsb
int3
clc
clc
sarl
pop
dec
outsl
daa
pop
or
cld
push
mov
insb
sahf
jp
pop
lods
lds
das
jmp
sti
into
xor
je
fwait
push
mov
mov
inc
mov
in
inc
rolb
insl
and
addr16
seto
iret
mov
sbbl
inc
mov
pop
rclb
pop
jnp
mov
jo
mov
xchg
sbb
cld
add
dec
pop
mov
mov
call
jecxz
add
ficoml
push
mov
mov
xchg
xlat
mov
cmpxchg
shl
mov
jo
rclb
and
lcall
lahf
push
mov
mov
sbb
mov
pop
adc
fcoml
es
jno
insl
mov
add
out
negl
xorb
imul
add
xlat
mov
adc
rclb
testb
insb
dec
mov
in
mov
sbb
lds
fcoms
pop
sub
xchg
cmpsb
std
aaa
push
das
mov
push
pushf
dec
cmp
jl
xlat
cli
jl
sbb
mov
mov
test
mov
xor
lret
inc
cmp
aas
insb
mov
push
push
out
mov
loope
sub
push
fists
aam
dec
ret
xchg
flds
loop
add
nop
imul
and
add
mov
jmp
inc
sbb
push
mov
mov
xchg
inc
inc
fimuls
je
int3
outsl
loope
and
ja
pop
sbb
add
pop
adc
adc
notb
repnz
push
push
mov
divb
push
mov
lcall
cmp
into
clc
pop
adc
add
adc
dec
jae
addr16
fdiv
and
pop
shl
into
fdivl
addb
add
mov
xchg
ss
and
insb
mov
mov
jns
lods
mov
xchg
sub
jae
adc
adc
bound
icebp
decl
in
lock
fmulp
ficoms
push
mov
inc
lahf
pop
cmp
lock
xchg
or
gs
adc
jo
stc
cmp
mov
cwtl
sbb
and
xor
rorb
in
or
xchg
pop
call
int
xor
adc
sub
push
jae
mov
jge
adc
sar
imul
jne
aam
pop
mov
and
in
add
das
mov
add
add
adc
icebp
into
jg
and
cltd
lds
adc
hlt
mov
xor
jbe
dec
out
aad
sub
mov
mov
xchg
notl
mov
lret
xor
sahf
mov
cltd
pop
mov
lods
cmp
push
popa
loopne
fisttpl
lahf
iret
enter
pop
and
add
jo
scas
aad
dec
es
and
xchg
mov
fcmovnu
xor
xchg
pop
adc
mov
adc
push
int
scas
mov
and
ret
pop
aad
aaa
lret
pop
daa
in
pop
js
daa
push
int3
scas
cli
nop
dec
ret
cltd
jp
das
movsb
mov
adc
mov
jb
cmc
pop
fdivrs
sarb
xor
or
mov
cmpsb
cmp
ja
aam
leave
jae
icebp
test
das
gs
test
fcomip
fdivl
mov
inc
rclb
or
ss
mov
lret
in
movsb
jnp
fidivrs
scas
in
ljmp
mov
or
js
push
mov
pop
jle
leave
jmp
jne
daa
jle
cs
scas
es
or
ret
lret
fs
mov
cmc
ds
test
aaa
push
mov
pop
lahf
pop
movsl
xor
call
sbb
mov
sub
aaa
test
jne
arpl
adc
xchg
sbb
mov
loop
sbb
or
sub
popf
test
shld
and
cmp
lds
sbb
and
sub
push
sub
and
and
mov
inc
xchg
imul
clc
notl
push
mov
ret
or
iret
adc
test
into
cmp
rcrb
or
into
xchg
pop
and
fcoms
popa
and
mov
outsb
jl
pop
test
or
mov
pop
mov
cmp
test
or
loopne
imul
cmp
sahf
mov
test
mov
cwtl
pusha
les
sbb
inc
fsubr
in
mov
jb
dec
pusha
xor
xchg
inc
xchg
push
leave
div
test
mov
scas
push
xor
jae
push
bound
mov
pop
jno
popf
mov
imull
aaa
dec
aaa
jne
repz
data16
iret
xor
sbb
and
loopne
pushf
icebp
jno
adc
movsl
and
jle
jg
mov
testl
das
cmp
je
ds
sub
popa
imul
jle
int3
insb
es
xchg
sub
mov
aad
mov
adc
pop
dec
loope
jo
add
sbb
loop
divl
and
in
fiadds
testl
push
lret
sub
pop
mov
fsubp
mov
jne
adc
addb
mov
icebp
jb
loopne
mov
loope
pop
mov
mov
lret
hlt
mov
cld
add
jb
add
std
jo
dec
adc
call
and
push
and
setg
rclb
insb
jge
mov
in
sti
fildll
movsl
ljmp
sbb
clc
std
cli
jp
push
inc
and
inc
and
hlt
insb
add
xor
mov
mov
pop
aaa
pop
add
and
icebp
mov
jge
pop
push
sbb
fcmovb
lret
lret
jle
jae
mov
sub
xor
jbe
xchg
lret
pop
bound
add
push
adc
cmpl
mov
xor
mov
push
cmp
mov
cmpsb
fstps
out
cli
movsb
lds
xor
gs
out
inc
mov
pop
xchg
hlt
fisubrs
and
das
xchg
scas
pop
dec
bound
cmp
jmp
sbb
dec
ljmp
shll
int3
in
shll
adc
daa
outsb
lret
fwait
cltd
push
cwtl
jno
test
aam
xchg
loopne
rolb
jne
lcall
dec
sub
push
sbbl
je
xchg
pop
adc
pop
movsb
mov
push
ja
pop
push
es
xor
clc
jle
mov
cmpsb
dec
insl
add
jp
xchg
lods
int3
es
sbb
mov
pop
sub
mov
mov
fcmovb
and
stos
push
adc
sbb
sarb
iret
jo
dec
cmp
push
xchg
into
add
hlt
cmpsl
outsl
das
push
fdivs
out
icebp
dec
mov
and
sbb
test
fsubrl
in
loopne
mov
jo
lods
movsl
sub
sbb
pop
sub
adc
inc
lock
fadd
jns
xor
inc
mov
jns
fcmovnb
out
repnz
jb
pmaddwd
shr
xor
push
ficoml
dec
mov
cmp
sub
mov
bound
push
inc
mov
out
xchg
xor
cmp
jmp
xchg
xchg
clc
imul
in
sbb
loopne
dec
inc
push
lock
lcall
pop
shrb
insb
in
das
rcl
add
clc
pop
mov
cltd
shrb
fldcw
or
out
movsl
pop
mov
add
mov
dec
mov
insb
scas
dec
scas
add
jg
xor
adc
cmp
push
xchg
cwtl
mov
sub
xchg
pop
iret
inc
in
mov
xor
and
aad
imul
xchg
push
repnz
pop
xor
subl
adc
inc
or
mov
jle
push
xchg
insl
xchg
bound
pop
pop
push
subl
jg
push
gs
pop
add
sub
xor
mov
jp
inc
or
xchg
loop
and
out
nop
out
repz
push
insb
mov
in
enter
or
mov
dec
rcll
xchg
lods
mov
mov
mov
adc
jp
in
mov
stos
add
pop
inc
dec
cmovo
daa
adc
ds
sbb
mov
cmpl
sar
mov
imul
mov
bound
ret
rorb
mov
and
sub
lds
out
and
jle
arpl
cli
dec
xchg
cld
pop
and
add
mov
xchg
bound
das
leave
sub
mov
push
dec
sub
icebp
ja
adc
scas
sub
jecxz
scas
pusha
pop
clc
mov
push
inc
pop
fdivrs
insl
jmp
pop
inc
or
lea
or
mov
lret
xor
mov
or
cwtl
sbb
push
ret
push
xchg
out
lret
imul
adc
sbb
mov
insb
mov
loopne
fists
pop
int3
test
or
xor
pop
rolb
lods
push
jge
inc
push
enter
inc
popf
cwtl
js
es
pop
xchg
lods
xchg
push
cli
xor
fistpll
cs
shrb
sub
xchg
popa
into
nop
mov
test
ljmp
inc
cltd
das
cmp
xchg
pop
ss
pop
les
adc
fisubs
pop
ja
or
or
loope
shll
mov
ror
mov
inc
and
xor
mov
popf
std
sub
jnp
cltd
rcr
aas
ljmp
iret
mov
dec
push
xor
out
pop
xchg
das
add
lret
mov
lods
mov
push
dec
insl
test
testl
bound
clc
mov
mov
mov
dec
les
lahf
negl
mov
clc
aas
lock
jle
dec
pop
idivb
push
fiaddl
cmpsb
clc
ss
push
pop
pop
in
mov
jb
lahf
leave
and
ror
mov
push
sub
jge
stos
rclb
mov
pop
sbb
pushf
adc
or
in
and
push
orb
sub
aas
dec
ljmp
xor
into
jl
mov
lods
or
and
adc
int3
ljmp
out
mov
cmp
add
mov
in
or
out
jnp
add
stos
jp
lea
sahf
lea
outsb
push
les
clc
in
mov
ret
mov
dec
mov
shrb
sub
xchg
cli
aam
mov
repnz
imul
out
lret
imul
cltd
rolb
ss
jecxz
mov
jge
into
loopne
sahf
out
sbb
mov
lods
mov
not
xchg
out
mov
jmp
jmp
adc
pop
ret
cmp
mov
repnz
sbb
and
loope
push
std
in
pop
fs
xchg
sbb
faddl
repz
pop
stos
and
jle
into
adc
daa
data16
jmp
lods
mov
or
bound
aad
les
push
xor
adc
frstor
and
movsb
out
mov
mov
loopne
inc
jle
std
popa
mov
aas
cmpsl
jno
jae
inc
lds
cld
scas
mov
les
ja
sarl
mov
sub
xchg
and
mov
lods
or
pop
and
and
add
andl
cmpsl
xor
add
jl
add
sbb
xchg
cmp
sahf
jbe
data16
mov
mov
cmpsl
inc
mov
mov
cmp
pop
mov
xor
clc
push
adc
ljmp
lret
or
imul
es
outsl
sub
jmp
mov
push
adc
sbb
jecxz
cs
mov
push
xchg
outsb
fcoms
out
stos
push
mov
jge
jecxz
mov
jno
mov
scas
or
in
cs
cmp
lods
jns
add
cs
cmpsl
fbstp
sahf
repnz
arpl
xchg
int
pop
lret
lods
add
cmp
xor
jno
add
mov
mov
adcl
xor
rorb
enter
int
fldl
dec
pop
cmp
js
nop
lret
xchg
sti
mov
setno
dec
push
sti
scas
and
rol
inc
cld
sbb
stos
cmp
or
stc
sbb
in
iret
mov
dec
and
jae
fisubs
ljmp
cltd
xchg
fistpll
adc
insb
lds
outsl
mov
lea
sahf
cli
arpl
sti
cmp
shr
inc
pop
or
scas
adcb
xchg
cs
negb
cli
push
jns
jb
pmulhuw
addr16
push
xchg
sbb
or
adc
sbb
sarl
cwtl
xlat
jg
sbb
mov
scas
mov
lcall
xor
xchg
iret
mov
pop
faddl
lea
xor
mov
in
fwait
adc
xchg
mov
pop
loope
fs
sbb
mov
movsb
xchg
xor
sbb
ret
mov
pop
test
add
adc
shll
flds
aad
sub
push
rep
inc
pop
fiadds
fsubrs
pusha
in
popa
xchg
pop
fistpll
ljmp
push
inc
mov
xchg
ja
push
repnz
push
mov
add
outsb
out
aas
fcmovnu
lahf
cmp
imul
sbb
cld
push
xor
in
pop
mov
hlt
sub
or
pop
cs
scas
dec
sbb
sub
stos
outsl
sti
pop
mov
inc
sbb
les
adcb
daa
pusha
pop
cmp
imul
fcomps
pop
loop
stc
lcall
push
mov
mov
es
inc
push
and
xchg
mov
sarl
pop
xor
leave
pusha
xchg
mov
sbb
rorb
sbb
cmpsl
mov
cmp
inc
iret
xor
mov
lods
inc
out
cmp
in
fwait
or
insb
lds
dec
jg
jg
jp
cmc
insb
mov
int3
lcall
je
or
ret
sbb
adc
xchg
or
jl
into
sbb
mov
mov
cltd
int
pop
xlat
mov
push
sub
call
xchg
loop
or
inc
dec
mulb
lahf
jnp
jo
iret
cwtl
sub
mov
imull
inc
push
not
jle
dec
popf
or
or
sbb
dec
icebp
test
pop
insl
pop
or
and
in
js
rcr
add
jecxz
imulb
pushfw
xchg
ljmp
fiadds
out
imul
pushf
lds
int3
aam
out
sub
sahf
pop
cmp
pop
dec
mov
std
notl
popf
sbbb
lods
les
inc
jecxz
push
aad
shl
and
fcmove
fnstsw
add
pop
mov
jle
jmp
sub
out
fidivs
xchg
fcmove
sarb
inc
jle
pushf
ja
aad
icebp
mov
lods
or
test
addb
add
pop
jnp
push
popa
insl
in
mov
rolb
cmp
addl
mov
roll
inc
lea
or
inc
inc
mov
push
mov
stos
das
sub
and
and
jmp
xor
inc
mov
sbb
cs
ja
xchg
sub
into
pusha
or
mov
push
or
and
inc
loopne
fsubs
inc
or
lcall
gs
outsl
test
sbb
cwtl
or
push
not
jnp
push
lock
gs
jns
sbb
pushf
hlt
adc
mov
jno
je
sub
test
cltd
and
test
imul
loope
arpl
and
movsl
and
adc
jnp
mov
cmpsb
adc
mov
push
repz
adc
inc
rcr
inc
rol
pop
data16
or
lods
cld
std
insl
push
jmp
sbb
sbb
stos
divl
xchg
cltd
fisttpll
xchg
jl
or
ja
arpl
adc
sbb
push
out
rclb
je
dec
mov
mov
insl
adc
fsubrs
dec
arpl
mov
sahf
add
pop
adc
bound
addr16
cmp
inc
cmp
cmp
enter
mov
aam
adc
cwtl
sub
xchg
outsl
pop
lret
cmpsb
sbb
test
sbb
ja
mov
cwtl
sahf
and
push
lret
jae
dec
mov
sub
jne
dec
int3
or
mov
push
adc
mov
mov
lret
jnp
or
shlb
sbb
ret
int3
stos
mov
dec
sub
xor
adc
inc
jmp
xchg
inc
out
lcall
push
sub
lods
cmp
mov
lea
fcmove
inc
xor
jg
mov
mov
call
inc
mov
aaa
mov
fwait
sbb
jge
push
aaa
dec
xor
aam
cmp
or
push
xor
add
aad
or
aaa
cmp
in
lea
mov
ret
test
std
mov
popf
mov
movsl
mov
aas
cmp
and
fdivs
insl
mov
stc
push
xor
push
sarb
dec
imul
mov
push
test
es
and
je
xor
push
or
cli
xchg
mov
add
mov
sub
sub
out
mov
insl
iret
sub
mov
sti
cli
jns
adc
inc
jnp
xor
incb
push
xchg
adcl
ljmp
dec
mov
out
in
in
inc
in
aad
test
and
push
jmp
aam
lods
mov
int
mov
ret
test
push
sti
pop
sub
jno
mov
sbb
sbb
add
inc
repz
add
cli
pop
repnz
stos
or
pop
inc
loopne
push
fmulp
lahf
mov
xchg
mov
xchg
mov
adc
repz
fidivs
jns
jne
sbb
nop
xor
push
pusha
stos
adc
je
testb
lret
rolb
ret
cmc
ret
push
lods
loopne
add
mov
xchg
mov
in
ss
scas
jno
adc
cmp
fbld
bswap
pop
rcrl
mov
jns
jno
sbb
inc
ljmp
add
or
sub
add
xor
dec
push
stos
fdivrs
stc
jb
testb
hlt
jns
leave
xchg
cli
mov
iret
stc
ss
xlat
pusha
data16
jmp
aad
jecxz
sub
and
or
lds
add
int
rcl
daa
popf
jmp
in
jg
dec
adc
jmp
outsl
pop
loop
cmp
and
push
mov
cmp
lcall
xchg
inc
movsb
js
adc
pop
cmp
shl
mov
addl
and
adc
fidivrl
push
sti
adc
xor
add
aaa
ret
sub
push
cs
push
jo
fs
push
and
mov
fisttpll
inc
inc
arpl
rolb
daa
fdivs
imul
pop
outsl
nop
cmp
sar
cmp
mov
addb
popf
jmp
adc
lods
notl
cld
out
and
aam
fcomps
jo
xor
test
ljmp
pop
mov
sub
cwtl
jno
mov
sbb
xchg
inc
mov
std
jmp
shlb
and
call
cmp
push
mov
add
nop
addl
cmpsl
fwait
push
out
rorl
lods
xchg
jo
insb
jb
push
hlt
jge
jmp
repz
test
ljmp
adc
mov
movsl
add
jg
add
lret
mov
mov
jne
adc
mov
sbb
hlt
sbb
lods
repnz
cld
sbb
clc
dec
mov
dec
mov
xchg
lahf
dec
mov
pop
out
dec
fistl
lock
mov
mov
test
or
sbbb
sub
pop
aaa
or
xlat
inc
and
aam
stc
push
gs
mov
mov
push
push
push
repnz
inc
dec
mov
xor
and
jno
push
shlb
push
cmp
mov
outsb
arpl
sbb
cmp
mov
adc
mov
and
add
push
les
sbb
mov
ljmp
jo
lock
mov
nop
xor
jmp
fsubrp
push
jp
cltd
mov
jp
lea
out
call
push
cmp
fcmovne
jecxz
mov
add
or
int3
xchg
orb
mov
outsb
xchg
sbb
in
popf
mov
daa
jmp
cmpb
inc
es
push
jae
call
add
pop
hlt
mov
sub
xor
int3
sti
pop
sbb
jae
lret
cmp
xlat
jp
insb
in
lahf
out
add
cmp
push
push
or
lods
int3
imul
pop
lret
test
mov
jmp
jnp
and
out
sbb
pushf
repnz
sbb
sub
pop
mov
in
clc
cld
fcomip
scas
mov
mov
xor
push
enter
int
push
pop
insl
mov
hlt
or
cmc
cmpsb
stos
push
out
mov
popf
mov
insb
out
icebp
dec
cmc
test
sub
sbb
stc
and
addl
test
dec
adc
dec
repnz
adc
or
movsb
insb
out
jle
out
add
cld
in
mov
scas
and
test
ret
lock
dec
jns
dec
enter
inc
mov
or
lds
pop
shr
rcr
xlat
shr
inc
mov
mov
sub
add
sbb
jns
popl
mov
into
fistl
je
adc
icebp
mov
add
lds
test
outsb
repnz
jl
in
dec
ljmp
loop
jle
jmp
es
sbb
push
or
outsl
inc
mov
xchg
jnp
inc
xor
dec
add
or
addr16
inc
push
mov
jge
jo
xchg
jbe
sbb
jo
inc
out
xor
es
popa
jge
js
orl
jae
push
dec
xor
int3
xor
pop
mov
mov
mov
jnp
lods
xor
xor
jne
mov
mov
adc
sub
sub
mov
in
gs
or
jp
pop
je
bound
adc
leave
mov
cmp
sub
inc
jp
scas
jnp
call
xor
popf
or
xchg
ss
stc
adc
popa
lock
adc
cmp
leave
scas
push
push
mov
movsl
lahf
adc
dec
inc
pusha
mov
sti
fwait
push
inc
int
cmp
lods
outsl
lock
cmp
mov
and
int
cmp
fidivs
vpmullw
je
insb
sub
push
fistpll
pop
push
lret
and
push
and
fiaddl
nop
cmc
outsl
pop
cmp
rcrb
xor
fbstp
ret
popa
mov
mov
dec
cs
int
scas
push
leave
xchg
dec
and
int3
cmp
stc
sub
xlat
dec
adc
sub
inc
pusha
dec
mov
or
lahf
popf
cmp
mov
jl
nop
out
aas
sub
push
in
push
out
aaa
xlat
andl
aas
mov
clc
insb
xchg
or
jmp
or
arpl
test
push
mov
std
std
jne
pop
sub
imul
pop
mov
jno
leave
xchg
int3
push
mov
ret
daa
push
movsb
cmp
cmpsb
xchg
std
daa
mov
mov
loope
push
je
inc
dec
sub
xor
xchg
inc
dec
inc
adcb
adc
cmpsb
add
lret
outsb
inc
xlat
cmpsb
jmp
jae
outsb
pop
and
lock
les
pop
and
lahf
fs
notb
mov
jle
add
jle
int
push
jge
adc
loop
or
adc
cwtl
mov
and
insl
subb
adc
jbe
or
rorl
mov
cs
mov
ss
ja
sub
inc
dec
or
xor
dec
fucomi
xor
xchg
in
xchg
imul
sub
pop
lods
mov
push
jo
stc
lcall
push
fstpl
jnp
mov
cmpb
das
and
adc
incl
mov
mov
lret
rorb
stos
pop
inc
or
shrb
sub
mov
fstps
inc
fcoms
es
es
aam
rorb
iret
jae
sub
sbb
push
pop
sti
mov
inc
ds
adc
mov
mov
push
adc
sub
add
rolb
jno
das
mov
mov
out
lea
shlb
jnp
mov
addr16
fimuls
push
jns
and
push
xlat
xor
push
test
shll
jmp
lahf
leave
mov
pop
dec
mov
mov
in
fistps
or
add
dec
icebp
iret
fdivrs
ja
clc
add
addb
cmp
pop
insl
fisttpl
pop
ficomps
hlt
lods
cli
stos
xor
in
sub
lcall
add
addb
rcrb
xchg
sahf
dec
outsb
jmp
inc
or
adc
add
sub
arpl
adc
fldenv
insl
jg
lahf
or
push
sbb
scas
jle
jecxz
xlat
inc
in
pop
jl
int3
pop
mov
popa
movsl
pop
sahf
ret
adc
stc
or
fistpl
cwtl
dec
ret
pusha
sub
inc
xchg
ficoms
ret
mov
shlb
xchg
jae
cmpsl
pushf
cltd
add
cld
imul
addr16
mov
stos
cltd
push
pushf
mov
cs
jb
cmp
shl
mov
mov
jne
bswap
test
jp
push
sahf
mov
sbb
mov
add
loopne
jbe
push
nop
dec
cmpsb
fsts
mov
data16
sbb
mov
fsubrs
sbb
pop
repz
push
popf
enter
or
cmpsl
outsb
xchg
mov
mov
pop
orl
push
jns
fadds
shr
inc
cmpsb
nop
test
lock
cmp
aaa
mov
pushf
jl
mov
mov
dec
inc
push
xchg
sub
xchg
adc
push
rclb
lock
iret
fsubr
inc
jmp
das
inc
and
push
mov
ficomps
movsl
sarb
sub
pop
push
mov
xchg
cmp
aaa
cmp
xchg
repz
cld
inc
and
push
outsb
xchg
and
fsubr
xchg
xchg
mov
jmp
and
adc
inc
or
mov
int3
shr
add
xchg
sub
flds
dec
subl
jecxz
add
inc
jbe
insl
outsb
mov
cli
xchg
mov
mov
add
orb
dec
repnz
rol
sti
in
imul
aaa
test
pushf
sbb
lods
cmp
inc
and
mov
jmp
inc
insl
mov
xor
into
mov
and
lods
aas
aad
fimuls
clc
enter
fcmovbe
cmp
mov
xchg
inc
sti
out
icebp
xchg
out
pusha
dec
xchg
mov
pop
loopne
in
fistl
mov
fwait
cmc
cmp
fwait
lock
sub
lret
inc
mov
xchg
sbb
pop
pop
inc
xchg
out
aad
ret
scas
outsb
fisubrl
stc
push
into
test
shl
mov
pop
push
xlat
mulb
movsl
pusha
add
mov
xor
mov
test
jmp
jle
fyl2xp1
lods
mov
ret
adc
mov
jnp
out
add
lds
sbb
insb
lcall
push
cmp
pop
or
xchg
xchg
cwtl
push
pop
xchg
sub
test
fs
mov
dec
into
pusha
iret
add
push
push
inc
ror
xchg
push
xor
in
lods
sbb
fdivrl
xlat
lock
jns
das
fsubl
push
push
movsl
cmpsb
xor
jbe
fimull
ret
aas
jnp
movl
pop
jl
ljmp
leave
out
add
movsb
dec
in
ja
or
xor
xor
fucomi
mov
cmpsl
cmpsl
or
add
sbb
xchg
pop
ljmp
movb
dec
out
jecxz
cltd
orl
mov
dec
cmc
ja
insb
dec
mov
lcall
xchg
fs
xor
xchg
pop
in
stc
jb
pop
sub
or
pop
sub
imul
and
mov
out
inc
popa
in
pop
inc
add
xchg
imul
call
mov
mov
push
and
leave
mov
xor
jbe
lods
inc
das
xchg
jnp
repnz
mov
lret
mov
in
jb
mov
jg
and
je
mov
add
loop
pop
xchg
js
mov
in
mov
int
mov
inc
mov
pushf
ljmp
insl
mov
dec
out
mov
dec
or
sbb
clc
lods
xchg
push
adc
cmp
xor
cmp
mov
stc
dec
dec
sbb
js
ss
sub
adc
sub
loope
xchg
and
out
sub
inc
sete
xchg
dec
insb
xchg
adc
adc
shll
lods
imul
adc
loop
push
adc
dec
movsl
and
cwtl
ss
push
mov
jbe
xchg
lods
xor
jecxz
inc
enter
inc
cmpsb
jg
adc
adc
mov
xchg
repnz
and
int
push
scas
in
shll
xchg
inc
lods
rcl
and
pusha
sub
fwait
cmp
xor
lea
push
out
ja
out
mov
out
add
push
pop
add
xchg
hlt
lret
xchg
outsl
outsl
xor
mov
sbb
push
cmp
aam
mulb
shl
test
cmpsb
les
and
shrl
lods
or
mov
cmp
sbb
outsb
imul
pop
repz
jge
cmpl
faddl
add
dec
add
push
lret
xor
mov
pop
repnz
nop
js
push
sub
inc
js
dec
mov
ds
dec
test
sbb
push
sbb
mov
fwait
not
mov
or
dec
leave
mov
push
jmp
push
in
xchg
add
and
shr
and
sub
push
ljmp
push
fs
dec
dec
and
outsl
xor
mov
pop
jle
lds
xchg
push
lods
insl
jbe
lea
dec
dec
das
and
in
cltd
add
js,pt
mov
aas
fsubs
into
aam
mov
xchg
sub
sbb
daa
and
xchg
fwait
imul
ds
push
jo
mov
inc
mov
push
pop
jmp
inc
pop
inc
addr16
inc
mov
int
fstl
xchg
cmc
dec
jne
addr16
sti
inc
pop
sbb
sbb
cs
ds
sbb
or
outsl
adc
dec
add
or
xchg
xlat
pop
mov
jl
jns
repnz
in
test
adc
push
test
ds
adc
pop
insb
hlt
aad
pop
lods
mov
in
jl
inc
or
mov
jb
sahf
dec
cmp
lods
mov
scas
inc
ficompl
pop
dec
lahf
pop
push
aas
shlb
mov
mov
xor
pop
adc
cmp
dec
or
adc
jmp
dec
cli
lock
and
sbb
aam
loop
inc
fs
cmpsl
pop
sbb
jge
push
dec
mov
and
and
jb
jge
cmpsb
fldcw
into
je
lods
sti
das
call
cltd
iret
sub
xor
pop
imul
pushf
shlb
mov
push
leave
mov
adc
mov
add
mov
lret
fs
clc
jmp
ffree
push
and
shlb
lcall
fsubrl
pop
xchg
movsb
les
rcrb
les
push
add
out
mov
ja
out
fwait
jb
iret
or
inc
cmp
mov
mov
xor
inc
mov
push
adc
ret
jecxz
xlat
movsb
mov
sbb
sbb
data16
add
jnp
add
jbe
adc
fs
push
jbe
les
jnp
or
cltd
cli
push
and
movsb
push
cs
or
sti
fisttps
sahf
sub
int3
fdivrl
mov
mull
push
adc
xor
cmp
xchg
pop
loopne
push
jmp
xor
or
mov
decl
lcall
imul
pop
push
jle
push
mov
test
lcall
test
rclb
mov
leave
stos
jmp
fwait
jl
nop
cmp
jb
pop
leave
cmpl
scas
dec
fbld
out
ja
lret
insb
jecxz
mov
inc
cmpsb
lret
iret
pop
and
push
jb
cmpl
xchg
xchg
jns
dec
cmp
pop
fidivrl
cltd
mov
sbb
stos
lods
mov
jmp
jne
aas
mov
jle
fwait
xor
adc
ret
mov
fbld
mov
fisubrl
mov
outsb
push
push
pop
sar
inc
into
jae
push
negb
xchg
lock
pop
adc
mov
shl
mov
je
fistps
or
mulb
mov
sbb
ljmp
jle
inc
push
jecxz
hlt
dec
scas
and
mov
lret
clc
xchg
es
icebp
or
mov
sbb
pop
and
fs
lods
in
sub
pmaddwd
inc
cmp
call
mov
bts
mov
adc
xor
sbb
icebp
sbb
or
dec
add
int3
stos
xor
push
scas
jo
outsl
xchg
jns
adc
or
test
inc
xor
sbb
inc
fsubrl
cmp
lods
or
add
mov
pop
xlat
pop
cmp
sbb
and
and
scas
les
mov
mov
stos
cmp
push
mov
jnp
mov
sbb
push
push
adcb
mov
jo
push
dec
arpl
xchg
xor
int
dec
jae
addb
je
push
lret
and
pop
sub
jo
fmuls
pop
cmp
pop
rcr
pop
popa
push
xlat
mov
xchg
mov
lahf
jg
mov
call
mov
sarl
dec
hlt
mov
imul
fwait
stc
mov
and
cvtdq2ps
add
cmp
subb
sbb
cs
jge
sub
lcall
mov
jg
inc
ljmp
cmp
xor
adc
mov
subl
mov
inc
fxch
add
int3
pop
andb
js
lock
cli
jle
pusha
adc
lahf
sub
sti
shll
cmp
sbb
repnz
daa
icebp
push
fbstp
lods
add
and
xor
sti
adc
add
aad
repnz
inc
mov
dec
cmc
adc
or
inc
mov
push
cmp
repnz
cmp
inc
test
add
popf
jp
inc
dec
inc
nop
xor
out
sahf
imul
and
dec
ja
stos
adc
xchg
push
in
iret
xor
dec
sub
xor
cli
fstl
imul
sub
aas
popa
arpl
sbb
inc
add
jb
fimull
ffreep
xor
or
sub
mov
mov
mov
add
fistl
mov
xor
jnp
ljmp
push
loopne
lcall
adc
dec
cmp
stos
repnz
loope
xchg
pop
cmp
jle
mov
mov
push
pop
xor
cmpsl
jg
arpl
push
mov
sarl
adc
and
dec
jno
mov
lahf
xor
mov
bound
push
test
lret
cmpsb
int3
out
xor
in
ret
das
pop
lock
or
ficoml
into
jno
jbe
mov
cmp
or
aas
push
popa
ret
lods
mov
and
and
jle
jne
jmp
and
imul
push
sub
pop
inc
jg
fwait
sub
inc
add
adc
jle
js
push
adc
jb
add
adc
out
mov
scas
xchg
cmp
xor
or
inc
or
inc
lea
in
ret
sbb
mov
fs
in
les
mov
cmp
loop
jl
outsb
out
pushf
rcll
lds
jbe
call
mov
push
xchg
sub
mov
nop
mov
repnz
jae
lods
pminsw
adcb
in
int
aam
in
sub
fidivl
sti
fcoms
or
dec
mov
sbb
divl
push
fndisi(8087
lcall
adc
pop
add
mov
jp
inc
scas
adc
or
add
lods
mov
lds
jae
jnp
add
mov
mov
xor
jb
fnstcw
gs
mov
ret
loop
mov
out
fadd
movsl
sbb
test
jbe
lcall
adc
cmpsb
mov
xor
bound
or
mov
add
subl
idiv
cmc
inc
sar
popf
sub
iret
cmp
push
pop
sub
pop
jbe
inc
scas
stc
loopne
jmp
outsl
mov
popa
ss
mov
sub
cmp
push
mov
lcall
xchg
je
xchg
in
popf
rorl
mov
adc
push
into
push
dec
jne
stc
bnd
lahf
in
inc
aas
shr
sub
gs
pop
fisttpl
dec
dec
data16
adc
ficomps
mov
pop
push
xor
mov
mov
mov
loope
jo
cmp
or
lcall
fisubrs
xchg
gs
sti
js
ficoms
ja
ss
lret
lea
add
rol
dec
lods
mov
jb
or
inc
xchg
adc
loop
sbb
rorb
xorl
js
add
pop
fsub
dec
push
movsl
rol
xor
or
outsl
xor
inc
into
or
imul
add
mov
popa
dec
mov
lods
adc
ror
repz
call
rcl
add
push
lahf
mov
jmp
inc
inc
xor
sub
dec
out
imul
jmp
xor
scas
sbb
std
push
sbb
in
popf
add
pop
and
scas
rcrb
pop
dec
scas
aam
jae
sbb
cmp
add
mov
and
test
rcr
and
rorl
mov
out
inc
inc
xchg
dec
push
call
aam
pop
pop
ljmp
sbb
push
lahf
outsl
xor
push
das
cmp
and
loopne
std
mov
addb
or
dec
pop
rol
fimull
and
mov
xor
imul
adc
and
sbb
test
pop
pop
repz
lock
xchg
cmp
mov
xor
fdivl
add
jecxz
and
push
movsb
mov
sub
addb
pop
mov
in
xor
jmp
xchg
mul
xor
or
pop
aas
inc
in
dec
adc
dec
push
sbb
movsb
lods
push
cmpsb
aad
add
out
or
out
in
repnz
enter
xor
sbb
in
add
inc
mov
adc
subb
adc
ret
out
aas
pop
mov
rcl
cmp
loop
dec
jb
out
jns
pop
imul
jns
sbb
dec
movsl
cmp
push
cmpl
repnz
bound
jge
inc
rolb
dec
aaa
lret
mov
outsl
adcl
icebp
repz
jmp
loope
xlat
mov
leave
fmuls
pop
push
icebp
push
icebp
out
add
or
pop
popf
das
mov
cmp
sub
jnp
push
shlb
push
jbe
je
inc
sti
dec
sbb
dec
into
mov
sbbb
ljmp
movsl
push
push
das
cmpsb
or
add
sub
mov
xchg
scas
les
mov
nop
insb
xlat
mov
movsb
lret
xor
xor
and
xor
movsl
cmp
lret
cmp
add
popa
pusha
andb
push
movsl
ja
push
push
mov
xchg
mov
das
ss
dec
mov
repz
loopne
and
out
or
fsub
nop
nop
sbbb
fiaddl
xor
pusha
incl
hlt
xchg
out
popf
mov
loopne
loopne
jno
jns
xorl
shl
add
stc
js
or
mov
jge
sahf
xchg
push
int
and
pusha
mov
stos
push
mov
sub
sub
sbb
push
enter
pop
push
xchg
jp
sbb
xchg
push
push
test
pop
shrb
dec
jo
dec
xor
mov
jl
add
in
and
in
andb
push
pop
xchg
adc
scas
jb
push
lret
repnz
mov
repz
cltd
imul
dec
or
jg
xchg
leave
sbb
and
inc
cmc
dec
cmp
fwait
pop
hlt
cli
inc
and
movsl
dec
inc
xor
cli
ljmp
ficompl
add
test
xor
orl
adc
sub
aad
enter
rolb
movsl
ret
mov
cli
add
cmp
sub
ljmp
out
aad
fmuls
sub
rorb
pop
pushf
pop
fcomps
cmpsl
push
xor
stos
stos
add
mov
repnz
inc
aad
fisubs
sub
cmpsl
pop
fs
out
nop
push
mov
ds
cs
xchg
js
test
ja
inc
repz
sbb
sub
mov
jl
mov
dec
push
aam
call
mov
addr16
mov
rorb
push
aaa
int
test
fisubrl
fcmovu
xor
jnp
out
xchg
loope
add
pop
pop
fbld
scas
test
dec
and
xchg
mov
mov
xchg
out
lret
inc
jmp
dec
lods
jg
or
orl
cmp
aaa
mov
mov
imul
fidivl
movsl
jl
out
aam
aad
cli
in
ret
pushf
adc
into
mov
rolb
sbb
out
mov
aam
repnz
imul
mov
sarl
xchg
dec
sub
enter
lret
fsubr
lret
and
lods
pop
movsl
sub
jns
sbb
inc
sbb
rcll
add
pusha
fsubrs
mov
jnp
push
sub
adc
je
popf
mov
mov
mov
daa
cmp
xor
jb
adc
and
add
dec
mov
add
push
mov
xchg
mov
out
mov
icebp
fs
pop
xor
inc
mov
mov
jg
inc
movsb
dec
sbb
incl
cwtl
pusha
pop
push
lods
mov
test
loop
mov
scas
std
mov
mov
xchg
loop
xlat
xor
pop
bound
enter
mov
push
lods
ja
push
inc
push
out
jno
movsl
fsts
add
mov
adc
cmp
cld
sarb
loope
cld
inc
pusha
les
fisubs
jbe
out
stc
jge
and
adc
dec
mov
jb
icebp
jg
pop
addr16
mov
int3
mov
ja
in
add
pushf
outsb
stos
outsl
inc
inc
add
fnstenv
jae
push
sarb
and
pushf
cltd
outsl
dec
iret
xor
out
cmpsb
insb
fstl
mov
cs
xor
movsl
mov
dec
adc
mov
or
andl
fisttps
aam
out
inc
sbb
and
and
imull
aam
mov
sub
push
dec
mov
popa
push
lcall
mov
jmp
pusha
push
stos
xor
repnz
pusha
ljmp
inc
es
lret
xchg
hlt
dec
fisttpl
or
sarw
mov
jns
sarb
mov
bound
int3
sub
push
jne
in
mull
imul
fidivs
in
jno
sub
subl
mov
fisttps
ret
sbb
nop
pusha
mov
test
or
mov
cmc
dec
cmp
xchg
adc
gs
mov
xor
cs
cmp
iret
jnp
mov
pop
cmp
dec
push
shlb
dec
pop
mov
xor
aaa
push
pop
dec
ja
fwait
dec
int
aas
xchg
adc
in
inc
in
mov
mov
cli
sbb
lock
ds
mov
sub
push
lcall
jne
jne
xchg
or
lock
dec
add
rclb
mov
mov
adc
inc
or
pop
inc
jb
inc
mov
aad
jnp
mov
mov
cmp
jmp
mov
or
adc
dec
cli
add
sti
dec
dec
adc
adc
dec
cmc
push
adc
push
test
fst
pop
fistpll
call
icebp
or
dec
add
data16
jmp
out
dec
adc
inc
sbb
test
in
sbb
sub
je
lods
ljmp
notb
push
mov
gs
mov
inc
fdivl
pop
pop
fucom
orl
mov
aam
sub
ficoml
jg
mov
dec
adc
push
ret
std
rcll
mov
aas
es
out
negl
jb
loope
cmp
pushf
pop
je
cmc
movsl
pushf
mov
out
dec
shll
mov
pushf
xor
lea
jecxz
mov
mov
dec
sbbl
mov
sbbl
shll
xor
mov
mov
das
pop
stc
in
pop
sbb
loop
jmp
mov
jns
gs
pop
pusha
xor
out
movsb
or
jge
addr16
sahf
sbb
scas
xor
xor
sub
stos
and
cmp
insb
inc
repnz
dec
ret
sbbl
into
outsb
movsl
push
pop
fisubrs
call
xchg
pushl
sub
cmp
lock
fwait
mov
cmpb
sub
fwait
or
mov
inc
inc
xlat
jg
and
cmp
or
ljmp
cmp
pop
mov
mov
jl
int
inc
fldcw
ds
hlt
xchg
je
add
add
sbb
push
shlb
shll
notb
or
dec
leave
icebp
subb
sahf
inc
sbb
xchg
aaa
jp
pop
imull
mov
loope
pop
mov
arpl
mov
fbstp
paddb
push
xor
arpl
pop
inc
and
push
jge
adc
popa
cmpsl
arpl
inc
inc
cmc
rcl
repnz
imul
sti
lock
sahf
sbb
fldenv
sti
sahf
cmp
jmp
inc
add
mov
pop
xor
and
fsub
pmaddwd
mov
test
xor
rcrb
sbb
lret
sub
inc
inc
fucom
lcall
xchg
pop
dec
dec
movsl
and
addl
rol
or
sbb
jb
dec
fsubrs
mov
call
aam
scas
jmp
pop
sub
add
daa
and
scas
sahf
fsubl
add
adc
daa
sbb
xchg
inc
xor
mov
jo
enter
mov
xchg
jg
out
xchg
xchg
sub
xchg
dec
jg
add
sahf
loope
sub
pop
sbb
mov
cmp
jge
jp
adc
lret
idiv
mov
pop
jno
fstps
movb
lahf
test
ljmp
push
dec
pop
imul
scas
push
jbe
call
jecxz
jb
mov
movsl
clc
and
push
inc
aaa
mov
and
pop
jg
cmp
dec
cmpsb
adc
test
mov
mov
stos
sbb
outsl
dec
add
mov
dec
cs
insl
adc
pop
fdivrs
loopne
mov
xchg
loopne
ds
sbb
rclb
sub
mov
mov
orb
pop
dec
rcr
mov
cmpl
rcr
pop
push
test
mov
test
sbb
lods
bound
add
xlat
aam
std
lret
push
xor
or
test
ret
or
fnstcw
psubq
popa
adc
jge
ret
mov
test
xor
pop
adc
jle
lret
mov
dec
outsb
dec
cmp
mov
jg
movsl
mov
imul
into
and
ret
mov
test
addb
mov
sbb
xchg
pop
lds
pop
mov
sbb
mov
jns
mov
inc
inc
lods
repz
pop
jle
rcl
inc
leave
inc
hlt
sbb
mov
cmp
jg
sti
and
imul
lock
into
scas
icebp
cs
scas
add
inc
adc
adc
sub
xor
ds
dec
mov
inc
sbb
icebp
mov
dec
cs
outsb
fcoml
bound
mov
xor
imul
bound
cld
mov
xlat
stos
cmpsb
sbb
adc
cmc
xor
or
jecxz
ja
push
xchg
jne
aad
sbb
and
cmp
cmc
popf
test
pop
aaa
jnp
movsb
in
mov
jbe
aam
mov
dec
add
fdivr
cmc
or
lock
add
rolb
jecxz
cmp
xchg
hlt
xor
mov
pop
push
popa
adc
in
pop
and
cmp
insb
sbb
push
sbb
fidivs
cmpsl
imul
inc
mov
subl
pop
mov
popf
xchg
mov
arpl
aaa
mov
cwtl
out
pop
cmpsb
xchg
out
xor
jae
xor
xlat
jbe
push
inc
dec
jns
sbb
sub
xor
lds
sub
loope
mov
js
shrl
icebp
pop
lret
mov
push
add
pop
xor
or
inc
scas
pop
dec
cmpsb
push
loop
mov
mov
dec
pop
push
mov
sub
mov
add
jge
inc
fs
and
imul
fcompl
mov
pushf
rolb
mov
jno
scas
mov
sbb
addr16
cmpsb
jne
mov
adc
add
mov
lods
aas
jp
xlat
pop
mov
aad
adc
pusha
xchg
mov
sbb
or
scas
pop
stos
xchg
imul
inc
in
mov
faddl
mov
fldl2t
test
movsb
sbb
push
sub
push
adc
clc
bound
adc
insl
inc
push
pop
mov
cmpsl
stos
mov
and
lock
xor
adc
aad
in
rorl
jl
cmp
mov
xorb
in
cli
cmp
xor
testb
mov
aam
add
mov
or
push
insl
int3
outsl
ja
in
int3
scas
int3
in
cld
jo
arpl
add
cmpsl
stc
dec
addl
in
pusha
gs
lret
inc
sub
or
lds
xor
pushf
dec
test
movsl
pusha
movsl
xor
aam
iret
xor
iret
adc
or
adc
ljmp
inc
mov
pusha
xchg
jno
mov
unpcklps
cmc
cs
test
pop
mov
fisubrs
adc
push
sarb
or
dec
inc
cmp
cmpsb
adc
imul
push
dec
push
ljmp
mov
sbbl
dec
jns
sub
add
scas
in
xchg
xchg
ret
imul
add
and
out
jg
mov
adc
shr
in
dec
xchg
xchg
mov
dec
call
cld
leave
pop
mov
mov
mov
sbb
mov
pusha
jp
lret
ret
push
xor
clc
mov
in
mov
mov
mov
mov
mov
cld
stos
test
xchg
lods
add
or
xchg
stos
cltd
in
mov
cwtl
mov
inc
sti
lret
test
iret
iret
rcll
adc
ficompl
xchg
push
cmp
rol
jp
push
cmp
dec
ds
dec
pop
in
add
out
adc
rorl
in
popa
fldl
sub
xchg
adc
insb
shl
or
jno
dec
repz
pop
jns
push
jae
adc
add
pop
shll
jmp
xchg
jno
mov
test
pushf
add
or
jb
push
popf
aad
imul
and
mov
and
faddl
cmp
and
loop
inc
xchg
stc
bnd
cmp
mov
push
loopne
and
pusha
lahf
std
gs
out
repnz
and
scas
adc
aaa
mov
imul
aas
cmc
push
push
es
inc
imul
xchg
ret
aam
sub
out
pop
cwtl
add
leave
mov
int3
daa
lds
dec
pop
inc
mov
mov
or
jnp
testl
jmp
push
mov
in
or
pop
in
in
ret
les
xchg
add
fwait
leave
hlt
push
mov
xchg
jne
out
mov
xor
lods
xor
mov
or
mov
ds
push
sbb
cmp
inc
lea
enter
or
cmp
pop
inc
test
mov
cmp
sbb
iret
fs
push
lret
sbb
mov
and
mov
cwtl
add
lods
jae
stos
insl
in
insl
popf
leave
mov
cmp
fidivrs
pop
dec
or
test
insl
out
sub
test
xchg
fisttpl
fstps
cmpsl
mov
xchg
test
lcall
imulb
jp
push
outsl
pop
and
in
ret
jnp
popa
mov
cli
pop
pop
inc
pop
addr16
push
popa
xor
mov
mov
cmp
push
pop
aas
push
sbb
or
push
add
pushf
lret
int
push
and
adc
pop
xchg
adc
mov
imul
add
loope
add
mov
cli
inc
out
dec
mov
outsl
nop
or
jl
shl
shll
fisttpll
sbb
push
mov
add
cmp
sahf
or
dec
inc
push
pop
popa
inc
jo
add
dec
addr16
xchg
mov
pop
divl
xor
out
adc
jl
push
pop
pusha
repz
stos
std
hlt
xor
sbb
lcall
sub
sbb
out
xor
mov
jmp
fmul
ret
daa
cmpsl
cli
cltd
or
lret
test
iret
sub
adc
mov
fisttpl
mov
sub
js
in
out
sahf
sub
popf
jae
pop
xchg
mov
cmp
xorb
push
add
add
sahf
hlt
ja
in
inc
insb
xchg
out
insl
les
loopne
inc
and
xor
add
call
mov
mov
dec
sar
outsl
out
bnd
pop
sbbl
clc
outsl
daa
sub
jmp
daa
nop
out
popf
cltd
lahf
sarb
cmp
mov
cmpsb
jne
in
sub
js
inc
cmp
leave
scas
adcb
xchg
ss
dec
push
and
lea
cmp
xchg
jle,pt
das
ret
fwait
dec
inc
dec
push
test
mov
mov
enter
fbld
sbb
dec
mov
hlt
add
cmp
es
sbb
pop
insl
popa
xchg
jne
pop
dec
lock
mov
xchg
push
icebp
cmp
les
mov
pop
and
dec
das
dec
push
xlat
cmp
adc
jbe
and
sub
xor
pushf
repz
xor
loop
mov
or
mov
dec
subl
jge
xor
and
fs
cld
dec
arpl
sub
xchg
in
das
jl
push
mov
cmp
push
int
ja
push
in
inc
sub
enter
les
add
dec
inc
mov
xor
fsubrs
lcall
je
or
lcall
push
mov
dec
lock
jle
adc
stos
cmpsb
xchg
fldz
loopne
mov
lods
loopne
insl
sarb
xor
inc
ud0
ja
jle
repnz
aas
sub
xor
incl
and
xchg
lods
and
add
loope
pop
mov
aaa
test
sbb
ret
cwtl
lds
dec
rcl
enter
enter
imul
add
fcmove
sub
pop
repnz
push
inc
lret
sti
jns
dec
pusha
inc
sub
idivb
rorl
loopne
movsl
loop
mov
shrb
fisubrs
pop
push
fsubl
pop
movsb
and
and
imul
call
and
xchg
push
sbb
xchg
cmc
sub
jecxz
pop
cmp
mov
das
cmpsb
mov
add
into
sub
dec
andb
sbb
stc
and
clc
xchg
or
bound
push
cwtl
jmp
fnstcw
dec
dec
ret
test
dec
shrl
rcll
les
rol
add
ja
or
adc
pop
lods
mov
shr
rorl
gs
aad
int3
cli
nop
outsl
add
cmp
add
adc
adc
sbb
cmp
out
test
mov
scas
lahf
sbb
mov
xchg
inc
notrack
cld
fidivrl
push
or
mull
mov
mov
push
std
pop
jns
add
inc
adc
movsb
loop
mov
scas
sub
mov
push
aam
popf
push
dec
test
or
je
dec
dec
or
aam
or
inc
icebp
outsb
test
push
shll
orb
lret
jge
leave
es
inc
lds
ljmp
ret
mov
dec
xchg
mov
mov
xchg
xchg
mov
xchg
jmp
sub
lea
mov
into
imul
shll
pushf
mov
sub
xor
push
cmp
adc
paddq
jg
sbb
rcll
adc
cmc
leave
test
pop
mov
push
dec
ret
adc
shlb
mov
andb
shlb
gs
sub
rcr
jmp
pop
sub
xor
cmp
sar
js
scas
mov
fcmovnbe
xchg
in
sahf
cmp
dec
cmc
aaa
cwtl
xor
xor
jb
daa
xchg
cmp
pop
sbb
fisubl
xor
mov
pop
rolb
or
pusha
mov
pop
mov
inc
cltd
int3
pop
idivl
jns
mov
ljmp
mov
xor
imul
lret
push
cmp
xchg
ret
cmp
sbb
pusha
sub
sub
push
dec
cmp
xchg
aam
sub
mov
lock
mov
mov
push
mov
adc
loopne
adc
aaa
xchg
nop
out
sub
cmp
pop
scas
cltd
mov
add
stc
push
push
test
call
pop
test
push
mov
dec
xchg
out
push
jns
jmp
jo
adc
mov
test
ss
jno
or
or
pop
adc
mov
les
cmp
lea
mov
sub
arpl
push
mov
mov
or
int
test
pop
mov
and
push
andb
mov
dec
andl
rcrb
out
notl
add
xor
push
into
fldcw
movsb
inc
mov
push
push
push
cwtl
mov
mov
pop
xchg
sarb
jge
mov
divl
and
test
sub
push
int3
out
addr16
adc
push
aaa
jbe
inc
fcomi
or
jo
sub
and
xlat
js
std
lret
xorl
mov
insb
rcrb
xor
sti
push
push
test
dec
ja
jp
dec
push
ljmp
push
out
aas
pop
aaa
add
loope
adc
aad
xor
adc
outsb
xchg
lock
pusha
sub
cwtl
push
inc
rcl
ret
push
fiaddl
or
inc
push
repnz
mov
xchg
movsb
inc
dec
or
addr16
fdivrl
fbstp
pop
xchg
dec
sbb
cmp
pop
repz
in
xchg
mov
outsb
jo
mov
stos
mov
imul
push
push
std
sub
and
mov
jb
mov
out
xchg
cmc
in
popf
dec
daa
out
pop
push
xchg
sbbl
sarb
mov
ret
test
jecxz
jne
ja
sbb
and
scas
fisttpll
jl
jne
insl
xchg
mov
mov
xor
xchg
les
mov
pcmpeqb
or
rolb
outsl
scas
jne
sub
inc
xchg
push
jns
gs
push
mov
fistpll
fimuls
dec
lcall
adc
xchg
inc
mov
icebp
nop
cli
dec
iret
movsl
mov
sub
xor
xchg
lock
addr16
pop
adc
flds
lret
push
pop
pop
jle
mov
adc
adc
sub
push
daa
leave
jle
pop
stos
gs
scas
popa
gs
inc
mov
push
call
dec
jae
ret
mov
clc
mov
and
aas
jp
mov
dec
sub
int3
in
inc
add
add
and
push
shrl
xor
lea
fisttpl
outsb
imul
pop
mov
cmp
cwtl
stos
lcall
int
xorl
pop
js
mov
adc
dec
cwtl
jp
jb
lret
dec
scas
movsl
mov
sub
or
mov
pop
push
push
clc
push
sahf
mov
mov
jge
push
mov
xchg
xorb
cmp
mov
pop
or
sbb
repz
pop
sbb
imul
jnp
dec
xlat
sbb
mov
lret
xor
mov
mov
fnstsw
sahf
es
insb
ja
test
xchg
xor
xchg
shl
stc
dec
loop
std
and
sub
xor
loopne
sbb
testb
dec
stc
mov
jp
cmp
out
dec
cmp
je
fildl
mov
mov
arpl
inc
cmp
rorl
or
jmp
ljmp
jne
mov
mov
or
outsl
imul
jle
sbb
aas
nop
clc
lods
sbb
push
add
or
inc
inc
out
add
arpl
and
fdivs
repz
jmp
jg
cld
pop
mov
inc
insb
mov
test
xchg
sti
call
adc
in
sbb
sub
or
fadds
cmp
pushf
rcll
or
push
movsl
inc
mov
jmp
xchg
adc
addr16
cmp
imul
mov
je
sub
xchg
xchg
mov
jg
xchg
icebp
and
or
dec
stos
mov
iret
insb
test
push
or
mov
add
mov
inc
pop
pop
nop
loop
inc
inc
leave
inc
add
mov
xchg
fyl2x
in
jns
push
pop
daa
pop
movsl
and
int
test
repnz
gs
xchg
xor
out
mov
ljmp
xchg
scas
sbb
leave
lahf
outsb
pop
lods
popf
and
sbb
cli
sub
push
and
mov
out
loopne
fcomps
dec
sub
stos
enter
iret
cld
mov
adc
pop
addr16
dec
notb
pop
jbe
cmc
jp
mov
test
or
xlat
dec
ss
push
mov
jl
in
mov
push
loopne
mov
repnz
cmp
jmp
je
aas
outsl
mov
pop
or
ja
clc
push
xor
mov
or
pop
scas
sub
scas
push
pop
jo
push
iret
fldenv
pop
add
lcall
loop
mov
and
je
jmp
int3
pop
pop
sbb
and
loope
sarb
inc
add
jg
pop
pop
cmp
aaa
pop
xchg
das
add
add
imul
pop
jle
mov
cmpsb
cld
ljmp
lods
cld
roll
les
and
xchg
xor
mov
aaa
mov
test
adc
aaa
jg
mov
or
xchg
rclb
shlb
jb
mov
mov
dec
cmpsl
mov
sub
xorb
xchg
xor
pushf
xchg
jo
adc
cmp
xchg
pop
mov
aaa
movsl
mov
sub
fmul
insl
fistpl
mov
jne
mov
in
and
and
sub
repnz
test
xor
lret
mov
sbb
cmp
shll
push
inc
xchg
xor
adc
adc
push
mov
mov
xchg
jb
cmpsl
mov
mov
dec
imul
bound
push
or
cmp
scas
cmpsl
cmpl
or
sbb
ds
xchg
jecxz
fadd
fistps
in
pop
lcall
sbb
adc
std
adc
mov
xchg
cltd
aaa
pop
push
fwait
add
sbb
xchg
fcmovnbe
jg
jge
sbb
mov
ljmp
out
cmp
es
mov
das
pop
int
faddl
inc
push
mov
cmpsl
cmp
mov
jge
or
xlat
aam
sti
lock
xchg
push
inc
cmpsl
out
mov
lahf
lea
xchg
mov
xorb
arpl
out
xor
push
insb
xchg
aas
adc
push
or
mov
scas
inc
sbb
test
int
adc
mov
in
and
inc
mov
addl
pop
loope
outsb
sub
out
aad
lea
fnstenv
rorl
aas
fidivs
push
mov
push
adc
jne
sbbl
shl
movsb
test
xchg
arpl
inc
inc
or
cmpsb
cmp
xchg
aaa
repz
bound
fcomps
popa
or
push
rolb
aaa
pusha
adc
pop
jo
mov
in
cmpb
and
out
sub
mov
cmp
leave
and
add
push
int
push
fiaddl
lret
sub
push
addb
jp
sarl
les
cltd
addb
test
iret
loopne
dec
icebp
xchg
mov
mov
push
loop
sub
cmp
pop
xor
shll
pop
mov
xchg
stc
dec
lods
std
xchg
mov
cwtl
rcrl
in
mov
and
addl
add
jp
decb
addr16
mov
nop
movsb
out
push
rclb
sbb
xor
inc
push
repz
push
dec
cmp
cmc
movsl
fwait
clc
cmpsl
jl
adcl
aam
push
lahf
jp
jge
dec
sbb
andl
scas
cmp
push
sarl
ret
mov
lahf
rcrl
or
arpl
inc
int3
imul
mov
mov
lcall
test
push
pop
adc
fisttps
xor
mov
mov
lds
inc
outsb
xor
incl
mov
sub
jmp
inc
push
or
cltd
sar
lahf
ret
jp
mov
pop
imul
cmc
aad
push
daa
cmp
arpl
sbb
add
and
mov
mov
cltd
fldl
aad
hlt
lahf
bound
test
loop
jae
imulb
push
int
push
jbe
ja
lahf
sub
mov
xchg
int3
dec
xor
iret
inc
xchg
mov
cwtl
xor
adc
lea
mov
cld
lcall
icebp
add
pop
inc
mov
sbb
pop
adc
insl
cld
adc
fldl
mov
adc
pop
push
aad
movsl
and
push
sub
dec
sti
jae
shlb
add
test
ror
pushf
sub
mov
shl
test
pop
mov
fdivp
inc
xchg
pushf
arpl
test
jle
cwtl
pop
cmp
xchg
and
adc
insb
mov
mov
adc
xor
xchg
flds
xchg
mov
or
stos
adc
mov
sub
inc
cmp
cld
sbb
stos
je
inc
pushf
inc
sub
push
cmp
dec
loop
inc
orb
cmpsl
add
mov
loop
lods
subb
ja
cld
pop
lret
in
mov
lret
into
mov
sti
aas
les
push
mov
mov
movsb
add
adc
dec
inc
add
push
or
jmp
mov
push
mov
add
ret
lret
push
scas
or
test
adc
or
push
push
push
add
bnd
sbb
cs
scas
lret
mov
addb
or
fcmovbe
xchg
adc
and
pop
xchg
int3
xor
adc
out
lcall
lods
and
test
sbb
cmp
dec
mov
aad
cwtl
xchg
fnstenv
sbb
and
adc
aaa
cmp
dec
sub
jo
push
lock
cmp
fidivrl
les
clc
dec
or
mov
jns
fistps
leave
stc
push
lret
out
hlt
insl
out
push
pusha
jb
sahf
fs
jl
mov
push
jb
cmp
mov
jmp
int
jl
mov
cmc
pushf
test
cmpsb
dec
and
jo
add
dec
mov
ljmp
xor
call
pop
repz
pop
xchg
and
outsl
and
inc
add
shrb
loopne
decl
pop
pop
sarl
sahf
iret
push
hlt
or
sti
jl
fisubs
and
adc
ret
mov
out
jne
iret
mov
aam
ret
cmpsb
lock
pop
or
xchg
mov
les
test
out
cmpl
rolb
imul
sub
fs
test
loope
sahf
mov
pop
xchg
cltd
test
mov
mov
add
nop
mov
pop
sbb
sbb
test
mov
int3
or
pop
adc
lea
pop
jns
sub
loop
push
mov
out
sub
insl
pop
pop
or
subl
divb
jne
jo
clc
lock
mov
mov
jle
dec
or
ja
decb
mov
inc
dec
jb
mov
aam
xor
jb
in
mov
roll
stos
mov
test
pushf
ret
lret
lods
mov
pop
lcall
es
fcmovbe
pop
add
movsl
xchg
imul
jo
aaa
pop
pop
adc
andl
push
pop
subb
daa
xchg
idivb
pushf
mov
iret
jo
clc
xchg
nop
jne
or
repz
inc
roll
imul
add
push
int3
in
push
fbld
lds
and
lret
push
cmpsl
sbb
insl
mov
les
outsl
pusha
pop
out
dec
cld
repnz
iret
iret
in
push
inc
pushl
mov
in
sub
xchg
or
and
lds
xchg
arpl
and
ror
ret
cmp
jecxz
xchg
add
dec
xchg
mov
arpl
fisubs
sbb
sub
dec
popf
push
aaa
sbbb
xor
notl
jp
aam
xor
sub
imull
mov
jae
iret
cmc
sbb
into
dec
loopne
sub
xor
pop
cltd
pusha
mov
jl
repz
mov
sbb
adc
and
popf
mov
or
fsts
mov
imull
add
add
arpl
mov
mov
jo
add
lock
das
inc
insl
lret
mov
cmp
cld
xchg
daa
cmp
std
or
cmp
mov
lds
fwait
xor
shll
add
iret
jb
xchg
mov
dec
cmpsb
or
sub
add
leave
fildll
push
sub
pop
jge
mov
int
cmp
mov
aas
xlat
scas
out
or
mov
inc
jmp
rol
jbe
mov
cmpsl
in
jno
negb
inc
inc
xchg
sub
lahf
pop
inc
add
sahf
mov
das
pushf
mov
stos
seto
icebp
in
jnp
inc
mov
mov
testl
insl
movsl
cmp
repnz
gs
arpl
das
sub
cltd
fxch
sbbl
ljmp
mov
jge
loopne
pop
fwait
test
orl
dec
push
xchg
repz
and
lcall
mov
jo
movsb
pusha
or
aas
loopne
or
lods
int3
mov
mov
sbb
add
fs
mov
xorb
jg
adcl
movsl
out
or
jecxz
inc
daa
xchg
xor
loop
gs
pop
hlt
add
icebp
add
fldl
inc
xchg
fwait
mov
bswap
cs
imull
jg
mov
ljmp
bound
mov
jg
mov
sub
aas
mov
ja
pop
popf
arpl
fmull
test
pop
pop
xchg
lods
lods
adc
mov
jb
std
dec
inc
pop
in
mov
mov
outsb
adc
or
push
mov
jl
cld
test
arpl
adc
imul
dec
dec
cmp
jo
push
icebp
test
out
or
aad
fbstp
sbb
or
and
scas
movsb
shrl
or
xchg
in
jnp
xchg
lods
mov
xchg
xor
ret
and
imul
jle
and
or
push
mov
stos
hlt
and
lret
adc
mov
cmp
push
sub
andl
xor
fdivrp
out
adc
adc
lods
push
int3
out
and
insl
adc
cmpsl
test
adc
jmp
ja
rolb
inc
pop
fistps
mov
stos
out
or
xchg
fsubl
pop
push
cs
mov
shr
jb
and
sbb
adc
divb
sbb
xor
mov
cmp
lret
aad
das
nop
adc
mov
adc
movsb
int
sbb
mov
push
jno
dec
sub
call
jb
es
or
rorb
dec
xlat
push
in
ss
and
inc
dec
outsb
inc
cltd
test
add
fimuls
lcall
xchg
mov
add
out
adc
dec
mov
sbb
dec
stc
imul
sti
aad
inc
imul
adcb
push
arpl
lods
xor
lcall
inc
adc
movsl
out
jae
or
fidivrl
sbbb
pop
das
pop
mov
subb
lea
rcll
dec
leave
xlat
fwait
mov
es
pop
xor
aaa
adc
test
mov
xor
and
leave
push
and
mov
addr16
push
push
inc
mov
je
in
add
clc
inc
add
mov
ret
test
mov
dec
hlt
or
jno
inc
scas
sbb
sbb
pusha
pop
mov
or
leave
shl
adc
and
xor
xchg
add
imul
push
xlat
adc
inc
out
mov
aaa
ss
push
pop
pop
imul
xchg
clc
xor
mov
lcall
mov
aaa
and
push
pushl
cmp
test
jbe
out
jp
ds
fimuls
fwait
mov
xchg
enter
mov
inc
sub
incl
push
aam
push
rcr
pop
fisubrl
rorb
call
loopne
sub
daa
insb
push
jle
jg
nop
jge
jecxz
cmp
pop
loope
addl
fs
jns
loopne
imull
push
sbb
mov
sarl
dec
dec
push
insb
dec
add
cmpsl
clc
out
sbb
sbb
add
mov
imul
mov
cld
scas
adc
outsb
insb
cld
adc
iret
cmp
rol
rclb
test
push
sahf
data16
fxch
xor
sub
fldt
add
jbe
loopne
sub
cmc
pop
sub
insb
daa
cmpsb
lahf
and
mov
jae
adc
sub
lret
cld
jo
add
or
hlt
pop
jmp
jg
test
std
adcl
mov
stc
inc
jae
cwtl
xchg
daa
loop
jp
jns
sub
xor
mov
jbe
ret
test
mov
mov
cmp
int3
lret
stos
addb
or
pop
idivb
loopne
movsl
lret
jne
inc
outsl
push
xchg
cmovno
push
movsb
push
dec
sub
divl
jne
int
xchg
sub
mov
sub
push
xchg
clc
or
push
fs
mov
jae
and
sub
xor
cli
pop
js
adc
jmp
sub
adc
inc
xchg
pushf
cmc
sub
in
inc
pop
test
pop
lock
scas
sbb
push
xchg
cmpsb
or
lcall
leave
sbb
xchg
sub
test
daa
sbb
cld
popa
aaa
pop
outsb
push
mov
fldenv
xchg
cltd
ficomps
and
sysenter
outsb
dec
jp
cmp
mov
inc
pop
jbe
mov
jne
cli
add
je
imul
roll
leave
out
jo
xchg
imul
inc
mov
testb
jg
or
dec
fisubl
push
pop
sbb
pop
mov
scas
jl
cwtl
movsl
jo
repnz
cwtl
jae
inc
add
add
fdiv
pop
xchg
sbb
sub
xor
mov
dec
pop
out
inc
and
das
jge
or
call
test
xor
rorl
add
es
lret
test
ret
sub
je
lcall
out
mov
mov
sahf
test
sarb
js
lods
scas
sbb
arpl
lods
pop
add
jno
lock
mov
mov
and
and
out
adc
add
inc
insl
xchg
cli
sub
leave
repz
stos
pop
sub
out
js
fwait
lock
ljmp
add
ret
sub
aam
xchg
lods
orl
je
sbb
sub
decl
fwait
sub
je
into
and
mov
push
stos
add
jo
test
shrl
idiv
repnz
test
je
pop
ds
add
adc
mov
loopne
or
scas
mov
or
repnz
aam
or
div
jbe
jmp
lret
scas
insl
imul
cs
jle
stos
inc
mov
data16
andb
outsb
je
enter
lea
int3
fwait
mov
mov
into
lods
fidivrl
stos
jb
lcall
enter
arpl
sti
mov
adc
jp
dec
mov
pop
push
push
mov
mov
adc
mov
mov
fisttpl
xor
mov
inc
dec
cmp
js
push
fwait
add
pop
push
repnz
aas
cs
add
lret
sub
int3
out
lock
dec
xor
pop
adc
mov
and
mov
adc
push
testb
or
add
cli
mov
mov
ret
fs
rclb
jo
lds
loope
stc
imul
sbb
sahf
shlb
in
in
inc
lret
xor
in
arpl
fstpt
push
mov
in
and
pop
xor
inc
push
inc
bnd
fcomps
pop
mov
fiadds
shll
push
mov
loopne
or
cld
sub
xchg
daa
popa
rol
out
fsubl
cld
gs
pop
cli
and
add
inc
ja
dec
or
inc
lods
bound
cmp
mov
pop
in
mov
add
cmpsb
pop
mov
fwait
call
sub
sub
mov
aam
mov
lds
inc
shlb
jo
add
adc
jns
ljmp
out
outsl
xor
outsl
and
and
push
jp
lahf
pop
std
std
jmp
jp
pop
push
jo
xor
outsl
and
mov
dec
xor
in
leave
test
mov
inc
mov
pop
test
cmpsl
fwait
pushl
in
adc
movsb
fisubl
ljmp
out
je
in
rol
or
sbb
or
xchg
ds
mov
dec
dec
mov
insl
sbb
inc
ret
or
inc
les
sbb
ret
clc
repnz
lods
movsl
mov
iret
cld
inc
loopne
imul
pop
adc
js
adc
orl
dec
jns
cli
push
adc
fisubrs
fdivl
pop
jle
scas
gs
pop
sbb
fisubs
and
mov
and
or
jo
andb
mov
insl
pop
inc
pop
popf
xchg
cmpl
stos
imul
jmp
jg
sub
push
ljmp
adcb
imul
dec
cmp
lods
sub
adc
dec
in
ds
push
insb
movsb
ljmp
mov
push
ljmp
loope
lods
fbstp
xchg
out
or
pusha
dec
xchg
lds
scas
imul
rcll
idivl
shll
cmp
jnp
jle
loopne
xor
movsb
jbe
jecxz
loope
pop
push
pop
cmp
daa
bound
push
inc
xchg
jge
fsubs
std
testl
xchg
out
cmp
sbb
mov
fistps
sub
add
je
movsb
cmp
pop
mov
push
incb
push
into
daa
lcall
sahf
enter
jecxz
js
mov
loopne
fldt
jle
cmpb
pop
fdivrl
fisubrl
dec
lds
stc
pop
je
arpl
dec
lahf
cmp
push
loope
dec
mov
mov
fldcw
xor
adc
lods
dec
rcll
add
sahf
inc
pushf
jo
clc
repz
push
bound
cli
aaa
adc
in
in
pop
inc
or
mov
ret
cmc
adc
lds
aad
out
xchg
lock
ficomps
cmp
fcoml
push
xor
and
cmp
enter
sbb
jae,pn
loop
lds
ret
int
repz
cmpsl
mov
aas
outsb
insb
subl
pop
pop
fstpt
iret
adc
xchg
fadds
xchg
cld
test
das
aaa
icebp
test
adc
add
and
shll
sti
xor
mov
jae
adc
inc
mov
lahf
jae
push
test
aas
rcll
testb
inc
cmp
scas
scas
cmpsb
and
add
mov
and
inc
or
xchg
push
push
ljmp
aaa
add
mov
sarl
or
iret
loope
adc
xchg
mov
xchg
pop
push
sbb
cmpb
out
jae
dec
xchg
mov
xchg
aas
ret
jno
ja
sbb
adc
in
stos
rcrb
push
out
push
loope
pop
ret
rcrl
jl
lods
push
popf
loope
adc
mov
mov
lods
aas
arpl
lcall
mov
call
call
popf
test
jbe
fwait
inc
sub
mov
cmpb
fmul
or
mov
fimull
push
mov
repz
mov
aas
push
mov
jp
lea
loope
sbb
sbb
cltd
in
mov
das
dec
outsl
call
loopne
jp
std
adc
mov
rcl
test
jecxz
faddl
imul
sbb
xchg
xchg
bound
mov
fimuls
jge
lahf
lock
fcmovnb
sbb
dec
cwtl
outsl
aam
cmp
sub
in
fldl2e
dec
adc
ljmp
shlb
mov
add
and
sbb
test
scas
jnp
xchg
imul
aad
cltd
ret
imul
push
in
aad
dec
popa
addr16
sub
fbstp
add
cmpsl
test
adc
push
movsb
add
mov
addr16
inc
test
push
movsl
lods
mov
movsb
out
push
inc
test
nop
mov
call
inc
xchg
fisubrs
mov
dec
pushf
adcl
out
outsb
test
test
pop
xchg
xor
in
xchg
mov
adc
rclb
into
fimull
pop
adc
inc
mov
push
or
aam
mov
enter
adc
jmp
int
sbb
xchg
push
dec
lret
mov
call
out
and
sub
les
fnsave
lods
lds
xchg
sub
sbb
fcoms
call
jo
or
or
ja
fdivr
xchg
pop
push
lds
hlt
jae
jb
addr16
leave
test
repz
fldl
addr16
sti
cmp
mov
std
scas
cltd
or
sbb
daa
cmp
push
add
ret
cltd
jne
pushf
dec
int
testl
inc
seta
add
pop
lret
out
inc
cmpsb
addr16
pop
xor
jne
mov
lea
arpl
sub
xor
xchg
es
cmp
push
loop
mov
cmpsl
adc
loopne
add
test
shl
xchg
mov
int3
xor
mov
out
fmul
ljmp
cld
jns
sub
addr16
jl
mov
sub
mov
mov
sbb
cmpsl
xor
cmp
fcoml
add
cmp
into
je
xor
mov
std
xor
pop
test
inc
and
jle
insl
mov
ret
mov
push
jmp
xchg
fwait
xor
jae
pop
movsl
imul
imul
push
rclb
push
bound
pusha
sti
inc
cmp
arpl
je
mov
sub
inc
in
scas
mov
sub
pop
ficompl
enter
xor
jle
mov
int3
mov
ficoml
jmp
leave
in
inc
inc
pusha
negb
sbb
lret
push
pop
inc
xchg
jne
loope
lahf
sub
ds
movsl
mov
repz
lock
lods
dec
mov
inc
repz
cmp
imulb
ja
pop
inc
add
hlt
jecxz
das
dec
lret
or
ret
cli
popf
cmpsl
sarb
test
and
adc
xor
mov
mov
push
stos
cmp
mov
nop
jbe
mov
ss
sub
lret
pop
add
jns
push
lods
sbbl
into
pop
jle
imul
adc
and
pop
das
enter
shll
mov
je
into
test
shrb
add
cmpsb
mov
xor
xor
icebp
pop
aas
out
cwtl
lods
cmp
jnp
je
cmpsl
scas
xchg
js
lahf
adc
mov
pop
fldenv
jne
fstpt
movsl
andl
push
xchg
rorb
inc
or
xchg
aaa
push
data16
cmp
scas
sti
mov
mov
fcompl
lock
fucomp
mov
xchg
fwait
mov
pop
push
pushw
fcmovne
cld
outsl
test
pop
rclb
add
sbb
jae
popa
dec
inc
cmpsl
xchg
in
je
aad
inc
out
cmp
stos
daa
push
mov
stos
and
mov
insl
cmp
push
fisttps
xchg
lds
std
mov
cmpsb
or
fwait
test
and
sbb
enter
push
and
cmpsb
decl
add
sar
push
subl
mov
clc
xchg
addl
ret
cmp
or
div
or
pop
nop
icebp
je
sub
std
outsl
lcall
push
jnp
inc
jbe
bound
xor
inc
in
sti
mov
inc
push
lock
test
int
sbb
nop
inc
xor
mov
mov
addr16
nop
sbb
incl
mov
popf
cmp
mov
add
ljmp
xchg
jecxz
lret
sti
mov
xlat
adc
lea
or
jecxz
jo
cltd
insl
lret
fisubrl
insb
sub
cwtl
cltd
xor
loop
push
rcrl
mov
sar
in
sbb
ret
insl
xchg
push
inc
loopne
dec
push
adc
sbb
push
int3
addr16
fidivs
dec
hlt
popf
lds
daa
test
xlat
cmc
xor
loope,pt
add
dec
pop
inc
push
mov
lahf
and
popa
jne
xor
inc
sub
mov
out
dec
and
sti
jge
push
jle
ja
or
lds
sti
mov
cmp
and
aad
or
pop
xlat
div
xchg
test
jl
lahf
mov
popf
adc
xor
mov
inc
mov
dec
imull
test
push
inc
dec
push
cmpsl
pusha
and
pop
sub
mov
inc
push
and
fnstsw
push
shl
lods
fnstenv
xor
pop
push
pop
or
fmull
push
add
xor
xchg
mov
mov
push
fistpl
insl
je
lea
ret
iret
xchg
out
xor
fists
adc
icebp
mov
push
mov
pop
loop
jno
cltd
bound
mov
pop
lahf
in
in
mov
js
mov
adc
push
scas
fdivrl
test
mov
movsl
enter
cmpsl
sbb
fisubrs
repz
or
imull
xor
in
sbb
xchg
dec
adc
outsb
jl
mov
adc
sub
dec
cs
dec
mov
popf
or
int3
fbld
pop
cmp
addl
sub
sbb
cmp
mov
pop
arpl
bound
jmp
add
or
pop
data16
fld
ds
rorb
gs
popf
pusha
add
jp
scas
xchg
cld
je
decl
jb
push
jnp
popa
pop
fs
aaa
popa
pop
pop
stos
inc
mov
lahf
xchg
xchg
adc
scas
lods
fldcw
jmp
adc
jp
add
pop
jp
daa
pushl
das
lock
cs
insb
pop
pop
lret
pop
ds
mov
xchg
cmp
add
sbb
out
sub
sub
push
sbb
leave
xor
cli
cmp
outsl
addr16
mov
aas
and
lea
out
inc
cmp
and
out
cmpl
fbld
scas
mov
iret
mov
xchg
push
ret
enter
jne
xchg
and
test
xchg
lret
stos
push
dec
xor
mov
xchg
and
adc
inc
add
cmp
mov
jne
fisubs
cmp
or
and
mov
inc
sub
rcrl
sbb
cltd
mov
out
or
iret
hlt
lret
scas
mov
daa
sbb
mov
movsl
sub
shrb
mov
sub
das
loopne
subb
aam
xor
push
loop
negb
mov
jp
hlt
add
push
lds
xor
push
or
les
es
mov
insb
dec
leave
dec
pusha
loopne
xchg
sub
jp
cld
dec
jno
xor
leave
push
pop
push
popf
sti
scas
aam
enter
jne
pushl
fnstcw
or
mov
mov
cmp
pop
mull
imul
data16
dec
lods
add
mov
pop
jno
push
aas
cmp
in
cld
shll
mov
adc
gs
test
sbb
push
fisttpll
cmp
cwtl
cmpsl
xor
stc
dec
scas
xchg
fisubrl
ja
js
jbe
lahf
scas
lds
mov
mov
cmp
pop
stos
xor
pop
outsl
popa
jmp
add
sbb
ret
in
aaa
push
insl
out
or
dec
enter
data16
mov
adc
inc
arpl
pop
hlt
pusha
mov
test
js
test
sub
or
pushl
push
in
cmp
mov
adc
add
andb
pop
mov
xor
daa
xchg
cmp
push
sub
pop
or
lcall
lcall
iret
lahf
mov
mov
jb
dec
ja
xor
insl
js
insb
das
mov
or
loop
jge
push
sbb
int3
push
mov
or
pop
pop
lods
xlat
xor
fnsave
std
mov
addr16
lds
out
cwtl
js
aam
xor
imul
decl
sbb
adc
sbb
scas
adc
pop
fxch
repz
insb
test
scas
and
mov
int
xor
xchg
mov
dec
imul
jno
outsb
jle
sti
test
popa
adc
jecxz
xor
inc
nop
and
hlt
dec
xchg
dec
scas
xchg
aam
mov
pop
popa
push
or
xchg
jmp
daa
sbb
inc
leave
inc
cli
push
mov
and
mov
hlt
aad
jle
loopne
xlat
js
cmpsl
call
xchg
mov
scas
iret
adc
and
cwtl
add
cmp
inc
dec
mov
sub
jno
ljmp
in
add
popa
inc
xor
sbbl
inc
mov
xchg
aaa
mov
mov
stos
jno
addr16
xchg
pop
jl
sub
adc
enter
sub
in
sub
and
in
dec
jl
mov
cmpl
jne
jno
sarb
test
add
dec
sahf
mov
into
aas
movsl
repz
xchg
test
imul
mov
mov
adc
dec
aam
jg
jns
int
cmp
push
fwait
push
ficompl
xor
mov
into
or
imul
dec
fisubrl
xor
xchg
popf
inc
add
stos
shrb
outsb
sarb
sub
sti
scas
push
mov
xchg
mov
fucom
aas
jecxz
adc
icebp
mov
inc
cmp
and
ljmp
inc
icebp
jmp
push
mov
sub
xlat
imul
xchg
lret
inc
fimull
xchg
ljmp
cwtl
lret
sbb
cmpsl
cmp
ss
jecxz
inc
and
leave
enter
sbb
test
sub
or
or
rclb
jecxz
lods
into
mov
mov
loope
inc
lds
sbb
mov
mov
shlb
inc
inc
jp
xchg
jnp
aad
mov
or
xchg
mov
cs
dec
and
jmp
lret
ficomps
cmp
fldcw
bound
adc
mov
int
pop
in
in
pop
push
push
xorb
xchg
sarl
push
xchg
push
jne
inc
ss
sbb
jno
jmp
rep
sbb
adc
sub
inc
aas
inc
fucom
pop
cmp
jno
shll
and
sbb
dec
and
ret
stc
pop
pop
int3
aad
pop
imul
gs
jne
mov
popf
add
repnz
dec
leave
and
loop
iret
fcom
cmp
iret
scas
out
leave
jmp
push
ds
push
test
push
shrb
adc
call
in
xchg
sub
je
or
inc
loope
cmp
rol
enter
jo
mov
movsl
sub
jbe
xchg
aas
push
push
sub
pop
dec
cwtl
movsb
scas
or
xchg
push
in
fwait
push
sub
or
or
lret
mov
loope
jle
nop
fmull
and
popf
mov
sub
cli
jecxz
cmpsl
cmp
les
sarl
add
sub
sbb
xchg
inc
cmp
add
repnz
mov
mov
imul
dec
or
or
xchg
dec
shr
pop
sub
push
pop
or
js
and
leave
cmp
sub
dec
inc
jle
mov
xor
sbb
xchg
mov
jg
sbb
mov
xchg
mov
and
js
fs
jae
push
lret
or
iret
repz
mov
push
lds
dec
daa
jae
cli
ficompl
mov
mov
ds
outsb
test
jge
xchg
or
ja
add
test
aas
add
pop
mov
dec
xlat
and
nop
jl
mov
cwtl
sub
loop
into
push
in
sub
pop
sahf
inc
xor
loop
cmp
mov
fs
jo
popa
jge
push
mov
cmp
pop
imul
cwtl
out
mov
and
add
mov
mov
rolb
cmp
xchg
lcall
enter
in
mov
mov
fidivrs
and
add
jmp
mov
sbbl
mov
sub
sbb
xor
adc
mov
popf
sbb
lcall
aas
cld
cmp
jb
xchg
sbb
mov
push
adc
jns
das
jmp
inc
xchg
jp
pop
out
mov
lea
mov
ret
xor
dec
mov
cmpl
and
lret
xor
insb
das
insb
mov
loop
and
sbb
sub
pusha
daa
out
jmp
add
push
mov
xchg
xor
mov
stc
mov
inc
dec
sbb
mov
pop
repz
add
rcl
add
mov
int3
jg
popa
adc
fldt
add
mov
cld
add
push
xchg
hlt
imulb
push
xchg
mov
mov
and
push
cmpsl
stc
stc
not
int3
addr16
dec
fstp
xor
dec
in
pop
mov
jmp
xchg
into
cmp
cmp
mov
jmp
bound
inc
lea
jnp
mov
dec
imul
jp
into
xchg
and
int
dec
arpl
fsubrs
cmpsb
in
jnp
pop
sub
mov
idivb
rcr
je
sti
andl
sar
mov
cld
mov
cmpb
push
xchg
jno
jle
sub
in
sbb
out
mov
fdivl
out
pushf
push
js
cltd
or
mov
or
je
bound
cmp
add
push
daa
mov
sub
jmp
cli
test
and
js
dec
stos
pop
jb
xlat
adcb
jnp
mov
arpl
mov
jo
push
daa
out
out
xlat
mov
int
stos
push
mov
jne
mov
inc
jnp
mov
cld
mov
es
cltd
jge
stc
mov
xorw
fildl
fstps
into
sahf
cwtl
in
xchg
loop
dec
pop
push
dec
xlat
mov
insl
ss
les
int
fidivrl
cwtl
or
sub
jl
or
ljmp
popa
xchg
dec
orl
imull
inc
out
cmp
lods
mov
inc
inc
xor
cli
jle
cmp
sarb
cmpsb
sub
inc
ljmp
imul
or
jbe
test
mov
scas
pop
sbb
inc
adc
cmpsb
aas
and
push
mov
orl
dec
les
jnp
jb
imul
push
sub
sub
mov
pop
push
push
test
xor
out
xor
popa
pop
jmp
test
sub
pop
mov
cmpsb
ja
test
sbb
loope
lods
or
xsave
pop
cmp
and
ds
pop
dec
test
or
mov
lcall
xor
jne
sbb
and
mov
out
lock
push
int3
xorb
clc
fdivrl
push
add
pop
aaa
jo
shl
lret
data16
sub
adc
pop
fwait
dec
mov
scas
movsb
jge
fwait
pop
push
test
gs
xchg
sub
je
popa
mov
in
out
cmp
add
add
sub
shl
cld
jg
mov
lods
add
bound
sti
lds
adc
ja
int
mov
lret
jl
loope
xchg
nop
cmp
pop
pop
cmc
xchg
je
dec
adc
or
inc
push
jae
pop
clc
test
mov
nop
mov
test
push
mov
inc
movsl
mov
inc
sbb
jno
dec
fsubrl
lods
jecxz
test
mov
mov
xchg
int3
scas
movsb
ja
mov
das
mov
cmp
add
jns
imul
xchg
jno
test
xchg
rorl
cs
fwait
push
xorl
and
dec
push
cs
ljmp
sbb
add
pop
inc
sub
and
mov
mov
sub
cmp
test
or
cli
imul
or
jae
scas
mul
lock
jmp
scas
adc
ss
imul
and
lahf
jl
pop
xlat
testl
cmp
inc
or
mov
adc
mov
les
jnp
xlat
or
es
scas
scas
inc
push
sti
mov
sub
jl
mov
cmp
scas
loop
mov
pop
loop
or
call
pop
and
js
pop
sub
xchg
jbe
pop
vpaddsb
jb
icebp
inc
mov
jns
add
int
push
xor
sub
loope
ret
pop
jb
mov
push
add
icebp
popf
fiaddl
repnz
dec
mov
cmpsb
movsl
loopne
dec
push
jg
mov
cs
in
and
jle
mov
fs
and
shll
lock
sub
daa
mov
and
inc
into
and
sar
arpl
jne
mov
test
mov
mov
push
dec
mov
movsb
sub
pushf
add
rcll
xchg
jl
scas
out
add
sbb
sbb
jne
inc
xchg
js
sub
dec
push
outsl
xchg
inc
dec
pusha
rorl
cmpsb
fwait
dec
xor
in
rcl
mov
test
xchg
cwtl
ret
sti
lahf
cmp
rclb
sub
call
stos
mov
lods
neg
mov
jno
pop
push
adcl
inc
in
sahf
scas
sbb
pop
aam
ss
mov
sbbl
arpl
mov
cmpsb
test
push
adc
and
cwtl
pushf
mov
adc
pop
add
in
cmp
jp
sub
jmp
int
push
jne
shll
jo
push
xchg
adc
loopne
fs
inc
mov
lods
jo
mov
or
popf
pushf
mov
adc
mov
mov
std
lea
ud0
lcall
or
cmpsl
decl
arpl
dec
sbb
pop
mov
jae
and
lods
ret
xchg
xor
out
fsubrl
xchg
std
test
je
test
je
fidivrs
push
repnz
sbb
mov
out
out
xor
dec
insl
mov
sbb
xchg
scas
shlb
sub
popf
jl
mov
fstpl
inc
aas
cmp
test
adc
mov
push
cltd
cmpsl
dec
negl
popa
mov
std
jmp
ficomps
mov
dec
scas
mov
pop
mov
add
enter
sub
adc
sbb
xchg
out
mov
sbb
outsb
lret
adc
mov
lcall
enter
mov
rcrl
pushf
sub
mov
hlt
mov
cmc
pop
mov
lock
or
add
add
int3
adc
out
testl
mov
or
adcb
push
repnz
add
fcom
enter
jnp
cmp
ficoml
std
aad
loope
fiaddl
mov
cmp
sub
cmpb
mov
aad
add
aam
adcl
fstps
or
pusha
sbb
popf
inc
mov
sub
addr16
xchg
adc
test
xor
mov
cmp
sbb
addr16
mov
push
sbb
mov
out
cmp
sub
jge
xchg
adc
xor
lret
mov
or
mov
push
xchg
inc
es
in
inc
mov
xor
pop
adc
popf
cmp
pop
sti
or
lea
push
lahf
xchg
jmp
inc
sbb
outsb
in
cmp
mov
das
andl
xlat
int
popf
xor
inc
mov
ljmp
pop
and
std
push
rolb
xor
shl
adcb
adc
inc
decl
push
insl
insb
pop
and
roll
ss
mov
dec
pop
sbb
in
fiaddl
adc
and
sub
or
test
inc
das
adcl
iret
or
mov
pusha
lods
mov
aaa
loop
lret
inc
ljmp
xchg
jno
mov
inc
mov
mov
stos
mov
addr16
out
popf
pop
fwait
leave
daa
mov
mov
out
or
push
loope
xchg
cwtl
and
xlat
pop
add
adcl
jmp
nop
loopne
mov
ja
shrl
push
xlat
std
jmp
hlt
cmpsl
test
xchg
mov
sbb
sti
out
insl
out
idivl
popa
sub
and
adc
xchg
jnp
and
hlt
xor
push
jg
cs
inc
push
scas
pop
add
jg
sets
jnp
stos
add
subps
xchg
inc
hlt
xchg
subb
arpl
std
insl
cmp
aas
xor
leave
adc
or
lock
addr16
test
mov
imul
out
rorb
pop
add
add
push
sub
push
imul
loop
push
or
pop
jns
clc
jns
daa
and
call
mov
dec
mov
scas
jae
sahf
push
cmp
mov
pop
insb
add
pusha
shl
jmp
mov
cltd
notb
lea
test
push
mov
and
test
jno
mov
cmpsb
inc
imul
out
xor
jmp
nop
insl
pop
or
mov
jle
lret
and
leave
rcrb
aas
mov
daa
xchg
daa
rclb
mov
popf
sub
adc
stos
dec
push
mov
and
shlb
lods
out
sbb
push
clc
ret
sbb
or
out
jno
jne
pop
gs
pushf
call
es
addr16
stc
in
sbb
rclb
shlb
sub
cmp
outsl
lret
enter
inc
pushf
push
in
jl
cld
xchg
mov
mov
hlt
adc
lods
mov
xor
fcomi
sahf
adc
add
xchg
lds
xchg
enter
imul
pop
into
dec
scas
and
hlt
insl
sahf
ds
test
clc
iret
fsubs
mov
in
inc
icebp
xchg
or
fistps
sahf
and
push
push
add
cmp
dec
jo
jb
push
call
xor
std
push
sbbb
rcll
sub
cs
sbb
faddp
imul
pop
jmp
fsts
fidivrs
cs
inc
in
stc
push
fadds
jle
cwtl
ret
inc
imul
fmuls
push
std
scas
in
push
leave
data16
subl
mov
pushf
insb
dec
adc
es
sub
iret
dec
test
jno
das
mov
jge
xor
repz
into
daa
push
xchg
sub
movsb
jge
adc
repnz
lods
mov
enter
sbb
or
pop
xchg
popa
in
pop
shrl
add
and
mov
sbb
xchg
roll
pop
icebp
xor
cmc
data16
rcrb
sub
cli
xchg
sub
add
xor
jp
and
out
nop
divb
ret
push
test
xor
cmpsl
add
mov
mov
pop
inc
loopne
mov
jb
sub
push
add
xor
mov
xorl
nop
jnp
add
rcll
mov
cmp
loope
clc
shlb
adc
test
jge
jmp
mov
sahf
inc
mov
aam
adc
shrl
test
pop
data16
mov
in
xchg
sbb
cld
or
inc
push
cmp
lret
push
xchg
fmuls
insb
inc
or
push
add
cmp
push
pop
sub
push
mov
addr16
aaa
psubusb
xchg
popa
jle
out
scas
inc
test
push
add
fimull
scas
cmp
inc
aaa
stos
pop
aaa
cmpsl
movl
cld
in
mov
rclb
xlat
into
cmp
push
cli
dec
aaa
sbb
hlt
xor
and
mov
jne
js
inc
mov
cld
jne
cwtl
pop
xor
iret
mov
lock
les
inc
xchg
shlb
xchg
inc
or
lret
cmp
adc
scas
shll
in
inc
rcl
inc
scas
pushf
repnz
sub
jle
push
dec
test
mov
lcall
stos
inc
imull
jo
mov
inc
mov
in
cmpsl
pop
mov
jno
pop
jl
add
inc
test
mov
rcrl
mov
leave
in
ss
stos
sub
cltd
jo
cmp
jg
loope
sbb
pop
push
insl
sub
mov
mov
mov
repnz
cmpsl
xor
xor
mov
xchg
stos
cld
clc
mov
jae
and
lds
jge
enter
outsb
xor
or
pop
pop
add
lcall
cwtl
jnp
add
or
and
arpl
jle
lds
je
in
out
mov
adc
fmulp
dec
jp
insb
loope
mov
les
pop
loope
stc
pusha
mov
pop
dec
insb
push
jo
push
aas
push
rcrl
icebp
cmp
and
push
mov
sbb
das
mov
add
xchg
push
jl
pop
gs
adc
push
je
inc
in
and
add
push
mov
adc
pop
xchg
adc
jmp
stos
sub
mov
sub
cmp
mov
mov
inc
inc
add
sub
cmp
and
imul
fldt
or
lock
std
loope
adcl
arpl
xor
outsl
mov
xchg
xor
hlt
repz
inc
fldenv
mov
in
adc
xor
xor
sub
scas
popa
push
iret
ljmp
ss
jl
push
push
fdiv
xchg
add
or
imul
dec
jecxz
push
xchg
roll
sbb
cmp
scas
stos
into
insl
popf
cli
push
stos
mov
repnz
sahf
xchg
idivl
int
sub
add
add
cmp
adc
shlb
mov
push
xchg
aad
in
dec
adc
inc
shl
jbe
rorl
and
rsqrtps
bound
mov
inc
mov
inc
mov
sub
mov
sub
pop
ret
aas
push
mov
xor
inc
in
pusha
js
inc
pop
lret
std
lahf
mov
sbb
call
mov
xchg
movsl
pusha
ret
in
cwtl
cmp
push
cmpb
jns
test
cmovb
sub
adc
fsub
aas
js
out
pop
lods
add
adc
cmpsb
in
cs
and
arpl
test
nop
iret
and
pop
xchg
lock
movsl
cwtl
add
fcoml
push
int3
pop
hlt
adc
aas
mov
stos
sti
inc
push
stc
int3
rorb
push
lahf
out
fsubrs
ljmp
fwait
push
loop
pop
sbb
adc
aaa
outsb
dec
xor
pop
rep
bound
push
or
xchg
push
cmp
js
and
inc
rcll
pop
fstl
pop
test
add
xchg
rcrl
inc
out
jb
xchg
enter
dec
notb
adc
stc
mov
pop
fwait
dec
ja
adc
xchg
or
dec
adc
cmc
dec
fildll
gs
mov
push
sti
inc
sbb
outsl
notl
jge
popa
rcl
lods
int
outsl
xchg
or
addr16
fisubrl
lsl
mov
in
test
clc
inc
and
addr16
cmpsl
sub
lahf
mov
popa
rorb
jb
pop
cmp
pop
pop
ja
test
add
outsb
dec
adc
idivl
cli
es
addl
imul
ret
outsl
inc
jae
sub
mov
jbe
out
movsb
out
std
xor
pushf
adc
mov
dec
out
cld
sti
inc
cli
in
cmp
mov
add
pushf
movsl
sbb
roll
pushf
mov
test
add
cmpb
cmp
or
mov
std
xor
cltd
xchg
cmp
push
out
and
cmc
fcomip
jb
push
lcall
push
popf
or
leave
dec
orb
inc
jne
sbb
aas
jno
adc
fcoml
sti
shll
es
xor
mov
sub
lret
push
mov
mov
push
test
ret
out
ljmp
dec
bound
or
fmul
pop
cmp
jns
fisttps
inc
cltd
cs
std
inc
or
sbb
scas
inc
js
lret
int
test
pushf
adc
rcll
push
loope
inc
xor
les
sub
shrl
in
dec
jns
sub
sbb
cmpsl
cltd
fld
xchg
js
mov
push
outsb
xor
push
insb
aam
jnp
test
ljmp
ret
pop
mov
ja
clc
test
xchg
in
mov
jmp
repz
lock
sbb
jl
sub
ret
adc
outsb
xchg
icebp
test
les
add
fnstcw
cltd
idivl
sbb
stc
adc
adc
je
or
test
aaa
mov
xor
push
fs
inc
shll
xchg
test
notb
stos
mov
xor
ret
loope
insb
xlat
icebp
in
or
fisubl
test
and
cmpsb
lahf
adcl
ds
mov
pusha
daa
ss
xchg
in
dec
mov
aam
rcll
out
cmp
mov
gs
or
popa
jmp
sbb
icebp
xchg
adc
nop
test
xor
push
xchg
pop
ja
dec
ficompl
ljmp
push
roll
add
les
xchg
push
pop
loopne
dec
push
nop
nop
loope
mov
sbb
mulb
push
pextrw
ss
and
jp
sbb
popf
mov
les
xor
mov
lahf
ljmp
xor
scas
mov
inc
aam
add
xchg
iret
aam
outsb
out
repz
cmp
mov
out
out
adc
xchg
dec
mov
dec
dec
int
xor
das
cld
mov
in
cmp
adc
pop
nop
pslld
in
jmp
loop
cmp
xchg
xor
cmp
pop
cmp
sbb
sbbb
ret
sub
mov
mov
and
mov
pop
jg
dec
xchg
test
mov
cmp
adc
sti
push
imul
stos
xchg
addr16
stos
xor
jns
sbb
add
popa
push
loope
pop
loopne
icebp
jnp
pushf
test
mov
jl
adc
arpl
and
loop
xor
stos
aam
adc
loope
ja
dec
in
into
fcoms
push
iret
pop
icebp
mov
dec
xchg
and
fbld
call
lret
icebp
pushf
sarl
imul
xchg
push
call
adc
sub
fstp
or
mov
clc
sbb
jae
sbb
mov
dec
jo
sub
sbb
in
or
hlt
mov
ljmp
inc
pop
dec
xor
sub
cmpsl
jge
jns,pn
inc
cmp
shrl
jle
stc
int
fwait
mov
mov
or
jbe
outsl
addr16
dec
sub
gs
adc
xchg
xorb
loope
xlat
push
jb
jecxz
adc
insb
mov
cwtl
xor
sub
push
jnp
fcmovb
inc
xor
xchg
adc
jno
add
aaa
outsb
lock
addr16
shl
add
icebp
pop
js
cwtl
adc
shrl
dec
add
push
fists
daa
xor
sub
mov
mov
or
shll
cmp
icebp
cli
cmp
adc
neg
sar
js
test
and
adc
adc
pop
cmpl
and
sub
stos
dec
shrb
push
clc
or
jae
push
mov
out
popf
xlat
push
outsb
adc
pop
xorb
and
xchg
mov
push
lods
je
int3
test
cli
pop
push
in
addl
ret
sub
cmp
xor
cmp
bound
test
out
in
movsb
inc
or
add
jle
mov
add
xchg
and
and
outsl
js
push
sbb
sub
les
mov
fadd
hlt
mov
movsl
push
sbb
adcb
out
aaa
xchg
test
pushl
mov
nop
nop
sahf
cmpsw
push
ret
je
and
repnz
mov
loopne
andb
std
jo
call
inc
push
xlat
dec
jp
dec
mov
aaa
les
mov
jl
ljmp
xchg
je
stc
test
lods
jl
jle
cli
in
adc
repz
loop
lcall
mov
aam
movsb
jecxz
jne
jnp
mov
mov
clc
push
dec
push
or
sub
or
push
add
fmulp
bound
sub
fnsave
lret
cmp
sub
out
cmp
cmp
xor
cmp
fildll
repnz
lock
loopne
add
ret
out
mov
nop
sub
push
cmp
mov
sbb
xor
pushf
flds
loopne
iret
es
jns
movsb
push
and
push
xchg
movsl
xor
xlat
sbb
inc
out
out
jecxz
jp
mov
mov
mov
jne
jl
fdivrl
ss
and
mov
sub
mov
mov
mov
addl
dec
xchg
data16
lahf
lods
aad
cmpsb
mov
movsb
add
out
and
es
and
imul
push
scas
and
jp
push
add
pushl
push
test
decl
adc
push
insl
lock
adc
orl
fcmovbe
pop
lods
adc
and
call
cli
cmpsb
ficoms
push
or
xchg
push
into
push
enter
arpl
cmp
ja
test
xor
negb
pop
ja
pusha
jle
stc
mov
mov
xor
popf
aaa
pushf
notl
xchg
popf
orl
stos
or
adc
pop
xchg
insb
push
rcll
js
repz
push
mov
fists
push
or
es
lcall
mov
mov
sub
pop
pop
lock
js
jae
scas
stos
cmp
ds
insb
xchg
cwtl
xor
inc
push
roll
or
loop
std
inc
or
dec
jle
xchg
jle
ret
aad
jp
mov
jb
push
cmp
push
mov
jecxz
lock
repz
xor
insl
sbb
jnp
test
insl
cltd
sbb
gs
lret
push
dec
rolb
dec
inc
or
adcl
in
jl
ja
out
dec
test
movsb
ret
out
mov
cltd
mov
xlat
pop
sbb
out
jno
movsb
xor
pop
data16
lahf
mov
sub
inc
xchg
jno
add
push
xchg
call
rcrl
or
xchg
dec
push
or
es
xlat
jl
ljmp
and
jg
mov
jmp
sub
add
inc
add
jmp
mov
inc
stc
cmovl
orb
repz
out
pop
push
xor
fldenv
js
push
add
mov
ss
adc
add
xor
inc
and
dec
jecxz
mov
add
jnp
push
repz
test
dec
iret
xor
mov
cli
call
and
push
lds
in
push
shll
or
lods
fwait
shl
les
jnp
in
aam
pop
xchg
mov
dec
mov
js
pop
mov
push
or
stos
std
fcoml
xchg
xor
dec
scas
xchg
clc
and
in
and
lret
sahf
cmp
mov
sub
outsb
jl
int
cld
loop
jae
pop
test
push
xlat
loopne
dec
fimull
lds
inc
pop
mov
in
rorb
aad
push
xor
inc
sbb
int3
shll
dec
lods
lcall
or
andl
xlat
jb
push
jns
sbb
pop
fiadds
jp
in
mov
or
pusha
pop
adc
mov
sarl
ja
push
xor
in
jle
or
or
cwtl
jp
and
notb
in
mov
xor
push
and
outsl
jl
mov
mov
fdiv
xchg
rorb
les
xchg
test
dec
das
jne
sub
enter
stos
adc
daa
adc
lcall
add
inc
hlt
dec
lcall
dec
or
mov
shrb
int
inc
aas
out
call
mov
mov
fstl
loope
jnp
jbe
and
jp
push
pop
inc
xor
mov
cmp
loope
aam
aam
lods
and
testl
je
mov
xlat
push
sub
and
ja
mov
push
cmc
mov
es
adc
jnp
cwtl
nop
jge
dec
add
sbb
imul
jmp
adc
rcll
and
in
pop
orb
xlat
scas
scas
push
mov
sbb
cmp
ljmp
pop
cltd
lahf
inc
cmpsl
rol
inc
xchg
xor
sahf
push
addr16
xchg
mov
out
rorl
fs
stos
popf
xchg
aad
fcmovbe
or
scas
inc
inc
xchg
mov
sub
inc
push
testb
sahf
dec
mov
cmp
dec
mov
cmp
jo
lods
sbb
je
sub
lea
out
loope
hlt
xchg
mov
stos
mov
cmpsb
out
cmp
or
sub
mov
in
dec
xor
and
and
mov
mov
mov
and
out
xchg
fsubr
aad
jmp
inc
mov
testb
enter
push
rcll
cmpsl
bound
test
cmp
adc
jp
mov
inc
adc
push
fldt
jae
mov
xor
cmp
shr
mov
or
inc
rorb
add
fdivl
int
push
cmp
mov
cmpsb
pop
mov
repnz
dec
jo
push
rolb
scas
push
xor
sti
aas
push
mov
aas
sarb
int3
push
add
and
jmp
je
bound
mov
jne
fimuls
pop
adc
psubb
cltd
lods
xor
lea
lods
andb
loopne
mov
call
bound
pop
mov
sub
or
ret
or
inc
sub
lahf
push
stos
loop
pusha
lds
rorb
insl
fldenv
gs
pop
rorb
push
ret
push
pop
in
jne
popa
mov
cs
shrb
and
int3
enter
mov
pop
mov
stos
test
out
shlb
xorl
xchg
int3
fldt
shlb
push
movsb
enter
push
cld
mov
sbb
sbb
xlat
push
lea
adc
sbbb
push
jecxz
jnp
xchg
push
push
in
sbb
xchg
add
or
xchg
das
inc
xchg
ja
in
fidivrs
mov
call
dec
pushf
sbb
push
insl
lahf
ja
dec
cmp
dec
mov
pop
nop
movsl
dec
sub
xor
aad
pop
insl
ret
pop
dec
fisttps
sub
rcr
movsb
xor
pop
dec
int
fistpl
cmp
pop
and
mov
data16
insl
test
inc
mov
dec
add
lcall
jl
and
mov
or
dec
sbb
lods
xor
jbe
pop
and
sub
jmp
inc
in
or
mov
xor
cltd
aaa
push
outsb
mov
mov
pushl
sahf
popw
jbe
rol
sub
jbe
data16
loope
in
fisttpll
adc
adc
cmp
sarb
jae
lahf
ret
repnz
test
pop
mov
or
sti
dec
push
outsb
cli
adc
flds
inc
push
imul
outsb
mov
sbb
das
mov
jne
mov
xor
inc
xor
mov
fldenv
cwtl
jne
dec
jl
lret
ror
sbb
shlb
push
dec
sbb
pop
stos
gs
xchg
in
add
xorb
dec
mov
popa
out
jle
push
sbb
xor
rcl
xchg
jge
sub
jo
lcall
sub
inc
pop
in
ss
add
dec
and
hlt
test
inc
std
fdivp
test
imul
sbb
jge
shrl
sbb
xchg
mov
out
subb
push
mov
scas
mov
insl
rcrb
and
pushf
and
mov
mov
adcl
lods
xlat
mov
inc
lcall
dec
adc
pop
sub
or
hlt
adcb
fstl
insb
push
mov
mov
inc
cmc
clc
icebp
sahf
cwtl
sahf
lock
lods
mov
shr
cmp
test
sti
ds
add
jmp
insb
arpl
and
push
mov
arpl
xor
mov
sub
lret
mov
mov
push
xor
push
lea
push
mov
jmp
xor
mov
inc
fisubl
mov
lret
cmpb
mov
inc
jno
es
sbb
jae
jecxz
mov
inc
stc
inc
cld
xchg
push
fwait
scas
ficoms
mov
push
lds
mov
pop
ret
in
je
push
jecxz
and
xchg
jbe
inc
icebp
push
cmp
xlat
sub
pop
mov
lret
leave
jo
dec
adc
pusha
ret
test
pop
mov
ficompl
mov
sarl
pmaxsw
test
cmc
daa
out
jp
call
pop
enter
shrl
mov
mov
scas
xchg
sub
jae
xchg
or
mov
in
das
lock
mov
dec
mov
push
jo
arpl
loop
enter
jp
push
pop
test
jl
es
jg
mov
and
or
inc
mov
pop
lods
test
sarb
xlat
mov
mov
jg
mov
imul
add
out
adc
sbb
stos
jbe
pop
testl
add
push
dec
loope
rclb
loop
jns
add
cld
mov
push
mov
lcall
push
inc
int
js
cmc
scas
or
ror
ror
sbb
ror
imul
dec
mov
decl
ret
jg
aaa
lds
dec
cmpsl
push
sahf
js
push
outsl
mov
into
sub
aad
fdivrp
sbb
mov
pop
data16
pop
das
or
hlt
lea
lret
sbb
mov
mov
or
add
or
mov
dec
out
mov
mov
mov
jbe
xor
mov
std
sub
push
xchg
mov
xlat
testb
add
push
subb
fwait
loopne
imul
lahf
test
es
sti
xchg
inc
mov
push
cmpsl
sar
outsl
insb
out
cmp
fucomip
shrb
aad
inc
or
cmpsb
clc
pop
adc
adc
cmpsl
mov
cs
rclb
lods
sbb
sbb
mov
lcall
xchg
mov
mov
push
mov
je
mov
pop
jl
rorb
popa
fwait
sub
insb
scas
flds
fs
dec
xor
clc
lods
hlt
js
lods
cmc
fbstp
sbb
cmp
stc
ss
inc
dec
or
sub
imul
pop
fidivs
fs
lcall
mov
sahf
jno
dec
and
mov
cmp
or
aam
insl
mov
and
movsl
leave
out
adcl
jle
mov
and
xchg
mov
lods
jmp
icebp
mov
mov
jp
cmp
insb
out
add
pop
lea
pop
and
sti
push
scas
mov
shll
mov
sbbl
add
fstpt
pop
rol
mov
cmp
insl
scas
cmpsb
js
push
sarl
nop
stc
sbb
push
cwtl
cmp
test
aam
mov
xor
xor
cmpl
pop
inc
adc
ljmp
mov
js
outsb
adc
mov
in
xchg
jp,pn
push
movl
mov
sbb
imul
test
rol
dec
push
mov
in
add
or
pusha
andl
pop
push
push
sub
add
or
pushf
xchg
pop
imul
icebp
dec
data16
cs
jb
pop
mov
call
loopne
ds
jbe
mov
mov
into
push
loop
gs
sbb
fwait
or
clc
sbb
icebp
cmp
push
insl
xchg
fidivs
pusha
mov
add
stos
js
xor
pusha
jnp
dec
mov
mov
or
daa
addr16
rorl
mov
cmp
hlt
inc
std
repz
roll
loopne
fs
pushf
gs
cltd
out
inc
dec
fs
sbb
xchg
mov
stos
mov
inc
icebp
cld
outsb
inc
jle
fs
jo
or
inc
mov
xor
mov
mov
cmp
dec
lret
xor
xchg
add
es
fwait
test
xor
inc
popf
iret
and
cmp
xor
daa
pop
jmp
inc
jb
aaa
and
push
jle
pop
fcompl
pop
jmp
dec
pop
sub
mov
test
notl
cwtl
sbb
and
or
sub
jb
cmp
in
cmpsl
cmpsl
pop
jne
fdivl
les
rcl
jg
repnz
xor
rolb
loop
imul
pop
test
mov
xchg
dec
xchg
lds
push
jae
xor
sbb
xor
jle
add
xor
aam
js
pusha
stos
cltd
aaa
ficoml
jae
loop
mov
sar
outsb
xchg
lahf
and
in
mov
fbld
js
fxch
lods
out
xor
rolb
pop
lcall
pushf
rcrl
xchg
xor
pop
scas
push
xor
jmp
xlat
add
popf
cmp
sub
rcl
sub
sarb
ljmp
adc
cmp
and
mov
idivl
mov
mov
sbb
mov
mov
mov
sbbl
mov
dec
pop
jbe
sbb
sbb
popa
xchg
push
es
sbb
bound
push
xor
ja
imul
pop
rcrl
inc
xorb
pushw
pop
aaa
leave
cmp
sbb
lea
jne
inc
test
xor
xchg
cmc
lret
mov
push
jge
inc
imul
xor
mov
fdiv
ljmp
cmp
outsl
xchg
call
cwtl
cmp
ds
std
shl
push
outsb
stos
push
dec
les
xor
test
mov
pop
ja
ss
int3
jae
xchg
into
shrl
ds
insb
les
add
cmp
jbe
xchg
jecxz
mov
jge
test
jp
add
sar
test
mov
cmpsl
mov
add
sbb
xor
pop
mov
test
xchg
push
mov
dec
and
sub
outsb
xor
and
addr16
mov
addl
push
jle
scas
ljmp
mov
jnp
jo
sub
mov
sub
call
sub
je
or
cmp
arpl
xchg
pop
pop
imul
enter
mov
pop
mov
sbb
insl
ret
out
jb
push
fistl
fbstp
cs
outsb
mov
push
sbb
fs
rol
cli
mov
pop
or
enter
mov
nop
cmp
xchg
clc
pop
xor
sub
xchg
int3
fsubl
and
mov
les
mov
xchg
adc
dec
in
pop
pop
cld
sub
or
ror
mov
push
bound
outsb
adc
push
insl
cmp
mov
adc
imul
xor
sbb
adc
in
frstpm(287
xchg
rclb
push
mov
jmp
lock
xor
pop
cmp
inc
jmp
sbb
inc
fdivs
sub
and
sub
lods
add
push
test
mov
jae
aad
mov
dec
push
xchg
pop
add
push
sub
pop
mov
xchg
addr16
mov
imul
cmc
enter
loopne
jle
sub
and
mov
push
pop
cld
jae
pop
arpl
enter
pop
xchg
fcomps
aad
es
add
dec
enter
fstps
push
rclb
cmpsb
lahf
sbb
mov
in
xchg
or
fcomps
mov
pop
dec
inc
mul
xor
ss
jbe
dec
cmc
sbb
outsb
and
daa
inc
mov
movsl
pop
push
pandn
mov
mov
or
sub
inc
int
xor
cmp
jns
loop
inc
cmc
push
out
push
ret
pusha
mov
rcrb
mov
jnp
add
xchg
aam
dec
mov
in
sbb
aas
xor
and
or
fnsave
and
jo
push
xchg
pop
leave
mov
sbbb
scas
mov
sbb
push
jecxz
pop
movsb
out
xor
insl
xor
push
inc
cmovp
mov
ja
pop
sbb
pop
or
imul
add
jne
and
or
mov
jae
test
cmp
cmp
dec
arpl
adc
and
push
fisubrs
ss
inc
xchg
aas
or
sahf
scas
repz
test
push
cmpsl
filds
sar
je
les
sbb
test
and
lds
bound
loope
add
xchg
inc
pop
jmp
shl
and
sbb
sub
cli
pushf
ds
push
mov
inc
cmp
add
or
addr16
bound
inc
out
in
adc
xor
lret
out
add
jbe
enter
cmp
inc
scas
int3
pop
xor
pop
mov
out
push
or
jg
jbe
cmp
test
testb
addr16
jg
cmp
inc
and
into
icebp
sbb
jno,pt
and
dec
popa
dec
repz
lea
sbb
mov
insb
xchg
pop
scas
test
cmpsb
je
jg
js
lock
xor
cld
adc
mov
shrb
cli
mov
dec
out
addb
subl
inc
push
movsb
or
jge
in
out
cwtl
mov
pop
out
or
sbb
adc
es
inc
mov
jbe
adc
or
jmp
dec
addb
in
mov
lret
adc
pop
jle
jle
fstl
push
add
or
sysret
sbb
xor
sub
ret
je
les
add
inc
cmp
mov
pop
mov
insb
or
cmp
les
adc
dec
mov
shlb
sub
popa
xchg
pop
lea
jle
mov
jbe
or
mov
stc
jbe
outsl
jo
add
sarl
lds
sbb
cmp
loopnew
lods
or
lcall
clc
pop
in
pop
ja
push
aam
mov
sub
sbb
dec
mov
mov
adc
sub
movsl
sbb
xchg
addb
jne
sub
cs
add
rcl
inc
add
cs
dec
imull
aas
lds
adc
push
and
or
pop
aam
sub
xchg
fsubp
add
mov
pop
imulb
into
movsb
ljmp
adc
std
adc
jl
sahf
imull
pop
jmp
pop
lock
mov
test
testb
lea
mov
xchg
fidivrl
lds
fists
adc
xchg
popf
cmp
mov
roll
nop
dec
ret
pusha
push
je
xor
push
cli
fstpl
mov
dec
mov
cmp
jl
add
repnz
adc
or
and
jmp
cmp
dec
lret
jle
or
pop
cmp
mov
sahf
xchg
adc
cmp
jecxz
movsb
sub
push
push
mov
jno
mov
xor
push
int3
clc
loopne
scas
xchg
push
shll
dec
scas
add
mov
push
xor
int3
jae
arpl
loopne
addr16
fcmovne
adc
cltd
loope,pn
das
sbb
lahf
push
jbe
ja
idivb
inc
jns
mov
loop
lahf
push
out
add
aam
and
notl
mov
adc
push
ret
bound
fadds
aad
sbb
cli
bnd
negb
push
mov
lret
dec
cltd
into
stos
leave
xchg
mov
jge
icebp
add
loope
adc
scas
cmp
rcr
decl
mov
adc
adc
xor
adc
movsl
scas
fs
sub
pop
xchg
addl
xlat
shlb
rcrl
movsb
jle
jl
cmp
data16
aaa
pop
ljmp
in
dec
mov
sub
icebp
cmc
loope
adc
cs
aam
jg
out
cmpsb
push
push
adc
xchg
mov
cmp
and
popa
insb
push
and
jb
or
in
in
int
jnp
loop
test
jnp
inc
add
dec
xchg
sbb
es
lea
push
cmpsl
push
insl
in
xor
cltd
cmpsl
xor
outsl
cmp
xchg
loope
int3
mov
push
xor
ss
cltd
xchg
cmpsl
xchg
add
xchg
ret
js
insl
mov
mov
movsb
into
and
hlt
xor
cmpl
jo
das
push
inc
pop
je
ja
call
call
scas
xorl
es
div
les
fisubrl
xor
and
outsb
cmc
iret
cmp
ja
notb
in
aad
sbb
enter
push
cwtl
push
xchg
iret
jb
cmp
test
inc
xor
fsubl
pop
add
push
lock
xchg
outsb
daa
mov
mov
push
lret
cmc
pop
test
inc
out
sbb
jb
movb
aam
add
xchg
jmp
into
push
mov
arpl
mov
xchg
mov
sub
cmp
jo
push
pop
sti
pop
dec
call
movsl
dec
stos
icebp
sub
mov
movsb
adc
mov
fsubrl
pop
mov
cmpsb
dec
sarb
push
dec
mov
xlat
idivb
popa
jb
mov
pop
push
loope
mov
stos
mov
outsb
and
sbbb
fistps
loope
dec
in
cmpsb
adc
jo
outsl
insb
into
repz
lcall
mov
int
sbb
cld
out
adc
les
jbe
xor
mov
pop
rclb
leave
xor
rol
std
in
xor
jae
adc
pop
stc
mov
popf
les
movsb
add
aad
cmpsb
push
pop
lcall
xor
adc
fbstp
adc
jae
adc
fcom
pusha
jp
pop
shll
add
xor
loope
cmp
insl
int3
aas
xchg
inc
popa
in
jne
inc
xchg
stos
mov
dec
imul
pop
sub
in
mov
pusha
in
pushw
jg
int
pushf
mov
and
dec
mov
sub
pop
or
gs
sbb
cld
bound
jge
xchg
cwtl
mov
fcomp
pusha
jl
push
or
jne
cmp
sub
pop
jmp
les
mov
mov
cwtl
jno
mov
mov
andb
fsubl
xor
dec
sub
das
inc
ret
cmp
add
dec
mov
push
fdivrl
movsb
pop
jmp
mov
dec
jb
pushf
jnp
inc
pop
rolb
push
and
lcall
xor
jge
inc
mov
fwait
dec
mov
and
clc
pop
sarb
cmpsl
adc
nop
pusha
stos
jb
inc
dec
cmc
aam
push
lcall
push
pop
cmp
imul
mov
sub
imul
cmpsb
jp
int3
pop
inc
lea
pushf
jmp
fadd
into
mov
dec
inc
and
xor
and
jb
jp
fisubrs
pop
pop
mov
jge
mov
stos
or
test
dec
inc
pop
sahf
arpl
xor
mov
fs
mov
add
scas
jnp
fistps
xchg
js
fisubs
adc
xchg
push
sub
jbe
call
lcall
call
sbb
imul
fnstsw
lock
dec
aaa
lret
out
xchg
cltd
jnp
int3
add
xor
mov
lret
push
punpckhwd
inc
mov
inc
inc
pop
jae
jae
mov
test
dec
sub
mov
sbb
mov
mov
pop
pop
jae
lods
adc
js
xchg
inc
pop
lea
xchg
pop
subb
shll
pusha
cmp
mov
jnp
xchg
out
lret
mov
xchg
pop
add
data16
jg
push
mov
mov
bound
push
mov
fcmovnb
sbb
cs
stos
pushf
push
xor
das
lock
icebp
sub
mov
imul
mov
mov
xchg
and
sub
adc
ret
dec
outsb
or
enter
clc
xor
imul
sbb
mov
sub
vlddqu
pop
pop
aas
insb
mov
arpl
cmp
clc
loop
sahf
outsb
sub
ja
daa
es
sub
pop
xchg
and
push
or
push
nop
dec
out
clc
aam
lock
mov
jo
outsb
int
pop
lret
imul
pop
sbb
xchg
cmp
mov
adc
pop
sti
mov
pop
lahf
insb
ja
mov
mov
cmp
mov
sub
jae
fisubrl
movsl
pop
in
xor
in
push
add
imul
fldl
add
inc
mov
pushf
xchg
jbe
dec
xor
in
sbb
loop
and
inc
test
je
mov
push
loope
lods
pop
dec
dec
stos
add
push
jb
call
lea
testl
in
pop
and
iret
fneni(8087
xchg
cmpsl
nop
fldcw
fsubl
mov
ja
data16
pop
out
leave
inc
fdivrs
push
mov
jae
inc
push
inc
dec
pusha
imul
xchg
xor
sbb
mov
aas
imul
jne
push
fwait
in
sbb
push
loop
mov
pop
xlat
orb
jl
push
mov
enter
add
cld
test
xor
jecxz
xor
add
push
xchg
push
aam
xchg
insb
jno
das
dec
in
add
inc
mov
test
in
iret
xchg
mov
sbb
dec
fcmovbe
in
aam
adc
xor
mov
scas
and
push
xor
out
or
pusha
and
popa
inc
enter
cmp
data16
fcoms
xchg
inc
fcompl
dec
jnp
addr16
mov
clc
mov
jp
sbb
add
sub
mov
mov
sbb
mov
dec
mov
stos
enter
jae
sub
outsb
ss
adc
lret
dec
push
mov
push
add
icebp
jne
enter
incb
fistl
bound
jno
insb
mov
pop
sbb
xor
jb
imul
jo
inc
fcoml
mov
ss
pop
mov
xor
jne
imul
fsubrl
repnz
dec
divl
cmpsb
jnp
sbb
ss
stc
push
rcr
pop
roll
or
xchg
push
insb
cmpsl
in
into
mov
xor
inc
lea
shrb
add
adc
fcmove
les
sub
mov
insb
ret
pushl
fcompl
mul
dec
test
sbb
out
inc
imul
cld
out
mov
test
sub
adc
adc
decb
xchg
adc
int
popa
bound
cmp
dec
es
adc
adc
mov
mov
pop
insb
repnz
or
sbb
push
mov
stc
mov
sub
aas
cmp
cmp
push
xchg
fidivs
jge
out
inc
lock
cmpsb
adc
out
mov
xchg
push
cmpsb
mov
enter
cmp
sub
in
mov
into
dec
mov
je
into
push
jno
jo
sbb
cs
into
add
inc
mov
jb
dec
jl
call
mov
or
iret
cli
iret
pop
popf
imul
les
stos
jbe
pop
xor
pop
push
sub
xchg
and
fs
cmp
cmpsl
adc
outsl
cs
mov
out
mov
test
lahf
xor
push
sahf
ret
jl
push
sub
nop
sarb
xor
imul
out
cmpsl
jne
add
aas
push
dec
sub
pop
pop
push
les
sbb
lret
jle
loope
inc
insb
inc
insb
mov
mov
scas
sub
test
xlat
push
movsl
sub
stc
push
arpl
in
cmp
pop
outsb
mov
ds
xchg
pop
in
and
clc
xor
cltd
mov
xchg
popa
mov
jne
out
repz
fsubrs
test
popa
fstpt
iret
sarb
push
xchg
movsb
push
dec
xor
gs
and
ja
mov
cmp
xor
xlat
gs
jmp
nop
inc
cli
dec
mov
sbb
mov
sbb
ret
cmp
int
das
icebp
sbb
mov
clc
cmpsl
mov
inc
xor
pop
das
ss
bound
fstpt
gs
in
arpl
insb
sbb
movb
repnz
pushl
fcoml
xor
push
pop
sbb
sti
cwtl
mov
sbb
mov
stos
es
xchg
sub
pop
int
xchg
push
inc
inc
jg
inc
jns
mov
xor
inc
ds
lods
mov
int3
push
fnstcw
and
sub
enter
shrb
pusha
lods
js
cltd
pop
lea
stc
outsl
xchg
xor
mov
lahf
dec
fwait
pop
aad
outsb
or
jae
dec
or
jb
adc
test
loop
cmp
pop
bound
xchg
or
or
pushf
mov
pop
cmpsl
outsl
ljmp
fstpt
lcall
pop
inc
out
pop
xlat
into
stc
shrl
sbb
and
jmp
ret
sub
das
out
scas
pop
enter
dec
add
mov
and
cld
sbb
jb
xor
and
call
inc
cmp
mov
aam
mov
icebp
addr16
fidivrl
fwait
mov
popf
dec
imul
shll
aam
jnp
xor
pop
test
xlat
jae
iret
sub
pop
dec
data16
lahf
add
out
inc
repz
push
xor
mov
test
ret
loope
xchg
fists
loop
or
out
mov
adc
jle
jnp
jne
lods
xchg
sbb
in
addr16
mov
jne
xchg
test
push
out
jg
inc
mov
sub
divb
cmp
push
pop
jmp
out
je
sub
cmpsb
std
pusha
inc
adc
sbb
jne
scas
popa
sbb
roll
lods
lods
jo
adc
or
xchg
test
mov
dec
jg
jbe
cmc
xchg
jnp
arpl
jbe
imul
cmpsl
xchg
shrl
inc
and
pop
push
mov
xchg
mov
pop
pop
cld
int3
jle
pop
int3
out
pop
mov
cmpsb
sub
inc
icebp
adc
dec
xor
xor
xor
jae
push
xchg
fadds
je
fbstp
iret
int3
loopne
ret
inc
repz
mov
xor
out
mov
pop
pop
std
jecxz
xor
scas
cli
jbe
dec
push
pop
int3
sbb
mov
or
or
sbbb
jle
pop
mov
leave
stos
pop
sbb
out
adc
nop
mov
out
test
es
and
out
or
push
pop
jne
dec
cmc
in
test
icebp
mov
mov
pop
dec
in
out
jnp
rcl
faddp
inc
push
or
inc
add
jo
in
aaa
cmp
cmp
xchg
jo
ja
rol
or
jp
repz
jno
cmpsb
out
dec
push
std
xor
sub
loopne
xor
fwait
mov
and
aad
push
push
movsl
in
sub
pop
push
adc
test
addr16
out
or
cltd
stc
pop
sbb
ret
pop
and
fisubrs
mov
sbb
sub
stos
xor
int3
cli
dec
dec
sub
psllq
lock
sub
mov
call
std
adc
filds
dec
push
xchg
adc
fs
jae
push
shrl
outsl
stos
xchg
mov
xchg
mov
dec
mov
mov
sti
movsl
adc
push
pop
fiadds
mov
lret
and
xchg
jmp
fdivs
sarl
lcall
lcall
pop
mov
decl
fs
adc
imul
mov
cmp
ret
lret
outsb
jns
mov
inc
and
sbb
dec
fcompl
pop
call
mov
sbb
cmp
insl
dec
xor
leave
adc
xlat
jp
mov
sbb
inc
push
lods
ret
hlt
es
popa
in
xor
into
push
loop
mov
call
pop
mov
jecxz
rcl
push
add
das
nop
mov
cli
nop
mov
or
dec
in
cli
inc
push
mov
or
popf
pop
adc
or
into
icebp
repnz
clc
push
rorb
mov
or
jne
adc
in
fistpll
addr16
cwtl
adc
mov
sbb
pop
hlt
push
push
xor
and
in
jbe
mulb
inc
inc
mov
shl
repz
cmpsb
mov
shll
into
popa
mov
clc
and
inc
je
cltd
cmp
shrb
mov
add
sbb
fwait
pop
in
test
mov
push
cmp
fmuls
sbb
and
add
loop
ds
popl
bound
adc
and
push
xchg
in
lret
mov
decl
sbb
sti
jle
outsb
adc
adc
loope
ds
cmpsb
adc
jge
cmp
outsb
or
sub
icebp
int3
rclb
pop
mov
add
jge
imul
rcl
push
insb
mov
dec
fcom
xor
iret
mov
leave
call
xorb
subl
xchg
push
int
mov
dec
int3
lea
dec
dec
jg
xchg
in
xchg
out
jbe
bound
icebp
dec
lds
adc
xchg
xor
push
nop
dec
into
ja
cmp
insl
loopne
loopne
mov
aas
push
and
fucomip
stos
push
fidivrl
sub
adc
insl
insb
stc
push
out
xchg
push
ret
mov
mov
push
dec
js
xchg
mov
fisttpl
inc
dec
andl
push
in
mov
or
mov
sbb
loopne
adc
xchg
addr16
aam
pop
pop
insb
xor
jne
adc
jbe
test
adc
add
imul
je
rcr
cmp
sub
xor
or
jae
nop
add
dec
and
dec
cmpsb
pop
pop
lods
movsl
cmp
push
xchg
sbb
or
in
roll
sbbl
mov
pop
cmc
adc
roll
aas
sahf
loopne
dec
imul
adc
addr16
mov
loope
popf
mov
mov
xchg
inc
les
push
out
push
adc
mov
cmp
xor
adc
mov
nop
add
rorb
mov
icebp
movsl
lahf
fdiv
lds
popf
nop
jecxz
sbb
ss
pushl
sbb
pop
enter
rol
xor
sub
jae
or
add
add
sub
mov
lods
adc
orb
iret
fcmovnb
iret
cmc
push
mov
cmp
fs
imul
insb
pop
dec
and
jecxz
adc
xor
xor
xchg
div
sbb
mov
mov
or
repnz
fs
inc
imul
ss
jae
clc
adcl
loope
push
cmpl
stos
sbb
cld
dec
int
pop
hlt
es
mov
push
inc
mov
std
lret
jge
test
push
or
scas
out
cmp
mov
jnp
shrl
outsl
push
test
mov
lret
cwtl
push
out
jns
push
ja
mov
cmc
leave
outsb
dec
mov
or
or
dec
mov
dec
and
mov
mov
fidivrl
xor
sbb
push
pushf
pop
popa
repz
int
stc
aam
and
pop
adc
inc
sti
stos
dec
pop
add
lods
jmp
and
jns
or
and
xchg
in
mov
mov
bound
cmp
fstl
div
sbb
adc
pop
fnclex
loopne
sub
in
jbe
or
sub
add
sbbb
js
mov
push
or
dec
mov
cmp
pop
rol
push
fs
popf
js
sahf
mov
mull
js
xor
out
push
test
xor
dec
shlb
idiv
inc
outsb
cmp
das
jecxz
lock
movsl
jle
and
lahf
in
xlat
jae
dec
pop
inc
cli
pop
push
add
mov
les
lcall
adc
cld
aad
push
add
rolb
push
imul
cmp
xor
test
xor
and
lds
sbb
sub
mov
mov
sub
ds
cmp
jg
pop
inc
pop
in
bound
out
dec
dec
mov
mov
gs
xchg
lock
clc
push
cmpsl
scas
lock
add
sub
cmp
push
jo
inc
lea
add
mov
push
jmp
inc
or
inc
arpl
or
testl
or
sub
jns
inc
mov
fucom
push
push
jns
aad
xor
dec
push
add
push
xlat
push
inc
mov
jb
cwtl
dec
jg
mov
or
rcll
mov
cmp
je
xchg
xor
add
cmp
in
pop
push
or
sub
mov
push
repz
out
loopne
lods
lret
push
xor
lods
js
sbb
jp
fisttpl
int
sbb
cmp
outsb
mov
inc
fimuls
xchg
jae
and
push
fwait
stc
add
add
out
outsb
adc
mov
imul
es
lahf
xor
sub
jp
mov
xchg
xorb
call
xchg
hlt
mov
jb
xchg
mov
cli
adc
pop
xchg
or
mov
sub
or
call
shrb
clc
pop
movsb
inc
roll
mov
push
or
sbb
les
jb
mov
stos
and
or
mov
mov
xor
or
sub
mov
xchg
cmp
lret
cmc
adc
das
mov
mov
insb
jb
adc
lret
pusha
cmovbe
xor
or
jb
or
push
or
out
sbb
cmc
addr16
jns
out
shll
inc
jo
add
dec
ljmp
mov
jne
arpl
sub
loop
pusha
mov
gs
leave
fidivs
mov
movsl
out
pop
jge
sub
lock
mov
loope
jno
mov
mov
mov
mov
insl
nop
pop
cld
xor
movsl
sbb
and
gs
insl
adc
rcr
mov
xchg
shrb
xor
xchg
sub
cmpsl
push
cmp
andb
insb
push
call
adc
add
je
cmc
xor
sti
arpl
inc
push
cld
int
ret
in
out
lods
inc
daa
stos
jp
xor
call
jae
out
test
xchg
call
aam
gs
subl
pop
xor
jb
xchg
or
lds
rcrb
lds
push
pop
jl
push
mov
imul
cmp
arpl
bound
mov
inc
shlb
jp
mov
int
cmpsb
insb
cli
fstpl
push
mov
sbb
push
jg
mov
jae
xchg
jmp
hlt
jae
cli
add
mov
pop
sub
or
mov
adc
adc
jle
cmp
and
aaa
fsubs
jecxz
ds
mov
lods
cmp
push
add
xchg
dec
repnz
inc
cmp
xchg
ljmp
adc
mov
das
mov
mov
pop
adc
xchg
mov
jmp
push
push
std
fs
pop
sahf
pop
sbb
hlt
std
sbb
jl
sbb
outsb
mov
sub
scas
mov
cmc
pop
in
ss
adc
xor
adc
jle
sbb
jle
imul
les
sahf
pop
add
loop
mov
test
mov
jns
int3
push
mov
mov
aaa
ficomps
inc
inc
lcall
mov
mov
jb
xor
stc
mov
sbb
dec
ret
aaa
adc
cmp
jmp
xchg
sbb
inc
xchg
push
hlt
ret
stos
mov
add
inc
mov
mov
je
adc
sbb
sub
scas
pusha
sbb
ss
add
fdivs
or
aam
pop
lods
dec
jecxz
pop
push
jb
cs
stc
dec
and
loope
jnp
push
inc
lds
pop
sub
and
jnp
lea
mov
pop
test
pop
mov
pop
daa
scas
pop
lds
adc
xchg
xlat
ljmp
xchg
stos
xchg
inc
or
and
aam
dec
adc
outsb
adc
daa
inc
fldenv
into
gs
dec
jmp
mov
inc
scas
xorb
add
scas
inc
mov
jo
cli
sahf
frstor
data16
lods
xorb
ljmp
pop
cmc
in
inc
adc
mov
push
pop
mov
and
hlt
or
popa
test
mov
sbb
cmp
les
push
test
push
push
subl
cwtl
clc
xor
outsb
xchg
mov
cmc
xor
sbbl
mov
jnp
pushf
scas
inc
test
hlt
lcall
stc
fidivrl
xor
inc
insb
fnstenv
iret
xchg
pop
lahf
push
jae
mov
push
sub
push
and
cs
and
push
mov
scas
test
cltd
imul
lods
je
in
sarl
and
pop
jp
cmp
mov
dec
jb
shlb
fsts
mov
pop
mov
adc
lds
loopne
sbb
xchg
xor
in
or
mov
or
adc
imul
and
inc
imul
dec
into
rcrl
fst
std
inc
sbb
add
mov
lea
cli
sub
xor
and
jg
jecxz
test
in
jae,pn
push
cmp
cwtl
xchg
mov
cmp
rorl
mov
nop
jge
outsl
dec
lahf
in
xor
or
cld
and
loop
cmp
dec
cltd
negb
mov
push
shl
test
lcall
cmp
clc
and
scas
mov
push
sub
sbb
call
dec
inc
aas
xchg
je
mov
mov
sub
push
call
ja
jno
repnz
cltd
xor
dec
push
xchg
xor
or
add
pop
or
or
popl
mulb
and
frstor
popf
mov
mov
or
fcmovbe
xchg
adc
imul
neg
ss
mov
es
stos
xor
out
push
sbb
outsb
arpl
dec
xor
add
or
or
cli
mov
fsub
cmp
cmpsl
add
rorb
pop
cmpsb
fdivl
gs
sub
pop
cmp
jno
repz
arpl
aas
cltd
ret
lret
scas
mov
mov
mov
imul
testb
xor
inc
cld
ffreep
lds
scas
rorl
jmp
mov
insb
dec
loope
mov
lock
clc
mov
imul
pop
lahf
mov
xor
aad
or
inc
call
ficomps
cmpsl
ficoml
and
cmp
loopne
jnp
lcall
popf
movsl
stos
pop
lahf
cmp
push
and
mov
scas
xchg
xchg
xchg
imul
leave
in
jp
in
dec
ja
push
ja
pop
push
add
popf
lret
cmp
arpl
pop
and
ret
sub
cs
lret
stos
mov
cmp
mov
sub
mov
inc
pop
inc
nop
lods
das
pusha
iret
faddp
xor
test
inc
std
inc
add
scas
jg
lds
and
xor
daa
push
xchg
push
popa
dec
adc
fidivl
mov
add
add
add
scas
ja
mov
out
out
xchg
out
mov
jecxz
mov
xchg
fdivrs
add
mov
mov
sub
shrl
push
or
sbb
icebp
shll
and
cs
push
popf
xchg
mov
xlat
enter
stc
xchg
adc
insb
adc
cmpsb
mov
dec
inc
adc
cli
sbb
test
add
push
cmpsb
pop
sbb
xchg
xchg
inc
jbe
jb
sub
jbe
repnz
pop
xchg
fs
in
mov
jmp
mov
cmp
or
xor
mov
cmpsl
jbe
mov
lahf
sti
cmc
mov
data16
jmp
inc
mov
rorb
in
dec
andl
popf
adc
js
mov
dec
cli
adc
out
leave
push
add
xchg
test
fdivrp
call
jecxz
ss
mov
insl
push
sub
xchg
int3
outsl
ja
mov
pop
movntq
movsb
lea
mov
cs
out
lods
into
or
imul
pusha
xchg
sbb
jns
inc
out
jmp
in
push
mov
roll
mov
xchg
inc
test
push
xor
mov
pusha
jge
scas
xchg
ja
push
iret
sti
or
dec
mov
push
mov
cli
jno
scas
xor
push
sbb
in
mov
mov
mov
mov
bound
fldenv
insb
outsl
sarb
loopne
pop
loopne
push
popf
fidivs
arpl
imul
sti
adc
mov
cmpsl
pop
mov
mov
add
or
clc
xor
mov
inc
aas
push
xchg
popf
push
sahf
cmpb
mov
cltd
add
fdivrl
je
dec
pop
mov
mov
sub
test
mov
push
dec
call
cmp
aaa
mov
std
pop
pop
push
cli
paddusw
fcompl
jns
jb
inc
mov
xchg
sub
mov
jg
and
sarl
loope
jns
ja
xchg
outsl
xchg
and
lods
aam
fs
fnstenv
xchg
fwait
shl
mov
mov
jmp
xchg
jge
adc
and
push
out
and
data16
push
fwait
or
es
mov
xchg
call
adc
push
sub
fidivl
stos
lods
jns
xor
ss
mov
cmpsb
sub
jl
pop
mov
sbb
xor
inc
imul
test
ds
outsb
adc
incb
pop
pop
ret
and
in
jecxz
dec
sub
inc
cmp
mov
stc
add
and
repnz
sub
pop
and
pop
pop
pop
mov
inc
js
addb
adc
sub
repnz
in
xor
imul
push
gs
jle
add
lcall
int3
and
das
ret
jnp
ljmp
clc
jl
int3
bound
shrb
cmp
int3
cmp
pushf
sbb
push
inc
inc
gs
inc
jmp
sbb
cmp
pop
mov
jno
rcrb
xor
cmp
js
mov
mov
push
imul
data16
mov
ffreep
lcall
push
mov
mov
pop
in
pop
test
cmp
adc
adc
add
jl
xchg
pop
clc
out
fldcw
in
mov
mov
std
sub
sub
xor
rolb
std
or
sbb
addr16
add
fwait
xchg
sbb
mov
scas
jg
push
jo
aas
and
or
adc
decl
jp
jae
pushf
or
loope
or
cmp
decl
addr16
push
out
pop
mov
jle
call
pop
insl
cmp
sbb
pop
shll
inc
test
fmull
xor
push
xchg
pop
xchg
push
jp
xchg
aaa
lret
mov
and
int
and
jne
das
fisttpll
fxch
das
jmp
ret
pop
pop
mov
lods
xchg
decb
outsl
dec
out
leave
sbb
cmp
xchg
test
sub
icebp
or
mov
sbbl
pop
cmp
fcmove
dec
jns
push
outsl
in
stos
cmp
pop
mov
jle
sbb
push
ret
mov
pop
pop
es
push
arpl
imul
lret
push
push
and
dec
or
add
fcmovu
into
adc
testl
testl
or
into
shl
xor
adc
xlat
mov
pushf
or
mov
and
sbb
pop
ss
rcl
in
into
sbb
jp
pusha
or
mov
loope
jno
movsl
xchg
pop
xchg
inc
push
mov
pop
xchg
test
jne
and
add
ja
ja
add
nop
cmp
aas
outsb
dec
cmp
jno
mov
mull
movb
dec
push
out
cmpsb
push
fsubr
testb
shll
and
int3
movsl
xor
mov
pop
imul
not
pushf
test
shll
or
lods
or
fildl
testl
cmp
jnp
add
jmp
mov
pop
int3
dec
xchg
loope
ljmp
mov
in
shlb
ret
fs
enter
rcll
add
and
add
es
xlat
xor
sub
and
mov
repnz
xchg
xor
pop
lret
xor
js
pop
sarl
sub
xchg
out
cli
dec
sub
outsb
cmp
push
insb
popa
sub
mov
js
orb
push
repz
popf
xor
stos
cmp
mov
daa
icebp
mov
pusha
cmpsl
addr16
insl
xchg
inc
sub
aaa
xchg
cmpsl
push
pusha
mov
jb
xor
popa
mov
cmp
xchg
and
enter
push
add
cmp
jnp
lcall
jbe
stos
jge,pt
subl
je
cmp
xchg
add
shll
push
mov
xchg
or
xchg
insb
dec
lods
cmp
outsb
inc
outsb
and
xor
inc
jnp
cltd
xchg
into
cli
cmp
sub
in
ficomps
mov
and
mov
xchg
es
mov
out
icebp
scas
sub
iret
or
pop
adc
ja
test
mov
insl
in
js
inc
dec
outsl
add
mov
add
sbb
mov
pop
shrl
sub
cli
pop
push
shll
jl
xchg
lret
push
lds
inc
test
outsb
and
xchg
xor
fidivrl
add
lods
sbb
push
push
inc
mov
outsl
and
xor
addl
push
jne
pusha
add
into
sub
idivb
mov
lods
les
ficoms
imul
pop
adc
jb
movsl
add
pop
sbb
insb
add
divb
es
ret
mov
lods
xchg
mov
js
sbb
sbb
jg
xchg
jns
in
fnstenv
pop
sarl
adc
into
mov
xor
test
stos
push
popf
cltd
jo
imul
inc
movsl
jecxz
out
popa
out
cld
mov
xor
and
push
jp
cmp
frstor
cmpsl
xchg
dec
push
iret
sbb
call
mov
adc
pop
mov
mov
mov
mov
fdivl
inc
in
lea
inc
js
std
jb
mov
pop
test
cwtl
xorl
pop
nop
xlat
mov
test
dec
bound
popa
repz
xchg
push
lahf
adc
imul
es
ja
ljmp
push
add
mov
add
xor
cmp
or
out
btr
ds
push
popf
adcl
lea
lcall
cld
xor
popa
aad
push
cmp
imul
sub
mov
test
jmp
sahf
mov
ror
rclb
ror
mov
inc
aaa
inc
jb
lods
fisubrl
jo
dec
mov
icebp
das
cmp
dec
cld
movsb
gs
and
sahf
movsb
out
sbb
or
cwtl
and
test
mov
mov
mov
xlat
inc
cmpsl
mov
jge
mov
imul
shl
sbb
es
iret
les
add
dec
add
adc
mov
rolb
clc
or
pop
fld
mov
sub
pop
rcrl
adc
push
mov
jl
push
sub
cmp
jae
dec
aad
and
in
jp
sub
pop
mov
cmp
popa
adcb
out
fldl2t
je
rcrl
insl
jne
mov
pop
stos
rclb
xor
cmp
adc
sbb
jl
loop
shrl
pop
sbb
sub
das
fsubs
adc
adc
lods
ret
pop
adc
push
mov
les
popfw
or
cltd
ret
test
inc
inc
test
scas
lahf
cmpsb
in
stos
jl
jbe
adc
popf
dec
call
and
jecxz
insb
sarl
cmp
mov
xchg
and
in
xor
bound
push
xor
call
xor
add
cs
add
rorb
adc
sbb
mov
mov
or
mov
or
xor
in
pop
hlt
rcrl
push
sub
jp
mov
movsb
pop
mov
movsb
mov
pop
shll
lods
scas
adc
fimull
and
leave
adc
push
in
or
or
clc
mov
cmp
cmp
jo
and
and
loope
jae
add
and
cwtl
inc
out
add
js
in
sub
adc
test
ja
cmc
andb
mov
shll
lcall
jp
inc
test
sbb
dec
mov
jl
mov
or
fisttps
cmp
ljmp
mov
xor
hlt
mov
fisttpl
and
lcall
addr16
out
sbb
cmpsb
aad
pushf
nop
leave
lahf
mov
fldt
jmp
xchg
or
or
and
loop
cli
inc
cwtl
out
xor
adc
and
sbb
push
dec
fstpt
sbb
pop
dec
jle
dec
jg
xchg
cs
sbb
mov
imul
mov
movb
repz
sbb
clc
fs
jno
call
pop
or
jae
pop
arpl
and
movsl
or
push
es
or
cltd
test
enter
dec
ficomps
dec
data16
rcrl
ja
xorb
add
jb
mov
sahf
sub
add
out
mov
out
jb
inc
pushf
cmpb
mov
filds
pop
xchg
mov
imul
jg
subb
das
lods
rorb
mov
out
pop
add
repnz
testl
adc
lret
movsl
adc
out
sarb
mov
call
push
mov
clc
int3
rcll
mov
add
cmp
out
cltd
mov
fisubs
cwtl
dec
xchg
xchg
addr16
sahf
daa
dec
popf
cltd
out
mov
fdiv
push
in
push
shrl
mov
andl
fwait
sub
shlb
mov
fiaddl
mov
adc
xchg
in
dec
mov
repnz
dec
jl
mov
test
cmpsb
dec
mov
push
shrb
in
imul
sbb
hlt
rcl
fmull
les
scas
addr16
in
ret
dec
xchg
inc
loop
cmp
adcl
cmp
nop
iret
pop
push
cwtl
xlat
iret
adc
loope
test
fimuls
add
mov
icebp
cmp
loope
lock
jl
ret
push
insb
scas
in
movsb
in
lock
xchg
jno
lahf
fwait
stc
das
test
mov
mov
data16
mov
dec
fldenv
jge
sar
out
push
iret
bnd
jge
ucomiss
ds
dec
and
push
pop
arpl
adc
dec
gs
xor
mov
mov
loop
aas
xchg
dec
sbb
push
or
adc
mov
mov
int
mov
mov
sub
push
test
mov
bound
xlat
pop
dec
loop
pop
scas
add
jp
sbb
xor
push
push
out
std
pop
popf
stos
pop
out
fwait
aam
jo
adc
inc
bnd
xchg
mov
lcall
cwtl
aas
mov
pop
movsl
ret
fsubl
xchg
sbb
mov
push
push
mov
push
in
mov
sti
in
lods
xor
es
jbe
fiaddl
xor
or
daa
cwtl
jmp
jo
xor
scas
pop
ficoml
push
call
cmp
mov
out
fstpt
push
mov
in
sub
fs
xchg
cmpsl
or
sbbb
shrl
or
mov
cmp
or
xchg
xlat
xor
pop
inc
jne
out
lds
fistpl
ljmp
lcall
aam
imul
mov
inc
xchg
adc
cmp
mov
sub
jg
out
ja
insl
jns
pusha
add
adc
icebp
mov
ja
mov
stos
xchg
imul
sub
lock
imul
cmp
repz
int3
mov
mov
movsl
jmp
inc
insw
scas
mov
inc
pop
dec
mov
sahf
push
test
cmpsb
imul
mull
pop
jbe
cwtl
in
loopne
jmp
mov
mov
push
sti
push
call
stos
dec
mov
or
mov
mov
jbe
out
jecxz
aas
mov
mov
cld
ficompl
jecxz
mov
andl
ret
nop
pop
into
fcmovnu
aad
imul
and
cmp
pop
add
aam
ds
lea
push
mov
aad
dec
sbb
xor
push
ss
lods
stos
cmpsl
div
mov
into
xorb
mov
outsl
test
scas
or
push
into
out
and
std
insb
ds
pop
adc
scas
jp
pop
es
push
inc
jmp
xchg
les
inc
popa
mull
imulb
incb
adc
loopne
repz
or
incl
icebp
cld
inc
call
clc
aas
adc
xchg
jge
movsb
dec
xchg
rcll
mov
add
adc
jnp
out
or
mov
mov
out
mov
add
nop
adc
add
cwtl
mov
pusha
push
shrb
pop
ss
or
out
imul
cmp
ret
push
lcall
icebp
adc
pop
xor
shrb
jmp
movsb
cld
fnstsw
xor
xchg
mov
xor
daa
popa
pusha
push
and
push
push
or
adc
scas
loopne
adcb
adc
movsl
nop
and
adc
dec
dec
cld
lods
clc
mov
popa
mov
mov
xor
cmp
pop
push
inc
mov
and
test
sub
jmp
adc
mov
or
fucomp
pop
jne
test
sub
insb
mov
enter
je
cwtl
mov
jae
and
xchg
call
dec
push
adc
xchg
jmp
leave
loope
push
in
mov
mov
and
xor
call
bnd
out
xor
scas
mov
mov
out
inc
js
enter
aam
subl
mov
push
js
cmc
daa
mov
lea
std
mov
jecxz
xchg
bound
leave
xchg
jnp
sbb
popa
mov
xchg
add
bound
loopne
cmp
xor
jmp
sbb
movsl
and
dec
pushf
cwtl
add
je
or
fldl
pop
mov
pop
lods
jmp
ja
mov
mov
negb
mov
in
mov
inc
dec
repnz
push
or
icebp
inc
jg
mov
aad
gs
bound
repz
and
int
push
xor
pusha
flds
lret
les
pop
mov
in
mov
ret
mov
sub
dec
loop
push
dec
jb
das
sahf
out
cmp
in
incb
nop
push
pop
inc
mov
cmc
enter
xchg
insb
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
push
add
clc
pop
add
sbb
add
mov
add
add
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
pop
or
or
add
in
add
add
add
add
add
add
add
loopne
add
rcrb
push
add
add
add
add
add
add
add
add
add
or
add
fcomps
add
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
or
xor
add
in
add
add
add
add
add
add
add
mov
add
xchg
pop
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
enter
mov
add
in
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
les
add
add
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
pop
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
imul
pop
add
add
add
add
add
add
add
add
add
rolb
add
insl
or
pop
add
add
add
add
add
add
add
add
add
call
outsb
or
pop
add
add
add
add
add
add
add
add
add
adc
add
outsl
or
in
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
add
jo
add
add
add
add
add
add
add
add
add
call
jns
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
in
add
add
add
add
add
add
add
cmp
or
sub
add
in
add
add
add
add
add
add
add
pusha
add
or
call
add
add
add
add
add
add
add
mov
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
rolb
or
or
add
in
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
or
xchg
add
add
add
nop
push
add
mov
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
test
add
rolb
add
add
add
add
add
add
add
add
add
addb
add
or
cwtl
add
add
add
add
add
add
add
add
add
test
add
les
add
in
add
add
add
add
add
add
add
rolb
add
inc
mov
add
add
add
add
add
add
add
add
add
add
clc
push
add
cmp
or
ljmp
add
add
add
add
add
add
and
add
sub
add
in
add
add
add
add
add
add
add
dec
pop
add
fcoms
add
in
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
pop
add
pop
cwtl
or
mov
add
in
add
add
add
add
add
add
add
rolb
add
or
loop
add
in
add
add
add
add
add
add
add
call
cltd
or
mov
add
in
add
add
add
add
or
add
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
sldt
enter
sbb
or
addb
add
add
add
add
add
add
add
add
add
js
add
jl
or
push
add
add
add
add
add
add
add
add
add
mov
fwait
or
sub
add
in
add
add
add
add
add
add
add
enter
clc
fwait
or
js
add
in
add
add
add
add
add
add
add
lock
add
or
les
add
in
add
add
add
add
add
add
add
sbb
add
xor
or
sub
add
in
add
add
add
add
add
add
add
inc
or
add
or
inc
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
or
add
mov
add
in
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
and
or
adc
add
in
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
or
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
orb
add
or
adc
add
in
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
loopne
add
jg
add
and
add
dec
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
fsubs
add
add
add
add
add
add
add
add
bound
add
in
movsb
or
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
push
data16
data16
mulb
mulb
jmp
outsw
jmp
push
outsl
mulb
mulb
jmp
outsw
imulb
outsl
imulb
outsl
mulb
jmpw
outsl
mulb
imulb
ljmp
data16
jmp
data16
data16
jmp
data16
push
imulb
data16
jmp
data16
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
clc
mov
clc
clc
mov
clc
mov
clc
decl
mov
clc
decl
mov
clc
clc
mov
mov
clc
mov
data16
data16
decl
clc
xchg
jmp
jmp
clc
clc
clc
jmp
mulb
mulb
clc
clc
mov
jmp
jmp
clc
clc
mov
push
jmpw
clc
decl
imulb
jmpw
clc
mov
clc
xchg
outsl
jmp
idiv
data16
decl
outsl
idiv
imulb
jmp
clc
mov
ljmp
jmp
clc
mov
clc
xchg
idiv
push
data16
decl
xchg
push
data16
decl
xchg
jmp
clc
clc
clc
clc
xchg
data16
mov
clc
mov
push
testb
mov
data16
clc
xchg
jmp
mov
mov
data16
clc
clc
clc
decl
decl
decl
decl
clc
mov
mov
clc
mov
decl
mov
clc
decl
clc
mov
decl
decl
clc
clc
mov
decl
clc
clc
mov
clc
mov
mov
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jg
push
ja
ja
push
jg
pushl
ja
ja
ja
ja
push
jg
pushl
pushl
ja
ja
push
jg
pushl
push
ja
ja
ja
jg
push
jg
push
ja
pushl
push
ja
push
ja
push
jg
pushl
ja
ja
push
ja
pushl
push
jg
pushl
ja
ja
pushl
ja
push
ja
push
jg
push
ja
div
ja
ja
ja
ja
push
ja
push
jg
push
ja
divl
jg
pushl
push
ja
push
jg
data16
pushl
pushl
push
jbe
data16
data16
push
data16
pushl
pushl
push
jbe
jmp
jmp
outsl
jmp
push
jg
divl
ja
jbe
push
push
data16
push
data16
pushl
pushl
ja
jbe
outsl
jmp
jmp
outsl
push
data16
pushl
push
ja
divl
push
push
data16
jmp
pushl
pushl
idivl
outsw
jmp
jmp
jmp
pushl
push
jbe
mulb
mulb
mulb
jmp
push
ja
push
jbe
jmp
jmp
jmp
jmp
push
ja
ja
push
jbe
push
push
push
outsl
jmp
push
ja
ja
push
jbe
outsl
jmp
jmp
imulb
data16
push
ja
jg
push
jbe
push
push
outsl
jmp
pushl
jg
push
jbe
outsw
jmp
jmp
pushl
push
jbe
data16
outsl
jmp
data16
push
ja
pushl
push
jbe
data16
jmp
data16
push
ja
pushl
jg
jbe
push
data16
pushl
push
jg
jbe
jmp
push
ja
idivl
jg
divl
data16
idiv
push
jg
divl
jg
divl
data16
push
outsl
idiv
pushl
pushl
ja
push
jbe
data16
push
outsl
div
ja
push
ja
divl
divl
data16
divb
jg
ja
push
jg
jbe
push
divl
divl
idivl
jg
jbe
jmp
ja
divl
ja
idivl
jg
data16
ja
pushl
idivl
jg
data16
pushl
push
ja
divl
jg
pushl
ja
pushl
pushl
jg
ja
jg
pushl
jg
ja
push
ja
jg
ja
idivl
pushl
jg
ja
push
ja
ja
push
jg
jg
ja
pushl
pushl
ja
ja
push
jg
push
ja
pushl
jg
ja
ja
ja
ja
push
jg
push
ja
push
ja
divl
ja
ja
ja
push
jg
push
ja
push
ja
push
ja
ja
push
jg
pushl
push
ja
pushl
ja
push
jg
push
ja
ja
pushl
pushl
push
jg
pushl
jg
push
ja
pushl
push
jg
push
ja
push
ja
push
jg
push
ja
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
pop
add
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
pop
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
pop
add
add
and
add
add
inc
add
insl
add
add
je
jae
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
or
enter
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
enter
enter
enter
add
add
std
enter
add
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
lea
xor
lods
test
je
cmp
ja
add
add
jmp
and
shl
lods
test
jne
lods
jmp
ret
add
fimuls
jbe
xchg
cltd
cmc
jbe
cltd
or
insl
inc
and
jg
pop
jle
jo
xchg
dec
push
movsb
shlb
mov
gs
insl
add
gs
in
jg
fxch
sub
jns
mov
imull
cmpsl
addr16
test
sub
sbb
adcb
cmp
nop
aaa
inc
xchg
adc
cmp
mov
xchg
rcrb
out
in
ja
js
xor
mov
out
incb
cs
test
dec
or
mulb
idiv
sub
into
dec
pop
mov
negl
or
nop
movsb
rcrl
imul
lahf
clc
daa
fsubs
ja
mov
cmp
xor
test
inc
lods
dec
testl
mov
js
iret
push
movsb
jge,pn
mulb
adc
imul
lea
sub
mov
push
mov
adc
pusha
inc
or
pop
mov
out
add
fdivrs
and
fwait
stc
popa
mov
mov
movsb
pusha
jg
les
scas
test
pushf
movsb
push
insb
in
dec
arpl
adc
loope
xor
test
mov
mov
xchg
shl
mov
cmp
das
lahf
lock
cltd
add
dec
pop
gs
add
in
call
sti
negb
loope
xchg
cli
movsl
popf
mov
inc
es
cmpsl
outsl
mov
sbb
in
xchg
dec
jg
testl
add
push
xor
dec
cmp
imul
cmpsl
outsl
cmp
and
push
stos
adcb
shll
lock
std
fnsave
ss
ljmp
cli
add
inc
fcmovne
test
push
inc
out
roll
outsb
outsb
mov
or
mov
mov
push
fwait
sbb
fsubrl
push
pop
dec
and
stos
jl
pushw
cmpsl
xchg
pop
cmpsb
in
cmpsl
cmp
fdivr
sub
sbb
popf
sub
repz
adc
shl
dec
repz
fimull
bound
gs
int
shll
cmp
ss
push
daa
fcmovnbe
jg
adc
cmp
adc
or
pop
dec
int3
popa
xor
ss
and
or
cmp
scas
cwtl
cmp
pop
out
out
adc
ret
xchg
or
push
mov
add
cmpsl
or
fstpt
insb
rcll
jecxz
out
push
push
add
inc
pop
lods
pusha
push
or
je
test
mov
mov
enter
adc
ja
dec
mov
xor
mov
sbb
xor
push
hlt
push
mulb
xor
pushf
xchg
pushw
mov
daa
and
jno
stos
and
inc
fiadds
or
inc
mov
mov
inc
test
push
nop
adc
cwtl
pop
stos
adcb
imul
pop
aad
pusha
push
in
push
dec
adc
imul
test
and
jmp
xchg
or
ret
stos
std
jne
aam
dec
outsl
jl
repz
sbb
add
fsubr
pop
adc
adc
inc
adc
and
pop
jnp
cmc
mov
ret
add
push
fistl
xlat
pop
push
adc
ja
iret
sub
aas
jl
adc
push
into
outsl
lcall
dec
mov
or
cmp
aad
adcb
out
xchg
gs
inc
and
je
icebp
xchg
mov
scas
movsl
cmc
dec
jnp
mulb
mov
movsl
jns
inc
test
int
arpl
mov
test
movsb
loopne
and
sti
fs
fnstsw
mov
xor
add
cmc
push
adc
pop
jle
or
subl
loope
rcr
cmpb
sti
ss
and
setne
scas
int
xchg
outsb
sub
mov
nop
jp
mov
cmp
pusha
shl
mov
xorl
repnz
sbb
mov
dec
sub
int3
aad
xor
jmp
imul
push
adcl
dec
mov
cmp
inc
push
or
jno
sub
nop
les
loopne
aas
pusha
lods
pop
mov
gs
lods
andl
sub
or
js
stc
mov
sub
es
or
je
loop
pop
roll
inc
cmpsb
cld
xchg
test
in
pop
sbbb
inc
stos
shlb
add
jno
cmp
mov
aaa
popa
xor
push
cmp
sbb
inc
pop
sub
inc
setbe
pop
enter
dec
jae
test
jp
call
jecxz
adc
ret
xor
das
ret
mov
fiaddl
xchg
clc
loopne
inc
add
les
sahf
xadd
sbb
repnz
hlt
je
dec
sub
xor
jo
idivb
mov
sub
paddusb
or
test
cmp
fidivrl
xchg
popf
cli
jnp
xchg
aas
and
std
sub
inc
push
mov
pop
mov
adc
hlt
int
aaa
arpl
fwait
mov
inc
jp
pop
cltd
adc
add
enter
cs
stos
xlat
mov
adc
pop
les
pushf
jbe
sbb
xor
cmp
pop
push
xchg
rcll
popa
mov
aad
and
into
lods
ja
sbb
inc
sbb
movsb
test
and
fs
or
stc
lods
jp
inc
mov
dec
jg
stos
mov
in
or
dec
or
jecxz
mov
insl
loope
mov
test
movsl
scas
dec
mov
mov
xchg
lock
mov
and
inc
lret
or
jo
dec
adc
xor
or
mov
adc
sahf
adc
mov
cmp
addr16
fmull
xor
or
mov
lahf
aas
fwait
loopne
or
adc
enter
popa
aas
adc
sbb
dec
aad
stos
stc
int3
ds
arpl
stc
and
jae
testb
mov
mov
fisttpll
stc
inc
nop
or
xlat
hlt
jg
lds
into
cmpsl
xchg
fadds
nop
fstpt
dec
cltd
out
jecxz
ret
mov
xchg
mov
mov
mov
in
add
cmp
stos
pop
xor
orl
or
test
mov
mov
mov
mov
mov
jbe
mov
scas
loope
mov
rcll
push
jg
xchg
xchg
cwtl
scas
addr16
jno
jp
movsb
pop
pop
in
decb
and
pop
cmpsl
into
imul
jb
fdivrl
mov
jno
sbbb
fnstsw
call
insb
mov
aas
adc
mov
xor
and
xchg
fisttpl
andl
and
and
ds
loop
cmp
or
sti
mov
jmp
mov
loope
popf
inc
dec
jge
or
adc
pop
stc
push
inc
cmpl
repnz
pop
and
jbe
lods
insl
hlt
dec
jne
push
movsb
mov
mov
insl
outsb
loope
push
imul
leave
adc
or
enter
stos
pop
shrb
gs
fbld
add
cltd
dec
stos
cmpsb
sbbl
xchg
mov
in
mov
es
xchg
xchg
test
and
leave
int3
dec
stos
aas
inc
ljmp
insl
loope
push
jae
cmpsl
xchg
cmpsb
lahf
imul
fldl
shlb
lahf
call
adc
mov
dec
push
jg
adc
and
lock
shrl
sub
jg
rol
sahf
push
leave
xchg
rcrl
movsb
fs
push
ret
push
popa
pop
adc
scas
mov
pop
sbb
mov
dec
stos
movl
cs
in
xor
cltd
fstpt
xor
inc
daa
stc
loopne
add
sub
dec
jns
rolb
test
das
insl
push
addr16
repz
pop
mov
orl
lock
bound
mov
cwtl
fldcw
add
iret
cmp
out
mov
scas
aaa
inc
int3
pop
add
subl
and
nop
popa
idivb
in
xchg
sarl
cmp
mov
orl
aas
push
dec
sub
aad
gs
pop
push
stos
gs
faddl
cli
popa
ljmp
bound
ret
subl
mov
and
adc
test
mov
sbb
enter
shrb
rcll
iret
xchg
xchg
int
mov
pop
and
shll
in
jb
cmp
jle
fmuls
dec
pop
lock
aas
test
xor
scas
imul
and
test
data16
jecxz
orb
sub
mov
mov
in
xchg
xor
xchg
mov
add
scas
add
mov
mov
mov
aad
inc
dec
mov
mov
cmp
dec
xchg
ja
adc
ficoms
add
and
rorl
mov
cmp
pop
push
mov
mov
bound
ficompl
dec
mov
or
call
cli
pop
test
scas
mov
movsl
inc
pop
outsl
ret
data16
std
outsl
sbb
mov
icebp
xor
mov
arpl
pop
jp
jmp
sub
cltd
or
iret
stos
aad
fildl
mov
xchg
sub
mov
sbb
inc
pop
xchg
pop
sbb
mov
in
pop
aaa
dec
sti
jno
sbb
add
les
out
add
inc
rolb
test
aaa
and
push
inc
enter
xor
icebp
cmp
imull
push
xchg
insl
je
lret
ljmp
push
and
enter
ret
inc
inc
mov
das
mov
cmp
in
pop
sbb
mov
mov
aad
mov
dec
loopne
xor
std
rol
or
int3
leave
and
pop
rolb
inc
pop
nop
cwtl
inc
push
jae
in
adc
add
repz
lock
inc
mov
stc
insl
aam
xor
sub
mov
pop
cmp
dec
in
push
in
mov
out
dec
push
mov
mov
iret
sub
jmp
jbe
cs
jmp
pop
dec
js
sbb
and
cld
clc
mov
or
xor
or
mov
loop
ja
xor
repnz
push
sbb
lea
adc
aad
pop
in
clc
out
pop
ja
in
popf
aam
rol
pop
insl
mov
xchg
adc
adc
cmp
pop
add
xor
adc
ds
mov
test
sub
lcall
xlat
mov
fsubrs
or
push
sar
mov
in
push
flds
into
insb
cs
cs
roll
inc
mov
rolb
dec
and
mov
push
cmpl
out
stos
daa
fdivs
jp
add
and
mov
shl
add
imul
mov
pop
lea
aad
negb
not
and
rorb
loop
sub
xorl
mov
push
jge
sub
xchg
inc
imul
inc
cmp
cmpsl
mov
in
lea
es
mov
mov
jp
jmp
inc
inc
movsb
adc
ret
shl
aas
mov
in
push
mov
sbb
xor
cmp
pop
push
pop
xchg
mov
fptan
xchg
jmp
loop
lahf
ficoms
divl
cld
bound
xor
shll
mov
call
push
xor
ds
xor
adc
adc
outsl
int3
mov
add
dec
or
aaa
fbld
hlt
sub
loopne
xchg
push
cmp
mov
mov
jbe
jae
sahf
xor
pop
cwtl
fisttps
cwtl
stos
inc
mov
aam
mov
inc
test
dec
cwtl
push
fistps
test
xor
cmpsl
mov
xchg
mov
add
sub
les
push
mov
inc
sub
jo
outsb
cmp
dec
les
loope
sub
lods
inc
add
push
test
sub
xchg
add
cmc
bound
call
in
fwait
add
aaa
lahf
add
cmp
push
adc
je
adc
test
xor
jp
mov
das
inc
cmp
rorb
sahf
inc
or
arpl
jne
jl
sub
xor
jo
icebp
in
loopne
xchg
loopne
fidivl
addr16
push
cmp
xchg
xchg
rcrl
stos
repnz
lcall
jmp
jne
mov
xor
mov
fsubs
nop
test
xchg
iret
in
cmc
jns
jne
aas
and
jle
je
jns
xor
sub
out
shrl
inc
mov
jge
adc
std
adc
and
in
or
add
mov
sub
call
call
and
add
mov
call
jno
adc
cs
addr16
sub
loop
dec
jbe
shll
push
xor
out
mov
fdivrl
sub
inc
daa
inc
aad
push
aam
add
xchg
push
push
lods
add
push
xchg
xor
sbb
stos
imul
inc
imul
jmp
inc
lcall
jo
sub
into
out
rorb
inc
jmp
mov
pop
aam
in
sahf
cmp
decl
fs
mov
cld
mov
aas
sub
jae
and
dec
xor
pop
sub
ja
ja
inc
movb
jg
aad
mov
cmp
pushf
and
loop
cs
mov
mov
iret
cmc
mov
leave
lock
iret
sbb
mov
lcall
test
mov
pop
cmpps
mov
movsb
push
xor
dec
dec
popa
sti
add
into
filds
xor
sbb
sub
mov
xchg
subl
pop
outsl
jle
popf
insb
and
pop
in
imul
sbb
sbb
inc
mov
incb
stos
or
or
push
in
sub
fisubrl
loope
cli
push
rcr
mov
icebp
mov
imul
hlt
sbb
inc
adc
incl
or
aad
hlt
out
mov
or
ss
jb
mov
mov
fwait
scas
movsl
pusha
rcll
addr16
imul
and
clc
xor
sahf
test
loope
hlt
dec
add
or
adc
jge
nop
push
cmc
or
cmp
movsl
je
int3
adc
int3
mov
or
and
add
and
sbb
or
ds
scas
cwtl
mov
xchg
add
in
jbe
ss
fwait
lods
js
adc
enter
xor
pop
inc
popa
push
jo
mov
mov
cli
in
loopne
and
rol
xchg
mov
mov
and
inc
test
pop
jge
fsubrp
insl
xchg
subps
data16
push
mov
shl
ss
push
push
jo
push
popa
dec
aad
mov
and
pusha
jg
sti
or
test
sub
sbb
mov
std
hlt
xor
cli
subb
out
fscale
or
dec
mov
pop
or
pop
lods
pop
jl
into
mov
mov
or
cwtl
mov
xchg
lcall
loope
insb
pop
push
shl
adc
or
xor
daa
aad
sub
mov
aad
mov
mov
inc
pop
cwtl
sub
mov
bound
xlat
mov
aam
and
jae
jae
movsb
rolb
divb
gs
mov
out
xor
mov
fisubrs
outsb
sub
xor
js
cmp
lods
xorb
sbb
mov
pop
push
notb
jle
mov
stc
mov
jo
xchg
cmp
sbb
sti
adc
and
pop
aaa
dec
sbb
outsb
adc
and
fs
push
pusha
or
jne
mov
scas
mov
xor
arpl
fldpi
cli
jmp
jns
cwtl
sbb
in
jbe
lock
and
and
in
imul
adc
inc
inc
imul
sub
mov
and
mov
addr16
push
test
jmp
inc
mov
int
sub
push
mov
mov
xchg
outsl
pop
sub
pop
or
cmc
push
rorl
out
pop
mov
sbb
cmpsl
mov
push
jecxz
hlt
cli
js
push
mov
mov
push
dec
insl
clc
lcall
or
addr16
ret
sbb
fwait
leave
sbb
pop
scas
insl
test
lcall
push
mov
push
push
push
int3
push
inc
loopne
inc
mov
stos
mov
lea
test
xchg
push
loope
jmp
jl
xor
xchg
lret
loop
xlat
xchg
rclb
or
and
sbb
mov
je
mov
cmp
jae
pop
or
lret
cmpb
jno
and
ja
outsb
scas
add
pusha
mov
lods
out
aaa
cltd
adc
add
outsb
icebp
movsb
jle
push
lcall
xchg
aas
test
popa
rolb
bound
ret
leave
fnsave
sarl
lretw
push
aam
insl
xor
imulb
inc
int3
push
mov
lods
dec
pop
fnstenv
xchg
ss
stc
jg
lods
mov
dec
or
nop
mov
mov
repz
les
mov
mov
xor
fisubs
cmp
icebp
into
add
aaa
push
dec
jle
cltd
jle
cwtl
xor
mov
inc
cmpsb
cmpsb
sahf
data16
mov
ds
movsl
orl
xlat
push
mov
or
jne
pop
cli
outsb
cltd
jnp
jge
push
or
out
add
icebp
mov
lahf
push
jl
dec
out
adc
or
mov
sub
call
sarl
sub
pop
mov
lret
movsl
add
and
or
loop
clc
cmc
ljmp
sbb
into
cmp
lods
adc
cmp
js
aas
sub
lea
imul
sti
push
push
andl
icebp
cmp
dec
stc
ds
in
and
test
push
push
jecxz
and
sub
jno
cwtl
xchg
jbe
fisubs
aas
ficoml
pop
out
push
pop
sbb
inc
adc
xorb
shlb
ja
xchg
push
rcll
ret
cmp
pop
jg
or
lret
xchg
lea
add
xchg
adc
or
aas
sub
xlat
push
mov
lods
js
vmwrite
pop
push
andl
mov
mov
stos
jnp
lret
lcall
push
mov
xchg
orb
jne
adc
rcl
jno
push
sub
cmpsl
out
orl
sti
enter
push
nop
cmpsl
repz
mov
pop
ss
fsts
clc
or
adc
mov
mov
arpl
idiv
mov
inc
mov
mov
pop
cmc
push
inc
insb
fcmovu
push
popf
faddl
ja
ret
lret
rolb
movl
xchg
jmp
sub
lcall
in
push
ret
std
hlt
xchg
mov
xchg
dec
lret
xor
in
das
pushf
mulb
inc
adc
cltd
xlat
and
jl
pop
pop
int
jbe
sub
fldpi
cmp
and
jg
add
pushf
test
loopne
inc
pop
jge
fcoms
jl
sub
aas
mov
stos
in
push
inc
mov
lds
mov
lods
and
mov
xlat
push
add
clc
push
jno
inc
enter
push
in
mov
lcall
push
adc
shufps
repz
or
out
shlw
out
in
bound
cmpl
push
aad
outsl
push
push
push
mov
imul
test
enter
dec
xor
ret
pop
js
into
inc
popa
out
mov
inc
fstps
call
fildll
pop
stc
fldcw
cli
outsb
cli
cmpsl
cmp
push
pop
mov
fiadds
jae
dec
mov
stos
enter
lds
adc
insb
push
daa
xlat
xor
xchg
mov
in
into
mov
rcl
push
pop
lcall
xchg
mov
pushf
in
mov
outsl
xchg
cli
or
fcoms
das
mov
jno
lcall
sahf
fwait
stos
mov
mov
popf
push
jmp
andl
test
dec
jge
or
pop
cmpsb
push
jno
dec
adc
or
mov
mov
cld
enter
ret
add
dec
push
cmp
add
xor
inc
cmp
sub
gs
add
xchg
mov
in
hlt
jns
adc
xchg
mov
stc
mov
mov
stc
aaa
aam
xor
sbb
xchg
movsb
test
cmp
push
inc
cltd
inc
sub
outsb
sbb
xlat
inc
les
mov
mov
mov
aad
jno
shll
xchg
fstpt
inc
mov
sub
repnz
push
pop
es
call
inc
inc
push
cmp
cld
subl
shlb
adc
pop
ret
adc
and
jl
fucom
and
xlat
push
jo
jbe
lahf
cli
add
jae
pop
add
mov
adc
lods
xchg
lcall
roll
loopne
test
jo
xchg
pop
clc
jge
mov
lret
rcr
loope
sbb
or
outsb
xlat
dec
cmpsl
shr
pop
mov
ret
dec
pusha
cmp
movsl
bnd
jl
push
jmp
out
pushf
jp
data16
cmc
jmp
push
jne
xor
cmc
ffree
jle
pusha
mov
push
scas
lds
lret
jnp
mov
imul
mov
push
popf
fsts
fnsave
pushf
mov
mov
cmpsl
jo
fstpl
paddsb
rorb
mov
xor
stc
loope
out
mov
sbb
xchg
add
jo
lods
lds
fs
sbb
out
std
lcall
inc
lret
hlt
fwait
out
cmpsb
xchg
mov
movsb
arpl
cwtl
stc
jge
inc
stos
mov
or
loop
enter
jge
dec
das
ja
jo
mov
add
outsl
ret
pop
push
repnz
push
popa
inc
mov
dec
xor
das
fiadds
test
push
add
stos
shrl
aas
insb
jmp
imul
hlt
mov
cmovl
testb
mov
xchg
stos
or
in
enter
lods
roll
jg
jnp
fsubp
jle
mov
out
loop
scas
mov
sbb
test
in
orl
dec
pushf
scas
fistps
in
xlat
js
xchg
insl
daa
jmp
aam
dec
pop
subb
jae
faddp
lahf
js
mov
sbbl
push
or
in
cmp
mov
fs
stos
or
test
or
pop
adc
prefetcht2
lahf
sbb
flds
inc
lahf
sahf
aaa
jge
jns
aad
jns
sbb
popa
int3
or
int3
insl
out
cmp
pop
ljmp
iret
cld
or
es
fdivl
out
mov
inc
shr
push
popf
dec
int3
jns
and
pop
xchg
mov
in
arpl
xor
popf
repz
hlt
lods
adc
jmp
testl
outsb
pusha
js
cmp
ret
mov
outsb
repz
sub
cmp
sub
faddl
pop
loop
cld
mov
and
std
cmp
pop
fwait
loope
xor
dec
dec
frstor
test
mov
lods
pmulhw
mov
pop
je
clc
cmpsl
mov
mov
mov
lock
pushf
xchg
fs
aad
mov
inc
push
gs
ret
repz
fmull
pop
gs
loopne
push
es
xchg
aas
mov
and
nop
xchg
push
fimuls
sbb
popa
aad
mov
pop
inc
fists
mov
jbe
mov
adcl
mov
mov
cmp
rol
in
xlat
js
out
aad
mov
in
rol
shll
ljmp
leave
ja
and
shrb
stc
shl
xchg
fcmovnu
cs
add
and
lods
inc
stc
mov
xorl
cmp
test
popa
int
jl
adc
jnp
lret
fs
xorb
add
aaa
ljmp
pop
std
and
scas
mov
sub
clc
adc
es
daa
jbe
into
notl
mov
inc
xchg
push
mov
cli
pop
movsl
cld
loop
pop
jecxz
inc
adc
cmp
or
pop
adc
jmp
insb
mov
dec
and
loopne
not
pop
in
jl
bound
mov
jae
inc
jb
cmp
movups
pop
sbb
std
pop
outsl
xor
dec
mov
inc
jecxz
mov
sub
adc
imull
loopne
stos
ljmp
mov
push
pop
lahf
pop
mov
adc
outsl
es
pusha
add
ds
inc
addb
fstpl
call
push
in
and
push
and
sti
xor
xchg
in
jecxz
cmp
xor
add
xchg
stc
mov
mov
add
out
movb
test
sahf
xor
cmpsl
ret
jb
add
fidivl
test
pop
add
add
dec
rcl
sahf
lret
mov
sub
pushf
push
cmp
subb
stc
sub
mov
je
enter
adc
dec
mov
data16
hlt
insl
mov
xchg
fnsave
out
sahf
loope
pop
push
mov
fbld
push
cmp
lcall
jb
adc
push
lahf
int
or
fsubs
pop
aad
cs
and
mov
setbe
outsb
push
inc
es
or
je
pop
push
arpl
outsl
mov
sbb
lock
out
mov
pop
iret
jb
popa
out
into
in
neg
cltd
fadd
add
dec
imul
xchg
adc
out
bound
lock
jmp
daa
sbb
push
ja
mov
xor
lods
or
addb
fnstcw
fbld
js
aaa
or
add
dec
mov
mov
lahf
adc
in
xor
leave
xor
sarl
pop
mov
subb
adc
xchg
outsb
clc
repnz
cmpsl
jne
jns
xchg
shlb
mov
dec
movsl
mov
andb
insw
lea
roll
mov
or
stos
test
icebp
add
jp,pt
mov
ret
sti
pop
and
mov
scas
es
sub
push
rcr
popa
push
arpl
lahf
jo
jne
adc
dec
outsb
cltd
imul
loopne
mov
outsb
test
jno
call
rorb
loop
leave
stos
xor
mov
dec
ljmp
in
mov
pop
cmp
dec
stos
dec
jb
jle
push
lcall
adc
dec
orl
xlat
xchg
cmpsb
push
movsl
cwtl
or
outsl
pop
cmp
cmp
in
cli
push
add
imull
lret
jo
lret
xor
int3
inc
mov
test
loopne
and
rcrb
and
adc
adc
fcompl
dec
out
out
pop
and
mov
jmp
cmp
inc
mov
inc
sub
test
jns
fs
sbb
nop
notb
mov
data16
push
mov
pop
pushf
adc
mov
add
inc
scas
adc
push
cltd
cmc
inc
std
fidivrs
push
fistpl
mov
ds
or
lods
in
pop
and
push
cli
aaa
mov
hlt
lcall
pushf
cmp
lcall
pop
cmpsb
or
mov
add
pushl
dec
push
leave
add
cmp
lock
mov
pop
sbb
or
jge
pop
jnp
cwtl
mov
xor
sti
decl
stos
mov
lea
gs
aaa
les
aad
sahf
hlt
jp
mov
mov
mov
in
std
outsb
clc
in
mov
fadds
mov
or
sti
cmp
jmp
inc
cmp
adc
cmp
mov
xchg
fs
and
and
loopne
data16
pop
in
mov
je
shrl
xchg
int
cld
adc
adc
and
clc
outsl
sbb
stos
push
jns
ds
adc
mov
lahf
int3
mov
dec
sbb
clc
jmp
xor
shr
lret
fsub
aam
rcrb
jae
int3
pop
jmp
gs
sub
mov
mov
mov
mov
adc
sub
mov
push
sti
push
rcrl
loopne
mov
inc
jl
and
mov
mov
fwait
nop
clc
nop
add
push
or
xchg
jns
sbb
stc
out
repz
fcoms
loopne
orl
fwait
mov
dec
out
jb
and
lock
xchg
lods
cltd
movsl
paddb
push
test
jnp
adc
mov
dec
inc
fcmovbe
and
iret
in
mov
into
lock
and
dec
adc
pop
add
xor
aad
rorl
repnz
aad
pop
das
mov
subb
in
adc
addr16
jmp
push
movsl
sub
sbb
sub
inc
inc
pop
and
or
out
fisttpll
and
nop
pushf
dec
aas
mov
or
pop
aad
add
loop
rclb
xchg
sub
call
dec
out
xorl
bound
cmp
sarl
push
or
or
mov
shlb
out
cmp
lret
scas
or
jmp
xchg
cmp
rol
xchg
cmc
in
ret
pop
aam
mov
add
stos
add
loope
mov
dec
insb
push
das
adc
cmp
adc
and
cmp
and
push
in
inc
cltd
dec
jmp
lods
out
cmpsb
sti
push
sbb
orb
xchg
cmp
outsl
mov
jnp
test
dec
fisubrl
push
popf
mov
or
adc
imul
fildl
insb
xor
mov
andl
cltd
gs
call
les
jg
outsl
scas
lds
push
lret
jcxz
mov
sti
enter
mov
mull
stc
stos
pop
inc
cmpsl
ss
clc
pop
cmp
pop
pop
push
adc
ret
and
inc
and
mov
addb
add
test
push
fwait
mov
sbb
inc
mov
sub
notb
inc
aad
movsb
mov
sub
cmp
xor
xchg
xor
xchg
data16
clc
push
jge
sbb
gs
clc
and
push
imul
pop
scas
stos
aaa
inc
xchg
andl
pop
jmp
aam
xor
loope
push
ss
jne
cmp
xchg
push
xchg
shrl
push
aaa
repnz
cmpb
inc
icebp
lods
inc
ljmp
dec
out
mov
jge
cmp
and
data16
xchg
sub
mov
fdivrs
xor
inc
push
push
aad
push
aas
xchg
xchg
jle
iret
sbb
popa
add
inc
sub
pop
mov
dec
mov
jmp
xor
call
in
das
leave
std
scas
andb
nop
fsubr
outsl
fisubrs
cmc
fmuls
in
cmp
fstl
repnz
negl
aaa
pop
xchg
dec
scas
push
dec
jge
cmp
xchg
sub
pusha
xor
movsb
dec
and
dec
push
in
int
or
nop
xchg
nop
fisttps
lock
outsb
ret
cmc
fs
out
inc
stos
pop
mov
pushl
cld
es
ret
and
mov
inc
sbb
call
inc
in
rcl
adc
fucomip
add
pop
and
fwait
or
pop
jecxz
ror
dec
jb
in
push
lock
cmp
and
sbb
out
mov
cmp
rol
cmc
outsb
lret
std
lea
scas
scas
push
dec
ror
xor
mov
stos
mov
popl
fs
and
xchg
adc
sub
in
mov
ja
inc
dec
fnsave
int
jbe
and
shl
jmp
mov
mov
imul
fadd
not
lods
insb
popf
sub
repz
pop
jmp
cmp
sbb
test
mov
enter
in
jbe
incl
xchg
xchg
sub
adc
adc
inc
scas
popa
sub
movsb
ret
pop
jmp
pop
std
cmp
pop
jle
push
xor
scas
sbb
xchg
stos
movsl
sbb
adc
mov
scas
adc
insl
or
fisttps
lahf
jmp
xchg
stos
lock
mov
inc
movsb
jnp
bswap
cmpb
out
inc
xchg
out
inc
sarl
dec
sbbl
jmp
subb
mov
and
xchg
pushw
sbb
iret
out
test
pop
cmp
inc
cmp
call
mov
mov
inc
ja
mov
adcl
xchg
mov
xchg
jl
fsubs
xchg
xor
xor
fwait
jae
into
xor
lods
mov
mov
call
cmp
negb
inc
out
decl
scas
xor
cmp
test
push
call
pop
bound
fdiv
inc
js
cmpsl
jge
push
xchg
inc
cmp
in
mov
adc
lock
call
push
scas
frstor
out
aas
xor
decb
nop
mov
roll
jg
loop
repnz
sti
add
bound
stc
jecxz
xor
inc
mov
xchg
add
pushf
cmp
mov
popa
adc
cmp
aad
jns
dec
nop
dec
xchg
push
mov
inc
insl
jge
sbb
pop
lea
mov
mov
xchg
mov
mov
loop
push
insl
xchg
rorb
add
leave
mov
scas
es
add
stc
dec
data16
in
je
jbe
fsub
xchg
inc
aas
aam
inc
out
add
cs
pop
cltd
mov
or
mov
and
out
sub
and
imul
es
mov
jb
mov
or
sbb
and
jmp
stc
adc
aad
cli
ljmp
mov
or
bound
mov
push
add
mov
flds
testb
lea
cmp
cwtl
pop
push
sbb
mov
jle
leave
xor
or
xchg
mov
orb
mov
cli
sbb
outsl
sub
shlb
roll
and
dec
mov
aam
mov
into
cmp
lods
fnstcw
cmpsl
mov
sub
cmp
popf
xchg
call
clc
sub
movsb
dec
popa
je
insb
fwait
scas
bound
ss
or
mov
push
jecxz
mov
and
insl
dec
movsb
xor
cmpsl
pop
jge
dec
cmp
dec
add
cwtl
daa
dec
mov
icebp
out
adcb
insl
mov
inc
sub
shrb
push
pop
jle
ret
pop
sub
jo
inc
cli
jno
mov
iret
aas
rcl
xchg
fidivs
xchg
aaa
sub
adc
bound
mov
jne
dec
dec
jo
xchg
mov
add
xor
cmp
cmp
xor
push
dec
push
sub
and
xlat
mov
aam
icebp
and
and
push
sahf
stc
sbb
or
adc
in
mov
or
stos
dec
std
daa
mov
ret
jno
or
sti
and
pushf
sub
popa
shll
mov
mov
scas
xor
xchg
jge
dec
imul
je
mov
and
push
fnstenv
clc
lret
cli
mov
sbb
int3
inc
push
pop
push
dec
iret
mov
aas
mov
stos
jp
xchg
fs
sbb
jne
cmp
aas
mov
add
add
sbb
xchg
inc
mov
inc
inc
dec
fidivrs
inc
xchg
loopne
dec
test
push
pop
jo
xchg
shl
outsb
and
mov
rol
imul
cmp
decb
movsb
xchg
idiv
xor
sub
pop
add
popa
out
xchg
push
addr16
sti
and
jg
sbb
sbb
int3
mov
pop
jle
pop
push
sbb
leave
movsl
cltd
or
jle
into
icebp
imul
cmp
leave
push
mov
pop
fidivl
pop
or
inc
into
loope
lcall
adc
cmpsb
or
pop
popa
loop
js
push
divl
cmpsb
cmp
mov
xchg
test
aad
into
mov
xchg
insb
mov
mov
xchg
dec
iret
lods
lcall
movsb
jge
mov
ret
mov
mov
or
add
xor
out
ja
lret
inc
jnp
cmp
pop
loope
in
flds
jne
push
dec
mov
add
ja
push
cwtl
loop
inc
mov
pop
xchg
mov
sti
xor
lea
lea
pop
and
inc
lret
fidivrs
jb
fisubl
dec
mov
lock
icebp
fnstsw
les
xor
arpl
push
call
mov
dec
add
dec
inc
test
lret
xor
loope
cmp
mov
pusha
pop
cld
lret
mov
sbbl
and
divl
sbb
pop
mov
cmp
outsb
cmp
sub
scas
int
imul
pop
lcall
es
in
imul
lock
jae
addr16
clc
and
mov
xor
push
sub
pop
mov
xlat
sub
xor
sbb
xchg
into
xchg
fsts
or
in
xchg
test
xchg
sbb
mov
and
test
mov
jb
sub
rcrl
cmp
and
pop
xchg
dec
or
call
outsb
xor
or
pop
mov
fldenv
jmp
cmpsl
stos
bnd
cmp
and
mov
or
cld
fwait
dec
adc
arpl
addr16
into
into
adc
lahf
and
imul
imul
push
mov
mov
xorb
cltd
call
lcall
ficompl
leave
mov
repnz
pop
add
add
fiadds
cld
insb
rorl
gs
mov
call
mov
sbb
push
int3
lock
cwtl
gs
pop
mov
jo
sub
add
in
and
or
fldcw
imul
into
xor
mov
es
cltd
fdivl
mov
inc
jns
fisubl
in
into
movsl
cld
ret
jge
sbb
nop
imul
push
dec
aas
adc
adc
pop
adc
and
and
movsb
push
fmuls
mov
out
mov
mov
and
push
dec
sub
enter
lods
aam
ret
dec
push
sub
outsl
sub
iret
cmpsl
dec
inc
call
loopne
pop
jbe
mov
dec
daa
mov
xor
sahf
repz
enter
push
mov
pop
xchg
dec
pop
push
loope
fs
jl
dec
push
mov
mov
jle
fnsave
aas
push
pop
clc
fcoml
add
pop
mov
mov
sub
hlt
xchg
cmc
xor
sbb
pop
xor
inc
lods
cmp
or
inc
fadd
mov
dec
xchg
mov
adc
add
xor
push
out
mov
push
lock
inc
out
mov
push
out
shrb
jp
sahf
mov
fxch
and
inc
dec
inc
insl
pop
stos
push
subb
orb
pop
pop
sub
lock
add
fiadds
pop
mov
inc
lea
vpextrw
lds
cmp
icebp
fdivrl
mov
push
sbb
int3
xchg
movsl
dec
xchg
pop
outsl
or
call
and
sbb
hlt
pop
and
adc
xchg
daa
and
push
sbb
and
sbb
dec
mov
sub
andl
test
push
mov
sbb
cmp
pop
dec
nop
push
sub
pushf
cmp
outsb
adc
add
dec
fs
xchg
cmp
jae
inc
push
jno
lods
pop
dec
sbb
scas
cmp
lds
inc
int
cwtl
gs
loop
xor
movsb
movsb
fcmovu
mov
sahf
clc
xchg
cmp
std
adc
or
leave
mov
sub
ja
daa
shll
test
push
scas
or
or
out
call
sub
xor
jns
jmp
outsl
std
mov
adc
sbb
cmpsb
jnp
lcall
dec
aaa
and
dec
mov
jp
push
and
mov
pop
and
ds
sub
jle
fstl
xor
mov
test
adc
xor
insb
das
cwtl
clc
cmp
adc
dec
enter
cli
in
mov
shrb
mov
cmpsl
push
jo
lock
mov
int3
cs
xor
fistl
or
aas
push
clc
xor
les
mov
orb
in
or
frstor
or
fcmovnu
adcb
in
mov
xor
cmp
out
xchg
into
xlat
dec
popf
push
test
je
cltd
in
mov
test
lock
int
in
add
pop
mov
dec
sbb
and
stc
or
xchg
arpl
fstp
in
push
push
js
xchg
add
js
movsl
push
das
sahf
jae
iret
fs
fcomp
scas
mov
mov
mov
cli
mov
cs
into
mov
in
inc
sbb
jl
adc
xchg
mov
clc
xor
jo
shlb
out
outsl
mov
mov
aad
movsb
aas
clc
mov
xor
popa
add
mov
addr16
cmp
and
mov
mov
enter
xchg
aas
pop
adc
cltd
repnz
push
jl
test
dec
lcall
sti
daa
mov
xchg
jbe
or
sahf
mov
fmuls
je
int
or
adc
jl
mov
aam
cld
into
ds
add
testl
arpl
in
nop
mov
bound
xor
cltd
mov
add
xor
subl
push
adc
push
mov
loope
shl
jb
test
add
adc
cmpsb
mov
lret
popa
imul
out
ljmp
push
arpl
rcl
push
mov
or
push
mov
xor
enter
jmp
hlt
es
orb
dec
inc
into
int
imul
mov
or
push
fadds
sub
pop
fcom
jle
xlat
int3
cmpsb
sbb
enter
lds
push
test
and
dec
xchg
mov
divb
stos
insb
xor
scas
insb
cmp
sub
outsb
lds
push
sbb
rorb
add
inc
mov
push
iret
imull
scas
inc
push
sbb
pop
subl
xorb
cmp
mov
outsb
mov
cltd
mov
and
mov
dec
mov
outsl
pop
xor
or
add
xchg
call
les
push
imul
mov
mov
xchg
mov
xor
fisubs
aas
mov
rclb
arpl
in
cmp
cmpl
rolb
adc
jae
stc
or
push
jne
lcall
adc
hlt
sub
cmpsl
add
push
pop
bound
rcrb
lcall
out
bound
sub
push
aad
iret
imul
xchg
add
push
xchg
xchg
mov
push
loop
mov
cmp
enter
jns
cmp
pop
cmp
dec
cmc
and
sbb
xlat
pusha
movsl
cs
inc
mov
addr16
das
rcll
test
out
cmp
pop
mov
cmpsb
in
sub
mov
lock
cmpb
sub
xchg
sbb
imul
scas
push
pop
pop
bound
mov
lods
das
xor
mov
mov
fs
dec
addl
sbb
dec
popa
and
sub
mov
sti
bound
iret
repz
cmp
test
mov
in
push
stos
icebp
xor
nop
ss
push
pop
jo
xchg
out
arpl
or
out
out
shrb
lret
pop
xchg
mov
imul
je
sbb
sahf
addb
jmp
jae
pop
and
cld
mov
fdivl
cmc
xchg
rcrl
aaa
inc
shll
jae
xchg
inc
push
into
sti
outsb
inc
push
mov
popa
cmp
in
sub
pop
jae
and
call
pop
sub
or
sub
pop
test
jmp
push
and
imulb
arpl
jno
lea
repnz
int
cmp
mov
iret
adc
xchg
push
or
lods
dec
fcomip
lcall
aas
lods
push
cmp
adc
xor
insl
in
inc
cmp
pop
jg
mov
loopne
insb
xor
sub
dec
outsl
mov
stos
stos
xlat
add
lahf
sub
xorb
adc
dec
loopne
in
addr16
mov
sub
out
mov
xorb
push
mov
sub
pop
and
push
cli
mov
ret
cld
pop
ljmp
cmp
movsb
jo
sub
imul
dec
push
ljmp
add
clc
imul
inc
sbb
testb
xlat
shlb
lea
mov
mov
dec
mov
dec
cmp
repz
je
and
push
sbb
femms
xor
push
push
lret
out
push
fnsave
push
mov
sbb
sub
in
icebp
or
adc
shlb
lret
inc
jl
pop
in
repz
cmp
pop
mov
sbb
insb
in
fisubs
addr16
cmp
cmp
out
and
ljmp
and
jg
sahf
adc
outsb
leave
push
pop
and
dec
lret
sbb
or
inc
sub
mov
push
mov
femms
inc
and
jns
mov
pop
popf
arpl
mov
clc
mov
movl
xchg
enter
test
stos
clc
aad
nop
adc
inc
adc
jle
icebp
pop
inc
mov
imul
jg
es
cmp
adc
or
data16
les
jb
sbb
test
or
scas
adc
pop
ljmp
mov
repz
and
mov
mov
and
mov
add
lcall
paddd
cmc
mov
ret
lret
push
mov
clc
je
sub
fidivs
movsl
popa
cmp
dec
jne
jo
sub
loop
adc
push
xchg
dec
popf
test
xor
outsl
ds
mov
roll
pop
jmp
outsl
mov
mov
out
push
mov
bound
sbb
in
rcl
mov
lods
push
fimuls
popa
loope
xorb
stc
decb
cli
mov
adc
lods
dec
mov
lret
cmc
and
aad
adc
filds
cs
cs
sbb
lahf
lcall
sbb
jecxz
fildll
jno
scas
stc
mov
mov
xchg
iret
out
popa
rolb
test
fcoms
imul
mov
xchg
and
rol
xchg
in
and
mov
add
insl
ss
xor
outsb
add
popa
fsubs
inc
and
inc
lods
cli
repz
adc
les
jnp
sbb
cld
int3
adc
fcmovb
pmulhw
loop
rcr
dec
mov
not
sub
sbbl
lock
mov
sub
xchg
push
cli
push
add
je
xlat
call
mov
shlb
nop
outsb
ret
add
sbb
ljmp
jb
std
and
movsb
mov
out
lahf
pop
hlt
jno
add
repz
ret
insb
sub
aad
ja
dec
pop
stos
in
stos
lock
jle
mov
aam
in
pop
sub
or
ds
inc
or
mov
push
push
jne
stos
test
flds
dec
js
cmp
cmp
cld
into
sub
lcall
iret
lods
mov
jp
sbb
cmpsl
mov
imul
push
out
mov
mov
outsl
or
rcl
ljmp
repnz
mov
ds
test
dec
or
jle
cmp
fmull
xchg
cwtl
inc
aas
and
orl
adc
stos
jp
ss
ljmp
mov
scas
divb
jmp
pop
or
lret
xchg
cmp
fwait
inc
cli
scas
adc
imul
sahf
sbb
insl
shl
sbb
dec
jns
fs
cmp
xor
jbe
pop
leave
movsl
mov
daa
out
shll
popf
mov
cltd
int3
in
loop
arpl
jge
pop
divb
leave
or
sub
mov
mov
popa
push
test
sbb
rclb
sub
xor
cs
insl
xchg
add
clc
jo
mov
lcall
dec
xchg
loope
out
xor
sub
ficomps
es
call
out
jae
mov
mov
push
nop
and
jecxz
rolb
sub
inc
xchg
cmp
imul
lods
push
add
jae
sar
ss
push
int
jle
mov
jb
xchg
mov
outsl
leave
sbb
insb
fmul
and
bound
jno
jg
outsl
inc
sti
cwtl
sbb
mov
ficoms
mov
gs
call
mov
cld
push
jl
mov
jne
mov
jns
insl
out
inc
out
daa
ljmp
xchg
mov
movsl
out
xlat
xchg
and
or
inc
inc
scas
sarl
pop
jmp
mov
in
imul
push
sub
lret
incb
sbb
mov
mov
or
pop
jp
sbb
mov
and
outsl
push
lcall
sbb
xorb
xor
stc
xlat
out
xor
mov
xor
repz
pop
sbb
add
jg
je
test
ljmp
push
fstl
dec
or
add
mov
test
inc
pop
cmp
fstl
push
xchg
add
mov
xchg
insl
and
cmpsb
and
inc
imul
ror
leave
or
cmp
cmovp
pop
mov
add
fwait
cmp
in
xchg
dec
es
repz
jge
stos
rclb
xchg
sahf
add
inc
jnp
pop
add
xor
sub
dec
cmp
shrb
sub
scas
xor
push
push
mov
fbld
mov
mov
in
faddp
das
mov
jno
je
rolb
std
repnz
cmpsb
les
pop
lret
clc
mov
and
pushf
in
orl
xchg
inc
xchg
and
cmc
xor
repz
orb
pop
push
xor
aas
lcall
jb
mov
dec
std
push
mov
jb
push
cmc
ret
sbb
sahf
call
mulb
lods
or
setb
push
fcompl
dec
scas
out
test
mov
es
xchg
insl
xchg
loop
popf
jae
push
inc
mov
xchg
mov
mov
das
xchg
mov
loope
ret
sub
mov
int
or
dec
paddw
repz
inc
mov
mov
add
inc
fnstenv
push
outsb
xor
inc
test
ja
gs
cld
lods
lods
ret
or
inc
mov
dec
inc
xchg
rclb
daa
movsl
test
push
insl
ret
xchg
add
pop
inc
aas
fsubs
in
cmp
jp
inc
out
stos
or
add
add
in
xchg
add
push
mov
cli
push
add
mov
stc
jb
loop
pinsrw
mov
pop
scas
in
adc
outsl
popf
adc
aaa
sbb
popa
and
pop
jg
in
jmp
pop
or
movl
sub
jnp
add
iret
or
mov
in
push
cld
cmp
xlat
stos
sarl
jle
mov
leave
imul
pop
mov
dec
jecxz
andb
jnp
iret
outsl
cmpsb
mov
test
jg
mov
addl
mov
sub
fiaddl
shr
inc
test
push
aam
jecxz
insl
jno
push
in
cld
cmp
sub
jae
jns
std
cmpsl
and
aam
sub
shrl
dec
rcrb
ds
xchg
icebp
jmp
jmp
addr16
xor
rol
loop
xchg
subl
mov
mov
push
jbe
iret
movsl
mulb
push
stos
fbstp
je
cmp
or
lahf
mov
shl
pop
scas
push
movsb
in
sarb
nop
rorb
adc
aaa
xchg
hlt
sahf
mov
into
or
or
xlat
rclb
aam
aam
or
mov
sub
fs
lea
jb
icebp
popf
push
sbb
imul
mov
stos
iret
jb
sbb
rcrb
.byte
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
push
add
clc
pop
add
sbb
add
mov
add
add
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
pop
or
or
add
in
add
add
add
add
add
add
add
loopne
add
rcrb
push
add
add
add
add
add
add
add
add
add
or
add
fcomps
add
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
or
xor
add
in
add
add
add
add
add
add
add
mov
add
xchg
pop
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
enter
mov
add
in
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
les
add
add
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
pop
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
imul
pop
add
add
add
add
add
add
add
add
add
rolb
add
insl
or
pop
add
add
add
add
add
add
add
add
add
call
outsb
or
pop
add
add
add
add
add
add
add
add
add
adc
add
outsl
or
in
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
add
jo
add
add
add
add
add
add
add
add
add
call
jns
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
in
add
add
add
add
add
add
add
cmp
or
sub
add
in
add
add
add
add
add
add
add
pusha
add
or
call
add
add
add
add
add
add
add
mov
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
rolb
or
or
add
in
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
or
xchg
add
add
add
nop
push
add
mov
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
test
add
rolb
add
add
add
add
add
add
add
add
add
addb
add
or
cwtl
add
add
add
add
add
add
add
add
add
test
add
les
add
in
add
add
add
add
add
add
add
rolb
add
inc
mov
add
add
add
add
add
add
add
add
add
add
clc
push
add
cmp
or
ljmp
add
add
add
add
add
add
and
add
sub
add
in
add
add
add
add
add
add
add
dec
pop
add
fcoms
add
in
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
pop
add
pop
cwtl
or
mov
add
in
add
add
add
add
add
add
add
rolb
add
or
loop
add
in
add
add
add
add
add
add
add
call
cltd
or
mov
add
in
add
add
add
add
or
add
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
sldt
enter
sbb
or
addb
add
add
add
add
add
add
add
add
add
js
add
jl
or
push
add
add
add
add
add
add
add
add
add
mov
fwait
or
sub
add
in
add
add
add
add
add
add
add
enter
clc
fwait
or
js
add
in
add
add
add
add
add
add
add
lock
add
or
les
add
in
add
add
add
add
add
add
add
sbb
add
xor
or
sub
add
in
add
add
add
add
add
add
add
inc
or
add
or
inc
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
or
add
mov
add
in
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
and
or
adc
add
in
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
or
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
orb
add
or
adc
add
in
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
loopne
add
jg
add
and
add
dec
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
fsubs
add
add
add
add
add
add
add
add
bound
add
in
movsb
or
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
push
data16
data16
mulb
mulb
jmp
outsw
jmp
push
outsl
mulb
mulb
jmp
outsw
imulb
outsl
imulb
outsl
mulb
jmpw
outsl
mulb
imulb
ljmp
data16
jmp
data16
data16
jmp
data16
push
imulb
data16
jmp
data16
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
clc
mov
clc
clc
mov
clc
mov
clc
decl
mov
clc
decl
mov
clc
clc
mov
mov
clc
mov
data16
data16
decl
clc
xchg
jmp
jmp
clc
clc
clc
jmp
mulb
mulb
clc
clc
mov
jmp
jmp
clc
clc
mov
push
jmpw
clc
decl
imulb
jmpw
clc
mov
clc
xchg
outsl
jmp
idiv
data16
decl
outsl
idiv
imulb
jmp
clc
mov
ljmp
jmp
clc
mov
clc
xchg
idiv
push
data16
decl
xchg
push
data16
decl
xchg
jmp
clc
clc
clc
clc
xchg
data16
mov
clc
mov
push
testb
mov
data16
clc
xchg
jmp
mov
mov
data16
clc
clc
clc
decl
decl
decl
decl
clc
mov
mov
clc
mov
decl
mov
clc
decl
clc
mov
decl
decl
clc
clc
mov
decl
clc
clc
mov
clc
mov
mov
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jg
push
ja
ja
push
jg
pushl
ja
ja
ja
ja
push
jg
pushl
pushl
ja
ja
push
jg
pushl
push
ja
ja
ja
jg
push
jg
push
ja
pushl
push
ja
push
ja
push
jg
pushl
ja
ja
push
ja
pushl
push
jg
pushl
ja
ja
pushl
ja
push
ja
push
jg
push
ja
div
ja
ja
ja
ja
push
ja
push
jg
push
ja
divl
jg
pushl
push
ja
push
jg
data16
pushl
pushl
push
jbe
data16
data16
push
data16
pushl
pushl
push
jbe
jmp
jmp
outsl
jmp
push
jg
divl
ja
jbe
push
push
data16
push
data16
pushl
pushl
ja
jbe
outsl
jmp
jmp
outsl
push
data16
pushl
push
ja
divl
push
push
data16
jmp
pushl
pushl
idivl
outsw
jmp
jmp
jmp
pushl
push
jbe
mulb
mulb
mulb
jmp
push
ja
push
jbe
jmp
jmp
jmp
jmp
push
ja
ja
push
jbe
push
push
push
outsl
jmp
push
ja
ja
push
jbe
outsl
jmp
jmp
imulb
data16
push
ja
jg
push
jbe
push
push
outsl
jmp
pushl
jg
push
jbe
outsw
jmp
jmp
pushl
push
jbe
data16
outsl
jmp
data16
push
ja
pushl
push
jbe
data16
jmp
data16
push
ja
pushl
jg
jbe
push
data16
pushl
push
jg
jbe
jmp
push
ja
idivl
jg
divl
data16
idiv
push
jg
divl
jg
divl
data16
push
outsl
idiv
pushl
pushl
ja
push
jbe
data16
push
outsl
div
ja
push
ja
divl
divl
data16
divb
jg
ja
push
jg
jbe
push
divl
divl
idivl
jg
jbe
jmp
ja
divl
ja
idivl
jg
data16
ja
pushl
idivl
jg
data16
pushl
push
ja
divl
jg
pushl
ja
pushl
pushl
jg
ja
jg
pushl
jg
ja
push
ja
jg
ja
idivl
pushl
jg
ja
push
ja
ja
push
jg
jg
ja
pushl
pushl
ja
ja
push
jg
push
ja
pushl
jg
ja
ja
ja
ja
push
jg
push
ja
push
ja
divl
ja
ja
ja
push
jg
push
ja
push
ja
push
ja
ja
push
jg
pushl
push
ja
pushl
ja
push
jg
push
ja
ja
pushl
pushl
push
jg
pushl
jg
push
ja
pushl
push
jg
push
ja
push
ja
push
jg
push
ja
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
pop
add
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
pop
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
pop
add
add
and
add
add
inc
add
insl
add
add
je
jae
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
or
enter
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
enter
enter
enter
add
add
std
enter
add
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
lea
xor
lods
test
je
cmp
ja
add
add
jmp
and
shl
lods
test
jne
lods
jmp
ret
add
fimuls
jbe
xchg
cltd
cmc
jbe
cltd
or
insl
inc
and
jg
pop
jle
jo
xchg
dec
push
movsb
shlb
mov
gs
insl
add
gs
in
jg
fxch
sub
jns
mov
imull
cmpsl
addr16
test
sub
sbb
adcb
cmp
nop
aaa
inc
xchg
adc
cmp
mov
xchg
rcrb
out
in
ja
js
xor
mov
out
incb
cs
test
dec
or
mulb
idiv
sub
into
dec
pop
mov
negl
or
nop
movsb
rcrl
imul
lahf
clc
daa
fsubs
ja
mov
cmp
xor
test
inc
lods
dec
testl
mov
js
iret
push
movsb
jge,pn
mulb
adc
imul
lea
sub
mov
push
mov
adc
pusha
inc
or
pop
mov
out
add
fdivrs
and
fwait
stc
popa
mov
mov
movsb
pusha
jg
les
scas
test
pushf
movsb
push
insb
in
dec
arpl
adc
loope
xor
test
mov
mov
xchg
shl
mov
cmp
das
lahf
lock
cltd
add
dec
pop
gs
add
in
call
sti
negb
loope
xchg
cli
movsl
popf
mov
inc
es
cmpsl
outsl
mov
sbb
in
xchg
dec
jg
testl
add
push
xor
dec
cmp
imul
cmpsl
outsl
cmp
and
push
stos
adcb
shll
lock
std
fnsave
ss
ljmp
cli
add
inc
fcmovne
test
push
inc
out
roll
outsb
outsb
mov
or
mov
mov
push
fwait
sbb
fsubrl
push
pop
dec
and
stos
jl
pushw
cmpsl
xchg
pop
cmpsb
in
cmpsl
cmp
fdivr
sub
sbb
popf
sub
repz
adc
shl
dec
repz
fimull
bound
gs
int
shll
cmp
ss
push
daa
fcmovnbe
jg
adc
cmp
adc
or
pop
dec
int3
popa
xor
ss
and
or
cmp
scas
cwtl
cmp
pop
out
out
adc
ret
xchg
or
push
mov
add
cmpsl
or
fstpt
insb
rcll
jecxz
out
push
push
add
inc
pop
lods
pusha
push
or
je
test
mov
mov
enter
adc
ja
dec
mov
xor
mov
sbb
xor
push
hlt
push
mulb
xor
pushf
xchg
pushw
mov
daa
and
jno
stos
and
inc
fiadds
or
inc
mov
mov
inc
test
push
nop
adc
cwtl
pop
stos
adcb
imul
pop
aad
pusha
push
in
push
dec
adc
imul
test
and
jmp
xchg
or
ret
stos
std
jne
aam
dec
outsl
jl
repz
sbb
add
fsubr
pop
adc
adc
inc
adc
and
pop
jnp
cmc
mov
ret
add
push
fistl
xlat
pop
push
adc
ja
iret
sub
aas
jl
adc
push
into
outsl
lcall
dec
mov
or
cmp
aad
adcb
out
xchg
gs
inc
and
je
icebp
xchg
mov
scas
movsl
cmc
dec
jnp
mulb
mov
movsl
jns
inc
test
int
arpl
mov
test
movsb
loopne
and
sti
fs
fnstsw
mov
xor
add
cmc
push
adc
pop
jle
or
subl
loope
rcr
cmpb
sti
ss
and
setne
scas
int
xchg
outsb
sub
mov
nop
jp
mov
cmp
pusha
shl
mov
xorl
repnz
sbb
mov
dec
sub
int3
aad
xor
jmp
imul
push
adcl
dec
mov
cmp
inc
push
or
jno
sub
nop
les
loopne
aas
pusha
lods
pop
mov
gs
lods
andl
sub
or
js
stc
mov
sub
es
or
je
loop
pop
roll
inc
cmpsb
cld
xchg
test
in
pop
sbbb
inc
stos
shlb
add
jno
cmp
mov
aaa
popa
xor
push
cmp
sbb
inc
pop
sub
inc
setbe
pop
enter
dec
jae
test
jp
call
jecxz
adc
ret
xor
das
ret
mov
fiaddl
xchg
clc
loopne
inc
add
les
sahf
xadd
sbb
repnz
hlt
je
dec
sub
xor
jo
idivb
mov
sub
paddusb
or
test
cmp
fidivrl
xchg
popf
cli
jnp
xchg
aas
and
std
sub
inc
push
mov
pop
mov
adc
hlt
int
aaa
arpl
fwait
mov
inc
jp
pop
cltd
adc
add
enter
cs
stos
xlat
mov
adc
pop
les
pushf
jbe
sbb
xor
cmp
pop
push
xchg
rcll
popa
mov
aad
and
into
lods
ja
sbb
inc
sbb
movsb
test
and
fs
or
stc
lods
jp
inc
mov
dec
jg
stos
mov
in
or
dec
or
jecxz
mov
insl
loope
mov
test
movsl
scas
dec
mov
mov
xchg
lock
mov
and
inc
lret
or
jo
dec
adc
xor
or
mov
adc
sahf
adc
mov
cmp
addr16
fmull
xor
or
mov
lahf
aas
fwait
loopne
or
adc
enter
popa
aas
adc
sbb
dec
aad
stos
stc
int3
ds
arpl
stc
and
jae
testb
mov
mov
fisttpll
stc
inc
nop
or
xlat
hlt
jg
lds
into
cmpsl
xchg
fadds
nop
fstpt
dec
cltd
out
jecxz
ret
mov
xchg
mov
mov
mov
in
add
cmp
stos
pop
xor
orl
or
test
mov
mov
mov
mov
mov
jbe
mov
scas
loope
mov
rcll
push
jg
xchg
xchg
cwtl
scas
addr16
jno
jp
movsb
pop
pop
in
decb
and
pop
cmpsl
into
imul
jb
fdivrl
mov
jno
sbbb
fnstsw
call
insb
mov
aas
adc
mov
xor
and
xchg
fisttpl
andl
and
and
ds
loop
cmp
or
sti
mov
jmp
mov
loope
popf
inc
dec
jge
or
adc
pop
stc
push
inc
cmpl
repnz
pop
and
jbe
lods
insl
hlt
dec
jne
push
movsb
mov
mov
insl
outsb
loope
push
imul
leave
adc
or
enter
stos
pop
shrb
gs
fbld
add
cltd
dec
stos
cmpsb
sbbl
xchg
mov
in
mov
es
xchg
xchg
test
and
leave
int3
dec
stos
aas
inc
ljmp
insl
loope
push
jae
cmpsl
xchg
cmpsb
lahf
imul
fldl
shlb
lahf
call
adc
mov
dec
push
jg
adc
and
lock
shrl
sub
jg
rol
sahf
push
leave
xchg
rcrl
movsb
fs
push
ret
push
popa
pop
adc
scas
mov
pop
sbb
mov
dec
stos
movl
cs
in
xor
cltd
fstpt
xor
inc
daa
stc
loopne
add
sub
dec
jns
rolb
test
das
insl
push
addr16
repz
pop
mov
orl
lock
bound
mov
cwtl
fldcw
add
iret
cmp
out
mov
scas
aaa
inc
int3
pop
add
subl
and
nop
popa
idivb
in
xchg
sarl
cmp
mov
orl
aas
push
dec
sub
aad
gs
pop
push
stos
gs
faddl
cli
popa
ljmp
bound
ret
subl
mov
and
adc
test
mov
sbb
enter
shrb
rcll
iret
xchg
xchg
int
mov
pop
and
shll
in
jb
cmp
jle
fmuls
dec
pop
lock
aas
test
xor
scas
imul
and
test
data16
jecxz
orb
sub
mov
mov
in
xchg
xor
xchg
mov
add
scas
add
mov
mov
mov
aad
inc
dec
mov
mov
cmp
dec
xchg
ja
adc
ficoms
add
and
rorl
mov
cmp
pop
push
mov
mov
bound
ficompl
dec
mov
or
call
cli
pop
test
scas
mov
movsl
inc
pop
outsl
ret
data16
std
outsl
sbb
mov
icebp
xor
mov
arpl
pop
jp
jmp
sub
cltd
or
iret
stos
aad
fildl
mov
xchg
sub
mov
sbb
inc
pop
xchg
pop
sbb
mov
in
pop
aaa
dec
sti
jno
sbb
add
les
out
add
inc
rolb
test
aaa
and
push
inc
enter
xor
icebp
cmp
imull
push
xchg
insl
je
lret
ljmp
push
and
enter
ret
inc
inc
mov
das
mov
cmp
in
pop
sbb
mov
mov
aad
mov
dec
loopne
xor
std
rol
or
int3
leave
and
pop
rolb
inc
pop
nop
cwtl
inc
push
jae
in
adc
add
repz
lock
inc
mov
stc
insl
aam
xor
sub
mov
pop
cmp
dec
in
push
in
mov
out
dec
push
mov
mov
iret
sub
jmp
jbe
cs
jmp
pop
dec
js
sbb
and
cld
clc
mov
or
xor
or
mov
loop
ja
xor
repnz
push
sbb
lea
adc
aad
pop
in
clc
out
pop
ja
in
popf
aam
rol
pop
insl
mov
xchg
adc
adc
cmp
pop
add
xor
adc
ds
mov
test
sub
lcall
xlat
mov
fsubrs
or
push
sar
mov
in
push
flds
into
insb
cs
cs
roll
inc
mov
rolb
dec
and
mov
push
cmpl
out
stos
daa
fdivs
jp
add
and
mov
shl
add
imul
mov
pop
lea
aad
negb
not
and
rorb
loop
sub
xorl
mov
push
jge
sub
xchg
inc
imul
inc
cmp
cmpsl
mov
in
lea
es
mov
mov
jp
jmp
inc
inc
movsb
adc
ret
shl
aas
mov
in
push
mov
sbb
xor
cmp
pop
push
pop
xchg
mov
fptan
xchg
jmp
loop
lahf
ficoms
divl
cld
bound
xor
shll
mov
call
push
xor
ds
xor
adc
adc
outsl
int3
mov
add
dec
or
aaa
fbld
hlt
sub
loopne
xchg
push
cmp
mov
mov
jbe
jae
sahf
xor
pop
cwtl
fisttps
cwtl
stos
inc
mov
aam
mov
inc
test
dec
cwtl
push
fistps
test
xor
cmpsl
mov
xchg
mov
add
sub
les
push
mov
inc
sub
jo
outsb
cmp
dec
les
loope
sub
lods
inc
add
push
test
sub
xchg
add
cmc
bound
call
in
fwait
add
aaa
lahf
add
cmp
push
adc
je
adc
test
xor
jp
mov
das
inc
cmp
rorb
sahf
inc
or
arpl
jne
jl
sub
xor
jo
icebp
in
loopne
xchg
loopne
fidivl
addr16
push
cmp
xchg
xchg
rcrl
stos
repnz
lcall
jmp
jne
mov
xor
mov
fsubs
nop
test
xchg
iret
in
cmc
jns
jne
aas
and
jle
je
jns
xor
sub
out
shrl
inc
mov
jge
adc
std
adc
and
in
or
add
mov
sub
call
call
and
add
mov
call
jno
adc
cs
addr16
sub
loop
dec
jbe
shll
push
xor
out
mov
fdivrl
sub
inc
daa
inc
aad
push
aam
add
xchg
push
push
lods
add
push
xchg
xor
sbb
stos
imul
inc
imul
jmp
inc
lcall
jo
sub
into
out
rorb
inc
jmp
mov
pop
aam
in
sahf
cmp
decl
fs
mov
cld
mov
aas
sub
jae
and
dec
xor
pop
sub
ja
ja
inc
movb
jg
aad
mov
cmp
pushf
and
loop
cs
mov
mov
iret
cmc
mov
leave
lock
iret
sbb
mov
lcall
test
mov
pop
cmpps
mov
movsb
push
xor
dec
dec
popa
sti
add
into
filds
xor
sbb
sub
mov
xchg
subl
pop
outsl
jle
popf
insb
and
pop
in
imul
sbb
sbb
inc
mov
incb
stos
or
or
push
in
sub
fisubrl
loope
cli
push
rcr
mov
icebp
mov
imul
hlt
sbb
inc
adc
incl
or
aad
hlt
out
mov
or
ss
jb
mov
mov
fwait
scas
movsl
pusha
rcll
addr16
imul
and
clc
xor
sahf
test
loope
hlt
dec
add
or
adc
jge
nop
push
cmc
or
cmp
movsl
je
int3
adc
int3
mov
or
and
add
and
sbb
or
ds
scas
cwtl
mov
xchg
add
in
jbe
ss
fwait
lods
js
adc
enter
xor
pop
inc
popa
push
jo
mov
mov
cli
in
loopne
and
rol
xchg
mov
mov
and
inc
test
pop
jge
fsubrp
insl
xchg
subps
data16
push
mov
shl
ss
push
push
jo
push
popa
dec
aad
mov
and
pusha
jg
sti
or
test
sub
sbb
mov
std
hlt
xor
cli
subb
out
fscale
or
dec
mov
pop
or
pop
lods
pop
jl
into
mov
mov
or
cwtl
mov
xchg
lcall
loope
insb
pop
push
shl
adc
or
xor
daa
aad
sub
mov
aad
mov
mov
inc
pop
cwtl
sub
mov
bound
xlat
mov
aam
and
jae
jae
movsb
rolb
divb
gs
mov
out
xor
mov
fisubrs
outsb
sub
xor
js
cmp
lods
xorb
sbb
mov
pop
push
notb
jle
mov
stc
mov
jo
xchg
cmp
sbb
sti
adc
and
pop
aaa
dec
sbb
outsb
adc
and
fs
push
pusha
or
jne
mov
scas
mov
xor
arpl
fldpi
cli
jmp
jns
cwtl
sbb
in
jbe
lock
and
and
in
imul
adc
inc
inc
imul
sub
mov
and
mov
addr16
push
test
jmp
inc
mov
int
sub
push
mov
mov
xchg
outsl
pop
sub
pop
or
cmc
push
rorl
out
pop
mov
sbb
cmpsl
mov
push
jecxz
hlt
cli
js
push
mov
mov
push
dec
insl
clc
lcall
or
addr16
ret
sbb
fwait
leave
sbb
pop
scas
insl
test
lcall
push
mov
push
push
push
int3
push
inc
loopne
inc
mov
stos
mov
lea
test
xchg
push
loope
jmp
jl
xor
xchg
lret
loop
xlat
xchg
rclb
or
and
sbb
mov
je
mov
cmp
jae
pop
or
lret
cmpb
jno
and
ja
outsb
scas
add
pusha
mov
lods
out
aaa
cltd
adc
add
outsb
icebp
movsb
jle
push
lcall
xchg
aas
test
popa
rolb
bound
ret
leave
fnsave
sarl
lretw
push
aam
insl
xor
imulb
inc
int3
push
mov
lods
dec
pop
fnstenv
xchg
ss
stc
jg
lods
mov
dec
or
nop
mov
mov
repz
les
mov
mov
xor
fisubs
cmp
icebp
into
add
aaa
push
dec
jle
cltd
jle
cwtl
xor
mov
inc
cmpsb
cmpsb
sahf
data16
mov
ds
movsl
orl
xlat
push
mov
or
jne
pop
cli
outsb
cltd
jnp
jge
push
or
out
add
icebp
mov
lahf
push
jl
dec
out
adc
or
mov
sub
call
sarl
sub
pop
mov
lret
movsl
add
and
or
loop
clc
cmc
ljmp
sbb
into
cmp
lods
adc
cmp
js
aas
sub
lea
imul
sti
push
push
andl
icebp
cmp
dec
stc
ds
in
and
test
push
push
jecxz
and
sub
jno
cwtl
xchg
jbe
fisubs
aas
ficoml
pop
out
push
pop
sbb
inc
adc
xorb
shlb
ja
xchg
push
rcll
ret
cmp
pop
jg
or
lret
xchg
lea
add
xchg
adc
or
aas
sub
xlat
push
mov
lods
js
vmwrite
pop
push
andl
mov
mov
stos
jnp
lret
lcall
push
mov
xchg
orb
jne
adc
rcl
jno
push
sub
cmpsl
out
orl
sti
enter
push
nop
cmpsl
repz
mov
pop
ss
fsts
clc
or
adc
mov
mov
arpl
idiv
mov
inc
mov
mov
pop
cmc
push
inc
insb
fcmovu
push
popf
faddl
ja
ret
lret
rolb
movl
xchg
jmp
sub
lcall
in
push
ret
std
hlt
xchg
mov
xchg
dec
lret
xor
in
das
pushf
mulb
inc
adc
cltd
xlat
and
jl
pop
pop
int
jbe
sub
fldpi
cmp
and
jg
add
pushf
test
loopne
inc
pop
jge
fcoms
jl
sub
aas
mov
stos
in
push
inc
mov
lds
mov
lods
and
mov
xlat
push
add
clc
push
jno
inc
enter
push
in
mov
lcall
push
adc
shufps
repz
or
out
shlw
out
in
bound
cmpl
push
aad
outsl
push
push
push
mov
imul
test
enter
dec
xor
ret
pop
js
into
inc
popa
out
mov
inc
fstps
call
fildll
pop
stc
fldcw
cli
outsb
cli
cmpsl
cmp
push
pop
mov
fiadds
jae
dec
mov
stos
enter
lds
adc
insb
push
daa
xlat
xor
xchg
mov
in
into
mov
rcl
push
pop
lcall
xchg
mov
pushf
in
mov
outsl
xchg
cli
or
fcoms
das
mov
jno
lcall
sahf
fwait
stos
mov
mov
popf
push
jmp
andl
test
dec
jge
or
pop
cmpsb
push
jno
dec
adc
or
mov
mov
cld
enter
ret
add
dec
push
cmp
add
xor
inc
cmp
sub
gs
add
xchg
mov
in
hlt
jns
adc
xchg
mov
stc
mov
mov
stc
aaa
aam
xor
sbb
xchg
movsb
test
cmp
push
inc
cltd
inc
sub
outsb
sbb
xlat
inc
les
mov
mov
mov
aad
jno
shll
xchg
fstpt
inc
mov
sub
repnz
push
pop
es
call
inc
inc
push
cmp
cld
subl
shlb
adc
pop
ret
adc
and
jl
fucom
and
xlat
push
jo
jbe
lahf
cli
add
jae
pop
add
mov
adc
lods
xchg
lcall
roll
loopne
test
jo
xchg
pop
clc
jge
mov
lret
rcr
loope
sbb
or
outsb
xlat
dec
cmpsl
shr
pop
mov
ret
dec
pusha
cmp
movsl
bnd
jl
push
jmp
out
pushf
jp
data16
cmc
jmp
push
jne
xor
cmc
ffree
jle
pusha
mov
push
scas
lds
lret
jnp
mov
imul
mov
push
popf
fsts
fnsave
pushf
mov
mov
cmpsl
jo
fstpl
paddsb
rorb
mov
xor
stc
loope
out
mov
sbb
xchg
add
jo
lods
lds
fs
sbb
out
std
lcall
inc
lret
hlt
fwait
out
cmpsb
xchg
mov
movsb
arpl
cwtl
stc
jge
inc
stos
mov
or
loop
enter
jge
dec
das
ja
jo
mov
add
outsl
ret
pop
push
repnz
push
popa
inc
mov
dec
xor
das
fiadds
test
push
add
stos
shrl
aas
insb
jmp
imul
hlt
mov
cmovl
testb
mov
xchg
stos
or
in
enter
lods
roll
jg
jnp
fsubp
jle
mov
out
loop
scas
mov
sbb
test
in
orl
dec
pushf
scas
fistps
in
xlat
js
xchg
insl
daa
jmp
aam
dec
pop
subb
jae
faddp
lahf
js
mov
sbbl
push
or
in
cmp
mov
fs
stos
or
test
or
pop
adc
prefetcht2
lahf
sbb
flds
inc
lahf
sahf
aaa
jge
jns
aad
jns
sbb
popa
int3
or
int3
insl
out
cmp
pop
ljmp
iret
cld
or
es
fdivl
out
mov
inc
shr
push
popf
dec
int3
jns
and
pop
xchg
mov
in
arpl
xor
popf
repz
hlt
lods
adc
jmp
testl
outsb
pusha
js
cmp
ret
mov
outsb
repz
sub
cmp
sub
faddl
pop
loop
cld
mov
and
std
cmp
pop
fwait
loope
xor
dec
dec
frstor
test
mov
lods
pmulhw
mov
pop
je
clc
cmpsl
mov
mov
mov
lock
pushf
xchg
fs
aad
mov
inc
push
gs
ret
repz
fmull
pop
gs
loopne
push
es
xchg
aas
mov
and
nop
xchg
push
fimuls
sbb
popa
aad
mov
pop
inc
fists
mov
jbe
mov
adcl
mov
mov
cmp
rol
in
xlat
js
out
aad
mov
in
rol
shll
ljmp
leave
ja
and
shrb
stc
shl
xchg
fcmovnu
cs
add
and
lods
inc
stc
mov
xorl
cmp
test
popa
int
jl
adc
jnp
lret
fs
xorb
add
aaa
ljmp
pop
std
and
scas
mov
sub
clc
adc
es
daa
jbe
into
notl
mov
inc
xchg
push
mov
cli
pop
movsl
cld
loop
pop
jecxz
inc
adc
cmp
or
pop
adc
jmp
insb
mov
dec
and
loopne
not
pop
in
jl
bound
mov
jae
inc
jb
cmp
movups
pop
sbb
std
pop
outsl
xor
dec
mov
inc
jecxz
mov
sub
adc
imull
loopne
stos
ljmp
mov
push
pop
lahf
pop
mov
adc
outsl
es
pusha
add
ds
inc
addb
fstpl
call
push
in
and
push
and
sti
xor
xchg
in
jecxz
cmp
xor
add
xchg
stc
mov
mov
add
out
movb
test
sahf
xor
cmpsl
ret
jb
add
fidivl
test
pop
add
add
dec
rcl
sahf
lret
mov
sub
pushf
push
cmp
subb
stc
sub
mov
je
enter
adc
dec
mov
data16
hlt
insl
mov
xchg
fnsave
out
sahf
loope
pop
push
mov
fbld
push
cmp
lcall
jb
adc
push
lahf
int
or
fsubs
pop
aad
cs
and
mov
setbe
outsb
push
inc
es
or
je
pop
push
arpl
outsl
mov
sbb
lock
out
mov
pop
iret
jb
popa
out
into
in
neg
cltd
fadd
add
dec
imul
xchg
adc
out
bound
lock
jmp
daa
sbb
push
ja
mov
xor
lods
or
addb
fnstcw
fbld
js
aaa
or
add
dec
mov
mov
lahf
adc
in
xor
leave
xor
sarl
pop
mov
subb
adc
xchg
outsb
clc
repnz
cmpsl
jne
jns
xchg
shlb
mov
dec
movsl
mov
andb
insw
lea
roll
mov
or
stos
test
icebp
add
jp,pt
mov
ret
sti
pop
and
mov
scas
es
sub
push
rcr
popa
push
arpl
lahf
jo
jne
adc
dec
outsb
cltd
imul
loopne
mov
outsb
test
jno
call
rorb
loop
leave
stos
xor
mov
dec
ljmp
in
mov
pop
cmp
dec
stos
dec
jb
jle
push
lcall
adc
dec
orl
xlat
xchg
cmpsb
push
movsl
cwtl
or
outsl
pop
cmp
cmp
in
cli
push
add
imull
lret
jo
lret
xor
int3
inc
mov
test
loopne
and
rcrb
and
adc
adc
fcompl
dec
out
out
pop
and
mov
jmp
cmp
inc
mov
inc
sub
test
jns
fs
sbb
nop
notb
mov
data16
push
mov
pop
pushf
adc
mov
add
inc
scas
adc
push
cltd
cmc
inc
std
fidivrs
push
fistpl
mov
ds
or
lods
in
pop
and
push
cli
aaa
mov
hlt
lcall
pushf
cmp
lcall
pop
cmpsb
or
mov
add
pushl
dec
push
leave
add
cmp
lock
mov
pop
sbb
or
jge
pop
jnp
cwtl
mov
xor
sti
decl
stos
mov
lea
gs
aaa
les
aad
sahf
hlt
jp
mov
mov
mov
in
std
outsb
clc
in
mov
fadds
mov
or
sti
cmp
jmp
inc
cmp
adc
cmp
mov
xchg
fs
and
and
loopne
data16
pop
in
mov
je
shrl
xchg
int
cld
adc
adc
and
clc
outsl
sbb
stos
push
jns
ds
adc
mov
lahf
int3
mov
dec
sbb
clc
jmp
xor
shr
lret
fsub
aam
rcrb
jae
int3
pop
jmp
gs
sub
mov
mov
mov
mov
adc
sub
mov
push
sti
push
rcrl
loopne
mov
inc
jl
and
mov
mov
fwait
nop
clc
nop
add
push
or
xchg
jns
sbb
stc
out
repz
fcoms
loopne
orl
fwait
mov
dec
out
jb
and
lock
xchg
lods
cltd
movsl
paddb
push
test
jnp
adc
mov
dec
inc
fcmovbe
and
iret
in
mov
into
lock
and
dec
adc
pop
add
xor
aad
rorl
repnz
aad
pop
das
mov
subb
in
adc
addr16
jmp
push
movsl
sub
sbb
sub
inc
inc
pop
and
or
out
fisttpll
and
nop
pushf
dec
aas
mov
or
pop
aad
add
loop
rclb
xchg
sub
call
dec
out
xorl
bound
cmp
sarl
push
or
or
mov
shlb
out
cmp
lret
scas
or
jmp
xchg
cmp
rol
xchg
cmc
in
ret
pop
aam
mov
add
stos
add
loope
mov
dec
insb
push
das
adc
cmp
adc
and
cmp
and
push
in
inc
cltd
dec
jmp
lods
out
cmpsb
sti
push
sbb
orb
xchg
cmp
outsl
mov
jnp
test
dec
fisubrl
push
popf
mov
or
adc
imul
fildl
insb
xor
mov
andl
cltd
gs
call
les
jg
outsl
scas
lds
push
lret
jcxz
mov
sti
enter
mov
mull
stc
stos
pop
inc
cmpsl
ss
clc
pop
cmp
pop
pop
push
adc
ret
and
inc
and
mov
addb
add
test
push
fwait
mov
sbb
inc
mov
sub
notb
inc
aad
movsb
mov
sub
cmp
xor
xchg
xor
xchg
data16
clc
push
jge
sbb
gs
clc
and
push
imul
pop
scas
stos
aaa
inc
xchg
andl
pop
jmp
aam
xor
loope
push
ss
jne
cmp
xchg
push
xchg
shrl
push
aaa
repnz
cmpb
inc
icebp
lods
inc
ljmp
dec
out
mov
jge
cmp
and
data16
xchg
sub
mov
fdivrs
xor
inc
push
push
aad
push
aas
xchg
xchg
jle
iret
sbb
popa
add
inc
sub
pop
mov
dec
mov
jmp
xor
call
in
das
leave
std
scas
andb
nop
fsubr
outsl
fisubrs
cmc
fmuls
in
cmp
fstl
repnz
negl
aaa
pop
xchg
dec
scas
push
dec
jge
cmp
xchg
sub
pusha
xor
movsb
dec
and
dec
push
in
int
or
nop
xchg
nop
fisttps
lock
outsb
ret
cmc
fs
out
inc
stos
pop
mov
pushl
cld
es
ret
and
mov
inc
sbb
call
inc
in
rcl
adc
fucomip
add
pop
and
fwait
or
pop
jecxz
ror
dec
jb
in
push
lock
cmp
and
sbb
out
mov
cmp
rol
cmc
outsb
lret
std
lea
scas
scas
push
dec
ror
xor
mov
stos
mov
popl
fs
and
xchg
adc
sub
in
mov
ja
inc
dec
fnsave
int
jbe
and
shl
jmp
mov
mov
imul
fadd
not
lods
insb
popf
sub
repz
pop
jmp
cmp
sbb
test
mov
enter
in
jbe
incl
xchg
xchg
sub
adc
adc
inc
scas
popa
sub
movsb
ret
pop
jmp
pop
std
cmp
pop
jle
push
xor
scas
sbb
xchg
stos
movsl
sbb
adc
mov
scas
adc
insl
or
fisttps
lahf
jmp
xchg
stos
lock
mov
inc
movsb
jnp
bswap
cmpb
out
inc
xchg
out
inc
sarl
dec
sbbl
jmp
subb
mov
and
xchg
pushw
sbb
iret
out
test
pop
cmp
inc
cmp
call
mov
mov
inc
ja
mov
adcl
xchg
mov
xchg
jl
fsubs
xchg
xor
xor
fwait
jae
into
xor
lods
mov
mov
call
cmp
negb
inc
out
decl
scas
xor
cmp
test
push
call
pop
bound
fdiv
inc
js
cmpsl
jge
push
xchg
inc
cmp
in
mov
adc
lock
call
push
scas
frstor
out
aas
xor
decb
nop
mov
roll
jg
loop
repnz
sti
add
bound
stc
jecxz
xor
inc
mov
xchg
add
pushf
cmp
mov
popa
adc
cmp
aad
jns
dec
nop
dec
xchg
push
mov
inc
insl
jge
sbb
pop
lea
mov
mov
xchg
mov
mov
loop
push
insl
xchg
rorb
add
leave
mov
scas
es
add
stc
dec
data16
in
je
jbe
fsub
xchg
inc
aas
aam
inc
out
add
cs
pop
cltd
mov
or
mov
and
out
sub
and
imul
es
mov
jb
mov
or
sbb
and
jmp
stc
adc
aad
cli
ljmp
mov
or
bound
mov
push
add
mov
flds
testb
lea
cmp
cwtl
pop
push
sbb
mov
jle
leave
xor
or
xchg
mov
orb
mov
cli
sbb
outsl
sub
shlb
roll
and
dec
mov
aam
mov
into
cmp
lods
fnstcw
cmpsl
mov
sub
cmp
popf
xchg
call
clc
sub
movsb
dec
popa
je
insb
fwait
scas
bound
ss
or
mov
push
jecxz
mov
and
insl
dec
movsb
xor
cmpsl
pop
jge
dec
cmp
dec
add
cwtl
daa
dec
mov
icebp
out
adcb
insl
mov
inc
sub
shrb
push
pop
jle
ret
pop
sub
jo
inc
cli
jno
mov
iret
aas
rcl
xchg
fidivs
xchg
aaa
sub
adc
bound
mov
jne
dec
dec
jo
xchg
mov
add
xor
cmp
cmp
xor
push
dec
push
sub
and
xlat
mov
aam
icebp
and
and
push
sahf
stc
sbb
or
adc
in
mov
or
stos
dec
std
daa
mov
ret
jno
or
sti
and
pushf
sub
popa
shll
mov
mov
scas
xor
xchg
jge
dec
imul
je
mov
and
push
fnstenv
clc
lret
cli
mov
sbb
int3
inc
push
pop
push
dec
iret
mov
aas
mov
stos
jp
xchg
fs
sbb
jne
cmp
aas
mov
add
add
sbb
xchg
inc
mov
inc
inc
dec
fidivrs
inc
xchg
loopne
dec
test
push
pop
jo
xchg
shl
outsb
and
mov
rol
imul
cmp
decb
movsb
xchg
idiv
xor
sub
pop
add
popa
out
xchg
push
addr16
sti
and
jg
sbb
sbb
int3
mov
pop
jle
pop
push
sbb
leave
movsl
cltd
or
jle
into
icebp
imul
cmp
leave
push
mov
pop
fidivl
pop
or
inc
into
loope
lcall
adc
cmpsb
or
pop
popa
loop
js
push
divl
cmpsb
cmp
mov
xchg
test
aad
into
mov
xchg
insb
mov
mov
xchg
dec
iret
lods
lcall
movsb
jge
mov
ret
mov
mov
or
add
xor
out
ja
lret
inc
jnp
cmp
pop
loope
in
flds
jne
push
dec
mov
add
ja
push
cwtl
loop
inc
mov
pop
xchg
mov
sti
xor
lea
lea
pop
and
inc
lret
fidivrs
jb
fisubl
dec
mov
lock
icebp
fnstsw
les
xor
arpl
push
call
mov
dec
add
dec
inc
test
lret
xor
loope
cmp
mov
pusha
pop
cld
lret
mov
sbbl
and
divl
sbb
pop
mov
cmp
outsb
cmp
sub
scas
int
imul
pop
lcall
es
in
imul
lock
jae
addr16
clc
and
mov
xor
push
sub
pop
mov
xlat
sub
xor
sbb
xchg
into
xchg
fsts
or
in
xchg
test
xchg
sbb
mov
and
test
mov
jb
sub
rcrl
cmp
and
pop
xchg
dec
or
call
outsb
xor
or
pop
mov
fldenv
jmp
cmpsl
stos
bnd
cmp
and
mov
or
cld
fwait
dec
adc
arpl
addr16
into
into
adc
lahf
and
imul
imul
push
mov
mov
xorb
cltd
call
lcall
ficompl
leave
mov
repnz
pop
add
add
fiadds
cld
insb
rorl
gs
mov
call
mov
sbb
push
int3
lock
cwtl
gs
pop
mov
jo
sub
add
in
and
or
fldcw
imul
into
xor
mov
es
cltd
fdivl
mov
inc
jns
fisubl
in
into
movsl
cld
ret
jge
sbb
nop
imul
push
dec
aas
adc
adc
pop
adc
and
and
movsb
push
fmuls
mov
out
mov
mov
and
push
dec
sub
enter
lods
aam
ret
dec
push
sub
outsl
sub
iret
cmpsl
dec
inc
call
loopne
pop
jbe
mov
dec
daa
mov
xor
sahf
repz
enter
push
mov
pop
xchg
dec
pop
push
loope
fs
jl
dec
push
mov
mov
jle
fnsave
aas
push
pop
clc
fcoml
add
pop
mov
mov
sub
hlt
xchg
cmc
xor
sbb
pop
xor
inc
lods
cmp
or
inc
fadd
mov
dec
xchg
mov
adc
add
xor
push
out
mov
push
lock
inc
out
mov
push
out
shrb
jp
sahf
mov
fxch
and
inc
dec
inc
insl
pop
stos
push
subb
orb
pop
pop
sub
lock
add
fiadds
pop
mov
inc
lea
vpextrw
lds
cmp
icebp
fdivrl
mov
push
sbb
int3
xchg
movsl
dec
xchg
pop
outsl
or
call
and
sbb
hlt
pop
and
adc
xchg
daa
and
push
sbb
and
sbb
dec
mov
sub
andl
test
push
mov
sbb
cmp
pop
dec
nop
push
sub
pushf
cmp
outsb
adc
add
dec
fs
xchg
cmp
jae
inc
push
jno
lods
pop
dec
sbb
scas
cmp
lds
inc
int
cwtl
gs
loop
xor
movsb
movsb
fcmovu
mov
sahf
clc
xchg
cmp
std
adc
or
leave
mov
sub
ja
daa
shll
test
push
scas
or
or
out
call
sub
xor
jns
jmp
outsl
std
mov
adc
sbb
cmpsb
jnp
lcall
dec
aaa
and
dec
mov
jp
push
and
mov
pop
and
ds
sub
jle
fstl
xor
mov
test
adc
xor
insb
das
cwtl
clc
cmp
adc
dec
enter
cli
in
mov
shrb
mov
cmpsl
push
jo
lock
mov
int3
cs
xor
fistl
or
aas
push
clc
xor
les
mov
orb
in
or
frstor
or
fcmovnu
adcb
in
mov
xor
cmp
out
xchg
into
xlat
dec
popf
push
test
je
cltd
in
mov
test
lock
int
in
add
pop
mov
dec
sbb
and
stc
or
xchg
arpl
fstp
in
push
push
js
xchg
add
js
movsl
push
das
sahf
jae
iret
fs
fcomp
scas
mov
mov
mov
cli
mov
cs
into
mov
in
inc
sbb
jl
adc
xchg
mov
clc
xor
jo
shlb
out
outsl
mov
mov
aad
movsb
aas
clc
mov
xor
popa
add
mov
addr16
cmp
and
mov
mov
enter
xchg
aas
pop
adc
cltd
repnz
push
jl
test
dec
lcall
sti
daa
mov
xchg
jbe
or
sahf
mov
fmuls
je
int
or
adc
jl
mov
aam
cld
into
ds
add
testl
arpl
in
nop
mov
bound
xor
cltd
mov
add
xor
subl
push
adc
push
mov
loope
shl
jb
test
add
adc
cmpsb
mov
lret
popa
imul
out
ljmp
push
arpl
rcl
push
mov
or
push
mov
xor
enter
jmp
hlt
es
orb
dec
inc
into
int
imul
mov
or
push
fadds
sub
pop
fcom
jle
xlat
int3
cmpsb
sbb
enter
lds
push
test
and
dec
xchg
mov
divb
stos
insb
xor
scas
insb
cmp
sub
outsb
lds
push
sbb
rorb
add
inc
mov
push
iret
imull
scas
inc
push
sbb
pop
subl
xorb
cmp
mov
outsb
mov
cltd
mov
and
mov
dec
mov
outsl
pop
xor
or
add
xchg
call
les
push
imul
mov
mov
xchg
mov
xor
fisubs
aas
mov
rclb
arpl
in
cmp
cmpl
rolb
adc
jae
stc
or
push
jne
lcall
adc
hlt
sub
cmpsl
add
push
pop
bound
rcrb
lcall
out
bound
sub
push
aad
iret
imul
xchg
add
push
xchg
xchg
mov
push
loop
mov
cmp
enter
jns
cmp
pop
cmp
dec
cmc
and
sbb
xlat
pusha
movsl
cs
inc
mov
addr16
das
rcll
test
out
cmp
pop
mov
cmpsb
in
sub
mov
lock
cmpb
sub
xchg
sbb
imul
scas
push
pop
pop
bound
mov
lods
das
xor
mov
mov
fs
dec
addl
sbb
dec
popa
and
sub
mov
sti
bound
iret
repz
cmp
test
mov
in
push
stos
icebp
xor
nop
ss
push
pop
jo
xchg
out
arpl
or
out
out
shrb
lret
pop
xchg
mov
imul
je
sbb
sahf
addb
jmp
jae
pop
and
cld
mov
fdivl
cmc
xchg
rcrl
aaa
inc
shll
jae
xchg
inc
push
into
sti
outsb
inc
push
mov
popa
cmp
in
sub
pop
jae
and
call
pop
sub
or
sub
pop
test
jmp
push
and
imulb
arpl
jno
lea
repnz
int
cmp
mov
iret
adc
xchg
push
or
lods
dec
fcomip
lcall
aas
lods
push
cmp
adc
xor
insl
in
inc
cmp
pop
jg
mov
loopne
insb
xor
sub
dec
outsl
mov
stos
stos
xlat
add
lahf
sub
xorb
adc
dec
loopne
in
addr16
mov
sub
out
mov
xorb
push
mov
sub
pop
and
push
cli
mov
ret
cld
pop
ljmp
cmp
movsb
jo
sub
imul
dec
push
ljmp
add
clc
imul
inc
sbb
testb
xlat
shlb
lea
mov
mov
dec
mov
dec
cmp
repz
je
and
push
sbb
femms
xor
push
push
lret
out
push
fnsave
push
mov
sbb
sub
in
icebp
or
adc
shlb
lret
inc
jl
pop
in
repz
cmp
pop
mov
sbb
insb
in
fisubs
addr16
cmp
cmp
out
and
ljmp
and
jg
sahf
adc
outsb
leave
push
pop
and
dec
lret
sbb
or
inc
sub
mov
push
mov
femms
inc
and
jns
mov
pop
popf
arpl
mov
clc
mov
movl
xchg
enter
test
stos
clc
aad
nop
adc
inc
adc
jle
icebp
pop
inc
mov
imul
jg
es
cmp
adc
or
data16
les
jb
sbb
test
or
scas
adc
pop
ljmp
mov
repz
and
mov
mov
and
mov
add
lcall
paddd
cmc
mov
ret
lret
push
mov
clc
je
sub
fidivs
movsl
popa
cmp
dec
jne
jo
sub
loop
adc
push
xchg
dec
popf
test
xor
outsl
ds
mov
roll
pop
jmp
outsl
mov
mov
out
push
mov
bound
sbb
in
rcl
mov
lods
push
fimuls
popa
loope
xorb
stc
decb
cli
mov
adc
lods
dec
mov
lret
cmc
and
aad
adc
filds
cs
cs
sbb
lahf
lcall
sbb
jecxz
fildll
jno
scas
stc
mov
mov
xchg
iret
out
popa
rolb
test
fcoms
imul
mov
xchg
and
rol
xchg
in
and
mov
add
insl
ss
xor
outsb
add
popa
fsubs
inc
and
inc
lods
cli
repz
adc
les
jnp
sbb
cld
int3
adc
fcmovb
pmulhw
loop
rcr
dec
mov
not
sub
sbbl
lock
mov
sub
xchg
push
cli
push
add
je
xlat
call
mov
shlb
nop
outsb
ret
add
sbb
ljmp
jb
std
and
movsb
mov
out
lahf
pop
hlt
jno
add
repz
ret
insb
sub
aad
ja
dec
pop
stos
in
stos
lock
jle
mov
aam
in
pop
sub
or
ds
inc
or
mov
push
push
jne
stos
test
flds
dec
js
cmp
cmp
cld
into
sub
lcall
iret
lods
mov
jp
sbb
cmpsl
mov
imul
push
out
mov
mov
outsl
or
rcl
ljmp
repnz
mov
ds
test
dec
or
jle
cmp
fmull
xchg
cwtl
inc
aas
and
orl
adc
stos
jp
ss
ljmp
mov
scas
divb
jmp
pop
or
lret
xchg
cmp
fwait
inc
cli
scas
adc
imul
sahf
sbb
insl
shl
sbb
dec
jns
fs
cmp
xor
jbe
pop
leave
movsl
mov
daa
out
shll
popf
mov
cltd
int3
in
loop
arpl
jge
pop
divb
leave
or
sub
mov
mov
popa
push
test
sbb
rclb
sub
xor
cs
insl
xchg
add
clc
jo
mov
lcall
dec
xchg
loope
out
xor
sub
ficomps
es
call
out
jae
mov
mov
push
nop
and
jecxz
rolb
sub
inc
xchg
cmp
imul
lods
push
add
jae
sar
ss
push
int
jle
mov
jb
xchg
mov
outsl
leave
sbb
insb
fmul
and
bound
jno
jg
outsl
inc
sti
cwtl
sbb
mov
ficoms
mov
gs
call
mov
cld
push
jl
mov
jne
mov
jns
insl
out
inc
out
daa
ljmp
xchg
mov
movsl
out
xlat
xchg
and
or
inc
inc
scas
sarl
pop
jmp
mov
in
imul
push
sub
lret
incb
sbb
mov
mov
or
pop
jp
sbb
mov
and
outsl
push
lcall
sbb
xorb
xor
stc
xlat
out
xor
mov
xor
repz
pop
sbb
add
jg
je
test
ljmp
push
fstl
dec
or
add
mov
test
inc
pop
cmp
fstl
push
xchg
add
mov
xchg
insl
and
cmpsb
and
inc
imul
ror
leave
or
cmp
cmovp
pop
mov
add
fwait
cmp
in
xchg
dec
es
repz
jge
stos
rclb
xchg
sahf
add
inc
jnp
pop
add
xor
sub
dec
cmp
shrb
sub
scas
xor
push
push
mov
fbld
mov
mov
in
faddp
das
mov
jno
je
rolb
std
repnz
cmpsb
les
pop
lret
clc
mov
and
pushf
in
orl
xchg
inc
xchg
and
cmc
xor
repz
orb
pop
push
xor
aas
lcall
jb
mov
dec
std
push
mov
jb
push
cmc
ret
sbb
sahf
call
mulb
lods
or
setb
push
fcompl
dec
scas
out
test
mov
es
xchg
insl
xchg
loop
popf
jae
push
inc
mov
xchg
mov
mov
das
xchg
mov
loope
ret
sub
mov
int
or
dec
paddw
repz
inc
mov
mov
add
inc
fnstenv
push
outsb
xor
inc
test
ja
gs
cld
lods
lods
ret
or
inc
mov
dec
inc
xchg
rclb
daa
movsl
test
push
insl
ret
xchg
add
pop
inc
aas
fsubs
in
cmp
jp
inc
out
stos
or
add
add
in
xchg
add
push
mov
cli
push
add
mov
stc
jb
loop
pinsrw
mov
pop
scas
in
adc
outsl
popf
adc
aaa
sbb
popa
and
pop
jg
in
jmp
pop
or
movl
sub
jnp
add
iret
or
mov
in
push
cld
cmp
xlat
stos
sarl
jle
mov
leave
imul
pop
mov
dec
jecxz
andb
jnp
iret
outsl
cmpsb
mov
test
jg
mov
addl
mov
sub
fiaddl
shr
inc
test
push
aam
jecxz
insl
jno
push
in
cld
cmp
sub
jae
jns
std
cmpsl
and
aam
sub
shrl
dec
rcrb
ds
xchg
icebp
jmp
jmp
addr16
xor
rol
loop
xchg
subl
mov
mov
push
jbe
iret
movsl
mulb
push
stos
fbstp
je
cmp
or
lahf
mov
shl
pop
scas
push
movsb
in
sarb
nop
rorb
adc
aaa
xchg
hlt
sahf
mov
into
or
or
xlat
rclb
aam
aam
or
mov
sub
fs
lea
jb
icebp
popf
push
sbb
imul
mov
stos
iret
jb
sbb
rcrb
cmp
cmp
daa
insb
add
mov
ljmp
and
cmpsl
in
cmpsb
push
dec
fcmove
dec
aas
int
andl
into
dec
stos
pop
cmp
dec
fdivs
nop
lods
xchg
loopne
data16
arpl
mov
lahf
lret
rolb
repnz
insl
push
mov
repz
cmc
mov
popf
cld
sub
leave
not
jmp
and
sbb
lea
mov
inc
add
cs
call
pop
cli
and
add
cld
loop
movsb
jp
lahf
in
mov
push
cmp
test
aas
sub
and
pushf
dec
dec
jg
xchg
push
aad
or
sbb
push
movsl
mov
and
jecxz
sti
stc
shlb
dec
ror
mov
lahf
xor
mov
aam
sar
mov
xchg
jle
and
and
pusha
xchg
dec
fnstenv
ss
shufps
mov
clc
jno
mov
aam
mov
and
andb
pop
xor
scas
fcmovb
and
call
cmp
sub
imul
imul
int
fistpll
or
pop
shrb
xor
xlat
inc
icebp
mov
es
pop
push
fldenv
sti
sbb
lods
push
std
mov
xchg
subb
adc
call
outsl
lahf
cmc
mov
cmp
jle
sub
fwait
stc
divl
push
nop
and
insb
inc
cld
test
loopne
dec
imul
cmpsb
in
push
xchg
pop
daa
sbb
in
pop
mov
lds
push
adc
cld
cmp
pop
repz
incb
scas
pop
and
jbe
mov
mov
outsl
push
pop
movsl
in
imul
inc
loope
mov
arpl
cmp
daa
inc
mov
push
cmp
sub
inc
out
lea
fwait
push
mov
popa
je
cli
shll
lea
aas
es
je
jb
lea
negb
clc
mov
out
repnz
popa
test
xchg
jg
jle
mov
mov
dec
repnz
sbb
push
nop
iret
das
orb
and
add
mov
in
stc
mov
and
dec
in
xchg
hlt
mov
jge,pt
call
ds
mov
dec
adc
or
cmp
jp
jg
rorb
lret
hlt
fcoml
jb
loope
aam
dec
jmp
imul
ret
or
ret
fsubrl
push
add
cmpsl
mov
xor
xchg
shrb
push
mov
dec
das
cmp
stos
pmaxub
test
adc
add
imul
dec
cwtl
data16
clc
add
outsb
fcomps
rol
push
pop
sbb
ret
mov
cwtl
pop
fists
fdivp
loopne
xchg
mov
mov
lds
enter
xchg
push
dec
xchg
mov
dec
cs
xlat
nop
cmp
mov
mov
addl
jecxz
jmp
out
dec
jno
mov
xchg
out
xor
inc
andb
sbb
push
sbb
mov
data16
adc
enter
sub
in
mov
lods
xor
jb
xor
pop
loope
outsb
adc
test
cs
movsl
push
jl
sahf
pop
arpl
pop
divb
xchg
ljmp
fldenv
sbbl
jmp
testb
jb
test
push
orb
lods
imull
sahf
inc
jmp
pusha
fstpl
in
imul
sub
movsl
and
and
add
add
mov
push
minps
iret
cwtl
adc
inc
dec
imul
scas
cmp
das
dec
leave
jnp
idiv
outsl
xchg
scas
cmp
sub
push
pop
pop
call
imul
or
movsb
scas
xchg
lds
enter
cwtl
scas
fcom
jns
stos
imul
push
add
mov
clc
add
jae
test
xorb
push
inc
cmp
clc
add
dec
cld
and
add
es
sahf
xchg
andb
mov
fisttpl
cmp
daa
icebp
jo
insl
mov
push
or
std
add
xor
aam
lret
mov
ja
mov
push
inc
adc
mov
in
aad
fdivr
xchg
adc
cmp
pop
xchg
lds
mov
pop
xor
mov
addb
and
cmp
or
or
fwait
ret
pop
mov
mov
test
je
jl
mov
add
div
pop
leave
mov
lcall
inc
add
inc
jbe
dec
xchg
sbb
pop
iret
xchg
mull
inc
stos
dec
adc
adc
fsubs
inc
rcll
jno
sub
cmpsb
adc
rorb
les
xchg
sub
xor
adc
insl
insb
movsb
sbb
push
jl
sbb
adc
dec
jno
dec
scas
sbbl
adc
loope
inc
dec
ficompl
pop
add
add
movsb
add
sti
mov
out
sbb
mov
pop
ljmp
shll
lock
xchg
aaa
movsb
mov
xor
jo
xchg
out
lret
mov
add
outsb
sbb
add
and
mov
or
roll
push
xchg
cmp
jae
add
out
lods
nop
mov
in
jbe
cs
fisttpll
lock
enter
sub
idivl
jne
cmp
nop
je
loope
dec
gs
pop
out
test
add
pop
aas
fwait
div
in
pop
test
dec
mov
cmp
or
push
mov
adcl
test
xchg
adc
xor
push
sub
xor
repz
outsb
xor
pop
mov
pop
jbe
jecxz
sbb
shll
es
pushf
cltd
mov
fdivl
lcall
and
cmp
adc
inc
xor
jg
push
js
mov
ss
aam
mov
lret
inc
mov
leave
cmp
loopne
loop
sbb
jle
sub
jns
loop
or
sbb
scas
mov
loopne
and
dec
dec
por
fstl
mov
mov
inc
xchg
pop
mov
mov
sbb
xor
jns
xor
adc
fldt
scas
jnp
cmp
ss
movsl
test
push
sbb
push
daa
mov
in
push
fldt
in
lahf
adc
cmp
jno
int
imul
jmp
das
sbb
cmp
add
aas
test
mov
cli
xchg
and
addb
movsl
aam
jbe
mov
pop
sub
repnz
adc
mov
mov
adc
adc
mov
fbstp
mov
ss
imul
call
push
mov
and
inc
fcoms
adc
xchg
dec
aas
sub
add
hlt
lds
xchg
dec
mov
push
scas
aas
repnz
mov
adc
pushf
jae
or
mov
push
jecxz
sti
rcr
jp
push
push
mov
cmp
pop
mov
stc
mov
aas
fildl
iret
imulb
cld
in
mov
xchg
xchg
mov
add
sub
aas
shlb
sar
cmp
push
ret
cwtl
insb
insb
pop
stos
movsb
sbb
lret
out
arpl
fisubl
mov
dec
lcall
xchg
roll
xor
push
push
imul
or
nop
stos
inc
aad
leave
mov
cmp
push
scas
imul
dec
in
leave
test
sbb
sbb
xchg
fdivr
loopne
lods
adc
jns
shll
sbb
shll
pop
shrl
shr
jp
out
add
or
lds
jge
jnp
lods
fbld
out
aam
jg
push
mov
jg
inc
cmp
jg
pop
es
jne
mov
xchg
adc
cmp
outsb
cmp
aas
jns
or
dec
das
push
es
add
loopne
clc
in
sbb
leave
into
xchg
jmp
rorb
imul
inc
mov
inc
mov
or
loope
movb
aas
stc
in
inc
lcall
inc
dec
in
imul
stc
xor
dec
push
int3
push
sub
fdivs
sub
cmp
es
enter
iret
mov
mov
outsl
dec
repnz
xchg
push
out
loopne
push
mov
jle
jbe
or
push
out
pop
or
test
sbb
sub
sti
mov
repz
push
mov
popf
mov
xchg
add
fidivl
and
movsl
push
in
mov
and
stos
inc
mov
inc
xchg
pop
neg
je
cmp
xchg
push
movsb
jecxz
adc
mov
fcmovnb
jb
out
mov
repz
dec
loope
enter
fbstp
pop
or
mov
icebp
ret
dec
push
mov
call
dec
cmp
nop
cmp
insl
jl
daa
mov
jno
imul
or
cwtl
xchg
shl
jb
xchg
pop
test
idivl
pushl
xchg
ss
stc
mov
push
popf
dec
mov
imul
xor
arpl
xchg
in
cmp
adc
js
in
int
mov
stos
mov
pushf
mov
out
xor
enter
mov
imul
call
mov
adc
and
outsb
std
lahf
aam
sahf
addr16
cwtl
jg
mov
aad
sub
dec
dec
mov
mov
pop
out
mov
lods
inc
int
sub
loopne
sbb
inc
lods
pop
test
adc
pop
lods
or
xor
test
pop
fsubrl
fadds
shl
jae
jbe
mov
je
push
or
xchg
insb
sbb
lea
jnp
fwait
das
adc
aaa
stc
xchg
loop
add
xchg
lods
test
mov
push
test
or
inc
adc
filds
inc
push
filds
incl
aad
push
cmp
jecxz
cmp
pop
xchg
inc
lods
mov
jg
lds
pop
jp
es
sub
xchg
sbb
cld
cld
pop
icebp
lea
or
sub
inc
push
inc
movsl
lods
ret
movb
hlt
sbb
stc
mov
test
mov
xchg
pop
movsb
cltd
pushf
adc
test
sbb
lods
ds
or
icebp
fwait
mov
in
xchg
jns
push
inc
mov
loope
lcall
aad
lcall
mov
jo
push
cmc
jnp
mov
daa
out
adc
jbe
xor
pusha
scas
sbb
pop
out
ljmp
jbe
shll
add
pop
add
std
sti
mov
inc
jmp
subl
aaa
xor
popa
gs
xchg
push
jl
jbe
adc
iret
add
movsl
cmp
stos
pop
nop
sub
xor
mov
pop
pop
loop
lock
mov
lahf
xchg
dec
mov
and
aam
fcmovbe
push
or
push
xchg
sub
outsb
inc
shll
sbb
movsl
int3
test
jle
push
loop
movsl
fdivrp
rorb
dec
loope
das
fstpl
push
stos
movsb
rcrl
jp
leave
call
mov
aam
je
out
sub
icebp
xor
bound
arpl
in
repz
call
out
xchg
sub
movsb
pusha
sbb
jecxz
movsb
pushf
ret
outsl
in
dec
imul
xchg
xchg
dec
cld
add
mov
xor
popa
pop
call
xchg
sub
stc
xchg
mov
push
adc
enter
xorl
scas
pushfw
xor
jbe
mov
sbb
aad
roll
mov
and
sbb
jns
lock
rcll
sub
mov
mov
sbb
xor
push
scas
std
xor
insb
push
jge
xor
cmpsl
jo
jl
int
xchg
in
test
jb
mov
push
xchg
xchg
add
xchg
lcall
dec
aas
and
shlb
out
mov
rcrl
loop
ljmp
add
cmp
pop
mov
push
cmpsb
jmp
or
insl
call
xchg
sbb
mov
mov
adc
iret
fistpl
mov
pop
xor
fwait
inc
jo
adc
sub
sbb
ret
push
movsl
out
int
imul
inc
and
cmp
sub
add
push
int3
into
les
in
pusha
sub
add
mov
lds
push
insb
ret
call
cmp
xor
mov
sub
adc
adc
movsl
scas
int
incl
scas
adc
xchg
push
pop
mov
push
popa
daa
shlb
sti
adc
add
ds
dec
aaa
testb
out
ret
push
sub
cwtl
jb
sbbb
mov
xor
ret
sbb
das
jmp
mov
lods
js
adc
lcall
imull
xor
inc
nop
stc
push
sub
lods
in
and
test
mov
js
das
inc
cmp
sbb
jne
or
and
rcr
test
jo
mov
add
push
push
mov
sub
dec
xor
inc
jp
xchg
addl
lods
jae
in
dec
stos
cltd
test
fdivrs
repz
push
repnz
sub
in
shll
fdivs
pusha
into
adc
sbb
push
lds
fildl
popf
xor
in
test
xchg
fmul
pop
imul
test
int3
int3
popa
xor
pop
add
jge
aaa
dec
cmp
dec
pop
xor
push
cmp
inc
lcall
lahf
test
mov
xchg
adc
mul
pop
testb
or
mov
ja
jl
lcall
fidivl
and
xchg
pop
lcall
outsl
ficoms
xor
adc
mov
scas
sahf
cwtl
in
addr16
cld
mov
adcb
popf
ret
xchg
stos
cwtl
test
sub
out
xor
pop
or
gs
dec
xor
push
xchg
jno
rcrl
sub
imul
sub
dec
xchg
arpl
push
jne
sbb
sbb
mov
push
dec
lods
push
sbb
jp
dec
and
test
cmp
js
roll
jmp
in
inc
lods
mov
in
mov
xchg
xchg
sub
outsl
ret
mov
push
pop
aam
pop
add
dec
es
popf
test
dec
in
sub
dec
test
sbb
sbb
lahf
jmp
adc
nop
inc
push
cmpsb
inc
ja
mov
lea
inc
jp
popf
adc
or
and
adc
pop
adc
scas
fidivs
shlb
test
cmp
inc
sti
push
fisttps
fdivl
notl
adc
add
loope
and
btsl
aam
xor
or
mov
mov
adc
adc
sbb
push
ljmp
in
sub
inc
incb
dec
cmp
add
outsl
adc
push
and
hlt
popf
mov
jmp
stc
cwtl
mov
pop
stos
jle
das
inc
stos
repz
mov
mov
fadds
lea
push
inc
mov
scas
mov
pop
divl
xor
push
pop
and
pop
nop
jp
into
jecxz
xor
popa
cld
mov
data16
mov
sub
mov
repz
push
add
data16
stos
popa
push
outsb
xchg
fld
xor
push
mov
arpl
and
out
ljmp
fisttpll
pop
shrb
mov
call
dec
loop
dec
stos
add
jne
les
insl
cmp
aas
xchg
gs
mov
sub
das
ljmp
adc
add
loope
pop
cld
mov
push
outsl
shlb
jbe
outsb
shl
mov
rcpps
push
inc
mov
rorb
add
xchg
mov
mov
cltd
jne
pop
nop
imull
stos
dec
xchg
cmp
or
xchg
imull
mov
sbb
nop
pushf
or
imul
mov
pop
pop
call
leave
out
mov
lds
cmpsl
xchg
push
xchg
sub
ror
mov
inc
lds
jno
cwtl
lock
push
es
incb
adc
pop
or
loope
mov
cs
push
fsubl
push
add
push
mov
jmp
ret
jmp
mov
jo
outsb
and
ret
push
shl
pop
test
add
call
mov
xor
mov
cmp
sarl
sub
mov
lret
xor
xchg
ljmp
add
pop
sub
cld
dec
rolb
int3
and
daa
jle
aam
dec
out
fcoml
sbb
pop
dec
cmpsl
leave
into
lock
inc
enter
mov
bound
xor
shl
push
lahf
cmp
dec
xor
iret
adc
mov
sub
popl
adc
ds
pop
push
aam
ret
das
add
push
xor
pop
addb
imul
jmp
addl
data16
movsl
out
into
pop
dec
into
sbb
mov
xor
clc
mov
out
mov
arpl
sub
pop
fnstenv
add
ds
jo
pusha
mov
add
outsl
test
ss
dec
mov
leave
adc
sbb
int
cld
stc
fmull
push
jecxz
cmpsl
enter
ljmp
mov
cmpsl
mov
cli
insb
or
aas
bswap
imul
sbb
sub
sbb
mov
inc
out
jecxz
lods
int3
add
loop
mov
sbb
dec
mov
mov
ret
jae
stc
fs
dec
icebp
xchg
aad
in
xchg
fcoms
mov
enter
inc
jbe
jb
int
or
ja
xor
stos
xchg
jae
test
or
clc
aas
pusha
sub
test
in
or
push
xor
cmp
sbb
out
outsb
loope
mull
jg
rolb
xor
icebp
addl
loop
add
movsl
lret
push
clc
jns
test
xchg
xor
test
cwtl
sbb
lods
and
test
cmp
and
ss
or
icebp
sbb
vmulss
jnp
or
dec
daa
iret
scas
arpl
xchg
ret
xchg
aaa
fnstenv
insl
cmpsl
nop
sti
or
aas
pop
out
sbb
xchg
loopne
and
xchg
or
push
ficomps
addr16
cltd
bound
dec
repnz
je
sub
xor
xchg
mov
dec
and
jae,pn
add
mov
lods
rclb
ljmp
mov
and
int
sub
jmp
popa
lods
cmc
jge
pop
jb
mov
pop
test
push
arpl
out
negb
mov
xchg
add
rclb
xlat
inc
cmp
sub
mov
push
mov
sub
loopne
inc
push
mov
jno
inc
mov
push
mov
rcrl
xchg
xchg
mov
adc
sub
and
push
xchg
push
dec
adc
outsl
dec
fsubrs
push
cmp
xchg
jge
jns
adc
notb
scas
mov
insl
push
jo
fstpt
inc
jge
popf
or
xchg
pop
movaps
loop
pop
movsb
in
adc
stc
iret
sarl
inc
lods
addr16
notl
addr16
push
jle
insb
pop
and
loopne
shll
push
mov
jo
ret
imul
sbb
jae
sub
jmp
and
mov
push
cli
lret
into
and
mov
mov
rcrl
ja
cmpsb
inc
fwait
xor
xchg
or
int3
outsb
mov
js
int3
sub
pop
xchg
push
je
ja
dec
js
add
mov
inc
sarb
cmp
movsl
sub
adc
dec
cld
push
xlat
push
iret
ffreep
cmpsb
jnp
ss
add
jle
cmp
dec
pop
dec
rcrl
shrb
mov
add
aas
mov
xchg
das
cltd
mov
and
je
pop
inc
add
jle
mov
pop
mov
pop
int3
inc
sahf
mov
xchg
loop
sbb
sbb
jp
xchg
ds
xor
jbe
lea
ljmp
das
idiv
jle
js
popa
mov
stos
cli
pop
ficoml
icebp
push
pop
loop
xchg
pusha
inc
fucomi
fcom
leave
adcb
or
imul
pop
push
or
out
xchg
test
adc
lahf
rcll
lret
test
sub
adc
xchg
jne
std
jmp
jbe
imul
xor
sbb
xlat
dec
pop
scas
insl
pop
mov
pop
pop
jg
rcrb
inc
mov
stc
lock
mov
clc
je
dec
jno
mov
or
mov
cld
ret
data16
out
outsb
sahf
nop
add
xchg
push
mov
mov
movsl
cli
popa
jo
cmpsl
pop
mov
or
sbb
outsl
stos
and
pop
mov
orb
je
sub
call
dec
mov
jae
mov
sti
sub
lret
lds
jg
pop
stc
push
ror
sti
popf
roll
jmp
inc
dec
sub
test
push
xchg
mov
stos
cmp
sub
mov
cmp
xchg
leave
mov
lods
out
inc
fldt
xlat
pop
mov
decb
ds
pop
push
sbb
sbb
jmp
xchg
lea
movsb
int
sub
aam
inc
aad
sbb
mov
in
adc
mov
fistpll
into
cltd
mov
cs
cli
pop
ret
outsb
insl
or
xchg
add
cmp
adc
and
mov
stos
xor
mov
outsl
mov
xchg
mov
pop
push
jmp
rcrb
dec
stc
cmpsb
push
fnstenv
sbb
fisttpll
pop
mov
mov
mov
mov
xchg
adc
pusha
mov
cli
cmpsb
inc
mov
out
sub
outsb
add
mov
jmp
mov
sbb
jecxz
xchg
inc
call
leave
daa
lahf
dec
ret
aas
push
jmp
xchg
push
push
cmpsl
mov
shrl
jge
nop
ret
pop
notb
cmp
pop
adc
ds
cmp
ljmp
mov
xchg
pusha
rolb
movsb
mov
movsb
mov
jle
dec
movsb
mov
les
and
popa
cmp
and
gs
xchg
and
js
pop
fnsave
mov
mov
dec
fs
mov
xchg
andb
xchg
xor
pop
mov
loope
into
push
cmp
int
sub
push
imul
jbe
sub
jp
popf
sub
pop
fldenv
add
test
leave
mov
ret
adc
ja
mov
loop
mov
pop
jae
shl
jbe
and
cli
jo
xchg
std
into
shll
adc
xor
pusha
popf
inc
push
mov
pop
and
xor
in
mov
in
lds
jbe
xchg
mov
mov
add
dec
mov
push
pop
xchg
xor
loopne
cld
int3
adc
cmpsb
mov
adc
das
call
mov
and
cmpb
mov
hlt
pop
jp
imul
dec
bound
pop
movsb
mov
inc
xchg
mov
fsubrs
mov
loop
repz
add
lock
xchg
pop
leave
mov
sbb
icebp
popa
loope
pop
iret
sbb
sahf
dec
add
push
or
roll
or
jg
dec
insb
mov
cli
mov
cmp
lods
call
jnp
enter
mov
push
jge
cmp
pop
aas
or
pop
int3
jo
testl
cmp
mov
and
cwtl
dec
outsl
rcll
sub
dec
std
cmp
inc
add
or
addr16
push
mov
test
imul
jmp
adc
hlt
sbb
and
div
fldcw
sub
xchg
sbb
ret
sbb
std
push
mov
xor
mov
cmpsb
hlt
test
test
aaa
dec
mov
pop
stos
rcrb
into
pop
clc
pop
push
xchg
jo
sbb
in
jb
pop
icebp
lea
out
add
or
xchg
push
xchg
shlb
jg
ret
ds
mov
push
movsb
pop
addr16
stc
lea
jle
mov
push
or
rorb
outsb
rol
xchg
scas
sbb
shlb
fnstcw
iret
xchg
xchg
lcall
js
adc
add
sub
lods
jns
jnp
push
inc
and
jp
les
cmpl
clc
fstl
pop
jmp
setb
xor
outsl
mov
cli
pop
lods
pop
cltd
push
outsl
cmp
pop
mov
stos
xor
pop
aam
mov
jns
sbb
leave
popf
pop
in
and
mull
iret
xor
push
gs
inc
pop
arpl
or
sbb
jg
ror
xlat
fwait
movsl
pusha
nop
add
js
sti
fwait
dec
es
sbb
pushl
mov
pop
add
mov
lret
push
adc
stos
push
out
mov
in
jp
stos
and
mov
adc
push
adc
push
cmp
movsl
fsubr
jns
pop
insl
cs
sbb
rcl
mov
insl
add
jecxz
xchg
xor
jb
std
pusha
xchg
mov
jne
and
outsl
test
out
das
lods
insl
stos
std
pop
sahf
lods
sarl
and
gs
mov
ftst
lahf
cmp
inc
pushf
into
shr
aas
pusha
add
pop
loopne
jg
pop
or
pop
clc
loop
rclb
mov
fs
aas
lret
gs
pop
xlat
and
xorl
push
cmp
sbb
and
jp
push
add
cmpsb
pop
xor
pop
ds
inc
jmp
or
push
and
or
decb
push
pop
data16
push
mov
jg
mov
mov
add
sarb
stos
shll
cld
movsl
cmc
jne
push
loope
mov
add
and
lret
mov
push
ficomps
push
push
xchg
pop
push
push
mov
mov
rcr
dec
and
xchg
es
jo
sub
push
mov
adc
pushl
pop
add
mov
cld
ljmp
inc
inc
mov
data16
pop
imul
frstor
ss
fcom
push
cmc
test
lds
test
aas
jp
insb
jbe
jns
mov
xchg
mov
sbb
dec
adc
push
fidivl
pop
mov
cmpsb
sahf
pop
xchg
mov
test
xor
bound
lcall
mov
cltd
mov
push
xchg
jl
cmp
mov
add
dec
iret
add
gs
repz
sub
jno
and
adc
mov
jge
sbb
leave
jo
bound
mov
nop
inc
into
js
push
test
sarl
es
push
cmp
mov
push
mov
popf
mov
pop
jnp
push
popf
ret
or
cwtl
loope
lock
cltd
stc
lea
add
lret
mov
sarb
lock
call
xchg
int
inc
je
add
add
rsm
sbb
xor
lock
repnz
ljmp
pushf
ret
addr16
mov
aad
cmp
aaa
pop
ret
sub
ds
loop
jae
jmp
pop
mov
dec
das
and
xchg
xor
inc
inc
xchg
int3
push
fidivl
cli
lds
aad
and
xchg
lock
dec
fdivr
mov
or
cmp
fsubl
cmp
addl
mov
push
ja
ficompl
jae
jae
jmp
lock
iret
xor
dec
mov
xor
ljmp
lods
loop
mov
out
fistps
dec
sub
lock
out
xor
sub
sbb
jns
xchg
mov
xor
dec
push
rcrl
inc
mov
fildll
mov
pop
or
js
jmp
fsubl
sbb
popf
daa
movsl
lods
fs
push
dec
std
jp
push
pop
loopne
mov
mov
js
xchg
fistl
inc
loope
jns
ljmp
xor
popa
dec
sub
test
bound
mov
xor
xchg
mov
mov
jle
pop
dec
xor
js
push
sub
icebp
dec
lods
mov
fcompl
shll
xchg
icebp
or
leave
adc
inc
arpl
cmpsl
sub
insl
or
pop
pop
cmc
orl
fwait
sbb
ss
into
repnz
hlt
add
sub
mov
testb
cli
test
imul
out
fdiv
xor
mov
push
out
mov
std
sbb
and
aaa
pushf
xchg
scas
std
bound
xchg
test
mov
adc
mov
cmc
push
mov
cmp
adc
push
adc
mov
pop
jo
and
pop
aam
and
dec
xchg
xor
mov
outsb
int3
scas
jno
lods
test
jbe
daa
cmp
fs
sbb
rclb
inc
pop
cmp
je
dec
addl
jnp
call
fsubr
pop
or
mov
mov
push
call
jae
pop
inc
push
movsb
cwtl
mov
test
add
inc
xchg
xor
xor
xor
mov
add
mov
xorb
push
and
xor
out
call
orl
mov
mov
ret
lds
add
stos
pop
and
or
stc
mov
cld
xor
lds
pop
aaa
cmp
dec
sbb
loope
insb
jbe
adc
jnp
inc
addr16
orb
enter
stos
sbb
popa
inc
fstpt
jmp
dec
dec
cli
ret
push
sbb
outsb
les
out
or
cmp
popf
fisttpll
pop
jbe
popf
scas
sub
movsl
dec
push
nop
fcmovne
out
mov
js
insb
in
inc
jge
add
out
mov
out
in
mov
testb
in
pop
pusha
lock
mov
inc
inc
fwait
out
lahf
pop
into
les
cli
aam
push
lahf
jae
aam
xor
sub
call
iret
fistpl
int
clc
sub
and
push
mov
xchg
fsubrl
pop
mov
outsb
scas
jno
cmp
sbb
inc
subb
dec
sbb
repnz
imul
mov
mov
or
fidivrl
outsw
andl
mov
fcmovbe
push
cmp
shl
mov
imul
popa
sub
dec
out
fbld
sarl
inc
das
pop
fcmovne
inc
and
mov
fstp
inc
dec
out
stos
ud1
outsb
and
mov
dec
jbe
movlhps
mull
push
icebp
xchg
jl
fcoml
repnz
repnz
cmp
ds
pop
fstp
jns
jle
xchg
in
std
popa
in
lahf
stos
pushf
mov
clc
push
pop
flds
sub
and
ljmp
inc
add
xchg
and
jmp
jno
mov
xor
inc
xlat
rorl
dec
adc
not
xor
adc
mov
xor
mov
arpl
dec
dec
and
push
xchg
jge
pop
inc
std
add
xor
xor
sub
outsb
and
pop
xor
jle
lret
xor
sti
pop
fdivl
dec
inc
mov
sbb
or
lret
push
jb
mov
or
jnp
sub
xor
xchg
orl
mov
inc
sbb
and
jge
mov
dec
mov
pop
pop
mov
mov
mov
notb
lods
movsl
push
lret
in
sbb
icebp
xor
sub
int
shlb
mov
in
int3
and
lahf
pop
out
imul
xchg
lea
push
or
rcll
cld
xor
fwait
adc
pop
rcll
cmp
inc
out
inc
scas
fwait
add
out
aad
adc
mov
cmp
aaa
in
mov
or
lea
test
xor
int
inc
out
xchg
mov
ss
std
ljmp
dec
aam
adc
or
xchg
jp
pop
lods
push
cltd
mov
arpl
adc
mov
data16
push
mov
xchg
sub
mov
jbe
inc
pop
ss
sbb
jns
add
out
pop
push
dec
jno
push
push
push
lcall
xchg
lret
jl
scas
add
leave
es
dec
outsb
adcl
or
rcrb
sub
out
hlt
sub
sahf
iret
scas
mov
fwait
lods
test
out
std
test
outsb
int
popf
insb
loope
cmpsb
mov
imull
add
sub
pusha
add
push
push
cmp
daa
sbb
dec
test
mov
loop
sub
dec
in
inc
inc
push
mov
jecxz
mov
pop
gs
scas
push
push
aad
in
dec
arpl
push
lock
jecxz
int
ljmp
adc
inc
scas
shll
cwtl
shll
xchg
popa
nop
dec
pop
dec
loope
scas
mov
xlat
andb
inc
xchg
nop
stos
rol
sbb
das
lods
pushf
lret
iret
xchg
fsts
cwtl
loopne
pop
sbb
das
jmp
mov
repz
jle
cmp
adc
adc
sub
lahf
shlb
lahf
pop
xchg
stos
adc
pusha
loopne
testl
mov
movsb
mov
cmp
mov
jg
jnp
aam
rcr
fidivrl
sahf
xchg
orl
sbbl
xchg
sti
daa
xorb
mov
lcall
cmpsb
push
mov
je
cmp
aam
xchg
lahf
sub
popa
popf
popl
mov
mov
mov
mov
rclb
jecxz,pt
nop
mov
jo
push
mov
push
xor
add
pop
daa
sbb
pop
jmp
sub
fisubrs
dec
mov
inc
mov
jb
mov
shll
cmp
mov
sbb
ds
or
es
fcmovnu
ss
inc
sarb
iret
add
cmpsb
sbb
in
add
fsubr
lea
inc
push
aam
add
dec
and
insl
jne
sbb
psrlw
std
inc
in
dec
push
nop
out
add
push
cmpsb
int
in
divl
pop
inc
sbb
push
fs
rol
sahf
jnp
xor
xchg
add
test
test
jg
jl
fsubr
lret
sahf
lods
xchg
xor
test
fisubrl
enter
mov
fnstenv
jo
repnz
jae
and
sub
mov
pop
push
mov
sti
cmpsb
jl
pop
or
mov
mov
andb
popf
jo
ja
cmpb
gs
lret
dec
push
ljmp
cmp
jle
push
sub
mov
lret
out
jno
enter
cld
jle
mov
repz
mov
nop
mov
xchg
push
mov
sbb
cwtl
and
jmp
dec
mov
inc
div
ror
or
icebp
daa
lock
adc
mov
or
jo
dec
icebp
mov
out
test
fstpl
fs
adc
pop
rcll
movsl
cmp
lret
popf
mov
popa
xchg
ret
xchg
sbb
aas
mov
insl
pusha
mov
and
xor
lea
jl
dec
dec
pop
or
divb
sbb
sub
push
jno
mov
inc
mov
pop
xor
jg
pop
inc
cltd
inc
mov
pop
ret
xchg
or
insb
test
call
xor
test
mov
push
sti
je
fimuls
out
daa
test
cmp
std
mov
and
ret
push
lahf
ss
fidivs
hlt
enter
sbb
sub
nop
mov
cmpsb
pop
push
aad
inc
scas
ss
and
sbb
cmp
test
jae
cmp
in
out
cmp
aam
movsl
jns
pop
sbb
jae
xchg
lret
js
nop
cmp
mov
inc
inc
jecxz
dec
mov
and
fimuls
adc
and
stc
notb
fcoml
adc
push
sub
loop
xchg
out
dec
or
je
mov
pusha
ret
dec
dec
jmp
inc
add
clc
fstl
push
mov
lods
fsubrs
mov
mov
adc
push
mov
adc
imul
gs
inc
push
push
test
pushf
jmp
add
mov
jp
dec
cld
xchg
add
push
addr16
andb
push
inc
lahf
ljmp
mov
and
out
or
mov
scas
loop
subl
fistl
mov
dec
adc
test
jle
pop
leave
mov
aas
pop
or
sahf
popa
faddp
faddl
insl
dec
shrl
or
push
inc
stos
aad
jg
inc
cmp
fs
stos
addr16
add
cmpsb
rcll
test
jbe
cmp
xchg
jno
cmc
add
mov
pop
push
adc
jp
int
inc
or
push
adc
adc
cmp
js
inc
ljmp
clc
adc
push
sbb
push
xchg
repnz
addr16
repz
push
mov
sub
cld
gs
xor
jae
adc
sti
inc
cmc
push
adc
inc
and
push
lret
popf
push
repnz
or
mov
pusha
cmp
addr16
pushf
daa
mov
dec
mov
and
inc
mov
cmc
cmpsl
pop
lret
loop
aaa
leave
cltd
cmpsb
and
and
sub
popa
add
fcompl
addl
lock
push
cld
push
cmpsb
mov
sbb
fstpl
and
aaa
int3
xor
mov
push
push
ret
ficoms
pop
sbb
sbb
test
mov
ljmp
mov
insl
add
jbe
imul
daa
mov
push
cmp
push
xchg
shlb
jb
mov
mov
jno
xor
dec
popa
xchg
pop
pop
sub
mov
inc
lock
addr16
lcall
mov
fistpl
or
adc
push
dec
nop
push
sbb
adc
xor
data16
cmp
cli
push
or
sbb
scas
aam
push
mov
rcrb
repnz
lods
into
jo
cmp
movsl
sahf
test
imul
pop
xor
adc
sub
jo
stos
lret
out
push
je
lods
jl
andl
cmp
outsb
clc
add
out
sbb
xchg
jg
enter
ds
mov
jmp
pusha
ret
test
aas
imul
pop
rorb
call
hlt
mov
enter
stos
aam
xchg
mov
ds
mov
cmp
sbb
jnp
lahf
and
mov
sbb
nop
imul
and
pop
mov
mov
sub
jne
pop
test
into
xchg
push
loopne
pusha
int
jb
clc
notl
push
add
jecxz
mov
fwait
in
aas
sbb
xchg
ror
mov
pop
in
imul
pop
adc
inc
cli
and
cmp
daa
jnp
add
data16
inc
push
or
fidivrl
or
or
popf
hlt
mov
loopne
shlb
arpl
dec
lcall
xchg
popa
adc
or
pop
pop
mov
xadd
xor
jg
add
lahf
hlt
push
aaa
fsubl
pop
dec
cld
test
inc
subb
push
int
mov
imulb
lea
dec
mov
pop
jae
adc
dec
dec
ljmp
or
inc
adc
out
add
adc
mov
xor
repz
cmp
arpl
ss
ja
fsts
push
sbb
xchg
pop
pusha
cli
lods
test
in
imul
fidivl
in
lret
cmc
popf
xor
test
stos
dec
cmp
insb
add
mov
loope
int
ret
xor
adc
jge
add
loopne
inc
push
scas
xor
mov
and
sahf
push
scas
sti
sbb
filds
fs
fs
mov
movsb
outsb
jl
xor
xor
testb
mov
rcrl
bound
aad
ss
pop
btsl
add
in
shlb
xlat
scas
in
pop
mov
dec
pop
push
mov
lea
pusha
das
int3
lds
lea
mov
aad
xchg
test
imul
loope
andb
sbb
push
stos
or
insl
das
and
dec
inc
pop
jns
xor
cmp
jge
dec
insb
or
jno
gs
sub
xor
add
cmpsb
repz
imul
xchg
test
push
jle
sbb
adc
addr16
enter
jbe
cmp
xor
sti
movsl
scas
xor
iret
pusha
lcall
push
and
sub
ds
lods
mov
mov
out
cmp
mov
ss
xchg
mov
xor
insl
cmp
ss
add
mov
jmp
scas
and
imul
inc
scas
bound
xchg
xchg
mov
push
pushf
js
sbb
push
sbbb
and
mov
dec
out
cmpsl
cwtl
hlt
or
mov
mov
test
xor
push
shll
mov
imul
fwait
or
or
pop
mov
dec
sub
ret
call
push
or
loope
loop
cmp
lcall
andb
mov
rcrb
dec
cmp
cmp
dec
push
lock
adc
shlb
ror
fcomp
dec
adc
aam
es
jnp
add
repz
push
test
push
in
test
popa
cmc
dec
cmp
hlt
mov
in
lods
jne
aam
jb
xchg
dec
loope
popf
inc
pop
popl
mov
or
sbb
daa
jl
ds
pop
jbe
xchg
lret
push
es
nop
int
pop
push
xchg
lock
push
scas
into
rorl
in
push
inc
dec
addl
outsb
mov
xor
push
out
push
mov
push
inc
sub
jns
lcall
inc
sub
pushf
dec
in
jns
xchg
mov
mov
sbbl
and
aaa
mov
divl
xchg
in
jb
pop
sbb
iret
lret
sbb
insb
sub
movsl
mov
inc
cmpsb
cmp
fstps
es
outsb
fmul
xor
inc
es
testb
repz
pop
sub
jp
sub
int3
clc
inc
add
sbb
scas
inc
repz
ffree
jnp
sub
es
int3
inc
mov
jmp
fcmovnu
inc
push
sub
aad
lods
pop
jno
dec
ret
push
mov
xchg
insl
jbe
shrb
push
pop
or
push
add
test
dec
cmpsl
ss
out
or
fs
outsb
xor
cmp
push
int3
aas
test
xchg
aam
mov
pop
ret
inc
jg
cmpsb
shll
cltd
mov
scas
les
or
ds
add
inc
sbb
lock
cld
or
mov
push
in
mov
outsb
repnz
add
push
sub
mov
loope
insb
lds
vpandn
insb
mov
xor
xor
rcll
outsl
pop
lcall
out
imull
in
rcrl
xor
test
mov
or
lods
pop
xchg
push
xor
fxch
xchg
in
imul
mov
cmpl
fsubp
xchg
pop
sbb
sub
scas
sbb
pop
lret
imul
mov
and
dec
aad
dec
cmp
push
jecxz
inc
jb
dec
repnz
dec
cli
mov
add
cltd
sbb
push
and
aad
add
mov
adc
out
push
xchg
cmp
aas
cmpl
imul
sub
lcall
out
ret
in
rcl
in
jae
rclb
pop
xor
push
dec
fldt
icebp
mov
ret
mov
jecxz
stos
sarb
add
jae
pop
push
add
inc
add
mov
sbb
sub
loopne
std
fildl
ds
add
inc
fadds
or
xchg
adc
mov
xor
insb
lds
push
fwait
mov
sbb
and
pushf
dec
aad
cmp
mov
ret
xchg
scas
add
mov
gs
enter
xor
xor
push
les
cmp
mov
or
sbb
das
mov
inc
pop
mov
ja
fprem1
leave
data16
popa
pop
push
pop
mov
mov
xor
inc
mov
repnz
sbb
jnp
fbld
into
test
sti
jecxz
outsb
xor
sbb
out
xor
xchg
orb
cmc
imul
dec
cmp
imul
movsb
into
jg
test
outsb
iret
and
sbb
lea
push
dec
xor
mull
stc
das
bnd
fs
jmp
cmc
add
pop
ficompl
inc
test
push
fwait
add
test
cld
lcall
mov
adc
lret
rclb
test
into
push
jbe
lea
or
shl
in
jecxz
adc
adc
sub
mov
movsl
mov
add
mov
out
pop
xor
and
and
pop
mov
dec
fistl
push
add
jo
imul
jbe
push
mov
xchg
jnp
jns
inc
cmp
in
jns
and
or
push
push
pop
es
inc
push
nop
jmp
in
inc
push
push
ret
cs
jge
cli
and
push
mov
fidivrs
cmp
icebp
sahf
mov
jno
orb
mov
push
cld
stos
push
lahf
mov
js
hlt
mov
xchg
pushf
aam
mov
xlat
leave
pop
mov
es
into
pop
enter
pushf
xor
pop
and
and
mov
rcrl
loopne
adc
sti
xor
push
aas
add
adc
int3
xor
fnstsw
mov
mov
add
iret
mov
adc
sahf
mov
xchg
push
push
hlt
add
in
cmpsl
jl
push
inc
fiadds
imull
mov
sahf
test
fdivr
pusha
xor
inc
xor
ljmp
mov
outsl
test
fstpl
sbb
jg
loope
shrb
lahf
jl
cmpsb
aam
add
inc
aas
lea
mov
cmp
push
pop
mov
add
enter
fmull
mov
mov
sarb
fstps
jnp
ds
gs
xor
push
push
popf
rol
pop
xor
add
icebp
lock
jae
mov
xor
ss
fstp
popa
jl
mov
loopne
or
pop
lcall
or
jb
xor
into
cltd
in
jle
movsb
add
pop
xchg
dec
popf
add
leave
test
pop
dec
push
push
add
jp
cmpsb
jp
mov
xchg
mov
ss
aad
mov
es
adc
jg
insb
icebp
inc
cmp
pop
cmp
nop
imul
sub
outsl
cmp
push
mov
mov
test
lock
or
popa
int
adc
inc
out
fsubrl
mov
repnz
icebp
inc
sbb
outsl
sahf
mov
vmovhps
loopne
aas
je
and
and
pusha
or
dec
aas
pop
jae
add
pop
cld
jge
and
mov
pop
inc
adc
mov
cmc
jge
mov
or
subb
lcall
fists
mov
pop
leave
roll
scas
mov
iret
mov
xchg
inc
adc
icebp
ror
push
push
stc
cmp
data16
xchg
dec
dec
out
shrl
scas
test
repnz
test
push
daa
add
inc
lods
mov
sbb
dec
paddusw
int3
std
add
jecxz
and
push
insl
mov
xchg
pop
mov
sub
shlb
movsb
and
add
stos
cmp
add
xlat
nop
add
pushf
xor
mov
jae
sbb
pop
dec
shll
cli
add
out
cmp
jl
mov
inc
cmp
out
and
sar
lcall
adcl
jae
call
dec
lods
nop
sub
movb
rcll
and
sub
push
popa
mov
testb
repz
inc
mov
and
sbb
pop
push
fcomip
les
mov
popa
lahf
mov
sub
push
pop
das
mov
enter
gs
lcall
les
je
adc
dec
cltd
mov
ret
ficoms
inc
loope
clc
adc
mov
ficoml
and
clc
orl
test
mov
jl
jge
and
cmpsl
test
sbb
mov
leave
in
jae
sbb
daa
fucom
push
ljmp
mov
ds
push
inc
aaa
insl
out
imul
cmp
pop
xor
xchg
addb
dec
mov
std
negb
xchg
cmc
push
scas
fnstenv
test
int
xchg
push
popf
mov
or
push
mov
xor
addr16
inc
xor
outsl
dec
mov
gs
fsincos
popa
or
and
inc
jecxz
sbb
iret
pop
cltd
xchg
dec
pushf
pop
and
inc
loope
shl
xchg
arpl
sub
iret
cmp
test
iret
lcall
mov
mov
sub
insl
mov
cli
sbb
mov
inc
inc
repnz
in
bound
rcrb
jl
sub
cmp
jp
pop
adc
lret
lret
push
hlt
fistps
add
inc
dec
jne
out
mov
xchg
popf
rorl
add
sbb
pop
push
stc
test
or
cmc
out
lods
inc
jmp
rcl
xchg
pop
dec
pop
bound
sub
xor
pop
aad
jmp
out
dec
lahf
rclb
xchg
pop
clc
or
push
cmp
xor
pop
std
cmp
mov
and
lods
gs
imul
xchg
shl
in
movsl
or
mov
out
jne
dec
incb
push
mov
mov
jl
repz
lods
xchg
out
fadd
mov
or
mov
imul
pop
cld
lret
decb
imul
mov
cmp
push
pop
mov
scas
cmp
cmpsb
inc
lods
js
cmpsb
inc
xor
xlat
push
push
out
inc
xor
mov
mov
in
cltd
xchg
jne
ss
dec
cmp
adc
jg
outsb
xchg
mov
jns
sbb
jl
imul
dec
lret
xchg
fucompp
fs
mov
jg
mov
shl
cmp
xchg
hlt
inc
aaa
into
aaa
mov
or
jg
add
mov
test
dec
fs
test
sahf
add
orl
adc
subb
jns
pop
push
push
sub
pop
or
inc
int3
int3
mov
cmp
sbb
sarl
adcb
push
dec
clc
push
enter
xor
scas
jle
pushf
xchg
push
loope
loop
sarb
sub
jmp
iret
loop
inc
add
pushf
enter
scas
and
inc
pop
mov
lock
sar
test
push
push
lea
sbb
rclb
jmp
lret
stos
mov
pop
add
push
mov
test
sbb
adc
pop
loop
or
xchg
int3
enter
sub
mov
dec
xor
popa
jno
outsl
xchg
lret
jne
xor
jae
aaa
push
xor
fadd
incb
movsl
cmp
adc
insb
push
xor
sbb
add
scas
mov
arpl
pop
daa
into
aad
jbe
idiv
clc
ret
and
inc
out
add
xor
sbb
pop
inc
clc
loop
pop
mov
jl
data16
mov
shrb
movsb
inc
into
fisubrl
push
mov
out
push
les
xchg
xchg
cmpsb
loopne
gs
add
add
cmp
lahf
repz
rcr
inc
xorl
lret
fucomp
xor
popf
inc
loopne
and
lret
dec
mov
mov
inc
pushf
adcb
mov
sbb
push
xchg
aas
push
add
cwtl
or
and
lcall
pop
je
stos
ss
enter
xchg
mov
jecxz
inc
outsb
dec
jo
jecxz
and
mov
mov
sub
mov
clc
into
mov
arpl
or
loope
pop
and
cwtl
mov
cmp
dec
sub
adc
push
int3
test
ficoml
xchg
xchg
loope
pop
gs
adc
loope
outsl
test
fiaddl
jnp
push
das
dec
xchg
sub
xchg
push
icebp
mov
sahf
in
pop
shrl
cmp
scas
sbb
scas
je
xchg
jbe
subl
leave
orl
out
mov
mov
or
xchg
inc
mov
hlt
cs
xchg
push
jb
loopne
cltd
mov
jns
loopne
add
inc
jle
jl
and
imul
arpl
sbb
and
ljmp
and
movsl
jl
pop
and
adc
jo
sbb
or
push
xor
fstl
push
push
cmp
test
data16
xchg
insl
in
cs
adc
jle
je
out
out
mov
test
xor
jne
adc
je
push
adcb
push
das
out
imul
jmp
inc
lock
xor
lods
xor
mov
orl
popf
enter
dec
in
push
sub
or
test
and
aam
mov
mov
test
add
les
fidivrs
iret
cmp
push
lret
stos
add
push
mov
shll
push
shll
scas
fs
divb
enter
lahf
adc
lcall
ljmp
imul
xchg
loopne
rorl
arpl
ret
jecxz
mov
xchg
add
popf
inc
dec
mov
or
push
or
aad
enter
jg
mov
push
fldl
jp
and
jmp
push
pop
out
or
xchg
aad
xchg
sub
dec
or
orb
dec
std
popf
or
or
shl
adc
lahf
lea
mov
outsb
stos
call
shll
xchg
pop
xchg
ret
or
test
or
fimuls
sbb
shld
jl
ss
shlb
adc
jge
xor
rorb
cwtl
adc
in
mov
clc
les
or
ficoml
push
jno
cli
jp
aad
push
pop
mov
les
or
or
dec
dec
nop
cmp
lods
mov
loopne
out
push
imul
insl
movsb
or
out
sbb
adcl
xchg
cmpsb
aam
dec
loop
shrb
dec
cmpb
clc
cmc
dec
jp
push
add
pusha
ret
mov
outsl
xor
mov
loopne
adc
dec
mov
lods
xchg
cmpsl
loope
jbe
add
sub
cmc
sarl
cmp
aam
mov
pusha
adc
stc
test
outsb
lret
or
movsl
dec
jp
test
mov
mov
cwtl
inc
mov
mov
mov
inc
fcoms
xchg
adcb
or
enter
xchg
jp
push
push
shr
sbb
in
jp
iret
call
shlb
out
jmp
fistpll
aad
xchg
loopnew
inc
dec
push
mov
mov
call
stc
lods
lods
sub
sbb
sub
jno
jbe
sbb
popf
add
aas
in
xchg
fnsave
and
jl
dec
and
adc
insl
jno
aam
push
xchg
sahf
jmp
je
ss
scas
insb
or
dec
int
cmp
inc
add
xchg
add
movsb
sbb
mov
push
jl
adc
inc
rorl
ljmp
loopne
jl
cmp
ljmp
mov
out
leave
or
jecxz
rorb
popf
push
test
lods
mov
xor
call
sbb
push
das
mov
es
stos
rcr
mov
jbe
inc
sti
dec
jnp
adc
adc
push
shlb
mov
fimull
dec
shll
daa
test
insl
xor
lret
rorb
subl
mov
lods
into
xchg
js
mov
cmp
or
lea
std
fs
or
inc
cwtl
mov
pushf
movsl
jnp
jb
dec
arpl
push
das
dec
xchg
mov
fwait
jno
out
sub
push
xchg
ficomps
cli
or
dec
or
mov
out
int3
jno
xchg
push
or
jmp
and
addb
adc
pmaxsw
mov
dec
cltd
xchg
lahf
js
dec
mull
xchg
xor
or
lret
sub
ficoml
or
adc
mov
lods
data16
aas
stc
adc
cld
or
mov
loope
std
push
subl
das
cli
jl
stc
fidivs
pop
ret
push
ficomps
jle
roll
or
packuswb
mov
pop
aaa
and
f2xm1
dec
push
test
jmp
test
inc
dec
std
stc
mov
jg
out
fwait
loopne
xchg
or
lahf
xor
or
fisttpll
xchg
and
pop
dec
jp
popf
cmp
mov
push
in
and
pop
sti
xchg
inc
outsl
sub
mov
sbb
out
stos
iret
push
lcall
mov
xor
outsl
xchg
and
loope
pop
ret
subb
jae
pop
jns
daa
data16
popf
sbb
lds
aas
je
repz
and
push
push
es
test
in
fmull
pusha
loop
mov
or
mov
cmp
movb
test
shrl
add
cmp
inc
arpl
and
jg
fdivs
popf
in
sub
adc
insb
movsl
in
mov
in
bound
rcrb
sub
addr16
mov
pop
cmc
lods
push
cwtl
push
arpl
imul
sub
jne
popa
leave
pop
int
iret
int3
mov
push
sub
dec
add
cmp
mov
xchg
les
sbb
xchg
pop
popa
test
mov
push
cmp
jp
cmp
xchg
and
jle
movsl
cmp
sub
scas
cmp
xorb
push
loopne
mov
orl
lret
adc
pop
inc
push
pushf
std
loop
cwtl
fnsave
hlt
and
movsb
out
jg
mov
xchg
cmp
xlat
pusha
lods
testb
outsl
mov
loopne
outsl
mov
add
xchg
inc
lcall
xchg
lods
adc
jae
jne
pop
fdivl
inc
lods
les
push
mov
and
sub
subps
stos
and
out
adc
adc
jno
daa
stc
test
jne
es
sbb
jmp
jae
mov
dec
sub
pop
hlt
and
filds
sahf
leave
roll
xlat
adc
in
xchg
cmpsl
orb
lahf
and
faddl
xchg
das
jno
push
push
jecxz
rol
aas
insl
push
pop
popa
stos
int
ret
pusha
call
stos
lcall
mov
arpl
paddd
pop
sarl
js
and
scas
shl
fwait
movsl
mov
xchg
sub
jp
call
iret
jle
xchg
sbb
cwtl
int
js
or
dec
mov
andb
inc
rcll
sarb
cmp
adc
dec
pop
sahf
jp
int
mov
cwtl
out
push
hlt
fnstcw
and
xor
and
mov
dec
out
pop
cltd
int3
pop
ja
shr
fistpll
mov
test
insb
push
sub
scas
mov
lds
jp
inc
inc
sub
mov
jle
add
push
pop
out
int
jns
adc
icebp
mov
outsb
adc
scas
outsl
enter
or
test
aaa
call
cmp
xchg
je
mov
rclb
out
mov
ds
ret
cmp
adc
add
xchg
inc
cwtl
dec
mov
outsl
lcall
mov
sub
sub
xchg
adc
push
loope
push
push
outsb
loop
addr16
bound
dec
sub
mov
xor
ss
mov
nop
je
sub
add
shll
or
fwait
cltd
test
adc
dec
adc
xor
mov
es
pop
push
stos
orl
push
lret
dec
lcall
std
rep
lock
sbb
cwtl
push
xor
outsl
test
xor
mov
pop
std
out
gs
xchg
arpl
push
movsl
mov
mov
lea
dec
mov
in
add
dec
fistl
mov
enter
imul
jns
jg
mov
test
sbb
dec
cmpsl
adc
adc
sahf
inc
jb
out
jo
pop
stos
fisttpll
ficoml
and
out
pop
scas
jne
pop
test
cmp
xchg
push
pushf
divb
push
rcr
mov
repz
pop
ja
mov
in
push
cmp
add
cmp
imul
mov
xchg
outsb
pusha
mov
in
mov
jl
mov
scas
pop
sbb
ds
shrl
bound
push
push
loope
cmpsl
cmp
sbb
popa
filds
loop
jae
add
mov
jns
pop
mov
insl
dec
mov
fsubrs
fs
jne
push
sarb
mov
pop
xor
insl
fildl
adc
sbb
mov
mov
lods
test
push
addl
inc
xchg
lcall
rcrl
xchg
jb
insl
test
in
mov
icebp
repnz
sti
cmp
push
hlt
ret
xor
sti
pushf
ret
rcll
or
push
lods
lds
repz
xchg
dec
push
outsl
dec
sbb
inc
iret
rcl
iret
lock
std
aam
push
mov
cmp
push
shrl
imulb
stc
jp
pop
js
int3
and
dec
scas
sarl
aaa
mov
push
fucomip
jmp
mov
or
xchg
aas
das
nop
jl
or
jnp
loope
push
sbb
jno
leave
xor
mov
sbbb
outsb
mov
or
test
push
and
aam
push
and
scas
lea
shr
adc
mov
in
mov
ret
lret
inc
js
pop
lea
or
aas
ja
imul
shlb
pusha
sub
jb
inc
dec
lock
cmp
cmp
xchg
std
xor
rcll
cmp
les
inc
mov
mov
push
call
out
fnsave
xchg
add
xor
dec
int3
stc
cltd
push
pop
push
cmp
inc
ss
js
cmp
mov
mov
andl
inc
and
jmp
fildl
mov
sub
cmp
xchg
push
inc
cmp
sub
fbstp
or
ret
lea
imul
jg
inc
push
xlat
rcl
je
repnz
add
pop
aam
neg
and
add
insb
cli
mov
ja
outsl
pop
jns
punpcklwd
iret
in
cld
sbb
inc
lods
loopne
mov
sti
mov
je
xor
arpl
rcl
dec
sbb
xor
out
xchg
sbb
lods
dec
or
pop
jg
mov
and
dec
adc
lods
xchg
pusha
mov
cmc
rcrb
cmp
mov
and
icebp
ret
fstps
xchg
push
jmp
das
adc
push
xchg
cwtl
pop
sub
std
pop
out
push
cwtl
shl
in
xorl
mov
cmp
lahf
or
jmp
out
mov
lret
jb
adc
sbb
and
sar
cli
xchg
ficoms
mov
pushf
cmpsb
test
test
rclb
test
ljmp
aam
push
mov
mov
gs
test
dec
sbb
or
int3
and
jo
push
inc
xchg
sub
cltd
and
push
lret
out
imul
cmpsl
repnz
aad
mov
fdivrs
adc
and
mov
cmp
or
rorl
xlat
mulb
push
push
jb
fadds
in
jnp
js
popf
ljmp
mov
iret
mov
movswl
sbb
icebp
negl
dec
xchg
inc
and
pop
fstl
adc
pushf
scas
and
sahf
nop
jg
arpl
jl
push
arpl
and
xor
lds
rolb
test
push
sub
pop
lret
out
and
leave
mov
pop
cwtl
cli
add
rorl
nop
lods
push
and
mov
add
push
sbb
mov
mov
out
sbb
mov
pop
sub
and
test
addl
das
xor
dec
je
shll
pop
imul
fdivrp
sub
bound
rolb
mov
repnz
sahf
sub
mov
cld
dec
test
call
mov
xchg
cmpsb
mov
push
sub
pop
xchg
call
mov
adc
inc
int
push
in
push
sub
pushf
mov
xchg
subb
pop
mov
xchg
test
or
fs
shr
mov
add
dec
jae
cli
cs
inc
dec
or
mov
cmp
jne
out
repnz
pop
outsb
loopne
popf
cmpsl
in
stc
dec
ljmp
jno
fstps
out
in
mov
in
sbb
pop
gs
jle
and
cmc
pop
sbb
aaa
cmpsb
lds
mulb
ss
call
lret
js
lcall
sarb
sbb
push
test
mov
add
xchg
and
inc
adc
fstpt
outsl
sub
and
addb
jp
push
adcb
and
ja
or
pop
jne
sbb
push
jmp
push
mov
xchg
addr16
mov
pop
mov
fxch
dec
movsb
fdivrp
inc
lcall
ret
xchg
jle
inc
clc
scas
or
push
fldt
jo
shlb
lods
int
dec
inc
popf
pop
adc
xchg
mov
sub
mov
arpl
cli
and
add
js
ds
inc
aad
inc
loopne
or
out
xlat
adc
and
ja
push
lcall
out
std
add
cmp
sbb
mov
push
push
mov
mov
cmp
adc
inc
in
pop
adcb
pusha
mov
mov
mov
jmp
push
in
loopne
bswap
sbb
in
aam
mov
cmp
sti
xor
icebp
xchg
fs
insb
cmp
sbb
xchg
jmp
dec
mov
sarl
leave
xchg
movsl
inc
pop
or
adc
leave
fcomps
out
fmull
inc
push
sbbl
ret
push
sub
daa
test
adc
cmpsl
pop
xchg
in
mov
stc
jmp
mov
loope
outsl
aas
jp
mov
add
adc
mov
insl
lcall
xchg
mov
fcompl
add
push
dec
cld
inc
push
push
jb
pop
stc
dec
sub
fistpl
add
sti
xchg
add
ud2
pop
and
int
push
push
arpl
sbb
push
js
push
jmp
sbb
and
push
cmp
lock
jns
or
pushf
push
insl
cmc
cmp
dec
jo
mov
bound
xchg
xor
insl
lahf
lods
gs
mov
mov
outsb
lods
btc
jp
popa
mov
cmp
xor
jge
add
mov
xorl
mov
and
sub
and
dec
dec
xor
mov
or
push
loopne
orb
sbb
nop
fwait
nop
sub
cmp
and
sbb
cmp
arpl
test
inc
ja
sti
cmp
jo
stos
dec
add
jne
add
test
mov
icebp
adc
incb
and
out
push
lds
adc
and
insb
rolb
pop
jb
pusha
dec
jge
add
inc
jl
or
test
add
shlb
pop
mov
repnz
sub
imull
or
jno
cmc
jg
test
mov
test
adc
pop
push
ljmp
and
sub
mov
jb
mov
test
enter
push
xlat
std
pop
mov
das
sub
ret
and
pop
popa
pop
rcll
pop
je
sbb
push
subl
mov
js
getsec
pop
test
lret
dec
ljmp
mov
mov
mov
mov
jp
lahf
mov
shr
into
fwait
movsl
jl
pavgw
xchg
add
stos
push
mov
mov
mov
xchg
or
cmp
adc
prefetcht2
jle
les
lock
xor
movsl
movsl
mov
imul
mov
outsl
cmp
in
dec
push
push
inc
jns
out
repz
fisttps
xor
fiaddl
push
lea
hlt
fsubs
inc
mov
xchg
cmc
ror
and
push
lods
sbb
imulb
cmp
or
je
push
xor
movsl
mov
insb
pop
mov
call
aaa
cwtl
out
jo
cltd
out
sysexit
pop
xor
push
mov
mov
pop
fists
and
push
xchg
cmp
out
xchg
mov
rcrl
js
pop
stos
jl
jo
lahf
lea
inc
sub
pusha
insb
sbb
nop
stc
pushf
scas
add
xchg
jne
add
jno
pop
jae
pop
push
jne
xchg
add
and
fwait
lods
pop
aas
xchg
mov
ret
mov
lods
push
ret
mov
xchg
mov
mov
fdivrp
out
mov
inc
into
dec
fwait
xor
pop
lods
mov
add
repz
push
out
cmpsb
and
call
pop
mov
dec
jge
fmulp
pop
mov
lret
and
lret
sahf
mov
jae
and
jmp
movsb
sub
jge
je
aam
imul
jecxz
mov
stos
dec
addr16
xchg
mov
or
lods
jl
sti
mov
outsl
mov
sbb
pop
lea
cld
out
fs
inc
fsubrl
das
fwait
mov
in
push
call
out
jl
lods
movsl
lods
mov
sub
dec
mov
pop
sub
jbe
movsl
add
xchg
inc
mov
negb
loop
push
cmp
int3
push
fsubr
call
repnz
dec
ret
mov
adc
outsb
or
movsl
sub
pop
loopne
fwait
data16
pop
xor
data16
rcll
sub
mov
loopne
test
push
add
outsl
je
lret
sub
mov
cmp
mov
gs
jge
or
adc
add
mov
roll
push
shll
push
adc
push
loope
ljmp
pop
scas
or
enter
and
stos
xor
stos
and
pop
out
ja
or
iret
xor
nop
jne
push
lret
out
adc
aad
inc
mov
popa
sbb
negb
outsb
lret
adc
hlt
jmp
popa
xchg
cmp
mov
or
fsts
scas
push
or
mov
icebp
testl
test
mov
test
xchg
mov
cmc
popf
pushf
cli
adc
or
popa
pusha
sub
pushf
stos
loopne
xchg
and
lea
sbb
test
fsubr
lret
mov
xchg
ja
mulb
data16
pusha
mov
les
and
aas
jge
and
sbb
or
inc
push
or
stc
orb
mov
lea
sbb
repnz
andl
negb
lods
insl
cmp
mov
xchg
shrl
sbb
jle
jg
lock
mov
cwtl
pusha
cltd
xorl
xor
cmp
cmp
aas
scas
aad
fldl
syscall
push
imul
inc
mov
test
mov
xchg
ja
xchg
insl
out
xlat
push
rcr
fildll
push
scas
or
inc
into
rcrb
mov
cli
fs
mov
xchg
cmp
pop
cmpsl
je
popf
jne
jecxz
test
mov
inc
mov
or
adc
mov
and
je
bound
xchg
stos
and
data16
xchg
push
cwtl
push
mov
pop
and
popf
jno
hlt
iret
push
cld
jecxz
into
lods
sbb
shlb
push
adc
jnp
fisubs
mov
mov
xchg
push
or
adc
push
mov
push
js
int
and
popa
lock
sbbb
jnp
mov
sbb
lret
cmp
mov
iret
leave
cmp
or
gs
lahf
test
lahf
shlb
mov
fwait
scas
enter
ljmp
fs
or
bound
pop
leave
jb
xchg
stos
aad
loopne
lock
in
stos
cmp
sarb
mov
push
xor
dec
inc
int3
cmpsb
shl
imul
mov
sbb
pop
and
call
repnz
dec
sub
ret
je
push
xchg
pop
lock
fnstenv
ficompl
test
pop
loope
add
and
add
xchg
repnz
in
test
int3
push
mov
shl
loop
cmp
test
sahf
shl
rorl
pop
js
popf
loope
mov
sbb
lods
cltd
movsl
lods
mov
adc
cld
adc
cli
nop
sbb
test
imul
xor
pushf
jbe
xor
es
xor
das
stos
cmp
jmp
sub
adc
pop
cmp
mov
addb
frstor
mov
dec
insl
pop
loopne
pusha
les
cmp
aas
idivb
aaa
flds
jne
sbb
outsl
cmpsb
sub
or
imul
cmp
dec
js
lret
aad
cmpsl
push
add
rcrl
loopne
fisubs
mov
notb
xchg
dec
push
push
push
aam
add
inc
and
mov
mov
rcrl
jg
test
sbb
mov
aam
jae
pop
push
daa
andl
xchg
jmp
xorb
jp
xor
popa
xchg
das
adc
out
jmp
lret
lret
sbb
pop
call
mov
rcll
sub
insl
arpl
sar
sbb
or
push
sub
into
ja
xchg
adc
aas
outsl
inc
pop
dec
add
scas
test
loop
xor
out
in
sub
clc
add
pop
add
jge
pop
dec
jns
gs
scas
sbb
repz
cli
sub
jl
int3
jo
popa
dec
stos
inc
xchg
inc
sub
xor
or
mov
cwtl
cmpb
push
push
int3
sti
icebp
cltd
mov
and
rclb
cmp
sbb
mov
mov
outsl
fwait
push
daa
inc
inc
cwtl
test
cwtl
mov
mov
push
xchg
repnz
rorb
fbstp
les
pop
xor
mov
push
pop
out
icebp
pop
je
lret
mov
adc
push
in
lret
sbb
aad
arpl
aaa
xchg
sahf
mov
stos
jl
push
out
lahf
mov
jle
mull
mov
pop
std
loop
iret
jae
adcl
jmp
lret
xor
in
js
mov
lret
add
inc
mov
dec
mov
in
out
int
jno
test
fstpl
xchg
out
cmp
mov
ret
mov
jmp
cwtl
push
das
addr16
in
sbb
inc
cmpsb
ljmp
xor
sub
es
movl
xchg
mov
cmp
outsb
add
mov
in
push
sti
xor
mov
jg
inc
ret
popa
mov
and
lock
mov
test
iret
ds
iret
push
sbb
or
inc
sub
cmp
repnz
std
fs
ja
vpcmpeqb
movsb
rcrl
cld
pop
insb
int
clc
sub
lods
lcall
pushf
push
repnz
cmc
fstl
femms
sub
jnp
les
jbe
rcl
arpl
outsl
push
dec
push
push
adc
in
sub
cmp
pop
adc
out
fnstcw
mov
nop/reserved
adc
jp
inc
loope
sbbb
mov
jo
sub
lods
mov
mov
fcmovbe
aaa
add
scas
dec
in
ljmp
xchg
cmp
lret
les
js
dec
ss
inc
jg
adc
shl
in
scas
mov
mov
repz
inc
and
mov
jg
inc
sub
stos
cld
bound
js
lret
repz
fdivs
ljmp
cmp
aam
dec
cmp
ljmp
cmp
or
or
mov
fdivr
cmpsl
xchg
andb
add
in
jne
clc
mov
cld
pop
adc
mov
roll
mov
dec
roll
push
std
cmp
and
pop
scas
xor
xor
fs
rol
rorl
das
xchg
stc
cwtl
jns
pop
cmp
jle
dec
lcall
test
in
jp
jbe
mov
loope
std
push
push
ds
mov
sbb
lahf
inc
sub
sub
pop
test
cli
aam
mov
mov
ror
adc
aaa
lret
mov
xchg
into
push
or
pop
stc
xor
loopne
mov
adc
dec
dec
mov
test
ljmp
test
mov
jl
xor
pop
and
push
cmc
repz
incb
popa
adc
arpl
pop
lcall
imul
mov
dec
jo
mov
sbb
loopne
pop
push
cs
mov
add
adc
insl
jl
sbb
hlt
mov
lret
rcll
outsb
xchg
jg
fwait
arpl
fwait
mov
add
dec
aad
sbb
jge
out
shll
mov
xor
ret
add
enter
outsl
sbb
loop
sub
loop
cmpl
ret
jb
ja
int3
pop
int
push
xor
mov
inc
xor
push
imul
aam
add
xorl
dec
rorl
leave
mov
xor
pusha
add
movsl
repnz
sbb
and
std
repz
mov
or
inc
jo
inc
imul
aam
jb
test
lock
call
in
cli
pop
xchg
ds
test
aaa
mov
lods
xchg
fstl
pop
call
lea
add
pop
scas
pop
scas
mov
imul
and
mov
lods
dec
insb
mov
add
dec
add
push
push
test
out
movsb
inc
int3
xor
mov
inc
decl
dec
cmc
and
sbb
xchg
mov
in
add
push
stos
fildll
mov
push
dec
xlat
aam
aam
jmp
and
cmc
int3
in
or
xor
mov
cmpsl
jb
cwtl
shlb
inc
sub
jns
push
pushl
mov
and
std
sbb
push
fs
ret
jmp
mov
mov
inc
sub
xor
jo
fildll
icebp
aam
imul
pop
lock
pop
orb
or
sarb
psubd
dec
or
lcall
dec
enter
or
add
push
pop
aaa
inc
fs
pusha
imul
pop
jo
daa
mov
jl
fldt
cmp
inc
pop
icebp
mov
mov
out
iret
lea
push
pop
lcall
xor
pop
sbb
clc
insl
pop
mov
imul
imul
push
push
repnz
aaa
out
rolb
mov
inc
adc
jne
rcr
negl
sbb
and
addr16
jns
aas
add
aad
mov
add
cmp
and
mov
data16
inc
cmp
int3
mov
hlt
mov
idiv
mov
sub
dec
mov
nop
icebp
pop
pop
inc
xchg
adc
cltd
iret
or
aaa
test
rcll
xchg
xchg
ret
cmp
sti
mov
xchg
pop
popl
repz
movsb
leave
stos
mov
fstl
mov
sahf
adc
movsb
popa
test
xchg
fsubrs
adc
call
mov
testl
push
mov
cmp
push
ret
pop
xor
mull
and
nop
dec
mov
xchg
push
mov
lods
iret
or
add
aam
mov
pusha
mov
addr16
in
out
inc
pop
jle
fucom
repz
enter
pop
test
fsts
or
je
mov
leave
outsb
dec
nop
lret
shrb
sub
or
cmp
mov
test
xchg
mov
adc
or
test
cli
mov
sbb
addb
scas
xor
jmp
push
mov
movhlps
sarb
aaa
ja
jae
sub
rclb
frndint
popa
cli
idivl
pusha
imul
sub
in
fidivs
cmp
dec
inc
push
sahf
int
sbb
push
mov
dec
xchg
jecxz
ret
adc
push
push
arpl
sbb
scas
cmovs
ret
mov
mov
jle
push
sarb
dec
into
jno
in
jae
out
xchg
mov
mov
push
xchg
das
mov
cwtl
decb
inc
jle
inc
movsb
and
mov
adc
inc
nop
aaa
fimull
mov
cli
testl
and
mov
cmp
and
lods
not
sub
nop
aaa
rcrl
shrl
cwtl
xchg
fmull
jecxz
push
repnz
pop
fwait
mov
pop
cmp
push
xchg
fiadds
push
push
ja
mov
fsub
mov
pop
xchg
xor
xor
in
ja
xchg
hlt
mov
rcl
mov
iret
ja
push
sbb
adc
cmp
xlat
in
xchg
sub
ret
test
pop
mov
addb
pusha
scas
xchg
push
out
dec
gs
add
lods
in
loop
push
int
lock
mov
cmp
cmpsl
xchg
inc
in
lahf
and
mull
dec
aad
pop
xchg
sbb
push
in
jmp
mov
enter
gs
adc
repz
scas
clc
or
inc
lds
dec
adc
xchg
jae
cli
rorb
pop
stc
xchg
iret
stos
cmc
scas
cmp
push
mov
xchg
repnz
sbbl
or
les
stos
lods
push
and
xor
sbb
add
iret
pop
xchg
cmc
adc
test
mov
jo
in
cmp
dec
je
mov
out
cmpsl
xorl
inc
rcll
stc
mov
lods
inc
jnp
jmp
push
inc
popf
ret
sarl
push
sbb
cmc
test
aam
outsb
scas
lahf
jl
rclb
add
insb
pop
jecxz
mov
fdivs
sub
pop
or
sahf
mov
push
sbb
xor
icebp
adc
push
ljmp
push
lods
repz
sub
adcl
or
mov
stc
jmp
scas
in
mov
dec
inc
xchg
pushf
xor
test
enter
nop
rcrl
movsb
lgs
les
jecxz
fsubs
pop
jg
out
dec
jge
popa
jecxz
and
dec
cmc
add
pop
jmp
movsl
aaa
sti
xchg
bound
fwait
insl
adc
inc
push
dec
push
in
mov
daa
mov
inc
or
dec
iret
mov
mov
and
cwtl
scas
cmp
data16
mov
aam
cs
clc
push
cld
or
lods
ret
jge
je
stos
push
mov
out
mov
rcrl
test
jcxz
and
or
loopne
shr
popa
mov
inc
push
push
pop
mov
xchg
dec
and
cli
mov
ja
mov
pop
out
adc
mov
xchg
and
xchg
pusha
mov
data16
sbb
jns,pn
pushf
dec
fwait
shll
add
icebp
jg
test
outsb
sbb
and
mov
ret
mov
cli
out
sub
mov
mov
out
and
fisttps
cwtl
das
gs
insb
cmp
addr16
push
xor
pop
xor
pop
dec
mov
dec
movsl
ror
imul
jge
lods
repnz
sbb
adc
js
dec
iret
test
xchg
bound
xor
xchg
push
int3
mov
sbb
jmp
xchg
out
push
loopne
push
pop
loopne
lock
add
dec
shll
push
xchg
cs
lret
shrl
out
xchg
cmp
cs
sbb
adc
lock
movsl
xchg
inc
mov
jne
and
jae
scas
sbb
pop
mov
fcmovne
outsb
in
daa
pop
xchg
fsubrl
in
xchg
out
call
adc
push
ds
insl
ds
mov
sbb
pop
cmp
sahf
cmpsl
js
cld
aam
lea
xor
pusha
or
sbbl
das
out
sahf
sarl
stc
push
mov
clc
sti
dec
lahf
cmpb
mov
sbb
jmp
adc
and
notb
scas
mov
test
mul
lds
cmp
xchg
lds
gs
and
cmp
mov
cwtl
out
mov
fiaddl
sub
popa
sahf
cmpsl
pop
jae
sbb
cli
mov
cmp
pop
enter
and
sbb
mov
shrb
dec
or
or
cmp
test
rcll
xchg
inc
add
push
xor
shl
movsb
jge
out
es
cs
mov
outsl
pop
inc
stos
jecxz
popf
loop
lret
mov
mov
pop
in
loop
cmp
fsubrl
in
fnstsw
inc
insl
lcall
dec
loop
mov
nop
push
jge
xchg
fadds
mov
fs
mov
int3
dec
enter
pop
and
out
cwtl
xchg
xchg
mov
mov
lea
xor
mov
and
dec
pop
stos
ds
jmp
lcall
dec
icebp
not
aam
add
mov
cld
mov
sbb
arpl
mov
test
mov
ljmp
adc
pop
lea
pusha
int
fdivs
ljmp
jmp
and
cmpsl
add
xlat
enter
jnp
ljmp
and
mov
rcl
adc
aas
cmp
xchg
lahf
out
mov
pop
push
sub
sub
inc
mov
mov
fbld
mov
jge
faddp
ss
sbb
add
imulb
xchg
jp
pusha
xchg
insb
sbb
and
inc
push
inc
addr16
mov
sub
sbb
pop
das
jg
pop
jmp
xchg
je
fadds
xor
test
idivl
mov
dec
loope
popf
rcrb
popa
movsl
cmp
out
cmc
ret
mov
jb
push
call
mov
sahf
inc
mov
lods
mov
arpl
xchg
dec
lods
mov
inc
xchg
fistpll
mov
sti
cmp
sarl
inc
jne
push
xor
push
cmp
fisttpl
cmp
dec
jnp
insb
scas
sub
aaa
mov
int
insl
imul
mov
fdivr
sahf
test
dec
adc
loope
fsubr
adc
andb
sbb
inc
fldt
add
fbld
test
int3
cmpsb
cmp
push
push
inc
int
insb
test
cmpb
imulb
sub
dec
in
push
and
rolb
out
bound
mov
xchg
cmpsl
jbe
xchg
gs
jns
stos
lods
pop
add
hlt
push
sub
into
push
jae
mull
pop
xor
xchg
mov
call
dec
sar
test
xor
std
scas
pushf
dec
pop
daa
sbb
jl
push
sub
cmp
sbb
cld
cwtl
subl
lcall
int3
cld
out
pop
jle
jae
push
daa
lods
stc
lds
flds
xchg
cld
fisubs
xor
jge
mov
jg
stc
inc
enter
pushf
or
frndint
or
and
jecxz
add
int
lret
mov
es
movsb
push
pop
nopl
sub
ss
or
push
clc
lahf
fistps
lods
int3
and
enter
sarb
jmp
cs
incl
dec
add
fbstp
stc
ret
aaa
dec
dec
ja
push
movsb
fsts
inc
hlt
ret
jp
push
rclb
sti
sub
insl
ret
ds
into
mov
cmp
pop
stos
es
mov
add
and
mov
xor
xor
lahf
rorl
fimuls
addr16
push
loopne
mov
push
inc
in
shrb
sub
ret
and
je
sbb
pop
lds
adc
pop
cmp
ljmp
push
icebp
hlt
mov
enter
js
add
inc
mov
int
hlt
mov
push
mov
dec
adc
cmp
xor
roll
mov
mov
jl
mov
dec
dec
sbb
xlat
pop
lea
or
mov
sbb
popa
shrl
lods
test
shl
int3
add
push
mov
lea
or
test
mov
dec
ret
std
popa
testb
and
les
int3
lds
outsb
jl
jnp
mov
rcll
fcos
dec
sbb
xchg
icebp
inc
aam
int3
mov
ret
hlt
mov
xchg
sahf
pop
jge
pop
loope
notl
push
repz
jae
cltd
mov
jl
mov
jmp
std
ss
insb
imul
pop
flds
lods
or
mulb
sarl
push
pushf
arpl
stos
and
daa
pop
mov
xorb
pop
jge
mov
pop
mov
and
cld
dec
push
sti
xchg
mov
mov
add
cmpb
push
cld
imul
subl
std
subl
push
inc
roll
inc
xchg
les
sbb
imul
outsl
xchg
or
pop
sbb
sbb
jl
mov
in
pop
mov
fstl
add
lret
sub
and
xchg
iret
test
mov
stc
xchg
sbb
bound
sarb
mull
pop
pusha
stos
lods
icebp
rcl
mov
mov
jle
jo
and
es
je
in
dec
mov
mov
lret
push
call
movsl
scas
mov
cmc
push
adc
xchg
dec
sti
ss
call
lock
shlb
filds
add
popa
insl
bound
arpl
pop
mov
mov
scas
push
in
mov
lcall
jmp
inc
xchg
or
mov
mov
lcall
mov
jle
pop
aas
adc
or
test
lock
mov
arpl
or
sahf
xor
notl
jge
add
cld
mov
scas
sahf
pop
mov
inc
cltd
mov
push
mov
fwait
inc
sarb
mov
mov
icebp
or
sbb
cli
mov
or
ret
lods
outsl
sbb
push
in
popa
dec
pop
fsubs
lahf
lret
push
fsts
inc
test
sbb
inc
mov
jg
jae
fistps
inc
adc
js
dec
data16
jae
repnz
dec
xor
cmp
mov
xchg
cs
rorl
sti
mov
aam
dec
cmpl
or
sbb
jp
pusha
push
hlt
push
sub
daa
shrl
push
fnstenv
push
ret
and
sub
cs
std
test
outsw
adc
xchg
repz
enter
shrl
adc
imulb
mov
cltd
adc
cmp
and
or
sub
lods
inc
jmp
xchg
or
dec
jbe
mov
adc
push
inc
jae
cmpsb
add
das
mov
dec
mov
jo
jecxz
or
cmc
add
fsubp
mov
jge
mov
inc
or
lds
fmuls
and
shll
pop
push
popf
xchg
or
inc
sub
mov
mov
pop
pop
pop
pop
sub
popf
sub
sub
jle
es
jecxz
call
pusha
adc
fsubrs
mov
mov
mov
xchg
lahf
add
mov
xchg
xor
mov
cli
fnstsw
dec
or
xchg
orb
mov
mov
jne
int
loop
sub
add
int
or
cmp
and
fimuls
cld
mov
leave
and
fs
mov
mov
fwait
lock
aam
call
lods
push
pop
sbb
push
test
cmp
nop
pop
int
int
arpl
in
pop
popl
and
faddp
stos
push
lcall
mov
cld
adc
idivb
jb
add
cmp
bound
sub
rclb
or
and
movsl
dec
loope
fs
lods
popl
cmp
jle
or
push
mov
mov
mov
jge
add
in
mov
jge
jns
add
push
adc
ljmp
scas
sub
inc
mulb
int3
fcmove
dec
jo
in
insl
daa
add
gs
lods
cli
ret
in
and
pop
xor
in
sub
ss
movsb
jnp
loope
xchg
nop
push
xchg
add
popa
pop
leave
cmpsl
sbb
xchg
sub
inc
addb
or
sbb
dec
lret
or
sbb
and
addr16
pop
hlt
insb
cli
sti
cs
lret
jo
adc
hlt
sbb
adc
and
jno
and
inc
inc
jb
in
sarb
loopne
in
inc
dec
jno
pop
jbe
lods
mulb
jle
shrb
fsts
fs
popf
pop
xchg
fisubs
loopne
fs
fisttpll
sbb
loopne
in
out
add
add
xchg
ret
lcall
leave
mov
mov
loop
and
fst
jge
push
dec
in
aas
mov
leave
incl
jl
enter
mov
sahf
js
das
mov
and
sub
fldcw
and
sub
ljmp
or
jne
out
outsl
push
lret
aam
dec
mov
insb
clc
out
sub
push
push
stos
xor
xor
jb
or
or
and
addr16
mov
mov
arpl
jmp
push
cmp
inc
dec
xor
fdiv
repz
pop
pop
mov
jne
push
ret
xchg
xchg
jno
or
jle
out
pop
testl
sti
sub
or
add
sub
aas
outsb
sub
fbld
push
lock
out
cmp
xlat
clc
cmp
aam
lock
xchg
popf
scas
sub
jno
fcompl
mov
dec
xor
inc
mov
inc
xchg
push
int
fldcw
into
inc
adc
ja
mov
push
mov
pop
test
dec
les
cmpsb
jle
inc
subb
xchg
hlt
test
cmp
dec
and
subb
fwait
or
jl
mov
frstor
push
jl
pushl
push
inc
adc
je
jbe
jecxz
inc
jnp
gs
or
notb
jae
enter
ljmp
pop
mov
dec
leave
icebp
in
call
cmp
sarl
ret
fists
mov
jmp
into
add
sarb
jle
jecxz
or
cmp
add
mov
cwtl
push
js
sub
repnz
mov
cmp
stos
push
add
int
in
dec
out
enter
inc
ja
or
and
dec
xor
nop
or
push
in
adc
fsubl
lahf
inc
idivb
mov
mov
xchg
jl
shlb
push
adc
jb
mov
xor
jo
popf
inc
loopne
rorl
xchg
xchg
repnz
push
rorl
and
fwait
adc
idivl
imul
ljmp
add
movb
ret
sahf
je
or
sub
push
jp
fdivl
in
adc
mov
jl
imul
adc
roll
imulb
icebp
or
sbb
jo
out
inc
fcoms
xor
cld
lret
loopne
ljmp
pop
test
nop
adc
incb
inc
mov
cmpsl
cmp
mov
cld
jbe
and
adc
mov
int
dec
cmpsb
dec
jnp
sarb
push
sub
and
lock
xor
jns
pop
mov
xor
iret
stos
add
fcom
jne
mov
jle
orb
jo
add
pop
fisttpll
push
in
ret
dec
pop
xor
dec
sbb
das
and
mov
jmp
rcll
lea
into
loopne
push
push
mov
lret
mov
mov
pop
mov
loopne
pop
pop
pop
dec
jns
and
adcb
lods
lods
sahf
xchg
pop
aaa
cmp
mov
es
in
test
sub
push
mov
ret
pop
bswap
or
inc
fimuls
dec
jns
movsb
bnd
fnsave
arpl
pop
rcrl
mov
push
mov
outsb
aad
shll
rorl
jb
cmp
in
sbb
fisubl
xor
out
mov
dec
loopne
or
mov
loope
add
bound
mov
xchg
lds
and
fldenv
mov
add
mov
out
sbb
sub
push
xchg
fnstenv
and
out
xchg
lret
jle
sbb
je
inc
out
and
adc
orb
sti
fldenv
ret
mov
inc
dec
icebp
push
mov
dec
shr
pop
mov
je
lock
add
insl
cs
popf
push
ljmp
movsl
xor
lock
in
and
js
bound
xchg
pop
sub
push
sti
xor
inc
jno
pop
push
mov
rcrb
aaa
daa
ja
pop
cmovb
loop
insb
inc
sub
xchg
js
out
mov
xchg
lret
jg
popf
cwtl
outsl
xchg
dec
cmp
dec
jl
dec
lock
sahf
xchg
inc
mov
dec
push
stc
jno
in
cli
adc
pop
xchg
push
adc
xchg
fwait
jg
jecxz
dec
sbb
hlt
mov
add
add
movsb
lods
loop
addr16
push
addl
lock
xor
repnz
and
sbb
int3
lds
mov
mull
dec
sub
push
mov
hlt
adc
pop
mov
jae
mov
or
scas
gs
clc
jmp
push
jg
pop
xchg
aas
lock
xor
hlt
sahf
fnsave
and
insl
pop
xchg
shl
out
add
and
cmp
mov
fbld
sub
stos
or
add
inc
sahf
mov
pop
scas
xchg
ss
push
cmp
scas
inc
pop
sub
enter
xor
mov
adc
ljmp
push
cmpsb
orb
mov
leave
rolb
mov
dec
bound
mov
inc
lahf
cmp
mov
mov
mov
rol
mov
cmpsl
mov
cmpsl
jmp
je
bound
or
mov
add
daa
pop
aas
mov
mov
inc
stos
popf
outsb
outsb
fimull
push
pop
popa
adcb
xchg
inc
mov
or
outsl
pop
mov
inc
fwait
call
idivl
jg
jmp
add
dec
fdivl
shrl
inc
ret
aam
enter
clc
fstl
inc
pop
sub
inc
aaa
gs
fs
xchg
inc
stos
push
xchg
fnsave
jg
rcll
gs
jp
movsb
nop
call
push
fimull
lods
in
jnp
mov
sub
and
lcall
rorl
cmpl
and
sbb
dec
and
xor
jae
inc
ffreep
mov
pop
mov
lock
icebp
push
in
dec
ljmp
jno,pn
xchg
in
mov
stc
add
mov
notl
push
inc
cmp
sub
and
add
xchg
enter
push
pop
insl
cmp
cs
out
jne
test
xchg
jne
lret
lods
add
xor
fadds
pop
xchg
aam
jg
pushf
fnstcw
add
es
fsubrl
fidivrs
xlat
test
hlt
and
fwait
xorl
rcrl
inc
out
repz
cmc
shll
daa
push
add
es
ja
call
adc
mov
sti
inc
scas
pop
adc
xor
out
cmp
test
jno
sub
shrl
sub
pop
cltd
lret
mov
cltd
lods
fwait
cmpsl
imul
or
jp
pop
ret
shlb
jno
cmp
scas
rorl
lods
inc
push
push
fnstsw
pop
fstl
add
insl
jmp
xor
push
cmp
loope
aas
cmc
outsb
mov
in
pop
outsl
pop
test
popa
xor
sbb
imul
roll
push
add
jg
inc
out
cmp
lret
adc
std
sbb
xchg
cmp
cmc
jo
subl
ja
xor
jecxz
xlat
and
pushf
nop
fisttpll
cmp
loopne
push
or
out
or
js
into
testl
das
add
decl
push
lret
adc
fistpl
add
ror
fldt
adc
mov
fidivrl
jp
cmp
jo
cmpsb
test
data16
aas
or
xchg
or
adc
xorl
test
push
cwtl
push
adc
movsl
pushf
xchg
mov
out
mov
loop
in
or
iret
sub
jbe
jnp
out
stc
and
outsl
loopne
sub
cmp
mov
fs
pop
dec
inc
stc
or
push
push
cmp
push
jecxz
popf
ret
insb
pop
loopne
adc
xchg
das
xchg
jne
stos
xchg
sbb
cmp
add
sub
insb
inc
xor
test
imul
insl
mov
mov
sub
insb
ljmp
jno
pop
int3
push
aaa
hlt
jp
mov
out
loop
xchg
cmc
shlb
xor
add
cmpsl
xchg
mov
or
les
xorb
xor
das
lahf
js
pop
cmc
es
in
or
pop
dec
popa
mov
sub
fstps
and
and
bound
dec
or
iret
xor
mov
les
stos
push
cmp
xchg
popf
mov
inc
les
cmp
cmp
pop
xrelease
xorl
jnp
iret
mov
std
sbb
xchg
xchg
push
and
or
sub
push
adc
popf
mov
jns
jecxz
lahf
ficomps
add
push
mov
test
aam
mov
call
sbb
icebp
sarb
lods
xor
xchg
push
sbb
mov
jecxz
stos
dec
fcmovb
jae
into
mov
lods
sub
sbb
outsl
or
pop
sahf
insl
test
enter
and
popa
cwtl
mov
cld
divb
cli
orl
rcl
pop
js
xchg
es
js
movsl
xor
push
fwait
popl
mov
and
fcoms
bound
outsb
cmp
into
jge
cmc
jg
hlt
imul
sub
add
add
pop
xchg
inc
mov
call
jb
xor
mov
push
addr16
cltd
icebp
sub
lret
imul
inc
push
inc
push
dec
mov
cmp
jge
cmp
mov
fdivr
sub
xchg
fists
or
adc
fwait
pushf
rolb
mov
les
sub
mov
sarb
imul
adc
mov
ret
inc
rcr
arpl
cmp
rol
gs
or
loope
out
sbb
jne
jbe
ja
lret
sahf
pmaxsw
jne
mov
xor
dec
jecxz
das
add
ja
jnp
cltd
and
cmova
mov
div
nop
lods
dec
fiadds
xchg
movsl
jl
xchg
loope
xchg
jl
adc
pop
adc
or
ljmp
mov
fsubr
xchg
ljmp
hlt
cltd
inc
subb
popa
xor
or
in
in
add
addb
loopne
sbb
jae
add
cmpb
jbe
xlat
mov
sub
cmp
test
or
sti
idivb
add
sbb
scas
out
lds
repz
add
sub
or
sbb
sbb
jbe
sbb
pushf
dec
imul
inc
test
insl
ret
call
sahf
mov
xchg
adc
nop
xchg
sbb
pop
rcl
leave
cmp
repnz
das
and
ficompl
movsl
inc
push
sar
inc
adc
dec
rcl
sbb
adc
xor
loop
gs
adc
inc
adc
sub
test
adc
cmpsb
data16
sbb
or
or
mov
enter
add
fisttpll
les
neg
mov
into
iret
aas
popf
sbb
cs
sbb
pop
test
xchg
pop
orb
sub
sub
jbe
xchg
cwtl
inc
call
addl
fwait
cli
mov
cltd
cmc
mov
iret
aad
repz
test
imul
push
xchg
dec
mov
inc
daa
dec
outsl
jb
pusha
sbb
cmp
mov
je
fcomi
xchg
out
movsb
mov
adcb
inc
in
or
sub
mov
mov
stc
mov
inc
jmp
shll
push
xorl
jge
or
inc
arpl
pusha
or
shl
dec
mov
and
adc
test
je
sbb
mov
and
repnz
sub
stc
outsb
pop
pop
adc
xor
lods
aaa
xlat
jl
aad
push
es
mov
xor
push
sbb
inc
nop
jle
leave
adc
and
dec
aam
sub
imul
jl
push
repnz
sbb
jae
cltd
mov
dec
adc
dec
jle
test
pop
test
jl
or
mov
dec
pop
or
mov
in
mov
and
loop
sbb
mov
adc
inc
in
cmpsb
adc
pop
lret
movlps
lods
test
jbe
xchg
ss
movsl
jb
cmc
mov
jecxz
fwait
add
nop
push
arpl
mov
jmp
sub
and
mov
imul
sbb
jo
fsubs
jecxz
in
mov
xchg
fs
into
dec
es
inc
mov
add
cwtl
mov
jae
mov
aaa
xor
fists
sarb
sbb
test
cs
fbstp
inc
popf
cmpsb
mov
pop
test
repz
fucom
mov
mov
rolb
mov
xor
icebp
inc
call
add
les
adc
xor
xor
lahf
fcmovb
dec
cmp
andb
mov
inc
roll
repz
sub
dec
outsl
rclb
ja
out
cmpsl
into
or
ja
popf
pop
mov
cli
mov
pop
repnz
sahf
jg
ss
mov
sub
call
out
loop
xor
sahf
sub
das
lock
in
or
outsl
cmp
sub
popf
sbbl
xor
add
bound
push
adc
dec
pop
test
das
fwait
clc
aam
jle
popf
mov
mov
jbe
insl
cmc
adc
addr16
fs
out
and
push
popa
jg
push
mov
pop
lods
pop
outsb
sbb
in
fdivr
inc
cld
pop
or
xchg
in
and
loop
pop
pop
jne
cmc
repz
scas
adcb
fucom
adc
testb
int
test
push
shll
mov
xchg
push
arpl
and
cmp
out
test
ljmp
div
dec
jge
push
and
ss
test
cmp
bound
inc
push
cmp
xor
push
cltd
testb
sub
in
xor
lret
insl
stc
clc
and
or
pushf
aad
inc
dec
sub
pop
fadds
cmovp
cwtl
mov
inc
push
xor
repz
sahf
push
sub
test
and
cmpsb
jb
imul
insl
roll
into
clc
jno
adc
fidivl
idivl
and
stos
xchg
and
loop
mov
mov
rcrb
ficomps
insl
fmuls
push
push
in
push
daa
adc
cmc
hlt
inc
ficoms
stos
push
test
sarl
cmpb
mov
push
cli
add
xor
sub
gs
test
sbb
into
mov
flds
dec
xchg
sbb
ret
icebp
mov
inc
xor
in
fildl
inc
aaa
lock
addr16
fimull
out
and
pop
test
outsl
sti
fwait
inc
ret
cmp
bnd
shlb
scas
or
add
xor
push
dec
pop
pop
adc
add
cmp
into
mov
jnp
mov
push
addr16
aad
das
mov
xchg
leave
sub
jge
sub
mov
fstps
or
sub
push
es
imul
movsl
push
xor
lret
ffree
cltd
xchg
call
cltd
mov
cmp
xchg
pop
shrb
nop
cmc
scas
cwtl
xchg
jl
mov
inc
xchg
cld
mov
sbb
aam
mov
and
pop
mov
pop
mov
icebp
cmp
sbb
and
out
in
jmp
ret
push
or
mov
xor
add
jmp
fucomp
loopne
mov
nop
sbb
scas
xchg
inc
push
cmovbe
mov
xchg
loope
xchg
mov
mov
icebp
fwait
jecxz
cmp
es
jle
mov
shrb
inc
fsts
cmpsl
les
sarb
adc
or
jnp
mov
ret
sbb
xchg
jbe
iret
push
divl
jl
cmpl
fbstp
push
push
or
int3
push
pop
add
je
jl
lods
pop
fstpt
je
and
xchg
ds
dec
cmc
pop
push
pushf
fmuls
adc
pop
pop
pop
shlb
mov
movsl
push
in
push
sbb
call
fwait
int3
ret
popa
xor
add
loop
popf
mov
iret
pop
cmc
pop
push
jl
out
addb
inc
mov
and
mov
repnz
cmp
lcall
dec
push
into
fisubl
xor
mov
xchg
inc
fwait
cmc
and
inc
and
or
mov
dec
shl
fldt
push
sub
and
add
push
add
mov
add
jb
stos
repz
dec
iret
sarb
jp
push
jne
neg
or
test
cwtl
hlt
and
pop
shr
loopne
push
call
xor
getsec
insb
mov
arpl
sbb
fwait
pushf
jno
iret
sub
jmp
jnp
lock
fsts
mov
adc
test
jge
movsb
shrb
outsl
dec
movsl
out
lods
adc
scas
sti
sbb
mov
dec
rclb
pop
lret
out
icebp
ss
pop
shl
add
adc
movsb
loop
inc
mov
xchg
mov
dec
lahf
sub
in
dec
mov
pop
inc
mov
jg
loop
movsl
pop
ret
add
jp
add
push
inc
lret
push
test
xor
sbb
inc
stos
fmuls
icebp
dec
push
push
aas
nop
mov
shr
mov
leave
pop
cmpw
jno
xchg
xchg
sub
add
push
dec
imul
pop
and
jg
inc
fcompl
mov
or
inc
jg
add
push
inc
xchg
add
in
enter
inc
in
push
pop
aas
std
xchg
dec
repnz
imul
jmp
fsubs
shr
stc
popf
mov
and
outsl
sub
inc
or
or
jo
pxor
test
ret
or
rcrl
cli
repnz
dec
xlat
sub
into
repnz
aas
addl
aaa
jbe
data16
mov
icebp
out
push
pop
lods
stos
ds
mov
mov
mov
adc
ret
addr16
pop
outsl
xchg
dec
sub
cmp
jg
into
ret
mov
scas
jb
shr
std
dec
push
inc
call
ss
in
push
pop
pusha
aaa
pop
lods
dec
mov
sbb
dec
push
mulb
loopne
insl
add
mov
andb
inc
and
pusha
out
push
pop
inc
sbb
inc
xor
cmp
jp
bound
jge
jg
ret
sub
and
icebp
and
xchg
test
cmp
jg
fisubl
insl
lods
scas
ret
pusha
xor
cwtl
inc
cmp
add
xchg
lods
daa
inc
cmc
repz
inc
push
lret
rcl
cmpb
fwait
cmc
jnp
icebp
fsts
jb
std
add
xchg
test
insb
imul
fidivrl
and
popf
sbb
sbb
or
sbb
dec
loope
scas
insl
loopne
int3
jb
stc
pop
nop
fdiv
cld
rolb
mul
cmp
jg
sbb
repnz
pusha
adc
shll
or
push
mov
xchg
pop
andb
inc
mov
jge
mov
cltd
pop
sbb
leave
arpl
and
or
mov
xlat
mov
insb
test
and
fidivl
loope
call
movsb
test
sub
dec
xchg
push
out
xchg
mov
pushf
cwtl
mov
xchg
mov
mov
cmpsb
sub
mov
cmp
loope
lret
cld
pop
sahf
xchg
push
shr
or
cmpsl
shl
stc
xchg
outsl
addl
cwtl
rorb
xor
lock
fmull
mov
lods
cmp
push
fdivrs
push
stos
mov
sub
sub
jecxz
pushf
sub
repnz
leave
xchg
inc
and
int
loop
nop
dec
test
sub
test
push
psllw
xlat
pop
out
stc
daa
or
pop
inc
mov
pop
pusha
adc
xchg
cmp
cmp
pusha
inc
mov
mov
and
ljmp
cmp
mov
cmp
push
push
scas
addr16
pop
in
cmpsb
jae
cmp
lods
pop
inc
inc
cltd
ret
add
pop
cmp
sti
test
add
movsb
and
icebp
xchg
lds
push
outsl
inc
xchg
aas
rclb
jno
test
jne
loop
ja
data16
xchg
imul
pop
push
adc
bound
jns
lret
sbb
pop
jb
and
addr16
adc
mov
in
ss
mov
xor
sahf
xor
push
xchg
sub
sub
add
and
mov
jg
pop
and
ja
cmp
mov
xlat
pushf
out
lods
push
sbb
mov
fs
pop
push
lock
cmpsb
sbb
insl
inc
imul
mov
fbstp
mov
lods
mov
imul
rcrl
clc
add
push
jbe
mov
testl
jae
es
js
or
in
dec
cltd
and
pop
test
push
xchg
sahf
or
mov
jmp
xlat
les
lcall
mov
pop
icebp
repnz
mov
ss
ja
in
xor
fmul
in
aad
cmp
add
cld
repz
sbb
fiaddl
inc
inc
in
js
movsb
pushf
cmc
movsl
mov
and
pop
lret
test
mov
pop
je
sbb
in
jmp
pop
ja
fisttps
and
test
addr16
cmp
mov
jns
mov
sub
adc
rcll
push
ljmp
enter
xor
sbb
movsb
pop
sub
mov
mov
dec
out
sbb
adc
js
mov
adc
aad
lahf
pop
sahf
sbb
add
daa
xchg
mov
mov
aam
fiadds
xlat
lea
pushf
sbb
jle
dec
cmp
pop
mov
test
pop
punpcklbw
jp
dec
shrl
nop
pop
cmp
cmpsl
lret
cmp
jl
push
loope
sbb
inc
popf
loope
or
loope
or
in
mov
arpl
xchg
out
lea
push
repnz
add
push
xor
dec
out
enter
sbb
dec
push
xchg
imul
pop
cs
out
inc
pop
inc
mov
pop
mov
out
into
dec
cmp
push
sub
or
cwtl
jp
or
ret
jb
imul
push
lret
stc
shlb
cmpsl
es
nop/reserved
cmpsl
pop
movsb
cmp
loopne
sbb
int
adc
add
push
test
mov
mov
inc
aad
adc
mov
fmull
icebp
inc
ds
inc
sbb
mov
mov
pop
shl
push
lods
push
mov
dec
jp
sbb
lock
jmp
js
xor
sub
enter
xchg
loope
inc
nop
sub
mov
add
jl
jmp
stos
inc
test
adc
jecxz
mov
sbb
loop
gs
ret
mov
scas
mov
fwait
inc
out
movsb
pop
iret
xor
ljmp
mov
in
ss
dec
in
popf
sbb
lret
inc
cwtl
mov
enter
outsl
cmp
fstpl
outsl
imul
inc
popf
add
cmp
jecxz
lock
out
into
adc
jnp
xchg
cmp
mov
xor
shlb
inc
ja
in
enter
test
cmpsb
popf
movsb
pusha
ret
xchg
insl
inc
dec
sub
fcoml
dec
aad
mov
cmp
stc
out
inc
das
sub
sti
xor
pop
in
aam
subl
xchg
and
jg
pop
or
enter
out
mov
movsb
adc
jnp
push
or
inc
cmp
cmpsb
test
xor
das
or
xor
pusha
into
add
push
xorb
push
mov
aas
push
das
lods
mov
loope
adc
sti
sub
dec
mov
xchg
cmpsl
add
std
xchg
push
into
xchg
dec
xchg
test
stos
fldt
sti
imull
add
pop
in
cmp
or
out
leave
jbe
add
mov
pop
jmp
insl
aas
adcl
stc
rcrl
jmp
mov
push
push
dec
cmp
iret
push
xlat
das
sub
or
mov
pushf
int
sbb
mov
sbb
xor
aas
and
stos
test
cmc
mov
aam
repz
adc
dec
lea
inc
iret
mov
sarb
imul
in
fiaddl
insl
orb
inc
pop
lcall
cli
shl
fstpt
cld
pop
jge
or
cmpsl
push
adc
dec
scas
and
or
cmpsl
sbb
xchg
inc
sahf
xlat
dec
mov
push
idivb
and
fdivs
gs
jb
ss
fs
ljmp
mov
mov
out
sarl
sbb
xor
jecxz
jnp
cltd
out
mov
loopne
ds
fists
call
adc
pushf
pop
icebp
sbb
in
fbld
jle
dec
push
ds
mov
ds
dec
pop
out
push
test
and
mov
pusha
xchg
fwait
inc
push
xchg
cmp
mov
mov
mov
leave
mov
cltd
lret
xchg
iret
sub
push
dec
fldenv
jp
jb
sub
jle
and
jle
and
sub
sub
pop
pop
movsb
mov
outsl
subl
and
jecxz
jmp
lock
jno
repz
lods
pop
jge
addl
push
fmul
das
iret
mov
testl
insl
inc
fdivrl
jae
xchg
aaa
dec
call
jecxz
mov
mov
ss
push
outsb
incl
xchg
dec
js
dec
adc
or
dec
mov
mov
jle
push
test
inc
sahf
mov
and
icebp
cmp
cmp
cmp
and
es
outsb
icebp
aas
aaa
call
jb
aam
adcb
push
mov
mov
lods
dec
daa
scas
mov
rolb
mov
mov
xor
popf
mov
add
cmp
shrl
jno
fisubrl
add
inc
mov
xchg
iret
dec
jnp
rcl
adc
movsl
inc
sub
fdivr
aam
shrb
js
in
pop
das
mov
test
sarl
in
int
or
or
sub
sbb
test
xchg
sbb
cmpl
inc
jne
fists
shrb
adc
iret
in
xchg
fwait
push
fdivrl
in
mov
add
pop
popa
mov
xchg
push
cmp
mov
and
push
sub
mov
mov
sub
leave
nop
add
xchg
test
mov
dec
inc
jb
sarl
adc
add
pop
cmp
dec
inc
aam
imul
mov
cli
lret
or
test
inc
hlt
lds
pushf
cmpsl
and
data16
pop
xor
stos
mov
dec
dec
imul
pop
sahf
out
leave
jo
cmp
inc
jo
push
test
insb
jmp
adc
or
sbb
dec
add
mov
lcall
loop
or
push
adc
js
nop
jmp
pushf
icebp
and
sub
push
xchg
pop
inc
cmp
outsl
addr16
or
inc
jmp
add
jns
cli
and
js
pusha
cmp
add
inc
pop
aaa
cmp
inc
in
imulb
mov
lcall
inc
and
push
cmc
cmpsb
dec
insb
pop
cmpsb
fisubl
or
dec
out
lods
xor
sub
ficompl
repz
dec
pop
sub
dec
xor
push
xchg
in
sbb
nop
inc
insb
div
sub
sub
int3
rorl
mov
lods
enter
roll
xchg
lock
cmpsb
lret
cmpsb
jbe
inc
lahf
mov
sbb
ficoml
adc
lahf
cli
cmpsl
xchg
leave
cs
sbb
push
inc
cmp
jg
xchg
xchg
mov
call
cmp
jae
mov
xchg
repz
stos
orb
mov
test
movsl
insb
cltd
test
xchg
inc
adc
mov
lock
push
inc
cwtl
or
or
rorl
nop
lea
dec
push
sbb
jo
fdivrp
clc
faddl
lea
mov
lret
and
out
lahf
pop
arpl
xor
pop
sbb
pop
pop
shll
mov
mov
nop
mov
cld
lret
pusha
bound
rolb
movsb
adc
mov
xlat
dec
pushf
add
jge
fldcw
xor
xchg
daa
xor
mov
das
stos
jae
push
inc
fsubr
sbb
push
fistl
ds
movsl
dec
repz
inc
inc
pusha
fidivrs
xchg
faddl
jl
rol
sub
fisttpll
pushf
cmp
push
adc
dec
inc
cli
jp
jne
pop
shrb
inc
daa
test
cld
adc
movsb
pusha
push
cmp
call
push
push
scas
data16
bound
and
xchg
das
jl
cmp
pop
adcl
add
outsl
cld
add
xchg
adc
mov
mov
idivl
xor
stos
sub
incb
cmp
es
call
xor
push
adc
jp
fistpl
push
and
int3
xor
xor
mov
popf
in
sub
dec
nop
push
daa
pop
pop
cmp
add
scas
mov
lahf
stc
xor
fnstsw
mov
and
mov
xchg
dec
add
mov
push
xor
scas
es
or
lahf
das
pop
jge
xchg
sub
aas
sub
dec
xchg
jae
loope
and
pop
push
call
es
mov
mov
adc
ja
loop
mov
dec
mov
cmp
aad
fcoml
lds
push
ficoml
xchg
leave
pusha
pop
jp
in
add
imul
cmp
sbb
pop
and
into
mov
xor
rol
sarb
adc
orl
push
test
mov
fldenv
inc
cmp
das
sbbl
jae
enter
outsl
mov
es
aad
cmp
sbb
fsubrs
jo
fldenv
pop
and
iret
adc
jp
scas
aam
or
outsb
pop
or
mov
xor
xlat
or
jb
sbbb
lea
movsb
wbinvd
sub
dec
add
fstpt
mov
mov
xchg
push
outsb
test
xchg
insb
test
add
mov
nop
pop
aas
scas
lcall
mov
jno
pusha
cmpsb
out
xor
in
adc
ss
pop
xchg
mov
dec
mov
mov
xchg
cmpsl
out
jecxz
mov
repz
movsb
jae
mov
outsb
xchg
xchg
loopne
jae
rcll
addb
jb
lods
lahf
icebp
cld
jno
aas
fdivrs
mov
push
in
imul
out
push
pop
cltd
and
sbb
add
repnz
and
xchg
notl
rcrl
int3
add
inc
fdivrs
mov
add
rorb
or
shll
inc
mov
sub
xor
int
cltd
les
xor
pop
add
sbb
cmp
stc
pop
lods
pop
xchg
insl
neg
lods
test
push
out
inc
loope,pt
jns
gs
movsl
jo
and
call
jge
or
push
push
cmpsl
test
inc
das
das
test
push
dec
jne
inc
imul
xchg
cltd
sub
lock
aad
sub
cltd
std
add
mov
rcrb
dec
inc
in
in
movsb
dec
pushf
pop
pop
jle
cs
pop
push
test
and
mov
jo
pop
add
dec
inc
out
clc
insb
outsb
adc
pop
jge
lds
rorl
ja
popf
mov
lock
jmp
es
and
or
pushf
arpl
mov
xchg
adc
inc
xchg
and
cmpsb
mov
insb
sub
pop
ss
sub
into
lret
push
jmp
sbb
sbb
int
xchg
in
mov
and
call
add
pusha
aas
dec
leave
push
jp
out
test
sub
jb
stos
scas
cmp
mov
iret
loopne
lret
call
call
push
jnp
setp
int3
xchg
les
push
sbb
arpl
enter
sub
mov
outsl
xchg
int3
xor
sbb
out
push
push
mov
sub
dec
repnz
mov
in
cmp
dec
mov
sbb
mov
mov
add
jg
addr16
mov
cmpsl
iret
out
iret
mov
and
mov
ja
push
jg
pop
orb
cmp
inc
mov
push
out
shll
addr16
les
aad
into
add
mov
lret
mov
mov
repnz
out
sbb
test
push
es
rolb
jecxz
xchg
mov
jnp
xchg
popa
ds
jb
dec
dec
xor
sub
leave
cmp
aam
fdivs
sub
inc
inc
cmp
es
into
mov
scas
dec
inc
add
jbe
mov
test
and
jbe
cmpsl
js
addr16
xchg
xor
inc
push
pop
push
sbbl
pop
es
xchg
xchg
dec
xor
mov
inc
push
push
repz
push
test
mull
xchg
das
cmp
insb
jnp
sbb
sbb
insb
fmulp
mov
sti
xchg
inc
addr16
lea
cmp
jnp
aas
sarl
pop
orb
cmpsb
enter
fcmovnbe
mov
lods
dec
daa
repz
pusha
add
ss
sbb
movsl
cmpsb
mov
dec
addr16
cmp
adc
imul
mov
mov
mov
fdiv
jbe
xchg
int
mov
push
aaa
cmp
dec
push
sbb
jno
ret
arpl
pop
mov
nop
arpl
arpl
xor
inc
sub
jnp
dec
lock
aas
jle
test
jns
lods
xor
jle
or
fcomps
das
pop
data16
xchg
mov
inc
adc
xor
test
call
rorl
vmfunc
xor
cmp
popa
adc
mov
idivl
xlat
push
lea
add
or
mov
movsl
mov
jb
loopne
or
lds
mov
xchg
repnz
xchg
js
iret
mov
jl
mov
pop
inc
xchg
cmp
lds
lahf
ja
es
sbb
fistps
push
mov
pop
pop
test
ja
and
inc
stc
into
adc
push
xor
aad
sbb
inc
roll
sbb
xor
or
outsl
xlat
or
sbb
mov
aad
repz
mov
pop
outsl
in
shrl
mov
not
insl
imul
sub
lds
notl
xchg
jle
in
dec
add
mov
test
aam
sahf
dec
rcrl
sub
xor
jnp
imul
imul
cmp
subb
push
in
dec
adc
psubusb
and
pop
enter
jne
pop
xor
and
cmpsl
lahf
or
daa
mov
rcrl
dec
out
pop
pop
dec
xlat
xor
add
mov
bound
mov
es
and
mov
xor
loop
fimuls
sub
cltd
andb
push
jno
add
dec
pop
pop
mov
or
call
daa
dec
jne
out
mov
push
mov
jmp
scas
and
lods
pusha
adc
jecxz
xchg
push
lock
push
dec
flds
cld
cmpsl
test
pop
cltd
and
pop
stos
ljmp
ret
icebp
bound
pop
sbb
cwtl
mov
cld
sahf
ja
jo
inc
pop
xchg
adc
mov
icebp
mov
loope
std
aas
jmp
xchg
xchg
hlt
leave
cmp
push
lods
cmp
xchg
jae
lock
ret
js
clc
pop
ret
popa
ds
add
sbbl
mov
sub
inc
jo
mov
std
sbb
int
in
mov
jmp
aad
lock
sbb
add
aaa
jns
mov
or
mov
enter
cmpsl
out
push
cmp
lret
andl
repz
pushf
pop
fs
push
mov
mov
aam
mov
jge
cmp
xchg
adc
jl
and
pop
fs
mov
cmp
xchg
jmp
push
jo
popf
adc
sti
dec
adc
and
lods
js
sub
and
rorl
pop
mov
dec
out
stos
mov
inc
jge
lahf
test
jmp
inc
stc
jbe
sbb
mov
push
mov
cmc
out
sbb
mov
sub
rorl
adc
scas
inc
sub
je
xor
sub
shll
and
sti
sub
xchg
adc
lds
fs
push
pusha
scas
cld
inc
out
cltd
xor
int3
icebp
adc
lds
adcl
and
mov
pop
mov
xor
sub
cli
pop
or
push
mov
pop
lret
xlat
push
mov
adc
xor
cmp
out
cmp
mov
sarl
jb
sub
push
push
ljmp
std
xor
adc
xor
xlat
push
and
mov
and
mov
fcmovne
xchg
lock
jne
sub
push
mov
fisttps
cmp
pop
xchg
out
mov
or
push
pop
icebp
arpl
xchg
faddl
ret
inc
sbb
dec
mov
cmpsb
xchg
lret
push
lret
pop
inc
movsb
in
and
sti
xor
adc
outsl
hlt
cmp
cmpsb
andl
clc
fnstsw
xchg
mov
dec
dec
mov
add
lcall
sub
sbb
cmp
cmpsl
aas
jno
or
mov
add
adc
dec
adcb
inc
or
pop
sbb
jecxz
aad
push
and
stos
ja
mov
sub
dec
std
add
mov
insl
mov
xor
add
mov
std
data16
push
lods
sub
adc
bound
mov
cli
push
pusha
test
mov
into
subb
fnsave
sar
into
int
das
lods
into
pop
jle
andl
rcrb
aaa
jge
sbb
inc
lahf
fwait
ret
pand
imul
or
dec
mov
dec
popa
xor
out
push
movsbl
clc
xor
xchg
and
fstpl
cmp
or
and
xchg
mulb
mov
insl
mov
jmp
scas
sbb
in
inc
test
jne
mov
pop
es
loop
imul
mov
repnz
dec
shrl
ljmp
outsl
inc
in
adc
pop
jmp
fisttpll
push
push
xchg
jo
popa
xor
jle
cmpsl
lcall
imul
pushf
mov
push
push
mov
xchg
js
rcl
sub
les
mov
out
sarl
and
call
mov
mov
cmp
jge
stos
rorl
and
and
gs
repz
outsl
pop
xchg
cmp
xchg
sub
push
add
inc
dec
pop
imul
dec
mov
in
cmpsl
lret
gs
fwait
leave
pop
daa
aaa
fidivrs
jge
fsubs
jle
push
idivl
mov
iret
negb
mov
push
enter
jle
rorb
aad
xor
dec
inc
bound
fsubrl
mov
subl
insb
xchg
mov
push
sarl
or
push
adc
popf
je
ljmp
insb
rcll
dec
mov
repnz
das
xlat
jae
xor
dec
ljmp
add
xor
push
scas
xchg
mov
and
js
xor
and
and
pop
and
mov
movsb
push
dec
mov
sub
outsl
pop
adc
outsl
lahf
and
out
dec
adc
aaa
testl
hlt
jae
mov
mov
int
nop
inc
add
call
out
xchg
xchg
inc
lods
mov
gs
sbb
adc
xor
out
inc
mov
xor
cmp
push
js
pop
mov
aad
loop
divb
mov
cwtl
xchg
jle
gs
jae
pop
pop
add
or
stc
ljmp
xor
jb
sarb
leave
mov
nop
jmp
sbb
shrb
pop
gs
ret
sbb
or
dec
pop
sbbl
cwtl
roll
mov
clc
sarl
xchg
out
lahf
xchg
add
sbb
aaa
or
outsb
cmp
test
jge
sub
nop
xor
or
adc
xor
xchg
loopne
fwait
mov
xor
pop
sbb
gs
repnz
rorl
dec
add
popf
enter
cmp
daa
mov
fnstsw
in
imul
aas
out
addr16
sub
imul
cwtl
xor
je
insb
notb
push
fs
lds
test
push
pop
call
stos
insl
stos
xor
push
scas
fildll
cs
mov
xchg
iret
jno
lods
lret
xchg
cmp
rcrl
cmp
mov
or
int3
fldenv
or
dec
pusha
mov
xor
jle
stos
test
sbb
mov
out
xor
std
xor
mov
aaa
call
pushf
icebp
push
cmc
push
jg
test
and
mov
lret
mov
scas
pop
in
jo
add
add
jns
clc
sub
push
push
shr
xchg
dec
adcb
mov
ja
movsl
leave
jmp
es
aaa
cmp
lret
pop
out
jl
jns
mov
adc
jns
lea
sbb
pop
sub
add
nop
and
sub
dec
fidivl
fwait
movsb
or
lods
push
push
stos
and
sub
roll
out
popf
mov
cmpsb
dec
push
mov
shr
dec
add
rolb
fs
aad
jge
movsl
iret
cmp
cmp
jo
sarl
nop
loop
sahf
jp
jecxz
jp
in
fmul
and
sub
sarb
inc
jae
xchg
pop
dec
cmp
push
xchg
mov
movsl
sbb
cmp
add
pop
mov
xor
cmpsb
outsb
aaa
into
pop
xchg
xchg
mov
xchg
adc
std
add
cmpsb
add
in
adc
ret
pop
dec
sbb
sti
add
loop
adc
es
imul
push
and
in
std
into
pop
scas
imul
notl
add
push
or
mov
rorb
in
xor
or
std
or
xorps
int
insl
add
mov
insl
idivl
loopne
leave
jp
ds
xlat
sbb
test
or
dec
lds
test
scas
int
jne
fmulp
je
add
sub
inc
clc
arpl
pusha
adc
xor
dec
jae
rorb
adc
repnz
jmp
adc
xchg
xor
mov
jmp
sub
scas
jl
mov
jl
out
cmp
cmpl
jo
add
sbb
jp
cltd
cmpsb
mov
cmp
cs
movsl
xor
and
and
repz
loop
jge
jle
push
out
mov
test
addr16
cmp
jns
adc
test
dec
jmp
xchg
divb
mov
cwtl
and
push
stos
pop
shlb
sbb
bound
jae
fadds
push
adc
test
push
mov
ds
arpl
push
lods
jle
mov
leave
outsb
cld
mov
mov
lock
cmp
mov
mov
testl
paddb
pop
out
in
push
inc
jl
cmp
mov
mov
outsb
and
sti
movsl
or
dec
data16
add
sbb
adc
jl
or
pop
in
test
roll
lahf
inc
pop
mov
jg
fisubs
xor
pop
xor
pop
and
add
mov
inc
vcomiss
jg
je
mov
lcall
mov
lret
dec
add
shll
pop
sbb
into
add
fucomi
cmp
out
jb
fidivs
out
gs
mov
in
in
cmp
mov
lret
jbe
sub
mov
push
mov
push
nop
cmp
pop
sub
sub
fcmovnu
popf
push
sbb
pop
inc
jp
loopne
loope
cmp
cmp
mov
cmp
outsl
leave
sahf
adcl
mov
sti
ss
int
repnz
mov
pop
adc
sub
add
sbb
pusha
push
loop
lahf
mov
xchg
xchg
push
insb
pop
lea
aad
aam
icebp
into
mov
orb
xor
mov
shlb
dec
jecxz
scas
xchg
in
mov
mov
insl
pusha
adc
dec
add
cs
push
dec
inc
ret
jg
push
xchg
cmpsl
in
xchg
sarl
fst
imul
rcll
add
or
and
jno
outsb
mov
jmp
out
popf
xchg
xor
inc
aas
in
mov
jecxz
xchg
loope
scas
lds
cmp
ljmp
xchg
mov
mov
add
and
xchg
enter
outsb
ret
loop
int
stc
or
mov
pusha
movsl
adc
push
jl
mull
jge
inc
inc
sub
xor
addr16
ljmp
push
mov
sbb
add
push
xor
ds
jo
mov
cmp
lock
outsb
inc
xchg
pop
dec
mov
in
sarl
jno
test
lret
sbb
xor
mov
lret
push
pop
out
pop
jmp
loop
and
inc
sub
sub
jno
in
test
or
int
mov
shlb
mov
out
mov
cmp
cmp
cmp
mov
in
mov
lret
lcall
lret
fwait
jecxz
jno
mov
mov
push
push
fistl
bound
scas
lahf
repnz
push
add
stc
add
dec
dec
arpl
xor
adc
mov
ret
xchg
es
push
mov
jne
daa
iret
jle
scas
dec
notl
jp
negl
adc
js
xchg
lea
and
call
cmp
push
mov
repnz
add
testb
add
xor
pop
jle
aas
lahf
fdivl
jnp
xchg
mov
mov
dec
aaa
cs
pop
ficompl
cmpsb
cmpsb
mov
call
lock
lret
clc
out
scas
and
imul
mov
andb
in
jo
fimuls
mov
rcrb
inc
dec
or
repnz
dec
sbb
sahf
dec
insl
sub
daa
pusha
xchg
sbb
sub
shlb
jb
int3
std
imul
push
or
rcr
je
gs
scas
into
sbbl
das
aad
gs
mov
push
inc
cmp
mov
int
pushf
stos
dec
ret
dec
mov
aaa
gs
cmpsb
cmp
jl
mov
dec
mov
or
and
sbb
les
adc
sub
xor
lock
std
outsl
inc
mov
loopne
stos
loope
inc
pop
lods
adc
ret
and
test
mov
sub
jns
in
les
in
les
dec
iret
test
jecxz
add
pop
adc
js
sub
lret
jno
inc
or
cmc
movsb
ficomps
pop
insb
inc
sub
fistpl
lea
xchg
and
pop
mov
sti
jno
push
divb
incb
mov
scas
out
push
mov
push
and
and
jl
jl
into
xor
jne
push
ret
pop
int
push
repz
ret
xchg
add
pop
jecxz
cli
pop
pop
pusha
mov
xchg
push
cmp
jp
add
fisubrs
rcrl
movsl
mov
pop
mov
push
hlt
shrb
hlt
je
mov
aaa
mov
and
enter
mov
sub
jae
inc
sub
dec
mov
mov
aam
dec
mov
cwtl
outsb
in
mov
cmpsl
pop
fcom
push
out
mov
cmpsb
movsb
jmp
jmp
mov
or
outsb
jo
adc
in
inc
mov
movsb
sub
xchg
gs
mov
adc
dec
and
lea
lock
cltd
add
andl
cwtl
or
insl
xchg
sbb
mov
outsl
cmpsl
dec
push
in
imul
add
xor
sub
mov
sahf
inc
jle
leave
push
iret
xchg
sbb
fisubrs
dec
mov
and
das
mov
leave
pop
pop
out
or
paddd
mov
out
scas
pop
hlt
mov
dec
addb
adcb
shrb
sub
bound
aam
icebp
mov
mov
lock
jae
cli
cmpsb
pop
jb
inc
lock
and
push
scas
xor
dec
sub
cmpsb
scas
movsb
test
pop
pop
mov
dec
test
xor
jecxz
mov
pusha
jp
xchg
je
mov
cmp
inc
sub
icebp
in
cltd
lods
rcr
test
fbld
mov
outsl
repz
inc
jo
mov
mov
leave
iret
jns
call
xor
imul
loop
rorb
cmpsb
cmpsb
inc
pop
cmpsb
cmc
jg
hlt
iret
xchg
xorb
xchg
jo
xorl
rorb
in
pusha
dec
xchg
and
ja
dec
stos
push
and
mov
fdivrl
push
in
shr
jbe
push
hlt
and
cmpsb
lods
push
dec
xor
adc
sbb
sub
test
sbb
lods
pop
out
mov
mov
sbb
dec
cmpb
lods
or
je
je
or
adc
lods
inc
xchg
inc
pop
mov
call
jnp
mov
pushf
mov
jge
mov
lea
and
dec
jl
xorb
pop
aas
das
mov
lods
or
loop
call
cmp
std
dec
xchg
xor
mov
pop
inc
push
imul
sti
sub
scas
or
pop
out
test
cltd
inc
in
xchg
lods
inc
imull
jg
lret
dec
lds
inc
scas
sbb
pop
dec
cmp
popa
nop
call
fdiv
loopne
iret
repnz
mov
mov
inc
adc
cs
std
xchg
es
jno
mov
int3
outsl
pop
mov
jg
in
test
mov
movsb
ret
jp
jae
pop
push
push
jg
dec
add
ret
xor
mov
adc
out
pop
pop
or
and
mov
popa
in
gs
inc
mov
xlat
imul
jge
fsubl
pop
add
add
push
sti
icebp
cmp
icebp
stos
pushf
pop
scas
push
add
mov
pop
and
xchg
shlb
shlb
xor
xlat
add
mov
jg
sub
xchg
mov
push
xor
jb
fcmove
adc
push
push
add
push
inc
xor
lods
sub
pop
fisttps
sub
loope
jno
xchg
pusha
pop
pop
shr
push
sar
pop
daa
test
jg
adc
repz
imul
xchg
jno
ret
mov
dec
push
xchg
jne
in
jge
lock
sub
push
lcall
rcl
into
push
cmp
loop
pop
cmpl
push
push
int3
jno,pt
out
jo
imul
add
and
ret
inc
fucomp
aam
xchg
adc
mov
dec
adc
jle
out
push
jbe
data16
push
or
and
dec
int3
or
mov
push
nop
cmpb
into
xor
pop
mov
push
xorb
sub
aaa
sub
cmpsb
push
in
sub
or
jp
lahf
pop
insb
add
sub
add
nop
loopne
insb
and
push
jo
out
nop
cmc
in
sbb
addb
xchg
repz
mov
adc
clc
fsubrl
mov
cmc
sub
test
int3
clc
aad
sbbb
lods
and
push
or
jno
dec
lods
inc
lahf
daa
xor
dec
lret
xor
or
test
lds
mov
fistps
jg
les
insl
jbe
je
ljmp
xor
lds
add
adc
xor
js
in
cmc
sbbl
loope
and
movsb
popa
jg
mov
idivb
cmp
cpuid
pop
cmp
sbbb
lcall
test
ja
lahf
sub
fwait
cltd
xchg
int3
iret
cmpsb
mov
imul
aad
and
lret
add
lcall
data16
cmpsb
sbb
inc
or
and
xchg
mov
movsb
jmp
xchg
sbb
sahf
mov
faddl
push
daa
dec
stos
pop
mov
repz
pop
sub
pusha
popa
rcrl
pop
popl
pusha
icebp
mov
rorb
push
cli
mov
cmpsl
push
push
inc
or
mov
lret
add
inc
data16
dec
xchg
fimull
dec
jl
jno
outsl
loopne
repz
addr16
jg
sbb
leave
inc
std
daa
pop
xor
cli
adc
mov
pop
push
add
pop
and
sbb
xchg
test
neg
mov
les
dec
mov
dec
cld
jmp
popa
and
cmp
dec
sbb
push
and
dec
mov
pop
out
.byte
cmpsb
add
add
add
or
pusha
add
cmpb
addb
add
sbb
add
call
add
add
add
add
add
add
push
add
clc
pop
add
sbb
add
mov
add
add
add
inc
add
push
add
dec
add
dec
add
inc
add
add
add
add
add
add
add
mov
add
add
add
addb
add
lock
addb
add
add
add
add
add
add
add
add
add
mov
pop
or
or
add
in
add
add
add
add
add
add
add
loopne
add
rcrb
push
add
add
add
add
add
add
add
add
add
or
add
fcomps
add
add
in
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
add
in
add
add
add
add
add
add
add
mov
add
pusha
pop
or
xor
add
in
add
add
add
add
add
add
add
mov
add
xchg
pop
or
xor
add
in
add
add
add
add
add
add
add
fadds
add
enter
mov
add
in
add
add
add
add
push
add
add
add
add
nop
add
xorb
add
add
add
add
xorb
or
add
xor
add
pop
add
xorb
add
add
add
add
add
add
add
add
clc
add
adcb
add
and
adcb
add
dec
add
adcb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
in
add
add
add
add
add
add
add
test
add
les
add
add
add
add
add
add
add
add
add
rolb
add
or
add
add
in
add
add
add
add
add
add
add
clc
add
add
or
pop
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
add
add
add
add
add
add
add
dec
add
add
imul
add
add
add
add
add
add
add
add
jo
add
push
add
add
add
add
add
add
add
add
add
cwtl
add
add
imul
pop
add
add
add
add
add
add
add
add
add
rolb
add
insl
or
pop
add
add
add
add
add
add
add
add
add
call
outsb
or
pop
add
add
add
add
add
add
add
add
add
adc
add
outsl
or
in
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
mov
add
ja
add
add
add
add
add
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
add
jo
add
add
add
add
add
add
add
add
add
call
jns
add
add
add
add
add
add
add
add
add
add
adc
or
sub
add
in
add
add
add
add
add
add
add
cmp
or
sub
add
in
add
add
add
add
add
add
add
pusha
add
or
call
add
add
add
add
add
add
add
mov
or
push
add
add
add
add
add
jg
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
rolb
or
or
add
in
add
add
add
add
add
add
add
clc
add
or
test
add
in
add
add
add
add
or
xchg
add
add
add
nop
push
add
mov
add
add
push
add
or
add
xor
add
pop
pop
add
addb
addb
add
test
add
rolb
add
add
add
add
add
add
add
add
add
addb
add
or
cwtl
add
add
add
add
add
add
add
add
add
test
add
les
add
in
add
add
add
add
add
add
add
rolb
add
inc
mov
add
add
add
add
add
add
add
add
add
add
clc
push
add
cmp
or
ljmp
add
add
add
add
add
add
and
add
sub
add
in
add
add
add
add
add
add
add
dec
pop
add
fcoms
add
in
add
add
add
add
add
add
add
jo
add
mov
add
in
add
add
add
add
add
add
add
cwtl
pop
add
pop
cwtl
or
mov
add
in
add
add
add
add
add
add
add
rolb
add
or
loop
add
in
add
add
add
add
add
add
add
call
cltd
or
mov
add
in
add
add
add
add
or
add
add
pusha
or
addb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
sldt
enter
sbb
or
addb
add
add
add
add
add
add
add
add
add
js
add
jl
or
push
add
add
add
add
add
add
add
add
add
mov
fwait
or
sub
add
in
add
add
add
add
add
add
add
enter
clc
fwait
or
js
add
in
add
add
add
add
add
add
add
lock
add
or
les
add
in
add
add
add
add
add
add
add
sbb
add
xor
or
sub
add
in
add
add
add
add
add
add
add
inc
or
add
or
inc
add
add
add
add
add
add
add
add
add
push
mov
add
in
add
add
add
add
add
add
add
nop
or
add
mov
add
in
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
loopne
add
and
or
adc
add
in
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
or
add
add
push
jns
add
add
add
add
add
add
add
add
add
add
pop
or
add
add
add
in
add
add
add
add
add
add
add
orb
add
or
adc
add
in
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
loopne
add
jg
add
and
add
dec
or
orb
add
inc
add
push
add
add
dec
add
dec
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
fsubs
add
add
add
add
add
add
add
add
bound
add
in
movsb
or
adc
add
in
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
or
or
add
in
add
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
push
data16
data16
mulb
mulb
jmp
outsw
jmp
push
outsl
mulb
mulb
jmp
outsw
imulb
outsl
imulb
outsl
mulb
jmpw
outsl
mulb
imulb
ljmp
data16
jmp
data16
data16
jmp
data16
push
imulb
data16
jmp
data16
addb
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
clc
mov
clc
clc
mov
clc
mov
clc
decl
mov
clc
decl
mov
clc
clc
mov
mov
clc
mov
data16
data16
decl
clc
xchg
jmp
jmp
clc
clc
clc
jmp
mulb
mulb
clc
clc
mov
jmp
jmp
clc
clc
mov
push
jmpw
clc
decl
imulb
jmpw
clc
mov
clc
xchg
outsl
jmp
idiv
data16
decl
outsl
idiv
imulb
jmp
clc
mov
ljmp
jmp
clc
mov
clc
xchg
idiv
push
data16
decl
xchg
push
data16
decl
xchg
jmp
clc
clc
clc
clc
xchg
data16
mov
clc
mov
push
testb
mov
data16
clc
xchg
jmp
mov
mov
data16
clc
clc
clc
decl
decl
decl
decl
clc
mov
mov
clc
mov
decl
mov
clc
decl
clc
mov
decl
decl
clc
clc
mov
decl
clc
clc
mov
clc
mov
mov
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jg
push
ja
ja
push
jg
pushl
ja
ja
ja
ja
push
jg
pushl
pushl
ja
ja
push
jg
pushl
push
ja
ja
ja
jg
push
jg
push
ja
pushl
push
ja
push
ja
push
jg
pushl
ja
ja
push
ja
pushl
push
jg
pushl
ja
ja
pushl
ja
push
ja
push
jg
push
ja
div
ja
ja
ja
ja
push
ja
push
jg
push
ja
divl
jg
pushl
push
ja
push
jg
data16
pushl
pushl
push
jbe
data16
data16
push
data16
pushl
pushl
push
jbe
jmp
jmp
outsl
jmp
push
jg
divl
ja
jbe
push
push
data16
push
data16
pushl
pushl
ja
jbe
outsl
jmp
jmp
outsl
push
data16
pushl
push
ja
divl
push
push
data16
jmp
pushl
pushl
idivl
outsw
jmp
jmp
jmp
pushl
push
jbe
mulb
mulb
mulb
jmp
push
ja
push
jbe
jmp
jmp
jmp
jmp
push
ja
ja
push
jbe
push
push
push
outsl
jmp
push
ja
ja
push
jbe
outsl
jmp
jmp
imulb
data16
push
ja
jg
push
jbe
push
push
outsl
jmp
pushl
jg
push
jbe
outsw
jmp
jmp
pushl
push
jbe
data16
outsl
jmp
data16
push
ja
pushl
push
jbe
data16
jmp
data16
push
ja
pushl
jg
jbe
push
data16
pushl
push
jg
jbe
jmp
push
ja
idivl
jg
divl
data16
idiv
push
jg
divl
jg
divl
data16
push
outsl
idiv
pushl
pushl
ja
push
jbe
data16
push
outsl
div
ja
push
ja
divl
divl
data16
divb
jg
ja
push
jg
jbe
push
divl
divl
idivl
jg
jbe
jmp
ja
divl
ja
idivl
jg
data16
ja
pushl
idivl
jg
data16
pushl
push
ja
divl
jg
pushl
ja
pushl
pushl
jg
ja
jg
pushl
jg
ja
push
ja
jg
ja
idivl
pushl
jg
ja
push
ja
ja
push
jg
jg
ja
pushl
pushl
ja
ja
push
jg
push
ja
pushl
jg
ja
ja
ja
ja
push
jg
push
ja
push
ja
divl
ja
ja
ja
push
jg
push
ja
push
ja
push
ja
ja
push
jg
pushl
push
ja
pushl
ja
push
jg
push
ja
ja
pushl
pushl
push
jg
pushl
jg
push
ja
pushl
push
jg
push
ja
push
ja
push
jg
push
ja
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
adc
adc
add
add
sub
add
add
and
adc
add
add
call
add
xor
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
dec
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
add
pop
add
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
add
pop
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
pop
add
add
sub
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
add
pop
add
add
and
add
add
inc
add
insl
add
add
je
jae
add
add
pop
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
mov
or
enter
add
add
jb
gs
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
enter
enter
enter
add
add
std
enter
add
add
add
jmp
mov
add
pusha
call
pop
sub
mov
add
mov
mov
sub
push
push
mov
lods
lods
add
mov
push
mov
push
push
push
call
pop
pop
mov
push
push
push
push
push
push
mov
lods
lods
add
push
lods
add
call
push
push
lods
push
push
call
pop
push
push
push
pushl
push
push
push
mov
push
push
call
pop
push
push
push
pushl
pushl
mov
push
push
pushl
push
lods
push
lods
add
push
push
push
mov
call
pop
add
mov
lods
push
lods
push
lods
push
lods
push
xor
mov
rep
mov
lods
mov
lods
mov
add
lods
mov
rep
dec
jne
pop
pop
pop
pop
test
je
push
mov
inc
sub
cmp
ja
mov
cmp
jne
xor
bswap
add
sub
stos
loop
push
lods
test
je
mov
add
push
call
mov
lods
test
jne
lods
test
je
sub
lods
test
jne
sub
push
push
call
stos
jmp
and
push
push
call
stos
jmp
pop
pop
lea
xor
lods
test
je
cmp
ja
add
add
jmp
and
shl
lods
test
jne
lods
jmp
ret
add
fimuls
jbe
xchg
cltd
cmc
jbe
cltd
or
insl
inc
and
jg
pop
jle
jo
xchg
dec
push
movsb
shlb
mov
gs
insl
add
gs
in
jg
fxch
sub
jns
mov
imull
cmpsl
addr16
test
sub
sbb
adcb
cmp
nop
aaa
inc
xchg
adc
cmp
mov
xchg
rcrb
out
in
ja
js
xor
mov
out
incb
cs
test
dec
or
mulb
idiv
sub
into
dec
pop
mov
negl
or
nop
movsb
rcrl
imul
lahf
clc
daa
fsubs
ja
mov
cmp
xor
test
inc
lods
dec
testl
mov
js
iret
push
movsb
jge,pn
mulb
adc
imul
lea
sub
mov
push
mov
adc
pusha
inc
or
pop
mov
out
add
fdivrs
and
fwait
stc
popa
mov
mov
movsb
pusha
jg
les
scas
test
pushf
movsb
push
insb
in
dec
arpl
adc
loope
xor
test
mov
mov
xchg
shl
mov
cmp
das
lahf
lock
cltd
add
dec
pop
gs
add
in
call
sti
negb
loope
xchg
cli
movsl
popf
mov
inc
es
cmpsl
outsl
mov
sbb
in
xchg
dec
jg
testl
add
push
xor
dec
cmp
imul
cmpsl
outsl
cmp
and
push
stos
adcb
shll
lock
std
fnsave
ss
ljmp
cli
add
inc
fcmovne
test
push
inc
out
roll
outsb
outsb
mov
or
mov
mov
push
fwait
sbb
fsubrl
push
pop
dec
and
stos
jl
pushw
cmpsl
xchg
pop
cmpsb
in
cmpsl
cmp
fdivr
sub
sbb
popf
sub
repz
adc
shl
dec
repz
fimull
bound
gs
int
shll
cmp
ss
push
daa
fcmovnbe
jg
adc
cmp
adc
or
pop
dec
int3
popa
xor
ss
and
or
cmp
scas
cwtl
cmp
pop
out
out
adc
ret
xchg
or
push
mov
add
cmpsl
or
fstpt
insb
rcll
jecxz
out
push
push
add
inc
pop
lods
pusha
push
or
je
test
mov
mov
enter
adc
ja
dec
mov
xor
mov
sbb
xor
push
hlt
push
mulb
xor
pushf
xchg
pushw
mov
daa
and
jno
stos
and
inc
fiadds
or
inc
mov
mov
inc
test
push
nop
adc
cwtl
pop
stos
adcb
imul
pop
aad
pusha
push
in
push
dec
adc
imul
test
and
jmp
xchg
or
ret
stos
std
jne
aam
dec
outsl
jl
repz
sbb
add
fsubr
pop
adc
adc
inc
adc
and
pop
jnp
cmc
mov
ret
add
push
fistl
xlat
pop
push
adc
ja
iret
sub
aas
jl
adc
push
into
outsl
lcall
dec
mov
or
cmp
aad
adcb
out
xchg
gs
inc
and
je
icebp
xchg
mov
scas
movsl
cmc
dec
jnp
mulb
mov
movsl
jns
inc
test
int
arpl
mov
test
movsb
loopne
and
sti
fs
fnstsw
mov
xor
add
cmc
push
adc
pop
jle
or
subl
loope
rcr
cmpb
sti
ss
and
setne
scas
int
xchg
outsb
sub
mov
nop
jp
mov
cmp
pusha
shl
mov
xorl
repnz
sbb
mov
dec
sub
int3
aad
xor
jmp
imul
push
adcl
dec
mov
cmp
inc
push
or
jno
sub
nop
les
loopne
aas
pusha
lods
pop
mov
gs
lods
andl
sub
or
js
stc
mov
sub
es
or
je
loop
pop
roll
inc
cmpsb
cld
xchg
test
in
pop
sbbb
inc
stos
shlb
add
jno
cmp
mov
aaa
popa
xor
push
cmp
sbb
inc
pop
sub
inc
setbe
pop
enter
dec
jae
test
jp
call
jecxz
adc
ret
xor
das
ret
mov
fiaddl
xchg
clc
loopne
inc
add
les
sahf
xadd
sbb
repnz
hlt
je
dec
sub
xor
jo
idivb
mov
sub
paddusb
or
test
cmp
fidivrl
xchg
popf
cli
jnp
xchg
aas
and
std
sub
inc
push
mov
pop
mov
adc
hlt
int
aaa
arpl
fwait
mov
inc
jp
pop
cltd
adc
add
enter
cs
stos
xlat
mov
adc
pop
les
pushf
jbe
sbb
xor
cmp
pop
push
xchg
rcll
popa
mov
aad
and
into
lods
ja
sbb
inc
sbb
movsb
test
and
fs
or
stc
lods
jp
inc
mov
dec
jg
stos
mov
in
or
dec
or
jecxz
mov
insl
loope
mov
test
movsl
scas
dec
mov
mov
xchg
lock
mov
and
inc
lret
or
jo
dec
adc
xor
or
mov
adc
sahf
adc
mov
cmp
addr16
fmull
xor
or
mov
lahf
aas
fwait
loopne
or
adc
enter
popa
aas
adc
sbb
dec
aad
stos
stc
int3
ds
arpl
stc
and
jae
testb
mov
mov
fisttpll
stc
inc
nop
or
xlat
hlt
jg
lds
into
cmpsl
xchg
fadds
nop
fstpt
dec
cltd
out
jecxz
ret
mov
xchg
mov
mov
mov
in
add
cmp
stos
pop
xor
orl
or
test
mov
mov
mov
mov
mov
jbe
mov
scas
loope
mov
rcll
push
jg
xchg
xchg
cwtl
scas
addr16
jno
jp
movsb
pop
pop
in
decb
and
pop
cmpsl
into
imul
jb
fdivrl
mov
jno
sbbb
fnstsw
call
insb
mov
aas
adc
mov
xor
and
xchg
fisttpl
andl
and
and
ds
loop
cmp
or
sti
mov
jmp
mov
loope
popf
inc
dec
jge
or
adc
pop
stc
push
inc
cmpl
repnz
pop
and
jbe
lods
insl
hlt
dec
jne
push
movsb
mov
mov
insl
outsb
loope
push
imul
leave
adc
or
enter
stos
pop
shrb
gs
fbld
add
cltd
dec
stos
cmpsb
sbbl
xchg
mov
in
mov
es
xchg
xchg
test
and
leave
int3
dec
stos
aas
inc
ljmp
insl
loope
push
jae
cmpsl
xchg
cmpsb
lahf
imul
fldl
shlb
lahf
call
adc
mov
dec
push
jg
adc
and
lock
shrl
sub
jg
rol
sahf
push
leave
xchg
rcrl
movsb
fs
push
ret
push
popa
pop
adc
scas
mov
pop
sbb
mov
dec
stos
movl
cs
in
xor
cltd
fstpt
xor
inc
daa
stc
loopne
add
sub
dec
jns
rolb
test
das
insl
push
addr16
repz
pop
mov
orl
lock
bound
mov
cwtl
fldcw
add
iret
cmp
out
mov
scas
aaa
inc
int3
pop
add
subl
and
nop
popa
idivb
in
xchg
sarl
cmp
mov
orl
aas
push
dec
sub
aad
gs
pop
push
stos
gs
faddl
cli
popa
ljmp
bound
ret
subl
mov
and
adc
test
mov
sbb
enter
shrb
rcll
iret
xchg
xchg
int
mov
pop
and
shll
in
jb
cmp
jle
fmuls
dec
pop
lock
aas
test
xor
scas
imul
and
test
data16
jecxz
orb
sub
mov
mov
in
xchg
xor
xchg
mov
add
scas
add
mov
mov
mov
aad
inc
dec
mov
mov
cmp
dec
xchg
ja
adc
ficoms
add
and
rorl
mov
cmp
pop
push
mov
mov
bound
ficompl
dec
mov
or
call
cli
pop
test
scas
mov
movsl
inc
pop
outsl
ret
data16
std
outsl
sbb
mov
icebp
xor
mov
arpl
pop
jp
jmp
sub
cltd
or
iret
stos
aad
fildl
mov
xchg
sub
mov
sbb
inc
pop
xchg
pop
sbb
mov
in
pop
aaa
dec
sti
jno
sbb
add
les
out
add
inc
rolb
test
aaa
and
push
inc
enter
xor
icebp
cmp
imull
push
xchg
insl
je
lret
ljmp
push
and
enter
ret
inc
inc
mov
das
mov
cmp
in
pop
sbb
mov
mov
aad
mov
dec
loopne
xor
std
rol
or
int3
leave
and
pop
rolb
inc
pop
nop
cwtl
inc
push
jae
in
adc
add
repz
lock
inc
mov
stc
insl
aam
xor
sub
mov
pop
cmp
dec
in
push
in
mov
out
dec
push
mov
mov
iret
sub
jmp
jbe
cs
jmp
pop
dec
js
sbb
and
cld
clc
mov
or
xor
or
mov
loop
ja
xor
repnz
push
sbb
lea
adc
aad
pop
in
clc
out
pop
ja
in
popf
aam
rol
pop
insl
mov
xchg
adc
adc
cmp
pop
add
xor
adc
ds
mov
test
sub
lcall
xlat
mov
fsubrs
or
push
sar
mov
in
push
flds
into
insb
cs
cs
roll
inc
mov
rolb
dec
and
mov
push
cmpl
out
stos
daa
fdivs
jp
add
and
mov
shl
add
imul
mov
pop
lea
aad
negb
not
and
rorb
loop
sub
xorl
mov
push
jge
sub
xchg
inc
imul
inc
cmp
cmpsl
mov
in
lea
es
mov
mov
jp
jmp
inc
inc
movsb
adc
ret
shl
aas
mov
in
push
mov
sbb
xor
cmp
pop
push
pop
xchg
mov
fptan
xchg
jmp
loop
lahf
ficoms
divl
cld
bound
xor
shll
mov
call
push
xor
ds
xor
adc
adc
outsl
int3
mov
add
dec
or
aaa
fbld
hlt
sub
loopne
xchg
push
cmp
mov
mov
jbe
jae
sahf
xor
pop
cwtl
fisttps
cwtl
stos
inc
mov
aam
mov
inc
test
dec
cwtl
push
fistps
test
xor
cmpsl
mov
xchg
mov
add
sub
les
push
mov
inc
sub
jo
outsb
cmp
dec
les
loope
sub
lods
inc
add
push
test
sub
xchg
add
cmc
bound
call
in
fwait
add
aaa
lahf
add
cmp
push
adc
je
adc
test
xor
jp
mov
das
inc
cmp
rorb
sahf
inc
or
arpl
jne
jl
sub
xor
jo
icebp
in
loopne
xchg
loopne
fidivl
addr16
push
cmp
xchg
xchg
rcrl
stos
repnz
lcall
jmp
jne
mov
xor
mov
fsubs
nop
test
xchg
iret
in
cmc
jns
jne
aas
and
jle
je
jns
xor
sub
out
shrl
inc
mov
jge
adc
std
adc
and
in
or
add
mov
sub
call
call
and
add
mov
call
jno
adc
cs
addr16
sub
loop
dec
jbe
shll
push
xor
out
mov
fdivrl
sub
inc
daa
inc
aad
push
aam
add
xchg
push
push
lods
add
push
xchg
xor
sbb
stos
imul
inc
imul
jmp
inc
lcall
jo
sub
into
out
rorb
inc
jmp
mov
pop
aam
in
sahf
cmp
decl
fs
mov
cld
mov
aas
sub
jae
and
dec
xor
pop
sub
ja
ja
inc
movb
jg
aad
mov
cmp
pushf
and
loop
cs
mov
mov
iret
cmc
mov
leave
lock
iret
sbb
mov
lcall
test
mov
pop
cmpps
mov
movsb
push
xor
dec
dec
popa
sti
add
into
filds
xor
sbb
sub
mov
xchg
subl
pop
outsl
jle
popf
insb
and
pop
in
imul
sbb
sbb
inc
mov
incb
stos
or
or
push
in
sub
fisubrl
loope
cli
push
rcr
mov
icebp
mov
imul
hlt
sbb
inc
adc
incl
or
aad
hlt
out
mov
or
ss
jb
mov
mov
fwait
scas
movsl
pusha
rcll
addr16
imul
and
clc
xor
sahf
test
loope
hlt
dec
add
or
adc
jge
nop
push
cmc
or
cmp
movsl
je
int3
adc
int3
mov
or
and
add
and
sbb
or
ds
scas
cwtl
mov
xchg
add
in
jbe
ss
fwait
lods
js
adc
enter
xor
pop
inc
popa
push
jo
mov
mov
cli
in
loopne
and
rol
xchg
mov
mov
and
inc
test
pop
jge
fsubrp
insl
xchg
subps
data16
push
mov
shl
ss
push
push
jo
push
popa
dec
aad
mov
and
pusha
jg
sti
or
test
sub
sbb
mov
std
hlt
xor
cli
subb
out
fscale
or
dec
mov
pop
or
pop
lods
pop
jl
into
mov
mov
or
cwtl
mov
xchg
lcall
loope
insb
pop
push
shl
adc
or
xor
daa
aad
sub
mov
aad
mov
mov
inc
pop
cwtl
sub
mov
bound
xlat
mov
aam
and
jae
jae
movsb
rolb
divb
gs
mov
out
xor
mov
fisubrs
outsb
sub
xor
js
cmp
lods
xorb
sbb
mov
pop
push
notb
jle
mov
stc
mov
jo
xchg
cmp
sbb
sti
adc
and
pop
aaa
dec
sbb
outsb
adc
and
fs
push
pusha
or
jne
mov
scas
mov
xor
arpl
fldpi
cli
jmp
jns
cwtl
sbb
in
jbe
lock
and
and
in
imul
adc
inc
inc
imul
sub
mov
and
mov
addr16
push
test
jmp
inc
mov
int
sub
push
mov
mov
xchg
outsl
pop
sub
pop
or
cmc
push
rorl
out
pop
mov
sbb
cmpsl
mov
push
jecxz
hlt
cli
js
push
mov
mov
push
dec
insl
clc
lcall
or
addr16
ret
sbb
fwait
leave
sbb
pop
scas
insl
test
lcall
push
mov
push
push
push
int3
push
inc
loopne
inc
mov
stos
mov
lea
test
xchg
push
loope
jmp
jl
xor
xchg
lret
loop
xlat
xchg
rclb
or
and
sbb
mov
je
mov
cmp
jae
pop
or
lret
cmpb
jno
and
ja
outsb
scas
add
pusha
mov
lods
out
aaa
cltd
adc
add
outsb
icebp
movsb
jle
push
lcall
xchg
aas
test
popa
rolb
bound
ret
leave
fnsave
sarl
lretw
push
aam
insl
xor
imulb
inc
int3
push
mov
lods
dec
pop
fnstenv
xchg
ss
stc
jg
lods
mov
dec
or
nop
mov
mov
repz
les
mov
mov
xor
fisubs
cmp
icebp
into
add
aaa
push
dec
jle
cltd
jle
cwtl
xor
mov
inc
cmpsb
cmpsb
sahf
data16
mov
ds
movsl
orl
xlat
push
mov
or
jne
pop
cli
outsb
cltd
jnp
jge
push
or
out
add
icebp
mov
lahf
push
jl
dec
out
adc
or
mov
sub
call
sarl
sub
pop
mov
lret
movsl
add
and
or
loop
clc
cmc
ljmp
sbb
into
cmp
lods
adc
cmp
js
aas
sub
lea
imul
sti
push
push
andl
icebp
cmp
dec
stc
ds
in
and
test
push
push
jecxz
and
sub
jno
cwtl
xchg
jbe
fisubs
aas
ficoml
pop
out
push
pop
sbb
inc
adc
xorb
shlb
ja
xchg
push
rcll
ret
cmp
pop
jg
or
lret
xchg
lea
add
xchg
adc
or
aas
sub
xlat
push
mov
lods
js
vmwrite
pop
push
andl
mov
mov
stos
jnp
lret
lcall
push
mov
xchg
orb
jne
adc
rcl
jno
push
sub
cmpsl
out
orl
sti
enter
push
nop
cmpsl
repz
mov
pop
ss
fsts
clc
or
adc
mov
mov
arpl
idiv
mov
inc
mov
mov
pop
cmc
push
inc
insb
fcmovu
push
popf
faddl
ja
ret
lret
rolb
movl
xchg
jmp
sub
lcall
in
push
ret
std
hlt
xchg
mov
xchg
dec
lret
xor
in
das
pushf
mulb
inc
adc
cltd
xlat
and
jl
pop
pop
int
jbe
sub
fldpi
cmp
and
jg
add
pushf
test
loopne
inc
pop
jge
fcoms
jl
sub
aas
mov
stos
in
push
inc
mov
lds
mov
lods
and
mov
xlat
push
add
clc
push
jno
inc
enter
push
in
mov
lcall
push
adc
shufps
repz
or
out
shlw
out
in
bound
cmpl
push
aad
outsl
push
push
push
mov
imul
test
enter
dec
xor
ret
pop
js
into
inc
popa
out
mov
inc
fstps
call
fildll
pop
stc
fldcw
cli
outsb
cli
cmpsl
cmp
push
pop
mov
fiadds
jae
dec
mov
stos
enter
lds
adc
insb
push
daa
xlat
xor
xchg
mov
in
into
mov
rcl
push
pop
lcall
xchg
mov
pushf
in
mov
outsl
xchg
cli
or
fcoms
das
mov
jno
lcall
sahf
fwait
stos
mov
mov
popf
push
jmp
andl
test
dec
jge
or
pop
cmpsb
push
jno
dec
adc
or
mov
mov
cld
enter
ret
add
dec
push
cmp
add
xor
inc
cmp
sub
gs
add
xchg
mov
in
hlt
jns
adc
xchg
mov
stc
mov
mov
stc
aaa
aam
xor
sbb
xchg
movsb
test
cmp
push
inc
cltd
inc
sub
outsb
sbb
xlat
inc
les
mov
mov
mov
aad
jno
shll
xchg
fstpt
inc
mov
sub
repnz
push
pop
es
call
inc
inc
push
cmp
cld
subl
shlb
adc
pop
ret
adc
and
jl
fucom
and
xlat
push
jo
jbe
lahf
cli
add
jae
pop
add
mov
adc
lods
xchg
lcall
roll
loopne
test
jo
xchg
pop
clc
jge
mov
lret
rcr
loope
sbb
or
outsb
xlat
dec
cmpsl
shr
pop
mov
ret
dec
pusha
cmp
movsl
bnd
jl
push
jmp
out
pushf
jp
data16
cmc
jmp
push
jne
xor
cmc
ffree
jle
pusha
mov
push
scas
lds
lret
jnp
mov
imul
mov
push
popf
fsts
fnsave
pushf
mov
mov
cmpsl
jo
fstpl
paddsb
rorb
mov
xor
stc
loope
out
mov
sbb
xchg
add
jo
lods
lds
fs
sbb
out
std
lcall
inc
lret
hlt
fwait
out
cmpsb
xchg
mov
movsb
arpl
cwtl
stc
jge
inc
stos
mov
or
loop
enter
jge
dec
das
ja
jo
mov
add
outsl
ret
pop
push
repnz
push
popa
inc
mov
dec
xor
das
fiadds
test
push
add
stos
shrl
aas
insb
jmp
imul
hlt
mov
cmovl
testb
mov
xchg
stos
or
in
enter
lods
roll
jg
jnp
fsubp
jle
mov
out
loop
scas
mov
sbb
test
in
orl
dec
pushf
scas
fistps
in
xlat
js
xchg
insl
daa
jmp
aam
dec
pop
subb
jae
faddp
lahf
js
mov
sbbl
push
or
in
cmp
mov
fs
stos
or
test
or
pop
adc
prefetcht2
lahf
sbb
flds
inc
lahf
sahf
aaa
jge
jns
aad
jns
sbb
popa
int3
or
int3
insl
out
cmp
pop
ljmp
iret
cld
or
es
fdivl
out
mov
inc
shr
push
popf
dec
int3
jns
and
pop
xchg
mov
in
arpl
xor
popf
repz
hlt
lods
adc
jmp
testl
outsb
pusha
js
cmp
ret
mov
outsb
repz
sub
cmp
sub
faddl
pop
loop
cld
mov
and
std
cmp
pop
fwait
loope
xor
dec
dec
frstor
test
mov
lods
pmulhw
mov
pop
je
clc
cmpsl
mov
mov
mov
lock
pushf
xchg
fs
aad
mov
inc
push
gs
ret
repz
fmull
pop
gs
loopne
push
es
xchg
aas
mov
and
nop
xchg
push
fimuls
sbb
popa
aad
mov
pop
inc
fists
mov
jbe
mov
adcl
mov
mov
cmp
rol
in
xlat
js
out
aad
mov
in
rol
shll
ljmp
leave
ja
and
shrb
stc
shl
xchg
fcmovnu
cs
add
and
lods
inc
stc
mov
xorl
cmp
test
popa
int
jl
adc
jnp
lret
fs
xorb
add
aaa
ljmp
pop
std
and
scas
mov
sub
clc
adc
es
daa
jbe
into
notl
mov
inc
xchg
push
mov
cli
pop
movsl
cld
loop
pop
jecxz
inc
adc
cmp
or
pop
adc
jmp
insb
mov
dec
and
loopne
not
pop
in
jl
bound
mov
jae
inc
jb
cmp
movups
pop
sbb
std
pop
outsl
xor
dec
mov
inc
jecxz
mov
sub
adc
imull
loopne
stos
ljmp
mov
push
pop
lahf
pop
mov
adc
outsl
es
pusha
add
ds
inc
addb
fstpl
call
push
in
and
push
and
sti
xor
xchg
in
jecxz
cmp
xor
add
xchg
stc
mov
mov
add
out
movb
test
sahf
xor
cmpsl
ret
jb
add
fidivl
test
pop
add
add
dec
rcl
sahf
lret
mov
sub
pushf
push
cmp
subb
stc
sub
mov
je
enter
adc
dec
mov
data16
hlt
insl
mov
xchg
fnsave
out
sahf
loope
pop
push
mov
fbld
push
cmp
lcall
jb
adc
push
lahf
int
or
fsubs
pop
aad
cs
and
mov
setbe
outsb
push
inc
es
or
je
pop
push
arpl
outsl
mov
sbb
lock
out
mov
pop
iret
jb
popa
out
into
in
neg
cltd
fadd
add
dec
imul
xchg
adc
out
bound
lock
jmp
daa
sbb
push
ja
mov
xor
lods
or
addb
fnstcw
fbld
js
aaa
or
add
dec
mov
mov
lahf
adc
in
xor
leave
xor
sarl
pop
mov
subb
adc
xchg
outsb
clc
repnz
cmpsl
jne
jns
xchg
shlb
mov
dec
movsl
mov
andb
insw
lea
roll
mov
or
stos
test
icebp
add
jp,pt
mov
ret
sti
pop
and
mov
scas
es
sub
push
rcr
popa
push
arpl
lahf
jo
jne
adc
dec
outsb
cltd
imul
loopne
mov
outsb
test
jno
call
rorb
loop
leave
stos
xor
mov
dec
ljmp
in
mov
pop
cmp
dec
stos
dec
jb
jle
push
lcall
adc
dec
orl
xlat
xchg
cmpsb
push
movsl
cwtl
or
outsl
pop
cmp
cmp
in
cli
push
add
imull
lret
jo
lret
xor
int3
inc
mov
test
loopne
and
rcrb
and
adc
adc
fcompl
dec
out
out
pop
and
mov
jmp
cmp
inc
mov
inc
sub
test
jns
fs
sbb
nop
notb
mov
data16
push
mov
pop
pushf
adc
mov
add
inc
scas
adc
push
cltd
cmc
inc
std
fidivrs
push
fistpl
mov
ds
or
lods
in
pop
and
push
cli
aaa
mov
hlt
lcall
pushf
cmp
lcall
pop
cmpsb
or
mov
add
pushl
dec
push
leave
add
cmp
lock
mov
pop
sbb
or
jge
pop
jnp
cwtl
mov
xor
sti
decl
stos
mov
lea
gs
aaa
les
aad
sahf
hlt
jp
mov
mov
mov
in
std
outsb
clc
in
mov
fadds
mov
or
sti
cmp
jmp
inc
cmp
adc
cmp
mov
xchg
fs
and
and
loopne
data16
pop
in
mov
je
shrl
xchg
int
cld
adc
adc
and
clc
outsl
sbb
stos
push
jns
ds
adc
mov
lahf
int3
mov
dec
sbb
clc
jmp
xor
shr
lret
fsub
aam
rcrb
jae
int3
pop
jmp
gs
sub
mov
mov
mov
mov
adc
sub
mov
push
sti
push
rcrl
loopne
mov
inc
jl
and
mov
mov
fwait
nop
clc
nop
add
push
or
xchg
jns
sbb
stc
out
repz
fcoms
loopne
orl
fwait
mov
dec
out
jb
and
lock
xchg
lods
cltd
movsl
paddb
push
test
jnp
adc
mov
dec
inc
fcmovbe
and
iret
in
mov
into
lock
and
dec
adc
pop
add
xor
aad
rorl
repnz
aad
pop
das
mov
subb
in
adc
addr16
jmp
push
movsl
sub
sbb
sub
inc
inc
pop
and
or
out
fisttpll
and
nop
pushf
dec
aas
mov
or
pop
aad
add
loop
rclb
xchg
sub
call
dec
out
xorl
bound
cmp
sarl
push
or
or
mov
shlb
out
cmp
lret
scas
or
jmp
xchg
cmp
rol
xchg
cmc
in
ret
pop
aam
mov
add
stos
add
loope
mov
dec
insb
push
das
adc
cmp
adc
and
cmp
and
push
in
inc
cltd
dec
jmp
lods
out
cmpsb
sti
push
sbb
orb
xchg
cmp
outsl
mov
jnp
test
dec
fisubrl
push
popf
mov
or
adc
imul
fildl
insb
xor
mov
andl
cltd
gs
call
les
jg
outsl
scas
lds
push
lret
jcxz
mov
sti
enter
mov
mull
stc
stos
pop
inc
cmpsl
ss
clc
pop
cmp
pop
pop
push
adc
ret
and
inc
and
mov
addb
add
test
push
fwait
mov
sbb
inc
mov
sub
notb
inc
aad
movsb
mov
sub
cmp
xor
xchg
xor
xchg
data16
clc
push
jge
sbb
gs
clc
and
push
imul
pop
scas
stos
aaa
inc
xchg
andl
pop
jmp
aam
xor
loope
push
ss
jne
cmp
xchg
push
xchg
shrl
push
aaa
repnz
cmpb
inc
icebp
lods
inc
ljmp
dec
out
mov
jge
cmp
and
data16
xchg
sub
mov
fdivrs
xor
inc
push
push
aad
push
aas
xchg
xchg
jle
iret
sbb
popa
add
inc
sub
pop
mov
dec
mov
jmp
xor
call
in
das
leave
std
scas
andb
nop
fsubr
outsl
fisubrs
cmc
fmuls
in
cmp
fstl
repnz
negl
aaa
pop
xchg
dec
scas
push
dec
jge
cmp
xchg
sub
pusha
xor
movsb
dec
and
dec
push
in
int
or
nop
xchg
nop
fisttps
lock
outsb
ret
cmc
fs
out
inc
stos
pop
mov
pushl
cld
es
ret
and
mov
inc
sbb
call
inc
in
rcl
adc
fucomip
add
pop
and
fwait
or
pop
jecxz
ror
dec
jb
in
push
lock
cmp
and
sbb
out
mov
cmp
rol
cmc
outsb
lret
std
lea
scas
scas
push
dec
ror
xor
mov
stos
mov
popl
fs
and
xchg
adc
sub
in
mov
ja
inc
dec
fnsave
int
jbe
and
shl
jmp
mov
mov
imul
fadd
not
lods
insb
popf
sub
repz
pop
jmp
cmp
sbb
test
mov
enter
in
jbe
incl
xchg
xchg
sub
adc
adc
inc
scas
popa
sub
movsb
ret
pop
jmp
pop
std
cmp
pop
jle
push
xor
scas
sbb
xchg
stos
movsl
sbb
adc
mov
scas
adc
insl
or
fisttps
lahf
jmp
xchg
stos
lock
mov
inc
movsb
jnp
bswap
cmpb
out
inc
xchg
out
inc
sarl
dec
sbbl
jmp
subb
mov
and
xchg
pushw
sbb
iret
out
test
pop
cmp
inc
cmp
call
mov
mov
inc
ja
mov
adcl
xchg
mov
xchg
jl
fsubs
xchg
xor
xor
fwait
jae
into
xor
lods
mov
mov
call
cmp
negb
inc
out
decl
scas
xor
cmp
test
push
call
pop
bound
fdiv
inc
js
cmpsl
jge
push
xchg
inc
cmp
in
mov
adc
lock
call
push
scas
frstor
out
aas
xor
decb
nop
mov
roll
jg
loop
repnz
sti
add
bound
stc
jecxz
xor
inc
mov
xchg
add
pushf
cmp
mov
popa
adc
cmp
aad
jns
dec
nop
dec
xchg
push
mov
inc
insl
jge
sbb
pop
lea
mov
mov
xchg
mov
mov
loop
push
insl
xchg
rorb
add
leave
mov
scas
es
add
stc
dec
data16
in
je
jbe
fsub
xchg
inc
aas
aam
inc
out
add
cs
pop
cltd
mov
or
mov
and
out
sub
and
imul
es
mov
jb
mov
or
sbb
and
jmp
stc
adc
aad
cli
ljmp
mov
or
bound
mov
push
add
mov
flds
testb
lea
cmp
cwtl
pop
push
sbb
mov
jle
leave
xor
or
xchg
mov
orb
mov
cli
sbb
outsl
sub
shlb
roll
and
dec
mov
aam
mov
into
cmp
lods
fnstcw
cmpsl
mov
sub
cmp
popf
xchg
call
clc
sub
movsb
dec
popa
je
insb
fwait
scas
bound
ss
or
mov
push
jecxz
mov
and
insl
dec
movsb
xor
cmpsl
pop
jge
dec
cmp
dec
add
cwtl
daa
dec
mov
icebp
out
adcb
insl
mov
inc
sub
shrb
push
pop
jle
ret
pop
sub
jo
inc
cli
jno
mov
iret
aas
rcl
xchg
fidivs
xchg
aaa
sub
adc
bound
mov
jne
dec
dec
jo
xchg
mov
add
xor
cmp
cmp
xor
push
dec
push
sub
and
xlat
mov
aam
icebp
and
and
push
sahf
stc
sbb
or
adc
in
mov
or
stos
dec
std
daa
mov
ret
jno
or
sti
and
pushf
sub
popa
shll
mov
mov
scas
xor
xchg
jge
dec
imul
je
mov
and
push
fnstenv
clc
lret
cli
mov
sbb
int3
inc
push
pop
push
dec
iret
mov
aas
mov
stos
jp
xchg
fs
sbb
jne
cmp
aas
mov
add
add
sbb
xchg
inc
mov
inc
inc
dec
fidivrs
inc
xchg
loopne
dec
test
push
pop
jo
xchg
shl
outsb
and
mov
rol
imul
cmp
decb
movsb
xchg
idiv
xor
sub
pop
add
popa
out
xchg
push
addr16
sti
and
jg
sbb
sbb
int3
mov
pop
jle
pop
push
sbb
leave
movsl
cltd
or
jle
into
icebp
imul
cmp
leave
push
mov
pop
fidivl
pop
or
inc
into
loope
lcall
adc
cmpsb
or
pop
popa
loop
js
push
divl
cmpsb
cmp
mov
xchg
test
aad
into
mov
xchg
insb
mov
mov
xchg
dec
iret
lods
lcall
movsb
jge
mov
ret
mov
mov
or
add
xor
out
ja
lret
inc
jnp
cmp
pop
loope
in
flds
jne
push
dec
mov
add
ja
push
cwtl
loop
inc
mov
pop
xchg
mov
sti
xor
lea
lea
pop
and
inc
lret
fidivrs
jb
fisubl
dec
mov
lock
icebp
fnstsw
les
xor
arpl
push
call
mov
dec
add
dec
inc
test
lret
xor
loope
cmp
mov
pusha
pop
cld
lret
mov
sbbl
and
divl
sbb
pop
mov
cmp
outsb
cmp
sub
scas
int
imul
pop
lcall
es
in
imul
lock
jae
addr16
clc
and
mov
xor
push
sub
pop
mov
xlat
sub
xor
sbb
xchg
into
xchg
fsts
or
in
xchg
test
xchg
sbb
mov
and
test
mov
jb
sub
rcrl
cmp
and
pop
xchg
dec
or
call
outsb
xor
or
pop
mov
fldenv
jmp
cmpsl
stos
bnd
cmp
and
mov
or
cld
fwait
dec
adc
arpl
addr16
into
into
adc
lahf
and
imul
imul
push
mov
mov
xorb
cltd
call
lcall
ficompl
leave
mov
repnz
pop
add
add
fiadds
cld
insb
rorl
gs
mov
call
mov
sbb
push
int3
lock
cwtl
gs
pop
mov
jo
sub
add
in
and
or
fldcw
imul
into
xor
mov
es
cltd
fdivl
mov
inc
jns
fisubl
in
into
movsl
cld
ret
jge
sbb
nop
imul
push
dec
aas
adc
adc
pop
adc
and
and
movsb
push
fmuls
mov
out
mov
mov
and
push
dec
sub
enter
lods
aam
ret
dec
push
sub
outsl
sub
iret
cmpsl
dec
inc
call
loopne
pop
jbe
mov
dec
daa
mov
xor
sahf
repz
enter
push
mov
pop
xchg
dec
pop
push
loope
fs
jl
dec
push
mov
mov
jle
fnsave
aas
push
pop
clc
fcoml
add
pop
mov
mov
sub
hlt
xchg
cmc
xor
sbb
pop
xor
inc
lods
cmp
or
inc
fadd
mov
dec
xchg
mov
adc
add
xor
push
out
mov
push
lock
inc
out
mov
push
out
shrb
jp
sahf
mov
fxch
and
inc
dec
inc
insl
pop
stos
push
subb
orb
pop
pop
sub
lock
add
fiadds
pop
mov
inc
lea
vpextrw
lds
cmp
icebp
fdivrl
mov
push
sbb
int3
xchg
movsl
dec
xchg
pop
outsl
or
call
and
sbb
hlt
pop
and
adc
xchg
daa
and
push
sbb
and
sbb
dec
mov
sub
andl
test
push
mov
sbb
cmp
pop
dec
nop
push
sub
pushf
cmp
outsb
adc
add
dec
fs
xchg
cmp
jae
inc
push
jno
lods
pop
dec
sbb
scas
cmp
lds
inc
int
cwtl
gs
loop
xor
movsb
movsb
fcmovu
mov
sahf
clc
xchg
cmp
std
adc
or
leave
mov
sub
ja
daa
shll
test
push
scas
or
or
out
call
sub
xor
jns
jmp
outsl
std
mov
adc
sbb
cmpsb
jnp
lcall
dec
aaa
and
dec
mov
jp
push
and
mov
pop
and
ds
sub
jle
fstl
xor
mov
test
adc
xor
insb
das
cwtl
clc
cmp
adc
dec
enter
cli
in
mov
shrb
mov
cmpsl
push
jo
lock
mov
int3
cs
xor
fistl
or
aas
push
clc
xor
les
mov
orb
in
or
frstor
or
fcmovnu
adcb
in
mov
xor
cmp
out
xchg
into
xlat
dec
popf
push
test
je
cltd
in
mov
test
lock
int
in
add
pop
mov
dec
sbb
and
stc
or
xchg
arpl
fstp
in
push
push
js
xchg
add
js
movsl
push
das
sahf
jae
iret
fs
fcomp
scas
mov
mov
mov
cli
mov
cs
into
mov
in
inc
sbb
jl
adc
xchg
mov
clc
xor
jo
shlb
out
outsl
mov
mov
aad
movsb
aas
clc
mov
xor
popa
add
mov
addr16
cmp
and
mov
mov
enter
xchg
aas
pop
adc
cltd
repnz
push
jl
test
dec
lcall
sti
daa
mov
xchg
jbe
or
sahf
mov
fmuls
je
int
or
adc
jl
mov
aam
cld
into
ds
add
testl
arpl
in
nop
mov
bound
xor
cltd
mov
add
xor
subl
push
adc
push
mov
loope
shl
jb
test
add
adc
cmpsb
mov
lret
popa
imul
out
ljmp
push
arpl
rcl
push
mov
or
push
mov
xor
enter
jmp
hlt
es
orb
dec
inc
into
int
imul
mov
or
push
fadds
sub
pop
fcom
jle
xlat
int3
cmpsb
sbb
enter
lds
push
test
and
dec
xchg
mov
divb
stos
insb
xor
scas
insb
cmp
sub
outsb
lds
push
sbb
rorb
add
inc
mov
push
iret
imull
scas
inc
push
sbb
pop
subl
xorb
cmp
mov
outsb
mov
cltd
mov
and
mov
dec
mov
outsl
pop
xor
or
add
xchg
call
les
push
imul
mov
mov
xchg
mov
xor
fisubs
aas
mov
rclb
arpl
in
cmp
cmpl
rolb
adc
jae
stc
or
push
jne
lcall
adc
hlt
sub
cmpsl
add
push
pop
bound
rcrb
lcall
out
bound
sub
push
aad
iret
imul
xchg
add
push
xchg
xchg
mov
push
loop
mov
cmp
enter
jns
cmp
pop
cmp
dec
cmc
and
sbb
xlat
pusha
movsl
cs
inc
mov
addr16
das
rcll
test
out
cmp
pop
mov
cmpsb
in
sub
mov
lock
cmpb
sub
xchg
sbb
imul
scas
push
pop
pop
bound
mov
lods
das
xor
mov
mov
fs
dec
addl
sbb
dec
popa
and
sub
mov
sti
bound
iret
repz
cmp
test
mov
in
push
stos
icebp
xor
nop
ss
push
pop
jo
xchg
out
arpl
or
out
out
shrb
lret
pop
xchg
mov
imul
je
sbb
sahf
addb
jmp
jae
pop
and
cld
mov
fdivl
cmc
xchg
rcrl
aaa
inc
shll
jae
xchg
inc
push
into
sti
outsb
inc
push
mov
popa
cmp
in
sub
pop
jae
and
call
pop
sub
or
sub
pop
test
jmp
push
and
imulb
arpl
jno
lea
repnz
int
cmp
mov
iret
adc
xchg
push
or
lods
dec
fcomip
lcall
aas
lods
push
cmp
adc
xor
insl
in
inc
cmp
pop
jg
mov
loopne
insb
xor
sub
dec
outsl
mov
stos
stos
xlat
add
lahf
sub
xorb
adc
dec
loopne
in
addr16
mov
sub
out
mov
xorb
push
mov
sub
pop
and
push
cli
mov
ret
cld
pop
ljmp
cmp
movsb
jo
sub
imul
dec
push
ljmp
add
clc
imul
inc
sbb
testb
xlat
shlb
lea
mov
mov
dec
mov
dec
cmp
repz
je
and
push
sbb
femms
xor
push
push
lret
out
push
fnsave
push
mov
sbb
sub
in
icebp
or
adc
shlb
lret
inc
jl
pop
in
repz
cmp
pop
mov
sbb
insb
in
fisubs
addr16
cmp
cmp
out
and
ljmp
and
jg
sahf
adc
outsb
leave
push
pop
and
dec
lret
sbb
or
inc
sub
mov
push
mov
femms
inc
and
jns
mov
pop
popf
arpl
mov
clc
mov
movl
xchg
enter
test
stos
clc
aad
nop
adc
inc
adc
jle
icebp
pop
inc
mov
imul
jg
es
cmp
adc
or
data16
les
jb
sbb
test
or
scas
adc
pop
ljmp
mov
repz
and
mov
mov
and
mov
add
lcall
paddd
cmc
mov
ret
lret
push
mov
clc
je
sub
fidivs
movsl
popa
cmp
dec
jne
jo
sub
loop
adc
push
xchg
dec
popf
test
xor
outsl
ds
mov
roll
pop
jmp
outsl
mov
mov
out
push
mov
bound
sbb
in
rcl
mov
lods
push
fimuls
popa
loope
xorb
stc
decb
cli
mov
adc
lods
dec
mov
lret
cmc
and
aad
adc
filds
cs
cs
sbb
lahf
lcall
sbb
jecxz
fildll
jno
scas
stc
mov
mov
xchg
iret
out
popa
rolb
test
fcoms
imul
mov
xchg
and
rol
xchg
in
and
mov
add
insl
ss
xor
outsb
add
popa
fsubs
inc
and
inc
lods
cli
repz
adc
les
jnp
sbb
cld
int3
adc
fcmovb
pmulhw
loop
rcr
dec
mov
not
sub
sbbl
lock
mov
sub
xchg
push
cli
push
add
je
xlat
call
mov
shlb
nop
outsb
ret
add
sbb
ljmp
jb
std
and
movsb
mov
out
lahf
pop
hlt
jno
add
repz
ret
insb
sub
aad
ja
dec
pop
stos
in
stos
lock
jle
mov
aam
in
pop
sub
or
ds
inc
or
mov
push
push
jne
stos
test
flds
dec
js
cmp
cmp
cld
into
sub
lcall
iret
lods
mov
jp
sbb
cmpsl
mov
imul
push
out
mov
mov
outsl
or
rcl
ljmp
repnz
mov
ds
test
dec
or
jle
cmp
fmull
xchg
cwtl
inc
aas
and
orl
adc
stos
jp
ss
ljmp
mov
scas
divb
jmp
pop
or
lret
xchg
cmp
fwait
inc
cli
scas
adc
imul
sahf
sbb
insl
shl
sbb
dec
jns
fs
cmp
xor
jbe
pop
leave
movsl
mov
daa
out
shll
popf
mov
cltd
int3
in
loop
arpl
jge
pop
divb
leave
or
sub
mov
mov
popa
push
test
sbb
rclb
sub
xor
cs
insl
xchg
add
clc
jo
mov
lcall
dec
xchg
loope
out
xor
sub
ficomps
es
call
out
jae
mov
mov
push
nop
and
jecxz
rolb
sub
inc
xchg
cmp
imul
lods
push
add
jae
sar
ss
push
int
jle
mov
jb
xchg
mov
outsl
leave
sbb
insb
fmul
and
bound
jno
jg
outsl
inc
sti
cwtl
sbb
mov
ficoms
mov
gs
call
mov
cld
push
jl
mov
jne
mov
jns
insl
out
inc
out
daa
ljmp
xchg
mov
movsl
out
xlat
xchg
and
or
inc
inc
scas
sarl
pop
jmp
mov
in
imul
push
sub
lret
incb
sbb
mov
mov
or
pop
jp
sbb
mov
and
outsl
push
lcall
sbb
xorb
xor
stc
xlat
out
xor
mov
xor
repz
pop
sbb
add
jg
je
test
ljmp
push
fstl
dec
or
add
mov
test
inc
pop
cmp
fstl
push
xchg
add
mov
xchg
insl
and
cmpsb
and
inc
imul
ror
leave
or
cmp
cmovp
pop
mov
add
fwait
cmp
in
xchg
dec
es
repz
jge
stos
rclb
xchg
sahf
add
inc
jnp
pop
add
xor
sub
dec
cmp
shrb
sub
scas
xor
push
push
mov
fbld
mov
mov
in
faddp
das
mov
jno
je
rolb
std
repnz
cmpsb
les
pop
lret
clc
mov
and
pushf
in
orl
xchg
inc
xchg
and
cmc
xor
repz
orb
pop
push
xor
aas
lcall
jb
mov
dec
std
push
mov
jb
push
cmc
ret
sbb
sahf
call
mulb
lods
or
setb
push
fcompl
dec
scas
out
test
mov
es
xchg
insl
xchg
loop
popf
jae
push
inc
mov
xchg
mov
mov
das
xchg
mov
loope
ret
sub
mov
int
or
dec
paddw
repz
inc
mov
mov
add
inc
fnstenv
push
outsb
xor
inc
test
ja
gs
cld
lods
lods
ret
or
inc
mov
dec
inc
xchg
rclb
daa
movsl
test
push
insl
ret
xchg
add
pop
inc
aas
fsubs
in
cmp
jp
inc
out
stos
or
add
add
in
xchg
add
push
mov
cli
push
add
mov
stc
jb
loop
pinsrw
mov
pop
scas
in
adc
outsl
popf
adc
aaa
sbb
popa
and
pop
jg
in
jmp
pop
or
movl
sub
jnp
add
iret
or
mov
in
push
cld
cmp
xlat
stos
sarl
jle
mov
leave
imul
pop
mov
dec
jecxz
andb
jnp
iret
outsl
cmpsb
mov
test
jg
mov
addl
mov
sub
fiaddl
shr
inc
test
push
aam
jecxz
insl
jno
push
in
cld
cmp
sub
jae
jns
std
cmpsl
and
aam
sub
shrl
dec
rcrb
ds
xchg
icebp
jmp
jmp
addr16
xor
rol
loop
xchg
subl
mov
mov
push
jbe
iret
movsl
mulb
push
stos
fbstp
je
cmp
or
lahf
mov
shl
pop
scas
push
movsb
in
sarb
nop
rorb
adc
aaa
xchg
hlt
sahf
mov
into
or
or
xlat
rclb
aam
aam
or
mov
sub
fs
lea
jb
icebp
popf
push
sbb
imul
mov
stos
iret
jb
sbb
rcrb
cmp
cmp
daa
insb
add
mov
ljmp
and
cmpsl
in
cmpsb
push
dec
fcmove
dec
aas
int
andl
into
dec
stos
pop
cmp
dec
fdivs
nop
lods
xchg
loopne
data16
arpl
mov
lahf
lret
rolb
repnz
insl
push
mov
repz
cmc
mov
popf
cld
sub
leave
not
jmp
and
sbb
lea
mov
inc
add
cs
call
pop
cli
and
add
cld
loop
movsb
jp
lahf
in
mov
push
cmp
test
aas
sub
and
pushf
dec
dec
jg
xchg
push
aad
or
sbb
push
movsl
mov
and
jecxz
sti
stc
shlb
dec
ror
mov
lahf
xor
mov
aam
sar
mov
xchg
jle
and
and
pusha
xchg
dec
fnstenv
ss
shufps
mov
clc
jno
mov
aam
mov
and
andb
pop
xor
scas
fcmovb
and
call
cmp
sub
imul
imul
int
fistpll
or
pop
shrb
xor
xlat
inc
icebp
mov
es
pop
push
fldenv
sti
sbb
lods
push
std
mov
xchg
subb
adc
call
outsl
lahf
cmc
mov
cmp
jle
sub
fwait
stc
divl
push
nop
and
insb
inc
cld
test
loopne
dec
imul
cmpsb
in
push
xchg
pop
daa
sbb
in
pop
mov
lds
push
adc
cld
cmp
pop
repz
incb
scas
pop
and
jbe
mov
mov
outsl
push
pop
movsl
in
imul
inc
loope
mov
arpl
cmp
daa
inc
mov
push
cmp
sub
inc
out
lea
fwait
push
mov
popa
je
cli
shll
lea
aas
es
je
jb
lea
negb
clc
mov
out
repnz
popa
test
xchg
jg
jle
mov
mov
dec
repnz
sbb
push
nop
iret
das
orb
and
add
mov
in
stc
mov
and
dec
in
xchg
hlt
mov
jge,pt
call
ds
mov
dec
adc
or
cmp
jp
jg
rorb
lret
hlt
fcoml
jb
loope
aam
dec
jmp
imul
ret
or
ret
fsubrl
push
add
cmpsl
mov
xor
xchg
shrb
push
mov
dec
das
cmp
stos
pmaxub
test
adc
add
imul
dec
cwtl
data16
clc
add
outsb
fcomps
rol
push
pop
sbb
ret
mov
cwtl
pop
fists
fdivp
loopne
xchg
mov
mov
lds
enter
xchg
push
dec
xchg
mov
dec
cs
xlat
nop
cmp
mov
mov
addl
jecxz
jmp
out
dec
jno
mov
xchg
out
xor
inc
andb
sbb
push
sbb
mov
data16
adc
enter
sub
in
mov
lods
xor
jb
xor
pop
loope
outsb
adc
test
cs
movsl
push
jl
sahf
pop
arpl
pop
divb
xchg
ljmp
fldenv
sbbl
jmp
testb
jb
test
push
orb
lods
imull
sahf
inc
jmp
pusha
fstpl
in
imul
sub
movsl
and
and
add
add
mov
push
minps
iret
cwtl
adc
inc
dec
imul
scas
cmp
das
dec
leave
jnp
idiv
outsl
xchg
scas
cmp
sub
push
pop
pop
call
imul
or
movsb
scas
xchg
lds
enter
cwtl
scas
fcom
jns
stos
imul
push
add
mov
clc
add
jae
test
xorb
push
inc
cmp
clc
add
dec
cld
and
add
es
sahf
xchg
andb
mov
fisttpl
cmp
daa
icebp
jo
insl
mov
push
or
std
add
xor
aam
lret
mov
ja
mov
push
inc
adc
mov
in
aad
fdivr
xchg
adc
cmp
pop
xchg
lds
mov
pop
xor
mov
addb
and
cmp
or
or
fwait
ret
pop
mov
mov
test
je
jl
mov
add
div
pop
leave
mov
lcall
inc
add
inc
jbe
dec
xchg
sbb
pop
iret
xchg
mull
inc
stos
dec
adc
adc
fsubs
inc
rcll
jno
sub
cmpsb
adc
rorb
les
xchg
sub
xor
adc
insl
insb
movsb
sbb
push
jl
sbb
adc
dec
jno
dec
scas
sbbl
adc
loope
inc
dec
ficompl
pop
add
add
movsb
add
sti
mov
out
sbb
mov
pop
ljmp
shll
lock
xchg
aaa
movsb
mov
xor
jo
xchg
out
lret
mov
add
outsb
sbb
add
and
mov
or
roll
push
xchg
cmp
jae
add
out
lods
nop
mov
in
jbe
cs
fisttpll
lock
enter
sub
idivl
jne
cmp
nop
je
loope
dec
gs
pop
out
test
add
pop
aas
fwait
div
in
pop
test
dec
mov
cmp
or
push
mov
adcl
test
xchg
adc
xor
push
sub
xor
repz
outsb
xor
pop
mov
pop
jbe
jecxz
sbb
shll
es
pushf
cltd
mov
fdivl
lcall
and
cmp
adc
inc
xor
jg
push
js
mov
ss
aam
mov
lret
inc
mov
leave
cmp
loopne
loop
sbb
jle
sub
jns
loop
or
sbb
scas
mov
loopne
and
dec
dec
por
fstl
mov
mov
inc
xchg
pop
mov
mov
sbb
xor
jns
xor
adc
fldt
scas
jnp
cmp
ss
movsl
test
push
sbb
push
daa
mov
in
push
fldt
in
lahf
adc
cmp
jno
int
imul
jmp
das
sbb
cmp
add
aas
test
mov
cli
xchg
and
addb
movsl
aam
jbe
mov
pop
sub
repnz
adc
mov
mov
adc
adc
mov
fbstp
mov
ss
imul
call
push
mov
and
inc
fcoms
adc
xchg
dec
aas
sub
add
hlt
lds
xchg
dec
mov
push
scas
aas
repnz
mov
adc
pushf
jae
or
mov
push
jecxz
sti
rcr
jp
push
push
mov
cmp
pop
mov
stc
mov
aas
fildl
iret
imulb
cld
in
mov
xchg
xchg
mov
add
sub
aas
shlb
sar
cmp
push
ret
cwtl
insb
insb
pop
stos
movsb
sbb
lret
out
arpl
fisubl
mov
dec
lcall
xchg
roll
xor
push
push
imul
or
nop
stos
inc
aad
leave
mov
cmp
push
scas
imul
dec
in
leave
test
sbb
sbb
xchg
fdivr
loopne
lods
adc
jns
shll
sbb
shll
pop
shrl
shr
jp
out
add
or
lds
jge
jnp
lods
fbld
out
aam
jg
push
mov
jg
inc
cmp
jg
pop
es
jne
mov
xchg
adc
cmp
outsb
cmp
aas
jns
or
dec
das
push
es
add
loopne
clc
in
sbb
leave
into
xchg
jmp
rorb
imul
inc
mov
inc
mov
or
loope
movb
aas
stc
in
inc
lcall
inc
dec
in
imul
stc
xor
dec
push
int3
push
sub
fdivs
sub
cmp
es
enter
iret
mov
mov
outsl
dec
repnz
xchg
push
out
loopne
push
mov
jle
jbe
or
push
out
pop
or
test
sbb
sub
sti
mov
repz
push
mov
popf
mov
xchg
add
fidivl
and
movsl
push
in
mov
and
stos
inc
mov
inc
xchg
pop
neg
je
cmp
xchg
push
movsb
jecxz
adc
mov
fcmovnb
jb
out
mov
repz
dec
loope
enter
fbstp
pop
or
mov
icebp
ret
dec
push
mov
call
dec
cmp
nop
cmp
insl
jl
daa
mov
jno
imul
or
cwtl
xchg
shl
jb
xchg
pop
test
idivl
pushl
xchg
ss
stc
mov
push
popf
dec
mov
imul
xor
arpl
xchg
in
cmp
adc
js
in
int
mov
stos
mov
pushf
mov
out
xor
enter
mov
imul
call
mov
adc
and
outsb
std
lahf
aam
sahf
addr16
cwtl
jg
mov
aad
sub
dec
dec
mov
mov
pop
out
mov
lods
inc
int
sub
loopne
sbb
inc
lods
pop
test
adc
pop
lods
or
xor
test
pop
fsubrl
fadds
shl
jae
jbe
mov
je
push
or
xchg
insb
sbb
lea
jnp
fwait
das
adc
aaa
stc
xchg
loop
add
xchg
lods
test
mov
push
test
or
inc
adc
filds
inc
push
filds
incl
aad
push
cmp
jecxz
cmp
pop
xchg
inc
lods
mov
jg
lds
pop
jp
es
sub
xchg
sbb
cld
cld
pop
icebp
lea
or
sub
inc
push
inc
movsl
lods
ret
movb
hlt
sbb
stc
mov
test
mov
xchg
pop
movsb
cltd
pushf
adc
test
sbb
lods
ds
or
icebp
fwait
mov
in
xchg
jns
push
inc
mov
loope
lcall
aad
lcall
mov
jo
push
cmc
jnp
mov
daa
out
adc
jbe
xor
pusha
scas
sbb
pop
out
ljmp
jbe
shll
add
pop
add
std
sti
mov
inc
jmp
subl
aaa
xor
popa
gs
xchg
push
jl
jbe
adc
iret
add
movsl
cmp
stos
pop
nop
sub
xor
mov
pop
pop
loop
lock
mov
lahf
xchg
dec
mov
and
aam
fcmovbe
push
or
push
xchg
sub
outsb
inc
shll
sbb
movsl
int3
test
jle
push
loop
movsl
fdivrp
rorb
dec
loope
das
fstpl
push
stos
movsb
rcrl
jp
leave
call
mov
aam
je
out
sub
icebp
xor
bound
arpl
in
repz
call
out
xchg
sub
movsb
pusha
sbb
jecxz
movsb
pushf
ret
outsl
in
dec
imul
xchg
xchg
dec
cld
add
mov
xor
popa
pop
call
xchg
sub
stc
xchg
mov
push
adc
enter
xorl
scas
pushfw
xor
jbe
mov
sbb
aad
roll
mov
and
sbb
jns
lock
rcll
sub
mov
mov
sbb
xor
push
scas
std
xor
insb
push
jge
xor
cmpsl
jo
jl
int
xchg
in
test
jb
mov
push
xchg
xchg
add
xchg
lcall
dec
aas
and
shlb
out
mov
rcrl
loop
ljmp
add
cmp
pop
mov
push
cmpsb
jmp
or
insl
call
xchg
sbb
mov
mov
adc
iret
fistpl
mov
pop
xor
fwait
inc
jo
adc
sub
sbb
ret
push
movsl
out
int
imul
inc
and
cmp
sub
add
push
int3
into
les
in
pusha
sub
add
mov
lds
push
insb
ret
call
cmp
xor
mov
sub
adc
adc
movsl
scas
int
incl
scas
adc
xchg
push
pop
mov
push
popa
daa
shlb
sti
adc
add
ds
dec
aaa
testb
out
ret
push
sub
cwtl
jb
sbbb
mov
xor
ret
sbb
das
jmp
mov
lods
js
adc
lcall
imull
xor
inc
nop
stc
push
sub
lods
in
and
test
mov
js
das
inc
cmp
sbb
jne
or
and
rcr
test
jo
mov
add
push
push
mov
sub
dec
xor
inc
jp
xchg
addl
lods
jae
in
dec
stos
cltd
test
fdivrs
repz
push
repnz
sub
in
shll
fdivs
pusha
into
adc
sbb
push
lds
fildl
popf
xor
in
test
xchg
fmul
pop
imul
test
int3
int3
popa
xor
pop
add
jge
aaa
dec
cmp
dec
pop
xor
push
cmp
inc
lcall
lahf
test
mov
xchg
adc
mul
pop
testb
or
mov
ja
jl
lcall
fidivl
and
xchg
pop
lcall
outsl
ficoms
xor
adc
mov
scas
sahf
cwtl
in
addr16
cld
mov
adcb
popf
ret
xchg
stos
cwtl
test
sub
out
xor
pop
or
gs
dec
xor
push
xchg
jno
rcrl
sub
imul
sub
dec
xchg
arpl
push
jne
sbb
sbb
mov
push
dec
lods
push
sbb
jp
dec
and
test
cmp
js
roll
jmp
in
inc
lods
mov
in
mov
xchg
xchg
sub
outsl
ret
mov
push
pop
aam
pop
add
dec
es
popf
test
dec
in
sub
dec
test
sbb
sbb
lahf
jmp
adc
nop
inc
push
cmpsb
inc
ja
mov
lea
inc
jp
popf
adc
or
and
adc
pop
adc
scas
fidivs
shlb
test
cmp
inc
sti
push
fisttps
fdivl
notl
adc
add
loope
and
btsl
aam
xor
or
mov
mov
adc
adc
sbb
push
ljmp
in
sub
inc
incb
dec
cmp
add
outsl
adc
push
and
hlt
popf
mov
jmp
stc
cwtl
mov
pop
stos
jle
das
inc
stos
repz
mov
mov
fadds
lea
push
inc
mov
scas
mov
pop
divl
xor
push
pop
and
pop
nop
jp
into
jecxz
xor
popa
cld
mov
data16
mov
sub
mov
repz
push
add
data16
stos
popa
push
outsb
xchg
fld
xor
push
mov
arpl
and
out
ljmp
fisttpll
pop
shrb
mov
call
dec
loop
dec
stos
add
jne
les
insl
cmp
aas
xchg
gs
mov
sub
das
ljmp
adc
add
loope
pop
cld
mov
push
outsl
shlb
jbe
outsb
shl
mov
rcpps
push
inc
mov
rorb
add
xchg
mov
mov
cltd
jne
pop
nop
imull
stos
dec
xchg
cmp
or
xchg
imull
mov
sbb
nop
pushf
or
imul
mov
pop
pop
call
leave
out
mov
lds
cmpsl
xchg
push
xchg
sub
ror
mov
inc
lds
jno
cwtl
lock
push
es
incb
adc
pop
or
loope
mov
cs
push
fsubl
push
add
push
mov
jmp
ret
jmp
mov
jo
outsb
and
ret
push
shl
pop
test
add
call
mov
xor
mov
cmp
sarl
sub
mov
lret
xor
xchg
ljmp
add
pop
sub
cld
dec
rolb
int3
and
daa
jle
aam
dec
out
fcoml
sbb
pop
dec
cmpsl
leave
into
lock
inc
enter
mov
bound
xor
shl
push
lahf
cmp
dec
xor
iret
adc
mov
sub
popl
adc
ds
pop
push
aam
ret
das
add
push
xor
pop
addb
imul
jmp
addl
data16
movsl
out
into
pop
dec
into
sbb
mov
xor
clc
mov
out
mov
arpl
sub
pop
fnstenv
add
ds
jo
pusha
mov
add
outsl
test
ss
dec
mov
leave
adc
sbb
int
cld
stc
fmull
push
jecxz
cmpsl
enter
ljmp
mov
cmpsl
mov
cli
insb
or
aas
bswap
imul
sbb
sub
sbb
mov
inc
out
jecxz
lods
int3
add
loop
mov
sbb
dec
mov
mov
ret
jae
stc
fs
dec
icebp
xchg
aad
in
xchg
fcoms
mov
enter
inc
jbe
jb
int
or
ja
xor
stos
xchg
jae
test
or
clc
aas
pusha
sub
test
in
or
push
xor
cmp
sbb
out
outsb
loope
mull
jg
rolb
xor
icebp
addl
loop
add
movsl
lret
push
clc
jns
test
xchg
xor
test
cwtl
sbb
lods
and
test
cmp
and
ss
or
icebp
sbb
vmulss
jnp
or
dec
daa
iret
scas
arpl
xchg
ret
xchg
aaa
fnstenv
insl
cmpsl
nop
sti
or
aas
pop
out
sbb
xchg
loopne
and
xchg
or
push
ficomps
addr16
cltd
bound
dec
repnz
je
sub
xor
xchg
mov
dec
and
jae,pn
add
mov
lods
rclb
ljmp
mov
and
int
sub
jmp
popa
lods
cmc
jge
pop
jb
mov
pop
test
push
arpl
out
negb
mov
xchg
add
rclb
xlat
inc
cmp
sub
mov
push
mov
sub
loopne
inc
push
mov
jno
inc
mov
push
mov
rcrl
xchg
xchg
mov
adc
sub
and
push
xchg
push
dec
adc
outsl
dec
fsubrs
push
cmp
xchg
jge
jns
adc
notb
scas
mov
insl
push
jo
fstpt
inc
jge
popf
or
xchg
pop
movaps
loop
pop
movsb
in
adc
stc
iret
sarl
inc
lods
addr16
notl
addr16
push
jle
insb
pop
and
loopne
shll
push
mov
jo
ret
imul
sbb
jae
sub
jmp
and
mov
push
cli
lret
into
and
mov
mov
rcrl
ja
cmpsb
inc
fwait
xor
xchg
or
int3
outsb
mov
js
int3
sub
pop
xchg
push
je
ja
dec
js
add
mov
inc
sarb
cmp
movsl
sub
adc
dec
cld
push
xlat
push
iret
ffreep
cmpsb
jnp
ss
add
jle
cmp
dec
pop
dec
rcrl
shrb
mov
add
aas
mov
xchg
das
cltd
mov
and
je
pop
inc
add
jle
mov
pop
mov
pop
int3
inc
sahf
mov
xchg
loop
sbb
sbb
jp
xchg
ds
xor
jbe
lea
ljmp
das
idiv
jle
js
popa
mov
stos
cli
pop
ficoml
icebp
push
pop
loop
xchg
pusha
inc
fucomi
fcom
leave
adcb
or
imul
pop
push
or
out
xchg
test
adc
lahf
rcll
lret
test
sub
adc
xchg
jne
std
jmp
jbe
imul
xor
sbb
xlat
dec
pop
scas
insl
pop
mov
pop
pop
jg
rcrb
inc
mov
stc
lock
mov
clc
je
dec
jno
mov
or
mov
cld
ret
data16
out
outsb
sahf
nop
add
xchg
push
mov
mov
movsl
cli
popa
jo
cmpsl
pop
mov
or
sbb
outsl
stos
and
pop
mov
orb
je
sub
call
dec
mov
jae
mov
sti
sub
lret
lds
jg
pop
stc
push
ror
sti
popf
roll
jmp
inc
dec
sub
test
push
xchg
mov
stos
cmp
sub
mov
cmp
xchg
leave
mov
lods
out
inc
fldt
xlat
pop
mov
decb
ds
pop
push
sbb
sbb
jmp
xchg
lea
movsb
int
sub
aam
inc
aad
sbb
mov
in
adc
mov
fistpll
into
cltd
mov
cs
cli
pop
ret
outsb
insl
or
xchg
add
cmp
adc
and
mov
stos
xor
mov
outsl
mov
xchg
mov
pop
push
jmp
rcrb
dec
stc
cmpsb
push
fnstenv
sbb
fisttpll
pop
mov
mov
mov
mov
xchg
adc
pusha
mov
cli
cmpsb
inc
mov
out
sub
outsb
add
mov
jmp
mov
sbb
jecxz
xchg
inc
call
leave
daa
lahf
dec
ret
aas
push
jmp
xchg
push
push
cmpsl
mov
shrl
jge
nop
ret
pop
notb
cmp
pop
adc
ds
cmp
ljmp
mov
xchg
pusha
rolb
movsb
mov
movsb
mov
jle
dec
movsb
mov
les
and
popa
cmp
and
gs
xchg
and
js
pop
fnsave
mov
mov
dec
fs
mov
xchg
andb
xchg
xor
pop
mov
loope
into
push
cmp
int
sub
push
imul
jbe
sub
jp
popf
sub
pop
fldenv
add
test
leave
mov
ret
adc
ja
mov
loop
mov
pop
jae
shl
jbe
and
cli
jo
xchg
std
into
shll
adc
xor
pusha
popf
inc
push
mov
pop
and
xor
in
mov
in
lds
jbe
xchg
mov
mov
add
dec
mov
push
pop
xchg
xor
loopne
cld
int3
adc
cmpsb
mov
adc
das
call
mov
and
cmpb
mov
hlt
pop
jp
imul
dec
bound
pop
movsb
mov
inc
xchg
mov
fsubrs
mov
loop
repz
add
lock
xchg
pop
leave
mov
sbb
icebp
popa
loope
pop
iret
sbb
sahf
dec
add
push
or
roll
or
jg
dec
insb
mov
cli
mov
cmp
lods
call
jnp
enter
mov
push
jge
cmp
pop
aas
or
pop
int3
jo
testl
cmp
mov
and
cwtl
dec
outsl
rcll
sub
dec
std
cmp
inc
add
or
addr16
push
mov
test
imul
jmp
adc
hlt
sbb
and
div
fldcw
sub
xchg
sbb
ret
sbb
std
push
mov
xor
mov
cmpsb
hlt
test
test
aaa
dec
mov
pop
stos
rcrb
into
pop
clc
pop
push
xchg
jo
sbb
in
jb
pop
icebp
lea
out
add
or
xchg
push
xchg
shlb
jg
ret
ds
mov
push
movsb
pop
addr16
stc
lea
jle
mov
push
or
rorb
outsb
rol
xchg
scas
sbb
shlb
fnstcw
iret
xchg
xchg
lcall
js
adc
add
sub
lods
jns
jnp
push
inc
and
jp
les
cmpl
clc
fstl
pop
jmp
setb
xor
outsl
mov
cli
pop
lods
pop
cltd
push
outsl
cmp
pop
mov
stos
xor
pop
aam
mov
jns
sbb
leave
popf
pop
in
and
mull
iret
xor
push
gs
inc
pop
arpl
or
sbb
jg
ror
xlat
fwait
movsl
pusha
nop
add
js
sti
fwait
dec
es
sbb
pushl
mov
pop
add
mov
lret
push
adc
stos
push
out
mov
in
jp
stos
and
mov
adc
push
adc
push
cmp
movsl
fsubr
jns
pop
insl
cs
sbb
rcl
mov
insl
add
jecxz
xchg
xor
jb
std
pusha
xchg
mov
jne
and
outsl
test
out
das
lods
insl
stos
std
pop
sahf
lods
sarl
and
gs
mov
ftst
lahf
cmp
inc
pushf
into
shr
aas
pusha
add
pop
loopne
jg
pop
or
pop
clc
loop
rclb
mov
fs
aas
lret
gs
pop
xlat
and
xorl
push
cmp
sbb
and
jp
push
add
cmpsb
pop
xor
pop
ds
inc
jmp
or
push
and
or
decb
push
pop
data16
push
mov
jg
mov
mov
add
sarb
stos
shll
cld
movsl
cmc
jne
push
loope
mov
add
and
lret
mov
push
ficomps
push
push
xchg
pop
push
push
mov
mov
rcr
dec
and
xchg
es
jo
sub
push
mov
adc
pushl
pop
add
mov
cld
ljmp
inc
inc
mov
data16
pop
imul
frstor
ss
fcom
push
cmc
test
lds
test
aas
jp
insb
jbe
jns
mov
xchg
mov
sbb
dec
adc
push
fidivl
pop
mov
cmpsb
sahf
pop
xchg
mov
test
xor
bound
lcall
mov
cltd
mov
push
xchg
jl
cmp
mov
add
dec
iret
add
gs
repz
sub
jno
and
adc
mov
jge
sbb
leave
jo
bound
mov
nop
inc
into
js
push
test
sarl
es
push
cmp
mov
push
mov
popf
mov
pop
jnp
push
popf
ret
or
cwtl
loope
lock
cltd
stc
lea
add
lret
mov
sarb
lock
call
xchg
int
inc
je
add
add
rsm
sbb
xor
lock
repnz
ljmp
pushf
ret
addr16
mov
aad
cmp
aaa
pop
ret
sub
ds
loop
jae
jmp
pop
mov
dec
das
and
xchg
xor
inc
inc
xchg
int3
push
fidivl
cli
lds
aad
and
xchg
lock
dec
fdivr
mov
or
cmp
fsubl
cmp
addl
mov
push
ja
ficompl
jae
jae
jmp
lock
iret
xor
dec
mov
xor
ljmp
lods
loop
mov
out
fistps
dec
sub
lock
out
xor
sub
sbb
jns
xchg
mov
xor
dec
push
rcrl
inc
mov
fildll
mov
pop
or
js
jmp
fsubl
sbb
popf
daa
movsl
lods
fs
push
dec
std
jp
push
pop
loopne
mov
mov
js
xchg
fistl
inc
loope
jns
ljmp
xor
popa
dec
sub
test
bound
mov
xor
xchg
mov
mov
jle
pop
dec
xor
js
push
sub
icebp
dec
lods
mov
fcompl
shll
xchg
icebp
or
leave
adc
inc
arpl
cmpsl
sub
insl
or
pop
pop
cmc
orl
fwait
sbb
ss
into
repnz
hlt
add
sub
mov
testb
cli
test
imul
out
fdiv
xor
mov
push
out
mov
std
sbb
and
aaa
pushf
xchg
scas
std
bound
xchg
test
mov
adc
mov
cmc
push
mov
cmp
adc
push
adc
mov
pop
jo
and
pop
aam
and
dec
xchg
xor
mov
outsb
int3
scas
jno
lods
test
jbe
daa
cmp
fs
sbb
rclb
inc
pop
cmp
je
dec
addl
jnp
call
fsubr
pop
or
mov
mov
push
call
jae
pop
inc
push
movsb
cwtl
mov
test
add
inc
xchg
xor
xor
xor
mov
add
mov
xorb
push
and
xor
out
call
orl
mov
mov
ret
lds
add
stos
pop
and
or
stc
mov
cld
xor
lds
pop
aaa
cmp
dec
sbb
loope
insb
jbe
adc
jnp
inc
addr16
orb
enter
stos
sbb
popa
inc
fstpt
jmp
dec
dec
cli
ret
push
sbb
outsb
les
out
or
cmp
popf
fisttpll
pop
jbe
popf
scas
sub
movsl
dec
push
nop
fcmovne
out
mov
js
insb
in
inc
jge
add
out
mov
out
in
mov
testb
in
pop
pusha
lock
mov
inc
inc
fwait
out
lahf
pop
into
les
cli
aam
push
lahf
jae
aam
xor
sub
call
iret
fistpl
int
clc
sub
and
push
mov
xchg
fsubrl
pop
mov
outsb
scas
jno
cmp
sbb
inc
subb
dec
sbb
repnz
imul
mov
mov
or
fidivrl
outsw
andl
mov
fcmovbe
push
cmp
shl
mov
imul
popa
sub
dec
out
fbld
sarl
inc
das
pop
fcmovne
inc
and
mov
fstp
inc
dec
out
stos
ud1
outsb
and
mov
dec
jbe
movlhps
mull
push
icebp
xchg
jl
fcoml
repnz
repnz
cmp
ds
pop
fstp
jns
jle
xchg
in
std
popa
in
lahf
stos
pushf
mov
clc
push
pop
flds
sub
and
ljmp
inc
add
xchg
and
jmp
jno
mov
xor
inc
xlat
rorl
dec
adc
not
xor
adc
mov
xor
mov
arpl
dec
dec
and
push
xchg
jge
pop
inc
std
add
xor
xor
sub
outsb
and
pop
xor
jle
lret
xor
sti
pop
fdivl
dec
inc
mov
sbb
or
lret
push
jb
mov
or
jnp
sub
xor
xchg
orl
mov
inc
sbb
and
jge
mov
dec
mov
pop
pop
mov
mov
mov
notb
lods
movsl
push
lret
in
sbb
icebp
xor
sub
int
shlb
mov
in
int3
and
lahf
pop
out
imul
xchg
lea
push
or
rcll
cld
xor
fwait
adc
pop
rcll
cmp
inc
out
inc
scas
fwait
add
out
aad
adc
mov
cmp
aaa
in
mov
or
lea
test
xor
int
inc
out
xchg
mov
ss
std
ljmp
dec
aam
adc
or
xchg
jp
pop
lods
push
cltd
mov
arpl
adc
mov
data16
push
mov
xchg
sub
mov
jbe
inc
pop
ss
sbb
jns
add
out
pop
push
dec
jno
push
push
push
lcall
xchg
lret
jl
scas
add
leave
es
dec
outsb
adcl
or
rcrb
sub
out
hlt
sub
sahf
iret
scas
mov
fwait
lods
test
out
std
test
outsb
int
popf
insb
loope
cmpsb
mov
imull
add
sub
pusha
add
push
push
cmp
daa
sbb
dec
test
mov
loop
sub
dec
in
inc
inc
push
mov
jecxz
mov
pop
gs
scas
push
push
aad
in
dec
arpl
push
lock
jecxz
int
ljmp
adc
inc
scas
shll
cwtl
shll
xchg
popa
nop
dec
pop
dec
loope
scas
mov
xlat
andb
inc
xchg
nop
stos
rol
sbb
das
lods
pushf
lret
iret
xchg
fsts
cwtl
loopne
pop
sbb
das
jmp
mov
repz
jle
cmp
adc
adc
sub
lahf
shlb
lahf
pop
xchg
stos
adc
pusha
loopne
testl
mov
movsb
mov
cmp
mov
jg
jnp
aam
rcr
fidivrl
sahf
xchg
orl
sbbl
xchg
sti
daa
xorb
mov
lcall
cmpsb
push
mov
je
cmp
aam
xchg
lahf
sub
popa
popf
popl
mov
mov
mov
mov
rclb
jecxz,pt
nop
mov
jo
push
mov
push
xor
add
pop
daa
sbb
pop
jmp
sub
fisubrs
dec
mov
inc
mov
jb
mov
shll
cmp
mov
sbb
ds
or
es
fcmovnu
ss
inc
sarb
iret
add
cmpsb
sbb
in
add
fsubr
lea
inc
push
aam
add
dec
and
insl
jne
sbb
psrlw
std
inc
in
dec
push
nop
out
add
push
cmpsb
int
in
divl
pop
inc
sbb
push
fs
rol
sahf
jnp
xor
xchg
add
test
test
jg
jl
fsubr
lret
sahf
lods
xchg
xor
test
fisubrl
enter
mov
fnstenv
jo
repnz
jae
and
sub
mov
pop
push
mov
sti
cmpsb
jl
pop
or
mov
mov
andb
popf
jo
ja
cmpb
gs
lret
dec
push
ljmp
cmp
jle
push
sub
mov
lret
out
jno
enter
cld
jle
mov
repz
mov
nop
mov
xchg
push
mov
sbb
cwtl
and
jmp
dec
mov
inc
div
ror
or
icebp
daa
lock
adc
mov
or
jo
dec
icebp
mov
out
test
fstpl
fs
adc
pop
rcll
movsl
cmp
lret
popf
mov
popa
xchg
ret
xchg
sbb
aas
mov
insl
pusha
mov
and
xor
lea
jl
dec
dec
pop
or
divb
sbb
sub
push
jno
mov
inc
mov
pop
xor
jg
pop
inc
cltd
inc
mov
pop
ret
xchg
or
insb
test
call
xor
test
mov
push
sti
je
fimuls
out
daa
test
cmp
std
mov
and
ret
push
lahf
ss
fidivs
hlt
enter
sbb
sub
nop
mov
cmpsb
pop
push
aad
inc
scas
ss
and
sbb
cmp
test
jae
cmp
in
out
cmp
aam
movsl
jns
pop
sbb
jae
xchg
lret
js
nop
cmp
mov
inc
inc
jecxz
dec
mov
and
fimuls
adc
and
stc
notb
fcoml
adc
push
sub
loop
xchg
out
dec
or
je
mov
pusha
ret
dec
dec
jmp
inc
add
clc
fstl
push
mov
lods
fsubrs
mov
mov
adc
push
mov
adc
imul
gs
inc
push
push
test
pushf
jmp
add
mov
jp
dec
cld
xchg
add
push
addr16
andb
push
inc
lahf
ljmp
mov
and
out
or
mov
scas
loop
subl
fistl
mov
dec
adc
test
jle
pop
leave
mov
aas
pop
or
sahf
popa
faddp
faddl
insl
dec
shrl
or
push
inc
stos
aad
jg
inc
cmp
fs
stos
addr16
add
cmpsb
rcll
test
jbe
cmp
xchg
jno
cmc
add
mov
pop
push
adc
jp
int
inc
or
push
adc
adc
cmp
js
inc
ljmp
clc
adc
push
sbb
push
xchg
repnz
addr16
repz
push
mov
sub
cld
gs
xor
jae
adc
sti
inc
cmc
push
adc
inc
and
push
lret
popf
push
repnz
or
mov
pusha
cmp
addr16
pushf
daa
mov
dec
mov
and
inc
mov
cmc
cmpsl
pop
lret
loop
aaa
leave
cltd
cmpsb
and
and
sub
popa
add
fcompl
addl
lock
push
cld
push
cmpsb
mov
sbb
fstpl
and
aaa
int3
xor
mov
push
push
ret
ficoms
pop
sbb
sbb
test
mov
ljmp
mov
insl
add
jbe
imul
daa
mov
push
cmp
push
xchg
shlb
jb
mov
mov
jno
xor
dec
popa
xchg
pop
pop
sub
mov
inc
lock
addr16
lcall
mov
fistpl
or
adc
push
dec
nop
push
sbb
adc
xor
data16
cmp
cli
push
or
sbb
scas
aam
push
mov
rcrb
repnz
lods
into
jo
cmp
movsl
sahf
test
imul
pop
xor
adc
sub
jo
stos
lret
out
push
je
lods
jl
andl
cmp
outsb
clc
add
out
sbb
xchg
jg
enter
ds
mov
jmp
pusha
ret
test
aas
imul
pop
rorb
call
hlt
mov
enter
stos
aam
xchg
mov
ds
mov
cmp
sbb
jnp
lahf
and
mov
sbb
nop
imul
and
pop
mov
mov
sub
jne
pop
test
into
xchg
push
loopne
pusha
int
jb
clc
notl
push
add
jecxz
mov
fwait
in
aas
sbb
xchg
ror
mov
pop
in
imul
pop
adc
inc
cli
and
cmp
daa
jnp
add
data16
inc
push
or
fidivrl
or
or
popf
hlt
mov
loopne
shlb
arpl
dec
lcall
xchg
popa
adc
or
pop
pop
mov
xadd
xor
jg
add
lahf
hlt
push
aaa
fsubl
pop
dec
cld
test
inc
subb
push
int
mov
imulb
lea
dec
mov
pop
jae
adc
dec
dec
ljmp
or
inc
adc
out
add
adc
mov
xor
repz
cmp
arpl
ss
ja
fsts
push
sbb
xchg
pop
pusha
cli
lods
test
in
imul
fidivl
in
lret
cmc
popf
xor
test
stos
dec
cmp
insb
add
mov
loope
int
ret
xor
adc
jge
add
loopne
inc
push
scas
xor
mov
and
sahf
push
scas
sti
sbb
filds
fs
fs
mov
movsb
outsb
jl
xor
xor
testb
mov
rcrl
bound
aad
ss
pop
btsl
add
in
shlb
xlat
scas
in
pop
mov
dec
pop
push
mov
lea
pusha
das
int3
lds
lea
mov
aad
xchg
test
imul
loope
andb
sbb
push
stos
or
insl
das
and
dec
inc
pop
jns
xor
cmp
jge
dec
insb
or
jno
gs
sub
xor
add
cmpsb
repz
imul
xchg
test
push
jle
sbb
adc
addr16
enter
jbe
cmp
xor
sti
movsl
scas
xor
iret
pusha
lcall
push
and
sub
ds
lods
mov
mov
out
cmp
mov
ss
xchg
mov
xor
insl
cmp
ss
add
mov
jmp
scas
and
imul
inc
scas
bound
xchg
xchg
mov
push
pushf
js
sbb
push
sbbb
and
mov
dec
out
cmpsl
cwtl
hlt
or
mov
mov
test
xor
push
shll
mov
imul
fwait
or
or
pop
mov
dec
sub
ret
call
push
or
loope
loop
cmp
lcall
andb
mov
rcrb
dec
cmp
cmp
dec
push
lock
adc
shlb
ror
fcomp
dec
adc
aam
es
jnp
add
repz
push
test
push
in
test
popa
cmc
dec
cmp
hlt
mov
in
lods
jne
aam
jb
xchg
dec
loope
popf
inc
pop
popl
mov
or
sbb
daa
jl
ds
pop
jbe
xchg
lret
push
es
nop
int
pop
push
xchg
lock
push
scas
into
rorl
in
push
inc
dec
addl
outsb
mov
xor
push
out
push
mov
push
inc
sub
jns
lcall
inc
sub
pushf
dec
in
jns
xchg
mov
mov
sbbl
and
aaa
mov
divl
xchg
in
jb
pop
sbb
iret
lret
sbb
insb
sub
movsl
mov
inc
cmpsb
cmp
fstps
es
outsb
fmul
xor
inc
es
testb
repz
pop
sub
jp
sub
int3
clc
inc
add
sbb
scas
inc
repz
ffree
jnp
sub
es
int3
inc
mov
jmp
fcmovnu
inc
push
sub
aad
lods
pop
jno
dec
ret
push
mov
xchg
insl
jbe
shrb
push
pop
or
push
add
test
dec
cmpsl
ss
out
or
fs
outsb
xor
cmp
push
int3
aas
test
xchg
aam
mov
pop
ret
inc
jg
cmpsb
shll
cltd
mov
scas
les
or
ds
add
inc
sbb
lock
cld
or
mov
push
in
mov
outsb
repnz
add
push
sub
mov
loope
insb
lds
vpandn
insb
mov
xor
xor
rcll
outsl
pop
lcall
out
imull
in
rcrl
xor
test
mov
or
lods
pop
xchg
push
xor
fxch
xchg
in
imul
mov
cmpl
fsubp
xchg
pop
sbb
sub
scas
sbb
pop
lret
imul
mov
and
dec
aad
dec
cmp
push
jecxz
inc
jb
dec
repnz
dec
cli
mov
add
cltd
sbb
push
and
aad
add
mov
adc
out
push
xchg
cmp
aas
cmpl
imul
sub
lcall
out
ret
in
rcl
in
jae
rclb
pop
xor
push
dec
fldt
icebp
mov
ret
mov
jecxz
stos
sarb
add
jae
pop
push
add
inc
add
mov
sbb
sub
loopne
std
fildl
ds
add
inc
fadds
or
xchg
adc
mov
xor
insb
lds
push
fwait
mov
sbb
and
pushf
dec
aad
cmp
mov
ret
xchg
scas
add
mov
gs
enter
xor
xor
push
les
cmp
mov
or
sbb
das
mov
inc
pop
mov
ja
fprem1
leave
data16
popa
pop
push
pop
mov
mov
xor
inc
mov
repnz
sbb
jnp
fbld
into
test
sti
jecxz
outsb
xor
sbb
out
xor
xchg
orb
cmc
imul
dec
cmp
imul
movsb
into
jg
test
outsb
iret
and
sbb
lea
push
dec
xor
mull
stc
das
bnd
fs
jmp
cmc
add
pop
ficompl
inc
test
push
fwait
add
test
cld
lcall
mov
adc
lret
rclb
test
into
push
jbe
lea
or
shl
in
jecxz
adc
adc
sub
mov
movsl
mov
add
mov
out
pop
xor
and
and
pop
mov
dec
fistl
push
add
jo
imul
jbe
push
mov
xchg
jnp
jns
inc
cmp
in
jns
and
or
push
push
pop
es
inc
push
nop
jmp
in
inc
push
push
ret
cs
jge
cli
and
push
mov
fidivrs
cmp
icebp
sahf
mov
jno
orb
mov
push
cld
stos
push
lahf
mov
js
hlt
mov
xchg
pushf
aam
mov
xlat
leave
pop
mov
es
into
pop
enter
pushf
xor
pop
and
and
mov
rcrl
loopne
adc
sti
xor
push
aas
add
adc
int3
xor
fnstsw
mov
mov
add
iret
mov
adc
sahf
mov
xchg
push
push
hlt
add
in
cmpsl
jl
push
inc
fiadds
imull
mov
sahf
test
fdivr
pusha
xor
inc
xor
ljmp
mov
outsl
test
fstpl
sbb
jg
loope
shrb
lahf
jl
cmpsb
aam
add
inc
aas
lea
mov
cmp
push
pop
mov
add
enter
fmull
mov
mov
sarb
fstps
jnp
ds
gs
xor
push
push
popf
rol
pop
xor
add
icebp
lock
jae
mov
xor
ss
fstp
popa
jl
mov
loopne
or
pop
lcall
or
jb
xor
into
cltd
in
jle
movsb
add
pop
xchg
dec
popf
add
leave
test
pop
dec
push
push
add
jp
cmpsb
jp
mov
xchg
mov
ss
aad
mov
es
adc
jg
insb
icebp
inc
cmp
pop
cmp
nop
imul
sub
outsl
cmp
push
mov
mov
test
lock
or
popa
int
adc
inc
out
fsubrl
mov
repnz
icebp
inc
sbb
outsl
sahf
mov
vmovhps
loopne
aas
je
and
and
pusha
or
dec
aas
pop
jae
add
pop
cld
jge
and
mov
pop
inc
adc
mov
cmc
jge
mov
or
subb
lcall
fists
mov
pop
leave
roll
scas
mov
iret
mov
xchg
inc
adc
icebp
ror
push
push
stc
cmp
data16
xchg
dec
dec
out
shrl
scas
test
repnz
test
push
daa
add
inc
lods
mov
sbb
dec
paddusw
int3
std
add
jecxz
and
push
insl
mov
xchg
pop
mov
sub
shlb
movsb
and
add
stos
cmp
add
xlat
nop
add
pushf
xor
mov
jae
sbb
pop
dec
shll
cli
add
out
cmp
jl
mov
inc
cmp
out
and
sar
lcall
adcl
jae
call
dec
lods
nop
sub
movb
rcll
and
sub
push
popa
mov
testb
repz
inc
mov
and
sbb
pop
push
fcomip
les
mov
popa
lahf
mov
sub
push
pop
das
mov
enter
gs
lcall
les
je
adc
dec
cltd
mov
ret
ficoms
inc
loope
clc
adc
mov
ficoml
and
clc
orl
test
mov
jl
jge
and
cmpsl
test
sbb
mov
leave
in
jae
sbb
daa
fucom
push
ljmp
mov
ds
push
inc
aaa
insl
out
imul
cmp
pop
xor
xchg
addb
dec
mov
std
negb
xchg
cmc
push
scas
fnstenv
test
int
xchg
push
popf
mov
or
push
mov
xor
addr16
inc
xor
outsl
dec
mov
gs
fsincos
popa
or
and
inc
jecxz
sbb
iret
pop
cltd
xchg
dec
pushf
pop
and
inc
loope
shl
xchg
arpl
sub
iret
cmp
test
iret
lcall
mov
mov
sub
insl
mov
cli
sbb
mov
inc
inc
repnz
in
bound
rcrb
jl
sub
cmp
jp
pop
adc
lret
lret
push
hlt
fistps
add
inc
dec
jne
out
mov
xchg
popf
rorl
add
sbb
pop
push
stc
test
or
cmc
out
lods
inc
jmp
rcl
xchg
pop
dec
pop
bound
sub
xor
pop
aad
jmp
out
dec
lahf
rclb
xchg
pop
clc
or
push
cmp
xor
pop
std
cmp
mov
and
lods
gs
imul
xchg
shl
in
movsl
or
mov
out
jne
dec
incb
push
mov
mov
jl
repz
lods
xchg
out
fadd
mov
or
mov
imul
pop
cld
lret
decb
imul
mov
cmp
push
pop
mov
scas
cmp
cmpsb
inc
lods
js
cmpsb
inc
xor
xlat
push
push
out
inc
xor
mov
mov
in
cltd
xchg
jne
ss
dec
cmp
adc
jg
outsb
xchg
mov
jns
sbb
jl
imul
dec
lret
xchg
fucompp
fs
mov
jg
mov
shl
cmp
xchg
hlt
inc
aaa
into
aaa
mov
or
jg
add
mov
test
dec
fs
test
sahf
add
orl
adc
subb
jns
pop
push
push
sub
pop
or
inc
int3
int3
mov
cmp
sbb
sarl
adcb
push
dec
clc
push
enter
xor
scas
jle
pushf
xchg
push
loope
loop
sarb
sub
jmp
iret
loop
inc
add
pushf
enter
scas
and
inc
pop
mov
lock
sar
test
push
push
lea
sbb
rclb
jmp
lret
stos
mov
pop
add
push
mov
test
sbb
adc
pop
loop
or
xchg
int3
enter
sub
mov
dec
xor
popa
jno
outsl
xchg
lret
jne
xor
jae
aaa
push
xor
fadd
incb
movsl
cmp
adc
insb
push
xor
sbb
add
scas
mov
arpl
pop
daa
into
aad
jbe
idiv
clc
ret
and
inc
out
add
xor
sbb
pop
inc
clc
loop
pop
mov
jl
data16
mov
shrb
movsb
inc
into
fisubrl
push
mov
out
push
les
xchg
xchg
cmpsb
loopne
gs
add
add
cmp
lahf
repz
rcr
inc
xorl
lret
fucomp
xor
popf
inc
loopne
and
lret
dec
mov
mov
inc
pushf
adcb
mov
sbb
push
xchg
aas
push
add
cwtl
or
and
lcall
pop
je
stos
ss
enter
xchg
mov
jecxz
inc
outsb
dec
jo
jecxz
and
mov
mov
sub
mov
clc
into
mov
arpl
or
loope
pop
and
cwtl
mov
cmp
dec
sub
adc
push
int3
test
ficoml
xchg
xchg
loope
pop
gs
adc
loope
outsl
test
fiaddl
jnp
push
das
dec
xchg
sub
xchg
push
icebp
mov
sahf
in
pop
shrl
cmp
scas
sbb
scas
je
xchg
jbe
subl
leave
orl
out
mov
mov
or
xchg
inc
mov
hlt
cs
xchg
push
jb
loopne
cltd
mov
jns
loopne
add
inc
jle
jl
and
imul
arpl
sbb
and
ljmp
and
movsl
jl
pop
and
adc
jo
sbb
or
push
xor
fstl
push
push
cmp
test
data16
xchg
insl
in
cs
adc
jle
je
out
out
mov
test
xor
jne
adc
je
push
adcb
push
das
out
imul
jmp
inc
lock
xor
lods
xor
mov
orl
popf
enter
dec
in
push
sub
or
test
and
aam
mov
mov
test
add
les
fidivrs
iret
cmp
push
lret
stos
add
push
mov
shll
push
shll
scas
fs
divb
enter
lahf
adc
lcall
ljmp
imul
xchg
loopne
rorl
arpl
ret
jecxz
mov
xchg
add
popf
inc
dec
mov
or
push
or
aad
enter
jg
mov
push
fldl
jp
and
jmp
push
pop
out
or
xchg
aad
xchg
sub
dec
or
orb
dec
std
popf
or
or
shl
adc
lahf
lea
mov
outsb
stos
call
shll
xchg
pop
xchg
ret
or
test
or
fimuls
sbb
shld
jl
ss
shlb
adc
jge
xor
rorb
cwtl
adc
in
mov
clc
les
or
ficoml
push
jno
cli
jp
aad
push
pop
mov
les
or
or
dec
dec
nop
cmp
lods
mov
loopne
out
push
imul
insl
movsb
or
out
sbb
adcl
xchg
cmpsb
aam
dec
loop
shrb
dec
cmpb
clc
cmc
dec
jp
push
add
pusha
ret
mov
outsl
xor
mov
loopne
adc
dec
mov
lods
xchg
cmpsl
loope
jbe
add
sub
cmc
sarl
cmp
aam
mov
pusha
adc
stc
test
outsb
lret
or
movsl
dec
jp
test
mov
mov
cwtl
inc
mov
mov
mov
inc
fcoms
xchg
adcb
or
enter
xchg
jp
push
push
shr
sbb
in
jp
iret
call
shlb
out
jmp
fistpll
aad
xchg
loopnew
inc
dec
push
mov
mov
call
stc
lods
lods
sub
sbb
sub
jno
jbe
sbb
popf
add
aas
in
xchg
fnsave
and
jl
dec
and
adc
insl
jno
aam
push
xchg
sahf
jmp
je
ss
scas
insb
or
dec
int
cmp
inc
add
xchg
add
movsb
sbb
mov
push
jl
adc
inc
rorl
ljmp
loopne
jl
cmp
ljmp
mov
out
leave
or
jecxz
rorb
popf
push
test
lods
mov
xor
call
sbb
push
das
mov
es
stos
rcr
mov
jbe
inc
sti
dec
jnp
adc
adc
push
shlb
mov
fimull
dec
shll
daa
test
insl
xor
lret
rorb
subl
mov
lods
into
xchg
js
mov
cmp
or
lea
std
fs
or
inc
cwtl
mov
pushf
movsl
jnp
jb
dec
arpl
push
das
dec
xchg
mov
fwait
jno
out
sub
push
xchg
ficomps
cli
or
dec
or
mov
out
int3
jno
xchg
push
or
jmp
and
addb
adc
pmaxsw
mov
dec
cltd
xchg
lahf
js
dec
mull
xchg
xor
or
lret
sub
ficoml
or
adc
mov
lods
data16
aas
stc
adc
cld
or
mov
loope
std
push
subl
das
cli
jl
stc
fidivs
pop
ret
push
ficomps
jle
roll
or
packuswb
mov
pop
aaa
and
f2xm1
dec
push
test
jmp
test
inc
dec
std
stc
mov
jg
out
fwait
loopne
xchg
or
lahf
xor
or
fisttpll
xchg
and
pop
dec
jp
popf
cmp
mov
push
in
and
pop
sti
xchg
inc
outsl
sub
mov
sbb
out
stos
iret
push
lcall
mov
xor
outsl
xchg
and
loope
pop
ret
subb
jae
pop
jns
daa
data16
popf
sbb
lds
aas
je
repz
and
push
push
es
test
in
fmull
pusha
loop
mov
or
mov
cmp
movb
test
shrl
add
cmp
inc
arpl
and
jg
fdivs
popf
in
sub
adc
insb
movsl
in
mov
in
bound
rcrb
sub
addr16
mov
pop
cmc
lods
push
cwtl
push
arpl
imul
sub
jne
popa
leave
pop
int
iret
int3
mov
push
sub
dec
add
cmp
mov
xchg
les
sbb
xchg
pop
popa
test
mov
push
cmp
jp
cmp
xchg
and
jle
movsl
cmp
sub
scas
cmp
xorb
push
loopne
mov
orl
lret
adc
pop
inc
push
pushf
std
loop
cwtl
fnsave
hlt
and
movsb
out
jg
mov
xchg
cmp
xlat
pusha
lods
testb
outsl
mov
loopne
outsl
mov
add
xchg
inc
lcall
xchg
lods
adc
jae
jne
pop
fdivl
inc
lods
les
push
mov
and
sub
subps
stos
and
out
adc
adc
jno
daa
stc
test
jne
es
sbb
jmp
jae
mov
dec
sub
pop
hlt
and
filds
sahf
leave
roll
xlat
adc
in
xchg
cmpsl
orb
lahf
and
faddl
xchg
das
jno
push
push
jecxz
rol
aas
insl
push
pop
popa
stos
int
ret
pusha
call
stos
lcall
mov
arpl
paddd
pop
sarl
js
and
scas
shl
fwait
movsl
mov
xchg
sub
jp
call
iret
jle
xchg
sbb
cwtl
int
js
or
dec
mov
andb
inc
rcll
sarb
cmp
adc
dec
pop
sahf
jp
int
mov
cwtl
out
push
hlt
fnstcw
and
xor
and
mov
dec
out
pop
cltd
int3
pop
ja
shr
fistpll
mov
test
insb
push
sub
scas
mov
lds
jp
inc
inc
sub
mov
jle
add
push
pop
out
int
jns
adc
icebp
mov
outsb
adc
scas
outsl
enter
or
test
aaa
call
cmp
xchg
je
mov
rclb
out
mov
ds
ret
cmp
adc
add
xchg
inc
cwtl
dec
mov
outsl
lcall
mov
sub
sub
xchg
adc
push
loope
push
push
outsb
loop
addr16
bound
dec
sub
mov
xor
ss
mov
nop
je
sub
add
shll
or
fwait
cltd
test
adc
dec
adc
xor
mov
es
pop
push
stos
orl
push
lret
dec
lcall
std
rep
lock
sbb
cwtl
push
xor
outsl
test
xor
mov
pop
std
out
gs
xchg
arpl
push
movsl
mov
mov
lea
dec
mov
in
add
dec
fistl
mov
enter
imul
jns
jg
mov
test
sbb
dec
cmpsl
adc
adc
sahf
inc
jb
out
jo
pop
stos
fisttpll
ficoml
and
out
pop
scas
jne
pop
test
cmp
xchg
push
pushf
divb
push
rcr
mov
repz
pop
ja
mov
in
push
cmp
add
cmp
imul
mov
xchg
outsb
pusha
mov
in
mov
jl
mov
scas
pop
sbb
ds
shrl
bound
push
push
loope
cmpsl
cmp
sbb
popa
filds
loop
jae
add
mov
jns
pop
mov
insl
dec
mov
fsubrs
fs
jne
push
sarb
mov
pop
xor
insl
fildl
adc
sbb
mov
mov
lods
test
push
addl
inc
xchg
lcall
rcrl
xchg
jb
insl
test
in
mov
icebp
repnz
sti
cmp
push
hlt
ret
xor
sti
pushf
ret
rcll
or
push
lods
lds
repz
xchg
dec
push
outsl
dec
sbb
inc
iret
rcl
iret
lock
std
aam
push
mov
cmp
push
shrl
imulb
stc
jp
pop
js
int3
and
dec
scas
sarl
aaa
mov
push
fucomip
jmp
mov
or
xchg
aas
das
nop
jl
or
jnp
loope
push
sbb
jno
leave
xor
mov
sbbb
outsb
mov
or
test
push
and
aam
push
and
scas
lea
shr
adc
mov
in
mov
ret
lret
inc
js
pop
lea
or
aas
ja
imul
shlb
pusha
sub
jb
inc
dec
lock
cmp
cmp
xchg
std
xor
rcll
cmp
les
inc
mov
mov
push
call
out
fnsave
xchg
add
xor
dec
int3
stc
cltd
push
pop
push
cmp
inc
ss
js
cmp
mov
mov
andl
inc
and
jmp
fildl
mov
sub
cmp
xchg
push
inc
cmp
sub
fbstp
or
ret
lea
imul
jg
inc
push
xlat
rcl
je
repnz
add
pop
aam
neg
and
add
insb
cli
mov
ja
outsl
pop
jns
punpcklwd
iret
in
cld
sbb
inc
lods
loopne
mov
sti
mov
je
xor
arpl
rcl
dec
sbb
xor
out
xchg
sbb
lods
dec
or
pop
jg
mov
and
dec
adc
lods
xchg
pusha
mov
cmc
rcrb
cmp
mov
and
icebp
ret
fstps
xchg
push
jmp
das
adc
push
xchg
cwtl
pop
sub
std
pop
out
push
cwtl
shl
in
xorl
mov
cmp
lahf
or
jmp
out
mov
lret
jb
adc
sbb
and
sar
cli
xchg
ficoms
mov
pushf
cmpsb
test
test
rclb
test
ljmp
aam
push
mov
mov
gs
test
dec
sbb
or
int3
and
jo
push
inc
xchg
sub
cltd
and
push
lret
out
imul
cmpsl
repnz
aad
mov
fdivrs
adc
and
mov
cmp
or
rorl
xlat
mulb
push
push
jb
fadds
in
jnp
js
popf
ljmp
mov
iret
mov
movswl
sbb
icebp
negl
dec
xchg
inc
and
pop
fstl
adc
pushf
scas
and
sahf
nop
jg
arpl
jl
push
arpl
and
xor
lds
rolb
test
push
sub
pop
lret
out
and
leave
mov
pop
cwtl
cli
add
rorl
nop
lods
push
and
mov
add
push
sbb
mov
mov
out
sbb
mov
pop
sub
and
test
addl
das
xor
dec
je
shll
pop
imul
fdivrp
sub
bound
rolb
mov
repnz
sahf
sub
mov
cld
dec
test
call
mov
xchg
cmpsb
mov
push
sub
pop
xchg
call
mov
adc
inc
int
push
in
push
sub
pushf
mov
xchg
subb
pop
mov
xchg
test
or
fs
shr
mov
add
dec
jae
cli
cs
inc
dec
or
mov
cmp
jne
out
repnz
pop
outsb
loopne
popf
cmpsl
in
stc
dec
ljmp
jno
fstps
out
in
mov
in
sbb
pop
gs
jle
and
cmc
pop
sbb
aaa
cmpsb
lds
mulb
ss
call
lret
js
lcall
sarb
sbb
push
test
mov
add
xchg
and
inc
adc
fstpt
outsl
sub
and
addb
jp
push
adcb
and
ja
or
pop
jne
sbb
push
jmp
push
mov
xchg
addr16
mov
pop
mov
fxch
dec
movsb
fdivrp
inc
lcall
ret
xchg
jle
inc
clc
scas
or
push
fldt
jo
shlb
lods
int
dec
inc
popf
pop
adc
xchg
mov
sub
mov
arpl
cli
and
add
js
ds
inc
aad
inc
loopne
or
out
xlat
adc
and
ja
push
lcall
out
std
add
cmp
sbb
mov
push
push
mov
mov
cmp
adc
inc
in
pop
adcb
pusha
mov
mov
mov
jmp
push
in
loopne
bswap
sbb
in
aam
mov
cmp
sti
xor
icebp
xchg
fs
insb
cmp
sbb
xchg
jmp
dec
mov
sarl
leave
xchg
movsl
inc
pop
or
adc
leave
fcomps
out
fmull
inc
push
sbbl
ret
push
sub
daa
test
adc
cmpsl
pop
xchg
in
mov
stc
jmp
mov
loope
outsl
aas
jp
mov
add
adc
mov
insl
lcall
xchg
mov
fcompl
add
push
dec
cld
inc
push
push
jb
pop
stc
dec
sub
fistpl
add
sti
xchg
add
ud2
pop
and
int
push
push
arpl
sbb
push
js
push
jmp
sbb
and
push
cmp
lock
jns
or
pushf
push
insl
cmc
cmp
dec
jo
mov
bound
xchg
xor
insl
lahf
lods
gs
mov
mov
outsb
lods
btc
jp
popa
mov
cmp
xor
jge
add
mov
xorl
mov
and
sub
and
dec
dec
xor
mov
or
push
loopne
orb
sbb
nop
fwait
nop
sub
cmp
and
sbb
cmp
arpl
test
inc
ja
sti
cmp
jo
stos
dec
add
jne
add
test
mov
icebp
adc
incb
and
out
push
lds
adc
and
insb
rolb
pop
jb
pusha
dec
jge
add
inc
jl
or
test
add
shlb
pop
mov
repnz
sub
imull
or
jno
cmc
jg
test
mov
test
adc
pop
push
ljmp
and
sub
mov
jb
mov
test
enter
push
xlat
std
pop
mov
das
sub
ret
and
pop
popa
pop
rcll
pop
je
sbb
push
subl
mov
js
getsec
pop
test
lret
dec
ljmp
mov
mov
mov
mov
jp
lahf
mov
shr
into
fwait
movsl
jl
pavgw
xchg
add
stos
push
mov
mov
mov
xchg
or
cmp
adc
prefetcht2
jle
les
lock
xor
movsl
movsl
mov
imul
mov
outsl
cmp
in
dec
push
push
inc
jns
out
repz
fisttps
xor
fiaddl
push
lea
hlt
fsubs
inc
mov
xchg
cmc
ror
and
push
lods
sbb
imulb
cmp
or
je
push
xor
movsl
mov
insb
pop
mov
call
aaa
cwtl
out
jo
cltd
out
sysexit
pop
xor
push
mov
mov
pop
fists
and
push
xchg
cmp
out
xchg
mov
rcrl
js
pop
stos
jl
jo
lahf
lea
inc
sub
pusha
insb
sbb
nop
stc
pushf
scas
add
xchg
jne
add
jno
pop
jae
pop
push
jne
xchg
add
and
fwait
lods
pop
aas
xchg
mov
ret
mov
lods
push
ret
mov
xchg
mov
mov
fdivrp
out
mov
inc
into
dec
fwait
xor
pop
lods
mov
add
repz
push
out
cmpsb
and
call
pop
mov
dec
jge
fmulp
pop
mov
lret
and
lret
sahf
mov
jae
and
jmp
movsb
sub
jge
je
aam
imul
jecxz
mov
stos
dec
addr16
xchg
mov
or
lods
jl
sti
mov
outsl
mov
sbb
pop
lea
cld
out
fs
inc
fsubrl
das
fwait
mov
in
push
call
out
jl
lods
movsl
lods
mov
sub
dec
mov
pop
sub
jbe
movsl
add
xchg
inc
mov
negb
loop
push
cmp
int3
push
fsubr
call
repnz
dec
ret
mov
adc
outsb
or
movsl
sub
pop
loopne
fwait
data16
pop
xor
data16
rcll
sub
mov
loopne
test
push
add
outsl
je
lret
sub
mov
cmp
mov
gs
jge
or
adc
add
mov
roll
push
shll
push
adc
push
loope
ljmp
pop
scas
or
enter
and
stos
xor
stos
and
pop
out
ja
or
iret
xor
nop
jne
push
lret
out
adc
aad
inc
mov
popa
sbb
negb
outsb
lret
adc
hlt
jmp
popa
xchg
cmp
mov
or
fsts
scas
push
or
mov
icebp
testl
test
mov
test
xchg
mov
cmc
popf
pushf
cli
adc
or
popa
pusha
sub
pushf
stos
loopne
xchg
and
lea
sbb
test
fsubr
lret
mov
xchg
ja
mulb
data16
pusha
mov
les
and
aas
jge
and
sbb
or
inc
push
or
stc
orb
mov
lea
sbb
repnz
andl
negb
lods
insl
cmp
mov
xchg
shrl
sbb
jle
jg
lock
mov
cwtl
pusha
cltd
xorl
xor
cmp
cmp
aas
scas
aad
fldl
syscall
push
imul
inc
mov
test
mov
xchg
ja
xchg
insl
out
xlat
push
rcr
fildll
push
scas
or
inc
into
rcrb
mov
cli
fs
mov
xchg
cmp
pop
cmpsl
je
popf
jne
jecxz
test
mov
inc
mov
or
adc
mov
and
je
bound
xchg
stos
and
data16
xchg
push
cwtl
push
mov
pop
and
popf
jno
hlt
iret
push
cld
jecxz
into
lods
sbb
shlb
push
adc
jnp
fisubs
mov
mov
xchg
push
or
adc
push
mov
push
js
int
and
popa
lock
sbbb
jnp
mov
sbb
lret
cmp
mov
iret
leave
cmp
or
gs
lahf
test
lahf
shlb
mov
fwait
scas
enter
ljmp
fs
or
bound
pop
leave
jb
xchg
stos
aad
loopne
lock
in
stos
cmp
sarb
mov
push
xor
dec
inc
int3
cmpsb
shl
imul
mov
sbb
pop
and
call
repnz
dec
sub
ret
je
push
xchg
pop
lock
fnstenv
ficompl
test
pop
loope
add
and
add
xchg
repnz
in
test
int3
push
mov
shl
loop
cmp
test
sahf
shl
rorl
pop
js
popf
loope
mov
sbb
lods
cltd
movsl
lods
mov
adc
cld
adc
cli
nop
sbb
test
imul
xor
pushf
jbe
xor
es
xor
das
stos
cmp
jmp
sub
adc
pop
cmp
mov
addb
frstor
mov
dec
insl
pop
loopne
pusha
les
cmp
aas
idivb
aaa
flds
jne
sbb
outsl
cmpsb
sub
or
imul
cmp
dec
js
lret
aad
cmpsl
push
add
rcrl
loopne
fisubs
mov
notb
xchg
dec
push
push
push
aam
add
inc
and
mov
mov
rcrl
jg
test
sbb
mov
aam
jae
pop
push
daa
andl
xchg
jmp
xorb
jp
xor
popa
xchg
das
adc
out
jmp
lret
lret
sbb
pop
call
mov
rcll
sub
insl
arpl
sar
sbb
or
push
sub
into
ja
xchg
adc
aas
outsl
inc
pop
dec
add
scas
test
loop
xor
out
in
sub
clc
add
pop
add
jge
pop
dec
jns
gs
scas
sbb
repz
cli
sub
jl
int3
jo
popa
dec
stos
inc
xchg
inc
sub
xor
or
mov
cwtl
cmpb
push
push
int3
sti
icebp
cltd
mov
and
rclb
cmp
sbb
mov
mov
outsl
fwait
push
daa
inc
inc
cwtl
test
cwtl
mov
mov
push
xchg
repnz
rorb
fbstp
les
pop
xor
mov
push
pop
out
icebp
pop
je
lret
mov
adc
push
in
lret
sbb
aad
arpl
aaa
xchg
sahf
mov
stos
jl
push
out
lahf
mov
jle
mull
mov
pop
std
loop
iret
jae
adcl
jmp
lret
xor
in
js
mov
lret
add
inc
mov
dec
mov
in
out
int
jno
test
fstpl
xchg
out
cmp
mov
ret
mov
jmp
cwtl
push
das
addr16
in
sbb
inc
cmpsb
ljmp
xor
sub
es
movl
xchg
mov
cmp
outsb
add
mov
in
push
sti
xor
mov
jg
inc
ret
popa
mov
and
lock
mov
test
iret
ds
iret
push
sbb
or
inc
sub
cmp
repnz
std
fs
ja
vpcmpeqb
movsb
rcrl
cld
pop
insb
int
clc
sub
lods
lcall
pushf
push
repnz
cmc
fstl
femms
sub
jnp
les
jbe
rcl
arpl
outsl
push
dec
push
push
adc
in
sub
cmp
pop
adc
out
fnstcw
mov
nop/reserved
adc
jp
inc
loope
sbbb
mov
jo
sub
lods
mov
mov
fcmovbe
aaa
add
scas
dec
in
ljmp
xchg
cmp
lret
les
js
dec
ss
inc
jg
adc
shl
in
scas
mov
mov
repz
inc
and
mov
jg
inc
sub
stos
cld
bound
js
lret
repz
fdivs
ljmp
cmp
aam
dec
cmp
ljmp
cmp
or
or
mov
fdivr
cmpsl
xchg
andb
add
in
jne
clc
mov
cld
pop
adc
mov
roll
mov
dec
roll
push
std
cmp
and
pop
scas
xor
xor
fs
rol
rorl
das
xchg
stc
cwtl
jns
pop
cmp
jle
dec
lcall
test
in
jp
jbe
mov
loope
std
push
push
ds
mov
sbb
lahf
inc
sub
sub
pop
test
cli
aam
mov
mov
ror
adc
aaa
lret
mov
xchg
into
push
or
pop
stc
xor
loopne
mov
adc
dec
dec
mov
test
ljmp
test
mov
jl
xor
pop
and
push
cmc
repz
incb
popa
adc
arpl
pop
lcall
imul
mov
dec
jo
mov
sbb
loopne
pop
push
cs
mov
add
adc
insl
jl
sbb
hlt
mov
lret
rcll
outsb
xchg
jg
fwait
arpl
fwait
mov
add
dec
aad
sbb
jge
out
shll
mov
xor
ret
add
enter
outsl
sbb
loop
sub
loop
cmpl
ret
jb
ja
int3
pop
int
push
xor
mov
inc
xor
push
imul
aam
add
xorl
dec
rorl
leave
mov
xor
pusha
add
movsl
repnz
sbb
and
std
repz
mov
or
inc
jo
inc
imul
aam
jb
test
lock
call
in
cli
pop
xchg
ds
test
aaa
mov
lods
xchg
fstl
pop
call
lea
add
pop
scas
pop
scas
mov
imul
and
mov
lods
dec
insb
mov
add
dec
add
push
push
test
out
movsb
inc
int3
xor
mov
inc
decl
dec
cmc
and
sbb
xchg
mov
in
add
push
stos
fildll
mov
push
dec
xlat
aam
aam
jmp
and
cmc
int3
in
or
xor
mov
cmpsl
jb
cwtl
shlb
inc
sub
jns
push
pushl
mov
and
std
sbb
push
fs
ret
jmp
mov
mov
inc
sub
xor
jo
fildll
icebp
aam
imul
pop
lock
pop
orb
or
sarb
psubd
dec
or
lcall
dec
enter
or
add
push
pop
aaa
inc
fs
pusha
imul
pop
jo
daa
mov
jl
fldt
cmp
inc
pop
icebp
mov
mov
out
iret
lea
push
pop
lcall
xor
pop
sbb
clc
insl
pop
mov
imul
imul
push
push
repnz
aaa
out
rolb
mov
inc
adc
jne
rcr
negl
sbb
and
addr16
jns
aas
add
aad
mov
add
cmp
and
mov
data16
inc
cmp
int3
mov
hlt
mov
idiv
mov
sub
dec
mov
nop
icebp
pop
pop
inc
xchg
adc
cltd
iret
or
aaa
test
rcll
xchg
xchg
ret
cmp
sti
mov
xchg
pop
popl
repz
movsb
leave
stos
mov
fstl
mov
sahf
adc
movsb
popa
test
xchg
fsubrs
adc
call
mov
testl
push
mov
cmp
push
ret
pop
xor
mull
and
nop
dec
mov
xchg
push
mov
lods
iret
or
add
aam
mov
pusha
mov
addr16
in
out
inc
pop
jle
fucom
repz
enter
pop
test
fsts
or
je
mov
leave
outsb
dec
nop
lret
shrb
sub
or
cmp
mov
test
xchg
mov
adc
or
test
cli
mov
sbb
addb
scas
xor
jmp
push
mov
movhlps
sarb
aaa
ja
jae
sub
rclb
frndint
popa
cli
idivl
pusha
imul
sub
in
fidivs
cmp
dec
inc
push
sahf
int
sbb
push
mov
dec
xchg
jecxz
ret
adc
push
push
arpl
sbb
scas
cmovs
ret
mov
mov
jle
push
sarb
dec
into
jno
in
jae
out
xchg
mov
mov
push
xchg
das
mov
cwtl
decb
inc
jle
inc
movsb
and
mov
adc
inc
nop
aaa
fimull
mov
cli
testl
and
mov
cmp
and
lods
not
sub
nop
aaa
rcrl
shrl
cwtl
xchg
fmull
jecxz
push
repnz
pop
fwait
mov
pop
cmp
push
xchg
fiadds
push
push
ja
mov
fsub
mov
pop
xchg
xor
xor
in
ja
xchg
hlt
mov
rcl
mov
iret
ja
push
sbb
adc
cmp
xlat
in
xchg
sub
ret
test
pop
mov
addb
pusha
scas
xchg
push
out
dec
gs
add
lods
in
loop
push
int
lock
mov
cmp
cmpsl
xchg
inc
in
lahf
and
mull
dec
aad
pop
xchg
sbb
push
in
jmp
mov
enter
gs
adc
repz
scas
clc
or
inc
lds
dec
adc
xchg
jae
cli
rorb
pop
stc
xchg
iret
stos
cmc
scas
cmp
push
mov
xchg
repnz
sbbl
or
les
stos
lods
push
and
xor
sbb
add
iret
pop
xchg
cmc
adc
test
mov
jo
in
cmp
dec
je
mov
out
cmpsl
xorl
inc
rcll
stc
mov
lods
inc
jnp
jmp
push
inc
popf
ret
sarl
push
sbb
cmc
test
aam
outsb
scas
lahf
jl
rclb
add
insb
pop
jecxz
mov
fdivs
sub
pop
or
sahf
mov
push
sbb
xor
icebp
adc
push
ljmp
push
lods
repz
sub
adcl
or
mov
stc
jmp
scas
in
mov
dec
inc
xchg
pushf
xor
test
enter
nop
rcrl
movsb
lgs
les
jecxz
fsubs
pop
jg
out
dec
jge
popa
jecxz
and
dec
cmc
add
pop
jmp
movsl
aaa
sti
xchg
bound
fwait
insl
adc
inc
push
dec
push
in
mov
daa
mov
inc
or
dec
iret
mov
mov
and
cwtl
scas
cmp
data16
mov
aam
cs
clc
push
cld
or
lods
ret
jge
je
stos
push
mov
out
mov
rcrl
test
jcxz
and
or
loopne
shr
popa
mov
inc
push
push
pop
mov
xchg
dec
and
cli
mov
ja
mov
pop
out
adc
mov
xchg
and
xchg
pusha
mov
data16
sbb
jns,pn
pushf
dec
fwait
shll
add
icebp
jg
test
outsb
sbb
and
mov
ret
mov
cli
out
sub
mov
mov
out
and
fisttps
cwtl
das
gs
insb
cmp
addr16
push
xor
pop
xor
pop
dec
mov
dec
movsl
ror
imul
jge
lods
repnz
sbb
adc
js
dec
iret
test
xchg
bound
xor
xchg
push
int3
mov
sbb
jmp
xchg
out
push
loopne
push
pop
loopne
lock
add
dec
shll
push
xchg
cs
lret
shrl
out
xchg
cmp
cs
sbb
adc
lock
movsl
xchg
inc
mov
jne
and
jae
scas
sbb
pop
mov
fcmovne
outsb
in
daa
pop
xchg
fsubrl
in
xchg
out
call
adc
push
ds
insl
ds
mov
sbb
pop
cmp
sahf
cmpsl
js
cld
aam
lea
xor
pusha
or
sbbl
das
out
sahf
sarl
stc
push
mov
clc
sti
dec
lahf
cmpb
mov
sbb
jmp
adc
and
notb
scas
mov
test
mul
lds
cmp
xchg
lds
gs
and
cmp
mov
cwtl
out
mov
fiaddl
sub
popa
sahf
cmpsl
pop
jae
sbb
cli
mov
cmp
pop
enter
and
sbb
mov
shrb
dec
or
or
cmp
test
rcll
xchg
inc
add
push
xor
shl
movsb
jge
out
es
cs
mov
outsl
pop
inc
stos
jecxz
popf
loop
lret
mov
mov
pop
in
loop
cmp
fsubrl
in
fnstsw
inc
insl
lcall
dec
loop
mov
nop
push
jge
xchg
fadds
mov
fs
mov
int3
dec
enter
pop
and
out
cwtl
xchg
xchg
mov
mov
lea
xor
mov
and
dec
pop
stos
ds
jmp
lcall
dec
icebp
not
aam
add
mov
cld
mov
sbb
arpl
mov
test
mov
ljmp
adc
pop
lea
pusha
int
fdivs
ljmp
jmp
and
cmpsl
add
xlat
enter
jnp
ljmp
and
mov
rcl
adc
aas
cmp
xchg
lahf
out
mov
pop
push
sub
sub
inc
mov
mov
fbld
mov
jge
faddp
ss
sbb
add
imulb
xchg
jp
pusha
xchg
insb
sbb
and
inc
push
inc
addr16
mov
sub
sbb
pop
das
jg
pop
jmp
xchg
je
fadds
xor
test
idivl
mov
dec
loope
popf
rcrb
popa
movsl
cmp
out
cmc
ret
mov
jb
push
call
mov
sahf
inc
mov
lods
mov
arpl
xchg
dec
lods
mov
inc
xchg
fistpll
mov
sti
cmp
sarl
inc
jne
push
xor
push
cmp
fisttpl
cmp
dec
jnp
insb
scas
sub
aaa
mov
int
insl
imul
mov
fdivr
sahf
test
dec
adc
loope
fsubr
adc
andb
sbb
inc
fldt
add
fbld
test
int3
cmpsb
cmp
push
push
inc
int
insb
test
cmpb
imulb
sub
dec
in
push
and
rolb
out
bound
mov
xchg
cmpsl
jbe
xchg
gs
jns
stos
lods
pop
add
hlt
push
sub
into
push
jae
mull
pop
xor
xchg
mov
call
dec
sar
test
xor
std
scas
pushf
dec
pop
daa
sbb
jl
push
sub
cmp
sbb
cld
cwtl
subl
lcall
int3
cld
out
pop
jle
jae
push
daa
lods
stc
lds
flds
xchg
cld
fisubs
xor
jge
mov
jg
stc
inc
enter
pushf
or
frndint
or
and
jecxz
add
int
lret
mov
es
movsb
push
pop
nopl
sub
ss
or
push
clc
lahf
fistps
lods
int3
and
enter
sarb
jmp
cs
incl
dec
add
fbstp
stc
ret
aaa
dec
dec
ja
push
movsb
fsts
inc
hlt
ret
jp
push
rclb
sti
sub
insl
ret
ds
into
mov
cmp
pop
stos
es
mov
add
and
mov
xor
xor
lahf
rorl
fimuls
addr16
push
loopne
mov
push
inc
in
shrb
sub
ret
and
je
sbb
pop
lds
adc
pop
cmp
ljmp
push
icebp
hlt
mov
enter
js
add
inc
mov
int
hlt
mov
push
mov
dec
adc
cmp
xor
roll
mov
mov
jl
mov
dec
dec
sbb
xlat
pop
lea
or
mov
sbb
popa
shrl
lods
test
shl
int3
add
push
mov
lea
or
test
mov
dec
ret
std
popa
testb
and
les
int3
lds
outsb
jl
jnp
mov
rcll
fcos
dec
sbb
xchg
icebp
inc
aam
int3
mov
ret
hlt
mov
xchg
sahf
pop
jge
pop
loope
notl
push
repz
jae
cltd
mov
jl
mov
jmp
std
ss
insb
imul
pop
flds
lods
or
mulb
sarl
push
pushf
arpl
stos
and
daa
pop
mov
xorb
pop
jge
mov
pop
mov
and
cld
dec
push
sti
xchg
mov
mov
add
cmpb
push
cld
imul
subl
std
subl
push
inc
roll
inc
xchg
les
sbb
imul
outsl
xchg
or
pop
sbb
sbb
jl
mov
in
pop
mov
fstl
add
lret
sub
and
xchg
iret
test
mov
stc
xchg
sbb
bound
sarb
mull
pop
pusha
stos
lods
icebp
rcl
mov
mov
jle
jo
and
es
je
in
dec
mov
mov
lret
push
call
movsl
scas
mov
cmc
push
adc
xchg
dec
sti
ss
call
lock
shlb
filds
add
popa
insl
bound
arpl
pop
mov
mov
scas
push
in
mov
lcall
jmp
inc
xchg
or
mov
mov
lcall
mov
jle
pop
aas
adc
or
test
lock
mov
arpl
or
sahf
xor
notl
jge
add
cld
mov
scas
sahf
pop
mov
inc
cltd
mov
push
mov
fwait
inc
sarb
mov
mov
icebp
or
sbb
cli
mov
or
ret
lods
outsl
sbb
push
in
popa
dec
pop
fsubs
lahf
lret
push
fsts
inc
test
sbb
inc
mov
jg
jae
fistps
inc
adc
js
dec
data16
jae
repnz
dec
xor
cmp
mov
xchg
cs
rorl
sti
mov
aam
dec
cmpl
or
sbb
jp
pusha
push
hlt
push
sub
daa
shrl
push
fnstenv
push
ret
and
sub
cs
std
test
outsw
adc
xchg
repz
enter
shrl
adc
imulb
mov
cltd
adc
cmp
and
or
sub
lods
inc
jmp
xchg
or
dec
jbe
mov
adc
push
inc
jae
cmpsb
add
das
mov
dec
mov
jo
jecxz
or
cmc
add
fsubp
mov
jge
mov
inc
or
lds
fmuls
and
shll
pop
push
popf
xchg
or
inc
sub
mov
mov
pop
pop
pop
pop
sub
popf
sub
sub
jle
es
jecxz
call
pusha
adc
fsubrs
mov
mov
mov
xchg
lahf
add
mov
xchg
xor
mov
cli
fnstsw
dec
or
xchg
orb
mov
mov
jne
int
loop
sub
add
int
or
cmp
and
fimuls
cld
mov
leave
and
fs
mov
mov
fwait
lock
aam
call
lods
push
pop
sbb
push
test
cmp
nop
pop
int
int
arpl
in
pop
popl
and
faddp
stos
push
lcall
mov
cld
adc
idivb
jb
add
cmp
bound
sub
rclb
or
and
movsl
dec
loope
fs
lods
popl
cmp
jle
or
push
mov
mov
mov
jge
add
in
mov
jge
jns
add
push
adc
ljmp
scas
sub
inc
mulb
int3
fcmove
dec
jo
in
insl
daa
add
gs
lods
cli
ret
in
and
pop
xor
in
sub
ss
movsb
jnp
loope
xchg
nop
push
xchg
add
popa
pop
leave
cmpsl
sbb
xchg
sub
inc
addb
or
sbb
dec
lret
or
sbb
and
addr16
pop
hlt
insb
cli
sti
cs
lret
jo
adc
hlt
sbb
adc
and
jno
and
inc
inc
jb
in
sarb
loopne
in
inc
dec
jno
pop
jbe
lods
mulb
jle
shrb
fsts
fs
popf
pop
xchg
fisubs
loopne
fs
fisttpll
sbb
loopne
in
out
add
add
xchg
ret
lcall
leave
mov
mov
loop
and
fst
jge
push
dec
in
aas
mov
leave
incl
jl
enter
mov
sahf
js
das
mov
and
sub
fldcw
and
sub
ljmp
or
jne
out
outsl
push
lret
aam
dec
mov
insb
clc
out
sub
push
push
stos
xor
xor
jb
or
or
and
addr16
mov
mov
arpl
jmp
push
cmp
inc
dec
xor
fdiv
repz
pop
pop
mov
jne
push
ret
xchg
xchg
jno
or
jle
out
pop
testl
sti
sub
or
add
sub
aas
outsb
sub
fbld
push
lock
out
cmp
xlat
clc
cmp
aam
lock
xchg
popf
scas
sub
jno
fcompl
mov
dec
xor
inc
mov
inc
xchg
push
int
fldcw
into
inc
adc
ja
mov
push
mov
pop
test
dec
les
cmpsb
jle
inc
subb
xchg
hlt
test
cmp
dec
and
subb
fwait
or
jl
mov
frstor
push
jl
pushl
push
inc
adc
je
jbe
jecxz
inc
jnp
gs
or
notb
jae
enter
ljmp
pop
mov
dec
leave
icebp
in
call
cmp
sarl
ret
fists
mov
jmp
into
add
sarb
jle
jecxz
or
cmp
add
mov
cwtl
push
js
sub
repnz
mov
cmp
stos
push
add
int
in
dec
out
enter
inc
ja
or
and
dec
xor
nop
or
push
in
adc
fsubl
lahf
inc
idivb
mov
mov
xchg
jl
shlb
push
adc
jb
mov
xor
jo
popf
inc
loopne
rorl
xchg
xchg
repnz
push
rorl
and
fwait
adc
idivl
imul
ljmp
add
movb
ret
sahf
je
or
sub
push
jp
fdivl
in
adc
mov
jl
imul
adc
roll
imulb
icebp
or
sbb
jo
out
inc
fcoms
xor
cld
lret
loopne
ljmp
pop
test
nop
adc
incb
inc
mov
cmpsl
cmp
mov
cld
jbe
and
adc
mov
int
dec
cmpsb
dec
jnp
sarb
push
sub
and
lock
xor
jns
pop
mov
xor
iret
stos
add
fcom
jne
mov
jle
orb
jo
add
pop
fisttpll
push
in
ret
dec
pop
xor
dec
sbb
das
and
mov
jmp
rcll
lea
into
loopne
push
push
mov
lret
mov
mov
pop
mov
loopne
pop
pop
pop
dec
jns
and
adcb
lods
lods
sahf
xchg
pop
aaa
cmp
mov
es
in
test
sub
push
mov
ret
pop
bswap
or
inc
fimuls
dec
jns
movsb
bnd
fnsave
arpl
pop
rcrl
mov
push
mov
outsb
aad
shll
rorl
jb
cmp
in
sbb
fisubl
xor
out
mov
dec
loopne
or
mov
loope
add
bound
mov
xchg
lds
and
fldenv
mov
add
mov
out
sbb
sub
push
xchg
fnstenv
and
out
xchg
lret
jle
sbb
je
inc
out
and
adc
orb
sti
fldenv
ret
mov
inc
dec
icebp
push
mov
dec
shr
pop
mov
je
lock
add
insl
cs
popf
push
ljmp
movsl
xor
lock
in
and
js
bound
xchg
pop
sub
push
sti
xor
inc
jno
pop
push
mov
rcrb
aaa
daa
ja
pop
cmovb
loop
insb
inc
sub
xchg
js
out
mov
xchg
lret
jg
popf
cwtl
outsl
xchg
dec
cmp
dec
jl
dec
lock
sahf
xchg
inc
mov
dec
push
stc
jno
in
cli
adc
pop
xchg
push
adc
xchg
fwait
jg
jecxz
dec
sbb
hlt
mov
add
add
movsb
lods
loop
addr16
push
addl
lock
xor
repnz
and
sbb
int3
lds
mov
mull
dec
sub
push
mov
hlt
adc
pop
mov
jae
mov
or
scas
gs
clc
jmp
push
jg
pop
xchg
aas
lock
xor
hlt
sahf
fnsave
and
insl
pop
xchg
shl
out
add
and
cmp
mov
fbld
sub
stos
or
add
inc
sahf
mov
pop
scas
xchg
ss
push
cmp
scas
inc
pop
sub
enter
xor
mov
adc
ljmp
push
cmpsb
orb
mov
leave
rolb
mov
dec
bound
mov
inc
lahf
cmp
mov
mov
mov
rol
mov
cmpsl
mov
cmpsl
jmp
je
bound
or
mov
add
daa
pop
aas
mov
mov
inc
stos
popf
outsb
outsb
fimull
push
pop
popa
adcb
xchg
inc
mov
or
outsl
pop
mov
inc
fwait
call
idivl
jg
jmp
add
dec
fdivl
shrl
inc
ret
aam
enter
clc
fstl
inc
pop
sub
inc
aaa
gs
fs
xchg
inc
stos
push
xchg
fnsave
jg
rcll
gs
jp
movsb
nop
call
push
fimull
lods
in
jnp
mov
sub
and
lcall
rorl
cmpl
and
sbb
dec
and
xor
jae
inc
ffreep
mov
pop
mov
lock
icebp
push
in
dec
ljmp
jno,pn
xchg
in
mov
stc
add
mov
notl
push
inc
cmp
sub
and
add
xchg
enter
push
pop
insl
cmp
cs
out
jne
test
xchg
jne
lret
lods
add
xor
fadds
pop
xchg
aam
jg
pushf
fnstcw
add
es
fsubrl
fidivrs
xlat
test
hlt
and
fwait
xorl
rcrl
inc
out
repz
cmc
shll
daa
push
add
es
ja
call
adc
mov
sti
inc
scas
pop
adc
xor
out
cmp
test
jno
sub
shrl
sub
pop
cltd
lret
mov
cltd
lods
fwait
cmpsl
imul
or
jp
pop
ret
shlb
jno
cmp
scas
rorl
lods
inc
push
push
fnstsw
pop
fstl
add
insl
jmp
xor
push
cmp
loope
aas
cmc
outsb
mov
in
pop
outsl
pop
test
popa
xor
sbb
imul
roll
push
add
jg
inc
out
cmp
lret
adc
std
sbb
xchg
cmp
cmc
jo
subl
ja
xor
jecxz
xlat
and
pushf
nop
fisttpll
cmp
loopne
push
or
out
or
js
into
testl
das
add
decl
push
lret
adc
fistpl
add
ror
fldt
adc
mov
fidivrl
jp
cmp
jo
cmpsb
test
data16
aas
or
xchg
or
adc
xorl
test
push
cwtl
push
adc
movsl
pushf
xchg
mov
out
mov
loop
in
or
iret
sub
jbe
jnp
out
stc
and
outsl
loopne
sub
cmp
mov
fs
pop
dec
inc
stc
or
push
push
cmp
push
jecxz
popf
ret
insb
pop
loopne
adc
xchg
das
xchg
jne
stos
xchg
sbb
cmp
add
sub
insb
inc
xor
test
imul
insl
mov
mov
sub
insb
ljmp
jno
pop
int3
push
aaa
hlt
jp
mov
out
loop
xchg
cmc
shlb
xor
add
cmpsl
xchg
mov
or
les
xorb
xor
das
lahf
js
pop
cmc
es
in
or
pop
dec
popa
mov
sub
fstps
and
and
bound
dec
or
iret
xor
mov
les
stos
push
cmp
xchg
popf
mov
inc
les
cmp
cmp
pop
xrelease
xorl
jnp
iret
mov
std
sbb
xchg
xchg
push
and
or
sub
push
adc
popf
mov
jns
jecxz
lahf
ficomps
add
push
mov
test
aam
mov
call
sbb
icebp
sarb
lods
xor
xchg
push
sbb
mov
jecxz
stos
dec
fcmovb
jae
into
mov
lods
sub
sbb
outsl
or
pop
sahf
insl
test
enter
and
popa
cwtl
mov
cld
divb
cli
orl
rcl
pop
js
xchg
es
js
movsl
xor
push
fwait
popl
mov
and
fcoms
bound
outsb
cmp
into
jge
cmc
jg
hlt
imul
sub
add
add
pop
xchg
inc
mov
call
jb
xor
mov
push
addr16
cltd
icebp
sub
lret
imul
inc
push
inc
push
dec
mov
cmp
jge
cmp
mov
fdivr
sub
xchg
fists
or
adc
fwait
pushf
rolb
mov
les
sub
mov
sarb
imul
adc
mov
ret
inc
rcr
arpl
cmp
rol
gs
or
loope
out
sbb
jne
jbe
ja
lret
sahf
pmaxsw
jne
mov
xor
dec
jecxz
das
add
ja
jnp
cltd
and
cmova
mov
div
nop
lods
dec
fiadds
xchg
movsl
jl
xchg
loope
xchg
jl
adc
pop
adc
or
ljmp
mov
fsubr
xchg
ljmp
hlt
cltd
inc
subb
popa
xor
or
in
in
add
addb
loopne
sbb
jae
add
cmpb
jbe
xlat
mov
sub
cmp
test
or
sti
idivb
add
sbb
scas
out
lds
repz
add
sub
or
sbb
sbb
jbe
sbb
pushf
dec
imul
inc
test
insl
ret
call
sahf
mov
xchg
adc
nop
xchg
sbb
pop
rcl
leave
cmp
repnz
das
and
ficompl
movsl
inc
push
sar
inc
adc
dec
rcl
sbb
adc
xor
loop
gs
adc
inc
adc
sub
test
adc
cmpsb
data16
sbb
or
or
mov
enter
add
fisttpll
les
neg
mov
into
iret
aas
popf
sbb
cs
sbb
pop
test
xchg
pop
orb
sub
sub
jbe
xchg
cwtl
inc
call
addl
fwait
cli
mov
cltd
cmc
mov
iret
aad
repz
test
imul
push
xchg
dec
mov
inc
daa
dec
outsl
jb
pusha
sbb
cmp
mov
je
fcomi
xchg
out
movsb
mov
adcb
inc
in
or
sub
mov
mov
stc
mov
inc
jmp
shll
push
xorl
jge
or
inc
arpl
pusha
or
shl
dec
mov
and
adc
test
je
sbb
mov
and
repnz
sub
stc
outsb
pop
pop
adc
xor
lods
aaa
xlat
jl
aad
push
es
mov
xor
push
sbb
inc
nop
jle
leave
adc
and
dec
aam
sub
imul
jl
push
repnz
sbb
jae
cltd
mov
dec
adc
dec
jle
test
pop
test
jl
or
mov
dec
pop
or
mov
in
mov
and
loop
sbb
mov
adc
inc
in
cmpsb
adc
pop
lret
movlps
lods
test
jbe
xchg
ss
movsl
jb
cmc
mov
jecxz
fwait
add
nop
push
arpl
mov
jmp
sub
and
mov
imul
sbb
jo
fsubs
jecxz
in
mov
xchg
fs
into
dec
es
inc
mov
add
cwtl
mov
jae
mov
aaa
xor
fists
sarb
sbb
test
cs
fbstp
inc
popf
cmpsb
mov
pop
test
repz
fucom
mov
mov
rolb
mov
xor
icebp
inc
call
add
les
adc
xor
xor
lahf
fcmovb
dec
cmp
andb
mov
inc
roll
repz
sub
dec
outsl
rclb
ja
out
cmpsl
into
or
ja
popf
pop
mov
cli
mov
pop
repnz
sahf
jg
ss
mov
sub
call
out
loop
xor
sahf
sub
das
lock
in
or
outsl
cmp
sub
popf
sbbl
xor
add
bound
push
adc
dec
pop
test
das
fwait
clc
aam
jle
popf
mov
mov
jbe
insl
cmc
adc
addr16
fs
out
and
push
popa
jg
push
mov
pop
lods
pop
outsb
sbb
in
fdivr
inc
cld
pop
or
xchg
in
and
loop
pop
pop
jne
cmc
repz
scas
adcb
fucom
adc
testb
int
test
push
shll
mov
xchg
push
arpl
and
cmp
out
test
ljmp
div
dec
jge
push
and
ss
test
cmp
bound
inc
push
cmp
xor
push
cltd
testb
sub
in
xor
lret
insl
stc
clc
and
or
pushf
aad
inc
dec
sub
pop
fadds
cmovp
cwtl
mov
inc
push
xor
repz
sahf
push
sub
test
and
cmpsb
jb
imul
insl
roll
into
clc
jno
adc
fidivl
idivl
and
stos
xchg
and
loop
mov
mov
rcrb
ficomps
insl
fmuls
push
push
in
push
daa
adc
cmc
hlt
inc
ficoms
stos
push
test
sarl
cmpb
mov
push
cli
add
xor
sub
gs
test
sbb
into
mov
flds
dec
xchg
sbb
ret
icebp
mov
inc
xor
in
fildl
inc
aaa
lock
addr16
fimull
out
and
pop
test
outsl
sti
fwait
inc
ret
cmp
bnd
shlb
scas
or
add
xor
push
dec
pop
pop
adc
add
cmp
into
mov
jnp
mov
push
addr16
aad
das
mov
xchg
leave
sub
jge
sub
mov
fstps
or
sub
push
es
imul
movsl
push
xor
lret
ffree
cltd
xchg
call
cltd
mov
cmp
xchg
pop
shrb
nop
cmc
scas
cwtl
xchg
jl
mov
inc
xchg
cld
mov
sbb
aam
mov
and
pop
mov
pop
mov
icebp
cmp
sbb
and
out
in
jmp
ret
push
or
mov
xor
add
jmp
fucomp
loopne
mov
nop
sbb
scas
xchg
inc
push
cmovbe
mov
xchg
loope
xchg
mov
mov
icebp
fwait
jecxz
cmp
es
jle
mov
shrb
inc
fsts
cmpsl
les
sarb
adc
or
jnp
mov
ret
sbb
xchg
jbe
iret
push
divl
jl
cmpl
fbstp
push
push
or
int3
push
pop
add
je
jl
lods
pop
fstpt
je
and
xchg
ds
dec
cmc
pop
push
pushf
fmuls
adc
pop
pop
pop
shlb
mov
movsl
push
in
push
sbb
call
fwait
int3
ret
popa
xor
add
loop
popf
mov
iret
pop
cmc
pop
push
jl
out
addb
inc
mov
and
mov
repnz
cmp
lcall
dec
push
into
fisubl
xor
mov
xchg
inc
fwait
cmc
and
inc
and
or
mov
dec
shl
fldt
push
sub
and
add
push
add
mov
add
jb
stos
repz
dec
iret
sarb
jp
push
jne
neg
or
test
cwtl
hlt
and
pop
shr
loopne
push
call
xor
getsec
insb
mov
arpl
sbb
fwait
pushf
jno
iret
sub
jmp
jnp
lock
fsts
mov
adc
test
jge
movsb
shrb
outsl
dec
movsl
out
lods
adc
scas
sti
sbb
mov
dec
rclb
pop
lret
out
icebp
ss
pop
shl
add
adc
movsb
loop
inc
mov
xchg
mov
dec
lahf
sub
in
dec
mov
pop
inc
mov
jg
loop
movsl
pop
ret
add
jp
add
push
inc
lret
push
test
xor
sbb
inc
stos
fmuls
icebp
dec
push
push
aas
nop
mov
shr
mov
leave
pop
cmpw
jno
xchg
xchg
sub
add
push
dec
imul
pop
and
jg
inc
fcompl
mov
or
inc
jg
add
push
inc
xchg
add
in
enter
inc
in
push
pop
aas
std
xchg
dec
repnz
imul
jmp
fsubs
shr
stc
popf
mov
and
outsl
sub
inc
or
or
jo
pxor
test
ret
or
rcrl
cli
repnz
dec
xlat
sub
into
repnz
aas
addl
aaa
jbe
data16
mov
icebp
out
push
pop
lods
stos
ds
mov
mov
mov
adc
ret
addr16
pop
outsl
xchg
dec
sub
cmp
jg
into
ret
mov
scas
jb
shr
std
dec
push
inc
call
ss
in
push
pop
pusha
aaa
pop
lods
dec
mov
sbb
dec
push
mulb
loopne
insl
add
mov
andb
inc
and
pusha
out
push
pop
inc
sbb
inc
xor
cmp
jp
bound
jge
jg
ret
sub
and
icebp
and
xchg
test
cmp
jg
fisubl
insl
lods
scas
ret
pusha
xor
cwtl
inc
cmp
add
xchg
lods
daa
inc
cmc
repz
inc
push
lret
rcl
cmpb
fwait
cmc
jnp
icebp
fsts
jb
std
add
xchg
test
insb
imul
fidivrl
and
popf
sbb
sbb
or
sbb
dec
loope
scas
insl
loopne
int3
jb
stc
pop
nop
fdiv
cld
rolb
mul
cmp
jg
sbb
repnz
pusha
adc
shll
or
push
mov
xchg
pop
andb
inc
mov
jge
mov
cltd
pop
sbb
leave
arpl
and
or
mov
xlat
mov
insb
test
and
fidivl
loope
call
movsb
test
sub
dec
xchg
push
out
xchg
mov
pushf
cwtl
mov
xchg
mov
mov
cmpsb
sub
mov
cmp
loope
lret
cld
pop
sahf
xchg
push
shr
or
cmpsl
shl
stc
xchg
outsl
addl
cwtl
rorb
xor
lock
fmull
mov
lods
cmp
push
fdivrs
push
stos
mov
sub
sub
jecxz
pushf
sub
repnz
leave
xchg
inc
and
int
loop
nop
dec
test
sub
test
push
psllw
xlat
pop
out
stc
daa
or
pop
inc
mov
pop
pusha
adc
xchg
cmp
cmp
pusha
inc
mov
mov
and
ljmp
cmp
mov
cmp
push
push
scas
addr16
pop
in
cmpsb
jae
cmp
lods
pop
inc
inc
cltd
ret
add
pop
cmp
sti
test
add
movsb
and
icebp
xchg
lds
push
outsl
inc
xchg
aas
rclb
jno
test
jne
loop
ja
data16
xchg
imul
pop
push
adc
bound
jns
lret
sbb
pop
jb
and
addr16
adc
mov
in
ss
mov
xor
sahf
xor
push
xchg
sub
sub
add
and
mov
jg
pop
and
ja
cmp
mov
xlat
pushf
out
lods
push
sbb
mov
fs
pop
push
lock
cmpsb
sbb
insl
inc
imul
mov
fbstp
mov
lods
mov
imul
rcrl
clc
add
push
jbe
mov
testl
jae
es
js
or
in
dec
cltd
and
pop
test
push
xchg
sahf
or
mov
jmp
xlat
les
lcall
mov
pop
icebp
repnz
mov
ss
ja
in
xor
fmul
in
aad
cmp
add
cld
repz
sbb
fiaddl
inc
inc
in
js
movsb
pushf
cmc
movsl
mov
and
pop
lret
test
mov
pop
je
sbb
in
jmp
pop
ja
fisttps
and
test
addr16
cmp
mov
jns
mov
sub
adc
rcll
push
ljmp
enter
xor
sbb
movsb
pop
sub
mov
mov
dec
out
sbb
adc
js
mov
adc
aad
lahf
pop
sahf
sbb
add
daa
xchg
mov
mov
aam
fiadds
xlat
lea
pushf
sbb
jle
dec
cmp
pop
mov
test
pop
punpcklbw
jp
dec
shrl
nop
pop
cmp
cmpsl
lret
cmp
jl
push
loope
sbb
inc
popf
loope
or
loope
or
in
mov
arpl
xchg
out
lea
push
repnz
add
push
xor
dec
out
enter
sbb
dec
push
xchg
imul
pop
cs
out
inc
pop
inc
mov
pop
mov
out
into
dec
cmp
push
sub
or
cwtl
jp
or
ret
jb
imul
push
lret
stc
shlb
cmpsl
es
nop/reserved
cmpsl
pop
movsb
cmp
loopne
sbb
int
adc
add
push
test
mov
mov
inc
aad
adc
mov
fmull
icebp
inc
ds
inc
sbb
mov
mov
pop
shl
push
lods
push
mov
dec
jp
sbb
lock
jmp
js
xor
sub
enter
xchg
loope
inc
nop
sub
mov
add
jl
jmp
stos
inc
test
adc
jecxz
mov
sbb
loop
gs
ret
mov
scas
mov
fwait
inc
out
movsb
pop
iret
xor
ljmp
mov
in
ss
dec
in
popf
sbb
lret
inc
cwtl
mov
enter
outsl
cmp
fstpl
outsl
imul
inc
popf
add
cmp
jecxz
lock
out
into
adc
jnp
xchg
cmp
mov
xor
shlb
inc
ja
in
enter
test
cmpsb
popf
movsb
pusha
ret
xchg
insl
inc
dec
sub
fcoml
dec
aad
mov
cmp
stc
out
inc
das
sub
sti
xor
pop
in
aam
subl
xchg
and
jg
pop
or
enter
out
mov
movsb
adc
jnp
push
or
inc
cmp
cmpsb
test
xor
das
or
xor
pusha
into
add
push
xorb
push
mov
aas
push
das
lods
mov
loope
adc
sti
sub
dec
mov
xchg
cmpsl
add
std
xchg
push
into
xchg
dec
xchg
test
stos
fldt
sti
imull
add
pop
in
cmp
or
out
leave
jbe
add
mov
pop
jmp
insl
aas
adcl
stc
rcrl
jmp
mov
push
push
dec
cmp
iret
push
xlat
das
sub
or
mov
pushf
int
sbb
mov
sbb
xor
aas
and
stos
test
cmc
mov
aam
repz
adc
dec
lea
inc
iret
mov
sarb
imul
in
fiaddl
insl
orb
inc
pop
lcall
cli
shl
fstpt
cld
pop
jge
or
cmpsl
push
adc
dec
scas
and
or
cmpsl
sbb
xchg
inc
sahf
xlat
dec
mov
push
idivb
and
fdivs
gs
jb
ss
fs
ljmp
mov
mov
out
sarl
sbb
xor
jecxz
jnp
cltd
out
mov
loopne
ds
fists
call
adc
pushf
pop
icebp
sbb
in
fbld
jle
dec
push
ds
mov
ds
dec
pop
out
push
test
and
mov
pusha
xchg
fwait
inc
push
xchg
cmp
mov
mov
mov
leave
mov
cltd
lret
xchg
iret
sub
push
dec
fldenv
jp
jb
sub
jle
and
jle
and
sub
sub
pop
pop
movsb
mov
outsl
subl
and
jecxz
jmp
lock
jno
repz
lods
pop
jge
addl
push
fmul
das
iret
mov
testl
insl
inc
fdivrl
jae
xchg
aaa
dec
call
jecxz
mov
mov
ss
push
outsb
incl
xchg
dec
js
dec
adc
or
dec
mov
mov
jle
push
test
inc
sahf
mov
and
icebp
cmp
cmp
cmp
and
es
outsb
icebp
aas
aaa
call
jb
aam
adcb
push
mov
mov
lods
dec
daa
scas
mov
rolb
mov
mov
xor
popf
mov
add
cmp
shrl
jno
fisubrl
add
inc
mov
xchg
iret
dec
jnp
rcl
adc
movsl
inc
sub
fdivr
aam
shrb
js
in
pop
das
mov
test
sarl
in
int
or
or
sub
sbb
test
xchg
sbb
cmpl
inc
jne
fists
shrb
adc
iret
in
xchg
fwait
push
fdivrl
in
mov
add
pop
popa
mov
xchg
push
cmp
mov
and
push
sub
mov
mov
sub
leave
nop
add
xchg
test
mov
dec
inc
jb
sarl
adc
add
pop
cmp
dec
inc
aam
imul
mov
cli
lret
or
test
inc
hlt
lds
pushf
cmpsl
and
data16
pop
xor
stos
mov
dec
dec
imul
pop
sahf
out
leave
jo
cmp
inc
jo
push
test
insb
jmp
adc
or
sbb
dec
add
mov
lcall
loop
or
push
adc
js
nop
jmp
pushf
icebp
and
sub
push
xchg
pop
inc
cmp
outsl
addr16
or
inc
jmp
add
jns
cli
and
js
pusha
cmp
add
inc
pop
aaa
cmp
inc
in
imulb
mov
lcall
inc
and
push
cmc
cmpsb
dec
insb
pop
cmpsb
fisubl
or
dec
out
lods
xor
sub
ficompl
repz
dec
pop
sub
dec
xor
push
xchg
in
sbb
nop
inc
insb
div
sub
sub
int3
rorl
mov
lods
enter
roll
xchg
lock
cmpsb
lret
cmpsb
jbe
inc
lahf
mov
sbb
ficoml
adc
lahf
cli
cmpsl
xchg
leave
cs
sbb
push
inc
cmp
jg
xchg
xchg
mov
call
cmp
jae
mov
xchg
repz
stos
orb
mov
test
movsl
insb
cltd
test
xchg
inc
adc
mov
lock
push
inc
cwtl
or
or
rorl
nop
lea
dec
push
sbb
jo
fdivrp
clc
faddl
lea
mov
lret
and
out
lahf
pop
arpl
xor
pop
sbb
pop
pop
shll
mov
mov
nop
mov
cld
lret
pusha
bound
rolb
movsb
adc
mov
xlat
dec
pushf
add
jge
fldcw
xor
xchg
daa
xor
mov
das
stos
jae
push
inc
fsubr
sbb
push
fistl
ds
movsl
dec
repz
inc
inc
pusha
fidivrs
xchg
faddl
jl
rol
sub
fisttpll
pushf
cmp
push
adc
dec
inc
cli
jp
jne
pop
shrb
inc
daa
test
cld
adc
movsb
pusha
push
cmp
call
push
push
scas
data16
bound
and
xchg
das
jl
cmp
pop
adcl
add
outsl
cld
add
xchg
adc
mov
mov
idivl
xor
stos
sub
incb
cmp
es
call
xor
push
adc
jp
fistpl
push
and
int3
xor
xor
mov
popf
in
sub
dec
nop
push
daa
pop
pop
cmp
add
scas
mov
lahf
stc
xor
fnstsw
mov
and
mov
xchg
dec
add
mov
push
xor
scas
es
or
lahf
das
pop
jge
xchg
sub
aas
sub
dec
xchg
jae
loope
and
pop
push
call
es
mov
mov
adc
ja
loop
mov
dec
mov
cmp
aad
fcoml
lds
push
ficoml
xchg
leave
pusha
pop
jp
in
add
imul
cmp
sbb
pop
and
into
mov
xor
rol
sarb
adc
orl
push
test
mov
fldenv
inc
cmp
das
sbbl
jae
enter
outsl
mov
es
aad
cmp
sbb
fsubrs
jo
fldenv
pop
and
iret
adc
jp
scas
aam
or
outsb
pop
or
mov
xor
xlat
or
jb
sbbb
lea
movsb
wbinvd
sub
dec
add
fstpt
mov
mov
xchg
push
outsb
test
xchg
insb
test
add
mov
nop
pop
aas
scas
lcall
mov
jno
pusha
cmpsb
out
xor
in
adc
ss
pop
xchg
mov
dec
mov
mov
xchg
cmpsl
out
jecxz
mov
repz
movsb
jae
mov
outsb
xchg
xchg
loopne
jae
rcll
addb
jb
lods
lahf
icebp
cld
jno
aas
fdivrs
mov
push
in
imul
out
push
pop
cltd
and
sbb
add
repnz
and
xchg
notl
rcrl
int3
add
inc
fdivrs
mov
add
rorb
or
shll
inc
mov
sub
xor
int
cltd
les
xor
pop
add
sbb
cmp
stc
pop
lods
pop
xchg
insl
neg
lods
test
push
out
inc
loope,pt
jns
gs
movsl
jo
and
call
jge
or
push
push
cmpsl
test
inc
das
das
test
push
dec
jne
inc
imul
xchg
cltd
sub
lock
aad
sub
cltd
std
add
mov
rcrb
dec
inc
in
in
movsb
dec
pushf
pop
pop
jle
cs
pop
push
test
and
mov
jo
pop
add
dec
inc
out
clc
insb
outsb
adc
pop
jge
lds
rorl
ja
popf
mov
lock
jmp
es
and
or
pushf
arpl
mov
xchg
adc
inc
xchg
and
cmpsb
mov
insb
sub
pop
ss
sub
into
lret
push
jmp
sbb
sbb
int
xchg
in
mov
and
call
add
pusha
aas
dec
leave
push
jp
out
test
sub
jb
stos
scas
cmp
mov
iret
loopne
lret
call
call
push
jnp
setp
int3
xchg
les
push
sbb
arpl
enter
sub
mov
outsl
xchg
int3
xor
sbb
out
push
push
mov
sub
dec
repnz
mov
in
cmp
dec
mov
sbb
mov
mov
add
jg
addr16
mov
cmpsl
iret
out
iret
mov
and
mov
ja
push
jg
pop
orb
cmp
inc
mov
push
out
shll
addr16
les
aad
into
add
mov
lret
mov
mov
repnz
out
sbb
test
push
es
rolb
jecxz
xchg
mov
jnp
xchg
popa
ds
jb
dec
dec
xor
sub
leave
cmp
aam
fdivs
sub
inc
inc
cmp
es
into
mov
scas
dec
inc
add
jbe
mov
test
and
jbe
cmpsl
js
addr16
xchg
xor
inc
push
pop
push
sbbl
pop
es
xchg
xchg
dec
xor
mov
inc
push
push
repz
push
test
mull
xchg
das
cmp
insb
jnp
sbb
sbb
insb
fmulp
mov
sti
xchg
inc
addr16
lea
cmp
jnp
aas
sarl
pop
orb
cmpsb
enter
fcmovnbe
mov
lods
dec
daa
repz
pusha
add
ss
sbb
movsl
cmpsb
mov
dec
addr16
cmp
adc
imul
mov
mov
mov
fdiv
jbe
xchg
int
mov
push
aaa
cmp
dec
push
sbb
jno
ret
arpl
pop
mov
nop
arpl
arpl
xor
inc
sub
jnp
dec
lock
aas
jle
test
jns
lods
xor
jle
or
fcomps
das
pop
data16
xchg
mov
inc
adc
xor
test
call
rorl
vmfunc
xor
cmp
popa
adc
mov
idivl
xlat
push
lea
add
or
mov
movsl
mov
jb
loopne
or
lds
mov
xchg
repnz
xchg
js
iret
mov
jl
mov
pop
inc
xchg
cmp
lds
lahf
ja
es
sbb
fistps
push
mov
pop
pop
test
ja
and
inc
stc
into
adc
push
xor
aad
sbb
inc
roll
sbb
xor
or
outsl
xlat
or
sbb
mov
aad
repz
mov
pop
outsl
in
shrl
mov
not
insl
imul
sub
lds
notl
xchg
jle
in
dec
add
mov
test
aam
sahf
dec
rcrl
sub
xor
jnp
imul
imul
cmp
subb
push
in
dec
adc
psubusb
and
pop
enter
jne
pop
xor
and
cmpsl
lahf
or
daa
mov
rcrl
dec
out
pop
pop
dec
xlat
xor
add
mov
bound
mov
es
and
mov
xor
loop
fimuls
sub
cltd
andb
push
jno
add
dec
pop
pop
mov
or
call
daa
dec
jne
out
mov
push
mov
jmp
scas
and
lods
pusha
adc
jecxz
xchg
push
lock
push
dec
flds
cld
cmpsl
test
pop
cltd
and
pop
stos
ljmp
ret
icebp
bound
pop
sbb
cwtl
mov
cld
sahf
ja
jo
inc
pop
xchg
adc
mov
icebp
mov
loope
std
aas
jmp
xchg
xchg
hlt
leave
cmp
push
lods
cmp
xchg
jae
lock
ret
js
clc
pop
ret
popa
ds
add
sbbl
mov
sub
inc
jo
mov
std
sbb
int
in
mov
jmp
aad
lock
sbb
add
aaa
jns
mov
or
mov
enter
cmpsl
out
push
cmp
lret
andl
repz
pushf
pop
fs
push
mov
mov
aam
mov
jge
cmp
xchg
adc
jl
and
pop
fs
mov
cmp
xchg
jmp
push
jo
popf
adc
sti
dec
adc
and
lods
js
sub
and
rorl
pop
mov
dec
out
stos
mov
inc
jge
lahf
test
jmp
inc
stc
jbe
sbb
mov
push
mov
cmc
out
sbb
mov
sub
rorl
adc
scas
inc
sub
je
xor
sub
shll
and
sti
sub
xchg
adc
lds
fs
push
pusha
scas
cld
inc
out
cltd
xor
int3
icebp
adc
lds
adcl
and
mov
pop
mov
xor
sub
cli
pop
or
push
mov
pop
lret
xlat
push
mov
adc
xor
cmp
out
cmp
mov
sarl
jb
sub
push
push
ljmp
std
xor
adc
xor
xlat
push
and
mov
and
mov
fcmovne
xchg
lock
jne
sub
push
mov
fisttps
cmp
pop
xchg
out
mov
or
push
pop
icebp
arpl
xchg
faddl
ret
inc
sbb
dec
mov
cmpsb
xchg
lret
push
lret
pop
inc
movsb
in
and
sti
xor
adc
outsl
hlt
cmp
cmpsb
andl
clc
fnstsw
xchg
mov
dec
dec
mov
add
lcall
sub
sbb
cmp
cmpsl
aas
jno
or
mov
add
adc
dec
adcb
inc
or
pop
sbb
jecxz
aad
push
and
stos
ja
mov
sub
dec
std
add
mov
insl
mov
xor
add
mov
std
data16
push
lods
sub
adc
bound
mov
cli
push
pusha
test
mov
into
subb
fnsave
sar
into
int
das
lods
into
pop
jle
andl
rcrb
aaa
jge
sbb
inc
lahf
fwait
ret
pand
imul
or
dec
mov
dec
popa
xor
out
push
movsbl
clc
xor
xchg
and
fstpl
cmp
or
and
xchg
mulb
mov
insl
mov
jmp
scas
sbb
in
inc
test
jne
mov
pop
es
loop
imul
mov
repnz
dec
shrl
ljmp
outsl
inc
in
adc
pop
jmp
fisttpll
push
push
xchg
jo
popa
xor
jle
cmpsl
lcall
imul
pushf
mov
push
push
mov
xchg
js
rcl
sub
les
mov
out
sarl
and
call
mov
mov
cmp
jge
stos
rorl
and
and
gs
repz
outsl
pop
xchg
cmp
xchg
sub
push
add
inc
dec
pop
imul
dec
mov
in
cmpsl
lret
gs
fwait
leave
pop
daa
aaa
fidivrs
jge
fsubs
jle
push
idivl
mov
iret
negb
mov
push
enter
jle
rorb
aad
xor
dec
inc
bound
fsubrl
mov
subl
insb
xchg
mov
push
sarl
or
push
adc
popf
je
ljmp
insb
rcll
dec
mov
repnz
das
xlat
jae
xor
dec
ljmp
add
xor
push
scas
xchg
mov
and
js
xor
and
and
pop
and
mov
movsb
push
dec
mov
sub
outsl
pop
adc
outsl
lahf
and
out
dec
adc
aaa
testl
hlt
jae
mov
mov
int
nop
inc
add
call
out
xchg
xchg
inc
lods
mov
gs
sbb
adc
xor
out
inc
mov
xor
cmp
push
js
pop
mov
aad
loop
divb
mov
cwtl
xchg
jle
gs
jae
pop
pop
add
or
stc
ljmp
xor
jb
sarb
leave
mov
nop
jmp
sbb
shrb
pop
gs
ret
sbb
or
dec
pop
sbbl
cwtl
roll
mov
clc
sarl
xchg
out
lahf
xchg
add
sbb
aaa
or
outsb
cmp
test
jge
sub
nop
xor
or
adc
xor
xchg
loopne
fwait
mov
xor
pop
sbb
gs
repnz
rorl
dec
add
popf
enter
cmp
daa
mov
fnstsw
in
imul
aas
out
addr16
sub
imul
cwtl
xor
je
insb
notb
push
fs
lds
test
push
pop
call
stos
insl
stos
xor
push
scas
fildll
cs
mov
xchg
iret
jno
lods
lret
xchg
cmp
rcrl
cmp
mov
or
int3
fldenv
or
dec
pusha
mov
xor
jle
stos
test
sbb
mov
out
xor
std
xor
mov
aaa
call
pushf
icebp
push
cmc
push
jg
test
and
mov
lret
mov
scas
pop
in
jo
add
add
jns
clc
sub
push
push
shr
xchg
dec
adcb
mov
ja
movsl
leave
jmp
es
aaa
cmp
lret
pop
out
jl
jns
mov
adc
jns
lea
sbb
pop
sub
add
nop
and
sub
dec
fidivl
fwait
movsb
or
lods
push
push
stos
and
sub
roll
out
popf
mov
cmpsb
dec
push
mov
shr
dec
add
rolb
fs
aad
jge
movsl
iret
cmp
cmp
jo
sarl
nop
loop
sahf
jp
jecxz
jp
in
fmul
and
sub
sarb
inc
jae
xchg
pop
dec
cmp
push
xchg
mov
movsl
sbb
cmp
add
pop
mov
xor
cmpsb
outsb
aaa
into
pop
xchg
xchg
mov
xchg
adc
std
add
cmpsb
add
in
adc
ret
pop
dec
sbb
sti
add
loop
adc
es
imul
push
and
in
std
into
pop
scas
imul
notl
add
push
or
mov
rorb
in
xor
or
std
or
xorps
int
insl
add
mov
insl
idivl
loopne
leave
jp
ds
xlat
sbb
test
or
dec
lds
test
scas
int
jne
fmulp
je
add
sub
inc
clc
arpl
pusha
adc
xor
dec
jae
rorb
adc
repnz
jmp
adc
xchg
xor
mov
jmp
sub
scas
jl
mov
jl
out
cmp
cmpl
jo
add
sbb
jp
cltd
cmpsb
mov
cmp
cs
movsl
xor
and
and
repz
loop
jge
jle
push
out
mov
test
addr16
cmp
jns
adc
test
dec
jmp
xchg
divb
mov
cwtl
and
push
stos
pop
shlb
sbb
bound
jae
fadds
push
adc
test
push
mov
ds
arpl
push
lods
jle
mov
leave
outsb
cld
mov
mov
lock
cmp
mov
mov
testl
paddb
pop
out
in
push
inc
jl
cmp
mov
mov
outsb
and
sti
movsl
or
dec
data16
add
sbb
adc
jl
or
pop
in
test
roll
lahf
inc
pop
mov
jg
fisubs
xor
pop
xor
pop
and
add
mov
inc
vcomiss
jg
je
mov
lcall
mov
lret
dec
add
shll
pop
sbb
into
add
fucomi
cmp
out
jb
fidivs
out
gs
mov
in
in
cmp
mov
lret
jbe
sub
mov
push
mov
push
nop
cmp
pop
sub
sub
fcmovnu
popf
push
sbb
pop
inc
jp
loopne
loope
cmp
cmp
mov
cmp
outsl
leave
sahf
adcl
mov
sti
ss
int
repnz
mov
pop
adc
sub
add
sbb
pusha
push
loop
lahf
mov
xchg
xchg
push
insb
pop
lea
aad
aam
icebp
into
mov
orb
xor
mov
shlb
dec
jecxz
scas
xchg
in
mov
mov
insl
pusha
adc
dec
add
cs
push
dec
inc
ret
jg
push
xchg
cmpsl
in
xchg
sarl
fst
imul
rcll
add
or
and
jno
outsb
mov
jmp
out
popf
xchg
xor
inc
aas
in
mov
jecxz
xchg
loope
scas
lds
cmp
ljmp
xchg
mov
mov
add
and
xchg
enter
outsb
ret
loop
int
stc
or
mov
pusha
movsl
adc
push
jl
mull
jge
inc
inc
sub
xor
addr16
ljmp
push
mov
sbb
add
push
xor
ds
jo
mov
cmp
lock
outsb
inc
xchg
pop
dec
mov
in
sarl
jno
test
lret
sbb
xor
mov
lret
push
pop
out
pop
jmp
loop
and
inc
sub
sub
jno
in
test
or
int
mov
shlb
mov
out
mov
cmp
cmp
cmp
mov
in
mov
lret
lcall
lret
fwait
jecxz
jno
mov
mov
push
push
fistl
bound
scas
lahf
repnz
push
add
stc
add
dec
dec
arpl
xor
adc
mov
ret
xchg
es
push
mov
jne
daa
iret
jle
scas
dec
notl
jp
negl
adc
js
xchg
lea
and
call
cmp
push
mov
repnz
add
testb
add
xor
pop
jle
aas
lahf
fdivl
jnp
xchg
mov
mov
dec
aaa
cs
pop
ficompl
cmpsb
cmpsb
mov
call
lock
lret
clc
out
scas
and
imul
mov
andb
in
jo
fimuls
mov
rcrb
inc
dec
or
repnz
dec
sbb
sahf
dec
insl
sub
daa
pusha
xchg
sbb
sub
shlb
jb
int3
std
imul
push
or
rcr
je
gs
scas
into
sbbl
das
aad
gs
mov
push
inc
cmp
mov
int
pushf
stos
dec
ret
dec
mov
aaa
gs
cmpsb
cmp
jl
mov
dec
mov
or
and
sbb
les
adc
sub
xor
lock
std
outsl
inc
mov
loopne
stos
loope
inc
pop
lods
adc
ret
and
test
mov
sub
jns
in
les
in
les
dec
iret
test
jecxz
add
pop
adc
js
sub
lret
jno
inc
or
cmc
movsb
ficomps
pop
insb
inc
sub
fistpl
lea
xchg
and
pop
mov
sti
jno
push
divb
incb
mov
scas
out
push
mov
push
and
and
jl
jl
into
xor
jne
push
ret
pop
int
push
repz
ret
xchg
add
pop
jecxz
cli
pop
pop
pusha
mov
xchg
push
cmp
jp
add
fisubrs
rcrl
movsl
mov
pop
mov
push
hlt
shrb
hlt
je
mov
aaa
mov
and
enter
mov
sub
jae
inc
sub
dec
mov
mov
aam
dec
mov
cwtl
outsb
in
mov
cmpsl
pop
fcom
push
out
mov
cmpsb
movsb
jmp
jmp
mov
or
outsb
jo
adc
in
inc
mov
movsb
sub
xchg
gs
mov
adc
dec
and
lea
lock
cltd
add
andl
cwtl
or
insl
xchg
sbb
mov
outsl
cmpsl
dec
push
in
imul
add
xor
sub
mov
sahf
inc
jle
leave
push
iret
xchg
sbb
fisubrs
dec
mov
and
das
mov
leave
pop
pop
out
or
paddd
mov
out
scas
pop
hlt
mov
dec
addb
adcb
shrb
sub
bound
aam
icebp
mov
mov
lock
jae
cli
cmpsb
pop
jb
inc
lock
and
push
scas
xor
dec
sub
cmpsb
scas
movsb
test
pop
pop
mov
dec
test
xor
jecxz
mov
pusha
jp
xchg
je
mov
cmp
inc
sub
icebp
in
cltd
lods
rcr
test
fbld
mov
outsl
repz
inc
jo
mov
mov
leave
iret
jns
call
xor
imul
loop
rorb
cmpsb
cmpsb
inc
pop
cmpsb
cmc
jg
hlt
iret
xchg
xorb
xchg
jo
xorl
rorb
in
pusha
dec
xchg
and
ja
dec
stos
push
and
mov
fdivrl
push
in
shr
jbe
push
hlt
and
cmpsb
lods
push
dec
xor
adc
sbb
sub
test
sbb
lods
pop
out
mov
mov
sbb
dec
cmpb
lods
or
je
je
or
adc
lods
inc
xchg
inc
pop
mov
call
jnp
mov
pushf
mov
jge
mov
lea
and
dec
jl
xorb
pop
aas
das
mov
lods
or
loop
call
cmp
std
dec
xchg
xor
mov
pop
inc
push
imul
sti
sub
scas
or
pop
out
test
cltd
inc
in
xchg
lods
inc
imull
jg
lret
dec
lds
inc
scas
sbb
pop
dec
cmp
popa
nop
call
fdiv
loopne
iret
repnz
mov
mov
inc
adc
cs
std
xchg
es
jno
mov
int3
outsl
pop
mov
jg
in
test
mov
movsb
ret
jp
jae
pop
push
push
jg
dec
add
ret
xor
mov
adc
out
pop
pop
or
and
mov
popa
in
gs
inc
mov
xlat
imul
jge
fsubl
pop
add
add
push
sti
icebp
cmp
icebp
stos
pushf
pop
scas
push
add
mov
pop
and
xchg
shlb
shlb
xor
xlat
add
mov
jg
sub
xchg
mov
push
xor
jb
fcmove
adc
push
push
add
push
inc
xor
lods
sub
pop
fisttps
sub
loope
jno
xchg
pusha
pop
pop
shr
push
sar
pop
daa
test
jg
adc
repz
imul
xchg
jno
ret
mov
dec
push
xchg
jne
in
jge
lock
sub
push
lcall
rcl
into
push
cmp
loop
pop
cmpl
push
push
int3
jno,pt
out
jo
imul
add
and
ret
inc
fucomp
aam
xchg
adc
mov
dec
adc
jle
out
push
jbe
data16
push
or
and
dec
int3
or
mov
push
nop
cmpb
into
xor
pop
mov
push
xorb
sub
aaa
sub
cmpsb
push
in
sub
or
jp
lahf
pop
insb
add
sub
add
nop
loopne
insb
and
push
jo
out
nop
cmc
in
sbb
addb
xchg
repz
mov
adc
clc
fsubrl
mov
cmc
sub
test
int3
clc
aad
sbbb
lods
and
push
or
jno
dec
lods
inc
lahf
daa
xor
dec
lret
xor
or
test
lds
mov
fistps
jg
les
insl
jbe
je
ljmp
xor
lds
add
adc
xor
js
in
cmc
sbbl
loope
and
movsb
popa
jg
mov
idivb
cmp
cpuid
pop
cmp
sbbb
lcall
test
ja
lahf
sub
fwait
cltd
xchg
int3
iret
cmpsb
mov
imul
aad
and
lret
add
lcall
data16
cmpsb
sbb
inc
or
and
xchg
mov
movsb
jmp
xchg
sbb
sahf
mov
faddl
push
daa
dec
stos
pop
mov
repz
pop
sub
pusha
popa
rcrl
pop
popl
pusha
icebp
mov
rorb
push
cli
mov
cmpsl
push
push
inc
or
mov
lret
add
inc
data16
dec
xchg
fimull
dec
jl
jno
outsl
loopne
repz
addr16
jg
sbb
leave
inc
std
daa
pop
xor
cli
adc
mov
pop
push
add
pop
and
sbb
xchg
test
neg
mov
les
dec
mov
dec
cld
jmp
popa
and
cmp
dec
sbb
push
and
dec
mov
pop
out
mov
ljmp
setp
xchg
and
cli
fildll
imul
or
outsb
push
lret
push
jmp
insl
out
cmp
lods
insb
mov
dec
or
jle
std
xchg
pandn
dec
mov
pop
add
push
sbb
fwait
incb
mov
mov
add
jmp
sub
shrl
shr
jle
cmpsb
pop
fsubp
push
cmp
scas
ret
imul
add
outsl
popa
pop
iret
sti
xchg
jne
adc
lret
sbb
fstpl
test
std
daa
in
pop
pop
lcall
pop
incl
sbb
lock
ja
cmc
dec
xor
xchg
mov
xchg
mov
mov
rcll
or
push
repnz
decb
mov
std
fistpll
pop
xlat
adc
mov
add
out
ret
cmp
sahf
cs
imul
sbbb
fcomps
mov
xchg
xchg
or
and
pop
sub
jo
pop
pop
pop
mov
cmp
mov
mov
inc
fbstp
ja
leave
js
sub
popa
seto
out
cmp
cmp
cmp
lcall
test
dec
push
scas
jns
mov
inc
cmp
inc
mov
sub
or
mov
xchg
dec
push
scas
xor
add
rcrb
xchg
push
fwait
add
sti
test
faddl
sahf
pop
stos
fwait
inc
mov
mov
cmp
gs
daa
adc
mov
rorb
pop
mov
lds
xor
inc
mov
mov
movl
inc
or
or
out
or
sarb
inc
add
sbb
test
js
xor
int3
fcmovb
push
xchg
ficomps
push
loope
mov
dec
in
imul
repz
insl
sub
or
lock
std
mov
jmp
xlat
mov
std
repz
cmp
rcrl
pop
rcrl
sbb
push
sbb
test
xchg
adcb
mov
add
fldenv
adc
loopne
pop
push
lcall
jge
push
dec
pop
in
scas
dec
mov
and
pop
sub
mov
repz
push
mov
aam
adc
pop
aam
and
mov
shl
sbb
sbb
dec
push
cmp
cli
sub
stos
sbb
jbe
jl
sbb
cltd
cmp
add
and
jb
lods
adc
aad
dec
push
lds
sub
dec
mov
inc
mov
mov
cmpsb
jg
aas
pushf
mov
repnz
pop
add
jp
mov
dec
popf
aaa
ret
mov
in
mov
xor
or
scas
mov
jne
roll
testl
mov
sub
leave
cli
xchg
sbb
popl
call
add
mov
mov
aad
mov
sub
fadds
jno
sbb
ds
sbb
nop
xchg
aam
sbb
dec
lods
loope
jl
add
ret
cmp
push
mov
pop
jle
cmp
push
lea
inc
jle
daa
add
mov
and
mov
push
dec
jecxz
lret
push
mov
mov
data16
jbe
loopne
sub
hlt
mov
adc
push
fcomps
stos
stc
push
mov
pop
notb
cld
pop
sti
ret
jo
out
shl
fidivs
add
test
xchg
xchg
lahf
nop
and
or
je
jg
sbb
out
scas
addr16
rcr
xchg
fnstsw
cmpsl
xchg
mov
mov
sbb
jecxz
shlb
jo
mov
xlat
insl
popf
negb
push
sarb
iret
mov
repz
into
aaa
push
sub
aas
xchg
mov
push
inc
pop
sbb
in
sbb
lea
lods
dec
sbb
push
or
fisubl
adc
daa
inc
cmp
out
cmp
push
mov
insl
fs
stc
ds
nop
andb
insb
cmp
das
jne
jns
daa
sub
lahf
dec
cmpsb
sub
lret
inc
sub
ljmp
push
int
fsubl
rcl
xor
cmp
ror
mov
pushf
jno
push
jmp
sbb
mov
cmpl
std
fcmovu
or
and
fldlg2
lds
push
xchg
fcoms
mov
mov
adc
jecxz
xlat
add
int
dec
negl
dec
add
cltd
stc
mov
xchg
movsb
sub
nop
jg
mov
lds
and
mov
mov
push
mov
lret
daa
dec
pshufw
out
and
and
lods
loop
mov
subl
cmp
in
pushf
out
mov
rorl
js
shrb
ljmp
adc
inc
pushf
and
xorb
popa
call
or
and
shll
mov
adc
fdivl
mov
lcall
dec
push
data16
or
jbe
cmp
adc
mov
bound
filds
int
xor
fisubs
or
lock
icebp
and
lods
pusha
jae
ds
cmc
das
nop
xchg
int
xlat
sbb
push
cli
xchg
sbb
loope
addr16
inc
inc
cmp
adc
in
icebp
enter
int
xchg
xlat
cmpsl
stos
inc
dec
dec
mov
fcomps
idivb
add
pop
cwtl
pop
cltd
jbe
or
out
dec
das
or
sub
inc
mov
xchg
push
pop
gs
lds
fwait
xchg
enter
fcoml
add
leave
sbb
mov
mov
test
mov
cmc
nop
xchg
push
ljmp
mov
xchg
pop
ret
mov
pop
xchg
insl
xor
les
ds
stos
sbb
and
mov
jmp
push
inc
mov
mov
lret
sbb
mov
shll
test
fucomi
pusha
adc
and
xor
addb
jle
inc
fs
push
push
aam
fidivrs
sbb
or
mov
inc
sahf
mov
or
adc
push
pushf
jle
js
or
test
dec
stc
lds
out
push
push
call
fsubr
outsl
jle
bnd
in
fcompl
dec
jns
mov
mov
cwtl
or
inc
aam
ror
lahf
or
mov
xchg
mov
xchg
iret
mov
fisttpl
movsl
lds
stc
xor
fbld
add
xchg
xor
lahf
mov
adc
push
xor
and
sub
jecxz
arpl
push
xor
in
mov
pop
hlt
in
dec
dec
lret
push
out
outsl
or
and
daa
cmpsl
push
inc
add
pop
push
loope
cli
insl
and
mov
shrl
fstps
ret
aas
lcall
push
jne
out
sbb
fs
in
addr16
jne
int3
cmp
imul
sbb
dec
xchg
pop
sbb
inc
push
or
sub
pop
popf
inc
je
das
mov
fldcw
jb
cltd
sbb
jmp
int3
leave
lahf
jle
and
loope
jle
out
adc
ljmp
rcll
jbe
bound
leave
shrb
sub
and
push
insl
xorl
sbb
pop
sti
and
mov
outsb
popf
mov
sbb
imull
outsl
arpl
das
xchg
stos
rolb
jmp
scas
mov
sbb
in
cld
push
in
sti
xchg
adc
inc
je
dec
jb
lret
inc
mov
inc
xchg
fimull
inc
and
lds
mov
xor
mov
pop
and
mov
mov
cltd
loope
aam
xchg
pusha
mov
sbb
xorl
add
fmuls
shll
sbb
loopne
fs
mov
or
fnstenv
adcl
das
xchg
jae
ficoms
ss
pop
frstpm(287
pop
pop
inc
stc
es
xchg
sub
out
pusha
jge
out
mov
cmpb
pusha
mov
mov
stos
jge
add
add
push
cmc
outsb
xor
sub
xor
test
push
jne
lock
out
pop
cltd
cmp
cmc
jl
mov
fcomps
xchg
mov
cmpsl
dec
dec
mov
add
and
repnz
cmp
mov
mov
mov
xor
lcall
lahf
sbb
call
mov
xor
sbb
fisttpll
pop
subb
fisubrs
xchg
mov
scas
inc
popf
push
pop
es
mov
arpl
arpl
in
adcb
out
push
or
jge
mov
xor
adc
je
and
leave
out
call
pop
jl
test
daa
mov
sarb
jns
stc
jae
lods
popf
pop
outsb
fcom
sub
dec
jno
sbb
push
pop
fwait
xchg
adc
loope
rcrb
mov
inc
jo
sarl
jno
outsl
mov
or
lea
lods
cld
adc
repz
leave
xchg
mov
push
or
mov
stos
jge
xor
rcrb
cmpsb
fimull
pop
jnp
mov
xchg
xchg
add
nop
ss
pop
sar
rcl
dec
cmpsb
push
test
fwait
push
push
or
in
add
dec
xor
push
pop
shrb
adc
mov
icebp
adc
add
rclb
mov
cmp
mov
movsl
loopne
les
out
inc
fisttpll
jo
xchg
std
clc
xorl
and
cmp
clc
add
push
ficoms
lahf
cmp
loope
loopne
mov
mov
push
fs
pop
cli
sarb
jecxz
pop
push
cwtl
ss
test
nop
jne
xor
pop
into
sub
jp
je
xchg
add
cs
aad
inc
cmpsb
push
aaa
xchg
sbb
mov
or
inc
mov
pop
mov
adc
mov
stos
and
add
sub
mov
xor
or
or
and
lret
jns
dec
fsub
call
push
stc
jo
mov
icebp
sarb
stos
daa
daa
add
xchg
jb
mov
arpl
push
sub
sbb
lea
dec
xchg
jns
ja
dec
dec
aad
or
repnz
inc
dec
stc
loopne
std
loop
sbb
pop
adc
int
hlt
cmpsb
leave
mov
cmpsb
mov
mov
jbe
loopne
dec
jge
jb
aas
and
pop
fstl
mov
adc
mov
dec
out
dec
add
arpl
movsl
call
pop
jg
fs
ss
mov
cmp
bound
mov
dec
shr
enter
out
adc
rcrb
shlb
mov
inc
cmp
ret
imul
or
cmp
in
sub
gs
pop
adc
out
or
cmp
or
or
push
daa
mov
into
rcl
inc
test
and
mov
xchg
xor
sub
jge
pop
dec
loop
aas
adc
or
push
xor
out
cmpsl
dec
adc
pop
xor
cmpb
push
jecxz
mov
scas
test
jecxz
adc
pop
shll
cmp
mov
mov
adc
inc
dec
les
je
jmp
loope
int3
mov
jg
movsl
sub
jg
loope
mov
dec
ss
daa
adc
pusha
sbb
cmp
call
clc
loopne
loopne
les
lahf
adc
ja
add
push
mov
dec
dec
pop
out
icebp
jp
jl
int
and
popf
or
sub
mov
or
pusha
daa
push
roll
adc
movsl
in
fdivrs
inc
xchg
adc
pusha
sbb
jnp
pop
and
adc
repz
sub
lret
sbb
mov
sub
or
movsl
repnz
inc
enter
jl
sti
xchg
jo
mov
js
push
aam
dec
cwtl
mov
sbb
sub
add
imul
mov
sub
rorb
pop
jo
mov
xchg
mov
pushf
jnp
or
mov
pop
xchg
ss
xlat
push
rcrl
imul
insb
rolb
cwtl
decl
mov
mov
in
pop
cld
mov
add
jecxz
stos
movsl
cs
pop
sbb
lret
cmp
je
cmp
aam
pop
lods
xor
push
xchg
ffreep
movsb
push
push
mov
inc
inc
push
fisttpll
les
jp
pop
and
cmp
stos
add
nop
popa
out
and
sub
repnz
pop
adc
sub
imul
das
fdiv
push
mov
cmovs
aad
push
xchg
mov
or
mov
repnz
fidivrs
sub
push
lahf
fucom
push
cmp
pop
in
out
stc
clc
fcmovb
add
out
cmp
or
lahf
test
shrl
pop
cwtl
fbstp
adc
pop
adc
shr
cmp
jae
add
ret
int3
jmp
arpl
ljmp
dec
enter
sbb
dec
sbb
aas
fwait
mulb
push
xchg
xor
test
punpckhwd
aaa
and
repnz
push
sbb
ret
adc
xlat
aad
jg
scas
std
adc
leave
push
jno
add
pop
enter
mov
pop
fsubl
hlt
dec
sahf
push
or
adc
dec
push
aad
mov
pop
stos
fst
and
inc
xorl
repnz
pop
movsb
pop
pop
es
test
dec
dec
mov
push
inc
stos
int
sar
push
popa
outsb
mov
pop
jle
test
daa
das
xchg
xor
int3
lods
addr16
mov
push
ret
adc
std
movsl
sub
push
jmp
int3
dec
cmp
std
or
push
cli
mov
lahf
inc
mov
rcrb
or
or
xor
out
fs
pop
andl
jb
hlt
mov
shlb
pop
inc
push
ficomps
and
lods
sub
mov
scas
or
pushf
cmp
xchg
xor
mov
adc
stos
cmp
mov
incl
jne
test
in
test
aam
rcll
aad
insl
xor
lods
divb
sbb
ljmp
sbb
fdivrp
fidivl
xor
mov
inc
je
dec
insb
movsl
in
sub
inc
sub
mov
insl
std
imul
loop
sub
mov
rcrl
ffreep
sbb
and
sub
repnz
xchg
orb
sub
test
push
out
stc
push
jns
inc
mov
xchg
mov
xor
push
jle
pop
loopne
movb
test
xor
ds
xor
push
adc
mov
cmpsl
cmpb
xor
cmc
push
add
pop
ret
mov
mov
fsubs
dec
mov
cs
and
mov
inc
int
inc
roll
xorl
pop
xchg
dec
test
mov
mov
fldl
sub
stc
sub
out
jp
inc
dec
lds
sbb
push
pop
iretw
adcl
sub
test
cmpsb
pushf
pusha
add
aad
cli
std
ss
xor
insb
add
cmp
and
push
sti
push
rolb
sub
aam
mov
mov
mov
jb
sub
pop
mov
mov
mov
nop
lahf
xchg
jo
cmp
popf
sub
stc
add
ret
xchg
iret
or
mov
loop
add
inc
xchg
call
jmp
lret
gs
mov
push
mov
and
ret
js
and
shlb
ds
mov
xor
cwtl
in
dec
xorl
jb
jge
mov
clc
dec
les
add
test
cmp
inc
stos
push
inc
mov
or
xchg
lahf
mov
adc
rsqrtps
rolb
and
lock
cmp
std
stos
out
fidivrs
rorb
dec
jnp
popa
push
or
fs
mov
cwtl
or
int
loopne
push
push
add
sti
imul
outsb
and
cmp
jp
fmull
pusha
inc
sub
jmp
sub
mov
aaa
arpl
rcll
or
aad
ud1
scas
pop
cmpsl
cmpsl
inc
mov
mov
loopne
loopne
add
mov
and
lock
mov
je
outsb
daa
adc
or
sub
inc
sarb
bound
mov
cltd
and
stos
negb
dec
mov
out
jns
jb
pusha
in
repz
mov
sahf
daa
pop
rcll
add
int
jecxz
cltd
faddl
inc
dec
gs
xchg
ljmp
sbb
insl
js
and
xorl
test
add
imul
loop
mov
nop
in
scas
aad
aas
scas
sub
fabs
test
pop
push
push
rorb
push
or
scas
push
lock
sar
cmp
outsb
add
aad
pop
pusha
aad
xchg
sgdtl
fs
inc
cli
movsb
std
xchg
mov
push
aam
outsb
lods
fwait
jg
repz
mov
fwait
dec
scas
out
test
notb
mov
xorb
inc
popa
cltd
and
sub
xor
dec
iret
cmp
pushf
push
pop
cmp
test
pusha
es
xor
xchg
negb
lret
add
popa
pushf
add
dec
imul
dec
push
xor
jp
cltd
dec
or
in
push
adc
movsb
mov
or
mov
in
inc
hlt
loopne
sub
jno
test
and
and
lods
fstl
leave
and
mov
xchg
sbb
fcompl
jmp
std
les
inc
fsubs
scas
mov
mov
inc
push
and
popa
inc
xor
xor
fwait
les
cltd
in
mov
pop
jne
popf
pushf
movsb
xchg
aam
jae
jo
imul
xchg
sub
push
and
add
fidivrl
outsl
xadd
lds
push
pusha
aas
jo
cmc
pop
sub
mov
pslld
xchg
jg
and
cs
enter
pop
inc
jnp
ds
jae
stos
out
repz
fmuls
loop
orl
pop
mov
loopne
out
mov
pop
pop
imul
adc
fidivrs
mov
inc
jno
cltd
cmpsl
cmc
mov
out
imul
shrl
push
das
not
xchg
dec
push
pusha
cmpsl
ret
sub
add
cwtl
mov
lret
dec
mov
add
test
push
fldt
sbb
out
je
cli
mov
fs
shll
leave
mov
mov
pop
lock
icebp
mov
mov
mov
cld
xchg
fbstp
mov
shlb
test
in
pusha
push
lcall
int
pushf
mov
inc
pop
mov
adc
or
lcall
cmp
mov
test
mov
mov
dec
ret
xlat
xchg
jno
aaa
out
test
mov
roll
lahf
jbe
int3
and
xchg
stc
sbb
fs
mov
sub
mov
outsl
sub
mov
cmp
pop
push
pandn
jbe
scas
int
pop
in
and
jmp
inc
jne
pop
or
push
add
cltd
dec
fidivrs
ds
pushf
lcall
imulb
jl
pop
sti
stos
xchg
jb
xor
repnz
or
lds
mov
mov
xchg
fbstp
cmp
fnop
ja
ret
sahf
aaa
and
push
mov
push
push
mov
daa
cltd
sbb
add
jle
xchg
mov
jg
lock
inc
or
cmp
add
and
mov
adc
imul
test
cmovno
dec
pop
mov
sbbl
out
out
sahf
js
xor
es
and
testl
loop
adc
in
xchg
fsubs
pusha
sbb
sbb
jmp
lods
push
adc
sub
cmp
out
jmp
sub
cmp
int3
pop
andl
xchg
ret
and
lock
or
and
clc
add
fildll
arpl
cmp
push
fstpl
cli
je
fiadds
lahf
adc
loopne
std
xlat
mov
mov
gs
out
mov
mov
adc
cmc
cmp
xchg
dec
inc
nop
lahf
fistps
icebp
xor
fbld
test
mov
dec
call
mov
loop
clc
repnz
repz
clc
jmp
pop
es
sub
test
imul
popa
int3
test
jg
movsl
sahf
shl
cld
pop
std
cld
repnz
daa
ficompl
inc
hlt
inc
das
arpl
insb
add
stos
xor
jmp
dec
lods
fld
mov
dec
mov
xchg
add
pop
int
xor
lret
jecxz
je
ret
sbb
arpl
push
adc
inc
test
popf
push
cmp
push
mov
xorb
ret
push
xor
enter
cltd
mov
bound
stos
xchg
rorl
dec
rcl
push
data16
lods
jl
cmp
mov
mov
xchg
xor
sar
mov
mov
pop
stos
aaa
jns
push
inc
adc
std
push
push
fsub
mov
pop
mov
xlat
scas
xchg
in
add
hlt
mov
xor
fs
dec
imul
adc
out
and
and
int
push
sti
push
stos
pop
sub
mov
or
leave
push
pushf
sub
xor
fmulp
push
jae
jb
enter
sbb
add
adc
pop
adc
ja
sbbb
jl
mov
filds
fidivrl
lret
dec
mov
mov
mov
jl
mov
repnz
push
rolb
xor
inc
in
mov
sub
adc
xchg
cld
subb
sbb
inc
add
sti
out
cli
and
add
aaa
add
cwtl
adc
sub
jp
add
lods
adc
cli
add
js
push
push
xlat
sbb
push
xor
pop
lahf
sbb
cmp
jnp
add
into
fbstp
imul
lret
mov
lock
out
push
hlt
sub
sbb
rorl
outsb
jo
addr16
and
lea
xor
ss
ret
pop
push
daa
lods
in
and
lods
mov
pop
cmpsl
pop
pop
into
daa
sbb
xchg
outsb
or
push
pop
xchg
es
mov
add
dec
lahf
insb
jno
lods
das
cmpsl
pop
pop
mov
test
sbb
jbe
cmp
stos
push
mov
adc
jns
mov
aad
in
andb
scas
push
push
das
mov
lahf
daa
loop
pop
in
dec
out
sub
mov
ja
fxch
xchg
push
sbb
inc
sub
pop
fdivrs
cmp
loop
sbb
or
cmc
btr
xchg
stos
cs
jbe
mov
out
xor
into
pop
pinsrw
ljmp
jecxz
mov
into
es
sbb
test
jle
mov
inc
fucom
popa
mov
push
xchg
sbb
pop
jnp
dec
adc
imul
adc
in
stc
lcall
popf
or
mov
jle
pop
mov
loop
jge
jb
and
cmp
xchg
sti
jl
mov
sub
test
pop
in
movsb
fisttpl
aaa
test
jmp
pop
icebp
add
mov
mov
mov
out
pusha
sub
bound
cmpsl
and
inc
dec
mov
jmp
xchg
and
mov
push
mov
inc
test
or
ja
xchg
lcall
pusha
rdmsr
fmull
xchg
shlb
mov
mov
jae
xchg
scas
pop
xor
cmpb
mov
stc
pop
sub
push
shll
jecxz
scas
stc
lcall
jmp
pop
xor
fsubs
out
daa
je
sbbl
adc
push
dec
push
scas
popa
fidivl
scas
popa
push
jb
inc
cmp
cmp
arpl
push
orb
and
sbb
adc
lahf
outsb
vmovlps
ss
mov
lods
jp
mov
cld
movsl
push
jno
push
lcall
test
loop
mov
addl
ds
add
add
jmp
adc
fimuls
push
not
push
xlat
xchg
lret
jbe
cmpb
inc
xor
push
insb
movsb
jl
fwait
dec
orl
jnp
out
adc
fildl
jl
xchg
lods
rol
and
mov
mov
jmp
cmp
shld
adc
cmpsl
mov
jns
icebp
push
jmp
pop
sbb
sbb
and
jae
ffreep
pop
aam
or
and
add
leave
leave
addr16
xor
mov
repz
sarb
cli
add
rclb
leave
jp
add
mov
fsubrs
cmpsb
cltd
jae
jae
popf
jne
jbe
shll
sub
inc
enter
xchg
cmp
mov
pushf
dec
sub
adc
call
outsl
sbb
mov
cwtl
jmp
jle
test
or
jle
stos
sub
jg
das
pusha
inc
repnz
dec
xchg
jo
inc
mov
nop
add
ds
fs
or
jb
jg
cltd
out
sub
mov
daa
cwtl
sub
call
hlt
ret
iret
or
loopne
jp
mov
and
aad
fdivr
std
lret
sbb
fmul
lds
mov
lcall
js
imul
inc
dec
sarb
dec
shlb
inc
sub
ds
ljmp
nop
inc
nop
es
fstpl
mov
mov
mov
adc
pop
and
pushf
xor
sub
cmp
xor
lahf
aas
dec
bound
cmpsl
sub
hlt
dec
lret
data16
mov
imul
or
stos
data16
or
mov
int
addr16
mov
je
pop
in
mov
push
jecxz
push
and
sub
jecxz
inc
mov
jae
xor
out
fidivs
mov
jb
addr16
call
stc
hlt
pop
xchg
lret
aaa
and
adc
jp,pt
sub
stos
mov
sbb
push
mov
lea
pop
ljmp
rep
mov
pop
xor
cltd
pop
fadd
jge
lods
cmc
lcall
xor
jmp
dec
jecxz
shlb
xlat
clc
pop
shlb
gs
stos
stos
xchg
dec
into
mov
mov
ss
adc
push
loopne
lcall
push
sub
dec
lds
out
sbbl
mov
mov
mov
out
push
sub
adc
rcr
inc
push
jl
loop,pn
mov
shll
jle
call
pop
test
pushf
ljmp
pushf
call
in
pop
xlat
sub
aas
or
ficomps
sbb
push
in
jp
mov
pusha
lea
movsb
inc
in
push
push
out
adc
xchg
fimuls
loop
in
xor
inc
roll
in
loop
push
dec
push
ss
adc
pop
movsb
mov
push
dec
push
aam
push
push
and
dec
xor
pop
mov
cmp
jbe
mov
pop
sbb
pop
mov
lock
add
push
lret
sbb
mov
inc
jnp
mov
fsubr
or
mov
testl
jae
mov
std
sahf
fwait
and
into
and
adc
jo
xor
dec
bound
lods
sub
cwtl
in
xchg
repnz
test
cmpsl
mov
and
adc
or
mov
gs
dec
stos
imul
cmc
daa
mov
jns
push
imul
scas
sbbl
ret
cmpsb
push
jle
mov
dec
sbb
lret
mov
inc
and
ret
stc
out
or
xchg
ret
push
movl
nop
adc
mov
stos
ss
xchg
xchg
push
cltd
inc
neg
mov
sti
add
loopne
in
test
test
sub
mov
xchg
out
dec
pop
aam
popf
lods
into
jb
insb
inc
xchg
adc
das
sbb
jno
jmp
push
shl
jmp
das
xor
lret
call
fiadds
mov
mov
add
addl
loope
mov
mov
gs
inc
sub
jge
imulb
jae
dec
mov
jno
sbb
xchg
adc
push
shlb
mov
mov
in
pop
pop
dec
jmp
add
inc
or
sbb
mov
int
push
hlt
pusha
cs
lret
fistl
sbb
cmpsb
fdivs
push
mov
leave
push
leave
js
jecxz
js
xlat
push
pop
mov
xchg
flds
mov
mov
xor
mov
mov
shrl
lret
fiadds
and
ss
jne
xchg
aam
push
inc
mov
rorb
std
scas
cmpsl
push
xor
adc
fsubrs
sub
cmpsl
enter
mov
and
push
inc
dec
ret
add
call
sub
mov
inc
mov
push
scas
fs
std
fpatan
imul
jge
dec
or
xchg
lcall
pop
sbb
xchg
sbb
and
xchg
push
mov
pusha
xchg
in
add
repz
out
enter
cwtl
fildl
pusha
adc
pop
or
cli
imul
dec
or
cmp
cmp
insb
cmp
movb
and
ja
andl
cmp
add
xor
int3
enter
pop
xchg
neg
out
push
sub
lahf
movsl
mov
jge
push
mov
icebp
test
int3
daa
das
inc
push
sub
inc
ds
fwait
cmp
jg
divl
xorl
rorl
aaa
smsw
rcr
int3
fildl
add
lods
sub
mov
in
int3
mov
sbb
lock
inc
push
jo
xor
out
mov
push
cmp
sub
mov
xchg
fcoms
icebp
dec
loopne
addb
sub
sub
mov
mov
adc
sbb
dec
push
popa
cmp
int
mov
jns
leave
xchg
cltd
out
lahf
outsl
push
fildll
mov
rcrl
sahf
dec
push
ss
ljmp
sub
xor
mov
adc
dec
sbb
je
pop
inc
xchg
test
shrl
mov
into
dec
jb
ss
insl
fstpt
mov
dec
icebp
shlb
push
popf
data16
mov
js
mov
cmpsb
or
xor
adc
mov
cmpl
mov
mov
or
int
rclb
mov
les
sbb
xor
push
bound
repnz
mov
fs
xchg
push
mov
mov
in
mov
addl
jb
lret
jns
insb
mov
jnp
int
dec
popa
pop
ja
mov
jnp
lret
xchg
mov
pusha
int3
outsb
out
iret
jg
ffree
mov
les
imul
cwtl
cmpsl
js
pushf
stc
mov
adc
lea
dec
inc
push
xor
add
xchg
stc
insl
inc
push
cmp
cmp
lods
add
flds
ret
jl
adc
jns
and
or
enter
adc
push
inc
cmc
adc
and
aas
xor
cmpl
int3
fwait
das
push
leave
mov
sbb
mov
in
and
mov
sbb
scas
data16
mov
orl
xchg
push
mov
sarl
mov
cmp
ret
cwtl
pop
and
mov
pushl
mov
pop
iret
clc
es
push
ds
cmp
pop
test
xchg
cmp
lea
mov
daa
mov
fst
xchg
dec
cmp
jge,pt
mov
je
mov
es
sar
lds
add
adc
dec
shll
or
dec
dec
dec
enter
cs
or
and
jae
xor
test
fdivrp
cli
sbb
jl
mov
lods
loopne
push
popf
sub
adc
xchg
ss
sub
push
movsl
push
stos
ss
fnsave
arpl
xchg
sbb
mov
shlb
inc
pop
jns
outsl
mov
cmp
or
cmpsl
adc
bound
push
imul
cmp
cmc
test
mov
adc
mov
cs
mov
and
test
aam
fwait
inc
in
push
push
push
dec
xchg
pop
cld
insb
test
cwtl
cltd
js
sub
repz
xor
and
sti
xor
mov
cmc
dec
add
sbb
insb
loopne
add
inc
out
or
test
mov
outsl
cmc
pop
push
sbb
clc
stos
jle
inc
jmp
and
mov
stc
idivb
fdivs
or
es
jb
pop
icebp
and
aas
shlb
mov
nop
fcoml
cmpsb
pushf
fcomps
cltd
aam
sub
mov
mov
mov
scas
xor
repnz
fildll
cmp
jecxz
and
xchg
loope
cmp
int
sbb
xor
icebp
les
mov
lret
outsb
aad
decb
mov
jge
and
lods
ss
notb
movl
adc
mov
add
jg
into
or
pop
sarl
bound
sarl
push
adc
xor
pop
rolb
mov
xchg
inc
jno
mov
popa
and
les
sub
pop
lahf
in
add
mov
mov
mov
xchg
out
aad
out
popf
clc
push
data16
push
mov
jge
or
cmp
sarb
dec
dec
fld1
enter
insl
sti
ret
pop
shlb
addb
and
shrb
mov
lods
dec
int3
xor
sub
loop
loop
xchg
mov
mov
cld
or
inc
imul
adc
push
fldenv
adc
movsl
clc
inc
int
std
adc
pop
sub
outsl
or
mov
mov
out
arpl
push
cmp
sub
stos
test
jl
scas
dec
divl
cmp
ja
inc
lret
push
dec
and
cmc
in
push
mov
mov
add
pushf
iret
or
xchg
scas
and
sub
mov
lods
cmpsb
push
sarl
leave
pop
scas
ja
call
fdivrl
xchg
lods
repnz
arpl
into
cmpl
ret
test
ret
ret
fists
or
pushf
les
outsl
fs
fcompl
out
mov
mov
aaa
adc
push
jo
inc
ret
xorb
mov
testb
sub
outsl
cwtl
ljmp
jge
shll
pop
ror
lea
pcmpgtd
das
lods
dec
shlb
fldt
test
cmc
inc
jg
add
jg
jbe
xor
pop
iret
sub
inc
adc
xchg
sbb
or
cmp
jle
test
pop
test
sbb
ljmp
fsub
insb
fildll
xchg
aam
sub
dec
imulb
out
aas
and
mov
clc
out
pop
dec
in
and
xor
inc
jle
enter
xadd
into
xor
mov
clc
ret
push
sarb
testb
cmp
mov
fadds
xchg
mov
sbb
out
xchg
mov
mov
adc
hlt
lret
and
fildll
sti
jnp
repnz
sbb
clc
rorl
mov
aas
repz
xchg
scas
rorb
stc
in
cmp
jno
lcall
add
dec
dec
push
test
idivl
mov
imul
shl
mov
inc
pushl
movb
in
shrb
dec
push
xchg
movsb
int
in
jp
add
mov
shrb
jg
int
mov
test
jg
in
adc
pop
mov
push
out
push
push
inc
pop
adc
pop
fwait
adc
mov
test
movsb
ret
xchg
or
xchg
and
pushf
mov
or
pushf
mov
cmp
loope
outsl
jp
and
or
imul
xchg
adc
pop
or
add
push
jns
test
xchg
sbb
sub
dec
movsb
sub
lods
enter
adc
lods
mov
popf
js
jae
add
dec
aam
lcall
mov
adc
mov
push
dec
cpuid
adc
shll
aas
jmp
push
mov
lret
jmp
lods
rcrb
cmpsl
test
nop
mov
mov
dec
mov
inc
xchg
xchg
jle
sub
mov
daa
adc
push
int
test
inc
imul
mov
push
hlt
flds
xchg
daa
lcall
lret
std
mov
jno
pop
mov
in
js
mov
or
cmp
cmp
mov
pop
neg
mov
out
xchg
sbb
lret
aam
cmpb
push
jns
mov
outsb
es
iret
add
clc
in
andl
icebp
lret
cmpsb
mov
dec
or
test
fs
movsb
mov
jp
push
mov
mov
adc
push
sbb
les
mov
enter
rol
sti
jno
loopne
pop
orl
mov
jmp
in
outsl
test
lds
aad
mov
mov
sub
ljmp
ret
jl
ret
std
in
xor
sbb
push
mov
mov
jge
xchg
outsl
pop
repnz
dec
xor
mov
and
adc
mov
call
fnsave
cmc
outsb
sub
mov
ret
adc
jbe
mov
arpl
or
sbb
sub
cmp
gs
add
jb
adc
lret
lcall
test
pushl
adc
into
ret
movsl
add
mov
std
mov
push
fwait
mov
mov
push
cmc
addr16
push
and
sbb
dec
rcll
decl
adc
lcall
and
jge
and
jle
shll
dec
ss
popf
push
sbb
sahf
mov
sahf
ja
sbb
aam
outsl
mov
or
jl
dec
jbe
xchg
and
in
xlat
clc
mov
push
add
sub
adc
sub
pop
test
dec
jmp
push
test
ret
test
cmp
inc
mov
test
aaa
fsubs
xor
push
out
cli
or
int3
fwait
jle
rclb
repnz
xchg
std
sub
sbb
cmp
sub
sub
cmc
mov
pusha
pop
mov
jp
nop
lea
insb
push
in
leave
daa
sbb
fs
lock
or
cmpsb
dec
inc
mov
or
cmp
push
push
jmp
lret
enter
or
movsl
clc
cwtl
push
xor
out
jl
jno,pn
adc
pop
jbe
mov
outsb
lret
dec
cmp
dec
jle
out
loope
mov
outsl
int
jge
sbb
pop
repz
pop
mull
cmpsb
xor
and
mov
pop
inc
shr
push
inc
fprem
test
jbe
and
xchg
jns
push
xor
test
mov
jmp
dec
jge
ficoms
mov
dec
xchg
scas
aas
pop
inc
and
cmp
out
xor
insl
mov
jecxz
or
or
pop
in
dec
jno
cli
ja
adc
cmpsl
pop
sub
pop
call
popf
lods
clc
loopne
dec
jl
xchg
imul
daa
mov
aam
sub
sbb
mov
shll
mov
popf
jae
lods
sti
outsl
repnz
jne
mov
add
int
ficoms
outsb
subl
vsqrtps
or
dec
cmp
inc
sub
jp
iret
bound
cmp
jo
shll
enter
fistl
lea
cld
lret
ret
or
daa
js
or
jge
add
dec
ds
pop
daa
insl
rcrb
pop
cmp
shrb
push
popa
xor
mov
aad
mov
js
fldcw
mov
das
stos
jnp
sbb
pop
adc
mov
xor
mov
imul
fcomps
add
sub
daa
jbe
mov
fwait
int
in
and
xor
imul
jg
or
fisubrl
inc
lahf
push
ret
sbb
test
ficoms
xor
data16
cmpsb
insl
repz
jne
insl
out
pushf
out
cwtl
pop
cwtd
dec
pop
aad
pop
std
xor
mov
lds
push
sub
push
cs
sbb
dec
sub
adc
sub
mull
lahf
data16
leave
int3
lret
mov
push
adcb
jmp
cmp
and
mov
mov
push
mov
cmp
inc
aad
and
add
pop
jb
nop
in
scas
sbb
xchg
or
ss
aas
xor
pop
jne
imul
lds
dec
cmpsb
pop
add
ror
inc
push
test
dec
sahf
popl
lods
lea
aas
mov
lret
stos
adc
add
xlat
dec
mov
add
dec
add
cmpsb
jle
jmp
ds
jne
sub
repz
mov
sub
je
stos
pop
jno
inc
mov
xor
mov
adc
repnz
mov
push
das
lcall
add
fists
fdivl
xchg
xchg
push
sbb
push
addr16
adc
sub
rol
or
xchg
xchg
xor
leave
nop
stc
dec
inc
gs
mov
les
mov
push
in
enter
imul
testl
leave
dec
mov
dec
add
jle
jg
bound
nop
dec
cmpsb
push
push
and
mov
out
ljmp
mov
addr16
in
jo
scas
xchg
xchg
in
flds
mov
or
sub
popa
or
or
stos
nop
iret
cld
xchg
cmp
vpsraw
inc
xchg
push
shlb
jnp
movlps
pop
xor
imul
xlat
in
sbb
adc
dec
jg
test
sub
sbb
in
mov
jmp
movsl
aas
pop
loop
jnp
cmp
scas
dec
out
sub
dec
jl
mov
aas
andl
lods
xchg
enter
xlat
and
lret
mov
ja
cmp
out
test
pop
das
xchg
adc
xchg
dec
mov
add
sub
sbb
lcall
roll
das
xchg
pop
xchg
sbb
je
cmp
pushl
and
xor
in
cs
jnp
cmpsb
jno
mov
stc
mov
mov
mov
sub
pop
mov
add
inc
hlt
sub
xor
dec
inc
mov
or
cmp
stos
dec
call
xchg
jnp
mov
mov
sub
mov
in
dec
sti
or
xor
cwtl
xor
fnstenv
xor
aaa
lcall
or
xchg
mov
das
ljmp
imul
pop
jp
xor
jge
xchg
mov
mov
jg
adc
add
mov
and
pop
nop
repz
js
int3
rolb
insb
cmp
pop
iret
jl
rclb
cs
call
push
ljmp
pop
mov
lods
add
pop
pop
scas
xchg
push
inc
into
adc
lahf
les
push
mov
mov
jl
jg
sub
out
sub
pop
fdivl
sbb
mov
cmp
cld
lret
repnz
push
xchg
vcvtpd2dqx
jb
rcll
push
xchg
movsl
xchg
out
insb
stc
push
cmp
cs
xor
loopne
dec
cmp
or
cmp
addb
jmp
push
jb
icebp
sbb
pop
and
pop
rorl
lea
ss
xchg
mov
mov
adc
jae
lock
ss
xor
outsb
jns
push
mov
xchg
hlt
popa
push
pop
mov
push
movl
or
aad
dec
es
dec
inc
rorb
pop
nop
push
push
cmpsl
iret
cmp
ljmp
inc
xor
popf
cmpsl
sarb
mov
inc
jno
test
push
adc
sahf
cltd
mov
mov
pushf
sub
mov
add
js
jne
push
push
les
xor
sbb
ficomps
stos
imul
inc
ja
nop
lods
incb
std
adcl
jne
cli
movsl
add
cmp
pop
ds
shll
jmp
fiadds
test
push
mov
addr16
sarl
test
ret
mov
pop
lods
dec
pop
pop
insl
stc
sub
mov
mov
xlat
cmpsl
mov
dec
xorb
pop
mov
scas
add
stc
push
sub
lds
lret
inc
inc
aad
lods
mov
sbbl
jge
repnz
xorb
stos
dec
lds
push
sbb
jl
sub
popf
pop
and
fadd
dec
adc
jae
cmp
pusha
loope
mov
movb
rolb
shlb
or
fcmovnu
push
pop
or
pop
inc
fwait
jae
cmp
mov
inc
or
push
or
cmpsb
in
pusha
es
lods
cmc
fwait
sub
sbb
aas
cmpsl
outsb
pop
dec
cmp
andl
adc
or
mov
or
jbe
inc
scas
add
cmp
mov
xchg
jbe
loope
mov
xor
mov
jl
sbb
push
jo
fidivs
fs
loope
sub
or
rcrl
outsl
popa
xchg
pop
pop
dec
les
jns
pop
aad
jae
mov
cmp
or
cmp
stos
pop
es
push
add
ss
push
sub
dec
fisttps
adc
aad
cli
lret
add
cmp
cmp
cld
jae
in
arpl
popf
std
mov
scas
add
daa
popf
imul
push
imul
inc
es
and
adc
inc
jl
mov
mov
into
lret
and
dec
pavgb
pop
std
fdivl
and
inc
mov
aam
imull
push
add
pop
hlt
cmp
and
pusha
or
into
add
movsl
xlat
jne
lea
cmp
xchg
stc
lcall
in
xchg
mov
fidivs
call
jno
sub
adc
dec
sub
push
push
pushf
pop
and
push
insl
test
push
into
inc
add
inc
outsb
add
and
cmc
xchg
push
popa
push
bound
stos
xor
aad
xchg
adc
add
mov
push
lds
int3
xchg
push
je
mov
lret
mov
out
mov
in
sub
loop
gs
ds
mov
lds
mov
xchg
xor
mov
mov
fwait
addr16
push
cltd
bound
fs
aas
mov
stc
dec
imul
mov
in
fstpt
mov
clc
lret
faddl
sbb
dec
mov
lea
cwtl
xor
xchg
mov
xchg
enter
in
scas
sbb
fisttps
fidivs
test
xor
or
mov
cmpsl
cmpl
jge
pop
sahf
adc
mov
pop
adc
jb
shl
xchg
pop
xor
cmp
out
mov
pop
arpl
leave
stc
adc
repz
inc
push
scas
faddl
push
sbb
in
sbb
sbbb
pop
inc
lret
push
or
jp
sub
aad
sub
test
or
mov
xor
dec
or
mov
cmp
faddl
jl
out
mov
inc
pop
sbb
sbb
int
sub
pusha
aaa
outsl
ja
push
sbb
fwait
xor
fdivp
push
push
out
test
cmp
mov
cwtl
test
fisubrl
loopne
cmpsl
mov
cmc
and
shl
adc
inc
dec
fmuls
lret
rcrb
mov
sbb
mov
mov
mov
cmp
popa
fsubs
test
xor
mov
xor
add
enter
adcb
fwait
imul
daa
aaa
cmp
jae
xor
cmp
jo
addr16
insl
ret
mov
orl
sub
or
mov
mov
scas
sahf
cmp
jne
hlt
sahf
rorl
mov
and
sub
and
sar
sub
daa
repz
and
pop
test
mov
adc
lock
fwait
sahf
cmp
imul
mov
adc
xor
movsl
push
mov
movsb
in
out
add
push
jge
lret
pop
ljmp
pop
cmp
test
jno
add
mov
aaa
mov
sub
push
and
pop
sub
outsb
mov
les
push
sbb
xor
out
fldt
and
mov
sub
out
pop
test
nop
int
dec
iret
div
xor
test
fbld
insb
or
sub
pop
xor
mov
inc
clc
lds
or
adcb
cmpsb
cmp
fwait
adc
add
jg
sbb
mov
leave
adc
cmp
jle
add
nop
push
push
fcoms
xchg
repnz
lods
mov
push
or
imul
push
sub
cmpsl
lock
lea
lahf
aaa
paddusw
fucomi
sbb
in
jmp
adc
lcall
mov
pop
xor
sbb
jl
add
or
lret
negl
add
les
addb
xor
fistpll
pop
sbb
pop
iret
cmp
add
aaa
int3
hlt
in
subb
adc
sub
adc
push
push
push
shr
xchg
xchg
rclb
mov
dec
outsb
jge
or
or
out
xchg
imul
pop
jo
out
pop
pop
sub
adc
fldcw
inc
add
in
out
leave
lods
or
test
fucom
hlt
cmpsl
mull
push
xchg
out
mov
jbe
cltd
mov
jp
dec
aaa
mov
int
jl
in
in
dec
cmp
imul
add
xchg
inc
add
push
mov
ja
push
jae
cmpb
ret
inc
and
jnp
push
xbegin
popf
ss
inc
shll
dec
add
pop
popa
dec
adc
cltd
sbb
mov
sub
popa
pop
scas
cld
mov
call
inc
scas
ret
das
adc
and
std
imul
daa
push
lret
push
push
fsubrs
fcoml
push
and
insl
push
mov
mov
daa
mov
out
sbb
out
daa
pop
int3
ret
dec
mov
mov
aaa
xchg
in
mov
push
lcall
inc
loopne
push
mov
cmp
and
icebp
or
sub
cltd
add
dec
bndldx
add
sti
lods
push
incb
aas
movsl
int
mov
or
jle
sbbb
and
cmp
and
fwait
mov
push
pop
sub
jp
out
sahf
in
push
call
call
push
inc
xlat
sbbb
movsl
sti
test
frstor
cmp
jp
movsl
mov
stos
dec
ja
sbb
dec
inc
lock
es
out
add
pop
xchg
aaa
imul
add
stc
xlat
mov
pop
fcoml
mov
pop
pop
cltd
hlt
jle
nop
xchg
add
das
nop
ja
mov
dec
hlt
inc
aam
jmp
xchg
lods
ret
mov
rcrl
ret
sub
mov
push
je
mov
mov
bound
ss
test
jno
and
fbld
out
push
mov
xchg
mov
xchg
daa
lahf
fcmovu
mov
inc
mov
repz
sarl
jno
jg
pop
and
adc
shll
ss
push
sbb
insl
or
inc
push
mov
dec
das
call
mov
sbb
mov
mov
inc
or
hlt
mov
lret
cs
sbb
stc
xchg
int3
mov
jne
xchg
or
pop
out
data16
mov
out
xchg
mov
outsl
inc
lock
add
rorb
fabs
push
push
inc
out
lods
pop
cmc
ljmp
jbe
out
iret
stos
xchg
or
int
lods
push
inc
dec
xor
fcomps
jnp
shr
xor
inc
push
lock
aad
mov
jns
cmp
int3
inc
jnp
jl
dec
dec
push
outsl
pop
ds
sbb
jb
pop
push
add
ss
jecxz
popf
mov
adc
lea
cli
dec
lret
movl
push
shll
dec
cmp
inc
add
cli
sub
dec
loope
sub
mov
mov
jle
ret
xor
call
adc
jl
sub
xor
adc
cltd
inc
sub
jb
jg
scas
push
adc
jecxz
out
inc
fisubrs
sbb
cmp
gs
insb
nop
ss
and
maxps
inc
imul
pop
or
les
mov
add
iret
mov
push
mov
test
in
imul
jmp
xchg
loope
inc
mov
scas
mov
cmpsb
repnz
js
adc
call
fnsave
dec
fmulp
inc
loope
pop
jnp
push
mov
int
cmc
jp
push
stos
adc
test
dec
mov
adc
daa
fbld
int
test
sbb
mov
cmp
sbb
clc
ljmp
aaa
dec
push
or
daa
jne
and
push
fmull
cltd
push
imul
int3
addr16
add
or
fcom
pop
cmpsb
inc
mov
and
cmp
jle
adc
gs
in
mov
cmp
pusha
test
mov
pusha
insl
insl
stos
fdivrl
mov
ss
pop
insl
or
or
movsl
pop
add
mov
mov
ja
dec
xorl
enter
shlb
pop
xchg
mov
mov
aas
mov
or
mov
pop
inc
push
jecxz
cmp
test
pop
jno
ljmp
push
jmp
mov
xchg
repnz
idivb
stc
mov
mov
sub
test
stos
cmp
pop
loopne
xchg
pop
add
movlps
jns
jp
mov
sub
fldcw
add
testb
jl
cmp
aad
xchg
insl
cmc
pop
xchg
jmp
push
stos
lret
fwait
insb
test
mov
sub
rcl
and
fldenv
dec
daa
out
mov
jmp
xor
xchg
mov
dec
fisttps
mov
in
repz
xor
scas
mov
mov
mov
lahf
pop
push
dec
sub
jnp
loop
pushf
nop
or
cli
xchg
sbb
mov
push
int3
jge
aas
sti
xor
inc
pusha
in
inc
mov
inc
sub
push
sub
dec
mov
int
ret
faddp
adc
mov
ret
mov
fucom
les
push
or
pop
push
mov
arpl
pusha
push
sub
and
mov
inc
mov
mov
push
inc
push
loopne
push
fisubrl
arpl
sub
or
mov
mov
jge
lahf
and
mov
outsl
popf
aas
dec
daa
adc
insl
xor
jecxz
mov
int3
shl
pop
clc
jnp
imul
sbb
ljmp
std
das
ja
in
shr
mov
mov
aaa
sbb
data16
data16
daa
pop
mov
cmp
jae
jns
mov
jle
sbb
cmc
mov
mov
cltd
and
cltd
testb
dec
add
fcomp
popl
sbb
fisubl
inc
jns
aam
leave
sti
push
les
or
sbb
jae
cld
nop
sub
lret
pusha
imul
cwtd
fs
testb
scas
shlb
jbe
dec
add
pop
jno
ret
push
or
xor
lods
jae
int3
out
push
push
push
sub
mov
mov
dec
cmpsb
lods
fcompl
lret
pushf
lods
daa
mov
pop
test
sub
js
pusha
push
push
add
push
mov
inc
or
aad
repnz
sub
xor
test
mov
movsl
out
rorl
mov
popa
xor
nop
and
lock
mov
in
iret
shll
push
sub
mov
lds
adcb
mov
dec
jb
mov
mov
xor
xor
sbb
cmp
mov
scas
sarb
imul
cmp
ja
jbe
and
icebp
and
pop
popf
lds
out
out
push
mov
xchg
enter
outsb
rclb
fcomp
stos
ret
jl
xor
dec
movsb
jo
dec
fstpt
jmp
lods
and
movsl
mov
jae
repz
repnz
shrl
xor
lret
repz
rclb
and
mov
in
pop
sbb
out
adc
loope
addl
or
sar
jge
test
dec
in
or
or
sub
mov
sbb
iret
xchg
mov
and
adc
arpl
cmp
push
mov
xchg
xchg
xchg
dec
ds
cmp
test
mov
jge
mov
mov
xor
push
and
outsl
pop
mov
sbb
push
lods
loope
mov
fcmovnu
mov
gs
int3
mov
mov
push
sbb
rcll
test
test
xchg
and
sbb
mov
or
testb
mov
mov
inc
adc
scas
and
cmp
sbb
fstl
hlt
popf
mov
pop
leave
dec
mov
or
push
push
dec
int3
cmp
test
mov
fists
push
pop
nop
sbb
idivb
pop
push
rcrb
iret
lea
imul
adc
arpl
loopne
addr16
iret
add
or
xchg
fildl
and
sbb
or
or
mov
inc
xchg
xchg
cmp
sbb
dec
shl
mov
xor
mov
jg
movsl
jge
dec
pop
and
or
xchg
dec
inc
or
imul
mov
fistps
mov
inc
mov
xchg
ret
test
dec
imul
xchg
clc
adc
mov
cmovne
hlt
jp
pop
and
add
aas
imul
jle
jbe,pn
in
sbb
xchg
andb
mov
enter
ja
cmpsb
in
dec
jp
paddusb
cmp
cmpsb
outsb
and
cmp
jle
lea
add
or
arpl
xchg
scas
adc
dec
mov
sar
pushf
add
ljmp
test
cmp
sbb
js
inc
sbb
add
jns
or
push
push
cld
or
aad
nop
imul
mov
mov
mov
mov
push
push
push
push
rcrl
adc
adc
pop
imul
negb
popa
sub
cwtl
ficomps
lahf
cwtl
or
and
orb
sbb
insl
sti
insb
mov
pop
out
and
mov
jp
mov
push
inc
andl
das
and
aad
out
cmpsb
test
fisubs
and
cmp
jg
jne
push
cld
lods
push
sbb
inc
mov
push
outsb
out
nop
pop
bound
outsl
daa
jno
les
dec
cwtl
inc
icebp
mov
mov
jb
sbb
daa
mov
pop
jp
pusha
mov
mov
xchg
outsl
pop
push
stos
outsl
and
movsl
add
mov
mov
xchg
pop
rclb
sbb
inc
mov
sahf
outsl
sbb
and
and
fldcw
mov
mov
popa
xor
adc
xor
pusha
push
sub
sub
out
adc
cs
stos
adc
fsubs
into
les
aaa
out
sub
add
mov
mov
push
lds
xchg
lea
rcrb
roll
das
shll
xorl
rolb
adc
and
fbstp
std
incb
loop
leave
shrb
outsb
mov
cmp
call
out
into
scas
out
fstpl
pop
out
insb
push
int3
ja
imul
mov
leave
jns
sbb
mov
test
adc
pop
xlat
pop
mov
lret
mov
cmp
ret
xor
mov
mov
sbb
fwait
xchg
push
lods
sahf
mov
outsl
xor
das
cltd
jb
mov
nop
cwtl
jmp
push
adc
dec
das
push
ret
les
ret
or
outsl
mov
add
repnz
sub
xchg
fsubrs
ret
cltd
data16
shrl
mov
push
stos
xchg
add
pop
dec
mov
sarb
loopne
imul
ss
out
pusha
repz
sarb
lds
stc
push
out
jno
imulb
mov
inc
sub
xchg
xor
or
xlat
xor
push
dec
scas
sbb
jns
sub
mov
call
scas
jne
in
shll
xor
cltd
bound
add
ret
into
mov
scas
xchg
mov
pop
rcr
pusha
pop
shl
scas
iret
movsl
add
repnz
xor
mov
jge
adc
mov
insl
push
popf
mov
mov
arpl
xor
mov
jbe
int
jae
jo
aam
push
cmp
mov
cmp
fsubs
shlb
jne
cmp
inc
add
xchg
push
ja
push
mov
loope
xchg
sbb
mov
nop
notb
aam
add
mov
inc
paddw
pop
aad
and
sbb
cmp
loop
mov
sub
lock
cmp
in
xor
in
jo
movsl
push
jbe
cmpsb
test
xor
adc
fcoms
loopne
mov
jecxz
xchg
pop
lods
sti
std
or
dec
and
or
sbb
jp
sub
pop
scas
aas
into
int
or
pop
aas
push
in
push
xchg
jae
and
ds
popa
movsb
addr16
hlt
test
jnp
jo
dec
ficompl
sub
push
pop
push
inc
mov
jae
sub
pop
adc
daa
jns
in
insb
mov
fs
inc
lds
test
aad
gs
xlat
pop
stc
jns
dec
stos
jmp
push
add
stos
pop
fsubrl
sarl
xchg
cs
cmp
movsl
cmp
ss
ds
aas
xor
ficompl
movsl
lcall
mov
inc
xor
cmp
push
jbe
mov
sub
popf
popf
lea
cltd
xchg
dec
fsub
xorb
jns
push
xchg
iret
pop
int3
adc
push
push
imul
data16
pusha
bound
shlb
stc
dec
inc
jp
lea
xor
inc
lcall
inc
push
scas
adc
adc
sbb
ja
cmpsb
clc
mov
adc
mov
sbb
in
mov
xchg
pop
mov
cmp
jl
fists
pop
repnz
data16
ja
icebp
mov
push
sub
repz
sub
and
adc
xor
in
cwtl
inc
fs
xor
nopl
fildl
dec
cli
ss
sahf
daa
ret
jns
jp
xchg
out
hlt
xor
sahf
stos
inc
jecxz
or
xchg
scas
fcmovbe
arpl
mov
mov
aad
or
aaa
and
cmp
pop
lock
loop
ja
fdivrs
test
lret
mov
jge
xchg
fcoml
jne
es
movsb
sar
aad
push
add
movsl
rorl
push
jnp
outsl
and
hlt
mov
and
aaa
daa
xor
cmpsl
adc
daa
jo
lret
inc
sbb
xor
jo
or
or
lds
sub
mov
jle
pop
xchg
push
test
jge
adc
pop
xchg
xor
add
sub
fdivs
imul
xor
cs
adc
mov
outsl
lods
lret
adc
fidivl
mov
sbb
rcrl
adc
fdivs
nop
sub
mov
nop
sbb
data16
sub
mov
mov
mov
push
int
jg
fcomps
xor
addr16
repnz
pop
out
xor
into
pusha
pop
aam
sub
adc
inc
add
cli
xor
inc
into
push
push
movaps
fisttps
loopne
aad
cmp
inc
push
out
lock
mov
cmp
mov
or
cs
loop
aas
or
dec
cmp
and
lods
cmp
cld
mov
xor
xor
lea
sub
xorl
mov
mov
cmp
ja
test
js
stc
popa
inc
or
ror
push
arpl
data16
jecxz,pn
cld
nop
cwtl
jbe
mov
inc
mov
adc
adc
cmpb
rorl
inc
mov
daa
pushf
repz
or
sahf
adcb
jnp
dec
push
stos
or
dec
dec
mov
mov
xor
inc
mov
fldt
test
jmp
dec
or
or
sbb
pusha
push
add
orl
and
inc
insl
xor
repz
repz
pop
scas
jl
aas
push
mov
sub
inc
in
outsl
xchg
mov
push
jo
mov
data16
jbe
pop
add
stc
aas
inc
daa
sub
sti
xchg
aam
dec
push
mov
icebp
and
bound
data16
dec
lret
hlt
xor
push
in
in
dec
inc
push
add
call
pop
pop
cmp
test
and
and
inc
pop
loop
cmp
or
pop
rol
mov
std
jl
pop
sbb
xchg
push
pop
loopne
addr16
fwait
aad
inc
adc
push
test
xchg
mov
int
jp
jg
pop
add
shlb
jbe
imul
mov
stc
rcrb
loop
pushl
push
xor
sbb
add
test
testl
pop
pop
mov
mov
sub
push
xchg
movb
cwtl
xor
imul
sbb
fnstsw
scas
dec
inc
pop
lods
xor
add
leave
fdivrs
jmp
mov
push
into
lret
das
cmpsl
adc
ret
frstor
inc
idivl
mov
push
dec
and
push
jnp
rcrb
cmp
cmp
jae
adc
jb
jo
dec
inc
and
insl
cmpsl
fildll
dec
adc
cmpsl
ss
mov
sub
stos
popa
movsb
das
push
shl
sbb
mov
arpl
push
pop
pop
mov
jne
in
mov
sbb
imul
sub
adc
add
test
ret
sbb
pop
cld
cmpsl
mov
jnp
cli
leave
inc
add
mov
cmpsl
cmpsl
jp
cmpb
pop
call
push
fsubrl
les
loopne
lds
repnz
mov
pop
daa
pop
lock
jae
and
enter
aas
xor
push
jns
dec
or
add
stos
dec
push
xor
jge
in
xorb
mov
cli
fsubl
mov
shrl
jb
loop
adc
cmp
add
cmp
leave
adc
test
dec
jl
pop
jno
fimull
add
add
or
lods
test
leave
inc
test
jns
inc
fidivrs
cmpsb
lock
stos
mov
pop
mov
inc
lret
push
mov
sub
in
cmp
add
add
mov
mov
adc
add
sbb
push
lcall
scas
pop
mov
cli
sbb
cld
nop
imul
in
dec
in
xor
and
scas
rclb
push
add
pop
adc
and
or
sbb
imul
dec
push
jecxz
mov
add
add
sub
inc
dec
add
test
cmp
and
popa
jno
push
lret
mov
adc
into
push
imul
adc
nop
dec
insb
pop
and
aad
test
aad
pop
adc
mov
inc
test
jo
jne
int
pop
cmp
and
lock
sbb
mov
jne
loope
sub
push
mov
gs
arpl
fwait
repnz
jbe
pop
add
test
ljmp
jb
or
pop
pop
inc
rcll
push
adc
out
fs
and
jo
pop
roll
push
jno
hlt
scas
faddl
aad
movsl
pusha
xchg
mov
in
jno
mull
fisttpll
out
jge
mov
imul
pop
jno
data16
scas
cmp
cmp
out
pop
xchg
aas
pop
loopne
pop
roll
sub
fisubrl
and
pop
push
xchg
pop
mov
mov
in
mov
cmp
sub
das
push
aam
out
int3
xchg
mov
sahf
je
sbbl
decb
test
xor
cli
in
mov
sub
mov
fbstp
lods
std
mov
std
xor
out
dec
and
sub
inc
movsl
inc
jae
xchg
inc
lcall
xchg
or
es
cs
mov
inc
mov
andb
js
loope
test
cmp
xchg
jbe
and
fimull
lahf
clc
push
pop
je
cmp
jmp
mov
dec
cld
jl
in
shll
sub
and
aam
dec
test
enter
mov
fisttpll
daa
mov
or
gs
jmp
mov
daa
loope
sbb
int3
sub
lock
in
or
add
addr16
or
xchg
xchg
push
hlt
dec
push
jbe
sbb
loope
ja
jg
fsub
adc
sbb
sbb
mov
mov
push
dec
cltd
mov
dec
or
mov
out
or
dec
inc
cltd
fwait
lcall
ja
ss
pop
adc
mov
aas
sub
imul
inc
ror
lret
jle
cld
out
out
xor
cmp
jg
sub
push
push
mov
sub
mov
pop
mov
push
leave
js
sbb
jb
sbb
push
adc
scas
sbbb
sarb
pop
add
mov
mov
fxch
push
adcl
sub
imul
stos
and
inc
int3
loop
add
std
cwtl
inc
idivb
into
fnstenv
sbb
pop
in
dec
mov
pop
or
jbe
mov
cs
dec
xchg
push
mov
cli
jne
lret
pop
xor
xchg
test
push
fmull
loop
mov
aad
adc
jnp
test
je
xor
inc
dec
jp
push
lods
popf
pop
flds
js
mov
es
addr16
or
add
push
xchg
unpckhps
pushf
fcompl
mov
sub
push
test
add
stos
xchg
dec
and
scas
mov
cld
lock
push
xchg
fdivl
pop
and
pop
cmp
popf
aad
cli
push
push
add
cmp
pusha
scas
cmp
clc
jl
and
sub
sbb
in
fwait
adc
and
mov
and
jns
int3
sbb
shrb
or
jmp
push
rclb
inc
push
outsl
xchg
cwtl
lret
imul
data16
mov
push
push
jge
and
dec
ret
jge
mov
push
sbb
inc
loop
xchg
pop
mov
sti
or
cmpsb
in
xchg
loope
sbb
dec
xchg
sub
mov
mov
repnz
pop
jae
fistps
movsb
data16
or
daa
xchg
and
fsubr
jge
ds
adc
push
jecxz
repnz
sub
in
xchg
mov
loop
pop
jmp
andl
sbb
mov
sub
dec
push
sub
loop
xorps
xchg
test
jne
inc
std
inc
dec
lcall
das
and
inc
sbb
fsubrs
test
or
sbb
pop
call
inc
sub
test
sub
les
js
aaa
movsl
pop
int3
cs
jp
or
add
in
sarb
divb
sbb
sub
pop
fstpt
test
pop
or
cs
outsl
adc
call
popa
ja
out
mov
incb
sbb
lcall
out
addl
push
fwait
add
cmp
rcr
loope
cwtl
xchg
int3
call
xchg
das
mov
sbb
dec
call
cmp
dec
jno
aas
xor
pusha
fmuls
scas
mov
test
xchg
xchg
sbb
push
push
idivl
callw
mov
stc
jge
mov
mov
ret
shlb
and
ljmp
xor
push
in
jae
lea
inc
lcall
sbb
mov
scas
mov
inc
mov
cli
or
addr16
xlat
pushf
or
push
jp
sub
out
mov
add
mov
adc
ss
xchg
jbe
jg
pusha
ret
popf
insb
xchg
in
dec
add
jecxz
and
mov
int
or
cltd
jbe
xor
fstl
jae
fcoms
and
xchg
cmp
pop
test
add
das
mov
or
adc
cmpsl
adc
pop
std
sub
jne
cmp
aaa
mov
sub
dec
jge
mov
xchg
aas
cmc
mov
add
fmuls
mov
pop
stc
and
js
in
test
jl
loopne
adc
das
orb
xchg
les
mov
jmp
inc
add
divb
xchg
or
adc
repz
adc
aam
aas
mov
mov
inc
loope
stos
push
cs
idivl
cmp
sti
xchg
mov
cmp
cmp
adc
mov
adc
std
inc
ret
xchg
inc
and
add
jmp
orb
jecxz
sub
push
xchg
push
cmp
push
sub
sbbb
xchg
cmpsl
lret
addr16
push
loop
ret
xor
dec
adc
and
arpl
inc
push
test
adc
push
jnp
jle
lcall
lods
loop
xchg
fildll
dec
push
test
test
jns
pusha
push
cmpsb
in
push
xor
ss
movsl
ret
jne
push
cld
fs
xor
cltd
xchg
xor
sub
push
in
xor
and
jge
mov
in
push
xchg
mov
pop
xchg
cmp
cs
dec
cmpb
jg
jnp
xchg
lods
cmp
loop
sahf
out
sarl
pop
jno
sub
add
sbb
mov
mov
pusha
inc
ret
loopne
mov
dec
pop
pop
fldt
inc
adc
pop
push
push
pop
mov
lock
xor
xrelease
rcl
mov
test
and
divl
push
dec
mov
scas
or
inc
adc
mov
adc
mov
inc
add
add
in
mov
xor
les
sub
pop
pushf
in
push
mov
leave
dec
sub
mov
ror
and
jle
addr16
cmpsl
out
orb
lock
insl
sub
jge
iret
es
mov
mov
icebp
adc
in
gs
pop
scas
ss
movsb
sub
dec
mov
xor
out
sbb
ss
sbbb
sbb
pop
repz
inc
dec
xchg
rcr
daa
lcall
pop
fisttpl
add
jnp
xchg
xor
sbb
xchg
xlat
sarl
jnp
aas
mov
hlt
xchg
and
addr16
cltd
fbstp
int
mov
movsl
cmp
sbb
repz
leave
leave
adc
rorl
pushf
fidivrl
fdivs
aad
jl
mov
in
cli
lahf
mov
jle,pt
std
nop
mov
pop
dec
mov
cmp
std
in
add
sbb
js
xchg
test
loopne
jmp
cmc
jp
lret
mov
scas
push
inc
std
jne
sub
mov
mov
dec
mov
jnp
addr16
stos
mov
jae
test
xchg
and
mov
aam
movsl
nop
test
imul
adc
ss
in
mov
pop
push
or
xor
add
mov
scas
es
shlb
push
cltd
adc
cmp
imul
test
adc
add
repnz
jb
aad
outsl
stos
push
scas
pop
add
fmul
add
adcb
cmpsl
das
mov
outsl
fucomi
adc
mov
lea
jns
bswap
stos
cmp
sub
mov
movb
or
pshufw
sub
fxch
cld
sahf
inc
mov
popf
mov
push
loope
or
pop
mov
cwtl
nop
adc
mov
scas
nop
lret
aaa
jb
cmpsb
nop
and
dec
cli
xchg
arpl
mov
inc
dec
ret
inc
lds
sub
loop
into
jbe
xchg
aaa
inc
fucompp
push
or
adc
jb
jae
fcomps
int
aam
sbbb
test
subl
dec
pop
fldt
out
sub
pop
jno
cmp
fwait
insb
adc
xchg
xchg
fisttps
and
adc
sub
mov
jmp
stos
int3
fwait
xor
pop
shr
inc
nop
iret
pop
dec
xlat
push
push
xor
mov
cmpsl
mov
rolb
xor
add
and
iret
scas
pushl
jo
mov
mov
xchg
mov
and
cltd
cmp
adc
aas
test
imul
ret
mov
xor
jns
iret
push
sub
pop
int3
test
xchg
xchg
and
mov
xchg
mov
inc
push
or
add
aad
imul
xor
test
mov
push
repnz
inc
jmp
dec
mov
and
adc
fs
clc
adc
scas
stos
outsb
repnz
aas
rorl
push
out
cmp
in
cltd
adc
imul
mov
arpl
inc
adc
and
rcrl
inc
pop
divl
cwtl
mov
jns
inc
dec
mov
movsb
idivl
fs
rcll
mov
lahf
push
jle
xor
insl
and
inc
aam
and
mov
orl
sub
xor
and
or
mov
sbb
mov
mov
dec
pusha
shld
mov
push
and
sbb
mov
shrb
pusha
pop
subb
fsubrl
pop
inc
mov
loopne
test
and
leave
ja
mov
jns
add
pop
jecxz
dec
test
pop
dec
out
ret
mov
rcll
cmc
imul
dec
sbb
inc
push
cli
xor
cmp
inc
imul
mov
adc
ret
jge
in
fstps
mov
or
dec
jle
mov
repz
mov
leave
stc
movsl
xor
xor
insb
jl
adc
loope
or
push
cld
mov
fcoml
lcall
adcb
aas
dec
or
xor
jnp
popa
add
inc
hlt
testl
cld
into
push
xor
out
xchg
cli
pop
mov
cwtl
mov
into
cmp
push
hlt
je
nop
or
cmp
shl
dec
push
gs
mov
jo
fdivr
and
push
cmp
out
in
jle
push
jmp
cmpsb
cmp
test
aad
jl
dec
rolb
add
mov
lea
cmp
xchg
push
sbb
mov
leave
sub
pop
lcall
or
xor
dec
push
dec
rorl
outsb
popa
ret
pop
mov
imul
orl
gs
pop
push
push
pop
mov
jno
mov
inc
inc
mov
insb
add
jmp
or
test
fmuls
adc
lods
divl
pop
ja
push
cmp
or
mov
test
dec
arpl
stos
gs
adc
movsb
sub
mov
xor
pop
and
call
mov
loop
xchg
jecxz
add
sbb
cmp
ficoms
jbe
subb
inc
dec
aam
js
popf
mov
hlt
or
lret
test
inc
or
insl
jo
dec
inc
pop
das
sti
xchg
and
das
jg
and
repz
sbb
cmp
xchg
cmp
das
out
cld
mov
xor
sbb
dec
push
jmp
xchg
pop
stos
xor
or
into
mov
adc
lods
xor
xchg
ljmp
out
jmp
sbb
dec
inc
psllq
cmpsl
in
test
mov
dec
js
repz
roll
or
pop
stos
xchg
mov
sub
push
sub
push
orb
or
stos
imul
test
hlt
rcr
sbb
dec
add
leave
push
dec
std
jns
cmp
sub
aas
in
push
repnz
leave
jmp
dec
hlt
xchg
mov
pushl
and
ljmp
sub
xchg
lcall
jne
leave
jecxz
ja
imul
add
addl
pop
sbb
leave
cld
xchg
lods
push
add
push
fdiv
mov
stos
cld
push
mov
mov
mov
pop
jl
mov
jns
push
test
jmp
push
mov
mov
xchg
stos
rol
lahf
bound
push
jge
sub
aaa
fstpt
jo
sub
adc
inc
xor
fs
mov
and
cmpsl
mov
sbb
push
shlb
push
insb
loope
cmpsl
pusha
repz
loopne
iret
pop
iret
in
inc
clc
pop
dec
sub
imul
iret
sub
push
call
cmc
cli
ss
sti
outsb
adc
inc
mov
call
stos
clc
inc
xor
cwtl
adc
cmp
xor
mov
lcall
mov
mov
cmp
adc
stos
sub
dec
xchg
mov
adc
bound
outsb
mov
lret
std
enter
adc
pop
dec
ret
inc
and
dec
jmp
cld
cmp
and
mov
ss
cmp
fstpt
sbb
sbb
pop
xchg
add
mov
das
lea
leave
aas
pop
sbb
test
cltd
sbb
ret
adc
ret
fadds
lahf
dec
or
insl
xor
scas
mov
shlb
mov
movsb
ret
sub
pushf
inc
ljmp
dec
pop
ret
rorb
sarl
sbb
cmp
hlt
out
loope
leave
cmp
xchg
pop
xor
or
push
shll
scas
or
fdivs
and
and
adc
cmp
push
xchg
adc
movb
xchg
add
or
cmpsl
jno
push
int
or
or
xorl
push
cs
dec
popl
mov
fcomp
cmp
in
idivl
and
adc
jae
or
xchg
aam
jp
jne
ss
dec
sub
jecxz
and
add
inc
ss
push
insl
out
fs
cmp
jmp
cld
in
fyl2x
mov
loop
aaa
inc
daa
or
push
arpl
mov
lods
pop
xchg
jg
mov
mov
inc
hlt
xchg
push
mov
repnz
ffreep
subl
push
repz
orl
ret
xchg
push
out
xlat
mov
and
or
in
jl
repz
lods
pop
cmp
sub
xchg
xchg
stos
xchg
add
push
adc
sbb
mov
xorb
out
sub
stos
mov
adc
or
pop
xor
jmp
push
in
push
cli
nop
shlb
push
mov
leave
cmc
lret
adc
aas
aaa
iret
fsubl
jl
and
push
inc
scas
jp
inc
mov
dec
int3
push
lods
call
inc
add
jns
lret
push
push
enter
ffree
stos
xor
jo
add
ror
add
fwait
pop
icebp
pushf
mov
push
inc
iret
xchg
out
cmpsb
mov
scas
loope
xchg
data16
nop
adc
mov
add
mov
sub
xchg
dec
andb
xlat
push
mov
aam
jmp
jle
rorb
or
lock
call
adc
test
int3
cmp
sahf
xor
into
jno
push
jns
movsl
push
out
test
out
and
pop
and
adc
mov
mov
pop
pop
push
sahf
pop
cs
cmp
mov
adc
fdiv
leave
lret
add
jbe
add
or
bnd
jg
ljmp
jmp
inc
adc
xor
stc
inc
andb
mov
mov
lods
scas
adc
mov
push
mov
mov
cld
push
clc
out
es
nop
adc
ljmp
icebp
fld
lret
cmp
adc
mov
adc
inc
mov
outsl
push
sub
add
push
loope
push
mov
arpl
rcll
popa
adc
jb
push
fsts
xor
sbb
and
out
dec
mov
lcall
rorl
popa
or
pushf
rolb
ret
mov
std
enter
jns
int
sub
rolb
sbb
rcl
in
xor
lods
jns
inc
sti
cltd
push
push
cld
add
aaa
push
cli
inc
mov
ss
aad
xorl
mov
mov
lret
std
pop
pop
les
int
push
mov
std
test
mov
mov
out
mov
orl
repnz
pushl
scas
jb
jmp
clc
adc
pop
sub
mov
jg
outsb
subl
add
mov
xchg
jno
or
pop
cwtl
outsb
insl
xlat
sub
mov
inc
xor
jl
paddw
cltd
and
in
sti
pop
cmpsl
int
sahf
cmp
fidivrs
cmp
inc
sub
mov
std
or
adc
popf
out
add
test
repz
mov
cli
sub
mov
out
sub
ds
cmpl
fstl
in
loopne
roll
in
mov
sub
insl
mov
sub
push
jbe
daa
repnz
movsl
loopne
adcb
cmp
das
cmp
out
add
push
xor
ja
push
adc
push
stos
pop
hlt
mov
cwtl
scas
test
jo
into
loope
in
xlat
lcall
jge
lods
dec
imul
jg
adc
and
pop
jecxz
push
enter
jp
leave
scas
ffreep
lods
push
aaa
or
cmp
xchg
test
sbb
xlat
cmpsb
jecxz
add
fdiv
xor
push
jo
dec
and
aas
mov
ror
and
aad
shll
loopne
sahf
jne
outsb
adc
inc
sbb
cmp
mov
iret
xor
or
and
arpl
adc
jbe
ror
bound
sbb
cmp
filds
mov
sub
jl
call
push
jge
pop
sub
rclb
stc
mov
pop
adcb
add
shll
mov
mov
add
jecxz
cmp
sbb
jae
rorb
pushf
in
lods
imul
sub
xchg
cmp
mov
xlat
ljmp
push
fnsave
stos
mov
std
aad
shl
xchg
xchg
insl
cmp
lcall
aas
cmp
dec
repnz
test
arpl
pop
or
clc
xchg
lods
inc
inc
push
loop
fucomp
test
cwtl
push
push
pop
sti
shrl
xchg
pop
cmpsl
dec
add
out
dec
lds
sbb
or
jle
mov
test
movsb
jno
sbb
js
mov
shrb
sbb
pop
jne
sbb
mov
push
mov
imul
xor
mov
mov
cmp
arpl
jle
xor
mov
adc
adc
adc
add
dec
pop
popl
or
cmpl
and
adc
es
dec
mov
xor
pop
jns
xchg
leave
rcrl
mov
pop
xchg
repnz
dec
fwait
in
sub
sub
adc
mov
fimull
rclb
jnp
sbb
lret
xchg
mov
jae
inc
add
pop
iret
lds
mov
fwait
sub
sub
sbb
iret
scas
divl
push
movsl
and
movsl
pop
mov
mov
jmp
gs
adc
fdivrp
dec
mov
lds
frstor
adc
loope
jmp
mov
pop
xlat
xchg
stos
aam
in
or
clc
enter
xchg
aaa
iret
push
mov
andb
ret
fs
or
scas
jno
xchg
jns
push
cs
adc
cmpsb
div
mov
testl
imulb
xchg
mov
cmp
dec
cmp
or
int3
lcall
imul
adc
stc
int
cmp
adc
nop
fistl
jns
sub
push
xchg
push
cmp
add
xchg
arpl
pop
adc
sahf
mov
pop
xchg
es
push
add
inc
push
adc
outsl
or
movsl
nop
test
fistps
jb
pop
dec
and
out
cmp
push
mov
sub
lret
test
mov
movsb
mov
jl
hlt
jmp
inc
cli
pop
hlt
movsb
in
pop
ja
sub
sarb
push
inc
les
pop
and
insl
jns
mov
bound
gs
sahf
or
and
jb
pushf
and
sbb
loop
push
lea
pop
test
inc
cltd
add
add
dec
dec
ds
pop
mov
and
aas
cmp
or
push
push
add
xor
cmpsl
addl
cwtl
in
or
jle
mov
cmpsl
inc
or
dec
mov
pop
xor
dec
push
mov
lock
test
mov
lods
scas
stos
aad
lds
stc
mov
jns
lret
sbb
pushf
and
push
test
test
mov
cld
fisttps
test
shll
mov
jecxz
mov
orb
pop
pop
jge
hlt
fwait
mov
add
mov
adcl
lods
imul
sub
aaa
dec
mov
or
dec
lds
xchg
or
mov
bound
int
test
gs
add
popa
inc
fisttpll
nop
pop
pop
jp
push
lods
and
in
daa
lds
mov
jle
mov
daa
stc
and
sub
sbbl
jmp
push
mov
or
jecxz
rorb
int3
mov
mov
repnz
stc
mov
aam
push
adc
insl
stc
faddl
jmp
or
cmp
adc
hlt
outsl
shrb
addl
dec
mov
mov
jecxz
mov
and
shrb
jmp
xchg
mov
push
and
cmp
xorl
xchg
mov
inc
imul
or
aas
mov
jne
adc
add
jg
cmp
mov
fnsetpm(287
das
xchg
loope
pop
mov
xchg
or
nop
xchg
icebp
cmpsb
ds
xor
adc
pop
dec
in
sbb
jns
cltd
push
sub
addr16
dec
mov
xlat
cmp
movsl
ja
jns
xchg
jecxz
bound
ret
xor
das
into
adc
cmpsl
or
jne
inc
push
sub
lods
sbb
popa
mov
sbb
clc
mov
ror
pop
repz
inc
xchg
add
out
out
sbb
mov
mov
out
and
ret
xchg
enter
cmp
dec
jae
or
insb
xchg
add
xchg
ret
insb
cmp
add
push
push
xlat
int3
lret
and
inc
sub
dec
and
cmp
mov
je
inc
adc
pop
inc
shll
ret
xor
jle
and
mov
data16
mov
int3
outsl
jp
jmp
dec
lahf
rcrl
stc
lret
lock
jae
sub
test
loope
fchs
or
jl
aas
xor
and
ss
cmp
mov
jl
lcall
sub
inc
loopne
mov
mov
jle
test
stc
jno
jl
push
add
mov
mov
lods
loopne
loopne
imull
pop
cmc
and
xor
mov
icebp
sbb
xor
or
insl
dec
pop
int
js
ds
nop
or
inc
inc
fmull
push
lods
mov
popa
mov
xchg
adc
push
cli
dec
imul
dec
or
orl
std
push
jg
pop
pop
ret
rcl
xchg
push
xchg
mov
mov
dec
bound
ror
movsb
in
pop
and
and
sahf
imul
mov
mov
aas
or
pop
xchg
popa
in
pop
sbb
or
sbb
adc
pop
mov
push
push
sub
mov
stos
mov
push
and
add
xor
sbb
xor
mov
xor
fisubrs
int
mov
mov
imul
push
call
rcll
mov
jmp
popf
mov
in
mov
hlt
mov
pop
aad
pop
mov
mov
mov
sub
shrl
xor
adc
repz
loopne
pop
fadd
rcr
jo
movb
hlt
xor
inc
negb
stc
stos
movb
adc
jns
xchg
mov
add
repnz
xlat
and
mov
ret
jnp
pop
push
cmpl
mov
sub
outsb
movb
push
sbb
jne
outsl
mov
or
sti
enter
mov
lea
push
pop
sbb
dec
iret
outsl
subb
cmp
jae
lcall
push
outsb
sbb
adc
roll
push
mov
dec
jge
test
jno
and
das
imulb
xchg
es
xor
mov
jmp
jp
lcall
xor
xchg
adc
fcomi
xor
js
push
insb
stos
xor
cmp
mov
insl
cmp
mov
jno
mov
and
in
pop
lret
idivb
push
and
add
fidivrs
push
ds
fcomp
push
cmp
imul
mov
adc
pusha
pop
sarb
lods
fsubrs
in
xchg
cwtl
add
xor
fsubp
cmc
cwtl
pop
imul
adc
ja
xchg
das
xor
call
xlat
push
jne
outsl
scas
sbb
in
sub
pusha
mov
shlb
mov
add
in
xor
adc
in
stos
aaa
into
bound
sbb
jge
sbbb
ljmp
stos
mov
xchg
call
movsl
cmp
sub
dec
outsb
push
xchg
inc
lea
jbe
jp
movsb
scas
cltd
enter
or
sbb
mov
fistl
data16
mov
pop
push
outsl
mov
inc
sbb
inc
or
pop
lret
repz
hlt
jge
mov
and
pushl
jle
cmpsl
jge
cmp
fdivrs
adc
pop
aaa
mov
jb
mov
out
jecxz
jno
cmc
out
and
mov
jbe
or
scas
or
out
push
jle
bound
orb
push
cltd
jge
cli
and
lcall
xor
scas
pop
or
and
rcrl
aam
cmp
andb
xor
ret
adc
test
sub
xchg
sbb
pusha
cmp
sbb
aas
push
dec
push
xchg
xchg
imull
popa
jmp
imul
xorl
push
mov
in
andb
push
arpl
and
in
jge
xchg
shrb
push
ret
nop
aam
jo
xchg
call
push
dec
jns
mov
into
shl
xchg
inc
sbb
and
and
mov
inc
add
and
daa
shrl
cmp
lahf
add
and
pop
std
sub
add
loope
outsl
inc
popf
jg
dec
jb
popf
mov
sbb
lods
mov
cmp
push
nop
or
mov
xchg
loopne
rcrl
sub
outsb
in
stc
jge
js
or
in
mov
test
sahf
cmp
outsb
das
call
and
arpl
in
push
nop
stos
push
test
loopne
lods
pop
mov
mov
out
clc
fdivrl
and
sar
cmp
insb
jo
cmp
dec
cmp
or
data16
lahf
sbb
mov
int3
pop
ss
mov
inc
add
mov
pop
and
pop
cmp
push
test
movzwl
sub
test
gs
lods
icebp
arpl
push
popa
gs
mov
add
into
jg
lds
push
push
fisubrs
mov
and
mulps
test
adcl
dec
sub
or
sub
movsb
jb
sub
pop
mov
mov
imull
or
cwtl
test
xchg
aam
and
shlb
popa
andb
or
sbb
jle
cmp
dec
inc
lock
adc
je
xchg
jne
aad
lahf
dec
push
xor
jmp
lods
and
leave
repz
repz
mov
cs
rorb
mov
mov
into
jmp
push
scas
dec
orb
xor
xchg
push
scas
xor
das
jl
data16
sbb
pushf
pop
lods
popa
mov
cmovp
ss
jno
push
je
dec
pop
and
in
movsl
in
sbbl
push
jge
push
mov
dec
jmp
scas
sbb
into
stos
push
in
jo
push
add
nop
dec
mov
mov
cwtl
hlt
add
testb
xchg
sbb
insb
dec
in
sub
imul
scas
add
mov
mov
jl
js
inc
pop
xchg
testb
icebp
and
in
scas
push
add
pushl
in
arpl
push
mov
shl
add
inc
and
mov
xchg
sbb
sbb
jmp
mov
xor
in
inc
sub
cmp
in
test
inc
arpl
mov
mov
pusha
ja
jg
and
jb
jmp
sbb
lret
es
in
inc
sub
mov
xor
add
adc
push
sahf
dec
lcall
call
pop
fsubs
sti
lods
pop
fsubrl
js
scas
inc
outsl
loope
notb
pop
arpl
imul
out
sbb
xchg
pop
jae
jecxz
cli
push
push
pushf
mov
pop
mov
push
or
dec
jge
test
push
movsl
mov
enter
jl
and
push
pop
es
add
pop
lds
push
adc
aam
leave
jb
in
jno
mov
push
pop
inc
es
lds
imul
xchg
add
scas
bound
outsb
iret
adc
loop
adc
inc
test
in
mov
rorb
pusha
lcall
inc
loopne
lahf
xor
cmp
rcrb
data16
push
or
fnstenv
in
sub
sti
xor
sub
lret
push
ja
movsb
xchg
fwait
jmp
xchg
fisubrl
aam
mov
pop
push
shl
outsl
dec
cmp
or
mov
inc
dec
dec
mov
or
out
scas
mov
sbb
sbb
sbb
lret
repnz
sbb
cs
cvtdq2ps
adc
ljmp
sub
push
mov
push
or
shr
mov
out
jae
fisubrs
cli
push
cltd
icebp
das
mov
idivl
int3
pop
dec
cmp
xchg
sbb
xor
mov
ret
sbb
lcall
dec
xor
sbb
out
stos
sbbl
imul
lock
sar
inc
mov
mov
inc
jmp
push
xor
xlat
and
cli
mov
pop
bnd
stos
jl
dec
outsl
movsb
xchg
mov
adc
jo
ss
xchg
add
pop
iret
sub
xor
jecxz
sbb
dec
dec
or
test
xchg
xor
adc
shl
xchg
xchg
idivb
xor
cli
rolb
lods
jle
jle
add
cmp
out
xchg
pop
or
int
inc
aam
and
out
dec
in
push
jb
pop
pop
fstps
jmp
mov
in
stos
std
xor
cmp
cmp
das
or
mov
mov
jl
rolb
inc
jnp
jl
and
inc
mov
pop
je
sub
in
fdivl
push
xorl
xlat
testb
aaa
rorl
aaa
pop
or
sti
mov
cld
dec
inc
jns
ret
lahf
pop
jl
sahf
scas
int
mov
mov
popa
dec
xchg
mov
xlat
and
xchg
push
ret
add
xlat
sub
or
call
or
xor
lret
je
inc
push
jmp
int
les
movsb
fldenv
jmp
mov
mov
fdivr
imul
adc
sti
ret
cmpsl
mov
mov
jle
stos
mov
mov
stc
xor
jp
rol
xchg
aad
jecxz
cmpsl
mov
jnp
add
jl
inc
sub
mov
addr16
pop
cmpsl
cmpsl
pop
dec
jnp
mov
movsb
loopne
lea
and
loop
dec
push
or
mov
pop
in
stos
mov
xchg
push
sbb
movsl
lret
aad
and
dec
dec
xchg
les
xchg
sbb
repz
dec
pop
adc
testb
insb
std
test
add
arpl
ss
mov
mov
dec
lcall
push
fisubrl
out
sub
ja
shrb
adc
nop
pop
jg
stc
add
dec
ja
mov
mov
aad
xor
adc
mov
inc
sub
dec
cmpsl
loope
jp
aaa
pop
ja
xor
js
xchg
cwtl
loope
pop
ficomps
pop
adc
jecxz
fsub
lock
and
and
movsb
mov
sub
push
or
xchg
ljmp
arpl
mov
inc
gs
xor
mov
sub
inc
loop
out
push
jns
lret
xor
inc
or
cmpsb
or
adc
cmp
out
cmpsl
std
cmp
shrl
cmp
pop
xchg
into
adc
std
and
iret
sub
ret
jg
adc
roll
mov
dec
sbb
adc
dec
iret
loope
add
addr16
pusha
ret
test
je
decb
or
mov
adc
push
rcr
fstps
mov
mov
adc
testl
sbb
rorb
xchg
mov
pop
inc
pop
enter
mov
lret
cmpsl
mov
xchg
mov
cmp
cmpsb
nop
mov
xchg
ret
out
xchg
mov
or
mov
aam
cmp
sbb
daa
and
sbb
pop
les
push
leave
andb
dec
push
inc
inc
add
sbb
cmp
push
out
fildll
xchg
add
jl
movsl
xor
mov
hlt
mov
out
iret
mov
outsb
in
ret
inc
and
mov
popf
mov
fadds
jge
and
xchg
jl
jb
lods
fnsave
mov
lock
xor
je
imul
mov
mov
insb
mov
mov
fsubrs
stc
repz
jno
lods
jne
mov
xchg
or
ret
jb
dec
jg
mov
fcomps
xchg
sub
mov
scas
cwtl
push
mov
imul
dec
sarl
dec
sub
dec
imul
inc
insl
nop
dec
add
or
xchg
insb
rcrb
adc
in
pop
push
subl
mov
jae
jae
ret
inc
in
lret
dec
jmp
or
push
push
fidivrs
sub
pop
xor
clc
xor
test
mov
in
sbb
test
pop
xor
push
sbb
or
dec
mov
in
imul
inc
pop
push
fadd
loope
jg
mov
cwtl
les
in
mov
ljmp
xchg
mov
lcall
aam
mov
jecxz
std
dec
je
js
mov
push
mov
cmp
mov
iret
fnsave
addr16
movsl
popa
daa
mov
lret
iret
push
int
in
aam
dec
sub
push
mov
mov
cs
sbb
sarl
adc
fdiv
loop
test
cmp
mov
int3
repnz
cmp
subb
add
adc
loope
movsb
lcall
push
sub
aas
cmovbe
and
into
adc
add
mov
dec
fisttps
aaa
mov
pop
popa
jl
push
test
push
dec
fs
fs
das
sbb
dec
sub
adc
push
sar
mov
fwait
rcr
mov
je
imul
repnz
add
arpl
adcl
push
clc
jbe
stos
movhps
add
test
out
arpl
imulb
mov
dec
xor
out
pushf
ja
push
orl
pop
imul
mov
sub
inc
ja
mov
in
add
insb
stos
lods
mov
adc
jno
or
lahf
loope
and
sti
out
inc
jle
dec
xchg
neg
cwtl
dec
shrb
outsb
xorl
pop
enter
jg
insl
es
or
arpl
pop
mov
pop
mov
out
int
loope
cmpsb
pop
dec
inc
aaa
scas
adc
add
jg
xchg
movsb
lods
mov
jne
jmp
sbb
fcomps
fwait
ljmp
inc
jmp
stc
sub
ja
adc
iret
jno
das
xchg
sbb
enter
cmp
mov
xchg
mov
std
pop
cmc
jle
scas
lcall
lcall
hlt
pop
lods
sbb
out
insl
mov
rcr
push
aad
cmp
shll
pop
loope
pop
aaa
repnz
push
daa
out
xchg
xchg
cs
mov
insb
cmp
cmp
fdiv
jns
xchg
leave
in
aad
daa
mov
out
jbe
stos
push
sbb
outsb
sbb
cmp
pop
les
cld
adc
insl
add
fwait
nop
dec
fisubrl
ljmp
pop
loope
orl
xor
daa
cwtl
mov
or
xlat
push
dec
bound
popf
loop
jne
stc
xchg
lock
int
js
pop
ret
decl
arpl
or
aam
mov
sub
push
and
fmuls
rolb
out
jnp
jge
push
in
mov
add
sbb
jecxz
xlat
mov
enter
sub
adc
xlat
dec
push
movsb
insl
push
sbb
cmp
les
in
pop
mov
xchg
sbb
xchg
mov
pushf
xchg
ljmp
jmp
clc
pop
pushf
or
dec
cmp
and
pop
leave
loopne
adc
in
add
mov
mov
jle
jecxz
dec
rcrl
fmulp
ret
je
imul
lret
adc
xchg
dec
pusha
pushf
lea
jecxz
rcrb
push
mov
lahf
fstl
dec
mov
pop
mov
incl
xor
and
add
mov
sbb
gs
outsl
xchg
cmp
jo
jno
in
jno
in
or
dec
icebp
addr16
mov
popf
insl
mov
out
sti
aaa
xor
call
or
decl
inc
inc
pop
xchg
mov
popf
push
adc
inc
jo
pop
mov
push
pop
cmpsb
int3
clc
clc
sarl
pop
dec
outsl
daa
pop
or
cld
push
mov
insb
sahf
jp
pop
lods
lds
das
jmp
sti
into
xor
je
fwait
push
mov
mov
inc
mov
in
inc
rolb
insl
and
addr16
seto
iret
mov
sbbl
inc
mov
pop
rclb
pop
jnp
mov
jo
mov
xchg
sbb
cld
add
dec
pop
mov
mov
call
jecxz
add
ficoml
push
mov
mov
xchg
xlat
mov
cmpxchg
shl
mov
jo
rclb
and
lcall
lahf
push
mov
mov
sbb
mov
pop
adc
fcoml
es
jno
insl
mov
add
out
negl
xorb
imul
add
xlat
mov
adc
rclb
testb
insb
dec
mov
in
mov
sbb
lds
fcoms
pop
sub
xchg
cmpsb
std
aaa
push
das
mov
push
pushf
dec
cmp
jl
xlat
cli
jl
sbb
mov
mov
test
mov
xor
lret
inc
cmp
aas
insb
mov
push
push
out
mov
loope
sub
push
fists
aam
dec
ret
xchg
flds
loop
add
nop
imul
and
add
mov
jmp
inc
sbb
push
mov
mov
xchg
inc
inc
fimuls
je
int3
outsl
loope
and
ja
pop
sbb
add
pop
adc
adc
notb
repnz
push
push
mov
divb
push
mov
lcall
cmp
into
clc
pop
adc
add
adc
dec
jae
addr16
fdiv
and
pop
shl
into
fdivl
addb
add
mov
xchg
ss
and
insb
mov
mov
jns
lods
mov
xchg
sub
jae
adc
adc
bound
icebp
decl
in
lock
fmulp
ficoms
push
mov
inc
lahf
pop
cmp
lock
xchg
or
gs
adc
jo
stc
cmp
mov
cwtl
sbb
and
xor
rorb
in
or
xchg
pop
call
int
xor
adc
sub
push
jae
mov
jge
adc
sar
imul
jne
aam
pop
mov
and
in
add
das
mov
add
add
adc
icebp
into
jg
and
cltd
lds
adc
hlt
mov
xor
jbe
dec
out
aad
sub
mov
mov
xchg
notl
mov
lret
xor
sahf
mov
cltd
pop
mov
lods
cmp
push
popa
loopne
fisttpl
lahf
iret
enter
pop
and
add
jo
scas
aad
dec
es
and
xchg
mov
fcmovnu
xor
xchg
pop
adc
mov
adc
push
int
scas
mov
and
ret
pop
aad
aaa
lret
pop
daa
in
pop
js
daa
push
int3
scas
cli
nop
dec
ret
cltd
jp
das
movsb
mov
adc
mov
jb
cmc
pop
fdivrs
sarb
xor
or
mov
cmpsb
cmp
ja
aam
leave
jae
icebp
test
das
gs
test
fcomip
fdivl
mov
inc
rclb
or
ss
mov
lret
in
movsb
jnp
fidivrs
scas
in
ljmp
mov
or
js
push
mov
pop
jle
leave
jmp
jne
daa
jle
cs
scas
es
or
ret
lret
fs
mov
cmc
ds
test
aaa
push
mov
pop
lahf
pop
movsl
xor
call
sbb
mov
sub
aaa
test
jne
arpl
adc
xchg
sbb
mov
loop
sbb
or
sub
popf
test
shld
and
cmp
lds
sbb
and
sub
push
sub
and
and
mov
inc
xchg
imul
clc
notl
push
mov
ret
or
iret
adc
test
into
cmp
rcrb
or
into
xchg
pop
and
fcoms
popa
and
mov
outsb
jl
pop
test
or
mov
pop
mov
cmp
test
or
loopne
imul
cmp
sahf
mov
test
mov
cwtl
pusha
les
sbb
inc
fsubr
in
mov
jb
dec
pusha
xor
xchg
inc
xchg
push
leave
div
test
mov
scas
push
xor
jae
push
bound
mov
pop
jno
popf
mov
imull
aaa
dec
aaa
jne
repz
data16
iret
xor
sbb
and
loopne
pushf
icebp
jno
adc
movsl
and
jle
jg
mov
testl
das
cmp
je
ds
sub
popa
imul
jle
int3
insb
es
xchg
sub
mov
aad
mov
adc
pop
dec
loope
jo
add
sbb
loop
divl
and
in
fiadds
testl
push
lret
sub
pop
mov
fsubp
mov
jne
adc
addb
mov
icebp
jb
loopne
mov
loope
pop
mov
mov
lret
hlt
mov
cld
add
jb
add
std
jo
dec
adc
call
and
push
and
setg
rclb
insb
jge
mov
in
sti
fildll
movsl
ljmp
sbb
clc
std
cli
jp
push
inc
and
inc
and
hlt
insb
add
xor
mov
mov
pop
aaa
pop
add
and
icebp
mov
jge
pop
push
sbb
fcmovb
lret
lret
jle
jae
mov
sub
xor
jbe
xchg
lret
pop
bound
add
push
adc
cmpl
mov
xor
mov
push
cmp
mov
cmpsb
fstps
out
cli
movsb
lds
xor
gs
out
inc
mov
pop
xchg
hlt
fisubrs
and
das
xchg
scas
pop
dec
bound
cmp
jmp
sbb
dec
ljmp
shll
int3
in
shll
adc
daa
outsb
lret
fwait
cltd
push
cwtl
jno
test
aam
xchg
loopne
rolb
jne
lcall
dec
sub
push
sbbl
je
xchg
pop
adc
pop
movsb
mov
push
ja
pop
push
es
xor
clc
jle
mov
cmpsb
dec
insl
add
jp
xchg
lods
int3
es
sbb
mov
pop
sub
mov
mov
fcmovb
and
stos
push
adc
sbb
sarb
iret
jo
dec
cmp
push
xchg
into
add
hlt
cmpsl
outsl
das
push
fdivs
out
icebp
dec
mov
and
sbb
test
fsubrl
in
loopne
mov
jo
lods
movsl
sub
sbb
pop
sub
adc
inc
lock
fadd
jns
xor
inc
mov
jns
fcmovnb
out
repnz
jb
pmaddwd
shr
xor
push
ficoml
dec
mov
cmp
sub
mov
bound
push
inc
mov
out
xchg
xor
cmp
jmp
xchg
xchg
clc
imul
in
sbb
loopne
dec
inc
push
lock
lcall
pop
shrb
insb
in
das
rcl
add
clc
pop
mov
cltd
shrb
fldcw
or
out
movsl
pop
mov
add
mov
dec
mov
insb
scas
dec
scas
add
jg
xor
adc
cmp
push
xchg
cwtl
mov
sub
xchg
pop
iret
inc
in
mov
xor
and
aad
imul
xchg
push
repnz
pop
xor
subl
adc
inc
or
mov
jle
push
xchg
insl
xchg
bound
pop
pop
push
subl
jg
push
gs
pop
add
sub
xor
mov
jp
inc
or
xchg
loop
and
out
nop
out
repz
push
insb
mov
in
enter
or
mov
dec
rcll
xchg
lods
mov
mov
mov
adc
jp
in
mov
stos
add
pop
inc
dec
cmovo
daa
adc
ds
sbb
mov
cmpl
sar
mov
imul
mov
bound
ret
rorb
mov
and
sub
lds
out
and
jle
arpl
cli
dec
xchg
cld
pop
and
add
mov
xchg
bound
das
leave
sub
mov
push
dec
sub
icebp
ja
adc
scas
sub
jecxz
scas
pusha
pop
clc
mov
push
inc
pop
fdivrs
insl
jmp
pop
inc
or
lea
or
mov
lret
xor
mov
or
cwtl
sbb
push
ret
push
xchg
out
lret
imul
adc
sbb
mov
insb
mov
loopne
fists
pop
int3
test
or
xor
pop
rolb
lods
push
jge
inc
push
enter
inc
popf
cwtl
js
es
pop
xchg
lods
xchg
push
cli
xor
fistpll
cs
shrb
sub
xchg
popa
into
nop
mov
test
ljmp
inc
cltd
das
cmp
xchg
pop
ss
pop
les
adc
fisubs
pop
ja
or
or
loope
shll
mov
ror
mov
inc
and
xor
mov
popf
std
sub
jnp
cltd
rcr
aas
ljmp
iret
mov
dec
push
xor
out
pop
xchg
das
add
lret
mov
lods
mov
push
dec
insl
test
testl
bound
clc
mov
mov
mov
dec
les
lahf
negl
mov
clc
aas
lock
jle
dec
pop
idivb
push
fiaddl
cmpsb
clc
ss
push
pop
pop
in
mov
jb
lahf
leave
and
ror
mov
push
sub
jge
stos
rclb
mov
pop
sbb
pushf
adc
or
in
and
push
orb
sub
aas
dec
ljmp
xor
into
jl
mov
lods
or
and
adc
int3
ljmp
out
mov
cmp
add
mov
in
or
out
jnp
add
stos
jp
lea
sahf
lea
outsb
push
les
clc
in
mov
ret
mov
dec
mov
shrb
sub
xchg
cli
aam
mov
repnz
imul
out
lret
imul
cltd
rolb
ss
jecxz
mov
jge
into
loopne
sahf
out
sbb
mov
lods
mov
not
xchg
out
mov
jmp
jmp
adc
pop
ret
cmp
mov
repnz
sbb
and
loope
push
std
in
pop
fs
xchg
sbb
faddl
repz
pop
stos
and
jle
into
adc
daa
data16
jmp
lods
mov
or
bound
aad
les
push
xor
adc
frstor
and
movsb
out
mov
mov
loopne
inc
jle
std
popa
mov
aas
cmpsl
jno
jae
inc
lds
cld
scas
mov
les
ja
sarl
mov
sub
xchg
and
mov
lods
or
pop
and
and
add
andl
cmpsl
xor
add
jl
add
sbb
xchg
cmp
sahf
jbe
data16
mov
mov
cmpsl
inc
mov
mov
cmp
pop
mov
xor
clc
push
adc
ljmp
lret
or
imul
es
outsl
sub
jmp
mov
push
adc
sbb
jecxz
cs
mov
push
xchg
outsb
fcoms
out
stos
push
mov
jge
jecxz
mov
jno
mov
scas
or
in
cs
cmp
lods
jns
add
cs
cmpsl
fbstp
sahf
repnz
arpl
xchg
int
pop
lret
lods
add
cmp
xor
jno
add
mov
mov
adcl
xor
rorb
enter
int
fldl
dec
pop
cmp
js
nop
lret
xchg
sti
mov
setno
dec
push
sti
scas
and
rol
inc
cld
sbb
stos
cmp
or
stc
sbb
in
iret
mov
dec
and
jae
fisubs
ljmp
cltd
xchg
fistpll
adc
insb
lds
outsl
mov
lea
sahf
cli
arpl
sti
cmp
shr
inc
pop
or
scas
adcb
xchg
cs
negb
cli
push
jns
jb
pmulhuw
addr16
push
xchg
sbb
or
adc
sbb
sarl
cwtl
xlat
jg
sbb
mov
scas
mov
lcall
xor
xchg
iret
mov
pop
faddl
lea
xor
mov
in
fwait
adc
xchg
mov
pop
loope
fs
sbb
mov
movsb
xchg
xor
sbb
ret
mov
pop
test
add
adc
shll
flds
aad
sub
push
rep
inc
pop
fiadds
fsubrs
pusha
in
popa
xchg
pop
fistpll
ljmp
push
inc
mov
xchg
ja
push
repnz
push
mov
add
outsb
out
aas
fcmovnu
lahf
cmp
imul
sbb
cld
push
xor
in
pop
mov
hlt
sub
or
pop
cs
scas
dec
sbb
sub
stos
outsl
sti
pop
mov
inc
sbb
les
adcb
daa
pusha
pop
cmp
imul
fcomps
pop
loop
stc
lcall
push
mov
mov
es
inc
push
and
xchg
mov
sarl
pop
xor
leave
pusha
xchg
mov
sbb
rorb
sbb
cmpsl
mov
cmp
inc
iret
xor
mov
lods
inc
out
cmp
in
fwait
or
insb
lds
dec
jg
jg
jp
cmc
insb
mov
int3
lcall
je
or
ret
sbb
adc
xchg
or
jl
into
sbb
mov
mov
cltd
int
pop
xlat
mov
push
sub
call
xchg
loop
or
inc
dec
mulb
lahf
jnp
jo
iret
cwtl
sub
mov
imull
inc
push
not
jle
dec
popf
or
or
sbb
dec
icebp
test
pop
insl
pop
or
and
in
js
rcr
add
jecxz
imulb
pushfw
xchg
ljmp
fiadds
out
imul
pushf
lds
int3
aam
out
sub
sahf
pop
cmp
pop
dec
mov
std
notl
popf
sbbb
lods
les
inc
jecxz
push
aad
shl
and
fcmove
fnstsw
add
pop
mov
jle
jmp
sub
out
fidivs
xchg
fcmove
sarb
inc
jle
pushf
ja
aad
icebp
mov
lods
or
test
addb
add
pop
jnp
push
popa
insl
in
mov
rolb
cmp
addl
mov
roll
inc
lea
or
inc
inc
mov
push
mov
stos
das
sub
and
and
jmp
xor
inc
mov
sbb
cs
ja
xchg
sub
into
pusha
or
mov
push
or
and
inc
loopne
fsubs
inc
or
lcall
gs
outsl
test
sbb
cwtl
or
push
not
jnp
push
lock
gs
jns
sbb
pushf
hlt
adc
mov
jno
je
sub
test
cltd
and
test
imul
loope
arpl
and
movsl
and
adc
jnp
mov
cmpsb
adc
mov
push
repz
adc
inc
rcr
inc
rol
pop
data16
or
lods
cld
std
insl
push
jmp
sbb
sbb
stos
divl
xchg
cltd
fisttpll
xchg
jl
or
ja
arpl
adc
sbb
push
out
rclb
je
dec
mov
mov
insl
adc
fsubrs
dec
arpl
mov
sahf
add
pop
adc
bound
addr16
cmp
inc
cmp
cmp
enter
mov
aam
adc
cwtl
sub
xchg
outsl
pop
lret
cmpsb
sbb
test
sbb
ja
mov
cwtl
sahf
and
push
lret
jae
dec
mov
sub
jne
dec
int3
or
mov
push
adc
mov
mov
lret
jnp
or
shlb
sbb
ret
int3
stos
mov
dec
sub
xor
adc
inc
jmp
xchg
inc
out
lcall
push
sub
lods
cmp
mov
lea
fcmove
inc
xor
jg
mov
mov
call
inc
mov
aaa
mov
fwait
sbb
jge
push
aaa
dec
xor
aam
cmp
or
push
xor
add
aad
or
aaa
cmp
in
lea
mov
ret
test
std
mov
popf
mov
movsl
mov
aas
cmp
and
fdivs
insl
mov
stc
push
xor
push
sarb
dec
imul
mov
push
test
es
and
je
xor
push
or
cli
xchg
mov
add
mov
sub
sub
out
mov
insl
iret
sub
mov
sti
cli
jns
adc
inc
jnp
xor
incb
push
xchg
adcl
ljmp
dec
mov
out
in
in
inc
in
aad
test
and
push
jmp
aam
lods
mov
int
mov
ret
test
push
sti
pop
sub
jno
mov
sbb
sbb
add
inc
repz
add
cli
pop
repnz
stos
or
pop
inc
loopne
push
fmulp
lahf
mov
xchg
mov
xchg
mov
adc
repz
fidivs
jns
jne
sbb
nop
xor
push
pusha
stos
adc
je
testb
lret
rolb
ret
cmc
ret
push
lods
loopne
add
mov
xchg
mov
in
ss
scas
jno
adc
cmp
fbld
bswap
pop
rcrl
mov
jns
jno
sbb
inc
ljmp
add
or
sub
add
xor
dec
push
stos
fdivrs
stc
jb
testb
hlt
jns
leave
xchg
cli
mov
iret
stc
ss
xlat
pusha
data16
jmp
aad
jecxz
sub
and
or
lds
add
int
rcl
daa
popf
jmp
in
jg
dec
adc
jmp
outsl
pop
loop
cmp
and
push
mov
cmp
lcall
xchg
inc
movsb
js
adc
pop
cmp
shl
mov
addl
and
adc
fidivrl
push
sti
adc
xor
add
aaa
ret
sub
push
cs
push
jo
fs
push
and
mov
fisttpll
inc
inc
arpl
rolb
daa
fdivs
imul
pop
outsl
nop
cmp
sar
cmp
mov
addb
popf
jmp
adc
lods
notl
cld
out
and
aam
fcomps
jo
xor
test
ljmp
pop
mov
sub
cwtl
jno
mov
sbb
xchg
inc
mov
std
jmp
shlb
and
call
cmp
push
mov
add
nop
addl
cmpsl
fwait
push
out
rorl
lods
xchg
jo
insb
jb
push
hlt
jge
jmp
repz
test
ljmp
adc
mov
movsl
add
jg
add
lret
mov
mov
jne
adc
mov
sbb
hlt
sbb
lods
repnz
cld
sbb
clc
dec
mov
dec
mov
xchg
lahf
dec
mov
pop
out
dec
fistl
lock
mov
mov
test
or
sbbb
sub
pop
aaa
or
xlat
inc
and
aam
stc
push
gs
mov
mov
push
push
push
repnz
inc
dec
mov
xor
and
jno
push
shlb
push
cmp
mov
outsb
arpl
sbb
cmp
mov
adc
mov
and
add
push
les
sbb
mov
ljmp
jo
lock
mov
nop
xor
jmp
fsubrp
push
jp
cltd
mov
jp
lea
out
call
push
cmp
fcmovne
jecxz
mov
add
or
int3
xchg
orb
mov
outsb
xchg
sbb
in
popf
mov
daa
jmp
cmpb
inc
es
push
jae
call
add
pop
hlt
mov
sub
xor
int3
sti
pop
sbb
jae
lret
cmp
xlat
jp
insb
in
lahf
out
add
cmp
push
push
or
lods
int3
imul
pop
lret
test
mov
jmp
jnp
and
out
sbb
pushf
repnz
sbb
sub
pop
mov
in
clc
cld
fcomip
scas
mov
mov
xor
push
enter
int
push
pop
insl
mov
hlt
or
cmc
cmpsb
stos
push
out
mov
popf
mov
insb
out
icebp
dec
cmc
test
sub
sbb
stc
and
addl
test
dec
adc
dec
repnz
adc
or
movsb
insb
out
jle
out
add
cld
in
mov
scas
and
test
ret
lock
dec
jns
dec
enter
inc
mov
or
lds
pop
shr
rcr
xlat
shr
inc
mov
mov
sub
add
sbb
jns
popl
mov
into
fistl
je
adc
icebp
mov
add
lds
test
outsb
repnz
jl
in
dec
ljmp
loop
jle
jmp
es
sbb
push
or
outsl
inc
mov
xchg
jnp
inc
xor
dec
add
or
addr16
inc
push
mov
jge
jo
xchg
jbe
sbb
jo
inc
out
xor
es
popa
jge
js
orl
jae
push
dec
xor
int3
xor
pop
mov
mov
mov
jnp
lods
xor
xor
jne
mov
mov
adc
sub
sub
mov
in
gs
or
jp
pop
je
bound
adc
leave
mov
cmp
sub
inc
jp
scas
jnp
call
xor
popf
or
xchg
ss
stc
adc
popa
lock
adc
cmp
leave
scas
push
push
mov
movsl
lahf
adc
dec
inc
pusha
mov
sti
fwait
push
inc
int
cmp
lods
outsl
lock
cmp
mov
and
int
cmp
fidivs
vpmullw
je
insb
sub
push
fistpll
pop
push
lret
and
push
and
fiaddl
nop
cmc
outsl
pop
cmp
rcrb
xor
fbstp
ret
popa
mov
mov
dec
cs
int
scas
push
leave
xchg
dec
and
int3
cmp
stc
sub
xlat
dec
adc
sub
inc
pusha
dec
mov
or
lahf
popf
cmp
mov
jl
nop
out
aas
sub
push
in
push
out
aaa
xlat
andl
aas
mov
clc
insb
xchg
or
jmp
or
arpl
test
push
mov
std
std
jne
pop
sub
imul
pop
mov
jno
leave
xchg
int3
push
mov
ret
daa
push
movsb
cmp
cmpsb
xchg
std
daa
mov
mov
loope
push
je
inc
dec
sub
xor
xchg
inc
dec
inc
adcb
adc
cmpsb
add
lret
outsb
inc
xlat
cmpsb
jmp
jae
outsb
pop
and
lock
les
pop
and
lahf
fs
notb
mov
jle
add
jle
int
push
jge
adc
loop
or
adc
cwtl
mov
and
insl
subb
adc
jbe
or
rorl
mov
cs
mov
ss
ja
sub
inc
dec
or
xor
dec
fucomi
xor
xchg
in
xchg
imul
sub
pop
lods
mov
push
jo
stc
lcall
push
fstpl
jnp
mov
cmpb
das
and
adc
incl
mov
mov
lret
rorb
stos
pop
inc
or
shrb
sub
mov
fstps
inc
fcoms
es
es
aam
rorb
iret
jae
sub
sbb
push
pop
sti
mov
inc
ds
adc
mov
mov
push
adc
sub
add
rolb
jno
das
mov
mov
out
lea
shlb
jnp
mov
addr16
fimuls
push
jns
and
push
xlat
xor
push
test
shll
jmp
lahf
leave
mov
pop
dec
mov
mov
in
fistps
or
add
dec
icebp
iret
fdivrs
ja
clc
add
addb
cmp
pop
insl
fisttpl
pop
ficomps
hlt
lods
cli
stos
xor
in
sub
lcall
add
addb
rcrb
xchg
sahf
dec
outsb
jmp
inc
or
adc
add
sub
arpl
adc
fldenv
insl
jg
lahf
or
push
sbb
scas
jle
jecxz
xlat
inc
in
pop
jl
int3
pop
mov
popa
movsl
pop
sahf
ret
adc
stc
or
fistpl
cwtl
dec
ret
pusha
sub
inc
xchg
ficoms
ret
mov
shlb
xchg
jae
cmpsl
pushf
cltd
add
cld
imul
addr16
mov
stos
cltd
push
pushf
mov
cs
jb
cmp
shl
mov
mov
jne
bswap
test
jp
push
sahf
mov
sbb
mov
add
loopne
jbe
push
nop
dec
cmpsb
fsts
mov
data16
sbb
mov
fsubrs
sbb
pop
repz
push
popf
enter
or
cmpsl
outsb
xchg
mov
mov
pop
orl
push
jns
fadds
shr
inc
cmpsb
nop
test
lock
cmp
aaa
mov
pushf
jl
mov
mov
dec
inc
push
xchg
sub
xchg
adc
push
rclb
lock
iret
fsubr
inc
jmp
das
inc
and
push
mov
ficomps
movsl
sarb
sub
pop
push
mov
xchg
cmp
aaa
cmp
xchg
repz
cld
inc
and
push
outsb
xchg
and
fsubr
xchg
xchg
mov
jmp
and
adc
inc
or
mov
int3
shr
add
xchg
sub
flds
dec
subl
jecxz
add
inc
jbe
insl
outsb
mov
cli
xchg
mov
mov
add
orb
dec
repnz
rol
sti
in
imul
aaa
test
pushf
sbb
lods
cmp
inc
and
mov
jmp
inc
insl
mov
xor
into
mov
and
lods
aas
aad
fimuls
clc
enter
fcmovbe
cmp
mov
xchg
inc
sti
out
icebp
xchg
out
pusha
dec
xchg
mov
pop
loopne
in
fistl
mov
fwait
cmc
cmp
fwait
lock
sub
lret
inc
mov
xchg
sbb
pop
pop
inc
xchg
out
aad
ret
scas
outsb
fisubrl
stc
push
into
test
shl
mov
pop
push
xlat
mulb
movsl
pusha
add
mov
xor
mov
test
jmp
jle
fyl2xp1
lods
mov
ret
adc
mov
jnp
out
add
lds
sbb
insb
lcall
push
cmp
pop
or
xchg
xchg
cwtl
push
pop
xchg
sub
test
fs
mov
dec
into
pusha
iret
add
push
push
inc
ror
xchg
push
xor
in
lods
sbb
fdivrl
xlat
lock
jns
das
fsubl
push
push
movsl
cmpsb
xor
jbe
fimull
ret
aas
jnp
movl
pop
jl
ljmp
leave
out
add
movsb
dec
in
ja
or
xor
xor
fucomi
mov
cmpsl
cmpsl
or
add
sbb
xchg
pop
ljmp
movb
dec
out
jecxz
cltd
orl
mov
dec
cmc
ja
insb
dec
mov
lcall
xchg
fs
xor
xchg
pop
in
stc
jb
pop
sub
or
pop
sub
imul
and
mov
out
inc
popa
in
pop
inc
add
xchg
imul
call
mov
mov
push
and
leave
mov
xor
jbe
lods
inc
das
xchg
jnp
repnz
mov
lret
mov
in
jb
mov
jg
and
je
mov
add
loop
pop
xchg
js
mov
in
mov
int
mov
inc
mov
pushf
ljmp
insl
mov
dec
out
mov
dec
or
sbb
clc
lods
xchg
push
adc
cmp
xor
cmp
mov
stc
dec
dec
sbb
js
ss
sub
adc
sub
loope
xchg
and
out
sub
inc
sete
xchg
dec
insb
xchg
adc
adc
shll
lods
imul
adc
loop
push
adc
dec
movsl
and
cwtl
ss
push
mov
jbe
xchg
lods
xor
jecxz
inc
enter
inc
cmpsb
jg
adc
adc
mov
xchg
repnz
and
int
push
scas
in
shll
xchg
inc
lods
rcl
and
pusha
sub
fwait
cmp
xor
lea
push
out
ja
out
mov
out
add
push
pop
add
xchg
hlt
lret
xchg
outsl
outsl
xor
mov
sbb
push
cmp
aam
mulb
shl
test
cmpsb
les
and
shrl
lods
or
mov
cmp
sbb
outsb
imul
pop
repz
jge
cmpl
faddl
add
dec
add
push
lret
xor
mov
pop
repnz
nop
js
push
sub
inc
js
dec
mov
ds
dec
test
sbb
push
sbb
mov
fwait
not
mov
or
dec
leave
mov
push
jmp
push
in
xchg
add
and
shr
and
sub
push
ljmp
push
fs
dec
dec
and
outsl
xor
mov
pop
jle
lds
xchg
push
lods
insl
jbe
lea
dec
dec
das
and
in
cltd
add
js,pt
mov
aas
fsubs
into
aam
mov
xchg
sub
sbb
daa
and
xchg
fwait
imul
ds
push
jo
mov
inc
mov
push
pop
jmp
inc
pop
inc
addr16
inc
mov
int
fstl
xchg
cmc
dec
jne
addr16
sti
inc
pop
sbb
sbb
cs
ds
sbb
or
outsl
adc
dec
add
or
xchg
xlat
pop
mov
jl
jns
repnz
in
test
adc
push
test
ds
adc
pop
insb
hlt
aad
pop
lods
mov
in
jl
inc
or
mov
jb
sahf
dec
cmp
lods
mov
scas
inc
ficompl
pop
dec
lahf
pop
push
aas
shlb
mov
mov
xor
pop
adc
cmp
dec
or
adc
jmp
dec
cli
lock
and
sbb
aam
loop
inc
fs
cmpsl
pop
sbb
jge
push
dec
mov
and
and
jb
jge
cmpsb
fldcw
into
je
lods
sti
das
call
cltd
iret
sub
xor
pop
imul
pushf
shlb
mov
push
leave
mov
adc
mov
add
mov
lret
fs
clc
jmp
ffree
push
and
shlb
lcall
fsubrl
pop
xchg
movsb
les
rcrb
les
push
add
out
mov
ja
out
fwait
jb
iret
or
inc
cmp
mov
mov
xor
inc
mov
push
adc
ret
jecxz
xlat
movsb
mov
sbb
sbb
data16
add
jnp
add
jbe
adc
fs
push
jbe
les
jnp
or
cltd
cli
push
and
movsb
push
cs
or
sti
fisttps
sahf
sub
int3
fdivrl
mov
mull
push
adc
xor
cmp
xchg
pop
loopne
push
jmp
xor
or
mov
decl
lcall
imul
pop
push
jle
push
mov
test
lcall
test
rclb
mov
leave
stos
jmp
fwait
jl
nop
cmp
jb
pop
leave
cmpl
scas
dec
fbld
out
ja
lret
insb
jecxz
mov
inc
cmpsb
lret
iret
pop
and
push
jb
cmpl
xchg
xchg
jns
dec
cmp
pop
fidivrl
cltd
mov
sbb
stos
lods
mov
jmp
jne
aas
mov
jle
fwait
xor
adc
ret
mov
fbld
mov
fisubrl
mov
outsb
push
push
pop
sar
inc
into
jae
push
negb
xchg
lock
pop
adc
mov
shl
mov
je
fistps
or
mulb
mov
sbb
ljmp
jle
inc
push
jecxz
hlt
dec
scas
and
mov
lret
clc
xchg
es
icebp
or
mov
sbb
pop
and
fs
lods
in
sub
pmaddwd
inc
cmp
call
mov
bts
mov
adc
xor
sbb
icebp
sbb
or
dec
add
int3
stos
xor
push
scas
jo
outsl
xchg
jns
adc
or
test
inc
xor
sbb
inc
fsubrl
cmp
lods
or
add
mov
pop
xlat
pop
cmp
sbb
and
and
scas
les
mov
mov
stos
cmp
push
mov
jnp
mov
sbb
push
push
adcb
mov
jo
push
dec
arpl
xchg
xor
int
dec
jae
addb
je
push
lret
and
pop
sub
jo
fmuls
pop
cmp
pop
rcr
pop
popa
push
xlat
mov
xchg
mov
lahf
jg
mov
call
mov
sarl
dec
hlt
mov
imul
fwait
stc
mov
and
cvtdq2ps
add
cmp
subb
sbb
cs
jge
sub
lcall
mov
jg
inc
ljmp
cmp
xor
adc
mov
subl
mov
inc
fxch
add
int3
pop
andb
js
lock
cli
jle
pusha
adc
lahf
sub
sti
shll
cmp
sbb
repnz
daa
icebp
push
fbstp
lods
add
and
xor
sti
adc
add
aad
repnz
inc
mov
dec
cmc
adc
or
inc
mov
push
cmp
repnz
cmp
inc
test
add
popf
jp
inc
dec
inc
nop
xor
out
sahf
imul
and
dec
ja
stos
adc
xchg
push
in
iret
xor
dec
sub
xor
cli
fstl
imul
sub
aas
popa
arpl
sbb
inc
add
jb
fimull
ffreep
xor
or
sub
mov
mov
mov
add
fistl
mov
xor
jnp
ljmp
push
loopne
lcall
adc
dec
cmp
stos
repnz
loope
xchg
pop
cmp
jle
mov
mov
push
pop
xor
cmpsl
jg
arpl
push
mov
sarl
adc
and
dec
jno
mov
lahf
xor
mov
bound
push
test
lret
cmpsb
int3
out
xor
in
ret
das
pop
lock
or
ficoml
into
jno
jbe
mov
cmp
or
aas
push
popa
ret
lods
mov
and
and
jle
jne
jmp
and
imul
push
sub
pop
inc
jg
fwait
sub
inc
add
adc
jle
js
push
adc
jb
add
adc
out
mov
scas
xchg
cmp
xor
or
inc
or
inc
lea
in
ret
sbb
mov
fs
in
les
mov
cmp
loop
jl
outsb
out
pushf
rcll
lds
jbe
call
mov
push
xchg
sub
mov
nop
mov
repnz
jae
lods
pminsw
adcb
in
int
aam
in
sub
fidivl
sti
fcoms
or
dec
mov
sbb
divl
push
fndisi(8087
lcall
adc
pop
add
mov
jp
inc
scas
adc
or
add
lods
mov
lds
jae
jnp
add
mov
mov
xor
jb
fnstcw
gs
mov
ret
loop
mov
out
fadd
movsl
sbb
test
jbe
lcall
adc
cmpsb
mov
xor
bound
or
mov
add
subl
idiv
cmc
inc
sar
popf
sub
iret
cmp
push
pop
sub
pop
jbe
inc
scas
stc
loopne
jmp
outsl
mov
popa
ss
mov
sub
cmp
push
mov
lcall
xchg
je
xchg
in
popf
rorl
mov
adc
push
into
push
dec
jne
stc
bnd
lahf
in
inc
aas
shr
sub
gs
pop
fisttpl
dec
dec
data16
adc
ficomps
mov
pop
push
xor
mov
mov
mov
loope
jo
cmp
or
lcall
fisubrs
xchg
gs
sti
js
ficoms
ja
ss
lret
lea
add
rol
dec
lods
mov
jb
or
inc
xchg
adc
loop
sbb
rorb
xorl
js
add
pop
fsub
dec
push
movsl
rol
xor
or
outsl
xor
inc
into
or
imul
add
mov
popa
dec
mov
lods
adc
ror
repz
call
rcl
add
push
lahf
mov
jmp
inc
inc
xor
sub
dec
out
imul
jmp
xor
scas
sbb
std
push
sbb
in
popf
add
pop
and
scas
rcrb
pop
dec
scas
aam
jae
sbb
cmp
add
mov
and
test
rcr
and
rorl
mov
out
inc
inc
xchg
dec
push
call
aam
pop
pop
ljmp
sbb
push
lahf
outsl
xor
push
das
cmp
and
loopne
std
mov
addb
or
dec
pop
rol
fimull
and
mov
xor
imul
adc
and
sbb
test
pop
pop
repz
lock
xchg
cmp
mov
xor
fdivl
add
jecxz
and
push
movsb
mov
sub
addb
pop
mov
in
xor
jmp
xchg
mul
xor
or
pop
aas
inc
in
dec
adc
dec
push
sbb
movsb
lods
push
cmpsb
aad
add
out
or
out
in
repnz
enter
xor
sbb
in
add
inc
mov
adc
subb
adc
ret
out
aas
pop
mov
rcl
cmp
loop
dec
jb
out
jns
pop
imul
jns
sbb
dec
movsl
cmp
push
cmpl
repnz
bound
jge
inc
rolb
dec
aaa
lret
mov
outsl
adcl
icebp
repz
jmp
loope
xlat
mov
leave
fmuls
pop
push
icebp
push
icebp
out
add
or
pop
popf
das
mov
cmp
sub
jnp
push
shlb
push
jbe
je
inc
sti
dec
sbb
dec
into
mov
sbbb
ljmp
movsl
push
push
das
cmpsb
or
add
sub
mov
xchg
scas
les
mov
nop
insb
xlat
mov
movsb
lret
xor
xor
and
xor
movsl
cmp
lret
cmp
add
popa
pusha
andb
push
movsl
ja
push
push
mov
xchg
mov
das
ss
dec
mov
repz
loopne
and
out
or
fsub
nop
nop
sbbb
fiaddl
xor
pusha
incl
hlt
xchg
out
popf
mov
loopne
loopne
jno
jns
xorl
shl
add
stc
js
or
mov
jge
sahf
xchg
push
int
and
pusha
mov
stos
push
mov
sub
sub
sbb
push
enter
pop
push
xchg
jp
sbb
xchg
push
push
test
pop
shrb
dec
jo
dec
xor
mov
jl
add
in
and
in
andb
push
pop
xchg
adc
scas
jb
push
lret
repnz
mov
repz
cltd
imul
dec
or
jg
xchg
leave
sbb
and
inc
cmc
dec
cmp
fwait
pop
hlt
cli
inc
and
movsl
dec
inc
xor
cli
ljmp
ficompl
add
test
xor
orl
adc
sub
aad
enter
rolb
movsl
ret
mov
cli
add
cmp
sub
ljmp
out
aad
fmuls
sub
rorb
pop
pushf
pop
fcomps
cmpsl
push
xor
stos
stos
add
mov
repnz
inc
aad
fisubs
sub
cmpsl
pop
fs
out
nop
push
mov
ds
cs
xchg
js
test
ja
inc
repz
sbb
sub
mov
jl
mov
dec
push
aam
call
mov
addr16
mov
rorb
push
aaa
int
test
fisubrl
fcmovu
xor
jnp
out
xchg
loope
add
pop
pop
fbld
scas
test
dec
and
xchg
mov
mov
xchg
out
lret
inc
jmp
dec
lods
jg
or
orl
cmp
aaa
mov
mov
imul
fidivl
movsl
jl
out
aam
aad
cli
in
ret
pushf
adc
into
mov
rolb
sbb
out
mov
aam
repnz
imul
mov
sarl
xchg
dec
sub
enter
lret
fsubr
lret
and
lods
pop
movsl
sub
jns
sbb
inc
sbb
rcll
add
pusha
fsubrs
mov
jnp
push
sub
adc
je
popf
mov
mov
mov
daa
cmp
xor
jb
adc
and
add
dec
mov
add
push
mov
xchg
mov
out
mov
icebp
fs
pop
xor
inc
mov
mov
jg
inc
movsb
dec
sbb
incl
cwtl
pusha
pop
push
lods
mov
test
loop
mov
scas
std
mov
mov
xchg
loop
xlat
xor
pop
bound
enter
mov
push
lods
ja
push
inc
push
out
jno
movsl
fsts
add
mov
adc
cmp
cld
sarb
loope
cld
inc
pusha
les
fisubs
jbe
out
stc
jge
and
adc
dec
mov
jb
icebp
jg
pop
addr16
mov
int3
mov
ja
in
add
pushf
outsb
stos
outsl
inc
inc
add
fnstenv
jae
push
sarb
and
pushf
cltd
outsl
dec
iret
xor
out
cmpsb
insb
fstl
mov
cs
xor
movsl
mov
dec
adc
mov
or
andl
fisttps
aam
out
inc
sbb
and
and
imull
aam
mov
sub
push
dec
mov
popa
push
lcall
mov
jmp
pusha
push
stos
xor
repnz
pusha
ljmp
inc
es
lret
xchg
hlt
dec
fisttpl
or
sarw
mov
jns
sarb
mov
bound
int3
sub
push
jne
in
mull
imul
fidivs
in
jno
sub
subl
mov
fisttps
ret
sbb
nop
pusha
mov
test
or
mov
cmc
dec
cmp
xchg
adc
gs
mov
xor
cs
cmp
iret
jnp
mov
pop
cmp
dec
push
shlb
dec
pop
mov
xor
aaa
push
pop
dec
ja
fwait
dec
int
aas
xchg
adc
in
inc
in
mov
mov
cli
sbb
lock
ds
mov
sub
push
lcall
jne
jne
xchg
or
lock
dec
add
rclb
mov
mov
adc
inc
or
pop
inc
jb
inc
mov
aad
jnp
mov
mov
cmp
jmp
mov
or
adc
dec
cli
add
sti
dec
dec
adc
adc
dec
cmc
push
adc
push
test
fst
pop
fistpll
call
icebp
or
dec
add
data16
jmp
out
dec
adc
inc
sbb
test
in
sbb
sub
je
lods
ljmp
notb
push
mov
gs
mov
inc
fdivl
pop
pop
fucom
orl
mov
aam
sub
ficoml
jg
mov
dec
adc
push
ret
std
rcll
mov
aas
es
out
negl
jb
loope
cmp
pushf
pop
je
cmc
movsl
pushf
mov
out
dec
shll
mov
pushf
xor
lea
jecxz
mov
mov
dec
sbbl
mov
sbbl
shll
xor
mov
mov
das
pop
stc
in
pop
sbb
loop
jmp
mov
jns
gs
pop
pusha
xor
out
movsb
or
jge
addr16
sahf
sbb
scas
xor
xor
sub
stos
and
cmp
insb
inc
repnz
dec
ret
sbbl
into
outsb
movsl
push
pop
fisubrs
call
xchg
pushl
sub
cmp
lock
fwait
mov
cmpb
sub
fwait
or
mov
inc
inc
xlat
jg
and
cmp
or
ljmp
cmp
pop
mov
mov
jl
int
inc
fldcw
ds
hlt
xchg
je
add
add
sbb
push
shlb
shll
notb
or
dec
leave
icebp
subb
sahf
inc
sbb
xchg
aaa
jp
pop
imull
mov
loope
pop
mov
arpl
mov
fbstp
paddb
push
xor
arpl
pop
inc
and
push
jge
adc
popa
cmpsl
arpl
inc
inc
cmc
rcl
repnz
imul
sti
lock
sahf
sbb
fldenv
sti
sahf
cmp
jmp
inc
add
mov
pop
xor
and
fsub
pmaddwd
mov
test
xor
rcrb
sbb
lret
sub
inc
inc
fucom
lcall
xchg
pop
dec
dec
movsl
and
addl
rol
or
sbb
jb
dec
fsubrs
mov
call
aam
scas
jmp
pop
sub
add
daa
and
scas
sahf
fsubl
add
adc
daa
sbb
xchg
inc
xor
mov
jo
enter
mov
xchg
jg
out
xchg
xchg
sub
xchg
dec
jg
add
sahf
loope
sub
pop
sbb
mov
cmp
jge
jp
adc
lret
idiv
mov
pop
jno
fstps
movb
lahf
test
ljmp
push
dec
pop
imul
scas
push
jbe
call
jecxz
jb
mov
movsl
clc
and
push
inc
aaa
mov
and
pop
jg
cmp
dec
cmpsb
adc
test
mov
mov
stos
sbb
outsl
dec
add
mov
dec
cs
insl
adc
pop
fdivrs
loopne
mov
xchg
loopne
ds
sbb
rclb
sub
mov
mov
orb
pop
dec
rcr
mov
cmpl
rcr
pop
push
test
mov
test
sbb
lods
bound
add
xlat
aam
std
lret
push
xor
or
test
ret
or
fnstcw
psubq
popa
adc
jge
ret
mov
test
xor
pop
adc
jle
lret
mov
dec
outsb
dec
cmp
mov
jg
movsl
mov
imul
into
and
ret
mov
test
addb
mov
sbb
xchg
pop
lds
pop
mov
sbb
mov
jns
mov
inc
inc
lods
repz
pop
jle
rcl
inc
leave
inc
hlt
sbb
mov
cmp
jg
sti
and
imul
lock
into
scas
icebp
cs
scas
add
inc
adc
adc
sub
xor
ds
dec
mov
inc
sbb
icebp
mov
dec
cs
outsb
fcoml
bound
mov
xor
imul
bound
cld
mov
xlat
stos
cmpsb
sbb
adc
cmc
xor
or
jecxz
ja
push
xchg
jne
aad
sbb
and
cmp
cmc
popf
test
pop
aaa
jnp
movsb
in
mov
jbe
aam
mov
dec
add
fdivr
cmc
or
lock
add
rolb
jecxz
cmp
xchg
hlt
xor
mov
pop
push
popa
adc
in
pop
and
cmp
insb
sbb
push
sbb
fidivs
cmpsl
imul
inc
mov
subl
pop
mov
popf
xchg
mov
arpl
aaa
mov
cwtl
out
pop
cmpsb
xchg
out
xor
jae
xor
xlat
jbe
push
inc
dec
jns
sbb
sub
xor
lds
sub
loope
mov
js
shrl
icebp
pop
lret
mov
push
add
pop
xor
or
inc
scas
pop
dec
cmpsb
push
loop
mov
mov
dec
pop
push
mov
sub
mov
add
jge
inc
fs
and
imul
fcompl
mov
pushf
rolb
mov
jno
scas
mov
sbb
addr16
cmpsb
jne
mov
adc
add
mov
lods
aas
jp
xlat
pop
mov
aad
adc
pusha
xchg
mov
sbb
or
scas
pop
stos
xchg
imul
inc
in
mov
faddl
mov
fldl2t
test
movsb
sbb
push
sub
push
adc
clc
bound
adc
insl
inc
push
pop
mov
cmpsl
stos
mov
and
lock
xor
adc
aad
in
rorl
jl
cmp
mov
xorb
in
cli
cmp
xor
testb
mov
aam
add
mov
or
push
insl
int3
outsl
ja
in
int3
scas
int3
in
cld
jo
arpl
add
cmpsl
stc
dec
addl
in
pusha
gs
lret
inc
sub
or
lds
xor
pushf
dec
test
movsl
pusha
movsl
xor
aam
iret
xor
iret
adc
or
adc
ljmp
inc
mov
pusha
xchg
jno
mov
unpcklps
cmc
cs
test
pop
mov
fisubrs
adc
push
sarb
or
dec
inc
cmp
cmpsb
adc
imul
push
dec
push
ljmp
mov
sbbl
dec
jns
sub
add
scas
in
xchg
xchg
ret
imul
add
and
out
jg
mov
adc
shr
in
dec
xchg
xchg
mov
dec
call
cld
leave
pop
mov
mov
mov
sbb
mov
pusha
jp
lret
ret
push
xor
clc
mov
in
mov
mov
mov
mov
mov
cld
stos
test
xchg
lods
add
or
xchg
stos
cltd
in
mov
cwtl
mov
inc
sti
lret
test
iret
iret
rcll
adc
ficompl
xchg
push
cmp
rol
jp
push
cmp
dec
ds
dec
pop
in
add
out
adc
rorl
in
popa
fldl
sub
xchg
adc
insb
shl
or
jno
dec
repz
pop
jns
push
jae
adc
add
pop
shll
jmp
xchg
jno
mov
test
pushf
add
or
jb
push
popf
aad
imul
and
mov
and
faddl
cmp
and
loop
inc
xchg
stc
bnd
cmp
mov
push
loopne
and
pusha
lahf
std
gs
out
repnz
and
scas
adc
aaa
mov
imul
aas
cmc
push
push
es
inc
imul
xchg
ret
aam
sub
out
pop
cwtl
add
leave
mov
int3
daa
lds
dec
pop
inc
mov
mov
or
jnp
testl
jmp
push
mov
in
or
pop
in
in
ret
les
xchg
add
fwait
leave
hlt
push
mov
xchg
jne
out
mov
xor
lods
xor
mov
or
mov
ds
push
sbb
cmp
inc
lea
enter
or
cmp
pop
inc
test
mov
cmp
sbb
iret
fs
push
lret
sbb
mov
and
mov
cwtl
add
lods
jae
stos
insl
in
insl
popf
leave
mov
cmp
fidivrs
pop
dec
or
test
insl
out
sub
test
xchg
fisttpl
fstps
cmpsl
mov
xchg
test
lcall
imulb
jp
push
outsl
pop
and
in
ret
jnp
popa
mov
cli
pop
pop
inc
pop
addr16
push
popa
xor
mov
mov
cmp
push
pop
aas
push
sbb
or
push
add
pushf
lret
int
push
and
adc
pop
xchg
adc
mov
imul
add
loope
add
mov
cli
inc
out
dec
mov
outsl
nop
or
jl
shl
shll
fisttpll
sbb
push
mov
add
cmp
sahf
or
dec
inc
push
pop
popa
inc
jo
add
dec
addr16
xchg
mov
pop
divl
xor
out
adc
jl
push
pop
pusha
repz
stos
std
hlt
xor
sbb
lcall
sub
sbb
out
xor
mov
jmp
fmul
ret
daa
cmpsl
cli
cltd
or
lret
test
iret
sub
adc
mov
fisttpl
mov
sub
js
in
out
sahf
sub
popf
jae
pop
xchg
mov
cmp
xorb
push
add
add
sahf
hlt
ja
in
inc
insb
xchg
out
insl
les
loopne
inc
and
xor
add
call
mov
mov
dec
sar
outsl
out
bnd
pop
sbbl
clc
outsl
daa
sub
jmp
daa
nop
out
popf
cltd
lahf
sarb
cmp
mov
cmpsb
jne
in
sub
js
inc
cmp
leave
scas
adcb
xchg
ss
dec
push
and
lea
cmp
xchg
jle,pt
das
ret
fwait
dec
inc
dec
push
test
mov
mov
enter
fbld
sbb
dec
mov
hlt
add
cmp
es
sbb
pop
insl
popa
xchg
jne
pop
dec
lock
mov
xchg
push
icebp
cmp
les
mov
pop
and
dec
das
dec
push
xlat
cmp
adc
jbe
and
sub
xor
pushf
repz
xor
loop
mov
or
mov
dec
subl
jge
xor
and
fs
cld
dec
arpl
sub
xchg
in
das
jl
push
mov
cmp
push
int
ja
push
in
inc
sub
enter
les
add
dec
inc
mov
xor
fsubrs
lcall
je
or
lcall
push
mov
dec
lock
jle
adc
stos
cmpsb
xchg
fldz
loopne
mov
lods
loopne
insl
sarb
xor
inc
ud0
ja
jle
repnz
aas
sub
xor
incl
and
xchg
lods
and
add
loope
pop
mov
aaa
test
sbb
ret
cwtl
lds
dec
rcl
enter
enter
imul
add
fcmove
sub
pop
repnz
push
inc
lret
sti
jns
dec
pusha
inc
sub
idivb
rorl
loopne
movsl
loop
mov
shrb
fisubrs
pop
push
fsubl
pop
movsb
and
and
imul
call
and
xchg
push
sbb
xchg
cmc
sub
jecxz
pop
cmp
mov
das
cmpsb
mov
add
into
sub
dec
andb
sbb
stc
and
clc
xchg
or
bound
push
cwtl
jmp
fnstcw
dec
dec
ret
test
dec
shrl
rcll
les
rol
add
ja
or
adc
pop
lods
mov
shr
rorl
gs
aad
int3
cli
nop
outsl
add
cmp
add
adc
adc
sbb
cmp
out
test
mov
scas
lahf
sbb
mov
xchg
inc
notrack
cld
fidivrl
push
or
mull
mov
mov
push
std
pop
jns
add
inc
adc
movsb
loop
mov
scas
sub
mov
push
aam
popf
push
dec
test
or
je
dec
dec
or
aam
or
inc
icebp
outsb
test
push
shll
orb
lret
jge
leave
es
inc
lds
ljmp
ret
mov
dec
xchg
mov
mov
xchg
xchg
mov
xchg
jmp
sub
lea
mov
into
imul
shll
pushf
mov
sub
xor
push
cmp
adc
paddq
jg
sbb
rcll
adc
cmc
leave
test
pop
mov
push
dec
ret
adc
shlb
mov
andb
shlb
gs
sub
rcr
jmp
pop
sub
xor
cmp
sar
js
scas
mov
fcmovnbe
xchg
in
sahf
cmp
dec
cmc
aaa
cwtl
xor
xor
jb
daa
xchg
cmp
pop
sbb
fisubl
xor
mov
pop
rolb
or
pusha
mov
pop
mov
inc
cltd
int3
pop
idivl
jns
mov
ljmp
mov
xor
imul
lret
push
cmp
xchg
ret
cmp
sbb
pusha
sub
sub
push
dec
cmp
xchg
aam
sub
mov
lock
mov
mov
push
mov
adc
loopne
adc
aaa
xchg
nop
out
sub
cmp
pop
scas
cltd
mov
add
stc
push
push
test
call
pop
test
push
mov
dec
xchg
out
push
jns
jmp
jo
adc
mov
test
ss
jno
or
or
pop
adc
mov
les
cmp
lea
mov
sub
arpl
push
mov
mov
or
int
test
pop
mov
and
push
andb
mov
dec
andl
rcrb
out
notl
add
xor
push
into
fldcw
movsb
inc
mov
push
push
push
cwtl
mov
mov
pop
xchg
sarb
jge
mov
divl
and
test
sub
push
int3
out
addr16
adc
push
aaa
jbe
inc
fcomi
or
jo
sub
and
xlat
js
std
lret
xorl
mov
insb
rcrb
xor
sti
push
push
test
dec
ja
jp
dec
push
ljmp
push
out
aas
pop
aaa
add
loope
adc
aad
xor
adc
outsb
xchg
lock
pusha
sub
cwtl
push
inc
rcl
ret
push
fiaddl
or
inc
push
repnz
mov
xchg
movsb
inc
dec
or
addr16
fdivrl
fbstp
pop
xchg
dec
sbb
cmp
pop
repz
in
xchg
mov
outsb
jo
mov
stos
mov
imul
push
push
std
sub
and
mov
jb
mov
out
xchg
cmc
in
popf
dec
daa
out
pop
push
xchg
sbbl
sarb
mov
ret
test
jecxz
jne
ja
sbb
and
scas
fisttpll
jl
jne
insl
xchg
mov
mov
xor
xchg
les
mov
pcmpeqb
or
rolb
outsl
scas
jne
sub
inc
xchg
push
jns
gs
push
mov
fistpll
fimuls
dec
lcall
adc
xchg
inc
mov
icebp
nop
cli
dec
iret
movsl
mov
sub
xor
xchg
lock
addr16
pop
adc
flds
lret
push
pop
pop
jle
mov
adc
adc
sub
push
daa
leave
jle
pop
stos
gs
scas
popa
gs
inc
mov
push
call
dec
jae
ret
mov
clc
mov
and
aas
jp
mov
dec
sub
int3
in
inc
add
add
and
push
shrl
xor
lea
fisttpl
outsb
imul
pop
mov
cmp
cwtl
stos
lcall
int
xorl
pop
js
mov
adc
dec
cwtl
jp
jb
lret
dec
scas
movsl
mov
sub
or
mov
pop
push
push
clc
push
sahf
mov
mov
jge
push
mov
xchg
xorb
cmp
mov
pop
or
sbb
repz
pop
sbb
imul
jnp
dec
xlat
sbb
mov
lret
xor
mov
mov
fnstsw
sahf
es
insb
ja
test
xchg
xor
xchg
shl
stc
dec
loop
std
and
sub
xor
loopne
sbb
testb
dec
stc
mov
jp
cmp
out
dec
cmp
je
fildl
mov
mov
arpl
inc
cmp
rorl
or
jmp
ljmp
jne
mov
mov
or
outsl
imul
jle
sbb
aas
nop
clc
lods
sbb
push
add
or
inc
inc
out
add
arpl
and
fdivs
repz
jmp
jg
cld
pop
mov
inc
insb
mov
test
xchg
sti
call
adc
in
sbb
sub
or
fadds
cmp
pushf
rcll
or
push
movsl
inc
mov
jmp
xchg
adc
addr16
cmp
imul
mov
je
sub
xchg
xchg
mov
jg
xchg
icebp
and
or
dec
stos
mov
iret
insb
test
push
or
mov
add
mov
inc
pop
pop
nop
loop
inc
inc
leave
inc
add
mov
xchg
fyl2x
in
jns
push
pop
daa
pop
movsl
and
int
test
repnz
gs
xchg
xor
out
mov
ljmp
xchg
scas
sbb
leave
lahf
outsb
pop
lods
popf
and
sbb
cli
sub
push
and
mov
out
loopne
fcomps
dec
sub
stos
enter
iret
cld
mov
adc
pop
addr16
dec
notb
pop
jbe
cmc
jp
mov
test
or
xlat
dec
ss
push
mov
jl
in
mov
push
loopne
mov
repnz
cmp
jmp
je
aas
outsl
mov
pop
or
ja
clc
push
xor
mov
or
pop
scas
sub
scas
push
pop
jo
push
iret
fldenv
pop
add
lcall
loop
mov
and
je
jmp
int3
pop
pop
sbb
and
loope
sarb
inc
add
jg
pop
pop
cmp
aaa
pop
xchg
das
add
add
imul
pop
jle
mov
cmpsb
cld
ljmp
lods
cld
roll
les
and
xchg
xor
mov
aaa
mov
test
adc
aaa
jg
mov
or
xchg
rclb
shlb
jb
mov
mov
dec
cmpsl
mov
sub
xorb
xchg
xor
pushf
xchg
jo
adc
cmp
xchg
pop
mov
aaa
movsl
mov
sub
fmul
insl
fistpl
mov
jne
mov
in
and
and
sub
repnz
test
xor
lret
mov
sbb
cmp
shll
push
inc
xchg
xor
adc
adc
push
mov
mov
xchg
jb
cmpsl
mov
mov
dec
imul
bound
push
or
cmp
scas
cmpsl
cmpl
or
sbb
ds
xchg
jecxz
fadd
fistps
in
pop
lcall
sbb
adc
std
adc
mov
xchg
cltd
aaa
pop
push
fwait
add
sbb
xchg
fcmovnbe
jg
jge
sbb
mov
ljmp
out
cmp
es
mov
das
pop
int
faddl
inc
push
mov
cmpsl
cmp
mov
jge
or
xlat
aam
sti
lock
xchg
push
inc
cmpsl
out
mov
lahf
lea
xchg
mov
xorb
arpl
out
xor
push
insb
xchg
aas
adc
push
or
mov
scas
inc
sbb
test
int
adc
mov
in
and
inc
mov
addl
pop
loope
outsb
sub
out
aad
lea
fnstenv
rorl
aas
fidivs
push
mov
push
adc
jne
sbbl
shl
movsb
test
xchg
arpl
inc
inc
or
cmpsb
cmp
xchg
aaa
repz
bound
fcomps
popa
or
push
rolb
aaa
pusha
adc
pop
jo
mov
in
cmpb
and
out
sub
mov
cmp
leave
and
add
push
int
push
fiaddl
lret
sub
push
addb
jp
sarl
les
cltd
addb
test
iret
loopne
dec
icebp
xchg
mov
mov
push
loop
sub
cmp
pop
xor
shll
pop
mov
xchg
stc
dec
lods
std
xchg
mov
cwtl
rcrl
in
mov
and
addl
add
jp
decb
addr16
mov
nop
movsb
out
push
rclb
sbb
xor
inc
push
repz
push
dec
cmp
cmc
movsl
fwait
clc
cmpsl
jl
adcl
aam
push
lahf
jp
jge
dec
sbb
andl
scas
cmp
push
sarl
ret
mov
lahf
rcrl
or
arpl
inc
int3
imul
mov
mov
lcall
test
push
pop
adc
fisttps
xor
mov
mov
lds
inc
outsb
xor
incl
mov
sub
jmp
inc
push
or
cltd
sar
lahf
ret
jp
mov
pop
imul
cmc
aad
push
daa
cmp
arpl
sbb
add
and
mov
mov
cltd
fldl
aad
hlt
lahf
bound
test
loop
jae
imulb
push
int
push
jbe
ja
lahf
sub
mov
xchg
int3
dec
xor
iret
inc
xchg
mov
cwtl
xor
adc
lea
mov
cld
lcall
icebp
add
pop
inc
mov
sbb
pop
adc
insl
cld
adc
fldl
mov
adc
pop
push
aad
movsl
and
push
sub
dec
sti
jae
shlb
add
test
ror
pushf
sub
mov
shl
test
pop
mov
fdivp
inc
xchg
pushf
arpl
test
jle
cwtl
pop
cmp
xchg
and
adc
insb
mov
mov
adc
xor
xchg
flds
xchg
mov
or
stos
adc
mov
sub
inc
cmp
cld
sbb
stos
je
inc
pushf
inc
sub
push
cmp
dec
loop
inc
orb
cmpsl
add
mov
loop
lods
subb
ja
cld
pop
lret
in
mov
lret
into
mov
sti
aas
les
push
mov
mov
movsb
add
adc
dec
inc
add
push
or
jmp
mov
push
mov
add
ret
lret
push
scas
or
test
adc
or
push
push
push
add
bnd
sbb
cs
scas
lret
mov
addb
or
fcmovbe
xchg
adc
and
pop
xchg
int3
xor
adc
out
lcall
lods
and
test
sbb
cmp
dec
mov
aad
cwtl
xchg
fnstenv
sbb
and
adc
aaa
cmp
dec
sub
jo
push
lock
cmp
fidivrl
les
clc
dec
or
mov
jns
fistps
leave
stc
push
lret
out
hlt
insl
out
push
pusha
jb
sahf
fs
jl
mov
push
jb
cmp
mov
jmp
int
jl
mov
cmc
pushf
test
cmpsb
dec
and
jo
add
dec
mov
ljmp
xor
call
pop
repz
pop
xchg
and
outsl
and
inc
add
shrb
loopne
decl
pop
pop
sarl
sahf
iret
push
hlt
or
sti
jl
fisubs
and
adc
ret
mov
out
jne
iret
mov
aam
ret
cmpsb
lock
pop
or
xchg
mov
les
test
out
cmpl
rolb
imul
sub
fs
test
loope
sahf
mov
pop
xchg
cltd
test
mov
mov
add
nop
mov
pop
sbb
sbb
test
mov
int3
or
pop
adc
lea
pop
jns
sub
loop
push
mov
out
sub
insl
pop
pop
or
subl
divb
jne
jo
clc
lock
mov
mov
jle
dec
or
ja
decb
mov
inc
dec
jb
mov
aam
xor
jb
in
mov
roll
stos
mov
test
pushf
ret
lret
lods
mov
pop
lcall
es
fcmovbe
pop
add
movsl
xchg
imul
jo
aaa
pop
pop
adc
andl
push
pop
subb
daa
xchg
idivb
pushf
mov
iret
jo
clc
xchg
nop
jne
or
repz
inc
roll
imul
add
push
int3
in
push
fbld
lds
and
lret
push
cmpsl
sbb
insl
mov
les
outsl
pusha
pop
out
dec
cld
repnz
iret
iret
in
push
inc
pushl
mov
in
sub
xchg
or
and
lds
xchg
arpl
and
ror
ret
cmp
jecxz
xchg
add
dec
xchg
mov
arpl
fisubs
sbb
sub
dec
popf
push
aaa
sbbb
xor
notl
jp
aam
xor
sub
imull
mov
jae
iret
cmc
sbb
into
dec
loopne
sub
xor
pop
cltd
pusha
mov
jl
repz
mov
sbb
adc
and
popf
mov
or
fsts
mov
imull
add
add
arpl
mov
mov
jo
add
lock
das
inc
insl
lret
mov
cmp
cld
xchg
daa
cmp
std
or
cmp
mov
lds
fwait
xor
shll
add
iret
jb
xchg
mov
dec
cmpsb
or
sub
add
leave
fildll
push
sub
pop
jge
mov
int
cmp
mov
aas
xlat
scas
out
or
mov
inc
jmp
rol
jbe
mov
cmpsl
in
jno
negb
inc
inc
xchg
sub
lahf
pop
inc
add
sahf
mov
das
pushf
mov
stos
seto
icebp
in
jnp
inc
mov
mov
testl
insl
movsl
cmp
repnz
gs
arpl
das
sub
cltd
fxch
sbbl
ljmp
mov
jge
loopne
pop
fwait
test
orl
dec
push
xchg
repz
and
lcall
mov
jo
movsb
pusha
or
aas
loopne
or
lods
int3
mov
mov
sbb
add
fs
mov
xorb
jg
adcl
movsl
out
or
jecxz
inc
daa
xchg
xor
loop
gs
pop
hlt
add
icebp
add
fldl
inc
xchg
fwait
mov
bswap
cs
imull
jg
mov
ljmp
bound
mov
jg
mov
sub
aas
mov
ja
pop
popf
arpl
fmull
test
pop
pop
xchg
lods
lods
adc
mov
jb
std
dec
inc
pop
in
mov
mov
outsb
adc
or
push
mov
jl
cld
test
arpl
adc
imul
dec
dec
cmp
jo
push
icebp
test
out
or
aad
fbstp
sbb
or
and
scas
movsb
shrl
or
xchg
in
jnp
xchg
lods
mov
xchg
xor
ret
and
imul
jle
and
or
push
mov
stos
hlt
and
lret
adc
mov
cmp
push
sub
andl
xor
fdivrp
out
adc
adc
lods
push
int3
out
and
insl
adc
cmpsl
test
adc
jmp
ja
rolb
inc
pop
fistps
mov
stos
out
or
xchg
fsubl
pop
push
cs
mov
shr
jb
and
sbb
adc
divb
sbb
xor
mov
cmp
lret
aad
das
nop
adc
mov
adc
movsb
int
sbb
mov
push
jno
dec
sub
call
jb
es
or
rorb
dec
xlat
push
in
ss
and
inc
dec
outsb
inc
cltd
test
add
fimuls
lcall
xchg
mov
add
out
adc
dec
mov
sbb
dec
stc
imul
sti
aad
inc
imul
adcb
push
arpl
lods
xor
lcall
inc
adc
movsl
out
jae
or
fidivrl
sbbb
pop
das
pop
mov
subb
lea
rcll
dec
leave
xlat
fwait
mov
es
pop
xor
aaa
adc
test
mov
xor
and
leave
push
and
mov
addr16
push
push
inc
mov
je
in
add
clc
inc
add
mov
ret
test
mov
dec
hlt
or
jno
inc
scas
sbb
sbb
pusha
pop
mov
or
leave
shl
adc
and
xor
xchg
add
imul
push
xlat
adc
inc
out
mov
aaa
ss
push
pop
pop
imul
xchg
clc
xor
mov
lcall
mov
aaa
and
push
pushl
cmp
test
jbe
out
jp
ds
fimuls
fwait
mov
xchg
enter
mov
inc
sub
incl
push
aam
push
rcr
pop
fisubrl
rorb
call
loopne
sub
daa
insb
push
jle
jg
nop
jge
jecxz
cmp
pop
loope
addl
fs
jns
loopne
imull
push
sbb
mov
sarl
dec
dec
push
insb
dec
add
cmpsl
clc
out
sbb
sbb
add
mov
imul
mov
cld
scas
adc
outsb
insb
cld
adc
iret
cmp
rol
rclb
test
push
sahf
data16
fxch
xor
sub
fldt
add
jbe
loopne
sub
cmc
pop
sub
insb
daa
cmpsb
lahf
and
mov
jae
adc
sub
lret
cld
jo
add
or
hlt
pop
jmp
jg
test
std
adcl
mov
stc
inc
jae
cwtl
xchg
daa
loop
jp
jns
sub
xor
mov
jbe
ret
test
mov
mov
cmp
int3
lret
stos
addb
or
pop
idivb
loopne
movsl
lret
jne
inc
outsl
push
xchg
cmovno
push
movsb
push
dec
sub
divl
jne
int
xchg
sub
mov
sub
push
xchg
clc
or
push
fs
mov
jae
and
sub
xor
cli
pop
js
adc
jmp
sub
adc
inc
xchg
pushf
cmc
sub
in
inc
pop
test
pop
lock
scas
sbb
push
xchg
cmpsb
or
lcall
leave
sbb
xchg
sub
test
daa
sbb
cld
popa
aaa
pop
outsb
push
mov
fldenv
xchg
cltd
ficomps
and
sysenter
outsb
dec
jp
cmp
mov
inc
pop
jbe
mov
jne
cli
add
je
imul
roll
leave
out
jo
xchg
imul
inc
mov
testb
jg
or
dec
fisubl
push
pop
sbb
pop
mov
scas
jl
cwtl
movsl
jo
repnz
cwtl
jae
inc
add
add
fdiv
pop
xchg
sbb
sub
xor
mov
dec
pop
out
inc
and
das
jge
or
call
test
xor
rorl
add
es
lret
test
ret
sub
je
lcall
out
mov
mov
sahf
test
sarb
js
lods
scas
sbb
arpl
lods
pop
add
jno
lock
mov
mov
and
and
out
adc
add
inc
insl
xchg
cli
sub
leave
repz
stos
pop
sub
out
js
fwait
lock
ljmp
add
ret
sub
aam
xchg
lods
orl
je
sbb
sub
decl
fwait
sub
je
into
and
mov
push
stos
add
jo
test
shrl
idiv
repnz
test
je
pop
ds
add
adc
mov
loopne
or
scas
mov
or
repnz
aam
or
div
jbe
jmp
lret
scas
insl
imul
cs
jle
stos
inc
mov
data16
andb
outsb
je
enter
lea
int3
fwait
mov
mov
into
lods
fidivrl
stos
jb
lcall
enter
arpl
sti
mov
adc
jp
dec
mov
pop
push
push
mov
mov
adc
mov
mov
fisttpl
xor
mov
inc
dec
cmp
js
push
fwait
add
pop
push
repnz
aas
cs
add
lret
sub
int3
out
lock
dec
xor
pop
adc
mov
and
mov
adc
push
testb
or
add
cli
mov
mov
ret
fs
rclb
jo
lds
loope
stc
imul
sbb
sahf
shlb
in
in
inc
lret
xor
in
arpl
fstpt
push
mov
in
and
pop
xor
inc
push
inc
bnd
fcomps
pop
mov
fiadds
shll
push
mov
loopne
or
cld
sub
xchg
daa
popa
rol
out
fsubl
cld
gs
pop
cli
and
add
inc
ja
dec
or
inc
lods
bound
cmp
mov
pop
in
mov
add
cmpsb
pop
mov
fwait
call
sub
sub
mov
aam
mov
lds
inc
shlb
jo
add
adc
jns
ljmp
out
outsl
xor
outsl
and
and
push
jp
lahf
pop
std
std
jmp
jp
pop
push
jo
xor
outsl
and
mov
dec
xor
in
leave
test
mov
inc
mov
pop
test
cmpsl
fwait
pushl
in
adc
movsb
fisubl
ljmp
out
je
in
rol
or
sbb
or
xchg
ds
mov
dec
dec
mov
insl
sbb
inc
ret
or
inc
les
sbb
ret
clc
repnz
lods
movsl
mov
iret
cld
inc
loopne
imul
pop
adc
js
adc
orl
dec
jns
cli
push
adc
fisubrs
fdivl
pop
jle
scas
gs
pop
sbb
fisubs
and
mov
and
or
jo
andb
mov
insl
pop
inc
pop
popf
xchg
cmpl
stos
imul
jmp
jg
sub
push
ljmp
adcb
imul
dec
cmp
lods
sub
adc
dec
in
ds
push
insb
movsb
ljmp
mov
push
ljmp
loope
lods
fbstp
xchg
out
or
pusha
dec
xchg
lds
scas
imul
rcll
idivl
shll
cmp
jnp
jle
loopne
xor
movsb
jbe
jecxz
loope
pop
push
pop
cmp
daa
bound
push
inc
xchg
jge
fsubs
std
testl
xchg
out
cmp
sbb
mov
fistps
sub
add
je
movsb
cmp
pop
mov
push
incb
push
into
daa
lcall
sahf
enter
jecxz
js
mov
loopne
fldt
jle
cmpb
pop
fdivrl
fisubrl
dec
lds
stc
pop
je
arpl
dec
lahf
cmp
push
loope
dec
mov
mov
fldcw
xor
adc
lods
dec
rcll
add
sahf
inc
pushf
jo
clc
repz
push
bound
cli
aaa
adc
in
in
pop
inc
or
mov
ret
cmc
adc
lds
aad
out
xchg
lock
ficomps
cmp
fcoml
push
xor
and
cmp
enter
sbb
jae,pn
loop
lds
ret
int
repz
cmpsl
mov
aas
outsb
insb
subl
pop
pop
fstpt
iret
adc
xchg
fadds
xchg
cld
test
das
aaa
icebp
test
adc
add
and
shll
sti
xor
mov
jae
adc
inc
mov
lahf
jae
push
test
aas
rcll
testb
inc
cmp
scas
scas
cmpsb
and
add
mov
and
inc
or
xchg
push
push
ljmp
aaa
add
mov
sarl
or
iret
loope
adc
xchg
mov
xchg
pop
push
sbb
cmpb
out
jae
dec
xchg
mov
xchg
aas
ret
jno
ja
sbb
adc
in
stos
rcrb
push
out
push
loope
pop
ret
rcrl
jl
lods
push
popf
loope
adc
mov
mov
lods
aas
arpl
lcall
mov
call
call
popf
test
jbe
fwait
inc
sub
mov
cmpb
fmul
or
mov
fimull
push
mov
repz
mov
aas
push
mov
jp
lea
loope
sbb
sbb
cltd
in
mov
das
dec
outsl
call
loopne
jp
std
adc
mov
rcl
test
jecxz
faddl
imul
sbb
xchg
xchg
bound
mov
fimuls
jge
lahf
lock
fcmovnb
sbb
dec
cwtl
outsl
aam
cmp
sub
in
fldl2e
dec
adc
ljmp
shlb
mov
add
and
sbb
test
scas
jnp
xchg
imul
aad
cltd
ret
imul
push
in
aad
dec
popa
addr16
sub
fbstp
add
cmpsl
test
adc
push
movsb
add
mov
addr16
inc
test
push
movsl
lods
mov
movsb
out
push
inc
test
nop
mov
call
inc
xchg
fisubrs
mov
dec
pushf
adcl
out
outsb
test
test
pop
xchg
xor
in
xchg
mov
adc
rclb
into
fimull
pop
adc
inc
mov
push
or
aam
mov
enter
adc
jmp
int
sbb
xchg
push
dec
lret
mov
call
out
and
sub
les
fnsave
lods
lds
xchg
sub
sbb
fcoms
call
jo
or
or
ja
fdivr
xchg
pop
push
lds
hlt
jae
jb
addr16
leave
test
repz
fldl
addr16
sti
cmp
mov
std
scas
cltd
or
sbb
daa
cmp
push
add
ret
cltd
jne
pushf
dec
int
testl
inc
seta
add
pop
lret
out
inc
cmpsb
addr16
pop
xor
jne
mov
lea
arpl
sub
xor
xchg
es
cmp
push
loop
mov
cmpsl
adc
loopne
add
test
shl
xchg
mov
int3
xor
mov
out
fmul
ljmp
cld
jns
sub
addr16
jl
mov
sub
mov
mov
sbb
cmpsl
xor
cmp
fcoml
add
cmp
into
je
xor
mov
std
xor
pop
test
inc
and
jle
insl
mov
ret
mov
push
jmp
xchg
fwait
xor
jae
pop
movsl
imul
imul
push
rclb
push
bound
pusha
sti
inc
cmp
arpl
je
mov
sub
inc
in
scas
mov
sub
pop
ficompl
enter
xor
jle
mov
int3
mov
ficoml
jmp
leave
in
inc
inc
pusha
negb
sbb
lret
push
pop
inc
xchg
jne
loope
lahf
sub
ds
movsl
mov
repz
lock
lods
dec
mov
inc
repz
cmp
imulb
ja
pop
inc
add
hlt
jecxz
das
dec
lret
or
ret
cli
popf
cmpsl
sarb
test
and
adc
xor
mov
mov
push
stos
cmp
mov
nop
jbe
mov
ss
sub
lret
pop
add
jns
push
lods
sbbl
into
pop
jle
imul
adc
and
pop
das
enter
shll
mov
je
into
test
shrb
add
cmpsb
mov
xor
xor
icebp
pop
aas
out
cwtl
lods
cmp
jnp
je
cmpsl
scas
xchg
js
lahf
adc
mov
pop
fldenv
jne
fstpt
movsl
andl
push
xchg
rorb
inc
or
xchg
aaa
push
data16
cmp
scas
sti
mov
mov
fcompl
lock
fucomp
mov
xchg
fwait
mov
pop
push
pushw
fcmovne
cld
outsl
test
pop
rclb
add
sbb
jae
popa
dec
inc
cmpsl
xchg
in
je
aad
inc
out
cmp
stos
daa
push
mov
stos
and
mov
insl
cmp
push
fisttps
xchg
lds
std
mov
cmpsb
or
fwait
test
and
sbb
enter
push
and
cmpsb
decl
add
sar
push
subl
mov
clc
xchg
addl
ret
cmp
or
div
or
pop
nop
icebp
je
sub
std
outsl
lcall
push
jnp
inc
jbe
bound
xor
inc
in
sti
mov
inc
push
lock
test
int
sbb
nop
inc
xor
mov
mov
addr16
nop
sbb
incl
mov
popf
cmp
mov
add
ljmp
xchg
jecxz
lret
sti
mov
xlat
adc
lea
or
jecxz
jo
cltd
insl
lret
fisubrl
insb
sub
cwtl
cltd
xor
loop
push
rcrl
mov
sar
in
sbb
ret
insl
xchg
push
inc
loopne
dec
push
adc
sbb
push
int3
addr16
fidivs
dec
hlt
popf
lds
daa
test
xlat
cmc
xor
loope,pt
add
dec
pop
inc
push
mov
lahf
and
popa
jne
xor
inc
sub
mov
out
dec
and
sti
jge
push
jle
ja
or
lds
sti
mov
cmp
and
aad
or
pop
xlat
div
xchg
test
jl
lahf
mov
popf
adc
xor
mov
inc
mov
dec
imull
test
push
inc
dec
push
cmpsl
pusha
and
pop
sub
mov
inc
push
and
fnstsw
push
shl
lods
fnstenv
xor
pop
push
pop
or
fmull
push
add
xor
xchg
mov
mov
push
fistpl
insl
je
lea
ret
iret
xchg
out
xor
fists
adc
icebp
mov
push
mov
pop
loop
jno
cltd
bound
mov
pop
lahf
in
in
mov
js
mov
adc
push
scas
fdivrl
test
mov
movsl
enter
cmpsl
sbb
fisubrs
repz
or
imull
xor
in
sbb
xchg
dec
adc
outsb
jl
mov
adc
sub
dec
cs
dec
mov
popf
or
int3
fbld
pop
cmp
addl
sub
sbb
cmp
mov
pop
arpl
bound
jmp
add
or
pop
data16
fld
ds
rorb
gs
popf
pusha
add
jp
scas
xchg
cld
je
decl
jb
push
jnp
popa
pop
fs
aaa
popa
pop
pop
stos
inc
mov
lahf
xchg
xchg
adc
scas
lods
fldcw
jmp
adc
jp
add
pop
jp
daa
pushl
das
lock
cs
insb
pop
pop
lret
pop
ds
mov
xchg
cmp
add
sbb
out
sub
sub
push
sbb
leave
xor
cli
cmp
outsl
addr16
mov
aas
and
lea
out
inc
cmp
and
out
cmpl
fbld
scas
mov
iret
mov
xchg
push
ret
enter
jne
xchg
and
test
xchg
lret
stos
push
dec
xor
mov
xchg
and
adc
inc
add
cmp
mov
jne
fisubs
cmp
or
and
mov
inc
sub
rcrl
sbb
cltd
mov
out
or
iret
hlt
lret
scas
mov
daa
sbb
mov
movsl
sub
shrb
mov
sub
das
loopne
subb
aam
xor
push
loop
negb
mov
jp
hlt
add
push
lds
xor
push
or
les
es
mov
insb
dec
leave
dec
pusha
loopne
xchg
sub
jp
cld
dec
jno
xor
leave
push
pop
push
popf
sti
scas
aam
enter
jne
pushl
fnstcw
or
mov
mov
cmp
pop
mull
imul
data16
dec
lods
add
mov
pop
jno
push
aas
cmp
in
cld
shll
mov
adc
gs
test
sbb
push
fisttpll
cmp
cwtl
cmpsl
xor
stc
dec
scas
xchg
fisubrl
ja
js
jbe
lahf
scas
lds
mov
mov
cmp
pop
stos
xor
pop
outsl
popa
jmp
add
sbb
ret
in
aaa
push
insl
out
or
dec
enter
data16
mov
adc
inc
arpl
pop
hlt
pusha
mov
test
js
test
sub
or
pushl
push
in
cmp
mov
adc
add
andb
pop
mov
xor
daa
xchg
cmp
push
sub
pop
or
lcall
lcall
iret
lahf
mov
mov
jb
dec
ja
xor
insl
js
insb
das
mov
or
loop
jge
push
sbb
int3
push
mov
or
pop
pop
lods
xlat
xor
fnsave
std
mov
addr16
lds
out
cwtl
js
aam
xor
imul
decl
sbb
adc
sbb
scas
adc
pop
fxch
repz
insb
test
scas
and
mov
int
xor
xchg
mov
dec
imul
jno
outsb
jle
sti
test
popa
adc
jecxz
xor
inc
nop
and
hlt
dec
xchg
dec
scas
xchg
aam
mov
pop
popa
push
or
xchg
jmp
daa
sbb
inc
leave
inc
cli
push
mov
and
mov
hlt
aad
jle
loopne
xlat
js
cmpsl
call
xchg
mov
scas
iret
adc
and
cwtl
add
cmp
inc
dec
mov
sub
jno
ljmp
in
add
popa
inc
xor
sbbl
inc
mov
xchg
aaa
mov
mov
stos
jno
addr16
xchg
pop
jl
sub
adc
enter
sub
in
sub
and
in
dec
jl
mov
cmpl
jne
jno
sarb
test
add
dec
sahf
mov
into
aas
movsl
repz
xchg
test
imul
mov
mov
adc
dec
aam
jg
jns
int
cmp
push
fwait
push
ficompl
xor
mov
into
or
imul
dec
fisubrl
xor
xchg
popf
inc
add
stos
shrb
outsb
sarb
sub
sti
scas
push
mov
xchg
mov
fucom
aas
jecxz
adc
icebp
mov
inc
cmp
and
ljmp
inc
icebp
jmp
push
mov
sub
xlat
imul
xchg
lret
inc
fimull
xchg
ljmp
cwtl
lret
sbb
cmpsl
cmp
ss
jecxz
inc
and
leave
enter
sbb
test
sub
or
or
rclb
jecxz
lods
into
mov
mov
loope
inc
lds
sbb
mov
mov
shlb
inc
inc
jp
xchg
jnp
aad
mov
or
xchg
mov
cs
dec
and
jmp
lret
ficomps
cmp
fldcw
bound
adc
mov
int
pop
in
in
pop
push
push
xorb
xchg
sarl
push
xchg
push
jne
inc
ss
sbb
jno
jmp
rep
sbb
adc
sub
inc
aas
inc
fucom
pop
cmp
jno
shll
and
sbb
dec
and
ret
stc
pop
pop
int3
aad
pop
imul
gs
jne
mov
popf
add
repnz
dec
leave
and
loop
iret
fcom
cmp
iret
scas
out
leave
jmp
push
ds
push
test
push
shrb
adc
call
in
xchg
sub
je
or
inc
loope
cmp
rol
enter
jo
mov
movsl
sub
jbe
xchg
aas
push
push
sub
pop
dec
cwtl
movsb
scas
or
xchg
push
in
fwait
push
sub
or
or
lret
mov
loope
jle
nop
fmull
and
popf
mov
sub
cli
jecxz
cmpsl
cmp
les
sarl
add
sub
sbb
xchg
inc
cmp
add
repnz
mov
mov
imul
dec
or
or
xchg
dec
shr
pop
sub
push
pop
or
js
and
leave
cmp
sub
dec
inc
jle
mov
xor
sbb
xchg
mov
jg
sbb
mov
xchg
mov
and
js
fs
jae
push
lret
or
iret
repz
mov
push
lds
dec
daa
jae
cli
ficompl
mov
mov
ds
outsb
test
jge
xchg
or
ja
add
test
aas
add
pop
mov
dec
xlat
and
nop
jl
mov
cwtl
sub
loop
into
push
in
sub
pop
sahf
inc
xor
loop
cmp
mov
fs
jo
popa
jge
push
mov
cmp
pop
imul
cwtl
out
mov
and
add
mov
mov
rolb
cmp
xchg
lcall
enter
in
mov
mov
fidivrs
and
add
jmp
mov
sbbl
mov
sub
sbb
xor
adc
mov
popf
sbb
lcall
aas
cld
cmp
jb
xchg
sbb
mov
push
adc
jns
das
jmp
inc
xchg
jp
pop
out
mov
lea
mov
ret
xor
dec
mov
cmpl
and
lret
xor
insb
das
insb
mov
loop
and
sbb
sub
pusha
daa
out
jmp
add
push
mov
xchg
xor
mov
stc
mov
inc
dec
sbb
mov
pop
repz
add
rcl
add
mov
int3
jg
popa
adc
fldt
add
mov
cld
add
push
xchg
hlt
imulb
push
xchg
mov
mov
and
push
cmpsl
stc
stc
not
int3
addr16
dec
fstp
xor
dec
in
pop
mov
jmp
xchg
into
cmp
cmp
mov
jmp
bound
inc
lea
jnp
mov
dec
imul
jp
into
xchg
and
int
dec
arpl
fsubrs
cmpsb
in
jnp
pop
sub
mov
idivb
rcr
je
sti
andl
sar
mov
cld
mov
cmpb
push
xchg
jno
jle
sub
in
sbb
out
mov
fdivl
out
pushf
push
js
cltd
or
mov
or
je
bound
cmp
add
push
daa
mov
sub
jmp
cli
test
and
js
dec
stos
pop
jb
xlat
adcb
jnp
mov
arpl
mov
jo
push
daa
out
out
xlat
mov
int
stos
push
mov
jne
mov
inc
jnp
mov
cld
mov
es
cltd
jge
stc
mov
xorw
fildl
fstps
into
sahf
cwtl
in
xchg
loop
dec
pop
push
dec
xlat
mov
insl
ss
les
int
fidivrl
cwtl
or
sub
jl
or
ljmp
popa
xchg
dec
orl
imull
inc
out
cmp
lods
mov
inc
inc
xor
cli
jle
cmp
sarb
cmpsb
sub
inc
ljmp
imul
or
jbe
test
mov
scas
pop
sbb
inc
adc
cmpsb
aas
and
push
mov
orl
dec
les
jnp
jb
imul
push
sub
sub
mov
pop
push
push
test
xor
out
xor
popa
pop
jmp
test
sub
pop
mov
cmpsb
ja
test
sbb
loope
lods
or
xsave
pop
cmp
and
ds
pop
dec
test
or
mov
lcall
xor
jne
sbb
and
mov
out
lock
push
int3
xorb
clc
fdivrl
push
add
pop
aaa
jo
shl
lret
data16
sub
adc
pop
fwait
dec
mov
scas
movsb
jge
fwait
pop
push
test
gs
xchg
sub
je
popa
mov
in
out
cmp
add
add
sub
shl
cld
jg
mov
lods
add
bound
sti
lds
adc
ja
int
mov
lret
jl
loope
xchg
nop
cmp
pop
pop
cmc
xchg
je
dec
adc
or
inc
push
jae
pop
clc
test
mov
nop
mov
test
push
mov
inc
movsl
mov
inc
sbb
jno
dec
fsubrl
lods
jecxz
test
mov
mov
xchg
int3
scas
movsb
ja
mov
das
mov
cmp
add
jns
imul
xchg
jno
test
xchg
rorl
cs
fwait
push
xorl
and
dec
push
cs
ljmp
sbb
add
pop
inc
sub
and
mov
mov
sub
cmp
test
or
cli
imul
or
jae
scas
mul
lock
jmp
scas
adc
ss
imul
and
lahf
jl
pop
xlat
testl
cmp
inc
or
mov
adc
mov
les
jnp
xlat
or
es
scas
scas
inc
push
sti
mov
sub
jl
mov
cmp
scas
loop
mov
pop
loop
or
call
pop
and
js
pop
sub
xchg
jbe
pop
vpaddsb
jb
icebp
inc
mov
jns
add
int
push
xor
sub
loope
ret
pop
jb
mov
push
add
icebp
popf
fiaddl
repnz
dec
mov
cmpsb
movsl
loopne
dec
push
jg
mov
cs
in
and
jle
mov
fs
and
shll
lock
sub
daa
mov
and
inc
into
and
sar
arpl
jne
mov
test
mov
mov
push
dec
mov
movsb
sub
pushf
add
rcll
xchg
jl
scas
out
add
sbb
sbb
jne
inc
xchg
js
sub
dec
push
outsl
xchg
inc
dec
pusha
rorl
cmpsb
fwait
dec
xor
in
rcl
mov
test
xchg
cwtl
ret
sti
lahf
cmp
rclb
sub
call
stos
mov
lods
neg
mov
jno
pop
push
adcl
inc
in
sahf
scas
sbb
pop
aam
ss
mov
sbbl
arpl
mov
cmpsb
test
push
adc
and
cwtl
pushf
mov
adc
pop
add
in
cmp
jp
sub
jmp
int
push
jne
shll
jo
push
xchg
adc
loopne
fs
inc
mov
lods
jo
mov
or
popf
pushf
mov
adc
mov
mov
std
lea
ud0
lcall
or
cmpsl
decl
arpl
dec
sbb
pop
mov
jae
and
lods
ret
xchg
xor
out
fsubrl
xchg
std
test
je
test
je
fidivrs
push
repnz
sbb
mov
out
out
xor
dec
insl
mov
sbb
xchg
scas
shlb
sub
popf
jl
mov
fstpl
inc
aas
cmp
test
adc
mov
push
cltd
cmpsl
dec
negl
popa
mov
std
jmp
ficomps
mov
dec
scas
mov
pop
mov
add
enter
sub
adc
sbb
xchg
out
mov
sbb
outsb
lret
adc
mov
lcall
enter
mov
rcrl
pushf
sub
mov
hlt
mov
cmc
pop
mov
lock
or
add
add
int3
adc
out
testl
mov
or
adcb
push
repnz
add
fcom
enter
jnp
cmp
ficoml
std
aad
loope
fiaddl
mov
cmp
sub
cmpb
mov
aad
add
aam
adcl
fstps
or
pusha
sbb
popf
inc
mov
sub
addr16
xchg
adc
test
xor
mov
cmp
sbb
addr16
mov
push
sbb
mov
out
cmp
sub
jge
xchg
adc
xor
lret
mov
or
mov
push
xchg
inc
es
in
inc
mov
xor
pop
adc
popf
cmp
pop
sti
or
lea
push
lahf
xchg
jmp
inc
sbb
outsb
in
cmp
mov
das
andl
xlat
int
popf
xor
inc
mov
ljmp
pop
and
std
push
rolb
xor
shl
adcb
adc
inc
decl
push
insl
insb
pop
and
roll
ss
mov
dec
pop
sbb
in
fiaddl
adc
and
sub
or
test
inc
das
adcl
iret
or
mov
pusha
lods
mov
aaa
loop
lret
inc
ljmp
xchg
jno
mov
inc
mov
mov
stos
mov
addr16
out
popf
pop
fwait
leave
daa
mov
mov
out
or
push
loope
xchg
cwtl
and
xlat
pop
add
adcl
jmp
nop
loopne
mov
ja
shrl
push
xlat
std
jmp
hlt
cmpsl
test
xchg
mov
sbb
sti
out
insl
out
idivl
popa
sub
and
adc
xchg
jnp
and
hlt
xor
push
jg
cs
inc
push
scas
pop
add
jg
sets
jnp
stos
add
subps
xchg
inc
hlt
xchg
subb
arpl
std
insl
cmp
aas
xor
leave
adc
or
lock
addr16
test
mov
imul
out
rorb
pop
add
add
push
sub
push
imul
loop
push
or
pop
jns
clc
jns
daa
and
call
mov
dec
mov
scas
jae
sahf
push
cmp
mov
pop
insb
add
pusha
shl
jmp
mov
cltd
notb
lea
test
push
mov
and
test
jno
mov
cmpsb
inc
imul
out
xor
jmp
nop
insl
pop
or
mov
jle
lret
and
leave
rcrb
aas
mov
daa
xchg
daa
rclb
mov
popf
sub
adc
stos
dec
push
mov
and
shlb
lods
out
sbb
push
clc
ret
sbb
or
out
jno
jne
pop
gs
pushf
call
es
addr16
stc
in
sbb
rclb
shlb
sub
cmp
outsl
lret
enter
inc
pushf
push
in
jl
cld
xchg
mov
mov
hlt
adc
lods
mov
xor
fcomi
sahf
adc
add
xchg
lds
xchg
enter
imul
pop
into
dec
scas
and
hlt
insl
sahf
ds
test
clc
iret
fsubs
mov
in
inc
icebp
xchg
or
fistps
sahf
and
push
push
add
cmp
dec
jo
jb
push
call
xor
std
push
sbbb
rcll
sub
cs
sbb
faddp
imul
pop
jmp
fsts
fidivrs
cs
inc
in
stc
push
fadds
jle
cwtl
ret
inc
imul
fmuls
push
std
scas
in
push
leave
data16
subl
mov
pushf
insb
dec
adc
es
sub
iret
dec
test
jno
das
mov
jge
xor
repz
into
daa
push
xchg
sub
movsb
jge
adc
repnz
lods
mov
enter
sbb
or
pop
xchg
popa
in
pop
shrl
add
and
mov
sbb
xchg
roll
pop
icebp
xor
cmc
data16
rcrb
sub
cli
xchg
sub
add
xor
jp
and
out
nop
divb
ret
push
test
xor
cmpsl
add
mov
mov
pop
inc
loopne
mov
jb
sub
push
add
xor
mov
xorl
nop
jnp
add
rcll
mov
cmp
loope
clc
shlb
adc
test
jge
jmp
mov
sahf
inc
mov
aam
adc
shrl
test
pop
data16
mov
in
xchg
sbb
cld
or
inc
push
cmp
lret
push
xchg
fmuls
insb
inc
or
push
add
cmp
push
pop
sub
push
mov
addr16
aaa
psubusb
xchg
popa
jle
out
scas
inc
test
push
add
fimull
scas
cmp
inc
aaa
stos
pop
aaa
cmpsl
movl
cld
in
mov
rclb
xlat
into
cmp
push
cli
dec
aaa
sbb
hlt
xor
and
mov
jne
js
inc
mov
cld
jne
cwtl
pop
xor
iret
mov
lock
les
inc
xchg
shlb
xchg
inc
or
lret
cmp
adc
scas
shll
in
inc
rcl
inc
scas
pushf
repnz
sub
jle
push
dec
test
mov
lcall
stos
inc
imull
jo
mov
inc
mov
in
cmpsl
pop
mov
jno
pop
jl
add
inc
test
mov
rcrl
mov
leave
in
ss
stos
sub
cltd
jo
cmp
jg
loope
sbb
pop
push
insl
sub
mov
mov
mov
repnz
cmpsl
xor
xor
mov
xchg
stos
cld
clc
mov
jae
and
lds
jge
enter
outsb
xor
or
pop
pop
add
lcall
cwtl
jnp
add
or
and
arpl
jle
lds
je
in
out
mov
adc
fmulp
dec
jp
insb
loope
mov
les
pop
loope
stc
pusha
mov
pop
dec
insb
push
jo
push
aas
push
rcrl
icebp
cmp
and
push
mov
sbb
das
mov
add
xchg
push
jl
pop
gs
adc
push
je
inc
in
and
add
push
mov
adc
pop
xchg
adc
jmp
stos
sub
mov
sub
cmp
mov
mov
inc
inc
add
sub
cmp
and
imul
fldt
or
lock
std
loope
adcl
arpl
xor
outsl
mov
xchg
xor
hlt
repz
inc
fldenv
mov
in
adc
xor
xor
sub
scas
popa
push
iret
ljmp
ss
jl
push
push
fdiv
xchg
add
or
imul
dec
jecxz
push
xchg
roll
sbb
cmp
scas
stos
into
insl
popf
cli
push
stos
mov
repnz
sahf
xchg
idivl
int
sub
add
add
cmp
adc
shlb
mov
push
xchg
aad
in
dec
adc
inc
shl
jbe
rorl
and
rsqrtps
bound
mov
inc
mov
inc
mov
sub
mov
sub
pop
ret
aas
push
mov
xor
inc
in
pusha
js
inc
pop
lret
std
lahf
mov
sbb
call
mov
xchg
movsl
pusha
ret
in
cwtl
cmp
push
cmpb
jns
test
cmovb
sub
adc
fsub
aas
js
out
pop
lods
add
adc
cmpsb
in
cs
and
arpl
test
nop
iret
and
pop
xchg
lock
movsl
cwtl
add
fcoml
push
int3
pop
hlt
adc
aas
mov
stos
sti
inc
push
stc
int3
rorb
push
lahf
out
fsubrs
ljmp
fwait
push
loop
pop
sbb
adc
aaa
outsb
dec
xor
pop
rep
bound
push
or
xchg
push
cmp
js
and
inc
rcll
pop
fstl
pop
test
add
xchg
rcrl
inc
out
jb
xchg
enter
dec
notb
adc
stc
mov
pop
fwait
dec
ja
adc
xchg
or
dec
adc
cmc
dec
fildll
gs
mov
push
sti
inc
sbb
outsl
notl
jge
popa
rcl
lods
int
outsl
xchg
or
addr16
fisubrl
lsl
mov
in
test
clc
inc
and
addr16
cmpsl
sub
lahf
mov
popa
rorb
jb
pop
cmp
pop
pop
ja
test
add
outsb
dec
adc
idivl
cli
es
addl
imul
ret
outsl
inc
jae
sub
mov
jbe
out
movsb
out
std
xor
pushf
adc
mov
dec
out
cld
sti
inc
cli
in
cmp
mov
add
pushf
movsl
sbb
roll
pushf
mov
test
add
cmpb
cmp
or
mov
std
xor
cltd
xchg
cmp
push
out
and
cmc
fcomip
jb
push
lcall
push
popf
or
leave
dec
orb
inc
jne
sbb
aas
jno
adc
fcoml
sti
shll
es
xor
mov
sub
lret
push
mov
mov
push
test
ret
out
ljmp
dec
bound
or
fmul
pop
cmp
jns
fisttps
inc
cltd
cs
std
inc
or
sbb
scas
inc
js
lret
int
test
pushf
adc
rcll
push
loope
inc
xor
les
sub
shrl
in
dec
jns
sub
sbb
cmpsl
cltd
fld
xchg
js
mov
push
outsb
xor
push
insb
aam
jnp
test
ljmp
ret
pop
mov
ja
clc
test
xchg
in
mov
jmp
repz
lock
sbb
jl
sub
ret
adc
outsb
xchg
icebp
test
les
add
fnstcw
cltd
idivl
sbb
stc
adc
adc
je
or
test
aaa
mov
xor
push
fs
inc
shll
xchg
test
notb
stos
mov
xor
ret
loope
insb
xlat
icebp
in
or
fisubl
test
and
cmpsb
lahf
adcl
ds
mov
pusha
daa
ss
xchg
in
dec
mov
aam
rcll
out
cmp
mov
gs
or
popa
jmp
sbb
icebp
xchg
adc
nop
test
xor
push
xchg
pop
ja
dec
ficompl
ljmp
push
roll
add
les
xchg
push
pop
loopne
dec
push
nop
nop
loope
mov
sbb
mulb
push
pextrw
ss
and
jp
sbb
popf
mov
les
xor
mov
lahf
ljmp
xor
scas
mov
inc
aam
add
xchg
iret
aam
outsb
out
repz
cmp
mov
out
out
adc
xchg
dec
mov
dec
dec
int
xor
das
cld
mov
in
cmp
adc
pop
nop
pslld
in
jmp
loop
cmp
xchg
xor
cmp
pop
cmp
sbb
sbbb
ret
sub
mov
mov
and
mov
pop
jg
dec
xchg
test
mov
cmp
adc
sti
push
imul
stos
xchg
addr16
stos
xor
jns
sbb
add
popa
push
loope
pop
loopne
icebp
jnp
pushf
test
mov
jl
adc
arpl
and
loop
xor
stos
aam
adc
loope
ja
dec
in
into
fcoms
push
iret
pop
icebp
mov
dec
xchg
and
fbld
call
lret
icebp
pushf
sarl
imul
xchg
push
call
adc
sub
fstp
or
mov
clc
sbb
jae
sbb
mov
dec
jo
sub
sbb
in
or
hlt
mov
ljmp
inc
pop
dec
xor
sub
cmpsl
jge
jns,pn
inc
cmp
shrl
jle
stc
int
fwait
mov
mov
or
jbe
outsl
addr16
dec
sub
gs
adc
xchg
xorb
loope
xlat
push
jb
jecxz
adc
insb
mov
cwtl
xor
sub
push
jnp
fcmovb
inc
xor
xchg
adc
jno
add
aaa
outsb
lock
addr16
shl
add
icebp
pop
js
cwtl
adc
shrl
dec
add
push
fists
daa
xor
sub
mov
mov
or
shll
cmp
icebp
cli
cmp
adc
neg
sar
js
test
and
adc
adc
pop
cmpl
and
sub
stos
dec
shrb
push
clc
or
jae
push
mov
out
popf
xlat
push
outsb
adc
pop
xorb
and
xchg
mov
push
lods
je
int3
test
cli
pop
push
in
addl
ret
sub
cmp
xor
cmp
bound
test
out
in
movsb
inc
or
add
jle
mov
add
xchg
and
and
outsl
js
push
sbb
sub
les
mov
fadd
hlt
mov
movsl
push
sbb
adcb
out
aaa
xchg
test
pushl
mov
nop
nop
sahf
cmpsw
push
ret
je
and
repnz
mov
loopne
andb
std
jo
call
inc
push
xlat
dec
jp
dec
mov
aaa
les
mov
jl
ljmp
xchg
je
stc
test
lods
jl
jle
cli
in
adc
repz
loop
lcall
mov
aam
movsb
jecxz
jne
jnp
mov
mov
clc
push
dec
push
or
sub
or
push
add
fmulp
bound
sub
fnsave
lret
cmp
sub
out
cmp
cmp
xor
cmp
fildll
repnz
lock
loopne
add
ret
out
mov
nop
sub
push
cmp
mov
sbb
xor
pushf
flds
loopne
iret
es
jns
movsb
push
and
push
xchg
movsl
xor
xlat
sbb
inc
out
out
jecxz
jp
mov
mov
mov
jne
jl
fdivrl
ss
and
mov
sub
mov
mov
mov
addl
dec
xchg
data16
lahf
lods
aad
cmpsb
mov
movsb
add
out
and
es
and
imul
push
scas
and
jp
push
add
pushl
push
test
decl
adc
push
insl
lock
adc
orl
fcmovbe
pop
lods
adc
and
call
cli
cmpsb
ficoms
push
or
xchg
push
into
push
enter
arpl
cmp
ja
test
xor
negb
pop
ja
pusha
jle
stc
mov
mov
xor
popf
aaa
pushf
notl
xchg
popf
orl
stos
or
adc
pop
xchg
insb
push
rcll
js
repz
push
mov
fists
push
or
es
lcall
mov
mov
sub
pop
pop
lock
js
jae
scas
stos
cmp
ds
insb
xchg
cwtl
xor
inc
push
roll
or
loop
std
inc
or
dec
jle
xchg
jle
ret
aad
jp
mov
jb
push
cmp
push
mov
jecxz
lock
repz
xor
insl
sbb
jnp
test
insl
cltd
sbb
gs
lret
push
dec
rolb
dec
inc
or
adcl
in
jl
ja
out
dec
test
movsb
ret
out
mov
cltd
mov
xlat
pop
sbb
out
jno
movsb
xor
pop
data16
lahf
mov
sub
inc
xchg
jno
add
push
xchg
call
rcrl
or
xchg
dec
push
or
es
xlat
jl
ljmp
and
jg
mov
jmp
sub
add
inc
add
jmp
mov
inc
stc
cmovl
orb
repz
out
pop
push
xor
fldenv
js
push
add
mov
ss
adc
add
xor
inc
and
dec
jecxz
mov
add
jnp
push
repz
test
dec
iret
xor
mov
cli
call
and
push
lds
in
push
shll
or
lods
fwait
shl
les
jnp
in
aam
pop
xchg
mov
dec
mov
js
pop
mov
push
or
stos
std
fcoml
xchg
xor
dec
scas
xchg
clc
and
in
and
lret
sahf
cmp
mov
sub
outsb
jl
int
cld
loop
jae
pop
test
push
xlat
loopne
dec
fimull
lds
inc
pop
mov
in
rorb
aad
push
xor
inc
sbb
int3
shll
dec
lods
lcall
or
andl
xlat
jb
push
jns
sbb
pop
fiadds
jp
in
mov
or
pusha
pop
adc
mov
sarl
ja
push
xor
in
jle
or
or
cwtl
jp
and
notb
in
mov
xor
push
and
outsl
jl
mov
mov
fdiv
xchg
rorb
les
xchg
test
dec
das
jne
sub
enter
stos
adc
daa
adc
lcall
add
inc
hlt
dec
lcall
dec
or
mov
shrb
int
inc
aas
out
call
mov
mov
fstl
loope
jnp
jbe
and
jp
push
pop
inc
xor
mov
cmp
loope
aam
aam
lods
and
testl
je
mov
xlat
push
sub
and
ja
mov
push
cmc
mov
es
adc
jnp
cwtl
nop
jge
dec
add
sbb
imul
jmp
adc
rcll
and
in
pop
orb
xlat
scas
scas
push
mov
sbb
cmp
ljmp
pop
cltd
lahf
inc
cmpsl
rol
inc
xchg
xor
sahf
push
addr16
xchg
mov
out
rorl
fs
stos
popf
xchg
aad
fcmovbe
or
scas
inc
inc
xchg
mov
sub
inc
push
testb
sahf
dec
mov
cmp
dec
mov
cmp
jo
lods
sbb
je
sub
lea
out
loope
hlt
xchg
mov
stos
mov
cmpsb
out
cmp
or
sub
mov
in
dec
xor
and
and
mov
mov
mov
and
out
xchg
fsubr
aad
jmp
inc
mov
testb
enter
push
rcll
cmpsl
bound
test
cmp
adc
jp
mov
inc
adc
push
fldt
jae
mov
xor
cmp
shr
mov
or
inc
rorb
add
fdivl
int
push
cmp
mov
cmpsb
pop
mov
repnz
dec
jo
push
rolb
scas
push
xor
sti
aas
push
mov
aas
sarb
int3
push
add
and
jmp
je
bound
mov
jne
fimuls
pop
adc
psubb
cltd
lods
xor
lea
lods
andb
loopne
mov
call
bound
pop
mov
sub
or
ret
or
inc
sub
lahf
push
stos
loop
pusha
lds
rorb
insl
fldenv
gs
pop
rorb
push
ret
push
pop
in
jne
popa
mov
cs
shrb
and
int3
enter
mov
pop
mov
stos
test
out
shlb
xorl
xchg
int3
fldt
shlb
push
movsb
enter
push
cld
mov
sbb
sbb
xlat
push
lea
adc
sbbb
push
jecxz
jnp
xchg
push
push
in
sbb
xchg
add
or
xchg
das
inc
xchg
ja
in
fidivrs
mov
call
dec
pushf
sbb
push
insl
lahf
ja
dec
cmp
dec
mov
pop
nop
movsl
dec
sub
xor
aad
pop
insl
ret
pop
dec
fisttps
sub
rcr
movsb
xor
pop
dec
int
fistpl
cmp
pop
and
mov
data16
insl
test
inc
mov
dec
add
lcall
jl
and
mov
or
dec
sbb
lods
xor
jbe
pop
and
sub
jmp
inc
in
or
mov
xor
cltd
aaa
push
outsb
mov
mov
pushl
sahf
popw
jbe
rol
sub
jbe
data16
loope
in
fisttpll
adc
adc
cmp
sarb
jae
lahf
ret
repnz
test
pop
mov
or
sti
dec
push
outsb
cli
adc
flds
inc
push
imul
outsb
mov
sbb
das
mov
jne
mov
xor
inc
xor
mov
fldenv
cwtl
jne
dec
jl
lret
ror
sbb
shlb
push
dec
sbb
pop
stos
gs
xchg
in
add
xorb
dec
mov
popa
out
jle
push
sbb
xor
rcl
xchg
jge
sub
jo
lcall
sub
inc
pop
in
ss
add
dec
and
hlt
test
inc
std
fdivp
test
imul
sbb
jge
shrl
sbb
xchg
mov
out
subb
push
mov
scas
mov
insl
rcrb
and
pushf
and
mov
mov
adcl
lods
xlat
mov
inc
lcall
dec
adc
pop
sub
or
hlt
adcb
fstl
insb
push
mov
mov
inc
cmc
clc
icebp
sahf
cwtl
sahf
lock
lods
mov
shr
cmp
test
sti
ds
add
jmp
insb
arpl
and
push
mov
arpl
xor
mov
sub
lret
mov
mov
push
xor
push
lea
push
mov
jmp
xor
mov
inc
fisubl
mov
lret
cmpb
mov
inc
jno
es
sbb
jae
jecxz
mov
inc
stc
inc
cld
xchg
push
fwait
scas
ficoms
mov
push
lds
mov
pop
ret
in
je
push
jecxz
and
xchg
jbe
inc
icebp
push
cmp
xlat
sub
pop
mov
lret
leave
jo
dec
adc
pusha
ret
test
pop
mov
ficompl
mov
sarl
pmaxsw
test
cmc
daa
out
jp
call
pop
enter
shrl
mov
mov
scas
xchg
sub
jae
xchg
or
mov
in
das
lock
mov
dec
mov
push
jo
arpl
loop
enter
jp
push
pop
test
jl
es
jg
mov
and
or
inc
mov
pop
lods
test
sarb
xlat
mov
mov
jg
mov
imul
add
out
adc
sbb
stos
jbe
pop
testl
add
push
dec
loope
rclb
loop
jns
add
cld
mov
push
mov
lcall
push
inc
int
js
cmc
scas
or
ror
ror
sbb
ror
imul
dec
mov
decl
ret
jg
aaa
lds
dec
cmpsl
push
sahf
js
push
outsl
mov
into
sub
aad
fdivrp
sbb
mov
pop
data16
pop
das
or
hlt
lea
lret
sbb
mov
mov
or
add
or
mov
dec
out
mov
mov
mov
jbe
xor
mov
std
sub
push
xchg
mov
xlat
testb
add
push
subb
fwait
loopne
imul
lahf
test
es
sti
xchg
inc
mov
push
cmpsl
sar
outsl
insb
out
cmp
fucomip
shrb
aad
inc
or
cmpsb
clc
pop
adc
adc
cmpsl
mov
cs
rclb
lods
sbb
sbb
mov
lcall
xchg
mov
mov
push
mov
je
mov
pop
jl
rorb
popa
fwait
sub
insb
scas
flds
fs
dec
xor
clc
lods
hlt
js
lods
cmc
fbstp
sbb
cmp
stc
ss
inc
dec
or
sub
imul
pop
fidivs
fs
lcall
mov
sahf
jno
dec
and
mov
cmp
or
aam
insl
mov
and
movsl
leave
out
adcl
jle
mov
and
xchg
mov
lods
jmp
icebp
mov
mov
jp
cmp
insb
out
add
pop
lea
pop
and
sti
push
scas
mov
shll
mov
sbbl
add
fstpt
pop
rol
mov
cmp
insl
scas
cmpsb
js
push
sarl
nop
stc
sbb
push
cwtl
cmp
test
aam
mov
xor
xor
cmpl
pop
inc
adc
ljmp
mov
js
outsb
adc
mov
in
xchg
jp,pn
push
movl
mov
sbb
imul
test
rol
dec
push
mov
in
add
or
pusha
andl
pop
push
push
sub
add
or
pushf
xchg
pop
imul
icebp
dec
data16
cs
jb
pop
mov
call
loopne
ds
jbe
mov
mov
into
push
loop
gs
sbb
fwait
or
clc
sbb
icebp
cmp
push
insl
xchg
fidivs
pusha
mov
add
stos
js
xor
pusha
jnp
dec
mov
mov
or
daa
addr16
rorl
mov
cmp
hlt
inc
std
repz
roll
loopne
fs
pushf
gs
cltd
out
inc
dec
fs
sbb
xchg
mov
stos
mov
inc
icebp
cld
outsb
inc
jle
fs
jo
or
inc
mov
xor
mov
mov
cmp
dec
lret
xor
xchg
add
es
fwait
test
xor
inc
popf
iret
and
cmp
xor
daa
pop
jmp
inc
jb
aaa
and
push
jle
pop
fcompl
pop
jmp
dec
pop
sub
mov
test
notl
cwtl
sbb
and
or
sub
jb
cmp
in
cmpsl
cmpsl
pop
jne
fdivl
les
rcl
jg
repnz
xor
rolb
loop
imul
pop
test
mov
xchg
dec
xchg
lds
push
jae
xor
sbb
xor
jle
add
xor
aam
js
pusha
stos
cltd
aaa
ficoml
jae
loop
mov
sar
outsb
xchg
lahf
and
in
mov
fbld
js
fxch
lods
out
xor
rolb
pop
lcall
pushf
rcrl
xchg
xor
pop
scas
push
xor
jmp
xlat
add
popf
cmp
sub
rcl
sub
sarb
ljmp
adc
cmp
and
mov
idivl
mov
mov
sbb
mov
mov
mov
sbbl
mov
dec
pop
jbe
sbb
sbb
popa
xchg
push
es
sbb
bound
push
xor
ja
imul
pop
rcrl
inc
xorb
pushw
pop
aaa
leave
cmp
sbb
lea
jne
inc
test
xor
xchg
cmc
lret
mov
push
jge
inc
imul
xor
mov
fdiv
ljmp
cmp
outsl
xchg
call
cwtl
cmp
ds
std
shl
push
outsb
stos
push
dec
les
xor
test
mov
pop
ja
ss
int3
jae
xchg
into
shrl
ds
insb
les
add
cmp
jbe
xchg
jecxz
mov
jge
test
jp
add
sar
test
mov
cmpsl
mov
add
sbb
xor
pop
mov
test
xchg
push
mov
dec
and
sub
outsb
xor
and
addr16
mov
addl
push
jle
scas
ljmp
mov
jnp
jo
sub
mov
sub
call
sub
je
or
cmp
arpl
xchg
pop
pop
imul
enter
mov
pop
mov
sbb
insl
ret
out
jb
push
fistl
fbstp
cs
outsb
mov
push
sbb
fs
rol
cli
mov
pop
or
enter
mov
nop
cmp
xchg
clc
pop
xor
sub
xchg
int3
fsubl
and
mov
les
mov
xchg
adc
dec
in
pop
pop
cld
sub
or
ror
mov
push
bound
outsb
adc
push
insl
cmp
mov
adc
imul
xor
sbb
adc
in
frstpm(287
xchg
rclb
push
mov
jmp
lock
xor
pop
cmp
inc
jmp
sbb
inc
fdivs
sub
and
sub
lods
add
push
test
mov
jae
aad
mov
dec
push
xchg
pop
add
push
sub
pop
mov
xchg
addr16
mov
imul
cmc
enter
loopne
jle
sub
and
mov
push
pop
cld
jae
pop
arpl
enter
pop
xchg
fcomps
aad
es
add
dec
enter
fstps
push
rclb
cmpsb
lahf
sbb
mov
in
xchg
or
fcomps
mov
pop
dec
inc
mul
xor
ss
jbe
dec
cmc
sbb
outsb
and
daa
inc
mov
movsl
pop
push
pandn
mov
mov
or
sub
inc
int
xor
cmp
jns
loop
inc
cmc
push
out
push
ret
pusha
mov
rcrb
mov
jnp
add
xchg
aam
dec
mov
in
sbb
aas
xor
and
or
fnsave
and
jo
push
xchg
pop
leave
mov
sbbb
scas
mov
sbb
push
jecxz
pop
movsb
out
xor
insl
xor
push
inc
cmovp
mov
ja
pop
sbb
pop
or
imul
add
jne
and
or
mov
jae
test
cmp
cmp
dec
arpl
adc
and
push
fisubrs
ss
inc
xchg
aas
or
sahf
scas
repz
test
push
cmpsl
filds
sar
je
les
sbb
test
and
lds
bound
loope
add
xchg
inc
pop
jmp
shl
and
sbb
sub
cli
pushf
ds
push
mov
inc
cmp
add
or
addr16
bound
inc
out
in
adc
xor
lret
out
add
jbe
enter
cmp
inc
scas
int3
pop
xor
pop
mov
out
push
or
jg
jbe
cmp
test
testb
addr16
jg
cmp
inc
and
into
icebp
sbb
jno,pt
and
dec
popa
dec
repz
lea
sbb
mov
insb
xchg
pop
scas
test
cmpsb
je
jg
js
lock
xor
cld
adc
mov
shrb
cli
mov
dec
out
addb
subl
inc
push
movsb
or
jge
in
out
cwtl
mov
pop
out
or
sbb
adc
es
inc
mov
jbe
adc
or
jmp
dec
addb
in
mov
lret
adc
pop
jle
jle
fstl
push
add
or
sysret
sbb
xor
sub
ret
je
les
add
inc
cmp
mov
pop
mov
insb
or
cmp
les
adc
dec
mov
shlb
sub
popa
xchg
pop
lea
jle
mov
jbe
or
mov
stc
jbe
outsl
jo
add
sarl
lds
sbb
cmp
loopnew
lods
or
lcall
clc
pop
in
pop
ja
push
aam
mov
sub
sbb
dec
mov
mov
adc
sub
movsl
sbb
xchg
addb
jne
sub
cs
add
rcl
inc
add
cs
dec
imull
aas
lds
adc
push
and
or
pop
aam
sub
xchg
fsubp
add
mov
pop
imulb
into
movsb
ljmp
adc
std
adc
jl
sahf
imull
pop
jmp
pop
lock
mov
test
testb
lea
mov
xchg
fidivrl
lds
fists
adc
xchg
popf
cmp
mov
roll
nop
dec
ret
pusha
push
je
xor
push
cli
fstpl
mov
dec
mov
cmp
jl
add
repnz
adc
or
and
jmp
cmp
dec
lret
jle
or
pop
cmp
mov
sahf
xchg
adc
cmp
jecxz
movsb
sub
push
push
mov
jno
mov
xor
push
int3
clc
loopne
scas
xchg
push
shll
dec
scas
add
mov
push
xor
int3
jae
arpl
loopne
addr16
fcmovne
adc
cltd
loope,pn
das
sbb
lahf
push
jbe
ja
idivb
inc
jns
mov
loop
lahf
push
out
add
aam
and
notl
mov
adc
push
ret
bound
fadds
aad
sbb
cli
bnd
negb
push
mov
lret
dec
cltd
into
stos
leave
xchg
mov
jge
icebp
add
loope
adc
scas
cmp
rcr
decl
mov
adc
adc
xor
adc
movsl
scas
fs
sub
pop
xchg
addl
xlat
shlb
rcrl
movsb
jle
jl
cmp
data16
aaa
pop
ljmp
in
dec
mov
sub
icebp
cmc
loope
adc
cs
aam
jg
out
cmpsb
push
push
adc
xchg
mov
cmp
and
popa
insb
push
and
jb
or
in
in
int
jnp
loop
test
jnp
inc
add
dec
xchg
sbb
es
lea
push
cmpsl
push
insl
in
xor
cltd
cmpsl
xor
outsl
cmp
xchg
loope
int3
mov
push
xor
ss
cltd
xchg
cmpsl
xchg
add
xchg
ret
js
insl
mov
mov
movsb
into
and
hlt
xor
cmpl
jo
das
push
inc
pop
je
ja
call
call
scas
xorl
es
div
les
fisubrl
xor
and
outsb
cmc
iret
cmp
ja
notb
in
aad
sbb
enter
push
cwtl
push
xchg
iret
jb
cmp
test
inc
xor
fsubl
pop
add
push
lock
xchg
outsb
daa
mov
mov
push
lret
cmc
pop
test
inc
out
sbb
jb
movb
aam
add
xchg
jmp
into
push
mov
arpl
mov
xchg
mov
sub
cmp
jo
push
pop
sti
pop
dec
call
movsl
dec
stos
icebp
sub
mov
movsb
adc
mov
fsubrl
pop
mov
cmpsb
dec
sarb
push
dec
mov
xlat
idivb
popa
jb
mov
pop
push
loope
mov
stos
mov
outsb
and
sbbb
fistps
loope
dec
in
cmpsb
adc
jo
outsl
insb
into
repz
lcall
mov
int
sbb
cld
out
adc
les
jbe
xor
mov
pop
rclb
leave
xor
rol
std
in
xor
jae
adc
pop
stc
mov
popf
les
movsb
add
aad
cmpsb
push
pop
lcall
xor
adc
fbstp
adc
jae
adc
fcom
pusha
jp
pop
shll
add
xor
loope
cmp
insl
int3
aas
xchg
inc
popa
in
jne
inc
xchg
stos
mov
dec
imul
pop
sub
in
mov
pusha
in
pushw
jg
int
pushf
mov
and
dec
mov
sub
pop
or
gs
sbb
cld
bound
jge
xchg
cwtl
mov
fcomp
pusha
jl
push
or
jne
cmp
sub
pop
jmp
les
mov
mov
cwtl
jno
mov
mov
andb
fsubl
xor
dec
sub
das
inc
ret
cmp
add
dec
mov
push
fdivrl
movsb
pop
jmp
mov
dec
jb
pushf
jnp
inc
pop
rolb
push
and
lcall
xor
jge
inc
mov
fwait
dec
mov
and
clc
pop
sarb
cmpsl
adc
nop
pusha
stos
jb
inc
dec
cmc
aam
push
lcall
push
pop
cmp
imul
mov
sub
imul
cmpsb
jp
int3
pop
inc
lea
pushf
jmp
fadd
into
mov
dec
inc
and
xor
and
jb
jp
fisubrs
pop
pop
mov
jge
mov
stos
or
test
dec
inc
pop
sahf
arpl
xor
mov
fs
mov
add
scas
jnp
fistps
xchg
js
fisubs
adc
xchg
push
sub
jbe
call
lcall
call
sbb
imul
fnstsw
lock
dec
aaa
lret
out
xchg
cltd
jnp
int3
add
xor
mov
lret
push
punpckhwd
inc
mov
inc
inc
pop
jae
jae
mov
test
dec
sub
mov
sbb
mov
mov
pop
pop
jae
lods
adc
js
xchg
inc
pop
lea
xchg
pop
subb
shll
pusha
cmp
mov
jnp
xchg
out
lret
mov
xchg
pop
add
data16
jg
push
mov
mov
bound
push
mov
fcmovnb
sbb
cs
stos
pushf
push
xor
das
lock
icebp
sub
mov
imul
mov
mov
xchg
and
sub
adc
ret
dec
outsb
or
enter
clc
xor
imul
sbb
mov
sub
vlddqu
pop
pop
aas
insb
mov
arpl
cmp
clc
loop
sahf
outsb
sub
ja
daa
es
sub
pop
xchg
and
push
or
push
nop
dec
out
clc
aam
lock
mov
jo
outsb
int
pop
lret
imul
pop
sbb
xchg
cmp
mov
adc
pop
sti
mov
pop
lahf
insb
ja
mov
mov
cmp
mov
sub
jae
fisubrl
movsl
pop
in
xor
in
push
add
imul
fldl
add
inc
mov
pushf
xchg
jbe
dec
xor
in
sbb
loop
and
inc
test
je
mov
push
loope
lods
pop
dec
dec
stos
add
push
jb
call
lea
testl
in
pop
and
iret
fneni(8087
xchg
cmpsl
nop
fldcw
fsubl
mov
ja
data16
pop
out
leave
inc
fdivrs
push
mov
jae
inc
push
inc
dec
pusha
imul
xchg
xor
sbb
mov
aas
imul
jne
push
fwait
in
sbb
push
loop
mov
pop
xlat
orb
jl
push
mov
enter
add
cld
test
xor
jecxz
xor
add
push
xchg
push
aam
xchg
insb
jno
das
dec
in
add
inc
mov
test
in
iret
xchg
mov
sbb
dec
fcmovbe
in
aam
adc
xor
mov
scas
and
push
xor
out
or
pusha
and
popa
inc
enter
cmp
data16
fcoms
xchg
inc
fcompl
dec
jnp
addr16
mov
clc
mov
jp
sbb
add
sub
mov
mov
sbb
mov
dec
mov
stos
enter
jae
sub
outsb
ss
adc
lret
dec
push
mov
push
add
icebp
jne
enter
incb
fistl
bound
jno
insb
mov
pop
sbb
xor
jb
imul
jo
inc
fcoml
mov
ss
pop
mov
xor
jne
imul
fsubrl
repnz
dec
divl
cmpsb
jnp
sbb
ss
stc
push
rcr
pop
roll
or
xchg
push
insb
cmpsl
in
into
mov
xor
inc
lea
shrb
add
adc
fcmove
les
sub
mov
insb
ret
pushl
fcompl
mul
dec
test
sbb
out
inc
imul
cld
out
mov
test
sub
adc
adc
decb
xchg
adc
int
popa
bound
cmp
dec
es
adc
adc
mov
mov
pop
insb
repnz
or
sbb
push
mov
stc
mov
sub
aas
cmp
cmp
push
xchg
fidivs
jge
out
inc
lock
cmpsb
adc
out
mov
xchg
push
cmpsb
mov
enter
cmp
sub
in
mov
into
dec
mov
je
into
push
jno
jo
sbb
cs
into
add
inc
mov
jb
dec
jl
call
mov
or
iret
cli
iret
pop
popf
imul
les
stos
jbe
pop
xor
pop
push
sub
xchg
and
fs
cmp
cmpsl
adc
outsl
cs
mov
out
mov
test
lahf
xor
push
sahf
ret
jl
push
sub
nop
sarb
xor
imul
out
cmpsl
jne
add
aas
push
dec
sub
pop
pop
push
les
sbb
lret
jle
loope
inc
insb
inc
insb
mov
mov
scas
sub
test
xlat
push
movsl
sub
stc
push
arpl
in
cmp
pop
outsb
mov
ds
xchg
pop
in
and
clc
xor
cltd
mov
xchg
popa
mov
jne
out
repz
fsubrs
test
popa
fstpt
iret
sarb
push
xchg
movsb
push
dec
xor
gs
and
ja
mov
cmp
xor
xlat
gs
jmp
nop
inc
cli
dec
mov
sbb
mov
sbb
ret
cmp
int
das
icebp
sbb
mov
clc
cmpsl
mov
inc
xor
pop
das
ss
bound
fstpt
gs
in
arpl
insb
sbb
movb
repnz
pushl
fcoml
xor
push
pop
sbb
sti
cwtl
mov
sbb
mov
stos
es
xchg
sub
pop
int
xchg
push
inc
inc
jg
inc
jns
mov
xor
inc
ds
lods
mov
int3
push
fnstcw
and
sub
enter
shrb
pusha
lods
js
cltd
pop
lea
stc
outsl
xchg
xor
mov
lahf
dec
fwait
pop
aad
outsb
or
jae
dec
or
jb
adc
test
loop
cmp
pop
bound
xchg
or
or
pushf
mov
pop
cmpsl
outsl
ljmp
fstpt
lcall
pop
inc
out
pop
xlat
into
stc
shrl
sbb
and
jmp
ret
sub
das
out
scas
pop
enter
dec
add
mov
and
cld
sbb
jb
xor
and
call
inc
cmp
mov
aam
mov
icebp
addr16
fidivrl
fwait
mov
popf
dec
imul
shll
aam
jnp
xor
pop
test
xlat
jae
iret
sub
pop
dec
data16
lahf
add
out
inc
repz
push
xor
mov
test
ret
loope
xchg
fists
loop
or
out
mov
adc
jle
jnp
jne
lods
xchg
sbb
in
addr16
mov
jne
xchg
test
push
out
jg
inc
mov
sub
divb
cmp
push
pop
jmp
out
je
sub
cmpsb
std
pusha
inc
adc
sbb
jne
scas
popa
sbb
roll
lods
lods
jo
adc
or
xchg
test
mov
dec
jg
jbe
cmc
xchg
jnp
arpl
jbe
imul
cmpsl
xchg
shrl
inc
and
pop
push
mov
xchg
mov
pop
pop
cld
int3
jle
pop
int3
out
pop
mov
cmpsb
sub
inc
icebp
adc
dec
xor
xor
xor
jae
push
xchg
fadds
je
fbstp
iret
int3
loopne
ret
inc
repz
mov
xor
out
mov
pop
pop
std
jecxz
xor
scas
cli
jbe
dec
push
pop
int3
sbb
mov
or
or
sbbb
jle
pop
mov
leave
stos
pop
sbb
out
adc
nop
mov
out
test
es
and
out
or
push
pop
jne
dec
cmc
in
test
icebp
mov
mov
pop
dec
in
out
jnp
rcl
faddp
inc
push
or
inc
add
jo
in
aaa
cmp
cmp
xchg
jo
ja
rol
or
jp
repz
jno
cmpsb
out
dec
push
std
xor
sub
loopne
xor
fwait
mov
and
aad
push
push
movsl
in
sub
pop
push
adc
test
addr16
out
or
cltd
stc
pop
sbb
ret
pop
and
fisubrs
mov
sbb
sub
stos
xor
int3
cli
dec
dec
sub
psllq
lock
sub
mov
call
std
adc
filds
dec
push
xchg
adc
fs
jae
push
shrl
outsl
stos
xchg
mov
xchg
mov
dec
mov
mov
sti
movsl
adc
push
pop
fiadds
mov
lret
and
xchg
jmp
fdivs
sarl
lcall
lcall
pop
mov
decl
fs
adc
imul
mov
cmp
ret
lret
outsb
jns
mov
inc
and
sbb
dec
fcompl
pop
call
mov
sbb
cmp
insl
dec
xor
leave
adc
xlat
jp
mov
sbb
inc
push
lods
ret
hlt
es
popa
in
xor
into
push
loop
mov
call
pop
mov
jecxz
rcl
push
add
das
nop
mov
cli
nop
mov
or
dec
in
cli
inc
push
mov
or
popf
pop
adc
or
into
icebp
repnz
clc
push
rorb
mov
or
jne
adc
in
fistpll
addr16
cwtl
adc
mov
sbb
pop
hlt
push
push
xor
and
in
jbe
mulb
inc
inc
mov
shl
repz
cmpsb
mov
shll
into
popa
mov
clc
and
inc
je
cltd
cmp
shrb
mov
add
sbb
fwait
pop
in
test
mov
push
cmp
fmuls
sbb
and
add
loop
ds
popl
bound
adc
and
push
xchg
in
lret
mov
decl
sbb
sti
jle
outsb
adc
adc
loope
ds
cmpsb
adc
jge
cmp
outsb
or
sub
icebp
int3
rclb
pop
mov
add
jge
imul
rcl
push
insb
mov
dec
fcom
xor
iret
mov
leave
call
xorb
subl
xchg
push
int
mov
dec
int3
lea
dec
dec
jg
xchg
in
xchg
out
jbe
bound
icebp
dec
lds
adc
xchg
xor
push
nop
dec
into
ja
cmp
insl
loopne
loopne
mov
aas
push
and
fucomip
stos
push
fidivrl
sub
adc
insl
insb
stc
push
out
xchg
push
ret
mov
mov
push
dec
js
xchg
mov
fisttpl
inc
dec
andl
push
in
mov
or
mov
sbb
loopne
adc
xchg
addr16
aam
pop
pop
insb
xor
jne
adc
jbe
test
adc
add
imul
je
rcr
cmp
sub
xor
or
jae
nop
add
dec
and
dec
cmpsb
pop
pop
lods
movsl
cmp
push
xchg
sbb
or
in
roll
sbbl
mov
pop
cmc
adc
roll
aas
sahf
loopne
dec
imul
adc
addr16
mov
loope
popf
mov
mov
xchg
inc
les
push
out
push
adc
mov
cmp
xor
adc
mov
nop
add
rorb
mov
icebp
movsl
lahf
fdiv
lds
popf
nop
jecxz
sbb
ss
pushl
sbb
pop
enter
rol
xor
sub
jae
or
add
add
sub
mov
lods
adc
orb
iret
fcmovnb
iret
cmc
push
mov
cmp
fs
imul
insb
pop
dec
and
jecxz
adc
xor
xor
xchg
div
sbb
mov
mov
or
repnz
fs
inc
imul
ss
jae
clc
adcl
loope
push
cmpl
stos
sbb
cld
dec
int
pop
hlt
es
mov
push
inc
mov
std
lret
jge
test
push
or
scas
out
cmp
mov
jnp
shrl
outsl
push
test
mov
lret
cwtl
push
out
jns
push
ja
mov
cmc
leave
outsb
dec
mov
or
or
dec
mov
dec
and
mov
mov
fidivrl
xor
sbb
push
pushf
pop
popa
repz
int
stc
aam
and
pop
adc
inc
sti
stos
dec
pop
add
lods
jmp
and
jns
or
and
xchg
in
mov
mov
bound
cmp
fstl
div
sbb
adc
pop
fnclex
loopne
sub
in
jbe
or
sub
add
sbbb
js
mov
push
or
dec
mov
cmp
pop
rol
push
fs
popf
js
sahf
mov
mull
js
xor
out
push
test
xor
dec
shlb
idiv
inc
outsb
cmp
das
jecxz
lock
movsl
jle
and
lahf
in
xlat
jae
dec
pop
inc
cli
pop
push
add
mov
les
lcall
adc
cld
aad
push
add
rolb
push
imul
cmp
xor
test
xor
and
lds
sbb
sub
mov
mov
sub
ds
cmp
jg
pop
inc
pop
in
bound
out
dec
dec
mov
mov
gs
xchg
lock
clc
push
cmpsl
scas
lock
add
sub
cmp
push
jo
inc
lea
add
mov
push
jmp
inc
or
inc
arpl
or
testl
or
sub
jns
inc
mov
fucom
push
push
jns
aad
xor
dec
push
add
push
xlat
push
inc
mov
jb
cwtl
dec
jg
mov
or
rcll
mov
cmp
je
xchg
xor
add
cmp
in
pop
push
or
sub
mov
push
repz
out
loopne
lods
lret
push
xor
lods
js
sbb
jp
fisttpl
int
sbb
cmp
outsb
mov
inc
fimuls
xchg
jae
and
push
fwait
stc
add
add
out
outsb
adc
mov
imul
es
lahf
xor
sub
jp
mov
xchg
xorb
call
xchg
hlt
mov
jb
xchg
mov
cli
adc
pop
xchg
or
mov
sub
or
call
shrb
clc
pop
movsb
inc
roll
mov
push
or
sbb
les
jb
mov
stos
and
or
mov
mov
xor
or
sub
mov
xchg
cmp
lret
cmc
adc
das
mov
mov
insb
jb
adc
lret
pusha
cmovbe
xor
or
jb
or
push
or
out
sbb
cmc
addr16
jns
out
shll
inc
jo
add
dec
ljmp
mov
jne
arpl
sub
loop
pusha
mov
gs
leave
fidivs
mov
movsl
out
pop
jge
sub
lock
mov
loope
jno
mov
mov
mov
mov
insl
nop
pop
cld
xor
movsl
sbb
and
gs
insl
adc
rcr
mov
xchg
shrb
xor
xchg
sub
cmpsl
push
cmp
andb
insb
push
call
adc
add
je
cmc
xor
sti
arpl
inc
push
cld
int
ret
in
out
lods
inc
daa
stos
jp
xor
call
jae
out
test
xchg
call
aam
gs
subl
pop
xor
jb
xchg
or
lds
rcrb
lds
push
pop
jl
push
mov
imul
cmp
arpl
bound
mov
inc
shlb
jp
mov
int
cmpsb
insb
cli
fstpl
push
mov
sbb
push
jg
mov
jae
xchg
jmp
hlt
jae
cli
add
mov
pop
sub
or
mov
adc
adc
jle
cmp
and
aaa
fsubs
jecxz
ds
mov
lods
cmp
push
add
xchg
dec
repnz
inc
cmp
xchg
ljmp
adc
mov
das
mov
mov
pop
adc
xchg
mov
jmp
push
push
std
fs
pop
sahf
pop
sbb
hlt
std
sbb
jl
sbb
outsb
mov
sub
scas
mov
cmc
pop
in
ss
adc
xor
adc
jle
sbb
jle
imul
les
sahf
pop
add
loop
mov
test
mov
jns
int3
push
mov
mov
aaa
ficomps
inc
inc
lcall
mov
mov
jb
xor
stc
mov
sbb
dec
ret
aaa
adc
cmp
jmp
xchg
sbb
inc
xchg
push
hlt
ret
stos
mov
add
inc
mov
mov
je
adc
sbb
sub
scas
pusha
sbb
ss
add
fdivs
or
aam
pop
lods
dec
jecxz
pop
push
jb
cs
stc
dec
and
loope
jnp
push
inc
lds
pop
sub
and
jnp
lea
mov
pop
test
pop
mov
pop
daa
scas
pop
lds
adc
xchg
xlat
ljmp
xchg
stos
xchg
inc
or
and
aam
dec
adc
outsb
adc
daa
inc
fldenv
into
gs
dec
jmp
mov
inc
scas
xorb
add
scas
inc
mov
jo
cli
sahf
frstor
data16
lods
xorb
ljmp
pop
cmc
in
inc
adc
mov
push
pop
mov
and
hlt
or
popa
test
mov
sbb
cmp
les
push
test
push
push
subl
cwtl
clc
xor
outsb
xchg
mov
cmc
xor
sbbl
mov
jnp
pushf
scas
inc
test
hlt
lcall
stc
fidivrl
xor
inc
insb
fnstenv
iret
xchg
pop
lahf
push
jae
mov
push
sub
push
and
cs
and
push
mov
scas
test
cltd
imul
lods
je
in
sarl
and
pop
jp
cmp
mov
dec
jb
shlb
fsts
mov
pop
mov
adc
lds
loopne
sbb
xchg
xor
in
or
mov
or
adc
imul
and
inc
imul
dec
into
rcrl
fst
std
inc
sbb
add
mov
lea
cli
sub
xor
and
jg
jecxz
test
in
jae,pn
push
cmp
cwtl
xchg
mov
cmp
rorl
mov
nop
jge
outsl
dec
lahf
in
xor
or
cld
and
loop
cmp
dec
cltd
negb
mov
push
shl
test
lcall
cmp
clc
and
scas
mov
push
sub
sbb
call
dec
inc
aas
xchg
je
mov
mov
sub
push
call
ja
jno
repnz
cltd
xor
dec
push
xchg
xor
or
add
pop
or
or
popl
mulb
and
frstor
popf
mov
mov
or
fcmovbe
xchg
adc
imul
neg
ss
mov
es
stos
xor
out
push
sbb
outsb
arpl
dec
xor
add
or
or
cli
mov
fsub
cmp
cmpsl
add
rorb
pop
cmpsb
fdivl
gs
sub
pop
cmp
jno
repz
arpl
aas
cltd
ret
lret
scas
mov
mov
mov
imul
testb
xor
inc
cld
ffreep
lds
scas
rorl
jmp
mov
insb
dec
loope
mov
lock
clc
mov
imul
pop
lahf
mov
xor
aad
or
inc
call
ficomps
cmpsl
ficoml
and
cmp
loopne
jnp
lcall
popf
movsl
stos
pop
lahf
cmp
push
and
mov
scas
xchg
xchg
xchg
imul
leave
in
jp
in
dec
ja
push
ja
pop
push
add
popf
lret
cmp
arpl
pop
and
ret
sub
cs
lret
stos
mov
cmp
mov
sub
mov
inc
pop
inc
nop
lods
das
pusha
iret
faddp
xor
test
inc
std
inc
add
scas
jg
lds
and
xor
daa
push
xchg
push
popa
dec
adc
fidivl
mov
add
add
add
scas
ja
mov
out
out
xchg
out
mov
jecxz
mov
xchg
fdivrs
add
mov
mov
sub
shrl
push
or
sbb
icebp
shll
and
cs
push
popf
xchg
mov
xlat
enter
stc
xchg
adc
insb
adc
cmpsb
mov
dec
inc
adc
cli
sbb
test
add
push
cmpsb
pop
sbb
xchg
xchg
inc
jbe
jb
sub
jbe
repnz
pop
xchg
fs
in
mov
jmp
mov
cmp
or
xor
mov
cmpsl
jbe
mov
lahf
sti
cmc
mov
data16
jmp
inc
mov
rorb
in
dec
andl
popf
adc
js
mov
dec
cli
adc
out
leave
push
add
xchg
test
fdivrp
call
jecxz
ss
mov
insl
push
sub
xchg
int3
outsl
ja
mov
pop
movntq
movsb
lea
mov
cs
out
lods
into
or
imul
pusha
xchg
sbb
jns
inc
out
jmp
in
push
mov
roll
mov
xchg
inc
test
push
xor
mov
pusha
jge
scas
xchg
ja
push
iret
sti
or
dec
mov
push
mov
cli
jno
scas
xor
push
sbb
in
mov
mov
mov
mov
bound
fldenv
insb
outsl
sarb
loopne
pop
loopne
push
popf
fidivs
arpl
imul
sti
adc
mov
cmpsl
pop
mov
mov
add
or
clc
xor
mov
inc
aas
push
xchg
popf
push
sahf
cmpb
mov
cltd
add
fdivrl
je
dec
pop
mov
mov
sub
test
mov
push
dec
call
cmp
aaa
mov
std
pop
pop
push
cli
paddusw
fcompl
jns
jb
inc
mov
xchg
sub
mov
jg
and
sarl
loope
jns
ja
xchg
outsl
xchg
and
lods
aam
fs
fnstenv
xchg
fwait
shl
mov
mov
jmp
xchg
jge
adc
and
push
out
and
data16
push
fwait
or
es
mov
xchg
call
adc
push
sub
fidivl
stos
lods
jns
xor
ss
mov
cmpsb
sub
jl
pop
mov
sbb
xor
inc
imul
test
ds
outsb
adc
incb
pop
pop
ret
and
in
jecxz
dec
sub
inc
cmp
mov
stc
add
and
repnz
sub
pop
and
pop
pop
pop
mov
inc
js
addb
adc
sub
repnz
in
xor
imul
push
gs
jle
add
lcall
int3
and
das
ret
jnp
ljmp
clc
jl
int3
bound
shrb
cmp
int3
cmp
pushf
sbb
push
inc
inc
gs
inc
jmp
sbb
cmp
pop
mov
jno
rcrb
xor
cmp
js
mov
mov
push
imul
data16
mov
ffreep
lcall
push
mov
mov
pop
in
pop
test
cmp
adc
adc
add
jl
xchg
pop
clc
out
fldcw
in
mov
mov
std
sub
sub
xor
rolb
std
or
sbb
addr16
add
fwait
xchg
sbb
mov
scas
jg
push
jo
aas
and
or
adc
decl
jp
jae
pushf
or
loope
or
cmp
decl
addr16
push
out
pop
mov
jle
call
pop
insl
cmp
sbb
pop
shll
inc
test
fmull
xor
push
xchg
pop
xchg
push
jp
xchg
aaa
lret
mov
and
int
and
jne
das
fisttpll
fxch
das
jmp
ret
pop
pop
mov
lods
xchg
decb
outsl
dec
out
leave
sbb
cmp
xchg
test
sub
icebp
or
mov
sbbl
pop
cmp
fcmove
dec
jns
push
outsl
in
stos
cmp
pop
mov
jle
sbb
push
ret
mov
pop
pop
es
push
arpl
imul
lret
push
push
and
dec
or
add
fcmovu
into
adc
testl
testl
or
into
shl
xor
adc
xlat
mov
pushf
or
mov
and
sbb
pop
ss
rcl
in
into
sbb
jp
pusha
or
mov
loope
jno
movsl
xchg
pop
xchg
inc
push
mov
pop
xchg
test
jne
and
add
ja
ja
add
nop
cmp
aas
outsb
dec
cmp
jno
mov
mull
movb
dec
push
out
cmpsb
push
fsubr
testb
shll
and
int3
movsl
xor
mov
pop
imul
not
pushf
test
shll
or
lods
or
fildl
testl
cmp
jnp
add
jmp
mov
pop
int3
dec
xchg
loope
ljmp
mov
in
shlb
ret
fs
enter
rcll
add
and
add
es
xlat
xor
sub
and
mov
repnz
xchg
xor
pop
lret
xor
js
pop
sarl
sub
xchg
out
cli
dec
sub
outsb
cmp
push
insb
popa
sub
mov
js
orb
push
repz
popf
xor
stos
cmp
mov
daa
icebp
mov
pusha
cmpsl
addr16
insl
xchg
inc
sub
aaa
xchg
cmpsl
push
pusha
mov
jb
xor
popa
mov
cmp
xchg
and
enter
push
add
cmp
jnp
lcall
jbe
stos
jge,pt
subl
je
cmp
xchg
add
shll
push
mov
xchg
or
xchg
insb
dec
lods
cmp
outsb
inc
outsb
and
xor
inc
jnp
cltd
xchg
into
cli
cmp
sub
in
ficomps
mov
and
mov
xchg
es
mov
out
icebp
scas
sub
iret
or
pop
adc
ja
test
mov
insl
in
js
inc
dec
outsl
add
mov
add
sbb
mov
pop
shrl
sub
cli
pop
push
shll
jl
xchg
lret
push
lds
inc
test
outsb
and
xchg
xor
fidivrl
add
lods
sbb
push
push
inc
mov
outsl
and
xor
addl
push
jne
pusha
add
into
sub
idivb
mov
lods
les
ficoms
imul
pop
adc
jb
movsl
add
pop
sbb
insb
add
divb
es
ret
mov
lods
xchg
mov
js
sbb
sbb
jg
xchg
jns
in
fnstenv
pop
sarl
adc
into
mov
xor
test
stos
push
popf
cltd
jo
imul
inc
movsl
jecxz
out
popa
out
cld
mov
xor
and
push
jp
cmp
frstor
cmpsl
xchg
dec
push
iret
sbb
call
mov
adc
pop
mov
mov
mov
mov
fdivl
inc
in
lea
inc
js
std
jb
mov
pop
test
cwtl
xorl
pop
nop
xlat
mov
test
dec
bound
popa
repz
xchg
push
lahf
adc
imul
es
ja
ljmp
push
add
mov
add
xor
cmp
or
out
btr
ds
push
popf
adcl
lea
lcall
cld
xor
popa
aad
push
cmp
imul
sub
mov
test
jmp
sahf
mov
ror
rclb
ror
mov
inc
aaa
inc
jb
lods
fisubrl
jo
dec
mov
icebp
das
cmp
dec
cld
movsb
gs
and
sahf
movsb
out
sbb
or
cwtl
and
test
mov
mov
mov
xlat
inc
cmpsl
mov
jge
mov
imul
shl
sbb
es
iret
les
add
dec
add
adc
mov
rolb
clc
or
pop
fld
mov
sub
pop
rcrl
adc
push
mov
jl
push
sub
cmp
jae
dec
aad
and
in
jp
sub
pop
mov
cmp
popa
adcb
out
fldl2t
je
rcrl
insl
jne
mov
pop
stos
rclb
xor
cmp
adc
sbb
jl
loop
shrl
pop
sbb
sub
das
fsubs
adc
adc
lods
ret
pop
adc
push
mov
les
popfw
or
cltd
ret
test
inc
inc
test
scas
lahf
cmpsb
in
stos
jl
jbe
adc
popf
dec
call
and
jecxz
insb
sarl
cmp
mov
xchg
and
in
xor
bound
push
xor
call
xor
add
cs
add
rorb
adc
sbb
mov
mov
or
mov
or
xor
in
pop
hlt
rcrl
push
sub
jp
mov
movsb
pop
mov
movsb
mov
pop
shll
lods
scas
adc
fimull
and
leave
adc
push
in
or
or
clc
mov
cmp
cmp
jo
and
and
loope
jae
add
and
cwtl
inc
out
add
js
in
sub
adc
test
ja
cmc
andb
mov
shll
lcall
jp
inc
test
sbb
dec
mov
jl
mov
or
fisttps
cmp
ljmp
mov
xor
hlt
mov
fisttpl
and
lcall
addr16
out
sbb
cmpsb
aad
pushf
nop
leave
lahf
mov
fldt
jmp
xchg
or
or
and
loop
cli
inc
cwtl
out
xor
adc
and
sbb
push
dec
fstpt
sbb
pop
dec
jle
dec
jg
xchg
cs
sbb
mov
imul
mov
movb
repz
sbb
clc
fs
jno
call
pop
or
jae
pop
arpl
and
movsl
or
push
es
or
cltd
test
enter
dec
ficomps
dec
data16
rcrl
ja
xorb
add
jb
mov
sahf
sub
add
out
mov
out
jb
inc
pushf
cmpb
mov
filds
pop
xchg
mov
imul
jg
subb
das
lods
rorb
mov
out
pop
add
repnz
testl
adc
lret
movsl
adc
out
sarb
mov
call
push
mov
clc
int3
rcll
mov
add
cmp
out
cltd
mov
fisubs
cwtl
dec
xchg
xchg
addr16
sahf
daa
dec
popf
cltd
out
mov
fdiv
push
in
push
shrl
mov
andl
fwait
sub
shlb
mov
fiaddl
mov
adc
xchg
in
dec
mov
repnz
dec
jl
mov
test
cmpsb
dec
mov
push
shrb
in
imul
sbb
hlt
rcl
fmull
les
scas
addr16
in
ret
dec
xchg
inc
loop
cmp
adcl
cmp
nop
iret
pop
push
cwtl
xlat
iret
adc
loope
test
fimuls
add
mov
icebp
cmp
loope
lock
jl
ret
push
insb
scas
in
movsb
in
lock
xchg
jno
lahf
fwait
stc
das
test
mov
mov
data16
mov
dec
fldenv
jge
sar
out
push
iret
bnd
jge
ucomiss
ds
dec
and
push
pop
arpl
adc
dec
gs
xor
mov
mov
loop
aas
xchg
dec
sbb
push
or
adc
mov
mov
int
mov
mov
sub
push
test
mov
bound
xlat
pop
dec
loop
pop
scas
add
jp
sbb
xor
push
push
out
std
pop
popf
stos
pop
out
fwait
aam
jo
adc
inc
bnd
xchg
mov
lcall
cwtl
aas
mov
pop
movsl
ret
fsubl
xchg
sbb
mov
push
push
mov
push
in
mov
sti
in
lods
xor
es
jbe
fiaddl
xor
or
daa
cwtl
jmp
jo
xor
scas
pop
ficoml
push
call
cmp
mov
out
fstpt
push
mov
in
sub
fs
xchg
cmpsl
or
sbbb
shrl
or
mov
cmp
or
xchg
xlat
xor
pop
inc
jne
out
lds
fistpl
ljmp
lcall
aam
imul
mov
inc
xchg
adc
cmp
mov
sub
jg
out
ja
insl
jns
pusha
add
adc
icebp
mov
ja
mov
stos
xchg
imul
sub
lock
imul
cmp
repz
int3
mov
mov
movsl
jmp
inc
insw
scas
mov
inc
pop
dec
mov
sahf
push
test
cmpsb
imul
mull
pop
jbe
cwtl
in
loopne
jmp
mov
mov
push
sti
push
call
stos
dec
mov
or
mov
mov
jbe
out
jecxz
aas
mov
mov
cld
ficompl
jecxz
mov
andl
ret
nop
pop
into
fcmovnu
aad
imul
and
cmp
pop
add
aam
ds
lea
push
mov
aad
dec
sbb
xor
push
ss
lods
stos
cmpsl
div
mov
into
xorb
mov
outsl
test
scas
or
push
into
out
and
std
insb
ds
pop
adc
scas
jp
pop
es
push
inc
jmp
xchg
les
inc
popa
mull
imulb
incb
adc
loopne
repz
or
incl
icebp
cld
inc
call
clc
aas
adc
xchg
jge
movsb
dec
xchg
rcll
mov
add
adc
jnp
out
or
mov
mov
out
mov
add
nop
adc
add
cwtl
mov
pusha
push
shrb
pop
ss
or
out
imul
cmp
ret
push
lcall
icebp
adc
pop
xor
shrb
jmp
movsb
cld
fnstsw
xor
xchg
mov
xor
daa
popa
pusha
push
and
push
push
or
adc
scas
loopne
adcb
adc
movsl
nop
and
adc
dec
dec
cld
lods
clc
mov
popa
mov
mov
xor
cmp
pop
push
inc
mov
and
test
sub
jmp
adc
mov
or
fucomp
pop
jne
test
sub
insb
mov
enter
je
cwtl
mov
jae
and
xchg
call
dec
push
adc
xchg
jmp
leave
loope
push
in
mov
mov
and
xor
call
bnd
out
xor
scas
mov
mov
out
inc
js
enter
aam
subl
mov
push
js
cmc
daa
mov
lea
std
mov
jecxz
xchg
bound
leave
xchg
jnp
sbb
popa
mov
xchg
add
bound
loopne
cmp
xor
jmp
sbb
movsl
and
dec
pushf
cwtl
add
je
or
fldl
pop
mov
pop
lods
jmp
ja
mov
mov
negb
mov
in
mov
inc
dec
repnz
push
or
icebp
inc
jg
mov
aad
gs
bound
repz
and
int
push
xor
pusha
flds
lret
les
pop
mov
in
mov
ret
mov
sub
dec
loop
push
dec
jb
das
sahf
out
cmp
in
incb
nop
push
pop
inc
mov
cmc
enter
xchg
insb
out
push
shlb
rcr
and
daa
cmp
pop
mov
stos
es
sbb
aad
mov
call
jae
xchg
lahf
push
ficoml
stos
pop
push
arpl
scas
pop
xor
pop
subb
ja
aad
adc
xor
adc
inc
and
lret
xor
lret
mov
jg
in
sub
lock
jmp
xchg
dec
bound
dec
fnstcw
xor
push
mov
fs
jno
and
jle
mov
lahf
movsb
enter
shl
mov
sbb
and
add
inc
das
int
test
rcrl
loope
mov
mov
cltd
mov
jne
and
loopne
daa
and
test
mov
gs
aad
push
inc
mov
ret
pop
sbb
aam
int3
imul
loopne
push
test
lods
push
cmp
dec
lds
fiadds
dec
and
xchg
adc
push
bound
arpl
sub
and
cmpsl
in
mov
xor
or
sbb
gs
imul
aad
movsb
sub
pop
mov
imul
scas
adc
out
cmp
insl
pop
sarb
adc
mov
dec
inc
mov
pop
sarb
outsl
aas
pushf
sbb
lret
sti
lcall
in
dec
aad
push
ret
lahf
loope
scas
aad
inc
lahf
adc
sub
xchg
pop
leave
pop
addb
mov
pop
aas
imul
inc
jl
mov
lods
xor
jns
stos
fsubrp
adc
mov
jae
mov
test
push
dec
rclb
into
jecxz
xchg
rorl
scas
xor
mov
adc
imul
or
pop
and
ffreep
fwait
inc
sub
and
adc
lods
shll
jecxz
cld
das
or
add
add
je
adc
loop
pop
mov
icebp
addb
das
lret
inc
aam
push
inc
icebp
mov
pop
jmp
or
push
mov
mov
int3
xchg
xchg
dec
and
or
dec
notl
out
test
add
lret
fldenv
lods
insl
cmp
imul
jnp
rcrl
out
rolb
adc
mov
jmp
inc
aas
stos
cmc
add
mul
lds
lret
adc
pop
imul
dec
into
mov
test
lock
test
mov
ret
shrl
xchg
mov
mov
leave
xchg
or
adc
xor
sbb
movsl
mov
push
outsb
popf
pop
add
repz
inc
and
aas
adc
pop
jnp
pop
fldt
add
adcl
dec
push
or
repnz
pop
popf
enter
pushf
sbb
cld
insb
or
nop
pop
iret
or
movsl
mov
push
cmpsb
fwait
mov
mov
inc
sbb
lods
rcll
les
adc
movsl
and
fbstp
test
arpl
and
jp
mov
sub
xor
int
inc
xchg
and
inc
outsb
mov
out
add
push
call
xchg
repz
mov
add
mov
push
mov
push
in
xorb
insb
jno
fadd
cmpsb
scas
enter
pop
dec
inc
or
sbbb
add
cld
add
jle
sbb
aad
stos
arpl
je
mov
jle
cmp
mov
stos
mov
mov
negl
iret
mov
clc
adc
push
push
data16
shrb
stos
aas
mov
push
data16
popa
xor
mov
rcll
and
sbb
mov
movsb
dec
vpackuswb
sub
into
mov
js
jp
movsb
pop
add
adc
lea
arpl
pushf
dec
jmp
sub
int3
adc
je
in
jle
scas
daa
sub
sub
ret
sbb
lret
mov
dec
and
xchg
lods
movsb
xor
cld
xchg
mov
sbb
aam
movl
in
out
js
testl
into
das
xchg
int3
jmp
das
inc
xor
out
aas
cs
mov
dec
aad
fdivr
rcrb
jno
push
adc
popf
das
jnp
xor
pop
pusha
cs
mov
cmc
lods
pushf
test
jae
and
ds
pop
mov
mov
cs
in
sub
xchg
jns
jnp,pn
stos
add
cs
clc
cmp
jmp
cmpsl
std
nop
sub
mov
in
sub
xor
mov
fsts
xchg
rcrb
sub
shlb
iret
mov
mov
jae
cld
les
outsb
out
mov
cmp
mov
pusha
ficoml
mov
cmpsb
jg
incb
mov
imul
test
and
pushf
or
or
cmp
xchg
cmpsl
cmp
imul
repz
pop
mov
and
inc
hlt
ret
xchg
in
lcall
pop
ret
adcl
mov
cmp
or
les
out
push
frstor
push
or
mov
push
nop
xchg
imul
icebp
lods
jne
xlat
leave
jmp
outsb
cltd
xchg
dec
mov
mov
jb
push
dec
add
cli
cmp
cmp
mov
mov
out
insb
lods
cltd
and
mov
sub
jae
or
inc
in
mov
push
pop
dec
nop
out
addl
nop
jge
mov
and
movsl
dec
dec
jl
sbb
inc
cmp
and
push
mov
adc
sbb
mov
pop
nop
fcoms
mov
push
inc
popa
pusha
jns
ret
lret
adc
ss
nopl
test
aaa
lcall
xor
ja
out
movsl
mov
in
or
ss
add
lods
repz
mov
iret
mov
mov
push
testl
push
sub
and
or
sti
movsb
ret
aaa
aas
repnz
push
xor
jl
repz
iret
push
dec
mov
in
cmp
int3
or
xlat
fcom
cmc
or
lock
lock
repnz
lds
jp
clc
leave
push
imul
xchg
icebp
std
pushf
outsl
jmp
stos
outsb
inc
and
out
push
mov
mulb
rcrb
dec
sub
pop
cld
jecxz,pt
dec
leave
xlat
sbb
push
es
inc
mov
test
stos
inc
mov
jae
leave
cmp
or
scas
mov
sbb
fistpl
inc
mov
xchg
lahf
lea
ds
jns
inc
jge
push
xlat
stos
mov
loopne
and
mov
loop
sub
fstpl
pop
mov
xchg
repz
aaa
xchg
inc
mov
inc
rorl
xchg
cmp
sub
push
iret
mov
addr16
stos
sub
ds
dec
sbb
and
mov
lods
mov
add
jae
push
mov
lahf
and
stc
push
fs
ror
ffree
push
inc
xchg
cmp
xor
gs
mov
repz
push
cmp
xor
push
dec
sub
loope
xchg
and
jmp
inc
imul
cmc
and
pop
shlb
xor
sbb
lret
xchg
leave
or
nop
push
mov
dec
adc
mov
mov
push
pop
or
int
mov
pop
jbe
sbb
cmp
dec
dec
sbb
aad
int3
arpl
cwtl
mov
rorl
loopne
add
jne
and
mov
int
test
addb
jno
aam
xlat
jl
inc
push
int
insl
and
or
add
enter
and
xor
outsb
cmp
or
sar
xchg
xor
xchg
data16
rcll
mov
jne
xchg
jb
test
outsl
inc
test
cli
jl
je
sbb
test
icebp
or
out
sub
xor
out
push
xor
cwtl
je
and
out
ret
adc
mov
cmpsl
fildl
inc
sub
xchg
test
ljmp
xor
and
sub
mov
pusha
push
mov
jg
sub
stos
movsb
out
lods
mov
movsl
jmp
inc
add
and
lods
mov
insb
pop
mov
mov
aad
flds
hlt
mov
cmp
xor
sti
adc
icebp
cmpsl
mov
lods
mov
in
or
xor
adc
cmpsl
fisttpl
movsb
into
das
adc
xor
or
les
adc
mov
add
out
jnp
cmp
mov
push
adc
pop
fnstenv
add
fwait
in
pop
sbb
inc
sub
jmp
xor
sub
mov
cmp
or
divb
sbb
in
mov
xorb
adcb
xor
orb
es
mov
insb
sbb
push
and
pop
adcb
push
dec
popf
test
into
ljmp
sbb
dec
pushf
dec
cmp
test
out
ss
test
adc
and
push
pop
xchg
sahf
insl
rcll
insl
jge
imul
push
pop
xchg
push
or
lods
mov
mov
or
dec
or
push
fcoms
mov
scas
cmp
lock
inc
ja
mov
push
cltd
sahf
add
mov
sub
inc
push
enter
push
fistpl
xorl
test
lods
scas
mov
mov
je
popf
cmp
stc
adc
mov
int
hlt
dec
xchg
mov
sub
shl
add
mov
in
clc
subl
ret
sbb
pop
inc
repz
or
out
and
xlat
pop
jge
jg
lea
ds
fwait
jns
sbb
cmp
add
pop
scas
pop
dec
mov
int
nop
fidivl
stc
addr16
push
jae
or
sub
add
cmp
jmp
sub
ss
fsts
push
pop
adc
cmp
pop
xchg
andl
xor
movsb
arpl
pop
adc
popf
jmp
cld
std
dec
insb
jno
jnp
adc
pop
repnz
jmp
ds
pushf
mov
jle
mov
adc
inc
rolb
mov
jne
add
mov
xchg
xor
loope
sbb
fs
out
popf
inc
andl
and
nop
adc
cmc
mov
lcall
push
out
popa
testb
aam
or
inc
mov
mov
jb
int3
testb
in
aam
cltd
xchg
test
jle
cmp
push
bound
pop
icebp
scas
jp
lock
int
cmp
popf
mov
inc
adc
add
and
cmp
inc
call
call
xor
nop
in
sbb
int3
pop
movsl
dec
and
inc
cld
fsubs
xchg
xlat
inc
mov
pop
jmp
int
or
inc
outsb
test
cmp
loope
mov
pop
popa
xor
repnz
callw
cltd
movsb
dec
in
pop
sbb
stos
push
add
or
xlat
aam
adc
rorb
push
shrb
jle
in
pop
jae
add
push
repz
mov
add
push
rorb
stos
pop
add
pusha
outsb
sbb
mov
jge
mov
jo
gs
jp
out
cmpsb
sub
and
add
jl
sti
dec
lock
out
lock
cmpsb
jb
xchg
cltd
fnsave
mov
push
leave
push
sub
mov
xlat
call
repnz
push
cld
lret
imul
shl
cmp
loope
dec
aas
sub
or
orl
push
xchg
push
push
sbb
aad
cld
push
rorl
int3
sbb
test
out
xchg
dec
lods
nop
aad
xchg
hlt
push
pop
std
test
ror
out
je
inc
dec
cli
inc
in
ds
xchg
and
rolb
incb
gs
add
and
xchg
cwtl
sysenter
jg
mov
cmp
daa
aaa
add
push
ret
shll
imul
inc
ljmp
sbb
xor
negl
or
or
cwtl
movsb
test
sarb
push
sub
popl
shrl
rclb
and
xchg
clc
ss
xchg
add
cmpsb
dec
mov
clc
ret
sbb
pop
or
inc
sahf
jno
sub
sahf
or
adc
lcall
jg
mov
ja
pop
xor
fs
aas
ja
cmp
or
xor
and
add
daa
pusha
aad
inc
test
mov
into
or
stc
jbe
xchg
add
fsubl
xchg
mov
popf
pop
cmpl
push
repz
iret
xor
daa
stc
dec
movsb
dec
daa
pusha
mov
mov
xchg
test
inc
push
mov
in
sbb
addb
je
enter
lods
data16
call
aaa
jnp
mov
popf
test
pop
push
jg
mov
jmp
nop
inc
xor
imull
mov
lcall
test
xor
insl
lods
jno
lret
xor
xchg
ljmp
aam
iret
jp
push
sbbl
mov
cmpsb
fbld
add
push
jne
scas
adc
mov
outsb
scas
movsl
jbe
xchg
cs
push
sbb
test
js
xor
mov
inc
dec
hlt
nop
leave
dec
push
push
icebp
or
xchg
icebp
adc
add
dec
push
imul
adc
mov
adc
pop
insl
je
and
ret
fwait
imul
inc
in
xchg
outsl
xchg
mov
cmpsl
popa
inc
jecxz
outsb
inc
scas
out
xor
pop
xchg
sub
add
cmpsl
or
sub
dec
dec
cli
add
fnclex
jecxz
push
jb
int
push
pop
int
ss
jmp
xchg
insb
dec
push
test
imul
and
lret
icebp
lret
or
push
push
fimull
mov
sub
mov
push
lock
mov
jge
pushf
push
repnz
out
push
sub
lds
jp
adc
sbb
sahf
inc
xor
das
xchg
mov
movsl
adc
sarl
dec
push
rol
sbb
test
aad
add
test
xor
call
dec
stos
aas
adc
das
adc
imulb
cmp
mov
clc
fidivl
mov
pop
sahf
aas
pop
rorb
pop
test
pop
push
adc
rcrb
adc
js
add
xchg
adc
sbb
in
lock
jnp
ja
mov
rcl
mov
sbb
dec
dec
mov
stos
adc
stc
dec
add
das
mov
data16
cmc
test
test
dec
dec
lods
adcl
and
nop
mov
push
test
inc
test
ja
outsl
pop
in
push
lea
cmp
cmc
fcmovnb
pop
push
pop
negl
pop
adc
sbb
hlt
cmp
mov
sub
repnz
js
jne
or
push
les
insb
push
sbbl
and
ret
movsl
mov
es
inc
ss
hlt
add
fs
mov
and
divb
add
int
and
adc
call
imul
lahf
pop
sub
andl
pop
cmp
fisttpl
mov
lret
mov
ss
push
popf
insl
jo
xchg
inc
enter
push
inc
push
mov
inc
mov
push
sbb
lock
mov
sarl
adc
xchg
or
cmp
jno
inc
lock
fisubrl
or
test
jmp
pop
pop
xlat
xchg
sbb
shlb
or
pusha
aaa
scas
imul
pop
sbb
mov
xor
and
xchg
xchg
or
push
mov
mov
xchg
xor
push
hlt
lret
xchg
cmp
in
sbb
or
mov
lret
jb
ljmp
inc
adc
mov
insl
cmp
rolb
shrb
pushf
mov
mov
sbb
data16
add
or
idivb
mov
cmc
js
cltd
add
imul
push
icebp
xor
aad
mov
push
pushf
repz
adc
pop
and
scas
dec
jns
adc
out
push
mov
sbb
xchg
mov
data16
add
mov
mov
jno
xchg
push
movsb
adc
arpl
cmp
std
jl
hlt
push
fs
test
add
and
rcr
jne
int
scas
or
xchg
mov
jp
test
mov
cli
sbb
loopne
ja
daa
lret
test
shll
sub
je
sbb
cmp
mov
and
outsl
mov
cmp
mov
inc
mov
cmp
mov
or
jnp
pop
sbb
mov
jp
pop
cltd
lods
sub
insb
fxam
pop
cmc
xchg
int3
mov
fs
scas
jnp,pn
call
push
cmp
das
mov
mov
in
daa
add
es
into
xchg
sarb
jmp
clc
dec
aas
mov
pop
xor
mov
jecxz
adcb
sbb
js
jns
cmp
jle
sub
sbb
dec
popf
setnp
in
xchg
jle
fistpl
icebp
ljmp
add
pop
xlat
out
dec
scas
inc
sarb
mov
rcl
ja
dec
sub
cmpsb
lret
sbb
popf
int3
leave
subl
testb
inc
pop
mov
out
xor
test
pop
rcll
or
pop
or
mov
decl
aam
pop
lret
push
dec
dec
into
jbe
xchg
cmp
sbb
xlat
std
push
pop
xchg
xor
jg
lret
aaa
daa
or
inc
fistl
cmpsl
pop
and
lea
cltd
mov
inc
rorl
fimull
data16
or
dec
adc
sar
packsswb
adc
inc
or
or
jne
mov
gs
mov
jp
call
push
or
jge
xor
fisttpl
aas
sbb
lcall
lock
and
dec
notb
jge
mov
jae
daa
jle
imul
dec
mov
lea
fwait
mov
xor
cs
leave
add
mov
stos
jl
xchg
add
ret
or
or
pop
sub
sub
push
dec
cmpsl
dec
jle
mov
js
rcl
mov
loop
add
dec
and
cmp
jmp
aam
sarl
dec
lods
mov
fmulp
out
mov
sbb
mov
int3
cmp
orb
loopne
add
xchg
mov
cltd
pop
and
mov
les
out
popa
or
pop
scas
jle
loop
mov
pusha
das
adc
or
cmc
shlb
fiadds
mov
xchg
adc
nop
cmp
rol
sbb
and
dec
push
push
fmuls
jecxz
gs
movsb
jp
mov
dec
ret
test
jge
jno
add
testb
test
pop
adc
push
sub
mov
stos
jge
and
or
aad
xchg
jl
data16
jle
int
lock
jg
lret
dec
jne
xchg
js
movsl
inc
cmp
cwtl
sbb
jbe
and
adc
xlat
jle
jg
setns
dec
aad
mov
int3
in
cmpsb
testb
out
xchg
shl
mov
stc
mov
pushf
int
inc
jge
fcmove
lea
add
mov
call
test
daa
mov
icebp
aas
jle
cmpsl
popa
xlat
sahf
mov
call
sbb
test
mov
pop
ja
sbb
mov
hlt
ret
out
mov
ds
loope
loope
inc
in
push
cld
stos
movsb
clc
mov
mov
ds
cmp
sbb
jo
or
xor
in
dec
aad
les
fcomps
xchg
xchg
das
mov
adcb
sahf
xchg
pusha
pop
in
bound
jo
data16
out
push
sti
loop
roll
inc
jl
sbbl
ljmp
mov
insl
std
ljmp
xor
dec
int3
in
pop
and
xchg
movsb
les
mov
cmp
out
iret
ss
hlt
lea
aam
into
lea
push
nop
cmp
push
or
push
mov
ret
fisttpll
xchg
lods
loope
ret
cmpsl
push
push
inc
mov
iret
ja
dec
hlt
lret
inc
adc
mov
addr16
inc
push
mov
add
push
les
sbb
push
xor
push
ja
push
dec
inc
icebp
or
cmp
mov
jo
push
sub
ljmp
lret
xor
in
rol
dec
sti
pop
or
jl
dec
mov
cmp
scas
ds
and
sti
in
fbstp
dec
scas
lods
daa
adc
xchg
int
xor
sub
sub
sarw
and
push
lret
in
scas
icebp
xor
push
mov
pop
and
ja
xchg
shlb
testb
dec
pop
dec
frstor
mov
xor
out
test
mov
add
fcmovu
aad
sbb
push
pop
cli
repnz
inc
pop
pop
xchg
aam
ds
in
pop
pop
into
out
xchg
pop
mov
push
push
out
ficoml
jnp
push
pop
inc
mov
stos
mov
pushf
icebp
inc
fsubrl
dec
pop
inc
pop
mov
mov
insb
xchg
mov
add
rorl
popa
inc
rcrb
cwtl
dec
cmp
pop
push
and
cs
scas
ret
jl
testl
idiv
negl
inc
xchg
add
cmpsb
aaa
mull
cwtl
pop
call
jns
adc
push
mov
outsl
push
test
fisttps
inc
xor
ss
addr16
idivl
sub
pop
or
ds
mov
out
pusha
jg
sub
jl
inc
push
or
iret
xor
lahf
or
add
jecxz
xor
sub
fwait
jecxz
out
in
ret
xchg
fidivrl
sbb
jecxz
mov
loope
xchg
xchg
dec
jb
cwtl
popa
inc
jbe
je
loop
mov
lret
and
test
jp
push
aaa
rorl
leave
push
fistpl
stos
xchg
jecxz
adc
div
xchg
push
xchg
fbld
fwait
nop
sub
jecxz
ss
pushf
outsl
out
and
call
pop
mov
xchg
push
out
mov
es
jo
pop
xchg
out
cmp
adc
push
je
xchg
pop
mov
scas
sbb
divl
mov
mov
fwait
add
xor
cli
xchg
adc
sbb
ljmp
lds
std
pop
js
xor
loopne
mov
fsubrl
push
dec
lock
cmpsb
mov
fwait
stc
stos
and
popa
aad
add
push
pop
and
xor
mov
lea
push
insl
int
mov
cmp
stc
fimuls
add
dec
push
sub
sbb
xchg
daa
fbstp
je
stos
push
xor
push
or
ss
mov
xchg
xchg
mov
lods
mov
out
push
mov
mov
loop
jbe
mov
pop
sbb
mov
adc
jmp
movsl
sub
mov
lock
cmp
jae
shr
iret
dec
repnz
in
mov
inc
fstpl
cmp
jnp
inc
aaa
in
inc
popf
inc
daa
push
mov
cmc
iret
or
xchg
cmp
aas
or
shlb
loope
xchg
aaa
mov
ljmp
insl
and
dec
fs
cs
sbb
sti
mov
add
ret
mov
add
ja
jns
mov
arpl
jecxz
je
gs
pusha
xlat
jo
roll
or
in
sahf
repnz
inc
bound
inc
sbb
lret
shrb
popf
xchg
pop
je
xor
out
inc
mov
out
lret
mov
mov
fwait
outsl
push
icebp
loopne
xor
mov
fnstsw
daa
add
xchg
push
xchg
aas
ret
jg
sti
les
push
sti
iret
mov
cmp
sub
cld
xor
sbb
movsb
lret
call
fucomip
jo
xchg
add
inc
sub
shr
aad
push
les
popa
xchg
add
dec
xchg
sbb
cmp
enter
and
shrl
mov
jle
sti
jp
pop
daa
pop
loopne
cmp
dec
in
fsts
outsl
cltd
sbb
stos
lret
sub
jns
stos
cmpsb
es
hlt
pop
lods
adc
mov
push
mov
mov
popa
mov
repz
mov
push
mov
sbb
xor
or
jnp
push
dec
sarb
add
pop
add
cwtl
cs
into
in
mov
jae
xchg
loopne
es
sub
mov
push
mov
mov
shl
inc
out
cmp
mov
push
xor
jmp
sbb
push
fldt
or
scas
movsb
cwtl
mov
add
inc
dec
dec
icebp
jl
ja
push
push
sar
mov
ficomps
inc
push
cwtl
shll
xchg
int
mov
sbb
jmp
add
dec
incl
pop
int
lret
push
outsb
jecxz,pn
addr16
push
lds
shrb
inc
in
sub
imul
in
ror
movsl
out
sub
pusha
xlat
push
mov
cld
lahf
and
in
fcmovb
mov
mov
xchg
sbb
jecxz
jne
in
sarb
pop
fwait
dec
xadd
sarl
lds
aaa
call
leave
inc
mov
dec
imul
jno
xorl
mov
or
inc
push
fadds
and
dec
push
sub
adc
sti
jno
adc
mov
pusha
shl
dec
xchg
sub
sub
es
sbb
pop
popf
cs
and
pop
test
fs
or
roll
repz
jnp
out
into
mov
rcl
dec
mov
iret
jo
out
cli
repnz
jb
sub
sbb
and
jmp
leave
dec
sub
ja
jmp
lock
dec
test
cmpsb
hlt
lret
cmp
mov
mov
pop
dec
cmp
mov
mov
mov
pop
cmp
sbb
cmpsl
fbld
cltd
jle
dec
and
addr16
push
push
test
push
pusha
rorb
sbb
pop
adc
mov
fwait
gs
addr16
sti
lea
push
aas
xor
shrl
sbb
lds
ja
bound
jno
fistps
pop
popf
or
inc
xchg
nop
sub
adc
cmp
push
or
sbb
fmulp
cmp
xchg
sub
and
aam
pushf
push
sub
mov
cwtl
out
hlt
out
das
mov
jns
mov
vpcmpgtb
lds
jo
shr
xor
in
ret
subb
push
repz
sbb
lea
xor
popa
scas
shlb
in
fistps
mov
and
and
cmp
in
loope
xor
pop
in
and
jl
mov
enter
cmp
aad
outsb
add
fidivrl
cmp
insl
fisubl
add
mov
testl
cmp
call
ret
jp
add
ljmp
cld
lahf
fs
addr16
shrl
aas
in
out
jg
sbb
pop
pop
inc
mov
sbb
pop
xor
xor
outsl
out
lods
mov
mov
popf
push
repz
jp
or
rcrl
jbe
vcvtpd2psy
inc
mov
aas
daa
adc
pop
jge
shll
mov
or
jg
cltd
push
inc
adc
xchg
inc
in
mov
push
jns
cmpsb
mov
push
jo
shl
inc
xor
cmp
mov
das
adc
sub
jl
inc
out
lret
popa
pop
aad
cwtl
xlat
xchg
shl
push
pop
jmp
sub
fidivl
xor
mov
adc
jae
movsb
cmp
lahf
inc
shrl
test
inc
loopne
jb
fs
out
jp
subl
xor
xchg
aaa
sbb
lods
lds
add
push
jle
aas
jle
xchg
mov
ja
hlt
adc
rcrl
or
mov
cmpsb
outsb
push
mov
and
movsl
xor
and
adc
push
cmpsl
lea
dec
dec
xchg
adc
inc
inc
je
fdivs
mov
scas
stos
ficoms
jb
or
mov
inc
stc
xchg
or
pop
pop
mov
and
xchg
bound
adc
xchg
cmp
mov
test
in
jmp
loopne
push
in
roll
daa
repnz
cmp
lcall
pop
aad
xor
lahf
sub
popa
ret
out
jo
popa
mov
cmp
pop
mov
outsl
xor
ljmp
es
cli
ret
addr16
cmp
sbb
xor
xchg
xchg
pop
inc
sarb
insb
jle
sti
in
loope
or
xchg
nop
inc
dec
arpl
dec
lock
scas
shrb
mov
bound
rorl
fisttps
xor
mov
ffreep
jnp
xor
mov
scas
lcall
mov
fbld
lret
pusha
lea
enter
adc
in
xchg
int3
je
push
fcomp
out
std
adcl
or
xchg
cmp
push
mov
cwtl
jnp
add
push
das
push
stos
scas
mov
adc
mov
mov
and
addl
mov
ds
rcr
ret
mov
aaa
imul
out
or
cmp
jge
shl
inc
push
imul
xchg
loope
data16
imul
or
fdivl
push
pop
sub
mov
addr16
pop
std
sbb
daa
push
fstl
fldenv
jo
xor
mov
mov
lea
adc
or
imul
pop
lods
rcll
ret
xor
ror
pusha
push
inc
sub
xchg
push
push
call
mov
mov
cmpsb
cltd
loop
jnp
cmp
jbe
ja
sbb
pop
popf
in
aas
pop
lret
mov
mov
lds
jecxz
xor
fildll
mull
and
iret
mov
push
ja
mov
fdivp
mov
jb
pop
mov
push
push
and
out
xor
sub
call
shll
scas
stc
cmc
dec
inc
in
jmp
sub
and
xchg
or
fldl
mov
enter
mov
clc
std
sub
sbb
push
addr16
cltd
and
ret
out
mov
pop
cmp
mov
inc
adc
mov
out
rclb
pusha
mov
jo
xor
mulb
loope
imul
shlb
flds
cltd
mov
gs
jecxz
jmp
negb
mov
push
fadds
stos
sub
lock
fucomip
mov
push
mov
cmp
pop
loop
and
ret
dec
dec
adc
dec
aas
xchg
cmp
nop
adc
xchg
push
cmp
jmp
cmp
frstor
fstp
jge
cmp
mov
stos
or
test
es
jo
push
mov
push
mov
lea
aam
push
xchg
in
rolb
add
mov
push
int
pop
orb
xchg
pshufw
and
xor
pop
clc
lret
cmp
xchg
and
sub
cmp
ljmp
repz
gs
inc
pop
loope
mov
xor
sbb
test
cmp
push
loopne
shl
inc
or
cs
xchg
mov
int
hlt
xchg
js
hlt
roll
xor
data16
jg
loop
arpl
fs
inc
sub
test
mov
movb
or
out
mov
xchg
fcoms
repnz
xor
and
mov
mov
sahf
sti
mov
inc
dec
in
in
stc
push
insb
ja
outsb
jnp
pusha
bound
fs
cli
cmc
lahf
hlt
rorb
std
lret
push
outsb
xor
inc
in
jmp
lods
fisttps
test
not
pop
cmpsl
push
mov
movsl
xchg
int
out
out
sbb
leave
les
pop
lahf
add
xor
jno
in
ljmp
mov
jg
sarb
fmull
cmpsb
xchg
push
fldcw
test
push
add
mov
fildl
or
inc
rclb
lcall
stos
pop
leave
es
mov
sub
imul
dec
xchg
scas
es
jl
lds
push
add
out
fisttpll
daa
inc
movsl
outsl
out
sbb
jp
inc
and
pop
into
push
data16
pop
or
lret
popf
mov
pop
lock
fnsave
or
pop
or
ja
pop
pop
jecxz
xor
mov
sbb
fsubl
jp
in
jecxz
mov
stos
jns
pop
xor
repnz
out
test
loope
dec
add
push
adc
rclb
push
cmp
in
mov
sub
cmp
jb
enter
adc
rolb
and
dec
cmp
int3
mov
cmc
push
test
inc
pop
add
hlt
decl
leave
out
into
fcomps
mov
adc
push
imul
lock
sbb
xor
dec
sub
pop
mov
add
push
mov
mov
cmp
mov
mov
lods
in
jo
js
mov
mov
dec
and
jno
push
mov
stos
xchg
inc
inc
movsl
push
cmpsl
pusha
test
xchg
mov
adc
lock
inc
aad
pop
stc
push
insb
insb
fwait
into
lods
aad
or
xchg
ljmp
jl
cmpsb
mov
mov
cmc
fcmovu
aam
stc
and
rol
dec
adc
imul
sub
scas
pop
mov
das
lahf
orb
add
and
adc
shl
mov
sbb
mov
push
fisttpl
xchg
dec
push
mov
dec
dec
lahf
js
lcall
lods
pop
enter
in
sahf
pop
aam
inc
or
dec
aam
int3
scas
cmp
inc
test
sbb
movsb
inc
cmp
into
sti
fimuls
and
aad
out
repnz
cmc
mov
mov
cmovo
sbb
adc
test
add
sbb
dec
sbb
das
faddl
jo
out
push
xchg
out
out
push
pop
push
cmpsl
lret
movsb
mov
popa
xlat
sub
es
dec
mov
ret
dec
popa
add
mov
out
and
jbe
hlt
and
xor
xchg
cmp
xchg
addb
cltd
sbb
shl
out
ja
in
sti
cmp
fs
movsl
inc
sub
subb
xchg
dec
and
mov
lret
xchg
dec
or
jmp
ds
aam
jno
push
jb
jne
es
xor
pop
fmull
aad
pop
jns
aad
repnz
push
jbe
and
dec
fsubp
or
lret
push
movsb
xchg
div
outsb
in
and
sbb
lea
in
dec
inc
ret
aaa
nop
ljmp
lods
jnp
lcall
mov
dec
or
xorb
andw
lods
out
dec
les
mov
adc
stc
add
add
push
sub
outsl
mov
ja
xchg
mov
pop
cwtl
lea
mov
jle
xchg
mov
mov
pop
xchg
ror
mov
outsb
sbb
mov
insl
out
call
pop
push
mov
lods
out
mov
les
jp
stos
push
adc
sbbb
cmp
jns
test
fdivp
push
and
daa
rcr
rcrb
or
or
mov
add
mov
fimull
cmp
ficoml
fs
std
outsb
daa
or
jb
push
fidivrs
test
mov
bound
les
xchg
vaesdec
inc
mov
mov
push
int
movsb
cli
fcom
ret
mov
shll
orl
les
inc
sub
clc
std
mull
stc
mov
pushf
jbe
adc
movsl
into
out
daa
sbb
cli
xor
xchg
jne
int
rol
fnstenv
sub
out
jl
gs
push
push
hlt
pop
mov
mov
or
adc
inc
cmp
imul
jecxz
movsl
xchg
repz
jmp
dec
test
xor
mov
dec
mov
adc
add
enter
jnp
test
sub
gs
inc
das
add
in
add
ret
mov
dec
roll
je
aad
ss
ljmp
bound
xchg
pop
out
ss
add
out
xchg
mov
jl
and
add
stc
sti
push
jb
cmpsl
inc
mov
fldt
adc
sub
mov
insl
pop
inc
xchg
bts
or
jl
cmp
cs
push
jno
test
stc
mov
mov
mov
add
push
adc
aad
lret
mov
movsb
cmp
and
mov
int3
and
aas
in
cmpsl
and
jmp
leave
ds
pop
push
aam
jns
add
fprem
sbb
jae
sbb
push
pushf
or
jns
pop
xchg
int
xor
stos
mov
mov
lret
loope
push
jb
jne
cmp
xchg
scas
ss
jb
mov
push
ja
fisubs
mov
shl
shlb
dec
and
lods
mov
mov
addr16
cmpsb
xor
aad
xor
fldcw
je
out
outsl
insl
jg
push
lods
mov
cmc
or
inc
push
das
shll
mov
mov
sbb
cld
sti
lret
cmp
loopne
inc
aam
xchg
dec
fidivl
or
or
inc
lea
mov
mov
pop
mov
negl
push
pop
movsb
cmp
pop
out
cli
cwtl
shlb
jp
xor
sub
jg
negb
out
mov
sub
jb
imul
mov
ss
mov
daa
mov
outsb
sbb
mov
daa
shr
lods
xchg
sahf
xchg
cltd
ja
pop
loopne
sbb
jmp
rorb
ret
imul
ja
call
stos
insb
cmpsl
cmpsb
in
jp
inc
sub
fbstp
cmpsb
sahf
bound
test
int
scas
int
inc
icebp
mov
test
sbb
add
mov
xchg
fdivl
cmc
mov
fcmovbe
mov
js
xor
inc
pop
jl
lcall
call
std
jmp
mov
clc
mov
ljmp
mov
imul
rorl
int
scas
in
popf
dec
xchg
movsl
in
inc
in
hlt
push
xchg
mov
ret
mov
mov
ss
sti
cmp
loop
sbb
movsl
jecxz
pop
push
mov
dec
cmp
mov
scas
mov
ret
add
stc
inc
or
cmp
and
cmp
and
loope
pop
add
aad
mov
or
dec
sbb
ljmp
xor
push
adc
test
and
js
lods
stos
mov
ds
adc
incb
in
adc
fbld
cmp
pop
push
add
pop
mov
mov
outsb
xchg
dec
add
into
add
ss
pop
push
jbe
jmp
fwait
jne
pop
mov
xor
test
or
add
nop
cmp
mov
inc
in
icebp
add
push
movsl
sub
mov
pop
test
stos
add
sub
out
sbb
push
in
test
repnz
adc
jg
xor
test
test
pop
push
rep
int
fdivrs
rcll
pop
cmpsl
movsb
in
mov
jb
scas
adc
jne
pop
mov
out
jo
popf
lret
xor
add
js
mul
rcrl
insl
push
jmp
jno
mov
out
cs
aam
fildl
int3
into
fidivrl
mov
stos
push
ret
and
stc
std
mov
notl
inc
xchg
lds
into
mov
mov
scas
dec
dec
push
sub
cmp
adc
cmp
aam
cmp
jo
xchg
sbbb
es
add
mov
push
test
mov
lret
leave
mov
lea
mov
dec
inc
stc
cmc
xor
mov
int3
mov
imul
pop
jb
bound
lcall
test
add
in
std
mov
mov
or
or
lahf
rcr
ret
xchg
lret
cmp
pushf
sbb
mov
iret
test
pop
sub
jbe
hlt
repz
rep
or
cld
push
rcll
adc
sbb
add
out
loope
gs
stc
sub
gs
adc
iret
or
jg
jnp
lds
push
aaa
into
add
movsl
movsl
xchg
pop
hlt
pop
adc
mov
dec
xor
inc
lods
in
bnd
lret
mov
loop
xor
mov
push
clc
ret
inc
push
inc
stos
add
loope
mov
mov
mov
aam
or
stos
xor
jo
mov
add
sub
jns
les
pop
xor
imul
lcall
xor
or
adc
mov
or
mov
add
pop
pusha
jmp
lods
add
mov
test
shl
push
outsl
mov
fldenv
filds
mov
cmp
mov
lret
inc
dec
or
sbb
or
jb
fnstcw
pop
sub
dec
out
xchg
push
sub
lods
add
clc
insb
je
loop
ret
sub
loope
xor
fst
faddp
cmp
ds
js
popa
fildl
mov
scas
push
push
sub
cmp
adc
pop
loopne
push
int3
imul
fstl
movsb
push
mov
adc
scas
add
nop
mov
adc
iret
fwait
je
fiaddl
and
sbb
mov
mull
jmp
shlb
shrl
std
mov
shll
mov
mov
jbe
bnd
add
xchg
adc
adc
adc
pop
ljmp
inc
pusha
jp
movb
aas
cmp
mov
mov
adc
daa
adc
and
cltd
movsl
push
xchg
inc
push
adc
jg
test
adc
push
and
adc
mov
dec
and
imul
mov
push
dec
dec
dec
or
sbb
cwtl
add
repz
sahf
mov
in
adc
test
es
js
add
sbb
push
sti
mov
jp
lret
xchg
and
dec
push
cs
sbb
sbbb
in
mov
xchg
mov
push
pop
mov
mov
mov
or
mov
outsb
jbe
xchg
inc
mov
rcl
add
iret
mov
jo
mov
mov
pop
pop
pop
add
mov
inc
sbb
xchg
xchg
ret
in
outsl
xchg
pushf
scas
test
xor
jb
add
jecxz
add
aad
dec
and
lcall
mov
clc
repnz
mov
mov
xchg
aaa
push
jp
jl
mov
insl
inc
mov
shrl
mov
cmpsb
push
jg
jl
sahf
jb
nop
cmc
shrl
rorb
xchg
mov
insb
cmc
mov
popa
lret
and
xor
int3
adc
mov
jb
insb
pop
dec
push
mov
add
pop
arpl
das
popa
mov
lods
inc
jmp
cltd
testl
sbb
push
mov
inc
push
and
aad
loop
jne
sahf
jge
mov
sti
jb
or
xchg
pop
out
nop
ss
js
test
lret
jle
sti
ret
mov
insl
or
push
cmp
cmpb
dec
mov
xchg
test
in
xchg
push
inc
cmpsl
dec
lret
lds
sbb
push
pop
imul
xchg
push
outsl
fs
mov
xchg
sbbb
pusha
mov
movsl
xor
sbb
adc
sub
call
jno
aaa
leave
push
fistpl
mov
scas
or
fcoms
and
jmp
aad
mov
dec
pop
lcall
adc
add
out
fwait
sub
hlt
jne
aaa
push
dec
push
sub
loop
adc
andl
insb
mov
sbb
enter
push
and
dec
mov
jnp
in
enter
cs
dec
fisubrs
stos
mov
out
mov
inc
sbb
rcll
mov
outsl
cmp
shll
sub
xor
inc
std
mov
push
in
mov
adc
ljmp
mov
mov
sub
jnp
sahf
cs
sbb
sbb
pop
push
xor
out
lds
int3
adc
movsl
inc
popf
sub
dec
push
pop
imul
cmp
imul
mov
add
lds
shll
outsb
sbb
xor
and
and
mov
add
add
jmp
dec
stos
sbb
sub
sbb
gs
or
push
scas
sub
and
mov
and
pop
dec
movsl
adc
popf
sbb
test
fbld
jl
fisubl
out
lock
mov
add
mov
pop
dec
data16
push
xor
push
pop
imul
test
iret
rcrl
inc
pop
ss
inc
mov
aad
mov
insb
cmp
dec
add
imul
in
test
sub
dec
sbb
fsubrp
pop
arpl
lret
popa
mov
jne
stos
pop
mov
insl
es
and
into
inc
push
insl
movsb
sbb
pusha
pop
add
push
mov
popa
je
das
mov
sub
pop
ficomps
fucom
je
fmull
cs
pop
mov
mov
hlt
adc
daa
pushf
jns
jo
adc
mov
push
mov
jne
xchg
mov
lods
mov
dec
daa
dec
arpl
mov
mov
xlat
lods
call
adc
cld
fstpl
sbb
fs
js
jecxz
shll
aaa
pop
loop
dec
repz
jl
jae
or
out
das
hlt
mov
and
mov
sahf
aam
xor
push
sti
push
shrl
sub
push
clc
fbld
jge
mov
jge
or
inc
mov
ret
mov
iret
xor
xchg
cmpsl
sub
cli
dec
sub
jmp
adc
daa
subl
mov
repnz
clc
add
movsb
sbb
in
sub
or
call
call
inc
mov
sbb
xor
fst
aam
stos
clc
js
mov
xchg
add
fstpl
xorl
adc
mov
lret
les
stos
enter
cld
inc
add
test
loop
in
pop
mov
movsl
xor
out
sar
ja
rolb
movq
pusha
fcomps
imul
lds
xchg
in
ja
int3
adcb
push
nop
lea
test
sbb
inc
mov
mov
lret
jg
xor
int3
loop
mov
enter
orl
dec
lahf
ja
nop
data16
push
sub
out
sub
xor
cmp
push
test
not
push
cmc
pop
pop
jge
inc
add
cwtl
loope
test
in
or
jp
mov
in
dec
jp
outsb
lds
add
mov
aam
cmc
cmp
rolb
lret
test
lret
push
imul
test
inc
pop
sahf
xlat
lcall
inc
add
popf
in
xor
pop
xchg
ret
push
pop
data16
insl
test
scas
and
popa
xor
jb
xor
jle
dec
jae
clc
add
leave
and
aas
dec
aaa
jno
and
cltd
mov
gs
into
insb
fisubs
mov
pop
repz
out
mov
and
sarl
adc
xor
sub
arpl
pop
mov
into
jae
subl
push
hlt
popa
dec
fsubr
xchg
or
push
adc
daa
mov
or
mov
insb
jmp
sub
cltd
add
cli
imul
pop
xor
rol
xchg
mov
sar
lcall
xchg
mov
xchg
into
add
dec
push
jle
cmp
lds
inc
inc
subl
dec
out
inc
inc
mov
andl
repnz
data16
nop
dec
bound
stc
lods
add
xor
pushf
les
cltd
pop
pop
out
sbb
jne
adc
imul
cmp
cmp
scas
std
or
ds
movsb
push
jecxz
subl
loop
cmpsb
sbb
mov
xchg
ror
int3
cld
xchg
add
int3
iret
dec
push
add
sub
pop
mov
mov
jne
adc
sub
add
insb
adc
pop
call
sub
lods
nop
fwait
dec
fadds
push
fdivrl
and
lods
adc
ds
xchg
mov
inc
loop
in
fucom
dec
xchg
cwtl
xchg
jae
addr16
stos
and
ds
cmp
lret
inc
jmp
sbb
arpl
int
mov
pop
dec
int
stos
and
jge
sahf
gs
mov
popf
push
push
mov
cwtl
idivl
ja
add
loop
mov
ljmp
shl
xchg
inc
mov
dec
cltd
cli
add
cmp
mov
es
jb
or
jne
mov
outsl
push
mov
adc
mov
jo
rolb
arpl
cmp
ljmp
pop
mov
adc
roll
mov
xchg
loope
test
push
inc
cmpsb
test
stc
fs
add
cwtl
dec
mov
inc
fsubr
xchg
push
or
lahf
jge
ljmp
or
dec
ss
cmp
mov
popa
shr
mov
push
insl
mov
adc
cmp
shrb
adc
jnp
cltd
data16
mov
mov
mov
mov
cld
mov
out
fld
sub
mov
or
dec
sub
icebp
cmp
push
repnz
xor
shrb
cmp
cmpsb
dec
dec
dec
mov
push
int
in
pop
or
mov
push
and
dec
adc
iret
dec
shrb
push
add
lret
sar
xor
sub
inc
dec
adc
sahf
enter
jns
stos
pusha
or
mov
test
and
dec
mov
fnstcw
adc
mov
xchg
mov
ds
pushf
and
adcl
adc
jg
rorb
xorl
scas
outsl
icebp
xlat
mov
sub
adc
mov
or
xor
jl
lahf
out
cmp
inc
nop
dec
sbb
cmp
ss
add
jle
addr16
repz
adc
jnp
pop
jecxz
push
and
xor
adc
adc
push
pusha
mov
iret
out
je
inc
in
lcall
sbb
hlt
add
or
mov
sub
xchg
adc
aaa
faddl
push
test
clc
test
sbb
cs
int3
aaa
cmp
push
xchg
mov
mov
pop
jns
xchg
cmp
mov
ss
in
or
leave
fcomps
fnstsw
jno
pop
sbb
inc
sub
fidivrl
les
aaa
ret
cs
add
outsb
fildll
testb
ljmp
out
adc
pusha
popf
mov
outsb
in
sbb
ja
fld
xor
rep
sub
sbbl
fldl
cmp
aas
and
dec
cmc
or
and
outsb
jg
mov
or
out
fbstp
jb
adc
addr16
addr16
lret
mov
jnp
cmpsl
jg
decl
lcall
jbe
test
sub
adc
dec
lds
hlt
fcoml
mov
sahf
sub
dec
stc
add
mov
pusha
sbb
daa
test
call
inc
cmc
nop
fcmove
stos
leave
insl
arpl
cmp
lods
rcll
adc
or
inc
outsl
aaa
mov
andl
mov
mov
pop
xor
repz
push
sub
mov
jp
sbbl
adc
adc
pusha
stos
js
pop
outsl
pop
cmp
popa
xor
push
cmp
mov
iret
xor
cltd
sub
std
cmp
inc
inc
xor
in
pusha
jns
push
push
bound
dec
icebp
cwtl
fwait
jl
jmp
loop
jmp
push
jp
mov
cld
xchg
inc
fwait
mov
sbb
push
pop
ds
jno
and
xchg
fwait
xor
jnp
xchg
sub
mov
adc
jl
mov
daa
fsubrs
jb
mov
xchg
mov
mov
adc
filds
jecxz
jg
out
ljmp
hlt
mov
loop
adc
push
imul
add
lahf
inc
roll
pop
in
imul
sbb
push
out
or
into
sub
mov
pop
or
std
jmp
push
adc
adc
movsl
sbb
lods
lahf
call
push
movsl
add
sbbl
dec
pop
mov
call
sub
shrl
jne,pn
setnp
sub
pusha
lret
aam
or
xor
jo
cmpsb
cmpsb
or
cmp
out
mov
and
or
popf
lret
xor
ret
lods
lret
add
pop
je
xor
insl
fadd
out
js
lea
ret
stc
mov
fildl
les
xchg
aad
ss
mov
ja
popf
out
pushf
sbb
pop
pushf
cmc
in
ja
dec
pop
inc
adc
xchg
cwtl
sbb
lret
cmp
sbb
mov
push
rcl
pop
js
pop
dec
mov
sarl
dec
mov
sub
enter
outsl
pop
push
jb
arpl
std
xlat
add
jae
inc
cmp
rcll
mov
dec
cmp
into
cltd
adc
in
adc
cli
int
or
test
add
sub
push
add
lock
lds
inc
sbb
cmp
pop
stos
test
ja
mov
mov
sub
call
cmp
idivb
cmpsb
adc
sbb
mov
fldcw
hlt
fucomp
mov
outsb
xchg
fwait
repnz
sub
inc
xor
and
sahf
ret
cmp
mov
jne
movsl
jbe
in
popa
test
push
test
push
sbb
mov
clc
test
jl
test
mov
icebp
inc
xchg
adc
lahf
pop
adc
mov
cmpsl
sub
in
aad
in
fcoms
mov
pop
mov
lahf
lcall
and
lea
aaa
mov
push
mov
mov
cmc
dec
push
sbb
cmp
movsl
stc
xchg
jmp
xor
orl
xor
adc
jge
jmp
push
xor
xor
adc
movl
jg
or
pop
mov
xor
inc
and
mov
inc
cmp
inc
inc
xor
ss
pusha
xchg
out
test
jp
dec
pop
sbb
int3
inc
sahf
jmp
gs
pop
insl
mov
dec
dec
xchg
push
inc
fwait
sahf
lea
xlat
cmp
out
and
ficoms
sbb
dec
arpl
adc
inc
roll
jae
cmpl
in
mov
mov
fs
and
adc
pop
mov
call
pop
xchg
jae
push
mov
sbb
sbb
mov
push
sub
mov
iret
xchg
jmp
shlb
or
or
outsb
push
mov
data16
pop
sbb
arpl
into
cmp
pop
gs
adc
or
add
mov
jecxz
inc
shlb
cli
mov
fs
enter
outsl
or
mov
mov
mov
lock
std
fsubrs
xchg
fsubs
push
push
adc
inc
fisttpl
inc
vpcmpeqw
mov
push
adc
scas
xchg
in
push
xor
mov
xor
add
cmpsl
sub
std
dec
xchg
or
cmp
jnp
or
cmp
fisubs
sub
xlat
ficompl
lock
inc
addl
stos
xor
push
lcall
jb
loope
dec
and
xchg
adc
add
test
sahf
lea
push
jecxz
pushf
xchg
mov
je
push
subps
push
jbe
adc
inc
fwait
cmp
cmp
xchg
add
sub
xlat
ror
jmp
dec
iret
bound
cmp
hlt
dec
xchg
sbb
xor
push
fcomps
sti
xchg
mov
jae
inc
sti
test
int
cmpb
loopne
pop
dec
jno
cmp
push
or
dec
test
iret
int
loope
in
inc
adc
sub
pop
leave
fimull
test
sbbb
adc
jp
xchg
sub
jne
decb
cmp
jbe
mov
adc
test
movsl
jp
mov
inc
shrl
pop
movl
mov
jmp
lret
xchg
pop
xor
mov
shrl
pop
bswap
mov
rorl
fcmovbe
movsl
jne
jle
in
in
dec
xchg
mov
ds
and
nop
popa
lea
je
mov
inc
sub
mov
imul
jbe
adc
and
xchg
push
xchg
inc
lahf
xchg
mov
mov
out
movsl
les
cmc
adc
xchg
mov
insb
std
ud1
jp
sub
add
fidivl
int3
imul
cmp
sbb
ljmp
lods
add
or
sub
popf
jmp
daa
pop
cld
adc
repnz
sti
popf
lds
mov
xor
pusha
lods
daa
inc
pop
dec
clc
cmc
jne
out
mov
mov
or
mov
aas
mov
test
arpl
idiv
xchg
cld
fsubs
orb
loopne
dec
loopne
ret
push
or
roll
xchg
icebp
xor
test
inc
in
ljmp
cmp
sub
stos
loope
cmp
jb
fnstcw
in
sti
cmp
jns
lret
sbb
cld
mov
insl
scas
dec
rorb
mov
xor
nop
xor
jp
pop
xchg
dec
push
pusha
mov
int
test
outsl
jbe
jne
cwtl
ret
cmp
adc
test
daa
dec
jno
jecxz
mov
leave
daa
jmp
js
sbb
nop
pop
dec
out
mov
lock
je,pt
test
iret
jg
dec
mov
loopne
fnstcw
mov
xor
int3
pusha
pop
dec
pop
ljmp
cmp
mov
lcall
mov
int
fildll
loopne
mov
fwait
insb
js
jp
xorl
in
push
sub
adc
push
adc
pop
mov
jns
mov
cmc
mov
fistps
shlb
xor
add
testb
xor
outsb
mov
mov
adc
add
push
insl
out
xor
les
push
repz
insl
cmp
jecxz
sub
cwtl
addr16
pop
cmp
stc
pop
sub
arpl
mov
sbb
pop
mov
or
pop
lods
cmpsl
push
sbb
jg
je
loopne
out
sub
mov
push
incb
fcmovne
imul
jge,pt
adc
sbb
movsb
hlt
xor
jecxz
fwait
xchg
push
mov
or
ja
mov
loopne
add
icebp
inc
push
or
loope
cli
outsb
push
addr16
and
dec
jo
insb
hlt
xchg
adc
lahf
pusha
pop
cmp
pop
sti
and
or
nop
xchg
mov
cmc
rcll
fcompl
hlt
cwtl
nop
notb
jno
lds
jnp
xchg
and
iret
ret
vmovhps
fwait
pop
mov
sarl
adc
lcall
cmpsl
lcall
xsaves
mov
or
and
cwtl
cmp
add
lret
push
inc
mov
cmp
in
in
test
push
push
stc
xchg
adc
ja
ss
loop
mov
pushf
pop
dec
jb
addr16
outsl
and
mov
out
and
mov
lods
and
lods
inc
xor
arpl
pop
pop
inc
or
xchg
dec
xchg
sti
mov
scas
stos
pop
xchg
fisttpll
pop
xor
push
out
aad
popf
or
xor
and
adc
out
cltd
lods
loopne
mov
stos
add
sbb
xor
adc
and
test
dec
cmc
iret
out
je
xor
push
jns
stos
jbe
nop
cmp
fimuls
out
add
xchg
jbe
ja
cmp
xor
arpl
lock
xor
incb
loope
or
ficoms
pop
and
jns
lret
lea
cs
and
mov
arpl
lods
fisttps
and
cwtl
inc
xchg
aad
movsl
xchg
insb
cwtl
inc
mov
add
pop
pusha
mov
add
shlb
loopne
call
lahf
jb
insl
cli
fwait
popf
enter
mov
push
cmpsb
and
mov
movq
adc
jnp
les
pop
pop
push
dec
into
mov
sub
jmp
mov
jbe
cmc
or
mov
mov
or
or
aas
lds
xchg
pusha
xchg
ud1
call
test
bnd
neg
or
adc
rolb
or
sahf
aam
xor
sub
jecxz
pop
xlat
push
icebp
pusha
jle
adc
jae
in
jmp
mov
sub
lock
mov
jae
cmp
cs
aas
mov
bound
sub
xor
nop
jbe
adc
bound
push
and
cmc
mov
adc
cltd
push
adc
stos
pop
scas
out
mov
inc
jp
mov
jbe
and
jg
leave
or
std
or
ret
or
leave
test
fldt
cwtl
xchg
and
fisubrl
addr16
lahf
leave
adc
push
inc
lret
adc
repz
into
shrb
je
mov
pop
fcmovnb
out
js
mov
dec
jge
sub
pop
push
and
inc
inc
and
and
test
shlb
push
sti
and
mov
std
jb
jbe
shlb
xchg
lock
insb
int
and
jbe
xlat
fs
fcom
shll
dec
stc
mov
sub
incl
sbb
sub
test
mov
cmp
fcomi
sahf
movsb
rorl
and
push
lods
jbe
jns
and
and
and
mov
sbb
loop
ret
jae
js
movsl
in
push
adc
mov
repnz
pop
and
scas
cltd
loop
cmp
pop
test
in
lcall
lcall
sarb
dec
lods
and
pop
stc
xchg
cmp
pop
or
stc
mov
ljmp
sub
adc
js
jne
adc
in
inc
out
pop
in
mov
nop
shrb
push
push
pop
sub
iret
scas
sbb
lds
mov
insb
jmp
cli
clc
test
lret
jge
ljmp
popa
repnz
add
lods
sbb
add
int3
lock
fsubrs
dec
mov
pop
stc
pop
and
add
out
xchg
pushf
pop
cltd
mov
mov
sub
mov
adc
add
add
outsl
sub
or
fdivr
nop
movsb
insb
mov
or
movsl
inc
test
sub
add
mov
fs
shlb
mov
inc
xchg
pop
or
ret
xor
adc
cs
pop
dec
cmp
jno
mov
fs
inc
xchg
dec
mov
addr16
cmp
jne
leave
xlat
aas
aad
cmpsb
out
mov
pop
loop
sbb
mov
mov
jg
or
lea
inc
xchg
es
insb
add
out
add
adc
mov
scas
cmp
mov
outsl
and
das
jp
popf
lods
and
fisubrs
push
add
lods
jg
cmp
and
stos
sbb
push
pop
xor
ss
scas
out
lahf
adc
or
subb
roll
xlat
push
pop
in
mov
or
and
lahf
fs
int
mov
or
imull
pusha
push
out
or
pop
ret
add
push
mov
or
and
xchg
lods
sbb
xorl
in
pop
sbb
fisubrl
sub
cltd
int
add
or
out
jne
ljmp
enter
xor
push
or
shrb
pop
leave
loop
pusha
sub
out
fdivrs
jo
jle
punpcklbw
in
lahf
mov
pusha
enter
sub
sbb
int3
adc
fdivr
or
xchg
scas
sub
iret
outsl
rcrb
push
lods
out
in
sbb
je
jnp
lahf
xor
mov
add
icebp
cld
push
dec
xchg
dec
adc
leave
jmp
mov
cmp
std
cld
sbb
femms
cld
cmp
mov
and
jno
cmp
and
mov
test
sub
imull
sbb
mov
inc
mov
decb
xchg
repz
inc
enter
cmc
pop
xchg
push
jl
jae
rorl
push
rcr
jecxz
mov
sbb
and
sahf
pop
out
aad
cmpsl
push
cmp
insl
out
xchg
leave
ss
scas
push
hlt
loope
sbb
jle
pop
jmp
xor
mov
adc
xchg
push
decl
negl
popf
mov
mov
int3
out
outsb
adc
data16
sub
cmp
ljmp
push
loopne
pop
fcoml
stc
lods
push
cmp
int3
sbb
mov
scas
shl
cmp
jb
dec
inc
xchg
sbb
incl
jle
xchg
test
cmp
adc
pop
inc
sbb
mov
or
addr16
pop
in
in
ret
jne
jge
dec
sarb
cli
inc
roll
pop
imul
inc
fldt
or
data16
ds
test
cmpsb
xchg
nop
insl
mov
mov
leave
xor
add
repz
xor
mov
mov
sti
leave
pop
push
in
pop
xor
sbb
std
jp
inc
fdivs
dec
jae
nop
cmp
jle
pop
mov
jae
popa
jp
mov
pop
inc
xchg
enter
mov
scas
lahf
and
adc
gs
inc
push
pop
push
push
int3
inc
pop
sub
or
mov
cld
sahf
scas
fs
inc
xor
rclb
lods
mov
jp
popl
xchg
mov
insl
mov
es
sbb
add
repz
call
and
ret
outsb
xor
pop
insl
outsb
mov
xchg
jge
adcl
dec
jbe
ljmp
fnsave
mov
push
or
mov
and
lds
repnz
movsb
push
inc
ljmp
inc
fdivrs
push
jb
aam
lret
adc
clc
and
mov
scas
xor
pop
mov
insb
mov
adc
pop
lret
jle
int3
repnz
jp
or
xchg
or
stc
leave
popa
pushf
sbb
add
jnp
mov
scas
mov
jnp
out
in
xor
push
push
scas
push
cmp
adc
xchg
xchg
in
mov
sub
xor
lcall
mov
loopne
pop
jns
push
xlat
stos
dec
pop
popa
sbb
adc
mov
pop
scas
push
push
dec
sub
out
cltd
hlt
sbb
xor
inc
scas
lcall
pop
xor
movsl
leave
int3
jg
mov
cs
scas
add
daa
add
movsb
clc
bound
mov
test
or
mov
orl
jle
in
xchg
dec
insl
cwtl
popa
mov
push
imul
add
imul
cmp
push
xchg
sub
fists
adc
gs
dec
mov
cltd
mov
pop
cmp
daa
mov
loopne
testb
cwtl
xorb
mov
jecxz
popa
repnz
dec
xchg
jo
pusha
ja
pop
jmp
adc
mov
call
pushf
sub
adc
rclb
incb
subl
mov
test
shlb
jecxz
adc
xor
aad
add
sub
lods
push
std
sahf
in
sahf
dec
lret
adc
data16
dec
jns
lahf
fsubp
or
or
cmp
adc
mov
outsb
in
pop
pop
cmpsl
repz
and
clc
mov
and
xchg
cld
mov
push
cmp
es
data16
and
cmp
rolb
getsec
adc
jo
sbb
out
mov
test
adc
shlb
sbbb
mov
push
mov
adc
add
cmpsb
stos
jb
and
in
je
jge
mov
cmp
or
push
xchg
repz
cmp
jno
ds
in
enter
lods
icebp
push
and
mov
inc
repnz
xrelease
lret
sub
sub
ds
mov
or
shll
shl
add
xorl
stc
lea
adc
pop
jecxz
push
lcall
fucomp
mov
fwait
jne
fnstenv
sub
mov
adc
cmpsl
or
sub
in
in
cmp
jle
mov
adc
mov
lea
xor
push
into
subl
lods
insb
out
xor
inc
sub
insl
out
sub
lahf
cmp
add
out
mov
je
in
mov
cld
xchg
bound
mov
adc
pop
mov
icebp
add
jmp
es
and
inc
pop
adc
and
push
or
mov
cwtl
push
ret
xchg
test
push
loopne
and
mov
dec
xor
pop
and
sbb
jg
xchg
push
lea
stos
adc
js
mov
pusha
cmp
fildll
iret
or
and
jns
and
ret
popa
in
out
ficoms
and
adc
jae
cmp
push
arpl
jno
adc
outsl
adc
cmp
mov
daa
inc
pop
js
add
xchg
popf
jl
sbb
jp
mov
jle
push
inc
ffreep
push
pop
add
push
push
jp
xor
and
sar
cs
pop
mov
add
add
or
push
subb
icebp
js
lret
das
sti
sarb
lds
test
mov
fcompl
xor
sti
shll
lret
and
stos
enter
shrl
repnz
lcall
ljmp
shlb
xor
xor
pop
pop
cmp
jb
inc
or
pop
loopne
or
push
jmp
mov
in
aaa
mov
and
popf
sbb
push
adc
push
ror
test
pop
dec
push
xchg
sahf
vsqrtss
mov
push
fwait
mov
add
shll
dec
test
shrl
and
dec
subb
icebp
pushf
out
fcomip
push
inc
pop
inc
cmc
lret
sub
jae
cmpsl
in
mulb
call
ret
sbbl
adc
rcr
dec
faddl
flds
mov
mov
js
hlt
popf
lods
jnp
xor
sub
lret
jb
push
hlt
add
adc
loopne
sub
cmc
adcl
mov
mov
sub
popf
dec
pusha
loope
add
fidivrl
cli
lcall
pop
out
pop
mov
inc
aas
mov
ja
or
loope
sbb
mov
stos
mov
test
mov
repz
jo
sbb
aaa
add
adc
imul
lcall
aas
aad
mov
in
xchg
dec
mov
js
and
add
mov
rep
cmp
popf
mov
fnstsw
repz
mov
push
inc
jb
addb
cmpsb
adc
shll
lahf
pop
add
leave
push
fs
mov
mov
xchg
aaa
mov
and
mov
add
mov
push
cltd
or
outsl
pop
sub
mov
mov
xor
xlat
push
jp
mov
sbb
fs
movsb
test
xor
pop
lds
xchg
sti
mov
cwtl
xor
xor
loop
push
je
adc
xchg
in
int3
lret
clc
adc
add
call
jns
cld
push
ret
out
ret
cmp
inc
pop
mov
repz
popf
mov
and
das
leave
roll
xor
xchg
adc
test
push
imul
scas
pop
push
and
add
fwait
sbb
inc
sbb
and
sbb
test
inc
mov
xchg
je
push
adcb
or
imulb
fmull
sbb
jmp
mov
repz
push
mov
ja
cmp
testl
out
mov
into
pop
pop
jno
mov
jl
cmp
rol
xor
mov
cmp
cmp
add
cs
jge
mov
out
ljmp
loop
mov
pop
push
out
nop
jmp
ret
fistpll
fmuls
cld
cmp
jge
bound
push
mov
lea
das
jnp
lds
cmp
jnp
shll
ret
sbb
xchg
and
push
adc
and
xor
dec
loope
dec
xchg
outsb
les
movsb
and
mov
mov
xchg
adc
popf
icebp
int3
jns
mov
jg
fisttpl
pusha
push
sub
mov
aam
les
movsl
xor
sti
mov
fbld
test
mov
scas
mov
int
xchg
cli
scas
shll
adc
subb
mov
lret
mov
push
icebp
cmp
mov
cmpsl
negl
or
lods
cmpsl
xor
push
adc
leave
idivl
xor
mov
pushf
enter
pop
add
xor
ljmp
stos
jbe
xchg
jecxz
test
inc
pop
out
mov
pop
push
mov
mov
pop
or
mov
sub
aaa
testb
ss
rorl
xor
repz
or
cmc
hlt
xchg
pop
aas
test
pop
test
dec
sahf
cmp
lods
add
std
insl
dec
aad
pop
and
push
cmp
push
sub
jne
int
fimull
sti
fs
adc
pop
and
mov
movsb
lods
mov
sbb
pop
lods
adc
jne
fsubs
inc
cmp
sahf
mov
incl
cltd
add
mov
jp
xchg
xchg
rcrl
adc
pop
jg
cli
mov
push
mov
or
inc
adc
lods
pop
fsub
aam
and
mov
mov
push
inc
mov
out
adcl
cltd
addr16
stos
dec
arpl
repnz
sub
out
jns
cmc
xorl
add
pop
cmpsl
aam
enter
cmp
lahf
push
sti
cmpsl
rclb
andb
addr16
sbb
test
sub
add
es
jnp
inc
cmp
sub
arpl
ds
repz
mov
je
enter
in
pop
stos
nop
add
jb
iret
aas
cld
fisubl
push
sbb
mov
push
in
adc
cwtl
mov
andl
add
mov
aaa
xchg
pop
mov
imull
js
scas
or
data16
push
fadd
jae
int3
les
sub
push
lcall
movsl
and
rcll
enter
sub
adc
xlat
popa
mov
aam
insb
or
push
arpl
in
xor
loope
mov
int
mov
sub
shlb
fcmovnb
mov
pushf
out
sub
mov
inc
cmp
adc
push
nop
pusha
jp
jle
add
cltd
cmp
pop
insb
sahf
mov
jae
std
xor
and
insl
fcom
lea
stc
lods
push
push
mov
dec
xor
dec
mov
test
pushf
imul
mov
adc
xlat
lahf
popf
bound
pop
mov
mul
xor
adc
push
outsl
in
out
sahf
iret
jns
ds
cmpsb
pusha
test
rcl
inc
xor
push
mov
mov
mov
xor
imul
stos
pop
add
mul
push
dec
mov
mov
roll
adc
mov
push
popa
jecxz
es
jns
les
roll
lea
sub
cltd
xor
sahf
pop
mov
sub
dec
mov
icebp
inc
xchg
xor
fucomp
addb
xchg
sub
mull
arpl
addr16
mov
mov
sbb
rcrl
leave
push
pop
aam
inc
in
ja
pushf
mov
shr
or
mov
stos
roll
pop
mov
adc
daa
into
sub
addr16
dec
inc
dec
push
repz
mov
pop
xchg
pop
ret
sbb
pop
sbb
pop
mov
inc
push
add
nop
mov
xchg
xchg
xor
repz
fwait
inc
and
stos
pop
sete
mov
adc
lods
add
out
inc
in
cmp
adc
xchg
test
addl
out
lea
or
mov
push
sbb
leave
sarb
in
xchg
dec
or
pushf
mov
ficomps
in
fsts
mov
and
adc
mov
mov
pusha
pop
sbb
pop
cmp
orb
scas
push
xor
mov
jne
pop
sub
ds
addb
push
inc
popl
inc
and
xor
sub
sbb
add
aaa
adc
fs
mov
mov
lret
jnp
jp
lret
call
sub
jge
leave
xchg
xchg
add
popa
fwait
xchg
mov
xchg
cmp
int
adc
in
fcomip
fnsave
scas
adc
sbb
imul
sub
push
sub
sbb
push
inc
outsl
je
mov
mov
pop
pop
add
outsb
lahf
mov
pop
xor
jbe
pop
fbstp
pop
push
add
add
in
fsqrt
dec
xchg
insl
fimuls
push
rorl
ds
je
jl
mov
iret
sbb
in
and
mov
add
fdivr
mulb
rol
push
push
cs
test
mov
lahf
fdivs
mov
or
ds
inc
dec
fucom
popa
jg
mov
in
es
cmp
enter
inc
pop
mov
insl
js
popa
push
sub
in
out
inc
dec
leave
negl
cmp
inc
sub
cmp
adc
stc
fs
mov
xor
std
dec
in
aas
mov
sub
mov
sbb
ljmp
mov
rolb
js
xor
mov
or
test
loopne
cli
jmp
or
jl
sub
rorl
push
stos
mov
iret
cli
lret
mov
mov
jg
sbb
lods
or
and
jns
add
xlat
fdivrs
dec
aaa
xchg
in
loopne
das
in
ds
dec
mov
mov
mov
lahf
std
iret
push
std
out
negb
dec
mov
iret
mov
lds
popa
pop
mov
push
shr
inc
mov
sub
loope
mov
aad
adc
mov
lods
ss
rcll
add
add
cmpsl
rorb
aam
repz
add
pop
ret
jmp
shrl
and
inc
popf
cmp
sbb
mov
dec
stos
out
out
or
and
sbb
push
pop
push
aas
adcb
mov
or
addr16
jmp
adc
or
insl
pop
mov
jmp
scas
int
ficomps
xchg
je
lcall
jp
push
dec
inc
mov
mov
inc
ret
nop
xor
adc
sahf
sub
cmpsl
ret
enter
or
mov
sub
ja
cwtl
dec
mov
push
sub
fcompl
xchg
test
lea
fdivr
push
xor
or
mov
adc
dec
mov
movsb
fs
es
pop
add
int
fwait
pusha
outsl
movsb
popa
sbb
fwait
jnp
xchg
pop
mulb
les
sub
mov
mov
dec
je
repnz
nop
cmpsb
mulb
es
sahf
aas
mov
in
jmp
mov
pop
out
mov
iret
cmp
xchg
ficompl
clc
dec
sbb
insl
or
in
jecxz
testb
pop
jmp
rol
mov
daa
inc
les
jbe
out
mov
insb
and
cmp
fidivrl
cld
jl
inc
iret
std
and
xchg
daa
sbbl
stc
outsl
fdivs
mov
adc
inc
testl
lods
dec
sub
outsb
fbld
repnz
sti
push
loope
test
add
nop
cli
sub
add
jns
mov
dec
pop
fimull
aam
or
or
or
cs
addr16
mov
jbe
add
adc
rorl
cmpsl
xor
out
testl
loop
dec
rolb
clc
cmc
adcb
shl
test
scas
dec
jo
jbe
push
adc
jl
arpl
in
or
lcall
lret
cmp
fs
out
jmp
push
insb
pop
push
inc
nop
push
xchg
stos
and
inc
mov
sbb
mov
add
movsl
adc
sar
pop
sbb
data16
mov
lret
inc
cwtl
sub
push
jns
fldl
je
or
cmp
clc
jns
push
push
adc
es
shl
xchg
divl
xor
stos
call
aam
push
out
push
or
lock
add
xchg
adc
mov
cmp
add
sbb
jg
xor
out
movsl
pop
insl
inc
jo
sub
addr16
aad
fmul
inc
shlb
aaa
jb
data16
mov
pop
and
mov
aam
push
add
dec
xchg
popf
rorb
nop
mov
add
push
push
mov
jp
stc
pushf
in
pop
add
in
jbe
in
scas
lock
mov
xor
pop
dec
aad
push
sbb
cmp
inc
mov
cmpsb
xchg
inc
jp
sahf
sub
ljmp
mov
lret
wrmsr
mov
jnp
movsl
mov
inc
cltd
scas
xchg
jb
dec
in
mov
gs
jno
pushf
fstp
ja
fstl
push
cmpsb
ror
ss
nop
mov
shlb
std
sbb
je
xchg
mov
inc
scas
ja
cmpsb
adc
scas
mov
daa
rclb
cmp
in
jl
aaa
sub
mov
push
mov
mov
or
pop
pop
jmp
inc
push
div
outsl
in
jo
xchg
aas
enter
sub
test
mull
incb
mov
pop
push
outsl
xchg
addb
lds
jl
cmp
jb
jb
shrl
cmp
mov
clc
jb
call
or
inc
cs
and
aam
jecxz
sub
jnp
adc
jbe
cmp
mov
repz
sub
sbb
insb
je
sbb
add
mov
adc
cmp
mov
dec
popa
cmp
cmp
mov
ja
xlat
pop
push
cmpsl
lcall
mov
cltd
and
mov
mov
imul
icebp
xchg
hlt
enter
inc
imul
pop
push
test
pop
hlt
stos
inc
mov
test
mov
leave
pop
dec
and
lcall
das
jne
xor
pop
mov
enter
mov
push
sbb
sbb
adc
in
or
mov
jb
inc
mov
loope
lret
fadds
in
mulb
ret
out
jg
or
iret
pop
imul
movsb
mov
mov
sti
mov
pop
ja
mov
pop
pop
fimull
inc
out
scas
fmull
inc
mov
insb
enter
or
stos
mov
mov
movsb
inc
push
inc
fbld
mov
nop
pcmpgtd
out
xacquire
mov
ljmp
xor
outsb
sbb
add
imul
stos
and
cmp
xor
jge
mov
and
pusha
imul
xor
negl
jne
add
xor
pop
xchg
sbb
mov
leave
out
faddl
cs
std
fwait
movsb
cwtl
outsb
xchg
into
idivl
dec
xchg
and
lret
jno
dec
ss
sbb
nop
std
dec
lcall
mov
lods
cs
xchg
enter
pop
addr16
into
cltd
inc
aas
pop
sub
rol
add
sbb
bound
mov
push
sbb
stos
xchg
xor
adc
jecxz
or
jne
push
into
jle
dec
out
xchg
jge
movsl
repz
hlt
push
lret
pop
aas
jae
sbb
and
fldl
js
gs
in
xchg
add
aaa
icebp
add
mov
mov
push
aad
push
mov
or
push
inc
jmp
dec
cmp
out
scas
mov
xchg
xchg
ret
jge
push
cli
pop
lock
cs
push
scas
ds
outsb
jmp
mov
enter
lldt
cmp
dec
imul
jbe
clc
andl
or
fldl
imul
push
adc
ds
out
jns
xchg
fwait
cmp
sbb
xor
jecxz
xor
xchg
cmp
les
out
inc
test
dec
gs
addr16
xchg
sbb
fadds
inc
sbb
xor
fmuls
scas
jle
adc
mov
cmp
cmpsb
gs
mov
mulb
es
jl
xchg
ja
or
scas
ret
fstpt
int
icebp
insl
xchg
aaa
fiadds
and
pop
test
push
mov
pop
imul
push
call
cld
into
bound
xlat
lds
adc
rclb
mov
scas
lahf
cs
icebp
push
aas
int
jecxz
hlt
push
cmp
jl
mov
jno
filds
pop
lock
sbb
push
out
mov
cmp
ret
pop
xchg
fldt
pop
std
out
faddl
xor
pushf
push
adc
or
mov
adc
js
repz
inc
out
push
cli
repnz
dec
test
add
add
iret
mov
pop
fildll
inc
and
pop
xchg
addr16
ss
cld
shll
sbb
lcall
sub
scas
adc
cmp
cltd
ljmp
inc
icebp
data16
pop
aas
mov
rorl
ret
aam
dec
fstpt
imul
sub
fisubrs
xchg
std
push
mov
cmp
jo
mov
jo
inc
mov
push
mov
insl
lods
fists
mov
push
or
xor
cmp
xlat
cmp
pop
lcall
mov
fisttpl
add
scas
aaa
jnp
fwait
jp
jne
jno
dec
in
xchg
mov
push
cmpsl
stc
mov
rcl
xor
push
or
lock
stos
repnz
xchg
aas
cld
jl
lods
pushl
lods
mov
out
dec
push
movsb
cmp
pop
imul
push
jo
and
xor
xchg
mov
jl
xchg
cld
and
pop
inc
outsl
pop
popa
test
lods
sbb
mov
std
mov
pop
stos
sub
mov
decl
mov
cli
cmpsl
pushl
dec
insb
push
add
cwtl
sbb
sahf
push
aad
movsb
push
cmp
into
inc
pushl
sub
mov
xchg
mov
sbb
les
dec
lahf
shll
push
jle
dec
mov
xchg
pop
xchg
sar
movsb
pop
scas
scas
mov
rep
sbb
or
mov
inc
mov
incl
das
xchg
ret
jle
lds
push
aad
lcall
insb
or
stos
dec
jb
pop
int3
movl
mov
adc
insb
dec
hlt
jp
cltd
cmc
insb
push
mov
xchg
sahf
xchg
add
push
lods
shl
adc
fmuls
jo
inc
call
fstpl
inc
xchg
mull
mov
stos
inc
test
test
push
jo
sbb
jle
xchg
fwait
xchg
outsb
pop
fmull
cmp
cmpsl
pop
mov
int3
mov
decl
inc
cmpsb
mov
lcall
push
cmpsl
dec
stc
add
push
sub
inc
sahf
dec
sbbb
jecxz
or
subb
adc
xchg
cld
mov
sbb
cld
add
and
aas
xchg
rorl
test
scas
mov
stos
jns
shrb
mov
jmp
sbb
orl
sub
loop
inc
imul
pusha
cmp
lcall
push
xchg
cmc
repz
adc
insb
sub
cmpsl
movsl
mov
or
adc
out
clc
stc
daa
xor
stos
xchg
std
jb
jecxz
pusha
xor
xchg
fucomi
xchg
es
mov
mov
rclb
push
mov
jno
mov
dec
jbe
pop
sbb
sbb
inc
ljmp
rcr
mov
imul
shl
push
fnstsw
add
imul
mov
xchg
insl
sti
xor
cmp
add
loop
sbb
push
leave
cmc
xor
fs
outsl
aam
and
iret
cmc
mov
dec
out
sub
out
jnp
divb
aad
dec
fwait
stos
xchg
mov
pop
xchg
sbb
lea
pop
loopne
jge
pop
repz
jb
ror
or
std
sbb
sub
jmp
inc
sbb
inc
nop
jb
xlat
and
fdivrl
sbb
sbb
mov
ss
pop
and
cmp
mov
mov
pop
imul
push
cmpsb
test
mov
dec
ljmp
loop
jmp
movsb
push
mov
add
int
inc
lret
mov
sub
movl
hlt
or
les
aam
sub
or
xor
mov
loope
inc
sub
mov
push
lcall
loope
or
mov
cli
pop
add
mov
test
mov
sti
sbb
les
shr
in
inc
lds
mov
sarb
pusha
cwtl
aam
imul
loope
mov
cmp
inc
cmc
cmpsl
stc
xor
xor
leave
xor
push
inc
int
jmp
aad
lods
jbe
ljmp
lods
cwtl
sbb
addr16
xlat
mov
adc
gs
pop
stc
gs
xchg
in
adc
dec
scas
cmc
dec
lock
push
mov
imul
xchg
or
out
adc
mov
xchg
repz
inc
pop
xchg
mov
add
out
stos
push
sarb
mov
cmp
mov
imul
lcall
stc
xchg
xor
xchg
movsl
aaa
or
cmc
push
xchg
mov
mov
inc
mov
addr16
arpl
mov
mov
pop
fsts
or
cmpsl
xchg
mov
mov
js
int3
push
push
data16
push
test
ja
xlat
xchg
into
inc
pop
pop
iret
mov
mov
repz
fisubs
adcl
fidivrl
or
inc
rclb
xchg
stos
sub
xchg
inc
out
cli
jle
inc
nop
mov
testl
xchg
pop
in
xchg
cmp
cmp
add
adc
pop
mov
sbb
ljmp
icebp
in
mov
aad
jle
mov
sti
jno
cli
lock
test
repnz
fisubs
sbb
sti
subb
fidivrs
adc
rdmsr
mov
ret
xorb
cmp
mov
and
push
test
push
adc
insl
rcrl
out
aas
scas
js
jmp
in
sub
and
or
jne
mov
rcrb
std
fsubrs
push
vandnpd
je
inc
cmpsb
jno
and
xor
out
lret
int3
jle
pop
mov
test
lret
arpl
ja
mov
js
cmp
sbb
adcl
jns
data16
mov
imulb
int3
inc
inc
or
bound
aaa
outsl
fs
popa
into
std
push
aas
ja
ss
sub
jnp
stos
jmp
nop
push
xlat
xchg
mov
xchg
mov
xchg
sbb
or
or
lock
stos
aad
gs
rcrl
in
add
inc
fidivrs
jl
scas
popf
les
jge
std
jae
mov
dec
dec
adc
das
fsubs
out
cmpsl
cmp
insl
jp
addr16
mov
push
dec
loop
repz
pop
dec
mov
sub
adc
push
arpl
scas
adc
mov
popa
mov
enter
push
sar
sbb
repz
push
lsl
fs
lock
jecxz
mov
rcl
repnz
int
std
repnz
out
scas
arpl
out
out
repnz
ljmp
das
and
aaa
mov
push
dec
jmp
pushf
repz
andl
rorl
adc
adc
mov
aam
imul
or
int3
hlt
jp
inc
aad
fs
adc
pop
or
push
cmp
and
leave
repz
cmpsb
sub
adc
cmp
dec
sbb
dec
fistps
aam
push
outsl
xor
in
fcmovnb
lret
mov
pop
les
lock
in
inc
ror
sbb
daa
pop
ja
pop
mov
fisubrl
dec
mov
jg
xchg
jb
sub
mov
ja
int3
fwait
scas
xchg
sbb
test
dec
or
sbb
pop
popa
fucomi
inc
lods
add
out
pusha
es
out
push
mov
lds
call
sbbb
in
jne
mov
dec
push
mov
push
loop
mov
cmp
inc
jg
mov
je
ja
shll
xchg
fistps
jns
xor
filds
dec
fwait
mov
jbe
adc
add
lahf
xchg
dec
jnp
pop
data16
gs
push
sbb
int3
nop
jbe,pt
arpl
test
ss
mov
movsb
or
xor
jg
sti
fwait
rcrb
dec
mov
jg
test
mov
cltd
pop
lahf
mov
pop
stos
sbb
stos
mov
pop
jge
push
pop
push
rorl
adc
jp
lret
insl
lret
adc
shll
pop
fwait
add
stos
xchg
sbb
push
sbb
gs
jbe
and
adc
fstpt
xlat
pop
pop
push
hlt
lcall
loope
jmp
popf
aaa
mov
std
adc
mov
rorl
mov
inc
aas
push
stc
lock
jp
insl
out
cs
push
insb
mov
xchg
mov
xchg
jl
sub
mov
jg
shl
das
enter
lods
stos
adc
in
mov
je
and
xchg
sbb
scas
jg
mov
aam
push
xchg
repz
loopne
push
and
xchg
lret
leave
push
or
xor
mov
outsl
dec
mov
ficoml
cltd
dec
xor
push
gs
jge
mov
mov
lea
jae
xor
xchg
enter
arpl
testl
push
mov
scas
je
or
pop
popf
dec
sbb
lret
dec
repnz
inc
stos
sahf
mul
mov
cmp
int
add
mov
or
fs
test
inc
ret
add
mov
ljmp
dec
mov
lea
pop
and
test
or
das
inc
lods
sarb
jle
imul
and
dec
jle
rorb
mov
notl
jl
pushf
sub
aas
mov
aas
nop
cs
inc
cli
test
aas
fdivs
push
cmc
stc
ljmp
pop
add
dec
cmpb
mov
jnp
fldt
sbbl
je
jmp
enter
mov
shrb
xchg
sbb
lods
push
cmc
push
rcll
jnp
dec
repnz
fimull
bound
pop
jecxz
out
aaa
cli
and
sbb
and
mov
adc
icebp
jns
jnp
mov
adc
fsubrl
cwtl
xchg
xchg
and
mov
dec
cmp
int
fwait
lods
add
cld
sbb
pop
and
cmp
aaa
rorl
loopne
les
cmpsl
pop
sti
insl
test
inc
ret
push
inc
bnd
les
das
mov
cs
in
pop
push
push
mov
int3
lock
xor
or
mov
sub
push
inc
push
stc
cmp
jne
jle
stc
adcb
jb
cmp
leave
jae
push
das
mov
dec
jmp
push
and
imul
fstl
fimuls
push
jne
or
mov
fadd
inc
inc
jae
pop
add
push
pop
mov
cld
push
push
dec
mov
rcr
insb
repz
jp
call
pop
repnz
test
and
xchg
imul
pop
sbb
and
test
leave
in
xchg
into
in
stos
subl
fstl
cmp
pop
je
sbb
testb
fiaddl
aad
inc
xor
mov
push
cli
lahf
repnz
jl
xor
and
les
loopne
ss
mov
xlat
push
cmp
outsb
arpl
stos
out
mov
test
addr16
cmp
push
dec
repz
inc
mov
out
pop
and
push
cmp
ljmp
pop
xor
xchg
enter
cmp
fimuls
loop
imul
data16
push
shrl
xlat
jbe
cmpsl
call
int
inc
fistpl
lahf
lret
ret
push
lods
cmp
jmp
aaa
ret
mov
mov
mov
cmpl
fdivl
int3
enter
mov
adc
jbe
ss
and
jo
jne
cmp
cld
test
jge
sbb
or
out
fnstenv
dec
insl
mov
jg
insl
or
xorl
lcall
cmp
out
arpl
lret
enter
jecxz
sbb
add
jbe
pop
sbb
sbb
fsubr
adc
mov
subb
sbb
ja
pop
mov
adc
sbb
in
lret
xchg
aaa
stos
xor
and
aas
pop
sbb
scas
cmp
leave
aam
add
clc
fldt
pusha
xchg
notb
adc
fisttps
leave
sahf
push
pop
aaa
arpl
mov
cmpsl
inc
push
xlat
aad
inc
mov
aam
mov
aad
jle
pop
adc
negl
dec
xchg
nop
xor
idivl
iret
out
icebp
mov
add
std
cmpsb
lret
add
jmp
enter
popa
cwtl
aaa
dec
addb
xchg
loopne
mov
loop
add
push
cli
int3
inc
fsubrs
mov
ret
adc
xchg
mov
mov
add
mov
ret
cld
inc
sub
pusha
jne
dec
jne
rolb
mov
call
mov
ds
pop
sbb
and
xor
add
push
inc
filds
cmc
bound
or
cmp
lea
fimull
or
adc
js
push
gs
or
jno
fsubl
pop
pop
and
stos
mov
lea
mov
cwtl
pop
push
mov
sbbl
pop
mov
lods
xor
jae
push
ret
cmpsb
imul
outsb
dec
dec
push
cli
xor
sub
pop
xor
sbb
outsb
sub
ficompl
outsl
lods
movsl
adc
xchg
push
sub
shll
nop
lock
mov
roll
shl
enter
jl
imull
xlat
sub
std
enter
int3
adc
inc
jb
gs
sub
sbb
xlat
mov
mov
ljmp
push
in
xor
lods
dec
pop
or
inc
es
cmpsl
and
mov
jo
loopne
inc
mov
inc
mov
dec
xchg
arpl
imul
mov
fwait
adc
in
ds
dec
push
into
ret
das
mov
jge
mov
mov
sarl
pop
push
jle
shl
dec
and
mov
mov
lods
in
inc
add
inc
cwtl
stc
and
mov
sbb
xchg
fs
cmc
or
jle
sar
and
mov
jae
lock
lahf
ja
or
inc
loopne
mov
cmp
test
xchg
bound
mov
sub
pop
adc
repz
or
cltd
int
xor
mov
xor
paddusw
insb
xor
mov
mov
lods
lea
xchg
out
movsb
mov
jmp
sbb
inc
insb
insb
cmp
xchg
inc
jno
dec
xlat
loopne
insl
sarb
pop
fptan
cmc
xor
je
mov
hlt
scas
mov
sbb
pop
fnsave
je
fsubrs
lret
test
jg
jle
dec
and
sahf
push
dec
push
repz
xchg
xchg
enter
xor
mov
pop
mov
mov
popa
out
loopne
int
outsb
pop
xchg
repz
in
repnz
add
push
xchg
sbb
pop
stc
out
jecxz
arpl
pop
cmpl
shrb
outsl
jle
or
or
insl
xchg
adc
movsl
push
mov
nop
mov
xlat
inc
mov
mov
test
out
or
loopne
pop
mov
dec
mov
aaa
popf
jno
mov
push
push
and
xor
adc
pop
in
loopne
inc
aas
mov
jmp
adc
ja
outsl
sbb
xchg
sub
sahf
cmp
cmp
scas
inc
lret
push
xor
sub
mov
mov
fcompl
cmc
movsb
lret
jnp
and
mov
out
xchg
push
lcall
lods
loopne
je
cmc
push
sarb
mov
int3
sbb
cmp
lret
pop
pop
sbb
sub
jae
mov
lret
xchg
scas
xor
add
jns
cmp
pop
in
dec
out
push
test
hlt
xchg
clc
imul
sbb
int3
cs
aaa
mov
xchg
addr16
jle
jp
pop
out
repnz
lock
jge
ss
je
aaa
cmpb
inc
lahf
pop
mov
rcll
sahf
scas
fstpl
pop
je
xchg
lahf
mov
inc
jecxz
xlat
test
sbb
leave
pop
es
sub
sub
loop
cmp
push
lcall
and
gs
and
add
inc
in
insl
mov
test
mov
dec
add
cld
mov
hlt
loop
loop
mov
ljmp
pop
cmp
and
scas
dec
mov
shll
push
movsb
shlb
outsl
imul
mov
xor
adc
or
addl
into
xor
in
cli
jg
mov
pop
iret
lock
call
and
in
pop
add
dec
mov
add
movsl
xor
xchg
jbe
sbb
les
mov
ljmp
iret
inc
out
mov
shll
sbb
data16
fmulp
vpmacsww
enter
cmp
and
push
or
sahf
mov
imul
push
mov
stos
jno
popf
lret
and
jno
sbb
lods
jg
das
pop
dec
addr16
mov
in
ret
dec
add
mov
bound
xorl
movsb
aam
cmc
xchg
mov
popa
or
push
fistl
fldt
test
adcb
jl
in
hlt
in
mov
les
mov
cmpsb
out
pop
sbb
push
pop
outsb
loop
clc
rclb
scas
and
inc
jmp
push
loopne
xor
jbe
cmp
dec
mov
sti
pop
push
add
pop
adc
xlat
lock
not
bnd
sarb
cmp
pushf
hlt
icebp
xor
lret
pop
loope
testb
je
test
pushf
into
mov
aaa
arpl
push
xchg
into
pop
and
js
push
fmul
xlat
sbb
les
aad
jecxz
sub
cs
inc
icebp
xor
pop
dec
xor
movsb
add
lock
pop
popa
std
es
push
call
loopne
movsb
je
sbbb
or
je
jbe
call
aam
cli
fidivl
stc
jns
gs
sbb
je
xchg
insb
add
mov
in
repz
mov
imul
push
cmpsl
cltd
cmp
or
rorb
das
mov
inc
or
cltd
push
add
push
mov
pushf
and
dec
cs
mov
fcmovnb
lods
jl
mov
jecxz
popa
and
in
das
sub
mov
mov
jecxz
lcall
insb
outsb
fstps
mov
mov
push
dec
nop
dec
jp
popf
leave
ret
cmp
and
sub
cmp
cmp
js
mov
test
mov
push
xor
lret
sbb
fmulp
and
dec
fucom
mov
mov
mov
ljmp
mov
mov
mov
jbe
push
mov
mov
loop
push
pop
cld
out
fisubs
jmp
adc
jne
test
push
loop
leave
es
insb
inc
in
and
repz
leave
jns
stc
or
addr16
int3
lahf
jnp
and
lcall
add
lret
jnp
xor
cmp
add
rcr
call
mov
movb
cmp
jmp
loop
aaa
mov
push
les
lret
pop
ljmp
aaa
out
pop
sbb
bound
pop
negb
std
pop
sti
jne
aam
jle
add
test
repz
xchg
and
or
adc
pop
adc
xor
or
clc
imul
stos
pop
scas
scas
bound
pop
jg
mov
fildll
xchg
rorl
data16
jle
shll
ljmp
pop
dec
mov
push
xor
or
push
jne
in
xorb
addr16
pusha
lods
dec
lret
adc
add
pusha
xchg
or
lret
jb
movsl
inc
das
es
movsl
adc
dec
test
adc
mov
cmp
sbb
mov
sbb
scas
ljmp
push
mov
add
loope
pushl
sub
outsb
insb
aaa
lods
dec
fistl
xchg
pop
mov
rcrl
xor
daa
aaa
cmpsl
nop
add
daa
sub
lcall
aaa
and
xor
insl
add
out
insb
out
mov
jl
fwait
pop
cltd
daa
adc
cmpsl
dec
sub
lret
aam
outsl
xor
mov
and
add
xor
mov
outsb
pop
mov
jmp
cmp
fistpl
je
push
xchg
imulb
fs
xchg
out
loope
imul
push
repz
roll
add
mov
faddl
fldl2t
cmp
repnz
inc
enter
rorb
lods
xchg
addr16
ficoml
adc
add
cmp
sarl
xchg
jnp
pop
scas
sarl
sbb
and
mov
and
jp
jg
jo
xchg
and
jecxz
or
es
lods
fnstcw
inc
mov
pop
das
jge
push
hlt
pop
out
dec
icebp
nop
sti
lods
iret
xchg
sbb
mov
xchg
xchg
fimull
jo
jecxz
xor
xor
fdivs
out
lea
push
leave
inc
inc
gs
add
seta
test
lea
cmp
addr16
and
xor
loope
dec
xor
loop
mov
mov
loop
pop
mov
movb
hlt
mov
fwait
sbb
decl
clc
movsb
lock
jl
adc
mov
adc
sbb
or
test
push
dec
scas
push
lods
push
insl
mov
ret
std
and
or
cltd
out
bound
in
dec
icebp
sbb
push
aad
cmp
popa
push
sub
rcll
icebp
inc
mov
mov
insb
mov
or
adc
dec
mov
sbb
mov
ret
ljmp
add
push
fisttpll
xchg
pop
mov
dec
mov
cs
bound
mov
lods
imul
lea
std
shll
sub
cmpsb
mov
push
sbb
orb
push
repz
push
fs
andl
add
ret
int
and
cmpsl
adc
ljmp
sub
cmpsl
scas
loope
vmwrite
dec
pop
test
jecxz
pop
adc
jmp
xchg
dec
movsl
std
dec
add
xchg
pop
loope
fdivs
shl
test
inc
mov
adc
and
ds
fwait
xchg
pop
filds
sub
add
std
es
xorl
or
int3
ficoms
ds
movsl
ret
mov
push
pop
jno
jmp
inc
cltd
mov
inc
shlb
ret
out
or
xchg
push
and
dec
mov
xor
movsb
jno
stos
adc
xchg
pop
mov
dec
mov
push
mov
nop
push
cld
cmp
jo
mov
mull
clc
or
arpl
sbb
mov
fs
pop
jle
cmp
mov
popa
jbe
mov
mov
not
stc
xor
mov
inc
in
int
jb
mov
dec
aaa
ret
jecxz
mov
add
out
lods
bnd
shrb
js
fdivr
push
jne
cwtl
ds
adc
mov
inc
test
rcrb
sbb
or
stos
repnz
xor
pop
or
xchg
xchg
and
lahf
js
dec
fsubs
sub
imull
mov
inc
jge
test
cmpsl
scas
mov
sbb
sub
lods
sub
lret
rcll
pop
aaa
jns
sub
jp
jbe
outsb
lods
inc
insl
add
inc
cmc
pop
push
mov
add
or
jbe
leave
out
pop
push
push
pop
pop
pusha
mov
jb
int
ficompl
dec
loope
cmp
mov
xchg
mov
cltd
mov
jo
and
jo
jnp
mov
mov
and
ret
sub
jle
test
out
and
add
xchg
mov
cltd
jl
push
mov
in
lcall
shrl
push
sti
push
ljmp
shll
scas
jo
jbe
test
int
movsb
je
or
pop
adc
xchg
and
cmp
cmpsl
sbbb
push
adc
test
adc
js
sahf
and
pop
dec
xor
punpcklbw
xchg
and
adc
inc
pop
mov
fsubp
jae
jne
xchg
insb
js
shll
enter
cmp
jbe
inc
mov
dec
mov
cmpsb
movsb
jbe
ja
and
or
push
pop
cwtl
push
xor
sub
in
loopne
xchg
sbb
lods
cmc
loop
xor
in
insl
inc
cli
inc
movq
cmp
leave
jecxz
sbb
adcb
mov
mov
inc
and
popf
lds
sub
xchg
sbb
imul
sbb
cltd
adc
flds
push
adc
stc
push
sub
adc
push
mov
movsb
push
cmpsb
push
inc
enter
lods
fdivs
lds
lret
out
aaa
xor
sub
mov
jmp
jnp
sarl
sub
dec
jo
and
jne
cmc
in
ds
les
xchg
adc
and
mov
push
mov
test
lock
insl
push
scas
sub
out
inc
add
mov
stos
or
pop
bound
cltd
xchg
popf
add
mov
cmpsl
jg
aad
jle
xchg
fcomip
push
add
das
jecxz
fnstcw
les
fbld
inc
sub
pop
mov
add
push
jo
or
ficompl
lds
xor
lods
fstpt
add
js
push
imul
lret
adc
inc
jae
test
sub
addl
sahf
in
clc
mov
mov
pop
jl
mov
lods
and
xchg
and
popf
das
pop
lret
pop
outsl
int
or
xor
push
jae
addw
jecxz
cli
ja
sbb
push
fsubp
cmc
jne
push
lret
dec
pop
sbb
xchg
repnz
enter
push
or
into
scas
adc
inc
cmp
cmpb
shrl
cwtl
lods
iret
lret
int
movsb
pusha
pop
mov
xor
daa
mov
mov
xchg
xchg
push
or
int
lods
andl
rclb
les
pop
cmpsl
fldt
dec
inc
lret
stos
dec
mov
subl
bound
mov
cli
roll
jmp
push
enter
fistl
push
push
sbb
dec
dec
pop
and
mov
loope
stos
cmp
push
fstl
lock
lcall
testb
jae
dec
loopne
jg
mov
bound
mov
or
add
ret
lds
mov
xchg
adc
decb
in
dec
test
ret
scas
std
outsb
jnp
js
or
cmp
sub
dec
pop
mov
inc
dec
dec
mov
xchg
iret
xchg
arpl
sti
push
jg
dec
icebp
movsl
sub
sbb
hlt
push
xor
jns
jne
out
cld
mov
clc
imul
in
xlat
jmp
pop
cli
shr
mov
cmpsb
lods
mov
dec
dec
repnz
jns
mov
pop
neg
sbb
push
stos
sahf
sbb
add
scas
or
call
addr16
pop
jae
jl
scas
iret
nop
lahf
stos
jb
shl
mov
insb
insb
push
pushf
int
cld
add
scas
cmpsl
push
fdivl
jl
push
lods
sarb
jle
cs
xchg
xchg
mov
das
test
sub
xchg
mov
arpl
sbb
cmp
and
xchg
loop
jmp
cmp
push
add
xchg
test
push
cmp
push
call
shlb
xchg
push
aaa
push
adc
repz
lods
mov
imul
test
sbbl
jno
fcomps
and
and
and
mov
mov
cmpl
mov
or
pop
cmpsl
popl
int3
fwait
shrl
aaa
or
and
int3
inc
adc
sbb
push
fsubs
mov
mov
movsb
push
push
mov
inc
add
addl
notl
mov
je
loopne
mov
xchg
ss
push
repnz
push
jmp
sub
fistpll
sbb
mov
out
jns
or
mov
dec
pop
pop
cmp
loope
push
insb
inc
pop
xor
or
lret
arpl
jle
ja
push
stos
add
xchg
dec
bswap
daa
out
fsubrs
out
sub
xlat
push
push
mov
arpl
mov
sbb
jg
out
pusha
push
lock
or
rcr
pop
xor
pop
fwait
in
mov
lods
test
sti
mov
cwtl
flds
add
and
movsl
cwtl
adc
sbb
lods
sti
aad
js
rorb
mov
jne
adc
andb
pop
sbb
sub
in
xor
lock
inc
data16
xchg
iret
fcom
cmpsl
adc
xchg
dec
cmpsl
pop
and
mov
jle
jns
mov
jae
movsb
add
pop
data16
inc
xchg
nop
dec
fistl
push
popa
addr16
xchg
fsubl
nop
in
subb
je
jno
xor
decb
adc
mov
mov
inc
and
sub
mov
ja
dec
mov
loopne
sahf
cmp
mov
adc
outsb
adc
add
add
mov
aaa
ss
inc
sbb
pop
sbb
mov
adc
push
xchg
push
mov
outsl
scas
stos
rcrb
enter
lahf
gs
or
stos
mov
hlt
pop
aam
leave
fldenv
icebp
mov
mov
icebp
mov
call
push
sub
outsl
or
out
dec
mov
lock
test
inc
or
shll
and
push
hlt
xor
ljmp
loope
xchg
jne
push
mov
sti
mov
cli
lahf
mov
ljmp
mov
loopne
insb
enter
mov
or
shll
stos
lods
call
adc
jecxz
insb
push
std
cmp
pop
bound
in
hlt
pop
popa
xchg
push
sbb
sub
or
bound
sarb
inc
sbb
inc
cmc
jp
sahf
push
sbb
fdivrl
jmp
inc
aas
outsb
xchg
lods
xor
ficoms
jae
lcall
sbb
out
inc
adc
test
jno
ss
push
ds
lcall
aam
xor
jl
mov
xchg
add
and
cmp
push
js
testb
xor
stos
sub
out
or
xchg
aad
adc
outsb
pop
or
das
mov
mov
add
subb
add
cmpsl
mov
out
int3
adc
and
xor
test
dec
call
imul
pop
dec
fsubr
fnsave
sbb
inc
insl
dec
inc
adc
xchg
not
clc
mov
idivb
call
lcall
cmp
sbb
dec
inc
sbb
and
adc
stc
test
je
mov
mov
test
call
cmpsl
and
add
cmp
dec
leave
pop
sub
sub
hlt
or
aad
call
mov
pop
leave
mov
sub
mov
pushf
test
cmp
mov
push
idivl
adc
bound
cmc
push
sbb
ficoms
dec
icebp
int
and
mov
xchg
push
push
sub
gs
xor
inc
jno
fcmovbe
mov
sbb
aas
sti
jo
adc
inc
das
pop
jne
jns
dec
insb
pusha
pushf
pop
iret
xor
or
pop
sub
cltd
les
sub
aam
fldcw
lcall
test
fdiv
hlt
lahf
enter
rorl
and
pushf
dec
shll
xchg
loopne
sub
cld
pop
add
push
movsl
cmc
sbb
clc
xor
rcl
shrb
jmp
shl
fxch
add
movsl
push
mov
cmp
xchg
push
jbe
cmpsl
mov
jmp
jg
cmp
pop
sbb
and
inc
enter
bound
push
inc
gs
arpl
cltd
adc
or
dec
scas
arpl
in
adc
jns
inc
fbstp
popl
in
out
cmp
pop
dec
out
ljmp
cmpsb
inc
push
jo
out
mov
and
dec
mov
dec
roll
into
xchg
lret
xor
adcb
jle
sbb
mov
leave
xchg
movsl
dec
repz
rcrl
mov
pop
out
stc
sub
and
mov
leave
enter
sbb
push
pop
mov
adc
pop
push
lcall
pop
lret
pop
xor
xor
and
mov
mov
pop
adc
push
repnz
jnp
adc
les
mov
pop
mov
push
dec
icebp
addr16
inc
insl
inc
mov
push
and
jae
gs
jl
loope
push
addr16
imul
lods
scas
sub
ljmp
les
fcompl
mov
push
imul
out
xchg
mov
jmp
mov
movsl
cmpb
xor
ljmp
cwtl
lea
les
mov
mov
push
mov
data16
sub
test
sbb
jnp
and
test
adc
pop
push
int3
dec
pop
test
jns
pop
push
int
loope
icebp
mov
iret
jae
icebp
push
stos
lahf
and
insb
dec
pop
stc
dec
mov
ret
xchg
cmp
push
sub
pop
fwait
adc
aaa
sub
xor
mov
jge
inc
psrlw
push
xchg
cltd
or
inc
sbb
cmp
jae
aam
inc
icebp
inc
out
adc
adcb
clc
mull
in
sbb
dec
btr
add
jle
fcmovbe
fmull
mov
pushf
int3
pop
insb
xor
lret
xor
arpl
jo
arpl
cli
scas
shrl
adc
lret
pop
pop
rcll
scas
sbb
inc
lret
enter
xchg
ds
add
dec
jo
adc
and
add
add
fmuls
push
enter
mov
cltd
cmp
div
stos
pop
outsb
fidivrs
push
pop
xchg
xchg
cs
xchg
and
inc
into
test
pop
mov
dec
rolb
in
xchg
enter
xchg
sub
xor
jp
sub
push
or
xor
push
push
mov
jg
es
jp
stc
in
push
add
jmp
xor
dec
add
ss
add
popl
sti
xor
mov
mov
jno
fdivp
sbb
sahf
push
enter
sar
pop
xchg
addr16
inc
adc
ret
pop
rol
xchg
xchg
ds
gs
push
inc
inc
adc
jle
or
sbb
cmpsl
dec
scas
sti
mov
shlb
sbb
mov
loop
scas
in
jmp
push
dec
xor
loop
lcall
push
fisubrl
adc
lock
pop
mov
cmp
push
addr16
mov
cmp
rcrb
out
addr16
adc
outsl
xlat
inc
jle
cmp
ret
adc
cli
test
idivl
pusha
mov
std
jb
cmpsl
jno
mov
addl
or
sub
sub
jge
pop
jb
aam
jno
div
xor
and
push
lcall
push
or
mov
push
cmp
mov
inc
sub
mov
movsb
or
mov
jbe
hlt
xchg
clc
cmp
dec
xchg
lea
dec
inc
push
fimuls
and
out
mov
sarb
sbb
sub
or
movzbl
repz
shlb
push
hlt
dec
jg
and
lods
enter
popa
mov
or
popa
mov
dec
icebp
dec
cmp
rsqrtps
in
jbe
push
xor
les
dec
clc
je
movsb
std
sbbb
xchg
jecxz
sub
rorb
scas
lea
pushw
stos
and
fidivl
mov
testb
in
lock
pop
cli
lds
xchg
fnstcw
imul
push
push
pop
sbb
push
inc
mov
je
test
int
push
inc
dec
xor
sub
cmp
int
push
mov
scas
dec
add
push
sub
fadd
jg
sbb
push
in
push
fwait
addb
scas
inc
push
or
mov
stc
dec
shl
push
lock
and
or
in
and
inc
pop
fisttps
mov
xor
ds
dec
shr
lahf
mov
dec
clc
in
call
pop
cli
mov
jmp
adc
cmc
mov
adcb
adc
xchg
outsb
pop
pop
xchg
cmp
test
lock
gs
sbb
push
sbb
pushf
sub
stc
dec
inc
cmpsl
adc
jne
jne
mov
data16
and
in
xchg
inc
repz
inc
sbb
cmp
and
pop
mov
push
in
sub
jg
push
aaa
cld
in
mov
aas
test
fxch
xor
mov
stc
push
push
stos
das
mov
xorl
xor
test
inc
xor
lret
mov
cmovbe
cld
stos
sub
pop
xor
dec
sub
test
xor
aas
pop
imul
pop
cwtl
cmpsb
das
ljmp
out
mov
lcall
sub
xor
lds
outsl
sub
and
add
pushf
add
adc
test
shr
nop
loope
add
mov
cld
fwait
adc
icebp
shrl
xor
icebp
fstp
jmp
das
and
mov
mov
jecxz
aas
and
ja
push
mov
fidivrs
inc
push
jmp
or
iret
or
and
orb
movsb
mov
xchg
sbb
ljmp
inc
inc
scas
lods
inc
jmp
push
mov
ds
mov
gs
int
push
pop
cmp
cmpsb
std
lds
outsl
cmp
pop
pop
jb
inc
jge
insb
cmpl
or
xchg
pop
out
sbb
push
in
xor
lcall
movsl
inc
xlat
push
dec
ja
in
push
cs
xor
les
mov
mov
idivb
adc
insw
add
mov
aas
push
mov
or
push
jne
dec
stos
iret
in
mov
jp
mov
inc
mov
call
subb
aad
push
pop
pop
lcall
idiv
mov
out
in
jle
std
mov
cmp
xlat
push
push
mov
out
cld
sbb
daa
mov
fwait
pop
mov
mov
inc
add
xchg
je
xchg
mov
jp
mov
inc
jbe
pusha
add
std
add
iret
jmp
rclb
mov
addr16
jbe
insl
lcall
cmpsl
sahf
push
cmpsl
or
xor
inc
lret
adc
subl
loop
loope
add
imul
jmp
mov
pop
decb
jae
sti
mov
fstl
or
mov
sub
jge
fs
mov
sbb
jmp
js
scas
mov
xchg
mov
movsl
cmc
push
subb
xchg
mov
push
xor
mov
sub
xchg
xchg
mov
repz
push
loop
adc
popa
pop
adc
fstl
push
cwtl
sbb
fcoms
cli
sbb
add
sbb
pop
pushf
pushf
push
iret
mov
push
xchg
inc
loopne
mov
mov
shrb
in
xor
aad
testb
adc
mov
aam
add
mov
cwtl
adc
js
shlb
add
jl
dec
push
mov
jo
jne
stos
imul
mov
inc
in
dec
or
cmp
xor
inc
insl
sub
and
addr16
adc
xor
into
imul
mov
bound
jmp
aaa
cmpsb
je
sbb
mov
adc
pop
push
aad
jae
cmc
lret
cmc
cmpl
mov
rolb
ja
xor
mov
jns
inc
leave
fcmovbe
lcall
inc
inc
shlb
mov
jp
outsl
pop
jns
pusha
aas
jno
sbb
mov
mov
icebp
dec
test
popf
jecxz
fdivrl
xchg
scas
mov
dec
inc
pop
in
lea
xor
lret
sarb
dec
nop
cmp
mov
imul
and
shll
push
test
or
dec
jne
pop
fiadds
loop
fildl
push
fildll
fisubrl
mov
jo
loope
cmp
pop
pop
push
inc
mov
out
jns
loop
mov
ss
hlt
pop
or
std
push
inc
mov
insb
cmp
xchg
stc
rorl
xor
iret
pusha
sub
ss
sub
jl
push
push
fsubrs
xchg
add
dec
pop
add
dec
pop
aas
jo
add
out
into
scas
aam
mov
add
daa
xlat
inc
inc
inc
xchg
mov
mov
int
rol
or
xchg
aas
outsb
mov
es
mov
in
outsl
push
mov
enter
out
nop
xor
sbb
mov
sbb
popf
imul
ja
pop
movsb
mov
or
cmp
sti
push
sbb
clc
psubusw
jno
adc
call
sahf
rcll
adc
mov
fcmovnu
ljmp
jnp
push
flds
or
cmpsl
jmp
mov
and
aad
dec
xchg
fiadds
rcr
or
xchg
lret
in
shlb
pop
jbe
hlt
cmpb
fwait
jne
push
mov
unpcklps
sti
mov
ds
inc
mov
jmp
int
push
scas
xor
push
cld
jle
int3
sub
mov
fptan
sbb
mov
ja
pop
bound
lret
out
dec
mov
mov
shrb
push
mov
jp
and
push
fistl
shrb
push
jb
xchg
sub
sbb
scas
popf
xorb
inc
out
mov
adc
fs
cmp
sub
mov
lret
inc
out
inc
rcrb
pop
jmp
sbb
adc
orl
leave
sub
out
iret
in
shl
popa
or
or
mov
fsubs
std
lahf
ficompl
xor
or
loop
jnp
push
push
js
testl
cmpl
inc
leave
imul
push
push
cwtl
push
lock
leave
rcrb
sbb
incl
lahf
push
mov
outsl
fimull
sbb
imulb
fdivr
cmp
jnp
cmp
adc
fucom
push
cmp
popf
cmp
jle
sub
dec
sahf
mov
jmp
ret
and
aaa
cmp
ret
cmp
or
pop
add
add
divl
pop
dec
cvtdq2ps
mov
xor
add
outsb
sbbl
jns
popa
jp
jns
in
test
dec
mov
sbb
push
mov
inc
jmp
loope
in
cwtl
push
cs
adc
and
ljmp
mov
pop
or
and
jmp
fnsave
and
int3
scas
fucomi
insl
lret
jno
sahf
sbb
cmpsb
inc
dec
scas
or
adc
cli
outsl
jo
mov
std
mov
sahf
lods
sbb
cmp
jmp
inc
cmpsl
add
out
or
andl
jmp
aam
adc
mov
leave
and
mov
push
clc
clc
pusha
adc
shlb
dec
mov
imul
cmp
mov
in
and
push
pop
in
push
or
sahf
dec
pop
shl
nop
mov
dec
xchg
addb
enter
mov
pop
ja
loope
incb
in
scas
xlat
in
or
sbb
mov
sahf
loop
ffreep
jmp
xchg
pop
jle
add
mov
sbb
dec
mov
inc
jge
inc
or
jecxz
mov
je
jnp
sbb
xchg
into
xchg
arpl
mov
imul
fnsave
rcr
sbbl
das
ficomps
test
arpl
or
repz
cli
xor
adc
dec
lahf
or
jae
xlat
ljmp
inc
adc
cmp
inc
xor
pusha
xor
dec
js
es
xchg
mov
adc
sub
or
jnp
dec
lods
mov
dec
std
jns
js
pop
mov
cmpsl
sahf
xor
ficompl
fs
popl
xchg
clc
pushf
cmp
and
mov
pop
dec
shlb
jg
sti
inc
mov
scas
xor
icebp
adc
ret
mov
scas
inc
rolb
ljmp
push
aad
cmpsl
leave
fisttpll
mov
int
int
add
pop
addr16
mov
pop
jecxz
pop
xlat
xchg
leave
ja
imul
imul
cltd
and
fadd
sahf
mov
ret
pusha
movl
das
loopne
je
push
lock
or
push
data16
or
insl
stc
stos
std
mov
icebp
sbb
inc
testl
mov
inc
jb
jecxz
mov
out
and
fcomps
sbb
in
lea
ja
fmuls
mov
data16
and
cltd
movb
xlat
fst
mov
dec
adc
push
iret
sbbb
xor
mov
inc
in
mov
imul
push
nop
sub
insb
xlat
or
inc
imul
cmpsb
jp
push
lods
addl
sbb
adc
pop
nop
jge
sub
repnz
sbb
in
push
in
aaa
int
in
shll
sbb
pusha
bound
aad
dec
xor
movsl
xchg
cmpsl
bound
push
cs
xor
sub
push
fisttpl
loope
jp
sub
xor
dec
ret
imul
pushf
inc
sti
pop
mov
inc
inc
adc
mov
and
adc
mov
sub
gs
and
sbb
fistps
mov
ljmp
or
setns
mov
jnp
sub
jnp
sbb
inc
int3
jns
jp
dec
mov
sub
push
das
add
cmpsl
mov
inc
fsubl
sub
push
les
lret
lret
dec
push
adc
push
cmp
sti
xorb
mov
cmp
mov
sarb
sbbb
outsl
fists
pop
sub
in
sbb
dec
jecxz
stos
adc
jb
out
xor
test
mov
push
int
mov
sub
cld
sti
xor
and
outsb
stc
dec
push
stos
sub
and
jecxz
push
test
pop
mov
cmp
sub
jbe
add
xchg
dec
pusha
or
lock
add
lret
xor
sahf
pop
fcmovne
imulb
sub
iret
das
cmpeqps
jge
ja
xchg
into
dec
shlb
mov
in
mov
mov
pop
pop
sub
xlat
enter
sub
mov
imul
movsb
popf
and
adc
outsl
fwait
xchg
movl
sbb
or
ret
adc
sbb
dec
sbbl
xor
aas
push
orb
cltd
mov
subl
sub
jae
sub
sub
das
mov
dec
sarb
cmpsl
mov
popa
lds
push
js
dec
fisubl
cmc
hlt
cmp
pop
mov
push
cmc
stc
sub
jo
cmpsb
shl
add
pop
push
je
inc
daa
inc
paddsb
jb
int
dec
pop
std
jae
mov
xor
outsl
pop
sbb
mov
sahf
xchg
sub
out
lea
push
pop
pop
add
mov
mov
inc
ret
push
mov
or
push
pushf
push
loopne
stc
xchg
sbbb
enter
mov
into
icebp
dec
aad
out
xchg
mov
ds
dec
repnz
inc
cmp
dec
popa
sbb
add
cmp
dec
fidivl
clc
mov
je
inc
sub
inc
mov
mov
adc
cld
cmpsb
sub
xchg
push
insb
sub
mov
pop
cli
ljmp
test
addb
cli
arpl
fisttpl
cmp
mov
push
push
xor
lea
mov
loop
sbb
push
jg
les
leave
nop
subl
out
ja
jns
mov
mov
ja
mov
popf
ds
pop
sbbl
mov
rorb
add
push
or
adc
testb
adcl
std
in
dec
je
or
cmpsb
lahf
inc
icebp
les
pop
inc
dec
inc
sbb
scas
mov
sti
stc
test
pusha
xor
scas
push
xor
fistps
enter
dec
sbb
cmp
push
adc
jmp
cltd
and
mov
fcoms
popa
mov
mov
jg
dec
test
xor
add
lock
adc
call
jmp
int3
int
cmc
js
mov
mov
fists
xchg
stos
xchg
in
and
loop
lock
ja
sub
mov
loop
fsub
jns
jmp
cli
subb
add
fs
popf
lea
out
adc
fs
shrl
xlat
fcomps
out
ja
js
fcoml
loop
lahf
mov
push
popa
mov
adc
test
push
and
cmc
int3
xor
push
mov
jp
xchg
ds
fldt
jg
or
fs
jnp
fldt
pop
pop
xchg
cmp
dec
shll
aam
vrcpps
stos
push
lds
or
cmp
mov
jge
mov
pop
mov
lahf
cwtl
dec
jb
push
pop
lods
daa
or
and
cltd
mov
mov
das
loop
pushl
mov
pop
xchg
adc
jle
jg
pop
shrb
sbb
xor
movsb
and
cli
xor
or
popf
mov
outsl
mov
imul
mov
cmc
rol
stos
lahf
mov
push
int3
mov
mov
repz
test
out
pop
into
std
jbe
inc
adc
jne
movsb
fsubr
clc
cmp
sbb
mov
das
or
outsl
nop
mov
popf
insl
popa
loopne
out
jno
fisttpll
repnz
push
rorb
dec
test
pop
xchg
jns
pop
in
in
push
xchg
test
lods
inc
mov
add
inc
pop
or
or
test
pop
jb
mov
aas
data16
insl
arpl
dec
xor
and
popf
mov
popl
pop
in
fildl
dec
push
fnstenv
mov
getsec
push
cmp
pop
push
pop
rclb
cmp
xor
xchg
xor
shrl
mov
xchg
daa
xor
dec
hlt
fwait
mov
mov
push
testl
jo
jl
jno
xor
aas
xchg
pop
jge
mov
add
ret
leave
fildl
jo
pop
sbb
sub
push
jle
inc
lock
jae
sbb
jbe
adc
fyl2x
xchg
mov
jae
lods
mov
in
sbb
loopne
movsb
cmpsb
sahf
std
cmpl
xor
push
test
sub
mov
je
push
popa
and
inc
inc
and
pop
or
jnp
in
mov
mov
xchg
pop
adc
lods
add
ficoml
inc
loope
xor
int
and
add
push
ja
and
sbb
mov
hlt
jl
lds
ljmp
insb
add
sub
dec
push
adc
push
into
shll
lcall
jge
cltd
fsts
popa
add
xchg
or
shlb
imul
imul
ret
push
rcrl
sub
int
mov
sub
lret
fimull
icebp
xchg
xchg
aad
inc
subb
xchg
mov
es
sahf
leave
inc
jg
shrl
in
jbe
outsl
xchg
movsb
mov
xchg
mov
dec
clc
js
mov
sahf
fisubrl
pop
mov
int
push
push
cmpl
in
clc
ficoml
lods
popa
add
imulb
std
cmp
and
movsl
mov
aaa
cmp
pushf
stc
jb
xchg
push
or
inc
daa
xor
jns
push
ljmp
bndstx
cmp
imul
push
lret
imul
push
jl
jl
cmp
mov
jb
mov
push
sbb
ljmp
shl
test
loop
dec
add
jmp
xor
in
cmp
in
mov
pop
aaa
pop
jmp
adc
imul
cmp
ret
xchg
push
xchg
repz
dec
mov
mov
adc
and
movsl
add
bound
xchg
shll
inc
push
xchg
dec
pop
push
mov
mull
hlt
mov
mov
jnp
dec
xchg
pop
popf
mov
sub
push
push
neg
les
aad
push
pop
jne
or
in
nop
inc
add
push
lds
aam
gs
test
filds
xor
pop
fs
push
push
and
pop
jle
stc
leave
dec
movsb
jmp
imul
mov
adc
into
inc
jbe,pn
mov
mov
or
sbb
push
sub
add
adc
and
dec
aam
mov
sub
dec
out
fidivrl
in
mov
and
add
jae
cmp
setg
xchg
jns
push
inc
jb
test
sbb
add
dec
and
or
dec
adc
pop
push
iret
mov
mov
jns
ret
decb
cmp
out
ja
into
mov
cmc
cltd
push
mov
push
fs
jge
pop
mov
cmp
xor
and
shll
jp
ja
icebp
or
mov
jns
jo
xchg
jp
loope
in
xchg
aam
mov
inc
in
test
push
rcll
ret
mov
add
mov
aad
cmp
cltd
push
rcrb
adc
mov
mov
mov
adc
xchg
cld
mov
fistpll
stos
out
pusha
enter
push
shll
mov
xor
push
pop
push
and
and
push
jg
je
add
data16
stos
adc
rcr
stos
je
lahf
cmp
addl
and
lods
outsl
scas
dec
ja
lock
test
sahf
insb
xchg
sub
xor
fcmovu
adc
dec
addb
shll
hlt
ss
aaa
pop
stc
xor
jge
inc
shll
dec
pop
mov
imul
dec
aaa
rclb
sub
mov
push
adc
data16
jle
adc
shll
in
mov
push
into
insl
imul
inc
adc
loopne
leave
int
cs
jmp
inc
sbb
pusha
pop
lds
adcl
popf
lea
mov
push
mov
movb
ret
ror
add
mov
adc
fwait
mov
or
adc
mov
xchg
cltd
movsb
sub
pop
push
lock
push
sbb
or
xchg
mov
and
loop
or
and
mov
loopne
push
mov
push
jo
dec
and
in
cwtl
mov
mov
mov
xchg
mov
insl
int3
inc
lock
push
jg
cmpb
cltd
sbb
jb
out
icebp
in
jnp
pop
xor
mov
fildl
mov
je
cmpsl
sub
adc
dec
sub
mov
lea
test
in
sbb
jecxz
sub
inc
fmul
addl
push
aaa
sahf
xchg
les
vmovsldup
lock
adc
scas
cmp
daa
pop
add
push
psllq
pop
je
push
jbe
dec
cmc
aad
fnstsw
lcall
adc
push
js
xor
cmp
fs
xor
movsb
jl
pop
inc
cmp
lcall
inc
adc
ffreep
pop
jo
xlat
mov
jae
cmp
xchg
sub
pop
adc
dec
das
jp
mov
movl
in
or
jno
shrb
xchg
sub
js
jbe
push
or
mov
notl
out
xchg
xor
test
xchg
push
fcoml
jne
cmpsl
jmp
add
and
pop
cwtl
cmp
pop
ds
xchg
shll
movsl
mov
mov
dec
scas
andl
sti
sub
add
into
xor
shl
insb
or
mov
insl
jne
mov
add
lds
mov
aaa
mov
push
lea
es
adcb
out
in
test
call
mov
jl
inc
loop
jb
adc
jo
lret
inc
pop
int
inc
fwait
jle
pop
xorl
test
pop
gs
xor
jl
call
or
cmpsl
cmp
test
rolb
cmp
pop
and
xchg
push
add
aad
shl
stos
and
sbb
pushf
sbb
cld
test
repz
lret
das
aad
mov
mov
or
xchg
push
les
mov
cmpsl
mov
adc
xchg
mov
loope
inc
dec
popf
mov
add
int3
pop
and
lock
pop
sbb
ljmp
out
jg
mov
mov
lods
sbb
pop
scas
mov
pop
pop
push
mov
cmp
mov
and
data16
lods
fldenv
fsubrs
hlt
fdivr
xchg
dec
scas
jl
xor
cmpsl
test
jp
xor
jp
scas
enter
icebp
hlt
xchg
gs
mov
mov
xchg
sub
and
test
sti
hlt
mov
push
push
ljmp
cmp
cli
lcall
pop
mov
mov
js
push
sbb
lret
push
or
cmc
add
inc
aas
out
jp
dec
mov
adc
or
aad
nop
filds
mov
sub
fnstenv
testb
mov
push
mov
gs
lret
mov
adc
cmp
pop
ja,pn
adc
adc
mov
pop
std
mov
dec
cltd
ja
loopne
pop
or
cmpsb
cmp
pop
orb
ss
pop
lret
jno
ja
aam
aas
int3
leave
ljmp
dec
xor
roll
and
dec
js
lret
inc
cmpsb
jg
es
outsl
mov
fidivrs
mov
cwtl
daa
push
push
bound
mov
in
mov
cwtl
popa
push
inc
jbe
push
pop
in
dec
out
shll
cltd
cltd
jg
cltd
std
pop
sub
sub
adc
scas
aad
sbb
lods
mov
sub
daa
movsl
mov
shlb
outsb
pop
mov
sahf
arpl
in
dec
lahf
cmpsl
add
and
int
xchg
and
rclb
inc
sarl
or
arpl
sbb
mov
add
sub
cld
mov
insl
pop
cld
or
test
jb
pop
outsl
fucomip
stos
psrld
mov
jg,pn
fstl
inc
nop
inc
fstpl
pushf
xor
inc
int3
inc
mov
adc
push
lock
sub
arpl
xor
out
push
into
loop
jae
sbb
dec
lahf
xchg
cmc
xchg
fcomip
ljmp
js
cmp
pop
pop
stos
jp
or
sarb
mov
pop
loopne
fnsave
nop
add
xor
inc
lds
adc
gs
popa
xchg
sbb
dec
scas
mov
sti
jg
mov
lret
ret
and
movsl
mov
xchg
sub
out
ret
jo
lods
ds
xlat
lock
adc
cmp
lcall
ja
loope
loopne
daa
inc
cs
cmpsb
stos
punpckhdq
insb
push
cmp
pop
jno
jge
jmp
mov
or
push
cmp
in
lcall
mov
add
arpl
test
test
jno
cmp
sub
jb
or
ret
mov
repnz
add
lds
fdiv
cmp
int
dec
cmpsl
sub
sub
mov
clc
sub
adc
fisubs
lds
sub
in
sbb
mov
cmp
dec
and
mov
addr16
jmp
mov
or
les
ja
lods
mov
ror
movsl
das
jg
mov
adc
cmc
mov
enter
jnp
mov
insl
test
shlb
mov
sbb
or
inc
or
testb
dec
inc
loopne
push
sahf
clc
pop
sub
jge
ficoml
arpl
int3
shll
ds
mov
jne
movsb
loop
cmp
aad
jle
push
pop
inc
jb
jecxz
lret
mov
xchg
cli
adc
scas
jbe
jg
in
lret
jbe
jle
fimull
fisttpll
cmp
adc
mov
cmp
arpl
psubd
or
rcll
xor
fwait
xchg
mov
sti
pop
cmp
push
push
je
inc
sbbb
push
sbb
repnz
in
or
add
jmp
mov
dec
push
jae
xchg
stos
or
into
xor
lods
addr16
rcll
xor
test
insb
movsl
sbb
mov
repnz
adc
ret
xchg
add
jnp
sbb
es
cmp
test
xchg
sub
test
pop
push
sbb
lcall
lea
xor
jb
mov
adc
test
mov
test
xlat
test
sub
bound
mov
xchg
inc
jmp
pop
into
movsl
sti
rorb
and
int
pcmpeqb
ficompl
sub
fs
in
mov
movsl
fwait
loop
or
iret
outsl
insl
mov
popa
mov
es
xchg
mov
pop
je
dec
mov
jmp
pop
leave
mov
iret
mov
sub
ret
mov
cli
jno
cmp
mov
mov
addr16
mov
fsubs
fdivr
sbb
jo
inc
and
mov
sbb
clc
imul
pop
inc
xchg
pusha
cld
lods
sub
mov
xor
xchg
orb
data16
or
dec
jnp
sub
stos
mov
nop
fstpt
aas
nop
stos
cmp
mov
fsubrp
pop
shr
mov
repz
fisubl
or
pop
lcall
xor
scas
ja
cli
adc
lret
mov
sbb
shlw
sub
and
rcr
cld
cmpsb
or
lret
das
lods
repnz
pop
xor
xchg
dec
pop
pop
loopne
mov
mov
into
dec
aas
in
lret
inc
ja
push
or
pop
jecxz
into
cmp
hlt
sub
scas
subb
stos
inc
mov
arpl
sbb
mov
loop
xchg
xchg
adc
stos
ljmp
and
cs
jecxz
cli
setae
rorb
sahf
rclb
mov
frstor
push
mov
push
lds
fbstp
xor
add
stos
bound
push
mov
cmp
mov
imul
adc
pop
sub
sub
and
cmp
mov
xor
je
inc
cld
sti
add
cmc
daa
and
pop
arpl
iret
xor
ja
outsl
fs
pop
add
mov
mov
or
mov
jbe
icebp
push
lods
mov
pop
das
jmp
fucom
or
rcrb
or
mov
popa
jbe
adc
adc
fdivs
rcrb
test
jmp
out
add
dec
inc
jo
sub
or
test
xor
negb
pop
lret
lock
mov
push
dec
in
clc
in
in
inc
shlb
push
out
jnp
icebp
xorl
or
cmp
pop
push
cmc
sbb
jl
in
mov
out
scas
pop
cmp
push
sbb
pop
sbb
xor
in
inc
sub
jne
push
lock
int
pop
test
imul
mov
adc
add
pop
aas
lret
jbe
lods
out
mov
jbe
mov
insl
out
nop
add
sbb
rorl
adc
xchg
cwtl
sub
fildll
out
out
and
leave
mov
cmp
cmp
es
or
lcall
mov
cwtl
pushf
mov
mov
sbb
jbe
inc
js
add
pop
inc
lahf
or
and
inc
addr16
orl
dec
mov
pop
stos
daa
mov
icebp
mov
arpl
mov
loopne
ret
inc
sbb
pop
xlat
mov
mov
dec
gs
int
mov
push
cmp
repz
cld
loope
mov
xchg
stos
lahf
push
loope
decl
jno
jbe
loopne
push
ja
or
stos
leave
enter
mov
inc
dec
fxch
in
xor
mov
mov
test
mov
or
adc
mov
dec
adc
mov
push
push
movsl
push
pop
inc
insb
imul
out
pop
sbb
icebp
fcoml
pop
mov
out
cmpsl
sub
or
sub
xchg
clc
inc
mov
push
out
pop
out
addl
bound
cwtl
pop
push
push
and
js
mov
popa
cmc
push
sub
cmc
push
js
mov
scas
pusha
addr16
mov
lods
fistpll
mov
jo
shll
fdivl
imul
pop
mov
ret
dec
ret
mov
jbe
in
mov
ret
push
repz
inc
out
jg
scas
sub
cmc
xor
jnp
in
and
or
rclb
sub
sub
outsb
push
adc
repz
xchg
cmpsb
sbb
add
sti
sahf
repnz
pop
mov
testl
dec
and
out
outsb
sub
push
mov
jb
cltd
sbbb
shll
jle
xchg
lds
cmp
fists
aad
sbb
iret
mov
repnz
adc
aaa
or
jp
shll
or
mov
jb
cmpsl
in
inc
jae
insb
int
push
adc
xchg
cmp
in
insb
out
cmp
daa
jecxz
and
push
iret
fimull
int3
out
int
ds
iret
xchg
pop
xor
iret
imul
mov
pop
je
xchg
cli
stc
sbb
sub
add
fldl
aas
cmpsl
gs
int3
ljmp
jnp
xor
cltd
pop
mov
popa
imul
je
mov
std
lds
jmp
adc
in
es
pop
lea
scas
cli
mov
push
inc
test
cmpsl
dec
pop
sbb
roll
fisubs
pop
repz
dec
xorb
pusha
out
push
out
mov
jge
insb
ja
call
sbb
mov
inc
sub
ljmp
stc
test
clc
push
push
mov
stos
mov
cmc
je
mov
loope,pn
mov
and
mov
stos
and
lea
pop
lods
pop
sub
mul
movsb
and
sub
mov
xchg
movsl
xchg
dec
pop
test
clc
cs
mov
inc
pushf
ss
sahf
and
xor
daa
je
mov
pop
stos
mov
inc
aaa
xchg
gs
sbb
and
cltd
jmp
sbb
cmc
loop
xlat
popa
and
pop
shll
fldenv
cmp
int
mov
or
cs
out
dec
sbb
push
test
es
add
mov
adc
lods
mov
xchg
pop
sbbl
mov
scas
lods
sbb
scas
mov
adc
scas
sahf
ss
push
dec
movsb
push
push
push
daa
repnz
and
mov
cli
dec
nop
fcom
lods
xchg
daa
adc
cmp
push
xchg
dec
add
sub
pop
jne
and
sbb
std
and
mov
and
sbb
sahf
sti
in
push
mov
test
push
inc
dec
mov
sub
push
int
std
push
xor
mov
out
dec
jge
cmp
xor
mov
adc
repz
mov
xchg
jns
push
adc
popa
in
sbb
in
loope
push
adc
mov
mov
movsb
xchg
or
and
rcll
sarb
pop
sbbl
mov
stos
push
shlb
stos
nop
enter
sahf
mov
mov
js
jg
mov
repnz
mov
cwtl
add
cmp
push
call
or
nop
jno
int
cwtl
pop
or
ror
movsl
cmp
jo
jno
push
and
ss
andb
dec
insb
rclb
test
xor
cmpsb
loop
jle
xchg
pop
mov
clc
or
notl
js
pop
cmp
cmp
stc
cwtl
rcrb
sbb
xor
sarl
and
inc
test
pop
mov
jecxz
call
cmpsl
push
jge
ljmp
and
mov
out
mov
cmp
inc
adcl
sub
push
imull
lea
cmp
push
jmp
inc
sarl
out
pop
mov
pop
clc
or
outsl
mov
xorb
adc
xchg
leave
lcall
cmp
or
mull
imul
add
jmp
ds
fcoms
push
sbb
and
xchg
and
mov
push
xor
repz
jno
and
out
xor
lds
scas
fadds
and
mov
enter
fucomip
inc
imul
cmpsb
jl
outsb
jmp
pop
pop
and
push
fstl
out
cmpsl
daa
jae
add
pop
add
xchg
inc
mov
dec
pop
xorl
inc
ss
jae
jmp
popf
push
enter
or
xor
roll
pusha
adc
popf
push
fstl
mov
add
nop
dec
ja
xchg
dec
add
ds
sbb
outsl
daa
cwtl
imul
inc
add
in
mov
loopne
pop
sub
push
fcoml
mov
jno
push
leave
out
mov
and
xchg
mov
mov
mov
push
dec
inc
in
out
dec
or
bound
in
les
mulb
pop
push
inc
add
xchg
push
jb
mov
inc
jecxz
fsts
pop
inc
dec
or
leave
push
js
ret
loopne
xchg
sbb
out
dec
mov
pop
rcrb
cmp
adc
mov
mov
xor
fidivrl
mov
push
sbb
lea
lods
and
fs
inc
or
sbb
pop
insl
loop
cmp
mov
ror
imul
pop
inc
inc
mov
nop
rcr
xor
ret
addb
xor
pop
dec
cmp
mov
movl
test
and
xchg
inc
dec
fdivp
push
sarb
mov
dec
pop
mov
adc
sarb
pop
jp
jnp
icebp
out
rclb
add
lret
fmul
cmp
std
inc
mov
and
nop
lcall
push
test
gs
push
ret
add
ds
mov
enter
push
daa
mov
adc
loope
test
cmpsl
inc
and
xor
push
lock
cmp
cmpsl
adc
stos
pop
enterw
or
ret
inc
dec
lds
ror
xor
and
xor
icebp
pop
mov
call
dec
add
aaa
loopne
dec
or
inc
sbb
dec
movsb
ret
ja
cmp
sub
pop
mov
jecxz
adc
insb
shrl
pop
bound
and
lea
mov
or
fwait
aam
sub
test
and
popa
adc
insl
leave
std
sti
mov
pop
out
dec
es
daa
aas
dec
outsb
es
dec
out
sbb
adc
daa
ss
pushf
das
fcmovnb
in
ret
repz
pop
jae
popf
xchg
sbb
mov
jecxz
cmp
push
mov
adc
stos
lds
inc
hlt
pop
jne
push
jg
stc
in
fnstcw
and
es
js
cmp
pop
cmp
loop
out
dec
addl
in
mov
ret
lods
xchg
arpl
pop
arpl
mov
mov
cmp
dec
add
sub
fcmove
xchg
lea
sbb
imul
clc
xchg
cmpsb
mov
xchg
mov
and
mov
push
fcmovnb
stos
xor
mov
repnz
sbb
inc
sbb
notb
ljmp
in
cmp
test
push
or
push
cli
fnstsw
cs
or
jo
xchg
aad
push
std
pop
and
adc
mov
adc
sbb
mov
aaa
pop
enter
js
pop
push
into
shlb
mov
jno
cltd
in
scas
jl
loopne
push
sarl
psubsw
sub
mov
cmp
inc
out
andl
xor
mov
data16
jb
sbb
xor
test
in
pop
mov
sbb
push
mov
pop
xchg
add
xchg
lods
xor
sbb
adc
jmp
pop
push
rcl
test
pop
arpl
push
jecxz
push
xor
mov
jnp
mov
fwait
sbb
sub
shll
mov
push
pop
and
fldcw
aaa
stc
mov
fwait
cs
adc
mov
xor
repz
out
loope
in
dec
push
scas
inc
xor
ja
out
sbb
pop
sbb
mov
jmp
inc
imul
xchg
mov
or
xchg
dec
shlb
fmuls
sbb
test
or
add
js
fadd
or
sti
bound
std
data16
sub
cmpsl
scas
push
gs
sub
cltd
mov
jo
stos
js
and
jns
jecxz
or
call
enter
lahf
add
jecxz
sbb
je
lcall
push
or
mov
inc
push
fmuls
call
adc
dec
add
mov
aaa
divl
nop
incb
mov
mov
insb
shl
mov
int3
jno
pusha
add
mov
outsb
daa
push
adc
or
adc
push
and
in
jae
dec
pop
repnz
sbbb
addr16
jo
mov
cmp
push
sub
sbb
jne
insl
mov
push
mov
int
mov
cmp
aam
cmp
or
or
sub
in
mov
addr16
mov
rcrb
xchg
lock
daa
lea
sbb
aad
mov
sbb
push
push
popf
mov
popa
push
adc
fs
sbb
bound
loop
mov
ret
jmp
mov
fdivs
cmp
loope
clc
daa
insb
push
cmpsb
fsubl
push
stos
cli
pop
sbbb
lea
jecxz
stc
aas
mov
cmp
enter
repnz
adc
jmp
leave
jne
leave
inc
movsl
pop
jo
aad
mov
in
cmc
sub
jno
add
loope
cmp
pop
and
or
pop
stc
jecxz
out
fmulp
cmp
insl
or
xchg
jecxz
rcrl
test
shll
movq
in
xchg
out
or
jo
test
lods
xchg
mov
lds
out
sbb
sbb
in
flds
movsl
and
sbb
and
test
fwait
mov
mov
sti
inc
lahf
or
js
add
push
cmpsb
testb
cltd
mov
je
shr
xor
in
sti
add
clc
jge
mov
gs
cmpsl
ret
scas
push
pop
inc
ds
and
xchg
sahf
movsb
inc
inc
js
ljmp
mov
pop
fcmovnbe
dec
mov
mov
mov
mov
bound
mov
push
aaa
add
out
pop
repz
mov
out
xor
push
cwtl
loope
fsubrs
cmpsb
hlt
ror
add
jl
sbb
pop
jae
clc
sahf
cmp
sub
movsb
ret
xor
aas
mov
inc
jae
jle
mov
and
sbbl
lret
mov
sbb
mov
fstps
xchg
repnz
inc
fdivs
pop
jecxz
bound
mov
andb
loope
adc
in
movsb
inc
adc
mov
outsb
rorl
push
and
loope
jne
sbb
adc
add
jnp
int
jnp
sbb
mov
popa
fs
push
and
clc
int3
das
dec
testl
mov
push
mov
ret
repz
cmp
aam
jp
gs
outsl
movsl
outsb
mov
aaa
add
jle
pop
add
add
bound
adc
pop
jno
mov
push
cmpsl
mov
adc
rorb
sbb
fadd
mov
sahf
jae
es
and
push
mov
in
dec
les
add
cmpsb
pmulhuw
mov
fwait
jecxz
rol
xor
sbb
sub
das
mov
fcomps
pop
lea
jnp
or
inc
test
mov
adc
xor
or
std
lea
lcall
xor
sub
movsb
push
sbb
xchg
mov
jmp
mov
cmp
sub
adc
addb
add
cmp
sbb
sbb
sbb
mull
call
xchg
or
nopl
xlat
adc
or
movsb
sub
push
nop
jnp
mov
mov
fucom
mov
or
cld
push
in
lret
cs
jp
push
mov
sbb
dec
mov
mov
xchg
shrl
xchg
jno
cmp
cmpsl
clc
lea
push
unpckhps
xchg
pop
inc
hlt
mov
into
in
lods
cmpsl
pop
sub
ss
or
imul
mov
sbb
adc
mov
jo
test
movsb
push
nop
and
dec
in
repnz
push
cwtl
mov
jp
push
mov
cmpsb
add
arpl
out
sub
xchg
aas
iret
dec
out
pushf
jo
cmp
pop
addr16
inc
mov
mov
je
jns
sub
mov
lcall
lock
ds
in
popl
leave
sub
and
push
int3
scas
fstps
fisubrl
sub
outsb
jmp
sub
ljmp
jmp
mov
mov
pop
jle
pusha
insb
sub
pop
xchg
xchg
mov
rorl
sbbl
lods
push
rolb
dec
or
std
lods
sub
mov
pop
and
gs
js
and
mov
jmp
mov
jle
leave
cmp
fwait
outsb
push
and
jmp
sbb
mov
ficoml
fdivl
stos
bound
xor
cltd
cld
mov
pop
add
insl
sbb
adc
addr16
rorb
rcrl
aas
sub
pop
mov
dec
mov
xor
pop
in
add
mov
pusha
mov
dec
fsubrl
insl
sub
popa
movsl
mov
add
jecxz
je
inc
ss
lret
fucomp
mov
add
pop
add
scas
cmp
xor
jle
test
aas
negl
lods
lcall
sbb
xchg
je
mov
mov
or
testl
mov
xlat
pop
aad
adc
scas
das
pop
fstps
and
cwtl
cmp
hlt
adc
rorb
arpl
pushf
push
push
dec
lock
scas
insb
adc
ret
lods
push
push
adc
mov
movsb
movsb
cmc
rcll
bound
adc
lcall
and
inc
or
push
icebp
or
or
cmp
outsl
repnz
inc
in
insl
jle
out
add
mov
arpl
push
movsl
push
push
and
xchg
call
inc
adc
divb
stc
test
jo
mov
dec
into
cmp
inc
mov
iret
or
lods
mov
arpl
es
sbb
out
lahf
jp
and
inc
mov
inc
or
xlat
cwtl
xor
aam
jmp
inc
cmp
push
lret
xlat
xor
mov
leave
push
and
xor
push
ja
imul
ror
and
xchg
out
pop
out
mov
push
adc
loop
dec
imul
mov
rolb
fwait
dec
push
and
sub
mov
cwtl
mov
dec
pop
add
and
mov
ljmp
cmp
int
leave
adc
pop
daa
ss
xchg
xchg
sbb
jl
jns
scas
out
xchg
stos
jmp
loopne
cmp
or
test
lods
fiadds
popa
sbb
lock
fidivs
cmpsl
aaa
mov
jecxz
inc
ss
cmp
stos
imul
sahf
jo
insl
fldt
movsl
pop
popa
repnz
leave
xchg
and
ljmp
mov
pop
into
in
xor
sbb
inc
popf
addl
mov
repz
cmp
movsl
mov
loop
push
sbb
out
gs
shrb
movsl
scas
jb
iret
or
popf
jnp
ret
or
jo
sub
push
jle
cmp
push
ret
pop
int3
inc
pushl
sub
xor
or
push
or
adc
setb
leave
adc
mov
es
dec
pop
inc
stc
pop
fiaddl
pop
lahf
add
inc
clc
jle
sbb
jns
lock
xlat
or
mov
add
cmp
mov
dec
pop
pop
add
popl
out
js
fstps
push
into
add
ret
jge
mov
scas
pop
repz
jp
jne
sti
pop
lret
shl
sbb
xchg
or
mov
xchg
and
les
aam
cmp
dec
push
mov
lds
add
imul
xor
jae
sub
sbb
dec
jo,pn
cmc
in
orl
sbb
dec
and
cmp
jmp
dec
xchg
popf
mov
nop
add
lea
enter
aas
cli
sarl
or
xchg
lret
scas
inc
cli
int3
xchg
mov
out
xchg
test
inc
shl
gs
daa
add
fdivrl
push
inc
addr16
stos
cld
andl
sub
cmp
and
pop
sub
mov
call
mov
jne
dec
or
pop
cmpsb
ret
popa
adc
jecxz
fucomp
sbb
adc
bound
adc
jmp
mov
movsl
fnstsw
and
mov
les
cld
mov
aam
mov
or
je
cmp
inc
pop
inc
mov
inc
push
mov
push
jbe
cltd
and
fldl
xchg
push
fadd
cld
ret
adc
imul
test
adcb
sub
iret
out
push
mov
clc
insb
iret
inc
pop
sahf
fdivl
popa
std
lret
stc
mov
xchg
movsb
inc
and
dec
scas
jne
pop
shr
fldenv
aas
out
dec
xchg
roll
add
xchg
sbb
subl
adc
daa
les
pop
mov
ror
ja
aas
mov
movsl
adc
dec
sbb
clc
mov
test
jo
cld
pop
loope
add
rcrl
int3
adc
hlt
push
sbb
js
rcl
inc
or
dec
lea
or
mov
inc
xor
sub
adc
push
lret
test
lock
mov
sub
das
sub
out
shl
repnz
orl
ljmp
sbb
push
dec
lods
push
les
cltd
out
cltd
std
mov
pop
fs
add
je
in
adc
jmp
xchg
mov
sub
sub
orb
xchg
add
repnz
xlat
inc
mov
jnp
dec
push
xor
daa
sbb
stos
fwait
sbbl
in
jle
sbb
dec
inc
insb
xchg
out
jp
ss
sub
pop
xchg
add
test
or
jae
insb
mov
xchg
add
adc
fldt
shlb
lea
xchg
push
ds
lods
divl
add
negl
mov
jbe
call
dec
xchg
push
dec
pop
inc
pop
sbb
fsubp
lea
aaa
push
lret
sbb
jle
shr
xchg
push
fisttpll
lock
pop
test
cmp
cwtl
iret
mov
popa
mov
loop
outsl
push
stos
jp
jle
lods
dec
outsl
mov
rcrl
mov
fucom
push
mov
gs
arpl
sahf
cmpsl
add
push
mov
iret
sar
cmpsb
cmp
fwait
test
cmp
in
in
push
xor
mov
shr
jno
pop
sbb
lea
cli
mov
pop
iret
imul
sbb
cmpsl
dec
cmc
addb
imul
inc
or
ret
sbb
adc
jo
sub
adc
cmpsb
andl
mov
cmp
adc
leave
pushf
out
cmp
mov
dec
es
enter
jo
push
and
mov
testl
fists
mov
ljmp
inc
cmc
sbb
xchg
les
cmpl
sbb
adc
push
mov
lahf
cmp
inc
mov
sbb
sub
or
inc
lods
mov
mov
push
add
int3
aas
fisttpl
les
test
cmp
sub
fmul
in
aaa
lds
fiaddl
sbb
pop
notb
mov
addb
imul
cli
push
mov
mov
mov
negb
or
cwtl
pop
jbe
dec
cld
or
les
inc
sub
scas
xchg
pop
leave
or
pop
dec
popf
xchg
rcl
cmp
jl
in
leave
or
mov
xchg
pusha
xor
xchg
mov
frstor
data16
stos
xor
js
fwait
inc
pop
jns
inc
or
and
mov
jp
test
stc
cwtl
leave
rcr
push
cltd
in
adc
and
dec
nop
fwait
xchg
xor
or
mov
lea
jns
mov
dec
cltd
into
push
and
pop
shrb
std
jb
jecxz
test
in
jnp
arpl
xchg
xor
dec
cmp
push
mov
dec
inc
push
sub
jecxz
xor
ret
jns
sar
mov
pop
scas
gs
shlb
movsl
lret
sahf
push
in
shll
aaa
icebp
and
hlt
out
cmpsl
fcomps
or
mov
jp
cli
enter
jae
mov
xor
clc
dec
push
scas
outsb
mov
jno
loop
fmulp
pop
stos
jbe
sbb
or
sbb
fsubrs
ja
rcrl
and
sbb
clc
mov
xchg
idivl
mov
es
and
adc
or
fs
or
mov
fldenv
inc
jge
xchg
rolb
and
mov
push
adcl
arpl
adc
pop
repz
test
lds
inc
pop
rcr
jb
roll
and
lcall
xor
jae
sarl
into
cmp
fdivp
add
cmp
jle
divb
mov
jno
out
add
inc
iret
sbb
jb
push
jbe
add
std
pop
sbb
mov
push
inc
aaa
fisubs
in
push
loope
ss
out
in
daa
pop
lods
xchg
std
test
xchg
fisttps
ret
gs
xchg
out
mov
ds
sub
imul
cwtl
daa
shll
sub
mov
sub
sub
mov
push
mov
xchg
lock
out
adc
ljmp
aam
pop
cmp
or
clc
jle
jecxz
mov
in
dec
cmc
xor
ljmp
rcl
jo
mov
in
sub
jecxz
push
aam
repnz
in
aam
jmp
push
inc
fisttpll
mov
rolb
fidivrl
jne
lea
into
pop
jmp
ret
and
mov
cmp
ret
bound
enter
mov
dec
andb
xchg
ja
dec
and
aaa
push
push
das
mov
pop
sub
lahf
std
inc
cmp
dec
adcb
pop
dec
addr16
pop
call
ljmp
xlat
jbe
cmp
pop
movsb
and
sbb
lods
adc
mov
stc
pop
or
xor
jb
sub
push
jne
and
fld
mov
icebp
lods
or
jge
and
rorb
repnz
mov
out
mov
sbb
fadds
scas
sbb
pop
lea
adc
out
jb
inc
mov
movb
jle
sub
mov
test
mov
dec
jae
pusha
inc
push
daa
out
xor
mov
sbb
xor
aad
loop
inc
es
mov
jno
les
lock
ret
push
rcrl
int3
jmp
ja
mov
pop
ljmp
mov
lods
sbb
icebp
push
icebp
repnz
scas
jbe
loope
inc
test
sti
xor
or
sahf
std
jns
psubusb
pusha
inc
stc
lret
mov
mov
sbb
fisttpl
arpl
ffreep
jnp
pop
add
inc
xchg
imul
mov
ficompl
in
or
sbb
and
loope
cmp
jno
jge
sahf
mov
sub
xchg
pop
aam
add
daa
adc
push
sbb
mov
mov
loop
pop
pop
in
jl
mov
push
mov
adc
xchg
es
lret
jne
mov
sub
push
sbb
and
inc
testl
test
mov
jns
out
insb
movsb
std
mov
jno
ret
loope
mov
push
cmp
and
cmpsb
adcb
add
out
push
pop
sub
cld
out
in
adc
out
outsb
dec
xchg
xchg
xor
push
je
push
push
fistps
xchg
jp
test
jb
and
or
add
icebp
xor
rol
and
in
xchg
inc
or
repnz
test
mov
jno
test
cmp
or
xchg
mov
sbb
hlt
adc
pusha
and
and
pop
xchg
out
xor
and
mov
mov
adc
jne
mov
orb
movsl
imul
sbb
vpmaxub
jecxz
cmc
xchg
popf
pop
pop
xchg
push
call
inc
push
xor
loop
ss
and
je
jnp
sbb
inc
jmp
subb
repz
and
mov
jo
pop
aaa
lret
repnz
jo
jbe
sub
outsb
mov
mov
sub
sti
xor
sub
xchg
sbb
or
in
adc
xlat
cmp
das
dec
leave
orl
and
add
lea
clc
cwtl
test
out
data16
lds
push
and
pop
rcrb
addb
sbb
jmp
sbb
mov
stc
cwtl
out
loop
pop
dec
and
mov
inc
adc
jge
adc
clc
mov
scas
test
inc
inc
ss
rol
inc
int
insb
inc
das
mov
add
and
cmp
jl
scas
pusha
sub
sahf
cmpsb
pop
int3
clc
in
repz
and
sarl
pop
test
pop
pop
cltd
pop
xor
cltd
jne
push
movsb
stos
hlt
movsl
cwtl
inc
push
push
insl
mov
xchg
pop
push
sarb
pop
inc
faddl
out
pushf
pop
sub
mov
sub
leave
mov
in
add
jmp
inc
jns
mov
xchg
push
stc
add
scas
jle
adc
dec
bound
and
add
xor
add
cmpsl
arpl
adc
into
rcr
mov
mov
insb
fnstsw
mov
scas
loop
inc
xor
and
movzbl
cmc
ds
out
arpl
sbb
pop
add
dec
dec
popf
mov
call
lds
aad
adc
aad
cmp
cmp
subl
lmsw
movsb
xchg
fisttpl
loopne
mov
hlt
leave
sub
enter
sahf
lret
icebp
stos
ret
sbb
jge
adc
sbb
das
leave
ret
data16
mov
test
fcmovnbe
dec
mov
inc
fstl
xor
lods
push
mov
push
aad
rolb
data16
adc
outsl
leave
ja
adc
push
shll
rcl
push
or
jb
pusha
mov
mov
sar
in
inc
dec
fistps
loop
mov
mov
pop
mov
push
pop
inc
inc
mov
mov
inc
es
push
xlat
mov
sbb
jae
xchg
jp
adc
add
adc
push
mov
lds
and
call
pop
fisttps
pushf
das
pusha
add
sbb
adc
jecxz
dec
push
icebp
mov
xlat
fldenv
pop
fisttps
js
in
shl
fimull
dec
shlb
testl
xchg
xchg
pop
xor
leave
push
or
or
inc
rol
cmpb
dec
test
inc
test
std
dec
ror
ja
jno
ds
loop
jl
js
pusha
sub
and
insl
push
inc
imul
ret
add
outsb
sub
adc
fldt
mov
hlt
das
mov
pop
push
lds
pop
rcll
int3
push
daa
and
xor
mov
jmp
cmp
adc
xor
lahf
out
add
or
lret
inc
cmp
jns
adc
sar
jle
lods
sub
aad
dec
jnp
cmp
cmp
sub
rclb
enter
mov
icebp
pop
add
sub
mov
cltd
adc
or
cli
ja
jmp
sbb
testb
or
nop
jb
daa
and
jbe
cs
jg
sbb
mov
divl
xor
sub
push
inc
ret
inc
jns
mov
mov
jge
push
aam
mov
jle
mov
loopne
jg
ret
jge
push
jp
inc
dec
jmp
mov
mov
sarb
pop
aas
mov
and
inc
daa
imul
cmp
and
add
scas
push
clc
cmp
outsl
into
ds
add
pushf
push
loopne
mov
inc
lock
scas
push
xor
or
fisubrl
and
mov
addl
push
data16
outsl
cmp
loopne
ss
mov
lret
loopne
loopne
mov
stos
clc
adc
mov
mov
ljmp
jb
es
cs
ljmp
pop
insl
arpl
lret
pop
mov
bound
dec
add
mov
mov
mov
cmp
sahf
cmc
add
mov
cld
push
mov
movsl
fistps
dec
add
pop
ss
jmp
xchg
dec
add
out
pop
lahf
loopne
push
fwait
jno
icebp
pop
mov
repz
lret
lock
mov
out
scas
cmpsb
push
add
movups
adc
stos
or
in
jb
sub
lods
add
push
inc
cld
mov
mov
pop
sbbb
xor
sbbl
aam
enter
ss
pop
mov
dec
jl
inc
scas
xchg
lcall
mov
cltd
sbb
hlt
cld
dec
pop
jns
inc
push
xor
cmc
je
stos
sub
pop
sbb
cmp
hlt
fs
pop
add
adc
imulb
cmp
mov
pop
sub
pop
adc
sbb
mov
lcall
jle
sub
ja
aas
lea
jne
mov
nop
cmp
xchg
shll
xor
sub
dec
lret
cltd
cmp
data16
dec
popf
lcall
call
ss
sub
cmpxchg
and
shl
mov
pusha
or
push
cltd
movsl
adc
sbb
popa
mov
aaa
outsb
jecxz
fadd
cwtl
mov
lfs
pop
and
dec
lods
push
fildl
test
dec
sti
lret
cwtl
loopne
fadd
daa
xor
xchg
dec
enter
push
inc
inc
dec
jg
imul
lock
sub
lods
pop
imul
addr16
add
adc
scas
int3
and
ss
pop
decl
popf
mov
mov
sub
fstl
and
pop
push
cmp
push
aas
int3
test
into
jp
mov
or
stc
jae
int
xor
add
mov
test
repz
ds
sub
xchg
xor
xor
cmc
pusha
push
fsts
loopne
mov
adc
dec
les
scas
ret
inc
mov
add
xorl
sbb
stc
imul
mov
dec
ljmp
sbb
jb
mov
adc
fmul
aam
push
in
scas
push
aas
pandn
jle
adc
mov
repnz
add
sbb
test
les
cmp
xchg
aaa
fcmovne
lds
mov
ror
mov
pop
dec
xor
add
stos
push
stc
icebp
cmp
cmpb
xchg
mov
adc
ror
rolb
fdivrp
stc
enter
aaa
push
push
sti
xor
inc
jae
dec
popf
xor
cmp
sub
cmc
es
inc
addr16
jnp
movsb
jmp
and
dec
adc
aad
insl
xchg
mov
or
fldt
cmpsb
rcrb
lock
xchg
push
mov
sub
dec
adc
ficoms
jbe
xlat
int3
movsl
jae
imul
lea
mov
lret
lea
pop
jl
jae
inc
jecxz
andb
lret
push
ljmp
push
sbb
jbe
insl
adc
push
addr16
mov
push
inc
mov
out
test
mov
mov
xor
push
lahf
mov
push
mov
sahf
and
fistpll
push
mov
popa
rorb
mov
pop
mov
pop
jne
popf
sbbb
pop
pop
or
ja
sbb
ss
mov
jbe
push
shl
orb
lock
ljmp
cmp
test
and
push
loop
pop
aad
iret
cltd
xor
xor
ret
jne
sahf
cmp
ss
in
mov
aas
pop
or
cmp
add
cli
enter
xor
sub
popf
push
pushf
xchg
pop
cmp
push
push
pop
fdiv
pop
push
pop
sbb
xor
movl
in
mov
sarl
je
dec
lcall
push
int
rcrb
and
pop
cwtl
rcrb
dec
pop
pop
jg
andl
pop
or
or
cmp
jne
cmp
jns
leave
jmp
sahf
cltd
bound
xchg
cmp
inc
imul
sub
sbb
pop
fbld
pop
call
push
pop
icebp
das
cwtl
mov
mov
sti
cmp
jo
lock
rcrb
mov
and
nop
out
mov
ds
mov
data16
mov
cli
fdivl
cltd
lret
call
das
inc
lods
lods
stc
stc
decl
xchg
or
jge
mov
sub
jecxz
mov
push
or
xchg
pop
mov
mov
and
pop
adc
jle
sbb
arpl
mov
fisubrs
inc
jmp
test
cmp
mov
stos
add
mov
or
ljmp
in
ja
xor
dec
cmp
outsl
mov
add
das
cmp
mov
movl
hlt
leave
ds
bound
lret
push
jmp
add
testl
pop
imull
jmp
mov
xchg
outsl
leave
out
clc
mov
cmp
dec
popf
adc
xchg
dec
or
or
popf
jge
arpl
jns
cmpsb
push
xor
orb
mov
std
ror
mulb
add
mov
insb
testb
out
sbb
outsl
sahf
jbe
sub
int3
inc
imul
push
inc
mov
push
adc
pop
out
test
dec
jae
sub
pop
js
dec
jo
jnp
mov
inc
mov
fcmovb
mov
dec
idivl
push
test
push
frstor
jb
jbe
jo
scas
cmpsb
stos
arpl
push
and
outsb
and
cltd
mov
daa
xor
cld
adc
sti
popf
ss
cmp
test
int
rol
or
rcr
fstps
cmp
sahf
mov
notl
loope
std
sbb
js
jno
in
das
push
clc
in
sbb
push
mov
cltd
shll
pop
mov
mov
int
icebp
call
out
js
aad
inc
andl
sub
cwtl
adc
lods
pop
bound
lods
pop
mov
ficoms
lret
xor
ja
es
fsubr
mov
inc
cld
jge
lret
and
popa
lods
add
ret
jo
rol
scas
arpl
into
push
or
jb
and
mov
pushf
and
xchg
cmp
add
inc
imul
cmp
inc
sbb
pop
lret
add
xchg
mov
dec
add
leave
stc
xor
xor
xchg
pop
sub
and
negl
sbb
je
fldlg2
imul
leave
mov
add
and
inc
push
jge
cmp
adc
push
mov
stos
and
adc
jmp
xchg
test
repnz
sbb
ljmp
scas
and
xor
sub
sub
mov
cmpsl
sub
gs
cmpsb
mov
mov
adc
xor
adc
jne
mov
cmp
test
mov
lea
iret
aaa
sti
lods
or
sbb
fisubl
enter
subl
mov
fistpl
and
stos
or
cltd
sti
jbe
jge
xchg
fisubl
lret
lret
pop
out
pop
mov
cltd
dec
pop
inc
dec
xor
ret
pushf
inc
mov
sbb
iret
mov
xor
imul
mov
and
dec
xchg
add
push
in
sbb
inc
jo
add
mov
idivb
adc
ror
xchg
mov
jg
mov
inc
add
cld
push
clc
daa
push
dec
ret
mov
ds
jne
test
arpl
jne
outsl
mov
fsubl
aad
xchg
jmp
scas
push
mov
mov
lock
cmp
xchg
leave
sbb
stc
xchg
in
imul
leave
mov
fcoms
aad
fbld
cmp
dec
mov
xchg
add
mov
jecxz
popa
xchg
sbb
popa
jnp
sbb
cs
shrb
icebp
aas
scas
mov
mov
mov
mov
lcall
out
imul
xrelease
fidivs
test
xchg
dec
lcall
adc
ds
test
js
outsl
gs
ss
lods
sub
push
jp
or
cmc
fwait
add
dec
sbb
and
es
stos
pusha
pop
rol
or
adc
inc
add
scas
subb
out
nop
gs
cmp
mov
cmp
sub
jnp
jge
test
hlt
mov
xchg
xchg
add
rolb
sub
std
xlat
pop
sbb
inc
and
addr16
aaa
mov
fptan
lock
dec
cwtl
ret
push
jbe
insb
out
test
sbb
fimuls
shlb
rcrb
and
mov
push
rcrb
dec
in
aam
loope
pop
jne
jno
in
lret
fwait
adc
mov
pop
mov
add
push
cs
popf
xchg
inc
sbb
cmovge
fscale
and
shll
scas
xor
jnp
sub
rorb
push
cmp
sbb
cmp
fs
add
jbe
push
cmp
push
shlb
jns
xchg
ds
xlat
mov
push
dec
adc
mov
notb
aad
xchg
stos
icebp
dec
push
popa
outsl
or
movsl
xchg
fwait
je
sub
sbb
fldenv
and
pop
push
mov
jmp
cmp
adc
push
into
outsl
in
jmp
fcomps
cmp
and
sbb
das
ja
dec
lret
mov
test
mov
icebp
cs
subb
mov
sub
test
mov
dec
shll
ja
fiadds
lahf
fildl
mov
fs
inc
dec
addr16
xor
stc
mov
pop
push
call
jmp
lods
sbb
push
dec
dec
mov
dec
jne
adc
xchg
popf
and
sub
in
dec
fsubrp
ds
mov
mov
mov
clc
mov
inc
sub
scas
inc
mov
and
clc
dec
and
mov
xchg
lea
mov
sarb
push
mov
popa
or
ret
cmp
fistl
mov
fucomi
in
addl
jae
fistl
incb
sub
fstp
xor
add
rcrl
mov
dec
ret
pop
std
mov
test
nop
test
xor
decb
xor
pop
cmpsl
cmp
xlat
into
js
push
sub
sub
fcomps
nop
ds
pop
std
dec
into
gs
int
add
mov
leave
mov
pop
mov
and
imul
jbe
and
sahf
mov
stc
repz
movsl
sahf
sbb
push
test
push
mov
xchg
sbb
dec
mov
jo
cmpsb
or
pusha
inc
sti
jle
and
jp
mov
lcall
mov
mov
dec
mov
xorb
and
psrld
push
mov
cmp
mov
mov
andl
std
sbb
sahf
and
push
cli
and
test
icebp
add
test
jae
jg
add
cmp
outsb
mov
cmp
loopne
xchg
shrb
fadds
aas
pushl
repnz
popf
sbb
cmc
fs
jno
mov
sbb
addb
mov
push
jae
xchg
push
jecxz
in
inc
sub
adc
inc
add
or
adc
and
add
sbb
cmp
jge
add
push
icebp
xor
pop
or
leave
fidivrl
pop
mov
mov
mov
jne
inc
push
out
iret
jns
or
inc
cmp
insb
sub
clc
pop
mov
jae
inc
pop
mov
inc
sub
add
jbe
dec
aam
shrb
push
sub
sti
adc
fnstcw
pop
xchg
rclb
or
pop
or
mov
mov
sub
shlb
lea
ret
mov
fnstenv
push
cmp
lock
jo,pn
xlat
outsb
call
ja
stc
mov
inc
jmp
jb
mov
sbb
mov
inc
push
subl
push
jecxz
rorb
lock
cmp
pop
pop
lret
xchg
and
mov
cmp
test
push
jb
lahf
add
cmc
cwtl
cmp
int
in
ljmp
cld
dec
loop
pop
insb
cli
ljmp
sub
stos
sbb
aad
xor
pop
mov
xchg
into
data16
arpl
fcompl
xor
push
in
jbe
cmp
cmp
push
xor
out
mov
ds
jle
cwtl
insl
mov
fiaddl
jne
ss
push
repz
fld
test
sarb
out
pusha
fsubrs
adc
mov
push
imul
pop
subl
scas
pop
pop
add
or
xor
push
jl
jns
sbb
mov
shll
cmp
outsl
cmp
xor
jge
push
sub
aas
les
aaa
and
loopne
sub
push
repz
mov
stc
or
insl
in
cmp
pop
fisttpl
loop
pop
popa
sbb
iret
mov
add
lods
or
repnz
insb
push
in
push
lahf
pop
xor
enter
adc
jno
cmp
jp
dec
lcall
jle
or
pop
inc
xchg
cmp
jecxz
out
call
sub
cmp
xchg
je
sbb
insl
iret
stc
cltd
sarl
js
clc
fwait
lret
or
aaa
shl
mov
jne
insl
dec
cld
xor
bound
xchg
popw
pop
es
mov
xchg
and
cld
in
add
jle
nop
xchg
cltd
icebp
aad
or
sub
mov
sbb
mov
cmp
sub
iret
out
in
cmpsb
push
jmp
mov
das
dec
call
fidivrl
addl
daa
into
stos
or
sub
mov
push
sub
add
std
dec
cltd
sarb
and
int
mov
adc
sbb
add
outsb
cli
mov
sub
mov
lret
adc
bound
sahf
xchg
stos
pop
push
mov
stos
cmpsl
push
or
mov
adc
push
repnz
pop
fstl
dec
and
mov
cmpsl
lds
pusha
movsl
enter
inc
ljmp
mov
pop
sub
pop
xor
cwtl
fcomip
dec
xlat
jno
fstpt
adc
idivb
mov
pop
gs
push
add
or
clc
shrl
mov
loope
lods
lods
inc
out
lret
jo
mov
and
xchg
iret
hlt
stc
or
popa
mov
jb
int3
xor
repnz
cmp
push
cmpsb
cld
sub
ss
push
insb
add
xchg
lret
jne
hlt
add
mov
sti
adc
sub
leave
jmp
add
aam
fs
cmp
cmp
out
add
imul
out
xor
cld
shll
movsl
pusha
push
mov
pop
cwtl
cmc
test
or
jg
dec
loop
sbb
lods
push
jecxz
aas
cmp
mov
std
cli
dec
out
fcmovb
icebp
xchg
push
or
jno
faddp
gs
sbb
xchg
inc
pop
outsl
dec
fldl
push
mov
nop
shrb
stos
mov
pop
xchg
xor
xchg
insl
frstor
dec
mov
jge
loop
jbe
or
jbe
sub
es
jle
jl
test
inc
stc
push
and
das
pop
fucomp
xor
push
xlat
stc
jle
das
mov
or
rcrb
xor
es
pop
imul
dec
sahf
xchg
sbb
jmp
sahf
pop
outsb
sub
xor
jb
aas
lods
subl
in
subb
test
mov
lcall
jae
cs
mov
dec
cli
xlat
pop
sbb
lcall
mov
push
mov
stos
mov
int
sti
cwtl
mov
popf
stos
add
or
fsubl
add
arpl
dec
rorl
and
adc
jg
out
jne
gs
dec
nop
or
testl
jle
rcl
nop
fcomip
mov
push
mov
bound
das
xchg
repz
int
and
or
sbb
orb
push
sub
adc
rol
push
jp
inc
lea
fisttpll
cmp
daa
push
cld
mov
das
insb
imul
stos
inc
push
jbe
sbb
mov
and
dec
cli
sub
and
mov
xchg
ficomps
and
cltd
enter
in
jnp
out
mov
or
divb
imul
jae
cmpsb
adc
fcomps
popa
fxch
or
mov
mov
pop
outsl
jns
in
push
xchg
scas
fcmove
loop
into
mov
sbb
xchg
test
cli
push
aas
push
ja
int
and
mov
pop
xor
aaa
fdiv
inc
or
scas
popa
sbbb
sbb
jbe
inc
mov
mov
mov
mov
mov
fistpl
lret
add
test
pop
push
andb
pusha
mov
stc
les
mov
inc
jecxz
lds
scas
les
test
xlat
cmc
ret
stos
or
mov
test
nop
lods
cmpsb
lcall
dec
inc
pop
cld
out
pop
xchg
xor
mov
adc
jp
das
and
adc
add
mov
ds
add
aad
aas
gs
scas
sub
mov
daa
int
pusha
and
int3
enter
lds
loope
fucompp
cmc
and
shl
or
sbb
add
sbb
int
aas
out
cmp
xchg
dec
push
inc
insb
push
repz
jb
js
jl
ja
pusha
loopne
jp
gs
lret
scas
sub
inc
mov
scas
shl
jecxz
mov
pop
push
add
dec
out
jp
pop
cmp
or
ret
lds
mov
adc
sub
inc
pop
mov
cwtl
subb
cmp
mov
cmpsb
lret
dec
fimull
stc
cmpsl
push
sbb
add
add
inc
pop
pop
mov
adc
push
mov
adc
in
xor
out
sbb
pop
out
adc
popf
idivb
imul
mov
sahf
arpl
lret
out
fldl
and
mov
ds
shll
sub
mov
jns
pushf
push
add
adc
loop
test
sbb
add
fs
xchg
fiaddl
or
in
test
imul
call
xchg
ja
adc
shlb
cmc
imul
cltd
cmp
xchg
cs
mov
popf
jmp
ja
out
push
mov
js
jge
add
mov
pop
inc
ljmp
aam
ret
cli
roll
jae
xchg
cltd
cmp
inc
inc
xchg
lcall
std
inc
sti
in
mov
push
jecxz
repnz
sub
push
fiadds
cmp
push
pop
and
jecxz
or
pop
mov
test
dec
das
xchg
test
cmc
xchg
jmp
and
sahf
or
push
je
out
jl
filds
es
js
in
gs
mov
pop
push
mov
adc
lret
mov
mov
jg
dec
xchg
arpl
ds
xor
push
sub
lret
mov
mov
mov
pop
ret
out
mov
jbe
add
in
mov
iret
outsl
sub
cmp
adc
sub
fs
out
insl
lahf
or
push
mov
inc
xchg
inc
and
or
leave
xor
jns
jno
leave
movsb
dec
lcall
jl
and
mov
jb
xchg
sbb
xor
aam
imul
or
jns
inc
clc
mov
mulb
leave
popf
or
push
pop
repnz
mov
sbb
mov
sahf
out
adc
outsl
fsubr
jbe
fldenv
pop
stc
popf
pmaxsw
mov
or
ret
ds
adc
jmp
sahf
cmp
add
mov
jno
xor
in
xchg
lret
pop
xchg
outsb
adc
lcall
jmp
lret
mov
jge
stc
jne
xchg
daa
in
popa
gs
adc
movb
inc
andl
or
ds
ficoms
bound
adc
in
lods
popl
or
test
mov
seto
or
repz
add
push
mov
jge
inc
cmp
rorb
xchg
pop
push
cltd
mov
push
dec
sahf
sbb
aam
and
mov
lods
ret
xchg
pop
push
mov
sbb
scas
push
mov
cli
xchg
lret
pop
enter
add
xor
fwait
xchg
hlt
clc
stos
insl
dec
or
jnp
or
fistl
icebp
adc
jbe
out
jbe
or
into
jbe
cwtl
popa
testb
jb
daa
cmc
mov
rorb
sub
mov
mov
xchg
lods
sub
pop
cmp
xchg
leave
outsl
dec
popl
push
jle,pn
jno
adc
fimull
xchg
iret
lret
pop
xor
nop
add
fstp
lods
movsl
jecxz
jmp
les
out
notb
popf
add
sbb
jg
in
dec
mov
inc
inc
insb
ja
rclb
sub
cmp
js
cli
xorb
enter
mov
or
dec
push
mov
push
repnz
jae
and
mull
xchg
imul
lea
imul
mov
xchg
cmp
pop
or
iret
stos
jp
and
rcrb
shl
mov
mov
scas
xor
lds
iret
cmpsb
lahf
xchg
and
out
xchg
xchg
mov
push
shlb
call
mov
mov
movl
out
int
dec
stc
movsl
cmpsb
inc
sbb
xor
mov
inc
js
push
sub
daa
xlat
push
sub
jno
ss
jmp
int
or
pop
mov
lret
andb
lret
lret
mov
orb
outsl
test
icebp
or
in
out
cmp
jl
fstpl
pop
inc
push
enter
sub
xor
pop
es
push
cmpsl
call
sti
cmc
jnp
sahf
dec
mov
shr
fnstsw
fidivs
cmp
sub
cmp
lcall
ret
out
hlt
or
ljmp
xchg
xor
dec
mov
out
cmc
add
mov
push
inc
jmp
push
lret
dec
jg
sub
xchg
popa
jl
jg
hlt
push
jle
cmp
push
faddl
xor
cli
incl
mov
or
push
subb
adc
xchg
fs
mov
loop
out
sbbb
lret
loope
and
mov
add
and
add
sub
sub
push
xlat
mov
into
loopne
push
sti
pop
mov
or
scas
jno
adc
xlat
aas
mov
mov
movsb
push
and
test
adc
push
mov
test
inc
push
leave
stos
add
repz
adc
add
pop
mov
adc
mov
mov
and
aas
and
nop
sbb
jge
test
fisttpll
mov
and
dec
and
test
pop
repnz
mov
mov
mov
iret
jle
test
and
xor
and
mov
sbb
jge
pop
fincstp
je
push
mov
mov
fidivrl
call
mov
mov
or
xchg
jp
arpl
call
popf
adc
pop
test
mov
pop
popf
add
ficoms
out
mov
aas
popa
daa
nop
fisttpll
adcb
add
pushf
and
es
popa
mov
adc
dec
lods
add
and
xchg
in
cld
shrb
mov
into
fidivl
mov
movsl
adc
and
mov
scas
enter
mov
and
loopne
inc
dec
movsb
and
dec
inc
testb
mov
cmp
cmc
mov
sub
cmc
xor
xchg
shlb
dec
ss
xor
or
fxch
mov
test
outsb
iret
xchg
cmc
test
iret
pop
fistpl
mov
add
int
inc
repnz
imul
mul
add
pop
cli
stos
daa
test
sub
mov
mov
cltd
add
mull
stos
lea
push
jno
lea
sbb
adc
nop
jmp
push
xchg
jp
cmp
xor
mov
adc
mov
pushf
cli
repz
rclb
mov
enter
ljmp
mov
int3
clc
movsl
sbb
ds
pop
inc
mov
cli
and
xchg
dec
jmp
jg
xor
or
cmp
lfs
push
dec
cmpb
mov
mov
fs
xlat
dec
dec
je
jo
jge
inc
cmovp
xlat
sub
sbb
fdivrl
adc
adc
pop
cmp
movsl
jecxz
sarb
add
bound
call
leave
pusha
jl
scas
fbstp
loop
outsb
jmp
std
outsl
cmp
adc
add
xor
inc
call
shl
push
lea
lret
push
sub
dec
lods
ss
lds
dec
movl
lock
jb
loope
jge
pusha
pop
icebp
mov
jmp
sti
or
shlb
mov
nop
xchg
push
mov
ja
xor
mov
xorb
popf
outsl
sbb
bnd
rolb
push
cmp
or
push
stos
test
sbb
mov
mov
pop
out
jo
sub
dec
shll
in
fcomi
imul
jne
inc
add
jns
int3
popa
cmpsb
in
shlb
add
pop
or
inc
jecxz
push
dec
add
arpl
jb
lahf
aad
fcompl
icebp
xor
lods
test
cmp
dec
mov
mov
lret
mov
jnp
lock
sbb
and
push
jge
shl
pxor
push
adc
insl
icebp
jnp
push
mov
push
jg
xor
adc
pop
ret
test
test
outsb
ret
or
aas
test
and
jno
push
cmp
wrmsr
push
add
push
add
mov
lcall
in
push
mov
xchg
and
stc
lcall
pop
inc
lods
shl
cltd
sub
lret
add
mov
inc
mov
pop
and
movsb
adc
iret
call
gs
push
mov
movsb
mov
xor
jbe
inc
adc
outsl
sub
imul
xor
adc
lret
aaa
cwtl
mul
jo
mov
lcall
imulb
push
cs
push
imul
lahf
and
fidivrs
and
xor
testl
in
addr16
add
pushl
or
shl
ljmp
mov
test
jl
and
stos
adc
pushf
arpl
cli
jo
cld
sbb
inc
jno
inc
mov
xor
lret
jg
incb
sub
sub
enter
xor
ret
cmpsb
sbb
push
pop
inc
out
xor
xor
push
in
popa
daa
insl
xchg
movsb
sub
push
aaa
lcall
aas
jmp
mov
loope
push
jmp
ljmp
loopne
xlat
lds
ljmpw
jne
mov
xchg
xchg
sbb
aaa
sarl
adc
fbld
aaa
cmc
cmp
xor
push
xchg
sbb
sub
fcoml
pusha
cmpsl
xchg
or
inc
incl
cmpsb
inc
decb
and
push
inc
aas
cmpsb
loope
adc
mov
sbb
les
cmp
cmp
or
jb
sbb
lds
adc
ficoml
mov
cmc
pop
dec
pop
nop
jae
mov
test
in
xor
mov
mov
xchg
test
jp
push
and
jns
rcll
int
pushf
or
or
jp
mov
mov
rolb
mov
xchg
sub
xchg
dec
imul
mov
xchg
cmp
enter
jecxz
repz
mov
out
call
sbb
mov
sub
je
cmp
sbb
enter
pop
inc
pop
loopne
lcall
or
cltd
sbb
sbbl
mov
adc
jle,pt
mov
or
in
jge
mov
push
loope
add
clc
ja
out
xlat
enter
flds
pop
mov
in
lret
sub
jle
aas
and
dec
int3
fcoms
loopne
jae
insl
outsb
sti
lcall
call
adc
enter
in
mov
add
imul
out
mov
cmp
addr16
inc
xchg
shrl
pop
jecxz
xchg
scas
mov
int3
pop
arpl
sarl
cld
inc
xchg
pop
outsl
pusha
daa
shll
jns
adc
cmpb
adc
xor
dec
mov
lahf
dec
shrb
pop
push
out
in
pop
mov
sahf
sub
jmp
shlb
add
cld
shll
inc
insl
ret
add
xlat
inc
jne
shr
adc
jo
movsl
gs
addr16
ja
movsl
lret
inc
mov
fnsave
xlat
xor
mov
shlb
sub
rclb
jle
push
xor
dec
inc
nop
or
std
add
add
mov
mov
movsl
xor
jmp
xchg
mov
call
ret
stos
mov
mov
rolb
sub
and
stos
and
jmp
push
insb
in
pop
out
insl
xchg
add
daa
sub
nop
dec
cmp
dec
int3
sbbb
mov
repnz
mov
and
jmp
cmpsl
inc
loope
push
dec
dec
push
dec
rcrb
loopne
dec
je
out
push
aad
inc
lock
add
mov
repnz
jns
test
mov
push
aaa
mov
push
mov
fnsave
push
cmp
fs
cwtl
imul
outsb
jle
push
les
aaa
lahf
inc
outsl
out
dec
cwtl
sub
cltd
stos
xchg
in
mov
pop
pop
dec
push
sbb
mov
sarl
call
ja
sub
pop
mov
out
subl
rol
imul
add
jb
adc
push
out
and
add
mov
ret
jle
cmp
mov
ds
popa
or
xchg
sbb
shll
mov
xor
insb
into
int3
lahf
xchg
jp
sub
retw
mov
iret
dec
cmp
mov
int
mov
popf
pop
mov
and
pop
orb
adc
icebp
int3
jg
push
cmp
bound
and
jo
add
and
lods
out
push
and
pop
inc
mov
xchg
xchg
scas
pop
repnz
arpl
fcoms
ret
or
adc
arpl
mov
push
test
imul
bnd
aad
das
sahf
cmp
mov
mov
into
sti
push
inc
xchg
inc
cmc
add
pop
movb
in
jns
add
xor
sub
packssdw
mov
mov
out
jp
add
push
cmc
rcrb
or
movsb
jmp
xor
ja
inc
cmp
mov
sbb
inc
arpl
xchg
pop
decb
in
jne
push
stos
or
add
xor
fdivl
xor
mov
inc
cmpsb
loop
sbb
punpckldq
pop
inc
jl
sbb
inc
xchg
inc
sub
sbb
cmc
and
mov
gs
and
jle
dec
mov
mov
push
or
jbe
add
popf
ficompl
add
add
mov
mov
sub
outsb
test
dec
bound
nop
std
insb
push
pop
fiaddl
dec
aad
inc
pop
push
xor
push
rclb
adc
stos
xor
push
mov
hlt
jbe
shrb
xchg
loope
inc
xchg
xor
lret
dec
int3
stc
mov
jae
jp
pop
lcall
les
stos
push
sub
or
lds
test
mov
arpl
insl
je
mov
mov
or
insl
popa
and
popa
xor
aas
xchg
dec
fs
or
fcompl
xchg
pop
xor
sub
aaa
adc
ds
loop
arpl
dec
sub
ret
add
and
lods
jmp
adc
mov
xchg
add
or
daa
fs
fdivrl
in
xor
pusha
std
cmp
imul
fsubrs
xchg
cmp
enter
out
mov
ds
arpl
cli
mov
ret
imul
dec
push
movsl
ljmp
jb
loopne
dec
and
subb
xor
pop
loop
cmp
out
jbe
movsb
sub
cmp
shll
cmc
jnp
mov
sbb
es
scas
loop
int
add
dec
adc
test
xor
aaa
jp
shlb
xchg
mov
inc
lret
pop
lods
inc
xor
pop
call
mov
sub
mov
mov
mov
dec
cli
push
dec
sti
pop
xchg
insl
xor
jle
jnp
sti
and
add
adc
and
pop
mov
sub
pop
and
stos
test
lds
loopne
push
pushf
incl
mov
mov
std
enter
pop
fcompl
and
push
cltd
sub
out
pop
mov
push
add
xchg
int
adc
and
imul
sub
cmp
push
ljmp
pop
lock
lods
sbb
xchg
cmpsb
mov
and
cmp
and
xchg
enter
fsubs
mov
insb
mov
sbb
pop
mov
inc
test
shrb
push
xchg
sub
cltd
pop
adc
shll
mov
ljmp
dec
jne
enter
gs
xchg
scas
cmp
test
arpl
cltd
mov
xchg
stos
or
fsub
sbb
repnz
test
push
cmpsb
cmp
ds
fmuls
pop
fmuls
sbbl
loopne
add
aaa
xor
mov
fsts
das
insl
scas
adc
xchg
into
or
dec
mov
lods
mov
push
das
push
icebp
cld
sub
cmpsl
add
mov
gs
in
mov
adc
sub
jmp
fucomp
mov
pop
repnz
addl
xor
dec
lods
mov
or
sub
adc
add
push
mov
sub
cmp
dec
mov
data16
dec
cli
or
gs
push
call
aaa
fucomi
dec
mov
ds
das
dec
adc
negl
inc
push
add
ret
or
add
inc
jo
sbb
call
jp
lds
mov
test
fstpl
sub
or
xor
roll
lods
jb
fiaddl
rorb
ret
js
in
shlb
push
fistps
movsb
dec
or
and
subb
dec
lret
clc
pop
cwtl
mov
out
push
call
scas
mov
sbb
clc
add
jp
lret
mov
call
sbb
jns
stos
jle
fdivp
cli
loope
mov
clc
popf
push
jnp
fidivl
subl
mov
cli
sbb
sti
shll
pop
or
lods
cmp
jge
jns
cmp
jne
sbb
aad
sub
mov
ljmp
clc
popa
xchg
cmpsb
push
jmp
sub
out
adc
sbb
cmp
jp
pop
push
sub
cmc
in
out
ret
sub
jb
adc
push
or
outsl
cmp
cmp
cltd
pop
jp
push
test
xchg
mov
jns
ja
xchg
pushf
mov
pusha
inc
dec
in
into
push
ss
inc
in
loope
shll
jp
pop
out
push
js
mov
push
das
daa
xchg
push
sbb
mov
lret
stos
and
push
add
cmp
clc
mov
adc
loopne
ljmp
adc
orb
mov
pop
lock
test
pop
fistps
adc
leave
bound
jmp
popa
shlb
xchg
es
or
lea
jp
test
adc
inc
fld
mov
mov
enter
inc
jne
in
loop
mov
push
std
arpl
ficoml
ret
scas
adc
scas
or
xchg
xor
out
and
inc
jb
andl
jae
and
xor
mov
mov
imul
mov
mov
iret
cmp
cmp
cmp
aas
pop
push
cmp
iret
in
lods
xchg
popf
inc
fcmovnu
cld
cmpsl
arpl
and
sub
push
mov
in
test
pop
inc
xchg
fiaddl
fsubl
fcmovb
inc
and
push
push
cmpl
jno
mov
mov
test
test
mov
loope
ret
mov
jle
mov
icebp
pop
scas
in
sub
adc
or
fcmovbe
and
and
push
push
scas
and
out
incl
pop
mov
mov
sub
sub
sbb
aad
and
nop
dec
mov
adc
adc
test
cmp
jno
dec
cmp
sti
or
xchg
xchg
cmc
and
insl
pop
cmp
hlt
pop
inc
lret
enter
pop
inc
sti
push
fnsave
ss
xchg
sbb
mov
dec
addr16
xor
enter
add
lret
mull
fistpl
mov
jecxz
out
mov
xchg
inc
push
aam
push
jne
sbb
cmp
cmpsb
imul
insb
pop
and
cmpsl
and
xorl
sub
inc
outsb
push
stc
sub
mov
sub
or
push
pop
mov
mov
call
xchg
and
outsb
pop
dec
jp
push
mov
push
mov
enter
repz
sbb
pop
ret
push
push
or
or
push
rcrb
lret
loopne
into
pop
pop
imul
jo
es
cmp
push
insl
xor
xchg
and
cmp
bound
add
lcall
inc
fmul
sbb
dec
or
lret
mov
lods
ss
xlat
mov
cmpsl
dec
addr16
push
sub
xor
je
cmpb
sbb
out
dec
std
and
jno
mov
outsl
ja
in
sahf
out
jl
arpl
enter
rclb
arpl
fsubl
inc
std
in
cld
imul
mov
test
cmp
movsl
push
loop
dec
adc
lods
push
push
ret
fidivrs
cwtl
and
mov
xchg
adc
sub
sub
mov
fmul
ja
es
in
pop
sahf
mov
cmp
jne
enter
in
mov
inc
or
outsb
or
addr16
mov
sbbl
imul
pushf
mov
mov
jecxz
adc
rorb
cmpsb
out
adcl
jb
xchg
xchg
jno
popf
push
test
lret
jl
adc
pusha
std
rol
xor
fs
insb
adc
push
pop
out
jl
mov
push
ljmp
ss
pop
outsl
adc
push
mov
bound
jb
mov
lea
cld
pushf
fidivrs
jp
sti
and
inc
mov
test
pop
inc
add
jl
jo
cmp
push
insb
ffree
mov
sbb
jl
je
push
xor
dec
inc
inc
int
jl
in
lahf
ret
adc
repz
mov
jg
or
ja
lret
mov
add
out
jnp
pusha
mov
push
andl
cld
sub
pop
cmp
subb
into
and
enter
dec
loope
jle
fistps
sub
push
fucom
dec
mov
add
dec
pop
push
outsl
xlat
fistl
insb
xchg
lea
and
jo
sbb
movups
sbb
loope
in
stos
cld
cmc
cld
adc
mov
loope
outsb
cmpsl
pop
lods
bound
mov
jle
sub
or
push
bound
inc
arpl
call
dec
xor
push
incl
jb
cwtl
and
xor
arpl
dec
insb
or
xchg
pop
call
int3
push
movsl
or
sbb
hlt
add
jle
cmp
imul
test
mov
stos
xlat
dec
push
pop
add
inc
stos
ds
cmp
cltd
jno
inc
sub
mov
add
pslld
mov
adc
test
xchg
push
stos
popa
paddusb
mov
out
ret
mov
push
int
xor
xchg
adc
fiadds
add
test
lods
aaa
add
insb
imul
cmc
jg
or
cmp
sub
repz
dec
and
inc
or
xor
push
and
iret
subb
in
sbb
popa
bound
pop
mov
push
dec
mov
push
pop
aad
mov
xchg
int
cld
add
cmp
psrlw
cmc
scas
mov
mov
jns
cs
xchg
fisubrs
or
pop
pusha
jecxz
push
daa
outsb
stc
push
inc
popa
xchg
cmp
dec
out
ss
adc
js
xchg
jmp
popa
loopne
xchg
addb
cmp
mov
inc
mov
cmp
jae
lret
pop
mov
js
popf
ds
in
and
int3
mov
mov
notl
xchg
out
in
jno
sar
imul
xor
std
or
sbb
and
and
movb
psubusw
and
gs
movsl
or
div
mov
popa
daa
mov
add
pusha
or
out
enter
nop
cmp
push
scas
xchg
stos
scas
andb
mov
addr16
xor
dec
rcrl
or
lret
xchg
idivl
push
flds
mov
jno
dec
adc
sbbb
cmpsl
push
dec
rcrb
xlat
sbb
repnz
mov
sub
dec
pop
xor
fnstsw
int
dec
push
sbb
sbb
and
shrl
add
jnp
int3
in
cmp
aaa
ljmp
and
jl
xchg
mov
inc
in
mov
cmp
imul
insl
loop
adc
inc
mov
leave
pushf
rcr
fs
inc
lret
outsl
xchg
cmpsl
push
dec
in
inc
loope
xor
xor
sub
mov
out
adc
lock
pop
incb
lock
xor
xor
and
jge
cmp
jnp
shrb
xor
jo
roll
aaa
pop
daa
leave
mov
mov
push
sbb
pushf
shll
adc
cs
pushf
pop
std
dec
mov
insl
push
xchg
aas
dec
dec
leave
jnp
and
adc
mov
xchg
mov
dec
pop
adc
outsl
sbb
in
mov
sti
inc
xlat
pop
into
cmpsl
pop
aad
or
enter
fsub
pminub
and
imul
mov
lret
fsubs
jns
lock
bound
cmp
cmpb
sbb
pop
std
xchg
sahf
in
fcoml
aad
insl
jbe
test
mov
or
jg
cmp
push
sub
cmc
xchg
daa
jo
cld
fwait
sub
xchg
lcall
jp
jecxz
mov
lods
pop
inc
jbe
pop
rclb
addr16
js
mov
testb
push
and
sar
mov
add
fidivl
lds
add
fstpl
daa
cmp
lods
ret
lcall
mov
mov
in
icebp
dec
orb
inc
fstpt
sbb
add
sbb
aas
xor
repz
ret
sahf
fimull
mov
jns
xor
ret
mov
rcl
shlb
mov
pop
mov
js
fsub
pushf
ljmp
mov
sub
mov
xchg
mov
xchg
dec
xchg
xor
or
loop
dec
cmp
push
pop
and
iret
mov
es
jp
in
std
repnz
mov
sbb
mov
sub
mov
add
xlat
aas
pusha
jb
jns
xchg
xorb
stos
rcrb
out
mov
push
adc
xor
sahf
add
aad
add
or
xchg
xor
lcall
push
inc
popa
sti
in
inc
or
push
cmp
dec
test
dec
sub
daa
loop
fisubrs
incb
sub
pop
adc
sbb
or
cmp
add
in
mov
or
shll
push
setp
and
sahf
jae
cmp
lock
gs
pop
cmp
pop
adc
mov
mov
je
movsb
xchg
lret
hlt
ret
jecxz
mov
mov
sti
stc
shll
out
lods
xchg
aam
pop
aam
inc
out
call
outsb
push
pop
fucomi
test
xor
out
mov
nop
cmpsl
xor
loop
clc
cmp
xor
mov
cs
jmp
ret
push
filds
shlb
mov
gs
stc
sub
enter
popf
lea
stos
sub
stos
jmp
add
push
outsl
sbb
shll
in
ljmp
jnp
mov
xchg
aam
lock
jl
pop
pop
mov
lods
inc
cld
mov
xchg
aas
fnstenv
enter
test
inc
push
rcrb
inc
adc
mov
jne
jno
xchg
push
ficomps
jmp
rcl
adc
xor
scas
cltd
sbb
xchg
aam
popf
cmp
es
pop
xchg
rorl
mov
lret
mov
cltd
ficoms
repnz
fadds
xor
in
pop
mov
aad
adc
loope
lods
adc
pop
sub
xchg
sbb
and
stc
idivb
jmp
nop
adc
lret
repz
cmc
dec
cmpsb
mov
aad
test
jge
pop
jp
mov
adc
dec
mov
sarb
jns
lods
aaa
jecxz
add
add
in
mov
js
cwtl
rolb
pop
jp
xor
stos
in
pop
cmpl
mov
movsb
sub
aad
cmp
jmp
lea
scas
pushf
xor
mov
xchg
mov
shlb
in
adc
mov
scas
dec
mov
xor
int3
mov
scas
mov
adc
decl
push
lock
fstpl
mov
divl
sbb
jecxz
mov
shll
das
rcl
leave
roll
lahf
das
pop
cmpsb
push
add
shlb
mov
mov
add
fidivs
ficompl
loopne
dec
jle
and
ficoml
push
mov
sahf
rorl
fs
outsb
jmp
sbb
insl
adc
cmp
rorb
mov
add
jecxz
xchg
add
adc
imul
jo
adc
lret
stos
jbe
aad
cmpsb
jle
mov
add
arpl
mov
test
test
pushl
mov
out
dec
xchg
pop
aas
and
iret
inc
jle
scas
loop
jle
lods
aad
dec
cmpsl
add
xor
test
sbb
inc
jp
add
pusha
adc
jns
pop
insb
mov
pop
popa
adc
jg
dec
out
jmp
test
scas
add
jbe
pop
pop
call
adc
paddsb
gs
es
add
jo
dec
jl
jmp
iret
adc
lock
jae
mov
push
xchg
out
movsl
arpl
cmp
and
leave
movsb
add
insl
or
fnstcw
xor
dec
dec
repnz
dec
mov
js,pn
hlt
pop
lret
enter
movsb
scas
int
mov
test
jne
subb
sbb
push
jbe
and
enter
dec
jmp
push
std
inc
dec
icebp
stos
in
pushf
xchg
outsb
mov
into
mov
push
addr16
and
or
fnstcw
push
add
jg
popl
and
scas
cs
and
jp
dec
cli
aaa
popf
outsl
sbb
sar
xchg
pop
jmp
xor
and
push
jg
movsl
dec
jne
jmp
adc
arpl
sbb
enter
movsl
sbb
dec
mov
cs
cltd
lcall
mov
fidivrs
inc
push
test
dec
rolb
fistl
movsl
jmp
lea
imul
lahf
std
pop
and
fmuls
loopne
icebp
ljmp
cmp
fwait
jmp
leave
cmpsl
mov
and
dec
or
sub
cld
stos
jmp
jmp
ficoms
mov
movsl
dec
fdivrs
hlt
pop
lahf
lea
scas
cmp
cmp
es
cmp
mov
sub
fdivp
jae
sahf
fisubl
cli
or
mov
push
or
xchg
sbb
jns
push
push
movsl
xchg
lcall
iret
mov
mov
movsb
arpl
rcrl
push
xor
push
dec
clc
mov
mov
cmp
pop
mov
test
push
and
xchg
neg
push
movb
je
enter
add
and
sbb
inc
adc
jp
inc
mov
xchg
mov
jno
xchg
jns
sbb
push
clc
in
or
cwtl
pop
xor
dec
gs
jae
cs
xchg
and
xchg
cld
mov
push
cmpsb
xor
sbb
sbb
xor
outsl
scas
xchg
lds
cltd
lcall
lods
push
xor
pop
adc
mov
imull
stos
pop
push
jo
cmpsb
int3
rcr
lock
arpl
xchg
adc
mov
andl
gs
fcomip
cwtl
sub
jb
sub
aas
push
lock
int
mov
icebp
push
std
xchg
fidivrs
dec
jo
sub
leave
mov
decb
jno
inc
xor
inc
pop
fldl
mov
in
mov
xor
and
lock
ja
pcmpeqw
inc
push
sub
pushf
ss
xor
pop
in
sub
imul
and
pop
sub
inc
push
call
pushf
pop
scas
inc
mov
sarb
jnp
or
ja
push
aaa
loopne
inc
insb
ds
loopne
movsl
push
cwtl
cs
sub
pop
scas
sbb
push
dec
xchg
test
popl
ret
or
fs
pop
and
inc
fwait
push
sub
mov
mov
adc
pop
mov
mov
mov
cmp
fucomi
jne
mov
inc
not
lock
pop
rol
pop
pop
pop
mov
iret
inc
cmpsl
test
dec
xor
xchg
repnz
add
adc
push
pop
cmp
xor
xor
dec
push
and
scas
push
repz
mov
cmp
mov
add
inc
xchg
out
mov
aam
fcompl
or
popw
xor
shrd
jmp
inc
add
loop
or
into
outsb
hlt
and
fcomi
test
fists
lret
outsb
xor
movsb
loop
pushf
cmpsb
sbb
push
std
sbbl
push
xor
cltd
test
stos
or
sub
dec
mov
push
adcl
std
sbb
das
push
cmp
or
test
std
lret
lods
sub
fs
push
cmp
aas
and
ss
push
jnp
jle
sub
inc
mov
sub
xchg
cmp
movl
add
jecxz
and
sbb
dec
fnstcw
test
pop
mov
gs
adc
jl
jbe
popf
mov
hlt
mov
dec
fucomi
and
arpl
xchg
mov
jmp
lcall
or
inc
jecxz
daa
sbb
mov
cmpsl
decl
test
aaa
movlps
sti
jo
mov
sbb
adc
jp
xchg
mov
in
add
gs
test
int
sub
jo
sub
pop
lcall
push
inc
fwait
inc
cmp
shll
test
adc
scas
xor
push
sbb
sub
sbb
lret
push
popf
enter
hlt
lock
dec
jbe
cmp
jnp
call
push
inc
mov
cmpsl
mov
mov
push
ret
ja
xchg
adc
or
sbb
loope
push
cltd
jp
dec
les
xchg
ret
xor
inc
vshufps
fstps
push
jge
or
jmp
mov
mov
mov
cmpsl
dec
sahf
out
push
hlt
mov
and
dec
sbb
jb
popf
dec
lock
fisubrs
xchg
sbb
out
jae
xchg
cmp
rorl
or
sbb
sbb
pop
test
rclb
xchg
cmpsl
sub
xchg
call
fists
repz
out
std
lds
push
cmpsb
xchg
add
adc
icebp
sarl
xchg
stos
loopne
adc
daa
jb
add
lods
mov
outsb
xchg
adc
es
stc
sbb
popa
rorb
xor
movsl
sti
mov
hlt
test
or
imul
pop
inc
insb
or
std
xchg
or
leave
fcoms
pop
out
cmp
popf
cmovge
pushf
push
cmc
mov
mov
mov
pop
in
nop
aad
fistl
lea
shl
aam
lahf
xchg
sub
xor
out
scas
mov
mov
jne
cmpsl
lea
xchg
and
inc
cmp
jle
cmc
add
popf
mov
mov
aaa
xchg
das
adc
stos
fwait
test
cmc
jb
testl
mov
stos
aas
and
and
xor
les
xchg
repz
mov
jae
or
jmp
xor
arpl
enter
mov
fists
cmp
mov
rcrl
std
mov
pop
inc
jmp
mov
scas
clc
sbb
sbb
dec
jle
and
mov
stos
sbb
stos
xor
or
mov
nop
push
fisubrl
out
addb
or
pop
int
sbb
mov
or
lcall
or
imul
dec
iret
lods
dec
mov
int3
cmc
mov
push
or
mov
imulb
clc
je
fneni(8087
test
scas
in
es
and
sbb
mov
sbb
adc
mov
loope
xchg
in
pop
mov
mov
dec
sbb
add
out
popf
into
mov
sbb
jnp
std
loope
mov
jb
mul
pusha
or
js
cwtl
mov
roll
xchg
push
iret
call
or
sbb
cli
mov
lea
dec
jecxz
loop
mov
xchg
andl
add
int3
jns
mov
movsb
pushf
mov
int
sbb
gs
testb
and
xchg
push
int3
scas
mov
sub
stos
ja
or
pop
mov
and
das
xor
lods
rolb
cli
or
xacquire
jbe
mov
mov
test
das
sub
xchg
mov
cltd
sub
fimull
es
push
in
jno
loope
xor
jle
decl
repz
xor
mov
sahf
adc
inc
adcl
add
sub
mov
jbe
mov
sbb
test
in
pop
lahf
aaa
and
aaa
and
cmc
es
mov
out
ds
lret
inc
mov
pop
adc
pusha
sbb
sbbl
fimull
test
pop
fs
jo
in
and
xor
sbb
push
mov
sbb
pop
ja
mov
fsubr
lret
pushf
xor
and
cmc
cmp
adc
std
or
ret
cmpsb
add
xlat
pop
jb
sub
sub
cmpsb
sbb
in
aas
dec
lea
rcrl
nop
lcall
jle
lcall
aad
pop
in
cmp
popf
fdivrp
xor
mov
mov
mov
imulb
sub
adcb
jns
fs
dec
pop
mov
xchg
sbbl
xchg
xlat
add
cmpsl
and
inc
mov
pop
test
mov
cmp
popa
cmp
cmp
ja
ljmp
mov
mov
xor
imul
cmp
stos
lock
cmpsl
push
lcall
popa
mov
test
mov
pusha
fildl
cmpsl
pusha
into
movsb
outsl
pop
stos
and
fimull
jle
pop
xor
lahf
and
pop
daa
out
pop
cmp
dec
push
jb
and
sub
fs
push
xchg
loope
sub
adc
out
lahf
push
mov
dec
out
ficomps
xlat
stos
ljmp
xchg
xchg
rolw
xlat
in
dec
ss
jns
outsb
leave
decl
push
sub
jmp
cs
jle
in
xor
cmp
mov
pop
xorb
out
cmp
pushf
outsb
sub
mov
cmp
outsb
aaa
or
sub
mov
out
shlb
xchg
mov
mov
lcall
xor
pop
clc
pop
iret
cmp
inc
icebp
scas
sbb
sbb
mov
sub
pop
adc
sub
jne
out
nop
popa
inc
lret
jge
repnz
mov
mov
push
leave
icebp
inc
sub
add
jge,pt
ds
aad
and
cmp
mov
test
data16
xor
jo
popa
cmp
divb
jns
in
imul
aas
rolb
inc
outsl
push
xlat
jo
add
mov
mov
and
xchg
dec
xor
fistl
call
mov
repnz
mov
mov
inc
cmp
push
mov
das
mov
and
fstl
je
jp
popf
sar
lcall
jge
mov
xor
sbb
mov
leave
inc
sbb
push
movsb
sub
insb
mov
movsl
jg
subl
sbb
adcl
scas
bound
push
pop
sub
mov
push
aas
mov
mov
mov
pop
loopne
in
xchg
outsl
inc
je
push
add
push
cmp
jl
addb
pushf
je
aaa
ja
ror
ljmp
jo
or
push
cmp
mov
sub
jmp
scas
iret
and
adc
fs
pop
sbb
cmpsl
cmp
mov
dec
les
fdivs
mov
mov
pushw
or
mov
test
push
clc
push
sub
mov
sub
push
dec
mov
inc
sub
inc
push
ja
jns
adc
jge
or
jb
mov
sub
mov
pop
push
sbb
adc
push
shrl
cmpsb
je
xchg
enter
and
or
mov
sahf
fs
jae
movsl
bound
cmp
mov
push
push
pop
pusha
xchg
inc
jg
cmpsb
fmull
jae
flds
shl
into
fs
dec
in
inc
mov
xor
pop
or
movsl
add
dec
mov
or
mov
push
movsl
sub
shr
dec
mov
lahf
or
xlat
test
sub
in
add
or
sbb
jns,pn
xor
jno
xchg
sub
test
dec
jo
mov
xchg
cmp
sub
mov
cs
xchg
pop
cmp
pusha
push
cmp
push
data16
mov
add
sub
iret
sarb
mov
push
mov
iret
inc
xchg
test
das
icebp
cmp
lea
jl
lods
into
jb
mov
inc
mov
pop
and
stos
lods
adc
push
sarl
in
testl
mov
loop
xchg
dec
nop
xor
fwait
loopne
xchg
aaa
test
lds
mov
lret
sub
push
loope
xchg
js
movsl
cmp
dec
push
mov
mov
xchg
mov
lock
les
inc
and
pop
add
inc
clc
scas
stos
mov
pop
stos
les
outsb
jns
fistpll
aas
mov
cmp
repnz
or
nop
nop
push
push
xchg
sbb
dec
mov
pop
adc
jl
out
fdivs
xor
sti
into
ds
cmpsb
movsb
outsb
das
xchg
add
sbb
popa
push
cmpsb
mov
sbb
or
inc
cmp
cwtl
cmpsb
into
jecxz
mov
mov
jl
lods
lods
shlb
shl
pop
push
add
cli
jecxz
mov
inc
repnz
or
jne
lret
inc
jae
pop
leave
mov
jnp
cltd
xlat
mov
jbe
inc
xorl
loope
adc
rorb
push
aad
loop
cmp
adc
mov
adc
push
mov
lea
cmp
mov
sub
add
or
inc
inc
loop
jg
and
push
mov
ljmp
shl
pop
out
pop
dec
loopne
roll
dec
or
push
xor
xchg
lret
fldlg2
aaa
in
fists
test
stos
inc
push
movsl
outsl
push
pop
inc
out
stos
popa
jge
inc
xlat
lahf
mov
mov
sub
fsubrs
jmp
adc
sbb
or
in
ljmp
out
test
mov
rolb
ret
lret
andl
xor
xor
iret
xchg
jecxz
cmp
int3
lods
or
push
xor
lahf
lret
repz
and
cmp
mov
add
or
or
lea
inc
movsl
push
movsb
outsb
add
xchg
sbbl
test
pop
testb
push
call
push
cmp
xor
sub
arpl
pop
movsb
addl
in
test
es
xchg
out
in
fadd
dec
mov
dec
imul
test
popa
call
mov
fildl
fwait
jmp
pusha
jg
js
jo
mov
add
xor
add
xchg
leave
ljmp
mov
sbbl
dec
ljmp
inc
add
ds
push
mov
imul
icebp
rclb
lods
xchg
adc
aam
ja
imulb
mov
jbe
jns
shrl
jp
adc
jl
mov
mov
mov
in
sub
mov
stos
cmp
mov
int
and
je
lret
ss
insb
dec
dec
xchg
push
jmp
mov
movsb
xchg
jne
pop
push
mov
push
cltd
nop
cld
adc
cmpsl
jl
icebp
mov
xor
push
int3
in
jmp
hlt
mov
xchg
scas
add
leave
movsb
mov
lcall
xchg
or
jo
push
xchg
out
jmp
test
and
xor
inc
jl
xor
or
iret
addr16
xor
test
rcrb
test
and
sbb
pop
call
imul
xchg
mov
addr16
inc
pop
and
cltd
mov
and
add
mov
ljmp
add
pushf
xchg
jnp
mov
or
pop
dec
pop
and
rep
mov
fcompl
insl
je
lds
aaa
shr
sbbl
daa
stos
jns
add
push
cs
push
mov
popa
imulb
dec
mov
pusha
gs
inc
ljmp
mov
scas
mov
cld
jne
movsl
mov
fisubl
add
inc
mov
add
popf
popa
mov
repnz
inc
fists
bound
mov
outsb
iret
popf
stc
imul
push
fwait
xor
dec
js
das
add
adc
mov
test
dec
cmc
jns
sbb
test
push
aam
pop
in
xchg
in
add
jge
add
lret
shlb
out
ljmp
fstpl
daa
outsb
test
out
enter
add
popa
aam
push
lcall
mov
xchg
push
mov
shlb
xchg
test
cmc
xchg
sbb
aam
popf
sarl
mov
lds
in
cmp
in
imul
cmp
jmp
fs
test
nop
test
adc
dec
add
aaa
sarb
jge
div
mov
inc
inc
out
loopne
call
push
fiaddl
fstl
lods
xchg
pushf
lds
xchg
int
jo
lcall
jle
jno
notl
mov
fidivrl
mov
testl
mov
shr
out
jb
and
xor
dec
clc
repnz
mov
pop
iret
push
push
test
push
push
adcb
aas
and
inc
dec
sti
mov
mov
add
lods
jge
int
cmp
xchg
mov
mov
sbb
cmp
or
mov
mov
xchg
rcrl
and
xchg
cmp
xchg
xchg
pop
xor
iret
pop
xchg
mov
mov
mov
fwait
sbb
pusha
outsb
imul
mov
and
in
xor
insl
movsl
pop
ret
fwait
inc
push
mov
push
mov
lahf
sub
or
or
clc
push
leave
call
mov
inc
ljmp
lret
sbb
mov
fwait
sub
dec
in
ja
xlat
mov
dec
jmp
mov
into
outsb
popf
jbe
fisttps
sti
push
mov
xchg
mov
stc
pop
xorl
push
xor
jmp
ficoms
mov
jne
imulb
movsl
rcrl
push
add
std
mov
testl
push
push
fcmovne
roll
mov
sbb
adc
pop
push
sub
outsl
lcall
cmp
and
es
fcomip
loop
sbb
jecxz
pop
aas
push
mov
jle
scas
ror
ss
mov
rorl
clc
repz
stc
and
add
lods
daa
dec
push
add
sbb
inc
js
imul
repz
xchg
mov
lret
pop
movsb
cmp
and
sahf
mov
xchg
sbb
ret
iret
test
movq
dec
lahf
fbstp
push
sbb
push
jecxz
or
popf
pop
mov
add
push
xchg
and
outsb
mov
pop
clc
dec
dec
mov
push
ja
movb
dec
sarb
mov
mov
out
sbb
pop
ljmp
xor
out
bound
dec
pop
aad
jns
stos
jns
out
pop
push
aaa
out
loopne
iret
mov
xor
scas
jg
test
lods
aad
jns
sti
insl
mul
or
std
dec
sahf
push
jge
mov
cmp
inc
data16
movsb
push
cmp
inc
mov
popa
or
push
mov
push
cmpsb
pop
xchg
bound
test
adcl
cld
dec
push
jb
mov
insb
sbb
int
jnp
jge
movsb
imul
push
test
les
or
std
mov
test
jno
dec
or
or
test
pop
popa
ds
cltd
or
fisubl
push
push
cli
ljmp
mov
mov
xchg
insl
xor
ret
xor
out
nop
in
fdivr
and
mov
hlt
jp
push
cmp
push
fucomp
jl
push
sarl
aas
adc
daa
lcall
mov
cld
add
push
add
adc
xchg
vpacksswb
aaa
sti
mov
je
xor
and
out
mov
outsl
cmp
mov
aaa
mov
xchg
in
add
mov
xchg
add
cmpsl
adc
inc
scas
lret
adc
xor
jo
fsub
out
fmulp
push
push
cmp
xchg
ret
or
pop
imul
in
pop
cmp
lock
outsb
leave
and
lds
int
daa
mov
jle
movsl
repnz
dec
les
mov
nop
in
and
test
fstpl
test
out
outsl
rolb
dec
enter
jne
xor
mov
shrl
sbb
loope
xlat
std
xor
test
aam
push
popf
and
xlat
cmpsb
or
pop
nop
dec
in
sahf
shll
xorb
lcall
in
pop
stos
xchg
fbstp
lret
sarl
pop
cmpsb
adcl
fistpl
shrl
mov
fidivs
pop
ret
bound
test
xchg
lea
rcl
lds
pop
cwtl
inc
insb
xchg
pushf
sbb
call
xlat
mov
jge
and
add
dec
addr16
out
movsb
push
cmp
es
mov
je
pop
pop
xchg
arpl
rcl
jnp
stos
popf
into
into
das
insl
ret
adc
je
push
xchg
pop
fwait
and
idiv
fnstcw
push
add
mov
sarb
scas
sub
push
lcall
data16
jmp
xchg
adc
leave
mov
fsubr
pushf
leave
push
and
out
bound
inc
popl
and
scas
or
loop
inc
jo
insl
and
aaa
fsubs
mov
and
cwtl
inc
jl
ja
ret
sbb
sub
rorb
ja
cmp
xor
mov
aad
sbb
inc
jo
and
int3
mov
int3
and
adc
dec
fs
sub
cmc
jo
icebp
mov
xor
push
or
and
fisubrl
stc
loopne
lods
lea
test
stos
outsb
lret
movsb
jo
cmpsl
imul
out
add
add
xchg
jl
insl
popa
bnd
cld
cltd
pusha
dec
xor
popf
fs
mov
mov
sbb
add
cwtl
andb
jle
pop
int
pop
frstor
jnp
outsb
pop
in
push
sahf
rcrb
xchg
jl
sbb
adc
jb
icebp
mov
cmc
fcmovbe
popa
in
sbb
dec
pop
inc
push
adc
and
outsl
data16
fisttpll
cmp
xor
mov
sbb
jge
les
jecxz
fcomps
sbb
push
mov
adc
popf
psubq
adc
mov
push
out
shll
pop
push
es
orb
and
add
das
mov
inc
fcoml
aas
mov
sub
xchg
repnz
loope
push
out
int
push
dec
jo
out
jl
pop
jbe
mov
and
sub
push
les
add
jg
out
inc
lahf
cmc
mov
sub
push
jb
adcl
movsl
pop
and
movsb
pop
and
inc
push
pop
add
mov
insb
dec
cmp
add
add
imul
into
ss
sbb
js
xchg
aam
test
fcmovu
xor
jbe
loop
sub
inc
push
mov
inc
lds
push
pusha
push
mov
jge
add
jle
pop
arpl
lahf
fs
mov
sti
xor
add
stos
cmovs
adc
jp
xchg
adc
sahf
pop
mov
rcrl
test
jo
push
inc
inc
ss
jl
ret
lret
push
mov
or
in
push
xor
mov
aaa
pop
mov
stos
ror
sub
test
int3
iret
mov
xchg
fmuls
dec
jecxz
loope
imul
mov
mov
mov
xchg
or
fstpl
sbb
aaa
out
jl
imul
jle
pop
sbb
repz
pop
lods
xchg
cmc
jnp
jo
inc
leave
ja
dec
testb
hlt
jmp
out
movsb
or
pslld
sub
js
add
data16
fwait
lahf
or
test
push
fstps
sahf
mov
cmp
test
inc
mov
mov
decb
mov
push
and
rcl
loop
out
repz
sub
mov
dec
test
mov
imul
and
lret
out
ss
dec
and
pop
test
and
outsl
test
shrb
xor
and
xor
jns
inc
and
das
push
push
ret
cmp
pop
xchg
dec
or
mov
pop
jo
dec
into
jg
push
push
or
hlt
movsl
jmp
out
jmp
es
jnp
mov
inc
push
pop
push
lret
xchg
mov
pushf
shrl
cltd
insb
jmp
into
lods
arpl
shr
xor
xorl
fldenv
sbb
push
ret
enter
jne
ss
pop
jne
and
jle
pop
pop
mov
sbbb
pinsrw
mov
out
jecxz
mov
jmp
dec
push
sbb
ljmp
andl
test
jmp
movsl
scas
mov
out
cmpsb
lcall
sbb
mov
jg
jbe
dec
fisttpll
rcll
fstl
scas
popf
adc
stos
mov
int
push
lret
sbb
in
lcall
mov
add
fcmovnu
add
iret
insl
mov
and
jecxz
ja
sbbb
xor
mov
xchg
in
mov
mov
mov
popa
lret
popf
jg
lcall
push
stos
xchg
fdivs
out
add
jl
adc
xor
pop
repz
push
stos
lret
or
lret
and
mov
mov
pop
sub
lret
test
xorl
sbb
mov
mov
mov
jo
push
and
inc
xor
pushf
mov
bound
arpl
mov
call
xlat
inc
adc
cwtl
pop
mov
lcall
push
push
iret
inc
cmpsl
pop
into
mov
adc
ret
mov
mov
fcom
pop
cmp
sub
mov
push
add
mov
insl
push
mov
jge
mov
jle
sbb
lea
mov
add
jo
iret
inc
jg
iret
mov
mov
lcall
jno
xor
popf
dec
mov
test
arpl
popf
add
fs
mov
xchg
enter
sbb
enter
mov
mov
fstpl
sub
xchg
xchg
mov
int3
aad
movsl
fisttpl
sbb
jns
push
adc
fsubp
mov
cld
movsl
enter
fisttpl
xchg
std
mov
pop
sti
adc
cmpsl
or
jne
test
inc
fdivl
dec
sbb
inc
push
clc
lods
sub
addr16
gs
ss
inc
leave
push
lods
out
into
push
sahf
jecxz
testb
test
lret
jno
fsts
sub
repz
jb
mov
aam
lret
mov
je
jge
shll
mov
daa
test
lcall
mov
int3
jle
lods
arpl
lock
out
addr16
lods
enter
or
call
xor
push
gs
and
and
je
pop
add
cmpsb
ljmp
push
cmp
inc
cltd
out
in
cmp
jbe
and
mov
bound
push
lret
ficoml
lret
andb
out
mov
dec
aad
jbe
lahf
outsl
add
sbb
push
ja
push
cmc
shll
dec
mov
or
and
fwait
inc
fildll
jg
addl
xchg
lock
fs
sbb
lods
arpl
sub
jp
mov
arpl
pushf
test
pop
xor
das
fdiv
cmpsb
or
cld
sbb
mov
test
fdiv
decl
fildl
clc
jl
pop
mov
and
popf
pop
xor
mov
push
xchg
stos
test
mov
pop
mov
ss
fnstenv
inc
sub
cmp
adcb
lahf
pop
mov
cmpsl
out
adc
jns
xchg
push
sub
or
pop
fsts
call
sub
sub
stos
sub
fildll
jne
outsb
mov
popw
std
movsb
sbb
test
jmp
cmpsl
les
and
sub
mov
out
out
xchg
mov
and
cmp
jge
shlb
outsl
xor
xor
fsts
push
int
addr16
pop
dec
ret
stos
es
jl
out
inc
popf
aad
sub
xchg
fcmove
or
and
cmpsl
ret
cmp
nop
and
cmp
ds
aad
in
cwtl
sbbb
loop
dec
cmp
mov
aas
cmp
mov
pop
or
rcll
adc
ret
fbstp
xchg
int3
push
pushf
inc
fdivl
cmp
push
aas
jae
sbb
lods
jl
loopne
arpl
repz
pop
rorl
add
scas
mov
xchg
test
call
cmp
fucom
fsubs
jmp
mov
jae
push
lods
push
in
inc
pop
or
mov
push
xchg
and
xor
push
dec
out
or
jp
testl
pop
cmp
cmp
add
andl
xchg
sti
shlb
hlt
sbb
push
fistpl
icebp
decl
push
in
fs
fildl
daa
mov
sub
or
sub
in
adc
jmp
cmp
jns
cmpsb
sbb
and
pop
movsl
xchg
mov
pop
aad
movsl
jo
arpl
pop
js
hlt
push
xlat
push
mov
or
fiaddl
push
rolb
lds
jns
dec
sub
outsl
frstor
in
sahf
push
mov
push
push
jge
out
xchg
push
jg
push
adc
fcomps
jg
push
jle
jp
jge
adc
bound
push
inc
xor
add
jecxz
in
repz
popa
rolb
aas
mov
inc
xchg
xchg
sbbl
test
xor
add
xchg
aam
loope
cmp
mov
add
xor
shll
rcr
nop
pop
xchg
xchg
inc
add
adc
ret
ret
test
xchg
or
xchg
adcl
jae
mov
shrl
mov
sbb
add
mov
repz
pop
jae
add
pop
ret
and
rcr
xchg
push
inc
sub
dec
das
lret
ja
xchg
test
mov
nop
cmc
mov
push
push
lret
sub
clc
gs
sahf
and
xor
xor
cmp
sbb
sub
or
scas
add
add
stos
cld
push
mov
or
bound
fistps
xor
mov
scas
mov
pop
xor
push
mov
dec
sbb
and
lahf
mov
pop
jns
sub
adc
and
dec
cmp
adc
pop
xor
or
inc
ss
out
in
arpl
pop
in
inc
cmpsb
add
pop
pushf
enter
xchg
std
or
addr16
imul
mov
sbb
mov
or
dec
je
push
pushf
lods
sub
sbb
aam
subb
and
fistl
xchg
inc
fwait
sbb
pop
sbbb
cmp
movsb
or
scas
sub
popf
pop
mov
loop
cmp
mov
pop
movsl
sbb
imul
lods
into
ljmp
dec
jb
je
mov
cmp
cltd
pop
and
xchg
lcall
sub
add
inc
stos
xchg
or
insl
cmp
or
dec
pop
fldenv
cmp
sub
push
xlat
sbb
out
jle
lods
orb
stc
mov
mov
add
repz
lock
jl
subb
movsb
stos
movsl
insl
jne
shlb
fimuls
dec
pop
aad
jno
cld
jmp
stc
sub
jmp
shrb
call
dec
mov
sub
repz
cmp
ljmp
or
int
mov
xor
lds
add
mov
sbb
repz
outsl
cli
xor
pop
push
in
pop
repnz
outsl
add
pop
fiaddl
push
test
mov
ja
sub
enter
aaa
aad
mov
enter
pop
dec
add
inc
dec
cmpsb
dec
mov
lea
adc
shll
cmp
jbe
div
pop
push
jno
ss
jl
lret
mov
xor
popl
push
cli
rorb
fsub
cmp
and
push
mov
hlt
in
dec
mov
and
clc
mov
or
mov
in
testl
dec
popa
daa
add
stc
push
dec
mov
xor
sbb
ds
add
fnsave
push
insb
ja
es
jge
fists
cmp
sbb
xchg
mov
stc
xchg
popf
mov
pop
xchg
data16
fisttps
cld
adc
jo
out
mov
push
sbb
fisubs
popf
arpl
js
dec
loope
xchg
push
push
xchg
rcr
or
push
pop
xor
fisubl
loop
mov
ds
dec
push
or
jo
push
ret
push
cld
aam
ds
xchg
sarl
cmc
movsl
outsl
ljmp
js
mov
cmp
ret
sbb
sarb
mov
jne
mov
jnp
push
das
or
fisttpl
or
or
in
mov
pop
xchg
xchg
dec
mov
scas
movsb
sub
mov
or
mov
mov
ja
inc
sbb
jb
call
scas
loop
dec
dec
cmc
fdivl
cmp
jns
cmp
jne
pop
sub
sbbb
lret
fidivrl
std
push
add
sub
mov
cld
mov
aam
sbb
adc
xor
roll
int
outsl
shll
adc
push
or
shl
lcall
jmp
dec
sub
push
mov
jecxz
testl
mov
adc
and
mov
adc
xor
lock
cmp
test
sbb
mov
sub
outsl
xor
pop
stc
dec
loop
pop
jl
jmp
repz
aas
adc
gs
push
in
pop
dec
inc
fcmovb
mov
push
das
add
sub
jp
xchg
lahf
jge
out
inc
divl
push
xor
popf
cld
imul
jno
icebp
xchg
leave
sbb
mov
scas
lods
shl
push
repz
cmp
push
cmp
xor
or
cli
pop
je
dec
pop
test
xchg
push
les
and
and
fnstenv
jmp
xchg
mov
cmp
test
adc
cli
jg
mov
jecxz
mov
mov
and
repnz
js
mov
cmp
inc
into
addl
dec
mov
xchg
dec
xchg
push
xchg
aas
lock
mov
call
hlt
sbb
jae
jmp
xchg
out
and
imul
push
insl
out
dec
mov
jmp
inc
in
push
fsubrs
enter
sbb
lds
mov
push
in
pusha
mov
xchg
mov
out
add
cmp
es
mov
jg
add
push
adc
ret
int
dec
jne
add
pop
push
cmp
dec
add
imul
imul
adc
cmp
cli
mov
addl
cmp
pmuludq
xchg
inc
push
mov
in
cmpsb
sub
fsubrp
imul
sbb
or
repnz
add
movsb
or
xor
push
lds
aas
mov
add
rolb
fs
xor
pop
out
call
jns
ds
leave
push
cmpl
mov
cmc
test
jne
add
jb
jae
cld
xor
pusha
or
add
jp
mov
cs
mov
icebp
out
jmp
ljmp
imul
cwtl
nop
dec
pop
in
add
cmpsl
loop
daa
mov
xlat
imul
and
das
fwait
lods
das
mov
mov
bnd
add
jbe
cs
sub
das
repnz
lret
push
into
stc
std
stos
sub
icebp
mov
aad
test
push
stos
pop
mov
cmp
add
aad
jg
cwtl
out
pop
adc
sbb
mov
dec
shll
sbb
mov
decb
movsl
stos
fwait
popf
pusha
add
scas
fucomp
popl
stos
jbe
mov
cs
xlat
jmp
insb
inc
or
stos
test
fmuls
lret
adc
push
shlb
pop
inc
push
sbb
clc
lret
mov
mov
xor
push
and
jae
xor
push
sub
mov
add
add
insl
ja
gs
shrb
ss
stc
inc
or
cmp
pop
mov
adc
push
sub
ret
xlat
js
mov
adc
std
aad
add
mov
aas
out
fwait
sbb
or
mov
jmp
lret
xor
movsl
ds
test
and
std
in
daa
jns
adc
mov
fdivl
mov
sub
test
and
or
sub
mov
or
out
pusha
push
lret
fldenv
pop
cli
inc
jo
sahf
mov
enter
lods
lret
insb
dec
jmp
aaa
into
push
add
xor
insl
daa
rol
enter
fimull
or
sbb
pop
mov
mov
pop
xor
cltd
pop
outsb
and
movsb
pop
rcrl
jl
cmp
int
xchg
mov
mov
mov
cmc
in
loopne
sahf
call
inc
incl
push
int3
add
incb
jo
leave
pop
orl
push
repnz
loopne
jmp
xchg
xchg
mov
popa
mov
insb
in
jb
cmp
pusha
sbb
daa
jns
test
out
or
and
pop
or
loop
fs
test
decb
jns
pusha
je
mov
rorl
fistpll
inc
popa
lods
mov
stc
lds
xorb
fiadds
or
idiv
pusha
jbe
pusha
int3
int3
dec
hlt
repnz
inc
js
lock
daa
or
fmuls
cmc
mov
mov
insb
dec
mov
test
call
cmp
mov
sti
mov
xchg
jb
mov
push
inc
js
imulb
add
pushf
sbb
inc
xchg
sub
data16
lods
orb
loopne
add
cmp
mov
out
idivb
inc
xchg
sbb
inc
sbb
inc
xor
test
movsl
cmp
cli
cltd
stos
arpl
pop
sub
icebp
jle
aaa
cmp
fisttpl
and
jae
sbb
inc
mov
fwait
mov
jle
scas
in
jne
jp
pusha
sub
repnz
movsb
dec
xor
adc
jecxz
dec
push
enter
pop
stc
loop
or
jl
jmp
popf
sub
jne
cmpsb
adc
test
lods
ds
adcb
xor
pop
daa
push
dec
sti
js
pop
leave
xlat
or
shr
out
scas
fbld
xor
pop
pop
sarl
test
jmp
jns
mov
sbb
fs
pop
out
sub
add
int
cmp
xlat
fistl
mov
inc
aaa
inc
das
mov
xchg
xchg
xor
sti
sbb
cs
test
sub
cltd
cli
xchg
sbb
sbb
fidivs
sub
sbb
sub
mov
jecxz
test
push
jbe
rolb
push
out
xlat
ja
push
inc
inc
xchg
push
add
daa
div
aaa
xlat
push
and
outsb
jmp
push
inc
test
test
dec
pusha
xlat
cmp
mov
sub
adc
enter
pop
stos
les
push
shrl
gs
or
sbb
negl
or
adc
ja
iret
add
fisubs
pop
push
fisubrs
or
inc
pusha
and
push
fdivrp
pop
cwtl
cmp
test
sub
push
pop
push
scas
repz
dec
loope
dec
push
mov
pushf
cmp
ret
sbb
xchg
sub
adc
shr
js
pop
push
outsl
cmpsb
sub
xor
jb
mov
push
or
daa
cld
xor
cltd
jp
test
ret
call
lods
adcl
shl
sbb
add
cmp
es
cli
mov
mov
or
and
std
aad
jne
js
adc
mov
lret
repz
insl
adc
mov
pusha
lds
loop
mov
pushf
push
pop
in
fsubrl
lret
insb
jmp
bound
push
sbb
fimull
daa
lret
or
stc
mov
sub
into
js
push
in
dec
inc
faddl
xor
mov
mov
and
shrb
aaa
ljmp
icebp
movsb
inc
pop
fwait
aad
xor
lods
sub
jl
std
cs
rclb
xchg
andl
aam
xchg
ljmp
adc
clc
mov
nop
fwait
and
adc
int3
ficompl
adc
ret
add
lahf
jbe
shrb
imul
sub
addb
fisubrl
pop
test
rorb
cs
out
imul
lds
mov
rcll
lahf
daa
push
pop
push
and
sub
adc
outsb
out
xor
imul
lret
and
in
jl
dec
pop
mov
leave
or
xchg
add
xchg
das
push
int
and
and
lds
loop
mov
stos
mov
jo
mov
xor
mov
add
pushf
lret
stc
sbb
inc
jbe
jnp
ja
xchg
shr
pop
bound
inc
addr16
sub
out
and
pop
pop
test
pushf
cltd
clc
jmp
dec
jb
cld
pushf
in
fidivl
lea
int3
push
mov
aaa
loope
rclb
mov
ret
ja
sti
scas
dec
push
repz
pop
sahf
jae
orb
xchg
add
clc
cltd
ret
jno
jb
push
dec
mov
push
push
jp
sbb
notb
out
mov
xchg
mov
mov
push
outsb
cld
scas
into
fdivs
ljmpw
fbstp
xchg
dec
int3
cmp
movsb
xor
xor
push
data16
fadds
je
mov
fsubs
pop
add
int
cmp
cmpsl
pop
int3
inc
gs
lret
call
nop
cmp
mov
jnp
xchg
stos
pop
sbb
stos
fcmovnbe
xor
mov
jp
jle
or
jne
or
push
mov
push
iret
push
push
cmp
fs
xchg
adc
cmp
sbb
lods
data16
ss
int
inc
stc
xlat
test
xor
or
push
jns
push
jb
add
rcrb
faddl
out
dec
repz
inc
loop
js
loopne
es
pop
cmp
cltd
sarb
cbtw
pop
adc
sub
fdivrl
loope
cmp
jle
inc
jns
cli
adc
or
inc
cmp
addl
inc
xor
scas
loope
sti
icebp
adc
sbb
pop
mov
mov
or
xchg
arpl
hlt
es
stos
xchg
cli
orb
cli
mov
cld
dec
jb
sbb
xchg
fsts
gs
lea
push
or
push
jl,pn
pop
mov
stos
aad
and
push
sub
jb
sbb
xchg
or
mov
adc
mov
leave
std
repnz
std
imul
and
push
js
dec
add
inc
insb
enter
loop
clc
or
test
lcall
pop
repz
dec
cmp
push
addr16
xchg
inc
lock
js
loop
sbb
sub
ds
out
shr
fcomp
lret
roll
fcoml
mov
clc
lret
jmp
push
xor
mov
dec
jne
ja
jecxz
lahf
jl
mov
gs
xor
add
mov
push
fisubs
mov
fiaddl
add
sti
push
xchg
aad
clc
jb
cmpsb
shr
mov
repz
sub
push
leave
repz
inc
mov
mov
sbbl
das
je
jge
xchg
sbb
shlb
inc
add
cmp
jne
test
mov
cmp
stc
dec
mov
lods
fldt
sarl
xchg
imulb
cmp
adc
ds
mov
fldl
mov
xchg
add
xchg
notb
dec
out
pop
daa
stc
cmpsb
pop
or
mov
stos
pop
mov
out
fwait
negl
ret
ljmp
sub
jo
scas
repnz
and
movsl
imul
cli
inc
int3
lcall
add
cltd
dec
cmp
push
pusha
xchg
push
inc
add
pusha
popl
and
hlt
cmpsb
mov
stos
in
xor
push
sidtl
shll
inc
jae
in
pop
fnsave
sub
xor
lods
loop
sbb
out
dec
dec
mov
fiadds
xlat
ljmp
or
or
inc
cmp
and
pop
push
and
xor
pop
repz
in
shlb
mov
adc
loope
and
pop
and
test
pop
jns
mov
dec
lcall
loop
mov
popa
movsb
stos
or
lret
jl
xor
loope
mov
xor
les
call
insb
dec
fsubrs
jnp
sbb
inc
mov
andb
dec
dec
mov
push
ss
ret
mov
pushf
xchg
loope
xor
and
push
ss
add
push
ja
lretw
popf
xor
imul
lcall
adc
push
inc
pop
call
dec
xor
repz
or
shll
out
adc
push
into
xchg
addl
add
aaa
ret
cmp
inc
loopne
push
out
sbb
movsb
push
bound
xor
dec
cmp
loopne
cmp
jg
addr16
pop
ret
hlt
xorb
sarb
test
mov
scas
dec
and
imul
sub
and
sbb
and
or
xor
xchg
xchg
dec
testl
inc
out
xchg
jle
cli
mov
scas
add
jge
nop
pop
jae
in
lret
adc
dec
sbb
pop
jl
jo
leave
mov
jmp
cmpsl
leave
scas
mov
push
fmull
cmpsb
mov
fsts
xchg
push
mov
test
jp
mov
inc
add
int3
pop
sbb
loope
inc
and
push
or
sub
test
push
xchg
inc
inc
mov
jmp
dec
push
fisubrs
icebp
das
lret
mov
jo
adc
es
inc
mov
sbb
jbe
push
or
mov
mov
flds
and
mov
adc
mov
inc
xchg
bound
js
rorl
adc
inc
fcmovu
mov
push
sbb
sahf
and
stos
mov
inc
stos
pop
addb
test
mov
sbb
dec
inc
inc
rorl
mov
das
frstor
push
mov
cmpsl
outsb
call
insl
std
add
xor
leave
jae
das
es
dec
xor
cwtl
out
cmpsb
pop
or
fcoml
jne
mov
test
cmp
xor
mov
sub
fdivr
xor
pop
lods
lods
mov
pop
jnp
pop
loopne
pop
popf
adc
push
mov
dec
inc
mov
mov
inc
mov
loope
push
sti
mov
movb
mov
cmp
insl
cmc
call
mov
cmc
push
es
cmp
stos
inc
into
arpl
dec
outsl
mov
adc
jl
sbb
mov
mov
xor
push
les
ret
push
add
jnp
rcl
cmp
bound
and
imul
pop
ljmp
pop
xchg
outsb
dec
fldenv
sbb
xchg
or
insl
push
call
jg
dec
test
jns
add
inc
cmp
hlt
adc
dec
aaa
in
mov
sahf
push
inc
orb
pusha
scas
or
pop
mov
cs
jmp
sbb
mov
push
inc
scas
fldl
xchg
sub
push
fs
jmp
rcll
lock
test
mov
inc
loopne
jno
repz
adc
sbb
jge
xor
pop
xor
cmpsl
incl
mov
mov
xchg
add
out
call
inc
add
push
pop
ja
add
mov
int3
sub
add
mov
ss
shrl
xchg
push
xchg
sub
aas
mov
push
jo
xchg
sub
insl
popa
inc
mov
int3
or
and
xorl
push
loop
mov
sbb
mov
adc
das
inc
enter
enter
mov
addb
mov
fists
inc
mov
ret
lret
mov
js
sub
inc
add
mov
mov
xchg
in
xchg
idivl
cld
pushl
push
imul
subl
jae
push
push
cmc
adc
mov
cmpsb
stc
sbb
sbb
movsb
pop
pop
fs
pop
pop
adc
out
test
cltd
lcall
and
inc
test
cmp
xlat
dec
sub
in
adc
and
mov
push
sub
inc
adc
lock
xlat
dec
insl
das
sbb
lret
pop
idivb
loope
push
pop
imul
imul
sbb
dec
subl
or
fldt
dec
xor
inc
dec
cltd
lods
jnp
ret
jo
mov
inc
cmpsl
icebp
mov
mov
ret
imul
ds
add
insl
out
cmc
int3
mov
aaa
or
in
shrl
mov
nop
or
sbb
das
pop
adc
bnd
out
mov
push
fldl
fistpl
sbb
dec
push
jns
stos
pop
xor
mov
loop
shll
imul
popf
sub
fwait
mov
ret
dec
ret
loop
cmp
mov
add
xlat
mov
adc
mov
in
mov
pop
push
sub
cltd
lahf
xchg
pop
imul
insb
jb
lcall
lcall
sub
repz
lods
mov
pop
push
hlt
add
push
push
xchg
sub
pop
pop
mov
inc
ds
idivb
hlt
pushf
pop
stos
jecxz
mov
or
cmpsl
pop
push
adc
xchg
and
sbb
or
pop
pop
mov
xchg
das
jns
shll
rcll
in
mov
inc
aas
push
movb
push
jne
or
rcrb
pop
les
jp
sbb
cltd
push
xor
iret
xor
mov
mov
fldt
cs
cmpsl
test
sub
in
pop
mov
inc
arpl
xor
insb
or
jb
subl
sub
cmc
nop
cmp
rol
test
cmp
xchg
sbb
stos
mov
fdivp
xor
fistl
dec
hlt
inc
mov
orb
xchg
fcoml
sti
pop
pushf
xor
leave
inc
mov
dec
xor
fisubrl
cmp
stos
push
mov
jbe
aad
adc
outsl
xchg
fidivs
jb
dec
dec
dec
adc
imul
push
aam
fistpll
fmull
test
xor
js
xchg
cmp
mov
loope
dec
outsl
outsb
mov
or
dec
mov
jl
in
sub
mov
mov
stos
mov
inc
fwait
sub
sub
push
dec
cwtl
and
ret
mov
popa
aam
jns
push
cmpsb
adc
mov
sub
out
jle
hlt
stc
and
add
pop
shll
popa
add
out
or
rcl
mov
add
inc
out
inc
mov
jecxz
mov
cmp
jg
aas
jmp
loopne
js
out
mov
movsl
ds
push
cmp
fs
fwait
rolb
insb
ss
pop
test
out
andb
mov
lea
ret
pop
cmp
add
jo
and
div
xchg
xchg
mull
inc
push
jge
jecxz
test
jnp
sbb
lods
fdiv
lods
mov
jg
adc
jo
push
mov
outsl
fisubl
sbb
adc
xor
or
mov
movsl
in
lret
mov
jno
push
into
sbb
test
jo
cmp
xchg
add
lcall
sbb
add
ret
inc
jbe
inc
out
push
std
hlt
push
xor
inc
stc
jp
mov
inc
xor
stos
xchg
or
jnp
add
repnz
mov
lods
stos
std
cld
scas
clc
repnz
andb
pop
xor
jne
stos
les
add
jnp
fdivl
mov
or
xor
push
xor
pop
push
insl
lods
pusha
jno
and
shll
loop
push
mov
adc
daa
pop
inc
cmc
xchg
cltd
scas
pop
xchg
cmc
gs
jb
cs
test
xor
aad
jmp
in
cld
or
je
rcl
push
pop
rcr
mov
cld
sub
or
sub
clc
cli
pop
sub
lds
movsb
movsb
in
push
sbb
stos
nop
adcl
ljmp
es
in
jg
xchg
sbb
shrl
sti
push
ss
bswap
fnstsw
into
shll
cli
lods
pop
dec
and
in
popa
xchg
mov
fwait
inc
addr16
or
pop
lcall
imul
push
sub
in
or
dec
iret
lret
fists
test
add
rcll
fwait
js
in
dec
fldt
cld
les
test
mov
shlb
inc
jbe
out
mov
mov
mov
call
jnp
sahf
imul
add
sub
pop
or
sub
jae
addr16
or
cmp
sub
out
popa
jnp
addl
adc
jge
cmp
bound
dec
and
dec
sbb
and
notrack
xchg
push
jg
lods
loope
loopne
and
jp
testb
pop
push
jg
mov
stc
ds
test
leave
jno
loop
lock
and
xor
mov
imul
xor
das
loopne
ret
xchg
sub
pop
cli
add
mov
push
jns
inc
mov
outsl
xchg
test
out
jl
adc
call
stos
fdiv
adc
outsb
xchg
mov
scas
jmp
adc
test
clc
into
nop
mov
sbb
sahf
mov
pop
sbb
fsubr
cld
pop
loopne
sti
les
ret
sahf
cmp
enter
imul
inc
test
cmp
mov
sub
sbbl
cld
les
xorl
lods
mov
sbb
push
sbb
push
jecxz
and
lock
aas
in
jnp
ljmp
inc
inc
insb
sahf
sti
and
fiadds
hlt
jo
sub
mov
xchg
je
cmovb
and
and
push
mov
mov
dec
jmp
idivb
inc
int
ficompl
add
imul
inc
push
mov
cmp
pop
out
pop
and
and
les
fsubr
cld
pop
mov
loop
cltd
sbb
jae
pop
dec
das
les
test
aam
ficoml
sub
sub
outsb
ss
sub
inc
ja
pop
enter
popf
mov
clc
test
pop
jecxz
aam
sub
jb
push
popa
mov
jle
xor
fiaddl
lea
ficomps
inc
inc
fcmovb
ret
lods
shr
out
gs
std
and
or
cmpsb
test
rcr
pushw
rorl
test
inc
out
les
cmp
inc
addr16
sarb
out
lret
mov
mov
jo
dec
out
add
mov
sbb
sbb
cmp
outsb
fbld
cmp
cs
mov
icebp
add
sbb
fidivl
mov
insb
cwtl
jecxz
mov
dec
jb
cmp
mov
data16
jno
xor
jne
cmp
dec
aad
push
and
loopne
add
pop
iret
cltd
imul
dec
dec
adc
add
xchg
xchg
shll
popa
js
adc
xor
and
jmpw
adc
mov
and
ss
inc
xor
mov
mov
arpl
insl
sbb
aad
and
xchg
rcrl
add
shrb
sbb
rolb
inc
dec
mov
aam
setg
stos
adc
cmp
fsts
or
test
test
lcall
mov
fbstp
fidivs
push
jo
jmp
mov
icebp
iret
loop
inc
push
fisttps
sbb
fucomp
test
std
sub
mov
push
push
inc
inc
je
sbbb
fs
hlt
das
and
push
sub
dec
test
cmp
das
lods
mov
jecxz
push
adc
push
and
and
je
sub
or
mov
mov
adc
daa
loop
btr
lods
bound
rclb
aaa
ret
jns
inc
cli
aad
pop
xor
js
fstpl
add
mov
imul
xor
daa
cmp
jne
dec
mov
in
dec
sub
sbb
inc
xlat
cmc
adc
or
push
dec
jl
sbb
mov
mov
jns
xchg
dec
jne
push
sub
mov
jb
cmpsl
loopne
mov
inc
ror
sbb
push
xchg
and
mov
mov
push
fildl
test
pop
jmp
nop
lock
sub
mov
inc
loope
sarb
mov
xlat
adc
test
cmp
test
imul
push
mov
pop
jns
pop
jb
push
jle
adc
inc
imull
xor
iret
in
fidivl
xchg
ja
pop
or
pusha
mov
shrl
pop
js
leave
call
xlat
imul
xor
pop
sbb
adc
xchg
inc
mov
aad
aaa
icebp
daa
pop
jns
sub
or
pop
movsb
in
inc
movsb
gs
test
mov
int
aaa
adc
enter
mov
cwtl
rclb
or
jmp
adc
stc
jbe
movsl
nop
cmpsl
mov
imul
dec
push
dec
mov
lcall
lock
mov
lahf
pop
lcall
test
or
cmpsl
mov
rcrb
xchg
xor
outsb
adc
add
lea
fldt
xor
jae
sub
xor
lods
js
sbb
sti
jge
jmpw
push
or
xchg
jmp
jge
stos
loopne
mov
int
adc
add
jmp
jnp
jo
push
fucomip
sub
fistl
add
push
push
ret
ficoml
fwait
pop
inc
mov
pop
outsb
lahf
loopne
or
lods
sbb
mov
xchg
ds
xor
jnp
inc
mov
addr16
or
dec
cmpsb
push
lea
cmpl
fcomps
mov
adcb
sahf
enter
jmp
cmp
les
xor
fstp
adc
xchg
dec
insb
sub
cli
out
pop
sbb
loop
fistps
stos
sub
lock
xor
jg
jecxz
loop
xor
inc
and
pop
xor
sahf
adc
cmc
sbb
or
xor
xor
rorl
add
cs
test
insb
jmp
lds
cld
mov
es
mov
rolb
fwait
call
ds
add
out
jnp
movsb
cmp
mov
push
test
aaa
dec
add
push
sti
popf
sarb
mov
test
adc
lds
movsb
outsl
into
rol
mov
xchg
cltd
adc
sub
out
jecxz
xchg
lock
dec
das
mov
or
and
xlat
mov
aad
mov
jae
add
enter
int3
sub
pop
adc
aam
sub
and
push
roll
or
imull
cmpsl
dec
out
test
xlat
and
mov
mov
frstor
mov
push
movb
daa
hlt
call
dec
movsl
sbbb
cli
and
mov
aad
mov
pop
incl
jb
jmp
push
repz
pop
xchg
ljmp
add
mov
jl
scas
inc
outsl
mov
out
lret
or
inc
repz
test
push
or
in
cltd
add
dec
sarb
dec
and
lahf
xor
pop
out
int3
and
cld
sub
adc
and
dec
jno
shrl
mov
mov
push
mov
xchg
sbb
aam
scas
xor
stos
mov
xchg
insl
push
out
andb
xor
gs
clc
push
aam
cmp
loopne
lret
fst
int
jns
testb
jns
xchg
sbb
popa
mul
aam
sub
mov
bound
or
sbb
and
xchg
push
out
cmp
dec
fiaddl
jns
divl
jle
mov
sub
test
add
daa
fdivl
fisttpl
xchg
popa
dec
jecxz
ja
gs
repz
mov
sahf
gs
cmp
and
test
push
pop
pop
jno
psrld
add
mov
arpl
mov
or
adc
jmp
shrb
mov
jg
inc
scas
inc
xor
push
xchg
jno
cmc
dec
pop
push
xor
sbb
shlb
ss
in
leave
or
ja,pt
ds
rolb
sub
push
lret
pop
out
cld
mov
jmp
mov
mov
outsb
cld
sbb
cmpsl
sbb
add
or
sbb
cmc
aaa
add
mov
cmp
push
rol
dec
ljmp
cwtl
mov
sbb
mov
stc
jp
and
mov
inc
out
adcb
pop
cmpl
inc
call
lret
aas
cmc
hlt
mov
mov
icebp
push
jne
out
inc
rorl
inc
cmpsb
test
icebp
fisubrs
add
inc
xor
test
test
fistpl
sub
inc
mov
and
mov
rcll
lret
clc
imul
adc
mov
mov
in
add
lret
cmp
mov
mov
mov
hlt
mov
js
mov
push
pop
cmp
popa
push
xchg
push
dec
minps
cmp
mov
popf
outsl
push
lahf
fwait
icebp
pop
hlt
out
sbb
cltd
and
icebp
lahf
fldenv
loop
xor
int3
dec
mov
bound
repz
add
xchg
shll
mov
push
rol
cs
aas
sbb
dec
cmp
jmp
jl
jmp
hlt
sbb
movsb
mov
test
out
lock
push
sti
pop
ret
and
mov
aam
dec
or
or
or
mov
sbb
gs
mov
cltd
or
out
xchg
pop
mov
movsl
xor
daa
dec
xchg
outsl
data16
data16
dec
inc
imul
xchg
jnp
ficomps
cli
fnstcw
add
or
jo
enter
push
push
fdivr
jbe
cld
xor
test
jns
cwtl
testl
or
mov
loopne
push
cmpsl
enter
adc
js
insl
dec
pop
cwtl
clc
jmp
push
xchg
addb
iret
in
sub
lahf
shrl
xchg
nop
in
xchg
fsubr
clc
cmp
pop
sub
mov
and
mov
shrl
cmp
int
sbb
lods
movsl
adc
fiadds
and
mov
mov
and
push
pusha
adc
fcompl
and
mov
inc
and
mov
icebp
loope
dec
into
enter
cwtl
lods
pop
sarl
cmpsb
pop
movsl
shr
test
mov
mov
fwait
out
or
jp
jg
int
leave
jg
xchg
inc
mov
mov
cmc
js
sahf
bound
bound
xchg
mov
shrl
pop
test
sahf
dec
inc
ret
imul
ret
pop
mov
ror
jp
push
pop
out
test
jns
or
push
outsl
add
movsl
push
xchg
test
test
les
push
cmp
jae
jno
ficompl
push
push
iret
and
aaa
or
fdivs
ja,pn
andb
inc
jne
jge
or
add
or
fsubr
mov
inc
mov
nop
fnstsw
sub
iret
lahf
xlat
xlat
inc
adc
jl
lock
mov
xchg
test
mov
jne
jno
push
out
out
adcb
je
and
mov
icebp
rcl
mov
adc
and
adc
scas
cmp
add
sbb
jg
lret
mov
popf
adcb
push
gs
push
in
out
hlt
lea
call
imul
xchg
pop
xchg
bnd
dec
fidivs
sbb
inc
cld
mov
inc
test
jp
mov
cmpsl
add
and
cmp
jge
add
dec
enter
ret
popf
or
mov
pop
lods
push
repz
mov
bound
test
pop
add
jb
daa
dec
movsl
or
dec
in
push
push
push
inc
outsl
push
out
lods
sbb
fisubl
xor
mov
add
dec
pop
in
lods
int
dec
cmpb
cs
and
inc
ss
mov
cmpsb
adc
mov
ret
dec
xchg
inc
or
jl
pop
add
jns
xor
sub
xor
mov
lds
pop
pop
movl
ss
sahf
mov
loopne
pop
aad
sbb
jmp
jl
mov
mov
jge
mov
mov
push
fisubs
mov
dec
fs
mov
mov
ret
push
push
inc
arpl
cmp
ror
dec
mov
mov
push
pop
xor
out
jp
loop
jmp
ja
jne
nop
inc
mov
mov
insl
cmp
inc
flds
push
add
pop
mov
xorb
mov
mov
pop
outsl
fwait
xchg
cmp
or
fucom
push
mov
or
sahf
wrmsr
push
mov
push
std
jae
xchg
mov
iret
dec
mov
loopne
bound
sti
cltd
sub
cmp
cmpsb
rcl
add
popf
add
add
sub
subb
out
nop
or
or
int3
dec
lods
cmp
xchg
lea
rcrl
mov
and
jp
pop
xchg
cmp
adc
icebp
pop
pop
dec
xchg
gs
add
stc
mov
mov
mov
mov
dec
cmc
mov
jmp
pop
and
aas
out
adc
fcomps
lds
popf
int3
mov
mov
bound
orl
jnp
out
xchg
std
mov
mov
dec
in
and
push
cwtl
mov
xchg
pop
repnz
test
cwtl
rolb
lcall
mov
mov
fstp
adc
leave
movsl
dec
jmp
int3
sbb
mov
jge
notl
popf
cwtl
sub
push
add
ret
add
jecxz
mov
push
dec
jo
ficompl
dec
jno
aaa
adc
loop
mov
imulb
movsl
adc
mov
mov
jp
inc
loopne
repz
or
add
mov
es
fistl
pop
fisubs
push
add
add
pop
pop
call
mov
mov
adc
xlat
cmp
outsb
xchg
pop
in
addr16
shlb
xchg
jl
adc
xchg
fs
sahf
mov
add
xchg
sub
push
cltd
adc
movsb
and
mov
mov
imul
addl
das
jl
icebp
and
mov
cwtl
and
dec
mov
xor
data16
aaa
leave
stc
in
insl
and
xchg
add
repz
std
inc
adc
push
jb
cmp
fisttps
bswap
jg
inc
pop
call
and
push
xchg
xchg
shrl
fdivl
loope
in
cltd
push
add
out
sub
cmpsl
int3
and
lds
pop
add
mov
add
les
or
jo
bound
sub
lods
rorb
jbe
jno
pushf
leave
call
cmpsb
movsl
adc
xor
lcall
or
cmpsl
jo
pop
inc
mov
out
pop
shl
icebp
lret
lods
rolb
lahf
lods
ja
int
ljmp
or
pop
xchg
xor
xchg
push
ja
mov
test
fwait
xor
cmpsl
sti
cwtl
jne
insl
popf
xchg
xchg
inc
jmp
xchg
xchg
pusha
sub
sub
popf
adc
xchg
stos
cmp
mov
sub
xchg
pop
mov
repz
ljmp
scas
pop
pop
xor
jnp
pop
dec
pop
jae
adc
in
sub
test
pop
hlt
into
insb
or
push
in
push
fsts
sbb
fadds
pushl
jno
addr16
cs
insl
add
lea
fs
dec
mov
sbb
rorb
jbe
into
push
adc
iret
mov
ret
xor
pop
fadd
gs
fstl
adc
xchg
ja
dec
sahf
aaa
sbb
or
cltd
pop
cmpsb
lods
repnz
lret
adc
cmp
out
inc
mov
mov
sti
push
cmp
stos
sbb
out
iret
cmc
lahf
ds
xchg
loop
cmc
repz
in
adc
insb
dec
movsb
inc
push
pop
clc
push
nop
shrb
ds
cmp
mov
rcrl
fidivs
nop
ret
dec
stos
aaa
jbe
sbbb
pop
mov
jo
cltd
insl
sbb
bound
xchg
and
push
mov
lahf
jbe
cld
cmp
sbb
sbb
mov
imull
rclb
adc
push
lods
out
inc
movsl
jno
push
mov
out
loop
mov
in
cs
or
cmp
cmp
xor
aaa
sub
push
sahf
in
pop
inc
popaw
popf
push
cmpl
mov
jecxz
pop
lahf
mov
add
pop
push
mov
es
xchg
jne
mov
outsb
xchg
lret
dec
inc
insb
xchg
scas
jl
mov
add
mov
jle
and
xor
mov
or
cmpsb
and
pop
inc
dec
in
mov
stos
into
stos
arpl
cwtl
fmuls
imull
lods
xor
sbb
shl
fndisi(8087
or
jae
test
popa
xchg
push
jnp
add
gs
outsl
pop
movsl
cmc
sbb
outsl
and
in
xchg
mov
outsb
inc
fdivrs
sbb
add
std
push
adc
js
push
mov
pop
int
pop
inc
cmpsl
imul
dec
cli
fildll
mov
movsb
lock
cli
mov
test
push
out
add
jge
inc
and
dec
in
movsl
idiv
fidivs
aas
cltd
mov
push
rorl
cmp
shrl
mov
sub
repnz
inc
and
cmp
dec
adc
mov
mov
mov
sbb
push
pop
add
pop
lea
fsubrl
sub
mov
je
sti
inc
add
je
sbb
roll
push
mov
xlat
pushf
call
cmp
addr16
flds
cmpsb
mov
mov
add
xchg
cmp
out
loope
inc
les
xor
lret
inc
das
or
inc
xor
sti
pop
cli
iret
mov
in
movsb
cld
ljmp
clc
js
mov
xchg
clc
movsl
ss
sbb
cltd
xchg
shlb
mov
add
adc
fistps
loope
mov
leave
negl
and
dec
mov
dec
fsubs
shll
and
movb
mov
jg
sbb
iret
cwtl
jns
and
push
aam
xor
out
push
imul
or
dec
mov
push
stos
push
js
pop
inc
xchg
adc
enter
js
fimuls
or
adc
inc
es
inc
sbb
inc
bound
cltd
inc
jmp
mov
jmp
mov
mov
push
leave
lods
jle
xor
testb
mov
jmp
rcl
mov
fdivl
adc
push
sbb
into
xchg
leave
jp
lds
es
enter
mov
add
sti
inc
imull
fisttpll
and
inc
and
jnp
sbbb
or
cmpsb
xchg
dec
sub
mov
lret
ret
fisubrs
mov
aam
cmc
out
int3
add
lcall
int
push
enter
sbb
push
or
test
and
jge
mov
sarl
scas
cltd
push
int
jb
std
xor
imul
add
lods
in
jmp
adc
pop
ljmp
cmp
test
sbb
test
out
push
xchg
pop
out
pop
and
lods
jne
pusha
in
lea
test
cli
or
aam
jno
test
and
call
jp
test
jae
out
lock
iret
std
inc
iret
test
loope
xor
dec
rolb
or
data16
cmpb
test
lret
iret
ret
iret
pusha
ficoms
std
mov
and
cs
xor
fwait
mov
les
cltd
sbb
in
je
ds
ljmp
mov
lods
mov
scas
scas
mov
or
sub
or
mov
mov
push
mov
outsb
cli
or
push
shld
mov
frstor
outsl
cmp
lahf
and
sbb
popf
sbb
jle
or
dec
arpl
in
stos
lds
rorl
jns
data16
dec
inc
loope
xchg
xchg
std
cmp
sbb
cmpb
inc
out
lret
sahf
mov
add
rcrl
imull
scas
cmp
add
cld
jno
mov
inc
shrl
sahf
fwait
out
pop
setge
ljmp
inc
or
ret
and
adc
sbb
daa
pop
mov
sahf
lea
hlt
cmpb
ret
sub
sarl
adc
cld
fdivr
repnz
mov
ljmp
ja
adc
ja
js
dec
std
jg
test
scas
cmpb
lds
push
aad
aas
pusha
lea
dec
mov
pop
dec
and
in
mov
mov
in
jns
xchg
mov
daa
lcall
adc
sub
and
mov
mov
sbb
xlat
inc
outsb
lret
inc
movsb
dec
dec
call
clc
xor
cmpsl
je
mov
lcall
fs
jo
or
jns
inc
pop
cmp
sub
gs
sahf
push
and
pop
jb
or
notb
ss
mov
mov
and
cmp
mov
adc
aas
mov
mov
popf
mov
in
in
xchg
out
dec
pusha
mov
adcl
fcmovu
adc
adc
push
cmp
loope
mov
xorb
pop
mov
and
repz
dec
push
shlb
push
pushf
and
sub
div
sub
mov
pop
jmp
cmp
cmp
mov
test
sub
xchg
inc
adc
mull
scas
adc
fcmovnu
sbb
mov
lods
dec
dec
testb
loop
call
int
test
mov
es
sub
xchg
and
or
jnp
and
push
ret
xchg
dec
cmp
push
mov
adc
lea
mov
jne
push
push
push
adc
xor
push
in
ja
cmp
and
jne
mov
mov
aam
xchg
test
lcall
lret
mov
insb
outsl
mov
outsl
jle
pop
movsb
push
pushf
lret
addr16
test
xchg
mov
add
rolb
cmpl
mov
mov
sbb
xor
test
ret
rolb
jecxz
jo
sahf
adc
int
jnp
cmp
lods
out
sarb
mov
xor
mov
or
in
loope
jbe
push
lret
push
aaa
packsswb
mov
push
sahf
mov
adc
push
dec
mov
popa
lret
inc
dec
jne
or
ljmp
std
push
push
mov
dec
sti
fs
xchg
cmp
adc
in
jne
rol
jecxz
jbe
rcr
in
push
pop
insl
sbb
sub
dec
mov
shll
cltd
mov
cmp
cwtl
mov
dec
xor
adc
adc
xchg
pop
push
sbb
add
sbb
sbb
xchg
ds
mov
scas
adc
orb
and
jle
dec
rol
push
cwtl
mov
lret
xor
mov
dec
adcl
or
pop
inc
les
mov
outsl
dec
shll
ror
xchg
movsb
sbb
lcall
std
lock
dec
xor
lods
sahf
cmp
cmpsb
sbb
test
lahf
out
mov
mov
adc
cmp
adc
fiadds
ret
pop
xchg
addr16
je
add
pop
inc
add
dec
push
push
scas
inc
insb
jmp
insb
sub
insl
loopne
xlat
cwtl
adc
xchg
mov
jmp
jp
adc
mov
das
fisubs
cmp
push
fwait
out
push
call
scas
hlt
clc
pop
cmp
add
xor
add
add
leave
stos
mov
push
mov
hlt
cld
inc
mov
icebp
int
out
in
insb
das
sub
in
jns
lret
sub
jns
and
sbb
inc
das
cmpsl
sub
xlat
push
dec
aaa
rclb
popa
adc
cmp
shrl
cli
clc
imul
push
push
or
inc
mov
mov
icebp
push
inc
js
scas
rcr
push
pop
xchg
jp
imul
ret
xlat
std
nop
cmp
mov
rolb
ss
pop
or
push
pushf
bound
nop
pushf
sub
test
in
in
jg
insl
cs
push
ret
hlt
in
rcr
gs
add
scas
xor
push
imul
push
sub
jbe
pop
or
clc
les
imul
dec
ret
fbstp
aad
adc
and
or
inc
cwtl
mov
mov
mov
pop
and
xor
cmp
jo
call
add
stc
mov
shlb
or
push
gs
mov
or
jl
pop
fstl
jbe
jmp
mov
in
pop
dec
lock
and
mov
rcll
in
jg
xchg
out
sub
mov
or
adc
push
push
pusha
das
adc
jecxz
loope
sub
pop
and
mov
pop
dec
inc
mov
cli
movsb
lcall
add
es
mov
push
iret
sbb
mov
xchg
mov
stos
inc
mov
in
jecxz
in
mov
loope
jb
mov
ret
cltd
jmp
push
insb
inc
mull
arpl
cld
sbb
xor
sub
rorl
mov
cli
xchg
mov
iret
lret
sti
hlt
imul
xchg
push
jbe
in
pop
jb
pop
mov
mov
sbb
outsl
xor
jle
lods
dec
inc
sub
push
inc
or
stos
push
mov
stc
add
mov
cltd
inc
ret
dec
call
jbe
jb
nop
cwtl
aad
push
or
neg
test
sub
jae
shll
xorl
into
inc
push
mov
cmp
jb
sbb
das
cmp
mov
mov
mov
pop
cli
repz
out
out
mov
les
outsb
jne
and
xchg
clc
pop
xchg
in
ret
jbe
push
cltd
xor
iret
inc
push
pop
and
sarb
fsubp
push
xor
add
aam
jnp
vpunpcklwd
adc
xchg
pop
pop
lahf
adc
xchg
outsl
aaa
scas
rorb
out
inc
fwait
push
pushf
mov
xor
mov
fcoms
test
fisttpl
jle
push
inc
push
jge
inc
push
dec
jecxz
mov
push
out
test
adc
xor
fs
fcmovnbe
dec
and
inc
ffreep
rclb
stos
loope
or
insl
pavgw
sbb
jle
int3
ficoml
test
daa
sbb
push
jle
outsl
gs
mov
jmp
jne
imul
out
ljmp
add
nop
lods
xchg
add
inc
or
mov
inc
mov
add
cltd
je
add
pop
xlat
std
sbb
movsl
cmp
dec
lds
xor
je
inc
scas
pusha
aam
in
push
les
sahf
enter
adc
mov
lods
das
mov
sbb
adc
sub
push
ljmp
test
rcrb
iret
or
les
lcall
xchg
mov
cmpsl
or
inc
or
stos
pop
int
and
aaa
pop
out
lret
sbb
sbb
jp
and
xchg
ds
cmp
sbb
adc
scas
stos
mov
and
pop
xchg
sti
xchg
cs
cmp
pop
cld
movsb
add
call
cwtl
or
jl
lret
test
mov
jmp
les
inc
pop
in
les
push
mov
addr16
sbb
or
and
mov
je
stos
fidivl
fldcw
xchg
xor
adc
sarb
into
mov
mov
ljmp
sahf
in
ss
ss
sbb
mov
insb
xchg
stc
mov
xchg
push
repz
mov
xor
adc
js
mov
sub
cmc
ror
mov
fadds
dec
mov
outsb
fcmovnbe
stos
mov
sbb
and
mov
and
jmp
add
xchg
loope
ss
jmp
cmp
fnsave
gs
sbb
les
addr16
je
dec
inc
cmpsb
add
in
xor
push
gs
pop
jo
out
mov
and
cmp
mov
or
sub
int3
dec
inc
divb
loopne
sub
jb
dec
ljmp
icebp
gs
std
call
cli
mov
or
out
insb
data16
dec
test
mov
cmc
int3
stos
cmp
insb
shl
dec
xchg
sbb
adc
mov
addl
test
pop
mov
add
inc
in
mov
faddl
or
stc
sbb
and
rclb
cmpsl
stc
push
hlt
psllq
int
mov
xorb
pop
mov
bound
das
daa
insl
outsb
mov
sti
les
imul
fadd
imul
inc
push
sbb
mov
outsl
stc
inc
ja
lcall
sahf
inc
jp
pop
mov
mov
pop
cmp
movsl
call
xor
test
xor
psubq
out
sahf
cmpsb
mov
out
adc
push
scas
js
in
movsb
inc
mov
add
ss
dec
adcb
rcrl
stc
lcall
loope
push
shll
movsl
push
xchg
adc
sbb
and
xorl
mov
popl
and
xor
push
or
rclb
addr16
xchg
pop
xchg
add
hlt
sub
inc
rcll
pavgb
dec
sub
int
imul
xor
jp
jno
xor
fld
fldt
xchg
cmp
jns
movsl
gs
stc
fs
mov
and
loopne
insb
test
xor
pop
xor
xor
pop
stos
movsb
jae
mov
inc
push
push
ljmp
jl
cmp
push
xchg
lods
popa
cmp
or
mov
or
cmp
movsl
xchg
mov
or
bndldx
fnsave
cmp
bound
dec
lea
push
dec
jge
ret
jne
es
mov
jl
dec
or
cmp
fsubs
xor
mov
mov
outsl
cmp
cmp
stc
mov
popf
jle
or
jp
jno
mov
cmc
sbb
fiaddl
int
shl
add
cmp
cmpsb
addl
mov
out
xchg
fisubs
pushf
add
jnp
daa
pop
push
aam
xchg
fimull
repz
cmpsb
pop
insl
in
add
xchg
mov
fsubrl
jae
push
pusha
mov
sub
dec
and
lock
call
lds
movsl
loop
push
sub
aam
jns
dec
inc
xchg
and
or
mov
dec
pushf
popf
xchg
cmc
dec
mov
push
aas
xchg
mov
inc
fnstsw
fisttpll
lock
push
inc
push
xchg
mov
addr16
cmp
aaa
jmp
and
lods
mov
out
loopne
or
sbb
fidivl
xchg
ja
add
sub
arpl
out
pop
push
add
jge
cli
idivb
cmp
stc
push
ljmp
push
sahf
les
mov
out
outsl
mov
ret
jnp
xlat
daa
jnp
xlat
sub
lea
repz
push
les
cwtl
fwait
movsl
dec
xlat
sbb
loopne
sub
push
aas
add
add
jecxz
cld
mov
aas
les
fsubrs
push
pusha
jne
cmp
push
fstpl
std
mov
push
inc
lahf
sbb
or
sub
dec
mov
cmp
jo
aas
insb
cmp
sub
es
aaa
sbb
and
push
mov
jmp
shll
push
idivl
mov
pop
rclb
adc
mov
sub
out
push
dec
push
mov
xor
and
stos
sbb
aas
or
mov
pop
mov
movsb
mov
jmp
aaa
adc
cmpsb
dec
pusha
hlt
cmpsl
or
js
gs
cmpb
jp
imul
add
push
push
daa
push
fcmovnbe
aas
loopne
add
imul
or
jno
out
aam
test
push
hlt
test
sahf
dec
sbb
mov
cmp
mov
addr16
sub
or
rcrb
fidivrl
mov
mov
ret
out
mov
fcomip
and
mov
leave
xor
ficompl
ret
sbbl
adc
dec
fcmovne
lods
xor
xchg
fiadds
add
lahf
pushf
push
les
push
pushl
inc
pop
out
mov
mov
outsl
cmp
inc
jo
inc
push
test
adc
push
pop
jnp
sahf
xor
jg
pop
lret
dec
xlat
cmc
in
pop
xor
push
and
mov
sub
insb
mov
add
icebp
pop
cmp
dec
adc
out
jbe
push
pop
pop
fists
sbbl
xchg
cmp
add
ljmp
add
sbbb
loop
or
dec
orb
and
sti
lea
clc
lods
mov
inc
dec
leave
repz
xor
out
imul
adc
sub
je
xchg
fstpt
outsl
mov
xchg
mov
xchg
cmp
scas
addl
scas
dec
inc
arpl
loopne
repz
pop
pop
popf
add
repz
push
test
lods
pop
sub
mov
jns
fs
jb
sub
adc
hlt
mov
adc
out
idiv
and
popa
jns
jle
sahf
mov
fistps
cs
and
gs
cs
sbb
dec
mov
inc
sub
xor
in
cmp
and
mov
pop
test
push
jno
shlb
adc
fxch
pop
and
jno
cltd
dec
jl
pop
xchg
dec
nop
andb
es
leave
dec
mov
test
sub
xor
cmp
test
mov
sahf
jbe
ficompl
pusha
dec
dec
pushf
xchg
cmc
jae
dec
inc
in
insb
sahf
icebp
sub
sbb
arpl
jne
sahf
stos
sub
dec
mov
clc
sub
mov
les
xor
mov
in
sub
jne
cli
pop
mov
cmp
lds
cmp
push
add
fwait
adc
xlat
hlt
test
or
je
sub
data16
adc
sti
daa
movsb
xor
je
ds
subb
stc
and
pop
repz
mov
xor
je
dec
sub
in
int
push
xor
imul
inc
jns
dec
subb
cmp
push
mov
in
adc
mov
mov
js
scas
pop
fstpl
into
pop
cwtl
mov
mov
mov
push
repz
sub
inc
sahf
dec
es
xchg
aad
pop
out
pop
pushf
mov
and
fnstenv
jbe
bound
add
mov
fsub
jnp
add
arpl
or
aad
dec
insb
push
mov
adc
arpl
bnd
cli
fs
mov
adc
mov
mov
iret
mov
jnp
mov
cmp
mov
mov
jae
leave
sbb
ljmp
cli
mov
jecxz
rorl
sub
mov
jo
sbb
jne
popa
call
push
adc
jnp
fmull
push
aaa
pop
or
data16
sbb
hlt
push
pop
lcall
and
outsb
jo
mov
fcompl
into
movsb
jnp
shll
out
dec
insb
icebp
adc
xchg
jo
mov
incl
das
shll
sbb
xchg
xorl
sub
push
pushf
popl
mov
test
mov
inc
mov
adc
insb
icebp
mov
xchg
mov
and
outsl
ljmp
arpl
loope
js
pushf
popl
inc
outsl
dec
jnp
push
adcl
das
dec
jae
or
test
rol
jo
xor
dec
inc
xchg
cmc
aas
ret
sbb
xchg
adc
inc
rcll
outsl
repz
xor
push
pop
icebp
pop
add
iret
insb
push
adc
xor
in
push
sub
mov
jne
sub
sub
mov
fsts
cmp
push
std
xorl
popl
retw
mov
mov
mov
sub
sbb
rcrl
lock
cwtl
ret
jmp
adc
out
push
cmp
push
out
jge
enter
pop
icebp
push
add
sbb
movsb
xchg
fs
push
ficoml
pop
dec
push
lcall
das
push
cmp
clc
ja
inc
jg
inc
jbe
aad
imul
sub
push
movsb
test
xor
je
icebp
dec
inc
pop
lock
shr
aam
outsl
shll
push
test
mov
mov
movsl
push
mov
mov
es
ss
jnp
adc
xlat
dec
ja
inc
push
outsb
sub
jl
jg
xchg
das
xor
mov
mov
pop
pop
popa
sub
ljmp
fcmovnu
sbb
imul
inc
orl
pop
ret
fisubl
jb
mov
mov
sahf
pop
mov
int
enter
sbb
imulb
popa
test
inc
inc
xchg
pop
outsl
js
iret
sbb
pop
mov
lods
xchg
pop
xlat
pop
les
sub
icebp
and
sar
ret
test
push
mulb
or
sbb
mov
sti
lock
bound
jle
and
movsl
xchg
movsb
sub
add
xor
cmp
iret
lret
fadds
in
cmp
cmp
cmp
loopne
jecxz
sbbl
sbb
addr16
ftst
popa
movsb
out
jns
shr
adc
pop
in
inc
cltd
and
xor
stc
pusha
or
bound
inc
cld
mov
xchg
inc
mov
jb
xchg
dec
mov
adc
add
clc
mov
adc
mov
mov
mov
cmp
subb
dec
out
mov
or
mov
js
cmovo
mov
mov
and
mov
test
cmp
or
push
push
push
incb
push
pop
loope
sub
and
sbb
mov
icebp
lock
pop
fnsave
repz
in
mov
dec
mov
lods
loopne
fidivrs
out
loopne
loopne
ds
adcl
loope
sub
dec
movsb
subl
inc
cmpsb
cmp
xorb
sbb
in
xor
mov
mov
mov
loop
xor
mov
push
pop
hlt
es
push
or
out
mov
and
sub
mov
push
je
pop
stos
stos
jno
cmp
nop
fst
rcll
xchg
mov
dec
cmp
cmpsl
ljmp
aad
es
movsl
jge
and
push
add
addr16
xchg
rolb
pop
jno
cltd
mov
sub
int3
pop
outsl
andb
sahf
jo
cmp
pop
push
ljmp
cs
cmpsl
fstl
mov
push
xor
xchg
or
shrl
popf
xchg
xchg
mov
popf
push
mov
mov
mov
pop
sub
shlb
cmp
arpl
movsl
lods
inc
js
int
lods
or
std
adc
std
push
les
roll
pop
cmp
mov
sbb
mov
cmp
mov
xchg
push
jb
sbb
mov
add
int
or
data16
cld
imul
push
pop
mov
xchg
aaa
negb
nop
shll
jbe
or
sub
adc
jb
cmpsl
and
inc
outsb
adc
outsl
inc
mov
pop
pop
xchg
sbb
sub
sub
ss
pop
pusha
inc
fs
push
call
out
dec
sbb
cltd
dec
icebp
jecxz
cmpl
rcrb
xchg
jnp
lea
out
and
fmull
inc
mov
push
mov
push
dec
pusha
lock
xlat
xchg
es
push
mov
shl
sub
enter
xchg
shll
fcos
add
and
add
cltd
test
jne
lea
and
aad
xchg
jnp
hlt
icebp
test
lock
mov
data16
test
mov
push
mov
pop
xchg
sub
jecxz
mov
addb
push
addr16
imul
mov
add
adc
sub
dec
fstpl
pop
push
adc
push
nop
xchg
mov
and
in
lahf
add
cmpsl
outsb
imul
adc
into
lcall
std
icebp
rorl
enter
sar
in
adc
dec
ljmp
inc
js
mov
jns
xor
je
into
and
jbe
mov
inc
insl
arpl
lahf
mov
sbb
ljmpw
xlat
push
nop
out
imul
jmp
dec
xor
lahf
out
movb
xchg
cli
jl
neg
int
popf
iret
xchg
xor
push
mov
movsl
dec
inc
push
lods
sub
je
cltd
xor
xchg
push
fidivrl
sub
outsb
or
out
dec
int3
fcoms
dec
pop
and
xchg
mov
clc
lods
sub
imul
in
sub
call
test
and
std
lods
push
ret
int3
sbb
iret
lea
popa
xor
lods
pop
mov
hlt
out
test
sahf
aad
rcrb
or
lret
sahf
das
add
rorb
xchg
cmc
jmp
je
adc
jne
fstl
dec
cwtl
xor
cmp
bound
ret
sub
shll
icebp
outsb
and
and
push
adc
mov
int3
mov
call
popl
inc
add
aad
and
add
xchg
lea
mov
ljmp
es
pop
xchg
inc
scas
jo
jge
fxch
imul
ret
aaa
pusha
add
rolb
ror
loope
cmp
push
xor
pop
add
ret
mov
andl
int
cltd
cmpsb
dec
cltd
imul
ret
inc
lcall
mov
add
jge
or
jle
loopne
pop
xor
mov
xlat
lahf
loop
mov
bound
outsb
push
out
cmp
xchg
loope
nop
mov
fptan
mov
xor
mov
pop
dec
push
push
int
cmp
in
mov
test
fildl
xlat
movsb
imul
gs
xchg
inc
out
dec
add
push
inc
movsb
mov
cmp
jo
mov
cli
pop
fucomip
xlat
in
pop
sub
popa
movsl
pusha
jb
adc
inc
cmp
inc
ret
or
adc
xor
mov
jge
pop
data16
dec
sbb
jmp
pop
lret
fisttpl
mov
push
gs
adc
push
mov
lock
test
and
inc
jle
imul
test
inc
xchg
in
and
fdivrl
clc
mov
sarl
jae
daa
cmpsb
add
testl
xchg
sbb
add
sub
addl
fstps
shld
and
cmp
mov
lods
shll
aas
ret
mov
cmpl
xor
test
icebp
in
call
cltd
push
ficompl
outsb
jle
scas
mov
add
xchg
outsb
out
filds
dec
push
leave
sub
inc
add
add
insb
fistl
fistl
mov
jae
popf
rol
xchg
ljmp
pop
aas
or
mov
loop
outsb
push
dec
pop
scas
mov
add
ficoms
xchg
in
jne
sbb
loope
shrb
add
es
xchg
xchg
das
xchg
out
mov
lahf
cmpsb
in
iret
dec
mov
pusha
jne
push
fsts
add
dec
push
add
sbb
pushf
add
pop
and
popf
push
ss
push
sub
sub
mov
cmp
mov
imull
fidivs
adc
or
inc
out
pop
cmp
insl
jge
loope
pusha
mov
test
mov
nop
xchg
sub
jno
repnz
jg
imull
pop
mov
cmp
shll
orb
scas
sbb
popa
jo
dec
jno
push
sbb
jo
loop
insl
mov
jl
mov
imul
mov
cmp
std
test
das
int
fstl
jbe
fstpt
mov
lret
icebp
xchg
pop
jecxz
sbb
cmc
mov
sbb
push
stc
lea
dec
sbb
aad
inc
hlt
es
movsl
shl
xor
mov
adc
fsubrl
stos
into
rorl
pop
idivb
adc
aad
push
je
fcoms
stos
in
pop
mov
into
lret
xchg
cmpsl
enter
addb
and
mov
adc
aad
bound
adc
xor
dec
push
mov
sub
leave
mov
adc
int
roll
and
aas
mov
and
loopne
outsb
inc
popf
or
cmp
repz
test
inc
data16
adc
ja
xchg
fistl
iret
movsl
insl
sbb
xchg
jo
mov
jecxz
sbbl
or
stos
mov
inc
imul
insl
lods
adc
dec
sti
jmp
jg
mov
call
add
sbb
rorl
xchg
push
push
enter
mov
adcl
adc
daa
and
lods
out
into
pusha
mov
dec
jne
test
cmp
nop
insl
mov
add
xchg
fwait
add
neg
sub
dec
cmp
adc
pop
ds
dec
pop
jp
sti
mov
jae
aad
sub
fcmovbe
shll
mov
xchg
repnz
cs
jo
push
push
outsl
movsl
jl
jg
dec
incl
popl
leave
adc
fsub
std
xchg
ja
repz
enter
repnz
andb
push
fs
and
xchg
and
testl
pop
icebp
xor
divb
jle
or
push
dec
or
nop
inc
adc
xchg
pop
jmp
bound
adc
pop
inc
sbb
aaa
xor
pop
enter
shrb
es
sbbl
enter
adc
jmp
inc
pop
fldl
and
leave
rcr
ss
ficoml
cmc
fs
sbb
xchg
js
inc
and
sub
lock
fdivs
add
or
xchg
bound
pop
vprotw
push
cmc
inc
lahf
lock
pop
mov
cmpsl
mov
rcl
mov
movsb
arpl
ror
icebp
loope
adc
movsl
add
dec
xor
fsts
das
jns
dec
push
or
or
test
mov
pop
pusha
addl
pop
std
push
xchg
shrb
or
mov
iret
xchg
cmp
mov
mulps
inc
rorb
ret
adc
out
mov
mov
add
lds
dec
dec
xorb
or
mov
ds
xor
shlb
adc
ret
enter
xchg
outsl
jp
shlb
cs
iret
xchg
pusha
jns
and
sub
jp
jb
enter
push
fcoml
js
aad
dec
sub
sub
xchg
push
notb
jb
pop
jl
pop
imull
mov
sbb
fadds
lcall
scas
aad
mov
add
jo
clc
fsts
pop
mov
pop
cwtl
push
iret
pop
fnstcw
test
outsl
push
xchg
lock
jbe
and
fiaddl
jo
mov
pop
outsl
lds
xrelease
enter
jl
inc
lods
mov
xchg
mov
push
push
mov
sub
imul
fisttpl
pop
inc
sub
cmp
xlat
mov
bound
mov
sti
adc
xor
movsb
sub
fsubr
cmc
fbstp
lods
arpl
dec
stc
inc
sub
push
fwait
mov
and
or
xchg
pop
adc
sbb
leave
adc
lods
dec
bnd
ficoms
call
leave
cmc
jg
jnp
or
mov
push
nop
hlt
pop
lods
push
sti
jle
xchg
pop
add
mov
fcom
cwtl
push
sub
jbe
std
cmp
mov
stos
lahf
mov
popf
xchg
add
pop
loopne
pop
orb
mov
pop
or
aam
pop
adc
pop
cmp
jge
jge
insb
daa
call
jnp
das
stc
shll
lock
cmc
adc
xor
daa
xor
repnz
leave
xchg
loope
inc
jb
inc
lcall
or
je
dec
ss
stos
dec
xchg
das
andl
into
in
int
imul
stos
push
shrb
aaa
leave
in
dec
movsl
pop
mov
mov
clc
inc
jp
call
jle
data16
loop
xchg
inc
and
mov
jg
scas
or
mov
pop
test
fdivs
inc
fisttps
push
mov
jle
sbb
jb
mov
sti
loopne
push
repz
sub
lahf
flds
xchg
add
dec
pop
mov
xchg
sub
sub
out
stc
sbb
jge
mov
aam
daa
insl
scas
gs
sbb
rcrb
shll
das
xor
addr16
rcrb
jns
fimuls
pushf
xor
sbb
lea
test
popa
push
mov
mov
mov
aad
jbe
jp
mov
dec
ss
dec
fisubs
lret
sbb
push
outsb
push
jge
push
mul
stos
insb
sub
ret
add
add
mov
in
imul
dec
outsl
mov
xchg
push
mov
fcomp
mov
adc
cmp
mov
sub
mov
mov
jp
jb
mov
icebp
aaa
push
lahf
push
push
je
aad
mov
cmp
dec
mov
outsb
push
jle
mov
push
sbb
icebp
insl
add
pop
add
jmp
dec
jp
je
shl
jle
mov
cmpsl
lods
lret
pop
add
inc
pop
in
sub
inc
push
fmull
xor
rolb
icebp
dec
decb
sub
adc
in
mov
xor
movsl
dec
xor
outsl
sbb
out
xchg
push
call
push
mov
jo
nop
jbe
test
test
adc
insb
ljmp
rolb
fbld
add
test
out
popf
mov
xor
sbb
cmpsl
popf
adc
testb
popa
jae
out
pop
mov
mov
gs
xchg
push
in
pmulhuw
push
xchg
pushf
pop
fiaddl
icebp
cmp
cmp
and
cmp
mov
iret
out
js
out
int3
sbb
cli
mov
inc
lret
sbbl
sbb
xor
dec
push
add
data16
ret
arpl
icebp
addb
cmp
sar
mov
neg
adc
ds
int
and
push
cmp
jg
jno
jle
leave
push
cld
fsubr
icebp
adc
scas
test
mov
cmpsb
cwtl
mov
xchg
insl
sbb
pop
out
dec
cwtl
in
negl
jl
test
or
and
movsl
aad
mov
popa
test
pop
sahf
mov
adc
dec
rcrb
stos
cltd
and
add
jmp
decb
test
dec
mov
lea
or
xchg
js
cli
mov
aad
sub
pop
imul
pop
adc
or
mov
mov
mov
lods
adc
dec
cmpsl
xchg
std
jecxz
inc
mov
jl
inc
outsb
sub
mov
and
out
push
aas
stos
sbb
lds
and
xor
lea
lret
xchg
jne
arpl
or
inc
pop
xor
adc
xor
or
and
iret
dec
sarl
popa
mov
outsl
nop
repnz
xchg
pop
popf
shlb
rcll
inc
pop
xor
ret
pop
insb
jp
hlt
dec
nop
push
sub
cmp
jmp
fcompl
jbe
outsl
lods
mov
sbb
call
xchg
dec
mov
movsb
and
fucom
push
and
xor
jg
and
xchg
pushf
mov
dec
lock
xor
mov
jae
les
stos
es
test
dec
or
insb
sahf
mov
ds
adc
out
int
cli
adc
adc
and
mov
scas
popa
insb
sbb
push
mov
andb
bound
dec
pusha
push
add
stos
sbb
inc
mov
push
push
pop
movl
clc
lds
push
xchg
aad
or
leave
pop
stos
imul
in
ds
popa
in
int
iret
cmp
push
jl
out
pop
fsubs
and
test
loop
jbe
je
mov
stos
inc
ficoml
and
loop
xor
sub
xor
push
pop
adc
push
jo
mov
cld
lret
dec
mov
out
imul
push
dec
pop
add
test
mov
pop
std
stos
aas
jmp
push
cld
out
push
pushf
sbb
fdivl
jl
mov
popf
rcr
sub
mov
push
test
dec
cmp
xchg
in
sbb
lock
std
sbb
dec
loop
and
je
dec
call
imul
dec
xlat
and
adc
mov
enter
mov
int
adc
push
sbb
pop
sbb
xchg
lcall
scas
push
pause
scas
data16
cmp
iret
cmc
call
outsl
mov
hlt
test
jle
decb
out
push
in
std
jmp
lahf
mov
mov
pop
enter
inc
jbe
jl
pop
and
call
shl
cli
jbe
arpl
pop
sbb
nop
orl
data16
or
xor
xor
and
je
xor
inc
jge
pop
xchg
sub
or
jp,pt
mov
jl
pop
in
xchg
cmp
scas
xchg
cmpsl
shlb
es
fidivrs
and
jecxz
or
pop
jle
orl
mov
pop
out
nop
xor
cmpsl
mov
sub
sbb
fwait
push
jbe
dec
je
mov
imul
mov
loopne
rclb
in
ljmp
mov
xor
aaa
and
and
mov
mov
pop
or
mov
std
scas
add
xchg
popa
mov
add
mov
dec
ss
leave
lds
xchg
pop
pop
rcrb
scas
out
push
sti
test
iret
add
popa
test
sti
movsl
sub
pop
pop
or
mov
mov
aad
xlat
loop
addr16
jecxz
mov
push
sub
sbb
les
cmc
sbb
gs
cmpsl
out
repnz
pop
das
out
insb
lods
icebp
cltd
mov
mov
loopne
ret
mov
fcompl
add
ljmp
push
and
sar
pop
mov
cmp
ljmp
jae
sbb
aam
cmp
push
outsb
test
icebp
sahf
mov
in
pop
lods
mov
and
lcall
sub
xlat
mov
sub
cmp
push
imul
sysenter
cmp
rcr
xor
and
cmpsl
stos
repz
repnz
pop
mov
mov
inc
test
outsb
mov
adc
dec
mov
ljmp
xchg
jnp
pusha
xlat
js
sbb
inc
loopne
push
and
add
lret
jno
les
out
xchg
test
or
xchg
sub
jns
inc
push
cld
ljmp
aad
imul
cmpsl
xlat
inc
sub
or
inc
icebp
xor
movsb
mov
bound
movsb
scas
adc
scas
out
les
test
aaa
and
jle
inc
mov
das
xor
pop
cmp
sub
jmp
testl
push
adc
push
push
addr16
repnz
or
push
test
sbb
out
int3
dec
dec
mov
xor
xchg
sub
push
lds
stos
and
notb
inc
sbb
scas
and
js
leave
mov
inc
mov
pop
cmp
clc
std
jbe
pushf
xlat
and
mov
add
in
sbb
xor
repz
inc
xor
js
jbe
and
cli
xchg
xchg
movsb
out
xor
ret
lock
sub
divb
add
sub
cli
or
out
add
mov
lahf
mov
jns
or
subl
clc
lock
xlat
mov
divl
fcoms
dec
dec
popa
sbb
shlb
push
sahf
mov
and
xor
sbb
cmp
inc
push
sub
dec
jae
cmc
ss
hlt
xchg
add
cs
sbb
negb
pop
mov
lods
push
cmp
js
bound
push
lods
add
dec
xor
ds
mov
cld
mov
fs
jge
rcll
push
clc
jg
mov
jecxz
call
sub
das
pop
mov
fcmovbe
and
xor
iret
jl
pop
add
loopne
insl
cli
shrb
repz
xchg
sahf
jmp
sbb
clc
jns
mov
cmpsb
mov
and
fsts
or
repz
add
shrb
ds
sahf
cmp
ret
mov
or
pop
in
fs
mov
outsl
ficompl
mov
add
push
inc
push
sarl
or
test
mov
inc
inc
fmuls
stos
xchg
jb
sbb
icebp
xchg
fstps
daa
mov
lods
or
or
pop
mov
push
sbb
into
mov
mov
push
cwtl
loop
sub
jne
push
das
adc
imul
sub
push
test
and
out
cmp
jae
mov
mov
cmpsb
sbb
pop
pop
lds
movsb
imul
push
stos
lcall
ljmp
mov
enter
jmp
add
popf
aas
lret
xor
pusha
push
ret
or
sbb
sahf
ja
imul
repnz
sar
in
ret
mov
pop
mov
pushf
dec
cmp
sar
gs
mov
mov
fst
adc
pop
mov
pop
push
mov
bound
or
lahf
in
or
jno
popa
les
cmp
pushf
add
cmp
adc
sti
cmpsl
cmp
xlat
inc
pop
push
mov
mov
insl
sub
cli
and
mov
jmp
adc
mov
loopne
int
sti
je
cli
lret
adc
fstp
outsl
hlt
lea
and
adcb
mov
in
imul
jns
cwtl
push
pop
dec
jbe
xor
mov
push
push
push
ds
sbb
repz
mov
push
inc
mov
or
sub
add
fmuls
jne
pop
sbb
out
pop
andb
jnp
inc
adc
fnsave
or
xchg
in
out
dec
lods
push
dec
mov
xor
icebp
or
jmp
out
cmp
fldt
push
les
xor
pop
stc
subb
xchg
out
das
push
sbb
add
repz
std
jl
sub
out
push
xchg
jbe
stos
flds
mov
sbb
inc
cmp
jg
aad
pop
rsm
aaa
inc
pop
es
rorl
fistl
in
imul
sub
fs
daa
ret
cmp
outsl
pop
mov
sbb
adc
adc
dec
cmpsl
pop
arpl
adc
xlat
leave
clc
jnp
test
lock
sarl
repz
popf
fdivl
ret
fsqrt
movsb
cmp
icebp
dec
lods
mov
mov
into
mov
sub
mov
rep
push
sub
xchg
mov
xchg
popf
cwtl
addl
popa
shrl
ficoml
and
cs
jmp
and
jne
aas
enter
inc
aaa
in
scas
sti
fcoml
or
iret
pop
je
and
shrb
lds
stos
insb
mov
mov
mov
scas
aas
xchg
push
push
lods
mov
xchg
test
in
pop
mov
cmpsb
and
test
hlt
shll
js
jg
sarl
push
out
push
faddl
mov
out
jmp
pop
shlb
mov
pushf
cmpb
testb
popa
ljmp
es
jae
ficoml
and
xchg
rcrb
sahf
fsubs
inc
fcmovnbe
fadd
incb
clc
out
orb
mov
jb
stos
xchg
dec
fbld
push
cmp
aaa
pusha
fcmovne
aam
sub
ja
imul
mov
xchg
adc
scas
clc
xchg
push
scas
mov
stos
popf
sub
mov
inc
sbb
aaa
rep
add
xchg
dec
icebp
push
shlb
aaa
lea
mov
dec
add
add
adc
loope
xor
push
movsl
in
dec
dec
out
jne
push
xor
daa
mov
sub
push
pushf
adc
dec
fadd
cmp
push
dec
xchg
push
in
in
and
pushf
inc
fwait
clc
lahf
enter
and
enter
call
push
xor
inc
loope
std
jno
les
mov
mov
and
les
repz
xchg
cwtl
pop
or
xchg
out
mov
and
rcrl
dec
xor
cmp
jecxz
push
push
push
mov
in
xor
mov
loopne
outsb
stos
mov
xor
pop
push
mov
dec
out
cmp
inc
les
jno
vmovntps
mov
pushf
mov
test
xor
test
and
int3
sahf
popa
popl
bswap
ret
cmpps
inc
out
mov
inc
jle
add
dec
les
aas
fs
lds
push
mov
mov
xchg
ret
outsl
mov
mov
nop
jb
cmp
into
andb
sub
and
ljmp
ror
lret
sbb
cmp
inc
sbb
lock
notb
xor
aad
add
jmp
jo
pop
mov
loope
adc
push
pop
add
ret
jnp
out
sub
push
sub
cwtl
nop
lock
jae
xchg
sub
jge
nop
pushf
scas
shr
repz
mov
jp
cli
das
xchg
mov
push
mov
bound
loopne
test
mov
or
push
xchg
pop
jno
scas
adc
into
and
and
loope
pop
je
xor
xchg
xchg
lods
xchg
inc
ja
and
je
pop
gs
dec
or
xchg
lock
int3
lcall
jne
arpl
sahf
mov
jne
mov
and
xchg
lods
imul
adc
jmp
inc
mov
jmp
gs
arpl
mov
cmp
lods
cmc
mov
lods
xchg
inc
icebp
notb
and
ror
jo
das
repz
mov
xor
inc
pop
int3
fwait
imul
inc
hlt
in
add
mov
lock
adc
mov
repnz
adc
sarb
adc
lret
xor
mov
pop
pusha
shrl
xchg
fcomps
push
ret
sub
push
cs
loopne
out
fldl
outsl
decb
addb
cmp
js
jo
dec
pop
or
mov
adc
mov
jge
mov
push
mov
sti
sub
adc
or
push
popf
lods
loope
or
leave
out
xchg
daa
mov
jae
mov
mov
movsl
sub
mov
inc
out
mov
push
test
sbb
dec
push
sbb
xchg
stc
fs
shll
and
addr16
dec
int
insl
out
mov
cmp
insl
rcrb
cmp
scas
mov
mov
pushf
mov
push
jmp
je
pop
arpl
cmp
std
addr16
or
test
dec
jae
loopne
pusha
rcrb
sbb
add
jmp
cmp
pop
out
ror
pop
and
dec
fsubp
push
fnop
or
dec
xchg
ja
jns
adc
loopne
jae
fstp
dec
push
fsubp
ja
jo
outsb
mov
pop
testb
setne
testb
or
je
jnp,pt
aad
sub
shlb
jge
xor
cltd
mov
lea
push
mov
cmc
aad
movsb
pop
sbb
fidivl
movsl
mov
push
push
out
mov
mov
repz
or
jmp
pop
mov
insb
sbb
push
shl
and
inc
or
inc
sub
popf
int
mov
xor
inc
mov
push
iret
test
add
mov
sbb
adc
jmp
mov
add
mov
fistpll
hlt
add
cmp
jp
dec
lods
mov
das
mov
arpl
popa
sbb
stos
cmc
jle
pusha
sub
or
push
pusha
je
mov
adc
pusha
test
cmp
pusha
push
add
mov
rcrl
or
add
sub
adc
aam
xchg
push
mov
fwait
and
sbb
sbb
mov
jle
pop
cwtl
dec
in
pop
outsb
cli
insb
add
cmp
stos
adc
and
push
lock
in
pop
mov
movb
fisttps
int
jns,pt
jae
lahf
imul
cmpsb
mov
fdivl
out
mov
imul
insb
mov
cs
pop
test
test
pop
inc
andb
xchg
adc
aad
fstpl
or
rorb
mov
mov
stos
pusha
cmp
add
pop
leave
push
jle
push
out
sub
push
mov
cmp
mov
cmp
sub
movsl
int3
mov
and
dec
sar
outsl
fnstcw
sahf
cmpsb
push
cmp
jae
and
in
xor
out
pop
int
lret
addb
fbld
lea
aaa
pushf
out
mov
outsb
loope
push
mov
mov
xchg
mov
or
push
push
decb
fidivrl
dec
lret
cld
inc
cmpb
push
nop
mov
mov
out
xchg
add
fwait
divb
sub
jp
into
fwait
xor
dec
in
mov
xchg
xchg
sub
pop
jne
lods
sub
inc
gs
sbb
imul
cmp
jb
stos
push
test
push
ss
mov
sbb
adc
cmpsl
cmp
in
in
push
cs
mov
xchg
pop
jge
push
movsb
loope
xchg
pop
inc
pop
inc
jle
test
adc
cmpl
fwait
jae
xor
add
or
std
pop
pop
jp
add
xor
loopne
test
repnz
mov
xor
mov
xchg
in
mov
xchg
jne
push
fstl
shr
xor
bound
sub
cld
sti
stos
jo
mov
sbbb
mov
sbb
insb
es
add
sbb
sbb
lock
daa
xor
mov
popf
mov
and
movsl
jl
insl
out
daa
mov
out
lret
or
adc
aaa
aam
push
pop
dec
hlt
inc
add
pop
xchg
adc
addr16
imul
xor
ud0
enter
ror
dec
pop
fmuls
xacquire
xor
and
test
or
aam
mov
lahf
pop
sub
sbb
fcoms
stc
sbb
dec
cli
fidivrs
inc
andb
dec
xchg
or
xchg
jp
mov
icebp
pop
cltd
mov
mov
andl
xor
cld
roll
xchg
pop
add
in
mov
jns
ficompl
divl
xor
or
cmp
ret
rcr
jae
jo
sbb
cmc
mov
xor
and
test
or
enter
inc
adc
cmp
cld
loop
movsl
sub
clc
and
add
add
aas
dec
xchg
dec
test
leave
pop
xchg
fisubrl
xchg
push
cwtl
cmp
out
bnd
repnz
or
or
shll
ss
cmp
mov
shrb
xchg
dec
shl
adc
scas
and
movsl
nop
xorl
or
add
and
pop
test
lahf
xor
aam
adc
enter
xchg
lods
xor
mov
cmpsb
inc
dec
sub
adc
out
sub
inc
push
jnp
decl
or
pop
mov
and
pop
mov
mov
xor
das
hlt
cs
xchg
pop
mov
insb
test
les
push
mov
xchg
sub
jp
cmpsb
sbb
pop
es
jmp
xchg
ljmp
movsb
xchg
sbb
pop
sbb
mov
add
imul
cmp
push
mov
sbb
gs
mov
sub
cmpsl
xor
jmp
xor
adc
out
pop
push
xor
mov
xchg
xor
xorb
orb
pop
cmpl
into
cmp
bnd
je
jmp
pop
pop
lock
fldt
pop
jle
add
and
insl
test
and
aaa
pop
andl
mov
in
sbb
fs
pushf
pop
sub
and
fistpl
aaa
pop
cmp
mov
jb
sub
nop
outsl
sbb
push
shl
inc
int3
push
int3
arpl
sti
shrl
and
test
and
sub
loop
das
sub
or
adc
sbb
push
pop
out
scas
ficompl
and
aad
or
setb
aaa
jmp
jp
nop
imul
sbb
gs
sub
jne
lret
push
imul
imul
push
inc
inc
insb
lcall
das
aam
imul
cmp
lret
nop
xchg
andl
sub
mov
inc
hlt
mull
daa
pop
jmp
sub
push
xchg
dec
or
xchg
fnstcw
sbb
sti
push
popf
loopne
adc
mov
cli
lds
movb
mov
pop
push
in
adc
or
xor
aad
cmp
xchg
rolb
scas
mov
stos
dec
or
push
pop
out
push
mov
mov
or
push
pusha
jle
mov
pop
jecxz
aas
fs
jae
pop
cld
adc
inc
jno
pushf
nop
sahf
aam
and
fiaddl
stos
popf
iret
jle
dec
out
popa
sub
sub
test
wbinvd
lods
aas
sub
cmpsb
mov
adc
xor
sahf
inc
int
inc
adc
jae
xchg
cmc
outsl
and
and
scas
clc
cmc
stos
jmp
mov
sbb
loop
mov
and
add
mov
push
outsb
pop
jne
mov
sbbl
ss
sbb
or
lock
cmpsl
mov
lret
adc
stos
sbb
dec
ret
popf
ret
scas
and
sub
mov
sahf
rorb
jnp
dec
and
lret
and
sbb
mov
mov
cli
mov
out
mov
aam
lods
mull
out
add
arpl
dec
pop
cmp
mov
shr
imul
movsl
mov
stos
test
sbb
mov
imul
out
pop
push
addr16
mov
push
sub
imul
mov
std
repnz
dec
stos
sub
cmp
fmuls
mov
inc
mov
dec
dec
xchg
mov
pop
les
outsb
mov
push
mov
cmc
das
mov
loopne
pop
dec
push
pop
and
mov
add
mov
cmc
mov
sub
lret
lret
and
loopne
mov
scas
jb
fildll
movsb
lods
cwtl
ficompl
movsl
and
jg
test
lds
mov
js
ljmp
xlat
jns
cmp
mov
cmp
cmpsl
movsb
mov
or
push
jno
xor
inc
sbb
cld
xchg
cmp
lds
xor
sbb
ds
inc
and
mov
out
pop
in
int3
stc
pushf
dec
pop
push
out
push
jae
ds
and
add
sub
test
sarl
mov
ss
pop
pop
mov
add
std
cmpsb
mov
lcall
add
in
and
les
push
mov
adc
lahf
call
mov
mov
mov
jl
jecxz
insb
sbb
sbb
ret
std
or
mov
lods
dec
lret
push
mov
xchg
cmp
sar
divl
mov
mov
push
sub
inc
mov
test
dec
movsb
or
add
in
stc
idiv
movsl
fnsave
sub
push
xchg
mov
cmp
xchg
and
aas
jecxz
xchg
lahf
xchg
shlb
data16
daa
loopne
and
bnd
fucomp
cmc
and
into
movl
lock
pushf
jno
lea
or
jbe
add
in
lcall
or
or
jo
push
or
pop
cmp
mov
push
lea
daa
jge
inc
mov
jg
add
xor
pushw
stos
push
movaps
in
cltd
int3
push
call
jl
add
dec
xchg
mov
fadds
mov
rcrb
aaa
xchg
adc
arpl
mov
popa
jg
dec
or
rcl
xor
inc
in
test
xchg
cmp
cmp
push
fwait
stos
mov
cmp
inc
test
mov
fimull
js
push
sbb
add
repz
mov
aam
notl
mov
mov
jae
shrl
cld
pop
dec
mov
xlat
mov
fcmovnu
pop
mov
mov
scas
outsb
dec
lock
inc
cltd
cmp
xor
pop
cmp
pusha
je
adc
adc
mul
stc
mov
push
fimuls
mov
inc
lods
in
cmpsb
adc
dec
mov
xchg
push
repz
call
std
testb
cmpw
fisttps
out
push
movsl
adc
lahf
push
xchg
add
pop
inc
jmp
push
mov
cltd
dec
pop
out
sbb
inc
push
scas
pop
hlt
mov
addr16
mov
pcmpgtw
jmp
mov
and
out
sbb
dec
ficoml
cmpsl
mov
in
es
cmp
cwtl
or
or
jae
cmp
jbe
dec
test
or
enter
test
mov
movsb
pop
inc
inc
pop
sbb
in
push
outsb
xchg
or
pop
loope
sub
clc
mov
test
hlt
add
pop
rcrb
jl
in
xchg
mov
mov
mov
cs
stos
dec
ljmp
js
xchg
mov
pusha
dec
subb
test
insb
and
jle
cmc
add
bound
pop
outsl
mov
out
mov
repz
arpl
mov
call
js
dec
push
push
iret
or
pop
daa
mov
pop
fcom
inc
mov
vprotq
lods
and
dec
cld
rdmsr
fwait
leave
loop
jb
rolb
inc
psubb
fnstcw
mov
sti
andb
cmp
or
or
add
mov
push
xchg
mov
movsl
push
jo
es
add
push
popa
mov
dec
jle
fdivl
test
into
fwait
dec
sub
das
dec
cmp
lods
push
cmp
fcompl
push
xor
clc
std
xlat
mov
and
pop
in
out
aaa
mov
mull
inc
sub
jl
or
mov
aad
jg
mov
in
or
clc
arpl
idivl
ror
es
jbe
popl
outsl
stos
out
mov
insb
push
or
adc
es
in
mov
leave
in
push
jnp
filds
and
ret
xchg
push
xchg
mov
mov
jnp
fmul
inc
mov
scas
lods
pushf
or
je
std
mov
fwait
xor
lcall
lods
push
jnp
cmp
xchg
jae
jne
adc
and
loope
xchg
push
popf
inc
jae
cmp
lahf
sub
xchg
adc
into
or
mov
nop
mov
cmp
cmp
jae
fistl
mov
loope
push
and
into
movb
shl
xchg
xchg
notl
xchg
or
mov
data16
cmpsl
leave
repnz
add
push
and
les
in
push
push
add
fwait
test
xor
fistpll
ret
add
dec
mov
popl
cmp
and
sub
jg
mov
sbb
rorb
mov
sub
pusha
sbb
cmp
aaa
dec
cld
cmc
mov
mov
cmpsb
les
jge
aaa
xchg
pop
fidivrl
shrl
int3
sbb
pusha
jge
lds
adc
fdiv
sbb
pop
lods
lea
mov
sub
mov
xchg
mov
sbb
adc
nop
push
cmp
lahf
jecxz
test
inc
sbb
leave
pop
outsb
addb
jge
mov
adc
lods
mov
cs
and
imul
pop
or
imul
inc
push
push
push
mov
mov
cmp
pop
add
fiadds
inc
xchg
in
push
das
loope
pop
icebp
dec
add
dec
mov
movsb
pop
sub
dec
cmp
pop
jbe
aad
mov
mov
mov
push
ret
rolb
mov
rol
mov
inc
pop
or
or
push
pop
js
pop
test
ret
movsb
iret
sbb
in
push
mov
jne
clc
or
adc
js
stos
dec
or
clc
dec
in
and
and
ja
or
imul
adc
lcall
bound
jge
xor
sub
outsl
xor
inc
test
scas
cmp
mov
pop
pop
shll
stos
jb
mov
lcall
outsl
mov
mov
adc
cli
sub
pop
aad
out
adc
mov
mov
jnp
push
gs
mov
clc
mov
jle
fs
jo
sbb
mov
data16
mov
nop
movsb
cli
mov
bound
mov
pop
nopl
jmp
mul
pop
loope
push
stc
push
mov
adc
xor
lret
mov
dec
repnz
xchg
scas
sub
popf
lcall
adc
fsts
out
xchg
mov
mov
dec
sbb
add
jns
mov
xchg
cltd
mov
clc
mov
insl
or
std
fimull
gs
inc
ret
mov
dec
fnsave
lock
add
xchg
loope
adc
jecxz
mov
iret
mov
aam
icebp
and
jle
pop
das
andb
cmp
lcall
in
adcb
lcall
push
xor
sub
inc
fmull
xor
inc
scas
rclb
cltd
mov
mov
mov
pop
mov
jge
xchg
icebp
push
inc
ljmp
inc
mov
aam
inc
add
iret
push
add
mov
xchg
es
repnz
fwait
sub
sbb
aam
hlt
cmc
in
mov
cli
fldl2t
mov
mov
lock
or
cmpsb
sbb
pop
ss
inc
jne
xchg
mov
leave
mov
divb
int
and
push
gs
fsubs
adc
std
movsb
dec
sbb
ret
adc
and
inc
sub
push
inc
outsl
hlt
pusha
add
ret
std
iret
push
adc
cld
sub
pushf
cld
test
sbb
mov
out
cltd
mov
gs
pop
sbb
mov
sbb
mov
or
subb
sbb
fisubrs
or
pushf
mov
xchg
sbb
fwait
inc
inc
cmp
mov
sub
test
aam
cmp
bound
cmpsb
fbstp
mov
push
andl
std
push
and
jmp
adc
push
mov
adc
push
cmp
mov
scas
xor
mov
dec
mov
mov
stos
dec
xor
cwtl
or
fucom
inc
stc
loop
xchg
scas
mov
arpl
sarb
nop
or
jb
push
mov
pushf
sub
add
lods
jp
movsb
popa
add
sbbl
mov
xor
and
fsubrl
xlat
and
push
dec
dec
movsb
sarl
mov
push
stos
ljmp
mov
mov
mov
mov
add
push
ret
push
push
in
cmpsl
jbe
pop
inc
inc
inc
bound
jne
jmp
sbb
push
addb
mov
lock
sbb
pop
lret
nop
sbb
cmp
orl
in
xchg
clc
bound
dec
stos
xchg
push
push
adc
jp
shrl
jle
fnstcw
aas
xlat
ret
adc
cmp
xor
adc
push
mov
mov
push
je
adc
or
arpl
push
decb
sub
in
push
sbb
cwtl
dec
cmp
xchg
pushf
xor
jno
clc
and
rcl
sub
and
xchg
inc
lods
jmp
mov
inc
scas
movsb
arpl
out
add
fcmovu
dec
cmp
insl
adc
dec
jmp
je
add
insl
xchg
or
mov
sarb
adc
inc
pcmpgtw
mov
sti
mov
add
jb
sub
cmp
jmp
sbb
xor
add
test
dec
mov
push
neg
jl
push
push
jge
out
cmpsl
jnp
xchg
lahf
jne
inc
inc
jmp
xchg
sahf
sbb
aaa
rcrl
cmp
xor
mov
cltd
es
out
or
mov
test
cs
test
cmp
mov
jecxz
lock
lods
mov
rcll
jmp
jb
les
mov
xchg
shll
push
dec
lcall
ljmp
dec
mov
aad
ret
cli
and
js
cmp
stc
imul
jne
push
cmpsl
mov
or
pop
and
addr16
mov
sub
jp
dec
out
mov
inc
push
mov
and
sub
pop
pop
cmp
pop
push
mov
fwait
mov
or
push
lret
push
adc
dec
add
and
popf
xor
cli
push
mov
negl
aas
mulb
pop
insb
jl
pushf
push
mov
or
xor
jle
mov
dec
dec
or
pusha
adc
lahf
sub
sbb
lahf
imull
fsubs
xor
arpl
sarb
mov
dec
sti
cmc
add
test
int3
shrb
jmp
cmpsl
shr
and
cmc
xchg
int
mov
leave
leave
rcrl
inc
fucomip
xchg
cmp
repz
mov
jecxz
or
mov
out
pop
fwait
push
ficomps
fists
xorl
sbb
dec
and
xchg
mov
in
jl
mov
movsl
ret
pop
nop
in
mov
out
mov
loope
adc
push
sarb
les
push
cmp
leave
lret
mov
sarl
pop
xor
sub
out
cmpsb
mov
cmp
sbb
stos
push
or
into
mov
or
xlat
outsb
repz
int3
adc
clc
xchg
push
popf
ds
push
in
out
lock
pop
cmpsb
adc
icebp
add
add
add
lds
out
push
subb
or
jmp
call
push
pop
adc
pop
sub
cs
xor
or
mov
es
cmpsl
and
add
mov
fs
in
out
icebp
xor
sbb
rolb
and
inc
nop
pusha
cli
mov
das
mov
cmp
ret
jne
daa
insb
pop
xchg
xchg
nop
fdivr
lret
adc
cli
dec
insl
and
dec
iret
stos
mov
std
adc
icebp
dec
inc
and
cmp
out
orl
fistps
xorl
in
ja
hlt
das
xchg
adc
mov
push
daa
in
cmp
xorl
mov
cmp
and
mov
nop
sub
xor
push
test
es
or
jge
outsb
adc
mov
mov
imul
pusha
pop
add
inc
mov
iret
out
lea
pop
repz
cmc
sti
sbb
xchg
cmp
mov
push
sub
loop
sub
hlt
ds
ds
mov
sbb
daa
dec
lret
cmp
sti
ds
loop
loope
sti
ja
mov
xor
clc
jae
jl
out
je
arpl
inc
adc
mov
xchg
push
out
lcall
push
inc
fwait
jno
mov
mov
sub
roll
lcall
sbb
pop
mov
int3
inc
bound
dec
testl
or
out
loopne
inc
adc
push
mov
cmpsb
xchg
pop
mov
lock
fs
out
sahf
clc
ja
add
mov
sub
lods
adc
ds
jecxz
insl
lods
or
pop
popa
mov
lret
roll
ror
sbb
scas
inc
adc
sub
push
bts
icebp
out
and
and
mov
jne
xlat
test
xor
aaa
outsl
out
xchg
jmp
sub
xor
inc
shrl
pop
popa
pop
pop
orl
aas
sub
in
pop
in
jle
aaa
xor
mov
bound
testl
out
inc
push
subb
xchg
ror
cmpsl
scas
shlb
repz
or
pop
xor
jl
lret
add
sub
jne
test
out
cmpsl
push
rclb
pop
je
movsb
dec
xor
push
fmull
loopne
pop
hlt
sbb
jmp
push
mov
aam
inc
ret
in
scas
int
and
daa
cmc
mov
push
or
push
aad
arpl
inc
push
mov
push
nop
shrb
mov
cmp
xchg
cmp
lahf
push
je
push
insl
add
test
vshufps
aas
xchg
xor
or
insb
ds
clc
fwait
pop
mulb
or
in
and
lret
mov
scas
jns
ja
pop
mov
mov
movsl
or
out
mov
and
rcrb
xchg
sub
push
add
call
rorl
jb
mov
rcrb
dec
and
add
ss
adcb
xchg
adc
jb
filds
cmp
mov
dec
inc
xor
frstor
fcmovnu
sub
bound
sbb
cmpsb
hlt
cmp
mov
xor
into
mov
sti
xor
sahf
fs
sub
fmull
roll
dec
xchg
inc
mov
or
cli
sub
aaa
inc
sbb
mov
aam
push
sub
dec
cltd
cmp
movsl
jmp
push
jno
jbe
in
dec
je
out
mov
loop
adc
ud2
or
add
and
mov
rcl
es
insl
je,pn
jg
imul
push
adc
shlb
pop
fcomp
scas
pusha
pop
mov
inc
out
jp
sbb
sbb
mov
inc
sub
stos
into
sub
in
leave
mov
mov
sbb
subl
leave
inc
test
pusha
or
enter
mov
adc
shll
jb
mov
fdivl
push
fidivl
popf
fiaddl
subb
mov
push
es
aaa
pop
dec
xchg
out
sbbl
ret
pop
ret
faddp
outsl
cwtl
popf
mov
push
push
inc
push
cmp
sbb
dec
mov
andl
lods
jecxz
cmp
mov
rolb
ds
pop
jle
out
pop
out
enter
in
lea
divl
jb
inc
xchg
faddp
sti
fs
mov
push
clc
mov
push
sub
ds
movl
adc
mov
aad
scas
fbstp
add
outsl
aas
hlt
int3
dec
jns
enter
sub
lcall
sub
es
daa
stos
jno
in
and
mov
out
and
rorb
fidivrl
cmp
add
sbb
lcall
xor
call
push
lods
ds
pop
aad
xchg
xor
adc
mov
cmp
inc
bound
ja
mov
orl
sbb
ret
idivl
testb
lock
inc
xor
xchg
cmp
or
dec
add
std
and
lcall
hlt
out
mov
test
sbb
sbb
inc
mov
daa
imul
pop
testl
loop
mov
xor
and
sbb
inc
out
sti
sarl
cmc
cld
and
shlb
dec
fcmovne
jnp
sbb
insl
xchg
lods
mov
int3
aaa
idiv
loop
daa
mov
sub
and
cmpsl
loopne
std
repz
out
leave
rcrb
insb
shrb
push
cmp
insb
fists
out
mov
xor
call
pop
arpl
push
mov
sub
pop
jmp
cmp
and
es
push
fists
fadds
cld
inc
test
es
dec
xor
or
jae
and
push
inc
xchg
ret
and
mov
aas
stos
push
inc
xchg
add
ja
pop
push
nop
sub
pop
cs
xor
add
mov
cmp
xor
dec
insl
jmp
inc
sbb
and
mov
lret
push
push
xor
pop
in
imull
es
cmp
dec
ret
data16
fistps
or
sahf
sbb
mov
es
movsb
mov
cmpsb
fdivrl
inc
int
pop
addr16
out
imul
add
pop
int3
push
loopne
or
inc
dec
push
xchg
call
pop
ljmp
jne
add
std
push
mov
pop
or
clc
cmp
lret
sidtl
jae
test
orb
pop
sar
lahf
xor
call
sbb
ja
jbe
pop
xchg
add
icebp
daa
sbb
fsubl
push
out
dec
rol
jbe
data16
pop
clc
mov
cld
add
jge
fldenv
fwait
aad
out
mov
shlb
pop
mull
fdivrs
pop
jno
adc
push
mov
mov
faddl
push
leave
add
call
mov
xor
pop
pop
iret
cmp
lcall
inc
loop
push
popw
out
and
pushf
jb
int
ret
ss
sbb
sbb
scas
daa
pop
inc
pop
js
pop
sbb
ds
add
or
das
mov
sbb
ss
jge
cs
mov
in
mov
ficoms
and
popa
mov
mov
cmp
test
dec
lods
imul
or
sbb
jo
fnstenv
dec
mov
fwait
mov
xchg
ja
xchg
sbb
sbb
xor
lods
loop
dec
movsb
out
mov
ret
pop
push
lock
cwtl
or
add
jl
mov
xchg
jne
fs
in
mov
sub
mov
adc
dec
lock
xor
jns
pop
add
xor
and
popl
inc
xor
imul
jno
jno
icebp
sti
stos
repnz
pop
mov
inc
cmp
xchg
in
sti
sub
cltd
fldl
rorb
out
ftst
out
push
aad
sbb
pop
jmp
push
sbbb
imul
add
inc
lods
repnz
inc
movsb
sub
dec
cmpsb
inc
pop
xor
sub
add
push
inc
pop
movsl
xor
loope
adc
ret
adc
or
enter
pop
scas
mov
out
push
push
inc
mov
sub
ds
adc
xchg
mov
fldenv
out
jbe
nop
out
sub
or
sub
ret
add
mov
cmc
ss
pop
std
ljmp
imul
inc
in
call
add
loop
leave
pop
adc
mov
jle
jg
gs
jmp
scas
pop
xchg
inc
pop
push
arpl
mov
jb
mov
cmp
lret
fisubl
cmp
fdivrp
in
jo
xchg
add
sbb
ljmp
and
lea
mov
rolb
bound
jecxz
mov
cld
sbb
insb
fadds
cmp
and
popa
out
mov
jge
in
mov
push
jbe
jp
xor
and
mov
and
lods
lds
fldl
sti
pushf
lds
mov
ljmp
aam
mov
lock
xchg
outsl
sti
push
aad
call
adc
scas
inc
lret
pop
je
icebp
or
daa
aad
and
lret
insb
dec
jp
sbb
cmpsb
cmp
inc
in
addl
adc
xchg
stc
pushf
cmp
mov
mov
cmp
std
mov
sbb
inc
xchg
jo
inc
notb
sarl
cmp
mulb
jb
jecxz
ds
test
jno
hlt
rclb
xor
inc
lcall
popf
push
ret
mov
mov
cmp
lret
dec
and
sbb
mulb
pusha
bnd
out
popa
icebp
mov
imul
lea
jg
test
popa
dec
popf
pop
int
mov
das
aad
xor
adc
ds
shrl
sbbb
sbb
add
or
sbb
sub
mov
push
lods
dec
push
scas
in
pcmpeqd
ds
out
pop
xor
mov
fdivr
mov
dec
inc
push
lds
ds
pop
or
ret
mov
dec
dec
adc
cwtd
mov
lea
xchg
fimuls
mov
fidivl
cld
inc
mov
insb
ljmp
inc
imul
adc
xor
pop
mov
lods
cmp
sub
pushl
shr
pop
jbe
mov
and
xor
cmp
mov
mov
ror
mov
out
ds
stc
or
jne
pushf
push
lcall
ret
test
cmpb
push
pop
jge
jecxz
cld
fidivrs
mov
mov
pop
jns
push
adc
mov
repz
mov
popa
ss
ficoms
sti
mov
push
fwait
adcb
dec
inc
mov
iret
adc
repnz
sub
pop
adc
xchg
outsb
mov
lock
shlb
out
in
dec
nop
sbb
out
enter
arpl
sub
addr16
mov
aam
sarb
sbb
dec
cmp
cs
add
jle
test
sub
rolb
ljmp
mov
xchg
shufps
sub
nop
std
push
adc
lcall
fs
jmp
xchg
into
pop
adc
cmpsl
out
pop
mov
jmp
cmp
mov
push
adc
jg
xor
xor
push
jg
mov
bound
push
fcmovnu
int
dec
push
testl
adc
ret
pop
mov
or
cmp
stos
cmpsl
pop
jle
sbb
mov
inc
js
and
jge
inc
cmpsb
out
add
ret
ljmp
iret
lret
push
jno
pop
jmp
push
out
mov
lret
popa
js
sbb
leave
push
stos
cmpl
jb
jns
addr16
jge
xor
insb
sub
jno
mov
and
lods
rdtsc
int
notb
mov
lock
xchg
lahf
xchg
xor
add
pop
inc
mov
or
adc
jp
mov
fcmovnbe
jecxz
mov
xchg
sbb
cmp
scas
gs
sti
push
xchg
js
cli
sub
dec
sub
dec
sbb
bnd
aas
xchg
xchg
loopne
jmp
push
movsw
sahf
lret
insl
jae
insl
cs
stos
ljmp
or
mov
ja
xchg
xchg
inc
aad
push
inc
negb
cmp
test
arpl
jg
jl
push
mov
and
ss
movsl
ficomps
shll
scas
mov
xchg
out
fs
mov
sbb
test
fwait
and
mov
dec
or
jge
outsb
sub
sbb
mov
stc
pop
outsb
pop
jo
cmp
pushf
sbb
mov
lret
mov
addl
int
pop
inc
pop
pop
lods
sbb
sbb
push
xor
and
movsb
subb
add
xorl
or
imul
sub
test
mov
rclb
dec
in
lods
xlat
test
mov
sub
mov
xchg
iret
mov
ret
cmpsb
xor
mov
fistl
ret
aad
loopne
cwtl
outsl
test
dec
mov
ljmp
movsb
dec
mov
dec
shlb
into
mov
xor
ja
mov
icebp
mov
sbb
mov
out
adc
js
add
stos
xchg
xchg
xorl
dec
pop
test
or
adc
jno
xchg
cmp
and
push
jbe
in
mov
out
lods
subb
pop
xor
push
repz
rdmsr
lods
xchg
dec
mov
and
insb
fisubs
fnsave
lahf
or
sub
cmp
mov
push
shl
cli
jle
dec
ret
addr16
mov
lea
enter
pop
xor
loope
adc
nop
in
aad
out
insb
push
imul
testl
xor
insl
jl
jne
cmc
push
lods
ret
sbb
xor
test
fwait
scas
leave
aad
and
out
out
gs
fcomps
inc
mov
push
outsb
inc
mov
shlb
or
filds
xor
shl
sub
insb
cmc
je
mov
test
rol
les
sub
mov
jge
mov
and
mov
jmp
pop
jecxz
or
fiadds
mov
int3
mov
sub
or
cwtl
loop
and
add
mov
data16
cmp
jbe
and
jmp
xor
fsubl
jbe
mov
sbb
mov
pop
stc
sarb
mov
shll
mov
incb
dec
rcr
popf
push
mov
scas
shlb
inc
pop
sar
cmp
aad
sbb
xchg
add
subl
jmp
js
repnz
xchg
jnp
ja
jae
jb
lret
dec
repz
push
push
cmc
sbbl
imul
xor
sbb
push
sub
scas
sub
fists
inc
push
mov
repnz
pusha
sahf
out
xor
sbb
pop
or
in
cmpsb
and
imul
leave
add
mov
jecxz
lahf
aad
xchg
lea
push
xchg
cmc
push
jg
lds
mov
or
push
call
std
leave
or
inc
sbb
scas
adc
shll
jb
fisubrl
fsubl
cwtl
jnp
out
bound
ret
andl
inc
cmp
aas
andl
std
cld
dec
aas
mov
push
jg
add
xlat
adc
mov
lahf
jg
cmc
fistpll
daa
ljmp
mov
sti
jnp
cmpsl
mov
push
add
cmp
mov
fsubl
clc
bound
sub
je
sub
cmp
ljmp
dec
mov
iret
out
adc
cli
aaa
popa
aaa
dec
inc
dec
mov
scas
xchg
jp
cmp
xor
adc
xchg
mov
adc
call
stos
testl
dec
int3
repnz
lret
out
jecxz
add
adc
jne
cld
cmpsl
and
out
sub
stos
aaa
push
fsubl
inc
mov
out
in
sub
xor
mov
cmc
test
lahf
sbb
mov
dec
xor
pop
pop
stos
ljmp
imul
daa
and
mov
out
push
push
add
push
cltd
sbb
das
and
lret
xchg
sbbb
cmp
addr16
dec
sub
mov
xchg
sarb
cmp
inc
test
into
add
test
mov
test
xor
test
aad
jae
lahf
loopne
mov
sub
aaa
jge
adc
xchg
add
and
dec
pop
pop
push
je
sar
pop
fnstcw
in
jge,pt
jne
xchg
pop
xchg
maxps
xchg
iret
test
fsubr
fs
inc
mov
push
pop
mov
lcall
test
popa
jle
and
outsl
fcoml
je
xor
adc
cmp
sbb
aaa
xchg
add
mov
fisubrl
lahf
dec
mov
test
movhps
xor
mov
jp
xchg
xor
xchg
imulb
inc
mov
mov
sbb
mov
loopne
imul
adc
gs
mov
lods
adc
add
iret
shr
add
mov
mov
or
and
les
dec
mov
mov
insl
icebp
into
es
aad
mov
jmp
mov
sahf
dec
mov
stos
scas
lods
movsl
shll
xor
jb
insl
cmpsb
and
stos
fstpt
mov
loope
mov
jl
xchg
addb
sub
inc
test
and
add
jo
dec
mov
and
push
pop
cmpsb
dec
lret
dec
xchg
cmp
fsts
cwtl
and
gs
jecxz
andb
or
sub
mov
inc
push
or
cld
inc
or
or
fstpt
sub
ret
mov
arpl
addl
sbb
imul
aaa
mov
or
test
mov
sbb
lods
addr16
adc
fs
out
inc
cli
pop
xor
cltd
enter
test
mov
or
ret
xor
jnp
aad
les
stos
and
xor
pop
aaa
lret
stc
mov
cld
fdivl
jmp
dec
hlt
xlat
pop
mov
out
xchg
mov
mov
lcall
sub
cmp
adc
int
jmp
jge
inc
xor
xchg
or
aaa
cmp
lock
sub
aaa
nop
stos
cli
stos
cli
pusha
fisttpll
push
ret
ljmp
pop
dec
jne
mov
jns
ret
sarb
roll
dec
mov
test
xchg
ret
and
cmpsl
xchg
or
fsubrs
cld
push
pop
mov
popf
and
stos
std
ja
adc
jbe
mov
out
call
lods
inc
jl
mov
repz
inc
test
mov
xor
lret
scas
cmp
sbb
dec
add
mov
inc
les
push
subb
call
sbbb
fildll
pop
test
add
mov
xchg
mov
adc
sub
fisubl
rol
mov
mov
or
pop
push
popa
icebp
adc
sbb
stos
mov
push
rcrl
add
stos
cmp
pop
mov
inc
adc
jge
sub
push
fld
in
imul
cs
dec
push
xchg
push
rcll
dec
aad
jmp
mov
rcl
pop
inc
push
push
shll
iret
popf
scas
lods
pop
mov
pop
es
in
dec
mov
ret
pop
sbb
xchg
mov
adc
jecxz
mov
loopne
adc
mov
int
or
shlb
push
jmp
adc
or
dec
cld
insb
inc
and
jle
call
in
in
xor
cwtl
dec
mov
jo
adc
inc
je
loope
cmpsb
fs
and
repnz
mov
jle
inc
sarl
jmp
test
fdivs
popa
outsb
inc
rcrb
sbb
shl
cmpsl
inc
adc
inc
psubsw
subb
dec
jmp
cmp
xor
test
mov
xor
stos
adc
mov
sub
ficompl
mov
dec
out
mov
shll
addr16
pop
pop
push
xchg
repnz
into
jnp
mov
jbe
inc
cmp
out
add
test
lods
or
xor
lea
stos
ss
jbe
shlb
outsl
push
push
and
int3
rol
jbe
imul
std
mov
dec
into
jecxz
fcomip
sbb
je
jecxz
js
xor
or
movsl
insb
call
push
fwait
or
and
dec
rorl
add
pushl
xchg
pusha
sar
xchg
pop
out
stos
cs
push
rcrb
popf
pushf
les
loope
cltd
dec
add
lahf
in
ret
pop
stos
adc
jg
idivl
jne
mov
inc
rolb
inc
sub
in
stos
lds
xchg
lea
adc
or
push
cmp
or
mov
shlb
cmp
sub
insl
addr16
xor
mov
or
xor
out
sub
jo
push
test
sbb
popf
or
inc
cmpl
loop
mov
sahf
and
pop
add
mov
scas
xchg
jno
or
test
repz
fs
add
inc
out
mov
pop
movsl
fxch
sub
xchg
cmpsl
jmp
sbb
shrb
mov
dec
sbb
js
ret
mov
repnz
or
cltd
cmpsl
xor
loopne
jmp
xchg
cmp
push
cmp
jbe
loop
xchg
add
ret
add
popf
xor
adc
lds
pop
dec
aam
mov
std
jo
cmp
pusha
pop
popa
das
and
sub
repz
cwtl
rclb
cmp
ret
pop
mov
in
cmp
test
daa
pop
movb
xor
xchg
pop
lret
mov
add
dec
divl
std
inc
sbb
pushf
jecxz
repz
and
pop
rol
or
outsb
shlb
lret
in
cmp
and
movl
jne
jle
std
mov
cmpsl
stc
lret
pushf
pop
mov
dec
lahf
push
sbb
aad
scas
push
ss
jecxz
mov
push
pop
mov
iret
in
fsubl
imul
push
lcall
and
ret
and
shl
xchg
rcrl
jo
jge
mov
sbb
outsb
inc
outsb
fstpl
jo
jge
or
lret
and
push
popa
sbb
cmp
pop
aas
adc
xchg
mov
jbe
idivl
push
sbb
call
jle
aaa
dec
mov
or
lds
and
aaa
cmp
leave
cmpsb
movb
xlat
inc
mov
and
push
inc
sbb
ja
xchg
je
adc
ss
or
push
add
inc
pop
mov
jl
mov
and
aaa
push
xchg
les
pop
cmc
jp
jae
and
mov
hlt
repnz
movsl
push
daa
mov
imul
cmpsb
imull
stos
sub
pop
fldenv
addr16
xchg
sahf
mov
inc
decb
xor
pop
insl
das
mov
sbb
les
push
mov
fcomps
push
iret
push
fnstcw
pop
fisttps
imul
and
mov
loope
and
jo
sbb
push
push
jb
addr16
ds
jo
jo
aaa
sub
inc
dec
jle
adc
imul
cmp
push
shl
jg
mov
pop
add
fcom
leave
dec
cmp
call
call
sbb
popf
out
adc
mov
ror
cli
into
lds
lods
lock
lcall
mov
sbb
and
ret
ja
and
xchg
mov
xchg
and
cmpsb
or
loope
clc
mov
xchg
or
inc
sub
mov
mov
or
xchg
adcb
jmp
sbb
mov
pop
add
mov
inc
stos
and
sub
lea
jmp
cmp
out
aad
mov
dec
dec
sub
mov
lahf
or
sbbb
aad
sub
test
adc
mov
shll
pop
adc
sub
sbb
lock
out
sarb
lds
xor
mov
add
addr16
adc
push
mov
rclb
sbb
fwait
sahf
dec
cmp
imul
int
add
mov
push
xchg
lcall
fldt
bound
lret
out
mov
push
movsl
ror
loopne
ret
pop
dec
jl
mov
inc
repz
xchg
and
rcr
xlat
cmp
cmp
sarb
adc
xor
movsb
mov
or
cmp
out
adc
adc
inc
mov
daa
mov
lods
pushf
sub
inc
data16
dec
adc
aad
decl
decl
ja,pt
sahf
hlt
mov
jmp
ss
sbb
sub
addl
jae
xchg
pop
leave
mov
test
xor
push
mov
sub
popf
jo
ret
sbb
inc
popf
out
fwait
out
sbb
pop
adc
cmc
dec
subb
mov
call
jg
mov
scas
push
xor
mov
push
inc
sbb
xchg
sbb
pusha
xchg
ds
imul
push
enter
cmp
jbe
and
sub
nop
xchg
cltd
popf
jge
cmp
pop
mov
inc
jle
or
inc
dec
ljmp
negb
jmp
mov
test
lret
sahf
sub
mov
xchg
mov
clc
cltd
sbb
jl
and
xor
xchg
mov
or
lock
jb
ret
out
sbb
jecxz
pop
push
fidivl
bound
cmp
mov
ja
sub
add
adc
mov
sbb
dec
xchg
test
js
xchg
dec
and
dec
lret
mov
pop
mov
add
divl
pop
loope
dec
adc
mov
dec
mov
add
mov
inc
call
sub
ja
in
dec
inc
dec
movsb
test
jge
and
out
iret
cld
adc
jecxz
add
adc
inc
mov
push
jne
out
into
pop
add
mov
leave
fcmovu
fiaddl
or
stos
and
negb
imul
sub
push
cmp
lcall
out
and
xor
push
xchg
inc
cmp
adc
add
outsw
data16
inc
and
pushf
loop
mov
sbb
add
gs
scas
loope
call
mov
data16
sbb
sub
and
icebp
mov
cwtl
sar
dec
push
repz
xchg
mov
inc
lahf
and
lret
inc
cmp
sbb
mov
imul
stos
and
mov
jmp
jno
xchg
push
jo
out
mov
add
rcrb
cwtl
cmp
sahf
jmp
pop
cmp
mov
sti
fwait
push
imul
int3
adc
ljmp
or
ret
adc
adc
ds
xchg
mov
dec
sbb
out
push
push
je
or
mov
sbb
nop
mov
scas
pop
ja
mov
clc
ret
xchg
jmp
mov
push
add
repnz
or
test
cmp
mov
add
pop
ss
or
add
add
dec
and
pcmpeqw
mov
xor
xchg
dec
movsl
jmp
nop
or
sub
imul
xorl
pop
sbb
jbe
outsb
mov
pusha
push
jbe
fimull
loope
incl
int
push
xchg
fists
cwtl
jge
repz
ss
add
jo
cmp
xor
mov
cltd
add
mov
mov
xor
outsb
cmp
fwait
and
mov
std
or
out
mov
xchg
popf
mov
xor
lea
xor
dec
xchg
fwait
ljmp
or
iret
les
out
and
loopne
or
pusha
lret
aas
in
data16
dec
jo
inc
idivb
aad
dec
or
sbb
jg
pop
inc
aad
mov
cmp
inc
loop
push
mov
fwait
cmc
sbb
imul
add
sub
lret
inc
mov
out
lcall
jp
dec
cmpb
sbb
lea
push
fdiv
out
or
xchg
push
push
imul
fldl2t
lods
clc
push
jno
mov
sub
outsb
add
pop
mov
cwtl
popf
daa
jecxz
mov
inc
cltd
xchg
cmpl
mov
push
xchg
scas
sub
in
mov
cmp
out
xchg
push
push
loope
call
faddl
pop
dec
and
adc
pop
cmp
aas
xchg
cmpsw
sub
and
ja
xor
adc
sbb
dec
stos
sub
xchg
add
and
add
stc
jb
enter
clc
jb
xor
mov
pop
js
fldenv
mov
inc
inc
and
jge
jbe,pt
cltd
scas
add
shll
and
inc
sub
sub
aas
add
in
sub
lret
or
addr16
and
out
shrb
and
addr16
cmp
inc
push
mov
int3
dec
push
les
scas
pop
or
jge
push
xchg
and
ret
scas
pop
mov
mov
pop
push
mov
mov
mov
inc
outsb
xor
cmpsl
jle
aam
iret
pop
addb
fwait
push
jne
jae
pop
movsb
dec
lds
sbb
nop
aas
popa
lock
imul
sub
daa
mov
mov
aam
mov
jmp
pop
repz
std
inc
and
add
mov
cmp
push
jmp
dec
pusha
in
loopne
xor
mov
sbb
cmovb
ffreep
cmp
cmc
pop
mov
jge
and
in
xchg
xchg
arpl
pop
push
dec
jle
int3
jp
int3
sbb
dec
in
enter
pop
sbb
inc
sub
dec
roll
xchg
and
cs
bound
pop
repnz
inc
push
pop
jo
in
imull
mov
mov
push
inc
inc
and
inc
sub
pushf
pop
or
push
pop
ja
adc
xchg
out
adc
test
mov
fsubrs
fldenv
mov
out
mov
dec
enter
push
sbbl
daa
mov
cmp
xorl
gs
vcomiss
and
stc
adc
sbb
sti
pop
int
pop
hlt
xchg
sub
jnp
and
je
outsb
mov
inc
dec
jae
sbb
cmp
sub
push
mov
or
push
movsb
sbb
mov
or
aas
add
jmp
fisubrl
bound
cmp
hlt
pop
in
mov
sub
loop
repnz
sbb
xorb
shll
fidivl
sub
scas
inc
xchg
aas
popa
push
mov
pop
inc
int3
mov
lahf
dec
and
imul
sub
cltd
xor
or
std
or
and
xchg
aam
dec
jg
ja
pusha
outsl
xor
push
mov
ret
pop
hlt
sarb
and
addr16
aad
sti
data16
sbb
jno
mov
fmul
loopne
dec
pop
ja
mov
insl
int
int
fcmovbe
mov
dec
mov
mov
fstpl
test
push
popa
xchg
adc
addr16
mov
push
out
mov
stos
dec
xor
int
xor
inc
imul
out
jnp
divb
sbb
dec
jnp
cmpsb
sub
movsl
cmpsl
jb
xchg
sbb
jbe
jns
dec
push
push
jle
addb
inc
jp
sub
mov
xor
and
in
push
push
mull
rcl
sahf
pop
sub
jg
push
es
movsl
xchg
adc
mov
xchg
add
pushf
pop
into
sbb
shrl
js
lret
adc
jle
pop
pop
sar
cmp
mov
dec
add
xchg
ljmp
ljmp
loope
adc
xor
jl
int3
jno
test
xor
push
clc
and
out
call
sbb
cli
aam
loope
js
sti
mov
leave
xor
inc
xor
cmp
dec
adc
adc
in
test
push
inc
pop
negb
in
sub
bound
dec
aad
xchg
mov
loope
pusha
cmpsb
out
cmc
pop
daa
mov
mov
mov
das
lcall
jge
shll
push
icebp
xchg
cmc
bound
aas
and
bound
pop
fdivr
dec
mov
pop
or
xchg
inc
cs
call
stos
xchg
cmpsl
stos
in
inc
pop
add
xchg
adc
cltd
adc
cmpsb
push
lods
into
cmp
sahf
rorb
mov
jge
outsb
imul
inc
lock
dec
aam
scas
rclb
lahf
addr16
jns
insl
xchg
mov
mov
mov
aaa
movsl
cmp
push
cmp
mov
fwait
cmp
mov
rorl
mov
movsb
daa
sti
cmc
xor
adc
fcoml
aas
ds
lds
cld
test
push
out
outsb
dec
mov
and
inc
push
sub
enter
std
dec
popa
push
xchg
adc
push
pop
cld
dec
inc
lock
mov
pop
arpl
cmp
and
xchg
hlt
xchg
xor
shr
fs
mov
and
hlt
pop
push
cmp
add
shr
add
cmpsl
jl
sub
push
out
jno
jge
jo
mov
mov
xor
push
out
add
pop
add
hlt
jp
popf
cmpsl
sahf
pushf
sbb
fcompl
mull
enter
mov
push
lods
call
out
lret
outsb
nop
out
jns
bound
lock
lret
add
and
lods
mov
cmpl
call
aaa
outsl
jge
repnz
xchg
xchg
push
pop
leave
sbb
dec
lcall
js
xor
mov
adc
cmp
inc
ljmp
mov
adc
jmp
jns
in
fsubrs
sub
mov
out
jno
pop
insl
push
mov
int3
jno
pop
cmp
and
and
popf
sbb
lock
xor
inc
icebp
jle
int3
ss
jmp
mov
dec
cs
push
movsb
nop
lret
xor
add
loopne
les
xor
xchg
scas
scas
imul
jae
je
sbb
jne
mov
dec
data16
mov
sbb
push
add
push
mov
pop
ror
xchg
loopne
mov
push
pop
repnz
sub
scas
lock
das
cld
lret
lock
xor
dec
push
pop
mulb
sbb
ds
inc
in
clc
add
imul
fimuls
sbb
insl
icebp
clc
mov
inc
jmp
pop
mov
loop
and
jmp
ja
xchg
sub
cmpsb
inc
gs
cmp
or
jp
and
outsl
push
jl
jle
roll
nop
dec
hlt
sti
rcl
push
mov
dec
inc
dec
mov
adc
pop
push
pop
sbb
cmp
imul
mov
cmc
inc
or
mov
adc
mov
cli
and
jo
cwtl
jns
xchg
fldl2e
iret
popf
int3
jno
notl
lcall
fcmovnbe
dec
mov
aad
ds
push
into
loope
push
sbb
dec
add
mov
addr16
int3
ss
pop
dec
add
push
rorb
mov
mov
adc
sbb
xchg
jl
lret
adcb
mov
in
mov
pop
pop
ret
xchg
iret
jae
lret
leave
mov
jb
out
popf
out
mov
shlb
cmp
mov
cli
push
mov
outsl
push
lret
mov
js
bts
and
insb
jge
push
cld
jl
rep
and
mov
rol
leave
mov
js
popa
jae
push
es
xor
or
outsl
fdiv
mov
xor
js
jo
push
adcl
cs
xor
xchg
lcall
and
pop
add
add
mov
sub
mov
addb
pop
sti
push
jae
or
add
mov
cmp
arpl
mov
add
arpl
into
pop
adc
mov
loopne
movsl
mov
sub
mov
test
xor
sbb
cmp
and
mov
adc
jno
into
mov
repz
fs
jb
call
add
iret
mov
int3
popa
movsb
outsb
aas
lahf
gs
jle
das
test
je
push
call
push
fisubrl
jg
loope
push
inc
cld
jne
bound
aaa
inc
adc
lds
int3
mov
fwait
inc
or
fsts
xchg
movsl
sbb
lods
sti
dec
out
pop
aaa
aad
sub
pusha
jns
xor
cwtl
cmp
jno
stc
adc
add
leave
xor
fcompl
dec
xor
mov
push
shlb
and
fmuls
mov
sub
xor
cmp
dec
pop
or
sti
lock
push
xor
jecxz
push
aas
sbb
xor
leave
je
push
lret
dec
icebp
loop
mov
std
stos
imul
add
int
inc
out
rorl
out
es
mov
nop
aad
rorb
mov
and
rorl
das
fwait
add
push
in
mov
fmull
adc
jae
cs
jae
je
adc
pop
inc
iret
popl
xchg
data16
cld
add
mov
test
or
test
cs
push
lahf
mov
out
lds
outsl
xor
lahf
imul
std
fucomp
add
cmp
inc
js
sbb
jge
out
stos
xor
in
and
mov
inc
hlt
pop
adc
rcr
dec
adc
imul
push
jp
scas
andb
jne
popf
lods
push
fs
and
idivl
sbb
push
cmpsb
lock
call
rclb
sahf
adc
jge
sub
shll
cli
dec
push
mov
inc
mov
imul
sub
fsin
pop
aas
mov
jmp
lods
vrsqrtps
fsubrl
mov
scas
sub
mov
adc
cmc
xor
or
mov
and
pop
and
fs
jmp
fimuls
or
jmp
dec
jge
xchg
cld
lcall
ss
mov
push
cmp
pop
shll
mov
jbe
mov
push
cmpsl
in
in
icebp
push
add
mov
lods
fcomi
push
pop
pop
jl
mov
sarb
or
int3
leave
xor
lock
dec
aam
insl
les
enter
xchg
push
push
add
mov
or
dec
add
rcl
sbb
test
sbb
nop
jae
inc
cmpl
inc
inc
sbb
mov
cwtl
ss
mov
aas
push
int
sub
mov
into
addl
pop
and
clc
mov
dec
cld
std
xchg
fdivrs
pop
imulb
ss
cli
push
inc
call
pop
das
push
or
test
out
notl
jo
pop
je
shrl
and
dec
push
pop
nop
jmp
mov
cltd
sbb
popa
lods
call
xchg
shrb
ds
xchg
cvttps2pi
pop
lahf
mov
ds
mov
push
sbb
mov
insl
pop
mov
cwtl
jns
pop
mov
jle
lcall
jl
arpl
inc
in
push
sbb
inc
pop
xor
and
test
push
popf
push
adcl
sbb
xor
ret
inc
xchg
repz
out
lods
mov
mov
sub
lods
adc
sbb
popf
rcll
sub
jg
push
pop
jg
xor
xchg
jmp
adc
daa
in
pop
pop
xchg
mov
mov
movsb
out
push
cmp
cmp
mov
jmp
mov
in
push
pop
addr16
stc
lods
xor
hlt
mov
aad
out
sbb
cs
out
xor
mov
jl
aam
push
sbb
lds
sarb
loop
xchg
sti
mov
ja
xchg
inc
pop
fsubrl
in
inc
fwait
mov
es
fldt
mov
and
in
sub
ljmp
mov
xlat
mov
and
les
insb
xchg
inc
mov
mov
clc
daa
cmpsb
rclb
mov
xchg
or
das
lea
pusha
repz
gs
scas
sub
and
lods
xor
add
jmp
dec
aaa
into
adc
mov
push
out
aad
mov
and
addr16
jle
push
xlat
pop
loop
aad
repnz
ret
sbb
inc
popf
xor
inc
push
insb
xor
adc
xor
std
movsb
insl
mov
mov
mov
push
aad
jle
pop
test
inc
adc
mov
insl
jecxz
push
popa
int
and
sbb
sub
sub
clc
fisubrs
mov
push
mov
push
subb
aaa
inc
and
dec
cmpsl
push
ljmp
ds
add
lahf
cli
in
or
jl
sbb
imul
cmpsl
push
jp
sub
xchg
movsb
cmp
out
xchg
xchg
push
jg
jle
cmp
add
les
xor
shlb
and
test
das
fmull
ret
das
popf
outsl
and
ret
test
es
mov
push
jne
fbld
and
addr16
xchg
andb
add
lahf
imul
mov
nop
mov
pop
je
cwtl
scas
or
movsl
cld
shll
cwtl
loop
cld
ret
dec
adc
pop
push
dec
adc
pop
bound
mov
les
outsl
or
pop
push
js
jb
sbb
sbb
sbb
cmp
out
loope
stc
in
mov
xor
setbe
ljmpw
xor
loope
out
addb
or
fcmove
sahf
cmc
movsb
nop
aaa
lds
ds
pop
cmp
pop
ret
fwait
push
mov
enter
pop
mov
pop
xchg
outsl
cmc
popa
out
lret
mov
jnp
test
mov
sub
xor
mov
mov
adc
nop
or
stc
outsb
adc
add
jbe
pop
push
test
ljmp
pop
and
mov
add
xchg
mov
dec
aam
inc
mov
mov
out
mov
push
stos
addr16
or
inc
scas
pop
lcall
dec
fsubrl
sbb
or
data16
movsb
pop
call
fdivrs
xchg
push
mov
std
push
xchg
enter
in
jbe
jmp
push
and
dec
inc
imul
sub
lahf
int
push
mov
and
scas
enter
mov
jo
lahf
pop
iret
lret
push
jecxz
cmp
cmp
jnp
sar
pop
out
or
lret
sub
xchg
and
sbb
push
test
outsb
inc
fimull
push
jnp
sub
dec
jecxz
push
pop
xchg
and
pushf
xchg
push
jp
dec
xor
aas
and
mov
iret
mov
and
rol
into
inc
mov
bnd
xor
pushl
test
jecxz
pushf
out
push
cwtl
and
pop
idivl
push
mov
mov
data16
bound
xor
inc
mov
inc
pop
inc
sti
jnp
push
adc
jbe
hlt
fstpl
cmp
sbb
sub
mov
sub
enter
pop
mov
inc
dec
inc
lret
dec
in
sbb
imul
pusha
cld
push
in
xor
lds
js
xor
push
imul
mov
jae
pop
inc
adc
push
cmp
xor
aad
xchg
dec
lods
xor
push
or
sub
sub
xchg
notb
pop
in
adc
sti
ret
xchg
jae
cmp
icebp
jge
mov
les
cld
sbb
gs
subl
mov
stos
lock
xor
data16
mov
xchg
xchg
push
movsl
mov
aam
jb
sar
push
or
out
repnz
mov
into
sbb
mov
cmp
mov
push
mov
dec
fdiv
cmpsl
jo
push
out
repz
mull
outsl
fldt
aaa
lods
or
or
nop
inc
dec
loopne
sub
in
inc
je
test
out
test
mov
nop
dec
fwait
ret
rcrl
jge
repnz
mov
xchg
lret
dec
inc
lahf
mov
adc
cwtl
insl
ljmp
dec
xchg
add
mov
aam
sarl
push
sti
cmpxchg
das
mov
aad
out
inc
adc
push
xchg
xor
sbb
pop
enter
ja
xor
mov
mov
sub
insb
and
cmc
adc
or
or
clc
outsb
mov
xchg
shl
dec
hlt
mov
fisttps
leave
jp
mov
ss
lcall
jg
pushf
adc
pop
add
xchg
ljmp
add
xchg
int3
adc
xor
imul
cmpsb
lea
sarb
push
sub
push
ret
outsb
nop
sub
dec
dec
fidivs
clc
ljmp
insl
push
add
in
jo
addr16
push
andb
mov
xor
pop
cmp
add
jmp
push
mov
pminsw
scas
les
jp
imul
jnp
sbb
aaa
xor
out
mov
mov
mov
data16
pop
cld
sub
adc
into
cmp
mov
xchg
loope
mov
xadd
jp
pop
es
sub
inc
jns
cld
outsl
mov
lds
dec
mov
repnz
or
mov
shrl
sarl
rcl
aaa
cmp
enter
dec
mov
imul
mov
mov
gs
sbb
imul
jb
call
dec
lods
mov
xchg
cmpsb
das
ljmp
push
push
pop
jne
sub
insl
cwtl
imul
add
js
and
xor
imul
outsl
aaa
inc
push
call
jns
sub
movsb
loopne
mov
out
cld
mov
jno
xchg
loop
cmc
insb
lcall
adc
lds
lret
jb
xor
inc
jg
mov
or
lods
mov
inc
cmp
inc
cmp
imul
or
loope
stc
push
cli
in
repz
aaa
push
mov
rolb
sbb
lret
add
shll
push
mov
lds
popf
rcll
sub
add
dec
rcrl
addr16
jle
inc
or
mov
ret
jne
insl
and
test
mov
or
mov
fldl
aam
mov
ud1
inc
jmp
xorb
adc
dec
pop
pusha
sbb
enter
push
mov
insb
subl
xchg
outsb
mov
pop
aaa
sbb
data16
mul
clc
or
adc
les
ss
sbb
stos
fldt
push
mov
add
aas
leave
icebp
cmp
sahf
stc
add
inc
pop
cld
jae
js
fadds
enter
adc
and
fidivl
and
outsb
and
ret
mov
push
stos
sbb
imul
clc
movsl
sbb
out
les
xchg
adc
lcall
clc
ss
xchg
out
mov
mov
sbb
insb
fs
mov
loop
stos
and
push
test
lods
rol
sahf
movsb
xor
sub
cmpsl
dec
push
repz
in
mov
fldcw
loope
mov
xchg
xchg
pop
pop
sub
pop
jno
pop
jle
xchg
xchg
repnz
cmp
mov
mov
xchg
daa
cld
leave
sub
pop
data16
scas
outsl
pop
xor
mov
cmp
xchg
jp
push
pop
or
xorb
stos
pop
jbe
mov
mov
imul
mov
add
sub
popa
cmp
inc
shll
std
cmp
adc
lret
arpl
es
popf
gs
mov
jno
jbe
jno
icebp
aaa
pop
js
xor
loop
dec
add
scas
frstor
inc
aad
ljmp
jg
clc
ret
in
ss
movsb
ds
dec
mov
mov
xchg
dec
xor
mov
lock
in
pushf
and
ror
in
fstps
sub
and
call
imul
and
inc
loopne
pop
in
xor
aaa
xor
std
xlat
pop
gs
in
pmaxsw
inc
jl
push
aaa
clc
jg
icebp
adc
push
mov
pop
xchg
mov
out
jo
mov
cmovbe
push
sti
ret
jmp
ja
cmp
aas
xor
mov
xchg
movsb
pop
nop
mov
hlt
xor
das
fidivs
xchg
lds
clc
push
mov
hlt
in
sub
mov
cmp
scas
lahf
ja
sbb
mov
movsl
pusha
sbbl
xor
repnz
and
or
mov
mov
xor
xor
inc
mulb
xor
shlb
sub
xchg
mov
push
std
call
dec
push
add
pop
in
fcmove
aam
mov
and
test
jnp
jae
mov
mov
jbe
adc
xor
sarb
push
and
iret
sti
xor
nop
and
pop
mov
mov
or
jg
and
pop
mov
push
dec
xchg
sbbb
not
shrb
sub
add
fcomp
xchg
js
jae
sub
mov
jnp
inc
lcall
sarb
test
xorl
enter
sub
insl
or
cmp
insb
les
dec
clc
enter
ljmp
iret
or
clc
std
jnp
jecxz
xchg
push
rcll
push
pusha
jecxz
xor
adc
sbb
dec
sub
jmp
sarb
ret
mov
idivl
jmp
mov
repnz
cmp
mov
adc
lahf
int3
out
loopne
xor
dec
sbb
inc
adc
cltd
in
divb
enter
mov
cmpsl
push
or
and
jg
outsl
int
mov
cmp
mov
xchg
insl
insl
sbb
mov
or
and
les
mov
sub
orl
sub
inc
jbe
sarb
or
outsl
sub
sbb
and
pop
test
cltd
add
aad
fnstenv
inc
push
xchg
repnz
roll
push
sub
call
inc
push
adc
insl
mov
pop
je
aad
aaa
ljmp
insl
in
xchg
lods
data16
arpl
push
xchg
sarl
mov
pop
push
iret
mov
aaa
into
push
fsubs
stc
lcall
negl
inc
add
jae
data16
mov
sbb
stos
gs
add
rorb
adc
or
mov
jge
mov
fbstp
insl
sbb
inc
and
shll
jne
lret
clc
adc
out
pop
mov
inc
push
mov
mov
outsb
add
das
movsb
mov
mov
mov
cli
ja
mov
call
sub
sbbb
int
xor
negb
mov
xor
mov
cmp
icebp
sub
adc
outsl
daa
addb
daa
mov
sub
es
clc
scas
imul
fcomps
jo
inc
out
lret
rolb
and
fisubrs
jns
or
leave
sbb
pop
mov
loopne
test
subl
lods
ja
shrb
frstor
les
outsb
fnstsw
mov
dec
xor
lods
push
mov
fdivrs
mov
cmpsb
vmread
test
jns
loopne
push
lret
imul
not
fwait
pop
jne
mov
test
aam
mov
popl
jne
negb
push
cli
or
pop
pop
inc
ja
hlt
push
mov
mov
pop
std
je
xor
push
and
pop
pop
xor
cmp
dec
pop
repz
stos
pop
cmp
sbb
lds
add
inc
pop
outsb
mov
icebp
xor
dec
out
push
and
outsl
add
imul
pop
add
jbe
in
inc
and
jecxz
xor
adc
rcrb
jg
jne
fwait
add
aam
pushf
test
push
insl
and
arpl
cli
shr
mov
std
aad
jns
rorl
jb
rolb
int
jmp
push
jb
mov
jp
sbb
mov
and
ja
pushf
xchg
push
jmp
jae
and
xchg
dec
pop
loope
push
and
les
pop
adc
cltd
jecxz
push
push
shll
adc
test
jmp
push
cwtl
call
and
je
repnz
inc
cli
mov
add
add
lods
nop
gs
pop
fisubs
in
cmc
sbb
adc
or
lret
push
add
push
mov
mov
add
mov
jnp
lret
addr16
lock
shl
jne
inc
jecxz
cld
fidivs
test
out
jne
push
je
mov
xchg
mov
mov
fucomi
imul
outsl
sbbb
roll
leave
lods
mulb
xorb
pop
sbb
mov
scas
scas
or
add
xchg
les
adc
pop
push
loop
jbe
mov
out
jnp
in
fimull
mov
test
xchg
push
adc
mov
lea
or
in
xor
jb
fadd
sar
mov
jle
imul
call
sahf
rcll
scas
stc
divb
pop
push
iret
fucom
outsl
and
push
jl
cmp
movsl
shll
fwait
outsb
push
out
mov
mov
sub
sub
fistl
not
jge
sub
call
mov
outsl
lret
sub
cmp
sub
in
movsl
cmp
aaa
pop
daa
gs
dec
shrb
aaa
test
mov
pop
data16
mov
cmpsl
ljmp
push
leave
sub
jns
mov
mov
daa
push
push
lcall
dec
sbb
push
sub
dec
mov
cli
lock
sbb
nop
in
xor
je
pop
mov
jp
dec
faddl
mov
lock
mov
mov
cmp
mov
es
jo
mov
cmpsb
lret
mov
in
loope
mov
jg
jno
jmp
adc
push
inc
xchg
xchg
pop
test
push
test
sbb
out
negl
es
popa
sbb
inc
mov
ljmp
test
mov
jg
jne
lea
mov
jno
push
test
cmpsb
dec
adc
cmp
xchg
mov
ss
dec
push
std
inc
pop
mov
add
or
imul
outsl
lods
mov
scas
inc
mov
repz
adc
mov
xchg
mov
sbb
mov
mov
add
lds
std
mov
aam
and
and
cltd
sarl
std
lcall
mov
adc
xor
in
scas
andb
mov
inc
push
in
pop
stos
movsb
inc
push
fcompl
nop
movsb
xor
cmpl
jae
leave
jmp
cmp
aas
xchg
mov
inc
std
xchg
add
pusha
push
in
jns
pop
mov
test
push
inc
mov
mov
mov
mov
jo
cld
mov
jb
jnp
push
cs
adc
sahf
adc
loopne
fldcw
sbb
iret
or
jecxz
cwtl
lahf
sbb
rep
imul
jmp
mov
cmp
cmp
ret
xor
inc
bound
loope
testl
daa
push
sarb
loope
repz
andl
jg
jecxz
mov
aaa
cmpb
push
inc
in
xchg
and
xor
cli
add
movl
ja
cmpsl
div
into
test
into
jns
outsl
lock
in
pop
aaa
mov
add
iret
jno
mov
sti
add
dec
adc
das
out
and
icebp
dec
and
add
cld
xlat
jge
adc
xor
iret
test
jbe
xor
leave
mov
hlt
or
sahf
out
mov
sbbl
pop
cmpsl
add
adc
lahf
push
repnz
cmp
int3
mov
xchg
push
and
cmp
loop
jo
sub
inc
in
dec
jecxz
data16
loop
mov
pcmpeqw
dec
mov
mov
fnstsw
pop
jae
inc
sbb
vcvttsd2si
nop
cld
jecxz
fmuls
mov
mov
jno
add
sbb
push
push
dec
adc
rolb
xchg
xchg
xor
sbb
jns
daa
push
mov
add
lret
pop
cmc
jb
adc
fisubl
cmc
mov
in
mov
aaa
or
sub
imul
or
pop
sti
inc
cld
mov
mov
negl
cmp
jne
sub
and
icebp
inc
jmp
pusha
fnstcw
repz
ret
inc
sar
test
lds
jmp
insb
arpl
adc
loope
icebp
mov
add
not
les
inc
xchg
dec
mov
repnz
das
dec
loope
fsubrs
iret
push
lahf
call
jmp
scas
and
fwait
cwtl
push
xor
cld
pusha
xor
add
mov
pop
test
int3
loope
xcrypt-cfb
ret
cwtl
shll
xor
xchg
jmp
xor
js
icebp
aam
mov
outsb
dec
lahf
mov
fimull
and
in
and
or
xor
clc
push
cli
adc
jbe
sarl
jns
dec
fiaddl
insb
lcall
mov
insl
add
fcoml
sub
push
xchg
cwtl
sti
loop
sbb
stos
mov
imul
jne
dec
push
jbe
push
xor
xor
lods
xchg
mov
cs
push
in
push
shll
mov
fmull
cmp
mov
add
push
into
and
mov
jg
adc
subb
rcl
inc
push
outsl
inc
fdivrs
mov
clc
xchg
mov
out
xor
decb
sbb
shrl
ficomps
cli
xor
dec
outsb
mov
dec
std
pop
sbb
lds
jecxz
movl
push
cld
sub
push
pop
push
insl
rol
adc
fists
xor
fisttpll
lret
ss
jl
pop
add
add
push
mov
pop
sub
out
jne
push
out
sbb
sbb
js
jne
push
pop
mov
push
popf
push
xchg
rorl
ja
sahf
push
testl
movb
inc
and
popf
dec
daa
xor
inc
dec
rclb
test
addr16
arpl
xchg
jae
sbb
ljmp
mov
daa
pop
cmc
das
cmp
xor
adc
test
aas
aad
ror
sbb
or
push
xor
mov
cmp
in
lds
test
mov
shrb
ja
ljmp
push
lcall
push
stc
sbb
mov
push
ljmp
pop
pop
sub
sbb
xchg
mov
jg
sbb
xchg
cmc
call
fiaddl
cs
cs
mov
in
xchg
mov
fsub
and
add
mov
cmp
mov
sub
cltd
add
test
divl
roll
shll
xchg
ja
push
sub
std
aas
cmpsl
imul
jno
andb
pop
xor
jmp
imul
stc
test
mov
sub
dec
sub
dec
push
mov
cmp
leave
adc
pop
dec
jns
pushf
bnd
xchg
inc
cmp
xor
sahf
nop
test
dec
inc
cmpl
adc
mov
jb
xchg
jp
pop
roll
push
push
adc
mov
pop
and
sub
fadd
mov
mov
push
lods
vprotd
xlat
and
mov
addl
int
aas
push
push
jb
pop
fcomps
je
lcall
push
or
repnz
insl
outsb
in
iret
in
dec
rcrl
mov
sahf
and
jns
and
mov
pop
sub
adc
mov
lret
inc
push
inc
xor
daa
in
mov
jecxz
stc
and
cld
mov
test
std
fidivl
xchg
mov
orb
add
dec
xor
clc
outsl
popa
test
dec
dec
std
aaa
push
lcall
inc
pop
inc
in
clc
int
stc
dec
mov
gs
stos
inc
sub
or
mov
insb
lea
cmp
std
mov
mov
jg
divb
mov
push
lock
jecxz
push
and
xor
fidivl
or
adc
mov
stos
inc
sbb
aas
cltd
fmuls
cmp
sbb
popf
pop
xchg
xchg
repz
jmp
pusha
jmp
addr16
adc
lcall
jg
ljmp
sbb
adc
vmovlpd
int3
adc
xchg
xchg
or
xor
das
pop
jbe
loop
fimull
cmpsb
mov
repz
mov
cmp
lret
iret
ja
sub
mov
sbb
test
and
in
popa
dec
and
xchg
fcoms
mov
mov
xor
addr16
mov
popa
shlb
mov
test
cltd
inc
rolb
adc
fildll
insl
push
push
stos
nop
xchg
fldcw
ljmp
jne
cwtl
mov
xor
leave
lcall
adc
push
jb
or
iret
push
adc
aam
sarb
or
mov
and
jns
push
jmp
lret
push
adc
jl
dec
mov
jle
push
push
jle
push
mov
cmc
movsb
or
popf
sbb
mov
aaa
mov
xor
jp
sub
pop
add
shrb
aam
mov
and
mov
mov
jae
mov
bound
jp
mov
stos
test
pop
subb
outsl
pop
pop
loopne
mov
mov
xor
mov
movsb
cs
mov
add
jg
movsb
push
xchg
inc
pop
jmp
jge
sbb
xchg
inc
sub
pop
push
sti
and
popa
movsl
mov
add
je
adcl
lcall
out
add
insl
cltd
adc
sub
lods
loop
mov
xchg
or
pop
lea
loop
jmp
push
hlt
xchg
lret
test
ret
jmp
add
test
sbbl
push
push
xor
ret
mov
mov
jbe
mov
ljmp
clc
xorl
arpl
mov
stos
shll
mov
movsl
test
in
out
mov
fldl2t
mov
mov
cmpsb
xchg
clc
dec
imul
mov
lahf
int
inc
or
adc
push
ficomps
xor
orl
gs
dec
mov
inc
repnz
gs
call
inc
and
pop
mov
in
or
js,pn
sbb
xchg
arpl
push
xchg
sbb
push
pop
sbb
imul
lock
arpl
inc
cltd
insb
jno
xchg
std
sub
jmp
cmp
cltd
lcall
gs
xor
push
dec
and
and
lsl
hlt
jns
xchg
add
in
loop
jmp
dec
adc
cmpsb
adcl
jns
testl
movsb
cmpsb
dec
pop
lret
add
test
mov
fisttps
add
mov
dec
sub
jmp
cmp
inc
sbb
mov
adc
jbe
mov
push
aaa
xor
xor
clc
cmp
int3
gs
cmovno
inc
adc
jmp
ficoml
mov
movsl
push
xor
leave
out
movsl
fdivrl
jb
mov
mov
push
xacquire
loopne
or
jmp
pop
mov
inc
or
or
icebp
insl
cmpsl
fcom
mov
aaa
push
repz
mov
and
lahf
sub
popf
insl
mov
enter
imul
aaa
mov
mov
popf
sbb
jo
dec
or
sub
inc
jp
imul
mov
dec
pop
icebp
in
mov
lahf
stos
jbe
jae
mov
sti
stc
addr16
scas
mov
mov
mov
ljmp
xchg
ljmp
or
xor
adc
xchg
mov
push
imull
out
daa
je
test
out
ss
cwtl
lea
addr16
in
dec
les
pop
stc
pop
mov
jno
das
xchg
pop
into
adc
inc
pop
jae
add
push
or
sahf
mov
aaa
xor
divl
testl
push
or
pop
push
jp
hlt
jmp
pop
testl
aaa
repz
jp
scas
sub
adc
sbb
lods
xchg
lret
xor
aas
xchg
xchg
dec
lock
pop
clc
xor
icebp
cli
out
cmpsb
fsubrl
push
addr16
xor
cli
push
mov
in
enter
mov
inc
inc
and
cltd
out
fs
or
xchg
movsl
push
mov
mov
movsl
jecxz
gs
mov
inc
push
pop
sub
mov
xor
dec
sub
nop
test
dec
movsl
xchg
push
add
or
mov
enter
std
push
xor
push
adcb
mov
sub
cwtl
fwait
repnz
cmp
cli
xchg
clc
push
pop
in
push
fadd
pop
inc
mov
icebp
mov
test
mov
out
sub
sbb
stos
decb
pop
push
das
xlat
jne
and
push
mov
mov
fdivrp
cwtl
sub
add
jg
sbb
mov
fcmove
and
adc
xchg
jbe
rolb
mov
int3
andl
add
jg
sbb
movsl
add
ljmp
into
fidivs
hlt
adc
les
push
or
pop
xchg
stos
loope
push
and
pop
push
outsb
mov
fdivr
inc
cmp
iret
adc
jns
inc
js
cs
jae
iret
jle
loop
out
or
gs
gs
or
push
xor
cld
nop
mov
int3
daa
sub
jmp
sub
adc
sbb
add
mov
inc
push
stc
fisubrs
fld
xor
mov
xor
jp
sub
sbb
inc
bound
cmp
add
js
arpl
sub
sub
xor
int3
sbb
cvtps2pd
mov
add
mov
cld
arpl
outsl
in
fcoms
cmp
jbe
xor
cs
sbb
xor
aaa
stc
aaa
sub
jno
mov
movsl
mov
pop
mov
sbb
xchg
lods
xor
pusha
push
push
add
jae
data16
or
fld
xor
jmp
fstpl
test
cld
stos
mov
or
in
jbe
nop
outsb
imul
adc
lcall
cwtl
shrb
aas
add
jae
sbb
int
negb
adc
and
lea
andps
mov
mov
orps
movsb
addb
cli
dec
mov
push
mov
aaa
cmp
cmpsl
imul
push
adc
stc
mov
mov
mov
xchg
jns
dec
pop
sub
out
jmp
inc
js
lret
jmp
add
push
dec
cmpsb
push
sub
das
sti
xchg
mov
dec
add
push
out
insl
mov
loop
sarl
push
ficomps
jnp
jo
test
xor
pop
xchg
or
addr16
or
nop
fsubrl
shlb
scas
imul
int3
jge
mov
insb
or
adc
daa
mov
push
cmc
push
push
or
pusha
out
addr16
and
push
call
daa
stc
add
add
sti
ds
in
push
das
leave
adc
pop
or
dec
pop
je
cmp
sub
out
loopne
cmpb
call
xchg
jl
test
sub
inc
andb
test
loop
lea
icebp
mov
dec
inc
sti
icebp
lcall
into
mov
mov
and
outsb
icebp
add
xor
or
in
stos
sarl
cmp
fisubrl
inc
xor
xchg
insb
and
add
fwait
mov
jo
mov
mov
out
mov
mov
and
push
mov
sbb
dec
pop
push
roll
arpl
fsubs
pop
outsb
jp
inc
sbb
add
xchg
lods
adc
lea
mov
sarl
mov
jecxz
ret
cmc
rcrl
mov
inc
xchg
aam
inc
subb
clc
cmpsl
push
jb
cmp
inc
mov
aad
stos
xchg
jne
pop
repnz
mov
sarl
push
pusha
and
and
mov
movsl
lods
xchg
sbb
or
aad
cmpsb
mov
push
stc
sub
add
sub
pop
push
adc
mov
outsb
testb
into
cli
mov
aad
insl
popa
fmull
lret
jecxz
and
outsb
pop
fucom
jecxz
mov
and
daa
andb
add
popa
test
out
aam
cmpsb
outsl
or
and
and
repnz
imul
fcomps
xchg
je
pop
icebp
xchg
icebp
fs
pusha
xor
cmp
cmp
jle
sub
push
shl
pop
push
clc
in
mov
popf
lcall
jecxz
mov
pop
push
stos
mov
cwtl
or
mov
mov
push
inc
push
mov
and
iret
push
xchg
ja
das
inc
pusha
int3
addr16
push
clc
ja
dec
push
std
xchg
inc
push
adc
lds
lret
in
movl
rcl
outsl
loope
mov
mov
adc
pop
popa
jb
sbb
mov
cmp
jbe
test
or
lea
arpl
push
movsb
adc
push
cld
inc
aaa
outsb
nop
roll
inc
es
jb
aam
outsb
jmp
adc
mov
pop
int3
and
dec
jl
out
fwait
arpl
movsbl
mov
push
cli
inc
lock
and
jp
rcr
dec
adc
stos
cld
pop
movsb
out
sub
ret
adc
iret
xchg
cwtl
cmpsl
clc
jg
insl
cmp
loop
test
pop
adc
sub
mov
mov
cmpsb
ficomps
xchg
cmp
test
add
jbe
repz
sar
inc
and
mov
inc
cmp
les
fucomip
cmp
cmpsb
adc
in
les
adc
xor
and
pop
shrl
cmp
xchg
jl
lret
movsb
adc
lret
sti
push
lock
scas
add
inc
adc
pop
testl
daa
pop
jl
mov
and
ljmp
push
jne
popf
cltd
mov
jns
ljmp
jne
ss
lds
inc
jp
js
mov
dec
fdivr
jns
imul
fwait
xlat
add
stos
mov
stos
pop
sbb
mov
cmp
lods
fcoml
cmp
shll
lret
lret
cmc
cmpsl
lods
push
pop
scas
call
popa
ficomps
incl
rorb
add
add
cmp
