pusha
sub
movl
push
xchg
pop
or
decl
add
xor
xor
adc
jmp
stos
jo
push
bound
or
sub
adc
mov
out
sbb
adc
push
cltd
pop
movb
jl
and
add
and
sbb
push
lahf
pop
sbb
jmp
dec
jle
fstl
jmp
push
cmc
pop
add
jae
sub
adc
dec
movw
or
and
xor
rcl
jmp
and
lods
dec
push
dec
pop
ror
or
xor
push
dec
pop
and
rcr
add
adc
jmp
push
or
push
xchg
pop
movb
rcl
adc
sbb
js
sbb
xor
rol
sub
push
cld
pop
sub
sbb
jmp
imul
dec
jmp
pop
int
mov
and
rclb
xor
movw
jne
jmp
inc
sub
pop
scas
mov
or
ficoml
pop
and
rcl
movb
and
sbb
sbb
jmp
lods
pop
int3
push
testl
sbb
js
sbb
adc
or
movl
push
inc
pop
xor
sub
and
rcr
xor
sub
or
jmp
adc
push
xchg
pop
jns
add
dec
movl
add
adc
jns
jmp
addr16
cmpsb
jb
cmp
rolb
repz
pop
cmc
stos
xchg
add
add
push
cwtl
pop
sbb
sbb
or
sbb
movl
jmp
xchg
arpl
xlat
jmp
or
lahf
pop
sub
sub
xor
cmpl
jne
sub
mov
jmp
add
add
add
add
ljmp
test
int
sbb
loop
rcrb
shlb
negl
add
dec
or
shlb
imul
jbe
or
xchg
test
mov
cld
sub
mov
loop
sti
or
mov
mov
push
ljmp
or
je
or
mov
in
or
sbb
fwait
ds
loop
arpl
loop
inc
sahf
idivl
sub
loop
leave
sbb
idivl
inc
or
add
div
sbb
scas
enter
or
call
mov
inc
push
pop
sti
dec
loop
adc
xchg
call
push
xchg
stc
stos
loop
sub
push
cld
sbb
mov
and
idivl
sub
mov
ds
loop
ret
sub
xchg
sub
loop
inc
or
sub
pushl
pop
sbb
cmp
sbb
jl
loop
sub
pop
pushl
dec
loop
or
or
call
imul
push
or
fsubrs
inc
shll
or
lock
sbb
add
neg
mov
sub
adc
andl
jmp
imul
sub
add
andl
sub
mov
ljmp
das
test
mov
cmp
imul
sbb
loop
jp
xor
inc
iret
sub
loop
jmp
imul
leave
mov
je
adcl
imul
stos
iret
sbb
sub
mov
je
pop
loope
daa
subl
or
sub
shrl
in
jl
and
je
sub
je
sub
adc
imul
ret
mov
ret
mov
mov
ljmp
sub
rorb
in
jnp
or
ljmp
lds
daa
mov
je
add
and
sbb
mov
cmp
loop
dec
xorl
adc
pop
jl
or
sub
je
mov
xchg
testl
pop
or
sub
popa
aas
sub
in
punpcklwd
das
mov
xchg
testl
pop
or
sub
popa
aas
sub
add
push
mov
jbe
mov
sti
sarb
xchg
or
jl
xor
ljmp
leave
popa
aas
add
es
mov
sti
dec
ss
mov
inc
sub
mov
sub
imul
sub
adc
or
jbe
mov
inc
xor
mov
sub
loop
sub
inc
idivl
sub
loop
sub
pusha
mov
imul
pop
xchg
or
jmp
pop
mov
fwait
or
jmp
dec
loop
ret
xchg
loop
sub
mov
inc
insl
nop
xchg
dec
fs
add
pop
mov
insl
jp
lcall
adcl
or
xchg
dec
jp
lea
loop
dec
jl
lea
fwait
dec
jp
mov
mov
dec
fs
gs
xchg
inc
imul
pushf
pop
popa
lea
pop
jge
mov
js
nop
xchg
inc
outsl
mov
mov
fwait
mov
outsb
lea
inc
data16
inc
imul
dec
lds
fisubrl
enter
sub
loop
add
mov
add
sub
add
filds
add
inc
icebp
add
clc
add
add
add
add
add
adc
add
jne
xor
cmp
je
sub
inc
push
adc
cmc
push
pop
fs
mov
or
mov
xchg
xlat
xchg
inc
fdivrl
lock
add
add
add
add
cmp
dec
popl
ja
jno
xor
push
jmp
ljmp
inc
inc
arpl
aam
loopne
cmc
add
stc
prefetch
or
xorb
and
jg
push
dec
aad
std
nop
pop
adc
repnz
notl
add
inc
aas
jp
add
add
add
add
into
jmp
aaa
and
add
add
add
add
push
or
add
mov
add
cmp
add
das
add
or
add
into
add
test
add
add
add
loope
add
add
add
add
add
in
add
add
add
add
add
add
add
add
or
add
add
add
add
xor
add
adc
add
add
adc
add
add
sub
add
add
mov
push
pop
mov
add
add
mov
add
je
add
xor
add
add
jg
mov
call
add
mov
add
add
add
int
add
xchg
incl
out
add
sub
add
loopne
add
mov
add
popl
add
pushf
adc
add
add
pop
jmp
or
pop
add
jmp
add
add
cmp
daa
add
xchg
out
ret
leave
lock
adc
add
mov
add
push
cli
push
cwtl
ret
mov
xchg
in
xor
inc
hlt
add
mov
pushw
add
cmp
in
stos
adc
push
jne
inc
ljmp
sarb
sbb
ret
push
bound
sbbb
adc
sbb
data16
cltd
ss
inc
add
sarl
pop
push
out
aaa
mov
sbb
mov
mov
stc
mov
sbb
aam
or
out
pop
out
movsb
inc
xchg
inc
mov
lds
std
cwtl
outsb
mov
sahf
cmpsb
add
popa
loope
fdivl
out
cmpsl
push
in
lahf
inc
pop
stc
repnz
xchg
pop
arpl
cs
int3
fldl
xchg
xor
das
mov
cwtl
cs
shll
push
pop
loop
orl
xor
mov
xchg
jnp
ret
cmp
loop
xor
insb
add
inc
jg
pop
or
sbb
push
imul
inc
lods
cli
imul
out
out
jle
jnp
mov
test
jecxz
cmp
sbb
std
insb
inc
movsl
jno
std
cmpb
adc
lahf
xchg
ret
mov
outsl
cmpsb
mov
aam
adc
xchg
mov
mov
jns
push
mov
in
mov
lret
fidivrs
mov
inc
je
stos
pushf
out
dec
mov
aad
daa
mov
ret
es
sahf
stos
jmp
scas
bound
lcall
cmpsb
out
loopne
pop
aam
cmp
adc
adc
aas
sub
adc
inc
in
aas
mov
rcll
pop
pop
in
add
fcoms
bound
das
fwait
das
cmp
inc
aas
pop
mov
add
xor
stos
sbb
testl
xchg
or
push
int3
sbb
dec
shl
fmuls
les
movsl
cld
push
xlat
test
jae
pop
pop
fildll
pop
cmc
jo
cltd
std
scas
mov
mov
and
jmp
dec
jmp
lea
and
fwait
mov
xor
adc
or
push
insb
xchg
cmp
pop
jns
sbb
or
fdivl
leave
test
mov
mov
or
test
or
jg
or
int3
pop
lods
in
cmp
gs
fwait
movsl
xorb
sub
push
mov
jmp
jne
xchg
and
dec
or
cmc
sahf
push
and
or
jl
rclb
mov
inc
mov
mov
or
xlat
shrb
inc
imul
sbb
fsubs
repnz
jne
pop
mov
xchg
mov
sahf
adc
js
xchg
jbe
cltd
int3
and
push
lea
bound
ds
jo
ficomps
and
pop
cmc
jb
add
and
jmp
dec
jmp
lea
and
fwait
mov
sar
pop
or
sbb
int
fnstsw
cmp
pop
xchg
jb
popa
mov
cmpsl
mov
mov
xor
lret
test
mov
mov
or
test
imul
or
inc
jle
pop
lods
in
pop
dec
mov
jge
movsl
xorb
sub
push
sahf
cmp
cmpl
cmp
sub
mov
push
xor
out
jp
dec
orl
xor
xor
fwait
xor
fdivrs
push
js
xchg
aas
and
syscall
sub
aas
insb
pop
pop
cld
and
add
cmp
cmp
or
pop
daa
insb
push
mov
pop
fdivr
lret
andb
int3
or
push
dec
cmp
sbb
xchg
dec
sbbb
and
mov
dec
icebp
or
in
sbb
jge
xor
mov
cmp
inc
sub
inc
pop
in
pop
mov
pop
jae
std
std
xor
jge
mov
cmp
insb
add
mov
xchg
xchg
pop
enter
into
mov
push
add
mov
rolb
ror
pop
mov
sti
xlat
sarb
popf
gs
cltd
aad
sbb
pop
mov
add
cmp
addr16
dec
mov
sub
mov
cli
xchg
xchg
pusha
pop
mov
aam
jecxz
and
in
push
sbb
into
sti
inc
inc
jge
dec
roll
call
mov
pop
mov
ljmp
test
pop
pop
lods
push
mov
push
dec
or
push
cltd
cmpsl
push
mov
mov
cmp
iret
stc
xchg
add
pop
dec
mulb
jg
ja
test
ljmp
das
arpl
sti
sub
push
cmp
xchg
test
xchg
push
xor
addb
dec
scas
mov
pusha
stc
stc
shrl
mov
inc
push
mov
mov
and
mov
das
sub
inc
jle
mov
xlat
int
cmp
lret
mov
cltd
loope
jne
pop
adc
stos
js
push
xchg
shl
inc
test
leave
repnz
lahf
js
lds
es
push
daa
nop
cmp
xor
inc
mov
mov
in
sub
push
rcll
cmp
add
push
imul
mov
fidivrs
scas
push
fwait
icebp
push
sub
rorb
jae
outsl
dec
dec
or
adc
xor
ja
mov
int3
cmp
mulb
imul
lret
loop
xchg
dec
stos
adc
rcl
mov
in
aas
mov
ja
add
xchg
mov
ss
xchg
xchg
mov
jns
sub
pop
bound
fs
adc
pop
mov
sub
add
daa
cmpb
cmpsb
fldl
mov
sub
dec
sub
mov
frstor
cmc
nop
cwtl
les
sub
fwait
js
push
nop
push
push
dec
nop
pop
or
and
mov
ja
jmp
ss
lock
push
sub
or
sub
adc
cmp
mov
in
in
xchg
and
or
repz
ret
cli
and
adc
ficompl
mov
xor
movsb
sub
lods
xor
popa
fidivl
add
out
jno
adc
xchg
dec
stc
or
pop
aad
sbb
mov
adc
and
mov
dec
push
adc
pop
cmp
mov
mov
stc
test
loope
xchg
pop
cwtl
adc
add
push
xorb
jb
cmpb
lock
jno
dec
and
inc
add
insb
faddl
mov
mov
sahf
inc
enter
aaa
cltd
pop
sahf
dec
sub
and
cld
out
inc
aas
mov
xchg
in
pop
cs
data16
repnz
pop
sbb
inc
pushf
mov
and
loope
repnz
and
jl
mov
cmp
lods
pop
call
push
leave
movsb
mov
cmp
nop
fisubs
es
dec
into
inc
inc
pop
xor
sub
ja
and
push
data16
sbb
xor
sti
bound
mov
jge
pop
int
dec
outsl
or
scas
insb
jno
xchg
and
imul
mov
jl
pop
mov
gs
adc
sbb
xchg
jno
push
dec
cmp
outsl
push
cltd
scas
popa
sti
in
pop
mov
ret
xchg
mov
fiadds
mov
in
loopne
inc
shll
leave
jmp
int
ds
inc
sbb
int
aaa
jno
and
int
add
mov
dec
frstor
and
dec
ljmp
loop
jg
push
xchg
sbb
inc
inc
or
dec
jmp
fisubs
mov
cmp
or
push
cmp
rcll
mov
adc
out
inc
leave
orb
mov
dec
inc
xor
or
or
push
xchg
inc
jae
pop
sbb
xor
outsb
pop
fwait
clc
pushf
pop
rolb
add
repz
or
pop
and
hlt
test
aas
jle
shl
pusha
iret
pop
sti
cmp
dec
sbb
rcll
jg
dec
lock
lret
pop
jno
jecxz
xchg
xchg
mov
push
xor
push
mov
mov
lock
ss
mov
shlb
pop
mov
pop
sbbl
sarl
repz
jnp
adc
xchg
mov
adc
xchg
xchg
stos
push
pop
mov
scas
pushf
es
negl
fcmovbe
aaa
and
arpl
xchg
fisubs
mov
cmp
or
push
cmp
rcll
xchg
mov
adc
pop
insb
adc
adc
stc
inc
rorl
cmp
dec
and
fdiv
inc
stos
test
xchg
mov
push
imul
dec
pop
mov
xor
outsb
pop
fwait
clc
pushf
pop
rcrb
cmp
xchg
jp
ds
jbe
xor
cmp
and
clc
stos
cmp
push
jb
mov
mov
inc
cmpsb
outsb
xchg
sbb
sub
daa
repz
ret
xchg
jb
stc
rcl
ss
cmp
into
inc
pop
fidivs
test
push
pop
test
mov
pop
jle
push
push
sub
adc
arpl
fldl
out
outsl
pop
push
jne
les
cmpsb
mov
mov
test
stos
fdivs
nop
add
or
cmpsb
cmp
loopne
addb
push
lcall
repz
xorl
lret
fisubrl
jp
mov
cmp
call
cmpsb
pop
inc
dec
mov
mov
gs
and
pusha
adc
sub
pop
xor
or
sbb
add
sbbl
ss
popa
or
stos
daa
pop
xor
push
xchg
pslld
mov
fmulp
lock
mov
dec
loopne
sbb
in
ss
lock
and
inc
mov
inc
jb
mov
mov
call
ja
jle
mov
std
addl
inc
sbb
dec
xor
xchg
push
xchg
fldenv
xchg
xchg
ljmp
and
es
inc
push
cs
fcmovbe
cmpxchg
fstpl
ljmp
popa
sub
loopne
lods
cmp
mov
mov
mov
outsb
lret
inc
inc
jmp
sub
pop
fnstsw
fldenv
add
cmp
mov
inc
scas
hlt
ss
lcall
insl
add
sbb
inc
fstl
push
inc
scas
ljmp
les
or
lock
add
push
push
jp
push
cmp
mov
pop
nop
cmp
pop
xlat
pop
outsl
lret
in
frstor
inc
jo
fidivl
sub
out
mov
mov
dec
sub
cs
pop
mov
insb
std
adc
push
pushf
sub
mov
dec
mov
les
or
xor
test
int
inc
mov
push
mov
xchg
mov
mov
mov
push
mov
mov
roll
ret
xchg
push
xchg
xor
cmp
insl
sti
mov
cmovbe
rorb
xorb
inc
out
stc
lret
negl
dec
cmpsb
pop
test
inc
lret
iret
dec
cs
cmp
xchg
sub
sbb
push
aam
dec
das
mov
jae
xor
push
sbb
iret
cs
leave
jb
pop
es
fidivl
ljmp
push
arpl
out
push
jmp
pushf
xlat
add
ss
mov
int
jecxz
and
cmp
jb
movsb
cmc
push
xchg
loope
lods
popa
cmp
int
fidivrl
std
imul
decb
jle
dec
daa
xchg
push
cltd
dec
pop
mov
bound
xor
movlps
dec
push
add
js
outsb
push
inc
pop
jo
jo
daa
lock
push
repz
add
pop
std
cmp
daa
and
and
sti
jmp
jmp
pop
ret
mov
dec
adc
movsb
in
mov
mov
push
fnsave
pop
lcall
sbbb
add
movsb
scas
arpl
sbb
cld
hlt
cltd
mov
adc
test
jo
in
iret
xlat
adc
jne
popa
add
sbb
push
adc
or
or
cmpl
dec
mov
in
test
clc
push
inc
out
fdivrl
xor
repnz
mov
push
gs
sbb
fnsave
cs
lcall
popa
int3
mov
jecxz
sti
mov
jne
push
xchg
loopne
mov
data16
jp
sub
out
mov
sbb
fcmovnu
stos
inc
sub
or
sbb
cmp
stc
xchg
ret
adc
jne
lods
push
jbe
js
mov
fsubs
mov
mov
test
stc
adc
push
bound
ja
and
add
dec
mov
enter
xchg
mov
addr16
xor
xor
orb
cmp
jne
cli
xor
push
cmp
and
mov
xor
dec
mov
mov
popa
cmp
nop
pop
pop
fs
shlb
fnstcw
rcll
inc
je
sbb
loope
jne
cwtl
data16
stc
sbb
out
lahf
mov
inc
lods
and
inc
sbb
je
xchg
and
jmp
add
cmp
inc
clc
mov
das
jmp
imul
xchg
dec
sub
popa
repz
repnz
outsb
push
dec
pusha
subb
push
das
inc
jp
andl
or
and
adc
movsb
sbb
jmp
sub
jnp
fmull
sub
fsubs
add
fsubrp
adc
cli
popf
cmp
mov
adc
pop
jne
dec
test
mov
push
or
daa
push
sbb
cmp
sub
push
shll
xchg
pop
xchg
adc
cltd
xchg
xor
inc
mov
repz
stc
stos
out
mov
in
push
or
pushf
pop
stc
stos
bound
xchg
scas
loopne
mov
or
sbb
popf
mov
and
add
out
or
int3
mov
popa
inc
push
pop
dec
inc
pop
in
add
adc
in
cmp
addr16
push
cmp
or
mov
shlb
aaa
aaa
lock
stos
pop
call
and
push
fs
pop
cli
aas
xlat
xor
popa
int3
cmp
lret
and
xor
pop
cmp
es
dec
sbb
ja
sbb
mov
mov
rcrl
sub
aas
sub
sub
pop
lock
shll
mov
hlt
in
cli
add
cmp
sarb
jecxz
icebp
pop
xchg
dec
push
enter
inc
add
call
ret
pop
inc
pop
mov
idivl
dec
repnz
lret
bswap
std
mov
bsf
scas
add
inc
movsl
cmp
add
xor
fidivrs
pop
cmp
dec
inc
les
movsb
adc
pop
cld
adc
xchg
movsl
loop
inc
add
pop
push
jae
sbb
outsb
pusha
mov
adc
push
mov
imul
flds
xchg
in
inc
or
inc
arpl
xor
mov
xor
add
jnp
mov
jmp
add
negb
movsl
mov
push
outsb
hlt
gs
and
loop
leave
and
jecxz
shlb
stos
mov
arpl
jmp
push
stos
pop
repnz
inc
adc
xchg
test
cmp
and
sbb
shr
fildl
jb
sbb
dec
hlt
xchg
sarb
lret
dec
pop
dec
inc
pop
ds
or
movsb
sub
inc
in
adc
lea
push
rclb
dec
xchg
xchg
leave
cli
lods
testb
adc
mov
jne
inc
cmpsl
repnz
xor
mov
or
data16
or
pop
iret
or
sbb
rcr
fcomps
mov
dec
ljmp
in
sti
int3
fisttpl
mov
hlt
xchg
clc
out
jbe
adc
fidivl
xlat
fstpl
mov
inc
cmp
test
shr
push
in
sub
fadd
or
sbb
test
mov
aam
rorb
dec
dec
lds
cmp
xchg
sub
aam
and
sub
cmc
mov
lahf
fmul
ds
je
xor
shll
je
mov
scas
scas
inc
cmpsl
or
nop
stc
js
pushf
xchg
lea
jle
cmp
mov
sub
and
inc
pop
sub
aas
add
rclb
mov
aaa
dec
xchg
mov
pop
aam
clc
inc
neg
jecxz
or
stos
hlt
lds
mov
jmp
sub
rcrb
in
ret
popf
add
movsb
mov
add
push
rcll
daa
pop
adc
clc
in
jl
xor
sub
dec
mov
lahf
out
fadds
xchg
or
push
adc
aaa
jae
and
cltd
pusha
popa
xor
sti
push
call
cs
in
push
shlb
inc
cmpsb
mov
jle
cmp
ljmp
mov
or
loop
inc
xchg
sub
ljmp
out
loop
fmul
cmp
insb
test
pop
jg
popl
mov
inc
fistpll
in
outsl
push
aaa
cmc
jns
rcrl
jge
mov
mov
xor
mov
xor
push
jg
fs
repnz
lods
jae
jge
mov
pop
and
sub
loop
movsl
shlb
hlt
test
or
imul
adc
jge
mov
dec
mov
or
js
adc
and
dec
mov
push
xchg
out
pop
push
or
sarl
hlt
dec
and
dec
popf
sub
ja
js
sbb
xor
pop
adc
call
adc
sbb
pop
jne
subl
hlt
xchg
dec
rcrl
stos
and
fwait
mov
ja
xchg
mov
fldcw
push
mov
ljmp
stc
stos
xlat
mov
enter
stos
in
xchg
mov
push
sahf
outsl
xor
aaa
and
xlat
inc
cmpl
pop
in
ret
dec
push
fcoml
cli
cmpsb
xor
or
jne
xchg
fdivrl
shl
scas
mov
xchg
pop
push
out
ret
adc
sub
xor
fwait
cmp
nop
cmp
cwtl
mov
jnp
push
data16
fmull
sarb
rcrb
inc
jnp
das
mov
lahf
testb
loopne
adc
shl
and
push
sub
adc
lock
mov
xor
lds
loopne
push
bnd
mov
fnstsw
adc
aaa
pop
movsb
jp
dec
cmpsl
sti
push
cli
or
pop
cmc
outsl
or
add
and
dec
clc
test
clc
std
xor
lods
mov
in
push
mov
fbstp
mov
ja
adc
xchg
insl
aaa
out
adc
jmp
jp
das
pushf
xor
xor
dec
pop
dec
mov
out
sbb
pop
sub
mov
and
push
and
sti
stc
ljmp
push
ja
out
ja
lahf
pop
lods
mov
fwait
ret
xor
jno
cmp
pop
and
iret
xchg
aaa
jnp
jae
add
icebp
adc
enter
pop
lret
sub
iret
cmp
ficoms
push
lds
push
adc
dec
mov
sub
pop
pop
push
push
das
mov
xchg
aam
jo
jecxz
push
xchg
sub
dec
sti
fisubrs
xor
xor
mov
addr16
stos
shr
in
outsl
popf
push
stos
test
or
out
cltd
mov
jne
repz
hlt
repz
imul
cld
jg
xchg
jmp
sbb
shlb
xchg
cmp
aas
loope
ret
adc
pusha
xlat
pop
xchg
dec
mov
sbb
adc
dec
iret
add
pop
push
insb
and
ljmp
subb
lahf
adc
cmp
mov
mov
stos
jae
push
lret
leave
jnp
mov
push
jb
aaa
xor
or
mov
mov
xchg
and
pop
lock
and
lret
sbb
dec
std
dec
cmp
mov
fstps
incl
push
ja
inc
xchg
nop
std
inc
sub
and
or
xor
xchg
mov
mov
jne
and
pop
in
sub
and
cmp
scas
fidivs
dec
test
ret
jecxz
in
jge
push
jae
jecxz
cmpsb
mov
sbb
mov
les
sub
inc
mov
lock
xor
sub
arpl
or
sbb
xchg
je
ficoml
lds
jae,pn
sbb
fcomi
data16
mov
add
nop
push
mov
jg
sti
stos
lret
xchg
mulb
pop
sub
test
push
pop
fisttpl
lock
xchg
pop
mov
mov
mov
inc
jno
and
xchg
mov
insl
out
call
adc
push
in
lret
rcrl
fsts
jo
mov
jae
xor
sbb
repnz
addl
xchg
shl
fs
push
adc
mov
cmp
hlt
xor
mov
int3
sbb
aad
sbb
ret
fwait
push
loope
das
sbb
mov
xor
xchg
adcb
fwait
pop
sarl
xor
or
aas
fwait
in
andb
sar
sbb
in
das
insb
leave
aas
fcmovbe
push
push
add
jno
aas
imulb
mov
jne
fsubs
add
insl
pushf
rcll
cs
add
mov
xchg
in
mov
psrlq
cli
sbb
dec
gs
add
xlat
push
mov
rol
lea
jnp
data16
js
push
cltd
xchg
mov
pop
sbbb
xor
push
es
xor
imul
cmp
addl
sub
scas
adc
stos
xchg
arpl
and
xchg
mov
test
mov
repnz
mov
test
add
imul
das
mov
fnstcw
lods
loop
shlb
pop
in
leave
popf
fwait
sbb
dec
repz
push
lahf
fs
push
adc
int3
push
xor
add
pop
mov
mull
stos
mov
shll
dec
cmp
and
xchg
pop
call
push
jl
lock
cmp
push
mov
vpsllw
dec
mov
pushf
push
cmpsb
lret
push
imul
test
xor
push
push
mov
sbb
rcrb
inc
lock
fmull
aam
repz
xchg
mov
out
pop
les
jno
mov
mov
repnz
jb
sub
mov
ret
jl
sarb
sub
dec
inc
fbld
rcrb
or
outsb
aaa
inc
mov
int
adc
inc
popf
aam
and
mov
cmpsb
jne
push
fisubs
sub
mov
sbb
ds
daa
test
pop
es
inc
sbb
lret
add
jmp
nop
dec
xor
js
sbb
ret
in
cmp
test
xor
xchg
insb
clc
loopne
and
mov
in
jnp
int3
shrb
outsb
push
push
xchg
mov
rorb
inc
movsl
mov
nop
pop
adc
shrl
hlt
pop
je
pop
in
call
fistps
sub
adcl
imul
fsubs
jge
sti
cmpl
pop
daa
movb
mov
sbb
cltd
lods
xchg
mov
push
cs
ja
push
lret
push
mov
sub
fistpll
cmp
movsl
outsb
pop
lret
mov
inc
dec
pop
mov
ljmp
cmp
testb
xor
sub
push
sbb
movsb
lods
int3
jns
daa
mov
jnp
test
repnz
fisubrl
cmp
stos
sub
lahf
push
scas
andb
mov
inc
mov
ljmp
stos
xchg
jno
imul
outsl
sbb
jle
lret
cmp
nop
dec
xor
cmc
into
cmpsl
mov
lea
mov
in
andb
mov
mov
int3
fisubrl
call
rorb
adc
adc
push
xchg
inc
mov
pop
or
cwtl
jmp
sahf
fisubrs
addl
add
add
stos
ffreep
dec
pop
sbb
mov
pop
adc
or
ret
inc
aam
sub
mov
mov
xchg
xor
out
imul
outsl
push
ds
ljmp
in
insb
mov
mov
push
sar
ja
dec
pop
mov
mov
loope
xor
divl
loop
bound
pop
mov
or
movsl
jp
test
movl
movsb
je
mov
or
lcall
inc
js
xchg
pop
aam
and
fistpl
cmp
test
adc
rcrb
inc
inc
out
mov
ljmp
fwait
push
jae
push
inc
addl
sbb
adc
inc
pop
gs
test
lcall
fs
fimuls
add
insl
incb
mov
sub
or
add
lods
fdivrl
fmull
cmp
xor
lahf
sub
fmul
mov
lahf
les
xor
cli
ss
and
xchg
pushf
xchg
mov
out
mov
sbb
pop
push
mov
adc
cmpsl
cmpsl
mov
ds
popa
sahf
pop
sar
xor
push
cmp
fdivl
xor
and
fcompl
mov
jge
js
pop
xor
sti
or
pop
mov
add
pop
or
cmpl
jp
mov
insl
stos
pushf
pop
pop
imul
ret
pop
movsl
roll
aad
fcmove
and
arpl
dec
ss
test
xchg
or
adc
mov
fists
mov
sahf
xor
loopne
addl
in
inc
arpl
faddl
mov
stc
push
push
sub
sub
and
stos
jo
dec
mov
aas
mov
dec
and
cmpsb
test
xor
imul
cs
loop
lock
lahf
mov
push
idiv
inc
pop
xor
cmpb
mov
out
xor
faddl
xchg
dec
pop
mov
jo
push
clc
xor
ret
xchg
fdivl
jno
int
hlt
loope
jg
imul
out
mov
add
les
adc
pop
sub
cmp
mov
addr16
lods
sbb
inc
test
pop
mov
dec
push
inc
cs
cmp
inc
sti
or
mov
add
repz
scas
mov
xchg
add
pushf
shll
enter
out
lret
mov
mov
or
jg
push
ret
push
subl
xlat
xchg
sti
sbb
push
dec
roll
and
out
add
ljmp
leave
mov
and
aam
outsb
fimull
cwtl
jo
push
outsb
dec
ljmp
shl
cmp
movsb
popa
scas
xchg
mov
rorb
ss
std
outsl
mov
dec
xchg
jg
add
push
mov
jp
mov
lret
insb
adc
cmp
sub
into
xor
out
in
and
out
mov
sti
adc
clc
addr16
dec
cli
cmp
xchg
stos
add
ret
mov
and
mov
push
int3
cmpsl
sub
adc
bswap
adc
into
push
aaa
aad
faddl
andl
push
lock
out
pop
push
mov
add
sbb
mov
add
lret
popa
andb
push
xor
dec
and
ds
neg
outsb
fwait
mov
push
jecxz
js
mov
mov
ds
pop
inc
arpl
xor
jmp
mov
cltd
mov
ss
pop
and
jle
ret
adc
mov
push
pushf
arpl
jle
sarl
mov
pop
shlb
xchg
call
fldt
pop
das
cmpb
int
outsl
flds
sbb
dec
push
mov
iret
jnp
and
aaa
pusha
mov
jle
fistpl
imul
ja
sbb
gs
mov
cltd
mov
andb
hlt
aas
into
adc
sbb
adc
fmuls
adc
stc
bnd
in
push
iret
movb
clc
pop
or
mov
xchg
xor
mov
sub
insb
fcomip
xor
xchg
or
loop
jge
dec
cltd
in
loop
jns
jb
adc
aam
add
mov
gs
push
mov
mov
into
xchg
insl
mov
mov
decl
or
stos
enter
inc
fnsave
test
push
arpl
or
dec
inc
jae
pop
comiss
aad
lret
scas
or
cmp
nop
jnp
cltd
outsl
das
or
jne
imul
stos
enter
aas
xchg
loopne
mov
fs
mov
jmp
jne
inc
fisubrl
xor
mov
xchg
mov
pop
and
fidivs
fs
sub
mov
idivl
repnz
pop
jecxz
mov
and
mov
sub
cmc
lret
fstpt
pop
in
test
cmpsl
adc
sub
xchg
call
xchg
scas
aad
fld
xchg
out
push
outsl
push
addr16
pop
sub
push
sbb
sub
jne
inc
stc
and
sub
xor
cmpb
fmul
jg
add
fnstsw
push
adc
mov
jecxz
lcall
fsqrt
xchg
adc
jecxz
xor
adc
pop
push
cld
outsb
iret
or
lock
xchg
add
mov
jnp
pop
or
int
cmpl
out
pop
jae
jo
xchg
xchg
out
scas
popf
pop
push
mov
mov
jo
lods
data16
jae
pop
call
std
jg
test
lea
sub
adc
out
sar
addl
or
push
dec
lods
jge
rorb
outsb
cmc
push
pop
enter
adc
jno
js
repnz
int3
lea
push
xor
outsl
mov
xor
mov
mov
jo
repz
ret
ret
and
add
lret
pushl
or
xchg
fsubrl
cwtl
jno
addr16
rcrl
lret
cmp
sub
imull
mov
stos
sbb
mov
pop
push
dec
inc
int3
dec
add
mov
push
pop
movsl
push
les
insl
cld
aaa
inc
xor
push
dec
ret
adc
cli
fsts
xchg
nop
inc
jge
or
in
xor
ljmp
inc
sahf
and
insb
xchg
ret
in
sbb
cmp
xor
imul
out
test
pop
mov
ss
inc
sbb
in
shl
adc
addb
movsb
mov
cmp
cmp
xchg
sub
inc
test
in
data16
push
pop
xchg
pop
jge
addl
jo
int
sahf
sbb
ja
inc
mov
sahf
int3
lds
repnz
iret
hlt
in
xchg
cwtl
pushf
dec
adc
pop
push
sti
cmova
andl
cmp
fsubr
lret
stos
aaa
sub
mov
pusha
ds
je
push
fucomp
ret
cmp
push
push
mov
mov
sbb
push
ftst
push
cwtl
fs
jbe
xchg
jne
mov
jns
rcrl
push
push
xchg
add
out
ja
sahf
hlt
mov
mov
testl
sub
sub
mov
push
imull
scas
xchg
scas
std
jae
mov
pop
jmp
les
in
test
mov
stc
cs
mov
jnp
data16
jge
sahf
outsl
inc
or
rorl
xchg
mov
cmpsl
jae
xor
jne
mov
pop
ret
mov
insl
mov
pop
sbb
inc
aas
bound
dec
rol
xchg
mov
pop
outsb
mov
cmp
push
js
aam
adc
arpl
js
testb
cld
imul
dec
xchg
mov
mov
pop
and
dec
mov
imulb
cltd
push
jne
inc
push
or
nop
cwtl
sub
mov
dec
cmpsl
push
jecxz
xor
incb
std
pop
jp
push
inc
pop
cmp
sar
cmp
xor
inc
push
cmp
sqrtps
ljmp
in
push
inc
fs
jmp
or
cmp
shrb
ret
xor
pop
jmp
movb
jbe
xor
xchg
pop
std
add
jns
xchg
lods
les
or
sbb
dec
push
aam
mov
or
mov
rorl
cltd
sbb
js
pop
inc
push
xor
pop
jmp
cmp
int3
jnp
movsb
push
pop
jmp
ja
mov
mov
pop
clc
sbb
or
ja
cmp
adc
cmc
add
dec
je
jge
shll
lcall
out
xchg
adc
sub
repz
sahf
repz
aam
jnp
sahf
push
cwtl
dec
jge
and
mov
cmpsb
sub
cmp
adc
add
int
lahf
sbb
lret
std
bound
shl
jne
lds
cmp
sub
xor
jae
fwait
rolb
or
rcrb
jle
hlt
mov
jbe
sub
xor
add
cltd
push
cmc
push
sbb
xlat
push
addb
mov
xchg
inc
cltd
rcll
inc
repnz
sbb
pop
pop
mov
data16
repnz
xchg
inc
sti
inc
and
daa
int3
arpl
jge
leave
repnz
dec
setge
jmp
pop
push
adc
stos
cmpsl
add
iret
jge
mov
inc
in
stc
ds
inc
ret
mov
nop
lret
mov
out
fcoml
push
mov
xor
inc
test
cmpsb
mov
lea
push
jg
jne
loop
cltd
or
loope
mov
pop
adc
test
nop
xchg
out
scas
sbb
sub
out
and
pop
or
pop
or
in
mul
and
fmul
push
das
add
inc
inc
and
fisttpll
das
and
xor
cmp
notl
repz
xor
es
sub
fs
mov
mov
xchg
clc
jb
xchg
jge
cs
inc
or
adc
sub
xchg
xor
sub
ret
loop
mov
add
out
pop
int
in
gs
sahf
mov
adc
jge
xor
push
pop
mov
repnz
mov
adc
mov
dec
mov
ficoms
popl
adc
das
fsin
mov
stos
outsb
dec
adc
cmp
js
stc
out
test
incb
mov
imul
mov
fwait
loope
cmc
ficompl
lcall
fstl
js
cs
add
mov
fwait
dec
adc
xchg
pop
loope
inc
lcall
iret
and
push
or
fstps
in
xor
clc
out
outsl
cmp
pop
xlat
imul
dec
test
pop
dec
sub
push
cwtl
popa
subl
pop
mov
push
cmp
mov
mov
sbb
stos
xlat
nop
xchg
push
lret
jle
adc
jmp
das
das
jno
inc
push
sub
daa
movb
jno
jmp
ljmp
adc
add
ret
sbb
and
pop
jnp
mov
xchg
aam
bswap
add
test
jmp
add
push
push
jl
push
fmuls
sbb
cwtl
pop
add
mov
fwait
push
imul
scas
mov
mov
loop
cld
pop
push
xlat
aaa
loope
mov
fwait
xchg
jo
lds
cwtl
mov
out
xor
or
rclb
int3
jnp
xchg
imul
fisttpll
adc
inc
lock
ljmp
test
sub
pushf
jae
dec
pop
pop
mov
and
or
loop
inc
test
xlat
or
in
mov
inc
ss
aas
retw
mov
pop
mov
push
dec
in
adc
xchg
jae
pop
inc
dec
ds
or
xor
std
mov
xchg
jne
xchg
mov
ljmp
cli
sub
pop
xchg
dec
adc
nop
ret
shll
push
jno
jg
jno
js
lods
aam
mov
ror
scas
jg
or
insb
pop
mov
arpl
jge
push
aam
mov
or
pop
adc
ficompl
mov
pop
js
ficoms
pop
and
push
cwtl
in
mov
sbb
lods
lahf
stos
pop
xor
sti
ljmp
or
lret
int3
shll
inc
insb
push
scas
lret
mov
push
mov
stos
mov
cmp
sub
xchg
test
movsl
jp
mov
addr16
iret
dec
inc
cs
dec
repnz
fnstsw
ja
flds
jnp
ficompl
jno
jno
sub
int
cli
pusha
cmp
fucomp
sub
pop
jb
sbb
or
jp
rcrl
cmp
jnp
push
xchg
mov
cs
aam
dec
inc
xchg
ds
aad
xchg
scas
cwtl
jp
cmp
cmpsb
icebp
outsl
rorl
leave
negb
push
scas
sub
cs
mov
imul
fimuls
mov
lret
mull
xchg
pop
insb
into
adc
roll
sbb
je
call
sub
outsl
mov
outsl
push
shrl
adcb
push
push
jl
aam
jge
push
addr16
cmpsl
pusha
and
out
hlt
sti
repz
jecxz
xor
imul
int3
stc
faddl
jle
imul
and
inc
shr
cwtl
arpl
cs
shll
cmpsb
jmp
leave
pop
aam
mov
mov
xchg
cs
dec
cs
xor
inc
xor
sti
xchg
dec
cmp
pushw
mov
ja
scas
jmp
xor
fwait
popf
fstp
fstl
aam
fadd
mov
iret
jmp
sub
push
cli
xchg
sub
push
xchg
push
or
leave
and
leave
pop
enter
and
xchg
inc
daa
sub
test
aaa
xchg
jnp
add
popf
aad
push
outsb
clc
pushf
jle
pop
movsb
mov
pop
adc
hlt
add
std
jmp
ficomps
mov
pop
push
inc
mov
imul
xchg
mov
sub
pop
adc
and
pop
push
mov
outsb
imul
dec
ja
inc
mov
xchg
int3
push
rcrl
dec
or
je
or
sbb
std
inc
loope
xor
push
pop
shl
cmpsl
test
in
mov
sbb
and
sbb
push
int3
inc
popa
push
enter
mov
je
jmp
xorl
test
pop
push
adc
adc
pop
repnz
jbe
fistl
jle
stc
roll
mov
or
add
adc
mov
push
mov
or
xor
icebp
outsb
xor
mov
ss
adc
cmpsl
shlb
cmp
movsb
jno
pmullw
cwtl
pop
add
shrb
mov
scas
pushl
out
sbb
xchg
add
pop
pop
fs
xor
dec
cmp
sub
divb
jg
dec
xchg
mov
xor
mov
and
mov
inc
sbb
jb
push
lcall
add
ror
xor
rcr
cmp
push
xor
mov
ret
movsb
sbb
cmp
shrb
lea
push
add
mov
add
push
xchg
aaa
push
scas
in
lods
xor
fildl
ja
push
cs
inc
lcall
jl
jg
enter
stos
pop
xchg
xor
cmp
movsb
scas
ja
mov
aas
cs
adc
xor
lock
jns
cld
outsl
nop
adc
lods
and
push
movsb
pusha
pop
adc
pop
into
or
cltd
cmpsl
inc
sub
and
ljmp
divl
mov
jnp
xchg
ds
add
test
lea
iret
jo
data16
inc
clc
adc
xor
pushf
in
pop
lahf
shlb
pop
or
std
mov
push
popf
jbe
test
outsl
sub
dec
lahf
mov
and
pop
fstps
cmp
data16
filds
out
mov
cs
loope
mov
orb
cli
fsubrp
pop
call
rorb
test
lods
lea
sbb
addr16
or
sbb
push
scas
cld
push
xor
mov
sbb
dec
inc
xor
dec
xor
pop
and
add
mov
or
sub
popa
ljmp
mov
lret
xor
mov
adc
add
mov
dec
push
addr16
xchg
sbb
inc
ret
sahf
jp
nop
xor
xchg
icebp
imul
sbb
mov
fcmovnb
inc
cmp
cmpsl
popa
jns
jge
mov
xchg
mov
out
mov
sbb
ret
lods
push
test
mov
loope
dec
mov
inc
mov
fmuls
sti
jp
add
inc
int3
add
push
pop
rcr
cmc
push
and
in
cmp
mov
pushf
push
jne
push
push
in
in
sti
loop
xor
xchg
lcall
fisubrl
aam
aas
mov
sub
jecxz
adc
fwait
inc
into
test
pushf
inc
sbb
jp
testl
stos
lcall
in
dec
adc
sub
inc
jecxz
stos
loope,pt
inc
sbb
sahf
pop
js
mov
xor
pop
lret
ret
jo
and
sahf
sahf
sbbb
ror
mov
xor
bound
jl
leave
and
push
roll
movsb
ss
cmp
rcrl
movsl
aas
cmp
hlt
lea
cmp
rclb
cli
movsb
filds
pop
pop
and
fsts
sti
xchg
push
repz
or
mov
loopne
pop
xor
fadds
insl
mov
jmp
test
push
adc
les
fimull
dec
sbb
ss
add
or
sub
push
call
sbb
jl
jb
push
test
cld
lods
divl
call
pop
jb
add
or
jne
out
jno
cltd
mov
mov
xlat
cmp
push
fidivrl
xchg
sub
shll
scas
sahf
dec
cltd
shll
mov
ds
add
dec
add
loope
repnz
cmp
and
jo
xchg
out
xchg
fs
inc
mov
repnz
loope
mov
ja
out
mov
mov
dec
ja
stos
add
repnz
jp
push
sbb
sub
cmp
cli
xchg
sbb
orl
popa
imul
movsb
sbb
js
lcall
jecxz
ss
decb
lods
insb
nop
stc
pop
repnz
adc
push
sub
sub
push
and
mov
dec
inc
outsl
mov
scas
shrl
jne
jmp
lods
sbb
inc
add
subb
std
xorl
mov
inc
cmp
xchg
pop
jne
mov
movsb
xchg
mov
jmp
in
movsb
dec
inc
movsl
in
aam
or
stos
das
mov
pop
dec
in
ret
push
mov
int3
add
cmp
lock
cmp
dec
adc
mov
or
cs
dec
jl
cmp
jmp
inc
movsb
int3
cs
fmull
mov
push
jecxz
jg
arpl
aas
aaa
ja
test
mov
cmc
inc
insb
in
cmpb
adcl
mov
fmuls
add
inc
pop
dec
xor
bound
cli
fmuls
aam
insl
enter
fiaddl
je
scas
addr16
fstpt
js
je
mov
lods
rclb
incb
add
mov
fildll
jae
jmp
loopne
xchg
mov
push
mov
push
xor
insl
inc
lock
or
inc
scas
push
outsb
loop
push
iret
sti
pop
in
sbb
xchg
pop
mov
push
or
mov
fiaddl
sbb
out
jmp
fstpl
movsl
and
fimuls
mov
mov
cmp
and
cmp
mov
dec
sub
lods
pop
popa
fs
rcll
lock
test
inc
push
cli
jecxz
out
in
mov
daa
into
xchg
mov
repz
add
sbbb
test
xor
shll
es
jl
cmp
jb
lcall
clc
popf
imul
jle
mov
dec
in
jbe
rorb
mov
notl
scas
inc
in
in
icebp
jle
and
sarb
pop
les
popa
aas
adc
fstpl
es
scas
leave
sbb
inc
inc
add
push
addr16
xchg
das
nop
outsb
push
inc
fwait
data16
xor
mulb
pop
ds
aas
mov
es
adc
adc
sahf
pop
inc
cmp
push
cmp
stos
test
xor
cli
pop
jl
and
mov
cmp
out
andl
lcall
not
push
and
gs
test
jp
mov
and
add
sub
push
xchg
cmp
sub
sahf
pop
jg
cld
fs
mov
cltd
push
call
out
cmpsl
or
imul
or
push
push
sbb
push
es
pop
mov
inc
loopne
roll
nop
dec
int3
paddw
test
lods
add
push
push
add
faddl
inc
and
add
sub
mov
sahf
inc
xchg
lods
mov
xor
movsb
add
mov
pop
ret
hlt
pop
stc
push
add
sub
in
test
leave
mov
sahf
pop
shl
fsubrl
sahf
jnp
stos
mov
sub
mov
adc
push
mov
loopne
insb
dec
xchg
stc
stos
scas
leave
xchg
lock
mov
in
sub
icebp
and
ficoml
cmc
movsb
mov
mov
xchg
mov
xchg
cltd
fs
es
pop
xchg
out
mov
jmp
int3
lret
cmc
xchg
out
ja
cmp
insl
push
inc
mov
loopne
sub
lret
pop
xchg
add
xor
pusha
insb
loope
mov
repz
mov
jne
xchg
and
iret
jne
and
sub
lcall
cltd
and
push
cmpl
hlt
in
stos
es
es
mov
pop
mov
pop
repz
cmpsb
rcr
popa
ss
ja
stos
inc
mov
movsb
dec
mov
fnstsw
fxch
or
mov
xchg
subb
adc
fists
imul
sbb
outsl
loop
mov
and
and
jecxz
pop
jmp
jb
xchg
shrl
cmc
cmp
scas
shl
test
cmp
loopne
sub
sbb
push
addr16
mov
shll
cmpsb
pop
add
xor
test
or
scas
aad
pop
loop
jbe
mov
mov
mov
push
mov
and
loop
push
loopne
test
xchg
jns
out
cmp
jnp
loop
sub
sub
pop
mov
gs
sbb
jecxz
cmc
sbb
push
daa
sub
negl
gs
mov
mov
dec
shll
and
xor
or
icebp
int
in
mov
fs
lret
add
in
xchg
mov
into
and
jmp
sbb
pop
add
sbb
pop
leave
call
dec
jae
call
popf
add
jno
sub
sbb
xchg
js
xchg
loop
mov
lock
fwait
mov
pop
hlt
aad
push
pop
aaa
push
lods
loop
ja
cmc
outsl
sub
lcall
sarl
jmp
pop
lock
mov
lods
jecxz
xor
mov
test
imul
lds
aaa
xor
out
data16
mov
push
sahf
push
cmp
cwtl
cmovae
mov
aad
fsubs
ret
sahf
sub
rorl
sub
xchg
fisttps
std
push
lahf
pusha
adc
xchg
mov
outsl
inc
xor
inc
lcall
add
push
scas
pop
pop
insb
pop
push
fcmovnb
push
and
jo
lods
inc
repnz
arpl
jnp
or
cmp
ss
cmp
or
cmp
pop
or
imul
mov
xor
adc
xlat
popl
aaa
popf
lret
mov
xchg
mov
and
inc
roll
or
and
fildl
outsb
jo
push
xchg
push
subb
mov
xchg
mov
push
icebp
popa
xchg
push
adc
aaa
rclb
jno
mov
inc
jmp
jle
stos
push
pop
mov
jno
xchg
lahf
xor
ss
insl
enter
into
int
adc
mov
in
popa
aad
jae
or
orb
or
fistpll
rcll
jmp
mov
jb
sbb
sub
xchg
jmp
pusha
jmp
add
imul
cmp
ss
mov
mov
je
hlt
inc
pop
cmp
lods
lds
pop
stc
aaa
call
jle
sbb
stc
outsb
test
into
xor
or
jns
pushf
outsb
mov
push
or
js
jmp
add
jp
loope
outsb
mov
cmpsl
adc
fistps
sarb
insb
sub
and
lahf
imul
movsl
jg
xchg
std
fsubrs
adc
in
out
sti
in
cmp
or
call
cltd
push
arpl
pop
aad
adc
xor
fldenv
inc
jp
cwtl
adc
insb
es
mov
cmp
mov
in
push
stos
and
adc
mov
and
insb
or
mov
dec
pushf
inc
out
rclb
gs
loopne
loop
pop
test
adc
push
rorb
push
fwait
sub
jge
idivb
xchg
dec
insl
push
shrl
lcall
and
fisubrs
lea
stc
mov
es
jl
or
std
ss
dec
xor
adc
test
sbb
xchg
aad
pop
loopne
cmp
ret
repz
pushf
xor
loope
fs
dec
fcmovnu
push
outsb
jnp
bound
in
or
roll
repz
enter
rcrl
cld
data16
popa
clc
rcrl
push
cmpsb
or
pusha
stos
mov
les
and
ds
add
data16
pop
dec
jns
out
xor
into
cmpsl
lods
stos
movsl
sub
inc
xchg
scas
push
push
xor
xchg
popf
js
cmp
pop
in
outsb
mov
push
negl
and
popl
gs
sub
shlb
adc
push
lea
into
xor
lea
adc
adc
mov
cmp
sub
inc
sbb
icebp
lea
jnp
ret
add
inc
out
sub
ja
add
movsb
pop
jb
inc
mov
push
add
shl
out
xchg
lods
lahf
frstor
les
adc
rcrb
xlat
aaa
out
inc
xchg
push
icebp
cmp
movsb
push
mov
and
std
mov
xchg
cmc
out
insb
test
mov
xor
pushf
pop
call
dec
add
insb
push
aaa
stc
inc
lock
aad
pusha
mov
rcrl
out
pop
mov
repz
movsb
fstl
xchg
and
ret
or
jg
addr16
sbb
mov
gs
shlb
mov
iret
shlb
lcall
or
ds
jl
xlat
out
jns
ret
jp,pn
pop
sub
loope
push
jge
sbb
sbb
out
insb
push
popf
mov
mov
decb
sbb
dec
sbb
mov
aas
dec
and
mov
gs
in
mov
jl
jmp
rol
dec
in
and
adc
cmp
cld
test
cmpsb
push
mov
add
dec
dec
xorl
loope
notb
stos
pop
cmovs
mov
lcall
dec
les
out
imul
loop
push
je
out
sahf
je
inc
addr16
lods
add
mov
pop
rcr
adc
in
mov
shlb
icebp
repnz
loop
pop
or
cmp
imul
and
outsl
mov
xchg
jnp
sbb
sub
cwtl
bound
shll
mov
int3
jo
lret
bound
daa
sbb
mov
sbb
aad
sub
xchg
adc
sbb
jecxz
imul
lcall
test
mov
xchg
aaa
adc
add
mov
mov
fs
clc
adcb
mov
cs
mov
cs
nop
lret
cmp
xchg
lret
jbe
movsl
ret
pop
push
sub
movl
mov
mov
jb
ret
loopne
fistpll
iret
idivl
jno
shl
mov
sub
add
mov
pop
cmp
shr
test
adc
ds
and
punpcklbw
es
pop
pop
dec
or
mov
mov
jl
loope
les
xchg
dec
dec
sbb
fstpt
cmp
adc
test
movsl
push
jae
add
out
outsl
push
call
mov
mov
adc
jne
std
sub
loope
add
test
jnp
roll
fcoml
inc
js
pop
cwtl
inc
andb
cmp
xchg
cmc
in
jle
fistps
fpatan
rcll
sbbl
jnp
push
pop
out
std
rolb
test
es
dec
pop
cmc
int
xor
cmp
inc
cli
push
out
int
xorl
loope
lahf
push
loop
cmp
fwait
inc
mov
dec
dec
movsb
scas
scas
xchg
dec
gs
ja
outsb
pop
clc
fwait
xor
out
mov
data16
mov
dec
test
dec
mov
lds
insb
inc
stos
out
pop
push
and
movsb
cmpsl
cmpsb
ret
pop
std
sub
xchg
mov
fs
xchg
push
fnstcw
mov
mov
lahf
or
pop
mov
sbb
dec
insb
adc
push
pop
inc
xor
and
inc
aaa
lods
movsb
pop
xor
aad
jno
enter
das
aaa
add
cs
test
lahf
cmp
cmp
push
das
add
cmpsl
push
mov
pushf
dec
mov
pop
pop
aam
or
test
inc
dec
xchg
mov
roll
or
push
mov
pop
jno
fstpl
push
jbe
insb
fnstsw
es
pop
mov
pop
add
mov
mov
or
pop
jns
push
dec
jae
mov
into
sub
ja
mov
aaa
jnp
cwtl
push
aas
inc
cs
pop
leave
sub
andb
ja
or
mov
inc
imul
imul
push
in
scas
popf
pop
std
movl
adcl
jns
mov
and
lds
aas
lahf
dec
popa
push
sub
inc
jo
add
push
lret
addr16
aam
inc
xor
pushf
rorb
cld
inc
dec
out
lahf
sbb
inc
ja
push
roll
jg
fbstp
cmp
sub
and
dec
shrb
inc
test
pop
jno
jl
fwait
subl
mov
test
nop
mov
popl
mov
outsb
lea
loope
jecxz
dec
out
add
jno
jle
add
iret
rcr
ljmp
popf
add
pop
jge
xchg
push
jnp
and
mov
scas
jns
xor
mov
jnp
push
fimuls
fidivl
int3
into
xchg
fisubrl
xorb
mov
iret
gs
jge
jecxz
jg
sti
jl
repnz
pop
mov
aas
lret
mov
inc
fldenv
xchg
or
add
outsl
rolb
xor
test
push
fs
loope
hlt
lret
sarb
fldl
decl
xor
push
int
ss
mov
test
fists
sti
inc
pop
cld
or
xchg
or
movsb
lret
stc
push
dec
adc
mov
aad
ss
sub
das
rep
rcrb
xchg
cld
in
insb
mov
or
movsb
mov
push
out
xor
movsb
cltd
add
mov
cmp
in
mov
xlat
cmp
addb
stc
adc
out
mov
xlat
mov
insl
jbe
sub
lds
bound
or
mov
and
mov
pop
jl
mov
push
dec
sub
jnp
inc
mov
adc
ds
and
sub
ret
xlat
cwtl
aaa
pop
das
scas
in
sahf
pop
fcmovnb
add
adc
outsl
je
mov
sub
mov
outsb
mov
dec
or
push
out
pop
mov
xchg
les
or
sbb
pop
jmp
mov
dec
pop
or
and
cmp
sub
add
mov
mov
mov
add
mov
pop
or
sub
mov
xchg
jnp
xchg
adc
mov
xor
fwait
movsb
test
xchg
cmp
filds
add
xor
xchg
stos
jecxz
aaa
mov
popf
xor
cli
jmp
jns
mov
addr16
dec
and
adc
outsl
adc
and
and
sbb
xor
movsl
bound
int
das
mov
mov
push
or
mov
int3
into
adc
int
andl
pop
ret
or
push
imul
cmc
jg
punpckhdq
ss
or
xchg
in
xor
jns
test
xchg
inc
mov
mov
mov
adc
leave
aam
adc
push
jg
or
test
lods
leave
pop
mov
xchg
xchg
inc
arpl
pop
pop
sub
int3
xor
or
inc
std
dec
mov
sub
cld
in
mov
push
pop
dec
xor
shld
icebp
sub
lcall
add
inc
mov
cmp
xchg
mov
pop
es
test
sub
lret
xchg
mov
fwait
std
rorb
cmpsb
push
nop
subb
jl,pn
xor
aad
mov
popa
inc
mov
mov
xor
inc
cmp
loop
movsb
add
mov
pop
jmp
pop
xor
sub
jns
inc
orl
dec
lahf
fucomi
sub
xchg
int
push
sub
push
jge
les
out
filds
lcall
mov
mov
and
dec
int3
test
mov
xchg
push
jne
aam
fidivs
stc
or
dec
jb
dec
pop
xchg
data16
movsl
jle
cmp
faddp
lods
mov
fmuls
sub
pop
add
sbb
fs
inc
mov
xadd
hlt
cmc
xlat
mov
push
hlt
and
push
aas
adc
sub
mov
fimuls
outsl
push
cmp
pop
mov
or
in
aad
addl
sub
xchg
nop
xchg
int3
in
aad
mov
jbe
andl
xor
cmc
push
mov
cmp
push
and
and
push
pop
push
xor
inc
jo
repz
out
sti
daa
lods
rcrb
shrl
cmp
inc
dec
insl
mov
jns
or
cld
xor
dec
orb
out
cmc
inc
mov
cld
mov
xor
dec
adcl
mov
std
push
adc
addr16
shlb
sarl
jp
pop
lods
daa
rorb
sbb
filds
pop
test
jbe
mov
mov
sbb
loop
dec
cmp
fdiv
jp
mov
push
cmpsb
mov
inc
cmp
or
xor
dec
pop
push
stos
int3
cmp
pop
pop
out
dec
mov
inc
bound
sbb
aad
pop
jmp
mov
stos
adc
fldenv
jnp
sahf
mov
or
pop
insl
or
xlat
mov
cmp
mov
mov
fistl
cmp
dec
subl
cmp
jge
mov
scas
and
mov
xor
aam
mov
push
mov
bound
mov
pop
add
xorb
inc
dec
add
push
js
ja
inc
lret
mov
pushf
insl
mov
xchg
lcall
fs
inc
out
pop
sarl
in
mov
inc
pop
jb
pop
int3
add
test
lods
cmpsl
xchg
push
test
mov
nop
add
in
sub
cmp
in
xor
fistps
adc
inc
add
adc
adc
mov
lahf
leave
es
xor
xor
pop
push
in
ljmp
ret
sbb
adc
sbb
das
icebp
mov
inc
and
aaa
sbb
dec
rcrb
lock
addr16
and
inc
lea
mov
mov
mov
xchg
ljmp
pop
les
repnz
or
nop
es
fidivrl
mov
xor
adc
add
icebp
outsb
repnz
adc
sahf
into
pop
mov
fistpl
add
es
push
ss
test
fs
cmp
xchg
sbbl
or
and
add
incl
push
adc
cmp
test
test
sbb
int
sahf
sbb
into
xlat
jbe
jne
dec
in
or
pop
pop
inc
xchg
leave
and
jmp
mov
rolb
cmp
loope
stos
dec
inc
pop
push
lock
xchg
or
fstps
in
ret
dec
xchg
dec
cmp
stos
cld
out
jne
mov
imul
je
test
add
cmp
xor
test
and
xchg
mov
out
cld
xor
in
push
xchg
cmp
push
pop
xchg
mov
repnz
scas
adc
mov
jbe
adc
push
and
imul
push
add
inc
shlb
adc
leave
xchg
add
cmp
push
shlb
cwtl
xchg
test
mov
ja
push
mov
cmpb
dec
sbb
imul
aas
dec
mov
std
mov
jo
mov
mov
into
outsl
xchg
sahf
popa
clc
xchg
stc
out
adc
leave
clc
outsb
jl
mov
fists
mov
jmp
add
dec
mov
inc
lods
jl
lret
cmpsl
mov
lahf
aad
mov
iret
pop
push
call
popf
out
cld
sbb
sahf
mov
mov
stos
sbb
adc
enter
and
cmpsl
add
addr16
out
jno
xchg
xor
popa
cmp
ficoml
test
and
push
dec
fidivrl
ds
adc
imul
push
orl
fcoms
xor
and
jmp
inc
mov
push
ds
fxch
gs
test
aas
add
sub
sbb
mov
jmp
icebp
loope
add
mov
mov
jb
rclb
imul
inc
cld
xchg
jp
ret
jmp
xchg
inc
nop
xchg
pop
xchg
push
std
dec
dec
pop
xlat
imul
test
loop
gs
xchg
lds
mov
and
xchg
sub
mov
jno
cmpsl
jnp
es
loope
ret
dec
scas
mov
inc
int3
and
fldt
add
jmp
movsl
add
cmp
nop
push
popf
and
arpl
jecxz
test
mov
cmpsl
mov
or
mov
mov
and
sub
and
stos
je
cmp
push
push
and
test
fsubl
adc
adc
mov
push
mov
pop
cmpsl
sti
push
cmp
inc
push
ret
lret
sbb
mov
cmp
les
es
int3
pop
dec
mov
cmc
mov
sub
sti
push
out
aad
jnp
mov
add
dec
stos
in
and
jg
test
cltd
pop
call
jno
movsl
mov
jmp
je
dec
push
popa
sub
jae
inc
mov
sahf
lea
xor
xlat
mov
cmc
ret
adc
fs
mov
daa
mov
in
fcoml
jp
sbb
pop
xchg
das
cld
ljmp
dec
xor
sub
push
jae
push
mov
or
inc
repz
or
sub
imulb
push
xor
aaa
push
icebp
sahf
aam
push
push
dec
lods
out
cmp
mov
enter
ret
fldt
pop
sbb
lret
and
jno
andl
adc
pop
lcall
das
mov
jle
mov
mov
mov
jbe
add
cs
jns
fstp
sbb
ljmp
jp
sub
testl
out
push
decb
dec
xor
jp
fwait
cmp
lcall
sahf
add
loop
lock
ss
jecxz
jns
and
push
lret
daa
pop
pop
pop
call
out
popf
dec
enter
repz
ja
and
ret
fcoms
aaa
xchg
or
sub
enter
in
adc
sahf
jle
pop
arpl
mov
sti
xor
dec
mov
xor
repz
jnp
cmp
sbb
es
cwtl
mov
mov
sbb
js
xchg
mov
xchg
fs
lds
push
dec
sbb
adc
dec
mov
pop
fidivrl
cmc
add
stos
and
mov
shrl
int
sbb
adc
cmc
or
xor
lods
cmp
push
adc
jae
outsl
leave
popa
mov
and
jnp
fdivrs
jae
rcrb
pop
fwait
cltd
test
mov
frstor
sti
xor
daa
dec
ja
sub
std
jle
mov
lock
popa
jne
test
xor
test
cmc
loopne
movsb
repnz
std
scas
mov
jl
and
mov
or
mov
scas
and
ret
outsl
je
pop
insw
jmp
sub
mov
stos
mov
xchg
ds
and
mov
mov
cmp
in
xor
rcrb
mov
xchg
and
cwtl
daa
sub
movl
leave
dec
sub
lods
or
out
fs
lods
mov
dec
cmpsb
cmp
mov
pop
mov
dec
xchg
add
xor
int3
dec
mov
in
jb
mov
jle
addb
mov
les
jb
cmp
aad
push
gs
pop
or
push
inc
add
jns
cmp
sub
sbb
push
mov
dec
sub
test
and
inc
rcl
jne
outsb
inc
imul
mov
test
and
push
jp
xor
cmp
ret
fisttpll
es
jae
mov
lods
stos
pop
or
out
pop
in
ds
pop
lret
inc
inc
lcall
ret
adc
out
jmp
adc
sub
mov
test
lahf
inc
je
popf
mov
outsl
aad
cwtl
mov
xchg
lods
xchg
cmc
dec
cmpsb
ret
mov
jno
jecxz
das
push
pop
sbb
jmp
movsl
test
cmpl
lret
sbb
pop
jne
dec
xchg
mov
push
or
ret
ljmp
es
shll
fs
test
into
jns
insb
xchg
inc
scas
addb
cli
adc
and
lods
jl
iret
adc
sbb
or
mov
outsb
adc
call
push
in
sub
sbb
ss
mov
cwtl
mov
arpl
dec
adc
mov
cmp
mov
and
fcoml
lret
push
xlat
movsb
inc
xchg
add
mov
outsb
pop
xchg
cmc
sub
arpl
das
inc
mov
mov
lods
pop
ror
xor
aas
push
adc
or
dec
sti
adc
lahf
cmp
fimuls
inc
ss
dec
int
bound
pop
popf
mov
in
sub
xchg
pop
pop
fildl
inc
inc
mov
xorb
aas
imul
dec
addr16
xor
inc
mov
xchg
jns
lahf
sbb
pop
jnp
shr
mov
js
xor
call
and
and
lods
ljmp
ja
clc
inc
adc
test
das
inc
mov
icebp
jecxz
insb
xchg
jmp
lock
cmp
sub
mov
sub
aad
sahf
jp
mov
push
movsl
aas
inc
imul
les
jnp
scas
int
mov
xor
cmc
push
mov
fidivrs
stos
add
andb
icebp
jle
or
mov
push
jmp
daa
fcmove
loope
mov
jnp
dec
and
mov
sbbb
mov
or
dec
in
sbb
inc
mov
mov
movsb
dec
out
sbb
pop
in
sbbb
loope
dec
xchg
xchg
inc
cmp
in
sti
fs
adc
inc
mov
sti
imul
scas
xor
or
inc
dec
scas
movsl
or
jl
es
mov
sub
fisubrl
mov
jbe
cmp
push
xchg
cwtl
jb
push
jle
adc
and
hlt
pop
imul
addr16
mov
mov
xchg
lret
cs
jecxz
lret
jge
fimull
pop
mulb
push
insl
in
add
mov
push
mov
xor
inc
lcall
stos
aas
inc
daa
lock
xchg
mov
xor
inc
mov
adc
std
add
and
fidivrl
ss
jnp
je
das
test
pop
xor
sub
pop
jmp
mov
into
shlb
mov
sbb
das
xchg
scas
shl
jo
enter
adc
mov
fdivs
subl
mov
clc
add
enter
adc
push
push
icebp
test
mov
pop
frstpm(287
pop
sahf
cld
xchg
and
or
test
int
out
mov
jecxz
test
loope
xchg
cmp
sub
xchg
pusha
clc
jge
jns
es
out
outsl
sahf
jp
or
pop
icebp
je
mov
lcall
out
add
cmp
arpl
call
mov
sbb
cld
push
xor
je
sub
lret
adc
sahf
jle,pt
inc
aam
pop
addr16
or
mov
xor
xor
push
test
and
mov
aad
xchg
adc
fs
aad
leave
mov
imul
sub
mov
add
leave
scas
popa
dec
icebp
sbb
lea
xor
push
lret
dec
pop
or
data16
enter
cmc
loope
cmc
iret
sub
std
sahf
xor
xlat
lods
std
pop
js
inc
add
popa
test
cmp
xchg
adc
push
lahf
push
jae,pn
lock
negb
push
nop
jp
rcll
mov
xchg
test
sub
sti
or
pushf
lods
add
or
and
shll
bound
push
sbb
and
mov
mov
cmp
gs
add
fisubrs
xchg
cwtl
insl
dec
xchg
mull
sub
clc
add
push
sbb
scas
fnstsw
and
fs
cmp
rorb
adc
fidivrs
add
adc
jmp
xor
jge
ret
or
mov
pop
cmp
jmp
mov
pushf
mov
inc
mov
loope
mov
ljmp
sbb
push
in
add
cmc
xchg
push
pop
je
adc
jbe
mov
sub
int
lods
lods
mov
push
std
in
mov
mov
ds
jmp
dec
push
movsl
call
movsl
xchg
test
cmpsl
sub
js
sti
sahf
stos
insb
and
cltd
mov
add
stc
roll
ret
xchg
push
and
aad
negb
shlb
hlt
add
nop
lret
outsb
ja
cmp
test
add
ds
jg
loop
push
lret
arpl
mov
jecxz
sub
test
pop
daa
rorl
xchg
adc
lret
popa
xor
pushf
imul
dec
push
leave
or
sub
cli
jae
fwait
mov
lods
mov
inc
test
scas
sub
lock
lcall
adc
js
mov
mov
pop
jo
mov
push
testl
repz
xor
mov
gs
aad
xor
les
in
orl
jb
ja
loopne
jg
dec
out
rolb
jb
sarl
mov
adc
cltd
aad
notb
mov
fs
int3
sub
das
sbb
jo
inc
pushf
insb
pusha
sub
or
mov
xor
inc
in
cli
stc
int
test
sbb
pop
fsub
push
dec
test
add
test
jne
pop
mov
jbe
enter
cmp
lock
push
movsl
cwtl
inc
data16
mov
mov
aas
inc
outsb
jmp
mov
jle
nop
add
imul
cs
lret
inc
mov
shrl
inc
inc
gs
xchg
or
dec
into
testb
rcll
dec
cmp
jnp
dec
std
pop
adc
xor
stos
repz
jae
add
cmc
stos
ss
mov
push
rorb
stos
mov
dec
or
ss
xchg
repz
dec
push
pop
dec
mov
sub
xchg
mov
jne
and
or
lea
lret
mov
cmp
in
dec
loop
sbb
adc
xor
and
xchg
mov
insl
and
adc
mov
shl
dec
mov
aaa
repnz
pushf
je
xchg
lsl
jno
pop
mov
rcrb
jne
in
je
push
sbb
jl
popf
fimuls
mov
repz
fwait
jbe
out
mov
jp
push
mov
movsb
cmpsl
ljmp
cmp
jnp
clc
xlat
imul
lods
jp
nop
stc
mov
sbb
push
fnop
lret
std
xchg
push
push
or
ja
andl
repz
mov
pop
push
cmp
bnd
shll
dec
jle
push
into
adc
aad
sub
ja
cmc
pop
mov
nop
mov
mov
int
scas
movsb
xor
xor
lret
dec
xchg
test
sub
pop
push
in
sbb
add
pop
rclb
cmc
push
gs
inc
adc
mov
in
sub
popa
ret
push
push
adc
adc
movsl
insb
add
xor
sub
mov
ds
push
ffreep
push
or
shlb
out
loopne
or
cmp
pop
cs
mov
movb
jecxz
and
mov
es
in
and
stos
ret
test
mov
jl
adc
shlb
js
movsb
iret
mov
lods
outsl
sbb
adc
iret
mov
jbe
nop
call
bound
or
mov
outsl
inc
push
mov
inc
xor
mulb
mov
fs
sahf
mov
sub
cwtl
mov
push
pop
inc
test
dec
dec
add
jg
rep
sub
xor
push
push
add
or
imul
repz
jae
mov
jl
or
sub
xchg
ja
sysret
pop
add
mov
outsl
ret
pop
xor
lea
iret
xorb
or
fadd
pop
mov
fbld
movsb
dec
xor
push
bound
mov
into
and
xor
xchg
enter
rclb
xchg
sbb
out
mov
jae
loop
mov
into
jmp
loopne
cmovge
pop
fbstp
jmp
add
stos
inc
xchg
inc
cmpsb
bound
mov
outsl
scas
xchg
push
xchg
add
clc
es
dec
xor
fstps
xacquire
xchg
leave
mov
cmp
loopne
jp
sti
xor
jbe
add
fcomps
addr16
push
fcmovnb
rcr
rcll
movsl
and
movsl
les
cltd
mov
pop
jnp
sbb
fsubs
hlt
bound
mov
jno
divl
push
rolb
out
lcall
test
in
pop
jl
jae
add
mov
ds
stc
jl
sbb
fs
push
xchg
and
lcall
mov
movsb
or
out
push
mov
cmp
jecxz
rorl
sub
pusha
dec
in
cld
enter
jg
aad
or
pop
out
jae
je
scas
pusha
ret
mov
hlt
dec
ficompl
aaa
xchg
sti
or
mov
inc
shrb
arpl
mov
cmp
add
xchg
mov
jno
jo
pushf
dec
jl
pop
xchg
nop
cmp
enter
dec
jo
roll
jo
out
jecxz
dec
and
lds
add
inc
cmp
mov
xchg
mov
dec
inc
xor
mov
fimuls
imull
mov
cs
jge
loop
out
pop
xor
out
xchg
sar
jno
mov
or
jno
cmp
mov
sarl
out
cmpsb
xchg
mov
jmp
xor
test
je
sub
mov
test
adcb
push
sbb
sbb
inc
sti
dec
mov
mov
sbb
push
cltd
imul
cli
ret
xlat
rcll
outsb
loopne
adc
mov
cs
fimull
push
pop
pushf
dec
inc
js
clc
mov
fstpl
ljmp
mov
push
xchg
pop
iret
les
shlb
std
insb
out
mov
or
int
and
iret
mov
adc
cmpsb
sub
mov
mov
into
setp
sub
push
mov
lret
ss
add
and
mov
jge
das
lret
jns
clc
mov
jge
iret
jno
push
push
or
bound
and
jp
inc
call
jnp
andb
aad
aas
push
xchg
and
push
sub
mov
ret
xchg
mov
daa
cs
xchg
and
push
xchg
movsb
jl
push
cltd
pop
jno
cmp
repnz
je
inc
sbb
js
inc
inc
jae
pusha
jbe
dec
push
decl
lahf
jnp
xchg
in
cmp
inc
pop
pop
cmc
or
aas
sahf
cs
hlt
or
rclb
out
fs
lods
dec
ficoml
push
insb
pop
add
xor
mov
js
lahf
in
sbb
jbe
ljmp
xor
push
sub
lret
pop
sub
aad
repnz
lret
std
jp
pop
outsl
jb
sbb
inc
jb
push
test
push
les
iret
mov
jno
lock
and
inc
daa
mov
jno
xlat
lahf
pop
mov
outsl
ror
mov
jecxz
orb
cmp
imul
aaa
dec
nop
push
call
xchg
push
decb
adc
push
icebp
push
les
fldcw
int3
sub
cmpb
lcall
call
dec
fadds
shll
cmp
lods
rcll
bound
movsl
roll
imul
jnp
dec
jnp
adc
fsubrp
add
sti
cmp
ss
je
adc
jae
test
xlat
pop
push
or
ds
push
pusha
lret
mov
pushf
loopne
dec
enter
add
xchg
adc
and
cmp
cmp
negl
test
stos
aad
inc
dec
push
sarl
push
jne
cmp
mov
pop
pop
pop
mov
add
xchg
pop
and
js
jmp
jmp
pop
loope
std
and
mov
jb
sub
and
iret
jo
cli
lods
outsb
test
loope
test
xchg
push
fdivs
pop
adc
push
add
je
xchg
aaa
fildll
adc
sbb
lret
pop
insb
cwtl
add
pop
push
aaa
mov
fidivrl
ret
data16
loop
stc
mov
pop
movsb
pusha
leave
inc
lcall
jg
inc
cmpsb
out
loopne
xor
sbb
in
xlat
push
aam
xlat
push
inc
cmc
adc
add
mov
repz
mull
sub
push
jle
jg
dec
lock
sahf
pop
dec
sub
loop
loopne
in
je
lret
mov
mov
in
dec
xchg
lret
rolb
arpl
or
arpl
cs
sarl
pusha
mov
ja
in
or
sub
mov
and
pusha
rol
inc
push
xchg
mov
shl
lea
ljmp
aaa
mov
mov
xor
dec
and
out
fisttpl
icebp
lret
jmp
repz
cwtl
das
push
scas
cmp
test
xor
outsb
shll
or
in
fwait
ss
sub
cmpsb
dec
rcrl
sbb
push
inc
stos
cmp
in
or
ret
shrl
mov
std
pop
aad
push
loope
dec
sbbb
stc
push
fcmovu
imul
cli
adc
xchg
pop
call
mov
sbb
pop
ud0
mov
dec
fdivrp
fcomp
outsb
incb
or
jl
mov
jns
or
lcall
dec
fdivp
pop
push
dec
xor
mov
bound
sbb
shll
cmp
lcall
adc
adc
push
cltd
test
or
push
inc
mov
and
push
xor
fisubs
lods
and
jno
in
out
add
cmpsb
stc
jbe
xchg
or
adc
adc
ss
cmp
jmp
lret
test
mov
out
into
mov
sub
mov
fwait
add
inc
test
pop
sbb
les
xchg
pop
mov
and
inc
or
lret
fisubs
xor
sub
cmpsb
mov
std
inc
mov
aaa
fiaddl
call
jne
out
insl
jo
int3
in
or
push
rcll
sub
dec
adc
adc
in
jp
divl
fsubrs
xchg
push
pop
jnp
ret
inc
adc
xor
and
shlb
cmp
mov
cmp
movsb
ficoms
push
pop
leave
sub
std
sbb
add
pop
jo
leave
enter
ret
mov
cmc
int
bnd
push
mov
pop
jb
adc
sub
int3
mov
bound
fs
mov
jns
mov
pop
cs
in
mov
adc
jae
leave
cmpsb
adc
outsl
add
or
and
clc
sarb
cmp
into
lret
cmpsl
jl
xchg
cld
inc
xchg
pop
sahf
pushf
sbb
test
das
or
mov
xchg
lret
stos
or
pop
push
pop
and
stc
pop
cwtl
stos
es
mov
or
xor
cmc
pop
pop
xchg
jns
sub
inc
pop
jecxz
outsl
popf
pop
clc
sbb
add
testb
inc
push
xchg
icebp
xchg
sbb
xchg
into
movsb
scas
sbb
xchg
push
inc
mov
push
push
out
adc
and
sub
loopne
cltd
hlt
stos
loope
enter
ja
xchg
adc
cmpsl
data16
js
or
inc
inc
sub
popa
jbe
mov
pop
in
lret
xlat
push
inc
jle
fnsave
aaa
fldl
ss
aaa
clc
cmc
mov
jg
jne
push
pusha
insb
out
mov
pop
std
das
push
pusha
mov
insl
addr16
adc
pop
int
lcall
mov
shll
mov
cmp
loop
out
pop
loopne
jecxz
dec
andl
dec
jo
inc
mov
cmp
imul
xorb
sbb
sbb
dec
mov
ljmp
outsl
dec
or
dec
jg
in
outsl
es
in
push
mov
cwtl
mov
rol
or
xchg
out
jp
mov
rolb
mov
subl
data16
enter
dec
sbb
adc
pop
flds
mov
hlt
mov
xchg
enter
dec
ss
adc
sub
sbb
cwtl
xor
lret
sbb
aaa
adc
sub
jo
mov
lds
jne
fs
cmpsb
iret
sti
and
outsb
jb
dec
insl
mov
js
fstps
jns
ljmp
in
adc
adc
addr16
jg
call
dec
jb
rclb
jl
out
fistpll
mov
mov
in
insl
or
jp
mov
adc
sbb
jns
pushf
push
xchg
lret
inc
ret
push
inc
sarb
dec
fsubrl
xor
jns
dec
mov
jne
xor
cmp
pop
or
jno
aad
sbb
inc
ds
pop
lahf
cld
inc
call
fimull
adc
dec
out
push
repz
adc
out
stc
add
imul
sub
jae
mov
leave
sub
iret
xor
inc
cwtl
inc
int3
cmc
popa
aaa
and
dec
sbb
test
jle
and
test
and
shll
adc
mov
pusha
mov
dec
pusha
inc
int3
in
mov
stc
push
or
shl
fsubrs
mov
cli
jle
movsl
xchg
es
xchg
ret
je
cmc
jns
adc
mov
lea
push
dec
sub
mov
loope
mov
xchg
jo
lods
inc
pop
repnz
subl
xchg
or
aaa
sbb
pop
int
jecxz
push
push
dec
pop
lret
jae
aad
mov
mov
in
push
sahf
xchg
add
cwtl
lds
adc
sbb
lods
inc
js
or
jne
xlat
pop
inc
mov
es
out
sbb
or
shll
inc
scas
negb
jno
shlb
js
js
or
pop
pop
sub
jecxz
movsb
dec
nop
push
idivb
movsl
inc
loopne
iret
xchg
mov
sti
int
es
mov
cs
and
addr16
cmp
cmpsl
sahf
jno
dec
adc
jecxz
push
xchg
mov
test
adc
jo
out
mov
jle
nop
mov
scas
cltd
insb
leave
out
and
test
aam
pushf
lret
in
repz
std
gs
fs
leave
mov
popl
dec
jmp
cmc
mov
out
mov
xor
mov
pop
dec
pop
lret
hlt
inc
jl
xlat
push
jl
lret
mov
add
push
pop
mov
mov
xchg
fsub
ja
xchg
jbe
and
sbb
sbbb
cs
into
push
decb
xchg
test
jae
call
xchg
stos
aaa
cmc
dec
xchg
add
stos
loop
loop
inc
out
xor
or
data16
dec
or
nop
fs
adc
stc
stc
fnstenv
fst
inc
dec
adc
dec
jae
imul
push
rorb
jbe
mov
inc
lahf
sarl
xchg
inc
inc
imul
dec
cs
scas
stos
in
ljmp
imul
mov
scas
xchg
add
xchg
xor
dec
das
jmp
repz
add
out
push
inc
test
ljmp
inc
jp
lgdtl
mov
fcompl
xorb
dec
xchg
push
mov
shll
outsl
and
aad
xor
std
mov
and
aad
cmp
xchg
push
cmp
cltd
das
jo
mov
insb
push
sahf
rdtsc
xchg
cmpsb
fs
add
or
out
add
mov
repz
mov
out
adc
in
cwtl
dec
or
ds
rorl
jb
out
cmpsl
xlat
cmp
lcall
adc
xchg
add
push
std
hlt
push
mov
cmp
lcall
rcll
idiv
fnsave
iret
test
scas
and
inc
pop
xlat
sar
fs
aas
xchg
std
aas
test
push
dec
test
sahf
fcomps
mov
cmpl
outsb
sbb
add
dec
scas
inc
jne
jle
je
mov
lcall
ror
or
sbb
add
add
xor
mov
adc
adc
add
cmp
ljmp
cmp
mov
jp
push
lcall
pushf
orl
stos
inc
push
dec
dec
rol
popf
cld
cmpsl
add
lods
in
imul
ss
hlt
sub
cmp
out
xor
ret
push
jnp
or
sti
xchg
pop
inc
mov
ja
cmp
fwait
push
or
out
in
push
stos
jns
xchg
out
push
cwtl
mov
movsl
inc
in
or
fwait
push
cmp
imul
pop
rcr
xchg
aam
ja
jb
pop
test
jno
mov
and
call
dec
sbb
lods
and
sub
dec
mov
push
cmp
jecxz
inc
loope
pop
push
adc
shlb
mov
jb
lret
pusha
sub
lock
push
daa
fldt
in
pop
in
sbb
fcoms
mov
and
fs
iret
xor
ss
inc
mov
ret
je
mov
cmpsb
or
adcl
mov
dec
ds
cltd
cmp
dec
xchg
pop
hlt
inc
mov
or
xchg
lret
scas
mov
lahf
mov
mov
jg
je
or
aas
loop
add
jl
data16
xor
inc
mov
scas
cmp
inc
xchg
mov
mov
lret
push
or
jo
mov
jmp
pop
test
lods
adc
mov
arpl
sub
sar
sbb
or
stos
inc
movsl
gs
iret
or
fistpll
sub
cwtl
imul
lsl
push
push
xchg
add
lahf
inc
outsl
stc
lds
mov
pop
out
dec
scas
sbb
cmpl
jbe
fsubr
mov
inc
xor
fiadds
jns
jno
in
pop
xor
scas
cs
pushf
inc
and
mov
adc
test
or
and
das
inc
cltd
por
xchg
fnstsw
js
mov
or
adc
ficoml
sti
jecxz
sub
ss
ret
clc
loop
push
cltd
aas
sub
es
dec
out
test
jo
mov
mov
or
gs
mov
adc
fisttps
xchg
jmp
jne
aaa
push
fs
rcr
push
int3
imul
out
cmp
xchg
add
pop
test
movsl
lret
fistpl
xchg
shll
inc
fidivrs
jecxz
cmp
inc
dec
push
movsb
add
mov
mov
push
imul
push
call
push
add
cmpsl
push
scas
or
jnp
ja
xchg
or
push
pushf
loopne
rcl
mov
adc
or
pop
sub
je
pop
and
int3
push
int
and
orl
mov
stos
mov
adc
cmp
jge
addl
adcl
loop
test
gs
xor
dec
int
or
cmp
push
or
cmp
xchg
xorb
push
mov
jae
and
addr16
movsl
fiaddl
mov
xchg
inc
xchg
inc
je
jns
ljmp
cmp
sbb
imul
addl
icebp
popa
out
movsb
clc
xchg
lret
aam
repnz
fs
subl
jp
loop
mov
jb
mov
hlt
xchg
push
div
pusha
sarb
mov
xchg
pop
jnp
pop
sbb
lcall
xor
sbb
test
in
test
insb
jno
les
mov
int
repnz
in
jl
cmpsl
sbb
leave
fistl
adc
and
add
jo
jnp
andl
sbb
out
imul
fldl
call
loope
pop
jecxz
enter
xor
adc
loope
mov
iret
movsl
xchg
push
add
inc
jecxz
add
in
outsb
mov
mov
pop
xchg
orl
xor
ss
pop
xchg
push
inc
pop
aam
into
mov
sbb
adc
and
ljmp
cs
hlt
mov
loope
and
mov
jecxz
mov
mov
mov
mulb
jp
add
and
mov
cmp
xlat
icebp
xchg
pop
xlat
xor
insl
jg
fadd
call
mov
in
mov
dec
lret
add
sbb
pop
pop
arpl
in
fimuls
ret
outsb
mov
pusha
sarb
mov
mov
push
mov
cld
ss
lcall
dec
pop
aad
dec
xor
or
push
mov
ljmp
outsl
aas
hlt
mov
rcll
sub
cmp
add
js
dec
xchg
fwait
movsl
inc
aaa
aam
adc
mov
fbld
rolb
mov
mov
das
mov
and
out
lahf
insl
add
adc
shll
mov
js
mov
testb
mov
mov
push
adc
adc
in
bound
cmp
cmp
cmp
inc
aas
negb
int
mov
push
add
sbb
pushf
scas
inc
lcall
fstpt
out
mov
pop
into
das
movsl
or
xchg
mov
fcoml
pop
dec
enter
xor
pop
jns
fistpl
or
cltd
mov
imul
stos
sbb
jg
add
dec
out
repnz
fs
stos
jl
test
es
hlt
rep
hlt
jl
xor
fdivrl
fisubl
loope
jg
stos
aaa
add
inc
insb
pop
icebp
scas
psubq
inc
lods
pop
sbb
mov
out
mov
dec
in
xchg
stos
repnz
and
inc
add
fstpt
test
mov
add
or
and
xchg
je
adc
ss
push
out
mov
and
mov
data16
fs
ret
insb
xchg
popa
fidivs
cmp
fisttps
mov
xor
fdivrp
or
push
pop
fisubrs
jp
pop
jp
lock
dec
adc
je
sub
jns
xlat
lods
push
popf
and
mov
pop
or
jbe
cltd
pop
pushf
push
lret
pop
cmp
inc
mov
ja
xchg
lret
add
push
js
pusha
inc
dec
jmp
cmp
lods
xchg
jecxz
push
pop
xor
cmp
repnz
xor
inc
adc
xor
in
lahf
popf
sbb
fimuls
jg
bound
lds
sub
jge
pushf
mov
cli
std
outsl
and
lods
cmp
scas
das
push
and
in
addl
mov
mov
lods
call
sbb
shrl
in
push
mov
cmp
add
fs
pop
cltd
outsb
testl
mov
test
lcall
adc
xchg
in
test
scas
inc
ss
pushf
jb
enter
roll
in
ret
leave
or
in
jae
add
sub
idiv
jle
jo
pop
aaa
mov
test
stc
and
adc
push
setns
xchg
xor
mov
sbb
scas
shlb
fisttps
pop
mov
push
push
js
pop
push
or
rolb
lods
xchg
push
sbb
mov
orb
sbb
add
decl
or
lcall
lea
push
xchg
aas
jecxz
cs
mov
cmc
mov
lock
imul
jmp
and
jl
enter
in
dec
mov
xor
repnz
aad
adc
mov
add
in
xor
fs
in
xlat
jo
push
lea
dec
repz
xchg
add
out
xchg
loopne
adc
cltd
or
pusha
insl
shrl
push
inc
add
jb
icebp
cmp
icebp
ss
out
ja
jl
cmc
insl
aad
in
outsb
icebp
fs
cmc
lret
in
xchg
xor
movsl
jp
dec
and
dec
jmp
xchg
lea
jae
mov
ljmp
repz
and
and
ret
in
sub
sub
push
mov
adc
lea
paddusw
mov
mov
pop
repz
jmp
pusha
xchg
sbb
mov
sub
mov
mov
daa
cmpsl
and
ficomps
adc
out
lret
push
mov
xchg
mov
loope
shll
imulb
lret
inc
mov
test
ss
jl
jge
xor
pushf
add
lods
add
adc
lret
add
inc
scas
jne
push
mov
jns
insl
jb
push
fidivl
js
in
jl
dec
and
mov
in
stos
ret
nop
jle
push
xorb
xor
rorl
xor
sti
les
mov
xor
xchg
ja
imul
in
arpl
ret
inc
pop
mov
out
cli
push
push
mov
stos
mov
lcall
jle
sub
cwtl
std
mov
sub
inc
shrl
sub
lahf
repnz
imulb
sub
mov
cmp
mov
pushl
stos
je
rcrb
jle
cmp
aam
rcrl
xchg
and
and
rol
cmp
dec
cs
add
hlt
mov
add
cmp
push
mov
jne
je
push
xor
pusha
jge
mov
xchg
add
test
loope
pop
sub
or
xorl
aad
xlat
mov
ja
push
in
fwait
jle
or
popf
lahf
xchg
jle
leave
jecxz
lds
scas
cld
mov
add
loope
dec
dec
xor
push
xor
push
jmp
cmp
inc
sub
cmp
jne
out
dec
add
pop
dec
xchg
pop
aam
jmp
xchg
dec
xchg
mov
xchg
xchg
test
xor
cmp
inc
sbb
movzwl
subl
fst
daa
sbb
stc
mov
xchg
pushf
fisubl
leave
mov
and
cmp
addr16
daa
cs
imul
iret
sbb
out
fildll
sbb
in
adc
pand
cmp
mov
pop
adc
outsl
jg
push
mov
pop
cltd
add
imul
sbb
int3
inc
mov
jecxz
pop
hlt
mov
test
push
mov
cmp
xchg
xchg
inc
mov
sbb
in
adc
or
mov
push
xchg
out
xor
movsb
leave
scas
out
inc
cmpl
jb
dec
mov
jle
or
popa
and
clc
adc
or
lods
push
pushf
cmc
jg
lcall
aad
js
sub
mov
in
es
dec
dec
arpl
mov
lahf
mov
adc
aam
or
loop
fdivrl
rcl
and
in
dec
fsubl
pop
xor
mov
out
jae
test
pop
pushaw
xchg
mov
std
xor
mov
sbb
jo
cmp
sbb
push
insb
icebp
mov
call
xchg
inc
mov
ss
lret
int3
push
out
mov
mov
sbb
rcll
imul
int3
push
xor
inc
mov
pop
and
pusha
mov
fdivl
lods
fwait
push
jno
xchg
daa
lret
aam
movsb
mov
aas
sbb
insl
jns
xchg
loop
sbb
add
cld
pop
sub
push
xchg
mov
mov
je
into
xor
push
outsb
dec
xor
push
imull
sti
movsb
loope
sbb
add
aam
push
fs
lcall
cltd
xchg
xor
jbe
notb
jo
pusha
add
clc
mov
out
jge
lock
push
fldl
in
imul
xlat
scas
ljmp
cmp
cmp
mov
mov
cmp
push
imull
xor
shr
in
xor
roll
out
xor
and
cmp
push
cmp
mov
packuswb
jo
int3
cld
shrb
test
mov
push
fdivrl
mov
aam
cwtl
xchg
enter
scas
push
mov
jl
pop
add
xchg
shlb
push
dec
sub
enter
and
add
adc
push
mov
add
adc
push
andb
movb
stos
mov
dec
dec
jno
mov
in
inc
add
adc
jmp
int
push
pop
fwait
add
daa
xor
shll
xchg
xchg
cltd
mov
outsb
sbb
mov
sbbl
pop
divl
dec
dec
mov
or
in
sar
daa
lods
mov
xor
mov
xor
mov
std
rorb
sbb
sub
xchg
inc
push
lahf
add
popf
test
or
sbb
xchg
std
mov
push
xor
lcall
in
lods
xor
sub
shlb
movsb
inc
dec
orb
hlt
pop
mov
dec
add
cmpb
push
outsb
mov
mov
add
push
mov
xchg
mov
xchg
fnstsw
outsb
push
xchg
in
add
adc
lods
mov
pop
dec
les
dec
and
or
pop
inc
scas
dec
cmp
std
hlt
test
dec
xchg
inc
pop
inc
adc
inc
cwtl
rcl
mov
sub
out
imul
push
inc
in
stos
sub
mov
xor
mov
lcall
fists
addr16
test
lret
mov
dec
in
dec
xchg
lret
enter
mov
and
aad
pop
push
inc
lds
and
lcall
mov
iret
frstor
fcomps
and
lea
iret
popa
scas
pushf
shr
dec
daa
sbb
fwait
mov
and
cmpsb
cmpsb
mov
in
xor
mov
xor
sarb
ret
es
cmp
xchg
mov
fisubrs
adc
pop
inc
dec
in
xchg
push
jno
or
jmp
call
jno
push
cs
jg
sub
adc
mov
rorb
sub
pop
add
frstor
arpl
ret
ja
sbb
xor
jmp
mov
pop
aam
inc
sbb
mov
pop
jge
or
cs
filds
cmp
movsl
imul
inc
pop
pop
xchg
insl
xlat
cmp
xor
pop
dec
addr16
cmc
xor
mulb
icebp
sub
mov
pop
cli
sbb
push
dec
dec
add
adc
shrl
popf
cmp
mov
loop
fadd
cmp
sub
fcompl
roll
adc
jg
inc
lea
mov
or
sbbl
fsubp
xchg
jl
mov
cld
test
insl
out
pop
lds
pop
fstpl
jmp
xlat
sbb
pop
mov
or
xor
xchg
lret
mov
dec
insb
inc
lods
jae
xchg
enter
pop
xchg
xchg
push
pavgb
sbb
std
icebp
sub
sbb
xchg
leave
dec
aam
mov
mov
pop
and
in
xchg
mov
cmp
stos
xchg
lret
insb
lret
ss
ss
dec
test
add
pushf
and
xor
out
and
hlt
inc
jecxz
pop
xchg
xchg
sub
out
es
cmp
cwtl
adcl
pop
pop
cmp
sti
jl
jno
out
or
movsl
testl
push
add
movsb
dec
jo
add
sub
in
pop
out
clc
push
aas
clc
dec
adc
rcll
roll
inc
ds
mov
movsl
daa
or
jb
and
sar
xor
jmp
jmp
std
jb
xchg
into
fidivrs
xchg
adc
mov
sbb
adc
mov
jbe
mov
xchg
and
aaa
add
push
adc
fbstp
sbb
jge
sbb
jle
sub
cmp
mov
addr16
cmp
add
lds
repnz
jmp
rol
jbe
mov
sub
cmpsb
adc
mov
jnp
out
dec
inc
imul
sbb
test
imul
inc
push
out
stos
or
popa
addb
add
push
push
shll
xor
hlt
and
adc
jae
jnp
mov
ret
mov
fisubs
inc
mov
xor
scas
jle
fs
push
imul
enter
mov
fdivs
xchg
test
mov
lea
cmp
cmp
jno
fimull
jns
popl
out
add
jno
mov
in
mov
or
jp
imul
inc
xchg
jmp
pop
sbb
jmp
sbb
punpckhdq
lods
test
adc
adc
pop
xor
pop
je
out
leave
cmp
mov
insb
je
pop
jnp
je
cmp
nop
fsubp
pop
inc
push
imul
xor
pop
xor
jl
ret
mov
sahf
call
cmc
inc
jae
and
sbb
loop
stos
popa
sub
mov
nop
mov
in
mov
add
loopne
enter
fcmovne
ret
es
test
loop
pop
cltd
fbstp
outsb
pop
lock
xchg
mov
js
xchg
out
fisttpll
cmc
and
mov
rol
in
in
dec
test
imul
mov
aas
out
and
sar
xor
xchg
fs
mov
test
out
fdiv
jp
mov
mov
pushw
pushl
popa
loopne
pop
and
ror
cmpsb
cmp
push
mov
push
fildll
push
adc
push
push
pop
bound
xchg
nop
test
in
push
lret
add
mov
push
hlt
xor
imul
lret
mov
cmp
jl
xor
loopne
fcomps
xchg
jl
cld
add
pop
jp
cmc
icebp
sub
pop
repz
mov
icebp
push
dec
xorl
and
or
inc
movsl
lods
inc
popl
pop
mov
inc
sub
fnstenv
mov
xor
push
and
adc
sub
aad
mov
ret
imul
mov
popf
loop
push
mov
into
pop
leave
loop
adc
mov
mov
jl
inc
sahf
inc
mov
mov
sti
inc
fwait
inc
test
in
imul
bnd
cmc
jp
rorb
cli
pop
mov
mov
xchg
insb
repz
xchg
pop
data16
adc
test
push
xor
mov
mov
adc
lock
xchg
and
adc
test
sahf
into
inc
jb
inc
mov
int
sub
imul
xor
andb
hlt
psubusb
bound
xchg
pop
into
jge
int
jae
enter
adc
cwtl
xchg
jp
cmp
je
cmp
sub
or
push
insl
frstpm(287
adc
xchg
mov
xchg
test
xchg
out
add
arpl
out
push
or
pop
mov
fsubl
and
pop
dec
cwtl
sti
sub
mov
mov
xor
repnz
add
lret
mov
ret
std
stos
jp
lock
xchg
inc
addr16
roll
mov
test
fstpl
inc
rorl
loope
in
aaa
lods
jnp
mov
ljmp
std
das
fs
fst
mov
loope
jle
arpl
pop
xchg
pushl
popf
scas
mov
inc
fsubrp
adc
mov
lret
outsl
add
popa
cmpsb
cmpb
push
idiv
jno
lock
jmp
aas
xor
mov
mov
test
mov
hlt
xchg
adc
cmp
fimuls
and
or
dec
jns
lret
adc
dec
js
push
iret
popa
mov
jl
adc
int3
or
int3
sahf
or
movb
xlat
inc
xchg
adc
fwait
lock
mov
mov
mov
in
into
xchg
mov
push
and
inc
cmp
pop
pop
imul
call
sahf
sub
repnz
leave
imulb
dec
cmp
mov
sub
or
pop
push
repnz
mov
sbb
out
stos
inc
ret
ss
mov
or
cmp
outsl
into
lret
add
cmc
ljmp
mov
adc
and
icebp
cmc
cmp
jae
adcl
xor
mov
aad
xor
xor
pop
sub
dec
pop
in
and
iret
je
mov
adc
call
adc
pushf
call
cli
stos
xchg
ds
mov
cwtl
mov
and
sti
jle
nop
dec
aas
pop
nop
mov
sub
sbb
and
sbb
sarb
sub
inc
inc
or
aad
aaa
stos
cmp
test
sub
or
shrl
mov
in
xchg
adc
in
push
dec
xor
adc
dec
inc
mov
cmp
out
pop
popa
xlat
mov
leave
out
fidivrs
push
pop
sub
adc
sub
push
rcll
addl
jg
in
mov
cmpsb
ja
sub
pop
xor
stos
loopne
dec
in
add
cltd
mov
adc
cmp
mov
dec
icebp
mov
nop
test
adc
mov
out
sub
add
pop
push
movsl
pop
out
jl
nop
aaa
orb
and
mov
mov
xlat
mov
sbb
into
and
cmp
xchg
sub
jecxz
pushf
stos
es
fs
jg
ds
fs
orb
test
fldl
cmpsl
add
adc
hlt
xchg
rorb
andl
pop
dec
lea
add
dec
push
mov
cs
int
or
mov
xor
dec
fcomp
adc
mov
sarl
lds
sbb
xchg
enter
sbb
add
test
ret
xchg
dec
inc
into
mov
aam
and
sub
mov
add
fsts
movsl
jecxz
into
cmp
cmp
jecxz
ficompl
and
insb
and
inc
or
ljmp
push
mov
test
test
xchg
sbb
and
sub
cs
data16
jns
jb
mov
mov
lds
xchg
pusha
push
lds
mov
mov
popf
nop
repnz
push
push
mov
push
out
out
xor
and
push
rcl
es
inc
mov
sbb
stc
or
aad
add
sub
jae
cmp
fists
fwait
inc
call
or
mulb
divb
outsl
shrb
cmp
pop
pop
adc
lds
decl
push
je
and
add
aas
test
shlb
stos
jb
cwtl
lods
ljmp
pop
or
add
mov
xor
sub
lcall
pop
aam
dec
inc
fs
push
dec
mov
cltd
ss
pop
sub
or
loop
add
add
addl
xor
out
loop
sbb
lods
daa
xchg
cmp
mov
jmp
sub
shlb
pushf
repnz
mov
stos
dec
sbb
lcall
icebp
stos
inc
push
insb
push
ljmp
mov
add
add
mov
push
cli
or
add
xlat
in
xchg
ljmp
sbb
and
loopne
mov
push
jmp
lds
mov
or
movsl
xor
xchg
cmp
push
fidivs
add
dec
inc
lret
mov
fcmovnu
daa
mov
cltd
pop
cltd
inc
lods
jne
js
shl
bound
ljmpw
add
or
adc
loopne
loop
pop
sahf
jecxz
mov
dec
mov
test
or
sbb
addr16
aam
addb
cmp
and
aaa
xor
inc
xchg
mov
stos
ss
xchg
cltd
mov
push
and
rcrl
pop
sti
jecxz
cld
mov
hlt
cmp
mov
fsub
es
jecxz
lds
pushf
mov
jnp
xor
push
mov
adc
jmp
mov
pop
dec
jno
mov
jle
mov
push
lret
dec
or
xlat
dec
pushf
pop
out
adc
ret
adc
aaa
lret
push
or
scas
ljmp
fsts
outsb
gs
dec
dec
and
aas
fists
lea
bound
jb
pop
mov
cmp
push
and
xchg
mov
in
mov
xchg
fistpl
movsl
push
cmp
xor
movsl
add
in
xchg
int3
cmpsb
or
hlt
mov
fistpl
pop
push
adc
jbe
add
addl
mov
mov
insb
xor
mov
sub
add
mov
mov
push
scas
or
fldenv
aas
ljmp
xchg
int3
fdivl
cmp
and
xchg
dec
jle
js
mov
pop
daa
mov
andb
dec
sbb
ss
repz
aas
test
xor
rorb
push
out
jl
cwtl
sti
pop
sub
movaps
in
je
aas
dec
and
aad
stc
pop
mov
adc
inc
aam
repnz
mov
push
shlb
dec
xor
xchg
sarb
iret
and
and
push
sub
pop
lods
sub
add
sbb
ja
sbb
mov
lea
cmpsb
stos
xor
dec
rorl
xchg
mov
mov
sub
and
ret
inc
mov
pop
xor
mov
icebp
iret
in
aam
xchg
cmp
pop
in
mov
mov
lods
int3
in
cmp
dec
lret
flds
jae
sbb
and
pop
ss
push
cmp
jns
lds
or
mov
and
push
sub
inc
dec
jnp
and
push
and
cmp
sub
xchg
in
pop
test
push
inc
data16
sbb
inc
push
insl
jge
pop
bound
xorb
fistps
in
pusha
stos
sub
imulb
cmc
outsl
cmp
inc
divl
inc
lahf
pusha
add
nop
fdivl
lahf
inc
cmpb
xor
test
and
insb
pop
gs
movsb
sbb
daa
mov
and
jno
ja
xchg
add
inc
mov
dec
sub
icebp
movsl
out
adc
in
lock
pop
push
mov
and
in
push
jno
jmp
mov
pop
scas
xchg
cltd
mov
ret
cld
xor
call
arpl
cmp
mov
in
and
sub
mov
cmp
push
inc
call
ja
pushf
mov
dec
nop
pop
push
pop
push
rcrl
ds
jnp
xchg
add
insl
cld
adc
mov
pop
adc
fnstcw
cmpl
insb
pop
xchg
cmp
mov
xchg
pop
adc
pop
movb
fcompp
jge
jl
add
iret
ss
xchg
stos
fcoms
pop
mov
inc
andnps
mov
sub
clc
mov
cmc
aaa
mov
inc
or
std
ret
cmpsl
aam
add
f2xm1
cmp
nop
push
jl
pop
cwtl
mov
jmp
pop
xchg
push
jge
jmp
xchg
mov
mov
ss
push
push
cltd
ss
mov
scas
sarb
das
cmpsb
cli
or
jmp
jle
fcoms
das
ds
pushf
les
test
add
mov
aas
and
mov
pop
mov
mov
mov
adc
sahf
out
mov
iret
xchg
mov
xchg
push
aam
jne
xchg
dec
mov
sub
cmc
jl
stos
pop
or
and
sbb
sub
adc
les
inc
pop
or
xchg
lcall
or
xchg
sub
imulb
adc
lea
outsl
xor
lods
mov
pop
inc
insl
aas
in
lret
sbb
dec
clc
in
cmpsb
jb
loopne
decl
cmp
mov
mov
daa
imull
lock
gs
jl
popa
cwtl
mov
in
and
sub
add
mov
mov
pop
push
sbb
mov
ret
jle
and
aas
inc
in
mov
or
xchg
fildll
mov
jecxz
rol
or
inc
pop
mov
mov
loop
cmp
insl
push
mov
fwait
out
cld
or
movsb
and
jmp
xor
ljmp
mov
nop
fisttpll
shll
jb
into
and
sub
jecxz
push
pop
add
mov
xchg
fwait
dec
rolb
js
addl
jle
ret
out
popf
cli
js
in
push
lea
sbb
xchg
icebp
scas
pop
stos
jns
scas
repnz
insl
dec
incb
out
cmpsl
aas
fwait
js
cmp
scas
lahf
subl
cmp
pop
in
lea
xor
popf
call
xchg
fdivs
and
pushf
add
jae
in
dec
insl
outsl
out
loop
and
adc
or
jge
loop
xchg
lds
mov
lcall
push
jbe
xchg
iret
sbb
fistpll
add
mov
inc
adc
add
rcll
jg
jecxz
sbb
xor
ret
or
pop
xchg
xor
jmp
outsl
add
sbb
and
or
cmp
jmp
adc
push
mov
js
andl
inc
sub
subl
add
mov
jne
fstp
test
sbb
mov
dec
jbe
push
mov
loope
int3
pushf
insl
sub
fs
arpl
mov
sub
ftst
out
pop
lds
mov
mov
mov
push
shrb
subl
fldt
jg
ret
lret
inc
inc
cltd
jbe
xor
inc
cmc
scas
adc
insl
add
insl
add
pushf
cmp
mov
es
jge
adc
lods
loop
sub
iret
ljmp
push
int3
mov
popa
mov
sbb
pusha
fimuls
cmp
fcomp
fisttps
jae
jbe
pop
sub
jb
mov
xchg
sbb
insl
stos
sbb
jae
or
enter
loopne
xchg
cmp
pushf
xchg
mov
cmp
jae
test
imul
cmp
and
dec
lods
arpl
arpl
or
jb
sbb
cmp
mov
cmp
sub
jns
pop
fnstsw
sbb
ret
ja
mov
pop
outsl
xchg
cmp
outsl
push
inc
lods
mov
xchg
dec
fimuls
adc
jo
pusha
andb
dec
bound
gs
sahf
aam
jno
cli
call
add
add
pop
sbb
test
in
push
insb
inc
dec
or
mov
and
nop
lods
xor
sbb
mov
call
mov
push
call
mov
fldenv
sbb
rcrl
push
lds
push
xor
xchg
push
push
cs
repz
outsl
and
fstl
mov
pushf
and
pop
cld
mov
and
cltd
arpl
rcr
pop
mov
cmp
lret
cmp
mov
mov
imul
mov
cld
repz
pop
negl
and
push
cli
sbb
mov
lods
add
aas
clc
fs
sub
xchg
daa
dec
lret
stc
xchg
cs
imul
jecxz
dec
pop
xlat
lea
lock
push
in
and
out
jl
sbb
pop
loope
movsl
cmpsl
sub
jbe
dec
test
subl
or
push
shlb
jns
jno,pn
mov
push
push
dec
jge
out
xor
divl
cwtl
xchg
rorb
cmp
sub
hlt
sarb
imul
pop
dec
mov
cwtl
mov
sar
pop
ror
pop
nop
add
mov
xor
mov
dec
sub
mov
out
out
xchg
sbb
or
mov
sti
and
int3
xor
adc
fsub
mov
mov
js
out
inc
outsb
dec
stos
daa
lods
or
adc
sub
lock
push
int
jns
inc
mov
adc
push
and
pop
nop
fwait
aad
jno
inc
pop
jecxz
not
jns
and
es
mov
aas
notb
xchg
mov
xor
cld
xor
je
lahf
push
and
in
inc
or
jecxz
add
jno
addb
mov
pop
mov
fstpl
aam
xor
mov
sbb
bound
adc
aas
jo
pop
in
clc
enter
cmp
pop
fnstenv
shrl
mov
mov
fsts
scas
and
sbb
cmp
add
shlb
pop
dec
movsl
adc
adc
sbb
lds
jmp
sub
es
jnp
sub
fstpt
sbb
sub
int
push
nop
push
rcrl
insb
push
insb
stc
aas
mov
mov
mov
lcall
jbe
lock
stc
loope
mov
jle
stos
cmc
add
mov
xchg
mov
dec
or
cmp
and
clc
adc
inc
sbb
push
ja
sbb
and
ret
sub
mov
dec
mov
negb
push
mov
fdivs
add
push
outsb
shlb
pop
inc
mov
lcall
xor
out
mov
xor
cs
movsb
sbb
sbb
add
fmull
push
push
js
mov
jmp
cmp
ret
cwtl
jmp
add
mov
fidivs
ror
inc
shrb
icebp
fidivl
aad
xor
dec
mov
inc
and
mov
pop
xor
mov
pop
adc
gs
ljmp
addl
in
das
mov
xorl
rcrl
adc
test
push
arpl
fs
xchg
les
jb
shlb
jae
enter
xchg
sub
out
xor
mov
outsl
cmovp
and
push
test
xchg
es
sbb
sahf
mov
out
repz
sub
lea
cmpsb
cmp
clc
rcrl
scas
movb
mov
lahf
adc
je
movsl
jmp
push
xchg
dec
ds
mov
mov
sbb
int3
xor
xor
sub
mov
add
xchg
jno
daa
inc
test
dec
test
dec
add
cltd
xchg
mov
int3
xchg
push
dec
pop
and
mov
push
cmp
dec
lea
add
fwait
adc
loope
subl
pop
vpsrld
add
lret
push
and
out
stos
adc
and
fcom
add
mov
fisttpll
fucomip
js
mov
mov
mov
mov
loopne
sbb
cmpsl
inc
pop
sahf
daa
cmpl
xor
insl
das
lret
cwtl
stos
ret
xchg
fdivs
pop
lret
mov
std
add
movsb
in
mov
inc
mov
and
inc
add
aaa
mov
std
fiadds
jmp
js
in
js
mov
xor
clc
sub
sub
aad
jg
mov
cmc
mov
mov
stos
dec
xor
jnp
xor
mov
mov
imul
shll
sbb
push
pop
in
jg
mov
and
sti
and
dec
icebp
add
pop
xlat
or
add
mov
jb
roll
repnz
adc
and
fs
insl
jne
add
lods
call
jno
arpl
aaa
lds
movsl
popa
jmp
in
push
jl
shr
xor
mov
loope
pop
test
mov
jp
sbb
divl
inc
mov
mov
aas
lret
add
out
scas
ja
dec
movsl
jne
lret
pop
rclb
test
subb
clc
mov
popf
pop
inc
int
dec
and
cmpsb
mov
cld
mov
add
es
jmp
cmp
mov
adc
push
movsl
mov
jg
mov
or
sarb
inc
dec
adc
or
push
and
pop
dec
mov
or
xchg
xchg
cmp
dec
fmull
pop
sub
cs
add
dec
mov
fstl
sub
pop
push
mov
dec
dec
das
inc
add
ret
xchg
loopne
aaa
jbe
inc
cmp
call
movsl
xlat
inc
jge
pop
mov
sbb
ljmp
popa
push
lcall
lods
cmpb
jbe
sub
loop
dec
push
inc
mov
dec
cmpb
testb
cmp
daa
and
xor
jo
imul
or
lahf
mov
sbb
arpl
adc
inc
ja
js
subb
lret
adc
ss
bnd
lret
adc
in
jle
xor
fmuls
mov
sbb
rclb
call
insb
xor
xorb
inc
insb
insb
pushf
adc
rcrb
dec
sub
push
sub
fisubrl
iret
dec
or
movb
or
mov
fs
stos
movsl
adc
aad
adc
insb
add
push
popf
sub
mov
push
cmp
ret
inc
xor
push
movsl
and
xchg
fucomp
mov
cmpsb
je
push
insb
jmp
out
lret
sbb
dec
xchg
jbe
in
ret
adc
cmpsl
dec
add
and
sbb
sbb
je
xlat
iret
or
stos
jae
dec
ret
jl
or
pop
lods
xor
xor
ja
inc
pop
iret
mov
bsf
mov
inc
adc
pushw
in
mov
add
aas
in
cmp
mov
sti
fstps
in
bound
mov
mov
sbb
cmp
addl
hlt
inc
inc
pop
in
push
dec
pop
mov
mov
mov
or
push
pop
fcoml
xor
not
loop
sbb
mov
jp
pop
in
mov
rolb
add
aam
cli
aaa
dec
and
mov
mov
scas
hlt
sub
dec
movsb
aas
mov
inc
jecxz
adc
or
lret
jb
ss
mov
mov
or
ror
addl
jmp
sub
dec
ss
lock
ja
mov
adc
frstor
and
sub
mov
movsl
xchg
test
filds
mov
fists
shll
nop
enter
mov
ss
push
aam
cld
pop
or
rcrl
lock
dec
xchg
mov
jno
cmpl
xlat
add
subl
call
imul
mov
xchg
mov
cmpsb
and
cmp
adc
or
add
add
sbb
mov
jno
pop
add
sbb
jle
xchg
mov
incl
sbb
pusha
pop
mov
mov
ja
or
jae
mov
notb
fidivs
aaa
dec
xor
data16
mov
pop
out
ret
push
lock
jp
repnz
and
sbb
push
jp
nop
pop
pop
out
xor
out
in
scas
stos
in
xchg
cmpsl
stos
jns
notl
sub
push
add
add
mov
imul
push
shll
dec
lret
fidivs
andl
fsubp
xchg
shlb
in
cmp
inc
sub
divl
jle
sbb
std
scas
lea
mov
stos
into
xchg
xor
mov
popf
cmp
outsb
out
sbb
jb
int3
push
jp
les
pop
push
sub
mov
xor
and
push
or
pop
test
push
add
js
stc
pop
repnz
cmpsl
push
pop
das
cmp
lret
cmp
and
pop
xchg
es
sbb
mov
daa
test
add
lret
fsts
xchg
lret
add
out
fucomip
mov
pusha
mov
ja
out
std
dec
lea
pop
mov
sbb
in
ljmp
push
pop
mov
cli
push
sbb
dec
test
outsb
xchg
adc
std
jb
jl
mov
and
popf
jmp
out
andl
dec
pop
sub
lds
mov
cmpsb
adc
loop
mov
stos
pop
jno
rclb
js
xchg
lret
cmp
pop
sub
xor
aam
adc
loopne
mov
andb
jp
pop
sbb
mov
roll
mov
ja
aaa
adc
movsl
mov
jnp
cmpsb
dec
dec
es
sti
add
mov
punpckhwd
test
bound
lock
or
mov
and
mov
subb
cld
roll
pop
push
pop
les
shll
and
or
pop
mov
add
push
pop
or
clc
scas
ret
jg
mov
test
jnp
je
lods
popa
push
in
repz
pop
ret
in
push
and
cltd
mov
xor
adc
mov
pop
adc
cmp
push
scas
call
mov
std
cli
mov
mov
shll
aas
and
in
add
mov
addr16
and
xlat
add
cltd
loope
xor
or
test
dec
mov
in
andl
pushl
std
cs
jmp
pop
mulb
add
pop
popa
adc
outsb
sbb
mov
add
cli
aas
pushf
or
inc
cmpsl
loop
sub
xorb
sbb
sbb
pop
loop
pop
mov
fisubl
movl
int3
not
fsubl
push
mov
aas
xor
mov
cwtl
imul
adc
orb
add
jp
cs
fiadds
or
inc
test
and
cmpsb
adc
aas
imul
fcmove
dec
pop
cmpsb
test
jns
mov
fsubs
adc
dec
xchg
mov
loope
leave
or
fsubs
lea
xor
adc
or
adc
mov
xorb
xor
sbb
ss
mov
add
fnclex
fbld
cmp
sbb
or
mov
negb
push
or
out
cwtl
adc
sub
arpl
rcrb
mov
xchg
cmp
add
sahf
sbb
and
and
mov
fisttps
adc
pop
repnz
inc
pop
xchg
sub
scas
push
data16
inc
dec
aaa
jnp
inc
loopne
pop
daa
sub
jno
xor
jg
jp
jp
mov
xor
pop
repz
rorl
push
out
std
pop
ficoml
icebp
mov
mov
push
adc
nop
jge
out
sbb
andb
adc
aad
jl
mov
sbb
mov
sbb
push
ret
stc
mov
popa
scas
daa
add
cmp
lahf
xchg
push
sbb
out
icebp
dec
shll
scas
int
lret
cmpsl
int3
rcr
mov
jle
ja
into
fnstenv
std
ljmp
out
mov
scas
sahf
jg
loope
cld
cli
jo
fidivrl
sub
xchg
popf
jbe
inc
dec
jge
ret
mov
cmp
lahf
jmp
mov
xchg
adc
arpl
xchg
insl
fadd
dec
ja
pop
aam
pushf
push
sar
sub
rcrb
lret
mov
mov
or
mov
xor
add
push
lea
out
call
gs
ss
push
push
fwait
sub
notb
mov
in
xchg
out
lods
xor
mov
adc
add
test
sbb
push
in
lods
xchg
push
mov
cmp
jb
or
nop
mov
adc
jge
jle
jecxz
dec
inc
push
pop
sbb
mov
clc
xor
icebp
push
test
iret
cli
cwtl
sub
mov
hlt
push
lock
ret
add
hlt
fsubs
leave
js
inc
pop
cmp
inc
or
cmpsl
dec
sub
jl
jns
shrl
stos
psrlq
inc
ja
bound
pop
or
push
test
sbb
xchg
cmp
sub
inc
cmpsl
movsb
mov
mov
test
jecxz
das
adc
outsl
jmp
test
mov
lds
daa
dec
lock
incb
leave
inc
cltd
into
pop
and
ja
jmp
in
imul
dec
add
cmpsl
inc
and
dec
pop
xchg
popf
mov
lahf
scas
push
iret
dec
sub
out
mov
aas
movsl
inc
ds
or
jnp
mov
or
jae
dec
push
or
nop
pop
fwait
lcall
pop
inc
shrb
fisttps
pop
sub
adc
flds
and
mov
decb
sti
sub
jp
icebp
push
cmp
mov
cmpsl
sahf
fisttpll
pop
outsb
inc
mov
mov
pop
into
cmc
fcomps
scas
jae
ljmp
jne
add
int
lahf
jnp
jl
sbb
pop
and
loope
test
pop
pop
sub
inc
adc
pusha
push
and
or
cld
mov
fildl
lea
pop
js
add
loopne
dec
push
enter
mov
xor
or
fistpll
daa
cwtl
and
inc
pop
mov
mov
pop
in
lret
nop
mov
stos
movb
push
jbe
mov
sub
push
ret
inc
sbb
push
jg
mov
push
int3
aam
xor
bnd
mov
jmp
pop
pop
aaa
int
push
mov
xlat
lock
jle
pop
or
into
repz
fildll
cmp
inc
dec
enter
stos
bound
xor
fisubrs
xor
int
outsl
mov
dec
add
iret
add
aad
lret
pushf
xchg
cli
aad
dec
lcall
xor
loopne
popf
nop
pop
and
xchg
sbb
js
mov
mov
outsl
out
inc
push
scas
push
div
repnz
inc
sbb
push
arpl
pop
int3
ret
and
hlt
test
test
pop
pop
and
out
jecxz
popf
repnz
or
lret
dec
jo
mov
aad
int3
lods
daa
test
adc
dec
andb
pushf
push
adc
lcall
not
pusha
test
push
shll
mov
shlb
test
pop
setg
jmp
sub
nop
jns
jecxz
push
ds
cmpsl
inc
bswap
adc
mov
cmpsb
sub
stos
loope
mov
mov
mov
mov
pop
jno
xchg
jmp
sti
insl
mov
sub
mov
pop
rcll
dec
into
mov
mov
mov
shll
add
setnp
lahf
dec
int3
aaa
xor
and
repz
fldcw
or
adc
inc
mov
je
outsb
add
and
xorb
rol
mov
jns
inc
xor
xchg
mov
or
js
nop
adc
test
pushf
lea
cli
mov
mov
leave
sbb
lret
jecxz
movsb
xchg
jb
cli
pushf
cmp
pushf
lods
pop
aaa
icebp
and
gs
push
dec
lods
add
mov
in
push
mov
cmpsb
les
dec
fadds
and
xor
repz
jecxz
mov
jns
cmc
pop
call
mov
and
push
jle
add
push
cwtl
xlat
ss
sbb
jp
rcrb
sub
inc
nop
popf
mov
sub
mov
dec
cmc
cli
out
rcrl
les
sub
jo
out
imul
jnp
cmpsl
and
xor
shr
loope
lock
mov
sub
ja
icebp
insb
cs
pushf
mov
andb
loope
movsl
cmp
pop
xchg
sti
int3
sbb
adc
ljmp
mov
jg
mov
out
inc
mov
icebp
icebp
lret
sti
mov
sub
loop
test
and
test
scas
add
hlt
xlat
rcrl
dec
xor
test
pop
mov
stos
xor
stos
js
push
cld
xchg
js
add
xchg
mov
dec
enter
test
scas
adc
push
jg
mov
test
mov
push
xchg
sarl
push
cmp
aad
sbb
mov
lods
rorl
mov
sti
sti
mov
inc
lds
stc
inc
pop
sub
mov
xchg
out
lods
or
into
xor
hlt
cmp
lret
adc
xor
sub
stc
mov
mov
sbb
fisubrs
int3
in
pop
xor
call
jmp
jbe
ds
xchg
sti
lea
lcall
xchg
rorb
push
pop
add
xchg
hlt
add
sarl
xor
pushl
push
lcall
inc
pop
push
or
clc
and
xchg
mov
je
inc
rolb
enter
ret
lret
fs
ret
rclb
jle
mov
and
popf
test
test
shl
adc
insl
jb
imul
test
je
in
cld
add
and
cmc
xchg
or
sbb
stc
cmp
and
mov
faddl
nop
rcrb
mov
inc
enter
out
xor
fidivl
enter
dec
dec
scas
mov
xor
sbb
cli
mov
sub
notb
mov
fidivl
jl
sti
mov
fistl
repz
je
pushf
stc
lods
xor
roll
out
jbe
out
test
jle
push
adc
lret
sbb
or
sti
or
out
sbb
mov
add
addl
into
sbb
jp
pop
test
xchg
aam
inc
subb
push
lret
xlat
cs
test
testl
mov
loope
sahf
mov
bnd
roll
lock
je
xor
or
icebp
stc
lret
sti
dec
enter
add
je
xchg
xchg
and
jl
mov
stos
jmp
xchg
jg
dec
ss
xor
lods
cmp
sbb
in
pop
mov
mov
pop
mov
cld
adc
cmc
jle
int
inc
inc
out
jmp
in
inc
ficoms
filds
fs
arpl
fs
add
sbb
divb
scas
imul
xchg
pop
loopne
cwtl
sub
cmp
sub
adc
test
dec
dec
cmp
je
xor
mov
stos
mov
rolb
mov
xchg
or
fstl
jnp
mov
mov
cmp
mov
jl
xchg
mov
jns
aas
sahf
stc
mov
cmp
faddl
aaa
xchg
inc
movaps
cmp
sub
int3
ret
jb
xlat
mov
insl
icebp
lcall
push
mov
adc
or
nop
xorl
mov
lods
xchg
mov
arpl
adc
mov
mov
mov
dec
shl
cmc
sub
dec
sub
stc
call
inc
push
jle
imulb
pop
jb
sbb
mov
idivl
jns
cmp
pop
mov
nop
jae
aam
xchg
xchg
add
popf
push
stos
clc
dec
sub
in
in
repz
sub
cmp
push
sub
lahf
int3
jge
out
scas
dec
into
add
mov
test
and
imul
roll
in
es
xchg
das
js
frstor
cmp
mov
cmp
mov
leave
test
cwtl
xor
data16
pop
dec
sub
push
jecxz
inc
sbb
in
or
adc
sbbb
mov
imull
xor
mov
fcompl
mov
fwait
dec
and
out
dec
ja
push
stos
inc
std
pop
imul
push
bound
ficompl
sub
push
xor
std
jl
filds
out
fbstp
lds
bound
test
test
iret
jo
and
test
stos
loopne
fs
in
imul
adc
ficoml
fwait
int
bound
jno
mov
cld
mov
stos
mov
test
mov
and
add
mov
adc
or
shll
sub
pop
lods
movsb
iret
rorl
jb
call
ss
mov
mov
ret
popa
sti
mov
pop
fwait
lret
mov
lret
cmpsl
idiv
loope
push
cmp
adc
cmpsl
sub
andl
loop
jae
fnstsw
iret
jg
ffreep
sbb
es
xor
int
xchg
mov
fcom
add
fisttpll
pop
sub
xor
dec
cwtl
imul
arpl
bound
pop
mov
sbb
loop
ds
jge
bound
sub
test
insl
loop
xor
sti
mov
in
sbb
mov
or
into
pop
mov
mov
or
fwait
das
out
outsb
out
push
call
mov
aas
sub
sbb
aaa
push
xchg
jne
xor
daa
mov
pmulhw
outsb
lret
lods
jp
idivl
or
xor
pop
pop
dec
dec
add
lcall
add
mov
adc
leave
bound
roll
sbb
fsubl
inc
and
mov
xlat
jnp
dec
pusha
fcompl
xor
sbb
add
and
sbb
xchg
int
xchg
mov
fcom
add
fisttpll
outsl
adc
push
mov
test
fstps
cmp
sarl
std
or
mov
xor
sarl
cmpsb
inc
pop
pop
in
loopne
out
outsb
add
sbb
in
mov
bound
push
jg
sbb
adcb
in
imul
lock
mov
and
testb
imul
adc
dec
fbld
sbb
mov
cmp
sub
inc
lret
mov
insb
and
out
clc
xor
mov
gs
pop
arpl
ret
outsl
add
out
lods
mov
push
mov
mov
popl
aam
push
jb
inc
inc
ds
sub
bound
push
xor
repz
ljmp
xchg
mov
sbb
dec
xchg
fimuls
into
js
loopne
test
insb
push
jmp
xlat
dec
sbb
cmpb
xorl
jmp
and
adc
lock
or
push
loop
fldenv
jmp
pop
push
divb
roll
pop
inc
int
push
mov
sbb
adc
test
popf
pop
dec
push
add
xchg
rol
lcall
sbb
lahf
daa
mov
push
push
or
dec
sub
sub
in
insl
inc
dec
sub
cmp
sub
ffreep
sbb
sub
cld
lret
popf
hlt
out
stos
rsm
jg
mov
and
hlt
fs
fiadds
mov
dec
mov
adc
cmp
jecxz
call
pushf
aas
mov
leave
xchg
scas
popa
jno
in
dec
test
je
imul
ja
jmp
push
mul
arpl
push
mov
lea
add
mov
cmp
dec
xor
rolb
mov
fldt
stos
shrl
or
out
loop
movsl
xchg
mov
jge
loop
rorb
mov
stos
lret
lret
mov
push
mov
dec
outsl
dec
clc
stos
scas
push
je
jno
or
notl
dec
xor
inc
push
pop
iret
mov
xor
adc
fldenv
nop
filds
inc
lods
and
xrelease
negl
sbb
xor
adc
or
xchg
popa
stos
in
push
shll
out
or
fimull
fbld
es
and
adc
movsb
xchg
mov
mov
cmpb
daa
int
push
push
popf
and
inc
or
les
inc
cbtw
das
inc
aaa
in
dec
popa
pop
xchg
data16
out
or
xchg
clc
pushf
sbb
cmp
cmc
pop
stos
xchg
iret
or
cli
and
hlt
cmp
aam
sar
das
jno
mov
movsb
daa
xchg
je
or
cmp
dec
xor
notb
and
les
jp
push
lods
femms
jb
add
cs
cmp
in
mull
arpl
adc
je
adc
scas
push
lahf
negb
xchg
test
pxor
add
mov
lcall
cmp
insl
loope
out
lock
pop
mov
lahf
cmpsl
xor
xor
pop
adc
mov
imul
mov
lock
rcrb
pushf
jbe
sub
popa
mov
fisubs
gs
gs
push
aad
push
sbb
cmp
std
and
mov
rclb
push
xchg
pop
les
dec
dec
lock
cmp
dec
outsl
cmp
ja
xor
mov
inc
test
pop
pop
xor
push
mov
hlt
lahf
jecxz
cmpb
fists
sub
sbb
add
sahf
imul
imul
leave
cltd
lret
scas
out
and
jae
cmp
jbe
mov
mov
and
mov
outsb
imul
popa
jmp
jmp
loopne
incl
in
push
stos
mov
cltd
testb
push
sbb
orl
add
xchg
mov
xchg
les
stos
outsb
or
pusha
dec
xchg
fucomip
sbb
jns
out
cltd
das
and
mov
adc
ret
add
xchg
gs
and
mul
sub
add
imul
popf
test
jmp
fcmove
cli
xor
bound
fmuls
es
mov
pop
mov
movsb
xchg
movsb
xor
cli
outsb
dec
pop
push
xchg
pop
jnp
jmp
lcall
insb
inc
shll
dec
cmp
cmp
or
push
dec
leave
lahf
adc
in
mov
lods
mov
call
or
or
mov
sbbb
das
std
loop
jmp
dec
stos
call
adc
mov
adc
xchg
out
sti
sbb
pop
add
cmp
aam
lea
stos
call
push
mov
outsb
dec
mov
popf
jo
sub
mov
sbb
push
xchg
jb
es
mov
jo
gs
mov
pop
imul
mov
inc
ljmp
cli
pop
lcall
aad
gs
push
dec
sub
xchg
shrl
aas
int3
cmp
test
repnz
pop
push
pop
dec
cmp
sub
dec
cmp
les
insl
mov
xchg
popf
pushf
jns
lret
lahf
jecxz
inc
dec
inc
jmp
js
jo
sbb
pop
popa
das
mov
loop
mov
push
arpl
mov
jecxz
jmp
repz
push
pusha
add
shl
in
jns
jbe
sti
add
cmpsl
sub
test
pop
pop
inc
sub
andl
inc
mov
pop
push
pop
xchg
mov
das
mov
pop
pop
pop
dec
mull
sar
lcall
cltd
jbe
push
push
and
xor
xor
dec
jae
std
inc
addr16
test
or
pop
xchg
data16
xchg
mov
jbe
jmp
and
in
test
or
jg
dec
mov
pop
and
ja
xor
xchg
pop
in
jmp
daa
mov
xchg
dec
cmp
lock
or
imul
insb
push
addr16
mov
add
add
mulb
pop
aaa
movsl
ja
shrb
inc
xor
adc
repnz
adc
jns
push
dec
push
fs
out
testl
pusha
pop
jo
decl
dec
popf
hlt
hlt
jp
stc
mov
stos
lds
rorl
or
mov
push
test
inc
jmp
in
jno
pushf
xor
add
or
call
cmpsb
inc
imul
ja
in
ja
mov
enter
dec
sbb
std
jb
mov
xor
sub
rcrl
xchg
lods
outsl
popa
adc
sahf
xor
mov
cmp
lods
xchg
adc
and
mov
js
test
jns
pop
mov
dec
sub
xchg
subl
imul
lahf
mov
int3
dec
aam
clc
push
cmp
or
push
int3
xchg
adc
repnz
mov
and
mov
mov
add
into
in
scas
mov
iret
mov
xchg
data16
in
cld
push
data16
icebp
and
sar
in
sub
mov
jne
or
push
mov
jns
adc
sti
add
add
mov
into
cmp
pop
xor
ljmp
aad
ja
movsb
adc
sti
mov
shlb
out
push
mov
mov
push
inc
fldl
cmp
mov
mov
in
sub
aas
out
subb
pop
mov
push
insl
mov
ds
in
arpl
scas
adc
push
in
sbb
iret
addr16
sarl
jp
int
or
inc
adc
xlat
or
test
out
sub
das
loop
pop
push
push
js
jecxz
mov
jle
bswap
mov
sahf
adc
orb
xchg
in
aaa
rclb
adc
jno,pt
gs
jle
sub
jle
enter
in
pushl
inc
pop
testb
aaa
fdivp
addr16
out
jge
out
mulb
sbb
push
cmp
rorb
mov
cmp
loopne
in
xor
popl
dec
dec
loope
div
jae
movsl
in
xor
and
inc
jecxz
xchg
mov
mov
xchg
dec
stos
sbb
addr16
push
insl
lds
lods
and
cld
xor
movsb
mov
imul
pop
dec
pop
mov
xor
mov
xchg
in
mov
adc
sbb
xchg
push
into
jle
loopne
pop
pop
push
mov
loope
mov
test
imul
popf
mov
dec
or
sub
jae
push
clc
sbb
cmpsl
xchg
sbb
jg
popf
or
dec
lahf
push
pop
hlt
or
cmp
push
inc
lea
mov
repnz
je
orl
cmp
or
stos
mov
out
pusha
test
test
xor
mov
jnp
or
es
scas
sub
inc
lret
adc
sbbl
sbb
gs
enter
and
sub
and
leave
sbb
jnp
cs
enter
push
or
xchg
sahf
pop
cmpsb
push
adc
shll
sub
or
cmpsb
cs
in
test
std
shll
popa
pop
loopne
stc
movsb
dec
sbb
cmp
cld
mov
lock
out
mov
ds
loope
jge
add
add
cmp
iret
mov
into
insl
cmp
movsl
jp
xchg
fiaddl
mov
movsl
push
sarl
and
pusha
aas
cltd
les
dec
insb
outsb
test
and
pop
fldt
mov
jl
xorb
mov
imul
pusha
push
sub
cmp
fstpt
cmp
mov
cwtl
shrb
enter
ja
push
jnp
lods
push
push
outsl
adc
popa
push
lods
aas
lds
lock
dec
cltd
pushf
jnp
sbb
mov
rcrb
outsb
cmpsl
ret
inc
inc
mov
push
lret
les
mov
dec
pushf
frstor
popf
in
lds
xchg
icebp
mov
jmp
daa
stc
dec
add
outsl
fs
out
stos
pop
gs
lods
inc
sahf
aad
in
mov
dec
inc
test
xor
lcall
pop
in
aas
ljmp
cmc
clc
sub
or
fcomps
mov
mov
fs
pop
xchg
or
add
pushf
popa
insb
cmp
stos
push
mov
fcomps
jmp
jecxz
cmp
sub
jmp
dec
scas
cltd
aas
in
sbb
mov
incl
or
fbstp
popa
xchg
pop
fld
add
mov
out
gs
movsb
mov
imul
hlt
push
mov
mov
dec
cli
aas
inc
pop
and
jp
push
adcl
mov
push
in
push
inc
lret
jle
mov
sbb
loop
xchg
mov
add
push
ret
ljmp
std
cmp
fwait
fwait
sti
cmp
movsb
push
rorb
fldenv
mov
jle
ret
outsl
ret
jecxz
xchg
gs
cli
add
subb
pop
pop
ret
pop
inc
aas
out
dec
jmp
movsb
popf
enter
pop
sbb
sahf
or
mov
cwtl
push
dec
lods
in
movsb
sbb
cmp
push
cmp
scas
sub
movsb
push
scas
pusha
enter
jmp
adc
in
ret
dec
dec
shll
jne
push
mov
jp
popa
data16
fmuls
roll
out
xchg
sahf
dec
inc
push
xor
pushf
jbe
test
jae
subl
js
cmp
jb
sti
mov
leave
jl
cmp
lock
stos
pop
inc
push
mov
dec
pop
in
cmpsb
push
popa
jbe
fdivrs
pop
adc
jnp
das
imulb
lcall
adc
repnz
add
enter
mov
repnz
xor
lret
ljmp
and
lods
xchg
cmp
mov
xor
stc
fidivrl
adc
inc
aaa
sub
xor
int
lods
sub
pop
mov
xor
lds
xor
dec
pop
in
dec
popf
mov
inc
push
push
cmpsb
inc
jb
and
or
int3
sbb
negl
loope
jne
std
pop
into
mov
mov
mov
pop
movsl
mov
sbb
xchg
pop
xchg
push
jne
adc
addl
mov
ljmp
daa
xor
jmp
cmp
push
clc
data16
adc
idivb
adc
xor
rcll
dec
cmp
mov
repz
add
mov
in
pop
inc
iret
xor
pop
cmp
loope
cmp
sahf
test
jno
xor
lea
adc
xchg
cwtl
jno
jecxz
bound
mov
xchg
cld
cmp
pop
jns
ret
sub
shr
shll
xchg
xchg
lcall
cli
insl
bound
fwait
mov
jmp
sub
mov
icebp
repz
mov
pop
pop
sbb
jle
arpl
jae
stos
std
mov
cmp
popa
sbb
push
je
imulb
push
out
iret
or
and
mov
iret
and
lret
push
jge
imul
cmp
ja
test
cmpsl
add
out
test
mov
adc
popl
push
loopne
jecxz
mov
into
jge
cmpl
add
dec
and
shrb
cmpsb
add
fiadds
in
pop
loop
pop
pop
popf
pushf
add
and
sbb
mov
pop
cld
xchg
mov
pop
adc
movsb
mov
cmp
test
and
aam
cmp
stos
sbb
inc
dec
and
stc
lahf
jns
jmp
sub
sbb
cli
push
popa
pop
mov
jb
and
sub
jne
jo
cmpsb
out
xchg
out
pop
xchg
inc
inc
scas
sbb
jge
push
inc
popa
aaa
mov
xchg
mov
jmp
in
push
mov
pop
xor
hlt
pop
leave
sub
mov
repz
in
cld
nop
sub
out
outsl
push
jbe
push
sbb
leave
sub
rcrb
cltd
dec
popa
push
sub
jmp
cmp
sbb
daa
pop
pop
mov
std
xchg
inc
xchg
cmp
push
cmp
lahf
push
sub
movsb
mov
mov
cwtl
push
bound
inc
cmp
cmpl
loop
lcall
push
xor
cwtl
xor
popf
insb
sarl
push
insl
test
or
adc
push
and
and
das
cmpsl
pop
add
sbb
dec
or
jns
add
lcall
lock
xchg
fildl
xchg
cmpsl
movsl
mov
sti
sbb
mov
adc
in
rclb
jl
xchg
int3
adc
xchg
xor
dec
inc
xchg
loope
cmp
xor
sbbl
lods
mov
add
fnstenv
add
jns
pop
cltd
int
in
mov
cmp
cli
outsl
iret
popf
or
push
lret
test
int3
inc
fs
repnz
outsl
stos
hlt
inc
cmp
push
ds
sti
loopne
shr
add
test
adc
jne
push
popf
cmpsb
jne
adc
push
int
in
test
out
das
mov
cld
leave
and
movsb
pop
inc
jbe
inc
lea
cltd
sub
bound
popa
inc
xchg
mov
mov
lret
xor
xchg
les
sbb
or
sbb
fs
sub
jbe
jmp
test
stos
mov
mov
sub
jnp
ret
std
or
aad
xor
add
pushf
out
xchg
nop
push
popf
dec
jo
cld
add
mov
test
xor
xchg
add
data16
mov
aas
xor
push
and
sub
jg
int
jns
push
pop
xor
je
dec
in
adc
dec
adcb
cwtl
and
into
adc
add
sub
dec
ret
mov
jmp
sbb
into
fcmovb
ss
fsubr
or
shlb
adc
sub
adc
aas
xchg
outsl
stc
and
jl
inc
xchg
outsb
nop
into
fs
les
cwtl
pop
mov
jecxz
mov
test
xor
mov
es
mov
cmc
push
orl
jl
jl
movsl
or
movsb
xor
pop
jb
mov
loop
cwtl
cmp
adc
cld
add
pop
add
mov
sti
movsb
fimull
jae
cmpsl
fadd
or
pop
xchg
dec
into
cwtl
test
outsb
les
jno
aam
sbb
movl
lock
mov
mov
shlb
sub
sub
xchg
add
xchg
push
sbb
xor
hlt
loope
sbb
push
jge
cld
aas
xlat
add
mov
adc
sti
xor
fldt
mov
mov
in
sahf
scas
test
xor
stos
out
or
rclb
xor
adc
push
enter
cmp
mov
int3
sub
lods
jg
stos
fildl
les
jge
out
sbb
and
lret
rorb
pop
sub
fdiv
cmp
bound
mov
inc
inc
out
xchg
cs
clc
adc
scas
into
incl
lds
icebp
jmp
test
add
loope
pop
mov
dec
cli
imul
cmp
loop
sub
xlat
daa
push
push
pop
in
enter
orl
add
sbb
dec
dec
push
push
in
push
ja
adc
mov
pusha
test
es
inc
mov
int
sbb
nop
dec
test
mov
sbb
push
test
mov
das
dec
rcr
pop
push
mov
aam
leave
adc
xor
out
cwtl
add
in
lds
xchg
mov
ds
push
sbb
xchg
and
jp
cltd
add
pop
xchg
jmp
jno
daa
xor
add
inc
xor
dec
inc
add
test
sbb
mov
stos
inc
xchg
int3
lret
sbb
imul
out
pop
lods
cmp
mov
push
sub
or
add
mov
fidivrl
add
jle
add
jb
cwtl
in
in
lahf
je
in
out
and
push
movaps
lret
cmp
nop
xchg
xchg
lods
jne
or
push
pop
xlat
cli
das
dec
dec
emms
cmp
mov
rcl
add
inc
stos
inc
popf
shll
push
int
cmc
pushf
push
test
xchg
ficompl
or
rcr
aas
loopne
sti
and
sub
mov
fcmovnu
cltd
add
movb
sbb
test
push
leave
jae
and
mov
add
or
ds
cs
push
lcall
popa
fcoms
push
xor
adc
mov
jnp
push
mov
ds
movsb
add
test
push
shlb
jne
insb
and
mov
mov
mov
push
in
push
cmc
pushf
pop
imul
test
mov
pop
adc
push
inc
fcmovne
fnstenv
pop
xchg
jecxz
insb
jne
sub
dec
adc
adc
repnz
push
mov
add
jnp
jmp
sbbb
cmp
sub
lea
sti
out
sub
add
pop
add
sti
idivl
fwait
sbb
pop
push
icebp
stos
xchg
and
cli
xlat
ljmp
jb
inc
int3
jns
cmpsl
rcrl
and
mov
outsb
fldl
add
adc
cli
insl
in
and
leave
mov
mov
lcall
je
outsb
cmp
mov
add
arpl
push
inc
aaa
jb
jge
xor
fsubrl
mov
sub
push
mov
flds
lret
daa
in
adc
frstor
arpl
out
into
pop
mov
jnp
mull
test
stc
cltd
daa
mov
rcll
test
sub
mov
fadds
iret
jnp
testl
divl
sbb
inc
pop
in
sbb
jg
dec
adc
xchg
in
test
pop
dec
adc
aas
pushf
pop
nop
ja
mov
inc
dec
out
sub
xchg
mov
mov
stos
dec
pop
jg
mov
jge
sub
test
lcall
push
movsl
jle,pt
aas
push
fmuls
aam
xchg
outsb
pop
add
fimuls
sub
jns
sub
lret
aad
add
and
test
inc
int3
and
xchg
ret
mov
jp
mov
xor
sub
movsl
sub
inc
or
ret
sbb
dec
push
lret
push
icebp
fnstsw
lea
lods
dec
push
leave
iret
ds
and
adcl
outsl
adc
mov
pusha
insl
mov
dec
mov
aas
mov
cmp
hlt
loope
stos
fisubrl
jae
insb
jmp
je
lock
and
pusha
pop
das
mov
cltd
adc
jbe
mov
test
xchg
movl
pushf
movsl
cmpsb
cmc
pop
xchg
icebp
xchg
or
mov
lods
or
or
add
cli
ds
xlat
aaa
addr16
jmp
mov
pop
imul
pop
pop
pop
xchg
sti
or
popf
push
stc
insb
mov
fnsave
sub
sbb
mov
mov
or
mov
fdivrs
scas
cwtl
sub
popl
or
mov
fisttpll
mov
std
and
push
int
adc
test
stos
std
leave
out
mov
mov
cmc
in
pop
add
cs
jno
or
hlt
filds
xchg
out
mov
mov
and
mov
int3
je
or
pop
mov
mov
pop
inc
xlat
adc
mov
jmp
dec
jb
pop
and
dec
sar
jl
insl
and
xor
js
xchg
mov
rolb
les
lret
movsb
pop
rorb
stc
in
test
int
fcom
sub
js
mov
xchg
push
decl
lcall
mov
inc
insl
das
mov
dec
inc
pop
pop
mov
daa
sbb
imul
inc
lods
xchg
mov
jge
test
and
sbbb
pop
push
jmp
xchg
xor
js
popa
sub
xor
int
stos
wbinvd
cli
and
les
scas
push
dec
aas
mov
mov
adc
pop
xchg
lods
iret
repz
ficompl
sub
stos
subb
jae
fstpl
or
dec
or
jge
orl
ljmp
add
arpl
pop
jl
mov
cld
xchg
push
xlat
jmp
jmp
fxam
mov
add
cs
dec
lret
fidivrl
nop
mov
cmp
mov
cltd
pop
push
loope
mov
loop
push
dec
mov
push
fimuls
adc
std
in
and
jge
inc
fidivrs
add
or
jmp
pop
jno
inc
lods
xor
inc
aam
loopne
lret
aaa
add
cmpsb
sbb
push
test
cmp
scas
mov
inc
add
loope
repz
inc
mov
xchg
sub
push
pop
filds
out
hlt
bound
push
ds
xchg
aaa
dec
xor
mov
repnz
insb
sbb
aad
push
lods
call
dec
pop
pop
xor
cmp
push
test
imul
sub
jnp
int
repnz
mov
test
jle
insl
lods
sbb
leave
in
cltd
movsl
xor
mov
push
cli
rcl
outsl
loopne
sbb
iret
add
fxtract
sbb
repz
fnstsw
or
cmp
xor
mov
in
cmp
popf
pop
dec
leave
out
ficomps
xchg
jo
or
mov
push
jnp
cmc
adc
push
jmp
xchg
xor
out
and
les
fsubs
inc
and
popa
jb,pn
cwtl
int3
push
pop
ficoms
pop
dec
or
xchg
add
and
mov
cwtl
fidivl
es
out
sub
out
ds
sub
stc
sahf
fcoms
scas
sbb
mov
inc
int3
je
jecxz
aad
push
ljmp
mov
lods
dec
sbbl
stos
imul
mov
push
in
imul
push
mov
or
mov
cmpsl
int
ret
and
xor
pop
and
insb
daa
and
xchg
nop
test
jg
mov
sub
sahf
dec
je
xchg
push
and
inc
fxch
andl
scas
mov
fiadds
in
adcb
pusha
lret
popf
lds
inc
sbb
mov
fbstp
imul
inc
mov
or
jo
mov
mov
int
notb
sbbb
cwtl
mov
or
mov
les
mov
cmpsb
jne
lret
es
shl
sbb
xor
fadds
mov
cmp
in
ljmp
fidivs
mov
fstl
out
push
es
fs
add
mov
mov
aaa
xchg
adc
mov
cmpsl
sub
sub
xchg
cmp
push
es
xor
sub
int
out
addb
pop
aam
cld
xor
inc
pusha
mov
fstl
and
insb
pop
popf
addl
pop
cmp
mov
fstps
or
jnp
push
int
scas
xor
or
jb
pop
adc
inc
fadds
fsubr
push
push
mov
xor
inc
xchg
push
sub
gs
aam
inc
and
inc
cmp
mov
push
adcl
repz
out
das
test
sub
testl
sub
add
bnd
mov
mov
jb
insl
lock
cld
filds
mov
test
cld
push
xchg
and
int
jmp
dec
mov
sti
sbb
sbb
pop
pop
sub
aas
dec
adc
gs
push
mov
push
sub
add
and
mov
stos
and
lea
cld
cli
xor
xor
ds
inc
nop
dec
test
imul
cmp
sub
inc
jns
insb
xchg
repnz
daa
add
fisubrs
cmp
loop
adc
fisttpl
enter
pusha
inc
pop
ret
mov
scas
insl
pop
mov
jne
jns
add
jl
and
addr16
push
mov
cltd
inc
xchg
jno
movsl
push
sbb
push
pop
shlb
lock
add
loopne
adc
nop
insb
lret
xor
movsb
out
ret
repz
ja
dec
or
aad
sub
jnp
and
dec
pushf
pop
inc
or
dec
dec
icebp
test
adc
xor
jnp
test
rcrl
ss
and
imull
adc
ja
outsb
adc
mov
inc
sbb
mov
adc
xchg
movsb
inc
test
pop
addb
cmp
rorb
push
sub
pop
les
imul
into
pop
mov
dec
movsb
inc
fldenv
in
dec
repnz
push
jno
bound
shl
push
popl
stos
ds
fidivl
mov
jecxz
in
insl
and
pusha
lods
push
mov
mov
nop
push
pop
dec
adc
repz
jp
clc
and
rcrb
mov
outsb
loope
mov
pop
cmpl
daa
outsb
sub
int
in
idivb
cli
jmp
ss
rol
mov
and
pop
jbe
daa
xorl
nop
mov
outsl
mov
xchg
sub
adc
incl
fidivl
xor
mov
push
aaa
adc
mov
pop
mov
mov
mul
add
xor
xor
insl
push
jbe
sub
cmp
nop
cmpsb
xor
inc
jns
sub
mov
pop
mov
push
xor
push
mov
into
mov
inc
push
cltd
and
mov
mov
push
adcl
sbb
or
cld
mov
mov
int3
sub
int
dec
gs
push
outsl
jne
out
push
jns
imul
mov
mov
adc
fldcw
push
test
mov
ljmp
test
aaa
hlt
icebp
mov
rcl
or
and
inc
pop
jb
js
jbe
lret
stos
push
into
arpl
mov
pushw
testl
mull
clc
pop
mov
xchg
pop
outsl
and
jge
lock
xor
dec
mov
loope
and
cmp
inc
shl
sub
cmp
or
daa
mov
cmp
icebp
imul
psllw
lods
xor
adc
sbb
out
bound
xor
nop
rclb
cmp
repnz
pop
jb
ret
lods
mov
jmp
fcomps
mov
aaa
outsl
repz
cmp
imul
dec
dec
clc
popf
pusha
lret
adc
rolb
adc
cmpsb
movsl
sbb
pop
imulb
cltd
js
insl
insb
imul
mov
faddl
push
xlat
cli
sarb
sti
mov
popa
jbe
in
push
dec
icebp
je
mov
movsb
stc
cmp
ret
adc
xor
fisubrs
insl
loopne
mov
call
push
mov
mov
call
pop
sub
xlat
mov
je
pop
lock
dec
adc
in
popf
loop
cmpsl
pop
addr16
pop
scas
sbb
negl
and
cmpb
movsl
pop
dec
cmp
cmp
xchg
fsubs
xchg
popf
pop
mov
pop
xchg
imul
sub
aas
adc
push
lahf
and
mov
lods
inc
fwait
xorl
adc
hlt
shll
mov
mov
dec
lret
xchg
push
adc
cld
cmp
mov
daa
mov
mov
addb
mov
cmp
jbe
jbe
sbb
sbbl
xlat
cmp
inc
xchg
pop
or
ret
cmp
lea
mov
cmp
pop
test
mov
sahf
mov
je
mov
cmp
sbb
fwait
inc
xlat
test
sti
andl
dec
hlt
aas
mov
rcll
sub
dec
cmc
ljmp
mov
add
cltd
or
pop
push
adc
xor
out
lret
pop
jecxz
cvtps2pi
push
js
outsb
xor
xchg
mov
push
xor
setbe
and
push
aas
imul
cmp
leave
rol
rcpps
int
pop
cwtl
pop
in
pop
mov
repz
push
call
pushw
shll
pop
movl
or
sahf
sub
dec
pusha
stc
push
aad
or
add
xchg
lahf
push
std
mov
pop
aaa
cltd
aas
cld
jp
pop
loop
aaa
jno
mov
and
push
rcr
jp
ret
pop
leave
insl
clc
imul
js
jp
push
dec
or
sbb
rolb
ss
push
idivl
dec
int3
cmp
mov
pop
aad
pop
push
push
into
jo
sti
mov
jo
sub
or
repz
mov
pop
jmp
out
jmp
push
cs
dec
cs
movsb
pop
in
jp
fnstenv
adc
sbb
pop
pop
jl
pop
xor
or
push
xchg
cmp
bound
xchg
sub
cli
cmc
int
mov
inc
xchg
push
into
loopne
and
jg
mov
addr16
aam
rcl
jge
sbb
push
leave
mov
rorb
out
cmp
sub
push
sbb
insl
lahf
mov
jge
sub
hlt
stc
fldenv
sbb
movsl
sub
mov
xchg
aaa
movsb
mov
and
hlt
mov
push
je
mov
ss
nop
or
mov
cmp
dec
ds
dec
or
sub
adc
mov
mov
stc
loopne
popf
cmp
aam
fldcw
sbb
cmp
sbb
rolb
test
or
andb
inc
int3
xlat
push
mov
imul
dec
add
and
cmpsb
nop
pop
mov
iret
push
lods
mov
dec
js
xchg
mov
adc
cwtl
xchg
sub
ret
mov
push
mov
mov
ds
sbb
mov
loop
sub
mov
jl
inc
and
lahf
popf
das
pop
and
repnz
pop
lcall
add
dec
mov
pushf
in
cltd
sub
mov
insl
pop
adc
cmp
xor
aaa
scas
mov
cli
hlt
ljmp
in
sub
cmp
mov
dec
jb
adc
mov
cs
shl
or
dec
mov
test
mov
or
in
jmp
mov
cmp
negl
fwait
inc
and
data16
pushl
sahf
mov
div
stos
nop
pop
inc
enter
dec
cmpsb
xlat
pop
xor
inc
and
pop
mov
mov
xor
aad
sbb
mov
out
sahf
repnz
sub
mov
test
mov
mov
inc
inc
pop
lret
push
jecxz
add
and
lret
in
aaa
aam
js
ret
pop
adc
cmp
mov
shrb
cmp
cwtl
std
mov
mov
and
lahf
sbb
lock
cmp
xor
mov
mov
in
fildll
imul
jae
jnp
ret
pop
into
sbb
ja
add
mov
lock
xchg
loop
mov
test
jnp
mov
adc
ja
std
fsts
cmp
adc
mov
fxch
outsb
shll
sub
and
in
add
xlat
sbb
xor
stos
mul
pop
flds
bound
add
jo
mov
bound
jbe
push
xor
xchg
xor
scas
bound
push
aaa
pop
fisttpll
insl
jle
outsb
or
and
or
and
das
pop
mov
jno
cmp
mul
movsl
into
or
fistpl
fnstsw
mov
int
adc
sbb
sbb
lods
test
ret
out
rcll
jge
and
xor
pop
sbb
and
mov
sbb
flds
aad
dec
lock
icebp
outsb
fnstcw
sub
and
pop
hlt
adc
fs
jmp
dec
daa
fcomps
iret
ljmp
mov
add
dec
push
outsb
pop
pop
repz
add
mov
add
or
push
mov
xor
add
jae
test
dec
shll
add
cmp
mull
mov
test
mov
shl
and
push
and
lock
or
push
xchg
fwait
mov
push
mov
mov
adc
scas
sub
repnz
fs
ret
xor
icebp
mov
stos
inc
cmpsb
lea
push
cmp
inc
sbb
add
xchg
imul
aas
rolb
pop
ss
ret
mov
jo
and
xor
pop
dec
pop
sub
cmp
inc
fisubrs
add
pop
movsb
sbb
add
imul
xor
push
and
outsl
cmp
ja
mov
jne
call
xchg
je
imul
loopne
shl
sub
ja
rcr
cmc
insl
mov
jbe
add
adc
lods
xchg
lcall
lea
cmp
mov
push
inc
adc
dec
dec
frstor
or
aaa
xchg
icebp
xor
xor
mov
jne
sti
push
sub
dec
jle
pop
mov
jle
mov
and
arpl
cmpsb
inc
cwtl
inc
hlt
pop
sub
out
xchg
test
inc
mov
jl
cmp
cmp
add
mov
dec
inc
xchg
sub
add
popf
mov
adc
mov
xchg
xor
add
xchg
imul
out
lea
imul
xlat
jle
push
mov
mov
add
lea
cmp
rorb
xor
push
adc
sub
and
icebp
jno
lcall
cmp
test
sub
andl
jp
pop
iret
movsb
lahf
push
iret
or
jmp
les
sbb
pusha
add
rcll
lock
dec
loop
neg
sbb
cmp
cmpl
lock
mov
adc
adc
push
ret
xchg
ss
xor
es
cmpl
push
imul
xor
lea
shr
into
or
test
mov
andb
int3
bound
or
inc
xor
sbb
and
leave
add
xor
xlat
push
adc
inc
lock
mov
mov
mov
jmp
and
xor
fsts
mov
xchg
lods
fldenv
fs
pop
jae
in
outsb
push
outsb
dec
mov
mov
xlat
mov
lods
xor
fs
in
pop
insb
rol
stc
lahf
lret
test
sub
dec
ds
jecxz
inc
xchg
and
mov
xor
jmp
filds
repz
filds
push
imul
lods
mov
flds
pop
out
hlt
jg
je
and
add
jns
bound
lds
ljmp
adc
rol
lds
hlt
fsubs
int
cmp
adc
cs
sti
aad
icebp
mov
lret
add
inc
cmp
hlt
jne
faddl
xchg
push
add
fstpt
in
pop
cmp
imul
jmp
inc
hlt
mov
dec
iret
ror
inc
sub
inc
jecxz
sar
ljmp
addr16
aas
cmp
sub
inc
mov
xchg
addr16
imul
cmp
iret
out
pusha
jl
out
div
xor
inc
xchg
movsb
out
out
ret
or
popf
sahf
incb
jae
push
lcall
push
jl
push
pushf
pop
sbb
sarb
test
inc
push
insl
or
pop
mov
ficompl
nop
xchg
dec
sbb
into
sub
lods
xchg
neg
dec
int3
sub
into
fcomps
outsl
push
lahf
mov
adcb
pop
sub
aaa
pextrw
cmpsl
call
mov
inc
adc
sti
outsl
std
das
js
xchg
mov
and
pop
adc
ja
sub
sub
adc
xor
mov
addr16
fnstcw
cmp
hlt
sub
sarl
and
sbb
adc
mov
xor
insl
mov
fdivrl
push
in
addb
and
or
push
mov
mov
lret
sbb
lea
call
out
jo
mov
mov
xor
jne
nop
push
pop
adc
std
inc
lods
push
mov
sub
xor
mov
out
movsl
inc
push
sub
movsl
jno
dec
sbbl
test
repnz
xchg
mov
jmp
data16
mov
xchg
dec
push
lds
mov
cld
out
nop
sub
or
pop
mov
xchg
dec
cli
repz
mov
mov
sub
leave
movsl
cmpsl
xchg
adc
inc
xchg
stos
mov
inc
jns
push
or
cmp
shll
pusha
lcall
cld
sbb
sbb
cmp
das
mov
lds
jmp
inc
int
out
mov
adcl
outsb
scas
xlat
lods
in
lcall
push
and
cmp
xchg
test
andl
mov
xor
pop
sbb
push
push
das
cli
sti
call
xchg
mov
pop
fs
xchg
insb
mov
es
int3
and
imul
lods
cmp
xchg
mov
pop
jecxz
filds
push
in
pop
sbb
imul
mov
pop
sub
or
divb
rcr
jo
add
dec
and
stos
outsb
sti
push
leave
nop
loopne
sbb
add
and
enter
stos
mov
push
nop
xchg
test
mov
push
push
jl
cmp
cmpsl
mov
cmp
cmp
dec
sbb
cmpsl
in
add
fbstp
andb
idivl
sub
jne
movl
rorb
sub
dec
dec
out
inc
test
lahf
xchg
testb
fwait
push
bound
fmuls
mov
mov
push
lcall
gs
lock
xor
daa
arpl
xchg
das
in
les
push
cmpsl
pop
and
fidivrl
push
mov
xchg
fiaddl
into
test
fcompl
xor
dec
out
cld
mov
sub
repz
and
mov
cmp
cmp
ss
cmpsb
add
lea
cmp
mov
adc
icebp
jnp
push
fidivrl
sbb
arpl
push
daa
jnp
push
sbbb
adc
or
sub
xchg
aas
and
add
fcmovnu
addr16
rcr
jg
into
dec
xor
jg
xchg
mov
notb
push
dec
mov
divb
fnstcw
push
aam
rcrl
mov
fwait
sbb
ds
xchg
pop
inc
lret
dec
rcl
inc
sub
and
sub
xchg
push
jp
stos
ret
jmp
sub
loopne
cltd
ficoml
mov
das
jg
fdivrs
insb
popa
mov
lahf
sbb
addr16
scas
and
arpl
cmp
insb
or
or
bound
pop
fidivs
shrl
jb
aad
xchg
jge
jns
hlt
sti
ret
hlt
loopne
push
stos
lret
or
mov
stos
sub
pop
in
mov
ljmp
enter
loope
icebp
jecxz
sbb
inc
mov
lds
jle
ret
xlat
inc
sbb
mov
mov
pop
cmp
xchg
push
adc
mov
pop
mov
mov
xchg
or
push
or
mov
add
ret
xor
cli
add
icebp
aas
and
and
repnz
sbbb
mov
gs
lcall
sbb
or
call
ret
rolb
int
enter
push
out
or
cmp
call
cmp
lods
add
xor
or
sarl
daa
and
loop
dec
cwtl
shlb
clc
mov
pop
xchg
cld
jne
sub
mov
jecxz
in
daa
mov
dec
pushf
xchg
sub
pop
mov
mov
jmp
sbb
adc
xchg
xchg
sub
out
je
and
add
xor
cmpsb
and
in
and
sti
adc
jle
cmp
lret
jnp
jecxz
or
lods
jmp
sub
jno
add
push
push
test
or
jl
sub
mov
lds
ljmp
call
pushl
repz
imul
xchg
push
in
scas
fwait
and
movsl
jb
cmpsb
or
or
rcrb
inc
mov
inc
jno
push
aad
and
leave
mov
pushf
jge
neg
push
popa
lock
hlt
cmp
pop
lods
shr
pop
inc
push
loop
and
cmp
clc
arpl
or
aad
sub
movsl
cmp
mov
jge
and
ficomps
mov
mov
mov
mov
adc
std
popf
push
add
std
call
lods
sub
or
push
movsl
mov
push
movsl
push
cmp
daa
push
cmpsb
rcll
and
cld
fisttps
push
jge
jbe
pop
push
xor
adc
xchg
pop
pop
mov
xchg
cld
cmpsb
fdivl
mov
push
sbb
add
loopne
mov
stc
xor
mov
and
inc
dec
sub
das
mov
mov
cmp
xchg
xchg
ret
in
rol
pop
mov
sbb
out
dec
in
mov
popf
inc
inc
das
popa
adc
leave
jg
cmpsb
jae
sub
or
subb
adc
and
jp
or
jae
mov
mov
movsb
jnp
xchg
and
out
pop
loope
lods
daa
xlat
gs
add
sbb
inc
movsb
dec
iret
xchg
xlat
les
sub
or
call
out
in
pop
sbb
test
jns
mov
sub
enter
loopne
sub
daa
mov
push
test
lahf
out
jnp
stc
sbb
dec
jecxz
outsb
outsl
in
rcr
add
mov
pop
clc
cli
mov
and
sbb
into
into
jns
fcomp
push
xor
cmp
jo
or
adc
cmp
fsts
cmp
repz
mov
sub
loope
loop
push
jo
das
dec
test
dec
mov
mov
and
mov
out
aaa
cmp
mov
inc
loopne,pn
dec
stos
dec
pop
xor
jbe
gs
pop
jno
or
xchg
test
inc
jae
xorb
dec
mov
xor
mov
ja
cmp
sub
jl
or
pop
repz
sbb
fdiv
cmp
push
in
fsts
push
add
cld
dec
inc
imul
lret
aam
jecxz
out
inc
jp
dec
xchg
test
cmpsb
js
xchg
rcr
sub
jbe
in
stos
jns
jl
stc
jl
add
inc
jne
outsb
fwait
sub
sbb
jo
push
and
lret
adc
cmp
sbb
jle
xchg
mov
push
add
xor
aad
and
ljmp
or
aas
in
push
jp
dec
int
in
or
cltd
sub
xor
pop
cmp
mov
pop
loop
jmp
adc
daa
ds
test
fndisi(8087
push
fiaddl
test
cmp
jne
lret
call
or
ja
arpl
xchg
mov
xchg
and
fsts
es
sti
ss
and
sub
sub
movsl
cs
scas
xchg
cmp
stos
gs
nop
lds
iret
push
scas
or
cmpsb
sbb
and
in
fwait
xor
mov
push
push
outsl
andb
jg
or
cltd
js
xor
loopne
jge
cmp
pop
xchg
test
and
cli
jl
loopne
repz
fs
cmp
fisubl
nop
mov
pusha
jp
xor
lods
mov
and
repnz
nop
repz
xchg
jmp
mov
sub
sub
add
fucomp
push
andb
push
push
pusha
push
pop
in
fcmovnb
pop
pop
outsb
or
jg
das
je
inc
or
call
ret
mov
daa
push
mov
daa
add
add
mov
xchg
imul
jb
push
orl
or
sti
dec
mov
dec
and
jp
ds
sbb
fdiv
push
cmp
push
xor
sti
loop
cmpsl
arpl
clc
push
cmpsb
sbb
ficoms
mov
mov
ja
and
mov
cltd
inc
fmul
cwtl
jno
repz
fadd
popf
in
gs
repnz
pop
ss
cmpsb
test
in
sbb
xchg
fidivs
loope
mov
add
inc
out
jl
xchg
ret
jae
dec
push
addb
das
and
xor
dec
add
ret
pop
idivb
outsl
and
mov
ret
pop
mov
data16
in
out
xrelease
inc
and
in
or
fcmovu
push
xchg
ja
inc
mov
xchg
mov
and
pop
sub
shll
inc
mov
pop
push
adc
push
ljmp
std
push
sub
add
adc
enter
test
xchg
mov
mov
pushf
inc
mov
sub
cmp
je
mov
dec
cltd
mov
jns
lret
xor
push
cmp
cmp
loope
jg
jnp
xchg
and
div
bound
or
add
xor
or
jle
add
pop
jns
jb
inc
imul
data16
jle
ss
add
call
cmp
add
jo
mov
dec
mov
imul
pop
ficomps
xchg
outsl
cmpsl
aam
idiv
jp
mov
lea
popa
cmpb
or
in
jmp
cmp
inc
sub
shlb
and
mov
push
push
mov
cltd
mov
mov
popa
pop
mov
xchg
dec
decl
mov
mov
data16
sub
sbb
pop
vmwrite
and
lds
push
xchg
movl
lret
test
mov
daa
sarb
sbbl
stos
shr
jb
push
jno
inc
loopne
xchg
push
sbb
scas
lret
pop
dec
or
cmp
jae
clc
add
sahf
lret
ret
xchg
out
mov
push
push
jg
ljmp
movsl
insb
adc
or
ret
ja
movsl
out
shll
sbb
loopne
mov
mov
lock
jne
lods
add
or
pop
xor
xor
arpl
sub
pusha
sub
cmpl
jbe
jae
adc
mov
aam
gs
in
cmp
push
push
je
and
enter
push
out
lahf
cmp
sub
push
sub
hlt
xlat
andl
in
outsl
dec
gs
and
outsb
or
mov
xchg
icebp
lock
out
stos
leave
jp
inc
daa
icebp
adc
push
fimuls
cmp
mov
imul
mov
cmp
sbbb
fnsave
cmp
fwait
sarb
cmp
mov
iret
or
cmpsl
jns
mov
push
cmpsl
ficompl
shll
sbb
fnstenv
mov
scas
push
loopne
in
push
aaa
mov
add
adc
fsubrl
inc
jp
cmpb
cwtl
or
xchg
das
pop
out
andl
pop
sub
push
pop
xor
cmpsl
push
sub
call
movsl
inc
aam
ret
rolb
arpl
test
mov
xor
mov
cmp
push
dec
mov
mov
daa
inc
jbe
aad
jne
pop
mov
jecxz
jnp
mov
jae
mov
out
fs
sub
and
test
repz
insb
scas
pop
push
jns
pop
ja
jge
sbb
adc
mov
or
mov
mov
jne
lods
arpl
inc
add
mov
ljmp
xorl
pop
outsl
int3
lcall
adc
mov
popf
push
ds
inc
pop
sbbb
dec
and
loopne
xchg
aas
push
js
mov
sbb
dec
sub
inc
adc
jecxz
and
xor
jle
fwait
sub
gs
dec
lock
loope
and
enter
shll
movsl
pop
dec
rcrl
orl
sub
cltd
sub
mov
sbb
xchg
adc
mov
push
dec
loopne
sub
pushf
test
sbb
jb
mov
inc
stc
xchg
pushf
das
cli
call
hlt
sub
loop
lods
arpl
lret
jnp
cmpsl
daa
add
xor
pop
mov
pop
aas
std
iret
and
pop
xchg
movsl
lock
insl
es
in
mov
or
aam
lcall
sbb
fidivs
add
and
ja
test
aad
incb
sbb
out
dec
sbb
sub
je
cmpsl
cmp
mov
std
es
lods
xchg
lret
inc
fistps
and
adc
mov
fs
adc
dec
sahf
pop
fisttps
sub
xchg
dec
std
loope
imul
jg
dec
into
adc
aad
and
dec
xor
push
jo
pop
loop
lea
rcrl
inc
aam
addr16
stc
or
out
fimull
inc
mov
mov
add
rclb
mov
seto
or
and
inc
data16
outsb
lods
mov
lds
adc
mov
pop
mov
inc
jge
clc
xor
les
mov
xchg
inc
mov
stos
xchg
and
or
cwtl
inc
jbe
add
fwait
sbb
dec
stos
mov
pusha
test
lods
cmp
iret
cmpsb
adc
xor
out
adc
dec
js
lods
jae
int
sbb
js
push
mov
call
xor
dec
in
mov
lea
or
sbb
stos
imul
lea
lcall
jnp
mov
popf
pop
popa
cmp
sbb
jg
sbb
cmpsb
mov
jbe
lahf
xchg
xchg
pop
inc
mov
mov
mov
outsb
iret
movsb
xor
sbb
leave
mov
cli
fdivrl
cmp
or
fwait
lret
scas
int
movsl
mov
rolb
fimuls
sub
loop
pushf
jl
pusha
xor
ret
lods
mov
shrb
inc
xor
loopne
test
sub
daa
jecxz
push
or
xchg
or
xlat
into
scas
cmpb
sahf
push
daa
pop
jle
lret
sbb
stos
test
notb
dec
or
sbb
and
shrb
cltd
sbb
ja
or
divb
jl
stos
pop
add
pop
dec
std
push
sti
xlat
test
repnz
cmp
outsb
std
jbe
inc
sbb
in
adc
scas
or
mov
iret
sub
jmp
outsb
xor
xor
loope
movb
jmp
in
fnstcw
jecxz
scas
and
mov
loope
fucomip
mov
stc
aaa
imul
adc
fwait
jne,pt
fld
dec
loopne
xor
jecxz
push
jge
xchg
cmp
clc
ds
rcrl
jbe
sti
add
clc
add
fidivrs
cwtl
pushf
loopne
das
loope
lret
pop
xchg
andl
or
jg
stos
inc
pop
addr16
xchg
mov
cmpsb
add
mov
out
cmp
mov
adc
inc
mov
call
dec
sub
lock
xor
fwait
popf
rcl
mov
scas
jno
popf
shlb
inc
shll
hlt
loop
add
fimull
vpslld
jecxz
je
pushf
cli
js
inc
movb
dec
cwtl
sbb
lea
pop
xchg
cmc
xchg
enter
inc
lds
scas
push
stc
out
fmuls
stos
dec
arpl
jp
fistl
pop
push
and
adc
cltd
adc
xchg
arpl
sub
push
andl
lds
lret
lcall
in
insb
xor
pop
lret
push
inc
adc
cli
idivl
jl
fbstp
xchg
je
stos
cmp
sbb
inc
lods
mov
dec
mov
in
psubsb
loop
enter
scas
int
sti
andb
mov
shl
xchg
fs
popf
push
inc
push
mov
pushf
ja
ret
lret
cmp
int
mov
add
sub
or
xchg
enter
ret
sbb
daa
imul
add
jbe
loop
jge
xchg
adc
fnstcw
movsl
push
js
inc
cli
xor
adc
jns
hlt
mov
mov
aam
dec
pop
sbb
adc
out
pusha
adc
int3
jno
jne
pop
and
mov
sti
cli
pusha
xor
push
cmp
push
cwtl
push
dec
pusha
pushf
scas
std
dec
ficoms
pop
and
bound
popa
inc
adcb
in
xor
gs
pop
nop
jl
inc
sbb
in
push
jle
push
fstpt
out
xchg
shl
test
lock
xchg
adc
lea
sbb
shlb
jp
sti
imul
push
xchg
mov
push
fdivr
jmp
cmpsb
jp
push
movsb
sub
shl
push
jae
and
cmpl
mov
inc
shrb
pop
inc
fwait
dec
mov
jbe
jae
ljmp
je
cmp
es
lods
push
pop
ret
xchg
leave
or
push
xlat
cld
sub
outsl
push
or
std
inc
rcll
mov
pop
stos
sbbl
imul
push
mov
pushf
sti
data16
adc
jb
sbb
xlat
bound
rolb
xor
fldenv
adc
xor
pop
push
fmull
cltd
out
ljmp
jmp
fdivl
arpl
mov
mov
mov
inc
enter
sahf
mov
jle
adc
leave
xor
ds
jp
inc
and
sbb
cli
mov
jecxz
test
or
mov
mov
or
lods
mov
test
loop
cmp
insl
mov
cmpsb
fs
add
inc
mov
pop
push
dec
pop
enter
mov
push
sub
pusha
lds
mov
sahf
xor
xchg
in
sbb
adc
dec
rcll
push
or
sub
out
sbb
mov
dec
jbe
or
or
pusha
dec
jnp
add
nop
cmp
cwtl
jmp
dec
ret
outsb
mov
je
jae
push
sub
sbb
nop
and
mov
cli
cmp
dec
popf
lcall
int3
in
jmp
movsl
adc
dec
push
jg
mov
xchg
mov
je
das
inc
inc
loope
dec
int3
gs
sbb
sbb
xchg
aas
inc
shl
stos
mov
add
mov
mov
sbb
push
xchg
sbb
notl
jbe
cli
test
lods
push
leave
push
call
in
sarb
xor
pop
adc
cltd
rcll
adc
fldt
testb
mov
fcomps
cmpsb
mov
pusha
jg
xchg
sbb
mov
push
add
push
lods
jl
xchg
jno
add
cld
add
mov
sarl
xchg
inc
or
jmp
loop
inc
ret
iret
pushf
shr
in
jb
not
jb
jmp
rolb
repz
rorb
jae
cmpsl
insl
mov
sti
les
fs
xor
test
mov
push
push
push
imul
pop
sbb
cmp
fs
push
xchg
push
pop
sub
sbb
leave
add
loopne
pop
pop
fdivrs
test
push
push
xchg
jg
adc
jle
pop
xor
inc
scas
rclb
mov
adc
popf
and
dec
xchg
or
cmpsb
mov
xchg
enter
hlt
or
push
dec
xchg
in
aad
dec
sub
imul
push
repnz
pop
and
imul
insb
mov
sbb
mov
mov
cli
mov
sbb
adc
les
sub
roll
mov
mov
fisubl
sbb
and
mov
inc
lds
pop
aaa
rolb
xor
lret
ljmp
sub
leave
jle
xchg
out
aaa
mov
push
pop
mov
lock
push
cs
imul
push
repnz
adc
movsl
xchg
pop
fimull
sbb
in
mull
data16
fnsave
xlat
movsl
inc
jl
mov
mov
inc
mov
sar
faddp
xchg
sub
dec
jmp
cmp
xchg
lock
imul
mov
jg
jae
subl
pop
jne
inc
mov
decb
inc
mov
scas
push
pop
nop
inc
sub
pop
cmp
scas
leave
mov
or
lss
in
pushf
enter
cwtl
stos
je
xchg
xor
dec
mov
xor
gs
push
cmpl
iret
imul
adc
cmpsl
pop
add
sbbl
lods
lahf
out
and
fistps
adc
xor
ljmp
into
lock
add
mov
movsl
out
pop
sbb
xchg
push
xchg
test
outsb
icebp
iret
inc
leave
pusha
mov
std
ds
pop
popf
out
mov
js
sbb
gs
push
lods
hlt
mov
pop
rcll
lret
sbb
shl
jge
mov
sub
insl
push
in
jne
inc
pop
scas
enter
int3
call
xor
data16
es
sub
fisubs
std
clc
mov
pop
push
orl
adc
add
lods
push
inc
aas
mull
xchg
das
pushf
imul
fsubrs
adc
mov
call
fldcw
push
jne
loope
testl
test
das
jb
mov
cmp
mov
fsubrl
pusha
and
pop
adc
lea
pop
aam
mov
sbb
sbb
mov
cltd
jp
das
cmp
hlt
repz
mov
add
cli
inc
insl
mov
xchg
adc
and
shlb
mov
xchg
dec
icebp
sbb
mov
shlb
mov
stos
pop
out
jge
in
notl
jecxz
mov
sub
adc
int3
jo
jno
out
test
ja
mov
mov
dec
movsl
jae
lahf
push
pop
pushf
lret
outsb
inc
movsb
lods
repz
fdivrs
xchg
int
bound
mov
data16
jbe
xchg
jns
pop
js
pop
lods
pop
lret
add
test
or
nop
stos
cmpsb
adc
mov
ret
sarb
mov
fchs
jmp
cmpsl
mov
inc
cmp
cli
scas
clc
add
cwtl
sbb
inc
and
stos
loope
mov
mov
imul
or
dec
xor
and
rorl
cmp
rorb
aam
fimuls
jp
shll
call
jl
mov
mov
div
lds
mov
jne
inc
repnz
cwtl
mov
sbb
mov
out
jns
xchg
test
push
sub
pop
ror
jmp
hlt
or
out
cwtl
xor
stos
jno
sbb
sub
jg
dec
popa
fidivl
bound
sub
cld
jbe
movd
das
mov
xchg
mov
jg
insb
fs
gs
roll
pop
leave
mov
dec
imulb
ja
jl
xchg
ljmp
movsb
adc
scas
gs
sub
add
pop
mov
ja
push
mov
hlt
rolb
pavgb
and
jae
mov
pop
fmulp
insl
shll
xor
popl
mov
popf
adc
pop
testb
call
scas
notl
pushf
or
ret
mov
repz
mov
cld
push
xor
inc
lock
imul
xor
or
mov
jl
rorb
clc
int3
repnz
sub
mov
cmc
add
ficomps
mov
add
and
mov
adc
inc
aaa
aas
jb
int3
or
xor
mov
icebp
jae
jae
and
jnp
xor
adc
cmpsb
xorl
jno
and
gs
das
movsl
push
sbb
pop
add
push
mov
pop
adc
fcoms
daa
pop
and
sub
jmp
out
clc
cmp
insl
popa
xchg
in
outsl
sbb
mov
push
push
xor
pop
ss
cmc
inc
or
movl
ljmp
push
push
bound
xchg
mov
sti
xchg
jae
and
or
sub
lock
mov
daa
cmp
outsl
xor
jl
mov
into
stc
cmp
pop
aam
nop
loope
xchg
mov
sub
pop
test
mov
addb
outsb
addb
rclb
adc
mov
mov
sub
mov
fldenv
sbb
push
cltd
adc
lods
fndisi(8087
loop
lds
push
sahf
sti
nop
cmc
lret
cwtl
push
jl
inc
in
sub
cmpb
cltd
inc
mov
jnp
lret
xchg
aad
cmp
xchg
adc
mov
lret
lret
jne
and
push
ja
test
aas
mov
inc
sbb
xor
xchg
pop
cld
jecxz
in
in
jp
cmpsl
movsb
jl
mov
jg
pop
rol
xchg
sahf
jne
lret
or
inc
imul
mov
dec
jb
mov
arpl
cs
call
jo
pop
pusha
jg
mov
out
push
sub
and
cmpsl
fprem1
aaa
test
jbe
mov
stos
es
mov
inc
pop
push
fwait
mov
push
repnz
stos
fisubrl
add
push
pop
sub
mov
mov
push
ds
adc
iret
inc
daa
adc
popf
imul
cs
imul
inc
pop
mov
daa
inc
mov
icebp
int3
mov
sbb
xor
inc
pop
jnp
xor
int3
call
daa
dec
and
psllq
add
mov
outsl
mov
jp
shl
xchg
sub
cmp
xor
fistpll
fsts
cmp
xchg
add
ss
xchg
cmp
repz
test
imul
repz
inc
inc
aam
daa
lcall
mov
loop
jmp
daa
mov
jnp
mov
mov
mov
cmp
mov
mov
adc
xor
jbe
cwtl
mov
cmc
ljmp
ud2
subb
mov
sub
outsb
cltd
xor
data16
out
nop
pop
std
or
loope
ret
lea
xchg
add
ss
and
push
pop
sahf
mov
cmp
ljmp
into
jae
pop
fwait
mov
inc
xchg
lods
divb
lods
dec
and
xor
jp
and
std
add
movsb
addl
cmpsl
push
mov
xchg
push
jo
lods
adc
cmp
lret
push
inc
mov
rolb
adc
call
cmc
leave
sbb
cmp
out
fwait
cli
in
aam
ret
lahf
cwtl
xor
add
sub
jno
xor
sub
add
jecxz
imul
adc
dec
xchg
das
jp
lods
cmpsb
jns
jmp
clc
push
add
jnp
test
pop
bound
jo
mov
cmp
fdiv
add
imul
sub
dec
movb
addr16
pop
inc
test
jecxz
pop
jecxz
cmpsl
jbe
cmc
das
pop
inc
dec
mov
aas
shrb
ljmp
push
pop
adc
push
add
lret
fadds
add
cwtl
dec
sub
fidivrs
and
xchg
mov
shrl
mov
sbb
adc
stc
inc
lcall
outsb
insb
mov
inc
addl
fwait
ljmp
cld
test
mov
pop
lret
pusha
mov
sbbl
lcall
inc
mov
mov
stos
mov
repnz
or
jecxz
lods
and
out
mov
repnz
popa
test
sub
or
cli
ljmp
andl
cmp
or
xor
dec
mov
xor
rorl
pop
lock
aam
push
mov
loopne
sbb
notl
and
aas
dec
out
xor
push
sub
jnp
mov
cwtl
xchg
inc
and
mov
mov
loope
iret
push
loop
mov
dec
into
xchg
push
inc
mov
sub
pop
cld
mov
cmpsl
adcb
cmp
jno
fs
test
lcall
mull
pcmpeqw
mov
pop
jns
pusha
and
xor
mov
mov
pusha
int
stos
xchg
dec
sbb
into
pop
je
sbb
mov
push
mov
xlat
call
into
mov
add
iret
xchg
mov
xchg
jl
cmpsb
outsb
and
fldl2e
in
test
movsl
test
mov
xchg
mov
pushf
inc
xor
cwtl
cltd
cld
lcall
pop
stos
sahf
xor
jp
jecxz
nop
mov
fmuls
push
push
ffree
jge
xor
jl
sub
imul
or
rorl
ljmp
repnz
popa
cmpl
cmp
mov
pop
outsb
pop
stos
dec
int3
sahf
adc
adcl
loope
dec
fs
adc
js
enter
xor
jnp
inc
int
mov
loopne
dec
frstor
cmp
out
pusha
mov
faddl
pop
dec
imul
sbb
mov
xchg
and
and
das
xchg
dec
xor
add
xor
insl
hlt
out
or
mov
jo
jecxz
push
add
jecxz
pop
aam
jno
or
xchg
ja
sahf
aas
lds
xor
fimull
mov
lcall
std
push
mov
out
imul
sti
or
repnz
pop
jne
mov
lods
aad
imul
xor
into
nop
fadd
shlb
push
loopne
mov
outsl
iret
gs
out
xchg
sti
mov
and
mov
and
fistpl
cmpl
jecxz
pusha
dec
mov
sarb
pop
mov
fmuls
inc
lods
cmp
jnp
jae
jl
enter
push
ja
pop
cltd
xchg
stos
push
dec
xchg
out
pop
dec
in
addr16
mov
outsl
lcall
jo
and
push
jne
or
scas
imul
or
pushl
call
pop
aam
data16
cmp
str
push
ret
loop
and
sub
sub
fistl
sahf
outsb
jecxz
clc
cmc
jne
mov
jo
adc
cs
jmp
dec
adc
lods
mov
xchg
pop
mov
mov
push
fildl
insb
sbb
pop
ret
xor
pop
in
test
xlat
jg
and
pop
mov
pop
test
mov
call
test
test
dec
fs
xchg
push
mov
inc
insb
aam
shll
loop
mov
pop
and
hlt
sbb
pop
jp
fdivrs
jl
jp
lret
xor
es
pop
jp
cs
jg
inc
inc
cmpsb
xor
push
cli
xchg
lahf
pop
inc
fs
sub
push
add
lods
add
dec
scas
jo
mov
lcall
int3
shll
jnp
shlb
push
push
cmp
rorl
repnz
loopne
test
in
pop
outsl
repz
in
mov
imul
popf
adc
mov
push
push
add
add
cmp
add
call
adcb
sbb
sub
add
mov
ja
or
xor
fidivs
addr16
mov
dec
bound
lock
cmpsb
rorl
arpl
inc
xor
inc
xor
dec
push
pop
push
mov
inc
repz
ficompl
push
xor
out
loop
jo
xor
sub
js
sbb
aas
mov
popf
outsl
mov
mov
js
stos
in
sarb
jns
push
push
fistl
push
xor
pusha
lahf
xchg
fstl
xlat
mov
repz
cmpsl
mov
fimuls
sub
flds
mov
sbb
and
cld
cmp
jns
push
dec
push
insl
data16
icebp
data16
bnd
mov
cwtl
clc
lcall
out
mov
cs
out
jnp
adc
cmpsb
clc
jge
xchg
lret
rol
mov
mov
imul
stos
add
push
push
inc
dec
nop
aaa
aam
dec
mov
iret
icebp
cs
mov
sub
mov
pop
pop
pop
cmp
or
pop
fldt
pop
popf
das
enter
leave
xor
repnz
jg
std
imul
mov
test
cmp
jge
mov
mov
mov
pop
push
jns
sub
mov
pop
adc
and
dec
and
aad
hlt
inc
arpl
fidivrl
xchg
mov
mov
mov
pop
sub
cwtl
sub
dec
mov
fsub
cs
js
ja
outsl
andb
divl
pop
in
dec
pop
mov
sub
and
jno
cltd
mov
adc
movsl
mov
mov
xchg
and
or
aaa
push
mov
mov
aad
adc
cmp
enter
movsb
pushf
hlt
arpl
pop
xchg
push
jp
pop
xchg
aad
jmp
sahf
sbb
loope
mov
subb
subb
jne
cmpsl
adc
and
ss
inc
add
xlat
mov
mov
stos
fisttpll
add
mov
addb
inc
dec
xchg
pop
xchg
xchg
in
out
dec
dec
imul
gs
int
dec
pop
sbb
or
icebp
inc
sti
and
add
cs
mov
test
jg
pop
ds
scas
das
jge
mull
sbb
xchg
pop
mov
mov
shrl
lock
scas
sbb
mov
or
sbbl
mulb
xor
fidivrl
ljmp
mov
imul
test
add
loope
loop
fsubr
mov
call
or
movsb
out
sub
pop
stos
sbb
pop
fnsave
pop
mov
xchg
xchg
insb
dec
cld
cmp
mov
cmp
loop
push
aas
subb
gs
out
dec
fs
adc
mov
dec
dec
lcall
insb
mov
ss
mov
ficompl
aam
cmp
rcr
mov
xchg
cmp
std
mov
mov
leave
fwait
hlt
loop
test
xlat
add
xor
daa
test
pop
fwait
or
jae
adc
pop
call
push
jg
fcmovu
sub
cltd
pop
sbb
pop
test
inc
int3
mov
xlat
lret
lret
xor
sub
hlt
jnp
aas
aaa
cmp
shlb
sub
in
mov
lock
push
push
out
jo
dec
pop
in
push
cmc
xchg
dec
lods
dec
js
xchg
daa
or
aas
aad
adc
fdivrs
jge
pusha
mov
mov
dec
push
push
scas
pop
rcr
loopne
lcall
mov
cli
test
dec
and
iret
adc
cmc
inc
aas
mov
adc
mov
les
sub
rolb
mov
sbb
int3
ret
or
mov
xchg
push
mov
shr
sahf
or
inc
xor
scas
inc
jnp
add
push
sbb
sub
mov
scas
cld
cltd
xor
inc
rolb
mov
sahf
cmp
jne
cmp
xor
loop
leave
fdivrl
in
and
ds
and
dec
int3
das
adc
push
dec
pop
add
pop
mov
cltd
adcb
pop
sti
pushf
add
add
jl
lods
sub
pusha
cmc
addb
stos
xchg
mov
addr16
jmp
jae
xor
es
mov
mov
scas
mov
test
and
mov
into
mov
loopne
jnp
in
push
jl
push
out
sbb
mov
push
xchg
mov
push
fdivrp
xchg
mov
inc
add
in
clc
jnp
add
cmp
fcoms
inc
in
mov
jl
jmp
and
ss
cltd
ljmp
int
cmp
xlat
int
pushf
int3
or
sbb
ljmp
ret
mov
cmp
push
mov
xchg
aad
std
test
xor
or
pop
pop
or
jl
test
pop
ret
jno
or
in
test
loop
fnstcw
fcom
loopne
inc
fs
xor
and
push
addl
sarb
sub
subb
ds
mov
dec
mov
xor
daa
fdivrl
lock
lods
pop
sub
daa
push
cmp
add
jbe
cmp
fisttpll
dec
enterw
pop
cmp
daa
xchg
js
loop
sahf
rclb
cmp
divl
das
inc
xor
fidivs
push
or
push
mov
sub
insb
sub
ror
mov
and
push
jmp
sbb
and
call
fcoml
inc
pop
jg
sbb
add
xor
lods
xchg
stos
xchg
xlat
pop
int3
mov
bound
mov
jmp
cltd
cmpsb
lods
mov
ss
call
inc
xchg
call
or
jae
cltd
or
dec
rclb
adc
and
jmp
pop
sti
or
pop
addr16
inc
daa
cmp
xchg
sub
outsl
cld
test
sub
movaps
movsb
scas
jmp
movsb
scas
mov
sub
xchg
rolb
inc
inc
pop
loope
icebp
inc
or
outsl
mov
mov
xor
int3
decl
pushf
loope
jae
dec
rolb
jnp
stos
xlat
mov
daa
xchg
mov
shrl
push
popa
xor
xor
sbb
or
xor
push
int3
das
add
push
stc
push
repnz
adc
push
sub
call
mov
and
xlat
push
icebp
jb
xchg
icebp
in
and
clc
test
hlt
pop
jae
sahf
pop
pop
inc
dec
jae
popf
dec
jne
jmp
lret
dec
mov
cwtl
lahf
jle
push
fsubrs
cmp
ja
mov
test
das
sub
bound
mov
mov
aad
pop
repnz
loop
lcall
sbb
enter
mov
pop
jmp
push
das
scas
repnz
pop
into
das
and
jge
mov
mov
mov
xor
push
lcall
dec
int
mov
scas
inc
inc
mov
adc
in
mov
notb
dec
adc
imul
out
inc
push
mov
dec
jecxz
rcrl
enter
dec
dec
add
enter
test
je
mov
roll
cmp
test
js
or
dec
cmpsl
rclb
fs
adc
and
pop
jle
mov
enter
leave
hlt
lahf
add
repnz
std
push
mov
test
inc
adcb
icebp
addl
rorl
xor
push
ficoml
rcll
xchg
mov
pop
xchg
adc
movsb
lcall
loopne
mov
mov
dec
in
fptan
sbb
pop
lahf
push
xchg
mov
cmp
jb
andl
jns
imul
or
jo
mov
xchg
push
and
cmc
xchg
mov
scas
loope
pop
sbbb
lret
mov
lock
mov
cmc
cmp
mul
mov
and
xchg
lret
jb
add
je
icebp
sbb
andb
loope
repnz
push
mov
jmp
adc
jns
addl
xor
jne
xor
add
adc
addb
pop
add
imul
inc
jns
or
nop
ret
mov
mov
dec
jo
call
cli
dec
xor
adc
mov
mov
xchg
dec
jp
imul
daa
xchg
sbb
xor
xchg
icebp
jns
cltd
xor
xchg
pop
aas
stos
inc
stos
pop
xor
pushf
inc
push
add
push
mov
adc
inc
cld
lea
adc
mov
daa
and
sub
subb
mov
mov
and
jns
push
mov
daa
fdivs
fcomp
mov
lock
pop
adc
movsb
mov
mov
xchg
dec
mov
push
lret
in
cmp
leave
push
pusha
inc
dec
pop
enter
movsb
dec
test
adc
push
push
nop
add
lcall
shll
cwtl
insl
adc
outsb
xchg
test
jmp
mov
jbe
sti
xchg
jge
fwait
add
lret
pop
sbb
dec
push
jle
adc
out
fistl
adc
mov
xor
xchg
or
or
sub
jl
push
xchg
mov
mov
ret
push
daa
and
rorb
push
xlat
cwtl
xchg
out
xor
inc
xor
sub
stos
jns
fsqrt
sbb
mov
mov
adc
mov
pop
ds
ljmp
lea
fsubrl
jle
fildll
sub
adc
sub
outsb
push
mov
ds
pop
pop
jge
xlat
ss
aad
dec
xor
adc
loop
push
pop
jecxz
out
or
inc
movsl
add
ljmp
cmp
mov
mov
fwait
pop
int
imul
movsb
pop
cmp
clc
add
aad
push
lods
or
pop
sub
push
std
mov
mov
std
xlat
fwait
inc
mov
sub
in
or
cli
test
out
adc
xchg
bound
hlt
leave
cmp
hlt
xor
es
pop
inc
in
cmp
jne
sub
cmpb
jg
call
push
mov
push
mov
mov
adc
dec
jmp
lret
pop
add
xchg
sbb
in
cmove
adcl
mov
int3
jle
test
xor
ficoms
pop
loop
movsl
mov
pop
xlat
sarl
insl
ret
out
test
fwait
insl
rclb
adc
dec
shlb
and
arpl
stc
aaa
or
mov
xorl
pop
dec
mov
or
inc
xchg
int
mov
adc
pop
add
add
roll
add
popa
clc
cwtl
clc
push
adc
jae
pop
push
enter
lock
mov
js
pop
pop
shll
xchg
test
add
add
fistl
incl
add
add
add
add
test
add
out
lods
push
add
mov
inc
movl
aas
out
add
push
jge
mov
add
add
scas
nop
andl
stc
sbb
lret
add
rcrb
cmp
mov
js
aam
lret
mov
add
pop
clc
jmp
pop
clc
ds
jmp
pop
add
sub
cmp
add
and
jae
push
mov
add
mov
mov
in
test
add
lock
add
hlt
imul
insl
js
adc
push
roll
add
fs
add
les
dec
add
push
popa
or
in
cmp
add
shll
add
ja
xchg
add
movsb
add
mov
mov
call
push
lea
add
xor
fldl
add
xor
or
mov
xchg
push
inc
mov
lret
push
add
lock
jns
mov
out
cmp
add
add
adc
push
add
jecxz
sbb
cmp
push
push
js
add
add
rolb
int
sub
dec
inc
mov
fmul
aas
add
movsl
add
jb
sbb
sub
into
and
pop
pop
push
movb
out
sahf
in
and
rorl
lcall
mov
add
add
into
std
mov
aas
sub
pop
loope
and
inc
mov
push
cli
nop
shll
xor
outsb
xor
mov
add
aad
clc
add
adc
mov
inc
mov
xor
or
mov
imul
into
das
daa
xchg
xor
add
add
add
push
cli
add
add
movsl
int
ds
sub
dec
sbb
or
xor
les
jb
add
cmpsl
test
add
cmp
movsl
repz
jb
arpl
repz
ret
les
daa
test
pushf
add
insb
sti
add
mov
lock
add
mov
jae
les
and
xchg
jnp
ret
imul
enter
mov
inc
and
fsubr
aam
ljmp
jo
sub
into
jg
and
in
test
sub
lea
sbb
iret
mov
nop
push
lods
mov
xor
cmp
add
xacquire
add
imull
clc
mov
pop
sahf
xchg
loopne
pop
fs
add
xchg
mov
pushf
aam
add
inc
dec
xchg
jns
insl
stos
fstl
add
fwait
je
into
add
mov
inc
icebp
ret
sbb
mov
sbb
add
mov
add
push
pop
add
sbb
cmpsl
add
lds
cmp
add
jno
add
das
testl
int3
test
andb
inc
rcrl
pop
sahf
sbb
mov
ficoms
add
push
push
jb
cmp
mov
sub
sbb
int
stos
and
loop
test
movsb
and
add
out
or
jmp
cld
cld
jnp
je
jecxz
adc
jne
add
loopne
push
sbb
mov
add
inc
daa
enter
add
sbb
dec
and
add
or
add
loopne
add
std
sbb
cmpsb
daa
jae
mov
aaa
mov
pop
adc
test
or
faddl
add
addl
add
jb
or
into
aaa
jg
add
mov
xchg
add
push
loope
jecxz
lds
ds
adc
push
fists
repz
iret
add
jecxz
xor
jbe
mov
cmp
mov
pop
push
call
and
arpl
add
pop
ret
jmp
mov
cmp
sub
pop
pop
loopne
sub
add
add
icebp
xchg
movsb
cmp
lcall
dec
sub
mov
and
fstl
xchg
xor
pop
and
cmp
fs
dec
out
mov
add
add
in
fldl
add
ffree
mov
mov
cwtl
rorl
lds
add
js
add
cli
fsub
add
pop
enter
xchg
pop
sbb
ljmp
pushf
inc
sbb
in
mov
sbb
pop
out
jg
ficoms
fidivrl
sub
pop
add
mov
sbb
js
and
push
std
add
jmp
rcrb
or
add
inc
stos
cmpsl
add
loope
stc
aam
add
aad
xor
fildll
lret
pop
add
sahf
push
loopne
add
sbb
outsb
in
repz
addr16
add
adc
in
or
add
popf
lods
sbb
add
jae
sub
add
psubw
cmp
jl
test
add
add
xor
pop
jecxz
add
add
outsb
inc
addb
frstor
sub
add
mov
call
leave
jae
cmp
adc
add
fsubl
add
or
arpl
pop
sub
test
cli
inc
add
dec
pop
or
sbb
insb
adc
xorb
sub
sbb
mov
lods
popa
in
jmp
add
mov
jge
sbb
lret
add
xor
sti
out
add
in
sub
mov
cwtl
mov
cld
scas
add
fmull
div
imul
sbb
add
scas
imul
dec
test
inc
add
sbb
es
jl
add
cmp
add
ret
mov
jne
clc
aam
lret
leave
lcall
push
adc
test
loop
mov
std
fsub
sub
add
fcoml
adcb
add
xchg
xchg
rcl
add
push
ret
cmovae
insb
fs
add
in
mov
mov
add
hlt
rcrl
add
push
cli
add
add
push
inc
int
mov
pusha
sub
scas
mov
add
orb
push
fs
jae
add
mov
add
push
testb
fwait
adc
lock
shll
cmc
mov
sbb
cmp
fcmovnbe
push
xor
jae,pn
bound
jge
aam
insb
icebp
repnz
loopne
dec
add
add
add
pop
stc
xchg
jb
in
pushf
add
scas
lods
mov
add
add
pop
push
fisttpl
push
outsb
dec
mov
ja
sbb
or
lods
pop
inc
inc
ljmp
and
lods
add
xor
add
mov
and
pop
fisubl
add
sbb
sub
ja
sbb
repz
pop
add
inc
and
jle
pop
scas
add
push
sub
add
fstps
lahf
add
add
pop
rcrl
push
adc
add
add
add
push
pushf
jg
add
jp
out
add
into
xor
or
add
test
aaa
and
test
mov
add
mov
push
cltd
add
icebp
xchg
mov
add
add
call
pop
jne
mov
push
dec
add
add
push
int3
imul
ja
sahf
push
push
mov
add
and
adc
and
or
int
and
cmp
out
adc
and
ret
xor
add
xor
mov
movsl
pushf
add
inc
sub
lret
and
aam
fisttpl
adc
inc
add
shll
add
int
scas
cltd
pop
xchg
dec
call
mov
pop
and
xchg
jnp
ret
or
add
push
shlb
shll
push
aam
push
popa
or
out
add
push
dec
lcall
sub
mov
add
pop
sub
cli
sub
sbb
add
dec
push
in
inc
fildl
add
stos
rol
sbb
addr16
adc
add
jno
xor
xor
mov
xchg
push
test
out
aas
inc
popa
mov
dec
mov
stc
repnz
ds
mov
fsts
iret
mov
fisttps
jns
add
outsb
xor
mov
add
les
in
xchg
mov
add
mov
add
dec
xor
jno
lds
and
push
in
jbe
inc
repnz
ficompl
cmp
add
add
insb
hlt
repnz
xchg
stc
pop
pop
clc
jp
and
pop
dec
cmpsl
sub
paddusb
push
push
mov
and
outsb
sub
push
cmp
inc
cli
lods
dec
mov
mov
movsb
test
movsl
sbb
jecxz
adc
push
sub
test
nop
add
pushf
jp
add
ud2
mov
aad
or
cli
mov
cmpsb
fdivrl
push
push
jnp
add
and
sbb
xchg
cmp
in
gs
shrl
in
add
jg
add
add
dec
scas
mov
aad
mov
pop
pop
sbb
add
bound
add
dec
and
mov
lret
sub
xlat
stos
out
stc
es
adc
ret
inc
cs
fdivrs
popf
mov
int3
mov
arpl
pop
xchg
mov
cmpsb
lret
aaa
js
loop
add
scas
and
bound
iret
leave
cmp
add
inc
fisubl
inc
add
jle
xor
add
repz
cltd
fcos
nop
test
dec
jge
call
stos
sub
stc
push
inc
jecxz
and
sbb
nop
push
xor
lea
lock
xchg
cwtl
add
inc
bound
fisubrl
fstps
insb
lcall
je
fsubs
jae
js
and
jg
sub
repz
daa
add
insl
add
sub
add
jmp
jle
and
in
in
imul
add
push
dec
dec
lock
cli
push
inc
pop
cmpsb
sbb
mov
cmc
les
mov
xor
bound
and
add
lds
jae
cs
mov
sbb
fdivrl
dec
cmp
and
jnp
add
mov
ret
xchg
ret
stc
aas
lds
fidivrl
and
lea
imull
mov
add
cmp
int3
pop
inc
jne
xchg
push
mov
scas
push
sbb
inc
nop
stos
inc
addb
popl
inc
out
and
dec
xchg
mov
popf
mov
arpl
leave
inc
pop
loop
in
add
add
inc
push
aaa
bound
add
push
xor
pushf
jb
xchg
jecxz
rolb
rcrb
add
jb
popa
jo
jae
ljmp
add
add
rorb
mov
in
inc
scas
push
sbb
movsl
xor
iret
xor
jmp
mov
xor
fisubl
adc
dec
dec
fadds
add
aad
ret
cli
icebp
lea
insl
sbb
nop
es
push
scas
pop
push
inc
iret
jo
add
mov
cmpsl
dec
cmpsl
xchg
les
mov
jbe
jb
xchg
dec
aam
jle
repz
fs
les
pop
fdivl
jb
lret
sub
js
in
out
add
int
xchg
add
adc
cld
add
mov
or
inc
ret
sbb
int3
add
fiadds
icebp
call
add
push
and
js
cmp
data16
xchg
mov
adc
inc
lds
adc
pusha
andl
mov
stos
lock
xor
or
push
cmp
add
xchg
xor
and
add
incl
sbb
add
dec
xchg
testl
punpckhwd
pop
lea
ficoml
lret
push
inc
je
mov
in
ficoml
jns
add
enter
mov
or
mov
test
int
into
add
add
pop
loop
xor
dec
jo
add
add
pop
sti
mov
test
daa
add
add
or
dec
adc
add
add
mov
mov
cmpsb
loopne
aad
maxps
ficompl
cmp
neg
pop
testb
rolb
push
add
enter
pop
add
int3
pop
push
dec
fnstcw
xchg
test
add
xor
mov
jge
add
in
rorl
outsb
xor
inc
popf
add
in
jg
das
inc
dec
add
and
stc
pop
imul
mov
push
in
push
xchg
mov
movsl
adc
add
aas
ja
pop
clc
lret
mov
xor
jns
addr16
pop
push
ds
ret
pop
mov
add
push
test
push
jmp
add
add
pop
mov
popl
cmp
adc
jl
jmp
adc
sbb
imul
fiaddl
clc
cmp
pop
lods
sub
negl
out
xchg
ljmp
aaa
insl
decl
lods
push
jle
add
pop
mov
iret
data16
jne
jg
test
out
inc
mov
in
std
loopne
mov
add
rcrb
pop
pop
mov
sarl
arpl
jne
xor
push
scas
add
jmp
jns
pop
stos
int3
add
dec
pop
jbe
cmp
int3
and
jmp
outsb
or
inc
sub
push
gs
inc
dec
add
dec
orb
and
in
in
loopne
repz
cmp
and
dec
mov
sub
inc
jg
sbb
and
pop
add
ss
test
mov
clc
mov
test
xchg
loopne
jns
and
add
fldenv
inc
add
pop
or
pusha
push
add
imul
mov
fistl
cmp
jle
pop
fildl
fmuls
mov
cltd
int
loope
add
mov
sbb
add
lds
and
cmp
add
bound
add
add
out
loopne
fcmove
jae
xchg
push
xor
out
cmc
mov
es
add
sub
add
lahf
add
mov
call
cs
pop
push
inc
mov
mov
les
cmp
xor
js
add
add
jbe
daa
fstp
sub
rolb
repz
leave
cmp
xchg
cmp
cwtl
les
ljmp
aad
add
jmp
add
mov
add
in
dec
push
idivb
inc
nop
mov
add
push
or
adc
mov
mov
sti
arpl
mov
add
add
dec
popa
lock
add
les
dec
lcall
call
adc
pop
mov
lods
inc
test
bound
arpl
mov
add
aam
cmp
cmp
add
push
jbe
pop
test
cmp
in
sbb
jae
add
sbb
cli
mov
push
inc
daa
cltd
cltd
add
stos
ja
data16
pop
lahf
std
add
xchg
add
inc
xchg
movsl
inc
add
out
aam
lahf
add
mov
out
ret
lret
roll
cwtl
inc
rorb
mov
add
pop
and
es
ja
or
sbb
outsb
das
add
out
add
push
test
add
lock
jne
add
add
add
push
adc
aas
mov
add
mov
ljmp
add
insl
shll
fimuls
push
mov
add
add
repnz
add
adc
sub
ja
out
adc
pop
pop
cmp
mov
js
inc
jae
and
add
popa
into
mov
pop
std
jae
out
add
push
jns
add
int
xchg
jecxz
mov
ljmp
or
push
mov
mov
cli
jge
add
int
xchg
rolb
mov
fimull
or
sbbb
cmp
add
xor
popf
sarl
imul
adc
mov
js
add
dec
pop
pushf
inc
jle
cs
cmp
pop
xor
pop
sub
add
fidivl
or
jge
push
in
add
sub
data16
pop
xor
int
sub
pushf
inc
les
pop
insb
insb
outsl
movsb
dec
jbe
stc
adc
xlat
add
clc
add
push
ja
orb
add
leave
fadd
mov
idiv
std
adc
add
jl
enter
dec
add
jl
pop
xor
icebp
rcrl
fucom
xor
dec
cmp
push
add
into
jns
rcrl
pop
sub
push
test
lds
call
push
add
pop
dec
fsubr
push
mov
cmpsb
push
fs
add
cmpsl
sub
rol
add
add
jecxz
cmpsl
add
add
inc
popl
sbb
dec
sbb
nop
mov
add
ficoml
call
fcmovnbe
pusha
dec
add
pop
sahf
imul
xchg
add
pop
out
inc
lret
add
sbb
mov
loop
into
mov
test
fldenv
add
sub
lds
jbe
push
lea
fwait
ja
mov
add
add
pop
sbb
add
xlat
sti
add
icebp
sahf
add
aam
testl
jne
pop
mov
add
bound
popl
movsl
mov
add
jle
movl
lods
outsb
add
pushw
out
jg
jns
add
sub
out
add
insl
out
or
sbb
shll
add
jne
and
mov
jne
push
add
mov
add
imul
jecxz
mov
mov
add
test
push
pop
lret
add
push
mov
bound
lods
xchg
in
and
fsubrs
adc
mov
xor
lcall
push
add
jmp
dec
sahf
xor
add
ret
cltd
and
add
add
js
nop
jmp
xor
in
sbb
cli
repnz
add
movsl
cwtl
inc
fmul
lret
sub
add
sbb
out
fcompl
adc
mov
xor
mov
xor
add
cmp
add
add
lea
and
pop
or
out
mov
clc
pop
mov
pop
rep
add
nop
mov
push
mov
add
mov
test
sar
ja
aad
or
and
addl
icebp
xchg
and
scas
lock
mov
lret
lods
fimull
pop
shll
lcall
movsb
mov
pop
repnz
fnstenv
insb
shl
mov
repz
or
mov
daa
add
dec
loopne
lods
out
out
sub
dec
movsb
icebp
mov
iret
push
fst
gs
and
add
add
push
test
sbb
mov
jecxz
sbb
mov
and
jno
push
dec
xchg
jmp
cmpsl
xchg
jmp
mov
add
add
dec
cmp
add
add
xor
insb
scas
daa
ss
addb
loop
pop
pop
imul
mov
mov
in
cwtl
add
push
cmp
add
add
mov
movsb
or
mov
pop
add
lea
mov
fstl
int3
adc
shll
cmp
add
push
dec
xchg
pmulhuw
sahf
cltd
loop
and
pop
outsl
xor
add
and
inc
test
ret
or
sbb
and
mov
stc
add
in
push
push
adc
test
add
lods
negb
and
add
pop
jp
out
push
push
shl
lret
or
add
out
mov
push
sbb
das
sbb
push
add
mov
xor
mov
dec
xchg
add
add
mov
jae
cltd
test
lds
xor
xorl
jge
add
cltd
sub
add
shlb
xchg
xor
pusha
xchg
jae
inc
sub
push
lock
add
not
pop
pop
mov
add
lock
xchg
push
sbb
push
test
in
movsl
mov
dec
sbb
movsl
add
popf
mov
add
mov
out
xor
adc
or
cmp
xor
mov
test
roll
jp
push
add
add
cmp
mov
popa
xchg
cmp
add
dec
jae
add
push
pop
add
fwait
push
sbb
jecxz
insl
jmp
add
fldt
add
jecxz
jb
popa
mov
pop
push
add
mov
add
mov
fdiv
xchg
add
out
xchg
in
in
inc
std
sti
je
inc
add
test
insb
pop
js
or
pop
push
mov
std
xor
imul
mov
add
jo
mov
xor
add
add
pop
pushf
xor
dec
jnp
mov
subb
dec
and
adc
and
and
loopne,pn
add
aad
add
jb
jb
mov
jecxz
loope
movsl
dec
mov
sub
iret
xchg
enter
add
aad
push
pop
lea
ss
add
lret
out
pop
outsl
add
dec
int
scas
cltd
push
xchg
pop
xor
jne
jg
jmp
pop
mov
je
hlt
movsl
pop
sbb
jb
mov
int3
jo
add
push
pop
adc
sahf
cmp
cmp
daa
add
mov
xchg
xchg
and
lea
jnp
and
sub
adc
dec
sbb
fldenv
dec
add
fistpl
test
call
xlat
fsubrs
add
into
xor
add
adc
add
movsl
sarl
adc
add
nop
mov
dec
aam
sub
xor
pop
pop
or
add
iret
sub
pop
orb
imul
sbb
sbb
pop
lahf
mov
push
stos
faddl
add
fcmovnb
pushf
insb
push
and
xor
add
sbb
add
jge
sar
push
xor
stc
add
add
dec
sub
mov
test
outsb
push
out
add
inc
daa
mov
inc
pusha
inc
lock
adc
sldt
mov
add
mov
add
mov
mov
adc
add
add
cmp
sub
xor
sub
add
mov
push
test
xchg
dec
mov
mov
lods
xchg
xor
outsl
dec
movsb
insb
cmpsl
scas
outsb
fcomip
mov
add
add
sub
dec
mov
repz
hlt
jmp
rorb
xor
mov
sti
add
roll
cmpsb
jne
test
inc
iret
xchg
aas
xchg
add
lahf
out
outsl
loopne
push
add
and
lret
mov
or
aad
in
pop
add
sarb
popa
xchg
stos
add
mov
lea
jb
nop
jmp
repnz
stc
ljmp
mov
pop
ljmp
js
testb
add
in
daa
std
arpl
mov
fildl
cwtl
out
inc
je
addr16
hlt
or
mov
dec
sub
adc
push
pop
xor
jnp
jg
loope
outsb
sti
or
xchg
add
mov
and
xor
stos
arpl
xor
rcll
shll
pushf
adc
in
add
add
adc
aaa
out
add
add
or
add
sbb
add
mov
jb
sbb
jg
mov
add
into
mov
xor
xchg
add
push
add
fisubrs
cmp
subl
push
and
add
das
inc
icebp
sbb
nop
insb
push
cmc
mov
fwait
adc
call
sbb
shll
mov
mov
and
int
mov
adc
std
xor
negl
out
sbb
je
mov
jmp
cmpsl
cmp
aad
mov
push
ret
mov
frstor
xlat
push
xor
sti
mov
pop
stos
nop
test
add
xchg
gs
mov
mov
cmp
add
cli
lret
pop
nop
adc
xor
dec
pop
add
add
mov
clc
aam
push
ret
push
in
xchg
addb
shll
lahf
test
add
mov
xchg
xchg
mov
mov
and
add
add
dec
mov
jne
into
pop
decb
add
mov
rclb
iret
mov
hlt
or
dec
mulb
jecxz
pop
dec
in
inc
add
pop
fwait
std
mov
arpl
mov
popa
inc
adc
lods
movsb
in
add
adc
xchg
push
jb
test
rcl
cmp
mov
sbb
add
int
aam
xor
mov
test
into
arpl
add
pop
out
add
mov
add
cmp
outsb
imul
imul
faddl
in
cmpsl
add
mov
jb
mov
lock
push
and
mov
dec
sub
add
lds
cmp
add
sbb
add
lods
sbb
and
push
arpl
movsl
pop
sahf
dec
xor
out
inc
push
inc
imul
cmpsb
jae
pop
cmpsl
mov
and
mov
cmp
into
rcr
and
add
pop
or
ja
in
pop
xchg
loop
pop
add
push
repnz
pop
xorb
ja
dec
xchg
fisubs
sub
push
shll
fmul
gs
mov
push
jnp
or
lahf
stos
xorb
inc
scas
hlt
es
fisttpll
jae
or
cli
es
push
cmpsl
mov
mov
ljmp
movsb
mov
int3
sub
std
jl,pt
std
xor
ss
ss
cmpsl
pop
lret
outsb
fwait
jo
pop
xor
add
test
add
add
iret
divb
or
add
sub
insb
insb
mov
push
add
add
add
push
pop
adc
add
outsb
add
mov
add
ret
cmp
and
int3
adc
add
roll
and
add
add
add
jno
shl
enter
add
fsubp
outsl
int3
inc
mov
cmpsl
inc
cmp
add
adc
mov
mov
lock
loop
add
or
faddl
mov
mov
in
mov
add
lahf
lds
std
fstps
jne
sub
daa
in
imul
xchg
cmpsl
push
add
pop
inc
dec
lods
sbb
shl
add
mov
mov
add
push
cld
addr16
outsb
lahf
pop
cs
clc
push
sub
push
outsl
fldcw
ja
les
xchg
ds
sub
add
xchg
inc
fsubrs
mov
test
mov
cs
pop
jns
xchg
into
fcoms
or
dec
test
or
inc
mov
cmp
xchg
mov
and
call
jbe
inc
jns
inc
push
add
aaa
sub
add
jnp
cld
add
lcall
dec
imul
lods
inc
mov
xchg
push
jecxz
fdivs
sub
push
cld
xor
mov
fiadds
fiaddl
add
mov
repz
mov
push
inc
jno
mov
aad
add
mov
xor
add
hlt
adc
add
aaa
stos
loopne
repnz
add
xchg
sub
fildll
popa
hlt
add
mov
add
add
and
je
inc
lret
je
jo
xor
testb
mov
int3
xchg
shufps
push
scas
cmp
pop
lods
xchg
adc
in
adc
inc
mov
jb
cmpsb
inc
sub
mov
pusha
push
jb
add
addr16
je
jno
xor
nop
add
mov
add
push
sbb
add
icebp
data16
in
push
xchg
adc
mov
lea
popf
and
push
shll
in
add
add
cmp
js
outsb
and
jno
or
mov
xchg
add
int
and
imul
scas
lods
rolb
aas
pop
in
sbb
mov
test
pop
add
shrl
xchg
mov
mov
fwait
aam
fwait
add
xchg
clc
xchg
adc
mov
mov
jne
jbe
mov
mov
jle
xchg
inc
add
cmpsl
mov
inc
pusha
add
pop
out
xor
dec
movsb
into
adc
add
add
pop
add
icebp
push
mov
and
lcall
cld
jo
pop
inc
inc
daa
mov
ret
xchg
js
int
add
add
jge
xchg
divb
xchg
xlat
xorb
add
and
push
adc
add
stc
mov
bound
dec
std
pop
adc
mov
jmp
shrb
repz
mov
push
or
in
ret
jle
les
add
pop
jb
mov
add
xor
add
iret
inc
lods
dec
add
lret
jno
aaa
cmpsl
dec
sbb
add
aas
je
pop
out
and
pop
pop
add
out
loopne
and
add
repnz
int3
mov
xchg
sahf
sbb
or
out
push
int3
cmc
lods
imul
xor
aas
jg
add
add
pop
aam
cmp
adc
leave
dec
dec
mov
mov
jmp
mov
ds
loope
bound
sbb
gs
mov
lods
fimull
int
pushf
fwait
out
sbb
pop
add
jle
xor
lods
jo
xchg
out
repnz
mov
xor
pop
pop
cmp
lods
leave
jnp
mov
test
mov
mov
pop
dec
popf
dec
stc
xchg
sbb
loope
aam
cmpsb
adc
lods
lea
sahf
sub
add
fldl
loop
jmp
push
push
mov
mov
jo
mov
in
sbb
xlat
add
jg
xchg
cwtl
in
int
scas
cltd
push
aas
or
add
mov
fistps
push
pop
push
add
push
xchg
shrl
ds
aas
pop
nop
insb
sarb
adc
loopne
adc
mov
or
and
daa
xlat
popl
pop
pusha
fnstsw
mov
std
out
lods
ja
jo
sbb
imull
loope
sub
adc
les
cli
mov
ja
add
xor
ficomps
xor
fiadds
and
mov
or
or
pop
repnz
pop
mov
movsl
or
add
xor
fs
test
subb
call
aas
xchg
insl
mov
pop
jo
xchg
jne
jle
pop
ljmp
mov
and
ret
or
mov
push
mov
inc
cmp
sub
or
ret
aam
lea
mov
jb
out
or
and
nop
dec
aas
mull
fildl
xchg
into
lods
lret
scas
or
push
sarb
push
sub
push
mov
mov
aas
xchg
fldl
filds
xchg
pop
cmp
mov
dec
fmul
inc
idivb
popa
pop
add
jg
jae
cltd
fdivr
stos
push
les
rcl
gs
into
and
lret
in
test
add
add
jmp
xchg
cmp
add
add
and
add
add
jb
add
add
test
add
add
cmp
xor
and
arpl
add
dec
xor
cmp
mov
mov
add
fadds
inc
in
dec
add
add
ds
pop
jns
pop
stc
lds
xchg
scas
dec
push
fidivs
cmp
pop
push
mov
ja
cmp
xor
cmp
mov
push
shlb
stc
push
je
decl
cmp
push
lea
mov
stos
je
in
push
les
cli
aas
add
push
inc
stos
xor
ret
leave
pop
inc
sti
nop
neg
hlt
ds
lea
or
lods
insl
iret
iret
xchg
push
xlat
sbb
loope
inc
repnz
mov
aas
mov
lods
xchg
inc
stos
jmp
jge
fcompl
mov
inc
push
fistl
mov
insl
mov
repnz
add
cmc
aaa
or
add
outsb
mov
add
dec
fwait
xor
fsubl
fsts
add
add
mov
test
jno
test
or
mov
xchg
fisubrs
imul
sbb
mov
dec
out
jmp
ljmp
add
mov
mov
adc
pop
into
jnp
add
ret
repz
mov
rorb
aam
add
dec
faddp
add
cld
je
pop
fwait
pop
lock
dec
fldt
cmp
mov
data16
test
adcl
mov
push
pop
and
push
add
or
data16
nop
mov
mov
ret
mov
pop
scas
stc
mov
jnp
into
sbb
mov
add
xchg
pop
ljmp
fistpl
ja
test
inc
sbb
inc
and
inc
cwtl
mov
xor
jbe
shrb
std
fstps
xchg
mov
fs
add
loope
sub
add
sub
add
jecxz
fwait
xchg
xor
pop
mov
sti
enter
mov
popf
loopne
add
xchg
xor
add
decb
pop
add
out
dec
mov
or
jecxz
add
push
aam
faddl
add
mov
or
sub
addr16
cmp
imulb
sbb
jb
adc
imul
pop
add
sbb
push
int
push
add
test
mov
into
cmp
add
add
test
aam
jl
and
push
sbb
ret
add
add
jle
add
dec
xchg
mov
cmp
cli
add
jge
pop
cmp
add
pop
add
inc
mov
add
cmp
int3
inc
mov
and
aam
mov
ljmp
and
fildll
mov
jecxz
test
push
xchg
or
jno
aad
jmp
pop
aas
dec
out
out
add
and
add
push
xor
cmp
add
sub
loopne
push
push
mov
lods
and
inc
dec
add
add
icebp
ss
mov
sbb
daa
inc
icebp
mov
or
jb
or
bound
xchg
cmc
cmpsb
cli
pop
add
sbb
and
jmp
pop
pop
xor
add
call
add
jns
aam
adc
dec
xchg
clc
lahf
out
cs
incl
lods
into
ss
test
aaa
push
fmuls
mov
inc
dec
stc
aaa
dec
cs
mov
push
scas
add
mov
jl
mov
cmpsl
xchg
cmp
std
leave
mov
clc
push
imul
fsubs
pop
call
mov
add
js
fidivrl
ret
roll
and
rcll
inc
sbb
inc
pop
sbb
xchg
cmpsl
adc
fsubs
cmp
add
jecxz
out
push
jp
inc
xor
lds
pusha
add
fsubs
cmpb
pop
mov
cmp
loopne
in
adc
addl
dec
lock
sub
push
mov
clc
stos
mov
shlb
mov
jecxz
jae
xor
push
les
in
jae
add
lret
jo
shll
cmp
mov
jo
mov
iret
data16
jmp
repnz
add
mov
push
xor
mov
jne
jb
sub
call
cmp
add
sarb
and
aas
pop
hlt
sub
push
push
mov
aam
test
inc
mov
inc
mov
add
push
out
add
add
pop
add
add
jge
inc
stc
aam
sbb
dec
daa
fcomps
xchg
pop
aas
pop
test
mov
add
add
hlt
enter
mov
push
fdivl
ret
pop
mov
add
add
add
inc
loopne
pusha
pusha
fnstsw
pop
mov
fsubs
jae
js
and
cmp
xchg
pop
push
dec
lahf
pop
loop
lea
xchg
mov
pop
fwait
mov
ret
add
out
adc
add
mov
dec
mov
add
mov
add
add
xchg
mov
int3
add
add
hlt
mov
iret
add
into
insl
push
mov
push
fiaddl
add
jp
sti
add
loop
int3
stos
dec
in
mov
fldl
ds
pushf
mov
mov
dec
mov
icebp
jecxz
pop
add
mov
pop
push
push
test
jnp
add
shll
mov
cmp
rcrb
inc
xor
hlt
add
add
dec
add
arpl
add
ja
repz
hlt
xchg
add
push
push
xor
add
fwait
outsb
in
add
rolb
add
add
inc
xchg
les
shl
pop
mov
add
das
aas
test
xor
in
sub
dec
xchg
fs
fnstcw
add
dec
fnstcw
in
lods
fstl
mov
add
sub
cs
and
inc
sbbb
inc
xchg
rorl
rolb
add
mulb
addl
sbb
sti
add
ret
cmp
mov
and
mov
sbb
pop
repnz
xchg
and
jl
push
add
flds
lods
and
fmul
jae
in
incl
add
mov
mov
jno
in
ja
dec
daa
std
popf
xchg
adc
and
rcll
push
fsts
mov
xor
inc
loop
int
sahf
lcall
cld
insb
adc
ret
xor
sub
mulb
pop
add
pop
jle
out
mov
adc
xchg
sub
imul
mov
sub
inc
daa
test
xor
aas
xor
shll
mov
loopne
out
loopne
and
add
cmp
add
lret
add
or
loope
enter
xchg
add
mov
push
xchg
or
lret
cmp
push
sub
pop
je
dec
clc
mov
xor
test
add
sbb
mov
insb
push
add
ret
test
add
xor
or
add
cmpsb
xchg
ret
out
add
fisubl
cmpl
pop
cmp
or
mov
add
jl
or
repnz
add
mov
add
stos
add
mov
mov
jns
xor
adc
xchg
lcall
push
cwtl
jae
add
enter
rorb
add
xor
mov
and
jp
add
test
xor
sahf
inc
pop
aam
dec
add
shrl
mov
mov
adc
jp
and
push
inc
add
cmpsl
xchg
jne
add
pushf
xor
add
add
add
mov
sub
and
mov
movsb
insl
add
add
cld
ljmp
jnp
icebp
mulb
mov
add
or
or
add
jp
imul
arpl
add
add
add
sbb
imul
jo
dec
jecxz
add
cmp
jns
xchg
loopne
inc
roll
add
inc
add
add
mov
nop
sbb
add
in
in
jae
cltd
lods
sub
les
add
mov
push
inc
fldcw
scas
add
sti
sti
dec
jo
es
or
and
add
popf
inc
fmul
push
out
add
add
in
jle
dec
test
aas
nop
pop
cmp
mov
loope
mov
xor
push
movsl
mov
pop
add
or
les
int3
out
push
test
and
call
not
inc
repz
pusha
insb
inc
lods
fisubrs
push
outsb
add
add
jno
pop
adc
or
sub
sub
sub
les
add
ret
add
add
cmpsb
jl
mov
and
inc
inc
mov
push
ja
testb
gs
ds
sbb
test
add
pop
jmp
movsb
inc
add
add
inc
add
push
sbb
add
popf
es
hlt
sub
sbb
xchg
pop
lahf
in
std
fwait
iret
ret
push
mov
mov
xchg
ds
in
imull
rcll
pop
add
scas
or
nop
stc
adc
adc
in
xor
xchg
add
mov
mov
jge
add
add
jo
add
movsl
imul
movsb
leave
add
movsb
out
xor
pop
fldcw
xchg
dec
jmp
sbb
pushf
sbb
mov
mov
add
xchg
mov
rolb
add
mov
add
mov
gs
cmp
test
loopne
lock
ljmp
aaa
in
add
sti
add
add
mov
test
ud2
dec
loope
or
js
cld
cmp
mov
add
add
inc
mov
das
loope
in
add
cmp
outsl
add
rcrl
lea
adc
xchg
pop
mov
mov
and
add
ret
hlt
adcb
xor
sahf
aad
xor
pop
movsl
or
mov
sub
or
add
add
insb
ret
ret
in
loopne
rorb
lea
fwait
and
mov
jmp
pop
in
mov
lahf
sub
call
fldt
subl
pop
add
push
addb
sbb
add
pop
incb
pop
or
lods
add
aaa
mov
add
or
adcl
mov
rorb
and
in
xor
jbe
es
push
mov
pusha
or
lds
jbe
sub
push
ja
xchg
add
add
sti
popa
jae
imul
pop
push
add
iret
add
addl
pop
dec
movb
leave
push
cmpsl
adc
rorb
inc
in
stos
loopne
mov
add
sbb
fiadds
fistps
hlt
rcrb
fidivl
fcoml
cli
insl
cwtl
jnp
lock
add
out
inc
xchg
push
insl
movsb
loope
cmpsl
adc
and
fmuls
aas
decl
pop
add
sub
add
add
or
sub
push
mov
push
fs
add
outsb
add
add
add
test
push
in
stc
xor
daa
bound
cmp
xor
repnz
mov
or
or
cmc
mov
pop
dec
add
pop
mov
movsl
push
int3
dec
leave
cmpsb
lret
and
sbb
es
mov
adc
sub
push
cmpsl
add
inc
lock
jp
xchg
and
or
in
xchg
test
nop
adc
sub
pop
add
popa
add
mov
pop
inc
insl
add
cmp
jb
or
add
add
fsubl
push
pop
lds
lcall
daa
stos
mov
lcall
fisubrl
xchg
push
cs
pop
xchg
jge
das
addl
pop
nop
lods
xchg
adc
in
cld
add
add
add
fmull
and
cmp
mov
add
dec
dec
jnp
mov
sbb
lret
adc
xchg
out
fwait
js
push
xchg
mov
lea
lahf
mov
pusha
ss
out
stos
add
sarb
insl
inc
in
adc
or
jge
push
imul
lahf
out
add
sti
and
cmp
xchg
in
inc
lds
add
or
subl
xchg
add
test
mov
cltd
sub
repnz
mov
add
add
ret
add
pop
into
mov
roll
add
sub
js
inc
mov
idiv
sbb
xor
fistps
adc
add
mov
add
add
rcrl
cli
roll
add
icebp
data16
pop
mov
out
ja
add
add
cmpsl
data16
and
mov
xlat
add
add
add
add
adc
int3
fdivl
adc
add
xchg
add
aas
sbb
ds
sub
add
push
fs
mov
test
jle
das
popf
fstpt
add
or
and
fs
xchg
add
add
insb
fildll
cmp
add
in
iret
adc
sbb
mov
add
mov
addl
and
sub
jmp
aad
cli
cmp
loope
mov
lods
in
pop
jl
cmp
cld
cli
add
push
repnz
xor
mov
jne
dec
shlb
adc
adc
inc
cli
negl
add
add
or
sub
int3
mov
lock
jge
add
add
imul
add
in
inc
jle
mov
add
add
popa
add
aaa
pop
dec
and
das
pop
fisubl
jle
add
inc
sub
dec
inc
nop
mov
loope
in
sub
inc
ficomps
aaa
cmpsl
add
add
mov
outsb
loopne
jle
mov
inc
push
dec
pop
lcall
add
and
add
add
add
fs
and
and
xchg
js
push
jp
fdiv
and
jecxz
pusha
fistpll
add
add
pop
fsubr
icebp
xchg
test
sub
add
mov
addl
cmp
sub
inc
loope
pop
movsb
mov
roll
mov
mov
scas
fdivrs
sub
xchg
add
add
pop
add
add
mov
daa
je
pop
dec
cmp
popa
aam
dec
dec
shl
adc
fs
dec
and
xor
add
aaa
jl
lret
or
push
mov
inc
push
xlat
es
je
add
insl
xchg
imul
xor
les
inc
sahf
fdivl
mov
movsl
es
cltd
insb
ljmp
jnp
fdivrl
add
push
ds
jo
cmpl
push
filds
jno
mov
mov
divl
ds
das
into
xchg
in
jb
or
dec
and
add
in
push
test
int3
xor
loopne
xchg
popa
out
xchg
push
push
sub
bound
cmp
data16
push
sti
xor
push
out
push
imul
lods
add
cltd
add
in
mov
add
mov
dec
icebp
loope
mov
xor
xchg
xor
pop
lea
mov
testl
les
add
inc
roll
add
cmp
and
and
lock
add
xor
inc
stc
jb
adc
pop
insl
push
mov
or
xor
cld
outsl
mov
xchg
mov
ja
test
mov
ret
fidivrl
aam
add
add
push
repnz
sarl
out
pop
aaa
scas
xchg
dec
xor
push
or
nop
xor
outsl
push
xchg
out
mov
lret
pop
add
add
call
adc
jnp
sbb
xchg
mov
sbb
pop
js
aam
xor
or
mov
xchg
das
fdivrs
in
incb
rcll
or
in
mov
out
ljmp
add
repnz
ljmp
cwtl
mov
mov
adc
icebp
ss
add
shlb
ja
sub
in
or
stc
inc
cwtl
mov
cmp
mov
cmp
inc
push
adc
xor
loop
adc
jne
mov
inc
fisttpl
pop
ret
imul
fwait
cmp
add
cltd
push
pop
int3
mov
dec
lods
mov
sub
int3
jnp
pop
xchg
adc
cmp
insb
fdiv
bound
jae
js
jmp
add
out
cwtl
cmp
add
in
pop
fs
cmp
cltd
js
pop
faddl
xor
adc
imul
fsubrl
jp
shrl
and
enter
adc
in
mov
add
mov
out
add
in
movl
sarb
add
add
adc
hlt
xchg
inc
jns
scas
xchg
pushf
cmp
jg
add
add
add
mov
pop
inc
lods
xchg
pop
loop
add
add
mov
add
cwtl
push
test
lahf
push
les
fsubs
add
add
add
in
enter
xor
add
add
and
repz
rcrl
pop
data16
mov
jmp
add
test
add
sub
fildl
add
aaa
adc
push
add
dec
sub
pop
jne
mov
rcr
add
jl
sbb
add
add
icebp
clc
mov
fnsave
mov
into
stos
js
fdivl
gs
icebp
add
pop
stc
xchg
or
sbb
push
mov
movsb
not
add
mov
fcoms
xor
or
add
popl
hlt
call
sahf
outsl
xor
push
jne
xor
add
movsl
jecxz
iret
stos
adc
lods
add
popa
dec
cltd
sbb
insb
xlat
mov
lea
ret
movb
outsb
cmp
mov
shlb
add
or
dec
enter
mov
icebp
adc
je
shll
imul
mov
cmpsw
sub
add
mov
mov
ret
mov
mov
imul
fbstp
jl
push
loope
insl
add
fldt
jecxz
add
add
inc
add
pusha
test
add
ss
popa
pop
js
xor
add
push
hlt
out
jo
idivb
adc
enter
popf
cli
mov
push
mov
xchg
int3
adc
lods
aas
push
cmp
andb
sub
sub
push
push
sub
and
add
mov
adc
add
cld
cmpsl
outsl
insl
js
test
sub
add
add
pop
and
orl
add
add
bound
out
mov
lcall
and
data16
add
add
les
aad
push
pop
dec
xchg
push
mov
setns
add
add
add
xchg
mov
in
adc
roll
pop
add
cli
roll
addb
xor
add
pusha
add
add
mov
pop
mov
adcl
add
xorb
jnp
cmpsb
daa
push
mov
xchg
rolb
push
sbb
jnp
mov
add
xor
andb
addr16
lods
je
insb
mov
je
repz
hlt
roll
add
push
mov
mov
jecxz
lcall
or
lcall
movnti
mov
loop
in
mov
mov
test
xor
xchg
shld
add
sti
int
add
jno
test
flds
sbb
dec
lods
div
sbb
push
shl
cli
jmp
sbbb
xor
add
insb
mov
add
enter
adc
popf
into
push
pop
jo
jnp
fisubrl
xor
and
add
stos
mov
fdiv
ret
lahf
xchg
iret
xchg
push
push
lds
stos
sub
aad
jmp
das
push
xchg
hlt
and
mov
loopne
jecxz
add
add
popl
fisubs
push
in
leave
jl
lock
sub
cmpsl
pop
sbb
push
add
add
inc
sbb
mov
pop
and
xchg
scas
or
mov
cmp
cmp
lret
mov
adc
xchg
std
or
push
cmp
in
jne
mov
cld
aad
xchg
stc
rcrl
add
dec
outsl
mov
add
addr16
add
cwtl
imul
adc
mov
add
add
jle
or
inc
scas
dec
pushf
cltd
push
movl
inc
lods
fwait
xchg
add
add
negb
adc
and
inc
pop
gs
icebp
shrb
cmp
mov
ret
add
iret
inc
xor
cmp
add
add
push
cmp
sub
pop
scas
int
test
pop
lods
pop
sbbb
call
push
out
decb
xchg
out
add
add
cltd
roll
fildll
dec
int
ffree
imul
add
add
iret
jp
jbe
pushl
inc
das
push
or
push
xor
imul
mov
sub
mov
mov
mov
add
add
jl
rorb
mov
jne
sbb
in
push
lds
aad
jne
mov
add
mov
js
and
js
adcl
xchg
mov
arpl
pop
sti
aaa
scas
bound
mov
push
sub
dec
popa
jbe
es
inc
add
pop
inc
dec
pop
add
add
aas
push
out
mov
data16
ficoms
xchg
adc
or
add
add
mov
sbb
dec
sbb
add
sub
xchg
stos
add
add
shll
jecxz
jecxz
xchg
pushf
sub
ficomps
inc
dec
lret
sub
sub
xchg
and
add
add
xchg
pushf
fs
add
cmpsb
mov
lahf
dec
repz
adc
push
fs
lcall
insb
ret
xchg
xchg
int
int
pop
cmc
dec
das
ss
lods
cmp
pop
mov
jmp
mov
push
sub
fwait
adc
pop
dec
pop
lret
adc
cs
cs
and
jns
inc
xchg
lea
dec
bound
sub
pusha
mov
and
bound
jnp
js
cmp
lahf
cmp
adc
sbb
aas
pop
dec
movsb
sub
pop
cmp
pushf
fldt
and
cld
mov
not
pop
movsb
iret
jecxz
jg
jnp
mov
sbb
push
add
leave
rorl
call
sarb
mov
mov
xchg
add
enter
mov
sub
sbb
loopne
inc
add
add
mov
push
in
and
pop
leave
jo
inc
popl
sbb
out
add
adc
lret
dec
xor
inc
clc
fildl
icebp
add
add
add
scas
mov
adc
or
dec
xchg
sub
add
add
sti
inc
pusha
mov
lods
inc
hlt
mov
inc
shll
xor
add
inc
repnz
mov
mov
mov
pushf
sbb
rcrb
jnp
mov
ss
adc
inc
out
push
mov
dec
jne
xor
cmp
ljmp
pop
call
add
mov
in
leave
push
ret
sub
sub
mov
xchg
cmpsl
js
add
popf
je
sbb
and
sar
aaa
adc
outsl
mull
enter
jne
push
xchg
push
inc
fisttpll
out
cmp
test
dec
jl
adc
adc
dec
daa
jne
fdivl
pop
xchg
jle
xchg
and
add
add
pop
push
popl
stos
inc
inc
in
sbbb
jecxz
popf
push
out
dec
add
lret
addr16
popl
fwait
sarl
mov
xchg
mov
push
pop
add
xor
add
mov
lret
ja
xchg
nop
add
add
in
jnp
sbb
or
add
mov
add
and
mov
xor
mov
add
mov
add
out
push
dec
pop
mov
imul
ret
cltd
mov
mov
xchg
lcall
movsb
push
int
test
daa
test
inc
jge
add
and
iret
push
add
mov
add
mov
fwait
pushf
jle
jmp
aam
add
inc
popa
add
dec
pushf
es
insb
add
loopne
jmp
repnz
pop
in
call
stc
xor
ret
add
gs
add
add
dec
inc
adc
sub
add
mov
xor
mov
mov
rorl
comiss
imul
sub
fidivrl
pop
ss
js
or
pop
sbb
adc
add
jo
and
add
add
stc
and
add
jns
pop
popa
mov
inc
xor
sub
add
add
sub
scas
lea
add
add
add
add
decb
lcall
mov
jno
sbb
mov
mov
cmp
lcall
ret
shlb
jecxz
add
add
adc
pop
pop
fmull
call
mov
lods
nop
mull
inc
leave
dec
das
and
aad
or
movsb
cltd
jle
sahf
pushfw
stos
jge
or
add
cmp
stc
cld
sbb
pop
adc
int3
add
add
push
lea
rorl
int3
add
mov
dec
pop
dec
outsb
lahf
pop
lret
movb
mov
jns
aam
out
fcompl
xor
pop
jmp
mov
popf
add
pop
jae
push
add
or
dec
cmp
mov
jecxz
pop
push
jp
xchg
pop
cltd
sub
repnz
std
add
add
aam
les
add
leave
mov
out
loope
stos
cmpsb
movsl
push
xchg
int3
movsl
shl
mov
pop
push
pop
sti
mov
mov
mov
int
gs
pop
pushf
inc
inc
mov
insl
jbe
cmp
push
rcrb
dec
mov
pop
scas
cmpsl
negl
inc
jl
addr16
mov
imulb
jecxz
mov
dec
adc
push
dec
add
add
push
nop
fsts
imul
push
dec
add
add
jbe
adc
pop
mov
and
aad
cmp
sbb
mov
mov
add
xor
sub
cltd
push
frstor
add
shlb
mov
add
adc
sbb
arpl
pop
adc
add
inc
mov
sbb
ret
orb
into
pusha
imul
mov
leave
xlat
mov
push
mov
add
int3
mov
inc
mov
xor
add
scas
or
lods
lea
mov
mov
sub
js
mov
std
in
jbe
xor
and
lds
aas
or
push
and
fstpt
out
mov
adcb
dec
mov
cli
movsb
jae
mov
incb
sti
jns
outsb
testl
push
inc
repnz
add
mov
add
bound
scas
dec
mov
jns
jns
std
jl
cli
pop
fisubrs
mov
insb
cwtl
gs
js
ret
xor
mov
adc
ds
in
outsb
in
sub
das
adc
mov
stos
gs
fidivl
add
add
pushf
repnz
fmul
push
popa
jns
arpl
adc
add
movsl
out
pop
sarl
jnp
push
mov
loopne
fistpll
ljmp
fmuls
xchg
adc
xchg
adc
adc
push
add
jnp
jne
or
xor
cmpsb
jns
mov
out
test
add
outsb
mov
ficoms
jge
addr16
sahf
xor
adc
mov
dec
add
mov
inc
add
adc
cmp
enter
mov
sub
jge
popa
cs
lods
lldt
add
add
hlt
sub
sub
sar
ja
fwait
in
jb
test
xor
sub
cmpb
daa
mov
xor
out
jge
sub
add
lahf
adc
add
jae
mov
add
lea
fisubrs
scas
cld
mov
sbb
ja
mov
dec
lds
cmp
xor
lods
add
movsb
enter
sbb
sbbl
int
jle
js
cwtl
add
add
push
fdivrl
mov
das
and
fwait
nop
push
add
mov
ret
stc
cmc
jnp
or
aam
orl
lods
mov
cmpsl
or
add
sbb
or
adcb
mov
stc
into
adc
aas
add
dec
add
stos
sbb
js
aam
mov
add
adc
add
sbb
das
fistl
mov
or
dec
mov
inc
mov
cmp
add
add
shl
add
in
jo
mov
add
mov
jae
sub
scas
pop
aaa
sbb
add
sbbl
aaa
leave
icebp
jbe
sub
xlat
add
add
push
aam
mov
jmp
and
or
jns
shr
add
add
xchg
js
in
lret
adc
ret
add
inc
sahf
addb
add
lret
adc
add
xchg
sub
add
add
and
fsub
aam
enter
add
fs
jb
add
orl
nop
loop
xchg
pushf
cmpsl
jne
outsl
daa
fnstsw
fwait
stos
out
xor
push
mov
cmp
adc
mov
mov
clc
mov
pop
outsl
out
aam
fiaddl
sbb
in
or
adc
jmp
mov
jae
insl
outsb
scas
mov
data16
or
add
dec
or
int3
fsub
out
xor
leave
jnp
js
insb
add
mov
mov
mov
add
add
sbbb
adc
add
sbb
fsubrp
jle
add
add
ja
in
cs
ljmp
int
add
sbb
call
leave
sub
arpl
fdivl
les
ja
jmp
pop
movsl
sbb
add
inc
orb
daa
mov
add
jns
pop
add
sbb
fists
lret
mov
add
aad
sbb
mov
jg
add
sub
jp
sbb
std
testl
inc
sbb
mov
mov
dec
and
pop
pop
adc
std
loop
fnstsw
subl
mov
mov
dec
cwtl
daa
sub
cmp
jb
adc
jae
fs
ficomps
loop
sbb
and
fmuls
lock
sbb
fsubl
fs
adc
pop
mov
xor
jbe
test
loop
sub
dec
mov
pop
into
xchg
pop
dec
sub
ret
inc
aaa
dec
lret
lods
xlat
mov
add
mov
push
scas
xor
loope
lea
dec
ret
inc
fxch
out
cwtl
insb
push
inc
mov
jb
xchg
sub
push
dec
adc
xchg
cmp
int
repnz
or
push
push
dec
stos
repz
pop
inc
jmp
shlb
pop
adc
mov
mov
cli
push
bound
lods
data16
test
sbb
xor
xchg
push
add
jb
jns
mov
lods
insb
testb
mov
xor
stos
arpl
sbb
inc
jp
jae
xchg
scas
sub
jmp
bound
pop
mov
sub
mov
addr16
hlt
movsb
rcl
rcrl
inc
add
push
ds
outsb
stos
test
add
out
adc
fwait
outsb
add
add
out
add
add
xor
orb
push
loopne
movsb
cld
stos
sti
add
add
clc
rcrb
ljmp
xchg
mov
movsb
xchg
xor
or
int
push
rcll
arpl
neg
add
add
lcall
jnp
ljmp
test
mov
js
mov
and
add
fsts
and
aas
xchg
insb
push
add
int
push
roll
or
pop
push
dec
mov
stc
cmp
sub
push
out
aad
aam
and
add
xchg
cmp
xchg
xor
sbb
test
rcll
hlt
push
mov
jae
ja
les
jecxz
lods
in
mov
movsl
outsl
iret
lret
add
or
ror
push
mov
cmp
pop
lret
push
xchg
popa
rcll
add
popf
sarb
in
mov
movsl
or
fmull
ja
repz
jp
dec
mov
ja
adc
and
push
lret
loop
push
mov
mov
lret
shlb
sub
dec
or
rcrl
push
fstps
xor
add
add
and
adc
into
mov
je
xchg
dec
push
cmpsb
add
in
push
mov
fisttps
mov
or
add
cmp
jnp
lods
movsb
jnp
mov
sbb
flds
popf
mov
adc
add
xor
out
repz
pop
daa
cmpsl
mov
test
ja
cli
jnp
cmpsb
sbb
insb
les
sbb
lds
add
mov
push
or
adc
dec
xorb
data16
mov
cmp
arpl
add
fbstp
clc
ds
ljmp
mov
je
xchg
and
jp
out
outsl
jecxz
pop
stc
testl
push
shrl
push
lods
mov
cmpsb
pop
push
cltd
inc
sti
adc
mov
pop
push
dec
add
add
jl
fdiv
mov
pop
push
jno
adc
pop
call
loope
push
repnz
mov
cmp
mov
lods
scas
mov
fmul
add
cmp
hlt
jae
sbb
shrl
lret
lea
and
sub
mov
repnz
add
sti
cmp
aad
fists
mov
lods
cmp
call
fucom
aas
sub
push
push
mov
lea
aad
add
add
add
push
cs
adc
nop
adc
add
xchg
xlat
cmp
shll
mov
inc
xchg
adc
lret
test
arpl
pop
outsl
cwtl
mov
leave
mov
mov
add
out
push
cwtl
cld
or
loopne
pop
dec
jecxz
je
sbb
jge
or
das
ljmpw
sub
loope
testb
add
jb
jp
pop
and
test
imul
mov
jle
mov
jne
dec
cmp
test
add
repz
jne
mov
add
mov
sbb
repnz
inc
pop
mov
int
lods
ss
popa
insb
cmp
add
cmp
add
dec
add
mov
in
adc
dec
daa
sub
in
inc
outsb
dec
sbb
adc
pushf
add
add
add
jb
test
push
sub
popf
xlat
jns
and
xor
hlt
cs
enter
pusha
sar
add
sbb
testb
dec
jge
outsb
add
outsb
pusha
or
out
adc
mov
add
adc
mov
fwait
and
scas
mov
add
add
jns
mov
inc
inc
std
sbb
add
mov
fldl
xchg
xchg
ret
pop
push
cmpsl
add
add
es
jecxz
add
sarb
jae
dec
xor
cmp
sti
outsl
pushf
and
ljmp
dec
stos
push
arpl
repnz
pop
jecxz
daa
shlb
xchg
push
ds
jns
shll
sub
aam
mov
out
int
test
dec
ja
inc
adc
adc
xor
sub
jge
jb
outsl
dec
or
js
add
mov
adc
add
cltd
and
pop
inc
clc
mov
ss
cmp
popa
push
mov
lret
mov
daa
pop
push
mov
les
rcr
add
add
sbb
jne
mov
cmpsl
fcoml
xor
ss
nop
repz
add
pushf
xor
pop
test
rclb
into
mov
or
cmp
testl
sub
and
add
push
lds
and
loop
pop
cli
pop
mov
ljmp
push
mov
movsl
in
pop
stos
loop
adc
int
push
sub
add
jno
std
faddl
fcoms
ja
pop
enter
add
add
lock
loop
mov
add
dec
push
mov
xorl
enter
adc
jne
add
imulb
jne
data16
adc
scas
adc
sti
and
push
fs
cli
lock
mov
mov
mov
movsl
add
add
sbb
das
jp
inc
int
xchg
fstps
inc
push
daa
push
in
adc
orb
in
mov
arpl
lcall
mov
fxch
imul
cmpsl
inc
mov
adc
pop
inc
mov
pop
sahf
xor
dec
add
add
mov
inc
shll
imull
xchg
xlat
sub
sahf
cmovs
mov
mov
fs
js
inc
je
mov
fnstsw
iret
adc
push
mov
mov
shrl
scas
test
push
rorb
dec
out
inc
adc
out
fcompl
and
add
add
ljmp
mov
sub
mov
xchg
sub
pop
add
in
sub
pop
xor
jmp
or
sbb
sub
js
adc
cmp
cmpsb
adc
les
jb
xchg
pop
popa
mov
nop
jmp
stc
dec
pushf
mov
aam
push
add
xor
scas
movsl
mov
idivb
sub
jae
lock
cmp
dec
jmp
push
xor
pusha
sbb
mov
cmpsb
or
test
scas
xor
jno
add
ss
inc
or
mov
daa
mov
inc
mov
jecxz
adc
mov
or
sbb
pop
mov
xchg
movsl
in
test
shrl
sbb
mov
lock
scas
sarl
xor
cmpsb
mov
xchg
in
in
inc
mov
icebp
pop
mov
cmc
push
mov
add
xchg
movsb
adc
test
ja
mov
call
add
imul
gs
jmp
add
dec
mov
pop
jnp
pop
pop
sti
inc
jle
std
adc
cli
rorb
lock
adc
xchg
in
push
or
aam
mov
push
lret
in
movl
adc
push
and
pop
jg
push
out
lds
dec
sti
pop
js
stos
int3
mov
jp
aaa
addr16
xchg
cli
fildl
add
xor
hlt
add
push
cmp
push
push
fsubr
adc
pop
imul
fcmovbe
aaa
lods
mov
xor
xor
and
add
add
pop
and
call
inc
arpl
pop
cmp
cmp
dec
es
pop
out
cmpsl
dec
popa
aad
and
stos
mov
cmc
mov
mov
es
aad
inc
sub
or
lock
dec
aaa
and
adc
test
wrmsr
push
fwait
push
push
jbe
ja
mov
stos
in
or
mov
cmpl
ljmp
ds
pop
std
jae
iret
push
icebp
mov
pusha
les
cmpsb
pop
neg
shr
adc
in
in
sbb
imul
repnz
inc
icebp
ss
sub
mov
mov
sub
xchg
sbb
jl
cmp
cli
cmp
cs
add
pop
push
push
in
add
add
outsl
sete
inc
xchg
jmp
fcomps
ss
lret
idivl
dec
jb
xchg
sub
push
dec
inc
sbb
cmp
mov
sbb
xchg
push
ret
jl
add
cs
out
sbb
aas
xchg
add
add
inc
stos
mov
inc
pushf
jbe
add
xor
dec
clc
xchg
add
shlb
mov
add
add
adc
and
add
mov
cmp
add
test
mov
mov
adc
pop
adc
rclb
add
lret
sub
mov
std
add
add
jmp
stos
jbe
test
aam
aam
lahf
scas
aas
lcall
jb
cmp
clc
mov
mov
das
ret
sbb
xor
pusha
add
jp
or
out
sbb
jns
inc
adc
dec
xlat
and
push
sbb
add
mov
mov
fnstsw
add
jne
jl
cmp
or
loop
shlb
xor
dec
out
mov
lahf
dec
je
mov
in
xchg
ret
sub
in
mov
add
aaa
icebp
test
push
int3
ret
popf
or
cmp
push
cmpsb
jp
xchg
dec
sub
rorb
xor
test
sbb
sbb
add
stos
inc
dec
or
mov
aas
fldl
lods
and
dec
nop
icebp
and
pop
sahf
jo
pusha
in
cmove
scas
mov
lds
leave
mov
addr16
dec
sbb
xchg
in
imul
push
push
adc
cmp
sbb
inc
cwtl
and
daa
fdiv
ss
xchg
push
pop
inc
les
inc
sbb
test
dec
lods
jae
roll
add
imul
push
add
out
adc
sti
lea
ret
pop
ret
xor
enter
jg
cld
repz
fwait
sub
test
mov
mov
es
add
add
sub
movsl
popa
cmpsl
pop
mov
sti
out
jg
inc
xor
add
movsl
xchg
pushf
mov
xchg
adc
dec
pop
push
cmp
das
jne
repnz
std
pop
mull
idivl
insb
stos
xchg
fsubp
loope
inc
push
mov
out
xchg
insl
stos
lock
push
cltd
push
fidivs
repz
jno
in
push
cmc
gs
push
fldt
mov
pop
jb
out
lret
lock
xchg
adcl
fsubr
fdivrl
outsb
bound
mov
outsl
add
fldl
jmp
mov
push
ds
add
dec
mov
mov
adc
dec
aam
rorb
icebp
mov
arpl
stos
lahf
testb
cmc
push
ja
xor
mov
add
dec
lret
add
add
xchg
pop
xlat
cmp
inc
cmp
add
jno
test
or
loop
push
mov
dec
add
cmpsl
add
xchg
push
lahf
xor
dec
out
lods
in
jmp
es
add
shlb
or
aam
jge
cli
push
cmp
bound
jns
je
xchg
pop
inc
mov
pop
jl
mov
test
mov
int
ficompl
pushf
fistl
sub
outsl
scas
jns
sbb
push
mov
pop
hlt
fcompl
lods
add
mov
pop
push
add
imul
fstpl
add
ss
or
sub
or
jg
rcrl
lret
jbe
adc
or
ja
or
pushf
mov
popf
sahf
mov
data16
iret
clc
jmp
jp
sub
orl
add
add
cmp
jne
add
andb
xor
add
and
xor
into
add
insl
dec
cmpsl
xor
push
mov
jae
cmpsb
dec
lods
jge
shrl
dec
or
shrb
popf
je
idiv
mov
insb
cmp
mov
movsb
jmp
and
mov
enter
pop
sub
repz
cld
mov
mov
mov
push
repz
push
sub
lret
loop
test
add
jae
cmp
mov
push
stos
dec
mov
sbb
mov
sbb
add
ret
imul
clc
pusha
add
add
mov
in
pop
jecxz
das
push
xlat
lea
fsubp
ret
xor
mov
popa
andb
pop
outsb
fnstcw
lea
or
loop
and
dec
push
mov
in
mov
add
sub
lds
es
mov
xor
adc
xchg
lock
and
aam
negl
out
in
cmp
adc
fsubl
jb
test
in
fsubrl
dec
lcall
mov
mov
enter
jl
sub
sbb
enter
fnstsw
outsb
add
lret
stc
dec
sbb
outsl
js
or
sub
test
xor
inc
test
cmp
fimuls
xor
rolb
shlb
aam
je
pop
add
add
adc
sbb
dec
mov
rcll
add
mov
add
cs
add
sbb
dec
sbb
lret
push
mov
add
push
xchg
jnp
out
xlat
xchg
push
test
jg
inc
movsb
js
adc
ds
pop
cmpsb
loope
sub
inc
in
test
cltd
xchg
sub
sarl
adc
add
mov
loopne
add
xchg
out
bound
jne
adc
mov
pop
sbb
add
sub
mov
jmp
lahf
dec
add
loopne
pop
imul
mov
add
fldl
add
push
add
enter
test
pop
add
sub
add
xchg
add
lret
pop
jge
add
movb
xchg
add
bound
data16
jo
mul
add
sub
inc
repnz
add
add
sub
cltd
out
jns
inc
lret
cmp
aam
fsubr
sti
imul
fildl
jl
cmp
lret
sarl
icebp
add
or
aam
jl
cmp
loopne
loope
add
ret
sti
popa
js
outsb
push
mov
add
and
add
add
in
andl
mov
pushf
cmp
mov
add
aam
stos
mov
int
dec
add
pop
jno
adc
mov
test
call
add
add
sbb
add
cmpsl
adc
shll
mov
out
pop
xchg
xchg
adc
ja
enter
mov
add
add
inc
test
js
xorb
dec
aam
add
add
xchg
in
cmp
mov
movsl
adc
pop
outsb
jne
add
add
icebp
leave
xor
dec
js
add
add
dec
fs
pop
cmpb
xor
or
sbb
nop
mov
je
add
and
sarb
in
add
inc
mov
add
loopne
xchg
jmp
add
add
rclb
add
add
shlb
add
cmp
hlt
add
add
mov
adc
mov
add
sub
mov
or
fisubrl
add
sub
incl
sub
ficoml
pop
add
push
inc
pop
mulb
jae
push
push
insb
jne
inc
les
mov
int
push
int3
test
push
lock
pop
scas
stc
dec
mov
daa
mov
enter
add
pop
pop
jl
pop
or
jne
or
shrb
mov
push
adc
mov
popa
sub
or
add
cwtl
xchg
sub
stc
inc
sbbb
inc
or
jg
xchg
sbb
stos
inc
imul
test
jge
in
push
negl
lret
hlt
jno
sub
addl
xchg
sbb
sub
nop
jmp
aaa
add
xlat
mov
dec
sti
and
sub
lods
dec
push
outsl
mov
repnz
inc
and
gs
jmp
push
testb
cmp
lock
xchg
xchg
push
shlb
adc
push
add
ficomps
ficoms
push
js
mov
fsub
iret
jae
cmc
mov
dec
pop
in
ret
ret
std
push
xlat
repnz
add
add
sub
mul
lcall
push
add
add
xchg
cs
jae
sub
test
addr16
add
add
or
out
add
mov
or
inc
std
push
adc
xor
jb
sub
dec
push
gs
inc
sub
cmpsl
je
add
mov
divb
or
push
stc
hlt
mov
adc
test
movsl
inc
xchg
push
cmpl
dec
xchg
xchg
cwtl
mov
push
sbb
mov
jne
arpl
add
and
mov
dec
clc
and
mov
lock
or
mov
xchg
out
mov
jmp
sub
ret
test
add
xor
xchg
ljmp
xchg
movsb
popf
jb
sbb
inc
jb
xor
or
sub
cmp
xor
xchg
sub
idiv
add
mov
xor
cmp
jg
imul
mov
mov
js
add
cltd
pop
and
sbb
mov
inc
xorl
inc
shrb
aam
mov
mov
add
mov
jl
inc
pop
mov
dec
ret
jne
or
fstps
aad
inc
push
add
mov
ss
lret
pop
dec
push
fsubrl
and
push
add
lock
imull
in
cli
lock
movsl
adc
push
xlat
loopne
sub
push
jae
dec
out
sahf
outsb
sldt
add
fisttpl
push
aad
popf
cmpsb
rorl
push
push
push
push
bnd
mov
inc
icebp
jge
add
add
pop
pop
pushf
xor
or
nop
ret
int
add
adc
es
cmpsl
fmull
sbb
and
mov
aas
pop
cltd
adc
mov
add
add
and
gs
xor
add
in
jge
cmc
ss
mov
aam
ret
mov
insl
hlt
hlt
ja
mov
jns
lods
and
clc
or
in
loope
add
pop
les
mov
xchg
test
test
push
rcl
scas
sbb
xchg
pushf
mov
cmp
fiadds
push
and
je
xlat
daa
dec
js
and
dec
outsb
popf
jl
sub
fsubrl
pop
fcoml
in
fs
pop
push
decb
push
mov
ds
xchg
sbb
cmpl
xor
into
stc
clc
sub
clc
cmp
movsl
ret
mov
mov
sbb
sbb
arpl
incb
inc
add
loope
pop
pushf
jbe
mov
and
dec
test
js
jmp
int3
lcall
mov
add
pushf
pop
fildl
out
add
xor
pop
mov
pop
fld
repnz
cltd
xchg
fdivs
add
add
mov
or
gs
shlb
std
add
ret
pop
scas
cltd
push
add
aad
pop
iret
xchg
dec
stos
add
add
add
incb
mov
ret
pop
cmp
cmc
in
mov
movsl
in
addr16
sbb
xchg
or
sub
adc
push
shrb
xchg
lea
dec
push
push
add
adc
out
pop
orl
push
or
sub
mov
jecxz
imul
xlat
jno
jno
inc
cs
cmp
pop
push
fwait
out
cmpsb
cltd
mov
ret
xor
test
jp
xor
add
add
rclb
inc
ftst
push
pop
lea
or
add
into
pop
in
adc
movsb
shl
popa
cmp
sbb
xchg
sbb
pop
and
xlat
insb
shll
loop
push
inc
mov
add
sbb
dec
fdivrl
mov
dec
xor
add
or
cmp
add
add
cmp
leave
add
push
clc
repnz
add
and
insl
ja
add
stc
sahf
jo
std
sub
cld
pop
daa
mov
pop
pop
xor
pop
mov
bound
lock
add
xchg
pop
mov
nop
sub
ja
mov
push
scas
xchg
push
push
and
xchg
xchg
nop
xchg
outsb
ljmp
push
repz
mov
jg
rorl
dec
sbb
mov
push
pop
int3
and
mov
cmp
daa
xchg
fsts
in
push
add
call
sbb
add
or
xor
test
mov
test
xor
std
out
dec
stc
mov
ret
lods
ret
jne
out
inc
cld
push
mov
int
add
jle
repz
test
outsb
sti
lcall
test
inc
arpl
xchg
pop
inc
lret
imul
jns
jns
jbe
mov
mov
in
inc
jmp
cmp
mov
and
roll
loop
inc
xchg
ret
out
nop
movsl
add
scas
scas
fstpl
lock
add
and
roll
scas
pop
jb
jle
aas
pop
nop
insb
sarb
aad
lock
arpl
das
sbb
add
xchg
mov
outsb
loopne
dec
adc
push
fcoms
sti
rcl
lret
xchg
adc
sub
fidivrl
mov
test
inc
out
mov
lods
inc
pop
cmp
dec
add
loope
daa
push
fwait
adcb
dec
ret
mov
loope,pn
jns
daa
adc
xchg
sti
imul
push
lods
xchg
inc
xor
xor
ret
cli
cmp
out
clc
cmp
in
xor
ss
ss
cmpsl
sbb
and
shll
fsubs
lret
lods
cmp
adc
fcmovne
pop
mov
jns
xchg
mov
push
shl
xchg
int
lods
in
push
dec
jae
sub
mov
sbb
sahf
insb
ret
sub
sarl
mov
cwtl
push
xor
push
push
fs
and
int3
xor
and
dec
jb
aam
ja
cmp
movsl
inc
loope
push
ds
adc
sub
push
mov
repz
add
push
jmp
int
call
push
mov
sbb
dec
imul
rclb
fwait
add
movsb
xchg
push
push
add
addb
and
lock
or
mov
jae
push
inc
add
xchg
jecxz
cs
xor
iret
imul
dec
adc
repnz
lods
add
shl
outsl
scas
leave
or
cmp
jle
aas
jns
sarl
scas
insb
jl
mov
jecxz
add
mov
in
ficompl
into
push
ret
sub
shrl
mov
int
aas
aaa
cmc
data16
lods
jnp
add
mov
mov
mov
push
js
addr16
jb
add
add
add
clc
dec
out
or
jg
stc
mov
pop
push
xor
stos
scas
icebp
fdivrl
movsb
test
pusha
stc
cmpsl
and
jae
dec
shlb
ret
popa
add
xchg
cltd
cwtl
lret
pop
add
in
sub
shll
mov
add
dec
add
and
add
test
add
addb
inc
push
add
sbb
addl
add
push
sub
lea
repz
rorl
add
pop
add
inc
dec
add
add
mov
add
dec
je
jl
xor
andl
sti
bound
iret
scas
xor
subb
mov
add
icebp
add
pop
xor
cmp
sbb
inc
push
jne
aam
dec
add
leave
add
out
sbb
cmp
adc
add
pop
cmp
sbb
add
cld
xor
fs
faddl
icebp
repnz
lds
add
dec
mov
add
add
add
jo
add
push
add
in
adc
xchg
fisubrl
add
sti
push
add
add
add
aad
lahf
nop
adc
xor
add
sub
jbe
dec
add
add
add
add
add
add
add
add
cltd
adc
push
cmp
daa
mov
add
inc
and
das
aam
dec
inc
push
xchg
repz
add
add
pop
xchg
jo
jp
mov
aam
jge
add
add
dec
int
mov
and
test
add
add
adc
inc
subb
cmc
lods
cmp
lock
repz
xor
inc
xchg
xor
pop
clc
sbb
lods
sub
jae
mov
loopne
mov
stos
sbb
int3
push
mov
push
lret
or
push
push
popf
nop
xchg
xchg
das
add
push
fisubl
push
jns
lods
push
stos
jecxz
arpl
popf
push
insl
xor
cmp
dec
xchg
nop
mov
gs
xchg
lret
sbb
rcrb
fstl
jp
add
add
add
rorl
mov
icebp
sahf
pop
cltd
jge
adc
xchg
jae
jl
cmp
xchg
or
push
fldt
dec
js
repz
inc
das
push
cmp
dec
pop
or
std
dec
adc
call
mov
jle
outsb
scas
lock
fistps
js
and
mov
jp
pop
test
cmc
mov
js
jne
and
mov
inc
std
pop
out
arpl
mov
mov
test
arpl
push
xchg
loopne
jmp
inc
cmpsl
insb
inc
aas
pop
sbb
ret
push
outsb
cmc
push
mov
mov
mov
or
push
pop
xchg
sbbl
push
insl
mov
or
adc
inc
cmp
adc
xchg
pop
jmp
fstl
ror
adc
adc
mov
movsb
sub
repnz
xchg
xchg
add
xor
lcall
cmp
jmp
or
jae
xchg
dec
mov
mov
lret
js
outsl
mov
push
shrl
cmp
dec
add
add
add
push
sbb
loope
movsl
xlat
cwtl
test
adcl
stc
cmp
push
push
jg
sbb
mov
jnp
push
aas
imul
xchg
sbb
sub
test
and
int
mov
jnp
mov
pusha
fwait
imul
jmp
sub
xor
std
adc
scas
fs
jae
xchg
incb
mov
add
adc
ret
test
sbb
lods
and
inc
add
mov
into
sbb
pop
jmp
add
push
icebp
inc
jl
aas
lret
les
enter
push
ficoms
xchg
cltd
or
insb
gs
mov
add
call
ret
dec
xchg
adc
cmpsb
xchg
inc
std
jle
mov
rol
or
mov
es
xchg
mov
xchg
test
add
add
stos
cmpsl
inc
jge
mov
xlat
cld
insb
clc
jae
add
or
je
cs
push
or
cmp
dec
shrb
inc
iret
xor
jmp
add
push
adc
add
loop
lcall
inc
jp
sub
out
or
xchg
loop
push
repz
push
jle
imul
add
add
mov
xchg
rcll
add
icebp
mov
ds
fnstcw
addr16
push
ja
sahf
cmp
hlt
cmp
dec
out
mov
sbb
dec
mov
add
add
mov
xorl
mov
sbb
fld
sbb
notl
dec
push
adc
push
mov
inc
stos
imul
adc
iret
fdiv
out
sub
push
cltd
ja
pusha
inc
jo
mov
xor
add
add
push
sub
push
mov
fstps
xchg
add
sbb
cmpsb
mov
outsb
orl
xchg
fistl
add
add
inc
jg
mov
lock
and
push
pushf
sbb
jbe
imul
dec
pop
adc
aaa
mov
inc
aad
and
movsl
repz
or
dec
and
cmp
or
push
inc
fdiv
mov
mov
jbe
movsb
mov
les
mov
cs
mov
ja
jns
imul
out
mov
inc
jno
xchg
in
mov
xchg
pop
aaa
stc
pop
loopne
xchg
xor
inc
lods
and
sub
sbb
inc
xchg
rolb
sub
and
pop
scas
fwait
inc
or
xchg
test
mov
cmp
add
dec
cmp
mov
push
mov
mov
add
jnp
xchg
inc
mov
fistl
lahf
lds
mov
cmp
loop
in
daa
ds
jecxz
mov
js
mov
xchg
test
sub
arpl
pusha
or
ja
xchg
push
add
add
add
repnz
pop
cmpsb
mov
daa
dec
jno
aad
cmp
jbe
hlt
int
xchg
inc
popf
dec
cmp
inc
inc
popf
add
add
sbb
pop
inc
jl
xor
repz
loopne
sbb
aas
icebp
pop
dec
push
mov
lret
out
push
pop
enter
addl
and
add
insl
enter
popa
arpl
aaa
dec
mov
lods
jns
jg
fcmovnbe
pop
test
clc
sub
or
pop
lcall
add
add
add
add
add
add
add
sub
add
add
add
stc
add
xor
add
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
add
add
add
add
add
add
add
imul
add
dec
push
xchg
sbbb
xchg
sbb
add
lcall
add
add
add
add
add
sub
lods
dec
or
insl
ds
pop
jmp
add
push
dec
mov
pop
lds
mov
cmp
pop
sarl
add
xchg
out
add
add
mov
rorb
scas
jno
outsb
pop
add
mov
adc
add
jp
lods
inc
pop
jg
xor
cmp
xor
shlb
and
pop
add
add
xchg
adc
inc
sbb
and
jne
sbb
push
je
out
mov
mov
movsb
fmul
repz
fsubp
rcl
outsl
inc
add
add
add
dec
outsb
cmpsl
adc
sbb
mov
add
adc
test
test
fsts
js
out
mov
clc
sahf
sub
ficoml
mov
gs
insb
sbb
or
xchg
lahf
dec
xor
jl
jg
xorb
idivb
mov
out
jbe
lods
mov
mov
stos
aaa
mov
arpl
mov
sub
adc
inc
loop
xor
inc
aam
inc
add
add
add
adc
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
mov
push
add
mov
cmc
add
add
add
add
add
add
add
test
jecxz
jg
std
add
rolb
clc
add
add
add
pop
add
lods
add
filds
repnz
cmp
inc
add
test
scas
add
add
dec
add
sbb
int
addl
in
add
add
lock
add
sbb
rolb
and
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
adc
mov
add
add
fiadds
add
xchg
add
add
dec
add
lock
aaa
add
add
add
add
add
add
push
add
add
loop
sub
add
add
add
add
add
add
cltd
add
pushf
add
add
add
add
add
push
add
add
add
add
inc
je
mov
mov
xor
in
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
ljmp
add
js
push
add
neg
mov
loope
sub
cld
sbb
clc
xor
stos
cmp
je
mov
fcoml
scas
aas
mov
add
add
add
fadds
mov
push
add
mov
popf
add
add
add
add
add
add
xor
mov
roll
dec
add
add
loopne
pop
add
add
add
add
add
add
repnz
cmp
inc
add
add
add
pop
add
or
faddl
nop
add
add
add
add
add
or
shlb
dec
xchg
push
fwait
cmp
adc
jge
cwtl
sub
and
sbb
popf
adc
push
rcrb
add
and
dec
insl
movsl
xchg
add
rcrl
push
test
adc
add
rclb
inc
and
addr16
cli
xchg
sub
mov
jns
mov
cmp
push
pop
sub
sub
test
jae
xchg
aas
out
add
ja
mov
mov
xor
in
add
add
insl
orb
mov
call
dec
sbb
jbe
mov
mov
push
pop
xchg
cmp
xchg
xchg
pop
or
imul
outsb
mov
pop
xchg
inc
js
cmc
imul
fnstcw
push
mov
aaa
adc
inc
stos
mov
inc
and
cmpsl
jnp
or
cs
pop
mov
mov
ficoms
mov
sbb
push
sbb
sbb
and
push
popf
xor
sbb
jno
xchg
cmp
xor
xchg
int
mov
sub
addl
xlat
mov
and
mov
sub
cmp
ss
xor
and
push
jmp
xchg
xchg
cld
inc
mov
jg
push
xchg
and
pop
cmc
inc
lods
or
popf
sub
cmp
push
test
lret
sbb
push
mov
mov
cmp
pop
fcmovu
sbb
pop
dec
andl
ja
pop
mov
ljmp
js
mov
mov
imul
xchg
test
push
leave
je
addb
push
notb
push
popa
mull
pop
mov
xor
lods
mov
inc
sub
jns
xor
sub
iret
pop
mov
or
mov
fcoml
mov
push
pop
adc
push
mov
iret
adc
adc
repnz
mov
dec
scas
add
inc
lods
addl
aam
add
sub
push
or
adc
arpl
stos
lods
mov
cmp
mov
and
movsl
dec
or
scas
fnstenv
pop
out
imul
icebp
daa
lods
adcl
xchg
and
lock
or
cltd
loope
rorl
int3
hlt
xor
ss
pop
pop
lahf
inc
fxch
add
out
jmp
stc
popa
fidivrl
testl
pushf
push
pop
cli
shll
inc
cmp
jmp
push
mov
adcb
fmull
test
jmp
ds
xchg
cmp
test
jno
out
mov
cmp
fdiv
jp
mov
push
das
xor
test
lahf
sbb
push
xchg
dec
mov
adc
scas
xor
adc
lock
cld
cltd
fstl
ficomps
fists
mov
popf
loope
in
adc
imul
mov
cmpb
shll
pop
push
or
pusha
test
cmpsb
scas
mov
inc
add
push
stos
inc
or
test
aaa
sub
or
xchg
repnz
jecxz
mov
into
and
fisttpl
inc
dec
pushf
loop
int3
adc
icebp
xor
adc
pop
pop
pushf
imull
xchg
mov
sahf
jb
add
add
xlat
xchg
inc
icebp
js
dec
lahf
and
jl
clc
or
push
lods
out
ds
push
add
add
dec
push
add
mov
sub
add
add
add
add
add
mov
add
pop
iret
js
stos
ret
add
add
out
imul
add
add
mov
add
add
ja
push
jle
add
fsts
add
xchg
lds
outsl
mov
add
pop
leave
ds
xor
imul
add
rolb
sbb
pop
add
out
scas
addb
adc
add
xor
add
jno
and
adc
aam
pop
inc
push
cwtl
loopne
add
add
jle
jge
push
data16
dec
outsl
mov
aad
push
push
mulb
mov
ja
add
sbb
shl
mov
add
jb
arpl
imul
sub
add
lock
gs
or
fldt
pushf
add
aad
add
push
pushf
add
xor
and
popa
lods
and
dec
cmp
mov
xlat
xor
std
outsb
xchg
add
dec
cmpsb
sbb
fistl
mov
adc
inc
dec
mov
xchg
cmpsl
je
mov
inc
mov
cmpsb
dec
or
mov
add
add
add
add
add
add
push
dec
push
pop
add
add
pop
leave
add
fwait
add
mov
les
add
add
ret
les
pop
cltd
cmp
add
push
add
or
mov
xor
add
cmc
xchg
pop
lret
add
add
xor
pop
add
add
outsl
mov
add
add
dec
cmp
add
std
push
add
cwtl
in
imul
add
or
addr16
loope
dec
add
add
add
and
aad
add
add
inc
mov
add
shrl
scas
stos
inc
add
add
add
push
cs
xor
add
add
jnp
push
fwait
add
add
paddusw
add
stos
movb
add
imul
add
add
add
int3
faddl
add
add
jg
arpl
jbe
fnstcw
inc
add
add
add
popa
pop
je
add
add
add
add
or
add
add
stc
add
add
mov
pop
jnp
add
add
das
loope
add
add
push
jecxz
std
add
add
andb
add
jp
lods
add
add
stos
outsb
mov
add
jo
dec
push
add
rcl
add
add
add
and
icebp
add
add
sbb
test
add
add
add
add
fistl
add
add
cmpsl
sarl
add
movsl
rclb
call
pop
dec
add
adc
add
cli
cmp
lcall
add
fstps
add
add
add
add
add
add
and
hlt
add
dec
sete
add
add
sbb
inc
add
add
add
lcall
daa
mov
add
add
jne
mov
add
adc
add
add
add
add
add
add
add
sub
add
add
jge
add
add
lds
add
adc
int
add
add
sub
call
add
cmpsb
or
add
inc
repz
add
sub
pop
lret
add
sbb
jbe
add
add
rolb
add
add
mov
add
incb
add
imul
add
push
int3
mov
add
add
xchg
adc
add
add
lock
filds
add
add
std
add
add
add
add
add
test
dec
add
add
mov
pop
cs
xchg
roll
es
add
lock
push
pop
add
and
int3
adc
mov
pop
add
mov
add
pop
flds
lret
add
push
add
add
mov
xchg
mov
add
mov
cli
and
add
cs
add
addl
jno
inc
add
adc
add
lcall
xorl
add
lods
repz
add
add
pop
add
shrb
add
and
add
outsl
cmp
add
xor
cmpsl
pusha
daa
add
das
bound
xor
insl
sti
add
or
xor
icebp
add
mov
add
in
sbb
mov
jne
into
add
pop
push
add
shlb
add
in
sbb
adc
add
pop
add
pop
cmp
sub
add
popf
mov
fistpll
movsl
and
xor
mov
fwait
sti
push
lock
out
fcoms
jae
or
popf
or
je
jle
mov
inc
jbe
xor
push
ret
or
out
or
mov
add
jno
jg
push
add
adc
dec
bound
aas
cmp
push
popl
add
scas
insl
jo
movsb
in
aad
push
jae
shrl
mov
xchg
lret
xor
xchg
outsb
mov
add
pop
inc
loopne
push
sbb
xor
scas
push
rolb
add
cld
jl
inc
mov
and
sbb
aaa
pop
xchg
cmp
inc
or
add
in
jns
push
nop
push
ja
sbb
fistpl
push
ror
or
jmp
xchg
lds
mov
insb
shll
cmp
lahf
inc
ds
mov
xchg
jle
jp
mov
add
and
test
add
outsl
cmp
imul
incl
loop
inc
xchg
mov
out
jp
ja
mov
sbb
js
pusha
mov
insl
push
enter
push
js
push
roll
incl
inc
dec
lret
or
jmp
or
dec
and
mov
push
or
sub
cmc
pop
push
add
clc
aad
dec
fnstsw
pop
jl
add
add
mull
movsb
xchg
add
mov
loope
add
sbb
push
outsb
loopne
sbb
push
loope
add
loope
inc
popf
fisttpll
into
dec
xor
or
add
mov
jmp
pop
cmpsl
and
inc
sbb
movb
into
paddusw
pop
ja
sbb
inc
rcl
rolb
mov
add
movsl
fs
lock
inc
lahf
add
push
push
or
lods
adc
test
imul
pop
sub
cltd
inc
cmp
add
mov
push
fidivs
xchg
lret
dec
add
push
mov
lret
jae
incl
add
xchg
cli
dec
mov
or
subl
ret
add
dec
stos
stos
jae
inc
enter
adc
movl
and
subb
push
xor
inc
sub
push
lcall
jp
xor
add
push
push
mov
ja
pop
dec
jp
mov
leave
in
add
cmc
addr16
mov
imul
lret
out
mov
test
jno
lods
jns
ja
scas
daa
and
das
inc
stc
adc
add
or
jl
lcall
pop
xchg
push
es
push
jecxz
mov
xor
add
pop
data16
push
sbb
adc
pop
jbe
sbb
add
lea
fstl
mov
add
fiaddl
mov
pop
jno
mov
mov
mov
or
mov
cmp
jl
aam
xchg
cmp
mov
xchg
popf
or
lods
push
mov
in
flds
add
cli
fadds
sbb
roll
lahf
insl
repz
push
jne
add
movsl
cmp
popa
lods
add
sub
dec
add
mov
pop
dec
test
addb
bnd
jbe
dec
cmp
lahf
xor
cmp
push
add
lret
std
mov
push
jae
dec
scas
clc
leave
lret
xchg
adc
inc
shll
and
in
add
fnsave
jnp
imul
shrb
inc
out
add
jae
test
pop
mov
imul
cmp
std
cmp
dec
sahf
cmp
js
cmp
sbb
add
push
push
xchg
cli
jb
arpl
imul
jl
movsl
adc
dec
xor
add
fcomi
mov
add
mov
add
add
loop
xchg
add
add
add
insl
repnz
add
add
stos
lret
add
add
mov
cmp
add
add
bound
in
add
add
add
add
fildl
sldt
add
cmpsl
jp
mov
add
cmp
jp
jmp
adc
add
ret
xchg
add
add
add
add
add
add
sub
xchg
addl
call
add
insl
mov
add
xlat
add
add
add
popf
add
add
ret
jbe
add
in
add
sub
add
add
mov
add
add
add
add
xor
fildll
add
add
xor
movsb
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
add
int
add
add
add
addl
add
in
add
mov
add
add
add
add
add
add
add
add
add
out
add
and
add
pop
add
add
add
add
add
add
add
add
add
xchg
add
add
add
pushf
add
add
add
add
add
add
add
push
add
add
add
mov
add
xchg
add
add
add
cmp
add
sub
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
mov
add
addl
add
lods
add
add
add
add
add
add
add
add
add
std
add
add
add
add
add
add
add
aas
add
add
add
add
add
outsb
add
add
add
add
add
add
add
test
add
popl
add
inc
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
repz
add
add
add
lret
add
add
add
xchg
add
add
add
add
jl
add
add
test
add
add
add
mov
mov
add
mov
cs
jle
add
add
fstpt
jae
add
cmp
add
addb
add
ss
jae
aaa
and
hlt
ljmp
jnp
and
jne
add
add
add
xchg
clc
push
stos
imul
fiadds
jnp
fsts
mov
mov
add
ret
add
mov
push
xchg
fimuls
mov
addb
add
add
enter
xor
mov
dec
fimull
aaa
inc
mov
and
dec
add
les
fmulp
xor
and
inc
xor
mov
pop
jg
fcoml
add
les
add
repz
jne
sbb
xor
pop
cmpsl
mov
popf
jecxz
pop
stc
jb
pop
jbe
insb
lods
repz
shll
movsb
test
add
add
add
cs
nop
xchg
pop
push
loopne
pop
dec
mov
xchg
push
pop
es
pop
jnp
cmp
outsl
push
dec
add
repz
cmp
add
add
add
add
push
movsb
add
add
add
imull
add
add
add
adc
or
add
add
add
add
xor
add
add
add
add
add
add
loop
add
add
add
mov
inc
out
out
add
hlt
mov
add
add
add
int3
add
add
add
ja
add
jmp
add
xchg
push
inc
mov
add
add
add
add
adc
add
add
cmp
add
and
and
cmp
flds
inc
add
xchg
popf
loopne
add
stc
push
fcmovnu
add
add
adc
add
add
add
add
add
add
add
add
add
stos
fildl
push
xlat
xchg
add
xor
xor
add
xor
xor
add
mov
add
xor
add
mov
add
mov
add
xor
add
rolb
nop
add
int3
mov
cmp
in
imul
and
add
add
add
mov
add
ds
add
pusha
cmp
and
add
lods
out
mov
cs
dec
roll
and
add
fistpl
sbb
fildl
xorl
push
lahf
mov
jns
cmp
pop
add
or
add
push
mov
jb
bound
mov
sub
add
popf
push
add
test
add
shll
loop
add
mov
and
add
popl
add
jae
add
add
mov
movsl
fldcw
lret
dec
add
xor
add
add
add
jp
add
add
add
js
add
dec
add
cmpsl
add
mov
incl
idivb
add
sbb
add
inc
movsl
add
push
inc
add
adc
dec
test
dec
inc
add
add
add
add
jno
xchg
leave
xor
add
add
add
fisubl
add
add
add
mov
add
push
add
dec
jp
push
ret
les
add
add
pop
cltd
cmp
add
add
int
sub
add
add
add
add
add
add
add
add
add
add
mov
add
sti
add
jbe
pop
outsb
outsb
add
add
add
iret
add
add
add
add
add
sldt
add
add
add
data16
pop
xchg
add
lahf
outsb
add
add
cmp
add
add
mov
add
and
add
add
add
mov
cmpsb
xlat
adc
jns
jno
sub
or
test
mov
popf
dec
xor
mov
add
popaw
push
daa
jl
stc
out
mov
jg
pop
mov
xchg
xchg
mov
ss
or
in
mov
xchg
and
adc
ret
push
outsb
rcr
stos
xor
movsb
add
sbb
imul
out
push
loopne
loope
xchg
inc
fucompp
adcl
stos
orb
mov
xchg
jnp
mov
cmp
out
repz
loope,pn
pop
mov
das
cli
lcall
lea
jmp
lock
daa
push
add
and
inc
in
adc
ret
adcb
and
notl
mov
jae
adcl
cmp
push
fdivrl
xor
inc
test
jne
addr16
xchg
mov
aam
addr16
ret
or
ljmp
push
sub
push
cmp
sub
adc
add
sbb
pop
mov
sahf
push
mov
sysenter
sbb
test
xchg
adc
imul
add
mov
inc
mov
loop
and
xchg
sub
aaa
jnp
fisubrs
sbb
test
xor
sahf
inc
movsl
inc
icebp
cmp
loop
cli
mov
jns
rorb
push
fucom
and
stos
pop
aad
jmp
lea
rorb
sbb
cld
add
nop
sub
roll
data16
fidivs
addb
lds
or
out
and
andps
daa
mov
and
addl
ds
lds
adc
xor
mov
les
mov
xor
pop
fistpll
sub
cwtl
mov
push
add
inc
xlat
and
and
mov
pushf
nop
push
adcb
movsb
pop
xor
cs
dec
insb
out
add
scas
mov
je
push
mov
cltd
push
mov
jp
pop
mov
cmp
and
mov
push
imul
jmp
bnd
mov
inc
lea
pusha
xchg
popa
and
outsl
fildll
push
in
fdiv
sbb
int
mov
lret
cmpsl
daa
fs
out
lods
pop
xchg
cmpb
ss
inc
mov
cmpl
cmp
ret
dec
and
cld
lcall
in
add
ret
je
enter
jnp
or
add
lcall
inc
mov
hlt
inc
mov
out
gs
test
sub
out
xchg
add
stc
xchg
or
js
popa
mov
leave
sub
mov
daa
enter
dec
pop
pusha
sub
ljmp
flds
les
scas
stos
mov
loopne
add
scas
mov
cmp
scas
insb
xor
cmp
mov
inc
inc
adc
cmp
fst
les
dec
or
mov
mov
adc
mov
icebp
add
adc
aam
mov
fnsave
pop
pop
push
mov
outsb
lds
ret
je
mov
cmpsl
mov
repz
cld
adc
out
cmpsb
in
lds
jecxz
lret
pop
xchg
stc
push
cld
scas
push
jo
rorb
jne
aam
test
xchg
add
stc
dec
push
icebp
nop
lahf
push
inc
mov
or
ja
inc
mov
out
jns
clc
test
and
iret
out
cmpsl
sbbl
xchg
or
jle
popa
mov
int
mov
pop
int
jnp
daa
enter
dec
pop
insb
es
jl
aad
inc
mov
and
cs
or
inc
loopne
pop
mov
add
jl
sub
lret
insb
and
cmp
es
jmp
mov
insl
pop
rolb
imul
ficompl
jne
in
mov
outsl
or
mov
shrl
pop
mov
sbb
cli
add
dec
lcall
call
aam
call
pop
out
movsl
out
dec
pop
loope
iret
sub
cmp
outsl
in
loope
icebp
rcpps
imul
pop
scas
push
stc
jmp
xchg
xchg
sahf
pop
movsb
mov
jae
sbb
fwait
mov
inc
mov
icebp
addr16
das
fisttps
dec
sbb
arpl
in
add
xchg
clc
inc
jg
lods
push
fbstp
jnp
shrl
ficoml
xchg
mov
sbb
psraw
popa
xor
mov
fcoml
scas
mov
ret
aam
cmp
jo,pn
ss
mov
sub
aaa
ret
ret
xor
sbb
inc
sbb
sarb
fmul
and
rcrb
andl
mov
lret
cmp
cmpsl
int
xchg
mov
pop
mov
int
fsts
pop
popl
repnz
ds
or
jae
scas
cmp
cli
sub
in
in
cmc
push
adc
test
in
icebp
es
cmp
lock
mulb
add
sub
iret
add
das
jb
jg
jl
mov
and
cmp
popf
xchg
pop
dec
mov
out
lods
popf
cld
bound
mov
aad
sahf
mov
repnz
push
pop
jns
cwtl
add
gs
jp
cmpsl
pop
stos
dec
fmull
add
lret
cs
out
inc
adc
xor
mull
leave
scas
lds
and
and
pop
cmpsb
jno
aaa
mov
jae
adc
shll
and
addr16
adc
pusha
fisttps
inc
leave
lret
andb
push
sbb
mov
dec
cmp
jmp
ret
cmp
test
fidivs
aas
les
cwtl
out
lret
sbb
mov
fs
add
jae
sbb
lods
mov
insb
xor
and
jo
jnp
sbb
sub
ja
stos
in
xchg
cmpsb
inc
mov
mov
add
sub
popf
iret
add
das
hlt
call
int
and
ss
jbe
sbb
mov
outsl
pop
stos
xchg
jae
xor
sub
sub
cwtl
mov
addr16
js
pop
loop
xor
or
mov
and
daa
aaa
inc
subb
inc
sub
jbe
mov
mov
xor
mov
cld
fsubp
cmp
sub
xor
mov
ja
test
mov
data16
int3
test
inc
pop
sbb
int
rcr
aam
xlat
push
adc
cli
jle
push
pop
jmp
repnz
jb
aas
pop
test
xchg
mov
add
cmc
leave
mov
sbb
add
call
inc
mov
iret
cmp
mov
jo
xor
jmp
pop
out
out
dec
lock
fbld
mull
xorb
ljmp
clc
adc
arpl
ret
enter
sarb
jbe
mov
sub
cmp
pop
dec
mov
jmp
cmpsb
insl
test
cmpsb
aam
fyl2x
adc
mov
insl
adc
jg
fcompl
pushf
das
cmc
or
imul
dec
arpl
scas
shll
xor
shl
pop
adc
inc
icebp
addr16
ret
cltd
lret
mov
lods
clc
fabs
pop
xchg
lcall
movsb
imul
jb
dec
outsb
repnz
outsb
and
fs
ljmp
fs
loop
rcll
test
push
cmp
pop
xor
cmp
cmpsl
stos
cs
xchg
mov
repz
lret
mov
add
imul
cmc
iret
int3
jns
jo
sar
xor
mov
test
loope
sbb
lds
pop
in
sub
repnz
in
lock
or
fwait
pop
outsl
aad
pop
loopne
xchg
lds
movsb
dec
push
sarb
push
int
pop
cld
pop
push
mov
test
dec
mov
cltd
mov
cmp
fisttpl
cmc
push
popf
adc
pop
sahf
sub
or
lahf
lods
xor
push
sbb
dec
popa
ljmp
cmpb
test
movl
push
aaa
jns
repz
or
cmp
fldt
dec
dec
ja
and
leave
mov
daa
jl
lret
lods
pop
mov
pusha
out
mov
icebp
into
int
cmp
sbb
bound
sbb
mov
lods
sar
nop
movsb
js
jg
add
aam
mov
movsb
sub
pop
jbe
sub
lret
js
mov
fcomp
xor
aas
adc
jmp
lock
adc
lcall
clc
sub
cmp
mov
push
or
pop
and
or
js
jno
mov
aaa
mov
jl
mov
cmpsb
sbb
imul
mov
xlat
mov
adc
adc
inc
xchg
mov
stc
push
or
popa
outsl
sbb
lea
stos
mov
std
scas
fbstp
stos
pop
aam
xor
mov
sub
lret
sub
lds
push
xor
pop
pusha
outsl
test
fiaddl
fisubs
xor
aaa
sub
xchg
stos
outsl
dec
or
rorl
cmp
loope
pop
sbb
cmp
insl
and
nop
lock
push
js
xor
jecxz
fiaddl
jp
mov
mov
testl
mov
movsl
out
outsb
call
gs
sbb
jp
scas
cmp
cmp
cmpsb
xor
loop
loopne
and
fcoms
adc
hlt
aas
dec
and
movsl
jp
movsl
insb
mov
data16
xlat
jle
imul
cmp
ret
cmpsl
mov
pop
xchg
outsl
mov
pushf
hlt
adc
inc
inc
xor
push
pusha
out
ljmp
test
mov
pusha
mov
fs
fisubs
cmp
in
loope
imul
movsl
pop
repz
xlat
outsb
out
jb
pop
cld
pushf
leave
test
lret
test
xchg
xor
dec
popa
call
inc
jnp
test
jle
dec
xor
mov
and
add
push
loope
sbb
cli
cld
out
add
jne
mov
xchg
fs
in
and
dec
sbb
add
push
mov
jmp
inc
and
fs
outsb
sub
stos
scas
test
aam
mov
je
gs
push
lahf
daa
lock
or
pop
les
mov
push
mov
sub
pop
adc
jl
scas
dec
add
cmp
xchg
mov
je
mov
lahf
int3
or
push
pop
popa
orb
jb
mov
jnp
lds
inc
neg
pop
adc
inc
ja
xchg
fscale
and
icebp
jnp
pop
fnstsw
jl
mov
pop
mov
or
sbb
push
dec
push
sbb
out
aaa
test
clc
shll
loope
dec
pop
add
mov
in
dec
dec
jbe
adc
sti
arpl
aaa
push
shl
inc
mov
clc
loop
out
or
add
add
sub
sbb
pop
lcall
out
pop
dec
scas
push
jne
fldl
jo
or
data16
inc
xor
test
mov
sti
dec
jl
sub
dec
cli
popa
ja
jecxz
aaa
arpl
cmp
loop
sbb
cmpsl
inc
fidivl
cmp
sub
daa
push
inc
cmovne
pop
push
lea
data16
and
cmp
dec
sub
cmpl
mov
cwtl
shl
mov
dec
into
inc
divb
cmp
lcall
shr
nop
ja
mov
rcl
minps
jae
xor
addr16
inc
cld
dec
out
lds
cld
shl
and
int3
pop
fadd
fucomi
cs
pop
dec
jo
pop
out
sub
and
and
mov
cs
stos
adc
adc
testl
mov
sub
mov
das
mov
push
and
jo
mov
or
dec
push
ja
gs
mov
hlt
dec
jnp
add
xchg
lahf
sbb
mov
shl
nop
and
xor
sub
mov
sbb
mov
jb
inc
mov
cld
jge
mov
pushf
and
les
lea
leave
sub
es
ja
ja
xchg
xchg
ds
imul
xchg
mov
pop
shll
jno
lods
hlt
xor
stc
xchg
jno
mov
rcll
or
jo
and
lods
add
popf
inc
cltd
dec
xchg
lds
lret
cltd
adc
roll
add
sub
ficoml
jg
add
jno
clc
mov
and
enter
add
add
clc
jmp
xchg
push
fwait
jp
fsubrs
inc
pop
loope
xchg
sub
scas
and
data16
movsb
adc
jae
and
pusha
adc
xor
sbb
scas
or
cmp
and
dec
or
insl
icebp
aad
out
mov
mulb
mov
stos
insb
and
clc
mov
cmpb
mov
mov
pop
sub
add
xor
jp
out
insl
and
mov
or
add
stos
mov
icebp
mov
daa
dec
pusha
xor
push
jecxz
or
cmpsb
xlat
lcall
incb
inc
mov
jb
in
imul
pop
mov
mov
jo
push
insb
sub
mov
adc
lods
cmp
mov
in
ret
add
xchg
cmp
out
out
lock
fs
addr16
or
dec
fmuls
fwait
mov
in
push
loopne
push
int
sbb
inc
adcb
inc
sbb
inc
or
rolb
bound
xchg
or
jge
or
pop
add
adc
push
push
xchg
xchg
xor
or
psubsw
scas
sbb
in
jmp
jle
mov
mov
mov
push
mov
add
mov
mov
in
gs
nop
inc
out
lods
inc
aam
lods
jb
sbb
scas
and
xchg
fnstsw
mov
sahf
ja
cmp
xchg
insb
xor
faddl
mov
inc
xchg
xor
inc
cltd
ja
cmp
pop
imul
js
sahf
jmp
out
fwait
mov
xlat
fs
and
pop
cmp
or
test
cwtl
inc
mov
enter
pop
js
sar
add
inc
loop
in
vmovaps
jg
sti
mov
je
sbb
pop
rorl
xchg
pusha
pop
jns
cmp
sbb
decb
decl
mov
lea
icebp
icebp
inc
xor
push
mov
insl
psubsw
mov
orl
repz
push
cmp
mov
jge
or
dec
or
sbb
in
inc
fbld
test
mov
outsb
push
cmpsl
xor
addr16
pop
push
and
mov
mov
mov
adc
test
sbb
test
mov
js
cld
pushf
add
mov
das
movsl
movsl
test
inc
jns
insb
repz
push
fnstsw
and
mov
jnp
xor
cmp
sub
pop
cmp
pop
addl
shrl
mov
mov
pop
fwait
lods
fstp
push
aas
inc
imul
mov
add
xchg
pop
cmpl
leave
mov
bound
pop
dec
sub
imul
imull
js
arpl
mov
popa
pop
pop
sub
jo
mov
enter
push
add
dec
out
adc
popa
orb
dec
xor
loopne
xchg
test
dec
mov
jle
sbb
jae
sbb
cmp
xchg
xchg
cmp
out
and
push
mov
mov
cli
inc
insl
scas
mov
cmpsb
bound
xchg
mov
mov
test
outsb
cmp
and
orb
and
fisubl
push
or
jg
mov
leave
and
sub
adc
sbb
pop
inc
fwait
daa
stos
in
mov
cli
or
pop
shll
jge
icebp
mov
mov
stc
mov
xchg
mov
inc
add
mov
add
inc
pop
ja
ret
jnp
cmp
cmc
and
sub
test
sti
or
xor
fs
xchg
fisubrs
jecxz
ljmp
das
imul
mov
and
mov
ljmp
or
test
or
xor
push
or
mov
push
cmp
add
repz
es
lret
fisttpll
dec
fisubrs
jmp
xchg
ja
mov
push
mov
jg
xor
jb
mov
out
insl
cmp
ljmp
fisubl
adc
cmp
adc
outsl
addr16
fnstsw
mov
fisubrs
test
mov
sahf
lea
add
jmp
mov
jg
xor
pop
int3
inc
jmp
xchg
xor
sbb
test
mov
xchg
out
ljmp
shrb
xor
jns
das
scas
and
lcall
jge
sbb
sbbl
pop
xor
lcall
sub
jne
push
stc
lea
mov
push
add
test
fimuls
push
pop
push
sbb
sbb
sbb
jp
in
jo
lahf
cltd
mov
clc
cli
cmp
add
push
jns
push
jecxz
fsubs
xor
inc
sub
cmp
xchg
loop
dec
fdivl
or
xchg
add
in
lock
mov
test
inc
lods
push
mov
mov
jmp
sbb
lea
inc
loope
cmp
xlat
mov
mov
push
sahf
mov
sub
mov
adc
andl
mov
xor
push
faddl
or
or
in
cmpb
stc
popf
cli
adc
mov
or
arpl
pop
bound
mov
or
mov
mov
mov
xchg
fcmovb
adc
cli
sub
adc
fiadds
jno
push
ljmp
inc
add
add
push
mov
add
adc
add
adc
mov
test
xlat
ss
cmp
lret
cmc
fwait
or
js
dec
mov
jge
push
xlat
xchg
ljmp
dec
xorb
sbb
stc
ss
ja
mov
pushf
or
pop
lods
sbb
aas
bound
outsl
sub
scas
dec
ret
stos
mov
sub
dec
icebp
dec
adc
bound
and
aam
addr16
xor
out
xor
cmp
sub
lret
cmc
mov
cmc
outsl
sub
call
jae
mov
xchg
xchg
lahf
enter
pop
jle
push
xchg
mull
sar
fwait
mov
rcrb
xchg
ret
popf
out
and
mul
fbstp
popf
pop
outsl
sbbl
stc
xchg
or
in
stos
sub
mov
stos
xchg
fmul
lock
sub
push
xchg
inc
jge
data16
in
push
cmp
ljmp
xor
push
bound
gs
or
jae
push
das
jp
in
dec
inc
cmpsl
sbb
paddsw
hlt
add
inc
je
mov
movsl
test
push
mov
mov
cmp
xchg
mov
fucom
push
xchg
movsl
icebp
outsl
xor
sub
jge
sbb
xor
xchg
pushf
and
cmp
and
push
or
mov
dec
pushf
daa
mov
lret
insl
in
loopne
lret
push
ja
mov
jns
xchg
xchg
imul
xor
icebp
pop
cli
mov
inc
jecxz
xlat
iret
fmull
fst
stc
xor
loopne
add
sti
shr
cmp
jle
or
jne
stc
add
pop
xchg
fldt
sti
sbb
and
adc
push
das
xchg
inc
xchg
in
adc
addb
lea
data16
mov
gs
xchg
pop
or
push
and
test
scas
jle
xchg
xor
or
mov
mov
lods
mov
scas
rcrb
outsb
mov
fwait
cmp
xchg
mov
xor
daa
inc
outsb
pop
iret
dec
and
mov
std
mov
sahf
popa
js
and
ss
jnp
dec
xor
or
mov
inc
mov
lods
fisubrl
inc
out
je
add
ja
popf
divb
jbe
fsub
xchg
lock
into
jmp
idiv
mov
inc
sub
pop
lds
jp
jle
xlat
mov
iret
adc
mull
pop
jmp
xorl
inc
add
or
mov
aaa
out
mov
sbb
jmp
out
inc
addr16
sub
xchg
xor
rcr
cmp
subb
ret
push
jno
pop
int
adcb
adc
cmovae
or
rcrl
int3
pop
cmp
push
add
loope
push
test
add
inc
lea
imul
ljmp
mov
gs
inc
add
mov
repz
xchg
daa
jg
and
xor
inc
or
adcb
mov
jle
jnp
in
xchg
repnz
pop
pop
fcompl
outsb
sbb
push
mov
test
add
aas
je
cmp
sbb
mov
iret
subb
pusha
mov
jnp
out
loopne
hlt
cltd
push
jne
inc
lcall
xor
dec
jnp
xchg
mov
xor
adc
pop
mov
fisttpll
test
shr
es
and
in
insl
mov
cltd
inc
jle
push
cmpsl
jle
es
ds
jg
xchg
mov
fimull
and
dec
jae
ja
fimull
cwtl
fwait
pop
stc
push
movsb
addr16
cmpsb
cmp
sub
lea
cmc
lahf
sbb
testl
