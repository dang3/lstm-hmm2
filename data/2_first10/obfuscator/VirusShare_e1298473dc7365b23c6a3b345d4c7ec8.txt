push
call
ret
ret
or
inc
mov
repz
mov
mov
mov
fcmovnb
sahf
repnz
fneni(8087
sub
xor
xchg
pop
push
ficoml
xor
bound
cmp
sub
lret
push
jb
repz
and
ret
int
lret
add
ja
adc
cs
cmpsl
scas
jns
pop
lods
fistps
cmp
and
popf
imul
push
sbb
lock
sbb
push
stos
clc
int3
add
lret
pop
shlb
cmp
push
jo
xchg
mov
movsl
rcll
das
repnz
jbe
iret
inc
sbb
mov
jns
test
incb
pop
sub
cmp
xor
aaa
inc
fwait
xchg
mov
and
add
imul
scas
adc
leave
jg
add
jne
out
cmpsl
nop
ljmp
fdivrs
popa
sub
js
cmpsb
pushf
mov
add
lahf
and
pop
aad
test
inc
movsl
add
sub
add
sbb
or
pusha
sub
add
test
in
movsb
cmp
test
push
rorb
xorl
push
in
add
dec
adc
std
out
scas
push
in
in
dec
push
addb
int3
sub
add
mov
shl
mov
push
outsl
cld
insl
mov
divb
fisubrl
paddw
mov
pop
fisubl
pop
test
jno
mov
sbb
mov
push
cmp
xor
push
jo
push
cmp
jecxz
test
push
dec
push
out
ret
xchg
in
pop
push
cmp
in
push
or
cmp
xchg
mov
loope
jae
movsl
and
hlt
jmp
loope
add
ds
cltd
pxor
imul
ja
pop
data16
dec
xchg
pop
negb
lret
cli
shrl
mov
loope
cmp
pop
mov
nop
scas
jl
out
xchg
fadds
out
js
hlt
dec
popa
and
pop
cmc
cmp
dec
cmovg
add
push
add
cli
xor
out
pushf
test
xor
mov
mov
fwait
mov
ljmp
in
push
loopne
lret
orl
shrb
adc
insb
mov
stc
and
mov
outsb
sahf
aam
hlt
ss
xlat
mov
jo
xor
in
push
xchg
shr
adc
mov
or
jmp
inc
pop
stc
pop
sbb
insb
push
ljmp
adcl
cmp
push
inc
es
data16
aad
popa
rorl
mov
or
fwait
dec
loope
jae
dec
mov
xlat
sub
jl
jge
rcll
xchg
adc
leave
xor
gs
nop
mov
xchg
shlb
repnz
push
rorl
pop
and
lahf
mov
loope
ss
jmp
aas
sub
arpl
dec
shll
mov
out
or
xchg
mov
cmp
push
jmp
scas
pop
loop
insb
dec
xchg
push
ss
add
cmpsb
fwait
adc
inc
jge
mov
dec
sbb
dec
sbb
sub
jnp
xchg
adc
lahf
out
dec
jnp
mov
mov
jmp
js
xchg
sbb
push
adc
pop
test
pushl
aad
hlt
mov
movsb
sbb
mov
mov
add
ret
bound
pushf
pop
sub
int3
fisubs
mov
pop
adc
xor
scas
sbb
inc
notb
mov
mov
add
nop
sbb
jae
jl
std
mov
ret
int3
jl
mov
and
jmp
fildl
xchg
push
push
mov
xlat
mov
or
adc
fmul
mov
lods
loopne
add
xlat
mov
add
sub
fnstcw
enter
shr
or
or
and
xchg
sub
popa
ds
cmp
sahf
xchg
cmpsb
lahf
mov
adc
fs
fisttpll
mov
aas
mov
lock
jnp
mov
lods
fcomps
andb
fisttpl
jge
filds
and
lods
test
mov
mov
iret
add
push
ffree
push
lods
sti
fnsetpm(287
dec
adc
pushf
mov
cmp
xor
xor
inc
xchg
adc
int3
jae
cmpsb
fadds
xchg
mov
aad
lock
jbe
mov
jecxz
test
inc
je
ret
xlat
sub
mov
xchg
dec
out
push
dec
mov
adc
sahf
lahf
mov
in
adc
push
subb
mov
scas
mov
test
div
push
sub
out
push
andb
push
cli
icebp
add
xor
loopne
hlt
adc
adc
clc
jp
or
enter
in
enter
inc
out
in
xor
lret
aaa
xchg
lock
int
mov
imul
and
pusha
sbb
mov
fs
cmp
push
mov
aas
and
cld
mov
mov
push
insb
aad
mov
or
xchg
cwtl
pop
pusha
adc
push
pop
icebp
xchg
test
popf
sub
cld
in
push
mov
pop
add
cmc
jmp
fadd
mov
inc
outsl
fcompl
jecxz
movb
je
push
mov
sub
adc
dec
fadd
cwtl
es
xlat
jmp
add
fdivrl
pop
mov
mov
divl
lret
shll
xchg
cmp
popf
movsb
pushf
std
adc
pop
inc
pop
sub
inc
xor
pop
pop
dec
fs
bsf
and
or
call
sub
push
mov
pop
ret
andl
in
cli
mov
cli
ljmp
clc
popa
pop
or
cmpl
inc
push
jb
rcr
neg
or
daa
iret
mov
dec
int
gs
rcr
dec
or
andb
test
call
mov
add
ljmp
imul
mov
out
pusha
xchg
hlt
mov
aas
adc
jp
in
out
or
out
sbb
jnp
cmpsl
int
and
imul
fisubs
popa
test
scas
enter
fnsave
aam
mov
rcrb
push
dec
popa
sti
inc
pop
ret
push
repnz
cli
dec
jb
movsb
pushf
pop
pop
dec
pop
adc
repnz
mov
test
scas
sub
test
cmpsl
inc
mov
insl
lcall
out
add
test
popfw
test
xor
cmp
pop
fwait
lock
jmp
rcrl
add
test
stos
and
pusha
and
jb
sub
cs
mov
in
adcl
cltd
in
mov
and
stos
imul
pushf
jg
push
test
scas
push
sbb
jl
fisubl
sbb
out
xchg
cmp
mov
xchg
mov
sti
insl
popa
inc
enter
and
pop
lret
mov
scas
add
inc
out
xor
pushf
pop
sub
push
rcrl
sti
adc
iret
out
mov
divl
xchg
mov
mov
and
repz
mov
inc
sub
mov
and
mov
in
inc
hlt
cmpb
push
addr16
movb
ret
mov
loope
fsubrp
fdivrp
iret
stc
jnp
nop
out
adc
fimull
idivl
cmp
mov
dec
js
adc
fistps
fcomps
jnp
daa
out
add
mov
fucomi
push
test
cmp
pop
jl
fisttps
ss
lea
imul
xchg
imul
lret
lret
push
pop
std
mov
pop
daa
cltd
inc
dec
in
fcmovb
out
mov
sub
fbld
stos
fstpt
pop
clc
cmp
sbbl
imull
aam
or
add
jb
testl
arpl
push
aaa
mov
sbb
mov
jno
aad
and
outsl
repnz
sbb
ljmp
xor
ljmp
xor
dec
test
into
push
arpl
sub
scas
sub
leave
inc
int
cmp
mov
jl
and
hlt
and
jno
in
mov
pop
icebp
dec
loop
xor
adc
mov
push
fnstcw
sbb
dec
sub
call
xchg
hlt
daa
rorl
lret
or
jp
add
les
inc
imul
sub
push
decb
imul
and
and
fisubrs
inc
pop
adc
fcompl
xchg
rcrb
rolb
xorl
and
jp
cmc
in
xor
pop
sub
push
push
fsubl
sub
cmp
stos
frstor
rcr
add
out
inc
sub
mov
cs
lahf
sub
xchg
cmpsl
nop
fstpl
dec
aaa
sarb
loop
sbb
out
test
pop
notb
aam
or
push
mov
fcoms
mov
into
cmp
andb
sbb
mov
and
inc
and
test
xchg
or
scas
enter
rcr
sub
sarb
sub
sarl
test
xor
mov
add
ds
mov
xor
jle
out
dec
loopne
dec
adc
je
repnz
sbb
outsb
cmpsl
inc
inc
jge
adc
mov
popa
repz
push
fptan
data16
sub
arpl
mov
dec
cmp
sbb
es
jmp
xor
ret
jecxz
pusha
add
mov
stc
scas
jns
pop
aad
xor
lea
inc
push
bound
pushf
out
movsb
das
inc
or
xor
nop
and
outsb
sbb
xchg
popf
arpl
sub
ffree
cmp
xorb
jmp
les
push
jle
out
ret
cmpsl
lds
stc
xchg
adc
mov
bound
push
mov
movsb
outsb
in
inc
lea
insb
jno
inc
add
fiadds
cmc
push
lock
lahf
xorl
pop
stos
dec
call
insb
shll
pushf
cmp
push
push
sub
inc
add
rcll
cmpsl
rcrb
adc
add
lea
out
loope
into
sarl
cmp
adc
and
aas
xchg
frstor
add
in
into
cmp
pop
jg
out
icebp
jae
jl
stos
pcmpgtw
gs
je
jge
sbb
push
es
dec
ret
into
mov
inc
jnp
lret
mov
es
inc
lret
rcrb
shlb
movsl
sar
mov
sahf
loopne
cwtl
scas
sbb
sti
icebp
pop
lods
mov
adc
fidivl
stos
push
dec
push
push
mov
mov
lds
pop
pop
add
enter
mov
popf
rolb
or
out
jl
dec
xchg
data16
fisttps
insb
in
add
adc
adc
in
bound
sahf
and
xchg
lcall
sbb
pop
pop
jge
and
lock
in
or
xlat
xor
fsts
sub
repz
inc
aam
adc
data16
sahf
call
xor
xor
add
insb
cmpsb
sub
divl
or
jno
ret
add
lock
clc
push
dec
xor
mov
scas
adc
insb
cmp
xchg
or
rorl
lcall
loop
popf
or
sbb
mov
mov
adc
test
sub
jmp
test
mov
lcall
adc
push
lahf
jo
and
inc
pop
pop
xlat
cli
xchg
push
jb
mov
sbb
pop
cs
jp
scas
out
les
sbb
dec
lds
cmpsl
mov
push
pop
sub
andl
or
bound
sub
lcall
out
and
fldt
or
push
mov
mov
aas
or
fbstp
stc
cmc
adc
sub
mov
cmp
inc
nop
scas
mov
js
inc
jae
xchg
popf
lods
sti
dec
or
pop
das
sbb
xor
sbb
fstl
jl
jg
cltd
rol
cmp
jbe
divb
je
idivb
dec
div
xor
dec
inc
enter
leave
or
jb
out
aaa
pop
aad
xchg
pop
jnp
mov
loop
sbb
rol
xor
push
into
add
movsl
adc
loop
and
xor
cmp
bound
and
lret
inc
sbb
ljmp
add
adc
fidivrl
mov
inc
icebp
scas
ljmp
adc
cs
push
aad
fnstenv
lds
fnstsw
inc
jecxz
enter
inc
lds
push
mov
dec
aaa
mov
and
lods
jbe
sub
ret
mov
sub
out
mov
in
loop
xor
dec
es
fistps
shrl
push
ror
int
lods
dec
push
int3
repnz
test
pop
or
lcall
sbb
xchg
loop
or
mov
lcall
jge
sbb
mulb
push
js
repz
test
fdiv
mov
sbb
and
and
je
adc
int
popa
push
cmp
push
mov
jne
and
dec
lock
pop
shrl
cmp
sbb
mov
les
jnp
jp
in
iret
mov
lahf
dec
add
add
cmp
inc
or
cmp
loop
lahf
xor
or
call
inc
das
push
fdiv
pop
xor
jb
int3
push
adc
stos
push
mov
push
lods
pushf
add
cltd
add
leave
icebp
dec
int3
cmp
int3
mov
xchg
or
xor
orb
push
pop
fcoml
cmp
pop
and
push
fistl
lret
bound
lods
sarl
sti
shl
test
jecxz
jmp
and
mov
popf
gs
ljmp
pop
arpl
mov
lea
push
xchg
xor
mov
inc
addl
inc
xchg
or
pusha
cmpsl
and
imul
cmp
nop
in
jg
wrmsr
clc
inc
push
mov
dec
outsl
and
in
xor
movsl
testb
xchg
mov
es
jmp
jb
mov
push
jo
stos
sub
xor
fsubr
mov
add
orb
sub
sub
push
dec
adc
push
cli
movsb
mov
call
add
xchg
pop
jnp
outsb
iret
lods
lcall
nop
push
xchg
lds
in
rcl
sar
scas
mov
xchg
lcall
push
rorl
jmp
cmp
div
and
pop
or
mov
leave
loopne
cmpsb
pop
xchg
or
imul
xchg
xor
xchg
sbb
and
pusha
sbb
dec
mov
jnp
xchg
sahf
push
insl
pop
jo
testb
lea
cmp
movsb
mov
lret
call
sbb
jge
dec
mov
lret
insb
cmp
mov
outsl
mov
fucomp
xchg
bound
or
lock
xor
jmp
jmp
dec
jns
inc
dec
mov
test
cld
adc
xorb
fnsave
jno
jmp
jmp
push
push
mov
jb
cmp
in
and
ds
xchg
pusha
adc
mov
cmp
mov
aad
faddl
xor
fimull
loope
insl
add
push
lock
test
lahf
pop
and
mov
fldl
rolb
add
out
fcmovu
pop
mov
dec
pop
push
adc
imul
mov
add
imul
popa
ljmp
cmc
lret
scas
add
sahf
les
push
push
or
insb
popf
test
inc
cmpsb
or
lcall
lock
cwtl
rol
mov
shlb
push
cmpsl
gs
mov
jns
daa
adc
or
loopne
mov
adc
pop
std
and
imul
pop
test
push
jp
cmc
cmp
jae
cltd
lahf
push
lock
sub
dec
or
and
nop
test
sub
bound
dec
sqrtps
imul
aad
mov
pop
inc
mov
push
sbb
xchg
pop
add
out
pop
adc
lods
negb
aad
mov
cwtl
addr16
icebp
mov
dec
insl
jnp
dec
sbb
data16
daa
pusha
int3
mov
pop
add
push
rclb
dec
addl
stc
test
repnz
push
cmpsl
dec
add
sbb
imul
into
cld
cmp
jl
adc
cmp
ret
ljmp
dec
lret
leave
adc
jae
sahf
and
xorb
fwait
daa
int3
and
xchg
dec
stos
pop
js
lcall
and
xchg
cmp
decb
xchg
push
cmpsb
aam
jl
mov
lret
cmp
mov
cmp
adc
lahf
stc
scas
movsl
mov
repnz
mov
mov
mov
lcall
shlb
and
hlt
push
jmp
cmp
fidivrl
sub
imul
lret
jecxz
mov
sbb
dec
xor
jmp
dec
cmpsb
pop
xchg
clc
sti
shll
cld
push
jns
jmp
or
push
mov
inc
les
add
pop
push
mov
pop
adc
pop
fsub
popa
and
sub
xor
shll
pop
andl
jle
repnz
inc
ror
fildl
pop
xchg
push
or
data16
xor
aam
jecxz
sub
inc
in
sub
pop
and
je
aam
inc
push
jl
cmpb
pop
jo,pn
leave
mov
gs
jecxz
add
movsl
call
cmp
in
inc
push
dec
or
mov
adc
pop
jns
inc
xor
in
xchg
push
adc
inc
lret
cmp
xchg
pop
pop
mov
lret
icebp
adc
cmp
sti
je
xchg
fdivr
mov
lret
sub
das
out
bound
leave
push
xchg
insl
rorl
and
inc
sub
aaa
mov
dec
jno
in
ss
aad
jle
in
pop
jnp
dec
push
loope
inc
in
xchg
xchg
out
jns
sub
ja
jae
or
lahf
add
xchg
inc
add
pop
inc
into
and
adc
push
lret
sbb
jae
push
sbb
outsl
mov
jp
insl
andl
mov
sub
or
pop
push
or
sub
in
arpl
mov
fsubrs
sub
int
ret
pop
sbb
imul
mov
cwtl
movsl
mov
lret
xchg
jle
sbb
or
test
sbb
popf
xchg
mov
push
stos
push
outsl
hlt
mov
or
rclb
mov
jb
dec
adc
cld
mov
pop
sti
insl
adc
pop
mov
leave
sahf
adc
xchg
enter
hlt
loop
dec
outsb
ss
add
mov
xchg
les
in
cli
pop
jge
sbb
mov
stc
pop
sub
sarb
push
inc
lock
and
and
lea
adc
fidivl
lret
jno
fcoms
mov
dec
push
push
inc
outsb
scas
jne
pop
mov
test
lahf
push
int3
xchg
inc
and
mov
jp
nop
jo
iret
pushf
xor
ss
push
mov
jb
xor
cmp
pushf
call
lds
call
dec
jle
test
push
iret
mov
in
out
out
fsubs
ja
pop
scas
xchg
cld
ds
es
ret
pop
or
data16
sub
mov
adc
sbb
popf
pushf
mov
xor
loop
test
insl
mov
movsl
xor
add
sbb
mov
scas
pop
cmc
jg
divb
mov
das
inc
sub
es
mov
hlt
xor
push
aaa
faddl
testb
rcrb
fstps
int3
loopne
enter
movlps
pushf
mov
sti
cli
test
sub
dec
mov
adc
mov
mov
dec
arpl
push
mov
je
inc
xchg
adc
and
sahf
sbb
neg
fwait
xor
mov
add
fsubrl
adc
ret
push
fdivp
mov
xchg
lock
das
push
add
adc
adc
jmp
int
mov
sub
ret
ja
jno
cltd
std
pop
cmp
loop
int
cmpsl
push
cs
test
je
aaa
add
aas
int3
in
cmp
int3
mov
and
lret
inc
dec
mov
jmp
mov
mov
xor
sub
lret
inc
daa
ja
add
sahf
mov
jle
jns
xchg
out
jae
mov
jae
sbb
test
mov
clc
add
je
cmpsb
push
adc
lahf
inc
fsubs
enter
ret
pop
xor
jmp
imul
xor
pop
hlt
jmp
call
aas
and
dec
popf
jae
add
repnz
xchg
sbb
push
sbb
outsb
gs
gs
pop
inc
bound
loopne
fcmove
rcl
push
inc
jmp
lahf
pop
ja
add
fnstsw
call
dec
cmp
sbbb
inc
push
mov
xchg
sbb
fistpll
xor
or
loop
outsl
add
jb
and
js
cwtl
mov
mov
pop
idiv
or
and
pop
lea
outsl
push
daa
adc
shr
jno
mov
cmp
in
stc
push
adc
test
mov
dec
sbb
cltd
out
sub
or
scas
shll
inc
shl
pop
out
cmp
pop
or
repz
sub
aaa
jo
xor
jb
mov
sti
aam
inc
out
xor
xor
lcall
iret
sahf
adc
push
mov
add
lock
ljmp
fisubrl
adc
pop
mov
nop
ss
sub
js
sbb
adc
test
test
es
push
mov
xchg
fsubl
lock
push
dec
push
subl
sub
rorl
cmp
pop
test
dec
std
mov
push
xor
lahf
mov
clc
xchg
stc
outsl
or
outsl
gs
add
pop
lret
movsb
bound
push
fldt
int3
cltd
bound
shrb
sub
pusha
test
roll
push
outsl
mov
outsl
testb
xor
jge
jb
stos
mov
call
int3
es
leave
pop
push
shrb
fcom
dec
fisubrl
pop
fiadds
pop
jns
es
cmp
add
lock
int
adc
daa
jnp
pushf
ja
push
out
xchg
lret
xchg
pop
fwait
std
ret
imul
mov
not
pop
adc
jo
pop
inc
mov
mov
sub
arpl
int3
jae
pop
lock
sub
xchg
mov
cmp
mov
cld
jns
adc
adc
adc
adc
mov
and
popf
in
ss
push
and
push
fldt
je
lods
push
pop
in
sbb
mov
mov
push
cli
test
push
jns
iret
xchg
jb
mov
cmc
jg
lret
mov
fwait
push
mov
in
shlb
add
orl
imul
mov
rolb
aas
and
into
rcl
cmc
jl
sub
jbe
adc
mov
pop
test
lds
outsl
cli
push
jo
pop
mov
sbb
xchg
pop
shll
pop
aaa
mov
sub
out
jns
mov
jnp
add
imulb
xchg
test
in
call
lret
inc
or
push
jle
cmp
cwtl
das
mov
adc
cwtl
dec
sbb
sbb
push
sbb
and
dec
mov
les
inc
loope
mov
std
stc
fdivs
jne
addr16
out
stos
dec
into
or
jns
xchg
nop
dec
test
out
ljmp
mov
popf
mov
shll
mov
insl
jmp
mov
in
lcall
or
arpl
xchg
in
out
inc
lret
mov
jne
sbb
sbb
flds
mov
add
adc
jg
cmp
stos
jge
push
adc
add
or
enter
aam
jg
xor
lods
xor
xchg
loope
test
inc
pop
inc
push
adcb
jle
stos
xor
inc
adc
les
lock
data16
or
mov
xchg
jle
hlt
iret
dec
imulb
movsl
dec
mov
enter
movsl
test
xor
adc
xchg
lahf
mov
cmp
add
mov
fs
lock
ja
out
mov
mov
aaa
sbb
repnz
mov
cmp
pop
jbe
popa
andb
stos
jo
pop
lock
jl
mov
je
mov
mov
cs
jmp
add
pop
inc
ret
lret
pop
or
xchg
mov
cwtl
sub
lock
scas
sub
dec
insb
or
insl
mov
xor
dec
mov
mov
ret
mov
andl
lea
push
lret
mov
daa
sub
sbb
icebp
xlat
arpl
xor
rcrb
xchg
out
shr
xor
sti
imul
mov
fisubrs
mov
insb
fdivrs
insl
int
imul
xchg
jnp
pop
cmp
outsl
adc
enter
in
and
test
int3
mov
mov
negb
inc
jecxz
repnz
cld
or
inc
ficoml
lock
jp
dec
outsb
push
sbb
test
es
call
sbb
lcall
stos
push
aaa
test
cmp
call
ja
jle
mov
pop
lcall
loopne
add
pop
mov
mov
adc
les
lcall
jo
mov
lock
lahf
cwtl
call
lret
pop
sar
in
push
lds
mov
mov
cs
lock
mov
enter
dec
enter
inc
inc
xchg
jp
hlt
in
orl
pop
fs
idiv
loope
dec
out
loop
repz
jle
push
pop
int
dec
iret
mov
jge
cmp
jns
aam
mov
jae
push
xchg
pop
and
sub
into
jl
xor
mov
lea
les
aas
mov
xchg
mov
jo
inc
pop
sbb
call
pushl
outsb
cmpsb
inc
jle
or
and
cmp
jecxz
imul
or
or
and
push
shrl
xor
sub
popf
and
stos
cmp
fstpl
lods
mov
and
push
push
sub
in
rcl
sub
or
stos
rorb
inc
mov
and
ret
xchg
jne
jp
mov
pop
inc
push
inc
and
cmp
mov
or
dec
mov
insl
lock
mov
inc
push
fwait
jmp
lahf
push
and
inc
sahf
adc
dec
adc
or
inc
into
mov
inc
stos
imul
jmp
out
mov
test
int3
cmpl
mov
cmpsl
jp
test
mov
out
fdivrs
mov
rorb
les
xchg
inc
test
sbb
movsl
fnsave
pop
inc
adc
popf
in
clc
pop
mov
and
pop
sub
fmuls
and
call
and
inc
mov
outsw
out
cmp
jmp
loopne
inc
fdivs
popl
or
and
adc
dec
xchg
dec
int
or
sub
xchg
push
rcrb
cmp
jns
inc
ret
aaa
sub
xchg
das
mov
push
adc
dec
xor
in
push
dec
dec
data16
lret
lea
xchg
loopne
mov
nop
orl
dec
std
push
push
cmp
daa
insb
cmpsl
out
cli
loope
imul
jmp
rorl
lcall
jl
test
sbb
out
push
jb
xor
pop
fidivrl
js
test
jmp
popf
mov
fsubrl
mov
pop
sub
cmp
cmpsl
enter
jne
outsb
push
fistps
jg
xchg
pop
add
add
mov
pushf
cmp
mov
cmp
ja
dec
sub
cmp
add
cs
or
xor
jl
jno
ja
ds
sub
ret
popf
add
insl
repnz
int3
fisttps
cmp
psllw
and
jp
hlt
push
jge
leave
ja
popf
and
xchg
adc
jno
lock
aas
pusha
sbb
lea
loopne
push
jnp
mov
jp
jecxz
xchg
lea
dec
nop
xchg
cmp
lods
outsb
push
cmp
fcmovnbe
stc
or
sbb
xchg
adc
cmp
cmpsl
jmp
push
xchg
adc
cli
daa
fdivl
dec
into
scas
mov
xchg
push
sub
je
sub
mov
and
imul
cmpl
cwtl
fisubs
lret
cs
jo
mov
cmp
xor
jb
xor
push
xchg
push
add
jne
lock
mov
pop
ljmp
xchg
xchg
push
dec
stos
push
loop
mov
jae
enter
or
sbb
movsl
orb
daa
and
or
cbtw
stos
and
rorl
test
add
pop
xchg
push
jns
mov
mov
movsb
mov
xor
insb
addr16
mov
bound
out
testb
sub
push
imul
fnsetpm(287
fbstp
lock
daa
lea
fs
filds
into
outsb
sub
dec
xor
sbb
pop
iret
dec
sub
cmp
cli
inc
lock
cmp
xor
xor
adc
inc
das
cmp
les
sub
mov
sbb
pop
inc
dec
cmpsl
test
daa
fs
stos
fwait
ret
shlb
shl
jnp
dec
pop
repnz
mov
mov
popf
push
and
pop
inc
jg
pop
xchg
scas
xlat
push
cmpsl
jbe
fiaddl
cmp
aas
sub
and
ja
js
dec
cmp
sarl
cmp
cmc
cld
mov
repnz
or
xchg
ret
mov
fwait
sub
mov
push
cmpsb
mov
repz
sar
outsb
inc
insb
mov
cmpsb
outsl
test
dec
sub
mov
aas
add
neg
pushf
test
fidivl
cmp
pop
iret
lcall
inc
bound
lahf
out
imul
push
lods
pop
in
pop
pop
mov
push
xchg
pop
or
dec
adc
scas
inc
into
inc
add
addr16
adc
test
into
clc
mov
movsb
mov
lret
cmp
add
addr16
out
jp
addr16
lahf
jno
stos
mov
or
push
fnstsw
push
mov
imul
push
sub
in
dec
ja
ja
jg
sbb
inc
daa
ret
jmp
push
dec
ret
inc
fdivrs
cltd
cltd
jecxz
pop
scas
or
and
scas
inc
jmp
imul
cltd
xor
adc
int3
sub
out
imul
ja
or
ja
dec
push
xchg
sub
jg
dec
mov
mov
xchg
in
minps
clc
gs
insb
mov
xor
cmc
mov
movb
loope
mov
outsl
or
popl
clc
ljmp
fisubl
adc
mov
sbb
add
aas
addr16
mov
sbb
push
push
cwtl
mov
dec
stc
addl
xor
lret
fmull
adc
add
adc
jg
mov
sub
mov
imul
mov
or
push
mov
out
push
movsl
adc
lock
push
jns
sbb
arpl
and
cltd
pop
dec
sub
push
fsqrt
push
insl
aas
int
or
mov
ss
ds
fisttps
hlt
pop
jl
pop
lcall
pop
sub
add
ljmp
mov
jne
dec
cmp
loopne
adc
jp
sbb
lea
jp
dec
mov
xor
and
call
pop
inc
xlat
pushf
jmp
push
dec
mov
paddb
jge
aas
fsubl
xchg
push
lods
adc
aam
cmp
je
sarb
mov
push
dec
aas
cltd
or
fs
out
hlt
mov
test
enter
mov
ljmp
cmp
add
aas
scas
add
ret
pop
jb
int
push
ja
lods
je
push
nop
repnz
xor
xor
dec
inc
or
adc
push
xor
icebp
xchg
adc
jno
test
xor
sti
call
cmp
mov
std
cmp
movsl
test
mov
icebp
loope
lods
fistpl
cmpsl
loop
add
dec
push
and
testl
mov
dec
push
adc
mov
jl
arpl
ror
sbb
or
insb
repnz
or
dec
aas
xor
push
mov
fnsave
push
mov
jb
gs
arpl
sti
xlat
ja
pushl
mov
xchg
or
pop
and
push
shl
mov
pop
xor
xchg
pusha
rcrl
pop
ja
mov
test
push
jmp
popf
jne
sub
and
mov
pop
xorb
testb
imul
push
inc
addb
inc
clc
addr16
or
pop
scas
add
sbb
xchg
inc
lods
pop
out
leave
add
sub
test
push
not
mov
sbb
add
pop
sbb
push
sarb
jle
imul
push
pop
mov
dec
inc
mulb
xchg
fistl
jp
jnp
in
in
xor
test
dec
xor
data16
bound
push
cwtl
fsub
fstpt
pop
xor
cli
jb
add
stc
lea
movsb
sub
sbbb
mov
in
sub
pop
push
mov
into
push
pop
out
dec
inc
mov
mov
xchg
imul
insl
hlt
xchg
aaa
rcll
push
jo
inc
scas
xlat
jns
bound
cltd
icebp
in
xor
mov
bound
push
out
push
mov
jle
mov
push
mov
mull
daa
cmp
jle
in
mov
iret
into
mov
xor
lock
jp
cmp
mov
xchg
xchg
stc
aam
notb
jbe
mov
inc
scas
inc
fimull
mov
dec
mov
push
jae
lock
mov
adc
and
cltd
cli
cld
std
jmp
or
mov
and
dec
xchg
adc
flds
add
daa
push
and
pop
adc
inc
and
mov
xchg
outsb
mov
mov
xchg
dec
outsb
paddsw
repz
push
sbb
imul
inc
stc
cmp
test
movsb
stos
push
pop
pop
int3
mov
cmp
jl
or
mov
sbb
subb
icebp
xchg
mov
sbb
addb
nop
add
insl
clc
or
pushf
inc
xchg
cmp
xor
cmp
outsl
lahf
outsl
mov
pop
leave
pop
add
test
add
out
jecxz
sbb
das
inc
idivl
jg
lahf
pusha
or
fisttps
pop
pop
push
dec
out
aad
inc
push
xor
and
xchg
xchg
xor
sub
shrl
cmp
stc
push
jns
hlt
pop
xchg
adc
fs
inc
push
roll
enter
sbb
jno
mov
xchg
loop
fst
idivl
sub
jbe,pn
jnp
mov
cwtl
std
rorl
out
dec
jle
lret
arpl
mov
or
test
cmp
pop
dec
subl
repnz
fwait
add
leave
sbb
je
iret
jl
jl
aaa
adcl
add
jns
aaa
in
les
leave
icebp
push
outsb
xchg
cmpl
mov
cmp
mov
sbb
adc
mov
out
iret
cmp
inc
arpl
push
mov
lcall
push
mov
insb
test
mov
push
ret
xlat
jns
mov
sti
pop
pop
dec
das
or
fstl
pushf
dec
fwait
adc
sbb
and
push
xchg
cmp
test
push
stos
cltd
insl
call
movsl
dec
xchg
jnp
rolb
addb
pusha
sub
xchg
push
fadds
sti
jl
push
and
or
jge
or
inc
rol
or
inc
mov
lods
insl
imul
cmpsb
add
loope
fdivrp
hlt
in
stos
pop
xor
cltd
es
pop
rolb
loop
popf
mov
jmp
or
mov
leave
adc
inc
and
aaa
cmpl
mov
mov
insb
adcl
xchg
es
pop
test
mov
aam
ret
fwait
push
sub
in
mov
imul
mov
std
or
fldenv
cwtl
rcrl
pop
addr16
jge
jno
xor
lock
les
aas
xor
dec
hlt
xor
loope
cs
push
adc
orb
or
in
daa
push
add
test
lcall
sub
inc
scas
fs
dec
xchg
repnz
inc
test
outsb
pop
std
mov
cs
cmpsb
fs
iret
mov
or
mov
xchg
bound
repnz
jns
sbb
shlb
push
test
mov
push
outsb
mov
xchg
sbb
push
cltd
divb
aam
aam
dec
inc
pop
in
cmpsl
sub
push
repz
mov
test
into
hlt
scas
mov
mov
mov
pop
clc
cltd
and
inc
scas
sbb
subl
pop
or
jmp
adc
inc
mov
inc
jecxz
sub
scas
ds
jbe
ss
imul
in
mov
mov
aam
add
pop
mov
mov
aam
mov
sbbl
jmp
dec
test
adc
cmc
ret
ljmp
sub
iret
aas
ss
pop
jnp
jne
rcrl
fcmovu
js
mov
push
icebp
dec
sbb
outsl
sub
cld
or
mov
int
push
es
lcall
dec
xor
dec
pslld
mov
pusha
scas
mov
push
jg
mov
push
pop
dec
pop
decb
int
into
xchg
push
das
adc
jl
std
pop
ja
cmpsb
mov
ljmp
rorb
stc
pop
jb
hlt
and
jbe
jp
push
test
sub
data16
pop
imul
cld
cld
mov
inc
in
push
imul
fwait
inc
or
mov
xor
jmp
rcll
fdiv
lahf
xor
cmpsb
int
fadds
outsb
pop
cli
stos
cmp
movb
cltd
push
cmp
pop
pushf
add
rolb
sub
xor
notb
pop
imul
icebp
pop
call
mov
fwait
jne
fs
movsb
les
pop
dec
cmp
inc
cmp
push
sub
mov
scas
inc
pop
sub
jne
jg
mov
ret
mov
leave
cltd
and
pusha
inc
hlt
sub
and
mov
xlat
stc
mov
js
sbb
adc
mov
enter
adc
shrl
push
enter
add
jns
push
add
mov
cmp
out
inc
push
add
inc
inc
jl
mov
call
pushf
movsl
icebp
xor
clc
in
cmovns
leave
mov
fwait
mov
popa
ret
dec
out
mov
ror
cmp
jmp
les
mov
js
xchg
vpslld
shlb
pop
lds
fldenv
push
pop
in
push
mov
lahf
mov
dec
push
push
inc
sbb
mov
cmp
push
out
lcall
jmp
stos
dec
scas
xlat
scas
insb
pop
inc
pop
test
ret
jns
movsb
insb
mov
jecxz
mov
dec
and
inc
and
add
mov
sbb
gs
xchg
mov
popa
and
sub
dec
mov
ljmp
sahf
ja
repz
push
xor
inc
add
fwait
orl
jne
fiaddl
popf
sub
pushf
sti
ja
into
inc
and
push
push
pop
jge
xor
dec
popa
jmp
int
pop
fstps
repz
sahf
adc
fsubrs
fldl
jl
pop
pop
inc
or
xchg
popa
push
and
shlb
inc
mov
push
inc
mov
sub
push
loope
jnp
out
jge
les
dec
lods
jle
lret
mov
add
negl
adc
inc
test
adc
popa
push
jmp
add
xor
sbb
rcll
sti
fildll
outsl
dec
or
xor
sbb
mov
vcvtss2sd
mov
mov
cmpsb
outsb
jl
sar
sub
rorb
mov
insl
mov
add
cmp
cld
adc
ds
add
pushl
xor
enter
jo
stos
in
push
mov
gs
mov
inc
push
sub
adc
nop
mov
movl
xlat
int3
mov
mov
mov
and
cwtl
push
imul
jecxz
xor
lcall
adc
in
pop
inc
add
enter
test
call
xchg
sbb
dec
aam
push
stc
ds
lret
and
daa
dec
int
sbb
into
outsl
mov
mov
test
add
dec
imul
add
cwtl
dec
or
mov
std
push
jnp
dec
xchg
dec
and
cmp
xchg
lea
nop
pop
inc
mov
mov
cmp
xchg
xor
out
and
fs
lods
dec
int
inc
pop
push
sub
imull
jecxz
add
sub
pop
xchg
gs
xor
adc
sbb
pusha
dec
cmp
jg
popa
rol
cmp
mov
xor
or
mov
data16
fwait
cmp
mov
inc
mov
xor
sub
inc
mov
fistpl
sarb
cli
fisttpll
jecxz
scas
add
xchg
adc
or
sbb
stos
mov
cmp
test
push
inc
aad
cld
clc
enter
lcall
jbe
test
dec
nop
jg
pop
ja
sub
js
idivl
inc
adc
push
jns
xchg
rorb
xor
mov
pop
into
sarl
jb
jbe
inc
lret
add
dec
out
cmpsb
inc
add
xor
rorl
inc
in
push
xchg
pop
scas
xchg
mov
jecxz
scas
mov
mov
dec
int3
mov
xchg
cwtl
je
xor
in
lock
xlat
adc
das
int
mov
hlt
cmp
test
mov
enter
aad
xchg
and
movb
inc
mov
mov
shrl
adc
jp
jo
add
push
pop
mov
inc
rcll
sti
lahf
scas
push
arpl
loop
imul
in
cmp
pop
lods
in
mov
pop
or
in
std
test
jbe
jle
aam
sbb
stos
scas
test
xchg
xchg
jl
or
fadd
mulb
subb
push
lods
mov
imul
mov
pop
repz
icebp
cmp
mov
in
sbb
dec
sbb
sbb
sub
mov
ljmp
pop
mov
cld
dec
das
mov
pop
jl
ds
pop
inc
lds
jb
sub
sbb
push
xchg
add
cmpsl
bound
gs
hlt
call
and
sbb
jo
lret
fcomps
cld
dec
xchg
adc
mov
sti
aam
div
and
push
je
dec
hlt
push
andb
out
sub
insb
pop
test
inc
jb
push
jp
adc
call
scas
hlt
mov
stos
and
loop
jb
ljmp
adc
mov
pop
movsb
repz
mov
sbb
xchg
and
imul
sub
sbb
repnz
out
dec
stc
pop
aas
in
lahf
mov
inc
sub
je
cmp
jge
inc
or
dec
xor
lock
xchg
call
jge
clc
mov
pop
test
mov
pop
push
lret
popf
mov
or
mov
dec
das
out
cmpsl
test
aaa
and
adc
dec
jmp
test
xchg
jb
lods
inc
sarb
xor
mov
xor
es
repnz
lcall
or
mov
xlat
sub
aaa
cmp
xchg
push
in
cld
popa
jae
orb
mov
lods
in
inc
mov
mov
pop
push
daa
arpl
addr16
push
movb
shrl
roll
cmc
add
mov
lret
std
mov
loop
inc
cmc
push
push
negb
insl
add
test
mov
sub
inc
push
inc
and
das
push
xor
inc
cltd
push
mov
loopne
cmp
mov
push
repz
jno
mov
pop
mov
hlt
fistpll
enter
xchg
hlt
cmp
jb
lods
lcall
or
imull
hlt
push
arpl
loop
sbb
xchg
or
jge
xor
xor
inc
cld
push
jno
dec
lahf
paddusw
or
xchg
pop
jl
push
pop
cmp
inc
sbb
jp
xlat
xor
rclb
ljmp
add
test
pop
insl
sbb
push
mov
and
icebp
lret
xor
outsl
mov
lods
pop
icebp
sarb
and
sub
inc
dec
stc
mov
test
pop
jle
fbstp
roll
lock
stos
sahf
cmc
hlt
shrb
cmp
xor
push
pop
mov
sbb
cltd
out
scas
sbb
fistps
sub
jb
mov
dec
push
test
cmp
icebp
xlat
mov
xor
push
jp
or
add
inc
notl
fildl
mov
arpl
or
mov
cmp
int
outsl
mov
and
mov
inc
std
gs
lods
xor
gs
lock
cmpsb
or
inc
inc
mov
xchg
dec
add
aad
clc
adc
rcrb
and
add
mov
pop
ds
jmp
xor
inc
enter
out
add
int
outsb
xchg
scas
ds
mov
jecxz
and
out
or
mov
dec
cmp
shll
xor
xlat
mov
stos
nop
sbb
inc
call
adc
xchg
pop
out
or
mov
outsl
add
mov
cwtl
out
xor
jnp
test
adc
incl
arpl
call
dec
xor
mov
dec
fcompl
mov
jge
pop
test
outsl
daa
mov
dec
js
scas
jmp
outsl
xchg
mov
add
push
ljmp
push
cmpsl
out
jl
fdiv
jo
mov
mov
xchg
test
mov
lea
pop
dec
ret
sub
jno
inc
stos
cmc
arpl
xor
dec
dec
pop
mov
mov
mov
lea
mov
mov
cmp
push
xor
push
xorb
pushf
dec
and
into
mov
lret
out
fs
mov
rolb
rcrl
mov
pop
popf
outsl
cmp
or
js
test
push
outsb
jg
inc
inc
outsl
adc
dec
push
fidivl
scas
add
negl
imul
es
aad
push
loopne
pop
jb
nop
or
push
or
mov
mov
loopne
hlt
cmp
pusha
hlt
cld
adc
adcb
jg
and
mov
push
fidivrl
not
adc
les
mov
movsb
sti
ss
inc
xor
mov
pushf
jp
push
jg
ret
or
inc
je
mov
cmp
add
add
inc
iret
test
imul
das
hlt
ds
and
into
cmp
in
xchg
mov
mov
sbb
lahf
inc
mov
loop
ljmp
lods
dec
stos
bound
js
sub
ret
add
xlat
fildl
jg
std
fsub
sbb
fwait
orl
and
jo
sub
sbb
lret
jle
repz
mov
push
das
mov
mov
mov
popa
mov
lret
inc
push
test
mov
dec
xchg
inc
mov
cmp
scas
or
data16
les
shlb
ret
cmp
inc
cld
adc
jb
push
jnp
xor
jno
pop
loop
in
pop
cwtl
and
out
mov
cmpsb
in
or
pop
cmpl
push
inc
out
insb
repnz
fwait
leave
adc
mov
pusha
adc
mov
hlt
std
insl
dec
lcall
sarb
sbb
adc
sarb
sbb
js
daa
jmp
sub
insl
and
lret
mov
xchg
xor
das
xchg
mov
popa
sbb
stc
and
cmp
jle
leave
jecxz
mov
cli
adc
pop
stc
into
mov
outsl
js
sub
inc
mov
rorl
movsl
out
ja
mov
xor
adc
cmpsl
cmp
add
sbb
popa
jg
fistpll
or
lock
xchg
push
push
push
xchg
xor
pop
lahf
xchg
int
jo
lds
cmp
jecxz
in
or
lods
cld
imul
js
or
int3
test
sbb
sbb
fadd
jae
jns
adc
jl
int3
pop
arpl
aas
sahf
out
sbb
push
push
movsl
push
ds
jo
sbb
je
stos
dec
and
sarl
aam
jle
movsl
sti
xchg
sbb
testl
lea
fwait
cmp
adc
loope
stc
sub
cltd
fwait
cmc
bound
push
out
mov
dec
stc
pop
dec
lcall
scas
fdivr
add
cltd
movsl
and
js
xor
test
nop
stc
mov
fldl
pop
aam
sbb
xchg
dec
pop
mov
dec
inc
aaa
out
sub
andl
gs
aaa
cmp
xchg
pushf
jns
pushf
mov
mov
data16
out
pop
add
mov
mov
or
lcall
and
lcall
gs
sbb
inc
testl
fists
stc
mov
xorl
sub
ret
push
xchg
add
das
mov
dec
loopne,pt
jp
inc
mov
pop
loopne
loop
push
and
enter
test
cmp
sbb
in
ret
cltd
loope
push
stos
jnp
shlb
or
in
into
adc
cmp
lret
pusha
xorb
mov
xchg
shlb
test
dec
shll
push
call
popf
test
inc
mov
ret
xchg
add
push
and
push
cmpl
inc
iret
push
mov
roll
pop
mov
incl
xor
and
jne
xchg
xor
mov
pop
xor
xchg
jbe
dec
xor
push
or
dec
xor
pop
or
cmc
jne
xor
jecxz
filds
mov
add
lea
rolb
sbb
add
test
jne
outsb
data16
xchg
stos
aad
xor
pop
enter
inc
mov
sub
mov
outsb
int
sbb
and
dec
pop
cmc
je
je
xor
mov
pop
scas
ss
cmpsb
push
and
mov
cmpsl
sub
lock
sub
clc
pop
movsl
notb
js
aaa
into
jp
add
pop
pop
notb
mov
push
lret
add
cmp
lahf
mov
sti
imul
imul
test
mov
ret
out
pop
daa
ror
add
dec
ret
jecxz
lock
inc
int
cmp
shll
das
add
pop
in
pop
sbb
push
push
out
mov
test
rcll
cltd
mov
jmp
sti
out
inc
or
xchg
or
sub
dec
pusha
mov
fcoms
sbb
aad
cmpsb
jae
cs
xchg
mov
decb
daa
stos
mov
fisubrl
mov
mov
inc
mov
sbb
mov
enter
jo
sbb
daa
stos
hlt
mov
inc
jmp
popa
ds
mov
int
movsl
pop
xor
xor
jmp
jbe
jl
dec
call
adc
mov
mov
and
jae
inc
notl
ret
in
jb
pop
scas
mov
loopne
or
jp
pop
out
dec
xor
push
pop
jg
icebp
xlat
popa
xchg
roll
pusha
lods
cmpsl
inc
xchg
inc
mov
es
fldt
push
nop
cli
lret
push
imul
fcoms
mov
jmp
movsl
sub
push
sbb
xor
lods
or
inc
leave
pop
and
fwait
das
xchg
push
xor
fwait
dec
mov
mov
or
shrl
fisubrs
dec
mov
sbb
test
in
jg
sub
imul
movsb
in
push
cmp
pop
cli
xchg
pop
nop
mov
sahf
sahf
fcomip
aaa
pop
dec
cmp
scas
daa
fimull
je
inc
jecxz
cwtl
xchg
outsb
cmp
jmp
test
jecxz
and
stos
sub
cmpsl
push
dec
out
rclb
addr16
adc
sub
xchg
shll
sub
cmp
lds
mov
pop
sbbb
cli
rorl
sub
outsl
push
mov
and
scas
add
loope
jae
sbb
adc
xchg
sub
mov
sti
adcb
cmp
fidivrs
pop
sbb
pop
or
jae
xchg
xor
enter
cwtl
sti
imul
mov
inc
mov
mov
xchg
lods
adc
pop
ds
sub
fdiv
sub
mov
rcll
inc
push
and
and
fcomps
pop
dec
jecxz
fisubrl
jl
mov
pop
lahf
iret
lds
sarb
pop
push
jnp
mov
sbb
jmp
sub
mov
repz
sbb
push
scas
insb
fisubrs
in
pop
push
mov
iret
lea
adc
imul
popa
pop
sbb
pop
pop
mov
cld
or
hlt
pop
xor
pusha
outsb
sti
and
aam
sbb
mov
cmp
sbb
daa
scas
mov
fwait
mov
add
pop
out
cld
ja
in
stos
dec
push
mov
js
mov
mov
push
lods
dec
add
lcall
shrl
into
xchg
or
mov
jne
dec
and
mov
lcall
leave
je
dec
and
in
xlat
and
mov
sub
pop
ja
imul
mov
jo
xchg
cvtdq2ps
cltd
rcrb
mov
inc
sub
cmpsl
or
imul
push
adc
push
push
outsb
notl
sbb
out
int
xor
lea
roll
fmul
sbb
push
inc
setp
push
xor
sbb
leave
mov
leave
lret
inc
and
enter
lods
adc
sahf
or
fldl
cmp
mov
mov
repnz
inc
xlat
loopne
sbb
in
xor
push
push
clc
xor
in
mov
outsl
add
pusha
and
inc
loop
sarb
lcall
cld
push
xlat
xchg
lret
inc
mov
mov
incl
pushf
cmp
mov
aaa
movsb
pop
mov
adc
push
out
mov
jmp
rcll
popf
pop
imul
test
push
out
mov
xor
lahf
lods
in
cmp
push
f2xm1
or
shrb
push
ja
rorb
shlb
adc
cli
jp
cmpsb
cmpsb
cmp
jbe
sbb
cmpsl
jns
jl
or
jecxz
leave
push
mov
jge
jg
sub
je
jge
testl
jl
jne
inc
push
adc
pop
and
les
test
sub
mov
add
shl
pop
and
arpl
mov
push
sti
add
jbe
das
cltd
sqrtps
adc
test
mov
push
jae
loope
loopne
or
lods
mov
push
cli
jg
orl
pusha
pushf
jmp
jno
mov
outsb
sub
sbb
sti
push
dec
fsubrs
cmp
sub
push
jbe
dec
popl
xchg
mov
and
fidivrs
dec
fidivrs
xor
loope
push
push
aam
outsl
int
xchg
pushf
add
bswap
ret
xor
dec
and
cmp
inc
inc
or
and
sbb
cmp
andl
mov
test
clc
pop
add
mov
movsb
scas
sub
repz
ret
aam
jb
in
mov
inc
enter
push
scas
cmpsl
shr
xchg
cmp
stos
lods
cmp
sub
mov
or
lock
or
push
scas
mov
cmp
call
cli
xchg
push
imul
test
jecxz
lahf
fidivl
mov
add
fldl
mov
or
rclb
es
mov
loop
push
xor
je
daa
dec
shr
or
out
dec
add
pop
inc
adc
inc
inc
jmp
mov
jg
lods
mov
test
cmp
cmc
cmp
cmp
cmc
jne
mov
in
cmp
bound
sbbb
xchg
int
inc
or
inc
rcl
sbb
call
jnp
cltd
out
fstps
stos
imul
sbb
pop
sub
inc
test
mov
repnz
fisttps
mov
mov
fiaddl
jb
cwtl
pushf
incl
push
ret
or
popf
test
cmp
add
pop
and
xor
dec
push
nop
push
pop
cmp
xchg
mov
jg
xor
pop
push
loope
inc
dec
push
xchg
call
aaa
adc
cmp
ret
scas
aad
mov
or
push
push
xchg
inc
cmp
or
stc
jno
cmp
cmpsl
inc
stc
mov
sti
ret
push
jmp
stos
push
jno
les
int3
in
pop
xchg
sub
rcrl
pop
clc
es
repz
popa
fdivrs
and
rcll
jmp
cmp
pop
mov
lcall
stos
hlt
paddw
je,pt
mov
repz
jb
nop
xchg
pop
cltd
mov
jl
cmp
sbb
loopne
add
dec
stos
pop
jae
xchg
and
xor
mov
and
push
inc
mov
xchg
pop
jge
popf
es
fldenv
fcomps
jl
mov
push
xchg
sbb
sbb
clc
xchg
nop
pop
repnz
cmp
add
stos
leave
and
push
push
cmpsl
rolb
add
pop
lods
sbb
and
rcl
enter
into
inc
xor
and
stos
dec
pusha
mull
inc
jno
jmp
and
pop
dec
or
or
subl
xor
adc
sbb
inc
das
test
fsubrl
lds
or
push
jae
shrb
popw
aaa
jp
fcmovne
js
roll
push
mov
push
lods
xchg
cmp
xchg
jnp
sub
loopne
aad
roll
jge
lds
test
add
icebp
out
ret
cmpsb
pop
stos
dec
ds
pop
inc
cmc
add
int3
xchg
imul
test
mov
int3
and
scas
sbb
push
gs
mov
out
jmp
leave
mov
lock
fcoml
out
in
rclb
inc
sub
test
decl
decl
push
jge
in
adc
cltd
jmp
mov
cmp
or
inc
outsl
rcr
xchg
inc
movsb
frstor
divb
add
jmp
xchg
lea
mov
outsl
pop
xor
mov
out
movsl
cmp
mov
push
sbb
mov
cli
mov
cld
or
add
and
arpl
enter
ss
loope
pop
ret
loop
outsl
cmp
imul
and
mov
lahf
cmp
inc
fwait
or
adc
jp
clc
cmp
pop
repnz
adc
imul
push
jne
popf
push
js
dec
call
sbb
jbe
push
movsb
adc
int
jb
inc
ficomps
pop
cmpsl
cmp
testb
mov
jbe
out
xor
inc
mov
and
pop
mov
lcall
inc
aam
rclb
xor
sub
dec
into
int3
sub
or
nop
icebp
and
inc
cmp
fcoms
loopne
jge
adc
and
jbe
flds
cwtl
xchg
mov
jne
in
repz
pop
das
lahf
xor
jne
in
icebp
add
imul
das
outsl
push
cmpsb
xor
dec
and
pop
iret
adc
xchg
jne
testl
cmpl
pop
adc
popa
lds
push
mov
sub
cmp
and
jns
jb
les
out
and
mov
fidivrs
icebp
cmp
jle
clc
pop
scas
jae
mov
dec
cmp
out
outsl
sti
out
inc
jecxz
inc
dec
jo
lret
adc
mov
in
jl
mov
arpl
hlt
js
stos
or
sarb
jne
dec
sub
loope
adc
or
add
cmp
lea
es
mov
mov
push
sub
mov
clc
jnp
add
dec
shlb
sbb
repz
push
lahf
idivl
nop
xor
ret
xor
fdivrs
fcoml
js
mov
ljmp
lods
popf
pop
hlt
leave
dec
mov
shlb
inc
je
sub
push
sbb
sarb
inc
adc
out
mov
inc
or
sahf
sti
dec
xchg
dec
and
xchg
inc
in
lret
nop
pop
inc
push
or
sbb
inc
adc
sub
pop
xorb
lahf
push
clc
data16
adc
es
decb
jbe
dec
mov
or
xor
push
neg
mov
push
inc
scas
mov
xchg
pop
das
xchg
shl
inc
cmp
xor
repz
sbb
sahf
dec
cltd
fstps
and
enter
fistpll
cmpsb
fistps
pop
mov
loop
cmpsl
or
and
mov
das
ret
call
mov
popf
mov
out
ds
insb
dec
mov
insb
mov
adc
lods
adc
pushf
mov
rclb
testb
xchg
popf
cli
int3
pop
jae
push
rcl
call
dec
cwtl
jecxz
push
fmuls
pop
dec
test
mov
ja
out
cmp
out
pop
out
mov
dec
lret
xchg
mov
pop
iret
ficomps
mov
jae
ja
adcl
mov
mov
and
daa
xchg
stc
adc
mov
xchg
dec
sub
scas
stos
pop
loope
fmull
lods
push
mov
add
jl
sbb
xchg
xchg
roll
sbb
ljmp
push
pop
sub
push
stc
push
faddl
add
mov
orl
out
pushf
lds
mov
add
out
push
adc
add
movw
in
ret
iret
sub
pop
aad
fwait
and
call
aas
jno
je
ljmp
xchg
xchg
inc
mov
loope
in
jp
adc
lds
lcall
jle
imulb
aad
sti
jae
scas
cmp
lods
dec
xchg
lcall
xchg
mov
fcomps
mov
enter
mov
xchg
jl
add
inc
nop
and
fcoms
dec
or
push
loop
jnp
mov
testb
in
and
loop
dec
insl
shl
lods
aad
or
negl
lods
lahf
inc
imul
lcall
add
das
sub
jg
punpcklwd
xchg
jle
sbb
jo
pop
call
dec
clc
push
aam
test
in
loop
jns
adc
les
repz
jae
push
or
inc
out
rol
inc
push
sbb
imul
cmp
out
jne
dec
mov
in
cli
pop
int3
addr16
mov
ss
sbb
or
out
xchg
dec
pop
sahf
sbb
les
shrl
notl
std
mov
rcr
mov
addb
sbb
out
in
imul
cltd
xchg
or
xchg
repnz
push
bound
push
aaa
lret
in
scas
cmp
adc
mov
push
xchg
insb
mov
rcll
fisubrs
jg
xchg
fstl
scas
jno
iret
mov
dec
lds
std
mov
jecxz
xchg
pop
push
out
test
pop
ja
jecxz
sub
jmp
push
mov
repnz
push
popf
cmp
xchg
jbe
mov
ret
cmp
pop
dec
push
jl
xchg
fsubr
in
sar
or
push
test
mov
jg
pushf
dec
std
outsb
mov
je
mov
xor
pop
push
cmp
stos
in
mov
fsubrp
das
cmp
adc
xchg
dec
in
or
cltd
and
mov
das
jne
pop
shr
aaa
sti
int3
ds
mov
hlt
lret
iret
mov
pop
sbb
cli
loop
mov
push
inc
xchg
or
leave
xchg
mov
mov
std
mov
jbe
in
imul
fs
cmp
push
sbb
and
push
cltd
pop
or
add
fwait
ds
add
fbld
push
icebp
lock
push
mov
in
lcall
push
lahf
mov
popl
jo
inc
jae
xchg
aam
out
ficoms
cmpsb
std
lcall
out
cld
mov
loopne
push
data16
cmp
lods
xchg
sub
repz
cvtpi2ps
stc
sbb
push
add
jae
add
jl
mov
data16
jge
aas
mov
mov
jle
pop
cmp
mov
sbb
test
fimuls
adc
jne
insb
pop
inc
mov
fldt
pop
fwait
bound
adc
add
inc
inc
push
imul
jle
arpl
movsl
jg
fcoms
and
lcall
jmp
jge
dec
mov
dec
push
dec
call
mov
lea
js
ljmp
push
fdivs
clc
mov
dec
js
iret
adc
adc
gs
jbe
mov
cld
jne
cmp
pop
adc
cmp
test
jo
xlat
je
mov
movsb
or
shl
lds
stos
inc
mov
das
and
fstpl
push
jle
jl
add
xchg
inc
lret
or
xchg
pop
cltd
mov
loope
sbb
setbe
popf
dec
xor
and
push
push
jp
mov
lds
or
xor
adc
jb
mov
xor
testb
ljmp
data16
loope
pusha
jge
xor
stos
fidivrs
stos
xor
sbb
divb
add
aas
xchg
xor
jge
pop
push
xchg
rorb
cwtl
jg
xchg
and
jg
and
xor
and
into
pop
or
std
les
cli
and
push
adc
sar
pop
mov
inc
cmp
daa
stc
loope
xchg
dec
outsb
idivl
jns
jnp
pop
pop
adcb
xchg
or
pop
pop
bound
imul
jae
jae
pop
test
bound
int
dec
xchg
popa
dec
adc
shll
shlb
repz
and
xor
jge
cltd
add
cmpsb
scas
xchg
add
imul
add
int3
sbb
pop
arpl
push
lock
out
mov
dec
lret
mov
aad
movsl
sti
out
adc
pushf
shlb
xlat
popa
sbb
scas
add
call
pop
adc
xor
test
dec
and
jg
mov
jne
ja
imul
cli
fs
cmp
aas
fimuls
mov
data16
jl
sbb
jecxz
push
bound
lahf
iret
jbe
jns
scas
push
sub
pop
inc
lea
fiadds
mov
ds
arpl
cmp
xor
jge
imul
orb
divl
testl
xchg
adc
data16
jmp
stc
dec
addr16
stc
pmuludq
ror
or
inc
pop
cmp
addb
and
lcall
int
in
push
lea
outsl
mov
das
or
cmc
dec
stos
ja
jnp
add
or
les
jecxz
aas
cmpsl
ret
js
inc
stc
cs
in
xchg
inc
mov
cs
mov
pop
cmc
insl
adc
mov
rcrb
ss
movsl
notl
sub
mov
pop
fstl
pop
xchg
adc
popa
mov
lcall
pop
ds
mov
mov
xor
and
aam
cs
aas
rcrl
fnstenv
outsb
jo
in
das
sbb
cmp
ret
shl
jns
addr16
pop
xchg
dec
stc
or
cmp
stos
xlat
dec
pop
inc
test
mov
std
lds
mov
loopne
add
inc
out
mov
or
jp
cltd
inc
xchg
fsubs
fimuls
test
and
jle
repnz
popa
and
stos
xchg
add
mov
and
pop
sbb
sub
lods
nop
cltd
xchg
movsb
lret
ret
jecxz
movsl
aam
rclb
fsubrs
push
cmp
mov
cmp
and
dec
and
test
mov
mov
sub
sbb
dec
cmpsl
lds
sbb
fbld
in
and
mov
cmpsb
or
arpl
int3
rcl
mov
outsb
iret
stos
scas
jge
stc
push
xor
push
aas
enter
or
movsl
xorl
xor
sub
stos
mov
sbb
or
push
xorl
iret
lock
mov
dec
adc
sti
push
lret
jb
jo
add
dec
pop
adc
inc
mov
vorpd
lcall
aas
mov
pop
cmp
lahf
in
jbe
repz
mov
es
inc
mov
sub
pop
arpl
gs
push
jo
lods
notl
popa
xchg
jne
dec
lock
xor
and
add
mov
sbb
dec
in
push
rcll
mov
movsl
arpl
cmc
cmp
mov
cmpb
xchg
inc
jne
pop
repz
es
add
jp
xchg
jae
dec
dec
adc
lcall
in
pop
mov
and
mov
stos
pushf
addr16
pop
roll
pop
cmpsb
mov
inc
ds
cmp
lahf
shrl
and
ja
jmp
pop
ret
mov
pop
aam
mov
cmc
int
pop
int3
pop
cmpb
andb
sub
dec
adc
add
iret
pop
test
inc
shlb
shll
jno
scas
fisubrl
pushf
fmull
adcl
imul
and
adc
stos
inc
adc
adc
cwtl
dec
cmpsl
jle
addb
rcrl
add
mov
xchg
xor
ss
xchg
enter
jmp
insb
insb
xchg
sub
mov
add
fsubrs
pop
mov
stc
insb
jmp
inc
jo
in
sbb
ljmp
addr16
and
fnsave
ja
int3
pop
sbb
clc
pop
lods
insl
stos
mov
mov
ds
mov
loopne
sub
adc
rol
mov
sub
movsl
fsubrl
arpl
cmp
sub
xor
clc
outsl
adc
pop
bound
stos
shlb
push
inc
mov
xchg
sub
scas
std
sbb
aad
fdivl
pop
pop
addb
adc
adc
mov
add
es
in
inc
ss
fs
scas
inc
or
mov
mov
xor
movl
sub
add
mov
and
scas
xchg
pop
cld
ret
and
push
xchg
jl
sbb
je
int
stc
subb
pop
ret
mov
bound
cmp
add
jmp
stc
or
into
divl
cmp
lods
or
push
sbb
sarb
xor
sarb
lcall
or
mov
push
test
push
cmc
movsb
cmp
jge
insb
xchg
mov
mov
test
lcall
popa
mov
hlt
lcall
pop
lcall
xchg
mov
cmp
and
add
jno
xchg
cmc
imul
sub
lds
test
insl
and
sub
lea
push
or
sahf
mov
jg
cli
and
fs
cmpsl
inc
lret
xchg
push
mov
xchg
and
mov
add
add
mov
adc
add
lods
in
jle
shlb
hlt
cmp
mov
data16
mov
les
js
into
jnp
xchg
daa
and
or
push
mov
dec
ficomps
fdiv
pusha
mov
mov
mov
out
mov
imul
push
lds
pushf
mov
mov
shrb
cmc
icebp
je
pusha
add
cli
push
adc
daa
inc
jp
std
cmp
push
push
mov
bound
sub
add
mov
std
lods
test
test
cli
push
push
cli
cltd
add
inc
and
test
pop
pop
xor
mov
es
mov
call
push
add
into
fucom
mov
les
fcmovbe
movsl
inc
sub
or
ret
xchg
pmullw
adc
repz
andb
xchg
sbbl
add
test
in
xor
dec
xchg
divb
mov
xor
jge
inc
add
xchg
sbb
lret
inc
ja
fs
jae
lods
push
mov
lret
test
imul
test
sub
sbb
popf
xchg
outsb
addr16
int
push
int
mov
test
stos
inc
in
bound
roll
cmpsl
lods
and
adc
fs
cli
mov
out
and
movsl
loope
test
sub
push
fcompl
cmp
sbb
adc
int
aas
aaa
mov
xacquire
arpl
mov
test
mov
mov
mulb
and
shl
pop
push
clc
fsubrs
or
daa
jbe
xchg
adcl
mov
fists
lret
or
mov
xor
lar
in
bnd
fisttpll
test
loopne
xchg
xorb
add
mov
or
ja
xor
ljmp
sbb
popf
and
in
aas
jle
cmp
and
insl
iret
pop
repz
mov
vprotw
in
sub
repz
jl
hlt
test
adc
fnsave
shrb
enter
loope
inc
dec
jae
cmp
mov
cs
repnz
fiaddl
jb
stc
and
pop
and
js
jecxz
xor
mov
push
outsb
mov
mov
stc
dec
rcrl
add
adc
insb
in
pop
dec
scas
xchg
inc
push
ja
loop
and
frstor
mov
push
scas
aas
lods
push
mov
popl
movlps
fsubl
and
push
mov
lods
xchg
or
out
repnz
xchg
mov
xor
add
insb
mov
jge
push
pop
popa
fists
cmc
xor
cmp
das
ja
in
mov
sub
mov
icebp
shrl
sbb
push
sub
jns
lcall
sub
pusha
iret
jp
cs
dec
push
inc
or
repz
lcall
push
pusha
push
je
pushf
sub
loop
push
es
add
xor
mov
fadds
test
insl
pavgw
test
mov
outsl
test
popf
jb
xor
popf
or
inc
and
adc
loop
xchg
adc
adc
lahf
sub
cmp
push
adc
sub
shrb
or
fmulp
clc
inc
lcall
push
mov
cs
cmp
fcoml
fdivrs
aaa
pop
pop
sahf
es
cmpl
push
push
int
out
sti
test
sbb
nop
and
adc
fstpt
mull
jmp
mov
lcall
cmpsl
out
cmp
push
xchg
push
pop
cmpsl
in
xchg
inc
xchg
in
mov
stc
lods
jmp
test
sub
sbb
lahf
push
mov
mov
jns
add
outsl
nop
cli
ret
in
and
mov
test
out
push
lds
jno
loop
imul
pop
push
inc
mov
lret
int3
and
cltd
xchg
mov
std
rolb
xchg
jb
or
mov
push
push
jb
push
xchg
push
add
push
inc
inc
add
cmpsb
test
dec
xchg
cld
test
shlb
xchg
push
mov
mov
inc
in
sbb
js
sahf
xchg
or
cli
sub
pop
jbe
jb
in
dec
jns
dec
mov
jg
inc
inc
mov
imul
push
mov
inc
sub
fnstenv
cmp
jge
in
lods
mov
bound
push
dec
out
lret
and
popf
std
mov
imul
call
insb
sbb
pop
or
mov
iret
loope
imul
and
and
xor
dec
data16
add
stos
ds
mov
xor
adc
lock
daa
ret
mov
pusha
stc
jmp
shll
sahf
xor
mov
scas
sbb
clc
jbe
xchg
pop
mov
mov
xor
pop
mov
or
das
and
mov
iret
mov
xchg
lds
jno
in
cmp
adc
aad
int3
repnz
mov
mov
or
pop
inc
adc
inc
jnp
push
push
enter
lcall
add
add
leave
stc
pop
inc
je
popf
jns
sub
clc
js
cmpsl
add
nop
test
mov
jae
fidivrl
cmp
leave
jnp
sub
lahf
push
mov
jo
lea
scas
scas
add
into
mov
or
pop
jae
jb
or
add
aam
loop
mov
push
hlt
push
sbb
sub
adc
push
pushf
and
enter
dec
xchg
mov
inc
jnp
xchg
lods
ljmp
cmp
repz
hlt
mov
push
scas
les
pop
pop
sub
and
mov
cmc
xchg
add
sub
mov
ds
cmp
sbb
cmp
dec
inc
and
and
test
mov
bound
cmp
xor
inc
mov
mov
push
bts
mov
pop
dec
fbstp
pop
out
jb
mov
inc
jecxz
test
in
aas
lahf
mov
rcrl
sti
push
int3
mov
outsb
jno
mov
pop
cmp
frstor
xchg
lea
insl
pop
inc
jbe
inc
rorl
add
movsb
cli
mov
orw
cli
and
loop
mov
addr16
lcall
cwtl
mov
sub
inc
movsb
leave
lcall
dec
leave
mov
cli
fcomip
add
and
icebp
xor
dec
fcoml
aam
push
pop
js
arpl
mov
out
ljmp
fwait
xor
and
mov
cli
nop
push
or
loopne
push
and
icebp
push
xor
mov
scas
jo
pop
add
mov
inc
fwait
test
stos
stc
clc
dec
jge
std
adc
jno
dec
loope
cmp
orl
dec
xor
push
dec
fsubs
jns
jmp
push
xlat
xor
cmp
dec
sub
mov
lods
std
pop
mov
adcl
xor
shlb
mov
mov
jnp
mov
or
mov
aam
pop
nop
inc
cwtl
fiaddl
jo
test
dec
adc
pop
fstpl
or
xor
xor
jmp
insb
dec
lock
scas
add
adc
push
daa
push
sbb
cwtl
cld
adc
mov
xor
das
adc
pop
or
gs
daa
adc
push
cmp
jge
pop
mov
push
sub
andl
shrb
lds
mov
inc
or
inc
arpl
stos
sub
es
xchg
lds
aaa
inc
dec
and
ret
arpl
push
or
dec
cmp
js
pop
dec
and
filds
std
mov
fcmovb
jmp
insb
filds
jo
fidivrl
lcall
jo
test
movsl
rcl
sub
jle
add
test
testb
mov
mov
pop
and
adc
mov
icebp
or
jle
sahf
mov
push
push
fucomp
jmp
xchg
out
pop
xor
dec
pop
imull
daa
cld
and
inc
ljmp
pop
test
xor
mov
xorb
mov
adc
adc
aam
ret
cmp
sbb
or
sbb
cmp
mov
mov
mov
adc
lock
jle
mov
loope
add
stc
sti
add
outsb
scas
cmp
std
icebp
in
repnz
imul
push
push
scas
or
mov
cmpsl
mov
dec
dec
shlb
xchg
pop
adc
xorb
adc
mov
sbb
rorl
mov
add
mov
loope
sti
inc
sar
or
nop
cmp
cmp
mov
mov
push
repnz
push
or
jb
ret
push
jecxz
shll
mov
int3
mov
lods
mov
imul
and
iret
push
arpl
mov
mov
pusha
loopne
insl
and
jno
mov
pop
mov
push
int
stos
loopne
scas
or
xchg
in
loopne
adc
mov
stos
sahf
xor
xchg
adc
sarb
sbb
pop
push
mov
xchg
dec
cmpsb
sbb
pop
imul
push
adc
sub
push
xor
int
rcl
inc
cld
addb
mov
imul
mov
in
mov
jne
mov
mov
ss
popf
mov
adc
out
sub
cli
dec
imul
mov
cmpl
xchg
dec
or
loope
cmp
out
xor
pushf
mov
xchg
inc
or
push
jns
jmp
lods
xor
jp
loopne
jl
push
jge
pop
imul
into
jno
pushf
and
repz
cmp
pop
cwtl
xchg
movsl
inc
outsb
pop
movsb
cmp
xchg
push
adc
jmp
and
aas
dec
in
std
mov
xor
lret
pop
cmc
fistpll
and
gs
jae
cmp
scas
fnstenv
cmp
or
ljmp
fwait
hlt
add
mov
icebp
ret
mov
outsl
push
pop
mov
pusha
movsl
adc
sbb
int
adc
mov
out
hlt
loopne
adc
insb
pop
jg
cmp
jbe
decl
mov
mov
insb
hlt
addr16
jnp
adc
in
loope
add
push
jp
push
or
add
les
lret
add
cmp
sub
mov
push
ja
pushf
pop
insb
jge
ss
cmp
data16
jmp
orl
aad
adc
inc
mov
cmpsl
mov
jo
int3
sub
sub
addb
inc
test
xchg
pop
jbe
ja
shl
decb
cmpsl
fisubrl
mov
xchg
loop
test
into
lods
pop
addr16
imul
and
mov
test
stos
sahf
xchg
mov
or
inc
aas
pop
push
daa
cli
jg
in
mov
mov
in
cmp
pop
arpl
pop
adc
insw
mov
ret
lret
shr
pushf
mov
push
lcall
fisubl
or
into
repz
mov
sbb
pop
pop
pop
inc
xchg
sarl
jl
add
imul
insb
dec
jp
lret
lea
pop
cltd
mov
fnstsw
sub
cmp
mov
fildll
or
dec
mov
push
movl
jbe
sbbb
add
pop
dec
pop
xchg
dec
pop
jbe
cs
and
jne
or
lcall
mov
pop
int3
adc
test
push
cmp
pop
fmuls
jbe
dec
pop
fldenv
jl
sub
int
pop
sbb
imul
aaa
popf
push
and
push
movsb
packssdw
int
adc
mov
test
sub
cwtl
lret
or
mov
and
cmp
in
cmp
dec
mov
push
fsts
lds
jne
jg
inc
imul
push
sbb
mov
push
pop
dec
fidivrl
fs
push
xchg
mov
mov
mov
add
xchg
dec
mov
movsl
dec
movl
scas
movsl
rcrb
in
dec
cmp
scas
push
cmp
test
pop
stos
lods
loop
push
jne
adcb
fwait
out
mov
mov
push
xchg
fisubs
mov
mov
mov
rcrb
addr16
leave
sbb
stos
xor
pop
test
loope
stos
aaa
add
adc
daa
dec
jecxz
cli
inc
cmp
fwait
shlb
add
cmpsb
lods
ret
mov
mov
pop
scas
inc
push
pop
xor
popa
pop
mov
xor
cmpsb
inc
jge
movsb
inc
adc
jns
xchg
push
xor
mov
and
out
movsl
mov
xchg
addl
mov
cmc
mov
pop
orl
ja
xor
shll
jbe
xor
icebp
std
aas
push
or
xchg
pop
inc
jb
jg
mov
xlat
jbe
pop
inc
das
in
fidivs
scas
inc
movsb
adc
adc
int
mov
dec
outsl
mov
js
lcall
in
mul
jne
shll
push
fwait
cld
fwait
arpl
js
xlat
adc
popf
in
mov
jmp
or
xorl
push
roll
aas
jge
mov
rol
xlat
xor
pop
dec
pushf
rorl
loopne
push
xchg
dec
mov
icebp
mov
xlat
icebp
mov
push
clc
mov
or
addr16
nop
leave
xchg
das
insl
loop
inc
rclb
es
fs
sbb
les
outsb
pop
jp
xchg
mov
and
mov
add
mov
pushf
cli
sub
cmp
cmp
fistl
clc
cltd
sti
and
sub
loopne
dec
in
xchg
arpl
sti
jle
xchg
jnp
mov
mov
cmp
pop
out
mov
sub
fcmovnbe
je
mov
inc
sbbb
pop
xor
xchg
mov
ret
in
mov
lds
adc
fisttps
mov
lret
add
insb
jge
aad
adc
mov
pop
inc
fsubs
jge
adc
push
lahf
sbb
call
test
into
sarl
leave
fwait
xchg
imul
and
in
xlat
cmp
ret
jmp
repnz
lea
push
out
enter
scas
inc
mov
mov
push
jae
repz
jle
pop
ljmp
push
mov
in
and
cmp
sti
xor
popf
movsb
cmp
shr
mov
cld
inc
outsb
xor
adc
pop
jo
and
ret
pop
int3
ficompl
bound
insl
stc
scas
sarl
jecxz
push
outsb
or
loop
test
inc
stc
adc
test
mov
mov
int
mov
je
sbb
jl
dec
ret
aas
in
jl
and
jae
cmp
divb
mov
inc
xor
mov
into
xor
mov
sarl
cmp
pop
jg
xchg
das
xchg
jmp
xchg
push
cltd
enter
adc
rolb
jl
inc
mov
sub
in
xchg
mov
int
ret
insl
and
mov
mov
mov
pop
rcll
adc
mov
push
xor
dec
sbb
lds
fistpl
bound
daa
je
jmp
sub
jle
cmpsl
movb
ret
arpl
std
jecxz
aas
mov
mov
adc
jmp
stos
jb
mov
ds
xor
mov
sbb
aam
xchg
and
ret
mov
or
iret
cmc
mov
add
fwait
push
jno
popa
fwait
mov
jns
scas
dec
aaa
adc
jns
jnp
push
lods
pusha
test
mov
in
xchg
mov
dec
cmp
popaw
lahf
xor
pop
leave
test
or
or
mov
inc
jecxz
stos
aas
mov
adc
pusha
loope
pop
mov
popa
loopne
or
call
dec
notb
iret
push
ljmp
insb
pushf
dec
jl
js
jl
into
xor
jo
pop
cmpsl
jns
cmp
mov
ret
xchg
inc
mov
pop
xor
mov
cli
or
aaa
les
xlat
jo
outsl
mov
cmp
mov
test
movsb
or
iret
cmp
push
push
adc
sbb
add
sub
mov
repz
and
push
inc
mov
int
cmp
mov
test
or
sub
aaa
je
sarl
add
pop
leave
push
jle
sub
xchg
cmc
and
cmpsl
cltd
adc
fadd
les
xchg
mov
mov
ffree
lret
notl
adc
jle
or
xlat
rcrb
mov
fs
stos
and
ret
inc
out
jge
adc
lock
pop
fcompl
push
adc
loopne
shr
fs
push
int3
and
fs
jnp
movsl
loope
je
and
out
sub
jge
xor
or
fildl
inc
xlat
ret
jo
jns
aaa
adc
push
cmpsl
add
push
dec
out
out
sub
inc
add
mov
call
push
xacquire
mov
andl
cmpsb
jg
sub
sahf
add
push
xchg
cmpb
push
loop
das
subb
push
cmc
mov
mov
push
lea
pop
fldcw
sub
sub
ret
xchg
jno
inc
repz
inc
mov
dec
sbb
mov
outsb
xor
icebp
fisubrl
xchg
nop
in
pop
icebp
je
in
fisttps
loope
xor
push
faddl
mov
stos
pop
sub
cli
lds
mov
jae
mov
shll
mov
fldenv
mov
aas
ror
adc
loopne
xor
add
fcoms
pop
adc
shrl
push
adc
mov
imul
mov
je
xchg
jb
hlt
adc
sub
and
ret
gs
push
pop
jnp
adc
leave
shll
loope
pushf
sub
dec
sbb
fs
aam
ret
mov
lret
or
fldenv
in
rorl
xchg
mov
test
pop
cwtl
loop
add
cld
sub
push
mov
mov
repz
subl
pusha
adc
dec
cmp
inc
cwtl
test
out
mov
int
mov
sti
mov
inc
inc
jp
cmpsl
sbb
mov
jl
ds
xor
xchg
cs
mov
sahf
pop
roll
mov
and
xchg
pop
addr16
adc
fistl
pop
in
call
addl
sar
push
pop
sub
sbb
cmp
stos
cmpsb
fstl
das
push
cmc
jge
dec
adc
sbb
lock
and
cmp
cmc
into
jecxz
cmp
ds
scas
push
xor
xchg
daa
xor
or
imul
mov
and
pop
lods
ds
xchg
fstps
insb
fbld
test
mov
cwtl
mov
scas
pop
mov
lret
jecxz
dec
mov
testb
lret
xor
pop
add
test
push
adc
lret
xlat
fs
subl
icebp
jle
pop
and
in
mov
xchg
push
lcall
xlat
mov
sub
mov
sub
xor
sarb
lods
jp
or
push
xchg
mov
js
stc
inc
mov
fcomi
fwait
sub
ja
int3
sub
cltd
test
inc
mov
jmp
in
mov
out
fldt
inc
sub
xor
mov
cs
inc
pop
mov
outsb
inc
add
stos
or
pop
cmc
sbb
lods
mov
xor
rcll
lret
mov
repz
loop
hlt
sbb
jns
adc
test
aaa
outsl
xchg
xchg
inc
test
fisubrs
lea
add
inc
aaa
loop
mov
jg
out
ds
and
cli
mov
lret
testb
je
repz
repnz
or
cs
fwait
repz
notl
push
and
xor
mov
xchg
and
jns
adc
dec
cmp
ficoms
fsub
mov
xchg
xchg
js
test
or
loopne
ret
jecxz
imul
pop
dec
hlt
pop
xchg
sti
pop
push
dec
scas
cmpsl
ljmp
icebp
out
xor
rcrb
lcall
mov
into
and
xor
popf
lds
pop
mov
hlt
ret
mov
cltd
inc
nop
jmp
stos
jns
mov
rcl
out
ljmp
xchg
imul
into
dec
sti
inc
inc
aaa
ret
cs
push
mov
inc
in
push
js
add
sbb
jne
jmp
xor
pop
inc
lock
xchg
shl
in
imul
xlat
cmp
mov
lahf
dec
hlt
jo
lcall
jae
cmp
ja
inc
dec
es
sahf
push
sbb
or
cmp
dec
pop
or
mov
xchg
mov
hlt
inc
sbb
aas
pushf
mov
cmp
or
inc
test
pop
daa
or
dec
aam
xchg
or
mov
mov
addr16
xor
dec
fidivs
scas
lods
mov
mov
imul
dec
aaa
imul
fbld
es
dec
cmpsb
xor
xchg
inc
das
pop
arpl
inc
es
mov
inc
inc
jl
push
mov
popf
aam
jnp
cs
pop
mov
sahf
sub
in
movsl
push
dec
xchg
xchg
ja,pt
xor
das
imul
jge
in
push
sub
and
mov
push
xchg
testl
sarb
dec
lods
pop
xor
shll
lods
lock
cmp
sub
pop
fsubl
push
lret
pop
push
in
rcrb
sub
rcrb
adc
daa
pop
mov
gs
jg
stos
pop
push
in
or
cmp
xor
sub
push
and
dec
mov
inc
fld
ljmp
rclb
adc
cmp
test
jbe
aas
pop
orb
aam
adc
out
es
jmp
stc
pop
fwait
lea
jmp
jp
inc
push
add
stos
mov
inc
dec
push
sbb
testl
and
fwait
mov
mov
fmuls
lcall
mov
lock
pop
mov
pop
mov
lcall
sbb
roll
mov
xor
sbb
ret
aam
sarl
cmp
jo
jle
rclb
int
int3
mov
fwait
mov
call
and
out
jno
jge
rol
cmp
enter
xor
inc
fisttps
and
rcll
sub
dec
in
pushf
mov
fidivs
aam
test
or
jmp
pusha
or
movsb
cld
stos
sarl
pop
add
test
lret
dec
mov
and
outsb
scas
test
xor
add
inc
cli
adc
push
shll
loope
mov
je
push
aad
lock
shlb
fistpl
ja
dec
imul
push
xor
jl
and
in
ljmp
inc
out
mov
rorl
push
sti
subl
inc
inc
lret
test
fbld
imul
pop
into
mov
push
arpl
add
cmovnp
pop
movsb
ret
mov
sbb
jg,pn
push
push
enter
aaa
scas
jmp
adc
arpl
xchg
aad
aam
adc
dec
pusha
call
sub
xchg
xor
xor
add
loop
mov
jne
test
xchg
jmp
and
jp
jae
xor
xchg
pushf
mov
ficoml
mov
lret
push
jns
in
jge
hlt
mov
and
les
pusha
sahf
sub
aam
ret
inc
add
mov
cmp
outsb
neg
out
arpl
mov
inc
adc
mov
fldt
sub
gs
out
lret
mov
adc
dec
out
movsl
jle
pop
data16
sub
nop
loopne
out
jae
and
add
int3
lret
andl
lea
imul
or
mov
jb
arpl
and
inc
inc
mov
add
jle
push
jnp
cmp
jns
push
mov
out
dec
aad
xchg
push
jl
or
adc
jmp
xor
mov
test
fstps
push
stos
mov
rolb
out
xor
into
push
loopne
push
and
mov
repnz
es
out
and
call
test
imul
jl
test
dec
jbe
push
push
jne
mul
js
mov
xchg
inc
jmp
jnp
enter
loop
jnp
in
inc
sbb
mov
dec
jb
fstl
fldcw
mov
sub
popa
divl
enter
jp
pop
mov
adcl
in
or
cmp
jns
jnp
mov
push
shrb
jg
pop
out
js
xor
push
stc
jnp
cltd
push
adc
cmp
sub
cmp
ficomps
jno
inc
xor
lods
addr16
cwtl
lock
sub
pop
out
mov
push
mov
cmp
rclb
iret
xor
aaa
std
imul
push
imul
orb
ljmp
and
xchg
inc
insl
cli
push
or
mov
pop
lcall
popf
dec
jg
idiv
adc
aam
cmp
dec
rol
inc
es
int
xor
add
cmp
mov
push
stos
sbb
mov
pushw
test
push
cmc
fs
mov
xorb
push
inc
inc
cmp
jbe
mov
cwtl
call
mov
inc
mov
mov
jmp
test
int3
out
les
cmp
into
insb
out
mov
and
ret
shll
stos
jg
aam
xchg
inc
inc
mov
inc
sbb
mov
cltd
jb
fs
dec
inc
jecxz
xchg
fdiv
sbb
xchg
xchg
or
mov
ja
imul
inc
mov
int3
shlb
mov
xlat
or
rorl
xor
les
or
push
adc
ror
into
xchg
mov
popf
or
dec
mov
mov
aaa
mov
dec
pusha
jge
push
in
mov
jno
aam
ljmp
xor
add
pop
jmp
aad
cmp
in
pop
cmc
inc
mov
in
sub
pop
pop
ret
ret
fnstsw
mov
add
push
leave
loopne
and
dec
cwtl
cmpsb
and
std
pop
jle
pusha
push
adcl
push
mov
adc
insb
adc
mov
or
call
sbb
div
test
dec
and
sub
jae
test
xchg
daa
mov
cmp
mov
dec
mov
out
inc
call
pop
fstpl
mov
leave
xor
fs
inc
popl
mov
dec
sub
in
adcb
inc
mov
hlt
scas
aas
shlb
das
stos
ja
xchg
pop
push
cmp
xchg
mov
jp
cmp
push
push
insb
stos
add
popf
jnp
sub
add
cmp
cltd
scas
sbb
test
rolb
cmpsl
inc
daa
out
fdivrl
into
in
and
adc
cmovle
cwtl
lea
hlt
ljmp
adcl
js
adc
jp
cld
adc
mov
mov
mov
or
dec
pop
sti
mov
and
mov
mov
nop
add
pop
mov
push
xor
scas
pop
test
jge
adc
and
loopne
hlt
push
and
out
xlat
out
and
lods
arpl
jae
pushf
mov
shl
jns
inc
sbb
aas
xchg
add
gs
add
lods
stc
mov
loope
lods
jnp
push
xchg
jns
aam
add
cwtl
add
cltd
or
inc
fstpl
mov
loopne
dec
repnz
jo
dec
mov
jnp
and
adc
dec
mov
cltd
test
ss
cwtl
popf
mov
sub
out
and
mov
sbb
mov
iret
rcrl
negl
ja
enter
inc
add
test
and
mov
mov
cmc
or
sub
fdivp
push
xor
xor
pop
out
inc
lods
xor
test
inc
cli
in
cltd
repnz
xchg
sub
shl
mov
sarl
in
gs
sub
test
inc
scas
or
fstpt
sub
je
in
movsb
xchg
mov
add
and
je
imul
dec
push
mov
bound
sbb
bound
cwtl
pop
fwait
adc
or
mov
test
pop
popa
inc
ja
adc
and
divl
mov
std
cwtl
out
not
dec
stos
test
loopne
clc
cmpsl
cmp
cmp
push
mov
cwtl
insl
xchg
and
xor
sub
pop
test
arpl
dec
xchg
clc
xchg
aam
stc
jg
mov
lock
outsl
or
pop
hlt
inc
std
insl
fxch
test
cld
scas
dec
pop
aam
cmp
jne
shrl
or
xchg
aas
mov
call
in
loope
cs
dec
adc
mov
xor
jbe
push
shr
and
bound
mov
out
mov
pop
cmc
jge
or
sbb
and
cmp
sub
stos
addr16
imul
mov
push
and
jle
mov
or
push
push
jecxz
dec
pusha
shll
mov
mov
mov
cltd
mov
mov
jge
mov
fwait
dec
outsl
sub
cmp
push
mov
mov
and
or
sub
div
vpminub
dec
ljmp
mov
mov
test
notb
clc
jae
xchg
sub
push
aam
cli
insl
ret
test
xlat
dec
insb
sarl
add
adc
push
lahf
stos
jecxz
mov
cmc
cli
shll
stc
inc
fidivrl
lock
rcrl
adc
rcrb
sub
add
mov
push
xchg
pop
xor
jge
mov
fs
insl
push
dec
jae
jnp
in
and
fs
push
dec
loope
fwait
addr16
pop
and
xchg
and
xchg
lcall
and
int
xlat
out
or
into
sub
jne
mov
js
push
jp
inc
sbb
push
addr16
inc
adc
sub
xor
les
scas
xor
dec
mov
out
or
aad
cli
das
jmp
mov
nop
gs
lock
int
pushl
pcmpgtb
jb
lock
daa
pop
sub
or
icebp
jg
sbb
cmp
repz
pusha
adc
sub
out
jns
push
sbb
cwtl
imull
jle
arpl
addr16
jecxz
mov
sbb
mov
dec
sti
adc
sbb
mov
test
push
mov
sub
jg
fdivl
mov
mov
scas
mov
cmpsb
xor
xchg
arpl
xor
arpl
pop
insb
dec
push
sbb
mov
xlat
scas
test
sub
lcall
push
mulb
inc
cmp
nop
xchg
xchg
daa
in
shr
movsl
jp
int
add
movsb
out
adc
in
sub
jge
add
mov
cmpsb
xchg
mov
inc
in
add
cmpsl
pop
stos
or
dec
pop
or
push
aas
int3
imul
and
adc
push
addr16
lods
in
adc
je
fdivr
shlb
ja
xchg
pop
repz
dec
js
and
shll
mov
or
mov
es
or
in
lock
mov
push
pop
in
test
add
mov
xor
or
push
sbb
jb
sbb
pop
cmc
dec
jecxz
mov
jbe
jl
scas
int
sbb
xchg
xchg
or
cmp
pop
pop
jmp
cltd
popa
repnz
cmpsl
test
dec
dec
push
hlt
jecxz
loope
pop
cwtl
inc
int
pop
fmull
out
lods
repnz
sbb
mov
xchg
mov
jnp
std
inc
stc
push
scas
mov
push
out
cmp
and
in
pop
adc
int
cli
add
insb
cmpl
pop
push
ljmp
je
mov
js
xor
pop
jb
loopne
aas
xor
jmp
sahf
and
movsl
xor
xchg
mov
out
ja
ret
cwtl
js
push
jb
jnp
adc
sub
fldcw
lcall
cwtl
inc
push
test
fcoml
jb
pop
inc
mov
fs
or
sub
dec
pop
jo
std
jmp
lcall
andl
adc
dec
mov
mov
jg
xor
sub
push
packssdw
insb
dec
int3
push
dec
xchg
int
push
add
fistl
jecxz
cmp
sbb
jne
dec
test
lret
aad
push
lret
mov
mov
div
cmc
bound
xchg
sbb
sbb
out
lcall
pop
inc
mov
push
pop
test
jmp
sub
dec
and
add
enter
outsb
cld
movsb
das
shll
cltd
or
push
dec
testb
add
stos
nop
dec
xor
sub
mov
mov
cmpsl
xchg
int3
dec
aas
dec
pushf
sbb
inc
cmp
sahf
testb
mov
push
pop
icebp
es
ret
mov
clc
daa
mov
and
mov
jo
cmp
xchg
leave
mov
adc
es
pop
cmpsb
int3
xchg
pop
nop
das
add
xchg
xchg
stc
jno
push
sbb
jmp
into
or
push
cmp
mov
jmp
xchg
shrl
popa
pop
xchg
sub
pop
adc
push
je
loopne
sbb
push
mov
mov
xchg
push
push
mov
pop
test
rorl
es
cmp
inc
filds
ljmp
dec
movq
in
sbb
add
adc
roll
or
enter
sbb
and
mov
sub
seto
and
aam
mov
aad
mov
cld
and
mov
push
cld
lret
cmpsb
xchg
lret
hlt
push
daa
stc
xlat
or
fs
scas
push
lcall
inc
mov
xchg
popf
clc
sbb
pop
in
jge
loop
cmpsb
les
stc
push
addl
cwtl
jae
xchg
pop
iret
jp
mov
mov
inc
push
xchg
push
mov
in
les
mov
sbb
fwait
mov
lret
jne
testb
int
mov
test
add
fidivrs
dec
sbb
or
iret
lods
outsl
xor
inc
ror
push
jl
gs
push
popa
loope
inc
popa
and
add
add
int3
jmp
inc
jl
push
xchg
xor
and
push
xchg
out
pop
es
dec
cmp
in
adc
push
push
dec
sbb
adc
adc
loope
das
fcoms
sub
cmpsl
loope
ret
pop
jmp
into
mov
cltd
movsb
and
pop
in
gs
test
xor
shrb
jae
in
aad
inc
pop
cmp
int
div
dec
in
adc
dec
sub
push
stos
jmp
and
pop
outsb
add
pop
cmp
add
sub
mov
fiadds
rolb
nop
std
sbbl
dec
jne
sub
idivl
mov
pop
loope
jno
jg
lods
test
push
xorb
cmpsl
xor
movsl
jae
pop
inc
mov
test
mov
fidivrs
aas
enter
inc
xor
jecxz
fcompl
lock
xor
imul
int
iret
jbe
aad
ficoml
in
mov
into
mov
or
fs
and
cmp
dec
adc
adcb
sahf
pop
into
dec
jne
inc
lret
fildl
ds
xorl
scas
xchg
inc
mov
cwtl
loopne
fisubl
mov
jg
mov
and
cmp
out
fsubr
push
or
outsb
dec
mov
dec
fisttps
jne
ficompl
mov
add
aas
fcom
dec
add
adc
loope
pusha
loope
pop
xchg
or
xor
xlat
lock
pop
sub
mov
in
push
int
pop
dec
adc
mov
test
xchg
rolb
pop
sub
pusha
popl
cmpl
lret
dec
mov
pushf
mov
mov
int
xchg
push
and
stc
inc
sbb
add
nop
jne
or
outsb
insl
data16
fxch
pop
aas
lret
fwait
jns
dec
add
jmp
popa
mov
lods
test
mov
lock
xchg
mov
inc
or
fisttps
jp
rorb
jae
dec
addr16
mov
dec
or
cmpl
cltd
les
add
push
mov
inc
xchg
test
int3
mov
lret
mov
xlat
sub
subb
lods
cmp
xchg
arpl
push
sbb
sti
dec
add
cmp
imul
and
test
movsb
loop
fucom
xchg
clc
pop
jge
mov
dec
dec
in
sahf
adc
mov
jb
int
sbb
adc
or
pop
sbb
scas
in
subb
test
sbb
das
add
lods
xchg
test
subl
mov
cs
cmp
jnp
pop
popf
stc
sbb
inc
cwtl
jp
mov
xchg
fwait
test
mov
push
ss
sbb
adc
repnz
push
xor
jae
std
push
call
xchg
in
jl
mov
icebp
lret
leave
test
xchg
pop
repnz
adc
pop
mov
mov
imul
mov
das
inc
mov
sub
ret
pop
sub
xchg
sti
mov
mov
imul
jbe
xchg
pop
xlat
cs
loope
stos
pop
fwait
mov
xchg
dec
popa
scas
or
in
add
test
xor
cmp
out
clc
inc
jae
out
pop
xchg
lds
test
jno
mov
adc
movsl
lcall
xchg
jg
push
out
jmp
ljmp
pop
adc
daa
je
popa
shll
lcall
inc
fdivrl
dec
lcall
in
lods
mov
jnp
or
sub
aad
pop
test
sub
rolb
fs
mov
lock
stos
pushl
jne
mov
cmpsb
mov
xorb
mov
adc
mov
sbb
xor
pop
mov
stos
sub
rcrl
sbb
pop
adc
cmp
mov
inc
not
std
push
icebp
push
cmp
js
loop
shl
gs
in
xchg
scas
mov
and
and
mov
sub
push
xchg
fimuls
lret
adc
pop
imull
or
in
mov
sub
mov
inc
pop
sub
mov
lock
pop
fcom
pop
and
jg
add
lea
mov
jb
inc
pop
rorb
inc
test
jecxz
jb
and
je
lahf
pop
xchg
mov
insb
cmpsb
pop
adcl
adc
push
sub
in
nop
adcl
inc
fldcw
ret
dec
test
mov
inc
sbb
fdivp
xor
or
xchg
in
mov
stos
push
iret
into
mov
add
pop
stc
sbb
mov
mov
sub
inc
sub
lcall
mov
outsl
add
orl
roll
xchg
xlat
fidivrs
loope
add
mov
mov
data16
int
ljmp
jae
cmpb
pop
fsubs
fidivl
int3
jnp
rcrb
fwait
sub
int3
sub
jmp
add
clc
cld
mov
push
dec
cmp
pop
cmp
push
mov
mov
fmull
mov
aam
mov
push
dec
xchg
lea
pop
mov
mov
mov
mov
popa
enter
xor
xor
sar
dec
bound
sub
mov
loopne
jl
jno
xor
and
push
push
cwtl
jb
pop
fcmovne
inc
pop
inc
mov
push
push
scas
rclb
movsb
mov
test
stc
pop
adc
ss
sbb
mov
adc
jecxz
leave
sbb
and
xchg
xchg
lods
mov
sub
aam
mov
jnp
movsb
stos
das
mov
sbb
xor
dec
fs
xor
add
jp
dec
cmp
push
push
ss
test
cmp
fdivrs
inc
mov
fdivrl
nop
mov
cmp
mov
lahf
fsubrs
stc
push
lret
dec
lret
mov
dec
mov
jno
cwtl
gs
iret
push
mov
out
push
pop
mov
xor
adc
push
cltd
jo
xor
dec
push
subb
pop
orl
push
movsl
adc
fistps
mov
mov
out
mov
scas
in
lret
pop
mov
lcall
daa
inc
mov
xchg
push
inc
addb
leave
or
and
nop
sbb
and
fabs
loopne
es
xor
mov
sti
fxch
lea
mov
jp
mov
dec
sarl
ret
cwtl
ljmp
sbbb
je
push
mov
addr16
or
jnp
js
out
pop
mov
aaa
out
stos
push
das
sbb
mov
leave
icebp
push
pop
loope
mov
add
xchg
or
jle
and
test
leave
mov
cmp
fnsave
shll
test
or
icebp
mov
enter
out
xchg
cs
fcomps
cwtl
cmp
outsb
mov
cs
stos
dec
loope
ret
andb
jl
bnd
es
aas
shlb
stos
sub
mov
pushf
and
rolb
pop
dec
or
clc
mov
pop
mull
fdivl
mov
pop
mov
enter
dec
ret
jecxz
imul
gs
push
xchg
out
xchg
jl
fucom
insl
imul
and
lods
repz
divl
fnstsw
xor
pop
repnz
mov
push
loope
cmc
addr16
sub
shll
lods
outsb
fstpt
in
dec
push
jb
leave
push
fisubrl
fstl
fwait
sbb
mov
dec
nop
cld
jne
jle
incb
mov
jnp
loope
cltd
cmp
cli
sahf
mov
scas
jo
fbld
adc
or
xor
fisubs
das
pop
sub
xchg
pop
jecxz
xor
das
loop
and
testb
xor
mov
inc
int
jmp
pop
dec
je
add
mov
and
clc
jnp
cmp
mov
jae
outsl
sbbl
arpl
jns
aad
test
dec
push
adc
sbb
test
add
pop
cmp
inc
mov
jno
push
enter
cmp
or
inc
scas
cs
andb
pop
pusha
leave
pushf
sbb
loopne
repz
mov
inc
pop
jle
push
pusha
pop
cmp
xchg
push
sbb
cmpsl
or
or
xor
and
xchg
cmpsl
cmpsb
es
mov
insb
jecxz
mov
cmp
popf
into
mov
int3
repz
adc
cmp
outsw
cld
ret
sbb
dec
push
hlt
xchg
call
cmp
rolb
call
cmpsl
fbld
into
xor
aas
jle
push
add
shr
push
lock
test
jl
std
jg
mov
test
xchg
aaa
mov
loopne
jge
sbb
mov
inc
test
in
stos
sbb
fsubrs
test
ds
out
lock
dec
cmc
dec
adc
sar
insl
scas
jne
add
lds
sbb
xor
arpl
rcll
fadds
push
ss
mov
sahf
dec
and
dec
loop
out
imulb
lock
dec
xchg
das
es
inc
lret
cmp
lea
loop
fistl
jge
mov
xchg
clc
lock
imul
push
addr16
mov
in
stos
pop
shll
ror
pop
push
dec
ds
std
cmp
sbb
cmc
add
push
stos
pop
shl
cmp
sub
jbe
push
sub
jecxz
cwtl
and
jno
ja
jns
lds
ds
lock
pop
push
nop
inc
pop
push
sbb
push
pop
xchg
sbb
cmp
in
adc
sub
popa
and
push
xor
xor
xor
sub
shl
pop
xor
fidivrl
xor
jmp
ret
inc
cli
push
jno
int
movsl
test
push
mov
je
cli
mov
int
inc
sub
shrb
lea
popf
dec
pop
out
add
cwtl
cwtl
in
add
inc
xchg
stos
mul
shll
push
lret
repnz
adc
scas
jle
out
imul
xchg
js
cmp
loope
adc
inc
icebp
mov
mov
bound
dec
add
mov
sarl
push
lcall
mov
out
jns
dec
push
aad
cli
xchg
andb
repz
mov
adc
fimuls
mov
jp
mov
insl
cli
popa
scas
push
mov
mov
pop
mov
rcll
dec
loop
aad
mov
cltd
mov
aad
imul
mov
mov
shll
dec
sub
mov
movl
mov
outsl
mov
push
jno
mov
das
mov
adc
sbb
test
popf
pop
mov
sbb
xchg
push
aaa
jp
push
out
dec
rclb
aas
pop
dec
xlat
sar
test
mov
repz
loopne
shrl
cmp
repnz
and
jecxz
mov
sub
les
mov
fistps
notb
addr16
in
lds
pop
cmpsl
sub
sub
cmp
xor
repnz
pop
cmpsb
rcl
lods
jge
add
loop
add
push
stos
faddp
or
mov
mov
mov
xor
pushl
adc
adc
jge
cltd
aas
repnz
push
out
cmp
pop
adc
mov
cmpsb
fsubr
sub
dec
leave
cmc
mov
call
xchg
sub
cmp
adc
add
inc
out
mov
dec
pop
test
pop
mov
in
mov
xor
test
mov
popf
or
scas
iret
mov
inc
lahf
xchg
jl
lahf
jmp
mov
and
mov
push
repz
push
in
inc
out
out
loop
lcall
setp
fists
and
jo
inc
scas
dec
sbb
rcll
mov
xchg
out
pop
push
loop
adc
adc
xchg
xchg
aad
cmp
rolb
lds
lods
outsb
dec
xchg
pop
pusha
inc
adc
into
pop
pusha
sbbl
sbb
jbe
mov
adc
enter
pushl
and
mov
aad
std
mov
push
and
in
inc
xor
out
mov
out
jno
fstl
into
loop
out
int
sahf
ja
mov
cmpl
pushl
sbb
rcrl
xchg
inc
repz
adc
sub
or
sbb
dec
jp
push
cli
cmpb
out
in
mov
loopne
pop
ja
mov
bound
jmp
lods
adc
xor
imul
cmp
vhsubpd
push
jle
es
mov
inc
inc
sti
xchg
lahf
pop
push
add
cmp
ficoml
add
test
xchg
xor
sbb
int
clc
fadd
inc
shufps
dec
push
cs
jnp
add
mov
jns
adcb
cmp
scas
fsubrl
jb
mov
cmpsl
mov
das
fidivs
mov
add
js
xchg
out
push
and
cmpsb
xor
lods
mov
or
dec
test
inc
jo
jmp
in
inc
mov
ds
cltd
push
mov
xor
push
pop
jbe
addr16
test
stos
jle
icebp
sbb
cmp
ret
pop
xchg
jno
testl
jmp
loopne
mov
insl
pop
loope
push
stos
jno
add
xchg
movsl
frstor
adc
sti
mov
ja
jge
testb
xchg
adc
sarb
sub
int3
je
sti
daa
pop
adcl
push
nop
push
sar
add
add
and
pop
pop
push
mov
push
into
jge
adc
ret
and
dec
cmp
jno
mov
les
scas
xchg
rcll
inc
je
pop
cmpsb
addr16
fs
mov
jns
daa
orb
pop
lods
xchg
stos
jl
adc
in
mov
into
or
scas
pop
dec
mov
or
jns
xchg
dec
rcrl
mov
adc
insb
cmp
dec
cmpsb
les
daa
in
lret
cmovne
je
xor
ljmp
outsb
or
push
clc
push
jns
sub
stos
cmp
stc
loopne
jb
push
push
stc
cmp
inc
in
jmp
lcall
or
sbb
xlat
xchg
inc
or
xlat
fs
mov
push
pop
jp
hlt
xor
std
insb
pop
mov
mov
pop
lcall
notb
add
lcall
xor
sti
enter
sarl
test
rcrb
pop
mov
fadds
aas
adcl
and
js
push
out
jo
dec
popf
mov
inc
movsl
and
mov
out
daa
mov
cmp
ljmp
jmp
scas
push
fsubrs
das
add
out
in
add
sub
or
sbbl
mov
hlt
cmp
fs
mov
cwtl
arpl
and
add
enter
test
xchg
mov
add
cmp
jno
mov
push
or
subl
movsl
ja
arpl
dec
dec
insb
filds
dec
lahf
imulw
jecxz
mov
out
cmp
daa
fmull
sbb
pop
insl
xchg
push
mov
hlt
pop
xchg
sbb
mov
mov
ja
movsl
mov
in
mov
lea
lds
cmp
and
mov
out
pusha
adc
test
nop
xor
movl
jnp
outsl
jnp
sub
add
jle
mov
mov
or
pop
out
out
cmp
clc
adc
in
push
xorb
mov
sbb
adc
js
das
pop
xchg
pop
sbb
lahf
xchg
mov
sti
call
add
daa
cmp
out
or
cmp
inc
icebp
ja
mov
mov
fs
into
mov
sub
push
cmpsb
push
push
inc
and
mov
xlat
fwait
mov
sub
testl
rdmsr
ja
xchg
loope
outsb
xor
mov
jae
dec
sbb
arpl
inc
imul
js
repnz
dec
adc
mov
mov
and
jecxz
shlb
pop
imul
adc
lods
iret
inc
mov
stos
cmpsl
popa
mov
cmp
bound
push
dec
inc
xchg
fmull
sti
pusha
jae
lcall
ficomps
mov
or
ja
push
cmp
lods
xchg
cmc
cmp
dec
xchg
cmp
add
sbb
in
mov
pop
and
imul
test
fcomp
mov
outsb
orl
aam
mov
pop
insb
adc
insb
inc
mov
pop
in
frstor
inc
or
mov
jns
add
pop
jbe
dec
push
enter
sbb
popa
shll
lret
add
sub
in
sub
std
adc
mov
mov
mov
and
mov
mov
mov
mov
scas
sti
pop
or
pop
pop
add
into
out
jno
adc
rcll
inc
push
mov
push
xchg
mov
pushf
and
popf
scas
jle
add
in
sti
aad
add
mov
mov
testl
dec
jle
dec
jnp
scas
test
ds
scas
adc
pop
mov
jmp
inc
mov
sub
add
aad
inc
adc
push
fisttps
nop
pop
or
dec
mov
inc
push
loope
add
mov
mov
jmp
mov
and
loop
push
pusha
mov
lock
pop
ja
movsb
sub
mov
adcl
mov
pop
das
cmpsl
lods
lret
jo
mov
and
lahf
nop
and
or
lcall
dec
mov
jnp
cmp
out
jns
inc
les
pop
adc
add
mov
jae
aam
jg
mov
xchg
dec
out
cmp
insl
je
fcoms
xor
repnz
lret
imul
jno
mov
jnp
lods
arpl
add
mov
push
jp
or
xor
adc
cmp
and
pushf
dec
cwtl
inc
jecxz
pusha
shl
sbb
mov
dec
xor
gs
lret
mov
push
int
cmp
int
enter
loop
fwait
or
and
xchg
xor
decb
sub
movsl
sti
lods
mov
mov
cmpsb
pop
movsb
mov
mov
jb
mov
jmp
mov
jl
in
call
sbb
popa
iret
add
lock
adc
js
mov
int3
hlt
and
inc
dec
loopne
push
dec
xor
push
jns
clc
adc
push
popa
sub
or
data16
xchg
pop
adc
pop
rol
fsubl
mov
aam
lea
iret
scas
mov
cmp
cmp
cmp
dec
mov
mov
mov
add
ret
xchg
in
and
push
pop
xor
dec
loop
lock
shl
inc
popa
sub
and
aaa
push
mov
sub
or
xchg
jle
add
xor
jg
push
enter
add
or
xlat
xchg
mov
outsb
cmp
shl
jp
mov
ror
add
loopne
xor
int
test
xchg
dec
jmp
add
inc
pop
pop
sbb
ss
jle
mov
inc
mov
xchg
xor
int3
cltd
mov
mov
insb
mov
mov
in
xor
jp
cmp
lcall
aaa
dec
push
rorl
mov
xor
mov
mov
dec
lcall
in
mov
xor
sbb
jecxz
mov
arpl
mov
mov
jne
cmpsl
mov
dec
popl
dec
pop
mov
or
loop
insl
cli
movsl
dec
gs
enter
push
insl
mov
mov
sub
negl
loop
inc
fwait
inc
gs
pop
adc
sbb
and
xor
sub
mov
outsb
cmp
int3
not
cmp
mov
mov
mov
adc
inc
stc
pop
mov
add
loop
test
js
cld
sti
movsb
xor
xchg
cli
cld
test
iret
ror
enter
cmp
sahf
mov
sub
iret
cmp
add
push
dec
or
outsl
dec
mov
sarb
xchg
ds
lcall
das
mov
ja
push
mov
jp
lret
mov
mov
popa
les
fsubr
pop
mov
dec
je
dec
sub
aam
sbb
fisubrl
ret
pop
add
js
sarl
inc
popf
dec
rclb
xchg
xor
adc
mov
sbb
lret
cmp
loopne
sbb
popa
push
add
and
pop
xchg
jp
mov
push
cmp
outsl
jp
ficomps
sub
jo
es
daa
push
mov
insl
push
adc
ret
pusha
pushf
lcall
cmp
daa
loope
mov
mov
xchg
test
add
jmp
mov
mov
and
je
dec
test
push
call
sahf
ja
sbb
adc
cli
sub
inc
pop
xchg
gs
jge
imul
xor
or
mov
pop
cs
loope
add
leave
push
iret
jnp
and
xchg
subb
adc
mov
movsb
test
in
into
dec
movsl
dec
out
shlb
movsl
shll
les
aam
xor
lea
xor
fisttpl
cld
std
es
jmp
lret
sub
sahf
jmp
add
ss
sub
push
in
mov
movsb
cld
jbe
xor
sub
ror
std
xor
leave
dec
outsb
subb
das
out
or
pop
mov
iret
in
mov
pop
gs
fwait
xchg
inc
and
sahf
sbb
lods
shlb
cmp
mov
push
sub
push
sub
lock
jno
cmc
cs
out
or
pop
sub
push
and
mov
and
sub
push
inc
sbb
in
xchg
push
jl
xor
mov
sbb
cmp
orl
jecxz
xchg
xor
dec
or
imull
pushf
xorb
out
jge,pn
pop
mov
sub
push
loope
pop
dec
xor
push
fdivrs
inc
cmp
pop
test
mov
mov
roll
pop
sub
xchg
dec
cmp
pusha
mov
movsl
mov
filds
inc
mov
repz
pop
bound
mov
loope
mov
cmpsb
sub
or
push
adc
loop
cmp
cld
call
in
jg
push
insl
inc
ret
sti
mov
mov
inc
dec
xor
jl
or
je
xlat
push
pop
inc
and
push
mov
xor
mov
xor
dec
pop
push
pusha
cmp
inc
xchg
jno
dec
cli
jg
in
or
icebp
jo
mov
adc
push
imul
ret
ds
sub
jge
adc
mov
or
addr16
fadds
sbb
imul
mov
or
push
ds
mov
das
jnp
pop
jge
scas
roll
xchg
sub
jae
cmp
cmp
jp
cmpsl
test
cmpsb
jmp
hlt
push
sahf
dec
mov
lcall
pop
repnz
push
lock
or
mov
jb
test
add
push
jmp
jl
inc
sbb
test
cmp
push
bswap
cmp
in
push
mov
mov
arpl
btc
clc
mull
xchg
movsl
xor
fisubs
out
scas
and
dec
mov
pop
sbb
cmpsl
inc
or
jnp
loope
xor
or
hlt
test
ret
lcall
test
xchg
inc
xor
xchg
or
mov
lahf
or
arpl
inc
jnp
adc
fldl
lret
xor
jo
je
xchg
insl
jmp
or
in
movsb
mov
inc
cmc
xchg
xor
nop
jno
test
xchg
sub
pop
iret
test
mov
cld
add
js
add
cmpl
or
dec
fiaddl
adc
clc
xor
ljmp
xor
shr
lds
cmp
dec
aad
cmp
cmpsb
xchg
js
and
cli
mov
dec
es
xchg
or
imul
or
mov
add
xorb
into
or
pusha
test
cld
call
dec
mov
push
pop
shrl
and
jns
sub
in
mov
xchg
clc
jb
cld
or
scas
mov
xchg
les
test
in
mov
out
jno
add
icebp
psubw
in
sub
in
adc
out
mov
mov
jnp
cmc
and
in
enter
push
fdivs
cmp
out
rorl
fs
clc
or
sbb
cwtl
xchg
clc
ds
cltd
negl
push
mov
push
pop
imul
dec
pinsrw
sub
dec
cltd
cmp
incl
xor
pop
lods
loope
sub
inc
add
xor
ss
cmpsl
mov
sub
loop
cmovne
rclb
into
push
lcall
inc
aad
push
adc
xor
into
pop
jnp
imul
fcoms
fs
test
inc
cmpsl
mov
rep
adc
or
repz
dec
mov
fwait
js
pop
movsl
int3
mov
out
out
push
mov
mov
add
rolb
dec
icebp
lods
ds
or
sub
jge
mov
rclb
xchg
or
stc
test
inc
push
test
inc
cli
adc
sbb
cmp
xchg
adc
decl
and
clc
scas
xchg
repz
and
jnp
xchg
adc
aam
jle
jbe
sbbb
dec
dec
dec
and
cmp
jbe
and
push
sub
xchg
or
and
xchg
stc
icebp
inc
rorb
std
aas
pop
adc
cmp
dec
pushf
jb
push
mov
and
jmp
pop
aad
sahf
xchg
xor
pop
dec
fistps
and
mov
jecxz
jne
popf
lret
jl
dec
shll
test
enter
pop
fisttpl
rclb
adc
scas
in
sbb
push
hlt
adc
jmp
push
fnstenv
insl
mov
aas
ret
addr16
jno
sbb
adc
add
test
xor
jp
push
mov
push
fnstenv
jmp
adc
fisubrl
je
mov
sahf
and
imul
push
clc
cmpsl
add
cld
mov
test
ja
jle
leave
shrl
ret
or
sti
aam
outsl
jo
dec
lock
sbb
repz
out
out
inc
lods
lods
sbbl
out
nop
repnz
xchg
jp
xlat
test
xor
add
in
cmp
adc
pop
sub
or
pop
xchg
pop
xchg
xchg
int3
and
xor
xchg
add
mov
mov
pop
cs
pusha
int
call
mov
roll
jmp
push
adc
mov
and
popa
stos
loopne
mov
push
out
pop
jecxz
out
pop
movl
jle
push
mov
jmp
xor
and
pop
aaa
inc
loop
in
dec
push
and
loop
sub
dec
cli
das
loop
pop
xor
or
cmp
jns
dec
xchg
pop
xor
pop
ja
stos
insl
xor
push
jns
rcll
add
pop
in
xchg
loope
push
jg
aas
bound
lcall
push
mov
outsb
mov
loop
mov
pop
xor
cmpb
mov
sub
pop
mov
jo
jns
dec
add
xchg
lods
testl
adc
sub
cmp
pop
pop
in
gs
sbb
adc
dec
jnp
shl
decb
imul
push
cmpb
jb
xor
int3
es
mov
cmp
clc
sbb
lret
xor
out
push
dec
mov
pop
insl
jge
mov
adc
or
inc
add
xor
std
push
int3
jmp
out
jmp
and
pop
xor
arpl
std
orb
leave
sarl
adc
xor
les
daa
jb
pop
mov
lret
int3
test
push
adc
sub
mov
and
mov
movb
mov
into
mov
jb
sbb
imul
ficomps
addr16
loope
mov
addl
iret
ja
or
or
pop
mov
outsl
sbb
cmp
xor
mov
mov
loop
into
mov
ljmp
scas
adc
lret
rcl
cmp
adc
clc
jl
repz
mov
jmp
bound
xor
sbb
addr16
fwait
sub
call
or
push
int3
adc
or
jge
pop
xchg
inc
movsb
les
mov
cwtl
add
subl
in
inc
mov
add
outsl
lea
jmp
inc
jmp
pop
cld
cs
out
sahf
sub
inc
ret
jnp
sbb
lds
fildll
dec
das
les
cltd
les
mov
cmp
pop
cltd
adc
daa
pop
jmp
pop
pop
pop
mov
fcomip
dec
sbb
or
cltd
jne
fs
call
shll
jne
push
dec
das
mov
mov
inc
insl
stos
repnz
test
pop
xlat
mov
cmc
fsubs
frstor
xor
into
mov
inc
jnp
mov
hlt
int
jmp
arpl
in
add
jmp
dec
mull
push
insl
scas
das
andl
jb
mov
sbb
loopne
ljmp
pop
enter
stc
sub
dec
mov
mov
fldenv
leave
insb
bnd
and
js
or
lock
cmp
aam
push
cmpsb
addr16
stos
mov
jle
orb
mov
add
mov
inc
pusha
ja
jge
outsb
push
call
push
mov
push
jnp,pn
repz
cmp
es
stc
int3
aaa
dec
enter
jg
dec
pop
hlt
ret
push
lock
andb
inc
xor
clc
xor
push
cmp
sub
subb
icebp
data16
in
ds
fwait
mov
xchg
jp
mov
es
cmpsb
and
push
scas
jmp
test
cmp
mov
test
mov
cmp
jmp
push
sbb
test
test
mov
jo
pop
iret
hlt
and
popa
pop
add
pop
movl
subb
lcall
aam
push
add
cs
mov
shlb
lock
xchg
xor
xchg
sbb
fcompl
xor
in
sbb
rcrl
stc
pop
jmp
dec
fs
int
xor
jp
mov
ja
hlt
dec
outsb
ror
push
popa
push
mov
test
lods
loop
mov
add
add
data16
dec
in
sub
divl
inc
sub
repz
jbe
add
xchg
in
mov
push
mov
and
sub
xor
dec
pop
lods
mov
cmp
cli
fnstenv
inc
push
cmpl
xor
popa
fwait
popf
jp
push
fldt
pushf
xchg
sub
pop
jl
push
call
sbb
adc
and
int
orb
lret
stos
push
cld
into
and
inc
sbb
dec
addb
pop
sub
imul
jp
xchg
cmp
ljmp
inc
lods
and
pop
loopne
inc
leave
or
fmull
adc
cmpsl
sbb
and
arpl
std
sbb
mov
les
adc
sbb
test
xor
hlt
cmpsb
pop
pop
mov
xchg
dec
rcrl
mov
shl
inc
pop
xor
arpl
inc
inc
or
xchg
ret
xchg
or
mov
lret
mov
dec
movsb
mov
bound
leave
and
pop
pop
dec
xlat
or
sbb
cli
aas
addr16
xchg
xlat
dec
fwait
pop
ss
and
xchg
sbb
lods
mov
pop
push
cmp
mov
adc
mov
add
mov
or
lcall
loopne
cmp
mov
mov
jnp
sti
jns
xchg
into
jmp
aaa
add
add
mov
out
shll
pop
add
bound
pop
mov
fwait
lods
or
fs
xor
inc
repnz
fwait
test
sub
out
pop
push
pop
xchg
insb
cli
mov
xchg
pop
mov
push
mov
jmp
lcall
lods
cltd
insb
rorb
sbb
dec
mov
push
fidivl
push
push
fwait
add
jp
and
and
cmc
hlt
insl
out
and
and
mov
jmp
arpl
pushf
pop
test
repnz
in
xchg
push
mov
adc
rcl
imul
jb
mov
mov
adc
add
out
aaa
or
adc
je
xor
sbb
dec
push
fstp
add
fisttpl
jne
data16
insl
and
int3
enter
cmc
push
xor
or
in
cltd
imul
aaa
cmpsl
jmp
movsb
sub
dec
adc
or
or
pop
jbe
iret
xor
add
frstor
ficoms
jae
xchg
iret
sub
and
push
mov
and
fwait
and
faddl
in
sbb
xor
lods
addr16
out
push
rcr
or
push
add
adc
cmpsl
scas
iret
shlb
add
cmp
test
loope
sbb
mov
nop
mov
orb
int
and
aad
call
ljmp
dec
xchg
fsts
popl
les
aad
je
fbld
push
xor
dec
mov
jae
daa
add
cwtl
jb
pop
ret
out
sbb
cmp
mov
out
shlb
pop
fwait
xchg
leave
mov
inc
dec
push
lods
jno
push
and
dec
clc
xchg
sub
nop
adc
xchg
leave
xor
inc
insb
fwait
adc
jno
add
sub
pop
pop
sub
ljmp
movsb
jmp
sbb
inc
adcb
mov
mov
lds
adc
mov
sub
jge
lods
push
aam
mov
sarl
adcb
mov
stc
dec
dec
sub
bound
xchg
nop
cmp
movsl
mov
ja
dec
add
jmp
arpl
test
testb
into
sbb
call
or
stos
test
sbb
sub
fstpl
addr16
imul
loopne
bts
sub
mov
xor
cld
movsl
cld
cltd
pop
adc
imul
jmp
shrl
cmpsl
jmp
jae
push
lcall
inc
frstor
out
fcmovnb
icebp
cld
jp
iret
test
xchg
mov
movsl
sub
lods
sbb
mov
fs
pop
icebp
dec
sbb
lods
leave
leave
out
adc
out
nop
stc
mov
fwait
mov
divl
sub
xchg
push
insl
adc
xor
mov
clc
shlb
mov
sub
xchg
inc
movsb
lock
add
xor
inc
inc
fmuls
dec
outsl
jl
pop
in
sarb
stc
mov
hlt
ret
inc
mov
shl
faddl
popa
ret
push
fistl
enter
dec
insb
add
mov
pushf
pop
pop
pop
aaa
mov
pop
or
enter
xchg
inc
sbb
fimuls
push
inc
out
inc
pop
leave
push
xor
rcrl
into
ja
mov
in
pop
pop
mov
fwait
aam
cmpl
data16
clc
lea
andps
xchg
aaa
push
cltd
add
pop
repz
mul
cld
repnz
pop
mov
mov
dec
pop
mov
loope
outsb
and
adc
mov
lea
mov
add
bound
fisttps
lods
aam
mov
insl
dec
xchg
adcb
push
test
stc
or
test
shlb
shrl
pop
push
lret
int3
push
xchg
push
inc
push
xchg
out
cld
dec
mov
mov
adc
adc
movsl
in
pop
pusha
pop
dec
xchg
and
and
dec
sarl
or
lock
xchg
loope
icebp
mov
cmp
aaa
lcall
or
cmpsb
push
cmp
loop
das
aam
pop
cli
lret
dec
push
aam
popf
lcall
ret
xchg
jnp
jae
mov
je
and
mov
sub
xor
int
popl
aam
jg
iret
dec
dec
lds
or
sub
sub
ja
andb
cmp
dec
data16
sti
fimull
aam
adc
loopne
roll
dec
popa
fmul
xor
fsubs
popl
pushf
pop
fcoms
and
lds
jecxz
test
sub
scas
ss
fbstp
sbb
stos
sub
stos
hlt
mov
popf
ja
es
jb
icebp
rcl
push
inc
sbb
fisttps
push
push
repnz
ror
pop
mov
in
int
xor
and
int3
lcall
in
mov
out
jmp
mov
push
in
adc
int
stos
ret
loopne
cmp
aaa
into
jecxz
arpl
mov
sub
push
jno
sbb
pop
pop
jne
or
iret
mov
bound
cltd
mov
cmp
mov
sti
imul
add
fidivl
hlt
push
mov
mov
shrb
pop
insl
aam
stc
xor
add
shl
adc
push
out
inc
scas
push
stos
out
mov
lret
int
dec
push
sbb
ret
dec
lret
jb
jmp
and
xchg
jmp
inc
add
iret
pop
movsb
ss
pop
pop
call
imul
in
inc
mov
mov
pop
mov
pop
jl
nop
rcrb
mov
and
xchg
inc
lock
pushf
bound
jp
push
ret
mov
jp
inc
pop
sub
sbb
mov
xchg
call
iret
mov
pop
jp
ror
push
int3
jmp
stos
repnz
cmp
jbe
pop
cs
gs
push
arpl
xor
xchg
sub
push
pop
cmpl
dec
out
adc
mov
sub
decl
pop
xor
cmp
mov
je
jne
orb
sbbl
mov
lock
xchg
ja
scas
int3
je
lea
sahf
jbe
dec
push
jle
pop
aam
fisubrl
cld
mov
cmp
sbb
pop
mov
ficompl
add
test
mov
dec
aad
jns
scas
repz
test
sbb
xlat
inc
testl
cmovbe
fisttpl
pop
jmp
sarl
pop
sti
xor
sub
mov
mov
int3
inc
pop
flds
sub
cmp
cmp
inc
dec
sbb
in
cmc
xchg
imul
or
lea
xchg
inc
data16
insl
sbb
subl
add
movsb
std
add
mov
mov
outsb
insb
push
mov
ja
inc
cmp
or
pop
popf
adc
inc
in
xor
mov
xor
iret
jns
popf
imul
in
lds
ss
aaa
sahf
jne
sub
adc
iret
mov
xchg
and
mov
mov
js
jne
fwait
sub
adc
insl
arpl
mov
add
jbe
inc
in
lea
loopne
mov
adc
imul
sbb
in
ss
xchg
sub
mov
jmp
sti
xchg
sbb
insl
adc
nop
xchg
mov
cltd
fldenv
fwait
sbb
aaa
enter
aas
mov
jl
test
inc
mov
mov
inc
fisttps
pop
cmpsl
cmp
xor
ficompl
push
negl
xor
xchg
cs
call
or
enter
mov
jp
dec
imul
mov
pop
dec
pop
inc
inc
pop
xchg
push
sbb
ret
mov
push
shlb
and
insb
js
loope
adc
inc
jae
lahf
lea
mov
lret
shll
arpl
out
mov
sahf
aad
in
and
dec
std
dec
or
or
mov
pushf
or
ficoml
mov
sbb
scas
cmpb
push
sub
push
outsb
aas
push
popa
call
popa
xchg
std
or
sbb
sti
popf
or
xchg
loop
lahf
sahf
pop
or
mov
or
cmp
pop
shlb
xor
in
iret
or
cmp
fcmove
push
loope,pn
out
or
xor
rcll
imul
and
loop
popa
outsl
mov
inc
mov
fidivrl
jge
pop
xchg
sub
shll
add
push
mov
jg
stos
xlat
inc
xchg
mov
xor
lcall
in
or
adc
add
in
cmp
cmp
adc
clc
mov
addr16
pop
adc
call
fldt
pop
xor
pop
aad
mov
xor
enter
cld
jae
pop
xchg
jmp
push
or
loopne
mov
cs
lock
push
push
insb
mov
inc
xchg
lock
stos
ret
fldl
cs
mov
push
add
xor
sbb
add
sarb
cmpsb
xor
push
jle
fs
pop
push
andl
sub
mov
sbb
jns
dec
inc
repnz
cmp
mov
push
mov
daa
test
jo
flds
and
and
inc
cltd
into
jmp
jmp
xchg
or
mov
lret
xor
sub
gs
daa
xor
fildl
ret
into
sbb
out
mov
xor
push
inc
xor
add
pop
test
and
lods
xchg
sahf
xorl
test
jae
push
pop
out
movsl
ret
shrl
cmp
adc
lods
jge
imul
or
fcmovnu
movsl
andl
mov
gs
ret
jnp
pop
jns
xchg
mov
xchg
inc
inc
stc
jb
lahf
jno
mov
sbb
pop
lret
push
and
xor
insl
lock
adc
shrb
fidivrs
repz
lret
mov
fimuls
mov
jecxz
xor
or
xchg
xor
pop
xor
in
mov
nopl
mov
mov
xchg
fisubl
in
fisubrs
insl
add
sbbb
ss
icebp
jae
imul
pop
cmp
sbb
lods
cs
pushf
into
push
decb
mul
xchg
add
and
sbb
jo
imul
fmul
jg
inc
push
fdivrs
aaa
in
stos
repz
pop
outsb
pop
pusha
std
mov
faddl
adcb
push
or
and
notl
stos
sarl
fimull
int3
je
add
insb
test
jecxz
lods
mov
aaa
in
outsl
rclb
sbb
movsl
cmp
mov
cmpsb
mov
scas
mov
mov
add
sbb
xlat
dec
pop
jmp
das
jecxz
test
lea
fwait
in
addr16
lock
divl
push
mov
lods
cmp
jae
inc
imul
and
add
and
int3
imul
sti
mov
mov
cwtl
and
bound
sti
adc
or
cmpsb
dec
bound
out
pop
fstpt
fwait
sbb
sbb
and
sbb
add
add
sub
xchg
sub
adc
mov
mov
pop
jmp
inc
and
movsl
mov
hlt
xchg
xchg
divl
or
jo
das
cmpsb
xor
or
jl
ret
sub
or
aas
sbb
sub
or
ljmp
fwait
pusha
ficompl
sbb
dec
dec
ja
fisubrl
cmc
mov
mov
pop
out
lahf
xor
mov
test
pop
jge
dec
cmp
pop
loope
jg
dec
sbb
aaa
aad
dec
lahf
fs
xchg
movsl
test
push
xchg
ljmp
adcb
and
and
loope
mov
mov
adc
cmc
push
inc
clc
jne
les
cltd
dec
ljmp
pop
and
cmp
and
sbb
les
xchg
lock
iret
nop
mov
jmp
nop
add
mov
scas
stc
mov
xchg
or
in
int3
insb
jbe
mov
repnz
pop
mov
cmpsb
in
repnz
aas
or
adcl
out
jb
orl
lret
scas
stos
loopne
aad
loop
jo
jg
xchg
bound
jle
push
imull
mov
cmc
data16
int
and
enter
in
movsl
add
and
mov
dec
cmpsb
fidivs
xorl
addb
add
leave
cmp
mov
xchg
cmp
xchg
cmpsl
jo
sub
or
shrb
inc
ss
ss
or
push
test
mov
in
jbe
cwtl
insb
shrl
sahf
push
fdivrl
sahf
dec
enter
lcall
mov
out
movsl
imul
outsb
test
push
scas
and
loopne
dec
xlat
and
inc
loope
loopne
shlb
icebp
xor
pop
nop
pop
add
jl
inc
int3
pop
int3
lock
clc
xor
pop
push
push
lock
mov
imul
pop
add
lret
lcall
jo
push
xchg
mov
sbb
pop
inc
pushf
xor
push
push
jae
sub
sub
mov
mov
das
loopne
rorb
loopne
rcl
pop
xor
lds
fidivl
loope
sbb
inc
cmp
push
mov
adc
cmpsb
pop
push
cld
fwait
subb
pushf
dec
push
movb
adc
sbb
mov
and
rcl
jae
lret
dec
sbb
fucom
test
or
adc
jmp
adc
cli
pop
mov
jl
sbb
or
int
mov
xor
cs
xor
int
mov
xchg
adc
jmp
lahf
pop
xchg
popa
xor
push
mov
jp
xor
mov
mov
in
xchg
imul
mov
pop
add
movsl
scas
int
inc
mov
push
ret
and
sti
in
mov
push
cmp
jp
ja
gs
jg
popa
cmp
outsl
lcall
cmp
jo
mov
aas
leave
xor
push
mov
frstor
dec
or
adc
mov
ss
push
mov
call
repnz
inc
jg
mov
ds
or
mov
adc
shrl
aad
jnp
int3
enter
mov
sub
inc
pop
aas
lret
mov
push
push
push
lds
je
ds
inc
jne
cmp
sbb
mov
pop
pop
push
jno
mov
adc
stos
hlt
addr16
das
pusha
out
mov
scas
mov
dec
pop
xchg
fs
add
and
in
and
or
popl
jg
cmpsl
loop
rcr
stos
jle
cmp
jo
stos
icebp
enter
xchg
andl
mov
xchg
gs
out
inc
int3
lret
cwtl
push
xor
fbld
mov
jmp
fstp
daa
stc
pop
pop
pusha
in
jle
ret
pop
movsl
iret
cmp
cmpsb
sarl
push
mov
cmpsb
into
xchg
lods
inc
inc
cmp
push
and
enter
cmp
and
xchg
pop
sbb
lret
fisttps
adc
mov
dec
inc
sbb
ljmp
inc
cmp
xchg
cltd
pop
sbb
pop
add
xchg
jns
dec
xlat
push
insl
testb
push
cld
shll
xchg
adc
and
lods
or
fistps
cli
stos
orl
in
cwtl
cmpsb
dec
mov
xchg
lods
fstps
adc
sub
dec
in
aas
xor
loope
or
fstps
lock
mov
lock
mov
push
jge
lahf
add
gs
movsb
fnstsw
mov
xor
bound
push
mov
nop
outsl
adc
cmp
push
xchg
scas
outsb
push
mov
jno
iret
out
adc
arpl
test
mov
xchg
lock
cmp
fldcw
jne,pt
pop
scas
sub
pusha
loopne
add
mov
jo
and
adc
push
lock
inc
in
pop
sub
aaa
push
fcmovne
fstps
mov
xchg
adc
mov
inc
xchg
cld
xchg
ds
out
adc
xor
jg
sub
pusha
sbb
ret
sbb
ja
ds
insb
mov
mov
negl
add
loope
out
fldt
cmp
stos
sub
fcmovnu
sub
inc
out
std
mov
pop
xor
mov
lret
pop
scas
call
out
movsl
lcall
imul
mulb
fnstcw
sbb
scas
test
mov
sub
xchg
or
scas
jne
mov
inc
mov
push
test
nop
lret
loopne
leave
dec
les
push
add
stc
sub
lods
sbb
sub
fildl
mov
int3
push
and
jns
mov
inc
push
lea
xchg
lcall
shlb
sub
test
jg
cmpsb
xchg
mov
jp
imul
jo
add
lret
sub
xchg
pop
fimuls
xor
icebp
mov
xor
and
cmp
mov
rol
pop
and
out
dec
movb
nop
repnz
push
sub
mov
cltd
ljmp
test
je
shll
xlat
pop
scas
and
out
inc
sbb
cmc
shr
push
xor
pop
loopne
inc
push
sub
psubusw
add
in
ds
pushl
sub
movsl
dec
into
and
bound
inc
xchg
daa
xchg
xor
mov
sbb
cmpsb
aaa
jbe
xchg
push
popf
jnp
mov
and
rcrl
ret
push
xor
insb
jp
add
mov
or
rcll
add
std
lea
cmc
or
movb
and
add
inc
shrl
bound
imul
xchg
std
shll
shrb
int
dec
sahf
sahf
test
gs
shlb
or
sbb
lcall
mov
xchg
divb
dec
clc
mov
sub
je
and
test
jp
or
in
movsl
pusha
js
sub
push
shlb
roll
andb
je
sub
cmc
jg
out
mov
sub
dec
jno
pop
fwait
xorb
fmul
cmp
mov
pop
push
shlb
into
and
leave
stos
fwait
test
rcr
inc
sub
test
and
sti
sbb
pop
std
call
repz
sub
rcrb
jl
test
loop
in
dec
ja
cmpl
cli
sti
jns
outsb
lds
lret
shl
xor
in
dec
xchg
outsb
loopne
or
jb
fninit
or
adc
mov
ret
push
or
lret
scas
ja
lret
popa
mov
inc
pushf
outsl
cmp
sti
push
outsl
ds
jge
push
fcoml
addb
dec
scas
adc
mov
sbb
xchg
stos
xchg
mov
cmp
arpl
scas
cmp
ret
nop
push
mov
dec
pop
pop
loop
int
stc
add
mov
xchg
movsl
or
xchg
add
iret
daa
cli
ret
daa
xor
pop
cmp
lock
sti
sub
dec
jo
lods
cmp
pop
pop
mov
aaa
or
dec
roll
dec
sbb
leave
das
hlt
daa
and
push
and
ljmp
cmc
out
fcoml
xchg
mov
xor
lds
dec
inc
xor
mov
inc
inc
adc
mov
insl
cld
int3
and
xchg
dec
xchg
xlat
enter
mov
xchg
lahf
cs
push
mov
into
ja
xor
mov
repz
lret
ljmp
jecxz
shlb
stos
inc
fmul
in
in
shlb
mov
or
out
inc
cmpsl
aad
jmp
mov
int
das
xchg
inc
fwait
lods
push
and
push
repnz
or
sti
adc
dec
scas
in
inc
dec
cli
and
outsl
loope
cmp
cmc
cmp
je
mov
js
sub
adc
inc
jbe
lcall
xchg
int
push
fadds
cli
insl
test
xchg
test
add
mov
shll
punpckhbw
sbbl
sub
loope
mov
jns
pop
test
add
sbb
lock
or
lods
push
movsl
jnp
in
call
pop
cmp
add
push
pop
lea
test
iret
jp,pt
mov
jbe
enter
dec
pop
dec
fwait
inc
aad
cmpsl
aas
xor
cli
push
lcall
mov
mov
sub
xor
cmpsb
xchg
xor
call
or
movsl
mov
add
dec
mov
and
loopne
push
mov
scas
xor
cmc
jbe
and
cli
das
ljmp
fwait
push
jp
sbb
inc
dec
or
in
ja
mov
push
dec
ror
mov
sub
xchg
xor
and
rclb
jne
dec
sbb
not
repnz
int
test
icebp
mov
mov
js
sub
cwtl
xchg
iret
out
pop
insb
mov
ljmp
jl
xchg
idiv
pop
cmp
outsb
xchg
cs
outsb
sub
jo
in
adc
inc
inc
sbb
xchg
insl
jmp
stos
adc
mov
push
adc
push
push
push
xchg
push
dec
inc
mov
sbb
outsb
dec
daa
dec
out
xor
nop
jmp
es
jb
fists
and
rcr
mov
aas
mov
xor
aaa
in
test
lahf
ffree
cmp
ret
cmpsl
mov
les
xchg
je
mov
out
test
sbb
mov
jb
loop
daa
cmc
aas
test
int3
dec
push
cmp
popf
fneni(8087
stos
sbb
lods
cmp
hlt
adc
nop
lcall
ret
mov
push
inc
test
loope
jo
sti
loopne
push
pop
mov
dec
xor
in
lret
sub
adc
imul
insb
adc
and
xor
lcall
fsubr
sbb
xchg
lods
add
roll
xchg
cs
cmp
mov
xchg
ret
pop
pop
imull
fwait
or
inc
outsl
das
adc
incl
jecxz
scas
adc
inc
xchg
xor
xor
cltd
les
subb
lret
push
ds
dec
mov
ja
jl
jle
xor
and
popf
inc
xchg
cs
lret
cli
insl
in
or
push
test
inc
sahf
insb
ret
shll
rorl
subl
mov
lds
push
xor
divl
mov
ret
pop
cmp
inc
add
fistps
comiss
adc
sub
fldcw
nop
cmc
jbe
ds
push
dec
sbb
lock
jne
cmc
sub
xlat
ret
xlat
inc
lods
jmp
in
cmp
outsb
push
push
push
pushf
jbe
and
lods
cwtl
and
xchg
xor
daa
xchg
or
test
jo
rorl
sbb
fbstp
sbb
loope
adc
cmp
rcr
shrl
adc
in
dec
mov
sbb
arpl
sub
incb
dec
ret
adc
mov
popa
cmpsl
jmp
sub
push
shl
mov
pop
xlat
out
ss
popa
jae
in
sbb
into
loope
insb
adc
mov
pop
int
and
sbb
je
das
push
pop
in
shrb
outsb
sub
jp
jns
pop
gs
repz
minps
hlt
pusha
je
xor
popf
mov
fcoms
fadds
sub
push
pop
and
sbbl
xor
xor
jg
in
fwait
adc
xor
lea
imul
lahf
jbe,pt
jo
xchg
cs
push
fmul
push
in
jb
pop
decl
xchg
add
push
jbe
add
pop
popf
pop
bound
paddd
cmp
sub
pop
das
ror
mov
cmpsl
sub
frstpm(287
es
lahf
pop
outsl
jb
cmp
or
dec
arpl
ret
fidivrl
push
iret
dec
lret
sub
add
das
add
or
fs
imul
cwtl
or
fwait
push
mov
jge
jno
add
and
mov
js
mov
xchg
inc
push
cmp
jb
pop
cli
or
scas
cmp
sti
rcr
pop
pushf
dec
stos
mov
into
mov
rorl
out
out
cmc
shlb
xchg
loope
fs
jns
jne
imul
lret
dec
xor
pop
movsb
cld
into
call
shlb
loope
popa
neg
sub
cmp
rcr
pop
cmp
sbb
mov
cld
popf
sbb
adc
fadds
rcrl
imul
jge
fwait
jge
popa
out
cmp
jno
sub
pusha
mov
ss
dec
pop
in
push
inc
lret
stc
mov
or
xchg
sbb
and
clc
in
jl
jge
adcb
out
movsl
mov
jb
adc
adc
jns
xchg
pop
dec
adc
inc
jle
mov
mov
dec
adc
fdiv
pop
scas
fists
jl
cmp
hlt
fcoms
andb
test
push
sub
test
or
adc
repnz
sub
sti
jp
xchg
aad
cs
inc
test
dec
push
push
xor
mov
cmp
ret
lahf
mov
push
push
jo
jge
or
adc
or
lret
sub
mov
mov
das
add
rclb
push
orb
cmp
mov
hlt
add
push
push
add
jl
js
stc
lock
mov
sbb
ja
mov
dec
in
mov
dec
leave
imul
xchg
cltd
ds
or
test
test
cmpsl
in
sbb
fwait
and
inc
xchg
gs
add
rcrl
jb
inc
push
pop
mov
call
aam
scas
insl
dec
adc
pop
leave
fdivr
adc
ret
ja
mov
cmp
sub
pop
enter
repnz
jl
mov
push
imul
in
pop
into
mov
cwtl
inc
push
adc
push
int3
filds
add
push
mov
loop
pop
je
ljmp
or
imul
add
adc
jb
mov
xchg
imul
fldenv
pop
and
es
push
pop
cwtl
lock
pop
fistl
loop
cmpl
out
fldt
pop
movsb
add
repnz
jns
push
adc
push
cltd
inc
fisttps
jns
sub
sub
pop
and
adc
leave
pop
xchg
lods
sbb
mov
leave
shrb
loop
mov
nop
sub
cmp
xor
and
mov
mov
jb
mov
cmp
fimuls
repnz
pop
lahf
int
xor
insb
jne
lahf
push
xchg
pop
add
jnp
push
jmp
pop
bound
adc
aad
cmp
jg
xchg
inc
mov
mov
jb
pop
mov
push
ja
fwait
xchg
mov
jp
insb
adc
xor
pop
adc
fbstp
xlat
iret
mov
imul
ljmp
pop
arpl
ret
data16
out
lods
jns
dec
or
add
mov
fists
inc
rclb
repnz
mov
dec
jecxz
sbb
int
fldenv
insl
dec
out
and
ljmp
or
ja
jge
pop
mov
rcll
mov
jno
test
push
mov
cli
into
divb
hlt
imul
or
fadds
cwtl
cmp
leave
hlt
test
xor
int3
imul
mov
pop
test
sub
mov
xor
arpl
pop
adc
mov
xor
xlat
dec
xchg
cmp
outsl
lods
rcrl
adc
imulb
cs
test
xchg
out
lret
add
repnz
dec
inc
mov
jecxz
mov
mov
aaa
cmp
rolb
or
push
jle
xchg
mov
movsl
enter
fwait
call
mov
dec
sub
and
xor
dec
sbb
repz
movsl
pop
loopne
add
jo
pop
jg
jb
movsl
xchg
sub
adc
sub
shll
jb
mov
xchg
setge
mov
jge
push
repnz
xlat
push
mov
das
add
popa
push
mov
daa
enter
xchg
mov
mov
push
adc
repnz
roll
push
rcll
dec
les
ret
pop
lods
cld
jmp
call
sahf
dec
loop
xor
scas
mov
test
inc
lds
pop
fwait
mov
or
inc
scas
ss
inc
mov
push
adc
add
xor
mov
insl
divb
je
out
mov
faddl
pop
sbb
faddl
add
inc
shr
cmp
std
adc
mov
mov
pmaxub
xor
or
in
sahf
push
add
adc
xor
movsb
or
pop
cmpsb
loope
sti
dec
mov
iret
sbb
dec
mov
add
mov
cmp
sti
xor
push
push
pop
mov
int
jnp
fbld
adc
inc
into
fxch
stos
cmp
sbb
fdivrl
xor
mov
movsl
xchg
push
iret
jge
push
rorl
pop
repz
xchg
test
mov
mov
inc
and
inc
pushf
xor
sbb
jle
sbb
test
add
aam
dec
sub
pop
leave
jle
cmc
out
movsl
dec
jg
xor
repz
in
inc
xor
in
fdivl
shll
stos
call
std
add
test
je
mov
lods
xchg
imul
dec
push
sub
jecxz
lahf
dec
add
jne
xchg
sub
stc
std
cli
mov
fs
push
ret
pop
aad
push
dec
lods
lods
cmp
and
cmp
pop
popf
outsb
out
shrb
jmp
add
fsubs
and
pop
xchg
mov
cli
xchg
sbb
icebp
popa
daa
stos
test
dec
stos
sub
out
push
sub
mov
dec
pop
cmc
and
dec
sub
mov
xchg
fwait
mov
std
roll
dec
cmpsb
mov
sbb
xor
sub
in
scas
addb
cmp
daa
mov
and
sarb
xchg
jle
andl
ret
daa
in
out
mov
shll
inc
sbb
int3
dec
or
mov
or
out
andb
fldt
js
fisubrs
xchg
ja
add
sub
call
adc
movsb
inc
sub
fcoms
pop
sbb
sbb
sbb
inc
arpl
add
sub
sbb
mov
gs
inc
roll
xor
stos
mov
repnz
test
hlt
clc
pop
out
add
test
jne
dec
cmp
xor
dec
inc
push
sbb
push
xchg
mov
loop
or
in
movsl
mov
push
cli
adc
xchg
shll
les
add
and
lods
mov
or
cwtl
lods
fisttpl
pop
mov
fildl
das
or
adc
sahf
daa
cltd
adc
stc
and
pusha
push
lods
mov
xor
cmc
jb
fcmovnbe
fnstsw
mov
cmpsb
sbb
jnp
nop
add
sti
pop
mov
adcl
out
jmp
fstpt
mov
divb
push
push
movsb
lods
out
aas
sbb
fwait
or
inc
sbb
test
add
frstor
mov
out
add
bound
movsb
and
cmp
mov
adc
xor
stos
mov
xor
pushl
jmp
stos
push
sub
lods
dec
stos
xchg
mov
inc
ss
sbbl
in
lret
imul
enter
xor
mov
ljmp
xor
mov
cwtl
mov
pop
sbb
mov
or
js
pushf
push
inc
ret
mov
push
add
mov
mov
and
dec
cmpsb
out
cmp
and
ljmp
scas
aam
push
fimuls
jae
rcrb
mov
addr16
mov
cmpsb
roll
getsec
gs
ficoml
loope
pop
pop
jnp
lahf
das
xor
shrb
dec
pushf
sub
loopne
mov
stos
adcl
movsb
xchg
xchg
imul
lahf
sbb
jno
div
cmp
jmp
xchg
pop
sbb
fs
and
jae
repnz
jae
dec
pop
adc
and
pop
xchg
stos
cltd
cld
or
cltd
test
ret
mov
scas
push
mov
or
pop
dec
mov
cmp
pop
push
jae
das
xchg
movsl
lods
mov
int
fidivrs
lahf
fisubs
or
adc
fcmovbe
insl
ds
movsl
sbb
add
stos
ffree
cmp
pop
movsb
mov
mov
and
shll
out
lods
xchg
idiv
sub
push
or
pop
jne
movsb
sub
sbb
call
es
fsts
outsl
dec
dec
movsl
mov
add
pop
jns
mov
xchg
int3
loope
dec
add
jecxz
lahf
test
repnz
pushf
ret
jmp
mov
not
stc
outsl
in
mov
xor
and
mov
inc
cli
dec
imul
jle
inc
aas
shlb
sarl
das
xor
test
or
stos
inc
std
lret
out
or
xor
xchg
scas
mov
or
and
aad
jecxz
sbb
xchg
fwait
mov
pop
stos
out
loop
dec
shrb
cmp
in
and
data16
mov
dec
mov
xchg
mov
mov
cmp
dec
addr16
ret
and
insl
add
jmp
mov
sub
sbb
jmp
je
mov
sub
mov
push
hlt
loop
xor
xor
negb
inc
enter
ss
jecxz
fdiv
and
test
gs
add
and
icebp
xlat
jno
push
inc
lret
sbb
loope
jmp
out
test
push
movsl
xor
xchg
pop
dec
cmp
filds
popa
lmsw
stos
pop
out
jno
das
ds
data16
pop
movsb
mov
lahf
int3
push
movsl
adc
std
lcall
jnp
rolb
cmp
cmp
int3
mov
xchg
mov
divl
icebp
xchg
fnstenv
arpl
insl
xchg
push
add
aad
imul
xor
and
sbb
mov
jo
xor
fisubl
xchg
adc
movsb
movb
push
addl
pop
lcall
inc
pop
jno
cmp
cmp
ds
pop
icebp
pushf
loope
fstl
pusha
scas
shll
pop
sub
xor
mov
push
lds
insb
loopne
les
sub
push
dec
jle
mov
push
jmp
pusha
pop
mov
mov
cwtl
insl
into
mov
mov
push
ds
inc
jns
mov
cmp
movsl
roll
mov
inc
mov
rorb
xor
push
movsl
mov
push
aas
jnp
mov
inc
xor
gs
rol
ljmp
lahf
outsb
daa
and
iret
or
sub
inc
call
ficoms
mov
enter
pop
dec
movsl
scas
popa
leave
pop
sbb
jns
lahf
cmp
pop
push
rep
jno
movsb
mov
sahf
out
or
es
div
arpl
xchg
daa
fdecstp
dec
pushf
test
mov
filds
mov
pop
rolb
cli
ljmp
insl
push
jmp
or
addl
pop
lods
sbb
push
sbb
cmp
lret
or
mov
mov
adc
int
dec
inc
mov
pop
dec
outsl
inc
insl
and
mov
or
cmp
pop
push
or
mov
push
enter
pusha
jo
je
imul
pavgb
sub
sti
lcall
stc
add
fptan
faddp
jmp
rorl
fldcw
mov
cld
jne
out
scas
callw
cs
dec
push
cs
jecxz
xchg
mov
jne
out
adc
jl
xchg
sub
dec
cli
cmp
mov
xchg
xlat
aad
movl
adc
ds
ljmp
adc
jae
out
push
movsl
subb
and
pop
or
dec
sbb
ja
push
out
js
push
hlt
mov
mov
mov
lods
mov
mov
cwtl
xor
shlb
arpl
cli
sub
jg
xlat
dec
and
jnp
adc
in
or
pop
aaa
sub
jno
insl
fstpl
push
dec
insb
jecxz
imul
int
jnp
imul
les
repz
cltd
mov
jno
jl
mov
in
loopne
push
adc
mov
ret
jmp
outsl
bound
loop
pop
dec
push
xchg
and
cmp
xchg
push
mov
jo
or
ds
add
out
sub
lret
push
xor
jp
cmp
test
jns
pop
fistl
or
mov
pop
fcmovu
fdivrl
imul
xorl
or
mov
lret
cmp
mov
push
pop
jne
jmp
jo
jmp
andl
and
negb
cmp
cmc
shll
inc
lods
data16
jp
pop
jnp
sbb
insl
push
cmc
push
adc
mov
nop
hlt
push
and
out
mov
and
ficompl
iret
es
lahf
adc
hlt
test
repnz
jnp
jbe
mov
pushf
fs
add
push
das
loope
pop
adc
jbe
mov
ret
movsb
mov
dec
lret
jge
scas
mov
fdivrs
dec
js
xchg
jecxz
leave
xchg
outsb
xchg
nop
stos
imul
jo
scas
rorl
xchg
push
stc
pop
mov
out
push
aam
insl
aam
push
call
mov
in
pop
in
hlt
push
add
and
sub
andl
out
lea
dec
repnz
test
repz
mov
out
popf
rcl
jmp
pop
iret
jnp
push
scas
popa
popf
pop
jg
jle
outsl
dec
adc
push
fucomi
pop
sbb
and
testb
js
in
frndint
mov
icebp
xchg
in
popw
arpl
out
and
fwait
mov
xchg
sub
je
iret
lods
add
cmpsb
stos
movsl
call
xchg
bound
lock
sbb
out
sbb
xor
xchg
push
imul
ds
loop
add
sbb
xchg
std
xchg
loopne
cmp
cld
mov
or
stos
cmp
push
jge
jmp
lahf
inc
outsl
lds
cs
pusha
pop
sbb
and
lret
cltd
adc
cmpsl
outsb
popa
in
lahf
mov
jns
or
pop
pop
dec
push
and
adc
mov
ret
and
push
mov
stc
pop
subb
iret
in
mov
rcl
fmull
jge
sbb
mov
orb
in
aad
test
leave
mov
movsl
out
rcrb
aaa
sbb
fstp
addr16
cmp
cmpsb
pop
mov
bound
push
xchg
ret
cmpsl
dec
ss
lock
mov
xor
shlb
in
xor
dec
lods
aam
pop
test
scas
aaa
out
les
xlat
mov
jmp
xchg
fisttpll
icebp
int3
sub
dec
push
xor
dec
dec
sub
add
dec
sbb
adc
mov
loope
sub
xor
fstpl
cmp
sbb
mov
dec
mov
mov
xor
or
push
iret
filds
dec
sub
sbb
arpl
mov
push
add
clc
add
jp
aaa
loopne
in
in
mov
les
jecxz
inc
and
outsl
lods
repnz
mov
xchg
adc
cmpb
mov
jnp
dec
sbb
add
sbb
dec
int3
cli
pop
sub
inc
test
push
pop
mov
test
mov
adc
sbb
xor
mov
add
push
sub
xor
repnz
jbe
inc
jo
das
cld
nop
cmp
add
and
arpl
lret
cmpsl
pop
mov
cld
cmp
into
adc
ds
push
rorl
rcll
addl
adc
dec
or
lcall
lods
sbb
push
jnp
stos
int
sarl
mov
xchg
cmp
lds
jge
dec
pop
jns
dec
sbb
daa
out
xchg
add
pop
mov
sbb
cmpsb
xchg
cmp
fiaddl
xor
cwtl
push
in
lods
mov
push
adc
ret
and
pushf
ja
push
dec
push
enter
jge
jl
pop
xor
push
xchg
jmp
mov
outsb
les
sti
mov
cld
aaa
shr
sti
mov
cwtl
out
mov
stc
aam
jmp
sub
sub
xchg
int3
mov
ss
aad
or
js
jmp
xor
xor
daa
cmpsl
mov
and
push
aas
test
mov
scas
test
mov
cld
mov
insl
mov
xor
mov
jne
xor
rolb
jl
jbe
movsb
sbb
ret
dec
sarl
fisubl
stc
movsl
decl
arpl
or
in
and
clc
dec
and
cmp
int3
popf
popa
popf
push
enter
jb
icebp
arpl
mov
add
push
mov
sahf
xchg
nop
jne
in
insl
mov
int
mov
cwtl
adc
push
insb
pop
scas
pop
out
or
in
shlb
sub
mov
call
adc
and
cmp
sbb
inc
mov
fcmovnbe
adc
pop
cld
fwait
adc
sub
inc
movsb
inc
inc
jnp
sbb
repnz
adc
mov
xor
cmp
adc
lds
mov
xor
xchg
leave
loopne
cmp
scas
mov
or
das
fistl
pop
outsb
fstpt
out
dec
pop
push
jmp
mov
ficoms
pop
dec
xor
in
mov
mov
and
lret
push
or
jg
xlat
mov
hlt
xor
mov
push
jl
cli
lock
push
daa
and
test
repz
xchg
test
fwait
mov
adc
or
shll
cld
hlt
call
or
xor
sub
lds
daa
les
inc
adc
push
xor
add
push
xor
push
xor
pop
add
dec
test
and
and
in
push
shll
adc
xchg
jnp
sub
cli
pop
dec
pusha
imulw
jmp
xor
xor
clc
dec
aaa
test
pop
jnp
dec
push
int3
daa
xchg
jl
dec
cs
add
and
mov
fs
push
and
cmp
cmp
push
ss
cmp
adc
fnsave
and
dec
in
js
push
adc
sarb
loopne
mov
push
repnz
xchg
int
pop
mov
cmp
cmp
dec
repz
jnp
inc
xor
jge
pop
aas
cltd
popa
mov
xchg
mov
ds
scas
out
or
inc
nop
push
inc
daa
jmp
scas
pop
ja
sub
jecxz
imul
cmp
sub
pushf
mov
mov
arpl
xchg
push
jg
xchg
jae
push
push
rcrl
inc
repz
lret
xchg
mov
leave
dec
xchg
imul
inc
fmul
clc
ja
sbb
pop
pop
movsl
pop
mov
mov
hlt
mov
dec
shlb
ja
call
nop
pop
sbb
mov
nop
xor
xchg
lret
call
inc
pop
orb
jl
out
push
adc
mov
scas
in
jecxz
lcall
and
or
ret
dec
jle
call
loop
mov
sbb
inc
lahf
lret
jmp
rorl
sahf
insl
insl
movsb
test
lret
test
movsb
insl
lods
sub
pusha
inc
sahf
decl
std
mov
lea
add
mov
sbb
cmc
dec
sti
jp
pop
xor
in
stc
dec
push
dec
lcall
rorb
int
cs
cmp
rclb
negl
inc
lea
sub
mov
in
inc
loop
xchg
repnz
push
mov
insl
cmp
cmpsb
clc
cmp
arpl
cmp
aas
int
fadd
bound
sub
int
fdivrs
mov
popf
sub
repnz
pusha
sahf
mov
add
mov
stc
dec
xchg
xchg
cwtl
jl
mov
or
sti
popf
mov
out
ljmp
push
ds
jnp
jne
pop
movsl
dec
mov
popf
pop
pop
mov
sarb
out
fsubrl
inc
jns
lret
cltd
rorb
orl
or
sub
or
and
repnz
add
inc
cmp
cmp
dec
lret
in
ret
dec
adc
shll
stc
push
imul
out
movsl
mov
and
xor
push
sarl
out
jp
ret
imulb
div
hlt
sbb
pop
xchg
lods
cmpb
test
outsb
and
fcmovnbe
repnz
cltd
add
xor
lods
les
xor
adc
imul
sar
les
mov
out
xor
jb
sub
push
std
pushf
fcmovbe
xchg
aam
jp
icebp
dec
pop
cli
xor
rcr
mov
orb
idiv
lret
cmpb
dec
fnstsw
mov
inc
scas
push
dec
nop
test
pop
mov
xchg
icebp
xor
ret
or
cltd
add
cmp
pop
rcrb
mov
dec
shl
ss
jmp
fadd
aas
pop
mov
out
mov
je
in
mov
cmpsb
inc
inc
mov
inc
dec
xchg
pop
xchg
sbb
dec
dec
push
jge
test
push
fmul
mov
xchg
dec
sbb
push
call
mov
xchg
aad
adc
cmovg
push
sbb
mov
cmpsl
xchg
sahf
cltd
xor
rcrl
into
mov
stos
movsb
jg
cmp
dec
xchg
popf
dec
test
dec
hlt
jne
push
sub
iret
enter
lret
ret
push
dec
ffreep
in
ficoml
pop
add
je
xchg
ret
icebp
inc
and
data16
mov
xchg
loope
pop
into
push
adc
subl
dec
lods
inc
inc
test
sbb
jp
sti
inc
cmp
and
incb
mov
sub
fcomip
imul
or
stc
add
test
rcrb
inc
pop
adc
addb
testl
jmp
push
aas
push
jge
mov
hlt
out
loop
cmp
inc
push
pop
push
mov
cmp
xchg
add
cmc
jl
and
orl
in
xor
aam
jecxz
into
pop
jnp
out
insb
and
insb
stos
data16
clc
mov
jge
ds
mov
loope
insl
insb
outsl
and
add
push
mov
ret
xor
test
fidivrl
mov
cmpsl
pop
lea
insl
push
arpl
mov
dec
mov
inc
fcmovu
movsb
subb
movsl
xchg
jg
scas
lock
shl
xor
and
mov
mov
add
cld
adc
push
sbb
inc
mov
sub
arpl
and
add
xor
in
out
notl
fistpl
outsl
movsl
sbbb
mov
jae
mov
add
aam
jmp
out
mov
mov
sar
pop
ret
in
sar
push
mov
push
mov
dec
xchg
ret
insl
sbb
lods
or
filds
stc
dec
sbb
andl
cmp
sbb
insl
mov
pop
lret
sti
or
push
cmpb
fisttps
xor
pop
mov
mov
ss
or
into
xchg
mov
shll
push
outsb
scas
inc
icebp
sbbb
inc
mov
adc
sbb
inc
ljmp
add
xlat
jbe
scas
fwait
mov
dec
and
inc
xor
xchg
fs
inc
and
dec
xlat
dec
xchg
xor
pop
mov
push
jno
mov
pop
jns
iret
inc
adc
mov
push
sbb
cmpsb
sbb
scas
push
scas
add
lret
addr16
hlt
dec
pop
cmp
push
xor
and
scas
inc
cmp
or
jge
iret
sub
push
sub
pop
aas
aam
and
insl
out
cmp
push
push
mov
fs
popa
pop
adc
add
nop
or
mov
loope
sbb
adc
sbb
fistl
inc
xor
lods
ds
nop
stos
mulb
jae
sti
repnz
xadd
mov
push
fldenv
dec
imul
lods
pop
pop
ljmp
mov
ret
xor
xor
ljmp
or
adcl
mov
xchg
xchg
aas
and
cmpsl
cltd
pop
sub
jl
adc
fwait
cmp
movsl
xchg
and
and
xchg
data16
inc
ret
cld
inc
xchg
push
mov
dec
jbe
in
adc
mov
out
arpl
cmp
push
xor
sub
mov
leave
push
call
mov
or
leave
jmp
jmp
xlat
add
loop
add
cmpl
and
sub
push
das
cli
xor
sbb
cmp
mov
cmp
add
xchg
cmc
mov
rorl
dec
sub
icebp
push
addr16
btc
nop
rorb
inc
pop
cmpsb
mov
jb
push
add
mov
lock
imull
sbb
icebp
pop
sbb
jp
sub
imul
cmp
cs
jnp
xor
and
imul
mov
frstor
test
jge
jo
add
xor
stc
les
jmp
jnp
dec
sub
les
shlb
push
push
stos
mov
xchg
dec
xchg
xor
mov
pop
adc
cwtl
arpl
daa
in
sbb
mov
imul
fstpt
repz
nop
scas
in
dec
js
xor
scas
int
cmp
les
mov
ss
dec
pop
call
sbb
jb
and
fidivl
or
rolb
lds
sbb
enter
in
jp
lock
mov
addr16
lret
cmc
fs
and
test
push
jne
or
call
adc
stos
dec
cmp
jmp
lcall
leave
mov
insl
call
in
push
pop
sarb
cmp
daa
push
ret
sbb
dec
cmp
test
in
cltd
add
fdivs
sbb
mov
stc
jl
cmp
pop
fs
rclb
dec
push
int
iret
inc
cwtl
and
mov
loopne
js
jmp
xchg
out
push
or
xchg
mov
and
mov
ljmp
fs
xchg
push
mov
and
std
sub
sub
inc
mov
add
test
dec
xlat
sbb
mov
mov
in
push
adc
adc
inc
and
out
adc
rcl
movsb
aaa
insl
ja
inc
sbb
pushf
xchg
cmpsb
mov
loop
les
push
jo
ljmp
in
das
xorl
aaa
or
lret
out
xchg
insl
int3
push
js
int
jp
cmpsl
or
mov
lods
nop
mov
cmpsb
icebp
cmp
adc
lret
sti
adc
shr
sub
push
sbb
sbb
xlat
ficompl
jno
mov
mov
add
fcomp
inc
cmp
popf
push
dec
cld
xchg
dec
test
lock
test
jb
out
test
push
negl
lds
cmc
mov
imul
stc
cmp
imul
cmp
cmp
clc
jl
and
inc
jle
xor
fisttpll
mov
test
sahf
add
gs
inc
test
add
pushf
leave
retw
xchg
push
mov
les
push
pop
push
mov
sbb
repnz
xor
or
test
lods
mov
into
jae
jno
ds
loope
dec
cld
mov
pop
cmp
data16
repz
adc
nop
cmpsb
dec
bound
jge
pusha
rcr
cmp
jecxz
add
lea
sub
cmp
xchg
bound
in
decb
outsb
sub
jae
stos
imul
add
adc
sbb
push
xchg
inc
hlt
ret
jns
cltd
xor
rcr
pop
adc
sar
push
cmovo
mov
xor
xor
ss
adc
cltd
pusha
push
roll
and
fcompl
orl
sub
sub
js
and
jo
das
cltd
jnp
addr16
push
das
add
repz
xchg
pop
or
lahf
push
mov
sarl
cmp
sbbb
loopne
ss
outsb
fldt
jge
lret
roll
pop
dec
add
or
pop
js
dec
and
loopne
shr
jp
fadds
sub
cmp
mov
aas
fists
and
push
leave
cmpsb
pop
and
sbb
pop
inc
roll
inc
dec
lods
test
pushf
fwait
stos
xchg
into
jle
repz
mov
sahf
clc
cmp
mov
testl
in
lret
popf
mov
xor
dec
xor
cwtl
xchg
loope
out
and
jnp
or
mov
pop
jge
out
cmpb
imul
sub
fdivrl
mov
decl
xchg
sub
shll
or
in
loope
sub
divl
ficoml
push
or
mov
ficoml
cmp
xor
add
xchg
and
add
push
loope
das
dec
add
lret
adc
std
inc
push
shlb
add
xchg
mov
mov
sbb
dec
mov
mov
mov
iret
inc
rolb
fsubl
jnp
into
stc
and
lahf
sbb
repnz
pop
icebp
test
dec
xchg
push
dec
add
decb
cltd
scas
add
mov
xchg
or
add
mov
mov
lods
imul
mov
xchg
sbb
arpl
xor
xchg
cli
std
aas
pop
pop
mov
cmp
mov
lahf
cmc
fldlg2
adc
enter
lahf
icebp
fisttps
pusha
add
sbb
cld
and
out
lock
pop
out
add
xchg
inc
jnp
sti
sbb
fists
rorb
std
cld
iret
xchg
jne
inc
mov
push
gs
add
and
sbb
xchg
lret
mov
cwtl
xchg
lock
and
pop
sbb
fdivl
mov
repz
xchg
clc
movsb
mov
sbb
cli
add
shl
xchg
jns
xor
ret
pop
adc
out
mov
mov
or
pop
cwtl
dec
out
mov
push
add
mov
jne
bound
ret
sbb
lret
sub
testb
xor
mov
lret
push
stos
imul
mov
cmpsl
mov
push
daa
add
or
hlt
mov
int
lock
js
jbe
popa
aam
outsb
jmp
iret
push
adc
pop
shrl
or
cmpsb
jbe
or
push
pop
jne
sub
pop
inc
or
pop
or
inc
sti
cmp
mov
and
sub
stos
add
pop
dec
imul
mov
iret
inc
shl
jecxz
xchg
ss
bound
orl
cmp
imul
push
stos
ret
aaa
xchg
scas
sub
test
mov
repz
cmp
xor
imul
int3
jo
cld
xor
fisubs
sti
fstl
inc
movl
or
cmp
sbb
inc
out
mov
and
inc
push
mov
jbe
in
into
repz
ss
shr
push
push
jo
rol
hlt
mov
xlat
or
jb
mov
push
xchg
loope
sub
push
jo
mov
ja
leave
jb
inc
mov
vpunpcklbw
imul
es
dec
xchg
mov
cwtl
nop
add
test
jecxz
ret
hlt
jecxz
cmp
pop
insb
add
icebp
cmp
ret
ljmp
jge
mov
sbbb
xor
repnz
xchg
xchg
sbb
sub
jle
cmp
pop
add
adc
adc
push
mov
add
sbb
int
push
mov
lahf
dec
aas
jp
movsb
cmp
add
out
outsl
subb
test
jns
pop
mov
dec
dec
mov
inc
dec
xor
push
cmpsb
cmp
data16
test
push
add
mov
sbb
and
inc
outsl
clc
cmp
iret
repz
int3
pushf
xchg
ds
outsb
mov
scas
xor
pop
fisubs
mov
ss
mov
scas
aaa
in
cmpsb
sti
xor
pusha
cli
sub
test
repnz
aas
rcll
add
dec
xchg
add
push
jns
fiaddl
cmp
addl
mov
pop
lret
mov
ljmp
fisubl
mov
dec
push
fwait
xchg
push
imul
divl
mov
mov
and
cltd
roll
or
sbb
add
jo
jl
cmpb
adc
pushf
xchg
mov
or
jl
or
out
out
dec
aas
jl
xor
push
icebp
adc
xchg
lcall
xchg
xor
arpl
scas
dec
xor
push
pusha
mov
jne
dec
iret
push
imul
ds
fmuls
stc
inc
inc
fnsave
fistpll
stc
push
sahf
fs
shlb
xchg
xorl
iret
jmp
nop
bound
mov
test
jmp
lret
sbb
rcl
cmp
fdivrl
mov
cld
mov
lods
nop
shlb
or
sub
sahf
mov
sbb
xor
pusha
push
shll
insl
stc
xchg
jmp
lcall
mov
mov
cwtl
and
scas
aas
rcr
dec
push
movl
adc
add
les
mov
daa
stos
fwait
jl
das
mov
dec
call
xor
cmp
sub
mov
rclb
inc
je
mov
fisttpll
mov
sbb
adc
outsl
mov
mov
out
inc
and
add
xchg
popa
cs
push
loopne
push
fimull
in
in
hlt
fldenv
cmp
sub
xor
lcall
inc
mov
add
insl
mov
mov
es
mov
push
scas
dec
sbb
fldt
dec
cs
imul
sahf
loope
aas
mov
ljmp
rcrl
iret
xlat
mov
arpl
mov
scas
xchg
lcall
pop
lods
mov
push
add
pop
mov
inc
push
sbb
jmp
outsl
iret
adc
xchg
sahf
pop
leave
mov
push
mov
ss
pushf
mov
mov
push
daa
sbb
mov
lret
xchg
stos
mov
and
inc
fidivrs
xchg
pop
add
popf
aas
fnop
out
sub
stos
hlt
sbb
jae
dec
cld
sbb
lods
jbe
jo
leave
mov
fisttps
add
jmp
fs
mov
push
mov
lret
push
jo
mov
mov
ja
mov
push
or
daa
cwtl
notb
mov
hlt
repz
aas
clc
inc
insl
je
dec
stc
mov
and
cmp
mov
xchg
and
or
fisttpl
xchg
bound
mov
adc
push
pop
cwtl
jbe
sbb
mov
mov
dec
out
and
jmp
aam
sbb
or
iret
rcll
xchg
adc
test
pop
pop
add
pushf
cmc
test
pop
sbb
shrd
lret
push
push
pmulhw
sub
lret
lret
mov
xchg
push
fistpl
popf
xor
pushw
mov
dec
add
sbb
mov
out
test
jne
sub
push
jae
icebp
leave
into
subb
sti
shrb
je
xchg
arpl
xchg
mov
pop
imul
pop
xor
xchg
sbb
dec
adc
fldt
js
ja
jb
or
cmp
add
pop
jge
push
aad
sub
push
cmc
mov
nop
flds
popl
jmp
cmp
jl
xchg
push
mov
xchg
fisttps
dec
pusha
add
jge
icebp
out
lods
xor
cmc
arpl
dec
lahf
in
adc
mov
jge
loope
flds
lods
push
cltd
push
out
inc
cltd
js
cli
or
mov
cmp
sub
cmp
sbb
pushf
divl
cmp
lds
cmp
mov
arpl
add
adc
mov
xlat
pop
mov
in
adc
arpl
jmp
and
bound
std
or
sbb
addb
rol
mov
scas
outsb
and
pop
mov
lahf
mov
or
sbb
imul
in
xchg
or
test
pop
in
xchg
cs
mov
test
aam
pop
popw
arpl
pusha
adc
movsb
cmp
mov
mov
lea
mov
pop
xlat
scas
inc
aaa
mov
lret
xor
mov
jae
adc
jne
popa
aaa
sbb
aam
inc
pop
jno
dec
sub
sub
aas
cmpsb
rcrb
es
mov
sub
inc
out
andl
xor
mov
clc
insl
or
insl
arpl
jl
push
pop
insl
jecxz
mov
arpl
shl
sub
js
gs
or
lahf
fistpl
xchg
push
addl
push
inc
add
sbb
pushf
pop
ljmp
mov
imul
adc
xor
loop
bound
xor
aam
dec
fwait
and
adc
sbb
loopne
add
iret
addr16
loopne
out
jle
add
gs
or
dec
and
rcl
andb
sbb
dec
incb
pop
push
pop
test
fxch
sub
imul
lcall
push
sub
out
push
add
ret
stos
cli
cmpsb
mov
inc
add
or
and
ffreep
xchg
adc
pop
xor
mov
in
push
sub
divl
push
mov
mov
pop
or
add
hlt
out
sub
daa
mov
sbb
lods
push
loope
push
inc
dec
jmp
push
cs
call
mov
push
jne
or
ficompl
adc
sub
ljmp
xchg
loop
mov
in
ljmp
inc
sarl
mov
cmp
push
loop
inc
lea
push
ud2
test
sbb
lret
adcl
ds
mov
sarl
push
fsubrp
nop
cmpsl
jl
nop
adc
inc
pop
lret
in
imul
adc
popf
ljmp
push
xlat
sub
ds
out
lock
sbb
insl
pop
int
andl
mov
fcmovnu
and
loopne
cmp
mov
jmp
insl
hlt
push
sub
lock
jmp
sbb
bound
sbb
adc
pusha
fistl
jno
jae
pop
ss
repz
insl
and
fildll
mov
push
push
mov
scas
mov
insl
fldenv
cmp
or
bound
mov
sub
clc
int
loopne
mov
xchg
or
mov
orb
push
mov
call
mov
xchg
jmp
icebp
or
pop
sbb
fstps
lods
movsl
sti
push
mov
in
push
mov
xor
lret
jnp
rcr
pop
test
xchg
mov
sub
in
pop
xchg
out
xchg
dec
lods
mov
icebp
inc
mov
mov
lock
pusha
mov
leave
iret
sub
repnz
dec
mov
dec
lahf
pop
jae
div
popf
loop
push
mov
gs
pop
ss
cmp
sub
add
or
push
repz
push
mov
jno
test
mov
or
pop
mov
in
mov
or
rclb
inc
mov
inc
test
jae
bound
cmpb
mov
sbb
push
inc
mov
push
mov
mov
ret
push
pushf
stc
cmp
arpl
cwtl
jmp
mov
ds
dec
cwtl
sahf
pop
popf
rorb
lret
mov
push
gs
cmpsb
xchg
jns
sub
xchg
cli
fwait
scas
push
cltd
mov
loope
movsl
cld
mov
pushf
test
fnstsw
fs
lcall
pop
roll
mov
pop
pop
cmp
add
mov
inc
cmpsl
negb
cmp
in
outsb
pop
adcl
imul
mov
or
jge
inc
loopne
dec
pop
and
jnp
or
hlt
lahf
push
in
jne
lcall
scas
sub
xor
adc
sub
decb
mov
mov
test
cmp
cs
cmp
insl
xor
int
mov
inc
addr16
insl
aaa
dec
aam
cmp
xor
mov
or
mov
pop
lea
pushf
cmp
stos
pop
sub
ret
jle
mov
rolb
sbb
int
movsb
push
sub
cmp
mov
dec
cmpsl
jbe
inc
and
inc
adc
cmc
jmp
lds
jge
jbe
fdivrl
clc
out
inc
fsubr
mov
xchg
test
movhps
sti
lea
xor
js
fisttps
pop
push
or
pop
adcb
cli
pop
pop
mov
jb
enter
lret
cmp
fiadds
out
bound
pop
or
jne
push
sub
mov
adc
lret
add
pop
ljmp
mov
cmpsb
adc
add
push
jb
les
loopne
addr16
fnstenv
aaa
add
lahf
sub
mov
jne
mov
inc
je
jp
stos
mov
xchg
pop
es
add
mov
add
push
sub
adc
inc
xor
loopne
out
fistl
loop
stos
repz
outsb
popl
push
xor
enter
push
sub
inc
inc
sbb
xchg
enter
inc
loop
lds
dec
jmp
cmp
aad
out
jns
testl
mov
push
or
inc
mov
jne
pop
aad
scas
fisubrl
stos
aam
lret
sub
vandps
jecxz
mov
je
out
fcomps
xor
cmp
add
lahf
dec
or
jbe
inc
test
jb
add
sbb
cmpsb
adc
mov
pop
cmp
mov
and
add
sbb
mov
nop
push
push
mov
pop
andl
inc
push
bound
xchg
mov
lods
push
sub
sub
popf
flds
adc
mov
jl
cmpsb
rclb
movl
add
mov
scas
addr16
fists
push
pusha
dec
xorb
shl
push
xlat
inc
lea
jo
jo
inc
ret
push
orl
xchg
lock
xchg
cwtl
mov
in
test
and
mov
pop
push
pop
outsb
jp
pop
jg
cld
push
sbb
or
sbb
jmp
mov
pushf
mov
xor
fwait
daa
test
mov
and
outsl
subl
insb
in
sub
push
hlt
dec
cmp
adc
mov
call
repz
aaa
decb
divb
cmp
pop
flds
fsts
pushf
jae
adc
xor
sti
or
out
aad
jo
cmp
bnd
test
cmpsb
imul
pop
scas
aas
fisttpll
inc
adc
xchg
cli
push
test
aam
idiv
insb
jp
jle
je
inc
je
jno
inc
xor
icebp
js
gs
xchg
push
mov
jge
enter
push
fistpll
je
sbb
shl
test
sub
mov
sbb
or
dec
add
popf
push
xlat
movsl
sbb
xchg
pop
pop
es
add
scas
jmp
mov
pop
cmp
mov
rorb
mov
or
lret
dec
into
imul
movb
sahf
divl
cmp
sub
test
popf
cmp
dec
sbb
cltd
dec
mov
lcall
xchg
xchg
imul
inc
dec
lret
fcom
push
add
pop
jbe
test
data16
mov
pop
aam
pop
add
ret
aaa
sarl
push
shrl
mov
lods
pop
jnp
push
js
das
mov
jecxz
sub
dec
adc
add
sbb
jnp
adc
bts
into
cltd
xor
mov
and
outsb
lock
fiadds
adc
out
push
ficoml
rcll
cs
mov
push
jmp
xchg
dec
fucom
mov
and
pop
xchg
insl
cwtl
xor
popa
mov
out
insb
sub
cmp
mov
lret
stos
xor
inc
mov
pop
push
pop
add
cmpsb
in
popa
js
mov
sbb
mov
test
popf
cli
dec
inc
jecxz
fldt
mov
mov
ds
ja
pop
xchg
std
lea
lahf
jl
xchg
jae
mov
push
pop
insl
push
insb
mov
leave
fnstsw
lret
addr16
rorb
cmp
repz
push
add
stc
inc
je
jge
movsl
mov
dec
popa
pop
add
xchg
ja
test
push
js,pt
in
in
or
out
push
hlt
pop
lcall
andb
and
inc
movsl
test
mov
dec
jne
pop
or
mov
mov
fisttpll
xor
nop
jae
xchg
dec
je,pn
test
enter
cmp
xchg
or
clc
sub
fwait
jecxz
sub
dec
mov
outsl
mov
sti
add
shrl
sbbl
popf
mov
inc
adc
adc
and
push
adc
push
xchg
int
icebp
pop
cld
jmp
das
push
mov
jl
lods
adc
lods
lock
or
adc
jae
sub
lds
ret
outsb
enter
mov
fldl
pop
cmp
cwtl
xlat
repz
xor
mov
movsb
loopne
dec
inc
cmpsb
mov
insl
psubb
ror
cmp
bound
daa
sahf
dec
iret
pop
std
sub
and
add
sub
jae
sarl
aad
movsb
lahf
lea
mov
xchg
fwait
and
mov
mov
addr16
int
add
push
ret
mov
out
insl
ds
inc
mov
xchg
xchg
stos
add
add
movsb
push
orl
inc
or
jecxz
xchg
jmp
or
repnz
ret
iret
fcmovne
nop
push
js
cmp
xor
sbb
lds
and
inc
dec
xchg
sbb
jns
xchg
les
jp
push
outsl
adcl
pop
or
lods
dec
iret
cmpsl
bound
cmp
addr16
mov
cmp
cmp
bound
imull
and
xchg
out
scas
sahf
les
sbb
or
shrl
lret
cmp
outsl
dec
scas
bound
je
inc
xlat
add
xchg
push
shlb
stos
in
mov
inc
xchg
or
pop
jle
xor
add
dec
popl
sti
roll
mov
mov
and
mov
sub
dec
lods
daa
xor
adc
test
add
and
div
or
aam
mov
xchg
ds
dec
push
xchg
ja
adc
lcall
mov
push
mov
sub
mov
push
xchg
cmpsb
jo
popa
out
jmp
int3
js
repz
jmp
jmp
cmp
cli
mov
imul
xchg
pop
adc
or
insl
jno
xchg
xchg
mov
jb
and
and
push
cwtl
pop
jnp
shrb
movsl
push
jle
cwtl
fsubs
mov
inc
cmpsl
sahf
dec
out
fistl
shr
imul
mov
stos
repz
adc
ds
sub
aaa
or
in
mov
iret
push
or
pop
dec
push
mov
movsl
adc
fsubl
cmpb
adc
pop
jb
lods
test
adc
xor
out
dec
adc
jbe
pop
andl
sarb
int3
scas
mov
and
scas
stos
aam
mov
and
and
ret
arpl
jb
sahf
lret
imul
jnp
loopne
sbb
push
xchg
and
xor
sbb
and
cmp
adc
pop
jle
insb
xchg
cld
stc
loop
cmp
pop
mov
cmp
adc
pushf
in
int3
xchg
xor
cli
adc
fisttps
push
daa
mov
xor
lock
or
dec
lret
imul
roll
in
push
aas
ss
or
xor
and
pop
loopne
stc
mov
repz
pop
sahf
subb
cmpsl
xor
std
in
jle
cltd
xchg
add
loope
jl
or
xchg
aaa
je
pop
pop
mov
xchg
push
mov
mov
loope
rcl
adc
in
outsb
mov
push
xor
scas
or
aam
hlt
loope
mov
es
inc
idivl
sbb
ljmp
xor
or
cltd
and
push
lahf
divb
test
or
mov
add
stos
repz
ljmp
fdivrs
or
or
cwtl
ja
sti
adcb
mov
movsb
shrb
mov
sahf
dec
or
cmp
xchg
imul
orb
adc
xchg
xor
mulb
mov
add
loopne
sub
or
sub
popa
xorb
mov
loopne
xchg
or
sbb
lret
mov
push
data16
loope
mov
xchg
in
jbe
stos
xlat
push
push
rcrb
add
xchg
cld
and
push
push
xchg
outsb
popa
xor
bound
bnd
mov
sub
rorl
test
add
divl
push
decl
mov
add
in
jp
sbb
inc
push
mov
sbb
pop
or
loopne
and
xor
pusha
testb
lret
mov
daa
push
mov
sbb
adc
test
je
inc
dec
fsubrl
adcl
mov
mov
fbstp
pushf
push
push
push
mov
iret
pop
mov
sbb
dec
insl
inc
inc
into
popf
fnstcw
dec
movsl
mov
jmp
fadd
mov
push
dec
loop
fcoml
sbb
dec
sbb
inc
pop
iret
inc
out
and
mov
lahf
push
insb
sbb
ficoml
push
cmc
push
ss
mov
or
testl
aad
xchg
jo
mov
inc
mov
adc
orb
lcall
ret
call
ss
sub
mov
mov
cmpsl
adcb
pop
add
cltd
jo
jnp
lret
sarb
rcl
mov
enter
out
out
jg
jns
xlat
jmp
dec
push
aaa
adc
sbb
aam
int3
dec
or
stc
xchg
cmpb
lods
mov
je
mov
mov
in
ret
cmpsl
fcmovb
mov
imul
outsb
mov
dec
mov
fwait
pop
xor
insb
xlat
js
out
jecxz
gs
inc
sti
jno
xchg
push
rolb
icebp
loopne
push
mov
dec
dec
pop
pop
rcll
jp
ret
mov
sub
xchg
cmp
test
pop
popa
aam
lods
and
jle
aam
add
fsub
cmp
in
mov
fcomps
jns
sbb
jecxz
mov
loope
popa
xchg
adc
add
add
jno
and
mov
or
push
imul
dec
xchg
mov
or
inc
lods
dec
lds
or
add
dec
mov
jecxz
sbb
dec
xchg
ror
dec
icebp
adc
out
adc
dec
icebp
add
dec
dec
fisubrs
sahf
movsb
sbb
push
mov
mov
sbb
mov
arpl
cmp
out
pop
sti
and
xor
jnp
aas
and
xor
xchg
lcall
xchg
dec
mov
das
cmp
punpcklwd
push
inc
fwait
gs
push
sbb
and
lahf
jl
notl
out
imul
inc
pop
mov
lcall
push
nop
jl
enter
loop
ds
sub
xlat
movsl
jle
add
popa
or
ja
sar
in
inc
loopne
or
aaa
stos
mov
mov
xor
cmp
pop
jae
mov
aas
sub
rorl
jae
xchg
pop
jmp
fdivrp
shlb
cmp
jns
pop
mov
mov
inc
cltd
aas
mov
repnz
mov
and
inc
or
pop
pop
test
sbb
xchg
pop
pop
std
cs
inc
dec
dec
jbe
xor
int3
pop
mov
inc
add
jmp
pop
out
stc
and
rcr
lret
or
movsb
dec
or
adc
mov
aaa
data16
ret
scas
inc
lahf
insb
mov
add
push
cli
pushf
bound
push
test
out
inc
push
sub
outsb
dec
adc
cs
vdivpd
cs
loopne
pop
sbb
cmp
and
test
dec
aas
lods
xor
xor
int3
jp
js
fcomp
dec
fnstenv
hlt
fs
lds
xor
ljmp
pop
push
dec
ss
adc
ljmp
inc
out
and
or
xchg
inc
repnz
cmp
scas
test
mov
ret
lods
jg
pop
pop
pop
xor
jo
jecxz
fwait
arpl
adc
inc
xor
dec
fwait
repz
cli
shll
mov
push
rolb
push
lea
xorl
add
dec
jmp
insb
and
pusha
clc
in
stos
sbb
loope
add
enter
fcmovnb
sub
cltd
outsb
jmp
out
aam
pop
jnp
in
nop
sub
dec
int
or
push
iret
dec
mov
mov
imul
repz
leave
dec
jmp
cmp
rorb
fucomip
out
gs
out
jecxz
inc
lock
lcall
lret
notl
js
ljmp
lock
sbb
pop
xchg
push
jmp
push
pop
jns
insb
scas
sar
outsl
fcmovnb
dec
pop
loopne
mov
push
mov
and
testb
insl
mov
sub
pmaxsw
xchg
sub
cmpb
lods
add
mov
hlt
adc
dec
arpl
jge
xor
ds
int
sti
stc
mov
push
push
mov
or
aas
cmp
mov
sbb
sbb
ret
jecxz
call
mov
xchg
lock
sub
sbb
pusha
movsl
in
add
fimuls
ss
test
mov
sub
push
les
xchg
jl
dec
mov
bound
pop
int3
vmwrite
mov
outsb
inc
sub
dec
scas
lock
lods
leave
xchg
and
jno
jb
mov
dec
jg
and
push
ret
dec
aad
xchg
not
out
fnsave
inc
dec
into
ret
int3
jecxz
add
loopne
test
mov
lahf
in
in
call
dec
xlat
jbe
in
add
outsb
lods
rcl
movsb
sub
and
je
jle
jmp
add
ja
sbb
inc
aam
cmp
sbb
push
xchg
mov
jo
movsb
ja
jg
cmp
in
xor
dec
into
ret
inc
rcr
pop
xchg
inc
lret
lea
out
jg
cmp
cmp
adc
jmp
cmc
pusha
movsl
add
jnp
mov
es
fstl
and
pop
arpl
xor
out
adc
and
imul
in
mov
jns
out
repz
add
and
xchg
mov
popf
test
sbb
aam
xchg
pop
xchg
adc
sub
xor
sbbl
out
cmp
add
ret
outsl
mov
dec
pop
dec
out
pusha
add
adc
sub
insb
or
adc
pop
dec
jmp
inc
repz
jnp
das
inc
roll
enter
popa
js
rcrb
sub
test
push
xlat
pop
std
scas
mov
cmpsb
insl
add
push
sbb
fdivl
ds
fildl
nop
mov
mov
iret
mov
inc
cli
push
sbb
aam
cmp
jbe
lds
add
adc
push
adc
add
mov
mulps
pop
sbb
xchg
mov
in
sbb
and
lcall
notb
xor
jge
and
mov
and
jg
stos
mov
jl
pop
outsb
xchg
sbb
sbb
mov
je
call
fstpl
stos
sbb
pop
sahf
test
mov
int
mov
push
imul
ja
add
int3
aas
jae
lds
mov
mov
and
or
sub
pop
loope
cwtl
mov
dec
aas
jb
mov
pop
cmpsl
mov
cmp
ret
push
mov
add
add
jb
push
aad
aaa
mov
flds
jmp
xor
out
mulb
or
negl
dec
test
jb
sarl
mov
adc
or
pop
je
and
movsl
adc
inc
hlt
mov
lret
dec
mov
aam
leave
pop
cmp
loop
mov
cmc
in
mov
xor
lahf
add
xor
insb
xchg
int3
or
xchg
mov
pop
xchg
xorb
repz
dec
out
mov
or
in
int3
ja
jl
fucomip
ret
sub
sahf
or
mov
jmp
jne
add
sahf
cmp
test
insb
pusha
nop
sub
lahf
shll
push
push
repz
repz
popf
or
xchg
adc
xor
insb
xchg
and
jo
js
pusha
test
mov
jl
rclb
inc
test
jbe
sbb
aad
int
cmp
je
int
adc
adc
orb
mov
fisubs
pusha
push
pusha
das
xor
xlat
and
and
mov
adc
in
pop
dec
xchg
push
jp
jl
and
stos
add
pop
daa
pop
cmp
sub
push
adc
xor
daa
mov
mov
push
sub
xor
pusha
rcrb
push
cmp
sbb
loopne
int
cmpsb
cli
lock
sbb
addr16
and
xchg
adc
jns
adc
add
lret
push
cmp
push
push
jecxz
test
in
cmpl
xor
inc
adc
popf
into
pop
push
pop
mov
pop
inc
jno
pop
in
fisubrl
scas
mov
das
ret
cmp
loopne
cs
sbb
je
cld
gs
xchg
xchg
pop
fmulp
xchg
movsl
mov
inc
mov
inc
arpl
adc
cmp
bound
or
jns
mov
cltd
mov
repz
call
popa
cmp
xlat
jno
sub
adc
sbb
rorb
add
jl
dec
in
inc
insb
add
lcall
inc
pushf
push
shrl
in
xor
sbb
lahf
mov
xlat
test
in
rclb
inc
jo
lods
in
test
inc
sbb
shll
or
dec
pushf
xchg
std
pop
push
or
push
shl
leave
cmpl
es
jmp
add
cmp
movsl
test
xor
push
xchg
movsl
cltd
cwtl
or
call
mov
adc
inc
xchg
cltd
add
loopne
mov
fidivrs
add
mov
roll
add
mov
lods
jg
xor
mov
cmp
jno
fs
lds
cmp
out
sti
out
adc
adc
sbb
cld
out
mov
cmp
dec
imul
adc
jmp
sbb
loop
lods
mov
xchg
pop
cmp
pusha
and
xor
push
jmp
adc
push
push
les
aas
adc
jb
inc
push
mov
fstl
fisttpl
jmp
jb
mov
pop
push
mov
mov
sbb
mov
test
dec
clc
lret
lds
clc
fmull
pushf
adc
rolb
mov
add
xor
addb
cmp
imul
ja
xchg
das
cwtl
cmpsb
sbb
inc
jmp
stc
xor
xchg
sub
sbb
cmp
in
in
mov
cmp
jne
dec
test
rclb
jg
movsl
jmp
xchg
pop
mov
and
bound
xor
inc
sbb
push
ret
pushf
movsb
add
inc
add
pop
ljmp
mov
add
lahf
fnsave
cmp
movsb
mov
inc
pop
mov
adc
push
data16
jb
mov
sbb
lea
cmp
sub
gs
test
pop
mov
inc
push
xchg
xchg
in
inc
es
repnz
in
xor
scas
inc
es
aad
or
sbb
pop
test
hlt
mov
call
mov
xchg
mov
xor
in
movsl
xchg
xor
inc
ret
lahf
lret
jecxz
adcb
mov
pop
adc
adc
push
mov
test
dec
sub
scas
rorl
fistpll
out
dec
inc
mov
mov
jo
outsl
daa
mov
loopne
pushf
adc
lahf
or
xchg
or
fldt
mov
jp
scas
ds
cmp
rcrl
jge
icebp
imul
loope
sub
gs
xor
fiaddl
mov
fldl
iret
pusha
mov
jo
push
int3
aas
lahf
outsb
xchg
cltd
cmp
push
ret
xlat
push
int3
ret
xor
or
cmp
sub
fidivrl
xor
fisubrs
or
aas
fwait
cmp
mulb
xorl
xor
lods
stc
test
mov
shlb
mov
sub
rcl
mov
push
push
rcr
jg
mov
adc
dec
pop
jno
adc
repz
fnstcw
fidivl
lds
xor
mov
outsb
das
or
icebp
jecxz
stc
xchg
pop
inc
pop
and
mul
lcall
out
inc
or
dec
in
gs
imul
mov
or
sub
xchg
stos
iret
jno
out
xor
arpl
das
sub
cmp
fwait
mov
clc
or
hlt
push
arpl
mov
push
fstl
call
sahf
paddd
loope
mov
and
test
imul
xor
in
ret
push
dec
dec
int
xor
std
aaa
jo
mov
lahf
mov
or
mov
loope,pt
cwtl
inc
or
into
dec
imul
mov
cwtl
loopne
enter
and
sub
aaa
pop
pop
insb
jg
push
cwtl
xchg
in
xor
fwait
mov
jle
and
arpl
sbb
enter
fs
add
cmc
xchg
ss
dec
mov
inc
leave
and
inc
rclb
pop
imul
rolb
aad
xchg
cmpsb
enter
fisttps
je
jne
mov
or
xor
push
jg
lock
sti
hlt
push
push
pop
mov
sarl
or
fwait
repnz
imul
jnp
sub
ret
mov
repnz
push
sub
sahf
test
out
mov
scas
adc
fnstenv
and
out
outsl
mov
xor
pushf
xbegin
aaa
clc
and
clc
insl
mov
xor
mov
outsl
loope
cmp
xchg
mov
mov
sbb
fwait
clc
xor
fisubrs
jg
ja
and
in
repz
adc
test
movsl
outsb
cmpsl
add
cmp
sbb
rcrl
cmove
out
xlat
lds
mov
push
subb
cld
subb
mov
insl
dec
adc
sbb
bound
test
mov
mov
imul
outsb
mov
icebp
shl
adc
test
jnp
sub
xchg
roll
in
idivb
mov
test
sub
add
xor
sub
lods
in
insl
ror
fimull
fsubrs
call
icebp
push
sub
outsl
rolb
cli
insl
out
and
jmp
ffreep
punpcklbw
insb
dec
jg
xorl
cmp
xchg
dec
cmpsl
repz
pop
cltd
lret
dec
into
or
sub
mov
adc
lret
leave
cmp
dec
dec
xor
ja
sahf
xchg
mov
push
sub
loope
inc
push
dec
dec
in
ret
jne
or
sbb
cmp
lahf
jmp
orb
or
jb
ds
sub
mov
dec
mov
ja
adc
mov
pusha
aaa
mov
jnp
outsb
adc
icebp
dec
sub
in
dec
adc
push
dec
leave
fstpt
sub
add
decl
lcall
clc
mov
sti
mov
and
mov
rcrb
mov
push
add
ret
out
repnz
mov
mov
test
sub
inc
sub
arpl
and
iret
dec
aam
ret
sbb
push
mov
add
imul
or
sub
lea
icebp
inc
enter
fwait
movsl
lods
jle
add
das
test
cmp
outsb
mov
sarl
in
dec
xor
jbe
js
xchg
dec
clc
je
mov
stc
push
xchg
outsb
dec
std
jbe
xchg
packsswb
lds
adcl
mov
adc
in
cmp
pop
insl
push
enter
push
cli
daa
mov
notl
mov
cmp
insl
sub
int3
stos
in
je
mov
dec
pop
pmaxsw
popw
gs
mov
cmc
fadds
cmp
ds
subl
movsl
sbb
sarl
leave
sub
cmp
jns
outsb
fstp
dec
repz
call
add
scas
xchg
adc
push
call
int
dec
cmp
cmp
andl
lahf
fcoms
push
xor
jge
insl
adc
mov
jecxz
push
mov
pop
pusha
outsl
and
and
ja
ret
cld
inc
outsb
in
pop
imul
outsl
insb
or
and
ja
xor
into
pusha
xchg
push
shrb
mov
shlb
es
xor
adc
cs
repz
xchg
sbb
jmp
test
sbb
pop
rorl
mov
in
imul
decl
and
adc
mov
cmp
out
test
loope
outsb
push
psubsb
jmp
adc
dec
sub
push
mov
inc
idiv
lea
push
cld
out
mov
jle
stos
andl
movsb
jecxz
xchg
add
add
insl
jl
push
sbb
cs
movsl
adc
mov
aas
cmc
fs
adcb
cmc
test
xchg
mov
sbbl
mov
jecxz
movsl
pusha
jno
push
sub
sub
inc
adc
fsts
mov
icebp
fwait
add
icebp
push
aam
pop
jb
jnp
sub
push
or
inc
jle
dec
lcall
clc
and
ret
stos
clc
inc
roll
sub
out
mov
out
adc
pop
mov
sbb
sbb
negl
aas
adcl
xor
mov
pavgw
add
jo
add
or
cmpxchg
das
lret
rcr
mov
push
sbb
out
daa
adc
mov
lds
push
lds
cmp
adc
mov
ss
pop
push
pop
shll
lock
mov
mov
xor
mov
fdivr
add
pop
push
jmp
fwait
stc
fiadds
push
xlat
push
out
mov
inc
rclb
xchg
jg
fidivl
or
add
jb
out
inc
and
sbb
lcall
lahf
inc
sbb
push
arpl
inc
xor
pop
loope
inc
gs
cmp
aam
andl
pop
aas
ds
aad
mov
push
in
sahf
mov
sbb
mov
mov
mov
push
push
and
mov
decl
inc
sub
dec
add
push
push
push
and
mov
es
pop
and
in
pop
xchg
fisubs
andb
push
inc
out
sub
test
xorl
or
jp
out
int3
push
in
xchg
ret
nop
pop
stc
xlat
popa
daa
pop
cmp
push
and
cmp
adc
aas
sbb
dec
xlat
insl
loope
addr16
sbb
lods
add
pushl
lea
xchg
push
adc
push
mov
pop
ds
mov
pop
int
out
xor
add
jg
jecxz
xlat
iret
cltd
mov
aad
push
fldl
rol
dec
or
fsubrs
scas
mov
lods
jo
je
inc
xchg
rclb
mov
call
out
imul
and
dec
js
repz
push
enter
mov
and
mov
ret
loopne
or
hlt
aaa
xlat
iret
movsb
es
mov
lret
das
mov
and
leave
push
push
mov
js
add
sbb
das
jbe
add
and
cmp
pop
push
mov
jmp
add
add
fcmovnu
outsb
cmp
xlat
mov
jecxz
dec
insb
pop
aad
mov
sbb
jp
adc
mov
inc
je
sub
push
nop
xchg
xchg
dec
popa
aas
mov
pop
lret
cwtl
push
fwait
mov
fists
in
adc
xchg
fsubrl
add
adc
pop
fnstcw
jns
sbb
dec
mov
inc
cmp
rcrb
mov
pop
inc
pop
push
jo
icebp
outsl
repz
xchg
cmp
in
mov
mov
stos
jle
ljmp
aam
inc
mov
cmp
sub
or
and
and
imul
out
addr16
adc
jae
cmpsl
hlt
jle
mov
fwait
pop
mov
mov
dec
cmpl
push
rclb
cmp
cmpsb
test
shlb
test
std
cmpsl
jp
rolb
mov
in
test
fisttps
ret
sub
in
popf
mov
pop
dec
push
pop
mov
add
add
xchg
ja
add
mov
and
cmp
mov
pop
ja
xor
fwait
repnz
add
or
dec
scas
push
pop
fdivs
or
push
mov
testb
cmp
lea
sbb
jg
stos
mov
push
cmp
loope
mov
push
data16
stos
jg
leave
shl
cmpsl
into
int
mov
stos
ret
lcall
mov
mov
pop
lods
mov
outsb
dec
inc
pop
sbb
dec
fisttpll
mov
inc
ds
leave
dec
mov
fs
orb
icebp
insb
mov
out
shrl
rol
shr
test
xchg
mov
jae
pop
dec
ret
daa
jmp
les
loopne
sbb
push
cmp
add
aad
fldenv
fildl
mov
out
cmp
mov
xor
ret
dec
pop
sbb
scas
pop
xchg
repz
jmp
push
sahf
inc
mov
lds
sub
sub
mov
cwtl
mov
std
add
mov
and
and
test
adc
int3
leave
mov
push
out
hlt
lret
pushf
or
push
gs
cmp
xor
xchg
mov
in
add
popf
xchg
clc
push
dec
add
mov
sub
push
mov
std
imul
in
jae
mov
mov
sub
insb
or
jb
lds
push
and
xchg
in
cmp
mov
and
cltd
xchg
mov
pop
data16
stc
dec
and
push
lods
ss
das
dec
movzwl
mov
inc
inc
sub
add
outsb
or
rcrb
aam
or
dec
bound
stos
fwait
mov
shl
add
and
xor
jmp
cmp
add
fiadds
mov
inc
inc
cmc
jecxz
inc
sub
ljmp
nop
jle
lods
jle
sub
sub
rolb
xchg
clc
adc
pop
cli
addb
inc
adc
jnp
cmp
xchg
fildll
xlat
aaa
inc
xchg
xor
pop
into
scas
pop
mov
icebp
sub
test
adc
insb
or
jecxz
sti
in
stos
jnp
in
xor
leave
hlt
push
fisttpl
xchg
lahf
mov
cli
and
dec
test
negb
adc
and
push
clc
push
push
push
xlat
xchg
das
setne
cs
jns
adc
data16
int3
imull
rorb
lods
cld
push
jo
clc
xchg
andb
sbb
ret
scas
xchg
jge
dec
lds
rorl
and
cmpb
mov
sub
jae
dec
lock
dec
jg
popf
mov
adc
aaa
xchg
dec
lods
and
movsl
pusha
or
les
xchg
add
loop
xor
pop
ds
dec
or
cmc
notl
cmp
pop
les
or
sub
jns
sbb
scas
inc
imul
cmp
ror
popa
add
jo
pusha
jmp
sbb
jg
dec
in
dec
ret
outsl
and
cs
iret
adc
mov
jecxz
and
add
push
pop
in
or
sub
movsb
lds
mulb
mov
frstor
stos
or
xlat
cwtl
cld
xchg
ret
cmp
xchg
fdivrp
insl
mov
jge
push
push
mov
add
fcompl
popf
inc
idiv
cmp
gs
xchg
push
stos
dec
dec
adc
aas
out
and
sub
xchg
dec
jecxz
push
ss
adc
test
sub
test
jmp
sbb
stos
and
ret
stos
mov
mov
jns
xor
insl
call
xor
and
in
cmp
mov
lods
out
scas
fwait
loop
ficomps
cmp
sbb
mov
pop
xchg
push
dec
addl
std
add
in
repnz
adc
adc
inc
int
aam
jno
aad
sbbl
stc
daa
xchg
adc
outsb
arpl
lea
push
mov
dec
cltd
or
sub
sub
cwtl
sub
sti
ret
xor
mov
add
fisubs
jmp
dec
out
pop
adc
push
dec
xlat
or
inc
fst
sub
sarl
sbb
icebp
loopne
lock
or
dec
mov
leave
or
insl
pop
sbbl
cmpsl
dec
pop
enter
sub
in
add
jae
or
jb
inc
mov
xchg
and
je
stc
cltd
or
outsl
sbb
fcoml
loopne
ljmp
mov
mull
xchg
mov
push
fisttps
dec
fisubs
add
xrelease
dec
test
les
sub
mov
xor
jae
mov
xchg
xlat
lea
xchg
mov
rcrb
stos
out
sbb
scas
inc
sub
mov
pop
gs
cmpb
loop
sub
in
or
stc
aad
dec
leave
repz
fwait
push
les
mov
cmp
nop
mov
pop
xchg
push
repnz
dec
andb
add
mov
outsb
and
cmp
clc
or
and
cmp
repnz
mov
flds
jb
out
or
jae
xchg
ss
dec
jns
xor
cmpsl
push
nop
std
inc
push
aaa
mov
and
lcall
sub
sti
mov
sbbl
stos
movsl
add
out
pusha
or
mov
adc
or
xchg
mov
push
mov
mov
sub
cmc
in
inc
add
clc
xor
push
out
pop
xor
adc
das
imul
or
push
xor
add
aaa
mov
sbb
pop
mov
addb
ja
and
xchg
loopne
adc
and
std
gs
xchg
lods
test
jecxz
ljmp
xor
and
mov
repz
cltd
test
push
jge
out
sub
add
fcompl
hlt
insl
call
addr16
repz
loope
mov
jnp
lods
push
jle
imul
mov
mov
xor
sbb
sub
mov
scas
mov
or
cs
or
push
imul
xchg
out
rolb
nop
test
loop
cmpsl
mov
and
sbb
ja
icebp
dec
add
vmread
aam
or
fisubs
sbb
adc
int
fnstenv
adcl
xor
or
mov
loopne
idivl
xchg
insl
push
ss
cmc
xor
imul
mov
pop
add
jle
mov
aas
or
call
nop
and
cltd
fsubl
pop
jno
cmp
addr16
ja
sub
jge
mov
xchg
jns
mov
mov
aam
cmc
push
and
divl
scas
mov
mov
cmpsb
jmp
test
notb
lods
sbb
xchg
fs
test
jno
cmp
inc
fidivl
arpl
cmp
jae
sub
ljmp
adc
adc
fmuls
mov
sub
loop
les
loop
sbb
push
int
ja
push
xor
push
leave
xchg
aaa
ds
fnstsw
push
push
mov
in
dec
icebp
jp
jl
inc
fdivrs
xchg
pusha
int3
mov
and
in
xchg
sbb
xchg
push
shl
pop
fnsave
loopne
pop
add
add
mov
mov
scas
out
xchg
shll
or
xchg
push
mov
push
enter
dec
adc
sbb
fwait
loope
jns
aam
xchg
cmp
loope
icebp
out
inc
ljmp
daa
adc
pop
fcoms
or
cs
fxch
lcall
sbb
dec
xor
pop
je
ret
dec
mov
mov
cwtl
js
pop
shll
adc
adc
cmpsl
mov
pop
pop
sub
dec
cmpsb
out
mov
jb
adc
xchg
ficoml
dec
icebp
mov
pop
sbb
adc
mov
es
jge
jb
movsb
mov
dec
pop
incl
push
stos
pop
fwait
loopne
imul
shlb
pusha
cld
mov
xor
inc
fisubs
cwtl
xchg
cmc
daa
fiaddl
rclb
ret
add
push
insb
bound
xor
or
test
negb
divl
cmp
fadds
mov
cmp
mov
sbb
je
daa
cwtl
adcb
dec
popa
inc
sahf
es
outsb
jne
je
sbb
lret
gs
stos
jne
inc
pop
jmp
pop
add
aas
aas
std
mov
and
xchg
and
jecxz
daa
cld
inc
adc
fs
das
push
jb
sub
add
enter
push
outsb
and
shlb
sbb
or
pop
xor
fwait
jb
sbb
jae
cmp
stos
into
in
test
sti
das
xchg
dec
ret
mov
stos
fbld
sbb
xchg
outsb
xchg
je
adc
push
or
jmp
xchg
inc
push
imul
mov
insl
dec
jp
adc
sbb
cmpsb
xor
mov
jmp
lock
test
enter
test
xchg
mov
jnp
push
jge
in
nop
mov
push
mov
insl
jae
xchg
add
ficoml
mov
arpl
adc
dec
fsubs
inc
jb
push
push
test
pop
in
popf
iret
mov
ss
pop
or
jp
mov
sbb
cltd
aas
das
pop
xor
es
mov
lahf
sahf
dec
shll
pop
ret
or
adc
jge
xchg
lods
mov
push
xor
sbb
pop
lods
cmc
inc
ret
mov
push
out
fsubrs
add
frstor
mov
aaa
mov
pusha
in
push
aaa
aam
cltd
movl
mov
enter
cmp
cmpsb
data16
arpl
sbb
es
or
xor
mov
jne
test
lcall
test
xchg
and
insb
cld
movsl
lret
and
repnz
dec
clc
xlat
cmpxchg8b
or
mov
jmp
icebp
xchg
xor
cwtl
jae
popf
inc
icebp
out
adc
dec
push
outsb
cmp
push
int3
cli
call
leave
neg
jmp
pop
imul
and
jp
mov
jle
mov
lds
jnp
xchg
or
jg
imul
loope
mov
push
sbb
pop
and
jl
jecxz
dec
push
out
push
aam
lret
rclb
mov
jp
ds
jne
addr16
pop
shrl
push
into
insl
ja
jno
sahf
out
into
pop
mov
ss
jbe
cmpsl
xchg
xchg
fidivs
test
xor
gs
insl
xchg
mov
pop
sti
in
dec
adc
es
pop
dec
pushf
out
push
ficoms
and
adc
mov
xchg
fistl
xor
into
shll
imul
icebp
stos
stos
icebp
gs
lea
mov
sub
push
xor
jl
and
cmp
js
fwait
pop
push
sbb
test
xor
call
in
push
fldl
out
in
mov
ljmp
pusha
or
mov
mov
out
jl
sarl
mov
cwtl
jmp
adc
clc
jbe
jmp
fidivl
xchg
mov
mov
dec
push
insb
cmpsb
aas
cmp
inc
dec
imul
pop
fisubs
ffreep
cs
push
mov
cmp
ret
mov
add
pop
jne
and
iret
fcomi
jnp
cmp
adc
inc
and
cmpsb
mov
xor
xchg
pop
xor
sbb
pushf
sbbb
lock
insl
mov
mov
lea
jb
push
in
cmc
pop
mov
mov
xchg
cltd
lahf
test
icebp
fisubrl
add
pop
ds
incl
pop
in
addb
arpl
repz
jge
jns
xlat
mov
mov
aas
mov
xor
pop
sahf
lock
cmp
mov
cmp
xor
dec
sbb
jmp
xchg
mov
xchg
repz
xchg
sub
out
out
vpcmpeqb
jmp
cwtl
or
sub
inc
jne
jge
rorb
dec
insb
ljmp
jp
ret
push
adc
add
setp
xchg
mov
ret
imul
cmp
cmc
sbb
xchg
popf
mov
in
push
inc
icebp
fisubl
xchg
test
pop
lcall
out
sub
fsubrp
mov
jb
pop
stos
mov
xorl
sbb
push
pop
cmp
out
sarl
mov
add
push
inc
pusha
imul
mulb
push
dec
inc
sub
mov
cmp
push
or
scas
mov
xchg
insl
fwait
push
jb
xchg
sarl
dec
lsl
jns
xchg
fldl
jmp
jb
and
repnz
mov
sti
shll
ljmp
mov
outsb
jno
stc
cs
fimull
or
inc
mov
jo
popa
push
ss
movsb
repz
bound
hlt
sbb
stos
xor
cmp
dec
dec
xchg
add
cmpsb
into
inc
js
loop
jns
scas
mov
lea
icebp
jno
sub
push
stos
or
cld
leave
loopne
imull
xor
xchg
cli
lods
xor
pop
mov
nop
cmp
out
sbb
ret
add
pop
xor
inc
daa
inc
ljmp
cltd
dec
push
lea
inc
inc
test
xchg
out
push
add
adc
sub
xor
jbe
aam
lock
ds
mov
jge
iret
arpl
scas
and
lock
xchg
jl
add
sub
and
out
mov
xchg
fldenv
sub
mov
xchg
fwait
into
jg
int3
push
pop
push
add
jnp
in
je
lea
xchg
push
inc
jbe
jb
mov
scas
sbb
xchg
pop
mov
sahf
pop
jp
or
xorb
mov
add
pop
jmp
out
fimull
sub
js
into
sub
jns
ret
lock
loop
push
test
push
pop
mov
insl
dec
insl
add
clc
les
cmc
sahf
movsl
rcrl
push
pushf
mov
mov
push
jl
ljmp
data16
xor
or
nop
pop
or
loope
sub
xor
arpl
jb
inc
cltd
orb
xorl
push
mov
xchg
xor
and
adc
xchg
icebp
jno
jp
ret
xchg
ret
jae
mov
insb
movsl
hlt
lods
and
test
test
call
push
sti
mov
jns
inc
push
hlt
lock
mov
pop
push
fisttpll
cmp
cli
mov
dec
mov
jbe
stos
test
jl
sub
mov
fisttpl
mov
aaa
roll
adc
or
cmp
sbb
out
mov
cmpsl
fdiv
mov
addr16
add
stc
pop
fistpl
pop
xor
or
add
mov
arpl
ret
mov
nop
std
in
ja
movsl
xchg
mov
sbb
jg
xchg
call
pop
push
int3
clc
and
sbb
mov
ljmp
sbb
ljmp
mov
pop
in
insl
push
mov
mov
mov
fisttpl
nop
fisttpl
js
out
leave
cmc
pushf
stos
fwait
mov
mov
xchg
aad
rol
dec
add
test
mov
inc
aas
lahf
mov
push
sarl
std
int3
dec
mov
inc
pop
mov
adc
xorb
mov
call
jmp
pop
jmp
dec
insl
add
push
jne
cmp
negb
jb
mov
jge
xchg
jle
data16
popa
mov
hlt
mov
mov
int
lea
jo
dec
cltd
push
cmp
fcmovnu
jnp
loope
mov
fmuls
add
aas
jnp
cwtl
outsl
mov
clc
out
adc
mov
imul
mov
adc
inc
and
or
pop
pop
bound
nop
xchg
fldcw
lea
bound
dec
jae
xchg
js
ja
pop
leave
add
movsl
and
cmpsl
leave
subb
je
push
cmpsl
inc
and
lds
mov
insb
loop
cmp
in
dec
dec
add
daa
bound
shrb
push
mov
mov
iret
arpl
lea
sahf
push
mov
cld
lret
cli
cmp
mov
mov
cli
lds
jl
xor
pop
xchg
int3
lods
pusha
ss
fdiv
jmp
sbb
stc
pcmpgtw
lcall
xor
fistpl
lods
test
sbb
loop
imul
jecxz
loop
adc
sbb
jmp
cmp
mov
mov
movsb
daa
jno
pop
fimull
push
mov
pop
shrb
push
cmp
lcallw
pop
pushf
pop
sbb
jg
arpl
mov
push
or
or
in
push
or
push
inc
mov
dec
cmp
in
popf
fdivl
inc
pushf
xor
int
jle
push
sbb
rcrb
sbb
out
mov
sbb
mov
sub
hlt
lahf
sbb
push
fbld
fisubrs
addr16
sbb
loop
addr16
mov
or
jne
jg
mov
dec
inc
or
cmp
pop
addl
rcrb
sub
lods
jmp
push
jecxz
loope
sbb
cmpl
pushaw
data16
sti
adc
loope
inc
movsb
and
or
test
add
aam
xor
xchg
jl
fwait
mov
pop
ja
jns
push
in
mov
ss
pop
cmp
andl
lret
ficoms
inc
call
stc
pop
cmp
push
cwtl
cmpb
ffreep
fnstenv
xor
fiadds
xchg
std
imul
fimull
jg,pt
lods
jge
fs
into
xchg
leave
xorps
daa
push
and
mov
jle
iret
inc
cmp
mov
les
fcoml
stos
inc
clc
mov
xor
push
int
mov
pop
fimuls
cmp
dec
sbb
pop
movzbl
inc
mov
xsavec
cmp
and
pop
xchg
xor
stos
fdivr
sbb
sub
jg
xor
into
or
xchg
mov
lds
popa
in
mov
push
mov
stos
ret
stos
push
mov
dec
xchg
fnstsw
mov
addr16
mov
ljmp
xchg
scas
lea
and
ss
jge
and
fs
out
cmp
xchg
jle
cmp
add
pop
je
jmp
stos
inc
sub
dec
jo
fucomp
out
pop
mov
inc
insl
inc
adc
fdivs
bound
pop
mov
pusha
sbb
dec
adcb
mov
mov
ds
mov
lretw
pop
push
fistps
add
adc
add
inc
inc
mov
jge
jo
jbe
push
jns
cmp
popa
or
and
test
lret
mov
sub
outsl
sbb
lahf
mull
xor
hlt
call
mov
xor
and
fsts
xchg
mov
cmpl
cmc
mov
rcrl
mov
ret
cmpsl
scas
pop
fadds
bound
les
outsl
jl
mov
mov
pop
jb
repnz
push
fs
stc
ljmp
cmp
jb
adcb
inc
cmp
loop
insl
pushf
imul
push
mov
dec
dec
fwait
mov
pop
ja
inc
or
repnz
push
xchg
pusha
pop
jo
pop
add
xchg
enter
or
jns
dec
mulb
mov
dec
adc
flds
inc
inc
and
cmpsb
lret
sbb
sbb
lahf
xchg
nop
push
sub
daa
mov
std
sbb
jmp
aaa
dec
xor
arpl
rcl
pop
dec
cli
xchg
jbe
jns
scas
out
inc
sub
jg
mov
xor
fcomp
pop
pop
lret
ja
movsl
repnz
push
iret
les
mov
aas
nop
and
and
push
sbb
mov
in
pop
outsb
in
adc
cmpsb
fs
movsl
pop
jnp
adc
cmp
je
adcl
ficomps
dec
xchg
push
jo
int
mov
icebp
int3
and
pop
or
aas
sbb
or
mov
adc
lods
out
aad
fwait
mov
adc
scas
arpl
cwtl
in
ljmp
sbb
xchg
xchg
and
push
lds
test
xor
insl
hlt
movsb
ficoml
pop
sub
sbb
cmp
pop
sub
mov
mov
sub
shrb
or
dec
pop
push
daa
divl
mov
lcall
and
mov
cmp
addl
dec
lcall
ja
dec
sub
repnz
mov
in
int3
xor
fistps
jns
cwtl
add
test
in
mov
inc
and
test
or
cmpsb
push
add
and
psraw
ret
mov
jae
outsb
lods
mov
pop
xor
repz
cmc
syscall
test
push
cmpsb
mov
mov
dec
movsb
inc
frstor
or
jl
andl
lret
inc
and
jnp
mov
mov
clc
mov
imul
inc
sahf
pop
iret
es
push
and
adc
or
ljmp
lahf
or
mov
shrl
mov
fsub
ror
sub
insl
test
bound
arpl
in
mov
xchg
jg
pop
or
push
mov
insb
cmovbe
aam
lds
mov
test
fwait
push
jecxz
or
hlt
cmc
int3
push
popf
mov
cmp
sbb
push
add
psrlq
mov
lcall
mov
shlb
xor
out
push
sbb
cmpsl
xchg
sub
cmp
inc
das
xor
jmp
xchg
popf
pop
dec
mov
add
icebp
sbb
adc
or
in
test
and
bound
cmp
popf
sbb
sub
jns
outsl
push
xor
jbe
js
rolb
push
ds
jno
ret
std
data16
inc
xchg
xchg
or
cli
loopne
adc
xchg
or
sbb
cwtl
pop
jns
stos
cwtl
adc
push
or
icebp
loope
lds
pop
arpl
popf
pop
fldl
pop
rolb
inc
fsubp
aam
out
fidivs
xchg
sub
scas
jg
xor
push
in
out
mov
pop
sbb
sbb
xchg
mov
jae
stos
divl
rol
mov
cmpsl
aad
js
jp
jno
js
stc
push
mov
aad
cmp
in
int3
leave
loope
mov
mov
push
cwtl
test
mov
js
push
fimuls
loopne
xchg
cld
add
negl
rcrl
mov
mov
adc
iret
xor
pop
jns
adc
or
and
out
xor
jo
xchg
xchg
aam
lods
test
inc
aad
sahf
aam
out
xchg
pop
and
mov
in
add
addr16
push
push
ret
out
das
rcrb
leave
mov
fnstenv
cmp
and
sub
ljmp
fcompl
pop
jbe
fdivrl
aad
jle
inc
inc
movsb
cld
mov
jle
mov
or
inc
pop
mov
mov
dec
xor
out
sbb
inc
xor
test
idivb
fsubrp
test
jbe
in
mov
lret
inc
pusha
add
sarb
mov
out
adc
mov
dec
and
or
add
imulb
orb
enter
push
adc
dec
negl
adc
mov
xor
and
mov
popa
dec
scas
jo
push
xor
add
mov
repnz
dec
cld
lret
jp
or
out
rcll
pop
mov
mov
out
cmp
pusha
push
cld
enter
jae
enter
sbb
jmp
cmp
cmp
dec
inc
mov
fwait
inc
cwtl
gs
pop
mov
in
jmp
roll
or
xchg
nop
jae
mov
pushf
dec
rclb
cltd
mov
in
and
imul
jnp
jle
dec
jo
push
rorb
inc
adc
mov
es
inc
xor
dec
or
dec
test
xlat
fs
cmp
mov
daa
add
lret
inc
pop
push
sbb
inc
ret
scas
sarb
mov
xor
mov
rorl
dec
lods
aad
mov
imull
mov
lds
pop
cli
cmp
mov
xchg
hlt
ja
pop
xchg
lds
and
shr
in
cmp
lret
xchg
mov
inc
sbb
js
ds
rcll
push
mov
xor
xchg
cmp
mov
add
daa
scas
mov
jg
iret
stos
mov
xor
lods
mov
aam
push
hlt
leave
xchg
dec
add
leave
stos
xchg
add
jns
xorl
frstor
cli
mov
mov
pop
stos
andl
jmp
ret
mov
or
notb
sub
test
ret
dec
push
inc
movsb
jl
add
jne
jp
xor
rorb
fsubl
jae
lds
xor
js
stos
push
fidivrs
push
inc
imul
mov
ja
push
fdivs
xchg
fcomi
adc
cld
stos
dec
mov
lret
in
icebp
xchg
mov
call
cld
daa
mov
xor
xchg
add
ljmp
xchg
ljmp
andb
das
push
iret
rep
or
sub
push
icebp
push
into
loope
mov
push
cmp
or
nop
mov
dec
adc
add
psadbw
jb
mov
sub
mov
cltd
sub
std
dec
imul
jo
xor
lea
sbb
stos
inc
and
xlat
ja
pop
scas
pop
lock
mov
dec
sub
arpl
pop
das
imul
pop
sti
dec
or
roll
ret
and
jg
jnp
pop
clc
pushf
ret
lea
cmp
mov
adc
sub
repnz
mov
jl
enter
popf
push
mov
and
js
sbb
mov
ror
inc
mov
jno
pop
push
cmp
loop
lcall
out
adc
add
daa
and
call
ds
mov
jl
or
inc
les
fisubs
int3
ja
xchg
mov
das
inc
xchg
fdivs
sub
pop
pop
dec
add
gs
ficoml
jb
fwait
mov
testb
fucom
bound
cli
arpl
pop
inc
inc
mov
dec
insl
outsb
or
test
xor
add
sub
lcall
ss
lea
cltd
cmp
and
rorb
and
pop
cmp
insl
jge
sarl
mov
jmp
addr16
jns
xchg
cld
aam
insb
ss
cltd
pop
inc
iret
and
mov
int
nop
cmp
xchg
mov
lret
movsb
sub
imul
pop
push
jbe
aad
test
pop
push
sbb
leave
aam
scas
xor
mov
jge
gs
pop
and
adc
nop
aad
cld
sbb
lock
adc
push
push
mov
push
sbb
int3
sbb
lock
movsl
jecxz
sub
sbb
rolb
mov
adc
push
and
push
sub
test
cmp
inc
repz
or
stc
aad
aaa
fists
pop
stos
ret
pop
fcomi
mov
mov
or
mov
das
mov
and
cmp
imul
pop
lahf
test
sub
pop
or
xor
loope
test
and
sbb
cmpsb
pop
dec
sbb
add
push
aam
nop
push
or
xrelease
and
test
mov
pop
mov
jae
bnd
mov
jns
es
sbbl
stc
jns
pop
in
sub
sub
scas
jno
lods
pop
roll
mov
push
lock
add
jp
adc
aam
pop
push
inc
jno
out
ja
and
add
fldt
cmpsl
inc
cmpsl
mov
mov
cmpsl
xchg
aad
mov
daa
repz
cmp
mov
in
inc
mov
sbb
or
cmp
pop
xchg
dec
fcoms
or
pop
dec
mov
cltd
gs
dec
jecxz
xchg
vhaddpd
out
cmp
push
ret
mov
adc
cmpsb
pop
cmp
out
aad
int3
ret
xlat
adc
adcl
mov
scas
push
jmp
mov
aas
inc
outsl
xchg
xor
rcll
xchg
cld
mov
xchg
adc
cmp
pop
imul
dec
mov
ljmp
into
xchg
iret
pop
adc
mov
hlt
push
fistps
dec
jle
push
add
mov
mov
clc
icebp
dec
xchg
push
in
cld
pop
lea
inc
inc
xor
rolb
dec
inc
int
repnz
mov
out
fcomps
outsl
sbb
sahf
imul
jb
mov
adc
stos
movsb
idivb
sub
push
loope
push
aas
mov
aaa
sub
stc
add
inc
sahf
call
aas
insl
loopne
push
pop
push
push
ret
xor
in
stc
inc
in
aam
stos
sbb
lods
mov
ficompl
fdivs
push
add
incb
lcall
cmp
jno
mov
xchg
out
mov
lods
jnp
scas
out
repz
or
or
mov
repnz
or
cs
lret
inc
pop
xchg
jne
iret
and
cwtl
jae
inc
shr
and
mov
xorb
push
pop
pop
insb
mov
shrl
cmp
push
inc
sub
pop
pop
inc
subb
fistpll
jecxz
xchg
leave
imul
sahf
in
mov
aas
inc
push
rol
dec
xchg
add
sub
mov
mov
jge
and
or
inc
and
hlt
pop
cmp
dec
or
test
cs
inc
inc
dec
cli
in
mov
rolb
fcoml
push
push
jl
adc
sub
rep
pop
imul
ficompl
pop
sbb
into
js
stos
push
push
aaa
test
scas
adc
mov
push
sub
popf
sti
inc
pop
outsl
jb
xor
mov
mov
or
mov
sahf
push
push
sti
movsl
rorl
jp
inc
sbb
std
adc
loopne
ret
sbb
adc
lret
or
stc
lods
xchg
call
xorb
or
outsl
cmp
shl
push
mov
subl
test
mov
enter
mov
dec
scas
push
enter
mov
pop
popa
sub
ds
push
dec
mov
mov
mov
inc
add
imul
sub
xchg
push
ljmp
jge
arpl
dec
lret
add
cltd
lds
push
cmp
jmp
jecxz
push
xor
int
gs
in
or
imul
push
test
popa
push
scas
testl
testl
je
cmp
enter
test
sbbl
push
fildll
pushf
arpl
mov
ss
fstpt
ret
sbb
mov
js
lcall
je
add
fisttps
push
das
inc
push
and
ja
xor
jp
mov
or
mov
xchg
pop
mov
dec
out
sti
sub
psraw
mov
nop
cmp
imul
push
inc
in
movsb
push
mov
sub
cli
xchg
xor
add
imul
pop
xchg
fsubr
xor
mov
sub
lock
and
pop
ss
xor
pushf
sbb
gs
and
fbld
hlt
aas
sbb
cmp
xchg
jb
or
adc
testb
add
popf
jb
adc
imul
gs
xchg
xchg
lret
pop
and
fwait
mov
repz
push
bound
movsl
sbb
dec
lock
jecxz
inc
lods
test
jae
dec
lret
adc
push
repz
jbe
cmpl
stc
out
popf
xchg
mov
jae
adc
cmp
fs
dec
cmc
xchg
rcrl
ret
push
pushf
jae
notl
sbb
inc
cmp
insl
or
push
mov
pop
and
cmp
dec
push
inc
lea
das
xchg
sub
stos
mov
pushf
and
fidivrs
mov
test
arpl
mov
or
in
mulb
icebp
arpl
enter
and
imul
push
ds
xchg
xchg
cmp
push
aas
loop
jbe
aas
inc
mov
out
lret
xchg
mov
fldt
sub
das
out
mov
popf
and
mov
jl
jp
jnp
pop
int
mov
add
fs
ds
outsb
sbb
mov
dec
iret
mov
shr
or
lea
push
xor
lods
and
inc
mov
les
movsb
dec
pop
pushf
fwait
xlat
xchg
xchg
test
div
loope
movsl
test
mov
test
sub
cmp
jns
sbb
xor
and
out
outsb
sbb
pushf
inc
fsubl
mov
adc
test
push
mov
xchg
clc
sbb
roll
mov
mov
jno
push
xor
mov
inc
es
in
mov
add
popf
sbb
dec
mov
or
arpl
or
adc
insl
push
inc
mov
dec
pop
arpl
mov
and
ret
ss
jl
xchg
cmpsl
pusha
and
add
and
pop
rclb
and
sbb
stos
lock
mov
sub
orb
ljmp
mov
pop
push
ret
dec
xlat
sbb
out
or
out
dec
jl
xor
dec
repnz
xchg
movsb
mov
inc
cmp
mov
repnz
add
aas
pop
jo
in
loope
push
andb
sbb
push
scas
cmp
shlb
ret
mov
fidivrs
mov
and
pop
push
or
cwtl
mov
mov
ret
sub
sbb
es
or
inc
xchg
inc
dec
cmp
cltd
xchg
stos
push
cs
or
outsl
lret
pushf
add
ret
xchg
shr
sub
pop
jmp
shrl
mov
imul
lds
xchg
mov
inc
xor
and
aaa
fsubrl
jnp
push
mov
addr16
push
and
fwait
mov
sbbl
bound
pop
or
insl
clc
dec
in
push
inc
inc
xor
mov
clc
in
xor
cmp
ds
ljmp
push
scas
dec
push
mov
push
xchg
fstpl
mov
jmp
add
insl
dec
inc
mov
sub
pop
fnsave
jae
aaa
adc
cmp
sub
xor
arpl
jge
mov
jecxz
xor
pop
sub
int
shrl
push
push
popf
xchg
mov
jp
sub
sbb
cmc
and
mov
mov
cmp
mov
dec
jnp
jns
mov
addb
jo
and
sub
jnp
pop
out
mov
stos
leave
cli
fs
adc
dec
add
pop
and
in
jae
lcall
gs
jns
clc
dec
add
dec
jbe
std
mov
inc
cmp
or
pop
test
mov
mov
scas
inc
out
mov
push
xor
imull
sbb
xor
test
mov
xchg
mov
std
daa
mov
add
jnp
pop
repz
mov
or
insl
xchg
jns
pop
lret
mov
jne
pop
add
sbb
mov
jo
cmp
dec
imul
in
mov
insb
mov
or
int3
rorl
int
xorb
pop
hlt
add
or
rorl
xchg
push
les
scas
cmp
dec
mov
jge
push
pushf
adc
mov
fimuls
jae
mov
xchg
data16
sbb
pop
pop
inc
aas
jne
xchg
fsubrl
in
call
inc
inc
sti
xor
sbb
cmp
adc
xchg
enter
add
aam
pop
push
mov
xchg
inc
xchg
and
xlat
je
cmpsl
dec
mov
aas
hlt
jecxz
or
and
sub
dec
leave
xor
sbb
sub
cmpsl
inc
cwtl
incl
pushf
push
jbe
pop
xor
dec
push
test
popl
mov
inc
sbb
shll
jecxz
or
jge
adc
sbb
aam
test
xor
imul
pop
pop
xor
test
adc
es
lea
dec
popf
cmpl
and
movsb
xor
push
pop
inc
add
and
lock
and
xor
mov
dec
pop
gs
fcomi
repnz
out
push
adc
iret
movsb
bound
cmp
lea
ljmp
mov
cmp
pop
sbb
add
xchg
jo
jecxz
jecxz
out
je
and
sub
jne
bound
imul
or
movsl
std
mov
outsl
inc
pusha
loope
jo
or
push
cmc
sahf
imul
aas
cmpsl
push
shrb
aas
mov
ds
mov
sbb
xchg
gs
shrb
dec
xor
cld
cmpsl
add
or
cmp
clc
xchg
enter
sbb
mov
dec
hlt
xor
sbb
call
push
fstl
movsb
adc
lea
lods
dec
imul
jnp
lods
imul
mov
push
std
cwtl
add
insl
add
add
push
lods
int
fnsave
hlt
out
icebp
fstpt
imul
imul
stos
lahf
pop
or
jg
sub
mov
sbb
mov
shr
pop
lds
or
push
in
xor
jmp
aaa
clc
aas
jp
mov
les
and
test
mov
icebp
iret
nop
mov
loope
adc
push
decl
mov
mov
shrl
daa
sarb
jns
cmp
push
pop
test
sti
mov
gs
add
mov
pusha
cmc
data16
dec
aas
sub
aam
fldt
lock
in
in
cmp
xchg
sub
icebp
gs
pop
les
out
scas
lds
pop
inc
mov
cmp
or
stc
push
cli
sub
and
mov
sbb
xchg
lret
xor
jle
ret
bound
and
and
and
sbb
mov
adc
orl
cltd
lcall
iret
xor
clc
icebp
jmp
mov
sbb
aad
js
faddl
add
inc
dec
outsb
mov
out
imul
fwait
add
sbb
call
dec
cmovb
sub
xchg
pop
cmp
jns
popf
or
test
xor
stc
or
add
and
cmc
mov
inc
mov
pop
pop
xor
aam
arpl
xor
cmp
imul
pop
das
dec
outsb
dec
pop
enter
jnp
ljmp
adc
xchg
pop
mov
in
pop
jecxz
adcb
jne
test
out
loopne
jge
mov
icebp
lea
ret
ret
dec
lock
mov
mov
addr16
aam
sub
or
scas
dec
push
cmp
insl
push
push
aas
mov
cltd
sub
es
sbbl
mov
push
and
addr16
aam
stos
js
cwtl
pop
sub
insb
pop
mov
jmp
inc
or
add
ljmp
ljmp
aam
inc
enter
or
sbb
popf
pop
nop
sub
insb
push
cmp
daa
outsl
hlt
xchg
push
push
lret
bound
rclb
or
pop
loop
push
insl
mov
xchg
shll
aad
dec
sub
push
pop
mov
xchg
aam
popa
jl
xchg
cli
xchg
adc
or
mov
pop
adcb
mov
stos
into
dec
aaa
mov
push
mov
dec
adc
scas
jae
adc
adcl
idivb
into
push
icebp
dec
add
xchg
jne
imul
insl
mov
ds
jae
out
and
div
push
fstpl
loope
pop
daa
enter
adc
shll
mov
xchg
pop
cwtl
pop
push
inc
xor
pushf
cmpsl
int
xchg
jns
xchg
mov
jmp
or
xlat
lcall
or
add
mov
lcall
test
sbb
lret
xor
sbb
fcomps
sbb
popf
or
stos
sub
sbb
adc
addr16
push
push
mov
test
push
push
pop
cli
inc
movsl
out
mov
repnz
pop
pushf
mov
push
dec
fsubrp
stos
mov
and
jae
aaa
test
xor
rolb
mov
xor
add
in
inc
mov
jnp
jbe
pop
and
push
cs
scas
adc
scas
sub
and
ja
cmpsl
aaa
push
outsl
xchg
std
test
shrb
bound
mov
shlb
mov
in
test
pusha
int3
lea
sbb
cltd
and
flds
jecxz
stos
inc
sbb
outsb
ja
rclb
dec
das
dec
push
testl
inc
popa
fnstenv
pop
movsb
scas
inc
push
xchg
adc
jno
fsubl
lea
jb
cmp
daa
jmp
lret
xor
xor
addl
or
lds
sbbb
out
add
inc
in
jmp
jb
xorb
cmp
inc
mov
lods
cmp
insb
add
jle
or
or
xchg
jmp
out
xchg
cmpl
inc
push
sbb
test
insb
mov
push
aam
cmp
into
mov
loopne
inc
subl
mov
neg
jmp
mov
call
fs
lret
mov
xchg
xor
inc
fcomp
orl
dec
mov
movsl
outsb
aas
pop
loope
mov
mov
inc
or
mov
fwait
into
add
ss
pop
imul
push
mov
jns
jl
xor
cmp
cld
pop
pushf
insl
lods
repz
lret
lock
mov
sbbb
ffree
testl
test
insl
or
scas
enter
in
and
jecxz
pop
rcll
mov
jo
lret
mov
mov
add
jg
shl
fwait
jae
and
mov
rorl
loopne,pn
clc
je
lock
rorl
xchg
test
push
cmp
sahf
mov
fistpl
out
ja
push
stos
pop
rcr
cmpsl
jno
iret
inc
lods
mov
xchg
mov
out
mov
nop
mov
loopne
push
test
arpl
out
dec
ds
mov
lret
test
pop
fdiv
and
fsub
cld
sub
add
cmp
sub
adc
cs
or
shrb
imul
mov
dec
data16
fsub
daa
or
cmc
daa
fildl
jns
sbb
xor
lods
mov
divl
hlt
push
clc
call
jmp
or
aaa
sub
int3
lds
aas
das
data16
rcrb
bound
adc
lret
test
pop
loope
or
scas
push
lods
std
inc
bound
cmp
sbb
and
dec
loope
cmp
dec
mov
mov
mov
jo
jle
out
sbb
lsl
in
mov
mov
cltd
and
stos
inc
ds
inc
mov
pop
adc
lcall
aad
sti
mov
fwait
out
btr
mov
adc
xor
sarb
inc
push
movsb
lock
ljmp
aam
lods
xchg
scas
dec
xchg
repz
push
push
jae
ja
lahf
cli
sub
xorb
inc
jmp
int3
adc
repnz
cmpsl
cmpsb
leave
ret
push
xor
push
nop
jo
fsub
addl
mov
jbe
adc
mov
push
push
xchg
or
subl
adc
sarb
xlat
icebp
inc
jb
mov
fnstcw
xchg
popa
push
out
mov
movsl
fiaddl
sahf
stc
xchg
inc
and
jae
pop
or
das
jne
not
xor
dec
sub
sbbl
inc
je
loopne
jnp
xchg
insl
xchg
test
sbb
test
push
test
das
imul
rcl
out
push
ret
dec
mov
imul
fwait
movsb
repz
into
ret
leave
push
lcall
cmp
jo
and
lds
mov
div
lods
add
nop
push
movsb
xchg
xchg
cmpsb
sbb
popa
repnz
mov
xchg
pop
dec
ret
outsb
daa
dec
cmc
bound
mov
cmp
ja
xchg
psubsw
clc
aad
push
xchg
inc
mov
inc
push
dec
and
mov
cmp
push
mov
and
cwtl
adc
inc
mov
xchg
dec
mov
sbb
push
mov
ficoms
aas
in
mov
push
aaa
mov
xor
adc
jmp
lods
andb
daa
arpl
push
dec
stc
mov
dec
andb
addr16
fdiv
in
mov
jno
add
xchg
int3
loope
gs
add
cli
sbb
ds
jge
mov
mov
push
xchg
cmpsb
pusha
jmp
into
and
shrl
cmp
aas
jg
aam
fists
push
dec
cli
mov
add
insl
adc
pop
cli
rcr
xor
loop
arpl
in
in
das
jno
mov
lcall
fcoml
test
dec
cltd
push
aas
fsubs
or
aaa
push
push
movsl
mov
icebp
gs
xchg
adc
dec
push
aas
inc
inc
lods
dec
arpl
adc
pop
or
sti
leave
cli
lea
cmp
int3
movsb
fildl
pop
add
outsl
shll
or
aad
sbb
sub
sub
outsl
aam
cmp
sbb
dec
mov
xlat
and
in
shr
and
leave
mov
and
lock
or
popf
mov
inc
dec
jbe
lret
pop
loope
movzbl
insb
loop
nop
mov
sub
pop
js
popf
cmp
mov
into
xchg
js
es
mov
jo
gs
add
add
xchg
mov
sub
inc
jne
mov
lods
mov
fbstp
and
add
into
sti
push
push
push
mov
inc
into
insb
popf
mov
sarb
inc
xor
fsubr
push
mov
ljmp
xchg
mov
outsl
mov
flds
nop
sbb
inc
call
addl
sub
in
push
lock
inc
js
xchg
ret
adc
pop
jge
out
add
in
jecxz
push
pusha
nop
push
int
sub
leave
stos
incl
in
dec
add
cld
add
mov
fidivl
push
out
loop
out
test
rol
fcoms
dec
cld
xorl
ret
jmp
adc
add
loope
or
ret
xchg
insb
cld
out
fwait
ss
sbb
xor
mov
xor
stos
mov
cmp
adc
loop
lcall
daa
sahf
dec
jmp
jnp
push
cmp
aaa
jle
aas
icebp
push
push
fdivrs
xchg
lret
mov
mov
inc
aad
mov
mov
jecxz
add
mov
pop
and
xor
imul
aaa
ja
imul
bound
sub
xchg
mov
call
std
pop
mov
push
repnz
call
test
ja
inc
cltd
xchg
fwait
repz
xor
ja
or
movsl
adc
sub
mov
stos
cmpsb
xchg
mov
or
jne
out
addl
sbb
cld
sbb
aam
push
inc
mov
and
mov
lds
sbb
jp
or
cli
mov
mov
cmpl
push
ja
adc
and
inc
mov
jns
fdivrs
and
in
lret
xchg
loop
daa
adc
dec
jb
cli
mov
or
xchg
int3
clc
sbbl
xchg
or
aam
je
cltd
inc
sub
sub
repnz
jne
ja
dec
push
ds
inc
pop
aas
inc
push
clc
push
inc
jecxz
jmp
lods
xor
ret
sbb
lods
pop
call
xor
rorb
aam
and
push
pop
jae
sbb
arpl
xchg
pushf
push
pop
aas
jle
cmp
and
and
inc
fisttpll
xchg
jg
inc
test
cmp
jl
repnz
jl
jmp
setae
mov
mov
movsb
and
rclb
dec
xor
rorl
call
lods
adc
jae
push
insl
jae
aam
mov
les
adc
inc
imul
aas
xor
aad
leave
out
pusha
push
mov
inc
in
ret
and
fdivp
mov
pop
pop
sarb
adc
xchg
and
pop
clc
dec
insb
loopne
mov
rcrb
pop
jbe
iret
cmp
jmp
mov
cld
ror
sbb
mov
mov
xchg
sbb
mov
bound
leave
dec
loopne
xchg
push
mov
mov
fbld
sbb
xchg
leave
and
dec
mov
mov
jecxz
icebp
sarl
adc
call
adc
sub
stos
mov
clc
jmp
dec
insb
fisubl
in
inc
mov
cmp
dec
dec
add
xchg
fyl2x
push
mov
bound
jp
subl
jp
push
jmp
or
mov
ret
lahf
stos
lret
pop
jecxz
or
lea
sbb
xchg
cld
pop
repz
sahf
push
pop
push
cmp
xchg
icebp
ret
sub
fisubl
jae
aam
xchg
stos
call
mov
mov
mov
sbb
fnstcw
mov
lret
int
sub
stc
pop
mov
pop
std
sahf
push
stc
and
cmc
ficoml
or
out
adc
add
mov
test
mov
jnp
jle
inc
cmp
dec
cld
sbb
mov
in
outsl
pop
add
cmpsl
addr16
movsl
add
mov
jmp
dec
test
ret
rcrb
ret
das
aas
out
call
cwtl
pop
push
int
pop
es
nop
xor
cmp
scas
stc
and
int3
fcomp
das
jle
das
aaa
xchg
jle
lret
out
in
add
xor
fldt
jl
dec
popf
push
jmp
jno
test
xor
scas
sbb
dec
pop
sub
push
lret
push
stos
test
pop
fs
pop
push
movsl
add
outsl
sbb
cmpl
fisubrl
mov
lcall
test
fsub
jbe
cmpsb
pop
and
cld
cmp
pop
ja
out
subl
jno
mov
jg
push
frstpm(287
call
cmp
sbb
stc
push
add
jecxz
dec
sbb
push
aad
stc
into
lea
hlt
inc
loop
xor
sub
pushf
sbb
lea
cmc
fdivrs
mov
out
sbb
stc
pop
inc
cmp
mov
inc
loopne
mov
jge
dec
rorb
in
pop
out
push
or
xchg
imulb
out
cltd
lret
rcll
in
xchg
lahf
jne
inc
shlb
push
sarb
sub
ljmp
pop
and
imul
dec
shrl
pop
ficoms
js
std
shlb
cmp
fnstsw
push
flds
add
or
pop
push
les
mov
fistpll
imul
xchg
dec
mov
add
and
insl
cmpsl
jl
imul
test
clc
sbb
bound
xchg
sbb
movsl
pop
out
scas
ss
pop
in
addr16
lods
out
sti
nop
mov
sub
push
loope
outsl
adc
inc
rcll
leave
and
sarb
adc
cmpsb
push
xor
sbb
test
aaa
mov
inc
ja
out
out
repnz
adc
adc
fs
lds
cmpsb
and
jns
mov
push
ds
pop
push
sbb
xchg
pop
in
dec
jo
mov
and
cmpsb
jns
sahf
xor
les
sub
ja
fdivrp
out
das
fisttps
in
mov
fdivl
cmp
adc
ja
sub
pop
mov
cld
add
and
push
aam
test
and
leave
xchg
dec
xchg
lahf
sbb
dec
pop
cmp
ret
pop
mov
mov
jne
or
inc
xor
add
or
dec
addl
mov
cmc
test
call
addr16
mov
loop
or
inc
push
pop
mov
xor
stos
push
inc
js
icebp
mov
mov
fidivl
fsub
cmp
mov
cmp
xchg
cmp
das
mov
sub
mov
and
xchg
sub
jp
and
adc
sbb
loop
fisttpl
je
sub
fdivs
movsb
dec
js
cmpsb
clc
in
loopne
repz
pop
sub
jb
mov
adc
mov
sub
sub
mov
xchg
addr16
test
jp
leave
fdivl
sbb
imul
mov
pop
xchg
dec
mov
dec
pop
enter
add
mov
scas
jmp
push
mov
stc
pop
mov
xchg
mov
push
aad
repnz
add
stc
movsb
cltd
inc
cld
les
aad
fwait
aad
pop
in
xchg
lods
clc
loope
rorb
mov
jecxz
cmp
sub
movsl
scas
jp
ret
add
shrb
xlat
or
xchg
pop
adcl
hlt
movsb
jmp
xchg
shlb
jle
out
aas
push
mov
jle
add
sbb
jnp
popf
dec
fwait
stos
testl
cli
jp
inc
push
or
out
or
xor
addr16
call
fs
mov
sbb
aad
aas
jl
sarl
sub
mov
inc
out
mov
xor
inc
jp
pop
mov
rcrb
dec
leave
jbe
arpl
xchg
sbb
fidivrs
iret
ljmp
data16
enter
ss
imul
xchg
sti
jmp
fstpt
cmpsb
out
xor
popf
push
cwtl
lahf
out
sbb
dec
fisubs
lods
pop
ss
jbe
movsl
xor
push
jno
jp
cmp
pop
jp
pop
hlt
gs
lcall
cld
aam
inc
sub
dec
les
jns
jg
ret
in
aaa
das
lea
lcall
dec
in
lock
xchg
inc
scas
stc
dec
jbe
cmp
shll
adc
add
inc
or
or
mov
mov
or
daa
and
iret
push
stc
xchg
xchg
lret
sarb
mov
stos
inc
inc
jge
in
jnp
or
cli
adc
sub
push
aam
and
je
or
inc
xor
dec
inc
mov
js
xor
mov
out
rcl
jae
lock
mov
or
into
mov
cmp
xchg
aas
inc
orb
daa
call
arpl
mov
pop
ficoms
lea
lock
fcmovnb
push
mov
andb
ficoml
mov
jmp
mov
sub
lcall
inc
mov
inc
jns
sbb
cwtl
roll
inc
mov
inc
imul
add
pop
push
adc
stos
lret
mov
setle
rclb
xor
shlb
dec
push
mov
fistps
cmc
sti
adc
fsubrs
pop
add
mov
pop
push
push
mov
sbb
xchg
lret
adc
frstor
lea
sub
test
or
push
aas
sub
mov
in
inc
push
push
mov
addr16
sti
pop
jb
push
mov
std
add
dec
dec
mov
jl
cmp
jns
pop
or
xchg
fcoml
movsb
add
enter
xchg
cmp
int3
jb
addr16
fs
insb
xor
dec
jo
pop
test
lock
insl
imul
repz
mov
pop
dec
mov
sbb
adc
rclb
sub
test
loop
popa
mov
cmp
cmp
and
out
cmpsb
fists
jl
inc
sbb
ds
cmp
ljmp
mov
cli
addr16
into
outsb
insl
test
mov
das
mov
xchg
dec
lock
bound
cmp
and
sub
jns
sbb
or
mov
cmp
scas
and
push
push
adc
loope
cli
dec
lods
cmp
push
fcomp
stos
fisubl
jge
cmp
rcll
loope
addr16
movsb
popf
jg
aaa
in
sub
mov
lcall
cmp
xchg
and
out
mov
cmp
js
xor
jmp
loope
mov
mov
shll
pop
xorb
ret
enter
das
or
sbb
shrl
inc
mov
shl
sbb
ljmp
enter
call
aas
xchg
jge
or
repnz
out
hlt
mov
push
int3
sbb
es
lock
fldt
sahf
inc
pusha
cs
or
ficompl
or
test
lret
popl
es
daa
fptan
xor
mov
jne
push
dec
pop
sti
int3
lods
aam
add
sarl
cmp
imul
xchg
push
aam
aad
pop
lock
mov
leave
adc
jns
lods
out
loope
inc
mov
xchg
int
aaa
das
aad
xchg
orl
or
cmp
aam
outsl
int3
enter
cmpsb
sub
mov
stos
shlb
xchg
rcll
and
insb
mov
dec
aam
cmp
sbb
dec
ds
mov
pop
scas
stos
cmpsl
sahf
sub
imul
adc
dec
pop
pop
mov
sub
fstpt
pop
mov
fsin
scas
sub
fsubrl
sub
pop
mov
outsb
test
cmp
ja
in
jmp
cmpsl
dec
in
add
in
addb
mov
movsb
bound
mov
sub
cs
clc
dec
jno
dec
mov
mov
mov
mov
and
add
mov
repnz
dec
xor
push
gs
pop
push
cmp
popl
jge
inc
fwait
repnz
or
lahf
pop
rorb
loope
jo
xor
sub
stc
pop
jne
outsb
jmp
pusha
adc
lret
std
cmpsl
push
ret
jo
sub
xlat
into
cmc
cwtl
aam
pop
fidivrl
jmp
jp
insb
incb
mov
cmc
add
xchg
xor
sub
jno
push
lds
dec
push
test
push
mov
cwtl
mov
mov
add
mov
lret
lret
and
dec
jecxz
and
int
adcl
and
push
and
es
mov
add
dec
sarl
cmp
ss
cmp
lea
and
jno
add
arpl
inc
inc
lahf
cld
aad
or
pop
ja
int3
jb
pop
dec
stos
stos
int
cli
outsl
in
add
in
add
test
jge
aas
xchg
push
mov
mov
or
stos
sub
xchg
fstps
ljmp
adc
xlat
push
xchg
sbb
adc
out
mov
xor
push
addr16
cmp
mov
xor
insb
ret
mov
and
mov
test
mov
jp
clc
jmp
out
fwait
push
pop
fwait
int
lcall
jmp
js
in
xchg
scas
fstps
jle
mov
mov
xor
inc
mov
dec
lret
push
sbb
adc
or
shll
nop
mull
jge
popa
pop
aam
js
mov
cli
mov
shrl
daa
lds
pop
pop
add
jno
fimull
mov
adc
push
dec
clc
mulb
loopne,pt
pop
adc
vpsrld
dec
adc
xchg
cmp
xor
repnz
out
dec
in
rcl
stos
pushf
sub
push
out
lods
pop
adcl
daa
jecxz
xor
mov
data16
popa
pop
lea
cltd
add
pop
mull
mov
imul
arpl
dec
cmpsb
or
out
push
daa
xor
sbb
mov
xchg
stc
jne
ljmp
fsubs
in
sti
leave
push
or
sub
mov
xor
cmpsb
mov
js
stos
mov
sbb
xchg
dec
xchg
mov
divw
xor
pop
in
mov
push
test
and
jns
adcb
aam
mov
es
fnsave
scas
rcrl
loope
push
adc
sub
sahf
xchg
ss
push
mov
les
and
inc
int
adc
xchg
les
cs
pop
xor
insb
dec
stos
pushf
out
xchg
das
jp
fisubl
mov
stos
adc
enter
jae
dec
call
notb
icebp
jno
or
into
mov
jg
stc
xchg
mov
ret
push
mov
push
mov
jo
bnd
cmpsl
cmp
and
cmp
sbb
test
arpl
mov
dec
imul
mov
lahf
cmp
push
in
fisubl
cmp
dec
insb
add
outsl
lds
xchg
std
sbb
push
cmp
fmul
mov
or
bound
sub
xchg
dec
das
mov
dec
cld
mov
int3
sub
jl
jle
xor
pop
mov
in
push
movsb
jge
mov
rorb
jbe
mov
add
lcall
std
jnp
xor
mov
dec
inc
rcr
jp
dec
adc
ss
add
aad
xor
sbb
int
push
enter
mov
fwait
mov
add
arpl
mov
dec
pop
sahf
cwtl
mov
mov
fcoml
mov
outsb
jmp
add
rcrb
fwait
out
dec
pop
sub
mov
push
jle
xchg
mov
test
das
test
push
mov
cwtl
je
jle
ror
xchg
inc
cmp
rcr
sbb
leave
loop
inc
add
or
xorl
xor
pop
inc
jl
xchg
clc
push
ds
mov
jo
inc
test
jbe
lcall
jno
dec
cmpsl
sub
jb
and
cmp
add
cmp
aad
cmc
sbb
ds
jb
cwtl
repnz
mov
notl
xchg
ja
int
mov
mov
sbb
loope
add
out
adc
movsb
cmp
repnz
push
jne
xchg
mov
and
out
adc
push
mov
lods
call
dec
stos
push
adc
pop
pop
jecxz
scas
xor
jbe
xchg
clc
adc
pop
in
xchg
pop
rcrl
int3
push
mull
push
notl
dec
xchg
xchg
pop
dec
inc
adc
sbb
sbb
xchg
movsb
dec
into
das
out
fsubp
mov
sub
movsb
jecxz
cmp
lds
pop
lret
insb
inc
stc
scas
or
add
mov
inc
ficomps
and
dec
or
mov
xor
dec
push
and
cs
add
sub
sbb
mov
push
cld
xor
lds
adc
rcl
in
add
lock
inc
adc
xchg
fstp
xor
mov
xor
cwtl
push
pop
inc
and
xlat
jl
sub
jnp
fldt
pop
push
nop
push
fisttpl
sub
mov
in
mov
test
incb
cmp
xchg
movsl
mov
insl
orb
mov
sub
dec
mov
push
fmull
xor
push
add
lods
enter
adc
repz
or
inc
mov
int3
movsb
stc
lcall
jl
adc
add
mov
inc
mov
mov
addl
cwtl
pop
pop
inc
jecxz
xor
inc
mov
jl
sub
sti
mov
adc
rcrb
add
inc
mov
mov
popf
test
inc
fildll
mov
inc
add
xchg
sbb
rcrb
dec
mov
fiadds
mov
sub
popf
jbe
sub
fsubrl
loopne
mov
repnz
cmpsl
xor
lcall
js
mov
push
out
enter
pop
xlat
dec
inc
jb
fld
in
sahf
scas
orb
sub
pop
sub
add
xor
shrl
and
mov
mov
hlt
xor
and
adc
cmp
dec
mov
movsb
xor
in
lods
adc
mov
and
cmp
push
inc
mov
mov
sub
inc
pop
ret
shll
inc
push
movsb
push
jp
mov
push
inc
push
fst
cmp
aad
mov
mov
pushf
ja
adc
ret
mov
sub
out
sbb
dec
dec
xchg
negl
sub
xchg
push
jnp
gs
mov
add
pop
sti
push
sub
push
lret
push
ror
mov
jb
xchg
stos
jmp
or
adc
adc
dec
xor
mov
repz
mov
mov
out
mov
lahf
sub
out
shll
rclb
test
jmp
inc
lahf
lds
adc
in
push
and
ret
mov
jae
cmpsl
inc
mov
jge
add
arpl
or
fsubs
and
gs
lds
pop
ror
push
movsb
jecxz
int
sbb
dec
dec
sub
sub
and
loope
int3
mov
jg
and
movsl
mov
daa
dec
push
int3
arpl
loopne
scas
ret
cwtl
cmp
push
aas
cmp
lods
sbb
jae
mov
mov
push
lret
mov
insb
mov
and
lock
stc
jg
out
and
cmpsb
mov
call
or
push
push
xlat
push
jmp
push
xor
mov
sbb
shrb
test
mov
mov
jmp
leave
les
faddl
int3
shl
cltd
rsqrtps
movsl
lock
sbb
aam
or
inc
jnp
rcll
icebp
push
xor
in
scas
or
xchg
sub
jb
add
xchg
loopne
les
or
jp
lea
in
sub
xchg
out
pop
sub
or
mov
out
lret
jns
fcmovbe
add
jge
sbb
inc
sbb
and
sahf
ja
sbbl
cmp
sub
pop
dec
inc
movsb
sti
xor
int3
and
cltd
push
xchg
push
mov
mov
and
call
mov
ficompl
mov
fucom
ljmp
pop
cmp
mov
mov
cmpsb
fwait
pop
lahf
cli
xor
ss
mov
add
scas
mov
test
shrl
jae
push
pop
push
mov
sub
fists
sub
adc
mov
aad
iret
test
lods
fdivs
dec
cmp
sbb
ror
inc
dec
add
cmp
hlt
push
ror
xor
adc
cmpsb
popf
adc
sub
aam
scas
jp
in
jo
les
insb
mov
bnd
daa
adc
mov
cwtl
pop
in
shlb
imul
dec
ljmp
push
int
inc
lcall
mov
push
loop
rorl
inc
out
push
aas
dec
mov
js
dec
mov
subb
pop
cmc
into
push
sub
ds
xchg
das
jne
sbb
loop
mov
sub
mov
sub
or
xor
jp
inc
lcall
cmc
xchg
add
push
in
jle
sbb
call
mov
inc
lea
pop
jl
stos
lds
xor
xchg
pusha
pop
ret
mov
mov
stos
ss
mov
test
xor
cmp
mov
pushf
add
test
xchg
mov
or
iret
dec
dec
enter
and
scas
and
and
out
or
flds
shrl
xchg
cmpl
dec
fdiv
mov
pop
ds
mov
dec
jae
insb
loopne
inc
pop
fwait
cmpsb
dec
jg
rclb
xchg
fmull
out
add
jecxz
xor
mov
cmp
enter
loopne
push
lret
add
shr
loope
inc
pop
or
lods
in
sub
sbb
rolb
or
inc
mov
call
pop
mov
andl
xchg
rol
sub
lods
mov
leave
xor
mov
xchg
jae
cmp
adc
adc
xchg
push
movsl
mov
lods
stos
scas
lret
xchg
insl
pop
in
lcall
fisubl
mov
and
mov
push
cmp
inc
stos
mov
xchg
add
popa
pop
and
sbb
sbb
xor
push
imul
sub
jle
mov
adcb
inc
ja
add
mov
gs
push
pushf
decl
cltd
push
push
cmp
fdivs
push
call
out
jnp
jbe
daa
movsl
or
and
sub
mov
dec
outsl
cld
repz
pop
mov
iret
call
mov
jne
xor
push
and
jbe
lret
scas
xchg
dec
shll
loope
ja
loopne
dec
cmp
mov
rcrb
andl
sti
lods
cmp
push
scas
push
call
int3
addr16
xchg
push
cmc
pop
pop
fiaddl
pop
jl
lret
push
mulb
fadds
pop
and
fildl
cmp
ss
sbb
and
sub
cli
jnp
xchg
add
sub
pop
jl
ljmp
lahf
jle
ret
sbb
int3
daa
mov
enter
inc
daa
mov
jns
jl
faddl
xchg
les
addr16
jp
push
gs
adc
mov
pop
xor
repz
out
or
nop
mov
and
into
inc
pop
sub
mov
mov
popa
aad
inc
addl
push
jb
jle
push
testb
and
xchg
test
outsl
lds
mov
ljmp
out
and
inc
int
das
push
and
or
inc
testl
out
in
push
out
add
inc
jl
fbld
inc
test
and
fisubl
dec
pop
xor
arpl
imul
inc
mov
jecxz
adc
cmp
cli
inc
mov
jae
clc
fs
xchg
stos
test
scas
cli
mov
cmp
mov
and
pop
es
neg
sbb
int3
rcl
inc
push
or
outsb
mov
fcoml
lcall
fwait
andl
lods
jp
jmp
es
mov
daa
xchg
push
repnz
fimuls
mov
mov
add
or
or
cld
scas
int
sarl
fnstenv
dec
in
repnz
ficoms
xchg
or
pop
fdivl
bound
dec
xchg
adc
sbb
mov
inc
fnstenv
icebp
aas
jge
ss
cltd
cmpsl
cmp
ret
pop
sbb
mov
icebp
jg
rcr
add
add
aam
mov
rorb
push
pop
int
nop
xchg
cli
psubw
xchg
pavgw
dec
stos
xor
sbb
cwtl
jo
in
out
aaa
jecxz
cmp
pop
sub
inc
ss
mov
repz
stos
mov
sbb
je
inc
cld
enter
lahf
faddp
icebp
jle
jnp
xchg
dec
out
adc
cmp
movsl
shr
mov
pop
in
sti
or
dec
jno
test
add
punpcklwd
jb
mov
cmp
sbb
cmc
or
dec
outsb
add
rcrl
incb
and
sbb
add
fstpl
mov
adc
xchg
dec
sub
stos
sti
lcall
xlat
mov
adc
inc
cmp
movsl
out
cmp
xchg
idivb
pop
call
cmc
rolb
cwtl
cmp
sbb
cwtl
mov
inc
lret
loopne
popf
dec
push
ss
xlat
decb
cmpsl
sub
jae
sarl
idiv
rcr
mov
std
iret
shlb
mov
or
hlt
roll
mov
xchg
out
imul
cli
jno
movsl
xor
cmp
jmp
pop
jae
sub
cmp
mov
pop
dec
fimuls
fstpl
jnp
gs
fwait
add
inc
inc
lds
outsl
ss
leave
mov
mov
cld
add
je
into
es
mov
andl
push
fiadds
mov
les
in
imul
and
leave
roll
bound
or
or
cmp
cmp
adc
adcb
test
addr16
jecxz
sbb
stos
ret
ret
stos
mul
mov
adc
mov
inc
loopne
add
pop
and
ret
xchg
adc
ja
fisubs
inc
fmuls
and
lock
ja
fsubrs
dec
jne
inc
jg
popa
loop
xchg
cmp
outsl
or
push
push
push
dec
inc
pop
push
pop
sbb
sub
add
test
xor
pushf
in
and
stos
inc
jge
push
jg
inc
push
movsl
xor
sbb
mov
outsl
cli
jp
enter
loope
shrb
scas
sbb
lret
mov
mov
xchg
shlb
xchg
cmp
test
mov
mov
mov
out
and
in
insl
cmp
rcll
pop
stos
mov
inc
imul
mov
fiadds
dec
add
aam
mov
xorl
sub
repnz
test
sbb
push
sbbb
push
lcall
sbb
enter
mov
xchg
lods
sub
xchg
and
xor
shll
jg
sub
adc
in
or
cld
xchg
out
imul
lret
fldl
addr16
mov
pushf
push
test
test
jg
mov
cwtl
jns
negb
ss
pop
cmpb
jae
std
filds
xchg
mov
test
jmp
aam
jne
cld
pushf
add
mov
inc
fiaddl
popf
lcall
aaa
int3
jmp
add
sub
rclb
cmp
loop
cwtl
bound
pop
mov
bound
jno
movsl
or
js
cli
gs
adcl
adc
pop
addr16
push
ret
jge
outsb
stc
int3
mov
sti
mov
fisttpll
xchg
roll
ret
jns
daa
dec
mov
shrb
sub
add
jecxz
mov
shr
cmp
pop
jns
test
out
sbb
xchg
push
in
loope
push
sbb
mov
sub
inc
push
stc
bound
and
mov
insb
loopne
jns
pop
xor
scas
mov
das
push
mov
popa
nop
bnd
aam
cltd
cmp
movsl
test
decb
xor
xlat
mov
test
mov
je
or
xchg
in
iret
xor
cld
xlat
push
adc
pop
xchg
adc
mov
sti
mov
shlb
sbb
mov
xchg
inc
and
mov
ja
cmp
jecxz
mov
out
fwait
jbe
xor
mov
lds
push
mov
out
add
test
sarl
sub
jns
stc
arpl
xlat
out
xchg
dec
enter
mov
mov
push
scas
call
pop
pop
sbb
sub
inc
pop
push
sbb
xor
or
dec
sbb
cltd
fdivs
adc
nop
out
mov
insb
fcomps
das
shlb
insl
push
imul
xchg
leave
enter
mov
popl
pop
sub
adc
test
mov
xor
mov
mov
loop
dec
add
testl
in
adc
pop
ficomps
xor
inc
adc
fstpt
es
push
pop
ror
fucomi
lret
pop
lds
imul
mov
pop
lock
sub
aaa
les
lods
iret
jo
xchg
fdivr
adc
mov
xchg
mov
cs
repz
and
add
fs
add
or
stc
cmp
push
xchg
mov
mov
jnp
frstor
push
mov
test
outsb
hlt
xorl
fmulp
std
mov
xchg
pop
sub
inc
popf
xlat
fcmovnu
ljmp
push
cmpb
sbb
mov
cwtl
dec
inc
xchg
mov
test
xchg
cmpsb
cwtl
lea
push
pop
ret
push
adc
adc
mov
mov
jge
push
inc
mov
or
jp
gs
sub
push
pop
dec
js
and
and
push
lods
mov
jl
and
testl
fcomps
pushf
cli
in
imul
or
mov
jno,pt
sbb
mov
je
scas
fidivs
push
das
fs
mov
shlb
fsubs
scas
jbe
pop
imul
inc
imul
adc
sbb
fimull
and
push
mov
jmp
out
pop
jnp
push
out
mov
fwait
mov
into
mov
test
je
pop
push
repz
repnz
sub
xor
std
adc
ljmp
and
push
or
mov
fcmovnbe
mov
ds
dec
jl
inc
mov
push
lods
xchg
pop
dec
lea
xor
push
adc
jno
inc
shll
cmpsb
lock
add
mov
andl
je
inc
cmp
push
adc
roll
adc
sub
mov
inc
jg
dec
add
xchg
std
sub
aad
cmpsb
imul
test
mov
lcall
lods
divb
xor
mov
dec
std
cld
shll
cwtl
call
fcompl
push
mov
movsb
gs
clc
push
into
subl
sub
add
cmp
cwtl
add
clc
add
xchg
mov
repnz
pop
sub
stos
subl
shrl
mov
xor
push
dec
dec
sbb
nop
test
scas
pop
leave
andl
orl
jl
mov
jno
data16
mov
dec
inc
imul
fldt
xor
sub
sub
mov
or
jae
mov
loope
inc
cmp
gs
nop
insb
adc
test
xchg
and
sarl
jl
sbb
stos
int
sbb
loope
scas
mov
loop
cmp
xor
js
in
push
or
cli
lods
jb
push
jle
mov
insb
xchg
in
out
cmpsl
jl
sbb
sahf
push
pop
mov
mov
rcr
xor
push
pop
fstps
cli
in
aaa
ja
stos
test
and
ret
loopne
rolb
fbld
mov
and
fxch
or
push
gs
or
outsl
mov
mov
xchg
and
pop
std
loop
push
push
push
jo
or
out
dec
aam
daa
je
shrb
push
cmpsl
aad
out
mov
outsb
ljmp
mov
add
push
iret
orl
ret
mov
lret
jae
pop
in
dec
enter
fsubrs
push
push
dec
and
inc
cltd
sub
mov
test
inc
pop
out
into
movsb
stc
adc
std
pop
leave
imul
push
xlat
dec
ljmp
pop
pop
jno
xchg
sub
add
enter
mov
enter
dec
xor
aaa
data16
cli
sbb
pop
push
or
pop
int3
sbb
popf
inc
ret
jmp
js
mov
push
mov
and
int
cmp
sub
test
cmp
out
jmp
jnp
int
xlat
mov
dec
xor
dec
leave
dec
es
mov
jbe
pop
test
fldt
addr16
mov
test
mov
inc
testb
lea
stos
mov
fs
xchg
enter
into
in
mov
pop
mov
pusha
int3
push
pop
insb
dec
fcompl
pop
cld
scas
into
testl
mov
aaa
sub
inc
inc
cmp
mov
aam
push
ljmp
xchg
lods
repz
sbb
lcall
pop
xor
pop
bound
out
jne
dec
insb
fisttpll
insl
enter
xlat
fidivl
fucomp
mov
ss
mov
jge
sbb
pop
xchg
sbb
clc
js
jo
sti
add
adc
fwait
pop
and
ret
in
sub
push
repnz
aad
pushf
xchg
faddl
mov
nop
inc
cltd
out
xchg
jo
or
sub
pop
cmp
mov
adc
pop
aaa
dec
mov
movsb
xlat
or
xlat
add
push
jl
sub
pop
int
sbb
and
pop
xlat
mov
xor
repnz
sbb
cltd
shlb
js
arpl
mov
scas
mov
pop
adc
inc
testb
pop
sbb
repnz
lahf
je
push
ds
imul
and
mov
insb
jno
shrb
cmp
pusha
and
xlat
pop
inc
xchg
imul
out
jb
mov
xchg
sub
les
mov
arpl
bound
push
ss
ja
clc
test
lret
mov
xor
clc
fadd
outsb
insb
popa
or
int3
cmp
inc
mov
sub
es
frstor
fildl
push
loopne
xchg
enter
into
mov
cmp
mov
ficoms
xchg
stos
das
das
pop
xor
aad
inc
shll
xchg
xchg
aad
xor
sub
test
or
cmpsl
pop
ss
mov
xor
push
test
leave
icebp
mov
sahf
es
imull
and
mov
xchg
lods
or
emms
mov
push
jecxz
cmp
es
lods
pop
mov
movsb
inc
push
ret
test
ror
std
mov
icebp
mov
and
lret
lea
xlat
shll
cmc
outsb
push
sbb
cmp
sub
ljmp
dec
outsb
out
cmp
aas
out
pop
loope
cmp
xchg
aas
subl
punpckhwd
out
xor
jno
cmp
sub
mov
or
sub
leave
push
pusha
mov
icebp
jg
insb
cmp
call
or
popl
mov
enter
mov
ja
das
pop
es
fs
cmp
js
xchg
mov
lea
pop
dec
mov
ss
scas
insb
test
dec
cwtl
push
repz
push
scas
xor
rcrl
mov
adc
mov
test
das
mov
movsb
popa
and
mov
mov
outsl
inc
or
push
test
setp
aaa
call
sbbl
mov
mov
outsb
sti
ja
pushf
push
and
iret
daa
jl
ret
movl
sbb
rcll
adc
jg
notl
jno
jp
nop
cs
add
mov
dec
push
or
int3
xchg
dec
sub
popf
mov
insl
lret
jecxz
or
jmp
ljmp
loopne
lds
mov
jmp
scas
xlat
ret
fiaddl
js
cwtl
jno
divl
in
jo
xlat
cmp
mov
or
mov
repz
or
sub
mov
and
stos
scas
repnz
inc
fwait
outsb
into
movb
icebp
mov
sbb
test
popf
mov
pop
xor
lock
mov
mov
sub
dec
frstor
xor
shrl
mov
stos
stc
repz
in
iret
mov
jne
lcall
cmp
sahf
aam
inc
jg
or
mov
mov
imul
dec
test
pop
das
divl
loopne
adc
mov
or
dec
rorl
bound
ljmp
push
incl
push
mov
or
in
jmp
lea
pop
ret
cli
xchg
ljmp
das
lea
cltd
mov
push
jbe
mov
dec
push
pop
enter
mov
iret
mov
test
movsb
pop
mov
xor
ret
mov
inc
mov
mov
xchg
sub
daa
cmpsb
scas
cwtl
jecxz
aam
pop
inc
mov
cmpsb
cmp
sar
mov
or
sbbb
jecxz
repnz
fdivrs
mov
xchg
jns
idivl
and
mov
cmpb
imulb
inc
je
jne
cld
repz
sub
inc
addr16
das
add
lods
sti
icebp
or
sub
iret
lcall
dec
out
nop
add
mov
mov
imul
out
out
andl
lret
or
xchg
lcall
pusha
insl
loop
fldenv
xor
xchg
or
mov
insl
lods
lcall
ds
mov
pop
xor
out
shll
jle
idivb
xor
xor
test
and
cmc
ljmp
addr16
fdivrs
jns
stc
sahf
inc
pop
xlat
loopne
cmpsl
add
xchg
movsl
mov
xchg
and
rorl
dec
inc
fstpl
pop
test
mov
pop
pop
and
sbb
adc
mov
cmc
enter
lea
pop
sbb
or
cmp
mov
jno
dec
mov
push
out
scas
xor
les
ret
pop
ret
push
ror
xchg
mov
sub
push
or
gs
les
pop
aas
sbb
in
inc
mov
div
sub
das
pop
cmp
into
mov
mov
pusha
scas
xor
addl
hlt
vdivss
jae
xchg
mov
jno
imul
push
std
cmp
push
in
stc
push
data16
sub
bound
mov
addl
mov
adc
push
pop
les
push
inc
mov
nop
xchg
in
mov
mov
dec
enter
mov
mov
mov
inc
mov
sti
mov
clc
fisttpll
repnz
mov
add
jae
mov
ret
aad
dec
and
psllq
insb
or
xchg
js
test
xchg
loop
jns
pop
adc
mov
sbb
outsl
mov
jno
test
mov
fildll
push
rolb
sub
in
outsl
in
repz
add
shrb
nop
inc
mov
rcrl
ds
popf
push
xchg
mov
stc
xchg
repz
jl
jle
adc
mov
jae
daa
or
stos
jecxz
mov
pop
sub
jnp
xchg
xlat
inc
and
arpl
add
cmp
inc
xchg
push
jne
xchg
int
xor
mov
xor
shl
jp
inc
xchg
das
mov
aaa
cltd
dec
or
cmp
jno
push
dec
pop
push
rcll
mov
xor
add
repnz
xor
cmpsb
data16
enter
loop
stos
out
xchg
mov
mov
push
mov
mov
mov
fstpl
xorb
inc
cmpsl
sub
imul
int3
add
das
xlat
push
mov
adc
mov
clc
dec
add
mov
out
mov
xchg
out
hlt
or
mov
lds
fstl
and
fs
cmpsl
adc
jb
inc
insb
sub
xchg
add
add
pop
cmp
sub
jae
outsb
nop
imul
loopne
scas
sbb
popf
or
into
repz
repz
scas
cltd
test
leave
les
dec
jmp
shlb
dec
fmull
xchg
test
rorl
cmp
push
jne
in
xor
in
push
mov
imulb
test
out
jmp
fstps
adc
mov
add
sub
das
push
mov
ja
inc
cwtl
pop
push
xchg
mov
frstor
shrl
push
cmp
sti
ss
subl
push
out
mov
and
bound
lahf
jl
aad
dec
aam
mov
inc
adc
xchg
cmp
jle
mov
xchg
xor
fidivrs
or
sbb
pop
add
insl
xchg
jnp
stos
jle
adc
mov
jge
rcrl
in
jns
ficompl
adc
xchg
push
xor
shl
sbb
daa
or
jp
mov
dec
fidivrl
js
sbb
mov
add
xchg
sbb
addb
fwait
out
push
loope
jg
hlt
push
orl
aam
jae
xchg
xor
push
mov
lds
sti
sbb
out
sarl
mov
mov
jns
lea
jne
push
dec
sub
outsb
jae
xlat
data16
ret
cmp
xor
mov
rcl
add
stc
repnz
in
std
adc
add
cmp
fstps
not
mov
mulb
mov
repz
jne
lds
adc
mov
test
pop
fwait
jnp
jge
xor
add
popf
cmp
jge
xchg
out
mov
jno
mov
aam
mov
fs
push
movsb
lret
mov
jmp
and
adc
or
stc
lods
mov
fisubrs
fsubp
ljmp
repnz
enter
mov
fmul
xchg
jae
std
and
cmp
and
in
test
jp
xchg
xchg
mov
mov
jmp
adc
inc
int3
xor
je
sub
sub
add
adc
push
mov
stos
adc
inc
mov
cmpsl
cltd
pop
sub
xchg
xchg
and
jmp
cs
xchg
test
iret
xchg
out
sbb
stos
mov
jge
ds
push
pushf
xchg
mov
clc
loop
mov
jns
icebp
nop
sbb
inc
jecxz
and
jne
scas
cli
mov
insl
fwait
lods
cmp
or
out
mov
out
ds
cmpsl
mov
pop
loop
jmp
repnz
repz
or
popa
mov
jnp
xor
jno
mov
hlt
sbb
xor
xchg
pop
fstl
xchg
push
daa
xor
hlt
sahf
pop
subl
imul
rorl
sub
inc
pushl
xchg
mov
xlat
fadds
rcl
shlb
dec
fnstsw
jle
pop
ds
xchg
push
push
shll
push
insb
popa
jmp
sbb
int3
test
int
cmp
push
stos
pop
aad
idiv
cmp
lock
push
cmp
lret
icebp
sbb
lods
push
and
stos
leave
xor
mov
sbb
in
leave
mov
inc
scas
arpl
rolb
movsb
iret
mov
lds
mov
stc
cmc
aad
ret
int3
inc
jno
arpl
xchg
adc
mov
mov
lock
jns
push
cld
adc
add
xchg
lods
mov
xorb
scas
dec
xor
in
inc
ret
dec
push
add
sub
or
test
and
fwait
add
sbbl
adc
sub
cmp
flds
fwait
pop
mov
push
xchg
clc
xor
jno
push
jae
lcall
cmp
nop
les
adc
inc
pushf
inc
sbbl
inc
dec
xor
cld
sti
sub
sbbb
out
lcall
mov
pop
mov
jbe
sbb
and
cmp
or
je
int
push
lret
sbb
and
test
fistps
add
or
fs
adc
rcrl
or
jae
outsl
sbb
mov
out
icebp
mov
pop
loope
aad
imul
dec
mov
mov
std
xchg
sub
es
or
notl
mov
mov
in
stc
icebp
cmp
mov
shrb
in
mov
idiv
adcb
lcall
negl
adc
into
idivl
daa
les
stos
xchg
adc
mov
out
mov
pusha
dec
inc
fmuls
sahf
adc
jbe
leave
cs
xchg
xchg
les
adc
push
xchg
jae
push
pop
out
jae
inc
mov
hlt
loopne
movsb
into
data16
xor
pop
stos
fnstenv
in
inc
orl
adc
mov
and
or
testl
adc
cmp
or
adc
add
roll
mov
jecxz
cmpl
orb
mov
jecxz
add
mov
repz
stos
int3
mov
jne
sbb
or
mov
icebp
aas
enter
aam
add
mov
mov
push
push
and
mov
pop
sub
push
and
leave
cmpsl
int3
lods
mov
jo
fadds
fildll
pop
rorb
cmp
leave
or
xor
in
cmp
test
aas
in
sub
adc
adc
push
fistpll
mov
jno
push
sbb
shl
xchg
ret
add
mov
mov
xchg
shrb
les
sahf
mov
cmp
stos
cmpsl
test
or
mov
lods
fmulp
fstps
sbb
xchg
xor
mov
jae
inc
incb
out
jmp
cmp
aas
data16
sbb
xor
inc
dec
dec
cmpsl
ret
or
inc
repnz
loopne
outsb
dec
or
hlt
les
push
dec
cmp
divb
aas
ficoml
adc
dec
jle
mov
lahf
inc
cmp
mov
imull
fwait
sbbl
pop
lahf
imull
cmp
int3
call
jmp
shr
mov
dec
mov
ss
push
mov
dec
enter
sub
aaa
xchg
lods
loopne
test
mov
xchg
or
aas
dec
dec
sub
add
pushf
outsb
xor
xchg
lods
lds
mov
inc
push
sub
out
sbb
arpl
adc
sub
les
inc
sti
adc
popf
outsl
push
shl
mov
inc
fistl
fldl
pop
sub
and
lret
inc
or
xchg
xor
xor
sub
fdivrl
inc
mov
testl
adc
add
pop
dec
dec
data16
mov
sbb
mov
add
mov
push
stos
fwait
mov
ljmp
imul
and
in
test
mov
test
jg
mov
repz
hlt
inc
scas
aam
sub
add
je
js
orl
stos
mov
nop
mov
mov
es
xchg
sbb
push
loopne
xor
lods
fcmovne
test
add
sbb
faddl
jge
push
insb
loope
pop
addr16
ds
and
imul
xchg
mov
inc
int3
xchg
and
icebp
pop
lods
inc
jbe
sbb
fistpll
dec
aaa
and
and
mov
daa
and
cmp
or
inc
pop
push
cli
test
enter
in
jbe
and
imull
call
testb
lods
hlt
outsl
insl
ret
mov
arpl
pop
xchg
in
rorl
lock
pop
or
mov
in
adc
cmp
sub
dec
or
into
sbb
sub
push
int
mov
imul
cwtl
mov
ss
in
gs
dec
dec
test
shl
fwait
arpl
dec
or
or
roll
sub
lret
sub
mov
ret
add
les
cmp
inc
jne
sub
adcb
pop
das
test
add
scas
loopne
xlat
cmp
ficompl
repz
loop
mov
scas
in
inc
or
int3
mov
ret
imul
int3
mov
mov
push
ret
test
jae
or
dec
pop
jecxz
cmp
or
jle
pop
cld
xor
popf
mov
sub
sbb
push
mov
xor
pop
or
push
inc
pop
pop
xlat
pop
xchg
add
and
clc
test
addb
bsf
dec
test
adc
and
stc
dec
push
jne
cmp
mov
lcall
jg
mov
inc
mov
lods
xor
imul
xchg
ljmp
add
or
cwtl
inc
fwait
cmp
or
imul
ljmp
add
imul
aad
cmp
push
sub
jne
cwtl
and
xchg
xchg
xchg
adc
add
daa
xchg
std
xchg
subl
mov
idivl
adc
das
insl
xchg
cwtl
inc
pop
mov
lret
addr16
stos
pop
testb
push
pusha
push
add
xor
sarl
adcl
mov
pop
jmp
cmpsb
pop
std
mov
repz
sbb
inc
and
jb
fwait
xor
push
push
jne
sbb
mov
shll
gs
push
icebp
outsb
adcb
int3
push
ret
test
incb
push
dec
stc
cmp
dec
js
repz
push
or
divb
shrb
aas
aam
sahf
and
cli
sbb
ds
repz
inc
out
add
push
and
arpl
jp
sbb
mov
and
std
jo
loope
imul
aas
cmp
mov
dec
or
xor
insl
test
inc
fiaddl
jg
stos
pop
sbb
das
inc
loope
lret
push
xchg
xor
ficompl
push
sti
xchg
inc
or
push
jecxz
outsl
adc
pop
push
xchg
sub
jns
and
incl
daa
pushf
xor
lret
jecxz
mov
mov
push
mov
sub
push
nop
push
jne
pop
rolb
jg
adc
adc
daa
pop
iret
mov
add
in
add
inc
leave
jl
or
dec
xchg
lahf
in
ja
add
cli
sbb
int
out
rolb
movsl
cld
jl
into
hlt
sub
mov
popl
jmp
rorl
push
ficoml
sbb
dec
movsl
ds
imul
sbbb
or
mov
mov
jge
outsb
push
subb
add
pop
pushf
mov
clc
outsl
push
inc
into
loopne
sbb
movl
out
fistpll
sub
andb
ror
push
cmc
call
insl
sbb
leave
std
test
fidivl
push
jbe
add
xor
pop
loopne
inc
sahf
mov
cli
mov
dec
les
mov
in
addr16
jle
repz
lcall
mov
stos
xchg
push
sbb
jp
xlat
loop
aam
and
sahf
cmc
mov
imul
repz
shll
jne
xor
cmp
jne
scas
mov
add
je
mov
push
jb
cmp
push
ss
fwait
or
fldenv
andl
in
and
dec
das
push
cli
and
ficoms
or
iret
jge
into
je
outsl
and
push
push
add
jge
mov
xchg
dec
pusha
add
mov
roll
std
mov
aas
cld
les
mov
and
lods
in
cmp
and
inc
clc
cmp
movhlps
dec
mov
mov
mov
addr16
imul
and
pusha
popl
mulb
rclb
lcall
mov
in
sub
sub
mov
movsb
mov
sub
testb
lea
ror
push
mov
mov
outsb
mov
stos
das
dec
data16
scas
test
sbb
sbb
es
pop
add
mov
repnz
pusha
les
jmp
add
adc
enter
xor
and
aad
cwtl
ds
pushf
push
mov
jp
pop
out
cmp
scas
movsl
mov
ljmp
dec
pop
sbb
jecxz
dec
pop
cli
mov
xchg
jnp
mov
sarl
and
in
dec
pushf
popf
aam
test
add
repnz
out
stc
pop
cmp
in
insb
out
pop
or
bound
mov
jecxz
fdivs
and
or
xchg
push
nop
xor
sub
int
ret
aad
jecxz
pop
repnz
pop
clc
pop
inc
cmp
out
mov
push
mov
add
hlt
fs
xchg
push
dec
gs
aaa
adc
cwtl
popa
sarb
fildl
and
pop
inc
popf
sbb
mov
les
mov
mov
daa
icebp
mov
ficoml
dec
vprotw
ss
je
lods
jns
jmp
mov
fwait
movsl
push
aaa
dec
add
inc
call
xor
lods
push
add
mov
push
ljmp
les
sti
aaa
rcrb
outsl
ljmp
movsb
in
sahf
dec
xor
push
fldcw
ds
sbb
xchg
mov
pop
mov
daa
pop
cmp
mov
insb
or
sahf
mov
add
push
pop
sub
xor
pop
mov
mov
test
mull
sub
sti
mov
popa
mov
sbb
scas
dec
xor
fwait
testl
jmp
lock
popa
or
in
out
mov
jp
xchg
and
or
fisubs
push
outsb
xchg
push
mov
addl
adc
cld
push
insb
cmp
add
add
jecxz
pop
or
adc
mov
pop
xchg
push
fs
iret
arpl
mov
test
pop
dec
fadds
mov
clc
fwait
pop
mov
xchg
aam
dec
jp
push
repnz
out
lds
popl
fstl
or
imull
sub
stos
shlb
dec
xor
sub
ljmp
lods
loop
mov
dec
sub
jb
sbb
xchg
jl
xchg
nop
push
push
and
dec
lock
dec
dec
daa
test
jmp
mov
adc
xchg
and
in
pushf
lock
mov
mov
ficompl
mov
mov
jno
sub
push
xchg
fs
push
fsubp
xlat
fs
mov
ds
and
fwait
test
lods
mov
js
inc
add
stos
aas
cld
cmp
sbb
cmpsl
ss
xchg
inc
inc
aas
shll
fildll
cmp
test
push
jecxz
jge
dec
adc
sub
lcall
fldl
mov
stos
xor
inc
inc
mov
aas
orl
sti
jge
jle
jb
or
in
cltd
les
pop
fwait
dec
fldl
test
test
shlb
jbe
or
mov
sti
mov
and
nop
cltd
cmpsb
pop
js
xchg
out
pop
out
adc
pop
mov
popa
cld
in
rorb
mov
sarl
sbb
mov
mov
cli
pop
sbb
cli
pop
ret
or
cmp
cmpsl
mov
repz
inc
dec
xor
mov
inc
xchg
into
scas
mov
aam
jecxz
mov
loopne
xor
aaa
rcrl
cmc
fistl
pop
and
scas
inc
repnz
sub
jns
das
aas
mov
cmc
sub
push
es
and
jns
mov
cmc
orb
testb
fmull
in
dec
jecxz
daa
ja
mov
lods
xchg
ficompl
push
cmp
add
and
pop
mov
xor
mov
adc
gs
inc
add
add
xchg
push
add
lret
test
es
mov
stc
mov
iret
cwtl
enter
inc
loope
fiadds
inc
push
xor
sub
pmulhw
push
ja
insb
xor
ja
es
add
inc
frstor
faddl
pop
xor
and
or
pop
adc
jne
insl
gs
in
dec
fidivs
scas
sbb
mov
shrl
movsl
xor
jnp
aaa
test
loope
jmp
mov
xchg
ficomps
mov
sbb
pop
daa
test
or
aas
insl
mov
or
fisubrl
cs
rcrb
lret
mov
add
jle
inc
imul
adcb
loopne
fnstenv
and
rol
inc
mov
lods
mov
inc
dec
xor
daa
mov
cmc
mov
rcl
jle
leave
ret
inc
lret
cmc
xchg
xor
pop
fiaddl
dec
add
lea
daa
dec
insl
jle
sti
addr16
mov
scas
stc
cmp
repz
mov
xchg
lds
push
jp
adc
clc
incb
push
xlat
push
mov
into
lahf
arpl
fucomi
cs
fs
movsl
outsb
pushf
inc
arpl
jbe
aaa
add
sbb
arpl
mov
pop
sub
jg
pop
jo
and
fmul
push
xor
in
loopne
mov
popa
sub
push
inc
push
or
push
dec
mov
mov
jp
push
in
inc
stc
add
push
adc
outsl
xor
mov
outsl
adc
pop
inc
sti
sub
inc
jnp
lea
leave
out
into
sti
scas
adc
and
dec
xchg
dec
mov
lahf
test
outsl
mov
hlt
lds
mov
mov
cmp
xor
jb
sbb
sub
shr
pop
icebp
xor
inc
test
cmp
js
jmp
pop
mov
sub
sbb
ljmp
lods
mov
outsb
mov
pop
loope
push
add
int
sub
adc
xchg
cwtl
mov
push
xchg
aam
cld
xor
push
cmp
inc
and
outsl
orl
mov
inc
or
rcll
pop
rcr
aaa
fmuls
lahf
pop
pop
leave
xchg
sar
push
fadds
sub
fildll
mov
sbb
xor
jb
insb
pop
xlat
imul
in
push
mov
pop
inc
push
loope
ljmp
and
add
loopne
adc
fwait
loope
rorb
int3
pop
push
mov
fistl
jl
jnp
lods
pop
das
adc
lods
lea
jb
repnz
sbb
xchg
out
or
pusha
cmp
aam
pop
fidivs
in
repnz
scas
int3
jle
js
js
or
mov
sbb
jge
mov
xor
xlat
cli
cmp
sub
inc
dec
inc
and
dec
or
fs
fisubrl
inc
pop
ror
sbb
int
xor
add
inc
pop
lods
imul
int
jno
stc
pushf
xchg
out
mull
repz
cmp
adcb
mov
inc
enter
and
xchg
jno
pop
shlb
negb
adc
mov
addl
dec
js
lds
push
ja
cmp
ret
sbb
xor
mov
popa
add
mov
jmp
xchg
fildll
and
adc
cmp
push
fsubs
test
icebp
add
popf
pop
and
loop
outsl
scas
addb
scas
mov
sbbl
fdivrl
xchg
pushf
enter
or
lret
pop
or
adc
das
pop
sti
cmpsb
sahf
push
fnstenv
inc
scas
and
fwait
daa
test
or
dec
mov
add
std
popa
pushf
dec
lock
sti
cltd
js
inc
call
jbe
mov
xor
jb
out
jp
das
test
sbb
orl
icebp
push
cld
cli
into
or
mov
pop
insl
or
lea
in
gs
jnp
push
mov
fiadds
adc
fs
jno
push
pop
push
je
ds
in
cmpsl
push
mov
push
ret
mov
xlat
rorl
mov
xchg
in
ja
cmp
fs
pop
aas
cmp
mov
xor
cmp
inc
repnz
mov
ja
repnz
pop
cld
add
xchg
adc
bound
mov
sarb
sbb
iret
adc
add
fsts
jnp
push
ljmp
popa
and
fildl
mov
inc
adc
das
cmp
ret
xor
je
shll
movsl
push
xor
add
clc
jb
dec
jl
sub
xchg
mov
aad
pop
and
sub
or
dec
cmpsb
or
mov
or
and
shl
jg
in
int
mov
xor
mov
enter
in
sub
rorb
push
push
js
mov
pusha
xlat
cmp
int3
mov
xor
push
loop
outsl
adcl
test
fcompp
adc
jp
movsl
inc
jmp
gs
arpl
mov
jle
icebp
decb
mov
mov
push
xchg
jg,pt
into
jne
pop
or
ret
dec
or
mov
jmp
stos
rolb
int3
gs
cmpsl
mov
movsb
adcl
int
jmp
cmp
sub
fsubl
add
pop
test
push
rcrb
dec
mov
xchg
insb
mov
add
fwait
out
push
mov
mov
and
fnstsw
out
ja
cmp
inc
push
mov
sbb
sbb
lcall
jb
ljmp
pusha
nop
test
aam
fmulp
int
outsl
mov
xor
insl
add
jge
mov
jns
stos
jle
test
sub
push
jae
loopne
pop
inc
bound
fmull
fwait
push
lahf
jle
xchg
js
push
out
add
jae
fcmovbe
push
adc
movsb
push
lret
xchg
mov
sbb
insl
sub
cmpsl
scas
gs
dec
xchg
mov
es
inc
lcall
jb
popf
std
shll
stos
mov
fildl
fdivrl
es
xor
lahf
repz
sub
inc
jne
or
xchg
pop
push
addr16
fsts
cli
enter
mov
outsb
in
xchg
sbb
jmp
leave
nop
movsb
add
inc
lcall
jp
stos
test
lret
rcrb
pop
fisttps
or
xor
dec
pushf
adc
scas
jmp
mov
xchg
fdivr
and
mov
mov
adc
adc
cmp
ss
cmpl
mov
xor
xor
out
sub
test
jns
cmp
jnp
dec
adc
aas
cmp
shld
enter
es
cltd
daa
xchg
ss
pop
inc
ret
mov
insb
mov
inc
test
shl
cwtl
lds
cmp
jmp
stc
cmp
xchg
mov
dec
movsl
jg
cmp
inc
repz
jnp
and
jecxz
push
loop
ret
push
adc
and
repz
push
inc
lret
icebp
daa
hlt
cwtl
jecxz
sub
dec
sahf
push
imul
add
inc
xchg
sub
mov
pop
movb
and
jl
jge
stos
sbb
pop
dec
adc
mov
push
loopne
lret
cmp
test
mov
shlb
jnp
xchg
or
fs
ret
add
push
loopne
repnz
dec
cs
sbb
adc
jmp
sbb
cmpsl
sub
push
icebp
mov
es
push
mov
scas
mov
add
add
jecxz
lcall
mov
stos
leave
or
jp
add
push
outsb
or
fldenv
pop
mov
and
dec
xor
cmp
lods
cli
stos
cmc
arpl
in
loopne
add
popf
sbb
cmp
pop
pop
or
stos
in
push
push
movsb
cltd
addr16
in
jae
cld
ds
stos
dec
dec
ficoml
repz
into
pop
into
enter
divl
loop
in
sbb
push
pop
lock
xor
clc
adc
mov
cmp
mov
cmc
es
orl
sub
jmp
call
push
xor
or
divl
sbb
scas
inc
sub
cmpsl
jo
xchg
sub
ret
inc
push
cmp
mov
shrl
push
cltd
inc
mov
cmp
sub
shrl
push
push
mov
cmpsb
mov
mov
and
add
imul
mov
mov
in
mov
icebp
adc
clc
and
movsl
in
sbb
sti
sbb
lret
test
or
and
cs
inc
aas
jo
push
adc
pop
js
jns
push
sub
jno
in
xor
jae
test
dec
add
out
xchg
fimuls
lods
sti
mov
in
fs
mov
shrl
jl
pop
lret
ret
pop
xchg
dec
xchg
lock
fs
push
sub
cmpsb
pop
sahf
xchg
cmp
push
test
rol
jge
pop
in
aas
es
sub
pop
orb
ret
xchg
cld
sti
jmp
mov
and
lods
inc
pushl
pop
jg
das
mov
orb
jnp
sti
jno
popf
movsl
push
mov
cs
sub
or
cmc
out
popa
jo
add
aas
mov
mov
outsl
dec
mov
shl
out
out
dec
fistpll
out
mov
mov
ja
inc
adc
cmp
mov
cli
add
cmp
es
nop
hlt
push
push
stc
jg
pop
gs
and
add
cs
push
scas
repnz
jno,pn
jb
xor
jnp
sub
jl
cmp
xor
add
inc
push
test
out
daa
andl
lcall
sub
mov
loope
imul
scas
out
jecxz
push
push
sbbl
bound
or
cwtl
cmp
aam
and
dec
daa
adc
mov
add
sub
mov
test
scas
and
xchg
jl
mov
cli
rorb
add
bound
scas
push
push
data16
popf
pop
rorl
les
aas
jp
stc
in
loop
xor
andb
dec
orb
inc
push
push
adc
jp
das
loop
mov
jnp,pn
xor
test
push
lret
lret
and
loope
movl
inc
lods
ja
mov
sti
xchg
ret
cmp
out
iret
fnstenv
aad
shrb
jmp
push
pop
scas
xchg
and
ret
cmc
enter
loop
int
mov
test
cmc
outsb
add
ret
or
repz
cmp
pop
xlat
xor
xchg
das
jo
sub
mov
mov
mov
xchg
int3
sbbb
pop
es
sub
xchg
imul
test
add
lahf
daa
mov
inc
inc
fistps
mov
and
mov
mov
mov
sbb
je
filds
into
ret
lahf
cmp
cld
mov
sub
fs
xlat
int
cmp
inc
adc
xchg
pop
scas
icebp
cmp
xor
sub
ja
pop
or
xor
pop
shr
aam
pop
aad
ss
mov
mov
push
cmpsb
leave
mov
jl
mov
int3
pushf
jl
cmpsb
mov
lahf
push
aad
xchg
xchg
mov
push
xchg
inc
aam
mov
or
sbb
hlt
insb
pop
addl
jae
push
out
outsb
adc
hlt
pop
sub
adc
jecxz
in
xor
push
inc
dec
and
push
testl
mov
cmpsb
iret
sub
gs
fnstenv
sub
std
push
aaa
fwait
mov
cmpsl
xlat
jmp
pop
test
xor
int3
xor
dec
cmp
dec
xchg
stos
pop
mov
jle
inc
mov
aam
jl
sub
mov
mov
outsb
sbb
in
sbb
sbb
ljmp
repnz
mov
push
inc
data16
jb
xor
pop
aas
mov
jb
dec
xor
lods
mov
push
fimull
std
cmpsb
fs
sbb
lret
leave
les
jle
sbb
sub
lret
stos
mov
cmp
or
xor
roll
popl
imul
xor
mov
adc
xchg
cli
mov
lds
andb
mov
jp
or
int
lea
jbe
and
mov
and
testl
bound
aaa
insb
orl
jns
dec
xor
xor
pop
adc
or
mov
cmpsb
and
arpl
jo
xchg
cmp
dec
and
push
cltd
cmp
mov
add
repz
lds
sbb
xor
mov
cs
decb
push
inc
xor
xchg
xchg
insb
jp
dec
mov
in
cli
xor
es
pop
movsl
or
push
ds
add
push
sub
jle
fisubrl
jb
cmp
out
stc
inc
stos
scas
mov
mov
les
insl
xor
jb
mov
inc
out
or
inc
orl
bound
xor
mov
xchg
inc
ret
loopne
adc
aam
mov
aas
cwtl
and
gs
in
jmp
cltd
cmpsb
mov
rol
inc
out
jecxz
sbb
enter
cmp
push
push
addr16
jmp
inc
push
cmp
mov
xorb
or
pop
adc
cmp
add
or
in
aad
aaa
adc
jle
enter
cld
push
sbb
daa
mov
mov
push
mov
push
js
inc
shrl
and
leave
in
xor
mov
mov
push
xchg
push
cltd
jnp
cmp
test
jecxz
in
jo
in
pop
lock
jge
sub
xor
les
call
sub
dec
sbbl
sub
mov
addl
dec
jge
fstps
adc
push
push
xor
xor
incb
sbb
divl
ffree
cs
ret
outsl
dec
push
js
test
mov
data16
mov
shll
daa
in
mov
cltd
test
fldt
subb
in
mov
cmpsl
insb
dec
push
xchg
jo
mov
stc
into
jns
jecxz
mov
push
ljmp
mov
arpl
das
and
mov
sub
in
adc
pushf
inc
out
cmp
stos
rorb
sarb
jb
lods
les
xchg
mov
cli
push
push
inc
add
sarb
mov
sbb
pop
fisubl
cmp
xor
sub
push
mov
lock
rcll
jnp
jle
mov
and
stos
aas
clc
jge
inc
scas
mov
out
arpl
xchg
addb
dec
add
lods
cltd
dec
std
enter
jns
add
or
lret
inc
fdivrl
nop
clc
sbb
xchg
cmp
imul
mov
or
and
sub
lcall
movsb
imul
aas
inc
mov
fsubp
ss
test
xlat
mov
inc
std
dec
insl
enter
mov
push
shlb
dec
sti
repz
iret
mov
lods
xchg
pushf
mov
mov
into
add
out
and
jbe
js
cli
hlt
jle
shrl
xchg
cmp
xor
mov
or
mov
out
decl
jnp
jnp
cmpb
push
ljmp
sbb
pop
subl
leave
loope
pop
jb
insl
mov
adcl
cmpsl
cli
loop
stc
and
mov
inc
xor
pop
pop
add
sbb
mov
or
cltd
repz
add
dec
jno
outsl
lret
or
lret
ret
or
xchg
sbb
inc
add
fs
push
fcoml
mov
mov
or
mov
pop
inc
mov
dec
sbb
mov
aam
inc
loopne
push
hlt
jle
popa
add
jge
std
in
sub
int
ret
sbb
adc
dec
roll
sbb
out
test
daa
add
and
je
ds
daa
xchg
or
push
mov
pop
push
pop
flds
out
lods
add
je
xor
lahf
and
push
es
shr
call
xor
ffreep
push
add
jecxz
nop
adc
popf
jno
pop
jp
and
mov
cmpsl
dec
lea
mov
in
jb
dec
dec
stos
imul
jg
sbb
mov
or
jecxz
or
sarb
daa
fcompl
and
imul
movsb
mov
pushf
sbb
xor
ret
loopne
and
lods
push
in
cmpsb
sub
int
push
adc
insl
jo
movsl
pop
out
jnp
stos
sar
jp
cmc
pop
push
mov
lret
add
mov
cmpsl
push
push
xor
xchg
mov
cmc
push
xor
fcom
jnp
inc
inc
lock
fs
loope
addb
cmp
sub
fsubrl
subb
jmp
bnd
add
dec
dec
mov
fistpl
inc
shr
mov
outsl
and
movsb
aas
push
or
jmp
into
jno
or
cmovs
loop
cli
xchg
test
xor
hlt
out
adc
aam
add
pusha
faddl
lea
mov
cmp
rcrl
test
mov
inc
andl
test
push
and
or
inc
sbb
inc
jp
jbe
and
adc
mov
xchg
cmp
pop
ret
out
fsubs
pushf
xchg
jne
inc
mov
sub
mov
mov
scas
jp
add
jmp
pop
test
push
outsl
fnsave
enter
in
cmc
ds
mov
add
test
fistps
inc
push
mov
ja
or
std
push
inc
sub
inc
inc
scas
popf
pop
movsl
dec
in
pop
pushf
xlat
push
icebp
mov
std
into
push
and
les
stos
cmp
test
lods
data16
lcall
scas
mov
inc
and
aas
mov
or
insl
and
push
add
xchg
sbb
scas
fisubl
scas
mov
and
shll
lock
addl
cmpsl
sub
pusha
xchg
pusha
mov
mov
enter
pop
push
sub
insb
mov
mov
xor
sbb
cmp
xchg
xchg
test
cmpsl
int
mov
aas
lock
xchg
and
and
inc
cmpsl
inc
out
ficomps
push
aam
cmp
mov
xchg
shl
or
sti
imul
mov
xor
mov
inc
xor
ljmp
aas
add
sbb
mov
push
dec
test
mov
mov
in
dec
scas
push
sti
or
mov
mov
movb
repnz
fwait
bound
adc
loope
stos
sub
in
rorl
arpl
gs
xor
imul
std
adc
fucomi
out
jb
pop
sub
jnp
and
shll
loopne
jb
data16
dec
fwait
mov
sub
add
jne
xchg
push
add
lret
and
inc
lods
fldenv
out
in
hlt
pop
sbb
and
jg
into
movsl
mov
loope
cmpsb
cmp
sub
cmpsl
inc
mov
in
rclb
cmp
inc
xchg
leave
fdiv
js
xor
add
xchg
mov
bound
not
or
pop
insb
sbb
out
push
loopne
mov
icebp
ror
movsb
cvtps2pd
and
daa
das
mov
push
sbb
jge
cmp
ret
jle
lahf
mov
roll
jle
xor
bound
enter
dec
fs
pop
fwait
xchg
cltd
fdivs
ret
add
decl
fldenv
xor
or
insb
js
and
int
pusha
xchg
add
add
je
jne
fstpt
add
add
mov
lret
dec
stos
dec
enter
adc
mov
cwtl
push
cltd
clc
fmuls
lods
fwait
roll
add
push
pusha
push
ja
lcall
mov
dec
in
lods
and
lods
adc
and
jbe
jno
xchg
std
das
inc
insl
rcll
add
out
ret
xchg
cmp
mov
iret
push
sbb
enter
mov
lret
xchg
test
mov
xor
cmp
scas
in
into
push
movsb
xchg
push
mov
in
pop
aad
push
jns
aaa
xor
popf
pop
test
das
aam
pop
sahf
pop
sbb
adc
sbb
movsl
ror
bound
bound
cmp
call
pop
mov
inc
mov
mov
mov
add
and
sub
sub
and
jl
sub
arpl
cmp
insb
sub
mov
cmc
clc
scas
sbb
cwtl
push
movsl
adc
mov
aaa
mov
pop
hlt
xlat
cld
push
sbb
push
clc
xor
xor
cmpb
sbb
sbb
fisttps
pop
xlat
xor
jne
push
stc
lds
popf
pop
gs
dec
movb
fldcw
add
fs
bound
dec
in
loopne
xor
fimuls
push
out
and
pusha
adc
jge
stos
fimull
js
lcall
add
mov
adc
aas
pop
xlat
xchg
sub
mov
mov
pop
cmpl
loop
and
push
inc
leave
into
inc
mov
xchg
cmp
and
push
mov
arpl
shrb
cld
xor
dec
jno
aam
popf
ficompl
pop
pop
mov
cltd
ljmp
mov
imul
leave
inc
push
ja
pop
jl
dec
sbb
pusha
pop
pop
mov
rolb
fidivrs
add
push
adc
fs
cmpsb
xor
pop
sbb
mov
cmp
sbb
and
jge
ret
adc
ds
add
mov
add
push
xchg
jl
jle
or
jge
jo
or
adc
lods
ret
cwtl
sbb
inc
jb
or
jae
xchg
in
jo
jne
fistl
fwait
pop
mov
insl
cmc
pop
push
fbld
lcall
add
jo
in
add
lcall
push
inc
xor
jnp
mulb
sbb
push
ljmp
test
dec
inc
push
ret
testb
mov
adc
cmpl
push
mov
adc
adc
pop
pop
xor
cmp
out
jae
mov
dec
inc
sbb
stos
sbb
cmp
icebp
in
sub
dec
push
lcall
add
jb
out
push
js
pop
cmp
push
ror
and
test
push
pop
ds
sbb
inc
mov
dec
or
or
pop
ret
jae
rcll
pop
push
sbb
add
je
lret
sub
adc
mov
js
inc
mov
repnz
test
js
ud2
push
orb
inc
cli
jp
je
pop
hlt
push
xchg
loopne
popa
push
mull
std
fimuls
jo
pop
xchg
insb
pop
and
push
xchg
lahf
push
arpl
mov
insl
jne
test
sub
dec
push
jle
xorb
ja
movaps
push
stc
mov
sub
and
adc
ret
cmp
ja
push
cmp
inc
jge
aad
push
cmp
stos
pop
jo
repz
dec
cmc
adc
or
movsb
add
add
push
adc
es
enter
cs
lock
leave
lcall
jg
fbstp
test
push
and
in
loopne
cmp
fwait
je
pop
mov
lcall
mov
add
cmpsb
dec
fists
mov
xchg
jle
jge
pop
in
int
and
mov
xorb
mov
outsb
jbe
das
repz
dec
imul
push
notb
movsl
ret
mov
sbb
push
dec
scas
call
lahf
dec
sbb
insl
pop
outsl
leave
repnz
jnp
movb
xchg
aam
xchg
or
ficoms
adc
inc
mov
jmp
frstor
inc
sub
mov
test
scas
cmpsl
inc
gs
iret
dec
aad
cwtl
addr16
daa
inc
adcl
jp
nop
insb
addr16
adc
movsl
mov
je
hlt
xor
add
je
pop
mov
jno
jb
ss
xchg
adc
add
push
and
sahf
outsb
adc
mov
push
sti
test
gs
xchg
test
xchg
pusha
push
pop
adc
aaa
stos
dec
mov
push
enter
dec
push
ljmp
xchg
shrb
sub
lock
dec
push
fwait
aad
jmp
cmpsl
adc
sbb
divl
movsl
dec
dec
xor
je
out
xchg
dec
cmpsb
mov
dec
fwait
cmp
shr
xor
dec
or
cmp
in
adc
jle
stos
pop
jl
out
lods
rclb
cmp
inc
inc
push
or
push
cmp
add
out
xchg
arpl
out
xchg
cmp
xchg
mov
aad
and
test
dec
paddusb
out
ja
adc
jg
in
cmpsl
imul
mov
stc
scas
add
in
or
orl
iret
push
call
xchg
jmp
xchg
out
cwtl
push
es
dec
xchg
mov
mov
rcr
in
push
mov
movl
pop
push
nop
ret
insl
adc
mov
pop
sub
fstps
fnsetpm(287
push
div
sbb
xchg
xor
add
xchg
sub
ret
cmp
pop
mov
sbb
sarl
push
out
push
in
shlb
xchg
jmp
xchg
jl
mov
mov
inc
int3
xor
dec
fcmovnb
out
jp
xchg
inc
pop
mov
lret
ljmp
dec
stc
sub
add
movsb
dec
sub
mov
inc
pop
mov
mov
push
adc
and
jno
adc
cmp
ret
out
mov
jae
mov
inc
icebp
js
dec
jo
addr16
and
cmp
or
in
xchg
pop
lock
shrl
stc
mov
cmp
out
arpl
xlat
out
pop
add
cmc
lret
mov
add
shlb
imul
and
dec
sub
icebp
cltd
rcll
push
mov
out
pop
test
outsl
dec
pop
inc
fnstcw
sub
inc
in
or
dec
fistpll
mov
loop
push
cmpsl
repz
aas
sbb
jg
scas
in
add
sub
or
jle
xor
or
jae
mov
and
outsb
sbb
jl
popf
mov
pop
std
sbb
ja
fidivl
mov
cmc
movsl
inc
mov
stc
cmovo
mov
das
inc
scas
mov
and
inc
int3
add
mov
jno
inc
ja
je
aas
adc
pop
and
pop
or
jo
sub
and
inc
js
int
dec
dec
mov
add
mov
aaa
imul
sub
sbb
scas
pop
xor
xchg
iret
gs
jo
xor
pop
divl
inc
ret
or
popf
xabort
cwtl
cmp
sub
addr16
aaa
loopne
insb
movsl
loop
push
repz
push
mov
inc
pop
jno
ja
inc
add
cmpsl
mov
adc
popf
xor
push
clc
out
xchg
fldl
roll
or
imul
shrb
cmpsl
les
arpl
insb
insl
insl
lock
aam
inc
jae
push
dec
shrb
pop
add
push
test
movsl
lods
in
sbb
test
addr16
adcl
sub
data16
inc
dec
or
stc
or
or
cmp
or
jp
ret
dec
imul
mov
push
push
fbld
fs
jg
mov
fidivrs
outsl
jo
mov
xorb
pop
dec
jnp
mov
xorl
mov
pop
lea
test
and
iret
adc
jne
es
inc
in
sub
es
imul
inc
adc
dec
push
cltd
and
jbe
push
lret
pusha
xor
inc
mov
inc
xchg
push
dec
jno
xchg
cltd
and
lea
out
jo
sbb
std
xor
out
dec
mov
push
movsl
sub
fidivrl
mov
out
and
push
or
add
pop
push
lret
dec
je
fadd
js
adc
xchg
dec
push
add
jno
bndstx
sbb
add
xchg
rep
or
adc
mov
inc
pop
cmp
add
add
jle
inc
xor
shrb
arpl
iret
xchg
lea
push
shlb
pusha
push
xchg
cli
sub
adc
jecxz
jmp
inc
fld
lea
and
mov
ror
sub
mov
mov
add
pop
and
fwait
in
loop
cmpsl
punpcklbw
sarl
dec
push
push
test
add
sub
xsaves
popf
xchg
pop
aam
mov
adc
adcl
cli
xchg
je
mov
pop
push
cmp
push
cmp
push
rcr
test
inc
push
or
iret
sbbb
cmp
sbb
push
pop
in
inc
loop
mov
aaa
mov
data16
sub
das
pop
dec
fsubp
ljmp
fs
xor
jmp
xchg
int
push
iret
loope
jo
ret
push
fnstcw
ljmp
push
addb
pop
daa
ret
lock
shrb
lcall
in
loope
popa
fdivl
mov
dec
jb
pop
xchg
mov
sbb
addl
sub
popf
gs
leave
pop
ds
hlt
mov
cwtl
pusha
mov
cmp
mov
out
jno
imul
js
enterw
dec
cltd
or
fcomi
inc
jmp
dec
push
test
mov
pop
dec
and
in
repz
popf
popa
mov
lock
test
sbb
sbb
inc
xchg
insl
jecxz
repnz
jmp
in
dec
xchg
push
loopne
jmp
xor
dec
xlat
xchg
cld
xchg
mov
adc
ja
ret
loopne
aam
xchg
xor
mov
mov
enter
fdivrl
cmp
sub
lahf
jo
nop
fsubs
test
add
adc
and
stos
pop
inc
jl
pop
lret
in
test
and
leave
outsl
push
mov
hlt
fisubl
fnsave
aaa
bound
sbb
xchg
repz
mov
mov
dec
cmp
xchg
loop
lcall
mov
add
and
jno
lock
inc
sbb
mov
cmp
fdivrl
push
int3
and
inc
push
push
push
sub
pushf
enter
sarl
loopne
cmp
cmc
jns
fistpll
mov
ja
jns
sbb
xchg
xor
jge
je
push
pop
decl
rorl
pop
pop
mov
call
adcb
pop
sbb
mov
mov
sub
mov
test
add
stos
in
pop
cli
xlat
inc
pop
fwait
pop
stos
mov
fcoms
lahf
and
inc
pushf
jno
xor
or
pop
inc
sbb
push
dec
and
mov
stos
psllw
or
jmp
std
ret
jnp
sbb
pusha
ss
mov
sub
adc
aad
pop
mov
jno
adc
xchg
xchg
imulb
test
xchg
jae
jge
xor
test
into
xorb
jle
or
loop
div
in
adc
subb
addb
cli
cwtl
sbb
add
jns
xor
jb
pop
iret
push
fadds
inc
pop
inc
inc
mov
lret
jb
outsb
mov
lds
push
mov
sbb
dec
cmp
jo
test
push
ret
jno
sbb
aam
pop
cs
mov
hlt
mov
repnz
aam
mov
nop
ja
fidivrs
popa
push
cmp
mov
add
lods
push
jg
dec
mov
xchg
int
test
mov
fs
jbe
xor
push
inc
push
nop
icebp
arpl
in
and
jo
out
cmp
inc
mov
andl
adc
nop
mov
mov
and
pop
and
mov
pop
xchg
ss
or
cltd
dec
inc
icebp
jg
out
movsl
xor
fnsave
aam
jmp
clc
adc
test
sub
cltd
pop
xchg
fisubrl
jecxz
cmp
cmp
data16
call
outsb
cmp
push
out
adc
pop
or
cmpsl
es
stos
pop
incb
and
sub
dec
mov
fcmovnbe
pop
in
mov
in
movsb
ljmp
lea
push
aaa
sub
mul
mov
int3
aas
mov
call
std
repnz
aad
in
and
inc
sub
std
push
pop
push
out
loop
mov
inc
sarb
sub
sub
into
jae
aam
mov
cld
pop
add
sub
incb
push
pop
loope
cwtl
in
or
inc
sbbl
xchg
ja
out
outsl
scas
jmp
das
int3
mov
arpl
jae
pop
insl
fsubl
cld
shrl
cld
lds
mov
je
icebp
dec
jae
adc
inc
push
into
xor
lret
test
pop
or
ds
mov
dec
xchg
jmp
xchg
ret
xchg
mov
pushf
call
loop
call
add
mov
fwait
nop
loop
push
jmp
sbb
lret
loop
lcall
cmc
test
jne
jmp
and
mov
push
inc
pop
sti
push
repnz
in
pushl
xchg
aam
fwait
rorb
xchg
ret
cmp
sbb
rcll
movsb
xor
mov
dec
lret
cli
das
iret
inc
in
sbbl
mov
adc
sar
fs
pop
xchg
test
ds
pop
mov
pop
jecxz
stos
add
aaa
adc
xor
fiadds
decb
sub
addr16
incb
lcall
and
fldl
leave
or
inc
cmp
mov
mov
cmp
lret
inc
mov
sub
pop
cmpsb
aas
stos
jnp
lahf
in
pop
adc
pushf
cmp
psrlw
xchg
and
leave
xchg
incl
sbb
mov
out
sahf
mov
out
mov
xlat
sbb
les
aam
xor
stc
dec
xchg
push
and
fstpl
jg
lds
arpl
loop
fs
cmp
push
ljmp
jo
popa
arpl
or
or
sbb
xlat
test
test
sub
orl
nop
mov
ret
jge
pop
ss
fdivs
cltd
dec
jle
maskmovq
testl
insl
jo
fistpll
and
cmp
aaa
test
mov
sbb
mov
das
inc
mov
mov
jne
loop
aad
xor
push
add
mov
rsqrtps
lea
push
imul
out
stos
cmpsl
or
cmp
jecxz
add
movsb
fadd
outsb
add
mov
cmp
push
lret
push
xor
mov
xchg
imul
scas
adcl
push
mov
cmp
jmp
jbe
mov
adc
icebp
xchg
fbld
sbb
pop
lahf
push
js
or
outsl
pop
int3
test
cmp
lret
dec
sub
cltd
inc
mov
mov
gs
pop
cmp
lds
test
outsl
out
imul
or
leave
push
dec
sub
push
jmp
jno
cmp
pop
cmp
add
or
inc
ffreep
adc
or
mov
fistl
sub
loopne
xchg
sbb
and
cmc
push
in
dec
inc
dec
andl
rcr
adc
hlt
arpl
xor
loope
jl
lds
jge
xchg
xchg
in
in
push
divl
pop
mov
aas
insb
lock
cmp
pop
scas
mov
mov
fdivl
dec
push
mov
movsb
dec
mov
adc
lret
xor
test
repz
sahf
jmp
iret
mov
fwait
jl
push
hlt
jae
fimull
movsl
movb
loop,pn
and
add
mov
fistps
es
outsl
mov
mov
ss
out
jnp
ret
movsb
fsubr
lahf
imul
dec
inc
lock
xor
es
add
or
cmp
mov
iret
shrl
popa
pop
mov
inc
jle
cmpsl
mov
push
inc
pop
pop
loopne
or
std
je
hlt
sub
cs
pushf
inc
mov
and
mov
mov
sbb
mov
stos
fildl
push
push
add
pop
shrb
cmp
xchg
and
sub
fidivrl
idivb
push
lods
push
mov
add
mov
int3
fiaddl
outsb
pop
pop
test
lret
fwait
inc
jbe
lahf
xstore-rng
cmpsl
sbbl
push
es
es
mov
or
jmp
pop
mov
test
lock
pop
and
sahf
outsb
stos
push
cmp
mov
sub
push
inc
jge
aas
mov
cmp
mov
jg
inc
add
sub
xchg
dec
inc
pop
imul
or
xchg
dec
adc
jo
jge
inc
mov
cmpsb
repnz
fmull
clc
push
stos
into
mov
daa
movb
ret
mov
sub
dec
cmc
sub
jle
aas
or
call
mov
mov
sub
push
mov
xor
dec
mov
cmp
pushf
aam
xchg
shll
pop
loopne
cld
mov
ret
mov
inc
ds
out
sbb
xchg
movsl
mov
fists
cld
mov
scas
mov
jp
pushf
and
sbb
mov
lock
fstpl
andl
test
cmpsb
adc
lock
mov
jae
test
notb
fldt
stos
mov
sub
loop
jbe
call
lea
cmp
push
movsb
xor
add
cmpsl
aad
pop
hlt
xchg
mov
cmpsb
incb
fistpl
pop
lea
jmp
les
jg
rcll
xchg
inc
cmp
and
sbb
daa
lds
push
xchg
sub
cmp
cld
pop
adcb
movsl
mov
xchg
mov
xchg
mov
and
cmpsb
repz
out
add
mov
dec
pop
dec
aad
push
or
adc
inc
ror
ss
rorl
adc
xor
mov
jnp
sbbl
mov
dec
jbe
mov
mov
imul
adc
cwtl
ficoms
clc
add
xchg
or
xchg
scas
rorb
lret
sub
out
clc
mov
sub
mov
ja
das
or
in
fcmovu
dec
sub
test
xchg
aas
ret
dec
jl
testl
mov
loop
je
les
push
test
and
lret
popa
cmp
cld
mov
pop
lea
lcall
dec
movsb
ret
jge
fs
in
jg
sub
subb
xor
and
cmp
jl
pop
sti
movsb
lods
popf
loopne
add
jle
dec
test
xlat
outsl
flds
add
div
or
dec
ja
inc
mov
pop
test
cld
scas
and
push
out
adc
lods
arpl
xchg
jo
push
push
lds
push
int3
jmp
mov
addr16
les
leave
ret
cmpsl
fcmovnbe
pop
mov
cli
imul
dec
cltd
or
jnp
jg
nop
mov
add
addr16
mov
je
fldenv
and
stos
pop
sbb
ret
pop
mov
roll
cmp
or
sbb
pop
cmpsl
pushl
xchg
fidivl
imul
xor
xor
pusha
push
fstpt
rcrb
adc
cmp
cmp
inc
mov
or
add
daa
outsb
pusha
ficoml
imul
lret
faddp
in
leave
sub
mov
cltd
sub
pushf
add
mov
shl
push
lret
push
push
popa
xlat
push
xchg
push
adc
push
jnp
cmp
data16
out
test
jmp
dec
repz
jae
ss
sub
add
enter
xor
dec
push
les
xchg
mov
mov
mov
rorb
loope
in
pushf
lcall
dec
lods
imul
insb
popa
jle
mov
cmp
das
aaa
mov
push
clc
jl
out
add
out
pop
or
or
stos
lret
push
fisttpl
mov
or
sub
addl
or
mov
push
cmpsl
mov
dec
xor
xor
lcall
xchg
xchg
out
mov
or
jns
ss
sbb
inc
sarb
push
lock
int
fwait
cmp
shrl
mov
sub
sbb
xchg
jle
fsubrs
or
aam
imul
icebp
pop
cmp
sbb
ds
inc
xchg
popf
ret
or
test
out
mov
lcall
pop
rorb
mov
daa
in
insb
lcall
add
repnz
dec
daa
in
outsl
int
add
and
adc
pushf
inc
fisubl
mov
fcoms
xchg
es
push
cmpsl
and
xchg
ljmp
and
popf
enter
push
out
in
shr
imul
adc
subl
lods
dec
pop
dec
mov
out
and
movsb
jo
bound
inc
xlat
mov
dec
add
xor
and
aam
lods
jmp
je
scas
inc
outsb
fsts
stc
lret
jbe
and
mov
add
pop
aas
out
push
cmp
xor
cmpsl
cmpl
aad
sbb
popf
movsb
fcoml
mov
dec
xor
push
adc
inc
popa
in
sbb
in
mov
clc
jne
jp
or
mov
nop
and
push
pop
hlt
rol
ficompl
ja
jbe
mov
repz
jmp
repnz
jbe
mov
mov
adc
in
jmp
xor
data16
xlat
das
ja
mov
pop
movsl
xor
repz
inc
xchg
dec
xor
push
sub
dec
push
or
cs
sbb
sbbb
cmc
outsl
pop
addl
cwtl
int3
call
push
movsl
roll
mov
adc
or
dec
sbb
je
es
hlt
out
or
xchg
aam
adc
mov
fstpl
imul
or
rcrb
aas
imul
mov
pop
aaa
adc
lret
jp
jbe
shll
loopne
es
xlat
lods
and
mov
stos
dec
pop
dec
pop
sub
getsec
mov
xor
pop
and
pop
mov
jo
dec
stos
sbb
adc
and
fdivrs
pop
cmpsb
test
lods
and
je
ret
cmp
inc
inc
dec
cmp
jns
adc
in
lahf
andb
xor
ret
xchg
dec
add
shrb
sbb
lret
nop
mov
dec
dec
push
sbb
loop
jno
jne
xor
sub
into
inc
pop
lret
sti
out
add
out
xchg
mov
pop
sbb
cmpsl
call
lods
pop
int3
inc
fstps
or
pop
mov
movsl
insl
mov
cld
test
mov
sub
and
pop
icebp
dec
sub
mulb
aaa
fcmovnb
push
mov
add
mov
lret
xor
shlb
add
aaa
loop
push
cltd
xchg
mov
cld
xacquire
dec
test
stc
mov
mov
int3
into
inc
fildl
sbb
test
and
pop
cmp
jg
rep
jnp
jae
add
sbb
jmp
push
xchg
mov
jg
xlat
jle
mov
mov
mov
and
pop
movsb
lods
jecxz
das
cmp
daa
xlat
push
cmp
pusha
xor
dec
es
inc
adc
shrb
xchg
push
sub
loopne
sti
into
dec
push
or
rcrl
pop
inc
push
jns
ret
cli
dec
sub
sbb
cmp
adc
scas
js
jmp
mov
rolb
push
push
add
xchg
mov
fisttpl
mov
cwtl
rorl
loopne
dec
cltd
jp
mov
jnp
sub
fsubrl
stos
jl
xor
in
loope
out
ja
mov
stos
xchg
push
mov
sar
and
push
cmp
mov
scas
and
pop
loop
sbb
fcomi
mov
leave
test
or
or
subl
add
ljmp
cmp
pop
imul
cli
aad
cwtl
push
scas
adc
addr16
mov
fwait
test
ret
mov
mov
mov
ljmp
std
cmp
int3
mov
push
pushf
mov
mov
orps
add
mov
popa
insb
inc
xlat
je
int
xlat
dec
test
lock
dec
shl
hlt
fisubrl
dec
lods
in
je
sbb
movzbl
add
hlt
fiaddl
pop
xchg
imull
rorl
push
mov
rolb
mov
mov
dec
push
stos
xchg
mov
les
mov
fstpt
push
outsb
enter
adc
in
xor
shrb
push
push
in
cmp
mov
enter
jns
loopne
push
loopne
add
les
mov
popf
clc
lahf
mov
daa
inc
test
xchg
mov
push
je
jne
push
xchg
out
sub
pop
pop
sub
jmp
xchg
sbb
xor
sub
shr
in
lds
imul
mov
push
pop
mov
in
cmpsb
aas
cmp
jecxz
iret
insb
shr
rol
insl
loopne
arpl
ficompl
loop
int3
jge
mov
lret
cmp
je
jg
push
pop
test
mov
fs
in
or
push
jbe
stos
jecxz
cs
sti
pop
and
test
aas
jae
pop
pop
and
test
loope
mov
or
cmp
mov
inc
mov
and
in
jp
push
jbe
mov
jno
in
add
xchg
push
xchg
out
and
ss
test
scas
mov
mov
cmp
lcall
dec
out
ficoml
jmp
sub
fists
addl
mov
loop
mov
sti
fbld
mov
lret
ss
pop
lahf
lock
pop
sub
imul
sub
test
mov
out
dec
jle
xor
sbb
mov
push
rclb
inc
ds
mov
fdivl
pop
xchg
sbb
stos
lea
mov
mov
ficoms
push
jbe
push
scas
inc
imul
inc
add
les
out
out
cmp
mov
xlat
or
ret
push
xor
std
loop
jg
and
sub
and
stos
ja
sbb
or
add
mov
arpl
into
insb
jo
pop
cmp
loope
mov
mov
mov
sub
stc
mov
or
fisubrl
dec
and
lods
das
jg
dec
mov
fsubr
clc
mov
in
or
dec
mov
dec
out
sub
sbb
data16
stos
dec
test
outsb
add
fsubr
pusha
pop
div
cld
xchg
adc
add
test
and
cvtps2pd
jle
and
inc
cmc
sahf
jp
push
loop
jae
pop
push
fs
in
lret
push
test
lock
jl
cmp
pop
push
das
pop
iret
repnz
fwait
pop
mov
push
mov
sahf
inc
jne
mov
mov
stos
mov
sbb
movsb
push
sbb
je
shll
data16
cmc
fcomps
and
je
fnstsw
mov
sub
mov
pop
out
int3
mov
gs
jo
adc
aaa
adc
in
xchg
ret
adc
and
jp
daa
xchg
mov
jmp
sarb
mov
mov
das
mov
nop
mov
xchg
xor
out
mov
pop
es
fwait
mov
sub
sahf
jp
xchg
mov
scas
iret
push
push
add
imul
dec
ret
mov
js
loope
add
mov
add
cmpsl
mov
movntq
out
mov
pop
inc
pop
sbb
test
adc
push
jge
lods
mov
jg
push
jmp
insb
xchg
xchg
ret
cmc
rorl
inc
and
xor
push
add
lock
enter
mov
jns
clc
fadd
movsl
jp
push
add
jl
and
daa
jl
aad
push
xchg
je
and
leave
sub
sbb
lret
dec
in
sti
cmpsb
mov
sbb
decb
int3
cmpsl
push
lahf
call
ficomps
adc
xlat
imull
xchg
mov
in
xor
or
leave
mov
repnz
xchg
adc
adc
movsb
out
stos
inc
cmp
mov
in
orb
adc
xor
mov
popa
mov
outsl
popf
push
popa
stos
push
stc
pop
sub
cltd
cli
sarl
jge
into
dec
sub
cmp
xorl
movsb
bound
add
fnstcw
xchg
sub
es
add
lcall
mov
imul
mov
and
pop
aad
in
andb
inc
imul
xchg
mov
sub
mov
pop
or
and
arpl
mov
scas
and
pop
mov
pusha
js
jecxz
popa
cltd
xchg
jns
jae
fisubl
fsubs
divl
xchg
xor
cmp
dec
std
sub
sbbb
rcrb
add
aas
mov
adc
xor
inc
push
mov
in
in
jp
sbb
xchg
pop
popf
iret
jo
sbb
mov
mov
jp
mov
ljmp
in
pop
es
mov
fsubrs
or
xor
imul
stos
sar
sarl
cmpl
mov
jmp
dec
xchg
or
dec
out
mov
rolb
cwtl
ror
add
addb
ja
pop
adc
push
pop
xchg
jg
mov
mov
fbld
popa
rorb
mov
test
jae
sbb
loop
inc
jbe
test
aad
dec
jp
clc
iret
push
cltd
ja
out
or
mov
psubsw
test
popa
jp
inc
pusha
in
lods
jo
cld
fwait
xchg
inc
pop
aaa
pop
aaa
inc
cli
push
pop
loop
pop
or
mov
pop
inc
in
pcmpgtb
xchg
or
dec
pop
mov
mov
jb
sub
ret
int
out
loopne
ljmp
jnp
ret
cmp
pop
sbb
inc
cmp
enter
xor
sbb
sub
out
push
mov
cmp
xlat
inc
cli
fnstenv
mov
push
pop
pop
lock
repz
loope
xchg
xor
sbb
aas
fucomp
push
sti
pop
xor
push
test
test
andb
mov
mov
jno
jge
jbe
jb
mulb
xchg
or
inc
outsb
jp
add
mov
enter
mov
xchg
fcomps
call
fwait
sub
pop
inc
xchg
fists
lock
push
pop
cmp
pslld
add
jle
inc
fwait
jmp
xor
leave
pop
sahf
pop
adc
shl
out
or
inc
sub
shlb
test
jo
insl
in
addr16
lret
or
fiadds
leave
fldenv
cmpsb
jo
ljmp
jmp
mov
mov
cmp
inc
andl
data16
mov
loope
jmp
iret
call
pop
test
data16
sbb
sub
stos
mov
xchg
jbe
xchg
out
in
inc
mov
adc
lods
mov
popa
mov
les
and
aas
repnz
adc
push
test
pusha
insl
stos
ficoms
outsb
sub
mov
adc
aad
cmp
iret
test
add
sbbl
push
mov
test
nop
cmpsl
mov
jno
dec
rol
xchg
push
dec
cmc
pop
or
call
xchg
mov
inc
cld
jl
pusha
daa
xorl
das
or
mov
add
cmpsb
cmp
insb
xchg
idivl
and
add
cld
pop
add
iret
ds
lods
push
sub
scas
or
mov
lahf
out
dec
push
outsb
leave
lret
pushf
leave
pop
push
popa
arpl
xor
or
push
fmull
mov
add
sub
push
inc
in
enter
pop
push
inc
mov
cmp
sbb
pop
lods
insl
sub
jl
in
mov
xorb
and
lock
mov
push
in
jge
out
rorb
cmp
sbb
mov
mov
mov
data16
ljmp
test
jl
jl
xchg
mov
lods
lods
mov
inc
imul
aam
sahf
in
pop
xchg
xchg
dec
push
inc
dec
out
push
fst
push
and
sbb
repnz
mov
fmuls
xor
pop
and
jo
push
xchg
cmp
mov
repnz
fbstp
insb
out
pop
pop
out
sbb
push
out
clc
jecxz
pop
dec
out
sub
addr16
int
xorl
js
loope
inc
push
and
icebp
loopne
mov
inc
js
fcoms
xor
outsl
push
aad
jnp
daa
add
xchg
in
mov
fists
sub
in
outsl
movl
mov
jno
sbb
push
test
mov
or
test
inc
adc
add
into
out
mov
loop
mov
call
xlat
mov
xor
add
push
fimuls
imul
cmpl
mov
insb
push
rcl
stos
inc
call
jl
fwait
xchg
xlat
mov
movsb
mov
ficoml
xor
jge
jnp
xor
xchg
pop
out
cmp
jle
mov
leave
cld
into
sbb
sub
jo
popf
in
icebp
into
or
in
and
dec
xchg
inc
jns
or
dec
mov
inc
mov
test
mov
mov
vpmacsww
cwtl
arpl
fisttpll
xlat
dec
lods
in
sub
std
ds
push
rcrl
fwait
push
enter
loope
rcll
push
mov
jl
test
mov
xor
insl
das
rcr
in
ficoms
mov
hlt
pop
aam
lahf
cmp
in
push
sahf
test
inc
lahf
test
sbb
stc
and
inc
pop
dec
dec
jmp
dec
sub
rol
in
sbb
das
adc
cli
xchg
dec
scas
lcall
insl
es
mov
ror
add
xor
cmpsl
test
fs
jb
mov
jecxz
imul
jmp
dec
adc
nop
cmp
sbb
mov
cmpsl
mov
pop
popa
add
test
xchg
push
xchg
aam
lret
pushf
jecxz
sub
xchg
lods
cmp
enter
jo
nop
inc
adc
or
out
adc
fisttpll
inc
push
xor
jb
sub
out
mov
mov
add
fsubrl
xor
cmpb
pop
mov
in
or
pop
sub
int3
in
into
jmp
pop
movsb
push
mov
mov
jg
sahf
aaa
lret
push
in
xchg
jne
lea
scas
or
and
lods
jg
sbbb
dec
add
cmp
rcrb
into
imul
push
xor
repz
cmp
xchg
or
sbb
cmpsb
jl
rcll
mov
mov
shl
outsl
adc
cmc
sbb
in
xchg
int
or
sub
das
sub
aam
arpl
scas
cmp
popf
add
insl
or
sub
shr
cld
xorl
fsubrs
shlb
xor
jg
cmp
pop
push
mov
mov
or
dec
push
out
add
inc
xchg
pop
test
ja
pop
or
mov
push
shl
pusha
cmp
pushf
add
lea
pop
test
shll
jl
xchg
test
ljmp
xor
fsts
push
xchg
inc
aam
jle
pop
aaa
outsl
js
and
cmp
xor
push
jmp
or
inc
jge
push
push
lcall
pop
mov
cmp
mov
adc
cmpsb
cmpsb
in
pop
dec
and
mov
and
or
or
in
sub
adc
loope
out
test
js
cmp
aad
jno
aam
sbb
and
ficoms
pop
sub
iret
insb
cmpsb
xor
popf
xchg
xchg
lahf
xor
jge
and
mov
adc
dec
pop
inc
push
inc
out
das
mov
f2xm1
call
push
shll
addr16
loopne
hlt
xor
leave
or
ss
insb
mov
addl
clc
negl
ret
push
outsl
icebp
fcmovu
mov
scas
sub
mull
xor
xchg
popf
or
push
aas
jl
test
cmp
dec
ja
jbe
mov
jae
in
rol
add
mov
das
arpl
sub
lods
push
in
out
sahf
fisubs
addl
imul
arpl
pop
mov
push
jle
mul
out
push
push
in
push
push
jmp
push
test
sub
cmpl
inc
xor
mov
jae
outsb
adc
xor
dec
or
xor
icebp
or
or
xor
fs
inc
mov
pop
inc
cmpb
decb
pusha
adc
sub
or
in
popa
lea
pop
dec
xchg
mov
js
cli
arpl
ret
mov
mov
clc
lret
scas
push
xor
cli
call
xor
mov
popf
ficomps
xor
cmp
push
fbld
in
dec
push
and
lcall
fisttpl
xchg
outsl
push
int
nop
pusha
inc
cmp
mov
lods
ss
mov
addr16
pop
push
mov
arpl
xor
jnp
outsl
jg
scas
sbb
leave
mov
dec
jo
test
adc
push
clc
cmp
nop
out
inc
mov
cmp
sti
out
sub
movsl
xchg
inc
mov
cltd
ja
xchg
movsb
add
push
mov
pusha
cltd
add
jb
cmp
push
jo
pusha
js
jp
pop
mov
cmovne
andb
pusha
filds
aaa
mov
pop
or
cmp
sub
and
daa
sbb
test
hlt
xor
mov
pop
add
jne
xor
adc
or
inc
lock
jo
nop
mov
in
mov
mov
push
nop
fs
out
pop
icebp
mov
pop
jp
dec
xor
cltd
and
iret
ljmp
lea
outsl
cmpsl
fimuls
cmpsl
les
fildl
mov
lret
insl
call
arpl
sahf
ret
push
cmp
outsb
jne
push
into
inc
out
sub
xchg
ljmp
and
xchg
sti
scas
movsb
mov
scas
adc
sbb
xchg
ret
sbb
cmp
fcmovu
inc
popf
dec
addb
js
xor
int
xor
mov
imul
call
lds
sub
in
sar
cli
pop
out
xor
and
not
mov
pushf
mov
icebp
fldl
xor
pushf
daa
inc
sub
push
push
sbb
out
in
mov
and
stc
push
subb
clc
pop
into
jb
push
push
scas
scas
insl
lahf
lods
jmp
push
pusha
xor
ss
push
aas
icebp
adc
jmp
mov
idivl
push
data16
xor
xor
xlat
xlat
jne
dec
pop
ficomps
add
andb
adc
arpl
mov
xor
adc
sbbb
out
inc
mov
or
mov
cs
and
lahf
popl
mov
xlat
cmpsb
inc
xchg
adc
jno
lahf
mov
sbb
in
push
push
mov
mov
sbb
lea
stos
jge
push
gs
iret
idivl
ljmp
dec
in
mov
xchg
lods
jecxz
and
rcrb
add
inc
repnz
jbe
mov
adc
aad
and
in
rolb
jg
ret
push
call
dec
mov
xchg
dec
adc
sbb
je
into
es
xlat
pop
arpl
mull
std
imul
pop
mov
mov
push
xchg
mov
pop
dec
je
jb
push
test
fs
je
add
sbb
or
push
mov
mov
sbb
adc
inc
mov
or
gs
rcll
pop
rolb
dec
std
ficomps
fwait
int3
pop
in
mov
aad
ja
adc
push
inc
xchg
cmpsl
xchg
adc
and
cli
ljmp
xor
inc
xorb
jmp
inc
jmp
add
pop
out
push
lods
dec
xchg
push
mov
movsb
aam
inc
cld
push
add
or
mov
repnz
aaa
inc
add
loop
in
inc
in
test
or
lret
enter
in
jmp
insl
jno
inc
cmp
cmp
aad
iret
push
arpl
mov
clc
jbe
fildl
pop
call
cld
fldl
fucomip
pop
push
or
mov
adc
push
cltd
scas
bound
push
es
outsb
sub
push
mov
jl
mov
cmp
sbb
or
mov
jecxz
lods
gs
push
xlat
mov
int
push
and
jmp
movsb
lahf
mov
addr16
js
imul
jae
out
adc
pop
xorl
xchg
test
scas
test
jg
pop
int
aaa
imul
adc
xchg
lret
inc
push
cli
xor
idivb
insl
cmpsb
add
mov
cs
push
enter
xchg
pop
fs
scas
inc
mov
ss
jg
sub
add
sub
mov
mov
adc
rorl
or
icebp
mov
xchg
roll
fwait
enter
cwtl
mov
loope
leave
ret
push
vpaddsb
or
sbb
jmp
hlt
add
std
cmp
in
jle
mov
and
mov
sahf
sbb
es
fs
jl
hlt
sub
idivl
jge
cltd
jle
add
fdivr
outsb
les
mov
mov
mov
adc
pop
dec
roll
lcall
mov
sub
in
jg
xchg
mov
and
push
push
add
frstor
fiadds
movb
scas
fs
mov
sahf
jmp
nop
imul
dec
rorb
dec
je
mov
lea
lret
out
xlat
jp
ljmp
pop
popa
mov
ja
test
cmp
lds
mov
adc
push
xchg
push
mov
push
inc
sub
xchg
push
mov
cmc
fmuls
jle
pop
shll
iret
dec
adc
sub
xchg
dec
push
sub
cmpsb
loop
jo
cmp
arpl
xchg
sub
scas
rcrb
sbbb
push
scas
in
dec
mov
or
imul
jnp
decl
or
andl
movsb
shll
cmp
dec
mov
xlat
in
lret
inc
xor
test
jg
mov
push
test
xchg
pop
nop
das
popf
les
dec
aam
pop
and
scas
popf
and
pop
push
mov
test
int
out
outsl
sub
mov
push
ljmp
or
xor
lret
xchg
pop
stc
mov
addb
data16
popf
pop
test
xchg
addr16
out
lahf
stos
pusha
pop
loope
enter
cmpb
ficoms
adcl
dec
or
outsb
cltd
test
mov
push
shll
out
aaa
fs
sahf
inc
and
dec
mov
jb
mov
jp
sbb
dec
lock
and
pop
inc
gs
jmp
mov
js
mov
iret
xor
fstpt
js
mov
add
repz
pop
scas
js
xor
imul
push
jl
xor
xchg
sub
mov
lods
sub
gs
out
dec
mov
jne
xchg
ficoml
and
mov
or
es
mov
adcb
ret
dec
push
loop
xchg
cmpsb
and
and
mov
xor
xor
fistpl
dec
dec
inc
iret
cli
or
xchg
in
aas
dec
mov
jbe
sbb
xor
insl
pusha
in
xchg
addb
cmpsl
sub
out
movsb
sbb
test
xchg
ss
cmc
pop
stos
jae
jle
test
xchg
hlt
adc
out
xchg
sub
add
adc
adc
mov
andb
xor
test
test
cltd
lds
push
outsl
xchg
dec
inc
cwtl
pop
xlat
out
or
fists
add
jae
data16
or
popa
adc
or
adcl
rorb
into
daa
mov
in
rcll
mov
push
pop
cmp
fwait
jbe
pop
inc
sub
movzwl
popf
add
repz
xchg
push
push
xchg
cmp
repnz
shlb
lods
mov
sahf
adc
rcl
inc
aaa
aas
xor
xlat
cli
sub
jl
sahf
push
push
add
adc
int
out
aad
sbb
xchg
imul
roll
mov
xchg
xchg
jge
dec
imul
add
mov
es
cmpsl
dec
rorl
ja
xor
pop
mov
add
lods
jge
addr16
divb
rclb
mov
xor
push
xchg
cwtl
sub
or
jp
fstps
sbb
test
aad
inc
fisttpl
outsb
sbb
add
jno
repnz
not
lret
fnstenv
divl
dec
out
mov
pop
mov
fnstsw
mov
aas
outsb
iret
mov
jle
daa
mov
cwtl
in
in
and
test
fistpl
mov
xchg
push
clc
les
sub
daa
sbb
xor
cli
in
fwait
adcb
out
sbb
xchg
das
or
mov
nop
imul
dec
sbb
mov
adc
push
lahf
in
cli
mov
je
or
lock
push
add
xchg
rcll
mov
or
push
fdiv
inc
and
in
shrb
cld
repnz
fcomp
pop
jp
jb
xor
inc
inc
rorl
push
jbe
fwait
add
jns
out
mov
push
jae
mov
ret
push
mov
leave
jb
inc
or
ret
push
and
jmp
mov
sbb
rclb
outsb
mov
outsb
pop
pop
adc
jbe
cmpsl
xchg
call
xor
into
pop
push
cmp
sub
pop
inc
adc
push
enter
pop
cmp
xchg
lea
add
popf
mov
repz
cmp
push
dec
stos
ret
nop
movsb
aaa
movsb
mov
out
out
rol
mov
movsb
sbb
js
ret
dec
cltd
or
push
mov
dec
inc
sub
sbb
jle
pop
push
xor
xlat
lods
repz
adc
ret
sbb
out
ret
pushf
lods
add
cmpsb
and
mov
push
test
adc
inc
int3
dec
out
sub
aad
inc
js
or
and
or
jnp
mov
incb
xchg
or
aas
jb
xor
ja
sub
adc
xchg
aaa
pop
adc
aaa
cmp
dec
cmpsb
shrl
jp
xchg
int
xchg
imul
je
in
mov
xchg
mov
aam
jmp
arpl
clc
sbb
dec
and
cmp
scas
out
pop
test
lret
dec
testb
cltd
fildl
daa
insl
daa
add
xor
lock
in
testl
mov
subb
fildll
mov
ss
xlat
and
cmp
ja
or
add
add
roll
inc
sub
xor
xchg
push
mov
inc
int
test
pop
fldenv
es
stos
inc
iret
cmp
pop
jg
jno
mov
cmp
fbstp
ljmp
lods
pop
popf
js
push
out
push
cwtl
std
lea
ds
adc
lods
cmp
int3
aas
push
mov
ret
arpl
scas
pop
mov
sub
ds
outsl
xchg
mov
add
cmp
sub
add
mov
xor
lea
xchg
cmc
das
pop
sub
mov
jmp
popf
xor
pop
cmp
mov
or
jnp
outsb
mov
enter
ffreep
in
fsubrs
cwtl
pop
addr16
gs
fucom
mov
sub
jge
ljmp
nopl
mov
std
cmc
loopne
pop
mov
nop
sbb
adc
adc
and
lock
ja
test
cmpsl
popa
addl
aas
mov
lods
outsl
sub
sub
xchg
xor
pushf
lock
js
push
test
fcomi
pop
in
xchg
in
push
and
xor
ret
daa
in
sbb
std
jecxz
mov
and
je
xchg
lds
sbb
ret
aam
dec
adc
mov
sub
and
lahf
imul
xchg
xor
enter
jbe
orl
int
mov
fdivr
jecxz
inc
das
loopne
dec
pop
mov
push
or
out
jb
push
repz
xchg
xchg
pop
and
push
insl
test
mov
sahf
sub
outsl
cmp
gs
movsb
ja
cs
leave
in
nop
jae
sahf
or
and
and
test
fmulp
popf
popa
mov
out
adc
rorb
jns
lahf
iret
push
fsubrl
or
shlb
fimuls
lods
adc
sbb
stc
adc
pop
loopne
popa
stc
push
mov
mov
fldl
in
icebp
or
xor
pusha
cmp
dec
dec
cld
aam
adc
xchg
test
cmp
or
nop
jns
fcoms
fsubrp
fld
mov
pop
scas
push
pop
fsubl
jne
pushf
lcall
daa
inc
and
push
je
stos
test
cmc
pmaxsw
flds
loope
leave
les
push
adc
mov
rep
sub
pop
dec
add
jge
xlat
mov
lret
xchg
or
ret
dec
jl
out
jg
push
fcompl
sar
and
test
xlat
je
or
lahf
jp
jle
add
pop
cli
push
icebp
add
jecxz
fwait
loopne
and
sbb
push
cltd
push
pop
jecxz
lock
xorl
xor
mov
insl
push
jo
and
sbb
add
test
cmp
rdmsr
inc
push
aad
jg
fwait
pop
pop
sub
lahf
andl
jae
and
inc
dec
pop
shl
sbb
in
out
aaa
push
std
xchg
addl
mov
adc
xchg
mov
lret
mov
call
mov
or
dec
sub
jmp
push
and
aam
iret
mov
mov
jno
jp
lds
cli
js
repz
jnp
dec
sbb
cld
out
add
ret
nop
sbb
shll
cmpl
push
in
loope
aas
es
mov
push
push
and
jb
adc
inc
std
scas
pop
inc
mov
shl
aas
inc
movb
loop
gs
xor
dec
jb
push
movsb
mov
push
fisttps
ja
out
pop
xchg
imul
mov
xor
dec
out
sti
das
pop
push
addr16
push
push
out
fidivs
jbe
mov
pop
sbb
in
mov
outsb
movsb
pop
sbbl
mov
sub
mov
dec
cmp
add
shll
orl
das
sub
add
mov
lret
popa
insl
mov
imul
inc
push
leave
pop
xor
scas
dec
push
lds
insl
xchg
iret
fadds
cmpsl
xchg
push
add
insl
fbld
adc
mov
pop
andl
xchg
sbb
imul
sub
add
ljmp
mov
test
push
adc
xchg
xor
stos
rcr
stc
cld
dec
loopne
mov
push
fnstsw
push
fimull
es
fs
push
push
shlb
stc
out
adc
aad
outsl
lea
movsb
pop
popa
or
mov
add
jbe
xchg
iret
xchg
add
insb
dec
clc
sbb
mov
clc
mov
mov
shrl
push
or
dec
mov
pop
mov
xor
rcrl
ret
repz
add
mov
push
adc
xchg
push
sbb
movsl
cmp
arpl
lods
in
cmp
or
pop
pop
stos
mov
loope
cs
in
test
loop
cmp
mov
and
scas
data16
sub
mov
loope
cmp
cmp
and
movb
sbb
ljmp
adc
push
push
out
cmc
pop
mov
fsts
std
sub
and
add
mov
cmc
adc
in
jecxz
inc
imul
add
dec
and
aas
mov
or
imul
or
add
fwait
xor
cmpsl
loop
stos
adc
add
mov
sub
mov
inc
and
inc
cmp
sbb
outsb
pop
stc
push
pop
and
sbb
mov
outsl
push
xor
fs
jne
jle
adc
sub
pop
inc
push
and
cmpsl
push
enter
jb
lods
lock
xchg
mov
stos
mov
stos
arpl
rcrl
mov
jnp
add
ds
je
inc
ljmp
lret
mov
jb
jecxz
sub
clc
dec
push
call
cwtl
stc
mov
in
inc
push
dec
add
and
and
and
inc
nop
mov
bound
movsb
out
clc
sbb
xor
jb
xor
or
fwait
jle
mov
xor
sbb
popa
xchg
push
das
mov
flds
push
mov
cmp
add
cmpsl
addr16
push
xchg
je
addr16
and
pop
push
dec
ficompl
lahf
push
adc
xchg
scas
sub
inc
lahf
mov
mov
dec
or
shrl
push
sbb
bnd
lcall
pop
sbb
mov
inc
test
pop
arpl
or
or
pop
xor
pop
jmp
xor
movsb
mov
or
inc
cmp
xchg
shrb
cmc
jge
pusha
dec
push
or
push
cmp
cmpsl
cmp
push
xor
ror
jno
aam
jo
jl
in
shlb
fidivrl
je
ds
std
out
jmp
stos
test
fdivrl
int
push
cmp
iret
hlt
ljmp
pop
enter
cmc
or
xor
sti
and
scas
ljmp
sahf
sbb
cmp
scas
pop
test
stc
lods
mov
jle
mov
push
xlat
mov
aaa
aad
shr
div
stos
mov
icebp
and
xchg
loopne
mov
inc
push
mov
lret
push
in
insb
popf
into
mov
dec
fistps
or
scas
mov
push
testb
mov
or
shr
rcrb
add
call
test
jno
stc
mov
mov
jle
sbb
in
call
aam
xchg
dec
push
dec
lea
pop
lods
mov
andb
sbb
out
out
nop
jae
cld
sti
push
mov
push
sbb
xor
cltd
lods
cmp
rorl
xchg
xchg
int
sub
ljmp
ja
push
fsubr
ljmp
into
ljmp
xchg
mov
lock
ja
int3
pop
js
ljmp
repz
cmpsl
and
inc
ret
xorb
cmpsb
dec
mov
mov
lret
ret
movl
out
leave
into
mov
lods
xchg
jge
rorl
aaa
jecxz
je
fmuls
out
jns
or
inc
mov
pop
add
in
mov
std
hlt
inc
xlat
mov
mov
push
inc
push
cltd
ss
jo
dec
mov
shll
in
pop
mov
and
lret
cmpsb
push
mov
and
mov
cmp
syscall
sbb
push
iret
pop
mov
mov
mov
std
outsb
adc
xor
jne
jle
incb
jmp
enter
ja
mov
dec
jl
jp
jno
fsubr
xchg
int
jmp
add
mov
notl
xchg
inc
cmp
ret
sti
hlt
jmp
mov
mov
push
push
xchg
sub
adc
sbb
push
jp
rorb
aas
cmp
mov
inc
sbb
imul
inc
jo
lock
sahf
cmpsl
jecxz
mov
out
not
push
cmp
nop
xchg
fnstenv
pop
xor
adc
push
mov
into
jge
outsl
ds
cmpsl
add
insl
pop
mov
or
jae
insl
jg
jl
stos
repz
bound
add
lret
adc
lds
lock
push
sahf
or
pop
pop
iret
sbb
loopne
imul
test
test
lret
and
add
subb
je
test
mov
jle
xchg
or
scas
std
dec
pop
fisttpl
sub
cmp
and
push
vrsqrtss
es
mov
jmp
arpl
xchg
xlat
inc
gs
sub
movsl
cmp
fs
mov
outsl
ja
icebp
xchg
lcall
cmp
es
dec
subl
into
mov
test
pop
dec
add
js
xchg
sbb
mov
xchg
mov
sub
clc
jle
mov
pusha
add
pop
push
xchg
pop
fwait
mov
jnp
mov
push
adc
sbb
sub
jle
cwtl
pop
push
or
add
test
push
push
or
leave
adc
mov
popa
out
or
inc
mov
xor
mov
stos
cs
insb
mov
or
mov
clc
mov
push
call
ljmp
cmc
adc
and
jmp
sbb
ret
sub
sub
cmpxchg
fidivs
aad
das
sahf
adc
out
add
cmp
outsl
or
adc
testb
dec
cmpsb
shrb
scas
push
jo
mov
arpl
in
out
aam
inc
in
outsb
orl
stc
pop
adc
ret
ljmp
test
insl
scas
out
jae
add
cmpsb
mov
mov
mov
aaa
dec
sbb
jbe
int3
and
cmpsb
je
xchg
and
fists
cld
mov
xlat
or
leave
mov
mov
and
insl
cmp
pop
out
mov
inc
adc
mov
push
jnp
sbb
pop
dec
sub
test
in
pop
push
repnz
pop
cmpl
scas
xchg
adc
xchg
cli
cmp
sub
jmp
sbb
das
cmp
out
lret
jecxz
cld
jmp
jle
pushw
pop
xchg
sbb
xchg
movsl
xchg
push
xchg
push
loop
stos
daa
loopne
int3
std
aam
inc
cmp
push
mov
mov
pop
das
mov
sbb
push
lock
lret
das
test
mov
mov
mov
or
pop
pop
rorb
jmp
push
fsubs
mov
sbb
dec
lcall
pop
lods
loope
ljmp
fsubl
jnp
mov
mov
cltd
les
lea
xchg
mov
test
push
xchg
inc
pop
imul
lahf
xchg
and
shlb
cmp
fidivs
push
sub
stos
mov
mov
dec
mov
call
or
jnp
in
out
imul
lcall
sti
shll
dec
sti
fmul
ljmp
addr16
pop
lock
pop
pop
inc
dec
inc
pusha
insl
test
nop
notl
cmc
jbe
insl
and
jnp
mov
in
sbb
rcrl
inc
push
insb
mov
test
jge
inc
sarl
push
mov
bound
jecxz
in
inc
cli
mov
cmp
lahf
or
cwtl
lea
std
rcrb
add
cli
cmp
mov
repnz
outsl
mov
mov
das
sbbb
jno
jno
subb
pop
push
mov
popa
sbb
aam
cmp
add
leave
fnstsw
out
pop
lds
rolb
cmp
cmc
jg
test
cli
dec
mov
repnz
das
mov
push
aas
mov
ret
out
addr16
add
lret
ss
add
rorl
int
pop
or
adc
mov
cmp
dec
scas
gs
outsl
ljmp
ljmp
pop
sbb
in
xor
push
in
fisttpl
cmp
adc
sbb
jae
jge
mov
add
mov
out
add
test
push
dec
bound
adc
ds
sub
or
xchg
stos
sub
pop
lret
cltd
pop
inc
es
xchg
out
jmp
rolb
dec
push
dec
jne
push
lret
call
mov
lahf
mov
ss
fidivrl
cmpb
comiss
lret
mov
mov
or
mov
xor
adc
jae
in
dec
add
cmp
repz
cmp
mov
dec
cltd
aam
arpl
iret
lea
xchg
mov
mov
jbe
or
sbb
test
pop
dec
mov
rclb
mov
test
add
fisubs
push
jns
in
jl
test
stos
adc
imul
xor
sarb
aaa
imul
jl
cmp
sub
lret
push
dec
dec
add
out
dec
mov
push
shlb
outsl
loopne
popa
add
mov
punpckhdq
mov
xchg
mov
rorb
repz
pop
cmpsb
jno
push
jno
adcb
mov
jle
loopne
mov
sahf
adc
xchg
mov
jb
mov
dec
mov
jl
sbb
test
shrb
mov
jecxz
cmp
orl
fs
pop
mov
jge
lret
addr16
adc
call
aad
data16
add
cmp
faddl
cwtl
and
in
cld
dec
mov
cmp
ret
nop
jp
cmp
iret
ss
xlat
scas
sbb
fstpl
sbb
outsb
outsl
ss
xor
stos
cmp
shll
pop
outsb
call
addr16
sub
xchg
jle
push
and
push
adc
arpl
out
in
and
pop
je
inc
inc
xor
lret
lods
popa
aad
in
sahf
neg
inc
pop
scas
pushf
in
scas
fildll
xor
jns
fs
adc
mov
insb
dec
rclb
push
in
arpl
test
mov
jo
imul
repz
loope
inc
and
adc
out
push
xchg
adc
fisttpl
mov
hlt
sbb
bound
stos
push
inc
xor
outsb
lods
loope
ja
jg
enter
vcomisd
jb
adc
sbb
cmpl
mov
xor
rcrl
mov
xor
sti
push
dec
loop
repnz
sbb
pop
fs
push
into
and
jbe
mov
ljmp
mov
add
and
or
into
jns
adc
cmpsl
cli
push
and
xor
pusha
sub
or
dec
xchg
inc
movsl
mov
arpl
pop
popa
push
push
fs
pop
ret
addr16
lret
rcrl
xchg
mov
and
push
testb
mov
nop
dec
and
pop
or
dec
pop
fsubl
jge
sub
cmpsl
pop
mov
cmpb
dec
sbb
scas
mov
mov
cltd
ljmp
inc
cmp
sbb
inc
dec
xor
int
sub
movsb
addl
es
fs
or
sub
mov
mov
or
inc
pop
clc
in
push
outsl
add
mov
fs
sub
lea
inc
add
int
loop
ds
loopne
arpl
dec
jbe
cmc
sarb
ret
sub
push
mov
mov
fistl
inc
add
push
repnz
stos
test
push
popf
push
xor
add
fdivrs
movl
in
and
and
jb
roll
incl
fucomi
inc
int3
xchg
aas
xorb
lods
outsb
xor
loop
cmpsb
jbe
mov
pop
jne
fcompl
test
mov
adc
ret
and
jle
loop
jge
cwtl
xchg
jne
mov
cmp
out
mov
sub
test
lahf
subb
sub
push
xlat
push
je
leave
pop
sbb
test
mov
into
ss
incl
lods
and
jmp
xchg
lds
jae
fimuls
pop
jo
inc
leave
and
xor
lock
sahf
jnp
or
mov
or
or
sbb
insb
lods
divl
push
pop
mov
mov
je
xchg
sub
icebp
and
pop
jae
mov
push
mov
jns
push
add
sahf
test
or
sub
iret
shlb
jnp
sub
cwtl
in
adc
popf
push
loop
dec
push
cwtl
in
mov
adcb
xchg
ret
or
bound
xor
ja
pop
es
jp
clc
or
sub
push
popl
test
lcall
sub
xor
mov
mov
sti
pop
aad
stc
bnd
mov
gs
dec
out
hlt
mov
pop
lea
test
in
lods
jecxz
pop
mov
dec
stos
xchg
sub
fimuls
inc
bound
sub
jo
xchg
fwait
ret
xchg
mov
or
popf
cld
addl
out
arpl
jge
adc
sub
lret
cwtl
pop
jo
pop
adcl
pop
sub
push
pop
shlb
pusha
cmpsl
ret
jne
lods
lods
xor
mov
inc
jmp
xor
mull
out
and
in
fcoml
lret
and
insb
nop
sar
loope
arpl
sbb
xchg
push
or
rolb
mov
xchg
repz
jb
mov
sub
fsubrl
pusha
cmp
xchg
fs
push
shlb
push
jmp
cs
lret
icebp
push
push
in
dec
dec
cmpsl
das
cmpsl
adc
movsb
orl
repz
inc
stos
or
scas
mov
xchg
xchg
jnp
pop
push
xchg
ja,pn
fnsetpm(287
rclb
push
push
rolb
xchg
cmp
test
mov
mov
dec
add
enter
in
dec
inc
adc
ss
lea
cmc
adc
cmc
xchg
stc
cli
mov
arpl
xlat
aaa
jo
call
jo
pushf
xchg
sub
mov
or
adc
jae
mov
mov
sub
mov
xchg
loopne
jle
xor
cmp
aad
mov
outsb
dec
mov
xor
jecxz
fcomi
mov
ret
int
je
lret
into
stos
mov
add
mov
rclb
cmp
and
loope
bound
cmp
test
or
xor
movsl
inc
push
add
les
mov
jnp
xchg
xor
fnstenv
into
popf
loop
mulb
enter
sub
xor
insl
or
add
and
mov
orb
lcall
mov
xor
jno
xor
pop
push
sbb
addb
mov
adcb
imul
xorl
or
pop
andl
cmp
int
test
xchg
xor
lret
out
xor
std
out
cs
je
ss
pop
cmp
mov
push
mov
pop
inc
adc
inc
dec
mov
add
xlat
rcr
in
ljmp
mov
inc
ret
cli
fstpl
add
es
std
jb
xor
inc
mov
test
aaa
dec
ret
mov
scas
jbe
lods
mov
fsubrl
std
push
fcmovne
notb
inc
daa
testl
xchg
insl
sbb
mov
lahf
andb
neg
inc
in
adc
mov
cmp
adc
sub
mov
jmp
ret
fcmove
movsl
inc
outsl
imul
addr16
xor
jne
insb
push
push
scas
add
xchg
in
sub
xchg
cs
insl
lret
mov
das
insb
movsb
rcrl
push
sti
xor
stc
xchg
push
fmull
xchg
pop
sbb
lods
ror
repnz
mov
adc
mov
fwait
pop
neg
sarl
out
fadd
inc
decb
jo
aas
or
cwtl
push
sub
push
pop
daa
loopne
sub
incl
lea
rolb
shrl
jb
stos
jmp
aam
pop
xor
imul
cmpb
push
sub
inc
jmp
int3
and
mov
lds
icebp
mov
ds
cmp
fcomps
stos
adc
cli
bound
lds
or
fadd
xchg
xchg
push
sbb
dec
ret
mov
fildll
jle
xor
push
icebp
sbb
mov
cmpsb
and
fwait
xchg
sub
daa
push
cwtl
xor
test
pop
leave
sub
mov
xchg
push
int
nop
xor
leave
ljmp
enter
inc
sbb
aaa
jns
sub
lods
sub
mov
frstor
mov
xchg
filds
xchg
rcrl
mov
sub
dec
push
cltd
test
inc
int
sti
push
push
add
dec
int
fisubrl
std
lcall
push
pop
jno
mov
daa
mov
sub
mov
shl
mov
iret
sti
cs
test
mov
xchg
mov
hlt
push
and
fucom
out
dec
into
insl
cwtl
test
xor
pop
shl
mov
notb
mov
sbb
fcoms
stos
imul
push
lea
or
sbb
out
fmull
mov
fmull
push
cmc
jg
repz
mov
or
stc
mov
pop
sub
mov
sbb
pop
push
divl
xor
outsb
movsb
xchg
and
inc
cmp
pusha
stc
lea
inc
jle,pt
pop
add
xchg
jae
fcomps
mov
sub
out
mov
adc
inc
fst
jge
aaa
rorb
lret
data16
mov
loop
lcall
sbb
mov
xor
jae
sub
pop
and
jnp
mov
mov
and
je
xchg
fwait
pop
cwtl
mov
or
pusha
pop
xchg
xchg
xor
pop
fldcw
enter
sub
dec
cmpsl
xchg
rorl
out
cmp
inc
xor
jae
add
jle
mov
jbe
imul
in
lret
add
jne
mov
dec
mov
flds
ss
jns
movsl
fnsave
inc
movsl
jecxz
je
jb
aas
inc
aam
popf
das
mov
hlt
rcrl
pusha
add
iret
add
push
xchg
cmc
jbe
xlat
or
cwtl
repz
push
push
push
inc
mov
or
inc
roll
add
jecxz
and
and
mov
push
mov
push
push
cmp
stc
popf
mov
fs
mov
lret
mov
mov
mov
xor
jne
imul
sbb
jae
mov
mov
out
dec
in
dec
cmpl
jmp
ror
das
rdpmc
cmp
cltd
xor
sbb
xchg
and
jp
jecxz
jp
sub
mov
rorl
orl
jbe
stc
std
pushw
loop
xchg
xchg
or
js
mov
adcl
xor
adc
inc
roll
xor
mov
adc
fisttpl
push
add
pusha
out
into
push
or
mov
insb
movsl
dec
pop
pop
fadds
pop
pop
fmulp
scas
in
mov
in
cmp
fisubrl
lock
pop
je
int
pop
shl
and
loope
into
xchg
mov
or
aas
orl
jecxz
dec
fdivrp
xor
inc
cld
cmc
jl
enter
shrb
jecxz
dec
push
sub
idivb
push
mov
and
mov
pop
and
das
sub
or
xchg
fmull
clc
pop
xchg
out
xchg
lods
call
dec
stc
jno
and
mov
xchg
test
not
xor
mov
dec
cmpsb
sub
add
es
in
ja
push
mov
or
pop
nopl
cmc
mov
pop
jmp
pop
jno
cmp
xlat
stos
push
adc
hlt
ss
xchg
hlt
mov
jne
movsl
xor
sub
je
popf
arpl
cmp
jecxz
cmp
inc
sbb
mov
lcall
pop
ss
ficoms
push
fisttpl
jle
sub
out
push
ljmp
idiv
inc
dec
bnd
aaa
addr16
into
fadd
xchg
and
pause
inc
sbb
fwait
adc
je
popa
push
or
dec
outsl
mov
fists
inc
mov
ret
out
push
adc
pop
mov
idivb
out
add
in
or
in
sub
and
fsubs
xor
dec
ljmp
xchg
push
and
add
inc
rorl
into
dec
les
jb
jae
repz
mov
ret
mov
test
cmp
out
mov
test
fidivl
fdivl
pop
jne
mov
pop
aad
xor
jle
pop
rolb
scas
out
stos
mov
sbb
fsubrl
inc
negb
cmp
pop
jecxz
mov
dec
rorb
mov
orb
pop
out
je
lretw
sub
jecxz
in
nop
gs
orb
fst
fldenv
mov
insl
imul
aaa
hlt
cmp
iret
repz
shll
sti
xchg
xchg
or
int3
bound
pop
dec
sub
mull
push
push
sahf
xchg
xchg
lock
mov
or
xlat
push
xchg
jno
ja
rorb
out
adc
xor
movsl
scas
sbb
adc
xchg
or
ja
sub
lods
das
addl
sahf
xor
pop
es
mov
cmp
jmp
fidivrl
pop
mov
jo
push
fdivrs
nop
inc
stos
adc
and
ljmp
mov
jmp
cltd
rclb
aas
popa
lods
ljmp
pop
lahf
test
xchg
mov
mov
mov
xlat
mov
mov
sub
into
mov
dec
sbb
pop
cmpsl
fcomi
inc
inc
sbbl
jnp
stc
sbb
cmp
lods
dec
loopne
or
out
sbb
mov
mov
pop
adc
mov
jecxz
jbe
adc
je
ret
aam
or
ja
repnz
inc
jbe
jmp
movsl
cmp
inc
and
or
sbb
and
mov
mov
sub
lahf
les
ljmp
push
dec
and
mov
in
add
scas
push
incb
inc
aaa
lea
push
mov
mov
dec
push
stc
dec
push
sarl
out
xor
push
ss
js
rorb
pop
or
push
in
arpl
pop
inc
int3
shll
mov
or
and
nop
mov
mov
clc
test
sub
ljmp
push
inc
mov
pop
call
or
cmc
mov
inc
cs
cmp
mov
cwtl
push
iret
xchg
movsb
or
out
repnz
ljmp
and
dec
xchg
mov
cld
scas
sub
ret
push
orl
push
lcall
out
jo
lods
xchg
jp
lods
shrl
jo
xchg
aaa
or
dec
pop
outsl
arpl
test
jl,pn
add
cmp
sub
lret
mov
pushf
lods
cmp
add
lret
pop
adc
adc
fstpl
call
lahf
int3
cld
pop
xchg
add
ret
mov
scas
lahf
and
das
pop
mov
jecxz
jnp
sarl
daa
xor
ss
fisubrs
and
sub
pop
iret
imull
lahf
push
enter
lret
js
cld
jne
aas
ds
inc
bound
sti
xor
cli
js
in
sbb
nop
cmp
and
add
lock
mulb
mov
push
mov
lds
adc
adc
stos
out
sbb
fwait
pop
loope
scas
mulb
and
aad
sub
jle
inc
jle
sbb
cwtl
rcl
dec
xlat
xor
mov
pop
clc
ss
pop
mov
repz
ja
es
add
repz
dec
icebp
xlat
push
cmp
push
aaa
pop
loop
sbb
nop
out
sbb
insb
sub
daa
inc
je
xor
test
push
add
add
xchg
test
enter
xchg
imul
pop
gs
add
fsts
pushf
lahf
mov
shrl
mov
daa
int3
dec
jmp
out
jns
lret
push
jmp
icebp
jbe
inc
inc
aas
loop
sbb
push
jmp
leave
lods
push
imul
sub
pop
aas
adc
daa
fistpll
or
lret
pop
addl
sub
andl
sub
popf
pop
sbb
fcompl
or
call
cld
icebp
push
ret
inc
std
push
jg
mov
std
jae
and
jge
call
jns
jno
mull
xor
pop
jo
mov
jge
sub
xchg
and
or
fstpl
and
test
movsl
es
sbb
insb
sub
out
sbb
subl
mov
es
mov
pusha
aas
hlt
or
add
dec
loopne
jecxz
repz
and
adc
pop
popa
xchg
in
call
hlt
or
rcrb
inc
cmpsl
loop
sbb
lahf
sbb
dec
add
pusha
test
xor
push
into
adc
mov
rcr
enter
ss
mov
and
cmp
lret
loope
fdivrs
repz
es
cwtl
cld
test
mov
push
inc
jae
push
imul
cmpsb
loopne
or
push
ret
sbb
loope
xchg
loope
push
lods
jl
adc
dec
out
lock
adc
mov
add
out
sbb
pop
push
xchg
push
in
fidivl
and
lcall
xchg
aas
fisubrs
jge
jg
add
int3
pop
xchg
pop
rcrl
jb
lahf
pop
sub
pop
nop
jg
or
inc
in
sti
fbld
mov
in
fnstsw
pop
sbb
jmp
lods
pop
cmp
add
std
add
jno
test
test
mov
push
addl
call
xchg
imul
movsl
pop
jle
js
ds
pop
push
xchg
jp
xor
call
lahf
push
gs
pop
ret
sti
lahf
mov
or
movsb
dec
jnp
mov
mov
xor
dec
push
fldt
jp
inc
decl
xchg
xchg
pop
bound
sub
xchg
xor
dec
ljmp
imulb
and
shl
clc
push
jo
ficoml
xor
leave
or
xchg
lods
loopne
sahf
pop
and
imull
testb
jae
test
loop
adc
outsb
xchg
je
cmp
xchg
sbb
out
pop
loop
cmpb
repnz
sbb
add
notl
stc
imul
mov
lcall
xchg
ja
addr16
lock
sub
mov
je
dec
aas
cld
gs
xor
sbb
mov
pop
lds
mov
int
les
or
nop
sub
sub
idivb
ds
and
test
dec
mov
push
push
mov
mov
and
sbb
ret
cs
mov
outsl
lahf
icebp
leave
cmp
ljmp
sar
jl
stc
or
add
mov
jl
popa
fldcw
push
lods
das
andl
fdivr
sub
mov
std
add
call
lds
and
pop
call
shr
push
cwtl
push
pop
fs
inc
xchg
gs
sbb
sarb
jnp
jp
sbb
aad
out
cmpsb
mov
fmuls
mov
popf
push
ror
imul
aam
les
cli
mov
addr16
adc
js
dec
push
push
sbb
int3
push
push
bound
pop
or
xor
in
and
js
mov
xchg
insb
fistps
push
into
imul
fs
pop
rcrl
mov
faddp
outsb
enter
jecxz
xlat
inc
sbb
adc
test
mov
pop
mov
mov
jl
sub
jle
shlb
jge
std
aaa
dec
sbb
sub
mul
xor
out
aas
mov
push
mov
xor
ret
dec
std
or
mov
sti
test
mov
je
sbb
dec
xchg
insb
push
xchg
adc
xchg
mov
jmp
ret
scas
daa
cmp
xlat
inc
mov
pop
push
pop
jae
xor
js
cmp
mov
xchg
add
mov
or
xchg
mov
pop
je
pop
mov
mov
vcvtsd2si
xor
test
jo
outsb
popa
mov
sub
mov
js
int
out
andl
ss
push
mov
mov
sbb
in
add
loope
pop
push
and
shll
cmc
jg
mov
mov
mov
or
cmc
in
hlt
outsb
cmp
cmp
push
fsubrs
repz
pop
outsb
ficoml
push
imul
cs
lock
sbb
sbb
push
test
cmp
or
insl
or
ja
sbb
insl
and
push
dec
jl
aad
popa
jbe
xor
push
push
pusha
scas
cmp
mov
insb
ret
mov
rorb
ljmp
inc
push
or
sbb
cmpb
insb
jle
ret
mov
pop
mov
push
imul
test
sarl
out
mov
or
mov
lods
fisttpl
imul
lds
or
fnstenv
pop
cmp
mov
imul
lods
mov
cmpsl
gs
fsubp
ss
mov
jnp
bswap
les
mov
sbb
adc
dec
push
mov
mov
lahf
and
ficoml
dec
insl
push
pop
dec
add
fiaddl
in
xchg
xchg
or
bound
mov
loopne
lds
ret
scas
fs
mov
xorl
js
push
das
cmp
xor
insl
loopne
data16
aad
push
push
mov
arpl
sub
mov
leave
add
mov
addr16
inc
fcmovnbe
dec
xchg
pop
adcb
push
sbb
cmp
and
jnp
into
in
pop
les
jb
mov
sub
or
mov
lret
adcl
enter
cmp
aas
shlb
stos
mov
add
mov
xchg
adc
push
dec
js
mov
mov
popf
cli
push
dec
adc
dec
imul
daa
lret
lea
pop
fdiv
mov
out
test
mov
pop
cmp
ds
xchg
mov
mov
rorb
sbb
cmp
call
add
pop
shlb
sub
arpl
mov
mov
push
dec
xchg
ljmp
or
pop
popf
mov
ror
movsl
cli
mov
mov
xchg
add
dec
cmp
stos
je
sbb
movsb
mov
or
imul
lods
adc
jge
jo
xchg
insb
sbb
call
add
pushf
push
popf
insb
outsb
mov
lock
orl
ljmp
das
inc
pop
jmp
sub
inc
pop
xchg
movsb
into
dec
leave
cwtl
pop
adc
hlt
jl
inc
add
cmp
or
leave
cmp
popf
imull
arpl
call
test
jnp
jge
push
push
push
jne
jge
push
cs
outsb
push
insb
mov
movsb
sbb
negl
sub
cmp
add
push
insb
pushf
rolb
mov
cmp
shl
mov
addb
sahf
jp
cwtl
adc
add
mov
push
pushf
mov
add
push
adc
inc
xor
sub
push
loopne
sbb
adc
inc
jmp
mov
jne
mov
sub
addr16
fildll
pop
nop
sahf
arpl
test
pop
add
inc
adc
iret
out
xchg
cmpsl
loopne
sub
aad
test
adc
hlt
mov
into
push
and
shl
je
iret
into
xchg
mov
into
and
jb
mov
repnz
inc
dec
mov
std
cwtl
leave
cltd
mov
fs
inc
fildll
mov
lods
pop
mov
add
jnp
mov
xchg
pop
int
ja
jo
add
sti
or
xor
jle
pusha
push
sbb
sub
xchg
popa
cli
sahf
fdivp
sbb
mov
mov
inc
cmpsl
and
mov
dec
pop
subb
mov
aad
pop
incb
addl
in
jle
je
pop
push
pop
cmpsl
sub
int
add
xchg
jo
jns
js
mov
in
addb
arpl
pop
pop
movl
insl
int
sub
pop
sub
ljmp
lods
sub
das
push
sbbl
movsl
shll
nop
mul
stos
push
xor
xchg
fwait
adc
pop
popf
xchg
jb
sarl
pop
rol
int3
sbb
push
push
loopne
repz
push
insl
push
and
addr16
dec
mov
ja
push
mov
lcall
addr16
xor
push
in
int3
loopne
xor
add
pushl
add
mov
pushf
push
mov
or
mov
mov
daa
in
adc
loopne
or
out
adc
inc
insb
test
js
sarb
push
pop
xor
ret
mov
inc
inc
or
dec
sbb
cwtl
xchg
add
and
add
mov
add
scas
xor
cmpsl
cmpsb
inc
jle
mov
sbb
mov
or
push
push
das
mov
icebp
cli
pusha
xchg
mov
or
mov
lcall
out
sbb
loop
mov
imul
hlt
shr
lods
push
das
lock
out
hlt
and
lcall
sbb
test
data16
mov
std
aam
pop
jle
mov
outsb
jns
loope
out
ja
cli
outsb
enter
lret
sub
stos
jg
cmp
ficoml
and
jp
xchg
test
or
loopne
or
es
jle
addr16
jb
bound
inc
imul
dec
cld
scas
lcall
lods
ror
inc
lret
mov
jbe
movsb
shrl
mov
rorb
das
xchg
sub
adc
mov
fwait
sti
movsl
add
into
xor
adc
aas
add
enter
sti
test
mov
sbbl
dec
sti
stc
xchg
dec
mov
mov
ja
inc
pop
mov
mov
cld
movsl
xchg
cmpsl
dec
xchg
xlat
outsb
jbe
mov
int3
jo
roll
andb
sbb
ja
imul
mov
push
xchg
mov
rcr
xor
and
inc
lcall
icebp
pop
lret
sbb
cmp
mov
dec
mov
stos
int
jge
jle
sahf
int3
mov
les
add
jnp
outsl
test
xchg
test
cmp
jnp
mov
jg
cld
ja
int3
dec
mov
movsl
mov
in
jle
fdivs
sub
ret
cmpsl
fisubrl
inc
mov
jmp
cmp
repnz
lea
pop
xchg
mov
das
add
divl
stc
cld
gs
add
addr16
orl
fisubrl
hlt
cwtl
pop
sub
scas
subb
jge
outsb
pop
push
test
sbb
dec
xor
jmp
int3
inc
aaa
sbb
mov
sbbl
mov
shl
xchg
inc
mov
push
int
push
movsl
push
xchg
push
nop
loopne
mov
rol
mov
je
sbb
and
iret
mov
aaa
mov
je
xorb
leave
popf
sbb
and
jl
dec
mov
or
xchg
jo
mov
cmp
adc
arpl
hlt
xchg
dec
push
push
pop
or
or
aad
xorl
sar
inc
enter
mov
divl
hlt
mov
rorl
out
out
imul
inc
pop
inc
adc
push
cmp
decb
push
cmpsb
xchg
or
add
sti
inc
xor
or
push
sbb
lods
mov
fsubp
lock
sbb
es
adc
je
mov
inc
lcall
das
dec
push
adcb
lcall
jl
fcompl
mov
popf
xchg
xchg
push
lret
pop
repnz
jmp
repz
daa
or
leave
xchg
scas
rolb
test
push
subl
cli
push
sahf
jecxz
mov
test
cmpb
cmp
pusha
or
cmp
adc
inc
adc
and
or
aas
cltd
das
and
aaa
sub
sub
push
cli
mov
sbb
movswl
addl
ja
dec
cltd
outsb
mov
clc
sbb
xor
mov
dec
mov
xlat
inc
enter
iret
xor
ficoms
sub
inc
pop
loope
enter
push
outsl
mov
add
iret
into
loop
aam
push
push
push
outsb
aad
add
inc
js
iret
xor
sbb
inc
stos
xchg
push
fsubrl
pop
jne
add
or
xchg
stc
push
xchg
stos
and
dec
xchg
or
xor
inc
je
lock
repnz
or
mov
mov
stos
fcomi
sub
jp
or
add
jno
adc
inc
bound
and
mov
aas
or
dec
jl
popa
ret
xchg
lods
lods
fdivs
jge
imulb
mov
jae
out
or
fstpt
jnp
popf
cmp
jecxz
cld
pushf
sbb
popa
or
sbb
xor
in
xorl
out
sub
add
jmp
mov
fistl
fwait
inc
inc
bnd
inc
pushf
push
pop
data16
stc
imul
icebp
push
sub
mov
movsl
mov
mov
mov
sub
test
mov
outsl
mov
and
lcall
adc
lods
xor
jne
xchg
push
cmp
or
adc
push
inc
aad
movsl
cmp
insl
stc
add
jp
adc
cld
dec
lcall
mov
out
mov
xchg
sub
aad
lahf
repnz
movsb
movsl
nop
pop
out
movsb
loopne
cmp
lret
sbb
mov
movsl
inc
cmp
out
jge
add
pop
xchg
mov
xchg
dec
cltd
or
push
in
in
pop
xlat
popa
pushf
cmc
mov
pushf
arpl
xor
xchg
sbb
cwtl
call
test
scas
lea
dec
sbb
mov
in
and
stos
stos
insb
sbb
inc
xchg
test
add
mov
adc
push
jmp
jne
pop
cltd
push
add
stc
out
cs
adc
jne
lds
test
inc
and
je
push
iret
ret
add
movsb
adc
sbb
xor
aam
js
sub
xor
inc
jae
xchg
sub
sub
sub
inc
in
enter
xchg
or
test
lock
adc
out
jl
dec
and
or
mov
pop
data16
cmc
dec
inc
push
imul
rorb
push
or
lcall
mov
sbb
cmp
mov
push
mov
cmp
cmp
or
jns
dec
sahf
lds
cmp
xor
sti
xchg
insl
jne
dec
push
inc
imul
cwtl
das
cltd
insl
call
cld
iret
arpl
jmp
or
les
hlt
je
stos
cmp
hlt
rorb
stos
inc
adc
shll
jp
stos
jnp
mov
std
test
testb
jo
sti
sub
push
and
out
push
mov
lods
cmp
pop
hlt
imul
push
push
sahf
xchg
jns
mov
push
adc
mov
add
rorb
jg
inc
insl
popf
push
mov
sbbl
mov
std
mov
dec
bound
scas
inc
loopne
mov
addb
xor
test
sub
in
stos
push
insl
int3
pop
jle
mov
in
push
cs
ret
jmp
cmp
add
lea
stos
mov
in
cmpsl
ret
pop
popa
dec
mov
pop
arpl
push
mov
aam
clc
mulb
push
cmp
bound
gs
shl
aad
jmp
in
inc
loope
push
mov
inc
leave
loope
lods
ja
jbe
pop
dec
leave
lret
fcomi
pop
repz
inc
aas
add
pop
in
stos
push
mov
mov
pop
je
add
lods
mov
xor
idivb
or
or
cmp
dec
cld
mov
nop
xchg
xchg
int3
push
pop
dec
jae
jb
insl
ffreep
fwait
dec
inc
mov
or
pop
loop
movsl
ret
xor
jp
adc
xor
push
sbb
dec
jmp
cli
fnstcw
xlat
data16
dec
and
cmp
ljmp
lds
mov
add
in
imul
inc
test
dec
cmp
mov
inc
popa
xchg
fsubrl
imul
lds
and
jp
mov
xor
popa
xor
xor
push
lds
jecxz
in
sbb
jp
call
jl
pop
sbb
out
aam
rcrb
in
inc
ljmp
repnz
or
mov
xor
das
aam
xchg
xchg
jmp
jecxz
aam
pop
pop
inc
mov
inc
inc
cwtl
data16
sbb
bnd
ljmp
in
mov
mov
adc
pop
pop
int3
xor
mov
insl
shlb
in
aam
mov
fdivrs
jae
fwait
cmovnp
aaa
cld
mov
popa
clc
mov
subb
mov
push
std
popf
jmp
push
rorb
dec
push
sub
push
popf
shl
xchg
test
adc
sbbl
pusha
inc
or
xlat
ret
sbb
repz
je
fisttpll
movsl
xor
addr16
fwait
xor
je
push
cmpsl
cmp
int3
addb
test
lods
jecxz
push
and
imul
cmpl
shrl
ja
xchg
daa
repz
or
pop
add
add
enter
push
sub
xchg
loope
inc
stos
mov
mov
popf
and
sbbl
je
pop
shrl
imul
mov
fmull
in
cwtl
and
sub
leave
pop
call
mov
std
jb
and
cmp
add
daa
cmp
xor
adc
adc
dec
inc
lcall
mov
add
pop
mov
cmpsb
xor
out
mov
cmp
cmc
add
mov
test
sub
scas
pop
cltd
mov
fisubs
stc
pop
xorl
cmp
ds
popa
into
mov
push
cmp
dec
dec
mov
nop
mov
cs
pop
xchg
xchg
or
out
dec
daa
rcrb
int3
cmpsl
push
lock
pop
add
idivl
std
adcl
and
scas
and
and
sbb
jbe
fcoml
ljmp
lahf
push
in
sbb
push
int
push
mov
and
repnz
fstps
fisubl
lahf
dec
scas
cmp
jns
jb
xor
std
cmp
adc
int
ret
push
fadds
out
pop
cltd
xlat
push
add
jmp
pop
push
testl
mov
mov
or
jecxz
loopne
inc
fistpl
test
dec
js
or
sahf
pushf
pop
dec
add
push
pop
push
scas
leave
mov
adc
mov
cld
mov
fwait
mov
xchg
test
adc
bound
movsl
push
jle
dec
push
outsl
lods
aad
adc
push
repz
repnz
ret
clc
adc
cmp
lahf
std
cltd
jge
pop
gs
xchg
dec
jo
fstp
popa
es
stos
mov
xor
fldt
data16
fcmovnb
daa
ss
push
jmp
fmul
push
and
aad
divb
xchg
int
add
jmp
mov
cmp
or
call
and
mov
sar
mov
mov
popa
jne
stos
mov
lock
xchg
inc
js
lds
hlt
jns
sub
insb
sahf
add
nop
roll
or
dec
mov
dec
push
jl
scas
xchg
sub
incb
push
or
insb
jmp
jl
fcmovnu
inc
dec
nop
inc
xchg
lahf
pop
imul
jnp
rcrl
movsb
fsubl
mov
jo
cwtl
push
ret
roll
add
loopne
jecxz
mov
xor
push
sbbl
rol
adc
xchg
rcl
adc
or
inc
aas
aam
jg
lods
or
cmp
outsb
cmpsb
imul
clc
cld
aas
or
mov
or
pop
ja
jge
in
adc
incb
std
ss
aad
or
push
hlt
outsl
sbb
add
inc
cmp
in
sbb
xchg
jp
inc
sub
push
and
push
pop
stc
pop
mov
inc
mull
sub
jne
and
rorl
stos
sti
outsb
int
dec
dec
push
mov
aas
xchg
lea
nop
or
jmp
and
jmp
fs
add
mov
lcall
rclb
sbb
dec
xchg
or
jge
rorb
lea
push
addr16
sub
lcall
cmp
sbb
in
jge
lods
adc
xorb
sub
insl
fcmovne
pushf
ret
sbb
insl
enter
mov
push
push
adcl
and
sub
mov
ds
xor
jo
or
cmp
fcoml
jecxz,pn
push
xchg
mov
mov
aaa
repz
insb
sub
js
in
sub
xlat
popa
fldl
mov
js
cmc
mov
into
mov
dec
dec
push
out
ja
insb
xchg
adc
ss
xchg
mov
jecxz,pn
stc
pop
addr16
test
push
dec
cmp
mov
jnp
and
into
scas
and
out
sbb
pop
xor
xchg
mull
and
inc
in
mov
push
ljmp
jle
jmp
dec
out
mov
sub
cmpl
sbb
and
roll
jmp
cmp
icebp
sbb
mov
fs
pop
cmp
mov
repz
fsubrl
loopne
aaa
jecxz
aaa
and
push
dec
xor
pop
leave
call
notb
scas
in
stc
movsl
mov
pop
or
mov
ljmp
cmp
xchg
popa
sbb
dec
mov
jp
lea
in
mov
cmp
fcmovnbe
sbb
ret
enter
mov
adc
mov
mov
lret
fmul
sub
dec
movsl
cmp
and
outsb
push
push
movsb
push
popa
test
mov
leave
getsec
dec
jmp
cs
jge
loope
jecxz
and
es
or
adc
gs
test
gs
dec
xchg
mov
pop
stos
popf
das
pop
mov
and
add
sbb
stc
adc
sbb
int
push
loopne
hlt
mov
mov
popf
shrb
enter
scas
mov
stos
out
sbb
sub
xchg
fs
xchg
pop
popa
jl
jo
jmp
cmp
shl
lock
cmpsl
jp
sbb
or
int3
aas
sahf
jnp
or
sub
ja
pop
or
std
sbb
pop
push
loope
scas
decl
outsb
jmp
or
jb
scas
lcall
lock
inc
cmp
hlt
xchg
es
lahf
jns
rolb
adc
stc
sub
stc
push
ret
mov
pop
enter
inc
aaa
rep
pop
sbb
test
or
jg
push
dec
lods
shr
imull
push
ret
push
rorb
mov
mov
sbb
push
adc
lret
sbb
ret
sbb
ja
ret
pop
sub
mov
rol
fdiv
mov
call
xchg
test
loope
push
xchg
fwait
ja
in
addr16
jmp
mov
test
pop
popf
mov
lods
add
ljmp
xchg
dec
push
jno
xchg
popf
and
xchg
xor
bound
xor
mov
mov
out
pushf
sqrtps
inc
popl
xor
aam
pop
cld
inc
mov
mov
push
inc
pop
push
jnp
stos
sbb
fcoms
ja
out
or
sbb
call
ret
shll
aas
cmc
xor
xchg
mov
mov
xor
jns
xchg
or
inc
icebp
dec
or
imull
mov
lea
add
idivl
jne
dec
movsb
int3
mov
inc
in
pop
rcrl
cltd
aam
adc
inc
cld
pushf
jb
jg
pop
xor
mov
iret
iret
add
das
push
xchg
and
cltd
pop
mov
mov
outsb
xor
fwait
ja
push
mov
mov
repz
xor
push
lods
shlb
movsb
fisubl
loop
sub
lret
dec
popa
repnz
fcmovne
push
cmpsb
and
out
stos
std
inc
es
jg
imul
ret
es
scas
mov
mov
or
lahf
mov
imul
insb
or
test
scas
in
and
popw
mov
flds
pop
add
jns
outsl
jbe
mov
ror
sub
adcb
ss
cmpsl
sub
loopne
and
or
xchg
addr16
push
call
mov
dec
sti
lcall
sarb
out
in
adc
xor
cmc
xchg
cmp
dec
jp
sbb
outsb
rcrb
pop
pop
daa
pop
bound
cmc
pop
mov
filds
cmc
es
lret
jp
jl
jb
fnstcw
loopne
daa
ret
mov
lret
adc
cld
pop
enter
in
loopne
push
cmpsb
xor
xor
adc
fmuls
mov
test
mov
inc
jg
adc
mov
sahf
imul
sbb
jo
lods
and
aaa
faddl
imul
push
movsb
das
pop
xchg
xchg
pop
sbb
cmp
icebp
fcmovnu
roll
push
lock
aam
jp
jp
inc
adc
cmp
repz
in
iret
lods
mov
push
insl
ja
jl
push
bound
mov
xorb
lret
and
insb
sbb
and
mov
mov
xchg
daa
fisubl
out
test
add
xchg
or
call
cli
jg
daa
sbb
or
iret
pmulhuw
ja
dec
mov
xor
into
mov
aam
mov
cld
pop
cmp
mulb
mov
mov
sub
imul
and
mov
mov
adc
add
stos
cld
clc
imul
imul
inc
std
add
stc
push
inc
fsub
shrl
inc
ljmp
jb
mov
jecxz
ficoms
adc
inc
lods
inc
or
fildl
ljmp
ficoms
lahf
arpl
cmp
stos
pop
scas
mov
pop
outsl
sbb
pop
add
sub
repz
inc
sbb
ret
or
call
jne
dec
jmp
add
int
outsb
sbb
ja
push
aas
and
repz
popl
arpl
out
fistps
jnp
inc
sub
jecxz
pop
or
cltd
push
les
cmp
cltd
pusha
hlt
fadds
loopne
nop
push
fs
and
and
cmp
fs
inc
cmpsb
rcrb
sahf
inc
aam
dec
movsl
inc
int
mov
lahf
push
sub
in
jns
idivb
out
aaa
scas
dec
or
xlat
shrb
or
pop
cmp
leave
jg
pop
orl
or
stc
inc
add
retw
lods
in
js
jg
push
popa
lret
sbb
cltd
xchg
into
sbb
aad
or
push
xlat
xchg
je
push
lret
enter
pushf
push
and
loopne
mov
push
cwtl
xchg
cmp
and
dec
fnstcw
cwtl
mov
js
jmp
pop
and
mov
mov
fs
xor
test
pop
std
sbb
daa
test
jae
mov
mov
xchg
fidivrs
hlt
out
shlb
aad
lods
sbb
jb
daa
call
inc
cmp
dec
cmp
xchg
movsl
test
fnstcw
sub
insb
decl
repnz
lret
fnstcw
mov
sub
out
pop
xor
shrl
sub
ja
lds
jne
rcl
data16
push
sbb
jle
inc
jnp
mov
xchg
test
stos
cltd
les
xchg
sbb
hlt
cmc
xchg
hlt
push
sub
and
xchg
mov
mov
imul
popf
and
imul
movsl
imul
aad
pop
inc
mov
mov
or
out
cwtl
push
mov
fisubrl
push
lods
invd
test
inc
out
or
xchg
ror
mov
pop
jge
lahf
insb
dec
adc
cltd
cli
movsb
pop
loope
rorl
rorb
xchg
xchg
or
rorb
lahf
xchg
fnstcw
in
repnz
and
imul
mov
cmc
xchg
cs
loopne
add
jecxz
leave
std
enter
cmp
movsl
ret
cmovs
xor
mov
iret
inc
leave
arpl
insb
leave
pop
inc
sbb
sti
lret
std
je
xchg
fwait
or
add
dec
dec
xchg
cmp
and
mov
cltd
and
andl
or
xor
dec
jae
scas
dec
adc
push
or
ljmp
push
cmp
sub
lock
inc
cwtl
lahf
test
pop
xchg
xchg
sub
mov
loopne
roll
jns
or
repz
inc
std
int3
xchg
out
or
fisttps
scas
push
pushf
outsl
push
mov
scas
add
movsb
adc
cmp
jo
stos
inc
or
hlt
jmp
inc
pop
iret
pop
imul
bound
push
jae
fistl
es
mov
jb
loopne
imull
test
xor
pop
int
pop
xchg
add
xor
pop
cli
xchg
dec
mov
adc
or
aaa
lret
mov
or
xor
call
xchg
es
arpl
or
nop
inc
lock
cltd
enter
lds
out
cmp
std
imul
pop
mov
fcomps
imul
push
xchg
loop
sbb
stos
sbb
movsb
pop
and
add
popf
mov
mov
adc
sbb
dec
mov
rolb
call
js
loop
in
fwait
sbb
cli
aaa
out
call
je
not
push
bound
insb
clc
pop
pushf
cmp
mov
xchg
addr16
subb
scas
mov
in
pop
sti
mov
out
call
mov
jge
jae
int3
inc
push
cmp
into
popa
xorb
add
ds
cmp
sub
sbb
stos
aam
roll
and
addb
pop
sbb
scas
inc
arpl
mov
push
enter
imul
add
jnp
sbb
mov
cmp
lock
sub
mov
ds
push
arpl
mov
insl
mov
mov
into
test
loop
ja
mov
add
aam
pop
cmp
mov
mov
jle
inc
mov
arpl
cmp
and
adcb
aas
pusha
sar
js
adc
mov
cld
insl
adc
stos
pop
and
js
jecxz
rcrl
imul
les
aam
lahf
out
push
hlt
sahf
push
mov
data16
aad
scas
inc
mov
jg
leave
sub
jo
out
and
xor
decl
pusha
push
pop
sarb
add
loope
in
outsb
sbb
sbb
pop
push
fildll
in
inc
jecxz
das
out
xchg
xor
jg
jp
inc
fwait
sbb
std
xor
fs
inc
push
and
and
arpl
popf
mov
loope
fwait
xchg
inc
imul
cltd
inc
xor
add
in
push
adc
in
xchg
in
jecxz
call
mov
into
fwait
push
bound
mov
fnsave
pusha
aad
in
lar
fnsave
sbb
clc
mov
sub
push
mov
push
push
stos
adc
xchg
outsb
inc
std
cmpsl
ss
int3
xchg
outsl
lods
mov
inc
out
incl
mov
into
test
daa
pop
rolb
lcall
or
push
fidivrl
outsb
and
pop
js
out
xchg
dec
or
std
mov
insb
xchg
ss
loopne
sbb
mulb
xchg
clc
pop
mov
insb
data16
pushf
cwtl
movsb
add
add
mov
in
dec
pusha
sahf
jae,pn
cmpsl
push
inc
ss
loop
in
pop
push
iret
sti
mov
push
loopne
repnz
pop
les
scas
mov
inc
das
inc
or
pushl
mov
push
and
sbb
xchg
add
lret
loope
gs
inc
fs
xor
lahf
cmp
insb
dec
cmp
xor
or
nop
sub
shl
fnstsw
mov
add
dec
rcrl
push
pop
imul
iret
push
push
div
das
sub
in
aad
and
stos
pop
pop
hlt
sbb
xorb
gs
outsl
out
stc
xor
cmc
daa
jne
sbb
xchg
les
mov
add
out
les
cmp
push
add
fisttpll
xor
cmpsb
adc
inc
fstpt
stos
mov
ds
out
push
xchg
rcrb
pop
pop
xchg
xor
es
push
shrb
xor
les
push
xchg
xchg
push
mov
xor
out
gs
add
cli
inc
cltd
mov
rcrb
popf
rcr
add
xchg
add
push
inc
jns
mov
add
mov
push
pop
mov
and
dec
mov
xlat
cmp
cld
dec
add
jns
fmuls
mov
mov
xchg
adc
pop
mov
pop
pop
cld
popa
shrl
js
pop
andl
fldl
and
lods
cltd
xchg
inc
pop
add
lahf
nop
mov
push
cmpsl
push
pushf
hlt
stos
mov
lods
jg
lret
clc
jb
jge
mov
aam
push
xlat
lret
jl
ror
loopnew
inc
std
pop
push
sbb
mov
mov
adc
insb
cmp
jne
fnsave
shlb
mov
cmp
ljmp
cmp
xlat
test
out
in
mov
sti
sbb
ja
mov
xchg
out
sbbb
loope
xchg
sbb
je
repz
out
gs
hlt
adc
and
icebp
jg
push
xor
add
and
pop
sbb
cld
dec
test
xchg
lret
andl
adc
push
dec
inc
test
mov
dec
leave
out
push
gs
cs
push
adc
jnp
data16
xchg
roll
xor
pop
ja
aas
add
stos
dec
mov
pop
fsubrl
mov
test
adc
lret
enter
das
pop
pmuludq
out
arpl
mov
dec
adc
or
out
in
mov
cmp
loope
in
pop
xchg
out
inc
negb
cmpsl
lret
repz
mov
stc
cmp
dec
loopne
inc
dec
fsubs
stos
add
ljmp
cs
cli
loopne
jns
sub
stos
mov
leave
in
push
je
outsb
loope
into
jae
dec
sbb
dec
inc
cmp
jnp
xchg
test
sub
adc
addl
sbb
loopne
aas
out
call
clc
mov
or
push
int3
nop
pop
pop
int3
cmp
sub
jp
popa
inc
dec
push
cli
and
fs
aam
and
add
jno
insb
addb
xor
cmp
mov
ljmp
int
dec
outsb
cwtl
adc
outsl
adc
pop
add
je
fldenv
add
sub
int3
lock
adc
and
pop
dec
sub
es
enter
sbbl
pop
mov
outsl
mov
hlt
sub
push
add
add
ret
lds
jb
or
addr16
push
jp
andl
into
dec
orb
xor
movsb
and
out
inc
stc
xor
jmp
inc
xchg
in
push
push
xchg
in
mov
mov
test
das
push
andl
orl
mov
ljmp
push
imul
sub
shll
jb
sub
scas
repz
cmp
mov
jmp
inc
aaa
add
mov
imul
lahf
fucomp
inc
lcall
lods
mov
clc
sahf
push
mov
leave
add
pop
sbb
mov
dec
je
fwait
push
mov
cmp
dec
adc
repnz
adc
sbb
ja
push
out
imul
fwait
mov
sub
cmpsl
enter
xchg
mov
pop
dec
push
mov
int3
jae
or
jp
dec
jae
faddl
mov
cli
ss
ljmp
orb
mov
loop
jae
out
add
clc
jne
and
test
cwtl
hlt
aas
icebp
loop
pop
icebp
cmc
fld
ljmp
hlt
cltd
inc
rcrl
dec
xchg
mov
mov
hlt
andb
xchg
fwait
enter
and
xchg
lods
aaa
push
inc
mov
jb
sbb
ds
je
and
pop
aaa
xchg
sbb
fnstenv
adc
pop
or
nop
icebp
pop
dec
lods
adc
mov
loop
adc
jns
ficoms
dec
mov
add
and
cwtl
das
xor
les
fwait
cltd
adc
dec
cli
xchg
rorl
lods
js
push
mov
mov
push
push
inc
add
aas
ret
and
addr16
mov
mov
test
push
add
jl
mov
adc
enter
cs
fsubl
cld
movsl
ret
iret
pop
adc
pop
mulb
mov
jl
jl
negb
std
mov
fldl
jne
jae
dec
fwait
jp
add
xchg
xchg
adc
push
ficomps
imul
mov
sub
mov
mov
mov
sarb
mov
out
dec
inc
sbb
add
aad
ja
jb
sahf
lret
js
push
insb
xchg
stc
cmc
cs
cmpsl
xchg
out
dec
icebp
sahf
sub
cli
sub
ret
sub
push
aam
loope
cmp
dec
loope,pt
mov
mov
sahf
jp
pop
jecxz
mov
adc
insl
nop
lret
jns
cmc
xor
sahf
pop
rclb
mov
cmp
mov
adc
xor
in
fnstsw
dec
sub
out
adc
in
rcl
jb
cmp
pushf
jl
into
xor
repz
sbbl
clc
cmp
inc
cli
and
sub
mov
rcl
xchg
pusha
cli
xchg
mov
addl
stos
lods
stos
pop
addl
xor
popa
inc
inc
xor
mov
push
out
push
adc
in
shll
cmpsb
rorl
pop
test
mov
les
dec
push
jno
sub
repz
mov
add
gs
cmp
movsl
push
push
adc
pushf
lods
repz
filds
mov
aad
cmp
gs
jg
mov
andl
pop
mov
xchg
push
fs
push
shrl
push
push
fdivr
lods
scas
mov
scas
out
aam
test
icebp
test
pop
insl
sbb
sub
xor
cld
sbb
sub
jp
je,pt
adc
std
xchg
iret
dec
dec
jmp
mov
lcall
icebp
pop
mov
and
dec
lds
mov
or
push
cmpsl
int3
cmp
add
jne
mov
mov
mov
lds
scas
jnp
jge
into
pop
addr16
loop
push
mov
data16
mov
adc
cmp
cs
mov
push
loop
push
cmp
test
clc
inc
add
xchg
popf
sub
cmp
bound
sub
aad
add
test
dec
inc
shll
adc
or
jmp
add
movl
inc
cmpsl
sarb
xchg
stos
lcall
push
out
in
xorl
cs
cmp
xor
mov
mov
xchg
int3
movsb
mov
jmp
daa
test
mov
mov
aas
pop
ljmp
push
xorb
push
inc
aad
push
sbb
sahf
xor
inc
rclb
das
lret
movsl
addr16
jmp
es
fnsave
mov
or
jnp
cmp
and
mov
xlat
pop
xor
mov
mov
and
imulb
push
stos
iret
je
idivb
push
movsb
mov
test
push
pusha
and
push
jnp
sub
lret
in
xchg
mov
sarb
or
pop
jnp
xchg
pop
mov
clc
js
lock
jns
push
push
xor
addr16
addb
pop
xchg
jle
mov
mov
sbb
or
in
jne
add
testb
mov
xor
lret
jecxz
leave
jno
add
repz
xchg
testl
fbld
pop
repz
xchg
adc
gs
aaa
sub
cmp
inc
pop
int
loopne
lock
jmp
pop
mov
mov
test
or
lahf
mov
dec
pusha
cmp
dec
push
in
in
or
pop
bound
lcall
lds
adc
xchg
mov
shll
pop
add
xchg
icebp
mov
xlat
mov
fadds
aas
xor
add
daa
shr
scas
lock
xor
push
jno
push
xchg
iret
mov
adc
xchg
mov
add
inc
pop
mov
and
inc
loopne
cmp
outsl
je
mov
and
jo
lea
push
dec
mulb
jae
mov
bound
pop
mov
cmp
or
mov
mov
lods
inc
mov
icebp
jl
stos
in
fisttpl
or
jno
xchg
arpl
xchg
movsb
loope
pop
jae
out
icebp
int3
jp
mov
cli
int3
xchg
mov
leave
pop
dec
mov
push
pop
cmpb
pushf
cmp
xchg
mov
ret
inc
xchg
or
cmp
lret
mov
lock
fldt
push
js
jl
leave
mov
int
or
and
cld
filds
lods
or
inc
ljmp
sub
push
pop
aam
repz
adc
inc
int3
adc
jp
sub
dec
xchg
mov
lahf
push
fadds
incl
lods
inc
ficompl
repnz
idiv
out
xchg
subl
leave
cs
mov
mov
or
rcrl
aaa
pop
adc
stos
cltd
pusha
add
lea
pushl
aad
inc
lea
and
mov
inc
mov
mov
in
or
int
cmp
sbb
dec
hlt
push
xor
outsb
adc
xchg
mov
mov
add
inc
fs
lds
or
push
mov
loop
cli
bound
lock
subl
xor
xorl
fisttps
aad
dec
sahf
faddl
movsb
pop
cmpsl
in
aaa
les
push
jg
mov
insb
mov
or
movsb
loop
cmc
rcrb
lret
or
xchg
stos
sub
pushf
scas
sbb
jl
into
adc
dec
out
pop
push
leave
mov
mov
inc
xor
xor
ss
mov
push
adc
lcall
jb
sarb
cmp
sub
out
pop
mov
and
push
fwait
int
push
data16
icebp
mov
mov
add
cmp
decb
loope
inc
shlb
dec
outsb
jle
leave
icebp
push
cmc
mov
fwait
push
xchg
icebp
mov
push
out
mov
and
push
inc
nopl
dec
mov
aad
dec
inc
call
test
push
addr16
in
outsl
lahf
mov
sahf
sar
aad
into
inc
and
cmpsb
add
call
movsb
repz
push
push
push
shrl
dec
push
adcb
xchg
insb
pop
jge
adc
or
lcall
jmp
xchg
leave
mov
push
cli
push
pop
pop
imul
push
inc
arpl
in
in
pop
addr16
add
push
mov
mul
rcrb
js
cmp
adc
out
aam
xchg
cmp
imul
aad
or
pop
mov
xor
cmp
out
mov
dec
popa
lods
push
fisubl
sbb
or
cltd
inc
jae
les
repnz
lea
xor
pop
mov
jmp
nop
xchg
lret
ret
in
daa
and
iret
sbb
sbb
aaa
xchg
ret
mov
rorb
int3
sbb
pop
lahf
cmpb
push
sarb
cmpsl
jnp
popf
out
sti
lea
push
add
sarb
pop
push
scas
in
out
ja
mul
or
xor
mov
sbb
mov
push
hlt
lea
cltd
lret
mov
mov
pop
test
cld
jmp
cmp
out
sbb
xor
shr
inc
inc
sbb
xor
pop
aam
in
jnp
cli
out
leave
sub
sub
lods
lods
adcl
pop
push
dec
mov
push
mov
xchg
cmp
sbb
add
mov
fidivl
push
movsl
movb
mov
push
aaa
xlat
leave
cli
data16
sbb
mov
movsl
xorb
push
mov
or
out
ja
fidivrl
jg
xchg
pop
stos
aaa
lea
push
pop
push
movsl
jl
fildl
push
or
cmp
lds
movsb
adc
hlt
pop
ljmp
out
imul
pop
outsl
mov
icebp
les
cwtl
push
shrb
or
push
jae
je
push
lcall
fisttps
das
jp
xor
jb
cmpsb
dec
inc
xor
mov
mov
xchg
push
xor
into
cld
push
sub
stos
dec
pop
add
cmp
xchg
stc
sahf
je
int3
aam
adc
push
jb
stos
sbb
out
sbb
out
xor
sub
movsb
ret
push
xchg
sub
clc
and
movsl
dec
scas
or
test
inc
or
fsubrs
push
mov
pop
cmp
sbb
jl
insl
sbb
cmp
daa
push
mov
cmp
cmpsb
into
cmp
sbb
sub
in
xchg
mov
mov
jg
scas
cmp
mov
sahf
out
push
sbb
or
es
addl
mov
out
daa
adc
dec
sbb
mov
mov
fildl
xchg
mov
shll
movsl
cli
pop
xor
out
xchg
int3
mov
imul
movsl
xchg
rorl
and
pop
cmp
hlt
xor
sbb
sub
and
test
sbb
mov
inc
sbbl
xor
sub
add
negl
xor
hlt
jp
ror
pop
pop
fmull
daa
loop
insl
clc
lods
mov
xchg
ds
mov
cmp
aad
pop
xchg
or
jle
mov
or
push
pop
xor
mov
or
icebp
ret
sub
les
ds
sbb
ret
xchg
push
out
dec
ja
in
icebp
data16
jl
mov
jp
std
inc
or
aam
rolb
jg
add
and
pop
and
add
push
aad
mov
adc
and
popf
push
out
inc
dec
xchg
stos
mov
clc
cmpsl
into
sub
xchg
and
hlt
into
mov
sarb
sub
data16
hlt
pushf
fldenv
mov
das
mov
and
fstl
xchg
cmp
mov
fwait
stos
xchg
xor
dec
adc
and
dec
ds
dec
bound
pop
fisubrs
insl
mov
mov
xor
mov
repnz
ljmp
lcall
jle
jmp
cmp
js
or
bound
inc
dec
mov
mov
push
or
inc
mov
test
adc
test
rorl
add
scas
or
mov
dec
or
cmp
imul
repz
loope
cmp
das
inc
ja
test
add
movsl
mov
mov
cmpsl
loope
ficoms
and
cmp
in
movsb
test
inc
xor
cmpsb
rcl
cmc
mov
imul
fstpl
out
xor
sub
inc
sub
jle
cmp
mov
out
fwait
xchg
in
and
cld
and
add
stos
mov
mov
mov
sub
or
mov
cli
push
lds
jp
mov
enter
inc
jae
or
adc
rcll
fs
aas
ret
test
xchg
push
int3
loopne
les
stos
inc
loopne
jge
outsb
addr16
fildl
in
add
cmp
mov
jbe
adc
jmp
hlt
movsb
push
cmp
jae
xchg
in
sub
jno
xor
lds
movsl
repnz
outsl
dec
inc
pop
inc
test
mov
bound
movsl
rcl
push
bound
cmp
ja
fucom
pop
fsubs
push
out
ljmp
cmp
xchg
mov
xor
mov
jns
fdivrl
dec
cmp
sbb
xor
dec
pop
shl
dec
clc
into
aas
ret
jg
sahf
lea
mov
int3
popa
adc
cltd
daa
mov
adc
idivl
cmp
in
scas
and
xor
aam
and
movsl
xchg
jmp
dec
mov
les
stos
imul
cmp
andb
mov
jle
jo
sarl
inc
loopne
adc
cmp
mov
dec
add
out
sti
push
sub
outsl
inc
inc
addr16
xorb
inc
es
add
data16
roll
out
sub
cld
sti
scas
sar
xchg
fnstenv
xor
out
hlt
pop
sahf
dec
mov
fisttpl
sbb
push
mov
adc
stos
mov
mov
mov
lods
int
inc
outsl
push
add
xchg
out
cvtps2pi
add
jmp
fstl
mov
fdivl
cmp
pop
data16
pop
xchg
scas
xor
cmp
mov
into
in
xor
lods
and
mov
int
ja
push
std
popa
jnp
lret
lods
sti
insl
aas
in
add
jne
cmc
lahf
sub
add
mov
jae
test
and
add
pop
and
clc
mov
adc
sbb
inc
pop
mov
addl
movsb
inc
xchg
pop
subl
fisttpll
sub
roll
inc
stos
mov
add
stc
lods
out
sbb
mov
lret
xchg
sbb
das
inc
push
insl
cltd
jne
mov
repnz
insl
fisttps
inc
sub
cs
sbb
xor
pop
mov
pop
aas
call
std
addr16
pop
dec
shlb
and
mov
inc
or
cmpsb
or
pop
jp
adc
pop
jge
inc
std
dec
adc
lret
outsb
lea
adcl
jle
cmpsb
inc
jne
movsb
push
add
ds
aaa
push
push
pop
xor
jns
loopne
adc
testb
cmp
fs
cmp
test
pop
mov
jno
jns
leave
ss
mov
insl
addb
rclb
test
lods
test
dec
or
movl
int
ja
push
les
scas
call
mov
icebp
xor
pop
call
pop
mov
sbb
jle
imul
xchg
jg
sub
jl
insl
fisubs
mov
cli
push
inc
aaa
lds
insl
cmp
lock
cli
lock
cmpsl
sti
out
into
add
mov
mov
addb
push
xchg
in
push
push
and
mov
xchg
rorb
xchg
out
cmp
lea
pop
jmp
int
sbb
orb
xor
out
lock
dec
insb
lahf
mov
rolb
fnstsw
cltd
sahf
iret
rcrl
dec
dec
push
icebp
fs
add
das
sub
mov
insl
pop
rclb
dec
push
and
jmp
cmpsl
cmp
sahf
out
jb
lret
sbb
adc
imul
enter
repz
mov
fwait
mov
lods
inc
mov
mov
push
sbb
xor
adc
js
mov
inc
nop
imul
scas
movsb
dec
xor
fsubp
inc
mov
scas
aas
fdivrp
into
pop
scas
xchg
addr16
addl
mov
adc
or
and
mov
into
adcl
lret
out
inc
es
jle
cld
cmp
ss
lods
pop
movsl
cwtl
je
jnp
inc
std
arpl
cmp
jne
or
xchg
or
cmp
es
inc
jp
out
push
add
or
xchg
imul
cmp
xlat
xor
and
pop
push
popf
imul
ror
and
jecxz
jo
pop
je
mov
and
sbb
jmp
ficoms
mov
cmp
xchg
ss
insb
fs
mov
andl
std
jp
scas
add
sti
popf
sbb
outsl
sbb
mov
and
xlat
jns
test
fdivr
mov
sub
xchg
in
jbe
out
jecxz
sub
loope
pop
dec
or
clc
dec
cmp
sbb
jle
stos
repnz
adc
mov
inc
sarl
addb
cs
dec
movb
daa
divb
adc
or
roll
repz
inc
scas
cli
sbb
loopne
pop
mov
push
pop
lahf
push
out
ljmp
xor
mov
inc
mov
jg
dec
leave
adc
jno
xchg
cmp
or
cmp
cli
dec
sub
pop
adc
into
pop
and
mov
sbb
sahf
test
js
loope
pop
insl
cli
daa
cmp
xchg
jp
sub
fwait
mov
xchg
xor
inc
test
push
mov
mov
jge
mov
jo
and
pop
and
inc
push
jp
push
push
or
push
insl
pop
in
insb
push
jle
lret
aam
std
push
lcall
icebp
loop
popa
int
jge
in
nop
pop
mov
pop
cli
in
repnz
sahf
and
sbb
out
pop
mov
push
ret
push
and
mov
lret
xchg
mov
stc
mov
add
jl
sub
es
xor
std
movb
lahf
cs
push
inc
jo
aad
les
into
mov
movsb
fidivrs
jb
inc
shll
scas
cs
mov
leave
js
dec
mull
mov
inc
mov
fistps
std
ja
dec
sbb
xor
shll
jmp
out
popa
push
in
ljmp
hlt
pusha
test
sbb
xor
clc
leave
push
dec
push
jp
xchg
mov
cmpsl
xchg
shl
xor
ja
rcrb
fldcw
outsl
lahf
xchg
push
sub
mov
sti
xor
pop
lret
sbb
mov
or
in
ss
repz
cmp
add
fisttps
dec
rcrb
mov
pop
add
lock
das
xlat
inc
sub
cmp
cmp
loop
das
sbb
pop
icebp
add
je
push
inc
scas
add
jmp
out
addb
push
mov
hlt
ret
dec
mov
jmp
lock
push
inc
mov
mov
cmpsb
xor
loopne
stos
mov
loop
imul
test
dec
inc
mov
insb
adc
repz
jge
push
rcrl
popa
test
adc
ret
cwtl
sbb
inc
stos
aas
mov
and
pop
push
xchg
cmp
cmpsl
jb
mov
dec
jo
fdivl
loope
arpl
pop
orl
fisttpl
jl
test
scas
xor
cmp
gs
mov
mov
sbb
test
jbe
add
add
mov
dec
push
jecxz
push
mov
adc
pop
sub
or
movsl
xchg
jl
int3
scas
sarl
decb
xor
or
lcall
xorl
enter
cmp
mov
divl
jecxz
ss
fidivrs
dec
nop
shlb
lods
jns
in
sar
pop
pushf
nop
loop
jne
sbb
fs
loopne
call
es
fs
test
loop
sbb
pop
decb
mov
stos
lret
cld
mov
call
jbe
jecxz
cltd
lods
xor
jp
outsb
dec
pop
cld
faddl
mov
lds
ljmp
cwtl
sbb
and
icebp
inc
sahf
xor
arpl
insb
rcrl
mov
jno
mov
adc
negb
jecxz
xlat
or
arpl
jae
and
iret
dec
fnstcw
pushf
out
sarl
rclb
and
mov
gs
jp
clc
push
push
adc
xchg
inc
or
jp
ret
add
stos
pusha
mov
xor
imul
fucom
inc
andb
pushl
inc
cmp
pop
stos
or
lods
xchg
xor
jns
inc
xor
in
mov
test
jl
cmpsb
repnz
in
dec
repnz
xor
out
inc
sub
daa
push
mov
mov
andl
sub
je
adc
inc
xchg
and
popa
jg
insl
imul
jbe
int3
incl
in
out
shll
cmpsl
popa
jg
inc
adc
inc
movaps
pop
test
and
mov
inc
call
pop
out
jae
mov
pop
sub
mov
cmp
aad
loope
mov
jmp
insl
fdivrs
std
adc
in
push
sub
mov
out
mov
sahf
mov
xchg
data16
xor
lcall
pop
add
xor
cmp
or
adc
fwait
mov
sub
lea
inc
mov
mov
add
sbb
fsub
das
mov
xchg
mov
push
sbb
or
dec
cmp
mov
shlb
in
cli
add
cmp
push
ficoml
cld
add
std
fwait
iret
cld
and
divb
dec
mov
inc
sbb
dec
xlat
imul
lock
xor
cwtl
inc
add
flds
mov
gs
lods
cli
sub
aad
popa
lahf
inc
daa
pop
xchg
mov
leave
sub
sahf
sti
jno,pn
push
in
mov
dec
cmc
mov
arpl
ret
mov
add
inc
pop
fdivrl
sub
shl
loop
mov
loopne
movsl
adc
lock
adc
cmpsl
sbb
mov
lret
xchg
idiv
pushf
and
int
or
test
test
adc
lahf
or
and
cmpsb
fwait
rorl
out
xor
repnz
shll
xchg
cmp
mov
inc
pop
xchg
daa
mov
and
ss
xor
mov
mov
dec
dec
inc
and
inc
xchg
dec
xchg
in
popa
inc
cs
dec
pop
lcall
stc
or
sub
pop
xchg
rep
or
cmpsb
je
mov
push
jne
push
push
ret
data16
ficoml
dec
ds
aaa
sahf
mov
add
aam
cmp
and
push
std
jae
packssdw
fwait
lock
xor
xchg
mov
outsb
adc
dec
sbb
pop
mov
push
adc
jno
jle
pop
pop
arpl
out
sti
push
lcall
and
movsl
push
cli
addb
pop
jns
out
adc
lods
xor
inc
pop
adc
sbb
orl
jle
out
cmp
ret
jp
sbb
jns
xchg
sub
sarl
push
popf
push
bound
popa
test
shrb
xor
sbb
cmp
sub
mov
call
mov
arpl
aam
scas
mov
mov
dec
fdivr
ja
push
xchg
sbbl
or
cmp
fistpll
sbb
divl
rcl
push
pop
les
stc
adc
enter
cmp
pushf
pop
mov
fwait
or
jge
iret
lcall
xchg
sbb
push
jo
jp
inc
cmp
dec
idiv
addb
jb
dec
and
lock
pop
aaa
sub
lahf
cld
jp
push
repnz
fstpt
rol
gs
sbb
les
sbb
jbe
push
cli
ds
nop
or
and
into
cmpb
nop
arpl
add
fidivrl
adc
jle
negl
push
dec
or
xor
mov
jbe
or
sub
mov
movsl
sbb
xor
outsb
pop
push
xorb
data16
dec
mov
bound
dec
repnz
repz
rclb
dec
cmpsb
dec
mov
xlat
fwait
es
pop
les
es
lret
cs
and
jg
sub
lea
push
pop
push
fmuls
or
lret
mov
jo
mov
jle
bnd
jl
scas
sub
out
jmp
aad
fdivrl
rorl
ss
xlat
fdivl
aad
int
ljmp
pusha
mov
das
int3
shll
add
push
das
mov
cmpsl
sub
or
jns
insl
aam
xchg
addb
sub
pop
sbb
xor
sbb
addr16
aas
adc
call
mov
rolb
adcl
aam
jns
neg
push
mov
dec
mov
ficoms
add
in
ljmp
bswap
mov
faddl
cs
out
cltd
out
fiaddl
mov
xchg
jns
iret
xchg
fwait
mov
popf
js
pop
mull
fdivs
stos
pop
push
xchg
or
cltd
xchg
dec
pop
imul
jns
lret
lds
imulb
cwtl
pushf
mov
les
scas
lods
cwtl
lret
dec
mov
mov
int3
jl
movsl
mov
xchg
pop
sub
jp
mov
out
push
mov
int
scas
push
jecxz
ja
xor
or
in
adc
lcall
lds
loop
loope
insb
push
and
popa
xor
es
inc
xor
jae
add
testb
and
adc
sub
sub
fistpll
bound
mov
jo
push
and
pop
sbb
dec
mov
rclb
out
rclb
cmc
hlt
lcall
mov
mov
dec
add
bound
xchg
lods
mov
mov
inc
cmc
or
ja
les
call
jle
cld
xlat
jnp
addr16
mov
sub
std
jbe
adc
jle
leave
push
sbbl
lea
inc
dec
inc
sbb
inc
jae
xor
inc
sub
jno
mov
fists
cmpsl
cmpsl
adc
and
inc
push
jecxz
shll
iret
fcoml
add
mov
push
jle
fidivrs
fimull
jno
fsubl
xchg
js
out
jp
insl
add
pop
movsl
repz
roll
sub
push
and
xor
sbb
ss
rcll
pushf
mov
lods
loop
test
mov
cmc
out
rorl
movsl
dec
add
sbb
lea
sbb
fs
jg
push
mov
xchg
loop
sbb
dec
or
inc
cmp
stc
xchg
jl
lods
in
pop
in
fwait
inc
mov
out
cmp
lea
fs
jle
cld
lods
add
pop
movsl
pop
or
nop
cmp
and
cmp
xor
and
outsb
sub
popa
pop
loopne
cmp
int3
std
sub
xchg
adc
jecxz
or
xchg
shlb
lea
call
pop
mov
aaa
addr16
imul
lcall
mov
sub
aam
sbb
and
xor
pop
inc
push
xor
mov
add
cmp
pop
xor
test
ljmp
xchg
mov
push
sub
dec
mov
movsb
addr16
dec
lcall
mov
jae
sbb
lret
mov
pop
inc
adc
xlat
cmpsb
push
xorb
add
sbb
repnz
sub
out
xchg
cmp
scas
aas
cmpsb
jg
push
mov
xchg
jo
dec
rorl
inc
push
shl
xlat
mov
xor
leave
inc
sti
out
mov
dec
jo
in
out
cld
cmp
out
sbb
and
mov
aad
movsl
mov
jae
cmc
jmp
jo
pop
data16
push
cwtl
xchg
sbb
sbb
lahf
je
inc
jge
dec
dec
mov
mov
add
add
sub
iret
pop
jbe
stc
mov
movsl
cmp
lods
aaa
mov
out
sub
cld
mov
add
cmp
cli
inc
sub
jmp
add
dec
iret
dec
loop
sub
push
pop
sahf
stos
or
xchg
mov
fisttps
xchg
mov
jg
dec
out
cmp
mov
mov
popf
in
sub
outsb
dec
xchg
xor
notb
jno
mov
in
sbb
jle
aam
arpl
movsl
jo
ss
in
xchg
mov
sarb
mov
cmp
jo
outsb
ljmp
cli
lret
mov
push
dec
mov
push
loope
stos
cwtl
push
frstor
imul
out
jecxz
test
js
cltd
push
and
jmp
cmp
dec
pop
jae
cmc
nop
pop
jge
xchg
pop
or
mov
fldenv
popa
loop
cmp
shl
lahf
add
jg
jne
push
int3
js
and
xchg
nop
imulb
push
push
xchg
pop
imul
testl
sbb
pop
mov
fcom
mov
fdivrl
and
outsl
xor
push
stos
sbbb
cs
je
mov
cmc
push
add
lret
lahf
aaa
mov
jg
mov
jl
mov
inc
stc
mov
inc
cmpl
sub
push
sbbb
fmul
inc
jp
repnz
mov
jnp
repnz
fwait
or
xchg
or
ds
push
fldenv
xadd
aam
sti
jecxz
call
sahf
movntq
out
sub
ror
mov
not
cli
iret
mov
xchg
mov
or
adc
ror
jo
pop
mov
add
mov
je
xor
dec
mov
popa
ss
jbe
shrb
cli
xor
mov
xchg
jmp
cmc
adc
adc
jg
jle
adc
xchg
jge
fs
mov
lea
add
fnstcw
inc
mov
or
or
inc
daa
in
andl
daa
in
ret
dec
xor
xchg
push
adc
mov
adc
movhps
scas
or
jne,pn
push
jo
jne
sub
adc
xor
ss
and
shr
jmp
ret
mov
mov
ds
xchg
in
js
lcall
xlat
movsb
push
hlt
push
hlt
push
fimuls
ret
pop
ret
jmp
out
ret
data16
jge
lret
lret
ret
push
mov
dec
imul
aaa
cmp
jbe
test
jecxz
adc
mov
fsubrl
leave
roll
lahf
out
mov
out
push
leave
push
cmpsb
and
mov
mov
lret
sbb
mov
mov
cs
cs
cmp
addr16
mov
cmp
push
xchg
add
ja
in
mov
and
mov
fwait
out
xchg
jg
in
xchg
loop
jmp
aaa
adc
and
mov
adc
jle
lret
adc
rcrl
xor
or
mov
sti
mov
jmp
jae
push
sti
std
leave
add
mov
aas
loope
imul
mov
loope
jno
xlat
cld
jns
push
and
mov
push
jb
or
adc
pop
ja
mov
ja
scas
loopne
jb
pusha
neg
lds
xchg
add
xchg
push
jmp
arpl
andb
xchg
in
pushl
pop
cwtl
cmpsb
cmpl
aaa
test
dec
lods
mov
cmc
pop
xchg
in
sub
xchg
push
push
xchg
test
int3
cmp
aas
jmp
faddl
push
xchg
xor
pop
enter
data16
std
aam
adcb
inc
mov
cli
scas
sbb
fldcw
mov
xchg
stos
add
mov
sbb
push
inc
mov
cltd
sub
push
cmp
fs
mov
and
add
jo
stos
sub
insl
xor
mov
call
mov
push
adc
xlat
lcall
ss
xor
daa
repz
lds
cmp
jecxz
test
mov
push
out
push
xor
mov
loop
sti
leave
iret
popa
or
lret
push
pop
repz
mov
fcoml
xor
sbb
or
ljmp
inc
pop
push
adcl
push
push
mov
movsl
loopne
xchg
fsts
push
jns
push
mov
and
add
out
leave
daa
sub
jb
lock
fistpl
dec
push
ror
cmp
xor
adc
and
roll
clc
cmpsb
jl
or
or
cmp
adc
lods
sub
cmp
pop
popf
cmp
into
add
inc
add
jb
enter
test
xchg
pop
add
dec
cltd
adc
sbb
pop
pop
fwait
ret
lret
mov
or
dec
fmulp
cmp
enter
pop
dec
pop
rcrl
sahf
or
js
fdivrl
cmp
fstpt
out
in
jo
pop
les
in
in
insl
subl
and
in
mov
or
mov
pop
out
loop
shrl
xchg
mov
es
lret
add
pop
icebp
call
jg
jb
notl
xchg
cltd
inc
repz
push
cli
dec
or
shr
push
repz
jo
enter
inc
lods
add
add
push
out
in
dec
data16
fidivl
push
in
ret
aad
in
shrl
daa
jmp
imul
sbb
jmp
pop
loop
mov
mov
add
js
cltd
imul
cmp
int3
hlt
mov
rcrb
mov
arpl
push
pop
lds
jl
outsb
sbb
and
repz
xchg
out
pushf
xor
ficomps
imul
cmp
sbb
adc
or
cmp
and
ss
repnz
and
dec
push
inc
xchg
imul
xor
mov
jmp
not
push
push
sbb
arpl
aaa
adc
mov
jne
flds
cli
ds
adc
lcall
xorb
jns
clc
dec
mov
sub
adc
je
arpl
div
insl
jg
mov
xchg
icebp
shl
mov
repz
fcmovb
pop
shrb
pop
sub
ficoml
test
mov
or
add
loop
movsb
call
lahf
je
cmpsl
and
xchg
insb
xchg
cmp
mov
add
sub
sbb
stc
cmpsb
push
test
inc
mov
dec
jg
cli
push
insb
daa
cmpsl
push
jl
cmpsb
rorl
cli
push
arpl
out
stc
int3
jg
xor
fidivl
push
push
shlb
repnz
das
adc
push
mov
xor
test
out
dec
int
loop
js
push
out
jecxz
mov
jp
pusha
push
fwait
mov
dec
jecxz
lds
push
push
out
cli
push
dec
adc
sbbb
sahf
adc
mov
mov
insl
cmp
jne
out
addl
fstl
push
imul
aad
sub
jge
adc
fsubp
sbbl
popa
lds
dec
outsb
cld
cli
ds
lods
cwtl
lock
jnp
fbld
sti
fdivrp
lea
lcall
mov
add
mov
es
mov
jnp
sbb
ljmp
push
mov
loopne
mov
ja
cli
fst
data16
jp
jg
lcall
repnz
arpl
push
adc
fcoms
iret
shrb
lret
shr
hlt
cwtl
imul
sbb
push
push
pop
xorl
sub
fcoms
add
arpl
sbb
cmpsb
and
jae
roll
in
or
cmp
stc
divl
clc
sub
int3
ds
cmp
sbb
hlt
imul
mov
les
fs
push
push
or
iret
mov
mov
push
jns
fisttpll
or
jns
jge
cmp
fs
into
mov
mov
aam
fstps
loope
iret
mov
inc
jnp
pushf
add
xor
popa
pop
add
cld
mov
mov
nop
mov
lds
mov
in
xor
and
jo
bound
aad
inc
ja
daa
outsb
pushf
dec
fsubrl
sbb
popf
cld
daa
jmp
inc
aaa
push
and
in
jb
inc
inc
or
mov
push
ret
cmp
xchg
xor
cmpb
rclb
push
mov
xchg
jp
lds
sbb
lret
pop
mov
mov
mov
imul
xor
out
push
sbb
gs
mov
je
cmp
sbb
xchg
ret
pushf
xor
lcall
fstp
rol
xchg
pop
inc
sbb
cmpsb
push
leave
cmp
inc
and
cwtl
enter
cli
popa
int
decb
pushf
adc
add
cltd
dec
or
out
aad
jns
pop
cmp
push
add
add
mov
add
xor
data16
xchg
dec
inc
xchg
or
sub
xchg
pop
loope
push
into
call
leave
jns
idiv
orps
mov
mov
pop
or
test
jecxz
push
mov
or
xchg
ja
sarb
jmp
mov
sbb
cmp
cmp
xchg
in
mov
jns
lret
cmp
leave
sahf
dec
push
cmpsb
jb
sub
and
jle
xchg
adc
add
jnp,pt
jmp
pop
jne
and
popf
pop
mov
xchg
sub
mov
popa
mov
in
sbb
push
stos
mov
in
stos
mov
mov
sub
sbb
and
add
add
jl
or
push
es
rclb
or
sub
and
push
loopne
mov
cltd
addb
xchg
cmp
pop
arpl
sub
push
mov
mov
mov
jp
loopne
pop
cmp
xchg
ret
mov
mov
test
shll
or
jg
push
pop
movsb
mov
xchg
cmp
fisubrl
mov
pop
sub
jb
xor
in
pop
cmp
pop
push
cmp
xchg
dec
push
fwait
repz
hlt
ficoml
dec
cmp
cld
ja
mov
jnp
test
jb
dec
and
loope
leave
jae
ljmp
jns
loop
push
stos
jmp
fwait
icebp
sbb
fildll
in
pusha
das
filds
mov
or
cmp
cmp
inc
cs
dec
sub
out
jb
icebp
pop
ljmp
insl
mov
sub
mov
dec
inc
inc
call
inc
dec
push
ja
push
pop
das
cld
shll
popa
sbb
ss
xchg
xlat
popf
adc
lret
adc
in
mov
jle
xor
mov
and
push
add
fbstp
pusha
fwait
xorl
and
mov
aam
inc
adc
mov
pop
sub
mov
sub
sti
incl
cmp
fwait
cmp
int
mov
cmp
std
jae
nop
flds
cli
add
test
sbb
adc
popa
cmpsb
add
push
inc
push
sbb
es
push
sbb
mov
mov
adc
adc
lea
pop
sbb
sbb
cmpsb
inc
std
mov
push
jae
sub
adc
aad
mov
pop
das
sub
cld
add
lret
jns
js
cli
push
mov
std
test
out
adc
sub
jb
add
pop
lret
or
adc
cmp
cmp
mov
test
aas
rcrl
in
or
test
icebp
out
and
xchg
mov
adc
or
ss
or
mov
rorb
iret
aam
je
xor
push
sub
or
cmp
lcall
mov
cli
in
mov
cs
cmp
sub
mov
es
arpl
outsl
pop
mov
lock
and
fwait
aas
scas
pop
mov
jp
xor
ss
push
inc
add
sbb
pushf
jb
mov
sub
scas
mov
lahf
sub
cmpsb
xchg
lret
and
stos
pop
decb
add
xor
test
sbb
add
jl
testb
inc
aad
pop
and
xor
in
push
push
ret
mov
adc
pop
loope
mov
lods
repz
sbb
cmpsb
pusha
sub
pop
adc
adc
repnz
fdivrs
and
js
or
aad
es
js
or
pop
xchg
push
fbld
clc
fucomp
call
inc
inc
xor
shll
xor
cmp
sub
jmp
hlt
xchg
sub
dec
pushf
jp
xchg
js
dec
dec
xchg
test
inc
jnp
fidivl
and
scas
cmc
mov
push
fs
sbb
add
sub
add
pushf
mov
iret
xchg
xor
movsb
mov
ss
lret
hlt
xor
scas
imul
jge
cld
push
cmc
aad
add
xor
aas
popf
push
adc
test
cmp
dec
jno
xor
jle
loope
mov
les
or
xor
je
fiadds
subb
xor
pop
aaa
and
add
xchg
xchg
pop
aaa
cmp
lods
ljmp
or
movsb
dec
jae
test
push
push
pop
ret
lods
mov
mov
mov
gs
xchg
int3
cmp
push
cwtl
inc
jns
mov
mov
dec
pop
fadd
in
clc
mov
pop
sub
push
pop
fs
out
sbb
or
frstpm(287
adc
mov
cmpsb
jecxz
pop
mov
sar
dec
sub
and
insl
enter
test
dec
inc
ret
lock
lods
mov
xchg
aad
in
cmc
scas
push
cmpsb
push
push
dec
jl
inc
bnd
int
imul
rol
cld
mov
outsl
pop
scas
mov
inc
push
mov
inc
mov
mov
leave
je
rcll
out
adc
xlat
pop
out
xlat
fcompl
in
call
iret
push
ret
loope
jmp
icebp
repz
add
shrb
mov
rcll
jbe
shrl
or
dec
das
insb
xchg
incl
jl
and
cmpb
int3
mov
notb
add
sti
mov
pop
mov
shll
gs
aas
xchg
test
dec
in
push
xchg
sub
sahf
pop
jle
add
icebp
adc
jmp
push
pop
jp
add
cmp
ret
mov
sub
dec
sub
pop
mov
stos
orb
outsl
mov
sub
in
std
push
push
testb
shll
mov
and
dec
mov
shll
push
call
cs
hlt
aad
add
add
gs
scas
pop
std
aas
jp
mov
mov
inc
clc
add
insl
add
lahf
jb
mov
push
mov
pop
mov
std
ds
repz
add
test
add
test
dec
mov
cmp
out
xchg
jl
xchg
push
mov
and
jmp
ret
shlb
mov
pop
out
push
pop
mov
lahf
in
pop
cmp
add
sub
sarl
aam
pop
gs
dec
enter
into
fists
scas
mov
mov
sbb
add
cld
lea
mov
pusha
mov
sbb
mov
jae
jle
push
mov
adc
iret
add
dec
cmpsb
sub
inc
int
ds
mov
mov
pop
aaa
lods
in
pop
add
pop
pop
int3
rclb
and
cmpsb
push
dec
pusha
xchg
push
lods
jp
or
lret
outsl
lret
mov
push
cli
ret
dec
and
aad
pushf
call
push
in
lahf
inc
adc
mov
lods
pushf
loope
lahf
movsl
adc
cld
cmp
mull
fisttpl
fidivrl
jg
in
aas
scas
les
cwtl
push
or
jnp
push
jmp
sahf
cwtl
mov
inc
jns
mov
push
scas
cld
fsqrt
dec
bound
fldcw
nop
lret
dec
dec
jecxz
mov
subl
psrlw
inc
push
fsub
sub
sbb
mov
imul
inc
mov
sbb
mov
in
mov
adcb
inc
popf
notl
sub
xor
mov
gs
cwtl
fimull
add
imul
movsl
mov
in
std
push
sub
push
add
pause
scas
pop
std
es
push
inc
dec
push
std
pop
dec
sub
push
test
fs
fstl
inc
inc
mov
fs
rclb
pop
mov
clc
lret
inc
cld
lret
dec
or
rolb
hlt
jae
add
int3
add
insl
lock
dec
mov
in
popa
xor
sub
push
out
and
cmc
and
daa
sub
icebp
insl
stos
or
mov
or
sub
xchg
push
fisubrl
sbb
out
or
sbb
lcall
nopl
ljmp
mov
in
popa
jmp
test
mov
in
pop
mov
inc
adc
out
outsl
outsl
inc
call
ja
xor
mov
inc
enter
jecxz
ljmp
aad
ret
jae
jns
mov
dec
xor
dec
mov
jmp
xchg
xor
pop
loopne
out
and
push
or
aad
xchg
xor
jne
pushf
imul
fcmovnu
or
and
iret
subl
adcb
push
je
call
gs
or
mov
mov
rcll
popl
or
scas
cmpsl
add
mov
xor
fcmovne
fbstp
aam
out
mov
mov
imul
mov
mov
pushl
and
aad
aaa
cmp
jbe
and
jp
pop
int3
xor
iret
push
inc
stos
iret
dec
scas
movsl
imul
mov
jge
in
mov
cmpsb
outsl
sub
popa
pop
xor
jecxz
push
sbb
daa
fs
in
ljmp
movsb
sahf
test
xchg
pop
and
sahf
rcll
lret
sbb
jne
rorb
mov
push
sbb
and
mov
popf
cltd
or
in
lahf
inc
jns
xor
stos
out
push
push
ss
mov
lret
mov
or
das
inc
push
fwait
pop
test
shrb
call
fisubl
push
push
clc
imul
dec
sub
aam
pushf
aas
in
mov
pop
jmp
test
std
sub
out
arpl
inc
loop
xor
stc
xchg
jo
push
test
xchg
mov
clc
imul
mov
outsb
fldt
lret
fisttpll
cmpsl
cld
aas
arpl
inc
add
lock
fnstenv
xor
pushf
inc
jle
and
ljmp
das
testl
xchg
xchg
sub
mov
push
mov
int3
lock
mul
mov
inc
lods
dec
mov
xor
or
pop
aaa
dec
sar
jl
paddsb
add
inc
stos
push
roll
mov
sbb
sbb
in
pusha
cld
or
fdivs
lock
inc
cli
in
push
or
dec
jg
add
movsb
lods
shrb
scas
xor
icebp
mov
mov
movsl
data16
adc
dec
daa
ret
push
jae
out
mov
push
int
jns
xlat
mov
sbb
or
push
mov
rcll
xchg
cmc
and
push
scas
shr
mov
mov
add
into
ds
shr
xorl
sub
adc
mov
inc
out
insl
inc
xchg
and
stos
in
mov
dec
lret
sbb
sbb
shrl
cwtl
push
pop
cmp
mov
or
fwait
movl
mov
jae
pop
dec
inc
pushf
cld
add
dec
cmp
adc
mov
loopne
jp
ret
inc
cltd
xor
add
ret
sar
mov
jb
pop
mov
sbb
fabs
fbstp
test
in
inc
outsl
rcrl
lods
mov
jns
out
scas
js
sub
mov
call
mov
mov
out
pushf
in
lcall
cwtl
scas
dec
or
daa
and
adc
int
add
fstpt
sbb
das
rol
push
or
shl
sub
mov
fldl
cmpl
sbb
adc
mul
or
dec
dec
test
dec
sbb
imul
jl
mov
pop
xlat
test
jle
add
xchg
cltd
add
arpl
dec
sbbb
rolb
test
into
test
adc
iret
pusha
add
dec
jns
mov
stos
jbe
mov
sti
pusha
pop
pusha
xorb
sbb
xchg
sbb
push
cmp
inc
jbe
mov
rclb
or
loopne
adc
ljmp
sti
cmp
push
loopne
mov
or
fsubs
shl
dec
je
mov
sbb
cmpsb
es
imul
roll
fnstenv
enter
push
aas
lret
fwait
aaa
ret
std
aam
xlat
pop
push
jnp
insb
lds
jb
push
mov
inc
cmp
insl
push
lret
jns
nop
sbb
or
in
mov
mov
lds
push
sarb
mov
outsb
add
pop
lret
push
push
leave
shll
jg
add
mov
js
add
or
ret
xor
popf
push
jbe
pop
shrl
mov
dec
cltd
in
in
jg
faddl
test
mov
sbb
push
xor
push
mov
lahf
data16
xchg
jo
leave
cmp
pop
cmp
jmp
mov
lret
scas
shrb
xor
mov
enter
ja
daa
mov
insb
xchg
les
mov
mov
mov
sub
scas
ljmp
nop
xlat
fnsave
cmc
fstpl
shlb
sahf
fwait
repnz
ret
cwtl
popf
sub
pop
pop
pop
insb
and
adc
stos
roll
xor
fwait
mov
out
add
pusha
scas
xor
mov
push
pop
pop
lds
xor
fcomi
xor
mov
insb
sbb
dec
cmp
xor
add
pusha
or
lea
pop
pop
addl
push
mov
lds
xor
rcr
sub
cli
popa
mov
xlat
iret
aaa
jp
sbbb
pop
push
or
stos
movsl
sti
ds
and
ds
outsb
jge
lcall
subb
cwtl
inc
mov
mov
dec
xchg
inc
sub
fldenv
mov
dec
pop
mov
aad
outsb
es
into
cmp
repnz
imul
mov
jns
lock
adc
fdivrl
sbb
popa
jmp
popf
repnz
into
ja
shlb
addb
or
pushf
sbb
loopne
dec
nop
and
push
cmpsb
aam
es
add
incb
push
mov
cmp
stos
jno
xor
and
imull
mov
cmpsl
jp
std
push
mov
mov
mov
cmpsl
mov
mov
jne
mov
mov
pop
movsl
jae
frstor
push
push
cli
push
jmp
cmpb
xchg
cmpsl
mov
test
mov
add
and
cwtl
adc
sub
test
mov
mov
inc
in
push
mov
mov
or
sbb
xchg
push
push
and
dec
adc
stos
jae
push
movsl
icebp
sti
push
cmp
out
dec
stc
imulb
cs
dec
jbe
adc
shrb
xchg
in
movsl
lods
mov
add
shrl
push
call
lret
and
fisttps
pop
mov
scas
sub
adcl
je
movsb
jmp
xchg
roll
and
inc
and
mov
sti
imull
sbb
inc
mov
mov
fdivs
movsb
push
pop
sbb
mov
lcall
jle
jmp
and
push
push
rorb
xchg
cmpsb
fwait
mov
rol
mov
dec
nop
mov
mov
in
shl
dec
adc
sbb
cmpsb
mov
push
daa
cltd
jnp
les
inc
jb
mov
push
dec
xorb
xchg
in
adc
push
test
sub
or
and
lahf
fidivrs
rcll
mov
mov
mov
lret
sti
lahf
test
enter
inc
sub
sbb
mov
addl
and
inc
repz
movsb
sbbl
movsb
lods
outsl
shr
mov
dec
jno
lret
add
fdivl
js
push
gs
xchg
pop
sarl
enter
imul
cltd
sahf
and
or
inc
aaa
lods
daa
mov
fldenv
mov
lods
dec
add
test
push
arpl
mov
cld
aad
add
fnstcw
stos
aad
shll
jge
lcall
sub
enter
jo
cwtl
jne
ret
mov
out
in
repnz
or
push
sbb
jae
cmp
push
pop
leave
pop
push
jle
mov
jns
lret
dec
outsl
outsl
sarb
ljmp
les
loope
test
insl
pop
out
pop
jp
test
in
add
cwtl
cmp
movsl
into
or
add
mov
outsl
jae
adc
xchg
stc
xchg
sbb
pop
adc
scas
adc
clc
dec
jb
push
addl
add
add
in
cmp
ret
js
or
add
or
push
xchg
push
rdmsr
mov
xor
push
loop,pn
dec
cmpsl
out
lcall
mov
cmp
das
hlt
jb
enter
mov
scas
pop
xor
mov
sub
xlat
sbb
clc
push
jmp
xchg
xchg
mov
pop
test
xor
jae
aam
add
or
xchg
mov
iret
or
mov
dec
lret
lods
testb
lock
repz
bound
cmp
pusha
aad
stos
mov
fidivs
ficoms
mov
mov
sub
xor
sbb
pop
in
je
in
aam
cmp
lock
push
adc
pop
jb
sub
jge
int
cli
and
adc
outsb
sbb
aam
in
inc
sub
adc
mov
addb
or
loop
jae
movsl
inc
inc
je
add
sub
out
pushf
add
cmp
lock
jmp
out
loopne
das
ficoms
mov
push
and
aad
xchg
lock
mov
test
in
push
stc
jb
outsb
mov
mov
notl
pop
ret
mov
jl
mov
lea
xchg
adc
int
and
outsb
lock
pushf
and
pop
add
movsb
jle
xchg
jb
addr16
and
ds
xor
xor
leave
aaa
push
gs
jge
fists
dec
jne
pop
rcll
aas
jmp
xor
adc
mov
scas
mov
les
cmp
call
lcall
add
dec
sbb
mov
cmp
mov
test
add
outsb
icebp
iret
lahf
sub
dec
test
xor
mov
pop
call
cmpsb
inc
movsl
pop
jmp
pop
add
adc
hlt
mov
scas
mov
fildll
and
push
std
addr16
inc
inc
inc
das
shll
addr16
dec
jne
ficoms
leave
test
jmp
test
xlat
ja
mov
cmp
out
dec
pop
push
repnz
stc
jb
lds
xchg
mov
pop
iret
mov
mov
inc
mov
jge
andl
sbb
negl
stos
cli
cmp
scas
shrl
pop
pop
popa
lret
xchg
or
lods
or
and
call
xchg
out
sarb
std
neg
ficomps
pop
push
cmp
cmp
shll
imul
pop
pop
cli
and
in
das
mov
jnp
test
rcrl
stc
or
mov
dec
pop
or
push
out
das
jne
push
ja
fldcw
dec
jbe
jo
cmp
cli
outsb
pop
mov
pop
movsb
dec
jl
mov
fsubs
sbb
pushf
jge
sub
arpl
pop
ffree
cmp
ljmp
cmp
cli
jbe
test
sbb
hlt
sbb
or
repnz
mov
pushf
push
mov
loop
test
bound
sub
and
stos
pcmpgtd
sub
sbb
or
or
js
xor
mov
adc
scas
sti
mov
sbbb
xchg
mov
mov
cwtd
jne
repnz
in
push
dec
shlb
push
inc
flds
jl
call
cmpsb
popa
and
lea
sbbb
mov
pop
fnstcw
mov
dec
outsl
pop
aaa
lret
jnp
pusha
xor
mov
mov
hlt
adc
mov
shlb
in
rolb
data16
xor
sti
data16
je
xor
dec
or
ds
inc
in
or
into
and
loop
movsb
or
js
fsubr
xor
or
pop
insl
adc
faddl
fxch
ret
jl
in
sub
aad
xchg
add
aas
stc
js
insl
cld
lahf
or
fldl
jg
mov
push
outsl
jle
es
cmpsb
pop
cli
test
aaa
add
adcl
dec
rol
popf
xchg
xchg
mov
stc
adcl
pop
popa
pop
mov
lods
nop
std
push
jne
leave
mov
push
or
in
pop
lcall
and
es
lods
xor
mov
test
mov
sub
jle
cmp
ja
xor
arpl
inc
inc
mov
sub
xchg
shlb
enter
out
in
push
adc
lods
out
pop
stos
in
mov
jle
cmp
mov
add
xchg
dec
ficomps
shlb
outsb
aas
lcall
jae
push
add
add
jecxz
out
imul
enter
pop
and
lea
mov
cwtl
ret
adc
dec
mov
lea
add
pop
les
dec
imul
nop
inc
mov
ja
stos
mov
push
movsb
leave
inc
mov
pusha
movsb
call
cltd
insb
adcb
nop
iret
cmp
loope
mov
dec
popf
aad
jmp
mov
dec
mov
mov
sub
aaa
sbb
imul
int3
loopne
sub
subl
push
pusha
out
scas
and
out
xchg
lret
cmp
mov
inc
mov
cmpsb
je
mov
outsl
mov
sahf
pop
std
rorl
pop
aaa
fwait
or
mov
push
jmp
enter
ret
sti
cmp
pop
stc
sub
mov
or
sarw
loopne
inc
cmp
jl
sbb
mov
pusha
sub
les
ja
fs
jbe
add
inc
cld
push
push
fisubs
movd
out
outsl
pop
push
gs
add
inc
loop
jns
lds
mov
inc
mov
pop
test
jp
jmp
mov
sti
sub
jmp
push
pop
inc
mov
mov
cmp
pop
cmp
and
or
gs
mov
inc
std
cmp
inc
cmpsb
adc
add
add
out
inc
lods
test
test
jns
loop
sbb
lea
adc
arpl
cmp
mov
dec
leave
xchg
dec
mov
imul
idivl
cmpl
xor
mov
fidivl
xchg
xchg
inc
inc
sub
dec
aas
lods
aaa
popa
sub
repz
push
addr16
pop
out
in
dec
in
ss
cmp
loopne
ds
inc
push
mov
aam
outsb
add
sub
inc
movsb
data16
mov
push
adc
inc
ja
dec
adc
adc
mov
in
xor
insb
ss
sbb
cld
xor
ja
mov
pminub
jle
jo
and
loope
sub
adc
cs
jp
ljmp
jmp
and
idivb
or
stc
stos
mov
ror
pop
fwait
in
xchg
and
movsl
ja
sahf
insl
lds
dec
or
roll
arpl
stos
lods
mov
ret
popf
bound
movsl
xchg
or
mov
mov
adc
adc
sbb
cmp
add
cwtl
imul
call
in
pusha
sub
jne
jmp
push
in
aad
mov
data16
add
add
fcoml
cld
push
add
popf
icebp
pop
fyl2x
jns
jae
lret
jg
mov
fucomi
hlt
jae
jg
pop
or
in
lcall
xchg
arpl
dec
imul
xlat
test
jp
xor
addr16
lahf
sbb
mov
dec
push
mov
in
test
mov
imul
stos
fisubs
adc
dec
xor
loop
jmp
push
push
adc
neg
insb
mov
xchg
test
cld
in
out
mov
leave
sbb
jae
outsb
leave
icebp
pop
mov
cmp
addr16
jg
jecxz
push
and
adc
xchg
adc
mov
mov
sub
pop
push
lock
es
xor
pop
adc
insl
pop
or
adc
pusha
mov
adc
rolb
or
inc
iret
cmp
mov
lret
jo
pop
mov
mov
adc
ret
cltd
fstps
mov
jno
mov
push
fs
pop
push
aaa
jle
fstpt
mov
inc
and
std
sub
inc
sub
mov
sbb
pushf
jmp
lahf
adc
cld
or
push
jp
xor
jnp
shrl
mov
in
sub
jge
fildll
inc
dec
icebp
or
stos
lret
arpl
mov
sahf
xor
pop
fucomip
outsb
sub
push
mov
mov
sbb
pop
lea
loopne
ror
cmp
adc
jp
testl
pop
ret
push
or
repnz
dec
fisubrl
sti
inc
add
movhlps
loopne
imul
cmpsl
mov
ret
mov
mov
fidivl
mov
cli
fidivl
jmp
adcl
aam
mov
icebp
fbstp
mov
xchg
add
pop
jmp
pop
sti
loopne
out
or
jmp
cmp
lahf
lcall
fsub
sbb
call
cwtl
or
ljmp
fldl
imul
lcall
scas
sub
sbb
or
or
add
or
lahf
jo
lds
add
xchg
lods
push
jle
ret
fnsave
xchg
adc
lock
or
mov
outsl
xchg
or
dec
test
daa
xor
xor
push
dec
mov
aaa
lock
jge
fcoms
push
fisubrl
push
pop
or
ja
xchg
sbb
push
iret
xor
lock
sub
stc
and
mov
add
dec
pop
sub
adc
outsb
aam
std
xor
adcb
std
shl
push
xor
cltd
pushf
test
cli
jg,pn
in
subb
xchg
cltd
aam
call
mov
and
cs
inc
shl
cmpsb
or
insl
push
loopne
sbb
pop
lods
or
fwait
xlat
and
sub
pop
imul
sbb
dec
in
push
in
and
mov
cmp
inc
js
add
loopne
xlat
fisttpll
inc
jecxz
inc
in
cli
push
in
enter
mov
xlat
mov
scas
out
aas
dec
bound
inc
jp
jno
sbb
cmp
add
mov
add
mov
popf
add
or
fwait
xchg
xchg
popf
popa
sbb
sbb
andb
filds
std
or
clc
mov
and
ss
fistpl
mov
or
xor
ret
lahf
daa
insb
dec
mov
jns
adc
ja
inc
pop
sub
sub
les
in
mov
fldl
add
mov
mov
in
or
movsb
lret
mov
test
pusha
es
jae
shl
push
adc
jp
mov
cwtl
inc
push
add
das
xlat
in
hlt
sbb
enter
xlat
xchg
lret
lea
cs
sub
sub
mov
sub
outsl
jo
lret
fldcw
mov
sbb
cwtl
xor
bound
and
and
cmp
mov
lahf
fdiv
mov
hlt
inc
pop
cmpsl
pusha
add
mov
lahf
xchg
icebp
cmp
ljmp
imul
fs
mov
sbb
cmp
push
jecxz
or
ret
loopne
les
add
push
mov
mov
outsl
jl
and
aaa
dec
lahf
push
or
imul
xor
mov
in
into
ljmp
add
dec
sub
and
sarl
sub
daa
test
test
aas
mov
movsl
mov
inc
push
sub
out
pop
adc
rcrl
lods
imul
mov
lahf
in
pop
or
fsubs
ret
dec
leave
cmovle
insl
rol
gs
lock
jl
dec
cmp
loope
sti
imul
mov
dec
in
aas
insb
mov
xorb
test
xor
arpl
xchg
ds
inc
stc
lds
std
jno
loope
mov
ja
jbe
jge
leave
xor
push
lret
aam
jl
sbb
mov
std
les
lcall
ret
xor
add
into
in
jge
cltd
out
and
xchg
nop
ds
push
add
xor
adc
lcall
mov
inc
test
pop
pushf
cltd
and
or
mov
add
sub
test
fwait
mov
das
push
out
clc
or
bswap
in
xor
loopne
mov
pop
mov
cli
jmp
mov
ja
xchg
addb
xchg
std
repnz
jl
sbbl
pop
nop
in
jo
jne
ficoms
dec
fnstenv
cmp
mov
jne
arpl
movsb
push
push
pop
dec
mov
ss
dec
push
jle
fcom
mov
lret
xchg
pop
fcomi
push
push
aaa
inc
stos
arpl
pusha
js
lock
sub
ret
jnp
mov
push
inc
call
shlb
mov
sbbb
xchg
jp
mov
fwait
out
int3
xchg
inc
mov
add
dec
or
pop
and
mov
in
push
pop
xor
std
adc
inc
mov
negb
and
and
and
pop
ret
sub
nop
fists
pop
in
js
dec
imul
inc
arpl
call
in
jne
repnz
lret
xor
or
lods
sub
mov
sbb
xchg
fdivrs
or
push
dec
std
int3
lds
or
cmc
es
divb
idivl
in
pop
mov
dec
es
int
sbb
mov
outsb
push
aas
pop
loop
jg
das
inc
loope
stc
cmp
push
cwtl
icebp
sbb
imull
jmp
adc
xchg
adc
cmpsl
pop
bound
mov
loopne
push
cmc
ds
dec
ja
in
dec
dec
into
jbe
cld
dec
ds
ss
inc
shl
push
lret
jo
fisttps
mov
stc
gs
cltd
popa
cmp
pop
call
jno
cmp
fadds
pop
pop
xorl
sub
jg
lea
int3
jns
aam
and
stos
jge
aad
in
cmc
jb
push
or
divb
fldcw
pusha
mov
jae
or
loope
push
sbb
push
outsb
arpl
ret
push
imul
push
repnz
in
mov
push
mov
sub
add
and
rcr
mov
push
lret
rolb
rep
xchg
pop
mov
cmp
jb
fildl
outsl
in
jg
pop
aaa
popf
negb
pop
push
jl
adc
pop
popl
mov
mov
lcall
sbbb
ljmp
lahf
les
mov
testl
push
movsb
dec
inc
lock
fldenv
imulb
repnz
testb
cmp
test
push
push
adc
pop
fcomps
mov
mov
into
mov
insl
es
jg
sbb
cmc
test
aad
xchg
sbb
jnp
xchg
adc
fistps
cmpsb
xorl
repz
add
xchg
sub
in
out
in
in
js
jle
mov
dec
mov
stos
sub
pop
les
or
test
nop
cmp
test
sbb
int
aad
sarl
or
ds
jp
mov
jnp
fmull
repz
aas
clc
cwtl
cs
cmpsb
push
fdivs
xchg
push
lcall
add
push
rcrb
or
insl
cmc
pushf
in
push
lret
test
loope
leave
and
rcrl
cmpsl
scas
into
movsl
pop
add
test
out
scas
loopne
push
adc
push
imul
xor
xor
sbb
mov
and
push
inc
push
ror
xchg
popf
jns
or
mov
jmp
push
lret
mov
pop
sub
stos
inc
mov
push
mov
push
inc
dec
stc
sub
cld
dec
inc
subl
sahf
mov
jp
push
insl
stos
leave
xorl
mov
jbe
jmp
pusha
mulb
mov
jne
inc
in
push
push
dec
insb
loope
mov
movsl
dec
movsl
fldt
push
loope
sbb
outsl
mov
stc
pop
sar
repz
fcmovnbe
push
cmpsb
push
mov
cltd
cltd
cmp
scas
insl
push
add
popf
xor
push
jge
pop
leave
icebp
lea
xor
or
and
lods
out
sub
and
iret
mov
mov
mov
jl
inc
test
push
das
cmp
lods
rorl
xchg
fstps
inc
out
mov
push
jp
dec
xor
add
fstpt
shlb
movsb
push
mov
outsb
mov
cwtl
sub
mov
jp
scas
fidivl
cld
aaa
push
lret
dec
xchg
lahf
sbb
add
cmp
or
add
pop
jbe
jnp
adcl
mov
repnz
sbb
gs
fsubr
add
fstpt
lods
mov
jno
add
jnp
sahf
add
sbb
xchg
cmp
daa
jmp
mov
dec
mov
fnstcw
lret
lret
mov
cmp
loop
sbb
fldcw
add
addb
fisubrl
das
ss
and
mov
adc
push
les
ljmp
and
pop
sahf
sub
stos
jae
jne
mov
movsl
decl
or
push
mov
pop
sbb
push
flds
into
std
inc
and
das
lcall
dec
cmpsl
add
outsb
bound
inc
rep
inc
lds
inc
scas
xlat
sub
adc
sub
sar
cs
clc
pop
or
inc
data16
sub
inc
adc
imul
pop
mov
addb
inc
mov
insl
sbb
jae
jmp
imul
out
call
aaa
leave
sub
cmpsl
std
xlat
mov
and
fucomi
push
cmpsb
pop
fwait
and
mov
lods
je
mov
outsb
push
std
jl
sub
or
cli
std
aas
enter
pushl
adc
lods
je
mov
mov
stos
mov
out
sub
and
jg
pop
nop
sub
or
mov
xchg
sub
enter
mov
shr
mov
scas
sti
and
push
mov
add
and
test
xor
xlat
aas
mov
xchg
pop
push
out
adc
cmp
sbb
ss
in
pushf
sub
mov
es
sub
call
mov
inc
pop
cmp
jo
ja,pt
stc
mov
cltd
mov
dec
dec
rolb
dec
es
es
pop
push
jecxz
jnp
dec
enter
adc
stc
jbe
push
and
int
xchg
inc
rorl
mov
pushf
insb
bound
inc
inc
inc
pop
jnp
fucomp
dec
gs
mov
push
stc
std
jae
xchg
gs
add
mov
or
adc
out
mov
sub
fbld
js
dec
push
pop
mov
xor
push
xchg
push
adc
jle
jnp
das
jo
out
loope
mov
aas
scas
jo
jns
sahf
test
push
sbbb
in
cmp
adc
das
mov
stos
cs
into
lea
adc
add
aam
lahf
lods
sub
cmp
out
sti
fisttpl
pop
in
pop
inc
popa
int
lock
dec
sub
adc
inc
lahf
into
and
lret
xor
mov
sub
iret
aaa
jae
fsubr
xchg
fs
cmp
rclb
out
test
les
fisttpl
pop
test
mulps
add
push
xchg
push
jb
stos
ret
inc
dec
repz
test
inc
dec
cmc
test
outsl
mov
repz
shrb
in
scas
pop
dec
add
mov
test
fsubrs
aaa
loopne
into
push
pop
test
ljmp
push
xchg
inc
sub
aam
push
mov
and
inc
mov
or
jns
les
jmp
sbb
ja
out
inc
cmc
sbb
icebp
xor
mov
or
mov
jl
imul
insl
aad
and
fisubrs
xchg
in
cli
mov
dec
popf
add
in
sub
dec
push
add
stc
sbb
mov
cmp
jno
dec
xor
cwtl
sub
aad
cmp
and
stc
arpl
lods
adc
cli
and
xor
shlb
jns
stc
sub
xchg
out
sub
aaa
fsubrl
pop
dec
and
and
xor
test
scas
inc
dec
negl
icebp
sub
in
loop
sub
pop
or
add
sti
mov
xor
addb
in
xchg
jbe
xor
jl
jge
sub
andl
adc
test
adc
mov
and
sub
cmp
jecxz
jns
inc
sbb
add
lock
xchg
pop
sub
push
inc
mov
je
and
adc
repz
adc
out
add
shlb
mov
jg
jg
xor
hlt
fidivrl
scas
std
dec
xor
fcmovu
mov
sbb
stc
stc
and
jo
sbb
ja
movsb
scas
mov
cmp
xchg
jo
push
out
mov
popa
mov
subb
pop
xlat
mov
mov
dec
ficoml
scas
jecxz
fwait
jbe
aas
jecxz
sub
fldenv
xorb
sbb
loope
lcall
hlt
lods
pop
inc
test
les
in
mov
lea
mov
les
gs
xchg
add
pop
repz
dec
lods
or
arpl
hlt
push
stc
pop
jne
movntq
mov
xchg
add
dec
add
xchg
mov
movsb
mov
dec
xlat
lods
dec
push
frstor
fldt
and
in
cltd
jge
xor
lcall
adc
dec
sub
jle
pusha
jmp
cwtl
loopne
fsubrp
jle
je
in
sub
xchg
pop
add
cwtl
push
pop
sub
sti
sbb
dec
insl
movsb
pop
fnsave
js
cmp
mov
mov
ret
popa
adc
mov
scas
mov
lock
jp
sbb
dec
scas
arpl
inc
leave
push
dec
mov
pop
lcall
mov
xlat
out
iret
test
lret
adc
push
stos
xor
cmp
jbe
push
das
pusha
aad
push
or
jnp
pop
loopne
fldl
stc
push
ljmp
hlt
aad
dec
fildll
adc
xchg
xchg
dec
insb
mov
pop
cli
out
sti
fildl
repnz
stc
outsl
or
in
xor
jo
arpl
pop
and
lock
dec
and
outsl
loopne
inc
pop
adc
pushf
bound
jl
xchg
xchg
shld
insb
mov
or
fs
push
imul
sbb
push
cmp
shll
add
pushf
push
lret
scas
push
aad
xor
addr16
jl
imul
inc
jne
aad
aaa
lea
push
and
repnz
in
jne
and
jae
lea
jl
lods
and
daa
inc
jge
lret
push
pushf
les
cmp
jmp
in
cmpsl
pop
xlat
and
adc
ja
xchg
dec
mov
loop
cmovbe
fiadds
dec
iret
xchg
mov
xlat
test
sub
or
mov
push
xchg
popf
clc
mov
scas
outsb
sub
push
mov
push
ret
scas
imul
push
cmp
mov
fsubrs
push
out
or
dec
push
sub
dec
test
shlb
mov
sahf
bound
stc
sbb
dec
sub
push
nop
hlt
mulps
dec
push
cmc
test
fwait
adc
xchg
insl
dec
jno
dec
jmp
mov
sub
faddl
jmp
cmpsb
enter
fdivr
mov
jecxz
sahf
shlb
add
bndmov
push
pop
movsl
sti
pop
rclb
jno
xchg
dec
sub
out
jl
out
call
adc
xor
pop
addr16
repz
xchg
fnstcw
jnp
loopne
loope
in
dec
rcrl
adc
adc
iret
lret
movsl
lock
lret
xchg
push
mov
bound
xchg
daa
mov
lcall
xchg
mov
xchg
push
ljmp
cmp
daa
mov
movsb
mov
and
mov
imul
pop
insb
in
sqrtps
dec
mov
push
xchg
xor
loope
test
pop
lea
sbb
xchg
mov
xchg
mov
or
jecxz
and
cwtl
subl
movsl
stos
dec
sbb
jnp
or
in
mov
mov
cmpsl
mov
popa
in
loopne
mov
xchg
push
imul
sub
in
mov
pop
cmpsb
aam
nop
bound
repz
jnp
pop
divb
pop
movsb
push
imul
mov
dec
cli
push
xlat
mov
sub
aam
sub
sbb
and
ret
inc
sub
add
add
out
push
mov
fs
test
rclb
cmc
jmp
mov
adc
cmp
aam
fidivs
and
testl
out
stc
mov
jecxz,pt
sti
andb
movntps
or
gs
cwtl
lds
or
push
loopne
stc
in
inc
cmp
ss
mov
hlt
jb
mov
mov
jns
iret
push
ss
lcall
push
mov
xor
mov
sbb
gs
mov
inc
rcr
dec
add
mov
adc
inc
mov
daa
mov
je
aad
test
and
inc
jp
xor
mov
pop
cmp
jecxz
xchg
in
inc
fimuls
mov
add
nop
out
sub
inc
sarb
outsl
fwait
and
xor
push
inc
leave
mov
scas
sahf
pop
out
in
adc
xorb
ret
push
push
xor
dec
jno
inc
xchg
sbb
test
adc
xor
mov
jmp
imul
cs
out
xchg
push
cmp
mov
aad
mov
out
jno
leave
std
jns
test
xchg
and
xchg
xchg
nop
mov
into
pusha
into
dec
in
xchg
lret
jno
mov
jbe
inc
inc
les
loopne
jle
pop
xchg
xchg
clc
sub
mov
jno
adc
xchg
lods
iret
out
scas
push
sub
push
mov
mov
out
inc
cmpsb
lcall
les
lods
adc
lea
mov
enter
mov
jecxz
fisubs
movsl
dec
xor
inc
xchg
not
insb
test
lods
mov
das
or
mov
jecxz
mov
push
xchg
test
mov
xchg
inc
add
ljmp
in
jp
mov
imul
jns
sub
rolb
fidivrs
aad
pushf
adc
iret
rorl
xchg
mov
fxch
cmpsb
movsl
dec
xor
fcoml
pop
adc
stc
loop
cmp
out
mov
adc
insl
mov
jns
mov
inc
and
and
stc
fisubs
jl
and
jge
in
mull
mov
out
incb
imul
ret
mov
fcmovne
inc
pusha
mov
lret
cmpsl
mov
and
ret
jno
loopne
shlb
mov
mov
inc
inc
iret
shlb
jmp
adc
out
ss
add
cmp
mov
and
jns
enter
rcll
insl
inc
adc
cmovp
push
repnz
nop
out
xor
add
pop
add
dec
xchg
jno
addl
mov
out
shl
mov
pop
es
dec
sub
hlt
fildl
add
dec
dec
sbb
call
jne
adc
test
inc
jne
cmpsb
jo
sbb
call
xor
mov
aaa
push
cmp
push
daa
int
xor
push
add
adc
sub
popa
xchg
dec
xor
sub
push
mov
add
xor
jo
dec
mov
fidivs
adc
pop
mov
ja
xchg
stc
push
jae
pop
pop
mov
cltd
cmpb
das
jge
and
sbb
xchg
shr
out
repz
frstor
dec
or
incl
popf
mov
into
paddusb
mov
dec
cmpsl
imul
xchg
or
jb
inc
in
call
test
pop
rcr
sub
mov
stos
and
movsb
push
mov
inc
pop
cmc
fwait
xchg
mov
adc
or
mov
jns
or
dec
out
xchg
movsl
mov
mov
test
loope
push
dec
int
and
and
push
mov
xor
cs
push
pop
lcall
pop
push
inc
outsb
xchg
or
std
icebp
shrb
movsl
sahf
rolb
int3
mov
xchg
cmp
sbb
mov
fisttpl
jp
fwait
in
cmpsl
pop
lds
iret
xchg
test
lock
loop
mov
sub
adc
in
popa
mov
and
movsb
sbb
outsb
or
fistl
imul
adc
and
cld
les
enter
pop
xorl
jmp
sbb
sbb
rol
sbb
test
dec
sbb
jnp
jnp
nop
rolb
mov
js
bound
enter
mov
xorb
push
mov
stos
mov
sahf
mov
xchg
inc
repnz
int3
mov
fbld
insl
ds
xor
push
cld
lock
xchg
mov
xchg
jbe
clc
loope
inc
adc
imul
push
test
jae
pusha
push
dec
adc
jo
adc
xor
xor
mov
mov
add
popa
mov
xor
sub
mov
lea
xor
xor
mov
cmp
push
stos
and
dec
add
pop
xchg
sub
mov
movl
pop
aam
jno
inc
push
mov
insl
inc
rcrl
pop
imul
pop
js
adcl
mov
jg
out
aam
mov
in
xchg
cltd
inc
ret
lcall
cltd
sar
out
push
jne
adc
sub
push
ljmp
je
sbb
cld
cli
push
add
test
xor
lds
cmc
lret
sbb
movsl
les
push
stos
fdivr
in
fdivp
repnz
xchg
leave
mov
inc
cmp
push
js
xchg
outsl
and
mov
sarl
jmp
out
ret
clc
xor
insb
leave
out
adc
mov
pop
cmp
bound
in
fistpl
aas
add
in
inc
popl
add
std
and
mov
aaa
push
inc
fsubrl
xor
add
cli
and
add
mov
xor
adc
hlt
es
or
xor
inc
cmp
scas
push
adc
jae
add
mov
dec
outsl
imul
pop
dec
add
rcr
push
stos
pop
mov
fistl
jmp
sti
cmp
rcr
cltd
sbb
sbb
stc
ljmp
xlat
mov
cmp
add
movsb
aaa
cltd
rclb
adc
lock
dec
xchg
xor
cs
jecxz
sbb
xor
cmp
dec
lods
dec
pop
add
jmp
mov
out
cmc
dec
xor
pop
push
push
pop
lock
lret
scas
mov
in
insl
sbb
pop
xor
scas
cmpsl
filds
add
cs
aad
data16
out
mov
sub
jmp
es
xor
xchg
sub
loopne
shlb
movups
inc
cs
cwtl
xchg
push
int
sbbb
jbe
dec
push
push
sbb
movsb
cmp
fisubs
cld
into
sti
jns
and
dec
xchg
dec
out
mov
mov
cmpsb
mov
popa
daa
mov
stc
inc
pop
stos
push
cld
pop
nop
jecxz
out
or
sub
hlt
jmp
test
adc
xchg
pop
fisttps
push
pop
mov
push
and
fstps
int3
mov
dec
cmp
fbld
adc
clc
cmpsb
and
insl
lds
mov
xor
dec
sbbl
rcrl
cmp
adc
pop
xlat
dec
popa
sub
or
pop
and
mov
jne
lret
cs
sbb
adc
test
icebp
repnz
push
stos
out
aaa
mov
and
je
lds
inc
outsb
lods
sub
out
xlat
ret
push
dec
add
push
aam
decb
out
cli
in
adc
test
aas
cld
adc
out
mov
fmull
out
rorl
cwtl
cmp
ficompl
pop
add
dec
pop
test
add
cwtl
mov
daa
into
add
add
icebp
sbb
push
mov
aad
insl
jbe
xchg
sar
loopne
inc
push
mov
jne
daa
mov
xor
fidivrl
lcall
xchg
pop
cmp
lcall
sub
cli
sbb
mov
dec
enter
or
push
addr16
mov
dec
cld
pop
add
push
pop
fs
nop
stos
jl
sub
cmp
xor
xor
cmp
add
jle
mov
js
pop
outsb
push
aam
scas
jmp
cli
gs
aaa
negb
fbstp
lret
pusha
inc
push
insl
cmpsb
sub
loop
icebp
sti
daa
push
and
dec
dec
popf
shrb
cwtl
sub
in
sub
mov
into
dec
sub
add
in
imul
addb
and
popa
jge
xlat
cmp
movsb
xor
iret
out
xor
into
lods
xor
ljmp
pop
subb
mov
xchg
xor
jle
push
dec
movl
jp
fsts
loop
jmp
cmpsl
mov
add
popf
orb
push
adc
das
pushf
xor
inc
cmp
stos
shrl
add
test
stos
gs
cmpsl
push
fnsaves
test
mov
mov
push
sbb
in
xchg
hlt
or
push
dec
ret
nop
outsl
fisttpll
dec
push
int3
mov
addr16
mov
shl
mov
inc
sbb
icebp
pop
jae
push
cmp
xor
push
mov
ss
inc
mov
mov
mov
rcll
in
inc
pop
adc
dec
stos
aam
mov
push
arpl
add
popa
fnstcw
mov
iret
jb
mov
inc
insl
pop
inc
shll
push
je
inc
sub
sub
cmp
in
fdivrp
adc
loopne
and
mov
movsl
stc
jp
sbb
dec
scas
sbb
outsl
daa
pop
pushf
fucomi
adc
stc
sub
ret
dec
or
jnp
cld
in
cmp
dec
nop
loope
outsb
es
daa
imul
add
add
jecxz
iret
call
jge
loopne
xor
repnz
movsb
dec
fucom
jns
cmp
imul
ljmp
dec
cld
pop
mov
xchg
and
mov
xor
je
incl
sub
push
cmpsb
loope
insb
lret
fisttpl
rcrl
es
loope
mov
sbb
and
cltd
pop
sbbl
push
leave
mov
lods
pop
sub
sbb
clc
add
cli
push
fwait
out
std
jl
cltd
mov
adcl
hlt
pop
pop
test
cmpsb
push
ljmp
mov
xor
out
push
xchg
jae
dec
lods
sub
cmp
addr16
mov
mov
adc
jnp
out
ss
stos
loop
xor
and
mov
stos
inc
hlt
xor
pop
sbb
out
mov
add
mov
adc
repnz
stc
sub
add
movsb
push
xor
mov
popl
data16
inc
jecxz,pn
sbb
mov
fnsave
stos
adc
inc
dec
cli
out
insb
jle
int
jne
xlat
fildl
push
daa
andb
pop
and
xlat
cmpsl
rorb
das
int3
mov
popa
ss
aaa
stos
mov
jmp
cmp
stos
in
aam
mov
insl
mov
push
in
rcrl
and
call
inc
sbb
sbb
movsl
nop
sub
js
std
pop
pop
enter
and
xchg
inc
inc
mov
jg
pop
mov
mov
aad
xor
popf
cltd
push
xchg
mov
sahf
push
mov
lret
sarl
loop
sbb
cmpsl
aaa
and
or
loop
subb
mull
jge
fcom
jae
lret
ret
inc
mov
arpl
mov
pop
stc
inc
jne
lods
rcrb
fdecstp
les
jae
jnp
inc
mov
mov
and
push
cmp
and
aas
ds
fptan
icebp
xchg
ret
lock
into
inc
lods
lret
lahf
adc
fistpll
and
sbbb
testb
or
jae
xor
add
je
and
push
lds
and
popf
sarb
ss
mov
arpl
jp
shll
push
loopne
mov
pushl
stc
xchg
mov
adc
adc
push
outsl
push
lahf
mov
jbe
cld
jno
pusha
sbb
pop
sub
pop
rep
dec
sub
xchg
adc
mov
lahf
arpl
push
cmpsl
std
xor
test
subl
stos
sub
jle
cli
cmp
imul
lahf
xorb
pop
cmpsl
int
dec
scas
mov
das
sti
push
adc
jnp
and
test
push
pop
sbb
orl
lock
hlt
shl
flds
or
cli
dec
popf
xorb
int
testl
movsb
mov
jnp
xchg
mov
and
jl
nop
push
ffree
cmc
shlb
out
cmp
mov
mov
mov
xchg
aad
into
push
xchg
loopne
pop
pop
add
mov
jbe
int
push
pushf
mov
lret
movsl
out
xchg
add
cwtl
mov
ljmp
pop
mov
push
insl
aad
hlt
scas
cmpsl
scas
dec
decl
mul
sahf
fs
push
xchg
xchg
popf
xchg
mov
adc
out
vpcmpeqd
test
pop
cmc
and
push
test
fs
push
in
pop
shrl
add
mov
mov
add
test
dec
xchg
jne
mov
movsb
dec
shlb
inc
int
lods
int3
popa
xchg
sbb
jnp
and
popa
cltd
popf
in
out
pop
xor
movsl
dec
int3
adc
pop
das
idivl
outsl
outsl
xchg
jmp
xor
dec
dec
lock
xor
lock
dec
push
jp
adc
xchg
pop
bound
push
pop
mov
mov
cmp
jle
bound
andb
ljmp
enter
rcl
xor
inc
jmp
loope
jg
stos
fucomip
sub
int3
js
cli
mov
mov
or
fs
test
call
jb
inc
shr
test
cltd
mov
lret
ds
out
xor
xor
sub
sub
cld
pop
or
inc
ljmp
cli
pop
fwait
jne
lds
cmpsb
stos
dec
inc
lods
sti
movsb
inc
insb
sbb
popl
test
mov
xchg
out
ret
add
shr
insb
pusha
mov
int3
mov
cli
mov
clc
jge
push
dec
or
mov
mov
cmp
insb
mov
subb
lret
adc
fildl
adc
sbb
jle
mov
out
in
clc
aam
pop
divl
stos
clc
adc
mov
jnp
pop
sbb
jp
shll
out
xchg
push
sbb
out
std
notl
test
or
cmc
bound
sbb
mov
movl
pop
scas
inc
test
cmp
popf
fildl
aam
fcmovbe
xchg
add
insl
pop
test
pop
or
or
add
jns,pn
add
jbe
add
pop
ss
fwait
into
fisubl
lds
push
mov
push
clc
arpl
fmul
cltd
clc
int
cwtl
out
lahf
cli
jne
add
mov
jb
mov
add
out
out
jae
and
es
mov
out
xor
dec
rcl
sti
and
sahf
call
std
imul
cld
mov
adc
jl
sub
popa
sahf
xor
mov
mov
add
daa
pop
fwait
lods
cmpsl
cwtl
or
push
sub
or
ret
shll
fsubl
and
xor
or
and
cmpl
pop
pop
stos
sbb
out
stos
xchg
sbb
add
lahf
jmp
sub
lret
insl
lea
in
arpl
fisubrl
insl
inc
inc
sar
dec
mov
or
add
ror
mov
push
ror
sbb
xchg
or
or
cmp
jle
call
dec
mov
xlat
jmp
adc
fs
xchg
add
xchg
test
shrb
cmc
es
jbe
pop
adc
mov
adc
clc
jmp
cmpsb
xchg
push
lcall
and
stos
clc
cltd
jle
mov
sarb
test
add
nop
out
mov
jle
test
into
sbb
mov
jo
cltd
call
inc
in
inc
fsubr
in
mov
fs
ret
pop
or
cs
imul
adc
jp
push
cld
adc
mov
inc
test
shll
pop
aaa
xchg
mov
dec
push
test
test
mov
roll
xlat
lods
aam
xlat
or
mov
jns
push
add
mov
or
out
add
dec
pop
xchg
mov
mov
movsl
pop
xor
outsl
add
push
flds
dec
or
or
cld
mov
or
jge
pop
xor
in
push
adc
and
lcall
movsb
mov
stos
cmp
jl
enter
push
imul
inc
push
sbb
outsb
push
cli
adc
cltd
popf
or
mov
xor
xchg
iret
lds
scas
xorb
xor
fcmovb
jp
pusha
cli
cs
or
lcall
outsb
gs
bound
add
jge
pop
pop
cmp
push
inc
or
add
add
clc
inc
cmc
test
inc
popf
int
cld
fcomps
push
movsb
int
mov
stos
aaa
mov
int
in
xchg
jnp
ficompl
dec
subl
cmp
xor
lret
mov
mov
jl
push
pop
mov
insl
cltd
cli
dec
sub
insl
std
shrl
add
mov
pop
addr16
jbe
dec
ds
shlb
outsl
imull
loopne
fdivrs
sbb
aad
out
pop
idiv
mov
shr
mov
sbb
sbb
sbb
loop
mov
int3
xor
push
jle
or
fiaddl
lea
sub
out
outsl
test
jo
ss
inc
push
dec
inc
dec
nop
lea
add
out
mov
lcall
repnz
mov
push
pop
aas
lahf
or
loop
push
push
adcl
mov
pop
cwtl
jp
jge
mov
or
jg
jmp
negl
aam
lret
dec
inc
movsl
std
xor
cmp
mov
dec
scas
mov
lret
sahf
sbb
sahf
out
shlb
rcl
enter
dec
mov
sbb
lcall
or
push
inc
in
in
mov
adc
fincstp
addl
nop
pop
inc
stc
orb
pusha
test
lock
xor
enter
andl
pop
add
jbe
mov
call
decb
scas
imul
dec
adc
sbb
mov
fcoms
and
mov
loop
test
ret
pop
shr
xor
xlat
add
popa
sub
inc
inc
mov
xor
jo
xor
repz
fadd
pop
js
ss
cmp
std
inc
popf
cmp
xchg
jge
sbbb
xchg
lret
cmp
stos
jge
cmp
push
dec
pop
lods
daa
mov
stos
jge
stos
mov
int
or
mov
stc
add
test
std
mov
hlt
xchg
fdivl
xor
push
daa
push
and
pop
mov
push
and
idivl
sarb
fisubrs
push
lcall
outsl
ret
mov
ljmp
or
push
adcb
jl
js
mov
pop
cmpsl
imul
jge
add
inc
xchg
push
push
int3
sbb
pop
mov
push
in
fisubs
and
cmpsl
clc
int
fcmovne
sbb
aas
jb
or
test
das
cmp
mov
push
sub
and
jne
cmpsl
jne
mov
cmp
xchg
cmpb
mulb
int3
aaa
clc
mov
dec
jo
xchg
push
mov
ret
pop
sub
cmp
push
in
mov
das
in
stos
sti
and
inc
or
cmp
or
fs
add
jmp
in
mov
shl
cmpsb
sub
or
cmpsb
push
xorb
andb
adc
xor
aad
divl
movsb
insb
jge
and
js
mov
jl
xchg
ret
int3
repnz
push
cltd
divb
cmp
cltd
adc
push
sbb
xchg
jo
mov
mov
xchg
push
lret
fs
dec
cmpb
test
popl
adc
sub
xor
mov
mov
and
loop
jns
mov
test
mov
xchg
fs
dec
push
stos
and
xor
xchg
mov
mov
pusha
popf
or
push
xlat
jmp
shll
inc
sahf
mov
mov
cmp
jno
mov
out
xor
push
cmc
xchg
mov
mov
pop
sbb
or
adc
mov
sub
dec
and
sbb
cmpsl
dec
fistl
push
add
mov
sbb
insl
mov
clc
xchg
jbe
mov
cld
xchg
jb
mov
clc
jg
cmpsb
jg
adc
sbb
sub
ret
js
mov
sbb
lret
in
push
cmp
add
clc
or
mov
dec
sahf
mov
ret
add
sub
pop
ret
jns
sti
fiadds
xchg
shll
mov
mov
cmc
mov
jecxz
pusha
sbb
mov
ljmp
inc
int
cmp
das
cwtl
ljmp
ljmp
dec
xor
add
hlt
stos
mov
cmp
je
and
xchg
roll
stos
mov
out
cmp
sbb
mov
inc
icebp
cmp
cwtl
lods
in
int3
jmp
dec
es
dec
mov
jae
arpl
pop
dec
sub
repnz
shlb
mov
mov
jecxz
or
mov
mov
inc
repz
fimuls
sub
mov
xchg
xchg
jmp
xchg
mov
dec
sbb
cs
dec
cli
jmp
fs
out
into
lods
sbb
std
out
jp
loopne
adc
aaa
clc
inc
shr
mov
stc
rol
mov
jne
ss
and
in
enter
repnz
jl
jae
icebp
shll
add
jecxz
pop
push
add
cmpl
fmull
mov
sarb
pop
inc
adc
push
pop
xchg
inc
cmp
xchg
dec
inc
push
push
inc
enter
imul
mov
cmp
cmc
dec
sbb
dec
add
adc
pop
in
pop
push
pop
jmp
add
sahf
or
incl
jp
out
adc
push
fisttpl
cmp
fldenv
imul
pop
mov
dec
sbb
mov
repz
mov
lods
jge
push
cli
subl
aam
ret
ret
gs
negb
add
loop
jmp
into
push
push
sbb
cmp
push
mov
sub
or
jmp
ret
outsb
mov
test
sub
and
pop
inc
add
enter
fisubrs
lahf
push
and
rcl
in
sub
popa
shrb
xchg
dec
insl
mul
push
mov
sbb
mov
dec
scas
andb
sti
aas
arpl
leave
imul
call
jl
fsubl
ss
aam
notl
mov
push
iret
nop
mov
int3
cmc
xchg
mov
jle
fcmovb
iret
push
aam
sub
cmp
pop
or
jnp
and
sahf
and
mov
popf
push
xor
xchg
jp
in
mov
jns
not
imulb
inc
jne
incl
test
int3
fisubrs
dec
xchg
jmp
mov
jmp
push
adc
mov
gs
aad
push
bound
dec
aaa
xor
dec
mov
scas
mov
cmp
push
cmc
rolb
cmc
lret
or
mov
lds
dec
pop
dec
fcoms
xchg
in
sub
into
add
daa
in
xor
xchg
fstps
js
pop
mov
cli
and
mov
rol
jo
xchg
lods
ret
xchg
into
push
pop
add
pop
jb
inc
lds
std
into
leave
adc
mov
mov
dec
stos
loope
and
inc
push
ja
jbe
sbb
sub
in
fstpt
ljmp
ljmp
push
cli
jno
mov
pop
fst
xchg
mov
fwait
mov
cmc
xchg
or
dec
pop
stc
sub
inc
insb
and
stos
jb
sub
push
leave
mov
sbb
sub
inc
fimull
sub
sub
fldt
dec
pushf
punpckhbw
movsb
nop
cmc
mov
movsb
arpl
loope
push
xchg
lock
std
les
iret
cmpsl
and
test
push
negb
enter
push
popf
test
cld
aam
inc
sbb
push
push
sbb
mov
lcall
sbb
jae
or
adc
push
leave
adc
ljmp
adc
and
mov
fisttps
cltd
scas
repnz
jno
cld
push
pop
imul
sti
test
sub
popa
mov
adc
adc
ss
and
std
xor
movd
mov
out
jmp
sbb
and
scas
repz
pop
fcoms
popf
jp
pop
add
xor
fsubrp
pop
fpatan
pop
push
adc
enter
xor
inc
pop
pop
dec
cmp
lds
lock
sti
mov
pop
cwtl
push
xchg
lds
adc
mov
stc
pop
in
xchg
popa
outsb
jb
mov
xchg
scas
inc
fiadds
scas
mov
adc
mov
loopne
push
dec
in
sbb
add
dec
mov
fistps
dec
jge
jns
fwait
mov
push
xchg
jae
push
mov
addb
icebp
test
mov
mov
repz
fidivrs
rolb
std
sub
shrb
sbb
insb
sbb
sub
into
out
int3
mov
mov
cmpsb
fucom
xor
jno
mov
lcall
pop
clc
mov
pop
lcall
out
xchg
fmull
mov
pop
fbld
pop
mov
inc
add
incb
jbe
and
xchg
mov
enter
jae
xchg
mov
cmc
test
inc
gs
cli
fidivrs
sbb
cli
xchg
jae
pop
jmp
lea
sahf
call
sbbb
push
ret
push
mov
sbb
mov
jle
adc
repz
sahf
lods
pop
cmp
cltd
movsb
iret
fisubs
xor
mov
shll
push
cmp
adc
mov
iret
pop
ds
rorl
int
repnz
push
icebp
sbb
sub
push
sub
in
icebp
movsl
outsl
add
mov
and
xchg
add
sub
fcmovb
aas
or
out
fs
in
xor
repz
loopne
rcll
test
pop
mov
cmc
lds
xor
lea
mov
xchg
hlt
mov
lahf
push
mov
xorl
xor
in
xor
xchg
scas
push
popa
sub
aas
enter
inc
iret
pop
dec
or
jnp
mov
and
jl
pop
mov
outsl
fnstcw
ret
pop
pop
arpl
cmp
inc
add
and
push
mov
pop
xorl
mov
push
adc
lcall
fnstcw
xchg
sub
dec
mov
loope
mov
push
dec
inc
cli
push
lea
xchg
xchg
fisubs
cld
mov
insl
cwtl
add
inc
xor
std
pusha
push
dec
sahf
xor
repz
pop
add
sub
mov
jp
and
pop
sbb
in
inc
adc
in
push
cld
adc
mov
push
aad
pop
inc
sbb
mov
sti
repz
mov
lcall
adc
xlat
cmp
mov
imul
leave
repz
out
pop
shrb
out
pop
lret
cmp
sbb
shr
rcll
stos
das
pop
arpl
and
add
push
add
push
adc
hlt
adc
mov
jl
adc
lret
cwtl
or
shlb
adc
push
insl
lea
inc
adc
subl
xchg
add
or
dec
movsl
jp
fdivrs
cmp
rclb
data16
cld
adc
mov
fdivrl
js
out
out
jmp
lds
add
jbe
add
push
add
mov
bound
cmp
adc
xchg
dec
jg
rorl
ret
cltd
and
jae
leave
pusha
cmc
dec
mov
stos
mov
dec
lcall
enter
jno
mov
inc
mov
jo
mov
fnstenv
outsb
sbb
mov
dec
cmpsl
jbe
ret
xor
sub
lods
xchg
stc
loopne
js
adc
xchg
fstl
pushl
fwait
aam
in
push
adc
pushf
popa
int3
inc
leavew
aam
mov
popf
xchg
frstor
scas
leave
jnp
lcall
sbb
leave
xchg
push
jo
and
imul
popf
repz
mov
leave
insl
test
push
daa
push
mov
cld
xor
push
mov
scas
adcl
inc
mov
xchg
pop
mov
pop
lret
push
out
mov
fiadds
lcall
push
inc
inc
cmp
sub
fbld
xor
ja
sbb
shll
pop
outsb
ret
das
inc
pushf
xchg
xchg
testb
xchg
or
cmp
or
lret
mov
in
adc
and
mov
hlt
xor
adc
xchg
xor
std
ljmp
lret
fldcw
cltd
xchg
iret
fadd
mov
cwtl
pop
cwtl
sub
jnp
lea
mov
jnp
lret
lret
movsb
mov
loope
adc
add
inc
or
daa
xor
sbb
sbb
mov
adc
notl
out
jno
inc
cltd
dec
js
jae
loop
sti
cmp
cmpsb
and
cmp
mov
sub
pop
idivl
les
sbb
mov
mov
or
fsub
add
negl
adc
test
int3
shl
mov
into
lock
push
jbe
iret
or
fcomps
ljmp
mov
imul
cmp
push
roll
test
adc
lea
lcall
sbb
pop
les
and
sub
cmp
push
mov
or
inc
es
jno
mov
ret
dec
sbb
pop
rcrl
out
mov
or
adc
sbb
pop
and
dec
mov
adc
dec
pop
aad
imul
les
sub
jo
mov
sbb
mov
add
sub
pop
pusha
push
mov
out
push
icebp
lods
push
push
imul
ja
mov
test
jmp
xlat
add
pop
in
jb
shl
scas
stos
mov
push
add
pop
lds
jmp
out
push
lods
cmp
bound
test
fnstenv
int
cli
loopne
clc
repnz
aaa
dec
and
dec
cs
fwait
jmp
popf
fcmovnb
popa
or
pop
xchg
inc
sahf
stos
out
cmp
pop
pop
mov
sub
test
into
fwait
cmp
insb
sbb
daa
or
add
adc
pop
rcr
shrl
addb
xor
cmp
cwtl
mov
test
sub
fs
out
cwtl
mov
and
adc
fldt
and
repz
clc
mov
xor
ficoms
dec
ficomps
aaa
popa
rcr
push
mov
add
out
daa
std
mov
aad
sub
inc
in
xchg
cmp
add
in
dec
adc
xor
bound
aam
repnz
ja
fwait
add
fbld
pop
shlb
jo
dec
sbb
add
jne
jbe
out
lcall
jl
filds
push
lret
inc
mov
fadds
mov
movb
je
stos
push
xchg
ja
push
andb
out
mov
add
sub
cmc
or
repnz
or
aas
imul
fadds
pop
inc
pop
inc
adc
cmpsb
jge
add
stos
inc
outsb
add
or
add
stc
addr16
adc
fst
xor
inc
mov
lock
push
mov
jl
jne
imul
add
int3
imul
or
sbb
push
mov
loope
mov
dec
pop
mov
lret
adc
mov
in
sbb
filds
nop
inc
add
push
lcall
adc
jae
loope
push
xor
repz
pop
and
mov
addb
xchg
mov
dec
ds
xchg
mov
sahf
lods
mov
push
mov
bound
in
loope
int3
cmc
inc
dec
jp
pusha
mov
ljmp
mov
inc
mov
sahf
cwtl
clc
sub
ficompl
lret
push
xchg
aas
repz
lret
clc
jne
les
sub
jne
enter
inc
icebp
xor
xchg
sub
mov
xchg
lock
and
adcl
mov
push
and
fsubs
mov
jne
psllq
xchg
outsl
cs
adcb
out
mov
lds
int
pop
add
scas
popa
cmpsl
rolb
cmp
loop
inc
stos
lret
or
adcl
jb
out
push
mov
sahf
mov
mov
or
int3
fisubrs
aam
and
sbb
subl
dec
cld
movsb
and
cmc
hlt
sahf
cmp
fidivs
inc
pop
pop
jmp
test
test
ret
test
enter
push
push
dec
popf
pushf
test
push
daa
ror
in
xor
sbb
les
pop
dec
nop
daa
sbb
stc
stos
int3
cmp
cmp
sbb
inc
push
js
leave
popf
jae
jge
fwait
repnz
test
or
xor
lds
mov
pop
and
xor
push
jbe
sahf
mov
and
xor
loope
hlt
pusha
cwtl
inc
inc
pop
inc
pop
sub
add
shll
jle
inc
jecxz
push
aas
dec
popa
daa
cmp
insl
mov
mov
mov
and
push
fstpt
xchg
mov
js
sub
jl
mov
cld
pop
dec
adc
or
orl
in
sub
repz
jno
into
cmp
mov
mov
lcall
clc
pop
cmp
mov
mov
xchg
sbb
out
lret
jb
xorl
mov
lret
ret
loopne
data16
sub
mov
ss
lcall
sbbb
jno
sub
add
mov
stc
scas
fwait
mov
jo
orl
inc
push
inc
push
push
adc
pop
dec
mov
mov
sbb
and
cmpsl
pop
mov
test
jge
xor
xor
sub
cmpsl
mov
mov
sub
bound
xchg
cmp
or
aaa
mov
jno
push
mov
scas
sbb
bound
pop
jns
outsl
inc
fsubrs
jmp
sarb
mull
sub
xor
and
mov
in
cmp
insl
outsl
scas
mov
xor
mov
cmp
fldcw
loope
int
jnp
enter
mov
pushf
subb
mov
je
sbb
lret
arpl
xchg
adc
fidivrl
aas
dec
pusha
sbb
add
icebp
dec
push
xchg
add
jae
aas
clts
sbb
and
lahf
jb
popa
aad
xorps
push
cmp
inc
in
fmulp
jl
push
pop
push
pop
mov
sarw
mov
pop
push
clc
inc
imull
or
mov
cltd
cmp
adc
xchg
xorb
hlt
dec
mov
data16
outsb
cmp
pop
iret
ja
frstor
aas
xchg
loop
bound
dec
fwait
and
lcall
cmc
fsubr
mov
fcom
pop
push
sbb
lods
fistpl
sbb
adc
iret
popa
in
das
mov
int3
ret
sub
cmp
push
xchg
fbld
shl
aaa
jg
fnstsw
nop
xor
lret
test
inc
jmp
dec
daa
pop
daa
and
push
jle
mov
add
sub
adc
xchg
cmp
dec
adc
and
mov
repz
and
icebp
das
push
inc
and
dec
insl
addb
sbb
jmp
cwtl
vpsubsw
shrl
arpl
bound
pop
lcall
mov
ja
push
sub
mov
repnz
xchg
inc
mov
mov
jb
pop
orb
sbb
mov
xchg
mov
pusha
pop
and
fldl
shr
cmp
out
or
fwait
and
sbb
fmuls
sub
mov
xlat
or
imulb
mov
jle
gs
je
test
mov
ret
mov
or
sub
add
loopne
mov
xchg
sbb
loop
lea
cmp
in
nop
cmpsb
lret
pop
sbb
roll
fldcw
scas
jns
ds
jge
aam
push
inc
mov
push
shl
jge
popa
xchg
or
xchg
shlb
out
es
xchg
sbbb
sub
pop
pop
or
adc
jns
int
test
sbb
sub
pop
dec
or
inc
das
cmc
out
popa
fadds
dec
or
xchg
stc
sbbb
loope
rorl
int3
ljmp
push
fldl
std
std
aas
arpl
pusha
xorl
inc
push
loope
sbbb
jo
pop
and
pop
sbb
cmp
int
outsb
rcl
cmpsl
xor
push
add
cmp
sub
pop
mov
cmp
mov
aam
or
fdivs
mov
sub
dec
pop
outsl
cmpsb
or
jns
sahf
jl
into
cmp
mov
jg
mov
inc
je
int
mov
mov
in
pop
xchg
inc
cltd
ret
shll
imul
rcll
in
fisubrl
inc
stc
mov
push
in
mov
jmp
cmp
adc
mov
lds
movsl
push
stos
sarl
ds
sbb
cmp
clc
xchg
mov
stos
sti
ds
in
mov
pop
mov
pop
push
sub
xchg
aad
icebp
in
pop
inc
cmpb
push
jbe
cltd
test
pop
rorl
dec
xchg
add
dec
ficomps
iret
les
mov
aam
and
jle
pop
loop
sbb
jns
inc
fisubrs
xor
fsts
push
call
mov
out
jge
inc
inc
out
or
cmpl
lds
or
notl
lods
adc
je
inc
fadds
ja
aam
icebp
xor
jp
in
add
mov
scas
or
mov
lods
dec
loop
push
rcl
mov
mov
aaa
push
mov
repz
testl
adc
sub
sub
arpl
lret
jno
jecxz
scas
fs
pop
mov
and
out
loop
and
lret
xlat
inc
xor
or
add
cld
lcall
test
and
mov
cld
fisttps
icebp
inc
fcmovb
jnp
cmp
adc
inc
lds
push
xor
mov
fstpt
orl
mov
pushf
mov
testb
rcrl
pop
imul
add
cmc
sub
sub
fwait
call
push
mov
je
es
cli
mov
rclb
jle
mov
stc
mov
rcrl
in
xor
jns
mulb
addr16
jb
mov
sbb
push
cld
xchg
or
or
mov
mov
adc
aam
or
inc
xor
rclb
in
pop
push
add
mov
jae
inc
dec
ficoms
xlat
scas
adc
rep
push
lret
out
loopne
jne
mov
imul
fsubrl
mov
push
mov
cs
xor
cwtl
xor
test
movsb
int
fwait
pop
call
push
rorl
stos
movsb
add
pop
push
popf
lock
out
int3
std
out
xlat
hlt
das
sbb
inc
popa
rorb
sbb
dec
or
out
out
mov
rorl
mov
arpl
push
and
clc
das
add
movsb
adc
movsl
inc
jl,pn
cmpsb
lcall
fisubrl
jecxz
addl
addr16
out
sbb
test
ss
and
sbb
lret
movsb
pop
int3
cli
and
lock
imul
lret
sub
mov
ret
lcall
outsl
and
lahf
icebp
push
xor
clc
xchg
jg
xor
mov
pop
xchg
adc
or
pop
gs
xor
lcall
sbb
mov
ds
pushf
mov
stc
fldt
lods
push
mov
push
insl
mov
cmpsb
loop
out
and
ds
pop
enter
adc
inc
cmpsl
nop
imulb
cmpsb
adc
add
nop
je
fnstenv
mov
mov
mov
pop
xchg
pop
and
clc
movsl
adc
loop
push
dec
sub
ljmp
inc
or
cmp
fs
mov
ret
inc
repnz
rcl
mov
push
dec
popf
lds
xchg
ss
ljmp
fistpl
jb
adc
movsb
mov
sub
lods
imul
xor
stos
dec
mov
and
or
jns
mov
push
inc
lcall
imul
fwait
dec
xchg
jg
movsb
movsl
push
cltd
repnz
pop
and
out
jbe
pop
mov
aaa
jp
push
mov
cmp
push
lahf
call
mul
int
dec
inc
mov
jge
dec
xchg
scas
push
out
add
sbb
mov
in
mov
cltd
and
hlt
jmp
fwait
pop
mov
cmp
lods
dec
dec
iret
dec
mov
ret
test
enter
stc
stos
andl
xchg
dec
test
mov
std
inc
or
pop
out
out
bound
push
and
mov
jb
lea
pop
out
andl
loop
clc
mov
les
popa
ficoms
cmp
movsl
movsl
in
pop
xor
jge
and
xor
sub
insl
jecxz
lods
scas
adc
or
ds
jae
sbb
das
and
das
dec
test
ss
imul
cmc
mov
mov
inc
outsl
inc
push
scas
and
imul
rolb
adc
test
mov
sbb
adc
mov
fwait
and
xchg
cmp
popf
adc
dec
pop
jecxz
push
jecxz
mov
or
xchg
jo
dec
pop
fidivl
push
cmp
pop
nop
cmp
pop
mov
insb
pop
push
cltd
mov
cmp
push
sub
pop
loope
pop
sti
aas
mov
div
xchg
std
pushf
aaa
mov
adc
into
pop
xchg
aaa
mov
jge
jbe
xchg
popf
scas
pop
sub
lret
fs
adc
scas
or
ret
jae
lret
xor
icebp
xlat
fs
mov
sbb
xchg
adc
sub
jl
dec
js
loope
dec
push
sarl
xchg
cmp
xor
sti
popa
cmp
pop
add
jp
insb
push
xchg
faddl
pop
gs
cmp
imul
mov
fldenv
repnz
cmp
mov
sub
ss
mov
cmp
orl
sbb
mov
movsl
rclb
xchg
xchg
ret
frstor
js
clc
insl
add
shlb
inc
fidivrl
cwtl
mov
in
mov
test
or
cwtl
inc
cmpsb
in
andb
loope
lods
loope
in
push
sti
or
cli
iret
dec
fcompl
jb
mov
jno
out
out
mov
leave
xchg
mov
push
data16
ss
in
bound
sbb
dec
cli
xorb
mov
fisttpll
mov
pushf
lcall
shrl
cli
lds
or
xchg
inc
outsl
xchg
adc
sub
cmp
inc
add
xor
mov
cmp
sar
push
inc
popf
cmc
lea
push
test
xchg
out
imul
and
lahf
fdivl
xorb
lret
xchg
les
cmc
push
aaa
insb
inc
jmp
mov
push
mov
enter
leave
shll
je
mov
js
mov
mov
push
lea
push
add
clc
push
cld
mov
sbb
stos
push
daa
push
mov
enter
inc
fwait
not
sar
jecxz
adc
loope
sti
jnp
cmpsb
sbbl
je
adc
mov
in
fsts
mov
jecxz
sbbl
mov
pop
scas
aam
and
es
mov
into
scas
mov
popl
andb
movsb
mov
fistpll
out
xor
inc
repz
inc
inc
test
jecxz
lea
jp
rcrb
adc
insb
out
dec
and
leave
popf
sbb
jmp
sub
jno
xchg
xchg
sbb
jo
sub
cmc
movsl
add
xchg
mov
push
jl
pop
aaa
xor
dec
push
in
repz
pop
sahf
xchg
push
mov
cmc
xlat
dec
adc
jnp
lar
xor
popa
inc
negl
lock
mov
fistpl
ficoms
aad
inc
rol
aad
push
rorb
lods
and
add
ljmp
or
aad
dec
cltd
aaa
push
mov
mov
out
int3
adc
xchg
xor
cwtl
out
mov
mov
push
movsl
popf
rolb
sub
jb
ficoml
cmp
ds
lock
inc
cs
sbb
subl
clc
sarl
int
and
dec
add
jmp
or
mov
xchg
cltd
cwtl
xor
jno
ljmp
cmp
xchg
mov
ds
xor
mov
pop
sbb
lock
sub
mov
call
xor
sbb
nop
fs
pop
bound
repz
add
adc
jecxz
ja
orb
stos
lcall
adc
add
popf
mov
mov
in
sbb
mov
in
jb
int3
sbb
xor
cmp
fwait
mov
push
je
lock
sub
fdivp
jg
sbb
stos
and
dec
das
inc
loope
ret
or
cmp
mov
jae
jno
into
out
mov
ffreep
push
iret
adc
jbe
jecxz
pusha
inc
add
fsubs
push
addb
dec
nop
dec
mov
pushl
addr16
or
xor
mov
faddl
sarb
jge
ja
addr16
std
add
jns
xor
fdivrp
sbb
sbb
dec
mov
ret
aaa
adc
xchg
leave
push
push
js
mov
outsb
push
imul
mov
fucom
aam
repz
out
dec
add
jge
or
push
divl
fs
mov
fst
imull
clc
add
and
lods
mov
jno
mov
and
std
mov
rcrb
fsubl
mov
es
aas
adc
lock
dec
xchg
pop
jae
pop
jbe
fs
xor
jle
fistpl
in
push
int
pop
and
cs
mov
or
cmc
cmp
in
cmpsb
sub
push
and
ljmp
jp
lret
ret
pop
fiaddl
clc
lds
out
das
jno
insb
shll
add
xor
push
and
jnp
stos
dec
outsb
inc
dec
imull
rcrb
arpl
pop
sahf
cltd
sti
add
pop
mov
pop
dec
out
rclb
jae
fwait
movsb
popf
or
mov
or
push
mov
aad
and
in
shrb
sbb
xchg
push
dec
pop
cli
sti
sbb
jb
popa
sarb
xchg
repz
or
fdivl
scas
imul
and
fdivl
shrl
pop
push
adc
mov
push
push
push
andl
and
lds
jp
or
ljmp
into
or
mov
cmc
sub
push
mov
cmp
aaa
gs
sbb
cld
jecxz
jnp
es
and
pop
add
push
pop
push
or
into
loope
enter
ret
movsb
mov
roll
leave
out
jecxz
lods
lods
mov
int
bound
dec
mov
jne
enter
xchg
jg
xchg
sub
sub
sub
jo
les
cmp
dec
cmp
push
xchg
decl
arpl
cmp
dec
daa
test
pop
stos
xor
cmpsl
cwtl
xchg
in
cmp
xchg
cmp
push
imul
cmp
cmpsl
push
sub
cmp
inc
inc
mov
mov
test
loopne
xchg
pushf
jmp
mov
mov
xchg
imul
inc
imul
imul
lods
mov
or
sbbb
mov
inc
nop
lcall
popf
pop
or
pop
xchg
jo
aad
jb
and
jge
iret
outsb
sub
jp
xor
jo
xchg
fdiv
andl
es
sahf
mov
sbb
mov
or
push
inc
xor
push
dec
jae
or
sub
ret
out
push
test
fsubrs
mov
lock
fildl
xchg
inc
ljmp
imul
push
mov
ficoms
aad
popa
sarb
add
das
push
jge
les
push
pusha
xchg
mov
pop
movsw
push
mov
enter
imul
jg
push
jb
sub
scas
xor
sahf
sub
cmp
push
neg
popf
ret
lcall
lods
dec
pop
into
adc
sbb
je
or
loopne
aas
testl
sbb
and
mov
test
movl
fldenv
sbb
aaa
xchg
leave
dec
sub
add
push
push
mov
rolb
lods
icebp
cwtl
dec
cmpl
cmp
push
cmp
cmp
fisubrs
push
rorl
lcall
dec
es
ret
push
into
mov
xor
rorl
mov
push
aas
inc
icebp
mov
iret
dec
loop
idivb
sbb
inc
mov
adc
nop
sbb
into
shrl
push
scas
clc
ret
enter
mov
add
mov
inc
outsb
dec
call
out
jne
or
lea
mov
loopne
xor
adc
sub
pop
jge
out
imul
insl
xchg
mov
fidivrs
pop
sub
or
sub
xchg
in
sub
xchg
pop
sub
mov
mov
add
and
clc
test
popa
mov
pushf
add
int
sbb
mov
or
in
jns
enter
inc
xorb
xor
adc
cmp
push
add
jmp
sbb
and
cmp
call
push
and
cmpsl
repz
xor
pop
xorl
psllw
popf
xchg
stos
jae
pop
mov
stos
mov
repz
xchg
jo
jnp
insl
pop
cltd
xchg
adc
add
movsl
jl
jl
ds
mov
sbb
movsb
in
push
jno
jb
in
lock
pop
outsl
das
pop
mov
push
pushf
movsb
or
mov
int3
push
lcall
xchg
push
sub
into
out
lock
mov
push
add
clc
test
xchg
fadd
pop
mov
push
sub
jne
outsl
mov
sarb
out
jno
inc
push
bound
cmc
pop
std
dec
subb
pop
mov
and
sbb
lret
sbb
pop
and
addr16
enter
lock
push
lahf
out
sub
jle
mulb
push
cli
push
pop
imul
loop
mov
scas
mov
pop
pop
sub
js
cmp
push
push
in
sti
aad
aam
sub
mov
test
jmp
cmp
jb
jmp
push
jle
mov
jle
ror
dec
xchg
out
mov
leave
insb
push
dec
sub
mov
add
inc
cs
cmpb
dec
pop
and
fdivs
scas
out
je
in
in
int
adc
mov
sub
sbb
sti
jae
adc
out
mov
rcll
adc
push
xchg
inc
insb
out
xchg
sub
out
test
sub
stc
jmp
callw
and
insb
fsin
xchg
adc
dec
xchg
stos
imul
xchg
mov
inc
neg
lods
pop
xor
inc
ret
push
dec
icebp
add
jnp
movb
pop
push
adc
aam
push
clc
fcoms
pop
cmpsb
out
add
add
mov
adc
pop
rorb
inc
inc
jmp
stos
jp
nop
fwait
cld
add
test
add
mov
rorb
sub
jns
inc
add
jns
add
add
mov
sbb
mov
or
adc
call
das
push
xor
enter
clc
sub
cmp
sbb
cmp
std
mov
dec
enter
jle
jbe
mov
mov
call
fwait
pop
negb
mov
mov
dec
mov
js
sbb
inc
orb
mov
les
lods
push
inc
mov
push
jecxz
mov
int
mov
call
pusha
or
or
ret
mov
rcrb
add
sti
out
mov
add
clc
lods
mov
push
push
xor
fadds
xor
sar
push
mov
hlt
add
mov
and
cmpsl
leave
xchg
pause
jp
imul
inc
sub
insl
sub
mov
cmpsb
xor
fnstenv
fistps
inc
add
pop
cmp
out
rcrl
out
shrl
inc
mov
int
fwait
into
jg
fst
aad
imul
pop
enter
les
sbb
imul
inc
out
mov
add
nop
push
mov
pop
and
push
in
notl
sub
ja
inc
popa
mov
adc
pop
mov
push
add
xlat
pop
fmuls
xchg
pop
mov
sbb
fidivrs
aam
iret
insb
push
inc
mov
pop
push
or
fsubs
mov
jno
and
push
add
xchg
daa
repz
imul
xorl
jmp
iret
xchg
cmp
insl
or
nop
cld
ficoml
sti
lahf
xchg
out
aaa
shl
ja
pop
cmp
add
mov
into
ret
mov
scas
adc
sbb
pop
jnp
add
xor
jp
and
test
cmp
lds
sub
fmull
sbb
cmpsl
add
cmc
lds
pushl
push
into
and
inc
mov
lods
mov
add
xchg
aad
out
push
sbb
test
movsb
repnz
mov
xchg
pushf
imul
mov
and
xchg
fiadds
je
jbe
enter
fnstenv
jbe
mov
mov
stos
in
orb
dec
stc
or
jge
int
popf
sbb
int
punpckldq
cmp
inc
call
int3
and
int
in
and
add
pusha
push
mov
jecxz
mov
cld
add
das
lcall
xchg
jns
add
xor
jl
std
movsb
ror
shll
mov
pushf
xchg
mov
push
shlb
adc
sub
sub
pop
rcrb
adc
mov
adc
sub
jmp
dec
imul
or
pop
scas
adcb
jmp
jb
sarb
pop
arpl
les
inc
mov
adc
jg
jmp
insb
stos
cmovl
adc
into
sarb
shrl
loope
jmp
or
xor
sbb
fsubs
das
popf
cmp
dec
lods
sti
aad
mov
rcr
xchg
jno
adc
inc
pop
mov
divb
dec
cmc
cmp
and
jb
lods
mov
out
inc
popf
enter
inc
out
imul
xor
loop
push
test
inc
add
shlb
xchg
jns
xor
pop
idivb
adc
mov
mov
popl
ja
mov
xlat
je
xor
imul
call
cmpl
mov
mov
scas
test
icebp
xchg
push
mov
mov
mov
aad
outsb
push
arpl
mov
cltd
jbe
mov
push
lds
inc
xor
lods
jae
jae
cld
cmp
xchg
sahf
xchg
push
adc
ja
sbb
les
add
xchg
pop
subb
sbb
cmp
push
movl
lret
hlt
cs
fcompl
in
call
jge
out
daa
addr16
addl
clc
mov
mov
push
cmp
xchg
sbb
jg
fbstp
loope
push
xchg
push
adc
push
lods
xchg
adc
test
faddl
sbb
xor
ja
xchg
int
cmovbe
mov
ret
push
push
lcall
ret
pop
jnp
cmp
mov
fldl
or
data16
dec
ret
or
mov
dec
mov
xchg
xchg
std
xchg
and
rcll
shlb
xlat
xchg
stos
lock
lcall
xchg
rolb
dec
jo
incl
mov
jp
clc
mov
fnstcw
stos
jl
cmpsl
adcb
pop
pop
mov
pop
and
rolb
inc
insb
popa
mov
loop
cmp
xchg
mull
inc
hlt
sbb
iret
fnstcw
inc
pop
pusha
sbb
loop
mov
les
jb
push
xchg
push
es
pop
cli
push
mov
jl
lods
bound
mov
push
mov
fdivrs
inc
mov
xchg
dec
lret
aas
adc
mov
je
push
xchg
fwait
mov
les
pop
mov
jecxz
fs
test
repnz
xor
mov
push
fwait
mov
roll
scas
divb
in
dec
dec
jno
sbb
pop
add
adc
mov
out
dec
mov
imul
push
mov
nop
notl
subb
mov
xchg
mov
ret
leave
cmp
fidivrs
movsl
jg
scas
inc
dec
jmp
test
scas
xor
pop
jbe
cltd
mov
pop
jg
pushf
ds
xchg
lock
out
mov
daa
aaa
jle
or
cli
jmp
arpl
and
push
mov
sbb
insl
xor
js
dec
popf
pop
push
cmc
pop
cmp
adc
add
pop
ret
ror
adc
gs
dec
fsubrl
clc
aam
adc
into
mov
in
lds
cmpsb
fistpl
imul
mov
xor
pop
inc
arpl
inc
sbb
hlt
dec
pop
inc
xchg
imul
jmp
testb
cmp
in
out
pop
inc
inc
stc
movb
ja
sub
or
in
sbb
xorl
and
xor
test
loop
cwtl
xor
in
jno
or
daa
and
and
push
mov
shlb
test
xorl
dec
push
out
les
mov
mov
sbb
push
loop
lahf
or
mov
stc
rcr
pop
mov
mov
jbe
push
lock
sbb
into
xchg
add
xor
xchg
movsl
and
and
lea
dec
out
pop
jg
loop
inc
mov
in
jne
cmp
push
push
pop
enter
push
jno
out
stos
dec
push
pop
jle
sub
popf
int3
and
mov
shll
xor
dec
adc
sub
sub
nop
xchg
jbe
xor
xor
in
jecxz
addr16
pop
xchg
pop
adc
je
hlt
jl
ds
aas
push
push
sub
daa
inc
cltd
pusha
push
das
mov
mov
bnd
addb
xor
les
dec
repz
idivl
mov
jno
movsl
sahf
jns
pop
dec
jp
sbb
fiaddl
lock
xchg
out
mov
or
std
xchg
notl
adc
and
cmp
aam
sub
inc
jmp
ret
scas
icebp
sbb
push
pop
popa
cmp
ss
insb
sub
ja
inc
mov
clc
mov
imul
into
inc
sarb
push
xchg
xor
push
fisubs
out
daa
or
inc
adc
test
jb
and
mov
fildll
in
mov
imul
add
cld
jbe
jno
mov
fldl
lods
sub
cmp
je
adc
shlb
rolb
shr
movsb
add
mov
xchg
int
jmp
mov
push
add
pop
or
jb
sbb
or
clc
stc
sbb
call
mov
test
je
dec
jno
arpl
cmp
mov
int3
add
int
icebp
xor
mov
fwait
mov
pop
mov
add
mov
cwtl
sbb
ds
fwait
mov
inc
clc
sub
xor
iret
loop
lcall
sbb
enter
pop
adc
pop
popa
loop
mov
jb
mov
xchg
jnp
addr16
nop
cmp
lret
cmpsb
sbb
test
stos
and
sbb
and
mov
xorb
das
mov
in
leave
pop
mov
add
inc
jbe
fs
loopne
add
push
dec
dec
sub
int3
mov
stos
sahf
push
shlb
inc
pop
adc
adc
mov
in
ja
inc
sub
lcall
scas
lods
or
leave
mov
clc
cmp
push
fs
mov
xorb
xor
inc
lret
ss
cmpsb
pop
cltd
lock
pop
mov
dec
into
xor
inc
lods
dec
sub
lds
repz
dec
mov
cmp
or
mov
aam
push
mov
mov
int
add
mov
scas
mov
nop
push
fidivrs
adc
adc
jno
mov
mov
push
push
aaa
insl
repnz
xchg
enter
push
mov
jg
sahf
mov
cmp
stc
pusha
or
add
dec
mov
clc
mov
or
mov
mov
les
dec
adc
pop
mov
popf
jae
or
hlt
sbb
inc
sbb
mov
push
incl
imul
in
mov
inc
inc
sahf
jmp
icebp
jmp
jmp
mov
lcall
in
push
insl
jg
in
je
loope
sti
es
out
bound
mov
pop
xchg
fdivp
std
push
insb
lret
adc
and
shl
push
nop
add
sbb
aad
pop
enter
outsb
iret
movsl
and
inc
lcall
push
mov
adc
int3
es
addr16
movsl
faddp
incl
push
mov
imul
ljmp
push
and
imul
cmpsl
or
cli
add
or
pop
popf
pop
ja
int
insb
jno
jb
push
and
push
les
scas
repz
cwtl
dec
xlat
mov
dec
bswap
inc
pop
xchg
sbb
lret
xlat
ret
sbb
les
mov
pop
cld
mov
test
pmuludq
mov
mov
cmp
fstpl
scas
flds
pusha
in
inc
sub
jo
aad
dec
mov
inc
in
repz
mov
hlt
xor
js
cmpl
add
rol
pop
ret
mov
cld
fsubl
and
jge
shlb
and
sub
stc
mov
xchg
push
pop
loope
jl
pop
leave
jbe
add
cs
roll
ficomps
push
pushf
shl
dec
imul
ds
jno
ret
push
cmp
in
and
or
sbb
out
push
xor
and
not
jl
lcall
movsb
pop
loopne
das
bound
pop
lods
mov
pop
ret
loopne
lock
notl
and
imul
jno
cmpsl
xchg
xchg
adc
cvtpi2ps
jecxz
scas
loop
mov
lds
sub
sbb
out
add
add
scas
movsb
addr16
ficoms
insl
int
pushf
cmp
and
dec
cmp
imulb
jg
dec
jle
push
mov
shrb
xor
inc
outsl
add
out
mov
add
cld
mov
cmp
sbb
ja
mov
add
push
cmp
sub
aaa
inc
push
mov
rcll
sahf
xchg
inc
mov
cmpsb
pop
jae
mov
add
sub
mov
jns
pop
push
xor
loope
roll
jmp
test
nop
aad
lahf
and
jbe
iret
xor
jge
or
repnz
arpl
lock
push
push
inc
pushf
movsl
lahf
repnz
test
call
std
and
xlat
lret
cmp
dec
loopne
adc
cld
and
shl
jb
mov
daa
sub
xor
lcall
ljmp
dec
pop
ss
cmp
fisubrs
mov
inc
cwtl
cmp
out
xor
rorl
lret
loop
mov
xor
mov
pop
std
sbb
popf
stos
popf
mov
outsl
ja
xlat
inc
fsts
mov
mov
movsb
arpl
mov
push
sub
xor
scas
mov
push
rcll
out
sbb
dec
xchg
imul
mov
xor
rorl
jl
mov
int3
dec
xchg
sub
sbb
add
cmp
jg
sub
add
sub
lret
cmc
jp
push
aaa
int3
cmp
imul
lcall
mulb
dec
stc
push
push
es
xor
test
and
dec
ss
mov
push
gs
fwait
test
cmpsb
xorb
sub
mov
jl
out
sub
lock
stc
adc
xor
xchg
movsb
push
jae
push
lods
inc
lock
lock
jmp
inc
sub
mov
push
add
dec
jno
imul
paddb
pop
push
js
sub
mov
movsb
call
push
adc
dec
hlt
mov
xor
mov
cmpb
bndldx
jb
in
jb
rcr
xchg
cmpsl
cmp
aaa
inc
push
cmpsb
jbe
mov
and
pop
sub
popf
dec
lock
cmp
jns
xchg
loop
lret
int3
int
repz
xchg
mov
subb
mov
stc
aam
les
loope
inc
or
mov
hlt
mov
mov
mov
pop
add
rorb
jl
out
adcb
push
xor
xor
out
mov
mov
lahf
sub
mov
in
jle
pop
nop
mov
jle
lea
stos
jnp
pusha
jo,pn
and
div
fisubrl
arpl
ret
and
cmp
mov
mov
mov
insb
push
fwait
pop
shll
mov
mov
add
inc
sub
add
in
mov
mov
loop
aad
mov
sahf
arpl
or
mov
repz
push
push
and
and
push
popf
into
jnp
cli
jo
aaa
aas
leave
push
mov
jle
jmp
int
add
pop
cmp
jbe
mov
cmp
lea
jmp
aaa
rcl
out
cld
insb
sbb
into
inc
mov
repnz
inc
push
ja
aas
lret
aaa
push
adc
sti
push
push
jg
sbb
scas
and
dec
cmp
dec
fucomip
xor
sahf
xchg
ljmp
xor
mov
pop
ss
subl
dec
negb
lods
jl
fsubl
jae
xchg
jecxz
cmp
xlat
mov
pop
pop
daa
mov
ret
mov
adc
jns
inc
and
push
ret
js
adc
pop
add
or
lods
mov
pop
loopne
push
movsb
or
pop
fbld
mov
loop
clc
out
je
insb
mov
adc
jl
sub
in
icebp
dec
ret
and
icebp
pop
int3
pop
addb
sub
lods
add
cmp
jae
cmp
mov
sbb
and
inc
pop
int
sub
push
mov
inc
neg
pushf
stc
fldcw
push
sti
mov
mov
sub
xchg
ljmp
and
cs
or
push
inc
das
imul
mov
sub
jge
adc
ret
imul
dec
mov
mov
inc
mov
mov
sub
pop
test
push
adc
in
xchg
lret
xchg
pushf
pop
dec
add
jecxz
lds
fisubrs
sbb
aam
push
mov
xchg
dec
push
iret
lcall
ret
insb
fisttpl
ret
xor
mov
cmp
adc
cmp
pop
cli
xchg
sbb
stos
loope
enter
mov
in
inc
xchg
cmpsl
push
mov
mov
enter
sahf
pop
in
push
or
cmp
jb
pop
fsub
mov
push
and
enter
push
std
lret
cmp
aaa
insb
or
cmp
testb
push
xchg
add
cmp
mov
cwtl
push
and
jle
cpuid
mov
ss
insb
xchg
popa
dec
pop
hlt
divb
lahf
sbb
jne
stos
aam
inc
lods
xor
lods
dec
push
ljmp
lods
sub
and
repz
aam
aam
pusha
fsubs
sahf
push
bound
cmp
mov
mov
push
mov
push
xor
inc
pop
push
push
xchg
dec
ret
add
jge
mov
push
or
sub
mov
das
in
xchg
rcl
test
cld
sbb
push
loop
mov
nop
adc
inc
ss
sbb
mov
inc
outsl
cs
clc
mov
call
lret
aad
int3
out
mov
rorl
insl
pop
mov
xor
jno
test
sbb
inc
insl
imul
cmp
ret
dec
out
push
mov
or
lcall
dec
in
xor
inc
lds
incl
pop
je
or
adc
in
sub
les
mov
cmpl
xchg
xor
push
test
inc
push
xlat
or
pop
adc
adc
fs
shlb
jmp
adc
mov
sub
push
cs
dec
shll
pushf
mov
rol
fsub
ror
inc
jg
jae
push
push
or
xchg
js
icebp
repz
or
ror
xchg
push
mov
mov
pop
mov
push
fsubs
mov
inc
faddp
mov
pop
xchg
loopne
shrb
cld
push
sub
xchg
mov
sub
clc
cmp
das
push
arpl
jne
dec
cmp
mov
xor
sub
mov
xchg
xlat
ret
out
mov
into
movsb
rorl
jecxz
out
addl
jbe
imul
sbb
sub
add
adc
mov
add
int
xchg
dec
pop
and
fsubrs
ficoms
jbe
stos
lcall
inc
mov
mov
jle
lea
fadds
mov
cmp
or
sbb
xchg
push
push
loop
mov
movsl
add
pop
and
sub
test
sub
push
pop
xchg
add
inc
adc
cmp
add
lods
xchg
lock
inc
jp
popf
push
dec
xor
clc
jbe
jl
ror
cwtl
jnp
or
out
adc
cmp
flds
and
addr16
lods
xchg
fists
aad
leave
push
lods
jecxz
sub
inc
vpcomw
fs
mov
lods
fucom
mov
xchg
outsl
dec
mov
cmp
jl
clc
mov
push
scas
mov
sahf
pop
mov
sub
andl
push
int3
cmp
jle
repnz
bnd
leave
sahf
es
aas
mov
aad
in
sbb
mov
inc
adc
repnz
dec
lods
daa
out
pop
sub
add
cmp
xchg
xchg
sbb
sbbb
fcmovnbe
xor
xchg
loopne
les
pop
in
sbb
and
ja
les
pop
sub
sarb
mull
mov
out
aam
mov
shl
adc
subb
add
enter
arpl
popf
pop
sub
int
cwtl
mov
sbb
addr16
sub
and
mov
mov
adc
sub
sub
loope
pop
lods
pop
jo
ja
cmp
and
cmp
ds
into
lods
movsb
mov
in
mov
cli
fidivs
sahf
mov
sbb
mov
jno
enter
je
or
dec
mov
scas
xor
pop
jmp
insl
iret
jnp
hlt
and
out
jmp
out
inc
mov
xorb
jl
test
push
les
test
incb
push
cmpsl
shlb
xchg
inc
rcrl
cmpl
sti
push
hlt
pop
scas
rcrb
mov
sbb
cltd
sub
or
xor
notl
fidivl
jb
stos
jecxz
cmpsl
daa
orl
loopne
incl
mov
arpl
cmpsl
out
push
fstl
add
xchg
adcb
loope
inc
pop
inc
push
test
and
mov
inc
scas
push
mov
cmpsb
fcoms
xlat
mov
mov
sub
xlat
push
icebp
data16
loopne
mov
mov
adc
mov
popa
adc
sbb
aas
adc
push
dec
fists
ss
adc
or
xbegin
aad
popf
jg
pop
mov
iret
add
xor
cmpsb
xchg
scas
loop
jmp
aad
mov
mov
fidivrs
icebp
stos
in
mov
adc
dec
jb
adc
fcoms
jl
xchg
inc
jg
inc
xchg
jecxz
cmp
jl
push
or
arpl
push
fmuls
cwtl
push
ret
mov
inc
out
pop
daa
pop
scas
addr16
aaa
sbb
out
mov
inc
rolb
daa
jg
int
enter
pop
and
fdivs
sahf
fisubl
push
in
add
xchg
xor
fdivrl
out
lret
fdivrs
sbb
out
push
push
repz
xchg
insl
and
gs
aas
enter
cmp
mov
jo
jbe
jp
lock
or
mov
cmp
mov
std
push
lahf
cltd
sbb
repnz
roll
lret
mov
fwait
push
test
cli
cmc
out
or
stc
sbb
aad
rorb
adc
add
cmp
ret
mov
xchg
dec
aaa
in
dec
std
ret
test
sarl
dec
ret
cmp
sub
cmp
ss
cmpsb
ds
jp
push
mov
shrl
sub
in
stos
mov
dec
xlat
int
stos
dec
cmp
insl
xor
outsb
ja
push
imul
fstps
shll
mov
insl
push
fdivp
js
pandn
lret
iret
dec
cs
xor
arpl
scas
arpl
aad
or
test
jle
bt
stos
in
js
inc
push
jp
sbb
scas
xor
iret
insl
xchg
xchg
adc
jnp
push
pop
fdivr
inc
mov
movsl
inc
sbb
inc
popa
add
push
xchg
pop
pusha
hlt
sbb
sbb
dec
cld
cmpsb
adc
jl
repnz
ljmp
mov
les
add
and
ret
cli
insl
add
xchg
xor
or
mov
stc
lret
das
shrd
inc
sub
xchg
adc
pop
push
lret
dec
dec
mov
rcr
sub
or
mov
push
pop
jbe
cli
jle
cli
fcoml
xchg
jle
or
ret
sahf
pop
outsl
enter
mov
sahf
iret
add
sbb
cs
cmp
cld
out
jl
test
mov
sub
xchg
stos
dec
repnz
pop
xchg
mov
mov
rcll
js
cmpsl
or
into
or
inc
jbe
ja
inc
ret
push
roll
dec
adc
cs
ds
sbb
cmpsl
push
jbe
hlt
test
sub
sbb
divb
cmp
or
addr16
repnz
and
out
test
mov
cmp
popf
aaa
scas
push
aaa
jl
and
sub
inc
dec
fnstenv
jb
adc
outsb
mov
push
div
and
push
mov
pop
ss
aam
int3
dec
movsl
mov
sub
mov
hlt
ds
in
test
dec
sbb
lds
push
jecxz
and
nop
gs
mov
dec
sbb
in
jo
mov
lahf
daa
adc
dec
and
sub
std
cmp
pushf
and
aam
in
mov
and
pusha
dec
aaa
mov
push
xchg
dec
ret
mov
fbstp
mov
mov
add
dec
int
or
add
or
push
pop
add
imul
lods
sub
and
outsb
pop
cld
fstpl
and
stc
jmp
aad
pop
adc
sbb
fsubs
add
dec
cmc
daa
sbb
and
cmp
jb
fmull
or
inc
std
jp
cmp
aas
shl
cmp
push
clc
jecxz
jle
mov
xor
and
mov
ret
pop
sbb
out
pop
cltd
dec
ja,pt
cmp
inc
fdivrp
lds
sbb
inc
push
fwait
mov
clc
call
insl
mov
iret
jne
dec
or
lds
pop
mov
outsl
lock
pop
or
xor
push
xchg
fs
pop
idivl
xlat
fimuls
stos
push
enter
adc
lret
out
int
lock
popa
mov
ret
shl
add
and
adc
fwait
or
dec
nop
push
shr
mov
gs
adc
aad
insl
aad
rcl
adc
push
ficoms
sarb
fs
mov
popa
and
xor
xchg
mov
cmp
shr
lahf
inc
rorb
inc
mov
xchg
add
cmpsb
sbb
mov
mov
stos
stos
sub
push
mov
push
jo
gs
fcoml
popa
pop
sahf
mov
lods
xor
inc
fmull
cmp
jge
cmp
subb
movl
test
sub
imul
and
js
inc
mov
stos
idivl
pop
dec
or
arpl
sarl
mov
test
jmp
push
ljmp
mov
or
jle
jle
push
xchg
dec
mov
shl
cmpsl
ds
mov
lahf
xchg
ret
insb
in
mov
push
pop
or
test
loopne
fdivs
cs
insl
add
and
lods
adc
xchg
test
mov
xchg
jns
rorl
add
cmp
outsl
sub
xchg
add
daa
std
or
cmp
inc
xor
sub
out
mov
loopne
stc
fisubrl
rolb
xor
movl
or
mov
xlat
sub
cmp
mov
repz
adc
ret
and
adc
xchg
outsb
mov
sahf
inc
jecxz
mov
cmp
aam
das
cmpsl
popa
out
mov
jb
movsl
in
mov
lret
negl
or
inc
out
pop
pop
daa
dec
adc
inc
pop
daa
sub
mov
cmc
fbstp
jb
xchg
inc
cld
cmp
push
push
aad
pop
and
cmp
fwait
dec
jnp
adc
sti
lret
cli
jg
or
inc
push
ret
sarl
incl
das
shlb
inc
mov
dec
mov
inc
outsl
std
push
lret
aam
push
xor
push
test
inc
mov
sbb
cli
rcll
inc
jbe
movups
movsb
jge
mov
insl
jl
shrb
ret
push
push
xchg
sub
sbb
mov
jno
lods
imul
jne
fisttps
pop
dec
push
insl
loope
adc
cs
sub
cmp
push
sbb
pushf
cmpsb
pop
int3
imul
cmp
or
push
push
inc
das
mov
or
mov
push
push
mull
inc
pop
scas
fistpll
inc
out
fadds
stos
push
xor
dec
sub
fstps
push
push
adc
push
sti
adc
cmc
clc
rcrb
jne
ret
adc
lcall
cmc
add
jle
scas
xor
or
xchg
dec
nop
jmp
dec
add
cmp
mov
insl
jnp
sar
push
sbb
aam
ja
rcl
nop
dec
or
fsubrs
js
jnp
into
lods
pop
or
mov
or
adc
pop
mov
sti
dec
jnp
xor
push
jl
incb
jle
or
rcrb
xor
jle
shlb
dec
imul
and
lahf
daa
xchg
mov
fwait
ljmp
or
mov
mulb
mov
or
sbb
cmp
shll
movsb
dec
rep
out
jne
mov
jo
mov
in
and
pop
or
mov
popa
mov
scas
lods
les
fisttpl
out
jne
lock
jno
pusha
in
jle
push
mov
xchg
cmpsl
fisubrl
sbb
or
jbe
getsec
outsl
outsl
mov
mov
add
dec
sub
mov
cltd
mov
loope
push
jo
cld
dec
mov
int3
lret
lods
repnz
and
clc
insl
shl
mov
sbb
adc
ret
fbstp
repnz
out
mov
fldt
and
sbb
adc
xchg
push
ds
stos
xchg
loop
mov
dec
les
push
addr16
js
and
popa
lcall
in
rorl
xorl
inc
loope
xchg
jge
imul
sub
outsb
int
add
xchg
pushf
inc
imulb
mov
lcall
leave
mov
fwait
imul
lods
cmp
lcall
mov
popf
dec
mov
lcall
fldenv
aas
leave
test
mov
inc
pop
push
adcl
pushf
testl
mov
popa
scas
sbb
sahf
pop
push
lahf
lds
fwait
in
jle
js
cmpl
xchg
mov
mov
push
inc
aad
pop
cld
arpl
fcomp
std
mov
xor
or
in
enter
fsubl
ficomps
push
xchg
mov
mov
mov
jmp
jecxz
in
and
cmpsb
xchg
ret
xchg
std
imul
nop
jmp
mov
repnz
inc
scas
ljmp
test
popa
xchg
lret
mov
aam
and
std
fs
jo
push
fists
or
fsubp
jae
or
push
xchg
sub
arpl
test
stos
mov
jb
dec
adc
sbb
sbb
adc
cmp
lods
adc
adc
add
sub
push
jo
nop
add
and
pop
sub
mov
sbbl
sub
cmc
inc
fcomps
pop
sub
xchg
fisubl
sti
rcrb
in
shlb
cmp
sbb
ret
decb
shll
xor
cld
jp
mov
jnp
xchg
inc
pop
jl
pop
mov
mov
mov
mov
into
inc
stc
je
aam
sbb
and
das
out
cmpsb
stc
dec
mov
dec
push
mov
inc
mov
adc
fisubrs
shrl
push
repz
stos
test
cmpl
aas
dec
gs
rcrb
pop
adc
push
inc
cmpsb
mov
daa
jmp
mov
inc
mov
sub
or
movsb
jmp
test
cmpsb
cli
call
pop
sub
and
adc
lods
insb
mov
add
test
ljmp
inc
mov
shl
xchg
arpl
lods
mov
pop
adc
mov
jno
insb
clc
jno
xchg
inc
ss
imul
mov
sbb
ljmp
in
inc
xor
in
jo
inc
jecxz
mov
jp
xlat
fwait
pop
and
ja
clc
add
rorl
movsl
jae
inc
test
xchg
mov
push
cmpb
jl
mov
inc
jbe
mov
lods
pop
adc
push
cmp
adc
cwtl
addb
gs
test
or
adc
fisubs
xchg
out
jecxz
cmpsl
pop
mov
imul
mov
inc
lahf
pop
out
out
shll
rorl
fisttpl
sub
sub
cmp
pop
mov
cwtl
inc
loop
mov
pop
pop
fnstenv
and
rcrl
jb
enter
mov
xor
inc
bound
jb
sarl
add
push
xor
repz
stos
mov
repz
xlat
sbb
push
in
imul
xor
popf
inc
jmp
addr16
lds
pop
sub
in
out
sbb
sub
enter
inc
fcomp
fcomip
mov
jbe
jns
lahf
xlat
test
sbb
icebp
sahf
or
sahf
or
fstpl
xchg
repz
arpl
or
xchg
jb
lods
xchg
push
and
cmp
pop
iret
mov
push
pop
sarb
imul
and
cli
add
mov
out
cmpsl
cs
inc
xchg
cs
dec
xlat
cmp
pop
scas
pop
icebp
dec
fistpl
data16
jno
jl
push
push
ficomps
icebp
pop
dec
subb
in
stos
mov
adc
ja
cltd
push
pop
imul
or
imul
pop
out
xchg
jae
aaa
stos
sahf
in
xchg
or
negl
sub
out
xchg
test
and
adc
sbb
int
xor
aas
dec
or
orl
rclb
xchg
cmpsl
mov
mov
jg
xchg
xor
sbb
push
jbe
inc
out
lcall
rclb
mov
mov
sahf
inc
repnz
mov
inc
add
gs
js
into
addr16
test
outsl
fistl
movlps
arpl
addr16
outsl
push
dec
adc
cmpsl
stc
out
sub
jp
je
dec
jae
mov
sub
xchg
aaa
scas
popf
jb
fisttpl
xchg
das
in
xor
arpl
aad
loope
pop
in
add
mov
xorb
inc
cs
andb
sub
data16
xchg
inc
aaa
in
push
pop
mov
pusha
lea
jb
xor
or
stos
or
cmc
and
adc
cmpsb
adc
xor
and
add
mov
test
popa
pop
inc
ret
daa
and
fnstenv
dec
lods
iret
push
js
or
inc
shll
cli
cmpsb
jb
mov
inc
std
fnstenv
fstl
push
fcoms
jnp
pop
addr16
mov
les
iret
or
aas
lods
adc
push
push
mov
jmp
mov
pusha
outsl
push
out
or
or
jmp
clc
mov
xchg
fisttps
xchg
adcl
movsb
mov
jo
movsl
cwtl
dec
jmp
lret
mov
mov
push
je
icebp
rcrb
inc
dec
lea
jge
jbe
jae
les
pop
aaa
outsb
outsb
andl
loop
lret
push
aas
mov
sbbl
pop
and
por
mov
hlt
push
cmp
sti
sub
push
mov
mov
sbb
insb
fldcw
stos
sahf
inc
ret
dec
sbb
and
stos
adc
cmpsb
movsl
sbb
mov
pushl
stos
push
in
or
and
mov
sub
inc
mov
jg
movb
fisttpll
mov
xor
mov
movsb
dec
es
clc
mov
mov
lret
push
es
loope
in
into
push
cmp
jbe
mov
loope
js
cld
push
or
adcl
fimuls
or
jle
jo
lods
shrb
fwait
lahf
xor
and
xchg
xchg
cmp
dec
xchg
add
mov
push
std
lock
loopne
sub
lret
int
cmp
mov
push
jle
test
add
mov
jnp
inc
int
mov
shlb
push
lds
decb
cmc
mov
add
data16
xor
mov
cmpsl
outsl
sub
xchg
pop
in
addb
inc
aad
push
dec
inc
adc
stc
hlt
mov
ret
mov
pop
stos
shrl
out
das
lcall
fucom
jne
cmp
faddl
andl
addr16
icebp
and
push
xchg
mov
js
xlat
mov
pop
imul
cli
scas
out
mov
fsubl
in
add
cmp
int
addr16
sub
dec
hlt
xor
push
push
jae
mov
or
cmp
pop
jge
aas
subb
dec
mov
dec
cmp
leave
inc
fimuls
ret
sbb
sbb
gs
lcall
xor
imul
and
xor
adc
mov
insl
stos
dec
shlb
pop
and
test
ret
mov
negl
sbb
mull
jnp
pusha
dec
faddl
sbb
inc
movsl
jg
xor
repnz
and
fcoms
sahf
inc
pop
jns
rclb
jo
push
or
shll
or
repnz
mov
xchg
cmp
pop
dec
pop
xchg
cmp
sbb
cmp
insl
xchg
idivb
ret
xor
mov
add
int
push
shl
mov
decb
inc
dec
in
stc
aam
shll
cmp
out
inc
xchg
popf
cmp
adcl
dec
pop
mov
sbb
and
out
aas
add
movb
pop
neg
loope
mov
xchg
xor
cmp
push
ljmp
loopne
daa
xor
mov
aaa
pusha
jb
pop
xchg
add
and
xorb
call
stos
mov
mov
adc
inc
jp
out
sub
leave
adc
dec
add
int
push
stos
ds
xor
and
sub
jo
pop
lock
inc
pop
jno
or
cmp
pop
stos
mov
push
push
mov
or
xlat
aam
adc
test
cs
das
daa
xchg
popa
inc
and
enter
push
dec
lahf
mov
inc
in
fistps
ss
or
add
out
cmp
jb
std
jno
jmp
and
inc
lds
xchg
mov
cmp
push
or
mov
cmp
mov
hlt
cld
fnsave
pop
cmp
mov
and
rorb
roll
cli
mov
aam
stos
lret
mov
mov
pop
push
mov
push
xor
add
pusha
lcall
inc
outsb
mov
mov
and
lahf
loop
fwait
pop
jle
fdivs
mov
push
fldenv
mov
or
lret
push
insb
and
movsb
mov
je
addr16
and
ss
ja
jmp
adc
aaa
cmp
movsb
mov
jmp
inc
mov
inc
or
and
pop
add
popf
xlat
cmp
clc
mov
insb
loop
gs
push
cwtl
aas
icebp
mov
dec
fmuls
lods
pop
or
push
or
lea
sbb
or
jno
mov
rol
mov
inc
cmpsb
out
stos
and
push
mov
cmpsb
ret
ss
add
xchg
sbbb
push
int3
out
pop
pusha
ret
stc
ljmp
jg
pop
ljmp
inc
stos
and
int3
jle
iret
mov
push
clc
call
xor
clc
sbb
pop
into
push
rcrb
or
push
cmp
dec
aam
mov
push
dec
sbb
mov
pop
pop
mov
cld
fbld
sbb
aas
jbe
push
or
xchg
vmread
mov
mov
sub
fiaddl
bnd
dec
cmpsb
cld
mov
in
xor
add
mov
sbb
jb
or
adc
shll
jl
jb
jmp
popa
fildl
xchg
adc
roll
mov
dec
les
pop
or
aam
out
hlt
insl
loop,pn
shl
out
jge
les
dec
push
xor
in
add
scas
push
stos
push
push
jb
lds
hlt
arpl
aam
ss
cmc
cmpsb
sbb
pop
xor
test
mov
out
mov
or
jp
sti
jl
mov
xchg
scas
es
mov
xor
jle
dec
push
xor
xor
pop
lods
flds
xlat
mov
pop
je
fadds
cmp
movsl
sbb
xor
dec
addr16
leave
mov
mov
adc
iret
and
fcoms
addr16
mov
cmp
fs
lcall
mov
stos
mov
mov
jbe
cmp
adc
fimuls
xlat
int
mov
in
jo
push
sub
push
in
stc
jmp
or
int3
scas
call
xor
flds
jno
cwtl
outsb
out
or
shll
sub
mov
inc
popf
andb
lahf
out
push
test
les
jo
iret
sbb
mov
mov
pop
mov
and
adc
mov
sub
xchg
sbb
call
popa
or
xchg
inc
shrl
cmc
inc
sub
mov
popf
mov
sarb
jne
mov
sbb
roll
int
dec
sub
call
push
loopne
fdivrs
mov
dec
fdivrs
and
pop
add
nop
out
pop
les
mov
std
cmp
out
shrb
rcrb
push
repnz
or
lret
and
and
rcr
xlat
divb
daa
adc
repz
int
xor
xor
mov
xor
jmp
test
out
jp
adc
sbb
sub
pop
xchg
mov
clc
cld
std
into
push
arpl
cltd
pop
jge
sbb
in
in
fdivl
test
pop
mov
movsb
jg
xor
xor
stc
add
cmp
lods
fsubl
loop
mov
iret
push
std
and
and
mov
pop
dec
mov
loopne
outsb
push
pop
or
mov
push
lret
xor
mov
or
fimull
cmp
prefetchwt1
jg
pushf
testl
xor
cmp
push
mov
mov
pop
fisubs
std
sub
test
ret
cld
xchg
pop
daa
roll
sub
push
sbbl
mov
jge
or
mov
imul
rcrb
jmp
aaa
enter
adc
add
daa
ret
sbb
test
imulb
movsb
iret
insb
sub
movb
sti
inc
ds
lock
js
call
sbb
sbb
push
sub
lock
push
test
repz
cltd
sahf
shrd
and
lds
dec
aam
popa
sub
pop
fistl
adc
mov
mov
ss
add
fwait
cmpsl
imul
inc
jmp
aas
shlb
or
mov
cld
add
adc
jne
movsb
push
ja
mov
repnz
mov
dec
nop
push
aad
mov
dec
inc
mov
lret
dec
jg
out
aam
leave
mov
stos
mov
mov
xor
scas
inc
jge
das
sub
adc
jg
mov
pop
jmp
out
lret
sub
or
adc
adc
jl
xchg
insb
mov
mov
inc
inc
mov
nop
rolb
jbe
mov
sub
data16
addr16
dec
and
gs
add
dec
lock
mov
dec
and
fcmovnbe
mov
ss
sbb
sarl
mov
test
pop
sub
pminsw
or
idivb
dec
icebp
cmp
nop
ljmp
inc
add
xchg
cli
push
pop
mov
fisubrl
fnsave
cmc
es
cmp
mov
xlat
push
cmp
ds
xor
and
inc
imul
add
in
in
mov
outsb
dec
mov
fimuls
xor
jecxz,pt
push
jmp
movsb
dec
cmpsb
cli
lret
aad
mov
mov
jmp
or
jle
shlb
add
fs
loop
pusha
cmc
dec
mov
or
cmp
test
nop
lcall
mov
pop
adcb
std
cmpsl
aad
scas
and
pop
in
mov
jmp
imul
fiadds
in
xor
js
mov
cmp
fucomi
sbb
cmp
xor
mov
pop
test
xchg
fdivrs
or
and
mov
pop
jb
stos
pop
decb
jo
lret
in
addb
jmp
sub
mov
ficoms
aas
jnp
je
out
mov
outsl
sub
lahf
sarl
cmp
outsl
cli
mov
lods
mov
push
xor
and
and
jne
pushf
mov
arpl
inc
sub
xchg
jnp
mov
inc
fists
cmpsb
and
mov
roll
adcl
adc
jecxz
xchg
pop
xchg
fdivp
adc
insl
rcr
adc
into
fcmovne
jnp
add
shlb
nop
push
and
adc
out
mov
fwait
jg
inc
scas
aam
clc
sub
movsl
push
mov
lea
inc
mov
popf
mov
lret
xchg
shl
push
fsubs
sub
or
lods
out
and
jnp
push
lods
in
bound
lret
ficoml
loopne
push
mov
or
fs
inc
shl
fs
push
jmp
xchg
int
mov
push
dec
inc
jnp
mov
pop
xor
pop
adc
insb
mov
jne
push
je
pushf
lret
imul
in
test
cmp
stc
fwait
rcrl
rolb
orl
in
jnp
scas
cltd
stc
or
jle
push
lea
cs
pop
dec
dec
gs
in
cmp
mov
mov
mov
test
mov
inc
andb
fdivrs
push
imul
gs
sti
xor
stos
mov
jb
push
stc
ljmp
jmp
pop
push
xor
dec
mov
xchg
and
mov
pop
sbb
sbb
lret
int3
js
in
popf
sbb
shl
insl
sti
mov
ljmp
lret
cld
daa
jbe,pn
add
repnz
sbb
nop
test
push
push
adc
or
and
mov
insl
mov
lea
mov
stos
cmpsb
add
test
and
ficompl
jp
addb
pop
xor
inc
jge
xchg
adc
addr16
repnz
call
lds
enter
sbb
jmp
add
add
xor
mov
add
mov
push
and
pop
out
xchg
xor
loopne
test
mov
stc
out
and
iret
mov
movsl
sbb
test
sub
testl
sbb
sub
or
mov
sub
pop
and
and
js
inc
xor
aaa
lock
xchg
adc
jbe
arpl
scas
xchg
inc
sbb
push
arpl
nop
in
outsb
fcompp
iret
jo
mov
lods
es
xor
int3
pop
popa
imull
outsb
fstpl
icebp
pop
mov
stos
pop
out
fcomp
icebp
ror
add
in
jmp
out
test
lcall
and
inc
in
faddl
mov
fistpl
lds
mov
cmpb
ja
enter
xor
repz
sti
push
outsl
lea
push
cmp
mov
jp
jo
adc
lcall
outsl
cltd
repnz
cmp
and
push
and
imul
sbb
or
sti
lret
fs
clc
popf
repnz
test
push
mov
in
les
sub
sbb
aas
movsb
je
fmull
inc
xchg
lods
xor
pop
fistpl
xchg
icebp
enter
and
cmp
add
push
fiaddl
cmp
mov
cmp
xor
dec
test
fucom
das
mov
xchg
dec
lea
jl
jno
ret
adc
scas
xor
mov
cmp
mov
inc
mov
mov
test
mov
push
pop
shll
test
push
sub
or
mov
sbb
shlb
testl
pop
std
std
dec
xchg
mov
dec
je
fs
flds
add
sub
pop
lahf
iret
mov
scas
and
clc
cmp
ror
dec
lods
leave
out
cmp
push
stc
sub
iret
sub
xchg
adc
xor
mov
roll
and
push
sub
std
xor
je
movsb
push
push
adc
clc
cltd
lret
push
sub
sbb
jmp
fadd
pop
jmp
stos
cmp
test
loopne
and
pusha
je
rcrl
adcb
fldl
mov
pop
clc
and
inc
fs
pop
adc
push
xchg
mov
sub
dec
sbb
into
inc
loope
push
xlat
adc
popa
scas
call
adc
xor
bnd
mov
das
adc
cmpsb
inc
dec
pop
out
mov
mov
icebp
mov
lds
lock
in
jne
mov
cmp
enter
mov
in
dec
lahf
and
xor
int3
movsl
rolb
repz
xchg
cld
outsl
or
inc
dec
outsb
pop
adc
cmp
stc
imulb
adc
cld
xorl
shrb
int
mov
test
addr16
stc
fimull
insb
lcall
pop
lds
sub
adc
movsb
sub
testb
ret
insb
in
dec
jle
nop/reserved
cmp
xchg
in
cmpsb
xor
std
push
shr
mov
rcl
mov
sbb
in
mov
inc
jp
rcrb
lahf
mov
jo
sub
cmpsb
pushf
lahf
sub
bound
pop
sub
add
int3
mov
popa
ja
pop
sbb
xor
and
pop
cmpsl
stos
mov
add
push
or
xor
add
dec
lds
push
js
jg
stos
ja
inc
sub
clc
xor
pop
push
jnp
ficompl
jmp
sti
cmpb
pop
xlat
imul
or
adc
rcr
push
dec
ror
xlat
inc
mov
mov
ret
out
shll
ficoml
cmc
cld
adc
sub
test
inc
jns
push
test
jle
sub
rclb
xchg
push
inc
out
dec
dec
xchg
ljmp
mov
divb
les
movsb
ljmp
cli
test
ljmp
das
xor
repz
xchg
pop
ffreep
dec
fwait
pushf
mov
inc
aad
ficoml
and
mov
mov
mov
ds
pop
insb
stos
and
lock
pop
in
and
jmp
ljmp
ja
test
enter
push
mov
out
clc
inc
pop
or
insl
xor
push
dec
shrb
sub
jge
mov
cld
pop
fs
mov
sbb
and
mov
lahf
jmp
mov
dec
pushf
jg
sti
outsl
jmp
mov
pop
stc
pop
stc
cld
imul
divl
sub
enter
out
call
ret
in
jmp
int3
cmp
ja
dec
xchg
sbb
lcall
push
jae
fidivl
lahf
aas
in
adc
mov
inc
sbb
xor
inc
hlt
inc
cmpsl
leave
pop
shlb
adc
xor
or
jnp
push
mov
jmp
xor
push
data16
fcom
sbb
fs
mov
fimuls
jne
xchg
loop
ljmp
or
fsubrs
jae
push
and
inc
aaa
cs
mov
mov
push
sub
pop
je
fwait
in
icebp
xchg
cmp
je
divb
adc
fs
loopne
push
sarb
xchg
fcoml
gs
sub
add
aad
push
jge
insb
mov
test
xor
out
js
sub
in
aas
loope
xor
shr
adcb
aas
sub
out
notl
add
mov
in
ja
outsb
adc
cmp
mov
or
pop
jmp
mov
xchg
xor
insb
jl
aaa
mov
ljmp
stc
sub
rol
mov
pop
out
bound
xchg
push
sub
or
lock
fldenvs
js
movsl
les
mov
lcall
mov
fstps
test
jae
inc
in
push
stc
jae
mov
add
scas
iret
dec
shlb
pop
loopne
sbbl
daa
pop
ds
xchg
adc
mov
mov
mov
pop
cld
push
adc
cmp
scas
adc
mov
aaa
cmp
ret
ds
mov
lods
push
sbb
call
arpl
pop
sub
or
jle
pop
mov
in
mov
xor
jo
or
xlat
in
xlat
inc
outsb
repnz
pop
psubw
fnstcw
lret
mov
inc
xchg
gs
and
insb
in
xor
ss
fidivl
outsb
cwtl
inc
dec
mov
nop
mulb
loopne
and
test
sbb
xorl
dec
mov
push
sbb
push
xchg
ss
jbe
fwait
sub
push
lcall
fwait
sub
push
jecxz
iret
dec
and
xchg
lea
adc
repz
sub
lock
clc
stc
dec
shrb
xor
and
std
jne
out
stos
andl
add
in
cld
insl
fninit
lods
adc
pop
add
gs
push
mov
add
adc
sahf
push
clc
cmp
mov
loop
popf
or
jb
ret
lahf
testl
pop
jmp
and
inc
push
push
addr16
jl
filds
jl
popa
lcall
sbb
stc
push
pop
lds
pop
fldt
rcrb
fists
insl
push
sbb
shl
xchg
xlat
jbe
mov
out
int3
int3
test
mov
cmp
and
xchg
mov
lods
inc
js
inc
unpckhps
fdivrl
cmpsb
mov
imul
push
cld
out
xor
xor
aaa
out
iret
lods
divl
jbe
xor
jae
test
mov
aaa
push
pop
scas
push
lcall
jge
cmpsb
or
cmp
sbb
cmp
inc
lcall
push
bound
cmp
cmpl
out
jae
pop
cmp
mov
je
inc
dec
in
insl
jo
jl
cmc
dec
adcb
mov
pop
gs
sbb
add
pop
pop
imul
jns
mov
mov
outsb
inc
mov
lahf
add
pop
push
adc
jb
cmp
std
cmpsb
jne
jo
jo
cmpsl
test
mov
sbb
shrb
jno
mov
xchg
lods
in
mov
test
pop
adc
dec
iret
adc
data16
addr16
jle
dec
push
mov
jbe
jg
adc
shlb
pop
inc
mov
and
cmp
pop
xchg
inc
aam
mov
dec
fldt
or
test
mov
outsl
int
mov
push
arpl
fldcw
pop
pushf
test
inc
pusha
inc
push
push
xchg
add
adc
push
ss
sub
vmovss
cmp
movsl
jl
dec
jmp
mov
lods
lods
xor
jnp
cmp
jmp
cmp
sarb
cltd
int3
int
icebp
mov
and
pop
or
clc
fbstp
mov
mov
loopne
pusha
mov
mov
sti
dec
test
outsb
inc
inc
bound
push
cmp
mov
les
inc
out
fcomps
mov
xor
aaa
sti
inc
adc
and
popa
push
ja
test
js
es
dec
mov
fs
mov
or
ret
mov
dec
adc
add
lea
jb
inc
mov
and
fistl
movsb
loopne
fwait
cmp
rolb
inc
aaa
pop
sahf
std
push
xor
cmc
out
into
fmuls
fstpl
outsl
xchg
pop
aas
pop
mov
dec
insb
cli
test
mov
jbe
push
dec
adc
lret
push
call
jl
inc
add
gs
aas
mov
adc
ds
cmp
repz
mov
or
jecxz
lret
or
fldl
pop
sbb
xchg
lods
test
adc
lds
jl
addr16
and
idiv
fbld
jl
ret
or
aam
cwtl
outsl
repnz
add
and
pop
dec
ret
ljmp
cmp
mov
inc
movsl
sti
movsl
dec
sub
imul
fnstenv
loope
mov
icebp
ja
mov
scas
pop
cltd
stos
pop
insl
mov
jecxz
int
xor
lods
dec
sbb
sbb
mov
insb
xor
mov
ljmp
leave
sbb
cli
and
cld
add
es
xorb
pushf
and
aas
inc
and
mov
and
mov
loopne
jp
mov
mov
cmc
frstor
mov
inc
and
xchg
sbb
nop
xorl
pop
sub
pop
jmp
mul
lods
testl
xchg
lock
fistpll
xchg
sub
fistps
test
jno
outsb
pop
mov
mov
out
mov
xchg
cmpsb
in
loope
stc
fwait
outsl
mov
gs
pop
outsl
add
push
mov
adc
jns
test
add
lds
and
rcr
mov
mov
mov
shrb
mov
xchg
loopne
subl
pop
sub
mov
xchg
jnp
and
je
rcrl
sbb
test
stos
push
aam
pusha
fmul
test
xchg
mov
pop
mov
dec
jae
sbb
addl
test
push
jl
lds
pop
or
or
lcall
mov
inc
out
shlb
ljmp
xor
js
jno
pop
mov
xchg
out
fs
sbb
lea
cmc
xchg
jnp
sbb
dec
or
int
xchg
inc
mov
mov
push
mov
mov
sub
jnp
adc
pop
aaa
sub
ficoml
notb
sub
outsb
jbe
sarb
call
popf
pop
inc
xlat
dec
sbb
imul
xchg
inc
andb
fisttpll
icebp
lock
mov
icebp
sti
push
push
cmp
scas
mov
ret
xchg
jl
cmpb
iret
push
adc
xlat
popa
sub
jbe
ret
xor
andb
insl
hlt
and
and
rclb
mov
repz
mov
adcb
xchg
adc
mov
fwait
adc
xchg
rcll
insl
ljmp
lcall
ja
xchg
mulb
jp
popa
ja
das
pop
xchg
jns
add
pop
stos
push
sub
add
sbb
fs
sarl
mov
mov
mov
test
mov
cwtl
enter
ja
mov
xchg
insb
call
fbld
pop
push
xchg
push
add
outsb
xchg
cmp
dec
sarl
sbb
sbb
lods
ljmp
into
icebp
cmpsb
repnz
pusha
sbb
xor
arpl
clc
or
push
mov
inc
loop
jb
dec
ficomps
cmc
imul
test
dec
fistpl
mov
sub
dec
mov
cmpsl
shl
je
fnop
dec
sub
stos
shrb
inc
scas
mov
pop
out
xor
lcall
leave
mov
aam
adc
mov
test
mov
daa
or
imull
outsl
das
sub
daa
push
pop
cmp
xchg
int3
das
daa
mov
aaa
sbb
mov
rorb
push
sbb
dec
and
insb
out
je
jmp
cmpsb
ja
mov
and
add
ret
xchg
mov
insl
addr16
ljmp
sub
sbb
out
xchg
pop
cwtl
jnp
je
fwait
xlat
popa
sub
enter
adc
lods
inc
out
stc
cmpb
mov
shlb
or
outsl
movsl
rcrb
dec
andl
inc
mov
mov
xor
or
out
decb
jbe
loope
dec
ja
inc
sbb
push
mov
outsl
or
cmp
add
lret
shr
jae
add
js
inc
inc
cmp
dec
jge
leave
sub
outsb
sahf
xor
ret
mov
mov
lods
xor
mov
dec
add
mov
rcrb
or
imul
lret
sbb
mov
imul
rol
hlt
iret
jb
icebp
sbb
js
sub
mov
in
mov
pop
lret
js
imul
inc
mov
adc
cmpl
dec
shl
xor
std
hlt
jge
jg
je
lds
lods
fst
dec
outsl
adc
mov
adcl
xchg
insb
les
xchg
addb
lods
loope
aas
shll
in
lret
inc
les
push
push
sub
push
add
fimull
test
mov
fists
ret
xchg
cmp
fbld
icebp
pop
xor
enter
jbe
rorl
jns
xchg
mov
nop
cmp
dec
outsl
cmpsb
pusha
aas
out
in
das
jb
test
lods
inc
xlat
jbe
or
test
imul
mov
jbe
scas
and
lock
adc
mov
add
mov
insb
sbb
lds
xchg
mov
or
cli
pop
mov
out
into
mov
dec
addb
leave
mov
cmp
test
ret
dec
xor
sbb
out
insb
push
ds
int
jno
es
lahf
dec
ret
outsb
jp
out
jns
psubsb
scas
xchg
jle
xchg
dec
js
hlt
aas
divl
push
dec
add
add
call
and
loope
push
sub
or
pop
sub
mov
gs
jp
and
lret
sahf
scas
aas
cmp
push
das
lahf
cmpsl
cltd
add
in
pop
out
int3
les
adc
fidivl
aaa
cli
xchg
mov
out
daa
aas
cmc
mov
int3
add
add
insb
mov
push
testl
xchg
lock
inc
bound
es
jno,pt
or
rcl
mov
sarl
popf
shl
loop
xchg
and
outsl
cmp
lret
push
add
ja
cmpl
jle
jge
aam
ds
ret
push
add
test
cmp
xchg
sub
sbb
mulb
inc
and
popa
xor
mov
sub
iret
rclb
xor
lret
cmp
jg
and
add
add
mov
into
sbb
push
dec
out
add
jae
fisubrs
jle
into
jecxz
dec
mov
dec
jmp
or
or
sarl
cli
cmp
add
mov
lods
inc
jmp
sbb
js
aad
sbb
jo
cld
icebp
stos
ret
cmc
mov
xor
lods
clc
outsb
sbb
mov
imul
xchg
mov
ljmp
or
push
push
loop
roll
outsl
mov
rclb
inc
xlat
rorb
cmp
fwait
or
dec
jecxz
adc
xor
xchg
adc
loop
and
xchg
jae
leave
test
sbb
and
sub
adc
int
push
jl
or
sbb
loop
xchg
sub
mov
lahf
lods
lods
out
mov
ss
mov
in
repnz
sar
outsl
pop
and
cmp
aam
cmp
mov
inc
xchg
pop
je
push
or
lcall
call
or
mov
hlt
imul
test
in
adc
outsl
sarb
push
add
or
xlat
pop
push
or
jns
and
push
adc
outsl
ret
dec
add
fs
inc
fs
fstps
or
cmp
mov
add
push
outsl
pop
lea
push
push
aam
jo
scas
idivb
movsb
add
jns
xor
notb
and
mov
add
inc
ds
dec
shlb
lea
add
orb
or
in
fucomip
xchg
bound
jb
incl
js
out
pop
xlat
xlat
fstpl
aas
and
dec
insl
in
stos
lods
jbe
test
add
clc
stos
rcrb
aad
xchg
sub
pop
lret
push
icebp
xchg
or
sbb
jnp
xor
mov
incb
stos
adc
inc
jno
jb
mov
ja
ljmp
and
dec
push
inc
psubusw
push
cmp
and
aad
and
inc
sub
sub
xlat
loop
lret
repnz
adcl
or
jnp
cmc
mov
mov
cmpsb
jmp
lods
pop
lds
adc
stc
dec
mov
adc
daa
aad
fdivrp
jne
mulb
cmc
stos
fwait
jge
test
outsb
in
cs
sbb
jo
push
rcl
fisubrs
ret
xlat
cmc
imul
xor
jmp
push
aad
adc
sbb
lret
and
pop
out
out
mov
outsl
call
in
imulb
xchg
mov
leave
mov
push
mov
orl
rclb
sbb
loop
jns
test
mov
pop
mov
xchg
ja
inc
ffreep
fiadds
clc
inc
rcl
out
jae
jnp
loop
ret
pop
cmpb
data16
mov
mov
add
loope
add
jp
pop
pop
adc
or
and
gs
pop
and
sahf
dec
dec
inc
test
ljmp
ret
mov
or
push
int3
addb
lock
mov
add
xor
scas
rcrb
xchg
fnstcw
mov
cmp
and
std
sub
sbb
sub
xor
lret
iret
jno
sub
push
mov
out
mov
add
js
push
mov
sbb
aam
and
add
cmpsb
shl
mov
xorb
xor
inc
jl
jecxz
andl
mov
mov
rorl
and
xor
es
aas
fadds
jecxz
lret
pop
movsb
push
bound
and
sbb
mov
xchg
or
inc
lea
adc
inc
out
inc
insl
jl
cmp
out
stos
jns
or
fsubrl
jne
mov
mov
mov
insl
jge
insl
popf
std
and
cmp
js
xchg
lods
cmp
pop
adc
jmp
mov
cmp
jle
mov
push
ret
inc
xchg
test
int3
lar
jle
adc
dec
addr16
sub
mov
movsl
mov
cwtl
and
push
add
lret
add
int
mov
ss
or
cltd
fwait
xor
scas
adc
test
sti
cmp
push
xchg
pop
mov
loopne
or
in
mov
outsb
adc
popf
imul
dec
mov
lcall
add
stos
or
mov
loope
fisttpl
cld
jo
popf
test
inc
scas
fadd
test
push
out
les
jne
pop
lcall
ss
in
mov
cmpsl
xchg
dec
insl
and
idivb
js
mov
cmp
jmp
lods
test
and
and
xchg
push
add
add
enter
je
push
add
mov
es
dec
decl
cwtl
fistpll
cmp
ja
test
movsl
ret
aad
sub
fildl
xchg
pop
jo
mov
bound
loope
mov
sbb
pop
ja
pop
jbe
cli
cld
xchg
inc
in
dec
fidivrs
movsb
pop
or
sub
popf
xchg
cld
out
inc
mov
mov
or
bound
mov
add
mov
xor
fbstp
mov
mov
or
aaa
scas
mov
data16
pop
mov
sbb
insb
or
sbb
int
inc
jae
xchg
test
repz
inc
and
shl
jl
push
inc
adc
push
push
clc
push
sbb
sahf
adc
mov
jns
lods
faddp
inc
jg
inc
mov
push
and
sti
adc
add
jg
data16
daa
xchg
hlt
loopne
aam
mov
or
sub
or
gs
add
pop
dec
stc
mov
mov
shrl
test
cld
inc
inc
rcrb
jecxz
sub
mov
insl
inc
aam
mov
pop
lea
fstpt
insb
xchg
mov
arpl
dec
ds
jecxz
cmp
adc
aas
cmpsb
test
mov
mov
out
sub
mov
into
shll
js
sub
inc
pusha
int3
pop
pop
cli
pop
mov
sub
icebp
sahf
ret
inc
push
pop
loopne
lcall
ja
xchg
outsb
push
adc
icebp
or
dec
into
leave
in
xor
fs
adc
cmpsl
xor
fs
cmp
stc
jo
and
insl
or
mov
push
mov
inc
fisttps
mov
pop
inc
in
jecxz
push
leave
cmpsb
inc
push
test
loope
xchg
sub
sti
clc
jne
out
insb
jle
ficomps
xchg
mov
dec
outsb
in
mov
adc
movsl
das
pushf
mov
fcomi
test
icebp
inc
sub
notl
daa
fisubrl
ljmp
mov
out
in
push
adc
xchg
das
mov
inc
cwtl
das
xor
adc
lahf
jo
dec
fwait
cmc
sti
mov
in
pop
push
xor
add
pop
jb
jno
jmp
sbb
loopne
and
cmc
outsb
xor
adc
mov
and
rcr
stos
int3
push
mov
xchg
insl
cmp
loope
mov
push
pushf
and
or
repz
adc
adc
lret
dec
pop
cmp
arpl
or
and
pop
push
jo
js
or
add
and
lock
sub
roll
orl
mov
cmp
je
ret
push
jae
push
daa
test
and
cmpsb
test
pop
jne
jne
fdivl
shlb
in
scas
in
mov
dec
hlt
cmpsl
xor
pop
jnp
adc
jnp
pop
or
adc
push
ret
push
sub
shrb
xchg
mov
adc
fsubrp
add
cltd
pop
ficoms
imul
inc
imul
ret
aad
cmp
add
adc
push
add
push
xor
aad
adc
jae
add
jb
inc
pop
and
gs
out
mov
push
jb
dec
les
hlt
sub
imul
or
adc
lcall
push
das
icebp
add
or
test
jns
adc
repnz
test
orl
mov
adc
in
push
lods
fwait
or
repz
mov
insl
pushf
inc
adc
icebp
imul
movsb
jo
cmp
xor
xchg
std
xchg
inc
or
insl
loopne
xchg
dec
shrb
cs
cs
aas
inc
in
jbe
xchg
sti
ficomps
push
pop
add
lret
mov
stos
pop
xor
out
xor
and
test
push
add
inc
mov
xor
arpl
pushf
inc
cwtl
scas
sub
cld
sti
dec
fsubl
test
or
cmp
adc
cli
std
mov
sbb
mov
rcr
push
fsubp
and
jle
xchg
je
sbb
lock
int3
cmpsb
loope
cmpsb
or
xchg
pusha
add
xchg
rorb
cmpsl
mov
cmc
dec
cmp
or
lcall
mov
dec
pop
lahf
mov
testb
pop
and
cmp
xchg
shrl
stos
das
lock
jnp,pt
push
popa
mov
xor
and
sahf
pop
mov
popa
in
lcall
pop
mov
sbbb
dec
lock
cld
mov
add
cmp
fsubs
xchg
imul
jge
sub
push
jno
dec
gs
pop
xchg
lret
sub
movsl
mov
mov
ljmp
hlt
addl
xlat
test
and
aad
test
mov
lahf
shlb
jl
fisttpll
test
test
lea
push
mov
pandn
push
add
jne
adc
xchg
cmc
and
lcall
ss
push
jns
in
imul
lahf
in
test
rcll
jno
in
addl
into
lods
popf
xchg
jno
stc
cmp
cmc
test
nop
rcr
gs
bound
js
adc
in
inc
and
lahf
mov
mov
in
and
int
lods
insl
int3
addr16
xchg
mov
inc
out
fstl
mov
sub
lcall
xor
dec
fidivrl
sarl
ss
dec
mov
xor
xchg
xor
inc
pop
inc
nop
mov
cltd
mov
mov
adcl
jae
lcall
mov
sbb
and
repnz
faddl
icebp
out
nop
xchg
lods
ss
xchg
sti
shl
es
scas
fwait
hlt
popa
mov
mov
test
into
sub
add
pop
jmp
or
pop
les
sub
fwait
jns
rcl
mov
inc
adc
xor
mov
pop
jge
inc
sbb
cwtl
ret
jmp
stc
leave
or
cmp
mov
scas
movsl
cmp
mov
cmp
and
test
sar
mov
into
into
jne
popa
mov
addb
mov
mov
and
loopne
je
xchg
lods
sbb
out
gs
pushf
xor
cmpb
jle
xchg
mov
ljmp
movsb
jne
dec
xor
rcrl
or
arpl
sub
test
pop
incb
faddl
push
jg
std
addr16
cmc
adc
arpl
test
aad
nop
mov
repz
xchg
loope
dec
in
ret
rorl
fildll
dec
loope
inc
jns
adc
cmp
rcrb
cld
cmpsl
imulb
pop
out
pop
jns
inc
or
and
js
outsl
adc
pop
pop
pop
sbb
loop
ret
pop
adc
sbb
push
fs
xor
xor
sbb
notb
push
dec
mov
push
add
sub
daa
repnz
pushf
in
sub
fisubrs
enter
rep
pop
addr16
in
and
jns
xchg
or
add
adc
arpl
loope
xor
xor
cmpsb
leave
ljmp
mov
stc
xchg
push
push
data16
data16
ret
shlb
iret
adc
fs
scas
scas
lret
je
movsl
and
and
psrld
cmpsl
jge
pusha
xor
out
leave
arpl
push
popa
pop
mov
sbb
shl
fildll
and
ret
sarb
and
fadd
cmp
fmull
mov
loopne
int3
lea
in
lock
pop
les
sub
cs
jl
iret
push
sahf
mov
dec
inc
add
sbb
stos
sarl
aaa
in
inc
sbb
iret
xchg
shrb
ret
stos
jl
outsb
dec
mov
push
sub
pop
pop
stos
test
pushf
addr16
mov
xor
mov
jo
mov
inc
sbb
cmp
shl
lcall
stos
lods
mov
dec
push
push
imulb
add
push
push
out
pop
sbb
mov
and
in
pop
sbb
ficoml
fsubrp
popa
insb
loop
loope
pop
pop
inc
xor
or
inc
mov
jge
shr
pop
cltd
or
mov
out
cmp
leave
shrl
clc
test
mov
dec
inc
stos
inc
inc
jnp
ja
sti
arpl
dec
clc
stos
mov
and
stc
sub
dec
stos
add
in
sbb
dec
xchg
xchg
lahf
pop
jbe
pop
or
add
mov
in
lret
loop
push
push
in
popf
subb
sbb
bound
mov
add
inc
push
jno
adc
jbe
sbb
adc
adc
sbb
dec
jnp
in
dec
fwait
xchg
jbe
pop
clc
enter
mov
jmp
add
lcall
out
pop
pop
cli
mov
mov
iret
or
movsb
push
sti
repnz
rcrl
mov
daa
cld
sbb
mov
cmp
xor
dec
xchg
lret
shll
dec
mov
push
xchg
js
dec
sub
xor
test
cld
stos
cltd
imul
add
stc
lret
outsl
inc
jg
inc
sarl
and
stc
adc
sahf
mov
fisubrs
push
adc
mov
and
rol
jno
sarl
jo
push
mov
fsub
decb
and
inc
lret
negb
je
in
imull
pop
ljmp
aad
jae
in
rorb
adc
add
repnz
adc
out
add
xchg
in
jle
cmpb
loopne
sbbl
subb
sub
jl
add
je
jb
into
fs
adc
fildll
dec
popl
movsb
and
pop
push
or
push
pusha
mov
pop
subl
push
cmp
xor
jmp
jg
repz
scas
jnp
push
jno
das
jb
sub
xor
push
loope
dec
dec
shrl
sti
dec
mov
popa
mov
inc
or
jo
jno
sti
repnz
pop
lock
cli
fldcw
push
xlat
movsb
cld
nop
ret
push
cmp
and
fstl
movsb
sub
ret
pop
jle
call
into
inc
movsl
push
jle,pt
inc
addr16
mov
add
ret
cmp
xchg
mov
in
mov
loope
test
fidivrs
call
fsubrl
xchg
and
adc
insb
and
cmp
pushf
fisubl
push
or
out
test
xchg
shll
rcrb
or
push
push
push
fs
mov
add
insl
push
push
je
into
lea
pop
lods
xor
add
mov
mull
lock
pop
push
addl
and
movsb
push
outsl
mov
dec
aaa
push
divl
movsl
jne
push
shr
adc
lahf
mov
sbb
bound
test
ret
adc
hlt
in
jmp
xorl
add
lock
push
sbb
data16
mov
nop
add
push
lods
jle
test
cmp
xchg
ljmp
sbb
pop
lret
popf
add
mov
insb
pop
mov
rcr
lods
pop
jne
lret
rorb
mov
int3
cmpsb
or
mov
imul
popa
inc
mov
ss
scas
sbb
daa
jp
push
pop
push
scas
add
or
xlat
je
lds
fs
dec
inc
mov
pushf
mov
mov
cmp
dec
int3
aas
pop
jmp
dec
xlat
jne
shrb
jmp
lret
push
sti
add
jnp
dec
and
mov
jno
in
rorl
inc
xchg
sub
out
insb
cvtdq2ps
push
jno
movsb
dec
out
jb
mov
cltd
sbb
sub
rcrl
sarb
dec
adcb
hlt
pminub
xorl
xchg
mov
aaa
dec
xchg
aas
arpl
sbb
and
lock
js
or
mov
call
sbb
pop
imul
test
push
dec
test
cwtl
xchg
lea
and
test
xchg
repz
aam
rol
into
push
shll
outsl
lcall
dec
daa
adc
rol
iret
adc
stc
adc
pop
sub
sub
out
xlat
sbb
nop
cmp
jbe
lock
clc
push
imul
mov
mov
lret
sbb
btc
jbe
les
mov
stos
inc
leave
lods
mov
add
cld
add
enter
or
pop
or
dec
jns
shlb
adc
movsl
sbb
outsb
adc
in
xchg
dec
inc
rcl
repz
cmp
add
cmc
push
push
cmp
cmp
icebp
repz
ret
loopne
or
cmp
je
xor
jge
pushf
mov
outsl
jecxz
in
push
jae
jg
imul
add
add
and
pusha
pop
adc
inc
xor
loop
mov
sbb
out
mov
sbb
cwtl
jmp
inc
push
adc
shrb
divl
and
loop
pop
push
je
fsubr
fisubrl
adc
mov
inc
or
add
idiv
jne
scas
lret
popf
addr16
ja
outsb
out
pop
jnp
out
and
jmp
ss
enter
mov
xor
ljmp
mov
cmp
cmp
in
dec
dec
jb
out
jp
adc
ret
cltd
mov
add
lds
and
repz
mov
mov
cmp
inc
add
sbbb
ljmp
or
andl
sub
sbb
xor
lret
adc
jg
xor
push
loope
bound
fcomip
insl
dec
std
xor
ds
mov
ss
movsl
xchg
jp
js
dec
xchg
jmp
stos
arpl
ss
inc
cmp
push
int3
imul
sarl
stos
dec
mov
jnp
hlt
stc
xor
mov
nop
js
cmp
pop
sub
sahf
pop
add
mov
adc
sarb
lahf
rorl
lret
mov
and
jne
pop
popf
add
lahf
sbb
xor
xchg
mov
test
sbb
das
dec
pop
enter
jne
or
cmp
mov
rcrl
lret
fs
dec
aas
es
pop
push
mov
jp
push
mov
ret
push
daa
and
mov
je
sub
fcoml
dec
inc
addr16
inc
sub
and
rclb
lock
repnz
inc
clts
jle
leave
shrb
mov
fwait
into
mov
push
in
stos
repnz
in
sbb
push
xchg
inc
cmpsb
in
gs
mov
inc
popa
call
adc
mov
mov
dec
test
xchg
lods
mov
out
das
popf
pop
mov
mov
cwtl
in
loope
push
xchg
aas
xchg
out
mov
xor
jne
pop
push
add
icebp
sar
dec
in
push
xor
sub
dec
into
inc
and
xchg
dec
sti
mov
mov
mov
push
popa
mov
mov
or
mov
and
xlat
pop
sub
or
push
sbb
cmp
cmc
jg
pop
scas
pop
sbb
xchg
sahf
mov
push
xchg
add
notb
dec
sbbb
sub
and
cmp
fwait
test
or
iret
mov
xchg
aas
mov
out
jns
jns
jle
std
ficoms
xchg
das
pop
adc
mov
or
mov
mov
hlt
xchg
cmp
js
adc
int
sbb
push
mov
lea
pop
sbb
fsts
cmp
divb
jb
rcl
xlat
inc
inc
movsb
rcl
adc
loop
add
adc
push
std
or
adc
inc
sbb
xchg
pop
sbb
sahf
loop
ja
mov
xchg
into
jmp
push
mov
dec
outsb
pop
xor
jle
xor
push
jp
inc
loope
xchg
imul
mov
push
mov
mov
xor
dec
lods
movsb
data16
scas
out
or
dec
mov
das
dec
test
adc
cld
in
mov
clc
fwait
mov
lcall
or
cli
mov
cmp
repz
xlat
les
sub
test
add
ss
or
ret
push
xchg
popf
std
mov
dec
clc
lods
fidivrl
inc
inc
mov
roll
jle
in
pop
stos
lahf
dec
adc
pushf
mov
pop
push
loope
and
jbe
adc
je
mov
mov
pop
mov
inc
cmp
inc
fistps
loop
push
mov
gs
pop
shl
movsl
sbb
jo
je
mov
jg
sbb
jmp
or
xchg
jb
adcb
adc
ffreep
test
das
dec
dec
xchg
mov
pop
call
dec
testl
or
sbb
jb
std
in
popa
jb
in
jmp
dec
inc
dec
popa
lds
pop
sti
not
or
xor
mov
mov
test
sbb
andb
push
rcrl
int
push
fbld
dec
inc
mov
stos
xlat
push
mov
and
pop
push
cmc
inc
cmp
add
sbb
jns
movsl
cmpl
pop
aad
push
dec
sbb
call
cmpb
add
inc
xor
mov
jmp
hlt
mov
js
test
sbb
cs
inc
lret
sahf
jmp
inc
fwait
loope
ss
pop
mov
or
imul
ds
jg
les
pop
xchg
dec
les
push
out
jmp
mov
in
cmc
sub
mov
xchg
cwtl
cmp
movsl
test
into
imul
scas
cmp
xor
bound
pop
xchg
pushf
cli
mov
push
rcrb
push
mov
sbb
out
ret
sbb
dec
jecxz
mov
mov
jecxz
es
mov
inc
jl
mov
pop
jns
xlat
xor
ljmp
inc
out
xlat
aad
jns
cmp
imul
xchg
sbb
test
fsubrl
loop
divl
repz
lods
fwait
xor
pop
leave
incl
inc
mov
push
loop
test
sub
mov
insl
cmc
inc
pop
push
mov
jns
mov
pop
cmc
mov
scas
lea
dec
in
jb
adc
loop
sub
sub
nop
aad
stos
sahf
frstor
fadd
lock
or
mov
pop
fs
hlt
dec
ss
jmp
xor
push
pushl
mov
inc
rcll
leave
dec
adc
sub
daa
rol
daa
and
and
push
in
ljmpw
mov
js
inc
ljmp
or
insb
lahf
pop
shl
mov
fcoml
lock
xchg
sub
pop
push
xchg
cmp
sbb
cld
lcall
add
inc
andl
or
and
inc
push
dec
les
or
mov
xchg
jle
jae
popf
into
mov
jle
sbb
movsl
rorb
push
int
cmp
dec
mov
test
sbb
push
das
inc
sub
add
test
arpl
mov
insl
shrb
sub
xor
sub
fcoms
xlat
fs
sub
mov
jo
mov
fs
xchg
xlat
in
lods
sub
into
cmp
push
or
push
lcall
push
sahf
sbb
gs
out
pop
cmp
pop
jno
mov
in
test
incb
stos
daa
inc
sub
lahf
jns
push
jecxz
js
aad
mov
mov
cmp
in
gs
aam
cmp
mov
cmpsb
pop
test
movsl
mov
insb
mov
inc
or
dec
mov
ss
inc
sbb
cmp
jecxz
cld
loopne
cltd
cltd
and
sbb
ja
movsb
andl
mov
test
adc
or
cs
mov
or
rclb
adc
repz
cmpsl
lret
jp
sti
lahf
test
adc
je
cld
add
ds
sub
orl
adc
into
sahf
and
in
mov
mov
mov
cmpsl
lahf
orb
sub
add
inc
repz
aam
push
sbb
dec
addr16
in
stos
xchg
iret
xchg
movsb
pop
sbb
mov
movsl
sarl
xchg
cmp
and
xchg
popf
jne
cld
outsl
push
push
daa
cmp
push
dec
loope
jo
iret
jne
loope
imul
cmpsb
subb
cmp
add
cld
lods
dec
push
test
cwtl
insb
mov
cmp
repz
sub
push
inc
insb
mov
pop
sarb
lock
ret
push
cli
lds
xorb
push
and
xchg
mov
jle
out
or
xchg
je
je
jecxz
dec
and
mov
xchg
call
dec
shr
incb
jae
lea
xchg
dec
pusha
insb
jge
push
fimull
imul
mov
add
loop
cld
dec
jecxz
fdiv
mov
jecxz
faddp
jecxz
test
fisubrl
sbb
mov
stos
mov
xchg
orl
insl
das
stos
xchg
add
ja
mov
in
mov
dec
js
add
pop
pop
and
fldl2t
dec
test
mov
lock
and
xchg
loopne
adcl
stos
popa
jmp
mov
clc
or
mov
xchg
lcall
ja
fsubrs
lahf
xor
gs
es
fisubl
dec
pop
imul
push
popf
out
mov
pop
inc
mov
arpl
lcall
xchg
sbb
xor
ljmp
dec
sub
xor
inc
inc
push
scas
sub
lock
sub
sub
addr16
mov
ds
push
mov
test
mov
adc
rolb
movsl
cld
jae
adc
mov
sbb
mov
fsubs
rorl
pop
mov
je
jg
in
mov
adc
mov
jo
arpl
pushf
sbb
popa
pop
pop
pop
push
repnz
and
adc
fcom
ljmp
rcrl
cli
pusha
mov
adc
cmp
clc
cld
out
mov
or
notl
out
popf
push
sbb
add
fdiv
cli
jns
mov
mov
insl
cmp
scas
dec
out
lods
das
pop
sub
mov
add
jae
push
cmc
es
test
sub
stos
test
cltd
xor
mov
insb
and
lahf
cwtl
test
nop
jl
mov
leave
adc
lods
lret
cmp
cwtl
mov
js
aas
push
push
push
xchg
cmc
in
les
push
push
push
mov
xor
sub
sbb
cmpsl
cli
or
clc
or
sbb
push
xlat
pop
mov
inc
mov
pushf
mov
lea
popf
sbb
jae
cmp
inc
shrl
sub
out
ret
and
je
ret
ds
sar
test
fwait
in
scas
mov
aas
out
and
or
movl
insb
jmp
imul
inc
jb
nop
cmp
sahf
add
aaa
push
roll
mov
cmp
xlat
lods
lds
cli
sahf
adc
jns
aam
aaa
sub
add
mov
xor
xor
xor
inc
mov
test
pop
insl
insl
sti
pop
inc
pop
leave
bound
sub
loope
lds
scas
cli
jle
and
pop
add
cmp
je
into
xchg
or
mov
inc
andb
inc
sar
adc
lods
sub
inc
rol
push
minps
mov
shrb
xchg
xchg
or
lods
dec
aas
adc
test
xchg
pop
mov
lock
sub
ja
mov
lds
pop
xor
cs
push
cld
sub
loop
sub
repz
js
push
inc
sub
jmp
pop
xor
or
in
outsl
jg
lock
mov
mov
and
adcl
xrelease
mov
cmpsb
lock
and
xchg
push
mov
rcr
dec
imul
fstps
stos
mov
scas
fistps
lods
lea
mov
adc
in
insb
shlb
pop
inc
jne
cltd
js
jecxz
mov
call
push
out
xchg
xor
repnz
shrb
or
arpl
fwait
inc
movsb
dec
sub
andb
sub
and
dec
outsl
popa
push
lds
mov
or
sub
push
xchg
adc
xor
xor
add
insl
pop
cs
pop
ficoms
icebp
mov
aam
or
dec
ja
cmp
push
call
sti
xor
sub
dec
jecxz
shlb
inc
xor
das
orl
idivb
aaa
cli
sub
addl
or
jno
fistpl
cmp
out
data16
sti
test
jo
aas
inc
fs
movsb
les
mov
sub
adc
mov
inc
pop
add
stos
icebp
cld
sub
rol
and
out
jb
add
jp
loopne
pop
or
mov
movsb
fs
cli
pop
arpl
mov
cwtl
loopne
jns
xchg
call
pop
jge
fmull
push
adc
mov
xchg
xchg
jmp
push
and
pusha
repnz
fimull
jmp
sbbl
in
mov
in
pop
inc
test
daa
test
ret
inc
sti
negb
dec
cs
push
ds
fs
loopne
ja
or
in
push
insb
pusha
push
xlat
lods
aam
jge
sbb
outsl
or
push
leave
loopne
mov
or
dec
xchg
idivb
mov
and
or
xor
xchg
add
dec
stc
add
bound
decb
rcll
fdivs
xchg
adc
lahf
fsubr
loope
sti
xor
push
pop
cmp
aas
mov
subb
ja
test
push
jmp
pop
bound
add
jg
imul
notl
sub
sbb
mov
push
lret
outsb
or
sub
pop
mov
lcall
pop
rorb
inc
mov
push
jne
xlat
mov
sub
and
inc
sti
adc
cmp
push
and
mov
adcb
lret
xor
push
stos
fmull
inc
inc
stos
jl
push
addr16
aas
xor
loopne
mov
dec
insb
mov
cwtl
mov
jl
das
mov
loopne
xor
pop
js
pop
inc
jbe
lea
lcall
sub
repz
and
stc
inc
fistpll
scas
lahf
inc
fcompp
aad
int
or
test
mov
xor
pop
sub
mov
sahf
loopne
fcompl
xor
cmp
pand
push
orl
jp
arpl
cltd
jmp
mov
lcall
aaa
xor
dec
inc
sub
iret
mov
inc
push
jmp
push
and
xor
cltd
dec
test
nop
jle
mov
clc
in
out
pop
mov
in
movsl
pop
add
fs
test
js
push
xchg
sbbl
add
sbbl
inc
cmp
mov
add
or
xor
push
mov
adc
push
adc
mov
lods
jnp
xchg
mov
pop
dec
test
pop
addr16
xchg
mov
push
dec
cmpsl
xchg
xor
xor
push
adc
cwtl
lcall
or
addr16
pop
in
stos
dec
ss
mov
and
ja
stc
insb
push
jecxz
jp
mov
dec
fisttpll
subb
mov
movsl
xor
mov
adc
sarb
test
xchg
xchg
sbb
xchg
and
dec
add
mov
bound
dec
sti
ljmp
pop
cmp
or
sub
mov
jl
nop
shlb
jge
lods
cmp
lea
in
mov
mov
dec
xlat
add
xchg
mov
loope
adc
nop
aam
roll
inc
jecxz
dec
hlt
notb
popf
aaa
subl
jp
jecxz
lds
inc
in
pop
pop
mov
cltd
cmp
negb
aam
mov
or
cmp
shr
sub
push
xchg
ljmp
jns
jl
push
mov
stos
mov
adc
movsl
xchg
lahf
aaa
mov
jb
test
sbb
cmp
dec
into
cmp
lds
cmp
out
sub
push
jp
movsb
and
jecxz
mov
sbb
mov
idivl
xchg
nop
push
jecxz
adc
jmp
jl
mov
fnsave
pop
call
jb
hlt
push
sbb
loope
inc
jl
jns
pop
jne
ret
jecxz
cltd
pop
inc
xor
push
cmpsl
clc
int
xor
cmp
fistps
cmpl
sti
aaa
fidivl
das
jo
adc
sub
mov
test
pop
cli
pop
jb
pcmpeqd
fidivrl
and
mov
scas
push
and
xor
jmp
mov
push
mov
push
in
int3
pop
inc
repnz
xlat
mov
ja,pt
fs
into
jb
sub
dec
xor
jbe
mov
enter
xor
popf
mov
and
out
popf
xor
jo
insb
push
and
cmpsb
orb
mov
rolb
rcrb
push
mov
cmovg
loopne
hlt
xlat
stos
jnp
jb
cmc
xchg
lds
les
mov
xchg
arpl
and
mov
in
add
sahf
hlt
movsl
jae
pop
mov
push
jnp
xchg
sub
push
jbe
stc
fs
stos
push
fcomps
outsl
adc
enter
jle
mov
shl
inc
fwait
pop
add
fincstp
pop
sbb
lret
inc
fiadds
and
dec
sbb
movl
cmp
mov
pop
dec
sbb
stc
cmp
cld
rcrl
lds
roll
mov
adc
jne
clc
into
inc
cmp
mov
mov
push
stos
push
jmp
fmull
ja
adc
inc
push
and
push
in
fimuls
add
fidivrs
ret
rol
js
mov
mov
jl
cwtl
jo
sbb
add
dec
hlt
out
sti
cmp
jbe
jecxz
adc
push
dec
jns
jbe
mov
icebp
fbstp
cmc
arpl
iret
loope
out
nop
movsl
cmp
out
clc
xchg
jle
jne
mov
ret
fldt
lds
adc
fmulp
sbb
and
daa
inc
das
in
lds
cmp
mov
sbb
inc
jo
mov
pop
dec
inc
mov
sub
loopne
jg
xor
lcall
jo
dec
imul
gs
cmp
mov
cmc
inc
lret
sub
es
mov
and
push
pop
test
mov
adc
jp
and
addr16
jecxz
rolb
aaa
xor
xchg
and
test
sub
leave
out
repz
jmp
cmpsb
sti
xchg
fwait
out
sub
enter
push
shl
pusha
test
mov
cltd
iret
and
std
cmp
xor
lret
mov
mov
in
ljmp
xor
fldcw
iret
ds
clc
addr16
or
push
xlat
lcall
je
xor
iret
mov
mov
mov
dec
mov
and
insl
test
js
sarl
xor
into
cmp
push
pop
iret
jmp
fcompp
int
iret
push
inc
outsl
pop
mov
pop
mov
in
and
adc
jecxz
data16
or
jle
lcall
jo
xchg
jle
xchg
dec
jno
jecxz
out
outsb
jp
xchg
mov
xchg
addr16
nop
sub
andl
and
icebp
fcomps
xchg
xor
in
push
cmpsl
shl
mov
dec
xchg
scas
in
std
dec
pusha
jp
adc
lahf
out
mov
xor
mov
mov
push
mov
add
mov
push
inc
loopew
cmpsb
cmp
movsb
xor
lds
and
repnz
add
jle
lods
push
push
pop
pop
repz
mov
imul
incl
dec
fadd
add
test
iret
pop
test
cmp
cltd
dec
test
dec
pop
lds
pop
fisubl
and
sub
mov
cli
inc
ds
pop
cs
int3
outsl
jmp
adc
cwtl
movsl
dec
push
fimull
mov
xchg
shll
fsub
sub
dec
add
xchg
out
insl
mov
push
jp
ljmp
dec
cltd
scas
or
cmp
mov
ret
and
out
ret
rol
inc
es
inc
lret
jne
in
mov
outsb
lahf
out
dec
pusha
pop
popl
pop
outsb
sbb
sub
inc
scas
sub
std
or
cmpsb
add
add
cmp
lds
xlat
mov
sub
sbb
fsubrl
dec
loope
out
faddl
push
push
cmp
xor
arpl
jo
xor
push
ss
jg
mov
cmp
inc
mov
test
fists
mov
sub
imul
cmpsl
decl
gs
push
cmp
neg
jmp
add
mov
ja
inc
icebp
stc
adc
icebp
out
into
stos
in
cltd
pop
jo
dec
fistpl
shl
outsb
dec
lock
sub
cli
mov
jle
sbb
rorb
sub
test
and
dec
and
pop
gs
lods
sahf
imul
dec
sub
into
inc
fcomps
mov
or
mov
mov
addr16
sub
adc
fistpll
shll
lods
inc
int3
mov
ja
ja
rorl
sub
leave
repnz
mov
sbb
mov
ja
sub
and
xabort
inc
push
inc
lahf
pop
pushf
sub
and
cwtl
mov
movsl
out
inc
or
sbb
lods
and
push
xor
pop
aaa
scas
lret
test
ret
sub
outsb
mov
jbe
loope
je
add
test
lahf
jne
das
mov
jmp
sub
icebp
loopne
dec
sarb
bound
push
pop
jle
inc
mov
xchg
push
push
ret
add
mov
cwtl
adc
ljmp
and
fists
imul
inc
out
dec
xor
xchg
cmpsb
popf
pmulhuw
add
cmpsb
cwtl
mov
arpl
cmp
mov
pop
repz
mov
push
sub
lahf
push
jl
fldl2t
frstor
sti
jp
data16
sahf
pop
std
jg
fsubrl
sub
test
and
pop
stos
mov
add
mov
jo
add
mul
inc
mov
in
imul
mov
inc
lea
adc
dec
jecxz
out
xchg
mov
ss
push
push
dec
adc
shll
xorb
call
dec
sbbl
sub
mov
fimull
pop
mov
xlat
cltd
lea
fildl
or
push
add
jge
movsl
stos
pop
add
push
outsb
fdivrl
sub
mov
loop
aad
push
icebp
mov
stc
das
mov
loopne
subb
jne
aaa
dec
xor
pop
xor
stos
mov
mov
push
jb
ret
sub
mov
roll
mov
movsb
push
out
adc
inc
and
mov
dec
nop
subl
xor
push
mov
repz
xchg
loopne
jmp
pop
mov
adc
pop
mov
nop
sbb
lahf
jns
and
sub
iret
mov
fptan
sbb
push
movsl
sub
popf
sub
pushf
mov
and
and
mov
sti
es
sbbb
sbb
mov
fs
sbb
hlt
lcall
pop
imul
xorl
dec
push
sbb
xor
stos
xchg
inc
cmp
sbb
fchs
mov
fxtract
mov
outsb
push
jns
inc
lahf
ret
pushf
ret
pop
data16
test
dec
out
inc
clc
out
xchg
stos
jno
dec
lods
or
adcb
add
xchg
mov
lahf
jle
in
xchg
mov
je
cli
outsl
jmp
test
enter
lret
movsl
addr16
adc
or
mov
out
jb
icebp
mov
xor
or
lcall
pop
andl
lock
mov
in
xchg
inc
jns
in
ret
adc
in
add
into
mov
add
addr16
enter
dec
cmp
pop
jmp
lcall
in
lods
fnstsw
mov
arpl
mov
frstor
int
movsb
add
cmp
jbe
mov
pushf
push
pop
adc
fnstenv
or
mov
loop
nop
aaa
mov
hlt
sbb
sbb
xor
dec
xchg
cmp
cmp
ds
sbbl
cltd
sbb
mov
sbb
dec
jmp
and
int
rcrb
repnz
fbstp
cmc
push
fmuls
adc
aas
or
je
ret
adc
and
bound
jne
sbb
subps
popa
or
ljmp
dec
shl
jmp
push
push
cld
lods
addr16
pop
cmpsl
imul
cmp
orl
dec
call
int
rorb
inc
cmp
push
popa
std
ror
mov
aam
repz
mov
push
repz
mov
add
in
out
cmc
scas
cmp
inc
sub
adc
mov
loop
cmp
mov
inc
or
adc
add
mov
sub
hlt
sub
and
shll
insb
in
cmc
push
push
gs
sub
and
xchg
ret
inc
fdivrp
sbb
jae
jnp
pushl
sub
imulb
sub
daa
test
jmp
repnz
cltd
dec
pusha
push
add
jp
pop
clc
shlb
mov
test
in
mov
out
rcl
cmpsl
int
fstl
lret
aaa
xor
stc
jns,pt
lret
inc
cmc
cmp
pushf
repnz
adc
aad
push
push
cld
and
sahf
xor
lahf
mov
xchg
in
sbb
mov
push
pop
and
mov
pop
cmpsb
shrl
ja
add
mov
pop
sbb
or
mov
daa
mov
mov
or
clc
push
ss
jo
sbb
sbb
mov
pop
negl
mov
jns
pop
fcmovb
mov
call
sysret
mov
mov
stc
push
jg
fcompl
add
es
into
aad
in
pop
ds
adc
and
pop
scas
pushf
lahf
and
subl
pushl
aas
adcl
inc
ret
into
jecxz
aad
and
test
rcl
aam
cmp
and
inc
insl
sbb
lods
xchg
adc
adc
sbb
jle
das
jae
mov
fsubs
xchg
cmp
je
xlat
xchg
addl
xchg
fs
je
inc
dec
adc
adc
loopne
xor
cmpsb
sub
pop
pop
jnp
ret
adc
outsb
xor
adc
ret
pop
iret
sub
iret
xchg
mov
lds
and
adc
pop
js
push
rorl
inc
int3
inc
and
xchg
sbb
inc
cmp
out
cwtl
xchg
mov
jb
test
adc
mov
in
pusha
out
and
arpl
xchg
mov
shlb
cmpsl
mov
fdivrl
mov
adc
sub
mov
sbb
sbb
mov
cmp
imul
aam
lret
clc
aaa
adc
and
pusha
xchg
arpl
or
daa
pusha
xchg
or
inc
out
mov
lods
mov
lcall
daa
pop
xor
mov
aad
xchg
push
xchg
insl
rcrb
and
pop
push
ljmp
clc
roll
dec
mov
sbb
dec
insl
lcall
out
ljmp
xor
repnz
movsl
xor
pop
jb
push
cmp
inc
or
test
cmp
std
jns
popf
daa
adcb
xor
std
pop
cmp
mov
cmc
lock
repnz
fadds
movsb
mov
or
jae
cmpsl
dec
outsb
or
inc
mov
int
mov
inc
or
enter
push
in
testl
jbe
mov
lds
popf
inc
inc
cwtl
rcll
push
pop
aam
pop
jg
sbb
cli
test
shll
sti
push
mov
inc
test
adc
lcall
rolb
pop
jnp
mov
lock
repnz
arpl
daa
iret
push
mov
inc
gs
sub
and
sbb
shlb
add
cltd
xor
clc
xchg
dec
inc
mov
mov
daa
mov
outsb
pop
ss
mov
push
dec
mov
xorl
sbb
sub
push
bound
into
sub
lea
mov
cli
nop
xchg
xchg
mov
sahf
xor
inc
dec
in
add
add
iret
and
insb
pop
aaa
cmp
pop
popf
sbb
sub
sub
dec
jae
gs
inc
dec
mov
stos
pop
xor
xchg
popa
in
add
fcomps
in
jb
sub
sbbb
mov
push
push
jp
xchg
cwtl
xchg
sub
ds
aam
jge
sbbl
inc
jg
repnz
add
sarl
daa
jbe
mov
dec
in
push
ds
add
lretw
pop
jae
xchg
sbb
push
in
add
aad
mov
clc
test
fistpl
jle
push
out
xor
loop
cmc
ja
imul
mov
sbb
aaa
mov
ja
fcompl
out
jae
sub
cld
fs
jbe
mov
push
test
out
jnp
push
lock
pusha
test
and
and
and
push
mov
and
aaa
pop
mov
scas
jge
imul
push
jmp
mov
out
adc
xor
orl
aas
push
or
hlt
inc
adc
cmp
xlat
push
or
and
sub
inc
cmpsl
stc
push
mov
leave
es
push
jbe
lret
mov
mov
or
out
xchg
ret
stos
xor
movsl
je
repnz
dec
shrb
xor
aam
xor
cmc
xchg
cmp
xor
push
mov
and
insl
nop
mov
mov
xchg
and
mov
std
adc
out
and
fidivs
pop
test
dec
sub
test
ljmp
imul
cli
icebp
divl
xcrypt-cfb
mov
sahf
sub
sub
inc
xor
sbb
jbe,pn
lret
and
popl
push
insb
imul
sub
cmp
fdivs
icebp
ja
cmp
push
mov
xorb
pop
dec
sbb
gs
adc
sbb
loopne
push
cmp
dec
push
ja
jle
sub
cltd
mov
call
push
in
xchg
in
aaa
arpl
stos
or
loopne
xor
mov
sbb
cwtl
fcompl
push
xchg
push
dec
test
popa
or
push
xchg
loop
cmpsb
mov
mov
lahf
and
out
or
test
push
xchg
mov
push
frstor
add
sub
add
testl
sub
inc
inc
cmpsl
jp
ja
out
mov
fidivrs
push
cmpsb
out
adc
arpl
pop
pop
fists
lea
lret
adc
mov
cmpsb
xor
sar
cmp
mov
out
outsl
push
loop
roll
or
adc
pop
cmp
in
sub
sbb
subl
lea
push
test
cld
test
push
cmp
sub
loope
mov
and
repz
add
movsl
add
pop
div
mov
test
sbb
loope
subb
add
mulb
pop
sbb
xchg
jbe
jae
popf
ja
mov
lods
popf
jp
les
and
pop
imul
in
leave
or
and
push
test
and
das
push
es
xor
pop
outsl
cwtl
data16
test
idiv
out
insl
push
daa
repnz
and
mov
xchg
jne
aaa
mov
scas
les
sub
pop
lret
mov
lods
dec
imul
aaa
xor
aas
adc
arpl
jne
sub
xchg
fdivp
fisubl
in
jno
inc
js
push
xor
shr
js
cmc
jbe
xor
mov
mov
rcr
dec
mov
xor
adc
pop
les
out
sub
cs
mov
cmp
sar
jl
pop
hlt
adc
push
dec
adc
cs
cld
addb
sub
in
cmpsb
inc
test
pusha
ljmp
loop
ja
icebp
in
xor
xchg
inc
dec
mov
pop
lock
clc
xchg
loopne
pusha
push
aas
test
stos
inc
dec
push
inc
imul
in
jno
mov
and
out
in
ret
mov
pop
repz
shr
dec
clc
adc
sahf
xchg
cltd
test
or
sub
inc
repnz
leave
sar
cmc
jnp
shrl
lods
loop
mov
scas
cld
mov
or
adc
mov
mov
pop
adc
or
jns
call
insb
push
rolb
dec
imul
mov
addb
and
push
xchg
cld
repz
jecxz
gs
xor
gs
mov
xor
mov
movsb
dec
inc
xor
test
inc
pop
mov
inc
xchg
fnstcw
add
inc
dec
insb
je
sbb
mov
or
shll
clc
fidivrs
push
sbb
push
loopne
mov
cmc
cli
aaa
and
pop
add
lcall
and
ja
loop
sarl
jno
lods
into
mov
les
sub
insl
orb
bound
push
insl
push
and
sbb
movb
loope
fsubrs
mov
or
or
mov
inc
fstp
push
test
out
dec
push
out
push
xchg
insl
cs
lods
jg
push
pushf
or
jnp
adc
in
out
jl
mov
push
dec
push
dec
std
adc
inc
xor
out
pop
or
sub
push
add
mov
cmp
jl
loope
pop
hlt
sbb
adc
aad
mov
fs
jl
aas
iret
popf
xor
xor
hlt
sahf
sbb
mov
pop
adc
fnsave
outsb
out
lods
movl
sbb
stos
js
popf
andb
lds
aaa
cmp
daa
lds
mov
mov
pop
cld
fs
mov
add
call
mov
hlt
mov
divb
pop
jo
or
jns
in
or
iret
fdiv
lret
xchg
inc
pop
ret
cli
adc
popf
lock
cmp
mov
xchg
mov
adc
xchg
loope
psadbw
push
jle
push
orb
loopnew
imul
fidivrs
movsl
stos
sub
pop
jne
or
inc
das
insl
fwait
and
push
stc
je
pop
jbe
aas
xor
pop
push
mov
mov
sbb
add
imul
stc
notl
in
pop
push
mov
sub
cmp
push
and
int
jge
insb
enter
pop
pop
jl
sbb
fdivl
outsb
sbb
xor
xchg
cld
fnsave
xchg
push
fisttpl
test
stos
mov
jo
ja
jns
js
popa
and
shrl
inc
mov
dec
jno
inc
mov
and
jmp
xchg
lret
shrb
arpl
test
fidivs
dec
and
mov
int3
jecxz
xor
push
sbb
les
frstor
sahf
loopne
sbb
jmp
and
in
in
inc
fnstsw
out
add
add
dec
jo
pop
mov
mov
or
jnp
mov
jne
cltd
dec
mov
mov
cmp
iret
aam
repz
lahf
pshufw
dec
sub
and
sbb
loop
xor
leave
popf
adc
or
stc
sub
mov
pop
push
lret
cmc
mov
lcall
sbb
pop
jle
push
add
and
in
sbb
xorl
jl
cmp
cmp
cmc
fwait
nop
popa
jp
ja
add
jmp
dec
jl
fildll
outsl
sti
xchg
dec
in
out
inc
into
ja
adc
add
mov
mov
mov
sub
xor
sbb
cmp
icebp
imul
lds
repz
sbb
add
inc
popa
ljmp
mov
inc
int
jmp
push
jmp
jle
adc
dec
or
dec
or
jo
test
inc
jecxz
or
adcb
and
cld
sbb
aam
xchg
cmpsl
adc
or
pop
sbb
pop
int
xor
push
imul
adc
fisttpl
jp
jae
jne
adc
or
out
ja
mov
iret
pop
incb
lea
iret
mov
in
mov
pop
xor
lret
popa
adc
push
daa
loope
and
pushf
push
inc
mov
add
outsl
jno
iret
cli
stc
xchg
lock
and
shlb
jnp
js
out
movsb
int3
cmp
push
or
movsl
or
adc
jae
dec
rcll
mov
xchg
sub
mov
push
mov
cmp
and
xchg
daa
xchg
inc
add
fdivrs
repz
fisttps
xchg
dec
add
jle
leave
add
xchg
stos
push
cwtl
int3
ret
js
mov
xchg
push
mov
mov
push
dec
mov
sub
mov
out
jno
mov
hlt
fs
ljmp
pop
pop
mov
andl
or
mov
rolb
push
sbbb
subl
and
aad
sub
jmp
sub
movsb
and
fildl
mov
adc
cltd
inc
lock
sbb
and
push
xchg
iret
scas
jns
xchg
ret
rcrb
push
fisttpll
adc
arpl
imul
or
mov
pop
mov
jno
mov
and
bound
inc
ljmp
jnp
lods
push
nop
mov
sbb
out
lea
push
lret
inc
divb
xchg
push
add
out
sub
das
enter
test
mov
frstor
mov
dec
lods
sbbb
imul
in
inc
cpuid
cmc
sbb
aas
movsb
and
pop
test
fnstenv
mov
lock
les
scas
sbb
addb
test
test
stos
in
insb
adc
pop
in
adc
or
pushf
pop
imul
sub
adc
test
add
adc
jecxz
sub
addr16
call
add
xorb
mov
mov
add
mov
out
and
fmull
lret
into
out
adc
aaa
sti
repnz
push
lods
gs
mov
mov
repnz
imulb
testb
divl
mov
cmp
movl
mov
clc
scas
push
xchg
xlat
aad
xchg
and
mov
mov
xchg
xor
pop
or
cld
mov
fstpt
and
cmp
dec
enter
adcl
add
int3
lea
stc
loopne
mov
int3
mov
pop
sub
and
jmp
mov
hlt
rcrl
mov
movsl
jnp
aad
test
sbb
sub
lret
adc
mov
gs
repnz
push
sbb
adc
or
addr16
mov
int3
mov
aad
push
imul
pop
stos
data16
xchg
xchg
pop
add
mov
mov
pop
push
stc
inc
into
test
popa
jge
cltd
out
imul
lds
mov
push
repnz
push
stos
cmp
inc
out
inc
scas
xchg
lret
xorb
push
outsl
das
popf
dec
push
je
jno
pop
dec
in
fdivrl
inc
mov
cmpsl
rcr
orl
adc
pop
cwtl
dec
jb
dec
sbb
or
sbbb
outsb
mov
shl
mov
imul
sar
cmp
out
push
cmp
and
out
jl
in
xor
sub
mov
aam
adc
lcall
aas
push
lods
stos
push
jg
jg
lock
push
movhlps
rcrl
push
sub
das
lock
hlt
sbb
lahf
or
mov
orb
dec
jge
iret
push
fcompl
aas
dec
mov
icebp
into
pop
rol
mov
cmp
adc
fwait
pop
je
lock
test
clc
cmp
leave
cmp
ret
out
je
cmp
outsl
push
nop
push
lret
loopne
adc
int3
push
ja
std
fwait
insl
xchg
je
in
mov
xchg
jg
mov
out
push
inc
pop
push
jae
and
cwtl
mov
cmp
cmpsb
inc
adc
sub
mov
hlt
pop
mov
xchg
inc
sub
cmp
xchg
cmpsb
sub
daa
inc
push
xchg
mov
mov
jo
sub
and
leave
sub
rclb
adc
scas
lods
pop
out
jmp
inc
test
imull
mov
cmpb
pop
repz
xchg
or
shll
pushf
std
jne
popa
add
lahf
mov
xchg
repz
pop
push
inc
cmp
add
fisttps
jo
jge
mov
sbb
sarb
cmp
mov
dec
jmp
lods
adc
add
xchg
or
sbb
lds
pop
std
aam
rcr
sti
xchg
cmp
daa
je
js
jp
lods
in
sub
std
inc
jne
ret
push
pop
jno
xchg
test
aad
add
xor
fstps
loop
dec
pop
and
xor
ret
test
in
push
mov
push
jmp
push
shl
pop
ja
sub
movsl
enter
hlt
mov
insl
insl
pop
ja
aaa
ret
inc
in
or
pop
popf
fimull
xchg
xor
hlt
mov
inc
js
iret
ljmp
cmp
lea
rorb
pop
stc
lods
adc
dec
mov
lds
addr16
inc
jecxz
dec
imul
xlat
das
cmp
clc
outsb
outsb
daa
push
mov
add
pop
mov
loope
mov
adc
ljmp
jns
and
and
adc
or
jo
or
dec
mov
cli
push
lahf
aad
sti
push
repnz
inc
or
fiaddl
mov
fists
cmpsl
lds
cmp
shr
out
lock
add
enter
xchg
cmpl
shlb
in
sahf
jl
push
jne
cmp
cmpsb
incb
add
mov
cmp
or
sbb
in
sahf
add
dec
into
pop
lcall
leave
rcl
and
and
xchg
mov
push
xchg
imul
mov
and
and
mov
scas
sub
add
and
cltd
popa
dec
test
jo
adc
push
sbb
cld
cmpsb
xchg
jg
jle
out
push
mov
push
enter
pop
je
jo
inc
mov
cmpsl
lret
cld
cmp
pop
xchg
sarl
dec
fwait
lahf
arpl
daa
pusha
call
jl
lods
inc
aam
out
fldenv
adc
pop
outsl
mov
stos
mov
cmpsl
inc
ficoms
fdivrs
sbb
insl
jne
into
std
outsb
mov
cmpsb
sahf
and
ds
clc
lahf
push
bound
fidivs
nop
push
sbb
cltd
ljmp
pop
adc
je
jge
lock
int
fwait
dec
pop
xchg
pop
pushl
push
sub
xchg
mov
sbb
xor
inc
push
inc
pusha
arpl
mov
pop
sub
clc
insl
mov
std
test
mul
or
imul
fcomps
pushf
fdivrl
out
push
cmp
lret
inc
mov
and
popa
mov
inc
jl
shlb
cld
xchg
fcmovu
xor
push
jnp
clc
jmp
wrmsr
jl
movsb
repz
xor
mov
pop
sti
nop
mov
and
aam
and
adc
popa
mov
fs
ja
bound
or
shlb
out
cmp
repz
mov
rolb
lret
jecxz
xor
js
cmpsl
mov
fldt
rcl
lret
data16
out
roll
out
jp
inc
test
adc
popf
imul
push
ljmp
sbb
dec
je
jns
cmpsb
push
or
mov
xchg
cmp
loop
add
add
notb
gs
jbe
stos
xor
mov
pop
wbinvd
fucomip
lret
fucomip
outsl
xor
std
sbb
flds
dec
fnsave
adc
enter
mov
cld
int3
jae
mov
jno
sbb
cld
decb
push
stos
test
arpl
jbe
xchg
popa
test
pushf
stc
sbb
lea
mov
or
adc
lds
mov
outsl
dec
and
je,pt
rolb
rclb
mov
popa
mov
fwait
lea
fnstcw
add
fcoml
dec
test
cmp
out
mov
mov
cli
leave
aad
inc
push
cmp
nop
jbe
fwait
sbb
push
cmp
in
or
push
gs
je
adc
popa
push
xor
xchg
and
int
addb
cmpl
dec
cmp
clc
jmp
mov
or
into
xor
push
cwtl
push
fldcw
rorb
jne
xchg
clc
insl
mov
insl
mov
cwtl
in
shll
rcr
fcompl
cmp
push
mov
outsb
sarb
int3
xor
clc
sbb
cmpsb
lock
cmp
lret
adc
stos
cmp
stc
popf
in
jo
jmp
sub
mov
jecxz
insl
mov
fcmovnb
loopne
sbb
mov
popl
daa
lcall
mov
mov
cwtl
arpl
rclb
sbb
xchg
push
scas
fbstp
sarl
mov
adc
and
adc
clc
sbb
cmp
push
test
xlat
adc
popl
mov
negl
xchg
mov
aam
xlat
test
pop
jno
mov
jp
mov
mov
xor
dec
fldl
in
push
cwtl
fwait
mov
data16
dec
out
insb
outsb
bound
gs
mov
loopne
add
out
add
mov
mov
cmc
nop
push
or
dec
shlb
rcr
popf
mov
aas
pop
dec
inc
xorb
jmp
sbb
jecxz
sub
sub
push
addr16
mov
fwait
xor
jge
adc
lcall
xchg
add
jo
cltd
arpl
iret
push
lret
clc
ja
cmc
js
sub
das
sub
cmp
fdivrl
pushf
xor
into
icebp
mov
mov
jns
pop
push
add
jnp
xor
pushf
adc
stos
adc
xor
lret
lret
dec
mov
fsubrp
pop
pop
scas
mov
or
pop
into
xchg
cmp
in
dec
nop
mov
repz
xchg
sub
in
mov
les
mov
jnp
sbb
int3
inc
ljmp
xchg
dec
leave
lds
xchg
inc
jg
and
or
jge
mov
aad
cmp
or
pop
and
int3
adc
lods
int3
imul
mov
jmp
cmp
sbb
cmp
mov
push
rorl
pusha
sbb
out
sarb
pop
in
jb
std
ds
cmp
jno
xchg
adc
clc
sub
loopne
data16
lds
scas
jmp
in
mov
mov
mov
push
mov
leave
enter
or
adc
mov
jge
jbe
mov
cmovg
repz
dec
into
and
stc
mov
gs
scas
jnp
test
cli
dec
mov
idivb
loope
inc
mov
fisubl
and
in
add
pusha
aam
movsb
and
les
and
or
and
out
mov
add
xor
pop
ror
stos
jb
test
inc
ljmp
outsb
jae
sti
int3
inc
shll
mov
mov
xor
or
pop
xlat
xchg
inc
inc
jae
push
pop
and
lret
or
js
imul
rorb
push
cmp
inc
fucomip
or
sbb
icebp
sbb
shl
das
push
cli
aad
sub
imul
xor
pusha
sbbl
test
out
cvttps2pi
mov
push
dec
pop
xchg
lahf
es
push
clc
mov
adc
mov
mov
jne
mov
mov
stos
cmc
xor
stos
xchg
lcall
addl
and
push
aam
fldt
shr
test
mov
into
mov
inc
cmp
aad
xor
testb
fdivrl
roll
enter
iret
nop
jo
arpl
stos
push
aam
push
not
lahf
insl
lock
xchg
insl
neg
mov
ret
mov
and
cmpb
xchg
inc
lock
sarb
fbstp
out
in
inc
fcompl
adc
test
stc
stc
mov
test
cli
into
stos
xchg
test
imul
cmp
inc
jno
negb
push
cmp
pop
pusha
imul
mov
test
es
popf
scas
jb
rcll
in
jmp
xorl
push
stos
fisttpl
adc
push
movsl
mov
pop
sub
or
cwtl
fsts
insl
or
sbb
sub
mov
stos
mov
dec
clc
fidivl
fisubs
or
lcall
fwait
mov
sarl
inc
ds
jge
and
push
ss
rolb
and
jne
push
das
outsl
lods
jns
pop
negl
mov
mov
pushl
pop
aad
inc
icebp
sti
mov
rcll
aad
lds
std
data16
das
clc
negl
dec
popf
and
adc
repnz
das
mov
clc
cmpsb
inc
in
adcb
jns
adc
fldenv
mov
iret
loope
popf
dec
out
out
inc
loop
push
fisubl
pop
arpl
mov
mov
lret
sbb
insb
xchg
sbb
sub
das
jo
data16
mov
or
sub
mov
out
cltd
push
lea
inc
dec
mov
gs
scas
add
ret
adc
rol
addr16
addr16
xchg
cmpsl
lret
cmpsl
into
mov
xchg
test
xchg
jo
sbb
mov
fstpt
pop
out
sbb
xchg
test
pop
lahf
xor
cli
shl
mov
stc
test
and
sub
aas
add
test
jmp
les
cmp
loopne
lahf
fs
mov
idivl
repnz
sbb
int3
pop
cmc
jae
inc
lret
mov
mov
or
imul
jp
push
orb
mov
xchg
out
lds
xchg
jmp
pop
sbb
stos
outsb
inc
inc
loopne
pop
cld
or
xchg
xchg
gs
into
cltd
cld
stc
xor
bnd
push
test
inc
hlt
out
sub
push
rcr
ljmp
or
and
cmc
inc
xor
mov
clc
xor
push
inc
out
jne
iret
xchg
adc
xor
lods
lret
sub
pusha
jg
jns
into
stc
inc
adc
fisttpl
pop
test
adc
adc
stos
cmp
test
nop
pop
in
inc
mov
in
loope
push
js
test
stos
and
arpl
and
mov
push
test
stos
sbb
xor
mov
stos
dec
and
xor
ds
dec
mov
dec
mov
mov
out
mov
std
xchg
jb
loope
imul
jmp
jbe
jne
sub
pushf
and
movl
xchg
adc
mul
adc
mov
rolb
shl
std
aaa
push
movsb
add
jmp
iret
sbb
cmp
inc
inc
std
scas
inc
dec
and
adc
sbb
jl
mov
mov
inc
mov
xor
ss
adc
negl
mov
mov
lods
push
mov
mov
je
adc
cmp
lds
cmp
cmpsb
push
add
mov
jbe
aas
lods
jns
jae
notl
pop
lret
pop
mov
add
cmp
pop
and
push
cmp
inc
jno
mov
pop
adc
mov
inc
xor
fsubp
jno
add
std
mov
or
add
dec
fcomp
and
and
jle
pop
hlt
add
cmp
push
inc
push
addr16
mov
leave
jb
and
in
orl
pop
loopne
sub
stos
mov
mov
xlat
and
adc
mov
xchg
pop
push
enter
adc
lahf
push
sub
scas
cmpsb
cmpsl
test
cs
ja
mov
and
pop
xor
addr16
cltd
xchg
sub
xor
and
lods
mov
or
mov
popa
adc
cs
push
jns
inc
mov
push
ss
cmp
or
pop
in
sbb
imul
mov
jmp
in
xchg
mov
jae
and
ret
xchg
pop
xchg
cwtl
lock
idiv
aaa
std
aas
das
and
adc
std
adc
cmpsl
dec
rol
push
stos
ds
roll
sbb
sub
and
shll
lahf
jg
inc
or
push
lea
pop
dec
scas
ficoml
lea
cmp
sahf
add
jmp
sbb
loopne
ds
dec
out
jo
xor
mov
pop
jae
popf
cwtl
xchg
sbb
sub
adc
or
imul
jo
popl
mov
pop
mov
mov
cmpsb
jmp
mov
pop
pushf
shlb
pop
popf
mov
xchg
mov
sub
inc
jae
inc
rcrb
inc
sarb
push
mov
lea
mov
jno
pushf
test
pop
arpl
pop
loop
xchg
xchg
push
mov
shl
and
xorl
test
dec
sarb
scas
mov
stc
cltd
dec
cld
inc
xchg
ljmp
lret
dec
xorl
mov
xchg
leave
testl
test
xor
daa
lret
sbb
dec
and
inc
scas
fildl
push
int
add
mov
and
stos
lret
adc
das
cld
cwtl
inc
add
and
inc
js
arpl
adc
cmp
lret
aam
push
pop
mov
enter
xor
pop
cltd
movsl
out
sbb
enter
inc
cmp
mov
cmp
mov
add
jae
scas
pop
cs
in
or
dec
fistl
scas
inc
test
lret
stos
sub
jnp
faddl
push
jecxz
inc
pop
jns
lahf
mov
lret
int
add
aas
test
dec
push
xchg
mov
leave
mov
out
xchg
icebp
xor
and
mov
int
cwtl
fisubl
push
ret
sub
mov
inc
mov
fs
dec
test
shrl
imul
std
ret
mov
add
mov
xchg
jl
shlb
and
repz
adc
aaa
dec
xor
inc
sub
lret
mov
insl
lret
adc
jl
loopne
fwait
dec
dec
cs
ficompl
adc
out
inc
mov
or
adc
int3
data16
jl
aaa
fs
jae
icebp
dec
scas
lret
sbb
cmp
push
repz
int3
scas
sbb
lret
scas
xchg
adc
pop
xor
jp
cmp
xchg
add
inc
push
cli
sbb
shr
inc
sub
shrb
jb
mov
ljmp
push
adc
push
jecxz
cmp
jmp
pop
push
ss
pop
sbb
sub
aaa
lods
and
loop
cwtl
lahf
dec
mov
testl
les
test
inc
ljmp
mov
jne
xchg
mov
adc
int
int3
adc
add
pop
lds
shlb
mov
xchg
inc
jmp
pusha
adc
mov
jl
or
jb
in
cld
in
xor
mov
scas
xchg
leave
pop
push
insb
jns
mov
xor
cmp
pop
ljmp
pop
sub
add
std
out
pop
stos
inc
fs
rolb
dec
into
imul
aaa
adc
pop
movsl
sahf
incb
repz
sbb
jo
aam
sub
test
xor
iret
jno
adc
inc
fists
pop
cs
mov
lret
jge
mov
rcll
add
xor
jge
or
sbb
inc
jmp
dec
dec
shr
add
sbb
jmp
jmp
adc
dec
jno
xlat
mov
push
jecxz
pop
adc
imul
scas
mov
es
jmp
addr16
enter
bound
add
mov
push
stos
cld
notb
movsb
lea
out
sbb
sbb
scas
and
adc
nop
jle
push
sbb
push
or
call
rorl
scas
sub
adc
shrl
jl
jmp
sahf
ja
sub
popf
cld
fwait
clc
xchg
or
subb
pop
push
les
sbb
repz
imul
stos
jne
fildl
dec
mov
fsubr
xchg
lea
movsl
std
shrb
test
add
std
mov
xor
sahf
aas
pop
nop
loope
sbb
lods
jne
icebp
incl
jecxz
inc
and
pop
cmp
in
rcrl
add
mov
and
scas
pop
mov
mov
stc
or
add
mov
adc
popl
xchg
fcmovbe
sti
dec
fldl2e
mov
jno
popa
std
xchg
inc
sbb
jo
mov
fcoml
dec
adc
or
mov
add
mov
jb
lods
pop
dec
sbb
cmp
inc
aam
and
dec
dec
popa
sarl
jmp
repnz
xchg
sub
jmp
cmc
enter
stc
jle
popf
movsl
push
dec
clc
pop
pop
push
push
xchg
js
icebp
inc
cmp
xor
cwtl
cmp
movsb
addr16
fdiv
rclb
adc
cmpsl
cmpsb
jnp
lret
mov
push
jecxz
mov
loope
repz
inc
lock
cmpsl
and
inc
push
and
mov
lret
idivb
mov
cmp
push
das
shrb
pop
adc
jg
push
fucomp
in
inc
push
or
mov
daa
dec
mov
rcll
pop
mov
and
push
push
mov
mov
adc
lock
in
pop
push
in
mov
test
xor
xlat
adc
pop
dec
clc
or
cmpsl
mov
push
cltd
xor
lret
mov
cmc
dec
xchg
xor
push
imul
mov
out
ljmp
and
cmp
data16
js
cmp
mov
ror
vpmulhuw
ret
push
pop
faddl
add
lcall
add
pop
cmp
xchg
loop
sub
mov
fs
fldt
hlt
xchg
test
mov
arpl
adc
sub
sbb
data16
ss
je
idivl
sbb
lret
fisubrs
scas
loope
aas
out
sahf
mov
in
rorl
mov
aam
adc
dec
js
or
xchg
cmp
sbb
push
call
mov
dec
imul
push
call
mov
test
mov
jne
jle
fnstsw
ljmp
pop
jnp
lock
fwait
je
imul
movsb
pop
repz
out
inc
pop
adc
adcb
adc
stos
clc
xchg
and
mov
ret
jo
xchg
cmp
inc
iret
or
cmp
shlw
xchg
sbbl
icebp
outsb
int
aad
mov
fstps
clc
daa
lret
xchg
add
ret
das
mov
ljmp
sti
mov
cwtl
add
cmp
inc
or
imulb
or
fisttps
pop
pop
cmpl
add
sub
adc
cld
fs
sub
ss
xor
cmp
cmp
or
push
xchg
push
xchg
pop
xor
pusha
jne
push
mov
push
rcl
fwait
sbb
loopne
dec
fisttpl
xchg
jmp
jns
and
add
mov
hlt
aas
mov
jmp
pop
nop
scas
push
mov
out
faddl
mov
jo
xchg
int
out
lahf
sahf
aam
xchg
dec
ret
adc
jno
es
xor
add
mov
fsub
and
push
cltd
inc
dec
pop
pop
cltd
xchg
mov
lods
pop
out
pop
xor
pop
push
adc
stos
out
add
adc
subl
push
negb
popa
int
leave
pop
push
pop
xor
sub
lods
cli
lods
ror
dec
mov
stos
pop
shlb
mov
mov
inc
or
fsubrl
xchg
out
stos
xor
pop
daa
popa
hlt
mov
xorb
pop
jb
jg
mov
nop
sub
and
xchg
cmp
test
inc
repz
xor
jno
or
jbe
sbbb
int
clc
ss
sub
push
loopne
or
jecxz,pt
push
add
xchg
jb
imul
mov
sub
loope
aas
outsb
mov
cmpsl
cld
adc
xor
and
scas
mov
dec
mov
and
subl
in
jle
sub
mov
inc
mov
sub
xor
loop
fstp
enter
dec
lret
and
repnz
notb
sub
or
loop
and
mov
lahf
mov
pop
jg
xor
pop
adc
outsl
rcrb
push
je
push
ret
dec
jne
add
mov
fdivr
int3
xor
imul
hlt
clc
fdivrl
fisubrs
xor
or
push
insl
sub
sbb
ljmp
jp
fldl
dec
mov
cmp
movsb
sar
insl
mov
pop
cmp
pop
je
mov
jge
es
mov
outsb
and
mov
and
in
and
cmp
or
pop
cs
jbe
push
shll
js
adc
lods
hlt
and
bound
or
cld
in
inc
ret
cmpsb
adc
mov
js
je
push
jne
sub
push
lock
divb
push
inc
stc
int3
add
xor
mov
pushf
int
lods
xor
movb
aam
inc
insl
or
lret
and
inc
jmp
cltd
xor
dec
cwtl
lds
jno
stos
mov
pop
lcall
ja
repz
popf
fsts
mov
add
clc
insb
or
mov
pop
fistpl
jns
iret
sbbb
adc
jne
mov
enter
sub
arpl
xchg
sub
xor
mov
test
push
nop
push
adc
out
cltd
mov
mov
or
test
sbb
lock
sbb
aaa
loop
sub
mov
out
pop
leave
lret
xchg
jno
jl
push
cwtl
pop
and
push
adc
xchg
jne
scas
or
push
sbb
ja
rcrb
mov
and
mov
shrb
lret
push
xchg
cmc
bound
mov
cmpsb
mov
loopne
push
mov
std
mov
pusha
outsb
int3
call
xor
mov
adc
mov
jnp
or
sarb
mov
and
jnp
lods
sbb
cmp
lret
scas
stc
xor
mov
cmc
ret
mov
pop
mov
cmpl
test
pmullw
jecxz
inc
xchg
mov
mov
sbb
imul
mov
gs
mov
out
ss
daa
hlt
aad
inc
cwtl
out
fsts
imul
inc
popa
repz
pop
and
mov
mov
push
inc
mov
aad
sbb
out
pop
push
push
int
mov
mov
test
xor
out
shlb
mov
loopne
mov
rcr
movsb
xchg
sbb
imulb
jb
xor
fsts
pop
sub
mov
fmuls
jp
data16
or
in
hlt
push
imull
add
aas
int
xor
dec
clc
xor
pop
inc
andb
ret
scas
test
or
xchg
inc
ss
out
add
jge
push
xorl
icebp
testb
cmp
or
push
popf
adc
mov
inc
cmpsb
dec
ficoml
mov
pop
invd
and
in
shrb
jmp
pop
addr16
outsb
outsl
mov
ss
jge
dec
in
sbb
xor
pusha
pop
dec
loopne
dec
jp
mov
add
imul
jl
js
fldl
cli
imul
ret
jg
js
aam
mov
mov
mov
call
xor
pushf
sub
in
test
pop
outsl
cmp
rclb
loope
jg
out
dec
mov
ret
fmull
call
inc
or
shr
mov
orl
pop
loope
push
push
or
sbb
data16
mov
lret
in
out
inc
cs
sub
arpl
repz
outsb
jae
bound
adc
js
mov
popf
es
fwait
enter
dec
jo
flds
pop
xor
out
sub
inc
mov
es
dec
ds
cmpsb
push
lahf
out
fidivrs
inc
inc
sub
mov
sub
mov
sbb
aas
popa
ds
mov
push
imul
jbe
stos
repnz
pop
or
push
clc
outsb
xor
sbb
loop
js
mov
pushf
mov
mov
pop
arpl
cmc
adc
inc
inc
lret
lods
popa
pop
insl
rcrl
dec
jne
repz
xchg
cmp
push
lods
shlb
je
inc
mov
sub
add
hlt
into
inc
mov
jp
aaa
sub
mov
shlb
cmp
out
movsb
and
call
clc
outsb
dec
xlat
mov
pushf
fsubrp
cltd
xchg
mov
or
pusha
pop
jo
inc
inc
jge
push
cli
and
fsubp
dec
stos
in
mov
jle
dec
adc
mov
fsubrl
in
cmp
jmp
ljmp
mov
repz
orb
xor
mov
loope
and
and
stos
bound
xchg
pop
loop
jecxz
in
mov
push
rorb
lret
rcrl
dec
pusha
jg
iret
pop
aaa
lods
cmpsl
stc
jp
xor
push
dec
jae
cltd
negb
mov
or
cli
inc
add
cmp
es
adc
adc
xor
mov
mov
out
xor
xchg
addb
mov
stos
adc
out
xor
xchg
fistl
mov
mov
out
mov
adc
mov
sub
adc
jl
out
or
mov
xor
imul
and
and
sarl
push
xor
jge
in
lahf
fimuls
push
push
lds
cwtl
dec
mov
mov
push
and
add
addr16
data16
sub
mov
adc
fucom
jmp
jbe
add
movsl
mov
fcomi
pushf
out
mov
push
jge
adcb
cmp
add
lea
xorb
adcl
test
icebp
into
sub
jl
jbe
sub
inc
dec
fcomip
call
stos
cmpsb
pusha
push
shlb
dec
mov
inc
adc
daa
adcl
jle
jg
mov
ret
loopne
test
mov
push
test
mov
pop
ss
aam
push
xchg
pusha
and
js
or
and
je
jne
lea
ja
adc
lds
testb
arpl
cli
hlt
inc
jo
push
je
rorl
repz
xor
pop
jl
or
movsb
push
cmp
lods
pop
mov
sub
pop
bound
sti
xor
cld
test
scas
mov
pusha
cmpsl
sbb
jae
dec
rorb
sbb
push
fldenv
pop
sbb
loop
fmull
into
add
rol
and
daa
sub
and
mov
je
movsl
int
je
or
adc
aaa
add
inc
xchg
mov
in
adc
rol
in
inc
mov
call
sti
outsl
jp
or
push
arpl
sub
sbb
jl,pt
push
and
and
rclb
stos
sti
mov
nop
mov
je
xchg
mov
cltd
or
fmuls
psubb
mov
push
mov
jo
hlt
in
cmp
clc
sub
imul
test
in
push
sbb
imul
dec
xlat
in
inc
jle
fidivrl
ja
mov
test
lret
xor
push
cwtl
ds
or
push
int
clc
mov
scas
dec
stc
pop
mov
push
bound
ljmp
pop
cld
jmp
or
jne
cmp
pop
lcall
jmp
scas
push
pop
push
xor
sub
sub
sbb
addr16
aad
mov
mov
idiv
stc
movsl
jb
sti
popf
xor
pusha
std
and
xor
popa
add
mov
fst
imul
adc
imul
xor
fcomp
aad
xchg
inc
mov
cbtw
enter
movsb
scas
pop
push
movsb
into
int
lods
lds
fiadds
cli
mov
xor
scas
mov
daa
popa
dec
xchg
push
cmp
scas
push
cli
in
js
sub
add
testb
rcrb
and
jmp
aas
cmp
xor
in
pop
add
mov
iret
lods
mov
and
test
adc
movsb
scas
and
sub
notl
dec
dec
outsb
jp
mov
out
ffree
outsl
lahf
push
icebp
into
mov
dec
push
xchg
mov
jbe
xchg
pop
out
pop
inc
fisubrl
mov
inc
push
push
and
push
rclb
out
iret
daa
test
pop
js
mov
sti
sahf
popf
jecxz
sub
adc
outsl
sbb
mov
popf
xchg
and
inc
les
into
cmp
mov
xor
popa
in
stos
pop
pop
pop
mov
sub
sti
test
add
sahf
insb
push
cltd
lds
test
xchg
and
ljmp
adc
lea
jae
fisubrs
add
in
adc
adc
or
xorb
daa
cld
mov
dec
pop
mov
cmpsl
dec
adc
jecxz
mov
mov
aad
mov
mov
push
fmull
popa
test
mov
jge
sbb
xor
mull
push
lcall
mov
sub
xor
xor
sbb
imul
into
es
cmc
adc
stos
sub
mov
push
mov
ret
js
add
pop
cmc
cmp
xchg
sbb
pusha
es
lock
sbb
dec
in
jno
test
pop
add
jns
pop
mov
in
mov
xchg
shlb
sub
cmp
add
jae
xchg
cmpsb
sahf
add
fistpll
fwait
gs
jecxz
loope
into
int
mov
push
out
or
push
inc
jnp
fwait
mov
jle
imul
inc
ret
xchg
cwtl
outsl
mov
mov
mov
mov
pop
and
push
xchg
arpl
test
insb
or
int
add
lcall
sub
add
out
pop
jge
and
fwait
dec
sbb
in
loop
mov
mov
pop
push
mov
popf
mov
ret
std
inc
ret
in
fistpll
xor
das
addb
cmp
neg
pop
sub
insl
adc
rcll
and
cmp
and
and
xor
cmpsl
inc
xchg
adc
les
lea
ljmp
lods
mov
clc
mov
or
pop
stos
xor
push
call
lods
ljmp
sbb
adc
and
jp
fildl
jge
and
lods
pop
adc
mov
push
sub
adc
add
and
addr16
pop
test
xor
pop
clc
popf
push
xchg
cmpsl
sbb
stos
push
sbb
sub
lahf
push
stos
push
inc
cmpsl
mov
add
cmc
std
mov
pop
in
jo
sahf
fs
mov
cmp
and
mov
and
loope
sub
pop
xchg
pop
std
out
jbe
jg
in
inc
out
lahf
popa
pop
aaa
jp
out
in
fcmovnbe
test
pop
pop
cmp
ljmp
mov
cmpsb
outsb
lcall
scas
mov
aaa
fs
cld
jg
fildl
insl
jl
aam
sub
sti
mov
sub
pop
fsubl
es
mov
xchg
xchg
clc
xchg
shlb
cmp
imul
push
adc
out
sub
push
jecxz
loope
pop
lcall
repnz
push
and
movsl
or
fldl
iret
mov
mov
and
mov
icebp
dec
inc
and
aas
xor
cmpsb
push
inc
repz
jmp
jge
ss
cs
push
cmc
cmc
xchg
icebp
lods
push
sbb
mov
sub
xlat
daa
fldcw
sbbb
sub
les
ss
add
or
jmp
sbb
xchg
sub
cli
scas
mov
adc
mov
outsl
mov
daa
sbbb
xchg
push
cli
xor
jne
iret
dec
hlt
dec
add
pop
arpl
mov
inc
cmc
lods
nop
sahf
xor
mov
test
jnp
push
fs
mov
mov
mov
test
or
cmp
mov
fists
hlt
xor
fadds
sbb
in
aaa
cmp
rcrb
adc
fsubl
xor
mov
push
and
mov
insl
or
orb
jo
mov
je
lret
cmpsb
movsl
sbb
push
stos
call
inc
pop
mov
dec
xchg
test
xlat
mov
roll
aaa
lods
push
xchg
ds
idivb
mov
push
and
arpl
or
add
jo
cltd
std
inc
popa
outsb
mov
mulb
cmp
js
mov
dec
nop
add
test
mov
or
imul
sub
rorl
jge
movsb
mov
std
shr
mov
cmp
jle
and
dec
push
sub
js
in
cmp
movb
repz
jnp
pop
aas
arpl
fwait
xchg
xor
xor
fnstsw
mov
data16
in
dec
movsb
jb
jle
insb
mov
sbb
push
or
adc
rcr
out
imul
insb
fistl
sahf
sbb
inc
push
cmp
in
out
jne
adc
pop
xor
xchg
movsb
mov
pop
lahf
mov
inc
mov
daa
dec
add
repnz
aas
dec
jle
sbb
dec
cli
aam
or
xchg
xor
into
xchg
mov
sbb
enter
push
lea
fisubrl
pop
adc
mov
add
int3
cltd
cmp
xlat
sti
mov
push
cmp
dec
sbb
cmp
pop
xor
or
pushf
mov
push
jecxz
cmp
imul
pop
pop
pop
pushf
sub
std
inc
jne
lret
mov
xchg
outsl
xchg
out
mov
nop
rcrl
aam
rcrb
cmp
jae
in
cwtl
lods
ljmp
les
roll
pop
fcompl
xor
cmp
sahf
outsl
mov
repz
ret
mov
mov
inc
xchg
rclb
push
jbe
pop
fmull
idivl
push
dec
insl
sahf
aad
inc
shlb
push
rcll
cmp
cmc
hlt
pop
push
js
pushf
xor
fisubs
int3
jp
push
xchg
dec
cmpsb
lea
mov
xor
insb
add
xchg
sub
fs
insb
sbb
xor
push
pop
test
sub
mov
popf
dec
add
xor
dec
movsb
xchg
jle
in
push
subl
and
in
idiv
mov
lods
and
nop
aas
pop
pop
dec
pop
cmp
xchg
loopne
inc
test
gs
mov
or
adc
dec
push
jl
aad
sub
testl
testb
or
push
rorl
jg
xchg
fidivs
pop
mov
add
sub
aam
call
push
sbb
inc
lcall
in
in
dec
pop
aad
mov
sbb
pop
aas
add
loop
inc
and
pop
scas
or
movsb
orb
dec
dec
call
add
call
sarb
sub
add
add
jns
in
ljmp
mov
imul
mulb
dec
inc
ds
jge
insl
sub
insb
scas
mov
and
push
jb
cmp
jns
insl
push
test
roll
mov
outsl
fdiv
insb
nop
cmp
into
push
mov
or
adc
int
ret
dec
cmp
xor
fldl
mov
add
cli
adc
or
mov
dec
inc
cmc
aas
je
hlt
or
pop
rorl
xchg
scas
lahf
inc
xchg
popf
cmpsb
mov
repnz
fidivl
enter
addr16
lahf
popa
cwtl
insb
testl
lea
es
jge
jg
popf
cmp
jo
push
push
pop
imul
cmpsl
mov
pop
inc
mov
adc
fistl
sub
sbb
mov
jmp
and
cwtl
mov
push
cltd
jns
xor
pop
or
mov
in
pop
jge
cmp
mov
call
fadd
lods
hlt
push
cmpsl
mov
sub
mov
loope
es
xchg
fiaddl
jb
jmp
cli
lret
fs
and
xchg
mov
or
pop
or
fisubrl
pop
js
jl
inc
push
rclb
pop
dec
cmp
jno
fiaddl
mov
test
sub
sbb
mov
adc
add
sbb
mov
ficomps
jg
mov
leave
inc
loopne
daa
mov
xor
iret
pop
imul
dec
jg
xchg
outsl
cmp
or
sbb
movsb
mov
movl
ss
push
adc
jns
pop
jp
rorl
mov
repz
paddsw
mov
and
add
add
pop
int3
and
sbb
push
mov
jno
data16
mov
rcll
fsub
adc
aaa
pop
sti
mov
push
stos
xor
negl
out
lods
add
adc
or
or
imul
je
in
fisttps
fldt
and
push
jns
mov
movsb
shrb
imul
dec
push
sti
mov
imul
int
pop
mov
in
pop
repz
mov
and
gs
mov
fdivr
pop
popa
dec
inc
cmp
and
fisttpl
mov
or
imul
cltd
loop
pusha
mov
sbb
fdivrp
enter
xchg
and
incb
ljmp
cmc
mov
adc
push
into
mov
jg
jnp
pusha
pop
jnp
jecxz
orl
repnz
fs
push
data16
or
mov
shl
cmpsl
inc
inc
push
hlt
loopne
cld
push
jbe
ret
inc
loope
inc
and
ds
movsl
push
sub
inc
pushf
mov
jae
mov
out
xchg
mov
sti
sti
scas
push
mov
jge
xorb
pop
lods
testb
test
mov
push
cwtl
aam
sbb
out
mov
shl
test
inc
hlt
xor
pop
pusha
or
fs
sbb
test
imul
sbb
xchg
pop
repz
mov
pop
testl
dec
out
test
pop
push
ret
jmp
inc
sar
ljmp
pop
in
movsb
js
xchg
push
add
mov
mov
fiadds
mov
clc
push
sarb
cmp
add
aaa
out
mov
inc
js
scas
lds
arpl
pop
mov
jbe
jge
xorb
push
rolb
inc
or
mov
out
dec
aad
mov
push
pop
pop
movsb
shl
lods
push
scas
subl
inc
mov
jno
mov
ficompl
sbb
cmc
dec
xchg
dec
loopne
lods
aas
out
sub
pop
sbb
out
and
std
add
sbb
jo
push
pop
xor
push
popa
ljmp
icebp
inc
dec
jne
sbb
and
incb
jmp
out
out
sub
xchg
or
push
je
ja
clc
sub
ja
mov
or
mov
aam
mov
popa
lea
mov
popf
ror
lock
mov
sbb
rorl
idivl
cmc
imull
scas
stc
mov
fs
adc
int
mov
sub
xchg
clc
dec
mov
subb
sbb
add
fidivrs
std
add
cmp
js
cmpsl
in
push
es
push
das
iret
push
adc
in
cld
ret
fwait
jno
pop
ret
mov
sub
fs
nop
cmpsl
idivb
cmpsb
inc
mov
sub
sbb
cmp
loop
aaa
std
mov
scas
inc
std
rcl
lock
ds
loope
sbb
cmc
sbb
stos
sbb
stc
push
push
imul
jo
rolb
jmp
sti
fld
pop
mov
mov
jns
or
or
stos
ss
dec
mov
dec
dec
push
sbb
jo
push
outsb
push
inc
js
adc
sbb
in
outsb
adc
and
imul
cmp
sbbl
mov
int
jp
add
seta
mov
xchg
add
pop
or
dec
sbb
cmp
pop
lods
mov
fsubrs
pop
cmp
mov
loop
nop
mov
sbb
sbbl
aaa
negl
in
out
loope
cltd
fwait
adc
sti
lcall
repz
lahf
or
and
addl
mov
sbb
repnz
lock
or
cmp
imul
and
outsb
pop
jecxz
pop
int3
mov
xchg
mov
inc
fldt
in
sub
xchg
mov
inc
or
jp
sub
outsl
cmp
mov
add
popf
mov
inc
aam
adc
xchg
pop
inc
mov
or
inc
xchg
test
mov
rcl
mov
mov
or
cld
testb
add
mov
or
or
sub
cmp
addr16
rcrb
cmc
insb
sbbb
lret
or
rorb
dec
sbb
cmp
ret
jbe
sub
dec
fildl
ret
xlat
jae
clc
fidivl
test
sub
mov
hlt
mov
fsubrs
mulb
dec
pop
jnp
push
in
dec
into
jae
mov
sti
add
cmpsb
mov
push
dec
jl
mov
insb
cmp
fs
mov
or
pop
lgs
shrb
push
rcrl
xchg
push
dec
jnp
push
fidivl
sub
rcll
inc
fstenv
movsl
into
gs
mov
std
pop
push
sahf
pop
test
idivl
mov
aam
daa
scas
rcrb
test
lods
lret
fdivl
sbb
fdivrs
push
cmp
imul
sbb
jb
negl
ret
lds
inc
in
jbe
push
aaa
movb
out
dec
sbb
inc
fcmovbe
sbb
xor
lods
fs
fs
sub
jg
push
lods
ja
sahf
sbb
mov
dec
loop
outsl
cmc
adc
cltd
or
loope
fnstcw
leave
xchg
mov
or
pop
xchg
sub
xor
out
scas
cmp
xchg
nop
aas
mov
cmc
xor
xor
adcl
jp
push
mov
push
arpl
loopne
adc
imul
dec
mov
adc
icebp
or
xchg
jo
push
mov
fcompl
and
xor
jb
scas
xchg
lret
adc
sbbb
sti
or
bound
push
int3
aad
and
in
pop
movsb
cmpsb
sub
fnstsw
pop
int3
dec
pop
push
xchg
pop
adc
daa
cwtl
jne
sti
stos
mov
insl
mov
push
mov
sbb
out
sub
out
jb
fisubs
or
mov
push
adc
es
pop
mov
lcall
pop
xor
mov
ffree
mov
mov
popf
dec
mov
roll
test
notb
sar
loopne
or
call
jnp
inc
inc
or
bnd
or
adc
jae
mov
xor
adc
int
loope
lret
fisubl
in
push
mov
lret
cmp
and
mov
push
and
cmc
add
sub
xchg
fistl
adc
cmp
scas
sub
imul
pop
jae
loopne
mov
sbb
lret
and
pop
sub
shl
scas
xor
gs
jno
sti
lea
ret
sbb
ss
xor
int3
or
repz
stc
adcb
mov
jmp
out
cli
push
movl
sub
imul
in
push
fucom
int
add
mov
je
or
dec
sub
jno
pop
addr16
xor
repnz
pop
jecxz
rorb
push
mov
aaa
aad
repnz
add
nop
jge
fldenv
iret
inc
mov
into
fwait
xchg
sub
insl
xchg
cmc
push
repz
fimuls
pop
ds
sbb
sbb
insl
sub
das
jle
rclb
cmp
push
dec
add
add
push
enter
fisttps
shr
dec
clc
jl
inc
jmp
jecxz
lock
cmp
mov
sbb
into
lods
inc
in
xadd
lahf
xlat
jb
int
cmpsb
cltd
fcompl
mov
mov
mov
xchg
fmul
cmpsb
xor
sbb
and
pop
int
push
cmovae
insl
cmp
mov
inc
out
mov
push
cmp
mov
push
mov
mov
popa
cli
std
dec
cmpsb
daa
inc
in
push
inc
xor
or
push
xchg
jne
sbb
bound
addr16
add
test
xchg
cli
or
xor
cmpsb
add
int
ret
and
cmp
dec
sbb
sbb
sub
or
into
add
popf
lcall
sti
xor
xchg
testl
addl
jns
repz
or
xlat
push
out
out
movsb
pop
jge
rorl
sub
dec
push
sti
mov
sub
dec
jno
aam
mov
jmp
gs
pop
mov
imul
data16
push
push
sbb
inc
jno
popf
pusha
stos
sub
cmp
cmp
mov
push
or
cmp
cmc
int
adc
xchg
push
rcrl
mov
xchg
and
and
inc
js
lock
int3
mov
outsb
test
dec
clc
hlt
push
mov
js
xor
movups
add
lock
mov
and
add
jecxz
fstpt
cmp
lcall
jmp
notl
mov
dec
mov
jle
push
mov
xchg
fwait
les
mov
cs
enter
dec
xchg
sub
lods
mov
mov
jmp
leave
push
pop
fxch
mov
in
and
push
xchg
fists
hlt
mov
mov
es
sub
sub
scas
mov
repnz
or
das
lret
fildl
cmp
call
mov
loop
ljmp
sub
enter
pop
lea
push
sti
mov
xchg
jle
cmp
xor
addr16
pop
jne
pop
inc
cmp
xor
ret
sti
rcr
nop
add
gs
out
fdivs
pop
jb
shll
lods
jns
or
pop
jmp
sub
and
mov
sahf
sub
mov
xor
aas
jl
fwait
outsb
mov
sub
jle
cmp
or
lods
repnz
adc
jnp
add
push
jo
std
adc
mov
dec
pop
push
bnd
ror
or
movsl
outsb
mov
xchg
scas
mov
pop
mov
out
or
pop
pop
mov
jo
pop
mov
and
xchg
pop
daa
add
inc
mov
arpl
sahf
adc
xor
dec
and
and
xchg
scas
or
add
mov
movsb
out
pop
sbb
cmpsb
lds
int
cs
sub
and
add
xchg
pop
or
fcoms
mov
cmp
mov
dec
push
xchg
adc
adc
add
cmc
xorb
in
stos
mov
jno
dec
stos
out
nop
cmp
movsl
rcl
daa
fdivs
xchg
dec
aaa
outsl
jecxz
dec
lods
mov
fcos
and
adc
notl
mov
jle
test
fwait
cld
fwait
sbb
adc
aam
mov
loope
xorb
test
aam
mov
shll
add
mov
pop
inc
mov
pop
mov
fdivs
mov
repz
sub
sbb
xchg
popl
insb
pop
pop
jnp
adc
push
inc
jo
xchg
insb
dec
inc
pop
test
test
mov
out
jae
popa
movsb
imul
stos
or
and
cmp
ja
dec
addr16
add
leave
mov
push
pop
popl
adc
test
imulb
xchg
xchg
in
outsb
and
xorl
sub
xor
mov
call
adc
inc
or
sahf
pop
movsl
xchg
xorb
cmp
jecxz
cmc
out
jae
mov
jnp
sbb
xchg
mov
hlt
int
xor
test
mov
ret
popa
mov
scas
inc
testl
cli
fistps
in
enter
add
cmp
in
lock
xchg
cmp
cli
or
dec
jle
je
or
mov
or
add
sub
popf
inc
mov
jmp
es
jns
fisttpll
lret
loop
incb
rcr
ret
imul
xor
das
pop
mov
mov
mov
push
mov
lcall
xlat
roll
cwtl
fldenv
pop
movsl
lret
lret
pop
out
mov
and
adc
sbb
push
lcall
ds
push
inc
rolb
inc
mov
sti
and
dec
dec
sub
shl
outsl
clc
add
das
notb
fmul
cli
cld
inc
push
lods
js
ja
xor
insb
div
out
push
add
mov
adc
sub
mov
sarl
push
adc
jmp
xor
pop
push
lds
adc
inc
or
mov
lock
pop
subb
add
jno
in
xor
popf
stos
out
loop
int
or
aaa
lret
inc
mov
xchg
push
push
jno
inc
in
shlb
pop
fsts
fmulp
inc
adc
loope
pop
sbb
or
mov
jecxz
xor
and
adc
addr16
mov
jo
inc
clc
cli
mov
xchg
repnz
or
and
aam
dec
mov
xchg
loopne
adc
popf
or
cmpsb
test
fs
cld
mov
inc
mov
ja
xchg
adc
jo
cmp
push
in
call
inc
mov
push
push
xor
xchg
lea
xor
mov
cmp
adc
push
dec
mov
mov
pop
fs
pop
xchg
call
decb
mov
test
add
shrb
cmpsl
sub
and
mov
mov
out
and
out
pushf
jp
gs
mov
dec
lock
test
loop
aam
jecxz
xor
adc
cmp
sub
subl
xor
add
dec
iret
daa
je
cmp
mov
add
fists
mov
out
mov
mov
lahf
xchg
pop
cli
mov
int3
pusha
add
enter
xor
fnstcw
ret
sub
fsubrs
mov
adc
out
lea
pusha
mov
movsb
sub
dec
insb
sbb
daa
push
sbb
xchg
cmp
push
pop
mov
jno
ds
mov
cwtl
push
je
lret
pushf
add
imul
and
mov
pop
addr16
xchg
mov
rorl
add
push
mov
fcoms
fcmove
clc
loope
lock
mov
es
pop
sub
jp
sub
lods
ja
stos
xor
pop
cmp
mov
ja
xchg
lcall
inc
and
shll
adc
pusha
aad
or
mov
pop
cmpsb
push
fwait
dec
ja
mov
ds
je
and
dec
call
data16
push
or
lea
sub
add
mov
aam
loopne
cmpsl
xor
fst
jg
rolb
cmpsl
sub
incl
sbbb
jno
test
inc
mov
loope
cmp
mov
repz
test
nop
jae
add
je
shl
sbb
inc
xor
out
aam
leave
cli
hlt
and
hlt
cli
push
cs
lcall
adc
jmp
mov
popa
cld
push
call
mov
fwait
inc
mov
sahf
leave
fwait
xchg
stc
adc
popa
gs
push
push
mov
pop
xadd
push
cmc
push
mov
dec
push
movsl
mov
xchg
mov
cmpb
add
sub
jg
or
dec
push
cwtl
jbe
xorl
sub
push
mov
jmp
ja
sub
cmp
xchg
lock
and
xchg
jecxz
mov
clc
xlat
dec
fimull
out
loopne
pop
jno
pop
xchg
jp
xor
je
pop
push
xchg
sub
dec
mov
aam
leave
dec
jbe
fwait
push
push
roll
movsb
pop
sbb
add
add
shrb
mov
enter
adc
fmull
xchg
sbb
jmp
ds
pop
cld
xchg
into
sti
mov
out
lods
nop
pop
pushf
scas
es
sbb
pop
aaa
pusha
out
hlt
in
std
aam
add
sbb
subl
ja
adc
inc
popa
out
nop
outsl
mov
jp
xor
mov
arpl
mov
cmpsl
fistl
dec
sbb
repnz
ljmp
xchg
inc
mov
cli
push
lret
int3
xor
xlat
inc
xchg
popf
sbb
sysenter
cmp
sbb
out
pusha
cmc
inc
stos
cld
inc
inc
andb
pop
sbb
int3
inc
mov
jl
adc
mov
or
frstor
xor
mov
pop
rcrb
out
rcrb
aam
xor
add
fbld
cltd
mov
pop
cld
adc
jmp
dec
xchg
xchg
insl
pop
mov
cmp
sbbl
push
data16
repz
roll
xchg
testl
mov
cmp
push
sub
mov
mov
mov
push
cs
jmp
jns
ja
out
aas
adc
lock
add
lods
dec
mov
jns
lock
sub
push
jbe
push
in
addr16
pop
int3
nop
adc
mov
into
pop
cld
int3
pop
mov
adc
outsl
je
clc
leave
fiaddl
xor
ret
dec
cmp
imul
jecxz
or
daa
das
sub
lock
test
mov
and
in
addl
mov
inc
call
push
xor
push
jnp
add
sub
cltd
add
mov
test
mov
jecxz
jno
fisubrl
sbb
inc
push
sub
cmp
in
xchg
cwtl
xor
xchg
xchg
cltd
in
fimuls
loopne
popa
incl
inc
cs
jno
pushf
fsubl
inc
in
add
popf
icebp
fnstsw
mov
cmp
rclb
fs
ss
mov
lock
sub
repz
add
dec
pop
cmova
pop
dec
mov
jmp
mov
sbb
inc
fidivrs
ja
dec
outsl
adc
pop
lods
mov
mov
repnz
js
ss
pushf
sarl
je
push
and
adc
pop
pusha
clc
dec
iret
or
fmul
loope
aam
cmp
in
ljmp
lds
cmovg
push
xchg
fs
in
mov
aas
in
dec
jnp
lret
jp
call
fisttps
sbb
mov
xor
leave
lods
ret
test
out
cmpsb
outsl
adc
pop
cli
dec
add
and
mov
fs
dec
mov
push
cld
mov
mov
outsb
insl
ror
xor
push
xchg
hlt
aas
pop
xchg
xorb
icebp
jo
ret
pop
xchg
inc
popf
sbb
sbb
rolb
outsb
cmp
into
ret
pop
mov
dec
outsl
stc
pop
pop
dec
das
push
push
mov
movsl
dec
fiadds
test
add
fidivl
sub
mov
insb
mov
inc
push
and
stc
mov
mov
enter
jnp
jmp
xchg
cmpsl
insb
lcall
out
mov
dec
cmp
or
pop
or
xchg
xor
mov
sbb
clc
mov
and
sbb
xor
push
adc
mov
fs
adc
clc
lock
cld
aaa
add
aad
mov
pop
stos
sub
xchg
rolb
movsl
mov
pusha
inc
or
xorb
jge
jae
sarb
mov
scas
adc
out
std
cmpsb
push
cmp
sahf
push
pop
movsb
push
inc
push
les
add
push
je
lock
dec
jmp
addr16
fbstp
cmp
or
stc
je,pt
loope
ret
lcall
outsl
dec
rclb
jg
jp
push
sub
fsubl
jecxz
out
jae
loopne
sti
mov
ficomps
sti
aaa
add
fistpll
lea
or
fwait
mov
inc
xchg
std
icebp
or
aas
es
fists
add
mov
mov
aam
mov
mov
repnz
jb
mov
mov
dec
ja
call
and
out
outsb
mov
xchg
jl
pop
xchg
js
sbb
mov
loopne
test
gs
js
and
mov
adc
or
cli
pop
mov
push
cmp
out
dec
mov
mov
adc
repnz
add
insb
stc
shl
jmp
inc
push
fucomp
sub
imul
es
in
inc
pushf
jno
and
xor
pop
stos
jmp
push
pop
inc
and
push
push
pop
dec
dec
cwtl
shll
push
sahf
xchg
mul
stc
inc
or
insl
cmpl
movsl
pop
fisubrs
and
mov
cltd
inc
fbld
or
cmp
dec
outsb
push
mov
inc
xor
je
addl
mov
xchg
mov
or
pop
jns
nop
sbb
jl
test
imul
fisubrs
lahf
pop
jle
and
fcom
xor
add
in
jne
or
push
loope
sub
xchg
adc
push
push
sbb
dec
cmc
int
jmp
bound
dec
neg
sti
sbb
and
rclb
loopne
andl
aam
cli
push
insb
repz
lret
jle
cli
pop
push
jl
imul
and
les
cmp
insl
iret
xlat
outsb
ss
scas
loopne
fldcw
es
cwtl
imul
lret
in
mov
add
sub
and
aad
and
xchg
dec
lret
prefetchw
mov
xchg
ja
add
popa
push
mov
xchg
mov
inc
pop
leave
nop
aaa
xchg
sbb
rcll
in
repz
cmpsl
pop
mov
xchg
scas
push
rcrl
push
cwtl
xchg
leave
arpl
rolb
add
imul
out
push
jl
rol
dec
jge
jbe
jnp
adc
jmp
pop
mull
push
mov
cld
lret
pop
xor
xchg
pop
sbb
fdivrl
aam
xor
push
mov
ja
lock
fisubrs
jb
scas
test
mov
insb
cwtl
push
loope
das
mov
sub
add
in
daa
movb
iret
pop
mov
jne
push
cmpsb
mov
mov
negb
jmp
shrb
out
pop
inc
cmpsl
ja
fiadds
sub
fwait
xchg
in
xchg
pop
test
mov
sahf
popf
repz
outsl
cmp
jnp
mov
je
pushf
je
jb
or
cmp
dec
dec
arpl
cltd
lea
inc
xchg
xor
pusha
mov
leave
int3
lods
mov
in
or
vpshuflw
stos
js
jns
adc
sub
add
popf
aam
enter
les
lods
mov
mov
dec
push
xchg
mov
jb
cs
and
jmp
ljmp
clc
jp
sbb
stos
sub
jge
pop
mov
ror
scas
fsubrl
adc
aas
mov
push
cmp
xchg
xchg
mov
or
xlat
xchg
jnp
pop
cmp
jle
jmp
je
dec
aam
or
pop
jmp
adc
add
sub
or
outsb
push
aam
push
xchg
xor
cmpsb
xchg
aaa
movsb
fldcw
roll
adcl
jbe
call
jne
aam
mov
adc
mov
call
mov
daa
sbb
pop
inc
mov
addr16
out
adc
testl
mov
sbb
gs
bound
jp
shl
mov
movsb
mov
lods
pop
dec
or
hlt
add
std
mov
add
movsb
adc
imul
sahf
xor
shll
add
sbbb
daa
fcomip
lahf
imul
xor
mov
nop
lahf
js
pop
sub
negl
xchg
stos
movsl
das
pop
in
dec
xor
and
push
and
js
adc
jp
xchg
leave
int3
rorb
cmp
pop
sub
jbe
or
shlb
imul
xchg
icebp
mov
xor
out
mov
lds
xlat
mov
add
int
jle
push
jg
or
push
bound
dec
jp
iret
idivb
xlat
push
pop
pop
mov
mov
les
and
sti
in
xchg
inc
ret
popa
and
push
push
mov
mov
fs
lea
jb
dec
insl
mov
ret
inc
fldt
dec
jo
dec
and
clc
js
int3
lret
scas
popf
jns
push
test
pop
cmpl
neg
or
add
std
sbb
sub
pop
fwait
les
sub
dec
or
lea
mov
pusha
clc
mov
hlt
sbb
push
inc
inc
sbb
cs
mov
dec
mov
and
xlat
mov
push
adc
mov
jmp
add
sub
inc
xchg
adc
cli
aam
adc
jp
sub
mov
mov
adc
js
int3
push
push
sub
add
cli
jg
popa
emms
xchg
mov
dec
into
mov
xchg
adc
sub
mov
repz
lds
jg
sub
xchg
das
jb
mov
push
aam
xchg
stos
mov
xchg
out
mov
aas
mov
sbb
es
lahf
mov
xor
cmpsl
andb
js
lret
enter
iret
gs
sub
jg
xor
imul
js
xchg
test
daa
sti
ljmp
mov
out
out
jge
clc
cld
jns
push
dec
cwtl
and
fsubl
jnp
pop
rorb
jle
push
push
dec
pop
cmp
scas
lcall
out
inc
and
jecxz
cltd
jo
pop
dec
shrl
xor
cs
sbb
popf
test
add
stc
mov
je
fsubs
add
jne
adc
fsubl
mov
pop
icebp
sti
push
scas
or
adc
cli
add
stc
sub
push
cmp
lea
shrl
adc
or
inc
in
pop
sub
ja
mov
mov
test
pop
dec
mov
mov
jl
in
sbb
dec
loop
ss
push
mov
adc
inc
out
subb
ljmp
insb
and
in
xor
mov
ljmp
lret
xchg
push
dec
xor
dec
jecxz
jb
iret
fsubs
pop
gs
imul
xchg
mov
push
pop
cmp
pop
gs
stc
fidivrl
aas
out
xchg
inc
subl
xor
adc
std
arpl
mov
and
addb
push
sbb
adc
or
fnstcw
aad
xchg
or
pop
or
fwait
inc
icebp
xchg
pop
sub
jg
push
inc
pop
roll
ret
jge
push
cmp
and
add
xchg
arpl
cmc
or
fstp
enter
mov
inc
sub
adc
mov
add
jo
das
jp
add
fs
pop
ds
in
push
inc
mov
push
loop
insl
nop
pop
jb
cld
add
pushf
inc
sbb
dec
fsubr
or
add
out
xor
flds
inc
rcrb
int
outsb
jecxz
lods
cmp
mov
jl
mov
xor
xor
mov
adc
inc
enter
loope
dec
mov
pop
movsl
or
pop
push
xor
insl
sbb
xor
repnz
mov
into
stos
push
add
pop
xchg
inc
xchg
in
jl
xor
add
out
bnd
inc
cmpsb
sbb
into
jmp
xor
cmc
and
inc
cmp
ds
xor
cltd
push
shrl
popf
rorl
aam
push
lock
and
iret
jge
xchg
inc
cmp
jmp
or
inc
sub
stos
sub
push
lret
or
movsb
mov
data16
mov
mov
pop
pop
test
lahf
loop
sbb
jno
adcb
xor
inc
cmp
or
mov
pause
loop
dec
movsl
fwait
ret
jne
aas
push
pop
cmpxchg
or
and
dec
jge
enter
fsts
add
or
test
pop
nop
leave
mov
mov
pushf
push
fdivrs
dec
mov
rcl
outsb
js
pop
inc
sahf
sub
fs
shld
pop
shll
adc
in
test
inc
sahf
sbb
nop
xchg
adc
mov
imul
ljmp
aam
sub
in
adc
in
ret
lret
scas
ret
mov
inc
cmpsb
push
or
cmpsl
adc
mov
or
inc
push
lcall
shrb
inc
mull
stc
push
jnp
pushf
std
or
jns
push
addr16
lods
xchg
out
inc
stos
xchg
andb
lock
lret
leave
sbb
pop
cmpsl
cli
sub
and
fiadds
fisttps
add
add
lods
nop
stc
inc
mov
ss
jle
into
lods
sbbl
dec
outsb
mov
mov
jne
mov
dec
loopne
push
aad
jb
xor
xlat
push
lods
pop
ds
lock
icebp
insb
dec
mov
xchg
pushl
gs
loopne
imul
mov
outsl
push
xchg
fisttpll
hlt
inc
xchg
sbb
sysret
rclb
scas
and
lds
sbb
mov
push
pop
xor
mov
lods
sbb
sbb
cmpsb
push
jecxz
mov
adc
hlt
loope
in
xor
push
lret
jle
js
jmp
mov
int
arpl
mov
lods
and
xchg
xor
cmpl
bound
std
leave
fs
mov
sub
pop
jle
jo
inc
cmp
imul
push
aam
dec
insl
or
call
loop
dec
movl
or
xor
testl
std
or
ljmp
mov
cli
pop
mov
push
adc
int
xchg
mov
es
lahf
int3
cltd
out
popf
rcrl
mov
jmp
inc
nop
and
and
and
cmp
sti
pop
cmc
cli
add
iret
pop
mul
andl
cld
cld
pop
cli
sbb
outsb
add
mov
jbe
dec
xorl
xorb
ret
movsb
das
hlt
xchg
scas
lret
dec
and
loop
mov
addr16
sub
fs
cmp
mov
mov
stos
pop
xchg
stos
or
scas
cmp
jns
aam
cmp
mov
xchg
inc
scas
mov
or
fdivl
fdivs
lods
lret
mov
cli
pop
jne
daa
stos
jbe
and
bnd
sbb
movsb
daa
pop
pusha
jmp
xor
imul
lahf
aam
test
mov
fisubrs
fisubs
adc
inc
add
out
sbb
mov
pop
mov
jge
add
pop
cmp
and
and
into
jo
push
dec
mov
stos
rorl
std
and
or
mov
inc
pop
fmul
pop
test
mov
repnz
mov
xchg
aad
iret
lcall
sbb
test
xchg
and
popf
sub
and
enter
aas
inc
xor
movsb
sarl
sub
inc
movb
mov
cmpsb
push
cli
dec
leave
shll
sub
xchg
xchg
lret
stos
cli
out
cmp
divl
ds
mov
fnstcw
mov
xlat
jp
push
mov
pop
push
rcrb
cmp
lahf
mov
add
inc
iret
ja
mov
lock
in
ja
in
mov
cmp
mov
stos
jns
sub
and
and
loop
ret
xlat
adc
xchg
mov
add
sbb
icebp
cmp
mov
test
negb
dec
xchg
lahf
add
or
xchg
mov
jno
and
fnstsw
mov
lahf
sti
lods
xchg
cmp
test
push
and
cwtl
xchg
cmp
negb
cmc
mov
add
and
daa
jge
ja
arpl
cmp
enter
das
daa
sub
push
out
xor
add
rcr
out
ret
lods
or
dec
dec
int
rorb
cli
xlat
jp
lcall
mov
xchg
inc
lods
mov
mov
outsl
add
pop
add
aad
pop
dec
lock
arpl
inc
adc
push
pushf
mov
cmp
loop
movsb
sbb
and
dec
test
rcrb
inc
adc
adc
cmp
sub
inc
lea
jecxz
lret
addr16
jp
imul
je
and
push
cmp
leave
std
aas
stc
imul
fiadds
in
and
sub
or
std
call
test
xchg
inc
test
xor
adc
push
leave
inc
jl
outsl
mov
mov
mov
dec
and
movsl
jge
cmp
xor
add
adc
inc
fs
fwait
cmp
pop
jb
jnp
sbb
test
in
lahf
jnp
pushf
push
push
add
lret
jno
lea
in
lret
or
xor
pop
push
push
ret
inc
xor
repz
test
xchg
xor
xchg
rcrl
enter
ds
xchg
jge
mov
adc
jl
insl
mov
shlb
lock
or
mov
sbb
popf
pop
adc
rorb
cmpsb
aad
icebp
jg
pop
cld
cmp
add
popa
mov
sbb
xlat
or
cmp
repz
nop
jge
inc
cmp
add
data16
iret
xor
dec
repz
lcall
sub
ss
cli
sub
int
iret
jne
loopne
add
xor
data16
ret
mov
jl
push
mov
mov
lock
movsb
out
cmp
mov
dec
push
sbb
fstpt
jno
bound
mov
les
jno,pt
rorb
adc
aam
inc
fisttpll
and
sub
dec
mov
and
rorl
std
ss
push
fldcw
xor
std
xlat
inc
inc
and
jnp
mov
repnz
mov
cs
cmc
and
sub
ret
cmp
mov
fildll
sbb
inc
imul
popa
in
xor
dec
pop
mov
jns
aas
roll
or
mov
mov
into
dec
jecxz
xor
testl
inc
pop
mov
insb
out
pop
leave
or
xor
jmp
loope
scas
mov
je
dec
cmpsl
aas
add
sub
pop
inc
xor
insl
adc
sub
jg
arpl
insl
push
pop
xor
outsb
xchg
mov
ds
in
mov
lret
lea
or
js
or
mov
cmp
call
loop
jge
js
bnd
push
nop
or
lds
inc
or
adc
dec
mov
jmp
jnp
lret
or
pop
mov
inc
movsl
mov
xlat
rcl
dec
adc
mov
jne
test
ss
mov
pop
test
push
xchg
ret
fdiv
mov
mov
mov
xchg
xchg
inc
mov
and
jae
xor
ret
lods
mov
test
sarl
cmp
ljmp
mov
jle
adc
xchg
xchg
fisttps
jb
mov
movsl
ret
xlat
insl
daa
inc
mov
aam
sbb
mov
pop
xor
test
imul
scas
into
cwtl
test
sub
in
sbb
pop
xor
bound
mov
mov
sbb
jg
push
cmp
sbb
jg
insb
adcl
jns
push
jns
std
inc
mov
fidivs
xor
lret
xor
dec
inc
dec
inc
jmp
stos
mov
insl
xor
stos
rcrl
fld
sbb
pop
adc
dec
lock
and
or
icebp
adc
loopne
loopne
push
das
xchg
test
cmp
adc
shlb
sbb
mov
clc
jno
xchg
adc
push
adc
xchg
leave
or
adc
add
push
adcl
adc
add
xchg
imul
xor
fwait
icebp
in
mov
dec
xor
sub
inc
dec
pop
xor
in
sbb
or
jge
rcll
cmp
std
sub
pop
scas
icebp
xor
daa
push
lcall
adc
testl
mov
jge
cmp
cli
pop
dec
rcll
lahf
dec
stos
jbe
mov
dec
arpl
pop
push
in
mov
cmp
test
or
aam
jp
dec
js
loopne
insl
jb
xchg
insb
insb
jg
or
xchg
pop
jecxz
testb
out
cli
rcr
inc
xor
mov
leave
shll
data16
cwtl
loopne
pop
lahf
ret
mov
inc
or
mov
mov
mov
fsubs
insb
adc
xchg
es
insl
push
pushf
lret
sub
imul
loope
sub
xchg
aam
sbb
into
mov
adc
xor
pop
test
add
addb
xchg
push
push
negl
cmp
lcall
pop
dec
fcomps
je
stc
jl
repnz
insb
cmp
inc
jmp
in
cmp
cli
js
call
lahf
sub
xor
mov
cs
sub
lock
dec
or
inc
pop
xor
cltd
mov
mov
push
inc
enter
mov
adcl
push
mov
int3
inc
lahf
adc
adc
lret
xchg
inc
ds
dec
shrl
adc
push
bound
mov
hlt
dec
sub
ljmp
daa
test
ss
lret
pop
popf
js
sub
cmp
jge
jno
shrb
insl
aam
push
test
sbb
mov
jnp
adc
and
ljmp
add
mov
neg
or
adc
cli
jmp
sbb
adc
pop
sbb
sbb
repz
aad
das
sub
insl
imul
cmp
or
aad
push
in
jg
adc
ret
les
add
xor
shll
test
xor
or
lock
in
sub
stos
cltd
hlt
mov
cmc
cmpsb
pop
xor
ljmp
popf
mov
sub
push
pop
les
dec
sub
push
adc
repz
movsb
in
sbb
push
test
sub
pop
inc
stos
push
icebp
out
test
lcall
in
loope
rep
adc
inc
xchg
ret
push
jp
lods
outsb
sub
out
xor
sbb
push
and
insb
and
repnz
test
pop
mov
fwait
decb
mov
int
cmpsl
popa
pop
ljmp
lds
mov
lea
xchg
sub
ss
clc
jb
add
sub
push
int
adc
mov
nop
mov
ja
xchg
or
cmc
cmpb
pop
xchg
sbb
inc
in
jp
and
mov
fistl
push
loop
popa
adc
xor
pop
mov
and
sbb
lahf
aam
aam
call
fisubrs
mov
mov
xchg
mov
dec
dec
out
mov
in
mov
fwait
xchg
mov
mov
cwtl
or
mov
cmpb
into
orb
addb
and
adc
das
adc
inc
stos
xor
adc
sub
and
jns
push
scas
ja
and
fildll
dec
aas
push
inc
pop
popf
test
outsl
test
or
hlt
xchg
pop
mov
pushf
pop
fdivrp
xor
mov
fidivs
push
inc
cmp
fistpll
xchg
clc
lea
aad
jmp
hlt
xchg
ret
add
outsl
mov
imul
je
pushf
cmp
add
mov
fmull
daa
dec
shrb
insl
jmp
add
stc
jns
xchg
imul
sti
or
loop
insl
add
insl
fidivrs
les
or
and
mov
push
ret
mov
jecxz
sbb
sub
test
jmp
inc
mov
js
mov
pop
mov
hlt
rep
add
stc
int3
fwait
lret
push
popf
or
insb
out
xchg
mov
jb
xor
and
sbb
out
mov
push
pop
mov
pop
ljmp
int
cmp
ja
pop
stc
jo
sti
jecxz
gs
fcoms
lods
test
popf
adc
pop
sub
pop
pop
js
fisttpl
les
jle
sbbl
and
mov
stos
jo
cwtl
dec
insb
daa
add
mov
les
pop
aad
push
adc
mov
subb
pop
pop
loope
or
push
sbb
push
imul
jl
pop
and
stos
aam
fistpl
mov
shl
or
inc
testb
rcl
rorl
sbb
decl
addr16
lcall
add
das
sbb
enter
out
and
sub
or
aaa
fcomi
js
or
sub
sub
push
insb
std
push
stos
jmp
mov
adc
rorb
je
arpl
into
push
xor
bound
jo
cmp
mov
add
cmpb
js
jle
js
push
xor
cwtl
scas
cld
dec
pop
movsl
pusha
lods
pushf
mov
add
ljmp
out
xor
lea
adc
pop
add
popa
lea
repz
sub
out
rcrl
fwait
stos
push
fdivrl
dec
jne
fstps
or
popf
cmp
push
xlat
repnz
or
imul
ret
xorl
out
mov
pushf
dec
pop
ja,pt
and
int
out
inc
adcl
sbb
loopne
lods
ds
icebp
shlb
xchg
mov
fsubrs
mov
mov
push
dec
mov
sahf
stc
cld
leave
mov
xor
jl
pusha
xchg
adc
dec
sahf
xchg
add
sub
xor
int3
int
mov
or
pop
movsl
push
movsb
adc
pop
outsl
outsb
mov
inc
pop
inc
dec
push
sub
shrl
xlat
lret
idivl
insb
fwait
inc
pusha
jmp
mov
pop
jge
xchg
push
ret
scas
xchg
or
dec
pop
dec
and
movsl
adc
inc
push
bound
aam
cld
xor
andb
mov
mov
enter
pusha
in
fisubs
sbb
xchg
pusha
js
xchg
roll
mov
stos
mov
shlb
je
pop
mov
testb
cwtl
mov
cmpl
push
push
fldt
push
xor
lock
ficomps
cmp
daa
out
testl
xchg
xchg
or
pop
push
sub
ss
mov
lock
pop
fnsave
into
ja
or
jo
lods
mov
iret
sbb
sub
push
imul
in
es
inc
pop
mov
add
stc
int3
scas
dec
cli
lods
mov
cmp
loop
ret
inc
es
add
out
loop
push
arpl
dec
jne
rol
std
es
xor
xchg
pusha
outsl
mov
scas
dec
sbb
sti
jno
inc
dec
xchg
cmpsl
shl
repz
jnp
mov
les
sbb
push
xchg
cwtl
pop
mov
pushfw
lahf
fmull
inc
les
sub
inc
fs
mov
xchg
mov
lds
lods
jecxz
xchg
jne
cmp
mov
loope
inc
inc
xchg
dec
shll
sti
jb
cmp
test
insl
jo
gs
push
aam
mov
std
pop
mov
shrb
ljmp
call
add
jecxz
pop
lea
push
dec
add
ret
mov
xlat
movsb
mov
loopne
push
mov
adcb
push
pusha
ficompl
inc
and
cld
dec
cmpsb
pushf
pop
loopne
movsb
andl
out
pop
sub
out
inc
out
scas
sbb
cli
mov
push
xor
adc
mov
xchg
pushf
sub
xor
mov
test
add
inc
inc
sub
movsl
sbb
fxch
mov
out
pop
push
push
fstps
js
push
inc
rolb
push
xchg
mov
mov
push
push
mov
sbb
and
hlt
jmp
rclb
jae
int
mov
push
or
cmp
dec
push
int
sbb
sbb
cltd
pop
cmp
mov
fmuls
lea
inc
into
sbb
xor
or
xchg
or
mov
lahf
mov
cmp
sarl
rcrl
xor
mov
adc
nop
nop
out
mov
mul
dec
push
jge
scas
test
push
push
and
adc
and
in
dec
cmp
cmpb
mov
shll
les
sub
xchg
fsubrl
jl
xchg
xchg
repnz
xor
les
jecxz
fwait
xchg
pushf
rorb
sbb
mov
add
js
insl
sbb
sbb
mov
stos
xlat
mov
fldt
push
loopne
mov
cmp
mov
shlb
bound
cs
ljmp
test
mov
repz
sahf
and
enter
push
jae
jb
pop
push
add
lock
mov
mov
hlt
cmp
inc
ss
sarb
movsb
mov
inc
dec
dec
xchg
ds
ja
in
out
lea
or
leave
bnd
ss
jns
orb
xor
sbb
add
loopne
mov
cmpsl
dec
int
dec
jno
mov
test
shlb
insb
jecxz
lods
pop
mov
mov
xchg
mov
fisttpll
lret
scas
fcomps
jae
test
out
add
insl
dec
lahf
push
or
les
ror
dec
adc
int
insl
mov
dec
pop
inc
push
mov
inc
pop
cmp
adc
inc
int
data16
mov
add
fdivs
xchg
mov
mov
mov
out
test
data16
int
sbb
sahf
mov
and
xchg
sbb
cmc
or
mov
dec
add
test
sarl
cmp
dec
pop
fwait
int
xchg
add
lret
pop
std
inc
jno
and
and
inc
jle
ljmp
imul
and
lcall
cmp
ds
inc
xchg
stos
xor
xchg
arpl
fnstcw
lods
ficoms
mov
lods
cmp
add
add
test
fcoms
mov
stos
and
aad
mov
xor
and
int3
xor
fwait
rorb
das
icebp
call
hlt
pop
mov
or
adc
jge
dec
or
jmp
pop
ds
ret
outsl
mov
push
aad
mov
push
inc
test
int3
fsqrt
inc
jg
imul
addr16
sbb
mov
xchg
inc
mov
sahf
in
jecxz
xor
mov
mov
lahf
cmp
add
xlat
or
std
inc
lods
test
repnz
add
add
push
imul
popa
shll
add
cmp
rolb
aad
into
addb
push
jnp
mov
cltd
aam
mov
cmp
mov
frstor
xlat
inc
in
jle
dec
pop
jb
mov
jge
xor
sti
addr16
es
icebp
stc
pop
mov
inc
dec
lret
sbb
jmp
xchg
cltd
ficompl
out
mov
inc
jno
lock
ja
dec
pop
or
fidivrs
ja
mov
aam
adc
mov
lret
or
lea
xchg
rorl
outsl
adc
cli
daa
sub
insb
mov
outsb
aam
idivl
cmc
gs
iret
popl
imul
daa
andl
pop
mov
movsb
mov
shrb
mov
cmp
adcb
or
mov
xchg
loope
in
jbe
je
jge
sti
ret
dec
mov
hlt
jmp
fisubrl
jl
dec
call
cmp
repz
out
mov
scas
dec
addr16
pop
sarb
or
push
jo
and
movl
or
int
sub
jmp
in
jb
movsb
push
pop
or
push
pop
sbb
test
in
or
flds
mov
jne
dec
addr16
pop
cmp
jl
mov
es
xor
imul
outsl
rclb
fs
movb
ja
sub
mov
dec
mov
in
fisubs
ss
jno
push
xor
flds
push
mov
push
dec
lret
xor
and
or
lock
cli
mov
mov
or
lret
and
outsb
stos
add
and
push
scas
sub
stos
hlt
jg
pop
leave
mov
mov
xchg
insl
jo
xchg
xlat
and
and
imul
add
stc
ds
sub
xor
xor
and
aam
lret
call
insb
ja
in
arpl
mov
stc
ja
shll
addr16
add
dec
lret
xor
cld
xchg
into
hlt
pop
xor
or
push
int3
outsl
fimull
je
cltd
jecxz
fs
jecxz
mov
call
pop
push
popf
or
push
or
cwtl
mov
and
in
mov
daa
iret
repnz
outsl
adc
xchg
lahf
lods
jb
mov
mov
sbb
sbb
test
cld
daa
xor
jecxz
xor
addr16
imul
adc
inc
push
adc
out
out
add
bound
sub
popf
lods
dec
mov
shll
mov
test
out
out
fcmovne
sub
inc
push
sbb
sbb
xor
mov
pop
in
sbb
lods
shr
jae
in
cmpsb
loop
add
mov
mov
mov
and
jnp
stos
mov
loope
dec
sub
cmpsl
stos
mov
mov
push
sar
ds
mov
add
xor
pushf
ljmp
mov
popa
pop
bound
push
enter
fisubl
int
and
and
xor
pusha
std
into
popf
xor
xchg
sub
lcall
inc
sbb
ss
mov
xchg
jg
pushf
xorb
dec
mov
jp
mov
filds
fwait
fwait
mov
mov
mov
jne
xchg
xchg
sahf
outsb
xchg
xor
out
data16
jae
outsb
jae
daa
lea
cmp
fwait
stos
inc
out
lods
shlb
jmp
sbb
xchg
inc
mov
sbb
mov
or
push
loope
cmp
xor
sbb
mov
push
and
sarb
int3
shlb
ljmp
mov
mov
and
data16
nop
jg
sbb
outsb
setp
sarb
jecxz
sub
push
dec
jecxz
push
ds
mov
jnp
mov
nop
jecxz
cmp
adc
loopne,pt
arpl
push
leave
call
mov
in
arpl
jnp
imul
clc
loope
fwait
dec
push
mov
fnstsw
popf
dec
push
addr16
in
xchg
cmp
out
addl
lea
stc
gs
mov
sahf
jecxz
lock
test
call
cs
pushf
lods
mov
xchg
push
repnz
mov
pop
add
pop
pop
loopne
std
xor
aas
mov
and
repnz
fcmovne
jne
pop
push
sarb
pushf
arpl
sub
jns
jmp
call
jle
jnp
pop
sub
daa
cmp
stc
int
sahf
cmp
notl
hlt
aad
adc
jne
stos
cmp
inc
shll
sar
cmpsl
fldl
sbb
shlb
mov
rcr
inc
inc
pop
insl
shl
jmp
pop
inc
pop
dec
push
mov
pop
ljmp
push
int
jg
fdivr
add
out
mov
and
xchg
mov
and
out
iret
push
fwait
andl
pop
scas
adc
lds
pop
ds
divl
cmpsl
fsubs
cmpl
mov
nop
inc
jmp
inc
add
cmpsl
mov
rcrl
scas
mov
jl
les
orl
testb
mov
test
push
sub
push
sarb
dec
je
and
filds
mov
fs
jecxz
lcall
sub
ss
insl
fsubrs
lock
pop
out
out
sub
dec
sub
mov
dec
push
rcrl
fnsave
cmp
ret
pop
mov
jg
cmc
rcll
or
sub
lcall
pop
cmp
das
test
mov
inc
sub
hlt
lretw
cmp
cmpw
sbb
cli
movsl
jge
jmp
and
xchg
and
imul
push
xor
fldenv
out
loopne
aas
not
adc
pop
sub
ret
mov
movsl
cmp
shl
mov
cltd
movsl
insl
adc
loop
lds
pop
jno
bound
jge
sarb
xchg
or
sbb
pusha
cmp
iret
add
xor
fcmove
in
movsb
fwait
or
adc
jae
pop
push
pop
fildl
mov
sbb
or
mov
jb
pop
es
dec
mov
ljmp
jo
mov
dec
push
jecxz
rcrl
mov
fwait
mov
popa
imul
iret
sarb
pop
jp
jecxz
pop
loopne
and
sahf
push
push
mov
aas
and
iret
add
adc
and
movsb
push
cwtl
mov
ljmp
leave
and
cmp
std
outsl
shl
jl
ret
xchg
jns
incl
push
enter
xlat
xchg
rolb
or
xlat
lret
pusha
sbb
enter
ficompl
pop
call
sbb
add
pop
out
dec
insl
ss
call
xchg
push
push
jge
adc
movsb
mov
or
add
push
dec
cmc
lahf
adc
pop
xchg
jle
fdiv
xor
xchg
out
cltd
dec
and
sub
stos
lret
push
lods
insb
cmp
jne
pushf
out
jo
push
inc
cltd
and
mov
mov
mov
pop
push
inc
mov
and
mov
sti
clc
ret
pop
dec
cld
sbb
movsl
pop
inc
adc
mov
js
movsl
mov
push
jbe
loop
ds
lea
fwait
in
fiaddl
and
xchg
adc
push
faddp
cld
xchg
xchg
add
mov
icebp
shll
js
jo
adc
hlt
dec
aam
and
outsl
pop
lds
sarl
call
sbbb
mov
push
ja
xchg
popa
dec
dec
fstps
mov
sbb
loope
or
sub
mov
int3
lahf
popf
sbb
outsb
xchg
mov
sbb
test
out
rdmsr
push
mov
push
xchg
xchg
mov
jae
inc
test
incb
push
lcall
pop
je
repz
scas
xchg
outsl
sub
mov
stos
in
push
jb
xor
pop
mov
rolb
mov
insb
repnz
imul
je
lret
js
dec
mov
mov
call
sbb
jmp
stos
stc
xchg
les
shlw
mov
fistpll
inc
mov
negl
iret
fwait
test
xlat
pop
je
in
add
mov
push
lea
insl
lret
mov
fists
int
push
push
in
stos
repnz
lcall
stos
out
xchg
add
xor
jecxz
mov
jmp
lods
in
cs
pop
lret
rclb
mov
or
dec
add
xor
fs
scas
testb
sub
cmp
outsl
lock
push
out
sub
or
sub
inc
scas
xor
ficompl
dec
in
inc
push
adc
fcompl
push
dec
jb
sbb
xchg
in
lock
or
call
jle
mov
nop
or
scas
push
insl
test
lret
dec
lcall
imulb
lret
push
push
sub
ja
out
cli
push
adc
aas
sti
push
outsl
or
adc
scas
pop
add
lret
stc
fiadds
ret
scas
imul
ficomps
aas
stos
jae
stos
sbb
out
outsl
das
cmp
ret
jae
je
cmp
js
pop
pop
mov
dec
cltd
cmpsb
test
xchg
adc
fwait
movsl
dec
mov
mov
xor
testb
bound
lret
or
cmp
enter
enter
add
pusha
in
mov
verw
push
add
dec
bound
inc
mov
push
mov
adc
test
flds
mov
addb
popa
je
mov
jp
scas
cmp
stc
pop
imul
into
push
and
pusha
movsb
addl
in
push
les
add
pop
add
cmpsl
fstps
jbe
jl,pt
jp
jp
mov
xor
fsub
xchg
in
cmp
hlt
push
inc
sbb
daa
in
mov
mov
je
int3
insb
leave
lock
xor
xor
jg
push
cmpsl
pop
mov
push
jne
jne
xchg
imul
inc
pop
xchg
or
test
mov
mov
test
popf
faddl
mov
aam
outsb
cltd
in
pop
xor
jbe
ret
imul
xor
cmc
mov
inc
mov
subb
sbb
test
andl
hlt
xchg
add
faddp
lods
insl
cltd
jmp
or
inc
shll
cmp
xor
lret
pop
orb
push
pop
and
sub
push
fcomip
arpl
aad
mov
inc
shr
inc
sbb
in
das
fsub
mov
push
movaps
dec
push
push
lods
sbb
cmpsl
mov
outsl
lret
or
inc
cmp
cld
add
insl
jno
sbb
jge
aaa
rolb
shl
lret
idivl
sbb
jmp
push
in
push
pop
sbb
push
inc
loopne
ret
mov
ja
mov
bound
or
shlb
data16
sbb
iret
das
and
or
rcll
mov
sub
es
dec
xlat
and
dec
add
inc
mov
mov
scas
cmpsl
test
addr16
loopne
inc
jb
shll
test
lcall
addr16
adc
inc
mov
mov
sar
adc
hlt
add
and
rorb
mov
mov
push
xchg
push
pop
repz
mov
pushf
dec
inc
xchg
pop
shl
cwtl
mov
outsb
jge
sub
cwtl
aam
mov
xor
jp
sub
inc
jmp
xchg
mov
sahf
or
sbb
push
into
add
jle
xchg
pop
push
xor
or
add
aaa
dec
and
stc
lea
out
mov
mov
scas
test
sbb
fdivl
inc
test
ja
xor
adc
adc
adc
fidivrl
test
shrb
ret
fs
bswap
jle
inc
add
jo
cmovae
add
cltd
dec
inc
cmp
or
aad
inc
mov
sarb
mov
or
jnp
inc
inc
cmp
jbe
pop
dec
add
inc
cltd
lahf
mov
mov
push
popl
scas
inc
movsb
xlat
sub
out
sbb
dec
loopne
xchg
add
mov
mov
mov
sbb
lret
and
mov
in
lds
mov
fwait
outsl
jecxz
jge
lcall
loopne
jge
xlat
icebp
repz
orb
push
push
stos
scas
lret
mov
cmp
or
cld
xor
pop
lods
test
adc
or
imul
clc
test
and
enter
pop
sbbl
xchg
mov
lret
pusha
dec
mov
fldcw
lret
int
cmpl
outsb
push
icebp
cmp
sub
ja
clc
scas
clc
aam
jmp
fstps
sub
sbb
mov
inc
and
jnp
mov
imul
pop
js
and
cltd
dec
dec
pop
call
int3
sub
mov
aam
enter
dec
push
inc
dec
imul
inc
inc
or
cmp
outsb
cli
in
aam
add
push
fs
addl
cmpsl
mov
in
sahf
iret
inc
fcoms
aas
xchg
insl
add
xlat
add
pushf
push
aas
stos
je
adc
lret
push
loopew
mov
push
lds
mov
roll
and
mov
jg
dec
xchg
mov
mov
lahf
dec
sbb
push
popf
mov
ret
repnz
push
rcrb
std
out
sbb
std
out
jg
int3
mov
nop
fstl
sub
inc
sbb
mov
jecxz
enter
fisubs
mov
dec
add
sub
ljmp
xor
xchg
inc
pushl
aaa
add
shl
sub
push
movsl
push
adc
sbb
lds
jg
enter
daa
lea
fidivrs
lea
pop
mov
sti
notl
shll
aad
scas
or
cmp
cmp
xor
sbb
outsb
jge
push
arpl
push
cmpl
ror
jno
outsb
mov
or
cli
movsl
lcall
loope
test
bound
mov
ret
cvtdq2ps
sub
inc
jnp
addr16
mov
xorl
aam
cmp
pop
cs
adc
or
pop
push
clc
adc
pop
jbe
sub
sbb
xchg
inc
and
jecxz
cmp
ds
test
cmp
int3
mov
das
adc
mov
insl
in
and
sbb
jl
call
sbb
or
and
mov
orb
add
in
shll
fidivrl
fstpl
bound
mov
sbb
cmpsb
popa
xor
cwtl
hlt
stos
iret
adc
lock
sbb
mov
add
cmpsl
xor
xchg
pop
and
dec
jge
xchg
lock
mov
cld
insb
sbb
leave
and
lock
xor
mov
cmp
jbe
dec
mov
push
aaa
scas
testl
stos
fisubl
mov
push
add
jg
lods
incb
fistl
sbb
out
mov
push
push
test
push
push
jno
inc
hlt
arpl
jo
out
clc
add
cltd
add
fwait
loope
arpl
stc
push
std
icebp
pushf
xor
xorb
or
pop
pop
mov
js
mov
jne
and
inc
iret
push
or
sbb
push
xlat
sub
xor
jl
inc
movsb
sub
adc
xor
xchg
outsl
mov
mov
dec
jbe
ficomps
movsb
rclb
idivb
cwtl
xchg
pop
gs
scas
jg
adc
or
test
or
adc
das
mov
pop
jb
sbb
mov
ss
add
jne
xchg
je
push
jle
aaa
pop
popa
cld
cmpxchg
sbb
mov
jno
xchg
addr16
jns
sbb
and
jbe
in
sbb
pop
sub
fstpt
neg
fidivrs
adc
dec
andl
inc
cmpsb
arpl
mov
sbb
pop
fdivrl
insl
push
pop
mov
jae
pop
mov
xchg
les
je
mov
push
dec
jle
aam
shlb
mov
pop
push
test
mov
xchg
push
test
sub
dec
and
fimuls
jg
bts
je
jle
into
and
into
pop
jl
es
xchg
inc
call
push
jg
dec
jle
push
mov
js
adc
iret
cmpsb
aas
cmpsl
dec
ja
daa
aad
rorb
pop
outsb
jne
roll
jne
mov
sahf
add
not
popf
xchg
dec
in
nopl
sahf
xchg
push
lret
imul
jge
push
sahf
pop
jae
and
and
ljmp
mov
jnp
xor
stc
cmp
xlat
sub
mov
cwtl
push
xchg
outsb
sarl
mov
adc
int3
push
rolb
lret
xchg
test
incb
pop
sub
jns
sarb
xor
addr16
mov
in
movsb
das
add
or
pop
cmpsl
xchg
pop
push
pop
jbe
daa
sbb
ja
mov
xor
xor
pop
xorb
data16
std
push
xchg
mov
push
icebp
sub
test
mov
popa
dec
divl
push
mov
insb
cmp
sbb
xchg
movaps
sub
mov
loope
mov
pop
iret
rcrb
mov
popf
aas
lret
aad
jae
les
or
pushf
sbb
mov
dec
lahf
les
test
push
push
pop
jnp
pop
dec
sbb
test
cmp
sarb
loop
pop
sbb
fwait
jp
cwtl
xor
popf
push
je
mul
insb
movsl
sub
mov
mov
cmp
fimuls
dec
movsl
xchg
lods
out
mov
cltd
add
inc
add
idiv
pop
imul
sahf
test
pop
gs
mov
or
stos
out
sub
add
cmp
lds
loop
shlb
or
xlat
rolb
mov
mov
mov
add
sar
test
out
xor
push
negb
ret
xchg
mov
dec
sub
jp
imul
push
push
pushf
lret
inc
pop
fs
gs
inc
in
aaa
shll
cmp
ljmp
iret
pop
mov
cmp
aam
insl
pop
and
inc
sbb
arpl
dec
fs
les
fmul
cmp
jmp
xchg
insb
mov
call
mov
shlb
xor
int3
aas
ja
test
fwait
xor
mov
add
adc
xlat
push
jnp
pop
adc
aad
add
mov
sar
int
pusha
mul
sbb
or
shld
out
out
imul
xor
lea
out
fidivrl
out
frstor
jns,pn
dec
inc
clc
lret
jmp
pusha
ret
outsb
adc
movsl
or
cwtl
pop
stc
sbb
adc
movsl
xchg
lret
xor
mov
stos
jg
mov
pusha
repz
pushf
and
pop
sbb
aam
lcall
orb
loope
adc
mov
cmovl
lret
or
rolb
and
pop
cmp
push
imul
and
fisubs
or
ljmp
inc
mov
push
int
daa
xchg
xor
mov
xor
scas
pop
fcmovnbe
mov
daa
sbb
lahf
pop
inc
inc
addb
xorl
in
cmp
mov
mov
or
push
xlat
scas
jl
add
pop
mov
aaa
movsl
scas
pop
or
pushf
xor
lret
cmpsl
sub
fisttpl
mov
clc
pop
add
mov
fdivrs
pop
int
pop
xchg
ljmp
mov
mov
imul
in
rcrb
pop
paddb
imul
leave
xchg
outsb
xchg
mov
jle
and
lods
or
pop
cmc
xchg
mov
addr16
sub
cli
div
into
out
or
adc
pop
imul
lods
inc
aaa
cmpsb
loopne
dec
ja
ficomps
adc
ss
jns
movsl
lret
and
scas
xorb
mov
pusha
test
pop
insb
lds
pop
add
xchg
jne
stos
outsl
std
iret
call
cmpsb
popf
ret
add
jb
pop
or
sub
addb
sub
adc
add
das
mov
cmp
iret
push
xchg
mov
sub
jmp
cmp
jecxz
cltd
jmp
movsb
ret
test
cmp
inc
jns
jecxz
fsubrp
inc
cld
mov
adcl
jecxz
mov
mov
test
xor
mov
add
push
add
movsl
push
loopne
jg
xor
outsb
or
int
cmp
mov
and
int
sub
push
call
rcr
dec
inc
xor
fistps
sbb
outsl
or
out
pusha
stos
mov
xchg
repz
inc
push
dec
push
ja
xor
pop
mov
popa
bound
addl
jle
mov
and
pushf
jo
std
arpl
pop
push
adc
cmp
stos
mov
cli
or
in
imul
fucomp
ret
sub
sbb
push
xchg
push
lcall
xor
push
shlb
loop
cli
mov
mov
iret
push
jmp
lcall
mov
rcrb
or
mov
ficoml
push
repnz
xchg
lret
std
mov
out
je
inc
aad
ja
sbb
mov
pop
sbb
cltd
lahf
dec
fs
xor
sarb
inc
ret
popf
xor
sbb
push
cli
shrl
and
dec
xor
mov
add
es
cmc
test
out
mov
inc
push
jne
mov
bnd
and
jnp
inc
inc
jge
dec
clc
dec
fcompl
or
mov
and
mov
pop
mov
cltd
cmp
ror
clc
pop
aad
sbb
pop
jp
loop
aam
mov
or
inc
fcompl
jns
mov
xchg
xchg
xlat
mov
in
xchg
or
cmpsb
add
call
pushf
adcl
pop
cld
dec
gs
push
mov
inc
pop
cmpsb
lcall
das
or
pop
sbb
sbb
pushf
dec
mov
xor
add
in
into
sbb
mov
ficoml
dec
mov
aad
add
mov
repnz
lahf
and
ja
popa
out
roll
iret
pop
mov
cld
sub
mov
pop
pop
jmp
jbe
pop
inc
inc
dec
mov
lret
fwait
or
or
and
add
cld
jg
xchg
insl
cld
enter
dec
pop
bt
and
je
or
pusha
mov
and
inc
inc
mov
pop
iret
inc
xchg
pop
adc
cltd
push
jne
loop
sbb
loopne
dec
mov
fnstcw
fisttpl
sub
dec
pop
imul
fwait
sahf
sub
cmp
cmp
repz
idivb
cmp
in
mov
mov
xlat
lcall
into
push
mov
out
xor
mov
sar
std
test
sbb
inc
sub
sub
call
les
outsl
cmp
inc
jge
bound
rcr
out
mov
push
dec
xchg
jle
lds
jg
sub
mov
in
es
cwtl
push
mov
xor
xchg
cld
pushf
sub
and
mov
outsb
sbb
dec
daa
das
je
rcl
fimull
jae
clc
or
mov
mov
cli
cmp
mov
mov
push
sbb
daa
inc
mov
add
lods
mov
cmp
lds
push
pop
xchg
jbe
cwtl
add
jle
and
bound
les
dec
cmp
aad
repnz
rcrb
movsl
add
cld
mov
in
jp
inc
push
dec
loope
imul
add
mov
xchg
mov
push
lcall
ja
xor
push
int
or
mov
sahf
aaa
outsl
ljmp
movsl
xchg
test
in
ret
mov
xchg
push
pop
test
ds
hlt
sbb
push
pop
stos
inc
mov
clc
mov
jp
sub
and
popf
pushf
ret
jb
xchg
and
adc
mov
sub
push
pop
or
aam
sbb
mov
adc
push
mov
leave
sbb
dec
jbe
aaa
bound
push
push
adc
pop
mov
mov
test
sub
push
push
movsl
jnp
inc
xchg
hlt
pusha
sbb
imul
adc
in
mov
xor
shl
call
cmc
je
sub
idivb
mov
daa
leave
jle
dec
das
push
cltd
push
call
ret
pop
scas
mov
pusha
mov
test
pusha
jmp
sub
push
jbe
sbb
dec
or
lret
and
call
xchg
ret
out
fwait
cmp
bound
sub
adc
xchg
popl
and
into
inc
adc
fdivl
xlat
jbe
enter
push
call
mov
hlt
scas
dec
leave
sahf
pusha
test
cmp
xor
loope
mov
fsubl
jbe
mov
decb
sti
add
fldcw
inc
aaa
popf
fistpll
lcall
sub
ror
ret
jle
ss
repz
popf
xlat
mov
arpl
and
mov
std
mov
std
dec
out
dec
test
bound
mov
xor
push
je
mov
dec
push
cmp
mov
or
push
repz
inc
push
adc
or
fldl
cmp
xor
pushf
mov
pop
jge
xchg
out
dec
in
cmp
jo
nop
push
lds
sbb
out
xchg
into
mov
into
sub
addb
inc
sbb
xchg
fldl
mov
push
inc
gs
or
pop
js
cmp
jl
jbe
scas
dec
ds
insb
ss
xor
cmp
mov
nop
lret
pop
fildll
mov
jne
sarl
push
fs
xor
fwait
outsb
mov
out
or
xchg
mov
jl
fisttpll
pop
mov
leave
orl
mov
arpl
mov
mov
adc
pusha
adc
sbb
and
roll
mov
lahf
mov
mov
out
test
ja
test
cs
lret
lods
mov
xlat
dec
mov
sti
sti
loop
mov
cmc
sbb
call
or
or
cmp
scas
sub
movsb
outsb
fdivrl
addr16
orb
andb
jb
iret
sub
scas
adc
xor
jmp
insl
push
push
call
stc
mov
jne
xchg
or
jne
cmpsb
aam
into
cltd
out
hlt
cmp
pmaxub
stc
xor
mov
mov
repz
loop
pop
mov
cwtl
fs
push
imul
xchg
mov
lahf
xor
sti
cmc
fwait
dec
dec
std
das
rcrl
enter
inc
rcrl
adc
pop
cltd
ljmp
or
push
jl
iret
addr16
adc
xchg
test
sbb
adc
or
insl
xor
movsl
lock
movsb
test
jb
mov
das
adc
pop
loope
aaa
in
fcomps
data16
lret
cmp
lods
sub
push
fstsw
ds
xor
pop
push
test
adc
fcomps
fs
mov
jle
rolb
cs
ret
cmc
xlat
cli
dec
ss
mov
scas
ret
inc
scas
inc
and
adc
push
xor
fcoml
inc
nop
bound
fwait
pop
jne
imul
stos
mov
sbb
jo
test
scas
ds
inc
imul
loopne
mov
mov
fisttpll
mov
stos
xor
push
jae
or
cmp
bound
jge
repz
mov
in
test
lahf
dec
daa
jp
xchg
jno
inc
sbb
jbe
in
mov
jo
push
lcall
pop
lods
dec
lods
into
push
lock
fnstsw
pop
jne
test
into
stos
cmp
xchg
movsb
in
leave
stc
rcl
mov
es
aas
jae
fisttpll
loopne
das
push
je
xor
lahf
enter
xchg
xchg
cmp
scas
insl
imul
pop
dec
jae
xchg
push
jl
xchg
push
test
mov
outsb
or
out
sub
test
stc
int
xchg
in
mov
testl
fidivrs
popf
mov
push
jg
fidivrs
call
lods
add
shrl
push
lods
sbb
hlt
fsts
int3
or
push
cmpl
cmp
cld
test
aaa
sub
and
test
pushf
push
mov
ss
jns
stos
sbb
daa
add
mov
mov
or
sbb
cmpsb
movsl
xchg
cmpsb
shll
xor
and
repnz
rorl
mov
scas
scas
cmc
in
pop
dec
lock
fsubrl
sti
cmp
xor
cwtl
cmp
leave
mov
jecxz
repnz
mov
pop
mov
mov
and
xchg
sub
fwait
lods
xchg
xchg
mov
mov
pop
xor
out
adc
inc
sub
inc
inc
add
add
pop
into
fstl
dec
xlat
xchg
loop
lods
sub
push
cmp
sbb
arpl
push
pop
test
lock
lock
push
pop
out
cs
scas
jmp
dec
fsubrl
mov
dec
test
js
mov
jp
ss
cwtl
xor
xor
add
pop
jmp
test
cmpl
dec
cld
ss
cli
mov
idivl
or
or
pop
jle
gs
push
insb
fisttpll
sub
leave
out
jl
mov
xchg
out
scas
pop
out
pop
push
mov
push
sub
insl
dec
mov
xchg
jge
mov
loop
mov
js
mov
lea
int3
int3
insb
gs
push
dec
xchg
ror
pop
stos
and
movsb
js
or
mov
lahf
sub
lret
inc
jle
add
push
ds
mov
sbb
inc
jbe
and
push
mov
lret
sbb
cmpsl
push
cmp
push
shrb
clc
push
push
xchg
imul
lods
jae
xor
lret
push
inc
leave
movsl
les
pop
xchg
outsl
lock
sahf
pop
hlt
iret
icebp
cmp
jle
lods
and
clc
rcr
into
jecxz
popf
jo
xchg
dec
enter
jno
cmpsb
icebp
loop
aaa
cmp
pop
test
xchg
adc
or
inc
insb
and
mov
push
nop
les
fiadds
fstpl
sbb
push
inc
mov
sbb
push
stos
mov
in
je
stos
lcall
pop
daa
mov
hlt
shlb
push
add
iret
sbb
pop
ret
jp
sub
insl
out
and
jbe
adc
push
push
fwait
ja
mov
cmp
in
mov
mov
pop
mov
sbb
xchg
xlat
sbb
cmpsl
addr16
mov
fcmovnbe
icebp
jg
in
shlb
sbb
jg
inc
jae
or
test
pop
xor
mov
xchg
sub
test
jbe
aam
or
mov
mov
xchg
dec
inc
mov
imul
xor
jle
sub
mov
pusha
jae
or
add
movsl
xchg
mov
xlat
adc
cli
stos
add
bound
loope
jno
enter
mov
ret
dec
cmp
pusha
lret
pop
stos
push
or
add
push
stos
lock
pop
cltd
into
sub
addr16
mov
jle
ror
movsl
movsl
shll
dec
dec
push
pop
daa
xchg
pusha
aaa
dec
push
inc
inc
xchg
mov
jne
and
mov
pusha
xor
lea
test
dec
ret
or
xchg
in
mov
cmp
jnp
mov
cmp
sbb
xchg
jnp
sub
add
cmp
sbb
jb
push
ret
and
pop
mov
fnsave
or
pop
test
stos
mov
dec
jmp
adcb
ja
cmp
cmpb
pop
in
mov
scas
shlb
fcomip
sti
lods
dec
adc
subb
stc
jp
xor
popa
out
popa
lahf
and
cmp
jb
cld
pop
nop
test
push
ljmp
cld
pushf
push
and
std
cli
ds
aaa
je
movsl
sub
bound
pop
push
ss
imul
inc
ss
faddl
xor
movsb
inc
loope
mov
lods
jmp
sub
cmpsl
hlt
hlt
mov
aad
popa
and
sbb
jmp
pop
and
in
mov
sbb
jle,pn
and
inc
cmpsl
fnsave
lods
pop
xchg
movsb
loope
ss
aas
insb
add
jb
sbb
add
inc
jge
in
mov
push
xchg
mov
cmp
or
cwtl
add
aas
mov
ja
cltd
ficoms
dec
sarb
js
fsubrl
pop
popf
and
fsubrl
or
mov
push
out
xor
fstpl
mov
sbb
xchg
cltd
dec
dec
inc
inc
pop
test
and
xchg
mov
mov
jnp
js
and
fs
adc
loop
xchg
and
out
mov
adc
pop
xchg
push
mov
jp
xor
in
rcrl
imul
aas
pop
sub
xchg
daa
xor
sub
and
stos
pop
xor
pop
mov
ja
std
fcomp
mov
int
jae
and
jle
out
pop
xor
and
mov
xor
int3
mov
or
aaa
adc
mov
add
xchg
enter
ja
rcrb
jbe
mov
cmp
mov
adc
imul
pop
jg
test
cs
push
leave
push
movsl
arpl
aaa
mov
imul
push
loope
cld
mov
mov
xor
mov
mov
xchg
movsl
fisubl
mov
inc
jne
fisttpll
out
cltd
dec
sub
stos
idivl
out
xchg
or
inc
out
mov
jb
insl
xchg
xor
xchg
mov
es
adc
mov
jb
ret
xor
adc
aaa
fdiv
cmp
leave
lret
xor
jae
out
dec
cmp
imul
pop
lcall
xlat
mov
sub
and
inc
jno
in
jns
bound
mov
sarb
fisttpll
and
mov
call
mov
dec
cmp
pop
js
jp
aad
adc
sbb
notb
mov
ret
mov
jne
cmp
jno
gs
sub
or
lea
jb
and
in
adc
lods
inc
add
mov
mov
jnp
inc
ds
pushf
xchg
out
xchg
rcr
dec
xchg
push
xor
sub
xchg
fsubp
push
xchg
push
push
xchg
add
sbb
out
int3
mov
rclb
sub
sti
je
ror
dec
push
mov
aad
mul
push
sub
jl
mov
addr16
adc
lret
in
outsl
data16
lret
adc
xchg
add
hlt
push
lcall
das
xlat
cmp
in
popf
jns
sub
inc
in
inc
in
xchg
push
push
jmp
push
push
sub
addr16
das
clc
xor
pop
jb
mov
sub
aad
movsb
aaa
aad
jns
sub
mov
and
jno
and
sbb
mov
dec
fcoms
scas
aam
insl
inc
jo
je
enter
int
lock
in
ret
xlat
lods
repnz
outsb
jl
mov
jns
jnp
pop
cmpl
popf
int
cmp
push
add
mov
xchg
mov
imul
xor
scas
xchg
cmp
daa
sub
dec
xchg
lcall
xor
pushf
out
cmp
leave
dec
in
pop
je
repnz
jmp
mov
xor
dec
imul
xchg
inc
jb
add
hlt
enter
loopne
dec
stc
pop
and
inc
jnp
cmp
test
or
or
idivb
jo
lahf
fnsave
cs
aad
pop
aam
les
and
xchg
insl
sub
fucomi
pop
mov
inc
sub
fisubs
mov
rcr
adc
in
push
popf
pop
mov
in
jo
loopne
mov
lods
sarb
xchg
inc
call
jecxz
mov
sbb
andb
push
and
es
rol
add
lea
mov
pop
pop
jg
add
xchg
cs
mov
jecxz
aaa
rcrl
inc
inc
popa
adc
jnp
call
pop
sbb
inc
out
mov
andl
ds
xlat
lock
add
mov
pop
inc
push
adc
call
dec
mov
jg
int3
sahf
xor
test
lods
sbb
mov
pop
cmp
dec
loop
cmp
xor
xor
sub
jmp
fdivs
push
or
loop
inc
cmp
jnp
mov
das
pop
and
shl
mov
sbb
pop
cmp
movsl
enter
jecxz
lret
jp
stc
mov
pop
mov
rcll
cltd
nop
and
or
add
sbb
in
ja
call
int3
repnz
das
and
fists
hlt
jmp
ljmp
and
dec
add
in
gs
sub
jb
xor
outsl
adc
xchg
sbb
mov
arpl
cmp
ret
aas
loopne
push
outsb
push
cmpsb
push
jne
cmp
cmp
dec
sbb
jbe
and
leave
fisttpl
test
sub
jo
std
fcomps
ljmp
jle
add
pop
insl
fistpl
aas
gs
insl
mov
js
mov
outsl
out
dec
sub
jg
mov
iret
das
mov
xchg
and
inc
xor
add
push
xor
iret
sub
fsubl
pusha
xchg
adc
das
jno
pop
push
int
jae
addr16
or
mov
xchg
push
bound
insb
jmp
loope
sarl
out
sbb
sub
pop
inc
mov
pop
insl
stos
xchg
mov
push
cmp
xor
mov
std
sbb
outsb
repz
js
xchg
mov
dec
insl
idivb
dec
enter
and
or
lahf
daa
fcoml
incb
mov
sti
jmp
cmp
div
dec
scas
dec
mov
mov
and
pop
leave
out
or
mov
or
mov
out
cld
mov
dec
mov
std
pop
test
aam
xchg
push
xlat
imul
pop
dec
scas
daa
mov
std
ffree
test
call
and
mov
and
mov
cmp
jg
sbb
arpl
push
jne
aad
sub
lock
or
popf
idiv
or
icebp
push
fdivp
cli
cltd
sub
stos
ds
xchg
cmp
push
mov
xor
mov
pop
jge
fists
clc
sahf
bound
lds
js
mov
mov
xor
fisubs
fisubs
jge
movsl
xor
fsubrs
xchg
nop
test
or
add
jmp
xchg
pop
fwait
lds
test
inc
push
notl
iret
out
push
in
adc
fcmovu
sbb
pop
out
jno
xchg
jge
jmp
adc
movsl
inc
cmpsl
mov
test
lret
xlat
mov
iret
out
insb
inc
cmp
sbbl
enter
es
enter
and
into
gs
sbb
pop
adc
lret
addl
in
movsl
mov
xchg
cmp
imul
scas
inc
subb
or
mov
adc
push
es
jle
sbb
add
pusha
test
ret
push
in
test
pop
outsl
jg
clc
addb
repz
gs
imul
jmp
sti
data16
mov
pushf
in
dec
mov
neg
cmp
bound
mov
jbe,pt
adc
adc
pop
add
jmp
adc
daa
rorl
push
scas
fsts
dec
jb
nop
push
icebp
xor
mov
inc
lcall
cmp
addr16
lret
push
xor
sti
and
aad
int3
in
inc
sub
adc
cwtl
push
test
or
adc
dec
xchg
jae
mov
cmp
in
dec
dec
aad
inc
pop
cmp
add
pop
cwtl
jp
inc
or
loop
sbb
int
stos
in
imul
mov
fadds
cltd
mov
dec
popl
in
sbb
pop
jbe
lret
aad
push
inc
push
inc
and
push
push
sub
ds
jle
std
inc
xor
mov
loop
fidivrl
int
sahf
sbb
mov
testb
mov
aaa
sub
pop
mov
inc
imul
add
mov
and
sbb
push
mov
enter
aaa
mov
mov
stos
lret
es
jl
inc
dec
data16
cmp
jbe
in
repz
or
push
xor
pop
pop
je
sti
dec
and
and
arpl
mov
movsb
xchg
lds
stos
mov
std
pop
out
rol
inc
or
int3
call
sti
jle
sbb
std
inc
mov
sar
mov
iret
stos
mov
test
mov
mov
arpl
jle
lods
dec
mov
mov
cmc
outsl
sbbl
test
mov
cmp
sbb
jl
jns
or
cmp
decl
xchg
js
pop
add
ljmp
es
cld
les
jmp
dec
dec
jl
clc
xor
jne
in
outsl
stos
sbb
cmp
and
ss
test
inc
xor
test
popa
push
stos
xor
pop
cli
xchg
mov
cmp
push
jl
repnz
loop
jne
scas
jmp
hlt
das
or
xchg
js
lock
andl
mov
das
jmp
daa
cmp
inc
or
push
cmpsl
or
adc
pop
pushf
aad
mov
notl
and
dec
xor
sub
and
ds
cmc
pop
leave
pushf
fwait
scas
mov
mov
repnz
in
cmp
gs
jle
cwtl
movsb
lret
hlt
add
mov
push
lahf
jns
gs
scas
stos
sub
roll
aam
add
hlt
mov
cmp
cwtl
pop
enter
adc
jno
popa
stc
inc
inc
jae
jae
ljmp
sbb
sbb
add
dec
xchg
sub
loop
insb
jo
mov
ljmp
lret
pusha
sbb
sbb
scas
jle
in
pop
xchg
into
lods
push
jecxz
cmpsb
fwait
mov
jne
and
int3
jl
pop
in
test
rolb
or
flds
ja
aaa
push
cmpsb
jecxz
in
mov
pop
sarl
loope
and
mov
fiadds
stc
movsl
mov
xchg
rorb
add
xchg
mov
outsl
jo
ret
or
adc
jo
stc
mov
leave
xlat
das
fildl
int
push
cmp
andl
dec
stos
sub
and
fsubrl
jo
sub
test
stos
cmp
or
mov
loopne
mov
jecxz
lods
fadds
mov
popf
imul
cmpsl
or
frstpm(287
ljmp
popf
cltd
rsqrtps
roll
push
or
insb
mov
loop
std
push
cmc
push
and
and
sbb
mov
jbe
addr16
add
jge
jmp
sub
push
mov
inc
leave
fldcw
movsb
sti
pop
imul
push
je
inc
int
push
cmp
or
inc
mov
and
push
xor
add
jns
mov
rorb
stos
cmpsl
popl
test
sbb
and
ss
dec
mov
addl
mov
aaa
push
out
into
jbe
jp
pop
imul
mov
cmc
leave
mov
mov
enter
mov
mov
pop
lcall
mov
stc
hlt
lfs
jg
fcompl
jmp
push
jp
push
adc
pop
scas
xor
add
adc
mov
and
insb
mov
jb
xor
jmp
pop
xor
loopne
xchg
aas
cs
jecxz
sub
mov
or
loopne
push
rorb
scas
enter
in
xor
inc
adc
adc
cmpsl
fsubl
loope
popa
sub
adc
cmp
push
dec
movhps
test
cwtl
mov
loopne
ljmp
cwtl
ucomiss
pop
sub
in
dec
sbb
cs
popf
or
sbb
cmc
xor
adc
jns
mov
or
push
sub
in
sar
xchg
cmpsl
xor
mov
jp
mov
mov
gs
and
mov
wrmsr
jmp
in
mov
or
lods
sub
pop
xchg
xchg
enter
mov
mov
in
aad
dec
mov
push
sbb
xlat
xlat
xchg
push
test
pushf
xor
sub
repnz
inc
cmp
cmpb
fmul
adc
sti
rclb
or
or
lret
fisttpll
or
mov
xor
pop
stos
sub
mov
mov
and
je
lret
loope
inc
jge
mov
movsl
lds
add
pop
aad
test
leave
or
insb
push
cmp
xor
js
mov
jecxz
loope
mov
push
repnz
aad
cmp
xchg
out
cmp
inc
stos
adc
pop
mov
jecxz
cmp
nop
aas
aad
push
scas
xor
call
pop
cs
dec
fs
fs
add
and
in
dec
mov
jae
cmpsl
jne
pop
clc
out
aas
andl
mov
mov
notb
push
inc
and
sbbl
aam
jg
dec
fisubrl
pop
push
push
popa
int
test
and
lds
add
push
mov
xchg
lds
fwait
mov
test
dec
xchg
fs
mov
mov
add
lea
and
in
sbb
shrb
or
add
cmp
jmp
enter
jbe
aaa
insb
idivl
or
jp
rol
cmpsl
cltd
mov
mov
in
mov
adc
add
mov
loopne
loop
jmp
or
sarl
cmp
iret
scas
imul
push
bound
inc
xor
pop
test
jp
jne
mov
jns
pop
or
repnz
jnp
jmp
jp
pop
ret
cmp
dec
jecxz
adc
cmp
mov
jnp
cmp
dec
dec
jmp
cmp
fnsave
jle
xor
ljmp
mov
add
sub
andl
xor
loopne
stos
lcall
mov
js
aad
popa
in
sub
xchg
mov
jns
cmp
js
sbb
out
dec
imul
vpandn
daa
imul
add
out
call
push
lods
jne
addr16
loopne
fisubl
fnstcw
clc
push
jb
mov
hlt
filds
dec
xchg
stos
xor
lret
data16
mov
sbb
iret
out
xchg
int3
cmpsl
or
sbbb
or
in
xchg
push
test
inc
pop
mov
aad
pusha
mov
mov
aam
clc
xor
test
and
or
jle
in
pop
adc
shrb
push
jnp
dec
adc
pop
les
mov
out
out
jg
xor
push
xlat
mov
dec
out
sub
sahf
pop
push
arpl
cmp
pushf
cmpsb
imul
dec
add
push
outsb
cmp
scas
cmpsb
ret
mov
adc
sbb
xor
xchg
mov
ds
push
mov
cmp
hlt
jg
and
or
enter
cmpsl
jb
and
jp
sub
lret
dec
aam
repnz
lret
ret
fcom
fbld
cmpsl
jbe
fbstp
or
inc
push
repnz
jnp
imul
ljmp
mov
rol
pop
mov
lcall
and
mov
xor
ja
cmp
ror
repz
in
and
or
pop
jg
loope
dec
inc
cli
dec
sub
and
fdivrs
push
mov
faddp
sti
or
mov
sahf
ret
dec
jmp
push
je
insb
std
ljmp
shl
sub
push
gs
push
and
jns
mov
jno
mov
hlt
mov
vmulss
mov
imul
out
pop
jle,pt
and
cwtl
fmul
xchg
cmpsb
dec
lret
sbb
in
and
adc
fistpl
in
adc
push
lds
jmp
fs
push
sub
adc
and
stc
inc
dec
test
inc
fsubs
mov
adc
and
mov
das
jcxz
lret
mov
jmp
mov
push
mov
lock
xchg
fstpt
movsl
scas
xor
lock
lods
sti
in
inc
adc
lret
inc
call
fidivl
cmpsb
sti
int
ret
popa
lods
es
bnd
cmpl
push
ljmp
mov
or
pop
out
pop
push
inc
andl
gs
adc
in
out
rclb
pusha
imul
pop
ljmp
fcom
das
lahf
icebp
ljmp
lret
adc
test
add
adc
mov
fwait
cmc
les
loope
int
cmpsl
jecxz
ret
sub
iret
mov
cmp
daa
movsl
jmp
xchg
xor
jle
call
arpl
dec
sub
jae
sub
daa
sbb
stc
das
and
mov
and
jnp
jns,pt
mov
xor
movsl
mov
clc
stc
out
mov
jbe
dec
cmc
test
mov
pop
push
xchg
repnz
out
mov
imul
outsb
daa
dec
loopne
xor
stos
sub
fisubs
jo
in
inc
jmp
jno
pop
xor
fiaddl
add
sub
xchg
jb
frstor
mov
or
xor
cmpsl
sbb
leave
sub
jae
enterw
ljmp
xchg
je
xor
inc
loop
pop
jmp
xor
je
in
ljmp
imul
and
xor
add
repz
lcall
ret
pop
xchg
insb
fwait
push
and
pop
pop
or
jne
mov
popa
fidivrs
xor
aas
cli
mov
cmp
stc
out
jl
or
mov
loope
push
mov
cld
ficoms
mov
sbb
sub
sub
mov
xchg
sti
ds
and
in
push
xchg
inc
pop
pop
negl
jl
mov
int
loop
aad
sub
out
mov
cli
test
mov
outsl
into
push
xchg
add
ret
cmp
xchg
adc
dec
sbb
test
test
push
jecxz
fldcw
iret
nop
stc
push
cs
into
dec
add
pushl
inc
mov
scas
mov
dec
jb
mov
stc
cltd
dec
push
out
outsb
mov
dec
dec
shrb
jne
xchg
pop
sub
lods
ret
testb
dec
jg
xchg
imul
pop
jae
movsl
roll
jno
adc
push
pop
mov
fildll
and
jno
fimull
adc
pop
stos
xchg
jne
aam
clc
mov
mov
xor
dec
or
mov
mov
fmull
jp
and
ret
xchg
popf
mov
mov
jg
mov
fisubrl
push
push
jge
repnz
pop
gs
movsb
das
jne
orb
push
repz
adc
mov
sbb
and
mov
icebp
andb
mov
std
jg
or
and
sub
xchg
outsl
pop
cmc
test
lock
cmp
aad
dec
andb
arpl
leave
add
and
adc
jno
cmp
jae
mov
icebp
jl
sbb
xchg
cmpsb
jg
lahf
call
dec
push
shll
pusha
stos
lods
testl
clc
sub
xor
loope
xor
mov
inc
in
mov
sub
ds
cmp
and
adcl
fists
mov
sahf
addb
aam
xchg
daa
add
xchg
rcrb
imul
or
pushf
xchg
push
xchg
mov
movsb
or
std
mov
pop
mov
cmp
scas
xchg
pop
lcall
sub
and
push
xor
push
fdivr
in
inc
mov
hlt
pop
scas
or
rol
mov
push
aas
mov
add
adc
sbb
mov
jle
les
out
fisubl
and
mov
jno
divb
mov
cmp
repnz
dec
push
ret
mov
inc
aam
ret
cs
stos
addr16
mov
adc
stos
mov
pushf
and
xchg
lds
lcall
and
movsl
loopne
add
movsl
pushf
out
push
push
and
pusha
insb
outsb
jb
mov
fdivrs
out
push
mov
repnz
push
pause
cmp
orb
pop
mov
repnz
push
add
pop
mov
cmpb
cmp
pop
and
lods
mov
add
mov
cmpb
fs
pop
add
arpl
xlat
insl
cwtl
lds
or
testb
lds
test
insl
xor
jl
or
imul
or
das
lcall
enter
repnz
xchg
xorb
sbb
sbb
popf
inc
jns
sbb
adc
cli
xchg
xor
test
xchg
or
dec
pop
and
sub
adc
mov
lret
cmp
sahf
cld
jmp
mov
fwait
imul
cmp
outsb
lcall
je
xor
mov
aas
jg
mov
adc
cli
into
lods
call
subb
push
fnstcw
sbb
push
sbb
add
adc
ret
pusha
jle
xlat
into
fstl
jns
lahf
push
std
pop
loop
cmpsb
push
or
test
iret
pop
int
dec
or
pop
cwtl
mov
xchg
add
inc
mov
imul
ror
adc
mov
jge
scas
les
mov
ljmp
fwait
mov
cmpsb
ror
push
outsl
mov
mov
inc
scas
xchg
test
fwait
test
outsb
fistl
jo
pop
aaa
jae
jge
pop
test
push
xchg
inc
jg
jno
mov
jle
pushf
mov
es
xor
xor
pop
sbb
into
mov
xchg
int3
cmpsl
mov
pop
pop
je
push
cmpsb
loopne
and
xchg
push
popa
je
pop
adc
leave
inc
mov
adc
jnp
imul
fdivrs
aam
and
repnz
adc
fwait
cs
fists
xchg
shll
jb
sub
sbb
enter
in
daa
adc
cmpsb
push
daa
mov
or
scas
fnstsw
push
fnsave
dec
jno
or
fisttpll
dec
ss
mov
mov
or
sbb
xor
add
mov
or
arpl
nop
xchg
sbb
pop
arpl
ss
pushf
repz
divl
fildll
adc
pop
pop
jae
pop
sbb
push
leave
lds
int
mov
nop
pop
iret
xchg
jge
adc
sub
aaa
cwtl
jmp
in
adc
and
lea
sub
loopne
jecxz
rcl
cmp
arpl
push
jbe
dec
mov
cmp
pop
sub
mov
and
es
adc
push
cmp
mov
loop
push
inc
fwait
adc
push
push
or
movsb
jl
mov
inc
movsb
or
fisttpl
push
test
mov
ret
int
mov
jle
sbb
or
ret
push
call
lds
push
cwtl
cmp
and
pop
fstps
xchg
fdivrl
dec
loopne
mov
jl
mov
sbb
jge
test
addl
cmp
xchg
sub
or
mov
mov
add
cmp
loope
addr16
add
sarl
movsb
inc
hlt
jb
xor
inc
adc
add
xor
mov
lods
jmp
xchg
cmpsb
push
pop
lea
add
or
inc
fists
adc
pop
mov
or
pop
adc
jb
xchg
xor
mov
shlb
test
ss
and
daa
jb
push
jecxz
fisubrl
loopne
mov
push
jge
test
stc
jo
push
pop
lcall
gs
fmuls
xor
xchg
mov
jmp
mov
or
shr
imul
in
and
sbb
test
nop
push
sub
add
shll
mov
lahf
sub
xchg
add
das
imul
push
push
scas
cmpsb
leave
and
loop
test
or
rolb
add
fidivs
aas
fmuls
jmp
insb
jmp
and
and
hlt
mov
mov
jae
jbe
mov
cmpl
xor
sub
test
inc
jns
in
ret
flds
bound
fldcw
mov
lret
test
aas
pop
enter
incl
jo
push
inc
lcall
in
mov
stc
add
adc
gs
ljmp
mov
jbe
mov
jo
imul
add
jns
sub
out
xor
addr16
adc
aam
dec
and
cmp
fldt
pushf
shll
and
iret
out
inc
clc
xchg
push
mov
loope
das
xor
cmc
and
sub
add
outsl
js
mov
sub
cmpsl
inc
cmpsb
cmp
stos
int3
adc
shll
sbb
jns
mov
pop
or
mov
int3
stos
test
cmp
pop
mov
lock
jbe
sbb
out
mov
add
repnz
push
jecxz
movsb
xorl
mov
cltd
xor
outsl
daa
add
mov
lds
sar
lcall
movsl
rorb
aaa
test
fcmovne
jecxz
adc
cs
sub
sub
jnp
stos
and
jns
pushf
les
mov
lahf
jmp
sbb
adc
cmpsl
cmp
lahf
xchg
scas
rclb
mov
mov
adc
aaa
inc
add
or
cs
sub
test
inc
out
iret
sub
pop
call
std
add
insl
or
test
jno
test
frstpm(287
stc
js
lahf
sbb
xor
pop
xor
cwtl
cmp
cwtl
std
and
cltd
lcall
popa
xor
push
int
sarl
cmp
jle
loope
adc
mov
loopne,pt
orl
test
out
pop
push
mov
out
sub
xchg
inc
shl
and
int
faddl
xchg
fcoml
mov
pop
mov
inc
jle
ljmp
xlat
lds
in
adc
roll
test
push
mov
cmp
xchg
das
imul
mov
shlb
test
out
movl
ss
mov
push
test
repz
sahf
and
sbb
jae
stc
shrb
sbb
jno
incl
aaa
or
bound
daa
stos
and
mov
scas
push
int
loopne
inc
call
and
jo
adc
invlpg
lods
mov
das
pop
nop
dec
mov
xchg
adc
clc
mov
sarl
fmulp
loope
mov
xor
or
dec
mov
mov
jnp
xchg
idivl
push
insl
sbb
pop
xchg
adc
leave
or
xchg
lret
adc
vmread
test
dec
rorl
adc
call
shrb
push
lods
dec
outsl
shll
shll
ss
js
dec
push
rorb
in
dec
test
add
into
popf
add
mov
lret
cmp
inc
loopne
mov
pop
hlt
andl
mov
pop
pop
pop
and
fmuls
test
pop
push
add
mov
cli
adc
stos
adc
popf
sub
push
mov
outsb
cmpsb
xchg
adc
fiadds
xchg
xchg
xchg
inc
int3
add
jl
or
out
popa
add
add
repz
fcomip
dec
in
mov
or
sub
loope
pop
imul
leave
mov
std
cld
sub
lds
push
dec
xor
sahf
xlat
xor
mov
divl
mov
push
leave
ret
testl
xchg
cmp
pop
pop
add
bound
pop
pop
sbb
ret
push
sti
cltd
repnz
add
pop
scas
inc
cld
mov
inc
push
jb
outsl
and
mov
ret
adc
iret
jg
icebp
dec
cmc
mov
pusha
mov
stos
daa
fists
push
pop
fsubr
mov
loopne
xor
jmp
mov
dec
xchg
ss
clc
fwait
ret
sub
inc
sbb
fiadds
pop
mov
xchg
mov
scas
aad
sbb
mov
repnz
mov
xchg
dec
shlb
push
pop
jle
sbb
cmp
lret
push
pop
pusha
push
fcmovnu
pop
add
dec
hlt
je
std
push
cli
pop
ljmp
aam
js
dec
loope
or
lods
fs
cmp
mov
mov
cmp
pop
pushf
mov
jmp
mov
movsb
out
movb
dec
mov
push
dec
mov
out
mov
inc
shll
enter
dec
pop
ss
pusha
ret
jle
xor
pop
call
or
dec
arpl
imul
lods
out
jae
xor
cmp
les
or
jns
sti
dec
fs
mov
div
cmp
in
push
out
cmp
xchg
loopne
mov
gs
popf
into
lret
push
sub
ficoms
ss
mov
in
rcr
or
les
es
test
push
pop
mov
rcll
popf
rcrb
xstore-rng
cmpsl
add
lds
and
pusha
or
ret
stos
xor
lahf
sarb
insb
mov
add
mov
inc
mov
mov
cmp
inc
fs
xchg
cld
out
popa
icebp
cmc
repnz
mov
ret
outsl
cmc
scas
cmp
mov
push
mov
orb
lods
fnstenv
xchg
cmp
add
cmp
xchg
imul
ret
lret
loope
inc
dec
dec
inc
shlb
mov
cmp
out
call
push
lret
js
int
ja
js
xchg
xchg
add
sbb
pop
std
mov
aam
mov
gs
test
sub
sahf
add
out
pop
sbb
sti
lret
pop
pop
inc
inc
inc
or
pop
sub
les
ljmp
pop
enter
xor
in
int
and
add
iret
sub
inc
sub
push
push
mov
aam
arpl
insl
cmc
mov
mov
aaa
or
shlb
imul
adc
aaa
mov
loope
and
sbb
inc
xor
cld
sahf
dec
psraw
sbb
xchg
loop
sub
xchg
imul
cmpsb
fdivrl
inc
sbb
sub
and
mov
cld
mov
or
loop
lds
cmpsl
mov
cmc
inc
loopne
jg
imul
cmp
sub
add
mov
jae
bound
lods
sbb
outsb
push
ss
imul
xor
out
ret
sub
xchg
pop
inc
cld
mov
jo
adc
bound
enter
cmpsl
jbe
and
cld
aaa
cmp
push
inc
repnz
and
fwait
loop
lea
push
stc
jb
xor
movsl
rorb
dec
or
hlt
xchg
mov
mov
stc
adc
push
int3
adc
sbb
jg
push
mov
pop
mulb
pusha
fwait
mov
paddsw
or
sbb
stos
in
loop
leave
std
fdivrl
jecxz
icebp
imul
dec
dec
sbb
mov
sub
inc
sbb
pop
test
int
and
insb
in
adc
mov
test
mov
xlat
sub
sub
jge
dec
mov
daa
cmpsb
pop
negb
or
call
in
enter
test
stos
in
dec
insl
jmp
push
es
rcrl
lock
dec
push
lret
and
dec
mov
out
xor
pop
jge
enter
jae
jecxz
or
loope
push
sbb
mov
shlb
scas
jne
call
cmp
dec
sarl
test
adc
cld
push
mov
popa
icebp
iret
xchg
cmp
jmp
mov
pop
mov
orl
xlat
pusha
fwait
mov
cld
pusha
pop
pop
jle
mov
pop
outsl
pop
dec
adc
sub
pop
stos
cltd
sti
addr16
sbb
or
mov
xchg
cmp
fsts
loopne
sbb
shll
add
mov
jg
stos
jle
scas
cli
jne
pop
add
xchg
pop
sub
jb
adc
and
ds
inc
and
push
xchg
mov
aas
nop
pop
xor
popf
push
mov
jl
pop
xchg
inc
xchg
xor
test
test
inc
ficoml
inc
or
lret
jb
mov
clc
cmp
sub
adc
inc
push
fistl
scas
sub
mov
push
icebp
rclb
xchg
lahf
mov
popf
in
mov
fiadds
mov
inc
repnz
fistl
inc
push
xor
dec
out
and
shlb
pop
test
movsl
stos
lret
pop
adc
and
jb
pop
and
imul
add
movsl
cmp
or
sub
add
cltd
gs
mov
insl
daa
lret
xchg
fdivrl
sti
mov
xchg
xchg
cmp
sbb
mov
clc
sbb
jb
ds
lods
cmp
xor
mov
int3
lds
lahf
add
std
inc
les
pop
and
jb
sub
addr16
mov
aad
insl
sarb
mov
dec
insb
adc
mov
fistpll
scas
cmp
push
sub
xchg
stos
hlt
sub
andb
fs
lcall
pop
iret
inc
fsubs
sbb
dec
cmpsl
mov
sti
movsb
cwtl
xor
sbb
std
fldenv
inc
mov
lret
jae
cmpsl
push
mov
push
mov
aam
dec
in
test
jl
jl
ret
int
das
mov
push
mov
imul
daa
andl
sar
inc
stos
push
js
jecxz
neg
fistpll
test
cwtl
mov
adc
or
push
stc
nop
mov
fs
inc
jmp
mov
leave
aam
mov
jae
out
sbb
lahf
aam
push
push
lret
mov
js
or
fistpll
movsb
xor
imul
mov
in
mov
cmp
cli
sbb
pop
sahf
sbb
fisttpll
mov
in
jmp
fcoml
inc
std
fcoml
mov
mov
pop
or
in
scas
rcl
xor
pop
inc
popl
fcoml
aaa
sbb
sub
dec
mov
imul
mov
push
pushf
inc
lods
or
cmp
jmp
stc
int3
push
std
aaa
jnp
enter
push
cld
push
mov
lods
insb
jg
lret
sub
dec
mov
mov
out
push
ror
dec
xchg
inc
push
scas
push
les
pavgb
cmpl
mov
hlt
and
cltd
mov
repnz
mov
out
xchg
insb
inc
imul
add
lcall
jl
lods
dec
popf
test
fnsave
sbb
jle
push
push
push
adc
sahf
jmp
mov
fidivl
scas
mov
and
jae
ja
jb
bound
mov
add
xchg
fcmovb
add
in
adc
adc
sbb
fstpl
sbb
icebp
push
mov
test
push
insl
ret
cmpsb
jo
sbb
lret
jg
mov
aam
repz
sbb
repz
rcrb
int
out
arpl
dec
fbstp
jg
adc
scas
fmul
sbb
cli
mov
stc
dec
mov
bswap
popf
jge
dec
aad
cmp
push
xchg
xor
cmc
test
sbb
mov
cmc
jmp
bound
push
xor
and
cmpsl
mov
shrl
movsl
xchg
mov
inc
imul
insb
dec
lahf
stos
sub
push
add
lret
mov
outsb
mov
add
mov
mov
adc
rorb
pop
push
clc
xor
pop
imul
sarl
and
mov
stc
lcall
sub
or
jo
loopne
mov
sub
pop
sub
jecxz
push
in
mov
pushf
loopne
xchg
xor
or
jp
jne
std
mov
fcompl
repnz
jge
jns
clc
mov
callw
mov
out
xchg
push
jge
mov
pop
xor
jb
mov
pop
ffree
dec
xor
inc
sub
push
xchg
mov
insl
inc
ljmp
mov
jg
push
sti
orb
xchg
and
jecxz
sub
test
sub
mov
sbb
jo
jno
pop
aaa
sub
cmovo
dec
mov
push
test
insb
mov
mov
sub
fdivl
fdivp
jge
leave
dec
mov
orl
lret
xchg
loop
adc
push
mov
sahf
test
gs
and
and
jmp
aad
outsb
dec
sub
test
cmp
pop
mov
jge
fstps
lods
fsubs
push
mov
movb
adc
outsb
adc
lock
cmpsb
out
lea
lds
xorb
cltd
mov
add
nop
xor
stos
lcall
xchg
lods
jne
lods
sbb
pop
push
sbb
out
mov
and
dec
aad
shll
push
icebp
push
iret
push
lds
imul
or
movsl
cmp
aas
rcr
add
jecxz
out
sub
fs
add
dec
xor
test
les
dec
lahf
fidivrl
jg
push
push
scas
add
jb
xor
mov
pop
ss
pop
ficompl
stc
adc
push
outsb
rcr
movsb
sub
jb
jmp
lea
xor
int3
jnp
cmpsb
inc
out
push
fcomip
sbb
sbb
dec
cmp
add
add
ja
mov
push
loopne
mov
jbe
xor
lret
ffree
mov
jae
jp
mov
inc
add
cmpsb
lcall
cmc
jge
leave
lods
je
cmp
dec
cmp
lea
fdivr
adc
fidivl
pop
mov
rcll
jp
jo
aaa
fcompl
enter
xchg
loopne
mov
mov
in
int
pusha
mov
mov
out
in
xlat
mov
jo
mov
mov
into
mov
jmp
sbb
pop
pop
dec
test
pop
add
ljmp
adc
in
div
pusha
adc
fs
icebp
inc
fwait
mov
pop
cmc
mov
mov
je
adcb
movsl
push
sbb
or
incb
sbb
sub
mov
sbb
and
loopne
fmull
push
repnz
push
adc
mov
sub
repz
jmp
les
mov
push
adc
mov
jp
inc
jbe
rcll
test
xor
xchg
dec
pushf
call
das
out
add
shll
loopne
mov
fcomip
jne
mov
inc
pop
ja
xor
mov
xorl
addl
sahf
sbb
in
movsb
sbb
adc
mov
ficoms
inc
pop
mov
enter
loope
adcl
lods
sti
loop
fidivrl
sbb
aam
sbb
scas
dec
add
xor
mov
inc
jne
xchg
iret
jbe
call
test
ds
lods
and
adc
enter
or
shrl
mov
sub
dec
xchg
pusha
loop
mov
xor
out
cltd
es
push
adcl
insb
inc
cmp
icebp
pop
insb
enter
loopne
lods
rcl
in
mov
loopne
dec
aam
dec
fnstenv
ja
ret
pop
xlat
popa
xchg
cmp
repnz
pushf
pop
jmp
loope
out
outsb
jecxz
push
loope
jg
sub
arpl
call
repz
iret
rcl
mov
add
pop
mov
push
enter
lret
jecxz
sbb
inc
lock
pushl
hlt
out
jae
data16
sub
pop
popf
cmpsl
push
inc
dec
and
into
sub
in
jg
pop
movl
test
adc
adc
lock
xor
data16
lods
xor
inc
inc
insb
in
mov
lea
fdiv
adc
xchg
cli
adc
shl
or
mov
pop
sub
add
dec
cmp
jle
lds
int
inc
andl
outsb
pop
jg
mov
inc
push
jbe
aaa
rorl
xor
push
push
and
xchg
addr16
push
mov
fsubl
adc
pop
push
xor
and
lret
and
leave
mov
ret
insb
pop
pusha
mov
insl
jge
daa
cltd
mov
das
add
les
dec
je
out
mov
fwait
cltd
int3
or
adc
cltd
rcrb
sub
outsl
hlt
add
int3
mov
mov
adc
test
jmp
test
fucomi
inc
repz
les
lods
outsl
mov
out
jbe
mov
push
sbb
push
mov
jge
pop
enter
into
jmp
test
mov
push
adc
movsb
pcmpeqw
in
add
imul
adc
adc
lcall
sbb
mov
mov
sub
lret
es
jne
push
mov
sub
add
movsl
and
xor
sub
inc
add
rclb
sti
pop
add
je
xchg
pop
cmp
bound
push
ss
adc
jnp
or
cmc
xchg
movsl
sbb
adc
sub
and
repnz
leave
mov
lcall
and
and
or
pop
je
cmp
repz
inc
push
sti
out
jbe
push
int
push
adc
fildll
inc
inc
imul
mov
inc
lods
mov
cwtl
insb
push
ror
adc
in
xchg
loope
push
in
ds
nop
enter
and
xor
push
call
add
adc
add
sbb
jmp
das
jbe
rcrl
xchg
popa
add
aas
sbb
loop
cmpsl
adc
ss
popa
add
mov
pop
cwtl
push
cmp
mov
mov
pop
jae
add
cmp
cwtl
shlb
inc
sbb
sbb
xor
mov
jle
subb
rcrl
push
icebp
xchg
mov
fmuls
ja
test
ficoms
mov
add
lods
inc
sub
sbb
pusha
int
cli
push
ficoms
ds
int3
movsl
cld
imull
push
jne
repz
add
movsb
outsl
pop
aam
or
int3
cs
dec
jle
in
mov
push
push
imul
mov
mov
arpl
pop
fimull
dec
sbb
xor
aas
addr16
incl
inc
pop
rorb
arpl
push
inc
aad
push
movaps
sahf
nop
xchg
mov
pop
xchg
dec
xor
lods
mov
lock
pushf
adc
xchg
add
js
fwait
test
leave
jae
fwait
sarb
dec
aam
lcall
imul
out
fists
cmp
jmp
xchg
fs
stos
xor
inc
mov
insl
xchg
mov
jno
xlat
jmp
loop
out
scas
std
lds
push
mov
popf
dec
stc
out
mov
lock
sub
arpl
test
xor
mov
cmp
cmp
aam
sbb
sti
jmp
xchg
popa
jmp
out
std
pop
jp
nop
sub
and
stos
xchg
enter
dec
lods
pop
out
ds
insl
mov
mov
cwtl
out
mov
jns
mov
sub
or
ja
sbb
lcall
lods
outsb
lock
push
lods
enter
cs
xchg
mov
daa
add
pop
lret
pop
jmp
shrb
aaa
inc
adc
cltd
in
fs
negl
and
mov
jnp
in
sub
fldt
js
setle
pop
xor
out
in
xchg
mov
movl
scas
and
aas
repnz
or
lds
add
xchg
xor
rolb
inc
xor
jmp
mov
cmp
js
sahf
and
scas
sub
outsb
add
aas
xchg
sub
outsl
inc
test
hlt
sbb
loopne
lcall
arpl
fs
negb
sbb
jns
dec
fstpt
add
pop
insl
xchg
lahf
stos
mov
outsl
mov
mov
repz
inc
aam
ret
inc
movsl
push
dec
adc
out
add
stos
mov
mov
rcll
pop
mov
mov
xor
test
xchg
gs
aam
loopne
scas
fsubl
hlt
or
mov
cmp
inc
adc
cmc
ret
repnz
cwtl
xor
adc
adc
test
mov
sbb
dec
sbb
cmc
sub
xor
je
dec
add
jg
ja
ds
iret
add
iret
mov
mov
fisttps
les
mov
mov
movsl
es
mov
repnz
test
rcrl
pop
jmp
inc
dec
cmpsl
lock
cwtl
gs
jnp
push
in
lea
dec
sbb
xchg
aaa
jo
cs
cli
aam
mov
lret
and
mov
push
inc
shrl
dec
dec
mov
cmp
sti
jnp
jp
sbb
mov
lea
roll
sub
xor
push
out
push
into
cmpsl
js
mov
sbb
mov
pop
and
push
and
lea
dec
das
jns
dec
push
icebp
lods
sbb
in
insb
insl
js
mov
mov
and
sbb
clc
add
and
scas
dec
sub
and
and
lret
or
and
ds
xchg
add
mov
push
adcb
or
pop
push
mov
jmp
in
add
lock
xchg
scas
lods
jnp
xor
xchg
adc
inc
xor
adc
ja
lcall
mov
lea
sbb
adc
in
ljmp
or
andb
fwait
pop
repz
mov
and
andb
sub
mov
pop
sub
mov
shlb
jmp
aas
xlat
mul
adc
in
outsb
and
mov
imul
adc
leave
jge
xor
add
add
lahf
outsl
fucompp
cmp
fstps
xor
js
xchg
lds
pop
jp
jbe
rcll
orl
add
xor
sbb
insb
and
cmp
push
mov
pop
and
adc
jp
or
pop
cmc
cmpsl
xchg
mov
adc
mov
pop
nop
je
dec
jne
es
push
mov
ljmp
push
sarl
bound
xor
sub
cwtl
mov
and
cwtl
pop
lcall
fidivs
fwait
divb
pop
lods
sti
es
lods
insl
sub
dec
lret
add
jae
lcall
cwtl
mov
lcall
or
outsb
xor
fiaddl
aas
insb
pop
and
iret
push
out
mov
mov
imull
pop
orl
mov
das
in
mov
vmovaps
add
pop
pusha
pop
enter
xor
push
leave
inc
pusha
mov
pop
and
out
inc
iret
stos
daa
pop
stc
lahf
stos
dec
xchg
into
popa
movsl
xor
cmpsb
mov
aad
mov
shll
xor
lret
mov
inc
pop
enter
push
in
jb
jmp
dec
sub
mov
xchg
cwtl
nop
enter
ljmp
inc
mov
jae
sbb
mov
ret
cmp
add
mov
mov
add
dec
in
shrl
cmpsl
xchg
repnz
xchg
adc
mov
sbb
movsl
sbb
mov
inc
cli
vminps
xor
gs
ja
dec
or
and
cmp
dec
xor
push
sbb
or
push
shl
stc
cmp
dec
mov
pop
xlat
mov
in
add
adc
orl
pop
pop
aas
or
and
mov
test
push
dec
out
inc
mov
insl
mov
clc
lock
les
mov
insl
scas
shrl
jle
fdivrs
fwait
mov
mov
push
add
test
add
enter
repz
jae
or
mov
sub
movsb
lret
bnd
cmp
push
shll
imul
adc
mov
aad
xchg
adc
mov
cld
or
jb
nop
nop
sub
out
mov
fnsave
pop
or
daa
ret
inc
mov
adc
sbb
push
push
sbb
lret
mov
xorb
pop
pop
ret
lret
je
jae
ss
xchg
stos
cmp
push
jp
adc
sti
cmpl
jne
in
lods
jle
test
loop
jp
shrb
cltd
jns
sbbb
and
xchg
jmp
lock
dec
popf
popa
insl
or
stos
ljmp
hlt
adc
dec
mov
mov
jns
clc
add
mov
ds
jne
ljmp
mov
xchg
push
dec
mov
mov
sbb
repnz
inc
jmp
push
movsb
cmc
adc
adc
xchg
mov
outsl
stc
pop
movsl
mov
sub
repnz
int
subl
aaa
push
out
loopne
push
subl
mov
add
add
test
adc
cmp
icebp
dec
push
xor
cmp
adc
subb
int3
enter
mov
inc
inc
pop
jnp
scas
dec
dec
sbb
mov
out
pusha
mov
out
cli
pop
push
popa
lret
insl
pop
sub
daa
dec
sbb
pushf
fistpl
adc
and
jnp
test
jl
mov
cmp
js
dec
xor
xchg
loopne
jle
sbb
add
ficoml
sub
mov
loop
pop
xor
sbb
js
pop
movsl
jge
aam
icebp
imul
fildl
lods
out
insb
mov
imul
mov
hlt
jecxz
sbb
jp
dec
shll
xor
fstps
into
sbb
mov
cmp
mov
test
sbb
aam
aam
data16
lahf
mov
and
pop
bound
leave
pop
int
pop
iret
mov
mov
ljmp
loope
add
jae
pop
push
cmpsl
xor
out
dec
xchg
outsb
fstpt
push
sub
imul
xchg
into
cmp
inc
mov
ljmp
push
mov
mov
ljmp
mov
push
imul
fisttpl
cmp
sahf
pop
loop
std
mov
nop
sub
mov
outsl
das
cwtl
aam
jo
xor
loopne
lds
pop
xor
pop
in
jg
fnstenv
mov
cmp
push
sbb
mov
cmp
pop
or
add
mov
inc
jp
sarb
cmp
lret
out
and
adc
fwait
mov
imul
in
ficomps
cli
push
sti
cmc
stc
mov
pushf
sbb
mov
dec
pop
dec
inc
imul
cmp
xchg
inc
gs
dec
sub
xor
scas
fwait
stc
push
jbe
les
in
adc
in
fmuls
sti
pop
push
push
inc
inc
inc
subl
aas
mov
rclb
lret
fnsave
inc
xchg
test
aaa
fs
inc
jle
mov
inc
inc
mov
lea
add
jmp
mov
sahf
jg
pavgb
mov
xchg
cmpsl
or
pop
inc
imul
repnz
je
in
pop
das
dec
push
sbb
popf
rolb
xchg
lret
pusha
cli
stos
push
jle
xchg
in
into
clc
dec
push
mov
cmp
xchg
test
outsl
roll
daa
push
int3
xchg
mov
sub
mov
push
cmpsb
arpl
fisubl
mov
pop
inc
enter
daa
cmp
cltd
xchg
ljmp
mov
cmc
out
les
pop
loope
js
and
mov
sti
imul
adcb
cmpb
sbbb
and
and
stos
add
subl
ljmp
sub
inc
mov
into
mulb
std
sub
push
sub
or
mov
cwtl
mov
jb
loop
loopne
test
inc
xchg
sbb
mov
fwait
dec
mov
push
out
jl
push
add
sbb
mov
cmpsl
or
sub
mov
add
jo
push
fidivrl
sbb
shrl
pop
scas
mov
arpl
ror
jno
aas
dec
push
cltd
dec
stos
cmpsb
sbb
inc
jbe
stc
stc
push
mov
and
scas
dec
mov
fistps
stos
push
pop
pop
mov
in
jns
lret
into
inc
mov
dec
pop
sbb
fmul
xchg
sahf
mov
xor
insb
pop
sarb
xchg
fld
inc
mov
adc
lcall
jne
ds
int
popa
cmpsb
cmc
xchg
cwtl
sbb
sbb
into
push
sub
cmpsb
mov
test
jmp
push
int
bound
scas
pop
mov
addb
jl
lea
in
cltd
jmp
cwtl
subl
dec
lea
xor
xchg
imul
imul
add
mov
loopne
pop
mov
sub
sub
movsb
push
jno
stos
not
pop
jmp
stos
adc
outsb
dec
adc
sub
mov
pop
addl
jns
arpl
pop
dec
add
adc
int3
push
insb
repnz
mulb
mov
dec
mov
insl
and
mov
dec
mov
mov
xchg
xor
mov
adc
adc
lea
aas
pop
aas
popf
xchg
mov
fwait
add
hlt
adc
adc
pusha
sub
dec
mov
addr16
dec
or
aam
divb
pushf
cmp
pop
jns
lds
pop
cmp
sub
insb
scas
fstl
mov
cld
and
in
xchg
mov
xchg
jmp
pop
divl
cmpsl
in
sbb
int3
jnp
fmuls
or
stc
pop
sbb
cli
pop
mov
adc
test
xlat
repnz
sub
aam
push
sbb
sbb
sti
or
pop
js
mov
dec
pop
in
and
int
adc
adc
dec
rol
inc
push
and
push
mov
add
adc
or
inc
pusha
andl
mov
sbb
jp
in
aas
pop
push
mov
aas
fs
imul
imul
pop
push
les
mov
mov
jb
xor
sbb
xchg
adc
shlb
push
aam
mov
jo
in
push
jae
test
outsl
push
insb
in
mov
add
mov
jb
pop
mov
pop
mov
sub
loopne
jle
jecxz
add
pop
sbb
and
sbb
addb
repnz
sub
lahf
scas
xchg
push
out
call
in
add
and
ljmp
add
call
lcall
loope
and
in
icebp
aaa
jl
mov
and
scas
jge
mov
dec
imull
int3
cmp
xor
scas
mov
pop
dec
negl
insb
sbb
xchg
jae
push
pop
inc
lret
mov
adc
or
cltd
aaa
push
jecxz
pop
jle
sub
dec
inc
imul
push
xchg
enter
add
push
xchg
lret
jns
inc
movsb
insb
adc
xchg
addr16
xchg
movsb
ja
mov
adc
call
movsb
nop
push
iret
xlat
ret
cld
dec
loop
aas
sbb
int3
push
paddw
and
mov
xchg
cmc
mov
push
mov
pop
pop
sti
gs
sbb
inc
sbb
mov
cwtl
inc
test
nop
xchg
repnz
nop
cmp
ret
adc
clc
inc
xor
iret
aas
xchg
cwtl
add
cmp
aad
imul
clc
jo
gs
xlat
icebp
add
sbb
mov
int
mov
es
mov
inc
test
in
xorl
fimull
mov
lahf
andl
rcr
lret
insb
ret
xchg
or
xchg
sbb
repz
adc
iret
and
enter
pusha
sbbb
jge
insl
mov
jecxz
jae
push
push
lds
loop
cmp
xor
test
or
mov
dec
xor
and
jl
out
sbb
fwait
mov
jecxz
push
pop
or
cmp
aas
mov
int
sub
mov
inc
xchg
mov
dec
lods
cmp
adc
or
xchg
mov
cmp
lds
add
mov
call
repnz
mov
andl
and
aas
pop
in
inc
fiaddl
xchg
lods
jo
jle
shlb
loope
lcall
xor
incl
xchg
lret
mov
xchg
inc
dec
daa
jecxz
mov
nop
push
sbb
adc
stos
xorl
jb
je
adc
inc
cmp
fildll
inc
arpl
xchg
lds
pop
or
loop
cmp
push
fdivs
sub
arpl
sub
mov
in
ss
inc
fcmovnu
mov
js
xor
push
insb
stos
into
jmp
pushf
cmp
and
dec
inc
icebp
lret
add
mov
js
fisttps
mov
mov
loopne
in
and
mov
cmpsb
xor
sub
inc
sbb
push
jecxz
jecxz
outsl
addr16
xor
js
movsb
add
ja
fnstsw
stos
mov
mull
push
pop
sbb
ret
mov
int
sbb
inc
insl
repnz
aam
jne
rolb
or
imul
sbb
inc
jl
arpl
add
sbb
aas
fldcw
push
fwait
xchg
cmpsb
icebp
push
pop
scas
out
daa
xchg
add
push
stos
lea
push
inc
cmp
shl
mov
cld
rorl
daa
adc
hlt
mov
sub
mov
clc
sbb
insl
pushf
arpl
mov
sbb
dec
arpl
push
adc
into
mov
jae
dec
pop
adc
sar
mov
add
outsb
inc
scas
push
repnz
sbb
mov
pop
xor
inc
lods
jl
scas
ljmp
jmp
rclb
mov
pop
in
inc
cmpsl
push
out
or
test
pop
inc
int3
mov
fs
pop
xor
stos
cmp
in
mov
sbb
xor
add
fcmove
lods
jmp
cmp
mov
ret
dec
jge
mov
not
inc
adc
popf
push
aaa
in
ja
iret
or
xchg
dec
adc
and
ljmp
rclb
arpl
fcmovnbe
sbb
cmp
add
test
cmpl
loopne
mov
out
mov
sbb
push
push
mov
jecxz
iret
loopne
jne
dec
ret
adc
out
fcmovnb
out
mov
xor
es
cli
cld
scas
lods
int3
xchg
mov
fstpt
imul
pop
fwait
out
push
int
call
aaa
out
mov
mov
xchg
jge,pn
jb
stos
sub
lahf
shlb
and
lea
lahf
xchg
jle
int
sbb
and
pop
add
mov
add
int
stos
fadds
xor
mov
xor
das
scas
sarl
mov
lock
xchg
gs
or
fbstp
enter
or
sbb
inc
nop
call
scas
lods
jl
jbe
inc
loop
push
pusha
fs
push
addr16
cmc
mov
mov
xor
mov
dec
ret
lods
pop
stos
jecxz
mov
cmp
dec
aam
add
pop
ss
xor
sbb
push
inc
rcl
test
mov
dec
es
inc
sbb
sbb
pop
pop
inc
push
das
subb
push
ficoms
pop
sahf
ja
into
shll
movntq
mov
lods
ljmp
loop
jns
mov
cmp
inc
adc
xchg
outsl
add
mov
xor
fdivl
out
add
mov
jne
dec
fcoml
dec
inc
mov
cmp
lret
je
push
nop
popf
and
fs
into
dec
lahf
jecxz
js
push
mov
and
jne
pop
pop
cwtl
push
inc
xor
daa
scas
fsubl
cltd
sahf
xlat
in
mov
or
sti
jl
push
fsqrt
xor
into
pop
pop
je
test
fstpl
add
lcall
fisttpl
jecxz
push
lahf
clc
cmp
xor
jb
cmpsb
jae
push
add
ficoms
movsb
xlat
loope
mov
push
inc
cmp
or
paddusw
cmp
lcall
in
xor
cli
shr
dec
dec
pushf
mov
dec
or
dec
stc
inc
cli
adc
clc
mov
dec
pop
inc
lock
fdivs
shrb
pop
fisubs
inc
je
pushf
call
push
loop
outsb
in
stc
mov
cli
cmp
in
sbb
xor
andnps
out
or
lock
lret
sub
es
and
pop
mov
sbb
mov
sub
inc
mov
lds
stos
out
push
cmpsb
mov
mov
scas
mov
lods
cmp
jb
sbb
dec
push
mov
xchg
sbb
mov
es
sahf
cmp
or
lret
dec
xchg
in
es
les
notb
jns
pop
movsb
loop
fdivrs
push
xchg
shll
sub
pop
dec
addr16
cmp
test
sub
ds
lods
insb
arpl
push
xorl
out
cmp
sbb
adc
pusha
xchg
lret
sub
jmp
js
nop
mov
fnstcw
jl
insb
mov
ljmp
test
add
cld
arpl
stos
insb
lock
test
mov
aad
pop
mov
xchg
xor
int
in
lcall
push
cmp
add
sub
das
sahf
mulps
xchg
es
out
inc
incl
or
dec
pop
adc
add
xchg
and
popa
lret
adc
push
fld
push
sahf
push
in
inc
les
test
xorl
repnz
subl
mov
or
mov
adc
js
pop
push
cmp
sbb
and
xor
sub
jl
leave
pop
ficoms
rcrb
in
call
mov
jb
dec
notl
pop
dec
and
sti
pushf
shrl
clc
and
popa
je
mov
arpl
test
push
imulb
movsl
cmp
mov
lret
cmp
test
xchg
shll
inc
jg
sbb
add
jno
pmullw
ja
ljmp
sbb
testl
and
push
xor
sti
insl
jnp
push
inc
cmp
jecxz
shlb
stos
in
sub
mov
push
sub
adc
repnz
xchg
cmp
cmp
sbb
push
and
jno
sbbb
rcrl
jge
mov
mov
mov
fmul
mov
pushf
inc
mov
pop
add
mov
int
xchg
jle
mov
pushf
divl
sbb
jbe
popf
mov
daa
lret
mov
imul
aas
mov
push
inc
push
sbb
sub
and
out
jle
jae
gs
fildl
arpl
fisttpl
cmpb
js
testb
add
icebp
jns
add
repz
fidivl
pop
outsl
xlat
adc
or
pop
lea
xchg
std
xorb
or
pop
pop
push
and
inc
pop
out
adc
and
cmp
and
in
scas
stos
mov
lahf
sbb
rorb
xlat
dec
icebp
stc
iret
test
fstpt
loope
scas
xchg
adc
in
pushl
test
movsl
jb
pop
sub
call
lahf
mov
aaa
mov
adc
lcall
xor
jo
lea
stc
mov
dec
stc
shlb
leave
int3
out
test
cmovle
jnp
xor
sbb
and
adc
sub
mov
dec
loop
popf
pop
cmp
repz
add
stos
mov
sbb
inc
xchg
clc
loopne
xchg
lods
inc
mov
std
lahf
movsb
out
mov
test
xchg
rcrl
negl
repnz
dec
popa
inc
mov
lea
sub
out
iret
mov
test
les
xlat
repz
popa
scas
test
imul
std
or
pop
sub
or
mov
jg
push
mov
jle
addr16
stos
jmp
and
jl
or
push
pushf
push
or
sarl
call
inc
sbb
xchg
adc
mov
dec
mov
push
jb
call
cmp
pop
mov
jnp
and
adc
sub
cmp
rcrl
movsl
outsb
xor
pop
or
xor
mov
insl
xor
inc
jmp
mov
addl
adc
or
mov
cld
sarb
or
icebp
jge
xchg
mov
fmuls
mov
aaa
adc
cmp
mov
mov
dec
mov
pop
es
out
add
and
mov
xor
cmp
repz
xchg
movsb
enter
adc
movsl
sbb
dec
push
nop
jb
jp
jecxz
mov
ds
das
lods
lea
fildll
imul
lock
mov
data16
dec
lahf
mov
lea
test
repnz
or
arpl
mov
mov
dec
out
fstpt
aad
lahf
sbb
rcll
pop
lea
mov
addr16
add
xor
scas
aam
je
jmp
sbb
ja
pop
pop
fldcw
je
xchg
sti
test
and
push
and
jnp
push
push
jae
faddp
pop
dec
cmp
pop
movsb
popa
iret
out
sbb
stos
dec
call
pop
cs
mov
xor
mov
pop
cmp
mov
rorl
in
lds
push
cmp
sti
pop
fldt
lcall
and
leave
mov
call
or
add
std
faddl
add
push
int3
mov
mov
fprem1
jge
mov
fidivrs
not
fiaddl
and
aad
pop
xchg
or
pop
pop
xchg
movsl
dec
and
xor
data16
cmp
and
shrl
popf
aam
imul
dec
xchg
lds
lret
filds
mov
loop
bsr
out
enter
movsb
test
out
and
js
aam
sub
cs
in
shl
add
cmpsl
jbe
in
sahf
loop
xor
adc
push
inc
arpl
scas
and
jge
jge
xchg
mov
dec
cmp
mov
cmp
push
inc
test
stos
shl
sbb
mov
loop
and
xchg
fildl
je
jae
popf
cmp
adc
xlat
lds
test
and
lret
aad
stos
jge
mov
or
cmp
int3
leave
push
xchg
or
cvtps2pd
cli
and
out
test
jge
push
out
push
icebp
xor
sub
ja
xchg
repnz
mov
push
xchg
push
adc
hlt
sub
push
mov
and
daa
cmp
adc
or
nop
sarb
test
dec
in
add
notb
les
xor
xchg
pop
pop
dec
add
mov
out
inc
adc
push
aam
xor
dec
inc
insl
sbb
int3
xlat
popl
insl
pop
add
ret
sbb
mov
mov
stos
std
fwait
sbb
stc
and
outsl
int
push
and
xor
pop
repz
mov
iret
and
inc
xchg
ds
sti
bound
sbb
repz
pop
and
inc
pop
jb
jle
in
repnz
es
lret
shlb
dec
lods
stos
sub
arpl
movsb
xchg
adc
fmull
imul
add
jnp
pop
pop
and
push
jg
nop
iret
daa
test
lods
push
test
out
jmp
mov
cmpsl
arpl
fs
mov
or
imul
pop
aas
sbb
push
or
mov
push
mov
or
sarl
jl
pop
test
push
rcrb
or
push
xchg
stos
add
fdivrs
aaa
fisubrl
std
dec
push
mov
call
fbld
pop
xor
jbe
cmpsb
inc
xchg
push
cltd
jnp
sub
shlb
mov
repnz
inc
call
imul
xchg
xchg
push
imul
lret
push
cs
sbb
push
das
mov
adc
sub
cwtl
or
out
xlat
nop
movb
push
pop
mov
aad
push
pop
sbb
decl
mov
cmc
loop
xor
mov
dec
inc
pusha
adc
mov
add
popa
out
xchg
xor
adc
pop
inc
shll
push
in
insb
fwait
loopne
jmp
pop
jle
inc
xor
mov
movsb
test
dec
or
mov
out
and
cld
sarb
jg
repz
mov
out
jo
mov
push
movsl
pop
lret
loope
push
fmull
aad
mov
xchg
and
xor
lds
aam
test
out
cmp
mov
aad
cmpsl
or
repnz
fistpll
fiadds
into
or
ljmp
mov
fs
idiv
pop
cmp
mov
push
push
add
into
xchg
pop
cmp
xchg
in
mov
or
mov
mov
popl
mov
pusha
clc
ret
sbb
lods
icebp
lea
popf
jg
out
inc
and
aam
loope
outsl
cmpsl
jmp
or
sbb
jo
roll
or
cli
out
dec
cmovg
das
mov
pop
or
test
xchg
lcall
test
and
mov
push
mov
add
jl
inc
cs
xor
dec
push
addr16
in
movsb
lcall
daa
and
lds
aam
xchg
bnd
out
cmpsl
fmull
xor
repz
mov
scas
iret
push
jb
and
xor
inc
mov
push
clc
stos
sbbl
pop
push
loop
es
add
dec
pushf
aad
fidivl
roll
rolb
test
lds
lods
ljmp
int3
lret
jl
jg
imul
iret
jmp
fbld
cmp
sbb
or
sbbb
pop
or
jg
mov
jmp
fsin
mov
lret
push
and
xor
nop
xchg
push
push
adc
cmpsb
jmp
push
fwait
bound
das
aaa
xor
lahf
adc
das
lods
push
jb
test
jb
and
out
pop
je
xor
ret
imul
pop
scas
push
inc
inc
sbb
xlat
scas
fstps
insl
popf
sbb
shlb
cmp
sub
mov
mov
dec
mov
popa
xchg
iret
jmp
imul
mov
or
daa
aas
jmp
dec
out
data16
inc
jle
sahf
gs
outsb
mov
inc
mov
push
imul
out
push
jbe
mov
stos
stos
daa
repnz
xchg
cmpsl
pop
pop
ljmp
or
jecxz
ljmp
sti
cmc
sbb
mov
andl
sbb
pop
xchg
ret
add
push
jb
mov
in
push
loope
or
test
adc
inc
inc
mov
add
push
popa
or
xor
dec
jle
jp
xor
pop
jg
mov
lret
bound
push
ljmp
xchg
sarb
pop
hlt
mov
and
call
mov
push
jg
mov
test
je
mov
stos
arpl
movsl
pushf
cmp
in
push
cmp
ret
jge
leave
inc
inc
fdivl
test
xchg
aas
dec
in
cwtl
insl
adc
sbb
test
sbb
or
ret
cltd
cld
das
aad
mov
in
jp
mov
in
in
adc
dec
stos
clc
outsb
xlat
adc
xchg
fmuls
inc
jns
pop
fisubl
icebp
shlb
test
stos
stos
insb
or
outsb
mov
dec
dec
test
loopne
daa
pop
push
out
lds
xchg
in
scas
popf
sbb
dec
xor
repnz
shrl
das
bound
xor
jmp
psubw
pop
sti
mov
outsl
mov
inc
punpcklwd
fcmovb
lcall
adc
inc
xor
fsubl
mov
fstpl
pop
or
and
rorl
xchg
sbb
mov
push
loope
outsl
sbb
pop
int3
or
adc
push
mov
mov
inc
mov
stos
std
cmp
test
std
jl
adc
pushw
pushf
mov
enter
push
mov
cmp
mov
imul
orb
sbb
dec
mov
lret
jae
cld
and
sub
push
xchg
inc
test
lea
shlb
jns
add
jle
xchg
xchg
xor
ss
jnp
pop
push
mov
xchg
adc
sbb
icebp
enter
ret
loopne
out
les
sbb
and
jmp
mov
lret
les
fisubl
std
add
inc
pop
insl
fnstenv
mov
faddl
sub
sbb
mov
popa
push
xchg
mov
cmp
xchg
push
test
and
add
xor
shll
imul
pop
mov
addb
rclw
or
ja
insl
or
mov
cmp
loope
jbe
jne
mov
fisttpl
mov
mov
mov
fisubrl
adc
leave
mov
imul
mov
mov
ficoml
int
mov
mov
mov
inc
aaa
adc
cmpsb
std
xor
xorb
xor
nop
sar
ja
dec
or
dec
sbb
mov
popf
lock
jge
pop
or
addr16
sbb
adc
push
repnz
pop
adc
sub
mov
mov
out
scas
mov
jo
add
in
push
stos
loopne
xorl
cmp
jl
adc
fdivrl
cmp
cltd
xorl
pop
stos
mov
lcall
mov
stc
in
push
ret
sub
mov
mov
push
mov
mov
loopne
fimuls
stos
ja
xor
xchg
mov
pop
cld
or
or
mov
push
push
mov
ret
rorl
push
fisubrs
xchg
repz
mov
pop
inc
std
pop
insb
mov
cltd
lret
push
pop
mov
pop
sbb
jnp
add
adc
push
lods
mov
aam
aam
sub
test
inc
dec
pop
mov
and
stos
push
lret
jl
xchg
or
dec
and
push
mov
bound
std
or
addb
cmp
repnz
xor
popf
sbb
cmc
test
stos
lret
test
jno
cmp
xchg
jae
int
and
jg
popf
hlt
mov
les
loope
fisubrs
out
test
scas
insb
imul
jle
rorl
mov
xchg
inc
mov
lods
ret
fnstcw
pop
test
inc
outsb
or
adc
sub
rcr
es
cmpsl
dec
ret
pop
cmp
insb
shlb
push
mov
out
push
cs
stc
pop
and
jnp
cmp
pop
and
repnz
push
idiv
add
in
movl
xor
mov
jo
jmp
int3
call
cmp
popl
dec
xorl
loop
cwtl
xlat
subps
rcrl
jne
xor
push
sbb
faddl
inc
jge,pt
enter
aas
inc
dec
cmc
pop
xor
or
nop
adc
xchg
ret
mov
sub
test
sahf
add
movl
adc
push
mov
out
int3
aaa
mov
pop
jae
stc
shrb
cmp
mov
stos
mov
push
gs
movsl
fnstenv
jg
cmp
iret
out
pop
push
cmp
mov
sbb
xchg
lds
sbb
pop
push
jns
std
mov
icebp
orb
adc
popf
sub
out
aaa
js
fisttpll
inc
adc
inc
ret
or
data16
mov
inc
push
mov
xchg
bound
mov
pop
pushf
mov
xchg
xlat
iret
aam
adc
mov
dec
fcoml
popa
js
dec
push
stos
inc
das
in
lahf
sbb
add
pop
mov
scas
imul
sar
or
cmp
out
jmp
or
repz
popa
test
pop
inc
je
xchg
fistps
stc
and
test
filds
cli
testb
iret
cltd
movsb
rolb
push
inc
inc
push
mov
pop
and
push
insl
hlt
fcmovbe
push
xchg
int
sarb
mov
cmpsl
pop
add
clc
sahf
xor
repz
iret
pop
aas
pop
scas
cmc
xchg
adc
push
repnz
dec
mov
xor
ljmp
jb
jmp
adc
cmpsb
out
mov
in
mov
mov
shr
sbbl
jle
cs
mov
ljmp
add
negl
adc
lret
sarb
add
loopne
mov
mov
out
cmpsl
sub
lods
mov
pushf
xchg
inc
xchg
in
loopne
and
jmp
pop
push
mov
push
lods
fistps
cs
cmp
xchg
sub
rorb
or
out
popa
movsl
inc
dec
daa
pop
push
jg
out
mov
or
ss
xchg
ficoms
mov
dec
neg
sub
add
mov
repnz
mov
pop
or
notb
ljmp
jb
stos
mov
ja
into
pusha
int3
mov
or
fstl
rolb
dec
sbb
fstpl
or
dec
dec
inc
pop
fwait
das
gs
jae
push
pop
jnp
enter
mov
sub
mov
js
mov
jnp,pt
out
cmpsb
repz
les
mov
dec
jecxz
pop
setb
dec
push
mov
mov
stos
push
pusha
xchg
cld
iret
js
neg
or
lahf
jmp
movsb
imul
mov
jnp
jne
popa
cs
inc
ret
mov
mov
ret
push
pop
adc
bound
mov
mov
aam
xlat
sbb
adc
jg
sbb
cld
test
xor
fdivl
dec
jp,pt
pop
jp
mov
in
das
xchg
add
enter
ds
xor
push
inc
cmpsl
or
adc
js
int3
insb
xchg
jle
xchg
inc
mov
in
ljmp
faddl
jle
mov
or
sub
aam
jle
add
adc
ja
xor
lahf
sub
lea
movsb
arpl
push
xchg
cmp
in
jg
cs
insl
sbb
jne
sub
jb
mov
dec
fsubl
ss
sbbb
test
lcall
xlat
hlt
cmp
lret
xor
push
pop
clc
push
outsb
mov
jg
dec
push
xor
jp
loop
fwait
sub
adc
shll
pop
jecxz
stc
push
clc
loop
or
cmp
push
lods
out
jo
push
inc
dec
stc
ret
push
icebp
ja
adc
fldcw
pushf
xchg
mov
pusha
popf
xchg
xor
sbb
scas
mov
lea
cli
xor
int
aam
in
xchg
mul
test
add
int
cmp
jp
enter
stos
sbb
mov
pop
xchg
lock
mov
xchg
loop
xor
cmp
rol
mov
mov
testb
mov
movsb
addr16
push
in
lds
mov
inc
cs
jmp
fcomi
add
ds
mov
lods
xchg
push
out
dec
mov
push
or
imul
scas
daa
jmp
divl
cmc
add
call
test
lea
mov
xor
cli
mov
add
mov
lcall
pusha
inc
test
je
std
outsb
iret
jmp
inc
xchg
rcrb
stos
mov
mov
dec
xor
sbb
or
mov
pop
push
pushf
pushf
pop
sbb
xchg
adc
lea
test
adc
sub
cld
sub
sbbb
imul
aad
sarb
negl
xor
mov
frstor
add
xchg
mov
dec
and
movzbl
mov
in
mov
fwait
scas
and
clc
out
adc
mov
mov
or
jo
in
push
jge
pop
lret
ss
lods
push
cltd
lahf
jle
adc
jbe
jns
push
xchg
ss
fdivl
jo
fdivl
cld
shlb
inc
adc
push
dec
mov
mov
or
out
cmp
call
sahf
push
xor
out
mov
stos
or
cmc
sbb
xor
jge
xchg
mov
lods
sub
sbb
lods
adc
cmp
adc
outsl
mov
push
sub
dec
out
movsl
or
mov
bound
pop
notl
mov
outsl
js
ds
push
dec
lods
inc
xorl
shll
or
mov
adc
inc
dec
call
jnp
sub
or
rcll
dec
xlat
pop
into
rol
std
cs
popf
rcl
mov
push
xchg
push
das
mov
mov
in
shlb
loope
jle
push
imul
sub
pop
cs
in
sahf
pop
inc
mov
pusha
push
mov
rcr
test
mov
imul
cmp
inc
faddp
fimuls
lods
jg
cld
clc
int3
jb
movsl
movsl
rcl
inc
call
xchg
cltd
lea
or
cs
pop
rcl
jb
and
aad
lahf
je
cmp
add
sti
add
insl
mov
pop
sub
xor
adc
ds
xchg
push
imul
ss
push
test
fstps
dec
ja
mov
sub
repz
add
lcall
imul
imul
add
cmpsl
pusha
add
stos
loopne
mov
cmc
data16
pop
jae
jmp
popa
call
sub
mov
mov
outsb
js
mov
xchg
or
hlt
dec
lea
and
lods
pop
or
cltd
jge
shll
or
cld
dec
in
and
cld
pop
cmp
push
test
mov
mov
dec
push
clc
jle
pop
in
mov
je
int3
cmp
mov
lea
xlat
push
dec
add
scas
mov
pusha
icebp
stos
push
mov
mov
imul
xor
pop
out
pop
loope
adc
xchg
shl
sahf
in
clc
loope
mov
aas
fbld
fimull
or
fistps
aam
sub
negb
xchg
cmp
sub
push
xor
xor
cli
ss
ss
sarl
test
pop
or
lret
add
mov
fistpl
inc
inc
lds
lahf
xorb
js
iret
aad
test
mov
pop
jne
dec
mov
adc
outsb
jo
rcrb
xchg
mov
sbb
pop
ja
lds
add
cmp
and
gs
mov
insl
and
gs
out
sub
adc
jbe
xlat
call
mov
frstor
adc
add
in
adc
test
lds
mov
xchg
aam
xor
dec
out
subl
iret
pop
rorb
fisttpll
mov
les
xchg
push
adc
pop
addr16
inc
inc
cwtl
add
or
orl
iret
inc
push
push
adc
out
push
fwait
insl
test
shl
call
and
cwtl
push
sbb
inc
adc
push
movsb
out
jecxz
mov
pop
push
outsl
mov
jae
adc
nop
or
mov
or
jp
lcall
push
sub
xchg
jmp
mov
dec
jbe
cld
cwtl
sub
lret
cli
pop
subb
xlat
testb
adc
xchg
or
sub
movsb
xchg
adcl
in
adc
xor
stos
sub
pop
cs
xor
mov
add
scas
mov
jno
popa
divb
fmuls
xor
add
cmpsb
out
mov
mov
into
mov
jne
mov
jmp
insb
je
in
out
lahf
pop
cmp
scas
inc
pop
pop
mov
cmp
repnz
cmp
stos
mov
test
popa
xchg
bound
movsl
and
inc
mov
inc
pop
sub
push
insl
lods
push
std
aad
push
movsb
je
into
frstor
cltd
mov
pop
jmp
mov
fistl
push
ljmp
lcall
pusha
sub
or
lock
jns
jno
clc
loopne
cmp
and
add
jmp
jg
xchg
jne
xchg
pop
std
cmp
dec
dec
test
not
arpl
cmp
pop
lret
push
es
push
xchg
jmp
mov
data16
push
sub
or
push
jle
enter
sti
mov
xchg
dec
loop
call
push
aad
push
inc
es
cltd
leave
ret
js
inc
or
mov
mov
push
push
adc
mov
xlat
test
lahf
incl
mov
pushf
adc
push
xor
sbb
jns
lods
popf
cmp
sahf
xchg
ja
jne
dec
jns
dec
xchg
lcall
adc
adc
and
sub
push
pop
dec
pop
mov
seta
movsl
cmp
loop
mov
push
adc
out
leave
add
enter
sti
lods
cmpsl
push
out
pushf
inc
hlt
xchg
push
push
xor
fmul
mov
cmpsl
clc
inc
and
pusha
out
loop
pop
fidivs
insl
push
dec
sub
sbb
xchg
xor
sub
push
inc
mov
pop
mov
loopne
mov
and
lea
test
add
cmp
repnz
push
orb
jl
loop
pop
pop
test
inc
mov
and
jecxz
mov
sbbb
or
iret
jmp
sub
mov
cmpsl
loopne
fwait
ds
stc
sti
movsl
adc
or
push
pop
sbb
pop
adc
xlat
and
aad
mov
xor
sub
mov
inc
out
xor
sub
lods
js
mov
and
mov
mov
add
inc
lods
add
mov
movl
inc
jl
xchg
into
scas
sub
adc
das
fisttps
adc
repnz
sub
cmp
fmull
cs
and
xor
add
fnstcw
pop
test
stos
ret
lahf
xor
mov
xchg
jmp
test
jle
jl
inc
je
push
shrl
out
aas
sbb
js
fiadds
out
jne
aad
aad
test
dec
sti
and
ss
out
sub
sbb
lret
sbb
jnp
into
ficoml
rorl
stos
cld
mov
leave
xchg
icebp
les
push
push
shlb
dec
or
add
adc
shrl
jle
pushf
stos
add
incb
scas
or
shlb
mov
fmul
push
push
aam
ljmp
hlt
dec
in
pusha
rclb
fdivr
cli
data16
jb
popa
sub
lahf
cs
xorl
adc
sub
mov
daa
pop
loope
jns
or
and
pop
les
xor
outsb
adc
out
mov
inc
mov
je
push
add
mov
add
sbbl
mov
imul
or
fcmovb
pop
push
out
clc
or
jmp
insb
out
and
mov
xchg
mov
jns
ss
shl
int
pop
imul
ds
in
mov
sarl
xlat
inc
jbe
and
lahf
cli
jb
jmp
movlps
scas
call
cmp
bswap
lods
inc
imul
xor
add
sbb
mov
mov
dec
sbb
lea
andl
lods
pop
cmpsl
sub
and
xor
adc
into
xchg
out
xorl
fwait
movsb
xor
pop
push
stos
xchg
fidivrs
sub
ret
sbb
rcrb
test
mov
sbb
in
mov
rorb
cmp
mov
movsb
dec
ja
arpl
and
fs
or
sti
or
int
pop
lcall
stos
mov
in
je
push
int3
call
mov
dec
imul
or
scas
mov
mov
inc
pop
xchg
or
inc
aam
lcall
mov
ljmp
daa
stc
xchg
repnz
mov
das
pop
dec
shr
shl
mov
pop
sbb
pushf
jmp
mov
repnz
test
test
sbb
sahf
mov
xchg
in
or
xlat
orb
test
push
nop
lret
push
push
int
jmp
push
icebp
cli
lea
mov
into
cmpsl
je
push
dec
int
in
test
pop
mov
jmp
pop
insb
lahf
sub
push
xchg
out
dec
iret
mov
or
jg
testb
pusha
lret
shlb
lds
jne
xor
sub
xlat
mov
xor
cmp
outsl
push
xor
push
fwait
inc
jne
cli
ja
insl
xchg
xchg
imul
insl
dec
fxch
out
pusha
imul
jmp
into
sbb
xchg
mov
push
adc
loop
int
or
roll
push
dec
push
in
loope
mov
push
jo
std
popf
divb
jge
cld
xor
mull
adc
cmp
push
arpl
dec
insl
push
add
mov
push
cli
fidivl
xchg
jg
das
dec
fidivl
push
dec
mov
inc
aad
mov
jecxz
stos
cmc
loope
lret
sub
and
push
push
sbb
mov
rorb
or
shll
test
mov
add
aad
fwait
adc
xor
mov
add
dec
xor
orl
cmp
popa
jge
lock
inc
sub
push
xchg
mov
xor
mov
or
dec
call
pop
insb
xchg
jl
ja
mov
gs
xchg
inc
add
fisttps
jl
fmuls
repz
jno
int3
xor
adc
mov
in
jns
sbb
jne
iret
out
push
insl
cmc
icebp
or
mov
mov
mov
mov
fidivrs
lock
cmp
incb
dec
fdivs
push
lret
sub
sub
inc
rorb
rorb
dec
fldcw
mov
nop
rorl
scas
pop
push
push
aam
push
push
mov
adc
stos
xchg
inc
cltd
xor
sti
jnp
pusha
adc
mov
inc
cli
mov
and
jnp
call
and
test
cmpl
test
push
dec
lahf
sub
push
test
pop
xchg
sbb
arpl
sub
dec
mov
cmpsl
lcall
cwtl
xor
pop
test
add
dec
aad
fldenv
jmp
xor
jl
sub
mov
xchg
jo
ret
lret
pop
jb
mov
jnp
xchg
xchg
insl
test
pop
push
enter
inc
mov
and
jge
daa
mov
pop
cmp
imul
scas
push
dec
arpl
push
xchg
sti
mov
or
mov
adc
inc
or
loop
lret
int3
fbld
aas
mov
mov
out
insb
iret
adc
jns
lock
lahf
sub
jnp
mov
pop
dec
push
subl
popa
cltd
push
stos
add
test
sbb
scas
xor
mov
add
arpl
sub
test
fdiv
outsb
or
cmp
daa
mov
cmpsl
ss
cltd
insb
inc
std
sti
aad
cmp
faddl
test
jl
inc
jnp
int3
int
jbe
inc
cmp
pop
add
loopne
dec
mov
mov
mov
aam
jle
mov
adc
test
decb
jbe
or
rorl
mov
xchg
lahf
add
lret
fldt
sub
ss
loope
mov
stc
jns
cmp
adc
or
mov
sub
pop
lcall
xor
out
shrb
xchg
lcall
insl
cmp
shrl
cs
aam
int3
jae
push
add
mov
test
or
jl
jns
xchg
and
xor
push
test
fidivl
xchg
shlb
xchg
fcmovb
push
nop
imulb
push
pop
dec
cmpsb
adc
add
dec
push
pusha
cmpsb
sbb
pusha
or
xchg
mov
outsb
insb
pop
test
mov
and
ss
subl
imul
and
adc
insb
lret
insl
cmp
shll
fsts
subb
outsb
inc
arpl
dec
xor
js
dec
mov
xlat
inc
jnp
js
scas
cmpsl
sbb
xchg
cmpsl
cmp
stos
xor
clc
test
add
adc
adc
sbb
sub
iret
xor
imul
jno
push
test
test
ljmp
sub
lods
test
ja
jmp
jb
cli
pop
fcmovne
push
sub
or
mov
add
into
out
into
cmp
shlb
int3
push
jae
sahf
xor
inc
pusha
push
lds
jg
popf
cltd
inc
adc
inc
sub
popl
incl
cmp
mov
pushf
es
jmp
in
push
add
and
int
subl
sbb
ret
cmp
ja
cmp
mov
push
dec
xor
jno
sbb
and
cli
xchg
pop
scas
hlt
xchg
pop
cs
fidivs
inc
test
imul
stos
hlt
xchg
loopne
out
or
dec
aad
xorb
nop
testl
adc
scas
lret
add
or
std
cmp
mov
add
xor
insl
subb
inc
mov
and
fs
shrl
push
inc
imul
inc
sbbb
fdivl
iret
jge
rcrl
ljmp
pop
inc
inc
scas
cld
xchg
rcrl
or
xlat
incb
lds
lea
daa
clc
in
sub
in
xor
shlb
sahf
out
leave
mov
mov
sbb
aad
add
mov
ret
and
mov
pop
call
pusha
out
mov
mov
xlat
pop
fildl
mov
pusha
out
cmp
push
fmull
pushf
daa
mov
scas
in
mov
mov
inc
icebp
add
lock
subb
push
cmp
outsl
rcrl
movsb
add
movsb
jg
add
dec
ljmp
in
jmp
push
pusha
and
fsubr
xor
rcrb
loope
lret
xor
cmp
shr
call
jae
mov
es
in
in
ret
or
mov
in
cli
and
jge
mov
imul
ja
mov
inc
adc
xchg
pop
pop
shll
enter
xor
push
push
inc
es
sub
cmpsl
loope
add
inc
adc
cld
inc
add
jecxz
imul
and
xchg
imul
and
cmp
push
fistl
lahf
cmpsb
aam
cmp
cmp
clc
outsb
scas
mov
mov
in
adc
lret
daa
xchg
icebp
xchg
dec
mov
xor
inc
jecxz
inc
pop
or
les
jle
push
add
cwtl
mov
cmpsb
enter
jmp
mov
test
jge
mov
incb
out
stc
out
push
or
decl
sbb
jmp
xchg
jbe
mov
repz
mov
adc
xchg
mov
pop
or
mov
insb
jns
push
dec
push
pop
adc
mov
jae
pushf
jge
lods
int3
adc
out
pop
test
sbb
repnz
add
scas
adc
addr16
pop
adc
outsb
test
cld
add
ret
imulb
mov
sahf
int3
pop
pop
in
or
mov
rorl
push
push
or
ret
xchg
xlat
mov
enter
dec
jns
shl
xor
dec
mov
cli
mov
loopne
cwtl
mov
popf
pop
cmp
ss
cmpl
je
pop
mov
test
rcrb
in
sbb
pop
pop
stos
mov
shr
push
xchg
insl
sahf
gs
in
add
mov
pop
std
add
add
popf
dec
cltd
jne
mov
mov
inc
xchg
call
xor
xchg
sti
adc
mov
jb
lret
xor
mov
test
data16
jmp
fsubrs
fdivrs
mov
loopne
jmp
jns
imul
arpl
es
fidivrl
lock
cmp
sub
insb
orb
testb
ret
xchg
add
push
stos
out
ja
and
dec
mov
sub
fcompl
jecxz
sub
js
dec
pusha
and
test
add
dec
mov
stc
enter
aad
add
xor
adc
fsts
pusha
enter
adc
jp
rorl
mov
pop
daa
jp
mov
push
push
ret
outsb
enter
stos
lock
movsb
mov
push
rcrl
fs
cmp
ficoml
cwtl
push
jp
mov
fnstsw
int
lahf
aas
jmp
bound
ret
fistl
inc
fwait
jmp
cmp
nop
sbbl
mov
mov
cs
inc
out
jns
and
add
aaa
mov
cltd
xor
mov
xchg
inc
mov
nop
fnstcw
push
add
aas
mov
mov
ds
out
mov
in
test
rclb
out
idivl
pop
loop
test
mov
sbb
push
rorl
and
jae
sbb
jb
xchg
mov
mov
mov
call
xchg
xor
push
imul
sub
xor
push
out
mov
and
ds
and
test
imul
pop
jmp
jbe
sub
mov
inc
aad
scas
popa
arpl
pushf
add
lds
jle
sub
ret
mov
aam
mov
push
sahf
jno
push
mov
cltd
insb
xor
pop
adc
jne
pop
adcb
imul
cmpb
int3
and
inc
xor
lds
mov
mov
ss
outsb
adc
lret
dec
fiadds
call
mov
jb
js
shrb
sbb
sub
movsl
out
aam
aam
hlt
mov
push
scas
pushf
orb
pop
leave
call
data16
jno
out
mov
int
sbb
sbb
repnz
enter
jl
clc
push
arpl
popf
adc
dec
xor
fimull
or
arpl
mov
iret
shlb
clc
pop
test
fs
sbb
nop
mov
pop
mov
or
out
inc
jp
dec
add
mov
pushw
dec
ljmp
into
sbb
stc
adc
jp
pop
xchg
test
xchg
and
add
pop
sbb
sarb
ror
add
push
or
mov
pop
add
push
gs
xlat
xor
daa
adc
dec
test
stos
shrl
dec
enter
mov
cmp
clc
pop
sbb
sbb
or
js
mov
decb
arpl
cmpsl
lock
aam
jns
cltd
nop
test
jbe
nop
ss
and
aam
ret
adc
mov
cmp
sbb
mov
dec
adc
movsl
push
jo
sub
mov
pop
add
movsl
shl
jge
dec
shll
movsb
movsb
in
push
push
nop
inc
or
sub
dec
sbb
jne
xchg
arpl
sarl
ret
inc
cmp
fsubs
pop
push
iret
mov
clc
adc
pop
decl
test
ljmp
sbb
int3
aaa
iret
fldt
mov
xorb
call
sbb
imul
aas
jne
mov
outsl
jo
mov
mov
out
sub
aaa
mov
push
adc
cmp
nop
nop
xchg
mov
out
mov
lods
std
pop
stos
aas
scas
inc
jecxz
mov
test
and
mov
mov
movsl
xchg
lret
loop
or
out
shll
in
cmp
jo
inc
aad
adc
lds
cmp
adc
push
or
loopne
mov
pop
sub
or
daa
js
nop
push
ja
out
dec
out
bound
je
fsub
in
or
sub
cld
jle
add
mov
mov
repz
cli
push
push
xor
loope
push
stc
movsb
pop
mov
mov
lods
hlt
or
ljmp
and
jne
inc
addb
inc
push
stos
mov
cltd
stos
in
insl
mov
mov
mov
aas
cld
cmp
dec
adc
xlat
xchg
bound
push
lods
loopne
mov
scas
bound
outsl
cmc
cmp
fiadds
mov
sahf
push
push
xlat
aad
add
pop
or
movsb
sahf
iret
add
add
xchg
inc
fsts
fldt
mov
mov
into
mov
fldenv
dec
test
xchg
dec
push
lea
test
pop
pusha
jecxz
push
adc
out
mov
mov
dec
mov
ds
xor
ljmp
pop
push
out
mov
das
jnp
jno
sbb
mov
cmp
mov
pusha
aas
jg,pt
rcrl
jl
lea
jge
ret
aaa
push
cs
das
xor
ja
arpl
and
movb
push
lret
and
cli
sbb
js
movsl
es
mov
jb
clc
mov
or
push
cld
jns
pop
int3
mov
loope
loope
cmp
ss
mov
popf
mov
in
in
lret
test
clc
or
push
xchg
mov
xchg
stos
add
or
rorb
mov
xchg
iret
nop
int3
mov
in
popa
filds
xor
imul
xorl
jp
int
ret
leave
mov
ja
mov
repz
or
out
mov
or
mov
or
adcb
or
testb
mov
addr16
subb
adc
push
push
enter
add
add
dec
cs
insl
adc
lea
or
xchg
jno
adc
lcall
shrb
negl
pop
test
fwait
aas
cwtl
push
sbb
pop
pop
out
fxch
lods
adc
push
std
outsb
or
push
cli
sbb
push
xchg
cmc
inc
addb
js
xor
data16
sbb
test
jmp
cltd
sub
sti
adc
dec
pop
xor
fisubrs
pop
hlt
mov
jnp
in
jno
push
and
sti
push
testb
popf
imul
jmp
inc
je
pop
jl
or
inc
cwtl
les
push
jb
and
loop
movsb
mov
testb
dec
pushf
fisubrs
popf
lds
cmpsb
mov
mov
cwtl
pop
cs
sbb
scas
addb
jns
mov
inc
in
pop
sub
and
pop
mov
stc
test
mov
push
movsl
test
jns
mov
lock
loopne
mov
pop
push
sti
and
xchg
rcrb
mov
xor
lds
sub
adcb
pop
or
ljmp
rol
sub
sub
cld
cltd
or
cmc
stc
inc
cmp
adc
xchg
xor
mov
movsb
lahf
lret
loopne
movsb
cmp
mov
outsl
cli
ss
sbb
movsl
and
aam
cmp
add
xlat
jl
shll
sub
push
mov
jp
rcrb
pushf
pop
add
add
jmp
je
call
mov
insb
push
jl
insl
cwtl
sahf
cmpl
lret
bound
xor
rorb
cmp
push
jns
popa
adc
movsl
pop
fisubs
popa
pop
lahf
add
scas
sahf
sbb
into
pop
and
mov
push
pushf
add
sbb
sarb
mulb
xchg
xchg
sub
es
cld
push
std
test
cmpsb
pop
ja
sbb
imul
dec
loope
test
out
pop
jecxz
dec
pop
cmp
adc
jmp
sub
popa
loop
cmp
mov
dec
pushf
sub
test
mov
xchg
inc
jge
leave
fldt
sub
call
sti
sub
pop
sbb
push
test
scas
lds
dec
sti
inc
add
dec
test
cli
arpl
jmp
add
ja
aam
adc
mov
pop
sahf
sahf
adc
fistpll
jae
push
aaa
dec
imul
mov
mov
aas
insl
adc
pop
inc
lret
imul
sub
or
aas
outsl
fxch
je
inc
lods
lret
or
imul
fmull
cwtl
stc
stc
push
xlat
jecxz
sbb
jno
sub
aaa
insl
jle
insb
sub
fwait
mov
dec
out
cmp
xchg
div
call
sbb
insb
clc
jnp
xor
in
pop
aad
fwait
mov
sbb
pop
push
arpl
aaa
mov
loop
bound
fistpll
cmp
enter
out
cltd
dec
jae
mov
icebp
adcb
out
das
inc
or
popf
inc
adc
mov
jb
jb
aaa
ja
lret
fcmovnbe
ja
xor
push
push
dec
push
pusha
orb
or
cmp
dec
jns
idiv
adc
mov
jp
jb
aam
or
mov
and
loop
lods
cmp
ficoml
inc
pop
or
xchg
test
jo
enter
inc
iret
cmp
aaa
or
push
lods
add
ja
adcl
mov
dec
add
lds
imul
faddl
jae
lea
jne
daa
ficoms
mov
stos
divl
pop
movsl
outsl
pop
out
enter
js
add
sub
xor
xlat
test
test
popf
push
jecxz
es
xor
pop
add
adc
ja
icebp
sbb
xchg
mov
stos
push
inc
inc
jl
mov
adc
inc
xchg
repz
lods
cmc
and
jae
je
out
jl
loopne
jne
inc
jle
div
push
adc
fistl
data16
rorb
and
shl
adc
xchg
int3
popa
stos
add
jo
jnp
jnp
cmp
xchg
add
inc
and
rclb
xchg
mov
int3
arpl
ret
dec
sti
shrb
movsl
sbb
sbb
in
sahf
mov
push
add
pop
leave
shlb
push
jmp
repnz
clc
xchg
repz
lods
adc
les
mov
mov
and
ds
inc
into
and
jno
push
dec
inc
jle
push
stos
jecxz
out
dec
inc
lahf
xchg
or
mov
daa
inc
or
sbb
sub
push
cmpsl
aad
dec
add
dec
jmp
add
mov
push
mov
in
in
rcll
xor
xor
imul
lahf
or
adc
mov
push
pop
sahf
ficoms
or
dec
push
adc
inc
pop
jae
inc
nop
cmpsb
and
in
push
scas
gs
push
dec
rol
xchg
sbb
das
xlat
test
mov
sub
cs
lea
push
sub
loope
cmpsb
jle
pop
jecxz
or
dec
sbb
test
movsb
mov
out
lahf
test
inc
xchg
pop
rcrb
out
lret
mov
inc
jnp
bound
pushf
sub
scas
and
in
call
into
orb
mov
xlat
loope
cmp
fiaddl
loop
jmp
movsb
movsl
sub
sti
jl
adc
cmp
push
pop
mov
fcoms
enter
add
adc
leave
add
mov
sarl
shlb
rclb
gs
je
inc
movsl
ljmp
aaa
outsb
fwait
push
cltd
jne
std
xchg
mov
mov
pop
and
sub
inc
mov
lcall
dec
les
push
mov
sbb
sti
sub
mov
popa
mov
inc
mov
push
sub
xchg
lods
xor
cmpsb
addl
push
sbb
je
jp
jmp
lods
loopne
sub
std
jp
inc
fisttpl
std
cmc
adc
sbb
inc
not
loopne
icebp
pop
pop
push
ret
repz
cmp
sub
jp
push
lret
ret
lods
into
mov
dec
push
jnp
dec
loop
jecxz
inc
mov
cs
ds
lea
jp
jge
ret
push
jae
pop
pop
andl
sahf
inc
into
in
rcr
fwait
cmp
pop
push
std
sbb
xchg
sbb
jl
xlat
mov
aam
cmp
adcb
cli
hlt
pop
lahf
gs
fmulp
ficoms
adc
enter
sbbb
fnsave
loop
sbb
sbb
pop
ret
repnz
outsl
loop
jg
xchg
adc
xor
shll
pushl
gs
outsb
push
lock
push
dec
xchg
cmp
addr16
int
repnz
xor
inc
mov
cmova
fwait
mov
mov
std
mov
and
aam
out
adc
fidivs
imul
mov
mov
adc
pop
mov
ret
test
shlb
insb
pushl
outsl
lea
inc
shlb
lret
imul
nop
xchg
pop
or
push
push
mov
je
lret
xchg
sbb
sbbl
popf
out
push
push
dec
in
pop
push
push
dec
stos
dec
sbb
push
or
pusha
fldl
pop
mov
std
add
lock
and
mov
je
adc
sbb
push
bound
dec
lock
jno
jae
fbld
xchg
stos
cld
xor
mov
cld
cs
dec
xchg
outsl
adc
cmpsb
rclb
fwait
into
pop
dec
sub
daa
and
jp
clc
fisubl
xor
xchg
inc
out
pop
test
jle
or
and
adc
mov
call
fildl
lret
jns
in
sub
scas
sbb
movsb
mov
in
cmpsb
or
es
pop
test
jg
repnz
jnp
mov
xorb
and
daa
pop
dec
sub
bound
dec
out
data16
insb
sub
xor
aaa
dec
inc
add
adc
pop
scas
fldl
lret
push
out
xchg
decl
and
push
sbb
cmpsl
rol
fs
int3
repz
hlt
mov
repnz
jbe
sarl
push
loope
ja
int3
inc
and
fidivs
lret
rorb
xchg
sub
lahf
and
lret
add
shll
sub
sub
aaa
fisubl
jl
inc
mov
int
movsb
jg
jno
push
jns
or
mov
pop
inc
pop
scas
sbb
lret
cmpl
pop
lds
push
es
rorb
push
lret
rorl
xchg
leave
les
cmp
jnp
aas
sarl
sub
incb
jb
hlt
cmp
mov
dec
pop
cmp
xor
push
mov
rcrl
faddl
int3
push
loop
sub
mov
or
jo
jo
outsl
mov
mov
push
pop
xor
xlat
das
rcll
shl
jbe
or
inc
xor
andb
or
popl
and
popa
mov
push
push
hlt
inc
push
dec
out
nop
add
repnz
iret
gs
dec
fdivr
sbb
movsb
insb
xchg
sbb
nop
adc
xlat
iret
sub
stos
adc
jo
loopne
xor
pop
in
mov
inc
hlt
sbb
dec
push
xor
jmp
daa
and
pop
cmp
ss
ret
test
aas
addr16
xlat
cltd
xor
rorl
pop
mov
pop
sub
mov
mov
rolb
fildll
iret
dec
mov
loop
popa
iret
lahf
js
push
cmp
jecxz
mov
lret
sbb
xchg
xor
sbb
sub
push
dec
es
es
cwtl
icebp
and
and
clc
jecxz
and
dec
lret
ja
out
sub
pop
lock
mov
sti
popf
or
adc
lret
adc
dec
and
int3
mov
sbb
mov
sub
ljmp
insb
fmuls
arpl
addr16
jge
sub
shrb
push
add
sbb
push
xor
xchg
aaa
imul
mov
out
push
mov
out
pop
clc
jge
and
loope
mov
and
and
aad
xor
xor
fstl
push
clc
pusha
mov
test
out
xorl
dec
testl
call
lods
repnz
fiadds
pop
out
and
jge
adc
mov
outsl
sub
jnp
or
dec
push
addr16
insl
je
std
cmp
dec
and
int3
sub
lret
adc
in
ja
mov
push
sbb
insl
add
sub
jge
xor
inc
jmp
inc
enter
mov
xchg
out
shl
je
std
push
scas
rcr
mov
sub
jb
sahf
or
mov
sub
adc
orb
sub
movsb
push
xchg
rorl
je
jno
adc
loop
jl
scas
inc
call
or
pop
stos
xchg
idiv
dec
push
outsb
xor
ljmp
pop
add
stos
jge
ss
sub
fs
outsb
int
cmpb
loopne
pop
xchg
sti
in
jmp
xorl
mov
fs
and
mov
mov
mov
pop
sbb
mov
lret
lds
repnz
add
xchg
int3
cs
jae
push
in
int3
mov
sbb
cmpsb
out
in
sbb
sub
jnp
and
mov
addr16
popa
mov
mov
xchg
push
dec
sub
and
mov
jnp
ja
dec
js
adc
stos
jae
out
pop
iret
insl
sbb
lock
dec
fistps
sti
mov
dec
xchg
xor
or
mov
loop
not
nop
pop
inc
fcoml
fbld
xor
scas
lret
sub
ret
in
sub
mov
nop
ret
push
push
mov
dec
enter
add
mov
cmp
push
scas
call
jae
xchg
aad
fmuls
test
test
or
lret
fwait
push
outsb
pop
add
clc
and
loopw
jge
in
cmpsl
push
mov
adc
xlat
sub
cli
cli
mov
pop
ja
or
les
in
pop
shlb
sub
test
movsb
xor
mov
sbb
push
pusha
test
dec
inc
xchg
and
xchg
sbb
inc
fstl
dec
cmc
fldt
jnp
xchg
shrl
js
addl
mov
xchg
icebp
fwait
mov
movsl
sbb
icebp
insb
inc
testl
retw
test
jno
out
rcrb
mov
cmp
and
lea
out
ret
or
jns
cltd
jbe
pushf
insl
fs
pop
xor
cmp
adc
xchg
and
and
cmp
nop
mov
cmp
mov
pusha
sub
xchg
push
mov
xor
hlt
popa
or
push
xchg
aam
pop
jge
stos
in
or
inc
sub
lahf
fucomi
test
mov
cmpsb
lods
das
adc
push
repz
jno
fsubrs
xchg
insb
cmp
cmp
push
mov
xchg
inc
cmp
inc
sbb
repnz
mov
insb
pop
fwait
push
inc
out
dec
mov
mov
insl
das
fiaddl
mov
sbb
adc
dec
loop
dec
xadd
jae
mov
mov
repz
inc
bnd
dec
xchg
aam
add
repz
lds
and
sub
xchg
push
mov
repz
mov
lahf
lsl
dec
xchg
jno
inc
cmp
xchg
mov
dec
push
cmc
iret
mov
lods
stos
mov
ss
jg
jbe
pop
imul
mov
jge
adc
ret
in
jnp
push
sbb
dec
xchg
push
sub
repnz
lret
lods
xor
mov
sahf
in
inc
ljmp
sub
inc
mov
inc
push
xchg
lcall
notb
js
in
stc
fstp
dec
arpl
loopne
in
fs
cmc
sbb
mov
cmp
es
test
clc
bound
ror
shrb
notl
test
rolb
negl
loop
sbb
jl
pop
mov
mov
cli
in
jnp
xchg
mov
leave
or
xchg
mov
xor
pop
jmp
xor
daa
rclb
stos
mov
into
pop
lds
fildl
xchg
into
lock
ret
mov
adc
pop
xchg
jne
mov
out
dec
xor
inc
adc
sub
fcmovu
push
mov
sbb
adc
pavgb
outsl
pop
repnz
push
or
cmp
je
adc
jbe
and
xchg
pop
scas
mov
fisubrs
unpcklps
jg
cmp
pop
mov
jge
pop
xchg
xor
sub
adc
sbb
in
push
popa
add
sbb
inc
adc
cmpsl
add
cmp
push
and
push
and
daa
xchg
mov
cmpsl
pop
pusha
xor
lods
jb
jb
jbe
pop
sbb
mov
mov
movsl
adc
pop
adc
idiv
mov
in
jo
cltd
rcr
and
mov
jge
sub
int3
dec
mov
insb
int
adc
ror
movsb
and
push
out
mov
pop
add
out
mov
adc
lcall
inc
test
lods
mov
jl
add
testb
mov
dec
xor
xor
jp
loopne
mov
mov
adc
mov
mov
or
push
cmc
push
jg
add
xor
in
jbe
das
and
sarb
pop
mulb
xor
lret
cmp
andb
push
mull
cld
cmpl
arpl
jns
jnp
repz
in
jae
rcl
mov
sub
jle
mov
xchg
ss
rolb
mov
inc
dec
dec
dec
jne
fsub
dec
lahf
call
cmpl
aaa
dec
sub
js
ds
sbb
jb
xor
jo
imulb
mov
frstor
test
test
mov
sti
insb
mov
adc
dec
cmp
orl
pusha
mov
popf
or
movsb
dec
fisubrl
push
clc
cmp
lods
xchg
out
arpl
out
js
lcall
call
or
mov
dec
adc
or
mov
stos
lock
push
xchg
enter
lds
add
pop
stos
jns
std
push
and
sbb
sti
stos
into
ja
insl
push
and
sbb
in
xchg
arpl
xor
jmp
std
pop
stc
push
rorl
loop
imul
sahf
add
jmp
ss
in
fcomps
iret
divl
iret
arpl
test
inc
xlat
stos
sbb
xchg
cld
sar
dec
dec
out
lods
push
int
les
in
into
repnz
in
stc
ds
popf
fsubl
xor
xchg
jge
mov
jmp
stc
movsb
mov
ret
pop
sub
cmp
mov
jge
imul
cmpsb
cmp
add
sub
and
pop
add
popa
jbe
sub
and
or
cli
shlb
sub
sbb
outsl
outsl
das
pop
push
sub
aaa
imul
push
push
dec
fidivs
stos
cmp
sbb
movsl
ds
jne
mov
hlt
stos
test
xchg
mov
data16
push
pop
cltd
outsl
out
lahf
sub
pop
push
fisttpl
int3
jmp
jne
adc
cmp
scas
mov
sbb
bound
clc
out
mov
xor
sub
mov
gs
adc
xchg
add
sub
andps
mov
fs
push
imul
xor
cld
repz
dec
cmp
fiaddl
clc
andl
popa
outsb
fcmovb
imul
xor
in
lea
inc
pop
movq
and
mov
cwtl
inc
in
xor
cmp
mov
xchg
leave
and
sbb
inc
cmp
in
aaa
jo
daa
cmc
xlat
sub
xor
imul
bound
sti
fwait
sbb
loope
pop
add
jmp
push
mov
push
and
sbb
cmp
sub
aad
sti
mov
insb
fisttps
dec
rcll
bound
dec
cs
jne
idiv
rclb
cmp
and
sbb
data16
aam
mov
std
fcmove
scas
push
arpl
cmc
mov
pop
xor
or
not
jge
cld
andl
push
pop
mov
mov
stos
pop
test
sbb
dec
inc
mov
and
rorl
movsb
orb
fisttpl
aas
in
das
movb
mov
cli
mul
jmp
shll
ret
adc
clc
mov
insb
and
hlt
ja
and
sbb
push
inc
mov
pop
push
jmp
and
sarl
xor
aad
daa
adc
aad
inc
out
insl
out
dec
jg
lods
push
adc
push
jnp
aaa
cmp
test
out
rcrl
cld
xchg
sub
jecxz
mov
and
cmp
pop
pop
in
jo
fmul
mov
add
xorl
sub
push
out
loope
xchg
xchg
add
repnz
push
push
jmp
dec
and
orb
scas
inc
and
xchg
push
enter
cld
neg
dec
iret
ljmp
pop
call
xlat
xchg
jae
in
stos
sahf
dec
mov
adc
mov
fildl
jmp
xor
lods
push
fsts
push
ljmp
aaa
cmp
sahf
pop
mov
movsl
mov
insb
cmpsb
test
in
into
shl
push
aaa
or
popa
jo
cmpb
sub
ss
ds
lret
mov
inc
call
adc
cld
je
cmc
xor
mov
daa
mov
sbb
es
xor
cmpsb
add
call
adc
mov
inc
ret
fs
jmp
test
mov
jbe
sub
pop
mov
int3
loope
sub
lret
xor
adc
mov
xchg
pop
and
add
bound
and
in
imulb
rorb
ja
ret
cmc
and
xor
adc
or
or
dec
cmp
sbb
xor
jno
shll
pop
jecxz
jecxz
inc
aaa
dec
push
pop
in
or
pop
add
add
sub
out
loop
sbb
inc
xchg
fisttpll
add
or
popf
ljmp
sbbb
fwait
cltd
add
jo
adc
push
xchg
push
test
lcall
cmp
cmp
outsb
lahf
int
xchg
cld
std
mov
aad
push
es
adcl
fcompp
add
scas
repz
push
bound
xor
mov
es
inc
dec
and
cli
movsb
or
push
adc
lahf
cmp
dec
sbb
sti
enter
push
roll
xchg
cmpsb
xchg
push
ds
or
ja
cmp
std
arpl
dec
adcb
xor
add
test
in
cmpl
loope
insb
adc
dec
mov
into
dec
lods
mov
add
sub
xor
push
call
mov
push
ds
scas
popf
mov
mov
mov
xlat
mov
xchg
push
ret
pop
and
jmp
mov
xlat
hlt
sbb
fidivrs
out
mov
movsb
cli
sbb
mov
fdiv
adc
push
mov
out
add
or
pusha
mov
pop
pop
fcomps
xchg
test
ret
xchg
pop
dec
lret
sub
fcomps
or
icebp
mov
add
add
into
xor
inc
cltd
inc
mov
loop
lcall
and
or
cwtd
cmpb
dec
jmp
push
pop
push
test
cmp
sbb
jb
mov
or
test
jle
inc
mov
adc
xchg
js
ljmp
jbe
or
dec
mov
lds
add
inc
sahf
jno,pt
es
xor
pusha
push
lahf
imul
add
xchg
dec
mov
popf
int
dec
jno
out
inc
cmp
mov
imul
mov
in
fsubs
adc
xchg
mov
xchg
cmp
xchg
insl
or
pop
rolb
mov
sti
fsub
icebp
fsubrl
pop
test
cs
addl
adc
in
jno
and
sbb
xor
hlt
cmpsb
cli
flds
mov
jb
or
and
mov
jbe
call
pop
xchg
push
jp
testl
dec
lea
push
or
cmp
test
mov
pop
sti
lods
scas
sbb
push
xor
and
stos
pop
cmpsl
push
xor
jne
inc
int
cmp
dec
sti
jmp
test
mov
test
pop
or
pop
pop
xchg
mov
xchg
imul
push
xlat
subl
xchg
arpl
mov
adc
ds
addl
pop
lahf
mov
mov
int
sar
sahf
mov
push
jle
test
sbb
mov
push
jns
out
adc
pop
and
jne
sub
jb
fldcw
add
stos
rcrl
adc
mov
xchg
in
cld
testb
xchg
mov
les
jo
cs
fldln2
test
mov
cwtl
sarl
dec
out
loope
out
mov
push
or
incl
or
aaa
mov
sbb
fcmovnu
loop
mov
out
stc
xlat
cmp
les
or
int
mov
aas
push
and
fistpll
fs
add
inc
lret
jge
lods
push
popa
push
fcompl
cli
inc
lods
lret
jb
dec
lahf
sub
dec
xchg
ja
mov
mov
sbb
repz
sub
cwtl
pop
mov
mov
cld
ret
xor
fbld
xor
sub
dec
ret
enter
adc
pushf
pop
test
dec
jne
dec
pop
jmp
aas
lds
cmp
mov
mov
add
out
repnz
xor
fmuls
or
lea
fldl
in
loopne
fildl
push
mov
test
xlat
je
sarl
mov
imul
push
es
pushf
cmpps
xchg
push
in
push
and
insl
jo
into
jg
repnz
inc
and
xor
clc
mov
dec
dec
push
ja
test
bound
ds
and
aas
jecxz
push
pop
int
mov
out
es
push
stos
loop
aam
mov
push
mov
imul
push
enter
pusha
lds
xchg
loope
cmc
ret
xchg
int3
ljmp
and
pop
icebp
pop
push
push
aam
dec
and
xchg
jge
mov
mov
cmp
sarb
mov
es
ret
rorl
imul
out
enter
pop
jae
mov
mov
xlat
xor
jmp
shlb
lret
or
cmp
js
rcrb
push
sti
lahf
fdivp
loopne
cmp
lock
or
into
and
out
out
loop
sub
jp
adc
mov
rol
sub
push
sub
lret
lea
inc
mov
shr
ret
xchg
movsl
push
stc
ficompl
pop
leave
jg
add
inc
ljmp
inc
les
pslld
lods
mov
add
and
fstps
insl
jno
pop
int3
sub
or
pop
inc
scas
pusha
pop
adc
xor
push
fcoml
imul
push
pop
incl
push
imul
inc
xchg
pop
arpl
fwait
sbbl
test
mov
pop
lret
xchg
mov
dec
pop
adc
popa
sti
xchg
dec
popa
ljmp
dec
mov
shrl
mov
fiaddl
mov
ret
adc
cmp
ret
test
idivl
cld
aad
cmp
pop
sub
cmp
pop
mov
cltd
lea
insl
insb
dec
pusha
cmp
and
inc
add
cmp
bnd
insl
dec
and
sub
cmp
xor
mov
lods
jl
cmp
addr16
inc
sbb
popf
repz
dec
popf
pop
stos
mov
lahf
pop
lods
stc
movsb
fnsave
add
cmp
or
sbb
fdivrs
mov
cmpb
lods
jne
daa
push
cwtl
dec
xchg
leave
test
jbe
lock
cwtl
lea
lea
pop
push
pop
xchg
lcall
pop
adc
jmp
xor
orb
jle
push
inc
inc
sub
into
push
or
ja
out
imul
inc
jo
sbb
mov
pop
push
jno
inc
movsl
nop
or
xlat
jo
jmp
stc
add
mov
mov
and
inc
test
xchg
adc
xchg
lods
xchg
adc
cmc
leave
popa
inc
les
jmp
cwtl
inc
aaa
or
mov
cs
jae
xor
cltd
xor
leave
pop
adc
jo
loopne
lods
jmp
xor
mov
xchg
call
dec
pcmpeqb
pop
daa
xor
inc
push
inc
into
dec
sub
lock
shll
mov
inc
sbb
daa
add
int3
lahf
sub
addr16
pop
xchg
movsl
jmp
popf
xor
sub
leave
les
xor
mov
adc
lcall
lea
psubw
inc
lret
add
push
aas
js
mov
jle
in
movsb
in
ds
jl
jecxz
or
mov
sub
leave
call
sahf
test
ljmp
andl
jmp
push
nop
out
cmc
mov
mov
xor
lret
lret
and
pop
in
test
push
ds
mov
lods
stos
cld
jge
mov
xorb
imul
sub
and
pop
daa
gs
and
lcall
imul
popa
jne
scas
int3
ljmp
adc
or
adc
and
mov
in
inc
sbb
rclb
mov
cmp
xor
inc
add
loopne
xchg
scas
std
add
jl
test
outsl
insl
mov
cmpb
push
jl
push
push
lods
mov
into
mov
sar
gs
sub
lret
ja
mov
adcl
pop
stc
push
shl
mov
test
sahf
dec
sub
js
jl
movsb
mov
inc
ja
dec
push
push
enter
cmp
lahf
rcrl
aam
fnsave
cs
loopne
shlb
cmpl
jg
decb
btr
jo
or
cmpsb
mov
cmp
fcomps
inc
testl
mov
gs
xchg
mov
fidivs
jae
jl
into
imul
mov
je
add
mov
pop
inc
mov
mov
dec
jp
repnz
mov
push
dec
popa
pusha
test
adc
movsb
imul
jae
adc
cmp
mov
call
dec
lods
push
pop
loopne
rep
adc
adc
das
jb
jecxz
movsl
cmpsl
mov
cmp
or
add
std
lock
push
popa
add
jl
scas
out
or
in
cli
inc
xchg
scas
push
lret
cmp
mov
mov
fwait
push
arpl
mov
lcall
adc
sbb
inc
fdiv
xor
add
roll
xor
lea
in
ljmp
sbb
mov
or
testl
inc
push
and
mov
adc
pop
popf
xchg
and
dec
test
std
pusha
dec
fndisi(8087
cld
sbb
stos
out
lds
mov
insb
xchg
or
imul
sub
stc
arpl
inc
add
lcall
orl
mov
add
int3
mov
adc
in
clc
mov
stos
bound
leave
mov
inc
xor
into
movsb
mov
insb
push
add
mov
out
xor
jbe
out
xor
mov
pushf
xchg
xor
cmp
jg
or
jmp
test
iret
and
aas
pop
faddl
xlat
mov
jno
push
adc
xor
mov
int
clc
test
imul
add
mov
popa
outsb
cmpsb
cmp
xchg
pop
mov
sub
addr16
lods
pop
insl
xchg
xor
and
repnz
and
or
dec
lcall
inc
smsw
insb
push
out
in
nop
inc
loop
push
arpl
test
fiadds
das
push
mov
pop
mov
or
ja
js
mov
sbb
scas
test
or
xchg
jo
dec
je
lret
jmp
push
out
mov
outsl
cmpb
in
xchg
movsl
jecxz
pusha
gs
xchg
push
aad
jne
insl
popa
and
push
adc
push
xchg
xchg
and
xor
cmp
insl
or
add
orb
popa
ss
push
add
pusha
fs
or
roll
nop
sub
dec
aad
jns
jecxz
icebp
add
add
mov
enter
jnp
or
popa
inc
shrb
sub
sbbl
pusha
clc
enter
jg
jno
lret
or
xchg
push
jl
sbbb
std
lret
push
sahf
outsb
sub
adc
jecxz
mov
scas
dec
int
push
jns
jmp
inc
push
decl
loope
add
scas
loop
cwtl
arpl
adc
xor
out
outsl
adcb
dec
into
ret
das
fidivl
aaa
rcrl
pusha
push
fs
dec
sahf
popa
add
ja
scas
cmp
out
fs
rorl
sub
push
fsubl
pop
xchg
loope
push
popa
ljmp
scas
jne
cmp
jns
hlt
pop
mov
and
frstor
outsl
push
or
out
int
je
xchg
add
int
xor
js
lahf
vphaddbd
jne
mov
iret
pop
insb
or
push
out
add
xor
mov
jge
pop
mov
in
fstpl
dec
cmp
fistl
mov
out
shl
add
mov
adc
stc
xchg
cmp
enter
mov
aaa
lahf
xor
or
sub
daa
ss
test
xrelease
mov
xor
xor
fisubrs
xor
or
mov
iret
pop
lea
inc
jmp
pmaddwd
mov
push
movsl
mov
jo
adcl
mov
mov
dec
into
lds
fwait
insl
gs
pop
inc
and
xchg
cmp
repnz
scas
cwtl
jge
add
aas
lcall
xor
data16
dec
xchg
mov
imul
mov
cmc
data16
jp
inc
xlat
sahf
xor
les
mov
and
push
cmp
ja
mov
imul
lds
int3
sub
sub
inc
call
addl
inc
lods
jp
sbb
or
lds
adc
ror
mov
add
mov
test
add
mov
mov
sbb
dec
mov
push
add
rcrl
xchg
addl
aam
fadds
fst
jg
jne
fnstsw
mov
pushf
js,pt
jmp
and
ss
in
adc
cmpl
pop
test
inc
sti
adc
sbb
insl
movsl
fidivl
in
and
fldenv
sbb
xchg
das
les
insl
mov
jp
scas
scas
mov
or
shrb
lcall
adc
mov
pop
or
sbb
jmp
add
mov
mov
cld
fisubrl
mov
or
dec
dec
imul
clc
mov
stos
gs
aaa
pop
lcall
je
add
inc
add
int
lahf
ret
dec
scas
xchg
or
call
sbb
lret
xor
loop
mov
pusha
inc
dec
jb
imul
dec
or
incb
iret
fildl
rdmsr
push
xor
push
jl
xor
stos
cmpsb
xor
xor
push
pop
pop
dec
int
xchg
iret
xchg
ds
cmpsl
xor
inc
aaa
loope
mov
and
and
in
and
cld
xor
xchg
fisttpl
inc
in
sbb
xor
cmp
and
sbb
int3
enter
xchg
je
imul
lock
dec
in
add
and
lock
loope
fdivrl
fwait
push
stos
jmp
cmp
jecxz
out
pop
jb
push
int3
add
xchg
in
inc
cmpsb
sub
lods
aad
xchg
testb
stos
adc
faddp
test
outsl
xchg
xor
fcoms
les
jo
popa
xchg
ret
or
inc
les
out
sti
hlt
xchg
shrd
pop
lods
ret
outsb
sbb
imulb
cmc
div
lahf
inc
aam
shlb
je
mov
test
fistpl
lret
adc
mov
rclb
inc
cmpsb
dec
movsl
jecxz
dec
cmp
mov
sub
jecxz
push
mov
inc
xchg
leave
mov
stos
aaa
adc
mov
imulb
and
cmp
out
add
stc
xor
mov
push
mov
jbe
les
cmp
mov
mov
andb
dec
or
mov
insb
mov
sub
mov
or
mov
test
cmc
hlt
repnz
sub
push
xchg
sahf
mov
test
mov
das
adc
movsl
ds
int
cmc
js
es
fmul
imul
jnp
xchg
fisubl
fs
les
adc
inc
loopne
mov
shl
inc
xor
out
mov
jmp
xor
cmp
xor
xchg
adc
xchg
jmp
mov
cltd
scas
sbb
mov
or
and
push
lret
je
fsubs
lcall
pop
jne
daa
push
out
push
loopne
jl
aas
stos
lret
scas
pushf
push
insl
jo
dec
mov
jns
es
popa
or
xchg
stos
fcomps
cmp
fwait
dec
jbe
mov
js
shlb
cld
pop
repz
pcmpeqb
aad
mov
jg
xchg
aas
push
xor
dec
sub
mov
pop
xchg
lcall
mov
int3
rol
scas
mov
mov
lock
lods
aas
es
pop
add
jecxz
test
xlat
cwtl
pop
add
stos
sbb
loop
xchg
sub
scas
js
jno
sub
dec
sbb
mov
sahf
test
test
or
mov
cmp
mov
cs
add
xchg
ja
inc
pop
test
leave
adc
dec
push
and
xor
pop
or
loope
aam
mov
add
mov
imul
fidivl
pop
mov
repnz
aas
jbe
adc
daa
daa
sub
das
fistl
or
ret
xchg
loopne
iret
ds
push
out
outsl
jg
int3
std
roll
ljmp
lahf
sbb
xor
clc
popa
dec
das
int
stc
pushf
push
dec
and
divb
aas
mov
icebp
cltd
mov
lods
stc
fidivrl
mov
pop
pop
fisttpll
pusha
add
mov
cli
mov
filds
mov
daa
andl
xchg
into
inc
xchg
adc
repz
in
mov
icebp
and
inc
or
cli
aam
idiv
inc
lahf
in
inc
pop
ret
pop
and
fwait
push
ljmp
hlt
out
cmp
xchg
aad
loopne
mov
sbb
mov
jp
adc
xor
movsb
and
push
test
cld
mov
or
push
sub
sti
or
jbe
inc
pop
mov
jne
outsl
in
adc
testb
jo
in
push
sbb
dec
fidivs
inc
mov
cmp
add
mov
inc
jns
cmpsl
inc
xchg
fwait
add
aaa
shrb
imulb
push
sbb
xchg
jbe
ds
loope
scas
addb
cwtl
test
out
mov
andb
call
leave
out
call
int3
mov
jbe
push
mov
jbe
and
add
push
mov
pop
mov
jecxz
or
add
mov
and
xchg
push
mov
fiadds
clc
int
dec
scas
or
aas
rol
cmp
sub
sti
ret
jg
out
adc
mov
jmp
cmp
movsl
or
cltd
rcrl
cmc
pop
out
fadds
cmp
push
js
das
mov
ret
imul
daa
test
ljmp
inc
rcrl
lahf
fbstp
sbb
outsb
push
pop
sbb
cmp
es
add
and
outsb
shl
or
inc
cwtl
mov
dec
inc
fnsave
inc
jg
mov
push
fcmovu
imul
or
xor
mov
push
mov
jno
sti
paddusb
pop
ficomps
lcall
test
out
xchg
mov
test
add
sbb
arpl
dec
icebp
mov
iret
in
mov
jecxz
xchg
inc
dec
adc
pop
pushf
int
cli
xchg
push
mov
bound
ja
mov
jle
inc
sbbb
scas
adc
cmp
jnp
mov
push
popf
frstor
in
cmp
gs
leave
mov
mov
adc
mov
nop
std
lock
or
dec
sbb
lods
icebp
aas
mov
jecxz
lods
pusha
mov
xor
or
scas
dec
push
xchg
mov
lea
xor
out
fildl
pop
aam
pop
outsl
jne
inc
mov
cmp
add
jo
mov
rorb
in
call
cmpsl
addl
push
sahf
mov
jo
daa
mov
cmpsl
into
sbb
es
xchg
scas
ret
jp
fs
popf
and
mov
xlat
mov
xchg
iret
inc
jae
pop
sub
enter
and
ljmp
test
stos
lds
mov
sbb
pop
je
adc
add
int3
lea
shll
cmp
mov
pop
jle
adc
dec
int
add
lds
push
loopne
mov
cmc
fldl
xchg
dec
jbe
inc
fcmovnu
or
test
jle
or
gs
mov
pop
pop
sbb
ja
rcrb
in
aad
test
and
int
inc
jno
mov
fmuls
xchg
sub
or
hlt
xchg
dec
jb
mov
xor
lods
jl
cmpb
ret
jmp
push
and
test
loopne
movsl
popa
pop
cli
mov
cmp
push
pop
mov
addl
insl
dec
jae
mov
sbb
enter
hlt
or
jo
cld
cwtl
lcall
mov
cmp
in
and
les
xor
inc
pushf
dec
adc
into
mov
aas
jecxz
adc
jbe
xchg
jb
dec
out
inc
out
rolb
push
pop
push
lcall
fdiv
outsl
fsub
jle
leave
into
or
dec
rcrb
xor
js
popf
sbb
mov
movsb
jle
ficompl
mov
jp
imul
mov
cmpsb
fcomps
xchg
test
jbe
and
add
cmp
inc
mov
pop
or
jae
stc
pop
fwait
test
sub
scas
add
mov
mov
push
fnstsw
and
add
loopne
dec
mov
pop
test
stos
fwait
sub
mov
std
xchg
add
sub
shll
inc
jg
fwait
mov
imul
mov
int3
ds
stos
push
push
xchg
lock
lea
aas
cmp
gs
pop
jmp
out
mov
das
mov
fs
aam
ds
cmp
mov
xor
pushf
mov
xor
cmp
adc
inc
jmp
push
insb
sbb
xor
add
mov
push
int3
sarl
add
aad
lods
lcall
stos
push
fmuls
lds
jnp
adc
push
lret
movsl
sahf
push
jl
iret
cmp
jne
in
mov
cmp
cmp
and
inc
cli
scas
iret
pusha
in
xchg
movsl
mov
and
mov
xor
stos
mov
dec
and
cs
xchg
add
or
mov
add
jecxz
add
pop
mov
shrl
mov
bound
js
sbb
sub
movsb
pop
ljmp
fistps
mov
std
adc
adc
dec
xchg
inc
jmp
mov
jb
inc
scas
scas
xchg
sarb
push
push
int3
out
pop
clc
sbb
sub
and
ret
sub
lahf
scas
out
xor
lret
addb
jb
mov
inc
idivl
rorl
arpl
jbe
jg
or
jge
mov
xor
gs
cmpsb
movsl
mov
repnz
out
dec
jns
std
stc
andb
imul
push
dec
les
scas
mov
imul
jg
aaa
sbb
mov
fcmovnbe
test
inc
mov
rcrl
aas
or
lods
out
adc
mov
sub
jp
push
sbb
mov
mov
dec
add
mov
imul
int
cld
js
or
cmp
das
lea
mov
push
dec
stos
cmpb
fidivrs
clc
icebp
xchg
inc
pushf
ljmp
mov
xchg
adc
pop
jae
jmp
xlat
jmp
insl
xor
aam
shrb
ja
lret
mov
add
mov
xchg
xchg
mov
aam
sub
fwait
sbb
pop
or
and
xorb
iret
test
sub
movsb
push
mov
adc
dec
fsubrl
adc
fidivrs
xchg
jno
jp
das
adc
lahf
mov
mov
jmp
imul
xor
mov
xor
ret
pop
xor
rcrb
add
mov
mov
cwtl
movsl
insb
adc
jl
mov
ss
adc
fisttps
dec
sub
xchg
cmp
jno
pop
xchg
int3
sbb
loope
xchg
ss
insl
cmpsb
pop
mov
leave
in
mov
add
push
stos
ljmp
out
daa
sbb
into
std
out
push
mov
cld
jbe
int
mov
inc
push
ret
out
pop
xchg
mov
idivl
fnstenv
jnp
and
push
mov
xchg
mov
aam
cmovbe
pop
and
cmpsl
rorb
cmp
out
pop
sbb
imul
xchg
arpl
stos
int
pop
mov
dec
mov
mov
sub
adc
and
push
popa
sbb
shlb
mov
jmp
inc
cmc
jnp
jae
cwtl
pop
mov
sub
mov
pushf
push
and
movsl
xor
mov
xchg
xor
bound
loope
cmpsb
out
pop
cmpsb
pop
je
cmp
sbb
jmp
ret
scas
vorpd
pop
outsb
inc
inc
stc
mov
call
add
xchg
pop
inc
decb
dec
add
data16
jae
imul
xchg
mov
loop
mov
jbe
pop
bound
popa
mov
sub
inc
xor
test
pushf
cmpsb
sahf
lods
push
insl
sahf
mov
das
mov
gs
pushf
lret
daa
cmp
lock
rclb
jmp
arpl
pop
and
lods
cltd
jnp
fstpl
xchg
xchg
insb
lds
hlt
pop
int3
ret
mov
out
jmp
movsb
dec
fldcw
push
pop
or
negl
sti
imul
popf
popa
cli
test
push
pop
aas
dec
gs
addr16
mov
js
or
inc
in
out
imul
push
or
jo
cmp
shll
pusha
sub
xchg
adc
add
add
mov
add
popa
lock
mov
ret
cmpsb
inc
jnp
xchg
flds
xchg
mov
mov
adc
in
cs
dec
pop
and
jns
mov
lea
int3
jae
sbb
in
jmp
push
xchg
stc
dec
fmuls
mov
nop
push
cmp
test
xor
dec
js
icebp
adc
mov
inc
popf
push
testb
andl
and
jns
push
mov
ret
outsl
mov
sub
or
in
xlat
test
pop
mov
push
adc
xor
xor
mov
loop
xor
push
sbb
mov
xchg
leave
push
mov
add
into
lock
ds
ficoml
sub
ret
inc
aas
mov
jmp
dec
xor
shlb
fs
movsl
pop
mov
lods
shll
testl
pop
rcrl
mov
adc
cltd
mov
cmp
decb
fwait
jae
jle
adc
sbb
sti
clc
xor
out
mov
push
shr
rcrb
shl
scas
movsb
add
hlt
aas
jnp
xchg
imul
or
dec
mov
and
mov
add
aaa
fisttpll
jb
lret
cmpsl
arpl
xor
iret
int
testb
xchg
mov
jne
xchg
out
ljmp
inc
xchg
cld
add
or
and
mov
icebp
pop
pop
push
and
pop
or
sub
ljmp
mov
sbbb
mov
or
clc
sub
test
xchg
sub
aam
movsl
inc
pop
fxch
dec
mov
xchg
stos
sahf
hlt
outsl
jnp
jmp
xchg
sub
push
rcrb
dec
fimuls
pop
mov
addr16
int
cmp
rcll
sbb
ljmp
adc
add
loop
push
adcl
adc
inc
test
decb
scas
jmp
adc
insb
in
out
sarl
repnz
ds
mov
pop
push
sahf
mov
aaa
mov
mov
bound
mov
insl
je
sbb
pusha
mov
jp
outsb
mov
imul
push
addl
and
mov
dec
sbb
fcoms
lcall
and
pop
lods
insl
jb
add
or
call
test
cltd
pop
sbb
jo
mov
cs
ficompl
enter
fdivr
dec
cmp
adc
sbb
orl
out
lret
cmp
or
mov
aaa
inc
xchg
and
mov
pop
lret
mov
cmc
jo
sbb
jne
pop
movsb
scas
mov
aas
cmp
adc
stos
or
dec
lods
push
add
daa
je
jg
mov
sahf
push
out
hlt
loopne
sub
repnz
jbe
pop
dec
lret
mull
sbb
adc
push
jns
cli
jnp
add
pop
test
sbb
aaa
mov
mov
xchg
shrb
cmp
sbb
daa
fcompl
sub
xor
je
shrl
fadds
lahf
xor
inc
lock
pop
push
jne
push
lds
lods
jno
int
sbb
and
test
fmul
dec
push
dec
pop
stos
xlat
arpl
fdivs
insl
and
lods
lods
jg
jl
push
mov
call
fsubrs
insb
xor
or
add
enter
jl
or
inc
inc
sub
dec
add
and
aas
insl
xchg
mov
add
inc
imul
test
adc
mov
xchg
pop
adc
jp
fisttpl
adc
mov
mov
je
or
movsb
sahf
or
dec
xchg
inc
xor
mov
popa
ds
add
cmp
lea
movsl
and
insb
push
pusha
mov
and
mov
mov
push
mov
mov
in
and
insl
stos
cmp
aas
sbb
aaa
ja
sbb
test
push
loop
icebp
sub
dec
mov
xchg
gs
push
xchg
jne
xor
shll
loop
in
fs
add
icebp
leave
cmc
push
lea
push
xchg
pop
sahf
cs
nop
jns
dec
sbbl
fs
dec
push
push
jne,pt
xorl
cmpsl
scas
call
negl
xchg
and
fst
sub
cs
push
adc
dec
mov
clc
shlb
clc
imul
dec
insl
mov
mov
fcmovu
lret
bound
sarb
aad
loopne
mov
xlat
test
pop
cld
lods
cmp
push
sub
mov
or
xchg
dec
pop
or
shlb
push
mov
ror
xchg
fcoms
push
les
aaa
sbb
mov
push
dec
lret
leave
lret
or
push
cmpb
insb
fisttpl
ljmp
sbb
sub
inc
lcall
dec
inc
popf
lock
dec
inc
in
mov
fildl
out
leave
mov
xchg
mov
push
stos
lahf
pop
mov
frstor
cmpsl
es
out
xlat
push
add
fists
push
mov
daa
ret
loop
or
test
fidivl
test
cmpb
ficomps
aad
or
mov
rorb
mov
movsb
repz
test
jno
xchg
pushf
mov
xchg
mov
push
lea
insl
or
shlb
ss
mov
data16
jne
mov
sbb
stos
aaa
xchg
cmpsb
sbb
xorb
mov
popf
enter
mov
sarl
cmc
test
pop
shll
in
shll
fisubs
jp
into
sbb
pop
cli
xor
push
addl
out
sbb
outsb
xor
inc
jns
enter
lret
add
sub
mov
cmc
sbbb
insl
push
jbe
nop
sub
cmp
test
adc
cmp
jmp
adc
mov
enter
xor
sbb
subb
pop
sarl
or
mov
pop
xor
xlat
jg
pop
pop
ror
btr
pop
mov
xchg
js
lea
mov
adc
push
loopne
not
mov
js
adc
mov
add
adc
cmp
add
add
popa
jg
mov
or
add
push
out
data16
sub
outsl
xor
cld
shrb
jo
aas
cmp
popa
mov
lock
ds
mov
sbb
dec
sub
inc
push
mov
outsl
mov
aas
in
aam
incl
sbb
or
or
xor
mov
lods
mov
cmpb
gs
outsb
int3
clc
or
push
lods
aad
loopne
mov
loopne
mov
rclb
jno
mov
lret
sub
rcrl
ret
xchg
mov
jbe
xchg
cli
insb
inc
mov
jb
or
test
in
call
outsb
js
test
gs
call
sarb
filds
sahf
dec
mov
xor
pop
outsb
pop
leave
stos
out
jl
gs
sub
adcb
out
mov
xlat
loopne
jo
rcrb
push
push
loope
jnp
ljmp
cli
mov
loope
outsb
sbbl
aam
adc
push
xchg
mov
mov
jl
test
sub
cmp
xor
sarl
dec
sbb
adc
loopne
hlt
les
in
and
mov
jp
jnp
pop
pop
cmp
inc
or
hlt
fwait
lret
mov
fsubl
lock
or
fimull
hlt
sarl
mov
dec
mov
bound
jnp
mov
push
data16
imul
xor
jb
iret
lcall
stos
rcrl
sbb
push
lret
mov
rcl
mov
mov
lods
lahf
mov
mov
sahf
lahf
leave
mov
mov
fldcw
xchg
pop
outsl
xlat
rcll
dec
jae
or
rorb
pusha
lcall
push
jns
xchg
clc
ja
push
add
mov
adc
and
lahf
ljmp
ret
xchg
or
orb
add
sbb
mov
test
out
rorl
push
divl
stos
add
mov
pop
nop
cli
pop
or
xorl
and
and
jo
ljmp
sub
mov
aam
ljmp
in
aas
xchg
outsl
ds
cmp
mov
push
jb
mov
mov
inc
int
mov
ret
ret
aaa
test
test
ret
jne
sub
cmp
push
int3
out
das
cmp
xchg
addl
inc
hlt
mov
shlb
mov
dec
mov
xchg
arpl
push
cld
and
notl
mov
sub
inc
inc
stc
dec
and
nop
push
xchg
int
imul
mov
cli
sub
shll
sarb
fwait
enter
mov
mov
int3
call
mov
pop
mov
fistpl
out
scas
cltd
push
add
fbld
sbb
ret
in
mov
fs
and
xchg
push
cmp
push
mov
push
addr16
in
xor
push
arpl
push
xlat
jbe
jl
xchg
mov
inc
into
leave
mov
xchg
jg
addr16
push
nop
cmpsb
sbb
hlt
loopne
or
clc
dec
rorb
lret
mov
sub
mov
andl
fldenv
lret
pop
sbb
outsl
sbb
ss
pop
inc
shlb
fs
outsb
out
les
xchg
jae
lcall
lea
stos
inc
das
fisubrl
xlat
dec
ds
cmp
je
out
int3
push
xchg
xor
inc
pushf
into
jl
scas
fcoms
add
inc
sbb
pop
stos
inc
pusha
loope
adc
sbb
mov
int
xchg
xchg
pop
inc
mov
les
dec
in
mov
fadd
insl
jns
jbe
sub
shlb
xchg
arpl
sahf
test
mov
mov
clc
std
mov
inc
jns
mov
mov
iret
xchg
popl
jbe
cli
mov
push
ss
addr16
adc
and
mov
repz
mov
int3
push
jno
test
out
daa
or
mov
repz
and
xchg
sbb
stc
js
daa
push
push
cltd
jnp
jl
js
jno
stc
push
push
aad
cmp
push
or
out
mov
fdivrl
cwtl
mov
jne
decb
adc
cmpsl
adc
and
insb
xchg
aam
push
mov
add
mov
lods
xlat
aas
inc
in
pushf
dec
inc
mov
imul
into
adc
data16
insb
mov
xor
xchg
clc
out
mov
cld
add
mov
pop
jo
decl
cmp
push
and
out
xlat
fstpt
push
out
aam
dec
das
add
testl
sbb
mov
push
mov
aam
push
ds
xor
cld
inc
and
mov
adc
lock
dec
adc
lods
mov
mov
mov
test
jecxz
inc
enter
add
ss
imul
outsb
pop
insl
and
mov
fwait
mov
nop
mov
lock
scas
xchg
imul
rorb
mov
add
in
cld
test
pop
stos
sbb
mov
outsb
je
lret
dec
shl
xchg
add
imul
cmp
sbb
or
jno,pt
ret
ficompl
repnz
push
xchg
push
jg
inc
dec
movsb
adc
inc
test
in
repnz
insl
mov
clc
data16
dec
lret
rclb
mov
mov
push
fimuls
insb
test
mov
in
subb
lahf
scas
in
adc
xlat
jbe
into
add
inc
push
push
jnp
xchg
mov
in
aas
pop
inc
adc
xchg
jp
xchg
in
xor
cmc
lret
nop
push
aaa
cwtl
jne
sarl
mov
or
sbb
scas
cmp
shld
sbb
push
in
pop
adc
stos
imul
adc
sahf
pusha
dec
mov
push
pop
mov
inc
lcall
mov
outsl
pop
lods
popa
xchg
in
mov
lahf
push
pop
pop
into
fsubr
das
jno
movsl
mov
lahf
push
fadd
sub
imul
sti
xchg
cmp
jge
das
dec
mov
mov
push
pop
lcall
pop
add
jnp
pop
setne
fld
jbe
and
dec
pop
xchg
inc
shl
mov
and
push
cmp
icebp
scas
call
roll
call
shrl
shlb
jnp
loopnew
or
pushf
and
sub
or
mov
lods
sbb
bswap
data16
cmp
pushf
movsb
pop
sub
mov
cmp
dec
call
insb
test
mov
cwtl
or
jae
dec
mov
data16
cwtl
adc
push
mul
jo
xchg
xor
testl
movsb
in
leave
push
bound
lods
cmpsl
scas
jecxz
pop
dec
mov
mov
mov
stos
les
loope
jb
mov
push
outsb
loope
rcrl
andl
adcb
sti
cs
mov
add
mov
dec
mov
push
enter
outsb
jnp
movsb
pop
mov
loopne
and
xchg
xor
jno
les
push
mov
not
pop
fadd
and
jnp
out
lcall
mov
or
mov
fmulp
push
popf
mov
mov
jg
and
aaa
jne
adc
sbb
add
pushf
repnz
inc
stos
xchg
mov
cmp
jecxz
ljmp
test
or
lock
mov
cmpsb
addr16
imul
xlat
mov
pop
or
sub
push
mov
push
xchg
xor
test
je
addr16
sub
push
sub
call
insb
xor
xchg
push
xor
lods
mov
xchg
sbb
in
sub
and
adc
or
sbb
loop
add
and
stos
jp
pushf
jp
push
add
cmp
mov
xchg
fdiv
out
dec
mov
sub
outsb
dec
insb
push
mov
mov
push
and
in
jae
cmc
mov
imul
adc
add
xchg
outsb
subb
adc
mov
push
movsb
lcall
scas
stos
dec
cmp
cltd
outsl
cld
clc
mov
mov
jae
push
push
loop
pusha
movl
add
mov
arpl
add
mov
add
pop
jb
fnsave
sbb
push
ret
scas
rcrb
cwtl
xchg
add
ja
incl
push
mov
jb
push
fucom
int
aaa
cmp
lea
test
sbb
and
mov
mov
inc
fdivr
xchg
nop
xchg
scas
mov
sbb
mov
fsubr
mov
outsb
xchg
add
iret
pushf
inc
je
pushf
pushf
push
int
mov
push
inc
movsb
scas
sbb
xor
xchg
stc
stos
fxch
sahf
sbb
jns
mov
bound
or
aas
sbb
inc
sbb
jo
outsl
mov
and
jbe
mov
arpl
mov
sbb
aam
hlt
imul
lods
mov
popf
push
int
loopne
or
jmp
jmp
jl
loope
add
push
dec
or
les
je
subb
cmpsl
gs
adc
aad
add
fldt
repnz
daa
out
sbb
test
bound
repz
scas
push
jae
iret
jne
daa
icebp
mov
iret
pop
fsubrl
inc
cmpsl
into
push
inc
addr16
les
mov
add
mov
cmp
pop
aam
adc
pop
cmpsb
inc
adc
fildl
test
pop
sub
cld
stos
int3
test
mov
push
sub
lahf
lahf
sub
pop
pop
jecxz
test
int
addr16
xchg
and
push
add
adc
and
ds
and
inc
mov
movsl
aam
sub
jbe
filds
mov
mov
ja
insl
pop
inc
mov
mov
mov
jge
jmp
in
pop
mov
jecxz
jns
cmp
inc
mov
out
loope
in
sbb
nop
hlt
push
popf
or
ljmp
cmp
pop
fbstp
mov
inc
insb
push
dec
mov
aas
outsl
lock
xlat
cld
or
jle
lahf
cmp
mov
dec
push
pop
testl
add
outsb
xchg
cli
pop
jne
cmp
push
hlt
mov
inc
xchg
ret
pop
adc
lock
xor
cmp
outsl
fdivl
cmp
aaa
xor
cltd
clc
xor
xchg
dec
movsb
out
push
mov
fst
cmp
divl
and
push
add
scas
sub
sbbb
cmp
or
bnd
xchg
add
add
shlb
out
jmp
jne
addr16
jecxz
xor
inc
or
and
xchg
xchg
out
and
push
fldl
dec
call
in
repnz
ret
in
or
rcr
mov
loop
lret
mov
xor
lahf
aad
loope
sub
or
jecxz
repz
push
mov
orl
jg
cmc
inc
shlb
test
cmp
push
inc
bnd
mov
iret
dec
mov
pop
cmc
pop
mov
jno
jge
xchg
cltd
and
addr16
jns
adcl
roll
adc
sarl
sbb
fistl
add
rclb
cmp
mov
orl
add
jb
xchg
je
aas
insb
adc
jp
cmp
repnz
inc
sub
jb
les
data16
in
adc
shl
imul
lcall
inc
movsl
aaa
mov
push
repnz
pusha
sbb
js
insb
jae
cs
test
sub
cmp
add
mov
scas
pop
aad
cmpsb
mov
mov
dec
inc
xor
xchg
pop
inc
mov
int3
jl
insb
mov
mov
push
lds
and
push
test
dec
sbbb
incb
cmpsl
cmp
inc
jl
rol
ret
inc
inc
sti
lret
loope
cmp
adc
imul
pushf
fldcw
dec
outsl
je
fwait
dec
jg
scas
lock
mov
mov
movsb
xchg
mov
adc
or
push
or
pop
mov
dec
dec
ss
mov
lcall
pop
jns
clc
outsb
dec
rorb
in
dec
mov
xor
icebp
sub
sbb
stos
fcoml
lret
stos
test
pusha
mov
lea
lock
xor
or
and
sbb
sub
pop
sub
xchg
sbb
sbb
pop
pop
and
mov
cltd
ret
jmp
scas
xorl
cld
test
shl
push
mov
sub
jecxz
lret
inc
js
incb
pop
mov
divl
cld
push
not
ret
mov
inc
sbb
aaa
lret
aas
insl
xor
or
into
pop
xchg
in
lahf
add
jge
cmp
xchg
lcall
in
pop
loope
jg
mov
fdivs
lods
aam
scas
imul
fnsave
inc
leave
fdiv
jo
sub
shll
popf
cmp
lods
push
loope
out
shlb
ljmp
popa
ja
mov
sbb
es
das
call
pop
push
sub
mov
data16
fisubrs
mov
imul
push
jl
repz
and
aas
aam
pop
jo
shll
mov
xor
leave
mov
pop
xor
mov
xor
inc
std
xchg
xchg
in
je
mov
popf
jecxz
and
in
sub
pushf
inc
mov
xchg
cmp
sbb
and
sub
cmp
push
jmp
pop
push
pusha
adc
aad
lea
pop
push
xlat
mov
push
lahf
xchg
cmp
cmpsl
leave
stc
adc
ret
fwait
add
inc
mov
cmp
dec
inc
xlat
cmp
js
sbb
cmp
and
mov
int3
popa
out
sbb
xor
or
mov
mov
enter
lcall
fildll
test
sbb
and
hlt
test
lret
das
add
lret
arpl
frstor
xor
jb
jns
stc
jecxz
negb
mov
inc
xchg
in
pop
xorb
sub
sbb
adc
inc
mov
push
stos
ja
out
and
adc
xchg
push
cmp
sub
bound
in
fnstenv
fpatan
into
adc
sbb
xor
stc
inc
cwtl
in
in
in
fs
sbb
inc
fs
frndint
xlat
cmpsl
xor
adc
leave
call
adc
jne
mov
rcll
fstl
fnstcw
pop
lds
mov
add
pop
or
outsb
adc
add
xor
pushf
loopne
repnz
shlb
ror
mov
rclb
rcrb
and
hlt
adc
xchg
cmp
sbb
popf
rcll
or
mov
gs
rorb
pushf
in
scas
lods
pop
jnp
mov
adc
and
popa
shll
scas
or
mov
xchg
ss
pop
mov
lds
jbe
and
mov
cli
pop
rolb
aad
lea
or
add
push
cli
lods
fwait
push
fwait
pop
mov
fistpll
mov
out
sub
mov
dec
lahf
push
ret
negb
add
mov
shrl
pop
mov
dec
sub
push
leave
insb
stos
mov
ret
mov
xor
jecxz
test
pop
popf
aas
scas
lret
sbb
push
loopne
inc
add
aam
lea
or
and
pop
mov
movd
sbb
pop
pusha
lret
pop
sub
inc
jne
cmp
inc
pusha
fsubl
mov
xchg
pop
mov
enter
jns
jb
outsb
fwait
cmp
add
pop
cwtl
jne
jae
outsl
sub
inc
inc
scas
push
mov
sbb
mov
mov
jg
mov
lea
mov
sarb
pop
hlt
nop
sbb
ret
add
lock
add
jo
jno
enter
cmp
dec
add
mov
pusha
add
dec
sub
mov
stc
mov
push
mov
fdivl
jbe
sbb
and
cli
lahf
das
aam
pusha
shrb
and
lock
or
lods
je
pop
movsb
mov
dec
push
icebp
xchg
or
repz
cld
sbb
add
testl
push
push
jmp
push
clc
xchg
jo
sub
add
aaa
mov
mov
imul
xor
mov
xchg
addr16
dec
cld
push
pop
roll
sbb
shl
mov
scas
lret
sub
test
js
jns
in
aas
repnz
sbb
xor
xor
dec
jae
ss
push
aad
pop
movl
test
push
dec
sub
xchg
push
cmp
hlt
rol
rclb
mov
call
sub
sub
lea
fidivs
scas
push
hlt
cmc
sbb
inc
test
data16
adc
cmpsl
jne
ds
inc
jnp
pop
inc
push
lds
push
xchg
cmp
adc
loopne
insl
lods
loope
mov
cltd
insb
sub
xor
mov
add
aaa
adc
das
les
lods
pushf
les
rorl
notl
xchg
mov
xchg
mov
gs
lret
testb
fsubs
xchg
xor
test
mov
mov
in
in
daa
ret
adc
inc
iret
lods
movsl
pop
xorb
sub
and
mov
lret
dec
mov
es
cli
sbb
outsb
mov
sub
dec
lahf
sub
or
fidivs
ret
fisubrl
or
repnz
aas
rcrb
in
pop
cld
pop
dec
repz
xchg
adc
push
push
push
mov
or
decl
adc
stos
xchg
mov
jnp
addr16
mov
adc
inc
popa
sbb
jno
push
xchg
cmp
andl
ds
sahf
push
in
dec
aad
cmp
inc
mov
fs
or
dec
ljmp
cmpsl
mov
adc
mov
test
mull
arpl
fldenv
outsb
pop
xchg
adc
lock
sub
pop
inc
mov
enter
aaa
mov
out
orl
popl
cld
push
js
aas
mov
sub
cmp
pop
jmp
cli
aas
sbb
jbe
pop
sti
or
movsl
push
jbe
in
outsl
add
add
test
xchg
or
inc
sbb
stc
push
xor
mov
jp
add
sub
jns
incl
dec
pop
add
out
daa
pop
mov
add
aaa
sub
std
fcmovnu
das
fmull
rorb
cmpl
xchg
jecxz
jb
and
iret
std
jo
into
adc
jbe
xchg
addr16
jnp,pn
jp
cli
addr16
pop
and
jne
sub
jg
dec
sbb
iret
inc
test
jmp
sub
sbb
ret
mov
sbb
fs
push
aas
or
pop
mov
clc
imul
fwait
jb
push
and
push
lock
push
inc
cwtl
clc
mov
iret
out
mov
inc
out
sub
leave
jle
sub
dec
xchg
test
adc
inc
inc
xor
or
ljmp
jno
xor
cltd
mov
pop
cmp
mov
inc
nop
repnz
or
sub
aad
pop
or
das
and
jp
and
testb
fdivrl
push
stc
xchg
dec
icebp
cmpsb
jbe
ljmp
dec
add
ret
mov
daa
mov
data16
adc
aaa
dec
out
jg
or
lea
lahf
mov
fwait
outsl
stc
ljmp
lahf
mov
sbb
aaa
shlb
popa
ffree
xor
and
pop
push
xor
mov
mov
xlat
sub
je
inc
push
dec
icebp
movsb
in
std
jp
ret
xor
movsl
push
std
lret
mov
xchg
and
insl
xorb
mov
jns
loopne
jae
pop
push
mov
ss
pop
jecxz
in
aad
pop
insl
cmp
mov
insl
dec
int3
or
push
mov
sbb
push
orb
lahf
or
pop
enter
arpl
push
inc
lods
lret
ljmp
xchg
lret
pop
int
sub
adc
mov
fcomip
mov
xchg
call
out
mov
test
iret
and
aad
or
and
mov
cli
sbb
mov
aam
cld
fldl
lds
cmc
or
dec
ret
sub
loope
sbb
and
mov
pop
aam
sbb
cmc
iret
and
xchg
repz
mov
into
sbb
jns
inc
fidivrl
ret
mov
mov
stos
fsubr
add
je
pop
lret
pop
lods
imul
and
xor
mov
out
mov
inc
into
cmp
cmc
inc
aaa
out
mov
sbb
cmp
aaa
iret
mov
sbb
test
mov
dec
push
dec
fidivl
ja
test
fstps
or
push
mov
xor
scas
mov
mov
sub
loopne
aas
xlat
inc
or
into
cld
mov
fwait
movsb
pop
mov
aas
out
test
cmpsl
js
movsb
or
mov
fisttps
or
jge
loope
mov
pushf
mov
in
pop
repnz
addr16
aad
fldl
or
and
iret
std
inc
and
in
fisubrs
inc
mov
scas
mov
mov
lahf
push
roll
dec
cltd
add
push
sbb
das
adc
pop
faddl
test
mov
cld
imul
inc
inc
xor
mov
add
add
xchg
push
frstor
xchg
xor
inc
cmp
and
in
xchg
test
nop
cld
int3
ret
pop
ljmp
pop
cmp
jnp
mov
enter
call
out
jne
xor
call
movb
sbb
adc
cmp
arpl
loopne
adc
mov
mov
xor
mov
xchg
pop
inc
mov
mov
jge
add
mov
pop
jmp
mov
cltd
jbe
popf
mov
mov
ret
adc
iret
mov
in
jb
addr16
fcompl
push
sub
ja
gs
rcl
adc
inc
inc
push
loopne
mov
stos
xorl
iret
adc
jl
testl
push
mov
iret
popf
jmp
sbb
mov
cmp
fsubp
cmpsb
mov
insb
mov
shrb
sbb
popf
jno
int3
xor
fs
sub
mov
popf
add
push
cli
scas
mov
jg
ret
bound
dec
mov
jmp
enter
in
xchg
inc
stc
lock
adc
pop
cmp
or
sti
nop
mov
mov
int
push
ds
xchg
cmp
mov
xchg
aam
pushf
xchg
movsl
sub
mov
iret
arpl
pop
jle
jecxz
push
and
pusha
daa
popf
cmpsl
sbb
sbb
mov
jge
mov
lret
adc
sub
rclb
mov
dec
cmpsb
jle
je,pt
popf
pusha
pop
sbb
inc
arpl
test
mov
jmp
cmp
rorb
push
xchg
fdivs
repz
pop
inc
push
pop
std
xor
pop
fstpl
and
fwait
aam
shr
push
pop
inc
jge
xchg
fdivr
lods
stc
xlat
jp
mov
rcrb
xchg
mov
scas
jo
jecxz
mov
add
inc
rorb
in
inc
test
cli
loope
sbb
pop
jns
movsb
fistpl
and
cmp
mov
mov
push
xor
sub
or
pop
dec
mov
jmp
pop
sbb
push
cmp
push
push
jne
ljmp
outsl
jns
jbe
cmc
scas
xchg
and
fdivl
pop
push
inc
jae
ret
push
mov
sbb
mov
repnz
imul
lret
xor
cmpsl
arpl
ja
mov
mov
sbb
mov
nop
add
jno
mov
aam
jle
xor
and
jnp
scas
sub
in
pop
xchg
lods
ret
js
or
lcall
sub
push
push
aad
or
scas
cmp
jmp
ja
jg
shr
testl
or
xchg
mov
faddl
xor
lret
mov
sbb
aas
sbb
sahf
and
repnz
jp
add
subl
enter
in
xchg
mov
jle
dec
and
pop
and
iret
into
inc
test
add
je
mov
inc
out
movsl
or
xor
mov
stos
daa
rorl
dec
mov
sahf
pop
fisubl
mov
fmull
xchg
sub
and
jg
inc
mov
jg
ret
leave
dec
or
js
loop
mov
mov
out
mov
lock
push
mov
fisttpll
xor
pop
enter
pop
test
dec
cmpl
andb
insb
mulps
inc
fucomip
andl
mov
mov
loope
push
das
jo
out
lods
cmp
jne
and
mov
mov
push
push
movmskps
or
ss
std
ss
nop
dec
imul
mov
cmp
les
lods
testb
cmp
adc
jbe
or
jmp
cwtl
pop
inc
popa
nop
adc
dec
inc
outsl
mov
sub
dec
int3
lock
add
rcrb
mov
xor
mov
ja
cld
cltd
movsl
gs
jne
add
sbb
jge
lock
out
adc
loope
cmp
pop
sbb
nop
xchg
mov
btc
repz
call
sbb
fmul
dec
push
add
sbb
pop
add
xchg
imul
in
ret
adc
mov
hlt
pop
push
push
inc
add
push
out
js
lret
out
inc
shll
pop
push
bound
sub
arpl
xchg
cli
and
xchg
xchg
or
call
inc
ret
mov
inc
sub
mov
jb
push
inc
cmpsl
aaa
cmp
xorps
dec
mov
out
sub
xchg
adc
or
dec
cli
out
repnz
mull
mov
mov
and
iret
leave
out
mov
inc
jge
fiadds
cmp
sub
cmpsb
loope
imul
xchg
rorb
mov
daa
xchg
pop
stos
mov
fisubrs
mov
inc
push
add
jnp
xchg
cmp
cwtl
or
int
inc
jl
lret
xchg
ret
add
fsin
xchg
and
cmp
xchg
push
xchg
fsts
cmp
mov
xor
lahf
jl
movsl
cmp
jle
stc
inc
sub
mov
pushf
scas
push
scas
fists
inc
push
mov
cld
and
add
sub
and
jle
cmp
clc
outsl
sub
sub
push
mov
or
mov
pushf
xchg
es
pop
ss
xchg
cmp
mov
jecxz
or
mov
xor
lret
pushf
sbb
mov
dec
jns
repz
cs
push
or
scas
dec
sub
sahf
dec
or
or
adc
dec
decl
jmp
cmpsb
jo
jbe
add
mov
sbb
mov
js
notb
mov
or
leave
popa
mov
fimull
inc
cmc
scas
cmpsb
andb
cmpsb
lret
xchg
mov
js
xchg
mov
cmpsl
ljmp
mov
daa
subl
sub
lret
pop
imul
push
icebp
jg
std
adc
jmp
mov
nop
xchg
mov
and
aad
mov
xchg
and
pop
xor
popf
cmc
idiv
cmp
pushf
xchg
mov
mov
inc
imul
loop
adc
add
sbb
inc
repz
mov
pushf
adc
adc
insb
add
cmpsb
loop
iret
dec
mov
out
mov
xchg
xchg
popa
imul
or
cwtl
xchg
fldenv
rclb
scas
add
xor
adc
jge
pop
mov
pop
lret
sub
push
xorb
jl
in
pop
push
jo
cmp
jns
xchg
push
addl
sbb
jecxz
out
pop
in
inc
jo
mov
and
xchg
push
fucom
lods
xor
lods
and
cmpl
jae
scas
aas
cmp
data16
xchg
xchg
mov
adc
fsubl
sbb
push
flds
sarl
pop
push
test
inc
bound
inc
ja
popa
inc
sub
jl
adc
sbb
push
inc
xchg
adc
gs
nop
cmovo
mov
mov
add
incl
imul
or
sub
or
ds
lahf
inc
or
pop
push
cmpsb
and
adcl
sub
ficoml
imul
push
jmp
adc
ss
js
rcrl
jp
push
or
push
dec
xchg
add
out
sahf
dec
mov
inc
xchg
repz
out
pop
and
ja
loope
test
ds
or
call
out
int
sbb
mov
push
notb
xor
mov
popf
fadds
nop
inc
cmp
cmpsl
arpl
sub
or
int3
xor
adc
fbld
lods
xchg
es
mov
cmc
push
adc
idiv
in
js
stc
test
notb
andl
icebp
loopne
mov
jl,pn
clc
icebp
lahf
add
pop
cltd
mov
mov
mov
dec
mov
xchg
mov
xor
and
es
roll
jb
mov
sub
or
pop
out
cmp
rolb
lret
mov
inc
sub
and
fisubl
sbb
fdivp
mov
ljmp
sbb
xor
int
xchg
leave
in
sti
lcall
sub
aad
test
je
stos
negb
clc
lahf
ja
leave
cwtl
pop
inc
dec
adc
push
nop
in
jge
mov
dec
xlat
in
cmp
mov
inc
or
add
bnd
push
sub
lret
or
shr
xchg
mov
fld
test
mov
insb
pop
and
fucom
jns
and
jns
nop
cmp
xor
lret
xchg
inc
mov
push
add
xor
mov
push
mov
mov
xchg
dec
in
mov
pop
clc
movsl
adc
arpl
or
outsl
mov
dec
pop
mov
adc
mov
into
dec
xor
je
fmul
and
loope
repnz
repz
sti
cmpsl
mov
imul
xchg
push
cwtl
int
aad
jmp
hlt
jge
test
inc
into
out
inc
inc
ljmp
push
fwait
arpl
pop
mov
xor
pop
cli
mov
xchg
lahf
add
daa
repnz
cmc
in
mov
mov
mov
decb
test
pop
cltd
inc
loopne
pushf
or
mov
sbb
mov
dec
daa
pop
insb
insb
out
sub
daa
imul
jb
push
mov
imul
push
adc
inc
or
leave
jnp
cld
mov
inc
inc
dec
jo
mov
test
sub
and
andl
add
ficoml
jns
xchg
arpl
iret
jle
add
cmp
or
call
mov
out
aad
aad
lds
test
shrb
push
dec
mov
cwtl
xchg
ds
imul
ja
sarb
mov
cmp
repz
pop
jne
dec
adc
fwait
jno
inc
cs
fimull
jae
ret
lock
popa
push
cmp
cmp
lret
push
aad
cmp
pusha
das
sarl
ja
pushf
lret
xchg
add
mov
test
add
mov
rcrl
dec
or
jnp
xor
dec
sbb
int3
adc
popa
pusha
mov
jne
je
fidivrs
icebp
mov
dec
xor
or
jl
aas
faddl
pavgb
inc
or
rcr
dec
jp
push
es
loope
in
lret
dec
and
stos
fs
and
rorb
test
jno
jb
cmc
jmp
jns
xchg
sbb
addr16
aaa
xchg
addr16
sbb
repz
jns
lahf
or
jns
int3
call
pop
fmul
repz
sahf
dec
scas
leave
stos
mov
adc
cmc
sahf
arpl
xor
sbb
add
xchg
cmp
sahf
arpl
call
sub
push
cmp
fs
push
mov
ds
xchg
jb
imul
fcompl
sub
scas
int3
test
pop
inc
jae
adc
test
iret
lock
and
fadds
test
add
sbb
push
push
pop
enter
jp
ss
pop
mov
sub
cmpsl
filds
gs
jbe
mov
pop
scas
jno
sbb
xchg
mov
inc
aas
pop
mov
dec
pop
mov
nop
xlat
cli
stos
xor
ja
xchg
dec
aaa
insb
lods
or
dec
mov
rol
ds
out
xchg
in
cmp
jl
inc
or
sbb
stos
pop
cmpsb
shrd
sub
jns
xchg
cmp
inc
jae
adc
nop
sbb
add
cmp
clc
sub
sbbl
pop
cld
std
je
add
stc
fdivrs
or
and
push
sarl
aaa
popf
clc
push
push
mov
jb
incb
neg
insl
out
loop,pt
xchg
lret
mov
int3
stc
mov
mov
inc
sbb
and
lahf
incl
into
xchg
lods
gs
shlb
cmp
lods
dec
mov
mov
bound
xchg
sbb
sti
jmp
aad
into
adc
mov
outsl
cmp
pop
push
mov
ret
mov
inc
aad
popf
mov
cld
bound
inc
cmp
inc
mov
jg
mov
lods
or
sub
std
push
xor
cwtl
push
push
cmpsb
push
and
fs
inc
int3
adc
dec
pusha
push
lods
jno
dec
lret
iret
icebp
mov
das
out
fnstcw
cmc
lcall
xor
aad
xchg
sbb
adc
cmpsb
pop
test
sbb
jl
jle
pop
fadds
pop
outsb
mov
sub
in
es
add
lods
mov
ds
aas
rcll
mov
cmc
jle
aad
pop
sarl
xchg
xor
mov
push
rolb
fmull
jle
jg
sbb
sub
rorl
aam
adc
sbb
cmp
int
dec
je
fneni(8087
jecxz
mov
shlb
add
insb
and
push
pop
outsl
adc
icebp
push
popa
adc
orb
data16
cwtl
adc
dec
pop
jb
xchg
add
outsl
add
fistpl
test
xchg
imul
out
push
pushf
dec
imul
fldl
jecxz
mov
sub
inc
enter
and
ret
mov
subl
shlb
inc
xor
cld
popa
jne,pt
sub
call
ret
lcall
mov
movsl
test
mov
pop
aas
push
mov
cmp
sbb
fmul
push
fbld
ret
push
or
adc
add
sbb
ja,pt
shll
inc
inc
stos
out
or
ret
dec
cli
movsb
test
imul
bound
jg
int
fistps
sbb
add
jmp
repnz
flds
sbb
or
sub
mov
mov
in
sub
or
subb
mov
cmp
jno
leave
and
pop
jmp
mov
repz
leave
add
jne
sub
int3
cmp
test
jns
pop
and
std
fisttps
arpl
sbb
inc
popf
arpl
lret
xchg
aaa
xchg
xchg
add
mov
rorb
mov
jmp
repnz
or
mov
sub
mov
sub
pop
shrb
int
lret
loopne
iret
xchg
aas
nop
inc
icebp
push
outsb
or
xor
pusha
fcmovnb
pop
mov
jno
prefetchwt1
and
pop
ja
or
or
addr16
inc
sarl
adc
inc
xor
mov
test
sbb
xor
je
in
out
lea
fists
mov
and
add
jnp
fs
bound
les
xchg
rclb
dec
scas
lea
sahf
ljmp
fs
xor
in
push
inc
insl
push
jno
shlb
sbb
int
pop
adc
pop
ret
sar
cmp
rcrl
fcmovbe
fdiv
xor
fisubrl
add
out
inc
lea
movsb
mov
lcall
lcall
adc
fbstp
mov
push
inc
push
lds
fisubrs
sar
dec
mov
cwtl
sti
mov
or
adc
pusha
pushf
sarb
sbb
lea
and
out
adc
xchg
imul
outsl
push
cld
fst
cltd
hlt
jnp
pop
dec
xlat
sbb
cmp
or
sub
and
pop
les
fwait
enter
add
sbb
sbb
push
insl
add
cwtl
push
and
xor
jb
popl
push
test
adc
xchg
xor
jbe
mov
mov
fidivs
mov
loop
or
jbe
mov
stos
add
lea
sbbl
jns
cs
jae
jne
xchg
xlat
fs
jbe
sbbl
xor
xlat
ss
xchg
cmp
push
adc
xor
fucomi
js
loopne
dec
xchg
push
jle
sbb
lods
sub
cld
repz
xor
int3
in
sbb
icebp
in
ja
sbb
inc
dec
dec
mov
cmp
inc
popa
aad
jge
adc
push
xor
std
jecxz
addr16
mov
mov
aaa
nop
les
bound
sub
dec
jnp
imul
fsubp
sub
das
in
push
mov
insb
mov
loope
test
ss
pop
or
out
popa
mov
xchg
stos
scas
jo
gs
bound
xchg
sbb
es
fldt
sbb
outsb
cmpsb
test
push
mov
jb
mov
mov
outsl
call
js
scas
aam
cmp
pushf
in
scas
jmp
ficoml
lods
and
or
loope
and
icebp
fisttpl
adc
int3
pop
push
cwtl
fsubl
pusha
push
iret
into
xchg
test
sub
push
inc
sub
cwtl
xchg
sbb
aad
je
push
jno
add
dec
cmp
mov
pop
inc
int3
sub
mov
push
jle
adc
movsb
xor
call
inc
mov
jge
sbb
flds
push
out
mov
xor
iret
sub
cli
jae
pop
je
inc
add
push
add
in
ljmp
hlt
xchg
div
and
dec
into
outsb
dec
jno
mov
xchg
jb
ljmp
pop
sub
cld
mov
outsl
rorl
mov
stos
mov
mov
mov
mov
mov
add
push
addl
mov
mov
dec
mov
aaa
jge
fsubrp
loope
xor
xor
es
cli
test
outsl
pop
jb
push
std
aam
cmp
jecxz
iret
pop
jmp
rorl
in
push
call
pop
mov
cmc
pop
lock
xor
sbb
ja
jno
adc
in
inc
inc
cmp
rcr
lea
clc
enter
mov
out
je
mov
adc
out
and
adc
dec
mov
pop
repz
push
jmp
addl
jg
jb
les
or
jnp
and
mov
mov
mov
sub
sti
popa
outsb
pop
out
cltd
cmc
cmpl
sbb
mov
sbb
loop
or
cmp
lret
out
shlb
test
mov
dec
sbb
fcomps
cmp
pop
sbb
inc
gs
and
jmp
push
dec
aam
xor
inc
pop
push
aas
out
cmc
jg
sub
dec
ljmp
mov
rcll
add
cli
rorl
insl
scas
pop
cmp
adc
fldl
rclb
fcomps
mov
sbb
sbb
dec
sbb
jecxz
jb
sbb
jmp
dec
xor
es
dec
shrb
imul
mov
and
xor
or
dec
adcl
mov
rol
fs
lea
sub
cli
test
jns
xchg
pop
xchg
pop
nop
stos
adc
je
cmp
fsubs
and
jbe
out
jnp
insb
adc
pop
lahf
aam
stos
std
push
push
jecxz
call
or
mov
dec
lds
pop
fadd
je
lds
and
mov
xchg
jle
daa
pop
insb
mov
arpl
jp
adc
out
stos
sub
test
insb
xchg
pop
lods
cmc
push
mov
push
and
xor
cmp
xchg
fbstp
pop
xchg
fmulp
sub
rcll
push
pushf
test
mov
sbb
cmp
lcall
mov
das
xchg
movl
and
fsts
shl
inc
insl
arpl
movsl
sub
mov
inc
test
ret
dec
sahf
pop
repz
aam
lods
cmpsb
xor
ds
movsb
xor
loopne
cmp
jns
jno
xor
xor
push
and
js
cmp
mov
mov
mov
lds
cmpsb
fldenv
push
xor
sti
test
adc
cmp
popa
xlat
xchg
xlat
cltd
outsl
xchg
hlt
inc
sub
mov
dec
inc
xchg
pop
pushf
jno
or
xor
lock
pop
sub
push
mov
xor
mov
iret
icebp
inc
movnti
mov
in
cmp
ljmp
inc
sbb
push
fcoms
sarl
jp
or
or
push
mov
in
pop
push
cwtl
mov
dec
es
mov
cmc
lcall
mov
sahf
and
aas
mov
das
imul
mov
aam
out
push
lock
add
adc
mov
fbld
data16
fs
xor
dec
mov
pop
or
jl
push
ret
test
xor
pop
inc
lret
xor
aaa
stos
test
loop
ud1
hlt
cltd
lcall
push
or
mov
inc
lcall
in
mov
mov
jbe,pn
mov
movsl
mov
xor
adc
mov
data16
sti
in
jns
aad
inc
add
sub
cwtl
add
cwtl
cmp
dec
pop
jb
aas
or
jne
mov
rcrb
push
inc
inc
inc
jae
xor
lcall
test
lahf
std
je
inc
cs
mov
loopne
pop
push
mov
lahf
stos
inc
sahf
jecxz
out
sub
loop
mov
call
xlat
ret
cmp
adc
cmp
add
jo
sub
negb
sbb
mov
shll
scas
fs
mov
adc
sbb
or
pop
aaa
add
les
std
sub
sub
mov
xchg
jno
les
sub
cmp
popa
and
loop
mov
scas
or
cli
and
and
lahf
sub
out
adc
xchg
in
pop
jne
adc
xchg
je
mov
sbb
xlat
and
mov
xchg
shl
dec
gs
sub
jecxz
lret
fptan
cmpsl
sub
cld
xlat
add
ljmp
xchg
lods
notl
shl
xchg
imul
mov
jb
cli
xchg
mov
clc
in
enter
adc
popf
aam
int3
xor
popa
aad
mov
ds
insl
sub
mov
push
nop
jp
fsub
pop
xor
sub
cmc
mov
cmp
hlt
call
mov
push
push
sarl
out
test
scas
daa
insb
mov
sarb
dec
in
stc
mov
insb
cmp
pushf
idivl
sub
mov
ficomps
jb
mov
imul
incl
dec
push
rolb
mov
mov
inc
cltd
xchg
int3
daa
fwait
mov
clc
js
into
loopne
cltd
pop
sbb
inc
xor
pushf
repnz
les
cmp
loopne
addb
das
cs
cmc
jo
out
cmp
jb
push
adc
jge
add
arpl
cld
push
add
cmp
add
fdivrp
and
mov
dec
dec
pop
test
loop
inc
icebp
ja
dec
rcrb
in
fisttpl
xor
xor
clc
jp
fisubl
mov
mov
in
jmp
mov
stos
mov
dec
adc
and
mov
sbb
and
out
outsl
pop
push
test
add
movsl
pop
test
stos
pushf
add
jmp
dec
test
scas
inc
cmp
jge
cli
push
mov
shr
aas
xchg
lahf
dec
pop
and
mov
imul
add
pop
adc
mulb
cltd
imul
jno
nop
pop
push
dec
fs
stos
xchg
adc
scas
push
mov
and
call
ja
and
les
popa
mov
or
adc
lret
push
stc
pop
sbb
mov
push
das
les
cmp
add
inc
mov
loope
add
enter
jo
nop
sti
inc
inc
out
push
shlb
aas
push
andb
sbb
mov
mov
pushf
push
jno
inc
push
inc
xlat
sbb
dec
test
flds
add
fs
mov
js
mov
pop
cltd
shrb
out
testl
mov
loopne,pt
les
sti
xchg
pusha
and
mov
inc
je
sbb
loop
repz
loopne
jnp
add
test
fidivl
dec
pop
and
lods
rol
loop
gs
lgs
fstp
les
psllw
scas
and
mov
out
adc
shll
movsb
xor
sub
inc
xor
pop
or
cld
xchg
sbb
pop
sbb
push
iret
fdivrs
aaa
shll
inc
icebp
push
clc
and
fsubl
enter
test
add
jge
mov
xor
in
in
std
icebp
pushf
lret
adc
or
xor
cmpsl
loopne
push
push
loope
les
dec
mov
adc
add
push
cmpsb
sbb
std
add
push
lods
add
incb
pusha
ljmp
bound
cmp
adc
cmpsb
xchg
pop
cmp
sub
dec
mov
out
inc
mov
stos
push
push
rolb
aad
push
push
out
hlt
pxor
pop
pop
leave
xchg
jle
in
jecxz
test
or
sub
out
inc
cwtl
insl
into
sbb
sahf
and
out
minsd
push
xchg
push
in
inc
loop
jne
lea
add
fisttps
cmp
test
lret
mov
inc
cmp
or
loopne
mov
adc
or
and
cld
fisubrs
cmp
pop
aad
orb
call
push
sbb
cltd
out
js
fs
and
and
xor
push
cmpsl
rcll
jge
mov
pop
lods
inc
shl
xor
fisttpl
outsl
test
sub
loope
pop
clc
ds
sahf
ficoms
pop
xor
popa
pop
loope
loop
sub
and
aad
popf
lods
jnp
lds
xchg
ret
data16
pop
je
push
arpl
adc
out
test
xor
repz
in
push
movsl
imul
jge
movsl
jb
inc
adc
xor
repnz
jno
xchg
mov
mov
cmpsb
gs
xchg
xor
sub
cld
test
or
ja
adc
xchg
gs
dec
sbb
xor
loope
push
add
pop
js
or
xchg
pop
inc
out
ficompl
arpl
cmp
xor
mov
repz
out
push
sub
mov
mov
inc
outsl
mov
cmc
sarb
inc
out
ss
xor
cmp
mov
xor
subl
inc
fimuls
lds
mov
add
fists
fs
scas
shll
inc
sub
xchg
insb
pop
and
pushf
adc
sub
lret
popf
nop
icebp
or
lds
frstor
fadd
lds
jne
cmp
push
pop
roll
scas
imul
mov
in
xchg
in
pop
pop
ja
std
rolb
sbb
lods
push
jne
sti
in
cmp
cmp
testb
mov
jno
ja
xchg
repz
cltd
outsb
repnz
xor
add
out
inc
mov
or
shll
mov
jns
stos
loopne
sbb
ds
pop
dec
add
jge
cmp
cmpsb
adc
cmp
cmc
adc
jno
fstpl
sub
sub
repz
dec
pop
insl
jbe
popa
not
push
fidivl
mov
dec
push
rclb
push
ror
pop
bound
mov
jae
outsl
push
mov
sbb
mov
pop
mov
mov
inc
popf
aam
insl
inc
cwtl
aas
rcrb
push
lods
and
pop
sbb
mov
stos
sbb
jbe
xor
test
pop
ficoml
xchg
inc
sub
or
xchg
out
mov
pop
in
packssdw
int
daa
call
repz
dec
ret
xor
mov
xor
popf
add
add
pop
mov
in
jecxz
hlt
rcrb
sub
in
les
loopne
fsubs
or
lds
jb
or
and
stos
adc
dec
fimull
fwait
cltd
mov
xchg
dec
mov
inc
rcr
inc
inc
mov
mov
jge,pn
lret
adc
sbb
xor
cmp
jno
adc
lahf
mov
test
jle
inc
pusha
or
pop
or
mov
xor
adc
lret
jno
inc
in
lods
sti
pop
cmpsb
add
cmovne
pop
icebp
pop
scas
adc
movd
pop
nop
out
mov
mov
inc
mov
stos
push
cltd
mov
out
add
fdivs
jbe
mov
loop
mov
jae
adc
xchg
adc
and
xchg
fimull
pop
cmp
adc
mov
mov
inc
inc
fimull
das
inc
mov
jge
call
js
stc
adc
enter
dec
lods
jno
jl
mov
lcall
or
and
icebp
ret
adc
movsl
and
not
jmp
dec
xchg
bound
inc
fistps
push
sub
and
inc
das
js
into
aad
xchg
xchg
xchg
pop
and
xchg
insl
pop
ror
rol
dec
push
std
xor
subl
inc
test
int
sbb
int3
pop
add
in
mov
cmp
add
cmp
dec
gs
pushf
test
or
popa
sbb
sub
int
cmpsb
in
sub
stos
data16
loopne
inc
xchg
inc
jo
notl
pop
sub
paddd
loope
imul
jl
std
or
sub
jecxz
jo
sub
xchg
sbb
out
add
in
cmpsb
aas
dec
cmpsb
andb
test
push
fcoml
xchg
cmp
pusha
add
mov
push
mov
mov
popa
and
mov
je
push
lret
or
push
movsl
add
clc
loopne
movsb
lock
pop
stos
mov
xor
hlt
aam
repz
aam
in
mov
test
mov
mov
pop
iret
xor
fs
sbb
and
iret
xor
in
in
or
jb
xchg
fadd
dec
jmp
add
outsl
pusha
and
or
fsincos
add
fidivrs
jg
mov
arpl
lret
push
and
push
mov
pop
pop
cmp
popa
sbb
push
shlb
dec
mov
cltd
fdiv
dec
xchg
cli
roll
lods
fdivrs
lock
insl
xlat
clc
jbe
push
cmp
aad
scas
mov
mov
sub
icebp
push
push
push
dec
mov
into
fwait
stos
int3
mov
cmpsb
ret
pop
orl
and
addr16
scas
jae
repz
dec
cltd
lods
sbb
jle
mov
dec
pop
andl
int3
out
dec
out
popa
dec
lods
adc
clc
aad
aam
xor
loopne
lds
push
push
sbb
xchg
stos
fsubrs
mov
or
ja
cwtl
dec
stos
test
movsb
call
mov
mov
pop
mov
sbb
sbb
cmp
push
cmp
int3
push
loopne
mov
xlat
ss
pusha
ljmp
lahf
cmp
jle
pop
xchg
movsl
testl
mov
push
mov
cltd
ds
dec
std
push
jp
cmp
push
dec
sti
fdivrl
pop
lret
sub
roll
xchg
mov
push
push
xchg
mov
aas
inc
movsl
repnz
xchg
push
fmull
jge
lock
mov
rorl
mov
add
lahf
mov
mov
mov
inc
inc
or
out
dec
inc
int
pop
xor
xor
jbe
rcrb
test
and
xor
clc
inc
push
or
testb
leave
loopne
inc
fisubrs
pop
adc
ret
popf
pop
inc
ja
jns
ja
movsb
xchg
repnz
push
jb
xlat
cwtl
icebp
sub
push
mov
xor
fsubrl
pop
das
push
repz
inc
sbb
in
inc
xchg
mov
mov
nop
in
jl
mov
cmp
pusha
data16
mov
mov
insl
pushaw
clc
aam
jno
int
mov
mov
mov
mov
jnp
lods
repz
je
jo
out
shlb
in
daa
pop
jmp
mov
aas
ds
dec
and
mov
fnstenv
shll
cmp
add
clc
ret
pop
lahf
add
les
mov
dec
sbb
sbb
sub
jecxz
mov
push
add
mov
and
mov
testb
dec
aad
fs
xor
data16
xor
popa
in
push
out
fldl
rcll
fstpt
xchg
push
decb
mov
add
sbb
sahf
out
hlt
mov
push
push
mov
fldenv
cvtpi2ps
mov
pop
adcb
lcall
or
jno
xor
fmull
cmpsb
inc
out
addl
sub
leave
lea
sbb
mov
hlt
fimuls
dec
or
divl
aas
ljmp
and
push
outsb
fmull
push
insl
inc
pop
inc
and
out
insl
ret
or
lea
mov
out
bound
stos
jp
or
aaa
in
jmp
leave
imul
sti
xchg
ret
dec
test
ja
rcll
lods
dec
adc
jl
loop
cli
mov
ljmp
lods
inc
xchg
dec
dec
loope
clc
jp
stos
lea
hlt
mov
sbb
push
mov
jne
mov
xchg
pop
je
pop
imul
hlt
xchg
adc
mov
cs
push
imul
in
inc
or
xchg
data16
mov
andl
inc
or
mov
es
sub
xchg
sub
xchg
mov
inc
and
mov
gs
test
ljmp
or
jae
xor
pop
int3
scas
add
or
js
cwtl
xchg
mov
mov
mov
mov
mov
push
stos
sub
jmp
or
pusha
fmulp
mov
scas
jp
std
mov
pop
ds
jns
push
stos
push
or
mov
fstps
lret
jmp
pop
pop
rorl
mov
rorl
dec
inc
mov
in
adc
push
add
popf
xchg
out
sub
push
insb
addr16
push
pop
outsb
push
dec
insl
scas
pop
inc
cltd
in
dec
add
push
ljmp
mov
pop
sarb
inc
cmp
pop
call
lods
dec
je
xchg
xor
lahf
into
xchg
mov
push
jae
js
mov
push
jnp
ss
inc
arpl
fsubl
mov
sub
rorb
mov
fists
sarl
es
jl
jmp
pop
xchg
push
inc
or
pop
ret
dec
adc
jmp
xchg
adc
aad
shlb
pop
pop
cli
push
mov
xorb
aam
loopne
jmp
xor
movsb
cs
pusha
movsb
loopne
cltd
stos
lds
sahf
inc
or
ds
addr16
rcll
ljmp
dec
ljmp
daa
cmp
xlat
mov
lods
jae
insl
xchg
inc
and
addr16
mov
add
mov
jns
jne
mov
test
lahf
jne
ljmp
test
ja
and
std
pop
sti
inc
ss
mov
add
sbb
out
add
push
pop
mov
popa
ret
sti
loop
pushf
test
test
nop
and
xchg
ror
sbb
push
xor
adc
cmpsb
dec
dec
add
mov
jmp
mov
lock
loopne
jg
adc
pop
hlt
push
sub
jg
clc
fcmovb
pop
mov
gs
mov
popa
out
jne
sub
loop
or
les
mov
in
and
cmpl
mov
mov
xor
jo
fcmovnbe
cmp
mov
lcall
daa
fwait
push
bnd
or
std
xor
mov
pushf
adc
addr16
jnp
inc
add
push
add
dec
je
cmc
xorb
pop
push
ljmp
ljmp
mov
jns
xor
cmpsb
mov
dec
icebp
adc
xchg
fwait
lret
add
pushf
mov
pop
push
insl
cmpsb
jmp
std
mov
pop
fisubrs
das
lods
xor
cs
movsl
or
and
jecxz
push
push
mov
mov
adc
mov
inc
mov
dec
dec
cmc
cwtl
aas
pop
push
popf
repz
mov
out
sbb
fdivs
insb
xchg
fwait
stos
clc
lods
pop
mov
xor
sub
loope
movsb
mov
daa
aas
sub
mov
mov
sbb
ret
xor
or
and
mov
ret
ret
and
scas
jl
int3
outsb
int
fstl
loope
push
jbe
inc
ljmp
in
or
repnz
jno
nop
fidivrs
lods
jmp
popf
mov
lock
outsl
mov
push
pop
sbb
pop
rcl
cltd
dec
mov
std
inc
call
push
jbe
lods
xor
mov
movsb
nop
add
push
test
add
adcl
nop
sbb
mov
sub
enter
int
jae
sbb
mov
sbb
mov
jnp
cmp
mov
arpl
dec
mov
fisubrs
flds
xchg
inc
push
push
testl
dec
inc
pop
into
xchg
test
ret
mov
mov
mov
jns
lds
xor
push
addr16
loope
jnp
repz
mov
lods
mov
mov
pop
sub
sbb
aas
cmp
outsb
int
and
data16
andb
movsb
std
xchg
mov
fld
sahf
shll
bound
cmp
in
fisubs
sbb
sub
sub
push
sbbl
mov
jnp
push
in
shl
mov
insb
out
mov
or
and
jb
pop
push
out
scas
dec
repnz
fs
aaa
pusha
addr16
lahf
add
and
jmp
inc
mov
or
in
push
or
mov
pop
mov
popa
mov
push
test
mov
je
mov
in
arpl
sub
addl
jne
push
jecxz
jl
xor
mov
shrb
inc
or
aam
int
sub
in
aas
push
adc
mov
sub
add
mov
sbb
in
loopne
push
cmp
fwait
nop
in
jb
dec
fcoml
adc
mov
sub
jae
popf
notl
mov
push
push
notl
xor
or
sbb
clc
aad
mov
rcrb
subl
mov
push
daa
cltd
dec
lods
imul
scas
mov
push
insb
incb
arpl
test
adc
mov
aaa
testl
ret
into
mov
fld
sbb
jp
mov
mov
push
jecxz
dec
adc
xor
gs
fidivrl
inc
jl
cmpsb
imul
push
adc
mov
int3
pop
sbb
jns
jecxz
mov
out
sub
ja
cltd
xchg
xchg
and
pushf
iret
jl
push
insl
popa
ret
dec
insb
pop
movsb
cmpsb
inc
cmp
insl
push
jg
mov
mov
popf
das
dec
inc
mov
fistpl
pop
pop
test
mov
pop
roll
pop
sub
in
cmp
push
xchg
sub
cmp
sbb
add
cwtl
dec
icebp
sub
pushf
movntps
rcrb
idivb
shlb
lods
cltd
adc
adc
jp
push
lock
mov
adc
pop
jge
jo
rorb
shlb
dec
add
fldenv
xor
and
roll
lahf
sahf
mov
jmp
pop
lcall
pop
in
or
pop
mov
fcoms
cmp
xchg
adc
icebp
pop
cwtl
push
mov
jb
inc
jge
ljmp
pop
push
mov
jg
scas
push
cmpsb
dec
mov
fmulp
and
test
inc
mov
sub
fwait
cmp
lret
data16
sbb
mov
jno
cmp
sahf
cmpsl
inc
mov
sub
in
in
out
xor
add
push
aad
or
cmp
stos
push
fildl
test
jbe
jno
add
movsl
add
xor
push
in
mov
mov
iret
pop
js
pop
shll
int3
fistl
xchg
fldl
xchg
xor
xchg
int
and
popa
leave
jl
sub
iret
sub
sub
fisubl
add
jo
fstpl
lds
jmp
pop
cld
or
mov
ss
pusha
nop
fdivs
pop
stos
cmp
aad
mov
inc
mov
rcrb
sbb
push
outsl
jle
cmp
and
push
cld
mov
repnz
xor
ljmp
movl
test
push
jmp
dec
test
adc
les
lock
icebp
rcrl
fdivrs
stos
jnp
subb
jb
sub
xor
test
jp
xor
mov
pop
cmpsb
call
mov
pop
aas
xor
ja
mov
adc
pusha
xor
push
or
fdivl
enter
xor
leave
mov
int
dec
add
ss
lods
inc
and
in
mov
lret
ret
xchg
in
iret
sub
dec
mov
pop
push
fsub
lret
pop
push
leave
in
fstpt
xor
mov
pand
sbb
inc
rorb
mov
push
mov
pop
add
mov
loop
and
dec
shl
notl
hlt
and
mov
sar
pop
mov
inc
jae
push
mov
cmp
pop
ja
or
test
mov
sub
enter
andl
enter
xor
jp
div
cmp
xcrypt-ofb
cmpsl
insl
add
addr16
or
xchg
fwait
push
mov
inc
pop
mov
iret
cmc
mov
scas
cmp
loope
in
pop
fadd
sbb
mov
in
adc
sbb
mov
add
or
addr16
inc
mov
insl
insb
orb
mov
mov
mov
cwtl
pushl
cmp
or
loopne
mov
inc
xchg
cmp
lds
mov
dec
imul
pop
scas
xchg
xor
pusha
fldenv
xchg
lcall
das
mov
push
jae
scas
shll
dec
negl
fldenv
or
std
sarl
add
mov
cmp
mov
add
jb
scas
cmp
xor
aam
pop
mov
pop
addr16
mov
mov
jecxz
mov
arpl
push
cmp
mov
pop
lods
xor
lods
push
push
sub
xchg
rcrl
xchg
int
pop
arpl
mov
test
mov
lahf
or
mov
pop
loope
test
or
adc
cmp
cwtl
lods
bound
pop
sti
cltd
push
jle
pop
fwait
push
jns
push
jg
push
test
xchg
cmp
loope
iret
or
lds
out
fisubs
add
mov
incb
into
imul
loop
fsubrl
out
mov
test
call
push
push
push
pushaw
inc
cld
push
mov
mov
movsl
fisttpl
into
hlt
mov
cmp
jo
push
jns
fs
sub
and
xor
xchg
in
stc
ret
inc
xchg
test
fwait
inc
out
scas
push
mov
hlt
jl
lock
jo
orb
sub
fnsave
sar
movsl
push
imul
cmpsb
sub
andb
push
into
ljmp
mov
mov
mov
cmpsl
fsub
lea
jmp
daa
mov
mov
xor
mov
pop
push
jnp
insb
mov
jnp
jns
xchg
cmp
jp
xor
loopne
and
and
xor
jle
jb
mov
cmp
ret
push
adc
inc
fsubrl
cmp
stos
cmp
testl
add
pop
fstpl
and
adc
stos
cmp
inc
xor
sub
aas
xchg
fisubrs
xorb
imul
outsb
pop
cmp
pop
outsb
and
sbb
and
bound
pusha
and
loope
call
jecxz
movsb
pop
cmp
popa
loopne
pop
loopne
dec
leave
test
in
mov
jecxz
and
hlt
sub
adc
push
mov
sub
lret
jecxz
push
jbe
loopne
mov
inc
loope
cld
add
fnsave
and
add
js
pop
adc
arpl
pushf
lea
int
or
std
in
mov
sti
xchg
xor
cld
add
sarl
sub
sbb
push
inc
add
xlat
fbld
mov
inc
bswap
cmc
ljmp
push
mov
fmuls
jno
adc
dec
mov
add
jbe
xchg
out
out
xchg
aaa
inc
adc
test
ljmp
test
mov
in
ja
shl
aaa
and
repnz
cld
xchg
rolb
daa
negl
xor
cld
stc
aam
xchg
cmp
jge
jg
imul
rol
mov
jp
stos
ret
push
jg
hlt
cmpsb
mov
adc
xorl
stos
and
add
adc
pop
and
insl
jecxz
insb
mov
inc
cli
sbb
push
orb
pop
mov
arpl
js
mov
jae
sub
mulb
adcl
mov
pop
aas
test
test
fs
sbb
xor
sub
xor
fdivl
inc
stos
push
push
sarl
pop
mov
jmp
push
push
cmpsl
lods
or
movsb
cmc
or
xor
cmp
sbbb
or
xchg
jne
mov
jecxz
mov
mov
mov
ds
outsl
cmpl
cs
mov
dec
in
push
push
mov
and
mov
out
jb
push
cmp
cmp
xchg
je
inc
in
xor
xor
xor
sbb
sbb
inc
mov
adc
sbb
or
xchg
andl
int
jbe
cs
mov
int3
inc
pop
xor
cmp
sub
daa
in
aaa
adc
fcmovne
shlb
xor
test
add
ss
xchg
pop
subb
xchg
adc
fsubs
mov
cmp
das
adcl
or
cmpsb
iret
je
mov
loopne
gs
fcom
dec
fistps
ret
out
ljmp
pop
bound
push
cmp
mov
daa
jp
pop
mov
mov
int
push
jg
push
rcrb
lcall
dec
scas
mov
inc
pushf
addr16
or
or
movsb
xor
xchg
cmp
fdivs
data16
test
out
scas
cmpsl
repz
nop
adc
movsb
add
ficomps
dec
jmp
xor
pop
mov
insl
mov
and
push
lods
mov
xchg
or
mov
data16
mov
loopne
test
jp
pop
jo
lret
rorb
bnd
adc
das
ror
mov
out
mov
pop
cltd
add
jle
add
scas
cld
push
jg
jne
pop
andl
in
jo
ret
dec
mov
jecxz
cltd
cmpsl
sub
push
cs
lea
xchg
enter
je
or
jnp
lods
jecxz
jb
popa
rclb
rcll
clc
add
test
sar
push
dec
xchg
lret
inc
fs
dec
adc
out
and
ret
jmp
in
sti
test
lret
adc
xlat
outsb
xchg
dec
push
hlt
or
jno
jae
and
stc
rcll
push
jecxz
repz
add
pop
leave
adc
fmull
adc
pop
ljmp
out
jecxz
rcr
nop
push
ret
cltd
les
stos
subb
in
cmp
xchg
leave
mov
xchg
lods
and
aam
repnz
aad
test
sub
out
push
ret
pop
cmp
or
jg
inc
mov
out
stos
clc
sbb
test
test
jmp
and
hlt
push
jp
and
movsb
jle
jmp
push
repz
sub
push
dec
outsl
push
pop
aam
sub
lcall
pop
jle
jg
jns
push
mov
xor
add
cmp
jae
das
lret
push
push
hlt
jns
jg
and
or
cmovnp
add
adc
cmpl
pusha
ret
xchg
add
in
popa
xchg
sub
daa
push
jnp
mov
or
aam
dec
mov
jnp
stc
jmp
fisubs
daa
dec
shr
mov
push
mov
shrb
jno
lcall
jg
clc
sbb
jno
stos
dec
lods
mov
je
mov
dec
fcmovbe
clc
mov
shlb
repz
stc
loopne
adcl
cmpsb
add
sub
add
ret
out
or
xchg
xlat
xchg
sbb
xchg
push
pop
movsb
and
addb
pushf
push
pop
mov
ret
lods
fs
pop
leave
push
sub
adc
cmpsl
inc
pop
cvtdq2ps
pop
sub
xchg
lahf
and
mov
cmp
ja
mov
outsl
cli
mulps
mov
js
push
jmp
in
and
sbb
pop
push
mov
subb
popa
xchg
mov
test
jne
push
add
inc
mov
cmp
mov
mov
stos
fisubrs
ds
fcoml
mov
sbb
mov
xchg
push
mov
lods
jb
stc
lret
mov
cmpsl
or
jg
adc
rorb
cwtl
mov
lret
push
sub
movsb
enter
adc
mov
mov
jb
cmc
cmp
dec
add
pop
pushf
shlb
sub
sub
repnz
repnz
sbb
cld
iret
and
and
sub
cmp
jo
stos
pop
xchg
or
fidivrs
mov
xor
and
pop
std
call
jp
fcomp
jno
add
aam
xchg
push
or
in
dec
jbe
jge
aas
fnstsw
or
or
or
mov
mov
cmp
sarl
in
jp
jbe
sti
shlb
clc
scas
cmp
test
fxch
cmpsl
dec
mov
or
out
push
movsl
xchg
add
push
inc
ss
adc
push
mov
ret
dec
sbb
hlt
test
insl
fst
frstor
fs
mov
sbb
setne
mov
push
ja
adc
jne
scas
adc
out
out
and
movsb
push
test
or
jne
pop
sub
and
push
adc
adc
fimull
daa
lods
pop
or
test
out
add
push
cmp
loope
movsb
and
imul
test
daa
lods
sarb
cmc
pop
push
mov
iret
xor
dec
xlat
or
divb
hlt
mov
in
mov
jns
int
out
adc
xchg
jecxz
inc
mov
out
test
mov
adc
je
test
push
mov
push
popa
fistpll
jb
iret
pop
sahf
mov
mov
cmp
call
std
das
dec
cmp
popa
mov
mov
jl
lret
mov
ja
and
nop
scas
mov
pop
or
xor
addl
das
inc
mov
add
mov
add
or
pop
mov
aad
sarl
sub
daa
insl
dec
adc
mov
mov
cmpsb
mov
out
jl
ret
ficoms
push
leave
jnp
lahf
addr16
ret
xor
cmp
shrl
add
pop
pop
in
mov
out
push
lods
or
add
mov
adc
sbb
sbb
jnp
jb
lahf
pop
jo
ret
loop
cmc
in
mov
nop
or
push
dec
lret
imul
je
pop
fnstcw
adc
leave
xlat
dec
mov
hlt
inc
jmp
adc
mov
clc
jl
sbb
sub
scas
negl
pusha
mov
cltd
dec
in
xchg
pushf
lods
mov
mov
inc
push
xchg
fdivrl
addl
mov
shrl
ds
mov
test
sti
pop
sahf
popa
dec
lcall
dec
mov
out
popf
shrl
jns
lods
lods
sub
cmp
mov
lret
jo
cli
mov
mov
mov
pop
mov
insb
mov
dec
sub
lods
jge
fcoms
enter
mov
pushf
ja
jne
lds
adc
add
mov
repnz
ds
test
xlat
pushf
int3
xchg
push
push
ret
fnsave
adc
inc
bound
mov
call
outsb
ret
cs
fdivl
mov
pop
lret
pop
sub
xor
push
cmp
jecxz
sub
or
xorb
fidivs
lret
lret
mov
push
inc
dec
mov
fadds
cmc
add
lods
or
pop
fstpt
inc
lds
ja
rcll
add
xchg
fstl
andb
aad
int3
sub
sahf
stos
xchg
mov
fistl
inc
lods
call
js
imul
xchg
mov
addl
push
pop
mov
ficompl
cmp
scas
jg
dec
rcll
loopne
jae
add
int
jge
and
scas
jmp
repnz
nop
cli
xor
sbb
push
movsl
add
outsl
js
sbb
mov
xchg
int3
cwtl
cmp
lahf
stos
popf
jg
subb
push
xchg
rcr
dec
jne
divl
ds
xlat
loopne
jp
mov
sub
cld
dec
aad
in
cli
insl
xor
sti
dec
pop
sub
daa
ss
sbbb
xchg
mov
fldcw
scas
push
cmp
xchg
jns
dec
and
fsubr
dec
sub
adc
or
flds
add
jg
mov
xchg
inc
xchg
fidivrs
sbb
negl
add
jno
inc
cmp
xchg
xor
push
mov
je
or
notl
adc
xor
les
mov
nop
in
in
add
scas
gs
jnp
in
outsl
pop
push
jg
inc
stos
outsl
inc
in
rorb
in
testl
sub
dec
in
lods
ja
in
pop
in
xchg
cmp
or
add
push
into
mov
imul
push
out
clc
xor
xchg
popa
outsb
and
out
bound
dec
movsl
loopne
ja
cs
pusha
icebp
test
cltd
inc
shl
pop
das
add
and
ljmp
pop
imul
mov
ja
fisubl
rorl
fldcw
push
and
xchg
pop
clc
jge
mov
out
sbb
scas
xorl
shrb
fs
stos
push
xor
adc
dec
sbb
pop
add
sub
fbstp
lret
push
jb
dec
scas
or
mov
push
das
jle
arpl
pop
imul
pop
and
pop
lea
push
ret
out
testb
push
push
aad
and
dec
sub
je
int3
mov
jg
daa
cmc
lcall
mov
push
cld
mov
or
pop
aaa
mov
jecxz
sub
push
jae
sbb
mov
ljmp
dec
adc
cmpsb
in
inc
ds
or
jne
mov
push
in
pop
repz
popa
pushf
bt
frstor
filds
sub
hlt
fwait
imul
xlat
stos
mov
imul
xchg
cwtl
les
punpckldq
ret
jecxz
pop
arpl
dec
and
cs
jo
mov
repz
jecxz
clc
nop
dec
mov
mov
mov
fldt
ja
mov
scas
inc
cmp
pop
cld
lret
loop
or
xchg
sub
push
and
or
jbe
xchg
data16
sub
fdiv
insb
sub
lret
gs
push
imul
xor
sub
out
mov
rcrl
xchg
push
mov
daa
movsl
movsl
mov
and
adc
inc
or
aam
add
sbb
enter
push
push
int
aam
xchg
inc
xchg
pop
mov
xor
ret
dec
je
es
arpl
xor
mov
jae
stos
out
ror
sti
fs
ljmp
mov
insb
cli
pop
pop
aad
in
xchg
popl
cli
xor
jae
pop
in
mov
xlat
jb
add
stos
rorb
jno
cmp
roll
popf
inc
push
xor
xor
data16
imul
cld
cmp
in
and
out
leave
pushf
adc
dec
faddl
flds
insl
cmc
and
insb
pop
add
movsl
push
cmpsl
xor
fimuls
shlb
int3
jmp
push
sub
seta
and
loope
jb
pushf
lea
cld
mov
adc
mov
ret
movq
ja
and
inc
loopne
stc
loop
insb
dec
push
repnz
outsb
jne
mov
xor
mov
push
or
mov
push
es
and
sbb
ja
dec
lahf
or
jg
iret
repz
jbe
flds
test
test
sbb
pop
cmp
jl
in
aas
mov
push
jp
cmpb
and
mov
decb
or
push
or
pop
pop
mov
aaa
jbe
js
push
imul
fld
testb
jecxz
fs
inc
lret
mov
aam
inc
jle
inc
ja
or
inc
push
call
and
fcmovne
sbb
imul
test
xchg
mov
add
dec
gs
xlat
outsl
js
test
out
loop
or
fstpt
or
cs
lods
arpl
push
push
cmpsl
scas
cs
jns
dec
enter
lcall
xchg
sti
mov
movsb
push
mov
addl
inc
or
push
jbe
mov
cmp
sti
mov
push
gs
cmpsl
dec
jae
shll
in
sarb
adc
ljmp
push
mov
dec
inc
icebp
jnp
dec
leave
push
jo
xchg
dec
cmp
mov
push
int
or
stc
cmp
mov
pop
pop
inc
cld
xor
xchg
jo
jl
add
cmp
fsubrp
es
sub
inc
dec
push
test
xor
cmp
test
mov
loope
imul
or
xchg
sub
arpl
xlat
or
add
cmp
dec
push
leave
inc
push
jmp
mov
mov
mov
shlb
xor
gs
cmp
clc
xor
or
mov
rclb
fldt
lahf
inc
cmc
dec
loopne
jl
adc
cmp
xor
cmc
in
jmp
loop
outsl
popa
movsl
sub
iret
icebp
movsl
mov
dec
test
inc
adc
loopne
push
cli
cmpsb
jno
and
or
fdivl
pop
arpl
lds
stos
mov
jne
test
out
in
add
lret
add
jl
out
sub
int3
ja
or
out
idivl
dec
add
xor
repz
jp
and
sub
and
sub
movl
adc
xor
imul
push
clc
fwait
mov
les
std
jbe
xchg
js
aaa
mov
fistpl
stos
mov
push
push
test
cmpsl
mov
push
xor
test
mov
push
cmp
jae
lea
jnp
aaa
aam
enter
stos
sbbb
aas
rclb
lods
mov
dec
stos
cmpsb
fsubrl
data16
sbb
and
mov
imul
mov
rcll
push
cmp
cwtl
mov
jno
mov
mov
fsub
int
fiadds
mov
aas
or
pop
outsl
or
cmp
jne
dec
test
aas
fiaddl
int
and
mov
or
inc
jb
and
push
dec
pop
pushf
cmpsl
and
pop
sti
adc
outsb
int3
add
fidivrl
or
pusha
dec
enter
loopne
clc
insl
xchg
or
addr16
push
and
ljmp
adc
sbb
jo
sbb
sub
rcrb
xchg
fcoms
movsl
pusha
sub
hlt
mov
test
fbld
lret
sahf
lods
and
xor
test
orl
andl
mov
scas
loope
push
addl
or
lcall
jmp
adc
adc
jg
jnp
or
shlb
outsb
or
or
jne
cmpsb
xchg
mov
test
mov
mov
mov
fwait
andb
ljmp
data16
jmp
mov
stc
pop
xchg
shrl
jo
inc
or
int3
cltd
adc
loope
insl
js
rcll
cmp
lahf
ds
and
decl
in
bound
icebp
leave
test
sbb
jmp
or
lcall
xchg
jb
sub
xchg
leave
out
out
pushf
and
fscale
or
in
mov
dec
mov
loop
aas
push
jns
sbb
push
lods
xor
testl
mulb
pushf
dec
je
popa
mov
or
in
pop
push
je
imul
mov
inc
mov
lods
mov
mov
dec
ss
ret
dec
or
cmc
cmp
sbb
cmp
sahf
insl
sub
call
jl
mov
clc
data16
cmp
int3
jns
xchg
leave
cmp
iret
mov
enter
dec
adc
push
jo
adc
xlat
fcoml
jg
push
dec
stos
popf
shlb
fcompl
or
out
lahf
cmp
mov
push
inc
xor
mov
inc
fwait
xor
cltd
mov
and
xchg
pop
subb
xor
adc
and
mov
mov
mov
pop
xor
xchg
leave
sbb
cmpsl
sti
fiadds
xchg
dec
fs
loop
lcall
stos
push
lcall
in
sbb
cwtl
xchg
adcl
lret
flds
jmp
and
push
sub
lahf
jg
sub
sbb
or
and
idivb
xorb
xchg
out
and
mov
xor
mov
fdiv
jno
cs
mov
fisubrl
cmp
mov
mov
das
mov
and
gs
pusha
mov
stos
insb
mov
mov
jo
jno
sbb
adc
loope
movsl
push
insb
insl
fmuls
in
sbb
and
pop
sti
add
scas
lret
sub
or
or
shrl
jge
cld
loop
pop
mov
fildl
dec
mov
xchg
cmp
adc
stc
inc
scas
dec
pop
xchg
sti
jg
negb
pop
test
push
daa
iret
push
mov
xor
mov
insl
xor
scas
cs
aad
packsswb
mov
mov
inc
js
jp
sbb
push
cltd
push
mov
leave
push
shr
jb
inc
popa
ficomps
fdiv
popf
fdivrs
add
int3
jns
mov
inc
mov
cmp
sub
shll
cs
push
insb
div
and
test
mov
ss
popf
push
outsw
loope
xchg
into
push
pop
dec
ljmp
ret
mov
adc
leave
pop
push
sub
fwait
pop
test
add
push
std
nop
mov
lcall
or
jno
inc
pop
lock
lret
mov
pop
jb
rep
sub
aaa
push
add
divl
lds
ja
xor
test
xor
cmp
push
cmp
cli
add
ret
outsb
mov
pop
sub
loope
push
sub
lock
into
push
icebp
loop
push
stos
or
insl
aad
inc
xor
mov
and
ret
ficomps
mov
aaa
mov
sahf
shrb
das
out
scas
ret
pop
sub
push
mov
sub
cmp
xor
jecxz
jg
aad
cmp
inc
cmp
xchg
idivl
sub
repnz
aad
sub
lret
gs
int
addr16
insb
xchg
ret
call
stos
mov
js
jle
adc
jp
fnstenv
cmp
test
out
mov
xchg
push
push
dec
or
ds
mov
lds
mov
outsb
jge
xor
int3
push
mov
push
imul
outsb
sahf
adc
mov
or
mov
imul
and
dec
push
adcb
inc
test
cmp
insb
xlat
or
adc
aas
out
ret
ja
jbe
pop
mov
sub
mov
pusha
and
loopne
push
xchg
lds
daa
dec
popf
adc
xchg
push
iret
cmp
xor
sahf
scas
sub
int3
inc
mov
dec
dec
jbe
jg
adc
sbb
sub
add
bound
sarb
out
jb
stos
bound
cltd
stos
inc
ret
jbe
nop
repnz
fsubrl
cmpsl
fidivrl
inc
jno
sbb
lds
test
dec
pop
pop
pop
lea
mov
xor
push
lds
adc
adc
add
les
fs
sub
jecxz
repz
jnp
repnz
mov
inc
loopne
adc
clc
pop
xor
mov
mov
sbb
cmp
stc
lods
sbb
xchg
int
mov
pushf
sbb
cmp
cmp
repnz
jns
lods
loop
addr16
lods
xchg
jmp
adcl
shrb
mov
ret
shlb
lock
clc
cmc
mov
jae
cmp
arpl
jo
adc
inc
in
push
repz
fimull
xor
jb
pushf
or
aad
sbb
and
leave
dec
das
mov
push
push
repz
jae
mov
imul
hlt
negb
jmp
ret
test
pop
inc
pop
das
add
mov
jns
add
outsb
cmc
mov
mov
test
inc
sbb
mov
adc
cmp
popf
popf
psrad
iret
cmp
cwtl
mov
out
jne
out
daa
add
or
icebp
push
xchg
mov
xor
ljmp
std
cmp
test
add
and
cli
mov
pop
jle
sbb
jecxz
jge
jns
out
outsl
repnz
sub
lret
dec
or
push
nop
dec
lret
movsb
sub
insl
cltd
scas
xchg
pop
test
mov
mov
pop
xchg
jo
in
pop
xor
xor
shll
push
iret
xlat
fiaddl
enter
and
call
sbb
jecxz
xchg
pop
inc
out
sub
mov
cmc
adc
repz
andl
sbb
and
cltd
sub
push
sub
outsl
arpl
dec
cmp
add
inc
out
sahf
aad
pop
orb
jne
xorl
sub
out
pop
or
mov
and
das
xchg
cmpsb
roll
or
cmc
mov
in
sub
adc
cmc
jb
iret
mov
or
xor
mov
jp
or
in
jae
lds
stos
xchg
mov
adc
iret
or
std
inc
pop
adc
dec
ljmp
jbe
ss
push
jl
sub
clc
jp
lods
lock
pop
movsl
push
fwait
mov
and
jo
lods
imul
sub
add
cltd
pop
gs
les
jb
aam
adc
xchg
and
xlat
cmp
and
sbb
leave
add
sbb
cmp
add
push
testl
pop
test
sub
insl
pop
in
nop
cmpsl
in
sub
push
cmp
jge
stos
bnd
pop
cmpsl
dec
jg
hlt
dec
sti
jno
dec
lods
sbb
out
xchg
dec
fwait
aad
pop
and
dec
outsl
sub
cmp
repnz
sbb
sub
scas
mov
mov
sub
mov
pushf
neg
push
pusha
leave
fsubl
pop
aam
or
dec
and
das
in
inc
pushf
loop
test
xor
into
and
stos
lods
add
mov
data16
into
push
cmpsb
rolb
sbb
sar
inc
clc
sbb
inc
push
mov
pop
or
xor
sarb
in
push
mov
pop
out
mov
popa
push
sbb
mov
clc
ficompl
mov
adc
xor
fs
cmp
es
fwait
pusha
aam
loope
jg
jmp
pop
scas
leave
xchg
rcrl
mov
inc
cld
test
dec
dec
jne
loope
int3
fimuls
add
hlt
inc
lcall
ret
add
ss
and
fstpt
sub
or
and
fcmovb
dec
sub
xorl
push
or
and
inc
mov
adc
cmc
fstpl
std
loope
xchg
jbe
fnstenvs
dec
pop
push
gs
clc
movsb
sub
xchg
popa
jbe
jno
inc
negb
nop
mov
adc
fwait
or
in
pop
lods
pop
aad
sbb
pop
sti
jecxz
and
adc
inc
mov
xchg
and
popa
sbb
sub
xlat
cmp
into
cmp
push
mov
jp
push
pop
loopne
insb
rol
pop
test
pop
and
sbb
dec
xchg
adc
and
pop
mov
repnz
cli
sbb
std
push
repz
push
sbb
cmp
data16
pop
cltd
out
out
int3
lds
cmp
scas
xchg
xchg
pop
pop
lea
push
push
adc
out
in
adc
ljmp
adc
jo
mov
xchg
xrelease
lahf
and
data16
sahf
pop
or
jmp
bswap
daa
jns
mov
jmp
mov
imul
dec
mov
sub
jae
out
cltd
inc
jg
or
adc
out
icebp
add
push
xor
mov
sub
arpl
xchg
inc
inc
cmp
out
pusha
gs
mov
es
stos
sub
xor
adc
icebp
jo
mov
and
out
in
mov
sbb
dec
xlat
ljmp
and
stos
inc
fistps
clc
or
insl
sbb
testb
ret
lods
xchg
andl
lds
aad
enter
rclb
and
das
add
into
mov
ss
outsl
sub
jns
xchg
mov
mov
sbb
ljmp
ret
inc
xor
sub
rcr
aam
mov
mov
xlat
add
imul
sbb
cwtl
jno
sbb
pop
jo
les
mov
sub
xchg
or
out
test
pop
mov
rolb
in
movsb
daa
xor
aas
sbb
pusha
mov
mov
clc
push
int3
sahf
sbb
int
arpl
sub
mov
or
in
jne
adc
mov
jns
pop
pusha
and
sbb
subb
in
lahf
test
xor
and
js
outsl
jle
xchg
sar
xlat
mov
hlt
and
xor
xchg
inc
ficoms
sub
mov
fisubl
repz
add
lock
pop
inc
sbb
clc
dec
dec
and
jae
inc
xchg
sbb
adc
inc
dec
hlt
mov
cmpl
cmp
in
jl
fnstcw
out
add
xchg
das
sbb
dec
cmpsb
mov
enter
std
sti
insb
inc
pop
cmp
xchg
insl
imul
sbb
pop
mov
mov
jnp
and
inc
or
popa
stc
in
inc
in
lods
cli
add
fdivs
mov
add
les
jns
stos
pop
or
imul
jp
push
cmp
adc
sub
emms
scas
hlt
push
bound
sbb
push
ss
and
gs
sbb
lds
or
and
cmp
sub
fistl
in
jge
std
rol
mov
es
popa
mov
jp
dec
gs
push
fucomi
stos
push
jecxz
cs
pop
mov
jo
sarw
call
loope
mov
call
enter
push
mov
or
je
rcrl
and
push
cmpl
sbb
mov
in
jno
fldenv
xchg
shr
inc
sub
pushf
jecxz
lds
aad
es
pop
mov
fimull
icebp
xchg
jbe
push
out
cmp
stc
fsubrl
fstpt
dec
add
mov
aaa
dec
push
xor
add
xor
jb
inc
sbb
mov
cmpsl
nop
daa
imul
or
pop
movsb
and
js
sbb
sub
clc
pop
inc
sub
lea
jae
int3
int
mov
outsl
test
lret
xor
fxch
sbb
outsb
test
scas
dec
leave
xchg
sub
cltd
addl
inc
repnz
inc
xor
jbe
or
addps
scas
and
int3
lcall
mov
in
cmp
ds
fnclex
shl
xor
aad
sbb
clc
dec
inc
popa
scas
and
bound
jecxz
xchg
sub
insb
insl
mov
in
xor
cwtl
je
mov
push
sub
sbb
xor
orb
scas
ds
pop
mov
popf
in
xlat
aas
les
sti
xor
ficomps
outsl
jns
daa
incb
stos
daa
and
shll
jno
cmpsb
fdivl
push
addr16
adc
mulb
cwtl
test
adc
mov
jl
fstpl
xor
sbb
and
mov
mov
jmp
ss
pusha
imul
cltd
and
fstpl
fidivrs
dec
int3
arpl
adc
out
loope
lcall
push
loopne
int3
cmp
or
sub
or
je
dec
aas
sarl
rol
push
xchg
fsub
and
sbb
pop
adc
orb
adc
and
cwtl
stos
pop
cmp
ss
cmp
pop
mov
adc
in
das
add
sub
out
mov
inc
int
pop
mov
mov
aam
in
hlt
adc
mov
lret
jnp
ja
mov
pop
push
fistpl
jns
loope
sub
shll
adc
and
dec
add
jge
push
push
sub
nop
pop
push
or
iret
push
data16
lea
jecxz
stos
adc
inc
verw
sub
adc
inc
addr16
std
pop
push
leave
fsts
push
scas
imul
data16
decb
ss
xor
fwait
loope
mov
xchg
or
push
fs
jo
popf
xchg
subb
lock
repnz
mov
movsl
push
cs
xchg
mov
sub
add
adc
ds
or
mov
xchg
or
out
stc
cmp
js
mov
sub
cmp
mov
pop
jle
dec
bound
xor
mov
test
fidivrs
flds
out
nop
jmp
mov
sahf
adc
xchg
adc
adc
cli
das
cmp
outsl
rolb
int
ret
xchg
cmp
sub
call
mov
hlt
and
repz
push
test
insb
mov
shr
push
cmp
rolb
and
data16
or
loope
lahf
das
daa
fnstenv
in
gs
subb
iret
xchg
lods
scas
cmp
push
fidivrl
gs
mov
jnp
inc
add
in
sbb
pop
adc
jbe
jo
popa
mov
sub
loope
and
out
imul
lock
sahf
js
sbbb
mov
mov
or
jb
rorl
pop
push
rcr
pop
mov
cmpsb
inc
push
or
rclb
icebp
pop
shrl
pop
ss
inc
cwtl
bound
sbb
jle
xor
incl
andl
insl
inc
lcall
jns
xor
rclb
mov
loop
or
xchg
mov
les
fucomp
fadd
fstl
mov
dec
xchg
rcr
lock
and
loope
cmp
dec
das
sbb
cmp
repnz
xorl
mov
lret
fstpt
dec
fstps
pop
out
pop
insl
fs
pop
pusha
dec
daa
lock
add
dec
in
loop
mov
and
xchg
mov
ret
hlt
lret
popa
inc
add
push
hlt
push
jb
sahf
movsl
repz
jmp
sub
adc
repz
cmp
and
jo
add
xchg
mov
ljmp
jmp
jp
push
cwtl
mov
jbe
psubw
sub
jne
lcall
mov
lret
mov
push
lahf
and
popa
in
addb
andl
pop
or
xor
mov
addr16
sbb
or
sub
push
push
cmp
or
jp
inc
sub
nop
stos
push
cld
sbb
clc
sub
pop
stos
cmp
add
mov
rolb
mov
xor
cmp
or
enter
adc
and
nop
fsubrp
jp
adc
mov
orb
insb
add
fdivl
arpl
aad
lds
mov
cli
jbe
inc
jge
xchg
add
je
add
insb
xor
inc
pusha
outsb
lods
push
cmp
pop
mov
test
xchg
inc
or
js
stos
fcmovu
sahf
mov
es
cmpsb
int3
bound
inc
pop
pop
or
ds
or
or
dec
clc
pop
fldt
aas
icebp
xchg
or
adc
std
push
inc
sbb
adc
sub
into
insb
rcrb
insl
cli
in
dec
lret
mov
or
fs
imul
lcall
mov
or
xlat
sbb
and
js
sbb
pop
jmp
xor
in
shll
cli
jnp
inc
and
sbb
jmp
lods
data16
aas
in
push
pop
xchg
push
push
orl
stc
cmp
or
sarl
imul
sub
xor
cmpsb
cmp
mov
in
pop
hlt
inc
mov
jo
and
jnp
xlat
mov
push
gs
into
dec
mov
adc
mov
mov
addb
add
push
push
lds
nop
imul
mov
lea
movsl
movsb
pusha
sub
mov
call
loope
mov
inc
fildl
jo
lret
out
xchg
sahf
jne
jns
adc
enter
add
pop
xchg
rcrl
in
add
xor
mov
or
addr16
inc
aad
das
and
xchg
dec
push
mov
out
popa
cmp
and
push
daa
jl
or
popf
mov
mov
and
pop
adc
js
xchg
sbb
pop
mov
arpl
mov
mov
inc
bnd
lahf
jecxz
dec
ss
inc
mov
xchg
aad
aam
cmp
aas
add
cmpsb
insb
xchg
jmp
bound
jmp
mov
loop
add
mov
sub
lds
xor
mov
mov
or
inc
lret
cmp
mov
outsb
xor
ret
push
cmp
jl
pusha
addr16
movl
dec
daa
into
sub
pop
and
cltd
imulb
mov
push
cld
arpl
aam
mov
jne
test
jns
inc
call
xor
add
jns
out
in
xorl
jmp
xor
xchg
fidivs
mov
adc
cld
test
outsb
push
pop
rclb
daa
aaa
xor
flds
sub
aam
add
push
pop
jo
sub
test
bnd
data16
dec
fildll
imul
pushf
sahf
out
xchg
les
cmp
and
daa
add
xor
mov
adc
imul
fildll
loopne
stos
cmp
dec
mov
ds
popf
ljmp
mov
flds
das
fdivs
bound
and
daa
adc
xor
xchg
outsl
ret
pop
jbe
adc
jns
mov
dec
movsl
inc
jnp
lods
aad
push
stos
pusha
or
addl
sbbl
outsb
mov
mov
push
cli
test
repz
mov
ja
mov
dec
lcall
or
hlt
pop
loope
mov
cs
je
pusha
jmp
add
mov
call
sub
shrl
inc
cmp
arpl
inc
sub
add
rorl
mov
xrelease
mov
xorb
sub
xchg
cmpsl
cmp
dec
stos
rolb
mov
sti
xchg
pop
pop
insl
test
xchg
pop
das
pop
mov
outsl
gs
stos
daa
jae
shrb
push
sub
ret
fs
stos
aam
in
adc
in
ja
push
sub
test
inc
pushf
out
add
or
push
jl
adc
lret
xlat
and
popf
pop
push
outsl
fildl
stos
test
mov
cs
ret
sbb
call
inc
add
jp
adc
inc
xor
mov
bound
sub
ja
out
cmp
les
pop
mov
insl
dec
inc
jp
dec
or
cmp
and
mov
add
jecxz
mov
clc
sub
jns
jns
dec
or
inc
ret
add
push
fimuls
jno,pt
dec
mov
xchg
cmp
sti
int3
mov
push
add
lret
adc
out
ret
adc
cmpsb
fadd
je
sbb
cmc
mov
xor
xorl
fs
rcll
jge
fwait
xor
imul
push
imul
mov
sub
mov
cmp
push
hlt
adc
cmp
iret
movsl
inc
fnstcw
and
cmc
or
cltd
clc
popf
adc
pop
mov
sbb
addr16
cmc
lods
aaa
push
adc
repnz
cmp
push
js,pn
sti
jns
fnstsw
lcall
out
sbb
insl
mov
lahf
ficompl
dec
idivb
xor
fmull
adc
into
cmp
daa
in
xor
sbbb
aad
fnsave
cmp
stos
mov
pop
lods
or
movsl
ds
cltd
or
ret
mov
in
add
push
imul
sub
aaa
dec
mov
add
loopne
adc
sub
and
out
pusha
popa
add
hlt
sub
ljmp
push
hlt
and
xchg
aam
xorl
stos
mov
das
out
inc
push
and
pop
in
cmpsl
cmc
cmp
xlat
push
push
and
push
mov
pusha
and
shr
add
cld
cmc
mov
jle
push
dec
mov
mov
xchg
xchg
xor
sub
mov
pop
dec
or
sti
aas
nop
and
sub
out
leave
xor
pop
mov
arpl
cwtl
fimull
ss
jg
mov
dec
scas
test
pop
cmpsb
ss
hlt
fists
jg
jo
xchg
jnp
sahf
test
sub
mov
xchg
int
scas
sub
nop
dec
sub
orl
fbld
pop
dec
dec
push
or
or
shrl
mov
ja
clc
nop
sub
adc
sub
jnp
xchg
cmp
mov
mov
fisubrs
out
pop
loop
int3
xchg
adc
jecxz
fists
mov
std
popf
jmp
mov
xchg
inc
xor
pop
xor
mov
mov
mov
jb
adc
sbb
ljmp
fcoms
jecxz
scas
add
adc
mov
lcall
jp
xchg
or
xor
pop
js
cmp
test
cld
int3
jge
sarl
aam
ret
push
rolb
mov
test
loopne
pop
cmpsl
sti
or
in
ss
lea
iret
push
addb
test
cmp
xlat
pop
sub
leave
inc
sbb
jne
xchg
fnop
xchg
sti
xor
mov
pop
daa
mov
cwtl
shrl
popf
hlt
inc
bound
loop
push
mov
xchg
mov
fidivs
cmp
dec
mov
es
sub
rolb
lea
pop
mov
nop
out
ficompl
inc
cmp
push
push
aad
mov
xchg
sub
adc
popf
mov
xor
addr16
mov
iret
jecxz
adcl
jecxz
test
int3
jb
dec
jns
popa
mov
sbb
or
lret
iret
xor
pop
or
mov
xchg
inc
mov
popf
dec
idivb
repnz
push
push
xchg
inc
faddl
fwait
xchg
mov
out
bound
jp
or
std
cmpsl
xchg
sub
mov
fnstsw
incb
jecxz
out
shr
jle
mov
imul
aaa
push
mov
sbb
stos
jb
adc
dec
mov
int
popa
stc
rol
call
mov
mov
cltd
mov
loope
xchg
mov
popf
scas
jnp
mov
dec
stc
ss
shll
xchg
cmpsb
data16
jecxz
lcall
lods
and
dec
add
das
pop
inc
roll
imul
inc
xor
pop
lods
mov
out
push
mov
jne
xchg
ds
jmp
push
fstpl
aam
out
sub
les
mov
lahf
cld
push
pop
push
dec
pop
mov
xor
shr
xor
and
inc
mov
vaddss
inc
gs
mov
sub
cmp
ja
dec
jmp
out
xor
pop
out
xchg
into
shrb
decl
mov
mov
jl
into
xor
fwait
mov
adc
xor
leave
frstor
es
aaa
cmp
jae
sub
clc
jmp
rclb
mov
add
out
test
and
outsl
inc
jae
test
ds
add
adc
cmp
push
int
mov
sub
test
pop
push
out
je
aam
cmp
or
inc
icebp
arpl
testb
ja
pop
lods
cmp
mov
mov
lcall
mov
pop
in
stos
cltd
mov
rcll
mov
pushf
stos
jp
out
loopne
jmp
cmp
inc
loope
sbb
mov
icebp
pop
js
addr16
loope
or
scas
inc
insl
iret
std
fs
push
fistpl
cmp
aam
inc
aam
repnz
and
sbb
jbe
clc
fs
test
outsl
inc
dec
inc
out
testl
or
cmpsl
test
out
jmp
xchg
push
cltd
gs
es
les
jno
lahf
mov
lret
jo
sbb
dec
cmp
dec
dec
or
stc
lret
adc
push
pop
and
cmpsl
jnp
pop
mov
inc
xchg
mov
mov
adc
repnz
inc
and
int
xor
jnp
outsb
ret
insl
fidivl
cli
or
sub
fmulp
sahf
sbb
mov
divl
cmpsl
lar
je
dec
xchg
jb
xlat
out
pop
dec
aam
out
mov
lahf
incb
inc
lret
outsl
cwtl
push
in
inc
pop
pop
stos
sbb
mov
lea
xchg
lret
ljmp
pop
fnstsw
add
les
js
das
dec
add
enter
lcall
lods
fnstsw
jmp
es
daa
xchg
sub
dec
movsl
mov
imul
or
cmp
jl
loopne
outsl
stos
cld
loopne
mov
cld
inc
push
leave
xor
int
das
and
inc
les
xchg
xchg
jmp
or
imul
inc
jge
push
je
mov
iret
push
xchg
lods
insl
popf
sahf
dec
inc
mov
and
sub
out
inc
nop
pop
in
cli
fcom
int3
lret
out
lcall
jno
xchg
test
outsl
jno
in
inc
xor
xchg
or
outsl
stc
jecxz
iret
popa
dec
fmul
and
sbb
loop
push
pop
xchg
mov
test
add
icebp
and
sbb
cwtl
xor
push
mov
push
jmp
and
int
sbb
or
xchg
int3
jle
mov
inc
adc
add
and
cmc
aaa
sbb
pop
add
pop
movsb
jnp
cmp
mov
lret
and
aad
mov
jg
lahf
lods
fwait
push
cmp
dec
rolb
xchg
stos
popa
mov
fs
and
jno
dec
aam
icebp
xor
fldl
dec
mov
or
or
adc
and
dec
inc
in
loope
roll
gs
lods
cmpsb
mov
mov
push
cltd
pop
pop
cld
xchg
jle
xchg
push
out
inc
inc
mov
push
push
addl
movsb
pop
imul
pop
xor
pop
outsl
fiadds
add
adc
dec
fs
or
inc
hlt
mov
mov
push
mov
cwtl
sub
je
jnp
mov
ss
sub
inc
arpl
shlb
or
aad
cwtl
sahf
push
shl
xor
je
cmp
mov
dec
sub
imul
pop
sub
push
test
lods
dec
scas
jl
ret
cltd
ret
mov
cmpsl
fwait
and
mov
dec
or
xchg
sbb
pusha
inc
inc
shlb
movsb
shl
fs
aam
pop
xor
outsb
hlt
add
xor
xor
stos
or
addr16
add
call
inc
addr16
ja
sub
int
into
out
loope
dec
mov
push
jae
sub
xchg
imul
dec
cs
inc
les
jg
loop
adc
mov
or
jp
jle,pt
dec
pusha
ret
inc
outsb
int
decb
cli
sti
mov
inc
pmulhuw
aas
xor
dec
aas
xchg
in
sub
mov
popf
insb
mov
incl
xor
ss
pop
or
bound
mov
cmp
xchg
testl
lods
pop
and
out
sub
out
aaa
inc
add
repz
shrb
jo
sbb
dec
aaa
and
orb
enter
or
xor
cwtl
popf
subb
cmp
mov
pop
ljmp
lea
dec
mov
test
loop
mov
iret
cmp
sub
xchg
ljmp
cs
clc
inc
pop
das
loopne
push
sbb
xchg
sti
sub
pop
pushf
fidivs
sub
xor
js
loopne
or
push
push
insl
outsb
out
nop
in
and
cmpb
sub
test
mov
mov
shll
pop
int3
xchg
add
iret
xchg
lods
dec
mov
xchg
outsb
or
cmp
and
sbb
pop
xor
pop
mov
xchg
stos
sbb
aaa
adc
pop
enter
mov
mov
and
cmc
mov
xor
cmpsb
pop
or
add
inc
add
cmpsb
cmp
aad
or
mov
dec
and
adc
test
ja
imul
out
push
jg
push
push
sub
test
aad
and
les
dec
push
or
pop
jl
adc
lock
fnsave
cmp
int
mov
dec
push
add
std
push
mull
nop
mov
ja
sub
xlat
icebp
dec
inc
xchg
sub
loope
xor
nop
test
repz
cmp
hlt
jnp
mov
scas
aas
hlt
mov
jecxz
pop
les
sub
or
hlt
hlt
loopne
das
jbe
mov
je,pn
push
aaa
cmp
lea
mov
mov
cltd
cmp
repnz
ffreep
into
ss
scas
insl
cs
jnp
and
or
jp
dec
insb
and
cmp
mov
adc
int
subl
cld
xchg
lds
jge
lret
pop
push
pop
shl
bound
push
out
stos
cmp
xchg
xor
out
pop
jp
pop
cltd
cmpsl
push
mov
push
or
sub
push
clc
repnz
sub
push
xchg
adc
repnz
mov
inc
xchg
xchg
add
cmpsb
mov
leave
aad
ljmp
pop
lahf
and
push
daa
popa
clc
cmp
in
xchg
or
popf
add
adc
adc
jp
sub
cs
sti
push
adc
jp
xchg
xor
inc
mov
pop
in
jmp
fdivrl
pop
cmp
push
jno
jl
jp
dec
mov
scas
xchg
leave
add
mov
sti
test
xor
xchg
andl
int3
stos
js
jno
mov
insb
cld
clc
sub
xchg
xchg
ret
je
test
or
mov
pop
mov
mov
and
daa
clc
mov
lods
push
sti
pop
pop
xor
mov
cld
xor
daa
fiadds
xchg
add
cmp
daa
push
jp
mov
jne
lock
lcall
mov
pop
mov
mov
cmp
fldt
test
mov
add
jo
or
leave
cmp
hlt
add
fstps
mov
mov
fwait
sub
cs
mov
sbb
inc
adc
sub
fsub
inc
movsl
scas
pusha
pop
or
jg
out
push
iret
lea
adc
and
jecxz
push
rsm
les
clc
cmp
fdivs
xor
push
push
pop
shl
add
or
stc
jnp
rol
cs
mov
push
cmpsl
ss
mov
paddd
cmp
xor
mov
in
stc
cmp
ret
into
xor
data16
push
pop
or
mov
xchg
imul
icebp
inc
jnp
sbb
movl
aad
sarb
dec
and
in
xorl
sti
sbb
cmp
enter
mov
mov
sahf
cmp
int
xchg
cli
jo
xchg
scas
mov
jmp
lock
test
addr16
sbb
clc
xchg
add
clc
and
pushf
mov
lods
js
mov
arpl
push
addb
lods
mov
push
mov
in
stos
out
imul
repz
adc
int
adc
mov
xchg
push
cmp
mov
add
or
jge
adc
mov
mov
loope
cli
xchg
or
cmp
in
pop
mov
mov
pop
push
or
mov
xor
arpl
mov
mov
inc
stos
pop
and
cs
ds
jecxz
int
mov
sahf
or
xorb
xchg
mov
cmpsb
add
lods
stc
lods
pop
js
movsl
mov
xchg
add
inc
push
mov
sbb
roll
xor
push
clc
or
mov
inc
cmp
push
outsb
jp
inc
roll
notb
sbb
adc
ja
jl
lahf
push
je
popa
and
xor
push
add
dec
popf
cwtl
out
xchg
mov
inc
inc
sahf
es
cli
lods
sub
nop
pop
aad
into
insl
lahf
lds
mov
jecxz
push
cmp
test
sub
mov
mov
lods
jp
lret
clc
sub
mov
stc
push
jmp
ss
shl
scas
fwait
imul
jns
icebp
enter
jle
std
int
jno
gs
mov
push
dec
mov
mov
inc
jmp
pop
inc
out
cmp
call
mov
icebp
cmc
cwtl
enter
push
mov
sbbb
bound
pop
mov
mov
push
sbb
hlt
dec
and
jmp
lret
mov
sbb
push
fmull
xchg
pop
cmp
cmpsb
or
aaa
sbb
js
pop
adc
out
sbb
adc
xor
sub
cltd
xchg
pop
jp
inc
inc
mov
dec
insb
push
test
orl
movsb
mov
sbbb
push
notl
leave
lock
pop
cmpsl
sti
cmpb
sub
sbb
psubusb
lods
daa
shrl
or
stos
pop
int
mov
xchg
xor
fadds
xor
xor
test
mov
mov
sub
scas
pop
aaa
mov
fnstcw
inc
mov
mov
xchg
lods
cmp
inc
aad
outsb
sbb
or
mov
or
mov
daa
out
mov
imul
ljmp
cmp
jp
jae
push
adc
mov
add
aad
div
dec
add
clc
pop
ror
in
popa
ds
mov
outsb
int3
or
je
pop
lods
mov
ljmp
jne
sub
out
popa
aaa
mov
out
xlat
xchg
subb
xchg
sbb
jl
loopne
aam
jg
mov
unpcklps
jnp
pop
mov
add
cmp
aam
repz
mov
sbb
jbe
lret
test
lods
cmp
cli
lret
insb
cmp
and
and
pop
call
sbb
stos
movl
jae
xchg
sbb
dec
jp
fisttpl
dec
and
mov
mov
xlat
ljmp
pop
push
daa
xchg
pop
cmp
loopne
sbb
jmp
mov
xorb
inc
mov
xchg
mov
fisubl
xchg
pop
and
or
jmp
jg
js
sbb
mov
mov
mov
pop
lods
and
mov
add
jnp
push
vmread
and
lret
xlat
popa
sar
es
adc
hlt
inc
lcall
enter
pop
xchg
xor
cmp
mov
sub
or
out
cmp
daa
pop
sbb
or
call
mov
xor
sbb
jae
cmpsl
xchg
mov
xchg
js
xchg
scas
inc
pop
jecxz
aaa
pop
sub
mov
mov
cli
clc
roll
cmp
inc
jb
jle
lock
in
outsb
out
inc
lcall
cmpsl
pop
sub
xchg
and
sahf
mov
addr16
clc
scas
mov
mov
bound
jb
popf
or
xchg
and
mov
inc
lahf
scas
mov
pop
cmp
jno
mov
jle
push
push
jnp
mov
dec
lds
and
add
lock
scas
test
dec
aaa
push
sarb
pop
stos
aad
cltd
int
dec
addl
rcrl
dec
adc
mov
mov
sbb
cwtl
in
mov
xchg
movsb
ret
cltd
sub
lcall
add
dec
testb
push
ja
sub
push
adc
fldt
push
or
shll
cli
xor
icebp
pop
movsb
in
xchg
mov
jp
pop
pmullw
in
xor
test
xlat
loope
popf
aam
jne
mov
aam
je
xchg
mov
mov
out
dec
mov
ja
movsl
ss
sbb
lods
fdivrs
xor
mov
call
les
in
iret
or
mov
aaa
mov
xor
sbb
scas
mov
cmp
mov
test
pop
shlb
icebp
push
jns
cmp
rolb
imul
pop
movsl
ljmp
fcmovbe
push
gs
jo
sahf
cmp
dec
pop
xlat
dec
dec
mov
adc
les
or
aaa
test
vunpckhpd
mov
jg
mov
in
fildl
inc
lea
cs
incb
mov
jbe
add
je
add
inc
jmp
lock
outsl
sahf
mov
adc
arpl
mov
mov
clc
leave
mov
mov
test
push
xchg
mov
inc
sub
fwait
dec
xor
push
aam
xor
pop
es
pop
push
sbbl
mov
cmpsb
mov
out
push
test
pop
push
jo
lds
clc
andl
xlat
jecxz
aam
dec
mov
out
cmpsl
lret
mov
add
or
mov
pop
fiadds
mov
bswap
fmuls
sub
in
test
imul
pop
xchg
dec
aam
mov
push
aaa
cmpsl
orb
push
push
mov
stos
cwtl
sub
push
in
jae
sbbl
loopne
sbb
leave
sti
xchg
xchg
mov
cmp
repnz
dec
xchg
add
inc
mov
rol
arpl
ljmp
sub
inc
xor
orl
pop
and
push
mov
and
stc
arpl
loop
loope
push
sbb
jne
stos
arpl
iret
mov
js
sub
push
sti
cwtl
sub
pop
es
ljmp
in
dec
cmp
scas
dec
gs
dec
dec
pushl
cmpsl
call
ja
imul
sub
cmp
out
or
sti
bound
push
lock
bound
sub
push
jns
shlb
test
ret
add
sbb
clc
mov
adc
data16
pop
shlb
sub
inc
inc
and
movsb
xor
stc
mov
nop
cmp
jp
mov
cmpsl
jae,pt
or
call
pshufw
lcall
outsl
mov
push
lahf
call
fsubrl
jecxz
test
dec
out
addl
jb
fsub
pop
mov
mov
mov
add
and
lock
push
push
loope
out
aas
scas
mov
fistpll
rclb
sbb
cwtl
rcrl
mov
les
sbb
pop
mov
xor
xchg
cltd
xor
xor
cmp
in
lahf
cmpb
movsb
loop
ret
push
push
lock
cmpsb
repz
into
sbb
push
cmp
xchg
inc
push
ja
lods
dec
add
inc
gs
icebp
pop
js
mov
sbb
outsb
push
mov
pop
pop
jge
sbb
add
inc
xor
shlb
vpshlb
jmp
mov
fldenv
adc
nop
ficoml
xchg
shl
mov
or
aas
mov
mov
into
popf
rcrl
inc
fdivrp
adcb
imul
pop
cmp
lea
or
popl
sub
push
fs
inc
inc
nop
pop
pop
and
push
sahf
mov
pop
jb
bound
ds
add
lcall
sbb
jg
into
or
gs
mov
hlt
jp
jo
lea
aam
push
jbe
into
sarl
push
cmp
test
pop
mov
std
jns
mov
outsb
ret
jns
jge
jl
jecxz
int
xchg
in
inc
jo
cmp
loope
sahf
push
sub
ljmp
inc
mov
loopne
fldenv
inc
push
mov
and
popa
sahf
xlat
jnp
mov
xor
cmp
in
icebp
jae
ret
xchg
mov
int3
stos
jg
push
iret
xchg
inc
repz
add
mov
fdiv
xchg
mov
jns
test
scas
imul
frstor
lds
in
sub
fcmovne
or
sbb
xchg
dec
addr16
bound
mov
sbb
lods
mov
sub
mov
and
push
xor
xchg
sbb
cmc
add
in
xchg
dec
cld
jecxz
mov
ret
xchg
ret
mov
xchg
outsl
gs
inc
pop
negl
hlt
inc
or
shll
bound
dec
jl
data16
loop
xor
mov
mov
aam
arpl
les
in
jne,pt
xchg
bound
shlb
mov
inc
inc
xchg
aaa
mov
mov
sub
and
in
repz
jecxz
pop
push
dec
mov
insb
loopne
mov
sub
fmuls
mov
enter
pop
push
jecxz
popa
stos
sub
mov
sub
inc
add
xchg
loope
fcomps
xor
sub
rcll
pop
mov
pushf
pop
shl
clc
fadds
into
lret
push
arpl
dec
sub
mov
and
mov
scas
fimuls
inc
xchg
xchg
and
ds
arpl
bnd
jb
mov
fisubrs
dec
mov
ja
adc
pop
push
mov
jge
out
cmp
xor
sub
push
add
cmp
xlat
mov
sbb
mov
pop
cs
shrb
add
fists
sbb
lcall
movsl
movsl
test
jbe
jnp
out
js
int3
jno
mov
imul
dec
ret
into
scas
imul
mov
scas
in
idivb
or
fwait
dec
int3
aas
loop
loopne
mov
pop
mov
lahf
mov
mov
add
ja
jmp
jge
test
ds
loop
sbb
xchg
jo,pt
add
pop
jl
xchg
and
mov
sub
xor
sahf
movsl
mov
dec
add
sub
outsl
cwtl
std
or
rcll
pushf
sbb
pop
jb
mov
leave
inc
hlt
in
xchg
js
sub
mov
call
shl
pop
in
mov
jl
mov
dec
je
xor
sub
mov
push
in
dec
pop
cltd
mov
xor
outsb
nop/reserved
sub
cmp
movsb
sbb
loop
mov
mov
sub
sahf
jl
jno
pop
int3
mov
cmp
int
jbe
or
pop
pop
repnz
icebp
adc
xchg
add
jg
adc
push
sub
insl
mov
mov
aad
and
sarl
pop
inc
fcmovnb
or
cmp
sub
or
fdivrs
sub
popf
inc
push
std
and
sbb
pop
in
aas
xchg
dec
and
or
mov
xlat
or
mov
lock
mov
cmp
aas
lods
pop
arpl
fsub
adc
out
subl
popf
out
push
add
scas
out
call
je
pop
inc
jl
adc
xchg
sbb
inc
inc
jne
lret
arpl
xor
mov
scas
push
clc
dec
add
cs
adc
lock
inc
shrb
jns
or
outsl
or
jl
or
lea
cwtl
ljmp
cs
sbb
aas
xor
repz
add
rcll
mov
dec
jmp
and
movsb
testb
mov
xchg
movsl
mov
add
dec
jns
adc
xchg
or
inc
push
inc
pop
outsl
inc
sbb
xor
jge
scas
and
test
out
xchg
into
pusha
jg
aaa
cmp
aaa
inc
mov
mov
xchg
and
cld
sbbb
outsl
cmp
jo
aad
mov
push
pop
cli
push
sub
loop
sub
mov
rcl
sub
add
call
adc
xchg
into
lock
mov
mov
jp
xchg
sub
and
mov
mov
xchg
xor
js
dec
inc
adc
inc
inc
inc
ja
jle
jnp
lret
cmpl
loop
adc
ja
bound
adc
push
add
mov
pop
in
push
sbb
es
xor
dec
icebp
and
adc
cmp
aas
subb
dec
fstps
and
adc
or
ret
xchg
scas
pushf
outsl
mov
stc
xor
cmp
dec
push
stc
xor
or
mov
cmc
and
pop
mov
dec
lods
xor
jmp
sbb
pop
add
jae
sahf
addr16
insl
jl
jmp
rol
insb
inc
mov
push
dec
cmpsb
fneni(8087
mov
push
int
xor
ss
dec
ret
dec
pushf
lock
notl
stos
popf
test
pushl
dec
sbb
mov
xchg
xor
popa
dec
cs
shr
xlat
mov
mul
add
xchg
xchg
test
cmp
add
cld
add
jmp
mov
xchg
sbb
cmp
pop
out
push
mov
sub
pusha
cs
cmpsb
xlat
test
imul
push
fwait
ds
xchg
icebp
xor
and
sub
andl
test
repz
adc
xor
lock
jp
lods
dec
out
mov
icebp
idiv
sarl
fisubl
mov
sub
mov
add
nop
jmp
fdivr
dec
xchg
mov
rclb
push
cmpsb
push
xor
mov
test
xor
mov
dec
xlat
inc
shlb
std
lods
lea
and
mov
add
inc
data16
jae
xor
dec
add
pop
ljmp
push
sub
sub
add
insb
outsb
pushf
or
xchg
cld
je
pop
arpl
push
cmp
lret
cltd
sub
cmp
dec
push
mov
add
je
lahf
imul
dec
sbbb
mov
jecxz
push
clc
icebp
ret
decl
data16
mov
mov
and
push
adc
cmc
jns
xor
jae
lods
rcrl
aad
jl
mov
iret
les
mov
add
fmuls
add
test
push
jecxz
xor
sbb
cmc
mov
out
jnp
push
fcmovu
jne
sti
mov
stos
or
add
mov
fisubrs
xor
xor
mov
sub
or
cs
movsb
insl
rorl
insl
add
imul
and
adcb
xor
inc
int3
inc
int3
sbb
adc
and
xchg
fcompl
mov
jae
push
clc
pop
fistl
pop
mov
mov
cmp
lods
or
mov
xor
xor
addr16
roll
inc
sub
aaa
pop
jmp
fisubrl
jae
or
pop
fstl
inc
xor
lods
xor
push
out
pop
cmp
jl
adc
fcoml
add
lret
adc
and
and
out
loopne
xor
lds
insb
addl
cmp
stos
lea
mov
jnp
cmp
lods
sub
rcl
xor
andl
imull
out
xchg
jne
lds
daa
enter
insb
shrb
in
iret
insb
push
test
bound
adc
int3
ds
repnz
mov
mov
nop
inc
daa
in
rcrb
mov
hlt
jo
push
dec
ja
ffreep
pop
ds
push
clc
mov
jmp
out
ret
lret
test
or
jbe
dec
enter
jp
aas
inc
mov
cmp
daa
imul
sbb
dec
dec
out
lret
lret
xor
add
mov
push
outsb
xor
dec
cld
sbb
sbb
scas
mov
out
fadds
sbb
mov
in
jo
pop
insl
ljmp
mov
mov
mov
nop
popl
push
or
repz
enter
fnstsw
dec
dec
pop
jno
addr16
dec
and
jnp
sub
push
xor
dec
imul
lods
movsl
mov
mov
inc
cmp
repnz
push
jne
int3
pop
inc
add
repnz
divl
test
imul
xor
sarb
orl
or
mov
xor
lods
out
adc
rcr
outsl
lea
insb
sub
outsb
inc
jne
pop
mov
and
adc
shr
in
test
pushf
call
rcll
jp
or
test
push
imul
idivl
jae
xchg
cwtl
nop
adc
adc
cmp
jmp
cwtl
pop
pushf
adc
pop
add
mov
sub
movsl
andl
lret
pop
shld
push
outsl
and
mov
mov
pop
repnz
and
jns
pop
adc
pop
rcll
push
arpl
in
adc
push
jmp
pusha
add
fldenv
sbb
and
fcoms
in
in
mov
xlat
push
xor
xor
dec
lock
cltd
mov
xchg
xor
cmp
data16
mov
out
xor
xor
xor
fwait
je
add
js
test
fstpt
int
in
add
add
call
mov
or
add
inc
pop
cltd
cld
dec
js
sbb
inc
or
out
bound
notb
lcall
adc
mov
lea
fdivs
popf
repnz
outsb
mov
add
rolb
popa
dec
outsb
jne
xor
jle
push
inc
imul
jae
sbb
xchg
mov
and
rolb
and
ljmp
mov
iret
or
add
xor
xchg
hlt
sub
pusha
fstpl
test
scas
sarl
dec
sbb
fucom
in
dec
sbb
pop
iret
mov
jae
into
and
mov
insl
mov
jmp
cltd
jmp
mov
dec
xchg
mov
mov
and
mov
inc
icebp
aad
scas
fcom
jmp
cmp
lahf
inc
cmp
pop
mov
jbe
push
scas
push
push
out
sbb
mov
lahf
test
cwtl
mov
lret
call
cmpsl
cmpsb
add
add
mov
inc
pop
dec
rorb
lods
subl
fcompl
pop
mov
into
add
mull
cli
enter
icebp
notl
adc
jp
cmp
stos
jb
add
and
nop
cmp
or
sub
clc
push
mov
xor
fsub
xchg
jo
fstpt
ss
sbb
jmp
mov
call
stos
sahf
cld
pushf
sti
repz
scas
dec
jecxz
les
cmp
cmp
dec
add
sub
outsl
mov
mov
icebp
addl
sbb
xchg
pop
cmp
adc
mov
fsubrl
add
jb
sub
pushf
mov
leave
mov
addb
cmp
leave
xchg
sbb
xor
incb
outsl
push
mov
popa
int
mov
cs
nop
xchg
in
pop
mov
fs
int
rclb
out
jg
fsubl
pop
dec
or
sbb
push
cmpsb
sub
cmpsb
sbb
test
idivl
push
stos
jno
sbb
mov
dec
mov
icebp
pop
and
mov
fisttps
mov
outsl
xchg
loopne
adc
dec
add
jae
aad
xor
ss
je
out
nopl
ss
lds
out
divl
into
sub
adc
push
dec
xchg
sarl
mov
push
mov
xchg
jg
mov
and
in
ret
xor
divl
mov
lods
dec
aad
dec
add
pop
ds
stc
outsl
jecxz
daa
cli
test
mov
inc
xchg
cmp
popl
jns
pop
nop
ss
adc
in
icebp
pop
call
dec
mov
mov
mov
dec
push
mov
out
sub
pop
cmp
jecxz
sti
push
jo
dec
cmp
push
push
aam
fmul
inc
adc
andl
jecxz
dec
je
out
sarl
pop
mov
lret
in
mov
sbb
std
lea
aad
cltd
hlt
sub
les
stos
nop
adc
out
movl
mov
mov
test
insl
mov
cltd
lods
adc
jnp
setnp
inc
rcll
icebp
pop
subb
inc
add
fdiv
mov
mov
sbb
xchg
lret
xor
popa
add
sbb
into
inc
outsl
mul
stc
xchg
dec
lret
lds
sbb
aaa
test
sub
aad
out
xor
test
stos
adc
stos
scas
xor
mov
int
jbe
mov
jnp
push
xlat
mov
xor
dec
xchg
push
pop
daa
cmp
and
stos
push
dec
cmpsl
push
push
push
add
mov
jl
sbb
and
in
pop
sub
stos
or
inc
test
cltd
les
pop
jne
rolb
mov
xlat
inc
lock
clc
lods
aad
and
jmp
arpl
stos
add
mov
or
jne
mov
out
adc
cmp
rcr
inc
ja
aas
sub
xor
adc
int3
stos
or
inc
aas
adcb
push
in
enter
dec
jecxz
mov
and
sbb
out
or
shrb
ds
mov
pop
sbb
jbe
shlb
mov
fwait
add
mov
xchg
sub
pop
test
divb
incb
mov
loope
les
pushf
sti
shll
mov
loopne
push
lahf
jmp
mov
push
jle
lea
push
jle
and
in
mov
icebp
xor
aad
inc
bound
pusha
test
sahf
pusha
xor
add
jle
push
imul
testb
rcl
pop
mov
aam
int
push
lock
adc
mov
dec
testb
push
popa
scas
jno
adc
sub
cmp
shll
sub
or
fdivrl
adc
and
in
jg
push
mov
stos
jg
fsubp
popa
pop
popa
sarb
sub
nop
sbb
hlt
out
mov
jp
mov
in
into
fs
add
sub
mov
adcb
cld
fsts
loope
sub
jno
int
int
sti
adc
lock
and
xor
inc
jnp
mov
psubd
mov
fisubrl
repz
lret
into
or
arpl
jbe
ljmp
jae
repnz
xor
jecxz
or
jp
mov
jb
dec
jnp
lahf
shlb
or
cmp
dec
or
or
adc
loopne
lds
cmp
push
mov
or
mov
outsb
pop
in
lock
xor
inc
adc
lret
fidivs
or
jmp
dec
inc
and
aam
and
out
dec
insl
push
cmp
push
lods
aaa
jns
js
addr16
in
fnstsw
pop
lods
cmp
les
inc
mov
or
dec
push
mov
mulb
enter
inc
adc
cmp
and
jge
or
sarb
mov
stos
sub
gs
gs
mov
cmp
es
cmpsl
pop
in
in
lds
mov
mov
movsb
int3
sti
dec
lahf
call
gs
movsl
xchg
sbb
jnp
je
xchg
mov
stos
inc
and
push
insb
cmp
outsb
fimull
add
sbb
push
sbb
imul
aam
ret
cltd
sub
loopne
jbe
imul
add
jl
pusha
pop
xchg
mov
add
daa
and
ficoms
dec
push
mov
scas
cmp
cmp
nop
in
push
jns
pop
pop
push
stos
mov
imul
faddl
xchg
arpl
addr16
fst
fld
js
ljmp
int3
mov
loop
push
insb
aaa
mov
xor
cmp
mov
mov
sub
xor
or
or
syscall
scas
mov
dec
jp
sbb
aaa
inc
mov
daa
jecxz
icebp
push
dec
fnsave
loope
pop
add
outsb
sub
mov
test
shlb
jae
pop
jmp
addr16
add
dec
cld
dec
mov
pushf
mov
and
leave
roll
jmp
inc
inc
xor
mov
loope
cmp
cli
add
lret
scas
mov
lcall
lcall
repz
push
mov
fsubl
addps
xchg
adc
dec
iret
loope
push
out
jmp
and
in
mov
stos
jno
insl
ds
xor
insb
js
xchg
push
bnd
cli
xor
inc
xchg
fstps
add
arpl
sub
mov
or
not
arpl
outsb
sbb
out
mov
ret
jecxz
cmpl
movsl
and
nop
loop
outsl
ret
std
and
icebp
sbb
pop
mov
aad
int3
shlb
inc
andb
or
mov
push
les
sbb
mov
mov
das
cmpsb
push
push
xchg
adc
add
sub
cmp
shrl
cmpsb
pop
sbb
insl
loop
xchg
push
jge
jmp
in
fwait
dec
and
xor
fcmovu
imul
iret
rorl
fdivl
push
or
repnz
jp
aaa
pop
leave
cmp
push
adc
cli
fidivrs
mov
add
in
push
test
fnstcw
or
lods
js
sub
xchg
pop
jp
xor
rcr
adc
imul
insl
mov
cwtl
adc
and
iret
inc
lods
popf
adc
and
cmp
sub
pop
js
mov
inc
lods
push
pusha
sub
mov
inc
mov
mov
sbb
mov
mov
popl
jge
sbb
popa
call
inc
pusha
cli
add
std
inc
adc
sbb
mov
mov
stc
sub
mov
pop
inc
aam
mov
inc
insb
xor
mov
xor
cmpsl
aad
cmpsl
xor
test
adc
pop
sbb
call
pop
faddl
push
aad
pop
push
mov
cli
aas
xor
xchg
jp
cmp
cld
iret
enter
jp
loopne
jecxz
int3
pop
inc
cwtl
mov
push
es
test
movl
pop
mov
stos
mov
mov
cmpsl
or
mov
icebp
loop
cmp
xchg
dec
pusha
push
inc
imul
in
insl
jno
jo
clc
and
cmp
mov
mov
inc
add
or
inc
scas
into
int3
mov
jo
dec
mov
xor
lds
sub
mov
orl
cld
inc
cltd
std
out
dec
cmp
out
jp
rclb
adc
cmpsb
jbe
in
xor
adc
push
orl
cmc
xchg
call
mov
mov
out
sub
aad
sti
movsb
push
pusha
adc
and
das
mov
adc
cmpsb
jge
in
lret
push
inc
and
add
push
scas
aam
repnz
mov
repnz
push
scas
mov
movsl
xchg
ja
jno
movsl
add
jp
test
jecxz
call
dec
sub
shrl
in
jns
mov
mov
sbb
pop
inc
je
mov
movsb
adc
out
pop
and
sahf
in
pop
jne
jecxz
jecxz
or
jge
shrb
and
into
sub
scas
jno
adc
and
pushf
cmpsb
rolb
or
push
ret
fimuls
mov
shrl
insb
mov
lods
jle
dec
pop
sub
cmp
mov
and
or
sti
sahf
test
outsl
ret
jmp
scas
jb
ret
mov
mov
in
or
ds
int
int
xchg
popa
sbb
xchg
hlt
mov
daa
fld1
xlat
push
mov
pop
mov
lahf
outsb
lods
add
sbb
dec
movsb
xlat
mov
stc
pop
cmpsb
xor
subb
push
add
cmp
popa
adc
in
aas
push
or
lds
enter
imul
jne
jno
add
adc
movsb
addr16
cmc
dec
ret
lahf
push
mov
xchg
push
aaa
sub
xchg
adc
cmc
adc
sbb
dec
add
ss
dec
les
ds
inc
popf
adc
adc
stos
sub
ljmp
xchg
inc
dec
pop
pop
jo
push
pop
aad
mov
mov
rcrl
es
add
sbb
jne
mov
or
add
add
mov
repz
punpckhbw
loopne
cltd
loope
sbb
fldl
jecxz
jo
pop
jo
add
movsb
movl
mov
in
fdivrs
in
repnz
sub
stos
mov
mov
xchg
inc
aaa
lods
clc
scas
dec
sbb
mov
int
mov
push
fdivs
test
or
cmp
lea
repz
or
fwait
rclb
scas
or
or
test
cmp
jmp
mov
test
popf
push
add
sub
bound
push
hlt
add
and
pop
cmp
or
push
test
cltd
xchg
cmp
sahf
outsl
lret
shlb
imulb
push
loope
fildll
dec
ret
outsl
push
push
dec
fmuls
lods
xor
add
mov
sbb
or
add
push
mov
cmpsl
mov
jp
imul
cs
outsl
inc
fcmovbe
jge
popf
mov
je
loope
es
push
jo
xchg
pop
dec
not
stc
inc
das
xor
fdivrl
leave
pop
andb
out
loopne
jg
sub
mov
sahf
and
js
sbb
cli
push
jmp
push
mov
push
in
pop
out
push
jmp
cmp
es
loopne
and
sbbl
mov
jo
xchg
js
in
cwtl
stc
fidivl
jle
movsb
jl
xchg
shrl
pop
leave
jle
mov
push
movsl
rolb
test
scas
or
xor
gs
leave
enter
ret
jne
inc
sbbb
xchg
inc
jle
jmp
loopne
fwait
mov
adc
imul
add
lock
mov
jbe
fstps
cmpsl
xchg
test
daa
sbb
sbb
add
or
adc
or
mov
jne
mov
sub
lahf
push
testb
ljmp
rcrb
add
xchg
repz
and
aam
xchg
dec
jp
pop
rorl
es
aad
dec
sub
and
bound
jb
push
out
orb
mov
insb
xchg
dec
mov
mov
in
jl
aas
sub
out
push
dec
pop
dec
orb
leave
sbbb
and
into
adc
add
pop
sahf
cmp
jne
xchg
sub
stos
test
mov
push
mov
sarl
jns
push
pop
xchg
mov
frstor
imul
xor
inc
and
and
pop
fisttpll
repnz
xchg
call
mov
xchg
ljmp
mov
mov
xor
mov
iret
fistps
mov
mov
shll
xchg
push
aam
stc
xchg
and
inc
mov
mov
fmulp
rolb
and
inc
fidivrl
inc
cwtl
aaa
test
jne
and
push
push
loope
pop
enter
lret
notl
add
jle
sbb
cltd
jns
xor
and
jp
push
dec
xchg
icebp
sbb
xor
aad
loope
shl
ljmp
sub
and
dec
out
jle
fmuls
pop
cmp
fisttpl
loope
sahf
pusha
movsl
mov
add
mov
add
shrb
or
adc
test
imul
pop
mov
push
or
jecxz
outsb
icebp
into
dec
loop
orb
sub
sub
out
dec
popa
bswap
xor
ficoms
out
into
lds
call
lcall
fcompl
pop
jne
mov
mov
popf
push
sbb
dec
in
jecxz
jb,pt
jg
dec
mov
adc
subb
insb
dec
xchg
xor
inc
idivl
bound
xor
jp
add
sahf
mov
push
jp
jmp
jo
mov
add
fdiv
xchg
in
adc
std
mov
daa
sub
andb
lahf
push
aas
push
rolb
roll
mov
and
sub
in
sar
cmc
xor
add
jno
mov
enter
js
cmp
push
sbbb
aam
popl
push
lds
in
inc
pop
mov
inc
int3
push
pop
je
outsl
cmp
add
push
test
sbb
int
ss
test
or
inc
dec
cld
xor
inc
lock
adc
xlat
sub
ljmp
pop
scas
add
pop
cmp
sub
xchg
int
icebp
rcl
cmc
add
adc
inc
or
test
out
jl
jmp
arpl
icebp
add
iret
jb
cmp
xor
lock
rorb
sbb
loope
cs
cmp
add
test
push
dec
daa
nop
cs
push
sub
mulb
inc
sub
pop
pop
xacquire
mov
xor
fcompp
es
subl
mov
std
push
adc
sbb
sbb
adc
jno
cmp
mov
test
dec
es
xchg
pushf
movb
or
push
push
test
pop
push
fadds
push
pop
shlb
sub
and
fsts
push
stos
cli
pop
in
push
inc
xchg
adc
fidivs
ds
push
jle
or
insl
lret
stos
pop
sbb
or
sbb
sub
push
adc
pop
mov
lock
cmc
cmc
les
mov
dec
adc
scas
fisubl
fsubrs
cmpsl
inc
icebp
out
int
loop
les
cli
jno
lock
add
jns
inc
mov
movsl
in
sub
jnp
lods
test
arpl
pop
dec
sbb
clc
sub
iret
test
hlt
bound
push
jns
and
cmp
int3
mov
sbb
test
test
add
mov
xchg
xor
lods
sahf
aad
mov
cmp
scas
fldl
push
aaa
xor
lods
lock
js
rcll
pop
fidivrl
cmp
add
call
inc
stc
test
push
or
cmp
jne
cmp
imul
fidivrs
jle
push
jl
mov
push
xchg
mov
xor
sub
daa
adc
and
push
cmp
scas
mov
lock
call
xchg
sahf
scas
shrl
push
xchg
add
icebp
outsl
mov
mov
add
sub
dec
subb
fadds
xor
add
pop
and
imul
cld
test
cmp
aad
jnp
imul
inc
in
push
or
push
fcomi
lahf
xor
out
arpl
jp
dec
xor
imul
adc
push
and
fdiv
xor
jle
xor
push
sbb
fcmovnb
gs
or
adc
sbb
scas
movsb
leave
mov
jo
push
mov
push
and
push
push
cmpsl
int
cmp
xor
rcr
in
jae
aas
idivl
arpl
adc
jns
pop
xlat
fimuls
repnz
sahf
jnp
iret
or
sbb
mov
cwtl
mov
ret
cwtl
mov
loop
clc
ds
ljmp
in
hlt
jp
das
sbb
and
out
or
mov
test
clc
jae
mov
adc
ja
mov
jo
jge
jnp
in
cli
xchg
cmp
iret
mov
movl
nop
xchg
incb
nop
stc
add
push
xor
pop
jg
xchg
aam
and
bndldx
mov
rcr
lods
sbb
or
mov
dec
cmp
popa
loope
sbb
cltd
sbb
outsl
out
pop
mov
add
xor
repnz
test
imul
roll
and
pop
mov
into
or
mov
shrl
mov
sub
je
rclb
pop
outsb
mov
mov
int
rcl
icebp
and
pop
stos
xchg
daa
jl
or
jb,pn
cli
aam
mov
imul
push
aam
jno
inc
ljmp
mov
xor
pop
mov
icebp
popf
jbe
pop
add
repnz
dec
hlt
loope
aaa
cltd
xchg
cmp
mov
inc
pop
push
pop
add
and
lahf
stos
mov
push
mov
sbb
cld
xchg
fstl
popa
push
aas
sub
fildl
sbb
push
jle
cmpl
or
sar
sub
cli
movsb
push
adc
or
pop
out
mov
fstpl
jge
mov
mov
mov
ja
cmp
xor
ja
daa
ja
fbstp
push
dec
xchg
and
gs
imulb
fidivrs
adc
push
jge
mov
dec
lds
xchg
pop
test
rcrl
mov
jmp
xchg
jae
inc
out
dec
push
pop
lahf
hlt
sub
jp
push
ljmp
cli
jb
aas
pop
or
test
mov
aaa
shr
push
xchg
jge
jb
ja
cltd
lahf
dec
sbb
cld
lds
scas
cmp
push
stos
add
cltd
mov
in
es
xchg
arpl
mov
mov
mov
inc
jl
jecxz
mov
insb
cmp
inc
int3
les
pop
lds
dec
das
mov
ret
into
and
cmp
rorl
loopne
cmp
lahf
insb
or
and
xor
jmp
jl
cs
dec
sub
out
or
inc
loop
sub
daa
ja
jp
inc
mov
xorb
shl
and
nop
aas
push
add
dec
inc
cmp
mov
jbe
sub
jbe
sub
ljmp
stos
adc
fstpt
inc
xor
lods
inc
cmpsl
cmp
push
mov
mov
aad
xor
adc
xchg
push
mov
mov
es
jb
enter
addr16
adc
xchg
mov
into
or
mov
cmp
test
jne
sub
push
test
js
out
push
popf
xchg
add
cmp
int
add
pop
cld
or
and
mov
out
ds
or
out
arpl
cmp
jae
cli
mov
cltd
xor
icebp
cltd
lock
mov
sbbl
stos
fadds
call
xor
dec
and
pop
dec
push
in
fs
inc
insl
stos
mov
pusha
inc
pop
or
cmpb
imul
sub
mov
cmp
js
xor
sub
in
mov
dec
cmpsl
ret
fisubrl
inc
add
stos
mov
xor
loop
push
lret
xor
xor
add
push
test
cmp
jae
and
sti
fbld
inc
jo
popf
out
cwtl
pushf
pop
mov
out
fmulp
movsb
fcoml
test
shll
sub
in
push
daa
add
scas
push
movsb
stos
sbbb
push
jmp
shlb
jecxz
ficomps
cmp
movsl
das
fmul
dec
xchg
cmc
mov
inc
fwait
into
test
mov
and
dec
mov
cmc
jg
and
push
xor
cltd
das
cmp
loope
stos
mov
xor
pushf
fwait
jno
loop
test
or
sub
rcll
cs
adc
pop
in
das
and
sbb
les
ss
lea
xor
cmp
pop
out
loop
jge
inc
fcomps
sub
dec
or
xchg
mov
mov
out
adc
pop
sbb
rcll
adc
ss
mov
dec
imul
sahf
mov
popf
outsb
fistps
lea
mov
and
cmp
sub
outsl
orl
jge
icebp
mov
mov
sbb
mov
out
xchg
sti
or
decb
xor
out
add
daa
fisttps
dec
mov
cmp
shrl
adc
pushf
push
and
mov
mov
ja
std
mov
push
clc
and
rcrb
outsb
lahf
xchg
mov
inc
call
adc
cli
scas
in
sub
cmp
cwtl
xchg
test
stos
and
inc
sbb
ret
mov
or
shll
xor
addr16
sbb
mov
inc
shlb
push
mov
fcomi
jbe
pusha
mov
bound
fnsave
inc
test
or
add
inc
dec
sbb
or
cltd
movsl
into
sbb
cmp
mov
lock
push
push
lods
das
into
inc
cmp
jnp
hlt
mov
mov
cmp
shll
xor
enter
mov
mov
jl
mov
jo
jns
ja
inc
aam
pusha
sahf
lds
cld
pusha
mov
dec
enter
adc
pushl
stc
mov
fldcw
daa
jo
mov
dec
mov
insl
dec
rorb
pushf
sbb
xchg
imul
sahf
jl
add
popa
mov
loop
lods
repnz
xor
push
aas
jl
jge
aad
test
decb
enter
gs
mov
mov
cltd
sbb
mov
mov
cli
adc
fisubrl
pop
jo
jns
sti
movsl
xchg
xchg
enter
into
mov
cmp
mov
mov
call
sub
in
jae
push
mov
push
add
leave
pop
push
insl
ss
or
lds
insb
movsb
push
xor
fdivrs
xchg
inc
xchg
mov
das
xchg
jge
mov
push
push
push
or
fmull
rcll
push
dec
pop
sub
fisubrl
adc
mov
or
addl
sahf
xchg
jge
mov
sbb
mov
sub
and
ja
lcall
cmp
mov
xor
arpl
xchg
mov
add
lds
lret
pop
pop
jne
movsl
data16
push
or
repz
outsl
in
sbb
aaa
loop
adc
call
loop
outsl
das
cmp
ja
lcall
movsb
insb
bswap
xor
stos
pmaddwd
arpl
push
adcl
icebp
xor
inc
repz
push
sub
dec
cmp
sar
push
fimuls
rcl
mov
aas
lea
mov
push
fnstenv
imulb
sub
mov
movsb
and
test
or
fs
lcall
or
jns
loope
cwtl
inc
fmuls
jg
dec
movsl
sahf
fmull
pop
mov
push
shrb
mov
lds
jb
sti
add
push
cmp
add
lea
cmp
test
or
adc
dec
mov
and
out
and
jne
adc
mov
mov
aad
sbb
jl
daa
ja
pop
es
test
mov
outsl
shrb
in
add
pop
ljmp
lahf
inc
es
inc
mov
addr16
stos
mov
push
pop
jmp
lahf
dec
fisttpll
add
movsl
pop
or
lret
ja
jecxz
pop
clc
pusha
dec
aas
iret
pop
cmp
and
mov
repz
scas
fsts
outsb
outsb
jae
loopne
dec
pop
mov
mov
jnp
movsb
out
stos
mov
jo
dec
das
leave
and
popa
mov
loop
mov
loopne
and
sbb
jns
mov
jmp
pop
stos
mov
mov
shr
push
ja
fidivrl
ds
pop
stc
xchg
push
xor
xchg
xchg
sahf
or
pop
cmpsb
pop
cmp
loopne
test
mov
push
mov
cld
xlat
pop
aaa
lahf
xchg
jbe
aam
xchg
or
pop
inc
in
rclb
insb
fistpll
clc
cmp
pop
movsl
add
jbe
fdivrs
outsb
push
inc
test
mov
xlat
cmp
adc
fsubrl
add
sbb
fcoml
imul
cmp
into
sbb
loopne
jmp
jae
aad
subl
mov
mov
sub
lcall
inc
loop
jnp
add
jnp
fisttpl
ja
jae
dec
xor
imul
xchg
fcmovu
imul
mov
push
push
aas
xchg
mov
adc
sbb
push
lods
push
test
mov
cmpsb
loopne
add
mov
xor
or
push
cmp
cmpsb
jl
test
negb
cmpsb
fs
jb
jl
mov
mov
out
xor
push
fdiv
xchg
das
jecxz
movsb
fistps
aas
sub
shr
mov
test
imul
and
push
mov
xchg
push
out
out
jns
cmpsl
rcrb
xorb
jo
sub
mov
fimull
in
leave
mov
or
sbb
xlat
xchg
and
hlt
xchg
fists
xlat
aas
es
sahf
lahf
or
pop
sub
push
xchg
outsl
mov
int3
add
movsl
stos
sbb
pop
and
cmp
pop
and
rorl
jne
push
int3
filds
jb
outsl
inc
scas
in
inc
xchg
fdivl
inc
call
inc
mov
es
mov
pop
call
dec
iret
cmc
cmpsb
pushl
mov
rolb
add
xor
jne
ds
cmpsb
out
test
inc
lods
push
mov
shr
ljmp
jge
js
addr16
xor
ret
frstor
push
loop
xor
sub
clc
mov
jns
adc
in
test
sbb
mov
sub
fwait
jle
ja
std
or
jb
scas
popa
movsb
inc
jbe
xchg
lods
xchg
and
mov
push
outsb
mov
jne
repnz
xor
jmp
push
sub
daa
mov
xor
add
push
int3
repnz
pushf
cmpsb
mov
mov
sbb
iret
push
cmp
add
mov
cmp
mov
sub
cmp
ss
mov
fstl
dec
je
pushf
out
pop
jle
inc
push
add
test
mov
decb
daa
lret
mov
arpl
arpl
mov
adc
push
sti
add
xchg
and
push
rcrb
inc
in
adc
push
out
pop
lea
mov
outsl
lret
mov
dec
mov
push
pop
leave
jle
sbb
stos
cld
in
mov
dec
scas
inc
out
sub
mov
pop
and
or
adcb
mov
insb
xchg
fs
out
ret
outsb
jecxz
clc
add
mov
pop
jle
mov
pop
add
xlat
cmpsb
adc
mov
mov
xchg
mov
subl
dec
push
xorl
pop
hlt
dec
sub
push
cmp
push
sub
mov
loope
or
and
push
pop
adc
insb
pop
faddl
imul
fcmovnbe
mov
cwtl
das
cld
mov
push
push
outsb
push
add
or
ljmp
sahf
dec
dec
sbb
imul
dec
sahf
mov
dec
adc
std
mov
sti
fdivr
mov
push
test
adc
bound
in
in
mov
cli
sbbb
enter
mov
xchg
and
jl
mov
dec
stos
popa
push
pop
fdivs
into
in
outsb
loope
adc
mov
imul
insb
outsb
nop
pusha
ds
mov
stc
ret
arpl
mov
cmp
add
imul
push
or
gs
addr16
pop
fwait
or
cmc
sbb
xor
filds
les
sbb
iret
scas
sub
push
xor
xchg
jecxz
cld
inc
aam
lret
add
enter
add
stos
jecxz
in
jno
mov
pushf
pop
addl
sub
pop
outsl
testb
and
add
iret
dec
pop
push
pop
lods
push
push
push
sub
sahf
mov
sub
fcompl
nop
mov
fnstcw
add
push
inc
lret
or
lods
jno
adc
mov
clc
lahf
or
adc
out
imul
stos
lock
movsl
and
push
loope
jmp
mov
cmp
xchg
lahf
lds
repz
mov
sbb
mov
xchg
adc
lods
push
or
cmp
mov
jecxz
arpl
sbb
sub
lss
lods
in
nop
xchg
inc
icebp
scas
pop
sbb
inc
ss
sar
jne
push
xchg
mov
cmp
mov
cmp
inc
mov
mov
jno
lods
push
repz
in
xor
faddp
fsubl
jne
mov
sub
push
rolb
in
popa
mov
popa
ret
inc
sbbb
mov
cmpsb
pop
sbb
push
push
xchg
jae
jge
lahf
add
addr16
dec
sub
icebp
fwait
daa
adc
add
mov
mov
aam
or
dec
scas
in
gs
fildll
inc
testl
push
psrld
mov
and
jnp
leave
lret
sbb
test
pop
pusha
rolb
adc
xchg
sub
data16
push
xor
add
mov
mov
xchg
test
ljmp
ja
test
ljmp
call
jb
loope
add
push
stos
popa
push
adc
push
imul
sbb
xor
jle
push
testb
int3
imul
icebp
lret
jl
int
dec
pop
es
cmp
push
mov
fadds
repz
sti
daa
rclb
jb
inc
das
fiadds
sbb
xchg
add
popl
pusha
out
fldcw
cmp
inc
push
pop
lea
pop
loopne
dec
jecxz
or
inc
fimuls
stc
inc
mov
in
push
or
sub
or
xchg
outsb
mov
lcall
sbb
xchg
cmp
les
sub
pop
adc
cs
pop
test
push
and
mov
and
inc
pop
and
dec
add
ja
pop
pop
loop
ja
scas
nop
cmp
pop
xor
int3
mov
call
sbb
sbb
mov
fstl
pop
shr
xchg
divb
rep
or
adc
loop
insl
push
xchg
adc
pushf
mov
adc
es
and
dec
gs
sbb
push
gs
add
into
sbb
mov
sbb
mov
jo
roll
imul
outsb
sbb
ds
mov
dec
lcall
sbb
xor
cmp
jg
adc
shll
jbe
cmp
or
jp
adcb
cmpsb
movsl
fildll
mov
dec
mov
push
sub
push
inc
test
addr16
or
test
test
fbstp
and
movsl
or
arpl
xchg
xchg
cli
mov
dec
sbb
add
neg
jl
dec
lahf
push
das
mov
sbb
push
cwtl
mov
add
mov
jae
jnp
jae
or
xchg
xchg
mov
cmpsl
ja
sub
fs
xchg
sbb
or
or
dec
and
jbe
movsl
in
push
nop
pop
jo
stos
lcall
push
mov
leave
cmp
or
subl
out
js
xchg
jbe
pop
cmp
xchg
loope
push
push
mull
fcoms
push
enter
cmp
in
mov
and
push
iret
sbb
inc
inc
test
add
xor
mov
mov
pusha
movsb
jge
mov
push
jno
jb
or
lds
push
fucom
ret
mov
lret
push
test
mov
jmp
lods
sti
dec
ret
sub
andl
mov
repnz
add
add
les
pop
mov
fistpll
out
or
ret
cs
inc
imul
sub
add
dec
push
inc
sub
or
cltd
iret
xchg
std
lea
xor
pop
mov
push
cld
mov
lods
inc
lret
mov
lahf
stos
in
jmp
test
push
mov
leave
push
adcl
je
dec
nop
int3
jb
adc
jbe
inc
out
push
cmp
ljmp
aam
fcompl
and
inc
mov
enter
sub
arpl
pop
in
pop
or
inc
jge
es
push
add
jl
stc
insb
push
call
jle
cld
roll
neg
mov
scas
push
andl
jno
dec
dec
outsb
stos
bound
inc
lret
fisttps
leave
sub
pop
aas
mov
adc
subl
inc
scas
iret
inc
jno
sub
jne
push
bound
sub
cmp
ret
jae
call
sbb
mov
jl
mov
jmp
in
pop
xchg
or
sbb
ja
mov
testl
outsl
inc
jne
xlat
cli
sbb
xor
outsl
aas
and
mov
roll
ljmp
ss
daa
xor
ds
out
sbb
insb
test
int
aad
xor
adc
rcl
jbe
jbe
in
xor
jne
mov
clc
lahf
add
xor
pop
ss
adc
sbb
inc
js
jmp
loop
int
sahf
or
je
bound
xor
push
or
ljmp
pop
mov
out
cs
mov
in
mov
inc
pop
dec
lods
xchg
in
pop
push
sub
push
or
push
and
add
es
fwait
cmpsb
mov
adc
push
cmc
pop
cli
mov
sub
pop
mov
xor
lret
repnz
xor
stc
fcomps
dec
sub
adc
mov
in
inc
sbb
orl
jecxz
pop
fnsave
inc
mov
fcmovnbe
xchg
mov
scas
mov
clc
inc
adc
or
push
addr16
and
daa
add
xchg
push
xor
or
xor
ret
outsl
mov
test
inc
jmp
mov
ja
ds
loop
xchg
mov
sbb
xor
adc
xchg
xor
jg
push
xchg
outsb
std
ss
shlb
mov
xchg
sti
test
repz
shlb
xchg
push
mov
add
loopne
pop
cwtl
jge
cmp
pop
sub
xor
outsl
notl
insl
or
dec
pop
ja
jmp
dec
push
movl
loopne
push
pop
inc
paddsw
add
lret
clc
cmpsl
rorl
and
imul
push
fcoml
test
add
fcmovb
loope
insl
rsqrtps
xor
xchg
icebp
mov
lods
add
mov
jmp
xchg
pop
ret
gs
adc
sti
mov
cmp
push
xlat
xlat
cltd
mov
sbb
jge
inc
fidivs
sbb
stc
mov
mov
ret
jae
popa
cmp
pop
divl
iret
or
stc
dec
xor
popf
hlt
add
mov
adc
xchg
jecxz
hlt
push
lea
sbb
push
jg
outsb
adc
out
inc
mov
or
inc
mov
cwtl
xor
add
lea
xor
loop
repz
scas
loopne
lahf
mov
jo
inc
mov
cmp
push
aas
mov
mov
sbb
mov
fimuls
push
and
cltd
inc
ljmp
cld
mov
mov
jmp
test
jl
jmp
jl
aam
inc
ja
sub
xlat
pop
ds
in
and
jl,pn
insl
sbb
pop
lret
mov
mov
push
std
outsl
dec
cmpsl
dec
mov
lods
dec
jge
inc
stos
pop
mov
or
cwtl
push
push
in
push
int3
pop
mov
push
aaa
out
xor
adc
lock
je
push
push
sbbb
mov
into
notl
xlat
out
bound
xor
inc
pop
mov
adc
push
adc
outsl
dec
lcall
push
repnz
ficoml
mov
push
movsl
cmc
insb
sbb
sub
mov
repz
jne
inc
xchg
jne
adc
xor
adc
orb
lahf
ret
loope
das
dec
insl
sub
nop
pop
add
iret
arpl
cmp
sbb
out
mov
inc
cwtl
outsb
fxch
mov
jbe
scas
lods
shrb
pop
add
enter
cwtl
and
push
js
mov
push
jb
push
cwtl
pusha
orb
clc
test
xor
std
xor
inc
adc
test
daa
rorl
mov
inc
test
xchg
sbb
inc
push
jns
jbe
mov
jp
push
push
cld
sub
std
pop
insb
fs
and
push
rcrl
mov
addl
ljmp
pop
mov
mov
fprem1
sbb
js
sbb
cmp
mov
ljmp
xor
mov
add
adc
out
jae
mov
push
adc
mov
outsl
and
push
lea
lahf
xor
insb
jle
aas
or
subb
outsb
and
push
cmc
dec
lahf
mov
outsb
jle
mov
jl
mov
lea
mov
mov
mov
dec
xor
fsubp
pop
inc
dec
loope
popa
mov
imul
inc
cltd
les
icebp
jb
movb
ficompl
xlat
adc
std
xchg
pop
stos
jp
jnp
mov
fwait
or
xor
jl
xlat
jne
mov
inc
data16
pop
xchg
aad
mov
mov
cli
mov
pop
dec
add
in
mov
rcr
ret
jle
mov
xchg
rcl
sbb
xchg
cmp
jbe
xor
sbb
adc
mov
cmpsl
dec
cli
mov
jmp
xor
arpl
imul
outsb
fcomi
lods
sbb
and
inc
movsl
sub
dec
add
orb
out
shll
hlt
in
adc
xchg
jne
push
dec
popa
movsl
scas
xchg
pop
jns
or
pop
aaa
fadds
push
lahf
cwtl
aam
add
pop
push
xchg
mov
push
call
push
xchg
xchg
ja,pn
jb
jne
mov
mov
and
and
enter
cmp
mov
cmp
in
lret
push
in
movsl
pusha
aad
push
dec
dec
sbb
int
rorl
imul
sub
mov
popl
movsb
inc
ja
sub
repnz
imul
dec
sbb
aas
cmp
add
scas
and
les
cld
or
adc
adc
sub
jecxz
int3
xor
cmp
sub
or
push
stos
mov
or
mov
push
fbld
or
cld
rol
pop
xchg
lea
adc
pop
insb
popa
mov
orl
mov
lock
out
or
jne
fstps
outsb
jp
mov
lods
negb
scas
jp
cmp
mov
mov
cli
push
mov
inc
adc
test
mov
mov
inc
xchg
adc
add
sbb
inc
sbb
in
cmpsb
mov
pop
cs
repnz
pushfw
rcll
jecxz
push
add
mov
mov
movsb
push
mov
fucomp
fmulp
scas
aas
ds
cmp
pushf
bound
sbb
inc
mov
adc
xor
dec
out
jns
call
dec
dec
push
roll
in
jno
sub
int3
mov
aad
es
dec
aas
ljmp
clc
ljmp
stc
pop
adc
inc
sbb
dec
sti
mov
js
pusha
subb
push
repz
pop
test
outsl
mov
imul
dec
push
cld
hlt
imul
loope
jne
nop
or
insb
mov
or
cmp
pop
jle
inc
in
movsl
mov
pop
adcl
sub
aas
mov
call
pop
mov
push
clc
mov
cmpb
cltd
pop
mov
icebp
xor
mov
xorb
inc
sub
cwtl
xor
out
mov
lret
or
and
stc
sbbb
call
mov
sub
sbb
adc
ror
rcl
cld
push
lcall
lahf
lcall
dec
scas
push
adc
or
cld
fisubrs
scas
dec
test
mov
call
int3
lods
filds
fxch
nop
push
sbb
cs
mov
pop
je
into
cmc
and
sbb
mov
std
mov
mov
aaa
leave
decb
or
add
nop
adc
std
push
pop
xchg
and
cs
insl
mov
pop
xchg
xchg
das
or
lret
cmp
jp
arpl
das
clc
loopne
and
std
adc
aas
hlt
mov
test
and
testb
mov
in
mov
in
jle
aaa
mov
mov
and
mov
push
pop
lahf
mov
call
imul
and
jbe
jae
sar
xor
add
xor
xchg
repnz
xchg
icebp
push
sub
sahf
cmp
cmp
add
inc
jb
insl
rcrb
les
stos
dec
pop
or
cmp
hlt
push
xor
push
cmp
jno
scas
fcomps
ret
dec
cmpsb
mov
mov
mov
pop
push
mov
cmp
cmpsl
cmp
inc
or
lret
cmp
mov
jnp
mov
loopne
lahf
push
and
dec
xchg
in
gs
out
mov
cli
or
cmp
js
xchg
mov
sarb
xchg
dec
aas
push
pop
mov
or
adc
inc
push
aas
add
sub
enter
dec
mov
sahf
mov
shl
sbb
gs
xor
lret
inc
popf
jg
and
cli
add
out
pop
enter
daa
in
inc
loop
imul
push
stos
loope
cmpl
xlat
cmpsb
pop
sbb
int
or
mov
add
repz
js
aas
loop
and
fs
jmp
jb
jge
push
add
out
fstpl
xor
imul
sbb
lock
dec
sbb
xchg
pop
inc
loop
inc
xchg
push
cmpsb
cmp
hlt
hlt
dec
inc
lods
or
rcrl
or
fsubl
push
mov
inc
cmp
gs
hlt
fidivl
add
jo
mov
push
cmc
cltd
shlb
mov
inc
lahf
dec
add
jne
popa
push
in
sbb
call
adc
xor
jmp
hlt
inc
inc
mov
clc
nop
test
cld
rcr
mov
adc
sub
jl
daa
or
push
stos
pusha
mov
inc
xchg
mov
shlb
cmp
add
and
dec
mov
inc
loope
mov
stos
fwait
adc
pop
or
cmp
sub
sti
nop
dec
ljmp
mov
lods
push
jle
mov
out
dec
adc
popf
insl
les
movsb
lahf
rcl
push
addb
pop
aaa
mov
daa
and
repnz
push
sbb
mov
pop
stos
xchg
xor
jle
pop
andl
popl
xchg
add
dec
fstps
jb
push
in
cmp
xlat
push
cs
push
cmp
jp
inc
fldenv
gs
dec
cmp
popf
jo
mov
xorb
cmp
pop
rcrb
cli
adc
adc
fs
cwtl
popa
lcall
and
adc
dec
cltd
dec
movsl
aaa
ja
cmc
xor
scas
popfw
lcall
cs
sub
jle
testb
into
int3
iret
jg
rolb
fimuls
je
xlat
fwait
enter
lahf
pop
pop
pop
xorb
clc
imul
push
fs
sahf
xchg
xor
mov
push
pop
call
sbb
cmp
cli
pusha
negb
faddl
mov
xchg
or
inc
int
push
lea
or
jecxz
addr16
shll
pop
mov
push
mov
or
rolb
or
out
mov
andb
fs
in
subb
out
jle
add
push
sti
jg
cmp
in
lods
xchg
add
sub
test
ret
mov
test
xchg
repnz
push
ja
ljmp
fisubrl
stos
xor
inc
xor
mov
jge
push
aad
push
sbb
cltd
fsubrl
adc
push
pusha
jae
xchg
mov
cmp
lock
imul
jg
hlt
loopne
pop
jmp
mov
outsl
cmc
xor
pop
leave
inc
iret
bound
scas
adc
push
xchg
xchg
in
dec
stos
cmpsb
es
cmp
xchg
xchg
movsb
add
cmpsb
and
push
dec
push
mov
loope
push
mov
pushf
push
cmp
enter
cmpsb
mov
xor
mov
fwait
ret
mov
pop
mov
cmp
addr16
dec
xchg
or
fnstsw
rcll
shlb
pop
lret
dec
mov
mov
push
adc
psllq
lcall
or
xor
pop
divb
push
mov
lock
or
jp
jno
sbb
loop
mov
pop
and
loopne
aad
cmpsl
inc
jp
lret
gs
dec
mov
cmp
jne
mov
icebp
mov
repnz
ds
sahf
lret
jne
out
notl
arpl
je
mov
push
movsl
lods
mov
aam
bswap
mov
pop
inc
stos
int
lcall
repz
sub
and
xor
out
mov
lcall
cmc
bound
sbb
sub
outsl
bound
sbb
inc
stos
push
test
xlat
dec
call
out
jo
outsl
insb
stc
pop
cltd
cmp
xchg
push
lods
mov
ficomps
pop
leave
xchg
testl
mull
pop
aad
pusha
jecxz
popf
push
mov
imul
sub
cmp
push
dec
dec
add
das
fdivr
mov
arpl
jmp
cmp
ljmp
push
sub
ret
rorl
or
test
pop
push
lods
sbb
dec
das
cmc
dec
and
or
cmpsb
adc
dec
imul
xor
add
repz
rorl
xor
mov
lock
xchg
sti
xor
jp
movsl
outsb
or
sub
pop
test
dec
lret
lea
mov
cmpsl
pushf
es
push
daa
mov
test
xchg
adc
mov
cmpsb
ret
test
popf
cmpsl
xchg
mov
stos
enter
pop
icebp
jecxz
outsb
mov
inc
and
push
jmp
mov
adc
add
mov
sbb
out
mov
cs
movsb
movsl
repz
jg
int3
in
mov
push
lds
fwait
add
xor
jns
cmp
test
adc
push
mov
test
cmpb
add
icebp
xor
dec
jno
adc
jl
addr16
sbb
sub
sahf
add
outsl
cmp
inc
or
sti
jo
and
sub
push
adc
std
dec
xchg
dec
adcl
mov
mov
repz
pusha
pop
dec
and
ret
and
adcl
mov
inc
outsb
loope
cs
adc
pop
jne
out
mov
xor
sti
fidivl
add
in
push
repz
push
xchg
shlb
push
pop
sbb
jp
stc
call
add
imull
loopne
js
sub
loope
insl
enter
stos
mov
sbb
fs
insl
xchg
scas
xor
stc
test
inc
clc
addb
mov
sbb
cmpsl
mov
loopne
cmp
fimuls
xchg
add
sbb
sysexit
fidivs
fmull
jbe
push
sub
and
inc
imul
adc
or
mov
jg
push
xchg
ret
or
pop
sbb
lahf
in
mov
xor
dec
jb
sub
dec
pop
daa
in
lcall
mov
adcb
iret
push
jne
push
test
xorl
adcb
xlat
and
and
push
jb
xor
out
sti
lock
lret
dec
push
pslld
push
jb,pt
mov
into
lea
movb
and
or
call
add
fisubrl
fists
sahf
and
addl
stc
into
sti
cmp
xchg
xor
jmp
mov
in
jge
xor
hlt
push
push
ljmp
pop
sbb
adc
mov
int
int3
nop
pop
ret
cmp
imul
repz
mov
hlt
push
mov
loopne
cld
pop
jmp
jl
adc
aas
mov
imul
sub
in
and
enter
out
jp
icebp
aam
xor
js
inc
jg
ror
fcmovb
adc
mov
divb
outsl
sub
lds
jo
int3
bound
pop
outsl
aad
test
adcb
icebp
mov
xor
dec
aaa
ljmp
jp
jge
mov
or
ret
rorb
pop
jg
add
jns
pop
popa
fidivrs
lret
xchg
dec
mulb
xchg
fs
mov
push
loopne
dec
mov
ficoms
push
cmp
imul
or
cmp
jmp
sbb
mov
add
orb
in
sbb
in
aas
dec
testb
or
aaa
fmuls
ds
cmp
cmp
and
loope
fwait
xchg
popaw
cmp
std
mov
call
mov
add
cmp
mov
push
shlb
js
in
push
lcall
repz
imul
daa
ljmp
pop
loope
mov
jg
shl
vmulpd
bound
mov
mov
lret
loope
nop
cwtl
lods
hlt
icebp
es
push
pop
gs
dec
adc
fwait
int
clc
sbb
jbe
outsb
out
xchg
pop
or
cltd
inc
inc
sub
subl
push
ds
addb
mov
adc
xlat
ret
push
aam
xor
call
mov
ljmp
push
and
rcr
call
cmp
mov
dec
add
adc
push
stos
ss
mov
push
jle
repnz
rcl
pushf
push
cld
push
loope
add
jnp
jl
cwtl
dec
xchg
jge
inc
mov
in
jl
fidivs
scas
leave
subb
push
rcrl
rolb
adc
nop
mov
sbb
aad
mov
xlat
adc
cmpsb
lods
mov
mov
test
cmp
mov
js
gs
stos
pop
sub
push
or
in
mov
insb
add
movsl
mov
jmp
xchg
lock
int
xchg
xchg
cmp
fiadds
xchg
dec
adc
or
repz
jnp
inc
in
out
pop
cmp
in
push
push
add
dec
shll
fcmovne
add
jl
ljmp
and
sbb
sub
mull
sbb
jmp
mov
cmc
push
mov
stos
dec
dec
pop
lcall
jecxz
sub
sbb
inc
cmovns
sub
sbb
mov
add
dec
pop
pop
xchg
push
xor
pop
lret
mov
and
pushf
pop
fcoml
loope
sti
test
js
fwait
cmp
imul
xchg
js
inc
jg
sbb
mov
push
aas
insl
imul
cmp
push
push
mov
cmp
nop
cmp
test
xor
jl
cmc
fnstsw
in
and
dec
jp
jl
mov
aaa
lret
mov
fcom
add
inc
xor
inc
xor
mov
inc
cmp
jle
xchg
popl
add
mov
js
or
mov
inc
aas
pcmpgtb
sub
stos
mov
push
enter
or
pop
xlat
xchg
mov
sbbl
push
jb
dec
jp
inc
and
lret
lods
jg
sbb
mov
clc
xchg
inc
cs
movsl
cmpsb
out
je
test
sub
iret
mov
fcoml
push
loopne
push
adc
or
mov
into
mov
push
imul
lcall
xorb
mov
cmpsl
insb
pop
scas
andl
mov
mov
xor
adcb
jl
aad
lcall
outsb
pushf
loop
mov
push
mov
push
call
andl
scas
mov
mov
clc
pop
push
test
xor
and
jl
dec
shl
xor
fstps
sbbl
dec
and
and
arpl
jbe
jae
mov
cmc
sub
mov
cmp
jae
repnz
lea
lods
stos
mov
mov
test
jo
jg
pop
inc
scas
dec
stos
enter
bound
mov
mov
jmp
dec
mov
xchg
push
or
dec
pushf
hlt
push
ror
int3
ret
mov
inc
push
lods
lret
mov
subl
outsb
cmp
and
sub
clc
push
mov
and
iret
add
sub
pop
iret
jp
aam
dec
test
xchg
loope
cmc
in
add
dec
rep
xchg
mov
sub
out
fldl
clc
push
pop
fistpll
adcb
jge
sti
cmpsb
cmp
sbb
or
inc
push
mov
and
sarl
mov
jmp
shrb
push
bound
xor
mov
movsb
mov
pand
insl
insb
xor
sub
xor
hlt
and
mul
push
mov
xchg
lock
cltd
test
in
jle
jg
lds
das
push
pop
xchg
fildl
stos
pop
and
test
pop
cmp
dec
adc
sbb
out
pop
jl
dec
out
je
sbb
into
repnz
arpl
sbb
sub
daa
add
outsb
pop
sub
pop
test
fnstenv
mov
lahf
jl
aas
jp
notl
mov
xchg
div
xorb
loope
sub
sbb
mov
das
mov
xor
add
mov
mov
xchg
mov
mov
inc
aaa
mov
push
inc
insb
pop
ret
or
movsl
sbb
push
add
jnp
sbb
ret
push
jg
lahf
push
rclb
push
js
in
popa
dec
sbb
xchg
mov
push
pop
rcr
push
insb
jle
dec
add
cltd
xchg
adc
sbb
leave
push
ss
pop
dec
data16
jnp
fisubl
adcl
and
cmp
xchg
push
lea
push
or
mov
fistpl
lcall
out
cli
sti
test
xor
insl
stc
mov
sbb
and
adc
std
adc
out
dec
lods
push
hlt
lcall
fcoml
mov
xchg
xchg
sub
add
push
mov
jae
cmp
ret
sub
and
imul
ds
mov
mov
in
dec
sub
mov
testl
add
mov
dec
pop
mov
add
pop
push
dec
mov
scas
and
push
popf
cmp
pop
shlb
clc
push
icebp
inc
push
js
out
or
xchg
mov
ss
xchg
and
adc
shll
ljmp
hlt
mov
and
inc
xchg
lds
jb
jp
inc
xor
les
dec
rorl
push
rcrb
inc
xor
negl
test
inc
push
pop
stos
fwait
jmp
mov
cwtl
adc
cltd
dec
push
inc
inc
pop
filds
xchg
pop
in
mov
sbb
add
dec
mov
je
or
insb
idivb
ljmp
cwtl
pcmpgtb
push
sub
je
pop
movsl
fistpl
mov
icebp
roll
insb
enter
dec
out
test
jle
rol
fidivl
setnp
or
cmp
fcom
test
xchg
scas
pop
jmp
in
repnz
scas
loope
sbb
xor
mov
mov
in
cmp
test
lret
lods
add
addb
scas
fnstenv
adc
inc
repnz
adc
cmp
cvtpi2ps
inc
jmp
aam
xchg
int
adc
inc
or
xor
fs
jb
push
or
mull
pop
mov
gs
dec
shrl
enter
je
mov
fmuls
pop
push
sub
dec
int
js
and
icebp
lret
jo
popf
cmp
icebp
push
mov
ja
dec
add
jge
lcall
cmpsl
stc
pushf
flds
pushf
mov
lock
call
xor
mov
cmp
jae
ds
cmp
mov
xor
jmp
cltd
pop
mov
int
cld
lcall
roll
nop
push
bndldx
rol
adc
das
lods
and
push
pop
jne
les
cli
adc
push
shll
inc
cmp
xchg
jnp
aad
test
movsb
jl
xchg
mov
add
jnp
ror
inc
out
in
cwtl
inc
xchg
or
or
adc
adc
xlat
repz
rclb
jno
paddsw
or
shr
nop
int3
jb
hlt
mov
lds
ljmp
dec
or
push
pushf
pop
sub
pop
jl
pop
imul
adc
push
push
js
hlt
pop
jbe
lds
lock
js
sbb
pop
lods
nop
notl
in
fs
lods
xchg
adc
and
ret
jecxz
cltd
ss
stos
xor
mov
inc
jbe
mov
mov
xchg
jno
cli
fstp
push
notb
mov
pop
cmpsb
popa
jae
jge
icebp
sti
dec
pop
mov
fisubl
cmp
or
mov
sub
loope
sbb
fs
out
jno
dec
xchg
enter
flds
xchg
push
jl
push
or
pop
jecxz
adc
jo
test
mov
leave
lds
mov
pop
sbb
js
xor
mov
stc
xchg
lea
adc
pop
fs
mov
sti
jecxz
rolb
filds
push
xchg
ds
xchg
cmp
loop
push
movsl
xchg
xchg
cs
xor
lcall
lock
cwtl
addr16
push
filds
pop
xor
gs
aad
xlat
sub
push
add
adc
mov
cmovne
cmc
mov
inc
sbb
loop
lret
or
fdivs
xchg
mov
lret
pop
adc
mov
inc
push
add
dec
shlb
mov
mov
dec
in
insb
rorl
in
mov
sahf
shrb
sbb
adc
inc
out
rcr
insb
out
add
outsl
jbe
mov
out
fstl
nop
stos
pop
inc
add
adc
push
xor
mov
mov
ret
inc
test
mov
push
sbb
repz
insb
test
out
jle
adc
push
js
cmp
shr
scas
lcall
jmp
ds
mov
movsl
xchg
mov
loop
mov
mov
sbb
lret
mov
pushf
or
jg
addl
icebp
mov
fwait
jl
or
in
addb
push
es
jecxz
das
pop
fst
mov
fsts
cmove
add
dec
inc
mov
pop
and
stos
addr16
pop
xor
sahf
lretw
and
mov
xchg
fs
sbb
jmp
addr16
jmp
movsl
flds
lds
sbb
and
push
imul
lds
inc
inc
xchg
jnp
adc
sbb
ljmp
loope
call
mov
and
clc
cmpsl
xor
cli
fsubrl
sub
fcomip
adc
xor
sti
cs
push
icebp
pushf
xchg
lds
test
inc
test
in
mull
jge
inc
pop
push
pushf
sub
and
aas
push
mov
jnp
adc
das
js
subb
dec
stos
jl
fmull
cmpsl
imul
and
icebp
or
cmp
inc
jnp
adc
mov
repz
mov
mov
orl
push
cmc
test
ljmp
pop
dec
add
mov
or
mov
mov
decb
xchg
insl
xchg
ret
mov
sbb
enter
sub
pop
inc
enter
pop
jnp
and
pop
in
test
cmp
push
jns
and
into
sbb
div
mov
out
and
inc
pop
jmp
adc
cmp
adc
mov
dec
stc
iret
pusha
fwait
movsl
in
movsb
and
pushf
pop
mov
cld
inc
cli
mov
pop
pusha
pop
js
xchg
mov
xor
dec
add
inc
xor
sub
sar
adc
aam
jg
aas
pop
jg
clc
enter
mov
stos
call
push
add
push
loop
insl
jb
inc
nop
cmp
aas
mov
dec
and
mov
pusha
cmpsb
xor
dec
inc
inc
or
mov
xor
mov
int3
addr16
mov
out
sti
dec
aad
inc
in
ss
sbb
jp,pn
inc
cmp
mov
in
rcll
leave
cmp
pop
jnp
frstor
cmp
in
out
xor
xchg
sub
mul
mov
out
mov
push
jge
stos
std
fisubs
in
out
cs
sub
in
in
inc
fnstsw
mov
xor
xchg
jge
jge
jg
hlt
and
je
xchg
add
cmc
push
aam
mov
enter
pusha
dec
popa
in
mov
jge
pop
mov
nop
pop
inc
xor
dec
mov
sti
loopne
cs
fsubrl
mov
adc
lahf
mov
xchg
and
jns
repz
mov
int
lcall
insb
notl
push
push
inc
je
fs
push
fchs
movsl
lock
xor
lret
icebp
shufps
jb
aas
fdivl
jne
push
or
cmc
cmc
push
adc
sbb
pop
test
jmp
mov
leave
pop
ss
pop
into
or
insl
in
outsb
mov
insl
decb
test
xor
sbb
andl
shlb
aad
nop
cwtl
fmull
mov
push
push
nop
sahf
jo
cwtl
enter
test
add
mov
xchg
jge
into
maskmovq
negl
sti
xchg
cli
mov
andb
dec
mov
sbb
je
in
cmpsl
xchg
mov
inc
cmp
jmp
sbb
or
and
sbb
sbb
test
aam
xchg
das
shlb
je
lret
lret
push
call
cmc
in
jecxz
addr16
sub
push
inc
int
xchg
stc
ret
les
and
mov
fisubs
jns
inc
jmp
lea
movsb
inc
lahf
jb
popw
mul
int3
fstps
sub
mov
ret
mov
and
insl
and
mov
xchg
mov
ljmp
popa
out
lret
xchg
add
ds
mov
sbb
iret
nop
cmpsb
cmp
sub
shrl
xchg
sti
xchg
jnp
xchg
gs
mulb
fldcw
dec
aam
scas
mov
dec
lods
sub
mov
sti
xchg
inc
adc
int
ror
sahf
xchg
add
inc
hlt
lods
cmp
jmp
adc
scas
shrl
ds
outsl
xchg
sub
cmp
mov
push
push
hlt
mov
test
sbb
mov
test
inc
enter
push
lret
pop
or
je
out
lret
sbb
add
loope
popf
mov
aas
in
dec
popa
or
pop
leave
arpl
adc
into
fcmove
rcr
shll
jbe
add
lret
movsl
add
adc
cmp
xor
or
cmp
or
lods
mov
cmp
pushf
fbstp
idiv
fldlg2
int
inc
loope
test
das
and
jb
sub
push
xlat
loop
insb
into
in
pop
xor
add
or
mov
out
push
imul
mov
xchg
hlt
inc
ljmp
or
mov
adc
loope
das
lods
ja
push
lret
shrl
stos
xor
stos
push
out
and
gs
cmpb
enter
insb
mov
aam
mov
pop
leave
or
jp
jg
push
mov
popf
stos
pop
mov
repnz
mov
adc
and
mov
inc
inc
fdiv
aaa
mov
jnp
inc
fnsave
in
xlat
xor
mov
mov
jb
test
scas
xchg
rcll
stos
repnz
icebp
xchg
mov
mov
push
cmp
je
ret
rol
push
imul
sbb
mov
add
and
sbb
repnz
outsb
push
xor
scas
push
popf
mov
enter
inc
cwtl
clc
cmp
xchg
js
pop
sub
xchg
adc
fxch
xlat
sbb
lcall
adcl
dec
ret
xor
test
push
imul
jecxz
xor
loope
xor
sub
mov
je
or
cmp
xor
mov
jb
in
cmpsb
dec
pop
mov
jns
in
inc
lds
int3
mov
in
adc
mov
js
jns
je
in
inc
orl
das
test
lods
pop
cmp
fistpl
sbb
mov
clc
dec
aam
add
inc
sbb
xor
push
bound
cmp
mov
push
lahf
subb
pop
cmpsl
mov
gs
sti
and
es
repnz
cld
lcall
fidivrs
or
cmp
push
sub
pop
nop
subb
aas
and
push
into
pop
std
mov
lret
pop
mov
cmp
cmp
mov
insl
add
repz
adc
and
bound
cmp
fsts
andb
loopne
and
test
out
mov
mov
or
sarl
cmp
icebp
adc
jns
cmpsb
push
mov
jae
in
cmp
sub
push
pop
lahf
arpl
les
jae
loop
sub
lods
push
cmc
les
xchg
push
movsb
lea
lock
sbb
in
daa
sbb
std
stc
xlat
xor
mov
dec
xchg
pop
rcll
shrb
lock
outsl
xchg
jge
out
pusha
fs
inc
shrl
mov
test
gs
xchg
out
arpl
xchg
adc
and
movsb
push
cmpsb
fsubrl
std
imulb
aad
imul
imul
iret
mov
lret
cwtl
mov
scas
or
xor
fildll
cmp
in
in
lea
xchg
adcl
addl
add
loope
mov
enter
mov
or
adc
cmp
jg
push
sub
imul
bound
sarb
aam
cli
sbb
ljmp
cwtl
and
mov
push
lods
mov
push
add
mov
cwtl
cmpl
cmp
pop
mov
jb
imul
jmp
sbbb
dec
data16
jmp
ja
out
lret
call
sub
push
dec
stos
pop
mov
cmp
push
jle
sub
cmc
scas
outsb
sub
mov
pop
jecxz
push
pop
xchg
add
mov
jns
addr16
outsb
push
and
push
mov
push
lock
inc
xor
rolb
cmpsl
mov
jge
pop
or
mov
push
mov
jb
subb
into
pop
sub
push
into
aaa
fcmovnb
cmp
fcmovne
repz
xor
mov
popa
aaa
sub
mov
leave
or
jecxz
lods
data16
ljmp
adc
xor
push
lods
pop
loope
ss
or
pop
mov
pop
sub
leave
test
nop
xchg
xor
cmp
testb
sub
insl
push
add
notb
stos
loopne
subl
dec
mov
ror
lahf
mov
mov
jae
cmp
ret
shrd
mov
push
pop
popa
ljmp
popa
pop
sbb
in
stc
and
jle
insl
inc
lock
mov
jnp
call
mov
dec
arpl
in
add
mov
mov
cmpsb
popf
mov
sbb
pusha
sub
and
hlt
mov
mov
xchg
adc
inc
aas
sarl
pushf
sub
xor
sbb
aad
stos
loopne
test
mov
dec
test
xchg
jle
loopne
xor
jae
sarb
adc
dec
pop
and
fcomp
fldcw
cmpsl
aam
movsl
enter
jmp
ss
mov
inc
and
jmp
ss
test
loop
mov
stos
pushf
sbb
dec
js
testl
jno
or
jmp
ljmp
pop
mov
pop
repnz
mov
imul
or
dec
pop
add
out
fisttps
dec
push
cmp
mov
xor
push
xchg
pop
sub
arpl
xor
sub
xlat
mov
sbb
jg
jmp
xchg
ljmp
rcrb
push
push
pop
lahf
push
shrb
sub
jnp
movsl
lret
jb
push
imul
mov
loopne
adc
in
pop
add
aad
lret
xchg
imul
or
pusha
lea
cmp
ds
insl
mov
cmpsb
call
data16
push
imul
inc
cmp
rorb
shll
cltd
inc
dec
mov
pop
outsb
fsts
pop
push
js
clc
mov
and
ror
iret
mov
lods
scas
jno
push
jmp
in
cmp
mov
loop
mov
jge
movsb
add
inc
xchg
repz
popa
test
out
jbe
out
fdivrs
sub
pop
pop
mov
xor
ret
mov
nop
sbb
rol
loopne
or
das
pop
dec
sub
scas
orl
cli
icebp
mov
lahf
xor
ja
pushf
pusha
sub
mov
mov
pop
popf
ljmp
fcomi
pusha
mov
push
stos
mov
cmp
test
scas
or
popf
jmp
in
mov
popf
fcoml
inc
push
pop
jge
push
inc
or
das
sub
mov
lahf
jb
vmread
gs
pop
mov
pop
sbb
xchg
in
fdivrl
in
dec
dec
rcrb
stc
jns
jecxz
lock
mov
subl
or
rolb
test
test
adc
lea
or
ds
push
pusha
ret
out
sbbl
fs
shl
push
fs
push
ss
mov
daa
mov
cmp
mov
sahf
sbb
sarb
lods
mov
inc
dec
sbb
stc
outsl
lea
enter
adc
mov
mov
addl
cmp
int3
adc
xchg
enter
icebp
out
inc
inc
dec
sub
jecxz
icebp
mov
jnp
add
cmp
sbb
add
mul
mov
cwtl
jmp
and
jne
aaa
xchg
push
scas
ja
js
js
loopne
adc
inc
mov
pop
sarl
mov
xor
adc
insb
and
xor
mov
adc
test
mov
dec
adc
call
cmp
insl
jnp
cmp
lock
and
js
adc
in
xlat
arpl
test
movsb
ret
mov
cmpsb
inc
mov
xor
sub
mov
je
frstor
dec
lahf
or
xor
imul
jo
jno
and
arpl
aad
ret
mov
ret
pop
out
sbb
and
ljmp
mov
pop
dec
rolb
cmpsl
sbb
lea
sbb
or
bound
cmp
add
out
popa
jl
mov
outsl
dec
adc
xchg
pop
cmp
shll
icebp
movsl
cmp
inc
and
ret
jbe
xchg
mov
and
stos
mov
cs
loope
loope
ss
pop
lret
push
mov
lds
push
dec
push
jg
dec
dec
mov
push
movsb
xor
scas
inc
push
sysret
cmpl
inc
outsl
shrb
test
out
push
jno
fisubs
cmp
add
and
fisubl
xchg
push
mov
scas
xchg
gs
mov
and
pop
adc
dec
dec
in
cmpsb
xlat
stc
iret
popf
orl
xor
xchg
add
add
stos
mov
in
rorl
in
inc
jno
sub
push
jmp
fcomps
xchg
pop
cmpsb
jl
hlt
jo
cmp
sti
lcall
rclb
dec
sub
xchg
mov
stos
adc
mov
out
xlat
sub
jg
push
icebp
jg
jo
mov
jg
test
push
pop
and
sahf
sbb
sahf
xor
rorb
aam
sub
mov
mov
dec
xor
insl
push
movsb
cmp
addr16
idiv
negl
inc
sbb
notl
fwait
add
icebp
jl
cld
loope
cmp
pop
mov
adc
fadds
push
mov
push
add
loopne
inc
inc
fs
inc
dec
lods
jns
and
xchg
lods
gs
daa
push
xchg
mov
addr16
xchg
sbb
mov
sub
pop
rcr
cli
cmpsb
and
movsl
fiaddl
int3
mov
dec
data16
int
test
dec
jae
xchg
mov
movsb
mov
pusha
and
dec
int3
stc
jae
push
push
push
xchg
cwtl
push
and
xchg
pop
push
xchg
dec
mov
sub
stc
lods
iret
cltd
xchg
sbb
push
lret
jge
test
pop
pushf
lods
dec
or
push
add
mov
cld
mov
std
mov
outsb
nopl
pop
push
cltd
ret
add
les
cmp
les
aam
and
add
in
jmp
dec
dec
fs
mov
cmp
loope
mov
xchg
inc
test
frstor
popf
popf
and
imul
scas
dec
lods
das
or
pop
mulb
mov
pop
stc
cwtl
xor
pop
jl
pop
jns
pusha
leave
cmpsl
and
sbb
jg
ret
std
jbe
outsb
popf
xchg
xchg
into
jle
fld
js
inc
xchg
ja
inc
hlt
mov
mul
cli
pop
incb
push
test
fisttpl
push
dec
push
cmp
popa
iret
xchg
lock
fs
ss
mov
in
ror
xchg
sub
sub
insl
pop
mov
inc
xor
in
push
dec
cmp
test
ret
mov
pop
cmp
dec
and
dec
ficoms
or
jp
xchg
jle
mov
sahf
push
sub
cmp
push
lcall
ds
and
inc
or
cltd
jg
dec
lcall
pusha
popa
xor
sahf
xor
mov
mov
iret
or
cli
dec
dec
iret
sbb
jecxz
mov
mov
xchg
add
negb
push
xchg
cmpl
dec
mov
mov
lock
sub
xchg
add
addl
push
dec
in
loopne
pop
lahf
mov
outsb
sti
cmpsl
fld
push
mov
push
sub
jl
dec
push
fmuls
pop
jns
push
push
push
lret
jns
jmp
repnz
mov
xlat
xor
je
inc
mov
and
pushf
std
mov
aaa
add
dec
mov
jge
scas
mov
shrb
mov
push
cwtl
xchg
jecxz
jbe
icebp
movsl
rcrl
lock
dec
sub
es
jbe
daa
mov
imul
and
shr
outsb
repnz
dec
adc
cmpsb
mull
jmp
mov
movsb
adc
mov
jo
dec
outsb
sbb
and
fiadds
jp
xchg
ret
cmpl
out
stos
dec
fdivs
and
mov
dec
stos
inc
shll
xchg
xchg
test
fcmovnu
pop
add
xchg
sar
repz
cli
sub
nop
push
cmp
jbe
push
xchg
push
lock
xchg
add
mov
pop
and
or
es
lret
push
and
mov
arpl
jmp
ret
ja
mov
xlat
add
neg
sub
adc
in
xlat
cmp
xchg
mov
test
or
das
and
dec
int
adc
idivl
jp
jns
xchg
loope
cmp
adc
out
fldt
mov
xchg
ljmp
test
cmp
out
shll
int
ss
loop
pushf
mov
iret
inc
or
fsubrp
mov
push
addr16
xor
jne
cmp
and
pushl
mov
call
dec
in
shrb
add
aam
shlb
sub
ret
push
and
and
pop
scas
mov
jnp,pn
push
fwait
jae
and
addr16
add
mov
sbb
mov
xor
loopne
adc
jge
xchg
fldl
aad
adc
xor
scas
pusha
push
testb
adc
and
out
pop
call
insb
gs
pop
shlb
inc
pop
xchg
jl
or
push
ljmp
sbb
mov
fistl
lahf
fimuls
stc
add
xchg
movsb
inc
and
mov
add
popa
jb
mov
mov
test
mov
sti
pushl
mov
sti
mov
les
aaa
fisttpll
stc
sbb
sti
incl
and
enter
int
loopne
sti
mov
daa
scas
bound
sbb
test
sub
sti
enter
inc
inc
stos
xchg
mov
inc
cli
rolb
push
mov
bound
movsl
or
fwait
lret
imul
sub
push
sti
dec
daa
dec
das
add
and
jne
in
enter
decb
jg
les
sahf
das
or
loope
add
add
mov
je
shlb
scas
jo
cs
das
neg
sub
and
test
sbbl
push
mov
imulb
sub
xchg
adc
mov
sarb
lret
sub
out
adc
out
das
push
rorl
add
hlt
mov
cmpsl
jb
mov
dec
mov
push
addl
daa
shrl
in
andb
mov
cmp
adcl
mov
push
jns
mov
dec
pop
jge
fnstcw
jmp
rcr
repz
cmp
imul
dec
adc
fwait
cmp
pop
pop
shrl
jp
idivl
movsl
sbb
mov
inc
fildll
ja
cli
jno
or
fstps
clc
pushf
rcrl
popa
lods
test
pop
cmp
push
inc
sbb
std
cmp
clc
inc
dec
vmwrite
xor
into
or
ljmp
inc
dec
cmp
inc
cmp
sub
daa
lods
xchg
ret
lcall
mov
ret
pop
adc
out
loopne
test
daa
imul
popf
out
push
and
pop
add
sub
xor
loopne
fistpl
std
dec
cld
fstl
sbb
dec
mov
mov
xor
or
or
jmp
lds
dec
jmp
push
les
pop
xchg
loop
jno
inc
popl
divb
and
mov
out
data16
jbe
pop
lret
cmp
inc
pop
or
add
js
jp
arpl
lea
shlb
jecxz
adc
sub
adc
ja
xor
sti
movsb
push
sbb
test
les
pushf
pop
cmpsb
inc
rorl
add
js
mov
sub
mov
gs
pop
push
gs
mov
dec
and
test
inc
adc
loop
push
in
jle
in
pop
scas
mov
mov
dec
jmp
lods
mov
and
popa
cmp
and
int3
pop
dec
loope
aas
fldl
push
pop
aad
dec
jbe
mov
pop
sbb
ljmp
mov
imul
inc
mov
and
inc
sbb
pop
scas
arpl
mov
sub
xchg
pop
mov
and
int
fdivrs
jns
mov
mov
ror
inc
jnp
mov
mov
sarl
push
std
std
mov
stos
pop
xchg
adc
dec
push
xchg
mov
cmpsb
leave
lods
pop
fs
ret
xlat
dec
jnp
es
dec
imul
fistps
inc
dec
aam
add
adcb
lock
insl
jno
sub
filds
mov
mov
enter
adc
pop
or
ret
dec
insb
hlt
fdivrs
xchg
hlt
mov
dec
imul
mov
pop
imul
ficompl
in
sbbl
jne
test
mov
std
jge
stos
lcall
jg,pt
cltd
test
scas
jg
das
les
adc
and
xor
mov
mov
xor
aam
jnp
leave
scas
xor
stos
adc
repnz
jle
pop
jg
mov
outsl
je
add
in
pop
repz
jl
push
mov
jp
adc
lods
stos
mov
in
inc
cmp
xchg
and
push
xor
int3
mov
mov
dec
shrb
jns
adc
jle
sbbl
fmull
popf
imul
cmp
loop
sub
in
inc
and
es
mov
mov
jae
aas
pop
insl
xchg
test
mov
inc
pop
inc
sbb
push
and
pop
xor
lcall
xor
adc
push
lods
addr16
fsubs
jp
cld
adc
stos
mov
dec
iret
jo
push
in
mov
xchg
cld
dec
mov
aad
call
xor
and
push
hlt
cwtl
dec
or
repnz
mov
xor
int
in
stos
daa
cwtl
sub
xchg
push
popa
stc
mov
mov
fwait
inc
cli
xorl
push
daa
test
stos
cs
loop
mov
xor
xor
stos
mov
pop
add
in
mov
mov
push
in
cmp
fwait
adc
xor
addr16
shl
dec
aad
adc
stos
sub
mov
lds
pop
mov
ret
mov
jns
mov
dec
lahf
repz
je
sarb
jmp
in
push
push
xor
inc
fnstsw
sbb
sbb
mov
xchg
inc
inc
sbb
cmp
sahf
and
mov
cltd
and
subl
in
xchg
fmuls
lea
cmpl
cld
jle
cmc
pop
jp
movsl
in
mov
inc
pop
stos
movsb
repz
out
sbb
dec
lds
bound
bnd
push
cli
int
ret
mov
dec
ljmp
movsb
test
movsb
inc
jp
jno
negb
mov
fs
xlat
cmp
push
aas
adc
inc
adc
test
mov
jb
push
push
pop
inc
bound
jmp
and
shll
push
adc
inc
cld
aas
lods
jo
sbb
movsl
test
bound
sti
sub
loop
lock
and
sbb
jp
xchg
or
mov
repz
pop
in
mov
hlt
adc
pop
out
cli
xor
int
jp
rcrb
add
arpl
dec
outsl
hlt
js
dec
repz
data16
add
push
adc
insl
mov
loop
aad
fs
dec
or
mov
outsb
repz
int3
adc
mov
inc
out
sbb
or
ja
lret
pop
push
into
lea
cmc
push
mov
adc
xor
gs
movsb
cmp
pusha
and
in
push
jne
fildll
lods
testb
pusha
inc
mov
repnz
xlat
out
inc
stos
inc
mov
shll
test
jbe
aam
sub
clc
push
mov
mov
and
adc
call
jo
adc
int
outsb
or
xor
incl
jbe
mov
jle
mov
sbb
add
rclb
pop
ret
or
es
out
or
dec
dec
stos
pop
mov
aaa
lahf
pop
and
mov
mov
cmpb
sub
fwait
cwtl
js
dec
mov
fs
or
enter
outsl
lds
fsubr
mov
push
repz
or
movsl
popa
push
pop
push
xor
mov
movsl
das
test
lods
sub
and
cmc
in
pop
push
pop
in
push
or
mov
pop
cmpsl
inc
pop
sub
and
fcoml
clc
sbb
test
std
pop
jb
jp
sbb
and
mov
pop
outsl
pop
cmc
insb
into
cmp
push
mov
mov
js
push
mov
jmp
inc
aas
sbb
dec
das
mulb
out
pop
mov
orb
xchg
pop
xchg
rcrl
cmpsl
addr16
push
test
and
jno
sub
test
ss
add
and
mov
hlt
pop
int3
pusha
outsb
jmp
cmp
shll
jo
adc
imul
mov
xchg
les
sub
loop
cmp
xchg
aaa
loopne
nop
cmpsb
jmp
in
test
mov
ljmp
outsb
es
in
cmp
sbb
push
mov
mov
push
movsl
insb
bound
mov
mov
repz
sbb
aaa
xchg
inc
sahf
push
jnp
ss
cmp
push
push
insb
push
mov
popf
push
jnp
adc
jecxz
loop
pop
cmp
pop
sahf
out
repnz
push
or
sbb
mov
stc
push
outsl
add
and
dec
scas
and
or
hlt
mov
iret
lcall
or
pop
jae
ret
shlb
stos
and
fcomps
inc
sub
xor
xchg
adc
add
inc
mov
mov
ss
jnp
inc
add
int
frstor
scas
test
mov
pop
inc
fisttps
iret
scas
jo
xchg
sub
push
test
jns
inc
lods
mov
inc
mov
fsubr
cmp
dec
add
sbb
pop
ljmp
fldcw
add
dec
xchg
add
fsts
sub
push
test
mov
push
shlb
divb
mov
or
xchg
adc
arpl
push
xlat
test
call
aam
sub
jns
shrl
pop
jg
mov
insl
xchg
lcall
add
je
pop
fs
negl
or
cmp
ljmp
mov
fmul
aas
pop
push
pop
jle
lcall
cmp
adcl
and
add
mov
js
pop
ds
xchg
push
iretw
mov
mov
leave
cmc
mov
inc
cltd
jmp
cmpsb
jmp
or
dec
aad
pop
sbb
cs
test
pop
test
bound
lret
fs
mov
ds
enter
daa
fsubs
mov
popf
mov
inc
mov
inc
or
inc
cmp
mov
daa
mov
or
stos
adc
mov
rol
aam
sub
jmp
mov
movsl
insb
jne
mov
sbb
rcrl
nop
or
jne
jae
mov
mov
jo
sbb
adc
xor
stos
int
sub
into
in
push
cli
data16
or
lcall
lock
fwait
xchg
cmp
push
shrl
test
mov
mov
xchg
jg
push
xor
pop
inc
sub
loop
mov
mov
add
test
iret
cmc
sbb
xchg
into
insb
ja
in
cmp
popf
mov
repnz
xchg
aad
pushf
cs
fbld
sbbb
out
xchg
sub
aad
mov
js
cmc
fbstp
es
les
lock
jmp
jns
pop
inc
ds
add
sbb
push
ja
xchg
mov
clc
addr16
push
xor
js
sbb
mov
inc
sub
pop
sti
leave
cltd
stc
sbb
push
decb
push
aaa
decl
into
lea
insl
outsl
push
inc
in
mov
adc
pop
insl
cs
shll
shlb
mov
test
jmp
pushf
pushf
xchg
mov
cli
fdivrs
cmpsb
in
jno
push
pop
fists
push
mov
bound
xlat
push
jmp
xor
push
icebp
addr16
cmp
outsl
mov
add
xchg
outsb
add
add
dec
mov
xor
or
gs
pop
incl
into
repnz
iret
push
add
shlb
das
test
out
sbb
lods
xor
es
dec
aas
mov
jecxz
sub
fistpl
sub
sub
shll
xchg
adc
xchg
in
lock
sub
xchg
lret
addb
test
dec
push
scas
push
sub
cmp
jmp
xchg
add
mov
xchg
mov
bound
cmpsb
into
repz
sbb
stos
ficompl
out
into
lock
fs
cmpsb
outsl
lock
dec
adc
pop
sbb
or
jno
sub
pusha
or
push
or
mov
es
dec
jns
xor
js
inc
imul
add
loop
repz
mov
roll
xchg
pop
cmpsb
fs
dec
sahf
and
inc
xchg
inc
in
lret
sub
dec
cmpl
xor
sahf
shlb
lods
mov
cli
fstpt
aam
loopne
cmc
in
sub
or
mov
mov
mov
gs
add
mov
xor
mov
add
cmp
inc
xchg
aas
mov
cltd
push
and
outsb
mov
testl
push
lock
xchg
aaa
adc
or
addb
xor
sub
out
fstl
gs
mov
mov
pop
int
ljmp
lds
mov
mov
nop
hlt
pop
push
addl
push
aad
scas
in
cmc
mov
sub
cltd
push
jne
or
xorl
ret
adc
and
xor
sti
dec
stos
xchg
xor
aam
push
xchg
push
mov
lods
jb
and
dec
xchg
add
push
jg
and
loop
dec
dec
in
mov
iret
insb
mov
mov
add
addr16
dec
fwait
and
stos
jno
pop
cmp
arpl
iret
fwait
dec
fnstsw
lea
faddp
jb
jnp
nop
in
or
jp
int3
push
sbb
lret
cmpsb
cmp
mov
mov
jecxz
pop
cltd
rcll
cmp
jp
push
loop,pn
sbbl
fistps
lds
pop
pop
jns
xor
out
mov
aas
and
adc
loopne
rcl
pop
in
outsl
in
sbb
sbb
dec
in
into
push
pop
xchg
cmp
mov
fildl
insl
push
adc
test
repnz
in
or
dec
in
mov
pop
xorb
inc
fwait
movsb
xchg
dec
leave
xchg
and
inc
scas
cmpsl
mov
push
push
mov
or
repnz
das
adc
stc
lret
jno
aam
lea
sub
popa
repnz
leave
mov
adc
out
xchg
addb
aas
gs
imul
insl
repnz
mov
inc
sub
cmp
ds
mov
xchg
sbb
sbb
test
mov
hlt
cld
das
sbb
adc
lods
in
pop
inc
fisttpll
lret
outsb
outsb
sub
outsb
push
cmpsl
or
or
mov
dec
inc
lods
daa
push
pop
outsl
mov
cmp
icebp
fcomi
in
popa
or
les
je
out
nop
loopne
ror
dec
jnp,pn
adc
ds
mov
inc
and
mov
push
xor
aas
out
xor
xchg
xchg
pop
adc
gs
enter
cmp
inc
push
jge
bound
mov
pushf
or
pop
xor
mov
fcomi
cltd
mov
add
adc
sbb
sbb
dec
rorb
mov
sbb
dec
xchg
sub
jmp
test
mov
fsubs
pusha
lods
hlt
adc
sbb
out
adc
and
mov
mov
popf
mov
decb
pop
pop
push
cmc
push
inc
pop
jmp
inc
js
inc
jbe
in
add
mov
fucom
imul
cltd
ret
in
adc
xchg
dec
std
aaa
scas
aaa
mov
dec
inc
jmp
gs
fdivs
xchg
cld
xlat
xchg
cmpsl
mov
mov
sbb
lock
shrb
xor
adc
lahf
jns
rorb
inc
outsb
test
gs
cmp
jge
imull
cmp
sbb
mov
xor
mov
or
and
jno
leave
inc
inc
xor
dec
ret
sub
lds
jle
or
popf
jge
shr
jnp
jp
xchg
das
push
out
xchg
jecxz
inc
and
lods
aam
sbb
js
jae
add
insl
cmp
addr16
jne
or
add
mov
mulb
or
ja
cmp
lock
cmpsb
push
cmp
lds
cli
cmp
mov
and
and
nop
cmp
das
cli
in
cli
mov
mov
int3
mov
mov
rcrb
fnsave
outsb
push
add
std
popf
aaa
in
jecxz
inc
lock
and
mov
and
icebp
data16
push
fwait
mov
mov
sbb
out
sbb
cli
popa
pop
or
cmp
push
adc
mov
iret
mov
xor
pop
mov
and
sbb
xlat
ja
ret
sub
jne
fadd
sti
adc
outsb
push
stc
push
mov
lret
out
in
mov
mov
jmp
pop
jl
mov
push
popf
inc
push
sbb
cmpb
fildl
cmpsl
pop
inc
sbb
es
das
and
xor
lcall
test
lock
xchg
lea
cmp
adc
or
scas
outsl
shrl
shlb
lock
in
or
iret
xchg
mov
jbe
or
out
fucomp
or
shrb
fldcw
pop
int3
inc
rol
inc
mov
and
add
stos
push
sub
rcrl
mov
mov
adc
cmp
jmp
arpl
dec
hlt
fwait
lds
cmp
addr16
insb
aas
ja
push
fcomps
pop
adc
dec
and
sbb
mov
aas
pop
cld
cmp
mov
inc
cmp
jo
pusha
rol
aad
push
and
inc
fsubrl
pop
pop
sbb
xorb
xchg
mov
movsb
or
movsb
sub
stc
aas
xorl
clc
jp
repz
gs
and
insl
fs
call
stc
fstpt
cld
mov
mov
fadds
push
adc
inc
sbb
mov
aad
add
rolb
aad
sti
roll
sbb
adc
stc
shrb
testl
mov
das
fdivs
sbb
adc
xchg
pop
xor
adcl
add
cmpsb
mov
lea
rcrb
in
push
or
inc
add
ljmp
inc
mov
inc
sti
repz
shrb
and
scas
pop
push
and
lods
xchg
cmp
mov
sahf
xor
test
xor
lods
jae
or
sub
jmp
loopne
mov
jae
and
lods
dec
stc
adc
lcall
sbb
mov
sahf
push
xlat
aad
xchg
pop
ret
pop
cmpsl
pusha
jnp
loope
mov
test
lret
in
or
pop
cmc
adc
mov
cmpsl
pop
push
mov
cmpb
das
repnz
sbb
jg
dec
mov
inc
pop
mov
pop
stc
adc
xchg
movsl
mov
jge
add
inc
sbb
mov
ds
out
xor
xchg
xor
sub
popa
icebp
sub
test
dec
pop
xchg
or
jb
pop
mov
shr
sbb
in
ss
mov
sarb
inc
ds
dec
inc
pop
xchg
push
lds
dec
pusha
inc
inc
mov
ljmp
sub
stos
pusha
out
insb
add
jle
mov
mov
and
cltd
jl
jecxz
adc
sbb
call
cltd
pop
aam
icebp
ljmp
adc
adc
enter
push
shlb
in
scas
inc
dec
fsubl
mov
enter
sub
adcb
mov
mov
dec
test
pop
bound
mov
mov
mov
adc
sbb
pop
sbb
imul
fwait
inc
sbb
mov
xchg
outsb
sub
ljmp
inc
inc
cmovg
lods
cmp
scas
aad
and
mov
push
xchg
insb
inc
popf
call
pop
cld
ja
outsb
dec
mov
mov
cld
pop
pusha
adc
add
aam
int
nop
push
xchg
add
pop
js
jp
inc
loop
lock
fimull
shrl
loop
adc
dec
xchg
cmp
les
mov
xchg
mov
lcall
shlb
mov
enter
jg
xchg
xor
jb
orb
mov
mov
pushf
push
sti
test
pop
data16
lods
scas
xorl
add
loope
and
bound
add
hlt
xor
cli
inc
inc
mov
jge
dec
mov
rcr
cmp
lea
xchg
leave
sbb
adc
es
jb
and
test
loop
aam
jae
imul
jb
movsl
mov
cwtl
or
add
imul
xchg
mov
outsb
push
cwtl
jmp
orl
inc
mov
pusha
push
enter
push
dec
and
sub
dec
or
pop
jge
push
pop
lret
mov
test
ja
bound
in
in
inc
mov
rcrl
xor
hlt
xchg
outsb
dec
fndisi(8087
mul
lea
adc
ret
and
or
fstpl
xor
jg
pop
fnstsw
add
shl
fistps
sbb
loop
sbb
sarb
fdivrs
push
gs
mov
dec
scas
xor
movsl
push
decl
mov
jmp
jg
aas
insl
xchg
ljmp
cli
inc
sbbl
push
lods
orb
mov
cld
lcall
xlat
push
imulb
lcall
loope
dec
mov
sub
stc
js
sub
movsb
inc
fbstp
test
mov
adc
add
mov
outsl
xor
popa
rorl
mov
push
jbe
imul
and
outsb
mov
jmp
icebp
leave
bound
xchg
xlat
stos
nop
jmp
sbb
or
imul
adc
rol
inc
ret
push
jbe
sub
insl
xchg
jo
mov
push
or
fwait
cmp
into
mov
lds
sub
es
push
addr16
jp
ds
cmp
fsub
cltd
es
jle
pcmpgtb
sarl
cmp
mov
repnz
ret
mov
sub
aas
sbb
push
addr16
mov
dec
push
add
mov
loop
and
icebp
mov
dec
adc
lds
bound
mov
sbb
dec
andb
mov
pop
arpl
pushf
adc
imul
mov
iret
bound
cmp
dec
popa
mov
sbb
push
cwtl
imul
je
inc
pop
icebp
sbb
mov
into
movsl
shr
nop
mov
mov
mov
push
sbb
xor
or
insl
scas
fstpt
jg
clc
pop
push
shll
rcrl
cli
sbb
inc
dec
imulb
ljmp
pusha
fs
out
in
xor
decb
cmp
ficoml
outsb
dec
cmp
es
inc
test
cmpsb
cld
ret
mov
push
hlt
xchg
pop
dec
repnz
push
aam
pop
jmp
mov
mov
inc
inc
getsec
gs
fldcw
pop
das
mov
into
rcrl
cltd
imul
xchg
xlat
jb
jecxz
enter
imul
mov
jle
push
pop
pop
inc
outsb
call
cld
lret
and
mov
insb
cld
mov
cmp
mov
mov
mov
cmp
cld
movsl
jne
lods
dec
push
or
lods
out
mov
pop
or
push
push
xchg
xor
or
sub
xchg
dec
cmp
cwtl
bound
adc
shll
sbb
mov
mov
mov
or
sbb
sub
mov
jl
or
fnstcw
fisttps
push
aas
mov
add
outsl
incb
mov
mov
or
insl
movsb
add
movsl
jae
pop
sub
mov
pop
mov
jp
sbb
xor
push
or
imul
sub
and
mov
adc
cmpsl
add
and
xchg
jbe
mov
push
imul
adc
jne
fwait
dec
push
lret
lret
mov
lcall
push
xor
mov
push
push
fldt
pop
dec
push
add
mov
mov
hlt
add
xchg
andl
mov
and
fdivl
cmp
in
cs
or
testb
push
xchg
icebp
frstor
adc
add
push
and
add
dec
idivl
jge
xchg
add
or
inc
mov
push
or
movsb
fwait
pop
out
bound
popf
cli
push
or
pop
jp
push
add
sub
negb
out
adc
and
nop
or
rep
repnz
scas
sub
cmp
jnp
je
subb
dec
adc
dec
fs
clc
mov
pop
insl
lea
push
lret
sub
inc
ds
push
test
cwtl
dec
lcall
movsb
lret
mov
pushf
pop
pop
cmp
dec
imul
mov
cmp
mov
repz
in
subl
xchg
adc
into
pop
xor
pop
adc
rorb
pop
cmpsl
lods
xchg
jle
adc
out
lcall
sbb
lahf
or
fnsave
fldenv
push
in
int
lock
fs
mov
into
fcomps
inc
inc
js
pop
xchg
movsb
push
mov
cmp
div
fcmovnbe
xchg
mov
and
aad
mov
inc
mov
inc
pop
mov
cmp
nop
popf
icebp
call
dec
aam
dec
aaa
movsl
adc
sub
inc
pop
fists
mov
mov
in
cwtl
push
iret
scas
das
cmp
into
pushf
dec
addl
inc
lods
inc
adc
arpl
out
bound
pop
fidivs
xor
sub
js
jno
enter
mov
jg
arpl
xchg
add
jbe
je
inc
std
pop
icebp
pop
xchg
adc
pop
in
mov
jl
and
filds
cmp
popa
call
xor
push
or
dec
dec
movb
shll
mov
lahf
and
mov
pusha
push
mov
leave
adc
dec
dec
inc
jmp
dec
cmpsl
pop
mov
jl
scas
and
dec
sahf
js
mov
jns
cmpsl
cltd
jg
pop
inc
std
loop
jmp
je
stc
or
sbb
pop
dec
inc
or
and
into
mov
xchg
mov
pop
aad
add
into
mov
mov
and
daa
pushf
push
push
sbb
enter
cmp
shll
out
sbb
xchg
aam
mov
stc
mov
xchg
icebp
pop
ja
lcall
push
shrl
push
mov
push
repnz
mov
stos
xchg
lods
push
lock
pop
lret
mov
test
lret
stos
fcompl
call
sbb
mov
leave
mov
or
testb
test
jl
inc
push
cli
sub
dec
ljmp
fidivrs
xchg
pop
xchg
lcall
cmpsb
lcall
pop
fdivl
hlt
jnp
mov
fcoml
mov
cmp
dec
pop
repz
mov
ret
enter
inc
cmp
xor
movsl
cld
into
mov
cmp
dec
test
adc
pusha
loop
lods
sbb
movsl
shll
stos
cpuid
mov
jne
mov
push
fbstp
mov
outsb
fstps
jg
or
adc
sbb
xchg
mov
es
in
into
gs
lods
leave
push
lahf
cmp
jmp
das
lea
in
cwtl
inc
test
enter
or
xchg
adc
fiadds
jae
mov
jo
ss
xor
pmuludq
add
and
push
imul
std
cmp
cmpsb
adc
jb
jae
out
mov
xlat
pop
sub
ljmp
frndint
push
mov
aam
shr
xor
fdivrl
xor
mov
xor
and
mov
xor
mov
lahf
mov
pop
ljmp
movsl
mov
enter
sub
xchg
imul
jmp
rcrl
push
dec
and
shl
lcall
add
mov
jecxz
sub
push
or
leave
adc
fwait
popf
cwtl
mov
xor
lods
pop
out
test
sti
test
setne
sbb
test
rorl
cs
cmp
pop
ficompl
popa
aam
movsb
push
xchg
repz
cmp
jbe
lcall
cmc
sbb
lahf
jg
sub
pop
fisubs
xor
leave
lcall
adc
push
push
iret
sub
jns
sahf
mov
pop
ljmp
ss
stos
out
ja
or
jns
fisttps
sbb
std
mov
lea
int3
movsb
movsb
rcrl
pop
lahf
mov
dec
inc
push
mov
jmp
mov
dec
ss
push
ret
inc
xchg
rolb
sub
adc
adcb
mov
pop
bnd
dec
add
push
fildl
and
jp
and
sti
or
inc
inc
popa
dec
outsl
mov
call
pop
cmc
push
xor
fbstp
xchg
inc
shlb
inc
arpl
adc
subb
daa
aas
aad
mov
sub
rclb
adc
mov
pusha
mov
adc
inc
pop
lock
repnz
fs
pop
push
stc
fbld
repz
pop
sub
mov
js
xor
in
adc
push
mov
dec
dec
cmp
fwait
add
insl
in
test
sbb
inc
lods
mov
lea
sub
cmp
test
imul
jp
sub
mov
cs
xchg
jle
inc
jbe
jp
mov
jmp
fisubl
ret
xchg
mov
jno
cmp
loope
mov
out
popf
pop
jo
pop
pop
pusha
imul
xchg
xor
pop
fs
xchg
int3
xchg
add
ret
adc
leave
xchg
scas
cmpl
cmpb
jp
or
mov
xor
jno
xchg
jne
xchg
scas
jns
pop
pop
shlb
cli
xlat
inc
xor
xor
leave
lods
in
clc
icebp
push
shl
lret
hlt
xor
mov
stos
push
push
mov
insl
js
inc
bound
sbb
cmpsl
shll
call
lods
aaa
into
xchg
mov
xchg
ficoms
xor
sub
das
lods
jne
mov
fs
dec
mov
adc
in
sub
pop
gs
ficompl
ret
inc
sub
repz
push
into
inc
cmpsb
lods
mov
imul
ret
pop
sub
scas
pop
xor
js
mov
gs
js
insl
jl
and
ja
insl
icebp
cmp
sar
fs
in
scas
icebp
scas
fstpt
fstpt
icebp
push
daa
aad
pop
cmp
ret
mov
and
xor
push
add
sub
sub
push
fdiv
push
jle
xchg
rcrb
and
dec
cli
mov
jmp
loope
or
push
cld
adc
test
sub
jno
and
test
xor
enter
dec
dec
and
scas
xor
repnz
or
cmpsb
sti
notb
adcl
cmc
cmc
fwait
jbe
imull
sbb
adcb
cwtl
adc
mov
call
ret
lcall
call
xchg
int3
in
sbb
popa
das
scas
mov
stos
jo
bound
in
pop
shrl
pop
dec
sbb
or
outsb
scas
or
push
in
roll
pop
jo
adc
incb
out
ja
push
cmp
xchg
stos
inc
push
mov
mov
out
das
addr16
sbb
dec
mov
pushf
jae
lods
call
mov
insl
sbb
addr16
cwtl
addl
jns
mov
sub
dec
xchg
sub
mov
mov
lock
dec
fimull
and
in
dec
fdivrp
dec
movsl
adc
pushl
addr16
je
fbstp
push
adc
out
in
or
xor
or
xor
inc
or
mov
cmp
adc
fsubs
fisttpll
out
or
xor
adcb
jns
jne
clc
or
aam
lahf
flds
loope
sub
cmp
fnsave
jne
mov
push
in
jecxz
sahf
xchg
fidivrs
xor
ljmp
xor
jge
sub
fsubrp
fbld
loopne
jne
sbb
mov
scas
stos
lods
movsl
sti
rcll
outsl
test
scas
dec
mov
cmpsl
out
fcmove
xor
mov
xchg
fwait
js
aaa
dec
stos
inc
aam
push
pop
mov
dec
rcrb
push
jbe
cld
fistpl
xchg
mov
pop
mov
cltd
sbb
gs
cmp
les
cs
and
xchg
das
cmp
ljmp
iret
imul
sub
sub
xor
and
ret
ret
popf
xor
pop
adc
sub
sbb
or
push
push
cmpsb
xlat
stos
ljmp
rep
call
mov
into
in
lret
or
adcb
jp
loopne
cmc
push
cmp
adc
inc
jae
sahf
mov
xchg
push
cmp
cld
lods
xchg
xor
nop
dec
cltd
jecxz
icebp
popa
jg
into
lods
ret
or
push
adc
xchg
jg
mov
pushf
xchg
adc
cltd
sbb
fcomps
cmp
jns
ds
test
push
pop
cmp
lret
rorl
pop
or
jp
sub
daa
xchg
mov
jb
aaa
stc
sahf
imul
mov
neg
fistpll
pop
in
jg
pop
dec
addr16
jge
adc
rolb
cmp
lea
sbb
fmull
out
dec
daa
popa
mov
cs
in
cmp
push
cli
iret
std
enter
cmp
les
test
xor
movb
mov
imul
lods
mov
dec
xchg
fwait
aam
ss
ret
push
repz
and
ja
cs
jne
mov
dec
cli
out
sarb
lcall
mov
fisttpl
push
aas
or
int3
movsl
sbb
add
xchg
inc
or
pop
jbe
or
sar
negb
pop
push
std
pop
adc
mov
mov
or
data16
pop
std
sets
dec
shll
pop
sub
push
cmp
mov
and
xor
addb
aad
sbbl
xor
icebp
imul
inc
daa
cli
adc
icebp
add
ja
dec
cmp
mov
or
aas
xor
dec
enter
imul
pop
mov
sbb
cmpsb
xchg
mov
repnz
stos
leave
xchg
scas
mov
out
xor
or
inc
push
cmp
in
xchg
leave
scas
push
push
ja
mov
loopne
daa
scas
jne
push
inc
inc
addr16
cmp
jno
push
icebp
push
scas
dec
add
jbe
mov
loop
imul
int
xorl
and
je
push
inc
xchg
out
cli
adc
popf
ljmp
sbb
pop
fstpt
pop
mov
mov
xor
push
aaa
dec
or
dec
clc
out
pop
repnz
mov
iret
cmp
mov
fs
push
inc
daa
js
xchg
ficoms
movsb
jne
stc
xchg
cmp
insl
jb
testl
aam
fs
sbb
sar
pop
xchg
pop
pop
pop
cmc
fs
pop
jmp
fcmovnu
inc
adc
rorl
je
xor
add
nop
test
jg
cmp
scas
iret
fnsave
into
rorl
pop
sbb
jne
jecxz
fwait
add
and
mov
push
push
mov
int
mov
or
ret
insb
inc
popa
mov
cmp
push
mov
fsts
cld
dec
dec
cmp
adc
dec
jg
insb
scas
test
xchg
mov
add
lret
mov
adcb
xor
xor
sbb
dec
sbb
xor
jle
shlb
cmpb
jns
sub
sbb
pop
outsl
adc
or
cmpsb
aad
pop
jbe
int3
das
mov
or
gs
mov
cltd
mov
add
loopne
lret
ret
mov
adc
test
rcrl
cltd
loope
fs
ret
aaa
int3
xchg
pop
adc
push
cli
pop
inc
inc
stos
sbb
pop
ja
aaa
inc
loopne
cmp
test
out
push
dec
call
xlat
popa
mov
lret
movsl
shrl
mov
pop
loope
dec
adc
mov
adc
leave
sahf
inc
mov
xchg
mov
sarl
adc
xchg
ror
cmp
sub
je
loope
jne
mov
ja
xchg
jmp
fidivrs
jae
dec
xchg
jae
adc
sbb
mov
mov
jno
pop
pusha
fidivrl
cmp
xchg
das
aad
sub
xor
mov
mov
and
sarb
cld
adc
pop
jns
and
cmp
fsub
in
push
adc
outsl
aad
mov
xor
lret
lcall
inc
pop
pop
mov
jae
inc
pop
cmc
pop
loopne
ficompl
and
push
inc
insl
fstpt
stos
sub
adc
jmp
inc
insl
push
add
inc
mov
cld
popf
and
inc
add
sar
aas
sub
jmp
gs
fisubrs
or
sub
imul
adc
cltd
xchg
cmc
sahf
push
jecxz
out
add
roll
pop
mov
adc
xchg
cld
ja
mov
mov
cmp
add
xchg
popa
scas
lret
hlt
inc
jno
mov
add
aas
sub
mov
nop
or
clc
and
je
shll
sbb
add
adc
enter
sbb
lods
outsb
fsubrs
xchg
mov
or
and
sbb
dec
or
fdivrl
mov
mov
fldl
mov
rcrl
fldt
not
fwait
inc
jae
adc
lds
stos
and
ja
pop
xchg
cmpsb
daa
adc
inc
repz
or
pop
scas
sbb
idivl
test
push
xor
lds
into
movnti
jge
aas
ret
xlat
fildll
lret
aad
mov
add
pop
jne
mov
mov
in
jb
and
test
mov
dec
sbb
push
push
adc
xchg
enter
aaa
dec
enter
es
and
add
mov
xchg
outsl
imul
int3
into
push
and
sbb
jno
dec
aas
stos
imul
sbb
mov
adc
fidivrl
leave
sbb
or
or
mov
int3
cmpsb
insb
jo
in
jbe
js
loope
call
sahf
jecxz
jbe
mov
mov
inc
mov
pop
jecxz
or
jbe
das
pop
cmpsl
and
test
cltd
outsl
mov
inc
cmp
jmp
cmpl
pop
xor
jecxz
adc
repnz
fsub
ljmp
stc
lea
sahf
xchg
jge
cltd
adc
push
fisubrs
icebp
out
mov
setg
xlat
lahf
mov
sbb
test
in
adc
cmp
leave
mov
mov
insl
jge
and
mov
pop
scas
fcmovne
out
push
in
or
dec
cmp
movsb
mov
stos
in
lcall
pop
ds
mov
sti
sar
outsl
xchg
cmpsl
and
ficompl
dec
mov
leave
lods
sub
es
decb
inc
ljmp
sbbl
dec
sub
sbb
mov
cwtl
inc
fmull
es
sub
mov
adc
testl
int
leave
sub
ret
shll
push
add
inc
lret
mov
ret
cltd
sarl
pop
add
jbe
clc
push
subb
js
lds
add
cmp
jg
aam
sub
lods
cld
lea
jle
clc
stc
repz
adc
adc
mov
in
sbb
mov
add
jp
xchg
push
push
test
xchg
add
and
mov
dec
cmp
mov
cmp
pop
push
leave
scas
mov
in
push
cmpsl
rorb
fnstcw
cmp
jecxz
push
sbb
stos
movsb
int
rolb
aam
sbb
inc
push
or
push
jo
push
dec
xlat
jl
jp
mov
call
sbb
and
sub
repnz
imul
scas
push
insl
add
dec
ret
outsl
fwait
jae
mov
or
mov
xorb
xchg
dec
xchg
jo
loop
fdivs
sub
add
or
icebp
lcall
xor
or
push
mov
cmp
ja
or
mov
add
inc
fs
xchg
cmp
popa
inc
int
cmovg
aad
leave
subb
fnstcw
fwait
out
mov
xor
movsl
das
push
into
jp
sarb
xchg
sbb
jbe
std
cmp
scas
mov
jbe
in
mov
add
mov
dec
adc
mov
sub
fdivrs
or
enter
adc
data16
sub
sbb
adc
xlat
cmp
dec
inc
dec
loopne
in
negl
imul
cmpsb
stos
fisttpll
test
into
shl
pop
xchg
nop
push
jecxz
jae
mov
cmp
mov
xchg
and
pop
movsb
add
negl
push
ja
push
cli
scas
jnp
jecxz
dec
popa
jg
sbb
adc
das
mov
add
xchg
daa
xchg
cmc
xchg
jl
xchg
mov
outsl
lods
sub
xchg
and
movsb
or
addl
stc
icebp
js
rcrl
jae
imul
fdivs
out
lods
dec
sub
dec
sbb
cmpsb
push
cmpsl
pop
sub
ss
add
scas
sub
dec
sbb
inc
add
gs
push
daa
ret
inc
inc
mov
shll
test
mov
xchg
fcomi
pop
jecxz
shlb
xchg
adc
ret
pop
mov
xchg
dec
fisttps
xor
adc
es
cmp
cmp
shll
sbb
out
pop
jbe
pushf
adc
repz
in
js
shlb
sti
mov
sub
into
sub
push
rorb
jnp
dec
imul
je
mov
push
bound
lds
push
and
loop
pop
lods
inc
rcrb
jb
pop
cltd
mov
ret
push
imul
int
xchg
cmc
mov
ds
mov
inc
incb
mov
test
fistpll
push
lahf
dec
outsl
lret
mov
adc
es
push
fnstcw
mov
ds
pop
mov
into
js
rcll
les
popf
subl
or
insb
pop
or
mov
jnp
jl
and
push
mov
nop
and
push
les
ss
xor
adc
es
add
pop
sbb
mov
in
rcll
notl
imul
dec
mov
shl
and
mov
lret
cmp
cs
imul
sbb
dec
mov
and
cmp
enter
sub
out
test
cltd
enter
adc
pop
jne
mov
cmpb
inc
push
notb
lods
stos
pop
in
pop
mov
push
fs
fadd
and
nop
cmp
xchg
into
out
xchg
jl
leave
sbb
push
in
push
push
mov
jbe
xlat
inc
cwtl
repz
xor
sbb
jl
jb
enter
scas
jb
add
fildl
sti
xor
or
cmp
mov
sub
cld
jle
adc
dec
mov
imul
lret
pop
inc
cmp
cmpsl
daa
pop
enter
movsb
jns
imul
push
jo
pushf
adc
ds
jmp
fstps
jo
or
mov
sbb
repnz
dec
scas
cmp
sbb
inc
scas
xchg
rol
add
lods
jnp
and
gs
loopne
call
jo
stc
mov
fdivp
sysexit
mov
enter
insl
dec
mov
jne
stos
lret
mov
ss
adc
inc
mov
lea
jae
sub
cmp
ja
lods
ret
ret
mov
das
mov
test
mov
or
pop
inc
pop
insb
rol
add
iret
ds
dec
andl
je
fdivr
push
or
mov
cmp
jno
es
movsb
rcrl
ffreep
repnz
outsl
pop
mov
pop
sub
ja
lea
cltd
insl
push
and
mov
or
loope
push
fcoms
cmpsl
loope
loopne
in
push
add
or
jl
jo
cmc
hlt
add
and
repnz
lods
lock
add
test
cwtl
bound
or
push
or
adc
push
mov
push
mov
out
or
das
add
add
cmpsl
hlt
inc
mov
pop
jp
xchg
pop
js
jmp
stc
sub
sbbl
jg
fldcw
dec
cmp
iret
inc
fcompl
push
jno
sbb
mull
testb
dec
out
rolb
push
dec
lds
add
pop
pushf
test
jnp
hlt
cmpsb
mov
add
xor
fadd
int
push
dec
shl
aad
stc
aas
add
je
js
loop
leave
insl
scas
hlt
and
mov
xor
jns
std
jbe
adc
cmp
mov
sub
lcall
les
mov
mov
test
dec
or
into
fildl
mov
call
and
pop
xor
fsts
jb
push
divb
mov
jb
xchg
pop
shlb
and
push
out
fs
dec
cld
and
and
xor
push
push
push
mov
lods
or
sti
jns
xor
cmc
addl
out
test
ljmp
repnz
sub
loop
inc
add
pushf
or
xchg
jnp
sub
es
xchg
scas
jle
xchg
data16
mov
leave
inc
ret
mov
jl
inc
dec
mov
das
jecxz
xchg
dec
mov
icebp
mov
aad
in
cwtl
mov
inc
or
scas
and
outsl
outsl
repnz
pop
xor
push
cs
dec
sti
jo
or
xchg
shll
and
js
sbb
lea
lods
or
outsl
popa
lcall
cmp
add
clc
fsubp
sub
or
and
leave
mov
inc
sub
andb
mov
dec
xlat
loope
push
cmpsb
mov
inc
push
mov
xor
jp
pushf
testb
daa
and
jp
inc
dec
call
or
push
and
jnp
shlb
loope
and
inc
sub
or
xor
int3
inc
jmp
andb
push
addb
and
arpl
int3
popf
loopne
push
or
daa
cmp
out
dec
inc
psllq
orl
cmpl
arpl
cmpsl
jne
in
enter
int
dec
push
jnp
fldcw
jae
pop
lret
jg
or
inc
inc
dec
cmc
in
and
lahf
dec
int3
ljmp
push
scas
gs
push
mov
lcall
fbld
cmc
lock
test
dec
mov
mov
cli
mov
test
cmc
js
push
in
insb
clc
enter
loop
pop
cli
cmpsl
sarl
scas
push
adc
xor
movsb
out
test
fs
jbe
jp
stos
jl
adc
add
pop
aam
sbb
inc
lds
fwait
jbe
loope
loope
or
jnp
ret
test
cmp
call
ja
cwtl
pushf
jne
mov
inc
add
pop
or
xor
pop
data16
insb
shl
into
dec
mov
imul
mov
jg
sbb
sub
jmp
inc
in
inc
scas
cs
fimuls
jecxz
mov
fcomps
or
hlt
inc
pop
cmp
or
cwtl
mov
outsb
fwait
sub
jl
cmp
lds
adc
sahf
jge
jnp
cmp
shrl
jne
and
orl
test
pop
push
cmp
jle
push
add
stos
dec
insl
aas
mov
add
xor
test
es
arpl
insl
insl
push
les
add
and
out
mov
sub
xor
loope
push
call
call
xor
out
push
add
sub
push
xchg
lods
fsubrs
incb
mov
movsb
out
sbb
fildl
inc
dec
fildll
xchg
bound
mov
sub
add
mov
ja
dec
test
mov
daa
sti
fsubrs
movsb
cmp
jne
roll
sub
lret
rorl
aad
pop
mov
cmp
pop
test
in
icebp
rcrb
mov
stos
push
push
jno
stos
mov
std
fcom
sub
jb
xlat
shrb
movsl
lods
lods
outsb
jne
popf
leave
jbe
sbb
add
xchg
insb
cmp
xchg
push
scas
xor
pop
mov
rol
or
jge
cli
dec
pop
adc
jbe
stos
push
xchg
or
xchg
lock
loopne
scas
mov
or
push
test
shll
aad
out
cmpsl
jmp
lret
arpl
lcall
mov
mov
movsl
bound
xchg
push
dec
mov
push
mov
inc
push
jbe
push
mov
inc
add
push
pop
inc
and
cmp
fisttps
mov
mov
das
jne
movsl
mov
jle
pushf
mull
sbb
mov
jae
jle
fs
pop
push
in
cmc
out
or
lret
xor
in
incb
sahf
dec
push
imul
push
jne
and
loopne
call
add
xchg
or
imul
jp
push
or
enter
shll
mov
inc
cld
fsubp
clc
ss
mov
movsb
aaa
adc
ret
or
test
fdivrs
inc
and
fwait
shlb
sbb
out
leave
int3
sarl
dec
inc
sbb
adc
adc
dec
pop
in
sub
in
mov
bound
testb
sub
xor
jecxz
cmp
sub
dec
fwait
lods
pop
loopne
dec
fstpt
sbb
inc
imul
lock
repnz
mov
inc
test
dec
js
stc
mov
bound
push
and
lock
ss
or
dec
mov
clc
call
jp
aaa
jmp
mov
sub
stos
lret
repz
xchg
lret
sbb
push
sbb
gs
sub
shr
mov
jmp
in
adc
cmpsl
sbb
int
xorl
adc
pop
mov
mov
mov
adc
push
test
lcall
sbb
fcom
mov
test
lds
stos
inc
cmc
mov
pop
pop
addl
jmp
mov
fcomps
cmp
in
push
fdivl
add
sti
jo
jae
cmp
sub
xchg
pop
stos
push
repnz
popa
popa
aas
aaa
sbb
pushf
daa
cli
stc
mov
mov
out
rclb
out
popf
outsb
push
cmp
pusha
into
mov
mov
call
mov
dec
sahf
fdivrl
push
jae
xchg
jb
pop
xchg
push
cmp
out
ficompl
xor
cld
lds
loop
xor
pop
test
cs
mov
out
fimuls
inc
cmp
repnz
pop
mov
in
insb
addr16
insb
sub
xchg
jmp
xor
pop
cmpl
lods
movsl
es
fs
mov
fisubrs
push
dec
mov
daa
mov
popa
adc
jno
mov
data16
fwait
int
push
pop
mov
addr16
ret
decl
dec
test
int
icebp
fcomps
sbb
jb
shll
sub
mov
dec
sub
imul
cmpsb
pop
in
mov
lods
lock
inc
in
aaa
loopne
sub
popa
loope
jmp
leave
jecxz
or
mov
xor
dec
pop
adc
push
ffreep
gs
adc
leave
scas
cmp
aam
sbb
rcrb
cmp
insb
adc
cmc
xor
cltd
call
lcall
dec
xchg
loop
pop
ret
mov
inc
mov
aam
lock
mov
leave
push
cmc
cld
sbb
cmpl
les
data16
push
mov
mov
andb
mov
je
xor
pushf
mov
aad
jbe
aas
push
out
test
out
je
jl
sub
xor
jecxz,pn
cltd
insl
push
sub
cld
xor
imul
mov
adc
add
out
push
imul
sbb
xor
inc
sbb
xchg
add
adcl
fwait
or
roll
jo
in
lods
notl
xor
in
inc
cs
sbb
push
int3
mov
jecxz
jo
mov
adc
insl
pop
iret
mov
fs
dec
mov
scas
ljmp
aam
cmp
adc
popa
cmp
daa
arpl
call
ds
lcall
jecxz
inc
ds
arpl
into
nop
jge
test
test
rclb
inc
add
mov
pop
mov
push
aaa
decb
fs
sub
cltd
mov
lret
and
aam
pop
dec
adc
lds
ljmp
xchg
mov
aam
fnsetpm(287
leave
push
adc
ljmp
outsb
in
jmp
stc
insb
cwtl
loop
mov
cld
or
jbe
scas
inc
xchg
xor
jge
repz
push
adc
in
mov
xchg
inc
xchg
sarb
inc
mov
sarl
and
xchg
mov
inc
sub
or
bnd
jge
cmpsb
or
mov
aas
dec
jae
xor
sti
push
push
push
jg
and
nop
xchg
inc
xor
roll
insb
mul
daa
fs
push
cmpsb
pop
mov
rolb
cs
lahf
aaa
sbb
imulb
or
dec
or
pop
sbb
ret
test
xchg
int3
push
jle
lcall
xor
push
movb
cs
fsubl
inc
add
pop
test
xchg
pushf
cmc
and
mov
daa
ss
mov
inc
or
mov
inc
cwtl
and
bndldx
adc
mov
dec
fstpl
les
sub
fs
aaa
sub
cmpsl
je
push
adc
mov
add
into
jp
jp
not
pop
mov
mov
inc
push
lcall
inc
mov
je
xor
jne
test
lea
lock
add
data16
inc
jb
or
push
loope
xlat
das
adc
aad
in
push
nop
cli
dec
stc
push
mov
mov
xorl
in
xchg
mov
sub
mov
dec
femms
pop
jnp
rorl
daa
out
insb
inc
insl
out
leave
push
fisubrs
xchg
sub
add
xchg
mov
lret
stc
mov
cwtl
ljmp
adc
sub
test
xchg
jbe
mov
or
rcrb
mov
bound
in
loopne
jae
addb
xchg
dec
or
stos
lcall
inc
xchg
add
jnp
mov
jp
rorb
sahf
push
dec
or
ret
inc
mov
fsubr
jne
inc
mov
jns
loop
leave
pusha
bound
jge
jno
sub
out
sub
xlat
lds
inc
bound
daa
sti
insl
das
or
cmp
clc
inc
andb
in
incl
push
js
idiv
fidivl
inc
xor
test
jl
push
aas
jle
push
int3
jmp
fisubs
sbb
xchg
sub
push
ficoms
and
pop
and
loopne
clc
fidivs
xchg
in
fnstsw
mov
or
xor
negb
insl
cmp
or
or
push
and
xor
out
insl
mov
testb
xchg
sub
jge
pop
jb
loope
ja
outsl
lahf
outsl
sbb
pop
mov
mov
mov
repz
in
js
or
or
sbb
hlt
or
fucom
test
filds
xchg
insl
mov
inc
imul
push
push
inc
test
pushf
movsl
out
sarl
mov
dec
push
out
mov
or
and
inc
repnz
xchg
mov
inc
loope
xchg
xor
hlt
push
fs
mov
cld
leave
icebp
jmp
andb
lods
sub
fwait
jne
sbb
jne
xor
daa
push
xor
test
xchg
mov
mov
mov
pop
xchg
xor
cmp
lret
loop
nop
int
sbbl
mov
mov
xchg
and
add
fstpt
sub
jb
mov
xchg
inc
fisubl
jecxz
push
nop
test
mov
jg
xor
ja
hlt
jmp
stc
lcall
cmc
mov
in
pop
xor
push
rcl
pop
filds
test
ret
sub
push
in
xchg
jg
push
mov
mov
sti
ss
xorl
movsl
adc
inc
or
push
push
or
cmp
xor
test
popa
pop
adc
jg
mov
xor
cli
mov
shl
cmp
or
sub
inc
mov
fisubs
out
push
pop
pop
cmp
mov
je
and
pop
cmp
mov
into
sbb
lahf
aad
js
jbe
and
dec
stos
fwait
push
test
rorb
cmc
mov
push
cmpl
jb
pushl
pop
mov
nop
cmpsb
incl
out
push
dec
mov
push
aaa
push
divl
xchg
insb
adcl
insl
mov
add
mov
fwait
mov
popa
mov
leave
arpl
push
cmp
arpl
fsubrl
jge
mov
dec
xor
and
lcall
std
or
sarb
addl
cmp
xchg
aad
mul
jecxz
jl
stos
movsb
iret
in
push
dec
jle
push
mov
or
fcoml
jb
mov
xor
outsb
and
cltd
mov
push
xor
add
popf
and
sub
mov
inc
mov
lret
movsl
jp
jns
mov
lods
jp
sbb
adc
outsb
push
push
sub
int
ret
int
push
testb
fisubs
xchg
insb
idiv
pop
mov
add
jb
das
xchg
mov
ficompl
sub
adc
cmp
mov
mov
leave
mov
mov
pop
inc
mov
mov
push
lcall
jae
nop
fstpt
push
and
lea
jmp
jg
popf
testb
dec
adc
in
dec
fst
jo
popf
pop
jne
mov
sub
adc
or
jne
sti
jle
push
std
pop
enter
sahf
pop
lret
pop
dec
jle
jl
sub
les
sub
or
fldl
in
in
insb
out
inc
enter
fiaddl
mov
mov
and
fbstp
sti
adc
aad
fidivs
xchg
in
adc
pop
ja
fadds
sbb
shll
out
mov
and
in
daa
adc
adc
rcll
sahf
out
sbb
sub
dec
jb
sbb
push
ljmpw
movsl
add
popf
xor
fwait
mov
int3
mov
and
push
sub
pop
sbb
cmpb
es
push
aaa
jno
lret
xlat
std
or
out
mov
aad
stos
sub
mov
jno
clc
and
mov
push
push
sub
stos
xchg
daa
jo
hlt
sub
mov
jg
shlb
sub
mov
sbb
pop
mov
xor
add
mov
hlt
sub
loope
sub
cmp
rclb
int3
sbb
stos
adc
sub
in
jge
xchg
insl
add
loope
jae
jmp
lcall
enter
popa
out
adc
lock
cmc
jns
test
push
mov
je
shll
mov
mov
pop
xchg
call
arpl
cld
das
out
lods
icebp
pop
loopne
adc
out
je
loop
inc
mov
cld
xchg
cmp
push
fildl
int3
fs
pop
pop
mov
lret
push
lock
adc
pop
aad
lret
add
loopne
ret
dec
adc
push
fstp
xchg
es
mov
xor
mov
roll
mull
cmp
ljmp
fld
scas
xchg
cltd
out
mov
fs
xchg
test
fnsave
cmp
sar
fs
inc
mov
or
jo
scas
pop
loop
imul
mov
dec
ss
inc
pop
fwait
ss
jne
mov
sub
test
ret
test
in
mov
clc
ss
popf
inc
xlat
cld
or
aam
adc
add
mov
jae
arpl
sti
and
inc
fcmovu
xor
xchg
mov
adc
mov
push
and
sbb
adc
icebp
in
xchg
xchg
jecxz
scas
push
lock
mov
mov
leave
xor
outsl
adc
xchg
fsubrl
stos
aas
ljmp
mov
mov
inc
pop
cmc
add
mov
daa
sahf
push
mov
ss
sub
leave
arpl
add
or
outsb
rclb
cmp
call
mov
out
fisubs
js
pop
in
loop
cmp
xchg
push
out
inc
xchg
jbe
in
ljmp
scas
in
add
cmp
mov
leave
fwait
sub
shlb
jo
mov
mov
std
lods
and
ds
movsl
pop
mov
sarb
movsb
fistpll
jo
int
mov
aas
pushf
call
mov
sti
mov
test
scas
dec
jmp
adc
mov
xchg
and
push
imul
inc
xchg
dec
sbb
mov
call
xchg
mov
mov
fisubs
imull
inc
cmp
mov
mov
cld
xchg
jne
sbb
push
adc
sbb
scas
aam
icebp
dec
pusha
pop
fwait
mov
add
loopne
and
lods
mov
mov
clc
lds
loop
fstpt
cmp
stos
in
add
enter
fst
jl
cmp
loopne
mov
test
xorl
adc
rcll
cmp
les
jne
pop
pop
add
mov
xor
stc
jge
leave
imul
fistl
out
adc
test
mov
and
roll
cmc
fnstcw
sub
cwtl
cli
adc
and
cmp
in
cmpsl
int3
mov
sub
push
pop
fiadds
in
imul
arpl
imul
xchg
incb
pop
loop
clc
push
dec
pusha
fldl
ja
adc
imul
sub
fwait
dec
je
out
pop
adc
lcall
mov
jmp
cmpsl
int3
push
fldenv
jbe
xadd
cli
jno
leave
arpl
das
jae
adc
mov
out
xchg
lcall
adc
jne
mov
mov
je
cmp
popf
or
leave
xor
jmp
cmp
cmp
xchg
jecxz
jne
push
push
cmc
sbb
xor
out
repz
aam
das
cmp
mov
xchg
bnd
pop
test
test
push
sbb
pop
mov
xor
out
in
inc
push
aas
sbb
mov
sar
and
sbb
fsubs
pop
pushf
and
mov
pop
out
push
inc
adc
sub
adc
xchg
or
or
jns
mov
shll
cld
cmp
inc
jbe
cmpl
push
aas
into
out
jnp
xchg
pop
and
scas
pop
jl
sub
lock
rolb
ljmp
jbe
mov
insl
pop
lcall
sub
add
les
pushf
scas
pop
pop
mov
movaps
in
xchg
mov
imul
mov
pusha
jnp
aaa
dec
scas
stos
push
gs
fcoms
lret
fisttpll
popf
test
and
nop
mov
adc
push
or
mov
jnp
and
sti
jg
mov
or
fcmove
lds
movsl
out
stos
mov
dec
or
mov
ror
and
mov
and
fdivp
sub
aad
es
xor
lret
dec
daa
sbbl
add
loopne
jns
cltd
nop
adc
jo
cmc
lret
je
push
inc
cmpsb
mov
add
addr16
ds
or
mov
cwtl
outsb
nop
lds
lock
adcl
mov
mov
cmp
loopne
add
pop
shr
pop
jno
lahf
stos
inc
lcall
cltd
lea
stos
jae
pop
in
cmp
rcrb
cwtl
inc
mov
adc
lds
push
adcb
cmpsb
fimuls
sub
aas
or
inc
stos
mov
jmp
cmp
mov
inc
or
cmp
aas
imul
fildll
mov
imul
xchg
test
jb
mov
jb
xchg
gs
mov
stc
jmp
jg
push
leave
test
les
dec
push
test
inc
xchg
dec
and
ret
into
add
aad
jp,pn
jnp
shrb
fwait
and
mov
mov
daa
xchg
cmp
jbe
scas
stos
xchg
jbe
sub
mov
pop
aas
pop
insb
mov
xchg
pop
pop
mov
out
mov
hlt
xchg
push
xor
outsb
xchg
stos
jle
xor
fbld
jmp
xchg
ret
dec
cmpsl
sbb
ljmp
push
int
iret
cmp
mov
cwtl
enter
xlat
test
inc
xchg
ds
insl
repz
push
rcll
xor
ds
sub
sbb
or
push
sub
push
add
xor
adc
jns
addr16
rcrl
repz
imulb
push
insb
xchg
insb
push
inc
lea
icebp
out
jmp
dec
pop
mov
cmp
fldcw
aas
cmp
jmp
jge
pushf
dec
jnp
xor
pop
ss
test
rcr
jne
aaa
xchg
sbb
mov
push
rcrb
xor
mov
sub
lahf
sub
nop
out
lahf
xlat
jne
je
fcomp
lcall
movsl
lods
fdivrl
inc
stos
push
push
or
rcr
cltd
mov
cmp
fcoml
outsl
add
inc
int3
mov
outsb
scas
into
pop
xor
and
or
sahf
out
stos
push
test
pop
mov
mov
nop
scas
stos
mov
cmp
cmpsl
jmp
gs
and
inc
sub
xchg
insl
iret
cmp
shll
dec
outsl
pop
sbb
adc
inc
pop
adc
jb
adc
xor
jae
test
mov
adc
movsb
call
add
sbb
pop
dec
pop
in
popa
lods
arpl
add
dec
xchg
jne
or
add
mov
cmp
shll
adc
lock
sub
sbb
pop
sbb
mov
pop
xor
adcb
leave
xorl
loope
dec
push
addr16
jle
cmc
cmp
popa
and
subb
sub
rcrl
adc
mov
fsts
rorl
xorb
int
stc
fsubrs
orb
ret
nop
test
les
mov
mov
inc
into
ss
inc
nop
and
ficoml
mov
lret
xchg
inc
ss
es
push
das
inc
jle
les
inc
xor
dec
ret
xor
mov
sub
hlt
das
jo
cmp
ret
mov
xcrypt-cbc
cmpsl
adc
mov
push
add
mov
mov
lcall
loope
cmc
dec
add
dec
inc
jl
lods
ja
in
and
cltd
or
leave
sbb
popf
in
scas
shr
vmwrite
pop
jl
mov
lret
negb
aad
mov
mov
fwait
icebp
and
loopne
insb
sahf
mov
lret
adcl
adc
pop
sbb
lods
push
cmp
pushf
aad
push
jbe
cmpsb
mov
dec
mov
repnz
pop
stos
and
push
mov
ret
mov
inc
xor
repz
add
inc
dec
push
mov
inc
scas
lea
and
mov
mov
or
inc
inc
mov
dec
and
xchg
mov
xchg
out
cli
lods
icebp
roll
int
mov
sub
inc
mov
ss
cmc
jbe
loopne
popf
inc
fidivl
decl
cs
inc
xchg
inc
inc
test
subl
push
push
push
pop
mov
sub
push
pop
cmp
add
sub
stos
sbb
jbe
sbb
xlat
rcl
add
fnstsw
sar
sub
sub
or
aam
push
push
iret
jb
or
sub
pop
pushf
mov
jmp
fcmovne
xchg
mov
push
fistpll
mov
push
dec
jae
xor
popl
test
jg
ss
dec
pop
xchg
jae
jecxz
fwait
and
push
inc
in
dec
jb
fucompp
xchg
pop
cli
mov
aaa
xor
movsb
in
sbbl
or
sbb
out
xchg
insb
jae
out
pusha
test
cmpsl
loopne
mull
popa
dec
jno
push
in
arpl
adc
add
hlt
movsl
test
mov
inc
cmp
mov
jg
cmp
jno
subb
stos
clc
adc
fimull
popa
xor
lret
icebp
push
das
mov
sti
lret
lds
incb
sub
lea
push
xor
push
fildll
into
cmp
cmp
xchg
cmp
mov
not
imul
xchg
js
es
fisubrl
imul
fstl
cltd
fldt
add
push
enter
notb
lahf
in
inc
fists
or
stos
js
bound
sahf
push
clc
xlat
ss
xorl
movsb
inc
dec
cmp
cld
mov
sub
xchg
hlt
cli
fdivrs
or
xchg
pop
ja
sbb
xchg
or
jge
lret
fistpl
cmp
mov
push
jnp
jmp
fisttpl
aad
ret
mov
nop
lods
test
aad
mov
outsb
mov
push
add
fadds
das
cwtl
or
mov
or
icebp
xchg
mov
mov
cmc
pop
sahf
les
test
add
in
in
out
sub
lcall
ljmp
jae
push
dec
add
jns
sbb
add
js
repz
jmp
inc
rcrl
xchg
push
xchg
iret
mov
rcr
ret
mov
mov
arpl
leave
popa
gs
push
stos
ds
push
mov
or
and
mov
test
jbe
push
jno
jne
stos
pop
and
mov
es
push
inc
mov
cli
dec
rorl
adc
jl
fdivrs
mov
inc
pop
sbb
sbb
lods
fimull
sbb
inc
mov
cmpsl
mov
outsl
lcall
sub
jae
les
in
mov
add
enter
inc
shll
add
int
repz
inc
xchg
push
xchg
fsubrs
dec
dec
call
cmp
movsl
or
mov
cmpsl
pusha
and
mov
xor
pop
pop
inc
pop
out
in
push
push
repnz
cmp
outsb
adc
cmp
jl
cmp
jecxz
push
xor
repz
dec
adc
testl
and
lods
popf
stc
ljmp
inc
sarb
fnstenv
cltd
cld
fstpt
pop
cmp
jno
inc
xlat
xor
cmpsb
sti
jmp
cmp
sbb
xchg
aad
xor
aaa
mov
adcb
or
dec
mov
adc
rcl
mov
ja
xchg
inc
outsb
ds
into
push
xor
repnz
xchg
sub
sub
into
sbb
fsub
in
sub
imul
adc
sbbb
icebp
xchg
int
idiv
sbb
dec
xor
lret
cmp
repnz
out
jb
imul
in
mov
sbb
lret
dec
pop
repz
push
mov
mov
mov
lea
fistps
cmp
ret
sbb
xchg
mov
mov
mov
into
sbb
jge
scas
inc
cld
nop
or
sbb
mov
sub
inc
in
pop
adc
das
mov
scas
mov
mov
xor
jecxz
adc
scas
cmpsl
lods
in
add
mov
inc
dec
xor
mov
push
outsb
mov
jo
jl
dec
outsb
fistl
push
adcl
adc
stos
jl
jp
xchg
adcl
daa
jge
add
loopne
or
inc
xchg
xchg
mov
jb
lods
rcrb
cmp
imul
fistpl
loope
adc
push
push
mov
pop
rcr
iret
rclb
dec
cmpsl
mov
out
or
stc
adc
in
int3
adc
mov
jb
movsl
and
xchg
movsl
lcall
stos
mov
bound
and
xor
stc
rcl
lcall
js
bound
imul
xchg
loop
sbb
sbb
add
and
idivl
mov
inc
jb
pop
mov
ds
xchg
jns
jnp
mov
xor
test
inc
aas
inc
jp
aas
mov
jbe
jp
mov
cmc
les
push
pusha
fstp
add
dec
sti
cmp
mov
out
cmc
push
jle
push
cmpsb
xchg
jns
cmp
idivl
pop
in
pop
insb
sahf
out
cmp
dec
push
or
inc
adc
pop
cmp
cmp
cmp
rorb
jmp
cmp
xor
cld
jne
mov
dec
je
daa
roll
imul
mov
repz
and
or
jae
pusha
leave
arpl
clc
int3
not
jae
ss
aas
xchg
jns
jns
jmp
jno
sub
daa
sub
xchg
inc
aad
pop
aaa
mov
sub
cmp
pop
cmp
push
popf
sti
ror
leave
cmp
lcall
xchg
cmp
in
jae
rcrb
jne
stos
adc
in
inc
fists
loop
je
mov
cmp
popf
movsl
push
xlat
pop
les
sub
dec
ds
dec
sbb
mov
test
sub
mov
cmp
cmp
add
leave
fmull
stos
movsb
cmp
jg
insb
jo
dec
mov
gs
ret
imul
push
cmp
sti
fxtract
int3
es
jns
dec
and
mov
clc
int3
adc
inc
mov
or
inc
push
push
lea
aad
lahf
imul
mov
and
jne
in
lret
push
lds
shrl
xlat
jne
roll
iret
stos
in
pop
sbb
aad
push
pop
sar
sbb
imul
outsl
push
xor
lahf
test
cltd
leave
aad
jp
lods
add
sbb
lods
loop
std
std
add
notb
sub
gs
add
sbb
imul
and
pop
inc
daa
pop
push
sbb
sub
lods
cmc
stc
sbb
jbe
je
mov
into
aad
sbb
loopne
lock
ja
pop
push
leave
ljmp
pop
xchg
inc
jl
loope
stos
and
jl
add
xchg
fsubrp
gs
loope
sbb
and
stc
rcrl
and
add
aaa
xchg
mov
or
xor
xchg
jns
fisubrl
in
pop
mov
sub
push
and
xchg
mov
fwait
call
rolb
adc
push
les
pop
aas
and
lcall
sarl
pop
repz
and
frstor
nop
jns
pop
js
jae
outsb
shrl
xor
ret
data16
je
xchg
inc
xor
jae
adc
inc
sbb
les
out
xor
mov
push
or
mov
fcmovb
or
inc
or
pushw
mov
sub
sub
lods
pop
mov
lahf
pusha
pop
call
xor
adc
lock
dec
xor
lret
xchg
mov
sub
mov
addb
stos
test
pshufw
mov
mov
clc
adc
pop
adc
rolb
insb
pop
sub
stos
ret
lods
cld
adc
pop
pop
lahf
pop
inc
push
pop
hlt
pop
sub
mov
sub
imul
mov
test
cwtl
add
out
aam
mov
lods
inc
rorb
in
addr16
aad
adc
stos
rcrb
js
mov
lods
stc
push
add
orb
mov
jae
cmp
adc
data16
mov
loopne
inc
jg
and
pushf
out
mov
fwait
dec
repnz
jmp
fcmovne
in
mov
xchg
xchg
jmp
iret
sbb
in
fwait
mov
jmp
shrl
aam
xchg
push
push
pop
into
js
jno
loop
pop
mov
or
je
cmp
lods
pusha
incb
out
stos
ss
xor
movsb
stos
ds
cwtl
in
test
adc
jne
insl
xchg
ret
sbb
push
pop
and
dec
sbb
scas
xchg
mov
mov
mov
pop
mov
sub
vmread
push
cmpsl
push
faddl
insl
xchg
sbb
jo
fmull
xchg
dec
pop
sub
je
aam
mov
add
sti
mov
or
ds
sub
in
lcall
dec
mov
xor
imul
test
stos
and
pop
jbe
rcrb
arpl
loopne
jmp
mov
xchg
sbb
push
filds
inc
xor
xchg
enter
xorl
gs
pop
fcmovu
ja
jb
test
out
cwtl
mov
mov
dec
dec
rclb
rcrb
pop
xor
pushf
pop
add
mov
shlb
mov
nop
cmp
imulb
mov
cld
mul
inc
jne
push
pop
addr16
adc
enter
sbb
xchg
inc
mull
cmp
call
insb
test
mov
in
cld
lock
pop
aam
ss
pop
xor
dec
lret
popa
xor
jg,pt
jbe
sbb
cmpsl
nop
mov
push
jecxz
and
xor
cmp
int
dec
repz
jno,pt
popa
push
fimuls
in
mov
cmp
in
mov
add
jne
inc
push
loope
fucomi
sbb
inc
adc
fbstp
dec
stos
pop
loopne
movsb
lcall
dec
call
cs
in
mov
sbb
jnp
pushf
cmp
aad
mov
lahf
sub
inc
loopne
jl
cmp
outsl
and
fadd
lods
sbb
es
mov
aad
pop
data16
push
lock
stos
shlb
cmpsl
inc
mov
ds
or
and
aad
addr16
inc
cmp
hlt
pushf
push
aaa
mov
fwait
jnp
repnz
daa
sub
xchg
fcompl
add
icebp
xchg
fists
pop
lods
loop
lea
and
add
sub
dec
pusha
pop
fwait
sbb
sbb
sub
aaa
pop
adc
inc
mov
push
dec
dec
sub
and
sub
push
add
test
push
inc
pop
mov
add
mov
insb
sub
mov
mov
movl
mov
inc
leave
rclb
cmp
push
jg
fucompp
mov
lahf
xor
cmp
idivb
mov
pop
mov
jns
cmp
mov
jae
dec
cmpsl
and
out
inc
out
test
sbb
xor
and
in
hlt
das
jmp
in
aas
jb
and
test
jne
xchg
inc
push
pop
xor
xchg
jbe
push
inc
push
ret
pop
les
pop
mov
scas
push
sbb
insl
and
imul
or
inc
inc
sbb
call
xor
xor
pop
add
jae
dec
movsb
jne
call
and
mov
out
inc
cld
shlb
out
adc
popf
cmp
iret
sub
mov
test
mov
pusha
pop
dec
ljmp
lahf
repz
test
arpl
popf
fimull
mov
add
cmp
jne
ret
iret
fstl
mov
stos
int3
sub
xlat
or
mov
aas
loope
fmulp
add
jns
repz
movsb
dec
cmp
std
push
rclb
jae
inc
xchg
fs
push
in
and
mov
inc
addl
cmp
fmull
jmp
and
repz
insl
mov
add
sbb
mov
movsb
addr16
mov
jno
add
out
inc
and
cmpsb
sbb
rcrb
mov
push
jae
mov
lds
push
pop
or
inc
pop
into
mov
add
repz
jne
dec
ds
cltd
cmp
adc
inc
aas
mov
cmc
mov
and
cmpsl
incb
fildl
pop
push
sub
imul
aad
std
lds
sbb
add
icebp
adc
out
ret
push
mov
fwait
push
xchg
shlb
sti
in
pop
inc
movsb
movsb
data16
.byte
mov
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
push
icebp
or
sub
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
in
in
or
inc
add
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
test
xor
fcmovbe
mov
aaa
jns
leave
mov
int
outsb
addb
adc
es
sbb
cmp
int
pcmpeqb
xlat
xor
iret
adc
aam
rcrl
iret
pop
shl
nop
mov
fcmovbe
push
aaa
add
stos
iret
cli
mov
jbe
xchg
cs
idivl
and
movsb
clc
loopne
mov
sub
jo
add
movsb
push
jno
pop
sub
es
fs
cmc
push
xor
mov
jl
xchg
sub
xor
push
push
cmpsb
shl
lret
shll
scas
out
mov
dec
test
pop
into
out
test
stos
or
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
movzwl
call
div
fs
xchg
ja
xor
pop
movzwl
add
mov
mov
add
pushl
pop
mov
xor
js
call
jmp
loope
hlt
sbb
fidivrs
ljmp
add
add
test
cmpsw
push
std
repnz
sar
lahf
in
mov
repnz
mov
popl
sub
mov
add
jmp
xchg
sahf
jg
xchg
sub
jne
jmp
in
add
push
dec
dec
outsl
jl
pop
mov
psubsw
incl
cmpb
enter
call
cmpb
sahf
out
lea
fisubl
ficomps
pusha
pop
cs
jp
pop
inc
rorl
lret
sbb
stos
lahf
loop
out
lahf
loop
int3
mov
add
dec
add
arpl
xchg
adc
leave
and
xchg
xchg
loop
ficomps
mov
sub
inc
stc
sub
lahf
jne
lods
das
jns
test
mov
jae
xchg
repz
leave
push
loopne
ficomps
or
xchg
repz
fistps
popa
jp
cmp
loop
fisubs
add
push
stc
fisttpl
push
pop
cmp
outsb
or
mov
popa
mov
xchg
mov
test
out
push
and
bound
movl
jnp
dec
rep
inc
dec
and
outsb
push
add
ds
xchg
out
scas
dec
adc
xchg
jle
orl
and
push
nop
pop
mov
das
inc
mov
out
cmp
in
sbb
fsubr
mov
jae
ret
loope
das
xor
push
pop
dec
sti
out
call
stos
mov
mov
cmpb
and
popa
std
shrl
inc
test
xchg
pop
adc
sub
mov
add
lahf
and
xchg
imul
notl
fs
mov
movsb
out
scas
mov
ret
dec
out
scas
mov
mov
jno
loope
je
or
xor
mov
imul
je
mov
clc
into
int3
pop
pop
fidivs
leave
loop
in
push
dec
dec
mov
cmp
sub
pop
inc
movsb
cs
popa
or
xor
jge
out
cmc
add
adcb
cmp
push
fnstcw
mov
pop
sbb
push
sub
test
pop
fxch
inc
les
testl
push
pop
push
push
lcall
xchg
imul
insl
push
and
jle
jns
xchg
mov
outsb
dec
scas
push
xchg
inc
loope
cmpsl
and
fldcw
test
out
push
test
cli
dec
fimuls
jne
inc
das
sbb
arpl
cmp
sbb
mov
loopne
outsl
je
mov
xchg
cli
scas
mov
fisttpl
inc
xchg
rcrl
repz
test
ja
jle
dec
je
scas
push
imull
mov
dec
mov
fcoms
adc
repz
adc
jo
push
sbb
insb
stos
push
mov
outsl
dec
mov
repz
adc
jo
xor
scas
mov
clc
pop
loopne
mov
and
outsl
xchg
fwait
sub
inc
sahf
movsb
mov
or
lahf
push
scas
mov
ds
pop
sub
loope
mov
rcll
mov
or
xchg
mov
dec
scas
repz
inc
scas
or
fs
scas
mov
pop
cmc
scas
mov
outsl
dec
sub
dec
mov
dec
jg
push
div
mov
outsl
stc
scas
mov
outsl
dec
or
pop
cmpsl
pop
jle
dec
jbe
pop
imulb
mov
dec
cli
scas
xchg
sar
repz
fdivs
mov
fdivs
popa
outsl
dec
jbe
push
sahf
jae
popa
dec
scas
nop
sub
sub
fs
arpl
xchg
sub
add
scas
mov
jecxz
icebp
mov
outsl
dec
sub
jmp
lock
sub
roll
sbb
icebp
popa
imul
outsb
insb
add
mov
jecxz
idivb
pusha
xchg
sub
cmc
sub
xor
lock
cld
xor
push
sbb
nop
shll
inc
mov
outsl
dec
jbe
or
scas
sub
cli
or
stc
sbb
mov
scas
cmp
and
dec
scas
cmc
outsl
dec
scas
mov
outsl
dec
scas
mov
mov
pop
data16
mov
aaa
pop
adc
sbb
pop
adc
mov
push
mov
pusha
jno
outsb
or
arpl
cwtl
mov
mov
pusha
jno
out
sub
bound
or
sti
imull
popa
aad
rorl
arpl
jge
clc
je
pop
movsb
xchg
in
fs
mov
mov
sti
imull
popa
aad
rorl
arpl
gs
lock
mov
mov
sti
imull
popa
aad
rorl
arpl
gs
adc
cltd
pop
adc
mov
arpl
ret
outsl
dec
scas
mov
bound
or
sti
imull
popa
aad
rcrl
scas
imulb
loopne
jp
stos
mov
and
inc
xchg
cltd
pop
shl
mov
test
jo
pusha
addr16
cmp
iret
cli
add
mov
dec
sub
aad
filds
jecxz
loopne
icebp
xchg
add
jae
cmp
iret
cli
add
mov
push
jbe
mov
dec
scas
mov
xor
inc
mov
outsl
dec
mov
mov
lret
ret
mov
popa
dec
scas
nop
jl
dec
jle
scas
lock
pusha
dec
scas
xchg
sahf
cmp
dec
scas
nop
adc
std
or
jne
dec
scas
mov
loopne
scas
pop
js
xor
sbb
sub
cmc
jmp
jae
cli
scas
mov
xor
call
js
adc
std
jmp
push
pusha
mov
push
sbb
sbb
cltd
popf
negl
cltd
arpl
sbb
xor
fwait
jle
jge
es
pushf
mov
jbe
jbe
cmpsl
jp
add
push
dec
dec
inc
dec
mov
arpl
rclb
outsl
dec
scas
mov
outsl
dec
scas
mov
outsl
dec
scas
mov
outsl
dec
jmp
push
outsl
inc
mov
outsl
dec
outsl
das
outsl
dec
scas
mov
outsl
cli
scas
mov
outsl
dec
scas
mov
adc
dec
scas
mov
outsl
dec
scas
mov
xchg
loope
adc
mov
push
pop
jae
outsl
jmp
lahf
add
fcomps
or
sbb
std
popf
call
and
cli
aam
nop
push
sub
push
xchg
dec
lock
notw
gs
xor
mov
xchg
adc
mov
rorl
add
fsubp
aam
mov
sub
nop
outsb
mov
pop
std
sbb
je
mov
repnz
jb
popa
sub
test
dec
test
mov
pop
je
ror
imul
stos
movsb
leave
rclb
clc
fadd
or
xchg
and
test
and
inc
pop
push
push
dec
loope
lds
push
pop
mov
aaa
enter
cmc
jno
mov
orl
and
mov
mov
or
enter
mov
xchg
in
mov
rorl
dec
jbe
jle
pop
movsb
mov
mov
push
cmp
nop
inc
pop
pop
outsb
mov
sub
popa
xchg
clc
inc
add
jge
dec
imul
bound
les
mov
int
in
sub
bound
fwait
jne
repnz
xchg
test
inc
pop
mov
les
or
mov
fs
cltd
loope
mov
push
mov
test
jl
int3
outsl
addr16
mov
mov
adc
xor
pop
test
cmp
inc
test
repz
in
iret
test
fimuls
mov
out
inc
lods
inc
push
add
repz
pop
jno
mov
jno
fildll
pop
lock
xor
scas
dec
jmp
test
adc
jnp
movsb
cmp
xor
mov
inc
push
pop
lret
std
cld
dec
lds
mov
scas
insl
adc
dec
movsb
adc
test
add
shlb
adc
fwait
ret
or
or
and
icebp
jns
mov
adc
xchg
stos
mov
enter
je
fmul
fcoml
and
push
fidivs
leave
loope
inc
ret
les
add
jbe
add
sub
sbb
leave
mov
inc
adc
jmp
cwtl
jge
sbb
dec
cmp
inc
xchg
mov
jecxz
xchg
mov
cli
add
fisubl
mov
lods
or
dec
sub
pushf
mov
push
pusha
repz
or
stos
test
lret
mov
fimull
lret
rcrl
fimuls
fwait
jne
flds
popa
daa
mov
jno
stos
jl
repz
add
add
add
or
add
adc
in
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
or
hlt
jmp
add
in
or
movsl
in
or
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
or
add
add
fsubr
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
xor
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
add
enter
add
add
add
mov
test
sbb
call
jb
cmp
mov
sbb
stos
push
jmp
incl
push
mov
sub
pushf
rclb
push
xchg
out
call
adc
mov
test
pop
les
mov
push
mov
nop
jle
mov
fwait
sub
dec
pop
sub
outsl
adc
popf
jnp
xor
push
and
cmp
movsb
adcl
sbb
pop
xchg
enter
cmp
ds
hlt
imul
cmpsl
in
dec
jbe
lret
jbe
lret
scas
add
and
push
xlat
out
std
xchg
stc
mov
jae
sub
pop
sub
add
xor
shlb
call
mov
cld
enter
dec
dec
daa
ret
jne
stos
test
xchg
adc
jge
and
inc
xchg
push
outsb
sub
pusha
dec
cmp
ds
dec
mov
mov
inc
sbb
inc
fdivrs
inc
mov
pop
pop
xchg
rcrl
jnp
or
sbb
add
mov
repz
adc
inc
or
stos
cmp
xchg
jecxz
lret
addr16
pause
enter
js
data16
push
inc
xchg
sub
adc
push
pusha
inc
pushl
int
jmp
xchg
and
xchg
mov
lock
ljmp
clc
and
arpl
ret
sbb
out
cmp
js
pop
dec
mov
cld
adc
cwtl
popa
and
mov
cmc
sub
xchg
jbe
mov
pop
sbbb
xor
mov
fsubrs
lea
mov
cwtl
adc
aam
and
inc
push
inc
jg
sbbl
jnp
adc
mov
dec
test
bound
cmpsl
inc
jg
mov
sub
mov
addr16
xchg
scas
int3
push
push
cltd
dec
idivl
push
clc
jno
pop
insb
pop
in
jecxz
add
jnp
shrb
mov
imul
cmp
out
cmpsb
cmp
dec
movsb
xchg
xlat
jo
mov
mov
mov
xchg
clc
fcoms
enter
shll
sub
push
shrb
aaa
sbb
ja
addr16
inc
xchg
push
adc
movsb
jb
cmp
jnp
or
push
lret
mov
dec
push
aad
mov
mov
jno
clc
inc
das
aam
mov
xchg
pushf
lods
adc
inc
sub
inc
inc
call
negl
sub
cli
iret
fsubrp
daa
pop
dec
cmpsl
sbb
push
daa
lahf
cld
xchg
dec
inc
xor
mov
fsubrl
xchg
imul
or
fnstsw
fnstsw
adc
je
mov
cld
out
mov
xor
icebp
scas
xchg
pop
aam
mov
inc
jg,pt
lret
ret
mov
sub
out
inc
dec
lret
sub
rorb
call
jmp
cwtl
lods
vpmaxub
cwtl
jg
fldt
lahf
adc
pusha
pop
inc
jmp
dec
int
mov
push
insb
test
xchg
jno
decb
mov
dec
add
mov
cld
aas
lret
sbbl
data16
bound
and
loope
fwait
jne
dec
mov
adc
mov
push
scas
adc
ffreep
fidivrs
mov
cmp
and
popa
mov
push
out
inc
pop
sub
sub
or
icebp
fdivrp
addr16
push
jae
sub
lds
and
test
testl
scas
push
sbb
mov
repz
outsb
daa
test
adc
pop
std
adc
bound
mov
pusha
orb
mov
ja
jns
jmp
cmpsl
int
imul
jnp
mov
and
add
stos
std
jmp
shll
push
sub
in
iret
and
cmpsl
movntq
xchg
mov
frndint
popa
in
push
xchg
ret
cmpsl
mov
cmpsl
inc
inc
lea
mov
add
pop
add
cltd
xchg
test
dec
xchg
daa
sub
adc
enter
lds
test
sti
xchg
jb
repnz
push
push
and
call
ljmp
add
cmpsb
imul
test
nop
inc
mov
in
xchg
call
adc
xor
jl
and
sub
ja
sbb
mov
pop
int3
mov
jns
adc
and
mov
mov
pop
xchg
cmc
add
mov
xor
testl
dec
sub
loope
in
sub
hlt
jo
gs
cltd
push
in
outsl
ret
jae
cmp
jb
jg
inc
mov
imull
test
sti
jecxz
cmpsl
pop
and
out
test
test
mov
add
lahf
hlt
xor
mov
fcoms
add
push
mov
sbb
pop
mov
pop
outsb
mov
popf
xchg
je
cmp
les
imull
scas
out
and
add
dec
push
pop
jg
sbb
insb
sub
adc
xor
mov
movsl
jecxz
mov
push
scas
test
push
mov
or
int
pusha
jns
nop
hlt
data16
mov
mov
sbb
fyl2xp1
mov
fcoms
and
aam
push
inc
dec
sub
inc
addl
sub
push
movsb
add
push
inc
mov
mov
iret
lret
fcmove
add
sub
rolb
rcrb
inc
loop
lods
sbb
pop
xchg
xor
lcall
mov
dec
lock
sahf
hlt
ljmp
dec
fs
aas
sbb
cmp
lods
or
stc
push
or
mov
dec
pop
aad
fwait
stos
movsb
gs
cmp
adc
jns
xchg
lea
gs
xchg
sbb
nop
repz
pop
rorl
push
nop
push
sbb
mov
sbb
pop
ror
cmp
cmc
std
insl
push
outsb
pushf
outsl
push
shlb
mov
jns
mov
cmpsl
or
pop
add
dec
or
jbe
xor
xlat
lahf
pop
or
cmpl
push
insb
ss
rol
mov
mov
mov
mov
xor
cmp
cwtl
pop
divl
inc
jmp
and
push
clc
or
stos
pop
xor
out
push
mov
insb
cmc
and
loop
jle
sub
mov
mov
rcrb
fistl
push
jns
fmull
outsb
or
ss
dec
es
fldenv
mov
push
inc
lret
add
stc
rcrl
and
mov
jmp
cmp
sbb
pusha
int
nop
push
inc
adc
or
and
xchg
xchg
pop
push
push
repz
xchg
call
test
inc
add
push
inc
cwtl
loopne
pop
push
lret
and
std
outsl
cld
mov
outsb
scas
adc
enter
pop
cs
xchg
subb
outsl
push
pop
ret
xchg
jge
sbb
jnp
sbb
jno
popl
cmp
xchg
xchg
mov
rorb
aaa
fistl
jle
data16
inc
sbb
inc
cmp
xchg
insl
stos
test
and
jmp
insb
inc
cld
mov
dec
cmp
ljmp
xor
or
popf
pushf
mov
jmp
and
mov
push
arpl
shrl
mov
and
ja
add
arpl
cmp
adc
repnz
fisttps
cltd
lea
xor
xor
clc
pop
sub
and
ret
xchg
xchg
mov
mov
arpl
push
or
sub
push
clc
mov
cli
jp
scas
jmp
js
ja
es
jp
lds
pop
ficoml
ds
and
cwtl
xchg
push
adcb
sub
jp
fsubs
sti
clc
popf
outsl
mov
imul
in
insb
dec
shlb
gs
in
aaa
or
jecxz
loope
inc
lods
jg
push
in
shr
pop
sub
loopne
jno
push
lret
shll
sub
mov
lock
mov
xor
inc
sub
jl
jno
mov
call
sub
jge
loope
lock
inc
jp
jb
or
push
les
jmp
imul
or
dec
negl
test
mov
pop
test
ds
push
and
mov
xlat
arpl
and
pusha
imul
popa
pop
dec
les
daa
lods
mov
add
sbb
cmp
stos
icebp
jl
outsl
insb
std
push
cmp
add
mov
adc
cmp
mov
bound
ret
std
scas
jmp
mov
inc
dec
ret
adc
test
mov
cwtl
xchg
add
jg
adc
cmp
leave
jecxz
ja
cmpsl
outsl
mov
jnp
fisttpll
in
daa
fcompl
dec
out
leave
adc
sub
and
sub
das
xchg
push
jns
and
push
fdivr
imul
pop
xor
xchg
in
dec
je
adc
and
lret
mov
test
iret
dec
dec
mov
jl
leave
xchg
stos
lods
jge
dec
inc
adc
sbb
mov
insb
and
pop
dec
pop
mov
sbb
shll
cmp
cmpb
fiadds
je
ds
dec
mov
jmp
pop
add
jo
cmp
scas
pop
cmp
test
imul
mov
xchg
xlat
mov
lahf
stc
out
mov
pusha
mulps
fstl
cmpsl
jecxz
insl
jbe
pop
test
fdivr
data16
sahf
mov
fstps
jecxz
xchg
xchg
aad
lcall
sub
pop
lds
cs
sbb
movsb
xor
inc
jmp
fwait
mov
popa
fcoml
aas
push
jmp
xchg
mov
pop
mov
xor
sbb
repnz
push
cmp
fwait
sub
pop
sbbl
jo
divl
ret
ds
fisubl
fists
int
ds
movd
popf
pushf
and
and
pop
mov
int
cmpsl
leave
xor
aas
cmp
add
xchg
insb
dec
sub
scas
seto
mov
inc
sub
popf
pop
sbb
or
push
mov
and
and
pop
dec
pop
and
xor
repz
lock
lahf
jb
sub
ja
cmp
mov
or
mov
rcr
aam
ud2
and
add
mov
pop
and
popf
push
imul
addr16
cmc
jg
dec
std
adc
gs
push
sahf
sub
je
insl
jg
mov
fildl
lea
push
cld
ret
fbld
lock
int3
or
sub
and
or
dec
mov
add
fs
bound
push
fldenv
dec
popa
jns
mov
xchg
cmp
mov
fcompl
popa
stos
pop
movsb
push
xchg
ret
aaa
rcll
mov
loop
cld
pop
or
jns
sub
addr16
mov
imul
arpl
jecxz
cld
pop
dec
sub
sub
dec
xchg
dec
jl
daa
insl
and
inc
shr
jge
call
sahf
xchg
xchg
push
repnz
cltd
push
iret
fucomi
xchg
jns
int
lahf
lcall
stos
movsb
js,pn
or
or
cmp
lds
xor
dec
add
mov
clc
mov
jmp
popf
jge
fs
in
ficompl
pop
in
xlat
push
loope
cmp
lods
jge
decl
movsb
cmpsl
flds
or
mov
xchg
sub
repnz
adc
push
and
pop
inc
mov
pop
cwtl
sbb
fst
pop
stos
inc
or
in
jns
les
mov
xchg
push
outsb
add
addr16
mov
cld
cmpsl
dec
adc
inc
mov
mov
inc
cmpsl
mull
dec
pop
sub
movsl
or
cs
mov
aam
dec
test
test
cmc
lea
test
cmp
sbb
aas
mov
retw
jno
scas
jb
shll
dec
lret
stos
scas
jns
pop
sub
mov
add
sahf
inc
jl
push
jecxz
sbb
jp
cmp
in
arpl
and
push
sahf
int3
sbb
daa
ret
ds
mov
in
sub
mov
xchg
int
sbb
arpl
sub
ficoml
or
mov
and
sbb
aaa
stos
dec
call
adc
js
stc
fdivs
mov
jecxz
mov
sub
daa
pusha
fmuls
jb
shll
gs
add
pop
or
dec
jl
int
xchg
or
mov
cmc
repz
cltd
push
mov
imul
pop
xchg
inc
push
imul
outsl
add
mov
cmp
ds
or
mov
mov
sahf
push
jg
jno
popa
and
push
aaa
out
inc
int3
and
inc
mov
pop
lea
pop
jle
xor
mov
jmp
xor
icebp
inc
rorl
add
xor
fcoml
add
cmp
dec
jae
push
xchg
gs
jnp
flds
out
lahf
cwtl
and
les
xchg
dec
rorl
pushf
flds
mov
pop
sbb
sub
adc
loope
je
jp
les
hlt
jecxz
out
push
push
fwait
stc
fisubrs
sbb
cmpsb
mov
daa
or
je
and
xor
ljmp
or
ds
cli
pop
push
sub
rcll
lcall
cmp
sti
les
add
push
xchg
in
repz
test
scas
pop
out
xchg
leave
imul
adcl
add
adc
mov
push
jg
pop
mov
pop
add
dec
mov
fldenv
loopne
jno
push
or
and
mov
or
stc
lahf
sbb
mov
cmc
cs
int
jg
sbb
lret
daa
int3
push
jecxz
push
pop
cmp
fisttpl
daa
cwtl
frstor
jmp
jle
push
mov
mov
inc
movsl
inc
fdivr
mov
call
jg
jecxz
stos
sahf
js
mov
or
push
inc
mov
jmp
stc
xor
das
mov
jnp
push
fisttpll
mov
add
push
pushf
mov
cmp
jbe
xor
loope
mov
and
sub
jp
xor
aad
pop
jb
push
dec
ficoml
jmp
jns
xchg
mov
pop
sub
or
mov
call
fimull
mov
ds
sti
add
je
adc
sbb
mov
rorl
push
xor
repnz
mov
jmp
cld
sub
or
dec
inc
insb
adc
int3
add
inc
int
neg
xchg
mov
dec
push
lret
cmpsb
scas
mov
iret
loopne
jmp
leave
or
sub
dec
inc
push
mov
fdiv
mov
pop
std
pop
mov
popf
rorb
jae
pop
addr16
pop
cmp
dec
movsl
das
push
or
sbbb
cmpsl
inc
es
inc
outsl
cmc
mov
xchg
xor
ds
loope
inc
sbb
xchg
jl
jne
leave
inc
in
mov
jmp
pop
pop
push
cld
add
outsb
in
add
test
pop
jg
push
fsubrl
sbb
js
movsb
mov
icebp
leave
clc
dec
push
jg
cwtl
mov
dec
shlb
mov
push
sbb
mov
and
jnp
cltd
pop
adc
rorl
aam
mov
stc
insl
mov
in
xchg
cmp
std
adc
adc
mov
mov
adcb
mov
add
cmp
mov
push
push
testb
xchg
inc
dec
dec
mov
fistpl
push
inc
inc
aaa
scas
sbb
or
adc
iret
mov
cmp
cmp
push
or
add
sub
gs
mov
xlat
cmpsb
in
cmp
mov
add
xor
push
adc
pop
iret
lock
jge
push
bound
mov
loop
xchg
addr16
dec
xor
lods
aam
popf
icebp
adc
pop
or
movsb
ljmp
jns
push
int
lds
ss
inc
leave
fldenv
inc
mov
ja
rclb
and
push
rcll
jb
loop
dec
jl
movsb
cmp
mov
nop
into
cmc
mov
call
dec
rcll
loop
std
pop
jo
xchg
ret
pop
cmp
jl
mov
pop
xchg
inc
jo
sub
lock
ss
push
stc
push
out
mov
into
sti
sarl
sti
pop
dec
insb
fidivs
pop
jl
mov
add
daa
cmp
hlt
pop
cmpsl
imul
and
fs
sbb
out
mov
dec
push
lret
scas
rorl
and
jnp
adc
nop
add
mov
cld
xor
dec
pop
das
pop
test
inc
inc
xchg
pop
mov
cwtl
je
je
dec
pop
jle
es
in
bound
cmpsb
test
or
imul
aam
sbb
in
clc
push
iret
jecxz
lea
xchg
xchg
push
mov
ficompl
mov
dec
push
pop
and
xchg
or
mov
test
sbb
ss
leave
out
inc
sahf
push
xchg
fimuls
add
add
lods
mov
cmp
push
push
pop
mov
out
int3
aad
out
fdivs
xchg
and
push
push
cmp
fs
cmp
jle
repnz
cld
cmp
ja
adc
xchg
add
clc
leave
add
xorb
fsubs
cmp
xchg
add
sbb
xor
cmp
enter
lds
pop
nop
outsl
mov
int
sbb
dec
fs
sub
push
push
cmp
push
pop
ja
mov
scas
gs
lock
jns
xchg
dec
xor
loop
fwait
das
adc
fwait
mov
and
mov
adc
cmp
adcb
shl
mov
aad
lea
push
sarl
fsubl
add
iret
fsqrt
and
push
push
dec
fisttpll
les
or
notl
lea
movsb
pop
push
sub
addr16
and
xchg
aam
lcall
mov
push
pop
stos
fmulp
or
es
or
dec
and
out
enter
adc
pushl
sahf
popf
ret
jge
mov
ds
lock
ljmp
xchg
pop
fnstenv
mov
lds
fimuls
pusha
inc
inc
cmp
xchg
dec
loop
or
jo
adc
inc
jnp
mov
sub
mov
outsb
mov
or
jp
push
addr16
shl
pop
bound
and
into
or
dec
lods
mov
loop
lods
xor
mov
xor
push
cs
and
cltd
sbb
push
xchg
stos
ss
out
imul
test
cli
inc
stos
popa
xor
cli
push
mov
inc
cmp
push
push
sub
ss
add
bound
cmp
scas
xor
sti
in
aas
cmp
adc
adc
pop
lods
sbb
xor
and
ficompl
jne
mov
xchg
and
neg
sub
cmp
or
pop
rorb
loop
xchg
jb
enter
dec
fisttpll
adc
mov
sbb
mov
call
fwait
stc
sub
push
mov
flds
icebp
xchg
mov
pop
adc
add
and
imul
data16
jl
mov
mov
mov
std
and
xor
hlt
xchg
cltd
outsl
out
mov
mov
jo
push
mull
sub
fcmovu
call
dec
sbb
cmp
movsb
into
fs
dec
xor
lds
movsl
add
fldenv
bound
aam
lods
and
in
inc
int3
ss
mov
and
mov
mov
xchg
push
jbe
lret
push
les
call
mov
pop
in
jae
pushf
scas
imul
mov
mov
insl
push
or
adc
sti
movsb
insl
sbb
dec
mov
sti
adc
imul
mov
xor
ja
jge
cld
xor
sbb
dec
repz
in
loopne
xchg
mov
adc
shrb
jl
out
pop
into
ja
sub
mov
std
dec
dec
lret
popa
mov
inc
or
jge
sbb
sub
jge
adc
pop
addr16
dec
mov
add
ljmp
call
inc
jmp
jmp
push
repnz
mov
aad
repz
jo
das
and
mov
push
es
jmp
inc
in
stc
inc
push
repz
pop
cld
jbe
jle
lock
out
inc
lret
dec
repz
aas
jb
push
insb
xlat
cwtl
xchg
or
cmp
cmp
rorb
in
out
add
inc
test
test
sub
fs
test
add
xor
test
bound
enter
cmp
xchg
jns
jnp
mov
sbb
fdivr
out
push
aas
jns
jecxz
bound
fidivs
sub
lea
push
pop
test
pop
call
cli
nopl
mov
push
jge
cld
aam
pop
ds
mov
push
jg
sbb
mov
xlat
pop
mov
xor
mov
push
lcall
jmp
dec
jae
pcmpgtd
xchg
inc
fldl
jmp
shr
add
pop
cwtl
ficoms
inc
mov
mov
dec
push
int
adc
loopne
jae
jns
shll
dec
insb
mulb
push
scas
cwtl
imul
or
pushf
cmp
movsb
or
enter
in
pop
dec
scas
and
or
add
sub
or
mov
arpl
les
outsl
jg
or
inc
cmpsb
notb
sbb
fcompl
xchg
imul
cmp
mov
mov
je
mov
xchg
enter
lods
popf
and
cmp
pop
xor
lahf
adc
push
mov
add
test
push
lahf
pop
lock
in
bound
imul
xor
popf
push
or
xchg
pop
mov
aas
add
jno
push
jg
sbb
lret
insl
loope
insl
adc
xchg
jp
lods
pop
das
mov
inc
xchg
cmp
mov
or
and
xchg
sbb
push
pop
sub
jns
cmpsb
mov
out
mov
movsl
push
jae
jo
scas
icebp
lcall
div
jl
dec
in
cmp
sub
cwtl
lea
mov
dec
jbe
xchg
ljmp
fnstsw
or
pop
mov
xor
xor
bound
mov
mov
jno
mov
dec
jg
mov
mov
popf
adc
fnstsw
mov
and
ret
arpl
jns
insl
add
pop
rclb
lods
negl
enter
rcll
push
testl
mov
addr16
pop
movsb
nop
cmp
dec
inc
loop
pop
or
or
data16
dec
lds
pop
mov
ljmp
cmc
sub
jg
lods
and
sub
push
out
test
outsl
mov
outsl
jp
out
mov
clc
sub
shll
ds
push
imul
pop
add
repz
loopne
loope
dec
in
les
outsb
icebp
and
or
orb
mov
and
adc
cmp
push
daa
xchg
cwtl
cs
sbb
jae
pop
or
lret
aad
cmp
lret
xchg
aam
adcb
cmp
ljmp
ret
jle
inc
scas
in
xor
jbe
jle
jnp
orl
cmp
jecxz
jbe
cli
js
pop
cmpsl
ljmp
test
inc
cmpsl
jg
mov
fwait
mov
popa
jo
pop
mov
xor
std
xchg
icebp
dec
lock
xor
out
or
lods
xchg
das
push
call
outsl
xlat
shl
loop
or
cs
js
rcll
aaa
dec
rorb
sbb
dec
enter
divl
scas
lods
call
dec
pop
pop
cwtl
leave
xchg
sub
cmp
sub
inc
int3
jb
and
fidivrs
or
push
xchg
lret
xchg
xor
or
int
cmp
pop
push
out
aad
lock
ss
or
lret
jno
jmp
lods
adc
mov
xchg
std
stos
loop
jle
mov
xor
in
push
pop
push
xor
pop
pop
sub
insl
adc
outsb
lock
adcb
pop
push
xchg
daa
jg
clc
fcomi
or
push
sub
out
jmp
mov
pop
sti
cs
aad
lahf
lock
adc
mov
jo
ret
mov
sbbb
ret
xchg
jp
pop
testl
out
test
push
adc
mov
fcompl
repz
mov
inc
inc
xchg
dec
aaa
insl
push
adc
adc
mov
and
repnz
in
nop
iret
fbld
sub
inc
ss
lock
push
fisttpll
xor
and
cwtl
mov
fwait
aad
lea
lret
push
int3
rorl
dec
mov
negw
pop
enter
inc
sub
lods
popa
sbb
pop
sub
xor
mov
test
insl
ret
sbb
inc
in
add
xchg
add
jns
insb
sbb
mov
dec
out
aad
inc
std
movsb
aas
cmp
adc
mov
sub
mov
repnz
cli
aas
jne
and
push
cmp
push
dec
jge
fs
shrl
movsb
jmp
sub
into
repnz
ret
mov
adc
inc
jo
out
mov
dec
jnp
dec
jp
faddl
clc
orl
fadds
mov
out
rorl
in
sahf
andb
ds
stc
lahf
cmp
call
out
jnp
mov
pushl
cmp
xor
movsl
lods
fadds
add
lcall
add
xchg
bound
outsb
out
ret
outsb
test
cmc
lret
jp
or
enter
nop
push
push
push
mov
push
xchg
pop
push
loope
popa
mov
dec
inc
in
xlat
fstl
clc
xchg
cmp
mov
stc
pop
loopne
mov
push
jne
in
inc
lret
imul
sub
push
subb
pusha
arpl
xchg
inc
lock
xorb
cmp
aaa
popf
push
mov
sbb
decl
fwait
mov
xchg
push
mov
call
sub
mov
leave
lret
and
scas
in
je
cs
stos
daa
mov
insl
into
popf
les
xor
addr16
lea
jl
mov
mov
push
movsb
call
pop
sahf
cmc
push
or
fisubl
imul
out
mov
jl
sbb
pop
pop
add
jbe
out
stos
mov
scas
pop
xor
fidivrl
popa
jae
out
jae
mov
jns
fdivs
repz
cmpsl
jle
jle
add
int3
insl
push
sbb
add
fcomp
or
ja
test
repz
shld
in
cltd
jbe
rolb
mov
cmp
cmp
pop
dec
adc
lret
dec
inc
inc
rcll
std
insl
mov
adc
test
inc
push
sbb
xor
add
cwtl
lret
cmp
aaa
mov
les
sbb
mov
jmp
lahf
imull
push
push
sti
dec
and
sub
popl
loope
fildll
mov
test
cli
and
jmp
add
dec
repnz
int3
cmp
sub
sbb
adc
cmp
test
ja
insb
mov
into
mov
pop
insw
mov
inc
repz
xor
dec
movsl
push
test
sub
addr16
fisubl
enter
mov
pop
subb
stos
jnp
hlt
and
fsubl
testb
mov
cwtl
lods
and
out
adc
jmp
and
jle
outsl
adc
mov
or
out
jnp
hlt
or
xchg
orl
jmp
xchg
jne
das
sub
xor
loop
les
mov
paddsw
outsl
push
pushl
sbb
dec
pop
inc
testb
std
repnz
loope
sti
into
cli
adc
mov
stos
adc
jg
imul
mov
inc
sbb
pusha
dec
loope
xchg
jae
sub
mov
sbb
imul
sub
fildl
icebp
adc
add
xchg
cmc
lds
jle
cmpps
ror
mov
add
movsb
and
cld
movsb
lahf
add
xchg
mov
mov
cmp
ret
hlt
mov
in
jo
fcoml
xchg
jp
or
sub
les
aam
hlt
jo
lea
in
addps
push
add
sub
and
cli
jp
xlat
movsb
xchg
repnz
insb
daa
jno
mov
enter
enter
je
stc
xor
loop
add
sti
outsl
in
or
mov
xor
cmp
fsubrl
loop
sbb
push
inc
bound
fdivl
mov
rcrl
add
lea
cs
push
jle
movsb
lds
and
xchg
push
pop
cmp
fcoms
sub
into
and
subb
fildll
std
and
mov
sub
mov
mov
aad
icebp
clc
sub
mov
gs
wbinvd
xchg
sbb
mov
movsl
cld
xchg
aaa
pop
cmc
loope
inc
push
xor
cmp
pop
mov
addr16
rorb
mov
and
mov
or
notb
in
ret
sarb
xchg
ja
jl
movsl
xlat
shlb
or
test
jl
ljmp
out
sbb
ja
in
rolb
adc
movsb
mov
sub
push
mov
insb
fs
fdivs
push
cmp
ljmp
sbb
pushf
call
pop
mov
es
aam
clc
das
push
mov
add
mov
stc
pop
into
daa
call
fwait
lds
xchg
sub
fcomps
cmp
inc
jo
adc
movsb
mov
xchg
sti
cmpsb
mov
pop
add
pop
fstpt
sub
push
sub
popf
fs
or
stc
xor
cli
adc
int3
sbb
shlb
xor
fists
or
and
mov
fiaddl
clc
mov
rcl
int3
into
xor
mov
movsl
mov
popa
movsb
mov
sub
lea
jg
xchg
or
mov
ror
sbb
cmpsb
mov
jbe
into
icebp
into
mov
xchg
mov
mov
outsb
add
repnz
fisubrl
popa
aad
and
push
mov
fcmove
dec
xor
pushf
test
mov
in
xor
rorl
or
xor
add
nop
push
sub
or
ret
std
sub
cmp
out
lahf
pop
mov
loopne
in
pop
mov
imul
sbb
add
or
mov
jae
mov
outsb
xor
push
not
xor
call
adc
and
aam
faddl
sahf
jmp
imul
cwtl
sub
aas
addr16
jbe
iret
mov
xor
mov
insl
push
in
dec
and
cltd
adc
inc
pop
fsubr
pop
and
mov
adc
jp
xchg
pop
xchg
sbb
pop
insb
jae
push
jno
mov
sbb
cmp
stos
loope
out
rcrl
add
in
mov
or
xchg
sbb
sub
jne
xchg
sub
dec
ss
stos
cli
inc
add
cmp
push
cmpsb
lahf
test
jno
xlat
dec
shrl
inc
sbbb
dec
rolb
mov
ror
mov
sub
adc
push
repnz
push
jp
cld
add
mov
jae
mov
mov
xchg
lret
test
dec
das
lock
push
mov
mov
repz
iret
cwtl
jg
cli
in
pop
in
icebp
imul
rol
pop
dec
and
mov
stos
imul
mov
pop
jns
sahf
stc
cmp
xchg
jecxz
push
repz
mov
jnp
stos
xor
lahf
push
sub
jmp
mov
cmpsl
sti
dec
xchg
pop
fwait
test
mov
je
or
sahf
sub
js
and
call
out
sub
push
scas
or
addl
jg
les
xchg
in
jmp
je
adc
int
not
stos
dec
cmp
dec
neg
popf
mov
aaa
or
jmp
cmc
lods
xchg
xor
dec
xlat
js
pop
sub
iret
sbb
sub
inc
out
dec
mov
out
jp
popf
jl
dec
cmp
mov
jmp
insl
or
xchg
jne
loope
sub
lret
xor
inc
jns
jb
mov
mov
add
sbb
lea
mov
xchg
push
xchg
adc
pop
icebp
icebp
or
sti
enter
rorb
stos
and
insl
shrb
stos
sbb
mov
ret
movsb
loope
es
and
pop
sub
cltd
orl
push
adc
cmp
sbb
stos
xorl
shr
roll
imul
pop
inc
add
cmp
mov
in
into
shl
int3
cmpsl
push
mov
mov
push
push
out
pop
fldt
pop
sbb
fnstsw
sbb
pop
pop
mov
adc
push
inc
fadd
xchg
adc
cmpsl
mov
sub
adc
add
bound
mov
movsl
mov
xor
xor
int
jbe
mov
push
add
mov
adc
int3
push
subb
dec
ficompl
ret
xchg
rolb
mov
push
scas
sub
in
xchg
jmp
push
push
inc
push
mov
ss
jne
movb
lods
mov
sbb
mov
and
hlt
rep
xchg
or
insl
adc
cmp
jmp
xor
lcall
in
add
into
out
in
outsl
dec
aad
push
mov
mov
push
pop
mov
js
and
popf
test
mov
or
subb
cwtl
dec
inc
repnz
out
cmp
xchg
int
add
fldenv
cmc
loope
mov
out
xor
add
cmp
xor
xor
adc
pushf
xor
scas
mov
mov
push
cld
add
mov
dec
cmp
std
sub
sub
mov
adc
push
mov
cltd
dec
inc
insb
push
sahf
push
cmp
jo
insb
enter
sahf
into
push
iret
in
or
lcall
bound
pop
mov
mov
mov
icebp
mov
test
mov
lds
pop
ds
addr16
lea
ret
mov
sbb
adc
xchg
push
lds
ja
xorl
mov
pop
jae
mov
loopne
insb
pop
sbb
xchg
cmp
ljmp
jno
lcall
subl
and
or
bound
mov
pop
or
addr16
mov
ret
xor
pop
mov
test
dec
cmp
jns
cltd
mov
popa
inc
adc
sub
and
fstps
dec
sub
pop
movsl
loop
stos
mov
mov
xlat
mov
in
pop
push
andb
dec
mov
pop
xchg
xchg
cld
insl
ss
repz
andl
hlt
dec
movsb
lods
cmp
inc
cmp
dec
aaa
rorb
cwtl
mov
stos
inc
scas
out
dec
cmp
xchg
mov
ficoms
cwtl
cs
cmpsb
loope
lods
movsb
dec
shrb
adc
cld
cmpsb
pmulhuw
push
cmp
lods
imul
pop
dec
pop
push
adc
push
fimull
inc
jmp
stc
pushf
and
add
xor
clc
mov
dec
add
xchg
out
mov
xchg
addr16
iret
outsl
rolb
xchg
mov
imul
fwait
push
mov
xchg
sub
aad
mov
fstps
adc
xchg
std
xchg
sub
ret
cmp
ret
ljmp
inc
iret
icebp
mov
leave
pop
push
fsubs
pop
jbe
mov
mov
mov
and
out
xor
and
add
outsl
loope
loopne
repnz
and
mov
int3
cmp
pop
lea
xchg
pop
in
pop
hlt
pop
lahf
aaa
adc
jl
sbb
lods
xor
mov
pop
testb
cmpsb
icebp
mov
ljmp
sarl
or
lret
out
inc
stc
cltd
lcall
and
push
lea
ret
ret
addr16
xor
dec
data16
xchg
orl
aad
xor
jae,pn
sub
xchg
out
xchg
mov
pop
aas
push
std
andb
decb
sub
daa
fwait
dec
xor
mov
pop
cmc
jno
jbe
repnz
mov
shll
push
sbb
mov
test
lret
sarl
push
aad
into
adc
loop
test
test
jo
pop
outsl
adc
in
shrb
fsubrs
ljmp
mov
out
add
or
push
mov
mov
jbe
repz
popa
lret
cmp
pop
cwtl
aaa
mov
ja
mov
mov
out
cmp
inc
push
xchg
sahf
cmpsl
lcall
jg
mov
mov
je
test
mov
push
pop
js
mov
loopne
pop
push
push
xlat
jno
out
cli
fbld
xor
mov
jo
cltd
mov
pushl
jl
scas
dec
rclb
mov
xor
add
jmp
call
push
in
cmp
rclb
xor
dec
push
and
and
shll
pop
sbb
fdivl
sub
mov
mov
cmp
iret
scas
push
inc
cmpsl
xchg
jo
and
in
mov
pop
cmpsb
adc
or
mov
cwtl
inc
out
clc
stos
mov
sti
scas
jmp
xor
in
and
ficoms
lds
cli
scas
cmpsl
mov
pop
testb
call
push
mov
dec
or
out
fadds
inc
int3
xchg
lock
or
scas
jp
mov
or
shlb
aaa
pop
movsl
repz
jns
sub
std
jg
clc
mov
dec
pop
fs
inc
fistl
xchg
pop
into
xchg
pop
scas
xor
jbe
adcl
cli
lret
scas
divb
mov
fdivl
pushf
mov
add
mov
mov
ljmp
shl
sti
je
mov
add
and
pop
adc
lock
movsl
mov
int3
push
call
dec
cmp
and
mov
mov
push
push
pop
mov
lods
adc
push
popa
lret
xor
inc
mov
mov
jno
mov
daa
sub
sti
in
clc
mov
mov
into
and
movsl
or
jmp
pushf
lahf
xor
or
ret
outsb
inc
ds
dec
insl
into
call
int3
jmp
mov
mov
gs
cltd
xchg
xchg
and
iret
sbb
fdivrl
in
in
mov
and
sub
mov
cmp
or
jle
xchg
loope
ret
push
inc
pop
mov
add
hlt
cmc
push
fimull
sbb
pusha
or
mov
cli
leave
lahf
or
add
mov
mov
add
scas
push
lret
stos
mov
xor
cs
fbld
out
xor
jnp
cmp
adcb
mov
repz
popa
fcomp
in
adc
fidivs
movsb
sub
icebp
mov
out
xlat
push
gs
jns
addr16
push
jbe
mov
shrb
iret
push
hlt
out
stc
sub
xor
sbb
repnz
mov
test
adc
rcrl
daa
lods
icebp
jecxz,pn
mov
adc
sbb
dec
push
add
cld
arpl
insl
rcll
sbb
int
mov
sub
fdivrl
out
sbb
cmpl
out
mov
push
cmc
inc
stos
ja
inc
mov
int3
loopne
push
rol
adc
fsubrl
xchg
loop
jbe
pop
out
scas
dec
inc
and
gs
pop
adc
push
test
mov
xor
test
cmp
mov
fstl
jmp
sbb
mov
cmp
xchg
call
mov
in
xlat
imul
xchg
daa
lock
fiadds
push
mov
mov
add
es
rclb
lods
xchg
mov
xchg
dec
sub
test
add
in
push
dec
add
cltd
jle
push
add
pop
cmp
cmpsl
popa
xlat
inc
jge,pt
in
add
jmp
mov
push
mov
fwait
jmp
dec
lea
add
popf
fucompp
jge
lret
sub
lods
addl
frstor
mov
ret
fs
dec
or
inc
popf
shlb
xor
mov
mov
adc
push
out
xchg
pop
cmp
insb
movsb
popf
or
cmpb
rorb
mov
sbb
mov
push
inc
cmpsl
aad
imul
ret
pop
jl
mov
adc
pop
and
sti
in
js
sbb
pop
and
mov
popf
and
sub
lods
xor
and
je
sub
cmp
stos
sub
in
test
sbb
adc
inc
repnz
jb
xchg
pop
rcll
ja
insb
enter
add
aas
add
ds
in
fmull
loop
xchg
ret
icebp
in
into
cmpb
xlat
aas
lahf
in
js
pop
mov
pop
pusha
dec
jne
push
je
or
sahf
xlat
es
mov
es
ljmp
outsl
inc
test
outsb
cmp
push
scas
ljmp
icebp
enter
mov
fs
jle
movsb
ret
mov
fimull
movsb
jne
adc
shl
fildll
mov
jae
sub
mov
cmpl
pop
pop
lods
ficoms
xlat
leave
pop
push
mov
xchg
movsb
rorl
or
jae
js
adc
loope
ja
cmp
push
dec
add
movsl
mov
clc
in
mov
mov
jns
pop
imul
iret
pop
jo
aaa
mov
mov
ljmp
cmc
xor
in
cs
inc
std
int
inc
rcrb
fnstcw
mov
repnz
cwtl
in
sti
pop
jl
nop
sbb
mov
popf
add
mov
or
pop
pop
insb
xchg
jmp
clc
in
and
jl
dec
out
testb
scas
jp
pop
push
mov
and
into
mov
es
scas
test
and
mov
add
sahf
aam
and
lret
pop
adc
xor
pop
rol
clc
scas
push
sbb
sub
dec
cmp
loop
or
cmp
xor
sub
mov
incl
imul
mov
hlt
mov
dec
sub
dec
inc
icebp
inc
lahf
xchg
mov
cmp
inc
jle
xor
pop
adc
std
push
inc
push
cs
push
inc
movsl
add
jecxz
mov
sbb
pop
jge
cmp
stc
pushf
addr16
pop
push
and
or
pop
shrl
sahf
fistl
mov
lods
clc
inc
es
sahf
dec
jno
test
arpl
cmp
push
lods
call
insb
stos
dec
inc
jl
fiaddl
add
fistpl
lods
imul
je
cmp
jne
mov
or
sbb
sub
rcl
in
les
lea
mov
push
insb
cmc
push
inc
sahf
inc
aad
adc
pop
or
jle
std
inc
add
enter
into
mov
push
daa
aam
nop
lret
jno
testb
xchg
mov
and
icebp
dec
xchg
cs
out
or
mov
call
mov
imull
aas
cmp
aad
test
mov
mov
arpl
outsb
sbb
pop
add
jge
je
dec
and
mov
ss
je
popa
mov
popa
mulb
loope
xorb
outsl
push
ljmp
shlb
ds
cld
inc
fs
or
xchg
rcll
out
jb
xor
push
push
aad
stos
and
sahf
lcall
push
xor
cwtl
xor
daa
daa
xor
and
mov
pop
popa
cmpsl
and
push
mov
adc
fs
cli
xchg
cltd
ret
enter
fcmovu
iret
sbb
imul
test
mov
sub
push
xchg
inc
mov
fimull
dec
mov
xchg
adc
jne
pop
pop
js
push
ss
mov
jne
adc
cwtl
repz
dec
insl
mov
sub
aad
dec
enter
or
stos
cmp
adcl
gs
jae
fmul
mov
push
dec
ret
sub
iret
cmpl
mov
adc
mov
xchg
decl
dec
push
sahf
hlt
jo
xchg
aaa
add
push
jbe
push
mov
push
monitorx
inc
mov
mov
inc
js
xor
sbb
enter
imul
insl
or
int
xchg
and
dec
mov
push
mov
cli
mov
xor
push
or
js
lahf
out
faddl
clc
imul
popa
in
test
xor
ja
test
mov
ja
popa
dec
xchg
dec
lds
jb
dec
or
pusha
and
xchg
sbb
sbb
aaa
mov
scas
aaa
scas
jg
stos
mov
push
nop
sbb
sarl
adc
imul
fdivrl
aad
jnp
cmp
test
push
fadds
push
jmp
mov
cmp
pop
cwtl
xchg
mov
jmp
shll
sbb
or
sub
mov
push
jne
or
mov
in
mov
pop
psubsb
inc
mov
sub
mov
stos
fildll
mov
sub
shll
inc
shl
sub
mov
sbb
xlat
adc
sub
lret
and
push
hlt
test
or
dec
or
add
mov
xlat
jb
push
pop
or
enter
pop
cmpl
jge
adc
data16
and
movsl
fcomps
call
stc
xor
pop
cwtl
lret
jb
ret
dec
and
outsb
mov
push
cmp
add
push
push
or
fldcw
pop
repnz
fwait
adc
jle
lea
sbb
sbb
loopne
andl
bound
icebp
sub
push
sbb
daa
fucomp
stos
out
or
stos
pop
aad
pushf
push
cwtl
pop
test
jmp
mov
xchg
sub
cs
pusha
pop
leave
sbb
pop
out
movsb
dec
rol
test
push
push
cmp
jg
adc
test
push
mov
xor
adc
andps
lods
dec
sub
test
lods
jge
mov
subb
xchg
les
sbb
xor
test
movsb
js
inc
inc
sbb
out
dec
loope
repz
data16
and
into
stc
dec
sbb
jnp
ret
pusha
mov
outsl
clc
imul
in
push
ja
cmp
mov
movsl
mov
movsl
xor
in
pop
xchg
add
mov
das
pop
lahf
ds
or
ja
cli
push
lcall
dec
sub
fsubp
gs
movsl
jmp
imul
ss
jle
xor
mov
mov
jnp
xchg
cmc
sbb
jnp
das
mov
jle
iret
jb
cmpsb
addb
test
jne
je
and
sub
mov
sbb
addr16
lret
fucomip
mov
xchg
aas
and
insb
bound
mov
cltd
cs
and
push
jns
sti
lcall
cmp
and
sub
das
push
aad
and
outsb
lret
or
ss
movsb
in
jns
lcall
out
mov
pop
dec
jecxz
pop
or
or
fcoms
mov
lea
clc
cs
push
mull
imulb
clc
cli
in
ss
add
ret
scas
cmpl
xchg
or
mov
adc
push
jmp
mov
into
inc
pop
inc
jne
mulb
subb
mov
out
dec
and
sub
push
inc
mov
mov
out
mov
jbe
adc
xor
fcomp
outsb
inc
cmp
xchg
sbb
repnz
notl
xlat
iret
sub
xchg
aad
xlat
arpl
jno
mov
lret
adc
cs
lock
sarl
loope
jns
adc
mov
pop
int3
orw
xchg
push
pop
pop
outsl
pop
adc
test
inc
inc
mov
shll
pop
mov
sub
inc
insb
xor
jmp
and
mov
movsb
mov
rorb
test
push
cmpsl
popa
jmp
fwait
daa
mov
dec
in
mov
lock
jnp
cmp
fisubl
mov
loope
xor
inc
and
push
mov
adc
mov
mov
repz
lods
rorb
xchg
aas
test
add
dec
shlb
or
rcrb
cmc
pop
pushf
adc
dec
adc
test
mov
mov
xor
rcll
sbb
mov
jno
add
hlt
sbb
jecxz
sub
jnp
jbe
mov
jb
mov
fld
movsb
push
jp
das
jmp
push
sub
jmp
adc
stos
mov
stc
test
inc
push
dec
xchg
sub
jne
mov
xchg
xor
mov
mov
jnp
and
or
jge
loopne
not
outsb
ds
insl
leave
sbb
pop
ds
testb
xor
mov
pop
or
push
les
fstps
repnz
or
mov
scas
push
xchg
adc
sub
or
arpl
addr16
aaa
sbb
xor
sub
sub
mov
mov
fdiv
mov
lea
test
stos
push
pop
movsl
rol
arpl
into
lahf
cwtl
sti
andb
mov
cmp
sbb
sbb
jno
fwait
pop
jecxz
add
inc
dec
add
adc
fadds
into
pop
enter
imull
xchg
push
mov
push
inc
mov
add
iret
inc
jbe
shrl
fisubs
and
and
ja
sbb
mov
sub
int3
out
mov
verw
arpl
mov
aaa
les
mov
pop
shrb
es
sti
push
orl
cmp
call
xchg
fistl
push
mov
mov
dec
xchg
and
cmp
inc
sbb
or
int3
mov
outsl
mov
insb
jnp
pop
clc
fcoml
imul
insb
stc
push
mov
int3
imul
lods
in
jo
inc
arpl
xchg
pop
and
out
push
cmp
insb
ljmp
jae
mov
in
mov
mov
mov
sub
imul
sahf
mov
xchg
sti
repnz
rol
push
sub
inc
pop
into
mov
jle
sub
pop
push
lcall
jecxz
or
xor
cmpsb
pop
das
xchg
mov
mov
inc
arpl
and
adc
cmpsb
cmp
ja
dec
jae
int3
jp
das
ret
inc
pop
push
mov
jne
cltd
jp
sub
popf
add
aaa
ret
add
sub
xchg
jae
pop
popa
sarl
dec
push
or
cwtl
rcrl
add
pop
mov
fwait
or
mov
xchg
into
fldl
mov
nop
xor
pop
pusha
jp
xchg
mov
jne
xlat
and
nop
or
shrb
adc
jnp
lds
test
or
add
adc
js,pn
inc
gs
shr
aaa
ss
mov
mov
lcall
or
mov
ficomps
aaa
adc
sti
mov
fwait
xor
stos
fistps
insb
nop
sub
into
and
adc
cmp
dec
mov
inc
jns
inc
dec
in
sbb
add
in
into
movsb
sub
filds
cltd
pop
or
or
data16
shlb
xor
mov
test
cli
psubsb
inc
jp
cmp
mov
hlt
adc
mov
cmp
xor
dec
mov
call
pop
fbstp
das
mov
nop
lret
or
sti
js
sub
fstp
sub
repnz
stc
testb
sbbl
inc
and
jle
cmp
mov
pop
out
or
mov
jb
dec
ja
jo
mov
jb
mov
lahf
stos
sub
and
or
adc
add
and
ja
pusha
jnp
gs
add
fwait
mov
sub
adc
into
sub
pushf
xchg
loopne
fisttpl
cs
loop
add
ret
lock
dec
faddp
mov
jb
jo
and
ljmp
and
pop
imul
pop
out
ret
call
loope
add
mov
test
ds
jl
sub
aad
loope
test
mov
popf
movhlps
and
ficomps
jmp
ds
mov
xchg
cmp
or
jle
subb
fwait
ljmp
pop
mov
test
lret
fisttpll
and
std
or
pmullw
lret
loopne
lcall
or
popa
sub
xchg
fidivs
lock
cwtl
cmp
add
int3
mov
xorl
sbbl
loopne
inc
pop
dec
std
jo
movsl
cli
dec
aad
cmp
adc
adc
inc
or
pop
call
test
xor
movsb
dec
mov
pop
adc
ret
jae
sub
xor
mov
sub
sub
sbb
push
cs
add
mov
mov
lds
dec
aad
and
adc
cmp
jns
icebp
sbb
pop
ss
mov
mov
dec
push
fsubrl
cmc
es
popa
addb
lret
mov
mov
add
jmp
jmp
lcall
lods
inc
fs
cmp
add
xchg
xor
shll
mov
jae
cwtl
out
jecxz
lods
jbe
mov
and
xchg
add
rcll
mov
mov
adc
mov
je
test
leave
xor
loop
add
xchg
icebp
add
lock
inc
cwtl
fwait
imul
mov
or
cmp
adc
and
arpl
imul
push
sahf
fistps
xchg
dec
call
mov
push
mov
push
push
aaa
aas
test
pushf
jne
shr
mov
mov
je
push
loopne
push
cltd
repz
or
jne
xchg
rclb
mov
repnz
int3
and
xchg
add
jne
sub
mov
sbb
mov
fsubrs
enter
add
sarb
loope
aam
sub
popf
cmp
sbbb
sub
inc
imulb
aas
mov
aam
data16
loop
dec
dec
mov
or
cli
mov
outsb
loopne
mov
mov
mov
iret
vpextrw
lds
cmp
stos
or
add
mov
ljmp
inc
loopne
cmp
adc
pop
insl
jnp
inc
bound
out
mov
inc
add
dec
test
pop
mov
addl
sbb
push
lods
xor
jno
mov
xorl
repz
sbb
and
pop
test
and
dec
xlat
fnsave
and
jp
cli
cmp
fcompl
push
xchg
cmpsl
xchg
loope
stc
xchg
imul
pop
subb
sbb
pop
sbb
sbb
jge
inc
jns
out
jb
xor
mov
insl
jmp
or
inc
scas
dec
pop
and
mov
jp
xchg
add
cmpsl
mov
lock
mov
mov
jo
in
push
lods
fstps
inc
shlb
pop
mov
dec
fs
mov
lret
leave
push
cmp
fdivrs
adc
xor
fldcw
fldcw
or
sahf
push
addl
dec
test
jmp
pop
xor
mov
cli
add
sub
outsl
insb
shlb
mov
xor
sub
xchg
cmp
filds
cmc
sub
in
sbb
out
cmp
fadds
adc
or
cmc
into
ret
scas
pop
cmp
sbb
in
ret
adc
sbb
sbb
or
add
movsb
loope
imul
mov
pushf
inc
push
sbb
xlat
ds
fcoml
ret
fsubrs
ret
mov
push
push
stc
adc
cmc
insl
lock
cmp
or
jg
imul
aam
mov
inc
push
cmp
xchg
sbb
jp
mov
xlat
fimull
and
and
sbb
jnp
les
test
aam
push
ja
adc
imul
xchg
adc
sub
out
and
jnp
cli
xchg
rorl
ss
jecxz
jne
push
pusha
sub
imulb
shlb
cld
xchg
mov
mov
xor
cmp
popf
inc
inc
js
jecxz
fidivs
outsl
addr16
pusha
fistps
jmp
add
jns
pop
dec
nop
clc
mov
dec
shll
dec
roll
push
pop
out
and
push
sbb
es
sti
sub
je
sahf
repnz
lret
lock
adc
lcall
lahf
sbb
out
repz
aaa
or
xlat
out
ljmp
js
out
adc
in
sub
cltd
push
inc
xor
adcl
jp
adc
xor
pop
sti
inc
mov
mov
adc
pushf
sbb
call
sarb
mov
sbb
sbb
mov
test
dec
out
dec
in
push
dec
jns
nop
inc
popf
sbb
mov
lret
shlb
cli
sub
sbb
pop
push
lret
jb
testl
xchg
mov
outsl
loopne
out
push
and
mov
mov
jne
rorb
subl
xor
ss
mov
add
push
inc
dec
cltd
jnp
or
mov
jno
and
push
jecxz
xor
repz
add
adc
push
cmc
lods
nop
push
adc
jb
stos
jae
xor
fcmovu
aaa
mov
sbb
sub
push
pop
inc
stc
int
cmp
xchg
enter
mov
xchg
cmovns
cmpsb
xor
xchg
sbb
push
mov
pop
push
push
xor
and
dec
mov
leave
mov
ja
sbb
in
sahf
or
xor
test
xchg
nop
insl
mov
mov
ljmp
xor
pop
cmp
mov
xor
pusha
xlat
into
jnp
icebp
lock
pusha
mov
lods
aad
lods
pop
rcrb
jne
daa
rorl
stc
mov
mov
pushf
fdivr
jbe
lds
fmul
orl
cs
xchg
and
push
js
imul
ret
xchg
mov
pop
fsubrs
xchg
and
push
scas
pop
cmp
ljmp
inc
int
cltd
decb
cmc
ss
test
inc
cwtl
into
mov
dec
shrb
xorb
cltd
shrl
je
sub
out
cvttps2pi
cmp
lock
lcall
scas
mov
loopne
xchg
mov
push
outsl
and
out
ljmp
xchg
xchg
bound
cli
int
cltd
dec
adc
int
jp
ja
aam
mov
push
cmpb
add
dec
cltd
js
lret
repnz
mov
movsl
push
stos
mov
movsb
and
jne
popl
xchg
cltd
pop
imul
hlt
dec
add
mov
dec
movsb
sbb
jmp
iret
jecxz
add
call
add
cmp
scas
insb
inc
aad
jl
push
jo
jmp
mov
add
popa
fildl
aad
insb
add
xchg
mov
sub
cwtl
sbb
push
leave
fcmovnbe
aas
divl
pop
mov
dec
sub
and
call
xlat
jp
jnp
push
and
sub
mov
or
dec
inc
movsl
push
nop
imul
sahf
dec
add
mov
imul
rcll
lds
out
adc
daa
adc
jns
call
and
mov
stos
cmp
cmp
sbb
push
push
int
sub
scas
add
lahf
cmpsl
out
inc
int
jno
lods
outsb
jl
sbb
call
push
hlt
pop
ja
inc
out
sbb
cmc
in
inc
mov
mov
test
cmp
cmpsl
xor
daa
and
scas
push
shr
add
cltd
loopne
test
inc
mov
dec
add
rcll
pop
jp
push
jns
fimuls
stos
movsl
lcall
pop
xor
lahf
aam
fistpll
dec
pextrw
fs
add
movsb
shrb
sub
dec
and
sbb
stos
jae
sbb
mov
sbb
jns
add
adc
mov
cli
movsl
xchg
xor
jp
jg
inc
sarl
xor
xchg
out
dec
pop
jo
or
dec
out
enter
cmp
clc
add
les
push
punpcklbw
add
and
or
cmp
push
xor
inc
adc
add
mov
insl
mov
jae
cltd
pop
and
sbb
push
imul
ficoms
mov
pop
sub
jbe
adc
outsl
iret
pop
jge
jmp
push
dec
xor
push
cmpsb
cwtl
push
test
enter
cmp
fcomps
inc
and
or
sbb
add
dec
xor
dec
aas
call
add
push
dec
sbb
mov
sbb
loopne
push
sub
jmp
inc
nop
fsubrl
jne
mov
repz
cmp
scas
icebp
xchg
add
test
sbb
add
mov
test
clc
icebp
out
mov
cmpsb
jne
add
aaa
lea
mov
addr16
lods
es
add
sub
nop
lock
rcrb
mov
jmp
dec
and
push
icebp
and
jb
adc
jp
dec
ficompl
dec
push
addb
adc
xchg
xchg
std
into
lods
dec
stos
fcoml
jb
hlt
daa
mov
jecxz
or
mov
call
jo
push
mov
paddusb
mov
pop
cmp
dec
jge
add
xchg
sbb
mov
mov
in
cmpl
popf
mov
sti
dec
sti
or
adc
inc
adc
faddl
hlt
xor
mov
xlat
mov
frstpm(287
je
and
adc
xor
int3
int
nop
inc
into
cmpb
cli
clc
sbb
jae
rcl
sbb
dec
and
sbb
lea
xlat
push
sub
ljmp
loop
popa
aam
jb
jns
lock
shll
addr16
lret
cmp
xchg
sbb
cmp
rorl
adcl
adc
and
es
icebp
jmp
cmpb
sbb
add
jg
test
lds
add
mov
cs
ss
popf
stos
pop
push
loope
into
test
movsb
insl
jbe
adc
inc
jle
mov
out
jecxz
jne
xor
sbb
mov
pop
popf
pop
jne
push
and
push
stc
out
stos
addr16
adc
jmp
in
pop
cmpsb
xchg
lea
push
and
jmp
cld
outsl
push
ret
test
jo
cmp
daa
fwait
mov
jecxz
sub
mov
inc
mov
fistpll
int
pop
cs
jmp
lods
cmp
push
fld
pop
xlat
ds
ja
inc
mov
mov
cmp
inc
adc
mov
lfs
mov
call
inc
inc
sub
hlt
jl
in
fnstsw
orl
scas
std
xlat
ljmp
fwait
dec
mov
iret
or
dec
sti
aaa
cwtl
sbbl
call
pop
fnstsw
inc
add
in
addr16
pop
and
jg
mov
out
jge
call
fwait
lcall
xor
ret
scas
andb
dec
xor
dec
out
ror
xchg
outsb
inc
jle
pop
xchg
je
push
and
sbb
pop
movsb
mov
imul
xchg
mov
jb
out
sahf
inc
pop
pushf
cld
fs
bound
and
xor
out
pop
test
comiss
jecxz
xchg
test
popf
stos
pop
inc
and
ficompl
movsb
daa
fildl
xchg
rcll
mov
xchg
add
and
cmp
jmp
xchg
daa
mov
dec
xor
and
xor
fdivl
mov
fs
lret
cmp
test
notb
sbb
jl
pushl
xlat
ja
push
add
dec
jne
insl
loopne
inc
dec
scas
into
test
mov
xor
pop
inc
mov
icebp
sbb
lods
cmp
scas
ds
cmpsl
sbb
fcmovbe
lret
push
xor
pushf
test
mov
cmc
pop
fnstenv
outsl
cwtl
flds
and
movsl
mov
loope
sub
ljmp
pop
ja
and
fwait
js
xchg
pop
mov
jne
mov
or
or
adc
subl
insb
xchg
imul
popf
pop
xchg
js
dec
push
jecxz
out
dec
repz
les
clc
mov
insb
movsl
pusha
mov
rcl
pop
mov
jge
outsl
inc
loope
sub
mov
loop
mov
adc
inc
lods
shrl
push
push
outsl
bound
dec
jmp
icebp
and
add
test
test
iret
sub
fcompl
xlat
jge
pop
sub
ror
push
xor
sbb
test
in
mov
or
enter
and
mov
mov
fisubl
rorb
jle
xlat
aas
lds
dec
mov
jge
leave
cld
add
and
jle
inc
lods
sbb
and
pop
and
sbbl
sub
fwait
insl
addr16
lret
pop
adc
dec
scas
sub
sahf
ret
movsb
data16
xchg
shll
icebp
pop
inc
and
push
inc
out
push
mov
mov
divl
std
cmp
outsb
popa
leave
xor
rcr
daa
outsl
pop
int3
add
xlat
or
jne
nop
notl
xchg
or
inc
aas
pop
sbb
fwait
pop
inc
adc
pusha
sahf
lock
push
or
sahf
adc
push
sub
jns
lahf
jecxz
sahf
jge
pop
mov
and
xchg
mov
int
mov
test
or
fwait
cmc
shll
pop
mov
push
loope
mov
bound
cwtl
push
addl
and
scas
pop
test
data16
adc
mov
mov
sbb
mov
cmpsb
xchg
insb
stos
jno
lock
test
xchg
and
lcall
inc
and
xchg
subb
enter
mov
jg
jnp
shrb
adc
inc
pop
cli
fsubp
and
inc
std
test
repnz
adcl
and
scas
fiaddl
xchg
sub
xor
sub
push
push
dec
stos
lds
popf
mov
cmp
add
pushl
adc
scas
push
dec
dec
loopne
mov
adc
push
out
rclb
pop
scas
stc
mov
jecxz
sbb
xchg
mov
adc
xchg
fs
fsubrp
daa
fistpl
jle
xchg
push
and
lahf
fsincos
xchg
cmp
inc
mov
push
fsubr
popf
sbb
loop
stos
loopne
inc
mov
out
mov
sbb
jne
and
inc
mov
icebp
jne
ret
sub
mov
push
repz
mov
les
mov
das
adc
mov
push
call
add
sub
mov
aaa
pop
adc
test
call
mov
fs
call
nop
daa
mov
loope
loop
push
inc
stos
jae
mov
xor
push
scas
xor
fwait
dec
mov
sbb
adc
sbb
stos
hlt
in
add
xor
dec
scas
mov
add
stc
push
ja
iret
fcompl
shlb
jp
and
andb
fadds
clc
es
stos
lea
add
mov
call
sti
lea
inc
sbb
subb
push
lds
faddp
push
lahf
lret
cmc
movsl
cmp
sbb
push
adc
adc
dec
push
push
add
push
scas
movsb
fwait
scas
mov
das
and
push
fildll
repz
rorb
dec
or
mov
sub
mov
in
lods
mov
cmp
rcl
sub
ficoms
les
mov
stos
in
adc
mov
and
and
sub
push
dec
sbb
or
int
std
shlb
adc
xor
push
jne
or
gs
mov
cmp
test
faddl
sbb
or
ljmp
sbb
movsb
add
mov
out
nop
mov
shl
ljmp
sbb
cld
or
mov
pop
pop
mov
loop
mov
cmp
xchg
clc
aas
inc
ljmp
cmp
fimuls
or
fcomps
jge
enter
int
adc
aam
sbb
sarl
or
xchg
xor
shl
jb
cmp
lcall
mov
ret
hlt
and
lahf
or
loopne
and
leave
inc
mov
pusha
pushf
sbb
cmp
sbb
jnp
adc
cld
sub
mov
push
test
and
adc
jbe
inc
rcrl
call
and
jecxz
jae
pusha
xchg
pop
fsubrs
movsl
mov
pop
mov
cmp
rep
or
pop
roll
pushf
add
sbb
mov
insb
lret
lock
int
jge
idiv
sbb
loope
cmpb
call
xchg
shrl
les
lahf
jns
pop
cli
push
mov
xchg
sbb
leave
out
jne
mov
je
repnz
clc
sub
cmc
out
pop
cmp
jns
ret
mov
mov
xchg
movsb
jmp
sbb
idiv
mov
adc
dec
mov
inc
push
jge
mov
fimuls
mov
fxch
loopne
mov
push
or
decl
movsb
xor
cmp
fsubrs
aam
call
xor
out
mov
sub
xor
cli
repz
mov
loopne,pt
mov
sbb
shrb
test
popa
and
pop
stc
clc
call
pop
out
add
add
jnp
data16
loope
enter
push
scas
xchg
jmp
ret
sub
and
jbe
dec
dec
cld
rcr
xorl
dec
mov
imul
xchg
nop
pop
andl
out
dec
push
cmp
out
ss
cmp
push
imul
xchg
cmp
mov
or
testl
mov
inc
xchg
dec
leave
pop
cmp
outsb
call
mov
stos
adc
mov
arpl
pusha
pop
lds
stos
or
push
xchg
je
test
sbb
lds
out
pop
ret
and
rolb
cmp
test
adc
xor
mov
dec
pop
add
mov
dec
sub
inc
jae
cld
jecxz
and
insl
aas
inc
int
jo
cmp
lea
dec
in
div
insb
inc
cli
jb
movsl
out
out
aas
movsb
xor
mov
push
rcr
scas
xchg
nop
inc
and
xor
fists
and
in
mov
in
fnstenv
test
insb
std
xlat
pop
cli
pop
mov
push
scas
add
xchg
popa
xchg
out
rorb
pop
and
les
sbb
add
adc
cmp
push
mov
popa
cmp
out
jl
lods
jl
pop
inc
scas
pusha
and
pop
jnp
sbb
out
fimuls
jne
cmp
cmc
mov
inc
fsubs
imul
cmc
in
xor
mov
or
repnz
jno
push
hlt
out
lock
lcall
xor
and
jmp
sti
pop
mov
inc
jmp
push
dec
xor
push
mov
xchg
jmp
sbb
mov
mov
and
add
gs
into
or
xchg
xor
jns
decb
xor
push
ret
lods
push
mov
sub
jo
dec
push
cmp
xchg
or
test
int
orb
or
jbe
ja
cmp
insb
add
in
fcompl
lret
lods
inc
pop
cld
add
fistl
push
flds
leave
je
push
and
call
push
add
in
movsl
scas
jb
cmpsl
inc
sub
fs
pop
outsl
cmp
mov
jecxz
imul
std
nop
iret
adc
cs
inc
mov
int3
punpcklwd
repz
cli
push
lret
adc
adc
in
loopne
ret
xor
jne
jle
jae
pushf
clc
xchg
sbb
pop
adc
xchg
mov
cmpsl
add
lahf
mov
jne
cmpsb
movsl
ljmp
cmpsb
add
decl
lahf
pop
ja
movsb
shll
xchg
or
cltd
pop
cmp
cmpsb
xor
lahf
mov
cmp
leave
insl
cmpsb
jno
or
shlb
xchg
ret
dec
lods
cmp
lea
sahf
imull
rcl
xor
xor
xchg
push
in
dec
push
push
mov
push
xchg
ret
fists
in
nop
jl
ds
pop
sti
push
scas
xchg
pop
jb
mov
aam
leave
pop
out
mov
nop
rcl
fs
sbb
rcr
and
inc
dec
xchg
in
stc
pop
xor
adc
jb
imul
and
mov
nop
mov
outsb
notl
jge
cmp
out
subl
xchg
sub
sub
pop
push
push
fwait
leave
or
sub
out
pop
jo
repnz
push
inc
mov
pop
decb
shl
jg
push
popa
test
js
gs
cmp
mov
cmp
fcmovne
icebp
sysret
clc
gs
ljmp
cld
movb
add
out
push
push
cmp
mov
jno
loop
inc
out
jecxz
fldt
decb
cmp
pop
sarb
or
push
xlat
push
pop
or
test
cmpsb
das
and
adc
sahf
int
scas
xchg
jmp
out
scas
hlt
hlt
unpcklps
mov
cmpsl
ret
mov
int3
mov
ss
mov
leave
fs
push
sbbl
test
pop
adcb
xor
jmp
add
pop
dec
popa
test
out
addr16
sbb
push
outsl
push
daa
inc
add
sbbb
sub
jge
and
into
fistpll
int
mov
repnz
ret
int
inc
xchg
sbb
pop
loopne
hlt
pop
or
mov
adcl
adcl
iret
dec
loop
or
inc
mov
jno
icebp
in
sbb
mov
movsl
shrb
jnp
out
mov
ljmp
cmp
or
sti
jno
mov
adc
sub
xchg
mov
and
xchg
call
push
scas
and
aaa
test
outsl
mov
fadds
arpl
mov
sbb
lcall
sbb
xor
lret
mov
adc
adc
xchg
movsl
jns
das
cltd
imul
xchg
xor
jl
shrl
test
jmp
sahf
jo
xor
aam
loope
lds
and
sbb
daa
cli
pop
and
push
jge
dec
add
in
ljmp
cmp
lds
ret
cmp
jecxz
sub
pop
dec
negl
add
mov
or
test
in
and
sub
lds
std
dec
push
pop
jne
fs
mov
orb
outsl
dec
fsubl
or
stos
pop
ja
fwait
sahf
sbb
xchg
pop
dec
push
inc
test
bswap
push
xchg
gs
sub
mov
mov
or
cmp
sub
jno
rorl
sahf
push
sti
fsts
inc
repz
add
das
inc
push
loop
xor
out
movb
repz
xchg
mov
fldenv
jle
cmc
push
push
cmp
insl
or
ds
movsl
fldl
mov
or
in
mov
lds
xchg
inc
jecxz
xchg
jbe
mov
out
int3
idiv
movsl
mov
cltd
jo
test
leave
ret
pushf
mov
jnp
pop
imulb
pop
test
xor
scas
sub
jmp
rol
xlat
mov
dec
inc
call
sbb
daa
dec
sbb
out
and
cmp
out
cmpsb
pusha
out
aaa
gs
xor
out
add
mov
andb
hlt
aas
xor
imul
push
pop
clc
int3
sub
int3
cmc
int3
ror
lods
sub
mov
dec
mov
dec
cmp
cmp
out
movsl
cwtl
sub
stos
pop
filds
lret
imul
pop
fcomps
dec
lcall
pop
imul
cs
stc
lock
mov
cltd
jmp
bnd
mov
ja
fcomps
mov
jb
jmp
loope
dec
aam
pop
cld
dec
xor
cltd
in
jge
idivl
scas
push
mov
nop
jno
popa
cmc
lret
cmp
shll
mov
stos
call
arpl
insb
addr16
aas
in
scas
pusha
movsl
xlat
cmpsb
xchg
sub
lds
movsl
mov
loop
lds
loop
mov
ja
dec
movsl
and
sub
mov
lret
cmc
clc
sbb
dec
mov
icebp
in
mov
sub
dec
shll
rolb
or
pop
repz
push
out
adc
daa
leave
pop
sti
cmp
push
cltd
jnp
jl
movsl
jmp
push
mov
mov
sbb
ja
cmpsl
inc
cmp
mov
jae
or
call
push
fcomps
dec
fiadds
and
movsl
outsb
pop
sub
out
subl
sbb
inc
sbb
insl
testl
push
test
ds
or
vphaddbq
in
mov
adc
hlt
pop
mov
mov
pop
mov
leave
cli
mov
insl
and
mov
into
popf
push
nop
es
ret
pop
nop
pop
pop
mov
js
mov
int3
xor
mov
loope
xor
or
fimull
in
jecxz
js
rorl
es
aas
daa
leave
add
lahf
dec
xchg
addr16
mov
push
xchg
fchs
rdtsc
nop
in
call
push
scas
orb
sbb
sub
jnp
and
dec
mov
out
ds
xchg
and
mov
loopne
adc
push
add
jno
xor
push
sbb
ficomps
test
xchg
push
pop
jmp
pop
adc
movsb
add
gs
jl
hlt
adc
bound
std
or
or
sub
fcoms
in
loopne
nop
ret
add
push
sbbl
lret
adc
jmp
pop
lods
dec
inc
push
sahf
xchg
push
add
mov
xchg
mov
loope
dec
cli
inc
fidivs
aas
jl
xchg
sahf
in
jmp
sub
repnz
sbb
daa
cmc
std
push
jecxz
mov
sarb
cmp
mov
mov
push
andl
or
les
xchg
cmp
dec
mov
loope
xorl
xorb
or
add
in
sbb
jg
dec
inc
pushf
adc
iret
shrb
dec
divl
pushf
cmp
dec
push
pop
int3
sarb
stc
xchg
jp
pop
cmpb
adc
inc
loopne
dec
mov
nop
xor
adc
idiv
inc
aam
mov
dec
stc
mov
mov
xchg
mov
ret
lret
pop
repz
xchg
outsl
or
jge
add
ss
mov
sar
push
sahf
xchg
or
std
out
inc
push
cmp
or
mov
leave
aas
imul
push
aas
pop
xchg
and
push
xlat
ret
or
pusha
icebp
imul
enter
lcall
and
call
pop
fucom
gs
in
adc
cltd
sarl
lock
jge
loopne
xlat
pop
mov
idivb
push
insb
js
mov
mov
testl
les
xchg
push
pushf
sub
cli
mov
adc
jns
loop
in
cs
insl
mov
xor
test
in
adc
in
mov
jns
loop
cwtl
cltd
negb
gs
stos
pop
jns
push
pop
xchg
pusha
xorb
arpl
add
xlat
jmp
xchg
jnp
cld
fldcw
and
mov
and
dec
push
xor
lahf
aas
jmp
and
jg
or
je
jne
inc
add
sbb
in
addr16
and
inc
mov
popa
push
jnp
sbb
das
repz
dec
jns
popa
mov
and
and
sbb
mov
xchg
imul
inc
or
aad
ficomps
out
data16
mov
jmp
mov
int3
sub
mov
mov
adc
sbb
loop
mov
xor
gs
hlt
mov
inc
lahf
jg
aad
cmc
repz
lret
mov
add
mov
cmp
push
inc
adc
mov
int
in
scas
imul
pop
cmc
inc
aaa
int3
sbb
add
test
or
out
push
mov
ds
sbb
sub
outsl
cmpl
ss
jno
add
sub
ffree
mov
rcr
pop
adc
pop
ror
daa
daa
insb
pop
dec
in
ja
dec
out
xchg
or
cwtl
xor
out
loope
mov
movsb
add
shlb
jg
shlb
push
clc
and
fisubrs
outsl
xchg
or
movsl
jb,pn
ret
ds
push
js
add
popl
mov
rcrl
cs
mov
int
std
push
repz
mov
pop
xor
xor
ljmp
xchg
cmp
aas
enter
jecxz
jecxz
mov
test
bound
jns
xchg
cld
sbb
popf
ret
xor
loope
mov
cmpsl
mov
jne
jae
push
sbb
or
jo
sub
mov
repz
stc
stc
push
outsb
pop
stos
jge
jnp
sub
fstpt
lds
sti
jmp
inc
inc
mov
addb
ja
and
pop
push
addb
sbb
das
mov
sbb
aas
je
aaa
lcall
int
and
pop
inc
stos
mov
sbbb
push
cmpsb
out
dec
jns
jge
xchg
aad
test
arpl
jmp
or
dec
cltd
cmp
fsubl
mov
jp
aaa
dec
mov
and
in
mov
clc
xchg
adc
icebp
pop
rcrb
sbb
fcmovne
adc
out
mov
test
test
incl
ret
jnp
cltd
jmp
pop
pop
dec
lea
addr16
cmp
leave
pop
js
mov
rcrl
mov
dec
ja
retw
xchg
mov
xor
in
push
mov
adc
dec
jecxz
pop
icebp
cltd
hlt
xchg
push
enter
cs
jne
pop
or
lods
xchg
sub
mov
addb
adc
in
or
jmp
bound
push
addr16
std
push
not
cmpsl
mov
jbe
mov
je
lahf
pop
and
add
or
ror
or
xchg
clc
leave
xorb
xchg
mov
xor
daa
jge
xor
xchg
cmp
lods
cld
lret
mov
dec
mov
aad
test
and
enter
int3
add
stos
addr16
lods
lods
stos
and
lret
aas
add
fwait
or
loopne
sbb
dec
xchg
mov
sub
lds
xor
mov
shll
cmpsb
std
stos
pusha
enter
lcall
adc
mov
fnstcw
das
aas
dec
and
repz
sub
sbb
adc
xor
push
sti
push
lods
cmp
jo
mov
mov
pop
les
out
mov
mov
cmp
into
dec
scas
jae
sub
mov
mov
and
fadds
inc
aam
ficompl
sub
push
and
jne
and
sub
cmpsl
mov
xor
dec
fstpl
sti
outsl
fdivl
icebp
test
test
outsb
and
sti
jle
pusha
pop
scas
pushf
xchg
scas
mov
dec
scas
xchg
je
lds
dec
insl
movsl
loop
adc
jecxz
jp
fnsave
fcoms
in
jno
xor
insl
mov
test
xchg
mov
jp
inc
jae
push
loope
mov
subb
mov
mov
cmpb
les
mov
jno
outsb
mov
out
pop
pop
cmp
mov
in
sbb
rorl
rcll
loope
cmp
stos
int3
jnp
mov
lret
stos
push
fcoml
repnz
and
jne
xor
icebp
add
inc
sub
hlt
hlt
aad
xchg
mov
mov
fwait
push
movb
mov
add
xchg
test
or
pop
xor
aad
outsb
cld
sub
aam
filds
mov
in
pop
adc
and
adc
jecxz
xor
shll
call
mov
dec
or
xchg
rcl
jg
and
pop
or
sub
pusha
arpl
lods
loopne
mov
arpl
sbb
mov
jp
adc
inc
dec
ja,pn
loopne
repz
pop
inc
nop
mov
push
scas
mov
pusha
inc
fdivr
inc
test
out
push
popf
mov
dec
xchg
push
push
imul
or
popf
mov
inc
mov
push
jecxz
das
add
sub
mov
dec
push
inc
pop
inc
mov
xchg
push
or
add
adc
jle
in
repnz
or
cltd
add
mov
dec
pop
call
ds
in
das
cld
divb
add
mov
mov
mov
cld
adc
xchg
lods
xchg
dec
out
push
fldl
dec
push
out
pop
ljmp
popf
enter
mov
jl
stos
and
test
mov
and
xchg
sbb
stc
mov
aad
push
je
cmp
in
ret
cwtl
pop
dec
add
nop
test
adc
cli
js
mov
aas
repz
xor
mov
repz
lahf
mov
addr16
or
lret
cmp
sarl
imul
add
out
test
dec
mov
cmpsl
cmp
cltd
add
push
rorl
add
cmp
add
fwait
shll
mov
xor
fisubrl
test
and
cmpsl
sbb
aad
mull
push
xchg
mov
mov
pushf
pop
sarl
push
jno
inc
mov
shrl
jnp
fdivrl
dec
loopne
lcall
stos
inc
mov
dec
or
rcll
cmp
in
dec
push
repz
jne
test
mov
cmc
icebp
add
adcb
jae
pop
xor
sbb
or
fmuls
jmp
cmp
inc
jl
dec
push
dec
sub
mov
sbb
mov
icebp
aaa
sbb
dec
cmp
cmp
stos
jge
inc
inc
add
scas
mov
fiaddl
inc
pop
hlt
pop
xor
inc
jge
xchg
les
fsubrl
mov
jge
out
and
rclb
xchg
ret
push
pusha
dec
add
mov
addr16
adc
pop
leave
inc
hlt
aam
inc
sbb
lods
mov
outsl
pop
test
scas
loope
jb
fistps
lcall
lret
mov
sub
xor
cld
fstl
test
inc
aad
inc
dec
push
xchg
in
pushf
gs
pop
je
addl
jmp
mov
in
xor
arpl
push
cltd
jb
ljmp
dec
je
jg
pop
mov
fwait
leave
sub
js
xor
push
sub
inc
movsb
xchg
sub
jg
xchg
pop
imul
imul
cwtl
mov
add
jl
or
sub
mov
lock
jae
leave
dec
aad
stos
cmpsl
pop
add
push
dec
stos
loopne
xor
xchg
and
std
bound
cmpsl
xchg
enter
stos
repnz
pop
hlt
bswap
jbe
dec
push
decb
shlb
repnz
jmp
pop
xchg
xor
add
jb
mov
sub
shll
insl
mov
push
lret
mov
sbb
add
out
lods
pop
aas
cmpsb
jne
adc
and
popa
adc
xchg
stc
inc
dec
sub
add
sub
xchg
aaa
push
test
jno
jge
mov
cmp
fidivs
test
idivb
int
jmp
les
in
xchg
push
cli
jg
lcall
jb
jge
and
loope
pop
pusha
and
mov
pop
pop
mov
sbb
cmc
push
lock
test
xor
jl
adc
and
and
aas
xor
mov
rcr
inc
dec
das
insl
ja
lret
sbb
jb
loopne
jle
out
mov
popa
add
outsb
fmull
sub
adc
test
ljmp
enter
test
sbb
movsl
jmp
sub
popf
lahf
push
mov
out
xchg
shll
mov
mov
inc
js
test
fistpl
bnd
bswap
aam
mov
sub
int
ljmp
jp
xchg
mov
les
dec
je
dec
and
int
in
inc
insb
mov
lods
lahf
xorl
out
pushf
pop
fcmove
sbb
in
adc
std
call
mov
jae
push
scas
push
dec
adc
movsl
inc
jno
inc
xor
lret
lock
mov
add
jl
push
xchg
enter
cmc
call
fiaddl
shrb
mov
inc
aas
xor
adc
out
mov
icebp
popa
xchg
stc
stos
dec
mov
sub
xchg
push
or
or
cmpsb
add
push
pop
dec
dec
and
push
shl
testl
and
push
dec
test
repnz
add
repnz
inc
in
cwtl
mov
pop
push
cmpsb
pop
dec
pushf
mulb
cmp
gs
and
movsl
add
insl
jle
pop
fiadds
pop
mov
xchg
and
popf
sub
sbb
push
pop
sub
pop
stos
xchg
jecxz
pop
out
stos
pop
mov
jno
jnp
rorl
test
mov
dec
loope
mov
adc
jns
insb
scas
mov
test
mov
ret
jl
ret
shlb
rcl
xor
add
aad
imul
cmpsw
cwtl
add
cmp
or
cmp
sbb
mov
or
fdivrl
mov
les
icebp
outsb
leave
adc
jge
stos
cmp
push
pop
lock
fisubrs
cmpl
or
out
outsl
jnp
inc
jno
xor
pop
mov
jbe
movsb
add
js
ss
sub
nop
dec
cmp
jne
in
jge
loop
rorl
add
test
xlat
mov
jg
jg
cmp
in
mov
jge
insb
repz
mov
dec
jecxz
fdivrl
mov
ret
jg
outsl
inc
adc
dec
mov
outsl
outsl
jmp
rolb
pop
pop
jle
mov
fsubrs
or
stc
sub
xchg
frstor
mov
lahf
sbb
or
in
lret
mov
mov
pop
jne
les
mov
call
inc
es
mov
pushf
push
std
jl
sahf
addb
test
pop
sbbl
prefetch
fs
ljmp
mov
fsubrs
or
fistl
jnp
mov
sbb
inc
fidivs
ret
mov
push
sbb
lea
mov
add
ljmp
jb
movsb
add
mov
xchg
or
add
inc
dec
andb
jae
test
dec
jb
dec
loop
out
lea
mov
lods
test
push
clc
bound
aam
imul
mov
xor
movsb
gs
jo
sub
dec
insb
xchg
in
into
push
inc
sub
popa
push
aad
push
aad
mov
aad
dec
subb
push
or
xor
pop
adc
xchg
fwait
cmpsb
mov
pushf
insb
scas
inc
mov
aaa
adc
mov
mov
mov
ds
pop
jp
and
add
decl
movsb
mov
and
mov
sbb
push
rcrl
pushf
faddl
adc
xor
imul
insb
std
cli
mov
and
or
push
lods
lret
push
insl
in
dec
test
jns
ja
mov
fcoms
or
cltd
in
dec
les
push
jnp
rep
push
orb
addr16
outsb
pop
out
xlat
scas
dec
xlat
adc
jmp
arpl
xchg
add
adcl
mov
and
mov
rcrb
pop
out
lds
dec
insb
push
cmp
or
cld
cwtl
ljmp
mov
dec
aaa
orl
jp
out
pop
add
scas
out
mov
push
rcrb
mov
and
or
xchg
dec
cmpsl
mov
adc
out
movsl
cmc
dec
sub
sub
add
sub
cmp
xchg
push
test
pop
popa
decb
dec
xchg
push
mov
inc
ret
lods
xchg
mov
mov
ljmp
cmp
test
mov
mov
lret
inc
add
test
pop
in
mov
dec
push
pusha
je
mov
ljmp
out
and
xlat
push
mov
jb
sti
lret
sub
xorl
outsb
das
jae
xor
decb
sbb
dec
xor
fwait
push
fdiv
daa
fadds
enter
xchg
or
adcb
mov
pop
adc
shl
popa
out
icebp
shl
test
in
fs
int
sti
nop
jmp
insb
jae
adc
xchg
mov
out
push
int3
aas
ret
jae
sti
push
or
sbb
outsl
pop
and
adc
icebp
imul
arpl
es
rorl
aas
outsl
add
pop
jns
inc
xor
je
cmc
inc
ljmp
add
add
lahf
fwait
pop
clc
icebp
js
movl
jo
pop
mov
adc
xor
rorl
adc
rcll
jae
mov
xchg
out
scas
sub
icebp
es
sbb
xchg
cmp
xchg
addr16
sti
and
and
and
inc
jne
pushf
mov
jge
repnz
dec
test
fstp
psubusw
xor
sarb
mov
pop
sti
push
xchg
movsl
dec
mov
lock
dec
jbe
push
dec
add
pushf
sar
sbb
popf
sti
cmp
loopne
push
inc
lcall
or
xchg
dec
sbb
adc
and
leave
fidivrl
adc
outsl
outsl
inc
clc
in
lret
outsl
jnp
ret
mov
scas
adc
jae,pt
mov
push
mov
sbb
scas
cs
mov
nop
imul
inc
pusha
cmc
sti
fwait
adc
stos
push
cwtl
add
mov
lods
das
repnz
add
sbb
or
push
aaa
inc
inc
add
iret
add
aaa
or
xchg
jle
mov
xlat
js
cs
dec
insl
ss
pop
jno
push
xor
xlat
sub
cmp
pop
adc
popa
add
aad
and
pop
addr16
call
mov
in
mov
pop
pop
imul
cmp
sbb
repnz
les
fwait
cli
popa
dec
fwait
mov
in
popf
jl
mov
mov
test
xlat
popa
add
xchg
mov
adc
and
shrl
fcompl
popf
pushf
jle
mov
loopne
fisubs
ljmp
pop
mov
jmp
loope
mov
repz
mov
mov
andb
jl
fisttpl
mov
test
sub
fisubl
int
pop
jns
negl
pop
loop
andb
mov
scas
push
fldl
push
in
mov
add
mov
mov
jae
outsl
mov
or
dec
lods
mov
fcomip
jle
mov
addr16
mov
shll
hlt
out
jmp
jle
gs
jae
adc
pop
in
mov
jge
add
lock
pop
jmp
xchg
inc
cmp
mov
pop
adc
adc
sub
lcall
jle
push
daa
inc
xor
mov
sub
inc
test
mul
rorl
xor
push
add
push
dec
sub
cmp
ja
adc
cmp
or
sbb
idiv
and
mov
out
ret
sahf
shll
mov
popf
inc
inc
add
fwait
xchg
setno
lods
aad
ret
sbb
jbe
or
movsb
pop
xor
xchg
xorb
repnz
inc
cwtl
js
pop
pop
add
sub
sub
sbb
pop
xor
adc
je
movsl
lds
std
mov
push
loopne
clc
inc
insb
cltd
pop
cs
jecxz
mov
pop
jp
or
movsb
out
mov
push
lahf
mov
sbb
jbe
mov
nop
dec
bound
jl
xchg
pusha
push
or
jae
fnstcw
out
mov
dec
ret
jne
dec
push
lcall
pop
in
dec
add
mov
jl
incb
in
cmovno
fcoml
pushf
js
fwait
adc
out
loopne
je
lret
dec
lea
call
push
mov
and
sbb
or
add
cmp
jb
sbb
inc
jmp
fmul
shrb
test
pop
or
clc
xchg
and
mov
cmp
mov
mov
or
and
shlb
pop
stos
push
add
mov
insb
add
adc
cmpsl
arpl
xchg
xchg
cltd
fistps
xor
adc
das
in
and
pop
sbb
add
fdivl
or
mov
mov
insl
sbb
leave
clc
shrb
push
add
sti
lods
xchg
aad
stos
adc
xchg
sahf
shll
add
negb
xor
stos
iret
test
cltd
sbb
test
push
ss
or
fs
mov
pop
and
out
adc
and
sub
jno
jo
mov
call
cmpl
loope
out
jp
cmpb
ja
loope
aam
popf
push
jmp
dec
mov
stos
lds
test
cli
sbb
loop
inc
popf
sub
pop
popl
xchg
mov
test
ret
int
jne
sarl
mov
cmc
or
xor
cld
mov
sbb
and
and
aaa
jo
arpl
insb
addr16
add
cmp
fmul
imul
dec
insb
ds
loope
fdivs
cmp
cli
cmc
mov
push
add
xlat
mov
push
in
scas
int3
stos
mov
jae
in
add
push
cltd
push
mov
jmp
cmc
cli
fcompl
mov
pop
test
bts
fdivrp
xchg
jge
dec
push
push
fwait
popf
cmpsb
push
sub
or
loope
repnz
xadd
or
mov
sti
sbb
or
pop
aas
dec
or
pushf
push
mov
fldt
pop
dec
mov
jmp
sub
xchg
filds
pop
cmp
cmp
sahf
scas
sub
mov
loope
xor
xchg
loope
mov
jle
cmpsb
shrl
jns
mov
stos
mov
adc
adc
cmp
fstp
jg
mov
cmp
push
mov
and
mov
push
or
mov
pop
jle
test
adc
fs
repnz
test
fwait
lgs
mov
cmc
addr16
mov
mov
nop
and
jl
sub
cmp
stc
xor
das
xchg
push
sbb
orb
mov
inc
dec
xorl
cwtl
cmp
xchg
rorl
xchg
in
inc
xchg
aam
sbb
cmp
arpl
ss
cli
imul
push
adc
test
sub
std
flds
int
iret
adc
push
sbb
adc
jb
push
mov
mov
insl
out
cmp
xchg
sbb
add
aas
or
outsl
scas
pop
inc
mov
and
xchg
cs
push
push
push
mov
aam
or
push
out
daa
cmp
fs
rorb
xchg
shlb
inc
pop
test
pop
cmp
mov
fimull
popa
pop
adcb
xchg
or
xchg
jno
in
ds
jno
enter
pop
loope
cmpsl
js
je
inc
ss
xchg
push
sbb
pop
mov
pop
out
mov
daa
push
stos
lcall
lea
in
decb
cmp
cmp
fwait
bound
lea
ret
imul
imull
call
mov
ds
in
insb
pop
and
stos
aas
jmp
push
or
xor
aaa
xorb
mov
sti
pop
sub
enter
aas
sub
loopne
and
pop
sub
pop
in
loopne
pusha
and
cmp
int3
mov
xchg
inc
popf
shrl
int3
jb,pt
movsb
jo
xchg
adc
adc
fsubrs
in
jns
mov
and
in
pop
and
loop
push
lcall
lret
shll
push
mov
mov
jmp
and
scas
pop
sub
es
xchg
sbb
cmp
and
sub
insb
mov
rcl
ret
jecxz
decl
cltd
rorb
mov
cwtl
jl
in
or
and
mov
jle
sbb
push
ljmp
in
cli
orb
outsl
sbb
push
push
cltd
addr16
dec
ss
mov
shl
mov
fdivl
cmp
orb
aaa
shlb
popf
dec
mov
jmp
and
inc
pop
sbb
sti
push
in
push
jb
aas
in
sub
lods
out
hlt
mov
add
aas
imul
adc
sbb
popf
lods
pop
out
adc
xchg
rol
fidivs
xchg
icebp
sub
push
jp
push
and
popa
cmpsl
push
repnz
not
cli
shld
cli
push
sub
into
push
sub
and
in
roll
hlt
sbb
jne
in
jg
and
insl
mov
xlat
in
sbb
int
dec
mov
push
lds
cmpl
adc
add
stos
pop
addr16
xchg
or
insb
and
jae
int3
push
stc
adc
stc
jge
iret
push
and
xchg
sbb
movsl
mulb
cwtl
scas
or
push
sti
push
pop
xlat
dec
lods
add
or
mov
dec
mov
or
shrb
das
adc
std
das
mov
nop
fmul
into
jle
mov
pop
adc
sub
rorl
lods
loopne
and
pop
mov
adc
cltd
ja
xchg
jns
and
adc
mov
fwait
cmpl
inc
and
and
jmp
fdivs
sub
adc
test
jae
rcl
push
mov
fcoml
les
xor
mov
cmp
test
sbb
das
mov
sbb
mov
cltd
mov
dec
xor
fisubs
jmp
fildll
shr
fcmovnb
mov
jp
or
fisubl
aas
aaa
sub
xchg
outsb
orb
out
sbb
cmp
std
xchg
je
jns
dec
xchg
and
jb
mov
mov
rcl
subb
inc
pop
cld
push
lds
dec
shlb
push
dec
xchg
sahf
aaa
xchg
clc
jmp
dec
icebp
xor
loop
fcompp
negb
sahf
cmp
arpl
add
add
jge
cld
jnp
xor
sub
mov
inc
adc
aaa
and
xchg
adc
inc
insl
jb
jo
int
lea
fisttpl
outsl
mov
les
enter
add
and
add
repz
sarl
xchg
push
xor
dec
inc
dec
jb
jo
add
into
mov
adc
shll
xor
xchg
imul
xchg
outsb
roll
mov
sub
pusha
mov
add
mov
clc
pushf
popa
cld
mov
int3
lods
jmp
xchg
out
mov
mov
test
cmpsl
sub
scas
jae
rcll
xchg
pop
jmp
push
xchg
out
or
iret
insl
sub
dec
jb
bound
std
into
or
mov
subb
hlt
mov
inc
xchg
into
inc
jo
into
xchg
push
jno
mov
cmpsb
dec
push
push
push
dec
fldl
pop
test
popa
cmpsl
jg
push
pop
and
or
lods
fwait
add
dec
into
cld
sbb
xchg
jbe
jns
shl
and
cmpsl
inc
pop
addr16
int3
cmp
sbb
or
cltd
notl
aam
dec
jns
jl
fsubrs
lcall
shlb
pop
inc
fwait
pop
dec
push
out
sub
push
sarb
shlb
inc
push
scas
notl
out
out
pusha
mov
cwtl
in
mov
aaa
fstl
push
lods
movsb
sub
and
push
or
ret
or
loop
pop
shlb
jl
jns
mov
bound
push
dec
test
aaa
xchg
pop
pop
mov
add
pop
sub
pop
sub
shl
lds
insb
mov
mov
pop
push
cltd
cld
daa
push
fcmovnb
add
sbb
add
pop
iret
std
loopne
push
fnstcw
sub
stos
clc
cmp
jne
cmp
ljmp
xchg
cmpsl
pop
aam
mov
cmpsb
cmp
aad
lahf
test
cmpsl
mov
js
test
add
add
mov
jmp
mov
hlt
lret
arpl
mov
push
add
push
nop
sahf
cmp
dec
lahf
negl
test
movsl
imul
test
psrad
cmp
imul
out
adc
bound
out
push
pop
jno
or
movsl
roll
movsb
lcall
xor
push
shlb
arpl
leave
shlb
and
jle
enter
pop
pop
lods
push
sbb
ljmp
aad
cs
adc
mov
or
jbe
pop
lea
dec
push
arpl
test
mov
and
jge
movsl
jne
fcmovnb
push
xchg
adc
imul
sub
mov
jno
or
scas
iret
mov
mov
xchg
mov
subl
mov
aad
mov
jp
jg
into
insl
sub
incl
out
adc
insb
sbb
roll
outsb
sbb
ret
and
jno,pn
mov
mov
rclb
das
insl
dec
je
mov
inc
or
mov
xchg
ret
cmc
mov
daa
jmp
rcr
roll
xchg
push
int
hlt
dec
lret
mov
pop
xchg
xchg
add
stos
adc
add
xchg
and
scas
xor
stc
push
adc
mov
adc
test
mov
lea
cmpl
xchg
arpl
stos
mov
pop
xchg
mov
lock
in
inc
call
jge
dec
jne
les
test
sahf
jle
out
pop
inc
ja
dec
pop
aas
imul
cmp
pop
mov
xchg
push
and
jg
pushf
pop
xlat
fs
push
xchg
xchg
fdivp
add
adc
adc
xor
out
inc
lcall
push
repz
out
mov
mov
ja
dec
push
push
aaa
mov
xchg
and
sub
in
icebp
test
mov
jb
aad
test
xchg
cwtl
push
andb
sbb
repnz
push
test
add
cmp
in
and
inc
push
jae
mov
notb
xor
imul
mov
out
sub
pop
sub
imul
cmp
fxch
movsb
or
pop
sub
mov
test
popf
xchg
fdivs
xchg
jg
test
je
dec
int3
insb
sbb
insl
loop
jl
fldl
lea
mov
or
push
dec
push
mov
ljmp
mov
xlat
outsl
push
fildll
ja
popa
lea
icebp
aaa
xchg
sbb
pushfw
cmp
dec
mov
jecxz
cld
cmc
in
mov
mov
icebp
aam
mov
cmc
in
out
mov
sub
test
scas
rolb
sub
push
push
pushf
fwait
push
and
popa
fwait
sub
leave
lret
hlt
adc
les
inc
pusha
mov
les
dec
addr16
xchg
pop
add
out
cmc
mov
xchg
cwtl
dec
xchg
push
lods
adc
fisttpl
jp
js
into
scas
rclb
push
xchg
xor
call
xchg
shl
push
loop
jae
sbb
xchg
mov
test
and
sub
xor
jnp
push
pop
inc
das
add
insb
push
push
das
mov
add
loop
dec
pop
dec
out
rcrl
enter
fs
lds
repnz
dec
aam
call
leave
add
pop
divl
imul
ljmp
push
fsubl
div
xchg
dec
fstpl
dec
jbe
ja
sub
jg
sti
push
push
add
out
mov
mov
pop
sbb
call
mov
mov
test
jge
xchg
mov
push
dec
data16
shll
test
pop
leave
xchg
insb
push
lcall
xchg
fsubrl
cmp
nop
daa
ljmp
pop
inc
setne
or
rol
in
sbb
push
fadd
scas
xor
pop
leave
jmp
int
mov
and
and
jmp
mov
xchg
out
xchg
push
les
push
pop
out
jge
call
shl
jne
fwait
cmc
cmp
dec
inc
hlt
sub
outsb
iret
aad
imul
aas
lcall
adcb
push
pop
ja
or
inc
or
dec
out
in
movsl
cmp
insl
cmp
arpl
popf
nop
add
call
mov
hlt
insl
push
jo
jge
arpl
cmp
negb
ja
lea
mov
pop
and
push
and
imul
inc
mov
pop
out
rcrb
lret
push
jp
or
jl
aam
in
bound
dec
inc
push
pop
pop
aaa
xchg
call
sub
sbb
mov
cmp
mov
lret
lock
sbb
or
inc
sbb
mov
insb
out
invd
scas
sbb
mov
insl
imul
lret
ficoml
push
in
les
in
orl
cmc
cmp
add
les
push
mov
and
adc
and
adc
mov
cmp
nop
jmp
jmp
ds
cmp
pop
mov
and
loope
mov
dec
cmc
test
pop
pushf
lds
mov
shll
dec
faddl
mov
xorl
push
mov
xchg
mov
inc
punpcklbw
pop
and
in
push
subb
aad
xlat
inc
push
pop
rclb
dec
mov
push
fwait
std
dec
mov
dec
sub
rcl
ja
je
ljmp
push
sbb
jmp
popf
repz
loop
adc
out
stc
and
idiv
ljmp
out
jmp
in
repnz
int3
aaa
iret
push
insl
leave
imul
sarb
in
pop
mov
add
sub
in
push
pop
les
cltd
ja
mov
rsqrtps
jne
mov
int
cmp
gs
jnp
xchg
mov
jbe
in
rclb
mov
call
in
push
xlat
xor
loopne
mov
arpl
dec
mov
push
lret
sbb
loop
push
or
movsl
insb
mov
ret
das
cld
das
jmp
push
nop
pop
in
cmp
addr16
out
pop
shlb
scas
clc
dec
in
stos
lods
jmp
jge
dec
mov
pop
pop
lods
push
pop
das
adc
pushf
sahf
mov
icebp
or
sbb
mov
xrelease
gs
inc
jg
pop
adc
and
mov
add
notb
cli
js
xlat
mov
test
mov
lret
inc
and
mov
sbb
fmulp
popa
sub
inc
in
lods
xchg
je
xchg
cmpsl
fwait
out
movsl
push
rcll
cmp
add
enter
push
xchg
loop
pop
push
scas
adc
xor
push
xchg
inc
xor
fs
leave
cmpsb
sbbl
ds
not
jp
xor
pushl
dec
and
xor
and
mov
push
jg
daa
cmpsb
cwtl
lret
clc
mov
inc
jns
dec
in
add
enter
data16
lds
cmp
filds
mov
inc
and
xor
dec
jns
enter
mov
push
cmpsb
fidivrs
adcb
loope
out
sub
or
jns
and
insb
es
dec
or
sub
dec
mov
loope
xchg
stc
pop
sbb
mov
or
xchg
push
xlat
cmp
mov
rol
adc
lods
mov
adc
stos
pop
cmp
sub
outsb
push
xlat
xor
lcall
push
pop
divl
les
js
and
mov
sbb
in
es
jb
dec
icebp
pop
xchg
imul
mov
push
jb
daa
push
push
lods
inc
cmp
mov
add
adc
mov
test
test
scas
cmpsb
push
inc
lods
push
add
mov
movsl
mov
push
mov
adc
cmp
push
cwtl
inc
in
jae
sahf
jecxz
movsl
add
sub
rol
mov
loop
sbbl
xor
jb
stos
lcall
stc
sub
sarb
cmp
pop
int
mov
fwait
out
popf
dec
dec
jge
scas
mov
test
inc
jb
and
or
fnstcw
lds
ss
sahf
fscale
scas
stos
or
bound
out
in
rclb
scas
sub
xchg
pop
loope
stos
mov
je
or
and
and
cmp
lret
es
js
inc
mov
enter
sbbb
jns
push
gs
pushf
inc
xchg
lds
xchg
or
es
xor
call
mov
mov
mov
fldenv
jne
repnz
andl
test
push
je
pop
test
int
stos
rclb
and
ret
fs
shl
loopne
gs
jg
xchg
loope
leave
fimull
mov
jl
lds
xor
stc
xor
cwtl
mov
jb
jnp
mov
add
xor
lahf
xchg
outsl
ret
lahf
insb
and
imul
xor
add
push
mov
cmpl
xor
xor
and
push
iret
add
or
or
push
retw
sarl
xor
nop
fadds
dec
out
pop
push
rol
cmp
pop
out
push
test
sbb
xlat
and
push
sahf
sbb
cmp
movsl
out
push
and
sub
fsubs
xchg
call
cwtl
popf
add
dec
add
and
ljmp
sbb
xchg
dec
adc
fisubs
movsb
and
sub
xchg
nop
daa
push
scas
sbb
sbb
cmp
movsb
or
dec
scas
addl
dec
xchg
inc
jmp
cmc
xchg
imull
iret
loopne
testl
push
sbb
cli
mov
xchg
xchg
xchg
mov
das
addr16
pop
sti
rorb
jp
add
dec
or
or
idiv
dec
repnz
outsb
aam
mov
je
popa
ret
or
fsub
mov
fstl
pop
pop
inc
push
mov
mov
mov
push
sub
lret
xor
or
cmpsb
pushf
mov
gs
bound
inc
mov
mov
pop
mov
gs
popf
push
das
add
xchg
cmpsb
jne
int
mov
xchg
stc
cwtl
cli
xrelease
lock
leave
inc
or
sbb
pop
xor
movsl
out
dec
out
fstpt
fmulp
sub
setle
std
sbb
push
pop
arpl
out
repz
insl
aam
cs
sbb
les
jl
clc
out
push
sti
mov
cmp
int
mov
push
es
add
pop
dec
adc
inc
add
jno
clc
out
jb
adc
in
jle
clc
dec
lock
jae
push
and
dec
lret
jb
lods
imul
jb
or
je
orl
daa
ja
cld
push
mov
pop
decb
es
bound
inc
shlb
test
mov
xor
mov
or
lock
loop
mov
sub
mov
jge
jle
std
fwait
inc
pcmpgtb
mov
mov
mov
mov
and
scas
push
xor
ds
xchg
dec
stc
stos
fdivrs
mov
xor
or
dec
sbb
imul
xor
inc
and
fsubrp
cmpsl
jg
push
inc
loope
imul
aaa
lock
inc
add
add
jmp
loope
jno
xchg
and
jge
scas
outsl
add
mov
inc
ret
jmp
mov
out
pop
sub
ret
popa
xor
je
inc
adc
aaa
or
mov
int3
lds
xchg
aaa
mov
popf
leave
int3
dec
adc
popaw
mov
jae
push
repz
dec
in
mov
ret
push
cmc
fsubrs
pop
jnp
and
xor
icebp
dec
jge
ds
push
pop
push
push
test
notb
dec
ljmp
inc
mov
int3
test
sahf
mov
cmp
das
out
test
outsl
dec
or
xchg
dec
into
sti
mov
stos
lods
lret
mov
cmpsl
mov
inc
test
lea
or
push
out
jbe
imul
incl
fst
jmp
or
dec
loop
aas
paddusw
roll
aaa
nop
cmp
jo
mov
push
out
pushf
cwtl
ret
adc
es
mov
imul
pop
pop
pop
sbb
inc
pop
rcl
xchg
insl
fsubrl
sub
push
lret
fnstsw
dec
sahf
sub
xlat
int
mov
ret
test
inc
ss
push
scas
mov
add
stos
ja
pop
jns
aas
incb
fs
pushf
adc
dec
xor
leave
sub
mov
ret
ss
arpl
in
enter
mov
dec
enter
mov
ljmp
xor
xchg
mov
lds
clc
add
je
push
sub
outsl
xor
and
nop
shll
inc
push
push
lcall
and
and
pop
imul
push
cwtl
je
pop
cmp
inc
jb
pop
pusha
clc
adcl
dec
addr16
xor
insb
pop
lods
cs
cmpsb
nop
rolb
lret
adc
fstps
ja
js
mov
push
outsl
mov
sub
outsb
dec
dec
sub
ss
push
mov
sahf
mov
aas
jo
repz
in
sub
cmpsb
mov
mov
dec
and
scas
sub
in
std
shrl
jecxz
rcrb
pop
fcoms
pop
xor
xchg
xor
popf
and
add
xor
xor
push
pop
xchg
gs
xchg
cmpsl
mov
sbb
loope
pop
repz
jl
mov
push
push
scas
ficoml
clc
sbb
mov
mov
fnstenv
aam
pop
fsubrs
shrb
jge
cmp
pushf
xchg
arpl
rorb
repz
pop
popa
xor
jne
movsb
dec
lahf
sub
mov
pop
push
xchg
xchg
push
std
out
add
rcll
in
scas
dec
mov
pop
add
sub
mov
rol
stos
movsl
dec
test
add
xchg
dec
sub
pop
jbe
imul
cmc
in
push
mov
mov
pop
fistpll
push
push
adc
dec
mov
mov
cli
pop
rcl
mov
and
cmp
push
fcmove
adc
jle
cmp
sbb
sub
stos
aad
loop
push
push
sbb
in
push
sahf
iret
or
pushf
shrb
and
fsts
pop
test
mov
repnz
mov
movsb
ja
scas
cmpl
push
out
cmp
mov
aas
shrb
adc
add
push
dec
or
dec
pop
sbb
and
jl
rcrb
mov
das
insb
ja
sbb
or
cmp
movsb
sbb
sbb
add
fldenv
cmp
adc
push
inc
dec
xchg
shrb
je
rcrl
decl
cmp
mov
pop
out
mov
cld
incl
imul
lcall
cmc
push
loopne
sbb
stos
jb
gs
daa
cmp
cmpl
out
push
movsl
dec
xor
lock
fcomi
dec
push
mov
xchg
add
test
xor
fnstsw
fucomip
stos
add
or
adc
dec
repz
jno
into
and
stos
pop
adc
movsb
or
mov
jge
jbe
loopne
hlt
cmpsl
cs
outsb
sbb
inc
jmp
imul
inc
and
gs
jbe
into
in
enter
lods
cmp
rorl
lret
jp
xor
divb
mov
inc
and
push
mov
adc
push
push
pop
mov
out
pop
lret
xor
xchg
push
std
cmp
aam
lret
add
sub
and
pop
inc
or
cmp
test
mov
mov
movsb
adc
negl
xchg
js
ja
sbb
and
pop
lret
cmp
inc
adc
xchg
lret
inc
adc
jle
xchg
push
mov
mov
push
adc
cmp
sbb
clc
repnz
inc
es
adc
mov
cli
pop
leave
mov
xchg
loopne
jge
add
inc
loop
addl
int
push
adc
ret
ja
addl
inc
dec
sub
inc
scas
push
int
jl
test
push
dec
mov
sbb
xchg
hlt
pushf
test
sub
js
ficomps
test
push
jb
or
push
lcall
in
push
add
add
lods
jno
pushf
jecxz
mov
es
push
rcr
hlt
fwait
rolb
popf
das
cmc
leave
loope
inc
inc
ffree
lods
stc
test
push
ss
pop
aam
add
lods
push
test
mov
pop
mov
push
jle
in
out
or
xor
repnz
out
fcoms
mov
cmp
mov
and
xor
sti
xor
cltd
movsl
imul
je
add
cmpsl
das
xor
aaa
sub
stos
lds
popa
dec
dec
daa
je,pt
mov
enter
fsubrs
jg
or
repz
dec
xor
rorb
push
inc
aad
mov
xor
sbb
jb
push
jnp
data16
orl
sbb
xchg
jne
dec
fiaddl
imulb
rcl
inc
test
xorb
mov
jecxz
jbe
push
mov
aad
rcll
pop
xor
ds
es
daa
fxtract
jecxz
cmp
sbb
outsb
addr16
in
loop
ud2
inc
scas
cltd
cmpsl
jbe
dec
lret
cmpsb
aaa
add
into
sub
shll
xor
add
sahf
fsubrs
xchg
pop
inc
lods
fxch
in
cwtl
rcrb
mulb
dec
pop
lret
push
das
test
pusha
push
aad
mov
lods
ljmp
cwtl
xorl
loop
hlt
ror
stos
lods
pop
out
mov
mov
add
add
cltd
out
push
mov
and
daa
push
jle
repz
test
adc
aam
sti
sub
lods
adc
mov
cmpsb
out
dec
inc
fs
pop
push
in
mov
inc
add
lods
add
out
fldl
ljmp
dec
sbb
aas
xor
mov
dec
ds
mov
mov
das
test
jge
mov
in
dec
ror
mov
lahf
xor
xor
adc
and
inc
add
imul
push
shlb
call
stos
dec
arpl
hlt
fs
jmp
sub
cmp
dec
sub
popf
mov
in
xchg
shll
cmc
mov
push
inc
cwtl
add
adc
mov
fdivl
push
loopne
xor
adc
aas
push
icebp
das
movsb
repz
jge
lea
dec
cmp
mov
ja
pop
int
inc
test
mov
leave
mov
stc
dec
iret
add
xchg
rcr
ja
mov
inc
xchg
sbb
fdivr
pop
mov
inc
ds
ficomps
ret
movsl
sbb
stc
xor
pop
pop
xchg
loope
imul
lcall
jno
cwtl
insl
xchg
or
aas
and
scas
inc
sbb
mov
into
je
ficoms
jb
ss
nop
test
cmp
xchg
in
std
aas
out
gs
faddl
jge
and
jbe
mov
sub
jb
jne
sbb
mov
or
bnd
push
cmp
mov
sub
jne
nop
adc
gs
dec
clc
rclb
mov
adc
push
stos
cmpsb
pusha
mov
int
into
in
jl
push
cltd
mov
scas
dec
xchg
mov
inc
in
mov
call
jecxz
popf
jecxz
pop
shrl
fsts
aaa
iret
and
adc
js
out
lods
jae
push
fucom
jnp
outsl
adc
pop
xlat
rcl
and
aam
dec
in
inc
std
cmpsl
mov
xchg
rol
loope
test
popf
and
int3
cwtl
jbe
push
dec
inc
inc
mov
fs
push
push
cmp
ror
cltd
imul
mov
test
outsl
out
mov
sarb
fisttpll
cmp
lods
lods
aas
sti
jle
jb
or
ret
popf
and
inc
out
pop
push
xor
push
test
jae
mov
push
pusha
add
inc
fadd
adc
jg
std
lea
and
mov
cmp
pop
push
dec
sbb
push
mov
mov
or
dec
nop
pop
popa
out
lret
cli
popf
xlat
stos
add
jae
je
mov
pop
ret
addb
notb
xor
ljmp
je
push
cmp
imul
xchg
dec
adc
test
dec
jb
mov
xor
xchg
test
cwtl
fdivs
sbb
cmpsb
imul
lcall
xor
push
adc
dec
aam
xor
pop
adc
push
loop
repz
mov
lcall
cld
mov
pop
and
aam
xchg
mov
xor
loopne
add
ds
cmc
add
mov
push
sbb
leave
bound
dec
in
push
movsl
stos
into
push
push
lock
jae
arpl
adc
dec
es
lods
insl
mov
mov
sbb
lea
adc
stc
into
lcall
loop
leave
sub
out
push
xchg
dec
cmp
cmp
fisubl
test
scas
es
jb
jmp
mov
loopne
pop
pop
mov
pop
daa
and
daa
cmp
fwait
jmp
pop
push
loope
or
adc
or
lock
flds
inc
jne
sbb
push
or
mulb
jnp
pop
adc
or
add
inc
push
lds
int
add
lahf
mov
stos
test
shrl
lret
jecxz
fadds
and
and
es
push
popf
add
lds
fadds
jno
add
add
gs
jb
dec
and
inc
loope
icebp
popf
out
shll
dec
movsb
pop
mov
vmwrite
dec
jb
jae
arpl
mov
ja
out
faddl
lea
repz
hlt
add
subl
push
inc
add
push
mov
lcall
xchg
call
or
and
jb
fisubrs
lcall
lods
or
sbb
das
imul
and
xor
sub
ljmp
mov
mov
adc
sarl
loopne
sbb
pop
xchg
push
stos
mov
cld
jno
push
mov
jge
enter
popa
fdiv
lods
cmpsl
mov
xchg
js
testb
sbb
adc
sahf
sub
adcb
setl
enter
dec
dec
fldenv
mov
xor
adc
ljmp
xchg
mov
shll
mov
lahf
fs
arpl
pop
pop
enter
ss
mov
loope
fcmovnb
push
out
insl
jge
mov
lds
inc
pusha
mov
fcmove
mov
fwait
push
and
push
xchg
inc
push
adc
vpshufhw
insl
aam
cmpsl
ja
lds
ret
cli
xchg
xchg
sbb
mov
ds
mov
mov
push
xor
ja
fwait
lods
iret
stc
out
mov
in
es
leave
pop
psubsb
pop
mov
push
outsl
jle
or
in
xchg
cli
fcomip
push
pop
scas
or
popf
test
sub
push
cs
lock
sub
pop
enter
loope
inc
cmova
das
movsl
xchg
or
shlb
xchg
lods
int
ret
movsb
bound
mov
push
dec
xchg
or
or
dec
xorl
sbb
xchg
test
xchg
pop
stos
mov
outsb
bound
into
lds
push
sbb
or
pop
and
add
fnstsw
jmp
loop
sbb
shll
or
cmpsb
push
cmp
scas
sub
dec
sahf
jae
fcmovnu
pop
mov
xor
mov
and
or
out
mov
and
push
sbb
ret
scas
popf
dec
cmc
fdivs
call
loop
xor
cs
in
dec
xchg
aaa
test
fucom
add
pusha
or
cltd
out
fwait
ss
and
mov
dec
mov
pop
or
xor
add
jle
jle
push
mov
cmp
stos
addr16
dec
loopne
mov
xchg
mov
aas
pop
adc
sbb
sub
adcb
xlat
out
mov
xchg
mov
gs
loope
imul
and
in
and
pop
and
lods
cmp
fwait
loopne
and
and
adc
inc
mov
xlat
xlat
add
mov
roll
test
xchg
mov
popa
cmpsl
das
pop
leave
pop
sub
or
ret
in
adc
in
addr16
test
sbb
add
in
ret
repnz
mov
dec
xor
lock
lahf
repz
sbb
sarb
sub
xchg
scas
das
cmp
mov
lods
test
mov
sub
push
or
in
lret
into
mov
scas
inc
in
jmp
cmpsl
fldt
std
lds
add
mov
cld
scas
test
pop
and
jmp
push
fisttps
xor
addr16
imul
gs
add
ds
rolb
xchg
sub
cmc
adc
jg
mov
inc
addr16
repnz
int3
hlt
xchg
mov
push
in
add
inc
pop
scas
mov
and
ds
jg
cmp
es
fwait
jae
cli
lds
jg
out
mov
je
mov
jae
pop
sub
ret
ss
and
insl
sub
daa
sbb
iret
test
xor
sbb
inc
in
imulb
push
xchg
arpl
aam
stos
and
in
mov
repz
test
xor
jmp
movsb
js
movsl
es
fsubs
cltd
pop
into
mov
mov
loopne
and
fnsave
sub
enter
xchg
adc
add
jne
ret
mov
movsl
test
repz
xchg
xchg
mov
int3
out
loopne
dec
xchg
or
cli
shll
xchg
mov
add
dec
sbb
testl
and
pop
fstpl
std
xchg
dec
cwtl
cmpsl
cltd
push
push
mov
add
subl
or
lock
xor
jle
aam
movsb
push
stos
leave
outsb
push
cmp
dec
sbb
testb
mov
and
lret
mov
adc
push
mov
mov
add
pop
mov
lahf
out
cwtl
mov
sbb
jp
movsl
cmpsb
mov
sub
mov
stc
test
xor
xor
or
mov
jno
adc
xchg
cmp
int3
mov
enter
mov
std
and
lds
out
inc
xchg
into
shlb
pusha
movaps
mov
pop
xor
xlat
xchg
jb
rcl
pop
int3
pop
fstps
fs
idivb
aas
daa
mov
inc
jg
xchg
repz
dec
ljmp
xchg
cmp
mov
jmp
jp
ljmp
pop
adc
scas
mov
inc
scas
xchg
lcall
add
xor
jnp
nop
push
outsl
test
in
push
or
xlat
xor
sbbb
sti
call
aaa
movsb
xchg
mov
dec
jno
cli
mov
and
rclb
rcl
mov
xor
adc
cwtl
enter
dec
cmp
sbb
popa
ret
adc
popf
loopne
clc
cmp
out
inc
nop
test
outsb
xchg
push
shrl
add
sbb
xchg
add
leave
add
sbb
xchg
mov
sarb
pop
outsl
popf
dec
fnsetpm(287
shrb
mov
arpl
jecxz
mov
call
imul
or
sti
mov
or
das
inc
mov
dec
loop
jge
scas
loopne
mov
lds
jo
call
sbb
mov
dec
xchg
fstpt
popa
jmp
push
cs
jge
fnsave
int3
cmp
btrl
jp
stos
imul
je
out
xor
lods
sbb
or
jns
inc
ret
ja
bound
push
lods
adc
movsl
nop
insb
aad
or
or
jle
cmp
xor
inc
xchg
and
or
dec
xor
paddusw
mov
dec
mov
scas
stos
ficoml
faddl
jmp
jbe
out
mov
mov
sbb
jp
jp
add
pusha
je
mov
rol
das
test
sahf
sub
insl
xor
sub
pop
push
lahf
dec
cmp
ja
aam
repz
rolb
pushf
xor
in
pop
clc
in
dec
xchg
call
sub
subb
aas
mov
and
xor
negl
hlt
aas
lea
test
jl
test
sbb
test
addr16
or
cltd
stos
call
or
sti
out
stos
insl
and
sarl
xchg
pushf
jae
jg
popf
nop
pop
outsb
adc
push
clc
mov
mov
popa
adc
dec
mov
and
cmp
imul
out
icebp
mov
lret
dec
cld
pushf
daa
pop
cmp
mov
push
mov
repz
in
lock
mov
mov
fisubrl
ds
fcmove
inc
sahf
dec
sahf
sub
adc
mov
fistpll
pop
xor
data16
adc
mov
icebp
ficomps
cmp
cmpsb
mov
scas
loope
cmp
push
sbb
sub
ss
mov
xor
and
sar
inc
leave
aaa
cltd
dec
lock
mov
cmp
addb
jno
sbb
mov
or
jno
fimuls
cmp
mov
xchg
mov
call
fstpl
jno
sbb
or
scas
iret
aaa
fmuls
mov
cld
sub
jae
repnz
xor
test
lcall
daa
lods
cmp
jmp
pushf
decl
stc
rcll
mov
test
pop
xor
adc
pop
stc
popf
pushf
je
cmpsl
push
pop
cmpsl
xor
and
jo
push
aam
rorl
adc
adc
daa
xchg
pushf
pusha
or
xor
mov
cmp
negb
mov
adc
dec
xchg
or
out
pop
xor
add
ficoms
je
lcall
and
dec
inc
sarl
mov
jns
mov
popa
adc
push
lds
and
jge
mov
xchg
inc
mov
add
xchg
xchg
sbb
xor
out
dec
xorb
mov
in
xchg
pop
adc
pop
mov
outsl
jecxz
popa
mov
inc
pushf
mov
xchg
dec
jne
lock
adc
in
pop
sub
aam
mov
je
jecxz
xor
push
shlb
aas
mov
pop
pop
lock
pushf
cmpb
into
loopne
repz
rolb
out
cmovge
jp
cmp
ds
iret
inc
xchg
inc
sbb
jp
insl
add
loop
add
xlat
popa
ficomps
or
lahf
dec
sbb
jecxz
jge
mov
inc
testl
sub
fbld
movsl
xor
mov
jl
or
out
sub
int3
xchg
mov
push
mov
imul
andb
and
jbe
rolb
cmp
sub
out
insl
insb
jecxz
cmp
mov
cmp
sub
sub
fidivs
sub
push
int
mov
vphsubbw
out
sbb
mov
push
popa
xchg
dec
in
push
shl
adc
jns
sbb
add
xchg
cmp
andl
sbb
push
jo
enter
iret
xor
outsl
popa
sbb
mov
push
push
ljmp
loope
jp
push
push
fsubs
je
lock
in
cmp
addb
insb
int
pop
int
rcrb
test
xor
mov
fdivl
inc
push
ss
out
stos
add
xchg
gs
out
sbb
pop
fwait
lcall
add
outsl
xchg
adc
testb
push
mov
stos
mov
xor
jmp
jo
or
jg
test
mov
xchg
es
mov
jne
lea
mov
pop
push
movsl
arpl
or
or
inc
adc
rorb
push
enter
movsl
lret
js
subl
pop
sbb
arpl
shl
push
push
cmpsl
pop
enter
ja
mov
js
dec
add
mov
aaa
pop
pop
out
jge
out
push
xchg
in
pop
jne
stc
xchg
icebp
inc
xlat
icebp
or
fldl
in
bound
inc
pop
das
jno
mov
push
sub
repz
incb
pop
sbb
push
imul
push
xor
push
lret
data16
subb
xchg
outsl
xor
fs
lgs
or
lods
out
mov
jo
mov
or
pop
ror
and
bound
fistps
icebp
cmp
mov
mov
lcall
fwait
pop
cmpsb
lahf
xlat
mov
inc
add
sbbl
das
mov
sbb
cli
lock
test
test
mov
jne
cmp
nop
loopne
jae
sub
xor
inc
mov
ret
jmp
dec
rol
xchg
ret
insb
imul
adc
loope
addb
fldt
lods
outsl
ror
pop
rolb
dec
mov
jmp
testb
test
push
fcoml
push
jmp
enter
out
sub
xor
xor
fcomps
mov
push
cwtl
inc
adc
cli
jmp
mov
clc
push
ret
repnz
xchg
in
dec
mov
jecxz
jnp
fsubl
and
fidivrs
icebp
les
ds
lahf
loop
sti
imulb
in
jmp
xor
imul
add
shrl
pop
int3
in
pop
or
adc
add
mov
rorl
filds
mov
push
pop
sbb
lds
mov
loop
sbb
sub
mov
xchg
jb
mov
and
ljmp
cmp
jge
mov
shld
lods
mov
dec
popa
insl
bound
and
sub
push
inc
test
push
inc
call
pop
pop
pop
lret
push
add
mov
lcall
adc
mov
push
mov
cmpb
aas
and
out
adc
test
inc
push
mov
cwtl
cwtl
mov
dec
mov
xchg
repnz
cmpsl
cmp
mov
mov
or
pop
or
pop
sbb
sbb
mov
imull
cwtl
jb
and
add
push
rolb
je
mov
cmp
loopne
cmp
adc
add
xchg
aaa
mov
cld
mov
sarb
fdivl
loop
dec
dec
jns
shll
inc
rorb
dec
mov
cld
dec
cmp
loopne
in
cmp
mov
mov
addr16
dec
mov
lods
xchg
pop
sub
xchg
cmp
or
mov
shr
movsl
jns
das
push
pusha
loop
cmc
pop
lret
or
adc
out
lods
or
push
in
pop
cmc
gs
dec
lods
sbb
mov
leave
shrb
sti
pop
pop
mov
dec
sti
lcall
adc
les
dec
and
stos
xor
and
mov
lret
mov
jmp
sbb
inc
in
sahf
push
repnz
or
pop
jge
mov
pop
mov
xor
movb
sub
push
pop
xchg
ret
mov
mov
sahf
add
mov
pop
sbb
sub
adc
pop
cld
push
xor
lret
pop
and
dec
mov
xor
mov
and
es
into
rorb
lahf
lods
inc
orl
fnsave
add
lock
mov
pop
pop
enter
std
push
pop
insb
jmp
loop
shl
add
rorb
jmp
or
mov
test
test
cmp
std
js
sbb
dec
mov
neg
jg
jnp
mov
rep
sti
pushw
daa
mov
andl
inc
lods
repnz
mov
in
push
sub
cmp
mov
les
addr16
push
repnz
xor
xchg
loopne
push
and
orb
inc
test
cmpsb
jl
or
ficoms
hlt
arpl
sbb
in
lret
and
push
xor
in
icebp
lcall
arpl
push
sarl
rcl
xor
mov
outsl
testb
add
or
std
mov
inc
popa
fsubs
in
cs
scas
sub
jne
dec
lock
and
mov
push
jl
inc
push
cld
inc
mov
xchg
mov
in
push
popf
mov
pushf
or
or
adc
pop
mov
js
lods
outsb
mov
pop
js
pop
xchg
or
rol
lock
rol
cs
test
bound
mov
sub
push
adc
jns
or
jae
add
jp
arpl
addr16
pop
push
fs
pushf
mov
cs
sbb
mov
jns
sub
xchg
push
jbe
xchg
and
mov
mov
add
xchg
insl
xlat
cli
pushf
clc
xchg
lods
jle
pop
xchg
loopne
jne
dec
mov
ret
xchg
push
arpl
mov
xor
xor
xchg
adc
lock
cmp
leavew
jnp
push
jno
inc
sahf
shll
lahf
repz
mov
jnp
push
fidivrs
clc
fldl
push
mov
sbb
movb
xor
movsb
call
lss
outsb
or
jp
out
loopne
mov
cld
mov
mov
out
or
inc
pop
or
adc
in
scas
repz
adc
adc
fst
sbb
out
ficomps
lock
fsts
lahf
or
mov
cmpb
sub
cmp
stos
lods
lods
add
adc
jl
push
inc
std
cltd
xchg
push
push
and
sbb
test
jns
adc
test
mov
test
daa
mov
test
xor
mov
push
jg
push
adc
fsubrs
mov
and
xchg
dec
mov
fstp
shl
xchg
imul
iret
cld
add
inc
dec
ds
inc
les
mov
xchg
sub
push
js
sarl
push
mov
mov
pop
and
sarb
mov
pop
popf
shll
adc
sahf
rcl
fcmovbe
inc
je
sbb
js
and
imull
cld
cmpsb
shrb
mov
jge
or
push
or
mov
sub
add
mov
cmp
sahf
sarb
add
es
and
push
sbb
aad
cmp
dec
push
mov
rolb
sbb
fwait
rolb
push
scas
add
jnp
pop
sbb
push
cwtl
fidivs
xor
pop
push
ret
sahf
xlat
leave
sub
and
sub
in
pop
sub
push
mov
lcall
xlat
outsb
fucomi
sbb
fisttps
mov
mov
rol
pop
and
lods
inc
rcl
xchg
fildl
fwait
cmp
dec
sub
ljmp
add
add
add
ja
rclb
imul
clc
pop
lds
fldl
repnz
mov
test
dec
mov
mov
mov
mov
fldt
pop
out
je
clc
popf
cmpsb
sbb
test
stos
lea
ret
jl
andl
sti
pop
dec
rolb
movsb
jae
xchg
in
addr16
imul
mov
leave
in
adc
repz
mov
jp
lret
outsl
ret
adc
out
add
pop
inc
xor
push
stc
das
sbb
push
lods
mov
xor
and
xchg
inc
test
aaa
mov
aas
sub
mov
push
sbb
andb
inc
mov
cmovle
push
jo
adc
sbb
mov
jns
cmp
fwait
pop
int3
fs
mov
insl
out
and
jmp
mov
and
andb
das
push
test
mov
cli
or
mov
jl
mov
mov
xchg
inc
idivl
jl
fsubrs
into
push
test
xchg
inc
mov
mov
daa
xor
test
adc
notl
daa
mov
rcll
loopne
bound
adc
shrl
dec
jne
jbe
loop
add
push
or
or
repnz
push
lds
push
pop
ljmpw
xchg
adc
xchg
push
mov
push
dec
inc
das
aaa
push
test
add
lahf
jg
int3
int
and
pop
in
sti
add
loop
add
adc
mov
arpl
stc
pop
jo
pop
mov
fldt
popa
dec
ds
pusha
test
outsl
pop
out
jbe
sub
pushf
push
dec
jmp
imulb
aaa
divl
imull
lahf
stos
xchg
jb
or
cwtl
push
mov
pop
xchg
test
ret
pop
sbbl
aam
fadd
adc
movlps
push
jg
aaa
cmp
movsb
rorb
pop
insb
xchg
cmc
push
dec
leave
push
or
das
mov
push
shl
das
sub
aad
push
adc
dec
adc
cmpsl
xchg
push
push
cmpsb
movsl
rcr
push
pop
fcomp
out
repz
push
daa
xor
and
and
mov
lds
mov
cmpsb
pop
ret
arpl
xor
adc
push
mov
mov
jae
add
jg
test
mov
jbe
inc
popa
inc
jb
icebp
mov
imul
sbb
and
test
and
cmp
inc
fsub
lds
and
int3
add
cmp
sub
sub
fcoml
test
sbb
popf
stos
adc
test
xor
mov
shrl
lahf
clc
movsb
aaa
ficoms
hlt
jg
lcall
jnp
stos
jg
and
cmp
mov
fcoms
push
sbb
xor
mov
inc
mov
in
adc
aad
adc
lods
adc
dec
pushf
sub
sbbl
icebp
push
sti
sarl
aaa
pop
mov
stos
scas
cmc
mov
dec
cmp
inc
stos
insb
into
xchg
mov
jnp
movsb
pop
mov
add
int
jnp
pop
clc
dec
xchg
sbb
sub
jb
xchg
mov
jl
cmp
mov
xchg
lock
or
repnz
xchg
scas
imul
mov
arpl
or
lret
mov
sub
sbb
lods
es
cltd
in
mov
cld
les
mov
jmp
jp
pop
xor
daa
cmp
insl
insl
push
lods
decb
mov
xchg
jns
sti
xchg
xchg
xor
testl
rol
sub
out
ja
add
or
mov
imul
adc
and
sahf
mov
les
jb
js
scas
fstpt
pop
inc
mov
adc
push
and
rorb
cmpsl
inc
outsl
std
in
aam
out
cmp
roll
dec
inc
and
int3
push
dec
mov
and
inc
pop
sub
fwait
dec
xor
movsl
in
insb
repnz
shll
stos
xchg
dec
js
loop
dec
loop
jbe
pushf
sbb
rcll
adc
data16
pop
loope
jmp
adc
cli
int3
cmp
repnz
je
js
in
sub
pop
jl
inc
sub
je
inc
pop
and
clc
enter
fwait
mov
mov
cmp
cmp
push
mov
jbe
sbb
sub
lahf
push
aas
and
push
idivb
or
mov
mov
pop
mov
push
mov
iret
or
insb
pop
adc
lret
mov
xor
rcl
or
jg
iret
mov
sbb
xchg
cmp
or
mov
xor
int3
inc
sbb
ret
sub
push
push
jmp
addr16
lods
outsl
cmp
sarl
outsb
and
aaa
negl
cltd
imul
popf
stos
xlat
xchg
scas
jae
push
push
sub
pop
arpl
xchg
xor
shlb
stos
lock
mov
jne
shlb
cmp
lds
sbb
sbb
inc
adc
jnp
js,pt
jno
and
aaa
mov
push
cmc
cmp
push
sub
outsl
mov
push
andl
push
and
stos
push
mov
sbb
cmp
stc
xor
xor
outsl
pop
bnd
dec
scas
jo
repnz
stos
sub
aas
movsb
out
sbb
cmp
dec
int
js
and
xor
roll
mov
loopne
push
cmpsb
lcall
or
popa
rorb
inc
nop
imul
lcall
push
pop
inc
adc
pop
cli
mov
cmp
ja
sub
je
sub
test
imul
mov
jge
popa
pop
jg
cmp
jae
adc
je
in
cmp
push
xchg
ret
test
jno
ds
mov
mov
or
int
pusha
mov
rol
inc
hlt
inc
jge
pop
push
push
aam
cmp
mov
lahf
pop
xlat
lods
mov
stc
xor
add
rcr
cmp
pop
jg
fdivrs
mov
lret
jns
and
jmp
pop
int
push
ds
mov
aas
pushl
adc
pop
and
xor
hlt
rorl
inc
iret
je
xchg
ds
sub
fisubrl
andb
adc
in
jg
movsl
xchg
out
fs
out
and
sub
test
mov
add
enter
jl
xchg
outsb
jp
jo
daa
xchg
push
mov
dec
enter
and
test
and
jnp
sbb
les
xchg
jne
adc
pop
jae
push
pop
addr16
jnp
jle
cmc
mov
jb
repnz
das
jo
and
clc
jle
mov
pop
pmaddwd
cld
xor
addr16
jg
push
mov
cld
cmp
add
pop
aaa
jmp
jg
fcomp
add
sbbb
push
mov
mov
js
ret
test
aad
xlat
call
test
imul
enter
cmc
xor
pop
mov
cs
xor
repz
inc
sarl
mov
pop
dec
leave
idiv
jge
xor
test
inc
mov
pop
xchg
add
test
adc
into
hlt
pop
and
sti
ljmp
daa
test
mov
mov
cs
test
cwtl
xchg
xchg
xchg
xor
pop
in
dec
sbbb
sbb
cmp
mov
or
outsl
push
mov
test
cmp
mov
loop
mov
mov
pop
insb
stos
mov
mov
pop
lret
loop
adc
loope
je
xchg
ja
push
lods
sub
inc
add
jnp
mov
add
add
push
arpl
enter
pop
movsb
ror
or
sbb
sub
xchg
in
mov
loop
sub
adc
sub
es
mov
inc
cmpsl
pop
btc
xor
or
lock
fcoms
xor
add
rorb
mov
stos
and
xchg
rclb
xlat
lock
mov
or
aas
test
stos
mov
pop
inc
ja
int3
outsb
jo
fisubrl
push
xlat
dec
lcall
cmp
inc
out
je
mov
cltd
pop
add
pop
scas
pop
or
sbb
sbb
movsb
ss
pop
xchg
mov
pop
aam
jns
popa
mov
pop
jo
repnz
xchg
lock
xor
aam
or
xchg
xchg
ficoms
test
jge
push
fwait
das
pusha
les
or
cltd
jno
fiaddl
jp
inc
cld
ss
cmpsl
loope
push
lods
jp
out
pushw
aam
sbb
movsl
and
mov
jg
add
sbb
imul
sbb
pop
jle
and
xchg
pop
sub
cmpsb
out
inc
jno
cmp
out
aaa
push
pop
push
in
or
rorb
cld
popf
bound
imul
push
fnstcw
jl
add
pop
scas
adc
cmp
mov
rcrl
jae
pop
mov
icebp
or
and
roll
mov
inc
rorl
adc
add
pop
stos
mov
sbb
into
test
add
scas
mov
adc
jecxz
cmp
repnz
mov
ret
lods
push
xchg
shll
gs
jp
repz
and
dec
test
inc
mov
pop
xchg
cmpsb
leave
dec
outsl
or
leave
mov
movsl
sbb
jecxz
and
inc
sbb
cmp
fxch
jns
cmc
mov
inc
pop
aam
dec
xor
or
xor
faddl
in
mov
outsb
pop
sub
cmp
addb
or
pop
rcrl
lea
data16
and
sahf
push
adc
lea
mov
adc
push
out
mov
inc
jg
adc
cmp
clc
push
mul
fucomp
xchg
lods
bound
sbb
fs
and
shrl
enter
jmp
sahf
ret
mov
icebp
test
xor
inc
adc
pusha
je
fidivrl
adc
pop
jae
push
sti
jmp
pop
cs
xor
jge
mov
push
test
out
lea
and
insl
mov
adc
out
mov
mov
outsl
lret
mov
jo
push
dec
pop
sti
fadds
mov
cmp
mov
inc
lahf
add
gs
bound
xlat
dec
sahf
xor
stos
or
jbe
aad
out
xor
add
jl
fcoml
lea
pop
out
or
inc
dec
xor
cmp
adc
pop
sub
adc
mov
clc
sub
int
add
faddl
mov
jne
dec
inc
xor
xor
jae
movsl
xchg
sti
pop
stos
pop
sub
mov
cmp
sbb
push
sbb
outsl
push
jmp
cmpsl
lods
into
insl
dec
lcall
adc
sub
cmpsl
mov
lea
mov
or
insl
push
inc
pusha
js
rcrb
stos
push
mov
shll
push
sarl
mov
jbe
and
jnp
jmp
iret
or
mov
inc
pop
faddl
mov
jp
ljmp
pop
cmp
lds
fwait
out
jl
movsb
inc
sbb
stos
int3
and
sbb
mov
jo
dec
enter
cli
es
mov
movsb
mov
and
cmp
mov
mov
xor
scas
test
notb
cs
dec
fwait
rorb
andl
xor
inc
test
popf
push
pop
data16
pop
cmp
mov
xor
testb
cs
adc
inc
mov
dec
inc
in
out
popl
ljmp
add
sbb
mov
out
xor
lret
mov
int3
sahf
cltd
and
cmpsb
in
in
mov
gs
outsl
lock
ja
insb
loopne
std
cli
pop
repnz
fmull
pop
and
pusha
xor
out
mov
or
sub
addl
fwait
mov
ret
push
leave
mov
push
cltd
jnp
sub
dec
push
das
xor
adc
lods
push
add
xchg
lsl
in
sub
mov
out
pop
stos
fldl
std
sbb
jmp
or
cs
jmp
xchg
scas
sbb
in
cs
int
dec
and
ljmp
mov
push
dec
mov
dec
add
pop
and
xlat
sub
mov
fdivr
push
fmul
aad
cmpsl
xchg
mov
cmpsl
cmp
push
jecxz
push
notb
mov
imulb
int3
insl
or
stc
xchg
sbbl
push
or
into
jns
inc
jp
mov
in
add
cmp
stc
add
adc
shlb
jno
out
inc
push
mov
outsl
ss
dec
push
mov
out
pushf
xor
jb
mov
ss
sbb
ljmp
mov
cmp
scas
int3
insb
in
jae
addb
push
mov
insl
mov
into
fsubs
aaa
mov
lret
push
inc
adc
ret
pop
movsl
inc
lea
mov
xchg
or
mov
insl
insb
ja
dec
xchg
cmp
mov
dec
or
push
sub
push
rcll
int
push
mov
xor
mov
aad
rolb
or
test
adc
shrb
int3
mov
inc
sbb
dec
push
cli
mov
rcl
adc
in
and
cmp
mov
inc
sub
arpl
xorb
into
inc
js
adc
fcomps
jecxz
pop
pop
mov
iret
jl
cmp
xchg
mov
pop
jl
adc
bound
clc
mov
shrl
aaa
and
inc
jge
jne
test
add
xor
pushf
inc
and
sub
outsl
pop
mov
or
leave
out
into
loopne
in
mov
add
dec
in
ljmp
jmp
in
lahf
xchg
inc
xor
pop
call
dec
dec
divl
sub
movsb
xor
popa
add
repnz
lods
fwait
or
push
or
jnp
and
jns
lahf
xor
jb
dec
fcmovu
movsl
jmp
adc
push
mov
out
hlt
mov
sub
xchg
mov
dec
pop
pcmpeqb
inc
in
or
mov
xor
vunpcklps
push
and
je
sbb
test
jae
in
cmp
fstps
daa
cmp
cltd
jae
sbb
xor
xor
xor
xor
cli
cmp
pop
mov
add
adc
subb
cmp
call
cli
movb
xor
jmp
cmpsb
adc
xor
addr16
push
test
adc
pop
movsb
bound
or
lods
sub
lahf
pusha
mov
sub
movsl
and
cmc
xor
jle
mov
repz
rorl
adc
push
xchg
int
andl
jmp
mov
sbb
movsb
and
aas
cmp
add
lcall
repnz
xchg
xchg
sub
and
sbb
lret
sbb
repz
mov
push
xchg
imul
call
je
and
mov
xchg
fwait
data16
aaa
stc
dec
jge
xlat
call
repnz
insl
adc
jbe
xor
sbb
out
jnp
xor
mov
ret
lods
cmp
bound
lods
jmp
cmp
mov
inc
mov
arpl
cmpsb
fs
push
mov
movsl
pop
xchg
lock
push
xor
faddl
ret
xchg
leave
ret
dec
mov
repz
xchg
jo
push
popa
pop
fcmovnbe
jae
add
into
mov
out
xchg
mov
jne
xchg
fisubl
imul
out
cmpsl
mov
cltd
jp
aaa
mov
pop
mov
or
cwtl
xchg
mov
popa
fistps
adc
mov
sub
imul
out
jp
fnstenv
fistpll
aas
mov
shll
inc
ret
xor
and
or
int
int
xchg
inc
out
out
lret
pusha
nop
inc
add
ds
mov
pushf
xor
dec
pop
inc
cld
mov
pop
popf
orl
push
cmp
sub
jl
mov
mov
dec
xchg
lcall
addr16
adc
pop
mov
inc
add
mov
outsl
pop
insl
test
mov
sub
xchg
mov
out
hlt
push
out
sbb
and
pop
js
inc
xchg
popf
xor
aas
loop
push
mov
cmp
mov
add
cli
gs
fisttps
xor
cs
pop
les
xor
mov
push
jl
outsl
loopne
xor
jmp
sti
push
mov
ret
or
sbb
pop
repz
fisttpll
mov
repz
xchg
add
xor
sahf
outsb
jge
mov
scas
mov
les
xor
out
add
jnp
lret
jmp
xchg
in
xchg
aad
in
mov
inc
cmp
xchg
cwtd
fcomps
in
lds
or
add
rcrb
jecxz
and
cmp
xor
lcall
or
pop
bswap
divl
lret
imul
adc
sub
lds
jp
jg
mov
inc
sub
xor
inc
sbb
dec
pop
pop
addr16
je
je
outsb
arpl
fmull
jge
lods
fsubl
push
or
cli
movsb
push
xor
in
inc
xor
call
pop
loopne
pop
xor
cmpsl
nop
and
lcall
and
fisubs
and
mov
add
test
arpl
inc
xchg
adc
inc
sahf
jecxz
hlt
dec
xor
repnz
add
aam
decl
data16
fistpll
out
pop
lcall
jbe
add
outsb
pop
cmpsl
popf
fwait
cld
add
int3
sub
pop
push
push
aas
pushf
aad
loopne
inc
or
imul
out
and
cltd
mov
in
dec
add
ds
daa
fnstsw
imul
scas
lds
push
inc
xor
dec
pop
int
mov
fwait
icebp
xchg
lret
iret
fs
int3
cwtl
mov
adc
cltd
jno
rcrl
or
out
ds
pusha
out
int
cwtl
push
xor
insb
pop
shrl
mov
inc
pop
cmp
jnp
cmpsl
iret
adc
mov
repnz
or
jecxz
or
push
push
pop
mov
scas
movsb
int
jno
mov
repnz
out
outsl
lds
cmp
std
xchg
fdivl
and
inc
inc
cltd
sahf
out
movsl
sbb
leave
out
inc
lcall
iret
or
jp
stos
les
aaa
and
cmp
pop
mov
inc
cmp
mov
xor
in
in
lea
xchg
sti
insb
jns
mov
sub
pop
or
sub
loope
pop
rcrb
inc
xor
xchg
xor
inc
mov
ja
lds
jg
sub
cmc
add
xchg
loope
push
adc
inc
or
cmp
outsb
rcll
xor
mov
in
xchg
cmpsl
jp
clc
dec
and
add
add
outsl
jmp
jmp
sub
sbb
fmuls
idivb
mov
inc
test
pop
jns
adc
int
adc
jecxz
outsl
xchg
mov
cmp
js
sti
in
enter
imul
in
or
xlat
scas
push
mov
dec
ljmp
popf
fidivl
or
lahf
push
adc
hlt
clc
sbb
sub
loopne
out
cltd
adc
iret
cmp
sbb
mov
sub
scas
jb
subl
lea
add
fdivl
mov
scas
pop
das
and
dec
mov
dec
jge
insb
stos
or
and
add
dec
fwait
stos
xor
and
int3
xor
adc
ret
adc
sub
pop
ret
jmp
sbbb
push
in
push
gs
dec
lahf
js
cmp
popf
push
out
cmc
inc
aam
movsb
sbb
repnz
mov
pop
lret
xchg
jp
orb
xorb
pop
sahf
fidivl
daa
sub
outsl
es
mov
nop
xor
fsubrl
pop
fisubl
insb
dec
push
sbb
dec
outsl
push
mov
mov
enter
xor
out
gs
adc
dec
jmp
adc
jno
fcoms
mov
outsb
push
mov
pop
or
adc
fistpl
xchg
hlt
mov
cmp
and
icebp
idivb
lret
and
scas
cmp
int
js
pop
jg
jmp
mov
push
mov
cmpsb
js
test
outsl
xchg
repnz
push
aam
xorb
mov
jae
cld
imul
pinsrw
mov
movb
ficoml
mov
dec
insl
in
cmp
sbb
mov
xchg
fwait
cmp
ficomps
adc
hlt
cmpsb
cld
pop
pop
int
in
out
je
addr16
pushf
nop
push
sbb
sub
cmc
pop
xor
lea
jne
les
pop
ja
jbe
idivl
jne
cmp
jge
xlat
sbb
js
and
mov
mov
popa
and
add
xchg
cmp
mov
pop
mov
ret
sbb
dec
mov
mov
dec
xorl
cmpsb
lahf
pop
movsl
fcom
popl
mov
leave
sbb
popa
pusha
daa
sbb
dec
push
add
sarb
hlt
test
in
adc
in
ret
imul
xchg
mov
out
mov
das
adc
scas
jae
sub
imul
xchg
hlt
imul
jno
out
std
dec
int
dec
sbb
sahf
mov
sar
mov
insl
sahf
cmp
inc
push
add
xor
loopne
sarl
fistpll
inc
clc
pop
pop
leave
stos
and
mov
pop
ret
mov
les
mov
add
jb
pop
fcoml
jg
jno
sub
adc
and
outsb
imul
std
test
or
xor
xchg
test
rcl
aaa
in
out
cmp
ja
sbb
dec
enter
jb
mov
or
imul
jg
pop
addr16
jg
insb
ffree
mov
movsl
sub
adc
or
rol
shrb
mov
dec
repz
imul
rolb
arpl
xor
in
dec
lret
loope
pop
pop
xchg
xor
or
or
adc
in
fcomps
loope
mov
pop
mov
mov
inc
xchg
push
adc
jno
decb
fsubr
fwait
js
add
int3
jb
repz
bound
pop
das
inc
sbb
inc
fsubrl
test
sbb
add
pop
std
cmpsl
in
out
mov
shl
jl
or
mov
cmc
repz
outsb
push
test
xor
in
dec
pop
dec
ret
dec
jne
loop
sarl
add
stos
fs
push
test
push
loopne
out
out
mov
call
push
inc
add
pop
mov
mov
aam
or
daa
push
sti
cmpsl
and
jnp
fcoml
iret
pop
jae
xor
push
sbb
pop
stos
mov
mov
mov
clc
add
jo
test
cmp
rolb
aaa
dec
popf
ja
xchg
mov
pop
stos
jnp
imul
dec
dec
xchg
jno
or
jecxz
adc
mov
test
xor
sbb
mov
sbb
int3
lahf
ficoms
addl
ja
imul
outsb
jae
shlb
or
xor
int3
ret
jns
mov
inc
dec
out
push
ficompl
movsb
roll
mov
mov
add
clc
int3
mov
fsubp
fdivr
adc
hlt
scas
mov
jmp
mov
loop
or
out
or
aam
adc
pop
psubb
xor
sbbl
adc
stos
fisttpl
inc
mov
xor
mov
xlat
pop
pop
sbb
shrb
push
pusha
mov
push
xchg
scas
push
mov
mov
loop
xor
adc
int
or
xchg
jns
gs
mov
shlb
mov
repnz
push
add
mov
outsl
mov
rol
adcb
xor
repz
mov
imul
push
les
mov
out
lret
scas
movsb
lods
xor
sub
outsb
enter
inc
cli
sub
xor
xchg
adc
scas
jae
mov
add
insl
cltd
push
xchg
jmp
pop
rcrl
mov
insb
fcompl
mov
mov
jns
pop
dec
pop
cli
jge
movsb
pop
movntps
sbb
mov
mov
cmp
lock
jl
xchg
sbb
int
add
or
add
out
nop
pop
mov
and
inc
scas
into
mov
sbb
test
jnp
arpl
pop
xor
aas
xchg
inc
sub
inc
or
pusha
mov
or
ffreep
mov
inc
fsub
fidivrs
and
in
or
sahf
cli
loopne
fucom
imul
shlb
insb
pop
jb
push
daa
fwait
sbb
es
xchg
shrl
sahf
js
scas
mov
ljmp
jae
pop
sti
cli
cmpl
cld
dec
out
jmp
add
dec
push
and
out
xchg
out
mov
out
inc
leave
sub
out
jbe
pop
pop
and
dec
cmp
mov
jecxz
mov
mov
push
imul
dec
mov
int3
dec
cs
sar
adc
adc
les
inc
loopne
loopne
inc
nop
fstpl
mov
and
pextrw
mov
movsb
daa
aam
and
push
cmp
rcll
stc
movsb
fwait
sbb
aaa
pushf
sub
data16
push
out
insb
in
pop
idiv
fucomip
xchg
sub
mov
inc
cmp
mov
js
mov
push
es
and
and
sbb
sti
or
adc
dec
adc
mov
test
out
leave
lret
inc
sub
push
mov
pop
test
jmp
pop
xchg
and
lods
pop
scas
es
xchg
push
jp
cmp
fs
pop
pop
ret
xor
dec
call
ret
pusha
xor
mov
jb
mov
mov
xchg
xchg
mov
pusha
ja
xor
cmp
and
outsb
xchg
pop
mov
daa
adcl
test
test
test
jecxz
push
in
sbb
lret
mov
mov
aam
fidivrs
fnstcw
pop
xchg
xlat
es
loopne
push
mov
xchg
outsb
inc
adcb
lcall
mov
lret
fwait
cmpsb
sub
push
cmp
mov
push
mov
dec
mov
lods
pop
aad
mov
in
es
jge
je
ja
cmpsl
push
dec
jno
xor
mov
jl
mov
or
jmp
mov
in
xor
push
jne
mov
decl
es
test
dec
sbb
mov
mov
push
out
int
adc
and
cmpsl
das
imul
cmp
outsb
adc
sub
mov
leave
out
fwait
xor
daa
daa
jne
imul
xchg
sbb
adc
mov
repz
adc
test
jb
movsl
sbb
dec
mov
or
dec
and
negb
mov
rorb
adc
pop
lahf
cltd
into
sub
pop
fsubl
push
mov
pushl
push
and
inc
mov
lods
jb
repz
fildll
and
ficoms
pop
push
cld
mov
sub
clc
insb
mov
mov
xchg
stc
mov
lret
sub
jb
fstp
mov
mov
add
adc
mov
sub
xchg
or
enter
and
rcrb
ja
or
mov
in
inc
xchg
int3
nop
loop
dec
sbb
cmp
mov
inc
fwait
cmc
lds
mov
cmc
pop
or
loope
dec
scas
call
and
xlat
pop
pop
xchg
insb
adc
mov
sub
iret
repnz
std
ror
ds
or
roll
pop
pushf
mov
mov
out
sbb
jecxz
dec
ja
dec
push
out
push
loopne
movsl
ficompl
stc
push
cmpsb
mov
pop
mov
mov
jg
mov
les
jp
sbb
dec
mov
xchg
sub
push
inc
cmp
test
pushf
enter
negl
xchg
jl
out
in
dec
fwait
mov
inc
sbb
outsl
push
cltd
cld
sub
and
inc
add
pop
or
aas
insl
cmpsb
pop
int
and
dec
into
sti
cmp
sub
addb
pop
scas
in
or
xor
pop
lret
mov
xchg
aam
or
cmp
add
xchg
xchg
mov
sbb
lahf
or
ret
pop
stos
leave
add
imul
test
sbb
popf
in
mov
mov
cld
aaa
je
cmp
pop
test
fdivrl
fs
pop
clc
jmp
push
jl
mov
dec
lds
in
addr16
shr
adc
lds
cmpsb
mov
adc
adc
xor
outsl
mov
mov
loopne
mov
push
push
jns
fsubrs
lret
push
jne
sbb
inc
sahf
and
popf
sbb
cwtl
rorl
jno
pop
std
int3
insb
dec
and
ljmp
mov
xchg
adc
dec
dec
push
pop
xor
mov
pop
inc
popf
je
sti
or
mov
lahf
pop
in
ljmp
cmpl
ret
movsb
ljmp
popf
xor
cs
push
add
out
repnz
xchg
inc
outsb
sub
adc
xorb
xchg
or
dec
xor
push
pop
mov
sub
repnz
imul
push
xor
jns
mov
cmp
mov
repnz
lret
pop
adc
ljmp
fs
decl
pop
movsl
push
enter
arpl
mov
pop
jp
dec
repz
push
lods
mov
mov
lcall
stos
aaa
cmpsl
lahf
mov
sbb
cmc
xchg
xchg
ljmp
int3
cmc
pop
sbbb
adc
cmp
pushf
push
sub
mov
outsb
insb
stc
stos
push
addr16
pop
push
ds
clc
sub
clflush
ret
fadd
mov
sbb
mov
sbb
sbb
jle
int3
stos
adc
mov
and
fisttps
mov
fcoms
pop
out
and
cmp
in
cli
das
xchg
or
fsts
xchg
aam
mov
shlb
mov
mov
mov
xchg
outsb
pop
mov
add
mov
xor
xchg
adcb
mov
mov
rorl
fld
jle
inc
mov
and
xchg
ljmp
loopne
test
and
push
pop
xor
jl
int3
pop
pop
mov
mov
aaa
inc
subl
inc
dec
mov
gs
divb
lahf
pop
pop
xorl
xchg
loopne,pn
jno
movsb
cmp
int
bound
push
lret
xchg
test
lock
call
dec
lea
ja
shlb
pusha
in
mov
dec
aam
add
mov
add
pop
mov
mov
dec
outsl
out
lock
stos
xchg
xchg
sahf
in
stos
pop
nop
scas
sub
and
or
fcomps
call
fwait
inc
scas
jecxz
pop
fmull
pushf
fxch
cld
in
pusha
sbb
mov
cmp
pop
fsub
in
fsubs
sbb
mov
add
mov
mov
test
jmp
ret
push
add
inc
adc
dec
and
imul
or
xor
in
lahf
pop
inc
jb
xchg
dec
cli
lcall
nop
dec
fildll
sub
sbb
push
mov
mov
ror
sti
adc
mov
dec
push
and
xchg
mov
out
xor
test
push
and
inc
mov
and
jbe
outsl
outsl
xor
jo
sub
xchg
lret
jp
adc
and
iret
add
fsubr
aad
xor
test
inc
xacquire
jne
in
mov
sbb
adc
dec
loop
inc
test
inc
das
in
test
test
mov
test
adc
jmp
jmp
cltd
lahf
adc
les
ss
jp
xchg
mov
out
dec
addl
lods
in
jo
adc
sarb
jno
stos
pop
push
fidivrl
mov
adc
pop
push
jo
shll
lods
cmp
cmp
jns
jge
xchg
pop
cmp
sbb
in
fldenv
adc
dec
dec
mov
aaa
mov
mov
cmp
xchg
jno
and
lods
int3
sub
sbb
jp
lret
fldcw
jmp
es
daa
lods
bound
addr16
pushf
pop
mov
mov
mov
loopne
divb
jle
and
add
and
insl
notl
into
mov
push
or
xchg
cmp
movsl
inc
inc
sbb
orb
dec
sbb
das
xor
pop
pop
out
out
push
xchg
mov
popa
inc
repz
xchg
pop
fidivrs
push
jno
xchg
mov
xchg
jp
push
cmc
add
or
mov
iret
mov
std
inc
enter
bound
mov
and
leave
xchg
xchg
sti
xlat
sbb
outsl
xchg
push
xchg
pop
or
inc
test
lea
pop
xlat
in
test
and
movsb
pop
test
jnp
jbe
jmp
into
test
test
mov
hlt
adc
and
jp
xlat
push
loopne
xchg
pushf
lahf
out
mov
out
and
mov
sti
insl
clc
lds
shlb
mov
push
push
jae
fs
dec
xlat
cmp
cwtl
and
xchg
xchg
sub
aad
ja
lahf
mov
lods
sub
out
bound
cmp
push
sbb
xchg
roll
iret
jnp
xchg
mov
add
aaa
mul
cmpl
cwtl
push
or
leave
rorl
adc
pop
and
adc
bound
push
mov
cs
push
or
popf
mov
pop
jne
mov
jp
seta
ret
aam
stos
push
or
mov
mov
fdivr
xor
sbb
punpckhwd
loop
mov
nop
or
loopne
in
fstp
or
pop
xor
imul
fdivs
int3
clc
and
addr16
sub
sbb
adc
push
or
add
mov
lock
xchg
inc
push
jb
jnp
pop
int3
orb
divb
in
inc
cmc
outsl
or
xor
push
xchg
jnp
call
imul
fisttpll
mov
xchg
out
loop
std
lods
add
scas
test
mov
fwait
popf
je
hlt
mov
scas
js
push
in
inc
rorb
mov
in
mov
inc
mov
popl
xchg
or
cs
lret
loope
sub
xchg
sbb
scas
out
pop
jbe
mov
mov
addr16
adc
xchg
dec
cmc
mov
cmpb
dec
ret
ja
sub
jp
fmul
mov
pop
insb
aam
pop
outsb
notl
lock
cs
cmp
lods
movsl
call
nop
xchg
xchg
lea
xor
insb
and
int3
js
outsb
mov
or
mov
or
aaa
adc
dec
xchg
ror
aam
repz
mov
push
fcomps
push
or
sti
mov
mov
lds
movsb
sub
into
fld
or
out
add
mov
ss
fwait
out
push
xchg
push
push
xlat
scas
jle
das
lcall
sti
dec
shrl
mov
cltd
insb
pop
or
test
add
test
cmpsl
popf
pop
mov
scas
cmp
adc
fisttpl
fadd
jecxz
push
push
fstpt
cmp
test
pop
call
repnz
enter
lds
pop
or
in
movsl
ljmp
push
jl
adc
mov
pop
es
jle
pop
loope
push
pop
gs
cmc
xchg
sbb
dec
sbb
js
out
stc
inc
enter
mov
nop
and
std
lret
pop
lea
daa
sub
test
sub
std
test
arpl
add
xrelease
gs
imul
nop
cmp
lret
ss
pop
int
addb
push
mov
or
xchg
adc
xchg
ja
repnz
jle
add
jo
lods
adc
les
adcl
imul
dec
insb
daa
into
test
dec
pop
add
jmp
insb
xchg
or
scas
cmp
mov
shlb
xor
ja
repnz
call
fsubl
push
imul
mov
cmp
and
dec
fmuls
movsl
inc
mov
push
and
sbb
pop
mov
cmpsl
mov
sub
repnz
movsb
stc
jb
in
cmpsb
cmp
pop
jns
stc
enter
mov
xchg
outsl
shrl
ss
aam
pop
in
pop
inc
cmp
int3
or
inc
mov
jnp
jmp
nop
inc
hlt
pushf
ret
imul
insb
lock
mov
sbb
pop
into
cmp
xor
dec
scas
aam
adcl
push
jb
push
addb
jne
aam
push
sbb
jle
cmp
inc
pop
fcmovnb
push
jbe
jb
jbe
ret
mov
sarl
hlt
jbe
adc
sbb
dec
cmp
fs
inc
in
xlat
adc
test
and
sub
fdivl
test
imul
pop
sub
mov
jge
adc
ja
fucomip
lock
inc
push
sbb
xchg
dec
rclb
pop
add
mov
or
sub
push
pop
cli
cltd
jge
out
popa
dec
fs
adc
inc
push
xor
mov
int3
push
xlat
mov
sti
mov
popf
clc
mov
repnz
hlt
test
pusha
add
cmc
lods
sub
cmpsl
dec
xchg
xor
pop
sbb
lods
jo
cmp
cmp
outsl
adcb
fwait
loopne
jae
out
add
jmp
aas
sti
xor
xor
aaa
outsl
and
push
popa
cs
in
daa
inc
scas
push
sahf
fistps
lret
lds
sahf
push
lret
fstl
outsb
sub
call
sub
dec
imul
sbb
jbe
cmp
dec
mov
fs
fs
mov
xlat
mov
jl
adc
mov
ljmp
and
xchg
sub
jle
and
jo
adc
adc
push
mov
mov
mov
push
in
push
test
fs
call
mov
mov
lea
lret
rorl
sbb
and
sbb
dec
xchg
loopne
rorl
jmp
inc
jp
pusha
dec
inc
fstps
paddd
lea
jge
pop
pop
fwait
jne
pop
cmp
lods
subl
fwait
xchg
mov
push
call
cmp
setbe
cmpsl
mul
ret
cs
loop
cwtl
es
xchg
popf
mov
sbb
and
inc
imul
dec
or
jb
cwtl
and
push
add
or
pop
sahf
push
jg
ret
in
inc
fisubs
add
bound
pop
shlb
pop
xor
cmp
mov
sbb
mov
adc
adc
or
cmp
push
into
add
scas
loopne
xor
or
js
icebp
xchg
shll
push
fstps
int3
fcmovnb
inc
pusha
lock
ds
in
push
cmp
jb
in
push
cmp
pusha
mov
mov
mov
lahf
mov
or
jmp
cmpl
mov
enter
and
sbb
jns
lret
mov
ja
repnz
xchg
jmp
adc
in
in
rdmsr
lods
shrb
lret
popa
mov
cmc
loopne
bound
jmp
insb
testb
mov
xchg
add
dec
pop
int3
xlat
jno
ret
insb
das
ret
stos
jnp
sbb
add
dec
repz
pop
add
test
jecxz
pusha
filds
or
and
push
imul
mov
lods
jns
aaa
push
sub
push
gs
jae
xor
ret
lret
mov
push
xor
clc
inc
cvtps2pi
xchg
sub
mov
int3
sahf
mov
test
push
mov
inc
jecxz
and
sub
lods
ja
outsl
lock
push
sbb
cli
sub
ds
insb
adc
or
adc
mov
fdivrp
ljmp
inc
dec
xor
push
xchg
jb
add
xor
xchg
and
jb
popa
xlat
push
leave
int3
push
sahf
lret
xchg
push
out
insl
and
or
or
mov
push
fstps
and
in
pop
sahf
mov
push
jnp
rorb
mov
fstl
js
dec
inc
inc
inc
out
add
jmp
or
shll
dec
jl
jns
les
mov
cmp
fidivs
mov
aas
jne
mov
int
sbb
push
pop
cmpsl
movsb
dec
or
icebp
pop
cltd
icebp
pop
rorl
xchg
cmp
mov
jecxz
pop
ds
pop
sbb
jns
push
mov
add
jnp
and
adc
pop
add
test
inc
lret
das
push
fdiv
loopne
lea
repnz
test
pop
push
js
sbb
hlt
test
or
mov
js
lahf
insl
xchg
fnsetpm(287
loop
push
xor
sub
sahf
sbb
dec
or
rcl
adc
sbb
push
pop
add
mov
lret
jb
xchg
sbb
popf
hlt
adc
sti
jae
outsl
jbe
cmpsl
or
shll
mov
lds
jns
loop
xchg
mov
mov
push
pushf
xchg
add
fsubl
push
push
sbb
cli
inc
or
pushf
test
lea
pop
outsb
sbb
inc
dec
andb
push
sbb
xchg
inc
lcall
shrb
pop
icebp
fwait
add
fistl
stos
xor
cmp
das
sub
lds
pop
mov
insb
les
lahf
loop
push
jns
testl
sub
adc
ficoml
xchg
mov
ljmp
lock
add
push
xchg
inc
dec
pusha
mov
rolw
adc
lods
mov
cs
pop
add
add
popa
sbb
lock
lret
cmp
ret
cmp
leave
adc
sbb
dec
cwtl
sub
cmp
loope
aaa
xor
or
inc
xchg
in
xor
xor
aad
pushf
inc
adc
test
pusha
out
dec
sbb
cmp
int3
sub
xchg
mov
fst
or
xchg
or
insl
mov
scas
call
mov
inc
pop
jmp
lret
xchg
clc
test
xchg
inc
pushf
mov
lcall
in
out
lock
lret
int
shlb
insl
sbb
ja
divps
inc
bound
push
cmp
pop
add
psubsw
cli
ljmp
arpl
push
lods
scas
ficoml
pusha
xchg
jae
and
xchg
xchg
popl
cmpsb
mov
sarb
xchg
fs
in
lock
es
in
add
and
xchg
mov
lcall
xor
repnz
dec
sbb
xchg
sbb
mov
mov
push
cli
test
loopne
and
cmc
stc
les
nop
sbb
mov
mov
adc
and
xchg
mov
dec
int3
hlt
adc
dec
cwtl
mov
adc
jbe
imul
rcrb
loope
and
add
dec
lods
xchg
pop
jg
inc
jecxz
mov
pop
cmp
jae
outsb
mov
icebp
jle
pop
rcr
xor
sti
inc
insl
sbb
dec
scas
jae,pn
mov
out
sbb
scas
xor
lods
push
mov
mov
sbb
bts
or
cli
inc
add
cmp
gs
fsubrl
inc
jmp
sahf
aaa
lret
rcll
int
adc
and
xchg
ds
roll
arpl
aaa
pop
sbb
inc
pop
add
xchg
in
les
or
lods
loop
push
pop
mov
pushf
fidivrs
rolb
lea
mov
shlb
shrb
testb
bound
adc
inc
xor
icebp
dec
cli
pop
pop
pop
jns
or
pop
push
je
dec
fildl
movsb
add
pushf
fld
cltd
cmp
lods
cmp
fdivrl
push
arpl
pop
rcll
fadds
popa
sti
out
ja
jne
fs
jg
xchg
ret
inc
shlb
scas
lea
xchg
jmp
or
jb
add
out
mov
loope
stos
or
ljmp
or
adc
xor
test
out
lret
mov
not
stos
inc
mov
leave
jp
push
and
rcr
stc
imul
inc
divl
jae
notb
cltd
or
outsl
cmpsl
dec
mov
pop
jmp
rcrb
movsb
pop
cmp
adc
xor
insl
dec
movsl
enter
sub
roll
xor
scas
sbb
pop
mov
jae
dec
or
jg
stc
jae
cmpsb
dec
test
dec
sbb
cltd
mov
and
jmp
jbe
adcl
nop
inc
pop
hlt
negl
jecxz
xchg
movsl
xchg
int
jbe
lock
sub
in
mov
and
jp
hlt
fisubrs
mov
gs
fs
dec
out
dec
cmpsb
inc
leave
xor
enter
jp
loope
xor
repnz
inc
or
scas
rcrl
mov
xorl
inc
ljmp
incb
xchg
fnsave
fs
bound
adc
xchg
in
or
test
outsl
lret
dec
fistps
mov
xor
jmp
das
cld
pop
subb
sbb
cvtdq2ps
and
pushf
lahf
aam
mov
fisubrl
test
jg
or
shll
jmp
rorl
mov
inc
ja
cmpsb
sbb
gs
or
psllw
xor
imul
sbb
add
jl
jb
or
jecxz
cmp
sbb
fcmovne
mov
mov
cwtl
roll
or
cmp
sbb
insl
xor
jne,pn
inc
jae
sbb
stc
iret
test
xor
xor
clc
cmpsb
shll
or
dec
jnp
or
ja
stos
arpl
mov
push
std
xor
out
xchg
sub
out
push
mov
jb
add
ret
test
jnp
add
xor
in
cmpsl
xchg
outsl
lcall
xchg
mov
dec
inc
push
sub
inc
jne
aam
scas
loop
fistpl
push
xor
mov
jo
movsl
push
rclb
or
mov
lahf
or
insl
or
inc
pop
mov
mov
sbb
out
pop
addb
cs
cmpsl
pop
lods
jp
jne
push
test
jmp
insb
push
je
decb
xchg
mov
push
adc
clc
sub
in
fcomip
add
sub
xchg
push
adc
xchg
push
fwait
mov
int
arpl
shrl
mov
into
dec
aas
add
dec
mov
sbb
mov
inc
nop
lods
iret
dec
cli
dec
sub
dec
dec
in
mov
adcl
fistl
lea
repz
add
lock
fwait
and
out
mov
xor
rcrl
sub
iret
mov
addr16
pusha
mov
xchg
fnstenv
sbb
mov
mov
pop
fidivl
mov
mov
les
jmp
or
adc
dec
pop
xchg
cmc
add
fistpll
sbb
sar
dec
sti
add
ljmp
fs
and
scas
dec
mov
add
xadd
cmp
xchg
add
dec
pop
dec
jp
xchg
jno
xchg
js
dec
enter
loope
cmpsl
inc
das
sbb
mov
rolb
cmpsb
sbb
in
ds
cmp
pop
push
pause
xchg
into
xor
mov
mov
sarb
inc
mov
add
jae
push
clc
add
test
rcll
subl
rcrb
sbb
mov
jmp
add
cmp
test
mov
add
cld
ret
xchg
jno
fwait
daa
dec
jae
aas
dec
idivb
xchg
fwait
ret
mov
mov
outsb
mov
push
leave
rcl
mov
sub
icebp
sub
fcoml
cld
pop
pushf
daa
scas
cs
imul
or
dec
rorl
mov
popa
pop
mov
xchg
cmp
int3
mov
jecxz
out
jb
mov
and
mov
mov
loopne
movsb
es
add
or
in
loopne
mov
sbb
xchg
out
sti
out
fldenv
adc
imul
xlat
jbe
push
sub
and
imul
mov
xchg
add
jb
pop
enter
loope
mov
in
fdivrs
shlb
pusha
loopne
lods
out
push
das
ret
out
push
and
mov
push
rclb
dec
repz
mov
sbb
sub
inc
repnz
ret
sub
xchg
xlat
and
xchg
das
fnstsw
in
ret
sub
ja
outsb
jle
clc
and
xchg
icebp
in
lret
inc
mov
add
xor
cmpsb
cmc
das
cmc
loope
imul
lods
pop
add
dec
loopne
dec
sub
je
ljmp
aas
lcall
mov
or
sbb
vmread
mov
scas
nop
arpl
adc
cld
std
push
int3
inc
mov
cwtl
das
mov
mov
lcall
mov
dec
xchg
test
imull
mov
push
mov
xchg
pop
push
mov
add
bound
and
adc
fdivp
pusha
sti
add
int3
jbe
test
cltd
inc
out
adc
xor
adc
repnz
outsb
call
js
mov
or
fdivs
lock
dec
fmuls
sahf
jb
adc
push
cmc
stc
mov
sub
gs
xchg
adc
je
iret
in
movsl
push
clc
jbe
mov
sahf
movsl
in
or
mov
andl
in
sub
mov
dec
xor
push
xchg
cmp
std
jb
xchg
mov
inc
daa
mov
push
in
xor
iret
aad
pusha
lret
push
sbb
pop
and
lock
lret
fwait
insb
jmp
mov
and
pushf
xor
push
jge,pt
cmp
cmp
push
out
xor
jb
cmp
hlt
lods
bound
cld
in
xchg
into
je
rorb
dec
nop
gs
cltd
xor
aad
cmpl
mov
rcr
and
jmp
xchg
sub
pop
out
arpl
cmp
ret
mov
test
fwait
xor
repz
adc
adc
mov
flds
pop
sti
mov
xor
cmpsb
imul
jg
mov
adc
or
push
loope
aad
ja
sbb
fcoms
incb
or
pop
nop
movsl
jge
cwtl
xchg
mov
das
out
fwait
jno
fdivrs
in
imul
dec
jmp
pop
mov
xor
jb
scas
jmp
loope
in
out
subb
daa
xchg
sub
add
dec
shrl
loop
icebp
mov
inc
mov
in
call
icebp
das
cmp
and
data16
jle
ss
jns
push
in
lds
lahf
adc
and
or
dec
rcrl
lods
mov
xchg
dec
fnstenv
inc
push
lods
xlat
iret
stos
sbb
push
fadd
out
adc
mov
jl
xchg
movsb
sti
cmp
pop
fstpl
mov
stc
sbb
or
sbbb
sbb
sbb
fsubrp
mov
and
add
out
jo
sub
lds
jecxz
push
mov
mov
js
inc
jns
xchg
xor
jp
enter
jge
clc
adc
push
push
inc
lcall
and
in
lret
out
pop
jg
or
add
ret
push
sti
mov
mov
cmp
and
clc
jno
inc
enter
push
mov
mov
adc
mov
fs
pusha
test
int
aas
adc
push
or
mov
sbb
mov
fsubrs
or
adc
movsb
inc
lods
ret
and
notl
push
jne
into
push
sbb
scas
push
leave
data16
xchg
sub
out
mov
stos
mov
jne
aas
mov
xor
jno
and
mov
jle
push
dec
popf
iret
rorl
cmc
sub
sbb
arpl
mov
imul
testb
lock
sbb
sarb
popa
mov
add
insl
rorl
sbb
pop
popf
sar
adcl
push
mov
jo
test
xchg
cwtl
xor
push
and
cmpsl
stos
dec
lcall
out
inc
ss
popl
popl
mov
inc
popf
outsb
imul
cltd
fidivs
dec
mov
mov
bound
lods
std
loope
or
mov
lcall
jmp
dec
jne
sbb
lcall
pop
divl
mov
xchg
call
pop
imul
jle
ja
dec
repnz
mov
enter
and
fsub
sbb
dec
dec
out
push
lock
sub
pop
xchg
and
bound
xlat
inc
test
xchg
cmpsb
mov
hlt
mov
or
adc
mov
jmp
xchg
mov
jge
xchg
pop
jno
jo
mov
jle
cmp
add
sbb
ret
push
mov
xor
xor
popa
repz
sbb
and
jmp
add
jns
sub
lret
imul
push
cmp
call
outsl
push
sbb
addr16
and
lret
sub
mov
iret
mov
jge
or
or
sbb
mov
hlt
outsb
imul
inc
mov
imul
stos
adc
pop
fwait
push
adc
addl
or
outsb
fsubrl
movsb
call
cmp
inc
in
sbb
leave
jmp
push
sbb
ret
enter
ljmp
mov
jmp
mov
pop
arpl
mov
xlat
dec
imul
sub
popf
push
mov
ljmp
popf
adc
mov
imul
in
mov
stos
inc
cmp
sbb
or
xchg
jl
ss
cmpsb
push
insl
cld
or
or
xor
gs
mov
mov
jge
es
lahf
or
cmc
cmp
hlt
push
ja
and
push
fimull
inc
xor
test
je
and
cmpsl
mov
jmp
js
repnz
ja
push
testl
mov
jns
sbb
add
mov
cmp
push
jmp
ja
hlt
sbb
aam
mov
icebp
dec
outsb
jns
dec
push
push
gs
mov
and
imul
adc
xor
cmp
movsl
test
xor
loopne
xchg
aam
and
sbb
xchg
sub
cmpsl
andl
pop
cmp
fsubrl
jbe
out
in
sbb
dec
stos
push
mov
daa
jmp
ret
adc
push
test
mov
in
dec
xchg
mov
dec
imul
xchg
jnp
call
mov
cmpsl
imul
lods
jle
cwtl
mov
mov
jmp
into
push
lock
add
pop
push
pop
in
cs
loope
pop
push
adc
outsl
fs
test
nop
cmp
xchg
mov
cld
dec
fisubrl
inc
and
adc
push
sub
jae
lahf
xsaves
clc
stos
lea
movsl
and
cmp
imul
cmp
out
mov
xlat
or
scas
int
mov
and
push
out
out
lahf
sbb
mov
loopne
aam
pop
mov
sub
mov
dec
dec
scas
enter
jne
pop
es
imul
dec
jmp
cmp
int3
cmp
ficoms
icebp
imul
mov
in
loop
popl
xchg
xchg
mov
stos
jl
lret
push
mov
xorl
es
addb
jns
mov
push
fwait
or
sbb
and
jge
mov
cli
sbb
std
test
adc
add
call
sub
cmpsb
mov
test
dec
adc
add
fmuls
jae
cmpsl
dec
xchg
out
xchg
test
lahf
mov
mov
aaa
cs
rcr
xor
in
jns
repz
subl
leave
mov
pushf
jg
iret
adc
sbb
lea
xchg
or
add
scas
xchg
pop
das
pop
mov
sahf
or
cs
test
mov
sti
sub
xor
mov
mov
sbb
pop
mov
sub
insb
mov
scas
gs
mov
stc
fiadds
inc
ret
dec
nop
in
aad
sub
add
cld
ret
cmpsl
cwtl
repz
jmp
cmp
sbbl
cmp
jmp
adc
and
dec
push
clc
pop
clc
sbb
js
inc
das
in
jbe
mov
hlt
mov
sub
xchg
bound
test
add
mov
mov
sub
push
pop
lahf
xor
mov
jns,pt
add
sbb
sahf
and
inc
iret
pop
pop
jne
or
adc
mov
add
jge
out
push
in
clc
arpl
les
mov
outsb
and
pop
test
orb
addr16
cmp
xchg
jb
inc
sbb
test
jmp
or
xor
rcrb
out
cltd
adc
orl
in
loopne
jecxz
je
lock
popf
push
loope
push
add
pop
push
sub
sbb
adc
mov
adc
pushf
ficompl
movsl
cmp
jbe
sbb
insb
andb
xchg
ret
in
cmp
shrl
insb
mov
cwtl
clc
or
jmp
pop
inc
clc
sbb
add
shlb
iret
pusha
out
sbb
jmp
xchg
sub
pop
pop
out
sbb
aad
clc
and
mov
push
lcall
data16
or
sbb
xor
gs
in
cmp
out
stos
mov
stos
sahf
pop
int
push
pop
inc
inc
insb
aaa
jb
push
ret
fsubrl
sub
rclb
mov
xchg
dec
test
stc
sbb
imul
or
xor
fdiv
out
dec
jecxz
jno
sub
pop
jmp
xor
pop
adc
inc
fidivl
cltd
xor
lcall
mov
cmpb
out
sti
or
fsubs
adc
fdivl
lret
add
fs
je
cltd
faddl
mov
pop
push
push
push
sub
xchg
es
xchg
fwait
or
jmp
test
xchg
mov
or
and
daa
clc
out
test
dec
xor
sub
nop
pop
popf
insb
fstl
adc
loope
jo
out
inc
push
xor
and
cmpsb
bts
rclb
outsb
xor
xor
test
pop
mov
mov
scas
xor
inc
and
pusha
sub
push
pop
sub
idivl
pop
scas
mov
sub
pop
add
inc
lcall
orb
in
jno
imul
xchg
loopne
imul
in
cmp
adcl
cwtl
arpl
aad
or
mov
xchg
mov
and
sbb
sub
cmpb
mov
int3
mov
mov
add
js
dec
pop
adc
movsl
push
add
pop
ja
jnp
mov
add
subb
mov
sbb
out
add
scas
push
cmpsb
sbb
pop
xor
push
lea
mov
and
ret
mov
xchg
xorl
lret
inc
adc
jl
roll
outsl
jle
aam
inc
push
cmp
fdivl
xor
jmp
or
lret
movsl
in
jp
fidivs
xchg
adc
jl
test
push
scas
pop
andl
mov
mov
in
xor
and
adc
bound
jmp
rclb
aaa
into
mov
repnz
push
mov
clc
inc
stc
xchg
xor
inc
movsl
std
es
out
pusha
mov
fldcw
int3
add
gs
int
fs
and
fisttps
push
jmp
mov
movsl
bound
sub
shlb
mul
jecxz
mov
aam
int3
sub
fidivl
stos
cmp
mov
bound
stc
cmpsb
scas
std
ljmp
lea
sub
dec
fdiv
mov
or
outsl
lds
or
dec
ss
shrb
push
and
push
leave
adc
int3
in
lea
test
push
ja
add
push
out
inc
inc
mov
or
shl
aad
adc
jnp
scas
xor
xor
test
push
daa
frstor
jbe
cmpsl
test
push
je
outsb
xor
std
push
es
in
mov
mov
lret
adc
push
and
ds
xor
ret
pop
cmc
mov
xchg
pop
loope
test
fistpll
adc
and
pop
mov
aas
xchg
jp
pop
mull
stc
cli
mov
push
mov
add
inc
enter
sahf
xchg
jge
inc
and
push
shlb
fbld
push
sbb
scas
and
pop
ror
add
add
mov
adc
popa
icebp
ljmp
adc
push
cmpsb
push
ljmp
std
addr16
fildl
cli
es
ds
mov
sub
lahf
mov
call
lcall
adc
jge
lea
sbb
xchg
xchg
dec
jne
add
xchg
pop
jp
out
pop
stos
and
push
sbb
sbb
imul
adcb
cmp
in
cmpsb
sub
adc
mov
cmc
push
sbb
sub
dec
repz
pushf
sub
call
or
call
add
xor
and
dec
inc
xor
clc
insb
test
push
xor
popf
xchg
stos
insl
pop
shll
push
sarl
scas
dec
out
in
push
decl
insb
push
jg
test
sbb
aaa
es
and
dec
push
inc
cmpb
and
add
loopne
pop
scas
sbb
mov
in
lret
das
mov
out
mov
cli
mov
mov
mov
pop
imul
sub
pop
cli
inc
in
hlt
popa
setb
hlt
mov
pop
in
icebp
mov
loope
hlt
sub
sti
lea
ret
pop
dec
loop
test
ss
sbb
ret
cmp
sbb
add
aam
out
pushf
pop
pop
xor
int3
dec
fxch
dec
mov
lds
sbb
ss
jbe
adc
xor
dec
pop
scas
movsl
cld
mov
adc
mov
jp
mov
mov
push
adc
push
fildl
sub
mov
and
out
fcoml
ret
lea
hlt
sti
jbe
push
mov
add
xchg
push
xor
xchg
and
ja
cmp
adc
mov
and
icebp
sbb
orl
xchg
divb
and
push
or
sbb
jne
inc
fmull
pop
roll
outsb
cs
aaa
xor
and
scas
imul
pop
nop
les
inc
jnp
and
insl
mov
add
leave
xor
xor
sub
xchg
and
xchg
aaa
xchg
push
inc
add
push
fs
xchg
dec
aas
ja
popf
scas
in
adc
mov
jmp
or
lods
and
out
and
dec
je
test
call
leave
mov
cmc
fdivl
xor
and
xor
jmp
jne
inc
xchg
jmp
filds
pop
push
aad
cmp
enter
mov
in
xor
in
mov
stos
rol
push
rol
push
ficompl
add
adc
loope
or
lahf
cmp
lcall
mov
add
sti
cwtl
es
hlt
push
jnp
aas
xchg
daa
movhps
cmp
mov
ds
inc
sub
mov
outsb
stos
cwtl
dec
out
icebp
add
mov
inc
jp
ljmp
mov
mov
sahf
jle
lds
fs
sahf
cmp
mov
clc
std
movsl
push
inc
dec
ljmp
jge
call
xlat
loop
out
mov
jle
and
out
push
out
xor
pop
add
ret
or
and
arpl
lret
cmp
and
adc
data16
inc
je
pop
jg
push
outsl
or
pop
inc
push
dec
and
sahf
outsb
test
mov
ficompl
repz
inc
scas
jecxz
and
sub
mov
out
dec
fisttpll
decl
clc
pop
xchg
sahf
cmc
sub
mov
mov
fcompl
mov
test
xor
mov
insl
ds
push
pop
and
push
cmp
mov
jmp
adc
icebp
cmp
or
or
inc
jecxz
out
xchg
fisttps
cli
sbb
and
or
insb
lea
in
jg
mov
inc
dec
sahf
inc
mov
jecxz
xchg
std
fsubr
mov
rol
daa
and
or
or
add
loope
xchg
mov
icebp
add
push
jge
popa
sbbl
pop
push
sahf
shr
sbb
int3
jnp
test
loope
shlb
aad
push
out
jne
ss
or
dec
cmpsl
dec
mov
or
ret
or
decl
and
pop
outsb
jo
lahf
ss
es
call
bound
pop
mov
inc
icebp
ja
or
shrb
xor
hlt
xlat
dec
lahf
mov
outsb
sbb
das
mov
xchg
xchg
jmp
dec
xor
push
push
dec
mov
cmp
mov
test
iret
inc
inc
gs
push
out
out
adc
dec
push
shrb
ret
out
inc
cmp
ja
xchg
or
stos
loopne
arpl
jbe
movsl
test
fstps
test
and
adc
push
cli
inc
mov
xchg
div
aad
adc
scas
enter
or
out
jae
bswap
pop
mov
jbe
cmp
in
push
jecxz
scas
inc
mov
icebp
fdivl
lods
cmp
into
jg
cli
insb
sub
mov
pop
and
cs
jp
sbb
cmpsb
test
lds
mov
popa
leave
mov
lock
outsb
stc
subl
pop
inc
push
xchg
call
negb
mov
add
dec
jle
jns
mov
adc
lret
movsb
cli
ret
movsl
fwait
scas
sahf
enter
rorl
cmpb
ret
test
hlt
loop
lret
xlat
jbe
cs
cmp
adc
outsl
mov
out
test
xchg
xor
cmc
mov
sbb
or
pop
jno
xchg
in
dec
dec
lock
dec
jmp
or
ja
aad
fwait
pop
dec
jecxz
lods
dec
stos
js
and
out
xor
cmp
jmp
ret
xchg
cmpsb
ja
sbb
xor
lret
pop
inc
push
cltd
jne
pop
dec
mov
mov
arpl
push
pop
mov
push
outsl
xor
dec
inc
pop
pop
add
push
mov
loopne
xor
and
je
mov
inc
sub
lea
popf
jno
lods
sahf
movsl
negb
fsub
pop
adc
lea
cmp
repnz
stc
inc
fcoml
ret
outsb
imul
aad
fisttps
repz
pop
hlt
lods
arpl
add
inc
into
or
inc
imul
and
jmp
lahf
scas
insb
aad
movsl
push
mov
xlat
jmp
push
adc
andb
jnp
mov
adc
and
cmp
inc
push
pop
or
cmp
fucomp
out
and
xchg
or
mov
gs
popf
mov
test
sbb
loopne
mov
nop
sbb
jl
popa
xchg
in
pop
nop
daa
cmpsb
out
xor
xor
ljmp
xor
and
gs
mov
push
sub
add
pop
jae
sbb
in
mov
in
adc
jnp
psadbw
xor
push
jge
fbstp
or
mov
lret
lock
pop
mov
in
mov
xlat
push
dec
cltd
push
xor
add
cmp
loopne
pushf
dec
push
jecxz
mov
push
push
sbb
fdivrp
mov
push
hlt
fs
cmp
or
mov
mov
lcall
je
stc
nop
inc
das
xlat
pop
gs
inc
test
aam
ret
inc
fiaddl
outsb
mov
fst
stc
pop
lock
xor
mov
or
dec
dec
stc
stc
lds
pushf
in
jl
inc
aam
jg
test
fisttpll
repnz
dec
lcall
je
jl
aad
in
or
fld1
call
lahf
xor
xchg
movsb
add
jg
testl
mov
jae
add
mov
xor
inc
mov
fidivs
inc
cmp
imul
pop
shrb
fcoml
push
sbb
test
test
inc
mov
or
jb
test
cli
push
or
push
mov
out
push
cmovs
push
stc
dec
xchg
lods
dec
int3
lods
mov
sbb
sbb
xlat
xchg
aam
xchg
test
test
pop
xchg
xor
push
nop
std
xchg
sbb
and
pusha
std
xor
movsb
xchg
ret
mov
mov
push
scas
sbbb
sahf
ja
ror
nop
jg
and
mov
cmpb
out
xlat
loopne
jecxz
idivl
sti
mov
xor
test
mov
fdivs
ja
jae
mov
fbstp
pop
or
xor
xchg
dec
cmp
shrl
pop
mov
or
cmp
aad
js
in
loop,pn
in
hlt
pop
dec
es
mov
sub
and
sub
cmc
push
mov
arpl
in
mov
bound
cmp
xor
pop
add
lret
sti
cltd
mov
rcll
inc
mov
and
cltd
cmpsb
fs
mov
sbb
sarb
jnp
jno
or
pop
adc
mov
bound
mov
outsb
ret
mov
daa
popf
or
push
lret
push
xchg
pop
dec
jae
mov
push
sub
je
xchg
sub
js
jmp
cld
and
xor
mov
scas
xchg
dec
xchg
jbe
cs
push
scas
lods
int
sub
lret
sbbb
mov
adc
std
das
xor
dec
cmp
outsb
mov
jae
push
aad
insb
mov
mov
pop
jmp
pop
xchg
adc
xor
fs
sbb
call
enter
sub
xchg
dec
aaa
mov
ret
pop
sbb
orb
imul
mov
jne
jae
mov
pop
iret
and
inc
jb
push
mov
inc
dec
cs
adc
inc
inc
nop
orb
jle
mov
aad
mov
and
packsswb
lcall
mov
push
sbb
pop
outsl
notb
adc
sub
push
xor
cmp
mov
dec
gs
nop
movsb
ficompl
or
imul
out
mov
mov
mov
pop
mov
ljmp
test
lds
push
lea
inc
addr16
inc
adc
sahf
ret
or
pop
fs
rcll
out
insb
jb
xchg
pop
fstl
scas
stos
repz
xor
lods
mov
or
int
xor
xor
imul
dec
xorb
jl
std
popf
int
pop
dec
lret
xor
ljmp
lahf
pop
jno
call
popa
push
popf
clc
shrb
sbb
adc
repz
test
leave
mov
or
ficompl
jg
dec
cmp
mov
clc
inc
xchg
loopne
movd
mov
sbb
xchg
int
cmp
test
dec
test
pop
sarl
stos
sub
jne
pop
out
cmp
xor
movb
sbb
jo
mov
sub
xor
and
pop
dec
adc
imul
mov
ficomps
mov
xchg
and
stc
mov
lds
insl
sbb
xor
jl
mov
push
mov
mov
mov
cltd
aas
jnp
mov
mov
adc
insl
and
in
popl
pop
xchg
movsl
ds
jnp
sarl
fildl
push
mov
dec
fldt
divl
cmpsb
test
cltd
mov
dec
lret
mov
loop
jnp
leave
adc
pop
xchg
mov
dec
pop
xor
arpl
shlb
cltd
mov
adc
mov
inc
movntps
add
daa
daa
pusha
ret
nop
or
sub
in
jo
xlat
xchg
loope
jno
add
mov
ret
mov
movsl
stos
stc
rcrl
push
mov
pop
jle
add
add
xor
inc
cmc
inc
lret
popa
mov
mov
mov
jns
xlat
repz
into
adc
shlb
and
test
inc
loope
andl
adc
ds
or
mov
jp
xchg
cmp
adc
inc
fistpl
ljmp
loop
mov
jno
daa
jecxz
incb
js
sub
data16
sbb
jge
jo
dec
outsl
mov
inc
dec
sti
out
enter
sub
les
mov
and
in
pop
or
movsl
orb
cmpsl
sbb
popa
sbb
int
faddl
imul
pop
arpl
aad
sub
mov
jo
test
xor
divb
je
hlt
or
aad
das
lea
es
push
pop
out
repz
pusha
subl
adc
sub
mov
or
adc
repz
lods
mov
inc
dec
stos
xor
or
decl
or
push
jnp
mov
sar
mov
dec
pop
sub
sbb
pusha
adc
push
ja
cmp
movsb
or
xorl
jns
movsl
stc
adcb
mov
out
pusha
sti
icebp
pop
xchg
mov
pushf
mov
xchg
orl
inc
lods
mov
pop
xchg
sub
adc
adc
cmp
movsl
dec
jb
lods
push
add
icebp
fsub
jb
adc
or
nopl
out
orb
jle
mov
cmpsl
inc
or
sbb
mov
push
adc
xchg
push
callw
test
popa
out
dec
les
and
pop
jp
mov
push
or
je
add
in
stos
stos
pop
iret
sbb
inc
and
insl
and
adc
int
add
pop
aad
ss
nop
hlt
test
lock
fwait
lds
lock
mov
or
imul
push
xlat
or
xchg
movsl
cmpsl
push
xchg
lret
lea
test
jne
xchg
loop
jno
jle
shll
xor
adc
mov
mov
xchg
xor
stc
xorb
sbb
push
xchg
and
xor
mov
sub
data16
out
xor
inc
jp
sbb
aas
xor
and
fidivrl
pop
cld
push
les
dec
and
xor
or
pop
lret
and
fidivs
add
cmp
popa
mov
or
cmp
add
fldcw
mov
add
gs
push
js
repz
mov
inc
dec
int3
lods
nop
stos
xor
int3
cmpsb
push
inc
stc
fcomip
push
in
js
lahf
out
ja
inc
out
popa
jge
xor
mov
mov
fcmovu
in
ja
jbe
and
push
dec
popa
xlat
mov
mov
lea
fwait
out
push
dec
mov
cmp
out
xchg
adc
mov
bswap
push
or
aas
das
popa
mov
push
lods
stos
dec
sub
iret
ret
jmp
cwtl
sar
sti
lea
jae
cmp
aam
xor
subl
jo
cmpsb
jno
jmp
mov
mov
xor
push
insb
xchg
and
mov
sub
pop
nop
lods
inc
fs
nop
sub
mov
or
call
jmp
daa
mov
sahf
sub
mov
xchg
repz
xchg
out
cmp
aam
sbb
rcll
mov
push
dec
leave
lret
dec
sub
cmp
push
std
push
mov
mov
aad
mov
daa
fs
insl
clc
in
arpl
xor
sub
jecxz
dec
mov
sbb
xor
ljmp
test
lea
addr16
pop
shl
clc
sub
jnp,pn
push
andb
test
orl
dec
fs
mov
jae
adc
shrl
test
xlat
sti
dec
fs
jns
and
stos
mov
pop
shlb
xor
sub
insl
and
movsl
dec
test
mov
xchg
out
dec
jl
add
insl
inc
jne
orl
stc
sub
movsl
mov
pop
cwtl
lahf
std
pop
jbe
mov
xlat
and
nopl
out
icebp
mov
andl
addl
scas
mov
adc
ficompl
lret
dec
mov
mov
aas
and
ja
add
ja
jne
in
push
mov
jb
andl
into
insl
fbld
iret
fimuls
arpl
xchg
paddb
mov
mov
push
push
fadd
lea
push
mov
jno
shll
out
scas
loopne
insb
leave
and
add
inc
cs
xor
fsubrs
mov
mov
push
cli
cwtl
aaa
in
mov
jge
sbb
dec
divl
jg
xchg
movsb
insl
inc
add
mov
insb
dec
add
push
inc
fisttpll
scas
cmp
icebp
dec
inc
and
daa
iret
mov
or
dec
xor
or
enter
inc
mov
jae
data16
mov
or
sbb
mov
inc
pop
sub
xor
add
test
movsb
test
enter
fs
cs
mov
inc
cmpsl
and
out
int3
sbb
xor
add
jnp
cmpb
clc
xchg
xchg
xchg
movsb
fildl
ret
fisubs
pop
in
je
leave
adcl
xor
cmpsl
and
mov
into
xor
fisubrs
or
jb
out
loop
ret
lcall
nop
jo
jns
cmp
movsb
push
je
adc
addb
mov
movl
xchg
add
xor
xchg
push
loopne
sub
mov
cmpsb
insl
jmp
pop
outsb
jmp
push
adc
mov
xor
std
imul
adc
dec
in
inc
mov
imul
es
and
aas
idivl
or
xchg
adc
cld
and
sbb
das
mov
lods
aad
lds
rclb
mov
ljmp
pop
adc
sub
and
fiaddl
and
cltd
jl
jns
stc
in
ljmp
fdivr
push
cmpsb
dec
sbb
std
pusha
add
cld
dec
test
mov
enter
push
mov
movsb
stos
test
jp
pusha
test
call
sarb
dec
call
in
xchg
leave
fiadds
adc
adc
inc
movsw
fbstp
mov
add
push
push
roll
int
push
pop
cmc
cmp
mov
sub
inc
xlat
pop
pusha
sub
sbb
movsl
lahf
add
imul
pusha
repnz
pop
jge
and
dec
sbb
or
sbb
mov
sub
and
jns
mov
bound
push
enter
pop
add
dec
loopne
mov
add
ret
mov
jecxz
fiaddl
adc
subl
loopew
pop
fidivl
in
cpuid
fnstsw
cmpsl
test
xchg
push
fstpl
add
loop
into
lods
pop
and
jnp
and
shlb
test
daa
push
stos
fildl
mov
dec
xchg
dec
dec
pop
imul
sbb
cmp
les
test
out
fs
ja
rorl
bound
pusha
mov
enter
lret
dec
xchg
mov
call
adc
popa
lahf
out
jg
bound
add
inc
cld
xchg
inc
popf
push
mov
jmp
sbb
dec
cmp
daa
xor
jl
adc
movsl
pop
push
xor
inc
pop
popa
cmp
gs
lret
push
sub
inc
dec
sub
test
in
in
mov
enter
xchg
cwtl
mov
add
cmpl
insl
and
dec
jb
cmpl
data16
mov
pop
les
jge
or
fidivrl
cmp
inc
inc
out
and
push
std
addl
inc
dec
pop
addr16
ljmp
lret
add
xchg
lret
imul
push
ljmp
and
sbb
push
imul
mov
inc
mov
fwait
rcll
push
push
xor
jecxz
mov
fdivrp
outsb
mov
cmc
sub
daa
nop
pop
dec
add
and
in
adc
jnp
mov
dec
cmpsl
sbb
xchg
add
mov
mov
xchg
test
test
orl
rcrl
mov
jp
mov
loopne
mov
js
pushf
daa
das
xchg
in
loope
push
icebp
outsl
aaa
and
or
fwait
shlb
stos
cmp
mov
ja
aas
pop
mov
movsb
fnsave
shrl
dec
dec
test
inc
xor
mov
imul
fs
add
push
pushf
push
stc
lcall
inc
push
mov
jo
mov
xchg
loope
fsub
out
mov
lods
dec
bound
sbb
adc
push
pop
inc
inc
out
xlat
mov
fadds
sub
jae
subb
add
leave
adc
imul
mov
xor
cmp
shll
call
cs
sub
pop
sub
lods
jne
aam
ljmp
jge
pop
loopne
jb
arpl
push
cld
repz
xchg
mov
lret
xlat
inc
adc
pusha
xchg
test
stos
jmp
xchg
xchg
pop
jmp
shrl
je
mov
add
cmp
cmp
addl
cmp
int3
idivb
stos
and
mov
stos
outsl
dec
fwait
inc
cld
movsl
mov
cmp
pop
add
sti
xor
ror
pop
mov
pop
clc
inc
jle
setne
jnp
or
jns
call
lcall
bound
xchg
fisttps
jge
mov
test
push
std
loopne
in
adc
xor
les
and
push
int3
fiadds
push
cltd
pop
jmp
sahf
clc
jg
aas
mov
scas
push
pop
pusha
daa
sbb
ljmp
leave
mov
in
mov
ljmp
sub
cmp
adcb
pop
in
popa
fcmovne
and
mov
sbb
push
divb
add
outsl
repnz
pop
outsb
in
ss
cmp
push
cltd
pop
xchg
lock
or
cli
adc
mov
inc
scas
shlb
jb
into
lods
sub
dec
push
adc
add
adc
jle
sub
repnz
das
cmp
mov
ret
dec
dec
rcl
das
sub
loope
dec
mov
mov
pop
push
mov
mov
jns
ds
loope
xor
inc
imul
add
mov
enter
hlt
dec
mov
hlt
xchg
out
jne
repz
lret
call
mov
cmp
mov
daa
sbb
fs
movsl
lock
mov
jecxz
jle
fisttpl
test
fbld
adc
mov
and
and
adc
or
mov
data16
push
out
xor
loope
xchg
jb
push
mov
push
cmp
inc
fstps
pop
ficompl
pop
cmp
inc
fwait
data16
lods
mov
mov
test
fistpl
mov
mov
jb
jae
pop
mov
repnz
fcoml
lret
and
aas
pop
add
pushf
push
js
mov
scas
leave
jp,pn
int
sarb
push
pop
xor
cwtl
test
movd
sbb
out
or
ret
call
and
loopne
aas
out
dec
lods
sub
sti
cmc
add
dec
clc
jge
pop
and
mov
pop
sbb
push
add
jle
mov
push
pop
cmp
mov
cmp
adc
mov
xor
xor
lods
rcrl
or
jg
lret
scas
aas
jmp
gs
push
ss
dec
pop
sbb
cmp
mov
hlt
jno
aad
dec
bound
jnp
adc
xor
rorb
loopne
add
sbb
ss
cld
xchg
loop
das
daa
push
mov
jge,pn
xor
loop
push
jecxz
and
test
cwtl
push
das
fdivrp
mov
jle
icebp
jb
mov
add
ja
fcomps
data16
int
push
xchg
lret
loopne
push
inc
andb
movsb
mov
pusha
aam
fisubrl
xlat
add
out
adc
mov
xchg
repnz
popf
lret
sbb
xchg
mov
dec
mov
jne
jnp
mov
inc
std
inc
ficoms
lahf
adc
scas
push
ret
pop
cmpsb
jmp
clc
push
shrb
lret
cmp
inc
mov
mov
out
or
xorb
aas
pop
pushf
arpl
popa
sbb
jl
dec
stos
pop
gs
es
mov
notl
idivb
inc
test
bound
jbe
mov
adc
inc
dec
pop
jb
pop
xor
int3
inc
jp
add
shll
ror
scas
sub
or
clc
push
sub
jno
mov
adc
repnz
xchg
movsl
aaa
push
xchg
xchg
test
cmp
xchg
inc
fists
ret
jne
out
insl
xchg
loopne
pop
push
roll
or
dec
mov
jg
insl
and
mov
stc
push
jbe
cmpsb
sub
push
dec
int3
rolb
cld
inc
or
cld
add
cwtl
cltd
inc
cli
lahf
dec
les
mov
add
stc
mov
mov
mov
test
mov
jno
xchg
ljmp
sub
sbb
sub
dec
sbb
sti
mov
sub
mov
int
add
data16
cwtl
sub
push
mov
insb
repz
push
andb
cli
cmp
call
dec
xor
jo
xor
clc
mov
add
pop
mov
js
mov
adc
sbbl
mov
or
pusha
or
cmpsb
add
mov
int3
cld
lahf
and
dec
sbb
inc
dec
push
popf
cld
and
das
test
xchg
jns
or
dec
mov
hlt
adcb
mov
pushf
das
add
cmp
data16
jle
or
jo
xchg
rcl
jg
mov
mov
cmpl
stc
scas
mov
push
pop
mov
stos
stc
jl
sbbl
and
in
mov
fmuls
xchg
out
push
push
mov
mov
push
mov
and
add
mov
xchg
xor
adcb
dec
jb
lock
inc
das
jae
xchg
adc
pop
sub
fpatan
xchg
ljmp
out
xchg
xchg
pop
or
out
scas
ss
hlt
aaa
ja
lret
push
pop
mov
cmp
mov
pop
push
bound
int
mov
jns
je
int3
mov
adc
je
jle
loopne
jbe
lock
shrl
sarl
sbb
shll
cmc
mov
je
jnp
dec
outsl
fcom
push
dec
xchg
jo
cltd
add
shll
mov
ss
ret
xlat
scas
mov
jb
dec
adc
jge
pop
jo
push
repnz
add
mov
cmc
decb
int3
jbe
jo
loopne
out
inc
mov
mov
mov
inc
mov
cmp
cmp
sbb
sub
fidivs
les
pop
push
jmp
aaa
repz
fadds
push
cmpsl
xor
dec
lods
pop
jmp
push
and
cmp
dec
std
push
push
push
shr
je
divb
outsl
dec
sub
lock
cmpsl
xchg
xor
add
test
xor
lahf
mov
scas
push
daa
and
jle,pt
inc
or
addl
icebp
push
out
loop
rclb
mov
dec
test
fs
in
in
cs
push
cmp
clc
jno
jg
pop
addr16
mov
jbe
mov
inc
jge
sbb
cmp
cltd
sbb
jo
jbe
cmpb
in
add
addl
push
jmp
bound
mov
and
sbbb
xor
pop
stos
repnz
outsb
mov
xor
imulb
lret
and
and
push
mov
fcoms
inc
clc
xchg
xor
mov
push
fidivrl
push
icebp
cmp
sahf
call
js
sub
aas
jb
repz
fnstenv
inc
je
lods
adc
je
into
fsts
pop
outsb
dec
jge
inc
loopne
sub
test
xchg
movsb
or
xor
sub
cli
out
notb
je
int3
sub
add
mov
push
pusha
cld
mov
pop
das
and
fldl
and
cli
adc
sti
call
stos
adc
outsb
pop
ljmp
inc
mov
cs
pop
es
aas
shlb
pop
scas
faddp
clc
call
lods
fldenv
aad
lods
jle
pop
insl
fwait
inc
rcrb
loop
ss
movl
mov
or
xor
jg
jp
movsb
mov
ds
cltd
sti
les
outsl
xchg
xchg
mov
mov
orb
das
fdivrl
mov
imul
inc
xor
jg
lcall
push
rcll
sti
rorl
inc
push
xor
ljmp
fdivl
xor
fiaddl
cmpsl
stos
lods
mov
push
and
sub
jae
test
mov
inc
nop
adc
sbb
inc
dec
cmpsl
insb
fwait
xor
lret
mov
xor
lahf
js
or
incl
mov
dec
push
add
adc
sub
scas
aad
pop
mov
pushl
je
push
sub
jne
xchg
dec
pop
xchg
addl
lock
jbe
aas
clc
ljmp
aas
xchg
xor
pminsw
scas
sub
cltd
dec
test
sub
mov
add
push
inc
faddl
mov
sbb
jns
pop
sub
stc
cmpsb
inc
mov
lcall
cmpl
lods
cld
cmp
adc
lock
or
into
test
dec
jecxz
cli
mov
icebp
popf
cmp
dec
lret
aaa
shll
xchg
pushf
daa
and
mov
lods
cli
rcl
pop
aas
orl
cmp
or
pop
fstpt
cmp
dec
push
push
jbe
insl
adc
scas
iret
je
cld
push
or
sub
adc
dec
cmp
dec
jp
inc
scas
mov
sbb
repnz
push
mov
insb
outsl
and
stos
pop
jg
mov
popf
pop
hlt
sarb
fsts
cmpsb
leave
mov
cmc
or
lea
aaa
ret
stos
outsl
repnz
pop
imul
mov
aaa
into
imul
add
nop
and
cmpb
push
repz
push
inc
sbb
add
dec
es
cmp
fildl
or
mov
cmp
or
popf
sub
and
pusha
aam
jbe
sti
add
lret
sarl
mov
vsqrtps
mov
or
mov
pop
into
pop
loope
push
xchg
jl
and
and
xor
call
jnp
adc
loop
loopne
dec
xor
hlt
add
jg
fs
xchg
mov
sti
jae,pn
pop
jne
sbb
xor
pop
ja
dec
lock
ficompl
leave
gs
mov
mov
cmp
mov
je
push
repz
sbb
mov
clc
xchg
pop
and
int3
mov
push
jno
xchg
push
addr16
fcoml
and
mov
das
lea
aam
fbstp
cmp
push
dec
shrb
sub
jnp
dec
xchg
fs
aas
xor
int
adc
xor
enter
test
pushl
sar
inc
jp
xor
add
ret
add
sarl
lock
movsl
inc
pop
cmp
aad
repz
cmp
add
les
bound
push
push
cmpsb
mov
add
jbe
xor
jb
fsubp
out
push
xchg
std
xchg
sbb
aad
xchg
sbb
lea
pop
push
fxch
add
sub
arpl
fldenv
adc
lret
mov
xor
push
jno
sbb
fmull
and
pop
push
das
dec
inc
xchg
ljmp
push
pop
push
jmp
jg
jne
or
cld
sti
stc
sahf
add
and
add
sahf
mov
test
xor
data16
jge
pop
fwait
sub
sub
cmpb
je
xlat
das
outsb
inc
dec
adc
dec
cmpsb
cli
xchg
fwait
sbb
and
cmpsl
pop
mov
out
sbb
cmc
cmp
dec
jne
outsb
faddl
scas
js
or
inc
ret
jg
pop
and
jmp
and
sbb
cli
cmp
repnz
cli
pushf
pushf
xor
add
sbb
or
scas
shl
sub
inc
sbb
xchg
fmull
mov
mov
mov
loop
xchg
std
sbb
popa
add
push
mov
push
jmp
dec
cltd
dec
cmp
fdivrl
jno
dec
mov
pop
shlb
xchg
gs
insb
stos
mov
pop
inc
mov
xchg
inc
push
or
hlt
lret
jl
mov
xor
in
push
adc
ficoml
jbe
cmp
ja
sub
outsl
adc
ljmp
and
ja
stos
call
hlt
stos
pushf
mov
pop
xor
and
loopne
shrb
xchg
cwtl
sbbb
mov
or
add
incb
sbb
pop
idivb
popa
mov
stos
jo
jne
jnp
rcrb
bound
addr16
testl
xlat
sub
mov
insl
pop
push
popf
push
addr16
sbb
add
mov
sbbl
ja
fiadds
xchg
mov
in
flds
movsb
dec
outsb
jno
stos
movsl
xchg
mov
lret
sub
mov
mov
push
leave
repz
xor
pop
dec
aas
jp
dec
and
test
ret
into
mov
sahf
cli
sub
ja
and
push
xor
rolb
push
hlt
popf
repz
adc
outsb
xchg
mov
fdiv
inc
or
mov
test
inc
or
jl
incl
pop
cmp
sti
ret
xchg
sbb
push
adcb
jo
fimuls
fldcw
dec
outsb
push
jge
sbb
stc
sbb
inc
cmc
out
stos
mov
dec
inc
les
xor
cmp
mov
push
inc
dec
cmc
lods
mov
test
add
mov
stos
mov
mov
xchg
cltd
xchg
dec
and
rolb
cmp
xchg
rolb
jge
mov
insl
cmp
xor
xchg
ret
xchg
dec
enter
into
cld
stos
jns
pop
std
data16
push
rorb
xor
or
je
in
and
xorl
add
popa
sbb
push
mov
imul
xchg
out
mov
cmp
sbb
out
lret
xchg
jns
or
enter
js
addr16
int3
adc
xchg
es
sbb
xor
mov
adc
xor
ret
sbb
shlb
outsl
jmp
pop
call
and
shlb
aam
out
adc
jecxz
fisttpl
call
mov
hlt
scas
push
cli
xchg
xor
test
push
cmp
dec
test
mov
out
outsb
inc
stc
ret
out
bound
adc
xchg
shlb
mov
jg
pop
mov
mov
dec
lods
jle
sbb
sub
in
es
add
cwtl
adc
inc
fisttps
lods
dec
sbb
test
xchg
xlat
inc
sbb
into
pop
jl
fmull
cmp
out
inc
sbb
in
dec
cmpsb
mov
les
fcmovb
xchg
mov
ja
xchg
sub
inc
cld
movsl
cld
outsl
neg
ficoms
pushf
lds
mov
mov
lret
dec
int3
orb
adc
fisttps
mov
cmp
adc
mov
push
sbb
imul
pop
push
push
sbb
jae
jns
push
xchg
inc
adc
popa
negb
imul
js
mov
dec
mov
adc
pop
into
loope
xchg
fildll
jge
aam
cmpsb
mov
fwait
scas
mov
mov
ret
sti
dec
xor
in
dec
dec
cmpb
xor
xchg
xchg
cmp
cmpb
clc
pop
data16
mov
popa
loopne
jbe
imul
pop
outsb
sbb
mov
xor
imul
cmp
push
je
imul
mov
addb
pop
xchg
enter
jmp
sbb
mov
inc
pop
int3
and
jo
decb
mov
sub
mov
push
pushf
stc
mov
cmc
xchg
call
mov
shll
hlt
sbb
jb
lods
push
xor
cmp
ja
xchg
xchg
push
loop
addb
pop
fldenv
fdivrs
cltd
out
cmp
mov
mov
stc
push
mov
mov
inc
add
push
inc
pop
cmp
adc
sub
or
jae
shlb
aaa
mov
xchg
mov
pusha
push
nop
popl
push
and
xor
ffreep
test
or
fcomi
lahf
dec
ljmp
mov
inc
cwtl
roll
xor
xchg
and
cmp
movsb
filds
dec
roll
jbe
test
adc
loop
xor
fisubrs
mov
icebp
out
movsb
jo
cli
cs
adcl
jmp
mov
fiadds
xchg
sub
jecxz
mov
xor
sub
add
shrb
test
pop
jle
pop
push
jbe
push
jo
andl
mov
stos
pusha
pop
or
and
xchg
and
lods
cmc
push
cmc
mov
in
rcll
mov
jg
and
stc
je
jb
inc
mov
cli
loope
bnd
jo
xor
jp
push
stc
mov
inc
shl
pop
mov
xchg
sbb
test
push
jecxz
ret
lods
popf
cli
sub
sbb
rcl
or
popa
xchg
iret
jbe
mov
lret
rolb
out
in
ret
int
js
repz
jb
orl
mov
pop
cmpsl
sbb
cmp
sbb
add
outsb
cwtl
mov
es
and
in
outsb
mov
jmp
orb
and
fwait
xchg
mov
subl
in
je
pop
mov
sbb
pop
out
or
mov
mov
lret
fs
ret
jecxz
and
imul
jbe
scas
and
push
cmp
cmp
insb
sub
push
pop
icebp
mov
and
mov
add
jl
push
xlat
xor
imul
mov
adcl
fdivl
mov
mov
insl
sbb
jle
outsl
pop
push
lds
outsb
jecxz
mov
mov
lods
in
or
push
and
mov
cli
sbb
shll
xchg
sahf
sbb
dec
mov
ss
inc
pop
jmp
sbb
fidivs
sti
mov
ficoms
pop
pop
dec
shrl
push
int
icebp
mov
or
push
sahf
inc
js,pt
jl
lock
jecxz
ret
daa
adc
xchg
pop
pop
imul
lcall
mov
dec
jo
cmp
fld
add
or
in
aaa
mov
cmpl
lcall
arpl
arpl
popa
lret
test
jle
rorl
out
sub
adc
roll
mov
andl
enter
dec
jno
push
hlt
pop
jo
gs
or
popf
les
xor
xor
adc
orb
nop
pop
sti
jnp
adc
mov
bound
lahf
sbb
inc
jne
mov
arpl
int3
dec
je
pushf
loope
push
pop
fimull
pop
mov
xlat
adc
loopne
push
mov
nop
movsb
frstor
popa
dec
fistps
loopne
mov
jo
adc
cmp
dec
pop
ljmp
or
loopne
popf
and
pop
or
roll
in
mov
jb
and
pop
popa
pop
add
jmp
push
mov
sbb
in
sub
insb
xchg
xchg
dec
xor
mov
iret
mov
ret
dec
adcl
lock
cltd
outsl
int3
mov
fxam
dec
sub
shlb
loopne
or
rcrl
scas
or
mov
mov
jbe
jno
jae
adc
js
push
or
jecxz
rclb
dec
popa
ss
scas
aam
enter
pushf
inc
xchg
xor
cmc
sub
mov
mov
js
mov
outsl
mov
imul
jo
js
cwtl
fisttpl
cwtl
mov
shlb
cmp
sub
pop
and
adc
mov
fsubrs
push
dec
lret
inc
pop
xor
jge
loopne
jle
in
fsubs
cmp
xchg
push
aas
test
pop
cmpsl
int
pop
fldcw
test
inc
sbb
into
cmp
jge
test
add
ret
mov
outsb
sbb
mov
add
gs
mov
ret
cmp
xchg
pusha
sub
clc
ds
repnz
icebp
xchg
jns
rdtsc
sub
lea
int
dec
insb
dec
add
fsubs
das
xlat
std
and
xor
mov
fildl
jne
push
pop
test
stc
aaa
and
ja
dec
out
lcall
pop
cmp
fsubl
aam
aam
sub
mov
lcall
sbbb
pop
sbb
outsl
repnz
jl
ret
push
aas
mov
movsb
adc
rcll
arpl
jmp
push
pop
pop
jge
aaa
andb
xchg
roll
nop
in
jl
add
pop
iret
lret
add
jns
adc
insl
cmp
sbb
or
push
xchg
jl
push
sub
fimuls
mov
mov
inc
inc
roll
mov
outsb
cmpsb
jg
cltd
mov
std
out
inc
sbb
ljmp
int3
mov
mov
sub
jb
push
jl
js
int3
lods
call
aam
lock
mov
pop
jmp
cs
loop
pop
lret
mov
cmpsl
les
adc
jo
mov
pop
out
movsl
pop
andl
idivl
adc
scas
push
jle
daa
imul
xchg
icebp
filds
pop
sub
and
jns
xchg
adc
imul
push
xchg
jns
dec
pop
jge
ret
jmp
push
lret
jmp
jge
insl
ss
daa
je
xlat
or
mov
push
cmpsb
sbb
push
int
mov
lea
xchg
sub
mov
dec
inc
test
and
sbb
pop
lods
inc
or
test
arpl
lret
lods
je
push
jmp
mov
adc
inc
push
sahf
test
pop
push
adc
or
imul
fcmovnbe
mov
xor
js
push
lods
mov
lcall
popa
imul
data16
add
or
scas
dec
ficomps
mov
insl
lret
xor
insl
xchg
mov
xor
jmp
cmpsb
xchg
inc
xor
inc
in
adc
sbb
mov
mov
ds
loopne
inc
dec
pop
test
rolb
dec
adcb
sbb
out
dec
stc
loop
push
int
inc
mov
mov
inc
jb
lret
shl
daa
fnstenv
xchg
jns
loope
shrb
jo
addr16
jo
in
into
adc
aas
mov
cmp
mov
mov
das
nop
repnz
sbb
fistpll
nop
bound
gs
mov
stos
push
mov
ret
jecxz
dec
pop
sbb
in
add
xor
popf
gs
pop
es
inc
shrb
fisubrl
int
lret
cmc
mov
sub
cmpsb
pushf
pusha
inc
xor
jmp
test
dec
daa
pop
fstps
cmpsl
dec
sbb
repz
push
and
push
js
add
fidivs
sbb
push
and
imul
jo
sahf
repnz
xchg
test
fwait
iret
mov
push
push
ror
bound
mov
adcl
fsubrl
mov
mov
mov
add
or
sbb
xorb
lods
adc
fisubrl
fidivs
stos
dec
fdivs
subl
add
faddl
rolb
xor
cmc
cmp
sub
pop
into
stos
aaa
ljmp
bound
jo
subl
cmp
mov
push
iret
iret
sbb
cmpsl
inc
push
das
sbb
sbb
adc
mov
cmpl
outsl
div
imul
mov
push
imul
mov
pop
jno
rcr
push
inc
ret
mov
and
cmp
rcrb
mov
lods
inc
sti
rorb
pop
fsubs
xchg
lods
cmp
mov
imul
cmp
pop
cmpsl
mov
movsl
call
sbb
push
dec
dec
cmp
int
addl
enter
cmpb
cmp
jbe
adc
sbb
stos
sub
and
cmp
aam
push
mov
cli
add
fwait
addl
pop
inc
mov
cmp
out
out
push
fmul
adc
dec
pop
inc
fidivs
sbb
xorl
pushl
imul
jecxz
lods
scas
pop
mov
pop
or
mov
or
mov
cmpsl
addr16
cs
xchg
repnz
repnz
xchg
in
lcall
aam
mov
push
arpl
jns
push
stos
xor
popa
mov
scas
pop
pop
data16
jmp
jne
fdivs
xchg
jmp
aad
fcomps
mov
pop
jmp
notrack
mov
add
stc
xor
or
fwait
leave
test
repz
ret
mov
jns
pop
scas
mov
cld
sub
orl
mov
fimuls
std
in
into
fwait
and
push
adc
js
fs
mov
std
dec
icebp
or
outsb
xorb
data16
jecxz
jo
jmp
cltd
push
mov
int3
mov
shlb
lret
push
lock
mov
popa
popf
cmp
pushf
mov
mov
in
sbb
dec
xor
add
outsl
out
data16
fnstcw
orl
out
xchg
shrl
pusha
adcl
imul
jecxz
push
jns
bound
in
jbe
pop
push
jl
xchg
sub
sub
faddl
insl
dec
xor
xchg
mov
fcoms
inc
jle
in
push
popf
add
icebp
jae
test
cwtl
inc
test
dec
addr16
out
pop
adcl
dec
lret
hlt
dec
flds
push
jae
sti
fidivrl
cwtl
xlat
cmpsl
sbb
xchg
rorb
imul
xorl
dec
sub
xchg
pop
out
xchg
les
call
movsl
xor
and
hlt
mov
outsb
lahf
lock
js
notb
insb
cmp
fucomip
xor
pop
jbe
or
ljmp
mov
sub
into
adc
jo
sub
stc
enter
xchg
int3
pop
jnp
dec
jnp
movzwl
cwtl
push
mov
cltd
xchg
out
xchg
jmp
and
push
xchg
add
push
xchg
dec
mov
shlb
stos
cmc
and
inc
xor
pop
jl
pop
add
sub
sbb
sbb
xchg
sbb
mov
mov
js
jno
jge
cmp
jg
pop
mov
cmp
cs
lret
das
cmp
insl
sbb
out
or
xor
mov
pop
add
bound
dec
push
mov
out
mov
loopne
pushf
in
jge
roll
fwait
pop
mov
test
shrb
rcrl
pop
dec
or
mov
enter
pop
mov
mov
inc
mov
fsubs
in
stc
xor
or
push
popf
fwait
incb
jle
lea
cmp
cmp
test
xor
pop
aas
sub
test
sbb
xchg
and
enter
addr16
aad
stc
lcall
or
cmpsl
push
mov
mov
push
xchg
das
je
gs
jo
test
ljmp
xchg
into
xchg
outsb
shll
ret
xor
jmp
cmpsl
add
scas
shlb
test
jbe
mov
insl
push
loopne
sbb
sti
dec
jnp
lret
fistpll
pop
inc
test
gs
dec
in
xorb
clc
adc
insb
stc
sub
add
in
prefetcht0
mov
gs
cmp
add
jmp
test
jmp
stos
sbb
repnz
mov
imul
enter
mov
sahf
sarb
in
dec
in
cmpsb
add
shlb
jmp
inc
insb
cld
lret
push
pop
les
jecxz
mov
mov
and
aam
mov
mov
das
movsl
frstor
rcl
or
loopne
int
js
cmp
in
mov
mov
into
add
add
mov
out
cmp
add
repz
pop
mov
shrl
sbb
sbb
std
loopne
xor
dec
cmc
out
pushf
ds
push
sbb
push
sub
insl
stos
hlt
out
jbe
inc
mov
lret
fs
test
enter
pop
mov
inc
mov
fstpl
jp
sbb
shr
stos
adc
xchg
pop
push
pop
inc
stos
lret
mov
dec
mov
push
jo
jns
test
mov
mov
in
and
xchg
mov
insb
cmp
jae
imul
dec
cmpsl
add
mov
clc
scas
sbb
hlt
lret
out
pop
aad
pop
icebp
mov
or
sti
call
insl
and
mov
pop
push
sbb
mov
mov
mov
inc
mov
fstl
sahf
mov
das
jo
dec
jo
mov
dec
out
stc
pop
push
xchg
cs
fldt
cmp
rclb
add
in
adc
mov
je
add
pop
aaa
mov
or
pop
mov
andb
and
mov
out
out
mov
cs
and
inc
sti
push
xchg
jnp
popf
pop
mov
adc
xlat
dec
push
loope
in
push
cmpsb
pop
xchg
xor
out
jmp
in
in
cli
lock
stos
iret
test
and
loopne
pop
fwait
call
mov
aas
scas
orl
mov
jge
and
mov
dec
jp
popa
out
dec
cmpsb
mov
jecxz
push
inc
cltd
not
sbb
dec
mov
popa
adc
cli
pop
push
lods
sub
dec
rclb
adc
jnp
fildll
push
inc
xchg
cmp
dec
lods
xchg
lret
out
push
movsb
xchg
adc
mov
pop
xchg
inc
sub
jns
mov
std
jns
dec
pop
aas
adc
mov
and
mov
push
test
mov
enter
mov
lcall
rolb
mov
adc
cli
jle
cli
xor
adc
xchg
shr
je
mov
xchg
repnz
lods
dec
dec
inc
push
jne
imul
push
xor
add
and
jno
jmp
jns
mov
hlt
sub
lret
inc
push
insb
rcr
or
cmp
lahf
cmpsl
cmp
mov
ret
std
xchg
pop
lret
and
pusha
iret
pop
xor
in
sub
adc
dec
sti
cmpsl
cwtl
clc
jnp
or
es
pop
and
hlt
adc
shr
jne
stos
or
vpsubsw
imul
test
jl
test
jno
inc
mov
in
xchg
popf
rcl
or
subl
popf
cmp
das
lock
or
sub
fcoms
cmp
sahf
fiadds
jl
dec
inc
test
cmp
in
cmp
push
clc
xor
push
loopne
jg
movl
lcall
dec
jne
sub
adc
push
cmp
inc
dec
mov
fcoms
es
cmpsl
test
loopne
sub
icebp
repz
hlt
std
xchg
sahf
pop
pop
mov
add
ja
mov
cmp
fbld
lar
call
daa
cmp
cmpsb
lds
aaa
daa
push
in
cld
pop
pop
mov
jne
push
aad
sub
and
stc
lods
sahf
imul
pop
out
add
cmp
movsl
inc
sti
push
add
xchg
dec
movsb
mov
sbb
mov
and
inc
inc
in
mov
xchg
mov
push
sbb
mov
add
sahf
iret
imul
movsb
mov
mov
sbb
rorl
inc
lods
std
xchg
mov
xchg
xchg
xchg
in
lret
clc
push
xchg
add
out
and
mov
inc
mov
pop
in
les
or
mov
shr
mov
cmpsl
mov
rcrb
leave
mov
cmpl
cld
movsb
stos
jnp
xchg
scas
pushf
scas
out
dec
shl
fidivrl
mov
jl
insl
xchg
movsl
xlat
ja
into
test
fildll
dec
stc
add
push
push
adc
push
fs
cmovo
ds
push
add
pop
repnz
cwtl
shlb
cmp
mov
push
or
mov
mov
add
and
int3
imul
cmp
imul
inc
mov
and
adc
pushf
lret
pop
fcoms
mov
in
xchg
fildll
mov
or
inc
mov
push
insl
imul
lods
cmc
xchg
sbb
clc
in
cmp
pop
jecxz
sub
mov
push
les
aad
pop
adc
pushf
insl
or
iret
dec
or
push
cmp
lea
push
out
loope
adc
incl
cmp
clc
cmp
icebp
dec
enter
cltd
add
ss
imul
fnstcw
nop
stos
loope
jae
sub
push
xchg
and
cmp
call
add
out
push
pop
xor
mov
cmp
push
ds
cmp
arpl
push
scas
sub
jae
push
xor
inc
shlb
pop
sub
jmp
hlt
mov
mov
mov
adc
ja
pushf
scas
or
jmp
test
js
movsb
add
mov
subb
ficoms
out
sub
mov
aaa
fstps
dec
push
add
adc
lods
push
mov
jbe
xor
in
mov
lret
out
cmpsb
fwait
pop
xchg
or
sub
cmp
jae
sbb
jp
pop
inc
mov
cwtl
das
adc
adc
addb
fwait
rcr
mov
or
js
hlt
dec
adc
in
sub
dec
imul
jne
in
or
shrb
xchg
mov
jnp
out
push
xor
or
hlt
add
mov
inc
sahf
aad
scas
mov
jecxz
cbtw
insb
jb
js
pushf
cmp
aas
popf
out
xchg
push
jbe
lock
scas
test
sub
bsr
cmp
sbb
je
stc
adc
mov
mov
xor
scas
imul
or
mov
mov
xlat
xchg
jmp
mov
push
cmp
push
sub
or
dec
in
push
mov
lret
mov
nop
dec
jl
out
addr16
xor
cmp
xor
cltd
add
sub
push
shl
mov
scas
sub
shr
fiadds
xchg
pop
sbb
sub
in
push
pop
arpl
adc
fimull
push
mov
pop
les
lahf
insl
out
mov
into
scas
jno
push
mov
push
cs
mov
cmpl
enter
and
bound
ret
xchg
arpl
mov
sbb
jbe
adc
sbb
jge
xchg
in
add
pop
stos
int3
inc
outsl
adc
icebp
imul
cmp
push
mov
pop
pop
out
dec
and
push
mov
sub
add
mov
push
cmpsb
push
out
rcrl
and
xor
into
sahf
xchg
xchg
ja
push
sbb
stos
and
aaa
sub
mov
sub
lds
data16
mov
pop
xchg
adc
mov
lds
or
fwait
push
dec
stos
mov
movsb
mov
cmp
aad
daa
xchg
pop
xchg
push
dec
mov
pushf
fstl
movsl
pop
and
and
imul
fucomi
mov
sbb
sti
ss
or
lods
daa
and
stos
xor
test
dec
ljmp
hlt
imul
cmp
repnz
adc
inc
scas
pop
rol
je
fisubrl
jns
sti
addr16
sbb
sub
sub
mov
jb
rep
pop
ljmp
hlt
lods
pop
and
cli
or
cmp
cli
jne
dec
pcmpgtw
jne
push
loop
add
hlt
pop
mov
jge
xchg
sbb
imul
out
insb
and
inc
repz
cmp
fs
pop
cmp
test
xchg
xor
sub
cmp
xchg
ss
xor
out
shlb
sub
or
push
bound
jp
rorb
dec
sbb
or
xchg
pop
insb
add
mov
or
xor
dec
jnp
inc
sbb
or
mov
dec
stos
jg
sub
test
nop
dec
outsb
jae
fwait
rorb
or
sbb
movsl
xor
cmc
pop
cwtl
adc
jg
sbbb
inc
mov
adc
ss
xchg
mov
jge
sbb
mov
and
and
in
mov
pop
sbb
jmp
mov
in
jno
sbb
push
pusha
lret
pop
roll
int
sub
push
xor
jae
dec
adcl
mov
int3
jbe
jo
jno
jp
mov
cmpsb
ret
rclb
mov
in
add
add
fisubrl
pop
add
adcl
ljmp
xor
xorb
pusha
mov
nop
fidivs
imul
sub
fistpll
inc
ds
sti
lret
sbb
push
or
jg
mov
aam
jo
cmpsb
adc
les
jbe
pop
imul
push
or
push
xor
lds
adc
lahf
andb
jmp
and
loop
js
dec
mov
xchg
xor
test
insb
loope
jne
int3
or
cmp
xchg
loop
jb
cmpl
cmpsl
jp
sbb
scas
sbb
repnz
and
push
xchg
cltd
mov
sahf
jge
in
jecxz
fnstcw
sbbl
sbb
mov
jp
pushf
lods
and
jbe
or
dec
mov
lret
fildl
jl
lea
mov
ss
aas
js
iret
test
fiaddl
stc
in
jbe
insb
repnz
out
lea
or
sbb
mov
stos
pop
pop
sbb
inc
adc
push
stos
xchg
sub
adcb
push
push
push
dec
jmp
jno
ror
sbb
incb
je
or
aad
mov
es
mov
xchg
push
hlt
jbe
in
outsb
jge
gs
aam
sub
and
les
lret
aam
xor
aad
stc
pushf
test
in
push
lds
out
mov
lods
ja
dec
imul
fcomi
std
mov
ss
fmuls
in
xchg
out
loop
adc
push
repz
jo,pt
movsl
movd
div
mov
jns
repz
outsl
mov
ja
outsl
inc
leave
xchg
fsubs
rcrl
push
out
cmp
xor
out
xor
out
subl
movsl
aas
add
jno
xchg
pop
add
flds
aad
ds
ljmp
push
adc
inc
and
xor
and
sbb
xchg
stc
cmp
xchg
es
mov
sbb
cld
inc
mov
ja
push
aaa
and
mov
add
pushf
xchg
or
aam
test
bound
call
insb
xor
out
sbb
inc
test
xchg
jp
mov
push
jl
pop
loopne
and
cltd
sub
and
mov
mov
ljmp
cmc
cmp
add
cs
stc
mov
arpl
push
mov
adc
insb
jmp
and
out
lock
clc
xchg
inc
test
add
adc
jl
push
sahf
xchg
cltd
sbb
sub
adc
addb
xchg
mov
cs
mov
dec
sub
inc
enter
mov
shll
rcrb
xchg
sbb
push
sbb
emms
mov
and
ss
add
rorb
enter
mov
fucomip
mov
xor
and
xchg
xchg
dec
je
pop
mov
test
cs
insl
pop
outsl
and
xor
dec
lcall
ret
sub
jmp
xchg
jb
ss
loope
push
jne
xor
add
cltd
jge
pop
mov
out
adc
or
sti
jbe,pn
sti
push
mov
icebp
pop
repnz
push
ret
lods
or
add
push
jmp
sub
gs
push
xor
xchg
repz
jbe
pop
cli
jg
xorl
jns
push
dec
cmp
int3
lret
popf
dec
or
shl
cmp
add
pop
lea
and
adc
dec
shrl
aam
push
psubd
loope
mov
ret
jl
call
movl
mov
hlt
je
add
mov
dec
cmpsl
mov
lret
ficoml
or
mov
jbe
or
mov
jmp
hlt
icebp
mov
mov
inc
lds
add
mov
ret
insb
rcr
mov
pop
inc
imul
push
push
imul
aad
movsl
mov
dec
in
adc
ror
mov
mov
add
pop
fidivl
out
sbb
imul
nop
or
jo
or
in
and
mov
xchg
mov
mov
adc
xor
outsb
xor
das
jl
inc
jmp
push
hlt
fdivrl
aas
outsl
popa
xor
cmpsl
inc
sbb
jo
lods
imul
test
mov
pop
aam
add
lret
popa
add
fimuls
repz
adc
push
clc
cmp
shl
loope
sbb
pop
cmpsl
adc
mov
xchg
ss
mov
arpl
adc
mov
div
negb
in
xchg
inc
dec
push
dec
lcall
adc
cmp
cmpsl
in
push
shrl
inc
insb
cmpsb
jle
push
mov
pop
sub
or
fmuls
imul
mov
xchg
lea
pushf
dec
stos
inc
ret
fimull
cli
push
stos
and
out
xchg
dec
sub
inc
mov
iret
cmp
fidivrl
and
stc
outsl
add
pushf
addr16
cmpsb
ret
mov
push
ljmp
mov
inc
mov
mov
gs
loopne
push
adc
repz
mov
cwtl
out
clc
pop
out
imul
lret
mov
xchg
push
inc
cmp
in
and
lods
pusha
and
aas
and
mov
mov
sbb
nopl
fdivrs
pop
in
dec
sti
mov
bound
jecxz
test
in
outsb
pop
or
sbb
shrb
jno
es
inc
dec
mov
cld
cmp
in
and
data16
push
pop
and
inc
push
inc
add
xor
fldt
insb
push
xlat
cmp
sbb
push
scas
sbb
and
lods
aas
rolb
stos
mov
inc
adc
fdivrl
pop
gs
adc
push
mov
cs
inc
inc
jg
or
fcoms
push
imul
insl
dec
jb
cmp
push
rcl
lcall
loope
mov
pusha
or
push
xchg
popf
push
orl
mov
sar
push
in
inc
call
loopne
pop
pop
sub
shll
test
xchg
repz
adc
mov
popf
sub
negb
xor
pop
mov
mov
and
aad
out
pop
xchg
ds
gs
jl
clc
push
outsb
dec
iret
fimuls
mov
lahf
gs
or
data16
in
pop
shlb
mov
and
cmp
add
repz
mov
in
dec
loopnew
xlat
int
in
ret
xlat
rorl
cmpsl
cli
lea
fsubrs
sahf
lahf
adc
push
int3
adc
mov
push
jle
js
lcall
mov
jne
loop
pop
leave
sub
xor
mov
adc
lds
mov
les
not
push
es
adc
sar
sarb
xchg
xchg
dec
movsb
push
test
and
push
mov
lea
jae
dec
mov
cld
inc
rcll
sahf
sarl
mov
adc
pop
ss
aaa
and
sub
pop
rcll
cltd
cmc
mov
xor
stos
sahf
das
fidivl
pop
fucomi
xchg
jne
scas
add
fucomi
out
insb
daa
lods
aaa
mov
pop
mov
adc
cmp
sub
int
push
inc
je
push
cwtl
mov
add
arpl
pop
js
pop
das
push
adc
mov
scas
popa
mov
daa
mov
loop
adc
push
out
dec
push
ds
mov
jb
xchg
out
mov
jne
imul
mov
sarl
leave
sbb
dec
clc
leave
mov
cmp
add
add
cmp
sub
and
push
jmp
or
cmc
push
push
jge
jl
jo
ret
popa
inc
mov
hlt
inc
and
jmp
out
mov
out
sub
test
or
icebp
and
sbb
ljmp
repz
ljmp
mov
inc
jns
xor
adc
popa
rcrb
xor
scas
into
push
xchg
sbb
ds
sbb
dec
push
fadds
mov
adc
sbb
pusha
popf
mul
adc
shl
call
mov
sbb
out
inc
fstl
shlb
insb
xor
fisttps
pop
pop
cwtl
imulb
stc
pop
mov
sti
mov
jge
sbb
out
mov
sub
dec
cld
adc
push
mov
cmpsl
or
int3
es
push
pop
cmc
pop
ljmp
cmc
fisubrl
test
in
jbe
sub
mov
jecxz
fsubrs
outsb
ret
mov
add
ret
xor
xchg
and
cmpl
les
arpl
iret
movsb
rcll
add
push
push
les
shll
iret
jns
insb
in
test
push
xchg
movsb
mov
ret
loopne
dec
pop
jge
xlat
popa
and
sysenter
mov
iret
sahf
int3
or
repnz
aas
stos
push
call
out
push
mov
scas
push
ss
push
mov
imul
and
push
adc
mov
nop
paddsb
sub
mov
ficoms
popf
add
mov
xchg
push
or
pop
movsl
adc
mov
pop
xor
stc
mov
fs
adc
sbb
xchg
shl
and
ret
jg
mov
inc
xorb
pop
movsl
mov
sub
xor
std
outsb
xchg
enter
mov
decl
mov
out
push
lcall
enter
xorl
cld
xor
sbb
jge
ret
sub
and
sub
inc
std
cmp
popf
push
xor
push
and
jmp
cltd
ret
scas
divb
sub
push
adc
std
ja
push
inc
pop
xchg
nop
sbb
pop
andb
ret
mov
dec
lods
loop
arpl
push
jne
into
sbb
stos
and
and
jle
test
xchg
stos
insb
movsl
mov
addr16
clc
test
fimuls
add
adc
cmpsb
adc
jl
inc
sbbl
rcll
cwtl
xor
and
and
jecxz
inc
dec
shl
inc
loope
in
mov
jns
arpl
cmp
push
dec
jp
jnp
in
sti
stc
fldt
jp
or
dec
jle
andb
mov
lock
mov
dec
jl
push
push
testl
push
jle
je
push
inc
scas
push
sbb
push
mov
jmp
mov
mov
lret
xchg
js
push
cs
shll
jo
push
mov
pop
xor
popa
and
mov
je
mov
ret
mov
dec
dec
nop
dec
inc
jae
cmp
mull
cmp
push
adc
dec
imul
mov
jecxz
lret
xor
xchg
lea
cwtl
hlt
test
roll
out
adc
sarb
and
xchg
xchg
sbb
sub
fidivrl
fstpl
mov
dec
cmp
cmc
xchg
mov
stc
xchg
mov
adc
testl
or
movsb
and
push
push
dec
mov
add
lods
inc
pushf
jo
mov
cs
popl
jl
pop
push
adc
dec
sub
add
nop
mov
xor
mov
or
cmp
lods
add
in
dec
and
fistl
inc
rolb
fisubs
loop
push
pop
and
addr16
jnp
cmpsb
dec
das
adc
js
pop
loop
inc
addr16
movsb
mov
sub
lods
sbb
imul
ljmp
cmp
mov
add
pop
stos
cmp
ds
xor
mov
icebp
scas
and
scas
and
fdiv
scas
repnz
jo
xchg
mov
dec
mov
cmp
cltd
negb
in
cmpsl
push
rcl
sub
cmp
xor
fldl
ret
int3
ror
jb
mov
adc
pop
add
inc
xchg
xchg
mov
cmp
es
cmpsb
into
and
cmpsl
arpl
inc
in
jp
lods
inc
outsl
dec
adcb
scas
leave
in
rolb
fistps
or
ret
push
inc
rcll
jmp
push
shlb
xchg
mov
push
xchg
jnp
mov
and
lods
pop
push
jae
das
int3
cs
pushf
shrb
mov
mov
test
stc
xchg
pop
or
adc
shll
sub
inc
dec
dec
psubw
cmp
jl
push
les
out
leave
or
xor
and
fisubrs
out
jae
xor
movsl
fstps
mov
jb
frstor
pop
shrl
es
loop
and
cmpsl
sbb
add
dec
mov
and
dec
aaa
imul
pop
sbb
fidivl
in
inc
mov
sbbl
push
push
add
xor
sarb
mov
rcll
push
xchg
stos
sahf
pop
cltd
mov
out
sub
mov
adc
mov
ret
sub
movsl
nop
shll
sub
clc
arpl
add
dec
xchg
cld
movl
lret
fadd
or
iret
dec
jns
xor
pop
dec
sti
pop
daa
add
jmp
push
cmp
jne
and
xchg
adc
or
adc
pusha
gs
stc
or
sub
and
stos
mov
sbb
adc
nop
jecxz
or
bound
push
cltd
or
lods
add
adc
shrl
ja
mov
jecxz
push
lret
std
das
fstpt
cmpsb
shl
xor
std
rcr
xor
inc
xorl
dec
and
cmp
cltd
inc
jge
dec
aaa
mov
jmp
smsw
outsb
scas
cmp
arpl
inc
mov
test
jb
movsb
lods
add
add
jle
decb
test
aam
rcrl
cmp
mov
insl
xchg
fldl
jb
dec
jl
sar
cmp
pop
dec
jge
lock
arpl
icebp
mov
lock
jnp
test
push
into
call
or
or
lock
mov
addr16
or
sbb
orl
and
adc
sbb
orb
sbb
push
xchg
xor
ret
mov
pop
call
in
movsl
insb
and
cmp
or
repz
fsubl
jle
fucom
push
add
pop
push
and
mov
cmpsl
adc
orb
and
mov
inc
inc
jg
js
xor
rcrl
jp
lds
imul
dec
push
out
mov
sub
testb
jecxz
xchg
xor
movsl
inc
sub
std
mov
daa
jae
push
inc
loope
out
xchg
ret
arpl
cld
mov
push
dec
xor
fstps
or
das
cld
xor
sarl
test
add
xchg
pop
mov
xchg
inc
pushf
mov
sbb
jno
int3
jmp
jp
into
pop
dec
cmc
insb
repnz
scas
in
insb
shl
orb
xchg
and
cmp
cltd
repnz
scas
jle
insl
imul
add
or
sub
lods
pushf
stos
lahf
adc
testl
dec
push
mov
sbb
mov
pop
and
sub
jmp
mov
fbld
add
scas
and
ret
add
mov
out
push
jbe
dec
pop
and
mov
jg
mov
jae
mov
sub
test
add
gs
jp
mov
sbb
frstor
dec
ficompl
sbb
mov
pop
dec
and
inc
out
cmp
pop
fbstp
push
mov
adc
js
mov
adcb
pusha
lahf
jmp
ficomps
ds
xor
jge
xor
and
imul
rcrl
adc
pop
cmp
enter
add
or
aaa
adc
lret
pop
jo
in
pop
cld
or
add
fstpl
mov
jge
outsl
and
add
pop
mov
mov
mov
ds
loope
ret
jmp
insb
jns
mov
push
or
mov
xchg
into
sub
sub
add
ss
or
cltd
pop
insl
sub
movsb
jb
stc
lods
or
cmp
outsb
lahf
fmull
lods
and
fidivs
call
jl
mov
lret
jbe
fcoms
jbe
mov
cmp
lea
clc
stc
mov
inc
sub
nop
data16
add
inc
dec
lods
push
lahf
dec
subb
into
dec
xor
or
lods
and
cmp
subb
shll
movsb
mov
adc
mov
inc
or
cmpsl
aas
sahf
in
inc
cmpb
sub
repnz
sbb
cli
cmpsb
xchg
stos
loopne
ret
jnp
push
ret
aas
adcb
int
xchg
mov
pop
mov
sub
sbb
aas
xor
loope
sub
stos
inc
outsb
jns
ss
insl
shr
inc
sbb
xchg
push
aad
xchg
aam
in
fimuls
add
and
jl
mov
adc
enter
mov
adc
jp
rorl
cli
jns
push
fs
js
ret
mov
mov
loopne
dec
inc
jle
lock
lcall
xchg
push
mov
ja
fimull
and
stos
enter
mov
aaa
mov
and
pop
inc
jg
mov
add
mov
pop
inc
xchg
sub
lods
shrl
fsts
mov
lods
dec
mov
cwtl
aam
or
xor
push
sti
das
ud0
adc
inc
lret
push
nop
dec
mov
mov
aam
cld
dec
in
mov
ret
dec
inc
loop
call
cmp
dec
call
push
mov
cwtl
cmp
mov
dec
aaa
lods
push
pop
orl
and
fstl
sbb
push
inc
imul
mul
cs
jle
in
pop
iret
inc
lss
xor
pop
mov
out
push
push
push
lcall
notl
lahf
int3
lods
mov
lret
xchg
inc
fdiv
sahf
sbb
cli
daa
jae
xchg
cwtl
ds
int
lock
into
js
cmp
lods
cmpsb
int
dec
pop
outsb
jmp
mov
push
and
out
sti
xor
dec
test
push
jle
or
inc
cli
dec
xchg
mov
pop
xchg
sub
or
adc
cmp
dec
insl
mov
inc
sub
iret
push
xchg
lahf
out
sub
mov
pop
filds
jmp
sub
int3
sub
xor
pop
pop
ljmp
scas
push
xchg
mov
int3
push
into
ror
cmp
lods
nop
sbb
push
loopne
adc
inc
enter
dec
sub
mov
add
enter
mov
mov
int3
mov
enter
mov
inc
ss
ret
fldt
push
arpl
mov
mov
cmc
dec
xor
sub
js
add
int
stc
mov
dec
mov
push
aaa
cwtl
movl
insb
test
push
push
jle
mov
mov
adc
leave
in
idiv
jge
lock
sub
cmc
adc
stos
pop
in
cmp
imul
and
mov
mov
mov
mov
test
add
jg
addl
les
dec
and
push
mov
ss
inc
daa
mov
sarb
jbe
test
je,pt
sti
ja
dec
cltd
xchg
push
fidivl
js
leave
mov
mov
nop
inc
or
adc
cmp
shll
sub
push
inc
js
or
les
pop
lods
and
icebp
int3
mov
pop
fbld
mov
jmp
adc
and
les
shl
ljmp
cmp
fwait
xor
dec
jg
ljmp
dec
jae
out
mov
aas
shll
mov
movsb
sub
cmp
cmc
popf
pop
shrb
and
imul
pop
add
or
xorl
into
clc
xor
sbb
cmp
dec
aam
xor
mov
jecxz
sbb
and
rclb
or
pop
inc
push
xor
movsl
lods
repz
adc
fsubrl
and
cmp
rorl
mov
out
mov
test
lret
mov
jmp
in
stc
jns
push
mov
sahf
xchg
fnsave
rolb
lock
sub
push
mov
enter
imul
cmc
je
insl
sbb
inc
pop
rorb
mov
pusha
or
aaa
hlt
or
out
cmp
cli
jg
stos
pop
push
cmpsl
pop
bound
push
pop
mov
cmp
cwtl
int3
or
jge
xor
stos
sarb
or
lret
push
mov
lea
mov
push
or
jo
stc
lea
mov
inc
loop
adc
arpl
dec
bnd
pop
jne
jle
inc
or
xor
outsb
cmp
adc
mov
rcll
out
add
pop
push
mov
push
jmp
xchg
mov
mov
jno
movsb
stos
mov
leave
cltd
adc
push
fs
dec
mov
js
out
out
movsl
xchg
stos
mov
mov
repnz
pop
push
pop
ffree
mov
adc
stos
xchg
in
and
sahf
orl
or
pop
xlat
lret
jae
das
sub
pop
fs
mov
stc
hlt
pop
lds
fs
cmpsb
clc
and
cmp
faddl
pop
dec
nop
xor
lods
call
push
pop
adc
das
shll
jecxz
fimull
sarb
lret
mov
dec
lods
cmpsl
push
and
lcall
rolb
xchg
scas
dec
aam
scas
mov
sub
xor
cmp
and
mov
sbb
dec
sub
push
and
gs
jmp
outsl
jno
subb
adc
jmp
fisttps
jb
mov
fimull
fiadds
lahf
stos
add
mov
js
cs
in
in
jns
mov
popf
xor
add
lods
xor
and
cmp
push
xor
dec
mov
mov
mov
jo
cld
enter
jg
divl
cmpxchg
test
adc
fisttps
ret
mov
paddq
inc
xchg
sahf
cltd
xchg
jo
xchg
sti
mov
adc
jg
sbb
sbb
xchg
xchg
das
pop
push
fmul
je
sbb
pop
xchg
daa
inc
inc
dec
in
mov
fsubrl
out
mov
inc
mov
lods
mov
jge
mov
add
shrb
adc
push
mov
scas
sarb
dec
in
insb
lahf
pop
jne
aas
inc
rcrl
inc
xchg
and
mov
call
cmpsl
push
jl
xchg
ja
or
cmpsb
subl
lods
fwait
lock
mov
sub
in
mov
and
pop
movb
fidivrl
in
inc
sub
arpl
sub
mov
or
sub
jmp
push
inc
pop
mov
jo
outsb
into
fisttpl
push
push
shll
ret
xchg
push
jg
jmp
jnp
push
popa
or
int3
jns
jg
neg
jmp
mov
out
jmp
sbb
repz
sub
xchg
xor
xchg
sbb
int
stos
jecxz
push
xchg
jl
inc
adcl
in
hlt
pop
das
dec
mov
mov
adc
adc
sub
mov
out
sub
cmpsl
cld
push
push
xor
popf
push
mov
jl
and
jb
cmp
inc
clc
mov
insb
and
test
xchg
and
adc
xchg
ret
std
pushf
imul
pop
sub
cmp
call
sub
sub
add
stc
dec
es
inc
add
jg
aad
adc
adc
scas
or
pushf
xor
in
pop
mov
adc
es
dec
js
xor
fnstenv
inc
dec
push
dec
pop
into
mov
ljmp
pop
ds
sub
dec
cmpsb
aas
add
cmp
cmp
shll
outsl
jne
loop
jno
stos
cld
sub
rorl
not
or
mov
mov
lret
jno
fdiv
pusha
cmp
sub
and
shlb
pop
pop
es
pop
in
nop
arpl
jo
inc
in
es
jecxz
push
mov
fdivr
sub
cwtl
pop
xchg
push
pop
jp
fdivl
sbb
imul
scas
xchg
popa
aaa
dec
lret
dec
adc
imul
outsb
cwtl
dec
dec
sub
jle
rcr
mov
jp
aad
sbb
pop
and
shrb
jnp
dec
push
jle
xlat
or
or
inc
jb
sub
movsb
jg
jecxz
cwtl
jae
rolb
in
iret
ja
stc
scas
cltd
push
orl
push
test
adc
enter
fcoms
xchg
cltd
insl
mov
dec
adc
mov
jl
sub
in
adc
pop
cld
pop
shll
arpl
xor
jg
add
fsubs
bound
mov
push
ljmp
dec
or
mov
or
sub
jb
pusha
fstpl
gs
adc
aas
jge
xorl
mov
jnp
loop
fdivs
jg
mov
cmpsb
out
fbstp
mov
xor
orb
dec
mov
or
mov
and
adcl
data16
add
dec
pop
in
mov
adc
cmp
adc
mov
ds
into
mov
mov
test
ljmp
inc
ljmp
insl
jo
or
cmp
add
jae
jecxz
xchg
pop
push
jmp
bound
push
mov
stos
jb
xchg
xlat
outsb
js
mov
adc
cmp
mov
mov
mov
cmp
adc
sbb
inc
xlat
fnsave
mov
in
push
cmp
cs
cs
loop
fcmovnb
adc
push
adcl
cmp
cmc
imul
test
push
push
inc
scas
mov
push
sub
mov
pop
mov
sbb
sub
lods
adc
xchg
cmp
iret
mov
or
push
and
dec
insl
lahf
push
xor
sbb
jae
xor
sbb
hlt
sbb
push
aad
xor
pop
pop
ljmp
mov
xchg
fisubrs
lock
addr16
add
sbb
adc
int
xlat
pusha
sub
call
pushf
pop
cld
jmp
mov
adc
push
loop
ficomps
sahf
or
iret
push
xchg
gs
xchg
adc
and
sarb
rcrb
push
jge
xchg
dec
sub
sbb
sub
imul
xor
lcall
mov
shlb
jge
lea
movswl
out
js
xor
das
push
in
mov
stos
enter
nop
test
lret
rcr
xchg
mov
int3
cs
push
movsl
cmpsl
push
fsubrs
call
imul
dec
fcmovnbe
sahf
addb
inc
xor
sub
repz
in
dec
out
xchg
insl
and
and
push
out
push
loope
iret
ds
div
cmpsl
or
outsl
paddd
lahf
pop
or
xchg
adc
popf
rol
jp
shlb
shrl
subl
dec
pushf
pop
mov
add
inc
out
jae
adc
inc
andb
sub
adc
mov
in
mov
mov
sub
mov
dec
push
aam
popa
mov
push
cmc
jp
mov
in
mov
mov
push
xor
mov
inc
popa
sub
nop
test
insb
ss
lock
xor
enter
cmpsb
lahf
inc
into
and
fmuls
psllq
hlt
mov
pusha
mov
mov
mov
xchg
addps
mov
outsl
cmp
jbe
in
aaa
aas
and
cli
pushf
adcb
adc
jo,pt
dec
scas
mov
mov
sub
aam
cmp
adc
dec
cs
ret
or
scas
xchg
jl
adc
popl
in
aas
loopne
sub
fistpll
and
xor
loope
push
mov
lret
xchg
jl
or
pop
pop
pop
cmc
add
cltd
iret
cmp
mov
movsl
nop
jne
ss
int3
lods
push
scas
push
push
stos
das
inc
cmp
adc
sub
jg
repz
push
inc
adc
adc
enter
push
call
or
dec
andl
dec
pusha
and
inc
lock
adc
mov
dec
test
mov
nop
stos
inc
aaa
xchg
jne
and
cwtl
inc
lds
add
jae
push
mov
call
dec
jp
ds
xchg
hlt
adc
pop
adc
xchg
ja
loope
xchg
push
lret
scas
push
repz
cwtl
es
pop
lret
decb
or
hlt
movsb
repnz
jbe
adc
sti
inc
push
fldl
call
and
adc
pop
mov
imul
iret
jns
out
push
insb
dec
jle
outsb
inc
jae
xor
push
pop
jnp
lret
xorl
out
or
scas
shll
int3
and
shrb
hlt
mov
scas
cmpsl
dec
xchg
dec
movsb
jo
in
shlb
insb
test
repnz
aad
xchg
adc
mov
lock
dec
arpl
xchg
and
xor
cmp
mov
sahf
cmp
jb
sub
aam
mov
add
fcoml
inc
and
cmp
insl
push
mov
push
ljmp
sahf
xchg
test
sbb
inc
mov
repz
imul
xchg
push
lods
mov
inc
inc
push
dec
shlb
lret
sub
xchg
dec
sub
mov
mov
nop
jmp
adc
lcall
ret
mov
mov
inc
icebp
sbb
mov
inc
rorb
push
dec
dec
xchg
mov
addb
into
fdiv
into
cmp
mov
cmp
mov
mov
mov
les
jl
int3
mov
xor
stos
xor
jns
popa
mov
in
lods
mov
and
out
ljmp
mov
out
add
hlt
addr16
and
push
adc
rolb
jns
insl
xchg
ret
dec
mov
orl
out
push
inc
leave
cmp
shrl
or
or
call
je
pop
insl
push
and
sub
add
adc
fstps
loope
in
mov
sarl
push
push
fs
jns
cmp
or
jae
jle
lods
cmpsb
aas
out
ja
xchg
fidivl
icebp
mov
ftst
outsb
jmp
cmp
cmp
lods
loop
jnp
int3
imul
nop
inc
lds
jne
inc
mov
mov
inc
pop
call
push
inc
add
mov
xchg
lret
sub
push
pusha
imul
pop
nop
gs
mov
jae
stos
in
pop
rol
cmpsl
ficompl
sti
into
jnp
in
sub
push
and
dec
bound
stos
ffree
xchg
inc
gs
fcmovbe
add
out
push
test
or
inc
repz
dec
pop
bound
jg
popa
adc
stos
movsl
mov
xor
dec
popa
dec
inc
xchg
pop
shufps
pusha
jl
fdivl
add
xchg
cmp
xchg
inc
sbb
xchg
push
gs
dec
test
inc
lds
sarl
dec
xchg
inc
xlat
movsb
push
sub
rcl
or
fsubrl
jg
test
fadds
sbb
jg
mov
xor
movsb
dec
mov
add
je
inc
sbb
test
ja
rolb
cmpsb
jo
sbb
mov
popa
fmull
insl
inc
inc
mov
push
movsb
loopne
cmpsl
xchg
lret
shr
lea
xlat
jecxz
imul
pop
out
out
sbb
int
and
stos
dec
or
inc
mov
add
iret
fldl
pop
mov
jne
scas
jne
icebp
cmp
test
sub
fisubs
mov
adc
cmpsl
pop
cmc
inc
mov
js
push
cmp
add
out
outsb
outsb
data16
push
pop
dec
push
movswl
ficompl
les
cwtl
or
pusha
ret
sahf
in
push
inc
jge
call
xor
pushf
inc
xor
sub
fsubr
aad
lea
mov
lods
call
jle
add
in
je
sub
mov
sar
inc
in
inc
pop
xor
es
xlat
inc
mov
repz
fdivrp
jl
push
ds
dec
mov
leave
xor
imul
sahf
and
shrb
repnz
add
and
scas
xchg
sbbb
mov
mov
cmp
jnp
fst
add
sbbb
rcrb
mov
leave
data16
shll
pop
dec
pop
stos
fs
jb
roll
ja
rorb
rorb
and
jmp
flds
mov
cmp
xor
lret
pop
divl
xor
scas
cmp
pop
leave
pop
jns
inc
mov
inc
into
lret
outsl
lods
lahf
hlt
shr
push
push
les
inc
int
cmp
setne
mov
mov
ror
fdivs
and
xchg
movl
push
xor
mov
and
and
jl
mov
cmp
mov
loop
test
lods
fmull
inc
sub
out
push
jmp
dec
jnp
dec
nop
mov
xlat
cmpsb
pop
sbb
imul
lret
incb
jns
or
rcr
cmc
dec
or
fstpl
cmpl
mov
test
jnp
or
mov
sbb
mov
aaa
adc
nop
nop
dec
pop
adc
pop
xlat
aaa
and
mov
leave
xchg
es
push
xchg
inc
cmp
jp
mov
or
mov
cmpb
sbb
popa
stc
adc
sub
mov
lahf
pop
xor
cmc
sti
mov
jl
aad
mov
jge
jne
sbb
dec
dec
test
je
ljmp
ss
shrb
dec
and
ss
xorl
xchg
stc
test
or
pop
mov
stos
push
dec
push
dec
xchg
movsb
ja
popf
insb
cmp
test
jo
jb
push
les
and
jle
sub
loope
adc
popa
xchg
in
xchg
daa
sbb
in
xor
test
cmc
jmp
mov
jb
and
jp
push
cmp
mov
and
aad
push
sbb
lcall
push
inc
lret
add
and
jge
lret
pop
jmp
in
jle,pt
mov
mov
idivl
cmp
lods
adc
pop
pop
cmpsb
test
aas
jge
mov
push
ljmp
inc
test
ss
je
xchg
sbb
jge
xchg
pop
sub
lods
loope
adc
sub
fwait
stos
jg
adc
in
xor
shl
pop
xlat
aam
imul
pop
leave
inc
popa
or
popa
push
sbb
lea
ret
lcall
sbb
push
rcll
and
sub
ljmp
jmp
icebp
cmpsb
push
popf
pop
push
mov
adc
jp
xor
add
mov
outsl
lcall
or
ds
lock
stc
add
inc
cs
pop
push
xchg
add
cmp
imul
add
fsubrp
mov
sbb
int3
lret
mov
pusha
xchg
inc
fldenv
iret
stos
sub
sbb
es
push
aas
or
pop
mov
mov
dec
andb
pop
lcall
hlt
dec
pop
iret
xchg
je
jbe
loop
arpl
jne
lcall
in
fsubl
xchg
push
xor
sbb
ret
adc
sbb
mov
mov
mull
cmpsl
or
mov
sub
add
jne
das
leave
mov
adc
push
movsb
xchg
adc
aas
or
out
sti
cmp
fcoms
dec
jmp
xor
push
pop
mov
cmpsb
jbe
das
jp
decl
sub
sahf
fs
mov
hlt
inc
pop
jle
inc
ja
pop
daa
add
cli
inc
rolb
lods
xorl
imul
aaa
jecxz
inc
lret
mov
icebp
js
push
mov
scas
and
xor
xchg
inc
sbb
sahf
sub
aad
fcoml
iret
jb
pop
pop
mov
dec
data16
dec
xchg
test
xor
push
inc
push
inc
pop
insb
sbb
orb
or
lret
cli
xchg
adc
stos
outsb
mov
mov
pop
lods
jne
mov
std
daa
in
or
out
push
pop
test
adc
leave
sub
pop
sub
cld
sub
dec
lods
mov
rcll
out
ret
cmp
cmpsl
push
lcall
imul
dec
jl
inc
ljmp
iret
or
fildll
sar
push
out
cmc
mov
adc
aaa
cmp
into
mov
and
push
sbb
inc
ret
sti
or
imul
stos
aad
jb
mov
lea
icebp
sbb
or
out
pusha
in
sti
call
and
fidivl
jae
fs
and
and
and
fiadds
jge
inc
jp
cltd
stos
hlt
mov
mov
xor
mulb
mov
mov
pop
cltd
and
in
push
int
inc
dec
in
pop
xchg
xchg
sahf
mov
cs
and
ja
call
jbe
mov
xor
xor
ret
sub
scas
ja
pop
push
or
ret
stos
add
jle
xchg
jecxz
loope
and
js
push
ja
rcrb
jge
stc
dec
sbb
test
ja
sbb
add
adc
rolb
dec
orl
out
push
lcall
mov
popf
scas
xor
lods
fimull
loopne
rorb
adc
loope
mov
jmp
das
xlat
lock
pop
cmp
test
repnz
aad
cmp
test
aam
fists
xor
cmpsb
shrl
sub
imul
mov
test
int3
mov
pop
lods
pop
and
shll
outsb
test
movsb
mov
push
dec
out
dec
in
xlat
mov
mov
fidivl
inc
add
fdivl
pop
fsubrs
push
push
sbb
pop
jb
and
add
sbb
mov
stc
lcall
sarb
mov
jmp
insl
add
ret
nop
rol
mov
cld
imul
adc
shr
add
jo
fimuls
aam
jo
popl
jle
testb
addb
jo
push
push
jno
jno
fnstcw
sbb
testb
or
mov
pop
add
and
lods
jno
or
cmp
push
lcall
push
jmp
shl
dec
push
ret
jg
dec
roll
mov
xchg
mov
cmpl
mov
fldt
or
js
xor
je
adc
xor
dec
push
stc
pop
aas
jg
repz
push
jnp
jbe
ja
mov
jns
fldcw
cmc
inc
leave
mov
pop
pushf
pop
rcrb
adc
jmp
cld
push
test
pop
mov
sub
stos
decl
cmp
mov
lock
jnp
push
ret
xor
mov
lret
inc
hlt
jp
mov
clc
mov
jg
lods
push
lods
shll
fimull
ret
clc
push
jb
jg
mov
int
sub
mov
add
or
jmp
dec
loope
dec
cmp
lods
pop
fidivrl
jg
test
xchg
push
cmp
cmp
mov
fs
insb
ljmp
rcl
lret
lods
cli
popf
and
push
xor
mov
jmp
and
lock
je
add
inc
lods
and
fadds
and
push
aas
push
push
imul
stos
subb
jl
jno
mov
jg
mov
and
jno
pop
sbb
sbb
cmp
gs
adc
cmp
cmp
mov
aad
addr16
stos
clc
stos
ret
push
cmp
aas
push
repnz
xchg
loop
pop
lret
iret
loope
mov
and
insb
mov
sbb
and
pusha
sarb
loop
fmull
fdivrs
push
mov
mul
mov
pop
jno
lds
pushf
dec
cmpsb
push
fs
xor
shll
jno
mov
lock
movsb
mov
lock
adc
shufps
and
and
jnp
push
push
mov
out
mov
dec
inc
mov
popa
xchg
jne
flds
insb
stos
xor
jbe
inc
fmull
sub
push
ss
jne
stc
xchg
repz
cwtl
adc
push
cmp
out
movsl
pop
test
pop
pop
dec
xchg
mov
dec
sub
sbb
shlb
outsl
jl
xor
jge
outsb
sahf
push
mov
js
mov
inc
pop
jmp
xorb
ds
lods
rcrb
xchg
push
outsb
test
vunpcklps
nop
stos
or
mov
aad
out
mov
lret
mov
data16
arpl
mov
std
dec
xor
adc
and
sbb
push
cltd
in
in
sbb
in
or
dec
jnp
jbe
add
lea
push
or
fwait
and
dec
test
sbb
cs
xchg
movl
pop
mov
shlb
lret
lret
dec
into
aad
out
ja
mov
sub
mov
in
push
push
fisttps
arpl
push
sub
subl
test
cmp
jmp
jle
sbb
push
sub
stos
orb
mov
mov
insb
into
lds
pusha
add
je
test
aas
arpl
fs
fists
mov
test
aad
jnp
mov
ss
fiaddl
addr16
mov
leave
xorl
push
push
dec
fprem1
sahf
hlt
sub
sbb
jo
sbb
outsl
repnz
mov
and
inc
addr16
cli
adc
fildl
lahf
and
xlat
rcll
mov
fs
mov
fidivrl
test
jnp
jg
jg
dec
push
xchg
repz
pop
and
xor
mov
btc
shll
std
lock
and
loopne
mov
push
jge
xor
cli
outsb
and
push
pop
sbb
sub
lock
lds
daa
js
pop
cmp
adc
repz
or
lcall
mov
jo
loope
sub
orb
das
add
imul
and
sub
inc
lods
int
pop
pop
aas
aas
dec
jge
das
xchg
icebp
push
and
pop
hlt
pop
and
stc
and
out
mov
ss
cmc
mov
mov
mov
dec
ret
repnz
jb
ss
pop
clc
out
icebp
push
mov
or
cmp
sub
pushf
hlt
jb
sti
xor
aam
sub
cmp
sarl
repnz
fistl
clc
add
mov
fmul
nop
aad
jg
jmp
pop
mov
mov
mov
movsl
out
fbld
add
lret
jp
ret
pusha
in
imul
incb
sub
fistpll
test
aaa
jo
sub
cs
sub
or
mov
fwait
lods
xor
sbb
xor
cltd
movl
mov
out
pop
stos
aam
and
mov
cmp
fidivrs
pop
lcall
mov
lret
adc
mov
mov
and
andl
adc
inc
adc
mov
xchg
jns
clc
and
hlt
add
adc
sub
add
out
test
mov
jo
inc
cs
fsubrs
pop
adc
repnz
das
jmp
push
pusha
inc
add
lcall
dec
xchg
test
cmpsl
dec
aaa
stc
sub
sbb
mov
xchg
imul
jne
push
out
jl
into
in
pop
mov
xchg
cltd
jecxz
mov
xchg
xor
mov
cmp
lcall
jmp
sub
mov
mov
xor
jae
movl
jb
jae
imul
nop
add
push
xor
mov
xchg
jp
fdivs
das
mov
pop
addr16
cli
ret
icebp
inc
xor
out
je
stos
inc
adc
out
pushl
dec
adc
sub
enter
lock
out
nop
mov
ja,pt
mov
hlt
int3
mov
jl
fnstenv
cmpsl
cwtl
dec
arpl
fwait
and
push
and
mov
in
inc
pusha
cmp
cwtl
lea
lahf
idiv
loop
andl
fldenv
data16
sub
test
out
push
sahf
mov
push
sbb
sbb
mov
adc
jle
divl
mov
shll
pop
arpl
mov
pop
scas
cmpsb
jg
xor
les
push
mov
stos
adc
xchg
sahf
dec
cs
push
fdivrs
xchg
insl
shll
pop
into
ret
adc
repnz
aaa
mov
ds
cmp
sti
mov
test
and
test
or
cs
push
jns
jp
cltd
in
std
push
pop
mov
subb
repnz
push
xor
pop
out
ja
mov
ret
push
xor
sbb
ds
push
dec
xor
insb
stc
sub
call
jo
movsl
enter
rolb
stos
sbb
xchg
fidivrs
pop
jo
addr16
xchg
out
movsl
int3
pop
pop
xor
lcall
jnp
inc
adc
push
cmp
xor
add
and
add
test
in
nop
sbb
push
jne
insl
sub
icebp
fisttpl
sar
icebp
sbb
mov
andl
out
rorl
xor
add
cli
cmp
adcl
pop
jle
test
in
jo
jnp
xchg
hlt
mov
xchg
mov
or
mov
sub
inc
jge
fbld
push
cmp
addr16
sbb
enter
rclb
in
loope
js
pop
push
ret
fbld
pop
or
es
dec
andl
mov
test
notl
jecxz
xchg
shlb
xchg
clc
add
aam
adc
adc
pusha
mov
mov
fdivs
fs
inc
cmc
shrd
or
jnp
clc
clc
gs
loop
xor
mov
outsl
repz
push
les
mov
loopnew
add
inc
inc
cmpsb
aam
lahf
scas
insb
pop
xor
ret
aaa
add
in
dec
lods
lea
mov
pop
test
and
std
dec
inc
std
adc
lret
push
xchg
add
repnz
cmp
or
scas
sahf
dec
call
sarb
dec
xchg
jle
leavew
adc
fisubs
jnp
mov
mov
out
aas
jno
or
imul
mov
xchg
xchg
aad
and
test
mov
mov
test
jo
mov
push
sub
mov
push
push
push
jecxz
cmp
cmp
mov
into
mov
adc
fmuls
push
ss
into
out
dec
int3
loop
mov
lret
jle
clc
aad
mov
js
xorl
mov
lea
mov
mov
sti
inc
insl
cmc
or
cmpsl
add
stc
jbe
xor
lods
fistpl
je
and
cmpsb
insb
dec
insl
mov
movlps
enter
mov
je
adcl
jmp
in
leave
pop
hlt
cli
fwait
sbb
loop
test
pop
inc
inc
test
add
jmp
sub
cmpsb
xor
repnz
cmp
movsl
faddl
add
mov
and
or
pop
lods
sbb
add
aas
xchg
mov
xor
call
mov
clc
sbb
rol
fnstsw
shlb
adc
dec
xchg
icebp
jo
aam
dec
aad
cltd
dec
es
sbb
popf
jl
adc
dec
lret
cwtl
stos
xchg
sbb
mov
and
dec
cltd
nop
add
cmp
fidivs
sahf
adc
stos
ljmp
outsb
sbb
inc
adc
add
in
pop
push
and
cmp
loop
adc
aam
inc
in
ret
sbb
adc
stos
jmp
sbb
cmp
lods
jle
pop
rcr
add
imull
push
jnp
fisubrl
pop
mov
fsubl
or
out
fisttpl
and
jns
loop
test
jecxz
hlt
xor
inc
inc
mov
and
sbb
pop
xor
aad
adc
adc
xor
mov
mov
xchg
mov
push
movsl
sbb
sub
or
push
icebp
adc
cmpsl
mov
sub
in
mov
outsb
jmp
in
mov
dec
or
xor
or
xchg
bswap
push
sub
ret
mov
xchg
fldenv
leave
cwtl
sbb
mov
rclb
push
inc
xchg
fnstsw
lret
jg
cmp
or
adc
cmpsl
aad
push
pop
nop
loop
nop
loope
cwtl
jle
imul
or
dec
mov
out
jns
cs
sub
cmp
sub
sbb
mov
adc
and
jecxz
int3
scas
sbb
push
jno
pop
int
les
js
jmp
mov
jp
add
aaa
cmp
loopne
lds
mov
dec
xor
jge
mov
jns
mov
jg
push
xchg
xor
out
cmp
loope
lds
dec
and
pushf
pusha
div
lret
in
sbb
test
mov
jo
loope
add
lock
jp
mov
popf
scas
iret
insl
jae
pop
pop
mov
leave
insl
jb
stos
nop
xor
bound
push
sub
popf
xor
push
mov
js
push
lods
es
ja
imul
jne
jo
daa
fbstp
add
and
fsubrs
in
xor
mov
or
push
cmp
mov
adc
pop
fucomip
out
test
add
xchg
pop
add
das
adc
fldl
jae
lock
iret
mov
movsb
lds
or
xchg
inc
ja
mov
push
cmc
dec
jns
jecxz
cwtl
aam
repnz
es
aaa
shll
mov
push
lea
dec
jno
xor
cld
lock
xchg
rcl
push
jmp
aas
push
dec
fucom
jo
mov
sbb
jnp
int3
lds
je
js
push
push
fwait
jmp
push
ljmp
xor
lahf
out
insb
jl
push
addr16
pop
subl
and
mov
ja
gs
pop
mov
mov
fiaddl
push
clc
sub
aam
inc
js
imul
imul
cmp
adc
mov
xchg
mov
pop
and
stos
adc
scas
pop
lcall
mov
ss
jle
xchg
int
dec
pop
dec
xchg
lcall
mov
adc
pop
inc
xchg
bnd
xchg
in
fmuls
testb
lret
loope
sti
and
adc
or
aaa
imul
jge
loope
jbe
daa
mov
jecxz
inc
out
jo
clc
mov
out
sub
or
mov
xchg
jbe
cmp
mov
outsb
jecxz
sti
sti
dec
pop
dec
nop
cmp
cmp
mov
fsubl
stos
popa
leave
cmp
repnz
scas
aad
iret
sub
and
sbb
stmxcsr
push
jle
mov
insb
push
mov
pop
push
test
fidivs
lods
pop
in
pop
fmull
cmpsb
loop
in
inc
sub
fwait
pop
push
cli
inc
push
pop
sbb
dec
add
out
outsl
shl
xor
cmp
push
icebp
pop
push
insl
aad
inc
cmp
fs
iret
rcl
aaa
scas
cmp
cmc
lods
inc
out
inc
and
out
stos
push
or
gs
cmp
fisubrs
xchg
mov
call
push
leave
mov
push
ret
dec
adc
fistl
jmp
ffree
add
jmp
xor
cmp
fwait
sub
xchg
cmp
outsb
adc
cmpsb
lds
mov
mov
adc
std
pusha
push
mov
lret
movsl
adc
aam
mov
sbb
and
xchg
shl
in
xchg
frstor
jns
xchg
jae
jle
adc
insb
and
shl
jp
stos
sbb
stc
call
mov
mov
sub
jo
pop
jecxz
jecxz
mov
push
lret
popa
fadds
xchg
push
insl
lods
xor
lods
jbe
add
daa
cmp
or
ljmp
sbb
sub
dec
mov
pusha
dec
jb
test
out
mov
add
loopne
lahf
xor
test
and
faddl
push
xlat
pop
xchg
mull
rcl
rcr
rcrb
cmp
fwait
fwait
mov
sub
cwtl
mov
clc
or
mov
jl
mov
bound
push
dec
int3
mov
mov
mov
call
sahf
xor
pop
jno
adc
test
mov
mov
stos
outsl
or
mov
cs
push
jb
in
enter
bound
gs
add
mov
push
daa
jae
pop
jle
xor
ja
loopne
cli
fwait
pop
xchg
mov
mov
pop
scas
jnp
pop
insb
cwtl
adc
cld
jnp
jp
jns,pn
pop
pop
ss
pusha
jno
movb
outsb
cmpsb
lea
adc
push
enter
cmp
mov
mov
dec
add
negb
roll
movsb
or
mov
jmp
xlat
cmp
rep
ljmp
addr16
push
addr16
in
jmp
xchg
add
dec
sbb
ficoms
inc
lret
jne
push
les
push
ds
xor
cmc
sbb
xorl
and
or
shll
in
popa
ret
inc
dec
xor
cmc
js
sahf
hlt
push
nop
out
xor
ret
je
fmuls
push
sbb
mov
lret
and
jae
mov
mov
lock
test
push
test
add
push
mov
into
nop
cmpb
and
mov
cmp
imul
pop
mov
xor
rcr
je
fldt
scas
dec
in
insb
int3
xchg
jo
sub
dec
xor
scas
fwait
inc
addl
lock
lcall
jne
in
mov
mov
cmp
int3
xchg
lea
sar
cld
imull
and
iret
push
mov
cltd
repz
mov
push
rclb
cmp
xor
lret
push
mov
xor
jne
scas
mov
subb
bound
andl
jge
push
roll
insb
inc
mov
mov
stos
xor
call
fmull
dec
pop
movsl
mov
sahf
hlt
loope
pop
mov
xchg
int
push
ljmp
cltd
repz
cli
addb
or
or
cmp
jp
cltd
xor
mov
stc
sub
hlt
movb
lods
mov
pop
cli
sbb
jg
jae
xor
adc
movsb
push
dec
ret
push
inc
inc
aaa
jne
jg
lock
dec
and
xlat
jg
sbb
lds
stc
cs
cmp
jle
sbb
xchg
push
jns
xchg
pop
sub
out
data16
cmp
out
mov
les
ss
cwtl
jge
popa
xchg
pop
pop
pop
sarl
and
mov
cltd
xchg
lods
add
sbb
int3
popa
dec
incb
and
aaa
ss
in
cmp
and
enter
inc
push
js
sbb
cmp
xchg
mov
aam
jne
push
add
addr16
dec
cmpsb
shlb
pusha
cmc
xchg
inc
or
pusha
test
sahf
loope
loopne
sub
mov
or
cmpsb
or
test
insl
sub
stc
mov
ret
mov
ds
inc
inc
xor
out
repnz
decl
push
mov
jno,pn
xor
scas
xor
lods
xchg
xchg
jge
lcall
xchg
mov
mov
inc
das
and
xchg
outsb
lret
mov
cltd
xchg
fcoml
fstpl
into
sub
lret
cmp
iret
mov
test
pop
xchg
sahf
mov
or
pop
pop
pop
xchg
jg
lock
lea
lahf
xorb
scas
arpl
scas
or
loope
in
ret
insl
mov
jl
cld
lahf
es
xchg
mov
lret
jae
sub
jl
xchg
sbb
pop
sbb
imul
loope
aam
jbe
or
orb
xor
add
mov
aam
mov
lods
daa
cld
jl
xor
jl
jb
pop
lcall
cmp
xchg
xchg
dec
out
mov
loopne
xor
aam
imul
je
adc
data16
mov
mov
notl
dec
push
jl
js
in
jb
dec
aam
das
and
or
cmpsl
add
xchg
xor
ljmp
inc
xchg
xchg
mov
dec
lcall
adc
xchg
and
mov
mov
fsubl
push
mov
in
sbb
test
invd
dec
cmp
rol
ja
push
test
dec
mov
ss
mov
inc
mov
and
or
mov
pop
dec
or
mov
insl
outsb
push
ss
daa
push
imul
lahf
sub
jo
jp
xorb
sbb
inc
cmp
into
inc
cmp
inc
adc
inc
jb
movsb
movsb
call
lea
mov
pop
jo
inc
fistpl
dec
daa
aam
jge
arpl
or
lret
push
push
pop
icebp
mul
mov
mov
out
int
xchg
pop
ja
mov
and
jge
test
mov
pop
popa
ljmp
xchg
xor
mov
loop
sub
outsb
mov
insb
jge
cmc
mov
mov
lahf
pop
aas
dec
and
pop
bound
push
jl
dec
cmp
shr
mov
mov
sub
cmc
pushf
xor
pop
loopne
insb
leave
dec
scas
into
cltd
loop
jl
js
pusha
add
cwtl
movb
nop
iret
and
inc
loopne
jg
ret
aaa
enter
icebp
push
dec
push
push
jecxz
push
jb
das
mov
xchg
cmp
popf
mov
lcall
repnz
clc
mov
push
xchg
repnz
jg
xor
iret
sahf
push
xchg
iret
out
aas
xor
popf
lods
mov
jno
out
cli
jg
cltd
xchg
int
pusha
dec
mulb
inc
lods
test
push
arpl
decb
sbb
dec
mov
not
push
or
mov
adc
ja
int3
mov
dec
mov
stc
adc
lods
int3
mov
push
sub
pop
out
hlt
subl
sbb
inc
push
cmpsl
mov
pop
push
aam
test
pusha
jb
sbb
ljmp
cwtl
outsb
or
cltd
out
push
jecxz
xor
add
add
je
or
dec
fnstcw
xchg
mov
pop
xchg
test
xlat
add
jnp
push
mov
pop
in
mov
adc
pushl
lcall
in
lea
sbb
adcl
int
mov
mov
bound
jl
enter
out
dec
out
aad
das
gs
sbb
fsubs
xor
pop
xlat
imull
push
decl
test
jno
test
aam
bound
adc
add
xchg
fnstcw
fdivr
je
inc
sahf
xor
mov
out
mov
jp
add
and
or
fdivl
and
jecxz
push
cmp
mov
jge
jge
xchg
std
jg
push
imul
dec
dec
fsubr
jbe
and
add
add
shr
and
add
dec
or
push
dec
mov
add
jecxz
sbb
js
cmp
cld
loop
jo
das
ss
xor
adc
jecxz
test
dec
stc
pop
mov
cmpsb
xchg
xlat
in
je
repz
shlb
leave
push
ret
scas
cs
or
ja
out
jnp
repz
clc
shr
enter
mov
outsl
cwtl
inc
cmp
mov
and
jo
cs
pop
mov
and
xchg
pop
repz
je
vpaddq
mov
ret
lret
mov
insb
adc
sub
mov
or
repz
xchg
pop
mov
push
ret
mov
sarb
scas
shlb
pusha
mov
scas
std
pop
mov
sub
mov
lods
pop
jp
stos
hlt
cmc
outsl
jg
cmp
dec
pushf
leave
test
ss
in
sub
adc
mov
dec
fucomi
cmp
sbb
jae
pop
xor
pop
orb
jne
call
xchg
jg
cmpsb
imul
arpl
mov
jno
mov
ret
pusha
or
xchg
lds
cmp
mov
aam
xor
stos
shll
push
aas
add
insl
cmpsl
dec
je
push
pop
out
add
sti
or
popa
xchg
inc
sub
xor
stos
pop
ficomps
popl
andb
sbb
jecxz
pop
pop
sbb
cwtl
jno
xlat
dec
mov
inc
minps
sbbb
addb
popa
dec
push
pop
push
insb
rcrl
loopne
xchg
scas
outsb
xor
sub
insb
rorb
sbb
icebp
cld
mov
ret
inc
add
or
decb
dec
cmp
or
aam
int3
sbb
mov
in
loop
sub
push
inc
cld
mov
clc
cmp
lret
push
sbb
inc
and
xor
mov
inc
cmp
scas
pand
ja
cmpsb
clc
mov
outsb
repz
mov
aam
into
test
out
push
hlt
and
stc
ljmp
mov
pusha
fldenv
aad
push
sub
loope
insb
pop
sub
mov
pop
lcall
roll
push
les
gs
and
pop
sub
nop
push
repz
sub
push
scas
push
sbb
arpl
cmp
repz
mov
addr16
sub
inc
in
test
insb
cltd
cmpb
fadds
fstps
or
pop
loope
mov
dec
fdivs
push
outsb
sub
jle
fimuls
mov
adc
mov
ret
adc
mov
mov
sbb
push
int
in
lea
push
add
fidivs
mov
cli
or
inc
std
adc
ss
lcall
cmpsl
out
bound
add
in
testl
xchg
cmp
outsb
scas
push
cmp
jmp
dec
add
xchg
sub
lods
inc
in
fcoml
imul
sahf
imul
fs
loop
adc
push
inc
jae
aas
rcrl
mov
or
leave
pop
jno
mov
adc
mov
stc
xor
popa
dec
popa
js
stos
scas
lods
mov
fisttpll
dec
stos
push
rorb
pop
stos
lret
jbe
ljmp
subb
pop
mov
rclb
bound
es
faddl
jle
lcall
mov
stc
cmp
xchg
mov
inc
sbb
pop
xor
jne
push
push
xor
in
sbb
and
imul
jne
lods
icebp
andb
outsl
pop
test
sbb
das
sahf
or
mov
das
cmp
jbe
pop
call
adc
push
and
push
xchg
jecxz
sbb
cmp
aaa
push
pop
mov
fnstcw
pop
cli
xchg
pop
jmp
mov
cmp
pop
rclb
mov
mov
xchg
xchg
adc
dec
insl
lock
repnz
les
ja
out
dec
std
and
hlt
addb
testl
pop
xor
pop
jp
or
dec
in
jecxz
pop
jae
push
lods
pop
stos
stos
xor
aad
rcll
sti
push
inc
push
hlt
jl
pushf
xchg
xor
mov
xor
std
je
loop
loopne
fs
rcrl
ret
cs
push
fwait
les
push
movl
push
pmaxub
sbb
adc
and
rcl
push
test
xchg
scas
jb
push
sbb
aas
jmp
out
xchg
pop
xchg
arpl
mov
add
dec
xchg
sub
sub
ret
out
lahf
adc
jecxz
pop
adc
frstpm(287
mov
insl
mov
es
cmp
popa
mov
cmpl
mov
ss
xchg
xor
movsb
pop
ret
aad
mov
xlat
int
pop
ja
les
mov
loope
mov
daa
push
lcall
mov
jns
ficoml
cwtl
enter
stos
sub
jp
cmpsl
and
dec
pop
sar
int
mov
aaa
xchg
lea
and
lahf
ja
push
xor
ret
mov
ljmp
cmp
cld
iret
and
mov
mov
into
sbb
mov
insb
mov
out
scas
icebp
sarl
adc
jnp
xchg
ror
scas
jge
test
fnsave
adc
add
or
imul
sbb
aad
dec
js
xchg
xchg
push
rclb
gs
fs
pop
cmp
lret
inc
sbb
push
lods
pop
pop
mov
push
es
pushf
roll
pushl
nop
or
and
pop
sbb
das
mov
sti
testl
push
sbb
inc
jecxz
fcmovb
mov
mov
push
popf
sub
adc
adc
cltd
mov
gs
mov
arpl
mov
jbe
add
cld
xor
mov
push
sbb
cld
xlat
cmpsl
sti
or
test
fidivrl
rcrb
cmc
push
sbbl
mov
popf
cltd
sub
mov
arpl
push
xchg
lcall
daa
mov
fistpl
cmpsl
lahf
cmp
ret
jl
lds
sbb
adc
sub
shl
or
push
xlat
ret
pop
dec
mov
adc
enter
bound
das
xor
inc
fistl
call
ret
sahf
outsb
mov
or
flds
rcl
cli
push
mov
aad
jae
jbe
test
jb
dec
imul
enter
adc
push
push
inc
je
ljmp
mov
out
push
push
xchg
aaa
jb
jb
inc
and
sbb
xor
pop
sbb
push
pusha
adc
out
push
push
scas
mov
xchg
ss
cmp
outsb
jmp
jnp
or
or
cltd
inc
clc
stos
jns
pop
pusha
repz
mov
push
jb
pop
les
mov
jb
xor
cld
popf
cs
arpl
inc
dec
lods
jbe
aaa
mov
adc
cmpsl
xchg
pop
push
icebp
push
ja
clc
aas
addr16
xchg
orl
mov
mov
mov
jmp
ret
bnd
add
sbb
in
mov
addr16
imul
pop
cli
mov
pop
loope
movb
pop
sub
sti
fmuls
imul
lahf
inc
mov
pop
jle
pop
xchg
cmp
gs
xchg
pop
jb
lea
xlat
pop
and
arpl
aam
push
add
mov
jecxz
les
fidivl
mov
jp
adc
insl
aas
inc
sbbl
push
je
mov
inc
test
xchg
xor
sub
and
repz
imul
shl
loope
jge
addr16
in
insl
push
jbe
je
or
mov
int3
xor
mov
push
jnp
popf
push
dec
pop
lods
mov
sub
sbb
leave
aas
dec
push
in
ljmp
lods
ja
sub
adc
adc
outsb
rcll
pop
loopne
movsl
orl
out
adc
xor
cmp
adc
mov
sbb
enter
out
push
cmp
mov
loopne
icebp
or
js
int3
iret
out
pop
mov
add
dec
in
mov
cwtl
decl
xor
push
icebp
xor
call
xchg
fmuls
movsl
outsb
mov
dec
adc
dec
scas
je
popa
jnp
dec
out
jno
mov
pop
in
or
or
mov
fstpt
mov
xchg
xor
dec
adc
ret
ja
sarl
xchg
and
sub
xchg
sub
push
imul
mov
xchg
sub
fsubl
les
adc
mov
pusha
inc
pop
jb
div
mov
cli
in
scas
test
mov
icebp
push
xchg
adc
cwtl
and
or
cmpsb
xchg
imull
push
int3
mulb
sub
cmp
shlb
xchg
aad
adc
and
push
adc
jle
or
xorb
inc
data16
push
xchg
xchg
iret
mov
and
mov
pop
xchg
cmp
repz
nop
pop
mov
mov
inc
xorb
ljmp
test
iret
sbb
inc
dec
outsb
jns
test
fldcw
push
mov
mov
mov
adc
or
pusha
xchg
loope
push
adc
xchg
or
mov
mov
hlt
push
sbb
sbb
adc
bound
sub
subl
pop
and
lock
out
xchg
mov
loop
cli
xchg
lahf
sbb
pop
enter
data16
test
mov
fwait
test
sub
fisttps
xchg
mov
mov
xor
shrl
cltd
mov
inc
and
bswap
sub
push
mov
andb
adcl
mov
fdiv
and
push
lcall
cltd
xchg
pop
insb
test
or
mov
add
and
mov
lret
pop
lcall
test
cmp
adc
jecxz
jae
sub
std
xchg
out
jmp
icebp
icebp
sub
data16
sub
cmp
std
cmp
lahf
mov
cmc
in
out
cmp
cmp
pop
cmp
enter
outsl
mulb
jecxz
imul
cmp
push
sahf
dec
cs
mov
xchg
mov
dec
enter
aas
test
adc
bound
adc
sbb
push
xchg
es
jge
scas
jae
xor
xor
aam
pop
in
stc
xchg
out
cmp
xchg
inc
notl
add
inc
push
fwait
or
jb
jl
mov
push
les
and
cmc
gs
ljmp
pop
mov
sahf
call
cs
adc
adc
lahf
aaa
mov
jle
sarb
cmp
xchg
lods
fcomps
dec
jl
cmp
mov
mov
or
pop
nop
stc
cld
lock
fwait
daa
aam
or
inc
test
fiadds
bound
icebp
shl
fs
mov
dec
lods
adc
push
xchg
cmp
into
or
vmwrite
into
sbb
aas
fildll
sahf
stos
adc
int
jb
gs
cmpsl
leave
mov
jmp
repz
repz
fidivrs
arpl
mov
adc
push
imul
and
movsb
xor
xor
movsb
xor
mov
pop
vcvtsi2ssl
movsb
enter
push
sub
movsl
popf
lods
lahf
or
loopne
mov
pop
mov
stos
fsubrs
jb
xchg
lods
adc
pushf
and
loop
test
out
sbb
ret
or
jnp
or
iret
dec
test
pop
and
out
pop
fmuls
mov
jg
jmp
loop
incl
push
sub
xchg
push
push
cmc
xlat
shlb
cmp
jnp
pop
and
sarb
rcrl
or
subb
in
or
leave
jnp
pop
cli
inc
fwait
in
mov
ja
lods
int
push
push
mov
and
cmpsl
push
mov
in
sbb
mov
jle
cld
xor
sub
ljmp
pop
in
popa
and
repnz
or
mov
mov
adc
jg
mov
mov
xor
jae
xor
cmpsb
or
test
mov
popa
ficompl
or
mov
shlb
out
rorl
push
ss
dec
ss
lods
scas
inc
or
gs
and
mov
adc
loop
mov
xor
jns
fwait
adc
subl
dec
idiv
fstpl
dec
loopne
shll
cmp
pop
mov
icebp
stos
and
push
jmp
or
xchg
aad
enter
jns
mov
dec
or
in
mov
lret
inc
idiv
sti
inc
hlt
adc
mov
jo
outsb
jecxz
xchg
outsb
inc
mov
in
mov
rcll
add
push
mov
or
cmpsb
or
cmp
xchg
lret
sbb
out
push
inc
xchg
je
leave
xlat
ja
ret
ret
mov
mov
and
test
inc
xchg
sub
mov
popf
sub
cwtl
pop
jb
push
test
pop
add
xor
insl
out
ret
adc
push
lcall
fmul
lcall
mov
pop
in
inc
mov
lcall
mov
pop
jl
cmc
add
pop
xchg
outsl
icebp
jle
cmc
cld
mov
insb
clc
dec
dec
inc
mov
and
adc
mov
in
xchg
ja
loopne
insb
mov
dec
sarb
jo
into
test
mov
scas
in
popf
fmul
inc
scas
sub
lret
test
sub
in
out
push
aam
and
lods
testb
popf
outsl
sub
jge
adc
push
mov
xorl
mov
icebp
mov
sub
jmp
and
outsl
js
and
dec
and
xchg
cltd
adc
cmp
jno
mov
push
js
jns
mov
ret
mov
rolb
js
mov
pop
out
xor
jae
sbb
dec
lea
sub
shlb
out
outsb
fstp
lahf
lret
jp
cmp
ljmp
dec
mov
and
mov
dec
jl
xchg
cmc
mov
and
loope
jmp
mov
daa
jecxz
ss
mov
or
xor
jecxz
lock
lahf
pushl
pusha
mov
test
sti
push
fs
scas
and
test
and
rep
jo
xor
leave
enter
adc
xor
cmpl
insl
sbb
pop
das
into
jp
push
cwtl
fdiv
fwait
hlt
in
cltd
mov
push
fimull
test
mov
fxch
xchg
inc
dec
iret
push
jnp
fisttpll
xchg
jo
push
inc
outsb
xchg
cltd
jno
nop
jl
adc
outsl
inc
push
mov
adc
jg
inc
push
dec
mov
pop
jmp
push
push
ds
sub
aaa
sahf
pop
or
sbb
fistpll
loop
xchg
xchg
xchg
int3
mov
dec
dec
int3
push
jmp
aam
fwait
pop
lret
in
pop
addr16
jno
fs
sbb
int3
xor
inc
cmp
cld
mov
lret
push
mov
daa
into
movsb
std
lods
movsb
jp
cmp
arpl
xor
push
push
add
xchg
mov
cmp
sub
add
pop
mov
dec
mov
cmp
cmp
lret
adc
xor
sbb
fcmove
jg
adc
repnz
cli
jle
pushf
in
cmpsl
shrb
pushl
push
push
mov
dec
ss
in
sahf
push
sub
dec
inc
lds
mov
mov
mov
out
es
popf
iretw
and
test
push
shl
cmp
mov
inc
mov
mov
mul
xchg
push
jge
inc
ret
jne
push
push
mov
xchg
xchg
ret
out
mov
add
push
scas
mov
stos
sbb
mov
push
in
test
adc
dec
scas
xchg
adc
add
add
dec
push
mov
popa
clc
dec
pop
xor
imul
rolb
pushf
mov
xor
pop
jle
andl
sbb
adc
pop
xchg
pusha
add
mov
insl
push
mov
data16
push
inc
into
xchg
clc
call
rcrb
xor
std
int
mov
push
mov
movsl
inc
subb
xor
std
fstl
mov
dec
and
js
push
pop
sub
or
mov
in
mov
fisttps
mov
in
and
iret
leave
adc
inc
or
imul
xchg
subl
and
adc
popf
insb
hlt
je
loopne
jp
cmc
adc
xchg
mov
insl
and
scas
adc
mov
fwait
cmp
push
stc
lds
into
jae
clc
ret
cwtl
lret
pop
cmp
pop
sub
mov
jle
xchg
adc
pop
out
outsb
pop
std
mov
ja
lcall
mov
cli
dec
mov
lods
sub
or
inc
xchg
js
lds
xor
fbstp
lcall
dec
std
ret
data16
mov
ficomps
mov
roll
sub
dec
lods
ja
jo
push
shld
int3
or
and
jno
popa
test
mov
mov
jne
or
hlt
and
mov
pop
popf
icebp
in
mov
cwtl
or
imul
mov
xchg
rclb
pop
cmp
js
jmp
daa
xor
mov
xchg
aas
mov
repz
pop
call
mov
jle
das
or
sahf
mov
imull
mov
sub
push
sti
nop
addr16
cmp
dec
cmpsl
push
add
leave
bound
in
lods
fwait
mov
add
imul
out
xor
mov
rolb
mov
test
call
clc
subl
inc
pop
es
dec
rol
xor
push
or
or
nop
cltd
lock
or
push
or
inc
flds
ret
insb
out
push
in
and
or
std
ret
mov
dec
xor
fmuls
mov
cmpsb
dec
imul
imull
test
xchg
cmp
mov
push
outsl
test
out
add
sub
int3
mov
lret
adc
xchg
call
shrl
fimull
mov
aaa
js
or
pop
fistl
es
fsubrl
popf
cmpb
jge
push
push
push
popa
test
hlt
push
fistl
stc
mov
and
jl
sbb
sti
leave
mov
mov
xor
xor
dec
mov
test
lret
or
in
nopl
fcoml
cli
xchg
adc
int
fldt
mov
or
lret
repz
xor
xor
add
cmpl
inc
into
fcoms
mov
xor
rcr
decl
out
in
sub
inc
inc
out
lahf
cld
leave
rolb
in
push
xorb
jecxz
cmpsb
mov
or
mov
or
aaa
idivl
pop
ljmp
mul
lods
cmpb
xchg
call
in
dec
xor
xor
add
out
push
inc
jg
int
xchg
ja
cmpsb
and
push
jecxz
nop
inc
cmp
int3
fwait
mov
mov
fldenv
sbb
outsb
loopne
mov
test
xchg
or
push
jb
shrb
push
pop
loop
jae
and
dec
push
mov
xchg
sub
add
jnp
or
or
imul
call
into
lea
inc
cmc
and
adc
dec
push
mov
pop
fisttps
push
stc
cmpsl
mov
inc
cmp
ljmp
call
add
sbb
xchg
mulb
adc
push
sub
les
aam
sub
fnstsw
push
or
les
push
or
or
fisttpl
cmp
in
nop
dec
add
mov
and
dec
cwtl
divb
add
pop
out
jmp
jmp
into
and
inc
fisubl
pop
arpl
push
sbb
pop
shrb
lock
push
scas
pushf
pusha
in
pop
add
sbb
xchg
mov
lods
mov
mov
and
rcrb
inc
or
insb
jp
scas
ret
add
bswap
add
hlt
outsl
ljmp
lahf
divl
cmp
fists
mov
and
push
jns
sub
jb
cld
cmpsl
fstpt
sub
cltd
in
mov
fisttps
xor
cmc
jmp
mov
jb
dec
push
inc
mov
cli
sarb
jl
or
add
repnz
loopne
pop
xchg
sub
mov
push
sub
jmp
mov
mov
cmpsl
dec
push
mov
cmp
mov
fisttps
mov
lcall
scas
dec
dec
sbb
lock
push
lods
dec
sub
xchg
dec
cmp
out
inc
jg
mov
and
xor
lods
sar
pop
jbe
imul
lea
das
add
jno
loop
sub
jnp
mov
jbe
inc
or
fisttps
ds
mov
sub
adc
lock
dec
std
add
insl
call
repnz
sbb
push
xor
stos
push
lods
cli
sbb
xchg
les
mov
hlt
or
mov
cmp
enter
xchg
sbb
test
fcomi
dec
mov
pop
insb
ret
nopl
aad
das
sub
daa
jnp
cmp
neg
popf
aad
stos
inc
imul
dec
push
cli
subl
test
xchg
pop
push
push
insl
mov
adc
push
mov
jecxz
push
mov
jne
ret
add
aad
sarl
outsl
adc
lret
sbb
mov
mov
clc
aad
inc
popf
xor
mov
pushf
push
xchg
rcr
pushf
imul
dec
mov
hlt
ficoml
sub
test
and
aam
imul
and
js
cltd
cmp
or
cmp
inc
or
in
pop
mov
mov
jo
cltd
sbb
jne
push
mov
ss
inc
push
jbe
fdivrl
mov
add
adcb
scas
inc
cltd
mov
pop
mov
jmp
cltd
xor
mov
loopne
fdivrl
mov
data16
push
jns
xchg
xchg
inc
cltd
push
add
ljmp
sbb
das
lret
sahf
icebp
cmp
scas
xchg
fucomip
jp
cmp
cld
test
and
mov
cmc
push
dec
ss
cmpb
jle
loope
jge
test
cmp
xchg
push
mov
addr16
js
xor
xchg
bound
bound
hlt
sbb
xchg
xchg
mov
out
dec
xor
add
inc
or
xchg
roll
cmp
add
mov
sub
or
xor
jl
fistps
lahf
arpl
arpl
out
mov
in
jns
insl
xor
shrl
movsb
mov
roll
loope
sbb
jmp
jo
scas
push
and
fdivrs
orl
mov
hlt
mov
mov
mov
pop
out
jae
std
idiv
inc
cmc
sub
aas
cmp
cmpsb
jl
dec
cmpsb
scas
push
sbb
mov
hlt
mov
in
out
ljmp
sti
test
out
stos
push
dec
or
outsl
or
or
mov
es
adc
lods
xor
insl
mov
dec
lret
gs
push
inc
or
inc
ret
mov
testb
dec
mov
decb
in
testl
push
adc
pop
test
scas
enter
cltd
or
es
push
jb
int3
mov
pop
aad
mov
arpl
add
cltd
push
movsb
cmc
hlt
push
xor
mov
shr
pop
lahf
add
rorl
mov
mov
inc
xlat
fldt
lods
ss
insb
jecxz
cmp
or
cmpsl
dec
ja
sbb
mov
dec
dec
jo
shll
sbbb
fwait
jecxz
jnp
je
push
shll
xchg
cli
sahf
pop
mov
jo
je
scas
push
adc
lds
cmp
shrl
mov
jmp
out
push
fidivrl
ss
scas
adc
in
daa
gs
mov
into
cltd
xchg
dec
push
mov
js
dec
jg
jns
in
repnz
or
xchg
adc
xchg
in
test
mov
icebp
and
inc
mov
and
bound
mov
js
jns
adcl
jns
sub
xchg
in
add
and
in
lock
dec
dec
dec
push
iret
push
jge
repnz
out
daa
incl
pushf
xchg
jecxz
and
out
xchg
test
jle
xchg
lahf
and
push
aaa
or
and
jbe
js
adc
mov
mov
out
mov
and
xchg
and
push
and
inc
outsb
cmp
mov
arpl
pop
ljmp
adcl
cli
xchg
adc
pusha
jb
lods
adc
clc
outsb
inc
mov
mov
or
jecxz
fisubl
icebp
shll
fdivrl
bndldx
mov
jae
stos
add
jbe
jb
in
pop
test
mov
mov
add
aad
sarb
pop
lods
nop
mov
and
jb
adc
and
inc
pop
or
cmp
es
popa
ret
popf
xor
pusha
std
mov
lods
fcom
inc
push
lahf
cmp
sbb
mov
push
adc
je
shlb
or
xchg
loopne
js
mov
push
imul
inc
lea
xor
in
imul
bnd
add
shld
xchg
xor
fists
add
into
xchg
decb
rorl
dec
stos
inc
movsb
inc
xor
add
shll
fwait
xchg
mov
pusha
xchg
jo
xchg
outsl
jno
cmpsb
in
inc
jae
fists
xor
pop
std
pop
push
ja
push
outsl
mov
subl
aas
cmp
imul
and
mov
daa
xchg
stos
inc
mov
or
jae
lock
dec
pop
ret
call
or
jb
sbbb
cmp
push
sbb
pop
dec
arpl
stc
test
push
adc
cmpsl
dec
mov
iret
xor
popa
test
add
shrb
push
shll
ret
pusha
and
out
mov
out
jecxz
dec
jecxz
mov
out
shll
jl
sub
mov
stos
adc
mov
aam
sbb
daa
aas
or
add
mov
outsb
push
in
rolb
js
mov
jge
sub
js
push
or
adc
pushf
push
and
fldcw
stc
mov
cli
scas
scas
fisttpll
hlt
add
push
add
add
into
inc
add
testb
dec
mov
lods
out
inc
xchg
adc
dec
dec
xor
xchg
sub
add
pop
jne
mov
xchg
subb
xor
adcb
fcmovnu
dec
add
or
sbb
jae
int
xchg
mov
or
ds
jecxz
cmp
out
out
imul
test
jno
stos
cmpsb
rol
je
xchg
adc
pop
movsl
lret
cmc
xor
mov
sbb
imul
repz
jno
pop
ja
push
xlat
mov
sbb
mov
ja
dec
pop
jns
xchg
les
push
out
add
pop
sbb
jl
insb
out
xchg
fsubrl
mov
je
imul
movaps
dec
pop
inc
xchg
mov
jns
js
jae
fidivl
mov
xchg
mov
mov
enter
popa
push
outsb
out
dec
inc
adc
cmp
cwtl
les
jns
int3
mov
dec
lock
sub
clc
pop
rol
movsl
and
mov
sub
movb
sub
push
pop
or
daa
addr16
xchg
adc
ret
aas
outsb
call
lods
add
inc
shll
shll
jno
jg
mov
cmpsl
jmp
mov
ljmp
test
inc
scas
data16
push
andb
cmc
fisttps
xlat
js
jp
inc
imul
lea
and
pusha
adc
pushf
xlat
add
frstor
jmp
movsb
and
jns
mov
inc
cmp
cmp
scas
xchg
xor
pop
popf
cmp
cmp
movsb
pusha
pop
mov
aad
pop
nop
cmpsl
fisttpll
inc
mov
pushf
lods
mov
mov
mov
push
mov
cs
sub
daa
pop
cld
pop
cmp
int
adc
xchg
and
mov
pop
mov
fisttps
jae
pop
loop
fildl
loopne
push
adc
cmpsb
mov
mov
aas
pop
subl
push
cmp
aas
fs
repz
aaa
jne
jmp
add
sahf
xor
mov
push
lock
test
mov
adc
dec
or
aas
mov
cld
insl
sub
ret
das
sti
fistps
aas
add
aaa
jp
pop
xchg
xchg
lock
cmpsl
pop
push
arpl
pushl
mov
add
jo
xor
into
add
mov
and
outsl
dec
jmp
xor
loop
pop
scas
fs
repz
push
pop
cmp
cmp
push
nop
inc
cmc
pop
lret
cmp
ss
mov
lea
jp
xchg
fneni(8087
xor
div
xlat
popa
sub
jle
pop
lret
lgs
fisubs
mov
push
mov
add
xchg
mov
dec
cmp
jae
cs
inc
cmp
jecxz
mov
out
shll
sub
sbb
and
sub
and
inc
pop
lret
movsl
stc
and
les
dec
sub
adc
clc
push
xor
outsb
cs
sar
std
and
jb
mov
ss
xchg
xchg
dec
mov
cmpsl
enter
arpl
outsl
jne
push
pop
and
inc
out
andb
orb
sub
jnp
fwait
movsb
fsubl
mov
ja
sub
mov
les
ja
movsl
jb
call
adc
nop
sub
lret
lock
out
sub
repnz
lods
sbb
cmpsl
cmp
mov
mov
orb
push
jmp
sbbb
xor
sub
xor
cmp
out
stos
sub
sub
daa
stc
mov
mov
and
jp
mov
xor
dec
shl
mov
jl
cli
jb
movsb
lret
push
dec
push
lods
adc
cmp
mov
arpl
push
lret
testl
adc
and
and
xorb
xor
mov
mov
add
stc
cli
inc
repnz
jmp
and
mov
jle
mov
je
addr16
jmp
vmovsd
pop
sahf
out
iret
and
and
inc
lret
xlat
test
out
inc
out
jge
cli
cmc
push
mov
adc
sbb
loopne
mov
popa
daa
enter
pop
testb
jbe
fcompl
inc
add
cmp
cmpsl
daa
mov
inc
sahf
clc
dec
and
lds
mov
adc
test
inc
push
mov
jne
je
adc
jp
aad
es
dec
mov
out
or
push
mov
aad
imul
movsb
stc
jmp
or
xor
fwait
addr16
jmp
loope
adc
jnp
aas
adc
les
add
ljmp
test
xor
mov
push
call
aad
jp
pushf
jge
pop
loopne
mov
push
std
mov
getsec
jae
cmp
jmp
pop
lret
arpl
mov
aad
push
adc
outsb
js
inc
and
xchg
push
push
lret
rcr
fldt
pop
push
in
pop
push
cld
fwait
push
int
int
cmp
and
mov
es
xchg
out
test
jo
ds
and
es
rclb
inc
sbbb
push
and
popf
push
xor
or
jne
mov
inc
mov
stos
leave
and
add
loop
adc
pushf
inc
mov
fidivrl
push
outsl
or
lahf
inc
and
xchg
push
mov
jg
sub
inc
mov
std
add
lsl
lcall
pop
icebp
sub
mov
mov
faddl
sub
push
push
fcmove
jns
jno
sub
loopne
xchg
lods
les
jmp
ficoml
mov
aam
mov
xor
fidivs
xorb
jne
inc
ficomps
mov
push
adc
jle
sti
jbe
and
dec
mov
sub
imul
daa
pop
lahf
and
or
push
ret
fsub
mov
rcr
fwait
lret
cmp
jo
push
push
pop
dec
sbb
out
fldenv
inc
ljmp
repz
adc
mov
push
divb
sub
or
sbb
shr
jge
enter
daa
mov
sub
hlt
pop
repnz
cmp
mov
test
sbb
lret
cltd
lods
jecxz
push
mov
xchg
jb
out
addr16
push
lahf
mov
stos
push
insl
rcr
fisttpl
decl
xchg
icebp
scas
jne
push
jnp
mov
into
xchg
pop
dec
mov
sub
adc
cmp
outsb
bound
aam
mov
mov
xlat
and
in
cwtl
xchg
sub
mov
in
int
sbb
cld
inc
je
inc
cmp
push
sarl
xor
mov
jl
add
add
pop
mov
out
lock
dec
jo
jns
lds
pop
mov
fdivl
mov
outsl
mov
stc
dec
xchg
iret
inc
cwtl
bound
hlt
sub
inc
aad
mov
mov
scas
movsl
mov
fld
inc
jmp
add
mov
scas
clc
repz
fstl
inc
mov
jbe
cwtl
int
jns
mov
xor
push
dec
push
xchg
xchg
pop
xchg
imul
xacquire
mov
sahf
stc
addr16
int3
stos
stc
xchg
hlt
ss
arpl
pop
pop
mov
int
dec
ret
dec
imul
push
cs
mov
push
mov
fdivl
push
incl
xor
std
mov
mov
fst
sub
popa
xorb
std
pop
notl
jno
add
mov
fldcw
pop
imul
test
jmp
sbb
shrl
cwtl
call
jg
cmp
inc
mov
mov
pop
mov
mov
jp
sbb
push
jmp
xchg
aam
dec
pushf
outsl
not
add
mov
jge
test
or
es
jl
sbb
adc
push
push
sub
sub
cmp
sub
sbb
lcall
mov
stc
add
stos
clc
int3
dec
daa
fists
xor
lahf
stos
rcr
ficoms
xor
dec
test
out
stc
cmc
adc
int3
arpl
pushl
and
xor
iret
popf
jno
mov
dec
xor
sub
push
mov
rcl
ror
mov
jbe
jo
shlb
rol
ret
aaa
mov
iret
movsb
sub
mov
pop
add
fs
loop
ds
lahf
scas
jae
imul
fstpt
stos
push
es
xchg
pop
ds
push
std
daa
xor
add
mov
icebp
jecxz
sub
ss
js
adc
repz
lahf
add
dec
ja
xor
fstl
aaa
ljmp
jg
push
pop
incb
push
pop
enter
or
cmpl
pop
dec
mov
dec
lcall
ret
jg
repz
push
jb
cmp
mov
shrb
xchg
cld
pop
xor
mov
cmp
call
sbb
jne
push
repz
push
xor
or
fstpl
out
mov
cmp
out
addr16
fnstcw
xor
movsl
int
data16
mov
repz
xchg
rcr
lret
leave
pop
xchg
adc
mov
mov
inc
clc
xchg
sub
test
pop
mov
add
aas
push
push
fs
ss
dec
data16
push
aas
sub
add
lods
mov
xchg
mov
loope
pop
data16
pop
and
pop
xchg
push
add
int3
in
mov
sub
xor
sbb
push
mov
or
lock
testb
test
jp
dec
std
jo
inc
iret
push
stos
fs
movsl
popa
daa
or
mov
push
insb
lods
fwait
cmp
stc
mov
lods
push
mov
dec
test
cmp
dec
sbb
iret
ds
push
outsl
les
test
xchg
lret
pop
mov
cmp
sbb
pushf
adc
jg
movsb
lret
dec
pop
fwait
xchg
daa
int3
sub
test
aad
or
lret
push
neg
sub
or
out
cmp
mov
jge
push
xchg
icebp
inc
outsl
push
movsb
jl
inc
cwtl
ficomps
js
xchg
dec
sub
outsb
fwait
jl
cmpsl
ret
xor
subb
push
data16
xor
pop
and
test
push
fstp
addb
sbb
adc
push
repz
jmp
jne
jmp
inc
movsl
and
xor
outsl
push
dec
mov
std
jns
in
xchg
inc
xor
mov
pop
sub
mov
sub
cmpsl
add
pop
leave
in
icebp
testl
shr
mov
aaa
jecxz
out
mov
xorl
in
je
lods
fistpll
dec
push
ret
xor
fldt
hlt
cmp
mov
scas
pop
outsl
fnsave
push
loop
in
inc
fs
int3
movsb
mov
repnz
jbe
inc
xor
add
and
fsubs
movsl
test
ret
adc
adc
pop
push
lea
xchg
push
push
mov
dec
inc
bound
je
inc
inc
dec
mov
sahf
dec
imul
sub
sbb
jns
cmp
cmp
jb
fisubs
or
iret
or
dec
push
push
xchg
and
mul
push
sbb
cmp
jae
lods
xchg
and
mov
mov
push
cmc
lods
std
pandn
mov
aas
out
sbb
mov
or
mov
fstpt
iret
push
jge
stc
imul
add
xchg
daa
adc
and
js
xchg
ja
leave
push
int3
add
repnz
xor
push
cltd
les
jae
dec
stc
jo
movsl
jg
or
mov
inc
mov
aam
sub
mov
and
mov
dec
int
mov
ret
push
scas
loop
and
and
or
pop
mov
inc
push
shrl
or
popf
xlat
inc
scas
lock
xor
xlat
loope
push
loope
jge
shl
and
lea
shl
in
xchg
mov
into
popa
sub
aas
inc
add
sti
shlb
pop
das
adc
bound
imul
lds
lret
push
stc
xchg
sbb
in
dec
fidivs
push
mov
fisubrs
or
pushf
and
jno
into
into
xchg
sub
fucom
lods
movsl
clc
imul
sti
jmp
pop
sbb
sbb
mov
push
push
fcmove
lods
fs
push
jle
fldenv
cmp
mov
cwtl
popf
cmp
aas
test
jo
int
xor
sarb
pusha
neg
cltd
jmp
inc
in
mov
hlt
orl
ss
xor
pop
test
add
or
call
ds
xor
push
pop
outsl
pop
iret
imul
mov
sbb
jbe
adc
pop
pop
into
and
mov
adcl
cmp
lods
or
add
imul
pop
roll
inc
sti
repz
ja
ret
test
sbb
dec
pop
sub
test
jae
or
ja
int3
aas
out
mov
jmp
je
inc
inc
out
out
jns
into
push
sbb
adc
and
mov
sbb
data16
icebp
and
fwait
mov
push
mov
adc
xor
scas
test
jl
xchg
clc
cmp
adc
adc
pop
pushf
and
pop
mov
int3
inc
mov
ss
lahf
mov
sbb
xlat
into
rclb
cld
in
fisubl
sbbb
mov
dec
dec
xor
pop
sahf
shll
fbstp
and
les
bound
popf
dec
data16
mov
add
add
fdivr
lods
mov
lds
mov
mov
adc
pop
cmc
sbb
ljmp
and
push
ljmp
scas
jae
arpl
mov
repnz
icebp
inc
repnz
sub
push
mov
xchg
lret
std
jo
push
sub
mov
ds
incl
pop
sarl
loopne
xor
data16
inc
inc
sbb
pop
sbb
dec
into
sbb
popa
and
ss
dec
leave
pop
push
outsl
push
jno
sub
xchg
cltd
mov
outsb
insl
jae
xchg
mov
xor
fiadds
sahf
sub
out
push
add
and
les
xchg
arpl
mov
cmp
adc
push
ror
lock
xorb
push
or
aad
jge
outsl
push
push
lcall
stc
outsb
fstl
fwait
and
add
pop
or
add
fs
push
gs
add
push
bound
fs
imul
push
inc
icebp
pop
xor
jb
xchg
cmp
cmpsl
int
jno
mov
fldenv
jbe
dec
jmp
mov
inc
shrl
xor
cmpsl
int3
notb
sub
push
jnp
xchg
jle
adc
mov
jge
jle
out
push
in
insl
fldenv
xlat
repz
repz
mov
pushf
test
and
sbb
and
and
sub
into
aas
loop
flds
jnp
out
in
jae
or
mov
or
mov
jnp
jg
mov
cmp
lea
ja
cmpsl
xchg
xchg
jge
lds
xor
loop
mov
or
sub
rclb
adc
mov
not
or
xchg
fidivrs
mov
push
mov
in
nop
mov
inc
and
mov
or
mov
dec
mov
enter
lcall
es
inc
scas
jae
enter
xchg
sarb
aam
xchg
addr16
shll
fdivp
shlb
daa
clc
sbb
pushf
and
sbb
lret
lds
xchg
and
dec
inc
or
hlt
enter
sbb
cmp
sarb
mov
mov
outsb
push
lret
pop
xor
repz
xchg
add
in
push
mov
sbb
cli
out
sub
pop
jge
ds
hlt
inc
cs
xor
jmp
call
jae
fs
mov
dec
sbb
cmpsl
cwtl
loop
sub
push
gs
popa
cs
or
mov
shll
test
jmp
jo
jno
xchg
mov
popa
mov
sbb
jg
daa
mov
xchg
movq
pop
pop
das
rorb
dec
enter
jmp
and
pop
add
dec
cmp
in
pop
test
in
push
outsl
fdivrl
shl
inc
and
loope
test
out
out
dec
fldt
mov
xchg
adc
ss
lds
dec
and
push
mov
je
add
in
in
xorb
outsb
push
inc
lahf
adc
cmp
ss
xor
repz
mov
push
fwait
cs
ror
fcmovbe
fs
rclb
mov
gs
cld
and
lret
jle
cs
icebp
pop
cmp
cmp
mov
cld
and
push
orb
push
pop
das
shr
xor
imul
rolb
insb
push
imul
outsl
es
add
sub
mov
sbb
rcrb
fwait
loop
in
sub
mov
outsl
xchg
add
js
sub
js
add
addr16
sar
adc
insb
xor
sub
sub
or
sub
pop
cmp
sub
push
popa
mov
add
adc
xor
xor
add
ljmp
add
sub
jae
les
sbb
lock
hlt
repnz
hlt
jl
sub
mov
jge
movsl
lret
push
inc
inc
jl
add
pop
je
imul
mov
mov
push
pushf
ret
mov
add
pop
ss
cld
sub
xchg
add
cmp
lret
lret
lret
das
in
ret
ljmp
jp
jmp
data16
jle
and
sub
fldt
shll
pusha
cli
sub
and
jp
jle
mov
xchg
mov
inc
das
bound
xchg
jno
out
sbb
mov
add
push
and
aas
lods
cs
pop
dec
cmp
push
stos
jo
xlat
xchg
xchg
outsb
adc
mov
sbb
mov
cli
je
out
jno
xlat
push
sub
sub
shll
ljmp
sbb
xchg
fcomip
dec
and
idiv
push
stc
push
jl
fwait
push
ds
and
xchg
cmp
lret
cmp
ljmp
push
stc
leave
cld
les
pushf
movsl
in
jne
cmpsl
sti
gs
pop
or
out
negl
daa
cwtl
nop
mov
mov
pop
push
ds
xlat
out
cmp
xchg
stos
je
inc
repz
pop
pop
cld
fdivl
negb
add
nop
inc
divl
and
popf
cltd
insb
mov
pop
out
rolb
and
imul
fcmovu
in
pop
popf
mov
cwtd
es
in
cmc
idivl
in
jg
fucomip
pop
sbb
mov
mov
mov
adc
sub
mov
insb
mov
test
int3
and
mull
loop
pushf
dec
hlt
pop
mov
in
test
lock
jp
lods
sbb
gs
mov
sbb
sub
mov
ret
cmp
inc
lds
mov
into
sbb
adc
mov
pop
mov
fildll
das
pop
add
mov
sbb
fistpl
je
imul
movsb
add
nop
out
dec
xchg
add
mov
idiv
out
fs
loope
std
sub
into
push
inc
cmp
shld
aad
cmp
xchg
jae
test
imul
adc
int
pop
les
lds
fwait
mov
inc
fs
mov
inc
addb
mov
pop
iret
ret
and
loop
pop
jle
mov
cmp
mov
in
std
in
jle
mov
mov
push
cmp
pop
xchg
test
xor
push
sub
add
out
jno
jnp
adcl
pop
dec
lcall
sub
xor
adc
jns
test
ja
adc
xchg
xor
sbb
jp
in
stc
fsubrs
icebp
dec
sbb
mov
jg
cs
mov
xor
pop
mov
scas
lock
mov
into
and
es
xchg
lods
cwtl
xchg
sbb
sti
and
aad
dec
mov
frstor
xor
leave
pop
xor
add
xlat
cmp
cmp
inc
and
lret
push
mov
dec
mov
mov
stc
add
dec
xchg
mov
test
jl
mov
jae
pop
rclb
adc
or
or
inc
rcr
mov
inc
cmp
fiaddl
call
mov
in
sub
cmc
mov
pop
mov
cmp
insl
int
pop
cltd
xchg
fistpl
jp
adc
adc
pop
mov
xchg
aaa
hlt
cmp
bound
xor
hlt
dec
and
loope
call
negl
jmp
test
xor
xor
fwait
lret
arpl
fisttpll
mov
mov
into
nop
mov
mov
adc
push
mov
mov
mov
add
push
pop
sar
scas
cmp
sbb
js
cmp
dec
movsb
fdivs
sub
mov
inc
cmpsl
inc
imul
and
pop
xor
pushl
mov
dec
repnz
push
pop
pusha
into
sub
add
sti
pusha
lods
test
xor
jmp
push
ret
daa
ficoml
mov
mov
ret
jnp
push
jbe
fs
mov
lods
mov
clc
leave
inc
push
or
aam
call
sub
imul
stos
insl
jp
cltd
addr16
cs
jo
dec
pushf
jne
jl
jno
mov
ja
adc
inc
xchg
fbld
sub
adc
mov
test
leave
xchg
adc
xchg
xlat
sbbb
out
insl
fucom
and
cmc
test
mov
mov
aaa
jb
out
inc
xchg
add
lret
repz
icebp
dec
repnz
add
in
adc
mov
adc
test
ficoms
faddl
in
xor
aam
pop
jge
test
int3
xchg
lods
rcrl
push
cmp
xchg
lret
inc
push
mov
pop
ja
int
dec
cmp
int
add
jg
pop
aam
mov
sbb
add
loope
mov
jno
dec
inc
out
repnz
sub
in
cli
fwait
mov
xlat
fmull
inc
iret
xor
out
cmp
repnz
into
and
mov
mov
cwtl
nop
cltd
lret
cmpb
pusha
out
sub
push
mov
test
sub
inc
xchg
fdivl
adc
mov
xor
jge
mov
push
jnp
sub
insl
aad
adc
or
ja
mov
push
mov
aaa
into
aas
decb
mov
outsb
jl
mov
addb
mov
mov
xor
ss
outsl
aaa
jp
pop
mov
and
sub
mov
mov
cs
sbb
out
popa
inc
xor
pop
in
mov
outsl
cmp
or
ret
jnp
mov
mov
lret
pop
jecxz
pop
or
cmp
ret
das
or
mov
xor
adc
inc
sbb
push
fisttpll
gs
out
in
inc
mov
lret
int
lods
sbb
sbb
mov
pop
pop
and
push
inc
add
call
xor
loopne
mov
in
cltd
leave
sub
divl
adc
pop
jns
sbb
stos
shll
fdivrl
shll
es
xchg
mov
inc
cld
and
addr16
shll
dec
sbb
push
rorl
addr16
sbb
add
jne
pop
push
pop
pusha
mov
cmp
outsl
add
push
xchg
xor
adc
adc
test
pop
test
pop
bound
cmp
out
push
enter
push
iret
inc
mov
or
insl
fiaddl
adc
dec
inc
orb
popa
not
push
cmp
adc
adc
sub
push
lods
sbb
fwait
pop
mov
mov
insl
iret
pushf
iret
loopne
leave
jae
movsl
lds
mov
stc
fstpt
mov
adc
adc
orb
mov
dec
jbe
aaa
mov
jbe
test
mov
jle
push
dec
cwtl
leave
scas
cmp
jno
addl
add
cmpsb
stos
adc
or
dec
mov
adc
mov
xchg
sub
push
cmp
mov
sar
adc
mov
jno
pushf
mov
xchg
out
inc
mov
lods
cmc
fcmovnb
jmp
dec
lcall
jnp
lea
sub
loopne
sahf
ss
xchg
inc
push
mov
movsb
cld
mov
xchg
xor
loopne
mov
mov
icebp
lahf
out
mov
repnz
icebp
pop
das
cltd
bound
test
add
push
and
and
scas
sti
int
imul
mov
pop
and
jno
mov
cs
jae
push
add
test
out
call
inc
orb
cmp
insb
jmp
aaa
into
cmp
push
decl
pop
xchg
in
loopne
lock
xor
xor
imul
repz
mov
mov
add
fdiv
push
push
jno
sbb
test
or
mov
scas
add
into
pushf
and
int3
jnp
and
bound
fs
notb
push
add
dec
xchg
cmc
lods
or
inc
xlat
cltd
jo
xchg
roll
sub
cmp
das
arpl
mov
test
and
inc
es
test
push
lock
sub
jne
fildl
ljmp
daa
cmp
insb
pop
in
or
sbb
popf
notl
xchg
cmpsb
xorb
and
xchg
cmpb
xlat
cli
mov
mov
and
imul
js
or
or
cltd
inc
mov
ljmp
or
adc
mov
or
lea
inc
push
mov
sbb
sbb
dec
addr16
imul
lods
add
sbb
je
push
mov
inc
sub
cmp
das
mov
ljmp
fdivp
xor
pop
and
popf
enter
sub
test
fs
int
cmp
and
cs
xchg
pop
sub
je
fimuls
loopne
cmp
insl
out
int3
mov
insl
repnz
sub
subl
mov
push
add
pop
pop
mov
mov
push
mov
fnstenv
sub
insl
pusha
inc
js
cmpsl
fistps
mov
xchg
lods
pop
pop
ss
arpl
outsb
stc
mov
cmp
mov
ja
sbb
js
mov
addl
and
or
ss
pushf
jle
mov
add
sub
mov
add
fstpl
popf
jge
xchg
mov
pop
rolb
mov
scas
ja
pop
mov
addr16
xchg
sahf
or
jns
dec
sbb
fstpt
mov
clc
in
in
xlat
insb
out
jge
into
mov
adc
sahf
inc
inc
adc
mov
jo
daa
mov
or
lahf
loope
fiadds
rolb
addr16
int3
std
cwtl
lods
inc
std
xorb
add
rcrb
xor
insl
mov
in
int
pop
into
data16
fistpl
lock
jae
int3
lds
das
sub
dec
lret
inc
aad
cmpsb
out
rcrb
mov
push
mov
inc
andb
unpcklps
adc
lods
or
clc
rcll
dec
jo
adc
inc
mov
mov
push
adcl
jl
clc
jbe
adc
in
pusha
fdivs
aas
insl
mov
xchg
stc
je
and
cmp
inc
aad
mov
ljmp
or
in
mov
add
add
out
sub
mov
fnsave
movsb
bound
test
mov
pop
push
and
outsl
jle
movsl
sahf
mov
xor
filds
mov
insb
add
mov
mov
out
movsb
scas
adc
loop
inc
das
sbb
inc
lods
jl
mov
hlt
mov
lods
mov
fbld
dec
jge
jmp
mov
iret
mov
add
and
into
mov
sub
lock
cltd
pop
pop
lahf
mov
jns
push
mov
or
js
add
inc
add
inc
push
mov
inc
xor
stos
scas
ret
mov
sbb
xor
mov
mov
dec
xchg
repz
xchg
lods
cltd
push
sub
sub
jno
cmp
lods
sar
fsubs
inc
cmp
xor
aas
fisubl
icebp
push
dec
push
mov
scas
mov
icebp
add
and
ror
xchg
xor
mov
and
push
icebp
jl
push
mov
adc
test
mov
mov
xchg
jge
daa
cmpsb
and
push
imul
mov
in
imul
mov
insl
clc
dec
or
repz
std
jno
mov
shr
scas
mov
sub
push
push
pusha
in
mov
icebp
mov
or
pop
mov
rclb
mov
lods
in
mov
xor
xchg
sbb
inc
inc
daa
push
clc
inc
mov
mov
je
adc
daa
roll
xor
insl
and
pop
cld
pop
sbb
add
dec
stc
out
jbe
mov
testb
sti
loop
loope
stos
test
mov
push
pop
sub
sbb
mov
add
or
aad
jecxz
and
scas
addl
push
lds
push
pop
jnp
fs
jae
out
adc
lret
ret
jo
xchg
hlt
lea
add
mov
movsl
xlat
stc
pop
stc
dec
add
iret
inc
scas
pop
in
xlat
xor
ficoml
dec
cltd
fcomi
aas
jg
mov
jae
dec
and
and
int
mov
idivb
mov
test
or
jp
or
cmc
jno
and
mov
out
shrl
movsl
or
sbb
sub
dec
sbbb
push
mov
jo
and
sub
arpl
inc
jns
movsl
and
push
mov
data16
mov
shr
or
je
fldl
pushf
ljmp
rcrl
insb
xor
xor
push
lods
push
cmc
arpl
lahf
push
push
sub
sub
mov
ret
lcall
mov
movb
dec
movsl
lods
push
inc
mov
mov
sti
test
mov
xchg
cmpsl
push
iret
add
sub
pop
ljmp
lds
jns
subl
imul
aad
sub
repnz
and
jae
cmp
dec
xchg
or
jbe
fidivl
mov
xchg
sub
fs
cld
or
add
pop
dec
testl
lret
sbb
sti
mov
les
popf
mov
loop
mov
push
xor
mov
sub
adc
int
test
xchg
shrb
rclb
push
cwtl
xchg
das
icebp
mov
scas
pop
sub
getsec
cmpsb
push
pop
add
mov
cmpsl
pop
inc
popf
jecxz
add
cmpsb
scas
mov
shrl
inc
mov
push
stos
imul
cmp
sbb
aam
sbb
sti
ljmp
insb
fstps
test
mov
mov
lcall
xchg
xlat
adc
and
push
mov
sbb
dec
insl
lods
xor
inc
sub
sbb
imul
aam
jge
inc
adc
inc
cwtl
int
mov
xor
repnz
insl
in
out
rorb
adc
jo
or
jg
mov
bnd
cltd
pop
cwtl
jb
and
gs
and
bound
pushf
push
enter
pop
fbstp
push
mov
jmp
cmp
call
imul
or
iretw
sub
inc
ret
add
in
and
pusha
jl
mov
test
and
jo
lods
fs
adc
popf
je
sub
sarb
ja
xor
and
aaa
mov
scas
rorb
out
sub
call
cld
push
popa
pop
and
cmp
sbb
cli
rorl
mov
icebp
adc
ret
and
out
push
int3
mov
cltd
dec
and
push
mov
or
jle
fwait
inc
jle
ljmp
aam
stc
ret
cmc
test
jbe
loopne
testl
xchg
ja
insl
add
inc
mov
xor
popa
adc
ret
mov
mov
popf
mov
fildll
adc
sarl
jge
cmp
pop
mov
push
jl
scas
mov
jnp
ljmp
push
movsl
or
cwtl
sub
int3
jnp
push
cmpsl
out
xchg
push
out
inc
lds
aas
and
or
jns
pop
ret
xchg
cmpl
cmp
insl
sbb
mov
xchg
mov
jnp
sub
mov
mov
xlat
push
fldlg2
mov
and
in
fisttpl
ret
mov
mull
sbb
jg
pusha
adc
decb
leave
stos
stc
xor
push
mov
mov
out
jns
insb
sub
movsb
jge
xchg
sbb
xchg
xchg
push
popa
rcrl
gs
jp
enter
and
inc
mov
icebp
inc
cwtl
push
dec
sbb
andl
mov
xchg
addr16
pop
mov
pop
pusha
pop
call
dec
xor
mov
adc
sub
add
push
rcrb
sbbl
std
out
subb
cmp
pop
outsl
call
sub
mov
mov
insb
jns
pop
jl
inc
or
ret
sub
loopne
xor
jle
cld
adc
mov
cli
jg
out
loope
inc
decl
shlb
inc
xor
add
xor
xlat
dec
sub
adc
sub
push
sub
inc
enter
mov
push
add
add
sbb
or
mov
ss
sbb
cmc
sbbl
pop
mov
loop
push
add
jae,pn
push
cmpsb
cld
scas
stos
outsb
adc
lods
add
mov
mov
icebp
xor
sub
and
andb
mov
shr
insl
sbb
xchg
pop
and
cmpsl
pop
fldcw
xchg
movsb
jmp
mov
scas
shlb
cmp
pusha
lods
xchg
mov
push
test
mov
aas
cmpl
mov
sub
cmp
sarl
xchg
mov
inc
arpl
shll
or
clc
jecxz
and
cmovae
sbb
in
aad
pop
mov
loop
scas
sbb
mov
into
mov
pusha
mov
pop
push
pop
mov
push
sarb
pop
dec
inc
adc
mov
jge
mov
pop
jl
sbb
cmpsb
and
inc
in
jle
mov
inc
cmpb
xchg
xchg
push
push
nop
add
jns
call
or
shrl
shll
push
aas
cmp
sub
into
pusha
shll
js
ss
push
adc
xor
cmp
cmpsl
je
insl
call
pusha
pop
jl
and
pop
test
or
bsf
ja
fsqrt
in
enter
outsb
leave
mov
push
xor
xchg
jbe
cli
push
test
rcll
xor
movsb
out
lret
inc
mov
push
push
adc
in
rolb
loopne
mov
mov
ret
mov
push
mov
mov
ljmp
xchg
adc
mov
loop
adc
push
cli
jnp
mov
pop
out
pop
fwait
nop
mov
inc
cltd
adc
iret
hlt
je
mov
adc
jecxz
cmp
hlt
add
cld
xchg
dec
scas
into
cmpsl
loope
jnp
cmp
add
sti
add
push
mov
test
ds
in
aam
ret
adc
adc
popa
das
imul
stos
loope
xchg
add
mov
mov
sbbl
mov
mov
inc
fcmovnbe
cmp
push
in
cmp
pushf
xchg
call
daa
leave
insl
xor
test
in
repz
add
xor
xchg
jg
and
dec
movsl
mov
sub
fcoms
loop
imul
xor
faddl
inc
lret
push
inc
xlat
xchg
aad
repnz
fwait
aas
sahf
scas
lods
dec
aam
imul
movsl
ret
mov
pop
insl
mov
cld
add
sub
pop
test
jp
test
lret
cmp
inc
mov
fucomi
dec
push
fildl
shll
mov
ucomiss
lock
xchg
int
add
mov
stos
scas
jl
push
inc
roll
popf
sbb
mov
push
push
cltd
inc
xorps
dec
sahf
ret
std
push
or
aad
dec
fimull
jecxz
xchg
ss
stos
movsb
mov
in
push
xor
and
mov
cs
dec
rcrb
enter
sub
leave
mov
les
or
test
cmp
push
clc
fs
cmpsl
add
lods
js
cltd
adc
adc
or
inc
or
sahf
push
daa
int3
inc
aam
mov
outsl
movsb
out
shr
pop
cmp
cli
add
fwait
push
decl
and
dec
bnd
lock
bound
enter
push
bound
sub
pop
aas
xchg
inc
push
rcrl
bound
in
clc
addr16
mov
push
popf
or
jae
xchg
adc
or
mov
jecxz
lock
jbe
int3
fdivrs
adc
jl
ret
add
xchg
fidivrl
inc
insl
xchg
mov
inc
bound
jns
mov
lret
jnp
xor
icebp
dec
enter
push
push
stos
bound
xor
leave
pop
roll
sarl
mov
sahf
sbb
add
xchg
dec
cmp
xchg
xchg
sub
ret
push
decb
cmp
loopne
sbb
test
mov
push
xchg
sbb
or
xor
dec
jle
push
adc
lret
mov
leave
mov
leave
or
inc
lcall
push
cmpl
jne
mov
bound
mov
or
gs
fisubs
xor
jne
push
mov
movsb
fs
inc
pop
cmp
idivl
jp
mov
mov
cs
sub
out
xchg
mov
and
mov
inc
dec
test
mov
lock
xchg
inc
inc
add
enter
mov
xchg
inc
jno
dec
lods
jae
fisubl
test
add
insb
xchg
push
add
inc
bound
cmp
int3
test
jo
call
inc
sbb
xchg
jne
lret
dec
jbe
mov
jmp
out
xorl
int
dec
jge
mov
and
adc
aam
aaa
inc
mov
out
sbb
fisttpl
aas
sbb
jge
call
sub
out
es
dec
das
movsb
popa
ret
add
jge
pop
push
adc
pop
negb
jns,pt
rclb
lret
aaa
sbb
iret
pmuludq
dec
jbe
adc
mov
fcoms
test
rolb
fldenv
sarb
cwtl
es
std
sbb
sub
sbb
jnp
push
stos
xchg
mov
sbb
lret
mov
arpl
inc
call
js
orl
ds
cmp
fsubr
xor
and
cmpsl
mov
and
sub
arpl
jle
sub
addr16
or
pushf
or
lock
loope
aaa
test
imul
sbb
test
std
cs
dec
mov
andb
push
movsb
sub
loopne
outsl
push
pop
cld
lock
icebp
aad
pop
dec
mov
or
or
cmp
imul
jnp
fildl
dec
dec
and
cld
adc
fstpl
pop
sub
fstps
push
fidivs
pop
push
lret
add
jnp
lahf
mov
mov
dec
or
mov
mov
sbb
jne
or
fisubrl
sbb
inc
cmp
cwtl
xlat
push
and
add
or
jmp
pop
in
clc
in
push
imul
fwait
lahf
sbb
cmp
popf
stos
xor
hlt
das
and
movsl
les
push
lret
in
push
outsb
ds
pop
lock
push
das
push
push
test
stc
out
out
jae
into
adc
imul
outsb
pop
into
stc
aaa
or
pop
fidivrl
arpl
mov
cmp
divb
lahf
imul
dec
push
sarl
out
adc
cli
inc
popf
bound
xchg
lods
pop
js
aaa
sti
inc
ja
in
cltd
xor
notl
sbbl
fldenv
sti
loopne
xor
xchg
xchg
push
adc
adc
jle
and
movsl
add
nop
sbbl
xchg
add
mov
insl
test
fmull
inc
std
out
cmpsl
stos
or
xchg
jg
pop
add
jmp
mov
xor
xchg
mov
movsl
dec
je
mov
mov
repz
ficompl
fmuls
popa
and
pop
int3
mov
mov
ss
sub
inc
or
test
in
dec
push
dec
fmuls
andb
jg
sbb
sub
add
mov
test
aam
dec
fs
movsl
testl
jge
sbb
sub
aaa
data16
and
flds
inc
jmp
dec
ljmp
pop
addl
cmp
cltd
jge
jb
xor
repz
cwtl
xor
adc
imul
lret
je
mov
shrb
xchg
pop
jmp
pop
pop
adc
pop
ret
scas
push
int
mov
outsb
lods
cmp
sbbl
idivl
lret
in
cmpsl
or
loope
xchg
cmp
sti
jae
mov
xor
dec
repz
sbb
push
pop
loopne
inc
mov
scas
xchg
xchg
push
cmpsl
daa
push
dec
adc
xchg
daa
std
adc
out
xchg
sub
xor
outsl
mov
xchg
adc
shll
sbb
decl
cwtl
mov
fimull
or
out
jnp
push
clc
xlat
push
jge,pn
loopne
adc
xchg
test
pop
fcoms
clc
mov
sbb
stos
mov
rcrl
dec
int3
scas
and
push
mov
inc
jno
mov
insl
pop
adc
mov
mov
or
mov
clc
xchg
pop
mov
fisubl
inc
inc
lahf
in
jo
sti
xor
fwait
in
fsts
lcall
mov
push
inc
fimuls
js
lods
inc
js
loope
loopne
clc
sub
hlt
cmpsb
and
lds
xchg
push
xor
pop
dec
inc
jns
loop
outsb
xor
int
jns
andnps
dec
sbb
mov
imul
pop
mov
movsb
add
insl
sbb
hlt
xchg
int3
jge
ss
data16
or
bound
cmp
lods
jle
jae
out
outsl
imul
into
fs
inc
pusha
stos
cmc
int
mov
enter
bound
repnz
fdivrs
cmp
sub
clc
aaa
mov
testl
nop
xor
mov
push
nop
aad
ds
or
std
jno
mov
outsl
scas
shll
popf
arpl
fiadds
jl
mov
nop
lcall
fwait
mov
roll
jo
inc
or
nop
sub
sahf
in
sub
xor
dec
xchg
xor
and
ficomps
shrb
jg
lods
xor
scas
mov
mov
dec
out
test
xchg
stos
sbb
movsl
es
sbb
rcrl
inc
inc
mov
push
push
inc
mov
add
jns
jecxz
loope
scas
xor
sub
lods
mov
dec
loop
cmc
jmp
xor
adc
adc
push
mov
mov
dec
jb
out
aaa
jg
pop
or
push
mov
inc
push
out
test
xchg
repz
fsts
hlt
aam
dec
pop
dec
cmc
movsl
sbb
in
lcall
sbb
roll
or
push
fildl
loope
ret
mov
sti
add
js
cmp
dec
cmp
sub
and
ss
or
fucomip
test
aad
push
lods
push
inc
or
sub
lods
inc
outsb
test
aad
stc
xchg
imul
imul
push
sub
ror
mov
pop
mov
sbb
jae
lock
mov
insb
mov
mov
daa
imul
or
repz
mov
adc
pop
jo
cwtl
push
pop
pop
leave
pop
cmp
jb
xor
dec
addl
cli
mov
in
xchg
jb
xorl
jle
repnz
out
lcall
jmp
and
push
inc
xchg
das
add
sub
aaa
mov
add
mov
jle
xor
and
or
in
pushf
sar
push
insb
rcrb
gs
testb
push
adc
push
popf
jmp
aaa
bound
cwtl
inc
xlat
add
jle
rcll
sbb
mov
insb
jo
ds
add
mov
popa
hlt
lods
lret
pop
mov
dec
adc
clc
sbb
inc
adc
jb
lahf
popa
and
lea
daa
repz
lea
add
adc
push
push
adc
iret
stos
iret
mov
sub
and
aam
mov
mov
mov
xor
test
jnp
iret
mov
jmp
and
cld
call
popa
pusha
repz
xlat
sbb
adc
ret
dec
mov
sub
sub
pushf
loopne
jge
movsl
mov
sub
dec
push
push
push
fnstsw
pop
rolb
cmp
mov
nop
mov
mov
adc
inc
and
add
test
and
mov
inc
mov
push
add
leave
js
xor
inc
pop
faddl
imul
push
jno
cli
pop
pop
push
fdivl
cmp
int3
bound
call
andl
pop
jns
dec
add
iret
iret
push
insl
cmpsb
jp
aaa
cmp
sub
xchg
dec
repnz
sbb
std
cmp
fisttpll
pop
or
js
pop
es
jbe
mov
push
mov
outsb
mov
push
jl
out
and
xor
mov
inc
imul
subb
dec
aam
sbb
fldcw
mov
pusha
std
sub
mov
std
icebp
out
mov
adc
test
xchg
and
xchg
sbb
xchg
insb
out
xchg
adc
mov
xchg
mov
aas
mov
pop
xlat
lcall
xor
inc
push
inc
xchg
rcrb
add
andnps
cmpsl
xorb
mov
inc
mov
cmp
push
push
imul
xor
ja
dec
add
test
push
es
xor
add
jbe
std
jg
adc
dec
inc
xchg
pop
decl
ret
sbb
mov
and
push
out
lcall
aam
dec
lahf
sub
out
int3
dec
jecxz
inc
mov
cmpsl
stos
mov
mov
jae
sbb
or
inc
xchg
sub
popf
mov
jle
or
cld
mov
nop
xor
and
inc
fwait
jb
ss
push
cwtl
adcl
mov
clc
pushl
dec
dec
pop
bound
pop
mov
inc
inc
incb
scas
or
ds
repz
por
jg
dec
icebp
adc
xchg
mov
xor
lret
fwait
shl
mov
dec
xor
jno
dec
gs
out
movsl
pop
mulb
scas
xchg
mov
adc
lock
mov
and
add
rcrl
test
scas
lea
dec
mov
fsubr
mov
in
mov
repz
lods
les
mov
sub
aad
cmp
sbb
inc
lock
cmp
data16
out
jp
movsb
mov
push
sahf
iret
pop
lcall
xchg
lret
pop
fdivrs
sub
imul
faddl
and
outsb
ret
pop
scas
js
in
cmp
push
dec
sbb
data16
jb
mov
jle
lods
loope
mov
sub
mov
jmp
add
movsl
pop
or
sbb
add
push
or
jns
into
jg
aas
nop
xchg
dec
cmpsb
inc
fucom
push
inc
sub
and
lods
add
mov
pop
sub
frstpm(287
cmp
add
out
cmpsl
jmp
imul
cmc
lcall
jb
xchg
xor
scas
lcall
outsb
xchg
in
jg
add
imul
xor
addl
fiadds
or
inc
sbb
dec
mov
movsl
pop
addr16
mov
insb
inc
rolb
dec
in
mov
cmp
or
lods
dec
data16
icebp
data16
mov
in
xor
pop
and
aas
shl
mov
push
adc
adc
ret
mov
jmp
xchg
addl
sbb
cmc
test
cwtl
scas
xor
pusha
inc
sbb
js
in
mov
sub
dec
xor
ret
cmp
fsts
add
mov
dec
jno
mov
mov
stc
repz
adc
int3
and
xchg
popa
jbe
dec
ret
mov
test
cmpsb
sbb
and
adc
sbb
push
and
fsubrs
insb
ljmp
insb
mov
lcall
aas
adc
lock
push
lcall
jl
movsb
inc
movsb
fcmovnb
loop
enter
xor
inc
stos
push
mov
stos
dec
orb
sbb
xchg
lahf
and
jns
js
pop
daa
push
pop
fnstenv
mov
add
ds
and
and
xchg
dec
push
cltd
jbe
cmpsl
sub
out
icebp
int
icebp
mov
xchg
lock
fidivrs
lret
pop
mov
mov
arpl
leave
vpminub
scas
stc
mov
clc
xchg
dec
jmp
xchg
cmp
scas
lcall
pop
mov
adc
inc
psubq
cld
fisubrs
jp
jl
leave
mov
jge
add
xor
add
into
test
cmp
sub
rcrb
sbb
lcall
gs
insb
xchg
sub
out
mov
mov
imul
xchg
icebp
pushf
lods
pushf
or
cli
mov
cmc
fidivrl
cmpsl
arpl
jnp
in
aas
push
cmpsb
sbb
pop
shrb
fcomps
repnz
jnp
or
insl
jp
in
pop
lock
icebp
cmp
repnz
dec
dec
adc
jmp
inc
add
nop
shlb
cmp
xchg
in
jne
movsl
pop
mov
in
add
pushf
test
imul
loop
popf
comiss
jnp
pushf
rolb
stos
mov
jle
mov
lret
addb
loop
into
aad
sbb
cmp
dec
or
stos
inc
loopne
push
and
fsubp
cld
inc
iret
icebp
cmp
cmp
mov
and
jg
arpl
push
inc
data16
shl
shll
daa
fdivrs
add
pop
push
mov
mov
popf
mov
push
mov
add
testb
jb
cmp
inc
test
stos
fs
rorb
fisubrs
out
sub
mov
enter
ffree
popa
scas
sub
xchg
mov
enter
push
xchg
inc
in
int3
sub
inc
mov
rcrl
sbb
loop
repnz
ret
je,pn
mov
ja
lock
sbb
insb
add
shlb
mov
inc
cmp
mov
add
push
cmpsl
movsl
fdivrs
lods
insb
sub
nop
fimull
sbb
jg
dec
test
jecxz
push
mov
xor
cmp
add
jno
mov
or
sub
mov
adc
leave
xchg
xchg
test
cmp
push
pcmpeqb
outsb
loope
push
test
addr16
add
jne
pop
cli
fwait
in
cwtl
sbb
gs
pushl
gs
push
pop
repnz
push
mov
jne
jp
dec
mov
int
dec
and
arpl
xor
out
sbb
cwtl
cmp
xor
lea
add
jp
pop
mov
dec
sub
dec
popf
ret
push
pop
nop
pop
int3
cmp
wrmsr
clc
loop
in
movsl
mov
cmp
mov
mov
dec
pop
clc
jge
test
dec
scas
cmp
mov
std
mov
mov
or
cmp
or
fxtract
test
mov
xchg
sbb
insb
mov
fcomps
aam
test
lods
negl
out
test
jp
test
imul
test
mov
in
mov
cmpsl
push
xchg
adc
inc
mov
inc
xor
xor
mov
popw
or
sbb
lods
and
xchg
adc
mov
aas
jns
add
xchg
lea
dec
lods
lret
pop
cmp
test
fildl
testl
lods
fs
jne
cmpsl
xchg
xor
dec
jne
pop
insb
sbb
sub
fdivl
jne
leave
cmp
shll
xchg
mov
movsb
in
scas
mov
out
lock
movsl
push
sbb
fucomi
push
mov
pop
jp
cmpsb
and
xor
subl
push
sbb
push
hlt
not
jl
push
dec
cld
dec
out
bnd
sub
inc
daa
das
sbb
inc
sub
push
daa
mov
jae
sbbl
into
out
push
rorb
mov
stos
or
mov
fbld
loop
bound
dec
dec
test
mov
add
add
cmp
arpl
dec
push
popa
lock
mov
push
repz
es
adc
xchg
pop
cmc
inc
push
xchg
lds
or
xchg
xchg
xor
test
sbb
fbld
stc
aas
int3
pop
out
in
cli
scas
add
push
cmpsb
xor
or
das
dec
sahf
add
popf
mov
mov
leave
jae
push
es
lock
clc
xchg
popa
mov
popa
mul
or
movsb
and
cmpl
bound
mov
jb
jg
nop
dec
mov
test
sbb
fidivrs
aaa
mov
inc
in
aad
stos
adc
fisttpl
ret
add
pushf
or
lds
jl
ja
outsb
or
insl
mov
loopne
pop
fldt
fsub
decl
dec
adc
cmp
add
mov
lea
rcrb
cld
sysenter
incb
xor
push
dec
cmp
push
pusha
bound
inc
pop
addr16
jo
popf
and
lcall
pop
push
xor
icebp
into
ror
out
fidivrl
stos
xor
leave
notl
sti
inc
sub
mov
push
cs
sti
inc
pop
sub
dec
cltd
fwait
sbb
outsl
jg
cmp
fisubrs
rcll
stos
aad
and
pop
ds
pop
stos
mov
ds
mov
jne
add
adc
xlat
mov
mov
mov
lods
ficompl
sti
getsec
xor
push
in
mov
enter
mov
movsl
cwtl
inc
add
cmp
xor
sbb
adc
mov
add
jle
fldcw
daa
xor
mov
sbb
mov
mov
mov
xor
add
stc
ret
or
mov
xchg
in
outsb
xor
mov
adc
adc
fstpt
movsb
fldcw
jle
je
out
shlb
xor
pop
lcall
scas
call
add
aaa
push
lods
adcl
or
push
adc
shlb
dec
inc
popf
inc
mov
gs
jp
dec
cmp
call
add
xchg
or
dec
push
pushf
mov
dec
outsb
loopne
dec
jle
nop
or
int
mov
or
sub
jno
xchg
jp
sbb
insl
lahf
mov
sarl
clc
into
xchg
arpl
outsl
mov
adc
push
sbb
repz
or
repz
stos
sub
dec
sub
sbb
mov
adc
xchg
push
hlt
ret
push
sti
xchg
and
dec
nop
or
orl
es
out
addr16
gs
cmc
jp
bound
pop
lock
popf
push
pop
outsb
jo
in
mov
mov
add
rcll
mov
ret
inc
mov
mov
shr
iret
jns
bound
xor
sub
sub
cmp
xchg
jg
push
sbb
mov
mov
pop
notb
cmp
cmc
ja
dec
cld
fs
dec
les
int3
in
into
popa
or
xor
mov
add
repnz
add
bound
cmpsb
or
sub
inc
in
sub
sbb
cmc
clc
das
sub
xchg
cmpsl
inc
je
fs
mov
xor
mov
outsl
jmp
pop
and
int
in
lret
dec
lahf
add
mov
pop
test
imul
jmp
cmpsl
repz
cmc
jmp
push
sbb
ret
fs
mov
xor
int3
in
shll
and
notb
sarb
rcrb
mov
inc
sahf
mov
std
and
les
rclb
jns
xchg
imul
nop
mov
inc
cmp
mov
add
xchg
ljmp
fistl
inc
shl
or
jg
cltd
test
fimuls
mov
mov
xchg
data16
mov
mov
pop
and
cld
cmp
test
lea
jmp
repnz
push
xchg
into
outsb
mov
push
dec
xor
push
push
push
lret
inc
cmp
inc
push
or
xor
and
lcall
sbb
movsb
cmp
int3
movsb
test
cld
ds
out
stos
inc
outsl
lods
lret
rolb
lods
mov
or
or
sbb
push
add
xchg
bnd
fidivl
pop
jns
aad
fists
push
jp
mov
in
xlat
lea
fistpll
int3
inc
jg
arpl
xor
inc
loop
loopne
jae
push
hlt
fistpl
add
push
jl
or
in
and
scas
xor
repnz
subl
mov
cld
and
cltd
adc
cmp
femms
popf
jmp
pushf
jbe
cmp
adc
xchg
mov
fldcw
fstps
xchg
or
sub
mov
push
imul
arpl
and
fnsave
lods
in
in
mov
push
test
les
out
or
sbb
mov
xchg
test
loop
pusha
pop
dec
xor
mov
push
mov
dec
ss
xchg
cltd
out
push
xchg
xchg
xor
mov
bound
dec
dec
sub
or
xor
mov
aam
push
mov
and
jno
inc
and
movsb
rcll
popa
fdivl
dec
lahf
and
sbb
ret
subb
cmp
out
ret
pop
cli
outsl
lahf
je
push
pop
xor
das
mov
inc
aas
outsl
xor
call
scas
pop
shld
cmc
add
popa
mov
xlat
push
push
test
xchg
pop
and
shrb
daa
arpl
sub
ss
xor
push
xchg
es
sub
dec
pop
ljmp
push
sub
clc
inc
cltd
jae
stos
and
mov
cmpl
cli
jno
mov
fidivl
sarb
cld
mov
push
pop
or
mov
stos
adc
jnp
lock
out
mov
fistpll
inc
bound
stc
ficoms
popl
sbb
fbstp
push
pop
lea
mov
cmpsl
mov
mov
insb
outsb
rorl
fnstcw
jge
cs
psubsw
das
sbb
pop
in
or
jmp
pop
mov
movb
xchg
jp
shrb
mov
and
stos
lret
push
fucomi
movsl
int
in
sub
push
stc
in
sbb
ret
out
ja
in
and
push
adc
outsl
mov
mov
add
imul
pusha
das
xor
sbb
enter
adc
aam
lds
adc
lock
jne
mov
hlt
fildll
adc
pop
and
push
lcall
dec
cmp
sbb
pop
call
cmpsb
lcall
fsts
xor
and
in
insb
sarl
push
push
hlt
mov
mov
ja
xor
and
hlt
out
inc
pop
in
or
aas
cmp
addr16
or
lahf
jbe
imul
mov
sbb
mov
scas
int3
jo
fst
xor
xor
xor
pop
lods
fwait
and
pop
scas
inc
add
in
or
push
jg
xor
mov
adc
call
cli
dec
repnz
sbb
lea
popa
cwtl
sbb
push
jmp
jb
lcall
adc
or
xchg
pop
aad
adc
cmp
push
lret
cmpb
xchg
mov
mov
icebp
mov
xor
jbe
flds
cmc
lock
mov
mov
je
bound
mov
xor
adc
jae
int
push
shll
icebp
outsl
ret
addr16
dec
adc
xor
repnz
jle
pop
ljmp
addr16
sbb
push
in
ret
shrb
mov
xchg
or
test
xchg
dec
gs
xchg
jnp
mov
pop
push
out
dec
sub
pushf
inc
int
or
sub
xor
cmp
dec
lods
push
cmp
xchg
lret
mov
mul
pop
adc
xchg
mov
ret
dec
aad
roll
or
pop
outsl
xor
xor
cmpsl
jns
xchg
and
hlt
repz
xor
outsb
adc
xchg
lahf
mov
sbb
xor
adc
out
in
mov
jo
loopne
sub
cmpsl
mov
xor
cmc
enter
sti
jg
jne
inc
ja
fisubrl
push
sahf
fstl
cmpsb
xor
mov
cltd
pop
fdivrp
mov
data16
cld
xchg
aas
orl
xchg
fnstsw
cmp
ret
das
push
test
or
movsl
pop
fdivp
mov
lahf
repz
out
pusha
inc
test
jbe
inc
in
push
push
stc
cmp
sbb
sahf
stos
aad
dec
lcall
out
adc
mov
adc
jbe
sbb
lcall
jl
jp
loopne
push
insl
push
dec
das
in
cltd
sbb
ficomps
sti
out
stos
les
fistpl
int3
or
imul
pop
test
push
xchg
adc
in
adc
lcall
insl
jno
pusha
aas
nop
inc
inc
je
dec
jno
xchg
jae
cs
pop
fwait
jg
adc
ffreep
and
fldenv
incl
adc
pop
sbb
push
push
xchg
into
adc
xchg
inc
sub
mov
ret
fdivr
test
cld
rcl
cmpsb
mov
fnstenv
or
imul
leave
push
inc
sahf
je
sbb
call
add
dec
mov
pop
xchg
sub
and
cli
xchg
push
xor
ret
outsb
xchg
add
mov
idiv
or
push
xor
rorl
push
mov
leave
or
jg
pop
adc
jbe
push
test
jmp
inc
insb
mov
in
sahf
popa
jne
pop
in
inc
dec
sbb
hlt
lcall
das
jp
xchg
into
xor
cmp
sub
movsl
popa
cmc
hlt
cwtl
add
dec
xchg
xor
movsb
mov
out
in
lods
insb
jmp
stc
rol
daa
addr16
in
mov
inc
push
testl
mov
mov
push
mov
sub
pop
pop
out
cmp
xchg
insl
cs
xchg
jl
nop
push
adc
fldt
or
xor
xor
xor
incl
lods
cmp
push
mov
or
repnz
xchg
sbb
cwtl
je
inc
mov
scas
mov
out
inc
mulb
je
mov
jmp
push
sbb
cmp
or
aaa
into
inc
pop
cmp
and
mov
inc
xorl
pop
adc
pop
inc
fnsave
sarb
aas
and
ficoms
testl
lods
or
hlt
fwait
mov
mov
lds
int
andb
jne
fnsave
cli
test
sbb
shl
mov
inc
sbbb
outsl
test
incb
inc
mov
daa
fcmovbe
mov
jle
not
pop
pop
push
cltd
cmpsl
add
enter
add
stc
stos
adc
icebp
mov
scas
fstpt
mov
out
call
imul
xor
cltd
xor
lock
lret
cmc
add
imul
scas
imul
xor
int3
js
jmp
call
aaa
or
mov
rorb
mov
mov
in
or
repz
ja
mov
mov
adc
mov
lock
movaps
xor
js
pop
stc
xor
and
mov
xlat
test
sti
adc
xor
cmp
repz
loop
xor
data16
xchg
loop
jb
mov
dec
pop
fstpl
dec
xor
jno
pop
divl
outsl
loopne
bound
mov
mov
lock
ds
lret
loop
out
dec
cmpsb
mov
outsb
and
xchg
repnz
and
adc
mov
add
shl
fstpt
rorb
jp
daa
pusha
lret
out
nop
and
lcall
cmp
jmp
ss
push
or
jle
adcb
lea
loope
mov
in
das
es
push
xchg
pop
rclb
push
mov
movsl
ret
sbb
push
xor
xor
clc
ja
daa
cwtl
iret
xchg
lock
mov
pop
movsb
fadds
je
sub
orb
in
inc
popa
add
int
loope
inc
jl
push
out
or
nop
cltd
test
mov
pushf
fcmovu
icebp
test
xchg
jnp
jae
stc
shlb
inc
mov
into
adc
or
aad
lret
rorb
in
xchg
xor
jae
stos
pop
inc
ficoms
fmuls
xor
inc
lret
cmp
xor
popf
addr16
inc
pop
ss
scas
or
mov
es
sahf
cmp
pop
add
jo
std
ds
outsl
inc
mov
sbb
gs
nop
in
shll
mov
imul
jecxz
jmp
xchg
popf
mov
jmp
cmpsb
and
in
cs
pop
cmp
pop
xchg
aam
sbb
pop
sub
repz
test
hlt
loop
xor
push
lahf
out
adc
or
std
aaa
dec
movsb
add
xchg
jnp
scas
push
push
xor
adc
xlat
fcoms
xchg
dec
or
outsl
dec
add
roll
jp
xchg
icebp
push
xchg
negb
dec
icebp
sub
add
lahf
loopne
cmpsl
push
mov
lods
lods
lock
adc
mov
xchg
pushl
mov
pushl
mov
shll
enter
xchg
dec
add
sub
xorb
out
or
xchg
pop
loopne
push
inc
lcall
outsb
xchg
xchg
adc
xchg
addr16
data16
ss
mov
in
push
mov
mov
jecxz
jne
pmulhw
sti
test
pop
cli
xor
xchg
cmp
je
pushf
sahf
lret
and
mov
sahf
in
in
das
outsl
es
ss
ds
jae
popa
dec
inc
cmp
mov
sub
stos
jno
ret
mov
sbb
idivl
lahf
cmp
jp
pop
pushf
push
insb
cmp
adc
mov
jp
and
ljmp
pop
inc
xlat
xchg
out
ja
sbb
int
cld
lods
insl
into
mov
pop
add
adc
mov
and
sub
xor
pop
lds
rolb
inc
pushf
or
xchg
adc
shrb
call
jo
pop
push
jle
mov
imul
fsubl
mov
xor
test
push
push
adc
sub
mov
hlt
cltd
add
dec
incl
jg
les
out
jg
pop
mov
scas
sahf
data16
pop
clc
cmpsl
ldmxcsr
cltd
subl
push
pop
and
xchg
mov
xchg
inc
clc
inc
push
xchg
pop
ljmp
into
stc
outsl
cmp
roll
test
push
cmp
movsb
adc
rcll
pop
sahf
adc
sarb
dec
inc
outsb
adcl
ja
data16
stos
and
lcall
cmc
sbb
rcrb
fwait
sbb
sarl
adc
cmp
pop
test
mov
sub
mov
mov
add
daa
pop
cmp
outsb
les
mov
and
sbb
cltd
dec
mov
add
test
mov
lock
fiaddl
scas
and
xor
xor
in
or
aam
dec
pusha
mov
jmp
data16
sub
and
sbb
rcrl
jecxz
out
andl
push
jmp
sbb
adc
jne
push
test
and
mov
inc
sbb
cwtl
shll
mov
lods
sbb
cmpsb
or
cmp
mov
lock
movsb
jge
mull
xor
movsl
inc
and
xchg
in
push
xchg
mov
cwtl
mov
imul
xchg
mov
cmpsl
sub
sbb
sarl
xchg
adc
add
add
pusha
push
movsl
mov
push
mov
test
dec
in
addr16
fdivrl
mov
int
adc
loopne
mov
mov
in
ja
nop
adcb
push
mov
push
lret
test
imul
mov
bound
jb
xor
inc
fildll
mov
in
sbb
push
mov
sbb
mov
iret
cmpsb
cmp
rcrl
sbb
ret
adc
inc
stos
imul
lcall
hlt
es
pop
jnp
frstor
fisttpll
aaa
mov
stc
dec
jne
popa
xchg
push
push
arpl
mov
push
inc
fwait
stos
sub
mov
mov
mull
and
cmp
or
xchg
out
loop
test
cld
sub
and
insb
jne
add
dec
mov
push
inc
imul
xor
loope
repz
dec
push
mov
add
cltd
imul
cmpsb
cmp
aas
pause
fcmove
sbb
mov
push
xchg
adc
rcrb
adc
adc
xor
sbb
insb
and
arpl
out
dec
push
aaa
icebp
loopne
arpl
bound
ror
stos
in
popf
daa
jge
xchg
lock
sub
adc
push
out
xchg
sar
ret
movsb
pop
fbld
sarb
dec
fwait
push
mov
mov
sbb
lcall
dec
sti
or
mov
lds
xchg
pop
imul
mov
cmp
cmp
push
sbb
inc
loope
jg
in
sbb
push
inc
mov
dec
jmp
adc
movsb
movsb
ss
loope
stos
mov
clc
lcall
cmp
jne
pushf
push
inc
mov
dec
loope
cmpsb
out
das
test
mov
push
push
fmull
sbb
roll
mov
movsb
add
enter
bound
lsl
cmp
push
mov
jnp
push
out
cmp
adc
enter
xor
pop
daa
push
inc
dec
jge
imul
xchg
lock
dec
gs
mov
hlt
adcb
jg
int3
and
mov
movsb
dec
fsubrl
inc
aaa
data16
enter
push
sub
sbb
push
cmp
xchg
adc
clc
jns
dec
out
or
xor
loope
mov
lcallw
sbb
mov
pop
es
sbb
mov
jmp
or
shll
jbe
or
xchg
pop
cwtl
and
jns
ss
fistps
jae
jecxz
sahf
out
cmp
mov
xchg
mov
iret
pop
je
cwtd
lret
insb
mov
push
sub
inc
lods
sbb
xor
fst
pop
fbstp
ret
xchg
mov
xchg
mov
xchg
pop
mov
xor
xchg
shll
inc
and
fwait
leave
cmp
inc
jg
iretw
adc
jg
xor
test
mov
pop
leave
xchg
sarb
jecxz
push
sub
aam
andb
or
sbb
pop
cmpb
mov
daa
movsl
cltd
add
cmc
mov
xor
lcall
dec
ret
jb
cmp
test
mov
ror
test
mov
xor
aad
call
scas
stc
jnp
test
mov
test
out
fnstenv
xchg
mov
mov
imul
shl
outsl
push
xchg
fcompl
test
dec
cli
sub
mov
xor
insl
pop
cltd
sbb
fucomi
sbb
aam
xor
sbb
es
stos
arpl
movsl
cwtl
mov
sbb
in
xor
push
add
into
push
cltd
jae
stos
jbe
and
and
xchg
jno
fstps
fmull
push
rcrb
int
ja
sub
mov
outsb
mov
dec
in
cmpsb
cmc
in
nop
call
ja
das
xor
lods
and
push
ljmp
sbb
sbbl
fs
xor
pop
cwtl
pop
lods
in
jecxz
xchg
cmp
pop
mov
mov
mov
scas
loope
and
inc
dec
idivb
mov
jbe
aad
es
jns
fnstenv
into
xchg
jl
adc
lods
dec
in
lds
clc
aas
mov
int
daa
push
mov
jl
shrb
cmpsw
cs
aas
adc
mov
xchg
jecxz
add
mov
popf
stos
add
fcoms
mov
push
jmp
sbb
imul
jl
mov
je
lret
into
mov
dec
loop
outsl
mov
mov
pop
dec
stos
sbb
cmp
cli
sub
pop
jb
leave
jno
sub
fsubs
cmp
call
xchg
rclb
negb
xor
sub
daa
mov
sarl
popf
int
test
loope
cmp
int
push
ljmp
jmp
mov
dec
imul
or
xchg
mov
mov
dec
rorb
adc
inc
fstl
addb
mov
ret
js
mov
sub
mov
scas
xchg
mov
imul
fildll
jb
mov
mov
out
ljmp
shrb
jmp
daa
pop
push
pop
out
xor
sbb
cli
mov
int3
arpl
cmp
test
test
adc
inc
call
sti
ficoms
jns
faddl
cli
mov
jno
push
dec
ret
dec
and
mov
mov
xchg
das
sub
mov
cwtl
pop
call
inc
mov
popf
pop
pop
out
mov
inc
cmp
sub
add
jmp
mov
ds
shlb
add
jnp
stc
sub
add
imul
cli
test
les
sarl
xchg
add
and
sarl
cli
mov
add
out
adc
inc
imul
insl
outsl
xorb
cmpsl
imul
mov
imul
mov
push
popa
jmp
idiv
stos
push
jo
stc
pop
fistpll
push
cli
cltd
mov
pusha
daa
push
sbb
jbe
adc
sete
fidivrs
and
iret
push
push
ds
fldcw
jge
in
pop
ss
add
jnp
ret
mov
cmp
testb
sub
push
inc
adc
les
mov
mov
push
sub
loop
push
mov
inc
mov
imul
cmp
mov
push
push
jl
lds
test
sahf
cwtl
negl
xor
movsb
adc
lods
iret
sbb
pusha
jecxz
pop
pop
add
leave
mov
movsl
orl
decb
mov
inc
xchg
adc
add
lahf
enter
aam
imul
pushl
mov
sbb
mov
imul
icebp
mov
adc
mov
xchg
inc
xor
push
in
mov
scas
mov
ffree
popf
add
in
inc
add
lds
je
adc
sahf
ret
dec
dec
sub
imul
popa
aaa
sbb
outsl
and
outsl
cld
movsb
adc
adc
sbb
iret
sub
loope
imul
mov
ds
mull
shl
loop
bound
leave
in
and
scas
mov
dec
insl
dec
popf
jmp
stos
cmpb
popa
cli
jae
cmpsb
mov
out
loop
jg
je
mov
iret
xor
xor
cltd
xchg
add
cmp
mov
test
mov
sbb
sahf
and
ret
iret
mov
dec
xchg
and
outsb
inc
jge
dec
ss
lcall
push
ss
bound
into
inc
lods
push
jo
imull
add
fmull
xchg
or
mov
push
push
lds
rclb
mov
mov
mov
mov
fstps
data16
cwtl
or
test
ret
dec
push
aaa
in
xor
arpl
out
and
inc
sbb
and
and
mov
cli
lahf
lods
push
mov
cwtl
xor
test
cmc
or
or
sbbb
inc
int
jecxz,pn
lock
mov
iret
stos
pop
push
hlt
mov
out
popf
imul
cmpsb
rorl
and
pop
inc
and
lret
push
rorl
ret
jo
jp
push
inc
rcll
jle
fstl
push
jbe
shrl
sbb
imul
mov
add
push
nop
test
test
inc
push
add
mov
mov
adc
out
xor
push
jmp
mov
lretw
pop
mov
push
lods
adc
aaa
cmp
adc
jmp
mov
or
lahf
xor
mov
insb
pushf
xchg
insb
and
mov
cmp
adc
sub
bound
fsubl
ret
sbb
in
cs
inc
push
and
out
sbb
sub
adc
or
lret
jne
sub
sub
mov
dec
mov
xchg
push
js
mov
scas
lcall
inc
cmc
and
and
stos
mov
flds
sub
loopne
mov
das
or
and
push
cmpsb
repz
loop
fldenv
fidivs
push
aas
test
shl
and
sbb
jbe
xchg
rcr
out
jmp
or
iret
hlt
or
add
data16
cmc
adc
lds
and
and
jno
inc
push
and
test
cmc
push
push
lods
mov
call
ret
popa
leave
lret
ret
mov
mov
mov
jae
cmpsl
sbb
push
jle
loop
sbb
push
fwait
std
xor
add
jge
xchg
fadds
adcl
jg
ds
sbb
fdiv
xor
ljmp
inc
fimull
ret
div
mov
pop
cmpsl
mov
ret
cltd
jb
adc
ds
inc
hlt
in
stos
mov
sub
mov
lret
movsl
adc
outsl
cmpl
push
lahf
jb
mov
lock
inc
data16
or
ljmp
bnd
test
and
fcmovne
push
and
fcomps
push
shll
dec
push
pop
aad
repz
lods
insl
test
inc
sub
sbb
arpl
fnstenv
xchg
sbb
stc
ret
jp
mov
shr
fmuls
mov
mov
push
and
pop
or
mov
aas
sti
jnp
push
xchg
aam
mov
xlat
pusha
call
loope
mov
and
aas
xor
lret
dec
sbb
inc
lcall
je
dec
in
pop
pop
out
ja
test
xchg
lea
inc
ss
xor
aad
movsb
fnstcw
xchg
sbbb
mov
push
cld
fimuls
mov
cmp
push
mov
sarb
dec
or
popa
aas
aas
rol
inc
aas
mov
inc
insl
bound
push
icebp
xchg
or
jl
cmpsl
leave
push
orb
inc
jnp
cld
or
loop
iret
fxch
push
adc
xor
xor
into
rcll
adc
jb
ret
out
push
dec
test
sbb
insl
xor
add
popa
inc
in
fs
inc
cmpsb
jmp
jmp
and
or
je
push
movsb
icebp
dec
pop
aaa
out
mov
and
arpl
push
int3
jg
add
add
mov
aaa
xor
insb
incb
dec
frstor
jg
das
dec
sti
mov
test
shrb
xchg
lret
and
popf
mov
xchg
jg
jae
lods
cltd
mov
push
aaa
fmull
test
xor
inc
pop
clc
stos
test
imul
or
out
iret
arpl
add
jns
pop
addr16
subl
inc
out
rcl
jne
sub
test
sti
push
iret
mov
fwait
aas
xor
les
xchg
mov
mov
inc
lret
mov
inc
test
cli
repnz
mov
out
pop
std
mov
jp
push
push
test
dec
or
sub
cld
xchg
push
shl
cwtl
pop
daa
rclb
stos
jecxz
lahf
popf
data16
ja
pop
in
pop
and
adc
clc
retw
pop
ljmp
fwait
sbb
push
xor
push
and
cmp
mov
add
sub
inc
mov
or
mov
lods
test
and
aas
mov
dec
xor
inc
xchg
sarb
inc
rcrl
iret
sub
lock
lods
jno
in
adc
aaa
xor
addl
jnp
lret
jle
xchg
sti
test
push
xor
jbe
outsl
dec
sti
sbb
mov
movsl
push
pop
ss
dec
sub
adc
stc
push
cmp
dec
push
mov
sub
daa
cmp
dec
xchg
sub
or
sub
pusha
out
mov
mov
loope
fistl
fwait
shr
scas
popf
js
pop
mov
push
cmp
add
and
movb
mov
lea
out
ljmp
fdivrs
test
std
orb
in
int3
jl
pop
mov
pop
cmpsl
fisubl
and
sbb
inc
ror
aad
test
dec
test
sub
jl
or
ret
arpl
outsl
inc
sahf
pop
lods
roll
lahf
fwait
dec
das
cmc
inc
adc
xchg
inc
out
into
jo
mov
pop
push
in
jnp
rcl
pop
inc
loop
js,pt
ficompl
or
mov
iret
xor
dec
sub
ror
ds
mov
inc
sub
scas
cltd
push
xor
mov
cld
cltd
pop
jno
clc
mov
adc
xchg
lods
loope
push
jg
test
mov
pop
add
jo
xchg
movsl
sahf
xchg
fsubl
movsl
outsl
bound
lock
arpl
ret
rcrb
sub
rep
xchg
and
lods
dec
je
or
pop
jne
in
push
mov
lcall
xchg
jne
cmp
xor
jecxz
or
lahf
cltd
xor
cmp
fmuls
add
call
lahf
js
and
rcll
jne
xchg
loop
or
inc
jle
mov
push
lcall
push
pushf
iret
adc
cmp
call
push
push
cvtpi2ps
xchg
fdivrs
cmp
rorb
and
mov
pop
xchg
test
xchg
adc
add
test
mov
jno
inc
imul
jge
mov
ficomps
into
xor
test
cld
sbb
and
negl
mov
stos
jo
out
call
nop
outsl
cmpsb
mov
jo
sahf
or
jae
mov
and
dec
mov
push
sahf
push
jns
mov
cmpsl
stos
pop
cmpsl
popl
arpl
int
hlt
mov
jp
bound
mov
sbb
add
add
lret
andb
xchg
rcrl
je
push
dec
inc
mov
mov
pushf
push
xchg
cmp
lock
fs
daa
clc
add
jno
pop
fisubrs
xchg
dec
nop
shll
scas
adc
mov
imul
aam
imul
fs
jne
ret
pop
xchg
mov
mov
or
cwtl
or
inc
rorl
cmp
pop
xor
test
push
cmp
fiaddl
dec
out
mov
inc
int
mov
dec
outsl
jb
std
rcll
hlt
pop
push
icebp
lret
cmc
and
hlt
mov
test
testb
xchg
cmp
lcall
push
adc
or
xor
xor
mov
mov
insb
sbbb
add
mulb
popf
test
dec
cli
add
lret
out
push
mov
sbb
sbb
and
push
xlat
les
outsb
mov
xchg
scas
push
je
out
call
add
pop
mov
jmp
xchg
or
loope
jb
inc
and
mov
adc
add
loope
or
repnz
push
rorb
push
test
xchg
sub
cmp
adc
push
sbb
mov
or
sbb
jne
and
cs
inc
sub
rorl
and
cmpsl
xchg
fisubrl
jge
push
cli
sbb
sub
adc
sub
icebp
push
fnsave
arpl
mov
mov
dec
xor
dec
adc
and
arpl
push
lret
jne
insl
jle
flds
xor
and
sub
mov
mov
insb
mov
adcb
add
sbb
push
jae
xchg
pop
sti
ljmp
cs
xchg
or
popa
mov
mov
clc
pop
in
jmp
movsb
ret
testl
loope
dec
cmp
ret
ja
and
clc
lcall
mov
cld
bound
pop
lret
lea
mov
jb
mov
push
dec
sub
lcall
lods
cmp
mov
dec
dec
popa
pop
pop
add
test
cwtl
and
addb
push
aam
mov
push
movsl
mov
stc
add
dec
sub
xchg
push
test
jno
cmp
pop
push
das
es
in
push
lret
in
jb
dec
inc
inc
into
mov
push
mov
jp
xor
push
popf
jl
ja
fsubrs
xchg
mov
mov
sbb
inc
mov
jle
pop
test
mov
fcmovne
shrb
out
or
lcall
shr
popf
pop
imul
xor
std
lcall
dec
addr16
jo
bound
cmc
pop
xchg
sbbl
push
je
into
out
jg
mov
or
daa
sub
test
dec
iret
cmp
imul
xchg
test
std
cmpsb
add
sub
lods
insl
pusha
xchg
xchg
xchg
pop
movsl
push
xchg
mov
out
into
insl
jo
dec
xor
les
xchg
shl
xlat
sbb
lods
and
jno
or
rcr
inc
mov
lcall
xorl
cmpsl
lods
jg
xchg
sahf
shr
ss
mov
dec
and
xchg
mov
sbb
idivb
push
shrw
sbb
inc
ja
lods
mov
inc
push
jecxz
pop
ds
shl
mov
imul
push
pop
std
outsb
bound
repnz
loope
mov
mov
dec
pop
vpmulhuw
push
and
jns
inc
xchg
loope
pop
jp
loopne
pop
bound
movsl
ds
push
inc
mov
insl
rcrb
subb
sub
push
std
mov
push
cmp
push
mov
daa
mov
push
movsl
mov
push
loope,pt
mov
imulb
loop
lcall
sbb
scas
push
inc
xor
jmp
sarb
into
mov
icebp
mov
scas
outsl
aam
xchg
pop
lea
mov
aam
sbb
dec
cli
mov
aad
pusha
mov
add
aad
jl
adc
cli
push
ficompl
mov
mov
xor
mov
popf
and
fisttps
mov
or
mov
icebp
fstpt
push
sbb
xor
mov
pop
ffree
push
leave
mov
sahf
adc
xchg
out
clc
lods
xor
call
es
pop
mov
dec
mov
shrl
push
inc
or
add
mov
xor
pop
sub
push
fistl
xchg
notl
cmpsb
ret
iret
daa
mov
test
sbb
daa
sub
scas
ret
into
mov
fcomp
adc
mov
out
jb
test
lea
in
dec
inc
cmp
fiaddl
pop
nop/reserved
push
mov
inc
imul
pop
push
rcrl
cwtl
icebp
lret
cmpsb
daa
fsts
pop
fistpl
mov
ss
xor
pop
and
xlat
sahf
pusha
jo
push
push
inc
cltd
pop
sahf
adc
push
aaa
sub
shr
movsl
subb
jmp
xorl
cs
js
push
fisttpll
fs
aas
std
lock
xchg
fstl
cmp
pop
sbb
add
in
mov
lcall
inc
ljmp
cmp
test
inc
cmp
js
pop
cmc
pop
and
xor
pop
orb
flds
repz
inc
mov
repz
xor
xchg
jle
cld
test
mov
call
idivl
leave
cwtl
lret
push
clc
test
nop
mov
push
lahf
pusha
dec
out
clc
jne
jo
adc
in
pusha
ljmp
je
sahf
imul
ja
inc
or
push
dec
hlt
rcrl
xchg
stos
in
dec
sbb
mov
mov
je
nop
ljmp
push
out
mov
and
fdivl
int3
stos
adc
scas
add
inc
or
leave
pop
daa
pop
dec
jge
ljmp
jo
mov
adc
inc
cmp
arpl
popa
mov
sub
xor
mov
add
popf
mov
add
or
mov
and
mov
adc
pop
loop
push
gs
popf
gs
cmp
jbe
ds
orl
popa
or
sub
mov
and
dec
sbb
cltd
dec
fucomp
and
inc
nop
cmpsb
cmp
cwtl
popa
stc
pushf
dec
or
pop
xor
std
nop
pop
lock
jae
cmp
dec
pop
cmc
xchg
out
ret
ret
cs
fdivrs
shrl
adc
mov
aaa
les
xchg
mov
sti
stos
call
mov
std
lock
test
lret
inc
sbb
xchg
mov
cmpb
or
sbb
sub
fldenv
int
dec
hlt
push
lods
lock
xchg
jp
fsubr
mov
sub
adc
ljmp
iret
jmp
pop
jmp
popf
dec
xor
jecxz
lcall
cmpsb
pop
xchg
and
pop
imul
fildll
cmp
dec
negl
cld
fldcw
push
mov
jae
sbb
sub
pminub
lods
stos
insb
outsb
cmc
mov
repnz
lds
aas
jo
cmp
mov
mov
test
out
das
sbb
stc
mov
test
push
dec
xchg
das
sbb
lahf
cmp
sti
or
or
push
test
jno
arpl
fimuls
jbe
jne
push
cmp
xor
adc
cltd
aam
rcll
cmpsb
push
in
scas
aas
mov
jecxz
loope
lock
xchg
addr16
and
cwtl
mov
dec
sub
push
pop
push
lcall
xor
inc
or
loopne
push
clc
aas
psubb
xor
mov
lods
fistps
jo
push
mov
push
sub
fstl
jnp
cli
mov
dec
xlat
loope
in
pop
xor
fwait
call
and
in
mov
fsubp
mov
out
xchg
push
lods
es
pop
mov
inc
test
pop
xor
adc
sbb
ret
pusha
divb
adc
arpl
dec
mov
lret
push
pop
sub
ljmp
dec
stc
jne
cmp
and
sbbb
movsb
inc
lds
ja
loope
xor
mov
sbb
std
mov
mov
out
lods
mov
out
loopne
jo
or
fidivrs
nop
fsts
es
push
jmp
mov
ss
ficoms
test
sbb
push
fidivrs
sti
fcoml
or
add
movsb
stos
lret
loope
ret
pusha
push
push
dec
sub
mov
sub
pop
jl
rol
adc
es
aad
xchg
das
inc
idivb
daa
fcompl
test
sahf
pop
pop
mov
add
loop
xor
sub
fimuls
mov
les
mov
or
leave
arpl
sub
mov
int3
xlat
mov
aad
addr16
pop
add
jecxz
push
xchg
pop
dec
push
shrl
add
mov
or
rcl
sahf
fisttpl
sti
loop
cmc
xchg
outsl
sub
and
push
aad
out
shll
rorl
xchg
stos
xor
scas
inc
jecxz
imul
or
sbb
jp
sub
cmp
xchg
jo
outsl
aas
or
loope
add
inc
testl
es
int
pop
hlt
mov
in
sbb
pop
lret
insb
aam
mov
or
negb
pushf
sub
mov
jmp
clc
and
push
mov
adc
mov
pop
pop
add
ret
sahf
mov
sub
or
out
inc
loopne
adc
sti
xchg
cmp
jae
fbld
cwtl
mov
gs
ljmp
sub
rcl
inc
ret
cld
fwait
dec
dec
loope
add
xchg
mov
dec
subb
and
cmpl
je
push
mov
xor
cli
fidivrs
mov
fcoml
dec
and
and
adc
jae
rolb
stos
inc
or
inc
lock
pushf
inc
inc
sbb
or
ret
cld
pusha
cmc
cmp
inc
xchg
adc
jl
js
idivb
cmp
aaa
xor
jae
dec
xchg
ss
fcmovu
pop
jmp
lock
push
hlt
jnp
push
gs
or
aam
out
inc
xor
cwtl
pop
xchg
stos
adc
lods
pop
or
and
xchg
in
test
pop
shl
clc
mov
pop
stos
lea
cld
mov
stos
fcompl
les
sub
push
sbb
insl
sarb
lds
mov
fsubrs
in
pop
orb
push
pushf
fcoml
dec
xlat
cmp
xor
push
pop
push
testb
mov
push
push
scas
sbb
jne
call
xchg
cld
scas
and
pushf
cmpsl
xor
jmp
and
test
add
stos
bound
lcall
jg
push
push
and
xchg
jns
lret
sbb
imul
aas
adc
and
add
jg
jno
xor
dec
inc
cld
and
inc
fstl
sub
xor
dec
mov
fadd
fidivrl
push
jmp
xchg
stos
jle
add
fmul
push
push
notb
mov
rcll
outsb
ds
fiaddl
cmp
pop
add
lcall
inc
pinsrw
inc
or
add
fcomip
mov
addb
loope
ljmp
test
into
adc
insl
or
inc
push
scas
dec
mov
or
adc
test
dec
mov
push
sti
push
cli
push
xchg
xchg
jbe
mov
mov
mov
mov
nop
pop
xchg
pusha
std
mov
stos
outsl
inc
jae
test
pop
idivb
push
inc
daa
enter
xchg
xrelease
pop
fisttps
or
sbbl
cmpsl
in
fldcw
aam
mov
mov
xchg
into
shlb
negl
pop
cmp
add
lea
cmpb
mov
call
outsl
testl
sahf
push
push
dec
add
adc
adc
inc
mov
loopne
sbb
dec
popa
mov
aam
xchg
sub
jne
xor
fwait
pop
negb
lcall
outsb
out
inc
mov
xchg
mov
loopne
sahf
dec
mov
dec
pop
xorl
popa
and
lods
jnp
jbe
adc
mov
cld
lods
jae
push
out
mov
adc
pop
pop
dec
lea
ret
adc
filds
pop
pop
sahf
add
pop
mov
lret
xor
jnp
mov
mov
pop
mov
lds
push
and
xchg
shlb
adc
mov
in
mov
scas
pop
sub
pop
adc
mov
data16
and
out
out
ss
das
lds
dec
cld
cmp
and
dec
das
xchg
sbb
ret
cld
pop
jmp
push
int
fidivrs
nop
push
add
cli
adc
pop
test
sbb
pop
mov
jns
cmp
push
mov
fstpl
and
xchg
push
xchg
jno
movsl
dec
or
roll
fstpt
add
ljmp
fimuls
dec
jb
dec
into
paddsb
enter
push
into
dec
insl
inc
flds
mov
pop
cmpsl
xchg
sbb
xor
nop
mov
das
insl
int3
aam
sbb
mov
push
and
xor
push
cmp
sbb
or
setae
fistps
std
inc
sub
sub
push
std
cwtl
cmp
outsl
mov
mov
push
lods
push
xchg
and
push
rcrb
sub
xlat
xchg
xor
or
lds
push
push
bound
mov
insb
ss
fbstp
mov
popa
add
sub
lret
inc
rolb
std
in
pop
loopne
addr16
sub
aam
jae
test
xchg
shl
inc
xchg
dec
or
push
and
cmp
sbb
cmp
xor
push
xchg
cmpsl
scas
mov
pop
scas
adc
push
loopne
cli
push
push
adc
cmpsb
std
and
jbe
lcall
fcompl
sbb
and
jnp
stos
mov
icebp
sub
scas
fcoms
hlt
repz
cwtl
mov
imul
cmpsb
cmp
mov
ds
imul
jnp
int
xor
or
xor
cmp
jle
and
mov
mov
lcall
pop
std
pop
sub
sbb
jb
sub
daa
fistpl
push
div
orl
pop
lcall
xlat
push
push
xlat
cmp
mov
cld
daa
fadd
xlat
adc
xor
fdivrs
sbb
adc
pop
iret
inc
dec
ds
cmp
xchg
sub
xchg
cmp
mov
and
sbb
jmp
insl
jno
and
in
adc
cmp
xchg
jecxz
pop
rcll
jb
inc
pop
xchg
xchg
sub
cwtl
pop
xchg
into
lds
mov
push
jnp
adc
js
call
js
mov
mov
adc
js
mov
leave
loop
mov
std
mov
xchg
mov
das
xor
mov
xor
sti
mov
das
sti
inc
rcll
xor
cltd
mov
push
sub
clc
cltd
adc
stc
inc
cmpsl
cli
outsb
lcall
out
mov
stos
jle
push
insb
pushf
adc
push
jl
mov
sahf
push
loop
cltd
mov
jae
nop
lods
jle
cltd
adc
outsl
repz
xchg
mov
xor
push
aas
and
lods
cmp
insl
and
mov
or
fiadds
mov
lea
cmc
lret
adc
lods
pop
mov
sbb
jle
jbe
leave
clc
sbb
dec
sti
sub
push
outsb
imul
xor
flds
idivl
bound
mov
adc
mov
bound
sub
rcr
divb
sub
sarl
xchg
int3
in
cmp
test
xorl
xchg
nop
jl
call
icebp
lods
jno
mov
enter
xchg
xor
and
xchg
cmpsl
adc
clc
xlat
inc
nop
loopne
scas
jo
jp
cwtl
jnp
mov
mov
lcall
aad
xor
mov
pop
dec
nop
jns
push
lahf
cmp
movsl
mov
sahf
jl
add
push
loopne
xchg
lods
testl
jl
inc
xchg
sahf
iret
lret
mov
les
adc
xor
adc
in
arpl
or
rcrb
mov
sub
inc
daa
fidivl
xchg
inc
lea
mov
subb
dec
mov
wrmsr
cmc
clc
jl
shlb
mov
sub
test
and
add
shll
and
js
data16
stc
and
mov
sbb
and
inc
das
dec
fwait
add
mov
xchg
xor
push
dec
cli
sbb
shrb
sarb
cmpl
rclb
out
add
push
pop
jbe
or
xchg
in
adc
push
ljmp
fildll
call
aaa
jecxz
dec
sbb
mov
cmp
out
jbe
enter
fsubs
xchg
cmp
sahf
or
add
les
nop
in
push
sahf
cltd
xlat
dec
loop
or
std
into
jl
outsb
xchg
data16
inc
decb
sbbb
inc
jns
mov
in
outsl
int3
xchg
sar
or
loopne
addl
sub
movsb
int
mov
push
sbb
sub
std
cmp
cld
push
outsl
lea
int3
mov
mov
sub
sub
pop
popf
add
mov
repnz
add
mov
aas
fcmovbe
mov
sti
mov
sbb
decl
pop
cmp
and
fisubs
rcrl
or
roll
dec
cmc
rol
lcall
imul
inc
popl
call
pop
dec
mov
inc
cmpsl
jno
stos
dec
loope
sbb
outsl
in
pop
bound
jne
sbb
lcall
orl
pop
add
pop
and
repz
mov
adc
sbb
scas
out
insb
loopne
dec
nop
add
nop
popa
mov
movsb
dec
loopne
repz
ror
lret
jae
sbb
addr16
rolb
or
and
xor
mov
jno
mov
push
add
mov
pop
push
outsl
popa
out
cmp
scas
mov
pop
jge
mov
cmc
jmp
cmpsl
popa
xchg
mov
push
push
add
in
and
mov
fs
push
lock
ret
ret
in
pop
push
cmpsl
add
test
cli
andl
mov
test
jp
aam
dec
jle
lock
pop
notb
mov
dec
fsubrp
xchg
sbb
test
or
sbb
cmpsb
mov
lahf
and
jns
xchg
mov
mov
das
outsl
movsb
push
adc
mov
clc
sti
pusha
adc
loopne
outsb
in
int
data16
mov
cmc
icebp
repnz
mov
outsb
in
xor
pop
mov
lahf
iret
push
jae
lods
sti
repnz
mov
les
xchg
lock
mov
std
cmpsl
mov
pop
mov
cmp
or
bound
add
jne
lods
add
cmpsl
stos
mov
cmp
mov
xor
jmp
pop
mov
aad
cmpsb
dec
fs
ds
fsts
test
addr16
pxor
sub
fcoml
pop
push
mov
sahf
xor
sti
push
cs
mov
xchg
push
push
movsb
jp
nop
xor
aaa
adc
adc
nop
stos
ret
sub
aam
xor
jmp
mov
xchg
dec
wrmsr
loopne
add
fbstp
int3
int3
mov
dec
lret
movsb
pop
jno
mov
cltd
adc
lods
cmp
sub
hlt
inc
pop
push
xchg
cmp
test
leave
repnz
daa
jbe
rol
cli
mov
insl
push
or
jle
mov
ljmpw
int
loopne
pop
adc
jmp
je
jo
cmpsl
rcll
test
cld
add
and
movsl
flds
jo
xor
outsb
pop
mov
stos
sbb
mov
loopne
add
lret
imul
hlt
js
fwait
imul
mov
or
push
cld
mov
xchg
mov
lahf
inc
jae
jnp
inc
jb
jo
cmpsb
fstpl
or
pop
fisubl
inc
fsubrs
cmp
push
jb
movsl
pop
rcrl
lret
pop
xor
push
xor
pushf
je
sbb
imul
pushf
mov
loope
inc
insl
sub
je
mull
divl
repnz
xchg
adc
inc
ret
aam
push
add
adc
cmp
dec
add
xor
mov
sub
cmp
xchg
je
push
ljmp
test
ja
pop
je
sbb
nop
and
dec
pushl
dec
daa
pusha
jne
pop
repz
shl
pop
cmp
in
sub
out
aaa
repz
lock
xor
push
jno
loope
in
mov
test
push
jne
xor
xor
mov
or
mov
dec
mov
dec
andb
push
imul
or
add
inc
in
push
out
or
das
push
or
cmpsl
and
fs
xor
dec
stos
sbb
mov
aas
dec
push
mov
mov
cmp
shrb
in
js
divl
js
xchg
rcll
xchg
mov
or
mov
lods
mov
push
in
aam
dec
arpl
iret
fs
cmp
data16
rol
fwait
fwait
in
mov
inc
notb
outsl
je
mov
popa
sbb
stos
and
fucomp
ds
jnp
add
mov
adc
sbb
pushf
xor
loope
jbe
mov
adc
jp
sbb
adc
push
xchg
and
or
xlat
rolb
jmp
or
and
sbb
adc
inc
js
inc
out
xchg
cmp
cld
ss
cli
push
aam
mov
repnz
mov
push
jle
push
orb
call
xchg
sbb
into
lret
out
ret
lods
xor
sbb
xchg
jbe
insl
add
sub
ficompl
pop
test
cwtl
push
cmp
ret
jbe
sub
fs
sub
icebp
add
rorb
lock
jne
lods
stos
mov
add
push
gs
jmp
mov
push
add
iret
push
inc
enter
push
into
les
push
push
mov
insb
insb
pop
push
mov
pop
pop
add
push
pop
or
jb
mov
inc
mov
out
gs
xchg
cs
lcall
lret
pop
mov
xlat
xor
adc
leave
adc
inc
ss
lods
or
lods
push
scas
sbb
inc
int3
mov
sahf
mul
and
loope
leave
xchg
pop
fcmovu
icebp
adc
fmull
inc
sbb
mov
insb
xchg
xchg
fwait
ja
pop
xor
leave
mov
jge
xor
xorl
in
aam
cltd
out
lret
cs
jl
shrl
mov
icebp
pop
pushf
hlt
test
or
mov
sbb
repz
push
sbb
ret
call
js
scas
arpl
xchg
enter
movsl
sbb
in
xchg
rcr
add
out
std
adc
dec
jmp
cli
sbb
or
pop
insb
adcl
pushf
xchg
jmp
in
imul
or
shll
adc
fstpt
int3
lret
test
lds
push
mov
dec
jecxz
push
add
and
or
and
sarb
jge
mov
sub
cmpsl
mov
cmp
sarl
in
jno
inc
sbb
inc
cmc
fcomps
cmpsb
push
inc
cmp
adc
call
int
or
into
pop
mov
scas
ret
mov
sar
xor
xor
in
or
jl
push
es
jae
adc
rorb
lcall
jne
jb
mov
push
sub
cli
out
mov
and
pushf
imul
scas
adc
incl
sti
fildl
mov
lret
add
mov
sbb
lret
mov
dec
jge
jae
xchg
sub
test
add
out
out
jae
call
pop
sub
jg
dec
loopne
xchg
mov
lds
popa
cmp
aas
pushf
dec
arpl
sbb
fwait
xlat
sbb
mov
cmp
pop
mov
in
mov
mov
ljmp
inc
shr
out
mov
sub
sbb
lds
xchg
mov
outsb
dec
cmp
or
inc
jae
mov
dec
dec
push
stos
data16
lods
cwtl
bound
jmp
inc
and
stc
sub
imul
ljmp
sbb
movb
mov
xor
push
lret
cmpsl
cli
ror
ss
jl
push
or
push
popa
fistpl
push
repnz
adc
movsb
xor
scas
sub
push
rolb
and
ror
xor
mov
xor
ret
cmp
into
dec
sbb
fstps
pop
fstpt
add
add
dec
aas
adc
xor
add
bound
rcrb
movsb
xor
roll
xor
pushf
xor
xchg
cmp
ficoml
push
fcoml
mov
inc
dec
lea
push
cmpsl
and
fs
sub
cmp
aad
xorl
jp
push
faddl
dec
repz
js
pushf
dec
notl
pop
bound
ljmp
mov
sbb
enter
cmp
xchg
add
sub
add
push
das
ds
nop
adc
jge
mov
loope
xchg
mov
nop
mov
dec
movsl
lea
sti
ljmp
lods
xchg
orl
cltd
popa
daa
jg
inc
push
movsl
jns
add
mov
xor
and
jno
mov
mov
stos
jo
cmpsb
xor
xchg
cmp
test
lods
xor
or
sub
add
inc
mov
mov
jae
mov
popf
and
pop
nop
xchg
lahf
nop
pop
mov
mov
jmp
cld
adc
xlat
jmp
xor
push
shl
call
cmp
inc
xor
scas
addl
inc
movsl
push
push
arpl
mov
out
xchg
or
sbb
cmp
mov
mov
je
shl
in
push
into
ljmp
xlat
mov
dec
enter
loop
adc
repz
push
out
lods
scas
xchg
mov
sbb
inc
outsl
icebp
xchg
stc
fxch
xchg
popf
mov
push
cmpsb
dec
cs
jbe
rorl
jge
les
lea
test
jmp
je
inc
movsb
aas
mulb
push
dec
push
adc
popa
cli
ljmp
mov
sbb
aam
das
jbe
xor
push
test
sti
xor
call
adc
and
stos
callw
out
cmp
xchg
lret
or
dec
xchg
popf
in
dec
mov
stc
cs
popf
adc
cmp
jns
xchg
lret
in
xor
sub
push
push
inc
cmpsl
outsl
dec
lahf
xor
mov
cmp
push
dec
adc
inc
ss
out
fnstsw
mov
stc
mov
and
in
sub
cld
cwtl
inc
dec
fimuls
sti
cmp
push
cs
or
pop
inc
lahf
lret
dec
jne
dec
xor
shlb
jp
dec
cmc
mov
mov
add
adc
fwait
ret
sbb
push
test
add
arpl
or
jb
mov
ss
les
pop
hlt
out
fdivs
mov
cmp
aas
cmp
ljmp
xorb
idivb
xor
jbe
add
leave
inc
shl
xor
jecxz
int
out
sub
mov
pop
or
in
add
lahf
out
mov
push
adc
xor
jmp
mov
out
insb
iret
dec
rcrb
and
mov
enter
jno
jle
orb
xchg
call
pop
and
cmp
or
add
xor
sub
sahf
filds
sbb
pushf
test
ljmp
dec
inc
mov
pop
jo
cmp
lret
push
test
sbb
inc
inc
cs
and
push
in
push
xchg
push
int3
pop
in
push
push
fistpll
push
jns
stc
in
movsb
inc
rolb
xor
insl
rorl
gs
mulps
aad
fldl
or
cmp
in
repnz
icebp
sbb
jae
jbe
aad
mull
pop
and
dec
pop
lock
mov
xor
add
out
add
fcompl
jae
dec
dec
dec
out
ficompl
add
movsl
or
sub
inc
inc
or
jge
fmul
das
push
leave
xchg
or
push
rolb
or
iret
testl
add
pop
sahf
xchg
ret
jns
push
les
repz
xchg
enter
and
push
inc
mov
fbstp
push
cmp
aad
mov
fisubl
aad
sti
call
sbb
mov
cltd
ljmp
mov
shr
cmp
xchg
cmp
movsb
xchg
out
loop
fwait
sarl
sbb
jae
pop
push
loopne
dec
sub
out
sti
cmpl
mov
cld
cwtl
mov
addr16
xor
inc
andl
sbb
xlat
push
mov
scas
xor
mov
push
mov
jnp
add
imull
fcom
xorb
push
stc
jo
inc
lea
push
sbb
xchg
pop
inc
pop
sti
xchg
pop
jno
sbb
lds
cmpb
jae
or
imull
mov
aam
in
dec
daa
bound
mov
dec
into
or
sbb
xor
jecxz
call
pop
mov
and
ja
outsl
push
inc
ret
pusha
enter
arpl
ret
cli
test
or
inc
dec
insl
lret
rclb
pusha
hlt
jae
push
sub
mov
fwait
repz
dec
dec
pop
or
call
fsubrs
fadds
mov
push
sub
mov
sub
add
xchg
adc
xor
outsl
add
cmc
push
out
dec
ja
or
bound
and
sbb
push
inc
popa
mov
bnd
std
aas
xor
cmp
and
pop
es
in
mov
pop
mov
or
cmpsb
ja
push
sahf
or
les
fs
rcrl
mov
cmc
mov
sbb
addl
loopne
cmpsl
pushf
sub
jge
push
mov
mov
cmp
mov
mov
fdiv
mov
aam
rorb
jg
jne
js
mov
mov
call
and
hlt
mov
cmc
jmp
and
xor
sub
std
mov
int3
sub
arpl
push
pusha
fs
dec
movsb
cwtl
int
pop
lock
add
mov
test
mov
pop
sbb
xor
ficoms
into
popf
push
lret
jmp
jle
lods
add
mov
sbb
push
lock
push
ret
pushl
inc
rcl
ret
leave
cmp
adc
adc
fstpl
cmp
insb
mov
push
xchg
fisttpl
lcall
ret
mov
pop
xchg
jno
cli
sbb
mov
push
lods
nop
insb
mov
or
imulb
movsb
add
dec
dec
push
push
mov
jmp
push
cmpsb
dec
movsb
in
pop
lret
notl
fdivl
or
jae
xor
int
test
ja
xor
movsl
pop
lret
test
call
rcrb
jmp
xchg
stos
aam
jns
inc
cwtl
in
sti
mov
iret
xchg
sub
enter
xchg
movsb
stos
mov
mov
xorb
jae
sbb
roll
das
sbb
shll
push
aas
jbe
add
mov
push
xchg
mov
adc
ds
xchg
mov
test
out
pop
nop
rcll
or
jge
xchg
iret
bound
scas
std
mov
and
or
scas
xchg
adc
jnp
xor
sbb
hlt
adc
dec
call
pop
in
cmpsl
dec
pop
push
sbb
xor
insb
mov
sbb
cmpsb
xchg
mov
mov
lret
jbe
or
jp
mov
jl
pop
mov
push
lcall
jle
mov
js
xchg
out
loop
pop
cmpsl
out
arpl
mov
cmc
cmp
repz
push
sub
cmp
xchg
stos
cli
mov
ret
jnp
inc
dec
cld
cmp
mov
inc
data16
mov
cmp
roll
mov
dec
lds
sub
mov
push
roll
movsb
dec
mov
xor
and
sti
call
push
andb
add
out
clc
shrl
std
inc
or
push
cmpsl
in
scas
xor
dec
xchg
mov
test
jns
xchg
cwtl
adc
mov
adc
mov
ds
in
mov
or
aam
jae
cld
test
push
outsb
cli
lock
jle
add
mov
dec
sarb
xchg
sbbb
jno
rclb
rcrb
pop
push
mov
mov
sti
iret
or
adc
lret
mov
lea
ret
in
sbb
stos
int3
aam
sbb
jbe
ljmp
sub
or
xchg
stos
xchg
pop
inc
dec
fstp
loop
adc
lret
sbb
dec
and
pop
int
sub
push
push
shr
mov
mov
jmp
dec
sarb
movsb
sub
cmp
outsl
dec
out
or
add
stc
movsb
inc
cmc
add
jg
or
inc
fdivl
scas
xchg
lcall
adc
sbb
scas
fwait
push
cli
mov
cmp
adc
sub
cli
inc
jmp
lods
jns
test
jno
xor
push
pop
cmp
stos
shr
in
pop
push
push
lret
call
jecxz
fsubl
lcall
jmp
push
mov
jp
or
fbstp
xchg
mov
dec
mov
fimull
mov
xor
insl
dec
out
call
xorl
sbb
xchg
les
cmc
mov
loopne
hlt
lret
mov
addr16
aam
cmpsb
fdiv
cmpsb
fstl
cld
rcrb
jae
lds
popf
arpl
aad
push
dec
movsl
xor
fsts
add
jbe
bound
ds
hlt
sbb
pop
mov
mulb
cwtl
pop
leave
and
or
aas
pop
jge
push
sub
daa
test
cmp
out
lret
outsl
cs
dec
pop
or
loop
mov
cli
out
xor
inc
push
shl
jmp
dec
jmp
sub
xor
adc
jno
testl
hlt
notl
mov
pop
mov
loopne
test
xchg
jo
je
dec
into
outsl
dec
inc
outsb
xor
insb
pop
adc
sbb
scas
imul
in
and
push
xchg
jl
les
mov
addl
xchg
in
mov
sub
mov
pushf
out
mov
push
loope
mov
mov
pop
lock
add
xchg
mov
cltd
inc
mov
push
dec
enter
aas
aaa
ss
es
outsb
mov
mov
mov
dec
lcall
pop
into
sbb
addr16
dec
add
jbe
loop
out
pop
fs
dec
stos
out
aad
pop
lahf
xchg
mov
and
jecxz
in
pop
cmp
addr16
flds
sbb
fwait
jl
inc
cmp
push
dec
push
ds
push
pop
sub
aad
cmpsl
add
xchg
dec
adc
jmp
pop
sbb
mov
fcmovnbe
std
ret
lods
mov
shrb
push
sbb
leave
and
pop
pop
cli
scas
sub
adc
aas
xchg
cltd
jne
mov
pop
cli
jb
lods
mov
sahf
mov
pop
leave
stc
pop
andl
pop
in
mov
sahf
ret
fiadds
out
icebp
hlt
data16
sub
cmp
dec
in
out
aaa
cli
jnp,pt
ret
xchg
jge
sub
leave
aas
fstpt
out
add
xlat
mov
shll
pop
push
lods
sbb
jo
lods
fidivrl
clc
inc
pop
das
cmp
inc
sub
or
scas
sbb
jns
jo
jg
cmp
test
cli
movsl
outsl
jge
hlt
dec
lret
push
and
push
mov
test
jae
aaa
aas
xchg
xchg
mov
call
cmp
cmp
mov
add
or
or
iret
mov
stos
ss
in
and
in
jae
shll
jns
cmp
mov
jl
shlb
sbb
orl
pop
push
loopne
cmpsb
jne
int
imul
mov
movsl
mov
jno
inc
sub
inc
mov
xchg
leave
ljmp
jae
rorb
or
fildl
push
adc
adc
jge
insl
aad
je
cld
jb
nop
and
mov
sti
repz
stos
mov
xor
sub
scas
add
lcall
sub
push
push
rcl
xor
xchg
adc
addr16
dec
push
inc
ret
adcb
negl
pop
jb
es
mov
dec
pop
xchg
or
jg
mov
iret
out
xchg
insb
add
mov
jbe
xor
dec
push
je
sbb
cmp
xchg
jmp
loope
sbb
pop
ficomps
and
dec
les
icebp
xchg
cmp
pop
negl
pop
fsubrs
add
divl
xchg
in
pusha
or
imul
push
js
or
lea
pop
add
les
lods
sub
pop
pop
call
mov
fdivrl
lods
hlt
xor
sub
jecxz
mov
pop
inc
mov
test
ret
mov
mov
adc
xorl
loop
sub
daa
pop
lock
sub
in
pop
arpl
outsl
leave
push
dec
stc
ljmp
or
and
mov
xchg
lock
and
xchg
mov
cmp
pop
cmc
imul
push
lds
iret
add
hlt
lret
fwait
xchg
mov
mov
out
aas
inc
jno
int
jge
fldcw
jmp
mov
addl
pop
inc
into
and
pop
cwtl
inc
loopne
cs
fnstenv
add
ficoml
jge
mulb
test
mov
scas
mov
shl
or
cs
test
push
das
push
mov
incl
push
mov
cwtl
vmovntps
iret
jnp
lcall
or
cmp
cmp
repz
fistpll
repz
or
jne,pn
scas
mov
popf
fdivs
ret
negl
lret
in
sub
gs
jne
inc
nop
sub
mov
out
mov
repnz
call
pop
shl
subb
mov
lods
mov
push
shll
rorl
test
push
lock
mov
xchg
rol
int3
dec
fs
in
cli
call
xor
pop
shrl
decl
mov
lret
push
xchg
push
adc
imul
jno
rclb
lret
pop
clc
adc
lret
xor
mov
sbb
fildll
das
adc
arpl
xor
stos
adcb
jb
or
cmc
repnz
or
inc
pop
mov
cmp
outsb
daa
leave
sbb
stc
int
mov
fldl
gs
and
andb
push
nop
xchg
loope
mov
dec
loopne
aam
pop
addr16
lds
xchg
mov
jl
lods
fcos
add
cmp
mov
aaa
pop
inc
test
pop
sub
fcmovne
pop
sub
and
mov
rolb
mov
inc
loope
pop
jae
ficomps
out
das
shrl
in
aad
adc
mov
jle
pop
hlt
sub
fldt
jmp
fmulp
sub
cmp
mov
or
pop
mov
pop
int3
cmpsl
ljmp
pop
dec
movsl
lret
loope
or
fcoms
loop
loop
clc
adc
out
cmp
cmpsl
pop
push
aas
pop
ret
mov
add
sbb
xchg
int3
sbb
xchg
inc
pop
int
out
add
sub
jmp
out
mov
lret
shlb
jp
xor
js
dec
outsb
push
xorb
pop
and
and
dec
sahf
fcoml
sbb
fldl
ficomps
ret
cld
aam
sbb
xor
and
cmp
ljmp
popa
mov
lret
test
inc
pop
add
shl
add
rorl
mov
lret
imul
rcrl
add
loope
inc
sbb
xlat
adc
loop
inc
rcrb
sub
cmp
movsb
mov
insb
int
or
mov
andl
fs
stos
push
xor
test
or
and
mov
mov
je
mov
jno
aam
es
push
icebp
sahf
dec
cmpsl
fdivs
sar
lods
jo
and
sub
mov
push
xchg
sbb
and
pop
xchg
ficoms
or
or
data16
add
pop
push
mov
xchg
inc
sbb
xor
xor
mov
aam
aas
jg
sbb
push
cmp
pushf
mov
movhlps
clc
fldenv
sahf
xchg
insl
xchg
mov
pop
dec
fnstcw
fldt
add
mov
or
mov
mov
mov
cmp
inc
pop
jg
out
sbbl
gs
and
and
loopne
je
lret
xchg
add
test
push
adc
scas
add
dec
jmp
and
gs
sbb
sarb
sub
and
mov
push
mov
das
leave
je
bound
outsb
cmp
add
push
xchg
add
add
sbb
xlat
icebp
out
lds
mov
std
pop
cmp
jne
ja
mov
sarl
andl
fstl
sub
add
dec
hlt
clc
std
into
in
jae
in
mov
push
pop
cmpsb
mov
lods
ret
xor
cmpsl
arpl
sti
fsub
out
out
ds
inc
xor
fcoms
icebp
sub
outsb
data16
loopne
gs
pushf
stos
mov
repnz
lcall
push
leave
cli
mov
scas
cld
sahf
cwtl
in
mov
bound
cmpsb
pop
xchg
imul
dec
clts
add
cmp
jle
leave
scas
in
pop
cmc
das
xchg
inc
in
ret
sarb
out
or
dec
aam
mov
mov
aam
sub
add
adc
and
out
jle
ret
popw
lret
xor
adc
and
aas
fidivrl
jns
icebp
je
test
inc
push
mov
stos
outsb
push
icebp
inc
paddusw
aas
and
out
cmpsb
jp
cld
pop
jne
lret
icebp
pop
adc
mov
nop
sbbb
cli
dec
add
mov
hlt
cmp
sahf
mov
mov
cld
inc
sarb
out
test
and
sub
ss
adc
loope
inc
shl
adcl
cmpsb
inc
jo
inc
inc
sbb
mov
dec
pop
push
cmp
jns
jle
lock
xchg
test
dec
nop
out
mov
sbb
cmp
stos
xchg
xor
or
mov
mov
ljmp
mov
and
lahf
data16
bound
push
xchg
sub
roll
in
lea
shll
loopne
jmp
mov
xchg
xchg
xchg
daa
push
dec
cmp
loop
out
nop
fisubl
dec
or
inc
adc
xor
loop
mov
mov
or
or
and
repz
hlt
imul
xchg
ja
ljmp
add
pop
mov
sbb
push
and
hlt
stos
pop
loop
roll
push
push
lret
scas
imul
sti
mov
push
push
lret
cli
outsl
cwtl
addr16
cmp
icebp
and
cmc
push
and
aas
scas
movsb
xchg
dec
mov
add
dec
sbb
or
loop
not
pushf
in
mov
xlat
mov
pusha
cmc
popa
idivb
outsl
mul
xor
sub
push
movsb
add
cmpsb
adc
add
lock
aaa
outsl
mov
xchg
mov
lret
repz
add
aad
push
std
mov
clc
mov
and
je
int3
push
add
lock
cmp
and
ret
jmp
sahf
dec
sti
mov
and
jb
loop
cwtl
les
jmp
insb
vmread
dec
pop
std
inc
addr16
xchg
in
xlat
repz
pop
shll
jae
and
push
jnp
mov
sub
sarb
add
xor
mov
mov
mul
lret
push
out
stc
and
xchg
jns
idivl
sbb
dec
push
add
mov
scas
movsl
stc
inc
in
shrb
pop
dec
jecxz
xor
ficoml
pushf
pop
rcrb
sub
cmp
adc
fcmovnb
in
dec
es
pop
mov
ret
pop
cmp
dec
dec
mov
add
mov
sub
mov
ret
xchg
jp
push
cmpsb
xor
mov
leave
mov
mov
dec
push
mov
sbb
testl
add
sub
add
ret
mov
loopne
mov
sub
sub
or
mov
push
push
arpl
add
xchg
divl
arpl
pop
cmpl
popf
jnp
into
gs
popf
aas
push
inc
mov
scas
jne
xchg
push
sbb
sbb
sbb
cmc
xchg
rorl
in
sbbl
lahf
sti
arpl
movsl
cmp
xchg
pop
dec
ss
push
add
sarl
mulb
out
scas
rcll
jo
mov
fidivl
addr16
dec
push
aaa
lods
dec
pop
orb
dec
mov
push
jle
adc
jo
cmp
pop
rorl
cmpsb
icebp
fld
dec
arpl
and
das
shrb
xorl
or
lahf
sbbl
fwait
jle
pop
fimuls
int
mov
aas
clc
aas
test
jne
es
xor
es
mov
inc
pop
pop
and
lret
add
repnz
ds
scas
jle
inc
fsubrs
xchg
sub
xchg
inc
and
xchg
andb
dec
cmp
or
dec
fildll
push
or
mov
push
push
jns
or
xchg
adcb
jbe
sahf
iret
sub
out
xchg
cmp
js
or
mov
xor
pop
pop
fmull
cmp
icebp
pop
repz
push
popa
jge
imul
cmp
pop
inc
mov
insl
cmp
jb
insl
aas
scas
jo
add
stos
dec
into
xor
fnsave
sbb
pusha
ss
or
enter
cmp
xor
dec
fidivrs
stos
mov
fisttps
pop
adcb
cmp
mov
repz
jnp
or
icebp
shlb
cwtl
sub
movsl
sub
sarb
xchg
sbb
outsb
dec
or
inc
mov
nop
pop
cwtl
jmp
popa
add
ljmp
fs
jae
mov
add
dec
mov
mov
cmpsb
in
push
mov
lods
in
loope
rolb
mov
stos
xor
pop
addr16
incb
pop
out
rorl
sarl
and
ret
inc
and
call
fs
cmc
aas
mov
arpl
imul
aam
insl
cmc
pop
adc
mov
cmp
stos
sahf
xlat
sbb
dec
push
jo
cmp
push
jbe
add
arpl
mov
or
add
int
sarb
inc
dec
xchg
push
and
mov
mov
cmc
push
xor
mov
out
lret
loop
pusha
and
dec
out
push
xchg
push
adcl
add
cs
scas
inc
orl
pop
sub
fstl
jl
add
push
stos
push
or
ficoml
loop
adc
push
pop
fstps
mov
btr
xor
sub
add
and
cs
xlat
adc
daa
pop
lea
pop
jl
push
or
in
repnz
jecxz
fistl
es
test
into
in
leave
push
lock
adc
fildl
sbb
jbe
scas
xchg
push
popa
cmp
xor
sbb
sbb
sbb
pop
or
outsb
jae
test
clc
push
inc
mov
mov
testb
fsubl
into
das
jge
xor
lods
stos
mov
fucomi
or
sti
mov
sbb
jge
imul
jl
add
imul
scas
sti
mov
insl
loop
add
lret
std
test
xor
cwtl
adc
xchg
test
cmp
repz
mov
xchg
inc
lret
loop
movsb
dec
xchg
dec
push
into
inc
in
ds
cmp
repz
mov
ja
mov
inc
int
inc
int3
inc
loopne
test
dec
fstps
pop
sti
test
rclb
pop
and
sbb
adc
jp
jb
sahf
scas
inc
and
bound
fbld
cmp
push
loop
xchg
xchg
cmpsl
sub
and
mov
aas
lods
cltd
pop
xchg
out
testb
cmp
mov
cmc
aad
inc
adc
and
mov
pop
outsb
push
jbe
pop
repnz
dec
lods
add
psubsw
xor
out
out
xchg
dec
push
inc
xchg
sub
sbb
lock
adc
mov
dec
sub
xlat
arpl
cmc
idiv
jp,pn
jo
and
cwtl
je
mov
and
pop
or
mov
mov
mov
orb
push
test
das
sub
xchg
mov
mov
ds
or
bndldx
lahf
fldenv
mov
lods
mov
test
inc
mov
jecxz
in
imul
in
jmp
sbb
sbb
and
popa
dec
pop
push
testl
ds
dec
rolb
sbb
movsl
adc
xor
mov
test
pop
jl
xor
mov
popf
clc
mov
loop
push
lret
js
inc
add
andb
test
paddd
push
daa
lcall
inc
jns
mov
mov
or
xor
outsb
mov
add
cmp
cmp
jge
sarb
sub
enter
jnp
mov
xor
inc
sbb
xchg
pushf
ljmp
outsb
xor
jge
insb
mov
adc
mov
pop
xchg
add
ror
or
xor
ret
arpl
cmpsl
in
ret
dec
cmp
pop
in
mov
stos
pop
sbb
js
idivb
pop
es
dec
xor
add
xor
jns
jecxz
jl
sub
fcomp
in
dec
pop
ret
push
cmp
sbbb
xchg
dec
add
jbe
add
pushf
inc
dec
ds
ja
out
or
pop
or
cmp
loope
jle
std
mov
xor
fstp
cwtl
adc
jno
int3
push
mov
xchg
arpl
lea
or
mov
mov
xor
lea
into
pop
mov
xchg
aad
pop
fcmovbe
xchg
push
inc
sbb
ja
sub
hlt
popa
aam
sbb
xor
adc
rcr
inc
xchg
mov
dec
mov
in
xlat
adc
push
cld
mov
out
ret
pop
push
in
vmwrite
into
stos
jmp
mov
mov
jmp
or
jne
pusha
and
mov
cmp
sahf
xchg
jg
xchg
test
scas
pushf
cmp
mov
pop
cmpsb
xlat
xor
pop
out
ljmp
pop
pop
add
xlat
cmp
ja
mov
or
jecxz
push
test
out
roll
xor
xchg
mov
stos
mov
push
add
or
repnz
lret
cmp
inc
test
mov
lret
inc
jge
inc
out
mov
int3
add
xor
popa
mov
fbstp
xchg
dec
std
shr
in
push
dec
push
inc
mov
jns
mov
or
jl
or
loopne
fisttps
xchg
enter
xlat
lock
xchg
xchg
test
fisubrl
es
shll
xchg
mov
dec
cmp
std
imul
xchg
cmp
or
cmp
out
sub
mov
idivl
push
fmul
pop
jl
das
fnstcw
mov
dec
push
lock
cmc
cmpb
daa
sbb
ja
adc
sub
loop
mov
and
adc
lret
xor
stos
xor
inc
test
push
lret
stos
test
jnp
pusha
or
jne
lret
inc
and
stos
loop
inc
mov
pop
addr16
xor
and
shld
mov
inc
jge
push
outsb
mov
push
rclb
test
dec
bound
mov
hlt
xor
shl
pop
iret
mov
and
mov
or
and
cld
in
inc
pop
and
push
pop
mov
lea
fmull
mov
hlt
sbb
mov
pop
mov
fdivrs
jns
into
in
mov
or
js
jno
rolb
ja
dec
pop
add
mov
scas
into
loop
loop
ljmp
inc
fwait
hlt
adc
inc
ret
cs
inc
cwtl
dec
xchg
jg
push
sub
lock
mov
adc
rcrb
xor
fists
cmpsl
movsl
push
fcmovnu
mov
shl
pop
cmp
cli
push
lret
xchg
les
mov
add
das
mov
inc
jb
je
out
repnz
imul
sbb
fwait
push
xchg
mov
push
movl
mov
call
sbb
push
xchg
cmp
sarb
cmp
dec
pop
lret
lds
jg
sbb
mov
cmp
outsl
js
clc
inc
sub
sub
loope
pop
cmpsb
fs
sub
pusha
jp
iret
popf
jmp
cld
cli
mov
stos
aam
dec
aaa
mov
or
pop
aas
cmpsl
call
pmaxsw
push
sbb
jp
xlat
clc
sarl
test
sub
mov
add
pop
sahf
insl
push
jbe
popf
insb
repnz
leave
jno
data16
mov
pop
mov
xchg
dec
jne
mov
rcrb
mov
outsb
and
mov
xor
dec
sub
or
or
sub
lahf
push
lret
push
mov
icebp
fsubs
popl
shll
cmp
lret
mov
xchg
lcall
sahf
lods
das
fdivl
rclb
clc
mov
mov
sbb
test
mov
mov
sbb
push
jg,pt
pop
data16
dec
inc
xchg
ret
xor
pop
shl
das
xor
mov
cmc
cmp
push
adc
mov
pop
test
add
daa
mov
or
notl
mov
ja
push
in
test
jns
mov
je
mull
jne
cmp
inc
scas
sub
cltd
insb
or
mov
jnp
cmp
dec
in
jge
xor
icebp
xchg
roll
repz
mov
lds
xchg
mov
or
or
jge
hlt
jae
es
cmp
cs
adc
push
fcmovb
xchg
rorb
adc
shlb
adc
int
out
popa
hlt
mov
sbb
lret
cmp
and
stos
shl
or
cwtl
pop
cmc
cmp
xchg
push
push
arpl
fcmove
insb
imul
push
test
addb
xchg
test
mov
test
jle
test
je
ret
sub
fdiv
mov
pop
xor
and
push
stos
jmp
xchg
nop
dec
les
int3
sahf
pop
mov
pop
add
add
mov
inc
dec
mov
sub
jnp
cmc
mov
or
loop
mov
lret
dec
xchg
in
cmpsb
dec
filds
cmc
loope
pop
pop
sbbb
sub
ret
jle
sbb
loop
imul
xor
pushf
mov
and
push
or
arpl
sub
aad
add
nop
cmpsb
mov
cs
ret
popf
arpl
mov
mov
mov
scas
ret
sarb
add
jl
cmpsb
inc
fwait
mov
ret
add
and
mov
fs
jns
mov
pop
adc
push
test
nop
add
cmp
inc
jle
cmp
mov
bound
cltd
dec
aaa
lods
fidivs
idivb
in
cmpsb
aas
jo
cmp
push
pop
fimull
pop
or
cmp
pusha
adc
leave
pop
pop
sbb
jp
out
shrl
lret
call
imul
cld
mov
outsl
sub
in
inc
mov
add
stos
mov
rcrb
mov
gs
cmpsl
mov
xor
inc
pop
pop
div
mov
push
jle
movsb
pop
cmc
inc
enter
test
sbb
stos
pop
or
imul
fs
adc
je
add
repnz
in
test
repnz
sub
seta
clc
push
and
push
out
dec
nop
sbb
das
mov
popf
loopne
out
pop
sahf
lret
xor
jp
not
xor
rorb
loope
insl
and
stos
mov
repnz
shlb
jb
notl
mov
sub
dec
xor
out
das
fdivrl
insb
sub
mov
cmc
movsl
enter
or
and
jb
or
rcrl
jo
mov
adc
lcall
test
lret
mov
sub
cmp
or
nop
mov
mov
inc
cmp
stos
aam
mov
push
outsb
inc
popf
sub
pop
sub
adc
es
scas
mov
enter
fildl
jnp
lock
insb
cmpsb
addb
adc
xchg
loop
mov
xchg
or
pushl
add
je
cs
sub
push
aam
pushf
xchg
fmull
jb
add
scas
rcrb
aam
scas
jp
inc
sub
iret
xchg
adc
jle
mov
cmp
insl
lods
pop
sbb
cld
sarb
pushf
rclb
out
jbe
jecxz
and
data16
in
xchg
ret
scas
sbb
push
or
ljmp
jnp
dec
cmpl
and
ret
mov
sbb
fsubl
ret
push
aaa
inc
test
sbb
pop
loop
nop
mov
in
mov
inc
inc
mov
shlb
and
aam
aam
js
inc
pop
xor
sub
sahf
cltd
inc
and
fisubrl
enter
cmp
xor
loopne
xor
inc
or
jbe
mov
mov
inc
mov
mov
lods
jbe
imul
stos
push
divb
push
xor
scas
popa
bndldx
stc
pop
sbb
sahf
or
pop
fsts
push
test
jmp
int
add
repz
xlat
aad
cmpsb
sbb
push
cmp
pop
fbld
jo
loope
xor
mov
jmp
inc
mov
and
data16
mov
fcomps
mov
in
in
in
stc
test
dec
cmp
jg
outsb
fwait
ret
ficoml
inc
push
imul
adc
cmpb
mov
sub
les
pop
and
push
sti
fsubrs
shl
insl
sub
push
xor
sarl
cltd
mov
cmp
and
test
enter
lea
cmp
in
mov
aad
sub
hlt
inc
cmpsb
je
arpl
cltd
mov
mov
mov
insl
mov
clc
pop
inc
call
jno
movsl
negb
ror
push
xchg
push
lcall
mov
repz
rolb
sbb
mov
xchg
xchg
mov
outsb
ret
out
adc
ficomps
jne
test
push
fisubrs
std
arpl
mov
push
ret
adc
adc
mov
sub
dec
sub
in
stc
jecxz
mov
add
add
push
and
addb
sbb
pop
out
stos
insl
push
mov
and
negb
cmpsl
xor
dec
stos
nop
push
pop
sub
dec
mov
enter
gs
mov
lods
inc
andl
loope
outsb
jns
cltd
sbb
js
dec
and
jno
mov
xor
fsubs
xchg
cmp
or
notb
cmp
shr
lea
fldcw
sti
mov
repnz
dec
or
add
es
dec
xchg
or
mov
xchg
mov
xchg
xorl
push
nop
add
sbb
ret
ja
jno
imul
push
outsl
jns
sub
decl
imul
insb
mov
je
mov
leave
jo
lahf
mov
cmp
cmc
pusha
movsb
addb
push
movsb
pop
jo
pop
lods
bound
mov
orl
adc
mov
lock
repnz
push
xchg
insl
scas
mov
or
mov
push
outsl
mov
rorb
repnz
xchg
push
daa
pushf
mov
mov
add
xchg
sub
aas
mov
push
xchg
pop
push
decb
jmp
or
mov
xor
das
popf
leave
mov
clc
sbb
sbb
jae
inc
push
mov
icebp
movsb
pop
pop
aaa
and
jp
test
adcl
ss
stc
sti
or
fld
xchg
mov
pop
loope
jge
xor
xor
mov
loopne
adc
ret
dec
mov
mov
fldl
mov
mov
push
lock
test
xor
or
lcall
cmp
aas
mov
xor
das
decb
mov
xchg
movsb
iret
loope
lods
faddl
mov
sbb
mov
outsb
push
outsl
pop
push
mov
push
mov
movsl
pop
arpl
dec
stos
bound
daa
inc
xchg
sti
imul
jp
sbb
lds
imul
add
mov
rclb
inc
sarb
jae
into
sub
mov
repnz
rclb
frstor
jg
fs
lahf
fists
out
xchg
or
es
sbb
push
stos
fbstp
and
and
gs
inc
xor
push
sub
fucomp
fiaddl
jo
lods
push
outsl
loop
lds
mov
test
inc
fstp
xor
call
xchg
lea
xlat
daa
mul
addl
dec
bound
in
enter
sub
jle
push
ret
in
dec
cmp
jae
repz
mov
sub
leave
jecxz
pop
out
mov
in
adcb
xor
mov
push
jnp
jmp
cltd
cmp
test
adc
and
jl
jp
stc
mov
dec
insl
imul
adc
jmp
and
jg
lcall
std
stc
mov
jecxz
outsl
cmpsb
mov
rcl
test
add
orl
call
lds
and
repz
xchg
das
cmpsl
ja
jmp
fs
pop
sub
sbbb
sahf
jne
mov
and
stos
sub
fists
aas
movsl
movsl
loope
into
or
cmp
fstp
int3
fsubr
daa
mov
jmp
jno
inc
push
lcall
sti
xor
sahf
pop
and
add
sbbb
loop
rolb
pop
sub
fidivrs
pop
mov
sbb
outsb
enter
pop
push
mov
inc
sub
lret
cmpsb
sbb
xor
xor
sbb
and
mov
aaa
xchg
xlat
es
jecxz
js
movsl
mov
dec
and
jp
test
stos
fs
stos
fmuls
iret
mov
add
cmpsb
and
movsl
xchg
adc
xchg
jne
insb
jmp
push
dec
jge
in
pop
icebp
push
das
mov
pusha
repnz
mov
pop
sub
inc
clc
dec
addl
ss
mov
rcr
test
cmp
int3
push
add
and
inc
push
sub
or
inc
addr16
cld
fwait
pop
sbb
lahf
out
jns
pushf
and
and
dec
jmp
jbe
mov
call
and
int3
daa
xor
das
outsl
mov
adc
jne
pop
mov
add
std
popa
dec
icebp
mov
mull
cmpsl
cld
and
lret
and
pushf
xor
sbb
mov
cmpsl
idiv
addb
test
sbb
adc
addr16
push
xchg
jl
dec
push
push
insl
lods
lahf
jge
mov
pop
out
sub
push
jge
popa
popf
mov
jb
fmull
jle
fnstenv
ss
outsl
adc
xchg
call
mov
sub
stos
adc
aas
fbstp
jp
loope
rorl
ficoml
sbb
dec
cmp
ret
pop
mov
out
jno
inc
mov
cld
or
jns
mov
sbb
cltd
xchg
mov
push
dec
cmp
rcl
mov
xor
mov
ljmp
xchg
fcoms
negb
mov
cld
out
clc
pop
nop
add
push
test
and
adc
xchg
push
xchg
imulb
mov
cmpsl
sbb
loopne
mov
iret
aas
popa
fld
mov
stc
sahf
int
in
cltd
cmpsl
fwait
into
aad
sub
mov
stc
cld
mov
xor
scas
testb
jecxz
aam
inc
xor
xor
sahf
inc
cmp
js
xchg
stos
aaa
pop
xor
pop
cld
add
outsb
dec
push
fwait
leave
sbb
sti
mov
inc
mov
aam
stos
push
subps
sti
or
repz
subl
add
xlat
mov
jle
adc
mov
insl
xor
int3
int
lea
out
xor
notl
fldl
mov
shrl
ret
pop
jb
loopne
cmp
enter
push
jecxz
cmp
xchg
sbb
push
add
insb
std
push
cmp
into
jecxz
insw
mov
lds
xor
rcl
mov
or
iret
imul
adc
rcr
movsb
out
inc
test
cmpsb
inc
xor
jge
fs
mov
dec
dec
fiadds
adc
orl
ret
movsb
enter
mov
xor
and
loope
pop
inc
cld
divb
rcl
cmp
call
test
sar
dec
jl
mov
mov
adc
inc
add
mov
jp
fst
jns
mov
es
loop
xor
das
das
sub
ret
sti
pop
xchg
ljmp
subb
test
push
mov
or
scas
adcl
notb
dec
mov
jo
pop
je
adc
pop
sti
or
cs
or
xor
fs
filds
pop
add
jle
mov
xchg
or
mov
nop
sbb
out
sbbb
pop
inc
sub
cmc
test
ret
data16
add
pop
inc
adc
and
mov
pusha
adc
push
ja
in
scas
sbb
cld
xor
jae
inc
push
mov
fwait
scas
xchg
int3
test
push
mov
out
nop
inc
out
ja
sbb
out
ror
ror
jecxz
dec
mov
pop
gs
loop
sbb
jnp
adc
dec
repnz
ds
arpl
pop
std
imul
cwtl
notl
fs
xchg
sbb
dec
std
aas
incb
repnz
enter
push
pop
ficompl
clc
add
inc
mov
lahf
pop
xchg
dec
sbb
in
xchg
sti
loop
jns
add
push
sub
pusha
dec
adc
loope
lret
cmp
or
insl
call
mov
cmpsb
inc
rcrl
push
adc
nop
dec
pop
fists
cmp
jne
dec
xchg
addl
jecxz
push
inc
adc
xor
mov
dec
push
mov
cwtl
sbb
clc
push
clc
aaa
sbb
push
xchg
cmp
int3
dec
mov
pop
pop
jecxz
mov
jle
sub
sub
push
in
jmp
je
or
jl
and
mov
int3
cld
outsb
lods
inc
jno
incl
push
movsb
test
add
int
lret
jp
jbe
xchg
mov
sbb
aam
sbb
add
es
push
mov
or
or
add
lods
add
add
in
mov
mov
jns
pop
ffreep
and
loopne
mov
ret
xchg
test
xchg
fs
aam
sahf
xchg
insl
jno
scas
fildll
stos
loop
pop
lcall
xor
stos
lds
pusha
cmpsl
push
movsb
fs
mov
lret
out
mov
ret
pusha
rcll
ljmp
hlt
adc
pop
mov
xchg
jmp
ljmp
repnz
inc
les
jo
xlat
push
or
stc
data16
inc
push
mov
push
dec
mov
pop
mov
test
shlb
cmp
mov
mov
lahf
xor
xor
adc
push
sbb
hlt
mov
dec
pushf
loope
fs
out
mov
rep
repnz
xor
add
cwtl
adc
adc
je
inc
rcr
cmp
testl
testb
jmp
mov
jge
into
fs
lret
xor
xchg
sub
push
fdivrl
dec
insl
xor
js
in
xchg
in
mov
mov
sub
mov
lea
mov
push
jns
xorb
jecxz
stos
cmp
icebp
rorl
icebp
dec
jmp
pop
int
into
out
shr
and
imul
scas
pop
rcrb
addb
stos
pop
sbb
xchg
lcall
fdivs
lahf
sub
lret
or
dec
mov
push
mov
aam
das
out
fstpl
shll
ret
mov
ss
jno
mov
addr16
mov
fimull
dec
xchg
mov
dec
popf
mov
sahf
jne
out
test
mov
or
ret
xor
orl
xchg
dec
popa
xor
xor
lahf
sbb
into
jns
sbb
and
inc
out
sub
movsb
hlt
ljmp
shl
xchg
mov
cmpsb
test
cmpl
cmp
jo
jb
jl
ljmp
xor
pop
inc
push
out
jne
dec
mov
dec
fwait
mov
into
call
mov
daa
pop
shll
jnp
add
cmp
push
mov
mov
arpl
iret
fwait
pop
sub
lds
jmp
jnp
nop
andl
in
nop
push
clc
in
enter
loopne
pop
in
sub
mov
scas
pop
adc
pop
test
mov
fcom
int
imul
jne
xor
sbb
fsubp
cmp
mov
movsb
pusha
in
xor
rcl
mov
xor
outsb
fists
int
lods
test
shlb
pop
dec
inc
cmp
jae
sub
adc
jge
jno
call
sub
ret
add
pop
inc
mov
xchg
mov
jne
mov
xorl
add
sti
push
data16
jne
loopne
sub
insl
mov
xor
xor
mov
sub
mov
xor
and
fwait
mov
data16
dec
shll
ja
call
sarl
pop
cmp
push
inc
push
push
and
push
fwait
cwtl
sub
pushf
sbbl
xlat
xchg
dec
cmc
inc
xchg
mov
or
and
xchg
and
bound
adc
popa
lods
push
inc
mov
xor
enter
lret
mov
and
xchg
in
dec
in
pop
or
nop
pop
je
divl
in
sub
mov
stos
fidivs
xchg
int3
imul
fcoms
aam
cmp
pushf
adc
loopne
ja
loop
xchg
sti
pusha
adc
mov
in
pop
int
fadds
pop
xchg
inc
or
dec
in
sbb
sarb
jecxz
sbbb
mov
mov
jnp
call
mov
lcall
lret
not
pop
sbb
inc
push
adcb
sub
mov
int
mov
adc
xchg
es
sbb
cmp
movsl
outsb
mov
sbb
lret
push
out
iret
jno
sbb
stos
add
call
push
int
inc
inc
stos
pop
cmp
and
xchg
and
movl
movsb
mov
sbb
test
and
xchg
jb
push
pop
stos
cmp
sub
out
xor
divl
lods
inc
mov
jo
cltd
jg
clc
fiadds
hlt
les
xchg
sbb
pop
outsb
sub
repz
xor
mov
hlt
cmpsb
mov
outsb
and
xor
jmp
pop
mov
xor
sub
xor
cmp
gs
adc
es
jnp
inc
enter
insl
lods
jnp
incl
or
sbbb
mov
popf
jae
js
imull
or
cmp
imul
js
dec
pop
inc
cs
mov
bound
in
in
shlb
push
sub
and
in
and
mov
das
cmp
mov
push
addr16
xchg
enter
xor
outsl
mov
scas
fs
mov
jecxz
fisttpl
and
orl
and
sbbl
out
aaa
push
jge
pop
and
int
push
roll
add
test
jl
test
push
add
and
xchg
test
dec
fisubrl
mov
fdivrs
icebp
dec
std
outsb
stos
aam
jne
push
add
popf
popa
lds
pop
or
lea
fcomps
dec
mov
in
pop
xchg
dec
nop
push
mov
andb
insl
mov
mov
push
lahf
iret
sbb
jns
movsb
mov
and
cmpsl
mov
pop
arpl
sbb
pop
lods
out
adcl
xchg
jl
aam
jnp
mov
xor
and
xchg
and
int
lds
gs
add
jnp
in
and
sbb
pushf
sub
bound
jge
fwait
and
fnstsw
shll
daa
inc
and
cmp
mov
and
aam
jo
inc
mov
hlt
add
in
jbe
fnstsw
push
xor
fsubl
sub
push
add
cs
sbb
sub
sbb
mov
mov
dec
or
dec
inc
sbbb
add
adc
outsl
ljmp
orb
add
mov
jmp
lea
popf
out
imul
mov
repz
xchg
cmp
ffreep
int
mov
fisubs
or
sbb
mov
lahf
sub
cmpsb
bound
fidivrs
leave
mov
scas
or
outsb
adcl
test
in
stos
dec
gs
movl
or
out
sbb
lods
lahf
enter
xor
mov
loopne
sbb
inc
jg
movsb
in
jecxz
mov
cmpsl
jmp
mov
inc
arpl
jle
dec
pop
ljmp
push
div
xor
bound
jecxz
data16
pop
inc
dec
call
inc
xor
fidivs
jns
mov
fcomps
arpl
or
pop
aam
jne
sub
cmpsl
xchg
dec
sub
outsl
test
inc
jle
xor
in
push
fnstenv
cmp
sub
cmp
jp
imul
test
int
outsl
adc
mov
lea
and
movsl
or
std
aad
sub
idivb
fs
xchg
cs
mov
lret
xor
notl
inc
sbb
gs
pop
jns
je
add
mov
mov
ja
cmc
fcomip
pushf
cmc
pop
add
pusha
adc
pop
xchg
pushf
fstps
cld
test
pop
or
mov
jo
jp
push
mov
daa
aam
insl
orl
cltd
and
sarb
pusha
xor
inc
shll
sub
stc
sbb
cmp
adc
icebp
movsl
sub
gs
insl
sbb
loopne
gs
mov
mov
mov
icebp
lods
add
add
inc
mov
adc
and
cld
js
mov
int3
repz
aam
or
cli
adc
dec
adc
rcrb
cmp
sbb
loop
fstp
call
add
and
xchg
adcb
loopne
jb
out
mov
xor
jns
call
sbb
lods
cld
testb
push
cmpsl
inc
nop
pop
shrb
and
xor
jo
mov
xchg
push
mov
sti
push
ret
mov
sub
cmp
sbb
push
iret
xor
inc
jge
cli
push
sbb
dec
sti
in
repz
scas
roll
les
mov
stos
sbb
cmpps
mov
jl
cltd
mov
inc
inc
loope
das
jl
mov
sub
dec
mov
sbb
daa
out
jecxz
sbb
sbb
pop
jno
jno
ret
sti
rorl
incb
xlat
cmovns
pop
push
out
addr16
push
jb
xor
adc
cmc
mov
cs
add
pop
sbb
add
cmpsb
inc
jne
outsl
dec
mov
xchg
and
adc
add
mov
cmp
inc
movl
xor
mov
sahf
cmp
jge
xchg
adc
xorl
test
cld
pop
sub
sbb
cmp
cltd
shl
sbb
jecxz
incb
fistpll
je
mov
leave
jecxz
cld
cmp
cmp
push
adcl
inc
and
divl
push
add
cmpsb
pop
ret
iret
ficoms
mov
mov
cmpsl
sub
jge
lret
pusha
push
jmp
gs
xorl
stos
cmpsl
inc
push
mov
sti
cmp
cmp
fs
jle
scas
xor
lods
gs
cwtl
js
adc
enter
or
jo
cmp
sbb
lahf
mov
sbb
cltd
add
call
xchg
enter
stc
lcall
cmp
fstl
sbb
pusha
je
fcompl
movsb
sbbl
lods
mov
leave
lahf
inc
pop
inc
iret
sub
enter
testl
mov
fnsave
mov
ret
into
sarl
enter
push
lahf
xchg
jno
dec
xor
idivb
pushf
test
mov
sbb
frstor
ja
lcall
push
je
shll
xchg
pop
and
adc
adc
mov
inc
in
rolb
jo
mov
mov
xchg
adc
or
push
sbb
insb
daa
add
xchg
rcr
xchg
cmp
rcrb
or
mov
icebp
mov
mov
push
xor
popf
gs
jecxz
adc
in
out
xor
sbb
jecxz
cmp
mov
pusha
inc
cld
pop
sub
shr
push
cmpsl
popa
scas
push
mov
pop
mov
sar
int3
push
lea
xorl
adc
popf
cmp
jl
push
add
sub
in
call
adc
lcall
jg
arpl
dec
cltd
jo
iret
or
sbb
push
mov
jl
loop
in
sbb
lcall
pop
ret
and
adc
xor
outsl
dec
dec
sbb
mov
inc
dec
lret
jnp
iret
push
in
repz
jno
xchg
xchg
mov
add
mov
push
clc
mov
arpl
pop
cmp
icebp
push
mov
shrl
pop
fwait
out
mov
in
arpl
pop
pop
jns
pusha
add
loop
in
addr16
inc
orb
scas
pusha
mov
fimull
stos
aaa
push
sub
mov
xor
lods
shll
dec
mov
cwtl
repz
xlat
xor
insb
mov
push
push
enter
outsb
rcrb
add
test
push
jp
dec
fsubs
pushf
sub
repnz
jae
sub
hlt
push
in
xchg
push
add
cld
mov
sarb
jo
inc
in
lret
xchg
movsb
mov
xor
pop
ljmp
scas
pop
pop
cmpsl
mov
jns
inc
and
push
sbb
scas
push
xchg
fwait
pusha
and
cmp
movsb
xor
and
insb
sbb
jmp
test
jne
or
pop
addr16
sbb
xor
stc
push
push
fistpl
lahf
jp
sbb
test
roll
and
lahf
aaa
push
jno
adc
fsubrs
mov
or
inc
fnstcw
insb
sub
fwait
cmpsl
push
sarl
mov
adc
cmpsl
adc
jbe
and
sahf
in
push
lds
jbe,pn
and
shlb
inc
pushl
xchg
icebp
testl
sbb
ds
pop
jae
or
push
sub
mov
cmp
pushf
sub
dec
jae
stc
ret
mov
insl
mov
cmp
ret
cmp
jmp
and
loope
sbb
lock
or
inc
incb
or
popf
cld
pop
jge
sub
test
dec
movsb
fsubr
or
loopne
imul
in
les
int
ret
insl
pop
ret
cmp
push
push
fstpl
sub
jp
xor
ss
cmc
fadds
je
xchg
icebp
gs
cmp
loopne
or
ja
xor
mov
jbe
mov
lret
sbb
cmpsl
out
pop
push
js
xor
mov
inc
ja
xorl
pop
and
mov
scas
jmp
cmc
sub
xor
adc
and
xor
xor
add
jecxz
cmpl
rcll
repnz
in
inc
out
loopne
scas
fmul
jle
pop
int3
sub
xor
pop
jne
les
jmp
std
add
push
dec
movsl
add
into
mov
stc
xor
fcomps
lock
xchg
sbb
push
in
sti
mov
add
out
ret
inc
push
mov
jmp
mov
das
push
push
test
xchg
rorb
dec
jno
insb
xchg
jmp
imul
mov
mov
mov
fcmovnbe
xchg
in
test
mov
jg
push
loopne
sbb
dec
cmp
int3
pop
cld
cmp
jns
mov
std
sbb
xchg
mov
fcom
or
inc
mov
dec
imul
and
into
arpl
sahf
subl
jae
xchg
sbb
adc
cmovl
adc
insb
adc
ljmp
cmpsl
mov
mov
arpl
std
pop
push
bound
or
xchg
adc
inc
add
xor
mov
dec
ret
adc
and
lahf
sub
pop
in
xor
add
sbb
test
mov
push
xor
nop
mov
mov
adc
ficompl
hlt
loopne
pusha
ds
jp
nop
hlt
inc
add
inc
mov
mov
add
lods
ss
js
sbb
sbb
mov
xchg
pop
mov
test
fcmovnbe
pop
leave
mov
push
mov
leave
mov
sub
sbb
rolb
dec
inc
xchg
and
dec
adc
mov
cmp
lds
and
popf
lods
xchg
xor
adc
mov
test
pop
adc
sub
xor
lea
cmp
dec
fstps
pop
add
cmp
fidivrs
fs
jbe
insl
int
mov
pop
test
xor
jmp
inc
adc
xchg
orl
or
pop
scas
cmp
cmc
pushf
insb
jno
int3
ret
push
push
inc
jle
fsubr
shrl
test
mov
jge
and
jg
push
fcomps
icebp
adc
icebp
or
mov
nop
aad
stos
adc
or
push
xor
jmp
stc
cltd
orl
add
dec
lock
cmpsb
mov
sub
pop
rol
xchg
cmp
shrb
popa
les
mov
jno
je
cld
jae
jae
cli
int
cmpb
lock
jnp
out
lods
inc
ficompl
outsl
cmp
or
push
push
lcall
sbb
sbb
cmp
pop
dec
loope
les
ret
cmp
fwait
xlat
pop
lock
xchg
push
and
nop
fsts
fildll
xchg
xchg
and
pop
pop
xchg
dec
push
jp
jnp
lret
es
adcb
stc
inc
aam
fsubrl
movsl
jle
bound
xlat
ja
pop
pop
adc
rorb
movsl
xor
int
sub
and
xor
test
int3
mov
int3
mov
dec
cmp
xchg
iret
jecxz
std
pop
pop
and
int3
pop
xchg
aad
push
jge
inc
inc
ds
ds
cmpsb
pop
pop
sub
pop
inc
cmp
sbb
push
pop
pop
pop
push
push
xchg
test
fcmovnbe
push
mov
dec
in
out
out
fadds
add
pusha
repz
lods
mov
dec
jnp
adc
je
xchg
add
les
xchg
int3
stc
lods
popf
repz
insb
movsl
mov
mov
dec
push
aaa
int
repnz
xlat
arpl
incb
push
les
ret
fwait
xchg
and
clc
add
in
enter
repz
jl
pop
daa
pushf
mov
pop
mov
inc
jge
in
push
xchg
out
push
or
out
lock
fld1
cmovne
outsb
sub
lret
mov
xchg
nop
adc
xchg
data16
adc
pusha
xor
push
sub
stc
push
xchg
jbe
ficoml
fwait
sahf
lods
mov
push
mov
and
mov
adc
push
jl
stc
jb
dec
insb
shl
out
js
mov
addr16
adcl
repz
out
hlt
shlb
jp
add
push
cwtl
push
xlat
jmp
or
jb
data16
jae
and
std
adc
mul
inc
mov
adc
ja
add
enter
fs
shrl
jb
mov
rcll
and
mov
sbb
and
cmpsb
xchg
xchg
pusha
addl
mov
addr16
cmpsl
sbb
xchg
outsb
ret
xor
mov
insb
lea
cmpsb
jno
cmpsb
in
sub
mov
iret
fisubs
dec
mov
push
jg
xchg
mov
lcall
cmp
dec
das
add
jnp
rep
lea
adc
int3
mov
in
xor
pop
std
test
iret
xchg
xchg
out
mov
push
add
incl
mov
lods
ja
scas
hlt
xor
mov
adc
and
fcomp
loope
ss
push
ja
push
das
int
enter
adc
call
mov
aas
ds
adc
testl
sbb
out
sub
jp
les
mov
dec
push
aad
xchg
xlat
rorb
cmp
jl
push
sahf
lret
jne
cmp
pop
outsb
ja
lods
lods
sub
xchg
lods
aaa
shlb
sub
sahf
aas
push
dec
mov
jl
xor
cltd
sbbb
pusha
test
ret
sti
sbb
sahf
dec
je
xchg
push
ja
popa
movsl
lret
adc
mov
mov
popf
ficoml
faddp
bnd
push
lret
gs
pop
push
fwait
and
push
xor
js
inc
or
aad
cmp
cmp
xchg
push
les
fdivrs
xor
lods
repnz
ret
jmp
in
sub
xchg
or
movsl
jge
loopne
sbb
mov
fists
inc
int3
jmp
sbb
imul
cmc
mov
scas
adc
mulb
loop
std
seta
arpl
stc
xor
adc
mov
shlb
dec
lret
aad
inc
lea
into
jecxz
mov
mov
neg
jbe
pop
pop
mov
call
ljmp
out
and
jne
xor
nop
or
dec
dec
dec
cmpsl
adc
int
jmp
or
stos
cmp
andl
mov
adc
out
xchg
std
lret
rclb
lds
push
and
inc
jae
out
jmp
mov
mov
out
faddl
loopne
imul
xchg
leave
mov
mov
sbb
pop
and
or
sbb
pop
mov
pushf
push
xchg
dec
jb
xor
mov
add
das
mov
lret
cmp
xchg
rcr
sbb
repz
icebp
jge
cmp
mov
push
mov
jle
xor
cld
xor
xor
repnz
cmpsb
adcl
xchg
sahf
push
das
ret
cmp
jo
rcl
jne
add
xor
mov
fscale
dec
mov
sub
subl
sub
lahf
mov
add
jmp
inc
rcr
pop
repz
stc
ffreep
lock
leave
dec
lods
sub
sub
hlt
imul
adc
push
out
aaa
repnz
cs
cli
clc
or
mov
out
xor
stos
popf
mov
ret
push
push
push
dec
pop
sub
pop
addr16
out
out
out
lcall
out
push
push
xchg
mov
lea
dec
mov
and
cmp
insb
addr16
test
fadds
fs
jl
imul
pop
xchg
cmc
stos
lods
in
cld
out
xorb
imul
in
sub
dec
lea
rorb
sub
xor
add
cmp
imul
jb
cmp
gs
inc
repnz
mov
aaa
imul
jp
dec
pop
shll
cli
pop
repz
xlat
sub
movl
dec
push
out
subb
movsl
ret
jecxz
sub
and
stos
pop
outsl
cmpb
popa
sub
cmp
icebp
cmp
push
daa
jp
xchg
mov
jl
sbb
mov
push
mov
adc
sub
lcall
xchg
cmp
mov
mov
test
cli
mov
add
jl
ja
stos
testl
adc
testl
jge
xchg
mov
xor
out
mov
adc
stc
cmp
mov
add
clc
das
adc
add
pop
mov
jmp
push
xchg
xchg
xor
lock
lea
clc
or
sbb
jmp
xchg
and
movsl
outsb
and
clc
fistl
dec
hlt
ss
pop
pop
sbb
dec
repnz
mov
cmp
jmp
adc
das
mov
adc
in
leave
cmp
sbb
lods
add
mov
jb
mov
jno
insb
repnz
mov
imul
xor
jb
jns
mov
xor
aam
loopne
adc
out
test
push
aas
outsb
lret
lret
push
stos
cltd
dec
fisubs
lahf
shrl
das
lods
dec
mov
cmp
add
push
pop
outsb
mov
in
ds
clc
testl
call
pop
scas
xchg
adc
jbe
gs
icebp
aad
xchg
jno
dec
dec
jp
stos
outsb
lock
mov
lds
repnz
pop
dec
sti
scas
mov
outsb
xor
push
mov
dec
push
int3
lock
fwait
cld
daa
fcompp
fldcw
insl
js
mov
lds
cmp
fsubrs
xchg
sbbl
push
inc
xchg
outsl
arpl
jecxz
add
cmpsl
rorb
sub
adc
cwtl
or
les
mov
iret
jb
jae
ret
add
ret
mov
add
push
fcmovnb
dec
fwait
mov
mov
and
xor
jg
aam
add
insl
xor
jbe
inc
xchg
dec
shlb
xor
xor
jecxz
push
dec
test
push
cmc
push
cs
mov
sbb
or
xor
lock
arpl
jg
mov
pop
lds
adc
mov
fists
test
sub
cmpsb
lcall
fimuls
pusha
je,pt
xor
enter
jle
mov
push
mov
pop
push
push
push
pop
inc
dec
jns
mov
imul
or
fisubrl
ret
xchg
mov
adc
sahf
or
mov
addb
fists
loope
mov
add
add
sub
addl
inc
aaa
fists
mov
or
movsb
cmc
inc
add
sub
imul
or
push
mov
in
fwait
cmp
push
and
jo
mov
and
pop
jne
add
adc
push
in
pop
jno
out
mov
lahf
sub
stc
sub
je
push
or
pop
test
sti
mov
adc
dec
mov
cmc
lret
mov
fldcw
or
pushf
push
int3
adc
pop
dec
into
sti
scas
pop
and
mov
xchg
mov
mov
mov
loop
mov
pop
cmp
inc
test
sub
inc
inc
add
xor
incl
add
cmp
sub
push
pop
sar
jmp
mov
clc
or
lahf
outsb
sti
js
cld
sub
dec
jge
sub
int
jbe
mov
jo
aam
mov
jns
inc
das
roll
xchg
andl
sbb
push
movzbl
cld
mov
loop
das
movsb
dec
cmp
or
cmp
lret
adc
mov
xlat
xor
fnstenv
mov
mov
sub
adc
mov
mov
in
mov
push
sub
jne
cli
pop
xor
sbb
dec
ds
lret
push
inc
aaa
xchg
fsub
roll
and
xchg
shl
add
insl
test
fcmovnbe
fwait
in
jmp
insl
pop
outsl
frstor
lret
ds
sub
pop
fucomp
movsb
lret
jbe
int3
in
mov
adc
out
push
dec
inc
inc
or
xor
mov
xor
iret
pcmpeqw
adcb
sub
sub
or
repz
add
fidivrl
pop
ficoml
and
fists
push
leave
in
imul
lods
popf
xlat
mov
fldl
je
dec
mov
mov
dec
dec
fwait
adc
ss
push
and
fs
ljmp
mov
and
ret
popa
pop
or
fdivrp
cmpsb
inc
call
xor
pushf
dec
pcmpeqb
mov
dec
into
movsb
insl
cld
mov
jo
xor
movsb
and
xor
loope
mov
jge
jo
jle
pushf
and
dec
sbb
mov
mov
jmp
sbb
test
aad
jb
dec
and
test
push
xor
inc
sbb
cmpsb
fldcw
jg
stc
jns
or
int
andl
sarl
aam
mov
outsb
mov
subl
in
adc
inc
popa
mov
xlat
jmp
daa
repnz
sahf
xlat
pop
and
xchg
mov
pop
lock
jp
notb
jg
bound
pop
mov
cs
clc
xchg
addr16
outsl
sahf
fwait
and
jle
addr16
jb
ficoml
jne
rcl
jl
insl
into
jmp
jg
push
cwtl
lahf
mov
or
lret
inc
jo
cwtl
fwait
loopne
adc
inc
incb
int3
int3
je
movsl
sub
test
loopne
lret
sub
outsl
sbbl
cmp
divl
jnp
jle
dec
or
inc
leave
sbb
pop
sti
ja
jl
jg
push
loopne
xor
in
jl
dec
pop
adc
enter
or
clc
jnp
dec
je
or
dec
ds
leave
cwtl
sub
pop
cmpsb
mov
pop
inc
imul
add
in
push
xchg
scas
sbb
out
and
ret
insl
jmp
cmc
jae
aas
jno
aam
popf
fmull
mov
add
jne
xor
je
jo
dec
pop
lret
insl
bswap
leave
mov
clc
mov
das
and
mov
pushf
loope
repz
fcmove
jecxz
jae
insb
xchg
js
test
inc
pop
push
shlb
mov
subl
cmp
out
scas
xor
sbb
pop
push
or
add
adc
sub
ja
shl
xor
dec
xchg
mov
push
sub
popa
sub
pop
fdivr
xchg
xchg
or
push
inc
repz
dec
rolb
nop
or
cld
aad
or
ret
orl
jo
dec
push
imul
sarl
in
mov
rcll
fisttps
jmp
mov
scas
fisttps
int
fmull
mov
subl
je
in
jmp
add
dec
mov
xchg
es
inc
bound
decl
adc
xchg
cs
je
xchg
adc
dec
test
mov
test
stc
imul
fwait
mov
pop
xchg
mov
insb
xchg
movsl
fistl
mov
cmp
scas
pusha
insb
pop
call
push
lret
lahf
jbe
dec
mov
mov
xchg
call
lret
pusha
sub
mov
jb
pop
push
mov
adc
push
mov
aam
jle
adc
movsl
and
inc
sbb
dec
out
ljmp
in
ret
es
je
mov
fucomip
jne
test
les
je
loope
pushf
fsubs
add
call
sub
and
cmc
repnz
ja
jnp
push
mov
sti
ret
inc
ret
imul
pushf
je
sub
ficompl
test
js
ja
jl
push
scas
negl
sub
sub
adcb
scas
push
fcmovne
sub
pop
lret
mov
and
jns
pop
test
cmp
pop
jae
xlat
int3
add
in
cli
int
das
fsubp
leave
mov
mov
mov
fmull
add
push
stos
stos
shlb
mov
stos
imul
xchg
insl
xor
out
adc
jmp
and
xor
nop
xchg
mov
add
and
aaa
push
or
push
cmp
cli
pop
shrb
idivb
bound
dec
xchg
jmp
subl
cmp
push
xchg
ret
cmpsb
sub
idivl
sbb
out
cmp
mov
xchg
dec
and
xchg
xor
and
fsubrs
inc
sbb
ja
pushf
inc
out
or
dec
adc
mov
test
shlb
sarb
push
dec
sahf
sbb
shlb
pop
mov
stos
sub
jecxz
sub
jnp
inc
shl
popl
jmp
sbb
mov
add
pusha
lds
sti
xchg
rorl
imul
popa
and
dec
and
dec
and
fwait
mov
push
je
xor
in
hlt
sbb
mov
cmp
pop
mov
das
ficoml
in
fwait
or
add
ret
adc
sbb
ret
push
ror
push
cmp
push
xor
push
add
adc
stc
loopne
outsb
nop
xchg
xor
mov
rcll
stos
aaa
jbe
adc
mov
dec
sub
fbld
add
outsb
stc
sbb
jo
js
adc
pop
test
mov
jo
xor
add
addr16
clc
dec
xlat
mov
out
cmpsl
cmp
aas
cwtl
xor
sti
cmc
out
nop
mov
adc
mov
adc
out
jno
add
or
ljmp
daa
jns
hlt
pop
cltd
loop
jb
push
in
scas
inc
dec
call
jecxz
jle
xchg
adc
xchg
lret
dec
xor
in
ror
sbb
inc
jb
dec
mov
pop
adc
fnstenv
test
hlt
gs
and
data16
data16
fmull
rorb
scas
push
outsl
mov
mov
inc
or
add
inc
imul
mov
cld
into
cld
insb
add
addr16
stos
mov
xchg
or
cmc
lahf
lret
sbb
jp
lea
lock
push
and
les
dec
dec
or
testl
xchg
push
cld
mov
pop
mov
and
push
aas
jp
movsl
cwtl
jne
hlt
jae
cli
sbb
mov
mov
sbb
mov
xor
push
pop
insl
pop
sub
in
cmp
adcl
pop
inc
xor
rcrb
cmp
fsts
aad
cli
cli
mov
xlat
aad
in
lahf
out
lea
mov
insl
jb
xlat
jl
shlb
jbe
mov
and
lds
gs
addr16
int3
ret
add
stc
and
ret
mov
fsubrl
mov
arpl
js
repz
pop
jo
jnp
jp
pop
mov
test
jle
sbb
sbb
push
or
adc
add
in
cmpsl
pop
inc
pop
or
xor
aad
cmc
jno
arpl
adc
fcomps
inc
pop
cmpl
repz
arpl
pop
inc
in
adc
jmp
daa
out
and
out
sbb
ljmp
ret
ficoms
dec
les
cmp
and
fnstenv
jmp
testl
push
cmp
jo
mov
mov
jns
sbb
pop
cmc
xchg
call
sbb
dec
sti
clc
mov
push
daa
push
and
xor
int3
sub
out
call
and
mov
aam
call
div
jno
movsl
les
and
repz
inc
inc
jo
push
ret
xchg
inc
in
xor
out
jnp
push
test
mov
lods
shl
jge
outsl
int
push
xor
push
jmp
cs
icebp
adcl
dec
lock
daa
repnz
jle
scas
add
jmp
pop
das
iret
lods
addr16
repnz
out
lret
icebp
push
add
in
cmpb
sub
xor
and
and
adc
and
wrmsr
daa
xor
adcl
xchg
aas
mov
lcall
mov
pop
jae
nop
inc
cmc
push
icebp
repz
xchg
xchg
sub
lahf
inc
orb
adc
icebp
cmc
les
sbb
adc
add
cmp
inc
mov
jnp
mov
notb
insl
adc
es
pop
sbb
es
je
out
inc
cmp
pop
fisubl
dec
cld
lret
xor
adc
xor
icebp
idiv
outsb
iret
or
sub
sub
clc
icebp
jb
repnz
ljmp
sub
andb
cli
push
movsl
xchg
xchg
xchg
out
fstps
or
outsl
hlt
lods
clc
inc
fdivs
cli
fcompp
mov
jp
push
into
scas
sbb
mov
in
adc
pop
ret
mov
or
cmc
mov
xchg
push
dec
sub
fmul
mov
in
pop
xchg
push
ret
dec
mov
scas
js
jno
pop
dec
scas
sbb
outsl
aaa
sbb
adc
xchg
sbb
mov
sbb
stc
js
pop
jg
and
movsl
scas
sysenter
push
lods
sahf
or
xchg
sahf
adc
popa
sahf
or
and
sub
fxch
push
mov
mov
xor
out
sbb
imul
mov
xchg
adc
and
add
adc
enter
xor
dec
jb
ds
scas
push
in
pop
or
mov
push
fs
xchg
push
and
dec
into
lock
out
fwait
mov
lock
xchg
xor
jb
mov
inc
pop
add
ljmp
pop
pop
add
fisubl
loope
push
sub
pop
cmp
fchs
push
push
mov
outsl
in
pop
das
inc
sahf
mull
and
fidivrs
inc
repnz
adc
cmp
mov
and
in
into
lods
or
fxch
insb
pop
cld
subb
popa
pusha
add
cltd
hlt
test
xchg
scas
sub
pop
test
adc
xlat
jl
push
jno
push
cwtl
out
sub
xor
test
adc
out
sbb
cwtl
jecxz
jle
popf
popf
test
jg
jle
xchg
sahf
fisttps
hlt
jg
js
inc
mov
jecxz
cmpsl
cmc
cmp
push
fwait
pushl
and
pop
xor
mov
cmpsb
and
jl
push
xor
and
out
shrb
sbb
mov
repnz
out
sbb
lcall
add
push
and
push
in
xorb
fisubrs
in
mov
ds
enter
ds
repnz
and
pop
mov
push
xor
dec
adc
mov
icebp
and
scas
leave
adc
push
sub
out
inc
mov
popa
adc
call
jg
imul
jp
push
mov
pop
popa
push
ss
adc
test
jg
dec
cmpsb
repnz
movl
push
pop
dec
insb
popf
push
cmp
sub
xlat
mov
aam
sahf
shll
mov
cltd
pop
inc
shl
xor
mov
mov
push
fstpl
insl
mov
std
cmp
sub
mov
and
jno
hlt
inc
xchg
movl
stos
testl
stc
decb
push
xor
xlat
dec
testb
dec
cmp
lods
mov
fildll
adc
and
jns
movsl
nop
xor
mull
inc
mov
inc
mov
dec
rclb
arpl
push
sbb
cmp
lret
movsb
jg
sub
and
inc
sub
ljmp
ret
repnz
es
mov
jl
mov
pusha
push
mov
sub
inc
outsl
mov
jae
cmpsb
out
lret
jnp
jne
mov
dec
incb
call
jae
push
xchg
imul
les
cmpsb
xor
loop
sar
sbb
mov
mov
ljmp
inc
mov
negb
sub
mov
and
mov
pop
in
pop
loopne
push
xor
fldt
lds
jbe
pop
sub
sub
lret
cmp
call
inc
repz
ja
pop
mov
sti
pop
xchg
and
outsl
imul
sbb
add
push
out
pop
dec
push
push
pop
and
scas
jp
push
cwtl
cmp
les
jae
adc
cmp
sbb
add
scas
or
lock
jb
lods
int3
cli
dec
rcrb
stc
imul
divl
xchg
mov
loopne
jle
dec
cld
push
dec
cli
outsl
popf
push
insl
sub
std
mov
push
or
mov
xchg
test
ret
popf
sbbb
cmp
lcall
pop
bound
push
xchg
rcl
pusha
out
inc
cmp
push
xor
js
push
ja
shll
movsl
loop
inc
sub
sub
mov
mov
sahf
sbb
dec
inc
rorb
mov
test
mov
pop
subl
xor
xor
sbb
cmp
mov
push
call
fisubrl
pop
push
mov
jp
lods
push
ss
loope
pop
sub
push
dec
lock
loope
xchg
cmp
jp
out
or
sbb
inc
int3
popa
sarl
popa
fdivr
out
pop
cltd
jns
movsl
fistl
fsubrs
mov
loopne
lock
subl
jb
jecxz
lock
popf
call
gs
pop
xor
lcall
mov
and
outsb
adc
maskmovq
testl
out
push
enter
adcl
mov
and
fcomip
inc
movsl
outsb
loope
pushf
mov
jge
push
and
icebp
iret
pop
and
in
or
mov
pop
dec
mov
and
lahf
mov
dec
push
call
ret
fs
cmpsb
out
int
enter
ds
and
test
cmpsb
sbb
adc
stos
or
jbe
push
clc
jns
fimull
mov
outsl
aam
cmpsb
cli
pop
push
add
aam
fsubrl
cli
xor
pop
sbb
inc
sbb
popa
sbb
sbb
push
iret
fdivl
subl
mov
addl
iret
sbb
clc
filds
dec
lods
push
mov
lahf
mov
lret
adc
shlb
add
fwait
scas
xor
mov
sbb
fiaddl
subl
sbb
out
mov
pop
bnd
data16
push
sbb
insl
push
mov
xchg
scas
push
push
movsb
xor
add
xchg
subb
jbe
out
data16
fildll
jo
aad
xchg
cld
add
mov
jp
pop
push
imul
mov
push
int3
xlat
or
ret
in
sub
inc
test
inc
pop
or
dec
sub
test
mov
xchg
popa
push
jmp
inc
push
imul
inc
sub
jp
cwtl
adc
cmp
loopne
fsubrs
das
data16
or
call
mov
es
fwait
or
sbb
pop
and
out
push
mov
in
repnz
shll
insb
lcall
sub
xchg
inc
lea
pop
aad
aas
pop
adc
xchg
je
dec
aam
adc
pop
sti
fcomps
outsb
pop
lock
rorb
lock
sbb
mov
inc
test
xchg
jns
or
sub
and
iret
addb
push
daa
out
rcll
sub
sbb
mov
cwtl
subl
out
sub
push
mov
push
cmp
push
xor
mov
and
les
add
les
fsts
test
mov
mov
inc
in
test
insb
mov
push
jbe
iret
lahf
loope
push
jl
mov
je
aaa
add
scas
orb
xchg
dec
jecxz
xchg
inc
jbe
xor
xor
dec
adc
test
cld
stos
enter
test
adcb
or
jmp
add
adc
fadds
lods
xor
bound
cmpsl
in
mov
pop
fdivrs
lds
or
ret
mov
fnstenv
fwait
dec
mov
popl
push
mov
lahf
or
repz
jl
ss
sub
mov
mov
inc
popf
pop
cmp
jnp
mov
xchg
aad
dec
mov
daa
dec
and
test
mov
mov
aad
test
shlb
adc
mov
test
repz
in
je
inc
xchg
pop
fbstp
pop
adc
jae
shlb
ja
cltd
sbb
jge
out
cli
pusha
sbb
enter
xchg
add
adc
mov
adcl
fstp
xor
pop
adc
cltd
inc
daa
into
fwait
sbb
lcall
xor
std
in
jns
push
outsb
adc
mov
ficomps
hlt
inc
push
fwait
inc
or
xchg
inc
xor
inc
sub
cmp
loope,pn
inc
enter
repz
xchg
inc
into
mov
cmp
mov
iret
jae
cwtl
and
shrl
push
ret
sarl
sub
pop
stc
in
inc
cmp
jo
imul
xrelease
in
arpl
dec
rcrb
cmp
cmp
pop
das
lock
inc
fwait
cmp
shlb
jne
add
cli
pop
inc
aam
push
inc
lret
imul
cs
imul
nop
test
xchg
adc
mov
jae
shr
adc
adc
cmpsb
sti
xor
fsubs
and
xchg
cli
xor
mov
jbe
xchg
outsl
imul
outsb
cmc
add
ret
fisubs
imul
mov
faddl
mov
inc
ficoms
push
fld
mov
rorl
sub
mov
push
add
pop
jno
xor
and
add
sbb
je
push
or
fbld
int3
loope
rcll
jmp
dec
shll
dec
sbb
scas
jp
sub
or
jmp
sbb
mov
insl
adc
jns
sub
aad
out
jl
jge
jp
sbb
addr16
in
mov
jnp
inc
and
fisttps
out
xor
pop
cwtl
push
mov
and
xchg
daa
lds
subl
ror
jae
fbld
inc
ret
mov
and
jb
or
and
fdivs
aaa
lret
sbb
scas
inc
bound
or
add
and
and
or
jecxz
add
or
mov
mov
cmp
lcall
lds
and
jecxz
push
mov
lret
fwait
int
mov
adc
pop
std
cs
mov
dec
inc
pop
int3
xor
je
or
lea
stos
outsb
mov
push
mov
out
add
jnp
xchg
pop
jge
out
xor
mov
lahf
lret
test
fstl
and
out
popa
sub
inc
insl
adc
dec
inc
bound
dec
cmp
push
std
pop
add
sub
cmp
mov
pop
nop
mov
cld
neg
push
pop
roll
push
push
das
iret
sbb
jle
scas
test
adc
xchg
sbb
stc
adc
sub
pop
sti
fmull
fists
imul
gs
dec
jno
shl
push
push
lods
lds
lods
loopne
push
mov
mov
cmc
in
xor
mov
or
cwtl
ss
xor
icebp
lahf
jnp
pop
arpl
fs
add
push
dec
cmpsl
push
adc
sarb
je
loop
addr16
scas
push
cld
in
dec
dec
pusha
rclb
jg
add
mov
cmpsb
xor
pop
mov
je
rcrl
fsubrs
in
lods
fucom
cltd
cmc
call
and
and
dec
pop
xchg
dec
cmp
jb
inc
mov
out
fiaddl
repnz
dec
jmp
sbb
lret
sahf
dec
in
push
daa
inc
sub
jp
jmp
icebp
es
cmp
sbb
aad
loopne
sbb
stc
enter
xchg
lcall
out
xor
sub
mov
mov
push
movsb
mov
scas
fs
and
add
sub
mov
lcall
fsts
repz
jno
mov
mov
aas
fimuls
cmpsb
loope
loopne
mov
push
xor
xor
scas
pop
cmp
jg
das
cmc
jnp
add
sahf
xor
shll
push
orb
sub
mov
push
adc
mov
dec
pop
cmp
push
push
pop
mov
inc
dec
or
pop
jecxz
sbb
test
cmpsl
lret
push
orl
add
insl
pusha
fbld
sub
mov
dec
orb
hlt
incl
lahf
dec
push
std
cmpl
ss
movsb
inc
mov
push
dec
dec
bnd
mov
std
jp
movsb
in
lock
push
xchg
loopne
mov
mov
cmp
dec
bound
xchg
aad
pop
loope
dec
adc
in
addr16
sbb
lret
mov
cltd
popl
ja
dec
xchg
popa
mov
or
jbe
aas
insb
jle
rcl
jg
pop
pop
stos
gs
pop
scas
fwait
imul
adc
out
cmpsl
lcall
loop
imul
push
mov
pop
fmuls
push
push
div
pop
ss
icebp
test
daa
loopne
sbb
adc
insl
imulb
xor
push
inc
ffreep
xor
imul
or
mov
scas
xchg
xor
fisttps
or
daa
fidivrs
test
and
insl
imulb
cmc
xchg
js
das
out
jge
mov
pop
mov
cmpsb
fistpl
mov
adc
push
loopne
inc
andb
inc
add
cwtl
jbe
cltd
stos
dec
sub
lods
fs
jl
jne
sbb
and
or
data16
mov
jl
push
xchg
ja
pop
push
adc
enter
pop
sahf
les
adc
in
repnz
and
inc
mov
bound
int
mov
dec
inc
mov
adc
push
inc
add
test
scas
test
jbe
add
ljmp
push
mov
dec
scas
aaa
enter
mov
std
jb
inc
ds
scas
add
out
push
movzwl
jnp
in
xchg
sbb
repz
dec
pop
fs
les
xor
fmuls
sbb
mov
and
xlat
inc
inc
imull
jne
fildll
push
pop
inc
stos
imulb
push
fadd
mov
fwait
mov
aad
pop
in
jbe
cmpsl
and
cwtl
popf
pushw
mov
mov
push
sbb
cltd
pop
dec
fisubl
movsl
clc
cmp
or
dec
inc
adc
cs
mov
leave
push
sub
pop
inc
stc
pusha
shrb
nop
jb
std
into
dec
sub
stos
movsb
cwtl
mov
scas
add
and
out
shlb
les
je
insl
xchg
sub
jle
or
sbb
popf
push
je
push
xchg
repnz
mov
xchg
jmp
adc
sub
in
adc
mov
sbb
jecxz
pop
and
xchg
dec
pop
sbb
pop
roll
mov
cmc
sbbb
xchg
inc
mov
sub
xchg
fsubrs
lcall
pop
pop
retw
lret
jl
je
xor
jp
fs
pop
jns
xchg
jb
jecxz
jle
pop
lea
sarl
mov
cmpsl
outsb
rcr
iret
cld
aam
inc
stos
and
insb
inc
outsb
add
mov
cmp
jo
gs
push
rorb
ffreep
imul
mov
sub
scas
push
aaa
cld
mov
xor
rcrb
and
xchg
jecxz
stc
or
ds
xor
add
mov
and
mov
cli
loopne
mov
shl
lods
rcll
lret
dec
or
ja
das
or
inc
push
lret
out
add
int3
inc
jecxz
mov
push
lds
jecxz
or
popf
add
push
stos
mov
cmp
jecxz
pop
sbb
inc
xchg
inc
jb
mov
mov
cmp
sub
fistps
jg
jmp
xor
pop
lods
imul
cvttps2pi
and
jo
call
inc
sbbb
inc
mov
in
adc
movsl
sub
pop
js
lahf
fnsave
bound
addr16
movsb
sub
sbb
bound
inc
mov
loop
mull
cld
or
mov
push
out
movsb
jns
jbe
push
and
clc
dec
sub
nop
fsubrs
dec
movsb
lret
cs
addr16
mov
insb
or
dec
mov
lods
cmp
out
add
icebp
jecxz
jle
test
in
jl
mov
adc
xchg
lret
cltd
mov
cwtl
mov
sub
or
dec
fcomps
jo
loope
cmp
xchg
dec
xor
insl
pop
in
ret
sub
sub
subl
cmp
jb
sub
mov
pop
je
mov
stos
cmc
mov
lods
pop
in
jnp
ror
ret
outsl
jl
lods
push
add
adc
push
mov
leave
lods
or
lret
test
push
mov
add
inc
fdivl
test
sub
xchg
hlt
fincstp
fstps
orb
cli
icebp
mov
cmp
lods
mov
les
repnz
daa
xchg
enter
xchg
into
cmpsb
push
adc
pop
sbb
scas
jbe
mov
jne
inc
xchg
cli
js
mov
mov
je
dec
call
push
fs
add
sub
jae
leave
xor
mov
push
push
sub
mov
mov
std
pop
sub
je
mov
fdivs
sar
or
mov
test
cmp
out
push
cmp
lea
out
adc
lcall
sbb
xchg
pop
in
ret
sub
jmp
lret
in
lods
ret
sub
xchg
sarb
and
push
mov
xchg
and
sar
out
lock
mov
mov
pop
add
jne
sbb
int
mov
je
pop
shrb
mov
mov
pushl
inc
scas
dec
outsb
stos
std
xor
bound
fnsave
mov
or
fildll
xlat
movsb
pop
test
sbb
jmp
imul
clc
popf
sti
xchg
in
ja
cltd
push
add
int
loop
add
imul
push
sti
adc
or
rcrb
pusha
push
test
lret
push
test
mov
nop
popa
push
mov
test
addr16
mov
in
sti
imul
push
mov
fcompl
adc
outsb
sbb
stos
jge
or
pop
or
negl
push
arpl
int3
dec
loopne
mov
mov
sbb
push
inc
fwait
fwait
push
jo
xchg
gs
pushf
rclb
loop
pop
test
sbb
sub
in
push
push
pop
sub
mov
add
xor
mov
or
test
test
jecxz
or
test
push
xchg
sub
daa
push
or
andl
and
xchg
sub
lahf
aad
pusha
push
call
push
cmpl
mov
leave
fidivl
ja
push
xor
dec
pop
mov
movsb
aaa
adc
lret
les
stos
loop
cs
ja
lods
mov
fldcw
or
sub
xchg
cmpsb
jge
push
addr16
movsb
pop
mov
fiaddl
jge
popa
mov
fistps
shl
xchg
nop
xchg
sarb
adc
cmp
and
cmp
stc
sub
sbb
xorl
testl
pop
adc
cmc
cltd
repnz
loopne
xchg
imul
mov
in
jno
sub
jl
mov
pop
sbb
shl
xlat
sub
bnd
in
lea
stos
cmpsl
or
movsb
mov
into
lcall
les
mov
fnstsw
push
xchg
call
xchg
pop
call
lret
pusha
mov
jbe
aaa
frstor
mov
test
rorl
push
xchg
sarl
aad
or
cmp
and
out
sarl
dec
sbb
xlat
dec
rcr
shrb
cld
pop
shrl
dec
ret
in
xchg
pushf
jmp
insb
imul
ja
outsl
sbb
inc
or
cmp
mov
mov
out
cmpsl
hlt
fimuls
xlat
movsb
adc
movsb
and
or
pushf
push
lds
es
inc
mov
fisubs
leave
ret
lods
dec
ja
xchg
mov
out
xchg
in
test
xor
outsl
daa
mov
mov
in
test
movsb
sbb
movsl
cltd
test
dec
jge
cmp
test
or
pop
jl
sbb
ss
pop
fistl
xor
cmp
jl
lahf
xchg
pop
aam
lcall
jns
int
mov
scas
loop
mov
cwtl
hlt
adc
push
sbb
pop
mov
fstp
into
bound
jno
fs
fistpll
lret
stc
aad
inc
js
mov
push
stc
xchg
pop
push
jmp
popa
test
add
fisubl
addr16
sbb
sbb
mov
xor
orl
sbb
and
shll
ds
addl
icebp
mov
xor
jp
fstl
mov
xor
dec
dec
xor
push
push
jl
es
addr16
ret
or
sbbl
into
add
sub
loop,pn
jg
sarl
mov
inc
cmc
stos
aam
int3
push
loop
xchg
pop
imul
mov
cmc
int3
mov
inc
filds
imul
movsb
shrl
loope
mov
mov
cmp
xchg
xor
fsubr
std
xchg
add
add
add
sbb
mov
pop
orb
sbb
popf
add
out
mov
or
jmp
inc
ljmp
bound
or
adcb
adc
loop
sti
pop
into
or
inc
loop
push
xchg
ja,pn
jp
lods
jae
push
sub
lods
in
inc
scas
inc
jle
sub
lods
pusha
call
ret
mov
xchg
shll
rcr
cltd
sub
jo
mov
xor
ud1
mov
pop
icebp
stc
sahf
sub
stos
pop
jno
pop
adc
call
mov
mov
out
and
lods
sub
add
cwtl
fs
or
inc
stc
idivl
fwait
xchg
cmp
inc
fsubrl
addr16
stos
daa
in
sbb
stos
mov
mov
in
pusha
lds
nop
jno
daa
mov
fcomps
ret
into
jge
xor
jb
push
or
mov
jmp
pop
add
cwtl
jae
aaa
pusha
nop
pop
and
in
mov
hlt
pop
out
add
mov
jle
sbb
clc
notb
jnp
xor
in
jbe
xor
or
enter
mov
mov
adc
test
adc
xchg
adc
xor
ret
daa
leave
push
sub
adc
mov
push
pop
mov
lds
xchg
jmp
or
inc
incl
mov
fs
pusha
nop
in
adc
clc
dec
ljmp
and
mov
arpl
dec
pop
popa
out
mov
jmp
repz
mov
add
add
movsb
push
mov
push
mov
lret
inc
ret
ret
push
inc
aad
sbb
out
call
int
or
fiadds
std
jo
imul
outsb
cmp
or
jne
push
mov
scas
inc
rorl
test
stc
cmc
popa
or
scas
push
loope
add
mov
cmp
jb
xchg
flds
inc
cmp
es
cwtl
adc
pop
mov
sbb
jmp
out
inc
push
stc
jmp
jbe
loopne
dec
or
xchg
loopne
js
xor
hlt
subb
push
add
xlat
mov
test
pop
cmp
cmpsl
adc
sub
call
insb
sub
add
orb
dec
and
enter
pop
in
cmp
sbb
cmpsb
pop
jnp
xchg
cmpsb
je
push
inc
aaa
sub
das
lock
cmpsl
or
sahf
jmp
jns
adcl
scas
iret
mov
out
ja
xchg
mov
sbb
jno
aad
les
sbbl
andl
sahf
repnz
ja
sub
push
rcrb
mov
xor
ret
idivl
ret
outsl
xchg
xor
das
sbb
andb
data16
repnz
in
cltd
push
sbb
loope
push
xchg
sub
xchg
pop
ss
xor
pop
aam
dec
je
xchg
cmp
dec
or
pop
cmp
pop
sbb
push
jb
pop
add
mov
pop
iret
jns
out
push
scas
mov
pop
mov
test
mov
stc
sub
jge
out
pop
inc
mov
rcll
xor
popa
insl
jae
xor
std
pop
imul
jmp
lds
mov
sahf
notl
jbe
test
movsl
inc
xchg
rcrb
andb
sarb
bt
clc
xchg
das
sti
inc
sti
xor
inc
pusha
sub
movsb
add
clc
mov
pop
aam
push
fucom
les
insb
mov
jecxz
cltd
adc
fstpl
xchg
fsubrp
sub
or
jnp
hlt
sahf
roll
fiaddl
roll
add
fidivrs
xchg
rcr
icebp
test
in
mov
insb
out
adc
ss
mov
sbb
cmpsl
pop
and
pop
push
movsl
xor
sarl
leave
daa
outsl
or
and
ljmp
imul
les
dec
lahf
sbb
shlb
inc
push
xor
adc
or
sbb
jge
stos
sbb
push
lret
sub
dec
push
dec
in
stc
ljmp
inc
xchg
stc
fdivrp
int3
push
daa
mov
scas
les
and
jge
mov
inc
lea
in
add
adc
shrl
lock
daa
sbb
aad
dec
xchg
test
testl
cmp
icebp
lret
or
pop
gs
dec
jo
test
push
repz
addr16
jbe
stos
leave
fsts
add
xlat
mov
and
int3
nop
xor
push
adc
cmc
push
insl
mov
mov
pop
imul
pop
adc
mov
pop
enter
iret
popa
pop
cld
js
mov
inc
scas
add
icebp
adc
in
int
push
shlw
das
xor
stc
mov
ljmp
xchg
pop
mov
xor
or
lods
and
mov
lock
xor
into
out
mov
pop
cld
mov
fmull
push
les
cmp
xchg
loopne
mov
in
aad
out
ja
mov
xchg
adc
mov
sti
sahf
lahf
aad
sarb
mov
mov
xor
sbb
push
aam
shlb
inc
push
cmp
outsl
icebp
nop
in
pop
out
pusha
xor
pop
xchg
fisttps
sbb
fs
xchg
pusha
mov
incl
or
in
mov
into
xchg
sub
in
jp
mov
jmp
xchg
sbb
sbb
mov
out
les
sub
out
jnp
shrb
mov
and
aas
jbe
jecxz
rorl
ret
cmc
cmp
ss
test
push
daa
or
xor
push
lods
xor
pop
dec
sarb
jp
push
es
or
test
mov
pop
test
repnz
jne
and
scas
out
mov
loop
rol
sub
ficoms
sub
addb
adc
pushf
pop
mov
push
push
stos
sbb
mov
add
dec
out
ret
inc
mov
cli
cmc
jb
push
and
mov
icebp
or
xlat
xchg
fldl
test
mov
orb
jbe
mov
ficoml
xor
imul
shl
outsb
mov
cmpsb
sub
and
dec
mov
loop
fidivrl
icebp
sahf
mov
rclb
mov
cltd
lret
repz
jp
aam
xchg
dec
out
inc
fstp
rcr
mov
out
je
not
mov
mov
ja
ret
xchg
mov
in
mov
mov
shlb
or
xchg
mov
jno
xlat
push
repnz
pop
test
or
popf
fildll
sahf
mov
cltd
iret
dec
adc
push
nop
sub
mov
fistps
mov
inc
jl
ljmp
add
push
xorl
dec
clc
pusha
mov
enter
push
or
cmp
fwait
jo
iret
nop
mov
loopne
sbb
inc
test
dec
movb
push
cs
xchg
push
clc
dec
dec
lock
push
push
dec
jbe
inc
dec
pop
mov
fiaddl
jns
mov
cmpl
leave
push
loope
decb
xchg
repnz
push
js
fcomps
dec
lahf
adc
mov
lods
aas
out
ja
adc
inc
sahf
push
xlat
adcb
aaa
pop
pop
lret
push
jbe
cmp
fistpll
into
adc
or
out
addb
icebp
mov
test
xor
sbb
jae
arpl
xor
pop
mov
iret
scas
jp
cwtl
dec
sbb
jb
call
lea
je
adc
rcrl
and
in
out
iret
fnstcw
pop
mov
and
aaa
cmp
push
mov
lret
inc
pop
enter
gs
add
inc
filds
dec
leave
cli
sub
mov
cmp
arpl
lods
daa
adc
mov
int
jmp
sbb
rcl
adc
sarb
cmc
ret
adc
inc
or
add
and
test
dec
mov
bound
xchg
stos
xor
cmp
gs
xchg
pop
ret
mov
cwtl
sbb
pusha
fcomps
test
pop
mov
ror
movsb
lcall
jne
adc
cmpl
xchg
add
sub
push
cli
fdivs
out
sub
mov
sbb
push
fnstcw
add
arpl
fcompl
pop
xor
lahf
pop
ss
push
dec
xchg
cltd
lea
dec
mov
pop
xlat
fistl
sbb
xor
mov
cmp
add
xchg
shlb
mov
pop
jno
xchg
loope
fnstcw
cmpsb
sbb
and
mov
and
and
negb
dec
roll
mov
test
pop
call
push
xchg
shrb
adc
stc
fstp
insl
loope
in
loopne
pop
xor
addr16
xor
adc
sahf
sti
ret
inc
adc
into
xor
or
iret
cld
popf
mov
and
ljmp
xor
int
add
pop
xor
lods
mov
cmp
and
jns
or
mov
xchg
ja
mov
pop
dec
clc
sarl
pop
jp
mov
ljmp
hlt
push
movsl
lods
mov
sbb
rcrl
pop
sub
rcrl
xchg
pop
pop
cwtl
pop
ficoml
movsl
inc
loop
sub
jns
pop
popa
popl
je
andl
jmp
aaa
dec
mov
and
les
mov
push
sbb
xchg
mov
mov
into
xchg
or
or
aaa
lock
xchg
pop
int
jnp
in
inc
mov
sbb
addl
push
dec
mov
outsl
cli
fsqrt
push
bound
dec
mov
inc
sub
outsw
add
in
nop
xchg
stos
push
inc
mov
movsb
dec
ljmp
lock
pop
das
add
es
pop
pusha
xchg
mov
mov
push
je
cltd
mov
clc
in
in
push
hlt
xchg
scas
ficoml
leave
dec
push
sti
and
mov
add
sub
pop
jnp
call
loopne
xorb
mov
mov
hlt
out
xchg
rcl
stos
aad
mov
lock
fcomps
push
mov
mov
outsl
dec
xchg
add
inc
fadds
push
jmp
hlt
adc
dec
rcrl
pop
inc
sbb
pop
fnstsw
repnz
dec
dec
sbb
push
sti
mov
movsl
insl
shrl
call
out
arpl
adc
push
movsb
ds
cli
adc
scas
ret
and
push
cmp
jbe
das
inc
pop
mov
xor
cmp
mov
mov
bound
cmp
sahf
jbe
outsb
adc
or
jmp
and
clc
es
lods
ljmp
dec
dec
out
xor
xchg
or
jle
mov
cmp
and
cs
outsl
stos
mov
mov
jbe
xorl
pushf
mov
mov
std
mov
sarl
ja
adc
imul
dec
lea
cmpsb
insb
fwait
xor
adc
sbbb
xorb
andl
or
xchg
sbb
roll
das
fbstp
adc
fstpl
dec
push
xor
sbb
je
mov
loopne
or
imul
pop
sub
fdivl
jae
test
int
inc
adc
jnp
dec
cmp
loopne
lret
daa
into
push
lods
fidivs
cmpsl
fistl
in
bnd
pop
mov
test
mov
fidivl
cmpsb
mul
imulb
lret
in
cmp
inc
xor
das
dec
das
mov
push
xlat
cmp
or
icebp
repnz
fs
out
mov
testl
xor
push
sbb
cs
inc
mov
xchg
xlat
out
ss
hlt
pop
xchg
push
mov
sub
lods
cmp
pop
aaa
push
ss
fs
icebp
and
sbb
sbb
mov
clc
inc
add
hlt
sbb
mov
mov
pushf
lods
sti
rclb
out
mov
ds
xor
adc
push
xchg
xchg
cmpsl
es
or
xchg
and
cmpsb
jg
push
push
rdtsc
divl
xor
es
pop
clc
je
adc
das
xchg
scas
xchg
mov
xor
push
insb
pop
cmc
adc
mov
call
pop
mov
cmp
fmulp
dec
jns
shlb
insl
daa
lret
or
fisubl
mov
lods
das
out
xor
roll
dec
aaa
jg
cmpl
pop
fisubrl
mov
mov
fiaddl
jg
inc
xlat
jnp
std
inc
pusha
xchg
jbe
push
push
xchg
pusha
lret
aam
mov
cmp
mov
stos
lock
repz
int
les
lret
mov
loope
mov
or
js
sub
subb
mov
push
push
mov
or
adc
imul
cmp
mov
stc
sbb
ja
fsubr
inc
inc
mov
dec
rol
rorb
loope
mov
push
into
cmp
dec
test
.byte
sbb
