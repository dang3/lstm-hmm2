nop
nop
nop
nop
nop
nop
nop
jmp
jnp
jmp
ss
jnp
or
ret
add
inc
ds
stos
aam
and
pop
xor
mov
fisttps
pop
inc
pop
outsl
lock
mov
cmp
mov
popa
pusha
or
insl
roll
jnp
mov
inc
fnstenv
frstor
data16
and
mov
push
icebp
daa
into
cltd
and
ja
cmpl
add
pop
xchg
or
loopne
fisttpll
inc
fs
insl
adcl
sbb
xchg
jo
push
and
xchg
out
stos
add
xorb
mov
fidivrl
test
std
push
daa
push
fcomip
push
in
add
pop
loope
xchg
arpl
je
cmpsb
cmp
and
or
dec
shlb
mov
mov
mov
sbb
das
jmp
sbb
fldt
mov
jbe
das
sub
xchg
jp
in
loope
mov
dec
push
das
push
in
jg
into
cltd
adc
sub
dec
mov
push
or
mov
je
sub
inc
inc
in
xlat
ljmp
fwait
xchg
movsl
fwait
iret
xor
mov
out
arpl
in
in
outsb
xchg
inc
in
mov
aam
pop
ret
js
cli
lods
mov
mov
mov
mov
icebp
add
pop
push
adc
imulb
mov
pop
fs
push
cmc
xchg
popf
call
fcomip
xor
sub
ja
jnp
lret
adc
jge
dec
pushf
or
and
idivb
sub
sbb
cmpl
mov
cwtl
jno
fwait
push
xchg
fadd
mov
mov
and
ficoml
pop
dec
xor
pop
dec
xor
loope
ss
dec
jbe
ja
adc
and
pop
push
aaa
int3
adc
imul
add
sbb
loope
jg
test
or
xchg
mov
scas
lea
loope
dec
out
jle
add
ret
push
mov
mov
ret
mov
push
test
aas
sarb
jne
push
add
pop
xor
adc
mov
jns
aad
mov
jmp
loopne
mov
mov
push
mov
shrb
push
ja
icebp
and
jmp
add
cmpsl
dec
bound
test
sti
lea
sbb
jne
and
jmp
xchg
xchg
mov
xchg
orl
stos
cmp
imul
fisubs
jb
push
int
loope
dec
sahf
je
cmp
push
arpl
ret
lahf
adc
pushf
out
dec
imul
pop
cld
pop
lcall
jno
scas
fcompl
xor
pop
push
mov
fstl
cld
xor
pop
adc
pop
push
adc
lahf
xchg
mov
test
int
mov
inc
or
fiaddl
cmp
inc
xchg
mov
lock
lods
stos
xchg
inc
mull
ja
sahf
orb
sub
adc
jo
fstps
cmc
fisttpll
sbb
jl
call
std
jle
push
adcb
mov
cmp
jl
scas
mov
fsub
jae
int3
test
jg
jle
sbbl
aas
jge
mul
cmp
fadds
ret
push
lods
xchg
adc
sbb
lcall
cmp
popf
repnz
inc
mov
dec
dec
out
cmp
sub
pop
lea
repz
outsb
in
dec
sbb
in
push
repz
ret
fstps
pop
fwait
jmp
cmp
pop
test
rcl
lcall
out
or
mov
arpl
bound
fisubs
addr16
sub
mov
and
imul
lcall
rorb
push
cwtl
push
hlt
mov
imul
cli
imul
adc
sbb
test
shr
mov
adc
ds
shll
stos
mov
xor
fdivrl
ds
adc
in
fwait
add
xlat
mov
shrb
xor
idivl
int
push
test
or
cltd
add
ret
out
dec
adc
inc
lret
and
shrl
subb
test
test
dec
fstpt
gs
push
xor
test
adc
mov
sub
mov
rcl
or
lods
arpl
ret
jnp
scas
pop
adc
mov
jl
push
movsl
lcall
adc
xchg
mov
adc
jns
pop
push
nop
mov
mov
movsb
fisubs
xor
orb
pop
dec
int
lahf
mov
sbb
sbb
cli
dec
scas
aam
cmpsb
lods
xchg
xor
xchg
cmpsb
lods
inc
push
aas
sahf
int
out
dec
xchg
push
das
pop
xor
sbb
aaa
jbe
and
in
xchg
incl
push
out
or
notb
pushl
aaa
mov
xchg
push
repnz
jl
jnp
sub
int3
mov
cmpsb
mul
xchg
push
push
pop
out
xor
iret
test
jbe
push
add
test
stos
inc
jo
test
roll
popl
lret
xor
rolb
lods
cmpsb
adc
inc
jmp
leave
pop
jp
iret
fists
xchg
mov
mov
jnp
mov
faddl
jno
movsb
lret
in
shrb
jne
mov
xchg
popf
pop
scas
aad
dec
adc
jb
xchg
push
adc
push
mov
sub
xchg
sbb
cmpsl
sbb
jno
nop
lods
faddl
cltd
push
pop
jg
rclb
jb
rcrl
fwait
xchg
jne,pn
sub
adc
jge
rolb
xchg
mov
fwait
scas
mov
and
jns
adc
inc
xlat
insb
enter
mov
test
mov
sub
mov
xlat
into
incb
or
insl
mov
flds
cmp
cmpsl
cmp
ljmp
insl
pop
add
ret
aad
jg
movsb
test
cmp
test
xchg
add
sti
or
dec
sub
sbb
fldl
and
xchg
and
add
and
notl
lret
cltd
fs
hlt
xchg
icebp
pop
jge
pop
fucomi
rolb
out
imul
insl
push
mov
lahf
imul
jb
mov
jp
and
popa
jg
jne
push
inc
add
orl
pop
into
adc
sbb
je
adc
popf
lods
sub
xor
xor
inc
cmp
pop
xor
cli
mov
ds
cmp
lds
cmp
cmp
push
push
enter
ss
inc
mov
stos
out
rclb
ret
mov
mov
test
iret
xor
xor
mov
clc
sub
arpl
negb
sbb
jno
inc
jg
ljmp
lea
imul
inc
sbb
sub
xchg
lock
dec
orl
int3
inc
or
adc
pop
out
std
inc
pushf
inc
test
xchg
pop
clc
mulps
clc
and
sti
push
add
sub
jmp
adc
faddl
icebp
mov
ljmp
jmp
ljmp
mov
pusha
mov
pop
push
pusha
mov
stos
shl
int
pop
jbe
cmp
rclb
pop
push
or
dec
hlt
nop
fbstp
hlt
mov
inc
push
inc
lea
xchg
mov
add
outsb
pop
stos
mov
mov
xor
addr16
mov
ja
mov
inc
cmp
pop
cwtl
xchg
sbb
push
leave
adc
nop
xchg
jle
pop
aam
leave
mov
fidivrl
inc
mov
bound
inc
jl
sti
xor
cli
stc
mov
test
add
les
add
subb
dec
push
xor
pop
subb
das
add
sub
dec
or
dec
and
icebp
ja
movsl
hlt
cmp
xchg
cld
cli
dec
add
mov
out
bound
imul
icebp
fcomi
xchg
push
mov
lret
aam
xchg
xchg
add
xchg
pusha
pop
gs
inc
stos
repnz
or
je
pop
imul
repnz
das
cwtl
out
xchg
fnstenv
outsb
int3
loopne
aad
out
loop
loopne
jmp
test
mov
mov
repz
adc
lock
stos
push
jbe
sbb
js
mov
push
sbb
ret
call
or
in
scas
mov
lods
dec
cmp
sahf
ja,pn
mov
pop
loope
mov
pop
sahf
mov
arpl
out
jp
push
sub
in
fisttps
mov
lret
adc
pop
mov
push
iret
mov
mov
xchg
sti
rclb
mov
mov
mov
repnz
mov
cmp
data16
ret
scas
lret
sahf
fdivl
xor
sub
repnz
lret
sbb
scas
mov
or
enterw
cmp
add
xchg
outsl
lds
in
scas
ljmp
sbb
incl
in
std
outsb
data16
mov
daa
dec
mov
jecxz
jg
je
mov
jl
or
push
pop
adc
dec
fidivrs
faddp
jecxz
dec
dec
rcrl
xlat
paddq
test
adc
fnstcw
or
xchg
lock
test
and
shrb
stos
lock
scas
mov
mov
mov
outsb
pop
fstpl
pop
mov
pop
fnsave
inc
inc
outsl
fstpl
outsb
mov
or
cmpb
roll
inc
or
sbb
fdivp
sub
sub
sbb
pop
xor
or
mov
and
mov
inc
in
lcall
or
aaa
xchg
ja
cltd
push
in
sub
adcl
out
cmpsl
xchg
dec
sbb
add
lea
in
pop
into
lret
mov
mov
jns
fiaddl
rolb
xchg
test
inc
push
xorl
movsl
loop
pop
fistpll
sub
and
data16
in
repz
mov
out
mov
xchg
loope
cld
add
sub
repz
sub
jae
adc
jne
mov
bnd
jecxz
int3
mov
jmp
aam
fs
in
or
sbb
push
fwait
cli
aad
push
xchg
inc
ficompl
or
xchg
sub
cwtl
xchg
or
sub
scas
jg
test
or
xlat
jo
and
arpl
aaa
nop
ja
pop
jbe
mov
repz
cltd
cmpsb
cmp
mov
aam
pusha
and
int
jle,pt
int
insl
mov
in
movsb
and
mov
dec
pop
mov
xor
xchg
adc
sub
popa
mov
into
jnp
xor
pop
cmpsb
and
add
mov
and
ss
dec
mov
out
cwtl
lods
or
add
xor
sub
mov
std
movsb
ja
jae
sub
das
jl
sub
adc
adc
pop
cmp
fidivs
data16
mov
inc
pop
sti
fnstsw
imul
test
cmp
loopne
xchg
adc
test
jle
xchg
cli
and
mov
rorb
sub
cmp
jl
sbb
cld
inc
add
in
mov
jge
rclb
fidivs
push
add
lahf
iret
pop
lods
fwait
leave
andl
jge
inc
aaa
xorb
adc
pusha
pop
sub
or
mov
cmp
fdivrs
std
out
xchg
pop
pop
popf
push
enter
inc
fisttpl
mov
pop
cmpsb
pop
inc
int3
std
gs
jg
sub
sti
repz
jg
sub
clc
jns
fsts
fsub
std
nop
fstpt
xor
addr16
xchg
scas
jge
fdivrl
adc
sub
ret
in
in
xor
cmp
or
xor
lds
aam
inc
fisttps
sub
adc
mov
pop
xchg
rorb
test
mov
dec
dec
data16
test
and
pushf
fmul
lahf
fistl
mov
insb
dec
dec
cmp
mov
xchg
mov
xor
movsb
outsl
sub
mov
std
nop
inc
or
in
adcl
push
jnp
insl
sbbb
leave
mov
cwtl
jge
jg
mov
mov
lahf
movb
cli
fimull
jecxz
roll
arpl
xor
adc
stc
sbb
adc
fmuls
jne
or
sbb
or
mov
out
fldt
data16
dec
inc
xchg
insb
fcmovnbe
lea
jno,pn
pop
gs
xchg
repnz
aaa
mov
stos
mov
push
jecxz
in
cmp
mov
hlt
cwtl
ss
dec
cmp
in
call
xchg
xor
xor
xchg
push
pop
xor
rcl
imul
outsl
movntq
out
std
inc
in
push
lods
and
inc
mov
inc
mov
ja
cmc
into
sub
mov
loope
fst
fcomp
jmp
out
pop
lods
or
sahf
sbb
and
in
popa
jp
nop
jle
xor
scas
cmp
mov
popa
pop
and
jle
adc
dec
adc
mov
dec
inc
jns
cmp
enter
mov
inc
out
pop
out
lret
push
data16
push
add
adc
cmp
jnp
bnd
xchg
xchg
cld
loop
xchg
dec
cmc
out
mov
xor
fsts
pusha
adc
adc
das
test
inc
hlt
pusha
lods
mov
inc
sub
testl
mov
pop
push
xchg
jl
mov
imul
dec
or
shld
push
push
xlat
xor
lods
ja
push
and
sub
repnz
leave
repz
popf
stos
mov
sti
and
gs
jp
inc
xchg
mov
or
data16
repz
xchg
out
xchg
lahf
adc
mov
cmpsl
repnz
scas
out
scas
std
gs
xor
push
arpl
push
and
ja
dec
pop
jle
mov
movsl
mov
xchg
push
inc
adc
ljmp
ret
mov
inc
add
stos
int3
push
xor
es
decb
or
adc
cmp
xchg
fstl
lds
mov
sbb
pop
fistpl
outsb
xor
outsb
jge
pop
cmpsl
clc
imul
les
ds
lea
out
aad
sbb
adc
fldt
in
fwait
mov
lods
sub
add
cwtl
addl
popf
and
push
push
fistps
mov
pusha
ds
sbb
stos
pop
jb
daa
cmc
xor
mov
adc
mov
das
or
insl
jge
xor
xor
mov
inc
sbb
pop
lcall
mov
enter
lods
jbe
in
cmp
aas
mov
mov
inc
mov
out
jae
and
clc
xchg
daa
mov
pop
in
loop
imul
clc
xchg
dec
lock
push
pop
or
in
push
jnp
ljmp
in
dec
inc
repz
inc
mov
std
push
pop
out
add
sbb
or
xchg
cmp
pop
jp
fdivl
lcall
mov
or
ds
fisubrl
mov
idivb
inc
jbe
add
dec
dec
into
sbb
and
ror
test
je
gs
mov
imull
cmp
push
cmp
sbb
repz
push
sbb
clc
jo
stc
leave
js
sbb
xchg
int3
jbe
aad
sbb
inc
and
inc
out
push
xchg
cld
inc
adc
mov
xor
nop
dec
lret
jmp
push
xchg
fdivs
call
test
fisubrl
insl
push
cwtl
subb
jnp
add
ret
test
jp
cmpsb
dec
ja
xchg
shl
dec
xchg
push
xchg
cmp
push
sub
cmpl
stos
jl
clc
mov
add
inc
mov
jns
adc
sbb
add
addr16
cmp
sub
fldcw
shl
bound
fwait
pusha
aam
out
mov
lret
int
fildl
jns
inc
ficompl
bound
fsubl
jo
mov
push
add
adc
cmp
loope
mov
add
dec
sub
jne
pushf
sbb
xchg
mov
popa
popf
cmp
and
in
jae
ljmp
jle
bound
add
dec
push
stos
jge
xchg
or
mov
dec
iret
lcall
cmp
testb
pop
data16
inc
add
rcl
or
test
repnz
mov
pop
sbbb
push
mul
fwait
and
jbe
sbb
inc
push
xchg
mov
gs
sbb
or
push
xchg
xor
and
cmp
inc
mov
sbb
hlt
cmp
inc
mov
repz
sahf
or
daa
aas
adc
out
addl
sub
jo
xchg
arpl
fstpt
jns
hlt
jns
pop
ja
insl
add
imul
iret
mov
jno
sub
std
aam
mov
cmp
or
inc
jns
mov
fidivrl
mov
push
sub
inc
cmpsl
mov
std
aam
pop
out
xchg
inc
mov
lret
xor
xchg
adc
jecxz
mov
out
enter
push
dec
pop
xchg
or
js
fdivp
ds
mov
inc
jl
pop
in
jns
fldl
imul
sarl
inc
loope
mov
out
aad
xchg
bound
jmp
stos
and
or
sbb
hlt
mov
sub
hlt
xor
adc
add
je
mov
and
pop
sub
iret
in
and
pop
add
movsl
daa
push
pushf
xchg
int
outsb
xor
jns
divl
xor
fadd
cmpl
push
fisubl
outsb
xor
xchg
inc
dec
fsubl
jle
lods
xchg
cmp
faddp
test
and
scas
sub
push
inc
pop
inc
dec
push
pop
or
push
adc
sub
cmp
mov
push
fcmovnu
out
and
ret
jg
repnz
push
jae
adcb
adc
mov
divb
fstps
xchg
idivb
inc
decb
xor
jle
in
xor
das
sti
test
loop
movsl
push
mov
loop
mov
cs
jo
addr16
dec
xor
pushf
mov
dec
mov
sub
addl
push
push
jmp
out
fmul
pushl
jbe
jmp
or
adcl
jg
loope
fmull
mov
leave
pop
jmp
cltd
and
icebp
in
mov
xchg
inc
push
cmp
mov
push
xchg
push
or
int
or
int3
out
xor
roll
shll
out
xor
dec
bound
add
shrb
and
jae
push
mov
pop
dec
fsubp
or
dec
mov
mov
xchg
popa
pop
lcall
pop
sahf
hlt
cmpsb
test
lock
stos
xor
aad
jns
sbb
mov
or
xlat
push
arpl
cmp
leave
push
pushf
pop
or
nopl
pop
out
push
outsl
mov
push
ss
pusha
fists
add
aaa
jb
mov
cmc
sub
int
cmc
fmull
inc
mov
inc
xchg
dec
lods
lret
imul
adc
in
sbb
out
xchg
outsl
dec
fimull
xchg
jg
ret
push
pop
xor
in
out
jb
popa
jl
sahf
xor
andl
mov
aam
rclb
into
mov
xchg
add
sub
repnz
hlt
pop
fldl
lret
push
stos
pop
stc
ret
sub
ljmp
daa
xor
mov
mov
adc
inc
sub
mov
jo
fldenv
xchg
leave
repz
aas
push
xor
xchg
inc
ja
into
push
int3
inc
pop
add
fs
cmp
adc
leave
lods
call
mov
mov
stos
dec
loop
lret
sub
mov
pop
ret
cld
sbb
nop
cld
enter
comiss
jns
cmp
jp
stos
cmp
dec
frstor
out
mov
sub
mov
mov
scas
in
loopne
popf
inc
pop
sub
cmp
mov
aaa
rolb
jle
mov
mov
ds
and
not
movsb
pop
mov
lds
mov
sbb
mov
xchg
cli
ss
jge
enter
nop
xchg
icebp
add
push
cmp
lcall
scas
mov
es
xchg
mov
mov
add
popa
es
orl
mov
mov
int3
xchg
shlb
push
mov
jle
fildll
adc
lea
jl
jo
mov
jns
loopne
in
jbe
mov
adc
jg
lds
adc
sub
sbb
and
push
inc
mov
mov
adc
sbb
inc
hlt
repnz
or
dec
pop
push
aad
ss
in
push
dec
add
das
pushf
fistps
xchg
push
push
fdivrl
hlt
add
popa
into
test
jb
adc
cmp
pinsrw
jae,pt
mov
es
push
jp
imul
stos
cmp
fstpl
sub
sbb
sub
fildl
push
pop
mov
mov
daa
insb
mov
inc
push
aad
mov
test
sub
sbb
sub
stc
stos
lds
pop
adc
or
adc
jecxz
and
dec
popa
out
xlat
stc
in
repz
lcall
or
mov
sbb
out
ret
sahf
jle
stos
outsb
aas
mov
xchg
inc
pop
shll
mov
enter
pop
les
cld
daa
pop
test
fwait
icebp
pop
cs
cmp
cld
adcb
movsl
dec
dec
movsb
dec
add
scas
jp
in
cli
lods
rclb
scas
or
lret
enter
cmpl
jnp
lea
or
in
ds
jge
sub
ja
fnstsw
mov
outsl
aad
lock
push
sub
lret
jnp
add
ret
pop
insb
jbe
call
testl
inc
fidivrl
inc
cli
notb
outsb
dec
push
lret
pop
das
mov
out
pop
xchg
popa
and
cmp
call
dec
pusha
andl
pop
fdivr
popf
pop
mov
xchg
jecxz
insb
cmp
adc
add
cmc
lods
test
and
out
jmp
xchg
inc
js
mov
scas
popf
test
cmpsb
bound
inc
pop
hlt
and
je
cmpsb
sub
xchg
dec
shll
push
aad
mov
mov
push
adc
pop
jno
xchg
test
mov
repnz
jecxz
jb
or
push
inc
xchg
xchg
pop
pop
mov
inc
ret
call
and
mov
fcomps
sbb
ret
dec
fsts
mov
in
test
mov
inc
pop
insb
loopne
enter
push
sbb
jbe
mov
mov
je
xchg
cwtl
test
lods
sub
lock
stc
gs
aas
xchg
test
xchg
pop
shr
sahf
cwtl
jb
cwtl
addr16
sub
push
jmp
and
pop
je
add
inc
lahf
js
mov
insl
stos
push
fsubrp
jns
push
in
stos
in
dec
inc
jle
push
int
bound
popf
sub
sbb
mov
jbe
mov
xchg
pop
pop
push
imul
xor
and
out
stos
fwait
mov
out
xorb
cmp
push
mov
test
stos
les
add
outsb
sbb
xlat
lret
pop
sbb
jno
stos
jge
push
adc
aas
sbb
cmp
push
adc
push
mov
mov
cmpsl
xchg
nop
into
mov
sbb
sarl
xchg
mov
out
cwtl
sahf
mov
add
loop
pop
mov
and
outsb
cwtl
and
jge
jg
push
test
add
cmp
pop
pop
push
das
xlat
decb
push
das
or
stos
pop
out
push
adc
aaa
pop
and
sahf
mov
and
xchg
loop
ficompl
fisubl
imul
loope
dec
int
xchg
scas
ret
hlt
out
xor
sbb
mov
imul
adc
push
stos
sbb
fwait
or
mov
movsl
push
dec
jge
mov
mov
pop
jnp
adc
fimull
movsl
lcall
test
xor
std
lret
aad
cs
enter
pop
in
and
push
push
cmp
pusha
add
clc
inc
sbb
daa
fsubrl
push
mov
ljmp
cmp
les
dec
imul
add
push
stos
sti
in
jge
push
mov
stos
xchg
jns
aas
pop
dec
sbb
or
loopne
add
cltd
mov
in
xor
adc
dec
mov
jge
les
shlb
ss
popf
push
cltd
roll
dec
jb
pop
aas
and
push
jb
and
outsl
dec
sahf
mov
mov
jg
addr16
mov
cmp
out
mov
bound
mov
js
js
dec
int
outsb
mov
adc
fidivrl
pop
insl
frstor
or
in
repz
or
sub
ret
and
aas
inc
cmp
pop
inc
add
or
xor
aas
fnstcw
mov
daa
mov
sar
pop
repz
or
pop
js
pop
push
mulb
push
or
jo
jmp
mov
bound
xor
iret
jae
jae
les
fisubl
add
add
xor
mov
sahf
jns
and
mov
mov
stos
jl
push
stc
ja
mov
push
mov
or
fisttps
int
xor
in
ds
notl
jns
pop
int3
stos
sbb
daa
cmp
fs
in
pop
imul
aam
outsl
inc
repnz
iret
std
jmp
out
out
iret
andl
mov
add
inc
sub
int
bound
bound
outsl
sub
add
sahf
jno
xchg
out
push
mov
xchg
imul
mov
xchg
lret
das
adc
stos
push
ljmp
dec
push
pop
mov
pop
cld
push
out
push
pop
and
push
xlat
icebp
shlb
lcall
jae
outsl
js
das
sub
fs
lods
ja
jp
cmpsb
shll
cmpb
ja
pop
in
pop
sub
es
leave
cmp
lcall
loop
mov
pop
xchg
rcr
push
adc
jb
insl
xor
mov
xchg
xchg
xlat
jge
popa
sahf
jle
scas
gs
pop
hlt
mov
sbb
fwait
data16
cs
mov
sub
cli
push
test
mov
les
push
repz
jae
xchg
cmp
bound
addr16
inc
scas
fstpt
divb
add
call
cmc
jns
and
scas
int
sbb
mov
pop
sbb
scas
dec
out
sub
loope
pop
cld
sub
xchg
std
fs
cmp
into
lods
fucom
mov
xor
sbb
pop
inc
repz
sarl
clc
insl
push
jecxz
pusha
push
mov
pop
or
inc
lret
je
jae
sti
daa
dec
xorl
aam
fidivrl
sbb
xor
or
jbe
jg
stos
fs
rcrl
stc
lea
sub
int3
mov
xorl
jge
sbb
mov
push
mov
in
inc
sbb
ret
push
sbb
cmp
dec
xchg
xor
sbb
fs
adc
out
pop
ror
imul
stos
adc
mov
jb
add
test
imul
dec
dec
outsl
ss
and
inc
mov
pushl
dec
cmp
cmc
imul
mov
pop
scas
test
mov
cmc
loope
repnz
and
clc
or
mov
fidivs
cmp
ss
jp
push
stc
jns
and
inc
cltd
insl
inc
shrl
in
mov
pop
mov
es
fsub
jb
mov
in
jmp
sub
cli
jae
sbb
mov
jbe
push
xlat
pop
cmp
mov
jno
loop
push
negb
cli
jns
ljmp
jmp
xor
mov
mov
lcall
dec
jb
mov
sbb
ja
and
xor
and
int3
lret
imulb
test
enter
cmpsl
cwtl
in
shr
pop
cmp
popf
fucomp
push
test
adc
cld
dec
addb
push
add
push
push
sbb
push
mov
adc
shlb
decb
add
mov
shll
dec
sub
stos
out
rcrl
cmc
lock
mov
fdivs
xor
cltd
mov
cli
shll
jge
xchg
mov
push
or
ja
imul
sub
test
sub
sbb
stos
cltd
push
xchg
push
decb
cmp
ret
into
repnz
in
call
ja
test
jge
fwait
add
xchg
xor
cmp
nop
arpl
fnstcw
aaa
sahf
mov
arpl
jg
add
inc
push
outsl
xor
dec
bound
je
dec
or
pop
add
sti
lahf
mov
loopne
cmp
adc
adc
repnz
jl,pn
nop
lcall
repz
adc
ffree
call
pop
jecxz
pushf
mov
push
mov
jns
xchg
imul
test
push
movsl
mov
mov
daa
xlat
lret
or
push
adc
loopne
pop
adc
or
in
push
movsb
push
xor
inc
sbb
jb
fcmove
adc
add
icebp
sub
arpl
sbb
mov
adc
sbb
call
pop
icebp
jnp
lret
fisubl
xor
sbb
cli
dec
fdivrl
out
xchg
rorl
ss
xchg
mov
ror
pushf
out
sub
adc
xchg
movsl
sbb
movsb
jno
out
popa
movsl
testb
ljmp
cltd
xor
int
ret
add
popa
xchg
inc
rcll
ljmp
adc
outsl
scas
test
js
inc
xchg
aaa
add
lret
js
jns
add
adc
mov
jl
push
sbb
sub
add
xchg
add
loope
icebp
aas
jae
repnz
iret
cmpsl
repz
cli
out
stos
jb
shlb
into
pushf
mov
rcr
fs
inc
decl
es
mov
push
jle
push
repz
lods
popa
mov
push
pop
sub
fcoms
lahf
pop
cmp
in
jg
ret
fs
adc
add
sub
dec
xor
test
mov
xor
movsl
pop
pop
stc
xchg
fcomip
lcall
repz
cli
jmp
das
pop
call
imul
addr16
ret
sahf
and
cwtl
and
out
push
sbb
pop
push
lods
pop
in
and
dec
jmp
pop
cli
imul
pop
scas
cmp
shr
lock
mov
insb
dec
addr16
mov
xor
shlb
mov
lds
fdivr
add
cli
arpl
pop
xchg
imul
mov
js
push
push
leave
mov
lock
or
or
and
mov
mov
xor
push
in
int3
mov
cs
mov
dec
xchg
stc
cwtl
cmp
std
movsl
sub
fnstcw
ds
cs
pop
aam
pop
loop
inc
cli
fsubrs
sbb
xor
cmp
sbb
cld
ja
fs
cmpsl
sbb
jbe
sub
outsb
jl
in
lds
mov
add
iret
mov
enter
hlt
mov
fsubrs
lret
icebp
jno
cmp
xchg
mov
daa
mov
cwtl
imul
dec
inc
jp
cs
mov
mov
fld
dec
and
fldcw
fst
mov
clts
jb
adc
lds
aas
xchg
inc
arpl
push
fwait
subl
lret
or
in
jns
xchg
cwtl
cmp
jbe
aam
stos
andb
inc
insb
xchg
mov
test
out
cmpsb
and
adc
fs
in
mov
outsb
popf
inc
imul
aaa
lods
imul
int3
cmp
subl
int3
inc
dec
out
inc
test
pop
jmp
leave
push
inc
bnd
jmp
test
stc
das
cli
push
add
mov
mov
pusha
lods
jae
inc
mov
leave
pushf
mov
imul
mov
mov
ds
adc
jbe
outsb
aaa
dec
pop
push
or
mov
mov
push
jb
pop
and
push
or
cmp
mov
or
push
mov
mov
je
fsubrl
aad
fwait
fwait
out
paddb
pop
out
scas
in
and
pop
sub
push
inc
jae
outsl
mov
test
jmp
jl
jo
mov
inc
mov
jmp
and
jecxz
dec
push
rorl
stos
adc
mov
in
mov
mov
add
mov
inc
mov
inc
or
inc
psubusw
nop
mov
xchg
pop
push
cli
adcl
test
jbe
or
mov
insl
cmp
int
int
cltd
xchg
push
pop
and
adc
outsl
fyl2x
js
push
jae
ss
lahf
push
insl
mov
sti
aaa
cmpsb
adc
lods
sahf
fwait
add
push
xchg
loopne
enter
insb
and
shlb
lods
stos
stos
sbb
mov
or
adc
and
cmpsb
sbb
mov
sbb
push
cmp
das
sahf
movsl
mov
jle
cmpsb
orb
cmc
in
push
cmpsl
jmp
sub
push
test
test
jnp
ret
je
les
xor
les
call
mov
outsl
ror
lcall
std
stos
mov
xchg
cmp
stc
ljmp
rcll
xor
sub
testb
movsl
bound
mov
mov
clc
or
scas
les
or
inc
mov
les
js
inc
xchg
sahf
xor
enter
push
ret
add
mov
imul
adc
shl
lods
shr
push
add
imul
pop
lods
adc
ror
mov
in
jle
popf
adc
mov
jnp
test
cmpsb
arpl
mov
xchg
mov
mov
xchg
imul
push
stos
fimuls
cmp
dec
xor
cmp
push
test
cmpsl
add
xchg
jbe
pop
cli
je
dec
mov
dec
arpl
sub
mov
push
mov
iret
aas
mov
mov
shr
ret
sbb
test
xchg
bound
xor
mov
lock
rorl
jne
cld
in
adc
pushf
mov
data16
mov
ds
and
jno
push
jo
outsb
rcl
ljmp
xor
sub
xchg
jge
cmp
push
pop
sahf
lea
cmp
scas
jno
popf
jno
add
jecxz
hlt
cmp
sbb
inc
and
cs
aas
or
ss
jns
pushl
das
or
sarb
dec
adc
pop
scas
adc
jmp
in
es
sbb
or
or
push
hlt
mov
or
pop
pop
xor
sub
push
pop
shll
ret
hlt
addr16
cmp
movsb
mov
scas
test
fimull
loop
insb
std
daa
lds
jg
ficoml
push
ret
inc
xor
push
add
pop
stc
inc
cld
lods
cmp
mov
std
dec
stc
es
jecxz
push
popa
push
cmp
push
les
mov
test
fnstsw
rclb
push
xor
aad
rcll
gs
xchg
mov
jns
cmc
sub
imul
daa
or
ss
sbb
xchg
pushf
in
and
std
sbb
and
push
mov
mov
sub
xor
cmpl
mov
stos
insb
stos
xchg
xchg
nop
mov
loop
push
les
mov
in
xchg
sbb
xlat
mov
loope
jb
pop
cltd
xor
divb
dec
stos
jge
cwtl
mov
aaa
outsl
mov
pop
xchg
cltd
push
imul
sub
and
jmp
mov
lahf
js
fcmovne
sub
cmpsb
aaa
les
pop
push
imul
dec
fstpl
push
push
cmp
mov
push
mov
push
and
bound
xlat
adc
pop
inc
fiadds
mov
in
das
shrb
pop
mov
push
push
nop
sbb
mov
xor
cmpsb
js
mov
sahf
push
mov
cmp
out
loopne
cmp
xchg
mov
xchg
sbb
and
and
mov
dec
xor
insb
lods
gs
fisttpl
xchg
push
sub
jg
icebp
jg
mov
pushf
insl
outsl
movsl
push
lcall
or
hlt
push
or
repz
inc
push
mov
out
outsb
inc
inc
out
add
add
repnz
out
rclb
xor
push
notl
sti
in
inc
push
je
push
int
lahf
mov
scas
call
stc
cmovne
push
stos
inc
fstl
and
sub
mov
or
insl
xchg
mov
aam
insb
mov
sbb
fdivs
cs
incb
pop
pop
add
les
ss
xchg
jle
push
dec
out
mov
xor
mov
pusha
jge
xor
imul
test
aad
jno
push
fbld
jbe
adc
cmpsl
dec
sub
dec
andl
mov
and
jno
mov
fstps
push
dec
or
mov
in
aad
sahf
inc
jnp
or
test
cmp
pop
in
out
xor
insl
mov
push
es
mov
pop
sbb
loopne
les
jnp
cs
jg
rclb
lea
mov
fldenv
stos
sbbb
adc
sbb
jnp
jmp
add
xchg
mov
outsb
stc
sub
aaa
fcoml
insl
pop
push
mov
add
lcall
addr16
andl
push
cmp
add
roll
lea
fisttpll
stc
sbb
loop
mov
mov
test
or
scas
stos
scas
or
push
sub
das
dec
xor
cmc
xchg
insb
ficompl
aas
cmpsl
mov
or
xchg
and
outsl
sahf
cmp
sahf
movsl
lods
adc
inc
fistpl
add
iret
mov
test
and
cmp
inc
dec
push
shlb
xor
inc
push
andl
inc
int
das
les
inc
and
and
cmpsl
cmp
or
nop
adcb
test
jge
inc
push
cmp
into
mov
pop
inc
imul
int3
lods
das
fbld
mov
nop
jl
cmpsl
pop
mov
sub
dec
lds
cmp
shrl
ret
test
daa
mov
fwait
arpl
mov
jmp
or
mov
mov
dec
scas
pop
hlt
lea
inc
repnz
mov
and
sub
in
frstor
and
loope
lret
adc
out
rcl
xchg
test
dec
cmp
fistl
outsb
sbb
jecxz
jecxz
and
cld
jl
dec
jge
xor
push
pop
leave
mov
xor
inc
jmp
inc
or
ds
mov
push
aam
stc
add
sbb
outsb
int
hlt
add
jg
clc
mov
repz
je
lds
sub
subb
mov
xor
dec
jbe
sbb
mov
loope
add
dec
mov
jmp
xor
ja
aad
cmpsb
push
pop
xchg
movsl
mov
or
andl
andb
mov
pop
das
insb
fildl
out
sub
into
xor
inc
aad
sbb
inc
ss
cmp
jnp
out
xor
call
mov
inc
mov
lahf
dec
je
add
xchg
fdivl
xlat
in
out
jp
dec
mov
leave
mov
out
pushl
mov
push
cmpsb
ret
shlb
popa
shrb
sbb
rcr
addr16
cmp
mov
mov
xlat
leave
or
cmp
subl
mov
xchg
pop
std
cmpsb
mov
insb
mov
pop
iret
or
les
push
pushl
xchg
push
mov
mov
push
repnz
testb
leave
call
std
lock
dec
sub
xchg
sub
inc
cmp
sbb
sti
add
mov
dec
push
nop
lds
pop
mov
inc
cmp
sbb
loopne
lcallw
and
in
sbb
roll
add
inc
popa
pusha
add
jo
loope
jl
pop
in
fists
je
aam
jmp
pop
pop
insb
popf
push
outsl
aam
bound
fiadds
ret
fucomip
hlt
pop
sbb
repz
and
pop
daa
mov
sti
loopne
push
xchg
insl
xchg
pop
push
mov
adc
xchg
insb
adc
push
decl
std
cmp
and
fsubs
mov
mov
pop
je
cmp
loope
mov
xchg
notb
aaa
sub
std
jnp
push
pop
add
dec
pop
out
mov
je
jns
int
push
lock
call
or
popa
stos
stc
and
or
lcall
inc
mov
cwtl
enter
push
scas
push
aad
sbb
sbb
call
xor
xlat
aas
lcall
xor
iret
mov
mov
ficoml
scas
dec
dec
addl
mov
shlb
inc
popa
sahf
int3
lea
jb
xor
pop
test
xor
loopne
mov
fsubr
out
sub
pop
test
dec
sbb
shrl
imul
and
pop
push
sbbl
test
movsb
xlat
and
loopne
ret
sub
test
add
fstps
rorb
sub
pusha
cwtl
scas
dec
adc
pop
sarl
pusha
leave
ret
movl
in
in
adc
clc
scas
xchg
xchg
sbb
pop
mov
add
mov
das
decb
push
ss
mov
inc
sahf
ljmp
clc
dec
dec
enter
push
scas
in
or
cmp
mov
and
xor
fldenv
mov
sub
pusha
dec
faddp
jg
adc
or
push
add
add
cmpsb
mov
in
jg
test
lods
pop
ret
jo
fistps
js
and
idiv
dec
cld
dec
add
pop
adc
in
movsl
cs
es
inc
lahf
in
mov
push
inc
scas
cmc
mov
or
mov
call
xchg
ljmp
xchg
push
adc
cmp
adc
ss
stos
bound
sub
sahf
rcrl
test
cmc
std
hlt
into
xchg
xor
aaa
lods
imul
jp
clc
push
pop
in
mov
icebp
pop
insl
sahf
push
pop
movsb
imul
ds
dec
movsl
xchg
xchg
dec
cmc
sbb
jg
int
stos
test
add
bound
cmp
push
inc
dec
fcmovbe
fstps
in
cmc
test
icebp
andb
inc
fiadds
int3
into
mov
stos
adc
and
popf
dec
push
adc
cmp
sti
xor
inc
mov
iret
lea
push
mov
xorb
inc
mov
cmp
dec
and
dec
pop
nop
lret
sbb
and
rcrl
loopew
cmpb
xchg
sub
aaa
dec
xchg
xor
lock
test
ficoml
dec
xchg
or
jno
push
mov
call
fs
push
pop
popf
test
xor
cwtl
mov
cwtl
lahf
lods
arpl
adcl
sti
mov
sbb
in
jle
movsb
and
cmp
hlt
cltd
dec
stos
and
mov
push
loope
std
pop
std
es
mov
lods
jno
push
pop
ja
dec
popf
inc
insl
pop
shlb
int3
mov
aaa
or
xor
jl
xchg
push
cmp
aas
xor
nop
dec
push
sbb
mov
pop
push
xchg
outsl
das
rcl
mov
jb
jmp
add
pop
mov
pop
mov
or
cs
idivl
xlat
sbb
xor
pop
cmpb
dec
sahf
xor
adc
jnp
hlt
xchg
std
in
cmpl
push
xor
sbb
imul
inc
mov
mov
scas
cmp
testb
pop
popf
ja
xchg
cmp
stos
and
mov
es
nop
mov
and
int3
push
ret
jle
lcall
leave
xor
sub
sahf
inc
add
sbb
shrb
mov
fcmove
lcall
xor
in
test
mov
aad
fwait
xchg
adc
shl
fs
add
xchg
xchg
inc
in
ds
pop
test
into
popf
sti
outsb
dec
xor
sbb
mov
adcl
jle
dec
inc
pop
dec
test
ja
xor
adc
xchg
and
mov
dec
xor
mov
divl
fstpt
leave
pop
xor
out
dec
daa
outsl
fldl
repz
and
cmp
fldcw
stc
jne
fisttpl
cmp
repnz
imul
repz
test
xchg
adc
inc
mov
ret
rol
sbb
loope
mov
inc
adc
cld
jmp
aaa
pop
sub
push
xchg
sub
js
mov
in
into
lock
rorl
cmpsl
insl
mov
lods
sbb
xchg
xor
out
int3
bound
imul
xchg
pop
adc
aad
outsb
adc
mov
inc
iret
in
pop
imul
xchg
addr16
call
pop
xor
inc
test
and
sub
sqrtps
ja
or
in
jl
emms
add
add
and
xchg
pop
pop
jmp
push
mov
xor
add
mov
push
dec
lods
aam
add
shll
or
mov
jecxz
xchg
out
mov
ss
cmp
dec
mov
push
mov
xchg
test
fistpl
or
cmpsl
stos
sub
mov
ret
rcrb
and
fiaddl
mov
push
push
push
mov
into
in
cmc
dec
pusha
insl
jle
jmp
inc
push
in
mov
adc
pop
mov
sub
mov
xchg
xchg
shlb
add
aad
repz
jb
out
mov
pop
sub
dec
mov
push
fsubr
rol
call
mov
stos
into
dec
mov
add
jb
sbb
cmp
stos
mov
push
pushf
or
fcoms
into
ja
pop
inc
out
inc
fnstcw
and
lods
in
or
pop
outsl
mov
imul
or
frstor
fnsave
sbb
inc
sbb
lahf
in
or
shll
xor
adc
xchg
xlat
dec
jne
mov
lds
leave
xlat
push
mov
adc
jne
lcall
push
dec
pop
inc
push
or
mov
xlat
inc
or
cld
lahf
leave
shlb
adc
adc
jmp
add
push
add
ror
lods
push
js
add
data16
mov
hlt
pop
pop
stc
enter
cmp
jno
aam
fisttps
dec
mov
mov
mov
adc
jno
inc
pop
js
and
dec
xchg
push
jg
enter
std
dec
xchg
bound
sub
mov
ficoms
and
arpl
xor
popf
in
stos
pop
xchg
or
sahf
repz
fs
cwtl
imul
jl
sbb
aaa
cmpsb
push
pop
xchg
mov
xor
insb
ret
and
bound
inc
mov
ret
aas
fmulp
aaa
xor
icebp
sbb
andl
in
decb
movsl
outsb
pop
int3
fdivrs
xchg
adc
mov
dec
cmp
mov
xchg
popf
inc
mov
adc
cmpsb
cmpsb
dec
cmp
push
mov
addr16
cmp
mov
and
mov
fsubs
arpl
adc
leave
pavgb
sub
pop
cmp
pop
mov
decb
cmpl
sbb
xor
lahf
and
int
repnz
mov
pop
movb
xchg
push
pop
fiadds
out
pop
loope
cmp
xchg
movsb
mov
sub
push
pop
shrl
jne
sbbl
push
out
add
push
sub
gs
lods
push
sbb
pop
adc
aam
div
test
mov
mov
adc
in
test
jle
sbb
inc
cmp
fimull
jns
inc
push
mov
sub
daa
fdivl
or
ss
jmp
and
fwait
cmpl
pushl
inc
adc
shlb
fwait
rcl
cmp
push
ljmp
and
jo
inc
das
push
roll
pop
test
mov
ret
pop
enter
push
imul
loop
fcmovnbe
mov
inc
repz
test
pusha
inc
pop
out
int
mov
xor
ss
add
fildll
jl
in
sti
scas
or
xchg
repnz
icebp
xchg
jg
xchg
xchg
in
test
mov
lret
jmp
test
pusha
adc
shll
cmp
enter
sbb
mov
add
cmpsb
cmpl
lahf
xchg
mov
in
pushf
rolb
add
jp
stos
xor
insb
inc
subl
jmp
cmp
lahf
mov
leave
out
cld
repnz
mov
jecxz
roll
mov
std
inc
cmpsb
lret
shrb
jl,pt
and
mov
add
stos
pop
mov
dec
mov
jecxz
out
clc
push
cltd
loop
mov
out
icebp
scas
data16
jp
and
cmp
dec
test
ds
stc
stos
cmpsb
push
xchg
dec
or
idiv
mov
lret
pop
lods
cmp
xchg
aad
out
sbb
aaa
sbb
lods
mov
movsl
add
push
int3
lds
cmc
mov
jnp
cmpsl
icebp
xchg
or
imul
std
push
inc
mov
dec
das
es
inc
or
sub
pop
inc
pop
inc
lret
inc
add
in
add
int
divb
pop
adc
in
fimuls
cmp
jo
jl
bsr
pop
mov
insl
mov
mov
mov
mov
or
jg
fs
idivl
lret
push
mov
mov
or
cmp
add
ret
sahf
test
and
xlat
or
adc
stos
xorb
rclb
scas
mov
mov
bound
mov
ds
out
mov
out
incl
cmpsl
or
sbb
jae
ss
cmc
mov
test
inc
xchg
pop
xchg
mov
sub
jp
test
xchg
or
int
jge
aaa
jp
push
addb
negb
outsl
jg
jl
mov
sbb
add
jns
idivl
inc
push
mov
repnz
das
outsb
shl
jmp
andb
enter
xchg
push
add
mov
push
fucomip
out
ljmp
push
out
push
sub
scas
aam
orl
adc
jnp
inc
xor
pop
mov
pop
les
sahf
mov
mov
push
ss
and
pushf
adc
lret
cmp
fisttps
rcrb
jmp
sub
repnz
fnstsw
xchg
adc
cld
pop
jmp
push
repz
pop
insb
and
neg
mov
cs
adc
dec
push
scas
pop
les
and
inc
in
cmc
scas
jno
insl
sbb
cmc
mov
cmp
cld
and
rol
hlt
out
repz
std
pop
loope
mov
push
das
cmp
inc
and
add
ljmp
pushf
mov
sub
lods
jecxz
and
inc
cmp
adc
repnz
add
jmp
xor
jp
mov
pop
icebp
push
popa
aaa
mov
mov
jne
and
adc
jbe
cmpsb
ds
and
add
inc
push
push
sahf
lds
pushf
adc
int3
jmp
mov
mov
sbb
bnd
sub
imul
inc
js
call
sub
lods
xchg
enter
filds
int
jno
mov
cmc
popf
push
addr16
xchg
mov
or
xor
and
clts
jo
js
xor
dec
jge
addr16
push
iret
sub
and
sbb
sub
cltd
jne
fsubs
in
test
psllq
dec
out
mov
in
int
cmp
adc
enter
std
fdivs
lret
repnz
jnp
mov
xlat
lahf
or
pop
push
jbe
mov
fs
mov
arpl
imul
cltd
scas
xor
dec
mov
sbb
dec
mov
lock
fidivl
push
enter
stc
jmp
inc
sub
dec
imul
sub
mov
cmp
aaa
cli
aas
aaa
cmp
pusha
cwtl
dec
aaa
push
dec
orl
inc
jg
fwait
or
lods
cmp
je
cmpsb
lahf
xlat
pushf
out
ret
mov
lods
aaa
das
repnz
ret
jecxz
lods
adc
mov
sbb
loope
call
fisubrl
and
xor
dec
fwait
ret
lods
jns
mov
xchg
add
push
or
rol
stos
aam
cmp
ljmp
mov
xchg
cmp
xchg
insb
mov
outsb
sub
mov
inc
inc
imul
push
shll
add
inc
mov
pop
xchg
std
nop
cli
out
cmpl
mov
sbbl
adc
fildl
das
push
sub
lods
adc
daa
pop
sub
xchg
imul
ret
lea
loopne
sbb
shrb
sbb
popa
ret
outsl
mov
mov
xor
xlat
pop
ja
adc
loopne
sub
lods
mov
sbb
mov
in
negb
jb
xor
pop
sub
aaa
or
mov
push
push
scas
loope
sub
jne
pusha
or
sbb
addl
fmuls
lea
lahf
pusha
or
mov
out
mov
aas
dec
out
enter
pop
lods
push
lods
xchg
cltd
mov
rcl
or
dec
pop
jbe
sbb
xchg
jnp
sub
mov
sbb
jg
shlb
arpl
add
std
cli
jl
shrd
mov
in
xchg
lods
sub
jp
movsl
fs
gs
gs
sub
sub
jno
rclb
andl
add
xchg
add
sbb
and
arpl
iret
push
sub
pop
pop
add
ja
sub
cmp
sub
cmp
ljmp
loope
push
mov
mov
xchg
jl
mov
int
lahf
cmpsb
xor
cmp
adc
push
xchg
lret
jns
cs
add
jnp
mov
adc
push
sti
cwtl
xchg
ljmp
lods
fs
dec
shrb
call
shlb
and
xchg
add
fcoms
xchg
fists
rcr
xor
cmp
and
fyl2x
jnp
popa
shll
das
and
pop
divb
jg
xchg
loop
and
push
sti
dec
cli
mov
cmp
xchg
fcompl
mov
aaa
cmc
dec
test
add
and
into
out
repz
nop
in
mov
cmp
cmpsl
push
mov
mov
out
adc
and
mov
mov
inc
out
xchg
js
mov
or
add
clc
int
ret
mov
movl
sbb
inc
jne
idivb
dec
setg
dec
inc
xor
movsb
cmc
jo
addr16
lahf
lock
stos
push
jmp
inc
popa
xor
andl
pop
sarb
movsb
shrl
js
testl
xor
jne
jbe
scas
std
cltd
mov
repnz
cmp
add
cld
pop
lock
les
sarl
mov
fnsave
or
pop
testb
inc
push
mov
popf
mov
jbe
test
negl
testb
and
xor
pop
ficomps
ret
sub
push
push
je
xchg
dec
lcall
scas
fs
lods
adc
or
mov
and
sbb
ret
jle
into
shll
sbb
mov
test
push
movsb
in
das
sub
loope
scas
in
or
and
jne
dec
fwait
mov
ret
push
push
mov
xchg
cmpsl
push
rolb
stos
adc
scas
ljmp
xor
adc
push
jo
inc
lcall
dec
mov
mov
cmpsl
push
nop
icebp
jl
or
sbb
imul
sub
push
inc
je
movsb
insb
push
stc
lcall
inc
and
sbb
sub
cmpsl
icebp
das
or
aad
adc
mov
repnz
mov
mov
scas
lahf
sbb
jmp
bnd
decb
lret
lods
mov
dec
fdivs
and
dec
addl
mov
insl
xlat
sub
cmpsl
mov
sub
daa
dec
xchg
push
shr
loopne
pop
push
nop
sbb
push
dec
pusha
xchg
iret
sahf
data16
stos
in
pushf
popf
repnz
pop
sub
mov
imulb
push
push
in
popl
pushf
mov
jle
dec
mov
call
xchg
pop
mov
jle
and
bound
mov
scas
iret
frstor
xchg
mov
adc
cmpsl
mov
enter
mov
jbe
adc
imull
xchg
xlat
jne
mov
divb
pop
push
movsb
mov
aas
into
pop
mov
adc
ljmp
dec
cmp
out
jo
loope
and
fs
jg
adc
lds
sarl
jge
out
cs
mov
loope
cmp
mov
jmp
xchg
in
rol
jae
xchg
mov
cmpsb
insb
jno
mov
jle
xor
sbb
add
mov
enter
ret
sub
cmp
jmp
mov
ja
dec
add
xchg
ja
or
daa
loop
mov
push
or
sub
loope
cmp
pop
add
xor
mov
xor
outsb
insb
pop
sbb
push
pop
mov
ljmp
dec
repz
sbb
cmp
lcallw
inc
mov
aad
cmp
popf
cmp
mov
pop
push
rcll
sbb
rorl
mov
cmp
mov
xchg
aam
mov
ret
cwtl
xor
addr16
jno
jne
pop
add
dec
lods
push
pushf
movsb
ljmp
jne
stos
cmpsb
mov
ljmp
push
mov
inc
roll
ljmp
xchg
xchg
or
jl
xlat
pop
movsb
clc
mov
mov
push
and
cltd
daa
pop
sbb
loop
add
lods
jmp
mov
jb
pop
inc
ljmp
imul
cmp
dec
call
bound
outsl
push
sub
fisubl
jno
pop
inc
jno
sbb
push
ds
ds
and
shrl
in
js
outsl
push
enter
stc
or
ret
sti
lods
fldcw
cmpsl
out
xchg
test
and
fisttps
jne
gs
adc
stos
lods
xor
cld
pop
xor
rolb
pop
mov
movsb
mov
jecxz
cmpsl
mov
ja
fnstenv
sub
pop
andl
adc
aas
loop
sbb
insl
mov
incl
pop
xchg
inc
stos
push
out
lea
les
pop
jle
fs
inc
jl
imul
sub
fdivl
scas
insl
and
rcll
dec
mov
and
jecxz
push
dec
jns
icebp
aaa
jno
xchg
std
sub
mov
cmp
lock
mov
ss
mov
or
xchg
int3
pop
shll
xchg
arpl
movsl
ja
lret
xor
loopne
mul
lods
xor
cwtl
or
lods
sbb
push
stos
dec
shl
lahf
enter
xor
loope
cltd
lcall
dec
shll
pop
pop
cltd
arpl
dec
mov
mov
sbb
ds
xchg
and
xchg
out
in
pop
fisubl
lahf
stos
adc
gs
jl
sub
in
dec
sub
aaa
scas
lea
dec
sub
adc
mov
xor
aad
arpl
jle
mov
ss
std
dec
mov
call
lea
mov
out
mov
mov
out
lret
ror
jne
mov
sbb
or
mov
push
adc
pop
sbb
cmp
xor
repz
stc
rorl
lcall
rolb
adc
nop
fucom
aad
mov
sub
pop
pop
sbb
jns
pop
pushw
add
mov
and
push
and
sub
or
lret
out
pop
xor
call
rcr
outsl
ljmp
aas
mov
and
stc
adc
push
mov
cmpsl
sub
testb
pop
mov
inc
and
jecxz
fstl
roll
or
shll
jns
loop
adc
lcall
mov
adc
mov
mov
add
cmpsb
push
xchg
pushf
adc
xor
je
and
push
add
nop
xchg
mov
push
out
lret
repz
scas
sbb
or
in
shll
out
xor
pushf
arpl
fs
cld
lds
loopne
cmc
and
in
sbb
loope
push
mov
mov
ficoml
scas
out
shl
or
xchg
in
sbb
sbb
rcll
xchg
add
jb
push
pusha
cmp
cli
and
repz
out
xor
add
in
shr
and
cli
or
sbb
ljmp
cwtl
and
into
aas
inc
or
xor
les
sti
outsb
add
mov
repz
push
out
and
jg
int3
out
je
nop
jg
leave
cmpsl
rorb
and
cmpsb
mov
iret
push
out
inc
fsubl
sbb
je
test
lods
roll
mov
pop
fidivrs
mov
fnstsw
xor
add
push
lret
cld
rcpps
clc
mov
or
mov
lock
dec
inc
mov
lds
js
cmp
inc
dec
inc
movl
cmpsl
in
mov
pop
pop
add
je
stos
dec
dec
xchg
movsb
lcall
clc
or
inc
dec
inc
xchg
jmp
pop
shll
dec
rorb
and
les
es
xor
test
ss
add
test
lods
in
mov
jp
inc
rolb
clc
test
lahf
shrb
mov
xor
or
sbb
sbb
mov
fwait
inc
ret
popf
or
in
cmp
mov
and
add
jo
sbb
fs
jl
mov
cmp
dec
aaa
daa
jp
mov
enter
lret
add
jl
sub
xchg
mov
imull
mov
imul
orl
push
sbb
es
mov
mov
pop
and
incl
out
cmp
sbb
ficomps
aad
idiv
jge
ljmp
sub
sti
dec
mov
dec
push
add
cmp
dec
mov
in
adc
orl
adc
or
jne
xor
test
iret
cmp
add
dec
loopne
stos
scas
push
push
adc
ret
push
hlt
imul
inc
les
xchg
loop
popf
pop
mov
xchg
pop
dec
dec
shll
outsb
dec
push
xchg
sbb
mov
cld
in
jbe
das
data16
lcall
pushl
sub
xchg
fwait
xor
lods
jl
aaa
in
push
xor
aad
add
in
aad
cmp
push
rcrl
add
sub
jbe
lret
fwait
es
test
fcompl
ja
mov
iret
pop
push
push
dec
scas
fs
cwtl
adc
xchg
xor
push
sahf
fdivrp
sarl
fwait
movsl
nop
bound
jmp
sahf
adc
xchg
add
mov
cs
stos
aaa
mov
xor
bound
or
lret
fwait
pop
xorl
shl
ret
movsl
scas
test
sti
inc
orl
push
imul
mov
adc
pop
repz
cmpl
lret
hlt
pusha
xor
cli
lea
repz
insb
jne
pop
repnz
in
xor
cli
xchg
out
add
lahf
adc
std
cmpb
sti
rcr
out
fwait
sub
inc
and
stos
push
test
movmskps
adc
xchg
hlt
xchg
push
out
aas
cltd
arpl
out
jmp
jle
sbb
lret
or
lret
or
push
in
adc
cmpsb
incl
xor
test
and
pop
stc
xor
aam
dec
mov
xlat
inc
cmp
in
push
add
cld
into
movsl
fbld
adc
mov
xchg
push
lea
nop
adc
mov
cmp
jp
pop
sub
iret
cmp
inc
cmp
mov
pop
sub
mov
sbb
xchg
sub
shrl
adc
sub
aad
mov
popf
add
push
mov
shlb
pop
or
pop
pop
mov
out
pop
pushf
xchg
cmp
daa
cmc
insb
xchg
lret
pop
enter
or
sub
pop
jg
xlat
pop
push
cld
pop
ret
lods
mov
std
call
in
shl
sarl
addr16
add
mov
stos
and
mov
jno
mul
xor
xor
mov
fxch
mov
dec
cmpsb
xchg
rcl
leave
in
inc
push
pop
xor
add
insl
cwtl
jmp
ja
dec
fcmove
mov
pop
movsl
push
add
or
dec
mov
mov
mov
inc
dec
mov
add
mov
enter
dec
bound
jmp
out
xor
mov
sahf
clc
je
scas
jle
out
mov
vpcmpeqw
stos
nop
int
orb
out
je
daa
lods
loop
test
out
data16
inc
jb
jmp
jle
mov
fucomip
pop
mov
xor
sahf
push
mov
jo
out
stc
leave
xchg
adc
push
inc
xchg
xchg
in
xor
cld
loop
mov
sbb
sarb
xchg
sub
xor
mov
mov
pop
shlb
xor
in
fdivrl
and
jne
ss
mov
imul
mov
sub
pop
pop
shrb
scas
jno
jg
out
ss
call
int
xor
mov
mov
jo
push
mov
ja
xor
popf
mov
shll
and
fsub
pcmpeqd
scas
mov
add
jbe
jns
sbbb
ret
in
jecxz
adc
mov
mov
rorb
fcompl
add
jae
dec
pop
push
cmp
push
xor
popf
jp
cmpsb
aad
test
mov
push
push
or
pop
cs
test
imul
orb
insl
push
xlat
cli
push
jge
pop
xchg
popa
out
and
fdivrs
xchg
lret
dec
inc
xchg
sub
outsl
mov
mov
stc
enter
xchg
add
insb
repz
sub
enter
gs
push
push
sbb
cld
popf
je
dec
push
sub
test
xor
orb
add
lret
insb
lea
stos
mov
add
xor
shlb
and
daa
cmp
int3
fcoms
lret
xlat
pop
pop
gs
cmpsb
add
test
xchg
mov
pushl
xchg
xor
inc
push
hlt
aaa
sbb
mov
test
jbe
js
push
hlt
enter
xchg
xchg
and
sarb
mov
mov
and
sbb
sbb
fcomp
out
rcrl
inc
repnz
insb
sahf
int
in
cld
jge
bnd
orl
push
pop
or
mov
cld
inc
cmp
sbb
jmp
sbb
dec
loop
jno
add
dec
lock
sub
lret
pushf
int3
test
mov
mov
sbbb
repnz
sub
sbb
push
loopne
pushl
pop
arpl
sbb
sbb
jge
or
aam
rcrb
push
xchg
scas
pop
add
jb
ret
subb
jbe
mov
sub
mov
fmuls
mov
loopne
jne
cld
push
in
lock
in
xchg
sub
movb
or
mov
inc
orb
push
ljmp
data16
addr16
movsl
imul
jg
das
xchg
lods
xchg
das
add
jo
jne
mov
pop
sbb
xorl
push
push
stos
outsb
test
mov
imul
adc
fdivs
out
pushf
jno
mov
sbb
xor
je
xor
cmp
and
mov
mov
iret
cmp
es
shlb
sub
adc
mov
sbb
test
test
imul
mov
inc
dec
dec
and
in
mov
sub
js
sbb
cmpsb
pop
test
pop
xchg
arpl
dec
pop
add
je
rorb
sbb
dec
mov
push
out
and
lret
xor
and
adc
push
jbe
or
loop
stc
cs
das
ret
mov
aas
mov
fisubl
iret
xlat
pop
mov
pop
lahf
dec
scas
ja
hlt
repnz
arpl
ds
andb
inc
andb
dec
xchg
scas
movsb
rorb
xchg
jne
cwtl
jg
xchg
and
cmp
mov
pushf
data16
mulb
aas
repnz
aaa
sti
or
inc
loope
push
push
stos
pop
sarl
into
aaa
add
cmp
adc
xor
popf
pop
mov
stos
inc
outsb
or
xor
jnp
cmp
insb
stos
xchg
lea
pop
pop
ss
ljmp
aas
push
adc
xchg
mov
popa
aaa
add
sbb
fisttps
nop
daa
adc
sahf
xor
jecxz
pop
push
xadd
movsl
fcomi
mov
inc
xchg
movsb
cltd
iret
mov
push
pushf
pop
pushl
or
popf
in
jae
jb
jo
frstor
insl
cwtl
mov
sub
pop
xlat
loop,pn
mov
push
mov
add
pop
dec
lret
out
repz
aaa
fdivrs
sbb
movsl
orb
or
and
xor
pushf
inc
xchg
pop
xchg
lock
rolb
fwait
inc
add
lods
xchg
sti
sbb
cs
fnstsw
inc
dec
into
pop
jl
jg
xchg
push
xor
sub
popa
lret
sahf
shrl
pop
shrl
nop
sbb
jg
inc
popf
fldl
cmpsb
pushf
mov
mov
test
mov
sbb
xchg
rcl
lods
fmull
enter
add
sbb
xchg
movb
in
pop
sub
out
insb
nop
sbb
shlb
popa
xor
adc
xorb
insl
push
pop
lds
dec
icebp
pop
jmp
mov
sbb
push
mov
or
outsb
adc
aam
push
scas
popf
and
adc
pop
or
call
jne
sbb
lds
sbbl
mov
out
out
xchg
test
adc
sub
add
xor
fwait
iret
adcb
pop
push
mov
adc
and
mov
lahf
sbbb
push
pop
inc
xor
cmp
orb
enter
xchg
sbb
xchg
sub
mov
popf
cmp
and
jmp
mov
das
sub
lahf
xchg
jo
test
lods
xor
iret
movsb
xchg
fimuls
lcall
push
push
lahf
in
leave
push
or
lret
push
roll
adc
pop
mov
lret
fadd
sahf
dec
outsb
pop
or
xchg
insb
jb
ss
sti
mov
lods
hlt
mov
mov
lcall
add
out
pop
fsubs
pop
mov
adc
addb
lahf
inc
lods
cmp
mov
out
push
add
cli
sbb
pop
push
xchg
or
mov
dec
add
hlt
out
orb
mov
and
repnz
outsb
and
mov
lcall
lahf
cltd
push
xor
dec
subl
mov
sbb
push
pop
xlat
fmuls
dec
ds
pop
lahf
pop
movsl
sbb
push
jecxz
fildl
mov
and
add
or
js
xchg
xor
mov
cmp
test
or
mov
out
aad
in
sbb
addl
xor
mov
flds
dec
sbb
sub
mov
jg
xor
fadds
push
stc
cmp
lret
std
inc
push
sbb
lods
mov
add
sahf
mov
or
ret
mov
inc
sti
sbb
pop
shl
loop
mov
outsb
mov
xor
arpl
dec
lret
into
mov
sbb
loopne
mov
test
shrl
enter
pop
mov
xchg
int3
or
add
lret
mov
sub
xor
jmp
xor
dec
insb
loop
pushf
leave
js
add
or
ret
sub
mov
jmp
xor
leave
and
fwait
sti
adc
cmp
stos
scas
pop
ljmp
and
mov
imul
jo
mov
push
xor
repz
mov
out
mov
sahf
int
enter
adc
jns
or
fnsave
rolb
inc
int3
shrl
repnz
xchg
decl
push
xor
decb
push
mov
adc
fs
orl
fs
xchg
xchg
or
lods
jb
and
adc
add
sbb
jl
les
aad
sub
scas
adc
addr16
aas
fcoml
cmp
inc
fs
mov
push
sbb
scas
in
gs
movsl
dec
push
mov
dec
sbb
mov
imul
cwtl
fwait
cmp
lret
adc
pop
cli
push
xor
movsl
sbb
fistpll
les
pusha
xor
mov
pop
lock
stc
pop
and
insb
leave
sti
cmpsl
into
es
cmp
cmpsb
dec
stos
jge
insl
push
rcrb
jl
stc
inc
cli
inc
xchg
sub
sbb
jnp
fidivrl
in
jnp
lea
ja
xor
je
and
adc
pop
loope
xchg
or
sbb
cmpsl
aas
subl
stos
movsl
clc
mov
sbb
aaa
hlt
dec
imul
std
xlat
cmpsl
inc
repz
or
icebp
dec
hlt
js
aam
adc
mov
popa
add
xor
add
outsb
mov
fimull
inc
cmp
xchg
dec
push
stos
int
add
dec
test
cli
jg
addr16
sub
xor
enter
jl
ljmp
sahf
mov
test
iret
xchg
xchg
pop
or
mov
js
orl
out
ljmp
xchg
xchg
push
mov
inc
lea
loop
fcomps
pushf
adc
mov
fisubl
int3
clc
imul
pop
mov
dec
std
xor
rclb
leave
or
push
inc
scas
sti
ljmp
scas
pop
xor
jmp
sbb
push
pop
jbe
cmp
outsb
imul
sub
scas
rclb
dec
jecxz
mov
pop
lods
mov
dec
sub
dec
pop
movsb
inc
clc
mov
adc
pop
mov
xor
aas
mov
int
jb,pt
push
jp
out
pop
test
jl
stos
xchg
xchg
push
jmp
mov
dec
das
adc
xor
sub
jle
push
imul
pop
insb
mov
cmp
cli
dec
out
mov
movsb
inc
adc
push
jbe
cli
dec
fcomi
or
lock
arpl
xchg
push
xchg
or
inc
pop
jl
in
mov
lcall
mov
sub
sub
xchg
inc
int3
xchg
push
pop
mov
lcall
sarl
add
mov
or
sahf
cli
pop
pop
ret
sti
xchg
jns
ss
rol
jae
in
enter
and
lret
xor
xor
cmp
fmuls
das
ds
aam
fwait
movsl
jo
leave
add
cmp
xchg
sbbl
out
xchg
int3
icebp
insb
decl
xlat
lret
mov
outsb
add
and
in
gs
push
mov
mov
in
push
dec
into
mov
cmp
into
pop
hlt
in
dec
inc
shlb
rcrl
mov
push
sbb
jnp
cmpsl
scas
mov
mov
shll
or
iret
sbb
test
push
lds
xchg
pop
leave
xchg
jnp
adcb
sbbl
add
sbb
or
dec
icebp
mov
mov
repz
cmp
adc
mov
and
mov
vmptrst
outsb
dec
xor
es
icebp
sbb
outsb
in
pop
fisttpll
stos
int
nop
in
out
lods
pushf
sub
add
pushf
push
idivl
fisubrl
lds
lods
in
ds
iret
imull
pop
and
call
and
xor
rolb
hlt
dec
insl
fnstsw
lcall
mov
mov
out
inc
push
in
mov
cmp
aas
repz
cmp
push
pop
js
mov
leave
rcr
add
fcoml
dec
rcrb
cwtl
stc
pop
xchg
sar
mov
test
fisubrl
push
int
cli
pop
cmpsl
testb
test
push
mov
add
aas
ds
pop
mov
shlb
push
push
fs
or
xlat
subb
mov
or
mov
push
push
mov
dec
inc
sti
mov
insb
fcmovu
mov
push
cmpsl
stos
cli
aaa
fwait
inc
or
pop
fsubl
cld
and
jle
insb
mov
clc
pop
aaa
gs
into
aas
lods
pop
es
iret
out
int3
sub
pop
pop
ficoms
mov
and
std
fcoms
inc
or
mov
sub
add
scas
and
fcom
in
in
sub
in
ja
dec
push
jecxz
inc
mov
in
test
cmpsb
arpl
loopne
mov
scas
or
sti
int3
cs
imul
jp
subb
adc
push
mov
dec
pop
jnp
sahf
push
cmpsb
mov
pop
jbe
stos
xor
mov
inc
stos
fucomp
xchg
and
sub
cld
jbe
ret
push
jecxz
inc
mov
push
in
add
sbb
inc
test
outsl
jg
push
mov
jne
nop
mov
aad
jmp
mov
add
mov
lcall
cld
adc
ja
jmp
nop
adc
push
push
sbb
xor
scas
sub
mov
mov
mov
imul
xchg
xchg
push
mov
mov
mov
and
push
aas
dec
cmp
xchg
cmp
iret
mov
arpl
addb
stc
lahf
or
pop
add
sbb
and
and
cmp
movsl
lret
lahf
out
cmpsl
jo
adcl
sub
pop
loop
ret
inc
add
aad
add
xor
lahf
daa
mov
lret
push
inc
cmp
xchg
jmp
rcrb
rcrb
push
mov
nop
and
mov
insl
test
mov
in
out
mov
xchg
push
call
ret
ret
out
cwtl
dec
xchg
loopne
nop
jle
test
lret
hlt
add
das
out
scas
mov
cmp
xchg
adc
loope
ret
in
std
and
stos
mov
std
sub
mov
sub
ret
test
ror
test
mov
pop
scas
in
fwait
clc
jnp
and
pop
popa
add
dec
notb
loop
xchg
or
mov
add
sub
shlb
aad
xor
cmp
mov
sbb
rorl
push
into
xor
aas
repnz
jns
pop
or
mov
aas
or
test
jmp
adc
out
dec
xchg
mov
fisubrl
jo
fcoml
xchg
mov
loop
mov
repz
imul
add
sbb
jge
mov
and
ret
cmp
fstps
dec
fists
movsb
cmp
inc
loopne
add
add
pop
push
scas
and
mov
sbb
fcompl
pop
bound
arpl
push
push
loopne
or
cwtl
pop
inc
in
pusha
in
scas
or
or
sbb
inc
das
cmp
sub
dec
lret
popf
fwait
push
mov
add
nop
or
mov
cli
sarb
cmp
inc
xor
pop
cli
jb
adc
push
pop
mov
and
dec
ja
and
not
test
fistpl
add
idivl
and
dec
test
mov
cmc
test
pusha
inc
lcall
xor
or
cmc
mov
or
mov
imul
pop
sub
push
icebp
adc
sub
fiadds
push
or
movsl
arpl
pop
xlat
mov
imul
das
outsl
mov
enter
push
mov
int3
loopne
push
xchg
sbb
mov
pushf
fcoml
pop
vmovdqa
push
imul
fcomi
in
lock
icebp
out
adc
and
xorb
dec
pop
aam
sbb
js
movb
jb
mov
aas
movsl
xchg
outsb
cmp
inc
jmp
pop
outsl
ljmp
in
out
or
adc
push
jbe
add
xchg
mov
cmp
sbb
push
dec
lds
cwtl
ja
adc
sbb
dec
mov
repnz
idivb
mov
lahf
or
aad
popf
or
imul
or
adc
loope
int3
pop
inc
loopne
add
cli
ss
and
rolb
push
sub
push
pop
push
hlt
xchg
lds
cmp
or
call
lods
popa
dec
sbb
jge
sub
add
xor
jle
fmuls
mov
mov
ljmp
fistl
lret
sti
fcmovne
cwtl
pop
or
inc
loop
sbb
pop
xchg
mov
push
dec
dec
ret
jmp
repz
push
sub
pushf
popf
les
lods
out
cs
add
and
mov
xor
pop
and
sbb
movsl
fs
sbb
ss
in
and
jge
cmc
mov
mov
xor
xor
js
pop
daa
adc
xlat
out
cli
in
sub
mov
mov
rcl
pop
ljmp
fsubr
push
xchg
sub
mov
xchg
cs
movsb
mov
iret
dec
mov
dec
cs
fisttpll
ds
imul
cmp
out
std
out
dec
sbb
dec
out
and
cmc
sbb
cmpsb
sub
xlat
loopne
clc
sub
xor
lods
jns
or
jno
and
sahf
jno
and
aaa
aad
jecxz
mov
adcb
pop
fs
pop
arpl
jno
adc
test
lea
clts
adc
mov
inc
je
sub
push
data16
repz
cmp
outsb
adc
pop
out
push
mov
in
gs
stos
add
push
nop
jbe
or
or
xchg
sub
das
scas
dec
and
gs
adc
cmp
pop
test
fsts
add
mov
das
mov
fnstcw
jecxz
jo
addl
dec
out
into
popf
pop
xchg
jecxz
push
movl
or
mov
and
xchg
mov
jbe
cmpsb
cmpsl
jg
sbb
push
imul
or
and
or
and
xchg
adc
je
cmp
out
std
cmp
fidivs
xorl
pusha
pop
xor
jb
sub
mov
add
jnp
mov
mov
inc
and
stos
inc
addr16
adc
jno
push
popa
fnstsw
lods
dec
mov
push
movsb
or
mov
cmc
cmpb
xor
mov
pop
cmp
rcl
test
hlt
mov
jp
inc
ja
fstl
push
mov
call
sub
les
mov
adc
add
cwtl
aad
cmpsl
or
loopne
sub
lret
dec
or
and
cmc
out
ss
addr16
pop
dec
sbb
repz
mov
pop
sub
mov
out
xor
jge
test
xchg
lret
xchg
imul
mov
aad
mov
fldcw
sbb
add
scas
xor
les
lret
dec
and
in
sbb
pop
pop
outsb
mov
jp
cmpb
test
pop
aad
mov
test
pop
out
ret
pop
mov
and
jo
movsl
cltd
jge
pop
sub
or
shrb
xor
nopl
dec
adc
repz
dec
daa
lods
pop
fidivrl
add
out
rol
shlb
push
sbb
out
push
mov
roll
rol
shlb
in
mov
dec
push
fwait
mov
lret
sub
xor
fldt
lcall
lea
jle
cld
call
out
shlb
xchg
je
or
filds
adc
inc
mov
cmp
sbb
lret
pop
sbb
jecxz
pop
mov
pop
es
mov
push
adc
leave
mov
mov
in
aad
xor
insl
jbe
insb
jmp
test
lcall
int
ret
mov
sbb
cli
mov
jle
mov
scas
xor
sub
scas
lods
lahf
xchg
mull
stos
pop
popa
inc
dec
mov
inc
add
stc
rolb
cwtl
mov
test
push
inc
jp
xlat
fisubrs
lds
push
cli
push
test
insb
sub
mov
nop
popa
cmpsl
cmp
sarb
pusha
sbb
push
inc
je
sti
fsub
xor
pop
outsl
pusha
nop
popf
fwait
bnd
jnp
movsb
sbb
pop
or
idivb
enter
cmpsl
ror
mov
pop
sub
push
aam
jae
inc
das
adc
leave
repnz
ret
mov
sub
jp
mov
add
hlt
jo
movl
adcb
inc
sub
jbe
rcrb
test
mov
enter
scas
je
nop
out
jne
xchg
incl
push
and
xchg
jg
fwait
jne
insb
lea
push
cmp
xchg
sarl
sbb
mov
or
data16
in
mov
and
mov
adc
loope
xchg
adc
loopne
jle
jge
mov
inc
stos
jno
dec
int3
cmp
flds
inc
es
sub
addr16
adc
add
dec
and
jbe
ficomps
cwtl
mov
and
rcl
jmp
cmp
fnsave
sbb
jle
out
int3
aam
xchg
or
and
or
mov
adc
aaa
int
jecxz
add
pop
add
aas
mov
xor
pop
dec
pop
outsl
orb
mov
xchg
pop
test
stos
xchg
jne
or
and
test
nop
mov
cmp
push
fdivl
jo
rorl
mov
mov
mov
xchg
push
pop
mov
mov
mov
xor
jnp
mov
inc
sti
testb
in
adc
popa
or
mov
leave
mov
cmc
jnp
jne
mov
pop
lods
cmp
repz
test
pop
cltd
pushf
dec
jbe
sbb
mov
inc
test
mov
jmp
stos
dec
jecxz
scas
out
cmp
pmuludq
adc
lods
lock
arpl
dec
stc
mov
and
ret
jecxz
and
sbb
fcomi
in
hlt
pop
cmpsb
fistpl
mov
sub
add
pop
mov
rorb
or
or
mov
dec
lret
sub
xchg
icebp
sahf
fidivrs
sub
inc
lods
mov
inc
in
mov
gs
mov
in
dec
int3
sub
jo
mov
cmp
or
lret
fadds
mov
bound
jnp
jg
mov
sti
cmp
arpl
ss
push
hlt
js
mov
push
rolb
enter
xor
jns
add
inc
out
adc
sub
push
aad
in
cmp
imul
test
jno
in
cmp
aad
ljmp
pop
mov
adc
stos
ds
mov
sbb
je
inc
subb
adc
add
dec
add
inc
in
sub
mov
fld
jns
pop
testl
adc
mov
jne
hlt
icebp
dec
cld
jno
frstor
shrl
xchg
sub
lods
fadd
mov
jns
cmp
mov
dec
outsb
lahf
aaa
add
inc
iret
pushf
inc
outsb
push
xchg
dec
xor
xchg
arpl
xor
and
push
call
ficomps
lea
hlt
cmpsb
inc
out
mov
xor
hlt
xor
push
push
rcl
xchg
mov
daa
or
cmp
lods
imul
or
mov
js
mov
jbe
push
sbb
and
nop
mov
inc
mov
out
jle
sbb
jns
xlat
and
gs
fcmovu
cmp
out
popa
fwait
push
stos
lret
out
jmp
jb
and
xchg
dec
xchg
xor
sarb
je
ja
or
jne
lds
cmp
xchg
pop
or
xlat
and
arpl
sti
or
cmp
lods
sub
fists
stc
fwait
sarb
test
mov
pop
jp
test
test
mov
jne
inc
hlt
mov
or
insb
out
cltd
shl
add
jl
imul
dec
xchg
movsb
popa
push
adc
jne
test
fs
xlat
push
push
push
pop
xor
lret
jbe
leave
mov
call
jno
dec
pop
mov
sbbl
scas
sbb
test
mov
or
andl
xchg
pop
adc
pop
test
add
test
call
jae
xchg
or
and
inc
xchg
cli
mov
aam
jns
imul
jp
and
cmp
jg
xchg
incl
mov
ds
mov
pop
fsubrl
adc
push
daa
loope
das
iret
inc
xor
insb
and
cmp
insl
nop
push
je
add
push
insb
call
cmp
out
cmp
out
push
push
pop
ss
shrl
fdivr
mov
inc
js
mov
cmpsl
mov
stos
xor
push
in
fildl
push
test
xchg
fiaddl
push
cmp
icebp
jbe
sub
mov
inc
push
sbb
push
pop
in
test
inc
cmp
imul
inc
in
jbe
xlat
testb
mov
fdivl
sbb
jae
or
push
outsl
loopne
xchg
jbe
pushf
stc
aam
jno
jnp
push
jmp
addb
ljmp
ret
and
and
das
adc
test
pushf
ja
mov
jmp
fucomi
lods
cmp
imul
sub
fnstenv
adc
pusha
jg
frstor
movsl
xchg
insl
in
ss
mov
jmp
push
stos
test
pop
push
dec
fists
inc
push
pusha
dec
repz
pop
or
add
pop
jle
insl
fsubrs
lret
or
add
and
push
dec
test
mov
push
mov
or
xchg
adc
pop
jge
sub
lock
dec
xor
andl
cwtl
jae
xlat
push
cs
or
mov
hlt
dec
xor
out
out
lret
lea
sub
inc
jge
add
ja
adc
jnp
and
out
xchg
adc
mov
imul
pop
sbb
and
xor
stos
dec
adc
lret
mov
inc
push
stc
lock
sbb
mov
mov
mov
lcall
cmp
mov
pop
rorb
and
idiv
daa
data16
pop
fmuls
or
and
lds
sbb
dec
leave
xor
jmp
scas
imul
jge
xor
pusha
mov
pop
or
stc
mov
cmpsl
insb
lcall
test
mov
out
fs
enter
inc
and
outsb
rolb
inc
adc
xor
or
and
xchg
ljmp
sahf
mov
sbb
mov
movsb
das
pop
lods
or
movsb
and
push
jge
in
mov
out
das
movsb
sub
xor
je
mov
ret
fimull
scas
ss
jg
xchg
xchg
dec
nop
test
bound
or
xor
sti
lock
addb
sub
add
inc
sub
pop
push
sti
jne
dec
mov
aas
outsl
lcall
je
add
sti
fwait
xor
sbb
xchg
aad
icebp
call
xchg
dec
jp
lods
mov
imul
or
in
gs
mov
adc
push
sub
xchg
xchg
sbb
jl
and
mov
test
icebp
jle
bound
cmp
and
xchg
iret
or
cmp
add
mov
pop
xorl
cmpsl
adc
add
pop
mov
adc
and
mov
mov
aam
push
fldenv
int
xor
mov
xchg
xchg
dec
fidivl
pop
cltd
and
dec
lahf
shlb
mov
and
and
mov
movsb
push
push
mov
adc
and
dec
mov
sub
cmc
out
mov
sbb
sub
std
xchg
loop
ret
mov
je
jecxz
inc
fdivrs
popf
push
dec
jp
inc
ljmp
and
push
aam
mov
mov
cltd
outsl
ror
stos
out
sub
jmp
enter
push
fwait
push
fisubs
sbb
xchg
outsl
mov
adc
cmpsl
fsubrs
dec
in
daa
adc
push
in
fdivl
mov
out
jns
incb
daa
and
dec
inc
xchg
sub
movsl
sbb
dec
movsb
gs
aad
sbb
xorl
mov
jne
stc
notl
int
pop
dec
cmp
push
mov
pop
jns
outsl
in
jecxz
stc
push
repz
sbb
adc
fldcw
mov
adc
and
adc
inc
mov
xor
add
cs
or
mov
lret
dec
leave
pop
dec
mov
xor
inc
fwait
negb
pop
imul
je
push
or
adc
cmp
cld
inc
sbb
dec
push
adcl
push
xchg
mov
arpl
dec
jmp
adc
pusha
ret
xchg
addl
ficomps
loop
jo
pop
mov
in
lea
inc
push
out
sti
mov
sub
mov
mov
mov
cs
inc
jge
fstp
scas
xlat
clc
jl
and
sbb
in
cltd
add
and
sub
aas
pop
pop
inc
sbb
mov
add
push
cmc
xor
dec
mov
xor
jnp
jp
inc
scas
mov
add
mov
mov
inc
inc
jecxz
or
or
std
pop
orl
cmpsb
inc
mov
jns
dec
es
sahf
lock
xor
into
cwtl
inc
push
jge
lock
push
bound
sbb
hlt
add
ss
cpuid
sbb
xor
outsb
loopne
repnz
inc
dec
cmp
mov
jno
loopne
mov
sbb
xchg
fidivrs
dec
xor
dec
jnp
sahf
enter
std
mov
or
repnz
or
sub
xchg
push
mov
cld
rcl
mov
pop
jnp
cwtl
fucomp
into
cmp
xchg
mov
test
repnz
out
xor
rclb
jmp
imul
movsl
call
push
jno
or
pop
je
or
or
js
adc
repz
dec
cli
into
daa
mov
in
mov
mov
lea
jge
xchg
xchg
dec
jns
cwtl
push
jb
dec
movsl
push
movsl
dec
pop
mov
es
stc
movsb
aas
lahf
fidivrs
insl
movsb
cltd
test
or
test
shrl
jle
data16
loope
repz
int
push
lcall
arpl
push
popf
iret
repnz
lods
inc
je
push
push
xor
pop
loopne
mov
iret
mov
mov
loopne
xchg
mov
mov
cli
push
ja
xchg
xor
cmp
mul
mov
les
loopne
fstpt
pop
inc
call
sub
test
scas
mov
iret
or
into
imul
test
push
ds
fs
and
xchg
push
cmc
packuswb
and
movsl
lods
or
loopne
cmpsl
inc
movsl
sahf
push
push
loop
add
into
dec
xor
xlat
popf
movups
jo
add
push
std
or
inc
xchg
in
sar
pop
fcmovnu
add
inc
outsl
jge
test
cmpsw
nop
shrl
pop
dec
fidivl
cmp
cmp
cmp
js
or
xchg
cld
dec
je
mov
test
jp
shlb
in
push
push
mov
mov
push
daa
pop
leave
or
xlat
or
jmp
xorb
shr
jle
das
xor
leave
push
mov
mov
fsubrs
adc
fs
mov
and
xchg
and
sarl
iret
sahf
test
in
jae
and
mov
ss
push
xchg
into
and
mov
cmp
dec
jne
jne
pop
sbb
inc
mov
cmp
push
cmpsl
fidivs
sti
and
shr
cmp
aaa
sub
test
mov
cli
mov
outsl
sbb
pop
test
imull
popl
sahf
fwait
in
sbb
call
jle
sbbl
push
test
in
or
insl
enter
mov
cmc
adc
test
test
and
and
lahf
into
fwait
push
scas
mov
pop
in
mov
outsb
fstpt
xchg
movsb
sbb
int3
in
mov
or
push
mov
in
and
jb
fs
and
orb
pop
and
mov
add
mov
decb
or
arpl
stc
leave
jae
stos
out
push
xchg
mov
popa
call
popf
jno
insl
outsl
test
insl
jno
mov
bound
xchg
push
cmp
jb
lods
dec
inc
cltd
lcall
sahf
test
mov
sub
push
jmp
ss
insl
xor
sbb
ret
data16
push
cmp
push
test
mov
sub
cmpl
movsl
lea
fbstp
orb
test
jae
cmp
adc
mov
les
jle
sbb
pop
jbe
inc
pop
push
cmpl
add
jge
add
out
sar
sub
push
out
data16
sahf
loopne
ret
mov
test
push
push
push
dec
dec
fstp
mov
pop
jmp
xor
mov
dec
mov
add
pop
push
pop
add
subl
call
pop
fimuls
push
push
jecxz
or
loop
pop
lcall
mov
insl
cmp
push
cmp
sti
cmc
cli
mov
mov
add
into
push
mov
loope
test
xchg
or
dec
jl,pn
insl
xchg
mov
in
mov
add
inc
add
xor
cmc
add
repnz
dec
cld
sbb
xor
int3
pusha
adc
and
pop
mov
push
leave
incb
sub
loopne
cvtpi2ps
jbe
mov
std
push
or
ret
lcall
jb
loopne
bnd
stc
push
or
mov
pop
jns
pop
in
je
das
pop
pop
jo
orl
sub
jns
dec
movsl
loope
fnstsw
pop
push
fnstenv
pop
clc
inc
or
cmc
adc
negb
test
xchg
sti
cmp
cld
nop
out
ds
cmp
or
add
pop
sub
lods
adcl
stc
in
aam
inc
stos
popf
jle
push
in
dec
cmp
cmp
push
scas
js
fs
pushf
inc
cmpsb
insl
mov
pop
aaa
xor
cmp
push
lcall
sub
hlt
lods
push
and
mov
sahf
aad
cli
rcl
jp
cmp
push
bound
cmpb
xor
fcompl
movsb
sub
jno
nop
cmp
mov
mov
movsl
jge
loope
aaa
jp
cmp
and
xor
pop
es
mov
or
dec
push
cmp
scas
hlt
pop
mov
mov
dec
addl
xor
jp
mov
mov
jg
cmc
gs
pop
add
push
and
addr16
mov
pop
ret
into
fsubrs
pop
lcall
aam
shlb
pop
rclb
pop
enter
icebp
or
xor
imul
mov
mov
and
lock
scas
lods
out
xchg
push
test
fdivs
cltd
pop
mov
cmpsb
out
lahf
lret
lock
fadds
test
js
mov
mov
shrl
sahf
push
das
dec
jp
out
and
mov
inc
outsl
mov
imul
dec
insb
outsb
loope
mov
dec
data16
mov
pop
in
add
push
rcr
adc
and
or
call
scas
and
mov
scas
xor
mov
lahf
cs
nop
gs
mov
cmpsl
fisubs
xchg
cmp
sbb
pushf
sbb
aas
lea
addl
js
mov
in
mov
mov
lahf
insl
dec
adc
jbe
mov
fmull
xorl
std
fstpl
pop
pop
aam
lahf
aas
or
jnp
cmp
inc
push
push
pxor
mov
and
out
mov
pop
cmp
jbe
sub
cmpsb
enter
mov
adc
js
dec
xchg
and
jmp
ret
outsl
cwtl
lcall
pushf
int3
popf
pushl
push
adc
loopne
nop
lods
cmp
test
shrl
adc
subb
daa
mov
insb
clc
sahf
sub
outsb
movsb
fs
mov
lods
push
jae
sbb
mull
add
in
push
jo
mov
rorl
mov
int
and
dec
or
addr16
sbb
movsl
add
sbb
mov
rclb
loopne
cs
cmpsb
pop
rcrl
hlt
aaa
xchg
push
sti
lret
mov
popa
jp
mov
loopne
jmp
cld
and
lock
addr16
cmp
mov
add
jp
lods
cwtl
inc
shll
add
sub
or
xchg
ss
mov
arpl
nopl
or
xchg
mov
jg
cmp
inc
sti
cmp
aam
xchg
popf
repz
stos
scas
lahf
or
jbe
cmpsl
ret
mov
dec
mov
into
iret
push
ds
lahf
stc
and
mov
data16
pop
ret
jg
stos
orl
gs
ljmp
lods
mov
mov
insl
loope
rcrl
repnz
push
mov
mov
pop
dec
addr16
pop
loopne
inc
aam
clc
mov
or
iret
loop
dec
cltd
pushf
mov
xchg
out
inc
mov
push
cmp
clc
sub
aas
int
pusha
sbbb
movsb
fwait
pop
jnp
adc
xchg
or
add
sahf
pusha
inc
out
xchg
or
ss
aad
aad
fnsave
mov
jmp
pusha
lcall
and
mov
inc
int
mov
jmp
repz
imul
xchg
insl
sbb
arpl
subb
fcomps
mov
inc
mov
js
das
cli
arpl
sar
xchg
scas
iret
push
jp
mov
xor
popa
pushf
sub
testl
vmaxpd
nop
xchg
xlat
call
popa
add
lret
in
inc
fs
into
push
ss
dec
ficoml
cs
inc
rcrl
clc
in
ret
and
xchg
dec
cmp
clc
push
inc
xchg
cld
cmpxchg8b
int
jae
in
jns
es
ss
push
enter
pop
stos
pop
push
or
dec
pop
dec
jmp
add
inc
movsl
roll
mov
push
shlb
push
push
sub
data16
push
jno
xchg
idivl
addr16
pop
scas
xor
mov
subb
jge
out
mov
rol
mov
data16
dec
mov
xchg
dec
xor
fbstp
aam
xchg
cli
and
pop
dec
cltd
push
add
push
js
dec
xchg
push
jge
lcall
adc
or
push
sarb
sub
gs
iret
fs
push
fdivrl
xchg
inc
test
outsl
xchg
outsl
xchg
cltd
xchg
stos
mov
adc
xor
in
lods
jmp
iret
movsl
cmp
jne
into
push
and
pop
mov
addr16
icebp
pop
xchg
or
push
sbb
mov
pop
mov
dec
sbb
outsb
clc
js
fisubrl
int
icebp
push
shll
cltd
mov
arpl
popf
mov
in
fcmovb
out
sub
ds
adc
jno
mov
adc
aad
mov
rcrl
mov
adcb
nop
add
sub
cmp
pop
data16
es
sub
stos
mov
xor
lret
lods
test
and
mov
std
xchg
pop
scas
outsb
sbb
call
popa
mov
js
pop
fldt
sbb
mov
cmp
cmp
lods
nop
mov
stos
mov
push
lahf
cltd
mov
movsl
in
pop
out
insl
shll
add
xchg
push
dec
cmp
sbb
push
sbb
lret
inc
es
mov
rcll
loop
ret
in
shlb
movsl
adc
jmp
fwait
or
mov
popf
lods
fs
fs
loopne
cmp
aad
jnp
jb
inc
mov
jp
sub
into
push
cld
mov
lret
loope
push
mov
cmp
inc
ds
arpl
ror
aas
inc
sbb
dec
xchg
out
cmp
jb
mov
out
arpl
lret
inc
imul
ja
push
ja
push
adc
mov
addr16
add
pusha
and
nop
shlb
xor
psubq
push
dec
andl
jge
dec
stos
mov
xchg
movsb
inc
and
xchg
pop
movsl
enter
cmc
mov
call
pop
sbb
pusha
jbe
dec
rorl
or
mov
faddl
ret
imulb
mov
mov
inc
lods
mov
mov
ret
lea
mov
xchg
dec
clc
fcmovb
icebp
hlt
in
xor
pusha
jl
pusha
lea
jnp
into
mov
or
lock
and
popa
adc
in
dec
outsb
out
sbb
clc
insb
cmpsl
mov
pop
mov
sub
sahf
cmp
mov
ja
mov
sarl
lahf
cs
cmp
outsb
sub
adc
add
sarb
aas
movsb
and
cmpsb
and
push
sbb
or
fcmovbe
sub
jnp
pop
scas
adc
imul
lds
les
or
cmp
adc
jo
pusha
into
add
push
out
xor
das
fstps
rcll
add
stc
or
rcl
mov
fldcw
out
mov
push
test
iret
inc
or
cmp
xor
jl
inc
ds
iret
out
jne
add
ret
adc
cmpsb
inc
pop
mov
pop
fcmovne
jmp
xchg
mov
dec
pop
jmp
arpl
mov
rolb
rcr
add
out
out
jbe
mov
lods
jp
and
cmpsb
or
test
rorl
jbe
out
mov
std
repz
cmp
repnz
dec
push
iret
jge
std
in
repnz
sub
repnz
je
aaa
fbstp
pusha
popa
add
push
cmp
mov
cmp
xlat
movsb
sbb
sub
leave
lea
mov
mov
clc
negl
imul
inc
jp
push
add
fisttps
outsb
scas
cmp
repnz
aaa
fwait
pop
xorl
xchg
push
mov
xchg
xor
dec
daa
or
jecxz
xchg
add
notb
sbbl
in
push
movsl
sbb
shl
sbb
outsb
inc
stos
fidivl
inc
ret
pop
fnsave
outsl
dec
ds
and
mov
scas
mull
imul
scas
add
dec
xchg
xchg
xlat
aaa
stos
sbb
add
xchg
xchg
xchg
pop
sti
push
mov
sarb
test
sub
xchg
or
gs
setns
or
jg
pop
mov
mov
dec
rorb
inc
mov
add
xor
lock
fdivl
xchg
pop
xchg
xchg
inc
fisttpll
out
movsl
movsb
push
mov
sbb
stos
stos
jl
sub
scas
sub
mov
ret
movsl
imul
loopne
dec
mov
adc
mov
stos
mov
leave
leave
daa
dec
xor
push
or
cmp
inc
je
and
mov
and
in
jle
mov
movsb
sub
testb
mov
pusha
faddl
add
loop
push
pop
jnp
popf
or
lods
movsb
push
sbb
jne
push
xor
out
adc
clc
jle
clc
mov
shlb
mov
add
dec
hlt
xchg
push
jg
xchg
repnz
sub
xchg
out
pop
or
mov
mov
sahf
push
jge
call
sahf
mov
jno
adc
inc
sbb
aam
inc
inc
shr
adc
adc
jge
inc
scas
push
jo
cmp
stc
arpl
inc
lcall
push
stos
std
or
add
leave
xchg
inc
adc
iret
dec
mov
insb
pop
loope
push
dec
out
mov
xor
fs
in
cmc
xor
out
inc
xor
pop
mov
lods
hlt
mov
fucomi
mov
or
rcll
mov
inc
fisubs
mov
xchg
sbbl
mov
xchg
mov
testl
bound
cmp
push
imul
adcb
adc
mov
lret
add
jno
lret
and
mov
pop
lds
sub
xchg
sub
add
test
movsb
add
mov
mov
xchg
xchg
adcl
sub
stc
mov
inc
repnz
out
push
mov
dec
mov
push
mov
adc
test
lds
outsb
les
jae
mov
cmpsb
shl
jg
scas
xchg
pushf
rorb
lods
adc
fstps
jge
hlt
inc
xorb
cwtl
cmp
les
lret
adc
xchg
in
mov
mov
ss
lock
xor
aas
dec
xchg
xor
xchg
pop
pop
ja
jbe
push
movsb
jp
pmullw
clc
push
repz
cmp
imul
cmpsl
push
xor
inc
ljmp
jl
xor
mov
adc
and
outsb
xor
imul
push
mov
mov
adc
out
xchg
iret
aas
pop
test
leave
punpcklbw
es
push
add
sub
ja
cwtl
xchg
scas
lods
call
jne
xchg
jno
push
in
dec
rcl
repnz
xchg
cmp
mov
and
cmp
mov
sub
test
xor
dec
leave
ret
out
jg
scas
in
mov
repz
outsb
mov
call
mov
jg
xchg
mov
pop
aad
push
push
popa
and
ret
out
xchg
stc
sbb
jmp
sbb
fucomip
lret
std
lahf
adc
test
shll
fdiv
xor
movsb
jge
push
pusha
dec
pusha
dec
jl
mov
loope
cmp
sti
xlat
repnz
mov
test
xchg
lahf
sub
xchg
and
pop
jo
jecxz
cmpsl
push
adc
cld
in
adc
fs
das
sub
or
xchg
add
inc
fildl
loop
mov
sub
mov
aaa
stos
mov
lds
addr16
popa
pop
mov
in
push
enter
jns
add
sbb
leave
es
push
inc
test
mov
jmp
repnz
ljmp
fld1
iret
insl
xchg
adcl
aam
mov
inc
insb
sub
icebp
lea
cli
or
psubb
pushf
mov
roll
mov
mov
push
sbb
imull
cmp
inc
into
fsubrl
aas
jb
fsts
daa
jae
mov
stos
gs
andl
cltd
xor
divb
dec
xor
add
mov
out
iret
sub
adc
or
iret
xchg
xchg
int3
out
pop
dec
out
jp
jnp
pop
popf
aaa
in
js
mov
cmp
lods
or
in
lods
xchg
sub
dec
mov
mov
fs
in
mov
push
or
cmp
sarl
xchg
test
in
push
mov
dec
das
rcl
mov
jnp
xchg
inc
test
pop
sub
mov
inc
ljmp
sarb
push
insl
fbld
sub
sbb
movsb
xchg
and
ret
into
jmp
sbb
mov
cld
mov
lcall
jecxz
push
mov
mov
rclb
shrl
adc
out
stos
aas
dec
ljmp
pop
and
je
sub
mov
add
add
insb
dec
rolb
fistpl
sub
push
dec
xlat
dec
dec
sub
xchg
das
mov
adc
stc
jnp
icebp
movsl
shrb
inc
cmp
xor
mov
ret
sbb
mov
ret
cmpsl
pop
notl
mov
imul
test
rcr
inc
add
fisubl
jge
mov
fsub
andl
add
mov
rep
sub
mov
arpl
sub
cwtl
push
fwait
pushf
pop
sbb
mov
pop
mov
sub
popa
cli
movsb
pop
or
inc
jae
or
pop
xor
mov
add
movsb
sub
fistl
xchg
lret
lret
pop
call
mov
pop
or
jg
in
xchg
cmp
jg
jle
fcmovu
xchg
sub
loopne
adc
push
clc
add
aaa
mov
mov
scas
daa
pop
jnp
mov
jns
das
jmp
cmp
mov
test
pop
and
and
sbb
les
cli
lods
cmp
jb
and
add
xor
sub
sub
lock
popf
fisubrl
push
xchg
ljmp
lcall
fisttpl
call
adc
mov
cltd
xchg
fld
popf
or
sbb
in
and
lahf
add
push
rorb
fwait
xchg
into
pusha
cmp
adcb
nop
cmp
xchg
ja
and
sub
cmp
fstpl
push
pop
xchg
test
shlb
scas
into
mulb
stos
dec
idiv
and
inc
mov
mov
push
cmp
clc
pop
cmpsb
repz
in
inc
in
and
jge
sar
aad
dec
and
inc
rolb
in
div
aas
fadds
mov
push
push
inc
xchg
xor
jmp
cmc
movsb
or
lds
and
mov
mov
mov
xor
insl
mov
into
int3
dec
or
sbb
fists
jle
rclb
inc
enter
xchg
fisubrl
adc
rol
insb
adc
or
cmp
mov
es
inc
mov
sahf
popa
xor
adc
out
cmp
sbb
lds
aaa
and
jne
mov
aaa
mov
pop
out
sbb
lret
mov
aaa
cmp
aam
or
pop
test
aad
mov
push
pop
pop
pop
mov
push
or
add
dec
mov
push
mov
ret
jmp
fdiv
lahf
inc
clc
cmpsl
mov
les
insl
pop
lret
mov
add
sub
push
test
aaa
jmp
enter
jb
sbb
aaa
insl
shrb
jae
shrb
dec
lret
jle
mov
out
pop
into
test
call
idivl
push
or
cmp
xchg
aaa
popa
inc
rcr
loope
xor
fadds
mov
pop
mov
inc
or
mov
fiaddl
sub
sub
shrl
sub
inc
push
add
mov
inc
xor
mov
push
scas
pushf
fstl
inc
fdiv
jmp
or
add
shlb
inc
or
dec
lock
shl
das
pop
push
xlat
into
jnp
mov
jge
sbb
outsb
into
jo
repnz
push
push
xchg
mov
fimuls
mov
mov
push
in
mov
and
mov
adc
out
add
mov
mov
arpl
pop
add
dec
jle
in
or
and
fs
mov
in
adc
jne
lea
jnp
sbb
push
cmpl
ljmp
xchg
inc
mov
insb
pop
xor
scas
and
stc
fadds
scas
adc
arpl
ljmp
jb
je
xchg
lock
adc
xor
xlat
js
jl
adc
dec
jnp
add
jne
inc
mov
pcmpeqw
mov
mov
cwtl
lcall
cwtl
ror
in
jp
pop
lods
arpl
pop
pop
push
jae
pop
xor
clc
sbb
lret
cmp
add
fwait
jg
xchg
enter
cmp
dec
adc
sub
lock
sub
iret
jmp
mov
imul
das
inc
icebp
inc
int
aas
inc
jg
fcompl
push
mov
repz
xor
mov
fcomp
xchg
sbb
cmp
iret
or
cmpsb
test
cmp
jne
adc
cmp
test
lods
lea
out
and
pop
cmc
add
cld
pusha
pop
std
fadds
or
jmp
inc
or
pusha
push
leave
mov
nop
loopne
aas
flds
cwtl
jno
in
adc
dec
and
mov
fsub
push
sbb
ret
outsb
mov
dec
lock
mov
jbe
inc
aas
iret
cmp
push
mov
inc
sbb
and
mov
pushf
call
pop
pop
cmp
xchg
sub
add
add
stos
stos
sbb
xchg
and
lret
loop
sbb
cmp
cli
fistps
mov
xchg
pop
ljmp
sbbl
adc
sub
fcomi
mov
pop
aaa
dec
add
lock
and
js
fsub
xchg
mov
mov
or
les
pop
xchg
jnp
xchg
popa
inc
popa
lret
loopne
out
pushf
stc
or
lea
ja
bound
push
shll
outsb
xchg
ret
out
fidivs
mov
dec
jbe
outsl
sbb
lret
clc
sbb
out
sbb
jno
andb
in
pusha
ret
jae
push
das
jg
scas
add
ret
rcrl
cmpsb
cltd
jl
cmp
repz
pop
pushf
rorl
sbb
in
push
inc
sbb
gs
mov
jecxz
mov
test
xor
xchg
aam
fsubrl
iret
mov
lds
stc
std
inc
andl
jnp
xchg
pop
pop
pop
xchg
or
xor
sub
adc
mov
ret
hlt
ss
dec
jno
ror
loope
stos
xchg
mov
fwait
cltd
out
outsl
jnp
cmp
fildl
xchg
stos
jge
mov
mov
sarb
pop
mov
leave
or
mov
test
ss
lahf
lea
test
xchg
xchg
stos
mov
sti
lret
push
in
ret
pushf
push
jns
imul
lock
iret
js
mov
or
add
pop
xchg
fs
dec
ss
stos
xchg
shlb
outsl
push
pop
push
mov
aad
xchg
idiv
xchg
js
sahf
es
adcb
or
push
hlt
mov
inc
inc
imul
adc
pushf
xchg
sbb
mov
les
es
and
pop
push
sbb
and
add
mov
paddw
sbb
and
xchg
xchg
jle
push
int3
adc
jno
enter
cmpsl
loopne
mov
and
pushl
cwtl
dec
mov
sbb
fildll
jmp
test
fwait
pop
addl
xor
pop
cld
adc
pop
mov
sbb
lods
add
cmp
mov
mov
adc
jb
pop
inc
fwait
mov
xor
rcll
cld
leave
cmp
xor
pushw
sub
push
imul
jp
pop
icebp
jg,pn
jb
test
jge
jns
xor
frstpm(287
icebp
xchg
outsb
xchg
mov
cmc
test
push
scas
sbbb
mov
outsb
lret
cmpsb
push
popf
mov
sahf
jns
mov
and
cmp
dec
pop
cmpl
pop
and
dec
push
sbb
popa
sbb
cld
insl
stos
xchg
add
movsl
clc
sbb
ss
adc
test
pop
pop
sbb
xor
cmp
mov
out
cmpsl
in
inc
or
sahf
mov
sahf
pop
shll
cmpsb
dec
jp
lea
inc
into
call
aad
xlat
jmp
push
cmp
insl
pushf
sub
pushf
push
dec
cmp
imul
and
xor
inc
or
jl
cs
fcomps
add
punpcklwd
or
or
pusha
adc
xor
mov
xchg
pop
push
imul
adc
lret
imul
pop
lods
jbe
int
inc
mov
inc
mov
sti
outsb
stc
daa
sti
stc
adc
loopne
mov
xchg
gs
popf
mov
sbb
roll
jbe
xchg
pop
test
imul
pop
or
arpl
arpl
pop
pop
nop
hlt
mov
adc
mov
cmc
out
adc
dec
adc
and
inc
ja
cmpsb
pushf
xchg
std
push
cmp
mov
pop
inc
test
push
xor
add
test
or
sub
insb
sbb
lret
repnz
in
vmwrite
adc
jg
mov
mov
xchg
shrb
cmp
or
enter
jae
xchg
jns
std
shlb
pusha
pop
fsubs
dec
cmp
push
out
cmc
cld
mov
mov
fimuls
xchg
mov
mov
jg
sbb
jmp
fsts
hlt
mov
mov
scas
mov
arpl
int3
aam
adc
lea
fs
sub
xlat
push
jo
pop
jp
mov
mov
popf
jmp
jmp
push
imul
adc
in
ja
pop
mov
fdivp
cwtl
mov
inc
push
scas
repz
popf
cmp
data16
scas
mov
cld
cmc
aaa
aad
xchg
int
inc
mov
filds
add
dec
pop
and
xor
mov
pop
loopne
pop
pop
mov
push
or
jp
ret
loop
dec
xor
xchg
add
mov
mov
icebp
loope
pop
sub
lods
cmp
cltd
inc
stos
push
push
in
daa
lahf
sub
nop
jne
mov
pop
into
mov
cmpsl
dec
jo
push
xor
inc
lods
cmp
dec
lods
call
sbb
dec
jp
lret
bound
negb
jl
and
hlt
mov
push
and
cmpsb
mov
test
jmp
jle
loop
inc
mov
imul
push
adc
pop
jp
popf
adc
push
push
sahf
mov
push
sub
rcrb
mov
add
or
sub
jge
sarl
or
mov
fildl
ret
ss
out
icebp
enter
or
or
aam
xor
and
std
adc
add
inc
add
cmp
adc
stos
xchg
js
add
addl
add
leave
jns
iret
or
fs
jle
cmp
jbe
push
sub
lahf
ss
jle
sub
xchg
inc
and
mov
nop
push
pushf
std
cmpsb
sahf
lahf
push
push
outsl
loope
lret
pop
movsl
pop
loope
cwtl
in
popa
shll
das
pop
push
divb
add
int3
and
mov
sub
push
cmp
pop
jp
call
inc
std
cmp
jns
lods
cwtl
cmp
cmp
pop
mov
adc
cwtl
cmp
les
loope
dec
jne
ljmp
add
insb
lock
jnp
mov
or
or
mov
jmp
adc
lcall
mov
int
sbb
xchg
repnz
in
nop
dec
push
xor
xor
xor
push
gs
daa
addr16
pop
and
pop
dec
jle
pop
dec
test
xchg
inc
rcr
mov
mov
adc
scas
fldl
inc
fwait
mov
dec
jno
or
cmp
or
mov
xchg
in
shrl
imul
cli
mov
in
cmp
les
xchg
inc
decb
popf
aad
insl
sub
sbb
sub
sti
loope
outsl
sub
dec
sub
jle
popl
repz
scas
inc
push
mov
fadds
aaa
cwtl
push
sahf
cmpb
mov
leave
mov
sbb
dec
or
fidivl
insl
mov
adc
fmuls
jbe
orb
in
adc
xor
pop
push
sub
loop
outsb
sahf
mov
push
or
sbb
push
or
in
add
sbb
push
test
insb
in
out
loop
sahf
jb
mov
out
sub
pop
mov
mov
jo
xchg
loope
scas
or
les
rcrb
cmpsl
aad
dec
cmp
pop
xchg
cmc
fcompl
das
push
into
add
pop
fnstsw
popf
cltd
xor
sbb
popf
test
xchg
mov
data16
or
cmp
cmp
add
ret
dec
inc
and
xchg
adc
sahf
pop
sahf
loop,pt
aad
fsts
jle
dec
shlb
add
mov
inc
loop
fcoml
cmp
adc
cltd
int3
arpl
pop
cs
les
sbb
mov
xchg
push
dec
jno
neg
pop
push
sbb
rcr
scas
xchg
es
shl
cwtl
lock
and
sbb
cld
call
xor
push
sub
push
or
stc
add
pop
jecxz
jge
jle
in
cmp
inc
xchg
test
mov
mov
call
mov
iret
imul
xchg
mov
adc
rcr
xor
jp
pop
popf
jg
jae
leave
mov
and
fisttps
xadd
leave
inc
int
int3
pushf
push
inc
sahf
xchg
xlat
test
mov
xor
add
inc
cld
mov
and
mov
and
popa
dec
xorl
clc
das
insb
jge
jne
jns
insb
pop
sbb
lret
add
mov
mov
push
into
das
adc
fisttpl
cmp
jne
sbb
push
insb
jle
jle
jge
jno
ljmp
mov
ret
scas
sub
rcr
call
mov
add
cs
sbb
je
cld
repz
xchg
inc
xlat
xchg
jg
in
mov
enter
stos
mov
rorb
ja
adc
mov
xlat
adc
push
mull
daa
cmpsl
mov
xchg
fisubrl
mov
call
ss
adc
das
mov
imul
daa
mov
sbb
ja
push
jmp
dec
sbb
cwtl
xchg
xchg
das
movsb
pop
pusha
push
fldlg2
call
ret
movlps
xchg
dec
lret
dec
and
mov
in
push
jl
xchg
test
sub
mov
sbb
scas
cwtl
or
push
int3
sbb
lcall
mov
insl
movsb
xor
arpl
xor
add
inc
dec
push
adc
mov
shrl
dec
or
or
mov
iret
ret
and
test
cli
ja
dec
outsb
insb
push
cmpsb
mov
ljmp
or
mov
cwtl
inc
sbb
ja
mov
rcr
lea
imul
xchg
fcomps
sbb
jbe
movsb
mov
fildll
pop
fucomip
inc
arpl
sbb
mov
ret
mov
jmp
push
and
das
lret
in
jmp
jbe
push
jo
sub
push
pushf
dec
dec
outsl
fildl
dec
push
push
xor
or
or
xor
push
adc
testl
cli
mov
int3
add
mov
lea
jae
lock
cmp
push
push
cwtl
sarl
cmpsb
push
add
lods
aas
and
sub
or
sbb
pop
dec
inc
ss
jl
mov
or
cmc
out
mov
lds
rclb
sbb
mov
std
divb
adc
pop
pop
leave
xchg
push
mov
xor
fistpl
push
cmp
push
mov
cmp
add
cli
cmp
fwait
insb
cmp
mov
xchg
scas
jno
add
add
movsl
inc
cmp
inc
push
daa
mov
cmc
mov
pop
inc
repnz
hlt
or
int
jmp
shrl
push
dec
mov
dec
inc
lock
dec
inc
xor
inc
sbb
jg
outsl
xchg
repz
leave
pop
test
dec
push
dec
dec
sbb
and
mov
out
jecxz
in
fdivrs
push
ficomps
sti
xor
jbe
fidivs
xchg
add
je
fdivr
xchg
push
lea
int3
imul
loopne
fs
mov
sbb
ss
cwtl
jbe
lods
jmp
scas
fidivrl
mov
xchg
sub
cmp
out
cltd
pop
aam
out
ror
jge
lods
mov
jmp
iret
jbe
int3
or
hlt
sbb
cs
fmul
jecxz
mov
mov
in
les
pop
cmc
adc
test
bnd
xchg
shl
bound
in
xchg
stc
xchg
adc
dec
mov
jp
stos
mov
or
fistpll
pushf
jbe
cmp
pop
scas
mov
jae
adc
inc
or
jp
out
das
mov
inc
pop
sub
xchg
in
inc
in
cmp
push
sbb
in
rcll
push
mov
adc
jg
cmp
inc
cmc
out
aaa
fisubrl
push
adc
nop
fadd
jbe
adc
ror
push
in
ljmp
outsl
mov
xchg
ss
insl
adc
je
xchg
addl
cmpsl
xor
adcb
das
push
int3
push
decb
or
push
test
mov
fs
pop
leave
adc
lods
mov
leave
loope
popf
andb
jge
enter
shl
pop
lret
gs
lcall
jle
insb
push
clc
lea
push
and
xchg
jp
xchg
loopne
pop
add
in
scas
mov
xor
pmulhuw
stos
cmp
xor
fistpll
and
cmp
scas
sub
mov
stos
out
out
shll
jb
xor
mov
test
cmp
xor
out
sbb
std
gs
jge
lock
cli
out
push
mov
and
lahf
pop
lcall
popf
dec
out
repnz
jnp
dec
cmp
jae
mov
int3
jne
ss
idivl
fsubrs
decb
insl
push
mov
fidivs
cmp
mov
or
pop
ret
pop
cmp
lret
dec
test
cmp
mov
inc
call
sub
pop
or
imul
fisttpl
jmp
shlb
mov
in
pop
shll
cld
insb
xchg
js
sub
stos
mov
add
or
clc
addl
je
idiv
mov
and
inc
lods
jmp
aam
inc
ljmp
or
cmp
aad
test
jmp
das
mov
adc
or
cmp
sbb
jb
push
ja
pop
stos
cmp
jb
xchg
xlat
cltd
fucomp
lods
pop
push
pop
dec
sbb
push
sub
les
inc
cmp
push
shrl
loopne
out
test
mov
pop
xor
jno
or
sbb
ret
aam
and
cmp
and
mov
push
inc
xchg
pop
mov
sbb
pushf
pop
cmpl
hlt
mov
mov
in
sub
mov
int
xchg
insl
clc
xor
inc
push
cmp
ss
cmp
jmp
pop
aad
lret
scas
test
and
cmp
fwait
or
mov
dec
adc
xchg
fsubs
adc
lret
jp
lods
and
inc
xchg
sbb
stos
jns
movsb
in
lock
sub
push
push
repnz
xor
ss
inc
rcll
sbb
or
in
cltd
lahf
sub
out
nop
dec
in
dec
pop
push
jns
stos
mov
mov
iret
icebp
mov
jge
jno
dec
js
push
mov
int
je
ret
mov
mov
fs
and
ret
test
pop
orb
ret
and
pop
inc
lods
cld
dec
xchg
xlat
addl
fcomps
mov
xchg
lods
push
out
inc
movsl
sub
push
hlt
sbb
das
iret
ljmp
out
test
push
sbb
jecxz
pop
sbb
arpl
mov
aaa
arpl
test
jg
add
xchg
pusha
mov
rorb
sub
pop
aas
out
or
in
jge
in
mov
cld
js
fsubl
jl
les
pop
movsb
inc
dec
mov
push
fidivrl
push
jl
mov
mov
xchg
push
sbb
pop
jecxz
push
dec
and
adc
adc
outsb
inc
mov
mov
outsb
cmp
or
movsb
add
cltd
jp
mov
xor
dec
sbb
xchg
scas
sub
mov
add
cmp
push
cwtl
xor
jb
movsl
mov
jmp
lret
mov
xor
push
adc
xlat
rorl
imul
push
rcrb
pushl
lods
push
push
jb
bound
jb
fwait
movsl
mov
sbb
push
pop
popa
imul
scas
mov
fcomps
mov
xor
xchg
test
cmp
dec
pop
repnz
shlb
push
outsl
mov
dec
js
xchg
popf
adc
jb
popa
mov
jmp
cwtl
repz
addb
pop
pop
push
movsb
xchg
pop
hlt
fisttpll
jbe
adc
hlt
xorb
das
jp,pt
mov
mov
fnstcw
out
sbb
loop
call
sbb
adc
into
sbb
cli
hlt
je
adc
push
outsl
xor
adc
sahf
loope
cmp
out
rcrl
aam
xor
pusha
mov
mov
aaa
and
in
mov
ja
lock
jg
stos
mov
push
jbe
pop
imul
aaa
mov
xor
push
fnstcw
and
or
mov
nop
mov
lret
fiaddl
push
push
sti
sub
mov
stos
shrb
decl
data16
stc
mov
mov
cld
jne
adc
loop
loope
sub
lcall
sbb
outsb
icebp
xchg
sub
sbb
lock
fdivrl
lret
jb
js
popa
lods
loop
mov
sbb
scas
adcl
fbld
jge
mov
inc
sarl
addb
fs
sbb
jge
into
cmpsl
mov
pop
xchg
ljmp
outsb
arpl
leave
lock
inc
sbb
add
shl
sahf
insb
and
ds
mov
mov
push
lods
out
pop
test
out
push
out
push
jnp
mov
int3
scas
adc
lea
mov
jecxz
das
stc
das
xor
add
scas
sbb
sbb
stos
scas
addl
cmp
mov
ret
dec
pop
scas
inc
pushf
push
jg
inc
push
mov
scas
and
subl
in
pop
jae
sbb
les
xor
cs
ret
cmp
aas
xor
imul
sbb
test
test
jl
scas
mov
push
mov
mov
insb
fisubs
loopne
pop
cmp
mov
sbb
pop
add
jecxz
adc
xorl
pop
outsb
mov
notl
xchg
repnz
sbb
test
rclb
mov
push
xor
sahf
testb
ss
dec
mov
fwait
dec
add
sub
bswap
mov
pop
ds
dec
jle
mov
orl
mov
pop
add
daa
fstpt
and
aad
nop
cltd
js
clc
or
mov
in
out
xlat
push
jo
push
or
addr16
mov
movsb
or
xlat
dec
imul
xchg
jns
mov
lcall
cld
inc
inc
cmp
daa
xchg
xor
adc
ret
or
shl
pop
pop
push
test
add
lret
int3
stos
jne
fistps
insl
lock
int
cmp
dec
add
jmp
loope
rcll
cmp
jns
adc
in
xchg
inc
icebp
pop
cmpsl
dec
mov
out
add
ffreep
push
and
cld
xor
jge
cltd
bound
mov
shrb
xchg
jmp
iret
out
out
mov
jecxz
out
jns
ss
add
scas
fwait
cld
insb
clc
jns
out
ja
enter
lret
lods
decb
inc
cmp
iret
and
push
jmp
in
pop
fwait
dec
clc
jecxz
mov
inc
cmp
pop
sub
leave
sti
stos
cmpsb
scas
mov
xor
mov
call
pushf
xor
jl
ds
dec
lcall
jbe
loop
cmp
movb
rolb
pop
fsubl
add
add
aas
jmp
jo
aas
inc
inc
iret
add
dec
pop
sub
lret
or
push
and
jo
pop
pop
insb
negl
pusha
rclb
push
cmpsb
jo
sbb
add
popf
adc
insl
mov
btc
mov
adc
out
xor
iret
dec
roll
scas
inc
repz
pusha
clc
inc
popa
andb
push
enter
lock
js
cmpb
imul
cmpsb
test
mov
or
xchg
jl
jmp
cwtl
mov
inc
mov
incl
fwait
int3
rcrb
jg
push
dec
jne
shl
in
out
cmp
or
daa
aaa
mov
mov
add
push
iret
mov
mov
adc
xor
pop
add
test
jecxz
pop
popa
aaa
loop
lds
aaa
mov
out
xchg
mov
hlt
inc
mov
jl
and
pminsw
scas
lahf
leave
out
pop
pop
call
test
add
out
rclb
testb
cmp
jmp
xchg
nop
stos
mov
mov
xor
sbb
push
adcb
cmp
pusha
call
mov
mov
push
pop
fimuls
mov
fisubl
aaa
je
xchg
sub
scas
mov
pop
enter
xor
and
mov
popf
mov
push
mov
jo
xchg
icebp
fprem1
mov
and
cwtl
rcll
stc
ficomps
outsl
jns
xchg
jecxz
add
ljmp
xor
xor
sbb
add
cmp
cmpsl
adc
lods
mov
mov
xchg
lcall
movl
jecxz
rcll
mov
pop
mov
in
pop
push
and
jmp
out
mov
add
inc
xor
ret
fildll
xchg
aas
insl
inc
or
inc
cmpb
out
or
ss
fisttpll
sub
dec
rorl
mov
mov
xor
aam
cmpl
aam
scas
sti
and
mov
xor
je
dec
out
ror
pop
aaa
and
lea
sub
push
xchg
test
mov
fisubs
jp
push
sub
mov
push
cmp
pop
repz
stos
repz
mov
cmpsl
mov
dec
cmpsb
gs
jb
sub
les
in
or
mov
stos
jno
fnsave
lea
inc
dec
enter
mov
dec
pop
arpl
iret
addr16
fidivs
xor
fcoml
dec
loope
movb
test
loopne
popa
jle
push
jl
xchg
xchg
int3
rcl
jb
movsl
and
xor
or
insb
rorb
lock
lods
scas
jb
push
nop
aaa
stos
jno
rclb
sub
adc
add
mov
adc
stos
mov
sbb
lock
xchg
std
cmp
pop
lods
fistps
test
out
and
cmp
mov
mov
pop
mov
mov
sbb
es
imul
cmpsl
enter
jo
mov
leave
aaa
loop
test
jmp
push
cs
and
pop
pop
mov
jmp
mov
js
mov
stos
popf
fs
inc
in
xchg
sti
adc
negb
fs
icebp
sub
daa
cmp
xor
rorb
push
sub
cwtl
push
inc
sahf
and
lret
movsb
push
repz
inc
cmpsb
cli
into
jp
pop
out
add
mov
fs
scas
daa
insb
and
fscale
inc
pop
dec
decl
out
push
cmp
movsb
push
mov
add
sahf
push
scas
out
cwtl
popf
pop
xchg
lods
cmp
mov
dec
push
or
fildl
je
fstps
sub
sbb
mov
ljmp
and
dec
inc
movsb
sub
xor
ret
sub
and
jne
jnp
aam
add
or
fistps
mov
adc
loopne
mov
xor
lock
out
cmp
adc
inc
lcall
lods
pop
in
lds
pop
mov
mov
pop
ja
pusha
scas
sub
push
idivl
lods
dec
xorl
adc
fstl
or
mov
das
dec
cmc
ss
xor
lret
mov
inc
sub
sti
add
shll
ficoms
jl
fisttps
insb
jae
dec
sbbl
jp
push
rcll
movsb
repnz
js
lods
adc
int3
jnp
call
inc
sub
std
sbb
fdivr
mov
jecxz
out
movsl
mov
sbb
ds
ret
cltd
xor
arpl
mov
push
out
int
scas
ljmp
mov
inc
scas
sbb
fisttpll
sbb
aas
clc
aas
dec
lods
out
idiv
in
pop
push
fsubl
jns
jmp
xor
mov
test
das
sbb
dec
repz
cltd
mov
jecxz
mov
subb
dec
inc
xchg
xchg
hlt
int
subl
sub
dec
pop
gs
pop
in
repz
pop
xor
nop
add
inc
add
push
push
push
jno
or
jbe
bound
inc
jg
mov
ds
popl
push
mov
or
pop
fildl
xchg
add
xchg
js
jnp
aam
lret
add
cli
jns
nop
outsl
dec
sub
rcl
dec
xor
jle
xchg
mov
fndisi(8087
mov
cmp
outsb
inc
inc
mov
mov
sbb
sub
xor
sbb
mov
and
xchg
rcrl
mov
mov
mov
or
shrw
inc
sub
mov
mov
into
jns
mov
jae
adc
mov
rcrb
xchg
mov
or
push
dec
xorl
ret
ret
mov
out
inc
fldcw
inc
pusha
xchg
mov
ret
push
add
add
mov
cmp
cmc
ss
dec
pop
cmc
imul
aam
nop
mov
mov
ss
add
or
jecxz
cmp
outsb
fld
xchg
sbb
adc
push
xlat
sub
cwtl
or
imul
lret
gs
mov
xlat
pop
aas
lea
mov
cmc
sarl
pop
xchg
push
orb
adc
loopne
aam
mov
pop
repnz
add
push
inc
in
xchg
outsb
dec
pop
sbb
xchg
jecxz
iret
outsb
in
push
repnz
fsubr
mov
push
add
mov
lret
dec
xchg
mov
jg
mov
fcomps
add
mov
in
jg
xor
fs
adc
cmp
inc
adc
sbb
jo
fucomp
sbb
mov
xchg
pop
xor
fisubl
out
pop
xchg
mov
sahf
rcrb
ret
andb
int3
test
pop
dec
adcb
mov
mov
mov
add
lock
xor
das
xor
in
cmpsb
pop
sbb
mov
and
clc
mov
aaa
scas
push
mov
and
in
iret
lods
dec
cld
dec
sub
call
scas
cmp
clc
psllw
xchg
prefetch
mov
lods
test
stos
out
divb
faddl
insb
dec
inc
mov
movsb
test
pop
outsb
scas
jb
imul
adc
mov
sti
jo
mov
bsr
call
cmpsb
mov
stc
es
pop
dec
sub
aas
and
shl
or
adc
repz
mov
lods
in
xchg
lret
jae
mov
clc
icebp
stos
roll
adc
mov
jl
fstl
pop
jnp
in
into
js
loop
sbb
jp
xor
fwait
and
jmp
gs
dec
lock
adc
lahf
hlt
sahf
fstpt
and
mov
das
add
bound
aad
or
lds
mov
jnp
ret
pop
call
add
aad
jae
jl
lds
push
xor
out
idivb
inc
and
or
cmp
dec
mov
mov
std
fdivr
aaa
dec
xchg
pop
fiaddl
inc
adc
adc
adc
pop
cmp
fildll
xchg
mov
psubw
mov
xchg
outsl
mov
lret
dec
popa
div
sbb
jecxz
andl
push
loope
jns
push
arpl
lahf
mov
aad
subb
mov
cli
or
rcr
fidivrl
inc
in
cltd
out
push
push
mov
outsl
and
and
adc
in
xchg
movsl
in
sbb
fs
in
mov
push
xor
cmp
cltd
fs
sbb
in
lods
pop
xchg
mov
and
dec
or
mov
dec
loop
xor
insb
and
push
xor
je
in
adc
stc
add
xor
add
jnp
addb
movsb
xlat
lods
shlb
test
adc
movsb
inc
xor
xlat
sti
cld
mov
mov
adc
lock
lods
add
cld
jno
cmp
sbb
ficomps
int3
push
mov
or
aam
js
icebp
imul
cmp
add
pop
loope
mov
out
sbbb
sbb
mov
insb
scas
fisubs
inc
lods
fnstsw
shll
rcll
xor
sbb
xor
mov
sbb
outsb
push
push
dec
not
add
int
jns
inc
and
and
popa
movsb
inc
leave
shlb
shr
xor
xor
fildll
cwtl
pop
in
stc
xchg
test
inc
pop
shl
ja
lcall
add
js
inc
jle
or
or
or
repz
je
inc
stos
and
xchg
xor
rcr
pop
add
sub
insb
cmp
mov
sbb
dec
or
insl
and
cmp
adc
and
in
dec
das
dec
mov
cmp
cmp
and
arpl
fidivrl
lods
mov
test
cmpsl
push
stc
cmp
aad
mov
andl
cmpl
inc
rcrb
out
dec
jae
jnp
xchg
jg
xor
mov
pop
cmp
daa
adc
fadds
xchg
mov
push
stc
imul
jmp
sub
aaa
pop
jle
into
pop
insl
cwtl
jb
ds
insl
jns
les
sbb
jbe
mov
jne
jnp
and
mov
addl
fsts
aaa
sub
repz
pusha
mov
in
jmp
and
sbb
jne
call
dec
dec
xor
hlt
jecxz
aaa
and
in
push
mov
xchg
add
and
xor
pop
lret
fwait
push
std
insb
mov
mov
dec
xor
ret
or
sahf
dec
movsb
xorl
dec
inc
fcomps
mov
cld
jmp
xor
ret
enter
mov
test
jg
cmp
out
inc
sbb
ffreep
mov
cwtl
sti
in
xor
cmp
cmpsl
movsb
add
mov
sbb
xor
ret
ss
inc
shlb
sub
fists
dec
or
ss
or
fstpl
aaa
mov
pop
add
cmp
lods
imul
or
divl
adc
adc
nopl
pop
jo
inc
loope
insl
sahf
icebp
subl
adc
dec
jb
or
test
nop
jp
out
test
sbb
repnz
mov
mov
shlb
movsb
test
xchg
cmp
je
mov
xchg
xchg
mov
insl
aas
and
test
int3
insb
aaa
xchg
and
xorl
inc
pop
jle
in
mov
pushl
lods
je
data16
test
adc
push
mov
ss
push
mov
lds
and
insl
and
cwtl
mov
shlb
int3
mov
cmp
cmp
xchg
dec
inc
add
bound
in
lcall
xor
mov
mov
and
dec
sahf
out
insb
push
repz
adc
inc
mov
ljmp
rorl
jl
imul
sub
adc
repz
jae
cmp
mov
adc
lods
das
jnp
cmpsb
sar
dec
dec
daa
xchg
pop
cmp
mov
sub
pop
stos
xchg
mov
outsb
xchg
and
dec
inc
cld
sbb
adc
push
push
dec
jp
aam
shll
cmp
jbe
and
testb
pop
repz
mov
push
ss
arpl
mov
cli
mov
pop
test
imul
push
pop
icebp
mov
pop
rep
pop
outsl
or
pop
mov
sub
push
cmp
mov
pop
mov
push
xor
push
clc
mov
outsl
aam
sub
dec
xor
rcll
cmc
adc
outsl
inc
dec
xor
repz
and
testb
sbb
adc
mov
mulb
mov
mov
inc
jo
stos
mov
sub
cmp
mov
add
jae
dec
jl
bound
mov
mov
dec
pop
out
std
std
insl
gs
xchg
push
xor
repnz
or
pushf
xlat
push
cmp
jb
jns
sub
fildll
aad
dec
das
xchg
enter
dec
adc
xchg
sbb
jnp
rolb
fiadds
sub
push
fistpl
test
push
mov
cmc
sbb
add
fiaddl
jno
or
push
mov
dec
and
in
rclb
roll
call
rcrl
sub
enter
mov
scas
lcall
out
dec
sbb
out
int3
dec
movsl
cli
mov
into
cmp
push
jecxz
xlat
mov
lds
dec
out
aaa
and
popa
mov
and
cltd
sbb
pusha
pop
lret
dec
xor
inc
cmp
cmp
inc
mov
filds
lahf
lods
mov
aad
sub
xchg
enter
leave
std
jnp
test
xor
mov
cs
fistpl
push
mov
gs
fimuls
cmpsb
aas
inc
in
cwtl
pop
mov
sti
mov
pop
rcrl
fs
fwait
push
xor
dec
in
stos
dec
fwait
xchg
loope
sub
or
push
push
inc
ret
cmp
fwait
and
xor
sbb
mov
ret
inc
sub
cmc
jbe
sub
xchg
aad
cmp
sarl
xchg
imul
jp
in
mov
pop
into
inc
mov
inc
adc
push
adc
movsb
and
movsl
cmp
in
outsb
rdtsc
sahf
iret
mov
loopne
mov
aas
fstps
lods
loope
shl
sub
icebp
ss
dec
adc
sub
sbb
fidivl
adc
xchg
push
xchg
xchg
fdivr
aaa
pop
xchg
or
sbb
cs
nop
mov
mov
aad
or
lock
mov
add
rclb
jae
xchg
jb
inc
xchg
rcll
scas
sbb
and
fisttpl
out
lock
aas
mov
aaa
add
iret
sti
jno
dec
aad
adc
lahf
push
jl
jb
in
inc
andl
int3
imul
sbbl
lret
sbb
icebp
mov
rolb
xchg
adc
sbb
mov
aas
mov
mov
int3
lcall
sub
cli
add
and
xchg
movsl
mov
sbb
cmpsb
cmp
add
sbb
mov
scas
mov
inc
pop
das
fs
cld
sub
pop
nop
jmp
scas
iret
jmp
mov
arpl
jno
push
sbb
jb
push
sbb
icebp
loop
xorl
push
add
mov
xchg
jae
je
push
xchg
push
nop
mov
popf
inc
in
push
mov
subl
pop
pop
xchg
adc
xor
daa
loopne
xchg
repz
fs
les
movsl
mov
addr16
repnz
aas
or
in
and
test
dec
das
fsubs
xor
callw
jl
xor
inc
jecxz
repnz
ficompl
ja
add
ss
cmp
cmp
cmp
aad
int
inc
add
addr16
movsb
xchg
mov
mov
test
mov
outsl
pop
out
xchg
inc
mov
das
jae
andb
loope
lahf
mov
inc
push
insb
pop
es
stc
add
or
ret
push
xchg
sbb
adc
sbb
jns
imul
jge
add
sub
adc
insl
xchg
mov
add
in
imulb
lahf
stos
repz
mov
scas
es
mov
call
pusha
dec
push
ss
lret
mov
xchg
enter
sub
bound
mov
imul
lds
push
jg
rolb
cmp
cwtl
bound
push
add
jno
push
cmp
aaa
outsl
jo
xlat
daa
mov
shlw
push
clc
fldenv
push
rcrl
dec
lods
stos
fisubrs
stos
iret
call
orl
lock
data16
dec
ret
daa
sbb
push
push
int3
mov
fisubs
jns,pn
and
loopne
mov
pop
push
addr16
mov
adc
cmp
leave
out
pusha
icebp
repz
or
adc
out
out
roll
xor
jl
inc
movsb
cmp
sbbb
orb
push
ret
dec
mov
pusha
add
ds
jge
mov
outsb
ss
mov
and
cmpsl
jle
or
add
loope
cmp
mov
push
sub
inc
dec
xchg
mov
dec
lods
rol
pop
jne
push
xor
stos
pop
sbb
shll
mov
ss
push
mov
sahf
xchg
push
lcall
mov
pop
or
dec
sbb
and
ficompl
ret
leave
in
jmp
rorl
cmp
scas
test
xchg
xchg
insl
mov
mov
and
mov
mov
stos
fisubrl
lcall
hlt
sub
test
add
roll
pop
push
push
jle
xor
fwait
and
sbb
movsb
icebp
cmp
xchg
xor
mov
gs
push
and
dec
jg
push
mov
mov
sbb
push
scas
rclb
cmpsb
sub
imul
nop
inc
mov
int
lods
je
fs
add
mov
xchg
sti
mov
cmp
and
sub
in
out
sbb
xchg
imul
movb
dec
aaa
sub
lcall
dec
les
inc
les
xor
inc
push
repnz
das
cld
cmp
fildl
and
rorl
xchg
mov
rclb
sbb
lcall
mov
lret
pop
mov
lods
mov
fistps
ret
mov
das
clc
movsl
cmpsb
rcrb
lret
mov
das
inc
fdivrl
mov
adc
sarb
arpl
push
push
das
mov
fndisi(8087
mov
add
sub
pusha
add
mov
mov
mov
aam
aaa
cli
orl
insb
sub
mov
sub
xchg
je
fdivl
iret
and
pop
jnp
adc
call
dec
push
cmpsb
xchg
sbb
pop
jle
mov
xlat
or
mul
xchg
repz
push
and
pop
shr
or
int
mov
fimuls
movsb
pop
loop
dec
push
je
fcompl
mov
mov
xchg
repz
cmp
xor
mov
jle
sbb
shlb
mov
xchg
mov
inc
lret
in
fmull
lret
sahf
scas
outsb
push
scas
add
dec
cltd
out
push
arpl
push
ret
xchg
out
pop
push
stc
jg
add
pushf
iret
ret
cmp
not
andb
arpl
mov
mov
sub
mov
or
test
xchg
aas
enter
or
icebp
jne
xchg
mov
dec
dec
ljmp
movsb
and
xchg
add
jle
sti
test
mov
shl
pop
mov
mov
jl
inc
jp
sub
mov
xor
outsl
shll
test
push
jge
sarl
mov
repz
ret
jns
test
clc
jae
mov
push
push
jo
insb
je
pushf
scas
neg
sbb
sub
jmp
out
push
lods
fcomps
fldl
xor
or
add
ds
or
mov
inc
xchg
push
stos
test
fisubs
mov
cmc
push
dec
scas
inc
test
mov
cmc
xor
test
aaa
dec
insl
popf
jp
outsl
push
inc
adc
in
aam
jg
push
push
out
pop
fdivl
enter
shl
xor
addr16
and
xchg
les
int
push
mov
xchg
lea
test
inc
sbb
pop
ret
pop
aaa
jg
mov
push
pop
loope
ficomps
jno
dec
fidivrl
and
in
mov
cmpsl
xchg
mov
push
sbb
fdivs
fmul
sub
jmp
jl
sti
test
mov
fucomi
scas
cmc
arpl
adc
dec
notl
clc
cmpsb
add
repnz
pop
stc
push
push
push
push
and
leave
add
inc
fdivrs
in
into
or
jge
inc
fmul
sbb
add
xor
lods
repnz
dec
movsb
imul
mov
mov
lret
push
popa
xchg
imull
lea
adc
push
push
add
add
push
in
mov
gs
xor
fidivrs
out
je
mov
cmp
and
and
and
out
jg
dec
enter
iret
or
outsl
sbb
nop
xor
xor
cmp
add
bswap
and
and
fnstsw
xchg
xchg
add
push
mov
sbb
xchg
in
or
pop
insb
mov
movsb
or
mov
sub
mov
scas
jl
rorl
dec
into
enter
lods
hlt
sti
jns
imulb
mov
jg
cmpsl
shll
ds
mul
movsb
jns
fcmovnu
sbb
lret
sar
sarb
repz
jbe
or
out
sub
and
jns
inc
mov
jecxz
pop
es
push
mov
sahf
stc
pop
imulb
jnp
pop
push
lcall
lods
int3
nop
imull
lcall
rorb
mov
sbb
push
push
cmp
in
stc
inc
fadds
lret
ja
push
xor
sub
jns
push
dec
jno
clc
or
push
js
xchg
stos
pushf
mov
in
mov
pop
mov
or
xor
dec
xor
mov
adc
inc
add
jae
dec
mov
scas
out
outsl
fs
add
mov
pop
cld
mov
movsb
rcrb
lds
mov
push
or
dec
xchg
xchg
arpl
xchg
fxch
and
lock
into
jae
xor
push
mov
stc
shl
sbb
imul
iret
lds
adc
push
cwtl
fmul
push
es
push
rol
adc
cmp
in
mov
lods
or
mov
dec
push
mov
mov
sub
push
pop
mov
js
sbb
sub
cmpsl
ss
fnsave
mov
xchg
cmpsl
les
shlb
outsb
and
das
add
mov
mov
add
cltd
and
jg
jecxz
incl
adc
addl
fisubs
mov
and
scas
nop
ret
out
or
shrl
lcall
mov
cmc
je
jg
adc
xor
cli
mov
xor
adc
pushf
rorb
incb
cmp
pop
bound
sbb
mov
loope
jecxz
push
mov
and
nop
int3
fs
out
bound
and
cmp
or
ret
fsubr
aam
and
jl
fst
jg
jl
in
pop
jle
jg
rorl
movsb
pop
mov
adc
and
jecxz
dec
adc
inc
add
inc
iret
adc
or
adc
adc
pop
fbstp
aam
lahf
ja
add
int3
jbe
cmp
mov
add
jb
jae
stos
fdivs
mov
cld
cmpsl
jne
mov
or
pop
dec
stos
push
fstps
addr16
fwait
lcall
movsb
ret
jne
les
sbb
cmp
or
sub
xor
ret
sub
jecxz
add
mov
lret
icebp
and
push
or
xor
jp
mov
push
sbb
mov
cmpsl
jb
jle
loope
and
ficomps
add
lcall
cmc
sbb
popa
adc
loopne
pop
orl
fistl
adc
sub
dec
ret
nop
push
cmpb
lret
dec
jg
or
jmp
pop
xlat
sahf
inc
clc
adc
sbbb
mov
xchg
out
addr16
add
inc
mov
or
and
pop
js
inc
fmull
adc
mov
dec
mov
push
js
jnp
dec
icebp
jb
inc
xchg
mov
cmp
cmp
xchg
xchg
jne
adc
pop
mov
std
cmp
mov
add
sbbl
push
inc
push
aad
outsb
inc
mov
push
jb
cmp
adc
or
xor
je
decl
aas
pop
lea
cmc
std
jp
insl
push
inc
push
imul
pop
dec
stc
cmp
ret
sbb
adc
sub
js
test
in
pop
lock
pop
jne
or
push
stos
movsb
mov
lahf
lods
test
imul
push
sbb
test
nop
testb
pop
imul
aas
adc
aam
popf
fdivl
mov
imul
cmp
mov
sbb
loop
or
xchg
lret
jmp
test
enter
cmp
addr16
add
xchg
daa
cmpsl
cmp
in
cltd
push
or
leave
fisubrl
int3
rorb
movsl
mov
jo
pop
adc
fbld
xor
out
js,pt
int
pop
or
mov
mov
outsl
test
add
clc
out
mov
cmc
leave
push
dec
cli
push
movsb
adc
sbb
imul
inc
in
mov
pop
rolb
stc
scas
stc
xorl
cmpl
enter
push
and
mov
cmc
or
sar
das
pop
icebp
xor
aam
je
ret
xor
notb
repz
fisttpll
add
or
shlb
hlt
aad
lret
fdivrl
lea
fisttpll
pop
stos
mov
bound
mov
jl
fisubrl
repz
push
mov
pop
cmp
or
adc
adc
stos
mov
aad
jbe
sbb
xlat
mov
fs
lods
sbb
scas
and
shl
cmp
rcll
fstl
mov
add
dec
in
repnz
fdiv
dec
push
std
repz
in
clc
hlt
inc
out
popa
jne
movsl
or
mov
nop
sub
jle
mov
xchg
pop
add
inc
mov
cmp
jg
jo
dec
adc
cmp
nop
clc
and
push
cwtl
pop
pop
adc
mov
lds
adc
icebp
xor
dec
xchg
popl
pop
cmp
js
xchg
insb
dec
push
popf
iret
dec
leave
ret
sbb
out
and
test
cmp
testb
pop
shlb
inc
pushf
mov
fcompl
jb
cld
shlb
mov
das
push
aaa
dec
and
xchg
dec
je
adc
cld
inc
shll
mov
adc
inc
rclb
sbb
xor
das
stos
push
ss
adc
cmp
lock
jmp
mov
or
ds
mov
ljmp
xchg
ret
inc
add
ret
stos
dec
mov
mov
das
lds
adcl
ret
fldenv
jnp
fs
movsl
fdivrs
add
xchg
sub
jnp
pop
fsincos
fimuls
xchg
adc
pushf
jb
mov
cli
in
mov
in
add
insb
dec
orl
rep
int3
add
cmpsl
fcoml
sbb
scas
out
iret
add
out
sub
xor
js
pop
ds
pop
mov
push
ja
or
pop
dec
mov
inc
xchg
push
push
mov
sub
jle
push
movsl
dec
dec
imul
fldl
dec
outsb
repz
popa
and
adc
ret
stc
fbstp
bound
shl
cmp
mov
les
dec
and
add
adc
mov
pusha
sub
jmp
push
sub
mov
dec
sub
push
int
int
into
repz
int
ficomps
aam
pop
add
xchg
hlt
pusha
xchg
scas
cld
add
scas
outsb
pop
mov
add
xchg
stc
xchg
push
lock
and
add
sub
gs
bound
push
in
fcoml
xchg
or
and
sub
sub
imul
push
dec
sti
jb
ljmp
dec
pop
jbe
shrb
jno
dec
or
sub
loopne
cmp
icebp
jae
mov
lret
xchg
sub
int3
sub
addr16
push
int
sbb
fcompl
cmp
rcll
or
in
sbb
push
popf
pop
aam
inc
or
sbb
sub
daa
shl
mov
cmp
idivl
aam
jbe
movsl
jne
rcll
mov
pop
cmc
mov
lret
fldl
or
and
sub
jle
jbe
mov
add
lds
add
xchg
outsb
mov
mov
cmc
sub
iret
fnstenv
aad
cmpsl
aaa
test
sub
lahf
cmp
and
sbb
mov
xor
sahf
mov
pop
sub
daa
nop
jno
cwtl
repz
cmp
mov
cmp
daa
lock
stos
inc
sub
dec
xor
push
rclb
shll
push
mov
mulb
mov
adc
out
xor
push
leave
or
dec
cmp
fucomi
aaa
sub
pushf
incb
ds
xchg
dec
clc
pusha
or
cmp
push
test
add
fstl
in
cmp
daa
sarl
mov
pop
in
loope
sbb
dec
fsubr
jb
daa
addr16
add
cli
cmp
mov
scas
test
mov
movd
inc
jno
jnp
pop
xlat
cmpsl
rol
pop
shlb
fisubrl
cmp
fxch
cmp
gs
out
movsb
ljmp
cmp
aam
leave
daa
cmp
sbb
in
mov
mov
lcall
xchg
add
mov
lods
repnz
xchg
dec
mov
xchg
sub
rol
and
or
cmpsl
es
dec
fwait
cmp
pop
rolb
sbb
fldenv
cmc
add
iret
inc
add
mov
lcall
arpl
mov
scas
out
test
xor
mov
in
jb
stos
dec
mov
xchg
xchg
pop
test
inc
pop
fstps
adcb
mov
ljmp
sbb
pop
ficoms
and
sbb
arpl
jns
xor
push
int
repnz
jl
imul
ljmp
nop
movsl
adc
cmp
cmp
or
push
in
jl
test
cwtl
out
jge
cltd
or
and
adc
imul
cld
sahf
cli
loopne
es
mov
imul
fnstsw
enter
pusha
xlat
xor
vmovupd
push
cmpb
xchg
cltd
aad
lods
mov
mov
stos
icebp
add
negb
insl
js
lret
add
cltd
xchg
adc
cmpsb
and
scas
ror
xchg
jns
jmp
and
in
call
add
adc
mov
pop
adcb
or
xor
cmp
imul
jecxz
cs
sbb
adc
jo
xor
lret
mov
out
cld
dec
scas
mov
out
repnz
xor
lock
lods
or
mov
imul
push
or
arpl
push
xchg
std
fdivrl
xrelease
adc
clc
cld
push
icebp
push
fildl
push
gs
insl
cli
int3
out
xchg
jp
lahf
fmuls
pop
sti
dec
ficoml
mov
push
jns
mov
sbb
sbb
xchg
enter
mov
scas
and
cmp
xchg
movl
push
xlat
fldcw
and
push
inc
mull
negl
ficoms
loope
aaa
add
hlt
rcrl
sbb
arpl
rol
pop
jne
pop
popf
stos
je
icebp
mov
nop
dec
pushf
adc
daa
cs
or
add
mov
clc
ja
arpl
data16
push
add
or
das
pop
scas
xchg
push
pop
mov
cmp
pop
repz
aas
inc
dec
loopne
and
popa
jp
fldl
je
jg
addr16
jmp
mov
adc
cmovne
mov
insb
stc
xchg
fsub
cmc
push
cmp
dec
mov
push
add
dec
jo
inc
dec
out
sub
outsb
aas
dec
je
flds
cmc
xor
add
sbb
mov
cmp
nop
roll
aas
pop
inc
adc
adc
nop
arpl
add
stos
adc
cwtl
pushf
add
stos
dec
inc
adc
movsl
push
pop
vsqrtss
mov
push
push
mov
xor
jge
stc
mov
fmul
cmpsb
bound
fldl
mov
mov
cmpsb
lea
repz
scas
adc
scas
cmp
push
cmpsl
mov
arpl
lret
adc
mov
in
or
inc
cli
rclb
aad
fsub
out
test
cmp
cmp
dec
dec
sbb
pop
jae
aam
push
dec
pop
push
mov
popa
repz
xchg
imul
xor
adc
push
jmp
cmp
pop
mov
jb
inc
mov
pop
sbb
jns
jae
and
lods
pop
jo
xchg
sbb
jg
rcrb
xchg
dec
mov
push
mov
mov
sbb
sbb
mov
push
adc
test
dec
lock
xchg
fidivs
xchg
shlb
dec
mov
lret
sbb
mov
mov
xchg
add
cld
jo
jle
test
cmovb
adc
rolb
push
dec
xchg
cmp
mov
mov
out
std
mov
or
dec
in
or
test
mov
mov
dec
insb
test
lahf
aam
mov
cld
push
stc
cltd
movsb
sti
sbb
ja
loope
scas
jmp
dec
insl
xchg
ud2
jl
clc
fwait
neg
add
scas
mov
ljmp
out
xor
cmp
xchg
xor
stos
add
mov
dec
lods
and
mov
bound
adc
cmc
enter
jno
mov
xlat
aad
sub
add
mov
adc
sub
mov
mov
mov
dec
sbb
push
or
pop
or
mov
in
ret
enter
add
mov
movsb
sub
out
xlat
int3
xchg
sahf
out
mov
mov
push
cld
jnp
es
xor
fmuls
ss
pushf
insb
aaa
call
scas
in
jo
add
stos
popa
push
dec
movsb
or
add
cmp
fisubrs
nop
or
cmc
leave
insl
aad
loop
repnz
push
adc
push
inc
push
inc
gs
lret
fisttpl
pop
imul
inc
or
dec
dec
out
push
xchg
mov
aas
pop
cli
and
sub
into
je
sbb
ret
and
out
lods
pop
and
in
test
mov
mov
in
subl
stos
mov
mov
rorb
dec
xchg
sbb
out
test
subl
push
jmp
add
je
add
iret
cltd
imul
scas
mov
scas
lods
rcll
aas
cld
xchg
or
cltd
cli
mov
fdivrs
in
or
fiaddl
in
jnp
sbb
push
sub
stos
or
sarb
arpl
push
scas
mov
inc
icebp
xchg
push
pop
xchg
imul
out
int
mov
lods
cmp
cmpsb
pop
mov
arpl
std
repnz
and
mov
idiv
inc
xor
jns
in
loop
xchg
or
into
inc
mov
add
rcrb
jecxz
cmp
ret
mov
shrb
mov
sbb
inc
add
lds
mov
mov
stos
or
inc
add
gs
lods
roll
mov
push
jmp
inc
ret
mov
insl
es
cmp
cmp
push
inc
mov
iret
cmp
cmp
sbb
add
movsl
pop
fs
mov
inc
sahf
cli
movsb
pop
push
and
std
pop
sbb
movsl
cmpsb
jne
push
dec
mov
fnstcw
scas
test
fistpl
out
pop
pop
cmpsl
sub
addr16
sbb
loopne
xor
movsb
inc
push
jecxz
mov
adc
ret
inc
subl
fcomi
jecxz
inc
add
push
mov
iret
mov
cmp
sub
cmc
test
xor
ret
or
cmp
test
lods
jmp
ja
lods
sub
les
push
cmp
dec
test
lret
insl
inc
pop
cmp
mov
sti
mov
imul
movsl
cltd
lea
jge
lcall
mov
add
pusha
xor
outsb
pop
les
mov
adc
arpl
js
outsl
js
imul
outsl
popa
scas
dec
dec
stc
jp
sub
popa
scas
xorl
xor
mov
test
dec
call
and
sub
in
ss
std
int
test
je
xor
lret
sub
lock
ret
mov
pop
fsincos
mov
inc
rolb
xor
lahf
int3
cmp
clc
ds
repnz
push
adc
push
rcl
loop
stc
popf
xor
sub
pusha
jecxz
ljmp
cmp
loopne
cmp
xchg
pop
movsb
inc
pop
xchg
cmp
notb
cld
movsb
inc
ds
push
xor
pop
loopne
dec
inc
add
pop
test
push
test
das
mov
outsl
scas
or
dec
pushf
xor
sbb
pop
xchg
cld
repz
aas
and
xchg
mov
push
lret
sub
test
mov
clc
add
out
cmp
cmpsl
push
insb
shlb
xlat
out
fsubrl
repz
cs
fwait
sbb
inc
loope
cwtl
fbstp
fisubl
cmp
jno
mov
mov
sbb
pop
cmpsl
loope
jnp
push
xchg
cltd
push
mov
mov
pushf
xchg
jbe
push
ljmp
sbb
sub
mov
test
mov
fbld
push
adc
xor
mov
or
pushf
movsl
xchg
daa
jmp
push
lods
mov
sub
sbb
and
sahf
inc
sub
dec
sti
arpl
jp
int
lcall
cmpsb
in
push
or
sbb
mov
pop
mov
dec
xor
movsb
xor
test
xor
loopne
imul
fsubl
mov
or
mov
xor
loope
in
in
add
imul
pop
jmp
test
and
mov
addr16
mov
add
dec
dec
pop
nop
pop
xor
scas
mov
lea
ficomps
popa
fildl
jmp
adc
arpl
mov
jmp
sbb
xor
in
mov
mov
or
mov
adc
cmp
push
stos
aas
cli
cmp
dec
mov
iret
mov
rcrb
mov
fidivrl
rorl
mov
iret
pop
ret
insb
xchg
aaa
es
cmp
shll
mov
in
mov
ja
cmp
stc
adc
dec
push
ds
stos
mov
and
sub
je
ret
dec
inc
mov
dec
and
int3
mov
fs
inc
ret
int
xchg
test
in
inc
jecxz
decl
sub
sbb
jle
in
into
mov
xor
push
out
cltd
sub
add
bound
mov
mov
lock
mov
xchg
clc
lock
xchg
in
nop
cmp
push
fwait
dec
cmpb
or
add
sbb
mov
cmp
int3
mov
ss
jge
inc
push
mov
aad
xchg
loopne
sbb
pop
cmp
ret
pop
xchg
out
cld
add
dec
ss
call
addb
jle
sbb
jmp
cli
aas
js
cmp
and
xor
dec
pop
test
mov
dec
ja
or
adc
inc
jp
scas
jmp
mov
and
das
and
setno
xor
cmc
out
dec
add
mov
add
ret
out
dec
dec
lcall
ss
pushf
sub
shrb
mov
bound
jge
push
cmp
add
sbb
cmp
mov
in
xchg
test
inc
int
sub
aam
inc
sbb
push
les
inc
fstpl
push
push
loope
fcmovnu
mov
jb
lcall
into
iret
dec
mov
pop
push
inc
aas
add
xlat
outsl
inc
fs
ss
andb
out
aad
sbb
or
sbb
add
pop
sub
mov
dec
and
out
addb
sub
xchg
test
js
xor
cmp
pop
fstpl
ret
insb
or
movsl
sub
data16
in
popf
mov
rcr
cltd
pop
rorl
imul
sbb
cmp
cs
sahf
lock
icebp
push
or
lret
xchg
xor
push
inc
cmp
aas
out
sti
in
cmc
fdivrl
jp
xchg
iret
push
mov
mov
ja
movsl
cltd
rcll
and
push
insb
sub
leave
into
cmp
test
fwait
and
xlat
aam
dec
cli
push
jp
push
jne
adc
in
sub
ss
cmp
aad
aaa
jmp
mov
lods
adc
inc
negl
shl
pop
sbb
movsb
sub
arpl
adc
push
rcll
xor
aad
sar
mov
das
sbb
jnp
imul
stos
test
stc
mov
mov
and
mov
insl
jae
sahf
pop
outsl
adc
mov
stos
shl
lock
xor
cs
push
xor
pop
mov
mov
popl
mov
cmp
lods
pop
mov
fistpll
jmp
cmp
or
jp
adc
fbstp
or
and
iret
cmp
jecxz
jae
ud2
hlt
sbb
pop
aam
dec
in
imul
sti
sub
xlat
or
xor
or
jo
inc
add
xor
push
cmp
push
and
cli
dec
sub
xchg
test
ja
pop
outsl
cmp
inc
push
dec
scas
adc
xor
add
mov
les
movsb
test
push
or
add
dec
mov
pop
ret
sbb
ret
daa
dec
fadds
mov
and
lds
mov
jae
icebp
outsl
icebp
ja
comiss
push
mov
mov
or
jo
lock
sahf
cmpsl
xor
and
mov
jae
es
out
les
mov
sub
das
test
inc
out
mov
nop
mov
xlat
hlt
pop
in
sbb
xchg
and
cmp
inc
inc
lahf
push
xor
icebp
fstps
and
add
call
ja
repz
int
jge
or
mov
insb
mov
push
aaa
mov
mov
leave
sbb
sub
fnstsw
cmp
lahf
stos
add
cmp
xchg
push
fcomps
incb
cwtl
imul
int
out
xchg
pop
xchg
add
push
dec
fmul
clc
jb
sbb
scas
iret
cs
add
jne
test
insl
cltd
lods
jg
in
pusha
popf
popf
xchg
loop
sbb
sub
aaa
pop
mov
out
jne
xlat
sbb
mov
xorl
xlat
pop
jns
negb
jmp
jbe
js
xchg
pop
imul
jle
xor
icebp
or
scas
xchg
div
mov
adc
lea
or
xchg
int3
or
add
sbb
add
cmpsb
xchg
cltd
ds
mov
push
fwait
syscall
shlb
lods
push
pushf
fwait
iret
dec
pop
dec
and
push
popf
test
fcmovbe
das
test
xchg
fistl
add
sti
out
std
test
adc
mov
test
push
lods
leave
ret
xchg
lcall
and
push
ret
loop
ret
mov
testl
bound
pop
push
lds
fcomi
dec
xchg
cmp
xchg
cli
mov
movsl
push
cs
mov
addb
lahf
out
xchg
rol
sub
cltd
jno
xchg
notb
dec
shrb
aam
xor
jle
shrb
add
xchg
fs
jbe
imul
jo
xchg
hlt
or
lds
js
sub
pop
xchg
dec
jnp
dec
jae
push
jmp
jb
dec
and
jmp
scas
int3
js
xchg
cmpsl
pop
outsl
inc
pop
pop
lahf
and
and
test
sub
sub
lock
jge
pop
jae
lret
cmp
lret
inc
in
pop
xor
fwait
xor
cmp
pop
mov
or
sub
jne
and
jle
jmp
cs
and
subl
push
adc
icebp
and
stc
mov
jmp
push
and
sub
enter
sub
iret
sub
jle
stc
sub
cs
adcl
lret
dec
aas
or
ficompl
dec
mov
add
fisttpll
dec
test
je
cmp
push
push
lods
in
lock
sbb
dec
fiaddl
mov
gs
or
jae
jl
cli
sbb
rclb
rcrl
xor
jns
divl
fsubr
mov
mov
fiadds
mov
lods
lahf
xor
dec
lods
jmp
or
mov
jnp
mov
push
pushf
adc
out
push
push
or
or
out
popa
mov
jbe
iret
out
mov
pop
pop
adc
scas
mov
sub
mov
imul
data16
sbb
das
sbb
outsl
xchg
out
sub
je
sub
jle
sahf
leave
clc
mov
adc
movsb
jnp
xor
or
push
test
or
addr16
inc
scas
push
daa
lds
add
mov
mov
fs
jle
adc
lods
push
ss
outsb
adc
enter
add
stos
add
movsl
pop
test
dec
xchg
js
clc
lods
les
notb
xor
mov
pop
cmp
pop
push
mov
mov
push
push
push
scas
sub
lds
lret
jle
aaa
shl
add
test
lret
das
pop
ds
mov
xchg
mov
push
rorl
mov
aam
movsl
lods
mov
jecxz
xor
loop
dec
and
lret
adc
cmpsl
out
push
loopne
pushf
mov
adc
int3
and
fisubs
adc
inc
mov
jmp
aaa
loop
or
int3
stos
aas
adc
sbb
sahf
pop
add
add
adc
in
lock
sub
arpl
push
mov
mov
divl
lock
jge
popf
jae
adc
adc
sbb
es
mov
cmp
lcall
xchg
pop
and
xor
cmc
jg
and
push
sub
add
adc
nop
jo
add
push
sub
mov
push
jl
add
in
outsl
ret
ret
ss
and
cmc
add
es
xchg
mov
inc
inc
cmpsb
xchg
and
shlb
lahf
sub
xchg
int
jmp
push
repz
inc
jle
shrb
push
cltd
fnstsw
xlat
inc
addr16
jnp
inc
pusha
cwtl
fs
pop
and
daa
push
loope
mov
and
outsb
add
inc
dec
popf
and
das
ss
or
insl
and
xor
mov
in
fldl
mov
mov
les
xchg
stc
mov
sub
add
mov
sbb
enter
loopne
sub
xchg
and
mov
bound
pop
into
jns
jo
test
aaa
and
xor
and
dec
cwtl
mov
andl
mov
stc
lock
sub
sbb
imul
out
inc
addr16
outsb
je
movsb
and
in
pusha
xor
push
imul
jmp
mov
inc
xor
mov
out
sub
clc
and
fwait
mov
xchg
add
push
push
inc
push
jecxz
std
add
sbb
rcrl
call
dec
push
roll
incl
lea
pop
push
cmp
pop
xchg
xchg
sbb
in
xlat
and
add
mov
test
iret
adc
addr16
stc
movsb
cmp
testb
cli
out
pusha
and
xchg
xor
in
aaa
mov
cmpsl
mov
cwtl
xchg
shrb
dec
xchg
pop
cld
or
cli
pop
out
sub
push
orb
sti
dec
repnz
nop
dec
add
shr
stos
push
pop
adc
adc
xorb
mov
pop
dec
cmp
jl
push
ss
es
loopne
scas
xchg
test
cmp
mov
add
pop
inc
push
das
gs
sti
jnp
add
cmpsb
andl
pop
dec
pop
sbb
sbbl
sub
and
sbb
xor
lods
insl
xchg
or
pop
xchg
pop
xchg
push
jge
bound
stc
cmp
dec
cs
add
inc
and
mov
sub
sub
clc
and
ja
movb
xor
jo
or
popa
mov
lock
adcb
dec
arpl
jg
popa
xchg
pop
push
xor
mov
cmpsl
nop
add
mov
inc
or
icebp
dec
popf
mull
inc
dec
push
stos
pusha
mov
lods
cmp
lds
sbb
or
fisubl
repnz
mov
stos
cmp
cmp
sahf
notl
daa
out
cmp
cmp
sahf
cwtl
xlat
sbb
and
sbb
mov
clc
jp
test
sti
dec
fcmovbe
loop
jae
cli
jg
inc
and
cmpb
mov
aam
hlt
push
fnsave
cmp
or
mov
stc
lods
push
mov
adc
addl
lea
repz
out
fadd
cwtl
cmpsb
aad
mov
rcrb
js
inc
adc
ljmp
ds
fsubs
iret
xchg
mov
popa
fisttps
pop
jo
out
lods
and
add
xor
aam
or
mov
sti
cltd
pop
push
mov
pushf
loop
cmpsb
mov
adc
cmp
lcall
adc
fistps
int
inc
mov
icebp
mov
jl
pop
popa
jecxz
push
sbb
sub
aas
lds
mov
mov
je
jb
cmp
lock
add
adc
xor
insl
movsb
fucomp
sbb
jle
or
sbb
and
push
add
fdiv
xchg
dec
sub
sbb
outsb
sub
dec
jmp
test
mov
jle
xchg
jne
pop
pop
jmp
cmc
and
clc
in
add
cmpb
pop
cld
push
cli
inc
jle
mov
jo
jmp
adc
in
cvtps2pi
xchg
shrl
xchg
xor
sub
pop
mov
jmp
dec
push
rol
clc
lret
adc
rcll
bound
stos
add
in
adc
ret
ja
icebp
mov
adc
sarl
lods
sbb
call
and
sarl
xchg
loopne
cmp
push
or
ljmp
xlat
inc
aad
xor
bound
call
aam
test
mov
popa
mov
shll
sub
cs
addb
mov
xor
pop
xlat
or
jne
mov
mov
rcl
xor
repnz
mov
pop
xchg
mov
xchg
rolb
imul
sub
ja
imul
ffreep
adc
loope
jne
cs
test
cmpsl
mov
dec
lock
mov
arpl
je
out
dec
mov
add
adc
or
sbb
sub
mov
mov
mov
leave
fsubrs
hlt
mov
jle
push
jo
push
mov
cmp
leave
mov
pop
lock
shlb
in
and
lcall
fisubrs
mov
aas
pop
pop
out
scas
mov
sahf
das
and
pop
popa
jp
mov
push
rcr
fdivrs
xor
mov
sub
jecxz
repnz
mov
jo
leave
enter
pushf
push
and
jae
mov
mov
ja
and
daa
fsubl
fld
xchg
xor
or
mov
pop
inc
pop
sub
mov
and
inc
xchg
sbb
cwtl
loope
sbb
sub
or
add
out
mov
lahf
in
in
data16
loop
dec
dec
stc
adc
inc
fs
xchg
jmp
lods
or
ret
sbb
outsl
xor
mov
pusha
xor
mov
outsl
fmulp
sub
movaps
cmpsb
inc
dec
dec
fists
xchg
mov
testl
out
jmp
mov
pop
or
out
pop
insl
sti
jle
in
arpl
leave
pop
fnsave
ret
inc
ss
cmc
callw
pop
enter
js
jecxz
push
fisubrs
test
in
dec
aaa
lret
inc
xchg
cmpsl
push
and
or
pop
xor
push
push
push
outsb
or
or
in
pop
dec
or
sub
sbb
mov
scas
call
dec
pop
into
scas
sub
cmc
inc
cwtl
cld
orl
push
enter
leave
jp
call
dec
xor
mov
pop
or
adc
popa
les
pop
add
sbb
in
mov
add
push
cmpl
aam
pop
cltd
fs
into
ja
dec
dec
lods
jb
add
test
scas
adc
xchg
mov
cmp
jnp
sbb
arpl
pop
push
add
pop
jb
add
push
ds
jb
mov
out
aaa
dec
mov
rol
fcompl
in
ds
pop
loopne
loop
or
lock
cmpsb
fildl
mov
xchg
or
out
cmp
verr
mov
repz
adcl
mov
in
gs
mov
outsb
movsb
clc
dec
pop
push
fwait
repnz
xchg
mov
int3
clc
lock
mov
imul
sub
lea
setb
jecxz
test
insl
mov
pusha
gs
jbe
fistpl
adc
jo
imul
cltd
test
gs
sbb
lods
cmc
xor
clc
mov
pop
inc
aas
sbb
hlt
sbb
cmpsb
mov
je
ret
push
xchg
fiadds
mov
sbb
fstl
sarb
hlt
icebp
imul
scas
lret
cmpb
sub
adc
shll
cmp
subl
ret
jbe
or
pusha
int3
test
mov
or
lods
enter
aaa
mov
test
add
lock
xchg
inc
adc
bound
mov
das
pop
xchg
test
xor
and
push
test
lcall
pop
cmpsb
sub
mov
pop
jo
bound
mov
pop
mov
cs
sahf
mov
sub
push
push
jle
insl
push
pop
pusha
pop
xchg
add
leave
xchg
stos
out
pop
cmp
in
cs
outsb
arpl
int
jp
sbb
pop
cmp
jp
ret
mov
aad
push
xchg
popf
sbb
mov
cmpsl
push
lret
dec
ret
pop
repz
dec
mov
pushf
test
ds
cmp
mov
mov
repnz
add
testb
dec
fstl
push
mov
push
sahf
mov
mov
jae
mov
es
addb
arpl
dec
pop
outsb
sub
ds
lea
mov
aas
jno
xchg
les
ret
or
sbb
in
pop
push
test
wbinvd
movl
loop
jmp
and
outsl
addr16
inc
push
xor
pop
jg
mov
cs
jg
and
in
les
js
iret
pushf
cld
mov
in
mov
psubsw
fsubrl
dec
jl
popfw
jnp
in
clc
and
push
dec
dec
cmc
pop
mov
xchg
shll
scas
push
in
jne
xchg
push
fdivrp
lcall
rolb
inc
inc
jne
icebp
test
mov
adc
mov
mov
add
es
xchg
mov
mov
mov
sub
repnz
inc
out
or
push
dec
movsl
lahf
pop
mov
mov
lret
and
insb
test
or
sahf
nop
push
sub
add
cmp
sbb
icebp
pop
das
cmp
sub
mov
jg
push
xchg
mov
fs
jl
fists
lahf
sub
shl
or
enter
notb
frstor
pop
inc
xor
xorl
aaa
xchg
push
xor
mov
std
scas
lret
int3
mov
add
aad
cmp
hlt
arpl
mov
mov
ret
es
outsl
sub
in
jge
movsb
or
and
lcall
pop
mov
cmp
sub
inc
cwtl
or
pusha
jg
and
or
insl
inc
iret
dec
imul
mov
lds
cld
inc
fs
dec
xor
push
cmp
aaa
fwait
sbb
add
cmpsl
xor
out
loop
out
pop
mov
xor
fsubrs
ret
sbb
adcb
dec
inc
popf
insl
outsl
icebp
mov
lret
mov
aas
cmp
sub
or
and
mov
mov
jbe
adc
aas
push
cmpsb
pop
push
jae
xor
ret
int3
roll
jl
jbe
cli
xor
ja
mov
inc
cmp
inc
ss
mov
call
or
xchg
mov
jb
mov
sub
push
xchg
cmpsl
outsb
sub
mov
mov
dec
push
in
lahf
mov
das
xor
mov
jnp
mov
pop
fistpll
and
cwtl
nop
jo
scas
mov
push
mov
mov
repnz
mov
mov
pop
in
cmc
mov
dec
xchg
cwtl
mov
fwait
aaa
adc
xchg
stos
shlb
pop
nop
pop
and
mov
sbbb
fdivs
pop
nop
popa
xchg
jg
lcall
cmp
dec
xchg
pop
aaa
adc
inc
fstl
stos
popaw
bndldx
inc
adc
iret
push
dec
xchg
ret
inc
outsl
addr16
add
addr16
shll
mov
fisubrl
out
xorb
mov
cltd
stos
mov
cmpsb
fs
jmp
lds
shrb
dec
test
mov
ja
sub
lods
test
and
add
cmp
outsb
shlb
xchg
push
pop
sub
ds
rolb
dec
push
xor
cmpsb
cmp
in
push
aam
inc
mov
mov
jnp
add
out
xor
and
fdivrs
lret
push
mov
cs
fcmove
lds
frstor
rclb
xchg
test
jae
repz
jae
adc
fsubs
dec
push
dec
repz
out
xchg
mov
sbb
jg
arpl
add
fcoms
pop
pop
add
mov
cmc
insb
ret
xor
daa
cmp
cmp
fcompl
xchg
adc
adc
push
shll
or
mov
xor
cmc
lds
test
jno
sbb
xchg
dec
cmpsl
test
gs
push
sbb
out
dec
mov
and
js
dec
adc
jbe
ret
or
xor
mov
dec
shll
loope
mov
dec
pop
xchg
jge
pop
sub
shl
mov
xorl
jp
push
clc
inc
imull
mov
sbb
mov
mov
jnp
dec
rcll
out
std
cli
idivl
js
movsl
rcrb
mov
sbb
lods
xchg
push
adc
inc
add
or
lock
cmp
adc
xchg
adc
icebp
sbb
mov
mov
xor
test
icebp
movsb
xor
repz
mov
xor
dec
jnp
xchg
xorb
push
jl
out
sub
orl
cmp
sub
jbe
sbb
lcall
imul
imul
inc
inc
insb
pop
inc
fstpl
inc
mov
movl
push
xor
jecxz
arpl
icebp
stos
mov
dec
iret
cmp
jg
rcll
sahf
lock
pop
xchg
inc
sub
test
inc
add
inc
push
aas
mov
pop
ja
and
ss
test
pop
cmpsl
sub
lret
fcom
bound
jg
xor
in
lea
sbb
ja
inc
std
cld
push
repnz
sbb
in
pop
cmpsb
cmp
call
push
pushf
or
jbe
xchg
mov
pop
inc
dec
sbb
mov
inc
ret
test
test
xor
loopne
in
mov
dec
adc
cmp
xor
test
cmp
mov
sub
add
jo
cmpsb
mov
fsubl
scas
adc
lret
out
xchg
callw
arpl
popf
fs
jge
fs
fistpl
adc
dec
rol
xchg
xchg
xor
mov
jne
test
sbb
jb
jns
pop
cmp
adc
push
dec
push
cld
sti
xchg
popa
jge
inc
push
jae
pusha
push
push
cmpl
lcall
lcall
out
out
push
pop
pop
mov
or
xchg
jne
in
sbb
sbb
push
fisttpll
push
push
xchg
aaa
xchg
imul
and
clc
rcll
jmp
jbe
xchg
inc
ljmp
and
pop
popf
stos
es
stc
adc
mov
imul
leave
test
dec
sbb
xor
jge
stos
in
inc
cli
lahf
pop
inc
lds
inc
xchg
sub
pusha
fdivrp
cli
out
in
fnsave
aad
xchg
sahf
insl
in
dec
push
cmp
jle
mov
das
imul
xor
into
push
lods
mov
mov
and
fdivrl
xor
jne
out
or
push
gs
les
repz
mov
sti
out
bound
push
repnz
bound
stc
icebp
pop
das
push
ret
and
mov
mov
jb
or
push
jns,pn
cli
push
or
rclb
lahf
push
mov
and
jl,pt
rcl
push
add
dec
dec
sbb
push
or
test
jo
xor
mov
rcr
and
inc
movsl
adc
push
loope
xor
jbe
fidivrl
not
popf
xor
mov
sub
leave
or
adc
fwait
mov
xchg
push
or
stos
cmp
adc
outsl
dec
popf
jns
add
out
inc
ret
movntq
das
jbe
scas
pop
xchg
inc
aaa
sbb
fwait
jne
inc
xchg
jle
and
out
out
mov
enter
cmp
call
pop
sbb
pop
imul
cmp
sbb
cltd
testl
inc
iret
outsl
pop
or
into
inc
inc
sbb
xchg
xchg
std
sahf
pop
repnz
das
test
icebp
js
scas
fistps
mov
and
call
xchg
lods
pop
test
push
add
add
ret
mov
sbb
push
and
popf
xchg
push
dec
sub
xchg
ds
mov
jb
movsb
scas
jns
or
std
jmp
and
fnsave
xchg
push
adc
addr16
fldcw
popa
add
cmp
jno
mov
or
in
into
repnz
jnp
and
xchg
or
gs
ror
jns
push
mov
sti
add
xor
push
stc
arpl
xchg
cmpsb
push
inc
adc
lods
mov
cli
arpl
inc
ds
leavew
mov
adc
mov
inc
popf
mov
out
fwait
test
fidivrs
mov
pop
fmul
lahf
lahf
adc
inc
cwtl
jl
jge
fnsave
pushf
addl
adc
sbbb
pop
les
mov
mov
jno
mov
sbb
lock
ret
jne
imul
xor
xor
xor
pop
push
push
or
flds
test
sbb
push
into
cmp
inc
dec
or
mov
hlt
xchg
fistps
daa
push
mov
sarb
sub
inc
and
or
cltd
inc
adc
testl
adc
xchg
sbb
cmc
outsl
inc
clc
jp
and
int
sarl
pop
das
insl
pop
dec
sahf
movsb
mov
jp
mov
xchg
jle
xlat
xlat
adc
in
mov
ret
lock
mov
jecxz
push
test
fs
mov
dec
cli
jecxz
fs
out
dec
mov
fs
popf
fmuls
sub
aam
cmpsl
lcall
fstps
dec
testl
mov
pop
sub
mov
jle
in
dec
int3
sub
sti
test
pop
inc
add
pop
ret
fistps
shll
xchg
sahf
push
xchg
js
aad
mov
mov
jbe
push
imul
and
sub
orb
test
ljmp
das
sub
aad
int
xor
pop
xor
pop
dec
mov
sti
pop
sub
push
cmp
adc
mov
jmp
int3
call
jmp
notl
or
popf
pop
out
sub
inc
jecxz
mov
fcompp
adc
mov
ficoms
sbb
aam
push
push
popa
gs
lea
cmc
jns
jae
les
dec
and
and
fildll
pop
aas
jo
sbb
cmp
or
jne
rclb
mov
jbe
push
xor
sub
lcall
out
jl
loopne
adc
xchg
insb
lahf
shl
jle
jmp
movsb
cmp
test
sub
cmp
sbb
sub
call
adc
mov
int
pop
add
stc
lods
push
int
in
mov
pop
aad
xchg
test
push
mov
incb
aaa
fwait
ljmp
pop
pop
sub
mov
inc
in
dec
sahf
into
inc
dec
pop
push
ret
outsb
lret
test
roll
imull
adc
inc
ficomps
mov
aaa
lret
loope
cltd
lahf
mov
adc
aaa
lahf
sbb
cltd
lds
ljmp
dec
pop
inc
addr16
dec
xor
xchg
enter
fcoms
mov
xor
addr16
push
sbb
and
bnd
dec
aad
lahf
in
dec
fsts
sbb
mov
fiadds
cmp
fs
pop
jns
das
pusha
xor
enter
mov
inc
xchg
or
ss
pop
pop
jb
sbb
mov
xchg
aad
shll
add
adc
mov
mov
into
cmp
mov
imul
add
push
fstpl
shl
lahf
insb
movsb
inc
mov
iret
iret
pop
enter
lret
mov
mov
adc
xchg
out
or
scas
daa
lahf
xchg
sbb
cmp
add
push
pop
cmpb
xor
jmp
xchg
rcrl
mov
and
pop
or
and
ret
iret
xchg
dec
mov
fnstcw
fdivr
push
cmpsb
adc
xchg
insb
pop
xchg
mov
push
dec
pop
add
lret
pop
movsb
and
sbb
shlb
scas
loope
and
gs
in
lret
push
arpl
pop
setnp
popa
stos
xchg
add
scas
dec
cld
es
loope
psubd
adc
dec
sub
lret
repz
ficoms
into
dec
js
pop
mov
cli
or
lods
popa
push
imul
les
in
xchg
push
sbb
adcb
mov
sbb
jb
ret
push
scas
les
inc
das
sub
mov
lods
pushl
push
data16
loop
add
movsl
clc
pop
mov
adc
jnp
fsubrs
pusha
or
xlat
insb
sahf
adc
aas
xchg
inc
out
and
and
push
jno
das
xor
popa
int
lret
das
fmuls
mov
loop
in
movsl
push
adcl
dec
std
cmp
mov
daa
jae
mov
clc
aaa
push
push
scas
movsl
fisubl
mov
mov
rcll
mov
out
sbb
inc
push
fstpt
lret
lret
add
lods
std
sbb
pop
repnz
cmc
mov
inc
xor
cwtl
lret
mov
movsl
enter
cmp
inc
insb
pop
mov
mov
and
dec
les
fwait
or
aas
scas
jnp
popa
cmpsb
and
xor
xchg
aam
movsl
aad
sub
dec
bound
and
pop
pusha
sbb
mov
inc
popf
jb
ja
add
jb
insb
push
repnz
jmp
fsubr
and
sbb
jmp
out
cmpsb
mov
out
sbb
fwait
stos
sarl
adc
xchg
jg
pop
jno
sbb
scas
cmp
cmp
jns
or
add
or
inc
test
xor
test
cmpsb
shl
sub
mov
lods
dec
bound
sub
pop
xchg
xchg
lds
add
lock
sbb
mov
and
enter
pop
fwait
aas
and
call
stos
dec
cld
dec
das
jo
push
dec
jl
mov
aad
pushl
inc
mov
out
cwtl
xchg
cmp
adc
es
ljmp
jae
add
gs
scas
push
xor
ljmp
inc
mov
out
gs
dec
js
paddsw
leave
popa
ja
or
xchg
mov
leave
mov
sub
movsl
nop
es
add
sub
pop
stos
mov
jge
test
and
jg
in
jb
dec
dec
mov
dec
arpl
scas
sbb
push
test
scas
das
mov
les
leave
push
test
std
das
sahf
arpl
hlt
mov
cwtl
jle
divl
xor
xchg
les
push
mov
ret
add
dec
adc
out
xlat
rep
movsl
adc
stos
lock
aad
popa
cmc
lock
je
hlt
scas
mov
add
loope
ficomps
adc
mov
sbb
popl
cmp
pop
push
or
mov
cmp
loope
test
mov
push
fdivs
fisubrs
addr16
int
pop
or
or
fstpt
sti
dec
push
cltd
pop
push
loopne
cmpsl
or
push
sbb
push
pop
fmulp
xchg
xchg
dec
movsl
mov
adc
sti
movsb
int3
xchg
inc
aas
out
dec
aas
es
mov
or
pop
push
or
inc
ficoml
aaa
mov
mov
js
clc
or
cli
inc
adc
xchg
xadd
xor
js
mov
pop
repz
mov
sahf
fisttps
jge
xor
das
sub
test
jmp
sbbb
aaa
inc
inc
daa
fldl2t
adc
cmp
addr16
dec
sub
cmp
fldcw
xchg
xor
in
xor
push
and
stc
jle
pop
popf
bound
aaa
mov
cmp
js
adc
push
mov
sbb
xlat
lahf
fsubrs
jns
cli
and
lds
and
mov
inc
enter
sub
cmp
aas
repz
dec
enter
clc
das
cmp
xchg
and
ret
xchg
cmpl
jnp
dec
cmp
cmpb
dec
std
clc
or
loopne
pop
idiv
mov
xchg
imul
xchg
out
clc
int3
in
push
sub
sbb
xor
adc
mov
sbb
addr16
fdivs
repz
shll
mov
push
push
jae
fwait
ret
lahf
sbb
jge
jb
cs
dec
ss
mov
nop
mov
mov
pop
imul
stos
jae
test
cltd
fwait
or
fiadds
add
xlat
clc
jno
fsubp
jg
fs
pextrw
test
andl
outsl
inc
and
out
push
imul
popf
sti
hlt
cwtl
fs
es
xlat
pop
mov
aad
cmp
xor
mov
lcall
frstor
insl
in
in
sbb
ja
das
adc
orl
in
scas
mov
mov
inc
fwait
out
mov
and
xchg
stos
popa
shlb
sbb
cmpsb
add
sub
dec
adc
sti
or
xorl
inc
pop
cmp
xlat
xchg
cmpsb
sbb
sbb
cwtl
lods
mov
cmpl
pop
cmpsb
imul
push
rol
xchg
jg
xlat
aaa
mov
gs
iret
sbb
ja
divb
mov
add
sub
scas
mov
icebp
mov
outsb
adc
mov
mov
push
pop
xchg
ficompl
mov
movsl
lods
sub
fsubr
push
pusha
xchg
jl
xchg
popa
mov
loope
or
xor
movsl
fildl
jns
sbb
in
punpcklwd
sub
push
cld
insl
and
lcall
push
jns
cmpsl
call
or
adc
sub
inc
stos
inc
add
flds
and
xchg
xor
jecxz
lcall
push
mov
js
mov
or
dec
pop
cmp
sbb
xor
dec
mov
mov
aaa
lret
sub
scas
ds
ret
fists
push
xchg
xor
shrl
mov
jecxz
and
mov
push
lods
stos
xor
ret
popf
sbb
int3
inc
mov
mov
ljmp
push
sub
pop
mov
sbbl
rcrl
and
inc
out
cmpb
and
out
push
adc
cmp
lret
dec
adc
outsl
aam
enter
repnz
repz
jbe
pop
jb
mov
adcb
xlat
mov
mov
nop
das
jo
jmp
add
test
ds
mov
clc
mov
lcall
add
pop
fldt
add
lods
push
push
addr16
pop
push
and
sbb
arpl
jmp
ret
dec
stc
push
daa
push
dec
xchg
jmp
inc
icebp
loope
jae
test
mov
lock
jo
sbb
repz
fadds
adc
xchg
xor
mov
lds
mov
rcrb
push
push
mov
mov
push
lea
adc
jmp
mov
std
insb
cmp
ret
dec
add
mov
sub
testl
lret
fnstcw
ss
or
andb
imul
dec
int
mov
adc
pop
cmp
adc
and
push
cmp
pop
adc
mov
scas
sbb
sbb
scas
fwait
xor
lcall
loopne
imul
add
pusha
int3
dec
pop
inc
mov
fmull
mov
nop
test
fwait
ljmp
mov
mov
push
and
setne
int3
lcall
int3
lcall
iret
lcall
xlat
and
xor
and
loop
rcrl
xchg
js
lahf
int3
fistl
and
out
pop
inc
fwait
mov
mov
cmpsl
xchg
xchg
sub
lahf
push
mov
or
rclb
push
flds
movsl
adc
enter
lea
push
roll
aam
into
add
daa
aas
popa
popl
mov
arpl
fstpl
cmp
jb
push
stos
sub
es
arpl
or
lea
loope
push
ret
and
inc
xor
andl
or
xchg
ds
jno
jge
insb
rol
divb
inc
cmp
or
je
and
and
jns
movsl
mov
ror
dec
leave
xor
loop
push
in
jl
inc
xor
notb
mov
push
push
mov
xchg
adc
sub
pop
popf
add
add
mov
or
jbe
insl
std
jae
hlt
push
jo
adc
jo
lret
sub
adc
nop
fsubrs
jns
mov
movsl
dec
dec
push
cld
and
lock
sbbb
pop
cmp
and
fstp
jb
cs
sbbl
out
out
aaa
sub
imul
adc
addl
or
rorb
mov
push
mov
push
or
sub
insb
jno
mov
cs
es
cmp
push
mov
sub
push
inc
ja
fstps
dec
into
jle
enter
push
push
mov
shll
in
push
push
flds
push
dec
inc
adc
mov
popa
xchg
mov
in
add
and
out
jbe
in
add
push
xchg
xchg
popf
jo
fildll
testl
loop
jne
pop
pop
jl
or
pop
inc
push
push
adc
imul
lock
mov
sbb
out
stc
jnp
mov
orl
mov
inc
inc
and
out
push
pop
stos
or
cmp
jno
pop
mov
ljmp
and
push
inc
enter
ret
mov
fcompl
pop
outsl
aad
and
dec
cmp
aad
jmp
aam
outsl
ret
lods
cmp
je
mov
dec
bound
in
mov
mov
jmp
fldcw
and
loop
mov
mov
jecxz
fbstp
inc
mov
imul
mov
testl
int3
inc
sti
cmp
mov
adcb
out
sbb
dec
addr16
sarb
test
jg
popf
xor
outsb
gs
cmp
mov
repnz
cmp
shrb
push
jl
je
aad
imul
cmpb
lahf
pop
sbb
into
aad
inc
dec
inc
ret
ficomps
fmuls
bnd
frstor
sub
mov
cli
bound
or
pop
and
pop
aas
std
cmp
repnz
jb
xchg
push
aas
cli
fistpll
pushf
aaa
jecxz
movsl
push
pusha
cmp
and
xchg
xlat
shll
lock
sbb
sub
arpl
jbe
mov
fst
pop
sub
cwtl
push
repnz
insl
add
cld
adcl
in
xor
pop
mov
push
test
ja
out
cmp
test
rcll
sbb
mov
mov
enter
imul
xchg
out
mov
inc
cmpb
pushf
ljmp
push
out
mov
pop
push
movsb
push
fidivrs
add
fadds
shlb
jp
xchg
push
js
pushf
icebp
mov
cmp
adcl
scas
add
loop
add
lods
shll
lock
adc
lcall
je
dec
daa
sbb
inc
data16
loope
jle
inc
aad
shlb
inc
cmpsl
or
lds
hlt
push
insl
shll
js
xchg
dec
sbb
div
jno
mov
jp
fsin
or
fsubrl
clc
jmp
or
std
dec
cli
dec
adc
dec
sahf
mov
cmc
cmp
mov
pop
fwait
push
push
out
and
mov
sbb
dec
xchg
pushf
mov
cwtl
and
push
sahf
pop
rcl
mov
scas
inc
subl
hlt
or
ja
push
dec
mov
dec
sti
imul
std
sbb
in
sbb
sbb
and
leave
subl
lahf
pminub
outsb
mov
cmpsl
mov
pop
leave
daa
jo
js
and
mov
loop
pop
movsb
insl
jno
rol
pop
sbb
int
jne
fmul
push
mov
push
sbb
rorb
dec
test
test
adc
mov
call
sahf
xchg
aaa
mov
leave
pop
dec
ficoml
sti
mov
mov
push
out
stos
outsl
aaa
mov
loopne
sub
dec
js
fwait
popa
mov
mov
adc
sbb
je
jge
lods
subl
lods
cmp
notb
pop
pushf
mov
int3
call
inc
or
and
test
int
scas
push
dec
mov
sar
xchg
inc
js
jecxz
in
push
cltd
jne
mov
in
stc
push
jl
and
push
movsl
decl
inc
mov
push
mov
xchg
sbb
ret
mov
ja
insl
sub
call
out
pop
mov
stc
addb
mov
movsl
daa
adc
fucomp
mov
add
push
idivl
dec
pop
or
sub
out
aad
xor
cmp
into
addr16
sbb
nop
jmp
roll
fildl
clc
scas
stos
pushf
in
mov
dec
scas
sbb
add
or
movsl
dec
fiaddl
sub
pop
imul
mov
addr16
fisttpll
fiadds
outsl
cs
leave
jne
sub
dec
gs
push
push
dec
data16
mov
mov
pusha
cs
pop
sahf
sbb
lret
fimuls
inc
inc
xchg
fsubp
mov
test
xchg
shlb
inc
xor
mov
mov
add
add
fcomp
iret
mov
add
sub
aam
pop
add
push
add
mov
mov
cmpsb
adc
rclb
sbb
mov
jnp
or
cmp
mov
push
add
insl
add
and
xor
inc
add
push
sbb
sub
icebp
cmpsb
inc
test
sbb
out
pop
lds
lock
pop
add
sbb
loopne
sub
xchg
cmp
andl
pushf
cli
dec
outsl
or
repnz
or
mov
cld
sbb
mov
dec
inc
popf
fstp
add
out
nop
jbe
adc
ja
addr16
outsl
insb
inc
sbb
dec
dec
jmp
mov
push
jbe
loop
jnp
roll
jbe
movsb
js
xor
cwtl
pop
ljmp
add
fldt
and
scas
je
enter
into
shll
imul
xlat
test
mov
test
sarb
cmp
outsb
rol
or
ds
std
jnp
das
cmp
adc
inc
pop
push
mov
sbb
jbe
mov
jb
jb
loopne
xchg
in
les
icebp
fnstenv
fxtract
in
jne
cld
mov
mov
sti
mov
fidivl
cmp
lret
cmpb
or
xorl
mov
sub
pop
dec
inc
xchg
divl
dec
or
sarb
cmpsl
pop
sahf
adc
mov
out
faddp
xor
xlat
lahf
out
lret
push
cmp
std
shl
aam
push
imul
sbb
mov
or
push
mov
pop
mov
inc
sub
xchg
mov
push
in
adc
ljmp
stc
dec
fstl
sti
insb
icebp
int
rorl
hlt
inc
repz
or
rcrl
int
xorl
pusha
lret
shll
cli
push
pop
xchg
lret
loop
mov
add
add
fdiv
cmp
inc
dec
add
rcrb
and
push
inc
dec
cmpsb
cltd
cld
in
aas
daa
scas
or
loope
jnp
adc
pusha
rcr
sti
js
pushf
inc
stc
ds
push
mov
add
repnz
lea
orb
fnstenv
mov
in
repnz
ja
sbb
cld
andl
dec
test
incb
push
lock
shlb
test
fcomi
dec
imul
dec
icebp
sbb
lcall
scas
lret
lcall
stos
push
es
cmp
pop
push
test
and
push
bound
xor
cmc
ret
jb
sub
inc
sti
dec
pop
lret
xlat
push
pop
imul
imul
lods
popa
addr16
cmpsl
stos
jnp
jbe
je
sbb
jae
mov
and
mov
insl
lods
adc
test
or
js
hlt
jmp
cmpsl
sti
inc
ret
bound
cmpsl
dec
in
pop
lods
mov
jns
lds
test
sbb
jmp
jl
jmp
stos
adc
mov
push
iret
cmp
out
mov
pand
cmc
mov
out
testl
pop
in
movsb
sti
out
lret
xor
out
adc
and
int3
mov
in
mov
movsl
jnp
push
pop
lea
sub
stos
popa
xlat
fs
mov
cmpsl
adc
inc
cmp
ja
push
divb
add
mov
mov
add
mov
stos
adcb
aam
mov
inc
adc
xor
dec
jo
add
xor
push
cmp
scas
jg
lds
fs
lea
inc
dec
xor
cmc
push
icebp
aaa
das
pop
jb
lahf
and
cmpb
lock
arpl
scas
movsl
jle
fmul
testl
cmp
push
cmp
mov
sbb
data16
loope
clc
ret
lods
sub
push
das
jge
jg
sbb
push
inc
enter
xchg
movsl
cli
shlb
xlat
outsb
and
inc
pop
jl
iret
cmp
xchg
sub
or
dec
add
add
pop
lcall
or
and
xchg
sahf
dec
push
out
cmp
xchg
out
mov
sub
into
fidivs
dec
pop
add
dec
cmpsl
ds
add
push
add
nop
mov
aaa
cli
push
addr16
test
call
in
dec
sbb
ds
xor
jmp
pop
lcall
add
cwtl
lea
pop
jge
dec
out
dec
add
sahf
ret
mov
addb
insb
mov
mov
cmc
movsl
or
neg
dec
mov
xor
test
push
scas
mov
sub
mov
bound
adc
out
sbb
out
push
leave
mov
bound
inc
sub
lods
dec
push
pop
and
pop
mov
aam
test
and
jp
lret
shll
lahf
lea
jb
iret
outsl
push
xchg
mov
callw
jp
hlt
xor
cmp
inc
sub
arpl
js
shl
ret
adcl
sbb
outsb
imul
jecxz
push
sub
mov
sti
loope
xchg
dec
add
inc
stos
arpl
in
mov
test
and
mov
ja
xchg
adc
stc
push
movsb
pusha
int
inc
lea
mov
test
inc
rcrb
pop
repz
xorl
shl
aam
popf
sbb
inc
into
pop
adc
lahf
enter
sub
ljmp
xchg
cld
inc
add
aad
adc
jno
imulb
cmc
push
movsl
and
inc
stos
fisubl
bound
inc
lock
test
xor
inc
add
call
test
or
jb
push
pop
lock
mov
bound
fisubrs
pop
add
mov
flds
jno
hlt
jp
pop
aaa
dec
push
or
jo
je
ja
jns
inc
pop
jecxz
and
adcb
sbb
ret
enter
sbb
lret
shufps
jno
das
cmp
addl
sbb
lret
js
wrmsr
inc
xlat
pushf
xchg
push
push
jmp
push
push
cmp
jl
lock
sbb
sbb
push
inc
negb
ror
lods
lods
inc
decb
xchg
inc
xchg
or
add
jle
outsb
es
hlt
jge
xchg
or
push
mov
sub
jp
rcrl
scas
mov
dec
cli
nop
push
cmpsl
les
and
test
xchg
enter
push
rol
inc
sbb
test
aad
add
or
mov
add
cmp
and
imul
inc
pop
push
sbb
adc
stos
xchg
jb
adc
jg
cmp
push
jl
pop
lods
inc
ret
adc
pop
xchg
push
sub
xor
cmp
mov
fldl
test
subl
cmpsb
xchg
mov
pop
jmp
xchg
mov
sbb
add
scas
xchg
sbb
pop
inc
outsb
stc
sub
inc
cltd
mov
idivl
add
lahf
out
mov
mov
arpl
jmp
dec
dec
mov
scas
xchg
test
inc
jo
dec
mov
sub
stc
dec
sahf
cmpb
sub
add
sub
in
mov
outsl
and
mov
xor
imul
adc
stos
adc
cmp
arpl
add
iret
rorb
cmp
ja
call
adc
mov
mov
xor
in
sbb
sbb
cmp
repnz
repnz
out
mull
clc
ljmp
ficoml
fwait
xchg
call
rcrb
xor
dec
pop
push
fsubrs
jnp
ljmp
jge
les
push
fistps
dec
dec
and
test
fcomps
mov
xchg
push
inc
out
sbbl
push
shr
xchg
hlt
ficompl
add
mov
and
mov
out
mov
xchg
mov
mov
sbb
sub
das
rclb
out
ljmp
fs
fimuls
and
aaa
adc
xchg
iret
pop
repnz
ds
lods
jns
sub
std
cmp
jg
shl
arpl
fldcw
aam
lods
pop
and
in
mov
rcll
pop
subl
push
incl
inc
dec
into
aad
mov
inc
mov
call
loope
xor
inc
pop
pop
add
push
subb
jmp
xchg
lock
xor
mov
stos
or
push
xor
pushf
mov
imul
dec
and
inc
xchg
push
ja
add
mov
xchg
aas
cmp
mov
loop
ljmp
es
fistpl
lcall
das
imul
or
xor
xchg
mov
out
adc
cmp
mov
pop
pop
jae
push
jbe
pop
mov
shrl
adc
int
push
mov
mov
mov
cs
add
push
or
jno
mov
sub
add
adc
adc
js
cmp
fsubl
jl
lock
inc
mov
mov
jmp
cmp
je
mov
imul
popf
pop
sahf
sbb
test
sbb
mov
movsl
mov
aad
mov
out
ja
es
inc
repnz
mov
inc
inc
push
sub
or
pop
std
hlt
test
sub
repnz
nop
push
orb
shl
mov
lahf
imul
out
je
andb
sub
jle
stos
pop
cmp
adc
xchg
ds
add
pop
cmp
and
and
stos
and
pop
rorb
lea
sub
pop
xorl
fldt
mov
cmp
clc
vmovapd
xchg
addr16
push
and
jge
cld
and
sub
imul
pop
mov
xchg
mov
mov
popa
dec
adc
movl
xorb
hlt
inc
sahf
and
int
aaa
push
jp
xchg
sbb
push
jge
or
xchg
xor
and
mov
xchg
mulb
jnp
cwtl
cltd
add
ficompl
push
or
lahf
das
xchg
fildl
pushf
mov
lcall
outsl
mov
mov
xorb
mov
sub
push
push
pop
add
or
lahf
jg
pop
push
pop
pushl
and
in
xchg
or
fidivrs
fidivs
xchg
stos
or
mov
sbb
mov
ds
test
stc
push
cmp
call
xor
stos
sahf
rol
rolb
lods
jge
into
cs
jg
mov
xor
jns
add
ret
movsl
xor
xchg
inc
jae
cwtl
and
repnz
lods
jl
fsubr
jle
push
pusha
rorb
in
data16
mov
add
scas
xlat
mov
out
mov
xor
sub
movsb
jo
insb
pop
push
inc
sbb
cmpsb
mov
cmc
fs
mov
mov
sub
in
pop
int3
jg
lds
push
and
scas
push
push
cmp
rcrb
es
dec
push
dec
lock
outsl
jmp
pushf
mov
xchg
dec
inc
cld
hlt
loop
xor
push
outsl
repnz
cli
into
pop
fcmovnu
pop
jmp
fucomi
jnp
or
mov
push
pop
pop
jae
cmp
cwtl
dec
sub
mov
pushf
xchg
cmpsb
subl
gs
pop
jbe
je
hlt
rcrl
sub
jb
mov
iret
aas
orl
and
sbb
repnz
fld
lcall
std
in
out
in
add
outsb
aaa
fists
push
pop
sarb
push
xor
cltd
fiaddl
inc
decb
sub
pop
test
in
jmp
add
insb
or
lods
lods
icebp
push
add
dec
push
adc
jns
fstl
mov
mov
push
pop
insb
out
mov
fidivs
jb
and
ja
call
cmp
jae
cmp
and
cmp
xchg
mov
adc
or
cmp
jne
mov
jp
jne
pop
cmp
les
pop
sbb
xor
sub
in
inc
sub
inc
cmp
mov
imul
lds
sbbl
cmpsl
into
cwtl
shll
xchg
scas
in
in
cmc
sbb
lret
pop
cmovl
adc
scas
cmp
inc
loope
lea
mov
cs
lods
jp
lods
mov
ds
imul
adc
pop
cmp
inc
clc
pop
jp
roll
scas
movsl
orb
mov
xor
pop
rol
dec
inc
aaa
mov
int
or
xchg
mov
cwtl
pushf
sub
jmp
jmp
std
mov
roll
mov
call
loop
sarw
and
nop
ret
jae
es
fdiv
mov
jle
push
push
int
test
pop
leave
push
inc
das
adc
loope
dec
ja
faddl
test
arpl
in
jno
or
fs
cmp
sbb
mov
adc
mov
cmp
aas
lds
sub
sub
ljmp
std
ret
dec
jecxz
mov
outsl
shrb
enter
jp
inc
xor
iret
push
repz
out
mov
jns
add
cld
cmpsb
and
push
std
fs
int
mov
aaa
scas
sbb
push
push
ret
imul
fbld
cmp
push
lds
dec
loop
popf
aas
rcrl
push
outsl
imul
ja
scas
sar
les
xor
call
stos
repz
movsb
fisttpl
or
es
inc
sbb
mov
lahf
and
rcl
das
fs
dec
stc
pop
pop
sarl
fmuls
arpl
push
ret
dec
adc
pop
cmpb
fidivrl
pop
fiaddl
jle
xor
and
add
jle
adc
mov
or
mov
mov
cmc
cwtl
inc
mov
push
insb
nop
pop
js
inc
mov
push
movups
cmp
outsl
mov
jg
xlat
sub
dec
jge
out
sub
cmpsl
sub
or
outsb
mov
enter
mov
aad
pop
add
mov
sub
je
mov
sbb
ss
adc
roll
in
jmp
addb
je
popf
in
fs
mov
pop
dec
es
js
loop
pop
jnp
cltd
jne
sahf
xchg
clc
rclb
insl
xchg
outsb
dec
sti
push
and
xchg
pop
xor
pop
stos
into
fisubs
data16
aam
xchg
pop
cmp
gs
cmp
mov
push
xchg
lcall
iret
pop
pop
sbb
pushf
add
fcompl
pop
lahf
or
andl
in
sub
cwtl
push
mov
mov
frstor
repz
idiv
dec
mov
insb
sub
int
cmpsb
movsl
adc
ret
mov
mov
mov
mov
mov
xorb
mov
sub
nop
or
arpl
cmc
and
cwtl
dec
repz
leave
pop
pop
cs
stos
mov
call
into
jns
push
mov
mov
cmp
pop
dec
out
jge
les
out
mov
cmpsl
push
and
push
lods
fnsave
leave
inc
stc
xchg
lret
mov
and
pushf
xchg
mov
pop
fiadds
adc
outsl
xchg
mov
xchg
mov
mov
ror
pop
add
shrl
sub
sub
mov
jno
call
xchg
jne
sub
ds
mov
mov
push
scas
insl
ret
pop
test
pop
mov
loope
pop
xor
and
xor
xchg
mov
fisubrl
out
in
cmp
nop
jae
pusha
dec
andl
orb
outsl
ja
mov
and
test
cwtl
into
test
mov
pop
dec
xchg
jge
xorl
nop
mov
jno
fisubl
jns
pop
pop
pop
jb
ret
movsl
lds
test
sub
sbb
ljmp
pop
dec
pop
popa
cmp
xlat
out
ret
jbe
dec
lock
inc
inc
xlat
inc
jle
or
decb
lods
ja
nop
loop
sbb
dec
adc
add
and
push
nop
repnz
add
das
les
out
sbb
inc
sub
mov
xchg
jnp
jno
lods
xchg
sbb
cmp
int3
test
mov
nop
cmp
in
in
ss
adc
push
aam
and
insl
test
rcrl
or
mov
fsubrs
sar
je
mov
stos
mov
into
int
lret
or
pop
cmp
cs
mov
scas
xchg
test
jno
adc
out
push
fwait
cmpsl
or
shl
dec
jp
fistps
mov
mov
outsl
out
leave
mov
adc
leave
leave
dec
add
mov
lea
roll
mov
loopne
lcall
enter
mov
sub
fs
test
adc
std
lods
jg
add
gs
and
mov
xor
cmp
jb
jg
gs
adc
jo
pop
call
loope
jbe
es
shrl
adc
fbld
fs
dec
cmp
setnp
out
mov
add
xor
and
clc
push
mov
pop
xor
lea
xchg
push
fists
mov
dec
std
into
les
arpl
hlt
js
push
inc
jb
loop
ds
enter
dec
test
mov
jb
push
or
pop
das
dec
and
jb
fnstsw
xor
xchg
out
mov
jbe
sub
mov
scas
and
out
push
push
dec
jge
mov
push
movsb
imul
xor
push
aam
xor
jp
xchg
mov
mov
push
jp
xchg
xlat
or
out
push
filds
mov
outsl
add
adc
pop
xchg
out
ucomiss
inc
inc
dec
xchg
fimull
lock
bound
enter
shl
xlat
pop
adc
xor
leave
cmc
lock
jb
loope
rorl
lahf
in
adc
inc
sub
add
jnp
and
mov
loopne
sbb
mov
inc
or
xchg
sub
push
movsl
enter
mov
sbb
arpl
loope
popa
scas
cvtpi2ps
xor
pop
cmp
push
pop
pop
gs
push
test
push
inc
cmc
outsb
outsl
xor
mov
aaa
cmp
enter
inc
push
je
pop
out
or
imul
mov
pop
pusha
add
sar
clc
or
or
mov
cmp
jge
pop
xor
fiaddl
mov
into
pop
clc
jno
lock
jb
add
jno
vpsadbw
ds
or
loopne
mov
test
mov
mov
add
std
jge
sti
and
call
add
push
xlat
lahf
mov
popf
push
mov
out
shl
add
push
or
mov
imul
pop
push
roll
fmuls
andl
or
fcoms
rcll
sbb
cmp
fnstenv
mov
aas
aam
push
sbb
dec
das
adc
xor
jmp
loop
jne
add
push
mov
arpl
jnp
scas
and
stc
je
sub
xor
shrl
push
jge
jp
stc
sub
xor
dec
add
sub
dec
outsl
cltd
pop
jge
iret
xchg
jb
insb
inc
jp
mov
insl
xor
sub
popf
add
jbe
dec
push
mov
add
fbld
xor
ja
popf
in
cwtl
push
pop
sbb
movsl
add
cmp
mov
std
sub
loop
push
mov
stos
lret
push
es
mov
mov
nop
add
sahf
push
imul
shrb
and
lret
or
add
mov
icebp
js
hlt
fsub
sbb
mov
imul
loope
mov
pop
orl
push
jne
lods
out
jae
mov
push
xchg
scas
and
dec
arpl
loop
mov
dec
jb
clc
movsl
aam
in
xchg
ret
dec
fucomi
fisubrl
xor
xlat
xor
push
lods
or
test
or
lea
and
hlt
mov
jecxz
test
jno
int
in
insl
sti
rcll
mov
pop
mov
and
or
ror
xchg
stc
pop
jno
rol
popf
mov
or
mov
push
xor
cmpsl
mov
cmp
inc
jmp
cmpsl
aam
icebp
jle,pt
mov
push
inc
repz
nop
lock
stc
add
call
sub
ret
dec
mov
pop
sbb
adc
jno
xchg
sub
cli
cs
mov
sbb
jno
lods
in
jns
out
xchg
lods
std
mov
sar
inc
jmp
lahf
add
js
popf
push
or
shlb
fildll
subb
data16
aam
dec
pop
push
pop
enter
push
test
mov
dec
dec
ss
imul
cmp
mov
divb
dec
add
pop
and
aaa
sub
pushf
add
orl
fldcw
scas
xor
clc
push
sbb
out
nop
lcall
outsb
dec
mov
aaa
push
and
pushf
sbb
hlt
lahf
std
repnz
mov
dec
xor
add
sub
fistpl
mov
fmuls
stc
lret
mull
pop
jmp
aas
lcall
movsb
dec
or
stos
xlat
mov
sbb
jns
mov
pushf
clc
pop
pop
cs
mov
add
or
je
lret
push
popf
mov
adc
sti
push
mov
mov
jae
inc
bound
aas
test
adc
or
add
push
inc
repz
orb
jne
sahf
aad
adc
dec
push
sbb
lahf
loope
mov
cs
mov
shl
jg
fidivl
mov
shr
aaa
fists
pop
in
add
fcompl
scas
push
addr16
lods
je
shrb
mov
shl
std
adc
sub
mov
je
mov
iret
mov
pop
cltd
fnstenv
mov
aad
adcb
les
sbb
push
cmp
jmp
mov
fldcw
adc
mov
push
ficompl
repnz
mov
xorl
movsl
out
dec
aam
xor
lods
test
mov
iret
adc
popa
jnp
mov
sbb
das
xor
inc
fs
sub
or
adc
xchg
mov
test
lret
data16
mov
stc
pop
add
cld
push
inc
iret
xchg
out
dec
bound
xchg
js
mov
jg
adc
mov
sbb
xor
pop
lods
xlat
mov
imul
xor
in
fisubrl
popa
sub
jne
cmp
dec
cmp
imul
sbb
mov
les
xchg
mov
fnstsw
push
jg
pop
fdivr
cmp
jecxz
xchg
cmp
es
aad
mov
cmp
movsb
xchg
rorb
insb
movsl
das
push
dec
xor
outsl
cs
cmc
ret
das
and
inc
xorb
mov
mov
xchg
hlt
mov
sbb
mov
add
pop
lahf
insl
add
lret
fwait
loope
fwait
scas
push
xchg
mov
mov
xchg
xchg
mov
adcl
lds
cltd
fstpt
jae
cmp
mov
mov
idivl
xchg
sbb
xor
rolb
xchg
push
mov
push
add
mov
or
and
jge
or
lret
xor
rorb
fists
fstps
daa
mov
insl
popf
int
or
fucomp
arpl
andb
sbb
mov
mov
scas
dec
mov
mov
push
ss
mov
test
or
fisttpl
adc
pop
andb
mov
add
leave
in
outsb
aas
push
lcall
and
jle
inc
and
popl
push
shll
sub
fcompl
cmc
dec
jbe
inc
xchg
mov
add
stos
lods
mov
movsl
std
out
mov
add
ret
insl
in
leave
xlat
movsb
aam
lea
cmc
in
ds
in
mov
adc
outsl
lret
push
in
or
or
outsl
mov
je
push
mov
out
pop
arpl
stos
inc
faddl
xchg
mov
pop
or
ret
dec
dec
out
mov
pop
jne
dec
fisubrs
push
cltd
mov
lods
ret
inc
lahf
xchg
rcll
stc
mov
fidivl
sub
cmp
ds
stos
pop
rcrb
mov
ljmp
mov
scas
rclb
xchg
xchg
pop
mov
test
leave
cmp
and
cmp
pop
push
aad
scas
rclb
cwtl
dec
xchg
inc
add
jle
cmp
outsb
pop
ja
xor
mov
add
inc
ficoml
fs
sbb
call
ss
outsl
mov
sub
insb
mov
jl
cld
mov
mov
xchg
out
pop
testl
dec
aad
or
add
xchg
xor
add
scas
sahf
in
dec
push
fwait
addr16
jge
mov
mov
push
dec
sub
loope
imul
decl
push
mov
std
xlat
sbb
fld
cs
outsb
xchg
mov
nop
sbb
lcall
or
jb
push
sub
icebp
pop
jbe
lret
cmp
inc
imul
jbe
enter
pop
das
out
scas
cmpl
aaa
jecxz
pusha
mov
xor
ds
fmull
lret
mov
or
mov
push
rcrl
dec
and
mov
test
rcl
icebp
mov
lea
jl
xor
push
adc
ss
jb
jmp
and
stos
mov
call
dec
clc
dec
mov
lret
mov
add
popa
cli
xchg
xchg
loop
cmp
mov
sub
mov
ss
sub
pop
adc
and
ja
out
cs
inc
adc
mov
adc
push
out
jne
sbb
add
daa
clc
xor
sub
or
add
sbb
dec
push
xchg
pop
inc
fimuls
insl
imul
cmp
int
cmp
add
or
fidivrl
insb
add
rcrl
lds
out
mov
jle
cmp
cli
stos
jnp
hlt
or
inc
call
sbb
mov
xchg
mov
mov
rcrl
lods
sbb
cmpsl
sub
or
nop
out
sub
xor
test
mov
in
add
outsl
pop
add
scas
scas
ret
test
stos
and
push
adc
fwait
push
or
sbb
add
pop
push
xchg
push
xor
cmp
outsl
sahf
push
add
adc
pushf
xor
out
and
or
inc
pop
or
ljmp
out
ds
mov
leave
mov
negl
sub
xchg
xlat
stos
setnp
dec
mov
mov
push
adc
loopne
push
and
les
inc
push
ss
sar
and
sbb
call
sbb
cmp
ret
pop
insl
inc
scas
mov
dec
and
je
xchg
xlat
xchg
and
in
int
cltd
mov
loop
adc
mov
lcall
add
push
mov
leave
dec
repz
push
inc
jmp
adc
xor
xchg
mov
das
int3
and
mov
adcb
adc
push
pusha
shlb
or
sbb
sub
inc
adc
mov
dec
push
push
xchg
or
adc
dec
neg
dec
ds
mov
dec
lret
sbb
shlb
xchg
inc
adc
movsb
add
mov
mov
sub
lret
out
xor
out
xlat
sbb
call
sbb
popf
jbe
lret
cmpb
adc
xchg
dec
pusha
ret
fdivl
in
out
jns
lds
dec
or
loop
data16
pusha
xor
repz
cmp
xor
test
test
shrb
fcoml
fs
lret
sbb
xchg
mov
push
inc
xor
mov
inc
mov
mov
adc
filds
int
scas
add
movsb
mov
ss
andl
ficoml
popa
mov
test
push
aam
lods
lds
xchg
leave
xchg
add
and
pop
inc
mov
bound
xchg
ss
mov
and
sbb
fucompp
jns
mov
and
and
xor
jle
mov
mov
loop
inc
leave
mov
xor
call
sbb
adcl
xchg
repz
dec
lcall
daa
xor
and
test
out
stc
jae
lods
cld
cmp
mov
stc
dec
and
aas
ja
lea
scas
sub
fstpl
ret
xor
cmpsb
dec
stos
test
test
into
icebp
mov
push
call
mov
dec
dec
push
aam
movsb
inc
sarb
xchg
jbe
mull
mov
daa
xor
xchg
inc
call
ds
mov
outsb
fsubl
inc
xorb
dec
insl
push
pop
jg
push
in
repnz
data16
sbb
cmpsl
fstpt
add
pop
xor
out
popf
and
jmp
pop
sahf
jo
es
fs
pop
jmp
push
testl
sub
push
xchg
xor
loopne
adc
jecxz
pop
or
pop
dec
in
cmp
xlat
test
int
or
aad
xchg
sub
mov
dec
pop
in
bound
inc
jne
cmpsl
popa
mov
jnp
scas
ljmp
pop
mov
mov
sbb
add
std
cwtl
sub
hlt
fsub
jmp
push
mov
nop
pop
lds
mov
in
gs
push
push
jne
ljmp
out
scas
dec
loope
outsl
push
hlt
mov
loope
scas
pop
or
dec
cltd
outsl
push
or
cmp
fwait
dec
inc
imul
in
hlt
insl
fs
adc
and
icebp
call
pop
dec
in
pop
lds
xor
out
lret
and
mov
jp
sub
xchg
cmpsl
call
add
lahf
out
bound
addl
mov
stos
fbld
scas
xor
cmpsl
mov
or
xor
sahf
and
imul
bound
inc
arpl
add
sub
into
movsb
iret
out
test
mov
shrl
dec
mov
mov
jnp
inc
call
pop
and
mov
pusha
and
mov
adc
stos
lret
xchg
outsb
jno
mov
adc
bound
test
jns
mov
cmp
movsl
or
ret
loope
sbb
cmpsb
lea
insl
push
jmp
cmpsl
mov
ret
push
pop
out
xor
and
repz
popf
xchg
xchg
arpl
cmpl
adc
jno
sbb
aam
xchg
push
roll
jmp
jbe
aaa
gs
pusha
stc
pushfw
push
xchg
inc
push
push
mov
mov
imul
enter
pop
jl
lcall
mov
inc
add
mov
loop
andb
and
pop
and
loopne
scas
xchg
add
mov
repz
fs
mov
ds
lcall
jo
loopne
xchg
shrl
cld
mov
mov
xor
jle
xor
mov
sbb
mov
mov
pop
stc
sbb
loope
sahf
addr16
cltd
xchg
imul
mov
outsb
sub
lods
xchg
jbe
jns
ret
adc
jae
in
xchg
sahf
sti
fsubp
lret
add
inc
mov
lcall
xchg
add
adc
adc
sbb
mov
out
in
push
movsl
mov
lea
in
jg
ljmp
ficoml
push
xchg
mov
insb
cmp
adc
mull
mov
or
mov
cmpsb
call
mov
pushf
mov
ja
in
mov
sub
jbe
loop
xchg
cmp
inc
in
gs
add
mov
jecxz
jg
xchg
or
repz
rolb
jbe
fiadds
mov
xor
xchg
aaa
aad
inc
es
xchg
adc
sub
pop
xor
fcom
cmp
xchg
adc
pop
aaa
data16
incb
mov
pop
mov
stos
sub
cmp
push
repz
shll
lea
lahf
je
out
xchg
xlat
xchg
dec
out
push
push
sbb
and
imul
mov
cs
add
mov
lret
cmpsl
pop
inc
fwait
into
sbb
mov
xchg
pop
xor
jg
xlat
enter
into
in
and
pop
mov
push
iret
insl
push
flds
fiaddl
sub
pop
out
test
sti
mov
xlat
es
sub
jg
sahf
out
frstor
mov
jns
sahf
test
mov
fs
sub
lea
mov
sbb
pusha
cmp
push
loopne
test
dec
shlb
popf
aas
enter
mov
jp
inc
and
cmp
lea
aas
and
mov
or
mov
rclb
sbb
push
cmp
cmp
or
addr16
xor
or
notb
inc
cmp
jmp
outsl
outsl
mov
dec
jbe
adc
mov
pop
out
sbb
mov
mov
scas
fdivs
ret
into
rcll
ret
ss
sub
daa
mov
repnz
push
imul
lahf
outsb
pop
mov
sub
sbbl
fldl2t
leave
xchg
sbb
js
aad
mov
mov
pop
iret
or
cmc
pop
xor
mov
out
popf
push
cmp
xchg
push
dec
mov
xor
jmp
ss
sbb
push
mov
or
js
shr
inc
pop
cmp
jbe
and
in
cld
jg
mov
xchg
cmp
dec
cltd
inc
nop
daa
mov
xchg
mov
int3
xchg
addr16
enter
clc
sbb
ss
fwait
pop
adc
mov
jl
sub
lahf
or
jnp
cmpsb
subb
fistps
cwtl
cmpsl
jl
push
subl
call
jle
out
andl
popa
pop
ret
cmp
pop
push
push
dec
out
mov
shll
push
fwait
loop
push
in
sbb
lods
mov
pop
adc
push
scas
lret
call
xor
jg
inc
rol
inc
or
pop
shll
pop
data16
incb
ror
stc
pop
inc
and
repnz
push
stos
add
or
xor
sbb
stos
sahf
add
jmp
dec
scas
aad
mov
jns
pop
in
das
lods
jno
popa
sbb
add
push
jbe
mov
jg
inc
sahf
nop
mov
icebp
mov
pop
sbb
mov
stos
pop
iret
stos
mov
pop
rcrl
decb
cltd
lcall
lods
ss
shlb
mov
lret
push
cmp
pop
jp
push
mov
divb
dec
push
add
aas
insb
pushf
mov
xchg
pop
sbb
pop
push
leave
adcl
pop
lea
nop
xchg
xor
ret
outsb
bound
jge
push
xor
and
pop
pop
repz
xchg
mov
sbb
push
out
mov
imul
jl
jb
lret
repnz
mov
sub
gs
sbb
and
push
or
inc
push
xchg
ret
inc
sub
jg
mov
xor
or
test
xchg
aad
mov
pushf
push
push
stos
push
aaa
xchg
push
jb
push
cmp
bnd
jo
inc
les
bound
testb
movq
jp
std
mov
popw
push
fldenv
pop
loop
mov
mov
roll
pushf
cmp
push
jp
or
hlt
fs
and
aad
mov
div
and
jns
dec
xchg
sub
xlat
stos
push
std
dec
adc
imul
ds
je
adc
xchg
bound
push
push
push
cmp
ret
cmp
lods
outsl
stos
or
cmpsl
push
pop
xchg
test
mov
scas
mov
push
lods
mov
mov
sub
mov
push
sub
or
out
loope
enter
push
push
mov
cmp
pop
ss
in
out
xchg
add
xor
stc
popw
aas
fdivr
bound
sbb
out
mov
adc
add
loopne
daa
testl
outsl
xchg
shll
fistps
jg
or
lret
test
or
dec
inc
loopne
cmc
dec
jmp
push
out
fiaddl
outsl
jns
inc
push
test
pop
dec
mov
lds
movsb
idivl
push
or
dec
das
scas
adc
mov
xor
jbe
int3
push
shll
pop
out
cld
cmp
loope
addl
jno
mov
xchg
dec
das
sbb
jne
pop
and
lret
mov
std
adc
add
xchg
cwtl
lods
mov
lods
ljmp
mov
adc
inc
xchg
mov
mov
aad
ss
mov
xchg
sarl
mov
aaa
mov
leave
out
xchg
movsl
mov
adc
data16
ret
roll
fldenv
jns
pop
enter
jg
mov
pop
xchg
ja
add
adc
int3
insl
fidivrl
fdivs
popf
cmpsb
jnp
cs
and
aam
mov
push
mov
jne
in
pop
aaa
mov
mov
mov
std
or
cmp
jl
les
in
and
subl
test
mov
add
repz
mov
stos
inc
push
sbb
icebp
shll
mov
sub
inc
xchg
in
mov
std
mov
fstpl
cmpsb
or
jmp
mov
data16
jb
lcall
push
fisubrl
movsb
xor
dec
shlb
insl
repnz
push
ss
aad
pop
outsb
push
movsb
and
movd
xor
lods
out
into
js
jne
mov
sub
mov
in
mov
jmp
stos
pop
push
je
loop
and
pop
cltd
mov
cmp
push
out
loopne
cltd
aam
or
lea
or
push
cmpsb
aam
xchg
les
mov
mov
push
daa
cmp
sub
addr16
std
sbb
lds
pop
cmp
mov
sub
dec
push
adc
imul
add
cwtl
xchg
mov
sbb
lods
push
jg
inc
and
icebp
add
cmp
mov
repz
xchg
jle
xlat
inc
roll
sbb
cmp
pop
dec
out
cmc
out
push
jbe
cwtl
in
jmp
clc
mov
cld
repnz
pop
repnz
sub
movsl
xor
pop
fisttpl
in
push
lock
add
inc
outsl
or
mov
out
mov
xchg
push
scas
jge
or
subl
je
cmp
aad
and
jno
mov
je
xchg
cli
dec
mov
clc
sbb
mov
lock
pop
sbbb
in
rolb
xchg
stc
test
ficoms
notl
daa
push
xchg
jle
cltd
add
mov
cmp
cmc
xor
in
or
bound
lock
sub
pop
jecxz
stc
dec
pop
test
or
inc
mov
mov
push
or
pop
or
jnp
js
pop
sub
stos
shrl
lret
xchg
inc
sti
clc
aaa
gs
ds
sub
ja
xorb
int
sub
movsl
ds
jge
or
dec
push
out
mov
stos
add
jecxz
pop
lea
push
inc
xor
insl
sbbb
idiv
inc
sbb
push
dec
mov
insb
cmp
pop
mov
mov
cld
xor
push
or
jge
and
mov
adc
sbb
mov
call
scas
dec
aad
mov
adc
fdivr
outsb
lea
sbb
subps
mov
add
test
mov
jno
lods
aad
loope
sbb
mov
push
daa
xchg
lret
cwtl
inc
add
and
repz
imul
test
lret
insl
pop
add
or
ds
xchg
jle
inc
and
inc
or
sub
fs
push
cld
mov
in
push
aam
jp
frstor
ficoms
adc
inc
daa
fldcw
add
cli
or
adc
iret
xlat
lcall
out
decb
aas
dec
xlat
cmc
dec
add
push
imul
sbb
imull
iret
mov
mov
movl
out
fwait
inc
shll
xor
jecxz
dec
cmp
aad
stos
icebp
arpl
and
pushf
adc
std
jno
popf
fmuls
xor
stos
sub
imull
addr16
mov
fildll
stos
jae
mov
adc
pop
push
jnp
ret
lea
popa
in
shll
psrlq
in
arpl
push
aas
cmc
add
gs
mov
or
subb
lret
inc
pop
pop
cli
xchg
xchg
ljmp
mov
cltd
cmc
inc
mov
ljmp
dec
sub
ja
outsb
out
push
xchg
testl
imul
push
jp
dec
inc
pusha
lods
mov
xor
stos
xchg
jo
push
hlt
sarb
xchg
jbe
sub
repnz
mov
or
sub
or
jg
addr16
add
and
jnp
test
and
dec
rcll
bound
inc
shl
mov
mov
and
pop
mov
in
xlat
cmpsb
aam
repnz
ffreep
mov
pop
pop
insl
shll
xchg
outsb
enter
mulb
jle
fstpt
mov
push
loop
mov
out
sub
test
clc
loopne
add
pop
imul
and
pop
movsl
sarl
cmp
sub
cmp
pushf
add
and
mov
lret
mov
jae
inc
fdivrl
dec
leave
and
inc
divb
aad
sub
cmpsb
push
xor
in
adcb
aad
jo
sub
pop
xchg
popa
sub
or
mov
dec
int
fldcw
out
push
sub
inc
ljmp
push
in
dec
sub
xchg
js
mov
xlat
in
sbb
in
push
mov
mov
pop
jecxz
fwait
sub
jmp
arpl
mov
xchg
xlat
and
jns
imulb
mov
loope
xchg
jb
cld
jl
adc
xor
stos
outsb
pop
int
pop
cmp
add
test
mov
insl
jecxz
fsub
xchg
dec
shrb
pop
or
cwtl
mov
movsb
jle
push
es
out
loop
hlt
sub
jp
adc
neg
push
mov
pusha
jno
inc
pop
and
dec
aaa
out
jl
pop
push
dec
outsl
dec
mov
mov
jmp
nop
rol
bound
pop
mov
xchg
das
fcomi
mov
cwtl
xor
inc
in
add
jo
in
mov
scas
xchg
pop
jns
sbb
mov
pushf
add
add
or
clc
movsb
ja
push
cmp
andl
cmp
mov
xchg
orb
mov
pop
sarb
adc
inc
mov
mov
pusha
or
repz
jp
jmp
push
rorl
aad
dec
shll
mov
xor
pop
cmp
dec
filds
adc
mov
int
int3
xchg
faddp
nop
pop
push
fmulp
and
out
jno
call
test
aam
test
cmp
xchg
push
ret
adc
xchg
stos
add
jb
fucomi
cmpsb
pop
inc
xchg
popf
dec
ss
cmp
imul
dec
push
shll
in
sub
xchg
dec
lea
popf
icebp
mov
push
movsl
xor
pop
stos
xor
idivl
jmp
cmpsb
mov
lds
xchg
or
sbb
pop
cmp
jns
fisttpll
sub
and
cltd
arpl
nop
test
lret
imul
sbb
cmp
jge
push
cs
fwait
and
insl
mov
push
sbb
das
push
mov
cmpsl
and
pop
mov
xchg
movsb
mov
adc
jecxz
loopne
imul
push
test
push
outsl
fstl
mov
or
fiadds
jge
adc
stos
cs
movsb
lret
ficoms
loop
hlt
add
sbb
inc
xchg
pop
orb
xor
inc
mov
incb
xchg
popa
ret
pop
sbb
outsb
sub
pop
out
cltd
lahf
scas
mov
mov
mov
xchg
push
addr16
out
dec
mov
mov
xchg
sub
addr16
pop
std
aaa
into
mov
xor
mov
mov
inc
fists
or
je
sub
arpl
dec
xchg
dec
mov
lret
outsl
or
mov
jg
mov
sbb
push
cmp
xchg
sbb
ror
in
mov
mov
xchg
and
mov
xor
pusha
repnz
adc
ret
push
insb
dec
sbb
cld
js
mov
xchg
je
cmp
jne
icebp
shr
fnstsw
daa
cmpsb
sbb
stos
cmc
gs
inc
aam
inc
add
pop
ljmp
push
es
mov
pop
add
dec
es
fisubl
ljmp
fcoml
mov
and
dec
push
adc
push
leave
jg
xchg
dec
enter
xchg
push
outsb
outsl
jbe
or
incl
sub
int3
add
xor
inc
testb
or
mov
inc
sbbb
lcall
inc
int3
sbb
adc
leave
es
cmp
lods
jae
or
fistpll
jnp
stc
xchg
clc
xor
clc
stc
bound
in
mov
mov
sub
pop
fisttpl
inc
scas
out
lods
and
push
call
pop
adc
jp
loop
adc
and
mov
jle
jo
loope
fdivr
add
das
and
or
adc
lahf
sahf
lret
divl
aad
shll
mov
pushf
mov
push
push
out
js
roll
xchg
ret
les
popl
subl
jne
mov
jle
add
xchg
ret
or
or
jp
pop
rolb
js
clc
add
and
in
cli
loopne
shrb
jb
jns
add
nop
inc
icebp
je
push
addr16
push
sub
xor
mulb
mov
clc
stos
lds
sub
rorl
mov
inc
ss
std
out
fimull
cmpsb
and
pop
clc
cmpsb
cmp
mov
test
jo
pop
sarb
mov
lcall
xor
loope
mov
fistps
jg
imul
cmp
add
or
dec
xor
push
jl
inc
scas
stos
pop
xor
push
mov
or
fsubr
fldt
add
push
mov
enter
lods
xchg
or
pop
fsubrl
mov
das
cs
in
ja
push
lcall
or
les
cli
sub
adc
mov
sahf
mov
adc
movsl
and
inc
mov
and
push
push
sub
push
in
sub
sub
dec
outsb
dec
mov
das
into
lods
outsl
xchg
xor
sub
pop
ja
mov
sbb
insl
in
scas
insl
or
cld
mov
dec
fdivp
mov
lret
loopne
mov
aaa
adc
mov
cltd
in
cli
xchg
loopne
mov
mov
aad
sub
sbb
out
outsb
mov
test
pop
pop
and
fldcw
jg
jns
lock
insb
mov
mov
push
xchg
hlt
jns
cwtl
or
or
std
inc
mov
cmc
call
pop
push
ret
dec
mov
inc
hlt
bound
imul
fwait
out
arpl
cmpsb
or
push
pushf
xchg
push
pop
pop
sub
stc
xchg
adc
or
push
inc
ljmp
jb
mov
dec
add
out
jnp
stos
xor
xor
nop
std
jns
pusha
loop
out
shr
sbb
add
fdiv
rclb
lret
cmc
adc
adc
jne
cmp
push
add
repz
jmp
mov
mov
sbb
push
or
mov
int3
inc
jne
lahf
leave
mov
mov
lock
stos
fwait
div
lock
jnp
push
xchg
leave
clc
xor
push
int3
push
cmpsb
jge
insb
inc
icebp
and
pop
xlat
repz
pop
or
je
jecxz
fsts
ja
fcmovnbe
inc
test
es
loope
sbb
jne
fldcw
out
fucomp
fwait
wrmsr
and
hlt
xorb
enter
pop
imul
int
jmp
fsts
or
clc
dec
sub
jb
cltd
push
aaa
mov
mov
jno
dec
testb
mov
sbb
stos
sub
outsl
cmc
das
jecxz
fdivrs
clc
lea
dec
pushf
fisubs
mov
or
pop
insl
rcr
inc
lcall
mov
cmp
mov
add
dec
xchg
loope
cmp
inc
inc
push
addl
jbe
notb
add
rcll
lret
mov
push
sub
jge
loopne
hlt
mov
mov
es
push
out
repnz
pusha
rorl
enter
jp
xchg
mov
sti
ljmp
cltd
push
adc
cmp
movsb
idiv
fsubrs
or
add
pop
xor
jnp
pop
dec
or
xchg
movsb
js
mov
ja
add
mov
mov
or
imul
int3
mov
xchg
aad
out
jge
insl
and
push
mov
std
dec
cmp
lahf
aas
stos
mov
mov
pop
or
xchg
sub
pop
mov
dec
test
dec
mov
adc
and
pop
dec
daa
lahf
imul
mov
stos
mov
mov
movb
dec
test
sahf
xchg
cmp
movsb
push
dec
pop
mov
sbb
movsb
xor
lret
mov
nop
xchg
xchg
mov
mov
cmp
or
push
pop
dec
das
mov
push
xor
or
mov
call
aaa
shll
mov
pop
bound
and
dec
push
xor
dec
ret
and
mov
push
test
std
adc
mov
push
mov
and
or
lea
lds
out
dec
adc
mov
sbb
in
push
jne
xor
ret
repz
outsb
cmp
fimull
movb
mov
cmp
movsl
iret
mov
lret
insb
and
int
jmp
std
push
scas
jo
xchg
sub
add
add
dec
ror
lock
fdivl
insl
repnz
jno
inc
fistl
cs
push
mov
enter
outsb
inc
loopne
mov
data16
xchg
popa
push
xor
cli
push
stos
lock
jge
pop
push
adc
das
fcmovu
test
pop
xchg
fwait
and
dec
pop
aam
push
test
rcrl
push
bound
mov
mov
pop
std
or
aam
xlat
sbb
inc
pop
pop
sahf
cmp
jb
or
or
hlt
pop
jns
popa
insb
mov
lea
or
jae
lahf
add
mov
pop
sbb
into
add
jns
imul
sbbb
dec
sub
mov
jns
mov
adc
jecxz
test
enter
loop
sahf
or
or
dec
insl
xchg
or
cmp
inc
aas
lahf
push
sub
adc
and
dec
pusha
dec
leave
add
and
mov
xchg
jp
xchg
imul
popa
and
test
push
aas
push
je
sub
pop
lret
xor
inc
je
add
enter
in
scas
outsl
push
insl
fmuls
pop
lcall
jecxz
xchg
xchg
mov
sbb
popa
pop
lods
imul
in
fldt
hlt
push
sbb
push
aad
push
xlat
adc
mov
cli
or
out
xor
jo
ret
jbe
mov
pop
or
data16
loopne
sbb
mov
popf
rolb
add
push
aaa
rcrl
inc
out
popa
test
lret
jg
inc
hlt
rcrl
xchg
pop
mov
xchg
push
out
push
mov
jmp
jo
mov
inc
cli
loopne
test
fbstp
cmp
ja
sbb
jl
pop
testb
cli
fidivrs
cmp
mov
jae
out
fnstsw
pop
cmp
clc
mov
and
test
adcb
mov
aam
shlb
lods
sbb
in
mov
sub
mov
or
ret
lahf
pop
test
imul
dec
fsubs
movsl
loope
cld
mov
xchg
inc
mov
clc
lods
lcall
cld
lds
sti
or
sbb
adc
sub
sub
mov
pusha
push
pop
movb
mov
jge
addb
mov
mov
mov
inc
sbb
rol
mov
sbb
enter
cli
fsubl
push
xchg
js
push
movsb
jne
pusha
xor
adc
dec
ror
dec
lds
dec
rol
testl
cmp
nop
jnp
shrb
sbb
xlat
mov
inc
cld
cli
hlt
iret
xor
push
test
sub
leave
xor
inc
out
inc
inc
fsubp
test
pop
sbb
stos
sub
in
dec
pop
inc
subl
pop
icebp
xchg
fldl
or
xchg
lods
inc
aaa
add
cmp
lret
push
xchg
pop
lods
jmp
mov
push
push
stos
movsl
add
imul
mov
sahf
push
sub
mov
call
aas
add
push
adc
aam
stos
sbb
mov
add
fsubs
mov
stos
mov
cmp
lock
sub
call
in
lret
in
adc
jo
test
ret
pop
sub
cs
addr16
cmp
imul
mov
jle
fnstenv
xor
jnp
test
jnp
movups
je
pop
ljmp
sub
push
sahf
sbb
loop
fidivrl
add
sub
cmp
mov
jecxz
faddp
lock
ret
cmp
nop
jb
mov
sarb
or
cmp
imul
xor
push
pop
pop
cmp
xchg
cmp
jmp
jp
mov
pusha
jl
pop
or
cli
addr16
mov
nop
pop
int
cli
in
cmp
pusha
xchg
cmc
mov
imul
mov
push
mov
jb
dec
xchg
push
fs
dec
xchg
fisttpl
cmpsb
aad
xor
adc
sub
pop
out
sub
or
xchg
inc
or
lahf
push
adc
pop
mov
lahf
pop
jle
push
ret
adc
inc
enter
ds
das
jl
sbbb
rcrl
xchg
cltd
sahf
stos
gs
clc
cld
lods
xor
insl
adc
mov
cmp
cmpl
add
pop
pushf
mov
insl
inc
xor
test
or
push
dec
lods
push
mov
pop
dec
xchg
mov
fs
or
cmp
push
jno
fwait
adc
iret
mov
pop
int3
call
je
imul
mov
jecxz
jecxz
fs
jp
sub
mov
jne
pushf
push
push
shlb
nop
add
xchg
or
jnp
fnstenv
cmpsl
aam
fiadds
repnz
inc
repnz
adc
int
add
cmp
or
dec
add
ret
sbb
jmp
insb
mov
fs
mov
push
jne
repnz
or
popl
push
mov
ljmp
xchg
popf
out
int3
les
popa
pop
mov
adc
aaa
fadd
popf
mov
fisubl
data16
call
xor
mov
shlb
inc
inc
push
inc
fwait
xchg
shrw
ret
xor
loop
sbb
lea
pop
jecxz
mov
das
mov
adc
cmp
loopne
mov
mov
repnz
and
mov
arpl
imul
jge
mov
cmpl
addr16
push
xchg
popf
xchg
and
inc
dec
and
stos
or
xchg
pop
and
dec
scas
pushf
push
xchg
jge
jo
and
cmp
dec
push
fldcw
jle
in
lock
lret
sub
movb
and
int
fistpl
adc
adc
les
loop
mov
lret
push
repnz
and
jg
push
push
js
adc
rorl
cmc
jb
push
std
adc
dec
stos
dec
and
add
or
cmp
dec
scas
jg
movsl
out
fidivrl
cmp
or
insb
mov
in
lods
xorl
lcall
jmp
loopne
rol
lds
fs
ss
and
ror
lahf
mov
add
in
add
mov
jo
pop
mov
sbb
or
repnz
mov
sbb
in
sbb
sub
in
daa
cmc
and
and
jo
xchg
mov
fildl
adc
in
push
jbe
test
or
and
aaa
int3
rcr
je
gs
cmp
dec
lret
fwait
jmp
adc
xchg
sar
dec
adc
rorl
or
cmp
jge
ss
andl
imul
hlt
jl
mov
cmp
dec
pushf
std
mov
insb
or
shrl
pop
or
and
inc
add
cld
xchg
jne
push
loope
dec
inc
in
mov
lods
jo
add
push
mov
scas
sbb
xchg
shlb
add
lahf
test
into
hlt
mov
fstp
push
fiadds
pxor
mov
std
lret
ret
iret
repz
and
or
pop
push
mov
mov
cmp
jb
gs
wbinvd
lcall
test
test
xchg
sbb
xchg
adc
xchg
jbe
jo
pop
sti
stos
sbb
aas
lret
daa
xor
aaa
inc
inc
popf
and
fwait
jne
inc
in
xor
sbb
inc
das
xchg
bound
nop
dec
pop
mov
sub
test
fwait
movb
cmp
jae
and
jle
test
xlat
xor
dec
inc
sub
fiaddl
mov
cmp
mov
sbb
icebp
push
mov
add
cmpb
sbb
cli
sub
js
sarb
std
stc
stos
cmp
push
imul
bound
jg
popf
pop
adc
xor
mov
fstps
sbb
sbb
mov
cs
ss
and
and
add
add
mulb
shll
add
das
movsb
lcall
inc
rcl
pusha
jp
nop
jo
jecxz
inc
popa
lcall
mov
dec
je
ja
in
mov
in
xchg
cmpl
movsl
adc
lds
mov
mov
jge
mov
insl
scas
dec
mull
shrl
fisubl
adc
dec
mov
jg
cmp
mov
cltd
cmp
mov
mov
popf
cld
loop
add
add
mov
test
mov
xchg
inc
aas
inc
pusha
ss
xor
or
lret
push
dec
pushf
shl
or
xchg
sub
dec
mov
cld
lret
insb
rolb
in
lcall
xlat
jp
inc
mov
fwait
and
dec
and
adc
pop
ds
mov
mov
mov
dec
aas
ficoml
loope
pop
pop
test
push
mov
daa
inc
jle
jle
icebp
sbb
add
mov
mull
fistl
imul
mov
sbbb
dec
push
les
addl
xchg
sbb
xor
lock
mov
aas
pop
repz
dec
shrb
out
sub
push
adcb
shll
mov
gs
add
popa
out
pop
int3
sub
aaa
andl
push
jmp
mov
inc
ja
bound
leave
in
loope
and
adc
cmpsb
xor
mov
push
mov
mov
mov
lods
addr16
mov
mov
dec
or
bnd
rol
push
jmp
in
fsts
mov
insb
mov
mov
pop
add
inc
dec
mov
and
fs
mov
cmc
clc
pop
sarb
movsl
sbb
arpl
popa
mov
fwait
cmp
inc
inc
jbe
sbb
jne
mov
imul
adc
mov
push
sbb
cmp
divb
push
dec
jnp
xlat
pushf
xchg
dec
cld
rcrb
iret
push
test
mov
bound
push
gs
add
mov
jp
mull
pop
imul
ficoml
lret
add
push
shlb
mov
fnsetpm(287
pushf
add
out
lea
mov
jecxz
mov
movsl
sub
pop
test
fwait
xorb
jg
xor
and
mov
and
push
es
and
pop
in
cmpl
lods
aam
or
push
test
call
cmp
mov
rcrl
fidivs
mov
imul
sub
fs
aad
shrl
cmp
cld
mov
fidivrs
ljmp
pop
jbe
ljmp
cmp
xchg
pop
subl
fs
xor
fcoml
push
dec
inc
mov
lcall
sbb
cmc
fldt
jbe
std
insl
mov
xchg
or
mulb
sub
nop
adcl
or
fsubrl
mov
jl
xchg
test
cld
cmovge
and
ficomps
push
ret
cltd
add
or
popa
mov
and
mov
fs
push
mov
mov
and
scas
or
nop
popl
pushl
shrl
add
jg
jns
add
jae
push
sub
push
adc
cltd
in
cmpsb
bound
sahf
or
xchg
xchg
cld
xchg
aaa
sub
pop
jbe
repz
xchg
ss
jl
cltd
dec
add
repz
clc
mov
mov
gs
sbb
loop
pand
mov
lds
pushf
cld
shll
lea
imul
adc
mov
xchg
addr16
addr16
jmp
rclb
push
lods
dec
addr16
call
inc
scas
mov
outsl
inc
aad
ffreep
sbb
inc
xchg
into
movsb
lods
cmp
das
ss
or
or
or
xchg
dec
dec
imul
mov
loopne
xor
enter
mov
mov
adcl
or
test
or
shll
sbb
push
lcall
push
lock
mov
jle
inc
dec
out
jge
lcall
iret
jne
jnp
mov
cmp
ret
cld
imul
iret
sub
cmpsb
mov
std
arpl
in
test
pop
sub
cmc
mov
xor
jne
js
or
orps
vmovaps
jp
fsubr
dec
inc
shll
lea
xchg
cmp
xor
out
ret
mov
sbb
enter
dec
nop
cmp
mov
push
mov
push
pop
mov
mov
mov
out
sub
inc
adc
iret
cmpsb
cmp
lcall
rorw
or
push
sbbl
sbb
lahf
iret
jno
inc
scas
ret
inc
cmp
out
push
enter
rclb
hlt
sbb
test
std
sub
shlb
sub
inc
in
das
lahf
sub
sub
lods
jle
mov
inc
inc
fldt
inc
test
cmp
dec
jge
hlt
es
push
jle
inc
pop
imul
lahf
mov
aam
out
ret
mov
imul
jns
bound
stc
repz
dec
xchg
ret
or
fcmovnbe
mov
outsb
in
push
fsubrs
inc
adc
pop
ljmp
lret
ficomps
or
in
or
or
fidivrs
or
call
lods
pusha
icebp
icebp
jg
jns
cwtl
lods
dec
add
xchg
lahf
out
cmp
fdivrl
cld
push
scas
xchg
xchg
adc
jne
pop
push
dec
pop
lea
stc
push
jmp
loopne
pushf
inc
in
pop
or
xchg
sbb
jle
out
pusha
mov
jmp
mov
outsl
cwtl
xor
pop
mov
iret
sbb
inc
popa
cli
jo
push
sahf
jbe
and
add
mov
in
mov
lods
sub
int
iret
pushf
cmp
lea
mov
out
aad
xor
sbb
pop
or
inc
xchg
out
shll
cmp
cwtl
jp
push
xlat
sub
dec
cmp
xor
repnz
aas
into
js
jle
pop
adc
loop
and
divb
daa
jle
addl
add
aas
mov
inc
repz
mov
mov
xchg
pusha
scas
inc
out
add
pop
mov
pop
cli
cmp
mov
mov
xor
scas
nop
inc
fsubr
cs
mov
jmp
cmpsb
mov
push
mov
hlt
call
sub
in
outsb
adc
mov
imul
push
xchg
pop
lea
pop
sub
or
sub
jle
sub
loope
sbb
ret
push
out
gs
mov
jge
push
add
stos
cmp
outsb
fxch
pop
sti
incl
push
mov
adc
xchg
es
testl
jo
sub
test
or
xor
jnp
outsl
sub
sti
sbb
mov
mov
push
nop
gs
les
pop
xchg
push
mov
cmp
cli
mov
xor
xchg
push
decb
fsts
add
movsl
push
xchg
xchg
outsb
pop
mov
adc
aad
jo
imul
xchg
pop
pop
xchg
xor
test
sbb
imull
lods
cli
jle
xlat
push
sub
or
pop
push
push
xchg
jo
bswap
xlat
shrl
xchg
scas
mull
xchg
pop
aam
out
xchg
jbe
popf
push
dec
ret
insl
mov
in
clc
ss
es
add
rcll
mov
loope
sbb
mov
popf
push
imulb
out
mov
into
mov
inc
sub
sahf
xchg
enter
adc
fisttps
dec
xchg
adc
sub
call
jae
sub
and
xor
repnz
sub
xchg
rcrb
push
pop
mov
pushl
dec
repz
ret
cld
leave
or
xor
xor
xor
lds
insl
jge
xor
orb
into
loopne
fisubrs
rcr
dec
leave
cli
shl
jmp
leave
decl
fidivrs
out
and
sub
pop
mov
clc
xor
dec
mov
sahf
test
jb,pn
pop
mov
loopne
cltd
jl
dec
fdivs
mov
mov
test
stos
in
std
jl
jge
clc
jo
sub
rcrb
adc
scas
cwtl
leave
aaa
das
cwtl
inc
xchg
popl
ret
jmp
fdivl
scas
mov
inc
xor
mov
or
and
cld
aaa
stos
mov
sahf
mov
std
sahf
bound
inc
push
xchg
dec
pop
movsl
mov
cmpsl
rcrl
in
cs
and
push
in
sbb
xor
add
pop
or
repnz
xchg
pop
mov
push
jmp
mov
fcmovnbe
jl
inc
out
pop
fcompl
ret
push
std
adc
jle
lcall
cmp
sbb
push
div
jecxz
loop
inc
inc
push
add
xor
std
jle
int3
shr
adc
mov
xor
or
mov
enter
inc
mov
hlt
call
dec
pop
sub
xor
or
cmp
add
inc
and
inc
mov
inc
rcll
hlt
pop
ljmp
movl
lahf
repz
dec
push
lods
mov
cmp
mov
test
out
adcb
cmpsl
fimuls
ss
imulb
test
out
fwait
or
ret
es
sub
repz
jp
cmpsl
in
push
and
lds
push
xor
ror
mov
mov
dec
sahf
popf
push
roll
fwait
test
pop
addr16
cli
js
jo
outsb
push
inc
add
adc
jns
jns
rclb
jmp
lret
add
xor
inc
repnz
popf
cmpsl
das
js
sub
sbbb
mov
loope
fdivrp
inc
cmp
icebp
fistl
rcrb
mov
pop
mov
push
inc
add
or
sbbb
bound
adc
sub
push
sti
fsubrl
out
xchg
cmp
mov
and
and
arpl
or
fcmovbe
inc
dec
cmp
roll
mov
push
fists
into
and
mov
mov
mov
stos
and
repz
nop
call
push
lret
jg
xchg
add
sbb
loope
xor
adc
inc
sub
int3
jae
data16
mov
mov
and
mov
and
jmp
pop
cwtl
mov
popf
scas
dec
mov
xchg
stos
sbb
mov
mov
inc
or
scas
div
out
push
mov
pop
xor
inc
pop
push
mov
mov
xchg
dec
mov
lret
push
sahf
xchg
frstor
mov
sbb
xor
push
pop
fsubp
mov
xchg
cld
sub
aam
sub
movsl
sbbl
fdivrl
add
pop
mov
nop
test
add
adc
bnd
stos
inc
hlt
push
test
stc
lahf
rorb
xor
and
aas
js
pop
pop
shrl
add
mov
sbb
movsl
lods
dec
adc
lea
dec
or
mov
inc
icebp
cld
push
cmp
xchg
shrl
out
in
and
inc
inc
negl
add
in
ss
mov
inc
sbb
cmpsl
stos
mov
mov
add
sahf
scas
inc
mov
rorl
sbbl
fdivl
push
das
mov
inc
cltd
push
loope
push
test
int3
mov
js
sbb
adc
jl
and
xchg
inc
lcall
cmp
mov
insl
lods
pushf
out
adc
cmp
xchg
sub
push
xchg
jge
xchg
mov
arpl
sti
jb
ja
jne
sbb
into
cmp
addr16
sub
xchg
ss
mov
mov
mov
imul
xor
call
mov
rorb
xor
push
scas
mov
lahf
inc
push
hlt
clc
adc
push
sarl
pop
pusha
subb
sbb
push
inc
pop
hlt
xorl
outsl
popa
dec
sbb
cmc
push
mov
push
fsubl
popf
je
fadds
pop
dec
fistps
filds
cmp
mov
sub
fistpll
mov
repnz
push
sbb
push
jmp
add
mov
fwait
push
mov
or
outsb
pop
mov
push
cs
push
movsl
daa
icebp
push
dec
inc
adc
or
sub
and
scas
push
mov
je
fsts
pushl
cmp
push
cld
fwait
jno
xchg
js
pop
sbb
xor
ret
mov
mov
clc
and
mov
xor
jmp
xchg
in
test
mov
add
aaa
xor
pop
cmp
and
mov
shrl
dec
xchg
ficomps
xchg
icebp
sbb
aas
cmp
vshufps
out
mov
adc
cmpsb
je
xchg
sub
pop
mov
cld
lds
jns
lods
out
jo
sbb
xchg
mov
xchg
int3
push
lret
mov
movsb
div
jne
jo
pop
mov
fcomps
clc
push
rcrl
cmp
into
idiv
push
mul
bound
xchg
call
pop
mov
jns
out
pop
xchg
and
sbb
mov
fstpl
int
push
push
jb
push
push
mov
mov
shr
lds
add
pop
push
andl
sahf
loopne
out
cmp
test
leave
or
enter
xchg
lret
cvtps2pi
js
jecxz
mov
rorl
mov
stos
adc
lea
jp
ret
push
dec
clc
jnp
jp
ret
add
in
lcall
mov
std
jnp
push
or
adc
sarl
test
xchg
dec
mov
cmp
or
lea
mov
push
xchg
fsubrs
jg
int
jb
or
pushf
gs
xor
iret
push
nop
mov
loope
lcall
es
dec
cmpsb
or
shlb
xor
jecxz
ja
and
mov
js
jnp
sahf
mov
pop
pop
add
and
and
das
sbb
aas
xorl
xor
mov
shrl
insl
loope
xor
fstpl
scas
cmp
push
fisttpll
hlt
add
xchg
push
fimull
xor
adc
jmp
push
dec
sbbb
push
xchg
xor
xor
jl
out
sub
sub
dec
lcall
or
das
test
fs
clc
mov
add
mov
movsb
enter
dec
stos
lea
push
loop
ja
lods
sub
pop
jmp
inc
pushf
sbb
inc
xor
shll
pushf
dec
leave
xchg
loopne
sub
sbb
sub
or
in
mov
push
lds
add
push
lods
outsl
stc
gs
nop
or
jge
ret
insl
es
inc
into
sarb
push
jns
or
cmp
inc
dec
mov
dec
pop
jge
leave
mov
and
mov
push
pop
push
fiaddl
mov
sahf
nop
cmp
jmp
cli
xchg
add
mov
cmp
jp
movsb
idivb
mov
mov
test
push
mov
cmp
xlat
xchg
push
pushf
lret
inc
and
mov
inc
into
mov
jmp
push
mov
dec
xchg
leave
nop
aad
sbbl
adc
testl
mov
lret
sti
cltd
push
mov
cmpsb
xchg
gs
cli
loop
and
cwtl
into
xchg
es
push
push
jecxz
sbb
out
mov
jb
faddl
pusha
mov
and
ss
das
pop
adcb
adc
iret
lcall
mov
cld
xchg
mov
ret
dec
fiaddl
clc
nop
clc
pop
ljmp
push
jb
sbb
hlt
mov
fs
mov
push
movsl
and
fs
jo
dec
push
sbb
pop
and
fists
js
cmpsl
mov
push
adc
out
cmp
cmp
mov
inc
mov
sub
mov
movsl
scas
push
leave
dec
and
cmp
sbb
outsb
jge
xor
fwait
mov
add
push
adc
in
dec
loope
pop
popf
leave
pusha
dec
xchg
mov
cmp
add
adc
or
nop
cli
mov
sub
mov
enter
and
andl
lret
test
lock
and
cmc
add
sub
stc
mov
and
ficomps
andl
cmp
arpl
inc
ds
add
ja
cld
xchg
mov
add
sti
mov
sbb
mov
jge
xchg
pop
push
out
cmc
xor
sar
loop
aam
enter
outsb
dec
arpl
add
sbb
ficomps
out
mov
lds
xchg
cmpl
xor
pop
sarb
push
lcall
orl
cmp
mov
mov
outsb
jbe
fcmovnb
mov
aaa
xor
inc
mov
jl
cmpsb
popa
push
mulb
ds
sarl
incb
xchg
push
nop
divl
xchg
ss
cli
test
lcall
out
cmp
nop
xrelease
sub
mov
scas
and
out
push
sti
or
sub
addr16
sub
orb
stos
or
jno
into
push
jo
test
pop
ja
pop
cmp
aam
dec
mov
cmpsb
daa
outsl
stos
call
xchg
ja
jo
sahf
push
and
imul
ret
xor
addl
fistps
subl
jnp
movsb
push
aas
push
mov
imul
out
fldenv
or
xor
cmp
inc
dec
mov
pop
dec
sbb
or
push
jno
mov
xchg
pop
jle
push
lods
cltd
xchg
enter
adc
outsb
imul
push
cld
jmp
pop
out
mov
iret
test
jb
outsl
movsb
ss
std
lock
dec
cmp
test
jle
xchg
ds
clc
adc
add
jp
or
jns
xchg
inc
pop
int3
and
mov
dec
iret
dec
add
insl
stos
sti
rorb
jo
dec
cmp
xor
shlb
xchg
aaa
hlt
stos
xchg
dec
xor
cwtl
mov
dec
xchg
cmpsb
pop
pushf
out
dec
rorl
sar
loope
imul
mov
jo
fldcw
divb
fbstp
outsb
mov
and
je
scas
fistl
xor
addl
pop
mov
or
add
cmp
jb
adc
xor
bound
insb
xchg
stc
inc
shrl
cmp
iret
lahf
out
sbb
mov
scas
push
mov
loop
dec
xchg
or
ds
sub
xor
cmp
lret
iret
out
test
dec
jl
sbb
sahf
add
push
inc
int
lret
mov
into
inc
data16
scas
pop
cld
cld
cmpsl
inc
outsb
xor
mov
push
push
mov
test
sub
mov
loop
lahf
xchg
divl
rolb
mov
sbb
pushf
xor
shll
test
mov
sub
add
das
sti
movl
into
imul
jle
inc
in
aaa
jno
cli
icebp
sbb
cmpsl
enter
mov
jp
dec
pop
mov
jle
fiaddl
cmp
sbb
in
xchg
xor
push
mov
ja
adc
es
popf
mov
insl
je
aad
or
dec
pop
jnp
dec
cmpsb
outsl
leave
mov
mov
mov
ret
hlt
mov
imul
mov
mov
jmp
or
push
and
rolb
pop
xorb
or
mov
sti
mov
push
fsubrs
jmp
je
dec
and
rorb
enter
mov
lret
nop
jle
lods
leave
adc
testb
sar
jbe
inc
rcrl
clts
adc
lret
push
ljmp
in
mov
and
add
fld
gs
or
movsl
add
push
out
mov
adc
pop
pop
add
jp
shll
xlat
and
or
out
call
xor
mov
out
fwait
cmp
outsl
push
xlat
int3
shll
cli
jmp
leave
gs
inc
or
xor
mov
das
leave
popa
ret
test
leave
or
mov
dec
out
pop
mov
xchg
jl
cmp
cmp
adc
jb
cmp
lret
or
xor
dec
mov
call
mov
xchg
adc
mov
lahf
outsb
out
pop
scas
mov
ret
test
xor
inc
cmc
mov
and
loope
mov
gs
fsubs
add
mov
pop
push
and
lahf
xor
es
xor
movl
pop
hlt
sbb
dec
out
pop
loopne
mov
decl
cmpsb
stos
vcvtsd2ss
aad
add
sub
and
xor
loopne
jle
jno
pop
jecxz
nop
jnp
mov
pop
orb
jae
xchg
dec
push
repz
dec
cltd
dec
filds
mov
push
dec
sub
jl
in
xchg
jmp
dec
dec
ljmp
pop
imul
pop
mov
adc
and
push
pop
mov
out
mov
sbb
mov
test
fldt
mov
fs
lods
mov
xchg
xor
mov
repz
push
test
ja
push
cmc
cmp
rclb
bswap
push
jp
insb
sub
sbb
ret
mov
mov
repz
into
mov
push
jnp
xlat
call
rcrb
mov
or
fildl
add
inc
cs
and
dec
ljmp
dec
mov
mov
in
push
out
mov
test
pop
in
sbb
nop
nop
adc
popa
in
or
imul
adc
push
enter
pop
xchg
push
pop
xor
mov
mov
gs
and
imulb
sar
jg
mov
in
cltd
aam
sub
push
dec
jne
and
push
int3
push
xchg
pop
and
adc
loope
popf
fsts
cld
fadds
out
out
mov
lea
movsl
lcall
mov
or
inc
cltd
xchg
xchg
or
pushf
addl
loop
xor
xchg
mov
mov
mov
jg
lods
xchg
je
push
int3
mov
loop
dec
bound
pop
jmp
mov
dec
das
jmp
mov
xchg
mov
cmc
sub
inc
leave
pop
in
jbe
add
sub
fistpl
adc
sub
pop
lcall
fabs
into
adc
je
jg
inc
push
pop
jne
imul
jmp
imul
test
mov
aas
std
xchg
add
hlt
pusha
outsl
and
add
outsb
and
test
xor
push
ljmp
mov
mov
jle
xchg
or
push
add
outsb
jl
in
jne
rcrb
xchg
pop
and
and
lret
lods
cwtl
scas
add
fistpll
aaa
adc
push
movsb
insb
dec
and
lahf
dec
and
push
aam
or
xchg
sbb
scas
adc
xor
js
ss
push
mov
insl
stc
addr16
test
ds
arpl
loope
and
mov
stos
mov
or
scas
mov
sbb
sbb
cmp
dec
dec
dec
popa
jmp
cmp
lock
inc
mov
outsb
scas
xchg
mov
sub
inc
sbb
or
int3
les
mov
or
pop
stc
sbbb
xor
xchg
inc
andl
mov
outsb
dec
push
lahf
or
mov
in
dec
mov
dec
push
movsb
lahf
pop
pop
xchg
mov
movsl
data16
cld
ficomps
pop
jle
call
adc
inc
flds
mov
data16
ret
sub
xchg
sbb
fistpll
sub
out
xor
mov
arpl
pop
mov
or
xor
imul
xchg
xchg
repnz
sub
imul
sub
fcomps
mov
push
inc
dec
shrl
dec
mov
daa
add
lret
xchg
push
fnstsw
mov
or
or
jmp
aaa
fsubrs
rcrl
les
jecxz
mov
adc
mov
push
into
jle
repz
repnz
mov
cmpl
push
gs
dec
outsl
xchg
jb
and
or
adc
push
mov
sbb
adc
aaa
inc
aam
insw
mov
scas
jle
cmpsb
jge
in
jnp
test
and
call
lea
lods
jnp
jecxz
ja
mov
call
ljmp
repnz
lahf
dec
addr16
mov
cmc
ficoml
dec
cwtl
nop
mov
call
fisubl
or
mov
or
xchg
sub
adc
lds
or
jo
ds
adc
out
icebp
inc
cmpsb
loop
inc
addb
pop
push
notl
pop
jae
inc
adc
repz
fnstsw
cmp
rol
jbe
subl
pop
jnp
or
scas
jb
xor
stos
push
les
jecxz
jge
xchg
push
sti
inc
mov
mov
decl
test
into
pop
ss
stc
cmc
cmpsl
fdivrs
or
rol
je
jmp
jne
in
push
mov
pop
repnz
fxch
lahf
lock
jne
sti
dec
push
int
mov
xchg
sub
add
sbb
ret
adc
out
into
into
fwait
mov
or
iret
or
inc
and
jecxz
arpl
xchg
pop
push
mov
cwtl
mov
jle
test
xlat
xor
leave
inc
xchg
adcb
leave
test
addl
fisttps
push
into
mov
cmp
inc
outsb
jo
mov
icebp
cmp
sti
test
aam
lods
in
cs
movsl
cmpsl
push
mov
xlat
mov
and
loopne
in
or
repnz
dec
daa
push
ljmp
divl
xchg
sub
xchg
mov
pop
xor
dec
jg
xor
xor
or
ss
sbb
in
mov
call
addr16
mov
lahf
aad
mov
inc
testb
push
adc
mov
or
cmp
or
ror
loope
mov
xor
loopne
fimull
push
mov
cmc
test
shll
roll
addl
xor
mov
jne
jno
xor
stos
test
rolb
mov
cmp
dec
push
mov
fnsave
push
push
bound
rcl
xor
sbb
xlat
xor
ret
sub
pop
int
faddl
xchg
dec
lret
pop
inc
jge
inc
adc
and
mov
ja
shlb
xorb
xor
call
jo
gs
or
stos
in
adc
mov
cs
jbe
pop
loop
in
je
ljmp
mov
cmp
es
dec
push
adc
dec
ret
lock
bound
lcall
dec
inc
arpl
push
xor
mov
ds
xor
pop
enter
shlb
or
fsts
lcall
jmp
jecxz
stos
and
xor
push
ret
dec
orl
mov
inc
adc
xlat
loope
jmp
in
xchg
push
add
js
cmpb
sub
and
mov
popa
cs
lods
sub
jge
sbb
add
push
dec
aam
sbb
imul
cmp
and
jnp
sbb
and
jg
mov
dec
push
pop
mov
cmp
jno
mov
mov
lahf
sti
jmp
bound
xor
ret
push
jne
mov
data16
adc
call
fdivrs
ds
loope
repnz
xchg
movsl
les
sub
test
push
cmp
adc
clc
mov
icebp
xchg
std
fninit
mov
jg
inc
dec
enter
daa
cli
outsb
incb
cwtl
inc
mov
and
aas
test
push
push
lret
mov
xchg
enter
xor
fdivr
mov
ss
xlat
add
xchg
les
mov
sahf
rol
sub
and
std
in
xchg
mov
cmpsb
in
push
push
jg
mov
dec
jnp
pop
data16
push
imul
jg
push
adc
jle
es
inc
stos
imul
cmp
out
jns
out
jo
mov
inc
imul
out
xchg
sub
mov
xchg
loop
enter
mov
xchg
shld
pop
inc
iret
inc
cmpsl
dec
cmpsl
adc
sub
pop
mov
and
sti
adc
je
cs
loopne
or
int3
scas
and
in
faddl
jle
enter
inc
scas
and
adc
dec
jns
and
ds
adc
sub
popf
xchg
push
xchg
arpl
insl
in
pop
sub
js
mov
or
or
insl
jg
fldl
arpl
cmp
mov
adc
repnz
pop
lods
sbb
inc
push
add
cmp
mov
in
aas
sbb
bound
sub
pop
pop
fs
fsubrl
shlb
mov
or
inc
add
sub
push
fldenv
mov
daa
andl
cwtl
iret
inc
lcall
cmp
test
fildll
or
cmpsl
sub
sub
je
fistps
pop
xor
stos
xchg
mov
sbb
leave
sarl
xchg
les
loope
test
jnp
std
ljmp
lods
adc
fldl
pop
fmuls
scas
xchg
pop
push
pop
out
fidivs
ljmp
xor
adc
or
es
aas
sbb
fwait
xchg
loope
mov
outsb
cmpsl
sub
cld
xchg
loop
ret
aam
outsb
sub
sbbb
int
orl
pop
push
push
push
loopne
movsb
push
and
movsl
ret
cmp
loop
mov
fildl
sbb
and
jno
dec
or
cld
mov
cmp
stos
jnp
gs
mov
sbb
inc
xlat
mov
and
enter
pop
jg
loop,pt
rolb
adc
test
pop
lea
test
leave
movsb
adc
and
jp
testl
jg
aam
cltd
stos
jmp
dec
jecxz
dec
pop
pop
mov
xchg
lret
ss
pop
inc
mov
das
ret
sbb
test
aas
shll
pop
pop
arpl
inc
rcrl
rcll
mov
mov
xor
adc
call
sub
jl
lea
jns
repz
jae
xor
in
mov
aas
lea
shrl
test
lret
pop
int
outsb
xchg
and
mov
xlat
push
sub
jns
adc
pop
pop
inc
or
mov
les
mov
adc
sub
mov
inc
insl
aad
xsaveopt
push
sub
xor
rolb
and
out
xor
cmp
add
pop
gs
test
push
xchg
aaa
je
adc
repz
clc
mov
or
dec
loope
push
jg
jns
rolb
aaa
cmpsb
faddl
shll
adc
clc
rcrl
cmp
jns
push
pop
mov
xchg
shlb
add
xor
add
loope
adc
stc
jne
scas
pop
xchg
insb
adc
adc
mov
daa
pop
int3
push
out
or
jecxz
and
pop
push
cmp
jnp
out
mov
inc
bound
sub
mov
push
inc
imul
test
sub
leave
call
push
cltd
test
cmp
sbb
xchg
jge
add
clc
mov
add
cli
lock
mov
roll
fldt
mov
mov
jge
cmpsl
iret
pop
xor
gs
dec
aaa
out
push
push
lret
rolb
ss
mov
pop
jne
pop
mov
or
test
es
lock
jno
xor
xor
xchg
push
jl
jbe
dec
ja
jb
cmp
jne
repnz
test
leave
in
jmp
out
ret
test
icebp
pop
jg
imul
dec
inc
push
into
cld
lds
addr16
pushf
xor
shl
ljmp
mov
xlat
dec
dec
pop
cmp
mov
or
xlat
jp
ja
test
cmp
push
int3
out
cmp
shrb
fisubrl
dec
mov
call
in
popa
or
repnz
cs
je
xchg
mov
lds
mov
pop
lea
push
lods
sti
cltd
adc
cmp
push
or
cmpb
mov
adc
dec
mov
jo
stos
out
dec
push
jge
sub
mov
push
shrb
mov
fcompl
and
pop
pop
scas
fiadds
fadds
pushf
loopne
or
mov
pop
test
mov
flds
adc
jge
les
rolb
popa
stos
mul
jb
mov
adc
xchg
and
and
cld
arpl
arpl
add
psubusw
or
rorb
daa
dec
sti
sub
aaa
scas
test
lds
and
cmp
xorl
push
xor
cmp
push
sahf
xor
jg
mov
cmp
scas
adc
pusha
xchg
xchg
in
and
fistl
mov
pusha
bnd
addr16
cmp
ret
inc
stos
dec
push
pop
mov
jp
inc
jno,pt
jnp
adc
pop
aam
jl
jmp
adc
imulb
or
xchg
ljmp
jl
mov
in
test
imul
popa
cmpsl
inc
xchg
test
in
icebp
sbb
inc
rcll
leave
std
ret
xor
xchg
adc
out
mov
inc
je
sbb
pusha
xchg
jbe
fcoml
and
insl
mov
adc
call
mov
mov
imul
fs
inc
arpl
loope
xlat
jne
leave
neg
cmp
mov
adc
call
adc
dec
not
ret
add
and
mov
into
pusha
pop
add
inc
xchg
mov
popa
in
jmp
add
icebp
jae
cmp
das
xor
adc
xchg
dec
lret
aaa
ja
push
stc
mov
bound
shll
xlat
inc
out
negl
lods
push
pop
clc
push
sub
les
fildl
push
rolb
scas
jge
in
dec
imul
mov
subl
push
inc
jg
inc
sahf
cmpsb
jmp
jmp
jge
push
mov
enter
test
repz
mov
lock
enter
mov
jne
fisubrl
xchg
mov
aad
push
adc
sbb
cmp
iret
jp
pop
inc
popa
pop
aad
fimuls
fdivl
out
inc
out
sub
les
ljmp
in
test
lock
push
in
ljmp
imul
push
cltd
inc
mov
dec
cs
push
aam
push
sub
cmp
repnz
cmp
cs
addb
ja
adc
jp
adc
repnz
insl
stc
push
add
loope
stos
je
gs
out
pop
dec
jae
out
mov
push
and
mov
adc
mov
fmulp
xchg
lret
test
loope
shll
mov
add
or
xchg
adc
or
and
cmp
jg
insl
dec
stos
inc
iret
xchg
sahf
push
and
outsl
mov
mov
mov
or
jne
xchg
sub
scas
rclb
or
xchg
into
jmp
or
mov
or
pop
sbb
in
push
les
bound
mov
and
addr16
icebp
leave
nop
lahf
sbb
mov
out
push
jns
filds
insl
sbb
mov
xor
and
dec
push
cltd
cmp
mov
xchg
push
das
cld
jne
insb
pop
push
xor
cmp
sub
inc
inc
loopne
dec
fcoml
and
sahf
add
cltd
mov
jmp
dec
mov
loope
mov
lret
jbe
gs
pop
pusha
or
and
cwtl
subb
xchg
jne
push
jbe
pop
sub
pop
test
fs
dec
jno
clc
inc
js
jle
ror
sbb
lea
mov
cmp
adc
mov
mov
lock
mov
insb
pop
jnp
popf
das
mov
dec
fildll
enter
fisubrs
xchg
pop
xorl
xor
out
xchg
lahf
in
movsb
int3
gs
mov
pushf
out
mov
xchg
ret
lods
ret
sbbb
stos
lahf
sbb
lret
sti
and
popf
xchg
js
outsb
or
jns
xchg
or
inc
push
cmp
aam
sbb
ret
jg
pop
fildl
pop
inc
add
ds
sbb
cmp
push
xor
daa
test
lret
xchg
inc
shr
push
and
or
lcall
push
je
adc
fldenv
test
lret
xchg
xchg
push
jb
cmpsl
and
cmp
pop
leave
xchg
push
sbbl
test
push
push
jge
loope
mov
jg
cli
push
cwtl
and
cld
mov
test
dec
les
jne
adc
push
xlat
jmp
cmp
lea
xchg
push
push
lcall
mov
imul
clc
enter
cmp
push
clc
inc
rcrl
sub
dec
xchg
and
sbb
mov
in
repnz
cmp
loopne
mov
push
mov
push
fstpt
or
nop
jo
fildl
out
cmp
lea
fmull
ss
adc
add
ret
hlt
dec
repz
xchg
scas
inc
cmp
add
inc
imul
mov
arpl
test
pop
dec
loopne
fisttps
in
cmp
sub
pop
imulb
imul
jl
xchg
adcl
mull
jb
nop
inc
mov
lea
jl
and
cmp
orl
jae
mov
stos
cmc
arpl
fs
or
icebp
cwtl
pmulhuw
jns
clc
das
mov
stos
pop
mov
adc
pop
iret
test
mov
cmpsl
mov
scas
test
cmc
inc
std
mov
push
xor
leave
mov
mov
pop
mov
mulb
inc
test
cmp
cmpsl
mov
sub
aaa
or
shll
dec
repnz
in
gs
cmp
adc
rclb
movsb
cmp
and
xor
aaa
sub
xor
and
cmpsb
mov
sub
andl
dec
stos
cltd
jno
jb
add
subl
cmp
in
xchg
mov
aam
mov
dec
imul
xchg
sbb
pop
pop
mov
in
mov
adc
push
ja
xchg
fs
inc
push
lods
shr
adc
add
pop
mov
xlat
xchg
lods
movsl
addr16
sub
jle
mov
dec
mov
andl
lds
xchg
test
inc
dec
mov
cmp
or
movb
add
loop
int
sub
jnp
or
xlat
xlat
dec
push
or
and
sbb
movsl
xchg
int
or
xchg
in
out
ficoms
insl
pop
sbb
fistl
xor
cmpsl
xor
sbb
pop
jno
ljmp
aad
jge
pop
sbb
push
iret
mov
push
dec
pop
push
fcmovu
mov
mov
mov
xor
test
sbb
jns
adcb
out
jecxz
jmp
pop
psrld
xchg
rcrl
jo
jle
mov
int3
lods
inc
mov
jmp
mul
mov
mov
xor
das
jg
icebp
jle
mov
lods
aam
mov
pop
ret
xlat
push
movsb
into
and
repnz
pop
pop
mov
xlat
sahf
sbb
stos
loopne
xor
in
outsb
icebp
sbb
stos
add
jg
leave
add
sti
mov
imul
xchg
scas
shrb
mov
int3
mov
and
xchg
mov
gs
add
lret
mov
enter
push
adc
mov
or
push
insl
or
stos
fiaddl
sahf
repnz
mov
jmp
fidivl
mov
scas
popa
notb
in
sarl
or
push
insl
imul
addl
xor
dec
cltd
aam
fsubrl
dec
addr16
adc
mov
lods
or
jbe
push
pop
stos
add
imul
movsb
dec
lret
test
std
in
lret
daa
dec
popa
pop
jo
push
cmp
xchg
dec
dec
xlat
or
enter
mov
test
fldenv
dec
incl
je
outsb
data16
scas
jp
push
pop
jo
jbe
or
lcall
xchg
out
ret
dec
push
mov
addb
adc
lods
add
fisttpll
push
mulb
xchg
add
sbb
inc
stos
daa
hlt
adcb
mov
jl
push
test
adc
sub
outsb
jns
sbb
xchg
sbb
cmp
pop
in
dec
xchg
pop
mov
adc
out
pop
pop
push
add
sub
arpl
andb
test
decl
mov
popf
xchg
mov
inc
leave
cltd
push
in
sbb
popa
cld
clc
sahf
in
mov
pop
shll
repz
addb
addr16
arpl
push
fdivs
inc
cltd
push
and
xor
adc
dec
cmp
fbld
pop
sub
mov
inc
fwait
es
adc
or
pop
mov
cmpsb
and
sbb
cmpsb
loope,pn
out
mov
fdivrp
out
scas
out
push
or
jbe
inc
movsb
xchg
gs
shld
outsl
xor
ljmp
add
jne
into
fcompl
push
icebp
xchg
mov
notb
dec
fistl
pusha
sbb
inc
rolb
push
push
sbb
mov
xor
and
push
pop
imul
jg
ds
ror
leave
call
mov
fnstenv
sub
sarb
add
xlat
cmp
mov
dec
lds
icebp
jge
pop
dec
inc
push
fdivs
adc
push
mov
sub
je
addr16
push
xor
sbb
scas
outsb
pop
push
std
int
leave
cli
pop
out
mov
popf
scas
push
push
and
and
mov
push
and
mov
add
push
xor
rolb
outsb
push
ds
xlat
sbb
cmpsl
stc
push
push
int3
jl
lods
leave
sahf
daa
sbb
xlat
xchg
jae
sbb
inc
mov
sbb
orl
jnp
into
out
pushf
pushf
sbb
out
arpl
push
test
test
imul
and
pop
sbb
dec
pop
pop
in
pop
dec
stc
arpl
std
xor
jge
xchg
mov
bound
mov
int
icebp
xlat
cld
nop
mov
inc
xchg
pop
testl
cwtl
cmp
inc
push
mov
pop
sub
js
scas
adc
sub
jae
loopne
pop
mov
sahf
ljmp
mov
push
test
or
imul
pop
mov
test
push
lcall
in
mov
mov
xchg
sbb
push
sti
cmp
dec
loopne
push
test
mov
call
popf
pushf
mov
xchg
inc
adc
inc
dec
mov
movl
imul
mov
add
shlb
mov
cmp
icebp
loope
enter
test
pop
insl
xor
hlt
jg,pt
mov
mov
push
cli
movsb
ret
pop
push
or
addr16
dec
clc
lret
imul
es
pop
push
add
mov
insb
xchg
xchg
daa
mov
xlat
loop
lahf
or
add
mov
push
cli
sbb
xchg
leave
sbb
xchg
out
fsubl
aas
call
sysexit
mov
sbb
xchg
pop
mov
pop
stc
popf
cli
or
popa
inc
xchg
imul
xchg
mov
inc
mov
lret
lcall
xchg
mov
pop
cmp
pushf
and
test
push
fs
and
pusha
insl
xorb
js
xchg
push
out
dec
inc
and
fimull
enter
pop
testl
fs
sub
sub
jp
pop
mov
mov
gs
or
cwtl
mov
lret
imul
mov
adc
int3
adc
xchg
enter
adc
pop
add
out
ret
add
push
lock
ret
cmpsb
add
lock
out
movsb
cltd
sahf
rcrb
push
ret
ja,pn
subl
ror
out
sub
mov
pop
aam
pop
mov
int
jmp
cmp
incb
xchg
mov
dec
les
sarb
cld
adc
jmp
mov
out
mov
mov
mov
sbb
popf
ds
jno
enter
lret
and
jecxz
loope
xor
or
pop
jne
fsubl
insl
das
push
lahf
test
jmp
js
cmp
test
lods
sahf
mov
xor
lahf
imul
and
pushf
mov
ret
sub
arpl
test
loop
cmc
push
outsb
adc
daa
xor
cmp
inc
lahf
dec
jbe
lds
sbb
dec
pop
js
add
repz
shll
popa
inc
mov
push
mov
enter
dec
mov
mov
xor
mov
loopne
and
jnp
stos
add
loopne
cs
sub
inc
push
inc
ds
xchg
ret
jg
push
in
mov
xlat
mov
outsb
jo
pop
pop
dec
push
lea
push
sti
je
push
mov
sub
int
fisttpll
xorb
inc
popf
mov
stc
call
or
pop
leave
mov
scas
dec
jo
dec
pusha
lods
sub
mov
and
cmp
imul
sub
jmp
push
mov
std
scas
rcll
repz
rorl
iret
mov
lret
adcl
imul
mov
sbb
test
popf
and
pushl
jae
ljmp
mov
mov
jle
ds
cmp
cmpsb
sti
jmp
jge
mov
clc
jp
nop
mov
cmp
mov
js
stos
inc
pop
jo
into
jae
jl
jmp
je
push
mov
cli
repnz
add
xchg
lods
xchg
addr16
jo
jns
fbstp
add
xchg
out
jbe
sub
pop
aas
movsl
fisubrs
lea
test
clc
mov
iret
imul
fcomi
es
and
pop
or
mov
pop
pop
and
pusha
test
lods
fnstsw
xor
pop
bound
jmp
lret
lahf
push
fwait
mov
sbb
scas
icebp
test
cmp
fwait
stc
test
adc
mov
inc
xchg
dec
inc
cmpsb
ja
aaa
lcall
push
clc
lds
jmp
ds
cmpsl
jp
leave
pusha
lea
dec
add
aas
imul
insb
push
jle
call
dec
test
cs
cmc
add
jno
js
sub
pop
inc
das
daa
adc
test
stc
int3
lahf
xchg
repz
cld
mov
cwtl
mov
loopne
int3
sbb
insb
cs
aad
ds
lock
daa
outsb
pop
aas
and
movsb
out
mov
lods
mov
inc
xchg
pop
adc
repnz
repz
mov
mov
daa
jmp
into
test
jo
ficomps
leave
or
mov
adc
popf
repz
adc
movsl
fmul
cmp
je
lods
xor
je
or
xlat
xchg
test
notb
push
push
aas
aad
push
push
ljmp
adc
ret
stc
and
pop
mov
sbb
cs
aam
aas
pop
fldt
jae
and
jns
cmpsl
mov
jns
jmp
in
xor
imul
out
sub
push
aam
lcall
xor
lret
fists
loope
loope
lret
push
jmp
pop
mov
jno
mov
cmc
push
jmp
cmp
fcmovb
pop
sbbb
shlb
mov
es
mov
test
jle
pop
fwait
xor
popa
push
rorb
sbb
test
cmp
shl
mov
mov
test
sbb
insb
push
test
mov
xchg
inc
inc
xchg
and
xchg
int
lds
fidivs
mov
mov
cs
ret
cmp
cli
push
lret
aas
cmp
mov
mov
test
cs
sbb
bsr
mov
call
jmp
into
lds
or
mov
clc
jae
test
dec
xlat
xlat
cmp
jge
das
add
xor
loop
mov
repnz
gs
arpl
outsb
test
push
mov
repz
stc
add
push
jnp
push
and
scas
es
mov
xor
arpl
ds
sub
adcb
aas
popa
andb
inc
dec
inc
dec
dec
xor
add
inc
adcl
push
lock
jmp
test
mov
sbb
jb
mov
mov
push
adc
and
fimuls
push
or
mov
xchg
adc
push
shl
dec
loope
xor
aaa
push
clc
xchg
pop
mov
mov
int
test
xor
repz
pop
inc
sub
cwtl
nop
mov
push
ficompl
dec
xchg
lcall
andb
jmp
pop
add
scas
lret
inc
add
adc
lahf
fbld
mov
adc
data16
mov
mov
mov
addr16
jmp
and
je
fiaddl
jbe
jne
sub
xchg
fsubl
lds
add
adc
xlat
insl
das
icebp
movsb
cs
lds
movl
add
mov
inc
pop
aas
cli
jb
out
pop
xchg
jecxz
xchg
push
jo
ja
divl
xchg
cmc
sbb
xor
xor
clc
inc
sbb
ja
mov
in
es
xor
or
sbb
xchg
mov
scas
sub
dec
xchg
mov
sti
nop
int
pop
inc
out
icebp
xchg
imul
sub
je
or
ficoml
into
inc
mov
loope
mov
leave
lcall
jnp
fistpll
push
aam
lods
mov
ret
cmp
and
out
imul
outsb
or
iret
cmpsb
pop
pusha
adc
in
inc
jmp
call
cltd
adc
sbb
iret
inc
inc
in
xchg
cmpsl
jae
xchg
cmpb
jle
push
les
clc
pop
or
in
leave
out
call
mov
iret
mull
stos
push
test
sti
out
sbb
aad
jp
xchg
cmp
cwtl
test
fsubrl
pop
pop
xchg
popf
aad
xchg
xor
mov
int3
inc
inc
arpl
movsb
sbb
out
repnz
push
mov
sti
rorl
mov
test
es
and
iret
pop
inc
shlb
push
jmp
in
sub
dec
iret
test
push
fwait
je
mov
daa
les
loope
insl
dec
pop
mov
idivb
lcall
test
inc
or
inc
lahf
das
sub
and
jno
fsubrs
sub
inc
pop
arpl
pop
pop
repz
cmp
ja
sbb
out
cmp
icebp
push
nop
dec
rcr
cmpsl
or
test
into
dec
cmpsb
in
inc
mov
and
or
ss
mov
insl
rolb
sahf
mov
sub
and
xchg
sub
out
xlat
pop
jno
mov
pop
fisubl
mov
nop
dec
outsl
fsub
mov
cwtl
jle
xchg
insb
data16
adc
aaa
test
and
push
xor
hlt
movsb
subb
lods
fsts
stc
pushf
ret
arpl
pop
stos
mov
jp
jge
je
bound
cmpl
push
hlt
adc
dec
inc
es
or
cwtl
dec
add
xchg
icebp
xor
mov
sub
xlat
pushf
cmp
sub
decb
mov
outsl
pushf
jl
inc
and
mov
sub
pop
adc
mov
stc
sub
mov
or
push
nop
mull
mov
jp
mov
sub
incl
clc
gs
mov
cmpsl
mov
and
loopne
ret
lret
cmp
mov
jp
scas
fnsave
pop
jnp
jle
pop
pushf
js
lahf
push
sub
cmp
imul
enter
rol
xchg
das
out
pusha
repnz
inc
push
mov
and
imul
and
pushf
lods
scas
pop
sbb
pushf
sub
fnstenv
stos
rcr
hlt
mov
cli
inc
stos
lea
stc
xchg
push
call
xor
jbe
xchg
out
inc
ja
sti
fwait
int
push
out
stos
cmp
push
stc
add
mov
add
popa
push
sbb
cli
add
mov
notl
or
or
ljmp
fisttpll
clc
xchg
roll
ds
mov
mov
rorb
mov
stos
sub
adc
js
adc
shr
iret
adc
dec
add
dec
imul
fldl
jge
cmp
stos
imul
mov
out
ss
push
xchg
mov
push
dec
stos
ja
gs
jl
cmp
sbb
ret
xchg
lock
aas
cwtl
aam
dec
lds
sub
mov
add
fwait
loope
test
loope
and
add
scas
in
aas
test
sub
jl
jbe
or
mov
pop
or
sbb
mov
sub
inc
push
popf
movlps
sbb
pop
and
addl
shlb
push
inc
arpl
call
push
adc
lcall
fucomp
cltd
popf
test
dec
or
fsubr
les
sahf
inc
cwtl
outsb
jmp
stc
bound
repnz
dec
imul
scas
or
cmp
sbb
mov
push
test
mov
adc
fwait
and
orl
inc
mov
hlt
stos
mov
or
xchg
mov
je
pavgw
mov
mov
xchg
cld
je
test
insb
test
cmpsb
in
adc
xor
divl
lock
ret
push
sarb
aaa
fsubs
cmp
mov
mov
push
jae
je
add
xor
stc
xchg
cmp
add
mov
rol
inc
sub
cltd
cmp
loopne
xor
mov
shrl
out
jge
inc
or
movb
or
pop
cmpsb
lcall
xor
lods
adc
leave
add
jno
nop
push
loop
sbb
loope
add
bnd
jbe
xchg
aas
dec
sbb
ljmp
jmp
xor
test
add
sub
mov
pusha
call
inc
push
out
cmp
sahf
sub
inc
in
xor
sbb
pop
test
mov
call
mov
dec
jne
out
jbe
mov
rcll
call
imul
cmp
scas
es
imul
or
sahf
dec
shll
in
add
push
xchg
lods
mov
scas
mov
in
mov
jne
test
jns
es
lcall
sarl
pop
icebp
out
pop
fsubrs
ficompl
lret
fists
sbb
inc
or
add
push
ret
jl
outsl
jo
inc
test
add
mov
or
inc
sarb
or
pop
add
or
mov
adc
or
add
out
cmp
jge
test
nop
and
outsl
insl
test
lock
cli
add
push
cli
mov
add
icebp
inc
es
fmul
and
ljmp
xchg
pop
jo
pop
xchg
adc
adc
ret
in
hlt
dec
int
fdivrp
push
sbb
lods
push
xchg
nop
jo
idivb
xor
stc
cld
inc
out
lcall
pusha
or
xor
xlat
in
fisttpll
pop
sub
movsl
cmp
lea
shrl
xor
jnp
mov
or
and
cmp
push
andl
cmp
lea
cld
out
adc
movsl
mov
shrb
fsts
add
push
ret
ss
mov
stos
fiaddl
adc
jne
std
cmp
mov
lea
or
sub
jmp
fwait
mov
inc
pop
xor
push
mov
mov
out
sbbb
test
imulb
aaa
cmc
test
imul
fists
mov
add
adc
call
cvtdq2ps
adc
jecxz
push
das
push
cmp
and
mov
pop
cld
sbb
cmpsb
cmc
mov
push
jnp
iret
cmp
xor
lcall
nop
mov
lds
jnp
aad
mov
cmp
sub
sub
sti
je
adc
jg
bound
movsl
lret
cmp
out
in
stos
flds
xorl
jns
movsl
imul
dec
adc
ficoms
xor
jae
int3
ja
sbb
add
mov
pop
outsl
and
aaa
mov
pop
pop
shlb
pop
orl
das
add
data16
fdivs
sub
fistl
mov
jecxz
adcl
sbb
aas
mov
dec
lods
and
pop
sub
scas
lock
inc
scas
sbb
jnp
stos
ja
in
jnp
dec
lcall
mov
cmp
cmp
out
jmp
mov
inc
xchg
jns
fidivrl
stos
sub
xchg
mov
sub
cli
imul
push
xchg
ja
or
pop
inc
cmp
jb
pushf
adcb
pop
mov
ljmp
outsl
adc
and
pop
negl
mov
push
lock
pop
jo
mov
fcmovnbe
dec
scas
js
clc
clc
xchg
mulb
sub
xchg
xchg
inc
ss
or
cmp
aaa
into
add
jl
stos
xchg
pop
jnp
sbb
pop
movsb
or
popa
pop
pop
insl
lods
sub
negl
into
cmp
xchg
cmp
stos
popa
data16
enter
shrb
mov
arpl
pushf
pop
notl
sarl
mov
sahf
pop
cs
xchg
test
mov
xchg
and
or
cmpl
mov
dec
into
xor
jge
stos
out
ficoms
pop
lds
jge
cltd
mov
inc
pop
sub
out
xor
add
pop
ss
push
call
inc
loopne
dec
fsubrs
pop
in
hlt
mov
sub
inc
cs
enter
push
mov
add
push
out
adc
jl
pusha
or
test
push
into
repz
aam
pop
out
movsl
xchg
bound
pop
arpl
pop
or
ret
out
ja
dec
mov
pushf
xchg
mov
jp
mull
adc
clc
pop
fwait
ss
xchg
fs
jbe
faddl
push
pop
jle
cwtl
jg
mov
jl
xchg
jno
pop
mov
sub
xchg
cmp
bound
imul
es
mov
sti
fdivs
movsl
iret
sbb
xchg
test
lcall
bound
outsb
or
clc
mov
and
imul
xor
dec
bound
bswap
jge
cltd
test
and
jne
sbb
jb
mov
fmull
adc
mov
add
subl
pop
mov
dec
movsl
test
sbb
testl
repz
int
ret
inc
std
pop
je
sbb
ja
mov
lret
cmp
sub
xor
adc
mov
dec
adc
addr16
js
mov
shrl
mov
stos
lcall
adc
xor
pop
in
sbb
and
jbe
or
hlt
testl
ljmp
es
push
add
jnp
mov
cmpsb
stc
arpl
add
or
mov
mov
mov
or
push
push
xlat
daa
pop
xchg
mov
mov
add
or
incb
jp
aaa
enter
cmp
dec
cmpsb
movsl
mov
shll
xor
xlat
cmp
in
les
out
addb
shl
mov
and
ljmp
adc
adc
movsl
cmp
or
pop
cmpsl
fldcw
add
dec
xchg
addr16
lahf
adc
dec
shll
loope
pop
add
stc
pop
mov
decb
out
lds
into
xchg
jb
dec
mov
dec
shll
fcos
xor
test
sub
decl
lods
shl
idiv
xchg
dec
push
adc
data16
clc
ljmp
inc
call
pop
fnsave
ret
mov
mov
in
sub
push
cli
xchg
scas
std
outsb
arpl
fstp
jg
fimull
jae
jl
nop
push
lcall
adc
fistpll
repnz
shlb
clc
push
fimull
ljmp
leave
outsl
push
addr16
fwait
inc
clc
pop
popa
cwtl
movsb
xchg
or
xchg
sub
ret
inc
stos
fsubs
pop
scas
cmp
enter
mov
movsb
imul
pop
push
inc
mov
stc
jo
push
gs
lret
mov
jo
xor
cwtl
push
cltd
cwtl
push
inc
add
push
je
fiaddl
js
adc
stos
out
insl
rol
lret
cmp
xchg
imul
or
inc
sub
push
icebp
test
mov
in
mov
cltd
pop
cmp
xor
jge
stc
cmpsl
inc
ret
lahf
hlt
jmp
and
mov
sbb
xor
xchg
sbb
stc
mov
pop
ja
mov
aam
xchg
inc
dec
inc
jbe
dec
adc
sbb
pusha
sub
mov
inc
lods
sti
ljmp
inc
loopne
out
outsb
inc
lret
cmp
into
dec
imul
fwait
imul
mov
mov
sub
addr16
mov
xchg
inc
stc
sbb
popa
daa
movsl
jo
repz
arpl
leave
mov
out
add
loope
addl
rclb
negl
je
rcr
das
jno
in
stc
xchg
insl
fimull
inc
mov
sahf
push
jmp
lods
stos
mov
andl
cmovp
dec
or
subb
pop
int
jp
cld
mov
push
push
dec
aam
bound
inc
orb
xchg
stos
inc
std
and
lcall
mov
mov
pop
fistl
ficomps
movsl
shll
aas
push
fstpl
sti
es
repnz
add
sub
ds
insl
sti
push
popl
aam
testl
sub
ljmp
push
in
xchg
test
repnz
sbb
andb
test
sub
jne
ds
mov
pop
mov
xchg
test
inc
call
pop
xor
lods
pop
int3
pop
enterw
or
loope
test
jle
movsb
or
and
scas
dec
push
add
jae
lret
pop
jmp
sub
arpl
shrl
mov
movsb
mov
movsl
into
lea
les
xchg
lods
xchg
or
fiadds
pop
pop
lods
sub
mov
pop
insl
xchg
push
insb
int
aam
push
shl
jb
rclb
xchg
sbb
mov
in
imul
pop
push
sti
mov
pop
testl
xchg
mov
jl
add
stos
push
lea
rcrb
shlb
sub
popl
mov
loope
jbe
outsl
sub
mov
push
das
xchg
xchg
testb
xor
lret
cmc
jecxz
movsb
xchg
pop
mov
and
gs
ficoms
or
xchg
push
shrb
imul
mov
fsubrl
mov
mov
jp
sbb
stc
cld
stos
dec
mov
fldcw
rclb
fsts
inc
dec
inc
mov
jp
cmpsl
pop
xor
dec
dec
ret
int3
sbb
clc
scas
dec
aad
popf
pop
sub
mov
sub
lods
cmp
and
inc
mov
jmp
xchg
jp
mov
cmp
iret
push
repnz
in
jb
cmpsb
jae
xchg
and
imul
dec
push
sbb
mov
stos
or
cli
jmp
pop
xor
pusha
and
cli
sbb
and
fmulp
leave
dec
cmp
inc
leave
pusha
sub
jb
push
cltd
pop
mov
cld
test
xchg
jecxz
mov
loope
adc
into
cmpsb
push
fsubrs
into
out
or
pop
push
lock
icebp
xor
push
cmp
clc
les
rcrb
test
rorl
fbld
mov
insb
cmc
xchg
mov
push
orl
out
out
cmp
mov
jae
cmpsb
push
iret
xchg
in
fs
fisttps
cli
ja
lea
mov
jbe
daa
push
je
cmc
fnstcw
pop
ds
int3
lret
fidivs
shrl
xor
add
inc
divl
mov
mov
lahf
xchg
add
sbb
and
jge
std
cmp
pop
mov
repnz
or
cmc
xchg
cmp
push
jecxz
cltd
and
ret
inc
fs
sub
push
out
in
repz
add
add
xor
lahf
das
cs
adc
push
mov
popa
lret
pop
hlt
mov
or
jg
popf
sarl
icebp
sub
dec
add
mov
jo
mov
shrb
repz
dec
clc
push
bound
adc
cli
jle
push
outsb
enter
nop
cmp
sbbb
sub
dec
push
dec
std
jns
out
iret
rcrl
xchg
mov
lcall
lret
jo
nop
js
push
jns
xor
mov
daa
jecxz
cmc
stos
sub
out
movsl
xchg
lock
ss
lret
add
push
outsl
inc
in
add
add
push
movsl
lods
ss
add
scas
daa
iret
ja
mov
sti
mov
sbb
loop
jns
loopne
mov
sbbl
inc
dec
push
pop
pop
shrb
jl
stos
test
lret
scas
pop
test
mov
stc
daa
loope
mov
inc
sbb
cwtl
and
es
stos
scas
mull
fsubrl
or
and
arpl
or
cmpsb
ret
shrb
les
call
add
sbb
mov
and
mov
jns
cmp
mov
imul
lcall
fstpt
roll
ja
or
dec
sbb
jl
shlb
in
into
jecxz
jne
clc
or
into
mov
or
dec
nop
mov
stos
ror
dec
pusha
cmp
in
cmpsl
jb
rorl
jne
in
sbb
bound
push
mov
ds
dec
push
xor
adc
sbb
jae
jecxz
adc
or
shl
push
mov
mov
or
xor
mov
lahf
inc
lret
xchg
push
out
inc
insb
imull
pop
mov
lret
push
sub
lret
out
lods
std
xchg
iret
xor
test
mov
inc
pop
roll
xor
xor
test
or
mov
adc
hlt
sti
in
pop
pop
daa
and
mov
imul
shl
dec
mov
pop
movsb
lahf
movsb
pop
sub
push
leave
lods
add
icebp
fldcw
push
out
and
xor
push
lods
ss
bound
daa
iret
mov
lods
push
enter
adc
stos
iret
sar
rolb
insl
add
in
stos
and
push
fnstsw
lahf
mov
icebp
sahf
mov
repz
jne
fldcw
pop
cmp
inc
fiadds
inc
xchg
fwait
popf
and
xchg
outsb
popa
stos
push
sub
into
mov
adc
sub
dec
cmpl
cld
xor
inc
inc
add
or
cltd
out
leave
add
repz
stos
xchg
je
outsl
pop
lods
outsb
iret
mov
adc
hlt
pop
in
lret
mov
cmc
xchg
xchg
clc
push
cmp
ljmp
sub
pop
leave
and
mov
loope
sub
mov
lcall
loope
cli
jg
sub
fldenv
daa
not
shl
or
mov
cmp
jmp
mov
mov
jae
loopne
mov
clc
lret
shrb
lahf
jns
int
xchg
sbb
in
dec
ja
push
push
mov
test
sub
cmp
jp
sbb
lods
xchg
mov
pop
ja
or
popf
into
pop
and
push
mov
outsb
xchg
addr16
int3
cltd
lret
test
mov
in
fadd
mov
cli
jl
adc
mov
push
push
int3
cli
sti
mov
jp
cmp
cmp
ja
cmpsl
orb
repz
in
shll
dec
cmpsl
push
test
mov
jns
outsb
daa
mov
push
add
das
mov
xchg
or
xchg
lock
push
mov
enter
mov
push
pop
add
or
fisubl
push
mov
xchg
cmpsl
xchg
push
sbb
roll
xchg
fs
pop
cltd
add
in
jl
stos
cmp
pop
in
addr16
andnps
cltd
add
pop
fistpll
pop
rcrl
gs
out
push
and
sbb
aas
mov
pop
out
adc
aas
jbe
out
sbb
cmc
jg
stos
out
cmp
pop
fwait
jmp
mov
dec
inc
stc
push
lahf
outsl
das
test
mov
mov
pop
imul
or
fcomp
sub
mov
negl
pop
lods
pop
lods
xor
sbb
nop
or
jg
arpl
and
movsb
in
fnsave
pop
js
in
and
sub
lret
xchg
inc
or
sarl
call
mov
out
jp
dec
aam
add
xchg
call
or
cmp
and
push
std
sub
mov
sub
dec
mov
stc
nop
out
or
sub
repz
push
mov
mov
xchg
in
popf
mov
out
pop
inc
repnz
and
mov
cmpsl
fistps
cmp
repz
mov
mov
insl
rcrl
pop
insl
sub
arpl
lock
dec
jg
in
out
pop
jg
add
cwtl
push
mov
leave
and
cmp
sahf
add
adc
sbb
out
fbstp
stos
pop
pusha
pop
adc
ljmp
stos
adc
jle
dec
xchg
subl
add
add
add
and
jnp
dec
pop
xchg
inc
add
jg
push
bound
call
xor
fidivl
adc
or
int3
enter
or
out
pop
ljmp
pop
mov
les
popf
xor
mov
jmp
mov
mov
push
pop
ret
fdiv
push
fcmovnu
sub
fwait
insb
xor
jnp
sahf
hlt
sbb
mov
aaa
sbb
xor
gs
addl
mov
jbe
mov
xchg
stos
sbb
cmp
jb
xchg
push
hlt
pop
scas
jo
lea
inc
mov
movsl
mov
xchg
cmpsb
xor
das
loop
inc
mov
loop
sarl
dec
fistpll
addr16
mov
cmc
mov
dec
stos
push
mov
js
sub
ret
ljmp
mov
test
ljmp
push
jl
shrb
jbe
fcmovbe
pop
xchg
int
daa
sbb
sar
sti
enter
scas
icebp
aad
inc
push
fmuls
mov
mov
pop
outsl
add
cmp
mov
pop
mov
push
out
daa
lods
cmp
adc
and
frstor
or
stos
pop
dec
mov
mov
lods
mov
jecxz
push
ljmp
ror
sbb
mov
jae
xor
loop
sub
mov
cmp
je
pop
mov
jmp
lods
inc
repz
fisubrs
push
movb
lcall
sub
inc
jne
addl
push
jge
cmp
sbb
sar
mov
mov
cmp
sarb
sub
or
addr16
test
sub
jge
sbb
xchg
mov
pop
push
sbb
xlat
cmp
or
fldcw
jmp
sbb
clc
shrb
mov
lods
out
cmp
repnz
int3
push
sbbb
xchg
xchg
iret
xor
push
outsl
test
mov
es
out
and
push
add
aad
fdivs
outsl
adc
in
fcomps
lahf
jo
dec
push
cmpsl
jne
mov
movsl
push
inc
cmp
rcrb
sub
mov
loope
xor
stos
xchg
push
jl
adc
cmp
cmp
std
xchg
pop
jae
add
dec
iret
inc
outsl
pop
push
inc
leave
jns
out
cltd
push
pusha
cmpsl
sbb
aaa
aaa
sbb
inc
cmp
adc
lods
test
leave
adc
mov
adc
dec
sbb
xchg
and
and
fnstsw
adc
xchg
jo
mov
add
mov
dec
or
shrb
xchg
in
push
out
inc
fists
add
jnp
in
sbb
mov
pop
adc
insl
pop
cmp
sub
mov
jg
pusha
push
jg
dec
int3
call
subb
cmp
inc
frstor
sbb
into
popa
mov
dec
add
stos
xchg
and
ret
data16
daa
add
or
cmp
mov
jbe
pop
scas
mov
jmp
btcl
insb
test
idivb
notl
cmpsb
xor
jns
push
loopne
cmp
pushf
lods
out
scas
fwait
movb
or
imul
test
xor
mov
jmp
test
dec
loop
adc
test
mov
fsub
sbb
dec
jnp
sub
ret
sbb
andb
push
fists
mov
insl
sbb
mov
fsubs
test
pop
out
scas
mov
fs
adc
jno
pushf
push
clc
sub
fbld
rcrb
and
xchg
inc
aas
ja
push
into
mov
lret
add
mov
pop
mov
mov
loopne
and
stos
pop
lret
xchg
mov
push
loop
add
xchg
movsl
and
jge
push
add
and
jno
lret
aad
test
or
outsl
add
sbb
cmp
pop
in
fcompl
pop
call
pop
sbb
push
adc
xor
and
sbb
xor
movsl
lock
push
lret
xchg
ljmp
mov
jo
repz
test
xlat
jb
sub
movsl
fldt
mov
or
inc
daa
rolb
shrl
xor
enter
pop
frstor
pop
subb
es
dec
cmc
adc
ffreep
cwtl
xchg
sbb
in
out
mov
adc
xor
js
sbb
test
clc
add
xchg
mov
jae
incl
xchg
sti
push
fisubrl
mov
and
or
mov
and
adc
es
xor
and
and
add
push
aaa
lahf
mov
fists
loopne
rorb
cmp
mov
lcall
rcr
das
fwait
out
shll
fnsave
shrb
sahf
inc
adc
and
arpl
push
sahf
pushf
cmp
fistl
scas
push
or
sub
das
xor
or
mov
mov
push
icebp
pop
rcll
loope
mov
clc
ret
ljmp
cmp
mov
std
adc
inc
push
mov
mov
lods
stc
or
dec
xchg
xor
stos
push
aas
loopne
lcall
pop
aad
out
or
cmc
es
cld
jnp
adc
cwtl
or
dec
arpl
or
and
push
adc
push
cmp
push
jmp
not
and
xor
xlat
jge
sbb
ja
test
sub
adc
sbb
xchg
xchg
hlt
sub
adc
or
mov
pop
sbb
lret
out
cli
push
mov
xor
jo
inc
scas
xchg
jge
inc
sti
pop
and
push
mov
out
adcb
mov
scas
push
cmp
arpl
add
pop
imul
mov
inc
sbb
sarl
pop
subl
mov
lahf
push
dec
pop
inc
iret
fs
xchg
mov
ds
lret
insl
mov
cmp
sub
mov
push
test
das
or
test
enter
sub
hlt
xchg
pop
push
test
cmc
mov
mov
test
sub
retw
ds
iret
test
sub
mov
mov
and
in
adc
jo
je
insl
icebp
ds
filds
lock
adcl
pop
and
jo
or
icebp
push
notb
cld
test
sub
push
or
cmp
push
movsb
insl
lods
xchg
fwait
push
nop
sahf
pushf
daa
stos
inc
insb
or
xor
xchg
fldt
push
xor
call
mov
adc
movsl
push
movsl
xor
clc
scas
adc
rorl
cmp
cmp
push
sub
sbb
jmp
idivb
cld
test
fimull
cmpb
lahf
xchg
sub
bound
dec
stos
jbe
jmp
incb
pop
stc
test
cwtl
stc
cli
sahf
or
xchg
es
popf
mov
pop
into
cmpsb
dec
mov
add
mov
cmp
out
or
jge
rorb
loope
inc
stos
or
std
add
inc
adc
mov
stc
int3
leave
mov
mov
mov
sahf
imul
jae
mov
and
jnp
cmp
xor
pop
xor
jne
loop
push
adc
mov
cmp
test
roll
lea
or
daa
cld
add
dec
mov
push
cwtl
ljmp
sbb
mov
mov
test
add
mov
pop
nop
push
pop
mov
fsts
jbe
xchg
mov
and
or
pop
sbb
pop
mov
mov
cmp
lock
xor
push
das
insb
adc
and
cld
jns
mov
fsubrs
or
mov
clc
sbb
xchg
push
scas
mov
cltd
mov
cmp
mov
add
cld
adc
test
or
dec
jae
and
push
jae
es
aaa
and
pusha
jnp
sbb
rcrb
cmp
mov
push
scas
dec
or
xchg
pop
xchg
out
push
jbe
jne
mov
inc
sbb
fs
sbb
adc
push
lret
xchg
in
test
outsb
repnz
xchg
jecxz
xor
insb
pop
pop
push
xchg
or
cwtl
pop
mov
jb
fimuls
dec
subl
stos
cli
aaa
test
jmp
dec
arpl
cmp
adc
mov
xor
adc
pop
mov
movsb
je
mov
lods
ja
push
aaa
lahf
aaa
fsubr
gs
mov
xor
test
xchg
xor
mov
jmp
push
xchg
ficoms
xchg
loopne
cmp
inc
insb
dec
outsb
in
dec
je
imul
aaa
add
dec
pop
or
mov
push
aad
cmc
sub
sbb
fyl2xp1
repnz
popa
mov
mov
push
inc
jecxz
jns
leave
mov
mov
mov
mov
xchg
push
movsb
cmp
pop
lods
cmp
mov
lock
cmp
jmp
mov
xchg
aaa
mov
mov
and
fs
cmp
lret
call
dec
add
dec
fs
and
mov
into
push
pop
cmp
adc
inc
test
into
popa
dec
pop
fists
sub
sbb
js
arpl
insb
sbb
shll
or
in
pop
mov
sbb
push
or
test
jl
int3
sub
enter
mov
daa
or
scas
cs
addr16
hlt
scas
stos
daa
fisubs
cmp
cld
enter
mov
lahf
scas
jae
push
push
hlt
sub
loopne
adc
and
cmpsl
mov
aaa
lret
mov
repz
rcrb
sub
fisubs
loope
sbb
arpl
lea
stos
loopne
aad
dec
mov
das
mov
pusha
rcr
shrb
jnp
adc
daa
cmp
arpl
xchg
mov
xchg
xchg
imul
jl
mov
es
inc
out
sub
jb
ss
insb
pop
sub
push
cmp
popf
and
cmc
cmp
or
mov
jno
xor
add
push
imull
fsts
xchg
shrl
stc
jae
mov
les
jp
cmp
sub
and
or
adc
push
std
xchg
lret
shr
inc
adc
add
xchg
jb
fsubrs
std
stos
fmul
push
xchg
push
cmp
ret
notl
subb
inc
lds
fiaddl
and
movsb
mov
out
sub
dec
or
inc
lock
pop
cmp
cmp
mov
rcrb
scas
loopne
mul
add
pop
fmulp
in
pop
push
inc
jmp
pop
mov
stc
push
push
add
sbb
mov
and
mov
mov
mov
xchg
nop
in
data16
idivb
mov
outsl
dec
mov
scas
pop
in
fsts
stos
les
pop
out
pusha
sahf
or
adc
pop
push
jns
sar
mov
xchg
or
adc
jns
cli
shlb
inc
jae
pop
fnstsw
mov
or
adcl
stos
add
aam
xchg
loope
xor
or
adc
repz
fnstenv
ss
push
in
lea
push
fs
in
jle
das
jbe
xchg
loop
push
sbb
fsts
sbb
xchg
xor
pusha
push
inc
call
mov
andl
mov
pop
iret
inc
mov
loop
lods
loopne
xchg
or
pop
dec
sbbl
sub
adc
xor
andl
imul
push
xor
subl
rorl
push
lahf
test
xchg
fadd
xchg
push
ljmp
notb
clc
sub
and
pop
out
mov
leave
es
mov
out
mov
pop
fistl
adc
clc
mov
push
bound
addr16
aam
xor
and
mov
imul
insl
aaa
pop
enter
in
cwtl
pushf
shlb
adc
dec
outsl
arpl
lea
push
or
roll
xor
pusha
mov
add
mov
adc
loopne
cmc
and
push
stos
xor
mov
negb
movsl
xchg
ds
sub
outsb
and
sbb
xor
push
jns
xor
insb
add
add
cmc
movsl
das
jmp
mov
xor
pop
sub
decl
mov
add
push
insb
pop
dec
xor
cmp
nop
mov
fs
jns
mov
mov
inc
xchg
daa
jno
in
cmp
mov
ss
cmp
pop
mov
inc
insl
and
xchg
cmp
mov
sahf
mov
push
jbe
add
mov
leave
pop
loopne
mov
sti
adc
mov
sbb
mov
xchg
inc
nop
ljmp
inc
cmp
cmp
out
xor
adc
es
pop
enter
rclb
dec
mov
mov
mov
xor
xor
xor
pop
loope
test
dec
mov
fs
mov
fidivrs
push
jnp
inc
cwtl
cmp
xchg
enter
cmp
pushf
test
and
aad
fwait
insw
pop
jns
and
cmp
cmp
jmp
xor
imul
shl
sahf
jns
push
mov
int
xchg
repz
pop
cmp
dec
cltd
pop
gs
mov
dec
sbb
mov
fs
test
or
aas
push
pop
inc
push
sahf
sbb
mov
inc
adc
and
outsb
push
jae
dec
mov
adc
mov
pop
and
shr
mov
inc
mov
fisttpll
aam
fnstcw
ret
cmp
add
into
push
sbb
bound
adc
or
stc
sub
sbbb
stos
jo
enter
mov
fistps
add
inc
leave
iret
inc
daa
mov
push
add
push
add
hlt
js
aaa
inc
mov
xchg
dec
jmp
inc
call
mov
cmp
push
mov
or
cmp
xchg
jb
inc
jnp
jbe
mov
lea
jae
test
sbb
pop
mov
mov
cld
sbb
popa
push
xor
dec
jnp
int
insb
sub
lret
int
and
jns
ja
push
aam
mov
xor
cmp
imul
xchg
lods
and
pop
xlat
les
push
je
into
lea
jbe
cmp
scas
aam
jnp
insb
lods
and
jmp
int
fs
cmc
iret
inc
dec
fs
fnstsw
jge
adc
je
lods
test
push
call
sbb
inc
cmp
loope
cli
les
xlat
ds
repz
push
push
mov
push
jecxz
mov
pop
mov
adc
fcmovu
jo
leave
mov
push
or
push
push
iret
pop
je
add
cmpsb
inc
ja
push
xchg
repnz
cmp
jmp
add
cltd
mov
jnp
js
dec
jle
fscale
mov
dec
push
mov
cmc
pop
push
xchg
adc
sub
jnp
sub
cmp
xor
xchg
pop
add
sub
lods
sahf
jnp
xor
cmp
dec
add
pop
call
dec
pop
leave
cwtl
fwait
sub
lock
adc
cli
imul
test
push
dec
loopne
mov
fs
jg
mov
clc
jmp
inc
cmp
es
inc
xchg
hlt
cmpsb
dec
into
push
lcall
sub
out
adc
dec
inc
cmpl
jae
dec
shll
in
push
pop
pop
inc
jge
mov
pop
aam
in
mov
stos
cmp
xchg
or
mov
cmp
in
ds
nop
pop
jmp
loopne
mov
movsl
fdivrl
dec
leave
push
xlat
cmp
xchg
mov
lahf
ss
rcl
lea
in
mov
dec
dec
aad
add
cmpsb
mov
xchg
icebp
adc
dec
inc
int
push
je
lods
out
popf
pop
fsubl
outsb
xchg
out
mov
inc
call
push
xchg
xor
push
push
aaa
test
andl
cs
mov
repnz
ds
jnp
popf
add
inc
roll
mov
dec
xor
mov
movsb
pop
orl
sti
inc
mov
lock
xlat
xor
xor
rolb
xchg
mov
dec
mov
jno
mov
mov
mov
pushf
es
jae
and
sub
cmp
push
push
lods
push
je
add
js
fldt
test
xchg
repnz
and
cmp
fidivl
jne
push
mov
sbb
xchg
sarb
mov
mov
or
pop
jmp
fdivl
xchg
fisttps
leave
mov
push
repnz
int3
shl
sbb
xor
lods
push
pop
imul
and
jne
sbb
movb
pop
inc
sarl
jbe
jge
rcrb
in
cmp
test
call
mov
inc
lahf
adc
sbb
pop
mov
adc
push
mov
mov
pop
fwait
pop
scas
repz
pop
out
and
cmp
sub
imul
loop
popa
mov
dec
dec
pop
loope
arpl
push
lock
lret
push
or
sub
cld
mov
shlb
push
jl
mov
mov
cmpsl
hlt
lds
push
xchg
sub
addr16
add
xlat
xor
frstor
mov
das
testb
sbb
inc
xchg
popa
sahf
iret
out
mov
push
insb
je
inc
jbe
xor
sbb
cmpsb
les
push
clc
jo
outsl
xorl
pop
mov
ret
pop
gs
rcr
jae
and
stc
cmc
out
repnz
out
jns
mulb
add
stos
cli
outsl
daa
cmp
and
outsb
clc
mov
mov
les
xor
adc
add
mov
cmpsb
push
stc
pop
jns
cmp
aas
lret
outsl
mov
xchg
and
out
sub
out
outsl
dec
xchg
mov
lods
ret
cmp
mov
test
sbb
sbb
addl
jnp
dec
out
mov
mov
jmp
inc
sub
lcall
dec
addb
cmp
mov
pop
mov
dec
daa
bound
pop
fsubl
sbb
push
xchg
push
popf
push
push
or
xchg
add
jne
jg
mov
jl
add
xchg
sub
mov
mov
xchg
loopne
test
push
cmp
lahf
cmp
icebp
mov
outsb
and
out
push
jne
push
int
xor
push
ds
dec
fs
jno
mov
mov
fwait
cmp
or
inc
fmull
add
aam
or
sbb
lea
fsubs
mov
xor
sbb
es
data16
es
mov
clc
rcl
fidivrs
add
xorl
arpl
lock
inc
mov
ret
fnstcw
scas
jmp
push
xor
lret
xor
scas
mov
gs
dec
addr16
mov
push
repnz
imul
movsl
pop
mov
jns
dec
and
test
and
sub
add
fisubrs
pop
mov
jno
lea
loope
aam
jecxz
clc
popa
inc
gs
lea
adc
push
repnz
lods
xor
lods
fdiv
pushf
dec
push
fiadds
jae
dec
sbb
pop
lcall
mov
xor
jb
stc
sub
sbb
fdivrl
shl
call
mov
mov
lret
icebp
and
test
roll
sub
out
mov
fimuls
jp
loop
lahf
xor
add
scas
aas
lret
jge
ljmp
pop
cs
mov
add
xor
xor
sub
jl
fsts
or
cmc
insl
es
push
or
arpl
mov
aad
push
pushfw
xchg
imul
nop
lods
push
ret
ds
mov
andl
jmp
mov
lret
prefetch
mov
sub
outsl
lods
jle
inc
fwait
push
adc
addl
sub
outsl
jmp
leave
jle
sbb
xchg
mov
cwtl
xlat
icebp
sub
jp
inc
enter
fbld
cmpsb
mov
xor
dec
inc
nop
add
hlt
lds
lods
xlat
insl
test
lock
add
cmp
and
inc
out
cmpsb
insl
fwait
dec
into
mov
push
rcl
imul
call
pop
inc
jo
xor
inc
push
xor
push
jae
push
mov
paddb
jno
mov
adc
sbb
mov
mov
aam
adc
pop
jp
pop
arpl
mov
add
mov
test
inc
test
aad
call
dec
into
imul
ljmp
imul
aas
int
add
xlat
andb
jns
je
mov
test
add
addr16
imul
fs
mov
int3
xlat
in
inc
fimull
movsl
fmull
dec
daa
pushf
repnz
xchg
sub
mov
imul
jg
pusha
mov
cmp
inc
fsubl
fmull
adc
std
xchg
aaa
cwtl
or
jo
and
mov
cmp
aad
dec
pop
stc
mov
mov
dec
mov
lds
inc
scas
push
cmp
push
addr16
mov
popf
test
mov
or
push
mov
xor
mov
and
scas
mov
add
xor
aad
out
es
cmp
in
dec
or
pop
and
sub
lea
cmc
xchg
popf
scas
cmp
or
rorb
sbb
insb
mov
push
fildll
xlat
ret
inc
adc
and
out
outsb
stc
in
pop
sub
and
push
ja
cwtl
sub
push
sub
sbb
push
pop
mov
jl
movsl
add
mov
sub
pushl
fsubs
sbb
into
or
cmpsl
adc
imul
pusha
aam
mov
rcll
mov
cli
sub
imul
inc
add
push
mov
shll
hlt
mov
pop
mov
push
adc
clc
mov
shlb
adc
pop
and
sub
lods
outsb
leave
iret
mov
or
jb
push
sub
lret
pop
mov
mov
push
scas
jbe
add
push
fcmovu
and
shl
pop
clc
imull
nop
je
je
cld
mov
mov
lret
xchg
jns
test
lea
cmp
mov
xor
aam
add
andl
jae
inc
push
dec
dec
mov
inc
outsb
mov
push
mov
ljmp
mov
adc
or
pushl
cmp
ret
sbb
pop
insb
dec
jecxz
sub
test
dec
inc
mov
out
ss
pop
dec
xchg
pop
or
and
dec
insb
stc
pop
lret
add
leave
pushf
sahf
mov
hlt
mov
insl
dec
loopne
pop
mov
cmp
push
pop
pusha
out
xchg
jno
lea
mov
dec
mov
sbb
insl
mov
into
inc
mov
aaa
sub
sub
aam
jp
lret
movb
sbb
fimuls
jmp
mov
aam
sbb
sti
push
jp
lods
and
push
pop
xchg
movsl
mov
push
mov
or
add
sti
dec
movsl
inc
mov
push
pushf
orb
dec
addr16
call
rcrl
loop
out
push
mov
loope
and
xchg
shrb
mov
pushf
xor
or
cmp
mov
inc
cmp
jmp
add
push
sbb
xor
arpl
out
and
nop
rolb
outsl
mov
cmp
into
or
sbb
rorl
popa
imul
jmp
mov
sbb
or
cmp
and
inc
add
enter
mov
and
cs
stos
stos
jmp
data16
stos
or
inc
inc
adc
decb
scas
movsl
andl
xor
or
mov
imul
xchg
fcompl
xchg
add
mov
dec
call
es
dec
push
orl
inc
orb
bound
sub
orb
pop
sub
adc
jnp
lds
sub
addr16
xor
mov
xchg
cmp
aaa
minps
jne
mov
outsb
insl
mulb
shll
fidivrl
and
fsubl
adc
and
pop
push
jne
test
cld
js
jp
dec
sti
stos
jae
lods
or
imull
jo
and
inc
fistpll
leave
inc
dec
mov
push
mov
cmp
push
loop
push
cmc
ss
int3
sti
addb
cmp
out
sarb
xor
clc
inc
sbb
es
xchg
push
out
sub
in
mov
mov
mov
arpl
ficomps
mov
mov
push
fwait
inc
in
in
insb
jp
shrl
mov
cs
xchg
cwtl
lret
dec
lret
in
lock
cmp
xlat
cmp
adc
divb
int3
jp
cmpsl
enter
mov
mov
imul
pop
mov
mov
insb
faddl
addb
insl
test
mov
pop
mov
mov
aam
lods
cmp
push
scas
scas
mov
fmuls
dec
xchg
icebp
and
pushf
repnz
sub
sbb
jno
add
fstp
sbb
inc
ret
fnsave
mov
fidivs
inc
mulb
mov
cmp
jno
or
scas
out
divb
repnz
aas
mov
jle
imul
sbb
gs
xchg
push
cmp
xchg
mov
xor
jmp
mov
rclb
ja
push
push
xor
cld
enter
jl
inc
mov
add
pop
pop
sbbb
inc
insb
or
fs
mov
pop
fstps
adc
sarl
dec
adc
ds
mov
sbb
fwait
in
push
icebp
pop
adc
jp
jnp
and
inc
mov
loopne
mov
mov
rcll
mov
dec
sahf
call
adc
xor
mov
out
lods
adc
inc
lods
mov
divl
jns
dec
adc
cmc
mov
int3
jne
gs
ficoml
call
jmp
sar
or
js
std
mov
sbb
cmpsl
add
call
out
outsb
popa
jp
bound
sbbb
dec
js
mov
test
rorb
sbb
ret
cmp
stc
sub
test
inc
popa
js
sbb
addr16
icebp
pop
lret
push
push
mov
loop
jne
jne
mov
cmp
repz
pop
in
dec
lods
xchg
cmc
jle
sbb
in
inc
mov
movsl
repnz
pop
addr16
pop
xlat
cmpl
mov
or
add
addr16
mov
push
sarl
jge
sbb
and
into
xor
add
in
ficoml
leave
push
lods
pushf
push
addr16
push
movsl
rorb
dec
sub
movsb
mov
and
insb
sbb
inc
xchg
lret
dec
jg
sbb
imul
mov
add
js
dec
mov
mov
test
mov
repnz
or
rcll
jne
test
fimull
push
fwait
xchg
pop
jae
and
add
into
lds
and
cmp
and
lahf
cmc
sti
sub
notl
sub
mov
push
push
inc
fwait
mov
lea
jmp
add
cmp
mov
cli
mov
test
addr16
push
test
mov
jl
icebp
and
mov
int3
dec
repz
nop
cmc
stc
push
mov
scas
jb
push
pop
dec
movl
outsb
jge
hlt
cltd
xlat
aas
inc
leave
imul
jbe
hlt
add
data16
out
mov
jae
sub
push
in
inc
push
cmp
or
aaa
sub
dec
gs
subb
clc
mov
mov
adc
popf
fidivrs
outsl
rcll
push
pop
imul
fistpll
xchg
sahf
fst
popa
into
sbb
ds
push
jmp
jg
das
fisubl
add
mov
int
daa
sub
subl
movsl
xchg
mull
movsl
mov
mov
clc
or
cmp
orb
mov
cwtl
outsb
add
sub
xadd
xor
lods
mov
loop
xchg
push
mov
in
inc
pop
xchg
jp
mov
and
xor
fs
inc
faddl
sbb
sub
mov
cld
sbb
or
inc
jo
sub
int
insl
xor
aam
sbb
imul
pop
insb
xchg
shll
cltd
inc
fistl
lea
cli
pop
fldl
mov
adc
pop
mov
dec
push
inc
lahf
scas
sahf
cmp
mov
cmp
test
sub
sbb
call
sub
xchg
daa
int
xchg
mov
fnsave
hlt
xchg
sub
outsb
jmp
sahf
adc
lea
lcall
fidivrs
mov
inc
or
xchg
rorl
cmpsl
scas
sub
in
lahf
movsb
ds
in
pop
loope
inc
jmp
push
inc
in
outsb
imul
fucomip
sub
xorb
mov
jge
testb
xchg
lods
roll
fwait
jae
cmp
aas
ret
jbe
sub
cmc
insb
add
cmp
repz
or
and
mov
subl
cmp
test
mov
xor
lea
fstps
fwait
adc
fwait
movsl
das
add
sub
push
addr16
test
xorl
sbb
mov
das
movsl
sub
jl
xor
jg
mov
jo
imul
inc
fcomp
cwtl
add
loop
jmp
psubusb
ljmp
lahf
jno
xor
cmp
testl
add
mov
cltd
sbb
lcall
or
addl
lret
bound
pop
jo
mov
sub
and
cltd
loopne
push
cmp
inc
bound
and
sub
les
and
popa
pop
mov
mov
dec
negb
xchg
add
movsl
or
adc
movsl
add
shll
or
jae
dec
rolb
in
enter
insl
mov
add
pop
test
jno
cmc
daa
imul
outsb
and
inc
and
leave
mov
test
mov
ja
test
jmp
and
mov
pop
test
xor
add
das
loop
push
push
jnp
cmp
jg
inc
aad
lds
nop
xchg
ret
push
stos
psraw
fdiv
xchg
in
roll
fcmove
pop
inc
addl
dec
hlt
sub
test
cmp
xor
mov
movsb
sub
mov
push
xchg
push
or
sbb
cltd
es
mov
insb
mov
push
nop
pop
dec
sub
pop
in
cmp
ficoms
aas
mov
daa
xchg
aas
push
loopne
mov
adc
fdivl
cs
inc
imul
and
xor
pop
dec
inc
or
jl
cmp
xchg
sbb
and
outsl
rorb
jmp
sahf
pusha
pusha
inc
scas
fistl
bnd
sub
sti
cmpsb
lds
mov
mov
mov
xchg
pushf
xchg
jbe
sahf
push
je
ljmp
ror
pop
pop
mov
je
shl
pop
fildl
cmp
in
pop
mov
cs
movl
cmc
fwait
mov
popa
clc
inc
mov
cs
sub
lret
adc
pop
push
push
jnp
shll
sub
dec
jge
jle
daa
push
or
mov
mov
mov
xchg
inc
sti
in
mov
test
pop
int3
dec
jo
sahf
jo
pop
repz
test
clc
lock
and
mov
pop
test
mov
mov
rcr
scas
rcr
jbe
cmp
adc
sbb
push
push
je
ror
or
call
popf
rcrl
inc
jmp
and
cmpsl
pop
and
push
mov
pop
in
or
push
sub
mov
clc
pop
or
sti
pusha
pop
push
push
ret
popf
js
cld
pop
cmp
pop
fisubrl
inc
lahf
add
dec
in
push
pop
push
loopne
push
scas
mov
cmp
push
fisttps
and
or
dec
jmp
lea
and
leave
jne
movb
sti
pop
mov
lahf
fistpll
mov
adc
jo
dec
iret
adc
pop
and
pop
loope
testb
inc
lss
testb
mov
adc
int
or
mov
insb
mov
mov
data16
testl
xor
cltd
in
movsl
cmp
adc
test
mov
rorl
sub
fldt
out
push
jno
mov
fwait
adc
stos
js
cmpsl
xchg
mov
mov
adc
mov
mov
mov
xchg
mov
fwait
push
je
out
psrlw
xor
jnp
ss
pcmpgtb
adc
insl
sbb
enter
dec
xlat
jg
sub
add
test
jne
fisttpl
mov
xchg
lods
jne
sbb
or
fisttpl
or
jecxz
pusha
loop
aad
pop
movsl
fisubs
jle
push
push
arpl
jbe
push
push
and
incb
pop
cli
xor
loope
testl
adc
pop
jg
insl
ds
pop
push
cs
fadd
xor
aas
add
pop
push
push
addr16
and
jle
daa
and
jmp
inc
mov
sarl
and
xchg
lret
aam
arpl
leave
jae
int
cmpsl
and
int
or
movsb
mov
mov
lahf
mov
sbb
dec
adc
xor
mov
inc
nop
dec
ds
pusha
cld
lcall
ds
pop
jecxz
call
bnd
lcall
cmp
shlb
into
fsubrl
enter
cltd
ljmp
adc
lds
rolw
in
out
inc
repz
imul
sbb
push
or
jl
adc
sbb
mov
push
fwait
pop
dec
lods
pop
sbb
push
mov
popa
xchg
pop
hlt
mov
sahf
scas
or
mov
inc
sbb
movsl
test
lahf
xchg
mov
arpl
fwait
xchg
nop
xchg
je
dec
mov
mov
inc
pop
pop
popa
ds
imul
loope
adcb
add
clc
cmp
pushf
adc
shlb
cmp
pop
sub
push
dec
xchg
leavew
outsl
out
add
rcrb
or
imul
inc
insl
aam
xchg
out
jp
mov
add
js
push
push
or
nop
hlt
jo
in
mov
or
cmp
into
jae
jbe
mov
dec
mov
lahf
aam
mov
mov
dec
sub
mov
xor
or
and
mov
push
jle
out
add
xchg
pusha
stos
push
inc
jns
push
ret
or
fcompl
pop
mov
and
in
iret
cwtl
and
imul
aam
repz
outsl
ret
inc
insb
rorb
cmp
push
das
adc
cli
push
outsb
sub
dec
rol
jns
adc
fiaddl
inc
cmp
arpl
sub
or
pop
js
add
imul
xchg
jnp
ret
push
jo
ret
cmp
sub
xchg
inc
shll
stos
repnz
cld
cld
fcmove
outsb
xchg
addr16
inc
push
dec
pushaw
sub
or
mov
mov
add
cmp
sub
xor
push
mov
pop
mov
pop
xor
sbb
movsl
adc
dec
and
xor
stc
xor
add
pop
mov
push
scas
shlb
test
je
mov
adc
lods
mov
push
cmp
mov
cmpsb
jnp
enter
mov
inc
cmp
lahf
pop
jbe
jl
xlat
pop
jl
mov
cmc
inc
jno
icebp
fisttpll
movsl
test
aam
sub
mov
mov
jg
push
subb
test
jns
mov
out
in
into
push
xor
push
shlb
bound
filds
inc
fnstenv
adcb
cld
jge
popa
mov
push
mov
outsl
mov
fadd
idivl
lods
push
sub
adc
jae
scas
inc
not
clc
test
push
iret
sub
cmp
rorb
icebp
jns
stos
or
mov
push
lods
jb
xchg
mov
mov
jg
mov
add
jp
js
push
inc
add
ljmp
out
mov
sub
popf
pop
scas
pop
or
aam
and
push
aam
pop
pop
jle
enter
mov
dec
pop
cmp
mov
lods
mov
lret
sbb
ljmp
in
push
fs
clc
dec
mull
pop
nop
subl
js
fucom
adc
in
mov
notl
fadds
mov
and
aad
cmp
jge
iret
or
and
cs
or
aaa
pop
mov
cmp
shr
fs
xchg
sub
xchg
inc
inc
fnstenv
shll
jl
movsl
add
mov
mov
je
jle
aas
adc
xchg
enter
cmpsl
mov
incb
inc
push
sbb
mov
mov
or
movsl
xor
inc
add
sub
sub
push
pop
mov
sbb
adc
pop
or
or
mov
ss
imul
lahf
jo
mov
mov
xchg
hlt
jnp
push
sahf
jb
jae
push
fs
cs
sub
pop
mov
icebp
hlt
insl
inc
mov
lock
loop
pop
xor
cmp
test
lods
js
lahf
stos
inc
pushf
mov
jne,pt
inc
mov
mov
xchg
mov
movsb
notb
test
loopne
addl
loope
sbb
push
mov
std
push
addr16
sub
cs
jno
lock
in
rcll
inc
jmp
dec
mov
inc
pop
dec
lock
mov
loopne
inc
adc
enter
es
or
mov
xor
xor
xchg
sbb
mov
xchg
mov
xchg
push
rcl
adc
cmp
fsubl
xchg
popf
bound
cmpb
movsl
xor
leave
mov
rclb
mov
adc
add
ret
cmpsb
inc
inc
insb
push
popf
mulb
in
xor
cmp
sub
and
dec
iret
sbb
and
push
repnz
cmp
or
xlat
and
ljmp
fwait
popf
fs
nop
das
nop
aad
jp
lds
xor
aas
aas
inc
push
in
insb
mov
outsl
push
mov
in
test
pusha
inc
imul
fs
nop
pop
mov
sbb
testb
pop
and
add
dec
std
jb
loope
dec
insl
je
xlat
inc
fwait
scas
push
jo
lcall
push
push
push
xor
loop
push
loopne
xor
cs
inc
jae
cs
lds
sbb
inc
jle
cmpsb
xor
repz
pop
xlat
loope
jae
or
fisttpll
shll
rorl
sub
je
xlat
cmpb
xlat
xor
sti
jae
mov
jns
inc
imul
int
jae
pop
aaa
push
mov
cli
or
sahf
and
incb
scas
js
mov
int3
push
in
jne
xchg
xchg
add
adc
sbb
push
mov
push
insl
ret
push
xchg
jns
xchg
push
push
in
fs
xor
loope
jb
test
mov
jp
pop
mov
xor
into
mov
leave
sahf
or
add
mov
and
cli
mov
loope
bound
int3
cmp
sub
cmp
lret
adc
mov
lock
dec
pop
fidivrs
in
jbe
ja
add
or
push
sub
xor
xchg
mov
fistl
xchg
sti
ja
scas
or
lcall
inc
test
sbb
push
aas
ljmp
inc
sahf
inc
mov
bound
sub
rolb
mov
scas
dec
xchg
xlat
movsb
inc
fs
or
lret
daa
push
andl
loope
pop
mov
cmp
add
cli
dec
je
fcomps
dec
gs
xchg
mov
rclb
push
fdivl
or
dec
inc
fsubr
arpl
idivb
sbb
loop
js
add
add
mov
jno
push
int
mov
jp
and
xor
adc
xchg
inc
out
arpl
xor
inc
mov
es
push
cmp
mov
lds
pop
into
mov
js
jne
mov
inc
adc
push
scas
in
sub
sar
sub
and
or
sbb
pop
xchg
insb
in
ja
cmp
icebp
lods
aad
popa
icebp
les
jle
cmp
or
adc
jo
mov
mov
iret
sub
mov
mov
xor
rorl
jmp
adc
xchg
and
mov
das
aas
adc
flds
in
inc
ret
inc
sbb
movsb
int
mov
jne
push
mov
fcmovnb
insl
pop
add
mov
mov
pushf
xchg
mov
nop
sub
mov
mov
cmc
fiaddl
sbb
pop
mov
push
shll
in
jne
adcl
sti
jge
out
add
out
mov
int
push
xorl
movsb
outsl
ja
push
jmp
dec
addr16
jno
ljmp
xchg
and
inc
mov
pop
aas
jne
push
int3
sbb
cmp
mov
in
leave
mov
insl
xchg
add
call
mov
ja
nop
push
pop
test
mov
mov
cld
push
stos
and
inc
clc
dec
sti
outsb
xor
add
data16
or
jo
pop
andl
mov
aam
inc
lahf
push
cltd
jns
jne
nop
cwtl
pop
dec
cwtl
push
sub
pop
scas
adc
lods
loop
cltd
fbld
das
mov
inc
out
outsl
and
sbb
movsb
xor
cmp
repnz
andb
mov
xchg
ss
mov
dec
mov
cmc
ljmp
mov
mov
sbb
fstl
rcrl
pop
or
bound
insb
stos
outsb
scas
mov
jo
add
scas
jecxz
mov
insb
addr16
sub
test
xchg
stc
and
int
movsb
or
js
repz
rorb
pop
mov
pop
pop
push
sbb
ljmp
imul
insl
pop
inc
lcall
into
add
dec
xor
arpl
call
xorb
inc
or
dec
mov
mov
mov
mov
out
ss
ss
in
mov
lcall
sbb
je
or
test
push
test
mov
push
cmp
stos
in
ficomps
xchg
lret
mov
int
push
lcall
jge
sub
inc
cmp
mov
push
repnz
shrl
adc
mov
iret
jp
inc
push
add
mov
pusha
pop
sub
ret
or
mov
inc
dec
cmp
imul
pop
jecxz
call
pop
shl
imul
aad
insl
cmpsl
scas
fistl
add
aas
pop
in
adc
pop
out
jno
mov
ljmp
dec
xchg
loopne
leave
in
xor
jo
xorl
scas
clc
inc
pop
sub
addr16
mov
lea
loope
jae
or
mov
mov
lds
lret
loope
pop
jge
sub
xchg
imul
add
mov
sarb
mov
inc
cli
pop
mov
dec
cmp
mov
aaa
mov
jne
and
push
out
popa
push
scas
xor
je
test
cmpsl
add
push
pop
xor
sbb
lds
pop
sbb
out
in
pop
mov
adc
and
mov
and
jbe
sbb
mov
int3
lcall
testl
add
jo
mov
xor
inc
or
jne
std
mov
pop
mov
sahf
repnz
jle
mov
in
push
repnz
movsb
lds
xlat
ret
mov
movsl
adc
stc
cmpsb
add
sarb
jb
dec
outsb
add
shll
mov
cmp
fisttps
push
sti
sbb
cmp
aam
sbb
inc
cltd
jge
movsl
fcoml
xor
jmp
or
add
push
insb
adc
inc
fs
and
inc
or
or
faddl
test
xor
cli
call
arpl
hlt
out
inc
cmp
sub
sbb
sti
adc
push
cmovb
andl
mov
icebp
add
mov
xchg
xchg
jae
jae
scas
pop
pop
enter
cs
mov
dec
mov
mov
loope
std
in
daa
rcl
xchg
push
sub
js
dec
push
scas
add
std
pop
ljmp
xchg
insl
mov
xchg
addl
fldt
sti
add
dec
das
sbb
inc
imul
jl
jl
mov
jg
jne
and
fcmovb
add
fsubrl
inc
pop
cli
lahf
hlt
outsb
xchg
mov
dec
std
fsubs
mov
push
xchg
test
jecxz
aam
stos
ret
cmpl
cmp
lock
cld
ljmp
push
pop
test
cmpsl
dec
xor
jmp
test
mov
jmp
in
in
jecxz
mov
jg
push
loope
dec
cmp
push
mov
fidivrs
sub
arpl
aas
int
sbb
out
jno
cmp
ret
dec
cmp
pop
push
stc
mov
shll
lcall
es
add
push
and
lods
xchg
mov
lods
and
sti
sbb
xlat
pusha
notb
mov
cmp
out
mov
xchg
in
outsb
xchg
insb
mov
xor
push
out
dec
jo
cmp
push
mov
push
jbe
and
pop
test
btr
jg,pn
push
mov
ds
cli
pop
pop
out
gs
and
aam
into
ja
xchg
cmp
loop
jae
mov
pop
mov
and
dec
scas
jno
fdivrl
mov
stos
dec
and
aad
jmp
pop
dec
cmp
mov
and
scas
and
lea
inc
dec
pop
push
test
push
pop
cmp
xchg
fsubrs
cmp
xchg
jnp
push
mov
fsubs
ret
sbb
inc
in
clc
andb
add
jp
scas
arpl
xchg
push
xchg
shrl
adc
in
addr16
or
sti
or
pop
jecxz
out
xor
jp
into
or
dec
stc
lret
dec
sti
cmp
sbb
sub
push
or
test
out
loopne
mov
pop
push
push
xchg
in
test
aam
mov
mov
and
push
stos
mov
rcll
lret
push
lret
loop
pop
movsl
mov
jb
lcall
aaa
aam
jns
push
and
or
push
add
hlt
aad
arpl
negl
test
sbb
pop
cmp
ret
and
pushf
mov
pmulhuw
lcall
pop
xchg
cs
pop
jl
stos
sub
ret
inc
jae
in
jecxz
xor
jne
jo
sub
inc
inc
insl
or
jl
cmp
lret
ret
out
sti
imul
push
incl
or
scas
mov
mov
sbb
sub
iret
sbb
mov
pop
loop
in
sub
push
add
test
adc
sar
push
imul
aam
inc
lds
lret
jbe
fistpll
fsubs
or
xor
out
adc
loopne
pop
dec
repnz
aad
stos
dec
cwtl
and
xor
sub
into
fstpt
push
test
jge
hlt
lds
imul
mov
imul
aaa
sub
push
adc
jg
rclb
add
out
mov
fbld
sub
hlt
dec
adc
jle
add
xchg
jmp
adc
adc
sbb
mov
mov
in
cmp
mov
in
in
movsb
pop
fmull
cmp
lret
pop
adc
lcall
inc
roll
or
mov
and
xor
pusha
mov
lret
fs
push
mov
jnp
movsb
ds
adc
jo
stos
ret
adc
cmpsl
inc
mov
test
adc
jo
test
test
rcll
inc
scas
fdivs
cmc
daa
mov
sbb
icebp
loop
xor
push
out
test
lret
sub
aas
into
out
cmp
scas
add
test
adc
add
xchg
sbb
xchg
leave
in
ja
push
dec
movsb
mov
dec
mov
cwtl
in
sbb
pop
icebp
cld
pop
clc
imul
pop
daa
fwait
arpl
lock
pop
pop
cmpsb
scas
das
jl
lret
sub
pop
mov
xchg
ljmp
popf
in
add
cmpsb
sahf
mov
enter
test
jno
pop
inc
shlb
dec
and
dec
pop
push
jae
rcr
sbb
lahf
mov
pushf
pop
push
adc
and
sbb
sub
popa
fistl
xchg
repnz
inc
xlat
scas
lea
aaa
dec
leave
call
je
jns
add
lret
ljmp
int3
or
jno
enter
hlt
xchg
inc
pop
jmp
fucom
pop
pop
pop
test
xor
mov
je
setle
sbb
jno
daa
or
adc
add
pushf
fwait
negl
fwait
into
add
xor
aad
mov
xchg
ljmp
dec
cs
sbb
xor
mov
xor
mov
js
insb
inc
popf
lds
jg
cmpsl
inc
cli
aam
or
out
or
mov
push
popf
out
icebp
mov
hlt
dec
add
ficomps
les
jnp
sub
js
mov
fld
dec
cmp
xor
iret
bnd
mov
cmp
mov
xor
insl
push
popf
dec
jbe
cmp
jae
dec
clc
adc
jno
insw
loopne
inc
nop
ret
dec
dec
repz
or
jp
cmpsl
or
movsb
pop
or
mov
push
push
mov
cld
pop
add
mov
jno
jge
cwtl
and
popa
and
pushf
pop
pop
dec
repnz
lods
sub
pop
mov
int
inc
sahf
popa
ret
cmpsb
mov
in
mov
andl
bound
pop
sti
les
pushl
inc
cli
fdivl
insl
in
lods
jmp
das
jbe
out
test
xchg
scas
aaa
xor
adc
and
mov
add
push
xor
outsb
insl
fstps
lods
jmp
mov
or
dec
rcr
gs
dec
sbb
test
sbb
out
out
mov
sahf
movsb
ret
cmp
pop
push
pshufw
mov
jle
sbb
adc
scas
sub
fmulp
inc
les
and
mov
xchg
ret
xchg
push
mov
or
ljmp
pop
pop
arpl
jecxz
lahf
sub
jo
sarl
mov
cltd
popf
cwtl
cmpsb
in
ljmp
movsb
outsl
pop
rorl
dec
scas
mov
jne
iret
jmp
icebp
mov
adc
hlt
call
jmp
jns
icebp
sub
xor
popf
test
dec
pop
pop
pop
shlb
out
mov
sub
xor
out
jmp
adc
add
lock
lcall
and
in
mov
sbb
loopne
aas
dec
aad
outsl
mov
in
push
sbb
aaa
ret
daa
xchg
sub
cmp
xchg
cmpsb
arpl
test
roll
add
test
sbb
xchg
faddl
rcll
rorb
test
xchg
xor
mov
int
xchg
mov
and
jbe
cmp
jo
das
jp
inc
cmp
sahf
mov
repnz
outsb
sbb
iret
daa
push
sub
fimuls
xchg
mov
sub
rcrl
add
jg
sbbl
pop
jmp
xchg
pusha
out
pop
cmpsl
in
pop
cli
cltd
jl
jge
cmpl
or
mov
jbe
sub
mov
outsl
mov
lret
inc
xor
pop
lea
pusha
stc
cmp
mov
notl
ret
dec
xchg
add
sbb
and
push
rorb
cmpsb
test
jo
andl
paddb
jge
sarl
into
popl
aas
xchg
dec
sub
adc
roll
mov
test
repz
pop
lock
mov
icebp
cwtl
shlb
push
inc
sub
lds
mov
shl
fwait
pop
jp
out
pop
test
movsl
inc
jo
jno
sub
xor
ficompl
out
lret
sbb
push
pop
inc
fsubr
jp
cmp
dec
mov
popa
bts
xorl
adc
inc
popa
roll
dec
cld
sub
dec
or
cmc
adc
mov
pop
push
fcoms
add
xchg
mov
sbb
jne
pop
mov
pop
sbb
dec
push
sbb
lret
mov
mov
test
inc
cmpsl
inc
push
sub
mov
in
popf
mov
jb
sub
push
push
test
and
push
cmp
pop
sahf
dec
test
scas
loopne
repnz
rcr
hlt
sub
push
or
out
xlat
mov
push
jge
push
out
lea
xor
xchg
mov
rolb
test
sub
out
xorl
lahf
mov
fcoml
rcl
jno
repz
cli
shll
add
lahf
test
dec
add
int
notb
dec
push
lock
inc
popa
aad
test
sbb
out
fldcw
pop
add
cwtl
cmc
int3
push
pushf
int
cmp
mov
cs
ficoms
outsl
inc
aam
and
movsb
jge
xchg
out
mov
mov
rcrl
and
mov
in
pop
mov
mov
xchg
xor
dec
mov
add
or
lods
jns
pop
mov
jg
notb
sbb
jge
mov
mov
xchg
and
lahf
mov
pop
xchg
js
push
push
cmpsl
xchg
adc
mov
and
jg
insb
mov
fwait
ja
dec
pop
mov
dec
pop
dec
popf
imul
cwtl
imul
and
or
lods
or
push
cmpl
cld
in
mov
mov
fdivl
ds
loope
repz
jo
push
call
or
mov
mov
jmp
cmp
jge
adc
dec
jns
int3
iret
lods
clc
int
andl
ret
decl
xchg
data16
pop
jno
mov
pop
stos
mov
popa
iret
add
sub
aam
je
rolb
dec
xchg
and
decb
in
lahf
xor
lods
jecxz
fmuls
push
xor
mov
icebp
pop
jmp
imul
insb
aam
into
pusha
dec
dec
leave
cmpb
inc
and
addr16
ds
push
or
cmp
fdivs
xchg
ret
das
sub
sahf
xor
push
mov
jbe
xor
iret
insl
jl
les
jb
fdivs
mov
pop
xchg
mov
xchg
mov
outsb
sub
inc
in
out
repnz
mov
cs
pop
jb
arpl
inc
push
std
fadd
add
jmp
inc
sub
int3
and
xchg
push
dec
push
aas
jno
outsb
cmpb
dec
nop
setae
js
bound
add
mov
outsl
gs
push
mov
arpl
pushf
fisubrl
mov
sbb
test
sbb
lcall
fldenv
std
sub
daa
jns
push
fisubrl
lock
leave
dec
jb
mov
fwait
push
fbld
pop
cli
adc
pop
jbe
das
adc
mov
mulb
dec
pop
push
adc
mov
cmpl
mov
mov
inc
fst
outsl
push
mov
outsb
dec
frstor
pop
jg
push
mov
xchg
or
cmc
adc
or
shl
sahf
shlb
mov
xchg
mov
push
cld
or
jl
and
in
ror
dec
mov
push
pop
jl
push
cmp
inc
fiaddl
test
cli
sbb
imul
in
and
jl
and
adcb
arpl
lods
jge
and
das
nop
lret
call
xchg
mul
lods
pop
ret
sbb
push
add
xor
dec
shl
mov
arpl
push
jno
pop
test
js
sub
outsl
cmp
jmp
jb
jp
cld
xlat
scas
push
jl
push
seto
mov
sahf
inc
jnp
icebp
sbb
or
add
in
lods
jg
test
add
add
xchg
mov
lods
gs
cmp
lea
nop
les
mov
pop
pop
faddl
fidivrl
mov
adcl
les
pop
adc
notl
in
loop
ljmp
push
out
cmpsl
and
mov
fs
subb
popf
out
ds
lahf
sub
shrl
aad
mov
mov
cmpsl
les
xor
stc
lock
pop
jne
or
mov
sbb
jmp
pop
mov
test
xor
jo
test
cli
inc
ljmp
outsb
mov
in
rcl
adc
ret
into
and
push
mov
ljmp
out
lods
in
hlt
mov
push
xlat
mov
mov
pop
sub
sub
rcrl
je
xchg
sbb
mov
push
jge
jns
lret
out
bound
and
test
sti
or
dec
insl
shll
cmp
push
dec
pop
pop
out
mov
jbe
imul
add
mov
jle
pop
jl
or
ljmp
mov
ds
mov
push
jne
inc
xchg
arpl
adc
xor
sub
dec
xor
cwtl
jb
das
ret
nop
jb
mov
mov
jmp
mov
xchg
dec
sahf
shrb
xchg
push
mov
add
cwtl
xchg
mov
mov
test
lret
jns
aam
push
inc
add
loope
sbb
es
je
fwait
in
fimuls
popf
test
xchg
imul
or
orb
movsb
cmp
addr16
xchg
add
or
or
sub
fucomip
mov
mov
iret
add
mov
sahf
inc
mov
jo
adc
push
jb
addr16
mov
sbb
fidivrs
scas
mov
sti
sub
xchg
lret
mov
or
jno
shlb
popf
int3
arpl
add
movlps
jl
xor
jnp
insl
push
jno
and
add
xchg
cmp
mov
cmp
xchg
adc
adc
fcomp
xlat
fimuls
andb
push
fldt
push
jne
inc
loop
dec
jl
in
sub
pop
stc
jns
sub
mov
xchg
cmc
adc
sbb
in
stos
pushf
lret
enter
adc
out
cmp
movsl
mov
outsl
xchg
mov
xchg
ja
push
pop
add
ds
cld
pop
lret
dec
jecxz
cmp
loope
fs
xchg
jbe
mov
inc
in
lahf
jnp
mov
pop
sbb
or
cld
mov
mov
popa
add
js
push
mov
cmp
xor
xchg
mov
popf
pop
mov
lods
fs
into
xchg
mov
adc
cmp
les
sub
jmp
jae
push
or
test
out
add
add
inc
jns
adc
xor
mov
push
xor
in
ja
je
adc
out
push
cmp
and
or
jg
mov
push
in
sub
insb
inc
mov
sub
mov
les
sbb
ljmp
test
xorl
push
fisttpll
rorb
adc
lcall
fidivrs
pop
test
inc
lds
lods
fisttpll
push
test
xlat
aas
inc
mov
pop
flds
xor
movsb
pop
adc
ljmp
push
pop
inc
xlat
dec
sub
std
jge
sti
dec
hlt
enter
xchg
push
cmp
or
sub
lea
scas
lret
into
jne
shlb
addr16
jo
and
insl
fsubrp
mov
fs
stc
push
xor
nop
mov
xor
out
sub
fldl
cld
movsb
sarb
and
push
hlt
push
and
dec
adc
ja
ljmp
mov
aas
and
mov
fmulp
test
mov
btr
xchg
repnz
test
int3
jnp
stos
int
fldenv
lret
mov
mov
jne
jg
test
and
adc
stos
pusha
sbb
xchg
filds
out
pop
fmull
stc
mov
movsb
aad
test
lods
cmpsl
aas
cmp
rol
jae
or
dec
shrl
pop
sub
shlb
inc
mov
aas
xchg
repz
lret
add
mov
pop
ret
jnp
push
rclb
lret
xor
sub
pop
psubq
mov
and
pop
hlt
mov
loop,pn
adc
fisttpll
popf
or
push
orl
test
mov
mov
mov
bound
rclb
lea
xchg
push
sbbb
les
lock
clc
loop
mov
mull
jbe
shll
in
adc
decb
cmp
or
arpl
std
push
add
mov
xor
mov
cld
cmpsl
pop
test
adc
outsl
fwait
pop
push
repnz
lock
xchg
std
or
push
shlb
cmp
and
arpl
fistps
fmuls
mov
scas
icebp
nop
repnz
bound
aad
mov
jp
xchg
cltd
sub
cmp
gs
sbb
stc
mov
add
enter
aaa
les
sar
dec
pop
out
push
jo
int
or
dec
xchg
outsb
iret
icebp
mov
mov
lods
mov
testb
repz
inc
nop
rcr
xchg
push
add
dec
mov
scas
out
inc
out
and
mov
xchg
xchg
sti
mov
mov
scas
stos
or
mov
sub
cli
xchg
pop
sbb
test
inc
xchg
ret
nop
aam
hlt
pop
or
pop
test
test
mov
cmp
fwait
add
cwtl
inc
cmp
inc
sub
adc
mov
push
pop
sub
popa
cmpb
rorl
orl
test
mov
sbb
scas
lds
or
lret
mulb
shlb
imul
sbb
popa
lds
cmp
add
push
xchg
movsl
mov
dec
and
or
xchg
mov
ret
pop
add
sahf
inc
ficoml
rep
pusha
mov
sub
movsb
mov
sbb
push
xchg
sbb
mov
add
insb
sbbl
sub
sbb
xchg
mov
sar
in
out
push
push
sub
outsb
inc
fcoml
sahf
data16
ret
mov
push
stc
subl
xor
adc
das
cvtps2pi
jge
add
sub
sbb
fstps
cmp
mov
mov
ja
pop
push
scas
xchg
push
pushf
push
push
jmp
cli
aas
cmp
jo
fnstcw
adc
filds
jne
loope
mov
lock
repz
inc
push
rorb
mov
inc
xor
pop
jb
sub
cs
enter
sbb
push
repnz
jns
jle
fcompp
xlat
sub
add
fmull
and
pop
aad
and
cmp
sarb
pop
jne
rclb
fdivrp
add
pop
mov
cmp
dec
aas
dec
adc
imul
je
ljmp
js
lret
xlat
ret
mov
out
dec
push
push
lea
and
and
push
or
and
add
rol
arpl
inc
cld
ds
add
in
jbe
out
pop
test
std
out
bound
sub
xlat
inc
in
ret
and
test
sbb
stc
jns
jno
jp
cmp
and
aaa
sub
push
jle
leave
xor
adc
out
pop
add
aam
mov
dec
outsl
pop
std
stos
jae
jo
push
push
xor
pop
and
test
popa
jo
sbb
out
stos
loop
call
test
aaa
mov
sub
push
jns
or
sbb
xchg
push
imul
xor
adc
mov
xor
popa
and
ficoms
sbb
adc
roll
and
test
push
ficoml
int3
add
push
jg
cwtl
xor
sub
das
mov
sbb
mov
fadd
inc
fsub
inc
mov
adc
adc
xor
enter
stos
daa
mov
rorl
addr16
dec
or
ret
repz
inc
adc
out
nop
lods
cmp
repnz
adc
mov
or
mov
lods
inc
mov
add
loop
mov
cmp
rolb
cmp
push
sub
push
in
int
mov
jb
mov
add
dec
iret
jbe
addr16
cmp
fidivs
loopne
sbb
stos
jne
pop
stc
cli
out
inc
inc
icebp
or
out
out
and
dec
xorl
xchg
movsb
mov
xor
sub
out
repnz
imul
fisttpll
or
jb
xchg
and
shrl
out
mov
inc
jno
jle
or
xlat
mov
ret
mov
int3
jp,pn
inc
stos
dec
xor
loope
andl
and
lret
out
mov
ficomps
jp
adc
push
xchg
cmp
idivb
sti
in
mov
mov
mov
jmp
xchg
aas
mov
mov
pop
mov
xor
sbb
imul
xor
dec
in
outsl
nop
addr16
jp
push
call
adcb
lahf
push
dec
outsl
adc
call
jge
mov
add
sbb
lret
dec
pop
mov
fldenv
fsubl
push
xchg
sbb
sub
jae
in
dec
pop
add
push
sbb
jo
sbb
sbbl
inc
add
movsl
mov
and
adc
or
sarl
movsb
adc
fs
xchg
adc
arpl
jl
mov
xlat
push
xor
in
mov
lcall
jne
push
call
out
iret
xlat
mov
das
ja
inc
lods
rcrb
jmp
mov
mov
inc
add
pop
int3
mov
adc
pop
jge
cltd
push
cmp
cmp
daa
add
or
in
lds
mov
pop
cmc
inc
into
xchg
mov
push
dec
add
fnstenv
loopne
test
xchg
sbb
mov
xchg
aas
aam
movsb
stos
cmc
sbb
add
mov
pop
mov
mov
cwtl
outsl
arpl
sahf
aaa
xlat
lock
adcl
iret
xor
mov
xchg
fwait
hlt
adcb
lds
mov
es
fsubl
jl
or
cld
loop
and
xchg
mull
add
add
pop
mov
mov
xchg
pop
and
inc
sahf
jae
cmp
cmp
data16
sahf
dec
or
adc
cmpsl
cmpsl
mov
dec
add
loope
push
mov
xchg
mov
daa
mov
push
jmp
loopne
or
and
inc
dec
jmp
dec
inc
dec
shlb
mov
imul
jl
in
cmp
mov
jae
xchg
cmp
pop
pop
inc
das
mov
jb
cmp
scas
push
sub
dec
add
mov
lret
nop
int
cmp
mov
pop
fld
mov
call
add
mov
aad
clc
push
sbb
jno
jle
dec
mov
pop
add
fnstsw
sbb
push
std
dec
icebp
add
sub
mov
inc
dec
test
xchg
rol
lds
sub
mov
dec
add
out
fisttps
jbe
pop
cs
int
pop
xor
pushf
adc
dec
dec
movsb
cltd
push
xchg
ja
call
negb
std
xchg
inc
sahf
cmpl
adc
adc
into
add
arpl
movsl
leave
jbe
aad
popf
xor
push
lock
jae
in
lahf
mov
ds
and
push
cli
arpl
out
sbb
jns
add
aaa
pop
jmp
lock
xchg
and
or
les
sub
and
pushf
test
aam
cmpsl
mov
xchg
imul
in
and
dec
cmp
push
pop
addr16
cmpsl
cmp
orl
stos
test
imul
dec
mov
aas
push
clc
lock
gs
jle
addb
pop
add
xor
xor
xchg
xchg
adc
mov
xor
sbb
push
mov
cmp
lcall
das
xchg
sub
mov
push
lods
cmpb
sarl
es
and
sahf
mov
loopne
pop
test
lahf
ds
imul
ror
lcall
call
mov
lock
sub
jge
or
pop
jg
fwait
add
fstpt
pusha
or
ds
fdivrs
xor
aas
push
aam
pop
cmc
sub
mov
mov
das
mov
sbb
inc
mov
pop
and
mov
add
call
add
mov
pop
and
adc
dec
in
push
mov
dec
in
fwait
jns,pn
or
ret
push
insb
pop
push
test
rcr
push
jno
cmpsl
add
jmp
rcrl
mov
dec
or
stos
loopne
je
fisttpll
in
subl
nop
mov
xchg
xchg
mov
lea
in
push
int
stos
cs
lret
cmpsb
push
and
clc
or
inc
into
or
or
bound
jb
fs
pop
lods
sbb
ljmp
pushl
dec
mov
scas
xchg
clc
test
ja
pop
push
loopne
sahf
lods
aas
push
incb
jns
jne
test
or
and
int
movsl
scas
inc
inc
aaa
mov
xor
pop
cltd
inc
sub
stc
cmp
notb
sub
xchg
pop
xor
push
jnp
inc
mov
pop
mov
stos
cmpsb
and
ret
push
push
fstps
jp
ja
daa
std
outsl
int
jbe
in
xchg
int3
pop
xchg
into
stos
sbb
pop
arpl
sbb
cmc
movsb
inc
jb
sub
repnz
pop
xor
and
es
jp
jecxz
ljmp
fmuls
outsb
xchg
inc
int
mov
das
cmp
lret
push
and
push
rolb
pop
jae
and
inc
jo
out
data16
dec
mov
add
dec
aad
xor
leave
daa
std
cmp
out
cmp
syscall
or
repz
mov
cmp
loopne
cmp
fnstenv
mov
pop
out
jmp
mov
and
imul
adc
sbb
js
imul
and
adc
imul
ljmp
push
ja
pop
sbb
ret
into
adc
xchg
or
jmp
adc
cmp
mov
adc
pop
sbb
into
or
lea
sti
push
rcrb
test
aam
jp
mov
dec
cmp
cmpsl
push
out
push
scas
xchg
mov
cli
mov
mov
mov
mov
mov
arpl
and
mov
bound
add
adc
jle
daa
out
inc
mov
dec
mov
cmp
fdivrs
aam
cmp
into
jbe
cmpsl
pop
adc
and
sub
xchg
mov
pushf
pop
iret
test
push
inc
lahf
lods
cld
mov
test
mov
fnstsw
ret
jae
lret
adc
jecxz
ret
jg
sub
cmp
jecxz
fs
mov
or
or
data16
pop
loope
pop
add
lds
cmpsb
and
arpl
cmp
subl
ljmp
repnz
insl
inc
and
scas
lods
add
mov
mov
lods
rcll
and
dec
lock
adc
call
mov
ja
dec
inc
insl
lock
je
data16
sub
pushf
mov
adc
sub
stos
fsubrs
mov
push
xchg
or
rcrb
xor
mov
xor
fisttpl
loop
fsubl
pop
push
nop
nop
cmp
outsl
fucom
rol
mov
jge
hlt
add
mov
sbb
shll
dec
shrl
in
dec
xchg
mov
mov
sub
mov
ret
jno
jo
mov
aad
stc
cmpsb
mov
or
xor
mov
test
sbb
sar
cmp
rcrb
fxch
or
mov
stos
ret
call
repnz
cltd
adc
out
shrb
inc
sbb
in
iret
jb
mov
mov
lret
outsb
sarl
jb
insb
clc
les
ljmp
repz
std
xlat
lret
arpl
insl
mov
fidivl
sahf
shr
xlat
xchg
mov
or
lea
inc
popf
mov
sbb
xchg
add
sbb
adc
dec
fldt
aad
out
loope
cli
xor
aam
pop
out
aam
adc
pop
mov
je
mov
sub
out
mov
inc
jnp
xor
ja
je
sub
shll
div
bnd
push
jns
xor
hlt
xor
insb
sub
out
sti
pop
lods
fs
js
pop
mov
cmpsl
leave
pop
jg
arpl
aam
fmul
fdivl
pop
inc
xchg
sub
dec
sbb
aad
outsb
xchg
cmp
xor
push
push
fnsave
imul
add
les
in
mov
lods
mov
cmc
ret
popa
push
inc
fdivs
repnz
int3
jecxz
push
push
jno
xchg
fisubl
cmpb
mov
fisubrl
pop
inc
aad
hlt
stos
pop
enter
test
sbb
dec
repnz
rcrl
ficoml
cmp
xor
shlb
out
scas
add
shl
xchg
or
jg
int3
shrl
cmp
or
mov
out
or
mov
push
push
loopne
es
xor
scas
pop
push
lahf
sub
dec
mov
xchg
dec
xchg
aam
daa
fmull
mov
cmp
or
and
or
loope
cltd
std
add
push
push
les
sub
cli
push
gs
xor
movsl
lret
adc
mov
inc
xchg
stc
dec
xor
dec
pushf
mov
jmp
push
stos
dec
lret
sbb
mov
popf
xchg
push
daa
sbb
dec
ret
ret
mov
xor
mov
push
adc
inc
iret
pop
jnp
jo
fidivs
test
or
cmpsb
inc
xchg
sti
adc
mov
push
in
loop
insl
mov
or
je
and
adc
and
push
popa
mov
dec
fidivrs
in
sub
dec
push
add
cmp
test
sub
arpl
inc
mov
xor
xchg
insb
std
inc
sub
ja
sbb
call
xor
and
out
jnp
aam
loopne
adcb
inc
and
jo
cmpsb
pop
lds
inc
enter
outsl
fists
add
je
mov
mov
jge
out
add
mov
lahf
test
mov
add
xchg
lcall
xor
cmp
xlat
insl
inc
scas
cmp
xchg
mov
lret
es
dec
or
clc
aaa
stos
rcrb
shll
mov
fs
push
int3
jp
sbb
jle
test
insl
adc
mov
push
shl
and
test
rolb
sbb
jns
pop
jae
shll
mov
fcmovnb
aaa
sti
mov
cmpb
dec
push
aaa
adc
cmp
int
pop
out
out
cmp
icebp
out
and
leave
mov
adc
sti
gs
push
scas
aaa
jmp
jge
push
arpl
inc
sbb
pop
pop
mov
nop
mov
mov
lret
lret
call
jecxz
mov
mov
lret
mov
addr16
fldl
jmp
mov
cmp
push
les
jnp
cs
adc
lods
mov
adc
mov
dec
lret
mov
add
adc
enter
imul
adc
jae
filds
aas
push
lret
mov
fisttpl
outsb
add
addr16
xor
aas
aaa
add
es
std
daa
shl
arpl
ss
fcoms
stos
mov
pop
sbb
je
fsubr
addr16
jecxz
loop
jno
pusha
outsl
nop
xor
mov
inc
mov
fcom
push
mov
gs
sub
insl
das
aam
push
jb
sbb
ss
and
xchg
cmp
add
bound
lock
lods
rclb
pop
pop
mov
int
adc
in
scas
lods
ljmp
movsb
jecxz
rol
inc
mov
outsl
push
and
sbb
jb
icebp
out
push
shl
sti
adc
notb
arpl
sar
jmp
orb
pop
lods
das
cltd
mov
filds
test
imul
imul
adc
repnz
bound
jmp
lcall
push
inc
out
mov
movsl
stos
pop
mov
fildl
fidivl
adc
ret
xchg
push
mov
ljmp
outsl
mov
mov
sahf
repz
adc
jle
jno
insb
sbb
aam
leave
imul
jns
imul
pop
cmp
inc
jns
mov
mov
outsl
xchg
fstpl
add
adc
pop
call
push
test
sbb
mov
pop
adc
dec
add
push
sarl
decb
lods
lock
sahf
iret
push
out
or
and
filds
xorb
xor
imul
int3
xor
test
fmul
lods
pushf
pop
cwtl
cmp
out
or
dec
dec
sbb
push
int
sbb
ret
or
aas
push
std
xchg
clc
into
jge
mov
dec
mov
lahf
add
cmpsb
imul
insb
mov
fimuls
mov
sub
imul
in
push
popa
fldl
or
jecxz
lods
or
and
rolb
jle
ret
lret
xor
sub
pop
fwait
cmp
push
and
push
inc
pop
or
xlat
xchg
mov
dec
sti
in
mov
shl
mov
mov
sub
std
and
rcrb
add
jnp
mov
ja
fistps
add
sbb
cmpsb
sahf
mov
mov
jo
ds
dec
xchg
cmp
mov
or
ja
push
jg
adc
mov
mov
pop
jns
cmp
mov
pusha
jnp
lcall
push
ljmp
movsb
leave
mov
sbb
insl
out
cmp
pop
dec
lods
ljmp
fcompl
sti
xchg
inc
cmp
test
and
sti
pop
xchg
pop
jne
test
inc
mov
aas
push
mov
adc
nop
loopne
mov
push
je
jmp
enter
and
cltd
jecxz
xchg
jecxz
hlt
lahf
insl
aas
mov
add
jge
push
mov
fmuls
imulb
sbb
pop
dec
sub
inc
fisubl
daa
xchg
outsl
cmpsb
xor
sub
inc
outsl
lds
frstor
mov
int
push
or
js
or
in
test
ja
lds
xchg
stos
aaa
fwait
cltd
imul
sub
adc
cltd
inc
mov
es
pushl
xor
pop
fistl
mov
decb
leave
jnp
xchg
repnz
inc
sbb
add
scas
jmp
xor
and
daa
rep
cld
dec
ja
jle
jbe
inc
ja
pop
xchg
push
mov
outsb
leave
ljmp
cli
rep
sbb
aad
aam
cmpsl
mov
out
push
fildl
nop
ror
sbb
sbb
pop
outsb
lahf
cmc
lret
inc
call
dec
in
popf
imul
mov
mov
subl
inc
int3
mov
lods
adc
xchg
add
xlat
xchg
mov
negb
xor
jns
ss
repz
nop
add
scas
push
push
xor
adc
xchg
add
out
ficomps
popl
fwait
and
and
stos
jle
cmc
mov
ret
fisubrl
xlat
ljmp
inc
dec
les
push
push
test
loopne
nop
stos
adc
stos
hlt
movsl
icebp
jmp
xchg
stos
pop
add
fnstenv
in
das
and
pop
xlat
aam
dec
mov
and
negl
inc
pop
ja
imull
inc
fcomps
xchg
pusha
and
loope
sub
push
faddl
adc
xchg
pop
cmpsb
in
pop
loope
in
in
js
pop
nop
jmp
lret
stos
push
cmp
outsb
aaa
mov
enter
cwtl
orl
xor
rolb
sub
into
out
xor
pushl
sbb
mov
jae
lock
out
nop
cmpsb
mov
fldl
shrb
jno
lret
xor
in
insb
xchg
rolb
mov
push
int3
push
dec
push
fwait
addr16
and
leave
mov
jo
pop
and
mov
mov
shll
and
testb
pop
cmpsl
aas
adc
inc
int3
in
mov
pop
pop
mov
push
jns
add
xchg
cwtl
add
cltd
xchg
xor
adc
dec
jne
pop
in
rol
shlb
mov
xchg
nop
push
jno
mov
inc
pop
inc
pop
daa
push
pop
hlt
stos
cwtl
cmp
int3
jp
mov
fnstcw
push
xchg
repz
into
jmp
and
adc
add
xor
jnp
lret
push
push
adc
cmp
add
jmp
in
int
lret
pop
and
or
in
aas
sbb
cmp
cmpsb
test
lret
cmpsb
pop
or
por
fcmovu
movq
mov
mov
leave
mov
push
lock
lods
into
sub
pushf
push
mov
iret
cmp
loop
dec
test
sbb
ljmp
lret
popa
push
mov
dec
dec
mov
loop
jp
or
mov
fidivrs
std
addb
mov
loope
or
insb
push
mov
inc
repz
xchg
sahf
xor
leave
dec
shr
cmpb
mov
roll
push
aad
cltd
dec
or
enter
nop
loopne
arpl
sbb
mov
lods
push
cmp
adc
xchg
mov
rcrl
cld
xchg
fisttps
lods
aam
adc
mov
bnd
rcrl
jp
cmp
daa
loopne
or
jg
mov
xor
cld
sub
fs
mov
mov
push
push
imul
mov
cmp
scas
xor
and
cmp
shll
lods
outsb
int
jns
sub
sbb
lea
call
push
or
add
lods
std
negl
je
inc
cmp
cmc
ds
into
dec
sub
push
and
xchg
mov
jle
andb
inc
out
jmp
inc
movsb
mov
loope
add
cmp
xchg
xor
and
int3
leave
and
popl
push
std
inc
popa
jle
sub
les
sarl
stos
cmpl
mulb
xor
andl
pop
mov
jo
push
jmp
push
imul
mov
and
ljmp
fmul
out
test
icebp
std
mov
and
das
lock
call
push
rorb
dec
mov
xchg
je
or
sbb
aas
push
push
sarl
movsl
jecxz
or
aas
jb
inc
gs
out
adc
mov
add
ds
repz
cmpsb
mov
adc
jns
push
xor
and
sahf
or
pushf
mov
xor
push
pop
mov
movb
xchg
push
lret
aad
jle
xchg
add
xor
std
pop
fbstp
push
les
lahf
test
jne
push
popa
jae
popl
add
fnstenv
in
aam
or
add
cmc
ljmp
and
or
fisttpll
dec
push
fsubl
dec
or
std
xchg
in
enterw
sarl
adc
xchg
mov
out
ja
inc
popa
clc
or
xchg
xor
or
push
mov
or
repz
jb
dec
add
pop
ret
hlt
cli
or
fs
movsl
cld
jns
fisttpl
insb
sub
call
movsb
add
add
mov
xor
mov
adc
loopne
cltd
jecxz
ficomps
fmull
mov
cmp
data16
xor
scas
mov
push
xlat
jmp
lret
repnz
adc
push
loopne
adc
or
data16
inc
inc
cmp
cmp
aad
dec
test
mov
mov
pop
lahf
stos
loope
lock
pop
add
imul
es
inc
push
cmp
enter
das
sbb
mov
jmp
xchg
xchg
int
sbb
data16
into
jmp
mov
jbe
outsl
pop
push
addb
sub
js
xor
fwait
sub
cwtl
sub
or
xchg
sub
sub
das
xor
jg
lea
pushf
lea
lret
lods
in
xor
or
cmp
aas
shll
pop
inc
mov
adc
lret
cmp
add
mov
outsb
jns
movsl
cmp
inc
mov
push
aaa
inc
sub
adc
or
mov
mov
or
mov
rclb
subl
idiv
nop
sub
les
nop
xor
mov
aaa
sub
loopne
sahf
fidivrs
aas
and
in
push
pop
lock
test
and
nop
xchg
popa
cmp
dec
mulb
push
dec
mov
mov
loop
ds
nop
int
jae
clc
add
les
and
hlt
inc
imul
popa
aas
sub
std
xor
sub
adc
imulb
lret
pop
outsb
aad
push
sti
jg
cmp
fstpl
dec
pop
push
das
mov
mov
push
pushf
cmpsl
xchg
pop
stos
mov
jl
call
adc
xchg
jecxz
cltd
dec
push
jnp
xor
rcrl
cld
ss
mov
jg
jecxz
inc
dec
lahf
push
stos
andl
mov
aad
xor
mov
jb
sarb
dec
jns
xor
cs
ret
and
dec
push
sbb
push
scas
xor
out
stos
ret
loop
jae
cmp
test
ret
scas
icebp
mov
cltd
andl
pop
fildll
inc
fstl
cmc
xor
and
mov
arpl
xor
rcll
sub
jne
jge
rorb
out
mov
sbb
xor
push
cmp
adc
addr16
fcomip
cmp
push
out
insb
jne
or
test
loop
dec
incb
jae
push
call
xchg
fwait
push
mov
xchg
or
lods
sub
mov
shrb
out
cwtl
psubusb
and
xchg
mov
imul
rcl
sarl
and
mov
push
enter
xor
into
roll
cmp
pop
repnz
in
fcomip
in
xchg
sbb
push
push
adc
sahf
sub
sbb
inc
push
ret
mov
ds
xchg
dec
xchg
es
cmp
push
sub
repnz
jo
mov
sub
mov
pop
lds
or
int3
cmp
rorl
push
data16
clc
sahf
ficomps
cmpb
mov
cld
aaa
das
fwait
jge
lcall
mov
cmp
mov
jg
jns
add
push
mov
and
and
aam
or
pusha
jb
pop
clc
das
xchg
pop
aam
mov
lea
lcall
int
jns
dec
push
jmp
push
adcl
push
aaa
test
or
push
repnz
data16
xchg
inc
adc
mov
xor
hlt
add
or
pop
pop
leave
outsl
pop
inc
leave
xor
jnp
jns
jecxz
mov
mov
test
into
mov
and
xchg
pop
mov
loopew
shll
push
sahf
mov
aas
popa
pop
sub
insl
stc
or
dec
scas
shlb
int3
lahf
subl
mov
lds
mov
scas
in
mov
es
mov
repnz
add
jne
xchg
jo
icebp
mov
xchg
xchg
sbb
inc
xor
out
imul
sub
dec
cwtl
dec
jp
loop
xor
xchg
pop
imul
test
inc
cmp
pusha
in
lret
call
pop
shrb
aas
fcoml
pop
roll
sbb
mov
fstpt
add
inc
imul
mov
jbe
dec
xchg
push
mov
shlb
mov
and
jb
adc
or
fnstcw
enter
into
ret
bound
and
xchg
xchg
out
cli
xchg
xchg
cmc
decb
mov
ficoms
popa
sbb
mov
inc
add
mov
push
shll
aaa
jle
aam
ljmp
imul
jae
cltd
ret
enter
mov
int3
push
fistl
pop
movsb
sbb
inc
mov
cld
loopne
pop
lret
mov
scas
and
dec
lret
std
jle
in
iret
test
mov
ja
jmp
xchg
hlt
mov
lods
in
lret
lods
cmp
mov
ret
xor
sahf
push
bound
out
pop
int
mov
jno
xor
push
xchg
xchg
das
je
xchg
inc
mov
xor
push
mov
pop
push
gs
test
cltd
and
dec
sub
lahf
push
ret
mov
enter
and
push
dec
sbb
inc
xchg
mov
pop
mov
lret
mov
jge
inc
outsl
inc
clc
jecxz
or
arpl
mov
sbb
mov
adc
aad
ljmp
cwtl
std
imulb
cmp
out
jns
add
mov
dec
lea
mov
stos
call
outsb
fldcw
push
dec
inc
mov
push
mov
ds
imul
xor
sar
test
xor
jp
push
cltd
dec
or
xchg
cmp
xor
dec
or
popaw
out
ja
out
or
cmp
cwtl
mov
inc
test
mov
dec
scas
jae
jne
mov
test
cmp
in
icebp
lahf
jmp
pop
mov
sub
es
mov
lods
or
and
cli
push
and
push
nop
mov
nop
popf
popa
dec
cwtl
pop
cmp
adc
or
aas
mov
and
lret
and
shrl
pushf
out
scas
jle
or
sub
jae
mov
cmp
push
xchg
cmp
mov
addr16
push
add
push
loopne
loope
adc
add
adc
iret
repz
mov
dec
jle
test
and
cmp
gs
cmpsl
sbb
mov
pop
xchg
enter
cmp
fwait
add
js
xor
jmp
jg
icebp
xchg
gs
aad
xor
xchg
mov
daa
sbb
mov
dec
call
mov
popa
xchg
jge
je
and
dec
popa
addr16
into
add
cmpsl
pop
adc
js
and
xlat
icebp
call
dec
mov
sub
scas
lahf
ss
pop
xchg
cmp
mov
mov
dec
or
mov
sub
inc
cltd
inc
movsb
xlat
hlt
call
mov
push
and
lahf
lds
cld
mov
and
push
arpl
mov
ret
test
out
iret
xchg
cmp
mov
mov
adc
outsb
clc
rclb
dec
imull
mov
xlat
mov
mov
push
and
inc
jae
out
nop
es
push
adc
scas
lcall
outsl
out
fdiv
jne
sbb
add
mov
or
adc
jo
gs
xchg
lret
mov
popf
lods
adc
sbb
lret
lcall
pop
pop
sbb
xlat
mov
insl
inc
aam
adc
inc
jno,pt
cmp
shrl
in
sub
pop
cli
stos
fs
jecxz
push
lret
mov
call
pop
pop
push
loopne
daa
iret
cmp
add
fs
sahf
int3
adc
cmp
sub
dec
jge
xchg
movsl
mov
sbbl
arpl
movl
xchg
test
mov
or
and
insb
jge
or
mov
cmpsl
outsb
fwait
xchg
lcall
xor
jbe
out
insl
cwtl
flds
sti
dec
lock
dec
dec
unpcklps
xchg
ss
jecxz
mov
ret
mov
cld
sbb
jb
repz
adc
ljmp
push
mov
sbb
jl
data16
insb
clc
insb
xor
int3
jg
scas
inc
and
iret
push
and
xchg
jle
jbe
shll
inc
adc
popf
mov
sub
sub
xchg
incb
jns
cltd
xor
mov
insb
mov
lock
sti
inc
adc
mov
inc
loopne
dec
xlat
mov
and
push
and
outsb
jbe
and
mov
push
hlt
push
leave
dec
and
sahf
test
out
inc
arpl
dec
jle
lahf
push
mov
clc
pop
fwait
mov
test
adc
mov
xor
push
sub
arpl
shl
test
xor
enter
xchg
lret
cmp
jge
jle
enter
mov
orl
ds
jecxz
std
cmp
xchg
push
mov
xchg
mov
pop
cmp
adc
pop
icebp
filds
jl
sub
and
repz
shlb
pop
cmp
xor
cs
and
add
push
xlat
lret
stc
push
jno
sbb
adc
jge
xchg
xor
sbb
ret
jns
mov
inc
scas
sbb
adcl
push
jo
inc
xchg
leave
std
jmp
dec
adc
mov
add
ficoml
pop
testb
stos
inc
mov
in
push
addr16
cli
pop
lret
sti
iret
addl
push
add
or
jns
mov
jmp
sti
or
enter
xchg
fs
out
mov
jmp
jp
cmp
repnz
cmpsb
sub
in
mov
icebp
push
rcl
cmc
les
mov
out
shrl
ljmp
in
out
cmc
mov
mov
jg
mov
add
mov
cmp
jl
cmp
addb
jb
mov
je
cmpb
out
outsb
test
mov
push
push
and
mov
inc
cmp
int3
mov
push
lcall
pusha
out
in
jo
sbb
lods
add
dec
nop
mov
adc
in
call
and
xor
jmp
mov
pop
sarl
cmp
add
lret
popf
jo
cmpsl
clc
in
push
pop
pop
das
outsl
lds
mov
enter
inc
or
pop
cmpsl
jge
mov
xchg
xchg
sub
scas
sahf
mov
movsl
sub
in
sub
test
imul
jmp
cwtl
pushf
xchg
aaa
push
pop
repz
loope
cmp
sub
lcall
je
bound
rorb
je
out
sub
sarb
sbb
in
and
out
insb
in
fsubr
push
fs
dec
sub
mov
push
and
add
jb
cmp
pop
mov
xchg
aaa
ficompl
fisubrs
rcrl
jbe
jge
sbb
std
pop
lods
mov
push
push
js
push
pop
in
pop
outsb
lods
xchg
push
movsl
xor
insl
cmp
mov
mov
inc
pop
mov
jp
jnp
add
les
cs
imul
int
jae
jle
pop
xor
and
fwait
inc
fwait
push
icebp
push
push
push
and
psrlw
lret
mov
cmpsl
test
inc
fmulp
lock
mov
mov
xor
iret
dec
ret
jno
jnp
stos
mov
pop
cmp
jne
push
jb
fistl
cmpsb
shrl
lea
outsb
push
fisttps
mov
sub
lahf
add
add
ja
xlat
out
xchg
outsb
sbb
ss
std
and
cltd
cwtl
repz
mov
jo
nop
scas
cltd
fld1
dec
in
shrl
imul
in
cmpsl
xchg
cmp
sarl
inc
ds
jnp
dec
mov
les
sbb
jl
dec
inc
mov
test
mov
repz
pop
repz
xchg
icebp
clts
ds
or
cmp
add
adc
out
mov
jne
dec
and
fimuls
sub
dec
imul
jo
sbb
mov
jbe
loop
pop
push
adc
adc
mov
jbe
pop
and
xchg
incb
dec
bound
cmp
pop
ss
cli
jg
bound
inc
jmp
outsb
enter
or
sub
shl
pop
xorb
test
cmc
js
lea
cmp
cmp
mov
orb
cmp
push
push
inc
push
jne
jno
inc
xor
adc
or
push
movsb
lds
push
mov
dec
xchg
test
or
lds
in
cmp
fsts
mov
cltd
rcrb
pusha
xchg
push
nop
sub
add
inc
pusha
iret
jle
add
mov
lret
aad
mov
pop
mov
cmp
xchg
loopne
ds
test
addr16
xor
leave
pop
pop
fisttpl
imul
lret
mov
xchg
scas
push
bound
push
inc
das
ja
mov
inc
xchg
orb
gs
mov
mov
sub
or
jmp
push
test
ljmp
sbb
mul
inc
mov
sub
stos
in
add
lock
xchg
inc
stos
insl
add
cmp
sub
dec
jno
xchg
bound
add
pop
out
movsl
enter
int3
inc
pushf
hlt
adc
fisttpl
add
stc
xchg
lret
cmp
jnp
sbb
sbb
aaa
cmc
sub
ljmp
mov
bound
lock
jge
and
xlat
push
push
loopne
mov
loop
xor
stos
cmp
orb
mov
sub
fiadds
cmpsl
cwtl
in
sbb
mov
lea
mov
data16
and
jp
and
std
andb
pushf
cwtl
xor
xor
pop
in
add
icebp
add
cwtl
test
pop
roll
jbe
stos
add
inc
mov
insb
dec
call
aas
outsl
jmp
adc
xor
les
and
sub
xor
push
mov
pop
mov
iret
idivb
loopne
and
mov
push
cmp
lahf
mov
mov
inc
movsb
xchg
push
mov
lret
push
mov
test
mov
jno
add
push
dec
jp
orb
push
enter
pop
ror
pop
pop
dec
imul
sbb
push
mov
add
cmpl
mov
in
xchg
hlt
pop
xchg
in
xchg
into
mov
and
add
inc
add
ja
add
pop
sub
out
mov
and
mov
addr16
push
int3
push
inc
pop
or
test
xor
dec
dec
fidivs
fistps
cmp
inc
xchg
dec
or
xlat
insb
mov
adc
aaa
xor
rclb
inc
divb
scas
mov
rcll
js
in
xchg
mov
aas
and
xchg
scas
add
pop
lock
mov
and
test
insb
fwait
cmp
int3
into
sbb
xor
mov
shl
sbb
and
jg
lds
cmp
ljmp
cmpsl
lock
jle
in
and
xchg
outsl
push
xlat
mov
lret
push
rep
adc
mov
rolb
pop
mov
in
adc
movsl
mov
mov
xor
inc
jnp
jmp
aam
inc
and
mov
lods
jmp
jo
arpl
les
lea
js
or
mov
fildl
cmp
xchg
rcr
fnstcw
mov
pop
sti
or
mov
bound
pop
dec
sbb
xor
sub
es
rolb
insl
pop
cli
cmc
jl
out
das
pop
adc
xlat
jnp
mov
mov
xor
or
outsl
mov
in
int3
mov
out
cmp
dec
bound
push
xchg
leave
xchg
mov
loopne
aaa
xchg
push
jo
das
inc
dec
push
inc
test
lret
mov
das
push
js,pt
sub
div
xchg
rorb
mov
xorl
inc
and
mov
lea
xor
add
sbb
std
pop
stos
cmp
mov
cmp
jp
adc
cmpsb
pop
dec
mov
leave
in
cmpsb
sub
mov
ficoms
or
int
mov
inc
dec
repnz
es
fdivs
dec
ja
shll
jnp
popf
test
outsb
push
sahf
jge
cltd
add
adcl
jecxz
hlt
aaa
mov
pop
lods
push
outsl
lods
inc
sub
cmp
stc
cmp
cmpsl
sarl
sub
pop
adc
and
inc
jo
in
mov
fsubl
and
mov
popa
mov
setnp
add
mov
inc
in
fdivs
cli
movsl
push
push
mov
and
push
ret
es
gs
aad
cli
imul
hlt
adc
int
rcrb
jne
jle
arpl
sub
push
dec
je
lahf
jns
mov
mov
jl
lods
xchg
or
ljmp
daa
fwait
inc
outsb
push
mov
xor
push
pushf
and
xlat
pop
xor
add
inc
mov
ljmp
daa
in
cmp
add
ret
lahf
pop
inc
cltd
out
adc
int3
push
lcall
ret
ror
clc
arpl
add
cs
adc
dec
mulb
and
pop
sahf
mov
bound
push
xchg
jns
mov
xchg
push
sbb
xlat
and
sub
sbb
and
icebp
and
sub
std
in
mov
das
mulb
outsl
lods
sbb
js
or
int3
xchg
lods
andl
mov
lods
cmp
jnp
lcall
insb
fdiv
mov
cmp
out
pop
adcl
pop
insl
cld
bnd
jnp
aaa
out
xchg
jne
mov
ficomps
xchg
add
jge
adc
ljmp
pop
xor
adc
pop
int3
insb
cmp
jg
leave
mov
leave
popa
adc
push
dec
xchg
jp
cmp
mov
int
bound
lods
lcall
dec
loop
mov
cmp
pop
daa
int
and
sub
inc
mov
mov
mov
les
xchg
push
pop
ljmp
lcall
lea
aas
xor
jnp
jp
fists
add
inc
subl
add
add
sbb
shl
cmpl
add
mov
sub
mov
lock
or
arpl
sbb
fildl
sbb
iret
push
fmul
insb
ret
fistpll
test
das
mov
das
imul
in
lods
add
mov
test
imul
pop
leave
pop
das
lahf
mov
divb
push
nop
fnstcw
add
adc
sbbb
dec
or
and
mov
stos
test
sub
shl
enter
pop
daa
jge
mov
mov
sti
inc
ss
dec
jecxz
pop
cmp
jp
jecxz
mov
mov
cmc
mov
iret
stos
pop
cmpsb
cmpsl
sbb
clc
into
pop
add
outsl
dec
xor
bound
xchg
pop
aaa
mov
movsl
mov
mov
call
mov
pop
dec
mov
sub
gs
jnp
int
add
repz
cmc
cmc
cmp
pop
pop
xchg
scas
add
arpl
fwait
xor
or
xor
rcll
in
bound
and
rep
mov
sbb
mov
in
inc
pop
or
aad
mov
mov
lods
dec
stos
mov
cmpsl
mov
mov
adc
jo
pushf
pop
mov
mov
sbb
cmp
jo
shl
adc
push
mov
std
xlat
cmp
cmpsl
push
cwtl
lret
sahf
mov
ljmp
std
lods
jge
out
jl
imul
ret
xchg
aas
cmpsl
cwtl
or
mov
sbb
stc
stos
nop
adc
pop
mov
fsub
or
jo
push
ret
mov
push
mov
fs
push
bound
outsl
out
mov
stos
add
xor
nop
jge
mov
rorb
mov
shll
dec
repz
adc
cmp
push
dec
cs
and
loope
mov
out
push
frstor
jnp
xlat
xchg
pusha
xor
dec
cmpsb
cmp
push
pop
pop
mov
repnz
lock
mov
mov
jmp
insb
xor
repz
dec
add
and
lock
jbe
loopne
adc
pop
sbb
popf
sub
insl
dec
dec
daa
xor
xchg
cmp
jns
test
popf
imul
xchg
push
ret
sbb
mov
push
test
lahf
add
push
outsl
inc
inc
xchg
imul
add
mov
repnz
stc
sbb
jns
mov
cmp
sbb
sbb
lret
aaa
or
je
aaa
sbb
aad
arpl
pop
shrb
jno
stc
adc
cwtl
inc
cld
mov
loopne
mov
jp
add
cmp
cltd
in
pop
sub
xor
ss
scas
lods
test
mov
and
int
ds
inc
push
xchg
sbbl
les
or
mov
lret
jmp
and
jb
pop
lods
jmp
loope
sbb
pop
into
inc
nop
cmp
jo
or
es
push
fidivs
int
ja
pop
dec
mov
xor
ja
arpl
dec
call
cld
std
dec
jmp
fidivl
or
sbb
cmpsb
dec
aaa
cmc
test
xchg
aaa
outsb
pop
sahf
ret
jcxz
sbb
pop
scas
dec
sub
xor
cld
scas
lods
int3
inc
xchg
aas
sub
into
pop
xor
xor
cs
sbb
jl
lods
arpl
xchg
inc
seta
pop
sub
cmp
dec
mov
cmp
pop
cwtl
jno
and
js
mov
ja
jnp
or
dec
pop
dec
loop
push
out
cmp
xchg
mov
xchg
rolb
outsl
jbe
add
aaa
daa
or
xor
mov
mov
mov
mov
xor
in
push
and
dec
enter
dec
xchg
pop
jge
movsl
push
inc
arpl
cmc
stos
pop
pop
mov
repz
sbb
and
ds
pop
mov
mov
in
call
mov
pop
mov
xchg
jne
and
fwait
ss
and
movsb
push
inc
cmp
jae
xor
aam
adc
mov
or
jge
subb
xchg
push
mov
xor
xchg
pop
or
inc
add
pop
xor
dec
mov
sahf
mov
outsb
inc
fstpt
lods
pop
movaps
lcall
xor
leave
pop
jp
sahf
jmp
fs
loope
imul
in
jl
lea
clc
adc
push
subb
sub
movsb
dec
fadds
xchg
notl
cwtl
hlt
rcrl
test
inc
cld
jno
call
sub
sahf
adc
mov
iret
lock
test
jecxz
cmp
leave
xchg
pop
jg
aad
xchg
sub
rcrb
xchg
cs
lock
cs
or
mov
stos
mov
push
decb
aad
cmp
xor
mov
pop
adc
enter
dec
cmc
pop
mov
bnd
inc
mov
xor
bnd
or
fisubl
out
mov
cmc
sbbl
pop
lods
push
cld
jne
cmpl
orl
xchg
es
repnz
repnz
imul
call
ja
stc
pop
scas
jns
pop
push
ss
lcall
stos
mov
jl
lods
jecxz
dec
mov
sbb
xlat
cmc
popf
push
adcb
rcrl
mov
out
or
or
shrb
push
pop
out
mov
sub
sub
sti
pop
push
sbb
pusha
mov
jl
aad
dec
out
cmp
popa
push
dec
mov
mov
cmp
pop
inc
push
or
into
call
xorl
outsl
xchg
fiadds
rolb
rcll
lcall
lods
les
addr16
or
in
cmovg
ficomps
imul
mov
jns
inc
adc
movl
and
push
cmp
and
das
jecxz
ret
popf
inc
pop
enter
lock
movsl
sub
scas
fsubr
push
push
dec
movsb
cwtl
or
jecxz
not
out
daa
sub
ja
adc
xchg
fldt
and
sub
imul
lret
jne
aam
sub
jecxz
sub
jo
dec
imul
sbb
fsts
cs
arpl
xchg
mov
std
mov
mov
in
or
stc
shl
and
loopne
out
jbe
and
push
stos
inc
test
xchg
and
mov
stos
jo
push
mov
sbbb
xor
push
fiadds
mov
push
daa
aas
std
adc
fdivrs
xlat
lret
push
add
add
dec
jo
mul
cmp
outsb
inc
dec
mov
dec
or
adc
out
inc
xor
lcall
mov
add
stc
lock
sbb
es
pop
jno
mov
mov
push
loope
xor
bound
lret
cwtl
and
aad
jmp
shrl
aaa
adc
popf
mov
xchg
idivb
pop
dec
and
push
out
mov
out
sbb
or
mov
sbb
jne
popf
idiv
lock
inc
mov
and
lock
jo
and
pop
repz
scas
sti
cmp
sub
mov
stos
inc
dec
adc
loope
xchg
or
or
movsb
fstl
mov
popf
fsubl
dec
pop
inc
sub
xlat
jne
scas
mov
idivl
pop
gs
dec
adcb
jae
rclb
imul
pop
add
rorb
inc
sub
cmpsb
push
dec
in
xor
repnz
enter
mov
push
popaw
pop
js
mov
cld
xchg
pop
sub
inc
test
jo
jle
add
int3
add
jb
xor
loope
cli
push
adc
sub
daa
pop
cli
pop
adc
outsb
and
rorb
mov
xor
push
sub
pop
loope,pn
pop
insl
cmp
xchg
lahf
mov
int
pop
icebp
fcmovne
jae
xorl
test
sbb
jns
loop
ret
sub
jge
fs
push
movsb
clc
insl
push
dec
mov
call
jmp
sub
xor
outsb
daa
inc
xchg
aad
aad
mov
cmpsb
xor
cmp
dec
aad
clc
and
or
out
xchg
call
sbb
sub
jmp
in
sub
cli
call
out
mov
lods
dec
fimull
hlt
sbb
push
pop
dec
inc
pop
aas
push
pop
xchg
inc
repz
dec
dec
xor
inc
jns
int
pop
dec
jbe
pop
mov
sub
lret
lcall
or
sbb
xor
stos
mov
adc
dec
cld
bound
mov
xchg
mov
adc
xor
sub
out
add
fisubs
insl
add
insl
or
cmp
cs
or
std
push
mov
repnz
fwait
test
xchg
std
jge
dec
adc
xchg
jne
dec
arpl
push
xchg
iret
jmp
adc
into
jg
jnp
mov
jns
push
ja
mov
sahf
popf
ljmp
mov
imul
sbbl
inc
jmp
mov
push
sbb
lret
cltd
iret
push
xchg
aam
dec
sbb
xchg
mov
xchg
jg
xorb
jmp
jb
adc
mov
cmp
sub
jle
push
orb
lret
mov
aaa
push
insl
mov
pop
push
dec
inc
aas
and
rcr
xor
and
je
ss
mov
adc
pop
sub
xlat
insl
sarl
add
mov
mov
dec
jae
cmp
popa
push
in
cmp
call
dec
ret
push
cmpsb
mov
rcll
push
aas
mov
fs
add
or
xor
xor
ja
dec
lahf
fs
add
shlb
pushf
jge
add
ja
scas
addb
pop
dec
or
sbb
xchg
xor
std
cmpsb
add
sti
leave
pop
dec
adc
orl
cmp
cmpsb
pushf
adc
or
or
mov
dec
pop
ficompl
mov
push
jae
push
lret
pop
nop
pop
roll
dec
pop
cmp
pop
cmp
sub
testl
data16
jmp
mov
jbe
call
pop
sbb
cmp
in
adcl
iret
fistl
mov
lahf
sahf
jno
add
inc
popf
mov
xchg
out
mov
mov
push
pop
shll
or
ljmp
mov
and
aad
pop
bound
jnp
movl
push
or
arpl
psubsb
fwait
ja
push
scas
dec
jecxz
jno
add
mov
mov
mov
movsl
cmp
jnp
adc
ja
lret
inc
xchg
mov
sahf
movl
or
jnp
sub
xor
pusha
mov
mov
nop
pop
adc
or
mov
mov
add
ljmp
enter
pusha
insl
sahf
xchg
xchg
rorl
cmp
es
jl
insb
dec
rcrl
push
add
pop
fsubrl
fbstp
outsl
js
lods
jp
xchg
jnp
call
cmc
and
and
sub
lret
sbb
xor
add
repnz
sub
fcoml
dec
xor
dec
incl
lahf
fisubrl
sbb
data16
and
xor
outsl
jbe
ljmp
dec
movsb
fdivrl
in
pop
cmpsb
insl
aaa
insb
jge
push
repnz
pop
and
loopne
add
mov
daa
jae
daa
js
rcr
repz
cmpsl
jnp
inc
icebp
call
adc
ds
in
leave
rorl
ds
ret
repz
push
sar
int3
inc
push
cltd
pop
mov
aam
or
jle
mov
jg
enter
int3
sub
adc
push
or
test
and
xchg
add
cmp
jg
leave
push
out
add
push
scas
add
cli
daa
push
lods
mov
cmp
push
push
mov
call
scas
mov
mov
leave
faddl
jne
jne
mov
and
imul
xchg
out
inc
inc
and
lret
sahf
int
xchg
lret
jbe
push
je
iret
mov
adc
shll
or
xchg
idiv
pop
xor
jecxz
xor
xor
ficoml
lcall
mov
out
mov
pop
fstpt
inc
sbb
xor
movsb
cwtl
xchg
out
push
dec
xchg
jne
jl
adc
push
mov
push
adc
adc
rorl
popf
into
fsub
sbb
ret
adc
xor
push
inc
push
sub
lret
xor
jne
dec
mov
pop
icebp
xor
sbb
mov
pop
data16
mov
lds
or
cmpsb
jmp
test
sub
mov
add
dec
rol
rcrl
idivl
push
ffreep
aas
adc
push
adc
addl
sbb
loope
notl
push
adc
std
mov
or
data16
or
or
dec
jecxz
lock
jmp
idivb
fwait
je
les
fistl
inc
ljmp
les
test
dec
mov
dec
cmp
out
out
pop
pushf
add
mov
test
ds
lret
jb
rcll
mov
cmp
push
adc
pop
mov
mov
pop
test
sbb
cs
push
shll
ds
xchg
xchg
dec
mov
lcall
fcmovbe
test
mov
add
mov
das
add
jl
and
cmp
dec
sbb
int3
movsl
mov
pushf
roll
sbb
inc
add
dec
repz
stos
inc
jbe
pop
stos
sbb
ja
or
movl
push
call
mov
clc
js
int
sbb
daa
lret
dec
push
cwtl
fnsave
xchg
push
packsswb
push
testl
dec
adc
pusha
shrl
xchg
sbb
fs
mov
test
pop
dec
add
test
in
loope
into
pop
stos
mov
lret
aam
mov
fldcw
call
pop
sub
xchg
mov
mov
jecxz
jl
pop
ret
js
lea
aad
push
push
cmp
mov
sbbb
cli
pop
mov
xchg
push
clc
push
xchg
mov
sbb
pusha
dec
aam
test
popf
ffreep
dec
xlat
push
push
inc
insb
push
imul
pop
cld
pop
xor
cltd
test
and
and
jns
push
mov
or
loop
inc
insb
or
xchg
add
sbb
or
testl
movsb
ret
or
pop
cmp
in
fs
inc
es
or
or
inc
cmp
punpckldq
dec
add
lret
inc
std
cmp
lds
mov
push
outsb
xor
ja
adc
push
xchg
into
cld
mov
out
adc
dec
push
pop
dec
cmpsb
js
ficompl
jns
adc
cmpsb
pop
sub
add
cmc
adc
xlat
and
rclb
int
enter
cmpsb
lock
mov
loope
mov
into
icebp
in
pusha
bound
and
adc
rcll
and
xor
addl
mov
movb
and
mov
pop
outsb
push
fcoml
addr16
lds
js
jno
push
repnz
adc
push
mov
push
adc
adc
or
xchg
cmpsb
bnd
xchg
and
push
fildl
jp
ret
mov
divb
fldcw
xchg
loope
in
imull
fisubs
mov
add
call
imul
in
sbb
orl
lock
cmp
filds
xor
xor
inc
or
ljmp
adc
bound
adc
adc
sub
adc
sbb
shll
dec
iret
sahf
mov
ss
fs
push
pop
cld
sub
pop
mov
adc
ds
xchg
jge
test
jnp
adc
cmp
mov
stos
leave
xor
jp
push
and
cmp
jl
out
sbb
mov
test
addr16
pop
cmc
push
mov
andb
into
mov
and
jno
hlt
jmp
ljmpw
mov
xchg
jno
or
cmpsb
out
dec
stos
jmp
jbe
fcomps
mov
fisubrs
inc
sahf
out
lcall
jmp
inc
and
jo
push
sarl
mov
adc
inc
inc
jnp
mov
js
push
xchg
push
mov
das
sti
mov
fs
push
push
jb
fisubs
pop
mov
jbe
out
push
xchg
lods
sbbl
and
rclb
and
ja
xchg
jecxz
xchg
fstps
dec
in
mov
push
js
popa
aad
pop
jb
call
cmp
mov
or
xor
and
stc
shll
sbb
add
or
push
xor
adc
and
jae
sahf
mull
pop
ss
mov
mov
loopne
mov
mov
sahf
scas
arpl
movsb
leave
and
sub
jb
in
push
dec
loop
ret
mov
stc
imul
sbb
mov
std
ret
push
pop
roll
mov
lods
and
pop
xor
decl
sub
into
inc
int3
andl
adc
push
popa
pop
es
push
imul
adc
ja
push
xchg
cmpsb
int3
mov
sbb
pop
loop
or
pop
gs
call
inc
jae
repz
arpl
or
aad
mov
push
fcmovnbe
sti
sub
sub
sbb
fldt
xchg
push
insl
xchg
repz
lods
jnp
test
repnz
loopne
in
ss
jg
fwait
mov
dec
ja
pop
jno
sub
xchg
mov
test
pop
insb
test
shlb
sub
and
out
dec
inc
inc
jecxz
aad
mov
mov
mov
pusha
sub
jb
pop
dec
sub
push
test
xchg
add
xor
sbb
outsl
mov
jne
insl
scas
mov
pop
dec
les
jp
cmpsl
push
popa
sbb
fs
popa
ds
mov
data16
imul
rolb
dec
ljmp
xor
and
mov
fisttpl
orb
and
sub
roll
dec
test
xchg
adc
sub
fisttps
cmp
add
or
lret
and
repz
jl
daa
jno
shrl
clc
push
mov
shr
aaa
sbb
data16
sbb
jg
mov
adc
adc
lods
aas
sbb
std
mov
mov
hlt
add
popa
movsl
imul
push
imul
jne
mov
cld
push
andb
or
sbb
fidivrl
std
pop
fnstcw
stc
jns
cmp
inc
inc
sbb
test
sbb
jl
in
sti
aad
lahf
mov
ljmp
lret
aam
cmp
popa
lods
js
sbb
scas
xor
sub
mov
jae
aaa
jbe,pt
orl
inc
push
mov
dec
into
punpckhdq
xchg
inc
testl
clc
push
xchg
xor
shrl
or
sub
xchg
hlt
std
add
and
sarb
and
out
and
shlb
dec
cmp
test
push
into
cmpsl
sahf
push
cwtl
inc
shlb
push
jg
in
mov
inc
jle
cmpb
lock
inc
xchg
xor
lahf
out
cltd
fsts
mov
stos
in
imul
xchg
cmp
mov
pop
cmp
xor
sahf
dec
add
fcmovnu
mov
adc
push
repz
sti
fcmovnbe
inc
shr
add
insb
adc
or
sub
xor
pop
jns
fwait
push
enter
sahf
sbbb
dec
or
and
xor
imul
popa
jo
mov
test
jle
xor
jg
push
or
mov
xchg
jae
cmpl
cs
lods
mov
xchg
xor
insl
fidivrl
and
sub
or
xor
outsb
mov
mov
aaa
jl
clc
pop
pop
and
int3
enter
pushf
leave
fbld
fwait
mov
xor
cmp
roll
xorl
fcoms
mov
pop
jno
xor
jns
mov
lcall
mov
sub
cmp
mov
mov
inc
jge
fwait
add
cmp
and
insb
divl
aad
or
or
mov
data16
ljmp
outsl
xor
clc
mov
push
mov
out
ret
mov
xchg
push
adcl
cmp
mov
sub
in
mov
out
outsb
mov
mov
pop
cmc
or
cmp
shlb
notl
sub
loopne
inc
sbb
mov
test
fxch
jnp
sbb
mov
enter
loop
add
push
inc
push
push
pop
mov
fldcw
jae
aaa
adc
ficoms
inc
testb
and
in
movsl
sbb
mov
es
dec
cmc
inc
add
lcall
jb
pop
add
mov
jne
cltd
dec
lahf
hlt
ljmp
gs
inc
popf
jbe
inc
repz
popa
xchg
jmp
dec
loope
loop
sub
cmpsb
aas
sbbb
stos
push
jle
xchg
fs
mov
sbb
mov
mov
xchg
lret
lahf
je
jbe
jmp
lods
popa
adc
jbe
xor
cmp
cmpsb
out
xchg
push
daa
das
cmp
fwait
add
push
movsb
cmpsl
js
push
repz
sahf
adc
pop
clc
cli
aaa
mov
mov
int3
sbb
dec
pop
sub
xor
dec
lahf
xchg
adc
inc
outsb
outsb
aad
mov
popa
aaa
adc
add
cmp
lds
adc
sahf
sub
push
cmp
xlat
loope
fucomip
subl
pop
or
ljmp
inc
jg
push
fs
or
gs
fistpl
xchg
xchg
lret
popf
lods
es
mov
aas
and
test
mov
jle
lea
jl
std
mov
mov
sub
sub
loope
xlat
sarb
or
or
call
jg
sub
pop
or
rolb
imul
cmp
push
push
outsl
mov
mov
xor
push
in
dec
jle
sbb
lock
or
fwait
mov
push
mov
into
lea
fs
sbbl
out
xor
push
adc
mov
stos
pop
sub
or
in
lea
inc
les
push
out
inc
inc
repz
mov
mov
loope
and
aam
cmp
daa
insb
mov
adc
mov
mov
jge
jbe
das
hlt
incb
popa
icebp
test
xlat
adc
pop
add
movsb
inc
filds
inc
xchg
add
jne
in
or
lret
arpl
or
bound
cmp
mov
mov
adc
into
cld
sub
mov
xorb
inc
fisttpl
and
fs
scas
inc
mov
insb
push
mov
pmaddwd
add
jb
xor
jne
adc
jl
ss
xor
push
lcall
add
xlat
test
jo
dec
stc
gs
in
mov
ds
imulb
imul
movsl
in
push
jle
mov
daa
cmpl
jle
inc
or
pop
push
arpl
inc
pop
jo
vunpckhps
xor
mov
xor
xor
ljmp
xor
mov
mov
and
fwait
or
clc
cmp
mov
and
push
push
adc
arpl
or
bound
mov
add
roll
andb
popa
xor
or
pop
shrb
push
jge
movq
cmpsl
xchg
mov
sti
adc
callw
cmpsl
js
stos
cmpsb
mov
dec
aas
jge
xchg
xchg
mov
or
out
unpckhps
hlt
fnsetpm(287
and
ret
stos
jge
mov
jo
fistl
aad
sbb
shl
adc
cmpsb
dec
mov
das
je
jmp
out
icebp
out
jno
pusha
add
inc
shrb
into
jmp
xor
jl
std
push
adc
cmc
sbb
cli
cmp
mov
clc
ret
shr
scas
inc
pop
mov
fyl2x
sti
lret
cs
mov
ja
std
add
add
and
stos
fistps
dec
sub
or
stos
and
add
and
leave
outsl
push
aas
imul
stos
pop
pop
aam
pop
mov
mov
or
mov
mov
dec
sbb
testb
xchg
fs
lods
scas
or
mov
scas
in
sub
or
cmp
adc
lock
in
xchg
xor
cmpsl
repz
xchg
mov
stos
jg
shrl
mov
pop
fcompl
xor
dec
push
subl
fsubrl
outsl
dec
push
orb
and
xchg
movsl
cwtl
mov
xchg
movsl
sbbl
add
push
gs
popfw
sbb
icebp
insl
push
iret
aaa
stc
imul
jb
or
xchg
aad
mov
cmpsl
pop
mov
mov
dec
lock
in
dec
dec
sbbb
outsb
push
fsubrs
sbb
jns
fisttps
sbb
stos
repz
daa
es
add
lcall
add
lret
loopne
lea
lahf
iret
xchg
lods
insb
out
std
adc
rcr
popa
rcl
pop
pop
popf
test
sub
movsl
sbb
loope
icebp
dec
cmp
das
cmp
pop
or
lods
xor
adc
mov
jne
pop
orb
add
xchg
fldt
scas
cltd
addr16
inc
push
iret
aad
inc
push
add
adc
xor
std
cmp
mov
subl
xchg
mov
sbb
jge
inc
cli
mov
cmp
aad
outsb
mov
je
out
lahf
xchg
mov
cmpsl
nop
jnp
ljmp
insb
mov
dec
lods
repz
pop
fistpll
inc
out
mov
push
pop
cli
mov
and
mov
xor
mov
push
push
int
dec
push
hlt
ret
subb
js
xchg
sarb
imull
push
into
sahf
push
and
adc
pop
inc
shrb
xor
ja
aaa
mov
popl
iret
add
add
in
imul
js
inc
mov
mov
xchg
mov
jb
mov
sub
dec
adc
pop
popa
pusha
testb
rcrb
out
jle
popa
jle,pn
pop
popa
push
mov
das
icebp
adcl
rcl
mov
idivb
pop
cmp
ja
sbb
divps
xchg
mov
insl
andl
and
lea
pop
mov
lret
inc
jp,pt
stc
fsubl
add
cli
mov
pavgb
ds
sub
inc
adc
lods
or
shrl
sbb
sbb
lea
inc
je
scas
lahf
pop
xchg
sub
mov
les
stos
in
sbb
outsl
pop
xchg
mov
mov
push
or
cli
mov
movsl
xchg
push
fcmovnb
in
out
jb
or
sub
nop
clc
push
pop
jecxz
cmp
inc
mov
add
sti
stc
insl
ss
inc
shlb
dec
pop
xchg
or
xorb
ljmp
xor
dec
xchg
mov
into
dec
lahf
int
dec
jl
jp
ss
add
ret
push
sbb
and
add
xchg
sbb
and
sub
xchg
cmp
notl
std
xchg
xor
sahf
scas
fnstcw
adc
xchg
xchg
dec
ds
jne
jno
xchg
ret
pop
pop
mov
xchg
xchg
test
ds
xor
sbb
jmp
fs
aas
fsub
cmp
loop
loopne
mov
mov
push
pusha
inc
mov
mov
lcall
xor
or
mov
addr16
cmc
inc
push
sbb
dec
dec
sub
fnsave
int
dec
sub
movups
add
mov
imul
in
lea
xchg
inc
in
xchg
mov
jmp
fsubl
adc
mov
pop
add
push
push
inc
push
es
mov
add
push
push
mov
adc
and
jae
mov
cmp
cli
and
xor
clc
ficoms
negl
ljmp
test
sub
ja,pt
sub
lods
imul
pop
filds
pushl
jl
push
mov
jle
xor
or
mov
orl
arpl
mov
xchg
mov
jo
mov
xchg
lods
ja
push
push
outsb
sbb
jo
push
and
add
sub
mov
bound
jb
dec
push
clc
popa
inc
ja
fucom
inc
push
test
mov
mov
jmp
ss
into
fists
mov
loop
imul
icebp
sub
popf
rclb
xchg
dec
mov
cmpl
rcr
mov
pop
cli
out
xor
arpl
or
arpl
fmuls
and
adc
arpl
adc
adc
dec
sub
xchg
mov
test
cli
cmpsl
pop
and
mov
mov
mov
xchg
inc
js
pusha
or
cmp
mov
cwtl
lea
insb
mov
add
mov
add
js
mov
cmp
cmp
and
mov
es
loopne
sbb
addr16
mov
cmpsb
repz
shrl
dec
sub
dec
jge
out
mov
cmp
mov
pop
push
lahf
inc
sbb
xor
jb
daa
psubd
or
repz
subb
and
mov
sub
pop
test
aad
adc
push
xchg
lahf
enter
cmp
jo
js
xor
jbe
xchg
bnd
sti
add
mov
or
enter
jae
push
repz
fstl
movsl
cs
sbbb
pop
mov
notl
data16
cld
xchg
lret
repz
xchg
test
and
dec
test
lds
aad
mov
or
test
leave
in
jmp
sbb
cltd
cwtl
iret
mov
lea
sbb
mov
xchg
pop
popa
lret
pop
popf
mov
xchg
rcll
cmp
andb
sub
rorl
pop
mov
adc
fwait
add
mov
imulb
push
dec
andb
enter
jg
cmc
je
push
test
inc
test
jl
fwait
push
mov
into
es
jp
inc
subb
int3
pop
jecxz
pop
mov
andb
popf
lahf
jbe
mov
mov
sub
sbb
in
xor
push
or
push
and
bound
sub
test
loope
xchg
sub
int
xchg
xor
mov
mov
sub
jg
adc
scas
push
jnp
ret
add
and
pop
rep
cmpsb
xor
or
xor
repnz
icebp
pminub
xchg
insl
or
stos
push
jmp
subb
mov
mov
inc
inc
out
jno
sbb
lock
shlb
inc
mov
je
cmp
xor
enter
mov
jae
loopne
jle
xchg
mov
test
movsb
mov
add
and
cli
shll
cmpsl
outsb
movsl
inc
mov
xchg
mov
xor
nop
dec
cmc
mov
test
out
clc
xchg
adc
and
push
dec
in
sbb
jno
test
xchg
popf
jns
add
popa
jecxz
js
cltd
cltd
pusha
out
test
stos
mov
lea
out
lahf
in
push
or
jmp
jle
gs
pmuludq
enter
add
lret
xchg
pop
test
cli
mov
jle
stos
fistpll
xor
cld
test
rol
ljmp
lock
insb
imul
mov
stos
out
jmp
xor
lock
aaa
pop
std
dec
cmp
loop
aam
es
and
iret
movb
sub
es
int3
data16
mov
sub
push
cmp
mov
cmp
cs
jp
lret
cli
rcrl
faddl
orl
and
stos
cld
xor
sbb
xor
push
loopne
imul
imul
shrb
mov
scas
xchg
es
fs
jle
clc
ljmp
xor
pop
sub
add
xchg
mov
icebp
test
xor
ljmp
mov
js
lahf
adc
and
shlb
mov
ljmp
inc
push
add
ja
popf
jge
ffreep
stos
or
shll
dec
std
int
dec
adc
lods
cmpsl
outsl
int
sahf
jno
fcom
xchg
pop
xor
xor
jge
add
mov
call
xchg
cmp
ds
adc
cmpl
pop
loope
pop
stc
mov
out
inc
mov
add
sahf
popf
jg
sub
sbb
pop
test
lock
jg
cmp
add
pop
inc
xor
push
and
shrl
dec
adc
test
jmp
es
dec
mov
mov
lret
shl
leave
add
sub
lcall
push
out
mov
mov
daa
lcall
aad
test
sub
popa
fucom
jnp
mov
mov
into
xor
pop
jnp
es
push
fildll
int3
pop
push
mov
adc
or
rcrb
das
nop
push
mov
cli
aas
or
fwait
adc
stc
in
scas
xchg
xor
lock
cmc
sbb
jmp
mov
ficomps
shl
sub
out
jb
push
jae
inc
pop
xchg
je
sbb
push
jae
jp
es
fcompl
loopne
mov
jne
inc
sbb
adc
and
mov
lock
add
scas
stc
cmp
xor
addl
icebp
out
es
xlat
pushf
mov
in
out
testl
insl
pushf
jo
shll
push
loope
mov
push
cmp
ret
jae
mov
sub
ds
inc
movsb
lcall
push
sub
inc
xchg
movsb
cmp
inc
aam
lock
mov
jns
xchg
jmp
mov
jmp
cld
je
in
jp
push
roll
add
and
shl
mov
push
or
xchg
ja
mov
xor
push
popa
add
jb
and
mov
icebp
fistpll
jo
xor
stos
test
dec
jne,pn
inc
orl
je
in
jecxz
mov
mov
sahf
repnz
clc
jecxz
imul
rcrb
cmp
andb
out
cmc
jnp
push
inc
pusha
or
jnp
sub
jbe
xchg
mov
addr16
mov
out
push
push
stos
test
mov
aam
inc
inc
fdivrs
or
inc
jp
and
das
add
fidivs
out
xchg
cld
dec
sbb
orl
xorb
cli
movsl
repz
int3
les
inc
mov
stc
ljmp
adc
mov
xchg
rcrl
cli
mov
add
in
cmpsb
mov
sbb
cmp
xchg
int3
stos
subl
sub
xchg
cwtl
cmc
mull
movsl
jle
in
je
mov
test
jb
pushl
and
sub
shl
push
fldcw
cmp
mov
xchg
mov
clc
dec
cmc
negb
mov
or
shrl
jle
xor
add
lret
test
in
aas
out
imul
and
rcrl
mov
inc
mov
and
fisttps
mov
cmpl
subb
add
enter
jle
in
dec
adc
fdivr
push
dec
mov
and
andb
pop
ret
add
mov
leave
pop
sbb
xor
mov
inc
dec
sub
fsubs
mov
mov
dec
cli
mov
and
sbb
push
fcoml
mov
dec
fsubrl
or
jbe
sbb
icebp
adc
xchg
xchg
jae
imul
addr16
dec
mov
leave
mov
sub
cwtl
dec
dec
int3
mov
sbb
xor
adc
jo
add
dec
fdivs
or
in
jp
test
inc
mov
ret
jno
jp
mov
mov
mov
sbb
imul
xchg
push
sub
xchg
mov
adc
adc
xchg
scas
xchg
imul
hlt
ficoms
dec
adc
xorb
push
lods
int
popf
aaa
adc
xchg
outsl
dec
outsl
loope
ror
mov
and
pop
cmc
sub
aaa
cs
jne
adc
sub
mov
stos
iret
dec
test
mov
or
into
add
lret
xor
adc
cmp
pushf
jno
inc
je
loop
jae
mov
cmp
xor
fistps
push
xchg
repnz
insl
pop
sahf
aam
jbe
dec
gs
loope
add
xor
mov
add
addr16
inc
push
jecxz
mov
sti
movsb
scas
add
mov
outsl
add
movsl
daa
adc
repz
inc
rclb
mov
orl
cli
xchg
push
cmp
aas
stos
pushf
jle
push
notb
dec
fisubrs
push
xchg
push
add
xchg
inc
cmp
or
xchg
push
mov
xchg
adc
call
call
outsb
mov
into
lea
jmp
out
cmp
ret
andl
mov
lods
add
cltd
dec
xor
jmp
lock
clc
rcrb
popa
imul
lret
adc
push
out
enter
fdivr
arpl
xchg
and
jle
adc
bound
rcll
mov
lret
push
mov
ljmp
pop
mov
lods
cs
mov
mov
leave
jmp
test
xor
fildl
and
dec
jae
jno
movsl
mov
lock
mov
sahf
cmc
js
dec
mov
push
clc
cmpsl
cmp
je
inc
sbb
jmp
push
fs
imull
xor
pop
mov
mov
mov
into
int
imul
push
push
pop
arpl
adc
cs
clc
mov
pop
fiadds
and
push
lods
or
iret
jle
add
xchg
fldl
inc
jae
ficompl
rclb
push
inc
rcr
mov
out
mov
mov
sarl
push
lds
mov
mov
nop
push
int
cmp
mov
fbstp
sub
pop
xchg
outsb
lea
push
test
inc
mov
xor
cld
insb
fisubs
into
mov
cld
icebp
inc
or
cmc
jecxz
pop
jl
lods
scas
dec
mov
xchg
add
enter
aad
out
cli
sahf
decl
dec
call
jp
sub
cmp
loope
dec
mov
repz
inc
icebp
clc
xchg
imul
or
pop
repnz
lds
pop
das
dec
push
rcrl
sbb
mov
in
dec
bound
lahf
cmpsl
daa
ljmp
sarl
xor
loop
mov
add
in
sbb
mov
xor
xor
xlat
push
lods
add
mov
mov
mov
sub
or
pop
std
add
les
stos
fidivrs
imul
incl
addr16
rcll
fwait
notl
lock
mov
and
push
sbb
xchg
jns
cmp
pop
mov
call
in
fst
outsb
mov
xchg
jge
xor
outsl
rcl
lret
sub
imul
cmc
ffree
cld
inc
inc
mov
test
call
ficompl
int3
and
fstl
outsl
or
cmp
mov
sub
stc
jns,pt
or
insb
mov
imul
sbb
insb
push
lods
es
lahf
mov
jne
icebp
and
lret
cmpsl
xor
inc
ds
inc
imul
cmp
stos
push
inc
dec
lahf
fs
dec
inc
fdiv
pop
xlat
lods
sarl
push
fstps
pop
cmpsb
aaa
xor
pop
xchg
mov
and
add
add
inc
push
sub
inc
adc
test
popa
lcall
popa
jne
dec
fisttpl
insb
pop
lods
aad
xchg
ffreep
aam
mov
lock
hlt
mov
sub
or
dec
xchg
mov
fucomip
cld
rorb
cmp
addr16
cmp
lock
jae
je
lahf
fdivr
push
jb
pop
push
leave
mov
aaa
mov
cli
cmpsl
lcall
mov
inc
sbb
icebp
sbbl
movsb
imul
call
les
adc
fnsave
push
adc
dec
loop
and
out
sbb
pop
scas
dec
lret
add
test
adc
rcll
movsb
mov
jnp
into
mov
xchg
push
call
js
rclb
sarl
lods
clc
stos
dec
icebp
sub
lahf
arpl
sub
push
movsb
and
jmp
pop
addr16
test
dec
push
mov
insb
mov
adc
dec
mov
cmpsb
mov
add
int
mov
mov
clc
mov
pushf
das
cmp
movsb
dec
and
inc
repnz
mov
sub
sub
adc
pop
sahf
cwtl
fisttpl
cmp
out
inc
ljmp
cld
xchg
fwait
out
dec
stc
pop
push
aam
or
push
icebp
stos
inc
and
push
in
cli
cmc
imul
lea
jmp
jae
pop
in
sub
sbb
rorl
std
and
sub
cmc
repnz
outsb
mov
ret
lret
xor
fiadds
out
repnz
jl
push
loopne
mov
repnz
out
int3
popa
pop
mov
adc
adcl
dec
sub
iret
inc
pushf
push
xchg
jnp
in
cmp
jb
fwait
hlt
and
ret
sub
addr16
mov
addl
mov
ret
and
jb
cmpsb
pop
xor
fdivrs
sbb
mov
dec
xchg
loope
scas
test
pop
stc
and
div
mov
ret
mov
adc
cmp
xor
cli
in
add
inc
pop
fs
pushf
cmp
or
jle
inc
fldt
adc
adc
add
cmpsb
cmp
xchg
out
ds
inc
dec
push
inc
push
shrb
jle
and
push
cmpsl
add
mov
and
je
sub
inc
stos
loope
cs
aaa
repnz
test
add
and
jbe
iret
enter
pop
cmc
and
mov
sarl
test
enter
sub
xchg
or
add
xchg
mov
adc
and
xor
sub
loop
jp
movsb
push
sti
popa
jecxz
int
xchg
add
mov
repnz
sbbb
or
pop
mov
mov
push
fimull
jmp
lods
data16
cmc
xorb
cltd
add
mov
push
ljmp
push
popa
push
rolb
mov
or
lods
add
mov
or
int
gs
inc
movsb
test
add
out
pop
in
adc
cmc
lret
fwait
movsb
jae
bound
jg
mov
sub
xchg
fwait
sub
adc
imul
sbb
into
cmc
jne
mov
cld
lds
loope
testb
pop
adc
mov
insl
clc
std
add
sub
aas
ja
sub
lods
popf
dec
rcrb
movsl
add
cmp
mov
and
sarb
xchg
out
mov
test
aas
sti
jb
test
sbb
ss
push
test
dec
shrl
xchg
adc
imulb
jns
sbb
add
mov
cmp
lahf
push
repnz
xor
mov
aam
pop
inc
fcmovnb
fdivl
dec
dec
out
mov
add
in
xchg
loope
out
stc
add
and
sbb
movsl
mov
sub
dec
sub
mov
lods
aaa
mov
pushf
cmp
pop
les
jl
mov
xchg
enter
in
adc
outsb
cmp
cltd
add
add
inc
dec
out
mov
sbb
dec
scas
cli
pop
and
andb
insl
or
pop
aas
inc
jb
pop
cmp
push
add
jle
push
cmp
sub
and
mov
xor
adc
inc
cmpsb
call
scas
fcoms
out
mov
add
js
cmpxchg8b
insl
dec
pop
fldcw
sub
lods
pushf
lds
ds
push
jg
xchg
adcb
jp
jmp
jp
out
mov
repnz
mov
cmp
inc
push
jl
mov
negl
mov
jge
lock
in
mov
lods
sub
add
add
or
lds
mov
repnz
ss
sbb
lods
adc
dec
cmc
negl
in
je
lcall
imul
inc
ljmp
add
shl
xor
mov
xchg
and
lea
sub
stos
gs
addl
cmp
push
mov
into
loop
mov
jecxz
idivl
push
mov
mov
fsubrl
pop
mov
cmp
push
mov
xor
les
shr
mov
into
es
test
ljmp
scas
fldl
jae
sbb
push
repnz
nop
push
pop
add
ds
or
repz
add
loopne
xor
inc
jp
add
pop
adc
or
xchg
in
mov
xchg
inc
push
sbb
pop
add
cwtl
mov
inc
adc
xor
sub
insl
sub
idivb
daa
cmpl
das
test
sub
in
and
iret
or
sbb
push
mov
jmp
sbb
sti
bound
ss
test
mov
push
mov
xchg
fbstp
rcl
bound
andb
enter
pop
adc
in
ja
cmp
mov
arpl
shrl
je
mov
mov
mov
jae
out
inc
or
nop
fsts
mov
push
clc
jl
outsb
dec
shr
ret
and
add
dec
stc
mov
and
stos
pop
std
cwtl
jbe
fcoml
addr16
push
jecxz
pushf
fldt
fdivrs
mov
test
test
std
lcall
loop
push
movsb
pop
insb
loopne
aam
cli
jo
sahf
icebp
add
fwait
das
inc
push
pop
lods
adc
lahf
push
popf
cld
sub
int3
and
inc
shll
cmp
xchg
xor
mov
cs
sahf
pop
cltd
mov
mov
sub
xor
add
daa
ret
or
jae
icebp
pshufw
aas
repz
lret
pop
mov
mov
sub
int
mov
mov
aaa
enter
dec
jbe
or
dec
jns
arpl
push
dec
inc
int3
or
jnp
xor
test
out
mov
orl
sbb
sbb
mov
aaa
in
pop
jmp
jae
xrelease
push
xchg
pusha
mov
lods
push
xorl
es
push
sbb
daa
test
sti
scas
push
xor
mov
and
mov
push
push
insl
movsl
fldcw
arpl
loop
and
mov
xlat
cmp
sub
imul
dec
pop
mov
lods
clc
cmp
mov
fld
data16
mov
xor
dec
push
push
int3
inc
mov
cmpsl
fcompl
retw
loop
clc
xor
arpl
test
shll
inc
jle
loop
gs
pop
xor
sbb
mov
lods
stos
mov
jae
fs
xor
add
lods
ret
jle
lcall
xchg
push
mov
pop
gs
adc
call
lock
inc
cmp
cltd
sub
xor
stc
fsubr
repnz
loopne
inc
dec
adc
out
push
mov
dec
in
push
mov
xchg
stc
ss
xlat
icebp
das
mov
mov
xchg
pop
and
call
in
data16
sub
push
nop
mov
push
sbb
repnz
add
pushf
push
ror
pusha
movsl
jecxz
enter
gs
dec
fs
shll
and
enter
out
sbb
fwait
mov
lds
push
jmp
mov
or
jns
addr16
adc
es
mov
fstpt
sti
xor
jle
popa
or
cmp
jg
xor
add
sar
stos
mov
sbb
mov
adc
sbb
sar
nop
adc
mov
ds
les
pop
xchg
xor
push
jb
mov
into
xor
xorl
jge
add
mov
pop
jae
xchg
mov
adc
gs
and
mov
repz
sub
jp
fcomps
jecxz
hlt
loop
xchg
jbe
push
pop
std
je
cmp
in
jno
dec
arpl
push
sti
xchg
push
rcr
dec
and
mov
nop
repz
pop
xor
adc
sarb
bound
mov
cs
rolb
xor
fmulp
pop
mov
hlt
lahf
add
inc
sbb
adc
mov
or
cmpsb
js
faddp
add
adc
arpl
adc
ljmp
lcall
jle
jle
std
scas
adc
cmpsl
jno
jmp
outsb
cmpsb
fnsave
xchg
cmp
rorb
mov
push
sahf
icebp
jb
jae
aaa
ss
mov
jl
cmpsl
lds
cmp
test
in
aaa
rclb
jmp
pop
mov
fdivr
jge
dec
lea
push
roll
mov
xchg
popf
jmp
pop
icebp
xor
inc
scas
test
dec
addb
mov
cld
dec
hlt
sub
mov
mov
jmp
in
push
adcb
std
shrb
in
xor
data16
in
prefetch
and
inc
scas
lds
xchg
jl
int3
xchg
pop
push
ficoms
pop
ret
mov
inc
inc
xchg
jmp
pop
jecxz
mov
or
dec
movsb
lahf
xchg
push
or
mov
ficomps
sbb
adc
ljmp
push
and
cmp
xchg
outsl
daa
add
daa
mov
pop
test
pop
cmc
and
insl
lea
nop
shll
xor
in
and
and
mov
push
mov
hlt
js
daa
lret
lea
xchg
or
sub
cli
sbb
sub
in
jb
adc
adc
adc
cmp
gs
mov
ret
sbb
add
add
push
sbb
xchg
daa
lahf
inc
inc
int
xor
cmp
movsl
divb
cmc
dec
mov
jne
aaa
in
mov
xor
push
and
fisubrl
setl
sarb
rolb
inc
adc
push
push
imul
push
mov
and
pop
out
lods
je
testb
push
adc
dec
inc
pop
aaa
fld
jmp
shrb
mov
fldcw
dec
or
xor
inc
push
add
daa
mov
and
ja
jns
call
lgs
insl
jge
arpl
scas
push
jge
dec
pop
inc
cmp
inc
cmpb
rcl
push
jno
mov
pop
pop
jg
popf
sub
insb
rol
or
fs
mov
bound
js
cli
sbb
and
ds
inc
stos
jmp
out
fistps
cmp
out
or
mov
sbb
int3
popf
xchg
cmp
jo
es
pop
lods
or
sbb
mov
lahf
jecxz,pt
mov
push
inc
cli
in
jle
add
push
pop
sbb
ret
fadds
cmp
iret
in
cmpsb
push
sbb
jb
stos
xchg
int3
and
test
pop
cltd
popa
aad
dec
dec
cmp
fcomp
dec
push
cmp
enter
add
addr16
je
pop
dec
ficompl
push
or
int
fistpll
ret
bound
pop
push
sub
adc
jge
iret
sbb
xor
mov
call
sub
mov
clc
dec
lret
mov
sub
orl
sub
fstps
clc
fs
nop
in
subb
xorb
cld
pop
js
lcall
stos
cmp
fildl
aam
dec
jp
scas
dec
inc
aam
cmp
cltd
shrb
ss
add
push
sub
dec
sub
sbb
dec
shl
mov
sbb
add
push
pop
in
mov
out
push
xchg
pop
mov
xor
in
enter
aaa
xor
jbe
ss
mov
loopne
or
test
or
mov
loope
pop
mov
xor
inc
push
repnz
adcl
rorl
aad
jae
sub
addb
pop
aaa
imul
stc
fwait
push
sbbl
sub
push
test
pop
xchg
inc
int
cmp
pusha
pop
pushf
iret
inc
push
pop
leave
jg
out
jbe
mov
cmp
or
mov
stos
add
inc
xchg
inc
fs
in
pop
stos
std
inc
test
inc
shrl
in
lea
sarl
fisttpll
jl
and
xchg
xchg
cs
push
xor
inc
add
aas
adc
sti
xor
ja
pusha
mov
js
inc
lahf
xchg
sub
sub
lahf
orb
lods
mov
push
loope
dec
sti
iret
xchg
rorl
mov
pop
jne
sbb
push
jns
pop
ret
jle
push
push
push
mov
mov
pop
mov
data16
scas
mov
es
into
and
in
les
add
xlat
in
and
cmpsb
xor
cmc
out
pop
xchg
xlat
inc
push
popa
cmpsb
ret
hlt
mov
jbe
in
in
ret
cmp
push
mov
addr16
sub
stc
in
push
lock
push
or
fisubrs
mov
xchg
xchg
pop
inc
push
popa
cmp
jb
mov
add
dec
jmp
lret
stc
leave
sub
lret
xor
scas
push
mov
cmp
imul
pusha
sbb
jbe
mul
shll
cli
call
push
and
add
fwait
cmpb
aam
inc
into
cmp
pop
xor
int
jg
push
dec
inc
ficoms
dec
cmp
mov
and
das
loope
jbe
mov
mov
sbb
call
into
jne
jl
mov
sbb
jle
dec
cmpb
sub
popa
pop
inc
mov
adc
sbbl
sbb
repz
ljmp
clc
mov
fbstp
shl
dec
out
or
mov
dec
push
test
es
mov
jnp
lock
bnd
fnstcw
push
out
jmp
scas
scas
mov
sbb
js
add
adc
addr16
jp
stc
cltd
jg
xor
mov
jmp
cmpsl
stos
ret
pop
xchg
repnz
push
and
pop
clc
out
call
filds
inc
add
jno
push
xchg
fildll
loope
loopne
lods
pop
stos
fcmovnbe
mov
xor
jmp
fincstp
inc
jae
push
add
rcrb
pushf
cmp
xor
fnstsw
jp
dec
dec
sbb
movl
or
movhlps
xchg
cmp
inc
arpl
aam
ficoms
and
sbbb
fisubl
and
rclb
out
jb
nop
std
xor
outsl
fs
mov
lcall
mov
xor
xchg
fsubp
ljmp
mov
pop
fucomip
mov
or
dec
xchg
hlt
rolb
jecxz
cmp
add
and
or
mov
jne
rorb
mov
add
jb
nop
loop
mov
popa
repz
in
les
lcall
fcmovnu
adc
jmp
fsubrl
adc
lret
imul
and
jno
outsb
lods
mov
in
cmp
push
stos
pop
jns
push
dec
add
sub
ficomps
inc
and
stc
fidivrl
inc
lods
lods
mov
xchg
pop
or
loopne
test
inc
or
mov
mov
push
and
push
jns
test
cmp
and
ss
addb
cs
cmp
and
lret
add
lcall
xchg
data16
add
xlat
sar
pop
and
out
xchg
xchg
adc
mov
inc
cwtl
ljmp
outsl
jp
and
mov
sti
mov
mov
loopne
push
sub
and
outsb
int
stos
sbb
cmp
test
jp
inc
fnsave
pop
inc
sub
ret
dec
xor
mov
pop
xor
inc
mov
out
cmp
notl
xor
iret
fs
xor
and
div
fwait
dec
sar
dec
xor
leave
jns
push
arpl
daa
cmpsb
icebp
insl
or
daa
pop
fists
dec
popf
ror
xchg
mov
jmp
test
jbe
mov
cmp
dec
cmp
pop
sbb
out
push
imul
sub
pmaxsw
cmp
and
pop
xchg
pop
mov
mov
xor
mov
daa
into
mov
adc
mov
cmp
jnp
xlat
dec
gs
data16
inc
int
cmp
rcrl
ljmp
mov
mov
xchg
scas
xchg
cli
movsl
dec
fs
lea
fcom
stos
lea
mov
ljmp
cld
fxch
push
lods
flds
aaa
hlt
mov
jbe
out
sub
or
pop
imul
fs
xor
mov
data16
pop
mov
dec
mov
mov
xor
cltd
adc
push
icebp
or
xchg
ja
fs
addr16
adc
mov
lret
stc
mov
mov
push
jl
xchg
or
dec
add
movsb
xchg
dec
scas
cld
adc
movsl
xor
fwait
stc
xor
sbb
mov
fiaddl
jo
mov
add
imul
push
pushf
jns
clc
push
push
stos
pop
dec
jmp
sub
push
loope
add
movsb
addr16
lcall
rcr
loop
adc
lods
and
test
and
andnps
or
stos
aaa
add
aas
arpl
loope
xchg
sub
jecxz
or
dec
jle
mov
sub
lods
xor
jp
cmp
mov
mov
jmp
cmp
inc
fwait
pop
and
or
ror
call
xor
xchg
mov
mov
pop
add
aad
fwait
lret
dec
aad
push
or
and
push
mov
mov
cmp
cmc
out
and
repz
ret
xor
dec
sub
and
out
clc
sub
pop
das
js
lods
gs
add
popa
mov
mov
test
add
cmp
inc
call
adc
insb
cwtl
cmp
jmp
test
dec
lods
and
pop
push
inc
seto
pop
cmp
jne
mov
xchg
push
or
and
dec
test
mov
jnp
inc
loopne
push
xchg
sbbl
inc
xor
testb
icebp
shr
sub
mov
jne
mov
lret
out
or
shlb
mov
pop
inc
inc
push
ret
sahf
addr16
das
or
out
pop
nop
stos
lret
arpl
mov
sub
xor
imul
scas
xlat
add
push
inc
repz
jns
push
inc
les
pop
das
jbe
int3
and
jge
jo
repnz
jo
dec
or
jecxz
ret
cli
or
mov
stc
mov
cmpl
or
mov
cld
jns
sbb
es
mov
xchg
fmuls
sub
repnz
loope
push
mov
xor
mov
in
cmp
lahf
cwtl
mov
cs
out
jae
dec
vandnpd
aas
pushf
cmp
loop
dec
jb
les
imul
test
xor
sub
pop
jno
cli
mov
xchg
or
add
push
stos
mov
and
mov
mov
lds
add
push
pop
jne
add
xchg
lock
int
cmpsl
in
gs
cmc
dec
sub
cmp
push
and
dec
cmp
sub
mov
jmp
movl
lret
inc
frstor
xor
bound
adc
jno
mov
in
lret
loopne
jg
cld
xchg
out
stos
int3
ja
inc
bsf
jg
push
cmp
push
dec
xor
mov
xchg
jno
ds
insb
jbe
gs
inc
mov
in
and
js
sbb
jno
and
fsubr
aam
adc
shlb
fcoml
xor
loope
imulb
fld1
mov
popa
sar
imul
lea
mov
imull
aam
or
xchg
adc
lods
inc
add
xor
imull
xchg
rclb
test
push
and
int3
and
in
fwait
cmp
fs
xor
sub
mov
mov
and
in
fdivrs
insl
cmpsl
imul
mov
push
je
aam
mov
imul
inc
into
dec
mov
mov
or
in
pop
pop
scas
push
mov
insb
je
aam
fsubl
jmp
fnstcw
ffreep
xor
mov
ja
pop
imul
jg
orl
add
fdivs
fcoms
sbb
in
push
mov
repz
and
and
ret
cmpsb
out
jl
repnz
or
xchg
stc
jp
jb
mov
jle
or
push
xor
sti
cli
jle
loopne
pop
xchg
fmuls
mov
imul
jns
jb
cmp
and
imul
dec
mov
jae
or
fnstsw
add
dec
outsb
clc
push
lahf
mov
ss
enter
lret
out
cmpsb
scas
ficompl
arpl
cmp
int3
xchg
dec
sti
dec
lods
dec
out
xorb
jg
adc
xchg
stc
mov
inc
cmp
outsl
mov
xlat
rclb
loope
leave
push
rclb
int3
rcrl
stos
into
aas
and
xchg
loopne
cltd
mov
int
add
push
and
cmp
loope
push
cmpsl
mov
adc
testb
cmpsb
pop
call
inc
je
and
gs
popf
xchg
movsl
jecxz
cmpsl
clc
std
cmp
addl
xchg
sub
fmuls
push
cmp
pushf
ja
stos
cltd
aam
shl
scas
lock
bswap
xchg
adc
ljmp
lods
roll
add
shr
sbb
mov
xor
pop
mov
mov
cmp
pop
sbb
bound
mov
mov
xor
arpl
xor
test
insl
add
pop
daa
bound
shll
imul
stos
fmull
dec
cmp
sub
jae
outsb
and
leave
xlat
pop
jnp
imul
cmc
push
aad
loope
cmp
test
pop
mov
mov
mov
mov
pop
sarl
cmp
mov
xchg
or
cmp
xor
add
aad
sti
insb
mov
add
rcrl
dec
int
xchg
mov
lcall
dec
cs
ds
pusha
cwtl
aam
shll
out
mov
pop
cltd
mov
sahf
mov
in
int
cltd
fisubrs
gs
dec
fstl
jno,pt
stos
scas
dec
mov
mov
leave
sub
pop
outsb
pop
cmp
push
and
test
into
adc
pop
mov
mov
pusha
test
bound
adc
xchg
shll
inc
cmpsb
testl
pop
sbbl
addb
jecxz
data16
test
adc
mov
rcrl
fistpll
mov
xor
clc
jbe
xchg
sarl
xchg
adc
hlt
mov
scas
jnp
jbe
or
xchg
aad
shl
aaa
mov
mov
addr16
jae
push
les
jmp
and
jl
mov
into
ss
and
fwait
jne
adc
add
push
outsb
fadds
sbb
scas
jns
roll
dec
push
pop
sbb
dec
jle
aad
mov
sbb
leave
test
sub
push
cmp
inc
dec
sbb
insl
out
sub
push
jns
loop
int3
lea
cmp
or
sub
dec
sti
in
in
repnz
cmp
imul
int3
movsb
xchg
jecxz
push
jecxz
ss
xor
dec
in
inc
pop
adc
mov
shl
add
or
cmp
imul
xchg
cmpsb
rcrb
adc
add
mov
shll
popf
ss
push
add
lret
popf
dec
add
es
xchg
jns
mov
rcll
dec
andb
mov
jno
int3
inc
and
stos
mov
jns
jg
decl
xor
adc
insl
lahf
jb
jmp
fstp
test
pusha
sbb
lret
fmull
mov
imul
mov
cmp
lahf
sub
stos
inc
movsb
xor
mov
sub
bound
pop
add
lahf
movsl
gs
loop
popf
nop
int3
sbb
ss
movsb
les
out
fdivrs
or
inc
mov
ret
or
jbe
inc
es
inc
adc
inc
jnp
xchg
xor
pop
leave
add
pusha
cmpsb
jl
sbb
cld
cltd
xchg
and
push
inc
repz
stc
pop
xlat
outsb
xor
xchg
js
sbb
mov
sahf
insb
movsb
sub
sbb
out
push
test
xor
mov
or
or
insl
adc
enter
ja
sub
sub
cmp
loopne
ret
jle
xchg
ret
movsl
jmp
addr16
add
movsb
jecxz
inc
int3
rolb
adc
mov
pop
pop
sub
xchg
sti
add
mov
xor
inc
mov
jmp
mov
cmp
cmp
and
sbb
andl
test
rcr
push
push
fidivrs
adc
movsb
ror
cmpsb
fcoml
iret
jo
dec
mov
inc
out
outsb
packuswb
add
dec
cmpsl
out
push
mov
cmp
fsubs
jnp
dec
mov
inc
stos
or
imul
push
jp
in
iret
sbb
and
ss
sbb
addr16
jge
cmp
incb
adc
outsl
add
cld
xchg
rcrl
aad
mov
inc
inc
xor
int3
cli
inc
add
ret
inc
jmp
clc
inc
popa
repz
and
sub
xchg
pop
push
mov
test
adc
inc
sbb
stos
insl
xchg
pop
arpl
leave
outsb
dec
or
movsb
xchg
das
push
adc
sbb
fstpl
dec
mov
cmp
fdivrl
cld
int
xchg
loope
adc
hlt
xchg
fisubl
insb
fcompl
push
push
and
pushf
mov
dec
ret
rcl
push
in
popa
xor
divl
imul
imul
or
into
les
mov
dec
sbb
push
lahf
mov
divb
inc
cld
dec
loopne
cmp
pop
ret
push
jne
pop
xchg
jp
jg
inc
jmp
cli
icebp
std
sub
in
ja
dec
xchg
pusha
sbb
jo
pop
bound
pop
out
bound
stos
in
jp
mov
ret
outsb
fucomi
or
jl,pn
or
loop
imul
inc
mov
and
pop
push
sti
inc
jl
and
gs
in
sbb
xchg
pushf
xchg
test
cmc
ret
sub
push
mov
negb
sub
int3
in
sahf
sbb
xchg
add
push
lea
inc
lods
dec
adc
scas
xor
stos
or
push
xor
adc
ret
sub
jne
sub
daa
push
sub
pop
sub
movsb
addps
lahf
jge
stos
pop
push
data16
scas
push
sbb
dec
sub
cwtl
dec
dec
push
call
repz
dec
push
xor
sbb
add
dec
popa
lds
inc
int3
stos
mov
popf
imul
test
add
mov
mov
test
cld
sbb
test
cs
lret
stc
sti
mov
add
les
fadds
repnz
adc
add
mov
mov
push
cmp
je
mov
mov
add
sub
insl
push
xchg
ljmp
xor
mov
mov
test
je
xlat
dec
js
mov
dec
enter
dec
adc
cli
aam
insb
divl
outsl
shl
inc
xor
xchg
ja
loop
xor
add
dec
xor
outsb
mov
sub
call
or
xor
mov
add
daa
pop
jnp
and
xchg
mov
dec
xor
mov
sbb
sub
sub
push
aad
push
dec
in
adc
rep
outsb
sbb
sbb
cmc
push
enter
repz
test
imul
xor
mov
jo
jle
popa
xlat
call
fldcw
pop
pop
push
adc
cmpsb
lods
push
pop
pushf
and
aam
fimull
add
dec
xchg
dec
dec
sbb
sahf
and
mov
inc
loopne
fcompl
xor
ud1
fwait
xchg
xchg
in
sub
xlat
or
dec
and
ficoms
pop
dec
scas
data16
repz
push
xchg
xchg
inc
aam
xor
mov
in
pop
sahf
stos
ds
shr
test
inc
mov
rclb
cmp
cld
shll
aam
jne
xchg
orb
pop
inc
push
iret
test
mov
rcl
mov
repz
or
pop
les
push
sahf
and
movb
bound
sub
out
sub
push
mov
jecxz
rorl
inc
push
cwtl
aas
loope
xchg
and
arpl
and
xor
jmp
push
jno
mov
stos
jge
ss
lret
pop
in
mov
sti
sbb
lret
js,pn
addb
outsl
es
ret
mov
pushf
mov
fadd
or
push
push
dec
pop
sahf
or
inc
add
xchg
outsb
push
sbb
xor
jne
push
add
adc
pop
jb
imul
jne
jo
mov
das
dec
push
fcom
mov
xor
push
int
popf
aas
dec
sbb
or
iret
fcompl
fldt
fisttpl
jmp
jp
and
ret
add
push
scas
ljmp
mov
test
adc
inc
sub
stc
lds
jl
adc
jmp
sub
mov
sub
mov
ret
dec
in
lea
rolb
mov
mov
loopne
mov
jno
sbb
rolb
xchg
in
mov
jg
dec
mov
insb
roll
les
push
mov
out
dec
mov
mov
inc
lahf
mov
cmp
addr16
js
out
es
push
stos
and
test
pushf
fmul
fidivl
mov
adc
sti
leave
and
mov
cs
inc
push
add
clc
xor
ror
jge
dec
sbb
and
xchg
push
test
mov
push
xlat
sub
in
test
fdivrs
lods
jge
mov
jge
aas
mov
lcall
mov
mov
cltd
sbb
test
pop
mov
aas
mov
mov
jae
adc
jmp
adc
xchg
out
rol
sub
pop
mov
cmpsl
and
stos
insb
cmc
xor
into
push
dec
or
add
stc
pusha
jae
and
out
sahf
pop
pusha
adc
adc
pop
pop
mov
or
incb
add
lret
ds
inc
sub
scas
or
insl
sub
inc
scas
and
pop
ss
dec
and
addb
lods
jns
gs
sub
arpl
cmpb
lret
outsl
push
pop
pop
mov
loop
inc
sti
inc
add
out
scas
gs
sub
cmp
hlt
std
jmp
in
or
mov
das
xchg
movsb
cmc
cmp
or
push
mov
dec
movsl
mov
jne
dec
pusha
jno
outsl
mov
and
int
mov
mov
xchg
cmpsb
cmp
clc
cwtl
mov
push
lods
or
stos
xchg
or
hlt
in
pop
out
jae
xchg
push
test
inc
or
test
or
mov
jo
or
or
js
movsb
shlb
cmp
jb
sbb
pop
jne
lret
sub
loop
and
insl
je
xor
mov
xchg
popa
and
rcrl
adc
mov
xchg
inc
jnp
nop
pop
addr16
fldenv
cmp
mov
test
inc
sub
sub
into
daa
cwtl
je
cmp
loop
cmp
rorl
jl
push
jecxz
int
and
push
in
or
sahf
lahf
push
mov
aaa
mov
mulb
xchg
xchg
fimull
cmp
sbb
imul
rcl
dec
int
mov
movb
pushw
push
negl
sbb
cltd
ret
movsb
xchg
push
sbb
roll
fsubl
jp
sub
out
jnp
pop
in
fbstp
cmp
imul
pop
leave
push
popf
push
aas
jl
testl
cmp
scas
cmp
xor
sub
xchg
in
out
and
mov
dec
inc
jp
call
jns
lret
xchg
xchg
mov
arpl
jo
pop
std
pop
outsb
cmpsb
pop
xor
inc
ja
arpl
lcall
movsb
or
scas
xor
adc
mov
add
pop
cmp
mov
lcall
in
loope
pop
pop
pop
mov
push
push
cmp
inc
lret
xchg
jns
daa
sub
adc
out
inc
int3
inc
cmpsb
popf
pop
mov
pop
call
bswap
loop
xor
inc
fidivrs
pop
jmp
mov
out
arpl
test
jo
mov
mov
xchg
fcompl
push
and
add
into
xor
nop
ret
inc
dec
stos
cmp
xor
mov
pop
jle
loopne
shl
rcrb
call
loope
lds
pusha
pop
cmpsb
pop
xchg
je
sbb
insb
jge
or
or
lods
sbbl
sub
fmuls
pop
lods
push
inc
dec
ds
cmp
or
push
mov
fcompl
inc
in
lcall
xor
push
aad
dec
push
xchg
bswap
pop
pop
movsl
sbb
dec
out
aad
xchg
sub
pusha
xchg
out
jge
mov
jecxz
aaa
js
push
add
repnz
jbe
arpl
and
jbe
das
test
pop
adc
cmp
rolb
xchg
add
repnz
add
ret
push
mov
sub
lock
pop
sbb
iret
cmp
call
roll
cli
lds
inc
push
es
ss
and
dec
lret
jle
outsl
cmp
or
cmp
mov
jg
pcmpgtb
fmulp
js
mov
test
fucom
int
lret
push
pop
pop
shr
inc
fnstenv
out
lods
sbb
aam
cmpsb
mov
jns
bound
sub
cmpsl
mov
or
outsl
insb
lods
test
mov
shlb
cmp
cwtl
int
jne
stos
mov
fsts
dec
fstpl
lds
mov
fs
mov
arpl
out
jne
add
mov
sbb
loopne
insl
and
ffree
cwtl
add
call
pop
inc
mov
das
fcomps
mov
xchg
js
lock
fwait
aad
hlt
jg
fwait
xchg
push
mov
bound
push
stc
sbb
bound
mov
jnp
mov
leave
add
and
jnp
test
mov
scas
cmp
cmp
pop
dec
jb
repnz
push
ret
add
lds
cs
test
rcrl
sub
adc
xor
mulps
jl
insb
ljmp
in
pop
add
out
pop
inc
and
sarb
sub
repz
push
mov
and
loop
jo
in
or
mov
fisubl
punpckhdq
cmpsl
mul
mov
or
or
xor
std
aaa
shrl
mov
push
out
jbe
movsb
mov
jge
dec
fs
jge
lret
test
push
xchg
mov
daa
mov
aad
mov
and
ficoms
push
lds
lret
mov
add
rcrl
cmp
mov
mov
or
lds
adc
fwait
int
mov
dec
or
dec
adc
pop
push
and
leave
aas
pop
aas
jge
xlat
in
mov
into
sub
repnz
and
pusha
int
lret
in
das
dec
mov
pop
or
add
inc
mov
xchg
out
cld
sub
cmp
out
popf
push
mov
lds
shll
jle
mov
arpl
adcb
and
xchg
dec
pop
mov
and
jne
dec
cwtl
add
lret
xor
std
bound
inc
dec
movsl
lcall
scas
fld
pop
ja
add
xchg
fadds
pop
cmp
xor
aas
int3
notl
adc
jecxz
cld
ds
scas
or
sarl
push
aaa
dec
sub
ds
fsubl
fs
sbb
mov
mov
ljmp
sub
xor
cwtl
push
xchg
sti
cmp
mov
imul
fdivs
mov
into
jecxz
dec
pop
push
push
dec
and
hlt
cmpsb
sub
repnz
inc
mov
dec
arpl
jnp
mov
cld
lea
xchg
jmp
xor
jbe
mov
rorl
push
dec
jno
add
ror
jnp
sub
or
insb
push
pop
add
loop
lahf
fs
jno
loop
lds
mov
movsb
lcall
or
movsb
call
sahf
clc
movsb
fwait
inc
shll
dec
je
mov
jbe
sbb
lds
loopne
push
mov
push
jmp
push
aam
in
add
mov
loopne
or
test
jbe
mov
test
push
imul
xor
jmp
fiadds
push
fimuls
dec
xchg
pop
in
stc
jb
das
scas
cmp
cmp
popf
jmp
adcl
cmp
imul
cmp
xchg
mov
push
lods
cmp
jo
cmp
nop
adc
sub
adc
xor
stos
jmp
into
push
xor
fsubrs
push
lret
adc
cld
ret
push
xor
mov
faddl
mov
xchg
inc
push
add
cltd
lock
cmp
mov
jne
xchg
in
jo
pop
andb
inc
adc
add
scas
mov
sbb
dec
mov
cmp
imul
pop
lahf
hlt
lahf
arpl
and
mov
imul
dec
mov
xchg
fwait
jge
pushf
arpl
push
xchg
ds
cmp
mov
mov
pop
or
pop
sbb
xor
pusha
dec
fnstsw
fsubs
out
hlt
popa
mov
fcmovbe
outsl
cli
sahf
jle
jne
and
pop
mov
fcomps
stc
mov
jbe
fcompl
vminss
xchg
lret
ret
mov
enter
clc
xor
and
jecxz
psubq
lret
and
xchg
arpl
outsb
mov
arpl
scas
sub
icebp
repz
imulb
cmp
pop
or
rcr
lahf
add
jp
lahf
jmp
adc
pop
and
out
lea
data16
imul
mov
cld
push
mov
inc
mov
jno
mov
cmp
out
sbb
dec
orb
enter
ret
out
xchg
adc
leave
mov
xlat
mov
or
nop
mov
cmpsl
fmull
arpl
mov
not
out
jl
push
fistpll
dec
pop
mov
add
sar
fcomip
out
stos
repnz
inc
push
aaa
test
and
jge
sub
jecxz
movsb
push
xchg
lea
adc
hlt
push
jg
rcrb
xor
jp
adc
or
pop
test
lret
add
sub
je
mov
in
mov
mov
or
sub
jnp
neg
and
negb
and
mov
popl
lods
push
mov
fs
ds
mov
ret
sahf
call
andl
mov
push
xchg
lret
loop
inc
ficoml
sub
arpl
inc
mov
add
stos
sub
inc
xor
in
xor
int3
stos
lea
mov
xor
outsb
movsl
stos
pop
inc
out
outsl
or
pop
stos
mov
cwtl
into
mov
mov
ss
sub
xchg
cmp
mov
dec
outsb
sahf
xchg
movsb
dec
stc
xor
out
es
jle
xchg
jmp
adc
xchg
cltd
in
vdivps
inc
xchg
in
daa
pop
push
add
nop
or
inc
xchg
leave
shrl
or
cmp
out
iret
jp
mov
or
out
out
int
lcall
mov
xor
jp
nop
pop
push
inc
pop
aam
ret
sbb
and
in
sub
lods
adc
js
test
movsl
mov
fs
mov
xchg
add
in
scas
or
push
mov
or
adc
mov
movsl
daa
mov
out
lds
and
mov
pop
mov
test
mov
and
jae
push
mov
jns
cmpsb
sub
das
lds
cwtl
xchg
adc
sbbb
dec
xchg
shll
and
sarb
inc
adc
inc
outsl
and
mov
je
push
cmp
sub
test
int
mul
and
xchg
inc
mov
pop
xor
or
xchg
jns
or
testb
pop
js
mov
lret
mov
cmp
mov
cmp
sub
scas
or
xchg
pop
rclb
imul
pop
gs
pop
jecxz
ror
push
xor
lea
pop
adc
cmp
stos
lahf
inc
lcall
std
std
add
mov
scas
jmp
cmp
pop
popf
shl
test
sahf
add
aaa
cmpb
popa
or
sbb
sub
js
cmp
jnp
fnsave
jge
fisubrs
jno
xchg
xlat
or
xchg
inc
shlb
cmp
ficoms
or
mov
push
bound
mov
inc
ss
adc
insl
mov
fsubp
mov
cmp
aaa
push
paddw
sub
push
out
or
dec
inc
out
js
mov
push
and
xorl
imul
nop
mov
cwtl
push
push
sbb
pop
popa
sbb
test
test
mov
cmpsb
jo
lcall
push
inc
sahf
loopne
sbb
daa
dec
jnp
sub
jl
outsl
cmpb
stos
jo
mov
dec
mov
sbb
adc
ss
sahf
std
add
cltd
notl
arpl
je,pt
and
stos
clc
push
mov
je
add
movsb
mov
and
popa
scas
divps
or
and
inc
sub
xlat
fldenv
pop
insb
and
orb
mov
mov
lods
test
jnp
mov
push
int3
outsl
out
jo
pushf
test
rolb
push
cmp
imul
xchg
push
in
test
out
mov
movsb
push
enter
sbb
js
pop
or
mov
sub
sbb
out
and
aaa
xlat
inc
test
xlat
mov
push
sbb
or
adc
daa
cwtl
insl
sub
aaa
out
imul
out
andb
add
jle
icebp
and
lea
inc
mov
or
push
hlt
mov
dec
loop
xchg
sub
out
cmp
lret
sahf
mov
pop
mov
cltd
ss
or
adcl
int3
aas
mov
jge
lret
or
loop
mov
bound
into
enter
jmp
int
int3
add
ds
stc
inc
pushf
mov
imul
cli
lds
jp
shrd
or
loopne
scas
call
adc
loopne
inc
shlb
inc
andl
xchg
or
js
jo
sub
lea
out
lods
mov
in
mov
bound
sbb
sbb
dec
jo
arpl
jmp
lcall
aaa
scas
call
add
mov
cmp
jns
sarl
xchg
jae
mov
ret
cmp
dec
test
mov
out
sbb
movsb
jecxz
movsb
xchg
mov
sbb
outsb
mov
sbb
sbb
out
lret
add
insb
cli
mov
enter
imul
or
pop
sahf
mov
mov
out
dec
dec
scas
test
adc
pop
mov
out
test
icebp
insb
ljmp
sbb
loop
cmp
iret
sarl
cld
lret
cmp
cmp
cmp
cmc
scas
mov
inc
inc
cmc
cmp
push
lea
and
add
jge
xchg
incb
out
shlb
aam
push
insb
mov
pop
xchg
pusha
testb
mov
jge
repz
lods
mov
pop
orb
ret
popf
sub
xchg
test
push
enter
xchg
inc
sti
imul
loope
sahf
xchg
push
andl
dec
in
fidivl
jbe
call
sbb
or
je
sbb
jbe
lret
in
dec
and
push
std
out
mov
dec
mov
cmp
xchg
mov
out
mov
inc
mov
mov
jae
and
fbld
mov
adc
jno
lds
sub
inc
pop
mov
add
inc
xor
fwait
add
orb
inc
dec
dec
das
int3
jmp
add
or
insl
clc
sub
iret
adc
add
imul
inc
jg
inc
test
push
test
inc
cltd
add
rcll
or
repz
push
cltd
stos
mov
push
push
lahf
pop
icebp
je
jg
pushl
sub
mov
sbb
jge
jmp
xchg
pop
rclb
stos
push
xchg
popa
je
push
scas
xchg
xlat
lods
mov
adc
fwait
in
je
adc
pop
push
js
lahf
aad
sbb
sbb
push
or
mov
popf
jmp
pop
fwait
jno
lahf
das
and
loopne
repz
sub
loope
arpl
arpl
psllw
sbb
push
frstor
idivl
out
stc
sahf
bound
and
addr16
jl
out
jle
fimuls
pop
clc
ss
out
aam
imul
out
push
dec
adcb
xor
sahf
cmp
sub
xor
mov
xor
loopne
jae
scas
imul
mov
pop
cmp
mov
jo
inc
jecxz
in
mov
jnp
jo
test
mov
xchg
xchg
xchg
push
xchg
lcall
rolb
imul
insl
in
fwait
sub
jno
mov
jne
adc
cmp
repnz
daa
inc
cmpb
sub
or
call
jmp
sub
jo
clc
xchg
pop
mov
fiaddl
push
push
sub
fidivl
xchg
std
inc
mov
pop
fwait
leave
and
jo
inc
inc
jp
xchg
or
cmp
cld
insl
int3
mov
lock
mov
jne
xchg
jg
xchg
push
in
rcll
out
roll
int
ret
inc
mov
jb
clc
sbb
cmp
or
cmpsl
jle
daa
mov
dec
andl
xchg
jl
pop
sbb
sbb
jecxz
aas
inc
mov
test
test
or
inc
jno
orb
js
pop
cmp
jmp
push
test
inc
imul
and
out
dec
cmpsl
sub
js
mov
pop
cli
mov
add
xchg
push
dec
dec
jnp
es
mov
stc
hlt
in
mov
mov
rcll
js
jns
outsl
xchg
test
fs
loop
fcompl
addr16
sarl
mov
addl
pop
mov
cmp
xchg
stc
out
ds
dec
dec
and
icebp
pop
stos
int
faddp
push
mov
lods
es
fistps
stos
aaa
dec
pop
cmp
dec
jge
filds
dec
js
call
popf
dec
sbb
cmp
pusha
js
mov
ror
jmp
or
sub
sub
loop
mov
fildl
stc
and
push
jmp
fsubr
jns
outsb
sub
ret
addl
ror
rcll
ljmp
movsb
cmp
mov
rorl
bound
outsb
sbb
add
sub
rolb
sub
push
popl
or
lds
call
mov
mov
lds
push
dec
imul
sub
loop
xchg
loope
ret
daa
js
jmp
out
movsl
pop
jae
cmpsl
mov
pushl
adc
pusha
aad
jns
mov
iret
pop
rorl
sbb
enter
xor
or
insl
cmp
out
fwait
jl
mov
or
fwait
xor
pop
pop
xchg
fs
cmc
jle
push
pop
cmpsl
cmc
mov
inc
lahf
adc
dec
xchg
push
inc
sbb
fsubrs
mov
std
jnp
jge
mov
sub
loope
orl
stc
mov
mov
xchg
pop
pop
subb
add
xchg
cmp
pop
sbb
je
mov
addr16
test
jmp
lods
int3
cmpl
and
call
jbe
mov
cmp
mov
pop
stc
mov
stos
rcrl
imul
or
cmp
dec
sub
cltd
add
pop
shrb
inc
mov
cmp
insl
sbb
add
imul
pop
idivb
shrl
sub
adc
cli
xor
mov
or
push
test
sbb
aaa
pop
sbb
sub
arpl
sbb
push
das
mov
dec
mov
dec
clc
pushf
push
cmp
add
mov
imul
adc
aas
or
repnz
rcr
cli
mov
cltd
imul
outsl
cmp
stos
mov
mov
push
jp
out
inc
jbe
loope
arpl
push
loope
mov
shlb
out
adc
out
dec
lahf
orl
fdivs
jmp
mov
aas
negw
and
push
ljmp
add
mov
jae
bound
push
gs
pmulhuw
sbb
movsb
lret
cmp
push
push
leave
in
scas
push
insb
ljmp
jp
adc
and
dec
pop
outsb
imul
push
testb
mov
insb
mov
and
imul
leave
mov
call
js
cwtl
and
jns
aam
adc
nop
push
adcb
adc
xor
test
sbb
jnp
movsb
ljmp
or
jmp
push
arpl
xor
xor
roll
ror
inc
push
addr16
add
mov
inc
sub
xchg
enter
adc
fmuls
iret
orb
sarl
lds
addl
fucomp
and
clc
mov
xor
xchg
mov
repz
mov
dec
hlt
insb
cmp
popa
xchg
daa
enter
bound
dec
bound
lea
push
sub
xchg
or
repz
out
or
jbe
int
rcl
aam
stc
std
pop
sub
js
mov
repnz
add
movsl
ja
fisubrl
jge
aad
push
xor
pop
pop
jo
lock
mov
push
pusha
pop
push
aaa
dec
mov
add
xchg
icebp
xorl
pop
nop
xor
aas
dec
shll
xchg
adcb
mov
mov
repnz
sub
mov
mov
jae
hlt
sbb
cmpsb
repz
mov
xor
mov
jae
sbb
sub
or
setne
fs
and
push
int3
push
lret
outsl
popf
jo
cwtl
xchg
xor
cmp
jnp
add
xchg
in
push
aas
xchg
mov
stos
std
lcall
sbb
out
jp
cmp
mov
push
cmpsb
cli
loop
sti
jl
sbbb
sbb
sahf
xchg
mov
dec
push
mov
aam
loope
or
pop
insl
push
les
call
xchg
xor
int
push
mov
xchg
cmpl
inc
std
sahf
pop
movsb
into
add
jns
jecxz
cmp
shlb
mov
sub
insb
push
popa
loop
das
pop
repnz
and
iret
or
and
lret
scas
adc
xorl
push
jge
aaa
or
sbb
sti
cmp
aad
pop
push
jae
idivl
push
xchg
add
push
and
pop
pusha
mov
ss
cs
aaa
jge
bound
loop
jbe
andb
lret
push
xor
cwtl
int
cwtl
pop
mov
pop
int3
xchg
push
cmpsb
push
cli
fsubrp
fdivr
mov
cmp
and
int3
sbb
pop
dec
popf
or
dec
mov
mov
mov
pop
jle
in
pusha
mov
sbb
out
jbe
inc
rcrb
push
movsb
gs
sub
dec
or
stos
xlat
pop
rcrb
mov
repz
push
insl
cmp
out
das
fiaddl
xchg
aas
aas
xchg
sbb
sbb
push
pop
add
mov
enter
enter
mov
jb
adc
rcrl
sub
aas
data16
divb
pop
push
or
mov
mov
cltd
inc
dec
fnstcw
or
or
push
push
jo
fidivrs
and
xchg
push
inc
xchg
insb
or
mov
jnp
sbb
fs
aam
inc
outsl
lds
ja
xlat
addr16
dec
cli
inc
jb
inc
inc
xchg
lods
jno
cli
mov
out
xcrypt-ofb
cmpsl
sub
scas
adc
mov
mov
lret
daa
rcrl
addr16
cwtl
xor
aas
pop
push
mov
pop
arpl
and
pop
movsb
sub
rorl
pusha
rcrb
dec
lods
bound
les
mov
mov
movb
ljmp
xchg
dec
cmp
push
cmp
push
movsb
jmp
mov
fdivs
jbe
mov
lods
outsb
popf
lods
pusha
add
pop
jmp
lcall
inc
jb
imul
push
mov
jle
push
stos
xor
xchg
or
pop
sti
insb
aaa
xor
aam
inc
inc
fimuls
dec
mov
test
subl
fcom
mov
xor
sbb
fidivs
sub
mov
hlt
xchg
hlt
xor
iret
out
fiaddl
shl
gs
sbb
insb
cmp
outsl
sti
and
mov
stc
jb
stc
pop
fmuls
push
or
cs
cmp
jb
fiaddl
lock
xor
sarl
fdivr
mov
movsb
dec
ljmp
jmp
adc
mov
nop
in
xlat
cli
jnp
insl
and
sub
mov
mov
pop
mov
std
mov
insl
scas
mov
xchg
mov
cmc
stos
scas
mov
cmc
out
mov
into
aam
scas
jb
movsb
xchg
sbb
loop
mov
les
jne
lock
scas
movsbl
aas
pop
adc
push
xchg
lods
mov
or
dec
adc
insl
cli
lods
xchg
ljmp
pop
nop
fucomip
inc
sub
cmp
pop
shlb
lcall
and
xor
jbe
dec
and
cmp
inc
adc
or
enter
cmp
jmp
jmp
arpl
jecxz
push
je
icebp
cmp
dec
mov
out
filds
pop
pop
jmp
stos
outsb
fmul
out
ljmp
sahf
xchg
leave
jle
inc
pop
mov
mov
mov
fs
and
sub
lea
or
xlat
xor
push
pusha
gs
es
jg
cmc
jge
xchg
mov
lds
jb
cmpsb
and
negb
mov
aaa
aaa
cmp
imul
cmp
divl
ret
mov
iret
sarl
cs
aas
xlat
je
inc
inc
push
pop
pop
push
adc
jg
xchg
into
mov
xchg
testl
hlt
ds
imul
popf
and
rorb
shl
imul
lcall
in
pop
aaa
xchg
imul
fists
and
xlat
dec
dec
mov
bound
dec
jne
cwtl
inc
inc
mov
jae
lea
cmpb
adc
xchg
mov
outsl
mov
ljmp
imul
jns
icebp
sbb
sub
mov
in
xor
and
mov
or
test
push
mov
sbbb
subb
cmpsl
imulb
out
mov
cmpsb
xchg
bound
sbb
or
sbbl
mov
mov
pop
add
or
xchg
add
mov
int3
loope
stos
icebp
fs
fisttps
loopne
ss
mov
in
and
cmc
out
or
mov
xor
cmc
sarl
and
sti
cmp
mov
xlat
mov
js
in
xchg
mov
sti
stos
push
dec
push
test
inc
js
ror
and
ret
mov
push
sahf
sahf
push
movsb
aam
int3
enter
xchg
push
xchg
arpl
sbb
mov
xor
out
mov
scas
jp
faddl
mov
dec
jecxz
scas
sbb
jae
imul
or
jbe
sub
xchg
sbb
jae
rorb
push
adc
icebp
sti
dec
add
or
pusha
mov
stos
mov
mov
daa
mov
frstor
or
xchg
sti
add
in
call
repz
daa
xor
xor
xchg
loopne
movsb
xor
imul
orl
adc
xchg
out
shufps
loop
inc
xor
lret
push
mov
or
push
imul
shrl
xchg
notl
adcb
pop
loop
or
push
push
mov
fdivrl
adc
in
dec
icebp
adc
push
std
fnstenv
leave
and
push
adc
or
pop
mov
lret
xor
rcl
sbbl
push
aad
rcrl
adc
ds
and
mov
repz
push
inc
and
test
or
lret
xchg
xor
daa
dec
jp
cmp
pop
jne
cld
into
inc
add
scas
repz
mov
pop
cli
mov
push
popa
cmpsl
popf
mov
loopne
jne
cmpsb
arpl
mov
loopne
repz
stos
jge
sahf
push
cmp
bound
sub
mov
dec
call
jp
out
mov
lcall
fidivrs
aad
dec
adc
xchg
or
pop
cli
shrb
int3
in
cmp
outsb
cmc
or
sbb
fcmovne
mov
cmp
and
push
dec
int
or
lea
mov
push
mov
fisubrl
sti
mov
adc
inc
adcl
adc
stc
push
stos
das
mov
jbe
insl
mov
fimuls
add
dec
loope
daa
sub
imul
dec
sbb
in
jo
xchg
cmpsl
inc
sbb
mov
mov
int
mov
outsb
mov
popf
popa
xor
imul
pop
or
jp
or
cwtl
mov
push
jnp
in
fnstenv
pop
mov
dec
jl
jmp
sub
sahf
lahf
cmp
jbe
push
aaa
adc
fdiv
enter
in
rcrl
fsubrs
and
ja
test
mov
or
popa
adc
adcl
mov
out
and
dec
push
pop
xchg
sti
ficoml
jle
dec
je
cmp
icebp
and
test
or
enter
aam
and
push
inc
mov
pop
je
mov
jg
shll
jae
add
fisubrs
and
subb
dec
mov
xchg
cs
ficoms
inc
push
andl
stc
mov
pushf
xchg
imulb
je
rcll
mov
dec
xor
mov
fistps
sub
mov
xor
push
dec
adc
pop
jmp
mov
sti
test
mov
adc
and
sub
jl
inc
push
test
divb
pop
pop
inc
pop
sbb
insb
sub
add
and
hlt
pop
mov
jle
das
dec
mov
cmp
mov
push
xor
pop
aas
mov
ja
shr
sbb
jmp
loop
xor
subl
or
fldl
psrld
leave
aad
cwtl
lahf
ret
mov
aas
es
xchg
dec
dec
mov
call
mov
mov
xlat
xor
add
sahf
and
notl
mov
xlat
mov
adc
in
jge
in
lcall
add
add
cmp
ljmp
jmp
call
pop
mov
sbb
jne
push
mov
cli
adc
dec
je
es
dec
addl
or
add
inc
fistps
push
lods
imul
ds
cmpl
pop
adc
shll
fcomp
test
in
jmp
jg
out
and
jno
xor
lods
push
stc
jb
jne
mov
arpl
sub
xchg
and
xchg
dec
test
xchg
lods
inc
lcall
adc
call
sbb
or
lods
fcmovnb
adc
lods
and
rcr
out
int
arpl
pop
sbb
and
rol
sub
imul
pop
shrb
fiadds
jae
pop
das
xchg
les
enter
pop
data16
and
add
add
xor
into
daa
idivb
mov
adc
ret
imul
jge
syscall
push
xor
jp
or
inc
mov
xor
dec
lret
mov
cmp
jecxz
jb
mov
andb
jno
nop
push
cmp
mov
push
out
test
iret
sti
sub
lods
pop
out
je
dec
inc
out
nop
push
cld
mov
out
add
pusha
sbb
xor
test
in
jge
push
sub
in
imul
cmp
lock
add
cwtl
jge
pusha
int
outsl
call
xor
add
dec
test
aaa
nop
fidivrl
or
sahf
aam
xchg
mov
roll
in
cmp
mov
xchg
pop
pop
sub
or
xor
xchg
or
and
addr16
dec
pop
out
jge
xchg
icebp
push
outsl
mov
in
xchg
or
push
adc
mov
mov
fcmovnbe
dec
mov
inc
bound
ds
orb
push
enter
shlb
xchg
cmp
mov
in
scas
into
pop
and
inc
xor
std
cmp
fildl
aaa
mov
mov
mov
adc
cwtl
cs
jne
sbb
xor
in
fisubs
inc
jp
addl
orl
or
xor
cmpsl
in
ret
pop
inc
cmp
bound
lretw
jl
js
faddl
jns
xor
mov
in
lcall
imul
push
mov
sub
and
mov
repnz
mov
mov
cmpsb
std
loop
aaa
xor
fadds
cmp
clc
push
jnp
out
xchg
loopne
push
adc
js
sub
xchg
rorb
sbb
outsb
dec
jle
and
and
cmp
lret
mov
push
lret
or
rcl
cmp
lods
ret
xchg
add
mov
inc
ret
add
xchg
add
roll
cltd
push
push
fisubrl
popa
ljmp
or
jo
mov
insb
rolb
lods
jmp
adc
cli
inc
icebp
and
xchg
ja
fnsave
dec
fcomip
clc
leave
xchg
mov
fdiv
shrb
movsl
cmp
mov
lds
push
fs
pop
add
push
or
push
lret
out
jmp
adc
pop
subb
movsb
dec
pushf
dec
push
mov
mov
jp
xchg
pop
cmp
push
jae
push
inc
orl
mov
jbe
xor
les
and
jb
adc
scas
inc
cld
mov
cmpb
andl
int3
pushf
mov
dec
ljmp
cmp
push
xor
and
mov
fcmovnbe
lret
outsl
push
push
insl
and
aam
cmp
lret
xchg
mov
imul
test
cmpsb
adc
ds
mulb
out
sub
fistps
push
insl
cmc
orb
xchg
push
shr
aad
rclb
out
mov
pop
test
pop
fs
fsubrp
ret
fisubrs
push
push
jl
lock
mov
call
xor
into
mov
sub
mov
push
push
daa
sub
inc
sbb
dec
hlt
and
dec
inc
into
push
test
lea
out
and
push
sbb
adc
lea
push
mov
sbb
and
cld
xor
xorb
out
testb
push
mov
adcb
popa
js
mov
fwait
icebp
adc
sti
idivl
push
lret
jp
enter
mov
popf
adc
fstpt
sbb
mov
xor
cmpsl
xchg
bound
les
addr16
fcoml
sbb
gs
sarb
sub
pop
dec
mov
fdivl
bound
cmc
out
mov
out
jge
test
sbb
dec
mov
adcl
ror
mov
xlat
xchg
clc
repz
in
outsb
sti
fcom
sub
xlat
jge
in
and
ret
enter
cli
and
into
leave
pop
scas
mov
push
mov
cmp
mov
ds
pop
xchg
mov
mov
pop
xchg
out
jle
push
ljmp
dec
loope
in
and
pop
loope
adc
xchg
pop
arpl
jle
out
or
sub
mov
cmpsl
stc
fcomp
aas
xchg
fsubrs
mov
rorl
mov
lahf
jno
pop
xlat
insb
fstl
jl
cs
lock
addr16
or
pop
js
nop
aas
out
mov
xchg
mov
std
rep
xor
and
cmp
shrl
call
ret
cltd
xchg
or
xchg
js
xor
push
jecxz
call
rclb
push
or
nop
xchg
cwtl
sti
mov
pop
loope
fcomip
sbb
push
inc
xor
stos
mov
push
pop
and
sub
xchg
pushf
setne
mov
jns
jg
leave
movl
sub
push
lahf
sub
testb
mov
lret
jns
addr16
subl
in
adc
inc
sbb
test
stos
jmp
sbb
shr
mov
push
push
fs
mov
inc
ljmp
int
mov
and
aad
xlat
nop
mov
idivb
stos
scas
stos
dec
shrb
and
cmovs
loop
cmp
fcompl
lahf
jle
jle
mov
sbbb
cli
add
jmp
add
iret
mov
divb
pop
outsb
inc
dec
adcb
icebp
mov
nopl
sub
jge
add
xor
or
fs
cmp
pop
adc
mov
clc
insl
lods
rcr
push
cmp
insb
enter
adc
daa
call
mov
loopne
jbe
or
push
jne
mov
test
addr16
or
mov
insl
arpl
or
rclb
dec
adc
es
add
adc
les
lock
popf
pop
inc
push
in
mov
jecxz
das
mov
aad
ss
aas
mov
test
inc
mov
cmpsb
mov
adc
test
sbb
adc
cmp
fnsave
mov
std
jg
fcmovne
loop
out
fwait
lods
dec
out
sbb
push
imul
push
cmpsb
mov
test
jecxz
loop
jbe
fcompl
les
inc
outsl
pop
xor
loopne
cmp
mov
push
inc
cmovp
xchg
push
push
cmpsb
fnstcw
das
push
and
xor
adc
xchg
xchg
jo
mov
xchg
cmpsb
mov
xchg
mov
push
popa
dec
dec
mov
lock
fists
repnz
cwtl
xor
jle
aam
aam
mov
xor
fs
cmp
imul
adc
hlt
sbb
movb
ds
add
test
stos
xchg
or
pop
aad
test
in
repnz
out
xlat
fcoms
push
inc
data16
xchg
pop
fmull
in
pop
loope
nop
pmaxub
xlat
sbb
push
ss
ja
add
lret
imul
hlt
imul
xchg
movsb
cmp
inc
out
jmp
cmp
mov
lret
adc
data16
test
jnp
dec
loop
push
jo
movsl
sub
cmp
sub
cmp
mov
fnsetpm(287
jge
cmpsb
xchg
cmp
lods
aad
js
leave
rorb
aam
adc
test
mov
testl
cltd
push
push
and
stos
xchg
dec
cmp
push
in
out
loopne
sbb
pop
gs
jmp
fcmove
jmp
adc
mov
je
loope
sub
xchg
fadds
mov
insl
mov
jle
scas
lods
or
add
imul
xor
xor
jmp
aad
out
mov
xor
pop
xchg
mov
outsl
loopne
decl
pop
cld
sbb
fisubrl
mov
in
pop
fnstcw
pop
roll
mov
mov
xchg
iret
and
xchg
push
mov
lcall
mov
push
lea
cmp
jg
rorb
ficoms
xchg
dec
jp
mov
dec
push
fistps
iret
sar
ret
or
jnp
je
movl
or
shrl
xchg
ja
fnsave
inc
cmp
push
arpl
inc
je
xor
outsb
test
outsl
mov
dec
ret
outsl
push
loope
sbb
mov
int3
aas
lcall
sbb
frstor
cwtl
lods
push
fwait
pmaxub
add
cmp
mov
sbb
ss
incl
push
stc
inc
and
xor
pushf
lret
subl
int
out
jae
ror
dec
cmp
out
lea
jbe
dec
ret
push
mov
mov
or
aam
xchg
int
in
inc
aas
xchg
jae
sahf
xchg
sub
dec
mov
and
cli
clc
push
std
lea
nop
pushf
test
pop
lods
add
cwtl
fucomi
and
lds
cmp
add
movsl
add
pop
xor
jg
mov
adc
mov
test
sahf
fmull
sbb
in
adc
sub
push
push
or
xchg
lea
xor
mov
shll
ret
adc
adc
sub
or
inc
lea
cmp
es
sti
pushf
mov
loopne
addl
ss
test
ja
xor
ljmp
xor
popa
dec
push
ret
cmpsl
imul
das
mov
fisttps
fstps
std
cmp
int
inc
or
jg
sub
mov
movsb
sub
and
lods
popf
mov
dec
enter
xlat
pop
mov
pop
outsl
or
sbb
push
pop
mov
arpl
xor
rol
or
xorl
inc
jp
faddl
dec
and
out
mov
imul
mov
dec
jb
daa
fstpt
push
fucompp
lock
sbbl
mov
stos
xchg
and
stos
insb
xchg
repz
jo
iret
mov
cmp
sahf
js
mov
cmp
and
push
test
ret
inc
or
jmp
jmp
or
jne
adc
xor
jo
xor
mov
jg
adc
mov
popa
mov
jbe
dec
and
addr16
jl
sub
insb
xchg
inc
aam
or
jecxz
mov
inc
scas
push
nop
sbb
cld
cs
sbb
aad
arpl
cli
mov
add
cmp
ret
sbb
fstpt
gs
fldcw
test
push
jae
sahf
jp
xor
jnp
lds
clc
dec
inc
mov
mov
add
xchg
jecxz
loop
std
push
dec
sbb
fs
in
or
push
or
pop
add
lock
cmp
push
or
mov
test
jne
shrl
cmp
dec
or
mov
mov
dec
push
addr16
mov
cltd
faddl
inc
out
es
dec
outsl
xor
mov
jmp
aaa
inc
test
mov
scas
mov
mov
cmp
adcl
das
outsl
test
movsb
add
cs
fwait
push
test
in
gs
xlat
std
inc
jne
jns
push
arpl
ficompl
mov
lret
mov
int3
add
fs
lods
adc
sub
jo
jae
add
pop
lods
cmp
cmp
adc
stc
sub
xchg
cmc
mov
xchg
sahf
mov
clc
xchg
dec
arpl
pushf
loop
movsl
lcall
loope
enter
ss
jge
dec
push
test
jne
adc
and
push
sbb
jns
ljmp
push
call
and
xor
or
mov
dec
test
imul
int
cmpsl
jns
dec
loopne
or
pop
sbb
push
addr16
pop
dec
jns
mov
or
or
popf
aad
sahf
pop
loop
sbb
popa
inc
cmpsb
or
mov
adc
int3
int
dec
fsts
popf
pop
pop
xor
ret
sub
pop
out
mov
inc
and
packssdw
mov
xor
ja
fiadds
xchg
xchg
das
push
dec
jle
inc
mov
bound
mov
fcmovnb
push
push
frstor
sbb
add
loope
mov
mov
es
out
ficoms
imul
mov
xchg
inc
es
mov
repnz
decl
aam
jns
fldt
aad
sbb
outsl
sbb
cmp
stos
mov
cmp
inc
jb
idivb
cmp
pusha
outsl
and
lcall
cmp
inc
inc
sub
arpl
push
mov
push
rorb
push
and
mov
nop
loop
negb
iret
call
xor
cmp
cltd
cli
push
push
call
inc
sti
dec
xor
into
sbb
fs
cmp
ljmp
incl
jl
xchg
push
jns
pop
push
ja
jle
and
out
aam
imul
call
lds
mov
loop
popa
dec
dec
mov
pusha
lcall
and
lret
pop
fistpll
or
jno
pushf
pushl
sub
mov
push
mov
and
div
sbb
cs
xor
jecxz
ret
test
in
pop
push
aad
inc
and
stos
push
xor
shlb
out
mov
add
stos
outsl
xchg
xor
das
in
mov
stc
shll
lods
mov
outsl
test
stos
sub
xor
lods
cs
jo
xchg
outsb
ret
inc
rcll
shrb
ja
jae
in
mov
ret
push
cmc
xchg
dec
cmp
mov
aaa
pop
std
sub
mov
xchg
sub
mov
loope
xorl
enter
cmp
xor
inc
and
mov
fs
and
fsubrl
sbb
je
jmp
arpl
xchg
mov
test
popa
mov
std
xchg
outsb
fwait
into
ljmp
add
in
hlt
push
xlat
lahf
out
add
push
dec
or
add
sbb
cwtl
fistps
aas
or
sub
add
add
push
cwtl
push
hlt
das
mov
scas
inc
rcrb
jp
adc
mov
std
js
xor
jmp
and
bound
pop
xchg
je
xchg
mov
jmp
test
adc
add
xchg
loope
add
jmp
pop
add
mov
popf
or
daa
sub
mov
mov
bound
nop
pop
js
int3
jb
repnz
mov
pop
adc
mov
inc
jbe
scas
loope
leave
cwtl
jmp
ljmp
and
xchg
stos
and
dec
pop
mov
push
loop
das
push
stos
jecxz
xor
cmpsl
pop
icebp
sbb
int
insl
mov
in
pushl
cmp
shll
loop
cltd
mov
push
xchg
inc
push
xor
hlt
outsl
pusha
mov
outsl
mov
hlt
in
fmulp
mov
add
cli
loop
insb
aam
stc
mov
in
inc
xor
xchg
mov
pop
push
jg
stc
int
into
push
imul
loopne
iret
cmc
xchg
hlt
jge
sti
ret
movsl
mov
lahf
das
les
test
push
test
into
sbb
and
scas
xor
push
iret
loop
fsin
lods
mov
aaa
xchg
push
push
push
daa
aas
lock
lock
push
pop
je
std
jnp
daa
cmpsl
pop
rcrb
shlb
loopne
jmp
jl
shlb
mov
imul
in
bound
and
mov
rcll
pop
inc
into
xlat
xchg
xor
cmpsb
or
ret
cwtl
xchg
sbb
fidivs
cmp
and
out
mov
ss
xchg
jns
and
or
add
add
rclb
push
stos
or
pushf
inc
loope
push
and
lret
into
cwtl
and
lods
and
or
pusha
push
out
ss
fsubrp
jmp
mov
enter
xchg
xor
xchg
jne
pop
int
sub
lcall
lahf
pop
push
and
and
jo
popa
popf
shrb
adc
popf
cmpsb
leave
shrb
mov
jge
enter
fiaddl
xor
adc
mov
sahf
pop
adc
and
pop
frstor
xor
dec
mov
push
xor
xchg
jb
mov
stos
sub
stos
int
mov
ret
in
dec
xchg
sbb
ljmp
mov
enter
and
xor
rolb
test
scas
mov
sbb
lock
pop
in
pushf
xor
aam
lock
cmp
aad
test
adc
imul
jbe
inc
jmp
sub
divb
rcll
xor
add
lcall
sub
inc
push
popf
inc
and
mov
cli
xchg
adc
lock
loope
jle
out
jae
inc
sub
sub
mov
ljmp
aam
insb
dec
lea
push
rorl
icebp
inc
clc
fsubr
inc
push
cmp
movb
aas
mov
inc
inc
imul
sub
leave
cltd
fwait
jmp
cmc
mov
or
mov
out
ficompl
mov
sub
repz
lods
jmp
pmaxub
mov
daa
pop
rcrb
pop
ljmp
sub
loop
xchg
rorl
push
xor
xorl
outsb
loope
mov
sbb
mov
dec
out
ss
and
mov
sub
outsb
jns
mov
xchg
pop
es
pop
das
pushf
pop
dec
ss
add
and
dec
add
nop
stos
or
pop
xlat
lea
push
cmp
mov
mov
out
test
pop
mov
iret
xor
add
inc
mov
out
pop
and
gs
out
sub
xchg
fidivs
and
mov
mov
lahf
add
out
ja
je
out
dec
add
sub
sbb
std
ljmp
iret
and
dec
into
out
and
sbb
fmuls
sbb
outsb
cmp
push
daa
pusha
push
mov
je
xor
lds
inc
jbe
and
hlt
mov
daa
cmp
rorl
sub
es
xor
out
push
sbb
jne
pop
addr16
push
jp
jbe
cmpsb
mov
dec
push
in
push
cld
mov
xlat
loope
jg
cmp
js
mov
popf
pop
sbb
incb
jge
dec
dec
mov
in
fs
orl
jbe
imul
into
xchg
add
test
xchg
lret
inc
xlat
rcrl
lret
jle
decl
out
sbb
push
mov
in
cltd
std
and
lret
dec
inc
addb
in
push
add
pop
int
or
push
adc
mov
pop
mov
adc
je
cmp
and
ss
mov
push
inc
shlb
xor
sbb
mov
idivb
sub
mov
fs
cmc
jmp
mov
mov
xor
sbb
inc
xchg
cmp
or
pop
scas
aaa
out
outsl
dec
jge
mov
es
adc
pop
in
and
mov
cmp
adc
or
dec
jmp
adc
sub
cmpsb
loope
sub
sub
out
cmp
jbe
dec
jae
ss
xchg
cmp
imul
aaa
cmp
decl
in
ffreep
nop
jmp
outsb
aaa
xchg
cmp
and
in
pop
pop
mov
sbbl
mov
cmp
inc
pusha
adc
popf
shr
push
hlt
xchg
les
adc
cmpsb
jle
ret
mov
dec
mov
ret
insl
sub
mov
pop
js
daa
sub
cwtl
pop
inc
add
lret
insl
mov
in
dec
xor
scas
loopne,pn
aad
cmp
sbb
gs
lds
lods
mov
cmp
jp
bound
cltd
ja
cld
pop
popa
pop
dec
imul
jns
popa
cmp
mov
dec
out
xlat
add
fnsave
and
pop
adcl
nop
mov
repz
add
jmp
nop
or
ficoms
or
sarl
movsl
jnp
mov
sbb
jle
adc
mov
test
sbb
addr16
jbe
lock
dec
pop
mov
jo
imulb
and
mov
jne
pop
mov
repnz
in
aam
or
loopne
iret
loope
and
pop
cmpsl
dec
lea
inc
std
push
jmp
loop
push
mov
das
inc
int
push
test
fisubrs
testl
imull
mov
pushf
sbb
out
pop
or
lret
and
dec
mov
push
pop
mov
sub
inc
enter
popf
jmp
add
mov
lock
mov
jl
in
lcall
pop
or
adc
lahf
shl
pop
inc
loopne
pop
lret
lds
and
test
icebp
mov
fsubr
les
cmp
push
xchg
pop
arpl
adc
pushf
mov
xor
jmp
daa
aad
mov
adc
xchg
jno
add
rcll
pop
push
add
clc
rclb
jbe
jge
lahf
rep
mov
add
mov
pop
sub
ljmp
aaa
add
jbe
sub
jecxz
add
dec
sbb
sub
popa
aad
cmp
idivb
add
cmpsl
xor
es
imull
es
jl
add
in
add
inc
ss
mov
pop
out
and
inc
xor
and
sub
mov
cmpsl
cmpsl
call
and
out
jae
fstpl
pusha
adc
or
lock
adc
and
scas
ficoms
or
popa
mov
xchg
in
ss
add
dec
in
movsb
test
mov
xchg
mov
lret
cmpsb
push
or
dec
xchg
mov
inc
ljmp
sbb
cmpsb
dec
das
adc
or
aam
stos
xor
fdivrl
xchg
fcoms
push
outsb
add
dec
and
pop
pop
jecxz
jecxz
and
sbb
adc
shll
rcrl
cmp
es
add
nop
xlat
push
arpl
aad
arpl
and
inc
popa
mov
int
ret
js
mov
push
cmpl
data16
mov
aad
add
lcall
sub
fmul
in
adc
or
stc
xor
repnz
mov
cltd
inc
movsb
out
lret
in
jmp
pop
popf
lahf
mov
das
add
inc
insb
pop
xchg
cltd
adc
addr16
pushf
cmpsb
mov
loop
sbb
push
pop
shr
jl
daa
xor
in
mov
and
jge,pn
xchg
mov
mov
pop
test
mov
and
in
andl
in
fbstp
xchg
mov
jmp
clc
and
cmp
mov
xlat
scas
cmp
and
out
ffreep
movl
ss
cwtl
and
loope
ret
lea
sbb
cmp
dec
pop
jno
mov
popf
or
jbe
add
test
jge
add
mov
jg
and
out
ljmp
jp
pop
imul
cwtl
jb
mov
pop
ds
inc
jae
fs
mov
mov
pop
cltd
push
xchg
aam
pop
and
xchg
push
dec
mov
xlat
clc
jecxz
stos
cmp
insb
mov
xor
inc
xchg
bound
sbb
push
xor
fisubs
adc
sub
inc
aas
fidivrs
dec
pop
and
jae
xor
cmp
jbe
scas
cmp
lods
dec
and
push
addr16
int3
bound
cmp
ds
sbb
push
mov
sub
push
xor
sub
cld
jg
jno
mov
fwait
xchg
repz
daa
lret
jp
sub
jge
pop
outsl
nop
add
mov
jmp
mov
cmp
xchg
or
movsl
add
loopne
pop
jl
scas
xchg
sarb
cmp
cmp
stos
push
stos
test
sub
repnz
cmp
sub
cltd
dec
nop
dec
lahf
je
jne
pop
xchg
adc
pop
pop
push
push
stos
dec
add
ds
or
jbe
orl
iret
stc
sub
mov
push
mov
xchg
sarl
or
mov
rorb
xor
insb
repz
adc
adcb
push
ss
and
gs
pop
xchg
adc
fbstp
imul
add
sub
mov
jl
jmp
leave
inc
and
addr16
push
cmp
jmp
js
pop
cmp
mov
push
add
sub
icebp
loope
jbe
pop
je
or
lret
in
mov
mov
sti
cmp
adcb
xorb
sub
mov
sahf
mov
sbb
and
out
jne
or
cmp
and
pop
mov
lds
in
stos
mov
call
pushf
dec
push
and
outsb
add
insb
adc
int3
xor
dec
mov
add
mov
or
mov
fsubrs
adc
inc
loop
stc
adc
xchg
xchg
cmp
lea
xchg
sub
push
stc
mov
pop
or
push
dec
pop
fwait
add
addr16
and
in
loopne
fstl
clc
push
repnz
pop
jecxz
mov
je
xor
aad
mov
xorl
inc
dec
sub
imul
pushl
add
out
test
xor
dec
cmc
jo
es
mov
mov
inc
mov
xchg
bound
mov
jns
sbb
clc
div
lcall
stc
jmp
dec
shlb
adc
xchg
push
jns
push
mov
cmpsb
cmp
test
daa
repz
les
add
and
std
out
mov
jbe
or
dec
mov
adc
push
outsl
lods
push
fcompp
dec
lahf
jne
fistpl
test
mov
jae
test
roll
ds
lret
daa
pop
fldl
dec
fwait
push
insb
push
dec
xchg
lret
push
js
mov
scas
scas
int
popa
cltd
mov
add
in
jno
push
cs
clc
inc
ss
and
fimuls
xchg
adc
xchg
dec
mov
in
mov
push
mov
jb
clc
pop
mov
aad
jbe
and
incl
je
imul
in
mov
fldenv
in
mov
jl
hlt
test
fdivrl
int3
pushf
dec
gs
pop
mov
cmp
lcall
dec
les
loope
pop
out
pop
sub
loopne
ds
sub
lcall
in
incl
push
pop
test
dec
pop
dec
out
lock
jge
sub
xor
push
jmp
dec
pusha
inc
or
inc
pushw
cmp
testl
dec
popf
cmp
outsb
mov
fwait
sarl
outsb
push
jl
jne
and
in
sub
test
test
fs
mov
outsb
test
cli
rorb
xor
sub
cltd
mov
hlt
fstpt
loope
and
bound
int
insb
mov
xor
jbe
xchg
add
lods
xchg
cmp
fsubrs
jle
testl
jg
sahf
pushf
and
mov
mov
mov
add
jge
mov
cmp
rol
mov
imul
pcmpgtw
lock
mov
sbb
add
jl
push
fwait
jle
aam
and
hlt
inc
xchg
jp
nop
jbe
fs
mov
push
or
outsl
cmc
pop
jbe
inc
and
xchg
mov
stc
sbb
adc
pop
fsubs
and
push
call
inc
in
mov
testl
imul
adc
in
imulb
arpl
xor
fnstcw
sub
aaa
fldt
mov
pushf
mov
js
adc
pop
pop
inc
in
mov
outsl
lret
jns
jnp
shlb
adc
stc
and
mov
adc
adc
pusha
jb
popa
xchg
in
mov
icebp
push
or
dec
lret
xor
mov
jbe
push
aas
test
ds
pop
insl
mov
xor
inc
mov
sbb
pop
iret
xor
mov
dec
dec
xorb
inc
sbb
mov
addl
xor
xchg
test
mov
jb
out
inc
push
inc
fistps
xchg
das
leave
mov
lahf
jmpw
shrb
jmp
xchg
jns
fwait
dec
pop
add
dec
in
ret
popf
mul
or
inc
subb
mov
dec
jl
cmp
movsb
jbe
gs
outsl
aaa
jecxz
test
dec
ret
cmc
xchg
inc
adc
lods
xchg
push
inc
pop
sub
add
cld
inc
inc
sbb
cmp
test
xor
out
mov
popa
sbb
cmp
int
ds
imul
push
ret
jne
and
xor
popa
cmp
mov
mov
hlt
jns
into
fcmovb
add
dec
jno
cld
out
lods
sub
hlt
mov
mov
fcomi
daa
lret
in
inc
inc
mov
out
jne
unpcklps
xchg
adc
nop
lea
push
jle
add
sub
mov
cld
push
mov
ret
pushf
lock
or
cmp
adc
scas
lret
dec
sti
mov
lret
mov
stos
rcr
xor
in
push
adc
or
addr16
outsb
mov
cltd
sub
xor
sub
and
pushl
in
jne
aad
lods
fcomi
out
sti
sbbl
aam
imul
cs
mov
lcall
shr
xor
les
sub
sub
sub
jp
enter
sub
dec
repnz
cmp
or
sbb
addr16
cmp
ljmp
outsb
into
and
sub
push
pop
jg
in
pusha
or
and
sbb
xchg
mov
xchg
sub
scas
out
movsb
push
sbb
repz
add
pusha
mov
adc
test
imul
cmpsl
inc
sahf
cmp
rolb
mov
dec
adc
mov
movsb
xchg
loopne
push
js
daa
in
ret
cli
add
or
add
adc
cmp
sahf
arpl
push
cld
lock
enter
sbb
aam
jo
fildl
lea
mov
popf
mulb
ret
fimuls
ret
add
mov
scas
adc
push
es
clc
pop
daa
inc
dec
push
fdivl
fsubl
and
xchg
pop
mov
xor
cmp
xor
xor
sti
test
test
sahf
jne
xor
jae
adc
xchg
push
out
loope
jno
or
fwait
aaa
popa
sar
pop
idiv
pop
scas
arpl
insb
cwtl
sbb
test
cltd
cmp
loopne
cmp
dec
fmuls
add
std
vmwrite
loop
dec
mov
add
dec
xlat
in
pop
cmp
jge
inc
add
roll
push
daa
push
lea
clc
cmc
jl
jmp
addl
imul
mov
sbb
int3
insb
sbb
aam
aad
pop
movsl
cmp
cmp
pop
daa
sub
mov
arpl
jbe
pop
xor
add
lcall
in
sbb
or
push
and
repnz
cmp
test
jne
loope
push
int
xor
xor
loopne
mov
jg
inc
mov
mov
sarb
sbbb
jae
cltd
pop
scas
lahf
adc
sti
hlt
pop
push
push
inc
mov
stos
cmp
aas
cld
cld
xchg
pop
lahf
arpl
icebp
inc
fimuls
out
mov
dec
jbe
iret
repz
mov
popa
or
adc
fnstsw
jae
ds
je
cs
xchg
adc
ljmp
xchg
lods
jp
inc
scas
xchg
pop
sub
pop
push
paddq
in
out
cltd
adc
mov
dec
cld
jae
shrb
xchg
stc
arpl
push
mov
test
jnp
inc
je
xchg
mulb
enter
loopne
pop
in
or
mov
xchg
mov
mov
les
pop
jae
or
and
inc
mov
xchg
push
aaa
adc
or
pushf
fidivl
sbb
and
mov
stos
add
aad
inc
mov
test
mov
mov
mov
cmc
ljmp
mov
js
cli
adc
sahf
scas
js
cmp
pop
lahf
aad
andb
push
ds
iret
xchg
fmulp
pop
outsl
inc
xor
rclb
lods
je
fnsave
fisttps
jnp
aam
es
shll
cmp
mov
addl
loopne
imul
mov
loop,pn
push
imul
je
sarb
loope
sbb
mov
mov
mov
mov
movsl
arpl
sbb
aad
and
push
or
jl
or
clc
dec
cltd
aas
pop
mov
shl
faddl
leave
dec
dec
inc
jae
adc
arpl
inc
mov
scas
push
mov
jbe
cmp
mov
jns
pop
rcrl
mov
iret
jnp
cmp
clc
mov
test
pop
push
aas
cmp
les
jae
mov
and
loop
fdivl
insl
xor
ds
fwait
repnz
inc
adc
mov
push
xor
movsb
mov
lret
mov
cmp
pop
adc
dec
clc
sub
out
test
push
stos
mov
call
jns
add
fidivrs
pop
dec
repnz
inc
xor
fst
sbb
sbb
adcl
dec
test
add
xchg
loop
ret
das
pushf
mov
mov
xchg
lods
stos
js
pop
push
push
inc
out
lcall
push
lcall
int3
aad
or
pusha
add
sahf
cs
jno
test
jae
repnz
mov
aam
xor
or
imul
repz
adc
lock
pop
pop
or
addl
call
rol
push
mov
lcall
cmp
adc
fsubrs
jl
push
data16
ds
cmc
cld
pop
fadds
test
jo
xchg
es
mov
cld
jno
xlat
xorb
xor
inc
pusha
jle
bound
scas
daa
aaa
and
push
xchg
mov
sbb
dec
enter
jmp
adc
ffree
adcb
dec
mov
int3
lret
sbb
ret
push
push
mov
loope
adc
pop
lods
mov
push
fdivrl
fwait
push
daa
sti
enter
movsb
js
shrb
in
mov
sahf
xchg
dec
adc
ret
inc
outsb
pop
cmp
jo
scas
push
jg
cmpsb
push
jbe
jo
mov
xchg
cmpsb
dec
mov
lods
loopne
js
aaa
and
lods
inc
andb
cmp
ljmp
xchg
pop
shl
sub
in
pop
pop
subl
dec
aad
outsl
mov
int
sub
sub
mov
sub
pop
add
out
lret
mov
push
daa
pop
sti
bound
out
or
fisttps
add
push
or
pop
ljmp
jnp
add
testl
and
sbb
sub
int
sub
repz
cli
push
rcr
mov
push
stos
aad
int3
shll
adc
xor
icebp
lock
lahf
xor
mov
jge
mov
sbb
pusha
cmp
xchg
insl
aaa
push
fists
addl
cld
andl
jno
fsubs
shl
lds
sbb
mov
push
push
sahf
aas
sub
and
jmp
push
mov
adc
mov
xor
sub
mov
adc
push
mov
sahf
arpl
fwait
xchg
inc
inc
imul
loopne
movsb
cmp
movsl
into
mov
mov
ficoml
sub
adc
inc
mov
mov
or
mov
nop
cmp
out
sub
dec
scas
mov
and
mov
pop
inc
pop
leave
test
shlb
cmp
lods
adc
push
int
lock
cmp
cld
jae
jmp
mov
xor
insw
push
test
fdiv
ds
shlb
arpl
aam
xlat
test
pop
js
push
lcall
pop
movsb
cmpsb
sub
and
adc
out
popf
mov
les
mov
repnz
mov
xor
pop
dec
xchg
and
adc
sub
ret
addr16
adcl
mov
insb
pop
lahf
cmpsb
sarl
subl
and
xor
and
sub
in
pop
mov
pop
aas
push
inc
xor
das
dec
push
xor
xchg
mov
and
xchg
pusha
out
movsb
out
sub
or
xchg
popf
test
sub
int3
fidivrs
pushf
cwtl
xchg
mov
push
push
call
or
into
and
fwait
mov
add
arpl
or
andl
jns
mov
or
icebp
mov
inc
mov
movsl
test
inc
es
or
test
in
add
es
jmp
and
in
mov
loop
sub
xchg
fwait
inc
mov
jl
jne
outsb
repz
test
nop
dec
and
xor
aaa
mov
mov
aam
loopne
ljmp
sbb
sbb
push
adc
pop
ret
mov
dec
dec
mov
or
jnp
inc
mov
inc
or
jg
loope
fsubs
les
repz
adc
xchg
sub
cmpsl
cmp
pop
outsl
fs
sub
dec
cmp
aam
and
jo
popa
pushf
sub
xchg
and
enter
inc
adc
xchg
loopne
adc
mov
test
stc
imul
sbb
idiv
stos
push
ljmp
pop
sbb
icebp
stc
sub
fwait
pop
or
push
mov
or
mov
scas
pop
inc
lds
push
cmp
mov
sti
hlt
leave
ds
test
xor
jmp
pop
cmpsb
push
repz
cmpl
push
aaa
jne
dec
xchg
or
shlb
dec
popf
clc
jp
int
push
mov
stc
xor
mov
mov
lea
xchg
lods
gs
int
aas
push
or
dec
repnz
mov
pop
into
mov
push
out
in
daa
outsb
sub
mov
fstpl
mov
outsb
inc
lock
dec
fs
int
sbb
pushf
mov
fwait
jecxz
or
jne
in
cltd
nop
in
pop
dec
add
loop
pop
add
push
sbb
cmpsl
inc
mov
push
sbb
push
pop
bound
add
or
jbe
imul
gs
xchg
mov
aam
arpl
in
gs
lods
sub
notb
ljmp
das
jecxz
and
cmc
call
lret
out
fwait
mov
xchg
shlb
outsl
cmp
icebp
arpl
pusha
xor
orl
xchg
inc
dec
lahf
pushf
add
jmp
or
push
aas
cmp
fnstcw
push
hlt
mov
mov
or
repnz
mov
out
shr
js
dec
mov
mov
enter
and
aas
push
into
push
mov
negl
sti
dec
jl
lret
add
cld
sete
xchg
rep
inc
or
mov
inc
jnp
loop
ss
aaa
cmp
fs
call
scas
sbbl
xchg
out
push
test
mov
hlt
lcall
jno
and
ja
cmp
push
inc
sbb
mov
shlb
std
lods
fs
jno
mov
testb
arpl
ss
and
mov
daa
shll
ljmp
leave
push
int
insb
xor
lock
ret
fcomp
es
test
xchg
rorb
jge
std
mov
sub
or
bound
mov
loop
adc
mov
mov
mov
fs
add
shrb
sbb
mov
adc
inc
xor
popf
push
sbb
xchg
js
or
dec
lods
xor
into
lcall
subb
push
inc
and
stos
lcall
pop
clc
cmp
rorb
jecxz
fdivs
xchg
clc
fcmovne
pop
rorl
fs
push
pop
fs
sub
push
loop
inc
lcall
add
xor
repnz
repnz
addr16
xchg
or
std
nopl
addr16
fmull
jbe
and
jl
out
enter
ss
push
insl
mov
sub
stc
push
mov
daa
in
test
add
insb
lahf
sbb
ret
jg
subb
jb
mov
xchg
stc
dec
pop
add
cmpsb
pushw
cs
or
mov
or
call
ja
mov
hlt
cmp
sbb
xor
lods
lcall
out
jmp
arpl
pop
adc
and
push
or
cli
andl
cmpsl
xchg
ficompl
xor
xor
push
imul
loope
or
jge
sti
inc
insb
int3
xchg
andl
mov
iret
mov
push
test
jne
xor
gs
dec
or
rcrb
addr16
and
stos
into
scas
shl
lahf
jg
add
arpl
insl
js
pop
adc
sbb
fisttps
fs
cli
iret
xchg
xor
xchg
mov
jecxz
mov
xchg
lods
jl
cmp
dec
push
cmp
outsl
adc
loope
pop
cwtl
adc
leave
pop
inc
cmp
cmp
pop
mov
jb
add
stos
popf
sahf
xchg
stc
jbe
sbb
push
int3
mov
aas
or
jge
or
pop
imul
fisttps
mov
sub
rcr
int3
inc
mov
push
xchg
lea
or
mov
xchg
xchg
lcall
clc
xchg
data16
pop
and
push
lahf
filds
adc
adc
out
sub
add
pusha
add
mov
push
add
out
jecxz
xor
push
push
ret
out
sbb
pop
push
mov
call
mov
inc
ds
fadds
leave
fisubrs
jge
out
push
ret
iret
sar
mov
xchg
mov
aas
and
xchg
xlat
lds
test
adc
dec
adc
mov
jmp
sub
cmp
xchg
xchg
jg
jb
lcall
and
pusha
roll
loope
out
scas
push
sahf
shlb
cmp
jmp
cmpsb
inc
pop
rol
dec
jecxz
dec
es
dec
sub
subl
in
jne
lea
mulb
mov
jl,pn
jno
in
icebp
fisttpll
lea
add
xor
cli
rorb
xchg
sbb
xor
out
lret
cmp
ret
mov
xor
ret
jbe
xchg
inc
pop
adc
je
and
sub
out
mov
and
enter
shl
pop
xor
addr16
pop
xor
idivb
pushf
adc
je
cmp
push
dec
ds
xor
jg
jbe
add
fwait
or
addr16
pop
xchg
test
repz
push
push
pop
fiaddl
ret
xor
dec
call
xlat
dec
push
jle
push
mov
call
popa
fsubrs
movsb
adc
mov
into
outsl
sbb
dec
sub
cmc
add
inc
sub
mov
mov
cltd
lret
clc
mov
popa
test
mov
js
or
add
pop
xchg
or
jge
mulb
mov
mov
aad
mov
stc
mov
lock
stos
adc
mov
sbb
dec
pop
xor
inc
cmp
movsl
mov
rcr
cmp
add
call
mov
xlat
stos
and
fisttpll
ss
xor
mov
sbb
addr16
fwait
push
mov
iret
and
xor
les
xor
jno
lods
jb
and
ds
jnp
imul
inc
push
add
sbb
pop
daa
aas
xor
movsl
fcoms
mov
ret
adc
andl
mulb
into
jns
in
outsl
icebp
rorl
cmc
mov
cld
fimuls
repz
xor
sub
or
cwtl
push
adc
mov
movsl
pop
xchg
repnz
push
loopne
inc
jo
push
jecxz
sar
aas
jl
sbb
out
sbb
call
sbb
shll
shrl
sahf
test
jno
sbb
inc
loop
ficomps
jecxz
in
push
rolb
jb
or
push
fnsave
imul
lret
scas
cmp
xor
jmp
gs
nop
cmp
and
mov
add
adc
fstps
loope
sbbl
xor
testb
gs
and
loope
aad
xchg
sub
lods
pop
pushf
mov
pushf
ficomps
pop
xor
das
cmp
mov
insl
aam
adcl
int
add
inc
popf
fxch
push
fcomps
pushf
xchg
add
and
in
out
adc
inc
push
leave
sti
mov
or
cmp
adcb
adc
dec
mov
xor
mov
sbb
mov
or
pop
out
adc
pop
inc
nopl
rcr
mov
mov
jmp
jecxz
cwtl
mov
es
les
sbb
or
nop
imul
mov
dec
imul
mov
mov
sbb
mov
sbb
jmp
pop
popf
jle
jle
jnp
adc
lods
inc
sub
nop
jne,pt
lea
push
xchg
sub
mov
mov
enter
sbb
cmp
jns
inc
mov
int
in
lock
sbbl
xor
mov
out
test
cmp
repnz
mov
loopne
mov
cmc
stos
jno
mov
xchg
dec
aaa
dec
cld
push
popf
sbb
aaa
daa
insl
mov
mov
nop
test
enter
inc
cmp
sbb
loop
pop
pop
subb
adc
iret
cli
mov
mov
xor
sahf
js
and
or
sub
mov
add
shrl
sbbb
fildl
stos
into
mov
or
inc
push
jne
std
pushf
insb
ljmp
in
mov
aaa
rol
ja
dec
jg
inc
js
in
mov
and
xor
pop
xor
enter
fcom
adc
mov
loopne,pn
jne,pn
push
bound
xor
add
jp
pop
mov
fadds
aaa
jge
das
push
mov
stc
mov
dec
dec
add
jecxz
sbb
lcall
data16
cmp
mov
repnz
clc
scas
xchg
inc
icebp
cmp
cmp
xchg
sbb
daa
mov
pop
daa
xor
and
pop
mov
out
mov
pop
inc
shlb
and
dec
mov
ss
mov
jnp
adc
push
xor
lea
cwtl
das
and
fs
xor
mov
mov
xor
xchg
aam
lret
popa
push
repz
rcrb
sbb
adcb
std
popf
es
dec
sub
movsl
les
xor
mov
sbb
test
cmp
into
cltd
mov
cmp
sbb
add
push
ficoms
jae,pn
test
mov
mull
mov
add
pop
or
addr16
ret
les
cmp
mov
addb
shll
pushf
out
adc
mov
mov
repz
push
and
push
xchg
lcall
cwtl
xacquire
dec
flds
xchg
es
data16
scas
push
cmp
in
sub
popf
mov
and
dec
cmp
lock
fisubrs
xor
popa
movsb
add
pop
sbb
xor
fnstcw
rep
cmp
add
cld
int3
fstl
add
xlat
adc
lret
js
jp
pop
dec
mov
pinsrw
jecxz
dec
push
inc
es
adc
mov
outsl
popf
js
mov
xor
jl
xchg
sub
pop
icebp
test
sbb
addr16
movsb
imul
aaa
aaa
inc
cltd
arpl
leave
pop
mov
jle
pushf
xor
lret
and
inc
cmc
leave
xchg
gs
pop
sbbl
or
push
sarb
fsubr
aas
loope
movsl
pusha
pushf
jnp
dec
loop
jmp
test
cmpsl
out
push
inc
out
fwait
xchg
fcoml
sub
mov
pop
push
or
jle
mov
sub
pop
dec
sub
sub
xor
jle
mov
imul
fidivs
mov
imul
xor
xor
out
cmp
or
mov
push
je
insl
or
cmp
or
stos
inc
sbb
fcomi
cmp
xchg
push
loop
xor
imul
std
or
mov
xlat
sub
mov
movsb
pop
test
push
pop
stc
push
jno
in
jns
leave
push
or
insb
add
mov
pusha
out
push
or
sub
jge
sbb
aas
adc
rcll
adc
push
add
lret
ret
push
cmpsb
pop
iret
lods
cwtl
scas
mov
lret
and
or
nop
addr16
mov
mov
adc
mov
mov
mov
xor
mov
int
sti
pop
cmp
mov
addr16
mov
rorb
xorl
daa
sbb
or
mov
mov
mov
mov
xchg
aaa
imul
subb
inc
div
and
aaa
icebp
add
imul
inc
adc
sbb
stos
dec
cmp
xchg
jmp
lcall
ds
cmp
xchg
push
sti
fldcw
in
fnstenv
push
pusha
shrb
outsb
mov
imul
pop
std
ret
outsl
xchg
and
into
mov
add
push
sbb
orb
mov
cmp
and
shlb
push
or
fistpll
xchg
mov
sub
jmp
mov
lea
jmp
pop
push
mov
test
or
popf
mov
pop
popf
add
stos
mov
mov
or
out
fisubrs
mov
popf
arpl
cmpsl
call
fnstenv
je
inc
aam
inc
cs
push
mov
test
fisubl
out
push
test
or
out
cltd
add
add
insb
js
in
daa
inc
adc
mov
ficoml
push
cmp
dec
dec
mov
flds
cmp
in
shr
gs
mov
mov
rcr
sti
push
xor
out
mov
fnsave
adc
mov
jg
mov
xor
mov
pop
fidivs
repz
pop
sbb
es
shrb
sub
int3
popf
adc
cmpsl
mov
scas
stc
sub
and
ss
jmp
out
push
and
add
test
pop
xor
inc
movsl
stc
mov
mov
das
lea
mov
push
pop
scas
adc
insb
xor
push
popf
xor
lret
sbb
lcall
cltd
sub
sbb
pop
xchg
ret
push
jb
fistps
xor
pop
fs
jne
lret
mov
pop
jne
mov
push
jmp
cltd
imul
mov
mov
bound
dec
imul
push
mov
aam
push
jecxz
repnz
fimull
push
push
ficompl
repnz
mov
roll
sbb
mov
ret
in
push
mov
mov
and
decb
and
dec
xchg
aam
mov
dec
mov
cmp
loopne
push
mov
es
sbb
jmp
mov
sbb
dec
shlb
mov
fdivrl
rorb
loope
xchg
dec
aas
or
cld
enter
mov
stos
repnz
aam
lock
gs
nop
lret
fwait
aaa
fwait
popf
dec
inc
mov
or
push
roll
cmpsl
lock
cmpsl
ds
jl
mov
sub
fimull
and
sbb
js,pn
xchg
inc
das
bound
shrl
inc
and
inc
lret
lods
sub
jg
mov
cli
neg
shll
cs
xchg
push
cwtl
mov
popa
ss
nop
sub
out
sub
dec
xchg
mov
popfw
and
inc
sub
dec
lret
xor
sub
or
clc
cmp
loope
cwtl
fistpll
fwait
pop
fisttpl
mov
xor
sub
clc
loopne
cmc
ret
and
pop
xchg
iret
jp
sbb
mov
jle
inc
mov
jmp
pop
mov
js
subb
je
mov
push
xchg
lret
mov
cmp
push
mov
adc
movsl
adc
ficoms
push
js
ret
pop
sub
cmp
mov
xchg
xor
jle
aas
jo
inc
push
in
jbe
pop
sbb
and
xchg
movsb
outsb
test
cmp
mov
adc
xchg
outsb
mov
jbe
cld
fdivrs
es
mov
adc
fistl
sti
test
lahf
mov
mov
ljmp
loopne
cli
cmpsl
jnp
xchg
xor
out
dec
add
fildll
xor
pop
mov
inc
dec
adc
adc
inc
popa
mov
sahf
mov
cmp
xchg
cmp
insb
and
jge
mov
push
mov
fcomps
inc
lret
js
mov
jae
out
add
mov
pop
addr16
xor
sbb
jg
add
cli
roll
adc
insl
lock
lds
and
nop
mov
not
ds
pop
pushw
insl
imul
xor
std
cs
dec
pop
test
jecxz
lahf
out
mov
nop
jo
jmp
and
jge
jbe
cmpsl
pop
dec
and
cmc
stos
sbb
cs
xor
push
nop
add
fbstp
neg
lret
dec
dec
inc
mov
xor
push
sbb
out
cmp
push
jg
pop
and
pop
cmp
mov
cmc
mov
xchg
shll
pop
cmpsb
rcrl
cmc
nop
push
sub
mov
sub
inc
loopne
in
push
push
pop
and
pusha
push
and
jns
leave
jmp
rorb
fdivl
dec
dec
popa
pop
push
lea
imull
xor
xor
mov
fstpl
xchg
mov
repnz
and
fs
or
popa
pop
adc
and
mov
into
xor
lret
or
lahf
jns
fs
out
mov
loope
mov
add
shll
push
cld
out
jo
mov
add
cmp
cli
lock
sub
ljmp
popf
ficoms
incl
add
cmp
jb
push
sbb
cmpsb
fwait
mov
in
int3
mov
call
pop
jle
push
aad
jns
xchg
fisubrl
arpl
sahf
jp
pushf
mov
ds
pop
jae
push
sbb
pop
repnz
loope
sub
jnp
int3
xchg
add
mov
pop
and
dec
arpl
jae
repnz
addr16
push
jne
loope
jne
add
stos
repnz
sbb
addr16
into
lods
adc
lds
or
imul
jb
mov
hlt
repz
mov
mov
mov
rcr
ja
pusha
outsl
jmp
dec
test
or
mov
xchg
cmp
popl
xchg
fstl
cmp
xchg
aad
jne
jb
inc
xchg
scas
call
adc
mov
roll
rolb
cmp
ljmp
jbe
and
xor
call
mov
stos
rolb
test
adc
sub
fwait
popf
scas
xchg
and
sbbl
mov
and
push
fs
iret
jno
or
sbb
scas
js
push
dec
inc
fnsave
inc
movsl
das
inc
mov
or
xchg
pop
inc
out
lret
out
or
iret
lret
enter
bound
push
and
mov
add
popa
xchg
xor
mov
inc
pop
in
dec
stc
sbb
push
dec
lds
imul
adc
inc
push
adc
pop
mov
mov
lahf
xchg
out
gs
add
jb
cwtl
fisubrl
cmp
push
int3
jp
ret
cmp
cmpb
adc
insl
movsb
loope
inc
shl
cmc
popa
pop
cwtl
popa
jp
movsl
xchg
inc
fsubrs
into
xchg
adc
imul
sub
fiaddl
pushf
mov
into
nop
rorl
adc
cmpsb
pop
scas
pop
mov
aas
inc
inc
ficoml
insl
je
pop
jle
mov
gs
shrb
clc
sbb
and
mov
sbb
sub
cmp
xchg
adc
iret
or
push
sbb
rolb
xor
dec
movsb
hlt
lock
inc
and
add
test
mov
xchg
fnstcw
sbb
imul
xor
mov
jg
mov
sub
mov
cs
xchg
movsb
and
iret
mov
rolb
mov
pusha
inc
pop
cmp
fidivs
cmp
mov
mov
cltd
arpl
push
imul
mov
fcmovnbe
mov
sbb
pushf
mov
daa
sub
push
scas
cltd
pop
sub
outsb
dec
add
mov
mov
jg
sub
leave
ss
inc
add
xchg
data16
push
int
imul
dec
mov
div
mov
push
stc
lcall
aas
dec
icebp
mov
jmp
add
adc
fs
or
mov
pop
les
xchg
xchg
dec
sub
lcall
and
sbb
out
popa
push
dec
and
push
adc
movsb
nop
jns
sub
mov
mov
mov
mov
cld
xor
insb
lock
std
dec
cld
xchg
push
push
pushf
pushf
insl
divb
dec
das
ja
iret
js
pop
sub
in
fcmovnu
ss
jbe
xor
mov
mov
xchg
int
andl
pusha
xorb
adc
adc
stc
loop
or
cmpsl
sub
ret
or
stos
enter
xchg
pop
xor
mov
xor
shl
fstps
mov
std
lret
fiadds
sbb
dec
pop
adc
pop
push
push
push
sbb
stos
loop
mov
cli
iret
rcrb
jb
out
mov
inc
jp
push
lret
push
insl
in
push
mov
insb
xor
fistl
fldenv
scas
jecxz
lret
cltd
mov
mov
lahf
push
pop
fidivs
xchg
cmp
outsb
dec
bts
stos
adcl
mov
sbb
popf
lahf
inc
sarl
mov
lods
mov
fldt
ret
adc
jge
mov
and
pop
cmp
mov
pop
lods
and
inc
mov
xor
mov
mov
xor
push
testl
add
inc
mov
inc
int3
mov
outsl
add
lock
push
mov
add
sub
call
sbb
cmpsl
ret
scas
sub
outsl
popa
rcll
mov
sarl
stos
mov
nop
rcr
mov
dec
add
hlt
and
inc
sub
ja
inc
cli
mov
xor
mov
lea
mov
movsl
pop
sbb
test
mov
dec
dec
shrl
mov
inc
inc
inc
inc
movsb
jnp
loope
lds
add
xlat
inc
insl
fnstenv
push
pop
popl
cltd
sub
xchg
push
bound
add
nop
std
sub
jge
lcall
mov
cltd
pushf
xor
push
mov
dec
test
inc
scas
outsl
aas
loope
movsb
scas
mov
dec
arpl
push
adc
ficoms
lods
aam
sahf
nop
scas
dec
stos
jb
sub
mov
nop
test
sbb
mov
jbe
loop
bswap
rorl
or
adc
jb
fmull
mov
pop
fnstsw
mov
adc
add
mov
aad
jb
push
enter
or
scas
sub
sbb
jo
rclb
popl
rcll
in
cld
cltd
ja
pop
sbbb
jb
out
daa
pop
xchg
or
add
addr16
leave
fmul
cmp
sub
jg
insl
cmpsl
mov
adc
popf
pushf
icebp
or
aaa
dec
cltd
cld
mov
sbb
cmp
mov
pop
int3
fcoms
push
cmp
fldcw
idivl
and
pop
into
pop
fistpl
jg
mov
shlb
rol
mov
and
cwtl
mov
inc
dec
jmp
mov
dec
cwtl
push
incb
xorb
mov
or
mov
adc
nop
and
lods
mov
xchg
sub
cltd
mov
std
xchg
xchg
fwait
repz
pop
in
cmp
mov
in
jmp
dec
push
sbb
cmpsl
pop
ret
outsl
loop
lods
adc
jbe
insl
push
test
dec
jo
clc
aad
int3
out
adc
sti
xor
and
lahf
xchg
lahf
and
push
movsl
push
mov
cmpsl
imul
push
sbb
sbb
mov
and
call
inc
mov
lahf
lea
hlt
call
pop
push
js
jmp
into
gs
frstor
cmp
frndint
ss
movsl
movsb
add
mov
lahf
aam
and
stc
inc
adc
loope
test
xor
pop
ljmp
adc
cmpsl
test
xor
insl
or
jae
int
mov
add
sahf
jbe
sbb
pop
jmp
sbb
push
xor
fadds
or
fdivrs
xchg
addr16
push
pop
sub
ss
sbb
loop
sub
push
mov
inc
pushf
xadd
inc
lods
mov
add
ja
divl
xchg
adc
and
repnz
enter
xchg
negb
bound
stc
xchg
jno
jnp
loope
repz
pop
mov
cmp
xlat
dec
testb
daa
stos
push
outsl
dec
stc
ret
repz
dec
lret
sbb
or
mov
daa
sar
loopne
push
test
pop
mov
inc
mov
hlt
and
jmp
jae
mov
pop
mov
and
xor
testl
xorb
adc
jo
cmp
shrb
jg
ljmp
mov
in
mov
ds
pushf
and
in
sbb
xchg
mov
idivb
imul
jno
sub
push
ds
insl
xor
insl
fldt
cmpsb
push
gs
dec
movsl
pop
mov
xchg
lock
or
mov
sub
sti
xor
push
pop
and
xor
add
or
push
sbb
cmc
daa
cmc
push
test
push
and
shrb
xchg
jg
mov
push
lret
dec
es
movsl
xchg
mov
cwtl
testl
shl
movsb
mov
loopne
hlt
and
sub
pop
mov
lds
je
lretw
repnz
ds
inc
push
dec
cmp
into
ret
and
mov
popa
mov
insl
pop
je
adc
xor
mov
pushf
cmp
repnz
fisttps
sub
stos
sub
aas
pop
adc
popa
dec
push
aam
int3
push
push
into
ficoms
mov
jg
in
and
pushf
push
cwtl
mov
and
aam
and
sub
hlt
push
cmpsl
pushl
add
sub
imul
sub
popf
int
dec
and
pop
jno
test
push
sbb
pop
ljmp
popa
jbe
dec
jg
inc
in
sbb
cmpsl
add
jo
mov
mov
movsl
in
pop
in
jg
jge
insb
fstpl
scas
imul
inc
loope
repnz
dec
pushf
push
and
insb
cmp
jne
push
sub
mov
pop
lods
sub
into
inc
xchg
pop
int3
cmp
je
xor
pop
mov
inc
and
sbb
add
iret
gs
stos
dec
std
fldt
cld
jae
popf
fsubrs
addr16
xchg
mov
inc
ret
bound
into
xchg
incb
or
out
movsl
fsubs
jo
int3
outsb
in
loopne
jmp
cltd
mov
xor
popf
cltd
or
ret
push
mov
mov
into
xchg
mov
inc
rcrl
mov
push
pop
scas
data16
cltd
sar
fstpl
lahf
movsb
xchg
frstor
sar
sbb
pop
mov
push
std
pop
sti
push
mov
sub
gs
lods
pop
xchg
xor
stos
push
lods
popf
sub
inc
ss
push
ljmp
dec
ljmp
fs
cmp
sub
test
cmp
jae
stos
enter
jae
ret
push
cwtl
ret
mov
push
cmp
outsb
or
mov
push
cltd
inc
add
jno
cmp
mov
push
scas
pop
scas
fnsave
xchg
push
call
mov
cltd
mov
adc
scas
dec
test
cmp
inc
mov
mov
lods
lahf
shlb
sub
and
push
aam
pop
jg
scas
lods
shrl
mov
mov
nop
jecxz
xor
sub
adc
test
in
mov
xchg
xchg
hlt
mov
push
mov
out
pop
mov
xchg
rcl
add
sbb
mov
jl
das
mov
mov
mov
scas
jp
fwait
loop
aas
pop
lret
inc
jb
sbb
push
lock
mov
test
ror
js
cwtl
dec
cmpsb
adc
push
jnp
push
enter
xchg
stos
push
mov
mov
dec
stc
mov
mov
fisttpl
out
call
push
lds
dec
icebp
mull
fwait
or
pop
into
cwtl
push
aad
iret
dec
and
sub
scas
lret
pop
pop
sbb
xchg
out
inc
dec
push
mov
insb
or
dec
inc
ror
add
movsb
cld
hlt
std
icebp
xor
fimuls
les
dec
mov
ror
movsb
adc
fimuls
leave
js
imul
loop
out
or
dec
out
aam
xchg
add
jge
in
fcmove
cwtl
ljmp
adc
or
inc
dec
int
inc
jmp
bnd
jle
fsubs
mov
dec
repnz
call
stc
cmpsb
jnp
push
aad
lret
adc
mov
sahf
outsb
sub
add
xor
ljmpw
mov
inc
xchg
sahf
cmc
fsubrs
mov
mov
jne
pop
sub
and
mov
popf
add
into
ja
adc
push
adcb
add
leave
inc
mov
insb
xor
shrl
and
imul
mov
add
pop
je
xor
inc
add
push
testl
xor
add
call
xchg
or
mov
sbb
mov
cltd
jmp
inc
ja
push
idiv
mulb
push
repnz
or
inc
fwait
scas
inc
pop
outsb
rclb
test
xor
cmp
loopne
cmp
stos
in
sar
clc
popa
pushf
and
push
daa
sub
decl
jnp
mov
or
mov
pushf
xchg
imul
lahf
icebp
shlb
inc
jmp
enter
sbb
insl
pop
jp
stc
cmp
push
dec
xchg
fcmovbe
adc
insl
jle
into
xor
pop
inc
mov
sbb
and
movsl
cwtl
sbb
pop
cmpsl
mov
cmp
iret
mov
mov
xor
xchg
mov
sub
xchg
push
fildl
mov
andl
mov
mov
push
int
or
sarb
xchg
jge
inc
divb
adc
add
add
mov
enter
ret
mov
push
inc
aam
mov
pop
sub
repz
pop
and
add
sub
push
push
jp
xchg
fildll
push
jp
jb
xor
xchg
fwait
lahf
dec
int3
or
gs
sbb
stc
cmp
mov
push
test
adc
js
sub
pushf
sbbl
popa
push
inc
mov
lahf
sti
iret
outsb
jge
push
jl
loop
mov
xchg
pop
mov
test
jns
sbb
das
and
addr16
pop
stos
cmp
jg
jns
dec
or
fstp
push
mov
add
popa
pop
imul
jmp
adc
mov
mov
ror
shrl
or
in
test
xor
cmp
insb
or
inc
lock
stc
adc
cmp
movsl
stc
scas
jmp
jmp
xlat
mov
lahf
mov
mov
push
mov
push
popa
pusha
xchg
cmc
or
xlat
dec
adc
mov
sbb
scas
aad
dec
mov
sub
neg
jg
xchg
push
lods
int
push
arpl
mov
pop
xchg
or
xlat
xor
xlat
std
sbb
scas
push
adc
rcr
sbb
iret
repnz
mov
push
mov
pushf
and
xlat
test
mov
fimuls
mov
xchg
hlt
notb
mov
ficoml
xchg
mov
lock
push
imul
push
or
stos
adc
or
aam
cltd
fdivs
lock
cmp
mov
insl
mov
cmpsb
dec
xchg
and
cmc
dec
popa
xor
sub
pop
mov
popf
dec
sub
inc
loopne
add
int
negl
xchg
jb
mov
sub
xor
mov
dec
pop
stos
mov
pop
ret
dec
jno
push
scas
mov
push
inc
ss
push
sti
or
mov
mov
mov
sub
xor
pushf
xor
xor
and
pop
inc
lcall
adc
outsl
in
paddusw
mov
and
incl
fldenv
stc
xor
lcall
adc
xorb
jo
fcmovnbe
inc
ficompl
jecxz
jl
mov
lods
decb
xchg
pop
outsl
loop
mov
dec
stc
mov
shr
lds
jg
cmpsl
lea
vminss
mov
hlt
lods
add
aam
fsubs
mov
aas
scas
arpl
sbb
in
negb
shr
jecxz
ficompl
add
imul
mov
call
andl
cltd
cmp
gs
or
inc
arpl
jno
xchg
shld
mulb
sbb
lret
sti
mov
std
pop
mov
xor
jnp
xor
loop
xor
shlb
inc
lcall
mov
adc
mov
dec
mov
xor
pop
jne
cmp
dec
mov
sub
or
mull
scas
inc
jb
out
xor
pop
test
mov
push
fcmovbe
or
in
shrl
xor
mov
repnz
lods
mov
lcall
sbb
jp
movsb
push
push
das
rolb
mulb
aaa
xor
pop
jle
dec
mov
mov
les
jbe
or
adc
jbe
mov
add
xchg
test
dec
push
pop
int3
cmp
int3
mov
ret
add
jecxz
icebp
fcoml
dec
cltd
aam
adc
bound
mov
pop
mov
out
out
and
pop
cmp
mov
movsl
jnp
adc
or
dec
pop
cwtl
or
jecxz
rep
jb
adcl
adc
xchg
pop
ja
mov
outsb
psubw
pop
jecxz
fidivrs
sbbb
imul
xorl
mov
stos
movsb
scas
imul
imul
cltd
sub
bound
fnstcw
loop
lcall
adc
mov
or
fists
sbbb
inc
es
rclb
sbb
push
outsb
test
mov
inc
pop
and
enter
fwait
sahf
mov
call
popf
dec
jns
cmc
jg
pop
stos
addb
jnp
icebp
mov
lcall
movsl
in
mov
bound
cld
mov
or
outsl
or
mov
push
or
repnz
popa
inc
inc
scas
sarb
aad
mov
loope
repz
xchg
or
shlb
jbe
pop
push
cmp
les
cmp
sbb
push
jecxz
test
iret
rclb
les
dec
jl
rol
add
and
subb
in
int
test
inc
or
and
xchg
xor
test
imul
mov
xchg
faddp
mov
arpl
pop
pop
shlb
push
jmp
ja
ljmp
data16
ret
pop
inc
inc
pop
nop
or
sbbb
es
lock
je
in
fwait
ja
adcl
ficoms
xor
insl
jle
jae
push
inc
mov
xor
and
shll
dec
imul
pop
sub
adc
sub
test
or
sub
out
jns
ds
adc
repnz
shll
fwait
mov
mov
push
adc
mov
and
mov
jle
pushf
push
mov
ds
add
mov
std
daa
xchg
popa
mov
out
je
scas
pop
ret
sub
negl
mov
lea
inc
loope
or
in
xlat
xorb
xor
fstps
cmp
jg
dec
movsl
mov
adc
test
ret
xchg
das
cwtl
lea
sahf
push
push
arpl
xorl
or
fisubs
or
fs
push
fsubrl
push
add
and
xchg
add
sub
jg
adc
add
loop
rcr
cmpsl
sub
push
fisttps
mov
lea
push
xchg
fnstenv
fmuls
push
pop
decl
jecxz
stos
aad
in
jno
adc
shlb
sub
ds
shlb
in
xchg
push
sub
nop
mov
add
pop
addb
xchg
sbb
cld
xlat
push
push
mov
cmpsb
lock
inc
inc
inc
mov
out
jb
adc
aas
ss
mov
jae
scas
push
xor
jecxz
xchg
out
xchg
sbbl
add
stc
sub
mov
into
mov
ds
addr16
mov
out
out
xchg
insb
hlt
dec
jnp
or
mov
xchg
mov
int3
cs
add
std
or
jecxz
xor
rcrb
jmp
mov
ss
arpl
sbb
cmc
pop
sbbb
lret
aaa
aas
adc
sahf
out
dec
dec
mov
or
inc
and
out
or
scas
outsb
pop
fisubs
daa
push
mov
mov
mov
bound
ds
mov
sbb
xlat
add
xchg
and
testb
mov
pop
push
xchg
lock
push
cli
cltd
paddb
dec
lret
daa
jae
cld
sbb
js
xor
push
in
push
jb
imul
sbb
lods
xchg
xchg
rcrb
pop
mov
arpl
psrad
sub
mov
fwait
iret
cmp
add
ficoms
cs
loope
adc
adc
in
das
xchg
jp
inc
lret
and
mov
cmp
xor
jns
mov
mov
lock
pop
lods
hlt
out
sub
mov
push
add
jne
sbb
and
pop
push
cld
sub
jp
lods
out
xor
push
sbb
push
add
lock
test
ret
nop
mov
cmp
cmpsb
push
shlb
or
ja
mov
push
mov
mov
sub
pop
loope
gs
and
scas
jle
push
dec
add
sbb
clc
inc
sub
jbe
daa
movq
dec
call
mov
dec
cmp
js
lcall
test
out
xor
mov
adc
pushf
jg
jb
cltd
and
nop
sbb
mulb
pop
push
inc
loop
sbb
daa
inc
mov
cld
xlat
gs
les
cld
fwait
bnd
repz
sub
pop
sbb
test
dec
notb
in
lods
aam
dec
adc
gs
insb
pop
insl
xor
mov
loope
jp
mov
jbe
inc
ds
gs
sahf
and
out
or
dec
add
icebp
push
cmc
rcrl
xchg
jl
push
lock
test
nop
sub
ss
gs
aas
iret
sbb
xchg
aad
es
dec
pushf
inc
pop
idivl
fcoms
out
out
movsl
leave
dec
lock
jmp
inc
pop
xchg
xor
sbb
stc
jp
mov
sub
mov
mov
and
ljmp
fdivl
lods
test
xlat
inc
and
add
pop
out
ss
shr
pop
cmpb
cmpsl
push
xor
insb
mov
xchg
push
mov
xchg
pushf
cmp
and
push
push
out
out
dec
out
xchg
fs
inc
sbb
enter
repz
inc
cmp
mov
adc
fistpl
jl
inc
sub
aad
cli
xchg
and
or
fisubs
and
cmpsb
lret
dec
mov
cwtl
and
roll
xor
mov
les
repnz
sbb
sti
cmp
mov
sti
les
ja
push
add
aas
lods
ret
adcl
fdivrl
adc
push
clc
ret
jae
and
push
test
cld
xlat
in
and
jo
push
xchg
nop
lods
popf
into
and
or
add
enter
cmpsl
arpl
popf
pop
xchg
insl
fistpl
xor
orl
push
outsl
push
mov
sub
outsb
leave
sti
jbe
inc
lods
jo
icebp
jne
push
push
into
xor
push
stos
imull
jne
pop
push
scas
rcll
mov
sub
cmp
sti
cmp
aas
cli
fcompl
adc
pop
pop
addl
xchg
mov
and
rcr
push
shll
loopne,pt
jns
push
pushf
sub
sub
xor
sub
mov
jne
insb
mov
sub
lods
js
xor
pmulhuw
and
loopne
dec
rorl
xor
push
mov
push
xor
movsb
sahf
mov
clc
add
sahf
xor
mov
rclb
insl
fwait
stc
dec
jle
sbb
cmp
add
dec
mov
jnp
out
loopne
dec
into
adc
out
bound
fwait
inc
sub
xchg
cmp
fwait
mov
inc
push
mov
pop
inc
cmp
sbb
push
cwtl
aam
insl
popf
rcr
mov
sbb
inc
ss
out
and
or
sti
jmp
xor
or
std
cltd
stos
adc
mov
push
daa
bound
mov
in
cmpsb
inc
aad
cmp
mov
mov
add
mov
jle
in
cmp
lea
rorl
sub
fstpt
mov
adc
mov
lcall
hlt
jl
movsl
xor
out
mov
add
mov
sbb
sub
aaa
mov
outsl
fdiv
mov
aaa
shrb
adc
ljmp
out
aaa
daa
lock
loope
test
cwtl
mov
inc
pusha
ficoml
adc
jnp
ljmp
jbe
or
inc
sub
hlt
pushl
in
lcall
sahf
movsl
fcmove
test
ret
gs
in
ja
add
push
stos
lea
sahf
sbb
divl
xor
test
push
mov
stos
mov
call
addb
mov
cmpsl
cwtl
outsb
rcl
jmp
jnp
out
push
add
out
cmpsl
or
and
inc
leave
add
loop
popa
in
adc
cmp
stos
or
mov
xchg
es
imul
gs
cmp
or
cld
test
cmpsl
mov
xor
popf
push
pop
cld
mov
mov
stc
outsb
xchg
lds
out
aas
inc
xor
mov
inc
mov
inc
jns
int
outsl
pop
mov
fadds
lret
mov
jmp
pop
ret
xlat
cmp
jmp
scas
dec
ljmp
jbe
mov
jb
add
mov
mov
lahf
data16
sahf
mov
icebp
dec
sub
imul
push
cmpsl
jp
xchg
nop
push
dec
pushf
lahf
inc
mov
inc
push
arpl
mov
sahf
aas
cmpsb
ljmp
out
add
rcll
xor
and
loop
test
pushf
lds
fisubrs
daa
icebp
out
xchg
test
cmp
mov
aaa
dec
sarl
push
or
loop
call
cmc
sbb
cmpl
xlat
and
and
cmp
pop
jbe
mov
mov
push
fcomip
sbb
xchg
into
sub
push
push
arpl
and
sub
out
iret
mov
mov
fs
mov
stc
shrl
mov
insb
cmp
sbb
add
push
scas
leave
adc
out
pop
fisttpl
call
into
into
cld
xchg
fwait
push
dec
out
mov
in
addb
or
push
adc
xor
push
in
test
sbb
cmpsl
js
aas
out
js
mov
outsl
fmuls
jle
popf
jnp
jnp
out
mov
mov
data16
push
adc
inc
ja
dec
cmp
mov
add
xchg
not
xchg
add
in
xorl
cmp
sub
es
inc
int3
scas
jecxz
jge,pn
mov
or
add
sbb
or
cmp
adc
aaa
mov
movsl
rcll
lds
int3
pop
pop
xchg
cli
insb
repz
test
pop
dec
lea
out
push
jg
lahf
dec
jp
push
fistpl
fwait
pusha
xchg
fadd
cmp
mov
imul
mov
mov
add
fistpll
bound
jmp
sbb
pushf
mov
mov
dec
mov
mov
scas
out
jne
lret
jns
sub
mov
hlt
and
mov
mov
dec
loop
popa
into
xchg
cli
cmp
mov
jl
mov
fsubs
lahf
pop
inc
sbb
clc
pop
sti
dec
push
add
jg
mov
sub
jae
cmpsl
mov
sub
xchg
cs
jecxz
sbb
das
and
divl
sub
ret
or
out
hlt
add
out
lcall
sub
shlb
iret
sbb
sarl
push
ljmp
jne
aam
dec
hlt
mov
dec
testb
cs
lcall
adc
mov
cwtl
rep
ja
cmp
xorl
jle
xorb
lret
rclb
les
out
dec
push
fs
insb
jp
mov
adc
dec
cmp
mov
faddp
push
push
loope
adc
mov
dec
jle
ret
das
arpl
pop
cmpxchg
or
cmp
movsb
push
leave
mov
jno
outsb
das
iret
imul
insb
scas
mov
popa
push
das
out
rclb
push
loop
or
fldcw
lods
jecxz
mov
ret
sub
lret
adc
mov
out
sarl
gs
movsb
mov
cwtl
push
cmp
test
mov
leave
lcall
pop
or
sahf
iret
push
sub
popa
xor
mov
sub
nop
push
in
mov
and
pop
cmpsb
mov
loop
add
rclb
push
fnstenv
push
mov
adc
mov
jne
rclb
aaa
icebp
adc
loope
cwtl
sbb
xlat
push
inc
popa
roll
sbb
cmp
scas
xor
mov
sti
cmp
sub
test
dec
pop
fadd
mov
mov
inc
adc
jne
jne
jmp
or
jg
or
dec
cld
mov
outsb
sti
lahf
cmpl
xor
jae
xchg
repnz
loopne
nop
inc
ljmp
mov
in
xor
mov
icebp
push
sub
rorl
pop
adc
loop
mov
out
mov
sub
mov
mov
arpl
xchg
jle
test
jg
xchg
push
mov
jns
orl
inc
mov
pop
and
nop
fistps
hlt
es
pop
pushf
mov
mov
adc
sub
hlt
inc
dec
inc
fndisi(8087
and
jmp
stos
push
adc
jae
dec
mov
pop
and
repnz
pop
inc
mov
fcomps
mov
push
incb
cld
mov
ja
pop
rcrb
mov
mov
js
rolb
push
sub
mov
out
cmp
dec
repnz
mov
outsl
pop
idivb
rorb
int3
test
into
pop
or
adcl
push
out
insb
gs
sbb
sbb
adc
add
out
hlt
fldcw
loopne
rorb
push
add
fimull
xor
xchg
mov
xor
addl
lret
push
or
inc
inc
inc
xchg
and
fwait
sub
icebp
or
cmc
gs
movsb
dec
stos
hlt
das
xchg
stc
cwtl
inc
xor
notl
jg
cwtl
lods
jae
jg
mov
cltd
inc
add
loopne
aaa
mov
mov
ja
dec
xchg
in
out
pop
jp
je
xor
mov
push
test
scas
sbb
int
mov
sub
pop
pop
repnz
test
enter
int
mov
mulb
iret
cmp
fs
add
jno
jnp
sahf
subl
lock
cmp
pop
jl
cwtl
inc
lea
mov
in
lret
xchg
adc
outsl
mov
push
mov
icebp
call
rcr
add
mov
in
jnp
ja
leave
add
lret
stos
sti
fcmovne
outsb
mov
dec
sub
shrb
sbb
adc
out
push
cmpb
out
lahf
jnp
lea
adc
jecxz
cld
cmp
fnsave
and
rcrb
add
rcl
jmp
pushf
mov
aad
jae
imul
es
iret
jl
xchg
adc
enter
push
jl
jae
sahf
or
add
inc
push
mov
mov
inc
push
pusha
mov
mov
jg
ret
mov
jle
gs
mov
jbe
cmc
fcomp
jne
inc
cli
mov
xchg
lock
cld
add
mov
jg
leave
sub
insl
cli
pop
pop
addr16
out
and
cmpsl
fldt
dec
ror
fcoml
cmp
lods
loop
jecxz
mov
icebp
mov
cli
stc
mov
push
imul
xor
mov
rcll
and
cmc
daa
inc
push
lea
jmp
imul
or
dec
insl
pop
jbe
les
test
cld
movb
bnd
sbb
test
scas
gs
imul
sbb
mov
inc
mov
push
je
insl
jns
out
shlb
sbb
or
cltd
xor
enter
loope
sahf
inc
ret
cmp
add
jb
mov
gs
cmpl
cmc
in
arpl
test
jnp
mov
mov
shl
call
inc
jne
dec
inc
adc
bound
jns
cmp
dec
jns
je
cltd
pop
out
in
or
xorl
outsl
out
lret
cli
fstps
jno
flds
xchg
cld
or
dec
clc
mov
lcall
iret
mov
inc
js
or
pop
add
imul
push
in
sahf
mov
xchg
mov
xorb
cmpsl
add
js
pushf
out
mov
dec
imulb
xor
bnd
xor
lahf
jnp
mov
leave
xabort
outsl
ror
leave
shll
fsubrl
subl
fbld
ds
pusha
test
ds
js
cmp
ret
xchg
xor
pusha
mov
mov
push
mov
js
xor
pop
jg
mov
adc
jae
add
pop
xchg
mov
repnz
mov
enter
mov
sbb
insl
cmp
ficomps
xor
mov
scas
andl
adc
push
xor
cmp
mov
cmpsb
xchg
pop
push
loopne
sbb
sbb
jae
add
jmp
ret
nop
add
rolb
dec
pop
jae
out
sbb
scas
lock
fwait
add
mov
sahf
ret
lea
gs
lods
rorl
fbld
cmpsb
adc
pop
sbb
or
cmpsl
sub
dec
ds
jmpw
ja
sbb
bound
or
stos
xchg
pop
push
push
push
mov
decl
jno
sti
cmp
fiaddl
inc
adc
push
dec
sub
pop
das
out
jmp
adc
adc
sbbb
dec
dec
test
ja
xor
pop
pop
sarl
in
pop
dec
rcrl
adc
mov
jae
adc
xor
mov
mov
add
cli
movsl
loope
in
inc
sahf
popl
xchg
clc
xor
and
push
push
mov
addr16
dec
ficoml
push
lods
inc
into
cs
push
pop
into
neg
mov
arpl
xchg
xchg
mov
add
sarl
sbb
lock
ljmp
jno
xchg
sbb
sbb
pop
test
add
xorb
sub
bound
xchg
pop
nop
mov
and
arpl
js
jnp
mov
add
mov
int3
push
xchg
cmpsb
or
ljmp
hlt
dec
ljmp
sarb
lods
ja
imul
sub
in
sub
mov
sub
fsubrs
jp
dec
cmp
aaa
add
jno
pop
mov
stos
push
mov
or
pop
mov
cmp
cmc
sbb
popa
das
jae
inc
imul
cltd
xor
dec
dec
insb
into
movsb
cltd
cmp
push
dec
inc
out
xchg
les
and
inc
mov
inc
in
or
xchg
mov
mov
sti
jne
xor
roll
jg
mov
push
call
xor
xchg
mov
insl
rcll
sub
jg
sbb
int
pop
and
xor
lret
test
leave
aas
cs
jnp
outsb
sbbl
orl
adc
cwtl
mov
mov
fcmovne
cmp
or
push
sub
dec
cmc
in
stc
dec
insb
aaa
fs
mov
mov
imul
rcl
orb
into
cmp
movsb
inc
jno
mov
std
add
outsl
in
inc
cmp
xchg
add
jmp
mov
les
xor
fmuls
insl
cmc
iret
xchg
mov
xorl
aaa
cs
add
jo
pop
addr16
aam
test
sub
fbld
xchg
and
pushf
sbb
xor
ja
pop
push
mov
sbb
push
cmp
insb
xor
repz
cs
mov
popf
das
pop
outsb
xor
cmp
stos
dec
std
lock
sub
insb
in
pop
sahf
scas
out
dec
xlat
in
mov
aad
sub
xchg
cltd
push
jg
pop
add
jnp
jnp
sub
mov
push
mov
and
iret
std
mov
push
nop
dec
rorl
push
push
sbb
movsl
in
add
dec
das
mov
loope
loop
bound
push
jae
aaa
pop
and
into
lods
adc
insb
in
mov
ds
jae
dec
or
pop
inc
and
adc
adc
mov
test
dec
shlb
outsb
ret
std
jg
add
stos
mov
xor
or
sahf
cmpb
popf
inc
inc
or
fildl
rcrb
movsl
and
lods
in
popf
inc
cli
sbb
pop
ret
xchg
pop
loopne
movb
sub
flds
repz
std
jp
mov
pop
aam
adc
mul
imul
pop
loope
daa
mov
not
mov
push
xor
jbe
cld
pmullw
aas
push
shlb
jbe
mov
insb
and
test
jb
and
sbb
scas
mov
lcall
lret
xchg
into
pop
popf
xchg
js
jmp
xor
fwait
stos
inc
push
inc
cmpsl
mov
xor
push
lret
jne
sarl
stos
jp
dec
jnp
adc
mov
xor
add
jns
jb
out
aas
je
pusha
orl
addr16
adc
outsl
out
xchg
and
mov
pushf
roll
call
call
push
cmp
push
ljmp
aas
push
adc
test
mov
fisubrs
lea
ss
sarl
inc
outsl
mov
mov
sbb
insb
cmc
aam
stc
out
or
test
dec
or
cli
les
mov
sub
jb
pop
stos
sarl
cli
mov
pushf
push
adc
xor
adc
jno
icebp
addb
loope
inc
mov
mov
sub
and
mov
lds
pushf
dec
insl
inc
mov
sub
scas
jge
jp
mov
or
inc
cltd
outsb
rorb
jl
pop
rcll
cmpsb
xor
test
lret
xor
sub
mov
fs
cld
enter
sar
dec
out
push
cmp
dec
xchg
mov
push
fsubl
ja
ja
aad
jne
jmp
fiaddl
pop
jl
xor
mov
push
xor
ljmp
mov
andb
adc
hlt
sbb
jecxz
xchg
xor
das
lret
lock
out
mov
sbb
lea
repnz
das
popa
fildl
adc
cli
repnz
and
push
leave
fwait
mov
xor
inc
nop
sub
xchg
out
lock
xor
inc
jbe
inc
jae,pn
xchg
shlb
cmp
mov
aad
jmp
pop
daa
or
out
test
je
fwait
out
add
xchg
das
fldl
mov
ret
fbstp
loopne
subb
jns
cmpsb
fidivrl
pop
pop
bound
mov
and
lret
cmpsl
mov
sub
lea
hlt
fucomp
in
outsl
xchg
inc
xlat
pop
in
xchg
add
xor
lods
lea
sbb
cmp
fmuls
mov
cmp
lods
ja
iret
sbb
sub
mov
test
mov
clc
push
stos
mov
and
jle
pop
dec
cmp
cmp
outsb
or
jmp
xchg
mov
or
pop
xchg
inc
imul
add
and
sbb
mov
out
cwtl
mov
scas
insl
fmuls
and
je
pop
inc
imulb
adc
cmpl
and
stos
out
movsb
or
inc
iret
and
jae
mov
aam
and
repz
xchg
test
mov
ja
pop
iret
mov
sub
nop
rclb
rorl
popa
cmpsb
and
imul
stos
jmp
aad
addr16
mov
fmul
pushf
sub
ffree
mov
mov
insb
add
sub
cmp
sbb
add
xchg
cmp
outsl
mov
iret
test
movsb
sub
lods
in
dec
cmc
loope
popa
repnz
jp
stc
iret
stos
idivl
ret
inc
popf
aad
cmp
push
jno
and
leave
into
jnp
fnstenv
sub
fistps
jmp
stos
test
test
stc
jmp
lds
sub
mov
mov
fs
sbb
adc
out
popf
xchg
and
out
sub
nop
shl
arpl
push
jns
xor
cmp
popf
lds
mov
jne
ret
and
cwtl
sbbb
xor
xor
xlat
xor
or
enter
adc
sub
fwait
sub
adc
into
aaa
popf
push
inc
push
and
loope
pop
gs
mov
mov
jp
icebp
lds
sbb
xchg
outsl
icebp
cmc
fisttpl
js
inc
mov
adc
mov
fsub
push
cld
cmpsb
lcall
cmp
mov
push
pop
shlb
mov
bound
test
add
cmp
in
push
lods
in
lret
sub
or
and
mov
inc
jg
rcrb
push
add
or
out
add
jecxz
sbb
cwtl
mov
fmuls
addb
aam
xor
pop
xchg
pusha
cmpsl
fmull
inc
adc
scas
mov
ds
or
rcrl
cmp
int3
in
int
roll
iret
fstpl
add
push
dec
cmp
sub
test
mov
xorl
pop
pop
fidivl
in
adc
aas
dec
aad
xor
jb
dec
lret
stos
dec
jns
pop
outsl
jge
aad
push
and
mov
cmp
into
mov
xchg
adc
xor
and
xor
ss
cmp
ds
orl
jle
adc
mov
push
dec
sub
and
insb
adc
ss
xor
leave
sbb
dec
mov
sbb
xor
mov
adc
iret
mov
mov
inc
push
fwait
mov
dec
add
xchg
mov
dec
mov
loope
dec
sbb
mov
lahf
loop
movsl
push
into
mov
into
xchg
sub
jmp
inc
in
xchg
mov
test
aaa
mov
call
cwtl
sub
das
xchg
loop
les
js
ja
rclb
jnp
inc
dec
cmp
or
lea
movb
xchg
push
and
jnp
hlt
sbb
inc
sahf
mov
xchg
dec
mov
loope
xchg
outsl
ret
xor
and
rcrl
and
pop
ret
lret
push
test
ljmp
ds
xor
pushf
fiaddl
mov
pop
in
shlb
es
sbb
clc
mov
orb
mov
sbb
push
call
dec
jnp
xor
push
rcrl
out
in
fwait
pop
pushl
sbb
call
in
mov
stos
adc
adc
in
inc
inc
add
pop
test
out
ljmp
sbb
push
xchg
push
cmp
shrd
jg
push
mov
jp
or
arpl
jle
mov
jl
sub
cmc
mov
pop
push
pop
outsb
cmp
outsl
fiaddl
and
xchg
push
int
jl
xchg
push
mov
xchg
jl
mov
or
adc
fs
pop
cli
and
arpl
or
notl
test
xor
imul
lret
ret
out
mov
inc
lcall
adc
fildl
adc
negb
out
mov
inc
in
jg
sbb
cmp
cwtl
mov
roll
inc
sub
in
fcmovb
das
ss
lock
jnp
jmp
dec
icebp
fisubrl
jb
mov
cmp
jns
test
ds
or
cmp
jmp
sub
stos
aas
repz
add
dec
nop
idivb
mov
or
call
cs
inc
mov
loop
inc
xor
adc
pop
jnp
sub
inc
aad
xor
xchg
je
dec
add
push
jge
lods
ljmp
xchg
or
add
mov
cmpsb
push
cmp
mov
dec
insb
lcall
xor
push
mov
gs
ja
mov
dec
or
lahf
imul
xor
sub
pop
adc
push
stos
fwait
or
jne
jns
hlt
mov
mov
xchg
int
int
insb
add
mov
jecxz
lahf
shlb
pop
pop
xor
or
inc
inc
pop
add
lock
or
sbb
jns
lahf
sahf
shl
xor
cmp
fildll
dec
fprem
add
lock
xchg
jg
jb
loop
movsb
sarb
or
in
in
jo
inc
inc
sub
scas
sbb
int
cmp
popf
ret
jo
adc
cld
movsb
ret
cli
push
and
test
push
cmp
aam
lods
cmpb
imul
imul
lret
add
fcompl
mov
xor
inc
add
nop
pop
mov
and
add
push
lret
xchg
repz
or
mov
add
push
sub
push
mull
int3
mov
sbb
and
out
jecxz
cmpsl
sbb
dec
test
lret
test
fdivs
cmp
lods
rclb
divps
stos
jno
sub
mov
sbb
hlt
push
fistpll
adc
sbb
scas
fwait
add
subl
mov
push
jnp
je
int
xor
lahf
lret
ja
cmp
mov
jb
shrb
push
bts
in
xchg
mov
mov
inc
inc
jle
test
dec
or
pop
inc
and
stos
jnp
mov
aas
jae
fdivl
addl
inc
repz
sahf
add
cmp
ret
pop
mov
xchg
and
je
jno
pop
inc
jl
iret
push
stc
push
xchg
or
out
jno
or
rolb
mov
rolb
dec
xor
jge
mov
std
icebp
jle
mov
mov
dec
xchg
repnz
cltd
imul
imul
pop
jl
scas
add
js
aad
scas
inc
fnstcw
leave
sub
in
rolb
dec
add
adc
mov
or
add
or
ljmp
push
lret
ret
push
add
aam
and
mov
fdivrs
inc
fdivrs
sub
loop
xlat
xchg
xchg
xchg
add
dec
jno
imul
fnstsw
xorl
mov
jns
fcomp
add
add
or
push
adc
insb
xchg
mov
push
sub
inc
dec
sahf
jns
pop
std
jmp
xchg
popa
jne
nop
ds
gs
scas
sub
ret
dec
sbb
jmp
push
loop
out
jns
sbb
mov
pusha
pop
jne
enter
cld
jecxz
ret
loopne
imul
ret
dec
sub
stos
shll
xchg
out
in
cmpsl
cli
cmp
xchg
mov
dec
dec
clc
aas
addr16
adc
adc
in
das
pop
push
je
sahf
jmp
inc
xor
nop
pop
movsl
inc
and
loopne
or
test
sub
inc
fs
mov
fidivs
xlat
sub
fwait
jb
xchg
xchg
xor
das
fistpl
bound
or
js
cmp
dec
sub
int3
and
rep
mov
cmp
gs
shlb
leave
pop
inc
addb
outsb
call
mov
xor
jp
loop
pop
addl
mov
aaa
mov
xchg
mov
jbe
inc
cmp
pushf
fs
addr16
popa
out
aas
adc
ja
ret
adc
into
jbe
pop
bound
and
xchg
sarb
mov
pop
popf
dec
in
clc
outsb
call
sub
xchg
stos
lcall
punpcklbw
inc
jle
push
sbb
jecxz
es
pop
data16
push
sbb
pop
aad
rcll
imul
mov
jge
movsl
sub
cld
test
cmpsb
fldl
popa
data16
ficoml
or
jge
repz
sbb
add
fsubr
je
std
pop
xchg
push
outsb
lods
mov
cmp
xor
int3
out
fcmove
das
outsb
sbbb
int
add
xchg
jmp
mov
stos
pop
mov
cs
enter
clc
mov
mov
sbb
data16
xor
mov
ret
xor
lcall
xor
int3
mov
loop,pt
loop
dec
mov
pushf
and
mov
sbb
cld
xchg
jmp
out
dec
push
sbb
xor
loopne
aas
gs
pop
aad
cmp
sbb
xor
jmp
rcrb
pop
sti
add
in
mov
scas
mov
in
mov
movnti
mov
inc
or
sti
mov
out
jge
lods
loop
int3
jne
jno
mov
movsb
pop
or
test
dec
lcall
xchg
rcrb
movsb
into
add
loopne
xchg
popa
inc
hlt
sub
fcoms
stos
inc
iret
gs
jns
imul
into
movsb
orb
or
mov
jns
pop
outsl
add
pop
stos
out
mov
push
les
lods
push
mov
lods
xchg
xor
jae
cltd
cwtl
bound
mov
mov
movsl
movsl
cmp
sbb
out
cli
ss
jae
mov
bound
dec
or
ds
inc
cmp
mov
adc
out
jb
rorb
leave
push
inc
push
int
or
sub
fidivrl
add
add
cmpsb
jo
repz
rcrl
lea
lahf
adc
mov
sub
cmpsl
xchg
inc
push
inc
mov
pusha
and
das
jecxz
je
push
and
sub
push
movb
cmp
jnp
in
ret
sub
stc
xchg
je
test
mov
jb
je
jp
add
icebp
lods
in
jp
ret
lret
loope
mov
rcrl
sarl
and
xor
in
out
pinsrw
aam
decl
stos
jo
adc
xor
das
lahf
jl
popa
ficomps
addr16
dec
xchg
sti
push
lea
push
jmp
cmp
testb
out
push
xchg
dec
adc
das
shrl
iret
add
dec
es
into
dec
push
addr16
push
je
jb
lods
mov
pop
mov
inc
stos
lahf
in
push
xchg
adc
ljmp
ficoms
mov
lock
rorl
mov
xchg
add
and
lods
pop
add
movsb
movsb
mov
fnsave
shrb
in
jnp
out
mov
lds
xor
das
inc
jae
aad
lahf
enter
pop
mov
rcrb
mov
and
imull
mov
fs
cmpsb
dec
mov
and
and
call
insb
jecxz
imul
shlb
shrl
insb
clc
popf
push
jle
bound
fdivr
xor
fcom
mov
push
sbb
rcrl
push
jbe
lods
mov
mov
and
gs
push
dec
js
xchg
add
inc
ljmp
pop
inc
popaw
lahf
aam
sub
pop
inc
repz
inc
std
cmp
loope
popf
ja
xor
ret
movsl
xchg
jno
test
popa
scas
sub
iret
mov
mov
mov
fnstcw
mov
sbb
je
jmp
scas
mov
shlb
mov
scas
std
dec
mov
cmc
call
push
outsl
or
jmp
dec
mov
xchg
loopne
cmp
mov
cwtl
sbb
dec
out
cmpsb
ret
js
daa
std
jecxz
add
jl
addl
push
mov
repnz
mov
adc
lea
dec
pop
xor
out
jmp
cmp
loope
mov
or
hlt
scas
clc
subl
push
loopne
mov
addr16
test
mov
inc
push
pop
mov
mov
push
inc
push
insb
jae
push
cmp
loopne
fnstcw
cmpsb
inc
mov
bound
je
rcrb
mov
mov
lds
dec
mov
inc
popa
xchg
and
jne
and
sbb
daa
rorb
aam
pusha
test
js
dec
iret
dec
loope
inc
jns
adc
out
jmp
daa
push
idivl
mov
or
xchg
push
in
js
je
cli
add
ja
or
out
inc
into
inc
jmp
iret
or
push
inc
xchg
and
popf
mov
outsb
in
jle
xchg
and
fists
cld
out
test
and
and
cli
das
cmp
nop
pop
fistps
lea
lcall
add
add
adc
popa
jbe
pop
add
mov
pop
out
mov
xchg
iret
adc
fwait
cmp
ret
mov
push
jp
repz
mov
arpl
nop
push
inc
mov
or
jle
add
mov
inc
jp
je
cltd
adc
add
mov
inc
cs
aam
pop
sub
jge
and
out
fmul
fcompl
sti
push
loop
lods
xchg
inc
inc
mov
cli
stc
mov
lahf
mov
dec
imul
imul
mov
jae
xor
pop
mov
cmp
adc
aaa
dec
xor
je
fldt
in
add
test
inc
lcall
sub
ficompl
insl
push
call
jmp
adc
shll
out
push
jo
out
jle
or
jl
popa
xchg
add
mov
and
jmpw
mov
imul
push
xor
lods
out
test
cmpsb
jmp
jo
aam
pushl
loopne
icebp
cmpsb
inc
jb
addr16
mov
xor
cs
ja
ja
jge
add
cltd
dec
or
pop
xlat
mov
cwtl
cmovo
or
jbe
fisubrl
add
call
fnstsw
sbb
mov
mov
scas
out
mov
jne
xchg
fdivs
push
push
js
dec
sbb
and
pop
ret
fsubl
ret
les
ficompl
addr16
adc
dec
sub
movsb
mov
stos
sbb
dec
cmp
aad
push
lret
add
adc
xchg
out
inc
gs
dec
idivb
dec
test
mull
mov
clc
pop
lcall
push
or
lock
inc
sahf
jg
jnp
add
mov
inc
sbb
divl
lret
paddb
jno
test
ret
dec
std
popa
mov
xchg
loop
pop
or
pusha
int3
and
xchg
int
addr16
or
lods
lods
cmpsb
push
or
aaa
and
push
out
cmp
outsl
pop
in
inc
insl
loopne
or
pop
jmp
cmpsb
and
xchg
jne
rclb
xchg
dec
xchg
add
cltd
cli
xchg
cmc
pusha
dec
popa
and
push
int
jl
pusha
js
lods
sahf
xchg
xorl
pop
xor
and
ss
imul
aad
mov
jnp
lret
popa
mov
scas
pop
fstl
lahf
loope
popaw
popf
xor
shl
and
lods
jmp
mov
pop
ss
sbb
sbb
mov
fcomi
pop
test
sbb
jmp
add
push
loop
fwait
sub
dec
leave
or
popa
push
icebp
and
cwtl
sub
mov
sahf
or
psrlq
test
hlt
cmp
xor
or
bound
mov
mov
movsb
test
out
xchg
dec
dec
lock
inc
jmp
add
sub
sahf
ja
inc
lods
dec
ja
jno
add
xchg
outsb
jmp
mov
outsl
imul
imul
test
cmp
fnstcw
sbb
push
in
push
and
ret
and
bound
call
test
sbb
mov
hlt
push
push
lods
mov
sbb
lret
sbb
sahf
jecxz
or
loopne
xchg
gs
das
and
cmp
into
mov
ljmp
sti
enter
jecxz
push
inc
cli
xchg
add
push
lea
xchg
mov
lcall
lret
push
leave
int
inc
push
adc
ret
pop
dec
shlb
cmc
mov
fldt
mov
or
pop
into
mov
test
pop
sub
in
inc
mov
repz
movsl
cmp
addr16
int3
hlt
cmp
sub
ficoml
and
aam
or
div
int3
jmp
jne
stos
xor
hlt
sti
daa
dec
push
sub
rcrl
andl
ret
in
xchg
xor
popa
cltd
and
int
xchg
jns
ret
shl
adc
mov
jne
addb
fs
ja
repnz
shrl
mov
pop
push
rcll
pop
outsb
stos
ret
push
add
cmc
sub
push
movsl
aad
movsl
mov
and
xchg
test
jp
inc
push
mov
ret
push
popf
lret
stos
mov
jle
testb
sbb
cmp
sbb
mov
pop
mov
stos
aas
daa
rol
pop
cmp
or
jne
orb
cmp
xor
sbb
adc
outsb
aad
xchg
add
xor
sbb
or
pop
jbe
inc
jbe
mov
mov
cmp
cltd
nop
int
or
jmp
and
xchg
pop
test
pop
and
cmc
loop
sbb
fisttpll
popf
mov
outsb
sub
pop
fbstp
cmpb
dec
and
jo
icebp
pushf
mov
pop
jne
stos
add
lock
ret
lret
pop
fdivr
or
jmp
mulb
dec
insb
js
mov
pop
push
and
mov
pop
mov
enter
in
sarl
flds
mov
pop
insl
cwtl
dec
or
lahf
scas
shll
cmc
sub
imul
mov
ss
std
gs
jno
push
lock
sub
lods
cmpsb
and
mov
fnsave
test
or
sbb
sti
inc
clc
cmp
sbbb
adc
dec
cld
je
mov
mov
aaa
les
movsb
js
add
xchg
cmp
mov
cmpsb
mov
mov
std
mov
das
xchg
test
fmuls
ds
xchg
int3
jp
and
out
fstp
enter
inc
or
das
mov
jmp
bound
ds
in
dec
mov
adcl
dec
aaa
xor
je
outsl
or
sbb
cmp
movsl
into
xor
or
jecxz
push
mov
aad
nop
sbb
call
mov
inc
sub
stos
shrl
cmc
add
push
adc
mov
sub
hlt
mov
mov
enter
test
add
loopne
pop
add
pop
inc
add
pushf
pop
sub
mov
mov
js
jmp
add
aam
rclb
sbb
xlat
stos
dec
dec
or
imulb
pop
xor
add
cmpsl
fstps
lea
inc
jae
mov
int3
or
popa
leave
sbb
aas
scas
dec
out
sub
push
inc
pusha
add
lahf
sarb
in
push
movb
loope
repnz
inc
push
or
arpl
pop
mov
repz
fsubr
fbstp
clc
mov
pusha
and
inc
subl
sub
dec
mov
inc
aad
xchg
mov
adc
sub
mov
in
shrl
out
fwait
cs
mov
jp
inc
sub
test
call
aad
mov
lret
adc
insb
xchg
jb
push
and
pop
ret
int3
and
out
test
pop
lods
push
into
jmp
iret
mov
gs
into
push
add
dec
mov
xlat
mov
sbb
cmpsl
mov
repnz
loopne
int
out
frstor
inc
cmpl
xor
xchg
push
jg
hlt
outsl
push
and
sbb
adc
push
inc
bound
jge
sbb
mov
push
xor
xchg
xchg
stos
int3
imul
mov
jnp
xor
dec
cmp
fs
in
xchg
int3
mov
xchg
push
loopne
mul
mov
test
lea
jmp
repz
rorb
jbe
decb
pushf
pop
stos
and
sub
mov
push
mov
in
sub
inc
cmp
inc
lcall
in
call
fcoml
push
ds
addb
dec
xor
fldl
shr
cli
loopne
ret
dec
out
test
push
jmp
jnp
imul
mov
shrl
mov
in
pop
es
sahf
sarl
ss
add
xor
out
lret
push
inc
aam
jb
and
add
pop
in
add
sbb
je
push
or
push
or
pop
cltd
aas
loope
xchg
subl
outsb
push
mov
dec
fmulp
inc
mov
mov
imul
xor
inc
cmp
mov
shlb
mov
mov
leave
push
jae
cmc
dec
jl
xlat
into
or
inc
xor
dec
jg
adc
sub
pushf
and
push
jo
mov
cli
add
and
add
mov
mov
out
dec
xchg
pop
dec
jg
and
inc
call
pop
pop
lahf
push
jb
out
fidivrl
cmp
out
sti
rcrl
sub
gs
mov
imul
lret
jg
test
pop
adc
xchg
je
outsl
cltd
pop
pop
outsl
inc
cmp
cmp
inc
loopne
pop
js
mov
sbb
push
mov
fadd
push
xchg
push
mov
mov
div
push
mov
jmp
cld
stc
adc
adc
push
std
test
dec
xchg
clc
insb
pusha
cmp
test
mov
scas
cmp
daa
sbb
ret
pop
out
or
jg
mov
mov
adc
pop
fsubr
or
pop
mov
mov
imulb
mov
fwait
jb
mov
lret
mov
inc
adcl
xchg
xchg
and
rcll
cmp
aad
sub
sub
pop
xchg
scas
andl
cmp
jne
mov
inc
sub
mov
mov
jp
mov
cmpsl
pop
das
sub
fucom
cmc
mov
shrl
imul
imul
sti
bound
cmp
fs
and
cwtl
and
sbb
push
mov
imul
xchg
ljmp
pop
jmp
mov
loopne
aaa
fstps
mov
loopne
cmp
add
sub
pop
mov
add
loope
out
dec
cli
mov
mov
mov
testl
sbb
cltd
mov
adc
insl
mov
mov
xor
cmpb
xchg
imul
hlt
mov
xor
iret
inc
sub
xor
mov
adc
jae
cld
arpl
mov
ds
fwait
and
mov
mov
insl
sub
dec
jle
test
mov
cmpsb
dec
addl
test
mov
scas
sub
push
mov
dec
fsubrs
xchg
inc
sub
std
mov
inc
mov
xor
fisttpll
clc
stc
addb
popf
test
pop
ret
push
or
int3
std
movsb
sub
jbe
imul
lds
dec
test
pop
lahf
scas
shr
jp
lcall
or
outsl
dec
fcmove
xadd
daa
mov
fadds
aaa
aad
call
sbb
dec
shr
jge
push
fldenv
xorps
mov
daa
neg
xchg
leave
dec
fiadds
and
mov
xor
and
mov
xor
repz
adc
push
and
jmp
push
stos
scas
orl
and
repnz
bound
fnstsw
ret
popa
adc
xchg
imul
mov
stos
sbb
stc
hlt
out
imul
add
rcrb
xchg
iret
mov
dec
lods
test
xor
dec
cmp
and
cmp
hlt
test
daa
aas
mov
dec
aad
push
fldt
fdivl
dec
sub
push
movsb
outsl
push
aam
sahf
push
pop
call
push
loope
mov
pop
mov
ficompl
add
sbb
out
out
nop
insl
jns
lods
outsl
add
dec
push
xlat
jmp
std
xchg
jle
insl
xor
lea
cmp
repz
add
in
ds
or
adc
xchg
pop
mov
adc
xchg
inc
and
and
mov
in
xchg
shrl
sub
roll
cmpb
leave
outsl
jecxz
jle
push
outsb
stc
pop
out
movl
pop
mov
out
imul
mov
cltd
int
add
push
int3
repz
mov
outsl
iret
rcrl
in
add
sahf
sbb
mov
repz
lret
push
out
les
fsubrl
sbb
into
mov
push
push
or
mov
or
out
dec
iret
in
pop
mov
stc
sub
sahf
push
jne
dec
in
and
into
movsb
mov
sbbl
or
pusha
dec
aad
sub
mov
mov
dec
pop
xchg
cmp
and
sub
iret
xor
stos
sub
mov
and
mov
xchg
cmp
inc
dec
jecxz
bound
aad
in
loopne
lea
pop
js
mov
jmp
in
and
mov
out
cmp
mov
adc
cli
mov
pushl
adc
stc
jge
push
les
sbb
pop
arpl
and
mov
aaa
xchg
push
pop
in
stc
insl
aas
sub
add
xchg
mov
push
and
repnz
mov
loope
jmp
test
lods
ja
xor
push
aas
outsb
call
push
arpl
sahf
rcrb
fs
pop
cmp
sbb
aam
sbb
out
sahf
push
lcall
cmpsl
jl
mov
test
xchg
getsec
push
add
div
les
pop
xor
adcl
add
movsb
addr16
add
mov
je,pn
inc
aaa
jle
shrl
sti
xlat
iret
or
mov
fst
fistpll
das
jmp
or
or
pop
add
sub
out
mov
cmp
xor
mov
cmp
in
icebp
fiadds
shrl
fldl
stc
add
mov
mov
movsb
xor
xchg
mov
sarl
out
fucomi
mov
jge
insb
sahf
mov
cmp
inc
mov
leave
scas
in
pop
push
lcall
inc
lds
enter
mov
adc
in
movl
adc
dec
cmc
clc
clc
pop
inc
std
pop
testl
inc
pop
arpl
cmp
cltd
rcll
cltd
xor
and
or
cmpsb
dec
mov
push
addl
adc
lcall
pop
enter
sar
das
push
pop
adc
sub
cmc
fcoml
loope
ss
push
mov
sub
mov
jns
insl
mov
ljmp
add
subl
insb
or
fistpl
ret
push
mov
pop
mov
inc
data16
lods
in
out
pop
jmp
scas
push
xchg
sub
sbb
push
in
or
mull
push
sub
incb
je
test
mov
mov
adc
lret
add
int
rorl
popl
inc
cli
insb
popf
inc
out
pop
pop
jno
push
xlat
test
inc
sbb
pop
imul
in
lcall
out
imul
iret
pop
add
sub
jl
mov
call
sahf
test
in
or
hlt
fstpl
inc
std
cltd
hlt
out
std
imul
and
sub
daa
lcall
mov
fmuls
push
sbb
mov
mov
sbb
inc
sub
out
leave
or
push
dec
icebp
rol
mov
mov
cli
inc
jns
jp
lea
mov
mov
popa
scas
pop
lds
ffree
sbb
shr
cli
test
mov
fcmovnu
sbb
dec
fcomps
push
aaa
sti
in
ret
rcl
bound
sbb
push
fists
lds
lret
gs
out
enter
dec
sbb
jne
xchg
outsl
out
int3
mov
pop
adc
lods
stos
fildll
pop
mov
fidivrs
or
std
aas
subl
ret
fidivl
enter
xor
cmpsb
movl
nop
shll
push
cmp
addr16
wbinvd
sbb
inc
push
fsts
stos
mov
add
in
stos
or
lods
inc
movsb
inc
cmpsb
imul
dec
push
and
mov
adc
xlat
fistl
or
sub
lods
inc
fwait
mov
dec
or
mov
jne
sbb
cmp
jge
imul
dec
vpsllw
adc
cmp
ljmp
sahf
push
imul
or
jecxz
movsb
mov
mov
push
repz
cmp
cmp
inc
push
push
inc
or
inc
add
aaa
mov
imul
sbb
inc
jae
sbb
or
push
dec
fistpl
xchg
jl
daa
push
into
imul
cmp
dec
pop
dec
sbb
and
outsl
and
mov
lods
jecxz
pusha
inc
cltd
push
and
or
push
mov
xchg
imul
divl
test
fdivl
out
lock
pop
mov
mov
mov
xchg
xlat
psubsw
inc
push
xor
lods
mov
ror
xor
push
bound
sahf
mov
in
mov
and
pop
sub
sbb
xchg
outsb
sbb
dec
aaa
idivl
pusha
stos
and
das
mov
out
hlt
leave
mov
mov
or
mov
fs
mov
inc
dec
ret
fisttps
cmc
inc
push
insb
pop
push
cwtl
imul
xchg
das
fucomip
sti
xor
cmp
jo
mov
inc
sub
jo
xor
into
push
in
and
add
xor
pop
jmp
add
cmp
mov
mov
lods
xchg
xchg
push
jg
push
jg
insb
cmc
xchg
scas
insb
or
jb
out
push
pop
fucompp
roll
aas
and
push
xchg
fmull
not
stc
and
popf
sub
or
jle
and
sbb
jecxz
icebp
les
popf
into
fucomip
cmpsb
movsl
xor
sbb
mov
dec
fidivrl
mov
adc
xchg
and
jl
ss
pop
inc
xchg
mov
jg
mov
pop
push
jle
pop
xor
in
xor
stc
xchg
mov
adc
cmp
cmp
push
adc
loope
xor
loope
scas
xchg
pop
adc
rol
imul
out
xor
pcmpgtb
out
js
xor
imulb
dec
mov
icebp
xchg
jo
mov
repz
sar
sub
adcb
xchg
xlat
sbb
and
add
subb
cmp
out
sbb
dec
outsb
or
sahf
ss
cli
lods
gs
lds
pop
neg
adc
jl
push
in
cmp
fistpll
inc
lods
inc
insb
fmul
sub
cwtl
jae
fcom
xor
mov
mov
xchg
jmp
xor
pop
sub
je
scas
pop
cmp
or
sbb
scas
pop
lret
daa
repz
sub
push
dec
movsb
sub
push
test
push
jecxz
and
mov
mov
data16
xlat
inc
jbe
addb
out
jge
mov
jle
and
out
cmp
ret
test
mov
sarb
hlt
andl
cli
aad
push
into
sub
loope
mov
fst
sbbl
insl
pusha
pop
and
pop
ret
mov
cmp
and
push
mov
inc
adcb
sub
pop
inc
stos
cmc
sub
in
lret
sub
pop
push
shlb
addr16
sub
aas
popf
stos
cmp
lahf
cmp
push
and
sub
lds
gs
repnz
int
sub
pusha
xor
lret
mov
fs
jl
imul
loopne
cmp
int3
inc
test
loopne
jae
repz
push
inc
mov
das
push
scas
js
cmpsl
ljmp
mov
aam
adc
enter
add
dec
inc
jae
add
ja
and
gs
mov
mov
push
scas
bnd
movsb
and
cli
mov
lock
popa
sbb
mov
ljmp
inc
add
stos
xor
adc
loope
jg
pop
push
aad
sub
fwait
push
lahf
inc
dec
lret
adc
popa
and
enter
mov
sub
pushf
mov
aas
mov
jno
push
leave
lock
imul
add
mov
imul
xchg
adc
addb
rorl
add
mov
ffree
lret
cs
sbb
pop
jae
and
cltd
lret
lock
add
ss
jae
xchg
ds
mov
mov
xor
push
scas
ljmp
sarl
adc
adc
aad
jnp
in
add
out
ret
addl
mov
and
lea
mov
add
aad
loope
xor
adc
movsl
or
mov
es
insl
not
fwait
mov
add
in
mov
cmp
push
add
dec
cltd
aaa
mov
or
cmc
jge
call
add
out
lahf
dec
add
xchg
pushl
jp
das
nop
loope
ljmp
jmp
lret
jl
sub
scas
sahf
or
ret
mov
mov
sbb
ljmp
inc
shr
dec
and
push
fcmovu
pop
movsb
sub
dec
pop
mov
out
sti
cmpsb
adc
cld
pop
add
mov
push
cmp
fdivs
mov
jle
mov
sbb
xchg
leave
or
mov
mov
mov
hlt
das
mov
mov
test
or
and
das
mov
ret
arpl
push
sarb
mov
es
adc
push
incl
repnz
sbb
inc
xlat
notl
in
mov
mov
insb
xchg
jo
push
int3
in
loop
loope
out
shl
inc
jns
mov
mov
fimuls
xchg
inc
adc
adc
jne
sub
dec
and
push
mov
jmp
ja
dec
or
clc
ret
out
outsl
push
inc
jae
int3
xorb
and
arpl
and
jae
stc
adc
jae
xchg
or
outsb
scas
mov
popf
mov
in
xchg
inc
xchg
rcl
push
mov
sahf
cmc
pop
cs
popa
rcrb
xchg
fisubs
in
mulb
in
push
or
push
cwtl
test
pop
lahf
fidivs
xchg
inc
in
movsl
leave
sub
lahf
pop
jecxz
jmp
aad
xor
pop
jl
out
sub
xchg
and
or
leave
adc
stos
add
or
mov
push
xchg
ret
cltd
or
and
lcall
sbb
push
or
ss
movswl
xchg
push
add
jne
xchg
xor
cmpsb
cmp
pop
cmp
sub
mov
aam
add
sbb
sub
push
mov
aad
cmp
jl
sub
lds
in
pop
mov
xchg
sub
sub
ret
and
clc
les
push
mov
sbb
jno
mov
faddl
and
iret
fcompl
cwtl
not
inc
call
cmc
mov
pop
xchg
adc
lahf
daa
mov
fstps
jp
loop
inc
sub
cs
dec
inc
cmc
cmc
adc
stos
out
inc
cmc
adc
push
and
inc
pop
jg
lea
cmp
out
daa
cs
lcall
add
pop
fldt
pop
fisttpll
aam
mov
xor
repz
mov
push
mov
rorl
jbe
je
or
nop
inc
adc
mov
jo
ret
ja
loope
cmp
jns
gs
add
inc
push
lret
cmc
fs
sbb
stos
adc
das
inc
fdivrp
xchg
es
data16
adc
add
mov
mov
pop
jns
cmc
pop
adc
sbb
ffreep
adc
or
and
fmuls
adc
out
fcoml
pop
cltd
aaa
popf
movsb
cs
lock
cmp
mov
loop
mov
pop
xchg
jnp
test
ss
ljmp
movsb
adc
dec
gs
inc
test
lea
dec
adc
sbb
divl
sub
add
push
and
lea
fwait
jp
test
xchg
or
push
sbb
xor
fmul
and
insb
inc
stc
aad
xor
in
pop
test
or
popf
inc
lcall
data16
cmc
and
adc
test
sbb
sub
stos
push
js
pushl
out
lcall
jae
add
xor
mov
push
scas
and
xor
test
lock
imul
jne
cmp
or
movsb
pop
and
aaa
cld
or
xchg
inc
ja
aaa
aas
je
push
cs
xchg
add
xchg
dec
pusha
xchg
shlb
dec
test
dec
pop
jp
subl
std
cld
imul
stos
push
pusha
mov
ret
cmp
test
mov
es
or
mov
scas
lret
adc
or
out
scas
push
iret
hlt
inc
jno
aaa
push
pop
ret
jg
dec
rclb
inc
scas
cli
imul
pop
push
push
pusha
imul
cmp
outsl
xchg
fstl
jp
loop
sbb
jmp
nop
imul
pop
and
roll
jb
test
inc
les
xchg
hlt
mov
push
mov
pop
xchg
inc
cltd
push
push
loop
jno
popa
fidivrl
cmp
xlat
and
ficomps
sbb
cltd
or
js
sbb
scas
cmc
xorb
jo
cmp
fisubs
and
js
mov
pop
enter
stos
push
loop
cld
in
fs
pop
call
outsl
sbb
rcll
push
pop
add
cmpsl
das
push
repz
add
mov
in
enter
jns
getsec
mov
xchg
cmc
push
pop
mulb
rcll
jbe
cmp
ljmp
add
pop
add
ret
add
xor
mov
cmp
push
ljmp
les
mov
daa
icebp
jmp
stos
jle
push
fstpl
dec
adc
mov
cmpsb
and
in
jle
push
cmp
sub
add
ss
fstps
jmp
adc
jge
mov
pop
sub
mov
mov
jg
mov
call
xchg
insl
test
mov
jp
leave
std
je
push
fadds
sub
les
push
add
jl
sub
stc
orl
or
lcall
insb
or
int
nop
ret
sbb
loopne
lcall
enter
decb
push
xor
ds
inc
dec
stc
call
addr16
popa
out
loopne
mov
inc
imul
dec
inc
jg
insl
testb
inc
push
ja
in
mov
sbb
cmp
jb
dec
pop
mov
adcb
xor
or
rolb
sub
mov
imul
add
mov
push
ret
adc
enterw
inc
jno
jbe
xchg
jg
fwait
das
rcl
hlt
jecxz
test
es
imul
and
jne
jb
push
mov
in
sub
dec
in
pop
jg
jns
ret
xchg
insb
pop
dec
scas
pop
sbb
fxch
cmpsb
mov
decb
xor
incb
ss
jbe
mov
cmp
pop
adc
aaa
icebp
scas
or
scas
in
repnz
pop
dec
aaa
inc
mov
je
loopne
adc
sub
popf
int3
data16
add
cltd
push
inc
lods
mov
jbe
adcl
jecxz
mov
sub
add
mov
stc
cmp
loope
inc
js
ficomps
xor
ja,pn
mov
loope
adc
outsl
popa
int
xchg
mov
pop
loope
cmp
scas
pop
fstl
jne
bound
lret
and
inc
pop
movsb
repnz
cs
movq
pop
sub
jne
rcll
xor
xorb
pop
jmp
add
dec
ja
popa
and
cmp
call
adc
pop
pop
or
mov
or
push
add
std
inc
or
adc
inc
cwtl
xor
adc
and
fistpl
adc
xlat
dec
mov
dec
cld
jnp
inc
dec
fstpt
popf
add
mov
stos
fstpl
inc
enter
and
dec
mov
imull
push
push
inc
mov
jb
loope
pop
jl
add
push
icebp
mov
stos
xor
jae
fistpl
mov
push
ror
inc
mov
or
add
or
rorl
in
adc
clc
fnstenv
jo
int
mov
loope
cmp
lcall
stc
and
enter
andl
ss
lahf
mov
xchg
nop
push
stos
pop
int
pop
jnp
or
jb
mov
inc
scas
fiadds
sbb
add
fnstcw
xchg
test
sbb
or
jb
lret
mov
dec
inc
pop
push
lods
mov
gs
lods
idivb
inc
fmul
int
stos
daa
rcrl
into
cmpsb
fstl
scas
xor
pushf
add
ljmp
push
jnp
test
stc
cmp
insl
cmpsb
insl
adc
add
mov
mov
icebp
dec
sub
loope
pop
jecxz
jo
mov
pop
sbb
push
outsb
push
mov
push
popf
cmpsb
xor
fimuls
mov
mov
push
cmpsl
xlat
mov
stos
enter
outsb
lds
clc
xchg
jae
push
add
cltd
pop
dec
jb
rorl
inc
xor
cmp
testb
lods
or
sub
adc
por
push
mul
push
loope
pop
sahf
xchg
imul
fimull
or
push
push
add
push
sub
pop
mov
sahf
lds
lahf
mov
jmp
xor
sub
in
add
mov
jnp
push
sbb
or
sbb
sbb
addr16
ja
jecxz
lods
stos
push
insb
mov
mov
inc
pop
cli
dec
xor
hlt
adc
inc
fiadds
and
dec
xor
sti
lea
orl
jmp
int
gs
shlb
pop
push
test
fnsave
out
fsubl
push
bound
mov
lcall
jns
pop
cmc
or
inc
dec
add
push
cld
mov
test
mov
mov
jno
out
cli
xchg
mov
jnp
je
rcrl
mov
fisubl
bound
aaa
movsb
and
outsl
in
sub
xor
clc
adc
jo
pop
push
sarb
cltd
fistpl
rorb
lahf
lds
sbb
bswap
cwtl
stos
dec
xchg
inc
mov
cmp
sahf
mov
ja
movsb
ret
mov
inc
and
sub
popf
push
lret
and
push
sbb
lea
enter
fchs
push
push
dec
dec
adc
pop
pusha
push
xchg
aaa
cwtl
fstp
adc
mov
movntq
out
fs
cwtl
lods
push
orl
mov
adc
pop
repnz
fwait
sub
add
inc
outsl
mov
add
mov
xchg
lock
or
xchg
ss
aaa
jg
aad
popa
mov
mov
je
scas
dec
shll
push
cmc
mov
pop
rolb
cs
subb
out
mov
pop
fwait
loopne
flds
add
mov
imul
orb
add
mov
sub
mov
xchg
add
cltd
int3
inc
jnp
mov
stos
clc
add
jno
int3
inc
ficoml
and
dec
std
mov
and
mov
sbb
adc
adc
sbb
or
or
mov
test
arpl
push
xchg
in
cmp
and
pop
orb
nop
add
repz
rclb
addr16
adc
ss
test
xor
in
inc
out
lds
lods
test
aas
push
xchg
xchg
dec
adc
pop
mov
xchg
cmp
sub
out
cmpsl
pop
mov
push
or
nop
rep
xorb
aaa
add
clc
out
out
xor
stos
fcmove
out
sub
xor
push
xor
pop
add
push
popf
mul
shrl
cmc
data16
lea
movl
jo
rorl
mov
xor
cmp
hlt
insb
xchg
sub
dec
xor
adc
dec
mov
mov
push
iret
sub
adc
scas
inc
test
icebp
dec
pop
test
std
push
fstl
popa
mov
cmp
cmpb
in
mov
mov
fsts
or
sbb
or
mov
sbbl
mov
fidivrs
jb
push
shl
add
cmp
movsb
rorb
or
adc
outsl
xor
sbb
rcrl
mov
pop
push
cmpsl
dec
outsl
cmpsb
mov
lea
icebp
and
cmp
in
jl
stc
iret
in
pop
adc
shr
scas
mov
test
dec
pushf
pop
dec
lock
add
push
lret
sbb
and
dec
mov
lahf
pop
lock
jle
mov
loop
jp
inc
notl
mov
sarb
and
xor
mov
addr16
stos
imull
jmp
andb
jmp
leave
mov
mov
pop
pop
pop
cmp
push
lahf
mov
inc
xchg
and
xchg
insb
shlb
dec
inc
push
cs
stos
stos
sti
aaa
mov
aaa
or
inc
xor
sbb
cs
jge
les
pmuludq
pop
cmpsl
test
addr16
pusha
nop
out
cmp
adc
std
mov
pushf
fldl2e
fmul
mov
or
add
jmp
jno
inc
ret
fbstp
dec
hlt
out
jb
and
cmpsb
arpl
sub
cli
pop
data16
icebp
stos
jle
mov
imul
out
jmp
stos
mov
push
imul
arpl
dec
outsb
pop
add
arpl
imul
es
mov
push
cltd
cmp
daa
and
aad
popa
inc
jecxz
cli
jecxz
cmp
xchg
data16
dec
mov
shll
xor
lods
xchg
lds
roll
xchg
sbbl
fmuls
out
and
mov
call
cmp
iret
inc
and
add
push
lock
nop
stos
imul
adc
xor
je
movsl
sbb
or
subb
dec
pop
leave
popf
int
and
dec
fwait
jge
hlt
and
dec
dec
cmp
fisubl
inc
jl
out
mov
sbbl
push
push
mov
ret
aam
xor
push
in
stos
scas
jbe
xchg
and
jge
xchg
mov
adc
and
movsb
inc
pop
and
and
fsts
shlb
sti
daa
stc
repz
dec
pop
push
push
mov
inc
aam
dec
mov
cs
add
mov
leave
pushf
mov
inc
lds
mov
mov
mov
ljmp
test
div
xchg
rcl
jbe
jmp
repz
int
sbb
xor
xchg
das
insl
sbbb
scas
push
mov
shl
mov
pop
shll
fwait
pop
in
call
jno
loop
addr16
jecxz
ret
fstpt
lock
loope
fldt
mov
insb
push
out
mov
dec
bound
les
pushf
and
push
and
sbb
cli
dec
lods
mov
jge
pop
shr
and
fstl
or
aaa
dec
mov
mov
xor
mov
jae
jne
sbb
mov
outsb
aas
sbb
pop
aad
xor
jle
insl
in
push
aas
rorb
xchg
shrb
into
ret
mov
adc
dec
jl
inc
push
pop
fdivrl
fwait
inc
sbbl
push
fisttpl
ret
inc
aas
imulb
cmp
add
push
scas
cmp
mov
loop
aaa
mov
ud2
push
outsb
add
xchg
fisttpl
mov
xor
pusha
cmp
cmp
xchg
pushf
mov
jno
add
outsb
xchg
xchg
mov
mov
jmp
dec
jno
imul
aam
mov
push
xor
pop
pop
leave
push
mov
cmp
call
ficompl
dec
imull
jmp
cmp
fistpll
roll
mov
sub
dec
inc
cmp
sub
jbe
ss
mov
dec
aam
sbb
inc
cmp
fists
cs
stc
xor
jmp
sub
lahf
imul
push
fdiv
addb
pop
cmpl
clc
insb
fdivrs
mov
js
add
nop
jg
insl
cs
fisubrs
popf
cmp
cltd
adc
cmp
ja
sub
movsb
push
ds
lds
push
push
fisubrs
je
xlat
jnp
mov
scas
aas
jl
push
daa
push
fld
into
iret
loopne
ljmp
test
cmp
pop
testb
or
repnz
and
aaa
adc
in
jmp
scas
jns
pop
push
sbb
lock
into
jle
int3
cwtl
mov
pop
or
xlat
xor
pop
stc
xchg
shlb
mov
xlat
cmp
cmp
xorb
sarl
push
fisubs
outsb
fxtract
arpl
and
pop
cmp
scas
movb
lock
mov
cmpsl
nop
rorl
cmp
sub
pop
fstl
cltd
push
xor
imul
inc
lahf
lahf
hlt
out
testb
cmp
dec
roll
aas
in
es
mov
sbb
jae
push
popf
cld
push
cmc
mov
or
int3
bound
dec
call
lahf
add
mov
or
mov
pop
mull
pushf
cmp
or
daa
mov
int
outsl
gs
mov
shl
lds
mov
cwtl
push
push
mov
out
mov
scas
push
jne
out
mov
stos
mov
xor
fsubs
jge
xchg
xchg
mov
outsl
mov
repz
test
adc
or
icebp
dec
loop
scas
push
xchg
pop
xor
or
mov
mov
ljmp
sbb
push
loope
test
add
push
inc
mov
push
push
push
dec
adc
push
movl
xor
popf
cld
sbb
xchg
mulb
add
stos
cmp
add
insb
add
subl
ds
push
repnz
ds
out
jg
cmp
push
aam
loopne
add
aas
dec
pusha
or
pushf
shl
adc
pop
and
mov
cmp
jae
adc
lea
decb
int
pop
lods
lcall
lahf
scas
sbbb
test
mov
pop
mov
sub
jle
cmpsl
inc
rcr
adcb
addr16
out
roll
gs
addr16
jge
ljmp
test
sbb
mov
cwtl
jge
ret
mov
andb
nop
mov
push
mov
xor
int
inc
lods
pop
pop
or
loop
lods
jle
jno
inc
mov
jbe
sbb
aad
fs
lods
pop
aad
rol
movsl
shrb
dec
fmull
call
inc
xchg
xor
lods
outsb
adc
lcall
push
push
movb
push
sbbl
mov
or
and
std
inc
inc
cmpl
int3
aas
mov
aad
inc
or
loope
shrb
push
sub
sbb
and
inc
xchg
mov
mov
mov
and
mov
push
xchg
rolb
clc
pop
add
push
mov
sub
xlat
or
sbb
lea
rorl
test
add
sbb
pop
xor
jne
or
dec
aad
aaa
pop
jecxz
inc
aam
aaa
sub
sbb
les
sub
jno
cmp
outsl
nop
cltd
sarl
test
cs
rclb
and
movsb
mov
sbbb
mov
push
jae
pop
mov
adc
add
and
mov
lods
ficoms
dec
shlb
or
cmp
pop
iret
cs
imul
jle
jb
mov
aam
mov
and
push
cmp
jge
dec
inc
mov
and
inc
test
rcrb
out
lock
pop
bound
nop
or
aad
stos
dec
mov
mov
fisubrs
jg
jle
jne
test
pushf
sub
mov
clc
push
xchg
in
int
jno
inc
and
cmp
push
dec
cmp
cld
aad
in
or
push
cwtl
iret
xor
inc
stos
mov
aas
addr16
popf
mov
incb
das
inc
mov
movsl
pusha
sub
add
or
test
mov
addr16
mov
adc
mov
add
aam
or
icebp
ss
adc
push
jle
pop
xor
mov
stc
sub
mov
mov
and
lcall
aad
cmp
lods
sub
mov
sahf
daa
movsl
test
cmpsb
mov
and
shr
add
add
test
adc
aaa
cli
dec
jecxz
dec
lea
push
and
jo
sarl
add
xchg
shlb
and
jle
xor
mov
shl
mov
pushf
in
arpl
mov
lret
fiaddl
add
sbb
xor
inc
loop
jge
sub
cli
dec
adc
mov
das
mov
les
jp
repz
jae
xor
popa
sbb
sub
in
xlat
jno
das
fbld
std
lret
adc
lock
sti
repz
mov
mov
or
dec
sbb
xorl
jo
jmp
out
test
loop
pop
jmp
or
cmp
pop
mov
sbb
out
sbb
dec
cwtl
jno
fwait
jle
push
jmp
fcoml
fwait
and
aaa
clc
push
cmpsl
cs
mov
testb
pop
inc
popa
pushf
js
adc
adc
inc
imul
sti
mov
aas
sbb
cli
pop
scas
mov
mov
int
orb
fwait
scas
push
mov
add
jnp
mov
jbe
sbb
fdivp
mov
arpl
cmc
orl
mov
mov
test
and
lret
mov
add
test
pop
jmp
sahf
imul
or
mov
fwait
push
scas
mov
inc
fnstcw
mov
xor
dec
in
sbb
add
nop
dec
ss
frstpm(287
xchg
mov
xor
adc
push
push
lret
add
jl
cltd
gs
stos
xor
lret
das
shll
addr16
adc
jmp
ja
into
and
xlat
xchg
pop
jb
cmpsl
ljmp
lods
test
fs
test
and
repnz
xor
stos
dec
rcll
push
mov
push
in
ror
mov
mov
mov
fcoml
cli
cmp
xchg
jecxz
adc
inc
leave
xchg
addr16
imul
jbe
jmp
data16
stc
dec
lcall
cmp
mov
xlat
fstl
enter
sahf
ja
and
pop
cwtl
inc
jbe
les
not
and
lock
filds
test
inc
in
test
xchg
push
inc
lock
inc
aad
ret
addr16
dec
fnstcw
xchg
out
xchg
ljmp
and
inc
lret
cmpsb
jo
pop
gs
jmp
xor
pop
add
inc
mov
cmp
inc
mov
mov
aam
add
ror
lret
xor
or
fldt
popf
in
mov
arpl
dec
or
div
jbe
jecxz
insb
pop
aad
push
sub
inc
in
data16
les
outsl
push
and
aas
and
fsubrs
aaa
icebp
xchg
pop
jno
push
or
sub
icebp
pop
dec
dec
dec
cmc
sub
xchg
adc
int
push
imul
int
std
lcall
and
push
testl
js
mov
jbe
xchg
cld
sbb
mov
inc
mov
das
gs
cmc
dec
lret
cli
mov
push
cli
aam
test
xchg
in
pop
mov
loope
adc
mov
pop
loopne
fwait
or
xchg
pop
pop
add
jnp
dec
sahf
fs
jo
mov
mov
xchg
fcmovu
int
xchg
jae
jle
cltd
jb
cmpsl
cmp
inc
and
cmc
mov
pop
in
loop
lcall
and
add
xorl
jae
dec
out
push
imul
dec
dec
jae
fcomp
jno
call
adc
xchg
call
scas
out
xchg
jb
xlat
pushf
adc
rcl
cmpsl
out
jno
cmpsl
pop
mov
pop
subb
fimuls
xlat
ljmp
sbb
add
xchg
js
push
and
popf
arpl
mov
in
add
lahf
test
mov
add
pop
push
iret
mov
mov
dec
outsl
push
lret
mov
in
inc
dec
mov
aam
lcall
adc
pop
inc
jmp
and
push
jbe
popa
lods
test
inc
xor
repz
dec
aad
lock
add
pop
mov
aas
mulb
std
into
xor
or
mov
sbb
outsl
int3
push
xor
jbe
lret
lods
test
jns
mov
scas
popa
mov
es
cmp
sbb
jge
ds
mov
test
ss
dec
jmp
js
jge
and
pop
add
shl
test
scas
xor
sub
in
mov
cli
test
iret
jbe
loop
out
dec
mov
and
popa
test
fstl
inc
sahf
stc
loopne
push
or
lds
pop
mov
pushl
leave
out
push
pop
or
jl
mov
in
dec
jp
sti
inc
pop
adc
push
jb
or
dec
loopne
push
mov
cltd
outsl
test
mov
xor
enter
add
adc
adc
pop
or
mov
das
mov
mov
inc
cmc
inc
sbb
push
lret
cmp
push
jb
shll
inc
xchg
inc
int
pop
cmp
mov
jb
dec
cmp
cmp
inc
push
jns
cmp
imul
nop
ljmp
popa
dec
aam
push
xchg
cwtl
dec
xor
or
mov
inc
push
xchg
add
push
push
divl
fisubl
mov
loope
push
mov
jo
push
sbb
jo
xor
dec
mov
and
jb
aam
test
and
sub
mov
lret
lahf
inc
lds
mov
or
jnp
mov
enter
dec
xchg
enter
lret
ja
push
jae
jae
cwtl
or
sbb
pop
in
pop
les
es
sub
xlat
or
mov
int3
mov
mov
orl
sub
inc
jle
add
or
inc
ficompl
and
fbstp
stos
addr16
insl
sti
mov
jle
or
jae
or
mov
outsb
addr16
xchg
aad
dec
ret
lret
cmp
mov
dec
push
mov
je
push
insl
mov
push
testb
pusha
cmc
mov
or
popl
out
scas
stc
xchg
sub
push
add
or
push
mov
push
insb
fcoms
imul
cmp
movsb
xor
aaa
lods
lock
cltd
jnp
mov
sbb
pop
pop
nop
test
pop
xor
fisttps
inc
rcrb
push
mov
aad
push
popf
sbb
xchg
movsl
dec
xor
fwait
ljmp
je
jnp
gs
jp
pop
into
gs
addr16
jl
shlb
or
sbb
inc
xor
clc
cmp
mov
push
sbbl
xlat
xchg
popf
daa
sbb
fsubrs
lsl
sub
imul
movsl
data16
jo
mov
mov
sbb
imul
js
fsubrp
lock
mul
mov
dec
push
mov
leave
xchg
popa
in
push
shr
push
sbb
mov
mov
cmp
and
insl
in
sbb
add
enter
in
mov
ja
cltd
imul
jle
das
sahf
xlat
mov
jp
mov
loope
rol
mov
inc
jecxz
es
decb
dec
jno
pusha
movsl
rorl
push
test
adc
sahf
cmp
mov
insb
and
mov
outsb
lds
dec
sahf
pushf
aam
jecxz,pt
mov
cmp
arpl
sub
loope
es
or
leave
faddl
repz
push
imul
repnz
dec
cmp
cmpb
adc
les
hlt
lea
dec
test
adc
out
fcomip
in
push
subl
jmp
cmp
pop
enter
iret
push
int
pop
xchg
out
jp
sub
lret
andl
mov
and
and
loopne
inc
jl
jae
pop
fiadds
jp
leave
or
repnz
push
xchg
xrelease
mov
xchg
imul
jo
ja
mov
mov
mov
mov
adcb
mov
andnps
inc
mov
jo
cmp
out
xchg
xchg
mov
mov
pop
xchg
stos
xlat
scas
mov
mov
es
insl
stc
aas
sbb
jmp
aam
sahf
jle
xchg
pushf
mov
jae
pop
out
mov
sub
repz
imul
xchg
outsl
test
xchg
xchg
fidivrl
mov
add
mulb
pop
or
call
sub
xchg
lret
jns
das
cmpsb
adc
mulb
add
adc
lahf
inc
fcomi
mov
movsb
stc
inc
push
shrb
mov
mov
std
cmp
push
mov
mov
in
loopne
xchg
into
jmp
ret
sbb
mov
xor
xchg
adc
into
push
xchg
pop
mov
adc
add
sbb
popf
and
adc
inc
xchg
int
adc
and
inc
bound
mov
sub
rolb
and
xor
sub
fists
out
gs
cwtl
cmp
fimuls
lret
gs
test
cmp
lret
add
popf
dec
add
xchg
mov
jns
sbb
or
fs
lods
orl
inc
lret
test
shlb
pop
mov
push
pop
out
mov
nop
push
rol
jo
pop
out
adc
mov
test
and
movsb
and
movntps
pushf
scas
in
xchg
or
in
sti
popf
jecxz
mov
jns
das
pushf
aas
outsb
arpl
test
or
dec
ja
test
rol
xor
lea
in
popa
xchg
cmp
mov
mov
into
xchg
xlat
stos
push
and
sbb
aam
sbb
xchg
mov
movsb
inc
cmp
sbb
xadd
dec
adc
mov
push
fists
mov
inc
or
inc
xor
pushf
and
xchg
jge
jb
clc
jbe
pusha
hlt
aad
inc
sub
xor
xchg
fnstsw
cmp
jae
jbe
pop
int
es
xorl
pop
jge
jns
fwait
repz
and
data16
test
pop
jecxz
pop
inc
jbe
pop
aam
push
xor
mov
sub
dec
shr
lret
scas
lcall
or
popf
loope
adc
pop
dec
jmp
pop
pop
push
arpl
add
daa
push
cwtl
ret
add
cs
sahf
fstpt
and
pusha
push
sbb
adc
ret
pop
mov
shrb
lea
cmpsl
lea
andl
lahf
pop
or
and
sub
xchg
out
add
sbb
clc
fisttpll
cmp
adc
shrb
arpl
adc
nop
xor
cmp
loop
cmp
xor
mov
jbe
push
unpcklps
push
clc
mov
xchg
ds
popa
pop
jae
jmp
les
or
js
out
out
fmul
loopne
iret
xor
aas
cmp
lods
add
mov
lds
imul
mov
sub
test
in
jmp
fldenv
cmp
sahf
sbb
scas
js
call
push
sbb
lret
mov
fcmovne
cmp
dec
lahf
mov
adc
xor
lcall
and
ja
fstps
ljmp
mov
clc
mov
lret
xor
or
stc
orl
mov
adc
sbb
fmull
jbe
test
jns
sbb
mov
sub
dec
imul
popa
outsb
jnp
xchg
jo
rorl
fadds
cld
sub
add
xor
cmp
stos
int
mov
lods
repz
sbb
sub
pop
mul
push
stc
add
scas
ret
or
cmc
out
pop
mov
cmp
xor
lahf
xchg
fnstsw
es
cmp
cmpsl
andb
sub
and
dec
push
xchg
aas
shrl
sbb
insl
or
test
hlt
int3
xchg
imul
xchg
push
or
aas
add
lods
xor
cmp
mov
inc
or
xchg
and
pop
pop
or
mov
hlt
int3
pop
call
insl
call
mov
xchg
inc
rcrl
shlb
jne
stc
ret
lahf
movsl
cmpsl
xor
jae
lods
push
int3
mov
pop
jne
xchg
ds
insb
add
out
aas
add
rcl
outsb
cltd
xchg
add
fbld
add
shl
mov
or
sub
pop
imul
mov
scas
push
es
or
in
inc
sub
push
mov
push
arpl
mov
jb
or
adc
mov
xlat
add
adc
es
sbb
das
jae
stos
arpl
movsl
ret
cmc
pushf
xor
pop
pop
test
push
sbb
jb
vucomiss
push
cmp
fnsave
xchg
push
jp
push
fnstsw
mov
xchg
xchg
cmp
sub
dec
mov
or
inc
and
mov
enter
sbb
add
pusha
loope
cmp
shll
gs
sbb
mov
xchg
pushf
loopne
cwtl
aad
mov
out
lret
inc
adc
mov
sbb
xchg
insl
lods
mov
or
xchg
repnz
xchg
cmp
je
xchg
xor
jle
xchg
mov
dec
scas
push
jbe
sbb
mov
mov
xor
cmp
jbe
dec
sub
movsl
cmc
xacquire
inc
mull
jp
sbb
movsl
cltd
and
fisubs
jbe
mov
pop
jae
arpl
adc
jge
mov
nop
movsb
mov
repz
out
mov
xchg
test
sbb
ljmp
mov
andl
dec
inc
loopne,pn
jmp
or
xchg
ljmp
mov
movsb
sub
lods
dec
sub
push
cmp
sub
outsb
inc
push
insl
push
xchg
es
cmpb
cmp
cmp
sub
mov
mov
sbb
pop
push
test
adc
push
cmp
leave
fs
sub
xchg
add
inc
sbb
pop
pop
mov
mov
fcomi
fbstp
sub
mov
or
data16
pushf
mov
jb
sbb
jne
mov
in
cmp
mov
outsb
lds
sbb
in
call
in
pop
xor
lret
pop
cmp
into
lea
add
cli
push
inc
lcall
adc
or
pop
arpl
out
cmp
xchg
cmp
sbbl
cs
or
xchg
imul
mov
mov
arpl
hlt
push
mull
sbb
pop
mov
pop
push
rorl
xor
fwait
push
loop
insl
sub
lret
out
fimull
jno
pop
gs
jnp
js
scas
add
fcmovb
jmp
sub
mov
sti
mov
jo
cmp
mov
sbb
imul
or
cmp
shlb
insb
jne
add
aad
in
pop
mov
sbb
xor
gs
mov
mov
push
enter
pop
add
push
dec
push
aas
pop
popa
mov
lock
sarb
mov
dec
push
mov
loop
cltd
mov
and
call
les
inc
out
xchg
cmc
sbb
inc
outsl
add
call
aad
sbb
cmp
lock
cmpsl
addr16
test
dec
inc
add
mov
and
and
push
lea
shlb
dec
xchg
clc
fs
cli
xor
mov
fistpl
scas
mov
cli
hlt
xchg
es
imul
cltd
adc
inc
ja
orl
mov
cmpsl
jae
fs
mov
mov
hlt
repz
shrl
rorb
mov
into
lcall
scas
scas
mov
dec
jne
mov
pop
movsb
insl
jne
sbb
xchg
mov
add
jno
pushf
rcl
push
add
cmp
lcall
mov
add
jae
cwtl
in
call
and
inc
xor
xor
cmp
sub
jne
cld
daa
nop
pop
loop
outsb
scas
and
mov
push
or
in
and
test
insb
mov
sub
push
enter
push
push
mov
mov
cld
push
leave
fbstp
inc
das
loop
repz
call
jo
addb
mov
pop
movsl
ffreep
call
ficompl
sbbb
popa
loope
inc
dec
pop
jb
iret
out
aad
sbb
adc
sbb
dec
push
mov
mov
imull
ds
pop
pop
mov
fildll
popl
push
jp
cmovl
movsb
lret
subb
or
jmp
inc
inc
enter
pop
push
lock
daa
out
ja
fildl
lea
sbb
xchg
and
jg
dec
hlt
sbb
aad
jbe
inc
pop
scas
int3
jp
arpl
iret
clc
mov
incl
stos
inc
aaa
pop
or
push
xchg
adc
push
jmp
das
in
mov
jecxz
push
push
fimuls
out
loop
mov
adc
or
lods
mov
dec
and
daa
xor
cltd
adc
mov
scas
jne
dec
repnz
dec
xchg
push
popa
sub
js
pushf
sub
xchg
pop
sbb
ret
lock
and
pop
pushf
shll
jne
bound
stc
mov
mov
adc
mov
jecxz
push
call
xchg
stc
or
insb
into
xor
cmp
mov
mov
bound
push
adc
dec
xchg
push
aam
jns
and
or
xchg
gs
adc
dec
xlat
bound
mov
push
test
loopne
adc
lahf
mov
mov
mov
test
pop
call
xchg
dec
sub
sbbl
xchg
incb
adc
dec
aaa
nop
iret
mov
add
repnz
int3
push
cli
arpl
js
lahf
push
sti
mov
les
int3
dec
call
dec
pusha
mov
loopne
or
xchg
jmp
test
lea
jo
sbb
jge
ror
int
pop
pop
cmp
gs
daa
pop
mov
jns
cmp
mov
lods
scas
in
mov
mov
in
adc
inc
clc
popf
rorb
xadd
add
leave
mov
mov
xchg
cmp
sarb
mov
cmp
sbb
out
jae
clc
aas
push
lcall
mov
into
xchg
fisubrs
test
dec
sbb
ljmp
andb
out
test
outsl
ficoms
inc
cmp
mov
and
mov
lahf
outsl
or
lret
scas
inc
jmp
fprem
leave
cmp
mov
shlb
stos
mov
jno
or
les
nop
adc
int3
cmpsb
xor
repnz
jmp
shlb
mov
or
dec
push
psubusw
pop
jp
push
push
icebp
push
cmp
sub
cmp
das
imul
jmp
test
mov
jg
pop
outsb
imul
sbb
cmpsb
lods
adc
pop
les
add
lock
lret
mov
xchg
fsts
andl
dec
dec
xor
or
mov
mov
dec
and
pop
clc
aad
stc
cs
sbb
push
scas
pop
in
jne
adc
cli
test
fsubs
inc
and
jns
add
cwtl
sub
popf
popf
pop
ret
add
call
pop
adc
push
push
mov
clc
mov
mov
xor
sbb
mov
sti
push
je
xchg
or
or
add
lods
loop
cmpsl
test
xlat
pop
scas
ljmp
and
and
addr16
xchg
jns
aas
inc
jp
xor
or
jne
dec
std
pop
dec
inc
loope
mov
hlt
test
ja
in
jae
shrb
mov
pushf
cmpsl
enter
pop
sub
aad
decb
inc
jae
mov
and
sub
jp
addl
repz
dec
sbbb
popl
subl
repnz
sbb
pusha
iret
jmp
lcall
arpl
imul
xchg
cmpsb
out
fldenv
mov
add
cs
cmp
ljmp
ds
mov
xor
adc
xchg
ret
cli
rorl
adc
sub
add
cltd
inc
or
pushf
in
and
push
cmc
ja
jae
out
mov
jl
pop
test
xor
decb
push
std
mov
dec
stc
mov
int
adc
or
cmp
test
aaa
lret
cmc
adc
jnp
cs
sub
nop
inc
clc
stc
cmovne
and
jb
xchg
jo
test
inc
nop
cmp
dec
xchg
cs
mov
add
add
aas
push
dec
or
test
xor
push
inc
push
pop
cmp
dec
lret
inc
or
mov
mov
cmp
xchg
jmp
test
mov
pop
add
and
lods
stos
repz
mov
mov
fcmovnbe
adc
test
inc
jns
mov
testl
repnz
jl
sub
loopne
adc
imul
sti
mov
sub
inc
cld
push
mov
lcall
mov
xchg
dec
push
shll
rcr
mov
in
arpl
loopne
pop
rcl
clc
shl
mov
aad
gs
mov
mov
ror
movsb
int
out
shrb
jge
push
dec
scas
test
je
jb
popf
mov
pop
jecxz
push
pop
xor
lods
mov
test
cmc
jmp
push
pop
testb
outsb
dec
and
stos
ja
imulb
scas
dec
mov
popf
add
sub
test
gs
pusha
stos
popl
movsl
and
inc
jg
mov
push
jge
hlt
mov
add
ja
scas
leave
leave
lret
pop
dec
and
dec
xchg
das
dec
icebp
insl
arpl
add
xchg
sub
leave
jp
fidivrs
pop
lock
inc
lahf
out
xor
pushf
nop
outsb
lret
cmp
push
pop
sahf
mov
push
les
loope
pop
jge
les
pop
add
cld
sbb
sbb
cmpsb
cmpl
dec
daa
lret
lret
fdivs
dec
mov
bound
mov
lods
mov
int3
call
and
push
fiadds
daa
sbb
mov
jb
js
scas
mov
pop
aaa
mov
inc
xchg
lods
jns
aad
jmp
ljmp
push
cmp
pop
mov
divl
pop
mov
lret
sub
dec
pop
jp
jae
in
arpl
jecxz
and
jmp
jb
push
mov
add
push
sub
ds
ljmp
inc
and
shlb
and
int3
ja
rolb
jg
int3
fsubl
cwtl
bound
imul
cmp
push
push
andl
pop
je
add
lea
sbb
addr16
int
mov
pushf
dec
cmp
je
pusha
add
pop
test
mov
jnp
pop
std
xor
sub
clc
cmp
pushf
ss
sbb
mov
xor
popf
add
mov
push
mov
fwait
dec
jnp
lds
jns
inc
mov
scas
aam
xchg
adc
into
scas
xor
imul
stos
jne
ss
int3
imul
sub
ficompl
sbb
mov
jno
mov
add
sub
inc
inc
mul
cmp
pushf
dec
sub
jne
enter
push
sarb
aas
add
add
shll
ljmp
xlat
fst
inc
fstpl
test
push
sar
xchg
adc
fdiv
push
cmpsb
mov
inc
jb
xchg
or
fidivrs
js
pop
in
sar
push
mov
jb
fidivl
pop
fistps
adc
cmp
pop
mov
and
jge
dec
rcrb
std
out
push
add
mov
idivb
in
mov
outsb
xchg
sub
orl
mov
sub
mov
cwtl
mov
fsts
test
popf
mov
push
ss
sahf
jne
or
and
je
mov
ja
sbb
inc
xchg
xchg
sub
repz
scas
add
mov
fwait
pushf
sub
ficoms
mov
fcompp
aas
xchg
cwtl
ljmp
mov
pop
test
ss
mov
shlb
mov
push
test
sub
clc
movsb
xor
xchg
sub
imul
sub
mov
push
or
stc
daa
sub
xor
pop
sbb
test
xorb
mov
filds
xor
mov
dec
ret
adc
mov
mov
sub
mov
xlat
divb
fimull
sbbb
call
inc
inc
mov
add
push
push
jecxz
aaa
cmp
or
mov
push
pop
sub
mov
or
shrl
test
xchg
test
push
jle
push
jno
sbbb
add
and
push
les
mov
mov
repnz
push
and
test
outsb
ficomps
lret
jno
aas
add
add
sub
dec
aas
ret
loope
dec
xchg
icebp
mov
add
pop
and
jns
bound
dec
daa
pop
and
inc
mov
rcrb
in
lods
cmc
bound
aaa
ficoms
mov
cmp
daa
xchg
pop
jg
push
mov
repz
out
popl
pop
out
fdivrl
int3
mov
repnz
inc
adc
add
mov
sub
aaa
xchg
mov
scas
sub
cmpsl
adc
mov
jae
jp
cltd
mov
mov
cmp
hlt
cwtl
idivb
mov
rorb
fidivl
inc
lock
pop
add
xor
popa
xchg
adc
mov
sub
sarb
dec
cld
jno
enter
test
push
outsl
and
cmpsl
jle
cwtl
inc
sbb
xchg
aas
pop
test
mov
jno
mov
adc
xchg
addb
clc
sbb
xor
and
push
dec
and
cmpsb
out
pop
gs
add
test
sub
dec
push
pusha
adc
sti
jo
shrl
pop
out
sbb
sub
repnz
mov
pushf
xor
sbb
mov
xchg
mov
or
and
push
fimull
pop
ja
mov
sub
adc
jle
and
call
cmpsb
push
jbe
out
adc
mov
insl
lock
shrb
mov
ret
xchg
js
mov
mov
inc
daa
or
out
sahf
arpl
lods
insb
cmp
lds
dec
aad
mov
push
mov
movsl
cltd
sub
and
xchg
imul
je
cltd
xorl
xchg
add
lret
inc
pop
sbb
cs
mov
lock
shr
jecxz
arpl
jmp
adc
sub
cmp
mov
into
jno
lods
testb
and
popa
jo
and
cli
sub
cmc
dec
jmp
inc
loope
xorl
sbb
cli
dec
in
sbbb
nop
mov
adc
test
std
and
xor
mov
js
mov
add
leave
adc
sub
mov
adc
lret
jo
or
or
xor
mov
cli
xlat
dec
clc
pushf
enter
push
pop
cmp
mov
sarb
rorl
in
shrl
or
jnp
jl
adcl
negb
jmp
out
mov
sub
in
jl
rcrb
or
cmc
sbb
scas
out
fdivl
or
inc
sbb
sub
int3
addr16
sub
inc
and
inc
fldl
addr16
ja
mov
add
sbb
dec
int3
mov
mov
mov
inc
push
xlat
cmp
push
sub
pusha
sbb
push
jne
enter
pop
sub
mov
outsl
add
adc
add
jne
jmp
test
mulb
sbbl
push
ffree
arpl
or
push
rorl
jae
push
sbb
pop
stos
xchg
mov
pop
xlat
jo
dec
or
add
inc
les
inc
and
outsb
xchg
xorl
sub
inc
mov
in
shl
mov
mov
frstor
mov
stc
nop
inc
mov
lea
mov
es
test
dec
add
scas
and
pop
nop
insl
sahf
pusha
sbb
pop
adcb
in
cmp
pusha
push
hlt
add
pusha
pop
addr16
push
idivb
add
aas
movsb
ret
pop
sti
xchg
jge
fmuls
ret
mov
mov
xchg
jns
es
dec
push
xchg
mov
clc
push
movsb
insl
fs
leave
addl
imul
movsl
jl
roll
sti
je
daa
nop
mov
or
es
in
push
push
aas
iret
xchg
dec
out
mov
in
out
outsb
dec
pop
dec
fiaddl
adc
movsl
fldcw
cmp
test
mov
jno
jo
cli
add
sub
aad
dec
xor
cmp
add
inc
xchg
cmpsl
enter
iret
push
in
inc
push
adc
or
out
in
insl
ficoms
or
ret
jmp
xchg
sub
and
push
shl
mov
addr16
dec
sub
inc
xchg
cmpsl
iret
sub
scas
cmp
jmp
sub
imul
pop
ret
or
fistl
fisubrl
outsb
and
mov
imul
test
or
test
xor
in
mov
mov
mov
xchg
xor
pop
push
sbb
or
dec
sub
pop
in
or
push
add
push
pop
mov
push
into
mov
aam
dec
dec
out
int3
xor
sbb
inc
out
fldt
leave
ja
pop
lret
or
leave
mov
add
push
adc
out
sub
mov
xchg
adc
sbb
dec
xor
xchg
jecxz
add
or
ss
mov
cmp
mov
stos
pmaxub
inc
into
mov
notl
and
nop
fs
test
data16
jecxz
ret
cltd
mov
cmpsb
or
xor
lock
cmp
xor
add
sub
xchg
or
bound
mov
pop
imul
jmp
or
push
sbb
cld
add
scas
jecxz
jge
stos
outsb
test
rclb
lock
data16
and
es
sbb
out
fwait
mov
lods
mov
fistps
stos
out
mov
sbb
fiaddl
repz
dec
test
xchg
jb
mov
and
sahf
pop
in
jno
fnstenv
idivl
in
adc
cmpsl
mov
stc
stos
and
push
pop
stos
add
clc
scas
cwtl
sti
stos
or
dec
sub
mov
ret
adc
lods
lock
imul
jns
and
gs
cli
mov
sbb
mov
jecxz
sahf
add
cmp
jb
add
daa
shll
je
fstl
bound
lea
add
inc
jns
xor
sub
add
and
movl
leave
sbbb
mov
or
lds
cmp
ret
jnp
imul
out
data16
jne
cld
jmp
sbbb
add
fwait
dec
cmp
test
not
ret
negl
pushf
out
xchg
push
pop
cmp
mov
std
orl
push
test
cmpb
mov
dec
xlat
iret
jl
scas
jmp
push
repz
mov
shrb
loopne
inc
divl
in
mov
jg
push
pop
cmpsl
mov
xor
mov
or
add
push
or
pushf
cwtl
adc
mov
lock
insb
xor
cmc
scas
mov
jbe
xchg
mov
and
dec
mov
pop
xchg
aaa
adc
orl
push
jns
mov
pop
fbld
add
repz
je
repz
adc
jecxz
mov
cmp
and
xor
mov
jle
cwtl
pop
mov
nop
into
cmpsl
mov
adc
rcl
push
mov
outsb
insl
gs
mov
xchg
outsl
pop
adc
mov
sbb
fsubr
xchg
cmpsb
and
and
jno
test
ds
std
adc
fnsave
push
inc
or
xchg
mov
orw
sbb
adc
sub
addr16
mov
mov
cmp
sbb
les
stos
pop
cmp
add
fs
pop
mov
mov
jne
pushf
push
mov
add
sarl
push
int
jmp
xchg
and
mov
leave
mov
mov
cmpsb
pop
sub
mov
sbb
mov
push
mov
sbb
test
pop
imul
sub
sbb
inc
gs
inc
fidivrl
mov
sti
add
and
int
arpl
push
or
sahf
dec
pop
xor
shll
cwtl
jle
dec
dec
out
ret
icebp
shll
mov
cmp
xor
fisttpl
add
or
push
lds
sub
mov
mov
cli
push
shrb
mov
fxch
pop
sahf
dec
add
mov
outsb
dec
add
test
mov
inc
dec
xorl
mov
in
cld
enter
fwait
mov
and
sub
leave
xor
lahf
into
scas
mov
or
adcl
cmp
or
lea
xlat
subl
or
dec
jbe
or
adc
cwtl
sbbb
shl
fistpl
mov
mov
push
sub
scas
fcmovnbe
mov
sbb
shlb
push
rclb
jo
pop
xchg
dec
es
sub
scas
je
out
addr16
sub
jno,pn
jno
sti
ss
out
sub
cmp
lock
pop
les
and
inc
inc
inc
adc
add
add
outsb
and
in
jg
aad
test
add
fcomip
cmpsb
xchg
xchg
and
and
out
lret
push
data16
sub
pop
mov
sahf
mov
jle
lds
into
sahf
popa
divl
sahf
adc
mov
aam
sti
dec
lahf
push
out
xor
mov
sub
xchg
enter
aas
mov
lea
sbb
inc
pop
js
inc
dec
push
out
jno
dec
gs
fcompl
movsl
xchg
inc
ret
popa
push
sub
and
add
adc
rorl
and
pop
stc
adc
mov
cmp
ret
pop
cmp
xchg
enter
daa
lret
cmpsb
in
or
jb
pop
out
lcall
rorl
xchg
add
pop
pop
std
data16
pop
cs
mov
cmp
lcall
and
cmp
sbb
nop
or
hlt
daa
movsb
xor
test
fisttpl
mov
pop
mov
and
idivl
mov
xchg
dec
out
out
js
dec
xchg
or
shl
out
fwait
pop
sub
pop
das
push
adc
in
xchg
enter
and
and
lds
cmc
inc
xlat
leave
jns
pop
jecxz
inc
dec
adc
and
fwait
rorl
mov
jbe
add
push
rcrb
ficoms
mov
cwtl
je
xchg
and
dec
and
insl
sbb
fdivr
dec
imul
cli
bound
cmp
mov
cmp
sbb
xchg
and
inc
test
leave
idivl
mov
push
push
inc
mov
and
or
fwait
hlt
push
insl
mov
cmp
or
mov
ds
jbe
pushl
mov
pop
or
mov
mov
lods
and
add
push
dec
icebp
aas
pop
repnz
cltd
movsb
xchg
xor
push
xor
add
mov
and
loop
imul
aas
dec
imul
lods
popf
xchg
sub
jo
ss
add
scas
or
inc
mov
jl
add
mov
xchg
div
push
ficoms
jp
cmp
jae
push
mov
sbbb
cltd
leave
inc
out
mov
dec
mov
lret
jle
add
in
inc
ret
inc
mov
testb
or
inc
pop
outsb
nop
sbb
jo
aas
cmpsb
outsb
outsl
cli
sub
dec
ljmp
pop
adcb
test
pop
in
or
jecxz
out
popf
pop
pop
test
icebp
mov
xor
cltd
in
clc
out
insl
repz
pop
fldl
sti
mov
in
inc
inc
or
mov
js
and
stc
fldt
clc
insl
pop
add
pop
in
outsb
push
int
pop
add
adc
jl
xor
jecxz
jle
aam
mov
out
or
icebp
test
inc
js
jns
sbb
mov
push
xchg
ret
in
hlt
jbe
into
out
mov
xor
test
pop
sbbl
aad
bound
fisttpll
dec
inc
push
cmp
ds
xchg
fisttpl
sbb
fistpll
mov
push
or
hlt
push
cli
js
dec
roll
xchg
jle
lahf
push
mov
xor
and
cs
xor
jno
cli
lahf
fwait
stc
push
aaa
das
mov
xor
cmpsb
or
stos
lcall
xor
frstor
cltd
sub
or
adc
aaa
int3
cmpsl
pop
fs
imul
sarb
xchg
pusha
int
xor
mov
fbld
out
sbb
into
leave
ret
cwtl
clc
cmp
push
sbb
pop
movsl
shr
cmp
into
add
mov
sbb
mov
movsb
sbb
pusha
in
mov
rcrb
mov
inc
jle
mov
mov
add
repnz
in
ja
rolb
xor
mov
or
test
call
push
std
mov
adc
push
or
xchg
cmp
sub
jge
int
mov
mov
or
add
mov
pop
jbe
or
into
lods
push
push
push
in
cmp
mov
xor
push
fadds
and
mov
mov
int3
out
test
stos
insl
dec
lock
push
div
cltd
aaa
fistps
popa
call
jns
into
cmp
js
mov
push
push
xor
xlat
xchg
pop
push
inc
addb
sti
xchg
hlt
and
xchg
arpl
pushf
ret
iret
mov
sub
test
pushl
test
dec
arpl
sub
lcall
cmc
adcl
mov
mov
lods
push
sbbl
cmc
jae
popa
jo
mov
pop
fbld
pop
sbb
cmp
dec
inc
jge
xchg
ret
les
mov
jge
cmc
js
notl
pop
mov
aaa
lcall
test
scas
outsl
push
arpl
and
cli
loope
js
inc
mov
gs
mov
mov
sarb
data16
jnp
int3
subb
or
push
inc
rcl
cs
push
ss
pop
cmp
pop
cmp
ror
add
mov
xor
push
shrl
rcrb
cmc
mov
dec
xor
pop
pop
xchg
icebp
jne
pop
dec
sub
jnp
and
fs
inc
lods
popa
ret
cmp
mov
sti
pop
ljmp
push
aas
xchg
mov
and
sbb
mov
ljmp
jno
and
mov
inc
adc
sub
adc
jl
cmp
jno
xchg
sbb
mov
xchg
jae
stc
std
adc
jo
jo
add
sbb
dec
inc
xor
mov
and
popf
xchg
test
jg
aad
aad
out
and
adc
xchg
xchg
jbe
mov
and
sbb
insb
int
ja
jnp
adc
fstl
xor
imulb
fwait
mull
add
fwait
out
std
jae
jnp
fsub
mov
xchg
stc
cmp
sahf
into
imul
dec
xchg
mov
jbe
test
repnz
or
push
fidivl
and
mov
sub
dec
pop
or
inc
loope
subl
hlt
pop
or
test
int
ret
and
push
lds
xchg
mov
popf
push
xchg
stos
xchg
ds
fwait
gs
in
inc
mov
dec
xchg
inc
ljmp
inc
enter
lret
add
dec
xor
inc
loopne
fstl
pop
repnz
jbe
inc
pusha
call
ljmp
mov
jg
add
add
sub
lret
or
mov
mov
shl
pop
add
mov
nop
clc
dec
pushf
dec
xchg
mov
leave
daa
popa
das
lret
es
xrelease
lds
pop
into
ja
jmp
fwait
xchg
add
mov
in
rcl
sbb
mov
pop
rorb
mov
mov
popf
add
repz
clc
aas
pop
loope
frstor
inc
jo
outsb
jg
mov
cmc
sub
mov
je
adc
jbe
mov
inc
push
leave
mov
ret
mov
cmp
xor
scas
sub
mov
cmp
adc
mov
test
lock
push
jbe
mov
insb
pusha
fiaddl
dec
out
iret
cli
arpl
lods
into
ljmp
outsl
fs
pop
dec
push
call
add
cld
repnz
insl
sub
shr
lods
sub
jnp
sub
cmp
ljmp
mov
jle
jmp
adc
mov
stos
push
sbb
xchg
mov
mov
sbb
in
and
xlat
fwait
call
mov
mov
push
aam
cmp
or
jp
stos
into
sbb
ret
jmp
jb
stos
cmp
into
sub
fmull
cld
push
loopne
leave
lock
cmc
dec
cmp
inc
sti
cmp
jmp
fcompl
daa
lahf
pusha
mov
or
mov
sub
mov
int3
cli
push
xchg
aaa
pop
repnz
mov
push
add
dec
ds
fdiv
scas
cld
repnz
dec
subl
negl
enter
mov
das
imul
dec
popf
lahf
xchg
ficoms
pop
test
adc
sub
cmp
dec
push
cmp
ret
mov
clc
js
or
cli
xor
je
xor
sub
adc
ja
push
cmp
js
dec
popa
pop
or
cmpsb
mov
xchg
inc
test
dec
fiaddl
aas
lock
add
lods
les
sti
mov
or
lock
cmp
mov
mov
push
xor
movsl
das
mov
push
outsb
popf
sbb
ds
insl
and
cwtl
sbb
adc
xchg
xchg
cltd
dec
cmc
lods
insl
adcl
cmp
sub
outsl
add
mov
push
mov
jmp
inc
mov
push
push
lock
push
cli
imul
cld
sub
js
fistpll
dec
push
dec
inc
push
outsl
cmp
hlt
push
arpl
pushf
cwtl
add
repz
repz
test
ret
mov
stos
fistl
daa
dec
add
pop
mov
ds
sub
and
add
fisttpl
pop
mov
out
stc
cmc
xor
lret
stos
aas
inc
xchg
sub
stos
or
test
cltd
push
or
movsl
cmc
pop
lret
scas
sbb
mov
adc
jle
aas
xchg
sbb
nop
cmp
mov
dec
or
and
mov
dec
test
mov
mov
push
push
icebp
rcrb
fcoml
in
and
bound
test
cli
arpl
and
sbb
fbstp
sbb
in
mov
inc
mov
loopne
dec
cmp
addb
mov
fcmovnb
mov
insb
jmp
xor
mov
jns
ja
mov
pop
loopne
or
out
in
stc
nop
push
pop
ud1
test
mov
rclb
push
out
mov
lret
js
ss
jnp
xchg
adc
flds
scas
daa
out
xchg
imul
aaa
xor
jle
out
mov
push
pop
test
xchg
lds
fmul
hlt
mov
jbe
cltd
pop
dec
ljmp
dec
test
in
jno
in
jge
dec
jo
xchg
femms
imul
fimuls
roll
mov
push
inc
enter
fwait
lahf
movsl
add
mov
dec
jmp
add
ljmp
add
enter
inc
push
or
aaa
in
test
outsl
shufps
xlat
dec
loope
lock
inc
and
sub
cmp
mov
fisttpl
test
loope
mov
jo
shl
sub
xchg
stos
or
sub
xor
inc
mov
push
arpl
xchg
aaa
lret
jne
sbb
fcmovnu
fwait
in
cltd
cmp
jns
aaa
jno
pop
negl
enter
cmpsl
mov
call
shrb
xor
scas
push
adc
jle
and
sub
mov
into
and
push
addl
push
pop
and
cmp
sub
push
dec
lahf
dec
pop
fiaddl
or
out
jge
mov
sti
mov
je
sahf
mov
jmp
sbb
repnz
mov
sub
xchg
daa
sub
jp
ret
mov
outsl
rcr
inc
orl
sbb
inc
add
push
or
leave
loopne
mov
or
pop
jl
in
mov
cmp
mov
lret
pop
cli
jbe
dec
inc
pop
test
pop
fld
sti
jecxz
cs
mov
pop
sbb
or
cmpsl
clc
pop
setl
push
push
jno
stos
cmp
in
pop
mov
leave
call
or
xchg
ret
mov
ljmp
xor
int
mov
jmp
std
out
sub
loopne
push
sbb
push
rolb
fnstcw
mov
loope
inc
les
stc
mov
dec
repz
mov
and
int
xchg
add
sbb
jg
sub
stos
or
or
leave
xor
idivl
ret
inc
jmp
cmpsl
std
mov
adc
mov
les
lods
xor
jmp
out
loop
push
jecxz
aaa
out
dec
je
dec
pop
mov
bound
cmp
adc
int
xchg
jecxz
xorl
stc
cltd
popf
pushf
insl
adc
sub
jge
ljmp
lods
dec
or
xchg
push
mov
jl
orl
sti
jne
clc
xor
cmp
inc
inc
lcall
scas
or
push
xchg
push
scas
and
in
lret
sahf
push
pop
and
mov
je
test
repz
ljmpw
mov
add
pop
stos
js
out
adc
adc
daa
push
scas
or
inc
mov
sbbl
out
pushf
dec
adc
mov
adc
stos
lcall
jb
lea
xor
sub
inc
mov
dec
mov
pop
xchg
stos
imul
aaa
jg
rep
ret
mov
mov
sub
mov
mov
fidivrs
dec
shl
daa
dec
xchg
popf
aaa
jnp
xchg
mov
dec
push
cmpsl
and
cmpsl
inc
xor
repz
mov
dec
inc
leave
lods
rcrb
decb
mov
cwtl
les
xchg
mov
xchg
mov
ljmp
popa
es
shll
mov
xor
out
adc
push
xchg
pop
aad
mov
cmp
push
fldcw
dec
stc
or
stos
cltd
lcall
orl
loope
sub
push
cmp
filds
daa
cmpsb
adc
cmp
dec
fadd
nop
pop
lcall
insl
mov
cmpsl
add
dec
sbb
sbb
not
lahf
test
cmc
fiaddl
push
xchg
jbe
lret
xor
xor
mov
or
and
sbb
mov
pop
adc
ret
jmp
int
mov
mov
fsubrl
ljmp
mov
mov
sar
nop
leave
cmp
ror
cmp
fdivrl
aaa
loop
dec
adc
lret
scas
movsb
push
arpl
mov
cmp
push
cmpsb
jmp
ds
inc
or
pop
push
out
and
pop
adc
mov
cmp
jns
imul
sub
jmp
cmp
push
jo
ss
push
sahf
cltd
andl
faddp
mov
push
xor
inc
jo
popf
add
jge
lods
xor
xor
in
das
lahf
mov
push
lcall
or
push
sub
dec
jb
das
jns
js
jp
mov
test
jae
push
adc
leave
inc
cmpsl
pop
cmp
adc
ret
orb
cmpsb
lret
jo
dec
repz
jmp
out
and
cmp
mov
ljmp
inc
lods
mov
hlt
xchg
or
jbe
loope
fisubrl
push
jo
push
push
cmp
stc
frstor
aam
or
notl
lahf
loopne
push
fwait
lock
inc
pushf
insb
ret
xchg
sahf
aaa
xor
lret
and
push
dec
aas
pop
sti
push
scas
sub
cltd
cmp
loopne
push
mov
or
scas
cmc
xor
inc
js
dec
fcomps
sbb
inc
lock
jmp
ret
sub
cmpsl
hlt
dec
scas
aam
movsb
cmp
xor
pop
test
loop
cmp
and
pop
add
jo
ds
ror
mov
push
in
mov
jle
jge
fsubrl
dec
out
mov
xchg
mov
lret
xor
or
jns,pn
or
mov
aas
lret
mov
mov
shl
ljmp
inc
bound
mov
jg
cli
lods
mov
mov
push
xor
mov
cltd
in
and
notb
jle
mov
jp
out
das
or
fcompl
ljmp
add
adc
popa
clc
and
icebp
shl
jb
xchg
cmc
test
mov
jmp
js
dec
and
push
aam
inc
mov
mov
arpl
pop
cmpsl
aam
pop
pop
xchg
sub
movsb
cmp
cltd
mov
mov
mov
xchg
sub
sub
adc
pop
ret
test
adc
fnstenv
rorl
sub
ds
and
inc
inc
inc
push
sub
xchg
rorl
shl
in
adc
scas
cmp
imul
into
inc
mov
shll
daa
pop
mov
mov
fistps
addr16
add
dec
jns
mov
fwait
mov
and
lds
aaa
fimull
or
jle
and
push
mov
cwtl
adc
sbb
push
mov
or
and
jmp
popf
jle,pt
iret
fs
cmp
or
stos
ja
mov
pop
ljmp
inc
jbe
push
roll
sbb
lods
jnp
loope
dec
xor
in
xchg
or
dec
shll
insl
and
cmp
rcl
fwait
jbe
xlat
pop
scas
push
mov
or
push
dec
lcall
mov
adc
and
mov
add
push
sub
pop
call
loop
dec
adc
vpmacsww
sbb
rorb
into
mov
stc
movsl
adcb
call
pop
nop
pop
dec
cmp
ficomps
inc
push
jmp
inc
ror
movswl
sub
rorb
sbb
sbb
inc
pusha
add
xor
imul
jg
sub
push
mov
jle
dec
sbb
inc
das
je
xor
clc
ds
shll
cmp
in
sub
lods
lock
out
jmp
add
cmp
push
dec
scas
out
cmp
scas
mov
mov
cmp
sub
sti
cmp
rorb
in
push
mov
push
ret
or
adcl
notb
push
xchg
aad
sub
jl
push
lret
in
mov
add
mov
aaa
jmp
xchg
das
cmp
lods
mov
mov
or
in
sub
leave
loopne
or
mov
add
jbe
or
fiaddl
mov
and
stos
daa
in
std
aas
aam
or
frstor
ja
mov
out
sbb
mov
jmp
xchg
mov
sbb
fadds
popa
push
orb
aam
cmp
cwtl
call
xchg
jge
add
xchg
mov
cmp
stos
xchg
and
sbb
inc
cltd
xchg
and
jnp
jne
mov
mov
ret
inc
jl
jbe
ljmp
aam
inc
into
push
fs
push
ficomps
nop
subl
pop
adc
cmp
sub
cmp
cmp
inc
push
mov
insl
inc
repnz
pushf
shll
jge
lods
rcr
ljmp
and
cmp
jg
int3
mov
adc
imul
adc
sbb
or
pop
sub
mov
cmp
addb
out
pop
cmpl
stos
test
pop
xchg
or
add
push
mov
cmp
pop
mov
insl
pushw
or
jno
adc
dec
mov
test
dec
sahf
in
rolb
imul
pop
icebp
sub
or
pop
sub
mov
fsubs
mov
test
je
in
push
jbe
jo
stos
xchg
scas
cwtl
mov
mov
mov
lea
jp
mov
sbb
add
int
cmp
insb
sub
filds
test
mov
sbb
das
mov
and
pop
or
jmp
call
mov
pushf
xchg
sbb
jp
add
inc
pop
cmp
add
insb
cmp
mov
movsb
mov
pop
mov
dec
jg
das
mov
lahf
sbb
jno
in
jae
in
mov
cmc
xor
add
imul
and
enter
popf
pop
mov
mov
sub
cmp
mov
push
jo
adc
push
jg
push
testl
fs
sub
cmp
jno
shl
sti
mov
jl
test
add
sub
das
cmpsb
ror
scas
lret
repnz
pop
inc
mov
pop
jbe
shlb
arpl
adc
pop
and
sub
push
sub
mov
push
icebp
sub
adc
inc
mov
ljmp
push
xorb
jb
mov
mov
dec
cld
push
or
fs
cmp
mov
sbb
std
or
dec
icebp
out
lret
pop
push
add
cmp
add
xchg
cmp
xlat
aas
lret
popf
movsb
icebp
loope
cltd
pop
jnp
jmp
push
jmp
in
add
out
push
dec
mov
sbb
inc
add
cld
pushf
rolb
push
jg
lock
ret
pop
lock
js
lcall
sbb
cmpsl
arpl
ret
popf
push
mov
or
ret
add
pushf
scas
add
ljmp
push
mov
ljmp
out
cmpsl
inc
js
scas
and
and
aas
lods
push
popa
icebp
test
fistl
cmc
push
pop
mov
adcb
cmp
pop
int
loop
xor
mov
and
sbb
cmpsl
cmp
or
jnp
inc
out
and
addr16
and
push
and
add
add
push
push
insb
ret
add
lods
lret
cli
push
aam
pop
lret
cmp
out
das
lods
aas
push
fwait
lea
and
js
push
std
push
cld
or
add
outsb
sbb
iret
out
lahf
or
mov
fidivrl
xchg
test
inc
pop
xchg
cwtl
dec
mov
loope
add
loope
ja
mov
push
push
or
add
cmc
mov
cmovno
sub
pop
ds
cld
jne
mov
xchg
vunpckhpd
sbb
arpl
cs
test
and
add
shlb
mov
data16
mov
pop
lret
adc
daa
jo
sub
test
push
or
enter
sbb
lahf
lcall
sti
in
adc
lea
cld
aam
lahf
callw
xchg
push
mov
addr16
mov
mov
in
shl
lock
xchg
mov
das
lods
xchg
add
jmp
pop
sub
shr
cwtl
cmp
cmpsb
mov
js
popa
imul
cmp
sbb
lods
sub
gs
and
push
mov
dec
adc
or
loope
cs
fimull
inc
inc
cmp
gs
cmpsl
lahf
call
out
das
cwtl
cmp
adc
shrb
inc
or
jge
push
jb
int
out
addb
mov
jae
loope
stos
aam
jmp
das
cmp
arpl
nop
fnsave
and
xchg
hlt
imul
insb
sub
fstps
out
out
xchg
xor
iret
imul
add
jo
jno
test
xor
mov
xor
mov
sahf
int3
mov
sub
mov
adc
jnp
fnstcw
ja
xor
push
ss
ret
xchg
xor
js
xchg
add
pop
repnz
jle
insb
xchg
out
dec
inc
lret
idiv
bound
mov
inc
adc
xor
cmp
xchg
push
aas
and
loope
sub
cmc
add
aad
cmp
sub
aad
mov
mov
jb
sbb
es
jbe
mov
mov
fildl
or
lret
pop
or
sub
aam
mov
test
aas
inc
or
out
mov
daa
cmpsl
scas
hlt
scas
jae
leave
mov
mov
test
aaa
pop
sub
fdivrl
dec
xchg
xchg
cltd
adc
jae
call
insl
repnz
frstor
test
call
js
in
in
sbb
imul
adc
sub
xchg
es
pop
mov
push
maskmovq
mull
and
xchg
jne
inc
push
xor
inc
repz
mov
lret
dec
xor
popf
orl
push
loop
add
xorl
shrb
sbb
mov
mov
push
lods
in
inc
and
in
aam
lret
jge
or
cmpsb
cmp
rolb
es
push
insl
imul
std
cmp
jns
pop
dec
mov
cmpsl
aas
or
push
in
pop
inc
jo
sahf
out
pop
mov
dec
mov
add
cmpsl
fs
clc
jl
pop
ss
lret
popf
loopne
ljmp
fs
aas
rolb
andl
xchg
std
out
leave
jge
inc
les
fwait
pop
mov
xchg
add
rorb
mov
push
or
sbb
popa
cli
push
adc
or
mov
repz
inc
pop
mov
push
push
aaa
aaa
rorl
int
mov
push
popf
in
hlt
xlat
negb
pop
jns
ja
daa
clc
imulb
adc
ficoml
pop
sbb
enter
xchg
jae
addr16
into
pusha
xor
rcll
addr16
mov
and
push
sbbb
repz
jne
cmp
out
or
sbb
or
mov
xchg
mov
jg
push
std
stos
stos
in
aad
xor
sub
fnsave
jecxz
loope
mov
lahf
jmp
dec
xor
xchg
aas
in
pop
in
mov
daa
cmpsb
jecxz
jp
mov
mov
dec
fildl
cmpl
rclb
mov
rcrl
stos
addss
insl
pop
daa
adc
adcb
jl
test
cmp
push
imul
jge
xorb
add
lret
dec
cmp
dec
dec
mov
add
outsl
bound
rcrl
loopne
and
imul
mov
rorl
jnp
inc
lret
gs
xlat
movsl
cmp
popf
in
sub
and
int3
mov
xor
cmp
adc
jnp
jp
sbb
jp
xchg
fdivl
movsb
xchg
insl
stos
into
std
mov
movsl
movsb
push
or
clc
fdivrl
cmp
lods
mov
xchg
mov
dec
or
fcomip
mov
or
mov
xchg
push
mov
rcrl
mov
adc
pop
push
mov
inc
push
push
out
data16
adc
sbb
xlat
cmp
cmp
das
or
mov
mov
clc
outsl
mov
bound
inc
xor
push
out
arpl
mov
pop
outsb
push
xor
xor
xlat
repz
out
mov
dec
adc
ret
sarb
lds
xor
stos
pop
loopne
lcall
popf
lds
dec
xchg
lret
xchg
fs
fnstsw
out
mov
xor
add
xchg
mov
jns
imul
ret
cmp
mov
mov
xor
push
popa
mov
adc
mov
scas
popa
outsb
push
outsb
clc
inc
pusha
jb
arpl
or
xor
icebp
stos
mov
sbb
aaa
scas
sbb
int3
cmc
and
std
test
movsl
std
loopne
popf
in
fldcw
xor
rcrb
or
aad
mov
mov
push
bsr
popf
jne
cmp
mov
repnz
insb
mov
insb
call
imul
iret
xor
and
andb
inc
push
stos
xchg
enter
in
cld
int
insl
jge
in
cmova
inc
or
pop
sar
mov
ret
add
and
cld
mov
scas
ret
inc
push
xor
jo
js
mov
jns
sbb
mov
dec
popf
outsl
mov
mov
xor
roll
cltd
xor
int3
decb
or
icebp
imulb
lcall
loop
outsb
dec
or
mov
sub
adc
outsl
mov
in
inc
jle
pop
ljmp
pop
in
mov
sbb
and
and
add
in
arpl
inc
push
mov
psubw
jmp
lret
cmp
popf
inc
mov
jmp
mov
sti
fstps
mov
idiv
jl
sbb
jnp
repz
inc
jns
shrb
xchg
add
cmpsb
aas
aas
aaa
cmp
mov
bound
sbb
stos
pop
push
push
push
call
cmp
mov
icebp
adc
bound
out
inc
out
xlat
loope
push
shr
adc
repz
add
xor
and
lods
jmp
or
lea
xchg
mov
test
cmp
cmpsb
and
enter
out
pop
bound
bound
fimull
test
dec
xchg
js
mov
rclb
mov
pop
xor
push
out
cmp
int
push
mov
pop
repz
pop
cld
inc
pop
sub
test
pop
ds
fldl
pop
ficompl
push
xchg
inc
in
mov
popa
push
xor
jmp
stos
mov
pusha
test
idivb
or
loop
ljmp
mov
movsl
cwtl
shlb
lret
insl
adc
pushf
loopne
jecxz
loope
push
test
loopne
pop
push
popa
mov
sbb
dec
lds
push
out
pop
pop
mov
aad
xor
sbb
insb
push
ss
out
sbb
insb
mov
outsb
pop
cli
mov
imul
jae
xchg
fadd
insl
popa
inc
pop
test
pop
xchg
pop
aam
sbb
mov
jno
loope
lahf
adc
cli
mov
mov
cmc
mov
mov
stos
jbe
inc
mov
in
mov
cmp
jg
leave
test
arpl
xor
cmc
jb
or
shrl
jge
lods
cltd
dec
pop
mov
pop
pop
ffree
fs
cmpsb
mov
mov
lock
in
xor
cmpsl
dec
jp
mov
jo
xchg
rcll
sub
cs
in
test
adc
insl
insb
hlt
shrl
mov
stos
add
lods
sbb
mov
adc
jmp
push
sarb
dec
inc
xchg
sbb
add
scas
mov
sbb
pop
cmp
mov
mov
mov
es
pop
les
push
pop
xor
mov
bound
push
xchg
cmc
mov
aam
or
mov
add
call
nop
mov
and
repz
add
test
ret
arpl
mov
xrelease
xchg
loope
mov
jmp
push
push
dec
pop
bound
mov
aaa
lods
addr16
xchg
jae
inc
movsb
adc
adc
cmp
mov
pop
popf
pop
jecxz
add
lock
sarb
adc
repz
jge
and
lahf
test
lea
dec
jb
and
jb
mov
xchg
dec
imul
xchg
out
out
or
test
and
sub
or
mov
iret
and
lds
das
add
in
mov
push
lea
test
inc
adc
ja
insb
pop
cmp
jae
das
add
pop
orb
sub
mov
jg
inc
mov
dec
add
dec
push
dec
or
lcall
jl
mov
aad
mov
dec
bound
push
pusha
rcll
pop
repz
sbb
pushw
repnz
outsl
fs
loop
stc
das
stc
add
movsl
add
jnp
and
out
lds
shll
mov
cmp
add
stos
fsubr
roll
mov
push
dec
add
push
sbb
sbb
xchg
in
adc
and
fcoms
les
rclb
lock
add
xor
mov
mov
push
lcall
movsb
lret
push
sbb
push
pop
loopne
mov
and
dec
mov
mov
sahf
mov
outsb
enter
rolb
pop
popf
cmpsb
dec
arpl
or
cmp
jno
pop
mov
gs
js
and
push
push
or
out
mov
adc
sub
imul
or
push
cli
test
imul
or
jne
in
push
je
mov
fdivrl
xlat
and
inc
popa
pop
aam
inc
loop
dec
push
xchg
cld
jecxz
mov
or
xchg
mov
lcall
or
adc
test
xlat
lds
scas
insl
jge
ss
out
add
jae
movsl
fsubrl
in
aas
xchg
xor
insl
cwtl
test
push
shrl
ja
in
lea
popf
scas
mov
rclb
inc
cmp
mov
lock
sub
hlt
ss
sub
iret
mov
pop
xor
sub
insb
mov
std
in
daa
and
mov
sarb
testb
call
arpl
js
in
insb
xor
enter
into
xor
inc
inc
mov
lret
adc
or
xchg
mov
mov
xor
insb
arpl
mov
or
testb
ret
int
subl
adc
out
jae,pn
xor
je
cmp
mov
jno
adc
out
pop
inc
jb
js
subl
dec
out
outsb
insb
xor
scas
or
mov
mov
loop
mov
jnp
rorl
inc
push
dec
negb
jb
iret
bound
das
cli
loop
cli
andb
mov
outsl
mov
sub
addl
xor
sbb
daa
lea
add
jmp
sar
adc
cltd
outsl
or
pop
sti
dec
sti
testl
push
pop
or
mov
negl
jge
clc
scas
pop
xor
mov
jmp
in
sbb
mov
les
test
lcall
mov
jmp
ret
mov
lahf
out
inc
in
xor
cmp
dec
lods
lods
in
sub
inc
inc
outsb
cs
addl
lods
gs
mov
daa
mov
inc
push
cmp
mov
loopne
daa
fnsave
dec
test
scas
loop
lock
lret
es
mov
mov
xor
add
jecxz
xchg
pop
mov
dec
out
lock
jb
fnstsw
mov
jle
imul
xor
sti
jbe
fmuls
xor
out
loop
dec
cmc
ds
mov
lea
mov
in
hlt
adc
dec
pop
daa
dec
sti
fsubrs
int
scas
ret
mov
clc
in
fcmovb
sub
imul
push
insb
test
sbb
ja
inc
mov
shrl
or
cld
mov
push
repz
jmp
cltd
and
xchg
lods
push
mov
mov
pop
and
rol
in
imul
orb
or
lock
daa
jmp
inc
cltd
mov
divl
jle
cmp
add
sbb
cmovbe
mov
dec
jmp
testl
pusha
cltd
jbe
push
leave
das
push
mov
imul
pop
int
adc
loopne
cmpsb
or
add
andl
mov
fs
mov
jns
xchg
dec
cmp
adc
shl
xlat
pop
xlat
xor
subl
js,pt
mov
icebp
ror
mov
arpl
mov
loopne
leave
inc
cld
dec
lcall
scas
icebp
mov
stos
mov
test
fildll
scas
outsl
add
add
adcb
xor
icebp
jecxz
jo
mov
and
aam
xor
aam
rcr
cmpsl
fidivrl
pop
adc
je
iret
jg
cmpsb
mov
std
cmpsb
cs
dec
or
dec
aam
stos
add
and
pop
in
and
inc
xor
imul
cli
fnstenv
loope
xchg
cmpl
pop
mov
into
sti
add
adc
cli
daa
push
push
lahf
and
aas
cmp
sbb
xor
in
push
flds
mov
adcl
or
cmp
or
stos
xchg
test
mov
add
pop
popf
or
push
jae
add
leave
scas
push
xchg
jp
mov
inc
loop
lret
lahf
test
pop
scas
and
push
push
popa
mov
xchg
fstpt
jp
xchg
imul
std
xchg
jg
stos
or
push
sahf
mov
int3
cltd
pop
push
popf
in
mov
std
mov
ret
fwait
mov
loope
or
inc
lcall
test
loop
ud2
jge
pop
inc
mov
cwtl
icebp
outsb
into
mov
adc
xor
mov
clc
cmp
inc
movsb
jno
push
mov
shll
push
cmp
xchg
jne
jbe
or
push
xor
in
popa
popa
out
push
insl
xchg
sub
mov
das
imul
loop
cmp
cmp
imul
mov
cmp
iret
stc
pop
mov
out
inc
aam
outsb
fs
loope
stc
jno
cwtl
cld
push
mov
mov
scas
adc
push
pop
jp
pop
dec
adc
clc
call
and
xchg
cld
sub
mov
add
dec
loop
jnp
push
enter
repz
dec
jmp
pop
ret
lea
push
add
aad
jge
mov
and
cmp
clc
xor
dec
in
leave
xor
add
pop
sbb
pop
roll
adc
push
sti
dec
push
psubusb
decl
cli
fadd
jge
sahf
lret
pusha
repz
inc
jns
imulb
les
lahf
test
mov
scas
inc
pop
stc
je
sub
cld
add
bound
mov
int3
inc
or
cmp
ffree
push
es
push
xor
mov
mov
xchg
or
test
das
aas
xchg
sbb
jo
imul
testl
push
fnstcw
imul
adc
cmp
sub
or
pushf
out
in
jbe
jnp
je
add
push
xor
loopne
add
mov
jl
fldpi
mov
mov
jg
cli
scas
inc
add
imul
data16
push
or
hlt
mov
enter
push
xorl
push
mov
push
push
mov
push
cmpsl
int3
and
hlt
adc
movsb
adc
mov
stos
cmp
mov
add
jge
test
pop
jns
mov
push
mov
nopl
inc
loopne
enter
push
xchg
lret
mov
shlb
daa
dec
div
push
jb
aad
jg
sub
or
loop
mov
pop
je
leave
xor
jnp
js
js
sbb
dec
stos
out
lcall
loop
xor
mov
ds
pop
arpl
mov
pusha
rol
insb
or
pusha
xchg
cmc
add
ret
mov
dec
jecxz
mov
jle
aaa
aad
pop
mov
mov
pop
lcall
sbb
ret
aam
push
shr
sub
pop
inc
add
sahf
sarl
stc
idivl
enter
outsb
mov
pop
dec
and
ret
mov
ret
adc
testb
jl
mov
shl
rolb
or
sbb
adc
adc
rolb
cmpsb
mov
cmp
loop
jb
and
pop
cmp
adc
inc
loop
adc
idivb
xchg
aas
outsl
scas
mov
pop
leave
adc
stos
cld
inc
shl
cli
xor
xor
stos
and
leave
push
fs
fcomps
iret
sub
cli
xor
sahf
adc
les
push
jecxz
jmp
dec
push
into
stos
out
mov
gs
inc
sub
insl
dec
int3
adc
jae
cmp
cmp
dec
arpl
cmp
out
sti
push
sbb
mov
cmp
mov
xchg
fwait
sbb
rorb
hlt
mov
ficompl
add
jno
mov
cmpsl
aam
mov
outsl
pop
icebp
enter
rcrl
push
popa
xchg
daa
and
mov
xchg
je
mov
sbb
test
jle
pusha
fcmovnu
lret
loope
xchg
hlt
jb
roll
xor
call
inc
nop
int3
insl
push
xchg
xor
sbb
xchg
sub
push
jmp
testb
cmpl
popa
jo
or
push
jp
mov
insb
in
out
outsl
pushf
test
adc
cmp
test
mov
inc
inc
pop
sub
ficoms
xchg
mov
out
push
pop
mov
or
xchg
mov
les
insl
xor
scas
gs
or
outsl
sub
xor
outsl
push
ss
jmp
add
add
cld
ljmp
idivb
arpl
sub
jge
xchg
sub
ljmp
jno
pop
in
lret
popf
iret
enter
iret
lret
inc
lahf
lret
mov
add
or
cmp
jne
nop
pop
fldenv
ret
mov
mov
outsb
dec
cmpsb
loope
dec
aad
leave
fbstp
sbb
shl
jg
mov
sub
scas
icebp
xlat
sahf
rcr
arpl
lahf
push
cld
in
or
cld
xchg
test
jg
cld
ret
jecxz
lock
xchg
enter
mov
or
dec
push
push
push
outsl
inc
test
pop
cltd
add
cmpl
fcoms
adc
into
cmp
outsl
push
push
outsb
out
aad
mov
repz
inc
scas
loope
add
adc
pminsw
rolb
outsl
sti
subl
xor
jle
cmp
cmp
push
pop
sbb
and
dec
mov
xchg
jmp
insb
pop
jbe
mov
decb
faddl
xor
jp
sub
mov
es
icebp
jbe
ja
add
aaa
sub
stc
jo
push
mulb
push
jl
pop
je
push
rcl
pushf
mov
inc
pop
scas
adc
and
cmp
mov
jae
mov
add
sub
mov
les
pop
lods
mov
jl
or
dec
pop
jb
into
sub
shlb
mov
sbb
nop
mov
pop
and
inc
sti
push
loope
dec
push
sbb
test
push
je
aaa
xchg
jae
adc
lret
test
ret
int3
jbe
jb
enter
add
push
inc
das
cmp
repz
fidivl
addr16
xchg
lahf
sbb
adc
in
int
outsl
movsb
lds
out
fmull
sbb
xchg
icebp
add
sub
popf
sbb
mov
cli
shlb
shll
lret
fidivrl
push
lahf
scas
mov
fisttpl
cli
mov
and
dec
daa
and
xorb
int
sub
sbb
add
dec
jge
pushl
adc
push
subb
adcl
or
adcb
pop
std
xchg
adc
loop
data16
fs
mov
ficoml
int
push
or
xchg
gs
repnz
pushf
mov
pop
daa
lods
enter
rcrb
sub
dec
add
cltd
fistps
sahf
repnz
jae
enter
aaa
jg
movsb
jg
and
jns
mov
dec
adc
rcrl
in
mov
jbe
lods
sub
sti
mov
inc
out
mov
jge
mov
xchg
pushf
fmull
fstpt
jns
cmpsl
jle
outsb
cmp
scas
sbb
fidivl
and
dec
jns
enter
xor
in
insb
cmp
adc
and
jae
fistps
scas
dec
pop
das
lods
ficoms
icebp
jne,pn
cmp
repnz
cmpb
mov
je
into
div
aas
xchg
pushf
cmpb
stos
or
or
jecxz
mov
stos
andl
popa
int3
hlt
mov
jne
and
sbb
enter
decb
orl
mov
mov
mov
or
pop
fldcw
je
out
and
mov
add
sbb
mov
in
test
push
das
jl
or
aaa
push
mov
and
xchg
mov
int3
xchg
and
push
roll
call
or
pusha
mov
pop
jae
jl
insl
addr16
out
sub
js
bound
mov
sub
inc
sbb
mov
sub
adc
and
shrb
clc
pop
pop
das
fmuls
imul
adc
mov
subb
cmp
out
pop
sar
dec
xchg
cmp
and
mov
mov
enter
mov
hlt
addr16
dec
lret
dec
dec
sbb
mov
insl
cmp
hlt
es
and
out
cmp
dec
pop
adc
outsl
or
jns
or
fdivrs
jge
stos
cmpsl
lahf
fstpt
push
mov
push
xor
mov
lods
cli
testl
out
test
pop
sbb
xor
push
outsb
lea
xor
push
mov
inc
jle
or
icebp
mov
outsl
mov
dec
add
rclb
inc
in
mov
push
inc
xor
mov
or
stc
jo
adc
insb
sub
aas
test
push
xor
push
jne
int3
jno
pop
mov
jnp
mov
jle
xor
and
mov
dec
es
movsl
fcomps
ret
mov
cmp
pusha
pop
jno
pop
loopne
push
out
lret
insb
mov
sahf
inc
and
out
add
push
xchg
push
dec
and
xor
inc
andl
sbb
fpatan
pop
push
or
mov
mov
inc
data16
enter
cmc
add
les
push
cmp
dec
jg
cvttss2si
mov
subl
roll
into
imul
clc
mov
fmulp
jge
add
jecxz
push
jnp
pop
dec
mov
shl
add
cmp
jg
aas
mov
aaa
xchg
adc
clc
jno
and
addr16
mov
fsubrs
repz
lret
jg
jne
dec
fwait
ds
pop
sub
aaa
xchg
jge
loope
cli
test
cmp
xor
pop
xchg
dec
push
stc
lret
xlat
loop
mov
sub
xchg
jmp
push
mull
aam
push
pop
sub
mov
ret
inc
test
mov
sbbb
push
inc
mov
jno
mov
or
ficompl
mov
xchg
cltd
xor
nop
adc
pushf
mov
push
jl
or
pop
loope
push
pop
dec
repz
loopne
shll
in
lcall
in
fstps
aas
pusha
lea
flds
fmuls
jle
inc
cmp
int3
inc
scas
inc
push
mov
push
jns
dec
dec
orb
add
in
inc
jge
popa
cmp
pushf
push
sbb
xchg
push
pusha
fdivs
outsb
sbb
xchg
push
lock
and
pop
mov
iret
inc
cld
and
jae,pt
pop
sarl
dec
ret
add
mov
aaa
push
popa
sbb
je
and
push
jno
stos
or
femms
xlat
jl
lahf
test
or
push
xchg
clc
ret
loope
or
sub
push
mov
call
xchg
in
test
ret
sahf
push
loop
test
popf
add
movsl
adc
scas
adc
das
xchg
or
sub
xchg
cld
in
insb
aaa
mov
fcomps
jle
add
mov
scas
cmc
les
mov
testb
aaa
mov
stos
xchg
sbb
movsl
jp,pt
stc
out
imul
mov
push
adc
mov
fadds
loopne
fnsave
xchg
add
sti
cli
popf
mov
out
in
or
out
iret
add
js
xchg
pop
xor
mov
out
cmpsb
pushf
lds
dec
mov
insb
rcll
aaa
jno
fnsave
cmpsl
inc
mov
cs
stos
dec
jg
push
das
xchg
cmp
and
pop
pop
push
insb
stc
shll
outsl
jnp
xchg
cltd
imul
and
js
adc
xchg
shlb
imul
pusha
cltd
cmpl
mov
fcoml
testb
jle
scas
pop
jmp
mov
mov
jb
repnz
addr16
adc
cmpsl
lea
sbb
repz
cmp
and
sbb
in
sub
sub
pushf
cmp
dec
not
aaa
fcomps
push
inc
pop
inc
dec
pop
jno
push
jecxz
stos
dec
gs
or
lea
stos
test
push
jp
push
aad
xor
repnz
aam
and
repz
cld
inc
lock
ljmp
sbb
incb
cli
das
scas
lock
adc
add
mov
jg
lock
loopne
mov
add
adc
imul
mov
mov
xchg
xor
lock
or
sub
cmpsb
repnz
sahf
lea
loop
test
setns
dec
jno
imul
movsb
addl
outsl
jle
sub
cmp
hlt
cmp
repnz
rcr
and
movsb
lret
push
sub
addr16
enter
push
cmp
dec
insb
notl
ljmp
iret
ret
mov
jno
aaa
std
int3
sub
pop
inc
sub
sarb
mov
dec
in
inc
jno
add
jns
cmpsb
add
inc
aam
mov
cwtl
mov
mov
int
outsl
dec
les
xor
cld
xor
and
pusha
push
cmp
add
inc
repz
sub
inc
xor
jg
sti
filds
das
or
add
mov
cs
lods
lea
stc
std
add
mov
jecxz
mov
jmp
xchg
mov
int3
or
call
add
pop
insb
leave
and
insb
xchg
dec
jp
fcoml
push
test
jle
and
add
into
dec
lahf
cmp
push
sbb
sbb
sahf
push
dec
push
scas
xor
ja
hlt
es
sahf
inc
pop
loop
test
sti
jbe
sub
in
icebp
add
add
dec
fsubl
pop
lret
mov
test
in
cmp
add
imul
inc
dec
in
xchg
mov
imul
cltd
cld
sub
jmp
popa
into
stos
adc
out
push
data16
jg
pop
push
fildll
push
or
dec
movb
cmc
lret
and
xchg
xchg
stc
aaa
xchg
sbb
adcb
imul
push
jge
ds
inc
std
jo
aas
or
nop
xor
jmp
fisttps
rcrb
sub
arpl
incl
int3
or
cmp
mov
mov
jle
sbb
fistps
push
ljmp
fadd
and
sbb
adc
pusha
lahf
and
loop
and
lea
mov
mov
lret
jmp
bound
push
pop
cwtl
pop
shrb
call
inc
inc
in
mov
popa
adc
jmp
enter
movl
xor
inc
cmp
sbb
mov
sub
mov
mov
xor
lea
jp
and
aad
sbb
arpl
cld
loop
sub
enter
xchg
cltd
je
insb
pop
dec
xchg
adc
out
cmp
das
pop
xor
inc
pop
mov
mov
xchg
cmp
dec
jne
mov
mov
inc
sahf
adc
push
xor
call
stos
rol
or
jp
icebp
imul
js
arpl
repz
jo
cmp
and
outsb
add
jecxz
dec
fwait
js
stc
xchg
xor
ljmp
into
xor
popf
sbb
cmp
int3
cs
imul
addl
cli
test
pop
cmpsb
dec
sbb
or
push
int
outsb
dec
mov
stc
add
idiv
and
orl
cld
into
cmpsl
jg
stos
lock
xchg
sarb
outsl
ret
push
mov
movsl
hlt
ds
sbb
push
xlat
lock
xor
cld
gs
sbb
xor
cmpsb
mov
jmp
and
xor
jg
movaps
into
xor
jne
inc
nop
sbb
jp
std
xor
push
pop
or
repz
sbb
adc
or
dec
aad
dec
fistpl
repz
jo
adc
mov
pop
or
add
push
jb
daa
fadds
mov
sahf
jmp
inc
or
mov
mov
jno
pop
cltd
clc
outsb
rolb
mov
sub
mov
jmp
ja
cli
cmp
andl
jle
mov
mov
mov
add
mov
jmp
mov
insb
sbb
xor
aaa
add
leave
iret
inc
or
push
jo
pop
inc
or
or
les
push
pop
push
sbb
imul
jge
xchg
decl
add
sbb
add
out
jne
mov
sub
mov
cmp
push
scas
adc
fists
fnsave
mov
sti
fwait
xchg
aaa
xor
push
jns
aaa
out
xor
push
mov
aam
and
xchg
mov
imul
xor
sbb
xchg
inc
cwtl
and
js
fsts
cli
mul
push
sarl
mov
std
mov
sbb
xor
fnsave
xchg
fs
fsubrs
pusha
out
mov
mov
sbbl
inc
mov
jmp
pop
cmp
and
dec
or
cld
jecxz
aam
and
push
cmp
imul
push
cwtl
aas
push
pusha
jne
cli
hlt
cld
std
daa
rorb
adc
or
sub
mov
cmova
inc
pop
cmp
xchg
negb
add
das
push
fimull
enter
pop
dec
out
xchg
into
pop
test
in
outsb
imul
pop
sti
loopne
jge
dec
fdivrl
call
cli
loopne
mov
mov
pop
lea
les
ja
call
xlat
int
and
xchg
sti
sbb
xchg
mov
in
mov
insb
dec
subb
out
jae
adc
enter
stos
inc
fldenv
sbb
int3
pop
mov
popf
stc
cmp
xor
arpl
sti
sub
xchg
mov
jbe
das
js
inc
xor
xor
adc
add
iret
sbb
jmp
push
inc
inc
jnp
dec
in
mov
and
adc
dec
icebp
inc
cld
push
test
fcmovne
pop
stos
mov
push
rorl
addr16
jbe
xlat
fisubrs
push
sub
xchg
insl
outsb
jle
adc
or
xchg
cmc
sbb
fldcw
movl
clc
outsl
pusha
sahf
push
add
icebp
test
cmp
fimull
xor
xorb
mov
es
cmpsl
sarl
push
outsb
rcrl
pop
sub
mov
jbe
push
cmpb
rcrl
fadd
sbb
orb
inc
mov
mov
push
pop
add
shrl
lea
push
lds
xchg
sbb
mov
sti
jle
dec
push
jecxz,pn
lret
mov
dec
inc
add
adc
cmp
shll
push
ffree
enter
lods
jbe
stos
stc
mov
in
xchg
out
mov
hlt
xor
xchg
lcall
push
fnsave
out
cmp
add
sub
scas
adc
in
imul
pop
xchg
das
inc
push
lds
xchg
pop
push
outsb
dec
repz
cmp
cmp
add
jno
pop
clc
xchg
or
jmp
pop
inc
and
dec
mov
imul
mov
out
loopne
xor
aas
int3
mov
test
cmp
xchg
push
add
dec
out
sahf
pop
mov
mov
in
inc
cmc
out
sbb
xor
and
daa
xor
push
mov
mov
leave
cmp
cmpsl
xchg
dec
add
cmp
in
push
jbe
inc
pop
sbb
mov
insl
adc
mov
enter
dec
push
leave
ljmp
push
popf
hlt
sub
je
fldcw
outsb
popf
test
scas
pop
push
lock
mov
mov
pushf
inc
jns
xchg
aad
xchg
int
sbb
jns
loope
cmp
xor
inc
push
in
inc
dec
pop
inc
int
nop
inc
in
scas
mov
mov
fstps
or
lock
loop
decb
cmp
loope
sbb
lods
shlb
out
fcmovne
or
cmp
scas
adcb
subb
sbb
or
pop
push
dec
es
sbb
insb
outsb
cmp
arpl
fists
jae
lret
shrb
test
subb
pop
push
adc
mov
inc
xchg
idivl
cmpsb
jl
pop
sarb
sub
xchg
data16
nop
popa
push
movsl
sahf
xchg
fiadds
stos
jb
push
outsb
inc
add
ja
popf
jno
test
js
je
xchg
cltd
dec
dec
jbe
push
data16
and
cwtl
sub
andb
push
cmp
jb
lahf
sbb
jg
dec
sub
cmp
mov
faddl
mov
jg
frstpm(287
sub
sbb
xchg
cmp
xor
lahf
in
fcmovbe
inc
out
fisubrl
jne
lahf
xchg
xor
pop
add
popf
lds
ds
scas
inc
lods
imull
mov
es
add
xor
sarb
sub
pop
pop
fmulp
mov
mov
dec
cmp
mov
test
ds
sbb
enter
or
xor
or
xchg
dec
xchg
out
lods
pop
jbe
loopne
and
sahf
fsubl
shlb
imul
or
push
xchg
xor
xchg
and
xchg
sub
fimull
ja
enter
inc
or
jnp
lcall
loop
dec
lock
dec
adc
dec
xchg
int3
add
lods
push
inc
xchg
out
sbbl
push
xchg
xchg
sub
out
cmp
scas
and
xchg
in
xor
int3
add
lock
sahf
out
mov
mov
dec
ss
dec
movl
add
sub
cltd
ror
dec
xchg
pop
sbb
jae
aam
jg
ret
add
sub
popl
int3
popf
pushf
jle
xor
mov
insl
inc
sbb
jne
pop
insl
lret
imul
add
cmpb
vsubsd
mov
shl
cwtl
lahf
in
outsb
fidivrl
xchg
repnz
shr
call
cmc
pop
aaa
pop
mov
inc
mov
xchg
jl
ljmp
push
mov
in
xchg
test
and
and
xchg
xchg
sbb
stos
jo
jmp
adc
aam
cli
ret
test
test
mov
stos
xchg
in
je
rorl
imul
cwtl
inc
dec
dec
jo
jmp
test
stc
mov
mov
and
or
mov
sbbb
add
mov
adc
jb
xchg
xchg
sub
test
cmp
mov
sahf
inc
mov
in
add
sarl
loop
and
in
mov
add
mov
xor
ljmp
pop
mov
insb
pop
or
sub
lods
inc
cmc
xor
xlat
pushf
shll
push
push
shrl
insl
xchg
push
and
inc
lods
mov
pop
push
adc
hlt
popa
jmp
roll
insl
clc
cmp
pop
sub
lret
mov
jns
lahf
js
push
lods
cld
fisubl
pop
negb
push
and
repz
into
fmuls
fnstsw
test
test
sub
icebp
in
mov
std
rcrl
insl
clc
aas
push
mov
cld
out
mov
movsb
lahf
enter
lret
lea
lea
insb
mov
ds
push
pop
adc
lcall
in
pop
js
add
mov
sub
ds
test
mov
out
andl
rep
or
dec
icebp
lods
scas
pop
mov
repnz
add
and
aad
mov
rolb
xchg
sbb
mov
and
and
jp
push
mov
pop
sub
lret
shll
mov
push
in
jne
repnz
adc
test
movsb
push
inc
std
xchg
stos
mov
sahf
pop
cltd
cmpsl
fsubrs
test
push
test
cld
or
dec
lods
pop
jecxz
inc
push
mov
adc
mov
push
out
jae
xchg
push
fsub
push
mov
sbb
sub
ljmp
icebp
jo
xor
pop
insl
and
adc
xchg
jo
fisttps
or
fstl
ja
dec
mov
push
xchg
sub
pop
in
dec
orb
outsl
repnz
loope
test
cli
stc
test
arpl
outsl
xchg
xor
sti
lods
dec
push
fidivrl
add
adc
pop
int
sbb
mov
pop
out
xchg
sbb
mov
pop
pop
icebp
into
dec
arpl
jle
xchg
cmc
jp
push
lods
dec
and
adc
scas
jo
test
inc
cmp
scas
movsb
test
jb
push
repz
repz
jns
add
inc
sub
stos
ficompl
imul
sbb
fistps
mov
sbb
enter
add
andl
mov
push
cmp
cs
jo
bound
loop
push
mov
int
xchg
mov
push
mov
adc
stos
mov
jnp
pop
xchg
jne
loopne
pop
pusha
jne
pop
lcall
sub
aaa
cmp
mov
push
cmp
cld
pop
cmp
popa
nop
call
lea
icebp
popf
pop
add
and
pop
inc
jae
pop
clc
js
xor
insl
pop
sub
dec
cmp
dec
or
les
fimull
fs
fisubl
sub
pushf
aam
out
add
cld
jno
sar
popa
sti
sbb
add
iret
xor
dec
fmul
stos
add
bound
mov
mov
mov
mov
imul
mov
mov
adc
mov
sbb
sbb
imul
movsb
dec
pop
xor
cmc
iret
into
or
call
jae
popf
repnz
xchg
adc
jnp
dec
imul
mov
jb
mov
and
test
iret
dec
insb
jg
sbb
jbe
nop
jle
mov
lods
and
jge
aad
add
fs
inc
inc
sbb
jecxz
ds
sbb
daa
inc
add
cmp
add
jecxz
lret
and
call
mov
out
mov
pushf
sub
insb
hlt
sahf
mov
or
fsubrs
test
xchg
jmp
add
inc
cmp
fimull
push
cli
je
jb
jg
orl
rclb
push
dec
pop
xchg
jne
and
mov
xlat
sbb
mov
sub
stos
out
cmp
and
cmp
xor
dec
cmpsb
loope
ja
sbb
fsubs
ret
mov
add
cmc
ss
xchg
jne
ror
mov
sub
les
mov
jge
sar
push
rorl
or
incl
jl
mov
es
jle
js
hlt
ss
or
mov
add
xchg
xchg
or
sarl
cmp
movsl
cltd
mov
fists
sti
cmp
shll
pop
lods
dec
xor
xor
int3
push
scas
mov
inc
push
and
or
mov
xor
xchg
and
lahf
out
scas
int3
inc
pop
or
out
rcll
gs
clc
mov
pop
adc
xor
xchg
pop
shr
mov
sub
inc
repnz
jb
jg
out
and
shr
push
out
loope
mov
loope
pop
pop
rolb
cmp
in
cli
outsb
test
mov
jmp
mov
sbb
fimull
hlt
and
ja
aad
stos
outsl
cli
xchg
dec
lea
and
shll
add
inc
lods
pop
push
mov
xchg
xor
jb
or
add
repnz
mov
lahf
sub
test
xlat
push
inc
xlat
or
test
push
mov
jo
cmp
addr16
jge
test
pop
arpl
test
dec
mov
sbb
fs
shld
popa
or
and
popf
lahf
decl
cs
adc
imul
sahf
sti
jbe
stos
mov
pushf
lahf
test
cmp
dec
or
sub
arpl
test
les
rclb
mov
or
mov
inc
bound
popl
sti
cmp
imul
call
pusha
jmp
call
cmp
cli
dec
scas
push
xchg
mov
lcall
enter
inc
fbstp
stc
xchg
cli
ret
sub
data16
cmp
dec
lahf
sub
or
movsb
pop
pop
imul
push
les
out
test
lock
aad
cwtl
inc
insb
lock
inc
inc
in
cmp
cmp
lahf
into
lret
mov
or
aad
out
int
sti
or
cmp
mov
es
rcl
cltd
xchg
pop
arpl
sub
in
dec
mov
inc
jmp
cmp
out
aas
or
test
mov
jge
je
fcmovnb
in
inc
lock
or
or
lahf
push
lahf
test
adc
scas
movsl
mov
test
add
mov
dec
xlat
stos
jle
mov
std
inc
clc
ret
or
jmp
sahf
shll
shrl
push
pop
mov
icebp
outsb
add
hlt
flds
daa
fbstp
call
xor
xchg
mov
jnp
scas
lock
add
int3
std
test
cli
xor
add
push
stc
loop
aas
inc
test
cmp
mov
jno
xlat
sub
lret
xchg
add
dec
cmp
dec
push
mov
xor
inc
add
xchg
inc
inc
jno
or
rcll
iret
cli
addl
xor
push
push
push
stc
sahf
mov
mov
fisubrs
test
or
jle
and
out
fldenv
loopne
loopne,pt
and
mov
lock
ljmp
insl
and
iret
dec
test
or
adc
enter
sub
dec
jbe
aam
lcall
daa
sub
je
mov
push
pop
xor
mov
scas
lods
outsw
movsb
adc
popf
fbstp
jmp
jae
sarl
insb
mov
xor
pop
jb
iret
xchg
outsl
ds
jge
mov
xchg
lret
lods
icebp
cmp
pop
test
in
es
imul
mov
push
mov
js
dec
cli
push
push
mov
mov
mov
pop
daa
push
or
loop
ficoms
cmp
loope
or
xchg
xlat
or
clc
jmp
out
pop
addr16
leave
shrl
int
scas
mov
call
into
push
jae
mul
jae
ret
sub
loopne
test
pop
lea
dec
arpl
or
mov
pop
repnz
mov
xor
loope
aas
insl
mov
push
dec
or
out
mov
and
and
jg
adc
push
push
xchg
cmp
jle
mov
ret
cs
push
push
mov
enter
in
cmp
loopne
sub
loopne
lods
jmp
shll
pop
mov
and
mov
sbb
push
outsl
testl
cmp
js
jae
dec
dec
mov
jmp
icebp
fsubrp
add
hlt
xchg
movsl
push
jle
imul
push
mov
incl
adc
in
iret
and
xorl
dec
mov
call
xchg
and
cmc
aaa
movsb
fwait
dec
mov
inc
and
inc
shr
xchg
or
push
fisttpll
jg
dec
or
cs
mov
cmc
sbbb
adcl
pop
dec
add
mov
mov
cs
pop
cmp
lock
loopne
js
dec
cli
les
inc
outsl
push
mov
pop
xor
leave
inc
fcompp
lahf
inc
mov
pop
aas
cltd
push
pop
loope
inc
pop
add
sbb
cmp
orl
rolb
inc
jb
cmp
lahf
cmpsb
xor
cmc
cmp
xchg
dec
xchg
xchg
stc
mov
loop
adc
test
mov
mov
incl
push
inc
mov
aam
jo
mov
mov
mov
scas
add
and
pop
call
fmuls
sbb
gs
jle
add
mov
cmpxchg
cmpsb
out
add
mov
clc
xor
movsl
or
fistps
xchg
push
mov
mov
bound
cld
cmpsl
je
movsb
adc
adc
int3
dec
push
jae
icebp
push
xor
enter
sbb
lods
or
repz
push
and
dec
xchg
lahf
lret
adc
inc
shr
ror
ret
rolb
out
mov
pop
push
iret
outsl
and
pop
sub
iret
enter
xchg
int
push
and
adc
data16
call
jne
push
aaa
inc
push
fadds
into
add
sti
rclb
push
or
or
fcoml
cmp
ficoml
inc
call
mov
dec
cmc
mov
jmp
xchg
cld
popl
or
mov
jge
and
js
pop
cwtl
xchg
cmp
lds
or
mov
mov
cmpsl
pop
mov
jbe
call
cli
mov
adc
xchg
clc
pop
aam
in
mov
xchg
pop
push
cmpsb
adc
rcrl
jbe
sub
repz
out
lea
inc
ss
je
movlps
je
outsb
sti
lahf
popa
test
test
insb
cmpsl
cltd
mov
push
cmp
mov
push
aaa
lds
out
push
mov
mov
cmc
xorb
or
xorb
int3
movsl
sti
jmp
adc
adc
jge
insb
mov
mov
xchg
imul
xor
mov
mov
pop
cltd
cwtl
subl
iret
pusha
sbb
jmp
int3
and
jge
fld
xchg
xor
push
jbe
jecxz
aam
jl
cli
sbbl
cmp
add
mov
cmp
lea
pop
scas
jmp
lcall
xor
push
cmp
adc
andb
bound
insb
scas
clc
out
mull
andl
add
cli
lods
cmp
jge
xor
cmp
pop
push
insb
cmpsb
out
mov
cmc
ffree
jle
aad
int
outsl
or
test
xchg
mov
dec
pop
and
xor
imul
cmp
dec
mov
inc
loop
xchg
rcll
jb
fwait
jo
gs
addr16
inc
mov
mov
mov
cwtl
cwtl
pop
adc
jge
or
js
jnp
out
imul
in
dec
test
test
xor
mov
jl
ja
pushf
and
jne
hlt
pop
mov
shl
pop
xor
jnp
mov
jle
stc
cmpsl
add
adc
mov
pop
xor
sbb
and
mov
mov
je
dec
xor
mov
or
pop
rolb
mov
sub
aaa
push
les
daa
add
orl
mov
mov
cmp
cltd
icebp
rclb
add
xor
xor
enter
push
movsl
call
adc
jns
ss
scas
int3
call
dec
int
mov
jl
ljmp
orl
jae
adc
mov
ljmp
lret
popa
test
adcb
cmp
adc
aaa
aam
fcoml
mov
outsl
pop
hlt
and
fidivrs
testb
mov
jno
cmpsl
pop
and
xor
xor
xchg
jg
pop
xchg
sub
enter
popf
pop
sarl
push
out
add
and
fwait
leave
pop
movsb
pop
iret
and
out
js
xor
lods
scas
jb
adc
mov
xchg
inc
mov
add
cmp
pop
sbb
pop
cmp
ret
adc
and
subl
xor
jb
arpl
push
add
mov
cli
sub
xor
imul
mov
faddl
scas
push
pop
mov
fiadds
enter
call
dec
dec
mov
pop
or
leave
stc
ss
xor
mov
icebp
shlb
push
fstpt
sub
sti
push
jmp
insb
lret
das
sbb
xchg
stos
pop
mov
mov
and
ljmp
push
out
sub
pop
out
lods
pop
dec
dec
cwtl
hlt
sti
movsb
sub
push
pop
mov
jbe
aam
cmpsb
lods
pop
sbb
fiaddl
leave
ss
outsl
dec
int3
and
adc
roll
mov
mov
test
mov
and
stos
add
insl
sub
stos
idivb
dec
pusha
and
arpl
into
pop
adc
add
xchg
gs
rdmsr
out
add
js
push
fwait
arpl
sub
add
jmp
aam
cli
xchg
xchg
enter
std
stos
movsb
push
push
xor
and
mov
mov
loop
sub
repnz
in
out
cmp
jo
fsubrl
lods
insb
popf
ljmp
sbb
pop
stc
pop
sub
fbstp
pop
out
in
andb
fisttpll
movsl
push
jb
xchg
xor
dec
sbb
mov
xor
push
xchg
push
sbb
daa
arpl
or
push
dec
subl
cmp
lds
pusha
jbe
lcall
sahf
test
mov
cmpsl
rorl
mov
inc
test
cmp
out
add
sbb
sarb
popa
rcrl
pop
rcr
insb
dec
ljmp
mov
inc
sub
arpl
lret
xor
fcmovu
jecxz
test
ret
dec
icebp
test
int
seta
ja
roll
push
sub
jne
int
stos
jb
sarb
daa
out
ret
and
push
jae
xor
jmp
xor
jae
push
mov
ljmp
mov
jecxz
mov
shll
mov
das
or
or
sub
pop
and
repnz
clc
dec
mov
jmp
cmpsb
mov
clc
ret
mov
add
clc
adc
xchg
cmp
add
shl
add
xor
mov
out
out
aas
and
cli
push
mov
or
ret
arpl
out
inc
dec
sbb
dec
sub
ds
bound
sbb
hlt
mov
pop
movsb
inc
stc
xchg
xor
data16
jnp
lods
dec
pop
cltd
xchg
jne
scas
fnstenv
imul
xchg
insl
cli
sar
adc
adc
dec
mov
test
dec
mov
push
jno
jge
popf
cwtl
test
out
sbb
imul
xchg
aad
fisubs
imul
fimuls
mov
es
test
clc
cltd
cmp
xchg
outsl
dec
xlat
pop
cmpsb
movsl
lahf
cmp
xor
cmpsl
in
test
xchg
negb
clc
mov
addr16
mov
cltd
lahf
xor
inc
insb
push
push
add
sbb
jb
mov
push
jmp
jl
mov
push
or
daa
je
dec
cmp
inc
sbb
sahf
sbb
sbb
pusha
add
bound
adc
test
in
subl
mov
mov
rcpps
jae
sub
or
inc
mov
cld
ret
sbb
gs
imul
xor
xor
into
adc
xchg
out
or
gs
xchg
sbb
fisttpll
jle
mov
cli
std
xchg
pop
clc
xchg
or
or
fstl
cmc
cmc
mov
cmp
addl
jbe
and
or
in
ljmp
lea
mov
jp
sbb
enter
lcall
data16
and
jle
sbb
pop
out
jecxz
icebp
loopne
jnp
outsb
jl
inc
stc
cmp
or
fdivrs
je
mov
cmpsb
or
xor
push
int3
icebp
dec
dec
fisttps
mov
fiaddl
and
pop
add
mov
mov
inc
gs
and
lods
or
mov
xor
aad
push
lea
test
inc
mov
jb
adc
inc
stos
xchg
and
outsb
rolb
cli
and
das
icebp
add
movsb
call
lret
movsb
adc
loope
loop
and
add
jnp
jnp
xor
in
jp
pusha
hlt
jae
xlat
movsb
lock
push
mov
icebp
test
and
das
xchg
inc
int
out
sub
sub
popa
dec
jo
subl
aam
clc
xor
mov
notl
out
jge
jecxz
jno
xor
inc
scas
xchg
push
xchg
or
jae
and
ss
pop
sub
fistpll
sub
pop
mov
jmp
stos
pop
inc
lea
mov
in
jecxz
sbb
dec
insl
int3
mov
stos
xchg
call
das
adc
repz
add
cli
adc
ret
rol
sub
stos
sti
xor
fisttps
cmc
push
insl
mov
int3
stos
sets
ja
es
cld
jg
push
push
test
bound
xchg
pop
jns
out
imul
cwtl
and
lds
mov
cmpsb
cli
push
adc
adc
aam
sbb
pushf
add
fsub
inc
in
cmpsl
ret
imul
ror
inc
in
out
push
push
xchg
repnz
inc
out
xor
lret
fs
xor
out
jbe
ss
add
mov
scas
xchg
xchg
jb
or
loop
insb
fwait
pusha
fldenv
pop
in
jecxz
sahf
pop
or
out
add
sub
dec
xor
push
jns
mov
sbb
jno
add
mov
mov
or
in
int3
push
mov
aas
lea
inc
and
jnp
lcall
loope
sti
insb
wrmsr
pop
popf
inc
les
dec
mov
ljmp
mov
xchg
adc
ret
xor
jae
add
sbb
or
lods
movsb
fs
and
pop
in
adc
jmp
std
push
into
jae
inc
shl
loope
pop
aaa
and
add
dec
mov
pop
push
sub
ret
lret
mov
int3
cltd
or
sbb
pop
fisubs
call
test
push
ss
test
sub
push
fldl
daa
xchg
inc
mov
jb
mov
ljmp
leave
jbe
xor
decl
adc
jae
imul
inc
sbb
sub
xchg
out
fisttpl
sub
stos
pop
mov
xor
lahf
sbb
mov
repz
mov
pop
push
dec
mov
cld
dec
dec
dec
and
mov
in
jg
lcall
stos
xchg
sub
jo
dec
insb
outsl
xchg
push
sbbb
imul
test
fucomp
test
jg
out
loopne
fcomip
xor
orl
cmp
lcall
and
sub
fst
in
cmp
shr
push
mov
mov
bound
push
out
sbb
movsl
sbb
jo
psrlq
adc
imul
sahf
inc
fwait
push
cmpsl
inc
aaa
jo
imul
mov
xchg
mov
xchg
mov
sbb
mov
cwtl
and
sub
call
cmp
sub
xlat
xlat
xlat
jb
sub
arpl
lcall
nop
pop
mov
mov
or
repz
inc
sub
sub
pop
push
das
cld
jo
or
jp
dec
lds
jno
pop
mov
movb
aam
dec
adc
cmp
xor
in
imul
enter
jb
or
scas
std
or
dec
arpl
dec
xor
aad
and
scas
inc
sbb
xchg
lret
dec
lret
sar
mov
out
sub
clc
lret
js
test
mov
xor
mov
pop
cwtl
push
lahf
test
fwait
pusha
add
ja
dec
movsl
dec
out
psubusw
sarb
loope
mov
xchg
rcr
xor
lods
mov
cmp
sti
push
adc
loopne
scas
and
cmp
mov
pop
pop
cmpl
mov
into
cli
jne
push
cs
or
inc
rcrb
cld
mov
out
mov
sbb
push
adc
ds
jge
add
xchg
and
cltd
sbb
xchg
or
jmp
jne
es
push
xor
cs
popf
hlt
into
mov
cmpsl
sbb
mov
add
mov
mov
jle
push
mov
pop
and
push
mov
bound
dec
xorb
push
dec
cmp
enter
mov
ret
add
inc
jbe
and
aaa
adc
and
out
push
scas
test
pop
cli
pushf
xchg
dec
loope
push
push
fisttps
aam
outsl
jecxz
subl
xor
sub
out
out
icebp
repz
testb
inc
jecxz
popa
popf
inc
push
add
daa
push
orb
in
data16
lds
sub
mov
mov
loop
jae
fldl
and
pop
movsb
test
dec
inc
leave
xchg
bnd
dec
mov
jle
mov
push
push
xchg
mov
xlat
lret
fcomps
jg
mov
xchg
xor
aaa
xor
ret
in
pusha
outsl
imul
mov
inc
lea
fcoms
bound
dec
icebp
fs
enter
jp
je
inc
push
jnp
jo
mov
cmp
lods
movsl
mov
mov
dec
out
sahf
cmpsl
in
out
insb
xlat
flds
pop
jae
fcomps
inc
clc
xor
adc
loopne
xor
lret
leave
push
and
mov
inc
jmp
adc
mov
hlt
adc
mov
fwait
or
popf
bound
ja
push
aad
ljmp
jb
subb
cmp
lret
inc
mov
push
in
lcall
lret
testb
or
mov
je
xlat
xor
pop
and
lods
iret
cmp
in
or
adc
add
shll
pop
iret
inc
shl
sti
popf
sub
lcall
pop
jnp
add
adc
pop
nop
jle
mov
imul
es
xchg
mov
pop
fcoml
xchg
aad
xor
cmc
ljmp
push
and
fs
cmpsl
movsb
inc
rclb
es
xchg
fs
fisubl
enter
imul
push
das
ficomps
mov
xor
sbb
push
icebp
imul
inc
cmp
xor
int3
push
out
cmp
dec
shr
iret
mov
test
out
dec
mov
arpl
scas
sub
and
loope
imul
mov
dec
repnz
je
insl
push
cwtl
xlat
mov
into
rcrl
stos
mov
cmp
sbb
data16
int
xor
scas
int3
pop
loop
pusha
inc
addr16
inc
mov
or
cmpsl
jns
jne
out
pop
sub
push
pop
loop
sub
ljmp
cmp
fstpt
push
push
and
test
in
add
fadds
pop
rorl
add
sar
test
push
mov
aam
cltd
adc
add
xlat
push
mov
in
orb
enter
cmp
push
in
push
push
push
out
pop
cmpsl
outsl
xor
outsl
ficoml
dec
xor
push
aaa
lods
es
jno
cmc
push
das
jge
cmp
stos
mov
dec
cmp
mov
mov
rolb
jmp
pop
inc
fsubrl
pop
ror
cmpsl
std
jmp
jb
cmc
test
mov
pop
bound
pop
cmp
push
int
inc
xlat
push
add
xchg
divb
mov
pop
aad
xor
xor
or
mov
push
sbb
and
mov
jbe
xchg
or
mov
and
jne
ficoms
mov
in
fstpt
stos
cwtl
push
inc
and
sahf
icebp
fcomp
fistpl
xor
je
pusha
lahf
ret
sbb
bound
or
rcrl
bound
aas
icebp
imull
clc
mov
in
add
dec
jbe
clc
fiaddl
xchg
xlat
sarb
call
ret
dec
hlt
jns
lods
pop
enter
add
int3
jno
imul
jbe
mov
xchg
xorl
fldenv
hlt
adc
add
jge
cltd
or
xchg
mov
inc
add
andl
inc
fldl
lods
cwtl
pop
cmpsb
leave
pop
mov
out
jle
lret
ret
das
in
nop
ja
int
dec
and
jne
out
and
inc
xor
add
stos
pop
test
daa
cmc
sarl
into
dec
frstor
clc
xor
lock
jnp
push
aad
mov
in
jge
int
add
jb
cmp
dec
ja
out
mov
popf
sbbb
movl
std
popf
sti
mov
adcl
scas
push
ja
call
sarl
out
pop
or
mov
aam
jge
in
and
repz
adc
pushf
pop
lcall
pop
sub
cmp
les
inc
mov
aam
shl
ljmp
xor
rorb
or
and
dec
aad
xchg
icebp
push
mov
xor
jge
mov
fcomp
loope
sti
stos
cmpsb
rcl
lods
pusha
xor
jo
push
pop
movsl
loopne,pn
test
lret
and
fcomip
pop
inc
jle
ds
jb
push
std
dec
sbb
sub
mov
in
cli
cmpsb
ja
in
stos
clc
scas
push
es
xor
push
into
rcrl
adc
aas
mov
adc
clc
sbb
xor
mov
jns
adc
aaa
mov
test
stc
jmp
ret
fbld
xchg
out
in
adc
in
shlb
push
mov
mov
mov
xor
push
inc
xorb
push
adc
in
lret
and
xor
and
dec
and
add
ret
mov
test
dec
jno
pop
push
out
xchg
xchg
pop
xchg
mov
sbb
lea
das
jmp
bound
stos
cmp
push
xor
mov
ror
xchg
in
addr16
adc
jg
xchg
add
mov
lahf
scas
push
pop
or
adc
jne
and
xchg
mov
pop
dec
xchg
xchg
mov
or
dec
pop
cmp
cmp
shrl
mov
imull
enter
lret
fisubrl
dec
fdivrl
sbb
xchg
add
cli
push
cmpsb
jo
in
jmp
inc
sub
rorb
lea
out
mov
mov
adc
sub
mov
add
insl
insb
leave
inc
add
fs
in
mov
dec
loop
mov
test
lret
test
cs
inc
arpl
inc
scas
push
jl
popa
mov
sbb
std
mov
nop
mov
sub
clc
and
jl
sub
or
cwtl
mov
push
dec
out
icebp
xchg
xchg
mov
inc
ljmp
xor
pextrw
ja
xor
nop
data16
icebp
inc
out
outsb
cmp
or
and
mov
mov
movsl
pushf
aad
and
sbb
iret
and
sub
ss
unpcklps
aas
adc
loope
xchg
push
add
rcll
mov
lock
or
std
nop
or
out
jg
repnz
repnz
je
inc
in
scas
hlt
loopne
addr16
sbb
sbb
fwait
andl
cmc
push
jg
jp
xlat
call
in
shll
loopne
xor
adc
roll
orb
cmp
inc
lcall
rcrl
xchg
add
inc
and
imul
pop
andb
jbe
xchg
ret
sub
mov
mov
or
shll
xchg
pop
mov
out
inc
mov
fucomi
bound
repz
sub
cltd
jne
fadds
mov
mov
outsb
xchg
pop
fdivrs
scas
dec
mov
stos
pop
jno
inc
ror
fbld
push
pop
cmp
out
adc
xchg
test
mov
push
and
push
xor
mov
fsubs
push
dec
aad
outsl
mov
loop
push
js
add
loopne
and
mov
mov
mov
cmp
inc
addl
jl
jno
mov
lahf
jle
mov
inc
cmp
mov
jb
movsl
fcomps
pop
inc
gs
fnstenv
add
xchg
push
xor
xchg
xchg
pop
push
and
in
and
add
fucomp
xor
push
jecxz
dec
and
arpl
push
cli
xchg
fcomps
ss
out
dec
out
test
jb
lods
hlt
inc
pop
hlt
aad
xorl
sbb
mov
ss
jg
pushf
mov
scas
xor
lret
xor
xchg
sbb
ret
cmp
xlat
mov
xor
xlat
in
ret
aas
cmp
mov
out
test
pusha
cmc
jl
sub
in
mov
or
pop
push
mulb
les
aam
or
jge
push
sbb
cmc
or
dec
enter
push
xlat
cli
mov
insb
ljmp
dec
stos
sbb
cmp
sti
test
xor
cmp
test
arpl
stos
and
rclb
lcall
mov
dec
inc
or
push
sub
or
in
fistpll
xchg
insb
or
cld
sub
jns
icebp
incl
jp
sbb
pop
inc
fs
mov
cmp
test
jp
xor
adc
mov
loope
adc
adc
arpl
and
lcall
ret
in
adc
mov
jle
incl
pop
mov
clc
enter
mov
dec
repnz
push
outsb
jecxz
call
jp
mov
in
pop
imul
xor
dec
lret
sbbl
xchg
dec
movsl
sbb
pop
int
push
mov
or
push
pop
aas
cmp
jno
std
inc
int3
xchg
add
scas
push
pop
out
inc
xchg
loop
jg
daa
repnz
data16
push
mulb
jmp
inc
outsl
cld
adc
xor
into
loopne
int3
xor
repnz
dec
dec
loopne
pop
mov
fs
mov
shll
scas
rcl
stos
cmp
jge
jne
fisttpl
adc
and
outsl
pop
xchg
xchg
inc
lcall
mov
movl
sub
lds
pop
mov
inc
xor
and
in
and
jg
cltd
lcall
fbstp
push
adc
addl
and
and
insb
push
or
incb
dec
mov
andl
call
sub
or
xor
ret
or
xchg
xor
orps
xchg
popa
call
or
addb
test
inc
int3
inc
cwtl
cld
in
cmpb
and
dec
inc
movsb
data16
pop
inc
and
mov
ds
bound
lock
mov
mov
rorb
push
jmp
cmpsl
mov
bound
sub
sub
les
sbb
jb
mov
aaa
outsl
inc
test
outsb
xchg
mov
negb
test
ret
add
imul
incl
add
in
daa
rorb
cltd
dec
adc
xchg
loope
xchg
popf
dec
xor
popf
shl
push
clc
pusha
lods
je
inc
addr16
les
enter
xchg
lods
cwtl
sub
mov
out
adc
nop
pop
or
ss
mov
sti
imul
psubusb
fisubl
jle
push
cmp
cld
sub
fcmovu
in
inc
add
cmpsb
imul
sbb
into
mov
insb
out
icebp
or
call
cmp
pop
and
fidivrs
roll
rolb
int
adc
push
jp
or
adcb
push
xor
dec
lret
sahf
mov
inc
stos
call
in
dec
and
lcall
jbe
push
jns
inc
jg
inc
push
dec
dec
jp
lret
mov
test
sbb
jp
cli
jle
push
ror
scas
stos
cld
pusha
sbb
pop
loope
movsl
cmc
rep
sbb
sti
sub
into
dec
pop
lods
aad
int
mov
xor
xchg
adc
hlt
cmp
mov
jne
pushf
jno
loope
sub
xchg
jbe
mov
test
lock
mov
cmpsb
mov
imul
cmpb
lock
lret
ja
adc
xchg
cli
lret
stos
sub
sub
cmp
bound
mov
xchg
or
mov
mov
push
iret
mov
cmp
sbb
leave
sub
idivl
jbe
hlt
push
sbb
loope
inc
add
popf
cmpsb
or
jecxz
fsts
cmc
clc
popf
push
daa
loop
fisubl
cs
fdiv
daa
cwtl
mov
adc
mov
ds
nop
ss
inc
imul
xchg
mov
frstor
test
xor
dec
out
loope
aad
mov
xchg
push
push
inc
inc
fcomip
popf
aam
jmp
pop
movsb
jle
pop
shll
ja
movsl
pop
out
pop
test
orl
pop
sub
out
and
inc
xor
add
pop
int
mov
popa
test
cmp
sti
fwait
pop
or
test
aas
mov
dec
xor
pusha
dec
inc
add
xchg
or
xchg
or
lods
or
add
popa
cmp
push
cmp
lret
adc
fimuls
mov
loop
and
mov
lcall
push
movsl
push
stc
and
insb
inc
outsb
ds
lods
in
jp
jb
test
jl
pop
mov
ja
fldcw
jg
add
js
pop
mov
orb
scas
xchg
adc
xchg
xlat
fistl
xchg
iret
jmp
pop
popa
pop
adc
movsb
popl
sub
inc
mov
jecxz
insl
pop
mov
and
xchg
jne
cmc
jae
jb
jmp
lea
cwtl
push
xor
daa
iret
subb
sbb
adc
ret
jge
mov
or
cmp
and
movsb
push
stos
psrlw
rcrb
test
outsl
dec
stos
test
int3
xchg
mov
mov
adc
lret
ja
inc
test
lahf
mov
jl
or
xor
add
subl
push
rclb
jecxz
sub
cwtl
lods
aas
aaa
mov
sahf
cmp
xchg
std
jp
rcll
fwait
aaa
xor
addr16
outsb
ja
lock
lds
jp
pop
mov
and
leave
icebp
rcr
loopne
dec
cmpsl
fisubs
fldenv
rcrb
mov
enter
inc
shrb
inc
mov
push
lods
les
mov
inc
andl
popa
mov
cmp
pop
mov
jns
jmp
cmovge
pop
sbb
ljmp
sub
push
jnp
movsl
cmp
dec
test
cmp
jne
xchg
mov
xchg
jl
popf
xchg
xchg
pop
mov
pop
fisttps
ret
sbb
mov
sbb
clc
pusha
imul
push
addr16
pop
cmp
add
insl
push
adc
es
sub
jp
push
push
test
jne
xor
add
imul
data16
pop
push
std
pop
pop
jnp
test
imul
call
fsubl
mov
iret
dec
push
test
mov
rorb
call
fdivrl
inc
push
mov
pop
cmp
aam
fcmovnu
rcrb
xchg
jge
ja
xchg
dec
add
and
in
push
mov
cmpsb
je
jle
mov
insl
insb
and
outsl
pop
xchg
in
das
dec
popf
bound
dec
movsl
testl
xlat
xor
std
loope
lock
adc
mull
adc
push
loopne
jae
adc
mov
test
sar
in
mov
add
dec
and
cmpl
sti
or
adc
xchg
add
inc
sub
movsl
pop
loopne
sub
mov
dec
xor
ja
add
jo
jmp
aaa
hlt
pop
xchg
sub
dec
imul
or
jae
adc
add
enter
pusha
sub
es
pop
push
outsb
xchg
data16
mov
in
inc
je
pushf
sti
sbb
or
mov
data16
enter
mov
outsb
imul
dec
cmp
iret
inc
cmp
movsb
ret
pop
jnp
mov
cmp
ret
jo
xor
add
jns
jb
iret
and
xor
movb
outsl
cmp
dec
jns
or
rcl
mov
inc
inc
jmp
jnp
add
jp
jne
mov
mov
loopne
stos
push
test
in
repnz
scas
add
stos
call
push
sbb
inc
into
jbe
jmp
lds
push
popa
sarl
xchg
mov
jne
sbb
inc
cmpsl
enter
dec
ror
std
mov
aaa
sub
adc
jmp
jecxz
andb
outsb
negl
sub
inc
les
pop
add
mov
movsl
lret
xchg
push
rol
sahf
imul
cmpsl
lret
imul
imul
out
push
fsts
mov
frstor
sahf
dec
and
rol
xor
push
sub
cmc
xchg
stos
pop
pop
dec
or
xchg
add
pop
dec
testl
cmp
or
push
ja
out
jmp
daa
push
aas
adc
insl
sbb
mov
ret
notl
push
aam
mov
into
push
dec
mov
insb
arpl
leave
sahf
pop
jg
push
popa
jno
clc
lea
lods
or
pop
shll
sub
lock
cmc
or
mov
xchg
mov
sbb
es
movsb
xchg
fcmovnu
popf
das
clc
mov
mov
sub
adc
hlt
orl
lods
jae
or
pop
push
roll
inc
cmp
dec
jecxz
in
les
push
loop
sbb
or
xchg
test
inc
mov
outsb
filds
and
data16
shrl
imul
out
sbb
mov
add
shrb
dec
stc
pop
cli
loopne
gs
loop
push
imul
inc
les
ds
mov
mov
mov
cs
repz
jns
pop
cltd
inc
adc
add
pop
imul
out
mov
into
xchg
test
push
adc
jg
das
or
cs
sbb
xchg
and
jl
hlt
cmc
push
and
xorb
dec
loop
out
pusha
pop
ret
inc
mov
bound
dec
mov
cmpsl
add
add
jl
mov
push
mov
mov
loopne
adc
xchg
sub
out
pushf
mov
dec
ret
sub
jns
xchg
arpl
je
data16
sub
movsb
and
hlt
hlt
cs
pop
icebp
in
mov
nopl
adc
push
out
sub
repz
xlat
or
mov
fisubrl
scas
lock
adc
daa
cmp
mov
mov
sbb
imul
fwait
lret
mov
push
pop
adc
pop
cmc
es
outsb
scas
in
rclb
out
push
inc
out
xchg
pop
mov
out
test
scas
insl
sub
xorl
hlt
mov
stos
sbb
mov
xchg
stc
mov
xchg
ss
pop
scas
lahf
mov
mov
in
movsl
out
imull
fistl
ja
mov
inc
mov
mov
adc
adc
inc
scas
adc
dec
cmp
repnz
xlat
sahf
pop
ret
mov
outsb
cs
insl
cli
inc
cmp
clc
adc
push
es
out
jns
jge
and
push
dec
sub
addl
add
aas
cwtl
mov
push
mov
dec
push
dec
inc
push
push
mov
out
es
jp
mov
in
jnp
int
adc
sar
inc
and
repnz
sub
mov
fisubrs
cmpl
pop
inc
ja
bound
mov
jnp
test
mov
stos
lcall
pop
push
sub
pop
push
xchg
xchg
imul
xchg
push
subl
and
sbb
dec
bound
fldcw
jnp
addl
rorl
aaa
dec
sub
mov
adc
jge
movsl
and
ret
addr16
scas
pop
mov
icebp
scas
pusha
or
dec
sbb
push
pushf
les
clc
into
outsb
mov
cmp
pop
pop
lcall
mov
rorl
fiaddl
mov
leave
cmp
inc
das
xor
sub
lods
or
adc
pop
jp
hlt
in
adc
dec
es
push
inc
sub
sbb
ljmp
push
popa
into
mov
or
std
iret
push
mov
or
mov
out
scas
cmp
ja
decl
cmc
nop
insb
jbe
adc
std
add
jae
push
mov
xchg
push
jl
fmull
jns
int
jnp
neg
sub
mov
pop
js
inc
sub
or
sub
int3
pusha
cltd
cmpb
inc
cmpsl
add
mov
shlb
add
lea
inc
aam
sbbl
out
test
push
pushf
or
loope
pop
stos
test
and
jnp
and
cmp
lods
leave
insl
pop
into
ds
mov
lock
pushf
std
cmc
dec
jns
test
out
jns
xor
aad
jo
cmp
mov
cmp
pslld
ret
mov
sarb
jecxz
inc
sub
sub
enter
scas
sti
push
inc
outsb
push
into
pop
mov
pop
das
and
xchg
daa
loop
ss
sub
mov
push
inc
mov
jae
in
adc
clc
in
mov
dec
or
lret
or
hlt
aas
xor
inc
mov
add
aas
cmp
lret
rcrb
in
and
movsl
das
xor
dec
inc
adc
fs
andl
mov
push
pop
cmp
sub
mov
xor
mov
stos
scas
xchg
sbb
push
jb
dec
shrl
shrb
int3
dec
inc
out
jcxz
nop
add
push
daa
popf
pop
scas
xchg
mov
sti
adc
jle
scas
jae
aam
xor
shl
fldenv
stos
mov
xchg
xor
jmp
movsl
mov
pop
cld
stos
lds
cwtl
pop
or
sbb
mov
out
and
pushf
cmpsb
fbld
orl
lock
sbb
pop
inc
jb
mov
mov
hlt
call
mov
or
jnp
or
stos
outsl
dec
push
fs
imul
push
daa
pop
jecxz
into
dec
repnz
cmp
or
mov
cmp
ljmp
pop
and
add
sub
cld
push
stos
ficoms
stos
std
jle
gs
movsl
idivl
test
inc
fs
sbb
cmc
iret
cs
sbb
sbb
sbb
pop
add
into
cmp
loope
out
stc
sub
inc
push
pop
mov
rclb
lea
test
dec
and
mov
rclb
js
mov
mov
out
in
pop
mov
gs
jae
dec
rolb
lods
inc
inc
push
xchg
push
psubw
jge
cmpsl
nop
cld
jecxz
push
dec
dec
cmp
xchg
test
rcrb
sub
lcall
std
pop
sub
scas
into
hlt
xorl
jp
int
stos
inc
adc
sti
test
jne
mov
inc
call
dec
mov
pushf
lods
mov
pop
call
cmp
call
mov
xor
outsl
loopne
pop
xor
in
cltd
cltd
repz
jae
push
mov
sbb
outsl
out
sbb
adc
sbb
shrb
jo
jmp
arpl
dec
repnz
shll
mov
les
in
outsl
sahf
call
dec
pop
popa
sti
mov
or
cmpsl
mov
dec
add
pop
push
ds
xchg
or
dec
in
inc
fidivs
clc
fmuls
push
xchg
roll
imul
mov
or
in
fucomp
in
and
dec
leave
jnp
movb
adc
outsl
xor
push
jle
sbb
movsb
push
iret
stos
dec
adc
outsb
mov
sub
sub
push
pop
mov
mov
inc
inc
dec
rorb
push
stos
loopne
ss
scas
clc
lret
test
sbb
fnstsw
mov
dec
sub
data16
cli
andb
pop
sub
loop
fisubrs
jl
imul
push
bswap
xchg
out
inc
sbb
and
and
pop
xorl
dec
pop
sti
movsl
mov
sbb
cmp
mov
lea
ds
dec
movsb
daa
push
cmpsl
add
fistps
int3
cmp
pcmpgtb
cmp
aad
cmp
jns
and
es
push
dec
leave
push
sub
sub
shll
pop
lret
mov
pop
nop
insl
imul
pushf
inc
loop
mov
xchg
push
pop
push
fbstp
pop
jno
xchg
pop
jns
mov
cli
jno
pop
mov
pop
push
imul
sbb
ja
mov
pop
enter
inc
faddl
rorb
mov
jb
sub
adc
rolb
pop
lea
adc
and
push
data16
or
sub
movsb
xchg
mov
pop
mov
sbb
push
mov
pop
popf
lahf
sbb
mov
dec
jl
and
dec
fdiv
cwtl
stos
mov
testb
scas
arpl
pop
pop
adc
pop
push
in
fs
and
scas
into
loope
adc
lods
mov
adc
loope
fsubrl
and
sbb
sub
inc
jp
and
pop
frstpm(287
call
pop
dec
pop
enter
mov
pusha
js
lods
sahf
mov
xor
and
mov
xor
fwait
jge
scas
or
jne
jecxz
sub
out
test
jle
aas
les
sbb
icebp
pop
pushf
sbb
cmp
adc
sti
jle
loopne
aas
jl
test
mov
arpl
or
push
outsl
pop
mov
lret
sub
cmp
clc
mov
and
bound
divl
xchg
aaa
out
cmpl
in
ljmp
hlt
inc
and
fneni(8087
mov
test
push
xor
in
fstps
lret
jnp
mov
popa
call
sahf
pop
dec
jge
aam
xor
call
lcall
pop
loopne
cmp
jno
mov
cltd
mov
mov
repz
xchg
repz
cmc
xchg
sbb
and
test
adc
mov
cwtl
jbe
push
call
pop
scas
add
adc
and
fxam
prefetch
faddl
add
sahf
cmp
lods
pop
push
test
stc
stc
mov
pusha
mov
lock
aas
repnz
loope
sbb
xor
mov
xchg
mov
imul
dec
push
adcl
insb
jne
aad
jnp
mov
inc
out
addr16
rorl
cmp
pop
pop
cmp
je
int
in
lcall
test
shrb
aad
movsl
cmp
incl
adc
clc
out
inc
in
jnp
mov
xlat
arpl
leave
stc
mov
xchg
pop
cmp
and
lcall
sbb
mov
add
jnp
arpl
cmp
lods
cmp
mov
lret
xchg
icebp
loop
adc
mov
mov
jecxz
loop
sbb
push
mov
xlat
outsb
pop
and
adc
cmp
std
pop
pop
repz
add
or
aas
xchg
xchg
rcrl
sub
adc
das
sub
mov
aaa
inc
sbb
mov
sub
jns
out
adc
ja
dec
cwtl
cmp
sub
sub
stos
mov
je
repz
push
hlt
jne
sbb
mov
cld
test
out
push
movsb
pop
cmp
in
push
mov
xor
dec
ljmp
xor
pushf
dec
cli
mov
add
jg
test
lret
xor
lds
insl
and
inc
rcrb
sub
mov
pop
das
push
popf
push
and
aaa
xchg
add
stc
mov
jae
cli
movsb
jo
inc
cmp
repnz
pop
push
repz
es
pop
sbb
int
inc
xchg
add
and
xlat
or
mov
insb
push
jle
ret
mov
in
scas
outsb
in
es
and
sub
ror
nop
stos
pop
pop
inc
jg
enter
data16
xchg
mov
scas
pop
xor
sub
pop
mov
or
cmp
xchg
stos
cmp
popf
shr
clc
pop
ret
out
gs
mov
xor
or
lds
cli
ljmp
aaa
sar
cmp
out
int
scas
cs
orb
fistl
sbb
mov
cwtl
pop
dec
inc
test
jp
or
mov
mov
int3
fbld
fidivrs
mov
add
sti
xchg
sar
loop
out
cltd
and
dec
popf
test
adc
inc
pop
adc
pop
xchg
and
jmp
or
jmp
stc
sub
sub
jl
push
xor
jmp
into
cltd
repnz
dec
inc
inc
ds
out
nop
push
jbe
lahf
lret
ret
mov
mov
popa
push
pop
push
ss
sbb
ret
mov
roll
push
and
push
je
nop
mov
xchg
jmp
outsl
mov
pop
inc
cwtl
pusha
inc
lods
mov
add
fsub
loopne
or
jae
or
insb
mov
lahf
or
inc
bound
mov
push
cli
push
cs
aaa
leave
xor
nop
cvtdq2ps
push
inc
leave
push
setb
pushf
inc
pop
jno
clc
in
fiadds
sub
pop
popf
out
push
pop
or
movsb
gs
lods
or
pop
lret
mov
and
xor
dec
inc
jmp
addr16
push
or
sub
mov
cld
dec
fs
jns
push
and
adc
les
das
dec
sub
pop
call
mov
lcall
jnp
push
addl
mov
and
pop
arpl
out
add
in
xchg
add
jecxz
jle
test
push
jmp
jp
rol
add
and
and
repz
mov
lds
mov
inc
push
jns
sub
insb
jg
xchg
popf
call
adc
cmp
test
popa
pop
and
sbb
mov
scas
fcompl
or
int
das
out
bound
inc
xchg
push
lahf
xlat
mov
and
cmp
daa
push
in
add
add
shlb
mov
cmpsl
push
lret
in
loope
jl
and
daa
cmp
or
mov
sub
rclb
lret
push
loopne
cwtl
nop
jbe
std
test
mov
cmp
mov
sbb
mov
fsin
and
in
mov
incb
push
mov
aas
or
test
jne
push
jae
outsb
out
and
lds
dec
push
mov
inc
int3
add
dec
andb
add
inc
mov
mov
shrb
test
adc
sahf
leave
insl
data16
or
mov
pop
movsb
es
jno
enter
mov
mov
jp
push
fisubl
leave
ret
cmp
aad
jl
mov
stos
jb
ljmp
out
lods
sti
jae
aam
cld
xchg
mov
mov
out
and
xchg
jl
mov
fcoms
ss
fidivrs
add
sub
push
lahf
dec
lahf
jns
shrb
cwtl
iret
scas
out
pop
lods
ds
cltd
hlt
rcrl
push
les
lods
cmpsb
add
sub
call
scas
mov
jecxz
cmp
in
jl
or
and
movsb
adc
sarl
mov
jmp
scas
add
push
ret
pop
adc
jns
js
mov
xchg
sub
xor
sbb
out
jmp
jne
fildl
mov
outsl
xchg
out
jns
sbb
aad
dec
pop
ficoml
loopne
scas
mov
jo
testb
lods
mov
stos
lods
data16
and
pmulhuw
adc
dec
mov
mov
aas
iret
sarl
cld
or
popa
xchg
push
inc
mov
cwtl
je
cmp
mov
daa
push
cmp
jns
les
jne
or
fisubrs
inc
adc
outsl
iret
jp
push
mov
cmpsb
mov
iret
sbb
stos
or
mov
out
sub
sarl
xchg
and
inc
pushf
insl
pop
aas
int
fcomip
xor
and
xchg
xchg
fs
add
jne
push
xchg
lods
insb
loop
dec
jge
jnp
lods
cld
sahf
pushf
xchg
fcmovnbe
ds
dec
outsb
jno
pop
fldcw
lret
lds
adc
and
movsl
ret
aam
mov
outsb
pop
mov
jb
fsubrs
fs
jmp
mov
sub
ficoml
dec
and
rcl
outsb
pop
neg
mov
xor
std
int
lcall
push
add
loope
outsl
jge
or
imul
adc
or
popa
mov
jg
call
xor
jp
jge
movl
movsb
cmp
out
lcall
mov
dec
pop
lea
pop
leave
mov
inc
insl
mov
shl
dec
lret
mov
sbb
mov
sub
mov
insl
popf
and
shlb
repnz
pop
stos
testl
test
fwait
sub
fwait
int
xchg
repz
inc
test
imulb
jl
jg
push
mov
sahf
fs
add
fistl
mov
lods
dec
std
fisubrl
push
je
sbb
pusha
pcmpgtb
push
data16
pop
xchg
loopne
pop
ja
aad
orb
cmp
jo
ds
cmpsl
iret
hlt
ret
bound
pop
rolb
jnp
xchg
cmp
push
loopne
dec
hlt
push
mov
pop
daa
gs
cmp
cmp
cmp
dec
loopne
lods
cmp
inc
and
push
sub
imul
out
cmpsb
test
add
shl
mov
bnd
imul
push
xor
ret
das
test
sarl
mov
push
mov
mov
out
hlt
call
cwtl
leave
leave
mov
sahf
leave
xorl
test
sti
addl
stos
into
mov
lds
cmc
and
xor
lahf
xchg
push
loop
inc
jmp
cwtl
subl
inc
inc
xlat
lds
fnstcw
pop
jl
test
adc
test
or
cmp
dec
sti
loopne
pop
lahf
and
test
pop
cwtl
insl
add
push
mov
sub
stos
scas
fs
jmp
inc
aam
dec
dec
lock
aad
cmp
test
ret
int
add
xchg
adc
sbb
icebp
dec
push
std
dec
mov
mov
mov
into
xorl
sub
pop
test
sbb
bound
dec
lret
stc
ja
inc
mov
add
add
pop
mov
cmp
addl
xor
addl
insb
push
push
inc
lods
dec
sbb
push
push
push
outsb
and
push
cmp
rcll
sbb
mov
jnp
sub
je
xchg
mov
push
addr16
imul
mov
outsl
in
pop
hlt
mov
and
sbb
mov
mov
outsl
aaa
and
inc
in
roll
js
xchg
iret
bound
sti
sub
push
call
sbb
pop
incb
test
xor
add
pop
jl
jo
std
clc
cs
in
sbb
pusha
hlt
mov
cmp
pushf
mov
inc
cltd
lret
cmp
sbb
sub
xlat
jg
mov
test
movsb
or
jbe
cs
fistpll
inc
cmp
js
ret
fcom
aad
push
xor
mov
imul
jbe
jge
lahf
insl
pop
mov
xor
imul
sbb
and
lds
or
pop
dec
jb
xor
vpgatherqq
mov
sbb
pop
flds
gs
push
icebp
mov
pop
pop
pusha
adc
cmc
jbe
subl
stos
outsb
ja
mov
cmp
stos
adc
add
lret
or
or
data16
test
pop
lcall
push
sub
les
loope
jae
repz
or
push
insl
pop
push
dec
insl
outsl
jbe
gs
icebp
dec
sub
je
ficomps
out
divb
dec
outsb
mov
aam
ficoms
lahf
clc
out
in
jb
jne
push
mov
and
in
mov
inc
aaa
adc
jmp
mov
mov
out
fwait
inc
lock
lcall
push
cmpsl
test
push
push
jle
mov
push
push
add
mov
mov
sbb
stos
jo
lcall
ss
or
es
pop
addr16
jmp
lock
mov
sub
ja
mov
nop
insb
orb
push
mov
ljmp
pop
arpl
xor
pop
into
stos
add
or
or
fstpl
movsl
dec
adc
stos
popf
mov
mov
je
push
xor
push
pop
bound
les
in
mov
test
sub
pop
mov
pop
cmp
mov
cltd
lods
and
pop
rsqrtps
mov
popf
mov
or
in
xor
movsl
mov
sbb
sbb
xor
mov
sub
test
cli
lahf
mov
shrb
ss
cmpsb
sbb
mov
or
push
mov
daa
add
nop
push
cwtl
push
xor
jl
adc
xchg
mov
fsubrs
push
fstpl
sbb
push
movsb
rolb
test
adc
xchg
loopne
xchg
outsl
sbb
xchg
xrelease
mov
jno
cmp
ja
sub
in
pop
pushf
addr16
insl
add
out
std
inc
imul
addr16
cmpb
jecxz
jo
fisttps
jbe
pop
test
ljmp
aaa
xchg
mov
stos
adc
mov
leave
mov
idiv
repz
daa
inc
mov
push
in
lds
pusha
clc
add
sbb
ret
mov
sbb
inc
and
adc
icebp
mov
movsb
mov
xor
in
jae
stos
jns
xor
ds
adc
add
rcrb
xchg
pop
mov
roll
adc
pop
cmc
mov
test
stc
popf
cld
gs
movsb
xor
jle
sbb
or
xchg
mov
clc
add
add
out
inc
fisubrl
in
clc
mov
xor
mov
inc
xor
dec
repnz
lahf
loopne
pop
sti
aas
sti
mov
push
pushf
int
sbb
add
or
inc
sub
mov
dec
jns
mov
jle
mov
icebp
dec
test
add
add
imul
xchg
popa
inc
int3
fcmovu
or
dec
mov
mov
insb
repz
cld
int3
ja
popa
idivl
repz
jno
test
pushf
sbb
sub
jp
push
mov
fstps
out
cmpsb
cmp
pushf
mov
cld
iret
das
leave
ret
pop
mov
insb
inc
push
push
popf
pop
mov
jne
mov
adc
sub
xlat
movsl
cmpsb
mov
out
xchg
leave
rorb
and
adc
cltd
pop
mov
xchg
mov
mov
xor
int
es
and
mov
add
xor
std
je,pt
nop
sub
jl
xor
js
and
mov
imul
xchg
jle
mov
jns
iret
cld
addr16
push
into
xchg
sti
fsub
push
mov
sarl
xchg
cmpsl
xchg
loop
mov
andl
push
jbe
clc
push
inc
inc
fs
ret
adc
dec
adc
test
mov
das
scas
data16
in
xchg
inc
icebp
jp
mov
or
test
xchg
mov
bound
scas
sbb
dec
xchg
xchg
int
cmp
push
sbb
pop
repz
addr16
add
dec
hlt
ret
mov
imul
lcall
or
shll
mulb
mov
push
popa
test
out
mov
aad
mov
pop
cmp
fwait
and
cmp
dec
fbstp
lret
adc
pop
mov
test
fnsave
mov
mov
mov
aad
das
mov
mov
hlt
lock
pushf
push
xchg
pushf
xor
in
test
ud2
pop
cmpsb
xchg
mov
repz
sahf
mov
cmp
jbe
adc
test
jne
push
imul
test
cmp
ja
ja
mov
ror
dec
nop
pop
jns
dec
push
cmp
dec
arpl
aas
mov
ljmp
loopne
bound
jo
jp
notl
pop
xchg
pop
fcoms
scas
popf
pusha
pop
jmp
pop
sub
leave
inc
imul
xchg
or
sbb
jg
decb
inc
push
xchg
faddl
add
aas
sbb
imul
ret
scas
sub
jmp
movsl
jecxz
mov
repz
pop
daa
mov
pop
into
xor
pop
popf
xchg
sub
incl
cmc
or
mov
push
fildll
jns
pushl
xchg
sub
add
dec
arpl
stos
sarb
mov
out
xor
js
negl
out
jae
jo
ror
xchg
fiaddl
jae
rcrl
test
dec
enter
cwtl
mov
adc
mov
imul
mov
outsb
shl
xchg
mov
stos
mov
xchg
cld
cmp
movsl
jae
adc
sub
mov
push
lea
ss
mov
repz
gs
or
popa
mov
xchg
adcb
mov
in
gs
sbb
cmpsb
or
jmp
out
not
mov
add
and
rorl
cmp
ficoml
ljmp
push
ljmp
xor
xchg
bsr
fucomip
sbb
testl
mov
jbe
fiadds
negb
out
scas
sub
ljmp
add
mov
rolb
test
adc
not
stos
je
sbb
add
mov
sbb
movsl
or
inc
dec
push
stc
pop
mov
xchg
cmp
dec
mov
lahf
lea
or
lea
ret
pop
out
mov
mov
lock
outsb
add
push
adc
add
std
cmp
addl
push
push
sub
fsubrs
push
and
ljmp
mov
data16
icebp
mov
push
mov
push
mov
mov
jo
sbb
aam
stos
add
dec
pop
push
and
addl
add
jmp
inc
ret
mov
cmpsb
add
mov
cmpsl
mov
pop
sub
and
xchg
test
cmp
cmpsl
jnp
xor
or
cmp
andb
xlat
mov
and
pop
popf
incl
xor
cwtl
mov
jnp
dec
jl
cli
push
in
in
setp
add
imul
shl
fldcw
out
fdivrl
jno
add
repnz
out
lret
jecxz
decb
mov
sub
int
out
or
div
pop
aaa
xor
xchg
outsl
push
lods
sahf
test
mov
stos
lcall
inc
cmp
out
inc
dec
stos
or
add
lret
sbb
mov
js
xchg
xor
test
sub
inc
enter
and
mov
std
inc
nop
push
rorb
mov
aas
mov
xchg
fs
jg
scas
pop
jae
scas
mov
xlat
sbb
inc
movsb
scas
dec
jnp
loop
pop
sbb
mov
and
aas
ljmp
and
jbe
or
pop
or
mov
rcll
out
xor
addr16
test
sbb
loope
push
pop
cmp
xchg
xor
sub
jp
pop
or
icebp
in
bound
fsubr
enter
cmp
jecxz
dec
mov
push
enter
shlb
mov
pop
jge
fs
dec
xor
ret
ficoml
loope
gs
xor
ds
add
jmp
movsb
add
inc
inc
push
mov
mov
mov
ficoms
mov
inc
es
je
cmpsl
mov
and
out
ret
pop
addl
fisttpll
pop
mov
xchg
xor
js
adc
leave
ja
sub
inc
or
inc
push
test
out
jle
xchg
and
mov
mov
push
jecxz
inc
popa
ret
xchg
shlb
insb
incl
pop
pop
mov
xor
pop
lret
push
jmp
sub
ds
mov
sub
sub
les
sbb
cmp
sub
addr16
inc
push
insb
aam
sub
fnstcw
ficoms
xor
inc
mov
nop
mov
adc
fucomip
cmp
cmpsb
rolb
inc
test
jb
stos
mov
cmc
nop
sub
dec
adc
test
std
dec
mov
push
cmp
add
cli
adc
jno
mov
xchg
ret
xor
jl
jecxz
clc
scas
das
jne
sbb
mov
mov
pop
mov
movsb
pop
fmul
jle
sbb
cmp
or
ss
int
clc
push
daa
pushf
pop
ret
jle
cmc
scas
jo
push
pop
jge
jne
test
or
stos
and
xchg
pop
cmpsl
clc
and
fimuls
notb
repz
ret
inc
aaa
inc
mov
add
popa
in
aaa
aas
hlt
imul
push
xchg
fs
ss
xor
mov
movsl
add
add
repz
in
sbb
xor
push
push
mov
bound
sub
jns
pop
loop
or
push
cmp
add
aas
jo
cmp
or
movsl
inc
jp
stos
mov
mov
aaa
fistpl
jle
repz
sbb
push
mov
out
aam
fisubs
shld
push
sub
je
mov
ret
stos
sti
outsl
jmp
sbb
sbb
xchg
pushf
push
xchg
xor
into
mov
jmp
dec
cmc
inc
sub
fwait
add
movsb
in
or
mov
loope
inc
das
mov
mov
push
pop
or
rcrl
outsb
daa
aad
cmp
push
ja
fmulp
das
jns
test
add
divl
lret
cmpl
stc
enter
cmp
test
xchg
inc
js
out
out
xchg
rol
es
mov
lret
fwait
aam
outsb
insb
fsubrs
mov
mov
imul
inc
sahf
inc
mov
insl
popf
sarb
lret
das
or
inc
inc
mov
mov
push
mov
push
aaa
cli
nop
sbb
or
pop
xchg
mov
cltd
inc
xchg
js
push
pop
out
pop
or
lods
in
adc
fmuls
ljmp
aaa
jne
dec
inc
pop
pop
dec
lea
or
mov
mov
sub
inc
int
orb
mov
pop
add
stc
fistps
or
das
inc
xchg
xor
or
test
xchg
scas
push
and
cmp
mov
sbb
mov
ljmp
mov
f2xm1
and
sbb
jbe
jnp
sbb
mov
fmull
or
xlat
ds
inc
xor
mov
xbegin
out
mov
repz
mov
sahf
std
jecxz
cmpsb
imulb
dec
fwait
mov
jge
and
fsubs
xchg
lret
mov
leave
push
in
push
shlb
push
aad
mov
push
arpl
rol
aaa
fildl
pop
mov
lods
je
mov
test
jo
imul
orl
popa
lcall
insl
inc
push
jp
xchg
push
orb
sub
hlt
rcl
test
push
in
lret
add
dec
lcall
sub
loop
mov
cs
lock
pop
ss
shr
cmp
out
shlb
fstps
loopne
cmp
pop
xor
sub
jne
mov
inc
sub
xchg
cmc
cmp
push
and
mov
mov
icebp
hlt
pushf
mov
ss
mov
jle
mov
push
aas
xor
xchg
jae
leave
adc
sub
cmp
fidivrl
loop
repnz
popf
and
ja
cmc
cmpsb
dec
adc
scas
cmp
sahf
leave
pop
cmp
pop
inc
fmulp
push
mov
adc
scas
int3
cwtl
adc
fs
mov
sbb
mov
aas
jno
and
rorb
es
es
mov
inc
add
cli
test
cmpsb
xlat
jp
push
mov
rcrl
xchg
fwait
sbb
or
in
cmp
mov
daa
push
ss
jle
mov
cld
mov
adc
popa
in
push
test
mov
movsb
sbb
adc
cltd
cmp
cwtl
sub
cs
push
pop
add
lock
aas
fs
add
in
jb
out
in
int3
xchg
imul
inc
add
mov
mov
inc
sub
es
idivl
cmp
dec
lea
cmp
in
in
push
and
movl
int3
or
sbb
sar
mov
push
cwtl
ret
repnz
cld
into
add
iret
mov
cmp
divb
cmp
cs
pusha
jecxz
or
xor
push
inc
fsts
clc
dec
push
rcl
hlt
pop
icebp
push
cmpsl
fisttps
push
sub
cmp
add
add
or
xchg
xor
pop
push
rorb
xor
call
fstpl
push
adc
inc
adc
shlb
subl
lock
jb
popf
dec
add
repnz
test
or
push
nop
sub
cltd
mov
std
cld
popa
ss
insl
push
push
int3
andb
jle
mov
jne
je
cvtpi2ps
daa
push
lahf
popf
fwait
shlb
jae
xchg
rolb
sbb
aas
and
xchg
jnp
push
mov
cmp
jns
fldt
cmc
sub
in
add
mov
adc
popl
lcall
jge
jae
push
inc
int
and
stc
inc
imul
xchg
test
lods
out
jno
jmp
xlat
sub
pop
or
pop
mov
test
and
xchg
fisttpl
push
pop
test
mov
jge
lods
xlat
lods
rcll
sub
outsl
lret
fbstp
jbe
xor
imull
popa
sbb
xor
or
push
xchg
pop
xor
mov
lock
int
addr16
xor
lea
enter
mov
mov
xchg
pop
pusha
lret
jge
cld
jmp
push
push
out
outsl
aam
inc
imul
pushf
push
lea
mov
sbb
sbb
ret
add
push
mov
sbb
filds
xchg
inc
and
aam
sbb
push
lods
hlt
ja
xor
fld
and
adc
push
mov
ljmp
sbb
loope
stc
clc
mov
cmc
inc
cmc
push
jg
fstpl
mov
lret
and
cmpsb
push
inc
lcall
dec
cmpsl
movsb
add
scas
hlt
test
fdivrp
call
cwtl
or
insb
int3
adc
cmp
add
mov
sbb
mov
xchg
mov
rorl
das
icebp
cmp
or
enter
add
mov
xor
enter
cmp
lret
xchg
fwait
pop
test
add
inc
shrb
mulb
sbb
cmp
sbb
cmp
jo
fwait
add
add
outsl
sub
fcoml
cmc
dec
movsb
pop
add
jno
inc
sahf
aad
lock
sbb
sti
jmp
adc
mov
mov
rcrl
mov
cmpsl
insl
jns
and
lods
xchg
icebp
dec
ljmp
mov
ljmp
outsb
and
inc
cmp
test
aad
shl
fcompl
pop
jle
nop
xor
scas
add
jne
int3
jne
dec
inc
dec
xchg
dec
pop
jmp
push
adc
jle
ja
test
gs
cmp
mov
pop
ja
add
mov
push
dec
and
lcall
jbe
jmp
es
fidivs
pusha
xorl
les
pop
aad
in
adc
ret
xor
ror
dec
test
cmp
or
movsl
jp
add
ret
jae
aam
mov
dec
pop
mov
in
adc
push
pop
out
push
xor
push
fsubl
ljmp
cmp
inc
ret
mov
outsl
ljmp
gs
popa
push
sbb
or
cmpsb
ljmp
data16
fsub
pop
mov
mov
lock
call
or
pop
adc
addr16
ss
lret
cwtl
test
or
push
out
mov
dec
push
and
jns
stos
insl
sub
sub
sahf
mov
notb
add
in
test
lds
lahf
mov
xor
aas
repz
mov
inc
ret
xor
orb
repnz
ds
clc
adc
test
add
divl
xor
pop
punpckhdq
testl
faddl
xchg
fmuls
xlat
xor
xor
or
notl
test
fidivrl
loope
dec
push
lcall
cmp
mov
jecxz
out
mov
enter
pop
test
mov
mov
mov
sahf
aas
movsl
fcoms
or
rol
mov
mov
pop
repz
movsl
lea
sbb
hlt
in
fcmovb
xchg
inc
pop
outsl
lahf
cmpsl
arpl
pop
shl
adc
mov
pusha
mov
jne
mov
jns
stos
iret
mov
push
int
sbb
sbb
mov
jo
push
addl
pop
sub
in
out
cmpsl
xor
push
xlat
ljmp
aad
sahf
pop
adc
nop
xorb
lock
aaa
aaa
dec
push
jns
ljmp
inc
nop
gs
stos
push
scas
and
mov
inc
loopne
int
test
lahf
cltd
or
faddl
push
dec
pop
outsl
insl
or
aas
dec
xchg
add
jg
add
fldcw
mov
jno
and
test
mov
mov
add
pop
jnp
mov
jne
repz
movl
dec
push
test
push
int3
mov
ja
cmp
add
ja
rorb
pop
or
test
pop
inc
insl
sbbb
insl
mov
pop
ror
mov
fs
je
mov
add
adc
inc
sub
int
psubsw
jo
and
pop
fisubrl
sbb
call
sbb
sbb
ficoml
cwtd
pop
pop
icebp
xchg
ret
jnp
imul
adc
repz
fnsave
push
loop
pop
mov
int3
jns
sub
pop
lahf
ss
mov
pop
scas
dec
mov
mov
pop
mov
xor
xor
jns
daa
pushf
addr16
pop
or
mov
cmp
push
jo
ljmp
fdivs
mov
aas
add
or
stos
adc
inc
loopne
lds
or
lock
aaa
or
shlb
xchg
add
test
addr16
test
mov
imul
mov
mov
mov
and
mov
shlb
sbb
or
out
js
push
sub
clc
jnp
out
push
mov
mov
lods
in
jae
scas
inc
pop
add
jecxz
jns
test
int
cli
add
dec
jns
and
mov
lret
push
mov
shl
xchg
in
jnp
dec
shll
or
pop
cld
mov
popa
clc
fidivl
xchg
stos
js
xor
pushf
es
jb
jnp
fists
mov
jl
sahf
and
cmp
dec
jle
cmpsb
add
ret
loop
cmpsl
push
dec
mov
sbb
or
or
sbb
cmp
shrb
adc
ss
jl
dec
cmp
push
iret
and
push
pop
cmpb
test
push
aaa
lea
lds
sbb
pop
xor
xchg
ficompl
repnz
jl
push
dec
add
inc
and
out
aad
popf
bound
leave
idiv
and
xchg
cmp
lcall
divl
fisttps
mov
je
loop
sbb
mov
fs
imul
jl
js
dec
sub
sbb
outsb
dec
pop
in
adc
and
mov
lahf
subb
mov
lcall
adc
jg
lods
negl
hlt
push
popa
lret
ficompl
jae
repnz
pusha
imul
xchg
add
sub
mov
fs
aam
mov
mov
rcrb
mov
fdivp
in
adc
add
icebp
cmovne
sbb
adc
push
and
lea
push
js
lcall
popa
lock
loope
cmp
or
scas
sub
je
xchg
lahf
mov
call
add
add
xor
cmpsb
jae
dec
rcll
inc
jp
mov
mov
loopne
mov
jp
adc
cwtl
sub
stos
sub
daa
xor
dec
inc
ss
or
das
mov
aad
dec
push
push
mov
inc
pop
rcrb
sub
test
ret
into
dec
xchg
pop
incl
add
test
jns
pop
outsb
test
lds
in
push
xchg
push
repz
jb
aam
aad
cmp
out
inc
lods
xchg
dec
test
dec
aas
dec
dec
test
lea
jl
arpl
adc
adc
testb
test
lahf
adc
xchg
dec
adc
stos
xchg
pop
mov
mov
inc
xchg
ljmp
push
push
fcoml
mov
push
es
ja
push
xchg
lea
daa
movsl
jne
fldz
fmul
xor
scas
sbb
mov
lret
xor
fiaddl
cs
dec
sub
cld
jmp
mov
andl
movsl
shll
icebp
frstor
in
push
fadd
in
imul
les
push
cmp
mov
mov
adc
sbb
add
stc
add
fisubrl
xor
mov
mov
xor
dec
cmc
mov
loope
rol
ret
jl
and
and
leave
sub
mov
rcr
movsb
dec
out
mov
adc
dec
mov
and
div
ret
rorb
or
cmp
sti
out
mov
out
xchg
mov
fstpl
jp
orl
adc
pushf
dec
mov
dec
andb
dec
je
xor
sbb
or
or
bound
push
sbb
das
andb
stc
es
dec
stos
fwait
xor
pop
sbb
lea
inc
and
cwtl
out
add
sbb
jb
add
add
sbb
daa
movsl
jo
outsl
xchg
ds
jl
xchg
xor
mov
addr16
int
xchg
pop
and
pusha
dec
mov
rol
mov
fisttps
pop
and
loopne
orb
pop
clc
leave
test
sbb
jns
popa
and
stc
cmp
stc
rcrb
xor
inc
sbb
shll
add
in
mov
pop
aas
inc
xor
adc
mov
sub
fcmovu
cmp
add
mov
inc
xor
xor
jne
add
pop
cmpsl
ret
add
jecxz
testl
out
out
roll
xchg
sub
and
jne
sbb
inc
in
push
es
jg
xchg
clc
pusha
or
shll
pusha
adc
pop
lds
subb
fucomi
sahf
sub
mov
dec
and
mov
repz
mov
test
mov
xchg
popa
cmp
lock
mov
in
sbbl
addr16
adc
push
outsl
lds
mov
bound
add
mov
mov
add
lds
mov
push
push
pop
repnz
and
mov
loopne
cld
aas
loopne
pop
and
out
mov
cmp
pop
and
sbb
std
jb
shll
mov
lret
test
imul
and
repz
loope
pop
push
in
mov
xchg
cmp
push
mov
pop
inc
test
push
test
or
pop
movsl
xchg
sbb
jno
mul
or
fstps
mov
xor
notl
dec
inc
mov
xor
dec
ja
pop
pop
imul
mov
and
inc
jbe
xor
jmp
leave
mov
jb
popf
mov
movsl
mov
pop
xor
or
push
in
sub
cmpsb
xchg
ret
sub
std
jmp
pop
aaa
out
mov
pop
push
stos
sub
lahf
sub
mov
inc
add
pop
lds
fisubs
mov
mov
in
adc
mov
ja
in
mov
pusha
push
push
mov
mov
mov
push
inc
pop
or
mov
fdiv
popf
sub
mov
and
in
jo
cmpsl
jnp
jg
mov
std
adc
adc
sbb
dec
push
pop
push
je
imul
push
popa
sub
dec
mov
fimull
cwtl
xlat
fiaddl
mov
out
lret
fs
arpl
adc
xchg
in
loop
ret
pop
sub
dec
xchg
push
inc
repz
pop
xor
inc
aam
cli
cmpsl
movsl
add
fstpt
mov
mov
scas
xor
ret
bound
mov
sahf
xchg
inc
mov
sbb
xlat
and
in
sbb
sbb
stos
inc
sti
rcrb
or
sbb
dec
lds
or
daa
push
rorl
dec
rcrl
inc
pop
pop
sub
xor
mov
mov
inc
mov
or
cmc
arpl
pop
mov
pop
fsubrs
mov
jbe
jge
fwait
mov
pusha
push
sub
pushf
xor
call
and
int3
hlt
jg
stc
dec
stos
and
int
xor
mov
or
outsl
jge
sbb
inc
mov
lcall
mov
rclb
adc
xor
into
mov
iret
jns
push
movsl
mov
inc
loop
mov
rcrl
and
mov
mov
mov
jbe
dec
push
sub
inc
js
movsb
sbb
adcl
and
cmp
push
inc
inc
shll
xchg
pop
in
repnz
pop
cli
repnz
popa
dec
cltd
in
ds
cmpsb
and
sub
arpl
mov
push
mov
cmp
out
mov
pop
pop
xor
cmpsb
sub
into
jecxz
sbb
hlt
shrl
clc
sub
cmp
or
fcmovnb
gs
fistl
mov
sub
mov
dec
shl
pop
jge
mov
stos
data16
pop
xor
pop
loope
push
add
jb
clc
fwait
stos
or
adc
fwait
lcall
addr16
divl
add
in
and
mov
fdivl
test
push
pusha
iret
les
imul
shll
sbb
or
dec
or
push
or
push
push
scas
xor
dec
aas
movsb
jnp
outsl
xchg
dec
inc
push
stos
cli
test
pop
jl
push
push
test
inc
xchg
push
lret
movsl
dec
fld
push
gs
xor
dec
jp
ret
cmp
jmp
xchg
dec
lahf
push
sub
test
lea
push
and
icebp
cmp
out
mov
stos
andb
jmp
jmp
ret
or
sarb
add
sub
test
sbb
jbe
fidivs
icebp
push
jge
mov
push
inc
xor
rcll
mov
fadds
sub
push
xchg
insb
lods
pop
in
dec
jo
out
sub
and
int3
lea
xchg
movsl
inc
scas
mov
nop
push
clc
or
inc
jle
shl
lods
into
dec
xor
mov
arpl
loop
mov
jmp
mov
in
mov
or
jp
add
test
pop
mov
rorl
mov
sub
filds
pop
mov
add
xchg
insl
gs
fadds
jb
movsb
adc
lods
fists
push
pop
jecxz
fbstp
dec
imul
adc
imul
lods
shrb
jo
lcall
cmp
add
push
jg
jecxz
add
inc
and
xchg
fildll
loop
or
mov
divl
or
or
xchg
lods
xlat
sub
dec
aaa
ret
jle
jp
pop
add
push
idivb
shlb
aaa
popa
dec
adc
mov
and
add
divl
filds
setle
stos
or
pop
insb
loope
adc
mov
xchg
fsubrl
xor
ret
fwait
and
jle
sbb
mov
lods
add
mov
xor
mov
arpl
push
pop
jno
in
adc
rorb
int
mov
push
xchg
ret
mov
mov
adc
jnp
test
mov
fldcw
pusha
movsl
in
mov
shl
into
je
je
xchg
in
xchg
xor
or
fsubrs
mov
rol
sbb
scas
imul
stos
insb
push
sbb
and
popa
mov
cmpsb
pop
icebp
mov
fs
push
dec
lea
roll
in
jnp
cmp
mov
add
and
ja
leave
les
lods
ja
aas
jno
xchg
lret
push
andl
dec
xchg
outsb
mov
xchg
jecxz
dec
inc
dec
cmc
gs
scas
inc
xor
jns
push
fsub
aad
out
jp
inc
cmp
jb
dec
add
call
cmp
jle
fs
outsb
jmp
test
pop
push
rorb
sub
jecxz
and
nop
mov
xchg
rcl
mov
mov
jnp
mov
dec
mov
dec
out
or
push
stos
cli
dec
xchg
fsubrs
fs
dec
mov
pop
sar
out
mov
ret
cmc
sbb
sbbl
insl
or
push
adc
loop
jmp
xor
ret
outsb
xchg
jg
xchg
lcall
lret
xor
mov
js
mov
inc
scas
frstor
dec
lahf
sbbb
mov
add
nop
xchg
hlt
repnz
cmc
fldl
loop
sbb
scas
outsl
in
cmp
cmc
mov
ret
mov
cwtl
dec
xchg
loop
jns
push
jp
adc
fdivrl
das
cmc
push
xor
test
fsubs
shrb
sub
dec
mov
add
imulb
sarb
mov
mov
sbb
jno
js
into
loop
inc
xor
xlat
test
pushf
cmpsl
dec
iret
push
shlb
imul
mov
or
sbb
push
scas
push
pop
xor
iret
add
push
fisttps
dec
and
xor
jne
and
nop
or
or
or
cmp
mov
jnp
outsl
jbe
scas
cmpl
ss
clc
and
mov
iret
cmp
cmp
aaa
clc
mov
test
dec
xchg
jmp
pushf
inc
pusha
imul
sub
xlat
mov
cltd
push
sbb
xchg
ficomps
scas
sub
mov
or
xor
jl
sbb
pop
adc
sbb
mov
lea
jno
jmp
sbb
out
lds
push
mov
and
lret
imul
jb
fwait
movsl
xor
mov
shrb
mov
push
mov
mov
ret
sti
fnsave
push
bound
lret
xchg
pop
inc
dec
dec
fidivrs
or
std
or
enter
imull
mov
ja
cli
push
sub
dec
insb
add
pop
xor
cmp
jmp
ss
nop
jb
sbb
mov
test
mov
lea
cmpsb
cltd
push
sub
fs
inc
xchg
outsl
sub
or
rorb
fwait
outsb
movsl
aaa
cmc
adcb
enter
push
lret
call
sbbb
fdivrl
lds
sti
push
mov
ror
mov
insl
pop
jl
out
adc
cmp
lock
sbb
lret
cmp
ds
dec
fsts
jnp
mov
mov
testl
xchg
add
scas
xor
fsubrs
or
test
repz
insb
jmp
imul
cmpb
sub
enter
int
fnstenv
xor
add
div
aas
adc
loopne
xor
mov
pop
out
shlb
and
lods
pop
cmpsb
or
sbb
daa
cmp
mov
pop
sub
out
xor
lods
sbb
jecxz
movsb
xchg
mov
push
fsubrs
adc
movsb
movsb
cs
bound
jbe
mov
movsb
pop
shrb
bound
addr16
sti
push
pusha
sub
cmp
push
pusha
adc
sub
lahf
jge
xor
sti
in
xor
test
clc
repz
movhps
js
and
push
mov
lret
or
jne
sti
dec
jae
popa
fiadds
andl
sbb
inc
rorb
jl
clc
mov
aaa
in
ljmp
icebp
lahf
adc
ja
jo
pop
mov
aam
sub
in
jg
jns
lahf
aam
outsb
addr16
push
and
sbb
xor
stc
ret
addr16
in
xor
xchg
popa
xor
mov
scas
pop
in
test
fstpl
sub
insl
nop
push
fwait
adc
orl
inc
int3
add
push
imul
and
daa
mov
iret
lea
sahf
outsl
std
jmp
jge
fldenv
cmc
cmp
dec
aam
lahf
mov
shll
push
pop
sbb
data16
out
ja
fdivl
sbb
sbb
add
test
in
mov
sti
testb
adc
outsb
adc
in
cmp
dec
pop
mov
cmp
dec
ret
data16
int
repz
roll
stos
mov
and
cmp
fcom
popf
test
addr16
lret
inc
sub
test
fildll
mov
insb
xor
cmc
xor
es
pop
jo
ss
lcall
adc
ljmp
xor
leave
sub
bound
sub
cltd
pop
push
adc
cmpsb
inc
sub
or
cld
pop
cmpsl
mov
insl
add
and
rcll
mov
and
out
sub
in
pushf
jmp
loopne
xchg
sub
push
jmp
sbb
xor
pop
jns
je
imul
sarb
ss
pop
out
test
lods
test
sbb
popa
es
in
in
repz
pop
adc
mov
dec
ret
add
mov
repnz
mov
rcrl
push
frstor
push
imul
rorl
mov
aam
mov
aas
out
sub
rcrl
imul
lcall
shrl
lods
repnz
out
push
adc
nop
lret
xchg
jge
adc
aam
cmpl
add
mov
pop
dec
daa
cmpsb
or
in
repnz
add
imul
mov
mov
les
push
subb
leave
push
sbb
mov
bound
xlat
and
pusha
sbb
xor
adc
jmp
pop
cmp
int
cmp
hlt
mov
jns
stc
adc
imul
cmp
mov
pop
in
xor
lret
dec
pop
mov
ss
fildll
push
in
inc
movsb
into
and
jmp
cmp
and
and
cmpsl
push
lret
lods
dec
ljmp
mov
dec
or
pop
dec
xchg
mov
fcompl
pop
insl
pop
and
xor
cmc
ficoms
mov
jecxz
in
mov
fs
repz
push
mov
adc
mov
outsl
subb
mov
cmp
ret
inc
gs
jo
add
cmp
aaa
sbb
pusha
jg
in
push
jmp
sub
and
push
shrb
dec
jb
pop
shll
adc
sbb
data16
and
pop
xor
out
bound
dec
xchg
mov
xor
add
aad
imul
jl
xor
fs
xchg
in
pop
std
mov
pop
mov
or
push
cmp
inc
pop
or
push
dec
adc
xabort
and
sbb
loop
jmp
and
idivb
cmp
ljmp
repnz
pop
out
ret
test
mov
jae
movsb
mov
dec
fisttpl
jno
aas
jg
dec
imul
sbb
mov
xchg
leave
nop
cltd
pop
mov
pop
subl
xchg
daa
stc
es
lods
xor
aas
push
jl
pop
lret
lds
sbb
or
std
scas
add
stos
cmp
mov
jno
xorb
push
ljmp
out
je
cmp
cmp
push
addl
inc
pusha
arpl
mov
or
lods
rcr
imul
sbb
sbb
popa
adc
leave
pop
daa
xor
adc
lret
add
and
ss
enter
daa
hlt
es
push
shrl
sub
int
loope
ret
push
mov
enter
sub
lea
fistpl
fcoml
dec
or
sbb
mov
add
mov
sub
xchg
adc
test
mov
jle
insl
xchg
scas
push
into
iret
xor
xor
mov
lret
push
and
jno
mov
les
mov
stos
jl
sbb
jno
mov
lods
jle
cwtl
adc
inc
pusha
aas
jb
lods
pushf
pop
or
test
out
lods
cmp
cmp
sub
sti
cmp
nop
int3
push
dec
popa
mov
ret
inc
ret
jae
xchg
out
pop
inc
xor
rol
adc
mov
lods
sbbb
ds
mov
pop
mov
push
in
imul
aas
scas
aam
aaa
bound
cmp
sbb
dec
enter
xchg
push
out
and
xchg
sub
iret
dec
outsl
xchg
jb
dec
dec
push
pop
shll
push
hlt
cmp
sbb
sbb
add
sti
push
aas
jge
mov
sub
les
cmp
or
or
add
aas
pop
mov
pop
divb
push
push
mov
loopne
xor
daa
cmp
push
cld
mov
add
pop
jle
mov
inc
xor
xor
cmpsl
ljmp
push
stos
ja
loopne
mov
jg
lock
xchg
fsubrs
pop
jg
pop
and
mov
push
xor
push
stos
add
lret
inc
xor
cmp
push
hlt
cmc
outsb
nop
shld
test
ret
into
pop
push
je
testl
ljmp
jle
stos
addb
test
ds
dec
popa
inc
xchg
push
ret
jle
adc
js
data16
repnz
mov
sahf
fwait
idivl
das
stos
stc
popa
out
les
or
inc
sub
imul
adc
jne
fisttpl
adc
mov
imul
xor
push
mov
sahf
fstps
dec
negl
repz
jno
xchg
cmp
cltd
jae
xchg
out
popa
int3
fnstsw
mov
jo
xchg
mov
dec
daa
xor
rorl
fimuls
and
fldl
in
or
push
or
xorl
push
popf
jb
inc
cmp
daa
push
jne
jns
cmc
pop
imul
sbb
sub
in
inc
in
jmp
testb
pusha
fisttps
xchg
and
push
pop
imul
mov
stos
dec
gs
out
stos
imul
mov
mov
cmc
sbb
or
and
das
loop
sub
cmp
push
std
mov
rcrb
fldt
mov
int3
fs
test
loop
jne
add
aad
out
mov
pop
xor
out
je
mov
or
cmp
minps
loope
sbb
push
and
xchg
fisubrs
mov
jns
das
sub
sbb
jge
mov
fiadds
loope
nop
adc
pop
xchg
or
cmpsl
cmp
lock
push
shl
inc
jle
icebp
lods
lcall
lret
mov
dec
add
add
push
sahf
subb
xorl
inc
sub
pop
push
stos
sub
pop
clc
addl
int
pop
loope
fildl
jecxz
call
and
arpl
mov
int3
push
fdivs
sbb
jb
sbb
dec
dec
pop
and
xchg
ret
loope
jl
push
mov
lcall
pop
addl
or
jecxz
mov
dec
and
lods
pop
fmull
fwait
rcrl
xchg
push
jb
or
adc
rcrb
sbb
or
mov
dec
push
int3
add
cwtl
jbe
pop
hlt
rcrb
negb
popa
jmp
pop
les
pushf
sub
movsb
mov
and
cmpsl
or
add
xchg
cmp
idiv
jp
ret
shrb
pop
mov
adc
sub
clc
xor
daa
mov
cli
sub
in
add
out
push
cwtl
or
push
lds
leave
push
push
inc
inc
xor
lret
out
cmp
incb
lds
cltd
data16
orb
xor
shl
out
sahf
arpl
mov
inc
out
inc
fnsave
es
push
rep
mov
mov
dec
fcmove
push
insl
lock
pusha
jmp
mulb
xchg
repz
adc
fs
fldenv
shll
negl
push
insb
mov
sub
sub
jp
mov
enter
sub
push
cmpsb
add
jae
sbb
aad
scas
mov
bound
dec
mov
adc
sub
cmp
or
lea
imul
inc
lds
imul
jnp
les
ficoml
imul
mov
lds
pushl
mov
cmc
repnz
out
jp
repnz
cmpsb
test
add
dec
jno
xchg
inc
stos
or
loope
loop
jne
mov
pop
cli
pop
stos
test
fsubr
mov
mov
sbb
movsb
push
pop
xor
insl
push
shlb
scas
or
pop
and
pushf
xchg
rcrb
and
push
mov
sub
ja
pushf
inc
jno
ret
out
and
pushl
adc
cmp
lret
pop
bound
std
fnstsw
popa
mov
sbb
clc
cmp
outsl
jne
xor
mov
loopne
dec
inc
xor
cmp
out
faddp
adc
mov
add
sahf
arpl
cmpsl
in
sti
fidivs
cmp
push
push
add
mov
shll
mov
jae
imul
and
cltd
sub
push
fs
js
cmpsb
test
xor
jo
xor
cmc
or
or
daa
cmp
or
mov
push
int3
mov
ljmp
subl
imul
rcr
mov
sahf
aaa
pop
push
shr
loope
je
fwait
dec
ficoms
pop
push
outsb
cmp
push
adc
push
imul
mov
in
jge
rclb
or
add
push
mov
mov
lcall
outsl
pop
or
pop
insl
ret
jae
aad
mov
jno
fwait
aas
sahf
adc
imul
add
push
fcomi
ficomps
mov
es
or
pop
inc
pop
std
push
adcl
je
aaa
mov
out
add
push
sub
xchg
mov
cwtl
dec
paddsb
mov
in
mov
fldenv
mov
mov
sbb
xor
push
imul
sbb
sahf
adc
ds
pop
jl
cli
cmp
loope
and
ljmp
sub
js
fldt
pusha
insb
rolb
jge
jne
test
pop
cmp
leave
les
cltd
lock
pop
pop
adc
lea
lahf
inc
outsb
pop
mov
mov
mov
sub
scas
addr16
mov
insb
rorl
lock
outsl
imul
mov
fwait
insb
cmp
in
push
or
sbb
and
dec
test
out
mov
and
lods
mulb
es
fsubp
out
push
jl
add
mov
xchg
push
and
test
mov
xor
dec
stos
adc
xchg
jge
shlb
popl
sti
jl
scas
cmp
xor
mov
xchg
jne
movsb
loop
mov
ja
xchg
mov
or
popf
inc
int3
jp
imul
fwait
mov
stc
mull
mov
scas
dec
sti
mov
flds
dec
add
dec
pop
pop
icebp
pushf
hlt
ja,pt
xor
xor
cmp
pop
inc
and
clc
cmpsl
jae
or
cmp
loope
jns
or
adc
add
adcb
mov
ja
jle
pop
mov
sahf
out
add
mov
inc
mov
mov
mov
mov
in
sub
jp
inc
or
mov
jl
data16
hlt
in
gs
jbe
mov
stos
sarb
pop
cli
xor
xchg
xor
pop
outsb
int
jle
lods
js
xchg
and
sub
stos
lahf
mov
jno
fldenv
pop
jmp
jae
pop
outsb
nop
fidivrs
ja
out
leave
lret
inc
mov
xchg
fwait
out
pop
mov
outsl
pop
fidivl
jg
xor
movsb
das
into
push
push
lret
add
xchg
xor
ds
pop
inc
and
inc
addl
fs
adc
bound
add
ja
mov
subb
cmc
mov
daa
cmpsb
je
lahf
data16
mov
ret
cmp
mov
mov
add
lods
outsb
adc
jp
adc
jp
stos
mov
nop
xchg
xor
fwait
in
dec
repnz
sub
and
aaa
popf
xchg
test
xchg
enter
xchg
adc
mov
in
roll
mov
pop
hlt
cld
loop
or
rorl
shll
ficoms
inc
sub
je
sub
inc
sub
xor
xor
dec
inc
adc
cwtl
inc
jbe
jne
repnz
sub
std
sub
jae
call
ljmp
ret
mov
pop
push
dec
and
daa
bound
cmc
jo
movsl
bound
push
inc
lods
enter
lods
lock
jbe
cmpsl
jle
addr16
jb
ds
cmc
cmp
sub
mov
xor
xchg
jp
mov
mov
jp
ja
push
push
mov
stos
cmp
test
aam
cmpl
lds
nop
pushl
pop
mov
loope
cmp
fistps
add
repz
addb
insl
insl
js
cmp
push
mov
clc
insb
cmp
cld
addr16
incl
ljmp
dec
loopne
xchg
into
fsts
aad
sub
mov
movsb
int
adc
sub
sbb
sub
shr
divl
xor
push
rcll
scas
cltd
aam
stos
enter
and
das
mov
push
fisttpl
cwtl
outsb
clc
aas
stc
test
sub
dec
cmc
adc
fs
adc
xchg
popa
mov
pop
push
out
sub
xor
add
sbb
shr
inc
push
cld
xchg
sti
mov
pop
hlt
ja
movsb
pop
iret
pop
jmp
xchg
lahf
mov
dec
pushf
mov
divb
in
mov
xor
mov
add
in
push
outsl
mov
fs
in
sub
mov
jnp
mov
xor
mov
int
jecxz
out
mov
aam
sbb
push
fs
jb
ret
sub
push
push
cmp
jp
mov
jg
inc
or
test
stos
cmpsb
xor
jnp,pn
fs
dec
sub
add
xchg
sub
pop
ss
aam
into
add
sarl
push
mov
ljmp
jb
mov
cmp
out
enter
pop
mov
or
insb
and
inc
mov
fisubs
into
arpl
arpl
cld
pop
pop
aas
iret
sub
push
stos
xchg
das
enter
and
push
lock
mov
arpl
vpunpcklbw
adc
test
or
adc
mov
out
inc
or
push
jge
pop
nop
scas
and
cltd
mov
cmp
dec
inc
aad
cmpsl
xor
or
mov
repnz
data16
pop
stc
xor
rcrl
sets
cmp
sbb
mov
cwtl
lds
dec
test
stc
push
decb
lahf
or
jge
fcoms
fucom
rcl
aas
dec
leave
sbb
sbb
and
lret
mulb
dec
out
gs
test
push
int
movsb
out
push
push
aam
movsl
or
lods
enter
jne
push
dec
push
ja
mov
das
mov
pop
pop
dec
out
outsb
fnstcw
add
cmpsb
xor
xor
cmp
xchg
push
mov
int3
inc
jle
inc
cmp
addr16
cmp
mov
sbb
pop
mov
lcall
mov
push
push
clc
pop
popl
xchg
js
or
loop
mov
jb
arpl
jecxz
jg
or
ficoms
lret
daa
scas
pop
lea
cs
mov
mov
lahf
fwait
dec
loopne
adc
dec
pop
push
fmul
insl
xor
add
add
dec
jmp
xchg
dec
dec
mul
xchg
fmuls
daa
push
mov
mov
cmp
stos
rcll
nop
mov
fsubs
dec
repz
in
rclb
lods
cmc
test
sbb
lret
sbb
dec
or
cmc
push
shll
mov
por
mov
loop
in
mov
test
or
inc
push
mov
addr16
mov
cmp
fs
and
jg
inc
stos
in
fiadds
mov
ds
jl
and
sahf
ret
ss
mov
lahf
sbb
loope
ja
jne
in
mov
sbb
sbb
mov
pop
adc
mul
cmpsb
xchg
fcoms
ss
ret
mov
pop
fcomps
sub
mov
sti
mov
and
mov
clc
pop
aaa
out
xor
adc
push
push
push
outsl
lods
adc
xor
adc
divl
mov
lock
push
sahf
xchg
jnp
push
repz
ljmp
popf
jo
lahf
sub
inc
sbb
int
lcall
adc
cld
pop
outsb
cmp
lds
out
jne
xor
aaa
push
jno
outsl
jae
sub
jmp
jae
mov
roll
lret
xchg
aaa
xor
xchg
add
pushl
add
cmp
mov
inc
jecxz
adc
mov
jle
xor
add
fldt
popa
xchg
test
mov
dec
jge
inc
aam
and
lahf
aas
mov
or
jo
mov
bound
repnz
mov
test
test
cmp
and
fidivrl
xor
mov
jg
fs
aas
or
decb
adc
lds
push
pop
lods
mov
sbb
test
cmp
call
bound
hlt
cmpsb
pop
xor
push
sbb
xchg
scas
sbb
mov
inc
cmpsb
test
adcl
mov
js
mov
data16
sbb
xor
lret
xor
xchg
cmp
mov
in
pop
shrb
dec
inc
movsb
sbb
cmpb
sbb
lods
jmp
daa
inc
push
ss
loop
cmp
mov
das
add
ret
int
pop
add
push
rcrb
dec
push
push
pop
leave
or
lock
inc
test
pop
icebp
out
inc
adc
push
imul
lds
xor
insb
sub
mov
xor
sti
outsl
jle
iret
mov
push
sahf
push
cmpsb
scas
neg
xchg
scas
or
lahf
fstps
aam
ficoml
fstpl
adc
test
jge
inc
add
int
xor
sub
rclb
mov
loope
and
xchg
add
pop
es
mull
mov
mov
or
jno
and
test
scas
mov
push
xlat
pushf
pop
adc
sbb
arpl
jns
adc
pop
in
mulb
mov
stos
inc
in
mov
flds
inc
lock
inc
sub
dec
loope
ret
test
or
and
mov
mov
cmp
ja
fwait
adc
inc
aam
pop
pop
jl
xlat
xor
jne
inc
sti
pand
lret
jo
sahf
idivl
xchg
mov
adc
xchg
enter
sti
push
inc
push
dec
scas
dec
xor
test
mov
add
out
scas
addb
ljmp
fnstsw
in
sbb
pop
fmul
dec
out
push
les
fisubrl
xchg
test
stc
pop
mov
jge
mov
pop
outsl
leave
mov
rcr
cmpl
push
add
and
mov
and
cwtl
mov
stc
into
dec
roll
lret
ljmp
dec
mov
sub
dec
faddl
fdivp
sahf
mov
in
insl
push
mov
in
or
repnz
pop
dec
mov
jae
xor
testb
popa
jns
loop
outsb
data16
mov
sbb
daa
inc
scas
rolb
lret
addr16
cmp
sub
mov
jg
arpl
jle
inc
dec
shr
mov
cmp
out
or
xor
stos
bound
and
les
fwait
and
popf
gs
loop
flds
jecxz
or
outsl
dec
hlt
movsb
mov
gs
push
fs
emms
shrl
lahf
ja
xchg
add
sub
hlt
je
fisttps
sti
addl
cld
sub
pop
inc
adc
popf
jge
dec
jl
cli
repz
iret
sti
out
ds
sbb
push
aaa
outsb
popf
fcoms
add
jns
add
xchg
mov
adc
jne
mov
sub
call
or
sarl
cmc
scas
xchg
ljmp
adc
adc
out
xor
arpl
icebp
test
das
int
lcall
jle
es
shrl
cltd
adcb
cmpsl
mov
lock
scas
rclb
add
inc
and
pop
mov
movsb
fdivrs
xchg
lock
das
push
nop
add
fsubrp
xchg
repz
adc
sub
fistpll
inc
mov
cmpb
mov
add
jg
pop
cmp
call
dec
sub
mov
push
sbb
ds
xchg
cmp
pop
das
scas
sbb
mov
sbb
mov
adcb
xchg
scas
inc
out
subl
pop
xchg
sub
popa
pushf
out
xor
ret
add
adc
in
push
stos
mov
sbb
lret
mov
jmp
mov
int
push
dec
lret
mov
or
xchg
pop
pop
call
push
ret
loopne
pop
pop
into
jb
ljmp
les
push
xchg
inc
mov
jl
sbb
pop
or
cmpsb
mov
frstor
sbb
jnp
in
cmp
cwtl
adc
arpl
aad
mov
inc
cmpsb
inc
and
and
outsb
cmc
inc
and
sub
sub
mov
in
xchg
das
mov
scas
jg
mov
fnstcw
sbb
popf
arpl
or
and
stos
pop
inc
jns
shl
addr16
notl
enter
cmp
mov
inc
mov
adc
and
jno
sub
sbb
mov
cmp
ret
xor
or
mov
or
mov
in
adc
xor
nop
jp
or
adc
pop
dec
fcmovne
lock
jp
enter
push
arpl
cmp
dec
lods
shrl
enter
push
add
sub
dec
int3
popf
ss
pusha
mov
adc
pop
bound
arpl
and
pop
fidivs
inc
xchg
adc
cli
cli
cltd
loope
cli
mov
cwtl
mov
cmp
mov
pop
mov
add
adc
imul
dec
pop
scas
pusha
pushf
cmp
or
mov
push
.byte
sbb
xor
cltd
xchg
cwtl
add
mov
fwait
add
test
pop
mov
mov
ret
push
out
out
inc
jp
and
mov
gs
out
jbe
xchg
icebp
pop
aaa
or
imul
sbb
cs
xor
adc
xchg
fchs
add
cld
jns
int
inc
or
cmp
out
and
je
decl
aas
arpl
fisttpll
popl
cli
fistpll
notb
or
ljmp
add
pop
sub
fiadds
lods
ds
dec
sarl
cltd
xchg
push
mov
ds
dec
cmp
pushfw
cmc
out
lcall
jl
daa
xchg
test
icebp
sub
sarl
push
lahf
fnstenv
js
push
mov
mov
enter
add
testb
adc
jno
pop
int
jg
or
fsubrs
xchg
add
addr16
mov
fucompp
inc
daa
pop
sarb
sbb
jp
stos
jp
jle
shll
push
lahf
stc
and
mov
inc
jo
std
mov
popa
mov
xchg
cmp
mov
jns
pop
decl
add
test
sbb
pop
out
or
lret
divb
inc
je,pt
mov
cmpsl
pop
dec
xor
jns
call
out
xchg
ss
jecxz
in
cmp
fwait
pop
inc
out
inc
adc
adc
cmpsl
mov
insb
xor
jle
xor
insl
movsl
adc
xor
cltd
push
inc
lret
leave
and
and
inc
jns
loop
ret
push
xor
repnz
sbb
inc
dec
cmp
adc
ljmp
xor
cmp
adc
in
orb
daa
and
push
fdivrs
mov
mov
xchg
mov
xchg
pop
push
mov
dec
lcall
mov
jge
fs
repz
add
rcrb
push
and
sbbl
out
scas
fbld
jmp
icebp
notb
or
xchg
push
ds
lea
fisubs
push
insl
cmp
xor
dec
in
decl
lods
pop
test
or
jge
jne
dec
fisttps
jae
mov
loopne
adc
sbb
flds
xor
push
dec
jge
pop
icebp
icebp
mov
rcrl
add
test
test
pop
sbb
popf
jle
fnstenv
test
ds
in
shll
scas
cmp
ret
add
mov
pop
in
and
nop
test
xchg
mov
popf
mov
repnz
xor
mov
dec
cmpsb
aaa
loope
mov
loope
popa
or
rol
sti
stos
in
bnd
inc
sti
and
xchg
adc
adc
test
movsl
or
push
mov
pop
xlat
xor
das
push
push
enter
pop
mov
or
or
ffreep
or
pop
xchg
js
mov
int
sub
mov
or
xor
xorl
popa
xchg
pop
ss
test
or
rolb
add
push
gs
in
ljmp
fldcw
enter
mov
cmp
repnz
imul
clc
cli
and
and
pop
jns
ljmp
add
iret
test
push
loop
out
les
frstor
loopne
pop
rcr
enter
loop
cmp
fsubrs
scas
jge
jno
jnp
cmp
enter
cmp
push
loop
iret
lods
dec
xchg
mov
push
sar
cmp
mov
mov
jg
or
mov
xor
or
xchg
imul
arpl
adc
outsl
bound
int
sbb
std
jge
in
xor
pop
clc
push
push
loop
in
mov
push
pop
pop
xor
jb
or
mov
sub
gs
in
bound
xor
pop
rcr
addr16
cmp
push
inc
sbb
lret
js
cmp
pop
addr16
adc
das
nop
adc
dec
in
add
jl
xor
bound
mov
pushf
lock
fs
cmpsb
xchg
xorl
add
scas
mov
adc
cmc
fs
mov
jns
fsub
mov
bound
andl
lret
pop
mov
jb
sub
adc
jp
repz
mov
xchg
push
scas
push
push
das
cmp
sbb
add
lods
pop
imul
ja
roll
xchg
loopne
sbb
mov
daa
pop
movsl
les
xlat
or
sub
mov
fwait
jl
add
into
test
inc
int3
xchg
movb
cs
bound
mov
sbbl
adc
loop
inc
int
leave
jb
add
fmull
jg
add
inc
sbb
and
mov
nop
push
das
push
sarb
push
push
rcl
mov
out
lods
out
xchg
jge
lret
cmp
sub
dec
adc
ljmp
negb
mov
cld
cmc
cmp
fsubrl
push
das
icebp
inc
and
popf
cmp
popa
or
cmp
cmp
or
add
and
out
cmp
scas
add
lods
push
sbb
jmp
jne
icebp
in
mov
lods
out
test
jnp
jle
mov
outsb
xchg
inc
jne
aaa
imul
or
jl
into
pop
sub
adc
lret
rorl
mov
xchg
jae
push
mov
xchg
push
pop
addb
pop
shll
add
cmp
and
arpl
mov
or
lds
nop
or
mov
test
loope
cwtl
outsb
jne
cltd
adc
cmpb
rclb
or
push
dec
or
andb
cmp
fisttpl
jmp
pop
lods
popa
mov
jno
adc
pop
fmulp
test
rol
insl
inc
je
xchg
or
dec
ja
sub
pop
repz
loop
leave
clc
clc
xor
cs
fnstsw
mov
clc
xchg
cmp
sti
lahf
xchg
or
push
inc
outsb
or
push
mov
stc
ror
inc
out
lret
sbb
mov
lock
popa
imul
adc
lcall
jnp
fbstp
sub
push
test
cmp
out
mov
testl
sub
fcoml
sub
fadds
add
call
cld
int3
loop
cmp
lock
push
and
pop
rclb
add
repz
mov
and
lea
test
and
test
mov
mov
std
cmp
into
nop
xchg
fldl
movsb
enter
cmpb
xchg
ret
imul
xor
adc
movsb
mov
imul
pusha
pop
nop
add
movsb
popa
dec
push
adcl
ficoms
mov
lahf
repnz
add
jae
int
pop
xchg
mov
cwtl
push
repz
xchg
jb
cmp
xchg
push
cmp
stc
adc
arpl
mov
push
daa
cmp
inc
scas
jns
mov
in
fldt
mov
sbb
mov
jecxz
sub
push
jecxz
dec
pop
rorl
xchg
mov
add
add
daa
xor
sub
jmp
pusha
or
dec
push
rcr
hlt
aad
fsubr
test
push
or
xchg
adc
dec
into
sub
pop
ret
aaa
fstpl
mov
xor
and
dec
in
push
mov
shll
sbb
sbb
test
inc
push
sbb
inc
cmp
ret
es
inc
ret
fnstcw
out
cmp
or
push
stc
sbb
mov
jecxz
fs
je
pop
insb
mov
xor
bound
bound
cs
ds
sbb
scas
pop
sti
in
adc
pop
das
pop
xor
jle
mov
mov
jno
xchg
ss
popa
movsl
scas
sub
mov
fmull
mov
loop
mov
adc
dec
ficompl
gs
pop
repz
movsl
jb
out
pusha
mov
jp
cmp
xchg
jo
loope
push
xchg
mov
pop
add
aad
stc
mov
lds
loop
push
imull
aam
jns
roll
dec
inc
cld
into
xchg
ret
loope
out
or
cltd
add
in
movb
arpl
inc
ss
push
xlat
insl
arpl
mov
outsl
movsb
pushf
lods
sbb
xchg
or
sti
imul
jle
sub
mov
push
xor
cs
adc
add
sbb
jl
cmc
je
adc
cmp
mull
xchg
out
jnp
and
repnz
mov
sbb
in
pop
cltd
xchg
jge
icebp
and
lea
pavgb
cmp
mov
jecxz
xchg
outsl
and
jne
les
lea
lock
inc
int
pop
ret
lods
loopne
leave
jge
pop
sub
xchg
inc
mov
call
aad
ds
test
mov
mov
movsb
stc
les
xchg
mov
mov
mov
fistps
scas
jl
adc
pop
xchg
or
and
and
stc
repz
xchg
inc
int
clc
cmp
enter
adc
in
dec
and
rorl
inc
lock
dec
aaa
lods
sbb
loop
in
pop
push
mov
dec
adc
aad
xor
cmp
and
dec
outsl
popf
es
rorl
inc
jmp
mov
fidivl
jg
mov
fisubrl
aam
mov
mov
lds
jmp
inc
adc
imul
bound
sbb
repnz
dec
push
jae
pop
jnp
jns
test
sbb
mov
push
pusha
in
push
pop
push
es
adc
inc
add
sbb
outsl
fistpl
dec
sub
int3
sub
loop
xor
dec
mov
mov
aam
decl
pop
sub
imul
stos
mov
mov
sbb
scas
mov
sbb
fdivs
dec
fcomip
stos
push
pop
iret
dec
jge
jl
lret
lock
xchg
pop
inc
aas
stc
xchg
xor
dec
jecxz
cli
sbb
lret
inc
jecxz
stc
xor
rclb
dec
jno
rcr
push
fisttps
mov
cmp
push
jmp
and
jmp
xor
or
pop
dec
bound
clc
push
mov
mov
lcall
lret
xchg
and
or
repnz
mov
xor
shlb
cmp
xor
push
pop
decl
stos
fwait
ret
shll
mov
out
dec
cwtl
fdivrs
inc
ss
call
roll
pop
pop
fmul
loope
push
inc
dec
ret
je
adc
sub
bnd
cmpsl
inc
mov
cs
jnp
sbb
add
les
shl
in
and
cmp
repnz
mov
out
out
sbb
xor
fnsave
gs
scas
inc
mov
je
inc
ljmp
xor
movsl
or
jbe
leave
mov
imul
addr16
lcall
cmp
cmp
ret
mov
push
sub
xchg
sub
mov
into
add
lods
push
call
jb
sub
das
xor
aad
mov
mov
scas
or
or
or
mov
adc
push
inc
cmp
mov
sbbl
shl
and
push
repnz
fcoml
addl
insl
sub
sbb
cmp
add
cmp
dec
inc
fs
out
je
ss
mov
decb
addr16
push
sbb
testl
mov
jl
ljmp
jns
daa
jle
inc
frstor
jmp
add
fstl
jo
aas
negb
insl
add
test
sbb
repnz
pop
mov
mov
ja
pop
jmp
mov
cltd
repnz
loop
repz
mov
test
stc
xor
inc
push
pop
mov
jp
pop
push
lods
cli
or
mov
cmova
mov
or
insl
insb
and
movsl
xchg
mov
imul
pushf
pop
pop
adc
pop
push
cmp
test
mov
adc
mov
mov
fistpll
xchg
mov
shlb
les
sbb
gs
mov
jb
pop
mov
ret
mov
fstpl
fs
call
jo
or
ret
cltd
lahf
mov
into
inc
xor
test
jnp
cmpb
jmp
push
inc
leave
xor
cld
jo
sahf
dec
es
int
mov
mov
lods
cltd
jb,pt
adc
pop
aas
mov
mov
ret
addr16
dec
lods
cmpsb
jge
vhaddps
push
rorb
adc
enter
push
popa
mov
cltd
mov
and
lods
std
xchg
enter
rcrl
jbe
push
cmp
xor
cwtl
lds
shlb
outsb
jp
xchg
push
cmp
mov
mull
adc
and
clc
add
jns
mov
dec
pop
pop
sbb
nop
add
loop
dec
sbb
imulb
or
add
cmpsl
das
sbb
fbld
in
fs
addr16
pop
adc
clc
dec
adc
lods
fisttpll
int3
enter
sbb
mov
cmp
mov
cmp
inc
add
mov
shlb
jg
sarl
add
pop
ljmp
je
fs
je
mov
mov
std
or
mov
ret
dec
mov
sub
lea
jo
xchg
je
mov
lea
pop
xchg
pop
pop
xor
and
repnz
mulb
jo
cmp
mov
es
sub
dec
in
mov
push
sub
cmpsb
fistpl
in
sub
and
sub
push
jnp
repz
pop
inc
mov
xchg
loope
je
imul
clc
mov
out
rcrb
dec
int
orl
cmpsb
sar
pop
sbb
xlat
sub
sti
mov
nop
xor
jge
aam
jbe
ja
insl
jmp
orl
jp
rorl
mov
orl
xor
push
in
mov
out
cmp
mov
call
inc
push
sbb
mov
lods
add
clc
ds
shll
stc
push
popf
or
dec
js
insl
jns
ja
or
rclb
data16
sub
fwait
cmp
and
adc
cli
fwait
dec
imul
insb
inc
inc
mov
or
jl
sub
pop
cld
add
popa
fninit
mov
subb
mov
jns
sahf
cwtl
and
in
popf
cli
dec
add
push
mov
bound
mov
mov
js
jae
pusha
rcr
cld
les
outsb
aaa
int3
jmp
pop
mov
jae
sbb
inc
movsb
push
xchg
clc
jg
aas
mov
std
rolb
inc
pop
mov
mov
ret
notl
pop
into
fistl
sub
sahf
ja
fsubrs
insl
lods
stos
je
into
cmp
mov
aam
pushf
ficoms
dec
leave
in
vandnps
add
cmp
pop
dec
imul
mov
push
mov
in
rolb
mov
jo
arpl
and
decl
xchg
push
mov
jnp
mov
xchg
test
test
rcrl
aas
xor
jb
pop
add
enter
mov
mov
in
cmpsl
nop
mov
lods
and
js
int
stos
gs
adc
add
subl
pop
add
add
iret
mov
je
push
mov
pushf
jecxz
mov
add
push
ss
adc
loopne
jmp
xchg
scas
sub
out
pop
sbb
push
dec
out
pop
jb
and
add
sbb
pusha
out
ret
sub
add
inc
shrl
mov
cmp
dec
mov
mov
scas
push
jne
loop
mov
push
pop
jmp
sbb
pop
cmp
mov
xchg
lods
scas
dec
jne
inc
adc
rorb
lock
mov
sub
push
jecxz
icebp
rcpps
pop
adc
cmpsl
sub
clc
adc
repnz
mov
test
push
cs
xchg
aad
cvttps2pi
loope
add
ss
mov
xchg
movsl
jl
mov
fnstcw
or
psllq
and
xor
hlt
imul
jnp
or
xchg
popa
mov
test
mov
imul
xchg
mov
mov
stc
adc
into
out
data16
loope
gs
push
push
out
stos
or
lret
out
add
fucomip
sub
lcall
leave
and
pusha
cs
mov
dec
pop
mov
int3
rcrl
or
mov
test
adc
sahf
dec
sbb
or
jo
jno
push
dec
cwtl
incb
or
xor
xchg
out
stos
and
out
or
mov
loop
jnp
xor
rcrl
adc
fisttps
push
int3
leave
or
and
mov
dec
pusha
je
test
xlat
xor
cs
push
fmulp
out
scas
jmp
sbb
dec
cmp
das
inc
sbb
sbb
clc
sbb
pop
sbbl
inc
or
or
xchg
test
aam
jns
insl
push
cltd
add
addb
ljmp
cs
mov
scas
sub
push
test
and
and
pusha
aas
dec
in
gs
and
push
mov
inc
cli
in
in
or
out
mov
mov
push
xlat
test
test
adc
or
xchg
dec
mov
fdivr
sarl
xchg
insl
cmc
and
dec
test
jp
pop
add
addr16
inc
pop
pusha
test
and
inc
xor
add
fldcw
test
ret
pop
lret
jge
imul
adc
jo
adc
scas
sub
jecxz
or
scas
insb
cs
inc
test
pop
inc
or
add
leave
fs
push
adcl
dec
jae
adc
pop
dec
dec
lahf
fildl
cmp
inc
mov
sbb
iret
mov
daa
xchg
fisubl
fs
sub
adc
test
adc
mov
test
pop
push
or
stos
dec
and
shlb
adc
dec
pushf
loop
xchg
movsb
mov
inc
insl
data16
dec
pusha
xor
mov
mov
negl
pop
jne
pop
add
andl
add
in
out
adc
inc
mov
lret
out
jnp
mov
imulb
mov
jne
andl
adc
mov
repz
cmpsb
jbe
sub
aaa
neg
cmp
inc
sbb
cmpsb
xchg
addr16
jg
movzbl
scas
xor
adc
mov
dec
jns
lds
jge
pop
or
mov
jae,pt
sbb
outsb
jne
jo
jle
lods
icebp
add
fdivrl
mov
setns
push
or
adc
push
fcmovu
jne
pop
repz
shrl
mov
cltd
test
xorb
pop
push
push
aad
movsl
mov
int
xchg
insb
shlb
outsb
cmp
adc
inc
dec
sub
inc
xor
aam
jp
je
lret
pop
sub
cmp
nop
xor
sarb
fadds
vcvtdq2pd
inc
sub
stc
call
adc
adc
clc
jbe
sbb
test
adc
and
cmp
aaa
int3
sub
cld
mov
push
hlt
inc
fdiv
xor
xchg
xchg
in
xchg
mov
xchg
popf
fwait
sub
int
inc
stos
cmp
cmp
subb
push
sub
and
pop
mov
mov
test
sti
pusha
jbe
and
js
jbe
mov
mov
fisubs
repz
pop
push
push
add
xor
andb
cmp
pop
fwait
out
repnz
sahf
iret
unpckhps
and
mov
fidivl
fbld
les
call
push
pop
mov
cmp
fs
mov
dec
cld
pop
xchg
out
testl
addb
sbb
enter
mov
jae
out
dec
loope
clc
int
dec
push
movsl
mov
call
xchg
jbe
jnp
popa
out
decl
or
xlat
sub
scas
inc
out
mov
ds
jge
jb
into
sbb
mov
nop
insb
jae
nop
stos
mov
pop
daa
hlt
adc
ret
push
stc
cs
dec
je
ja
std
out
or
or
ljmp
insl
lods
and
dec
sub
cwtl
in
leave
sub
iret
push
cmp
adcl
fs
and
cli
dec
in
ss
aas
jne
lods
mov
jb
dec
adc
sbb
nop
fsts
movsl
xlat
pusha
or
and
or
push
popf
icebp
cmp
shrl
test
mov
push
jnp
cmp
and
push
sub
sub
mov
movsl
jmp
sbb
sub
into
fidivl
sbb
pop
int3
xchg
inc
or
rep
mov
out
mov
insb
sub
js
pop
xchg
dec
les
hlt
arpl
stos
jmp
xor
cld
orb
repz
sbb
mov
mov
incl
push
sub
jmp
addr16
sub
lret
or
inc
push
push
push
std
sub
cs
xor
xchg
dec
leave
fsts
stos
repz
jbe
push
cli
sbb
cmp
sti
lds
jmp
cmp
jae
or
and
aaa
or
pusha
mov
rorb
mov
fbld
inc
loopne
cmpsl
fmuls
sub
pushf
out
loope
jmp
negl
andb
dec
mov
fwait
push
in
and
xchg
mov
iret
xor
ljmp
mov
adc
fimuls
cmc
sub
insl
mov
sbb
int3
mov
pusha
rcrb
int3
fsubrl
xchg
pop
test
sahf
inc
into
or
xor
mov
xor
shrl
xchg
insl
imul
scas
and
and
mov
fs
hlt
mov
sbb
cmpl
out
or
movsl
add
outsb
outsb
std
ja
popf
cmp
add
bound
jae
xchg
or
inc
shr
fnsetpm(287
sbb
and
lahf
movsb
icebp
adc
mov
jnp
inc
pop
push
cmp
adc
lods
mov
movsl
jge
xor
mov
mov
fs
cmpsb
in
jle
icebp
fwait
push
les
int3
in
sub
xchg
mov
outsb
mov
xor
xchg
xchg
xchg
or
test
mov
sbb
shl
sub
push
cmp
aad
gs
cli
inc
mov
mov
int3
xchg
leave
das
and
sub
dec
in
data16
fsubrp
insl
inc
sub
cmp
push
push
mov
repnz
ja
adc
adc
nop
jl
enter
xor
and
sub
cwtl
lods
dec
sub
sub
andb
call
loopne
in
jg
sub
sbb
cs
sub
shrb
xor
or
call
mov
cmpsl
sbb
or
loop
xchg
xor
dec
xchg
test
dec
mov
xlat
std
or
in
cwtl
mov
push
cmpsl
jecxz
push
clc
xchg
out
stos
insl
push
push
ret
clc
inc
jne
mov
mov
mov
mov
out
xchg
out
cs
xor
push
lods
jno
pop
testb
andb
mov
mov
inc
jecxz
loopne
jb
test
pushf
mov
fld
lock
add
mov
mov
cmp
cmp
jge
sub
stc
and
and
arpl
or
mov
shl
mov
insl
jae
jp
fneni(8087
jne
repz
or
and
js
sub
in
pusha
fisubl
test
dec
sahf
dec
adc
mov
push
movswl
in
fisubrl
inc
sub
dec
jbe
scas
int3
repz
cmp
sbbb
dec
pop
testl
add
and
xchg
mov
jg
test
mov
inc
or
sbb
callw
dec
mov
sub
add
into
ret
movsb
loope
dec
mov
stos
and
mov
jns
adc
mov
mov
push
lock
fcoml
sub
dec
mov
push
test
mov
sub
cmc
rclb
jb
jbe
das
sub
or
orb
test
aas
sbb
jp
sar
push
sub
orb
call
cmp
sub
push
dec
jne
pop
xlat
testl
enter
mov
mov
cltd
fcoml
movsb
pop
sub
clc
scas
mov
cs
insl
add
imul
fwait
mov
pop
in
and
inc
mov
sbb
nop
cmp
sbbb
xchg
cmp
mov
jp
cmp
enter
cmp
xor
enter
sbb
clc
push
or
sbb
sbb
jecxz
sub
pop
incl
insl
mov
insb
ret
test
jg
insb
aas
xchg
out
xor
loope
sahf
lods
fbld
jnp
fs
push
or
mov
and
xor
push
xchg
iret
fwait
mov
call
insl
shrb
aaa
mov
or
add
popf
mov
testb
adc
add
dec
repnz
ja
push
lods
orb
xchg
sub
or
pushf
inc
stos
pusha
mov
push
jae
xor
out
cmp
scas
cmp
psubsw
jle,pt
lods
and
movsl
sbb
out
pop
hlt
mov
cmp
cmp
mov
daa
xchg
jae
into
add
adc
lahf
sbb
je
es
mov
sbb
adc
mov
jmp
dec
inc
out
sbb
push
es
add
adc
test
insb
leave
mov
or
ja
xchg
jmp
xchg
sbb
ja
mov
loop
sub
push
ror
mov
repz
inc
andb
idivl
les
andl
pusha
negb
and
inc
inc
xchg
adc
int3
xor
les
stc
std
jne
xor
inc
mov
or
fwait
pop
aad
push
stos
nop
cmpsl
out
fcompl
gs
pop
mov
clc
mov
stos
pop
mov
decb
mov
cs
rclb
push
dec
add
scas
mov
sbb
lahf
sahf
stc
cmp
inc
adc
sarb
or
outsl
lahf
hlt
fldcw
cltd
mov
or
mov
je
sub
in
scas
arpl
sub
iret
adc
imul
pop
mov
cmp
lea
mov
loop
imul
aad
paddw
mov
pop
sub
push
inc
jnp
sbb
adc
imul
loopne
loopne
or
movsb
xor
shrb
out
out
add
adc
or
cmp
adc
loopne
add
dec
stos
push
outsb
mov
in
xor
jbe
wrmsr
cmp
lahf
xchg
scas
pop
lock
jbe
in
or
and
fdivrs
clc
and
fsubp
dec
loop
adc
jb
fidivrs
inc
dec
imul
hlt
test
inc
push
xor
sbb
and
sbb
dec
jmp
sahf
dec
pop
or
and
mov
scas
push
movsb
push
movsl
adc
mov
imul
outsb
lods
ret
push
andl
jb
lods
push
mov
jmp
cwtl
push
mov
mov
push
cld
cmpsb
pushf
cli
in
dec
add
out
xor
adc
push
mov
xchg
inc
mov
inc
xchg
dec
mov
mov
push
cmp
mov
pop
inc
mov
out
adc
dec
icebp
fs
outsl
out
fsts
jge
mov
popf
fnsave
push
mov
pop
and
das
push
mov
bound
data16
xor
daa
mov
and
pushf
cli
lret
in
int3
cmpb
iret
push
and
movsl
mov
je
std
jbe
pop
and
mov
testb
js
add
mov
mov
jmp
out
push
inc
aas
aas
mov
sbb
mov
add
mulb
push
xor
icebp
jne
test
mov
push
sub
ret
popf
subl
push
js
lds
dec
aaa
xchg
mov
mov
mov
cwtl
dec
cld
test
fmull
in
orb
stos
sarl
or
add
push
loopne
scas
xchg
xchg
cmp
mov
cmc
dec
bswap
push
push
iret
mov
aas
inc
out
mov
nop
jb
insl
das
cs
mov
or
sbb
shl
pop
mov
jge
and
xor
fistpl
inc
jg
push
repz
lret
pop
pop
push
cmp
stos
hlt
lods
dec
push
cmp
lock
sbb
cwtl
clc
push
ss
push
daa
sbb
adc
sub
test
leave
mov
cmp
shll
in
pop
jp
dec
mov
aas
outsl
mov
jbe
sbb
rcrb
inc
adc
mov
or
add
fisubrs
cwtl
push
cmpsb
pop
pop
sbb
inc
je
lods
add
icebp
inc
repz
iret
or
sahf
lcall
cltd
jl
jb
stc
push
mov
jecxz
jge
icebp
mov
xor
test
lret
jp
mov
out
imul
pop
mov
test
or
push
ret
adc
mov
sbb
cmp
je
mov
add
xchg
jae
pop
je
sti
rorb
inc
leave
xor
test
pusha
xor
cs
adcl
pop
pop
or
add
imul
fadds
cmp
fwait
inc
cmp
cld
jp
addl
loopne
lds
mov
mov
xor
jae
pushf
imul
outsb
lods
xor
push
dec
mov
push
jp
jl
mov
inc
pushf
mov
lea
or
add
fsubrp
leave
dec
es
pop
in
jbe
mov
inc
imul
icebp
adc
mov
and
pop
jecxz
jno
enter
sbb
cmp
lahf
in
jmp
fmul
je
dec
popf
or
aam
push
mov
addl
mov
cmp
and
sbb
testb
xor
ret
push
mov
mov
inc
insb
mov
cli
pop
dec
jmp
xchg
push
sahf
repnz
popf
add
xchg
ja
shrb
ja
stos
xchg
mov
adc
leave
cltd
push
subl
or
adc
data16
sbb
adc
xor
adc
stos
push
popa
jg
popa
pop
lods
mov
loope
push
jmp
dec
shrb
jge
dec
jle
daa
push
pop
sbb
sbb
push
test
jmp
out
push
in
or
nop
and
pop
add
rcrb
inc
dec
sub
ror
arpl
or
xchg
or
mov
enter
dec
mov
cltd
push
add
or
mov
cmp
notl
ret
jecxz
mov
and
sub
call
adc
cli
movl
jge
fistpl
lods
push
insl
das
pop
test
fstpl
ret
in
das
xchg
xchg
or
dec
jae
sbb
aad
add
add
in
mov
cld
adc
and
cltd
sub
add
sub
jmp
sbb
sbb
and
mov
out
pop
hlt
add
out
rcrb
ja
xchg
adc
cld
mov
sarw
loopne
inc
out
push
or
aaa
loope
les
cld
and
mov
stc
jbe
hlt
gs
cmp
scas
mov
sbb
add
sub
push
testb
lret
xlat
clc
jle
mov
fildll
stos
pop
mov
lock
loopne
mov
pop
xchg
daa
int
inc
push
inc
jnp
out
inc
dec
push
push
lods
xchg
push
mov
jge
cmp
std
stc
add
mov
xchg
jns
xchg
andl
mov
cmpsl
or
push
sub
cmpsb
sbb
mov
out
or
pop
push
or
data16
test
push
stos
test
add
jecxz
jnp
fdivrl
into
push
psrad
xchg
ret
push
cld
mov
stos
iret
sub
jp
fdivs
mov
lcall
data16
jns
push
sbb
lea
cmp
loop
lea
pop
and
jp
mov
jo
jbe
dec
cltd
push
pop
adc
shlb
xchg
push
xchg
jb
jecxz
cmpb
pop
mov
push
lds
xchg
sbb
xor
repnz
ret
mov
adc
sub
fsubs
sbb
mov
inc
out
jo
xor
out
repz
sbb
mov
lds
lahf
inc
ret
push
push
pop
inc
push
push
testl
sub
pop
push
ds
and
daa
push
mov
xchg
push
aas
lock
sub
push
cld
or
xor
lock
mov
rorb
popa
dec
jne
push
out
mov
inc
pushf
mov
into
les
pop
js
jle
and
and
jnp
xor
and
outsl
mov
gs
rcl
mov
inc
mov
loop
mov
sbb
scas
test
loop
sbb
push
xchg
repnz
inc
dec
insb
push
push
cld
sbbb
rcl
int
std
fld
and
pushf
jne
mov
jmp
js
inc
push
movntq
hlt
fdivrs
pushf
jae
dec
adc
jae
push
jmp
lock
sbb
pop
pop
icebp
dec
mov
xor
mov
div
xchg
insb
cwtl
push
data16
inc
cmp
mov
cmp
and
test
leave
cmp
push
and
pop
mov
mov
pop
ret
and
jge
sub
adc
mov
sti
or
mov
push
call
js
mov
int3
sahf
mov
lods
jne
or
push
push
push
sti
enter
or
or
adc
push
pop
push
sbb
aaa
movsl
inc
scas
xchg
sub
movsl
cs
cli
stos
cwtl
out
jne
push
addr16
jae
cmp
pusha
push
aaa
cld
js
loop
push
in
cmpsl
mov
add
mov
lcall
mov
jge
mov
dec
sub
jge
push
push
pop
push
dec
incl
push
insl
cmp
sbb
pop
addb
cmp
psubusw
xlat
sub
ss
inc
insb
push
in
adc
push
nop
pusha
ret
mov
mov
fdivs
mov
xchg
add
fildl
aas
mov
fsts
push
and
cltd
mov
or
mov
addr16
jge
or
fsubs
add
mov
mov
mov
in
into
push
lds
into
push
das
int3
cmpsb
push
nop
mov
mov
aam
push
pop
cltd
xchg
insb
jno
sarl
push
test
xor
pop
outsl
mov
addr16
test
aam
jno
imul
cltd
jge
out
incl
pop
add
inc
cmp
mov
addr16
rorb
mov
ds
jecxz
int
lcall
int
dec
lock
pop
inc
popa
pop
sub
popfw
repnz
lahf
notb
std
cmp
pop
imul
push
adcb
lcall
pop
or
das
js
pushf
adc
shll
stc
dec
icebp
cli
cmp
jnp
cltd
lea
test
js
fstpt
lods
dec
sub
dec
or
enter
cli
movsl
jne
test
mov
cmpsb
out
dec
jmp
lea
jl
es
fidivs
xor
out
or
lds
jmp
scas
and
movsl
mov
lahf
push
test
test
xlat
mov
pop
push
roll
and
jp
jns
fcomps
stos
cmp
les
out
xor
pop
repz
mov
sahf
ljmp
sbb
sbb
dec
mov
loopne
enter
iret
cmp
inc
sbb
out
lea
fs
push
paddsb
inc
adcl
insb
hlt
adc
pop
xchg
ficomps
addr16
and
movsl
ss
sub
sti
fcmovu
call
loop
mov
mov
inc
fists
addl
dec
jl
mov
fwait
jb
mov
and
in
lret
mov
scas
adc
or
ds
dec
in
cmp
enter
pop
js
xchg
adc
ss
je
icebp
sti
test
je
xchg
cld
outsb
test
loope
sub
or
jb
pusha
loope
aad
mov
sbb
or
sbb
add
jge
mov
lea
in
xorb
imul
in
xchg
inc
xchg
cs
sbb
cmp
dec
test
cmpsb
pop
sahf
ljmp
nop
or
and
popf
sbbb
mov
adc
mov
std
test
xchg
add
sub
aas
or
add
movsb
hlt
and
cmp
mov
fldenv
lock
add
dec
dec
push
cld
movsl
dec
movsb
adc
test
mov
in
xor
inc
mov
pop
aam
mov
insl
sarb
push
loopne
cli
mov
inc
push
dec
adc
stos
add
ljmp
andl
and
xor
sbb
jne
jbe
add
inc
push
repnz
cmp
xor
aaa
divb
aam
cmp
xorb
shlb
dec
or
mov
popa
cmp
popa
rcrl
xchg
cs
data16
test
and
inc
add
cmpsl
insl
cmp
jbe
inc
sub
sti
xchg
dec
mov
pop
insl
adc
imul
int3
stc
imulb
flds
lahf
mov
cltd
into
cwtl
clc
aam
sub
insb
fists
jns
pushf
jge
or
jns
dec
js
stos
rol
pop
dec
cmp
mov
push
xor
xlat
orb
dec
scas
sub
xor
shlb
mov
das
push
gs
insl
popf
ja
pop
out
mov
mov
xchg
andb
test
lcall
cmp
inc
cmpsl
sbbl
in
sub
mov
ss
daa
out
cmpsb
dec
repz
ret
and
repnz
and
js,pn
jae
push
outsl
dec
xor
mov
pop
call
test
inc
loop
daa
iret
push
lods
xor
dec
inc
pop
jbe
xchg
push
pushf
shl
inc
dec
cmp
lock
and
push
popf
add
jecxz
adc
movsl
ficoml
push
je
rorl
orb
pop
div
cmc
push
inc
push
cmp
fmull
or
dec
adc
cmp
fsub
lcall
int
lret
stos
mov
jecxz
mov
fnop
sbb
lret
mov
pop
cmp
xchg
js
mov
or
and
andb
pop
pusha
aas
mov
and
xchg
cmp
or
and
cmp
js
leave
mov
out
dec
mov
fidivl
mov
xor
cmp
xchg
pop
mov
adc
rcll
pop
outsl
out
fistpl
mov
sub
push
dec
aas
ljmp
scas
jle
shll
adc
or
mov
icebp
sub
loopne
fisubl
daa
sbb
inc
rorl
testb
pusha
cs
fcom
adc
cli
jge
mov
test
loopne
call
cmp
scas
das
push
and
xor
fsubrs
roll
subl
push
pop
add
adc
push
cmpsb
pop
cmp
mov
cmp
pop
dec
mov
or
push
pop
dec
movsl
mov
or
pop
insl
lods
test
xchg
inc
repnz
pop
stos
mov
jmp
cltd
pusha
les
iret
xchg
sbbb
call
fs
hlt
pop
mov
cmp
mov
sahf
and
dec
out
hlt
inc
popf
jo
scas
push
mov
sbb
ficoms
imul
xor
jne
mov
scas
ret
mov
xor
sbb
or
pop
insb
dec
mov
fmul
cmp
mov
xor
out
and
andl
xchg
mov
jg
mov
in
mov
into
pop
and
icebp
popa
dec
jp
shlb
stos
test
and
addr16
jg
cmp
jb
notb
scas
loope
jae
stos
jno
in
cwtl
xchg
or
xchg
into
mov
adc
or
inc
xor
mov
xlat
dec
cli
lcall
adc
jle
mov
fisttpl
dec
pusha
bound
sub
movsb
lods
and
and
cmp
int
xchg
pushw
test
mov
cmpsl
jge
call
andl
dec
push
int
sub
je
pop
leave
dec
cmp
mov
ljmp
mov
in
lds
dec
xchg
mov
in
xchg
vpextrd
fstp
mov
and
cmp
insb
push
ja
adc
xchg
nop
mov
in
movl
into
jge
pop
stc
add
jge
or
xchg
dec
je
dec
loopne
sbb
pop
and
movsl
mov
stos
mov
stos
jge
lods
jg
push
int3
cltd
jne
adc
cli
cmpsl
icebp
les
sahf
je
adc
mov
std
cmp
mov
std
out
fnstcw
dec
arpl
and
in
pop
jo
cmpsb
add
mov
lahf
mov
mov
cmpb
xchg
cmpsb
push
into
stos
xchg
sbb
ret
outsb
or
xor
cmp
ss
pop
xchg
inc
mov
daa
cli
add
mov
and
pop
cmp
cwtl
pop
jne
pop
inc
dec
dec
popf
xor
cmp
js
faddl
cmp
test
inc
xor
into
outsb
fisttps
mov
stc
mov
mov
jp
test
push
pusha
xorb
ror
push
or
add
inc
jmp
add
mov
add
cld
daa
and
fs
loop
xchg
orl
les
into
shrb
outsb
scas
and
mov
repnz
or
jnp
sub
pop
mov
push
add
xchg
xlat
ret
pop
and
mov
push
gs
int
cli
sub
movsl
adc
xchg
mov
sbb
xchg
push
ficomps
cltd
mov
inc
xor
cld
mov
xchg
jnp
push
inc
mov
dec
adc
xchg
sbb
and
in
sbb
dec
sbb
lret
cmp
adc
dec
scas
cmp
stos
mov
jno
data16
dec
jno
popf
fwait
scas
les
or
mov
enter
pop
cmp
dec
and
push
xchg
mov
arpl
jbe
clc
testl
xor
aaa
adcb
imull
adc
lahf
and
xchg
lret
stos
mov
and
cld
dec
das
rcrb
shrl
sbbb
pop
mov
xchg
adc
mov
sti
stos
stos
mov
fucomip
push
or
sbb
adc
sbb
ss
sbb
mov
xchg
push
rol
test
mov
or
test
pop
inc
push
loope
fwait
sub
push
bound
mov
pusha
push
sarl
dec
xor
add
or
stos
cmp
adc
inc
cmp
scas
push
and
cmp
std
fidivs
mov
into
pop
pushf
stos
jecxz
xor
jge
dec
sarl
cmp
ljmp
aas
pushf
add
mov
pop
ja
ss
clc
out
mov
in
jl
sahf
jmp
daa
movsb
push
ficoml
loope
xchg
sub
dec
mov
push
jmp
push
inc
add
fbld
adc
les
aaa
cltd
xchg
jb
or
scas
call
inc
popf
pop
or
jae
scas
inc
pop
xor
outsb
sub
iret
out
repz
xor
lea
fmul
insl
fnstsw
mov
mov
fs
xor
movsl
mov
lret
pusha
xchg
push
movsl
mov
and
cltd
sub
out
dec
xchg
insb
and
jo
in
and
xchg
movsl
pop
std
inc
and
inc
sbb
xchg
inc
xchg
dec
pop
sub
or
adc
cwtl
pop
cld
jmp
dec
fistpl
cmp
sete
xchg
jle
aam
jle
sbb
sarl
push
sbb
mov
dec
pushf
test
pop
inc
mov
push
ret
sbb
leave
cwtl
push
mov
sbb
in
sub
sarl
jle
popf
adc
jb
data16
adc
dec
fdiv
pop
cld
inc
push
scas
push
sbbl
adc
pop
flds
adcw
insb
int
cmp
or
adc
jecxz
out
outsb
or
xchg
mov
pop
rcll
mov
movsb
lock
call
sub
lcall
push
fsubr
xchg
inc
fneni(8087
imul
push
or
adc
mov
xchg
sub
iret
push
fists
in
xor
sub
mov
dec
jbe
sbb
jecxz
push
mov
inc
adc
and
pop
and
xchg
xor
ljmp
ffree
aad
cmp
push
dec
inc
int
out
ret
cwtl
jl
aas
mov
stos
gs
daa
rcr
sub
rcll
and
fdivrl
xchg
inc
mov
dec
sub
pop
cmc
fsin
adc
test
lea
push
jmp
cmp
jb
mov
sub
jno
out
sbb
pop
je
addr16
mov
daa
jo
push
lahf
mov
pop
shl
int3
mov
xor
cmpsl
mov
adc
mull
mov
pop
pop
inc
je
lea
pop
xchg
jp
pop
call
jb
lret
mov
mov
sbb
xchg
inc
or
inc
js
and
ret
xchg
sbb
lret
shrl
jl
xchg
inc
divl
sub
hlt
insl
xchg
inc
and
mov
fdivl
mov
dec
lret
lock
imulb
inc
in
ljmp
aas
cmp
and
jecxz
je
scas
cmp
mov
mov
out
pushf
sub
icebp
push
pop
mov
imul
dec
mov
movsb
orb
test
cltd
pop
outsl
test
movsb
cwtl
sbb
pusha
in
cmp
ds
pop
fs
push
fsubp
sbb
xchg
inc
jmp
jge
mov
mov
fdivrl
jno
xchg
or
add
sub
push
gs
aas
xor
scas
imul
pop
mov
rolb
cltd
sti
loop
jno
outsb
pop
xchg
int
test
pop
push
clc
std
popa
add
dec
gs
fs
roll
in
dec
lret
add
leave
push
adc
pop
shrl
popa
insb
xchg
repz
fnclex
sarl
cs
clc
pop
mov
cmp
test
inc
aam
test
mov
mov
inc
adc
mov
lret
jmp
aas
ficomps
inc
cmc
inc
scas
add
hlt
cs
cli
cmp
mov
lahf
and
aaa
or
xchg
pusha
mov
cwtl
inc
outsl
loope
adc
test
test
inc
lock
js
lds
mov
into
enter
and
in
das
bound
push
inc
xor
mov
mov
inc
push
insl
repz
js
shll
std
repnz
jg
out
lcall
xor
pop
pop
cmp
push
sub
pop
cmp
pop
dec
in
dec
arpl
sub
das
imul
sub
les
cmpb
inc
dec
fs
or
lods
xchg
jmp
loopew
mov
imul
cltd
mov
push
cs
ficompl
jg
js
push
ja
stos
cmpsl
jecxz
out
iret
and
push
notl
lahf
scas
mov
xchg
cmpsb
out
cmp
lcall
push
jl
mov
out
adc
outsl
fstps
mov
or
bnd
mov
push
or
push
aad
sbb
int3
mov
aad
xchg
movq
jp
xchg
or
aad
inc
sub
dec
dec
push
push
aam
addl
dec
jmp
jbe
sbb
das
push
sub
push
or
icebp
mov
sarb
sbb
or
xlat
cmpsb
andb
std
lods
and
stos
fists
adc
nop
jne
xchg
cld
cmc
sbb
sub
push
sub
daa
jg
arpl
jnp
int3
xchg
xchg
sbb
out
sbb
jns
es
mov
mov
out
pop
xchg
add
mov
mov
or
mov
cmp
xchg
inc
sbb
test
adc
loop
add
jbe
xchg
dec
xchg
cs
ffree
or
cmpsb
sub
cmpl
insb
pop
xor
cmp
sahf
pushf
icebp
xchg
outsb
ret
cwtl
sub
clc
cmc
sub
push
jl
add
out
sub
pop
lds
sub
mov
and
fcompl
fisubrs
sbb
xchg
xchg
pushl
dec
bound
push
xor
push
call
mov
xor
fildll
dec
ret
or
call
mov
mov
pop
mov
sub
lds
pop
mov
es
fnstenv
jg
fnstcw
pop
or
je
ret
sub
jle
shll
xchg
adc
popa
cli
ds
adc
push
mov
jge
popa
mov
fadd
pop
or
ss
push
insl
shl
lret
rcl
lods
sbb
pop
idiv
mov
rclb
xor
ljmp
xor
test
arpl
int3
ret
stos
xor
xchg
ror
adc
fs
jmp
repnz
bound
test
xchg
mov
cmp
jo
mov
dec
and
pushf
sub
pop
lcall
rol
fcompl
les
fs
outsl
xor
push
pop
sbb
ss
or
shl
cmpsl
pop
movsl
fucomi
push
repnz
iret
jns
outsl
xchg
mov
and
incl
dec
adc
jbe
lahf
mov
fstl
inc
push
loopne
into
dec
fiadds
push
test
jmp
inc
aaa
xchg
stos
sub
jp
dec
mov
mov
inc
xchg
mov
xchg
jno
pop
mov
mov
je
add
mov
jne
movsl
or
mov
xor
movsl
scas
adc
push
in
inc
jp
jmp
mov
stc
cli
adc
insb
mov
mov
or
bound
scas
test
test
dec
mov
mov
dec
xlat
jb
inc
fisttpl
inc
rcrl
loopne
add
mov
shll
sub
out
call
sbb
rcrl
sahf
push
ret
repz
ror
pop
loopne
enter
jb
stos
pop
and
mov
sbb
movsl
lds
ret
pop
out
jo
testl
push
cmp
inc
or
pop
cmpsb
or
pop
pop
push
leave
mov
mov
out
xchg
sub
cmp
out
pop
sbb
pop
ss
ja
lds
inc
adc
int
jo
add
push
ret
hlt
mov
dec
dec
ficoml
lods
xchg
cmp
bound
cmpsl
mov
les
or
es
or
push
scas
push
fwait
mov
arpl
hlt
sub
pusha
add
pop
xchg
xchg
pusha
mov
imul
or
pop
sarb
movsb
add
mov
xor
lods
mov
stc
jmp
mov
enter
or
sub
ficoml
subb
icebp
xor
flds
pusha
mov
movsl
in
fs
inc
mov
cmp
mov
xbegin
fdivrl
fstps
or
pop
out
jp
insb
lret
xchg
jne
lods
rolb
xchg
mov
js
in
leave
js
shll
lret
mov
ror
cmp
sub
jle
cmpsl
imul
imul
mov
fcoms
into
pop
jae
imul
inc
push
cli
mov
inc
imul
jge
mov
inc
pushf
and
mov
movsl
inc
mov
adc
add
adc
mov
push
add
jge
xchg
mov
cli
punpckldq
fwait
lret
stos
xlat
dec
cmp
stos
cmpsb
push
mov
lea
and
ret
idivb
mov
jnp
mov
mov
rclb
mov
jo
xchg
cwtl
xor
sbb
mov
enter
add
xor
sub
gs
mov
stos
push
dec
fbld
clc
and
cmp
scas
stos
cmp
shrl
mov
sub
add
jns
cmp
cmpsb
mov
nop
clc
scas
mov
repz
sub
lret
mov
xchg
addb
repnz
xor
adc
daa
fsubr
adcb
idivl
std
and
out
adc
dec
fwait
pop
jmp
fisubs
mov
ljmp
aad
nopl
add
test
xchg
in
scas
gs
mov
repz
mov
and
jge
push
and
mov
xor
daa
shl
and
xchg
cmc
scas
js
fcomip
mov
mov
adc
nop
sbbl
ljmp
mov
stos
jb
les
pop
cmp
xchg
dec
dec
and
jle
stos
or
xchg
cmp
inc
imulb
insb
inc
jno
test
jno
fwait
data16
jg
and
or
pop
adc
xchg
movsb
popa
movsb
cmp
hlt
or
inc
in
cmp
dec
xor
jg
mov
test
push
ja
lock
into
xor
push
inc
fimull
mov
pop
sahf
out
sub
cmc
sub
lods
cmp
jae
adc
sbb
dec
repz
repnz
adc
insb
mov
add
jecxz
pop
out
shrb
or
pop
rcrb
popa
stc
inc
jmp
mov
add
jmp
icebp
loope
in
dec
repnz
mov
iret
cltd
jecxz
sbb
lret
or
roll
pop
dec
jae
lcall
shll
add
add
mov
sub
cltd
xor
inc
inc
push
out
pusha
cmpsl
call
ljmp
test
out
in
cli
mov
mov
dec
ljmp
andl
dec
xchg
inc
mov
cli
arpl
lret
cli
rcr
fwait
adc
sub
into
jns
sub
push
sub
dec
aaa
roll
iret
xorb
mov
jecxz
sub
subl
pop
aad
pusha
lods
clts
mov
popa
mov
or
in
jp
out
shll
jns
fldl
mov
in
dec
mov
cmpsb
xchg
or
or
in
clc
es
pop
push
mov
push
xchg
mov
daa
cltd
out
adc
fs
imul
inc
testl
int
xlat
bound
jp
cmp
push
add
loopne
add
cmp
lahf
cs
adc
push
mov
mov
jbe
ret
pop
pushf
pop
xchg
xor
ljmp
int
ja
sub
or
pop
sbb
jle
push
div
std
test
in
repz
mov
sub
cmpsb
leave
xchg
orl
scas
call
lea
push
xor
ret
xor
xchg
inc
aaa
std
ds
push
adc
je
add
outsb
loopne
xchg
mov
pop
shr
sbb
mov
adc
cmp
dec
adc
jne
repz
sub
popa
arpl
mov
nop
leave
stos
cmpsb
mov
cmpsl
mov
ret
test
mov
push
andb
sub
repz
pop
mov
sbb
negb
xchg
sbb
jb
and
imul
leave
sbb
es
mov
fimuls
lea
and
jg
pop
imul
sub
xchg
iret
test
rcrl
fmul
pop
cmp
sbb
nop
cld
imul
test
sbb
dec
or
inc
adc
mov
paddusw
andl
test
sub
in
outsb
xchg
cwtl
and
add
ret
xchg
adc
pushl
lret
hlt
sbb
iret
popf
dec
or
or
sbb
test
push
add
shrl
lret
loope
adc
sub
jns
mov
sub
stos
shl
jp
sti
lcall
push
sbb
sub
imul
lods
pop
sub
cmp
loopne
sbb
xchg
cmp
rol
dec
cmpsb
inc
sub
xchg
adc
mov
adc
clc
mov
mov
xchg
popf
dec
repnz
jg
aad
icebp
xchg
hlt
dec
stc
xchg
rorb
or
imul
push
movl
mov
ss
scas
in
pop
xchg
xorl
subb
fisubrs
roll
mov
fmull
jbe
movsl
lds
adc
shl
test
xchg
add
jnp
shll
sarl
push
lea
fwait
push
pop
lods
mov
jbe
push
sub
outsl
hlt
sahf
add
pushl
out
or
fsts
xor
cmpsl
ljmp
js
imul
int3
xchg
ds
sbb
clc
icebp
lock
mov
dec
in
push
inc
test
adcb
pop
fidivs
mov
pop
stos
xchg
sub
or
popa
adc
loop
loope
bound
cmpsb
loopne
add
imul
mov
imul
cmpsb
pop
fcomps
scas
pop
add
fldl
pop
out
hlt
mov
test
fistpll
jns
fdivr
movsb
or
sbb
lahf
xchg
mov
xchg
popa
mov
leave
jecxz
mov
mov
fdivrs
sahf
pop
mov
js
sbb
or
rorl
xor
xchg
faddl
or
in
jmp
and
sub
sub
jnp
and
sbb
cmp
data16
sbb
xchg
je
popf
ss
jecxz
dec
cmpsb
mov
icebp
pop
cmpsb
or
andb
mov
jb
jle
lods
test
dec
pop
inc
jno
jmp
lds
cmpb
xor
adc
inc
mov
std
jns
shll
hlt
cmp
push
add
inc
xchg
dec
sub
or
push
rorl
mov
jmp
ss
xchg
sub
nop
mov
mov
test
add
test
addr16
lret
int
xchg
push
aas
fs
rcl
popf
xchg
enter
xor
fsubr
aad
lods
lods
mov
xor
arpl
test
and
mov
pop
or
jns
or
inc
mov
cmp
filds
ja
clc
rcl
push
jmp
data16
packssdw
leave
sahf
fisubrs
add
repnz
out
mov
mov
jge
mov
cmp
cmc
cld
xchg
.byte
.byte
popa
sahf
.byte
add
dec
add
dec
add
xor
adc
dec
add
push
inc
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
add
push
add
add
add
orb
add
lock
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
and
add
cmp
add
push
add
sub
add
push
sldt
addb
sub
add
cwtl
add
xor
add
mov
add
enter
repnz
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
xor
add
pop
add
cmp
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
pusha
cmpsl
cmp
inc
outsl
insl
add
add
lock
orb
addb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
add
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
addb
add
add
add
cmp
add
add
add
add
add
add
nop
add
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
adc
add
add
add
cmp
add
add
add
add
add
add
and
add
add
add
cmp
add
add
add
add
add
add
xor
add
add
add
cmp
add
add
add
add
add
add
inc
add
add
add
add
cmp
add
add
add
add
add
add
push
add
add
add
add
cmp
add
add
add
add
add
add
pusha
add
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
addb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
add
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
xchg
or
in
add
in
or
in
add
add
cltd
or
js
add
dec
popf
or
mov
mov
add
movsb
mov
add
adc
add
adc
or
enter
fsubrl
add
les
add
movsb
scas
or
aam
add
js
or
faddl
add
push
mov
add
add
add
add
in
mov
add
add
clc
mov
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
leave
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
rorl
add
add
pop
add
push
add
inc
add
dec
add
sbb
mov
xchg
cltd
addb
dec
jle
mov
jne
aas
mov
inc
xor
and
pop
stos
xlat
roll
or
dec
cld
xor
fisubrs
ret
xor
dec
mov
push
cs
insb
mov
shl
push
pop
or
lock
mov
jecxz
xchg
into
int3
cmp
push
inc
and
icebp
lret
xchg
divl
sub
add
jmp
mov
shll
repz
add
aaa
lcall
xchg
bsf
pop
mov
pop
divb
lock
xor
inc
adc
mov
das
mov
mov
add
lods
das
push
call
xor
mov
pop
push
stos
push
movsl
stos
icebp
mov
aas
and
sbb
cmp
bound
aaa
dec
ds
test
ss
sti
into
sub
cmc
loop
xchg
xchg
or
shll
std
in
xchg
mov
jne
fldenv
sub
mov
jb
lea
adc
xchg
xchg
les
sub
out
shrb
pop
dec
dec
bsf
and
mov
jo
mov
add
xchg
push
jno
xlat
je
or
push
sub
aas
gs
repz
jge
push
pop
sub
sub
mov
pop
push
jb
mov
mov
mull
sti
jle
jb
mov
ficoms
fs
sub
mov
push
scas
iret
lods
cwtl
test
pop
lret
decl
int3
lret
jbe
inc
imull
sbb
sbb
cmp
loope
or
loop
mov
xor
cs
dec
loope
mov
jl
xor
push
add
cs
sub
jge
sbb
xchg
sbb
ret
xchg
xchg
and
or
pushf
leave
insl
and
aam
mov
subb
xor
push
mov
mov
outsl
fistpl
ret
pop
sti
sub
cmp
popf
jb
pop
leave
sti
push
inc
push
popf
dec
shrl
sbb
std
fisubrs
out
scas
or
push
sub
ret
sbb
pop
inc
js
test
jb
adc
mov
xor
cld
or
test
mov
mov
loopne
mov
test
imul
push
add
xor
adc
jno
jbe
stos
js
clc
data16
loopne
cltd
cmp
mov
xchg
cs
xchg
das
sbb
das
in
pop
sub
and
xchg
mov
push
xchg
ja
or
sbb
pop
or
popf
out
cwtl
cwtl
mov
inc
mov
sub
aaa
ds
mov
push
add
xchg
mov
popf
sub
or
fildll
pop
in
mov
add
push
fsubrl
dec
insl
iret
decb
mov
inc
outsl
stos
cmpsl
mov
fildl
out
cltd
ljmp
inc
jge
into
notl
xchg
bnd
dec
mov
stc
dec
cmpsb
das
adc
sub
mov
cltd
aas
sub
call
pop
xchg
mov
imul
mov
xchg
xlat
scas
jns
and
movsb
dec
ret
hlt
wbinvd
add
mov
inc
add
imul
xlat
jg
clc
adc
ret
mov
lahf
push
inc
mov
test
push
or
rcrl
xor
or
mov
add
lods
or
cs
cmp
call
add
std
cmp
dec
sti
in
dec
and
mov
jno
mov
inc
dec
std
and
lret
cltd
repz
xor
pop
cmp
lcall
subl
dec
insb
cs
mov
test
push
sub
jl
mov
fstpt
adc
or
mov
cmpb
pushf
xlat
repnz
dec
mov
cld
fistpl
jo
push
iret
in
ret
negl
sub
fsubs
add
sub
mov
shl
dec
adc
cmp
stos
iret
dec
mov
out
movsl
aaa
repnz
cmp
jb
mov
pop
fiadds
cmc
mov
sub
inc
mov
imul
lret
or
dec
cmp
out
pop
push
into
cmp
mov
cmp
adc
mov
inc
in
pop
repz
xchg
lock
mov
jb
insb
jl
frstor
sub
aas
lods
cwtl
push
add
mov
in
jg
mov
aas
negb
in
or
lods
test
sbb
push
lods
sbb
xchg
mov
daa
fs
mov
pop
insl
adc
movsb
bound
fnstenv
int
mov
add
rcr
add
mov
fsubrs
xor
out
pushf
jge
andb
in
fstpl
test
call
sbb
sbb
or
inc
mov
jg
cld
int3
sahf
rol
insl
or
cmp
ret
cwtl
mov
pushf
cmp
scas
movl
andl
ret
stc
fistpll
inc
rorb
push
pop
orb
dec
adc
imul
aad
in
icebp
and
sbb
or
test
addr16
xchg
push
or
in
mov
aaa
and
daa
fstps
sbb
loopne
idivl
test
rolb
icebp
jg
adc
xorb
xor
pop
sub
gs
push
pop
nop
jns
aas
lret
ret
orb
inc
jp
xor
push
test
cmp
cli
addr16
mov
js
mov
popa
clc
pop
int
in
cmp
adc
test
inc
pop
lcall
scas
dec
push
stc
xchg
inc
lock
cld
dec
dec
aas
pop
dec
sbb
js
or
icebp
push
sti
mov
rorl
in
pop
push
jle
das
test
dec
imul
xlat
rcll
jg
lods
imul
or
xor
and
mov
int
inc
in
rcll
bound
scas
add
fldl
vmovupd
fsubrs
inc
jecxz
pop
mov
lods
stos
adc
scas
push
sub
pop
sub
shrl
jo
test
cmp
aad
roll
adc
movsl
clc
leave
movsl
js
jns
inc
jle
icebp
loop
cwtl
shrl
dec
xor
push
inc
cmp
sub
xor
dec
rcrl
cli
sub
fisubrl
cmp
adc
out
daa
ds
ret
ljmp
pop
lret
test
notb
leave
stos
or
inc
mov
push
notb
enter
adc
cli
and
les
scas
mov
lods
mov
xor
jae
mov
jae
cli
stc
and
lret
jecxz
or
jbe
or
add
jns
jnp
shrb
dec
fs
mov
gs
mov
iret
rolb
sbb
in
jbe
leave
or
imul
outsb
push
xchg
push
xor
adc
int3
stc
lock
fsts
add
in
push
shr
shlb
divb
jo
call
mov
sti
pop
jo
and
lds
cltd
stos
shlb
aad
test
xchg
inc
xchg
in
mov
mov
push
pop
lahf
cmp
test
cmp
mov
dec
cmpsl
aaa
cli
out
in
punpckhbw
out
xor
pop
xor
clc
mov
pop
sbb
testl
shlb
inc
addr16
stos
mov
enter
jo
mov
cltd
mov
adc
out
sub
fs
orl
inc
inc
sbb
dec
jmp
lods
lahf
jg
rorl
mov
mov
push
sahf
xchg
adc
cmpsl
dec
push
aad
jbe
mov
or
movsl
rorl
and
bound
adc
fnstcw
ja
pop
shrb
stos
mov
adc
adc
push
add
int3
movsl
lods
ret
sahf
add
add
xchg
in
mov
jge
dec
rol
jp
repnz
test
insl
pop
leave
mov
dec
sub
jb
sti
sbb
fcomps
scas
repz
inc
sbb
clc
aam
out
adc
cmp
and
test
push
test
rclb
push
imul
and
cmp
inc
dec
aam
xchg
cmp
mov
cltd
outsb
jle
jecxz
add
bound
lret
jge
pusha
lods
inc
test
mov
jnp
lods
mov
pop
data16
cmp
sahf
sub
adc
in
sbb
adc
les
clc
pop
pusha
stos
add
pop
pop
hlt
mov
push
es
pusha
mov
push
mov
xchg
fwait
rcrl
jp
cs
mull
push
fisubrl
dec
xor
and
shrl
pop
sbb
add
cltd
bound
mov
les
cld
add
pop
mov
mov
repnz
clc
jne
sub
repnz
dec
aad
je
dec
gs
and
aas
std
mov
aam
sbb
shll
sbb
imul
subb
mov
scas
and
sub
add
push
mov
mov
or
pop
push
add
shll
push
or
jmp
mov
lods
pop
and
jo
xchg
pop
pop
push
sub
andps
loop
out
or
out
xchg
outsl
popf
cli
push
sub
sub
push
push
outsb
into
add
cltd
arpl
push
sbb
int3
cltd
pop
push
sub
xchg
dec
and
pushf
call
aad
or
adc
lock
into
bound
xlat
mov
movsl
insb
mul
push
xor
mov
cmovge
jl
mov
jmp
shl
lcall
sahf
cmpsb
in
scas
addr16
xchg
mov
shll
cmpl
lret
and
cld
adc
push
nop
jb
jns
fdivl
or
test
test
enter
out
xor
lock
pop
mov
push
fsubp
mov
outsl
jno
push
xor
lods
bound
leave
popa
pop
xrelease
adc
stos
mov
rclb
leave
xor
fdivrs
scas
in
push
out
xchg
test
cmp
fwait
into
dec
and
fwait
xchg
and
adc
sbb
aad
jbe
rorb
lret
push
aaa
imul
mov
xchg
push
mov
mov
addb
fisttpl
cmpsb
pusha
mov
arpl
popf
jecxz
imul
or
outsb
pop
sbbb
mov
xor
stos
jns
xchg
imul
mov
sbb
sbb
pushf
push
stos
and
hlt
cmpsb
mov
xorl
aaa
mov
add
repnz
cmpsb
test
popa
call
jge
jae
out
stos
test
jbe
lret
cmp
arpl
fs
clc
sub
mov
fwait
lea
or
div
cmp
fucomp
mov
mov
pop
pop
or
mov
in
add
enter
lock
dec
or
mov
xchg
inc
iret
shlb
and
outsl
xor
xchg
daa
out
clc
enter
cmc
bound
lcall
jo
push
pop
lods
jnp
call
jp
xor
pop
and
inc
adc
js
mov
cmp
mov
dec
jmp
add
or
into
pop
sbb
xor
in
xchg
outsb
xor
repnz
in
adc
sbb
xor
pop
adc
pop
pop
pop
sahf
jae
leave
fs
clc
xorb
lea
xchg
test
loope
cmc
mov
xchg
sbb
lcall
insl
pop
scas
roll
nop
inc
or
in
dec
mov
push
bound
adc
repz
inc
xor
sbb
mov
dec
and
notl
dec
rcl
inc
lcall
lea
cmp
pusha
test
loopne
cmp
sbbl
or
xchg
fbld
test
fdivrs
outsl
mov
fstpt
bound
cmp
jg
push
test
xchg
movsl
and
mov
dec
enter
test
clc
leave
mov
std
add
pop
xor
enter
mov
loop
arpl
ds
leave
pop
movsb
jno
inc
clc
dec
les
outsb
lcall
pop
inc
jae
test
aad
jo
mov
cltd
lahf
dec
shll
add
mov
test
insl
imull
pop
outsl
mov
arpl
pushf
sarl
mov
int3
or
xchg
push
insl
push
andl
outsb
imul
rcll
jbe
jle
out
not
test
pop
cmpsb
push
out
insl
or
lea
push
rcrb
out
jge
lods
lds
das
subl
loope
popa
movsl
rclb
inc
lods
negl
out
aaa
cs
inc
inc
mov
xchg
sub
jmp
mov
and
subb
jb
out
movsb
rcl
loop
test
sub
and
imul
add
mov
testb
ficomps
jp
sti
js
mov
cld
loop
orb
mov
dec
mov
jmp
xlat
faddl
add
adc
data16
stos
loope
pusha
xor
das
cmp
xor
dec
or
adc
inc
xor
mov
test
xchg
xchg
inc
pop
mov
or
ljmp
ss
stos
pushf
xor
arpl
into
mov
loop
aaa
push
out
data16
push
lret
mov
mov
movsl
add
dec
sub
mov
jecxz
out
sub
cmpsb
ret
sbb
hlt
rcl
adc
push
and
mov
sti
push
jmp
mov
xchg
movsl
pop
sub
fiadds
popf
mov
dec
cmp
push
mov
ja
dec
jge
shr
in
imul
imul
stc
pop
leave
call
testl
mov
mov
lea
adc
and
mov
and
subb
pop
fbld
cmpsl
shlb
lret
xchg
xorb
add
mov
mov
adc
mov
or
xor
lock
inc
xchg
test
arpl
rorl
ds
inc
pop
mov
xchg
xchg
in
cmp
mov
mov
lret
jns
pop
pop
mov
in
add
jecxz
stc
jo
jb
scas
popf
push
imul
add
xchg
inc
negb
add
or
inc
rclb
sarb
xchg
mov
stos
lret
and
daa
sarb
adc
adc
ss
movb
pushf
mov
mov
xorl
jns
js
shrb
aam
orb
ret
icebp
in
std
movb
mov
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
mov
inc
pop
xor
shlb
int3
adc
add
add
fs
xchg
ror
into
out
cld
test
mov
add
jae
or
mov
jns
call
push
xlat
les
ds
sub
mov
add
movzwl
add
sub
push
or
popl
push
movzwl
pop
sub
mov
dec
jp
mov
sub
jne
call
cli
stos
or
push
and
pop
setb
add
jns
out
mov
push
sti
shll
add
mov
push
dec
test
jbe
pop
sub
mov
cmp
adc
sub
jmp
es
add
mov
dec
lock
mov
and
lea
add
mov
loop
add
mov
paddusw
movsb
pop
mov
add
in
arpl
jo
pop
add
inc
or
mov
cmpsb
mov
add
adc
orb
aaa
ss
or
xor
loope
lahf
inc
add
push
sbb
add
stc
lret
and
xlat
inc
aaa
and
loope
in
sub
insb
les
mov
test
mov
add
loope
or
mov
jg
mov
cmpsl
ja
xchg
smsw
add
mov
inc
cmp
mov
xchg
mov
nop
roll
cmpsb
ja
icebp
or
pop
out
faddp
inc
mov
ficoms
mulb
and
xchg
jl
shrl
pusha
adc
fsubrs
subl
and
divl
addb
lock
inc
mov
add
or
push
mov
fstl
gs
push
adc
das
or
jp
fistpll
mov
sbb
xchg
inc
leave
repnz
fsubrl
shlb
sub
jg
aad
dec
out
movsl
pop
jns
loopne
pop
xchg
ret
inc
leave
sub
and
mov
xlat
cli
cmp
je
inc
into
push
xchg
mov
xchg
inc
js
fistps
leave
stos
test
icebp
sahf
ja
jp
lret
lret
push
mov
push
mov
mov
dec
xchg
pop
callw
lea
mov
fldl
sub
xor
ds
ret
mov
xchg
cwtl
push
shrb
cmp
jo
xchg
inc
leave
sbb
push
shll
sub
add
push
stos
lret
iretw
insb
stos
gs
jbe
sbb
lods
sub
jmp
jecxz
test
mov
xchg
xchg
pushf
aad
xor
push
xchg
shlb
adc
jns
jmp
mov
mov
xor
addb
pusha
or
xor
cmp
das
leave
xor
cmpsb
aas
or
xor
cwtl
pop
cmp
stc
ret
dec
sub
sub
mov
push
rolb
jnp
test
pop
pop
movsb
ljmp
loop
xor
mov
cmpsb
jnp
inc
dec
sarl
das
xchg
das
in
dec
gs
daa
daa
divb
adcb
aas
js
mov
cs
cli
ret
fwait
push
sti
mov
dec
push
orl
cwtl
or
and
push
cli
mov
mov
cwtl
je
xor
test
add
inc
cmp
cwtl
adc
xor
ficoms
call
roll
outsb
rorl
call
push
iret
mov
ljmp
test
and
ss
in
call
mov
xchg
jmp
test
and
aas
ss
call
mov
jmp
xor
call
fstl
and
pop
cmp
mov
leave
in
call
push
adc
test
adcl
jns
inc
daa
jmp
mov
test
dec
fs
notb
inc
test
adc
test
frstor
mov
fsts
and
and
imul
mov
add
in
fldl
call
int
out
call
jbe
pop
dec
and
fs
adc
imul
dec
ficoms
outsb
jae
call
add
jmp
add
jecxz
fnstsw
xchg
jge
adc
inc
or
sti
jnp
adc
cmp
xchg
fs
adc
imul
adc
call
fstl
repz
xchg
fistl
mov
adc
add
lock
mov
mov
pop
fld1
call
lea
call
aas
xchg
fs
adc
imul
adc
imul
adc
call
cld
xchg
sub
xchg
adc
call
pop
int3
call
in
push
lret
fstl
and
jbe
and
jnp
inc
push
rorl
push
ss
shl
fstl
sbb
call
call
or
je
push
stos
mov
call
fdivr
je
dec
cmp
mov
mov
pushf
lret
lods
push
cmp
out
cmp
mov
adc
jp
mov
pushf
lret
int
in
lret
data16
aas
pop
mov
xchg
cltd
cmpsl
enter
fsin
je
dec
cmp
mov
jp
and
push
jno
dec
push
call
sahf
fistl
lahf
sub
je
dec
cmp
mov
pcmpeqw
push
call
sahf
fistl
lahf
sub
je
dec
cmp
mov
sbb
push
cs
mov
and
pop
pop
icebp
dec
or
add
into
call
lret
data16
aas
pop
mov
xchg
cltd
cmpsl
enter
lahf
adc
sbb
xchg
out
adc
call
push
sbb
sbb
mov
mov
or
test
ret
xchg
cli
arpl
and
bound
cmpsl
mov
mov
addr16
xchg
cli
arpl
and
bound
insb
es
adc
call
jp
fsubrp
pushf
and
call
ficoms
call
shlb
jnp
adc
rclb
out
test
mov
fstl
call
fstl
in
push
loop
jge
adc
test
adc
jecxz
shl
sti
mov
iret
inc
add
sbb
call
data16
push
add
adc
pop
out
cmp
pop
jecxz
xor
and
mov
push
or
mov
jnp
dec
out
ret
out
ret
or
iret
fnsave
xor
sahf
lret
pop
add
lods
aam
std
adc
lods
test
xchg
aad
stc
test
pop
cs
adc
enter
mov
call
call
fstl
call
fstl
call
frstor
out
jo
in
call
fstl
call
aaa
inc
fidivs
enter
push
call
fstl
call
fldl
imull
movsl
and
inc
jl
cmc
adc
call
and
jmp
imul
push
dec
lods
cmpsl
ljmp
mov
sti
hlt
xlat
add
fwait
push
call
popa
leave
stos
imul
cwtl
xor
jo
add
sbb
cmc
adc
inc
lods
out
jne
and
dec
sar
outsl
mov
sub
adc
insb
mov
inc
pop
lods
stos
inc
dec
push
insb
sti
aad
rcrl
xchg
lea
gs
sbb
xchg
dec
fstl
push
jbe
xchg
push
sub
clc
jle
add
sub
dec
js
and
call
ret
pop
mov
lretw
xchg
jns
into
sub
incb
sub
add
test
add
fistps
stc
lea
mov
sbb
cmc
lods
js
dec
xchg
out
imul
mov
sub
sbb
sbb
lock
divl
mov
lock
and
or
push
xchg
pop
scas
add
inc
ss
xor
icebp
orb
dec
jge
pop
rorl
clc
in
in
or
pushf
call
add
popa
dec
ret
lea
cli
xchg
test
sbb
xchg
subl
into
in
inc
sbb
pop
adc
stos
push
push
push
pop
mov
in
xchg
xor
xchg
sub
pop
adc
mov
dec
dec
pop
pop
leave
add
push
js
mov
add
pushw
mov
mov
xchg
push
test
insb
mov
sbb
cwtl
xchg
xorb
data16
jnp
jl
test
fnsave
dec
adc
cwtl
jmp
fnsave
dec
cld
jle
inc
sbb
rorl
sub
dec
pop
sti
fdivrl
cli
sub
mov
jecxz
mov
add
insl
inc
mov
or
arpl
dec
stos
push
mov
mov
fdivs
ljmp
jnp
mov
popf
xchg
out
sub
cmp
push
mov
mov
pushf
repz
flds
mov
add
add
xor
pop
pop
xchg
adc
frndint
xchg
jns
jae
xchg
lret
int3
mov
mov
incl
aam
sbb
dec
or
cmp
add
decl
jns
fnstcw
popa
cltd
test
test
push
inc
fdivrs
lahf
lds
shrb
adc
mov
iret
xchg
adc
lahf
incb
add
add
add
or
add
add
dec
add
dec
add
xor
adc
dec
add
in
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
or
hlt
jmp
add
or
pxor
add
out
or
pop
out
or
sub
or
pop
out
or
cmp
or
daa
out
or
inc
out
or
das
out
or
dec
out
or
aaa
out
or
pop
out
or
aas
out
or
fs
or
inc
out
or
outsl
out
or
dec
out
or
jl
or
push
out
or
mov
or
pop
out
or
xchg
out
or
addr16
or
mov
out
or
scas
out
or
ja
or
mov
out
or
out
or
xchg
or
shr
or
out
or
fsubrp
or
xchg
out
or
ljmp
add
out
or
cmpsl
out
or
add
or
scas
out
or
jne
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
jb
imul
add
imul
insb
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
outsl
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
out
or
add
add
fsubr
or
add
add
in
out
or
add
add
sti
out
or
add
add
or
or
add
add
sbb
or
add
add
lock
add
add
inc
lock
add
add
push
lock
add
add
outsb
lock
add
add
xor
add
add
add
add
add
add
add
add
add
lock
add
add
fcomi
or
add
add
in
lock
add
add
add
or
add
add
or
or
add
add
and
or
add
add
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
push
push
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
dec
outsl
arpl
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lock
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
xor
loop
insb
mov
imul
pop
in
cltd
mov
mov
cmc
in
lret
mov
cmpsl
cmp
fcoml
rcr
outsb
mov
cli
add
aam
jns
lods
adc
nop
fisttps
sti
leave
enter
mov
dec
popf
hlt
stos
and
dec
addl
js
xchg
pop
popl
test
popa
jns
push
cmp
xlat
push
outsl
sti
mov
out
imul
in
xchg
mov
dec
push
stos
and
mov
adc
pop
xchg
sbb
jno
or
push
and
insl
jl
divl
jge
int3
pop
mov
push
inc
out
fldl
pop
inc
nop
sub
lcall
out
loopne
cld
rolb
mov
outsb
pushf
jl
inc
dec
leave
mov
and
jl
nop
int
sbb
ret
jne
out
sbb
mov
inc
and
push
mov
pop
dec
mov
sub
xchg
jp
push
not
or
lcall
addr16
lods
and
cmp
xor
cmc
cmp
div
cld
lahf
inc
je
xchg
mov
pop
mov
dec
std
xchg
aas
cmp
lods
sahf
dec
jmp
add
pop
mov
xor
stos
mov
outsb
sub
sub
jle
sbb
out
imul
inc
or
repz
cmpsl
xchg
adc
mov
ror
jge
mov
dec
aaa
scas
pop
inc
mov
jno
std
dec
cs
imul
pushf
std
stos
mov
cmp
cmp
lock
pop
mov
test
jecxz
jns
ret
lods
add
test
push
and
mov
movl
in
sbb
in
mov
cmp
cmpsl
or
push
xchg
into
je
leave
mov
subb
rcrl
push
sbb
dec
es
outsl
push
or
mov
fildl
sub
inc
cwtl
jnp
jecxz
mov
testb
mov
cmpsl
fs
jne
dec
stos
cld
call
negl
sbb
and
stos
js
loope
xchg
outsl
out
lret
jle
xchg
scas
stc
pusha
sub
ja
pop
cmp
ja
mov
sub
arpl
sbb
inc
xchg
dec
adc
fsubs
shlb
dec
sub
repz
cld
xchg
push
push
ret
push
jne
sarl
loopne
cmpsl
dec
and
inc
enter
addr16
cmp
jge
lods
cmp
int3
jns
cli
shll
popa
dec
sub
inc
xchg
inc
xor
ja
fistps
insb
bound
leave
cltd
fstps
or
adc
scas
sbb
inc
scas
divl
push
xchg
mov
test
cmp
test
xor
cli
inc
lahf
icebp
push
mov
in
lods
sarl
and
jns
sub
and
add
inc
mov
or
pop
std
aas
repz
cltd
pushl
stc
das
test
pop
bound
xor
jl
out
fs
in
cmp
xchg
ljmp
xor
mov
mov
push
mov
mov
fmul
imul
out
mov
or
cmp
rolb
or
aam
loope
cmp
adc
stos
adc
mov
fsubrl
cmp
or
out
xchg
imulb
mov
mov
cmp
loope
mov
lret
add
int3
or
je
adc
imul
lret
stos
inc
pop
cmp
insl
jo
jmp
sbb
inc
ljmp
xor
jg
push
adc
inc
add
inc
addb
mov
dec
dec
or
adc
xchg
push
pop
shl
jb
fdiv
out
adc
sub
clc
and
inc
pop
dec
jp
jne
loope
cmp
push
stos
lock
cmp
and
pop
mov
mov
sbb
test
lcall
or
ds
int3
mov
aaa
shrl
loope
cs
ret
sub
paddusb
push
ss
xchg
cmc
inc
or
aad
inc
fcomi
jmp
jno
xor
mov
push
mov
sbb
push
mov
xchg
xor
das
mov
push
ja
pop
jbe
dec
into
mov
xor
jg
push
mov
sahf
jae
inc
dec
mov
or
rcrb
push
mov
inc
or
xchg
inc
mov
sub
cld
dec
mov
sbb
xor
or
sbb
mov
lcall
jb
loope
xchg
xchg
xor
push
adc
mov
pop
fwait
test
push
out
or
xchg
daa
sbbb
xchg
out
xchg
stc
pop
test
add
mov
inc
xchg
sub
jge
push
aad
les
fdiv
cltd
or
lahf
loop
mov
sub
sbb
fs
inc
or
or
test
lahf
and
shrl
ds
loop
call
add
mov
lds
dec
cwtl
out
sbb
jns
cld
pop
jbe
mov
test
and
pop
outsl
sbb
xor
jo
popf
jns
mov
jle
push
xor
inc
fistl
arpl
ljmp
icebp
fistpll
aad
mov
dec
pop
fsubs
cltd
movb
jb
das
push
mov
adcb
sub
std
movsb
enter
xor
dec
ficoms
cmp
sti
xor
movsb
xor
idivl
jno
insb
sub
add
push
rcll
add
push
popf
xchg
mov
call
sub
pop
fstps
jmp
loop
cli
push
lods
cltd
fs
push
lahf
outsl
add
mov
test
xor
xchg
jns
lret
mov
add
movsb
pop
in
addr16
inc
cmp
ja
xor
adc
mov
pusha
das
mov
pop
push
popf
bound
xchg
fdivl
in
sub
mov
inc
mov
test
aas
imul
imul
sti
xchg
jae
in
push
push
std
push
fidivs
in
cmpsb
fildll
shll
pop
test
or
mov
pop
rcrl
or
or
or
sarb
ret
in
and
lds
add
jle
fwait
push
sbb
pop
inc
pop
test
add
jmp
ret
je
jns
je
add
xchg
or
cmpsb
jo
cmp
fsubrs
and
iret
int
sbb
pop
dec
popl
outsb
add
add
orb
mov
sub
test
stos
sbb
xchg
jg
fcoms
popa
mov
xchg
lahf
icebp
mov
loope
sti
add
mov
popf
inc
lret
cmp
cmp
add
and
int3
push
pushf
es
roll
scas
pop
or
lds
jl
xor
push
adc
scas
punpcklbw
add
int3
xchg
dec
xor
push
add
jmp
dec
push
mov
xchg
sbb
cmpsl
fneni(8087
inc
hlt
imull
push
xor
ret
sbbl
jmp
jne
xor
ss
sbb
pop
into
jmp
sub
sbb
jle
cmc
pusha
dec
pop
repnz
movsb
mov
inc
adc
ljmp
ljmp
push
out
xor
cmp
loope
fcoms
imul
scas
inc
jmp
leave
inc
iret
dec
add
xchg
push
jp
mov
mov
in
sbb
gs
cwtl
out
mov
pop
cmp
mov
mov
std
jae
sarl
adc
sbbb
insb
push
cmpb
mov
push
cmpsl
loop
push
cmp
dec
inc
dec
and
push
cmp
mov
imul
mov
mov
fisubs
test
mov
sub
test
add
add
pop
or
mov
sbb
sub
mov
adc
mov
push
pop
in
sub
pop
pop
iret
daa
jnp
dec
mov
aaa
mov
fwait
mov
repnz
fisubrs
shl
je
xchg
xchg
jnp
and
pushf
fisttpl
xor
and
xchg
es
movsl
pop
mov
mov
push
incb
pop
lock
sbb
jg
insb
sbb
pop
jne
xchg
sbb
push
sub
adc
lods
repz
jns
in
ret
into
xlat
jg
inc
fstps
xchg
lods
jecxz
cli
mov
test
cmp
push
in
adc
inc
mov
scas
add
fisttpl
pop
cmp
pop
fmuls
xorl
scas
push
js
adc
int
es
int
cmpsb
test
pushf
ffreep
movsb
xor
stc
ljmp
jmp
mov
xchg
fisttpll
mov
add
lds
and
and
xchg
pushf
aam
and
aam
outsb
push
add
push
arpl
inc
pop
std
movsb
pop
es
xchg
mov
in
test
adc
dec
filds
fisttpll
movsl
sub
mov
add
jle
or
sbb
xchg
add
jb
adc
dec
dec
jg
call
cwtl
push
aad
fcmovnb
dec
es
mov
mov
xchg
sahf
mov
stc
push
out
xchg
sub
test
jae
imul
jmp
and
sbb
mov
ficoms
cmpsb
test
sbb
out
push
faddp
push
lahf
add
loop
adc
addr16
sbb
add
imul
xor
fcmovne
cmp
mov
cmp
add
pusha
cs
and
mov
fwait
cmpsb
pop
xchg
push
xor
add
fstpl
enter
loop
jmp
mov
sub
dec
js
outsb
dec
in
or
jnp
pop
lods
shl
mov
subb
aam
xor
pop
inc
pop
test
inc
outsb
sbb
cwtl
out
dec
jb
std
cmp
xchg
fcmovbe
outsl
ljmp
xchg
fmuls
fwait
dec
lods
xchg
daa
adc
inc
pop
in
gs
iret
imul
jne
sti
push
divb
dec
movsb
or
aad
orl
or
in
xchg
fbstp
inc
xchg
inc
xchg
in
push
ret
ss
fstpt
dec
add
push
cmp
imul
add
jl
and
test
and
roll
les
cmpsb
cltd
add
xor
hlt
adc
inc
sub
mov
mov
and
inc
push
mov
sub
adc
and
ljmp
outsl
mov
xchg
pop
push
xchg
mov
lds
mov
fidivl
fsubl
test
mov
lock
xlat
jmp
dec
xor
inc
dec
divb
mov
and
pop
jae
pop
in
mov
push
lret
cmp
iret
pop
lahf
rorl
pop
sbbl
lds
gs
cmp
cmpsb
sub
push
and
icebp
push
data16
test
push
in
daa
ss
movsl
loop
in
test
sarl
aam
imul
nop
xchg
lea
or
sti
std
cmp
fcomps
pop
out
or
lahf
in
pushf
sbb
in
inc
negb
and
cmp
and
mov
jne
ljmp
aaa
fwait
adc
pushf
dec
cltd
inc
add
mov
cltd
jle
aas
lea
popa
adc
das
jg
mov
fstps
fcompl
lret
fcoms
or
fs
mov
mov
fbstp
inc
mov
pop
xchg
mov
and
adc
pop
mov
lret
sar
popf
sub
fnstcw
adc
frstor
push
push
xchg
cld
or
pop
jne
icebp
cmp
into
add
or
or
push
sub
or
dec
in
imul
out
add
imul
loop
dec
and
lods
mov
rolb
xchg
shrl
loopne
out
mov
mov
das
mov
mov
loop
or
icebp
mov
cmp
cli
sub
push
ficoms
jge
lods
jmp
ljmp
sbb
adc
mov
clc
adc
popa
add
jnp
pop
addr16
lahf
mov
sub
jae
fdivrs
sbb
hlt
ficomps
das
jge
jo
stos
js
add
and
fmuls
int3
shll
sbb
xlat
push
mov
mov
int3
xor
inc
enter
pushl
outsl
jns
pop
inc
push
lock
or
lock
dec
cmpsb
push
mov
mov
and
mov
jecxz
xchg
mov
in
imul
cmp
cmp
stos
shlb
leave
dec
adc
lret
jg
sub
jmp
rorb
incl
stc
icebp
fistpl
pop
add
push
fucomp
mov
pop
out
fwait
sbb
popf
push
lcall
shlb
shlb
fimuls
jne
gs
inc
jg
bound
inc
rcll
sbb
sbb
inc
leave
fldl
sahf
movsb
and
inc
rclb
adc
in
stc
test
lds
inc
imul
aad
inc
mov
mov
fldt
dec
mov
test
call
jl
out
jmp
xlat
out
movmskps
insl
or
fldenv
stos
cld
ljmp
sbb
and
gs
sahf
xchg
lods
pop
test
cmp
push
sbb
leave
xor
pop
fsubrs
mov
dec
pop
mov
sarl
sub
xchg
lock
xor
das
pop
fsubs
enter
sbb
rolb
mov
add
ret
std
lds
jb
pop
xor
cmp
adc
ficoms
add
xor
sub
ss
inc
into
mov
subl
loop
arpl
xchg
push
sub
jmp
addr16
lcall
das
bound
mov
movsl
pop
mov
xchg
xchg
sub
xchg
cmpl
leave
xlat
push
push
jbe
nop
sub
sbb
jl
push
roll
adc
jnp
nop
out
out
mov
imull
sbb
mov
sbb
and
in
jno
and
jge
xor
fwait
xor
mov
cmp
sub
push
idivl
add
imull
mov
pop
jge
push
xchg
sub
lret
push
les
inc
out
sarl
addl
repnz
int
repz
test
cmp
outsb
mov
jne
add
inc
mov
repnz
cs
adc
dec
test
lret
xchg
out
xchg
aaa
mov
loopne
cmp
int3
nop
sub
cmp
add
std
push
dec
adc
lds
jne
cmp
mov
sub
hlt
adc
std
test
sub
aam
inc
fists
push
xlat
aas
mov
xchg
int
sub
jne
movsb
or
or
cmp
shl
fisttpl
popa
mov
and
sbb
push
dec
and
dec
add
mov
dec
mov
inc
pusha
in
nop
ss
out
inc
jae
mov
loope
mov
fldcw
loope
js
fmul
mov
test
xchg
or
aad
or
pop
test
cmp
ss
loop
inc
cs
pop
out
insl
out
sub
into
pop
inc
inc
fbstp
repz
pop
nopl
std
sub
inc
aad
jns
cmpb
sub
sub
and
cmpsb
fidivrl
adc
inc
push
jp
xor
mov
pushf
sub
movsl
fsubs
xchg
call
add
mov
or
and
jns
lret
aad
mov
mov
into
into
addr16
sub
push
popa
sbb
dec
imul
in
xchg
or
movsl
xchg
roll
xor
int3
sub
pop
and
mov
loope
leave
push
ja
xor
jg
cli
inc
push
std
popa
jp
add
cmp
rclb
popa
test
aaa
xor
cmpsb
aam
push
mov
cmp
nop
push
je
pop
mov
movsb
cmpsb
push
jbe
inc
insb
push
xchg
xchg
int
pop
ss
movsl
pop
sub
fprem
lret
aam
ja
das
cmpsl
arpl
das
adc
cld
fucom
loop
les
jle
test
incb
repz
ljmp
lahf
ljmp
lock
mov
test
gs
or
xchg
mov
cmpsl
dec
push
pop
cmp
hlt
adc
sahf
roll
into
lds
ret
dec
lret
adc
mov
icebp
in
mov
xlat
add
clc
pop
les
inc
mov
addr16
xchg
xchg
popf
jmp
lret
cmp
das
pop
scas
mov
insb
inc
sahf
xchg
cwtl
mov
mov
adcl
out
sbb
pop
shll
mov
mov
push
push
inc
or
cmp
jg
mov
insl
cmp
ss
leave
push
inc
movsb
lahf
add
jb
pop
push
cmpsl
cltd
and
mov
cmp
pop
jecxz
mov
push
sub
sbb
adcb
jecxz
enter
insl
pop
cmp
jge
fsubrs
inc
fsubs
or
push
js
aas
sbb
dec
add
mov
pusha
rcrl
push
push
movsb
dec
fldcw
push
rorl
mov
jge
icebp
mov
rorl
jmp
mov
dec
cwtl
sti
orl
jbe
and
lahf
cmc
iret
xchg
fwait
push
sti
adc
or
test
mov
inc
sbb
and
jg
push
push
loopne
sub
pop
xor
push
pop
scas
inc
pop
cmp
es
les
xchg
sahf
test
test
mov
fmull
or
jnp
mov
and
pop
inc
mov
insl
rcrl
in
outsb
stos
inc
in
dec
dec
hlt
cmp
ret
jae
ret
xchg
add
inc
movsl
ret
insl
push
mov
or
test
outsl
lock
shll
loopnew
pop
ss
jnp
sti
and
inc
arpl
fisubrl
adc
cmpsb
lret
sahf
adc
mov
fwait
xor
repnz
dec
mov
popa
cwtl
mov
inc
outsb
lea
lret
inc
fsubr
fs
call
test
rolb
inc
add
add
fwait
push
loopne
inc
dec
adc
mov
mov
data16
pusha
fiaddl
out
leave
xchg
aam
inc
lods
lods
loop
mov
jae
pusha
xor
cmp
cli
pop
outsb
xchg
stos
jae
test
or
sub
fisubs
mov
pop
ss
cmpsl
jmp
push
cwtl
dec
stc
push
cmp
into
sbb
int
pop
cmpsb
outsl
pushf
movsl
jno
call
lahf
mov
mov
aas
jmp
test
mov
in
imul
outsl
cmc
adc
sub
lock
dec
jns
adc
repnz
fisubs
xchg
cld
clc
je
in
data16
dec
arpl
lahf
dec
fsubrl
pushf
push
adcb
dec
insl
mov
sbb
das
jno
mov
addr16
ja
mov
mov
dec
outsb
outsl
sub
inc
nop
push
enter
jne
repnz
xchg
inc
or
adc
dec
jl
pop
mov
arpl
and
mov
and
ret
pop
pop
sub
push
stc
xchg
cmpsb
fisubrl
mov
sbb
jae
rorb
dec
dec
fcoms
outsb
adc
adc
and
add
shrb
push
adc
xor
inc
idivb
sahf
xor
or
loope
js
lock
pop
and
sub
pop
fnstenv
cmp
gs
test
test
lcall
jbe
aam
push
test
xor
cmpsb
mov
inc
roll
insb
mov
cmp
sbb
int3
jmp
cmpsb
lahf
jl
mov
mov
clc
pop
sub
les
das
fwait
idivl
add
jne
gs
jl
orb
inc
stc
iret
loop
call
cltd
into
lods
leave
or
shrb
adc
pushf
xchg
inc
lods
add
lods
push
or
push
cwtl
jne
mov
mov
repz
mov
in
add
xlat
push
sub
mov
and
lods
movsb
xor
movsl
pop
lock
mov
jns
cli
dec
and
adc
xchg
sbbb
fiaddl
cld
stos
pop
sti
cmp
dec
mov
inc
adc
push
sbb
mov
cltd
in
xor
mov
push
mov
ja
pop
mov
jecxz
mov
pop
nop
xchg
fs
loopne
std
jp
mov
lods
xchg
or
sbb
dec
and
iret
cwtl
adcb
mov
inc
sub
push
mov
pop
inc
xor
cld
orl
cmc
adc
jp
mov
cwtl
cmp
sbbl
nop
mov
mov
aas
sbb
push
adc
jge
pop
test
hlt
daa
push
jle
call
mul
inc
jg
xor
stos
push
xchg
mov
push
dec
pop
adc
mov
push
xchg
or
xchg
andl
and
adc
pushf
jb
xchg
mov
mov
cmp
shrl
xchg
leave
mov
stc
mov
outsb
pusha
pop
inc
shll
test
hlt
mov
int3
mov
das
scas
dec
ljmp
insb
dec
lahf
ror
push
mov
xor
jge
sub
mov
adc
stos
dec
cltd
jno
insl
cmp
dec
mov
xor
mov
and
adc
inc
add
and
shll
std
stos
mov
imul
mov
ds
sub
adc
dec
jno
inc
ds
in
bound
and
fmuls
xrelease
pusha
inc
pop
iret
push
xor
mov
nop
or
pop
push
adc
int
jb
in
stos
mov
sub
ss
aad
ljmp
xchg
dec
gs
mov
push
icebp
pop
sbb
rorb
mov
add
mov
les
ret
call
mov
adc
int
sub
mov
leave
pop
std
lret
xor
inc
lahf
ja
ret
adc
scas
sub
pop
sub
ss
pushl
mov
sub
lahf
pop
mov
xchg
mov
cmp
cmpsb
rcr
xchg
jecxz
loop
jmp
mov
sti
adc
push
loopne
sub
outsl
psubusb
fldt
push
hlt
fistl
scas
std
int
cmp
and
ss
dec
test
pop
pcmpeqw
add
xchg
scas
gs
sbb
and
xor
add
dec
in
push
mov
mov
fs
mov
xor
shr
imul
adc
jmp
jle
out
pop
dec
cwtl
or
lds
mov
dec
push
in
into
or
or
jmp
or
cwtl
sbb
push
rcll
adc
xchg
add
mov
int
xor
mov
sbb
idiv
xorl
jecxz
or
xor
dec
imul
adc
adc
cwtl
jecxz
mov
es
scas
mov
dec
cmp
lahf
pusha
cmc
lcall
add
mov
cmc
xor
lahf
aas
dec
ds
lods
sub
mov
out
stos
xchg
addr16
test
push
mov
shr
push
fcomip
in
push
cmc
cmp
sbb
shrl
ud0
push
adc
pop
and
cmpsl
lea
and
in
push
ss
pop
sub
test
xor
or
xchg
and
lods
jae
ss
in
push
pop
mov
addr16
pop
pop
arpl
mov
sbb
or
mov
hlt
std
stos
leave
insb
mov
js
rclb
aad
adc
xchg
dec
lea
jp
push
cs
leave
or
scas
fcmovnbe
sbb
cmp
mov
ret
ljmp
mov
adc
mov
pause
add
nop
pop
push
mov
add
sahf
sbb
or
popl
in
mov
test
sub
xorb
jecxz
aad
js,pn
out
int
mov
cmpsl
xor
lock
mov
daa
or
inc
push
mov
outsb
out
mov
inc
cwtl
dec
std
bound
inc
aad
xor
or
sti
inc
mov
shll
push
sbb
mov
xlat
outsb
lret
sbb
dec
in
or
or
adc
cmp
jge
rcrb
mov
add
jecxz
inc
mov
dec
mov
mov
dec
lock
cmp
test
repnz
dec
jg
movsl
insl
call
xor
clc
or
test
testl
pushf
test
test
cwtl
inc
fdivrp
popf
and
sub
or
stos
testb
stos
aaa
mov
aam
pop
mov
js
les
xchg
roll
arpl
idivb
mov
mov
jmp
and
cld
leavew
sub
or
xlat
mov
cwtl
cmp
ja
xor
push
fisttps
mov
inc
xlat
mov
test
mov
ja
jb
xor
out
out
outsb
jp
fistpll
add
divl
rol
cltd
arpl
mov
and
data16
add
bound
mov
mov
fs
and
mov
call
dec
fwait
icebp
sbb
add
movsb
jae
repz
nop
xchg
pop
lea
and
flds
cmp
add
dec
pop
jge
lea
pop
or
movsl
push
mov
mov
adcb
jp
cmp
xor
xor
cmpsb
shll
lds
sub
stc
das
sub
pop
insb
xchg
add
pushl
in
jl
sbb
repnz
decl
xor
out
pushl
push
xor
bound
lret
mov
push
mov
pushf
es
mov
mov
jbe
sub
inc
pop
pushf
mov
xchg
and
xchg
mov
insb
dec
cmpsb
xchg
popf
enter
mov
xor
or
lcall
arpl
inc
aas
adc
jp
daa
lea
jae
pop
aad
aad
mov
add
xor
jg
dec
ljmp
test
or
aad
add
adc
xchg
fistps
fbstp
pop
sub
scas
dec
xchg
sar
push
stc
mov
xchg
lret
mov
arpl
or
adc
mov
mov
sub
mov
test
call
insb
xlat
roll
xchg
jno
xchg
adcb
mov
icebp
in
test
ret
test
mov
dec
push
cs
lds
iret
aam
loopne
jb
push
dec
jecxz
push
hlt
clc
push
sbb
in
orl
cli
xor
mov
jno
les
dec
add
popf
sub
jb
das
xor
pop
aad
sahf
ds
test
cli
stos
mov
lcall
sbb
ljmp
iret
xchg
mov
push
cmp
loop
inc
push
adc
mov
out
jmp
mov
jbe
mov
rorl
popf
mov
push
add
movsb
mov
mov
jne
xchg
inc
lahf
pop
cmp
add
push
xchg
popf
iret
rcr
scas
cltd
jnp
mov
sub
jp
insl
sub
les
cmp
cmpsl
mov
lcall
lahf
pop
stos
or
add
cld
shlb
cmp
mov
mov
pop
xor
xor
or
ds
iret
inc
insb
jb
cmp
std
aas
out
jg
icebp
pop
icebp
out
cwtl
jmp
pop
int3
sbb
add
add
mov
inc
lock
cmp
xlat
push
in
cs
push
add
pop
sbb
cmp
movsl
and
cmc
fdiv
in
ror
xchg
sbb
xchg
jmp
movsb
push
jmp
push
pop
dec
mov
sbb
sbb
ret
cmc
dec
pop
lcall
fnstcw
adc
jle
jge
inc
cmp
xlat
outsl
sub
mov
mov
mov
sahf
fdivl
sbb
mov
sub
out
rorb
cmp
pop
jb
insl
jns
dec
lahf
xchg
out
inc
jno
mov
in
cs
sub
jb
mov
into
aam
scas
loop
push
or
scas
inc
jo
jae
popf
adc
movsb
ret
jecxz
cmp
add
xlat
stos
xchg
xlat
mov
dec
stos
int3
out
loop
lea
sbb
or
cmp
fwait
inc
scas
shrl
stc
pop
mov
fbstp
push
lock
cmp
lret
sub
cmp
xchg
aad
roll
xor
push
dec
mov
repz
jecxz
das
adc
xor
pop
std
fdiv
fldenv
outsl
inc
sti
test
xor
push
out
clc
mov
call
int3
cs
scas
pop
popf
out
mov
xchg
imul
jb
outsl
fwait
into
sub
and
lods
pop
fwait
insb
lock
dec
lds
adc
hlt
add
lock
loope
or
mov
int
xchg
jge
iret
nop
dec
mov
shll
call
cwtl
jb
xlat
xchg
add
sub
or
sbb
inc
or
loopne
lahf
xor
xchg
test
lods
pop
lock
dec
pop
and
xor
mov
bound
mov
jb
cmp
cmpsb
xor
cmpsb
xor
lcall
dec
mov
jge
pop
dec
cmpb
push
push
std
jmp
std
or
sbb
pushf
push
or
in
cmpsb
xchg
jbe
rcrb
fcoml
dec
xor
pop
push
sbb
data16
ss
outsb
stc
stc
scas
cmp
rcll
test
xor
push
dec
fdivrl
pop
sarw
mov
push
sbb
addr16
shrb
sub
push
leave
cmpsl
or
mov
push
jo
sub
pop
xchg
inc
cs
ljmp
rorb
cmp
mov
or
adc
mov
jae
push
pusha
test
cmp
inc
arpl
popa
addr16
pushf
xor
mov
xor
pop
pusha
popf
sarl
xchg
inc
loope
fldt
call
shll
js
mov
andb
push
outsb
aas
mov
jne
loope
push
lret
mov
test
xchg
cs
xchg
push
sar
sub
stos
sarl
jle
test
mov
mov
adc
out
dec
jg
jmp
stos
or
ret
sti
jge
push
and
adc
fiaddl
scas
ret
xchg
pop
inc
scas
mov
fnsave
sbb
fcompl
xchg
inc
push
push
and
and
imul
rcrb
pushf
or
push
push
fldenv
pop
fldenv
into
inc
push
mov
adc
inc
adc
jge
mov
dec
mov
scas
lret
ret
vphaddbd
jge
mov
dec
fs
je
pop
cmp
loope
jmp
cwtl
dec
mov
sub
scas
xor
ss
mov
scas
aaa
jmp
jb
jae
adcb
jns
mov
mov
xor
cmp
jb
scas
cmc
dec
jno
imull
iret
xchg
stc
mov
pop
popl
icebp
pushw
test
and
mov
pop
and
xchg
mov
jp
push
call
xor
cmc
jno
pop
js
pop
pop
mov
pusha
xor
cltd
scas
cltd
mulps
and
jmp
or
int
jns
mov
pop
or
push
sbb
or
sbb
std
mov
ja
addr16
pop
or
dec
les
xlat
outsl
das
xchg
push
cmp
cwtl
test
ja
dec
shlb
lds
bound
mov
arpl
insb
ss
cli
ret
sbb
jecxz
in
jb
pop
icebp
lcall
enter
jns
rcl
flds
lcall
mov
mov
fadds
push
ljmp
fldenv
ss
imul
mov
das
ja
sub
iret
cmp
cmp
std
cmpb
arpl
bound
shll
fadds
stc
xchg
lods
adc
mov
aam
lds
push
repnz
sahf
lahf
sub
xor
imul
rcrl
xor
ja
loopne
popf
mov
std
pop
sub
rcr
shl
sub
stos
cmpsb
test
lock
push
addr16
or
decl
add
cld
pop
lret
icebp
push
iret
cmp
mov
add
sarl
pop
xchg
notl
sahf
pushf
das
imul
out
pop
xchg
ja
mov
push
jp
scas
jl
dec
push
imul
push
mov
pop
push
jecxz
sti
fsubrl
sbb
add
stc
aaa
cmpsb
dec
jp
lret
pushl
data16
popf
adc
out
sbb
add
pop
mov
sbb
and
vcvtsi2ssl
movl
addl
mov
jno
sub
jb
jns
jns
or
or
sbb
mov
inc
push
fwait
leave
lea
int
shl
xor
dec
jne
xor
lcall
inc
lret
cmpsl
gs
sub
mov
xchg
ror
psubsw
daa
mov
mov
rcl
aam
lret
push
mov
push
outsl
out
jb
xor
xchg
popa
enter
cmp
inc
pop
lret
pop
mov
mov
imul
adc
mov
imul
and
adc
mov
jns
hlt
mov
cld
adc
sub
stc
in
inc
jae
ljmp
push
mov
test
fwait
test
adc
mov
push
xchg
dec
lods
pop
sbb
adc
jg
pop
lcall
fistps
scas
fcomp
out
xor
lock
dec
mov
les
xor
pop
lret
sahf
sub
iret
fdivrl
imul
cs
shrb
push
bswap
es
xor
dec
dec
rcr
jns
lret
dec
dec
jae
das
rorl
xor
fninit
out
cmp
pushf
nop
mov
cltd
test
in
in
and
mov
pop
xor
sbb
jge
dec
cwtl
or
outsb
sub
iret
xor
and
fsubp
jle
fbstp
dec
stos
roll
sub
out
repnz
sahf
or
cmp
fwait
mov
adc
cwtl
sbb
xor
daa
es
push
sub
push
xchg
aaa
pushf
or
icebp
stc
mov
pop
repz
jbe
out
inc
mov
xchg
mov
cs
ret
es
ret
xchg
cmp
pop
in
imull
add
cli
roll
jp
mov
xchg
test
dec
mov
mov
iret
pop
rol
dec
rclb
sbb
cmp
or
jb
add
insb
pop
leave
mov
dec
stos
sub
pop
pop
lds
mov
xchg
repz
dec
and
xchg
popa
xchg
icebp
aas
aaa
inc
pop
mov
mov
dec
rclb
adc
push
xchg
adc
out
addr16
mov
loope
inc
fisubrl
arpl
mov
push
pop
sub
movsb
ds
mov
add
mov
sbb
ret
lret
fneni(8087
cmp
lret
push
icebp
test
mov
pop
mov
loopne
stos
dec
xchg
insl
jno
repnz
and
les
les
hlt
into
xchg
pop
ss
sub
jns
cmp
dec
sub
and
daa
mov
pusha
sbb
cmp
sub
mov
gs
pusha
ds
clc
jno
xor
cs
fistpl
mov
imul
sub
push
fwait
js
ret
adc
std
repz
xor
xor
xlat
mov
cwtl
in
or
std
add
mov
outsl
loop
jmp
out
mov
mov
loopne
out
cmp
adc
sub
jle
pop
outsb
rol
ret
clc
mov
xchg
dec
loopne
fs
in
fldt
push
sti
repz
add
and
dec
mov
cmp
xchg
xchg
xchg
or
mov
pop
sub
pop
push
dec
daa
ds
fisubrs
mov
adc
addr16
mov
leave
xchg
or
push
push
sub
pop
in
dec
xlat
inc
imul
xlat
icebp
fdivr
pop
mov
fidivs
jle
ds
mov
das
mov
stc
sub
pop
inc
inc
jae
push
or
movsb
ret
bound
pushf
adc
outsb
fnstsw
outsb
add
pop
mov
inc
sub
or
cmp
add
pop
nop
xchg
es
aaa
sbb
sub
add
xchg
dec
fs
inc
cs
lods
push
lds
dec
outsl
lcall
lret
pop
cmpsb
cmpsb
scas
adc
in
jge
lock
and
mov
add
xor
adc
or
xchg
lods
fcom
mov
icebp
xor
pop
dec
pop
xor
je
and
mov
push
add
and
outsl
mov
push
scas
add
xchg
addr16
pop
repnz
in
test
and
andb
ljmp
jp
inc
xchg
sbb
mov
cmp
js
dec
pop
pop
jg
call
inc
mov
sub
shlb
mov
cmp
mov
mov
mov
cmp
pop
jb
add
aaa
lds
push
sub
mov
shlb
pop
push
in
movsl
and
lcall
lret
or
mov
fildll
cld
xor
mov
cmp
xlat
rolb
adc
sub
push
and
pushf
xor
mov
pop
sbb
pusha
pop
shll
xor
mov
sub
adc
aaa
inc
add
fwait
movsb
mov
das
imul
call
test
sbb
cmc
push
jbe
add
xchg
dec
and
jmp
int3
cld
xor
shll
mov
mov
pop
mov
inc
mov
dec
scas
sub
jns
lcall
mov
sbb
mov
lods
xor
sahf
cli
bound
add
insb
push
mov
cmp
xchg
aam
jecxz
inc
add
cwtl
pop
dec
mov
inc
sub
mov
sub
fidivrl
in
xchg
in
dec
outsl
lock
mov
repz
mov
add
mov
sub
adc
and
data16
inc
pushf
fwait
popf
movsb
or
add
jne
sti
gs
test
jl
adcl
cmc
gs
das
mov
rcrb
adc
in
mov
lret
mov
lods
je
fisttpl
xor
push
adc
push
ss
in
sub
pop
stos
mov
mov
xor
xchg
sub
movswl
call
insl
jp
shll
insl
test
dec
cltd
ja
cmp
pop
test
rcl
fcoml
icebp
movsb
mov
fisttpll
lret
decl
arpl
mov
xchg
or
lcall
out
mov
inc
inc
or
lock
movsl
push
pop
daa
and
gs
sbb
sub
xchg
dec
xor
inc
nop
push
pop
mul
push
mov
imul
xor
pop
and
mov
sub
xchg
dec
xchg
and
pop
daa
dec
call
jmp
out
mov
es
movsl
and
int
lret
das
dec
dec
icebp
pop
cwtl
test
pop
cmp
ss
stos
jmp
repnz
dec
stc
jmp
or
mov
loope
push
in
pusha
test
je
xchg
or
cmp
daa
repz
imull
fnstcw
cmc
icebp
cs
shll
test
and
lcall
lahf
ss
in
mov
out
inc
shr
jo
inc
sbbb
fsubs
in
movsb
scas
jge
fistl
or
repnz
cmpxchg
jb
pop
test
lahf
and
sarb
out
xor
xor
inc
sub
inc
xchg
lea
aaa
cwtl
mov
in
rcrb
addr16
loope
aam
mov
ja
ss
jno
mov
jmp
xlat
lea
fs
or
mov
or
add
dec
mov
push
aaa
xchg
push
pop
stos
cmp
lods
negb
dec
or
inc
jnp
sbb
shrl
es
dec
or
popf
jecxz
sub
mov
lods
ljmp
daa
fistpll
cmp
sbbl
jo
fcmovnbe
repz
movb
adc
iret
lahf
xor
sub
test
and
mov
sbb
popa
dec
pop
mov
cwtl
inc
pushf
and
insl
xchg
cs
out
call
je
fimuls
add
inc
lea
inc
mov
pop
xchg
aaa
adc
dec
daa
cmc
daa
jne
xor
mov
inc
imul
cmpsl
cmpsb
cmp
jmp
aas
clc
push
das
push
lods
cmp
cltd
push
xchg
xchg
test
mov
dec
into
xorl
inc
scas
flds
jl
mov
out
call
jnp
rolb
and
fisttpll
push
sub
jle
inc
fildl
push
lret
push
or
out
mov
sub
mov
xchg
cmp
ror
pop
aas
mov
insl
lahf
adc
lods
roll
jb
aad
das
jb
xor
dec
mov
adcl
and
shll
pop
into
xchg
push
inc
out
adc
subl
lds
jge
dec
push
push
test
pop
add
ja
adc
rclb
jo
jae
xor
call
mov
mov
inc
aad
mov
xor
clc
add
pusha
pushf
pop
arpl
mov
jl
in
stos
jecxz
xchg
adc
mov
xchg
les
rcll
sbb
lock
mov
xchg
notl
or
push
pop
cmp
ja
or
outsb
push
add
lcall
dec
push
ss
jns
inc
sub
rcl
push
inc
stos
repz
jbe,pn
jae
out
scas
dec
cmp
in
leave
adc
mov
imul
pop
iret
sbb
adc
jns
ljmp
sbb
sbb
jg
fstpl
popf
xor
cwtl
lahf
push
mov
dec
ljmp
mov
int
test
out
add
mov
add
mov
inc
inc
imul
push
pop
mov
mov
loop
loop
dec
adc
jmp
adc
dec
ljmp
imul
cltd
dec
push
ret
pop
orb
addr16
cmpsl
and
cmp
mov
shl
aam
mov
rcrb
cmp
mov
cmp
mov
movsb
xorb
mov
adc
mov
pop
mov
pop
jae
or
out
mov
and
aad
inc
or
sub
test
inc
push
and
or
nop
dec
cwtl
cmp
jecxz
ss
mov
or
sub
fidivrl
cmp
clc
rcll
aam
push
ret
dec
mov
fiaddl
lea
push
inc
insl
add
es
or
test
in
mov
popf
xor
dec
jbe
scas
ret
aad
jo
sbb
mov
js
push
clc
sub
cmp
loopne
cli
ror
dec
or
repz
xor
lds
arpl
push
xchg
das
xor
int3
scas
mov
add
dec
xchg
lcall
pop
xor
int3
or
jno
movsl
aaa
gs
out
adc
addr16
leave
cs
cmp
sub
std
dec
jmp
or
mov
xchg
adc
push
mov
inc
lahf
adc
and
mov
dec
stos
xorl
fldl
jno
dec
jecxz
xor
lods
daa
scas
movsb
push
dec
int3
xchg
insl
insl
mov
push
sub
call
pop
mov
jge
lods
cmp
pop
push
add
jge
cmpsl
out
repnz
packssdw
outsl
xchg
xor
fldenv
sti
push
movhps
adc
mov
loope
and
fisttpl
jne
in
lods
mov
mov
sbb
jne
xchg
sbb
xchg
sbb
or
xchg
daa
add
mov
fs
das
mov
mov
sti
mov
lds
mov
aam
jle
jae
iret
jg
xor
pop
sahf
inc
outsl
mov
jb
xchg
insb
aad
lods
pop
bound
push
fidivs
loop
pushw
jmp
fidivrs
push
adc
pop
ja
lea
sbb
lret
pop
outsb
cmpsl
ja
adc
lret
cmp
lcall
scas
mov
mov
mov
push
xor
push
outsb
ljmp
in
ret
out
outsl
adc
rcrl
popf
ds
pop
push
mov
clc
decl
jns
in
mov
insl
in
hlt
sahf
inc
jmp
stos
leave
lret
mov
hlt
sub
add
call
inc
push
popf
subb
mov
pop
jmp
test
dec
dec
xchg
jns
ljmp
mov
mov
stos
fldt
and
repnz
push
leave
xor
loopne
ss
fs
mov
hlt
leave
js
push
mov
repz
cmpsb
hlt
ljmp
adc
subl
insl
repnz
jb
xchg
imul
dec
pop
repz
lods
or
mov
cld
cmp
mov
ljmp
lret
cmp
cli
jle
sbb
popf
sbb
xchg
es
cmpb
lret
into
xchg
ficoml
out
adc
mov
sub
test
pushf
xor
dec
sub
cmp
or
xchg
std
lods
das
fwait
into
mov
es
shr
lret
or
mov
aas
dec
js
pop
jecxz
and
imul
cltd
inc
div
dec
mov
jle
addl
xchg
pop
mov
mov
dec
imul
adc
subb
inc
dec
inc
test
jnp
cmp
outsl
js
adc
data16
mov
push
fdivrl
outsb
es
outsl
cmp
insl
ss
gs
std
rolb
lcall
scas
mov
test
pop
mov
movsb
adc
inc
mov
in
dec
jno
adc
mov
cmpsl
mov
push
lahf
push
jg
adc
jge
dec
jmp
push
inc
movsb
orl
imul
mov
iret
jbe
and
popf
push
jecxz
aas
pop
fcoms
ret
mov
testl
mov
popa
xor
sub
push
mov
lods
hlt
mov
push
insb
stos
sbb
mov
cmp
out
mov
pop
test
push
popa
push
dec
fld
sbb
stos
in
jo
arpl
lret
leave
mov
stc
pop
sub
ficompl
xchg
aam
pop
inc
lahf
sbb
stc
lods
adc
clc
fcmovu
and
enter
inc
or
pop
mov
aad
jl
shlb
in
orb
jb
fnstsw
jl
ret
test
scas
int
ds
and
dec
cmc
test
dec
sub
adc
sub
and
negl
push
mov
clc
push
imul
sub
sub
insl
xchg
scas
movsb
das
jb
popa
xorb
mov
mov
mov
jns
mov
push
out
or
mov
scas
and
mov
cwtl
jecxz
in
adc
pop
jae
pop
aam
jnp
or
mov
int
inc
fwait
or
jo
or
jns
inc
xchg
push
inc
cmp
cmpsl
mov
add
mov
jp
push
cmpxchg
mov
adc
and
dec
push
pop
inc
xor
rorb
or
mov
ds
push
and
movsb
out
orb
loopne
movsb
pop
add
or
xchg
ficompl
push
adc
adc
and
push
jl
pop
dec
outsl
push
subb
into
fildll
jg
insb
pop
nop
and
arpl
sub
repnz
inc
decb
jg
sub
push
ret
pop
in
jl
test
push
jle
scas
xchg
push
mov
ror
add
cmpsl
cwtl
pop
leave
aas
cmp
popa
xor
fxsave
cmp
jle
cwtl
inc
and
iret
stos
je
out
cmp
pop
arpl
push
adc
push
pop
dec
decb
in
lock
dec
add
xor
push
pop
jmp
add
sub
int3
arpl
arpl
mov
jae
push
fidivs
sub
dec
mov
subb
jge
cmp
mov
push
into
cli
addr16
push
and
adc
iret
lcall
push
mov
pop
jb
xlat
xor
js
lret
and
jmp
dec
mov
xlat
repnz
shrb
dec
shlb
daa
lods
push
push
in
jo
popf
xor
rcrb
mov
pusha
cmp
sti
ror
sub
mov
fisubrl
stos
dec
mov
or
clc
enter
int3
movsb
xor
fcompl
adc
faddp
cs
jno
int
sbb
imul
add
icebp
sub
and
ds
push
in
pop
jg
mov
and
mov
and
mov
clc
jne
jge
sbbb
clc
xchg
jecxz
add
fsubrs
mov
jnp
mov
aad
loopne
jbe
mov
dec
and
dec
adc
cmp
insl
jae
sbb
fs
cmpsb
daa
test
mov
clc
inc
cltd
mov
xchg
mov
into
mov
subl
pop
aas
cli
add
repz
add
dec
jo
pop
adc
xor
dec
sub
push
mov
and
dec
cltd
aaa
in
out
lret
jge
outsl
adc
sub
fisubl
sbb
insl
xor
outsl
pop
popf
push
mov
mov
and
fstl
mov
push
daa
lods
daa
mov
jbe
jne
push
sti
mov
sub
addr16
cld
les
shrb
gs
mov
adc
das
int
inc
sub
test
jnp
loop
in
adc
test
push
pushf
or
pop
sub
adcb
cmp
mov
jg
jo
push
orb
push
mov
xchg
outsl
xor
lahf
fdivl
jle
shll
cltd
jmp
ret
cltd
loope
adc
adc
fwait
test
int3
mov
push
imul
movsl
xchg
lea
cli
xor
push
rcll
icebp
cmp
out
iret
aas
lret
or
das
dec
das
push
sbb
sub
nop
insb
rclb
out
ret
repz
adc
int3
and
test
in
pop
test
fldl
and
sbbb
jbe
add
gs
xor
leave
jle
dec
push
pop
pop
fldenv
pop
aaa
movsb
ljmp
lret
cmp
push
dec
inc
pop
jne
sbb
inc
js
xor
js
push
cld
inc
mov
test
out
dec
adc
gs
cmp
pusha
mov
sub
ja
mov
insl
xchg
fisubrl
fsubs
mov
outsl
aaa
lock
lds
insl
push
movsl
cli
repnz
aad
ljmp
sub
subl
aaa
popf
pusha
repnz
pop
mov
call
push
mov
fiadds
ljmp
cld
stc
clc
jle
lret
jno
cmp
mov
out
andl
ret
popa
jo
int
dec
lods
pop
cmc
pop
out
xor
push
and
andb
jg
xor
sbb
aaa
pop
rolb
mov
xchg
test
ljmp
mov
hlt
mov
sub
testb
xor
iret
xchg
sbb
mov
inc
not
and
arpl
scas
jle
cmc
cwtl
pop
add
mov
test
add
cmpsb
sbb
dec
sbb
mov
loope
iret
fdivp
ja
lds
push
hlt
fisubrl
mov
sbb
jno
shll
sbb
and
sub
mov
sub
cmpsl
shll
add
push
rorl
sub
iret
fs
dec
sub
cmp
inc
fwait
cwtl
aam
loopne
cmc
mov
adcb
push
or
xchg
push
mov
js
inc
push
xor
mov
inc
leave
fdivs
out
fisttpll
jno
ds
jecxz
fstl
pop
xchg
sub
cld
out
ror
pop
mov
sbb
fucomip
iret
adc
pop
push
in
repz
fcoml
mov
movsb
xchg
xor
lds
sub
leave
data16
das
mov
aaa
jae
xchg
orl
or
stos
and
cmp
into
rclw
mov
decl
in
xchg
rclb
dec
and
dec
loopne
sbb
cmp
inc
push
ret
jo
loop
loope
jp
jmp
shlb
push
sti
xor
xor
cld
rcrb
mov
push
lods
cltd
arpl
clc
gs
aas
out
and
sahf
es
orb
jbe
push
mov
addl
lret
mov
or
adc
sub
add
inc
inc
adc
int3
and
cmc
mov
icebp
clc
repz
gs
push
mov
jle
xor
adc
ret
inc
es
cmp
fs
inc
or
push
push
sub
cmp
scas
aas
sub
mov
ja
cld
fnstcw
cmp
mov
push
insb
repnz
cwtl
imul
mov
lock
enter
filds
mov
inc
lds
sub
lods
or
mov
int3
add
lret
jbe
nop
sahf
xchg
jne
fildll
ss
inc
repnz
sub
jge
mov
dec
cmp
enter
iret
movsb
cli
pop
inc
and
inc
sbb
rorb
jno
loope
jp
dec
inc
pop
je
dec
out
mov
and
in
dec
test
call
mul
movsl
pop
loop
cld
mov
scas
clc
fsubl
xchg
pusha
leave
inc
mov
adc
int
nop
aam
std
stc
rcr
clc
cwtl
cmp
xor
aaa
insl
push
mov
rclb
mov
add
icebp
pop
mov
inc
dec
ljmp
jmp
cli
jl
and
push
xchg
xlat
add
push
frstor
fwait
pop
push
inc
repnz
data16
mov
sub
lock
mov
packssdw
int3
xchg
pop
dec
not
and
lods
mov
xchg
cmp
scas
jp
hlt
jge
cmpsb
push
repz
scas
and
push
ret
jne
push
out
push
inc
adc
dec
or
add
jnp
adc
rorb
fisubrl
mov
js
pop
daa
std
pop
fs
filds
pop
out
push
jo
push
cmp
mov
pop
leave
jle
sub
aas
add
adc
out
cmp
test
pop
ss
clc
xchg
int
shrb
popa
lock
jae
adc
add
dec
imul
add
leave
mov
sbb
adc
add
stos
fs
sub
push
mov
jg
sub
pop
and
out
aaa
cmpsb
lcall
xchg
dec
iret
adc
das
movsb
int
pop
inc
or
dec
dec
push
imul
shl
xchg
dec
jnp
cltd
imul
fldenv
xor
add
and
sti
dec
fsubs
sub
mov
jge
xchg
movsb
dec
mov
pusha
mov
repnz
mov
js
aaa
es
fs
popa
xor
mov
cmp
and
js
sub
adc
cmpsl
dec
loopne
mov
jns
adc
push
je
xchg
mov
test
xchg
outsl
sbb
test
shl
mov
push
cmp
dec
sbb
rcl
and
stos
pop
cmp
mov
xor
in
std
jae
mov
repz
vmwrite
lahf
jge
lock
sbb
adc
negl
fwait
ror
int
icebp
out
repnz
sub
pop
outsb
inc
xchg
dec
outsb
test
cmpsb
xlat
rcrl
push
sub
imul
lcall
outsl
out
fstpt
pop
or
sti
mov
add
cltd
into
cmp
sahf
push
dec
aam
xor
mov
push
inc
sbb
and
outsb
mov
mov
xchg
inc
add
jno
cmp
stc
xor
lods
xchg
pop
dec
jle
sbb
std
xchg
fsubrs
fildl
sbb
test
lahf
das
cmpsl
xor
jmp
rclb
mov
lahf
int
push
into
dec
cli
push
aam
in
jb
jl
int3
mov
adc
cmp
lock
inc
ficoms
loop
cmp
stos
and
mov
sub
inc
inc
push
sbb
and
lret
sbb
cmpsl
test
inc
subl
push
mov
and
enter
and
mov
repnz
pusha
cmc
push
pushf
sbb
jbe
xchg
add
rcl
xchg
scas
xchg
shrl
fstpt
in
pop
push
pop
pop
jo
imul
or
mov
add
incb
lods
lea
jb
push
inc
lds
sbb
repz
mov
and
bound
inc
or
cmp
movsb
add
mov
in
loopne
sbb
mov
stos
ds
adc
or
cld
mov
popa
loopne
mov
sub
inc
dec
jg
pushf
fs
mov
pop
aas
push
and
outsl
push
push
cmp
mov
shlb
addb
ds
dec
mov
cmpsl
rolb
xchg
adc
jp
std
push
xchg
std
adc
or
mov
fwait
sbb
loop
or
fistpll
call
cs
push
cmpsl
cmp
jns
xchg
and
cmp
leave
and
mov
gs
inc
fs
in
cmp
rorb
mov
inc
xchg
int3
pusha
and
or
mov
adc
into
mov
jl
hlt
bound
lock
dec
sub
jmp
ds
fwait
inc
mov
and
mov
mov
shll
lods
aam
jno
mov
pop
mov
leave
out
xorl
aaa
xor
imul
leave
jne
jmp
mov
add
movsl
mov
sub
fs
ficoml
inc
out
mov
lcall
pushl
fadds
dec
fldpi
rcrl
hlt
cmpb
mov
gs
sub
ret
inc
rcrb
pop
jae
or
mov
call
out
pop
dec
out
inc
push
enter
push
xchg
add
add
shl
loop
pop
xchg
test
mov
jnp
add
loop
and
pop
jnp
fcoms
mov
mov
and
std
push
pop
jge
xchg
and
movsb
mov
sbb
pushf
jns
loope
mov
sbb
jno
fnstenv
sub
out
pop
ss
push
pop
xchg
add
sbb
loope
roll
xchg
stc
pop
ds
xor
push
addb
cli
pop
xchg
push
mov
cli
outsb
nop
ret
ret
test
jg
imul
ds
arpl
xor
test
jge
cmpsl
outsb
clc
std
lock
sbb
je
pop
inc
push
sub
adc
adc
popa
arpl
xchg
cwtl
xor
fsubrl
jmp
mov
neg
loope
ljmp
pop
dec
nop
jg
addr16
sbb
xchg
lret
dec
cmpsl
jge
test
in
cli
in
pop
pop
pop
stc
mov
addr16
int3
out
cwtl
rcll
push
lock
test
call
pop
inc
aas
sarb
andb
jle
sbb
adcb
inc
mov
sub
sub
inc
xor
jecxz
mov
jg
fwait
lds
dec
test
dec
pop
dec
sub
mov
lods
and
fcomps
sbb
lahf
mov
int3
fs
lock
mov
popf
movsb
xlat
popa
repz
fistps
lds
ss
mov
add
into
xor
pop
jg
lods
enter
sub
lret
mov
scas
pop
sub
xlat
jp
inc
shrl
cmpsb
cli
mov
mov
imul
adcl
cmp
enter
sahf
movsl
sbb
mov
shll
xor
pop
cmp
int
mov
mov
mov
ret
pop
aaa
stc
jo
dec
test
rcrl
sub
fwait
mov
mov
clc
xlat
xor
stos
add
fisttpll
sbb
notb
out
adc
sbb
movsl
jo
rclb
pop
insl
jno
adc
jae
insl
pop
push
rcr
mov
jg
sbb
js
inc
xchg
clc
int
aad
sub
repz
mov
mul
adc
xchg
out
test
rcrb
hlt
imul
in
int
and
push
mov
add
mov
inc
mov
xor
or
fnstenv
stos
jb
cmp
fisttpll
and
adc
sub
out
inc
xchg
mov
in
mov
arpl
stc
test
xchg
es
push
fs
scas
enter
imul
dec
je
pop
movd
repz
xor
pop
dec
hlt
mov
hlt
fs
sarl
lcall
xchg
dec
pusha
je
mov
add
cmp
das
imul
leave
xchg
mov
xchg
cmp
enter
xchg
into
jge
jnp
es
aam
adc
aas
pusha
stos
popa
jb
fdiv
xchg
push
leave
push
in
cmpsb
out
adc
mov
repz
ficompl
lcall
dec
and
leave
and
mov
add
lahf
mov
daa
and
loop
cmp
jbe
jle
mov
popf
mov
lods
xor
mov
rorl
jecxz
adc
outsb
shll
xchg
insl
jne
sbb
lahf
lret
repnz
mov
call
jecxz
push
mov
and
outsl
out
or
jnp
push
in
into
and
xchg
and
xor
mov
jbe
stc
cltd
mov
push
lock
xor
jnp
adc
mov
adc
add
int3
mov
pop
inc
leave
inc
movsb
add
cmp
cmp
mov
jl
shlb
xor
mov
push
push
pop
hlt
pop
ja
pop
int
out
adc
sbb
sub
es
nop
cmp
and
mov
shrl
bound
fsubr
jbe
loop
popa
insl
aam
and
dec
and
mov
je
mov
div
xchg
sub
mov
int
lcall
adc
addr16
jp
sbb
cs
cmpsl
dec
out
popf
mov
inc
pop
hlt
jle
add
movsb
mov
xchg
jg
cmpsl
mov
xorb
je
jp
in
in
jge
shlb
loop
dec
fimull
aam
loopne
push
sub
scas
jbe
fidivrs
scas
jmp
iret
push
and
cwtl
xor
mov
mov
leave
mov
jge
aad
js
aaa
repnz
lret
mov
pop
sarb
rorb
dec
pop
test
sub
adc
fs
mov
pop
jb
rolb
fcoml
mov
sbb
xor
das
adc
inc
lock
dec
ret
and
stc
xrelease
roll
xor
clc
and
ja
ds
sbb
fdivrs
loope
fnstsw
nop
cmp
xchg
lcall
sti
sub
dec
test
fs
jle
adc
and
jae
movsl
xchg
fwait
enter
insb
inc
ret
or
mov
jmp
xchg
ljmp
dec
in
pop
and
scas
push
pop
push
sub
xor
sbb
inc
adc
ret
mov
lcall
jno
out
and
cwtl
popf
in
out
pop
mov
xchg
pusha
or
push
jbe
mov
or
mov
or
mov
and
imul
call
mov
or
daa
insb
rcll
push
je
fmull
into
enter
jle
jns
mov
sbb
roll
adc
stos
movsb
or
pusha
mov
cld
mov
and
fwait
push
ret
fidivrl
xor
int
or
sub
and
pusha
mov
insb
rorb
ds
or
pushf
jg
roll
mov
adc
xor
outsb
sbb
cmp
loopne
inc
adc
mov
int3
xor
sbb
add
jns
ret
pop
xor
or
ss
push
fisubl
xchg
int3
adc
add
repz
cld
mov
sti
xchg
stos
and
mov
pusha
and
lahf
aas
xorb
jg
and
add
jns
in
adc
cltd
jge
xchg
xor
sub
push
adc
mov
mov
push
mov
cmp
jmp
fadd
es
add
mov
movsb
xor
dec
data16
ljmp
xchg
in
enter
lret
sub
mov
jnp
cmpsl
subl
dec
ret
push
push
and
push
mov
dec
test
or
jae
jno
loop
lock
cs
dec
das
push
lret
outsb
lret
imul
and
cmp
xchg
mov
mov
cmp
scas
int3
test
dec
and
fcmovu
push
gs
push
aam
shlb
arpl
sub
stos
jg
enter
movsl
jne
ljmp
sbb
or
pop
jo
test
mov
sar
cmp
cmpsl
mov
push
fistpl
in
jmp
and
mov
jb
lods
stc
rcrb
sarl
dec
add
xor
cmpsb
popa
jae
cmp
rdpmc
push
push
ror
mov
shlb
mov
pop
hlt
jb
movsl
test
popf
lret
push
outsl
shl
push
jmp
adc
std
or
mov
xorl
pop
loopne
push
mov
ret
out
mov
push
std
rcll
mov
mov
cli
pop
xlat
pusha
scas
and
inc
mov
and
mov
sbb
or
xchg
pop
out
ja
add
mov
mov
or
cmpl
xor
daa
mov
mov
xchg
inc
add
daa
xchg
cmp
leave
xor
jns
sbb
stos
jp
pop
inc
lods
leave
data16
pop
lock
jne
jmp
je
dec
add
jnp
shll
loop
out
clc
push
mov
js
inc
inc
mov
dec
mov
ss
cmp
mov
stos
arpl
xchg
cmpl
fisubs
repz
pushf
add
push
mov
ja
cmpsl
mov
inc
rolb
cmpsl
movsb
scas
xor
aad
pop
stos
push
pop
cs
shl
mov
jb
pop
mov
dec
adcl
mov
adc
and
xlat
dec
insl
fcoml
add
rorl
popa
xorb
push
lahf
xacquire
out
arpl
nop
in
js
sub
sti
adcl
jg
adc
stos
add
jb
sbb
xor
ja
clc
cltd
divb
cmpsl
rclb
xchg
clc
stos
in
lds
jo
out
lahf
dec
rclb
mov
mov
movsl
push
pop
push
cs
std
adc
push
movsl
cmpsb
stos
lret
cmp
jl
mov
clc
dec
push
xor
dec
in
ja
into
std
ret
pop
or
jp
or
pop
dec
xor
test
sub
sbb
push
mov
or
xchg
or
cld
mov
lcall
fldl
push
cmp
in
push
push
mov
data16
fwait
repz
arpl
outsl
jp
js
rol
dec
mov
sbbl
mov
push
pop
sub
loope
xchg
mov
sbb
pop
stos
fcoml
or
sub
in
enter
pop
xchg
ret
jae
test
fisttpl
lahf
outsl
roll
jle
mov
and
test
pop
jno
pop
lahf
inc
push
mov
xor
iret
js
sbb
add
dec
fs
mov
mov
addr16
cmp
mov
ja
aad
jbe
gs
nop
rol
dec
rcl
bnd
stos
xor
lcall
mov
das
mov
push
into
aaa
in
test
sub
xchg
outsb
sub
rorl
lahf
mov
nop
dec
addr16
jmp
xor
jns
add
sbb
or
fcoml
mov
jmp
jno
mov
mov
sub
arpl
push
push
adc
movsl
test
popa
les
mov
loop
fnstsw
daa
mov
aaa
das
xchg
push
dec
xchg
cltd
mov
pop
mov
pop
xchg
sbb
loopne
sbb
stos
es
push
sbb
inc
fmull
sbb
jae
movsl
fistps
sbb
test
rcll
adc
pop
push
adc
arpl
add
and
jns
xchg
subb
inc
jmp
push
and
xchg
stos
pop
xchg
mov
pop
stos
xor
pusha
jo
sub
pop
push
fstps
fstpt
pop
xor
aam
adc
mov
mov
call
jnp
jne
adc
jmp
out
push
gs
rorl
subb
jmp
add
pop
popf
add
mov
out
adc
mov
dec
pusha
das
sub
das
and
test
and
xor
es
push
leave
adc
jmp
pusha
sti
lock
adc
pop
daa
mov
clc
dec
xor
lods
pop
push
fsubrl
jmp
xor
ja
mov
das
jg
inc
filds
mov
xchg
and
mov
cmp
xor
jmp
ja
push
jp
jl
iret
sub
pop
rol
mov
pushf
test
orb
mov
cld
xor
fs
dec
xor
pop
pop
dec
mov
insb
loopne
dec
jns
mov
and
out
sub
pop
mov
push
fsubrs
shlb
mov
outsb
pop
insl
lahf
out
xchg
pusha
imul
add
mov
cli
mov
jo
into
cmp
inc
mov
inc
cltd
inc
or
js
test
gs
mov
push
mov
mov
ret
test
lods
or
sub
and
mov
sub
int3
psrlw
jo
mov
fnstsw
push
bound
mov
cmp
fwait
mov
rcr
testl
xchg
mov
push
mov
xor
adcl
sbbb
jl
movsl
lods
pop
lock
pop
imul
add
pop
lcall
fcoms
push
and
stos
insl
push
je
dec
mov
sbb
jg
dec
dec
adc
imul
imul
adc
out
sarb
and
lock
dec
and
jo
sub
pop
mov
scas
repnz
mov
mov
push
inc
je
ss
mov
stc
rorl
pop
dec
mov
pop
lcall
stos
enter
stos
imul
loopne
xchg
mov
jb
ja
push
pushf
add
sbb
int3
inc
mov
pop
mov
sub
adc
pop
mov
cmp
in
test
adc
out
cwtl
mov
sti
subb
into
mov
mov
enter
aad
leave
inc
fcmovu
repnz
repz
ss
es
divl
and
add
test
mov
push
sbb
iret
jbe
inc
repnz
enter
fwait
repnz
mov
jmp
loope
push
xorb
xchg
lahf
mov
xor
or
pop
push
mov
test
cmp
dec
popl
hlt
rorb
imul
mov
test
pop
xor
sbb
subl
mov
call
loope
cmp
call
leave
xchg
je
mov
imul
cld
sub
enter
inc
and
inc
call
movsl
loop
dec
dec
cmp
push
jge
push
sub
xor
lret
sub
popf
lcall
mov
insb
jnp
stc
push
inc
xabort
xor
xor
sub
fisubrl
fildll
push
jns
xchg
shl
cmp
incb
je
pop
jns
addb
adc
cwtl
repz
or
xchg
adc
and
lds
xchg
pop
cmpsb
mov
sub
mov
xchg
mov
std
outsb
push
in
jae
push
add
jle
cli
dec
mov
iret
fs
clc
mov
shrl
int
nop
mov
or
lds
ds
add
out
sbb
sbb
test
add
sub
mov
cmp
lcall
adc
pop
stos
push
fnstsw
roll
xchg
cmp
jno
data16
dec
xchg
inc
repnz
lcall
nop
insl
daa
call
in
lahf
add
mov
and
jb
pop
jo
push
out
push
out
jmp
aad
in
adc
fstl
sub
insb
mov
push
pop
mov
dec
test
out
or
jae
adc
mov
dec
jae
dec
nop
push
ja
cmp
mov
pop
lret
jle
push
fwait
enter
dec
pop
sbb
ss
adc
aad
movl
inc
pop
cmc
cmp
testb
popf
faddp
mov
pusha
and
leave
pop
lahf
cld
xor
lcall
and
adc
frstor
xor
or
cmp
dec
inc
push
call
js
cwtl
cmp
mov
dec
jnp
ds
inc
rorl
adc
jno
pop
push
push
dec
xchg
xchg
adc
shlb
push
je
pop
arpl
je
mov
jle
inc
repz
dec
fstps
ljmp
in
jnp
insb
data16
mov
ds
pushf
add
add
inc
or
scas
dec
rclb
mov
pop
xchg
mulb
inc
js
daa
xor
in
mov
sbb
popa
stc
adc
xchg
xchg
ss
ficoms
test
xchg
aam
cmpsl
xchg
insb
scas
imul
ret
dec
mov
movsl
mov
shr
rolb
imul
jnp
out
and
fldl
test
iret
pusha
stos
pop
xor
or
cmc
int
enter
fcompl
push
add
ljmp
test
add
arpl
ja
lret
mov
nop
movsb
clc
mov
xchg
rcrb
mov
loope
call
jnp
jno
mov
pop
pop
dec
xchg
add
mov
and
cmp
cmp
test
add
xlat
test
jge
sub
cmpsb
ds
mov
dec
and
pop
lret
ret
pop
insb
or
mov
rorb
mov
mov
les
jmp
xor
cmpsb
cwtl
and
popf
or
rcll
aaa
sbb
andl
jp
repz
push
mov
rorb
push
dec
xor
cmp
int
sub
pop
sub
repnz
jnp
mov
mov
push
stos
ljmp
jl
sub
scas
pop
xor
mov
push
stc
loopne
test
adc
ret
ret
mov
cmpsl
movsb
adc
mulb
xor
xchg
int
das
loopne
pop
jbe
andb
ljmp
int
sti
cmp
into
mov
push
mov
dec
lods
dec
dec
stos
movsl
iret
dec
inc
popa
push
push
dec
out
mov
int3
cmpsb
add
pop
pop
sbb
add
jne
and
dec
mov
cmpsb
jmp
add
fwait
data16
add
shr
dec
xor
adc
mov
mov
jno
adc
adc
pop
xchg
leave
pop
shl
xchg
add
and
es
sbb
fnstcw
xor
push
inc
mov
sbb
insl
inc
aad
mov
into
testl
dec
xor
inc
rorb
or
push
jle
mov
pop
enter
stc
dec
repz
aas
not
xchg
movswl
outsb
aas
mov
xor
and
dec
and
inc
fwait
pop
insb
imul
psllq
lea
insl
rclb
fs
mov
mov
jmp
sub
jl
scas
outsb
ret
icebp
aam
fdivrs
mov
sub
push
mov
dec
xchg
pop
aas
enter
inc
nop
sti
fwait
cmp
xchg
jno
mov
shlb
cmpsl
lds
or
pop
cmp
mov
int3
mov
push
lcall
jae
mov
shrb
imul
es
mov
dec
movsb
adc
insb
mov
and
jge
jb
loop
inc
mov
xchg
lahf
cwtl
sbb
fisubl
dec
stos
mov
sub
int
push
enter
cmp
jno
adc
pop
movsb
xor
mov
sbb
mov
pop
mov
insl
cmp
or
inc
mov
and
inc
jle
dec
je
pushf
xchg
mov
test
pop
cmp
das
dec
or
fadds
jae
cmpsl
imul
leave
sbb
idiv
fs
movsl
pop
jb
iret
insb
sub
jle
mov
dec
adc
cmp
mov
push
inc
push
add
mov
inc
push
pop
push
adc
fcmovbe
or
dec
into
pop
das
enter
out
adc
sbb
push
xor
cmpsb
pop
aas
adc
dec
inc
cli
mov
in
das
mov
popl
xlat
inc
xchg
add
xor
xor
mov
pushf
icebp
jns
bound
rorl
loopne
mov
push
mov
test
stc
clc
sbb
imull
cmovp
sbb
and
aad
fsubl
adc
outsb
test
pinsrw
notb
dec
popf
in
fwait
aaa
mov
and
jp
repnz
inc
movsl
add
loop
ret
push
pop
or
adc
lock
cmp
out
leave
pop
cmpsl
lret
test
test
inc
add
xchg
inc
negb
int3
les
cmp
fisttps
push
pop
inc
out
sbb
in
hlt
jo
sbb
xchg
jl
ret
insb
outsb
pop
mov
push
int3
xor
rol
clc
mov
jbe
jge
push
arpl
stos
xchg
loopne
pop
mov
xchg
pop
pusha
into
cld
xor
imull
loop
jno
in
xor
test
sub
mov
sbb
nop
js,pt
push
push
mov
popf
sbb
test
sub
hlt
fwait
mov
sub
ret
lea
inc
pusha
rcrb
mov
sti
fisttpll
scas
mov
out
aas
mov
xchg
es
ja
ja
xchg
push
xchg
and
leave
into
rcll
xchg
fsubrl
cli
sub
inc
enter
movsl
dec
sahf
sub
cmp
into
hlt
push
inc
out
andl
cmp
inc
and
xor
add
mov
dec
adc
leave
ss
jg
repnz
dec
ja
jle
fisttpl
dec
pop
lds
ja
mov
ja
ja
sbb
push
sbb
push
xchg
sbb
pushf
mov
xchg
adc
movsb
outsl
cmpsb
push
push
push
mov
fcom
add
movsb
movsb
insl
shrb
aad
inc
lds
sub
sbb
pop
mov
lea
out
jns
insb
rorl
loopne
nop
xlat
xchg
mov
adc
repz
test
mov
push
xor
push
shlb
fistpl
push
lock
dec
ja
std
cmp
fistps
adc
popf
negb
fs
data16
mov
mov
dec
or
les
pop
out
test
aad
icebp
hlt
pop
mov
mov
imul
and
lcall
out
mov
jg
sbbb
mov
mov
negb
ds
test
add
arpl
lea
mov
pop
cli
fcoms
and
inc
sbb
pop
dec
decb
jecxz
xchg
jle
int3
sub
jns
adc
push
outsl
aad
jbe
hlt
loope
inc
xor
les
mov
adc
xchg
lret
rorb
repz
pushf
fucom
adc
or
cmpsb
out
mov
shrl
sbb
jno
or
popf
inc
repz
imul
add
inc
inc
xor
mov
mov
pop
into
lcall
cmpsl
push
divl
rol
aam
pushf
push
lea
or
jecxz
sub
xlat
cs
pop
adc
lret
xchg
rorb
scas
inc
orb
pop
and
repnz
sbb
cmpsl
cltd
cmpsb
movsb
sahf
sbb
lret
aad
insl
xabort
insb
sub
add
push
cmp
out
inc
int3
jl
scas
adc
decb
mov
es
pop
sub
mov
insl
pusha
lahf
pushl
push
cltd
adc
jp
lret
addr16
sarl
mov
arpl
pop
repnz
shrl
xchg
mov
sbb
mov
xchg
fisttpll
in
or
imul
xchg
or
pop
cmc
cs
testl
popa
dec
adc
fstl
fsubrl
jg
scas
cmpl
add
xor
lods
cmp
mov
sub
push
jp
mov
ds
jae
jae
cmp
jbe
add
clc
sub
jb
mov
xchg
fs
movsl
je
mov
xor
std
cmp
cwtl
movsl
cmp
xchg
out
sbbb
fidivs
imul
mov
mov
cli
sarb
push
cmp
das
cmpsl
pop
test
fnsave
int
test
cld
pop
popf
lret
jbe
xorl
dec
xor
add
shl
das
popa
sbb
pop
cmp
jg
outsb
mov
mov
repz
in
scas
data16
enter
mov
sub
inc
push
hlt
and
mov
mov
mov
shrb
addr16
push
fcompl
repnz
lret
sub
xor
and
int3
push
shr
pop
cmp
leave
mov
stc
lret
xchg
pop
rcrl
xor
rcll
jg
push
and
pop
je
imul
scas
data16
jecxz
in
mov
sbb
cld
and
sahf
cmp
outsl
imul
mul
cmpsl
lcall
sti
mov
push
out
test
inc
dec
int3
jns
dec
xor
shlb
sti
repnz
sbb
cmp
add
pop
aas
pop
pop
outsb
icebp
stos
movsl
mov
dec
test
xor
jbe
mov
inc
mov
xchg
into
mov
arpl
pusha
sbb
xchg
fwait
mov
sbb
xor
jnp
cmp
js
aas
xchg
mov
xchg
xchg
dec
jno
inc
das
or
xchg
xor
dec
jle
mov
push
and
xchg
stos
fs
stos
adc
out
push
add
jbe
push
inc
jecxz
aad
mov
fdivrs
lcall
mov
movsl
rolb
sub
dec
pop
int3
aam
orb
add
orl
roll
fadds
push
mov
jmp
or
imul
pavgw
push
cmpsl
lcall
aad
dec
insb
sub
mov
mov
pop
punpcklbw
aad
insl
cmpb
popa
sub
mov
movsb
into
adc
cmp
mov
pop
add
jge
aad
dec
push
mov
xchg
jbe
lods
xchg
stc
dec
imull
xchg
mov
push
in
mov
or
sub
jne
test
movsb
into
and
out
mov
lret
cld
xor
mov
sahf
add
mov
sbb
fwait
int3
lret
and
pop
cmp
or
cmpsb
adc
fdivrl
inc
aad
cld
inc
call
dec
mov
je
gs
sbb
imul
or
sahf
frstor
pop
out
ds
repz
xlat
xor
sub
loop
jl
outsb
inc
orb
notb
js
shl
jnp
mov
aad
xchg
loopne
xchg
mov
rorb
mov
sub
lret
frstor
cs
fisttpl
inc
fmull
xchg
repz
adc
imul
cmp
mov
fisttpll
rolb
cltd
ljmp
ret
pop
lock
mov
mov
popf
pop
dec
mov
add
xchg
xchg
inc
loop
lret
mov
sub
lea
push
xchg
iret
jecxz
sub
adc
pop
sub
dec
ljmp
mov
xchg
test
xchg
mov
bound
mov
out
enter
leave
dec
add
add
push
sbb
leave
mov
icebp
and
lds
dec
mov
push
js
cmpsl
pop
jb
test
add
pop
sbb
pop
mov
jne
stc
hlt
out
loop
dec
pop
daa
ds
leave
push
rcrl
stos
ret
movsl
les
cmp
les
sbb
adc
mov
cld
ficoms
scas
xor
call
push
jae
jno
sub
jp
test
test
cmp
loop
and
stc
rol
xchg
push
sti
iret
xor
cmove
stc
inc
and
jp
frstor
stos
scas
mov
cld
sub
or
adc
jg
mov
lods
out
lret
dec
sbb
rorb
sbb
or
incl
pop
je
jp
fdivrp
or
fld
lea
xor
add
in
orb
data16
pop
pushf
adc
push
loopne
jge
push
fdivr
xor
mov
movsl
test
int
out
mov
popf
bswap
pop
push
sbbl
sub
fwait
xchg
cmp
sahf
rclb
movsl
sbb
mov
mov
dec
add
mov
sub
cmp
inc
in
jns
cmp
dec
data16
mov
je
inc
out
sbb
lods
inc
fnstsw
mov
pop
stc
call
lods
cld
mov
js
out
ret
sub
dec
sub
mov
sub
or
inc
rcll
cmpsb
mov
sub
ja
fs
lret
push
call
push
scas
and
in
pushl
rcrl
cli
ret
test
xor
inc
inc
aas
xor
and
int3
adc
xlat
dec
xor
jg
jp
movsb
out
mov
loope
mov
dec
aaa
repnz
icebp
cmp
or
and
xor
cli
ja
adc
adc
outsl
jge
pop
ret
mov
push
xchg
and
dec
popa
icebp
adc
pop
push
or
sahf
add
fisubrl
inc
mov
jge
out
loopne
fsubrs
inc
xor
mov
std
and
sub
iret
inc
mov
pop
mov
ja
push
lret
js
mov
popf
xor
stc
adc
cmp
jmp
mov
out
push
pop
lahf
and
pushf
pop
sahf
xor
push
lea
jg
roll
jae
fiadds
ficoms
aam
or
mov
insl
cmp
fstp
pop
push
lahf
call
cli
ss
add
pop
dec
aam
dec
pop
enter
lods
push
jb
shll
fistl
jbe
test
jp
and
mov
mov
repz
hlt
enter
jno
clc
ss
cmpsb
dec
ljmp
pop
aaa
jmp
inc
lds
aam
mov
sbb
mov
dec
cmp
mov
enter
bound
jg
push
les
pop
add
mov
aas
aad
sti
lret
pop
inc
aad
lahf
pop
adc
js
push
mov
sbb
jmp
cmp
jno
shrl
scas
in
out
lcall
clc
dec
es
sub
movsl
in
jae
gs
push
push
push
sbb
add
or
or
nop
cmpsb
out
dec
stc
pop
divb
test
sahf
arpl
inc
xor
dec
sbb
jns
adc
adc
sbb
fcoms
int3
fisubs
cli
clc
jg
push
movl
lock
outsl
xor
push
outsl
in
dec
lret
push
xchg
test
adc
fldt
adc
aas
push
push
push
je
jecxz
jbe
sub
das
std
daa
mov
inc
add
xchg
movb
insl
push
sub
daa
popf
movsb
dec
jmp
pop
shll
or
inc
movsb
roll
in
fldenv
out
xor
ds
dec
lcall
dec
push
sbb
adc
shlb
popf
mov
cwtl
and
and
mov
jnp
sub
jmp
jp
cmp
es
rclb
test
or
idivl
mov
inc
adc
sbb
xchg
subb
enter
mov
imul
sbb
xor
xchg
stc
scas
les
adc
call
jl
cwtl
repz
es
stos
imul
lret
rolb
lds
cltd
sbb
xsha256
cmpsb
xlat
cmp
popa
mov
xchg
mov
adc
sub
stos
enter
push
sahf
rsqrtps
je
pcmpeqb
cmp
adc
xor
pop
xor
in
adc
xlat
movsb
adc
insl
dec
out
fwait
and
mov
fcmovu
xor
mov
mov
dec
and
mov
mov
lahf
sbbb
repz
xchg
jp
ret
es
mov
mov
sub
shll
jae
sahf
sub
xchg
fwait
out
popa
add
add
outsb
dec
push
clc
push
inc
sbb
inc
pop
push
int
mov
arpl
sub
addb
jecxz
xchg
pop
outsb
xchg
pop
cwtl
inc
xlat
lcall
addb
mov
ret
jo
or
jl
push
movsl
shl
xchg
inc
jae
xor
dec
cmc
push
push
ret
pop
push
mov
pop
adc
std
pusha
sarl
pop
rclb
out
movsl
sub
xchg
pop
push
mov
adc
dec
mov
stos
mov
arpl
push
loop
push
and
xor
into
adc
xchg
pop
repz
push
dec
cmpsl
and
scas
xorb
jl
jmp
lcall
xchg
dec
lahf
pop
and
cmp
outsb
addb
popf
xchg
push
je
ret
addr16
mov
jb
movsb
sbb
push
negl
test
out
jg
inc
ljmp
stc
fsubrl
movsl
push
mov
pushf
mov
ret
xor
bswap
inc
aad
mov
enter
testl
int3
or
jl
fs
int3
inc
test
mov
les
repz
int3
pop
je
lahf
inc
int3
mov
addb
ss
xor
or
mov
push
iret
scas
idivl
pushf
cmp
xchg
dec
cli
or
popf
andb
inc
jecxz
in
or
and
jle
sbb
mov
mov
xchg
fildl
xor
xchg
mov
add
and
xchg
adc
outsb
loopne
xor
movsl
or
xor
mov
jge
lods
sub
outsb
cmc
int3
cmp
scas
adc
sbb
inc
scas
pop
in
test
cmp
pop
lahf
and
add
mov
xchg
addr16
cmp
adc
int
es
bound
in
inc
inc
loope
cmp
jae
inc
adc
jne
adc
loopne
or
xchg
lcall
roll
mov
xor
or
adc
push
lods
jl
xchg
pop
gs
dec
mov
xor
leave
stos
popa
xchg
aam
mov
pusha
dec
scas
in
stos
outsb
add
jnp
mov
int
ja
cmp
lahf
sbb
arpl
add
jp
mov
jns
mov
stos
add
sbb
jle
push
mov
add
jae
shll
mov
mov
and
icebp
push
jno
das
fildl
in
xchg
and
push
pop
popa
xchg
push
je
sub
aas
push
pop
jns
xchg
repz
add
adc
clc
adc
cmp
lods
sbb
dec
mov
jb
jns
pop
fmul
push
add
or
dec
outsl
repnz
xor
xor
dec
jo
mov
lock
imul
jp
stc
add
icebp
sub
repnz
mov
sahf
or
jae
les
jne
ffree
imul
or
mov
rorl
es
fsubrs
ss
mov
rcrl
or
gs
fcomps
loop
and
je
jns
jno
or
out
inc
sub
push
xchg
cmc
cmpsb
cmc
mov
mov
push
loopne
or
pop
mov
mov
rcll
jecxz
and
sbb
xchg
xchg
or
xchg
jb
xchg
xlat
jns
sub
xchg
test
add
loopne
test
push
rcll
mov
adc
mov
mov
sar
fnstsw
dec
enter
fwait
xor
loopne
test
pop
jmp
bound
movsb
pusha
shl
xchg
aaa
mov
ds
fwait
out
outsl
adc
jno
test
inc
mov
lret
push
nop
mov
and
push
push
andl
imul
mov
js
pop
xchg
xlat
jl
add
pop
inc
aad
jb
sarl
dec
mov
pop
jae
test
je
bound
add
outsb
push
lret
cmpsb
pushf
xchg
lea
pop
lods
mov
repnz
xor
nop
rol
enter
xchg
inc
stos
scas
shll
gs
sbb
pop
dec
add
mull
aad
sbb
out
and
mov
shrl
mov
test
pop
mov
das
imul
add
mov
jl
imulb
enter
add
adc
dec
fsubl
mov
lods
es
popf
add
cmc
inc
clc
shrb
adc
cmpsl
addr16
or
mov
addr16
jg
mov
stos
inc
rcr
or
cmc
fcompl
arpl
mov
je
arpl
xchg
dec
xchg
mov
mov
cmpb
cld
cmp
rclb
je
sbb
pusha
fstps
sbb
jp
sub
imul
or
sbb
pop
pop
dec
jnp
test
cmp
bound
lock
ds
add
lods
pop
not
negl
pop
icebp
mov
jbe
mov
loope
push
out
rorb
popa
cmp
into
loope
jmp
lods
or
pop
sub
cmp
les
push
jne
sbb
xchg
mov
jo
iret
push
xchg
test
mov
into
jns
push
mov
fsub
mov
pop
shl
jne
lock
rolb
and
lods
repnz
pusha
mov
xchg
aad
jmp
jmp
mov
cmp
js
sub
dec
sub
in
ds
inc
mov
add
adc
pushf
shlb
and
loop
jg
fimuls
dec
test
iret
fmuls
testb
aad
sub
push
jne
mov
xchg
push
fs
dec
jg
xor
jno
gs
add
xchg
mov
jg
nop
ret
push
push
cmp
clc
push
xchg
fsubp
roll
cmp
adc
cltd
inc
icebp
and
fdivrl
mov
add
addl
adc
adc
ror
pop
push
push
pop
xchg
push
inc
in
scas
pusha
mov
divb
mov
loopne
lret
in
ss
xchg
loop
jae
sbb
stos
js
std
aad
mov
ss
mov
mov
push
fdivp
jno
cmp
mov
icebp
gs
incl
pop
sub
fidivs
dec
mov
inc
inc
gs
dec
aaa
fucomp
dec
scas
add
adc
cmc
rcrb
xor
xor
dec
pop
cmp
test
outsl
sbb
cmp
jae
aaa
xchg
dec
sbb
loopne
cmpsb
stos
fimull
cmp
fcomp
xchg
aas
movsb
xlat
movsb
mov
mov
inc
inc
add
dec
mov
ds
mov
pop
adc
or
loop
or
xchg
ja
mov
dec
mov
cmp
push
lea
inc
sbb
push
mov
pop
inc
add
insb
jbe
popf
and
sub
mov
mov
mov
mov
rolb
add
push
and
sbb
mov
mov
gs
test
xchg
jne
fldenv
pop
fidivrl
outsl
inc
aad
xlat
sbb
rcr
lahf
cmp
je
xor
xchg
jo
mov
and
lock
in
mov
mov
call
jnp
push
cli
dec
sbb
mov
nop
mov
test
cmp
xchg
adc
fcoms
jns
add
nop
les
sar
pop
mov
cmpsb
ds
cmpsl
mov
pop
add
inc
ljmp
fs
sbb
adc
sarb
push
xchg
cmpsb
add
and
in
and
push
add
lock
insl
loope
out
mov
and
enter
les
fnsave
inc
push
fwait
aas
jg
xchg
sbb
xor
xchg
popa
xchg
pushf
push
fcoms
xchg
sbb
inc
jns
xor
lret
push
pop
jl
insl
pop
cwtl
je
call
sbb
pop
cs
ret
mov
out
push
cmc
stos
cld
or
mov
add
add
or
inc
cltd
push
stc
dec
mov
lcall
jl
and
push
enter
push
cmp
mov
imul
out
insl
ret
sub
dec
push
dec
xchg
repnz
imul
cmp
arpl
cmp
aas
adc
pop
add
dec
push
out
int3
lds
and
cli
rclb
jnp
adc
ret
or
scas
xor
jne
popf
cmp
pop
or
add
jle
pop
fwait
mov
repnz
lds
loop
mov
clc
aas
fstps
in
jbe
push
mov
push
scas
and
adc
inc
loop
shrl
daa
lcall
or
add
and
pop
rcrl
adc
adc
xor
dec
cmp
adc
stos
mov
daa
mov
mov
std
xor
inc
cwtl
sub
dec
sbb
sbb
adc
cmp
icebp
jmp
jg
push
or
bound
cltd
dec
aam
xchg
fcompl
in
pop
or
fs
jns
test
pop
push
sub
dec
stos
das
faddp
inc
jle
enter
imul
push
mov
jo
cli
loopne
dec
pop
mull
pop
xchg
mov
jmp
dec
sub
mov
in
cmp
rorb
imul
cmp
jbe
nop
push
stos
call
aaa
jecxz
in
mov
and
nop
xchg
mov
sbb
lret
imul
inc
and
adc
mov
xchg
insb
or
add
jg
scas
cwtl
xchg
or
shrl
or
and
xor
mov
push
mov
push
popa
mov
sbb
jge
fcoml
ret
cmp
sbb
push
adc
movsb
ror
les
xor
daa
bound
pop
push
pop
cs
jbe
sbbb
mov
js
sub
mov
daa
fimuls
fwait
sbb
inc
fmull
sti
movsl
mov
pop
fcoml
test
stos
pop
mov
ret
adc
ror
ja
dec
inc
and
jle
stc
sbb
rorb
outsb
adc
push
nop
sbb
pop
inc
jno
xchg
jge
mov
sub
aaa
cmp
push
clc
orl
jp,pn
add
cmpsb
jns
jns
xchg
add
inc
fbld
loopne
arpl
fsubrl
sbb
pop
adc
sub
jo
hlt
lods
nop
mov
sbb
cmova
outsb
mov
pop
call
push
fdivrs
push
les
nop
in
rclb
mov
dec
call
aam
int
or
dec
pop
and
ss
mov
in
jbe
fistpl
shrb
push
mov
sahf
mov
loopne
push
js
bnd
or
sbb
xchg
pop
xor
out
pop
jns
dec
cwtl
inc
enter
jg
rolb
lcall
pop
or
cmp
cmp
and
shlb
mov
mov
pop
push
insl
and
rcrl
cmpsb
btr
sbb
sbb
data16
cmp
jp
test
inc
out
lret
xor
loopne
dec
fisubs
stos
imulb
test
scas
cmc
mov
xchg
and
push
xchg
arpl
xchg
rolb
adc
lfs
sub
fstl
adc
push
enter
push
and
stc
int
or
or
daa
dec
jecxz
xchg
idivb
js
aam
mov
ds
dec
xchg
test
loop
sub
arpl
sub
push
mov
xchg
add
jecxz
cld
fisubs
fcmovne
add
xchg
pop
mov
cmp
ret
out
jo
stos
lahf
cli
and
enter
scas
inc
xor
data16
sbbl
and
pusha
xor
sbb
mov
call
inc
pushl
cmc
mov
cwtl
outsb
aam
repz
imul
dec
jge
add
mov
mov
pop
cmp
lea
xor
fidivrl
jae
hlt
mov
sbb
out
xor
outsb
ljmp
daa
sub
sbb
cmpsl
outsb
sahf
lods
push
out
bound
add
enter
dec
jb
jns
addb
dec
cs
insb
pop
ret
dec
vcvttsd2si
dec
and
stos
lods
hlt
mov
xor
sahf
lock
sar
mov
jmp
inc
sti
xor
adc
movb
add
push
stc
jb
sbb
add
pop
mov
clc
jle
inc
mov
cs
cltd
ret
lea
in
pop
add
sbb
pop
cmp
push
xlat
mov
scas
orb
and
mov
mov
pusha
and
pop
or
cld
lods
add
ljmp
aam
sub
inc
out
adc
push
add
mov
cmovno
cld
test
pop
xchg
xor
enter
dec
cmp
shl
scas
dec
fsubrs
out
push
mov
or
mov
mov
add
mov
arpl
jno
pop
xchg
popa
test
ret
xor
sub
adc
xchg
inc
testl
scas
cmp
je
nop
mov
jne
xor
xor
cmc
add
testb
gs
sbb
push
int3
cmp
in
xchg
jbe
xchg
into
and
aas
inc
dec
inc
pop
mov
xor
loop
inc
cwtl
call
aas
mov
fisubs
in
das
push
cli
pop
cmpsb
xor
mov
test
pushf
loopne
xorb
insl
pop
push
cmc
lea
cmp
mov
call
add
add
xor
ret
shll
jecxz
mov
ss
jb
ds
loopne
push
cmpb
cmp
movsl
mov
dec
pusha
pushf
mov
pop
mov
outsl
stos
cld
icebp
push
into
adc
push
add
mov
popa
push
nop
fwait
sbb
icebp
enter
xor
pop
mov
mov
jbe
push
les
sub
dec
pop
ret
cmp
in
subb
scas
and
mov
sbb
aad
and
add
in
sbb
fprem1
mov
mov
test
jg
mov
mov
icebp
in
sbb
fs
pop
imul
push
outsb
mov
mov
es
mov
or
push
insb
out
sub
xchg
mov
xchg
lock
cli
adc
xchg
sbb
fwait
dec
dec
jecxz
filds
pop
dec
inc
sbb
addl
sbb
and
push
lock
daa
sahf
outsb
sbb
andb
push
mov
sbb
aaa
inc
cmc
scas
test
sbb
hlt
pop
call
dec
leave
cli
xchg
mov
push
dec
mov
push
sub
and
lock
pushf
dec
xlat
xor
inc
cmpsl
popa
scas
cld
shl
adc
pop
adc
xchg
testl
or
pop
or
pop
cmp
mov
mov
xor
cwtl
stos
cmp
xorl
ficoml
mov
data16
push
mov
mov
dec
xor
clc
sti
push
mov
and
sbbl
leave
int
fnstenv
sbb
aad
popl
mov
jmp
popf
test
sub
jl
jl
dec
jae
mov
inc
fstpl
std
sbb
pop
lods
shll
lods
push
mov
fdivrl
pop
mov
xchg
mov
mov
mov
cmpsb
jg
sub
jg
inc
adc
jno
loop
push
popl
inc
push
pop
mov
cwtl
lock
mov
mov
pop
xor
mov
cmpsl
in
pop
adc
jo
cmp
inc
inc
in
shrd
or
mov
aaa
ljmp
cld
aas
pushf
in
decb
cli
pop
insl
les
lret
mov
and
xor
mov
das
ds
pop
sbb
call
nop
sarl
cmp
scas
loopne
jns
dec
loop
int
mov
fdivrl
insl
mov
mov
loop
mov
clc
or
cmp
push
add
sub
push
inc
inc
mov
add
add
adc
xchg
dec
xchg
jl
lret
dec
push
cmp
push
sahf
fcoml
enter
pop
cltd
and
pop
test
lret
icebp
fidivl
arpl
lcall
ja
mov
mov
test
mov
or
aaa
cmovns
push
dec
test
leave
jae
dec
leave
mov
push
icebp
insb
stos
fstpl
shlb
xchg
fstpl
ljmp
push
add
jbe
repz
ds
mull
loop
mov
stos
mov
mov
xor
jl
in
stc
jbe
mov
dec
xor
out
cmp
lds
mov
add
dec
adc
xor
jno
mov
nop
fisttpll
mov
cmp
jbe
inc
push
mov
mov
pop
adc
cli
andl
lcall
loop
push
mov
cmp
mov
adc
xchg
in
or
daa
mov
jo
cmp
or
pop
jmp
inc
push
fmuls
in
popa
jns
inc
cmp
popf
cmp
leave
mov
hlt
mov
mov
test
pusha
iret
aas
mov
xchg
stos
imul
imul
lods
push
mov
xchg
jbe
in
mov
ljmp
dec
or
push
adc
loopne
lret
mov
mov
outsb
incb
divl
leave
xchg
aam
mov
jno
out
mov
xor
icebp
xor
push
call
jns
inc
fwait
icebp
movsb
xor
adc
add
movlhps
and
mov
mov
add
popa
clc
add
add
pop
js
frstor
arpl
sti
xor
mov
pop
mov
sbbb
mov
and
gs
ficoms
repz
inc
dec
pop
push
xchg
mov
add
cmp
iret
xor
test
mov
outsl
enter
xchg
int3
test
in
ret
xchg
pop
gs
mov
ljmp
pop
dec
jns
and
test
cmpsb
int
lods
fcmovnb
push
pushf
cmp
push
lea
sbb
pop
lock
ret
dec
sbb
cmp
arpl
in
stc
subb
pop
mov
add
shrb
stc
push
sub
mov
or
sub
or
jbe
push
pop
or
xchg
xor
into
outsb
push
cltd
pop
ret
mov
mov
lods
or
movl
popa
sub
hlt
je
mov
mov
push
sbb
ret
fsubr
cltd
sbb
and
aad
mov
sub
push
mov
imul
imul
fisttpll
repnz
cmp
ret
pop
sub
xchg
sbb
roll
add
sahf
push
jmp
dec
xchg
leave
loop
movsb
test
pop
dec
and
sub
addr16
xor
pop
aaa
mov
sub
fiadds
cmp
push
mov
inc
bound
fs
loop
add
mov
or
xchg
test
movsl
stc
addl
adc
mov
roll
subb
pop
adc
jl
jl
out
fwait
sbb
inc
hlt
in
pop
lds
fsts
push
les
cmp
lahf
fadds
xor
insl
loope
aaa
xchg
jns
add
cmp
fisubl
mov
mov
mov
xchg
lret
out
cmpl
ret
test
nop
aam
outsl
outsl
rorb
bswap
xchg
and
jae
sti
clc
outsb
dec
lds
test
and
add
xchg
fs
pop
rcll
mov
mov
out
cmp
pop
sbbb
xor
mov
push
dec
jmp
xchg
ret
call
xor
rcr
push
jnp
pop
icebp
xor
rcll
mov
fsubs
mov
aam
pusha
lds
pop
test
mov
icebp
push
je
jle
xchg
outsl
leave
sbb
les
add
pop
inc
lods
push
xlat
sub
xchg
fisttpl
push
in
dec
mov
cltd
mov
sub
fisttpl
fisttpll
cmpb
push
mov
dec
or
cltd
cmp
addr16
pushf
stc
push
mov
adcb
out
adc
aam
jl
aad
add
adc
repnz
mov
fs
lcall
ret
inc
int
add
inc
inc
pushl
into
jg
mov
pop
jnp
pop
out
fwait
gs
iret
add
ss
mov
xor
push
ficompl
out
mov
push
cmp
pop
insb
fs
test
adc
gs
push
push
adc
dec
add
mov
out
mov
xchg
lds
std
call
cmp
inc
xor
sarl
cmp
cmp
ja
movb
adc
dec
out
es
mov
add
out
push
xchg
fimuls
jbe
add
sub
push
icebp
push
jmp
les
fldt
stos
add
sub
jo
inc
push
adc
loop
jno
adc
dec
repnz
test
jl
pop
mov
push
icebp
out
adc
shr
ss
aaa
jae
mov
stos
and
lret
push
mov
add
adc
and
stc
pop
fistpl
jbe
mov
cmp
inc
ret
add
xor
inc
push
xor
cmp
add
jmp
cmp
cmp
push
lea
pop
addl
jb
jnp
jle
mov
fldl
fnstenv
pop
push
rorb
or
pop
cmp
pushf
scas
or
or
inc
mov
mov
imul
sbb
cltd
add
pop
fbstp
lods
jmp
sti
add
ds
fidivl
and
repz
icebp
nop
jno
addr16
dec
dec
mov
push
out
push
or
pop
sbb
loope
ss
inc
jge
insb
enter
cwtl
roll
ffreep
dec
xchg
pop
inc
push
push
jmp
mov
mov
jl
mov
ljmp
in
sub
ret
jl
iret
cltd
mov
iret
jo
aam
xchg
movsb
test
adc
sbb
cmp
movsl
dec
or
enter
lods
ja
adc
je
mov
sbb
test
ljmp
xchg
ds
sbb
add
cmp
jecxz
jmp
ja
dec
mov
lea
xor
cmp
ljmp
mov
mov
cld
cmp
mov
lds
push
push
outsl
pop
push
jle
inc
sub
js
nop
rcl
add
cmpsl
es
add
aas
adc
mov
shl
mov
push
pop
sub
call
ds
push
or
icebp
jns
jns
icebp
cwtl
imul
adc
call
inc
add
or
xor
and
aam
cmpsb
xor
inc
decl
inc
aaa
mov
hlt
ljmp
mov
cmpsl
cmp
js
inc
sub
test
sub
movsl
sti
shl
and
sti
xchg
out
out
incl
rorl
jbe
jmp
fisubs
repnz
add
xorb
cmp
std
in
sahf
jno
cmp
push
cmp
inc
fwait
push
test
pop
in
mov
rol
andb
stc
loopne
movsl
xchg
loopne
mov
dec
jmp
lret
mov
sbb
push
lods
std
das
add
mov
fadd
int3
pop
push
daa
mov
mov
cmp
pop
in
sbb
mov
push
mov
push
in
pop
adc
cs
dec
test
mov
in
pushf
push
mov
shlb
iret
mov
pop
loope
filds
jle
fldcw
pop
out
cmp
jae
mov
push
test
fcoml
inc
xor
outsb
daa
shll
fadd
dec
pop
jnp
hlt
scas
fidivl
dec
cmp
dec
jle
mov
sahf
loop
pop
push
pop
je
popa
out
cmp
adc
cmp
mov
mov
aas
stos
lods
cmpsb
jo
push
xchg
mov
xor
mov
sub
xor
test
hlt
faddl
mov
and
jp
jae
pop
mov
fcmovb
mov
in
cmpsl
std
add
sbb
inc
jg
mov
pop
lahf
sbb
mov
mov
cli
mov
inc
push
fisubs
mov
mov
iret
ret
mov
fcoml
add
inc
lcall
inc
xor
mov
jg
in
xor
mov
xor
imul
xchg
adc
mov
pop
mov
fiadds
fs
cmp
and
std
cmpsl
fdivr
mov
icebp
cmp
hlt
orb
jbe
xor
and
add
cmpsb
dec
mov
and
xor
repz
dec
sbb
clc
insl
xlat
sub
lea
xor
pop
sbb
mov
xchg
add
jmp
nop
dec
pop
fs
gs
idivb
and
nop
outsl
and
scas
jne
mov
xor
cmc
lds
sbb
popf
xor
leave
jb
outsl
mov
dec
or
push
shrb
test
fidivrs
popf
out
xor
sub
cltd
imul
loope
jl
outsb
sbb
push
push
iret
jle
mov
cmp
jg
fnstsw
push
lret
cmp
xchg
in
and
lods
movsl
test
fucomip
scas
cmc
push
adc
mov
inc
insb
push
cmc
adc
mull
int3
fsts
mov
jl
mov
rorb
fcom
cld
nop
cmp
or
cmp
insb
pop
add
insl
jp
pushf
sahf
bound
and
mov
xor
arpl
pop
test
ret
xor
movsb
mov
sbb
push
xchg
mov
outsb
mov
cmp
xor
lcall
aas
jge
icebp
loop
sub
js
or
imul
pop
push
pop
aas
cld
push
lahf
sbb
das
jecxz
fsubrs
xor
int
lahf
jecxz
pusha
lds
data16
in
int
sbb
or
icebp
jb
in
leave
mov
loope
cwtl
or
ljmp
aaa
insb
jb
jmp
and
inc
inc
xorb
dec
dec
or
out
cmp
sub
outsb
stos
pusha
sub
mov
mov
mov
jnp
xor
out
in
incb
rolb
popf
loop
mov
iret
aam
sbbl
sbb
xchg
xor
scas
push
push
jp
adc
mov
adc
push
movsl
dec
inc
xor
mov
mov
cmp
adc
cmp
movsb
out
inc
pop
ja
fistps
iret
in
ret
jg
dec
test
jnp
and
mov
lea
dec
pop
or
xlat
sbb
movsb
cmp
mov
mov
xchg
xor
lcall
loopne
stc
mov
sbb
sbb
xor
mov
or
adc
cmp
sub
adc
mov
sysenter
ret
lahf
clc
jecxz
shll
add
mov
push
test
js
int3
cld
loop
fwait
sarl
nop
loope
xchg
cld
inc
imul
xchg
pop
repz
push
ret
cmp
nop
sbb
push
xor
loop
pop
sub
aas
push
arpl
in
lahf
inc
sbb
and
adc
pop
push
push
mov
push
jmp
and
or
mov
sbb
add
fwait
push
in
repnz
sub
inc
xchg
inc
cmpsl
es
push
xor
leave
gs
mov
faddp
insl
fwait
cld
iret
rorb
rcll
jns
push
mov
pop
jbe
shl
cmc
mov
loopne
add
pop
inc
cmp
int
pop
imul
cmc
mov
lods
addr16
icebp
push
xchg
pop
cli
inc
arpl
in
pop
outsl
data16
or
sbb
daa
out
filds
repz
in
scas
lea
out
ror
adc
push
sbb
xlat
ljmp
jne
aaa
leave
scas
sarb
adc
aad
out
adc
out
scas
dec
xchg
inc
lcall
push
imul
stos
push
cltd
cld
xchg
call
xlat
mov
and
sbb
movsl
mov
mov
and
movsl
jae
das
gs
jmp
xchg
or
push
and
sahf
xchg
and
pop
ja
fldcw
fdivrs
out
cmp
ret
mov
jbe
mov
stos
push
popf
fnstsw
mov
shll
jne
ss
frstor
frndint
adc
popf
xor
add
cmp
stos
ja
inc
dec
stos
fldt
jg
mov
push
ds
repz
out
dec
or
mov
pop
dec
add
repz
cld
sbb
ret
mov
add
xor
aas
inc
push
xchg
adc
insb
fs
xorl
enter
mov
mov
fwait
shll
lods
repnz
fs
cmp
jl
les
sub
pop
inc
movsl
decb
or
movsl
cs
xchg
loopne
and
pop
cld
sbb
nopl
push
mov
inc
ja
cmp
mov
mov
jmp
add
push
push
or
daa
and
jbe
int
and
add
xchg
cmpsb
imul
sbb
xlat
pop
fsubs
add
push
movsb
push
sub
jle
popa
cltd
jnp
cmp
pushf
jge
in
xlat
lahf
lahf
ss
adc
out
sti
aas
popf
sahf
jo
sub
imul
jge
test
or
int
jmp
cmp
fiadds
roll
and
in
cwtl
mov
lea
sbb
xchg
icebp
loop
mov
xchg
outsl
cmpsb
lahf
cmp
jp
fiaddl
pop
pop
push
xchg
fld1
insb
cmp
sub
push
out
arpl
jo
inc
out
out
sub
enter
je
lock
xchg
push
lea
cmp
movb
rorb
inc
roll
mov
pop
jne
sub
adc
sbb
sub
jns
adc
out
xchg
aaa
add
loope
sbb
call
pop
xchg
aad
pop
or
popf
xchg
addb
rorl
sbb
lret
inc
mov
test
jno
jecxz
repnz
dec
mov
ret
fcomi
ret
mov
cltd
sub
in
xchg
icebp
loope
test
cmc
out
popa
jbe
imull
sub
add
nop
sub
subb
fisubs
push
push
or
hlt
fcmovnb
pop
push
jo
and
sub
test
outsb
jmp
sub
add
sbb
nop
testl
aaa
icebp
mov
insl
cs
cli
call
sub
iret
sahf
push
push
cmpsb
add
aas
jle
stos
pushf
nop
push
sbb
dec
cmp
pop
out
xor
jge
add
pop
pusha
push
push
sub
loop
call
xor
movsl
out
cltd
sbb
inc
js
sbb
loop
pop
addr16
icebp
dec
test
es
nop
mov
cmpsb
jl
sbb
out
adc
lret
push
push
pop
fpatan
inc
sarl
lcall
pop
sbb
xchg
test
inc
std
cmp
xchg
outsl
or
add
xor
popf
cmp
stos
lods
mov
scas
lret
lret
add
ror
inc
mov
dec
cmp
fdivrs
fwait
orl
xchg
inc
test
cli
pop
pop
dec
fiaddl
or
and
out
add
cmp
add
cmp
in
aam
stc
sti
push
sti
cmc
insb
into
ljmp
imul
adc
jp
enter
mov
add
in
inc
pop
push
mov
int3
es
out
popf
fmull
push
into
push
push
mov
enter
popf
lods
cltd
loopne
cmc
add
add
mov
xlat
fcomip
rorb
jnp
iret
int3
jmp
pop
lods
call
lret
das
jns
inc
leave
mov
mov
dec
inc
roll
cmp
mov
and
xchg
pop
or
fwait
dec
jg
and
add
inc
out
and
pushf
comiss
flds
mov
jno
test
loopne
dec
int
xor
insb
out
mov
or
lret
lret
push
add
jp
aad
repz
push
mov
jg
jmp
or
adc
adc
xchg
dec
stos
mov
or
into
cwtl
push
cmp
cltd
mov
jmp
jmp
sbbl
xchg
fs
mov
mov
subl
mov
pop
jecxz
lret
ds
or
add
in
mov
sbb
pop
adc
mov
sub
mov
add
into
mov
pushf
sahf
mov
dec
add
les
fwait
xchg
push
iret
dec
mov
push
leave
pushf
adc
dec
xor
add
sub
shl
add
push
icebp
mov
dec
cld
pusha
mov
xchg
and
dec
fisttpll
xchg
adc
cld
aaa
and
cmpsb
sahf
xor
adc
stos
or
sub
cmc
mov
stc
sbb
pop
gs
dec
iret
gs
adc
lret
ret
and
jnp
shlb
or
fndisi(8087
pop
add
add
jmp
in
adc
lret
mov
cwtl
insl
scas
dec
push
movsb
aas
xchg
hlt
fcmovne
sub
pop
cmp
push
add
arpl
mov
push
ror
push
mov
pop
in
out
jnp
xchg
pop
push
std
mov
out
mov
mov
arpl
push
int
iret
bound
aad
adc
lret
stc
inc
mov
jno
cmp
mov
xchg
push
jae
inc
addr16
aad
jo
call
fildll
cmp
pop
adc
xor
stos
fs
mov
lods
jae
add
xchg
mov
push
mov
and
lock
sbb
mov
fsubr
jge
mov
data16
mov
mov
test
imul
pop
jl
xchg
out
mov
enter
sbb
dec
fidivl
pop
leave
in
repz
xchg
std
xor
testb
sub
push
lods
lds
test
sub
out
addr16
sub
jb
xor
jmp
dec
mov
clc
pushl
int3
stc
fdivr
in
cld
jae
sti
mov
push
not
aaa
mov
pop
or
into
shlb
cmp
ret
xor
and
clc
dec
inc
mov
gs
xor
imul
push
sbb
xor
xor
xlat
pop
sbb
lock
sub
push
mov
mov
addr16
mov
pusha
mov
daa
cltd
popa
mov
jns
or
test
mov
fstl
fimuls
lret
psubd
test
mov
mov
mov
ja
cld
inc
push
lods
sub
cmp
leave
icebp
sbb
divb
push
dec
rcr
inc
jg
sub
int3
push
shld
testb
pop
pop
dec
mov
jnp
lods
and
dec
add
rcrl
inc
sti
test
leave
mov
sahf
push
std
mov
push
fnstcw
mov
mull
mov
and
cld
pusha
loop
lods
lock
push
or
data16
pop
dec
dec
push
lods
clc
fstl
add
cmp
inc
int3
and
lret
mov
movsb
pop
add
dec
dec
or
out
push
mov
xor
cld
add
insb
xchg
ds
add
sbb
cmp
inc
jmp
shlb
dec
int3
sub
cmp
fwait
sbb
rep
mov
cld
inc
dec
out
shlb
dec
add
mov
mov
out
mov
mov
scas
daa
mov
adc
jae,pt
and
sub
aas
mov
add
lcall
push
leave
cmpsl
sub
mov
movsb
adc
loop
jb
ret
loopne
adc
jle
in
cli
push
fildl
mov
mov
lret
or
mov
leave
xor
dec
sub
in
dec
stc
sub
je
imul
mov
lahf
lods
ds
adc
test
movl
add
ret
adc
ja
pop
scas
jp
xchg
mov
fldt
inc
outsb
popf
sbb
push
aaa
bound
or
or
cmp
adc
lods
movsb
addr16
adc
stos
jns
fcoml
fistl
and
insb
stos
rol
in
jle
mov
pop
ret
jmp
jb
fcoml
jge
add
mov
mov
add
and
popa
push
arpl
std
mov
mov
adc
adc
stc
dec
mov
sub
xor
push
mov
out
xchg
xorl
outsb
arpl
lock
pop
icebp
jae
xchg
lcall
fyl2xp1
outsb
mov
mov
sub
add
jns
fwait
sarl
pop
outsb
pop
fs
leave
adc
loope
lcall
cwtl
add
xlat
mov
sbb
pop
bound
lock
sub
fs
mov
pusha
imul
nop
xor
fidivrs
adc
push
out
cmp
loop
xchg
es
adc
pop
mov
jne
jge
fidivl
jmp
cld
pusha
mov
imul
cmpsl
inc
fcmovnbe
pop
pop
jecxz
rcrl
and
lea
clc
shll
push
popa
inc
push
lds
nop
lcall
pushf
push
cli
cmp
in
xorb
ss
pushf
jp
push
vunpckhps
pop
jle
mov
in
ror
mov
mov
jg
mov
xchg
stos
in
dec
jp
adc
out
pop
jmp
aam
ds
in
ljmp
push
adc
out
cwtl
inc
add
cmp
lods
aad
inc
pusha
push
cmp
xlat
in
push
cmpb
cmp
xchg
jnp
mov
adcb
in
popf
mov
fwait
dec
adc
lods
stc
shrl
sbb
sub
icebp
sbb
adcl
pusha
jg
sbb
xchg
shll
pushf
clc
outsl
imul
push
jb
sbb
cmp
outsl
push
sti
mov
mov
fcomp
dec
bound
mov
in
call
rorb
loop
push
int
mov
xchg
arpl
pop
mov
test
out
mov
das
pusha
sub
pop
addr16
or
lret
sub
push
ret
into
adc
inc
pop
subb
jns
lcall
sub
adc
push
notb
sub
inc
rorb
movsl
mov
popf
xor
mov
mov
loope
lea
repnz
repnz
push
es
dec
mov
adc
mov
leave
lock
pop
loop
xchg
cmpl
or
call
pop
fists
mov
add
mov
ja
mov
or
mov
enter
adc
add
ja
pop
cmp
loope
mov
pop
or
cmc
sub
push
movsb
mov
dec
lret
mov
les
and
subl
pop
xchg
aad
add
jbe
cmc
adc
push
sub
icebp
repnz
repnz
push
sahf
sbbb
push
xchg
stc
scas
sarl
add
pop
pop
cmp
or
ss
or
mov
mov
jp
xchg
rcrb
andl
sub
mov
sub
mov
pop
jae,pn
pop
pop
int
sbb
inc
mov
rorb
inc
dec
mov
shlb
rorl
mov
sub
lock
jge
repz
js
jmp
addl
dec
mov
mov
movsb
add
pop
sub
inc
push
inc
pop
xchg
inc
in
cld
or
sub
xor
push
imul
out
sbb
sub
dec
push
mov
or
in
pop
ja
cs
dec
jne
test
mov
push
pop
jbe
addr16
and
jmp
and
js
mov
fucomi
outsl
insb
xchg
popa
je
cmp
loope
rorl
pop
dec
push
lods
sbb
bound
ret
sbb
xor
sbb
leave
mov
dec
and
cmp
pop
movsl
pop
jge
ss
xchg
insl
lea
add
xchg
mov
out
popa
xor
push
mov
aaa
ljmp
xchg
icebp
adc
mov
mov
xchg
test
adc
mov
shrb
push
ss
adc
int3
push
cli
push
dec
xor
sub
dec
push
push
aam
mov
loope
in
cmc
add
in
test
jmp
ss
fimuls
cmp
push
ret
stc
sub
push
mulb
cmpsl
push
push
xorl
xchg
in
sbb
fwait
paddsb
aas
lock
repnz
mov
arpl
aas
sub
divb
pop
lret
ror
stos
push
lock
cmp
out
add
add
xchg
repnz
push
mov
aaa
inc
notl
ficomps
sub
cmpsl
mov
in
stc
add
jnp
aaa
pop
cmpsl
stos
dec
xchg
shll
pop
mov
in
cwtl
jbe
push
pusha
mov
leave
inc
push
adcl
test
or
mov
adc
insb
jno
hlt
adc
es
ss
pop
sbb
xchg
mov
sbb
mov
add
aad
push
daa
push
hlt
insl
cmpl
in
jp
cmp
repnz
or
or
jecxz
fs
je
sub
int3
imul
push
xchg
repnz
push
movl
and
pop
sbb
add
mov
and
mov
data16
pop
shl
inc
mov
or
xchg
push
mov
and
and
mov
test
stos
push
dec
aam
popa
inc
leave
xor
adc
cwtl
sub
ljmp
pop
cs
push
mov
hlt
adc
mov
mov
jge
inc
jne
mov
lea
mov
pushf
in
mov
sub
mov
inc
sub
xchg
aam
sti
xchg
std
sbb
mov
daa
sbb
cwtl
mov
rcrb
mov
movsl
vmovapd
push
sti
xor
push
fstpt
aam
test
sub
sbb
mov
repz
sbb
cmp
pushf
test
mul
jns,pt
mov
dec
cmp
lock
or
lcall
neg
add
jnp
in
mov
sub
xchg
push
ss
repz
out
lahf
sub
push
clc
jge
bound
mov
adc
mov
inc
fs
shrl
rcr
add
mov
mov
push
lahf
adcl
jp
sbb
sahf
mov
movl
test
fidivrs
mov
add
das
ficoms
movsl
inc
and
popf
inc
push
mov
jmp
mov
or
in
add
xchg
imul
sarl
jle
mov
jno
in
dec
fstpl
movsb
push
mov
sbb
mov
sti
cmp
fs
or
movsl
das
in
stc
out
lds
jp
loope
pop
repnz
jno
cmp
pop
jmp
and
sbb
cmp
int3
repz
shl
jecxz
jo
shl
mull
leavew
mov
sub
dec
dec
add
es
push
xchg
add
andl
imul
in
in
pop
adc
das
xor
cmp
mov
sbb
lock
fbld
and
into
pusha
mov
cmp
cs
andb
dec
movsl
jns
sub
lods
sbbl
push
add
pop
cmpsl
dec
fidivrl
lock
rcll
sub
fwait
mov
arpl
xchg
or
dec
push
add
mov
sahf
and
pop
jecxz
sub
adc
or
shll
mov
addb
hlt
leave
cmp
xchg
push
fidivs
out
lcall
out
loopne
inc
jo
icebp
insb
fldcw
mov
mov
pop
jp
cmpsb
cmpsb
push
jmp
lret
out
js
adc
mov
fists
ss
inc
dec
mov
test
pop
mov
movsb
fsts
sbb
cmc
out
adc
inc
cs
in
inc
rcrb
push
lahf
sbb
push
hlt
lcall
mov
adc
push
cmp
inc
jae
mov
rorl
scas
leave
sahf
push
pusha
pop
sti
adc
mov
xchg
lods
mull
adc
pop
and
enter
jns
push
push
fnsave
test
pop
clc
test
sahf
leave
les
pop
fdiv
lret
daa
cwtl
pop
jle
daa
imul
mov
jmp
xchg
ret
jae
inc
pusha
lret
lock
test
lahf
adc
jl
insb
mov
or
xchg
xorb
cmpsl
mov
cwtl
insl
scas
mov
mov
arpl
outsb
mov
add
lcall
data16
sarb
mov
jg
in
nop
cmp
int3
mov
sub
and
nop
cmp
das
push
gs
aaa
jg
inc
xchg
dec
bound
mov
xchg
xor
mov
sbb
mov
add
dec
hlt
mov
aad
icebp
nop
test
adc
xchg
clc
outsb
xor
push
adcl
add
and
into
adc
enter
pop
outsb
sub
cwtl
out
xchg
repz
out
xchg
jmp
inc
xor
xchg
pop
test
and
and
pop
pusha
addl
orb
mov
ds
cmpsb
loop
les
or
popa
ret
dec
lds
sbb
dec
fidivs
inc
pusha
adc
or
data16
mov
and
nop
cmp
jle
outsb
std
int
movsb
andl
xchg
dec
int3
mov
test
outsb
add
sbb
divl
in
sub
or
or
sbb
cmp
xchg
xchg
ja
push
xchg
adcl
adc
gs
inc
lahf
sub
stc
mov
out
inc
aaa
pop
cmp
jge
cwtl
pop
pop
fidivrl
aas
inc
popf
push
mov
sbb
or
push
jmp
adc
sub
dec
fsubrl
mov
mov
mov
push
lret
subl
push
ret
xchg
jb
loope
adc
imull
into
and
add
and
clc
pop
fiadds
push
call
dec
cmp
mov
fldcw
stc
outsl
xchg
mov
mov
xor
cs
loope
mov
sti
xchg
cmp
mov
aas
mov
shll
movsl
out
clc
cwtl
dec
push
xchg
sahf
push
and
ret
sbbl
push
gs
data16
outsb
dec
pop
aad
lret
cli
add
dec
in
xor
sub
mov
push
add
add
inc
iret
push
imulb
push
pop
loopne
ss
jne
mov
fisttps
add
push
lods
movsl
cmpsb
stos
and
and
daa
jne
loop
push
adc
mov
and
push
mov
inc
xchg
mov
jb
stc
cmpb
jno
push
fwait
cmpsb
les
mov
cmp
enter
jnp
icebp
xor
cmpsl
es
imul
ds
sub
push
outsb
mov
insb
aad
cmp
or
addl
or
or
icebp
pop
push
test
add
lcall
sub
es
mov
test
sahf
push
test
jae
adc
stos
daa
cmp
jnp
pop
jmp
aaa
inc
mov
mov
cld
jno
cltd
pop
pop
clc
mov
pop
cwtl
jg
test
xchg
pop
push
jge
xor
jecxz
xor
movsl
outsb
shlb
sbb
popa
stos
xor
pop
jns
mov
jle
sub
enter
cs
xchg
xor
pop
inc
jmp
pop
sub
fistl
dec
sub
adc
test
negb
fwait
ret
iret
clc
loop
cmp
cmc
mov
inc
jo
or
xchg
push
in
repnz
add
pop
leave
stos
jno
xchg
dec
faddl
push
pop
xor
insl
mov
cmp
cs
mov
jns
or
call
stos
lahf
jno
pop
push
inc
popl
and
std
pop
sub
in
dec
push
inc
negb
adc
sahf
out
call
xchg
loope
test
stc
push
icebp
or
stos
cld
lret
mov
xchg
mov
out
pop
in
lahf
subb
fwait
call
mov
push
lret
and
addr16
jle
add
pop
and
daa
push
fistl
out
mov
mov
out
inc
inc
daa
xor
dec
ljmp
pop
jbe
inc
subl
add
cli
iret
aaa
pop
push
out
outsb
das
cmp
and
xchg
test
or
push
mov
sarl
mov
bound
mov
xchg
test
fisttps
jbe
imul
into
mov
lods
mov
cmpsb
cmp
loop
jbe
nop
mov
sub
cmp
jg
sub
inc
mov
adc
pop
adc
icebp
mov
jecxz
shlb
pop
cli
sbbb
stc
insl
lahf
add
arpl
mov
lds
push
or
sub
lods
adc
lret
add
pop
mov
andl
dec
pushf
call
lret
pop
add
mov
xor
jge
xchg
cltd
lret
sub
xor
jo
add
insl
add
fmull
or
repz
popf
jbe
mov
xor
aas
sarl
cwtl
and
inc
test
xor
cmc
notl
leave
push
add
lret
mov
stc
call
aas
out
pop
or
push
arpl
mov
sub
leave
push
ficompl
scas
pushf
lahf
scas
dec
cmp
mov
loop
pop
add
dec
int
fmuls
shll
push
jle
sbb
and
jne
jns
iret
add
add
test
sahf
int
mov
enter
push
xchg
jae
pop
xchg
idivl
in
insb
adc
xchg
xchg
frstor
fidivrl
xor
fs
fs
lret
push
and
inc
cmp
push
adc
mov
lret
testl
mov
das
or
add
divb
leave
mov
mov
cmp
test
xchg
cltd
pop
repnz
repnz
dec
xor
or
xchg
push
das
xor
inc
adc
jae
nop
push
add
pop
xor
xchg
pushf
mov
and
push
das
std
sub
outsb
mov
lods
sahf
sahf
sub
scas
cmp
sbb
das
adc
xchg
sbb
mov
adc
mov
push
mov
mov
in
jp
add
add
push
sub
sbb
dec
push
call
fistps
cs
lret
fildll
mov
aam
adc
loop
inc
inc
sahf
sub
das
jbe
leave
add
arpl
push
add
fdiv
xlat
cmp
push
sbb
adc
mov
or
fwait
arpl
xchg
loop
jnp
cmp
dec
sub
add
jne
pusha
sub
mov
inc
nop
inc
test
lea
push
add
mov
mov
pop
sub
test
push
jo
pop
jge
inc
mov
ret
jo
sbb
cltd
imul
mov
call
sub
and
dec
mov
mov
mov
adc
or
adc
ret
dec
mov
mov
pop
cmp
adc
jmp
push
inc
adc
js
sub
and
popa
dec
push
std
loope
dec
sub
mov
add
test
inc
jnp
xor
xchg
dec
mov
push
ja
rorb
xor
xchg
mov
jg
xchg
ffree
cli
pusha
xchg
out
or
test
mov
xchg
pusha
sbb
sbb
jae
dec
add
and
add
ret
hlt
rolb
jo
sub
bound
cld
xchg
pop
int
addr16
jne
mov
mov
cmp
sub
mov
add
mov
ffreep
pusha
ror
int
hlt
inc
icebp
cmp
xor
dec
aad
ja
cwtl
addr16
jp
and
loopne
dec
dec
cmp
mov
adcl
pop
outsl
nop
mov
loope
inc
in
pop
mov
xor
cmp
mov
ja
add
ret
xor
and
jns
lea
dec
add
sub
xor
fwait
lcall
gs
pop
and
bound
and
pop
xchg
ljmp
pop
lds
cmp
popa
mov
fimull
ljmp
dec
in
push
mov
mov
fcomps
lea
jns
fucom
out
std
les
mov
mov
outsb
mov
mov
cmpsb
adc
cmpsl
testl
mov
push
dec
int
adcl
je
enter
mov
lret
cs
mov
jmp
popa
xor
sub
fbld
push
iret
lods
mov
bound
ret
addr16
sub
xchg
mov
out
inc
dec
jne
fwait
adc
addl
and
outsl
jne
adc
testl
stos
pop
imul
aad
xor
mov
xchg
sbb
jl
sub
fnstenv
push
pop
mov
sbbl
jo
and
jnp
loopne
nop
jae
inc
mov
movsb
mov
xor
fisttpll
xchg
adc
fmuls
ss
jmp
je
push
stos
gs
fwait
int3
loope
std
push
addr16
aad
adc
ja
dec
push
mov
pop
in
lods
dec
lret
insb
xchg
jns
shrl
xor
mov
movb
pop
cmp
daa
jge
popf
jg
lcall
xchg
stos
lods
and
stc
mov
mov
add
inc
adc
out
or
ficoms
je
xchg
and
cmp
insb
inc
adc
push
sub
fldcw
inc
and
fldl
inc
leave
jl
iret
in
cld
adc
mov
adc
fistl
imul
outsl
filds
pop
in
sbb
jae
sbbb
xor
jne
cmpsb
lcall
dec
sub
xchg
lods
dec
xchg
xor
dec
sub
sub
mov
enter
lahf
clc
testl
mov
cmp
js
icebp
int3
jge
clc
ds
movsb
sub
xchg
sbb
popl
mov
dec
cmp
mov
adc
mov
push
jge
ljmp
testb
les
pop
xchg
push
jbe
shll
adc
pop
aad
xor
lods
cmp
mov
arpl
aas
in
aas
in
mov
mov
inc
rcll
xor
daa
sub
sub
xchg
mov
fcomip
data16
test
data16
mov
pop
fildll
jp
dec
push
push
add
movb
mov
pop
out
add
push
xchg
mov
mov
xor
jg
test
pop
jns
mov
mov
jnp
push
jbe
jp
jno
shrl
popa
push
and
mov
jbe
cmovbe
pop
pop
add
jnp
cmp
movsb
mov
cmc
pushf
fidivrs
xor
jl
or
sub
jp
lods
cmp
xchg
mov
dec
jno
mov
xor
sub
idiv
pop
popa
mov
cwtl
xchg
test
jp
jle
mov
popf
mov
sti
fcompl
xchg
cmp
sbb
les
fwait
iret
jo
dec
xchg
or
sub
leave
push
and
mov
out
pop
cmpsw
jmp
or
xor
pop
mov
dec
push
sti
sub
ljmp
jge
jo
mov
shrl
mov
jp
jp
shrl
push
pusha
xchg
adc
mov
push
subb
push
push
push
mov
and
fwait
loopne
sbb
and
pop
pushf
loopne
push
cmp
sahf
xor
popa
lret
xor
cmp
mov
ja
pop
dec
xor
pop
xor
fmull
loop
jns
xor
fcmovnbe
xlat
ss
mov
lods
mov
ds
cmpsl
pop
decb
outsl
mov
subb
or
push
pop
test
imul
std
dec
mov
rol
adc
or
lret
les
pushl
mov
dec
clc
in
xor
andl
xchg
dec
jb
pop
inc
mov
jb
jae
pusha
adc
das
adc
loopne
push
mov
es
jae
jecxz
inc
or
sbb
mov
and
lea
inc
mul
mull
dec
mov
dec
movsl
mov
or
mov
jmp
sbb
ss
mov
inc
lcall
fldpi
xlat
and
xor
jb
and
lret
push
and
inc
dec
fcompl
nopl
sbb
pusha
push
pushf
and
loop
repnz
cmp
mov
je
xchg
xor
sub
insb
lahf
call
popf
icebp
fldenv
or
fcmove
adc
jmp
push
sti
outsl
loope
sbb
outsb
popf
sub
add
fiaddl
rcl
je
xchg
add
mov
mov
inc
add
sbb
nop
jne
sub
mov
dec
push
cmp
ror
lret
xor
inc
jg
mov
sbb
push
dec
or
mov
fistpll
in
pop
psrlq
ss
cmpsb
in
push
jle
pop
cmp
cmc
pop
push
xchg
or
adc
and
mov
jle
inc
ficomps
int
inc
cmp
xchg
push
mov
lahf
bound
clc
xor
cmp
jno
cli
sub
pop
cmp
xor
shlb
int3
jne
mov
jmp
adc
dec
push
add
popf
mov
mov
adc
daa
stos
mov
and
pop
pop
pop
outsb
xchg
ficomps
aad
enter
pop
dec
xchg
sbb
clc
outsb
insl
pop
repnz
xor
xor
aam
xchg
clc
aaa
arpl
lds
test
das
cld
cmpsl
xlat
mov
cmp
push
fimuls
js
sbb
shl
jno
out
je
push
arpl
push
jae
sub
lea
dec
jns
jbe
in
stc
sti
inc
outsl
rorl
or
or
mov
fs
add
jle
mov
add
xchg
mov
mulb
jge
mov
sub
sti
push
push
lret
jne
mov
scas
inc
loop
and
int
inc
daa
ds
lods
xor
pop
and
movsb
push
in
popf
fcompl
mov
fsubrs
pop
push
popf
rcrl
popf
xchg
mov
call
mov
daa
pop
cmp
cmpsb
hlt
pop
adc
movl
subl
sub
shlb
and
push
fsubr
scas
sbb
jo
add
gs
and
mov
cmp
or
out
test
add
mov
sub
mov
mov
in
mov
cmpsl
jge
and
sbb
repnz
fimull
fmulp
in
arpl
frstor
insb
mov
jb
cmpsl
push
adc
movsb
push
aas
ss
lods
or
push
jg
mov
lahf
pop
xchg
repz
add
shll
xchg
mov
xchg
jb
int3
daa
xchg
or
mov
jg
mov
pop
jg
jo
push
fimuls
sbb
adc
sbbb
loop
call
fimull
cmp
or
aam
and
sbb
icebp
fnstsw
out
pop
sbb
jge
fcoms
sbb
mov
out
sahf
push
inc
and
mov
jne
sbb
pop
fwait
push
sbb
int
xchg
test
fcoms
inc
ljmp
sub
mov
loop
mov
ja
call
add
cld
xchg
leave
xchg
push
loope
push
push
add
sbbb
jo
inc
cmpsb
adc
inc
add
push
sbb
dec
addr16
js
sbb
int3
movsb
ds
cld
inc
and
mov
gs
xchg
adcb
outsl
push
shlb
rcr
mov
mov
sbbl
add
push
mov
xor
aas
or
jge
out
mov
loop
and
mov
push
jb
and
jl
sti
push
aam
test
adc
daa
dec
dec
pop
test
jae
mov
loope
rcr
mov
mov
push
cmp
cmp
rorl
lock
xor
shll
cld
jno
mov
stos
int
sub
out
mov
push
in
mov
in
loope
xlat
sub
int3
iret
jne
sub
shll
iret
xchg
int
scas
add
enter
dec
std
mov
repz
jno
and
jno
rcrb
insb
xchg
mov
stc
in
int
sub
or
stos
mov
outsb
cmp
stos
sub
add
aaa
or
jns
iret
jae
lods
das
xchg
stos
sbb
dec
xor
lods
mov
xchg
popf
loopne
push
fadd
pop
mov
sub
cmpsl
adc
mov
add
push
push
mov
loopne
dec
cmpsl
aam
ljmp
faddl
jne
mov
mov
dec
aaa
adc
rorl
or
xchg
xchg
rcrl
pop
faddl
or
cmpsl
loop
jo
pop
and
pop
and
inc
es
insb
pop
adc
push
pop
sub
lcall
aam
sbb
sub
test
outsb
loopne
sub
lahf
push
enter
das
xlat
enter
test
inc
jl
mov
insb
les
jae
test
sbb
add
fiadds
inc
mov
aam
dec
xor
adc
js
iret
leave
loop
dec
or
adcb
dec
mov
dec
pop
in
pusha
cli
xchg
lock
and
jl
in
sbb
mov
shr
pop
xor
xor
test
pop
dec
lcall
shl
xor
cmp
inc
jge
in
loope
cld
dec
addr16
jmp
jne
jo
pushf
inc
out
call
mov
stos
ret
hlt
pop
ror
icebp
test
push
adcb
mov
add
xchg
push
mov
dec
nop
mov
push
fidivl
adc
xor
stos
daa
adc
fs
test
push
or
out
lock
nop
mov
jge
scas
hlt
lcall
jecxz
das
mov
add
push
xchg
notb
int
fisubrs
out
stos
sub
test
mov
aad
popa
movsl
and
pop
dec
mov
mov
repnz
insb
lret
enter
cmpsb
lock
dec
xchg
pop
movsb
ror
lahf
pop
pop
imul
mov
mov
xor
mov
xchg
ds
scas
inc
stc
xor
inc
sbb
pop
pop
fwait
sub
scas
push
ljmp
ljmp
xor
push
arpl
push
repnz
cs
or
add
mov
jno
and
jne
xor
int3
out
pushf
nop
mov
stc
daa
insl
dec
sub
xor
adc
jo
jb
call
fdivs
arpl
stc
sub
add
or
xchg
xchg
mov
aam
mov
std
inc
aam
mov
adc
mov
sbb
jo
inc
mov
push
cli
push
das
lods
adc
inc
movsb
mov
pop
imul
cld
push
jns
sbb
rclb
mov
jns
add
jnp
iret
faddl
sti
rcrl
mov
mov
sub
fisubs
cmp
mov
sti
iret
inc
jp
sub
out
xchg
mov
hlt
daa
call
movsl
rcrl
stc
mov
mov
into
push
fistpl
daa
mov
mov
popa
push
xchg
mov
pop
xor
inc
mov
jns
sub
rcr
pop
pop
cmpsl
cltd
fsubrs
aad
push
pop
mov
int
mov
dec
lcall
clc
inc
in
xor
arpl
or
and
push
jnp
and
cli
inc
mov
or
test
add
in
test
out
push
xchg
push
addr16
push
dec
lret
inc
icebp
arpl
flds
xchg
sbb
xchg
mov
mov
gs
pop
ljmp
push
imul
mov
in
pop
inc
fdivrp
movsb
in
fsubl
sbb
cmc
xchg
mov
outsb
cmp
add
rorl
push
cmc
lods
popf
mov
stc
in
cmpl
adc
in
sahf
les
mov
shrb
mov
fcomp
xchg
xchg
dec
jmp
inc
insb
mov
and
add
pop
cs
jle
dec
dec
mov
inc
fdivs
adc
scas
mulb
lcall
or
out
push
xchg
jns
mov
push
mov
ret
xchg
add
xor
or
pushf
pushf
stos
popa
xor
xchg
dec
test
insb
mov
jns
mov
out
and
loope
cwtl
loop
lret
add
aad
in
inc
hlt
in
adc
daa
pop
mov
idivw
int3
iret
out
xchg
jecxz
lret
add
push
jb
cmp
popf
out
aaa
pcmpeqd
subb
xchg
xor
add
ror
jge
adc
jb
inc
cmp
aam
test
into
mov
sub
push
dec
adc
cmp
dec
movsb
pop
dec
xor
mov
fimull
jns
mov
cmc
mov
mov
shl
insl
xor
repnz
out
cld
fsubr
xchg
aad
aaa
push
testb
jmp
imul
int
push
inc
fs
inc
cltd
stos
xchg
cmp
in
or
xchg
fnstcw
enter
add
rolb
gs
mov
and
inc
and
mov
pop
fwait
icebp
test
mov
push
xchg
push
out
xor
out
sub
xor
inc
nop
push
es
push
xor
sti
stos
xor
ss
inc
sub
mov
xor
inc
cmpb
cmp
sub
testl
mov
stc
mov
cwtl
ffree
and
adc
mov
insb
shrb
je
into
daa
xlat
adc
loop
cmp
loopne
xor
scas
mov
shl
mov
imulb
movsl
ss
ss
lock
adc
call
and
dec
sub
sahf
movsl
push
sbb
shrl
jae
loopne
int3
or
das
mov
dec
cmpsl
fmull
rorb
cli
inc
push
mov
loop
lods
in
or
inc
add
sbb
adc
pop
mov
pusha
sbb
sub
dec
xchg
pop
insb
pop
xchg
lret
sbb
out
daa
lods
adc
in
sbb
pop
inc
cmp
add
inc
mov
movsl
shrb
dec
cmp
arpl
clc
push
sub
iret
push
inc
stc
push
cmpsl
imul
jp
mov
or
xor
sbb
clc
lods
sahf
pusha
loop
xchg
inc
in
insl
push
ror
pushl
mov
test
jbe
lds
test
rcrb
lret
shll
lcall
cmpsb
fucompp
sub
mov
adc
xchg
icebp
xlat
and
mov
nop
ret
inc
fs
mov
ret
and
imul
out
mov
add
test
add
data16
pop
pop
scas
jns
imul
out
scas
andb
inc
scas
imul
fcomps
mov
cld
pushf
inc
inc
aas
loope
push
cmc
and
pop
inc
push
sub
test
fnstenv
ds
xchg
cmp
setb
mov
push
inc
test
das
xor
mov
pop
out
sbb
enter
outsb
sbb
push
testb
and
cli
lahf
fwait
mov
xchg
gs
dec
or
and
lret
push
jb
lcall
inc
rorl
push
xor
int3
pop
test
sbb
xchg
lcall
test
aad
dec
leave
fnstenv
or
add
ror
inc
les
push
sbb
cltd
mov
dec
lea
lods
ss
cmpsb
pushf
mov
and
ret
xchg
mov
mov
mov
stc
lods
sub
outsl
sub
xchg
sub
cli
mov
sti
mov
cmpl
cmp
stos
lock
invd
jp
xchg
xor
aad
ds
cmp
xchg
lods
sahf
pop
inc
or
cmp
fcomps
add
push
sub
frstor
scas
push
lret
mov
lahf
xchg
movsl
cmp
adc
dec
cmp
scas
ja
pop
inc
jae
mov
movl
pop
jno,pt
push
lret
inc
cmp
mov
push
jmp
xor
movsb
dec
cmp
les
popf
out
es
sbb
mov
add
pop
push
arpl
pop
cmc
cmp
stos
mul
mov
movsl
dec
out
sub
push
and
xchg
sub
imul
push
add
cwtl
fidivrl
jmp
adc
dec
mov
jge
pop
mov
mov
rcrl
das
xor
mov
fdivl
adc
push
in
iret
popa
fadd
shll
cmp
pop
icebp
test
jl
insb
das
inc
sahf
jp,pn
call
dec
pop
fisubs
loop
sub
add
xchg
push
mov
or
push
jns
inc
popa
mov
jge
or
movq
insb
repz
test
hlt
mov
push
fistps
dec
mov
aaa
pop
popf
xor
dec
cmpsb
cwtl
pushf
mov
xchg
nop
sarl
or
jo
and
js
mov
ror
btr
loope
mov
sub
xor
stos
addr16
mov
rcll
pushf
and
dec
add
outsl
xchg
or
filds
push
xor
fisubrl
scas
xchg
adc
sbb
ret
inc
cltd
or
incl
aaa
cld
cld
insb
testl
push
das
inc
rcll
decl
xchg
jnp
mov
repz
adc
out
pop
lock
sub
cmp
add
lds
into
aam
push
sbb
cmpsl
in
pop
pop
pop
and
ficompl
cwtl
in
jb
jae
add
mov
jne
cli
sbb
mov
or
cmp
jp
je
xor
imul
add
xchg
shlb
jae
sbb
in
add
insb
pop
lahf
sbb
xor
and
add
adc
xchg
lcall
lret
aam
mov
inc
xlat
pop
adc
into
xor
xchg
add
ja
dec
or
cmp
or
lret
cmp
or
pusha
popa
je
cmp
je
loopne
pop
shl
mov
mov
inc
inc
ret
into
xor
scas
loop
adc
mov
icebp
mov
add
and
add
or
jmp
and
dec
xchg
inc
and
jo
pop
inc
es
mov
pop
xor
mov
loope
neg
jle
xor
ficoml
sbb
es
xor
imul
push
xchg
in
xor
jnp
add
jbe
outsb
inc
jp
adc
dec
mov
fcoml
outsb
stos
dec
push
pop
out
jge
popf
push
push
mov
ret
push
pop
push
popf
sub
test
in
inc
xchg
shrl
rcr
pop
inc
fldcw
mov
cmc
aas
inc
or
dec
inc
mov
ja
dec
push
addb
mov
test
sbb
adc
mov
mov
xor
dec
sub
movsb
ror
adc
mov
inc
jle
nop
inc
jmp
cmovb
fdiv
gs
jno
pop
xchg
fidivs
insl
imul
mov
ffreep
mov
jne
mov
ret
cli
dec
mov
in
out
dec
xor
test
cmp
pop
in
mov
lods
std
nop
ds
enter
cmp
scas
dec
scas
mov
outsb
sbb
push
loop
cmp
push
sub
leave
inc
cmp
inc
xor
ss
testl
gs
std
das
fs
push
js
pop
dec
ljmp
jbe
imul
inc
je
sub
pop
mov
jbe
mov
mov
test
pop
dec
data16
aaa
push
and
movsb
cmp
inc
cmc
test
jne
push
push
dec
aam
aad
rol
inc
insb
repnz
inc
jae
shll
mov
insb
inc
movsl
mov
pop
pop
or
fnstcw
push
outsb
mov
cmp
repz
lret
adc
sarl
inc
popf
imul
mov
dec
sbb
loopne
outsb
fcoml
out
sbb
call
out
aas
pop
inc
rclb
xchg
fs
lock
dec
push
divl
popl
adc
dec
test
jb
xor
dec
cmp
mov
and
cmpsb
mov
inc
ja
pushf
pop
xor
std
add
ljmp
addr16
mov
jbe
loopne
push
push
jne
push
inc
hlt
and
add
jb
inc
call
cli
adc
mov
clc
inc
sbb
xchg
sti
push
stc
rcrb
xor
fnstcw
mov
xchg
sub
adc
pop
cld
outsb
daa
push
ss
lret
dec
xchg
dec
lods
sub
sub
mov
mov
cwtl
mov
push
outsb
mov
mov
pusha
xchg
lods
fidivrs
mov
and
repnz
js
sbb
mov
notb
shll
and
lock
ja
icebp
push
push
and
scas
pop
fadds
or
out
imul
sbb
mov
xchg
push
and
fidivrs
pop
test
add
shll
repnz
cwtl
add
sarb
mov
sbb
jmp
sub
mov
push
enter
fs
push
dec
jl
push
mov
xchg
sub
jbe
xchg
test
adc
rcll
pop
flds
insb
jecxz
cld
push
scas
cmp
js
cld
cmp
sbb
dec
push
push
fistps
pushf
dec
xor
popf
cli
into
ds
mov
jl
dec
jae
movsb
sbbb
fcmovne
and
pop
pop
add
mov
ret
add
pop
and
pushf
fcoml
sub
dec
inc
sub
jno
push
sbb
lahf
mov
push
andl
dec
mov
scas
cmp
xor
lret
adc
cmp
mov
lods
ficoms
pop
movsb
mov
into
or
shlb
push
idivl
and
sub
cwtl
icebp
mov
rclb
mov
add
aad
add
mov
xor
and
xchg
inc
jg
out
push
jo
adc
and
jle
add
jg
cmp
dec
rol
jecxz
push
ret
adc
jns
fcoms
cmp
cwtl
sub
lret
movsl
into
popa
into
js
xlat
xchg
ret
call
mov
daa
pop
clc
loope
mov
sub
test
cmp
int
arpl
jmp
jecxz
mov
mov
sbb
push
arpl
and
push
push
sti
add
hlt
movsl
shr
int3
scas
mov
enter
imul
ret
xchg
xchg
ss
mov
cld
insl
xchg
dec
pop
cmc
insl
rcrb
jp
ljmp
sahf
cmpsl
pop
aad
loopne
cmp
jp
loopne
xchg
clc
int3
int3
dec
mov
les
outsb
and
dec
out
outsb
pop
adc
insl
cmp
add
jg
xchg
arpl
bound
mov
call
dec
imul
jns
mov
pop
lea
push
xor
mov
sarl
leave
mov
mov
xor
sbb
dec
jns
xlat
xor
aam
icebp
push
dec
and
adc
pop
inc
jge
stc
std
sub
lahf
mov
dec
test
repz
test
out
and
jbe
call
mov
adc
mov
sbb
mov
mov
mov
pop
jne
insb
cmp
fidivl
out
cld
mov
xchg
rol
insl
dec
xchg
clc
icebp
adc
xchg
sbb
cmpsl
xlat
add
pop
fs
fwait
jnp
loope
fxch
popa
xchg
dec
inc
js
in
roll
push
aad
xchg
mov
loop
cmp
adc
add
dec
fidivrl
dec
popf
sbb
add
or
pop
fidivl
ficoms
mov
lea
xchg
gs
sub
mov
push
and
pop
cs
not
jnp
push
repnz
loopne
cltd
out
add
pop
pop
pop
xchg
adc
xchg
push
or
add
fidivrs
popa
sti
out
idiv
cmp
aam
jbe
xor
mov
sub
movq
xor
sub
arpl
cmc
jmp
pop
nop
cmc
xor
jo
push
cmp
add
sbbl
in
stos
jno
xchg
mov
xchg
sbb
mov
jmp
and
sub
xchg
mov
les
iret
dec
arpl
jo
push
jo
inc
jecxz
jno
adc
mov
sahf
mov
cmp
cmc
mov
movb
adc
add
aaa
in
fnstsw
clc
dec
mov
sub
insb
in
jge
arpl
pop
lahf
fdivs
daa
imul
inc
jne
and
inc
and
push
test
mov
push
sub
push
or
sub
pop
or
push
xchg
fiadds
jl
mov
push
fistl
movsb
lahf
push
xchg
xchg
jl
out
es
lcall
les
jne
loopne
es
in
imul
add
int3
add
cwtl
in
xor
sub
std
push
jp
daa
xchg
push
stos
add
cld
mov
push
call
pop
xor
mov
call
subb
outsb
or
dec
push
push
jne
or
lret
xchg
cmp
push
mov
aaa
inc
ret
mov
arpl
std
add
popf
push
pop
inc
mov
sbb
lds
decl
loop
inc
in
loop
je
dec
sahf
add
arpl
inc
fisubl
push
sbb
ret
pop
outsb
sub
mov
es
ja
xor
jo
jle
add
jmp
outsb
pop
arpl
ret
fbld
fadds
mov
bound
repnz
or
jmp
inc
jecxz
insl
fs
loop,pt
popf
outsl
push
jno
inc
cmc
mov
daa
mov
das
dec
cmp
xchg
push
inc
lcall
repnz
push
test
jle
or
pop
inc
pop
fucomi
add
pop
iret
add
aam
xor
ss
test
mov
inc
les
ljmp
push
shlb
lods
add
lds
out
jmp
cli
jl
pop
push
pop
mov
movsl
mov
jns
inc
xchg
dec
mov
mov
inc
hlt
mov
sbb
jb
outsl
cmp
pop
or
cmp
outsl
loop
jmp
pop
arpl
xchg
test
and
sbb
insb
aas
sub
xchg
mov
mov
push
int3
and
data16
rdtsc
pop
cmp
leave
sbb
pushf
lcall
out
sbb
ljmp
push
rclb
out
xor
hlt
xchg
pusha
xchg
cmpsb
clc
lea
pop
xchg
add
movsl
ds
popa
std
sbb
pop
sahf
push
dec
push
inc
mov
fdivr
inc
inc
xor
cmpsb
in
push
cwtl
xchg
shrb
es
in
test
repz
push
subb
gs
push
and
and
stos
and
mov
mov
bound
and
aad
cmpsb
lods
mov
xor
sbbl
add
add
cld
cmp
cli
sub
fnstenv
fs
and
outsb
push
cwtl
fisttpll
push
std
mov
add
lods
and
cmp
mov
push
cwtl
iret
mov
and
out
mov
pop
jg
dec
mov
das
mov
or
lahf
xlat
inc
mov
push
call
cmpsb
scas
or
das
jmp
jp
lret
ja
lods
pushf
insb
bnd
test
mov
or
and
mov
mov
adc
sub
push
je
xchg
add
arpl
ret
mov
sarb
stos
lods
loopne
dec
jecxz
adc
push
movsl
jmp
mov
add
out
or
insb
jb
push
lahf
popf
mov
jae
flds
and
lahf
in
fcoms
adc
or
mov
les
insb
add
jae,pt
sub
adc
cmp
pop
mov
imul
std
pop
or
sbb
mov
test
dec
enter
mov
jae
nop
psraw
xchg
js
jg
push
add
jg
rcrl
nop
bound
sbbb
or
enter
jo
fmuls
lock
pop
dec
fs
scas
sbb
cltd
aas
push
aas
mov
popa
push
sub
inc
sahf
xchg
inc
xchg
out
and
inc
mov
xchg
shll
adc
mov
cmpb
ret
xor
jge
add
mov
mov
outsb
aam
divl
clc
xor
gs
push
xchg
nop
mov
xchg
jo
push
test
in
nop
ljmp
nop
mov
pop
adc
push
das
mov
jmp
mov
jge
scas
push
out
rclb
mov
out
inc
pushf
jecxz
lret
cmp
push
repnz
mov
xchg
fbstp
movsb
ds
push
sbb
arpl
mov
lahf
jbe
andb
icebp
stos
in
xchg
cmc
or
test
pop
daa
or
loop
in
adc
pop
jge
or
push
pop
js
test
into
jae
dec
and
dec
inc
les
adc
xchg
je
jo
jo
push
push
imulb
dec
mov
cmc
inc
inc
adc
lret
addr16
popf
arpl
movsb
popl
into
gs
sbb
fiaddl
push
and
sub
aas
sbb
push
xchg
sbb
ret
pop
jecxz
push
je
sbb
lods
fwait
jp
sbb
sbb
push
mov
aad
arpl
and
outsl
jl
xchg
push
and
scas
pop
jle
sbbl
jo
mov
xor
into
add
lock
push
fnsave
sahf
stos
scas
jmp
ja
cmpsb
and
mov
lcall
pop
inc
fucomp
and
dec
push
sub
mov
cmc
bound
out
mov
stos
jle
mov
repz
das
cmc
bound
dec
scas
or
imul
sbb
cmp
fxch
mov
enter
push
mov
fisubl
lds
pushf
jmp
fdivs
jb
outsl
or
pusha
sbb
jbe
add
xchg
jecxz
loopne
imul
cld
adc
sbb
loope
dec
daa
pushf
aad
sti
add
pop
inc
test
imul
xchg
mov
imul
jle
push
aaa
adc
and
xchg
jbe
fisubrs
movb
fistpl
mov
mov
loopne
pop
popf
sbb
cli
insl
mov
in
outsb
stos
sbb
add
fs
aad
mov
sub
push
aam
cmp
mov
push
pusha
xorb
cmpsl
dec
lret
cmp
inc
jno
loope
in
fcompl
sub
cmp
push
daa
xor
shrb
repnz
mov
and
stos
mov
inc
inc
nop
loope
aas
ds
ret
cli
out
out
orl
andb
or
loope
jge
lds
lds
pop
mov
addr16
inc
add
or
fdivp
iret
xor
push
jge
stc
mov
inc
shr
adc
daa
add
insl
out
add
dec
cli
mov
inc
pusha
cmovo
imul
andl
xor
movsl
sbb
lea
jbe
dec
cld
xchg
pusha
mov
sub
sbb
mov
xor
pop
mov
dec
das
xor
sbb
sbb
test
fcom
cmp
in
popf
mov
adc
and
add
mov
nop
imul
fmuls
pop
subl
inc
xchg
nop
mov
imul
test
xor
iret
lods
dec
pmullw
scas
lds
loopne
push
loopne
loopne
cmp
into
fwait
in
divl
mov
pop
jle
in
mov
xor
iret
stos
sbb
fcomps
sub
test
jne
add
in
mov
cmp
ret
inc
lcall
stos
or
sbb
xchg
jecxz
adc
js
dec
jle
pusha
push
aas
mov
decl
out
lretw
and
mov
add
jg
pop
xor
xor
cmp
cmp
jle
daa
mov
ljmp
dec
nop
xchg
repz
push
ljmp
inc
adc
add
mov
pushf
and
fistpll
sub
xchg
lds
cld
inc
mul
dec
sub
int
mov
xchg
jle
add
shrb
lahf
xchg
push
mov
fnsave
xchg
jnp
mov
and
mov
push
cmp
fnstenv
xchg
paddw
shl
jg
das
in
data16
mov
cs
mov
outsb
sbb
push
in
dec
ret
out
lret
lods
std
cmp
mov
adc
inc
jecxz
xor
nop
push
into
sahf
mov
mov
mov
push
mov
movsb
jge
ds
fldcw
loop
imul
les
pop
arpl
ss
sbb
outsl
mov
mov
mul
inc
dec
fucom
push
mov
cltd
inc
inc
sbb
movsb
or
mull
jbe
and
xlat
in
push
test
jmp
stos
les
out
jl
loop
fisttpll
int
cmpsl
andb
andb
xchg
xchg
outsl
jmp
sub
outsb
lods
out
xchg
push
rcr
inc
andl
mov
lret
popf
fwait
cmp
cmp
movsl
mov
jl
inc
or
testb
sbb
out
xchg
iret
adc
sti
mov
ds
roll
xchg
push
push
rcll
jle
sbb
movsb
adc
sub
sub
sub
aad
mov
pushf
or
call
test
rclb
aaa
in
ret
mov
movsb
hlt
fs
lds
notb
mov
dec
gs
inc
xchg
aaa
xorb
and
jle
out
xchg
mov
xchg
sbb
jecxz
insb
out
out
cwtl
in
add
adc
xchg
and
stc
mov
leave
pop
add
inc
cmpsl
pop
mov
fistpll
xacquire
cs
adcb
bound
fcomps
call
xchg
movl
inc
orl
jmp
aad
push
or
movsb
fnsave
pop
cmpsb
mov
adc
push
daa
test
fmull
mov
push
pushf
arpl
clc
adc
imul
mov
pop
inc
outsl
fnstsw
mov
popf
pop
mov
loopne
dec
ror
jae
imulb
mov
dec
adc
call
inc
cmpsl
call
cwtl
daa
sbb
mov
adc
xchg
xchg
xlat
adc
jb
movl
xchg
hlt
mov
push
pushl
aad
rcl
pop
popa
push
pushf
rol
push
mov
sub
inc
cli
push
push
and
mov
mov
jb
jne
xor
fistpll
mov
sbb
or
mov
xrelease
cmp
cmc
xchg
mov
inc
xchg
in
mov
jecxz
stos
rcrb
aad
or
je
jae
sub
mov
ret
pop
sbb
shrl
push
mov
je
into
sub
mov
gs
cli
shl
int3
mov
adc
daa
rcrb
std
xor
test
in
mov
negb
cmp
xchg
lods
pop
fnstenv
push
divb
scas
imul
fs
pop
cli
dec
inc
mov
jecxz
inc
loopne
ja
setl
leave
cmp
mov
insb
adc
imul
mov
cmp
imul
xor
dec
lea
pop
loop
stos
pop
inc
cmp
add
or
add
stos
pop
icebp
adc
xor
aam
hlt
sarb
clc
inc
add
dec
cmp
sbb
adc
inc
mov
loop
cmp
xchg
idiv
lods
int
xor
mov
call
nop
in
data16
jne
cmp
int3
call
test
out
shlb
adc
mov
mov
cwtl
negl
xchg
dec
xlat
loope
nop
mov
cld
sbbb
and
aad
in
test
mov
insb
xchg
inc
jmp
iret
aas
es
movsb
mov
add
movb
pop
lret
into
cmp
mov
push
dec
jge
or
cwtl
xor
sub
stos
fistpll
stos
icebp
rol
xor
add
jne
add
jecxz
in
dec
add
mov
adc
push
and
pop
dec
fdivrl
xor
xor
cmpsb
mov
push
push
mov
sbb
sub
lret
xor
xor
insb
mov
movsl
xor
in
push
int
sbb
int
xchg
aaa
loopne
inc
mov
out
push
loopne
push
push
and
fstpt
xchg
ficompl
push
in
add
fwait
cmp
jle
xor
out
movsb
and
inc
xlat
jne
das
sti
shrb
sbb
dec
add
mov
into
xor
movsb
jp
dec
dec
xor
pusha
aas
loopne
sbb
push
pop
adc
rorb
repz
add
ret
adc
pop
xor
test
lea
in
aas
push
xchg
fidivrl
xchg
mov
fstl
loop
cmp
sbb
movsl
cmc
loopne
sbb
stos
std
or
nop
adc
dec
std
idiv
loopne
dec
and
jae
jbe
push
insb
push
dec
cmp
arpl
inc
scas
push
in
jne
jp
int
neg
cltd
outsb
adc
cmpsl
insb
xchg
test
popa
fwait
add
cmp
test
int3
jecxz
inc
movsb
lods
mov
cmc
add
das
inc
inc
mov
outsb
div
pop
mov
inc
or
aas
insl
aaa
dec
imul
and
adc
dec
xchg
arpl
jnp
push
and
out
push
loop
push
inc
bound
popf
pop
dec
movsb
jp
inc
int3
stc
scas
mov
jp
aaa
or
xor
mov
popa
rorb
lods
ds
adc
cs
dec
js
push
lret
xchg
push
adc
mov
fldt
push
adc
adc
add
les
test
ror
inc
js
add
xor
jb
rcl
popa
shrb
shlb
test
enter
sub
adc
lds
cltd
and
mov
out
fwait
mov
pop
ss
mov
lret
mull
and
adc
incb
lcall
xchg
shll
shlb
inc
addr16
mov
inc
pop
mov
xchg
xor
mov
sub
popf
dec
fiadds
pop
imul
repz
inc
sbbl
add
lods
mov
mov
mov
outsb
cmp
fs
mov
lret
popa
sar
push
ja
out
mov
cmp
push
in
dec
sbb
stc
jle
test
pop
and
addr16
iret
mov
rcrl
add
push
fisttpll
data16
orb
cltd
in
inc
pop
cmpsb
cwtl
idivb
xor
lahf
add
cmp
scas
or
mov
jge
inc
fcmovnb
popa
daa
cmp
in
in
aad
sub
cli
jmp
aam
nop
xchg
sarb
jg
jmp
and
bound
fisttps
out
movsb
out
pop
adc
add
out
movsl
xor
xchg
ficomps
mov
cmp
xchg
dec
adc
mov
lock
sbb
aaa
adc
jo
mov
addb
mov
mov
push
inc
hlt
arpl
int
ret
pop
shr
pop
repz
jb
adc
jb
cmpl
jg
xlat
sarl
jns
mov
lea
in
pop
adc
hlt
sar
rol
ds
sub
int3
movsl
cltd
test
rorb
out
mov
mov
mov
iret
pop
xchg
repnz
popf
pop
pop
nop
mov
jmp
std
xor
jne
int
or
test
pop
rcrl
imul
push
cmp
ret
stc
mov
push
xchg
mov
add
mov
pop
inc
push
inc
push
daa
test
and
sub
dec
mov
jp
sub
xchg
pop
sub
enter
adc
fnstcw
inc
imul
nop
dec
xor
sub
mov
cltd
or
inc
mov
adc
jo
or
or
test
bound
enter
mov
sbb
adc
or
hlt
in
gs
mov
lahf
arpl
lret
ss
ret
lods
sbb
les
push
mov
push
xchg
sti
inc
test
push
sub
lds
hlt
cmp
pusha
inc
cwtl
out
mov
or
neg
lret
js
push
push
and
cli
push
imul
fldenv
fsubrs
fs
in
mov
mov
into
rcrb
les
add
and
pop
flds
xorb
push
mov
jmp
inc
pop
cmc
xchg
inc
shll
xchg
sub
dec
jae
and
pmovmskb
mov
cmp
jnp
shll
push
outsl
dec
push
fistl
push
sub
cltd
push
in
dec
xor
jb
jae
notb
inc
lret
sbb
cli
sbb
rorb
inc
xor
pushf
into
push
andb
adcb
xchg
and
sbb
cld
xchg
stos
add
mov
je
cltd
and
xor
sti
repz
push
insl
push
xor
adc
out
or
dec
pop
or
xor
inc
dec
push
mov
jno
sbb
dec
xchg
scas
data16
clc
lcall
adc
out
lea
insl
or
jp
in
pop
loop
lret
jbe
mov
jbe
inc
cmp
sub
mov
icebp
push
loop
inc
cmp
push
xchg
clc
repnz
ss
push
xor
push
add
int3
cltd
and
adc
fstpl
adc
dec
fildll
and
xchg
mov
inc
add
in
jl
cmp
loop
shlb
sbb
fistpl
test
test
sub
jg
push
enter
mov
pop
xor
jns
sbbl
aaa
aad
ror
in
cs
xchg
mov
nop
or
bnd
test
je
into
mov
jge
fdivr
dec
push
mov
testl
lret
loope
sub
or
and
or
inc
mov
mov
or
cmpsl
mov
into
shlb
aad
xchg
mov
sub
lods
nop
pusha
lock
movsb
mov
xor
outsb
lahf
movsb
fistl
jg
nop
in
sbb
out
out
test
adc
sarb
xchg
aas
pop
sub
add
xor
fcomp
cs
mov
out
pop
mov
push
fcmove
mov
outsl
int
sbb
fisttpll
shl
pop
ds
sbb
lods
pop
das
cmp
jne
jno
cmp
sbb
addr16
jge
std
inc
arpl
fsubl
add
movswl
call
sub
push
jmp
nop
ret
xchg
pushf
add
cwtl
and
inc
sub
push
pusha
or
aad
adc
test
sahf
mov
dec
imul
jge
xor
daa
pop
xorl
jbe
ljmp
mov
ffree
push
dec
dec
sbb
and
stc
dec
pop
push
ljmp
dec
test
lret
mov
leave
add
fs
sahf
test
mov
jnp
shlb
add
and
mov
aad
js
sbbb
popa
out
cwtl
data16
or
testb
xlat
lds
movsl
push
pushf
sbb
push
sbb
gs
add
push
jno
cld
outsl
pushf
iret
popa
dec
or
and
add
sub
push
and
fwait
jle
mov
lahf
aaa
adc
inc
pop
pop
inc
inc
push
scas
and
scas
dec
add
into
jl
jns
jp
pop
popa
sbb
cmp
adc
scas
sub
mov
push
out
or
arpl
xor
sub
test
dec
leave
insl
repnz
pop
hlt
pop
repz
leave
icebp
aad
jge
jbe
rorl
in
popa
bound
mov
gs
mov
cmp
shll
and
rorl
int
pop
sti
add
inc
push
push
dec
sub
add
push
daa
stos
and
mov
push
fucomp
nop
jp
or
pop
sbbb
imul
out
pushw
push
ficoms
push
jle
sarl
dec
data16
rcl
mov
xor
clc
sbbb
xchg
and
push
cwtl
clc
mov
fwait
popl
ds
or
mov
fildl
addl
sbb
cwtl
mov
aas
or
jmp
imul
loop
xor
aaa
mov
inc
popf
cs
jge
popf
mov
fbld
xchg
test
aaa
xor
ret
or
xchg
dec
test
sub
xor
popf
jns
mov
aaa
sub
adc
jbe
inc
call
out
stc
jmp
mov
adc
fwait
sqrtps
push
xchg
fs
cmp
loope
cmp
adc
cmp
mov
shll
or
ficoms
outsb
neg
cmpsb
sahf
fsubrp
je
xorl
mov
and
and
mov
jp
mov
xor
cmp
mov
jb
jae
lods
and
inc
scas
out
push
push
add
lret
cmp
fsubs
cltd
fildll
push
scas
lds
sub
ljmp
dec
mov
int3
dec
jno
ss
into
mov
xor
addr16
insb
push
push
movsl
inc
repnz
push
cli
xchg
mov
sub
out
fiaddl
cmpl
dec
test
mov
dec
xor
sub
cmp
dec
add
repz
test
jb
insl
das
push
cmc
sub
pop
rolb
test
pop
lods
push
bound
outsb
insl
dec
sub
pushf
outsb
mov
mov
pop
cmp
sbb
dec
call
sub
lock
out
inc
dec
pop
popl
ffree
repz
xor
mov
inc
je
adc
and
adc
push
sub
pop
ret
lods
adc
stc
mov
lret
xor
mov
fnsave
add
aam
test
xchg
orl
adc
nop
sbb
mov
dec
enter
test
sub
mov
and
pop
movsb
jp
xor
popa
jb
ret
lret
inc
pop
jns
or
mov
xchg
outsb
pop
fimuls
inc
or
int3
in
pop
outsb
adc
sub
imul
cwtl
mov
test
push
out
sbb
cmp
repz
inc
push
sbb
cltd
rcl
xor
lahf
mov
popf
in
cmp
test
inc
cmp
jnp
cmp
test
in
fisttpll
sahf
push
pushf
add
and
scas
sbb
fdiv
lock
cwtl
dec
scas
cs
lea
cld
cmp
ss
cmpsl
mov
xchg
mov
in
pushl
outsb
add
pop
dec
stc
inc
mov
cwtl
lahf
cmp
aaa
sub
fstpt
mov
aam
xchg
stos
cmp
pop
add
lea
fdivr
and
xor
rorl
cmp
mov
sahf
shlb
cmp
jmp
test
push
sub
andb
pop
popa
adcb
repnz
xchg
daa
jno
lock
add
cwtl
push
ds
mov
cmp
jo
fsubs
adc
dec
cmpsl
into
mov
ss
and
cmp
outsl
adc
lret
in
mov
pop
xlat
lock
aad
push
xor
push
sub
dec
jne
mov
lods
ret
push
loop
inc
xor
lahf
das
mov
cmpl
push
jl
mov
jmp
inc
mov
and
hlt
lahf
iret
nop
or
pop
scas
in
mov
popa
mov
hlt
sbb
xchg
rcrl
in
push
dec
inc
sub
cwtl
mov
fucompp
das
shll
pop
cmp
cmp
leave
popf
negl
jae
test
mov
cmpl
add
xchg
xchg
inc
fdivrl
push
inc
push
or
push
push
jg
ljmp
ficompl
cmpsl
cld
cmp
insl
ja
mov
sti
lock
orb
insl
or
cmp
call
jg
sbb
mov
sbb
shrb
sub
imul
hlt
lret
mov
test
push
add
cmc
xchg
sbb
clc
dec
mov
push
sub
gs
sbb
out
repz
sarl
aam
hlt
sub
mov
pushf
xor
push
lahf
xor
les
ljmp
add
jnp
lea
and
aad
push
inc
cmp
rorb
js
int
lret
push
push
js
xchg
rcrl
sahf
stc
sub
lret
int3
inc
dec
cmpsl
push
mov
pushf
mov
std
mov
xor
xor
test
mov
cmp
clc
js
add
push
sbb
dec
fdivl
ficoml
mov
cmp
jo
xchg
dec
inc
fwait
and
lock
push
les
and
mov
and
into
mov
in
add
fldenv
mov
loopne
mov
pop
or
or
adc
or
fwait
sbb
fadds
fistpl
add
xchg
inc
es
std
dec
cmp
stos
popf
andl
or
ss
aas
pop
in
push
cmp
dec
and
jae
fstpl
shrl
jmp
loope
add
popf
dec
add
rolb
mov
pusha
test
mov
inc
adc
cmc
je
and
cmpsl
insl
idivl
cmpb
and
lret
add
gs
xchg
cmp
adc
aas
sub
mov
sbb
and
push
push
hlt
dec
cltd
outsb
repz
shll
lods
ja
push
sbbb
push
mov
mov
xchg
mov
sbb
jmp
pop
loopne
cmp
repz
cmp
push
fsubr
and
cmp
fidivs
push
and
aaa
hlt
add
sub
push
pop
sbb
ss
popf
daa
mov
and
repnz
hlt
mov
jge
or
out
ret
insl
mov
loopne
sbb
jmp
out
mov
shr
sahf
sub
xor
test
leave
fsubl
inc
and
ds
jne
or
push
rcl
call
pop
push
dec
or
push
xchg
out
lods
cmp
fnstenv
lret
stos
adc
xor
push
xchg
fcmovnbe
jge
rcrb
rorl
xor
pusha
fsubrs
xchg
push
shl
les
mov
and
stos
movl
das
xor
sti
cmc
push
shrl
cmpsb
push
and
and
or
js
outsl
lahf
sbb
mov
pop
push
fildl
pop
push
ljmp
dec
sbb
cmp
or
cld
filds
lret
jns
leave
cmpsb
xlat
les
enter
jb
loopne
jle
fmulp
fstl
cltd
xchg
dec
loop
dec
daa
sbb
js
jge
lret
push
lock
jb
fwait
pushf
pop
cs
ret
mov
mov
pushf
dec
jnp
sub
lahf
and
aad
cmpsb
cmp
or
push
push
jo
lea
sub
pop
mov
mov
cmc
inc
andb
imul
outsb
bound
lcall
mov
mov
cmp
mov
mov
pop
dec
or
sbb
inc
movsl
rep
out
ss
dec
pop
xor
or
push
fcomps
xchg
enter
aad
subl
mov
negb
mov
test
fdivrl
dec
negl
addb
xchg
sbb
fldcw
aas
inc
xchg
repnz
xchg
xchg
cmpsl
or
jecxz
shl
add
out
loopne
inc
ret
jp
addr16
lods
xor
jecxz
fsubrl
add
test
addr16
jg
jbe
pusha
dec
in
cmp
fsubs
mov
jo
cmpsl
inc
xchg
mov
sub
add
aad
mov
ret
dec
loope
dec
adc
fldenv
push
pop
ss
cmp
sbb
rcll
out
mov
out
cs
pop
sub
xchg
fcomps
or
mov
aam
fdivrs
shll
imul
addr16
fsub
clc
das
je
cmpb
add
xor
push
jge
mov
xchg
lods
stos
inc
pop
movsl
fucomi
fbld
mov
fs
test
and
imul
lods
inc
mov
cwtl
mov
xchg
jge
lret
imul
ror
imul
mov
xor
adc
cmpb
pop
pop
adc
adc
jb
leave
sbb
int3
sbb
mov
cmp
outsb
and
pop
icebp
or
daa
jmp
test
hlt
pop
mov
sub
or
cltd
pop
jne
jb
xchg
ret
ret
daa
dec
repnz
andl
ds
dec
dec
mov
dec
or
pop
aaa
jne
arpl
enter
xor
cltd
arpl
stos
in
mov
xor
stos
mov
cmp
out
xlat
in
adc
and
stc
inc
cmc
roll
ficoms
push
cmpsb
loope
leave
clc
sbbl
inc
fldenv
xor
aaa
je
and
loopne
sarb
xlat
into
xorb
adc
sbb
fstps
int3
arpl
jae
sarb
lods
cmpsl
imul
inc
dec
mov
mov
imul
loope
and
xor
mov
xor
push
cmpsl
nop
mov
fwait
and
xchg
xor
sbb
xchg
call
sbb
mov
fcomps
mov
mov
shrb
loopne
std
fistl
jp
mov
lds
dec
sbb
pop
or
or
sahf
mov
cmp
push
add
cs
testl
scas
mov
sbb
fstpt
cmp
jl
ljmp
sti
push
jmp
mov
jecxz
clc
out
shlb
ffree
fsubs
pop
cmp
xchg
test
xor
or
pop
aaa
and
pop
int
xchg
decl
sbb
lcall
jnp
add
jb
xchg
sahf
mov
add
mov
ret
testb
into
jecxz
jl
push
cli
mov
int3
sahf
mov
lods
sbb
lea
jo
adc
movsb
sbb
popa
xor
mov
fs
xor
arpl
mov
and
in
lret
mov
bound
mov
sbb
sub
mov
mov
testb
ljmp
insb
sbb
imul
ja
push
or
nop
fildl
pop
loop
ja
push
pop
bound
out
mov
inc
sub
jmp
xchg
stos
jb
js
fdivrp
and
or
jg
ret
and
roll
xchg
iret
popf
dec
pop
push
mov
mov
add
push
cld
imul
mov
dec
inc
ret
hlt
addr16
std
or
arpl
ds
inc
lret
loope
xchg
inc
pop
sub
cmp
movsl
mov
leave
jmp
or
out
and
jg
sbb
sub
mov
mov
mov
xchg
pop
dec
push
push
rcl
xor
sub
dec
pusha
and
push
aaa
in
outsb
sub
aad
push
pusha
xor
fcomps
push
dec
push
jae
adc
mov
das
jmp
repz
xor
ret
xchg
into
orb
addr16
aad
js
jg
push
dec
adcb
cmp
pop
jo
mov
or
test
cltd
sbb
idivl
fimull
sbb
stos
mov
test
mov
jbe
push
push
cltd
push
mov
cmp
movsb
loopne
mov
xchg
fisubrl
and
loopne
adc
in
sub
and
subb
cmpsl
ja
popf
xchg
outsl
stos
popf
pusha
fidivl
xchg
cmpsl
addl
mov
lcall
aaa
int3
cld
daa
shll
rcl
es
mov
mov
mov
and
mov
stos
and
xchg
pop
fisubrs
dec
xor
pop
test
push
data16
insl
xchg
fisubl
push
dec
cmc
hlt
xor
fisubrl
ret
cmp
mov
cmp
dec
insb
in
lahf
test
pop
fsubp
stos
push
ror
repz
jle
lods
mov
pop
sub
dec
push
out
inc
pop
or
jo
stos
adc
sahf
dec
xor
mov
mov
call
inc
jecxz
iret
jp
scas
mov
mov
mov
and
pop
sbb
into
jbe
mov
or
cmp
push
fnsave
inc
jae
mov
xor
dec
int
adc
mov
cmc
push
aam
or
icebp
dec
sbb
xchg
addr16
mov
xchg
out
leave
stc
xlat
and
inc
inc
xor
inc
xor
in
fcmovu
fildll
dec
ret
clc
mov
cmp
repnz
mov
xor
xchg
sub
sub
jne
dec
loopne
pop
lret
gs
inc
cmp
push
arpl
adc
inc
imul
sub
xchg
lds
inc
lock
bnd
arpl
stos
sub
fstps
insb
sub
fstps
cmpsb
dec
ficoml
lahf
pop
cmpsb
sub
jnp
ljmp
mov
pop
cmp
popf
das
pop
sub
pop
mov
push
jbe
sbb
xchg
mov
ljmp
mov
aas
pop
stos
pop
les
arpl
sbb
and
dec
push
mov
stos
add
and
pop
and
int3
xor
out
mov
rcrb
lcall
jp
mov
mov
fbstp
jne
and
in
or
push
cli
inc
xor
leave
aam
push
mov
sti
inc
cmp
faddl
mov
and
xor
pusha
jecxz
sarb
movsl
xor
stos
cmpl
xchg
imul
out
test
jno
mov
pop
mov
pop
xor
inc
cmp
into
xchg
imul
test
dec
jl
mov
xor
hlt
xchg
xchg
adc
js
mov
outsl
dec
xorl
mov
loopne
dec
outsl
leave
push
adc
jmp
imull
inc
into
add
fldz
daa
jo
mov
mov
mov
cmpsb
in
cmpb
xchg
imul
and
inc
stc
jp
xlat
push
daa
mov
or
push
mov
mov
iret
jne
push
lods
negl
mov
jb
in
mov
jle
push
lahf
xchg
xor
test
test
rorl
mov
mov
push
lret
es
ja
aam
mov
cmc
outsb
les
dec
inc
mov
rol
scas
pop
push
dec
pop
cmp
popf
mov
loopne
mov
jecxz
lea
jl
out
cmpb
jbe
mov
test
and
sub
xchg
scas
cmp
jbe
sbb
in
jo
or
data16
pusha
mov
sti
es
test
adc
je
nop
push
push
push
push
or
negl
mov
clc
cmpsb
mov
jns
fwait
or
insb
addr16
mov
mov
pop
pusha
mulb
jle
rol
fs
cmp
inc
stos
cmp
and
fsubs
xor
inc
repz
mov
adc
mov
sub
adcb
push
inc
mov
loopne
stos
add
fsubp
icebp
nop
movsl
mov
mov
mov
es
scas
jb
pushf
movsb
mov
and
movsb
mov
cs
aam
test
push
aad
jns
jecxz
cwtl
das
ljmp
icebp
loope
adc
inc
sbb
and
and
loop
or
decl
movsl
dec
jns
js
leave
sub
adc
or
cwtl
sbb
popf
xor
mov
sbb
popf
in
pop
repz
sbb
fdiv
xor
sahf
sub
pop
fmuls
lret
out
mov
xchg
jl
les
fmuls
imul
js
outsb
and
xchg
icebp
stc
lods
mov
sbb
push
in
push
mul
fwait
or
add
jle
ret
dec
add
ret
call
or
xchg
lret
mov
sub
adc
mov
sahf
hlt
rcrb
pop
sub
daa
sub
jle
call
in
call
scas
bound
xchg
cwtl
pop
mov
adc
mov
jg
mov
add
mov
push
sbb
stc
mulb
ljmp
js
imulb
sbb
jno
pop
dec
dec
adc
movsl
mov
dec
les
xor
mov
jg
jns
mov
push
jbe
xchg
adc
mov
push
mov
cli
out
and
enter
cltd
dec
lahf
jecxz
inc
pop
xchg
sbb
xlat
inc
and
aad
add
je
aas
call
fmuls
sub
lods
aad
cmp
lea
mov
aam
ja
mov
les
inc
std
and
rolb
ja
sbb
stc
js
push
aad
mov
mov
push
push
ret
push
call
mov
mov
pushf
mov
pop
lahf
push
ss
and
das
inc
ds
cli
mov
or
ja
data16
mov
sbb
orl
inc
test
repz
push
rcl
mov
stc
sahf
daa
das
scas
loop
and
cmp
cmpsl
sbb
enter
sbb
inc
sub
aaa
dec
cmp
sbb
and
adc
push
add
adc
outsl
test
xor
push
jne
fiaddl
dec
out
lods
xchg
dec
sub
js
or
mov
cli
add
dec
or
sti
lock
aas
jl
fmuls
inc
lods
cwtl
adc
test
daa
jae
sarb
jecxz
push
test
xchg
jmp
pop
add
push
fs
lock
imul
and
adc
ret
stos
inc
xchg
xor
ss
xor
mov
jns
sbb
stos
cmpb
or
jecxz
notb
icebp
rcll
sti
sub
addr16
out
sbb
iret
lret
ljmp
addr16
mov
fildll
loopne
pushf
push
popa
dec
add
mov
jg
xchg
in
mov
mov
pop
icebp
push
repnz
jo
loop
popf
jge
xchg
jg
mov
popf
out
rorb
push
sub
push
xchg
lds
out
hlt
xor
int
adc
xchg
out
insl
and
sar
sub
lahf
outsb
or
xchg
fildl
out
add
out
pop
out
jnp
jo
or
jg
or
jne
xchg
add
scas
movl
in
test
push
jne
loop
in
cmp
mov
mov
insl
andl
rcl
bound
jbe
outsb
cmpsl
lds
xchg
cmpsb
pop
mull
les
xchg
out
cmp
popa
je
iret
fisubrl
pop
fidivrs
insl
mov
mov
outsb
fxtract
int3
bound
loop
js
neg
clc
sti
xor
push
mov
mov
or
xchg
scas
xchg
adc
xchg
repz
fcompl
mov
xchg
jnp
or
sub
into
scas
andl
pop
jle
in
out
adc
insl
icebp
negb
inc
lods
jb
addb
outsb
rorb
data16
xchg
cmp
mov
ss
loopne
mov
xor
mov
sti
mov
ds
out
addr16
jp
mov
dec
jp
mov
icebp
mov
popf
nop
add
in
push
inc
mov
cwtl
mov
and
int
aas
inc
fbld
sbb
adc
add
cwtl
loopne
and
push
xchg
call
adc
sub
push
in
mov
cmpsl
cmp
js,pt
mov
push
jmp
js
mov
adc
fbstp
faddl
je
int3
in
in
addb
push
mov
inc
mov
push
ret
jl
fisubl
cmp
push
jl
and
inc
repz
cmp
in
pushf
mov
fs
ror
test
rcl
pop
sbb
not
push
jg
mov
mov
pushf
cwtl
test
mov
mov
mov
cmc
mov
mov
ja
call
mov
or
fistpl
inc
in
test
sahf
ficomps
cmc
std
call
rol
lds
add
lret
jbe
push
push
cs
sbb
jo
push
out
mov
xlat
adc
pop
dec
sarl
dec
in
cli
out
mov
inc
bound
inc
dec
stos
les
cmp
inc
adc
jge
test
cld
cwtl
in
insb
sub
andb
imul
xchg
ljmp
push
test
xor
mov
in
movsb
pop
xchg
xor
sbb
js
fsubs
imul
cmpb
int
outsb
lock
add
jnp
popa
cmp
and
pop
dec
xor
leave
pop
sti
dec
cmc
out
pop
call
xchg
ja
out
hlt
lods
mov
leave
lret
mov
xchg
and
and
sbb
shrl
stc
sub
lret
aam
jge
ret
out
fwait
aas
decl
fldcw
fdivl
and
roll
pop
ss
cli
test
push
lods
push
into
jg
sbb
xor
cwtl
in
out
mov
testl
repz
call
test
cld
adc
lahf
hlt
inc
pushf
or
xor
push
ret
xor
rol
call
push
rolb
pop
fimuls
cltd
cwtl
lock
fsts
mov
into
push
mov
test
lahf
fsubrl
sub
stc
push
sti
cmp
jmp
xchg
std
and
or
popa
cmp
jb
mov
adc
daa
xor
stos
or
and
push
adc
rclb
push
sub
inc
push
data16
mov
mov
cltd
das
insl
inc
movsb
cmp
xchg
imul
cmp
test
mov
aad
sbb
mov
lret
imul
sbb
dec
aas
into
xor
add
sahf
mov
imul
sarl
in
jnp
mov
mov
lahf
push
pop
mov
jge
lds
mov
fstps
pop
sbb
loopne
bound
stos
dec
pusha
rclb
mov
mov
dec
out
arpl
jns
ja
pushf
dec
push
adcb
inc
jmp
jg
jg
xchg
sub
pop
xor
dec
lods
mov
or
mov
jo
fwait
dec
jp
test
adc
outsl
sahf
bound
and
dec
mov
in
or
sub
sub
jno
cmc
mov
add
rorb
sub
imul
mov
ds
ljmp
adc
and
sbb
xor
pop
jno
int3
loop
insl
inc
sbb
mov
and
cmp
adc
or
mov
lret
cmpl
std
adc
sub
jbe
inc
push
jno
clc
xlat
cwtl
test
sub
hlt
jp
xor
jo
sbb
in
xor
das
mov
fucompp
mov
add
jle
xchg
outsl
dec
fidivrs
mov
inc
add
popf
out
imull
jecxz
mov
jl
fdivr
mov
inc
mov
repnz
add
movl
push
shlb
loope
push
xchg
adc
lsl
aaa
mov
mov
in
popf
push
jns
dec
mov
xchg
mov
imull
xor
adc
lock
pcmpeqw
repz
or
push
add
jge
mov
inc
mov
mov
mov
fsts
sbb
sti
test
in
mov
sti
and
xor
mov
cmp
cwtl
jle
or
push
pusha
int3
cmpsl
mov
fsubp
in
imul
push
js
pop
je
and
lods
jo
mov
mov
mov
in
iret
and
mov
les
sbb
adc
leave
jbe
jecxz
mov
ret
mov
and
stos
fstl
and
inc
mov
mov
sbb
ja
ja
ljmp
xorb
jl
or
shlb
inc
mov
subl
push
loope
in
bound
cmp
in
cmpsl
je
mov
push
jg
jo
fidivrl
xchg
gs
xchg
ret
cmp
fdecstp
lcall
pop
lret
cmp
mov
shlb
fs
sahf
add
pop
popa
xchg
push
clc
lahf
add
loopne
cmp
rorl
jb
sub
hlt
aas
jmp
pusha
inc
dec
xchg
xchg
int
movsb
inc
push
repnz
push
cltd
sbb
sbb
mov
lods
pop
rcrb
mov
sar
push
loope
push
adc
fistpl
jg
mov
dec
incb
int
push
insl
mov
out
icebp
cmp
add
js
cmp
cmp
insb
ljmp
add
jno
rcr
jecxz
mov
dec
sbb
push
mov
adc
pop
mov
or
mov
ret
adc
jbe
xchg
loopne
xchg
sahf
push
mov
pop
pushf
sbb
jmp
lods
cmp
in
jecxz
mov
lods
pop
notb
shl
aad
add
add
fstp
ss
lcall
bound
mov
shrl
jno
dec
pop
cmp
in
push
push
rolb
jmp
out
call
push
pop
mov
adc
in
xchg
xchg
aam
or
and
rol
inc
in
insb
jns
shr
xor
loop
stc
cmp
into
push
jl
xor
adc
fidivrl
loope
lds
test
shlb
fdivrl
mov
scas
sub
shlb
pusha
bound
jle
and
cmp
lods
je
subb
add
mov
icebp
jnp
fdivr
lods
ss
mov
arpl
xchg
loopne
cmpb
jmp
mov
xorb
sbb
jecxz
addr16
loop
jecxz
std
repz
jmp
mov
add
mov
lcall
lock
shll
and
adc
shll
lret
cmpsl
mov
lods
dec
shlw
jo
jge
mov
subb
mov
add
cwtl
pop
pop
cmp
and
mov
pop
pop
je
add
roll
mov
fistpl
or
xchg
sbb
iret
sbb
fdivrs
nop
pop
sub
test
or
mov
jno
and
rorl
test
mov
and
xlat
mov
pop
imul
cmc
jae
ja
pop
cli
xor
fld
pop
dec
mov
sbb
adc
inc
mov
gs
test
rcrl
mov
addr16
dec
sub
mov
les
insl
divl
cmpsl
ss
dec
outsl
rclb
add
hlt
add
ret
les
pop
jge
add
sbbb
sbb
mov
leave
adc
cmpl
jg
loop
stc
sub
push
cmp
or
hlt
lea
jbe
enter
xchg
testl
sbb
xchg
pop
push
into
jo
pop
and
dec
jnp
inc
or
cld
jae
inc
xchg
imulb
fidivl
or
roll
mov
scas
arpl
arpl
pushf
add
pop
ds
ja
add
ret
cmpsl
lcall
and
in
test
movsb
xor
jns
and
cmp
lods
cli
outsb
movsb
xchg
mov
imul
xchg
scas
mov
mov
mov
cmp
lcall
mov
loopne
jmp
sub
add
or
mov
and
xchg
inc
sbb
sahf
out
xor
in
subb
xchg
test
dec
and
outsl
xor
jecxz
xor
hlt
inc
mov
rorl
mov
mov
push
or
jns
data16
mov
mov
add
pop
in
xchg
pop
cmp
leave
push
cmp
mov
lret
jmp
imul
jbe
xorl
and
lea
and
fimuls
add
cmp
daa
pop
add
xchg
ljmp
and
loopne
mov
sbb
xchg
and
xchg
push
push
popf
dec
imul
je
push
mov
std
rcll
dec
fsubrs
outsb
add
or
or
and
cs
bound
sbb
stos
pop
sbb
aaa
int
pop
mov
out
test
arpl
je
es
sbb
lret
cltd
add
push
or
xchg
dec
xchg
fdivrl
pop
xchg
hlt
insb
jbe
or
jmp
mov
jno
inc
and
pop
push
pop
aad
cmc
mov
or
sbb
popa
dec
ljmp
add
jnp
add
cwtl
repnz
mov
notb
mov
icebp
and
std
lret
jne
test
add
gs
xlat
sub
arpl
aas
push
push
in
aam
stc
sbb
add
adc
js
cmp
test
inc
shlb
stc
pop
cltd
pop
popf
jge
xchg
mov
push
sub
cmc
dec
inc
sbb
insb
imul
and
dec
sbb
fists
sbb
cmp
jns
rcrl
mov
and
push
fldcw
cltd
lea
mov
imulb
pop
lret
inc
xor
push
fisttpl
pop
and
iret
mov
jg
imul
hlt
je
sub
and
mov
sti
fs
mov
jmp
clc
push
out
cmp
mov
cmc
fldenv
mov
inc
mov
push
insb
test
mov
xchg
add
mov
cmp
mov
loop
mov
sti
and
pop
pushf
mov
call
repnz
jo
lcall
cmp
subl
dec
jg
or
mov
pop
rol
lods
cmp
xlat
lret
insl
ss
inc
pop
scas
loop
sbb
cmp
xchg
xchg
adc
mov
je
push
pop
fnstsw
testl
fstp
jl
sub
fidivl
clc
cmp
mov
add
insb
es
jp
or
lahf
jnp
jp
iret
je
std
ss
out
xor
or
fcomi
mov
gs
dec
adc
mov
xor
cmp
xor
cmc
mov
xor
pop
lds
jns
sti
jmp
jg
push
inc
lea
jbe
jl
inc
jns
pusha
cld
dec
in
or
in
mov
addr16
iret
lea
stos
mov
adcl
nop
dec
loope
aam
mov
sbbb
sub
sub
inc
scas
test
hlt
rcl
sahf
jno
icebp
aas
mov
jno
aam
mov
pushf
xchg
std
std
in
lods
mov
and
imul
mov
adc
push
sub
push
cmp
mov
lcall
or
jle
inc
mov
stos
scas
add
es
mov
fnstenv
cmp
fbstp
cmp
aad
fwait
ret
mov
gs
icebp
dec
enter
movsl
and
or
xor
scas
xchg
mov
shlb
cwtl
in
adc
xchg
orl
enter
aaa
xor
sub
aas
iret
pop
and
fdivrl
lods
and
dec
add
mov
jo
cmp
mov
xor
cmp
inc
pop
mov
mov
lahf
push
es
fwait
inc
xlat
daa
pop
gs
mov
cmp
sub
imulb
and
mov
cmp
sub
js
into
in
mov
dec
sbb
ret
cmp
jbe
rcrb
jl
shr
rcrb
mov
push
jecxz
repz
xor
sub
add
dec
scas
fstl
dec
push
aas
xor
mov
cmc
mov
or
sub
ljmp
xchg
xor
inc
stos
cli
pop
testb
or
loopne
and
insl
inc
mov
inc
jae
or
xchg
xor
push
call
scas
xor
jecxz
data16
cwtl
in
in
dec
mov
adc
pusha
test
xor
inc
filds
pop
and
sbb
popf
jl
subl
aas
ja
jae
js
jb
mov
jno
sarl
jns
outsb
or
mov
dec
or
sbb
mov
add
xchg
sti
cmp
mov
pop
mov
pop
mov
pop
sub
dec
mov
cmpsl
fisubrl
lret
jns
call
and
loope
mov
sbb
mov
fildll
mov
jne
xchg
jg
ret
push
xlat
nop
daa
sbb
jns
icebp
and
cmp
xor
sbb
out
cmp
into
rcr
mov
sub
lock
cmpsb
fwait
push
jbe
popa
mov
mov
cwtl
mov
xchg
scas
sub
inc
sbb
push
xor
aas
out
push
mov
ds
sahf
scas
or
popf
aad
sbb
xchg
mov
divb
aaa
repz
sbb
add
rorl
loop
dec
lea
addb
mov
fistpl
lods
stos
fildl
jae
in
adc
stos
mov
push
push
dec
inc
or
int3
scas
or
fistpll
push
mov
add
int3
sub
pop
jo
sbb
cmp
cmpsb
mov
call
imul
sub
icebp
js
fimuls
andl
test
in
pop
outsb
jle
lahf
xchg
cmp
adc
sub
push
shr
shl
ret
iret
sbb
adc
mov
jl
addb
xchg
fisubrl
dec
dec
mov
jg
rclb
retw
and
mov
data16
scas
dec
sbb
fld1
mov
ja
ljmp
sub
lcall
lods
sub
testl
adc
mov
sbb
xor
pop
lret
jge
or
mov
jnp
insb
xor
and
sub
nop
lret
push
outsl
sbb
inc
cmp
fimull
adcb
stc
push
les
sbb
push
in
sub
or
stc
pop
push
imul
pop
cmp
rolb
std
xor
pop
adcl
aas
mov
jbe
inc
mov
std
inc
insl
pop
fs
int3
mov
scas
lea
divb
mov
push
push
mov
push
inc
dec
mov
xlat
je
popa
dec
push
imul
pop
add
lock
loope
cltd
pop
out
mov
push
jo
mov
cmp
sub
xchg
sbb
repz
cmp
ja
xchg
sub
gs
cmp
mov
mov
cli
inc
leave
fists
dec
insb
mov
aaa
shll
push
push
fldt
frstor
ljmp
mov
jne
mov
cs
in
fldcw
sarl
addr16
sbb
pop
fldenv
das
push
add
adc
jge
xchg
in
punpckhbw
aam
pop
hlt
outsb
nop
mov
and
and
popf
jmp
fildl
mov
sbb
jecxz
sub
iret
or
push
ja
jo
mov
clc
mov
mov
push
jb
jae
adc
cmp
pop
cmp
fcomi
mov
loopne
fsubs
and
into
shll
pop
loope
repnz
adc
xchg
mov
inc
push
pop
dec
call
inc
or
dec
push
test
sub
adc
adc
cmpb
cmpsl
sbb
rolb
je
mov
lock
push
stos
test
je
push
mov
sahf
mov
and
mov
mov
xchg
pop
out
stc
pop
or
rorb
pop
lock
push
iret
addb
or
push
mov
inc
es
or
jmp
sbb
test
scas
repnz
das
mov
nop
dec
js
cmpb
and
sbbl
pop
movsl
lods
icebp
stc
mov
sahf
loopne
cmp
mov
lds
pop
xchg
mov
stos
fcomps
push
ret
subb
pop
enter
xchg
int3
or
push
scas
loopne
sbb
fmuls
or
in
pusha
xchg
dec
add
repz
push
mov
and
and
sbb
loopne
sbb
pop
and
or
test
inc
or
sarb
repnz
cmp
xor
dec
xchg
add
aad
inc
jl
adc
or
add
movsb
repz
addr16
and
loopne
iret
scas
into
lcall
xchg
dec
inc
jbe
in
lret
sbb
movsb
loop
iret
inc
sbb
pop
pop
fsubs
jmp
sarb
pop
mov
in
pop
in
xchg
dec
fdivp
lock
repnz
adc
sbb
add
mov
mov
adc
icebp
sub
fimuls
scas
mov
fsubp
xchg
rorb
mov
push
cld
aad
mov
insl
enter
push
pusha
icebp
pop
sbb
or
or
addr16
and
or
sub
push
aas
dec
mov
fwait
inc
cmp
aam
cmp
pop
jae
ds
rclb
cmc
jge
ficoms
push
xor
fists
iret
mov
ficoml
gs
mov
jae
aaa
lds
push
cmc
inc
sub
xchg
jmp
xchg
mov
and
nop
ret
pop
enter
sti
sub
aad
lds
ja
dec
mov
mov
pushf
daa
repz
xchg
mov
hlt
push
stos
leave
sub
xor
pop
or
fwait
mov
sbb
shl
xchg
inc
andl
in
dec
adc
les
lea
xchg
sub
sbb
push
jge
imul
outsb
movsl
inc
loopne
xlat
add
jo
push
or
out
jb
insb
dec
push
xor
and
mov
inc
mov
mov
sahf
sbb
subl
lret
mov
sti
cmpsl
pop
call
lret
mov
inc
jge
xorb
daa
inc
cmc
pop
sbb
cmpsb
pop
or
hlt
fmuls
shll
pop
push
ljmp
cmpsl
mov
loopne
xor
in
xchg
stc
push
xor
cmp
adc
xchg
xor
movsb
or
jb
mov
xchg
inc
cmc
push
push
daa
sahf
stos
and
or
sbb
cli
xchg
xchg
es
cmc
pushf
shl
pushf
xlat
pop
das
imul
sub
dec
mov
add
mov
inc
pushf
je
pop
js
add
adc
fistpll
add
ja
mov
aas
jb
jbe
aad
xor
mov
stos
dec
dec
adc
mov
test
add
pop
rorb
mov
fwait
pusha
xor
sbb
sti
int3
nop
mov
repz
sbb
clc
daa
xor
dec
adc
push
mulb
test
pop
out
push
pushw
insl
sar
mov
sbb
and
mov
adc
divb
clc
aam
mov
jne
sti
call
pop
mov
inc
aas
loopne,pn
insl
jae
adc
clc
mov
sbb
pop
cmp
repnz
arpl
pop
das
data16
inc
push
mov
lcall
xor
popf
icebp
xorb
sbb
adc
insb
mov
xchg
int3
inc
pusha
and
mov
mov
test
arpl
int3
mov
mov
pushfw
inc
out
adc
pop
or
popf
sahf
movsb
fidivrl
in
lock
movsb
mov
cmc
lret
push
mov
add
pop
jl
sahf
fsts
out
adcl
lea
ss
push
call
fbstp
xchg
dec
push
loopne
cmpsl
sbb
dec
mov
mov
cmp
sub
negl
mov
cmp
scas
inc
xor
and
in
fcoml
mov
imulb
dec
xor
dec
adc
arpl
add
and
or
push
sub
mov
lcall
mov
bound
mov
loop
inc
out
add
bound
je
mov
and
jo
aaa
or
cwtl
jbe
push
in
pusha
pop
push
sbb
mov
cmpsb
in
test
mov
test
or
movsb
add
insl
out
push
mov
sbb
xor
adc
and
adc
or
push
and
test
add
push
mov
cmp
and
lret
sbb
add
mov
dec
xor
fstps
push
cltd
jecxz
in
andl
data16
push
jge
xor
cmp
mov
and
pushf
push
push
cltd
outsl
icebp
inc
lea
ror
movsl
inc
jae
mov
call
imul
jbe
xor
or
cmp
xlat
mov
dec
sbb
mov
enter
fsts
jg
out
in
adc
mov
sub
bound
dec
pop
stc
jmp
hlt
fsubrs
xchg
cmpsl
mov
mov
jg
in
cld
sub
inc
adc
add
insb
faddp
shlb
out
in
imulb
cmpsl
adc
filds
sub
test
in
sub
imul
sahf
repz
mov
add
daa
jbe
lret
mov
inc
pop
xchg
mov
repz
std
mov
mov
std
or
push
das
aas
out
out
inc
mov
andb
mov
lds
sbb
fadd
fldl
std
and
roll
push
jl
mov
sarl
out
sbb
push
inc
xchg
jmp
mov
push
aam
cli
push
int
scas
xor
movsl
bnd
sarl
sti
mul
and
sbb
push
xchg
mov
jmp
xor
insb
jp
jno
aad
ljmp
insl
jp
imul
mov
std
push
loopne
mov
mov
xor
addr16
out
sub
push
inc
cmp
push
mov
mov
and
jns
jmp
and
jmp
xor
push
adc
iret
xorb
stos
insl
hlt
inc
fiadds
xchg
loop
lahf
lret
in
fildl
rol
add
mov
insb
inc
iret
stos
jns
movsb
push
push
ljmp
or
push
scas
sti
imul
mov
aaa
mov
mov
jl
mov
addb
push
int
adcb
data16
movsl
das
inc
aad
test
or
repnz
ds
or
adc
stos
sub
sbb
arpl
sbbl
inc
jp
sbb
lea
daa
add
mov
in
jg
je
movsb
ja
ss
inc
imul
mov
push
ret
fnstenv
sub
shrl
int3
sbbb
cmp
lret
lock
pop
testb
mov
gs
jecxz
or
add
adc
mov
lahf
es
repz
or
push
pop
out
cli
xchg
jp,pn
sbb
inc
aam
pop
sub
es
pushf
mov
stos
int3
push
xor
out
int3
ljmp
xor
sbb
and
jl
add
stc
movsl
test
aad
fcoms
out
nop
sbb
imull
repz
xchg
sbb
dec
outsb
cmc
add
cmp
sub
and
stc
xor
arpl
ss
xchg
mov
adcb
sub
mov
cltd
mov
in
xchg
sbb
add
fbld
int
jne
add
pop
pop
call
andb
in
fistps
es
cmp
mov
dec
jecxz
in
and
dec
or
mov
pop
xchg
sahf
mov
mov
insb
inc
in
pop
xchg
sub
dec
inc
push
test
ja
add
cld
mov
mov
movsb
add
filds
call
pop
cmp
sbb
cltd
pusha
insl
or
xor
xchg
call
repz
fidivl
mov
pop
dec
push
aam
push
jae
bound
std
scas
xor
cmp
mov
mov
fldlg2
sahf
or
and
test
shl
push
cmp
sub
cmp
scas
inc
xor
lods
or
loopne
das
sbb
out
cwtl
pop
adc
int3
or
cmp
mov
lahf
inc
dec
or
js
fmuls
push
mov
or
and
or
dec
les
dec
inc
lret
sbb
push
cld
adc
test
sub
pop
imul
or
ja
ss
ret
mov
data16
dec
lret
movsl
cmpsl
mov
push
cltd
or
shlb
mov
add
jae
scas
jb
inc
push
xchg
add
mov
jnp
adc
xor
ret
sbb
jecxz
es
pop
je
xor
fisubs
fisttpl
in
mov
cmp
sbb
push
or
push
cmp
sbb
cltd
adcl
imul
loop
scas
mov
xor
insl
and
icebp
add
ja
hlt
lret
int3
loope
cmp
js
ja
aad
insl
leave
movsb
xchg
push
or
nop
dec
rorl
or
call
jle
ret
push
pop
movsb
mov
hlt
jae
xchg
mov
inc
popa
sub
movsb
jge
scas
ljmp
loopne
xor
icebp
int
lret
icebp
pop
dec
loope
sbb
popf
push
mov
add
ss
cwtl
rcl
pop
cmp
add
lret
sbb
mov
adc
jns
mov
mov
pop
test
dec
aad
nop
mov
jnp
inc
push
cmp
stos
mov
in
rcll
divl
xchg
xor
fldcw
mov
jle
mov
ljmp
push
jne
jl
lcall
lock
std
sahf
xchg
and
mov
stos
jnp
mov
data16
enter
push
mov
loope
lods
and
call
xchg
adc
aam
xlat
setge
add
shll
xchg
push
add
mov
scas
sbb
adc
xchg
push
and
push
sub
xchg
mov
ffreep
mov
jmp
lea
add
push
jl
sub
sbb
mov
gs
in
lcall
xchg
fldcw
clc
mov
jno
or
dec
out
out
xor
lret
xlat
mov
test
test
mov
ficoml
pop
push
mov
mov
sarb
pand
inc
cs
ds
ljmp
int
mull
sbb
rorl
addb
jle
xor
adc
repnz
stos
and
outsl
push
test
dec
lods
shll
push
push
pop
sbb
or
jle
lret
jo
dec
gs
lret
pushf
cmp
popf
jecxz
jae
adc
shll
mov
push
xchg
cmc
clc
out
insl
pop
fsubp
cld
pushf
mov
xchg
or
aad
pop
inc
jge
sub
xchg
mov
mov
loop
jg
rcr
sahf
jb
add
lret
dec
mov
fimull
dec
xchg
mov
mov
testb
jb
repnz
hlt
add
in
pop
fldenv
add
cwtl
and
or
xchg
je
popa
aaa
mov
jbe
and
xchg
xchg
loop
fistl
add
jno
adc
add
or
or
pop
int3
adc
xorb
pop
sub
rclb
inc
mov
mov
aad
pop
fidivrs
insl
mov
or
lods
inc
push
push
sub
jge
sub
lock
or
mov
or
inc
sbbb
mov
cltd
pop
sbb
insb
mov
lods
mov
cmp
into
jp
push
add
push
gs
jno
in
stc
js
mov
lcall
out
out
add
mov
in
or
push
xchg
fiaddl
shrl
push
xor
fisttps
xor
cmp
cltd
mov
xchg
sbb
stos
dec
cwtl
xchg
jg
or
sub
pop
or
movsl
push
mov
cmp
jg
test
out
repz
xor
jnp
jno
ljmp
negb
push
fistl
repz
mov
pop
insb
cmp
lock
mov
imul
out
jne
xchg
jmp
je
mov
cmp
mov
test
imul
aad
daa
or
or
sbb
arpl
hlt
lock
fwait
sub
add
sahf
and
or
lret
mov
popf
inc
jge
sub
add
fs
das
test
lahf
add
outsb
adc
stos
inc
jle
in
inc
cltd
push
cwtl
fistl
pop
mov
bound
xchg
mov
int
mov
push
or
cmpl
pushf
add
test
mov
and
les
pop
or
dec
add
test
movsb
xlat
fcoms
cmpsl
and
push
std
ja
lret
aas
push
mov
ds
shrl
push
cmp
cwtl
scas
mov
jp
pop
inc
or
jb
lea
cwtl
les
testb
ss
int3
or
inc
add
iret
fildll
jae
popa
int
aas
or
mov
mov
leave
call
test
cltd
xor
adc
movsl
jb
push
push
pop
jg
int3
mov
jo
adc
sbb
ret
cld
xchg
push
rcll
sbb
adc
ret
cltd
arpl
repnz
jecxz
in
xchg
mov
dec
mov
loope
sbb
add
test
cmp
mov
push
hlt
hlt
mov
es
bnd
addr16
and
sbb
inc
mov
push
scas
lock
in
push
mov
movsl
sub
add
inc
pop
nop
and
inc
inc
leave
popf
aad
and
cmp
out
mov
loopne
mov
sbb
add
lds
pop
and
fwait
cld
test
lret
popa
in
cmp
inc
pop
ret
lcall
adc
stc
pop
jns
push
fcoml
push
stos
inc
mov
or
pushfw
pop
inc
jnp
pop
cmc
and
es
sahf
inc
cwtl
addb
push
mov
and
sarb
mov
js
in
xchg
dec
das
das
fs
int3
in
ret
js
mov
push
jne
ret
push
sbb
push
lahf
sbb
divb
cmp
je
mov
push
aas
push
push
push
pusha
jg
insl
sar
pop
insl
sbb
test
mov
sub
xor
aaa
xor
insl
popf
push
push
add
or
stos
movsl
fidivs
les
fisubl
jb
cltd
mov
or
mov
jmp
pop
and
enter
mov
cmp
loope
fiadds
add
mov
movb
and
dec
sti
add
jae
adc
jne
les
dec
je
pop
mov
cmpsl
jbe
jp
xchg
jne
sbb
fsubr
xchg
mov
xchg
sbb
pop
adc
jp
mov
stos
jbe
add
daa
sub
sti
in
xor
mov
or
push
and
stos
je
pop
loopne
xor
lods
cld
test
inc
dec
bound
mov
scas
lods
or
arpl
cltd
jp
pop
dec
xchg
push
xchg
cmp
movsl
and
pop
movb
dec
cmc
imul
inc
movsb
cmp
cmc
and
xchg
mov
mov
push
lret
or
pop
jle
incl
insb
mov
xchg
popa
sub
add
inc
inc
sbb
push
inc
clc
xor
daa
cmc
sbb
loop
daa
cli
cmp
jg
lret
push
sub
inc
cmpsl
mov
mov
clc
sub
mov
lea
mov
xlat
dec
push
cs
inc
inc
fbld
inc
or
test
fwait
push
imul
push
cmpsb
sarb
xchg
xor
rcr
pop
and
adc
arpl
inc
lock
orl
xor
or
rcrb
adc
ret
and
pop
sub
hlt
repnz
dec
xchg
mov
sub
xlat
pop
sarb
fisttpl
insb
jb
loope
xchg
inc
pop
mov
stc
inc
mov
xchg
mov
dec
je
cmpsb
push
std
leave
mov
jnp
es
and
pusha
push
push
ret
scas
add
add
test
dec
shll
scas
push
cmp
jns
insl
mov
jno
ja
and
xor
adc
lods
mov
pop
and
sub
pop
push
sbb
or
out
std
sub
aad
mov
das
lods
cs
dec
out
in
pop
mov
daa
and
cmp
rcrl
adc
xchg
add
rcll
push
divl
js
adc
rorl
sbb
mov
pusha
xorl
lea
pop
xchg
mov
cmpsb
add
pop
mov
arpl
fs
hlt
mov
sbbb
lahf
leave
lret
inc
icebp
frstor
mov
mov
loop
and
shll
cwtl
mov
fildll
lds
jns
sbb
outsb
icebp
add
icebp
mov
imul
or
fs
mov
push
push
cmpsl
bound
push
repnz
fcmovnu
ficoms
and
das
clc
mov
test
dec
mov
inc
pop
out
mov
and
in
jns
cltd
pop
mov
mov
out
cli
mov
pop
nop
loope
icebp
sbb
adc
adc
dec
cmpsb
cwtl
je
repnz
lock
xchg
fisttpl
cmp
movl
dec
das
std
cwtl
push
out
scas
pushf
icebp
xchg
sub
mov
stc
in
cmp
les
add
xchg
jns
fsubl
jecxz
imul
dec
sub
sub
movsb
sub
sub
xor
inc
lods
sbb
icebp
xor
inc
nop
test
jl
dec
cmc
mov
out
adc
out
jp
in
out
push
add
pop
out
adc
mov
fs
dec
pop
dec
insl
adc
cmc
push
addr16
mov
pop
movsb
and
outsl
add
ljmp
lahf
mov
sbb
and
pop
sbb
scas
mov
cwtl
pop
std
int3
or
shrb
je
loopne
fwait
pop
pop
xchg
pop
sbb
mov
inc
ret
repnz
xchg
dec
jmp
mov
adcl
xorl
cmp
or
push
push
cld
scas
mov
pop
inc
bound
setae
cmpsb
fwait
mov
test
sti
sbb
in
adc
jecxz
fwait
cli
cwtl
sbb
xchg
or
adc
pop
icebp
nop
mov
push
pop
out
stos
sarb
push
shrl
mov
add
adc
pop
aam
test
pop
and
in
xchg
aaa
dec
daa
repz
ds
sbb
cmp
sub
stc
pop
push
jge
test
sbb
sub
popf
xor
fsts
sbb
cmp
cltd
hlt
out
adc
hlt
mov
cmp
jo
adc
push
aad
in
add
leave
push
push
loopne
das
push
cmp
pusha
sbb
mov
mov
pop
mov
outsb
pop
je
or
imul
adc
nop
or
and
fnstsw
or
or
pop
sub
cmpsb
popf
mov
test
sti
stc
add
mov
cmp
jae
or
ret
jl
jge
cmp
lds
aad
xchg
cwtl
icebp
lahf
or
push
mov
mov
xchg
inc
inc
push
cmp
jae
xchg
pop
lahf
out
pcmpeqw
xor
mov
andl
imul
mov
bound
lods
orl
cmc
sahf
mov
lret
cmp
out
inc
insl
int
jbe
inc
cwtl
clc
adc
sbb
add
xor
xchg
sub
data16
data16
aas
pushf
ret
das
jmp
or
imul
mov
xlat
divl
dec
data16
jb
cmp
sub
mov
idiv
fcompl
push
push
test
xchg
loope
mov
adc
jne
lods
ficoml
or
sub
jg
call
xchg
mov
dec
fsub
dec
hlt
mov
xor
loop
xlat
push
jne
pop
test
xchg
hlt
shl
cltd
adc
popf
adc
mov
bnd
test
andb
xchg
ret
and
enter
xor
mov
or
and
push
enter
push
mov
adc
mov
xchg
pop
stos
cltd
gs
movsb
mov
loopne
jg
repnz
mov
sbb
test
je
rol
adc
scas
jl
push
lea
ja
clc
sbb
outsb
std
xor
imul
xchg
push
jp
mov
cwtl
imul
sarb
cmp
sub
jbe
je
push
cmc
scas
imul
mov
das
sbb
cmp
jmp
xor
rolb
negb
cmpsb
or
xor
iret
cmp
aas
xchg
arpl
add
push
cmp
lock
cmp
int3
jecxz
outsl
shrb
sub
xchg
rorl
ds
push
cmp
cli
add
sbb
fs
pop
stos
mov
loope
cmp
out
lds
pop
sub
call
lahf
pop
sub
js
daa
pop
cltd
jno
data16
adc
jb
clc
inc
out
test
je
dec
pop
mov
push
jae
into
jo
xor
pop
and
insb
mov
jno
mov
jbe
bound
aas
sbb
xor
mov
inc
xchg
aam
xor
mov
rcrl
aaa
adc
lahf
stc
ljmp
sub
flds
cld
fs
into
ret
push
or
imul
in
push
lahf
pop
hlt
sbb
and
dec
sub
ret
add
xorw
cmpsl
aam
pop
and
out
rclb
mov
movsl
jb
lret
or
cmpsb
loopne
xor
mov
cmp
scas
pop
test
inc
sar
ds
cmp
pushf
lret
enter
sbb
testb
mov
lahf
and
jae
jb
mov
adc
lret
dec
stos
mov
dec
sbb
imul
push
outsl
and
dec
sbb
test
pop
mov
lahf
and
add
jb
out
stos
push
into
loop
jnp
pop
lods
sub
shrb
push
es
pop
and
or
rol
aas
jne
sbb
dec
sub
push
mov
sahf
sahf
test
cld
cmp
push
test
dec
js
cmp
jbe
sub
aaa
pop
das
out
into
push
jb
data16
insl
jp
movsl
xchg
mov
pop
mov
fwait
out
add
test
ret
stc
rorl
sbb
or
sbb
lahf
jmp
shlb
mov
pushf
pop
adc
dec
imul
mov
sub
pop
mov
pop
adc
hlt
ret
movsb
fsub
pushf
jge
pusha
dec
xchg
hlt
fcom
in
in
ss
filds
pop
arpl
push
and
test
add
inc
pop
lds
call
push
jl
shll
jp
xchg
inc
imul
adc
in
cmp
xor
lea
mov
pop
add
pop
pop
push
mov
and
cmc
sbb
test
and
add
inc
jl
inc
out
cmp
dec
outsb
jecxz
nop
mov
out
inc
lods
mov
dec
push
inc
lahf
icebp
mov
loop
aaa
fbstp
ret
xor
jb
pop
push
xlat
insl
aas
repz
inc
sub
push
sbb
adc
test
inc
sub
pusha
insb
xor
sub
sub
lds
mov
shll
cmp
adc
push
inc
sbb
jne
ret
pop
popf
stos
jp
sbbb
jle
insl
sub
or
push
scas
mov
or
mov
or
loopne
leave
inc
cmp
gs
daa
pop
dec
xchg
mov
xchg
add
cli
inc
adc
adc
sbb
jge
push
sbb
push
popfw
pop
repnz
mov
bound
cli
sti
lahf
aas
xchg
xor
xchg
int3
cmp
mov
adc
mov
adc
sti
mov
mov
jle
jns
or
stos
shrl
xor
push
cld
adc
and
xor
dec
outsl
dec
sub
push
fwait
outsb
out
sbb
jecxz
repz
cs
ljmp
mov
inc
dec
addr16
outsb
pusha
xchg
xor
xchg
mov
or
nop
fmul
arpl
dec
stc
mov
cmpb
stos
sub
popf
lods
xchg
inc
and
xor
stc
lods
jmp
negb
jmp
inc
sbb
sbb
mul
cld
xchg
push
cmp
mov
xor
arpl
out
push
push
adc
scas
stos
cmp
fld
add
push
xchg
adc
or
ja
xchg
fldt
cltd
mov
mov
pop
in
movsb
ret
jp
mov
push
fs
pusha
or
cmp
adc
les
ret
push
outsl
sub
dec
inc
inc
lret
testb
lock
push
cmp
jl
dec
jbe
mov
movsl
xchg
or
dec
addr16
inc
cmpsw
filds
xor
or
fs
adc
pusha
div
push
dec
add
inc
mov
daa
push
inc
lods
mov
jge
int3
hlt
jmp
adcb
fwait
insl
xchg
jb
pop
ss
sub
mov
inc
scas
fcoms
jmp
scas
mov
mov
inc
xchg
outsb
dec
mov
mov
xchg
test
push
addr16
inc
pop
sahf
nopl
sub
movsb
loopne
int
outsb
lock
mov
jne
call
jmp
add
je
into
test
jl
int3
push
pop
imul
daa
xchg
int
sbb
fstl
jmp
in
push
sbbl
xchg
and
test
jge
jp
repnz
movsb
jnp
movsl
push
movsl
pop
cltd
int3
lcall
outsb
push
mulb
stos
add
push
addr16
mov
or
inc
adc
dec
fbstp
int
or
mov
bound
pop
movsl
jne
jge
bound
movsb
ja
sbb
pop
repnz
or
xor
sbb
mov
adc
insl
dec
aaa
daa
mov
push
push
mov
sbb
fistl
jle
ret
fsub
loope
cmp
inc
add
jecxz
or
rcrb
dec
xchg
cli
inc
lods
stos
ljmp
int3
lret
xor
inc
fisubrs
stc
cmp
data16
nop
das
gs
pop
sub
cmpsb
ss
scas
cld
push
pop
xor
popa
dec
push
sbb
pop
enter
mov
cld
cli
shrl
pop
clc
add
lret
and
mov
jge
stos
stos
mov
aad
pop
jg
xchg
jecxz
shll
imul
repnz
cld
iret
mov
xlat
dec
dec
shr
bound
push
and
inc
lock
or
jge
xor
fisubl
loop
pop
shl
dec
push
inc
std
clc
mov
out
ljmp
adc
mov
loope
cmc
lea
sbb
repz
sahf
out
pusha
cmp
inc
loopne
cs
out
insl
cli
outsb
push
gs
loop
stos
cmp
scas
adc
lea
in
cmp
sub
jb
push
xor
inc
mov
xlat
add
int
pop
cmpsl
test
cmp
mov
push
ss
je
ret
jb
ljmp
imul
subb
mov
movsl
mov
add
sbb
cmpb
sbb
cwtl
imul
cli
imulb
test
hlt
iret
xor
fldl
pop
scas
xchg
inc
xchg
cmp
push
sbb
jo
sub
and
mov
cmp
mov
sub
into
rcl
or
cs
stc
mov
ret
mov
dec
stos
sbb
add
xchg
stos
cmp
pop
shlb
sub
dec
adc
mov
out
push
mov
mov
out
cmp
shl
jbe
lods
mov
push
fwait
cld
fs
in
pushf
push
outsb
mov
sub
cld
mov
xlat
ds
dec
mov
cmpsb
fcomi
and
and
dec
mov
or
jb
mov
out
ss
jo
dec
in
sbb
adc
arpl
inc
pop
xlat
movsl
in
pop
mov
xor
pop
cmpsb
inc
mov
push
gs
neg
mov
ret
pushf
fidivs
xchg
dec
je
pusha
push
cmc
push
or
mov
notb
movl
icebp
lock
push
pop
mov
lea
in
sub
dec
pusha
jbe
jne
insl
push
ret
xchg
scas
mov
mov
add
cmpb
dec
imul
stos
lea
jnp
aam
sub
aaa
andl
add
mov
icebp
outsb
xchg
dec
lret
xchg
push
ljmp
decl
shrb
mov
dec
sbb
pop
mov
pop
fildll
into
test
pop
xor
mov
and
fists
lahf
jae
cmp
cld
dec
fidivrl
adc
add
jbe
xor
sub
arpl
icebp
jno
pop
xchg
jecxz
mulb
loope
and
outsl
lahf
leave
adc
pushl
fdivrp
orl
jle
mov
mov
sub
pop
shrb
and
enter
xchg
or
cmpsl
leave
mov
popa
cmpsl
or
sbb
leave
mov
sbb
mov
adc
mov
in
xchg
xor
xchg
dec
xor
fisubrs
into
in
rolb
xchg
push
roll
pop
mov
add
pop
sar
pushf
lret
pop
add
adc
insb
bound
adc
xchg
fldcw
push
pop
sbb
pushf
add
clc
jl
jns
pop
dec
fsubrs
ds
fcom
dec
mov
test
push
xchg
pop
mov
clc
jae
mov
pushf
fs
xlat
in
aam
add
xchg
mov
nop
jb
orb
fs
push
mov
mov
cmpsb
das
or
pusha
add
ja
inc
mov
leave
jno
or
jle
mov
jecxz
es
xor
sahf
push
repnz
andl
fbstp
adc
push
mov
mov
aaa
aam
sub
loope
jno
dec
dec
ret
mov
cld
popf
push
adc
lahf
push
sub
mov
add
aad
mov
add
je
dec
dec
sub
cltd
sbb
popf
cld
add
dec
ret
xchg
out
cmp
std
ljmp
sub
jno
mov
insb
icebp
push
xchg
in
movsb
mov
ret
ljmp
jno
ljmp
mov
dec
lahf
and
divl
inc
jge
jae
add
jae
fwait
test
aaa
je
aas
lods
pusha
lahf
outsl
fnstcw
push
ret
mov
popf
outsl
loopne
hlt
or
outsb
mov
sub
stos
insb
imul
out
xchg
dec
pop
out
mov
mov
mov
test
mov
jmp
and
loope
xor
inc
mov
lds
ficoml
cltd
push
std
jae
push
in
icebp
or
cmpsb
xchg
imulb
push
stos
add
mov
in
mov
mov
sub
loope
jmp
imul
call
xor
jl
jge
nop
jns
xchg
lret
fbld
lret
mov
mov
lock
call
mov
js
push
rol
jbe
mov
cmp
mov
jecxz
pop
xchg
out
xor
mov
nop
adc
pop
cwtl
std
das
push
mov
xor
subb
add
sub
xchg
push
xor
idiv
jecxz
icebp
ret
inc
lods
repnz
push
sarb
sti
jmp
movsl
push
jo
inc
stos
jb
xor
sub
xor
pop
add
das
sub
and
or
mov
and
insl
repz
fists
call
jcxz
jp
lock
mov
fbstp
push
xchg
cmp
shll
lret
adc
fisttps
xchg
into
outsl
loopne
add
jmp
xchg
dec
sahf
loopne
mov
pop
scas
jbe
xor
out
push
pusha
dec
cmp
scas
gs
mov
popf
mov
mov
sbb
sub
sub
jnp
push
ficompl
push
dec
rcll
or
gs
sahf
xor
lds
or
mov
in
fsubrl
leave
add
insb
fistl
mov
fwait
rorl
ljmp
rorl
iret
cmpsl
test
outsb
lcall
sub
or
dec
xchg
iret
jb
jmp
scas
das
and
std
jg
pop
mov
mov
dec
lock
jae
in
pop
dec
ficomps
test
push
sub
fwait
lcall
shl
int
enter
xchg
add
sbb
add
popf
sti
mov
mov
mov
jle
testl
mov
in
add
loope
and
dec
adc
pop
js
add
insb
imul
lcall
insb
repnz
imul
cmp
adc
adc
mov
rclb
jno
cmp
cmpsb
inc
gs
push
push
jns
lea
enter
sub
mov
xorb
js
jno
sbb
adc
leave
scas
outsl
mov
addl
jnp
gs
sub
leave
inc
mov
out
gs
sub
test
dec
jle
clc
push
fptan
stos
sahf
mov
scas
in
push
push
mov
ss
mov
ret
ja
dec
push
mov
ds
and
aad
xchg
arpl
pop
cwtl
or
sti
xchg
je
mov
iret
pop
mov
mov
in
dec
mov
inc
scas
inc
in
jno
push
sarb
push
enter
js
and
ret
xchg
jno
jne
ds
insb
ja
mov
lcall
je
sub
sti
je
andl
into
loope
sti
jbe
push
jg
lahf
insb
outsb
sub
or
data16
adc
jb
ret
hlt
mov
mov
ret
xor
sbb
ljmp
leave
lcall
in
in
push
pusha
jo
inc
lds
mov
mov
cmp
insb
bound
xchg
dec
adc
ret
xchg
nop
or
jno
hlt
or
jnp
pop
pop
sti
fistl
mov
adc
or
xor
add
dec
jge
jecxz
pop
insl
or
lock
mov
adc
sbb
jae
cwtl
sub
mov
shlb
xlat
xlat
push
dec
xor
jae
mov
popa
cli
inc
lea
mov
pop
and
adc
std
stos
or
cmp
cmpsb
cmpsb
dec
bound
imul
inc
in
add
inc
xor
inc
fisubrl
aam
shlb
incl
jp
sub
and
pop
push
jb
adc
xchg
aas
fwait
mov
push
sarl
pop
lods
aam
or
push
or
scas
mov
lea
dec
xchg
jb
xor
je
and
xchg
aam
pop
sbb
mov
cmpsl
and
dec
sbb
adc
popf
test
stc
not
mov
push
inc
inc
pop
lds
in
inc
sbb
mov
leave
add
insl
loopne
mov
movsl
push
in
mov
jnp
das
jbe
cmp
dec
jmp
mov
aaa
les
les
mov
test
in
adc
mov
movsb
xchg
insl
xchg
dec
clc
es
xor
lds
or
sbb
mov
push
fidivrs
clc
ret
outsb
mov
ja
fsubl
filds
dec
stos
mov
mov
std
mov
ret
in
fcoml
aas
sbb
lcall
pop
and
dec
lcall
push
cmp
rol
mov
pop
jo
in
dec
cmp
adc
lock
cmp
jno
leave
into
xor
lret
cwtl
in
add
xchg
test
pushf
xchg
xor
packsswb
scas
sbb
int
adc
outsb
pop
dec
jnp
orb
push
mov
and
sbb
mov
lcall
int
loop
sub
or
jg
aaa
mov
or
shrl
out
movsl
fldcw
jge
cmp
cli
cmp
cmc
sahf
xor
push
sbb
sbb
push
dec
test
lods
movsb
dec
in
xchg
pop
mov
imul
inc
jbe
popf
cmp
cwtl
aad
push
mov
push
jno
rorl
dec
push
dec
mov
and
hlt
ret
adc
push
fcomip
xchg
mov
lock
cmp
xlat
je
in
sbb
lods
mov
pop
ret
adc
subl
dec
mov
pop
les
mov
adc
push
or
dec
ljmp
dec
ljmp
inc
loopne
nop
or
ret
mov
cmpsl
mov
aaa
pop
adc
clc
divb
xchg
bound
inc
xor
jne
add
movsb
pop
scas
cltd
push
pop
push
mov
mov
add
shlb
or
push
mov
cmpsl
sbb
clc
jl
shl
bound
cmp
push
pop
ret
push
push
pop
popf
cmp
mov
cmp
add
jp
push
jae
lret
pop
pop
jbe
out
push
pop
mov
push
cli
sub
mov
jmp
lea
sbb
push
sti
adc
jnp
jg
cmp
clc
and
shlb
push
shrl
scas
xchg
out
aad
push
add
outsl
adc
inc
daa
mov
lock
popl
scas
pop
in
adcl
jmp
lock
inc
cmp
inc
cld
std
call
fdivrs
cmp
add
les
adc
xchg
test
daa
cltd
stos
out
cmp
xor
sbb
mov
mov
scas
dec
incb
lds
int3
arpl
mov
push
cmp
daa
rorb
pushf
dec
push
mov
das
lea
iret
arpl
pop
or
sub
repnz
out
lahf
decb
aam
loope
or
test
fmuls
cltd
in
pop
icebp
out
xchg
mov
data16
and
sbb
dec
pop
ss
inc
jmp
sub
dec
dec
mov
sub
inc
xor
pop
inc
or
cwtl
and
add
pop
mov
aad
sub
nop
pushf
jnp
inc
xchg
adc
jge
sbb
in
mov
mov
int3
mov
pop
sbb
push
or
lock
cwtl
mov
jno
or
ficoml
int
leave
gs
xchg
sbb
pop
sbb
mov
pop
test
mov
mov
xor
cmpsb
xchg
jnp
add
outsb
mov
popf
iret
out
cmc
jl
ret
lds
rorb
outsl
inc
and
mov
mov
cmp
cmpsb
dec
std
mov
std
cmpsl
inc
fisttpll
fsubrl
push
mov
xorb
jbe
hlt
enter
dec
clc
cmp
icebp
cmp
bound
push
xor
mov
cli
jecxz
pop
data16
add
subb
pop
cmp
mov
inc
jp
inc
icebp
mov
sub
in
imul
in
mov
imul
push
scas
ss
cmc
lock
add
lret
add
sarl
xchg
test
mov
les
adc
or
arpl
scas
cmp
aad
sub
stc
loop
xchg
mov
lds
dec
sahf
shll
lock
std
pushf
jmp
mov
mov
jo
pop
xor
and
xorb
lea
arpl
sarb
aad
int
mov
faddl
push
jp
rorb
mov
jns
bound
push
inc
lock
sbb
xor
xor
mov
and
mov
or
in
mov
pop
daa
popf
xor
repnz
sbb
das
xchg
cltd
push
cmpl
ds
sbb
dec
add
scas
push
mov
adc
lods
test
inc
movsb
dec
test
sti
iret
loopne
shll
out
push
movsb
xchg
cld
lock
in
sub
or
leave
pop
dec
imul
xchg
jbe
mov
shrb
mov
jbe
pop
push
daa
xchg
dec
call
je
push
xchg
aas
sub
sub
cmp
leave
leave
mov
mov
push
cld
mov
mov
mov
lret
cli
mov
in
dec
iret
ja
lods
or
les
cld
xchg
addr16
mov
cmp
test
xchg
dec
shll
and
cmp
testl
stos
adc
push
clc
mov
dec
sbb
xchg
add
push
rcrb
ficoml
in
mov
add
insb
cmpl
push
jg
cmp
mov
pusha
mov
sbb
inc
xchg
cmp
or
in
sub
aaa
clc
mov
lret
testb
gs
jp
mov
pop
push
fdivrp
mov
out
xor
addr16
and
mov
xor
inc
cmp
mov
adc
xchg
dec
jno
fsubl
fidivs
xchg
mov
fninit
add
test
sub
or
loopne
clc
sbb
mov
jmp
xlat
mov
or
mov
data16
jb
outsl
cmpsl
inc
cmpsb
push
shll
cmpsb
jae
dec
lods
dec
adc
mov
xor
xchg
xchg
or
pop
xchg
mov
add
ja
and
aam
pop
ficompl
lea
dec
int
insb
sub
or
fs
jg
push
or
jae
adc
cmpsb
cmp
leave
inc
cmp
lds
mov
jo
popf
pop
stc
jg
adc
testb
cmp
test
inc
jle
sbb
sub
aad
cmp
push
adc
mov
cmpb
into
add
aad
subb
nop
ficoms
movsb
push
ret
ja
imul
xor
stos
jp
outsl
outsl
push
push
add
jb
jg
pop
cmpsb
xchg
mov
repz
daa
fistl
repnz
rorl
jmp
inc
aas
fpatan
or
or
push
mov
inc
or
pop
stos
insb
fiaddl
xor
js
shlb
addr16
inc
jbe
lods
and
inc
cmp
or
push
lock
int
stc
jp
mov
adc
mov
imul
int
mov
out
dec
testl
fcom
rcl
in
sahf
mov
aad
sub
lret
pop
lods
stos
inc
jmp
mov
rcll
push
imul
les
xchg
xchg
dec
idivb
jbe
rcl
adc
lahf
ss
push
xchg
lock
push
mov
sahf
shrb
xchg
shll
fnstcw
jecxz
out
jmp
addr16
mov
jecxz,pt
sbb
cmpl
je
xchg
adc
mov
rcrl
or
repz
rorl
mov
push
adc
in
sbb
rcll
or
imul
inc
push
inc
scas
jo
out
push
loop
or
push
aad
sub
in
call
stos
sub
and
loop
cmpsl
stos
xchg
std
aaa
cmp
sahf
popa
mov
pop
xlat
sub
test
inc
jp
pop
mov
jne
orb
enter
das
push
pop
aaa
mov
stc
pop
fisubs
dec
rcrl
out
fwait
es
jae
mov
stos
int3
push
iret
pop
stos
and
mov
hlt
in
cmp
add
pop
pusha
sub
xor
test
mov
out
fidivrl
xchg
cmp
mov
test
add
test
push
dec
mov
ffreep
cltd
mov
aam
mov
pop
stos
lock
ds
shl
mov
out
pop
dec
lods
cld
adc
sub
aam
push
xchg
push
roll
ss
cmc
push
mov
dec
mov
popa
lods
test
icebp
outsb
cli
xchg
mov
mov
mov
out
sub
mov
push
inc
mov
inc
add
cmp
sub
mov
in
aad
mov
xchg
das
push
stos
sahf
cmpsl
cmpsb
add
pop
icebp
inc
push
je
das
outsb
lahf
pop
ficompl
or
xor
in
pop
insl
idiv
dec
and
movsb
add
sub
std
inc
push
lret
push
movsb
gs
xchg
and
movsl
outsb
or
xchg
pop
dec
scas
in
loope
sbb
jg
hlt
stos
lret
lods
or
or
jns
mov
paddsw
imul
or
lods
fldenv
or
jne
mov
jae
push
inc
mov
push
clc
mov
push
mov
outsb
clc
jmp
out
pop
sub
xchg
cmc
sbb
mov
cmp
test
ja
or
jne
dec
mov
and
out
dec
mov
cltd
pop
xchg
outsb
in
push
in
movsl
lahf
adc
xlat
gs
pop
push
jae
sbb
sbb
xor
int3
sarl
out
mov
dec
push
push
xchg
adc
lahf
out
cmpsl
stos
sbb
push
insl
das
and
mov
jne
mov
pop
int
addr16
jl
add
pop
xor
mov
sbb
pop
sub
fistpll
dec
mov
lahf
out
pop
sti
fs
sub
cmp
mov
sub
sub
sub
fwait
jmp
out
stc
mov
or
lods
pusha
push
sbb
push
dec
data16
jne
adc
add
cwtl
jnp
and
sub
and
inc
xor
inc
icebp
fdivl
or
and
inc
arpl
mov
jae
mov
mov
cmc
mov
cmp
jae
imul
cli
cs
inc
xchg
cmp
lds
jbe
data16
notb
dec
pop
mov
fimull
fldl
and
mov
arpl
mov
dec
es
jae
ja
rol
test
push
xchg
fmuls
mov
and
dec
and
cmp
ds
and
scas
dec
xor
xor
mov
sub
dec
idivb
jl
jo
fldcw
inc
repnz
and
inc
xor
fld
iret
lods
inc
xor
jl
lcall
addr16
jle
pop
dec
inc
cmp
stc
and
movb
pop
dec
jo
popf
mov
popf
mov
xor
out
adc
out
loope
loopne
mov
arpl
xor
dec
xchg
inc
fstpt
mov
ljmp
movsl
dec
jno
cmp
adc
or
pusha
jmp
imul
inc
popa
mov
inc
pop
jbe
repz
sahf
fdivs
cmc
ret
xchg
jecxz
push
lock
in
dec
mov
and
shlb
jecxz
mov
inc
out
inc
jmp
lret
popa
and
js
mov
push
sub
int3
xor
daa
cmp
lock
pop
jp
mov
cmpsl
cld
sbb
add
cmpsl
cwtl
test
shl
sub
repz
not
add
jl
fs
pop
addr16
ljmp
cmp
imul
bnd
mov
loope
and
subb
jbe
aaa
rcl
std
pop
cmpl
mov
sbb
icebp
mov
adcb
xor
fisubrl
mov
outsb
sti
in
and
popf
lods
xor
xchg
push
sbb
lock
cmc
mov
xor
xchg
ds
inc
and
cltd
loopne
push
pop
sbb
jle
mov
adc
mov
aaa
out
sbb
cltd
rolb
cmp
rolb
or
clc
out
or
test
ljmp
loop
pop
dec
adc
sarb
or
xlat
int
cmp
in
push
lret
pop
lret
cltd
dec
in
imul
stos
mov
and
or
jl
fadd
cmc
mov
mov
push
popf
pop
or
pop
lds
cmp
add
add
mov
mov
push
inc
pop
aaa
mov
test
pop
pop
jp
pop
cld
rcll
mov
scas
xchg
arpl
push
rolb
or
adc
xchg
fisubrl
pop
cmp
xor
fs
cmpsb
push
adc
sbb
in
push
cmp
or
out
jb
rclb
mov
push
mov
insb
jl
adc
mov
lock
pop
in
into
jae
idivl
dec
cltd
std
stos
add
sub
pop
addl
adc
add
dec
sub
add
jg
pop
in
leave
push
outsb
jle,pt
cmp
nop
add
mov
sbb
mov
fldt
imul
and
add
xor
mov
push
xchg
xchg
dec
aad
in
aaa
xchg
mov
iret
pop
add
shl
fcompl
or
daa
xchg
lahf
in
xor
aas
or
cmp
test
ds
jb
sub
xor
mov
repz
jge
out
ficoms
inc
push
fs
mov
jbe
jo
mov
das
jno
pop
shrb
jecxz
mov
jne
xchg
aam
push
push
out
mov
mov
lds
push
fidivl
lea
xchg
pop
dec
sbb
push
out
into
dec
cmpsl
movsl
jnp
test
mov
int3
cmc
fistpll
fisttpll
cmp
adc
jae
jns
adc
xchg
sbb
sub
cmc
sub
push
xchg
cmp
jg
jne
scas
out
std
mov
gs
in
push
jo
les
outsb
cmc
xchg
mov
imul
shl
add
in
ss
movb
cli
inc
or
inc
loopne
out
fsts
mov
scas
inc
mull
sub
jb
push
test
movsl
or
mov
ret
lahf
cmp
loop
add
mov
push
push
dec
out
test
test
incb
pusha
mov
das
shrl
nop
pop
jb
add
dec
or
lcall
cld
popa
cmp
mov
fmuls
cmpsb
pusha
or
test
pop
scas
cmp
cmpsb
xor
mov
xchg
mov
shrb
fistpl
fsubl
arpl
dec
repnz
shrb
xchg
fucomip
fbld
xor
lods
xor
loopne
or
ret
mov
lcall
cli
cltd
cli
cmp
push
mov
stc
pop
std
pushf
ss
xor
xchg
lds
mov
sbb
adc
jmp
jmp
loope
cmp
jnp
cmpl
dec
jge
sub
mov
pusha
inc
mov
and
and
mov
fucomi
or
leave
xorl
orl
xchg
imul
lcall
pop
cwtl
test
filds
cmp
mov
xlat
rcrb
mov
movsl
xorb
out
pop
test
mov
ljmp
or
sub
pop
dec
inc
cli
jno
mov
lcall
adc
aaa
stos
dec
or
scas
js
xor
xor
pop
mov
jmp
test
sub
stc
sub
shlb
cltd
out
test
sbb
outsb
cmp
pop
sbb
aas
push
push
mov
icebp
adc
dec
or
outsl
adc
add
test
cmpsb
inc
or
shlb
jle
jns
mov
cmp
pop
sub
inc
dec
mov
fidivrl
pop
cmpsl
push
or
ja
xchg
out
adc
incl
mov
push
dec
adc
fsubp
jmp
dec
mov
sbb
pop
pop
jle
mov
lahf
testl
mov
je
lahf
cmpsl
jecxz
je
cs
cmp
lea
adc
sahf
and
not
test
nop
orb
int3
sbb
dec
inc
mov
or
cmp
cmp
ja
add
push
add
jge
cli
loop
or
popf
mov
inc
cmp
in
pop
adc
mov
icebp
inc
mov
je
test
cmp
shll
jno
mov
pop
push
bound
pop
dec
movsl
cmpsl
loope
push
dec
mov
call
sarb
push
sub
loop
insl
or
mov
xor
outsb
inc
xchg
mov
xchg
fstl
enter
scas
and
arpl
add
in
mov
data16
xchg
cmp
repz
adc
sub
outsl
dec
inc
mulb
push
or
nop
jge
pop
cmp
imul
fldenv
inc
pop
aaa
insl
repz
dec
loope
lods
hlt
cmp
sbb
fisubl
jno
pop
cmpl
cmpsl
stos
movsb
mov
mov
push
xor
test
rclb
dec
xor
mov
shrb
adc
cmp
mov
outsb
mov
dec
mov
in
or
dec
icebp
sbb
push
mov
push
out
movsb
orl
cmpsb
aad
jecxz
or
dec
push
test
xchg
jle
push
mov
mov
or
leave
mov
loope
add
sldt
mov
add
js
and
jne
mov
fcomp
int
jno
scas
test
sub
and
bnd
rclb
sub
lods
add
or
ljmp
push
jge
mov
jbe
mov
in
ret
int3
inc
and
mov
cwtl
outsb
push
negl
fadds
inc
cmp
pop
inc
test
scas
clc
lock
or
add
enter
sbb
jp
je
lcall
mov
or
push
mov
ds
jmp
subl
pop
jp
loop
ljmp
or
fistpll
shlb
test
pop
es
jo
pop
stc
mov
jno
aaa
cltd
pop
out
je
adc
xor
mov
mov
xchg
addl
int3
std
fwait
in
out
fdivrs
pop
or
push
hlt
add
jnp
dec
pop
and
mov
adc
mov
movsb
mov
inc
out
in
into
cld
jno
push
in
pop
fisttps
mov
lock
xor
arpl
xchg
xor
add
sub
xor
sbb
mov
js
stos
jmp
push
sub
mov
push
dec
xchg
jmp
daa
inc
xchg
lahf
clc
sub
ret
xchg
xchg
sbb
sbb
push
stc
jle
aad
fildl
arpl
rcl
dec
mov
xchg
arpl
icebp
dec
std
out
cmc
outsl
jo
and
jmp
ret
imul
test
loopne
test
out
cmp
xchg
out
imul
pop
shrb
xor
pop
inc
mov
lock
sbb
sbb
mov
clc
lcallw
repz
ret
cltd
mov
cmp
scas
pop
sbb
icebp
scas
test
fsubs
or
xor
jae
mov
roll
xor
push
push
mov
mov
pop
or
icebp
incb
push
daa
scas
movzwl
cmp
xchg
and
jnp
pop
cmpsl
popf
and
dec
ja
jmp
mov
sub
data16
testl
or
push
dec
jecxz
dec
adc
dec
cmp
ret
aad
mov
fst
push
inc
cmp
add
loopne
add
test
inc
or
pop
xor
jge
imul
sbb
xchg
xor
inc
sbb
xchg
insb
push
mov
sub
or
pop
scas
jecxz
mov
loope
mov
dec
pushw
mov
bound
mov
icebp
push
mov
test
mov
movsb
int3
popf
mov
aas
inc
stos
pop
mov
pop
ds
lcall
mov
jp
xchg
mov
sbb
jbe
lret
cmpb
cmp
adc
mov
and
lret
out
out
mov
adc
pop
xor
pop
pop
xchg
outsl
xor
jge
outsb
pop
xlat
jmp
xchg
repnz
mov
scas
pop
daa
sahf
push
xchg
cli
sub
test
mov
mov
arpl
ss
xor
push
dec
sub
rcll
fs
sub
mov
nop
jno
xchg
movsb
imul
push
stos
arpl
fucomip
sahf
adc
pushf
fadds
rorl
mov
and
push
shl
jge
cmc
in
rcr
fidivl
mov
mov
or
cmp
dec
mov
xor
dec
iret
mov
jbe
inc
and
xchg
adc
xchg
cmp
out
pop
and
mov
jmp
or
pop
jnp
insb
movsb
mov
sbb
inc
sub
jecxz
sbb
mov
xchg
std
das
out
jp
jb
test
pushf
loop
xchg
in
outsb
inc
xchg
data16
pushf
and
adc
scas
clc
mov
sbb
mov
xor
lods
xchg
jge
rolb
dec
push
mov
inc
jns
arpl
sub
nop
mov
insb
aaa
inc
mov
lock
push
xchg
orl
ss
dec
mov
push
jnp
fnsave
xchg
and
and
and
cmp
mov
and
mov
jo
sti
ss
mov
mov
lds
sbb
jp
movsb
sub
push
les
sub
sbb
stc
test
mov
loop
inc
dec
fidivrl
pop
add
mov
fimuls
fwait
push
adc
dec
inc
jne
ret
jnp
inc
out
mov
fwait
jae
jmp
sub
or
dec
add
test
aaa
int
or
in
pop
sbb
fsub
pop
mov
mov
or
jnp
fidivrl
add
fisubrs
pop
cwtl
adcb
sub
mov
pop
xchg
add
loop
aas
outsb
ffreep
sub
mov
xchg
pop
cmp
test
sbb
inc
popf
xor
jnp
mov
xlat
notl
jnp
add
adc
shl
cwtl
jb
aam
push
outsb
sbb
fsts
or
inc
out
clc
push
aam
cmpsl
insb
ret
push
cmp
push
inc
jp
xor
add
push
mov
mov
jp,pt
insl
xor
dec
adc
sbb
rorl
xor
loope
sbb
add
sub
mov
lock
adc
ds
pop
in
xor
std
inc
adc
cmp
sbb
sub
test
pop
fdivr
test
test
mov
mov
push
cmp
push
lahf
mov
stos
push
outsl
jns
stos
in
icebp
dec
sub
pop
repnz
push
popa
in
fdivrp
insl
add
adc
lods
fbld
and
pop
xchg
gs
imul
movsb
pop
mov
pushf
arpl
lret
add
testb
stos
cltd
ja
xchg
aaa
pop
out
sbb
cs
gs
dec
sub
xor
xchg
shlb
pop
sbb
jns
or
mov
jl
lahf
add
clc
cmpb
je
xchg
push
adc
into
inc
nop
in
mov
sub
ror
fwait
lret
adc
arpl
inc
pop
sub
sbb
in
lret
mov
pop
fs
push
xor
sahf
xchg
ds
leave
aad
dec
stos
jle
push
popf
shlb
mov
aad
shll
pop
jns
mov
jb
leave
pop
ss
xor
stc
aas
push
or
sbb
mov
hlt
sub
mov
in
insl
sbb
and
mov
repz
icebp
incb
fmuls
cmp
lock
xlat
repnz
mov
mov
lods
cli
in
jnp
push
in
push
mov
and
adc
mov
hlt
xor
ret
xchg
lods
adc
push
imul
in
push
dec
into
icebp
add
aaa
test
int
repnz
mov
ljmp
sub
fs
in
sarb
pop
int
aaa
cltd
test
jle
ds
sub
hlt
push
jecxz
out
xchg
xchg
shlb
push
in
test
dec
xchg
jp
xchg
mov
movsb
movsl
imul
sbb
add
or
call
idivb
mov
adc
mov
jns
jae
xchg
lock
inc
push
inc
inc
popa
cli
mov
aas
xchg
test
adc
rorb
jl
cmp
inc
in
pop
icebp
or
pusha
dec
mov
js
in
aas
add
pop
std
movsb
dec
sbb
mov
mov
mov
inc
cld
iret
jle
sbb
xchg
pop
icebp
mov
lret
movsl
into
dec
push
popf
popa
add
or
mov
or
lods
lds
in
inc
and
scas
cli
imul
fmul
push
jno
into
mov
mov
pop
scas
es
fwait
shl
and
cs
mov
mov
push
dec
scas
xchg
stos
popa
and
in
movsb
aad
loopne
dec
push
cmc
sbb
fidivrs
jno
test
pop
and
shlb
sbb
mov
stos
cwtl
inc
mov
mov
pop
xor
push
xor
mov
lock
jb
les
stc
fisttps
push
addr16
push
xchg
sti
dec
dec
fnstenv
pop
orb
cld
aaa
cmp
gs
lret
jnp
cmp
pop
ss
inc
in
mov
dec
push
push
into
loope
repnz
popf
xchg
test
into
inc
mov
pop
push
mov
mov
ret
outsb
dec
jno
stos
ds
enter
fistl
push
iret
sbb
push
add
cmp
int3
mov
inc
ja
push
mov
jb
cmp
mov
loop
push
out
das
jp
cmp
int3
cmp
inc
aam
inc
dec
or
xor
mov
ret
popf
ja
add
xchg
jo
xchg
push
sbb
mov
or
imul
push
inc
icebp
ficomps
jbe
faddl
mov
mov
adc
xlat
stc
inc
push
cmp
orl
jmp
sbb
enter
mov
dec
mov
and
das
or
ljmp
enter
adc
fcmove
adc
mov
xor
pop
test
or
lods
cmp
sahf
mov
cmp
int
push
imul
pusha
scas
out
dec
call
mov
xchg
or
dec
int3
xor
ret
loope
scas
mov
pop
sub
ficoms
sbb
lock
cmpsl
test
sbb
pop
add
test
lods
pop
dec
inc
test
jo
iret
lcall
lahf
mov
cmpsl
stos
test
cmc
les
lahf
and
xchg
stos
int
stos
fisttpl
cmpsb
sbb
or
aad
or
add
dec
dec
out
jl
adc
add
pop
pusha
and
sub
lret
mov
dec
call
cmpsl
adc
sub
push
pushf
sahf
mov
adc
mov
sub
lock
xchg
pop
or
mov
mov
rorl
pushf
cmpl
cmpsl
cmp
pop
mov
fwait
push
ja
push
mov
out
jae
and
out
adc
xchg
rol
sub
mov
loope
xchg
sub
hlt
sub
cmc
mov
dec
mov
sub
mov
mov
sbb
jb
iret
mov
xor
jp
add
mov
ret
stos
pop
push
inc
dec
and
add
and
pop
data16
pop
push
xchg
push
inc
xchg
xchg
push
xor
rorb
je
and
cli
sbb
dec
xlat
jp
xchg
jmp
cld
cmpl
xor
jl
xor
mov
adc
test
jae
cwtl
adc
xor
adc
test
idivl
sub
xchg
shrb
lock
movsb
in
and
fwait
adcb
aas
jnp
enter
push
decb
stc
mov
pop
mov
sub
sbb
pushf
adc
push
sub
cmp
cmc
or
jo
gs
cmpsb
push
ficomps
mov
xor
xchg
enter
dec
divb
cmp
in
mov
dec
aam
cmp
hlt
mov
imul
aas
mov
push
xchg
sub
rcll
cltd
sbb
std
cmc
shll
adc
pop
fistpll
into
add
adc
das
testl
aas
xchg
xor
dec
cmpb
jne,pn
outsl
adc
sahf
or
jns
lea
xchg
mov
sub
cmpb
dec
hlt
inc
pop
sbb
and
mov
mov
call
sbb
lcall
or
inc
and
cmp
mov
inc
dec
xchg
test
fs
xor
inc
cwtl
or
jmp
sbb
les
adc
dec
fimuls
shlb
sub
mov
lret
cwtl
sub
arpl
je
cmp
lahf
mov
push
stc
xchg
and
mov
sub
daa
pop
leave
test
cmpsl
in
cmp
mov
mov
shrl
movsb
jge
mov
fwait
xlat
dec
jb
stos
dec
push
add
lods
setl
xchg
adc
lods
loopne
es
push
cs
mov
sub
xchg
pop
repz
loopne
outsl
pop
pop
pop
scas
movl
cld
xchg
fwait
in
mov
inc
test
inc
pop
jns
mov
jns
cmp
call
sbb
sbb
adc
xor
and
push
or
sub
mov
jbe
stos
dec
xlat
xor
rcrb
push
loop
dec
mov
cmp
push
pop
adc
mov
jle
lods
mov
mov
mov
pop
ficompl
out
push
movsb
lret
xlat
imul
cld
inc
sub
out
gs
js
push
push
inc
insb
in
lods
lods
pushf
add
and
xchg
arpl
sbb
inc
ds
fisubl
adc
and
mov
js
pop
and
test
sub
shll
cwtl
lock
clc
int3
js
xchg
jne
js
rep
sub
loope
repnz
push
out
inc
scas
mov
add
daa
pushf
pop
jl
and
mov
cmp
add
mov
shll
insb
loopne
pop
push
pop
mov
adc
or
scas
lds
lea
xchg
sbb
sar
popa
std
xor
imul
lcall
lds
fnstcw
inc
sbb
xor
adcb
fst
mov
ja
mov
cmc
jns
mov
jno
repz
das
or
mov
into
scas
bswap
icebp
orb
into
or
push
pop
cld
pop
pop
sub
cwtl
cmp
sbb
sbb
mov
mov
lods
push
addl
jne
loop
sarl
pop
mov
jne
or
aam
cmp
xlat
ljmp
cwtl
push
repnz
mov
ret
sbb
imul
repz
cmc
aam
mov
mov
js
sub
cli
cmp
sbb
inc
dec
scas
jnp
stos
scas
dec
add
sub
gs
leave
or
addb
fucom
gs
push
int3
add
jmp
in
imull
stc
aam
mov
or
mov
scas
aad
adc
xlat
jno
ret
jle
xchg
aam
jno
mov
sbb
mov
cmp
jno
push
imul
xor
push
sbb
xchg
mov
fidivrs
push
jl
dec
and
and
inc
loopne
pop
subb
xor
xor
out
jb
test
jne
ret
jne
mov
sub
mov
out
mov
mov
pop
jle
loopne
or
sti
test
rcrl
jno
push
inc
pushf
test
add
je
in
mov
out
arpl
testb
sbb
sub
outsb
fnsave
mov
jae
insb
add
fistpll
inc
enter
mov
icebp
pop
ret
sarl
in
leave
mov
test
imul
dec
sbb
mov
mov
das
ficomps
push
sbb
inc
cwtl
sub
push
xchg
add
imul
outsb
jnp
push
jge
sbb
mov
insb
jns
xchg
movsl
jbe
bound
call
enter
xchg
stos
flds
movsl
and
psrlw
nop
pop
adc
jecxz
aad
cmc
dec
add
push
ja
popf
push
lahf
mov
insl
push
xor
pop
dec
mov
ret
and
inc
or
xor
jle
insl
iret
xchg
sahf
ljmp
outsl
out
cwtl
jle
stc
lds
adc
mov
mov
ds
sub
test
mov
sub
sarb
movsl
push
loopne
addr16
add
enter
jbe
es
int3
cld
cmp
mov
jp
mov
lahf
ss
insb
inc
cmpsb
jecxz
das
add
adc
in
cmp
sbb
jg
scas
in
hlt
nop
es
dec
out
cld
mov
push
and
xchg
scas
cmp
rcrb
xchg
sub
aam
icebp
xchg
sbb
test
and
pop
les
sbbl
sbb
jmp
jnp
popa
push
hlt
push
push
out
shl
movsb
pop
pop
pushl
or
adcb
xor
out
out
les
mov
loopne
mov
pop
mov
pop
inc
sub
xchg
pop
je
jno
dec
push
mov
adc
notb
add
cli
jle
stos
testl
sub
insl
push
imul
jecxz
xor
lock
inc
dec
les
imul
stos
dec
cli
adcb
push
fstps
cmp
cmp
ljmp
lods
jno
loopne
inc
or
out
inc
cmc
cmp
xchg
insl
xchg
inc
fs
xorb
cld
popa
gs
adc
rorb
jmp
sub
and
xor
jg
sbb
mov
daa
cmp
sub
inc
leave
inc
int
sbb
fildll
gs
ljmp
inc
insb
rolb
and
cwtl
icebp
ss
roll
or
jge
jmp
mov
jo
cltd
pop
aas
fstl
aad
mov
mov
shrb
sbb
aam
xor
adc
add
loopne
xchg
cmp
push
rorl
cmp
jge
xor
out
mov
pop
xor
lods
xchg
push
scas
stc
cld
scas
ljmp
mov
movsl
push
movsl
outsl
jl
test
adc
push
sbb
sub
pop
mov
add
push
adc
jae
lcall
ret
xchg
adc
sti
xor
cmp
jb
lahf
or
or
aaa
and
sub
mov
mov
shlb
insb
fisttpll
xchg
clc
orl
addb
mov
sub
repz
lods
inc
xchg
mov
loop
jle
mov
add
push
or
fdivr
push
in
sti
inc
adc
jns
mov
out
pushf
sahf
xchg
and
xor
outsl
out
mov
dec
jecxz
adc
mov
push
push
fbld
jmp
push
cmpsb
inc
jb
adc
mov
xorb
fiaddl
fst
lea
add
lds
mov
dec
or
xchg
dec
mov
xchg
mov
sbb
adc
mov
mov
mov
mov
lds
int
aad
push
pushf
jg
cmp
popa
inc
ljmp
push
push
or
gs
pushf
cmp
cmp
jl
inc
cltd
cmp
in
sbb
js
stc
rorb
int
push
adc
jnp
jno
xchg
movsl
lock
out
mov
rcll
inc
mov
adc
fistpl
cmpsb
cli
lods
xchg
jl
xchg
jl
cli
jb
popf
mov
push
pop
sbb
sub
xchg
stos
add
sub
lcall
rorl
arpl
popl
fstpl
pusha
popf
test
aaa
dec
in
mov
sub
cld
cld
xchg
in
sahf
scas
jo
ret
inc
in
test
packsswb
adc
out
rolb
pop
cltd
js
pusha
popa
lret
or
inc
and
call
mov
pop
mov
dec
scas
lods
daa
adc
pop
lds
loop
cmp
jmp
insb
call
mov
es
cmp
mov
sbb
push
inc
sbb
and
imul
mov
dec
jnp
mov
cmp
mov
loop
sub
sub
pop
cmpb
or
push
ds
mov
inc
in
pop
pcmpeqw
int3
call
push
xor
outsb
jl
jbe
sarb
dec
push
or
mov
pop
sub
insl
aaa
cmp
les
push
dec
push
dec
push
and
push
xchg
int3
or
inc
xor
in
inc
push
sbb
cmp
adc
negl
xor
roll
sbb
cmc
outsb
push
jle
or
adc
dec
cld
mov
add
mov
test
push
push
std
cwtl
mov
jmp
adc
adc
scas
iret
push
test
movsl
adc
imul
pushf
fisubrs
pop
sarl
and
pusha
lds
push
gs
je
lock
bound
hlt
pop
aas
mov
mov
adc
cmc
mov
or
xor
mov
test
mov
shll
push
jmp
ja
mov
mov
sub
loopne
pop
sub
mov
jl
mov
out
rcrb
inc
shrb
cmpb
rclb
mov
mov
outsb
stos
cmp
and
jo
mov
dec
cltd
push
xchg
sbb
jne
repz
stc
push
or
leave
push
int3
mov
pop
ja
mov
xor
aaa
pop
and
iret
fwait
push
jle
adc
push
mov
push
int
outsb
push
mov
in
ret
push
mov
mov
imul
rorb
out
sbb
add
das
xchg
in
jg
aaa
pusha
ror
fistpll
and
sub
jl
out
push
repz
ds
test
jle
mov
inc
xchg
pop
leave
into
sub
cmpsl
subb
addr16
fs
sbb
lret
push
insb
adc
jno
push
arpl
add
jmp
push
push
adc
mov
and
and
fcoml
cmp
sahf
loopne
jno
jecxz
shll
sbb
sbb
dec
in
dec
les
xchg
sti
dec
jle
mov
mov
js
aas
push
fwait
sbbl
mov
xchg
inc
mov
xchg
test
or
pop
cmc
mov
fsubl
sbb
out
mov
xchg
loop
insl
leave
add
mov
add
mov
mov
rorl
movsb
pop
jle
outsl
je
push
lahf
dec
fs
negb
mov
out
scas
push
cmp
hlt
push
xor
lock
mov
sub
hlt
pushf
push
push
mov
mov
idiv
sub
test
bound
mov
out
scas
mov
hlt
fists
sahf
pop
add
idivl
bound
mov
jo
push
fcomip
sahf
push
cli
js
mov
scas
mov
mov
push
cld
mov
pop
xor
js
je
ljmp
sub
sbb
dec
scas
sbbl
rorb
pop
movsb
xchg
jns
push
and
xchg
outsb
je
pop
sahf
push
shr
inc
xchg
or
aam
mov
xchg
shr
divb
pop
inc
les
adc
cmp
data16
mov
push
pop
xchg
mov
pop
sahf
movsb
inc
push
inc
dec
cli
scas
mov
adc
push
xor
dec
cmp
jge
push
inc
test
mov
mov
pop
sub
mov
ds
push
fdivr
into
cmpsb
mov
ja
pop
cwtl
out
das
fisubl
adc
jmp
es
sub
add
cli
cli
ret
jae
cmp
xor
mov
data16
or
daa
aam
xchg
push
daa
hlt
jecxz
adc
test
and
inc
lcall
xchg
or
mov
movsb
pop
lcall
cmp
fiadds
jb
das
cmpsb
addr16
stos
xchg
pusha
outsl
push
movsb
es
test
fbld
adc
movsb
lret
addr16
cmpsl
mov
dec
xchg
shl
fldln2
cmp
push
sti
testl
aad
or
or
xchg
testb
das
imul
pop
pop
leave
data16
add
inc
fidivrl
mov
adc
shrl
adc
lea
sub
test
pop
or
cmp
aad
mov
and
dec
sbb
xchg
imul
mov
cmpsl
leave
lods
add
push
mov
shl
out
fwait
xor
and
cmp
in
lcall
enter
pop
mov
or
ret
adcb
enter
addb
inc
push
inc
popa
ds
or
pop
gs
adc
add
mov
aaa
and
pop
dec
sbb
int
dec
dec
xor
pop
inc
sbb
push
stc
inc
ss
mov
test
add
lahf
xchg
movsb
ficomps
loope
imul
push
fists
scas
xor
movsl
cmpb
divb
jmp
xor
out
mov
fbstp
sarb
lcall
and
dec
stos
push
sub
mov
ja
pop
popa
fs
mov
lods
inc
inc
push
mov
xor
lods
fistpl
sub
out
or
ja
lea
and
ja
pop
inc
mov
sub
pop
jmp
movsb
xor
jmp
sbb
xor
or
mov
xor
push
or
xchg
lods
insl
inc
xchg
xor
or
movsb
inc
out
inc
mov
jg
mov
xchg
daa
mov
mov
pushf
or
in
push
inc
xor
idivl
lret
and
mov
jp
ds
sub
shlb
popa
push
mov
cwtl
jl
in
mov
add
cwtl
inc
xor
xchg
push
sar
mov
arpl
mov
mov
dec
addl
test
mov
or
rorb
in
dec
jns
cmpsl
insl
sti
pushf
xlat
lods
dec
and
cmp
inc
popf
fcomps
les
sub
jecxz
cmpb
sub
pushf
adc
and
imul
jnp
je
push
mov
pop
jbe
xor
sub
jns
fldenv
push
mov
leave
jmp
pop
adc
mov
mov
loope
stc
lret
mov
sub
mov
int
jne
bound
cmovl
jp
mov
jo
lods
lock
mov
mov
ret
lods
fldenv
loopne
push
adc
adc
lea
add
jge
add
dec
ja
loope
loope
xchg
jbe
rorl
lea
stc
test
mov
mov
outsl
xor
push
ss
mov
adc
and
mov
in
loopne
in
xchg
das
xchg
cmp
sbb
pop
jns
fdivp
lds
std
ds
sti
sub
xchg
scas
push
cltd
shll
loope
jmp
adc
mov
enter
pusha
cmc
lods
xchg
dec
in
xchg
push
nop
jge
or
testl
sub
sub
mov
mov
mov
cli
mov
aaa
jo
xchg
into
scas
mov
repnz
dec
ret
inc
stc
push
pop
scas
push
cmc
movsl
cmc
or
adc
mov
gs
pop
jg
frstor
xchg
popa
push
sbb
movsl
sbb
int3
and
cmc
ljmp
cli
mov
pop
imul
cmp
das
xor
in
inc
int
cmpsl
mov
cmp
adc
jne
sub
shrb
mov
popa
gs
lret
std
pop
push
xorb
cmp
ret
dec
add
fldcw
jl
and
out
pop
push
xchg
add
push
stos
push
outsw
mov
push
push
repnz
pop
push
pop
loop
js
lods
xchg
jge
lock
outsl
push
inc
sub
andb
out
scas
hlt
shlb
out
insb
repz
mov
cli
jecxz
ret
cmp
in
sbb
xchg
dec
mov
movsb
sbb
mov
dec
inc
dec
pop
test
pop
in
fs
icebp
mov
lods
imulb
xor
cmp
cmc
adc
iret
add
in
mov
scas
inc
imul
or
push
pusha
out
mov
sub
out
rcrb
repz
inc
push
push
pop
mov
lret
mov
mov
jb
lret
or
cli
jg
aam
mov
or
inc
pushf
rclb
sbbb
xor
adc
sub
adc
loop
int
push
jns
loope
adc
iret
dec
repnz
xchg
sbb
push
fnstenv
sub
xchg
jg
sub
pusha
cltd
rorb
cmpsb
jecxz
mov
loop
jbe
jnp
mov
inc
ret
mov
imul
pop
repz
cld
stc
pop
mov
add
mov
dec
aad
aas
xor
xchg
pop
sbb
mov
cmp
fistps
adc
sbb
sub
in
int3
movsl
xchg
xchg
jmp
mov
outsb
jbe
in
fwait
sbbl
sbb
add
aam
lahf
jno
cli
jno
pop
pop
dec
mov
movsb
sub
jmp
out
ret
sbb
in
add
or
add
jnp
xor
out
adc
pop
or
jb
mov
aad
xor
popa
in
ret
test
insl
jp
fimull
test
fstps
pusha
jg
adc
cmpsl
cmp
fisubs
into
pop
imul
lock
sub
cmp
dec
insb
inc
lret
mov
pop
mov
jp
pop
mov
adc
cmp
aas
mov
push
das
in
aaa
dec
sub
test
ljmp
lock
nop
xor
or
xchg
xchg
add
leave
sbb
pop
cmp
mov
loop
push
sbb
imul
jecxz
stc
idivb
rclb
incl
das
stos
xlat
cmp
lret
mov
lahf
push
adc
mov
mov
mov
sahf
add
pop
or
mov
movsb
pop
sbb
mov
jmp
sub
add
jecxz
inc
imul
stos
mov
jae
xchg
inc
add
mov
lahf
leave
jnp
in
aaa
pop
sub
adc
in
pop
mov
cltd
xchg
jecxz
push
and
push
or
loope
stos
xor
mov
push
cwtl
cmp
jmp
popf
es
sub
loop
push
dec
inc
stos
jge
pop
andl
inc
fistpl
jnp
inc
shlb
popa
cmp
int
push
outsb
push
xor
pusha
sbb
and
ja
cmpsl
add
push
adc
jnp
mov
mov
cmp
mov
cmpsb
es
outsb
icebp
test
in
push
or
and
clc
adc
addb
mov
test
or
out
les
mov
daa
insl
inc
sbb
test
mov
or
nop
dec
lahf
cmp
inc
sbbl
dec
loop
xlat
leave
out
push
cmp
jg
mov
jl
fwait
int3
aad
jns
in
bound
xchg
out
call
popf
cld
adc
sbb
pop
int
and
jnp
outsl
mov
mov
dec
cmpsl
xor
push
push
xchg
imul
jl,pt
jp
clc
movsl
sarb
fldcw
mov
repz
test
in
mov
and
shlb
xchg
mov
fcompl
lahf
mov
adc
pop
pushf
leave
sub
cld
lret
push
jl
shll
cmp
add
movsb
or
jne
js
fisubrs
sub
inc
jb
adc
jecxz
loopne
cmpsb
mov
sbb
inc
add
xchg
ja
inc
jno
aaa
jmp
mov
lahf
leave
jge
push
push
bound
lds
pop
add
jbe
dec
pushl
xor
inc
movsb
stos
xchg
cmp
cmc
cli
les
add
xor
sbb
sbb
add
out
or
addl
jmp
xchg
xchg
rorb
xchg
sub
inc
sbb
int3
mov
inc
pop
lods
lcall
cmpsl
mov
jmp
lret
hlt
gs
add
xor
notb
cmp
fdiv
hlt
in
fadd
pop
mov
mov
mov
shrl
loope
xchg
in
sarl
icebp
jmp
cmpsl
int
adc
int
idivl
xlat
iret
and
add
jo
fldcw
inc
jmp
xor
push
or
add
sub
movsb
mov
pop
and
adc
and
int3
add
mov
sbb
cmp
movsl
cmpsb
cli
mov
jp
inc
int
cmpsb
movsl
inc
mov
ss
adc
dec
mov
pop
dec
fneni(8087
rcrb
testb
bound
cmpsb
mov
push
push
pop
jmp
xchg
push
inc
or
add
sbb
push
mov
or
das
mov
test
imul
xor
fs
shrb
nop
jmp
sbb
push
xchg
rol
fstl
adc
xchg
ret
and
sbb
cmpb
subl
ss
repz
and
movsb
int3
dec
out
ds
ds
test
outsb
out
test
xor
pop
cmp
pop
fs
sbb
inc
pop
xor
pop
leave
push
repnz
sbb
outsl
mov
ja
addr16
loop
pop
jle
andl
dec
jne
mov
inc
sub
aas
pop
mulb
sub
mov
and
and
out
mov
or
jno
cmp
mov
scas
pop
or
and
repz
aaa
xchg
je
sahf
and
popa
mov
sub
lock
xchg
jl
sti
lahf
mov
push
cmp
subb
add
cmp
mov
mov
hlt
pop
out
push
inc
inc
fisttps
add
js
mov
cmpsl
sbb
mov
loope
and
inc
push
pushf
out
sub
fwait
test
or
shlb
mov
popa
cmp
lods
leave
into
lods
xor
and
iret
adc
fnsave
in
test
stos
and
xor
add
dec
ret
jno
sbb
sarl
jmp
mov
movl
jae
dec
pushl
ret
dec
sub
and
fwait
in
loopne
dec
mov
cmp
jg
push
clc
in
repz
je
push
jbe
dec
scas
mov
xor
push
mov
cld
lods
shll
out
jp
xor
mov
adcb
adc
lods
add
mov
inc
jns
arpl
mov
addr16
cs
or
cmp
pop
jb
push
test
pop
push
rcr
pop
stos
mov
push
mov
gs
push
add
loope
bound
lea
xchg
jo
mov
inc
dec
jne
jge
and
mov
push
addr16
addr16
out
testb
mov
loop
xchg
aad
sar
push
jbe
cmc
jg
sbb
cmpl
clc
andl
xor
mov
sahf
rcr
mov
and
pop
hlt
cmp
pop
mov
sbb
out
dec
jge
xchg
fisubrl
rolb
dec
and
mov
dec
jecxz
pushf
mov
mov
daa
xlat
mov
cmp
into
lods
xor
fcoml
jge
mov
mov
cmp
adc
adc
aas
pusha
outsl
add
xchg
sub
mov
cs
or
or
add
add
push
xchg
inc
fs
ret
xor
adc
and
adc
lods
ss
je
jp
pop
popf
xchg
jp
add
daa
mov
aam
test
cli
je
sub
cli
enter
cmpsb
xchg
push
xchg
push
sbb
mov
lea
push
cmp
sub
push
push
push
add
mov
add
mov
nop
mov
daa
xchg
and
mov
cmp
and
arpl
inc
mov
jbe
in
jle
in
mov
in
ja
jge
and
fmuls
hlt
mov
bound
fildll
mov
mov
push
out
ror
inc
push
jp
and
dec
subb
mov
aaa
jno
sbb
push
jb
pop
outsb
out
xor
xorb
sbb
fisubrs
sahf
ret
imul
sbb
jle
cmp
mov
push
xor
lcall
fcom
fsub
jecxz
pushf
add
outsl
jne
dec
in
inc
idivl
enter
clc
insb
popa
mov
in
fsts
jns
lock
in
sub
and
add
fiaddl
mov
sbb
jae
push
ss
fs
sub
stc
icebp
cmp
sub
inc
mov
out
inc
pop
mov
push
sbb
clc
xchg
pop
imul
fimull
int3
lret
or
shlb
xchg
jb
in
mov
and
xchg
es
adc
xor
mov
mov
push
vcvttps2dq
lods
movsl
test
jne
ljmp
inc
lock
shlb
ret
test
scas
shlb
pop
xchg
xor
jb
dec
adc
sbb
divl
mov
jnp
mov
sahf
out
push
sbb
daa
icebp
ja
mov
lea
xor
mov
pop
or
xchg
xor
insb
jne
sarl
sbbl
orl
sub
cmp
in
and
out
sbb
add
add
push
out
stos
mov
stos
jnp
lcall
mov
int
or
in
sahf
sbb
imul
lahf
sbb
mov
test
push
dec
into
or
push
cmp
hlt
movq
cmp
dec
push
orl
jae
movsb
xor
notl
into
lret
addb
popa
adc
hlt
into
cmpsl
add
pop
push
ret
push
pop
mov
push
insb
pop
and
icebp
mov
test
or
mov
jmp
jecxz
jno
js
dec
mov
or
add
xchg
or
out
imul
jmp
pop
lsl
test
dec
mov
nop
xchg
mov
cwtl
sub
subl
or
testb
xor
dec
nop
push
je
xchg
mov
enter
cli
in
fbld
push
mov
gs
dec
shll
lds
out
push
pop
pop
inc
dec
inc
mov
adc
lret
subb
jle
int3
xchg
fwait
int3
fwait
test
mov
sbb
mov
add
jl
mov
pop
loope
es
ja
or
jecxz
inc
jle
adc
sub
sbb
aam
xchg
mov
pop
vmovups
or
mov
inc
sarl
call
leave
xlat
imul
sbb
add
es
sbb
or
push
loope
xchg
andb
xchg
dec
lods
out
leave
lret
sbb
insb
xchg
inc
pop
stos
add
xchg
std
xor
insl
sbb
mov
mov
adc
sbb
mov
lock
jl
add
cs
pop
pop
js
mov
push
fnstsw
mov
mov
jne
mov
sbb
fidivrl
mov
mov
add
fcmovnbe
cmc
inc
rcr
inc
bound
jo
loope
scas
xchg
daa
sbb
jbe
aam
cmp
sbb
and
xchg
xor
dec
ret
imul
push
and
and
xchg
xchg
pop
jns
notb
scas
mov
insl
shrl
pusha
and
nop
fmuls
cmp
add
mov
mov
lcall
pushf
adc
fsubr
outsb
pop
pop
ja
popf
loopne
push
js
inc
or
push
jno
popw
and
fists
mov
je
loopne
xchg
mov
push
mov
xchg
jb
mov
or
add
hlt
inc
mov
int3
mov
arpl
fsubrl
imul
ss
gs
mov
aas
hlt
sti
jle
das
ja
aam
lret
shrb
mov
out
movsl
mov
nop
jnp
jmp
mov
xlat
test
and
nop
jb
sbb
sub
add
pop
jnp
mov
mov
jno
aaa
sti
pop
out
xlat
movsb
notl
cwtl
inc
test
enter
push
and
popf
xor
daa
adc
push
cmp
shr
mov
repnz
mov
mov
xchg
cmp
ret
or
mov
test
mov
add
outsb
mov
and
push
jae
out
jne
mov
outsl
lock
pop
notl
movsl
cmpsb
stos
scas
cmpsl
fidivrs
out
or
and
shrl
mov
cli
das
pop
or
mov
inc
adc
ds
gs
sub
or
jg
stos
mov
dec
jbe
adc
inc
negb
frstor
add
lds
arpl
mov
mov
mov
loope
sar
jae
sub
inc
xchg
sub
mov
scas
add
iret
jl
fcmovnbe
sub
fcompp
mov
jle
test
inc
jl
jns
mov
and
loopne
and
adc
mov
outsl
fisttpll
stos
outsl
jbe
std
in
out
ss
lea
outsb
lcall
jge
xchg
cmpsb
inc
push
and
jbe
popa
dec
fisubl
lods
jns
xchg
adc
fdivl
mov
sub
insl
imul
xor
inc
inc
in
xchg
and
mov
sbb
addb
dec
adc
mov
popf
pcmpgtb
rol
inc
fcomip
jmp
out
xor
and
mov
jne
push
mov
xchg
cli
dec
loope
push
outsb
jmp
mov
cmp
pop
mov
fsubr
lea
and
call
loop
mov
push
btr
mov
shlb
add
ret
fisubs
sbb
stc
clc
lea
test
sub
aam
sbb
push
inc
or
popa
repnz
stos
lret
xor
jb
imul
xchg
pushf
cmpsl
adc
mov
test
push
fcomi
push
shlb
stos
push
mov
push
jl
mov
fwait
in
push
mov
xchg
inc
dec
lcall
iret
jnp
scas
subl
xor
data16
or
cld
pop
aaa
cmp
add
jns
xchg
into
jb
out
jb
jae
pop
ficomps
push
dec
sub
dec
cmpsb
xchg
ljmp
movsb
inc
mov
fs
add
gs
pop
sbb
nop
cmp
faddl
daa
xor
sbb
push
inc
sub
fadds
inc
inc
jb
int
into
imul
ds
or
out
call
test
in
aas
xor
adc
fwait
jecxz
rdmsr
insb
inc
or
add
ret
or
leave
cmp
mov
push
imul
jge
push
gs
dec
icebp
mov
pop
add
ja
arpl
cmp
pop
out
add
test
jl
mov
out
test
loopne
test
into
add
cmp
cwtl
lock
imul
mov
bound
cmovo
test
mov
xchg
scas
mov
ss
cmpsl
pop
pop
fs
aam
pop
daa
ja
sti
insl
aaa
pusha
inc
dec
sub
lahf
ds
xchg
int
lods
lock
push
cwtl
in
lret
enter
dec
sarb
int
scas
pop
out
das
shlb
dec
sub
sub
lcall
out
les
mov
stos
cmpb
push
inc
test
push
in
std
xchg
pop
lds
jmp
fwait
pop
clc
jb
xchg
xchg
stos
push
out
je
mov
dec
dec
or
rcr
js
jns
popf
jl
pop
pop
int3
push
addr16
pushf
xor
fdivs
ret
inc
sbb
mov
mov
imul
int
mov
dec
hlt
add
es
inc
testl
loopne
enter
movsb
inc
test
enter
rcrb
push
push
sbb
fsubrp
test
cwtl
pop
scas
fcoms
mov
push
das
jp
sbb
repz
and
push
in
jae
push
pop
sub
jae
ss
shr
xchg
push
cwtl
sub
push
fisttps
jmp
mov
cmc
pop
fdivs
lock
xchg
rorb
cmpsb
jns
fadds
ljmp
setp
sbb
sbb
ja
popa
xchg
cmp
mov
xor
pop
push
adc
add
inc
int
lahf
ret
push
adc
jo
in
arpl
xlat
jle
addr16
out
sub
insl
sub
sbb
dec
addr16
and
fcmovb
test
pop
iret
or
aam
mov
xchg
les
inc
fidivrl
jo
movsl
and
dec
outsb
mov
inc
dec
xchg
jnp
notl
out
lcall
jb
rcll
imul
pop
cli
xor
mov
add
xchg
lea
fidivl
adc
cwtl
ds
std
movsl
addl
cmpsb
fildll
pop
jl
jge
or
sbb
dec
push
sbb
fcom
and
jns
lock
aad
cli
loope
aad
inc
pop
sbb
shl
dec
pop
fwait
mov
lds
mov
sbb
lcall
gs
and
es
fdivs
adc
mov
movsb
les
dec
jp
jae
loope
test
std
xchg
ja
sub
xchg
loopne
xchg
cltd
xchg
ret
pushf
ja
aaa
pop
or
add
ljmp
fbld
hlt
inc
sbb
fs
test
fildl
bound
jo
mov
lods
mov
xor
dec
mov
jb
adc
xor
repz
and
sub
leave
and
les
adc
sbb
pop
dec
gs
jge
or
xor
pusha
lea
mov
push
leave
and
mov
lret
imul
mov
ja
test
inc
jmp
push
shll
fisubrs
stos
push
inc
ss
arpl
cmp
inc
fldcw
sbb
out
push
outsb
jne
subl
pop
xchg
test
mov
bound
stc
or
out
inc
mov
add
cmpsl
inc
cmp
jmpw
mov
adc
jmp
mov
xor
push
pop
stos
sbb
cmp
cmp
adc
inc
mov
leave
mov
sub
xchg
mov
popa
dec
mov
sub
dec
dec
out
test
clc
mov
mov
xor
sub
dec
adc
mov
xchg
pop
sbb
push
pop
push
lods
lods
dec
pop
repnz
test
jp
xchg
leave
cltd
cmp
xlat
jl
fwait
mov
into
sub
push
mov
mov
mov
imul
sub
in
fimuls
ret
imul
psrad
or
lcall
xchg
stos
fwait
ja
test
je
repnz
mov
in
mov
mov
xchg
je
lret
popf
add
mov
lcall
or
fisttpl
mov
dec
xchg
inc
add
jle
cmp
subb
jo
into
mov
sbb
hlt
mov
int3
pop
fdivr
ficoms
inc
jae
sbbl
popa
out
stos
enter
lret
push
jnp
mov
nop
pop
push
aas
gs
je
mov
xlat
ss
repnz
mov
jp
enter
xchg
jl
mov
idivl
cmp
pop
sti
cltd
mov
lds
out
xchg
dec
pop
daa
xor
lods
insl
xor
call
sahf
xorb
push
adc
aad
mov
cld
xor
imul
stc
pop
pushf
jne
cs
fisubrs
mov
loopne
cltd
xchg
pushl
lock
xchg
aaa
xlat
inc
lcall
into
mov
or
stc
sub
pushf
in
movsl
or
addl
mov
mov
jnp
popf
pushw
enter
xchg
in
adc
pop
and
dec
inc
mov
shr
sub
insl
movsl
dec
xchg
push
imull
mov
ret
sbb
xchg
les
cli
push
jecxz
pushf
ds
mov
pop
add
pop
push
inc
jno
daa
pop
adc
cmp
ret
mov
fwait
loopne
rorl
imull
call
scas
lcall
test
mov
jmp
movzbl
mov
cmp
addr16
sub
outsb
mov
out
and
jnp
ja
insb
ds
xor
adc
enter
pop
lcall
std
inc
test
icebp
dec
pop
das
add
mov
dec
adc
cmp
and
movsb
movsl
mov
mov
lcall
ss
daa
mov
mul
aas
jecxz
inc
add
ret
pushl
je
adc
adc
in
xchg
adc
pop
add
fcomp
inc
xchg
shlb
fidivl
inc
in
mov
pop
xor
mov
sub
adc
inc
mov
stos
or
jmp
sarb
sub
leave
push
xor
fcoml
ffree
fwait
call
loop
jp
xchg
int
in
add
xchg
fwait
dec
pop
push
andb
cltd
out
adc
int
mov
lret
add
stc
dec
jae
push
cmp
sbb
xchg
ret
ret
and
jno
ljmp
jns
jae
pushf
or
mov
call
jne
gs
xchg
sub
or
lock
xchg
jo,pn
mov
sahf
mov
test
dec
mov
into
pop
jae
in
sub
test
out
popf
sbb
fmull
mov
stc
lock
sub
scas
aas
xchg
jb
dec
push
cmpsl
popa
push
jne
dec
inc
movsl
test
movb
pop
test
mov
cmpsb
aas
pop
sbb
fst
mov
jae
xchg
xchg
inc
mov
push
xor
ljmp
add
mov
pop
pop
push
lret
test
lods
dec
or
fwait
jns
scas
dec
in
mov
dec
xor
sti
aad
mov
mulb
jmp
adc
xchg
mov
mov
adcl
fimuls
mov
cmp
ficoml
xor
xlat
sub
iret
sub
js
stos
ret
pop
mov
mov
mov
add
pop
jg
mov
fdivp
xor
ss
dec
xchg
cltd
fidivrs
mov
rorl
jbe
add
push
into
outsl
das
push
and
push
mov
mov
cmp
stc
inc
adc
push
adc
sarb
xor
int
add
mov
xor
cmp
push
mov
lret
ja
adc
lahf
fimuls
mov
inc
shll
insb
mov
dec
xlat
loopne
movsb
mov
pop
cmp
push
pop
je
in
adc
dec
pop
stos
aam
movsl
mov
adc
adc
sub
dec
mov
repz
xchg
adc
js
xchg
pop
add
out
mov
adc
mov
xchg
lods
mov
and
add
clc
mov
ja
mov
repnz
mov
ds
fidivrl
mov
adc
dec
insb
addr16
or
ljmp
iret
cmpsl
fistps
icebp
das
or
dec
pusha
call
sub
movsb
inc
std
sahf
iret
adc
xor
pop
and
movsb
sbb
or
les
jns
test
outsl
clc
cmp
push
mov
hlt
and
roll
aad
clc
mov
cs
push
mov
mov
ss
push
and
daa
xor
sub
xchg
in
or
cmp
xchg
adc
jnp
or
pop
cmc
inc
sub
fwait
mov
mov
fistps
mov
ds
xchg
mov
jne
jnp
and
dec
sbb
in
add
aam
into
sbb
inc
push
in
fs
mov
jne
mov
rcrl
xchg
jecxz
pop
jne
out
jb
and
cmpsl
movsl
mov
stc
ds
aad
push
insb
nop
or
push
lds
and
pop
xchg
push
sub
or
lcall
jl
out
lods
ret
test
or
lds
mov
rorb
mov
pop
jge
into
mov
ftst
mov
divl
fadd
inc
mov
add
js
jp
sti
outsl
sbb
push
cltd
pop
mov
jne
mov
pushl
and
jb
divl
mov
cmp
mov
sbb
stc
cltd
out
sbb
or
insb
arpl
mov
fcmovnu
pop
pop
jg
mov
std
push
mov
adc
mov
lret
xchg
out
test
jnp
inc
jno
xor
rorl
push
mov
add
add
dec
lea
xchg
mov
adc
sub
out
or
mov
pop
jnp
movsl
dec
iret
jecxz
mov
push
jp
divl
push
mov
fdivs
lahf
mov
and
test
xor
xchg
clc
mov
in
sarb
sub
out
aad
popa
jle
xchg
or
daa
loopne
xor
ret
add
mov
xchg
cld
lret
popf
add
call
pop
and
popa
std
aaa
hlt
cmp
cwtl
pop
inc
jns
xorl
imul
jp
push
xor
jp
push
cmpsb
test
or
lahf
lods
inc
imul
outsb
stos
aam
cld
and
pusha
cmpsl
sub
mov
insl
dec
mov
fs
stos
or
jbe
cmpsl
ffree
add
xor
push
push
jmp
in
jne
mov
adc
dec
das
cmp
rorl
shll
leave
mov
cmp
push
fdivrl
add
mov
adc
out
pop
or
std
js
push
dec
xchg
push
pop
out
adc
lea
ds
ret
inc
adc
xchg
dec
sbbb
or
bnd
push
or
adc
xchg
pushf
ds
lret
gs
push
mov
sub
add
mov
pop
clc
jecxz
aaa
push
iret
sub
cmp
es
cwtl
push
scas
sarl
lret
xor
xor
sarb
push
lcall
stos
mov
push
jmp
dec
adc
stos
loope
cmpsl
jge
gs
push
xchg
jo
filds
and
ret
cli
or
mov
in
out
out
cmp
enter
test
sub
and
cmp
or
push
inc
aad
jbe
stos
dec
insl
jae
dec
sahf
push
sbb
ljmp
rolb
sub
inc
fcmovnu
xor
lcall
bound
inc
test
mov
popa
in
mov
bound
xchg
into
mov
rcrl
adc
push
testb
in
push
jecxz
dec
inc
jecxz
mov
testb
fs
scas
cmc
xchg
dec
subb
std
mov
sub
stos
push
rcrl
jmp
pop
cmp
cs
test
cmp
inc
pop
push
lock
inc
jbe
push
sbb
mov
vpsraw
lcall
testb
xor
xchg
sub
adc
popf
mov
xchg
outsb
pop
mov
fdivp
inc
mov
pop
inc
leave
imul
cmp
pop
fbld
in
sbb
enter
mov
push
rcr
jno
sbb
mov
xchg
in
and
aaa
xchg
xor
cmpsl
lds
pop
insl
xchg
or
in
imul
xor
leave
js
push
or
loop
popf
xchg
sarl
add
hlt
mov
push
lret
mov
xor
outsl
cltd
fcmove
jb
data16
hlt
call
push
arpl
insb
jmp
fisttps
int3
dec
xor
jl
jge
insb
and
popa
pop
pop
adc
adc
ret
or
fstl
into
loope
mov
jmp
mov
cmp
ljmp
out
andl
std
rcr
mov
and
call
outsb
shr
in
pusha
sar
sub
insl
and
push
sub
sbb
cmp
xlat
movsl
fsubrl
or
dec
mov
nop
outsl
sti
and
jp
test
repnz
xor
enter
mov
orl
push
lcall
xchg
aas
test
out
decl
xor
js
adc
xor
sbb
test
gs
mov
stos
inc
mov
sar
int
xchg
cmp
lret
mov
jp
stos
xchg
stc
push
inc
adc
push
cwtl
adc
inc
je
in
outsb
cmp
in
mov
cmp
adc
push
in
iret
shrl
lret
mov
jg
pop
scas
inc
into
popa
jecxz
xchg
mov
jmp
or
arpl
les
sub
and
sbb
unpcklps
sbb
loopne
movsl
rclb
daa
push
xchg
mov
add
pop
mov
sbb
shrb
cltd
pop
imul
pop
pushf
and
mov
push
imulb
or
xor
sahf
rcll
frstor
cltd
daa
not
inc
int
cmp
lcall
sub
mov
shlb
loop
or
out
add
mov
ja
sbb
insb
loop
sbbl
sbb
mov
aas
aam
ret
push
sub
and
test
mov
pop
outsb
sub
mov
and
hlt
dec
nop
jnp
and
pop
dec
scas
jmp
bound
dec
mov
and
stos
mov
jmp
loop
leave
fsubr
out
jno
dec
div
sbb
jns
push
ds
scas
mov
movsl
pushl
jae
mov
sbb
ret
cltd
nop
jg
mov
out
out
lahf
inc
or
mov
adc
cltd
cmpsb
and
xor
cmp
in
hlt
xchg
pop
mov
cmp
sbb
and
xchg
mov
cmp
pop
adc
adc
pop
xchg
push
imul
add
push
std
cltd
dec
sub
cmp
aam
sub
sbb
rolb
popf
nop
mov
imul
sar
xor
jmp
xor
je
dec
cmp
jb
mov
jg
dec
sub
out
lret
or
push
cwtl
mov
sub
leave
loope
add
popf
and
dec
xchg
shl
scas
xchg
jae
pusha
das
xchg
xchg
imul
and
xchg
dec
pushf
test
shll
ds
imul
loope
xchg
and
push
push
add
pop
test
xor
dec
or
test
shrl
pushf
scas
mov
loope
pop
popf
xchg
mov
jno
clc
cmp
imul
sbb
pop
pop
or
stos
lea
mov
sahf
in
lahf
testb
adc
add
inc
rorl
mov
ja
nop
xor
sbb
push
jge
sti
clc
and
lahf
cmp
jo
shll
enter
jge
aaa
jne
dec
fwait
sub
roll
mov
push
xor
lods
test
mov
divb
in
fimuls
mov
jp
andb
and
std
inc
leave
pop
add
xor
test
and
cmpsl
std
sbbl
mov
inc
jne
or
pop
ss
or
outsb
arpl
fdivrl
cmp
dec
bound
xor
sbb
push
mov
or
and
pop
pop
aas
sub
push
sub
jae
fmulp
push
pop
in
mov
xchg
rclb
fs
cmp
pop
inc
data16
dec
xor
jo
into
scas
addr16
stos
xor
inc
and
xchg
cmp
and
in
clc
push
loop
lea
jno
mov
mov
jbe
cld
test
aam
dec
and
sbb
adc
negl
jno
inc
out
in
xlat
adc
pop
fsub
mov
inc
outsb
sub
lods
push
filds
mov
pop
jbe
mov
mov
and
arpl
inc
inc
sarb
jg
jae
inc
inc
cld
int3
jge
mov
inc
cmp
cmc
or
lock
push
jb
shlb
fcmovnb
ss
xlat
pushl
or
inc
push
int
xor
cmpsb
lods
add
das
sub
out
mov
lcall
inc
pusha
push
sbb
jmp
idivb
push
inc
xor
add
push
ljmp
repnz
sbb
ret
cwtl
scas
out
adc
inc
imul
jecxz
dec
add
or
fsubs
xchg
clc
dec
sub
out
jne
jl
icebp
movsb
sbb
in
mov
jnp
scas
mov
xor
call
add
xchg
shlb
or
push
cmpsl
mov
lock
sti
push
aad
sub
push
push
mov
lret
dec
xor
cmp
pop
scas
sbb
pop
cmpsl
lods
pop
push
ficomps
push
mov
xor
sub
sub
or
ficoms
cs
push
popf
pop
sub
inc
mov
fnsave
push
test
or
les
xchg
push
and
jb
sub
bound
rcr
mov
mov
xchg
adc
rcrb
mov
fwait
and
cmp
pop
cmpsl
divb
sub
pop
jb
push
pop
add
pop
mov
btc
jg
call
and
movsb
icebp
mov
cltd
fs
aas
aaa
pop
addr16
push
aam
jp
shrl
mov
outsb
fdivrs
jg
cmp
mov
adc
leave
jnp
dec
aam
sub
jge
jge
jmp
inc
pushf
mov
add
mov
xor
nop
inc
inc
sbb
fiadds
dec
mov
mov
cmp
repz
sti
testb
sbb
lock
lea
outsl
mov
lods
pop
jae
push
out
jne
in
hlt
xor
xor
xchg
out
loopne
pusha
sbb
mov
and
in
adc
sub
xchg
ret
mov
invd
cmc
sti
xor
add
outsl
mov
push
xlat
xchg
xchg
jno
fsubrp
mov
test
xchg
pop
or
fmuls
jae
xor
loop
cld
data16
pop
insb
mov
and
xchg
shl
push
dec
xchg
mov
je
pop
adc
movsl
in
into
push
mov
xor
loopne
cli
popa
sbb
adc
cld
fadds
iret
jo
adc
sbb
push
jnp
jmp
js
push
lret
xor
roll
xchg
jmp
mov
cmp
leave
out
mov
test
subl
push
cmc
add
and
dec
pop
mov
xchg
je
pop
pop
popa
xlat
mov
cltd
leave
xchg
fs
lea
dec
andps
fadds
mov
push
fwait
and
push
loop
cmp
add
sub
add
ljmp
gs
xor
jmp
or
or
aas
fisttpll
add
and
gs
cmp
mov
add
add
pushf
xchg
mov
push
ja
bound
imull
xchg
jecxz
mov
cmp
lret
and
fdivrs
and
xor
push
and
and
mov
mov
lds
and
adc
jle
mov
xchg
mov
ret
mov
out
cmp
or
mov
or
out
aas
fidivrs
and
or
xor
pop
mull
add
xchg
cmpl
adc
movsl
mov
out
shlb
andb
fs
test
adc
in
jmp
scas
dec
pop
outsl
xor
popa
mov
cmp
lret
ljmp
inc
repz
pop
cmp
dec
mov
imul
mov
lahf
add
cmp
mov
xchg
je
pop
and
test
stc
xor
enter
pushf
inc
jno
hlt
push
adc
lock
mov
cmpsl
push
mov
lds
test
mov
mov
sbb
andl
sub
sbb
fwait
mov
sti
cmp
cli
adc
ficoml
mov
fmull
nop
xchg
insb
push
je
xchg
mov
cld
not
fstps
or
pusha
dec
imul
sbb
and
loope
loop
xor
mov
and
cld
ss
sub
cmp
pop
lods
test
dec
pop
add
xchg
out
movsl
sti
xchg
mov
in
cmp
jbe
push
mov
cmp
mov
mov
mov
stos
xchg
sub
push
inc
mov
lds
stos
xchg
ss
in
call
push
dec
and
pop
xor
es
inc
shl
adc
idiv
out
aad
xlat
pop
push
lahf
divl
jl
sub
pop
push
out
popf
lret
outsb
push
xor
inc
add
out
mov
add
jmp
out
sarb
add
dec
adcb
mov
mov
jno
mov
enter
push
pop
or
insb
adc
rcrb
test
test
test
fisubrs
and
push
add
push
mov
addb
ja
xchg
bound
stos
stos
scas
testb
ret
stos
negl
dec
pop
in
cmp
mov
add
push
data16
daa
cmc
sbbl
lock
rol
push
mov
xlat
add
pop
sub
lods
dec
std
enter
ja
je
iret
inc
aas
out
das
or
sbb
pop
add
ss
bound
sub
aas
sbbl
mov
fists
add
mov
pop
or
lds
iret
mov
movsb
hlt
sar
xlat
inc
mov
mov
jl
push
inc
adc
aad
aas
loope
dec
cld
rcr
movsl
iret
lahf
push
sub
fs
cld
sti
or
inc
xchg
lds
cmp
push
inc
test
sbbl
rclb
inc
cmp
jo
popf
mov
out
cmp
cmp
adc
sub
repz
or
mov
sbb
in
lret
jne
mov
mov
pop
jo
xor
xchg
orb
fwait
xor
cmp
rcll
into
pop
pop
in
je
push
inc
xor
push
cwtl
mov
stc
movsb
push
xchg
sbb
pop
sarl
mov
mov
add
xchg
push
out
or
rep
pop
jle
push
xor
fcmovne
lods
xchg
cltd
in
cmc
iret
inc
or
mov
or
movb
and
jg
mov
es
xor
les
push
adcb
or
sbb
sub
push
ret
out
ret
add
xor
jmp
clc
push
bound
mov
mov
adcl
push
inc
adc
fwait
inc
and
add
les
add
dec
es
mov
arpl
test
in
xchg
fstp
jp
cmc
push
out
int3
xchg
bound
pop
pop
clc
in
iret
outsl
adc
push
lahf
mov
or
orl
fs
lahf
and
lea
in
jo
push
add
sub
aas
push
out
push
maskmovq
mull
out
rorl
mov
out
xchg
sub
xlat
test
xchg
dec
push
cmc
jge
jns
stc
roll
xchg
in
pushf
push
inc
dec
movsl
xchg
or
xchg
inc
in
sbb
enter
sub
push
add
in
je
scas
shll
nop
sub
rdpmc
jno
xor
sbb
jmp
leave
pushf
and
push
addb
xchg
inc
testb
and
lea
sub
mov
or
inc
js
jle
push
iret
insl
cmp
ja
scas
adcb
pop
cld
mov
pop
addr16
call
xchg
mull
jne
cmp
add
inc
or
add
test
mov
popf
loopne
leave
sub
sub
arpl
cmp
jmp
push
mov
push
fisubrl
fs
xor
iret
outsb
pushf
outsl
repz
addl
dec
cmpl
jns
xor
dec
popa
or
dec
mov
pop
sub
mov
stos
pop
lcall
sbb
mov
adc
and
lret
xor
popf
xor
dec
xor
sbb
xchg
std
scas
jmp
or
lods
cmpl
scas
jmp
loop
lahf
xchg
cmp
pop
pop
mov
mov
xchg
and
ret
loop
sbb
push
lret
and
bound
in
pop
outsb
mov
fwait
or
sub
sarl
lds
mov
add
xchg
rolb
jns
fildll
mov
test
jne
jo
cli
pop
imul
pop
cmpsl
inc
fyl2xp1
lcall
aam
cli
mov
cmp
xchg
mov
mov
test
fdivl
pop
mov
fsts
xor
scas
outsb
lahf
in
insl
add
testl
movsl
push
add
and
push
lods
dec
fmul
pop
mov
cmp
mov
not
mov
sbb
dec
mov
mov
adc
mov
pusha
push
inc
ror
sub
xor
xor
dec
inc
es
cwtl
into
aam
inc
cmp
dec
xchg
bound
mov
lcall
andb
lods
push
cmpl
sbb
mov
xchg
popa
cmpsb
data16
dec
insb
cld
mov
push
imul
sub
fdivl
ljmp
fdivs
inc
sub
xchg
sbb
aad
or
add
loop
pop
shrd
jle
outsb
inc
push
or
push
insl
pop
mov
cmp
rcll
inc
push
out
insb
jg
in
xchg
pop
shrb
sub
aas
jae
xlat
fidivl
xor
fucom
sbb
cld
scas
push
pop
mov
movsb
lock
sahf
inc
leave
lcall
mov
push
aad
push
lods
and
sbb
and
enter
ret
jo
cli
sub
adc
pop
push
pop
push
fdivs
mov
cmpl
inc
and
lds
sub
out
xchg
mov
dec
lds
jmp
lea
lcall
idivb
push
xor
or
push
movsb
sbb
xchg
sar
cli
imul
mov
das
mov
push
dec
imull
adc
rclb
inc
xorl
ds
cmp
cmp
mov
and
sbb
mov
push
or
sbb
outsb
lret
mov
xor
enter
push
shl
add
mov
loope
adc
inc
test
test
push
jo
mov
repz
add
repnz
fs
mov
adc
add
push
dec
sbb
mov
push
movsl
mov
xchg
loope
leave
inc
xor
pop
and
xchg
xlat
mov
pop
xchg
cmp
fimull
ds
xchg
je
push
dec
cmc
sbb
xchg
adc
and
popa
jg
mov
xor
inc
xor
pop
aam
push
pop
dec
shll
pop
loope
push
jle
adc
shrb
pusha
rolb
mov
loop
nop
sar
sarl
rolb
scas
cmp
xor
inc
cmp
and
testb
xchg
jp
mov
xor
es
in
pshufw
cmp
jmp
shrl
movsb
lret
lds
leave
push
push
ret
inc
in
ret
insl
xchg
test
add
adc
push
cwtl
sbb
ds
lcall
into
or
xchg
push
sahf
out
dec
out
call
pop
sub
push
lock
cmp
inc
dec
test
or
jp
inc
in
jg
outsb
adc
add
adc
jmp
out
sbb
and
adc
lods
xchg
std
movups
jbe
mov
iret
rcrl
xorl
pop
clc
daa
cwtl
sub
int
fs
or
movsb
je
test
xchg
push
push
adcb
cmp
ljmp
mov
jmp
push
mov
test
gs
dec
out
fadd
adc
stos
cmc
mov
loope
cmc
sub
fbld
loop
cld
xor
das
repz
fldcw
sti
jp
mov
jecxz
and
add
jmp
into
jo
adc
stos
mov
adc
std
enter
flds
cmp
inc
addl
cmpsb
jns
sbb
data16
push
jl
aas
insb
imul
fcoml
jnp
fwait
cmp
pop
pop
negl
insl
xchg
or
xor
mov
mov
cmpsl
pop
dec
dec
rorl
imulw
xchg
cmpsb
jbe
outsl
int
in
mov
mov
mov
jg
jmp
push
inc
ds
push
push
mov
int
outsl
mov
movsb
jo
cltd
xlat
or
inc
inc
fwait
lret
adc
or
mov
inc
push
mov
and
test
xchg
mov
sbb
xor
pop
mov
fwait
adc
push
mov
pop
push
in
jl
adc
xor
push
add
sub
push
sub
out
rcrb
and
xlat
aam
fwait
push
lcall
or
mov
movsl
add
and
arpl
mov
cwtl
cmp
loope
sbb
outsl
nop
mov
lds
mov
xchg
movsl
outsb
std
jb
sub
lret
mov
sbb
push
pop
test
push
les
sarl
sbb
loope
stos
or
xor
mov
mov
mov
jl
xor
ss
hlt
hlt
push
sahf
lea
fdivr
lcall
adcb
pop
xor
je
pusha
inc
rclb
jge
insb
mov
jmp
or
lea
data16
cs
push
push
mov
mov
or
and
lea
push
lret
into
push
out
cmp
pop
mov
jnp
mov
dec
pop
mov
cmpl
lahf
and
push
iret
fldenv
push
subl
stos
pop
cmpsb
adc
pusha
mov
ret
or
lds
jbe
gs
push
stos
or
pop
arpl
xchg
loope
xchg
jmp
inc
fmul
jg
dec
mov
sbbb
iret
pusha
mov
mov
jmp
sti
inc
push
mov
in
movsb
ds
pop
mov
xchg
pop
jecxz
insb
outsb
inc
loopne
popf
inc
mov
incl
notl
idivl
outsl
data16
xchg
setbe
test
push
jle
loopne
xor
lods
or
mov
fidivrl
sbb
push
in
jl
push
push
out
add
or
andb
push
sbb
int3
mov
clc
subl
xchg
decb
mov
and
and
pusha
lea
jmp
jge
mov
lret
lea
mov
mov
mov
dec
sqrtps
adc
sti
scas
fdivrs
pop
test
cmp
ds
mov
xor
add
movsl
adc
mov
mov
xor
adcl
pop
testl
jne
test
sbb
xchg
incb
incb
jp
repnz
ret
lods
test
in
or
fidivrl
in
sbb
lret
ljmp
imul
out
cmpps
mov
and
enter
mov
sbb
shl
dec
in
fisttpll
cmp
sub
subb
sbbl
add
adc
jns
push
fs
mov
insb
xor
push
sbb
jne
add
pop
outsb
add
enter
mov
xchg
push
push
insl
mov
faddp
push
adc
fldenv
xchg
cmpb
sub
or
cmp
or
fwait
or
pushf
cmpsl
int3
loope
cmpsl
mov
dec
dec
sbb
inc
outsb
mov
xchg
ja
jle
iret
aad
into
sbbl
dec
adc
sbb
into
les
sub
sbb
jbe
adc
fsubr
mov
dec
mov
shrb
loopne
or
stos
lods
xor
jo
xor
jnp
dec
addr16
lea
rcr
push
mov
sbb
pop
mov
pusha
aaa
stc
push
push
xchg
loopne
movsb
pusha
lea
push
mov
pop
jns
gs
inc
lret
vpsubusw
in
cmpsl
inc
mov
ljmp
pop
cltd
push
popa
in
enter
pop
insb
lret
mov
mov
cmp
lret
mov
pusha
add
dec
out
shrb
mov
mov
cmp
outsl
dec
movd
fisubl
adc
or
stos
inc
sti
mov
cmp
repz
lahf
fsubrl
xchg
pop
std
inc
pop
push
rorb
and
out
in
cmp
dec
push
dec
pop
out
mov
add
test
adcb
pop
xadd
add
xor
cmp
insl
imul
sub
mov
lahf
out
sbb
sub
push
adc
and
push
xchg
jne
std
adc
xchg
les
aas
pop
push
shlb
addb
gs
push
mov
xchg
sub
lods
rorl
fimuls
clc
xchg
je
outsb
mov
sub
mov
add
shlb
mov
out
lods
int3
inc
cmp
insl
adc
mov
mov
loope
outsb
rol
xor
mov
pop
mov
nop
lods
sbb
xchg
sub
mov
jne
or
in
bound
cld
push
mov
xchg
cmp
add
and
mov
xchg
rcrb
jno
mov
movsl
jns
imul
test
cwtl
add
clc
or
push
mov
jo
cmpsl
jp
lahf
cmp
ret
xor
mov
out
push
and
push
mov
cmp
loopne
cmpsl
addr16
imul
loop
mov
xchg
nop
lret
sahf
out
shlb
das
jp
push
lods
mov
and
ds
cmc
aad
insb
cmp
aam
and
rorb
push
pop
das
pushf
cltd
dec
cmp
stos
cmp
loope
jnp
in
enter
push
add
in
in
lcall
sbb
sbb
jne
idiv
repnz
push
or
clc
cltd
int
mov
and
push
mov
xlat
inc
adc
mov
aaa
sub
mov
and
lea
xchg
xor
sbb
je
push
xor
xor
or
mov
ljmp
add
in
push
or
push
jecxz
pop
or
fdivrl
fnstsw
test
das
jle
repz
lock
shl
mov
push
cs
push
mov
mov
mov
mov
movsl
add
xor
dec
pop
or
lret
shl
mov
test
inc
jae
xchg
push
mov
adc
mov
ret
adc
dec
add
jle
sbb
push
fsubr
and
sbb
push
mov
xchg
xor
outsl
dec
stos
jnp
daa
pmaxub
xlat
popf
inc
bound
lods
out
dec
mov
or
push
mov
hlt
arpl
push
and
dec
and
out
xchg
ror
js
cmp
cmp
and
loop
das
jecxz
mov
add
loope
sub
insb
mov
lea
mov
popf
ja
nop
sahf
add
fisttpl
xchg
dec
adc
or
insl
lret
adc
pop
scas
fisubrs
repnz
pushf
hlt
sbb
lock
push
lods
push
js
mov
dec
insl
shl
outsl
jnp
mov
xor
xchg
int3
and
aas
mov
mov
xor
je
call
cmp
pop
sahf
xor
out
idivl
push
hlt
enter
sub
cli
xor
inc
rclb
lock
and
jbe
sub
xor
push
mov
les
in
pushf
cmp
sub
int3
insb
sahf
shrl
hlt
mov
add
push
or
std
pop
daa
inc
jmp
dec
sbb
mov
jb
loop
xor
mov
aas
aad
mov
lret
inc
int
addr16
stc
loop
scas
push
nop
into
mov
loope
sahf
sahf
mov
xor
adc
and
popf
std
mov
jp
aaa
and
repz
sahf
and
jnp
adc
jmp
gs
cwtl
push
jo
mov
and
fsubl
outsb
aaa
cmc
lahf
add
mov
sub
out
rorl
shr
addr16
test
cmp
div
mov
cwtl
fsubl
mov
negl
sub
push
leave
fildl
cmovs
packuswb
in
dec
cmpsl
int
daa
push
pop
jno
testb
hlt
adc
jp
add
push
jmp
subb
or
addl
sub
enter
push
js
jle
in
scas
in
xor
sbb
movsl
shr
movsl
cmpsb
outsl
sub
lock
outsb
dec
mov
cs
jbe
jg
dec
sub
sbb
aam
sahf
sub
sub
rcll
xlat
add
outsl
sub
mov
fcmovnb
in
inc
mov
mov
and
negb
notb
mov
repnz
xchg
dec
fwait
mov
cmpsl
lock
mov
pop
cli
and
xor
mov
mov
or
test
mov
xchg
mov
add
jbe
pop
mov
aaa
inc
mov
lahf
adc
push
xchg
jmp
ljmp
dec
pop
fmuls
imul
push
add
mov
mov
mov
les
sub
or
cmp
inc
hlt
jmp
out
out
fildl
imul
lret
ja
pop
cmc
aas
mov
fcompl
lods
mov
cld
es
mov
popa
and
and
xchg
sub
push
ret
out
sahf
inc
xor
inc
sub
outsb
jge
test
in
or
int3
mov
inc
pusha
mov
pop
jmp
xchg
outsl
fs
push
adc
in
push
dec
adc
push
movsl
xlat
cmpsl
sti
mov
pop
adc
pop
imul
xchg
mov
add
mov
or
pop
xchg
dec
bound
add
popa
push
xchg
dec
xchg
dec
ja
jbe
inc
scas
int
into
lods
stos
mov
xchg
mov
pop
incb
mov
mov
sub
push
xchg
inc
or
les
insb
mov
cmpsl
mov
dec
fwait
push
sar
outsl
loop
subl
test
xor
clc
pop
sbb
into
add
pop
in
stos
lods
stos
out
ret
cld
aaa
jmp
subl
lods
pusha
pop
fisubrs
sahf
push
mov
xchg
iret
push
hlt
push
lods
push
jp
pop
jbe
lods
pop
das
mulb
aas
cmpsb
pop
cmp
jmp
lods
andb
dec
pop
movsl
pop
pop
andl
lods
inc
stos
es
ret
mov
popa
mov
in
xchg
adc
in
leave
mov
mov
testb
aaa
aam
sbb
inc
dec
pop
or
xor
and
xor
sub
mov
fdivl
sahf
cli
stos
fs
arpl
mov
mov
outsl
mov
cwtl
iret
stc
sbb
jnp
push
loop
icebp
jb
loopne
pop
mov
mov
dec
loope
cld
sub
andl
jns
icebp
push
sahf
push
fidivl
jbe
into
or
or
int
xor
cmp
imul
adc
shr
inc
aas
pop
scas
rol
fs
dec
xchg
test
jno
call
lock
xchg
sarl
bound
or
mov
cli
sbb
xchg
mov
mov
and
mov
in
es
je
call
aaa
testb
pop
cltd
and
ss
lods
cmpsb
xchg
inc
stos
add
mov
gs
jae
mov
scas
shl
push
mov
dec
js
add
cmpsl
cmp
movsb
fcmovu
lea
sbb
mov
mov
adcb
push
imulb
mov
mov
cmp
mov
pushf
jg
mov
adc
pop
popa
pop
pop
fst
jge
scas
je
xor
cltd
push
xor
cli
and
flds
movsb
add
out
pop
push
cltd
aam
mov
pushf
test
mov
xor
adc
push
xchg
mov
xchg
cwtl
in
nop
in
data16
and
dec
mov
in
mov
out
mov
icebp
sbb
sub
pop
addr16
push
shlb
dec
insb
jne
cli
add
mov
or
dec
test
or
enter
ja
jns
xchg
xchg
orb
cmp
shlb
inc
add
push
aaa
sbb
mov
mov
scas
out
inc
repnz
sbb
mull
out
jle
cmp
daa
sbb
lock
xchg
mov
pop
mov
loopne
into
fcmovnbe
stos
mov
ss
inc
or
popa
es
clc
negb
test
xchg
jne
subl
xchg
das
xor
mov
push
inc
fimuls
daa
sarb
mov
jne
repz
fistpl
mov
jae
mov
mov
loope
aad
aad
mov
int
add
sbb
aad
mov
clc
sub
mov
push
int
mov
jp
add
out
mov
push
xchg
std
lcall
and
cwtl
int
xchg
hlt
or
sub
xchg
add
pop
pop
cmp
xor
fcomps
pop
pop
rcrb
js
mov
mov
push
xor
adc
leave
aas
ds
nop
mov
push
add
adc
jbe
cmp
cmp
test
mov
ficompl
and
xchg
insb
mov
out
stos
push
pop
mov
sbb
sub
aaa
ret
xorl
mov
in
adc
jbe
fists
dec
adc
lret
and
jg
adc
pop
or
mov
jnp
xlat
cmp
stc
xlat
adc
out
mov
out
sarb
rcr
stos
loop
cmp
dec
xchg
mov
xchg
xchg
loope
fwait
inc
xchg
adc
adc
and
negl
pusha
outsl
mov
js
push
mov
cld
js
or
out
movsl
fdivrl
call
iret
or
es
cmc
jnp
enter
pop
stc
xor
mov
iret
and
test
jo
add
loopne
ror
xorl
sub
cwtl
sub
in
or
incb
test
mov
stc
push
inc
fwait
pusha
jne
dec
inc
ud2
xor
das
sbb
add
ror
inc
icebp
fildll
pop
or
xor
xchg
rolb
dec
jbe
xor
mov
add
repz
shrb
xor
add
shlb
cmpsl
out
push
lods
ljmp
popa
jle
ret
shll
imul
arpl
mov
pop
inc
pop
lret
and
vcmpps
incl
fiadds
sbb
test
or
lcall
fidivrl
push
pop
sub
jecxz
outsb
push
lds
aas
sarb
into
sub
pop
jle,pn
iret
xchg
lret
aas
cmpsl
mov
sbb
jmp
sbb
jo
push
mov
mov
mov
sahf
aad
js
mov
test
fidivrs
mov
sbb
out
or
pop
lcall
repnz
ss
push
xchg
or
test
or
addr16
fcomps
or
leave
addr16
push
cmp
and
pop
inc
test
pop
adc
push
xor
jp
pop
jle
mov
cmpb
xchg
pop
loop
pop
jmp
mov
ljmp
cmpsb
jle
sbbb
int3
mov
and
or
stos
sub
xor
mov
popf
leave
ret
mov
sbb
inc
fdivs
mov
int3
test
filds
sub
sub
js
fsubrs
push
inc
push
mov
ljmp
add
inc
or
inc
jg
in
sbb
outsb
xchg
in
push
bound
shr
jo
psubsb
sbb
mov
ss
sub
lods
loopne
aam
rclb
cmp
pop
imul
jbe
fsubl
pop
repnz
rolb
icebp
testl
cmc
jge
dec
ret
int
loopne
fistpll
push
insb
daa
sbb
mov
shll
iret
pusha
jnp
dec
dec
js
js
lret
cltd
inc
pop
les
mov
cmp
push
js
dec
sub
pop
dec
sub
inc
adc
ss
cmpsl
pop
shll
js
in
into
imul
adc
fsts
mov
mov
sbb
pop
lock
push
scas
aam
xor
stos
pop
or
dec
imul
lock
push
js
aam
addl
rcrl
fsub
jnp
cmp
das
jle
popf
insl
push
stc
cli
arpl
out
in
gs
dec
shlb
mov
or
pop
ljmp
mov
rcrl
fildll
sub
sub
imul
ja
sub
inc
and
cmp
roll
jo
subl
sub
cmp
xchg
lahf
and
sahf
cld
cmp
hlt
cld
out
dec
repz
into
xchg
push
fisttpll
sub
ljmp
cs
mov
cs
fcmovbe
not
dec
loopne
jle
and
fistpll
stos
pop
push
pslld
sahf
sbb
stc
arpl
add
mov
sahf
adc
cmpb
or
iret
clc
dec
mov
mov
addr16
dec
push
jle
mov
sbb
add
flds
out
icebp
ja
fbld
mov
repz
jno
imul
xchg
jl
mov
stos
pop
jecxz
adc
xchg
mov
pop
push
imulb
scas
and
rol
push
enter
jge
jne
or
mov
movsl
adc
xor
mov
cmc
pop
out
movsb
mov
dec
shl
jge
pop
mov
sbb
test
faddl
lret
fsubrs
cmc
push
adc
loopne
jle
pop
xor
fcomi
sarl
aam
mov
dec
test
inc
mov
lods
sub
pop
stos
loope
adc
add
push
adc
inc
jbe
outsl
pop
nop/reserved
roll
pusha
mov
mov
addr16
jle
dec
push
mul
push
cmpsb
pop
mov
inc
inc
mov
flds
xchg
add
push
scas
bound
or
and
ljmp
imul
repnz
and
mov
pop
insb
insl
outsb
aaa
mov
push
cltd
das
pop
cmpsb
xor
fs
inc
cmp
imul
push
sub
mov
loope
push
cmp
add
rclb
jge
lock
cld
scas
pop
loopne
cli
inc
push
and
in
or
cmpsb
lea
dec
rolb
mov
xchg
mov
push
xlat
mov
es
push
xor
sub
pusha
push
mov
cmpsl
insl
lahf
sbb
xchg
cmp
push
fld
lods
mov
std
or
and
repnz
test
mov
xchg
xor
iret
lods
push
out
dec
faddl
mov
xchg
pushf
push
sbb
inc
pop
sub
sbb
lret
add
mov
mov
mov
das
insl
insb
lds
push
sahf
fists
and
shlb
adc
int3
rcr
mov
mov
and
iret
frstor
jbe
sub
add
xchg
ret
jg
dec
inc
xchg
cs
inc
mov
xor
lods
xor
andl
and
or
ljmp
add
cmpsb
fisubl
or
les
jg
ret
fcoml
sbb
popa
push
mov
mov
push
xchg
cld
addr16
and
test
scas
ret
mov
out
xor
jnp
push
stos
xchg
xor
cmc
sahf
xchg
or
cmpsb
pop
pop
xor
mov
mov
mov
aad
or
cmpl
adc
cmpsb
add
xor
fnstenv
push
fisubl
inc
xor
add
push
inc
out
or
outsl
mov
movsb
gs
or
mov
iret
push
mov
int
jg
test
xchg
ficoms
loopne
or
out
and
inc
dec
or
andl
inc
ret
lcall
cmpsb
jnp
dec
out
or
mov
or
scas
mov
jns
mov
daa
lret
stc
test
out
test
mov
mov
repz
jb
mov
xchg
push
sub
in
in
jno
jb
jns
xcrypt-cbc
cmpsl
xchg
jno
in
xor
jns
insl
fnsave
lds
fnstenv
test
push
lret
mov
out
push
fiadds
mov
int
jge
clc
mov
call
adc
in
mov
test
in
je
ss
mov
sub
pop
aad
push
sarl
out
cmc
insl
mov
dec
es
pushf
push
icebp
add
sub
arpl
add
lret
ret
movsl
push
push
cltd
xor
filds
inc
mov
push
jl
test
mov
inc
mov
fsubl
add
movsl
popf
loop
sbbb
xor
test
cmp
cmp
outsl
xlat
lret
imul
fs
rsm
adcl
call
mov
xchg
and
aas
push
xchg
hlt
popa
push
rcrb
push
std
pop
push
imul
out
cmpb
lahf
cs
orb
mov
aam
dec
jle
add
mov
sub
call
test
adc
dec
cmpsb
aam
mov
ret
pop
pushf
cld
pusha
fldl
dec
loop
or
sub
test
pop
adc
pop
adc
and
bound
inc
cmp
mov
sahf
pushf
jmp
pop
hlt
in
mov
mov
pop
aam
cmp
cmp
mov
movsb
loopne
faddl
mov
cmp
jle
test
or
mov
out
in
movl
stos
fwait
and
popa
cs
cmpb
mov
jne
out
shl
dec
xchg
adc
jbe
pop
rorl
ret
into
dec
stos
rep
inc
cmp
cmpsb
mov
loopne
inc
jnp
or
sub
push
hlt
lahf
sbbb
arpl
ret
xchg
call
popa
imul
out
outsb
sarl
popa
lds
push
add
std
sub
shrl
jnp
iret
das
push
popf
inc
movsl
xor
movb
inc
bound
aad
es
mov
mov
dec
fmull
lods
stos
pop
adc
ds
cmp
inc
aam
adc
lahf
mov
inc
mov
mov
dec
gs
fmuls
cmp
inc
lahf
push
xchg
dec
hlt
lea
popa
lock
popf
outsb
mov
fs
jae
jae
pop
lods
inc
cmp
icebp
enter
bnd
xor
sbb
fsubp
xchg
aad
and
int3
bound
inc
inc
lods
pop
scas
mov
xor
add
and
xor
popf
add
mov
or
xchg
int3
mov
cmpsl
xor
or
fildl
test
test
adc
daa
ret
imul
jg
pop
dec
icebp
inc
push
sbb
mov
ljmp
push
mov
sub
mov
and
or
aaa
mov
lret
jmp
sbb
mov
bound
lods
out
pushf
repz
rorb
out
imul
jno
jecxz
call
pushf
ja
sti
hlt
inc
adc
repnz
dec
jge
scas
shrl
sbb
xor
push
push
push
testb
lods
movsb
filds
pop
test
mov
ss
sbb
sub
cmp
cmc
lret
lret
jne
jecxz
and
pop
adc
add
js
sbb
push
out
hlt
lcall
xor
test
push
add
shr
push
push
adc
add
pusha
inc
std
inc
jl
les
js
push
js
dec
pop
pop
js
xchg
ljmp
cmc
lret
cmp
and
mov
sub
mov
jmp
dec
and
xor
insb
movsl
or
dec
insl
pop
push
and
dec
rcrl
cmc
adc
jo
dec
dec
imul
pop
mov
je
adc
mov
iret
stos
movsb
lock
mov
fisubrs
ja
mov
dec
adc
mov
pop
mov
daa
jp
adc
cmc
jo
jmp
lahf
mov
push
incb
aaa
repz
hlt
mov
adc
inc
fnstsw
pop
mov
add
loope
sbb
xchg
sahf
sbb
int3
push
dec
xchg
leave
ljmp
out
mov
cmp
sti
cmp
fs
in
std
jae
loop
pop
in
sub
scas
sbbw
inc
js
add
xchg
inc
xchg
jb
xor
push
jbe
sub
loopne
repnz
xchg
pusha
repz
sub
pusha
imul
or
mov
popf
mov
jb
fnstsw
rcrb
out
mov
jbe
mov
incl
jns
mov
xchg
cmp
pop
push
dec
mov
pop
ret
push
xor
mov
push
sbb
js
mov
in
mov
fisubs
std
shlb
jle
dec
iret
ret
jge
push
es
ljmp
mov
orb
je
dec
mov
inc
mov
and
mov
int
or
pop
jo
cs
shrl
sbbl
mov
movsl
nop
stc
js
scas
ss
or
stc
mov
clc
pushf
stos
cmp
push
cmpb
aad
out
push
je
fsubrs
rol
add
dec
pop
push
mov
xchg
or
sar
cs
jecxz
dec
pop
xchg
leave
mov
xor
aad
jp
mov
std
sti
int
pop
lret
ret
pop
mov
mov
rorb
dec
lods
push
push
sti
mov
and
and
out
or
orl
dec
jmp
stc
jae
fdivrs
scas
fsts
jmp
arpl
sarb
rclb
xchg
sarl
pop
mov
dec
sbb
mov
subl
xchg
call
into
stos
lea
push
stc
ss
into
mov
test
das
imul
fadd
push
hlt
pop
and
lcall
and
jno
int
xchg
mov
mov
fs
adc
xchg
insb
jno
xchg
adc
icebp
fiadds
notl
int
mov
pop
clc
push
adcb
jge
rcll
fs
insl
cli
in
scas
add
pusha
outsb
lea
lahf
or
jle
xor
xor
inc
mov
push
adc
scas
mov
icebp
sub
repnz
fs
xchg
insb
jns
subl
sub
lock
xchg
push
xor
and
cld
in
pop
sub
subb
loope
mov
sub
fadd
leave
fistl
inc
xor
push
popl
pop
cli
jae
mov
ja
xchg
icebp
les
arpl
cmp
stos
iret
mov
jle
cmp
js
js
mov
lea
dec
sahf
out
cmc
add
cmp
pusha
push
hlt
in
add
sub
inc
sub
push
inc
cmc
jle
jnp
cld
ret
xchg
lods
clc
bswap
sub
cs
mov
popa
pop
push
loope
addl
sbb
repz
lods
les
push
ret
and
rcrb
inc
mov
dec
sub
fadds
mov
leave
mov
sub
jp
cltd
scas
sbb
lahf
sbb
out
push
stc
adc
stos
push
mov
shlb
adc
sub
imul
xchg
xchg
pop
mov
outsb
clc
sbb
xchg
mov
push
jae
aas
mov
outsb
scas
daa
lahf
mov
inc
mov
xacquire
mov
add
addr16
orb
mov
cmp
xchg
pop
cmp
mov
or
xchg
dec
jo
repnz
inc
pop
pop
call
mov
xchg
jmp
sbb
addr16
aas
loop
mov
sub
mov
mov
mov
dec
fwait
mov
rorb
xchg
sub
inc
xor
jne
adc
nop
lock
jnp
jg
push
aas
pop
std
jo
lret
push
rorb
fsubrs
out
and
popf
xchg
jmp
aam
cld
mov
pop
arpl
rclb
inc
push
pop
xor
or
jg
or
daa
int
fildll
jp
push
divb
fildll
xchg
xchg
add
test
adc
xor
cmpsb
mov
xlat
aam
and
mov
rcrb
cld
sub
stos
test
shrl
outsb
jne
mov
jge
icebp
js
or
add
les
dec
test
fwait
dec
xor
dec
jp
in
sbb
cli
shlb
fimuls
xor
das
in
jbe
xlat
stc
adc
xor
aam
jecxz
jno
lods
lods
and
clc
cmc
xchg
cmc
scas
dec
jne
clc
push
test
insb
lret
xor
paddsb
inc
jecxz
mov
mov
mov
ss
sbb
pop
bound
rcll
push
jne
movl
sbb
mov
sub
jae
xor
loopne
dec
jl
test
cli
int3
dec
ss
mov
aam
test
fadds
scas
mov
jmp
or
push
or
xchg
push
js
popf
pop
subl
add
push
mov
inc
add
lods
jne
rcr
ret
repz
pushf
mov
lock
xor
hlt
ljmp
repnz
das
pushf
mov
cwtl
ss
mov
jge
incb
cltd
inc
bt
mov
iret
hlt
add
je
jne
scas
sub
fldt
out
pushf
das
xchg
imul
rolb
and
mull
shrb
add
jle
insb
stos
js
push
clc
orb
mov
xchg
fistpl
lahf
leave
ds
add
mov
dec
add
clc
out
rcrl
pop
pop
mov
cld
in
dec
jo
adc
mov
inc
stos
mov
and
mov
mov
dec
pop
pop
pop
sahf
icebp
mov
out
xchg
sarl
sub
fbld
mov
ret
and
mov
jnp
rep
into
outsb
cmc
aas
mov
cmpb
jmp
in
iret
inc
roll
or
stc
das
test
mov
lods
push
lahf
gs
jbe
or
or
sub
faddl
lea
movsl
pop
or
pop
xor
inc
xchg
jae
inc
sub
mov
mov
je
mov
push
jmp
movsb
js
xchg
pop
cmp
mov
push
inc
dec
fsub
push
xchg
ss
xor
push
mov
push
test
mov
push
jb
lods
adc
jae
ret
lock
sbb
inc
out
jmp
xor
pop
xchg
inc
jg
fwait
push
scas
adc
fldcw
movsl
insb
pop
or
cwtl
lahf
shlb
sbb
mov
pop
sub
push
setns
xor
aad
fs
idivl
mov
test
xor
xor
xchg
mov
pop
shl
cmc
mov
sub
mov
sub
rcrl
mov
push
and
addr16
sbb
movsb
adc
rep
outsl
cmp
divl
cmp
icebp
xchg
jmp
mov
inc
mov
outsl
rorb
in
les
bound
push
cmp
pusha
int
mov
loop
aaa
cmp
xchg
lcall
xchg
mov
sub
inc
mov
adc
xchg
adc
xor
or
icebp
test
inc
inc
xchg
scas
lds
mov
dec
push
sbb
shlb
and
cmpsl
adc
call
pop
jle
inc
inc
stos
mov
ficoml
shl
loop
mov
pop
js
in
data16
pop
ja
cmpsb
xor
adc
push
xchg
in
ljmp
push
sub
add
xor
dec
jle
je
cmp
stc
push
mov
xchg
arpl
out
lcall
xor
pop
faddp
cmp
lret
xchg
sbb
insl
mov
push
fs
ss
fidivrl
stos
pop
fwait
sub
sub
fstpt
add
scas
sub
imul
mov
paddsb
mov
xor
fistpll
and
sbb
xchg
pushf
adc
push
jb
loope
orb
js
push
add
imul
xchg
mov
mov
lods
xor
test
xchg
sub
daa
inc
dec
jae
push
clc
mov
xor
inc
push
jo
scas
pop
mov
pop
aas
in
push
adc
xlat
out
lret
stos
rcrb
jle
jne
xchg
imul
ja
ds
nop
cli
mov
lret
jle
fnstcw
addr16
fsub
shrb
gs
lret
test
mov
mov
scas
pop
js
sbb
lret
push
xchg
sti
mov
jb
mov
pop
call
fs
outsb
mov
adc
in
call
mov
jecxz
jg
push
xor
adc
insl
xchg
mov
fadds
icebp
or
pushl
cmpsl
divb
xchg
aad
push
push
js
mov
push
std
ss
and
push
jnp
jl
and
dec
lock
mov
push
daa
jmp
pop
xor
mulb
loopne
mov
jg
std
idivl
fisubl
aas
out
xchg
xor
pop
cli
pop
xor
aas
pop
mov
mov
insl
push
out
sub
dec
int3
sbb
cmpsl
data16
mov
jmp
jnp
lods
mov
int
flds
cld
sub
test
inc
adc
lds
push
movsb
jne
add
inc
arpl
fbstp
xchg
lret
pop
push
insl
jno
out
jecxz
mov
mov
aad
jg
sub
inc
mov
pop
out
pop
jp
int
int3
ret
cmpl
mov
pop
js
mov
lods
sahf
scas
dec
js
and
mov
jmp
mov
ds
loopw
aaa
xchg
js
sub
loop
sub
cltd
or
dec
pop
xchg
or
mov
pop
les
ret
jl
mov
mov
test
std
mov
ret
sbb
inc
dec
lods
jmp
mov
push
add
mov
inc
leave
and
and
dec
and
fldl
fcmovnu
cmc
test
inc
addl
cmp
stc
pop
out
xor
test
ds
mov
cs
stos
lea
xchg
push
sbb
or
cmp
jns
fcmove
loopne
push
stos
lds
fmuls
popa
shll
pop
cwtl
inc
lods
out
dec
and
bswap
xlat
lods
jg
mov
push
leave
jne
movsb
les
iret
aaa
mov
sbb
dec
clc
daa
call
pop
dec
pop
dec
lret
movsb
or
scas
fsubp
cltd
push
sbb
sahf
fs
jge
pop
pushf
mov
mov
insb
inc
xchg
sbb
inc
jle
jne
lock
fistpll
sbb
sbb
sub
je
lock
push
adc
xchg
mov
fs
sbb
outsb
push
in
inc
sub
cmp
cmp
xchg
in
popf
pop
or
sbb
imul
mov
dec
xor
out
xor
dec
ret
push
and
mov
dec
sbbl
pop
dec
mov
test
and
ss
mov
push
jbe
xchg
lods
inc
dec
or
inc
lods
adc
jle
test
stos
test
pop
in
data16
mov
add
mov
insl
loopne
dec
jge
xlat
dec
push
xor
add
movsl
loopne
xchg
cli
or
std
mov
lret
jbe
fwait
in
pop
or
inc
sub
imul
testl
jecxz
jge
and
leave
repz
jne
jecxz
or
test
sub
and
push
insb
mov
adc
inc
xchg
lods
add
push
call
leave
and
imul
mov
divl
movsb
in
in
dec
pusha
fwait
sarl
cmpsl
int3
sub
lcall
jl
jle
sahf
push
push
sbb
pop
fwait
mov
outsb
mov
lcall
lahf
fcomps
cld
xchg
rolb
rcr
pushf
mov
repz
jne
adc
and
test
and
push
pop
jecxz
repnz
popa
lods
adc
hlt
adc
xchg
imul
pop
sbb
js
aas
arpl
lock
sub
lods
or
xlat
cltd
mov
cmp
pop
flds
ljmp
test
jecxz
add
xor
add
or
test
scas
push
arpl
dec
cmp
cmp
int
add
ret
divb
xor
fstps
add
mov
sbb
xchg
fwait
pop
sbb
jnp
mov
pop
push
insl
or
mov
popf
xor
sbb
pop
cmp
jne
mov
cmp
movsb
ja
dec
or
jno
pop
stos
and
sub
leave
pop
outsb
stc
pop
dec
cmc
bound
in
outsb
loop
in
fisubrs
mov
pop
movsb
pop
fwait
sbb
push
imul
scas
mov
xchg
test
mov
int
arpl
xor
lret
adc
adc
dec
xchg
fisubs
shll
test
adc
cmpsb
inc
jp
sbb
xchg
leave
jle
push
ds
repnz
inc
ljmp
loope
mov
fcmovb
add
mov
cli
repz
pop
leave
enter
loopne
addl
adc
mov
outsl
dec
notb
jnp
ror
adc
ljmp
mov
loop
aaa
stc
and
cmp
and
or
cmp
pop
pop
inc
inc
mov
adc
test
ja
pop
cwtl
pop
pop
movsb
add
pop
repz
xchg
repnz
addr16
jle
inc
ds
mov
in
mov
add
fsubrl
cli
pushl
test
cmpsb
cs
dec
shrb
xchg
imul
mov
notl
push
jle
pop
cs
lret
sub
sub
out
adc
push
push
xchg
dec
mov
push
xchg
lret
sub
cmp
lea
push
out
jbe
and
add
and
sbb
in
lret
out
xchg
adc
cmpsb
rcrb
sub
cltd
jno
aaa
ret
test
bound
dec
push
push
jl
lds
in
inc
popf
lret
xchg
mov
adc
daa
sti
adc
pop
or
pop
fcmovb
or
out
out
iret
mov
mov
lahf
add
cltd
mov
xchg
jp
shll
pop
int3
add
jbe
mov
jbe
jbe
push
je
mov
int3
lea
lds
jmp
clc
mov
fwait
imull
icebp
sbb
aad
and
leave
inc
fdivrl
loopne
xor
out
add
mov
or
in
nop
pop
pushf
adc
daa
fucomi
bnd
filds
divl
pop
fisubs
push
dec
add
es
inc
movl
sti
push
sub
mov
ficompl
mov
and
inc
lods
sub
or
push
je
xchg
cmp
push
ret
test
inc
sbb
xchg
push
imul
stos
sub
pop
test
cltd
lret
jb
in
ret
mov
xor
xchg
aam
test
imul
dec
scas
iret
xchg
leave
sarl
cwtl
je
xor
push
jecxz
mov
cld
mov
cmc
pop
and
shld
pop
hlt
push
xorb
push
sub
sbb
mov
jne
add
sub
cmp
add
movsl
mov
scas
bswap
pop
sub
aas
adc
movsb
xchg
pop
sub
cmpsb
repnz
xorl
loopne
jno
loop
cmp
aad
adc
push
and
or
roll
mov
cmp
fbld
push
popa
pop
scas
or
stc
jp
leave
xchg
mov
and
mov
mov
mov
sub
ret
imul
out
aam
inc
jge
movsl
lret
sub
xor
mov
ds
xor
pop
adc
xchg
adc
sbb
inc
cld
mov
outsl
dec
mov
icebp
sbb
jns
push
fstl
pop
gs
shl
call
jb
mov
lock
stc
addr16
cmp
mov
jp
cmp
jo
lret
cwtl
loop
xor
dec
inc
mov
in
xor
pusha
ljmp
xor
dec
es
inc
xchg
push
mov
cmp
mov
test
inc
repz
pop
dec
ror
movsl
cmp
and
pop
shlb
mov
hlt
jne
cltd
adc
rcr
mov
push
ret
imul
fsub
out
lock
pop
insb
mov
xor
pop
xchg
xor
xor
pop
jp
dec
or
mov
sub
and
mov
js
hlt
movb
aam
dec
sub
pop
std
xchg
out
inc
rcll
sub
jo
mov
push
enter
int
adc
inc
push
jl
aad
mov
dec
jbe
and
imul
ss
sub
arpl
cmp
sub
jne
imul
es
push
push
mov
cmp
jns
loopne
fs
aad
push
add
pop
or
test
into
lcall
arpl
sbb
sub
ja
scas
lcall
ljmp
jo,pn
ljmp
sbb
xchg
fwait
cmp
nop
shlb
xchg
mov
sarb
jns
pop
xchg
lods
jmp
push
aad
mov
adc
sbb
hlt
xor
scas
xor
jne
shl
or
and
xor
or
insb
cld
into
adc
fidivs
repz
mov
cmc
enter
nop
cs
pop
fsubp
jb
rorb
jnp
pop
xchg
and
imul
sti
out
rcrl
push
sbb
jns
out
or
push
mov
dec
ljmp
mov
ret
cmp
dec
sub
mov
adc
pusha
pop
pop
idivl
repnz
adcl
push
repnz
jae
cwtl
xor
xchg
pusha
shll
in
or
insb
adc
jl
jp
mov
movsl
mov
arpl
inc
add
cmp
jg
mov
push
inc
ficoms
mov
mov
ds
push
sbb
mov
jne
mov
mov
rcl
mov
cli
adc
xchg
loopne
ljmp
sbb
ds
inc
mov
ret
push
imul
xlat
bound
scas
mov
and
push
inc
mov
xor
psubw
sub
mov
lds
fisubs
test
pop
adc
ss
leave
pop
clc
in
ja
ljmp
add
into
cmpsl
out
mov
mov
add
push
sbb
leave
mov
je
arpl
xchg
add
negb
jge
dec
or
mov
jecxz
leave
das
push
inc
push
stos
lock
lcall
cmp
in
sub
pop
mov
outsl
dec
js
hlt
xchg
adc
jle
rcrb
cmp
xchg
scas
sbb
adc
stc
dec
xor
cld
push
lcall
push
and
sbb
dec
sbb
or
mov
addr16
cmp
cmp
mov
lods
add
cmp
push
push
inc
fsub
sarb
and
inc
sarl
xchg
test
out
sub
inc
je
xor
mov
test
mov
inc
in
mov
mov
sub
sbbl
mov
or
and
adc
push
pop
push
scas
xor
sub
push
ret
pop
lods
das
incb
stos
mov
pusha
ss
jns
out
data16
icebp
iret
pop
mov
mov
addr16
dec
data16
ret
cmp
pop
hlt
popa
mov
cwtl
clc
icebp
shr
movb
ja
test
scas
jge
cmpsl
mov
and
aam
adc
data16
dec
jecxz
testb
rcrb
loope
test
push
cli
dec
mov
jne
mov
ficompl
or
mov
add
push
sahf
xchg
xor
int3
cmp
in
adc
xor
mov
pop
arpl
out
sub
mov
popa
movsl
mov
enter
dec
outsb
pop
mov
mov
jl
jns
pop
pop
mov
cltd
sbb
ss
sub
scas
mov
int3
mov
lods
pop
cmp
ret
xor
bound
fdivrs
popf
loope
cltd
inc
clc
scas
cli
adc
aad
out
xor
stos
dec
push
pop
xchg
and
addr16
add
scas
sub
jl
stos
sti
mov
ret
fstpt
cmp
adc
inc
xor
aam
aam
mov
adc
in
or
push
dec
insb
pop
inc
aam
adc
inc
mov
xor
cmpsl
repnz
or
pop
test
enter
dec
inc
ret
ljmp
dec
fdivrs
adc
mov
pmaddwd
scas
jae
mov
arpl
cmp
pusha
fistps
sbb
push
inc
or
or
hlt
test
std
xor
inc
mov
dec
mov
je
mov
cmp
push
push
xor
sbb
xchg
mov
jmp
jl
inc
push
je
cmp
sti
xor
mov
subl
push
inc
stos
imul
aaa
and
addr16
ds
stc
cmp
scas
push
call
jae
scas
push
fs
push
and
mov
insl
test
sbb
mov
notb
dec
mov
outsl
nop
push
push
mov
adcl
bnd
rcll
jae
mov
xlat
int3
mov
out
clc
mov
add
inc
das
push
jnp
divl
sub
clc
jns
xchg
push
adcb
cli
pop
sbb
push
hlt
data16
repnz
mov
cmp
mov
loope
mov
iret
fs
mov
mov
sbb
add
xchg
mov
xor
cmp
xchg
lret
arpl
enter
xchg
adc
xlat
xchg
mov
mov
iret
dec
in
movsl
pop
xor
add
imul
std
sarb
in
sbb
test
test
adc
pop
loopw
xchg
push
push
subb
dec
mov
xchg
sti
cld
pop
xchg
sarl
mov
push
xor
adc
pop
dec
enter
mov
aam
dec
push
or
nop
gs
adc
pop
ja
jmp
xchg
pop
and
sahf
push
subl
push
and
push
daa
scas
dec
mov
call
outsb
mov
insb
stos
dec
test
pop
mov
imul
dec
inc
cmp
mov
mov
gs
cltd
jne
xchg
or
jl
mov
cmovne
pop
cmp
test
jbe
xor
xor
iret
sub
cmpsl
adc
and
sbb
dec
cmp
in
shlb
aaa
adc
inc
cmp
je
repnz
sbb
add
sahf
xchg
and
push
call
fsubl
pop
xchg
mov
insb
insb
ret
jg
pop
mov
jno
in
cmp
add
and
xchg
lret
insl
cmp
es
int
daa
inc
vcvttsd2si
test
and
dec
sub
mov
lods
add
daa
and
mov
addb
test
out
cmc
mov
or
aas
ds
xchg
mov
in
filds
and
jnp
insl
stos
push
shlb
fs
push
ljmp
cmp
add
test
insl
ret
movsl
adc
test
xchg
inc
idivl
dec
fistpl
and
sub
sbb
enter
inc
sbb
andl
adc
push
add
push
ret
out
fwait
mov
add
addr16
loopne
lds
fwait
inc
add
jns
sbb
adc
sbb
or
das
shrb
mov
testb
xor
adc
popf
popf
dec
out
xor
das
pusha
cmp
cmp
jmp
es
jge
fldt
jecxz
std
ja
xchg
cmp
jecxz
jne
adc
pop
inc
aad
jp
add
xor
add
jo
fsubr
sbb
pop
push
shlb
lods
test
outsl
ret
test
sti
mov
lods
dec
fidivrs
push
and
inc
dec
or
xchg
or
inc
aas
mov
fisubrs
cmp
gs
repnz
addr16
mov
xchg
xor
mov
popf
cmpsl
pushf
cmp
cmc
stos
xchg
pop
dec
popa
scas
idivb
jle
lea
pop
xor
test
jge
ret
cltd
aad
and
inc
outsl
inc
jmp
add
cmc
add
arpl
fdivl
fnsave
shlb
xchg
ret
popf
mov
jmp
cmp
insb
xor
mov
pop
xchg
lret
inc
cmpsl
dec
scas
sti
pop
cwtl
lods
and
and
cmc
out
pop
jno
sar
mov
sub
dec
testl
xchg
xchg
outsl
and
adc
cltd
or
fistps
arpl
ret
ret
push
js
insb
sar
mov
dec
scas
popf
and
xchg
mov
cwtl
cmpsl
lret
or
push
loop
js
inc
push
call
lods
inc
sub
mov
sub
lcall
and
pop
out
outsb
fs
int3
scas
xchg
in
lock
scas
int
call
inc
ret
and
ret
pop
sbb
mov
in
xor
pop
mov
iret
ret
lret
xchg
mov
mov
in
aad
inc
sbb
xor
push
aas
or
dec
test
add
loopne
stc
cmpsb
fiaddl
incb
jge
mov
xor
test
lods
pushf
pop
mov
adc
dec
mov
push
jg
cld
arpl
stos
push
and
push
mov
sbb
push
inc
xor
add
adc
ret
mov
jae
cli
mov
jge
dec
adc
adcb
scas
mov
mov
out
xor
scas
adc
mov
adc
in
addr16
out
jmp
test
imul
in
jne
push
out
jns
lret
dec
les
das
push
fscale
adcl
imul
pop
dec
cmp
mov
mov
inc
ljmp
mov
xchg
mov
insl
pop
add
adc
mov
mov
push
out
test
pop
push
pop
pop
gs
jge
jbe
mov
xchg
add
fistps
lea
stos
pop
inc
xchg
out
rorl
mov
data16
out
or
adc
and
jb
cmc
sbb
fistl
ret
ljmp
sbb
ret
xchg
cmpsb
cmc
mov
sbb
out
ljmp
dec
dec
mov
cmpsb
push
shl
inc
lods
and
sub
repz
insb
mov
adc
push
mov
lcall
jne
inc
mov
in
mov
adc
idivb
and
and
or
fadd
mov
and
lods
push
in
ljmp
dec
aaa
cli
dec
mov
out
pop
mov
inc
mov
jb
xor
scas
sbb
mov
ds
or
dec
clc
pop
ret
cltd
outsb
into
xor
popl
rcrl
mov
nop
push
ljmp
test
add
xchg
outsl
add
jae
adc
test
xor
sub
sub
loopne
mov
rcr
lock
xchg
test
insb
cs
arpl
jns
jae
jge
lcall
repnz
in
mov
push
pop
sbb
mov
ljmp
and
pop
mov
loopne
add
xchg
push
mov
fistpl
jbe
mov
sbb
shl
jecxz
add
imul
in
inc
mov
and
lret
jmp
sub
ds
jg
or
ss
cmp
in
rcr
and
xchg
pop
sbb
xchg
fstps
inc
mov
lea
xor
mov
mov
xor
cli
cld
arpl
or
loop
mov
jae
inc
push
fidivrs
vpand
mov
push
or
test
mov
pop
stos
ss
jge
push
xchg
fs
or
int
arpl
jmp
je
mov
test
or
pop
mov
sbb
jnp
sbb
dec
fchs
and
mov
fsubr
push
xchg
jnp
push
mov
add
daa
xlat
push
and
lcall
cmp
mov
mov
inc
mov
std
adc
add
lcall
push
clc
cli
les
push
jle
sub
lods
pop
iret
popa
sbbl
push
das
ret
clc
int3
push
icebp
fstpl
and
mov
icebp
pop
cltd
test
out
jge
movntps
das
call
stc
or
testl
in
dec
bound
mov
hlt
sbbl
cli
inc
stos
adc
ret
enter
arpl
jge
sbb
sbb
ja
pop
into
fs
loopne
and
sbb
add
cmp
xor
cs
jne
and
sarb
repz
aam
inc
dec
xlat
push
dec
fstpt
mov
lds
lret
aam
inc
test
arpl
sub
pusha
mov
jae
jp
cmpsb
mov
in
xchg
stc
mov
out
test
cmp
in
pop
sbb
pushf
pop
sarb
lods
rolb
xor
sub
popa
or
jmp
lea
int3
loope
in
addr16
enter
sub
cmp
leave
mov
sbb
fcoml
shll
aas
push
and
and
aas
shlb
repnz
jo
cmp
mov
push
shrb
or
idivb
mov
pushf
stos
lahf
cmp
jne
mov
test
in
cmpsb
out
es
jle
mov
jmp
cmova
mov
imul
dec
push
pop
fcoms
scas
or
push
push
repnz
sbb
jne
les
and
mov
jne
pop
and
adc
fnstcw
or
insb
pop
adc
aad
rolb
sub
in
push
xchg
mov
mov
lahf
and
mov
test
das
sub
ret
sub
mov
xor
lods
daa
insl
icebp
sub
outsb
or
or
orb
xchg
mov
push
mov
inc
add
push
fdiv
shll
push
outsl
data16
mov
sub
cltd
pop
mov
jecxz
dec
mov
arpl
push
gs
sbb
in
rcll
in
std
movsb
ja
pop
dec
mov
or
imul
shlb
clc
fstpt
dec
xchg
push
gs
pop
mov
cmp
gs
jecxz
mov
rcrb
arpl
add
lods
ret
out
mov
jmp
in
xor
int
xchg
inc
imulb
mov
jno,pt
pop
in
sub
sti
scas
nop
cld
insl
adc
ljmp
jno
in
fld
sarl
aad
sti
rcrl
ret
sahf
pop
cmp
xabort
add
stos
or
data16
sbb
aam
lods
jb
inc
xchg
movaps
dec
adc
dec
loop
mov
pusha
xchg
mov
mov
aaa
mov
jae
push
inc
pop
ljmp
jecxz
mov
cmp
ja
xchg
and
pop
add
jae
in
add
jo
rclb
sub
sub
xor
xor
push
push
cmp
jns
call
test
cmp
mov
mov
pop
mov
jg
fs
cld
jnp
inc
loope
pop
or
mov
and
popa
ret
mov
cwtl
les
imul
mov
and
stos
xchg
or
add
xor
out
into
and
lods
or
inc
pusha
xchg
shrl
fildll
mov
vmovshdup
push
mov
test
aas
in
and
pushf
bound
sbb
dec
sub
jmp
mov
pop
sub
in
aam
cmpsb
cld
and
mov
insb
daa
inc
mov
push
inc
or
dec
mov
mov
xor
jle
movsb
adc
adc
ret
imul
cmpsb
xchg
ja
sbb
mov
out
aas
shl
fnstenv
xchg
mul
mov
divb
fsubrs
sub
and
xor
or
sbb
xchg
dec
loope
or
outsl
imul
cltd
push
int
enter
ljmp
cmp
cwtl
mov
jo
xchg
pop
sub
aam
jo
loopne
clc
push
jbe
and
pop
xchg
scas
mov
mov
cmp
jae
rorl
add
hlt
sub
bound
out
das
iret
add
aas
jae
and
shll
pushf
cltd
int3
cmp
repnz
cmp
add
inc
and
bnd
xchg
mov
arpl
and
jb
data16
pop
lret
aam
fisttps
add
aam
mov
cltd
mov
mov
sub
mov
repz
rcrl
inc
push
mov
repz
mov
adc
iret
test
xor
sbb
rolb
test
xchg
sets
lock
sub
cwtl
icebp
loopne
iret
xchg
call
mov
punpcklbw
mov
lcall
xor
jmp
fidivs
add
lgs
hlt
lods
sbb
inc
xchg
push
push
dec
adc
test
mov
leave
imulb
and
xchg
push
and
mov
push
adc
sub
lea
loop
shlb
outsb
inc
rol
sbb
mov
outsl
mov
shl
push
inc
xchg
test
stos
mov
int3
or
test
movl
or
jne
push
jl
xor
xchg
loopne
jne
push
nop
xor
xchg
inc
loop
ret
pop
sub
or
int
outsl
mov
pop
adc
lods
pop
and
cmp
mov
lret
ud1
pop
inc
sub
sar
addl
dec
mov
dec
dec
loop
mov
xchg
das
pop
adc
xlat
repnz
pop
adc
jp
push
jl
notb
jl
divb
sbb
test
xchg
aad
mov
negb
jae
push
cltd
cs
jae
pop
cmp
je
push
sub
inc
add
les
jmp
aam
popa
dec
sub
movsb
stos
enter
mov
insl
inc
enter
mov
stos
push
mov
std
ljmp
or
push
fcmovnu
adc
and
add
dec
adc
or
fisubl
fdivrl
inc
repnz
inc
cli
mov
xchg
mov
sbb
iret
in
push
sub
or
add
jecxz
shll
dec
cltd
sub
jno
shrl
xchg
mov
xor
ljmp
loop
movsb
jle
loope
nop
mov
mov
mov
fists
loopne
cmp
sar
incb
stos
cmp
mov
adc
cmp
mov
jp
mov
popf
pop
xchg
les
orb
hlt
push
sti
fnsave
xchg
test
cmpsl
xor
sub
push
add
cs
inc
xor
or
mov
cmc
sub
bound
sbb
mov
pop
pop
inc
and
in
xorb
dec
mov
jge
mov
fs
dec
insl
cltd
je
pop
add
daa
inc
call
sbb
mov
pop
loopne
xor
jle
lcall
jae
test
pop
and
sbb
ja
outsb
cmp
ja
sti
xchg
cmc
ror
shl
into
rol
leave
or
or
arpl
mov
ret
test
mull
dec
pop
jne
sub
xor
jb
ret
fildl
lcall
mov
inc
ss
mov
std
test
bound
dec
lcall
fmull
xor
jecxz
test
loope
in
adc
xchg
sub
fdivrl
add
je
bound
inc
or
jg
mov
mov
xchg
or
int
jo
jle
repnz
dec
dec
mov
ret
ficoml
movsl
hlt
jb
xlat
in
xor
jo
and
or
mov
pop
push
dec
push
rcl
les
mov
arpl
mov
or
xor
and
mov
imul
pop
adc
mov
aas
leave
jle
fwait
mov
xchg
inc
stos
push
in
pop
dec
or
jl
jle
jg
cltd
xchg
ljmp
scas
lret
pushw
into
xor
cmpsb
jmp
xor
mov
insb
jne
push
sbb
call
stos
add
out
jl
aad
fadd
arpl
push
test
mov
xor
movsb
push
call
ret
pop
push
rorl
cltd
xor
cli
iret
jb
aas
fs
lcall
cwtl
cmp
mov
mov
push
cmp
jno
pusha
insb
jae
call
mov
lods
and
mov
int3
sbb
mov
loopne
movsb
insl
xor
testl
loope
fstpl
out
mov
test
dec
sbb
cmp
in
adc
notb
pop
repnz
das
ret
jno
jne
pop
push
nop
xchg
mov
sbb
inc
jmp
add
dec
xchg
cmp
in
pop
mov
or
adc
or
push
mov
pop
push
jno
fidivs
dec
es
or
cwtl
jmp
pop
push
push
cmpsb
aaa
jp
sub
jb
in
push
adc
rcll
cmp
cltd
mov
jb
lods
ds
fwait
jg
mov
jl
fisttpl
loop
dec
out
xchg
out
or
enter
lret
lahf
in
cmpsl
adc
aaa
in
sub
lea
xor
pushf
add
les
fisubl
cmp
add
enter
dec
rcrl
sahf
mov
gs
mov
pop
les
mov
ja
repnz
jmp
std
in
mov
mov
aas
pop
sub
jnp
xor
sbb
push
add
add
push
enter
ljmp
jg
popf
sbb
data16
mov
stc
cmpsb
lods
cmp
push
nop
jge
pushf
cmp
test
test
rorl
dec
les
jecxz
pop
fadds
push
and
adc
push
xchg
mov
sbb
inc
mov
xor
cs
cmpsl
sub
pop
push
mov
sahf
repz
imul
out
dec
ss
cld
lcall
mov
lea
mov
addb
ljmp
mov
jne
dec
jne
pop
push
cmp
pop
cmp
faddp
mov
orl
mov
mov
lret
ret
or
add
mov
clc
movsb
imul
out
mul
insl
xchg
mov
xchg
aas
xchg
adc
fadd
icebp
frstor
mov
push
leave
int
add
push
in
int3
mov
out
insl
scas
ja
scas
fwait
cs
mov
test
dec
xchg
movsl
mov
push
in
pop
notl
mov
mov
sbb
fistpll
inc
jmp
pop
fs
pop
adc
push
sub
in
out
enter
dec
push
bound
cld
xchg
sbb
mov
inc
fdivrs
neg
or
stos
lret
mov
xchg
and
loope
or
das
rclb
test
or
push
cmpl
push
jae
cmc
in
mov
xchg
dec
jb
xchg
loopne
mov
lods
adc
add
mov
inc
pop
inc
cmp
out
icebp
fimuls
sub
jo
cwtl
mov
add
aad
and
push
pusha
in
mov
inc
mov
fbstp
nop
loop
pushf
cmpsl
sbb
aas
movsb
clc
jecxz
push
push
jo
je
cmp
test
stc
sub
arpl
shll
inc
dec
ficompl
mov
mulb
outsl
mov
pop
fs
lcall
in
and
out
inc
scas
enter
inc
scas
xchg
mov
test
bound
es
in
insl
and
pop
mov
mov
jne,pt
movsl
mov
jno
orl
jle
inc
lods
out
lcall
imul
sub
push
push
ja
mov
xchg
loope
sub
push
dec
jl
xor
movsl
loop
lret
and
popa
aaa
es
ja
mov
pushf
sub
arpl
shlb
loopne
pusha
push
mov
andl
movsl
call
mov
movsl
xchg
lret
mov
dec
jne
mov
jo
fst
enter
xor
jl
imul
add
incb
out
sbb
dec
xlat
pop
push
jge
addb
into
and
mov
push
lea
mov
shl
test
leave
fpatan
rcll
xor
or
aad
xchg
je
cmpsl
popf
outsl
mov
xchg
aaa
loop
bound
lds
insb
mov
test
out
xor
inc
insl
or
add
jo
xor
fisubrl
clc
sti
incl
xchg
data16
xchg
fdivrs
bound
add
sbb
push
xchg
les
out
dec
push
cltd
mov
pop
xchg
jmp
xchg
mov
bnd
cmp
mov
fistpl
mov
mov
shr
mov
jle
adc
lcall
out
dec
adc
mov
jp
lods
repz
cmp
xor
mov
jno
popa
pop
mov
mov
scas
test
xchg
out
movsl
and
repz
add
jle
lea
les
pop
mov
sub
arpl
fwait
and
test
dec
mov
sbb
xchg
lret
xchg
cmp
dec
imul
popa
sahf
fs
bound
addl
ss
dec
and
push
ret
adc
xor
dec
sar
imul
out
repz
xchg
scas
and
fisttps
ljmp
push
nop
sbb
xchg
or
or
ret
sarl
mov
shll
mov
sarb
push
jmp
jno
movsl
pop
sbb
pop
pop
inc
cmp
rolb
mov
and
pop
fsubrl
pop
or
add
adc
movsl
mov
add
scas
fldcw
ljmp
mov
mov
lret
es
mov
data16
and
xor
in
mov
fs
push
push
fcmovnbe
repnz
bound
out
enter
rol
mov
data16
adc
decl
sbb
pop
repz
test
addr16
jno
shrl
dec
icebp
mov
imull
jmp
xor
test
dec
lahf
faddp
mov
jns
inc
mov
js
sbb
mov
nop
mov
sbb
repz
mov
push
iret
test
xchg
in
es
popa
jne
fistps
subl
adc
clc
dec
pop
push
mov
push
or
insl
cmp
push
push
iret
xchg
adc
nop
and
xchg
ret
adc
inc
jno
mov
xor
rcr
aad
push
icebp
movsl
or
inc
stos
push
loop
pop
cmpsb
std
inc
popf
push
movsb
in
jbe
pop
into
aam
adcb
xchg
ss
in
out
dec
pop
and
ret
cmp
pop
sbb
lcall
lds
fsubs
pop
cmp
jmp
push
dec
lock
rcrl
pop
dec
mov
xchg
jmp
sub
fld
idivl
mov
test
aas
push
cld
inc
imul
lds
rolb
call
mov
mov
cmc
loope
div
mov
pop
mov
xor
jg
call
xor
sub
out
xor
xchg
or
adc
xlat
mov
cmpsl
shll
sub
stc
cmpsb
or
cs
xchg
imul
xor
push
sbb
mov
stos
popf
outsl
pusha
or
xor
cmp
ret
das
xchg
cmc
or
and
pop
push
mov
xchg
inc
add
push
cmp
lods
xlat
sti
xor
jo
add
sbbl
dec
rorl
push
enter
int3
lcall
aas
int3
adc
cli
adc
jb
push
adc
mov
push
mov
push
lds
mov
std
jle
gs
rcl
sub
in
and
les
mov
and
fsincos
ror
data16
shll
push
icebp
shrl
in
in
sub
sbb
pusha
cli
ret
xchg
rolb
fists
dec
into
pop
sahf
jae
xlat
aad
in
add
fisttpll
push
cltd
jno
xor
pop
jecxz
popf
push
test
fsubl
aam
in
pusha
je
xchg
inc
push
mov
repz
push
inc
loope
add
ret
pop
push
sub
lds
ljmp
fnstsw
scas
int
ds
dec
xlat
inc
fnstsw
mov
cld
fnstcw
dec
adc
and
inc
mov
pop
loop
subb
push
xchg
jle
and
pop
xchg
inc
fnstcw
sbb
out
or
push
mov
mov
xor
lods
int
add
jo
xor
pop
adc
or
iret
lock
ret
lahf
lock
jmp
pop
mov
mov
push
fsubl
fbstp
fmull
mov
jg
fsubrs
adc
cmp
cmpsb
sbb
sahf
mov
cwtl
push
cltd
ret
cmp
inc
scas
ss
aas
mov
xchg
inc
push
cmp
clc
push
lret
and
cmpsl
cmp
mov
pop
lock
sub
push
sbbl
dec
daa
xorb
add
aas
test
push
xchg
sub
pop
fbstp
arpl
repz
add
adc
cmc
push
push
mov
dec
sarb
or
xor
mov
iret
pop
shl
and
lods
pop
iret
or
mov
aam
or
adc
jo
fsts
xor
outsl
scas
popa
test
sbb
inc
xor
lcall
dec
and
aam
mov
add
test
push
icebp
jns
aad
push
dec
or
mov
aad
cmp
xlat
jne
loop
pop
jge
dec
jle
jb
jne
mov
imul
out
into
test
inc
mov
out
and
loop
adc
dec
clc
jae
dec
pop
in
test
adc
adc
std
inc
jno
xchg
lds
add
popa
out
repnz
cmp
add
mov
add
dec
jle
gs
add
or
or
fisubs
xor
xchg
xor
daa
mov
xchg
and
pop
lock
mov
popf
fidivl
scas
sbb
ja
mov
inc
inc
insb
sub
mov
or
sub
inc
sahf
negb
arpl
xchg
xchg
mov
dec
dec
push
dec
hlt
into
and
fwait
ss
addr16
outsl
sbb
jecxz
pop
sbb
pop
and
sbb
orb
cwtl
aam
xchg
mov
leave
enter
adc
mov
out
adc
sbb
mov
cmp
shr
in
pop
cmc
hlt
mov
xlat
iret
push
pop
bnd
jle
jnp
dec
cmpsl
in
icebp
add
mov
sub
arpl
lods
add
pop
adc
fsts
mov
fldt
int3
popa
iret
adc
sub
xchg
fistpl
and
pop
lahf
mov
dec
push
faddl
lcall
sar
mov
fdivrs
lods
idivl
adc
clc
inc
push
jmpw
mov
mov
sub
dec
push
sbb
lcall
subl
or
mov
xor
mov
shlb
clc
dec
add
mov
out
push
shrb
pushf
int3
xchg
aaa
pop
jo
stos
xchg
inc
ja
out
push
jle
fsub
fistl
jo
or
scas
popa
daa
xorb
dec
jae
dec
inc
bound
imul
imul
adc
dec
loop
mov
fildll
stc
jecxz
mov
or
lods
cmp
cwtl
xchg
add
pop
add
push
pop
aaa
cs
xor
or
mov
ficompl
insb
aad
andb
pop
ror
xchg
xchg
aam
nop
pop
adc
lds
jnp
jo
sbbb
xor
and
push
imul
sbb
adc
mov
push
sbb
mov
pop
mov
iret
shll
jmp
lds
adc
cwtl
dec
loop
add
in
bound
jo
jnp
mov
test
sub
or
adc
xchg
addr16
cmp
fbstp
sti
mov
pop
in
adc
je
fisubs
je
int3
pusha
dec
push
test
loopne
xchg
sti
fst
inc
mov
fsubrs
xchg
or
cmc
mov
cmc
mov
hlt
aam
icebp
pop
call
inc
push
sub
jmp
mov
sub
ss
jo
lcall
imul
clc
ss
stc
mov
mov
inc
push
mov
insb
mov
push
cmp
xchg
je
jae
sbb
orl
xchg
adc
je
fcmovnb
mov
or
mov
stos
jns
jg
subl
cmp
cmp
and
sub
push
push
mov
mov
xorb
mov
dec
bnd
pop
adc
cmp
jle
add
sarb
or
ds
push
xchg
cmp
pop
inc
push
dec
mov
dec
movsl
xor
adc
pop
add
lods
mov
push
gs
inc
insb
add
rcpps
out
sbb
cmpsl
push
imul
push
shll
jns
repnz
std
lock
xchg
add
adc
mov
fwait
sub
in
dec
xchg
insb
shrl
adcl
xchg
ss
imul
lret
arpl
leave
mov
ljmp
or
and
mov
mov
fwait
add
outsb
mov
sbb
or
das
call
inc
mov
fdivrs
add
dec
in
mov
push
fcmovnu
xchg
pusha
inc
xor
inc
outsl
add
push
int
loopne
insb
xorl
inc
mov
jo
mov
push
sbb
js
xor
push
mov
dec
push
les
test
nop
lcall
xchg
cmp
xchg
jmp
pushf
mov
inc
nop
mov
call
idivb
xor
sub
out
int
adc
jnp
dec
cmp
rclb
jns
call
outsl
mov
jmp
pop
inc
ss
test
ja
mov
jno
fs
xor
mov
fmull
repnz
push
ret
and
scas
mov
push
jecxz
aas
nop
sub
jne
pop
shll
and
jl
popf
bound
jnp
dec
sbbl
sbb
fmuls
jns
incl
pop
lahf
push
mov
aad
sub
push
mov
add
push
sub
push
jle
iret
or
mov
int3
or
subl
ret
pshufw
lahf
insb
ficoml
es
icebp
mov
lock
in
jae
addr16
pop
xor
insl
out
fnsave
psadbw
inc
xor
xor
lcall
das
mov
into
cwtl
inc
iret
sbb
or
pop
mov
aam
xchg
jo
pushf
dec
outsl
mov
int3
inc
sarl
rcrl
andl
sbb
movsb
int
jbe
adc
or
jecxz
or
ss
cmpsb
in
push
ljmp
xor
jb
and
inc
xorl
or
inc
rcrb
and
subb
repz
cmpb
mov
das
pop
in
mov
dec
outsb
add
push
and
cmp
pop
xchg
aaa
mov
adc
data16
sub
daa
popa
add
lods
sbb
lahf
popf
lods
sbb
test
xchg
popa
sub
dec
ret
or
cmpsl
push
loop
in
in
inc
out
sbb
jo
cmp
stos
shl
lret
pop
bound
and
jmp
push
sbb
add
arpl
push
sub
cmpsl
aaa
das
or
inc
sub
sub
push
testl
scas
sub
xchg
mov
jmp
jnp
loope
lcall
in
and
int
test
pop
inc
xor
imul
mov
mov
loopne
inc
negb
stos
mov
sbb
sbb
ret
mov
push
gs
ds
rcrb
mov
and
js
xchg
std
hlt
and
mov
sbb
cli
pop
rcll
insl
in
jmp
loopne
movsl
mov
adc
adc
movsl
movsb
sbb
popa
xor
test
popa
sbb
push
jb
jmp
ds
cmp
shrl
xchg
dec
cmp
jle
sbb
push
popf
addr16
pop
cmp
hlt
jbe
mov
test
andl
jno
lret
xlat
mov
addr16
mov
xor
sbb
mov
psubd
out
jg
popa
cmp
lods
mov
and
cmp
mov
notl
lret
adc
or
push
scas
push
es
sbb
mov
jg
lcall
movsl
inc
test
add
scas
outsl
sub
bswap
push
pop
cli
inc
pop
xor
cmp
aas
mov
imul
ret
pop
jb
ja
pop
jbe
shl
lods
test
sub
into
cmp
pop
xchg
int3
adcl
jb
lea
push
fisubs
add
push
imulb
mov
inc
pop
lods
adc
arpl
in
cmp
push
jle
mov
nop
out
xchg
fistpll
add
xor
or
inc
int3
adc
pop
dec
adc
push
mov
xlat
xor
and
add
pop
jmp
sub
dec
dec
inc
cmp
inc
movsl
pop
inc
insb
jbe
xor
loop
mov
jp
dec
lcall
out
repz
mov
stos
and
xor
hlt
stos
push
sbb
jmp
nop
add
push
mov
les
and
sbb
inc
or
bswap
or
daa
mov
mov
std
cmp
pop
jl
push
sbb
and
sbb
les
adc
popf
xchg
arpl
sub
icebp
jb
stc
adc
into
xchg
rorb
pusha
push
pop
xor
lods
xchg
cwtl
adc
jg
aad
movsb
in
dec
fs
pop
sbb
aad
dec
stos
jl
ret
push
cmpsl
jge
int
jmp
and
fcmove
into
fcmovne
sbb
mov
add
adc
in
jl
push
aas
loopne
aad
ret
pop
rclb
mov
les
jle
in
mov
es
xor
xchg
aad
xchg
lea
insl
mov
sub
jb
mov
es
cmp
add
out
push
in
lea
ja
imull
cmp
stc
xchg
mov
xchg
scas
std
push
pushf
xor
mov
fisttpl
sub
shlb
xor
jne
fcmovnb
outsl
jle
xor
mov
sbb
icebp
lods
push
outsb
pop
sub
addr16
push
test
out
or
ror
call
xor
pusha
jge
pop
jmp
mov
cmpsb
jnp
bound
ret
push
sti
inc
push
out
and
pop
fisubrs
lock
out
sti
mov
dec
jae
pushf
adc
mov
jp
inc
scas
outsb
jo
shrl
leave
jle
das
or
out
lea
shrb
and
ret
adc
xchg
xlat
mov
test
dec
xchg
lret
mov
outsl
jnp
cmp
cmp
and
lods
mov
lods
adc
rcll
mov
mov
mov
in
int3
test
mov
jg
jg
inc
movsl
and
shlb
mov
xor
int3
daa
push
pop
das
mov
rcll
inc
rclb
std
cmp
enter
setnp
add
mov
jp
push
mov
sti
out
push
sbb
xor
dec
cld
rcrl
pop
dec
add
jl
cltd
mov
mov
xchg
add
jb
rcll
ljmp
repz
cld
aas
hlt
mov
clc
repz
xchg
lods
sbb
inc
mov
stos
bound
cmp
xchg
or
xor
iret
jne
xchg
push
xor
pushf
xchg
fdivp
sahf
push
outsl
pop
mov
or
js
stc
shl
xchg
outsb
cmp
mov
jle
push
and
dec
out
mov
lods
test
ss
sbb
stos
pop
out
pop
inc
xchg
addr16
jp
ret
push
dec
leave
sbb
ret
cwtl
add
pop
inc
inc
cmc
cmp
lcall
mov
fisubs
lcall
and
dec
in
fucomi
push
stos
mov
mov
dec
mov
fbld
mov
lock
inc
jnp
cmpsb
fldl
adc
adc
mov
add
mov
mov
ret
add
imul
add
sbb
mov
dec
mov
sahf
dec
ret
xchg
adc
cmp
xchg
in
mov
test
cmc
shrl
ds
cmpps
clc
mov
pop
mov
mov
movsl
mov
je
mov
rcrl
jg
outsl
jns
inc
jmp
xor
sahf
lahf
dec
loope
mov
ja
xchg
fsubs
pop
push
sub
mov
or
cmp
xchg
pop
fdivrs
inc
or
insb
outsb
mov
shrl
fistps
or
pop
adcl
and
and
std
adc
aaa
ja
out
mov
inc
cltd
inc
insb
fwait
aas
cs
js
push
and
roll
in
add
ret
xchg
lock
inc
jmp
add
push
decb
sub
cs
test
pop
xchg
jmp
stos
jno
mov
rclb
pop
dec
pop
mov
repnz
mov
pop
mov
fucomi
popf
mulb
lock
push
pop
inc
ret
pop
sbb
lret
outsb
rcl
cltd
and
inc
dec
sahf
jl
xor
mov
push
fisttps
dec
outsl
shll
ds
pop
das
cmp
loopne
xchg
sti
leave
pminub
daa
mov
xorl
inc
xchg
popa
das
xchg
ret
push
movaps
lcall
push
in
lods
fstpt
enter
sbbb
dec
or
adcl
and
cmpsb
and
add
ret
cmpl
add
jbe
cmp
out
aam
and
add
xchg
sub
inc
les
test
pop
xor
scas
sbb
mov
sahf
mov
mov
cmpsl
out
das
mov
notl
xor
cmp
lock
sub
cmp
cli
je
in
in
add
add
jge
lahf
adc
inc
mov
add
aas
les
pop
mov
push
fnsave
add
and
jle
and
cmpsl
or
pushf
loopne
add
push
pop
or
xor
das
stos
adcb
dec
sbb
sub
test
xchg
cld
xor
xor
sub
decl
xor
outsb
push
bound
fwait
add
xor
mov
in
out
mov
cmp
jns
adc
test
mov
adc
gs
or
out
loope
jg
ss
outsb
ss
subl
jge
xchg
sub
dec
fistl
cli
mov
fstps
mov
std
fldl
movsb
icebp
mov
jmp
hlt
out
jne
mov
and
clc
sub
xchg
push
rcll
rol
outsb
lcall
dec
dec
mov
out
aas
or
in
and
xchg
push
ret
and
mov
xchg
rorb
sbb
aam
push
clc
xor
mov
inc
ficoml
in
and
fnsave
test
pushf
adc
xchg
scas
dec
sub
call
jb
xchg
js
inc
bound
test
shll
and
pop
std
aaa
mov
add
mov
rcr
out
inc
mov
cli
lcall
addr16
jo
cmp
pop
out
test
inc
pushf
jb
stos
xor
pop
inc
mov
mov
fists
in
cmp
sbb
in
mov
mov
adc
push
mov
movsl
xor
and
or
mov
pop
repz
imul
sub
jle
shrl
shlb
mov
rolb
mov
addr16
cmp
add
data16
push
dec
imulb
xchg
xchg
stc
jb
in
cmp
cmp
push
sbb
dec
cmpsl
ss
movsl
hlt
push
mov
addr16
mov
push
xor
add
lahf
notb
jp
sub
in
cli
fcoml
rorl
push
mov
or
lret
cwtl
mov
mov
lret
outsb
imul
fiaddl
cwtl
pop
js
js
inc
repnz
scas
mov
xchg
add
ss
sbb
test
pop
pop
stc
lods
sbb
in
inc
mov
fstl
in
pop
cli
ds
jo
pop
mov
loop
add
jge
jo
repz
cmpsb
inc
fildll
push
xchg
add
and
or
pushf
insb
int
out
add
inc
mov
pop
and
mov
mov
shrl
xchg
fbstp
sub
in
push
adc
arpl
insb
mov
jne
sub
sbb
fdivl
fsubl
adc
call
movsl
and
sahf
jnp
sub
pushf
stos
imul
mov
cmpsl
jle
cmpsl
jg
pop
mov
push
cmp
cmp
orl
mov
jno
dec
loope
cld
push
and
out
or
lcall
addr16
pop
outsl
lahf
rclb
lahf
sub
pop
fistps
xchg
hlt
fnstsw
xchg
mov
outsb
or
mov
insb
mul
aad
mov
inc
mov
add
mov
rcr
in
fcmovne
imul
repz
loop
sar
dec
inc
test
xor
leave
mov
stos
mov
jmp
jnp
xchg
cwtl
icebp
ljmp
ja
and
fiaddl
jne
dec
mov
inc
ss
inc
sbb
enter
nop
outsl
adc
push
adc
in
push
inc
ds
mov
imul
scas
rcr
cld
sahf
faddl
cld
sbb
lock
popf
mov
lods
in
cvtps2pi
adc
je
push
jne
xlat
sub
fimull
or
test
sti
out
push
dec
mov
sbb
popa
or
jecxz
xchg
rolb
sahf
sti
xchg
pop
dec
mov
jnp
xchg
mov
push
jo
or
cli
pop
xchg
xchg
fnstenv
add
or
call
xor
rolb
and
in
cld
mov
fnsave
xchg
and
mov
nop
popf
pop
in
pop
insl
out
scas
adc
dec
sti
push
decl
repz
mov
fsubp
in
add
add
lock
mov
lahf
cmp
fistpl
xor
lock
stos
inc
sub
sbb
dec
lcall
inc
popf
dec
add
ds
idiv
mov
mov
pop
int
testl
or
inc
jne
inc
jno
rclb
shr
jb
cwtl
mov
push
dec
add
or
out
notl
adc
stos
sti
mov
in
loopne
xchg
mov
loopne
sbb
stos
repnz
sbb
sbb
lods
out
add
or
add
loope
cmp
pop
imul
int3
xlat
adc
mov
sub
jns
scas
mov
das
sbb
mov
data16
push
xchg
inc
mov
test
sti
inc
xor
xlat
mov
es
enter
pop
jle
add
adc
jle
pop
push
lret
rcr
pop
arpl
test
sarb
int3
cmpsb
ja
mov
mov
inc
pop
fldt
lds
push
sbb
push
lahf
push
lods
xchg
leave
dec
pop
dec
push
or
adc
ret
repz
insl
xadd
sub
sub
or
xchg
inc
pop
es
hlt
pop
aam
in
mov
cmp
int
sub
or
or
mov
xchg
daa
mov
push
push
pusha
ret
movsb
or
sub
call
sbb
aas
pop
jnp
lret
sahf
xor
int
aas
pop
fistps
cmc
or
shll
and
ret
cmp
pop
popf
push
mov
add
das
lahf
lret
dec
xchg
pop
xor
cmpsl
push
or
inc
push
dec
xchg
mov
arpl
mov
jmp
jg
iret
or
fs
xchg
dec
add
xchg
sub
xchg
jo
fsubrl
mov
les
ds
jae
pushf
sbb
jb
test
repz
mov
jge
or
fs
add
jg
fs
pop
sti
or
ss
push
xchg
mov
sub
lods
imul
xchg
xchg
loopne
lea
ret
cli
sbb
cmp
or
mov
push
dec
jbe
scas
xor
add
jae
cmp
rol
dec
jbe
movsb
ret
mov
adc
adc
inc
fsub
gs
push
out
cmp
pop
push
shlb
dec
cmpsb
outsl
ds
lret
fidivl
xor
xchg
dec
and
inc
lock
sbb
add
cmpsb
loopne
rcll
cmp
pusha
aas
push
add
xor
pop
jmp
xlat
and
rcr
sbb
sbb
inc
jl
repnz
decb
inc
mov
xchg
les
outsl
cmp
nop
xor
subb
cmp
mov
and
cmp
clts
mov
cmpl
mov
and
mov
decl
cmpsl
jne
lret
aad
hlt
pop
sbb
stos
add
xor
or
and
dec
cwtl
int3
lahf
push
shll
or
out
enter
sti
lods
push
js
inc
mov
sub
aaa
mov
loope
sbb
xchg
jmp
pop
xchg
je
xchg
dec
sub
aas
jmp
pop
jge
popa
sbb
mov
cmp
lret
push
xchg
in
in
jecxz
cmp
pop
jecxz
out
test
cmp
sub
xor
ffree
arpl
sub
out
mov
pushf
cmp
push
jno
adc
es
adc
jle
rorl
or
cli
jmp
cwtl
mov
jl
sbbb
js
lret
xor
insb
popa
add
in
mov
push
or
xchg
pop
xchg
shlb
cmpsl
pop
decb
jecxz
push
inc
xor
mov
pop
cmp
and
xchg
inc
pop
pop
pop
push
ret
inc
mov
jge
mov
pop
or
jns
bound
xchg
mov
lcall
ja
repnz
xor
mov
mov
push
xor
scas
mov
push
mov
mov
dec
push
add
inc
cld
jle
scas
jo
jnp
cmc
mov
int3
add
movsl
or
je
test
and
dec
xchg
sarb
popf
std
mov
inc
sbb
mov
test
mov
adc
inc
dec
das
lods
cmc
push
daa
mov
jno
jbe
mov
sahf
not
decl
xchg
sbb
adc
mov
mov
mov
mov
outsl
add
out
aaa
ret
mov
cwtl
adc
cli
ret
add
and
call
pop
xchg
cmp
inc
xchg
into
sbb
fsubrl
lods
clc
ss
and
push
popa
jge,pn
xchg
in
test
loopne
ficomps
or
pushf
addl
adc
cmpsb
push
ss
mov
jmp
pop
andl
dec
mov
daa
xor
icebp
jle
mov
cmpsb
dec
xchg
dec
out
addr16
ret
pusha
sbb
sbb
daa
lods
fildll
xchg
push
inc
repnz
and
jg
jp
add
mov
int
adc
je
mov
lea
mov
sbb
adc
popf
add
imul
jge
mov
ret
in
scas
dec
aas
sbb
outsb
cmc
jge
xchg
testb
lds
loope
or
xor
xchg
mov
mulb
cwtl
xchg
fsincos
incb
pop
aaa
dec
in
mov
cmp
addr16
and
lcall
dec
push
dec
daa
test
ficomps
shr
repz
or
gs
cwtl
imul
sub
ror
pop
xor
sbb
adc
push
aam
shll
push
imul
adc
xchg
in
imul
es
insl
xchg
outsl
or
mov
or
mull
stos
xchg
lock
in
das
adc
push
divb
mov
orl
ja
aas
leave
mov
mov
aam
sbb
int
aad
mov
mov
insl
sbb
cmp
or
shl
jnp
test
jb
cmp
in
mov
push
cmp
and
test
pushf
scas
push
mov
pop
sbb
mull
enter
pop
popa
lahf
and
dec
fsts
and
mov
pop
outsl
jb
jg
arpl
outsb
data16
ja
rcl
xchg
call
xchg
mov
lods
gs
std
adc
xchg
xchg
out
in
incb
push
ret
psraw
cmp
test
add
cld
clc
or
jp
jmp
jnp
jle
cmp
ljmp
mov
sbb
dec
cli
sbb
sbb
dec
jne
mov
pushf
imul
iret
shlb
aam
sbb
mov
arpl
add
dec
test
xlat
mov
mov
adc
sbb
mov
jle
outsb
jmp
adc
int
mov
or
jecxz
inc
mov
in
add
fs
repz
jmp
repz
pop
adc
xchg
mov
push
push
lock
sarb
sub
ja
push
sbb
shlb
fnstcw
std
or
and
bound
mov
jo
jg
dec
data16
lcall
inc
pop
aad
pop
jecxz
sbb
jae
aam
aam
or
xchg
jg
add
subl
jmp
cs
sbb
cmp
insb
push
cmp
xchg
das
bound
adc
and
test
mov
mov
cld
lods
mov
in
fiadds
cmp
or
mov
push
fmulp
xorb
xchg
cli
mov
mov
sbb
ljmp
rcr
iret
repz
mov
mov
or
mov
jecxz
xchg
and
push
cmpsb
mov
xor
or
clc
das
icebp
adc
jecxz
push
mov
nop
sti
and
or
test
pop
push
int3
xchg
iret
inc
mov
and
inc
sahf
daa
fmuls
mov
add
popa
sub
jno
cmp
jle
out
cltd
cmc
mov
divb
mov
cld
fs
cmp
js
cmp
jmp
lods
xchg
cmp
iret
and
fldt
not
loop
adc
rcr
xor
mov
fs
push
jns
jb
jo
push
mov
stos
mov
mov
stos
push
mov
pop
xor
jbe
or
mov
in
push
pop
repz
adc
arpl
or
sti
dec
adc
xor
xchg
sbb
lahf
pushf
pop
pop
cli
or
sub
stc
jnp
mov
aam
mov
push
mov
mov
scas
sbb
hlt
jae
rolb
sbb
xchg
ficoml
push
or
xchg
imul
push
ret
cmpsb
or
scas
into
pop
rclb
push
sbb
call
mov
jmp
mov
inc
pop
cs
data16
lcall
pop
popf
xor
cli
dec
xchg
lods
pop
jno
mov
in
jl
lcall
cs
mov
popa
and
cmove
ja
push
xor
sbb
push
xorl
ljmp
or
xor
jne
sub
std
cmp
sub
ffreep
movb
and
rcrb
jno
lcall
leave
and
pop
ja
jae
nop
icebp
dec
enter
test
sub
lahf
or
or
mov
push
inc
outsb
lcall
pop
out
xor
ss
bound
push
mov
mov
sbb
int3
dec
add
pusha
push
push
jmp
cli
loopne
push
in
mov
fstps
mov
lret
jmp
ret
aam
daa
cwtl
sbb
mov
or
test
pop
movsl
adc
cmp
stos
iret
sub
inc
aad
xor
ss
jo
sub
mov
mov
arpl
movsl
cmp
mov
add
popf
cwtl
test
sub
lcall
push
testb
btc
test
dec
xchg
cmp
dec
and
rclb
mov
mov
in
scas
xchg
xor
xor
jl
push
cwtl
and
fdivrl
push
and
jae
mov
lret
push
sti
dec
pop
fadds
inc
and
psubb
aad
xor
pop
dec
dec
stc
dec
pop
xchg
inc
mov
pop
or
rcrb
arpl
imul
adc
andl
imul
ja
js
mov
dec
cmp
inc
push
mov
push
daa
or
or
cld
fiaddl
mov
add
jne
dec
rcrl
xchg
insl
mov
repnz
call
mulps
mov
pop
ss
lods
or
jne
adc
xchg
mov
ret
mov
add
dec
int
cwtl
insb
lods
pop
sub
mov
mov
fsubrs
mov
nop
xchg
jle
mov
jb
imul
mov
pop
jns
outsb
inc
pop
push
inc
lret
clc
push
or
shrb
mov
and
jne
adc
iret
xor
rcrb
add
mov
xor
jp
scas
fldcw
add
movb
pushf
jns
jge
push
ret
iret
mov
mov
callw
sub
testb
loope
stos
sub
xlat
cmp
pop
add
ret
cmp
or
lds
jmp
push
or
ret
imul
xchg
addr16
scas
loope
pop
sub
cltd
pop
test
negb
popa
test
xlat
int
xor
jb
dec
dec
pop
test
cmp
dec
jp
or
shlb
or
and
mov
dec
and
js
jmp
mov
loope
cmpsb
add
aad
inc
dec
jo
push
repnz
aas
and
pop
fisubrs
adc
sub
ds
pushf
lcall
shrb
es
and
mov
ss
cmp
repnz
pop
dec
stos
mov
enter
add
sub
or
pop
iret
add
clc
ljmp
xchg
inc
mov
or
in
push
add
mov
lods
rorl
jge
stos
xor
xor
and
inc
out
add
dec
jb
push
xchg
out
lret
fimuls
lods
or
mov
das
push
cmpsl
jbe
int
lahf
in
push
pop
lahf
leave
or
mov
dec
out
sbb
stos
aad
cmpsb
mov
add
cltd
loopne
mov
imul
adc
lds
xchg
lds
sub
enter
inc
mov
mov
mov
dec
inc
loopne
dec
mov
mov
or
iret
test
push
lods
jb
dec
in
mov
bound
pop
sbb
push
inc
xchg
pop
test
lcall
orl
push
lods
jbe
mov
pop
mov
fwait
jecxz
pop
aam
test
jle
scas
inc
xchg
sbb
sahf
outsl
push
incl
imul
nop
nop
xchg
sbb
jb
pop
sbb
mov
mov
stos
lods
in
mov
in
jp
out
mov
cmpb
gs
or
in
pop
addl
out
push
daa
mov
mov
xchg
not
add
jbe
pop
xchg
scas
or
xchg
sub
jae
xchg
inc
fdiv
dec
addb
scas
sbb
int
or
push
or
push
negb
dec
jl
insl
inc
mov
mov
jnp
sarl
jne
dec
stc
cltd
sbb
popa
fldpi
scas
xor
add
cld
and
xor
rol
fadd
frstor
out
or
mov
je
incl
mov
push
test
dec
lcall
push
sub
and
enter
cmc
push
mov
shrb
jp
dec
lret
jecxz
xchg
outsl
inc
or
fisubrl
adc
out
out
pop
outsb
outsl
in
imul
mov
lret
xor
fsubs
outsl
jae
ret
mov
push
inc
dec
pop
ret
mov
lods
pop
test
and
push
cli
jns
fucom
pop
mov
mov
fucompp
xchg
cld
insl
pop
es
cltd
addl
clc
and
dec
mov
push
adc
adc
gs
inc
pop
sub
call
aam
rclb
or
fsubs
pop
repnz
jne
inc
dec
inc
push
fisttpl
sub
push
rolb
rol
rcll
test
mov
das
add
push
mov
sub
repnz
out
adc
mov
cmpsb
jb,pt
xchg
mov
pushl
adc
cs
sarb
jg
mov
cmc
mov
mov
cmpsb
out
sbb
and
insb
test
mov
dec
lock
lea
xchg
out
movsl
mov
or
or
outsb
ds
aaa
add
js
xor
inc
xor
jb
pop
pop
arpl
js
pop
push
test
lahf
outsb
xchg
push
add
adc
ret
bound
fwait
rcrl
sbb
jbe
in
dec
rcrb
dec
push
cwtl
sbb
out
stos
cmp
and
jg
xor
cld
sbb
mov
xchg
dec
out
add
pop
shrl
pushf
inc
cmp
shrb
xchg
pop
add
mov
scas
jne
jp
stc
mull
xorl
push
add
ror
aas
cli
pop
xchg
pop
push
ljmp
clc
mov
pop
lods
mov
xor
mov
jp
or
orb
adc
imull
push
jnp
in
stos
mov
cltd
aaa
mov
popf
mov
xchg
fbstp
push
jge
fistpl
xchg
xchg
in
daa
scas
jae
xchg
jp
adc
cmp
mov
lods
pop
dec
hlt
push
pop
fcmovne
inc
and
fldenv
push
arpl
mov
gs
sub
jb
lahf
ret
mov
sub
pop
inc
mov
pop
sub
push
pop
adc
movsl
jb
dec
dec
dec
inc
fimuls
lcall
sub
jl
adcb
mov
pusha
mov
or
mov
push
xchg
jno
push
ja
mov
sub
jmp
push
lods
sbb
push
push
mov
cmp
sub
mov
dec
or
loope
fistps
jp
and
xchg
add
fiaddl
pop
mov
mov
and
cld
lcall
sbb
cmpsl
inc
cmp
idivl
pop
mov
jge
enter
dec
mov
outsl
sub
sbb
xor
and
adc
dec
and
arpl
xor
mov
jle
stos
xor
dec
pop
pop
pushf
cmp
push
push
lahf
pop
leave
insl
cmp
xlat
push
jne
jbe
xor
orl
test
push
cmp
fstpt
inc
push
dec
sbb
movsb
adc
jne
out
nop
pop
mov
sbb
add
dec
inc
movsb
frndint
jp
stc
enter
scas
cld
push
dec
and
xor
pop
mov
jmp
or
inc
leave
xor
push
shll
loopne
jo
push
mov
sar
push
mov
arpl
ss
dec
cmpsl
es
xchg
jle
pop
sti
ror
sbb
pop
repnz
int
mov
pop
dec
jns
loop
mov
adc
mov
aaa
shr
enter
cli
dec
imul
fadds
fsubrs
cmpsb
xchg
or
leave
hlt
lahf
adc
fisttps
repnz
cli
xchg
fildll
mov
dec
xor
pop
add
mov
mov
iret
adc
imul
insb
je
fistps
cmpsl
push
xor
mov
sbb
cwtl
mov
jno
jg
and
pushf
jge
pop
loopne
pop
notb
push
idivl
inc
or
clc
push
pushf
or
fdiv
jl
gs
pop
xchg
int3
lahf
push
jb
jo
mov
ja
scas
cwtl
mov
xor
fdivl
add
add
cmp
scas
jmp
imul
aas
sahf
gs
cs
daa
mov
movsl
push
xor
inc
ja
out
cmp
pop
sub
xchg
or
mov
cltd
add
js
pop
mov
cmp
pop
xchg
sub
jecxz
inc
jg
cmp
js
insl
stos
sub
jbe
ja
out
jl
ficompl
ret
cmpb
test
jl
lret
add
mov
jae
jns
es
and
inc
add
adc
pop
and
xor
jno
rcll
xchg
and
pop
xchg
jne
mov
xchg
rolb
push
sub
stc
into
imul
daa
fildl
mov
fidivrs
sub
jne
iret
into
shl
imul
xchg
data16
mov
mov
cli
xchg
xchg
jg
mov
inc
mov
sbb
shr
das
in
in
mov
and
iret
lea
adc
xor
shlb
arpl
sbb
fcomi
fwait
jmp
shll
call
pop
pop
xchg
arpl
das
jae
sarl
jbe
xchg
jg
add
pop
scas
mov
adc
gs
pop
adc
clc
lret
and
js
hlt
mov
imul
xor
sahf
stos
cs
movsl
imul
mov
mov
mov
jbe
lret
inc
cmp
out
and
mov
stos
xchg
ljmp
adc
insl
push
dec
sub
daa
mov
mov
roll
lret
mov
or
push
loope
ret
add
push
fisttpl
mov
adc
test
je
in
je
sub
lods
dec
or
cld
and
clc
decl
rorl
es
mov
dec
mov
pop
mov
lret
aas
jmp
add
insb
insb
jmp
popf
pushf
fcmovnu
push
cltd
or
rorb
inc
pusha
add
dec
shl
ja
loopne
inc
xchg
icebp
cmpb
or
out
enter
cmp
cmp
push
and
loopne
push
test
pop
ds
add
loop
dec
or
js
jbe
lods
fisttpl
lret
jno
fcomp
cmp
cmpsb
test
addl
cmc
out
nop
push
arpl
dec
lcall
mov
pop
loop
outsl
jmp
rol
mov
adc
lea
scas
adc
clc
pushf
arpl
add
imul
xchg
fstpl
fcom
jl
inc
or
jmp
inc
js
adc
push
jb
in
add
or
inc
into
mov
push
ficoml
cmp
mov
cmpsb
xor
ja
xorps
adc
cmp
jno
ret
sub
rclb
cld
out
in
icebp
int3
sbb
ret
sub
into
stos
xor
mov
ret
lahf
out
aaa
push
or
xor
or
out
sahf
test
and
out
xchg
sbb
mov
fsts
xchg
xchg
loope
je
xchg
repnz
dec
cmp
xchg
mov
pop
push
xor
hlt
addr16
pop
dec
or
or
pop
out
pop
sub
cld
fcompl
xchg
push
cmc
fwait
mov
rolb
and
and
pushf
sub
pop
cmpsl
mov
or
dec
push
imul
cltd
std
cmp
std
mov
lea
xchg
pop
pop
adc
fyl2xp1
pop
fwait
xor
mov
and
add
xor
push
mulb
or
test
call
gs
push
in
pop
sub
pop
in
xchg
inc
cmp
add
dec
or
and
or
cmp
mov
mov
mov
lods
mov
insl
or
xor
xor
test
aad
push
push
loopne
xor
or
popa
inc
adc
loop
ja
dec
rorb
int
push
lds
jmp
jno
cs
arpl
xchg
xchg
dec
jne
adc
gs
pop
fwait
cmp
addb
sbb
repz
push
pop
adc
rolb
adc
push
cld
push
or
adc
and
jp
mov
jp
idiv
loope
adc
scas
mov
add
sbb
sub
in
sbb
jg
rcrb
add
into
js
sbb
mov
fisubrl
jns
dec
lds
iret
push
mov
mov
leave
and
popa
aaa
lea
jl
adcl
lds
imul
inc
notl
pop
push
pop
je,pn
adc
dec
insb
jno
xor
adc
jl
inc
sub
test
push
aas
bound
cwtl
call
add
push
loope
lds
sub
xor
sahf
dec
rclb
ja
insl
insb
imul
ss
ljmp
dec
aaa
sbb
mov
pop
sti
pop
stos
sub
jge
or
sbb
pop
dec
and
pop
imul
in
pop
fs
lods
repnz
sub
sahf
test
add
insl
or
cmpsl
push
setno
test
leave
rcrl
push
in
fsubs
push
dec
mov
shll
xchg
lock
out
int
aaa
test
lret
scas
or
cwtl
add
lret
arpl
add
jl
jb,pt
or
dec
xlat
mov
gs
int3
shl
lahf
or
rcll
sub
ret
ret
pop
popa
cmp
outsl
iret
pop
mov
lret
test
imul
sahf
mov
xchg
and
arpl
cmp
cmc
mov
inc
xchg
in
inc
pop
rcl
cmp
outsl
sub
scas
dec
pushf
push
out
jl
inc
lock
cmp
xor
aaa
aad
loop
xor
sbb
xchg
push
pop
sahf
adcl
js
test
pop
mov
pop
jae
push
lcall
test
mov
inc
and
pop
mov
xor
jmp
insl
xor
xchg
and
outsb
lods
mov
lret
add
push
xchg
enter
cmp
cmpsl
or
add
out
pop
jmp
xorb
lods
xchg
in
dec
pop
pop
imul
mov
sbb
dec
or
adc
dec
repnz
xor
jo
and
addr16
daa
or
std
pop
xchg
cs
ljmp
aas
shrl
mov
sub
mov
daa
and
dec
incb
aam
jle
rcrl
sbbl
in
push
and
add
call
repnz
icebp
cmc
mov
cmp
cmp
mov
ret
insl
pop
mov
inc
int3
push
jle
hlt
popf
mov
push
xor
sbb
push
into
fidivrl
cmp
leave
aam
cmpsb
dec
mov
or
sub
shll
ja
movsl
mov
rorl
lds
or
std
push
inc
loop
movsl
push
mov
inc
test
jecxz
stos
rcl
dec
mov
testb
loop
jmp
popa
adc
mov
mov
iret
mov
sbb
je
cli
xor
repnz
insl
push
sbb
in
push
mov
int3
in
dec
adc
push
dec
shll
lea
dec
lea
push
or
ds
daa
mov
and
dec
addr16
test
cli
adc
jae
insl
stos
test
outsb
fucomi
pop
dec
and
das
mov
cmpsl
test
cwtl
mov
stos
push
bound
mov
fistpll
jge
xor
repz
inc
pop
dec
jne
pop
ret
das
sub
mov
dec
in
pop
jae
fistl
call
into
inc
dec
dec
enter
pusha
js
mov
jmp
lret
shlb
movsb
arpl
cwtl
inc
jno
sbb
decl
adc
push
inc
aam
and
rcrb
xor
mov
mov
sbb
in
xchg
xchg
pop
fcom
jno
sbb
inc
and
sbb
mov
dec
push
jae
js
std
or
dec
add
push
lock
mov
cli
sub
xorb
push
dec
mov
in
jns
insb
sub
mov
cmp
fwait
inc
ret
xchg
jns
lods
in
rol
mov
or
repz
pop
dec
fldenv
xor
rcrb
in
push
in
sub
fldpi
rcll
mov
mov
je
into
jbe
jns
nop
pop
push
add
sub
add
into
cmp
test
pop
jle
xchg
clc
bound
xor
notl
xor
mov
adc
ret
push
xor
into
or
pop
fwait
mov
adc
in
push
jnp
nop
push
cmp
test
or
mov
sub
pop
mov
loope
jae
sti
push
jno
enter
xor
pushf
sbb
mov
dec
lods
xor
shlb
insl
cld
loop
mov
inc
jbe
lds
xlat
mov
sti
jecxz
fidivrl
jge
jae
jmp
loopne
inc
loope
mov
mov
divl
cmp
ss
add
lea
je
insl
xlat
push
in
and
lods
push
fcomps
sub
adc
jp
in
adc
test
jge
push
cmp
sbb
push
nop
add
sub
decl
shll
mov
pop
adc
push
movsl
jp
or
enter
aaa
pusha
iret
lcall
stos
cmpsb
out
ret
cmp
xchg
mov
xor
or
testb
lods
jbe
add
or
jp
jne
in
push
mov
les
ret
and
pop
movsl
mov
jg
hlt
inc
hlt
xchg
mov
data16
adc
leave
iret
inc
in
aad
aam
mov
xor
ss
dec
insl
iret
aam
lods
div
xchg
push
push
inc
cmp
scas
inc
mov
js
hlt
cli
push
add
cmp
xchg
adc
enter
cmpsb
add
sti
mov
pop
pop
pop
inc
mov
rol
mov
pop
iret
int3
adc
adc
pop
ds
xlat
dec
test
jae
cld
xchg
lahf
jno
out
xor
es
push
inc
cmp
test
push
cmpsl
adc
inc
ficoml
dec
or
loop
jecxz
lock
cmp
es
push
adc
orb
xor
sbbb
push
cmp
add
in
out
decb
pop
imul
fidivrs
add
inc
in
test
sub
sbb
adc
mov
call
dec
sti
aad
jb
clc
sub
popa
cld
mov
cwtl
pop
inc
and
xor
lods
sub
pop
stos
stos
es
mov
inc
cmp
lret
outsb
sub
or
leave
sbb
xchg
icebp
loope
test
or
cmpsl
xor
fdivs
pop
xor
sahf
pop
lcall
insb
inc
adc
gs
jne
enter
mov
mov
sbb
icebp
and
sbb
pop
adc
ja
jle
cwtl
and
int
lds
ret
es
sub
adc
sbb
adc
sti
loop
cmp
xor
clc
cmp
popa
clc
pushf
leave
fdiv
aaa
mov
push
out
jl
push
aad
std
jg
clc
and
bound
mov
mov
and
cmp
pop
mov
imul
pop
inc
mov
iret
stos
jns
lock
scas
xchg
mov
cvttps2pi
xchg
lahf
jne
out
lods
sub
popf
nop
pop
aad
mov
pop
pusha
mov
jl
push
adc
pop
push
scas
pop
movsl
mov
enter
cmp
inc
cmc
icebp
fcoml
xor
clc
lods
mov
inc
mov
jl
cltd
fimuls
and
cmp
scas
jg
jmp
inc
ret
lahf
dec
stos
xor
push
push
xchg
lods
loop
mov
sub
jp
dec
jg
int
pop
fnstcw
gs
addr16
jecxz
je
cmpb
out
mov
cmpsl
cmpb
pop
jbe
dec
fs
sbb
lods
ficoml
pop
scas
or
ja
or
cltd
popf
imul
and
mov
das
sbb
xor
nop
sub
push
icebp
lods
cld
adc
out
movsb
ja
mov
imul
and
or
orl
inc
loop
gs
arpl
fidivs
dec
sub
sbb
rclb
add
rcr
lods
out
add
or
repnz
scas
adc
pop
sub
scas
jnp
mov
push
outsb
scas
imul
pop
mov
decb
dec
mov
mov
outsl
testl
pop
sub
int
push
or
jbe
cltd
das
fldt
mov
push
in
lret
and
mov
pop
xchg
sbb
and
pop
mov
lods
enter
scas
push
aas
mov
pop
leave
sbb
into
mov
ret
inc
sub
aas
and
inc
and
movsb
sbb
push
enter
pop
sbb
shrb
xor
bt
and
add
add
mov
cmp
sarb
jle
rorl
mov
xchg
call
xor
vprotd
sbb
lods
mov
in
jne
enter
adcl
pop
and
push
bound
adc
add
je
int3
xlat
lcall
push
lds
mov
sub
jg
lds
xor
imul
or
int
xchg
or
aad
shll
mov
adc
iret
rcl
inc
sbb
fmull
outsl
adc
push
push
xchg
out
out
mov
ret
cmp
or
addr16
lea
mov
sub
movswl
lock
test
push
add
and
in
mov
stc
test
sub
jb
lahf
leave
es
jnp
lret
in
pop
fcoml
xchg
inc
pop
gs
fs
inc
test
out
mov
sbb
repz
cltd
dec
sub
ds
lods
jl
test
hlt
jmp
xchg
or
cmp
jns
dec
sar
icebp
aam
xchg
repz
jae
mov
mov
fxam
or
bound
movsb
sub
and
fwait
jne
sti
jb
pop
stc
or
push
adc
cltd
jecxz
push
negl
sub
jne
popa
gs
push
fsubrs
mov
add
int3
cmp
gs
or
cwtl
leave
testl
filds
xchg
lods
and
sbb
adc
sahf
sbb
add
jg
adc
fistl
lcall
add
out
sbb
cmp
cmp
arpl
loope
call
into
and
add
push
inc
and
push
rcr
mov
pop
xchg
mov
xchg
sub
shlb
pop
nop
insl
in
stc
add
pop
in
testb
sub
inc
sub
jmp
xchg
shrl
imul
mov
push
ror
sub
test
jl
aam
dec
insb
ret
je
dec
and
rol
push
loopne
je
je
sbb
rorl
shr
adc
data16
cmpsb
inc
lods
mov
rorl
aad
icebp
mov
jo
es
daa
xchg
mov
sbb
xor
mov
sub
sub
xchg
aaa
sbb
int
sub
sbb
add
shlb
jbe
push
bnd
sbb
mov
jp
sub
in
mov
loop
pop
dec
dec
inc
or
dec
inc
jae
icebp
sub
xor
sub
jbe
aad
mov
mov
mov
sbb
cmpsl
or
mov
scas
popa
int3
sbb
lds
mov
dec
add
xchg
fwait
or
insb
or
jp
mov
iret
fidivrl
inc
pop
ljmp
sbb
dec
or
leave
pop
dec
int
repz
and
lret
mov
xlat
pop
jp
lahf
ret
aam
daa
data16
add
data16
imul
inc
adc
push
adc
sti
insb
loop
test
dec
call
jno
rcl
xor
push
out
jle
add
std
pop
and
in
ljmp
repz
and
xchg
int3
lret
popa
mov
and
ja
xchg
push
lcall
shrb
repnz
cwtl
daa
pop
nop
or
jbe
fs
pusha
pop
add
data16
mov
sahf
mov
sarb
xor
dec
xor
xchg
lahf
out
sub
jl
jl
pop
cmp
xchg
pop
jns
scas
insl
aam
imul
nop
pop
sub
fmuls
lret
add
jle
cmp
arpl
xor
and
lods
push
pushf
push
daa
lds
or
clc
scas
sub
add
mov
sbb
dec
mov
pop
lahf
sbb
cmp
hlt
popf
xor
int3
and
sar
inc
push
int3
xor
mov
mov
or
jae
lods
or
repnz
inc
xor
dec
mov
adc
insb
cmp
mov
sub
clc
xchg
xor
enter
into
ds
cltd
cmpsb
jae
inc
and
xchg
add
sub
pop
flds
int
dec
dec
add
loopw
sub
scas
mov
push
jb
mov
xor
idivl
mull
jp
push
je
and
imull
cmp
jne
pop
dec
push
test
and
pop
loopne
push
push
mov
incb
mov
inc
inc
sbb
push
fldenv
mov
lret
iret
aam
adc
mov
fwait
rorb
push
int
add
inc
adc
in
inc
cmpb
add
cmp
mov
and
pop
sar
cmpsl
in
adc
addb
mov
mov
int3
jae
or
ljmp
mov
adc
mov
mov
es
adc
mov
daa
add
outsb
jns
test
js
pop
mov
xor
xor
mov
fiaddl
fcoml
fwait
hlt
xor
mov
or
imul
aaa
dec
and
int3
mov
aas
std
push
pop
jl
jle
std
jb
jge
shrl
call
rolb
pop
mov
add
jb
adcb
popa
pushf
lods
shl
xor
cmpb
sbb
mov
dec
sub
ret
pop
push
push
scas
inc
test
shll
push
movsl
or
fwait
pop
pop
clc
jo
push
or
sti
and
cltd
test
pop
mov
mov
xor
mov
mov
mov
decb
add
mov
jae
push
lock
jmp
mov
repz
popf
adc
scas
orl
cmp
xchg
xchg
mov
test
clc
lds
scas
sub
ffree
icebp
fsubrs
xchg
adc
ljmp
ret
movsl
dec
dec
jecxz
ljmp
jge
fwait
inc
inc
jmp
ret
test
loope
dec
mov
out
shrl
mov
inc
jae
imul
into
out
adc
pop
jbe
mov
sbbl
push
pop
cmp
push
push
dec
add
push
cwtl
popf
inc
lods
mov
pusha
xor
sub
mov
cmp
stos
cli
add
push
pop
aad
pop
xchg
pop
rclb
repnz
notb
cld
sbb
lcall
out
test
sub
int3
addr16
mov
mov
dec
out
stos
iret
xor
rcrb
cmp
xorb
mov
push
rcrb
mov
mov
mov
or
mov
in
loopne
dec
mov
fisubs
and
inc
xlat
fstpt
mov
rcll
loope
in
mov
mov
bound
call
xchg
cltd
sub
aas
jmp
imul
mov
jae
jb
cltd
sarb
xor
push
adc
leave
movsb
clc
xchg
lahf
movsl
inc
fmull
sub
push
mov
les
std
test
pop
addr16
into
hlt
sbb
sub
pop
or
js
es
andl
mov
lcall
cwtl
adc
popa
adc
sbb
and
add
not
add
pop
lea
lea
push
mov
daa
mov
jno
dec
adc
push
sbb
pop
ret
xor
pop
pop
xchg
jne
xor
push
fnstcw
scas
and
shlb
nop
fisubrl
hlt
push
pop
outsb
lahf
fsts
jbe
add
lcall
dec
repz
push
mov
lods
xor
dec
dec
into
mull
jg
mov
mov
push
dec
ljmp
int
stc
or
clc
dec
xchg
mov
jmp
or
and
fs
cltd
shrd
cmp
ds
movsb
in
pop
cmpsb
daa
shll
cmp
add
inc
mov
cs
bound
inc
into
std
push
icebp
or
pop
jns
arpl
subb
cld
pushl
in
pop
dec
enter
jno
dec
adc
popa
test
in
ret
pop
adc
pop
jae
aad
in
insb
xchg
sahf
mov
dec
ret
lea
out
shll
das
jmp
mov
lcall
and
imul
mov
cwtl
push
mov
cmpsb
into
sbbl
push
xor
insl
push
push
push
push
dec
add
lea
push
jnp
std
mov
or
stc
movsb
sub
lahf
stos
and
shlb
sub
insl
mov
pop
dec
adc
add
add
xor
or
push
jne
fildll
or
cmp
clc
xchg
lcall
sbb
out
cli
fsubl
lcall
sub
ud0
pop
sub
imul
fwait
insl
sub
jl
dec
les
data16
mov
cmp
outsb
ljmp
repnz
inc
and
icebp
pop
cmpsl
xor
lret
es
mov
out
or
jbe
dec
jp
jp
aas
jbe
sbb
out
fadds
hlt
insb
mov
std
adc
or
pop
push
or
sti
xor
cltd
lcall
bound
in
xor
call
popf
cmp
add
leave
cmp
inc
ret
arpl
jnp
sub
xchg
cld
fisttpl
dec
adc
shrb
decl
stos
inc
mov
xor
test
stc
adc
inc
xchg
rcrb
in
aaa
aas
test
dec
ja
fs
cmp
dec
mov
out
lods
xlat
dec
lods
cmpsb
stc
push
or
cltd
inc
or
adc
hlt
mov
sub
movsl
icebp
ja
les
int3
insl
in
pop
movsl
inc
in
jno
cltd
add
lcall
out
mov
lcall
fisubs
jne
iret
xchg
call
scas
push
pop
bswap
scas
mov
sbb
arpl
lret
jae
mov
push
jns
lcall
repz
fists
test
xchg
pop
xchg
xchg
ret
push
mov
iret
mov
pop
into
icebp
loope
leave
popf
aam
xlat
jno
popf
rcl
xchg
add
test
adc
pop
in
loope
push
outsb
push
cmpl
sbbl
call
pop
sub
test
scas
mov
outsl
adc
jecxz
fidivs
dec
sbb
ss
adc
xchg
lahf
xor
inc
sub
push
inc
mov
and
subl
sbbl
or
xchg
mov
ret
cmp
rorl
dec
mov
jg
pop
xchg
icebp
pop
nop
mov
test
lahf
pop
sbb
in
jne
outsb
xor
adc
lret
lcall
imulb
mov
sbb
loopne
cmp
je
jle
addr16
cmc
aam
inc
xorl
mov
sbb
icebp
stos
jecxz
xchg
sti
and
rorb
mov
rcrl
pop
sbb
and
movsb
sti
dec
push
pop
add
ss
sti
rol
cli
pop
out
sysret
sub
jg
sub
adc
or
daa
xchg
push
jl
les
enter
jb
xchg
mov
adcb
pop
ja
das
or
into
dec
or
ja
fildl
cmp
sti
xchg
clc
imul
stos
or
mov
adcb
cmp
mov
out
mov
xor
int
aam
cmp
pusha
mov
push
les
adc
pop
mov
movsl
pop
out
in
andl
adc
mov
and
jg
cli
jb
test
xchg
popa
or
xorb
mov
inc
je
add
icebp
repz
out
outsl
je
rorl
cltd
mov
subl
sbb
outsl
xchg
test
jae
in
and
scas
inc
pop
lret
or
push
ljmp
mov
sbb
xor
popf
hlt
xor
lcall
mov
add
test
test
add
cmp
jnp
xor
mov
push
xchg
insb
mov
test
ja
cvtpd2ps
jbe
lret
and
js
arpl
loop
dec
mov
jp
xor
jmp
mov
iret
xor
decl
scas
push
stc
das
xchg
xchg
mov
sbb
pop
int3
jle
cs
fsubrl
inc
shrl
clc
sbb
jne
scas
xchg
sub
dec
adc
and
int3
or
mov
dec
shll
cmp
cltd
es
jb
or
sarb
add
pop
stos
xor
std
jae
fwait
mov
add
lea
fadd
fistpll
jge
fdivs
mov
add
push
fdivrl
imul
stos
adc
add
sub
fistps
inc
lahf
shll
inc
cmp
iret
dec
arpl
sub
int
or
enter
jne
fsubrs
mov
ret
subl
push
inc
das
std
mov
push
sahf
sbb
pop
out
and
push
cld
lcall
insb
pop
or
stos
hlt
outsb
les
das
push
bound
dec
xchg
dec
cld
gs
popa
pop
cmp
sub
fnsave
push
loopne
or
jl
stc
ret
push
shlb
add
fidivl
sti
std
mov
xchg
pusha
sbb
jb
or
popa
out
loopne
mov
pop
push
jle
lcall
into
insb
or
push
ret
fs
push
mov
or
lahf
sbb
xchg
js
loop
pop
adc
ja
sbb
xchg
stos
add
jl
sbb
cmp
xor
dec
lahf
cmp
push
orb
imul
lahf
mov
jns
xor
pop
les
mov
rol
mov
stos
hlt
test
adc
rcr
dec
jle
lods
push
loopne
inc
push
push
xor
cwtl
stos
mov
adc
mov
es
cmpsb
jmp
icebp
push
add
aad
sti
jecxz
mov
push
mov
dec
ret
push
pop
movsb
mov
arpl
xchg
and
orb
push
ffreep
scas
fbld
push
jb
ret
mov
push
cmp
jno
push
or
xor
insb
pop
pop
cmp
ss
mov
mov
out
xchg
add
push
repnz
sbb
adc
aas
sbb
push
int3
inc
jno
jns
je
mov
mov
xor
and
mov
repz
xlat
inc
adc
or
loope
push
out
inc
in
shll
push
iret
or
sbb
dec
mov
in
enter
test
call
jb
lret
aad
jae
xchg
out
adc
mov
jl
fisubs
add
xor
aam
repz
and
pop
cwtl
das
enter
push
inc
lods
and
mov
lock
mov
je
push
inc
or
mov
mul
add
mov
mov
adc
push
mov
nop
stc
push
push
sub
pop
aaa
idivl
insl
and
cmpsb
dec
pop
jne
out
jo
pop
add
xchg
lea
adc
sub
mov
pop
push
enter
imul
rcll
scas
xlat
loopne
dec
mov
stos
arpl
jo
jp
jnp
iret
lret
loope
fstps
jmp
rcrb
and
bound
lods
in
push
inc
sahf
jne
pushf
and
xchg
xor
push
leave
pop
mov
test
cmp
iret
movsb
sub
mov
mov
mov
fnstenv
dec
mov
push
push
fwait
rolb
cmp
xor
pop
imul
and
sarl
int3
pop
adc
push
mov
insl
mov
xchg
fld
sub
loope
dec
jne
fidivrs
mov
push
mov
cmp
cmpsl
and
sub
mov
out
sbb
loopne
or
add
mov
andl
inc
and
mov
xchg
mov
xchg
xor
push
fildll
aaa
sarl
sub
mov
dec
loope
jge
mov
and
mov
movsb
mov
adc
dec
mov
mov
xor
sbb
push
or
inc
xchg
xchg
sub
test
ficoms
mov
jnp
mov
sahf
xor
mov
nop
dec
pusha
pop
mov
fwait
lret
lret
cltd
arpl
call
aaa
mov
sbb
cli
push
jg
das
pop
in
lea
pop
pop
in
xor
outsb
xchg
inc
pushl
sub
cld
xor
cli
sahf
data16
mov
mov
inc
scas
divl
sarb
xchg
mov
fidivl
xlat
jbe
cltd
loope
sbb
sarl
fstl
pusha
push
adc
aas
test
stc
add
jle
push
xor
shrl
xchg
outsl
inc
enter
mov
jb
pop
or
pushf
lret
mov
sbb
aad
jns
cltd
int3
dec
stos
mov
shlb
jns
out
cwtl
mov
sub
dec
fwait
scas
xchg
push
pop
ss
push
lods
xchg
push
xor
sub
mov
and
sahf
add
pop
xor
jns
iret
jg
aam
or
rcrl
push
dec
sbb
testl
and
mov
sub
adc
xchg
pop
icebp
pop
cwtl
cmp
inc
pop
into
dec
jp
stos
ret
mov
shlb
dec
inc
lods
cli
push
jno
lds
jb
pusha
inc
xor
popf
sub
mov
jge
inc
pop
cmpsl
xlat
jecxz
insb
pop
enter
jl
nop
cmp
clc
jge
pop
add
out
das
xlat
mov
xchg
jle
mov
push
inc
xchg
je
add
fnclex
push
cmc
xchg
cmp
imul
test
jg
test
jnp
shll
stos
xlat
inc
xlat
and
into
sahf
out
and
cmp
mov
ljmp
adc
lods
sti
mov
mov
nop
mov
mov
cmpsb
xchg
mov
add
ja
shrb
dec
and
hlt
sahf
xchg
fcmovnbe
adc
in
rcl
jbe
mov
mov
decb
sub
pusha
addr16
push
xorl
cmp
sbb
daa
xchg
and
xchg
and
and
mov
mov
faddl
ret
aaa
mov
bound
pop
lcall
cmp
test
sub
jecxz
mov
mov
lods
mov
andb
cmp
jmp
sub
ljmp
leave
push
adc
lret
pop
pop
enter
jns
jecxz
jge
cmp
aas
das
add
cmpsl
pushf
dec
out
jmp
push
xchg
aad
mov
imul
pop
jmp
sub
scas
mov
aaa
push
repz
mov
pusha
int
lahf
cmpsb
aaa
dec
mov
movsb
lcall
insl
cli
pushf
mov
jmp
ror
loopne
sbb
fnsave
adcb
decl
out
sti
xchg
jmp
mov
sbb
pop
and
sbb
in
jl
mov
ret
xchg
rcll
ror
push
lea
popf
jle
pop
mov
mov
inc
negb
sahf
scas
jp
ds
bound
fists
or
or
cmpsb
je
cmc
cmp
xchg
sbb
or
and
mov
xor
push
jecxz
jp
stos
pop
xchg
or
das
push
push
stos
sarl
mov
std
cmp
cmp
shufps
inc
and
and
mov
mov
mov
xor
pop
dec
push
xlat
ja
imul
fcoml
mov
stc
lcall
insl
in
js
jbe
jb
mov
rcrb
int
dec
jno
das
pop
push
cmp
pop
jb
inc
aaa
pop
mov
mov
gs
addl
int
out
push
out
rcr
call
rorb
aam
cmc
pop
jmp
cmp
fsts
ret
pop
adc
mov
inc
ret
outsl
jo
add
pop
imul
xchg
fwait
outsb
pop
mov
inc
sub
out
outsl
mov
dec
insb
cmp
push
pop
mov
out
jns
std
loop
inc
sbb
mov
adc
popa
jecxz
dec
fnstcw
fxch
lods
test
mov
pop
jge
int3
arpl
out
push
dec
out
inc
cmp
mov
mov
cltd
jp
clc
imul
add
loop
mov
sub
xchg
in
sbb
pop
xchg
lcall
push
xlat
and
or
into
imul
adc
jo
inc
mov
dec
faddl
add
xor
stc
mov
mov
jmp
jnp
pusha
mov
push
shrb
push
arpl
mov
addl
or
sti
sub
jge
sub
loope
cmp
mov
push
shll
or
dec
jne
cmp
or
sahf
rorb
sbb
retw
mov
cli
divb
cwtl
inc
js
ljmp
xchg
sub
jns
shlb
jne
jno
push
jl
pop
insb
into
dec
lea
test
in
mov
inc
xor
icebp
test
mulb
imul
push
jmp
shlb
sbbb
push
loop
idivb
and
mov
cmp
xchg
and
out
insb
sub
push
fdivl
sub
jne
xlat
andl
cmc
imul
ret
xor
lds
mov
outsl
out
sub
imul
lods
fcoms
gs
mov
pop
pop
fldl2t
adc
cmpl
jne
je
add
cs
pop
das
and
mov
mov
leave
fisttpll
stos
addl
mov
mov
cld
loopne
fstpt
mov
fsts
lock
xor
aad
jmp
pusha
xchg
rclb
ret
or
mov
sub
lahf
mov
cwtl
insb
xor
imul
and
in
dec
dec
jne
out
jg
addr16
icebp
scas
cld
lret
xor
fdivs
dec
pop
fidivrl
jb
push
inc
and
push
pushw
mov
jecxz
jne
mov
shlb
jge
pushf
xchg
pushl
add
mov
push
xchg
in
pop
popf
sahf
and
incb
mov
shrl
call
sub
cmpsl
ljmp
lock
or
repnz
call
out
or
or
jns
lods
ljmp
test
and
les
test
test
mov
jbe
jmp
xor
cmp
aam
ja
mov
add
mov
and
xlat
or
adc
push
in
roll
aam
push
xchg
dec
sub
fwait
sub
pop
or
push
or
sarb
fnstsw
or
pop
cmp
xchg
or
and
add
data16
mov
xor
fwait
jmp
rcrl
mov
push
xor
push
shll
int3
ret
sbb
pop
sub
mov
jne
sahf
mov
inc
dec
mov
sub
movsl
jmp
rorl
sbb
inc
fs
mov
push
mov
jbe
mov
es
movsb
sbb
repz
and
xchg
dec
mov
jecxz
shl
pop
out
cltd
mov
jp
mov
ja
mov
fs
icebp
mov
data16
xchg
cmpsl
xchg
xchg
ror
push
mov
sbb
jle
sub
push
adc
xor
xchg
addr16
or
psubusb
or
insb
loopne
adc
jp
xchg
lock
jo
daa
mov
add
rolb
pop
push
xor
pushf
mov
data16
pop
clc
jge
stos
jecxz
jg
dec
mov
push
cmpsl
imull
inc
dec
sub
jg
sub
ret
xor
push
xchg
js
lahf
fsubs
mov
xchg
xchg
xor
add
das
sub
push
mov
ret
ret
rolb
inc
or
les
adc
les
shrb
cld
movl
out
hlt
les
cmp
cmp
mov
stos
aaa
and
sar
mov
and
jo
dec
cmc
clc
subb
mov
mov
and
cld
mov
sarb
nop
cld
jo
pop
das
cmp
test
add
popa
cmpsb
cmp
test
or
sub
inc
mov
popa
std
pop
bound
lods
ljmp
cmp
repnz
sbb
rorl
jg
sbb
pushf
and
inc
fdivl
sahf
jne
push
and
dec
pusha
rorb
pop
ret
add
push
cmp
inc
adc
fs
xorb
push
sbb
loop
gs
out
xor
jae
ret
push
pop
dec
in
hlt
cmpsl
push
test
xor
dec
adc
push
les
popf
cmp
gs
js
push
adc
jmp
push
lret
jecxz
mov
pop
xor
lret
mov
daa
jmp
mov
jmp
jp
mov
aaa
lods
je
les
test
pop
mov
fs
movsl
xchg
dec
mov
mov
jge
or
push
fwait
lcall
push
scas
pop
mov
mov
add
sbb
jno
mov
pop
in
filds
mov
addb
cs
mov
xor
cli
mov
dec
std
xchg
push
pop
pop
pop
mov
ljmp
sarb
dec
ja
lcall
popf
js
mov
subl
gs
in
dec
lret
stos
push
ss
push
nop
neg
pop
into
js
cmp
fwait
mov
hlt
or
leave
mov
jle
pop
mov
mov
xchg
repnz
inc
xor
es
sub
repnz
iret
mov
add
clc
gs
lds
leave
cmp
and
cmp
in
sti
out
adc
pop
hlt
jmp
pushf
rcl
jns
adc
and
pop
stos
int3
adc
pop
das
repz
xor
or
arpl
jg
push
pop
push
rcrb
jae
mov
push
fwait
pusha
and
jl
out
pop
rclb
push
mov
xchg
sub
aad
mov
icebp
rcl
std
in
sahf
fidivrl
sbbb
imul
lret
jmp
adc
test
mov
adc
pop
jp
imul
incb
cs
xorb
cmpsl
popf
daa
xchg
lods
int3
fsubs
xor
mov
movsb
sbbl
pusha
repz
lret
lds
insl
dec
push
pusha
shrb
xor
movsb
inc
ljmp
fstpt
loopne
sahf
jne
mov
mov
test
push
sub
xchg
outsb
scas
jnp
data16
nop
mov
rorb
mov
push
adc
leave
movsb
inc
mov
mov
sarl
jae
cmpsl
pop
xor
xchg
or
hlt
hlt
shlb
into
add
inc
and
sub
fwait
pushf
data16
jae
sbb
cmp
insb
fisubl
fsts
jnp
in
xchg
add
in
xchg
jmp
js
sbb
jae
roll
jae
loope
jmp
mov
sub
xchg
xchg
ljmp
jo
test
mov
fsubrl
and
pusha
repz
mov
out
sbb
mov
add
and
dec
repz
pop
mov
movsl
mov
jmp
or
sbb
or
mov
in
pop
scas
jge
lock
or
inc
mov
fadds
insl
pop
jp
mov
ds
pop
pop
cli
call
jl
rcrl
jae
in
jb
jl
jmp
mov
movl
mov
sbb
pop
es
in
sbb
sbb
or
ret
mov
and
ret
scas
pop
int
cmp
imul
mov
push
ror
nop
pop
adc
xor
and
out
repnz
adc
and
xchg
call
loopne
cmp
mov
pop
pop
xor
test
add
inc
roll
jp
mul
dec
dec
sbb
and
push
ljmp
dec
add
mov
sti
ret
mov
jle
hlt
jne
xchg
adc
lods
lahf
inc
rorl
inc
in
inc
dec
xchg
inc
sub
imul
jo
mov
pop
cltd
rcrb
outsl
inc
bound
mov
lods
xchg
jo
sub
sub
lods
outsl
fsubrs
jp
addr16
addr16
jmp
push
mov
xchg
loope
push
push
lret
pop
lock
cmc
sbb
push
in
inc
pop
adcb
xor
jge
jo
sbb
jmp
stos
aam
xchg
jno
lret
mov
insl
fwait
mov
pop
xor
test
fcom
pop
mov
popa
fwait
push
push
ja
leave
mov
fbld
fldenv
shll
lods
or
dec
inc
adcb
lret
mov
in
adc
cltd
ja
mov
out
mov
les
mov
xchg
push
mov
nop
mov
mov
lods
cmp
aam
loopne
and
into
jnp
pushf
inc
sub
hlt
dec
and
loop
fbstp
stos
inc
mov
nop
stos
mov
cmp
dec
cmc
mov
sub
outsb
fstpt
mov
loop
mov
repz
pop
adc
dec
cmp
test
js
clc
mov
out
adc
enter
inc
or
add
rolb
call
jbe
push
xchg
pop
and
pop
call
push
icebp
xor
mov
jecxz
cmpsl
ds
push
insl
testl
sbb
push
int
jno
or
mov
frstor
sub
xchg
fsubr
les
loopne
xchg
and
cmpsl
sub
lahf
in
cbtw
mov
or
xchg
test
jmp
pop
inc
loopne
and
pop
xlat
push
mov
pusha
adc
call
dec
adc
shrl
adc
aam
jae
loope
push
out
or
cmpsl
incl
call
fstps
test
aad
pop
xor
flds
dec
xor
mov
or
test
sar
popa
push
orl
clc
mov
dec
cmc
and
adc
jnp
js
addl
jmp
jae
add
mov
jbe
add
mov
jb
push
stc
cmp
jns
dec
dec
mov
or
mov
and
adc
clc
inc
loopne
add
xchg
jo
mov
insl
aam
sub
push
xchg
mov
call
adc
shrb
addb
out
sub
jb
push
xchg
aam
push
fs
sahf
push
test
sti
sub
xchg
push
addr16
ss
stos
fisubs
push
lcall
jo
lret
mov
mov
push
cmp
mov
sub
cltd
jge
xchg
pop
xorl
lcall
add
pusha
ljmp
adc
insb
loope
xor
ret
push
add
sbb
sbb
repnz
sub
bound
inc
mov
pushf
daa
out
cmpl
push
lea
ds
into
xor
aad
mov
arpl
and
pop
sub
add
cmp
shll
das
mov
je
dec
mov
pop
cmp
mov
mov
sub
mov
fistl
adc
mov
popa
mov
or
lret
cmp
push
lock
xor
dec
inc
add
outsb
sub
sbb
dec
loop
loop
or
imull
lahf
rcl
mov
sub
inc
test
jnp
mov
cmpsb
dec
aad
nop
or
adc
xchg
push
mov
fiaddl
pop
xor
je
mov
dec
or
and
inc
and
mov
sbb
sahf
sbb
in
sub
cmpsl
mov
fstpt
xchg
lods
enter
xchg
repz
les
mov
dec
jmp
lds
std
push
push
pop
xchg
push
jp
in
insb
loopne
or
pop
ret
mov
xchg
call
in
pop
call
cmp
mov
iret
mov
mov
les
cwtl
cmp
test
sub
pushl
pushf
dec
xchg
and
jno
push
xchg
clc
xchg
xchg
pop
pop
or
test
or
popf
movsb
sbb
jle
sti
call
dec
mov
lret
mov
push
test
xchg
pushf
imul
daa
ret
fwait
xchg
sbb
pop
inc
stc
push
ds
sub
pusha
fs
push
mov
loope
push
xlat
repz
pop
push
add
jae
dec
mov
mov
cmc
cmc
negl
out
add
or
nop
xchg
in
nop
adc
jnp
sahf
in
adc
insl
movsb
and
into
adc
dec
out
int3
out
adc
pushf
rcl
out
outsb
mov
test
data16
push
clc
mov
sbb
ss
jmp
ljmp
jae
push
addr16
daa
xchg
je
lahf
in
xchg
mov
push
sub
adc
adc
dec
xchg
mov
shrb
fsub
push
sub
js
test
out
dec
mov
push
sbb
popf
pop
test
pop
pop
pushf
bnd
dec
cld
popf
shr
jne
pop
lock
pop
lret
sbb
cmp
mov
inc
xor
jmp
jg
scas
mov
iret
dec
mov
push
add
stos
inc
mov
loope
pop
std
std
xor
pop
js
mov
out
jl
pusha
pop
sbb
popa
cwtl
cmp
mov
test
stos
pop
mov
test
idivl
sti
nop
scas
mov
mov
inc
mov
sub
cmp
rorl
sub
pop
lea
mov
scas
lret
xorb
inc
andl
mov
and
and
clc
std
fisubrs
xor
dec
cmp
xchg
add
sti
mov
mov
adc
lods
out
dec
fisttps
in
insl
nop
xchg
sti
mov
sbbb
mov
xor
cmp
rol
xorl
add
cld
xchg
andb
jbe
adc
xor
fsubl
pusha
lcall
inc
ficoml
adc
pop
cmp
cmp
xchg
and
push
rclb
inc
sub
repz
xor
cmp
jmp
and
shl
adcl
xchg
int3
pop
jmp
outsl
xor
ret
mov
notb
test
sbb
mov
push
out
sub
jle
jno
test
int
sarb
pop
mov
adc
stos
test
clc
mov
scas
pop
xchg
jne
fimull
lret
fsubrl
xchg
sbb
jo
adc
arpl
mov
ret
je
icebp
nop
push
movsb
inc
scas
mov
and
push
jge
outsl
ficoms
push
pop
jl
stos
xor
and
and
rolb
ds
add
mov
push
add
push
repz
fsts
sub
mov
jmp
in
fabs
adc
xchg
dec
push
push
lcall
stc
ss
daa
push
jb
lret
out
adc
mov
movsl
push
and
mov
and
jg
lcall
pop
xor
xorb
je
mov
jmp
jno
jb
ret
sbb
xor
push
je
xchg
pushf
mov
push
gs
imul
dec
inc
dec
inc
and
push
test
clc
or
adc
sbb
fcoms
test
jmp
dec
in
mov
mov
test
dec
filds
das
mov
lahf
dec
jb
hlt
mov
or
jl
jl
xor
in
xchg
dec
adc
sbb
in
or
jno
imul
sbb
adc
mov
fcompl
es
pusha
jne
pop
dec
je
and
call
shrl
fadds
inc
sub
and
dec
push
mov
daa
mov
movsl
in
dec
inc
inc
shll
xor
dec
dec
fs
sti
fistpll
inc
mov
jl
dec
pop
mov
sbb
lods
dec
mov
sub
pop
cmp
add
jbe
xlat
fstpl
mov
push
mov
xor
mov
mov
push
ljmp
mov
and
lock
inc
mov
mov
cmp
push
xlat
sbb
xchg
insl
jo
cmp
lods
pop
sub
or
fdivs
inc
loop
mov
stos
cmp
es
movl
mov
cmpsb
andb
jae
je
scas
dec
cmpsl
cmp
inc
ja
orl
dec
jle
icebp
jp
and
xchg
push
add
test
and
cltd
call
and
es
push
testl
ret
dec
cld
mov
xchg
sub
rorl
xor
rolb
psubusb
lds
push
dec
push
inc
jne
xor
test
test
out
xchg
mov
pop
pop
or
xchg
xchg
imul
popf
xor
aas
cmp
loopne
push
test
rcrl
popf
in
fprem
xchg
jp
jb
mov
adc
cmp
cmc
shl
jns
mov
xor
std
xchg
push
mov
andl
dec
pop
adc
sub
mov
insb
repnz
in
test
push
ficompl
mov
loop
add
inc
jbe
hlt
loopne
in
push
adc
inc
int
sbb
add
sbb
jnp
add
mov
inc
cmp
sbbb
sub
jg
cwtl
adc
rolb
dec
mov
mov
test
add
pop
xor
inc
fstpl
add
mov
test
cltd
cmp
test
testb
fcomps
jne
inc
mov
jns
and
sub
movsl
adc
sbb
adc
and
adc
xor
out
sbb
jne
push
aam
scas
pop
cmp
adc
jmpw
xor
addb
cmpsb
cmp
and
or
sbb
stc
enter
pop
dec
xchg
jne
dec
rcrb
pop
pop
lcall
imul
iret
addr16
cld
in
xor
add
in
lock
inc
ret
xchg
nop
or
mov
lret
repnz
push
inc
cmp
aam
mov
push
das
cwtl
jnp
xor
push
dec
ja
popa
es
pop
and
subb
xchg
ljmp
cmp
ficoms
mov
dec
dec
push
std
mov
push
dec
push
cmp
outsb
cli
popf
aam
insb
pop
aam
gs
jecxz
jle
mov
add
int3
mov
mov
add
jbe
jo
mov
arpl
or
int
dec
adc
push
popa
dec
imul
ret
flds
sbbb
mov
leave
aaa
in
jle
pcmpeqw
inc
dec
dec
mov
lret
push
scas
in
cmp
shl
bound
stos
ret
popf
call
mov
dec
std
rorb
aad
cmp
mov
jne
ljmp
repz
and
mov
mov
pop
inc
enter
enter
pushfw
movsl
insl
mov
loope
or
aas
loope
mov
pop
cmp
add
imul
outsb
scas
cwtl
cmp
cmpsl
loopne
push
vmwrite
jl
push
outsb
out
inc
icebp
mov
dec
jae
ljmp
pop
rcr
cs
lock
push
push
xor
cmpsb
xchg
sarb
jl
movsb
jbe
loopne
clc
jbe
lods
sbb
into
les
mov
repnz
cli
lock
call
xchg
xor
out
mov
mov
inc
cltd
push
sti
scas
push
mov
mov
xchg
mov
negl
or
fldl
mov
stc
lods
xsavec
jno
lods
pop
test
push
push
pop
addl
xchg
lret
jmp
push
add
loopne
icebp
or
xlat
cltd
adc
xchg
outsl
xchg
and
xor
jns
jae
aad
aas
cmp
xor
jnp
push
in
and
cwtl
xor
and
or
push
mov
scas
addl
xchg
int
jge
int
jmp
test
mov
js
test
xchg
cltd
ss
fnstsw
cmp
mov
ret
into
cltd
aas
cmp
sub
out
mov
pop
inc
cwtl
test
loope
cs
shll
cli
imul
cli
xlat
add
bound
testl
cmp
test
push
mov
push
or
jmp
shl
lcall
mov
sub
imul
clc
aam
arpl
sbbl
mov
ret
push
inc
mov
xchg
mov
call
lods
daa
shrl
jnp
cmpsl
stos
jge
or
jns
inc
mov
xchg
stc
push
cmp
xadd
mov
stos
xor
clc
or
or
test
stos
fsubrs
sub
xor
cmpb
inc
inc
xor
cmp
repz
in
and
pop
mov
or
push
imul
rclb
loope
and
mov
inc
rdmsr
and
lret
jmp
or
sub
fistps
dec
data16
sbb
aas
xchg
sub
adc
push
cltd
push
in
dec
cmp
pusha
test
xor
fucom
int
pop
inc
jnp
das
inc
push
icebp
and
pop
fldt
cmp
inc
cmp
sbb
shll
mov
xchg
pushfw
mov
pushf
sub
xchg
iret
and
repnz
imul
loop
fdivs
stc
rcrl
jecxz
jbe
jmp
pop
lahf
cmp
js
dec
in
mov
insb
push
adc
push
lds
pop
xor
pop
pusha
or
popf
push
fsubp
push
mov
xchg
rolb
jnp
sti
jle
enter
pop
pop
xor
xchg
adc
fldcw
dec
sahf
sub
cmp
movl
idivl
ss
shll
or
fwait
sbb
loop
lcall
add
test
add
loope
popf
sub
test
stos
xchg
fcomps
jb
and
xchg
pop
fildl
iret
push
jbe
xchg
jnp
stc
cmp
cmpsl
adc
and
movsl
cld
mov
cmp
xchg
gs
addr16
out
mov
mov
cmpsb
mov
arpl
inc
lods
push
push
pop
mov
or
test
std
jmp
adc
adc
mov
adc
loopne
pop
cwtl
scas
xor
iret
js
inc
and
test
cld
out
pop
sub
adcb
push
out
inc
daa
xor
dec
push
pop
std
stos
verr
leave
ja
lea
jae
mov
rep
cmp
pop
or
ret
fcomps
out
adc
xlat
xchg
lret
xor
cmpb
dec
jge
enter
add
ret
imul
xchg
sti
mov
aaa
test
mov
mov
xor
mov
iret
xchg
jge
mov
scas
xchg
dec
inc
mov
sbb
mov
lods
mov
xlat
mov
outsl
pop
aad
sahf
out
xchg
lock
add
add
cmpsl
lcall
or
lcall
pop
jecxz
add
sbb
decb
and
pop
js
push
sbb
jmp
dec
dec
mov
ss
push
leave
int3
jb
imul
dec
pusha
inc
xchg
cmp
mov
test
clc
add
mov
push
jecxz
inc
and
mov
out
pop
imul
push
pop
sub
div
imul
xchg
jne
cmp
cmp
out
test
or
mov
aad
sub
cmpsb
mov
mov
dec
cmpsb
push
cmp
and
repnz
pop
loopne
cmpsl
cmp
mov
mov
lret
scas
or
clc
xchg
aad
add
lret
pop
cmpsl
movsl
lods
push
lds
or
aas
xchg
test
hlt
lds
stos
mov
popf
jnp
arpl
adc
dec
xor
test
out
shll
pop
int3
ror
repz
push
jbe
push
in
das
lcall
cmp
dec
sbb
xor
fnsave
repz
mov
popl
xlat
mov
leave
ffreep
xchg
pop
mov
sub
inc
int3
icebp
sbb
cli
ss
fstenv
mov
lods
sub
mov
pushf
mov
fidivl
mov
stos
sub
jo
mov
mov
xchg
mov
mov
rcl
inc
mov
jae
jne
xchg
and
cmpsl
pop
mov
out
ds
dec
mov
cmp
fsubs
inc
cwtl
sub
and
pop
xchg
inc
sub
and
and
leave
aas
adc
repz
sbb
mov
outsb
mov
sbb
pushf
rorb
rclb
xchg
xchg
popa
and
and
sbb
xchg
inc
jne
sbb
setbe
and
sbb
mov
cs
and
xchg
movsb
movsl
call
out
ljmp
cmp
das
inc
add
sbb
clc
scas
sarl
xchg
add
or
pop
adc
fwait
leave
loopne
call
xchg
icebp
cmc
mov
call
stos
adc
fcomps
je
xorb
in
lock
cld
enter
mov
inc
cld
enter
mov
js
inc
andl
pop
imul
lds
insl
adc
sub
in
stos
loopne
out
clc
call
negb
shl
pop
mov
jle
mov
orps
mov
iret
adc
mov
mov
mov
push
jbe
xlat
stc
addr16
int3
mov
cwtl
mov
cmp
push
ror
in
cmp
mov
lcall
test
iret
pusha
rclb
dec
mov
pop
pop
inc
cli
add
in
loope
jge
pop
fmull
js
mov
leave
adc
dec
loop
hlt
and
jb
jg
push
dec
fimuls
cmp
xor
loope
idiv
push
lds
sub
add
jno
sbb
inc
clc
xchg
xor
cmp
insl
in
shrl
and
xchg
jnp
push
fcompl
out
sar
enter
xchg
sbb
lret
lcall
and
dec
roll
mov
jb
mov
ficomps
mov
mov
ret
cwtl
cmp
cmp
insl
cli
cld
jae
pop
gs
aam
in
jns
mov
adc
scas
lds
daa
sbb
mov
cmp
call
dec
sbb
fdivs
sbb
jb
pop
idivl
mov
lcall
aas
add
xor
lock
adc
xchg
loope
jg
rclb
mov
dec
sahf
dec
adc
das
cwtl
out
lret
cmp
mov
notl
adc
push
xor
call
adcb
mov
push
or
stc
lcall
xchg
cmp
mov
pop
sarl
mov
push
or
dec
std
add
dec
fisttpl
sub
xor
loop
sbb
test
or
jl
xchg
or
xorl
add
ss
dec
enter
mov
in
dec
xchg
push
dec
or
mov
jbe
jmp
fimull
aad
push
dec
push
xchg
sbb
loope
ret
cmpsb
popa
js
clc
pop
xchg
jmp
mov
aaa
aas
lock
cmp
inc
xlat
push
icebp
or
pop
sub
fs
xchg
std
and
xchg
test
mov
add
imul
lock
out
popa
xor
jg
out
mov
or
mov
ret
outsb
iret
shll
cmp
stos
movsb
mov
orb
jbe
adc
cmp
mov
mov
loop
jge
js
cmpb
int
iret
inc
push
ror
inc
out
adc
int3
add
dec
insb
pop
cmp
pop
inc
rcrl
fisubs
pop
faddl
mov
mov
ja
insl
cmp
repnz
and
nop
insb
incb
xchg
xor
jne
add
mov
fs
lret
push
adc
jmp
test
bound
lds
lretw
xchg
push
insl
std
fwait
dec
daa
loope
jae
jbe
ss
mov
shlb
pop
inc
cmpsl
dec
pop
sbb
scas
pop
jb
sub
popa
adc
add
push
sub
pop
int3
sbbb
mov
or
and
xor
dec
test
fadd
jge
mov
add
xor
add
popa
xchg
mov
sahf
test
push
stos
int3
in
pop
or
inc
mov
push
and
adc
in
lea
scas
mov
pop
sbb
decl
pop
sub
cltd
add
xorl
fistps
xlat
lret
pop
lret
inc
mov
aas
addl
xor
jle
adc
cwtl
pop
shll
jecxz
es
sbb
cmp
es
pushf
adc
pmulhuw
aas
inc
dec
cmp
push
js
and
addr16
and
js
jae
and
jle
repnz
pop
and
ja
pusha
adc
les
sbb
jno
xchg
jbe
call
les
out
fs
push
jmp
dec
push
mov
movsl
xor
dec
call
pop
pop
xchg
fstps
rcrl
jne
jge
insb
ret
andl
jg
xchg
jp
in
ljmp
jno
push
gs
in
sub
mov
cmc
jne
js
mull
jecxz
jne
mov
jge
lret
adc
jbe
pop
popf
and
or
xchg
and
popa
dec
sbb
out
or
scas
cmp
stos
pop
mov
cmp
and
aas
xor
push
sahf
outsb
fdivs
xor
fprem
jnp
pop
add
jnp
ficoml
pusha
in
aaa
aad
sbb
out
fidivrl
and
test
int3
mov
int3
ret
lea
mov
push
imul
push
das
and
add
fcompl
ja
inc
pop
or
cmp
cld
sbbl
pop
push
push
lock
jp
jno
insl
push
cmc
or
xchg
sbb
insl
push
cmp
mov
dec
lock
daa
pop
insl
cltd
addr16
inc
enter
jbe
push
cmp
push
adc
test
dec
enter
rcl
jp
mov
nop
mov
roll
out
into
jbe
sub
or
xchg
arpl
ja
sub
xchg
outsb
sahf
adc
ljmp
stos
cltd
xchg
pop
hlt
add
stos
mov
xor
ret
push
cltd
shll
rol
fs
sub
fs
sar
mov
xor
push
push
adc
repz
mov
adc
jmp
inc
in
jns
push
pop
pop
loop
mov
or
popf
xchg
add
cltd
in
push
sub
test
call
cmpsb
push
add
mov
mov
int
sahf
sbb
in
test
into
xchg
bound
push
xchg
sbb
pop
arpl
std
jmp
mov
jo
aas
jp
pusha
sarl
mov
cmovne
shrb
or
enter
fwait
mov
mov
es
pop
mov
jne
scas
mov
js
orb
mov
jl
in
or
addl
lret
es
test
test
std
jecxz
adc
inc
and
push
xchg
test
iret
push
push
rolb
jae
imul
mov
test
pop
mov
rcl
rcr
xor
xor
or
loop
jecxz
mov
daa
mov
jbe
or
push
inc
out
sbb
les
sub
imul
sbb
adc
mov
push
fwait
into
outsb
mov
mov
es
leave
sbb
cwtl
inc
jmp
dec
popa
adc
fstps
stos
xchg
or
orb
jg
test
xchg
or
repz
fcoml
movsl
inc
or
call
ss
je
aam
sahf
or
shrb
les
arpl
repnz
in
insb
cmpl
iret
enter
mov
jge
icebp
hlt
xorb
pop
xlat
sbb
push
aas
negl
mov
adc
ljmp
jle
push
ret
inc
jle
inc
repnz
pop
push
loopne
lods
inc
arpl
not
dec
gs
xchg
divl
jns
adc
shlb
or
mov
in
es
iret
xor
cmp
ja
lahf
insl
test
xchg
xchg
mov
fisubrl
insb
aam
mov
or
xchg
jbe
int
mov
dec
je
push
mov
or
lods
cmp
clc
mov
test
sbb
cmp
int
and
xchg
mov
out
sbb
inc
push
or
fmul
fimuls
pop
adc
nop
adc
addl
aam
push
leave
jnp
xor
push
into
iret
cmp
push
xchg
cs
daa
aad
sub
cmpsl
lea
decb
ja
sbbl
and
clc
inc
icebp
and
sahf
fst
mov
mov
inc
and
xor
daa
mov
jp
push
cmpl
lea
mov
sbb
cwtl
xchg
xchg
movsl
icebp
mov
mov
jge
mov
out
jnp
stos
iret
mov
sbb
xlat
push
imul
pop
in
das
jecxz
aaa
add
jp
in
sahf
push
mov
mov
push
cmpsl
icebp
xor
mov
add
popa
jle
mov
mov
inc
rclb
inc
xchg
ret
bound
and
js
xlat
jb
xchg
jo
test
cmp
xor
jge
mov
dec
xor
xchg
aaa
scas
mov
dec
push
repz
test
inc
adc
pop
fbstp
dec
dec
imulb
iret
nop
mov
lahf
sub
mov
xchg
je
cmp
insb
mov
mov
and
sti
push
xchg
jae
jnp
stos
sub
orl
add
pop
mov
mov
jb
mov
out
xchg
push
test
je
push
jmp
loop
mov
mov
adc
cli
and
inc
pop
dec
cmp
jne
ljmp
mov
cwtl
cmp
jle
cwtl
mov
push
cmc
lods
sbb
xorl
and
push
dec
outsl
xchg
sub
imul
lods
mov
jecxz
out
jmp
and
or
add
fists
xchg
insl
aam
inc
sarb
xchg
jp
fbstp
fdivr
popf
sti
daa
ror
sub
ret
lods
or
imul
cld
push
or
and
das
sti
mov
ret
lahf
ja
or
insl
addb
adc
and
fistps
dec
adc
fistps
or
cmp
lcall
pusha
xchg
test
sub
push
rolb
mov
call
call
push
mov
xchg
sti
dec
cmp
inc
in
popf
fcomps
and
bound
ljmp
and
sub
mov
cltd
mov
xor
xchg
cmp
xchg
fsubrl
pop
aam
inc
add
aas
xchg
arpl
mull
xor
test
and
push
cli
cmp
xor
pushf
test
sub
or
ljmp
mov
pushf
mov
insl
data16
std
call
push
cmp
insb
jg
sbb
xchg
push
in
push
std
push
enter
or
push
cwtl
sbb
xor
sub
dec
or
dec
xchg
mov
not
outsl
aam
sti
push
outsl
adc
test
or
pop
add
dec
dec
push
mov
add
fs
mov
mov
sahf
xor
cld
ljmp
push
mov
jo,pn
pop
pop
pop
mov
iret
fbld
and
xchg
dec
js
dec
mov
or
sbb
lret
pop
mov
mov
sub
and
clc
movsb
cmpsl
ja
jb
and
out
push
push
mov
inc
sbb
out
pop
xor
push
setne
fs
ficoml
mov
sti
sbb
mov
jnp
pop
lds
push
outsb
pop
sbb
mov
orl
push
jl
loopne
add
jo
in
je
scas
pop
xlat
pop
push
pop
mov
andb
jo
scas
test
cli
pop
pushf
jle
fs
dec
stos
cmc
icebp
push
dec
hlt
adcl
cld
push
jmp
push
inc
inc
mov
push
sbb
lret
add
adc
mov
sbb
inc
push
insl
lock
fdivs
lock
xor
cmp
and
jmp
pop
call
sub
pop
fidivrl
std
push
les
push
mov
int3
in
xchg
mov
mov
jge
loop
xchg
into
add
add
cmpsl
push
mov
mov
movsb
int
fdivr
in
aam
xor
sbb
and
adc
lret
in
pinsrw
or
ss
movsb
std
xchg
bound
dec
testl
roll
push
ss
cltd
add
xchg
inc
pop
call
dec
add
xor
sbb
xlat
pop
pop
nop
ljmp
pop
add
mov
pop
mov
leave
pop
sbb
andl
cld
push
sub
mov
mov
mov
or
pusha
mov
mov
cmp
cmp
mov
or
rcrl
cltd
cli
arpl
push
sbb
test
dec
lds
mov
mov
push
push
pop
iret
dec
popf
mov
or
cmpsl
aas
and
sbb
mov
cs
pusha
add
dec
or
bound
add
insb
cmp
add
or
adc
stc
pop
jae
adc
inc
mov
mov
aam
add
jae
dec
sbb
test
mov
and
bound
sub
or
mov
pop
mov
loopne
test
mov
cld
push
rcrl
sbbl
xchg
mov
xchg
cwtl
mov
add
lret
test
das
mov
push
pushf
cmp
xchg
jnp,pt
xchg
or
pop
sub
add
loopne
pop
std
jb
scas
in
rol
sub
mov
imul
push
or
mov
stos
cmp
xchg
jb
xor
test
xchg
rcrb
mov
mov
out
loop
outsb
adc
dec
pop
stc
or
jp
jo
push
nop
dec
cli
daa
test
stos
mov
mov
push
xor
xchg
mov
push
pop
add
xor
mov
movsl
jnp
lahf
das
scas
sub
cltd
sbb
sub
mov
dec
les
loop
out
in
rcr
jecxz
dec
xchg
les
jne
push
out
daa
jl
pushf
scas
mov
repz
jo
add
inc
repz
sbb
ljmp
fs
push
nop
mov
dec
loop
jl
pop
lahf
mov
pop
and
addr16
dec
cmp
jl
mov
sbb
fidivl
mov
and
mov
lock
pushf
pop
inc
mov
hlt
stos
lock
je
push
cmp
cwtl
out
or
nop
pop
jge
cmp
leave
ficoms
decb
pusha
insl
fisubl
lahf
mov
mov
inc
jae
adc
shl
jg
fistl
ret
lock
push
cld
ss
outsl
movsl
jbe
mov
cltd
adc
call
xchg
pop
sbb
in
pop
jo
add
ljmp
mov
mov
mov
lods
int3
and
xchg
and
add
sarb
sbb
ja
das
dec
push
lahf
jae
movsb
cwtl
gs
faddl
sbb
mov
add
sti
and
shr
cwtl
pop
movsl
or
rcll
rorl
pop
push
cmpsb
in
cli
test
adc
daa
scas
inc
pop
dec
pop
xor
jnp
aaa
xchg
or
pop
or
inc
jmp
fcompl
pop
mov
pop
lea
jae
push
loop
cmp
dec
adc
rcll
inc
jge
mov
into
xor
push
in
stc
adc
mov
inc
push
inc
jb
addb
xchg
mov
cmp
aad
push
mov
iret
sbbl
dec
bound
cmpsl
rcll
adc
add
push
outsb
add
mov
push
xchg
xchg
aaa
cltd
les
js
lds
xor
add
mov
sbb
loopne
addb
push
cmp
les
jo
jnp
push
cmpsl
divb
cmp
sub
ljmp
pop
lret
popf
add
pop
xchg
cmp
jg
clc
inc
or
ds
je
aas
leave
int3
push
push
nop
push
cltd
cmpsb
in
pushf
and
flds
xor
and
xor
mov
jl
pop
aad
cmp
push
daa
pop
ss
imul
icebp
cli
inc
mov
stc
ret
fidivl
cld
mov
int3
std
cmpsl
add
movsb
fwait
mov
lret
imul
inc
sbb
imul
out
add
rcr
iret
adcb
int3
stos
push
insl
pushf
stos
cmp
jecxz
out
sub
push
stos
lahf
dec
sti
mov
aad
sub
les
por
pop
je
andl
arpl
shl
inc
and
mov
call
addr16
pop
ds
mov
in
in
mov
mov
gs
jecxz
push
push
cmp
mov
insb
lahf
push
and
mov
mov
cmpsb
add
dec
mov
into
push
and
mov
insb
test
loope
and
pop
in
xlat
xor
xor
dec
cwtl
ret
and
pop
out
js
popf
push
loope
jns
jno
cli
xorb
ret
jns
adc
jae
mov
jnp
pop
inc
inc
fcoml
mov
mov
sti
push
push
and
add
dec
lret
xchg
jp
test
std
lret
xchg
cld
lcall
and
or
inc
push
and
sbb
jnp
stos
or
xchg
loope
adc
jg
jle
scas
or
add
addb
add
pushf
pop
xor
pop
nop
xor
lock
testb
stos
inc
fnstenv
cmpsb
andb
sbb
push
rcl
xor
rdmsr
push
mov
fidivrs
cmpsl
lods
gs
sbb
fs
cmp
test
out
dec
les
lods
xchg
lods
mov
std
or
mov
out
aam
ja
movsb
push
push
xchg
xor
into
in
mov
jb
ss
in
push
daa
bound
cmp
pop
cli
mov
lock
adc
movsb
push
ljmp
mov
stos
mov
jae
dec
jp
mov
cwtl
lods
mov
mov
adc
mov
notb
push
inc
push
and
addb
sub
dec
data16
jecxz
mov
mov
jecxz
jno
pop
orb
icebp
push
ds
in
inc
jns
push
into
cwtl
mov
sub
out
adc
hlt
mov
lds
dec
pop
or
jne
stos
int3
iret
and
test
stos
add
adc
and
adc
xchg
cmp
adc
or
cmp
shll
dec
push
and
testl
jmp
cmc
jb
cwtl
test
adc
pop
sub
push
sbb
mov
fstp
xchg
mov
mov
pop
in
ret
fadds
daa
adc
fcmovb
sub
jne
cmp
adc
push
into
dec
sbb
lods
insl
test
pushaw
sbb
out
inc
leave
jecxz
movsl
idivb
mov
ljmp
sahf
insb
pop
cwtl
push
lcall
dec
xor
inc
cmp
dec
mov
xchg
scas
enter
lds
sbb
mov
std
icebp
icebp
inc
xor
arpl
cmc
dec
sbb
xchg
aam
cmp
stc
xchg
les
and
dec
out
sbb
mov
push
repnz
gs
lret
aad
nop
or
rolb
jno
test
insb
jbe
addl
divb
es
mov
cmp
stc
push
dec
push
mov
pop
jae
push
popa
dec
and
rol
pop
imul
in
cwtl
sbb
orl
inc
lret
nop
xor
sbb
out
mulb
inc
lea
adc
or
inc
rolb
jb
popa
pop
jnp
push
lods
adc
mov
dec
or
daa
daa
addr16
pop
inc
pop
pop
sbb
adc
mov
and
adc
cwtl
push
push
jbe
in
or
sbb
imul
jnp
popf
mov
int3
jo
inc
imul
mov
mov
movl
xchg
add
adc
movsb
dec
mov
dec
xacquire
stc
loope
push
push
push
add
outsl
fistpl
dec
and
push
push
sub
add
lcall
mov
cmp
xchg
mov
andl
lret
aas
lock
xchg
loop
jo,pt
test
xlat
ret
les
push
cmp
jp
fdivl
fisttpll
scas
fsubrp
sub
mov
sub
jo
xor
sub
out
and
lahf
and
dec
loop
scas
ret
jl
xor
movsb
sub
mov
push
std
sub
rorl
addr16
jne
mov
add
sbb
jecxz
ss
push
xor
enter
mov
or
cld
lds
out
lcall
mov
das
push
sub
and
push
sub
mov
mov
jge
mov
push
dec
fcoml
push
iret
andb
xor
iret
clc
push
adc
adc
push
pop
aas
fnstcw
daa
call
fistl
rcr
scas
rcll
cmpsl
jne
in
xor
ret
dec
push
pop
ljmp
fwait
cli
inc
adc
scas
testb
in
fs
lret
aad
aas
repz
pusha
outsl
les
mov
inc
add
aam
or
int
or
mov
and
xchg
cltd
cmpb
lret
pop
pop
sub
out
icebp
mov
push
lds
repnz
mov
scas
sbb
xor
jmp
mov
negl
adc
push
and
pop
idivl
mov
clc
xor
outsl
push
lret
fdivp
fidivrl
into
pop
xlat
inc
and
aas
sub
sub
lock
cmc
mov
adc
xchg
pushl
inc
dec
ficompl
fdivrs
push
xchg
mov
sub
mov
and
add
mov
inc
push
cli
xchg
mov
add
test
mov
jo
jnp
adc
imul
adc
sbb
pop
sti
addl
jno
pop
xchg
loop
mov
push
es
pushf
sub
push
pop
pop
popf
dec
loop
sti
push
cmp
enter
int
sbb
adc
sbb
addr16
div
aam
sub
mov
cmpsb
mov
call
nop
xor
sub
cmp
ja
scas
lods
pop
add
jno
xor
sub
fnstsw
cmp
imul
cmc
add
mov
imul
outsl
sub
pop
in
add
fistpll
jae
testl
fdivl
rcrl
call
repz
push
outsb
xor
out
iret
sub
sbb
std
aaa
push
mov
lret
aas
mov
enter
inc
pop
and
data16
mov
cmp
inc
xchg
sbb
hlt
dec
inc
push
in
adc
jnp,pt
jb
pushf
sub
inc
es
clc
pop
push
rcll
out
cmp
sub
in
xchg
mov
mov
out
mov
iret
push
pop
mov
inc
cmp
xor
fwait
cmpsb
in
rorl
push
and
jne
pop
xor
mov
mov
lods
rclb
dec
int3
js
mov
rclb
test
movsl
pop
xchg
cld
pop
mov
xchg
outsb
jle
mov
mov
out
sbb
pushf
mov
loope
scas
add
int
and
add
and
dec
pop
dec
mull
stc
jmp
pop
sub
loope
data16
xchg
enter
nop
push
inc
sub
cltd
dec
aam
push
mov
das
jecxz
jbe
frstor
movsl
imul
push
push
js
fdivrl
dec
sahf
adc
subb
mov
mov
jge
adc
mov
fsubrs
adc
pop
dec
bound
leave
fidivrl
dec
cmp
xchg
pop
mov
notb
or
test
and
scas
lea
lret
xchg
ret
sub
lds
lahf
or
out
dec
cmp
cmc
mov
and
jns
mov
pop
fsubrl
push
das
pushf
push
add
enter
jae
sbb
push
hlt
cmp
test
inc
xor
mov
dec
lods
or
mov
sbb
testl
aad
jge
pop
or
push
pop
jno
or
sbb
xor
mov
aaa
or
int
test
xchg
jns
jl
push
mov
fdivrp
movsb
stos
mov
dec
xor
insb
pop
push
cmp
cld
in
popa
add
push
mov
jbe
shrb
test
stos
push
insb
or
jo
jmp
lea
test
mov
xchg
aaa
stc
aam
scas
popf
and
dec
mov
icebp
out
jmp
test
lea
pop
pusha
ja
fidivrs
clc
pop
xlat
sub
sarl
mov
xchg
cmp
lds
cli
mov
xor
jmp
push
inc
ror
movsb
outsl
arpl
dec
dec
cmp
nop
js
or
shrb
imul
xor
dec
js
push
lods
xchg
pusha
iret
jnp
lcall
jae
lcall
divb
jnp
pop
add
lock
inc
cmp
andb
iret
pop
push
mov
out
loopne
dec
fwait
sub
sub
scas
stos
mov
pop
sahf
sub
jp
into
loopne
mov
iret
int3
das
adc
int
mov
jle
cmp
ret
jae
xor
pop
jnp
inc
insl
jmp
dec
dec
jbe
jmp
mov
add
scas
lcall
mov
outsl
adc
push
andb
add
and
push
leave
cmp
testb
lea
cli
and
add
je
mov
pop
loope
mov
in
in
fwait
xchg
pusha
lret
mov
rolb
lea
aad
mov
xor
or
adc
in
mulb
xchg
ss
leave
bound
cwtl
and
fdiv
and
inc
int3
nop
adc
xor
adc
cmc
cmpsb
scas
fisttps
push
in
adc
fmull
es
xchg
xor
push
pushf
fldt
cmp
inc
bound
fimull
hlt
cs
pushf
out
mov
mov
dec
leave
mov
sub
adc
into
loop
in
shl
sub
or
xor
pop
mov
je
aad
out
adc
xchg
stos
pop
mov
lahf
mov
jbe
je
insb
fbld
cmp
stc
mov
iret
cmpb
push
fcomip
aad
stc
ja
test
or
fimuls
shlb
push
push
mov
int3
sbb
mov
xor
and
pop
mov
ljmp
hlt
inc
sahf
cmp
outsl
mov
das
or
addr16
bswap
fwait
pop
out
push
inc
or
loopne
pop
push
ret
aas
hlt
fwait
sub
add
mov
in
outsl
push
xchg
test
xchg
ja
aam
push
adc
fwait
das
jns
push
mov
jmp
inc
in
ds
cmp
fdivp
fldl
and
mov
jge
and
fstpt
xor
test
sbb
xor
add
mov
mov
js
mov
idivl
jmp
push
lea
outsb
dec
scas
emms
out
cmp
test
push
xor
xchg
movsb
movsl
outsb
push
outsl
adc
push
in
cmc
add
adc
das
fld
xor
ret
push
pop
add
add
add
push
jb
pop
in
insb
fmull
or
cmp
jbe
jp
insb
enter
icebp
jns
pop
lds
jg
jg
jns
inc
inc
fildll
add
jne
mov
push
inc
adc
out
lea
sbb
push
daa
dec
adc
xchg
out
mov
popa
bound
nop
repz
or
popf
or
ss
dec
jne
call
in
jno
movsl
rol
imul
fisubl
push
lret
mov
pop
mov
and
sar
sbb
mov
data16
xchg
jl
enter
inc
scas
cld
pop
arpl
and
adc
outsl
into
adc
dec
fisubrl
rcrl
subb
insl
aad
jbe
xor
shll
sbb
add
rcpps
mov
fs
aas
jmp
xor
mov
dec
dec
cmp
cmpsb
mov
pop
jp
dec
xor
jbe
leave
and
hlt
jmp
shlb
pop
clc
sbb
mov
hlt
push
or
dec
xchg
and
fisubs
jp
inc
sub
sbb
cmp
out
push
adc
cwtl
push
fsub
addr16
vmovss
adc
lods
jp
mov
adc
mov
test
mov
lock
addr16
xchg
inc
dec
ret
imul
sahf
push
dec
xchg
xor
aam
adc
cld
in
cmp
leave
inc
dec
pop
loopne
sbb
mov
mov
pop
frstor
rcll
testl
or
pop
xor
arpl
jp
test
popf
inc
inc
imul
jecxz
dec
outsb
mov
insl
test
push
pusha
xchg
adc
mov
mov
sub
push
xchg
call
adc
es
jecxz
fdivl
jnp
xchg
inc
sub
and
sub
outsl
mov
mov
aaa
iret
xchg
push
jmp
daa
and
shll
and
sbb
scas
cmpsl
mov
mov
pop
cmp
mov
shlb
out
jmp
jo
mov
lcall
fwait
das
into
rorl
and
ss
jb
and
cld
pusha
mov
cmpsl
gs
std
cltd
add
pop
mov
fdivr
jmp
xchg
fwait
xor
push
outsl
cs
lock
jnp
test
call
lea
inc
das
icebp
adc
xchg
mov
sbb
dec
cmp
mov
or
jle,pt
xchg
je
jp
cld
icebp
dec
inc
cwtl
xchg
push
sub
arpl
fmulp
pop
popf
je
testb
pop
fisubs
shrb
cmp
mov
inc
aaa
xchg
cli
test
leave
movsl
xchg
in
inc
cmp
cli
or
mov
mov
imul
mov
test
adc
xchg
rcl
add
and
jmp
lret
movsl
cmp
scas
mov
inc
sbb
scas
jns
fistps
pop
test
jo
mov
push
sbb
add
pop
xlat
pop
jb
inc
or
mov
jp
jnp
ss
xchg
test
outsb
xchg
sub
nop
push
mov
adc
xor
jp
insl
sbb
dec
sub
mov
add
daa
lcall
fdivr
ja
sub
ja
in
popf
dec
rclb
mov
outsb
imul
cmp
fcomp
jne
pop
mov
sbb
mov
pusha
sub
cltd
dec
mov
lret
mov
fs
mov
repz
fadds
adc
shrb
cltd
shlb
int3
mov
cld
rcrb
xor
fmuls
pop
das
adc
test
decb
les
jmp
or
scas
lret
movsb
lds
push
jne
xchg
jae
aam
jl
not
or
scas
mov
jns
fwait
movsl
nop
jns
mov
push
fwait
sbb
cli
jmp
sahf
fidivrs
ss
jecxz
xorl
xor
inc
loope
sbb
push
addl
jo
dec
test
and
leave
lret
ret
sub
pop
in
fldenv
pop
or
addr16
pop
insb
jne
movsl
sub
mov
out
mov
sbb
loopne
mov
xor
fmuls
inc
call
shlb
xorl
loope
pushf
push
cli
repz
jns
jp
cmp
js
xchg
xchg
dec
jmp
scas
je
lods
adc
xor
mov
or
in
data16
push
adc
jle
mov
sbb
test
add
sub
les
fisubrl
pusha
data16
xchg
xor
cltd
fmull
je
or
insl
xchg
push
sub
negb
xor
cltd
outsl
outsl
pop
jp
dec
insl
aas
dec
jbe
pop
aas
mov
adc
sub
fs
divl
push
orb
nop
ret
add
movsb
mov
xor
into
call
and
rorb
shl
push
popf
cli
mov
fwait
into
xchg
cld
mov
inc
add
bound
cs
jno
mov
mov
and
clc
aam
xlat
xchg
in
scas
repz
addr16
and
dec
out
test
cs
mov
adc
lret
pop
cli
lds
sahf
sbb
xchg
push
cltd
int
addr16
jo
pusha
test
push
outsb
jmp
sub
cs
cmpb
fwait
rolb
aaa
or
shlb
mov
imul
xor
push
aaa
or
sub
mov
jo
sbb
ret
popf
bound
lcall
mov
jbe
inc
sub
pop
jb
ret
pushf
dec
mov
hlt
ja
bound
pop
andb
fs
and
push
mov
xchg
sbb
fiaddl
lock
xor
inc
loop
lahf
inc
out
mov
or
scas
push
fidivl
inc
or
mul
insb
sarl
xor
mov
mov
cmp
inc
jo
movsl
mov
inc
xchg
pop
repnz
adc
int
rcl
xchg
cmp
inc
in
rcpps
mov
icebp
lock
rcll
out
jne
xor
push
add
add
andb
bound
sub
cmp
fimuls
je
je
out
in
mov
and
xlat
xlat
mov
adc
fwait
js
mov
pop
sub
stos
mov
out
jne
xchg
pusha
or
into
mov
sahf
ja
lods
in
in
int3
aam
aad
mov
in
push
dec
repz
mov
ret
ja
and
rorl
repz
addr16
idiv
pusha
insb
pop
inc
sub
jp
push
js
js
int3
push
rolb
out
stos
xchg
aad
jnp
cmp
pop
mov
and
jne
dec
xor
mov
and
shl
inc
xchg
mov
mov
repz
pusha
push
mov
xor
idivl
mov
ja
and
jae
fstpt
adc
leave
push
pop
mov
icebp
sub
dec
sbb
pop
sub
lahf
inc
mov
cmovnp
sub
insb
movb
dec
xchg
xor
sbb
sub
sahf
lahf
test
push
ljmp
jge
ret
or
dec
push
jmp
push
xchg
out
cmpsl
and
gs
pop
fwait
xor
xor
int3
jns
out
test
mov
mov
not
or
aam
int3
and
icebp
sub
shll
mov
out
jbe
add
mov
cmp
jmp
stos
test
mov
dec
xorb
add
stos
insl
enter
pop
push
data16
xor
add
jl
and
sub
xchg
and
arpl
std
mov
bound
sbb
outsl
imul
mov
jmp
cli
push
ret
and
mov
push
popaw
and
lret
sbb
std
dec
inc
mov
dec
mov
mov
cmp
add
push
jne
ret
add
sbb
ss
pop
ret
pusha
into
sub
or
lret
sbb
and
pop
test
sbb
jp
pop
test
sub
shr
insl
movsb
repz
ds
fdivl
dec
test
rolb
mov
xchg
sub
test
rcll
leave
adc
jg
dec
mov
sbb
test
cmc
mov
call
adc
jno
xchg
ffreep
outsl
pusha
loope
addb
pop
aam
daa
inc
sbb
add
ret
shl
dec
add
dec
pushf
and
mov
loopne
arpl
fcmovbe
sub
push
push
sub
sbb
movl
shlb
incb
leave
notb
mov
sub
cli
pop
scas
aad
iret
jp
andb
dec
pop
inc
int
or
sbbl
pop
mov
add
ja
call
lods
test
in
into
and
bound
cmp
dec
cmpsl
inc
jbe
div
sarl
jmp
dec
inc
pop
fwait
test
and
jle
pop
pop
rclb
jb
push
dec
stc
or
pop
sub
and
push
cmpb
xorb
jno
mov
dec
mov
lret
adcl
loopne
rol
pop
or
cmpsb
pop
add
or
fbstp
cmp
mov
mov
sbb
rcrb
out
fsubr
xchg
cmp
icebp
inc
ret
mov
xor
adc
xchg
pop
push
and
cmove
je
stc
shlb
mov
cmp
lcall
jle
cmp
sbb
cwtl
lret
lret
inc
cs
mov
ds
arpl
icebp
into
ss
cmpsl
shll
jae
or
pop
xlat
and
lret
jl
push
orl
cmpsl
mov
pop
sahf
jg
out
mov
push
xchg
loope
push
iret
jb
mov
hlt
std
aam
xchg
mov
aam
xchg
mov
inc
cltd
or
mov
movsl
push
sub
mov
or
ficoms
lods
js
js
lcall
push
out
imul
orl
jg
arpl
xchg
out
stc
fdivs
xor
outsb
or
and
iret
jle
or
fidivs
or
push
mov
dec
cmpsl
and
aas
fs
pop
adc
xlat
jp
mov
pop
dec
xlat
clc
inc
test
pop
fadds
push
mov
push
inc
mov
adc
sub
cwtl
jnp
push
clc
call
inc
aaa
jecxz
out
cmp
inc
jmp
sub
add
inc
mov
hlt
ficoms
lock
xor
cmp
adc
pop
xchg
test
mov
mov
sbb
sub
pusha
jnp
push
movsl
negb
enter
lock
xor
dec
in
daa
mov
pop
std
jl
fistl
sahf
scas
dec
jno
or
sbb
stc
xor
sahf
xchg
push
xchg
inc
test
push
inc
popa
mov
cmp
and
into
mov
das
out
jbe
out
cmc
dec
dec
mov
test
inc
loop
add
mov
je
mov
hlt
cmpsb
sbb
cmp
dec
pop
cmp
stc
out
cltd
cmc
int3
mov
daa
popf
inc
and
lahf
jno
mov
pop
or
mov
xchg
add
pop
shrb
in
loop
lret
sub
cmp
or
daa
inc
or
cmpsl
adc
xor
mov
lods
push
add
lret
sbb
bnd
incb
popf
push
shll
mov
test
sti
xor
inc
pop
int
dec
hlt
enter
lcall
sub
add
insb
mov
sub
add
xor
jns
xlat
pop
xor
popa
xor
push
inc
mov
cmp
out
cmp
cmp
pop
push
pop
cltd
loopne
lea
and
push
loope
fwait
mov
negl
xor
hlt
fidivl
add
adc
mov
lahf
xchg
xchg
or
jl
jle
pop
jo
jb
aad
nop
hlt
cli
into
fsubrl
pushf
and
mov
loope
inc
or
mov
arpl
mov
sub
test
call
rcrb
adc
clc
addr16
std
mov
lret
shlb
outsl
movsl
sbb
xor
lahf
nop
or
je
fst
and
mov
repz
xlat
or
lret
jecxz
or
pop
test
lss
lcall
jl
push
inc
push
pop
push
cld
sbb
out
das
pop
mov
dec
adc
sub
sahf
clc
daa
leave
addr16
xor
mov
push
data16
stos
inc
push
xchg
imul
stc
out
mov
sbb
punpckhwd
push
xchg
clc
insl
cmc
loop
enter
or
xchg
push
bound
sbb
std
aas
fdivrs
add
pop
xchg
sti
into
sbb
jns
lahf
xor
out
test
add
sbb
sbb
push
or
jbe
test
and
mov
dec
cmc
test
dec
and
fdivr
orb
stos
mov
pop
sub
inc
mov
stos
xor
inc
push
loope
mov
push
adcb
pop
xchg
ds
pop
push
push
xchg
test
mov
int
in
jnp
sti
leave
add
mov
push
mov
mov
xlat
aaa
adc
icebp
mov
out
mov
pop
add
dec
daa
inc
in
xchg
pop
mov
mov
adc
sbb
subl
data16
adc
inc
test
daa
and
cmpsb
mov
add
xor
mov
mov
xor
enter
inc
movsl
mov
movsb
push
arpl
mov
andl
fs
imulb
inc
pushf
inc
es
lahf
adc
dec
mov
push
sub
negl
or
lcall
subb
insl
aas
repnz
xchg
iret
mov
xor
sti
aaa
push
sbb
test
bnd
or
mov
pop
and
test
test
mov
push
aaa
sub
xor
mov
repz
push
xchg
lock
out
inc
pop
push
mov
and
mov
in
pop
mov
cmp
into
movsl
mov
cmp
cltd
cmp
xor
and
xchg
xor
push
test
outsb
push
push
and
clc
pop
mov
aas
dec
mov
or
mov
mov
lcall
jmp
test
movsl
inc
sub
aam
jl
js
movsb
pop
cli
imul
lcall
popa
and
push
xchg
jne
iret
repz
std
call
roll
adc
add
pop
fsubl
inc
and
nop
inc
popf
xchg
mov
pop
in
nop
xor
mov
or
outsb
xlat
inc
clc
lds
mov
mov
mov
and
mov
sbbb
jo
push
cmp
fsubl
sbb
inc
rorb
hlt
ret
dec
pop
xchg
clc
inc
hlt
cmpsl
push
dec
test
lea
push
ja
inc
adc
fdivrp
leave
int
jg
int
aaa
insl
loopne
dec
inc
cmpsb
mov
gs
aad
pop
and
nop
push
mov
xor
outsb
decl
je
dec
xchg
stc
mov
aas
int3
lods
xchg
sub
sub
xchg
push
push
gs
ret
negl
xor
cli
sbbl
pusha
stc
xchg
int3
mov
mov
fisttps
adc
js
sub
jae
mov
push
pop
push
xchg
sbb
mulb
mov
jb
in
sbbl
pop
insb
sub
pop
shl
xor
loope
sti
mov
mov
je
sbb
popa
and
gs
mov
jnp
in
sub
test
shlb
mov
mov
loope
sbb
repnz
clc
mov
es
sbb
sbb
add
pop
add
sbb
lcall
fdivp
out
or
mov
dec
cmp
call
lods
push
out
push
dec
sahf
xchg
xchg
popa
imul
fiadds
add
dec
xchg
ja
sub
rolb
lcall
xchg
add
jbe
and
fs
test
cmp
mov
and
das
cli
xchg
sbb
jbe
and
or
lds
popa
pop
sbb
xor
inc
aad
xor
cmp
int
xchg
or
aaa
cli
enter
mov
mov
mov
inc
xchg
adc
mov
shlb
sub
push
idivl
mov
ret
push
pop
pop
jg
repz
pop
cmpsl
cs
out
xchg
xchg
pop
add
sbb
gs
sub
dec
xor
ret
adc
cmp
ss
vmwrite
andb
cs
adc
add
mov
out
pop
sarb
popa
mov
or
cmp
outsb
pop
jae
cmp
or
shll
repz
or
adc
jg
add
lcall
mov
aaa
mov
cs
mov
pop
out
pop
lahf
insb
out
fadds
fidivs
repnz
xlat
leave
xchg
lds
call
lods
fisubrl
sahf
push
push
into
test
insb
jecxz
xor
fidivrl
push
pop
fsubrs
pop
ficomps
jg
repz
xchg
dec
shl
mov
inc
rorl
xchg
pop
mov
adc
dec
int3
fst
rol
pusha
fimull
mov
pushw
mov
nop
add
cmpb
fistpl
add
repnz
xchg
adc
xchg
add
xchg
sub
push
aaa
push
mov
gs
sub
loope
lds
pusha
rclb
out
fwait
mov
sbb
lea
pop
inc
sub
dec
fmuls
ds
and
scas
cmp
cmpsl
sbb
mov
scas
arpl
outsb
test
push
loopne
xor
push
in
fisubrl
sbb
and
or
jp
in
pop
or
sub
push
adc
mov
sarl
cmp
bound
or
mov
cmp
test
and
mov
scas
andb
xlat
mov
in
push
mov
pop
cmpsb
and
in
dec
pusha
and
sbb
xchg
xor
sub
add
iret
xchg
xor
inc
push
push
mov
fucom
sar
mov
hlt
mov
pop
test
fs
cmp
cmp
in
lods
fists
ljmp
pop
sub
lock
dec
and
xchg
iret
sbbb
jo
sub
jl
ja
add
rcl
cmp
mov
jne
mov
clc
lcall
ror
test
and
in
add
mov
adc
mov
in
movsl
neg
jae
test
mov
xor
sub
xchg
aas
push
add
pop
mov
je
outsl
xor
sahf
testl
dec
ljmp
cmp
dec
sbb
cmpsl
pop
loopne
cmp
scas
jae
lcall
sarb
mov
push
pop
and
xchg
dec
or
mov
js
pop
shll
stc
in
dec
fdiv
or
ljmp
mov
fdivrp
mov
cld
push
xchg
aas
push
cmp
or
mov
and
popa
filds
pop
inc
xor
jno
pushf
adc
idivl
je
lds
clc
cmpsb
xlat
sub
xor
xchg
jne
rorb
jge
std
adc
movsb
in
into
imul
mov
push
add
sub
ljmp
ret
xchg
outsl
cmpsl
mov
and
std
push
xchg
sbb
and
push
inc
mov
negl
cmp
cmp
or
xchg
js
sub
inc
push
xchg
add
je
mov
mov
rclb
loop
mov
inc
sub
inc
jmp
mov
pop
mov
ret
push
xchg
ret
push
dec
ja
in
fs
jo
test
lods
push
push
xor
dec
mov
sti
lods
push
xor
cmp
outsl
jmp
pop
xchg
xchg
mov
gs
imul
mov
movb
cmp
adc
ja
pusha
jne
cmp
mov
jge
lods
xlat
outsl
shlb
jle
inc
jae
int3
stos
ucomiss
push
pop
inc
cmp
into
adc
dec
inc
lahf
int3
enter
fisubl
xchg
aas
sub
and
in
sub
test
push
shll
fsubl
and
imul
push
lods
out
insb
push
pop
js
cwtl
pushf
aad
insb
inc
cmp
movb
push
stc
sbbb
aaa
add
mov
push
ret
cmc
or
clc
pop
adc
mov
xchg
stos
imul
inc
mov
pop
mov
push
jae
xor
cltd
je
imul
pop
cmp
mov
mov
add
push
jb
adc
mov
jmp
jns
ja
adc
pop
pop
data16
fiaddl
xor
loopne
in
dec
mov
push
insl
sbb
add
pop
fwait
push
mov
dec
lea
sar
jns
or
pop
aad
xchg
mov
or
adc
add
aas
lcall
sbb
movsb
mov
pop
or
cld
daa
es
inc
xchg
mov
enter
pop
scas
pop
popf
or
dec
fcompl
inc
cwtl
mov
fcomi
outsb
js,pn
aad
mov
test
push
mov
arpl
out
push
jnp
iret
mov
repnz
jne
cmp
jle
adcb
test
out
dec
cmpsl
js
out
lods
xor
scas
rolb
ficomps
mov
xchg
or
loop
cmp
enter
push
add
jecxz
and
xchg
xor
adc
sub
mov
cli
cmp
dec
mov
xlat
fstpl
jl
test
std
pop
lret
or
imul
imul
and
rorb
cmp
mov
in
incl
mov
sub
out
push
cmc
inc
cmpsb
add
scas
cld
push
xchg
and
mov
xchg
insb
pusha
adc
mov
xchg
ret
test
jge
lahf
xor
je
popa
aam
xlat
cs
pop
and
add
scas
xor
ja
push
movsb
jbe
mov
xlat
dec
mov
cmpsl
or
adc
xor
fcompl
adc
scas
adc
cmpsb
sub
icebp
lds
imul
mov
movzbl
sbb
fsubrp
das
xchg
dec
cli
popa
repz
aas
mov
mov
test
jns
aas
mov
sub
repz
cmc
cld
jp
xchg
inc
pop
les
rolb
dec
mov
adc
push
push
fildl
add
pop
clc
repnz
xor
loopne
sahf
mov
mov
jg
ss
cmp
aaa
rcrl
shrl
mov
std
pop
xchg
lahf
gs
sbb
ljmp
push
in
jbe
int
jle
lret
ds
fidivs
xchg
ret
mov
mov
or
mov
cmp
mov
pop
sub
xor
push
pop
cmpsl
mov
or
orb
stos
pusha
mov
sub
fstpt
jae
and
jno
push
sahf
aad
ja
or
xchg
or
das
sbb
out
bound
test
lahf
xor
mov
imul
fildl
jmp
popf
push
dec
push
ret
xchg
cli
pop
pop
das
jmp
push
and
pop
jecxz
mov
aam
mov
test
xchg
jbe
jmp
dec
sub
lret
pop
cmp
pop
adc
stc
fucomi
jno
add
into
icebp
insl
mov
xchg
dec
push
mov
mov
pop
mov
filds
cmp
inc
call
sbb
xlat
int3
mov
stos
in
mov
mov
in
test
sbb
popa
sbb
std
sub
dec
adcl
mov
fcomps
insb
in
mov
mov
ss
or
xor
gs
arpl
sbb
jg
xlat
ret
dec
ss
pop
or
or
mov
jecxz
mov
or
add
push
bound
xchg
cmpsl
push
mov
enter
dec
in
jno
fwait
cmp
and
fdivl
adc
sti
in
int3
popa
push
shll
cli
dec
add
xlat
sahf
mov
mov
add
lret
adc
out
xor
fs
shl
cmc
out
test
pop
fsubrs
lahf
fs
shrl
decl
sbb
cli
pop
push
leave
jnp
or
adc
xchg
and
lcall
or
and
insl
or
xlat
lods
test
jne
in
jb
sbb
mov
cmc
jns
cmp
in
icebp
jl
adc
cmpsl
bound
add
inc
push
fwait
mov
call
pop
cli
stc
fldt
push
cmp
adc
out
insl
int
inc
sbb
cmp
inc
or
and
in
adc
or
pop
test
mov
sti
mov
adc
testb
mov
mov
ret
inc
or
stos
inc
out
fmull
fidivl
dec
sub
cld
sahf
and
rcl
pop
push
add
aam
fldt
ss
cs
push
rolb
or
arpl
cmpsl
inc
mov
mov
rorl
mov
cmp
adc
jo
pop
aaa
fs
subl
lds
sbb
rcl
jne,pn
jne
lahf
push
bound
test
adc
adc
jg
sbb
inc
adc
in
sbb
sbb
sub
mov
js
lock
fwait
pop
lods
inc
das
adc
pop
mov
pusha
jb
push
jns
mov
popf
movsb
inc
outsb
add
push
pop
pop
ret
add
std
insl
fstl
jno
xchg
jbe
mov
sbb
inc
xor
and
test
cmp
mov
sbb
jmp
js
jg
mov
xor
cld
das
add
adc
and
insl
fucom
jge
sbb
ret
xlat
mov
nop
loope
jecxz
rorb
lcall
pop
ja
jecxz
test
mov
sbb
add
int
xor
xchg
adc
aaa
jne
mov
les
xchg
dec
pop
lea
lea
out
ds
sbb
mov
jecxz
sbb
dec
fildl
shrb
lret
jae
mov
ja
xchg
mov
add
daa
push
mov
je
adc
insb
xchg
mov
cmpsb
fisubrs
dec
idiv
lret
adc
in
xchg
mov
pop
mov
rcrl
andl
pop
aam
pop
pop
pop
ds
xchg
rorl
dec
stc
mov
iret
xor
aas
jecxz
mov
aad
jp
pop
dec
jno
stc
mov
and
js
imul
mov
push
sbb
xlat
or
mov
mov
jp
lods
mov
pop
mov
scas
dec
out
pop
add
mov
fisubs
loopne
pop
out
clc
push
mov
sti
jecxz
into
jbe
fimull
iret
xchg
jnp
xor
aad
fnstsw
adc
dec
or
sub
sti
adc
out
mov
cmp
jb
ds
mov
cmpsb
mov
mov
mov
movsl
push
jb
scas
mov
fistpl
lahf
imul
fcmovnbe
in
sub
stos
or
repnz
dec
mov
push
std
imull
or
imul
jae
dec
xchg
sbb
jb
or
dec
push
negb
mov
aas
mov
xlat
jp
cmp
in
hlt
jnp
and
ljmp
insl
test
pusha
mov
dec
add
add
jg
loope
aam
ja
ds
mov
mov
loop
loope
sarl
add
adc
sub
push
fcoms
notl
mov
fisttpll
add
sub
xchg
push
cmp
addl
xor
sbbl
fldt
and
sub
fisubl
push
addr16
xchg
fisubs
xor
test
mov
and
popa
iret
test
pop
pop
or
pop
test
adc
ss
push
js
mov
mov
sti
jno
and
mov
push
jmp
sbb
mov
cwtl
push
mov
jge
xor
pop
jae
mov
test
or
dec
mov
test
push
sbb
and
add
out
mov
push
clc
add
and
pop
xor
inc
xor
lret
sarl
es
arpl
push
sbb
loopne
faddp
inc
idivl
xchg
pusha
cs
or
aas
mov
xchg
aaa
inc
rclb
mov
adc
pop
in
stos
jg
nop
and
ss
lret
sbb
fdivs
ss
mov
mov
call
xor
jp
stos
jae,pt
inc
or
out
nop
rcr
fistpll
mov
pop
std
enter
lret
sbb
push
aas
and
ja
nop
iret
pop
sbbl
js
daa
sub
lret
jbe
cs
aas
outsb
jle
mov
sub
lcall
lds
std
es
xlat
cld
mov
rorl
insb
xor
mov
mov
jo
add
push
ficoms
push
enter
cs
push
mov
fistpl
mov
sub
jb
loopne
mov
rorl
fs
stc
pushf
dec
mov
add
movsb
data16
add
or
sbb
iret
daa
inc
iret
idivb
xchg
adc
jecxz
imul
inc
mov
xchg
sub
jno
fnstcw
mov
jns
pusha
inc
jmp
js
add
cli
sahf
stos
xor
scas
cmp
dec
into
add
pop
xchg
sub
sbb
jmp
and
or
push
stos
ja
repnz
push
push
jle
cmp
xchg
cmp
sub
fstps
addb
jno
daa
loopne
mov
and
push
insl
jo
jne
stc
jns
or
mov
xlat
dec
pop
in
fwait
out
mov
jp
scas
ja
fbld
movsl
pop
in
int3
inc
xchg
xchg
sbb
xchg
loop
push
insb
clc
cwtl
push
shlb
mov
lret
sbb
jns
and
movsb
in
ret
repz
add
jge
jmp
aad
xchg
cmpb
in
dec
inc
sbb
stc
fdivr
add
lahf
sbb
lea
lea
jb
inc
lea
push
loop
pushf
mov
mov
out
pop
repnz
ret
add
dec
jp
mov
sbb
addr16
and
mov
iret
jg
shl
cmp
mov
int3
jl
xchg
add
stc
mov
pop
in
and
push
or
dec
fnstcw
lock
out
ret
data16
mov
out
jg
scas
mov
aad
pop
or
gs
xchg
int
lds
cmp
aad
es
sbb
adc
push
push
mov
xlat
sbb
adc
rcrb
fistps
test
es
fisttpl
fs
jp
aad
cmc
cmpsb
loope
fwait
pop
or
test
jle
imul
add
lret
jg
js
pop
mov
in
sub
or
rcl
cmp
inc
xor
xchg
out
fldcw
data16
lret
addr16
mov
loop,pn
xor
xor
js
jns
shlb
or
hlt
cmp
cmp
inc
xor
ret
rcr
cmc
or
add
xchg
add
jp
dec
ljmp
add
adcb
lret
aas
mov
mov
dec
incb
sbb
lods
out
cmp
rcl
add
push
xor
loope
pop
cmp
scas
es
and
fldt
mov
mov
sub
dec
sbb
dec
lock
add
inc
mov
shll
inc
fwait
cmp
mov
aaa
xor
cmc
xor
mov
xchg
push
popa
int3
dec
dec
int
xor
into
subb
push
ficoms
or
pop
rclb
dec
std
and
pusha
mov
cmp
push
lret
xlat
shrb
mov
pop
push
or
aas
daa
pop
dec
xchg
les
dec
jns
xor
inc
pop
test
and
xor
jo
ljmp
es
inc
and
scas
jns
hlt
mov
je
push
add
jmp
test
mov
jae
jnp
lock
push
pushf
jnp
insb
pop
lret
pop
rolb
xor
or
test
dec
adc
or
dec
mov
fwait
sahf
out
es
mov
mov
loopne
jp
mov
jp
adcb
scas
addb
cmp
jmp
cltd
jns
mov
sub
push
jp
add
cmp
xor
sahf
shl
pop
jecxz
mov
sbbb
stos
iret
ret
ret
mov
xor
mov
incb
outsl
and
pusha
lret
add
sbb
cmp
or
jp
xchg
pop
popf
push
into
add
inc
rolb
lock
jmp
popf
nop
inc
mov
add
mov
pushw
ficompl
ret
mov
popf
shll
adc
xchg
ds
xchg
push
or
sub
stc
push
aam
cltd
ret
inc
add
xlat
cli
shrb
lcall
xor
jp
dec
cmpsl
add
rorl
xchg
stos
icebp
es
sbb
mov
dec
dec
insl
or
test
imul
jnp
js
test
xchg
cmp
xor
push
in
xchg
mov
dec
out
mov
fldcw
mov
das
add
stos
jo
or
outsl
fldcw
xor
lahf
cld
rcrb
in
xchg
inc
or
popf
adc
push
pop
dec
inc
aad
add
mov
or
xor
xor
andl
lods
xchg
sar
or
ja
dec
mov
out
stc
push
inc
fisttpl
gs
ja
mov
mov
insb
in
std
pop
xor
pop
add
cltd
jg
testb
std
cmp
xlat
inc
ret
pop
int3
lret
aad
test
push
inc
sarl
arpl
sub
pop
sub
aad
push
push
cmp
pop
lret
fdivrs
loop
aaa
add
sub
out
dec
fs
pop
dec
or
fldl
test
stc
test
lods
stc
inc
pop
xchg
pop
hlt
jb
cld
mov
hlt
enter
xchg
mov
subb
dec
jnp
into
cs
mov
fsub
sub
and
mov
sbb
cmp
addb
punpckldq
leave
cld
mov
icebp
ret
jle
mov
mov
cmc
cmpsl
pop
enter
push
fsubrl
inc
movsl
pop
mov
and
cmp
and
sub
sarl
call
lock
sbb
leave
cmc
in
sub
fwait
je
mov
inc
inc
idiv
out
sub
xchg
push
pushf
or
nop
in
leave
sbb
pop
add
jmp
fiadds
fwait
pop
push
cli
shl
push
pushf
and
imul
inc
sbb
xor
aam
mov
push
mov
mov
cmp
in
cmp
mov
shrl
stc
shlb
leave
jge
cmp
je
dec
mov
imul
dec
divb
xor
pop
fistpl
sti
insl
jge
cmp
rorl
ret
int3
rorb
idiv
and
dec
dec
or
out
and
sub
cs
sarl
add
cmc
syscall
ljmp
xor
push
jne
lahf
cmpsb
sub
lret
mov
ret
insb
iret
inc
rdpmc
iret
mov
mov
outsl
mov
or
jecxz
scas
mov
rcrl
push
cs
push
pushf
scas
scas
mov
sbb
adc
ljmp
outsl
leave
cmpsl
les
out
xchg
xchg
jno
jns
sub
push
cwtl
jbe
scas
les
mov
jl
sub
mov
jbe
lret
cmp
call
xchg
xchg
in
mov
add
adc
addr16
aaa
fildll
inc
push
bound
jns
mov
std
cmp
push
sar
dec
cmp
jg
or
sbb
and
xlat
adc
out
mov
dec
mov
pop
negb
push
jmp
push
ss
sbb
stos
lret
gs
je
xlat
dec
xlat
pusha
dec
mov
inc
lahf
mov
enter
fstps
mov
outsb
jae
xchg
sbb
mov
cmp
and
out
mov
cmpsl
iret
jbe
push
arpl
xchg
repz
fsts
repnz
popf
fstpt
inc
xor
xchg
cs
cmp
outsb
jmp
push
in
mov
shl
aas
fidivrl
addr16
adc
jno
dec
sub
andl
jbe
leave
jmp
cltd
fildl
orb
mov
aaa
rorl
and
pusha
mov
scas
scas
push
lea
lds
not
add
iret
fdivrp
jl
xor
cwtl
add
mov
cmp
loope
sub
ret
pop
je
lret
xchg
sbb
or
sub
rcl
dec
and
in
jl
mov
mov
ret
sti
or
paddusb
jns
nop
lods
or
pop
imulb
xchg
xor
xor
aam
sbbb
mov
xorb
adc
inc
dec
stc
mov
addr16
imul
cmpsb
test
dec
pushf
ss
cmp
and
fld1
mov
stos
xor
cmpsb
push
sbb
inc
xor
outsb
mov
outsb
nop
scas
mov
mov
mov
pop
into
shlb
jb
mov
test
mov
pop
lcall
add
push
aaa
sbb
pop
icebp
or
cmp
fs
xchg
shll
outsb
adc
shll
fcmovnb
hlt
jp
mov
jnp
adc
cmp
add
xchg
or
push
es
add
mov
mov
jecxz
xor
push
in
pop
fldenv
je
subb
pop
mov
mov
and
dec
adc
imul
mov
dec
pop
push
jno
cltd
cmp
lea
add
call
mull
rclb
jb
xor
icebp
mov
dec
pusha
mov
ss
aas
mov
loopne
or
cmp
dec
aaa
xor
cmp
gs
imul
out
daa
inc
pop
cmpb
mov
xchg
lahf
into
or
sbb
or
and
lret
mov
pop
jg
mov
xlat
inc
mov
push
out
repnz
sbb
out
sbb
fwait
sbb
repnz
fwait
dec
test
fdiv
dec
dec
loop
add
pop
imul
mov
push
add
rclb
sbb
jg
pop
inc
cmp
xor
test
stc
ljmp
in
xor
mov
xor
adc
orb
bound
pop
pmaxsw
cmp
push
scas
notb
mov
movl
pusha
add
movsb
fsubrs
push
jnp
enter
pop
jge
add
push
sbb
mov
repz
testb
and
vpshufhw
cmc
push
mov
jnp
lret
xchg
cmpsb
xor
adc
push
popf
sbb
push
out
fcoml
js
jns
or
imul
rorl
cmp
sbbl
push
jnp
mull
ret
dec
jb
sbb
push
lea
or
out
roll
dec
pop
push
das
xor
dec
push
sub
add
inc
inc
mov
inc
iret
ret
ljmp
xchg
cmpl
ret
mul
rol
mov
xor
lock
fsubs
fisubrs
add
pop
setge
fsubrp
mov
push
div
imul
inc
aam
pusha
lods
ja
enter
and
mov
mov
les
js
mov
mov
push
stos
loopne
aad
xchg
push
inc
add
adc
inc
mov
addl
iret
adc
inc
xor
es
jecxz
jns
fldt
push
adc
rol
movsb
je
add
adc
fstps
adc
enter
pushf
ja
push
mov
sbb
pop
clc
mul
xchg
xorl
loope
or
pop
xchg
pusha
xorb
push
adc
adc
push
popf
dec
stos
push
fsubrs
outsl
int
ss
pusha
dec
sbb
dec
mov
push
pop
push
into
mov
sti
add
xchg
mov
aaa
les
dec
add
outsb
and
shll
xor
mov
pusha
mov
subl
ret
jg
inc
jnp
movsl
push
into
pop
addr16
or
jp
mov
sbb
xorl
jle
lcall
inc
scas
out
insl
push
inc
aam
les
stos
or
inc
dec
sbb
mov
enter
add
frstor
nop
pop
add
mov
dec
lock
push
pop
adc
divl
in
cmp
xchg
es
xchg
mov
arpl
ljmp
mov
das
fs
rorl
jg
arpl
mov
das
ds
cwtl
mov
stos
xlat
movl
stos
sbb
cmp
dec
xlat
gs
sbbb
jecxz
mov
inc
jnp
aas
dec
enter
xchg
and
out
pop
jnp
adc
inc
push
repnz
dec
arpl
inc
jecxz
fs
test
adc
aam
imul
sbb
fisttpll
bound
shrl
addr16
stos
inc
in
push
xchg
inc
ret
int3
xor
push
lea
mov
sti
xor
loop
test
add
addr16
sbb
or
jo
push
adc
das
dec
test
xchg
jecxz
std
shl
pop
jo
xor
mov
xlat
pop
mov
inc
cmpsb
inc
jecxz
cmp
std
subl
lods
leave
mov
adc
pop
push
arpl
push
mov
dec
sbb
mov
out
dec
xchg
jo
sbb
lea
and
dec
daa
aam
pop
push
mov
mov
stc
loop
lahf
mov
lmsw
test
jle
aaa
mov
fidivrs
xchg
scas
js
in
and
mov
lods
loop
dec
jb
sti
adc
pusha
ljmp
andl
pop
jne
mov
jg
jbe
xchg
adc
gs
mov
rcrb
mov
pop
lods
sub
push
pop
pop
call
inc
cltd
test
mov
loopne
repz
clc
dec
xor
iret
stos
fldt
or
or
push
stc
xchg
call
fiadds
xchg
or
das
push
adc
imul
ficoms
loop
xorb
repnz
push
cmpsb
or
jae
sbb
pop
jno
pop
hlt
call
pop
ret
fcomps
jo
fnstsw
dec
sbb
mov
idivl
sbb
lea
xorb
ret
xchg
rcrb
push
mov
xor
sbb
sub
jbe
gs
lret
pusha
mov
enter
pop
nop
add
rcl
jp
dec
jns
push
mov
icebp
int3
sub
adc
sub
movsb
mov
dec
repnz
mov
or
sub
inc
push
outsl
ret
insb
add
in
dec
mov
and
repz
jno
lea
mov
sti
mov
insl
in
popa
mov
les
dec
shlb
xor
jmp
push
lahf
sbb
outsl
arpl
bound
sub
call
cmp
mov
jmp
insb
mov
dec
icebp
mov
jmp
lret
or
pop
mov
lret
cltd
cmc
fisttps
outsb
mov
xchg
push
lcall
lds
popf
cltd
jg
xor
cmp
or
test
push
lret
dec
mov
push
inc
mov
fwait
add
inc
push
inc
xor
mov
and
cmpsl
into
or
add
leave
cltd
push
test
or
mov
pop
sbb
mov
mov
pop
inc
bound
mov
andl
inc
push
mov
arpl
mov
mov
jne
fnsave
ds
add
out
jg
sub
lods
jnp
fcomip
add
jecxz
xchg
push
mov
mov
sti
out
cmc
xor
lods
xor
cli
sub
sub
lock
daa
das
addl
call
adc
inc
adc
movsb
sti
or
imul
mov
dec
out
scas
movsl
mov
es
inc
push
lock
outsl
aaa
mov
into
jb
lock
jge
mov
mov
pop
cmp
adc
fs
movsb
push
push
xchg
fiadds
out
ss
sbb
mov
jnp
xchg
out
or
mov
hlt
sub
iret
ret
mov
mov
pop
sub
ret
loope
test
popf
arpl
and
jns
pusha
scas
cltd
outsb
in
push
out
arpl
dec
aas
xchg
sbb
xchg
sbb
popf
stos
push
and
push
aam
sti
add
cmp
sbb
nop
sti
loop
ficompl
bound
mov
mov
cmpsl
push
jecxz
inc
sbb
movsb
add
fldl
and
mov
cmpsb
lods
cltd
xor
adc
sbb
iret
xchg
push
in
jl
xchg
stc
or
sub
or
lea
test
arpl
fstl
data16
jle
or
push
xor
and
mov
mov
inc
xchg
iret
add
outsb
push
dec
xor
xlat
sub
sarb
sbb
lea
jl
neg
xor
xor
jmp
aad
in
jns
mov
int
dec
outsb
mov
mov
sahf
in
lcall
jl
stc
lahf
lea
sub
js
mov
cs
jne
mov
and
adc
lods
inc
mov
scas
xor
inc
testb
pop
loop
idivb
mov
xor
cmp
dec
fcomps
jno
mov
sarl
or
test
xor
test
iret
ss
test
das
roll
push
pop
jbe
in
push
mov
inc
push
cmp
movsb
or
clc
imul
xor
dec
xor
cmpsl
sub
cmp
pop
lret
add
sbb
mov
add
mov
or
push
and
fdivrl
cmpsl
arpl
sbbl
pusha
mov
jbe
xchg
or
push
pop
leave
enter
int
push
leave
dec
fimull
mov
ljmp
stos
mov
test
or
push
push
lods
mov
mov
mov
cmp
lods
int3
push
mov
outsb
test
inc
cld
xchg
neg
gs
sub
fnsave
icebp
sbb
inc
mov
mov
cmp
fmul
jmp
or
push
mov
mov
inc
in
push
bound
dec
xor
mov
mov
cli
push
stos
lahf
xor
cmpsb
imul
imul
call
sti
idivb
aad
shll
mov
mov
xor
aaa
mov
popf
adc
fldcw
lret
adc
pop
jmp
dec
xor
and
test
es
sbb
jae
jo
sti
in
mov
psrlq
xor
inc
or
and
sub
out
dec
inc
fwait
cmpsl
popa
push
pop
sbb
mov
loope
push
outsl
roll
lods
enter
and
std
adc
dec
sbb
mov
dec
sub
mov
pop
cwtl
inc
stos
movsl
adc
ljmp
loopne
mov
adc
fisttps
and
test
push
stos
hlt
mov
out
daa
and
ss
mov
insl
dec
inc
loopne
ljmp
fiaddl
sub
cmp
lret
les
pop
adc
jae
inc
push
dec
adc
pop
filds
in
jecxz
xor
cmc
ret
andl
adc
mov
incb
xor
fstl
mov
in
dec
and
insl
mov
inc
cmp
cmc
jge
cmp
insl
pop
ret
icebp
insl
cmpsl
push
les
lea
dec
mov
mov
aam
outsb
rclb
mov
leave
scas
mov
xchg
xchg
add
sub
sub
sub
mov
arpl
xor
cmp
jp
jge
movsb
rdmsr
scas
or
dec
in
pop
mov
xchg
andb
dec
xlat
cld
ss
sbb
ror
push
and
jns
jb
stos
out
pop
stos
out
out
repz
dec
popf
sbb
cmc
mov
jl
shlb
lods
fidivs
shlb
cmp
fwait
and
pop
fsubs
inc
imul
idiv
push
lock
lahf
lcall
cmc
jmp
sti
lock
js
lock
ret
add
sti
mov
jmp
call
in
shrl
adcb
push
scas
les
sbb
jbe
scas
or
or
mov
arpl
lock
lock
andl
divl
adc
mov
dec
repnz
js
inc
xor
adc
or
sub
inc
xchg
inc
mov
repnz
idivb
clc
xor
sub
jo
outsb
cld
popf
xor
inc
in
mov
mov
adc
gs
sbb
scas
push
test
inc
pop
push
scas
dec
push
cmp
js
dec
das
cli
xor
sub
out
fildll
lahf
and
and
insb
push
inc
mov
sti
lds
repnz
lods
dec
cmp
pop
xchg
or
dec
in
fisubrs
loopne
mov
add
mov
dec
push
xchg
xor
pop
rcrb
popa
movsl
les
rcr
bound
push
xlat
inc
cli
add
stos
cmp
pusha
push
sub
pop
adc
or
xor
pop
cmp
mov
push
clc
and
mov
int3
dec
add
mov
jo
inc
outsb
mov
in
cld
adc
call
jecxz
cmc
xchg
push
sbb
fsub
push
mov
loope
cltd
mov
sti
cmp
pop
popa
fwait
sbb
loopne
xor
or
rorl
mov
movl
add
shll
xchg
mov
dec
test
imul
mov
arpl
or
fimuls
ds
ret
xor
lcall
dec
mov
inc
mov
cmc
push
ficompl
jl,pt
pushf
push
mov
or
cmpb
jnp
out
jno
cmpsb
idivb
mov
inc
faddp
push
in
ret
pushf
ja
ljmp
gs
xchg
adcb
les
mov
pop
popa
fdivs
aam
sahf
jmp
dec
and
and
mov
pop
out
in
scas
or
repz
lcall
push
test
and
stos
push
mov
lret
xor
je
data16
pop
hlt
cmp
les
out
inc
inc
jg
adc
jmp
push
into
addr16
mov
les
push
add
mov
daa
mov
cli
call
comiss
lret
mov
hlt
mov
xlat
mov
mov
minps
imul
and
sbb
aam
addb
decb
sub
imul
lods
jnp
sub
add
je
cmc
nop
in
push
pop
xchg
and
or
sub
xorl
and
cwtl
xor
arpl
cmc
jne
pop
cmpsb
xchg
sbb
les
and
lcall
shr
jl
rcr
add
and
push
cltd
cvtpi2ps
dec
xchg
inc
ja
add
and
les
stos
ds
lahf
sbb
jne
xor
loope
adc
mov
xchg
dec
jae
xorb
enter
mov
shr
mov
sub
jne
in
push
sahf
cmpsb
mov
mov
lock
test
and
pop
enter
cmp
xor
mov
test
ss
sub
dec
and
and
cmp
adc
mov
mov
sbb
cmpsl
and
inc
mov
iret
jge
xchg
pop
inc
push
cltd
ret
add
imul
dec
lret
sbb
xchg
pop
mov
adc
jb
jmp
jae
stos
pmaxsw
fs
xchg
cmp
cmp
sub
and
and
out
hlt
roll
sahf
fadd
cltd
add
mov
add
das
push
repnz
pop
sub
pop
dec
mov
or
fs
lods
xchg
sub
lahf
xor
sbb
sub
repnz
or
icebp
xchg
jg
repnz
iret
sub
pushf
movsl
dec
decl
jle
mov
test
jo
push
imul
xsha1
cmpsb
mov
insl
inc
scas
insl
mov
cld
adc
add
out
sbb
cmp
sbb
ret
mov
pand
dec
lea
adc
push
mov
xchg
and
or
movsl
mov
int3
and
fmull
dec
pop
jl
iret
sub
jge
or
test
xchg
pop
add
ja
mov
movsl
subl
nop
xchg
sbb
movsb
push
imul
insb
add
leave
pushf
mov
mov
stos
add
sub
xchg
jne
adc
and
cmp
sub
pusha
repnz
js
in
mov
stos
sub
pop
shll
lea
movb
fsubrl
pop
mov
push
cmp
inc
test
mov
idivl
dec
lea
pop
xacquire
jae
in
sub
into
mov
std
adc
subb
add
jecxz
into
mov
fs
sbbb
std
mov
cmp
sub
xchg
and
push
fwait
mov
and
push
js
leave
mov
sub
push
and
xchg
mov
ret
pop
pop
mov
andb
insl
xor
loope
fnstsw
pop
leave
mov
pop
fs
aad
xchg
testb
dec
sbb
inc
lret
or
xchg
stc
faddl
in
icebp
push
leave
addr16
out
ffree
orl
fisubs
xor
xchg
call
pop
and
mov
clc
je
aad
in
mov
sbb
fnstsw
outsb
stc
lds
data16
cwtl
xor
cmp
fstps
outsl
shl
or
adc
ret
xor
dec
out
adc
xor
dec
or
insl
hlt
movsl
mov
clc
insl
xchg
mov
or
and
inc
pop
fwait
xchg
mov
pushf
test
jl
sbb
jecxz
lcall
sarl
and
push
mov
cmp
rcrl
dec
sbb
mov
je
fucom
ret
push
sub
rcr
in
int3
xor
outsl
adcl
mov
add
jl
pusha
jne
jno
int3
ffree
jo
nop
int3
cwtl
icebp
jl
sti
mov
mov
lahf
data16
mov
sbb
ficomps
lods
aad
xor
jae
cli
xor
adc
cmp
mov
mov
push
rcrl
out
sub
stos
sbb
cmp
mov
cmp
inc
mov
inc
and
mov
adc
xor
add
sub
test
scas
jbe
arpl
mov
dec
fdivp
and
push
adc
pop
clc
jmp
lcall
adc
pop
icebp
ja
rolb
int3
mov
mov
push
shl
jmp
lea
test
jb
jge
fcmovb
ficompl
xchg
inc
push
ret
mov
dec
xor
std
vsubss
fdivr
int3
les
dec
aad
test
add
mov
hlt
and
sub
push
xchg
xchg
adc
cmp
dec
aaa
and
in
push
mov
sbb
cmp
mov
testb
cli
xor
dec
jp
fwait
add
ss
fs
cs
ljmp
js
fidivrs
je
lods
xacquire
dec
jl
lods
jecxz
pop
jle
push
ret
outsb
sub
aaa
pop
add
push
lods
lahf
xchg
jge
jmp
or
inc
fistps
sub
mov
movl
cli
xlat
shl
or
js
xor
xor
sbb
pop
aad
xor
cmp
adc
imul
push
xcrypt-cbc
cmpsl
xchg
mov
lods
xor
popa
jle
mov
add
mov
bound
fists
inc
mov
fwait
dec
stos
and
iret
insb
jo
jmp
push
push
andl
out
insb
dec
jno
add
inc
add
arpl
mov
lret
xor
mov
add
movzbl
insl
sbb
xchg
leave
imul
sub
cmp
mov
push
xchg
aad
leave
and
outsb
xor
out
xor
daa
add
xchg
add
jnp
cmpsl
je
xchg
inc
cltd
mov
dec
aas
sbb
insl
daa
jns
pop
fcomi
pop
insb
and
jo
orl
outsb
sbb
popf
divb
dec
mov
cmc
sbb
jnp
mov
xor
outsl
outsl
ja
mov
stc
and
sbbl
add
iret
cmpsl
adc
rcrb
clc
dec
int
out
cmp
outsl
add
mov
jae
dec
mov
cltd
insb
addb
pop
and
sub
int
push
lret
aaa
sahf
std
popf
ljmp
push
mov
and
stos
jne
pop
es
jp
xorl
push
cmp
xchg
into
outsl
pop
adc
ljmp
adc
mov
add
and
mov
mov
sbb
test
inc
sti
lods
outsb
xchg
push
popa
stc
scas
sti
mov
push
ljmp
into
sbb
push
scas
out
mov
addr16
xor
cmp
mov
cltd
xchg
or
cmp
cmp
pop
or
fiadds
lret
repz
jge
addb
and
lret
mov
shlb
hlt
and
inc
sbb
test
or
lea
inc
add
xchg
bound
push
fildll
xchg
pop
lock
test
movsb
and
dec
dec
mov
out
enter
jge
stos
cmpsl
frstor
push
rorb
lret
adc
push
into
fsubs
and
cmp
fnstsw
cmp
pushf
cmp
xor
pusha
fistpl
fildll
orl
ret
pop
pop
mov
int
pop
add
add
jb
lcall
or
int
sti
xchg
aaa
push
push
cmp
xlat
call
fwait
out
cmp
je
and
insl
cwtl
int
movsl
jecxz
cld
mov
popa
rcr
cli
out
into
cltd
clc
scas
dec
mov
fs
aad
insl
lret
push
jb
pop
pop
mov
jge
push
movsb
xor
enter
fimull
jb
dec
shr
movsl
sti
test
push
outsl
pop
mov
adc
xchg
jno
scas
hlt
xchg
push
cmp
and
shlb
aaa
inc
cmp
mov
or
ret
and
pushf
push
repz
js
in
add
cld
test
cmpsl
sub
pop
dec
comiss
int
sbb
mov
sbb
xchg
or
repz
and
idivl
repnz
call
mov
cmp
fisttps
sbb
xchg
jne
pop
cmp
push
in
aam
jp
mov
insb
sub
mov
mov
xchg
pop
push
dec
push
scas
imul
jno
jbe
push
aad
mov
rcrb
ljmp
pop
imul
dec
pop
sub
jle
jns
scas
adc
mov
dec
repnz
jg
jge
cmp
add
in
jnp
mov
pop
cmp
cmpl
arpl
xor
and
push
orl
jnp
sbb
xor
push
jecxz
insl
into
in
insb
cmp
repnz
jno
dec
mov
sysexit
dec
out
cmp
push
sbb
test
mov
or
test
add
and
mov
xchg
ja
pop
push
or
xor
stos
jo
add
xchg
adc
nop
inc
sbb
add
and
push
mov
les
jle
aad
and
sub
lret
je
inc
jmp
mov
or
dec
outsb
in
lock
mov
inc
xchg
cmc
add
xchg
add
sbb
repnz
aaa
addr16
sbb
cwtl
xor
mov
shlb
aas
in
fprem1
aas
rep
ficomps
movsl
movsb
xor
aam
jnp
shld
sub
push
xchg
movsl
jmp
mov
movsl
out
imul
and
inc
mov
jle
push
mov
imul
or
les
push
dec
sbb
fnstsw
add
in
daa
xor
ja
cmp
sbb
sbb
cs
in
xchg
push
repnz
dec
int3
fistpl
ja
push
xchg
mov
xchg
cld
adc
xchg
out
jo
aad
add
push
xchg
rolb
shlb
pusha
lahf
add
lods
out
sbb
jne
push
test
ret
pop
xchg
test
cmp
mov
into
xor
cld
mov
xor
arpl
std
add
cmp
mov
insb
pop
sbb
or
mov
xor
mov
hlt
mov
aaa
insb
push
jg
adc
gs
jmp
adc
mov
stos
xor
sub
enter
outsb
in
pop
sub
add
dec
inc
xor
xor
mov
dec
jg
sarl
adc
adc
dec
sbb
lret
shlb
sbb
add
mov
mov
pop
enter
pop
dec
arpl
adc
popf
add
or
sbb
inc
or
xchg
movsl
es
push
mov
jb
pop
jb
sub
enter
xchg
loopne
add
or
repz
jae
add
fsts
inc
xor
mov
mov
ret
jecxz
pop
pop
push
and
sub
inc
fs
xor
jo
mov
inc
pop
add
push
jp
push
ficompl
mov
mov
xor
dec
repnz
adc
jle
mov
in
into
add
sbb
std
outsb
adc
fdivl
push
xchg
ss
cli
les
inc
xchg
daa
lods
inc
push
sbb
inc
sub
adc
loop
shrb
loop
hlt
es
jbe
int
pop
mov
dec
jnp
mov
out
pop
out
pushf
mov
or
adc
jne
js
icebp
and
pop
shrl
sub
or
adc
mov
cwtl
inc
xor
subl
add
ds
loop
cmpsl
call
lret
jne
andl
inc
cmc
lock
jb
fwait
test
adc
mov
push
jae
sahf
ds
pop
jbe
js
cmp
in
mov
je
jl
cwtl
adc
push
in
mov
cli
xor
cmpsl
notb
pusha
stos
bnd
mov
push
sahf
filds
inc
jb
fisubs
fimull
js
dec
mov
inc
jae
mov
adc
dec
dec
cmp
int
rol
lcall
outsb
jne
mov
and
inc
pop
rcrl
ja
and
imul
xlat
subl
push
imul
xchg
fstl
adc
ret
sub
scas
bnd
shll
aas
movl
jbe
and
lods
and
xor
cmp
inc
dec
and
cs
movsb
cmc
xchg
or
iret
movsl
add
fldenv
mov
mov
mov
insl
push
dec
fdivrs
mov
xchg
jg
pop
sbb
mov
pop
push
dec
mov
or
roll
sub
mov
mov
repz
data16
xor
mov
repnz
inc
cmp
or
push
cmpsl
call
insl
scas
subl
adc
ret
mov
dec
imul
mov
dec
xlat
lods
sbb
test
xchg
aad
inc
in
xor
xchg
cmc
test
pop
call
int
inc
push
out
das
xchg
cli
adc
xor
adc
fnstcw
xchg
pop
or
ficomps
cmp
push
in
dec
xchg
push
cmp
orb
mov
iret
clc
push
pop
dec
ljmp
ret
das
dec
imul
fwait
and
aaa
fistps
mov
mov
and
dec
insb
pop
xchg
mov
fdivrs
out
add
out
data16
sub
mov
aaa
mov
popa
mov
sahf
jp
test
dec
push
jl
mov
pop
stos
xor
dec
sub
mov
daa
call
fsubrl
enter
inc
je
outsb
mov
sub
je
jbe
call
in
lahf
and
add
dec
testl
sub
lods
outsl
xrelease
inc
xchg
bound
pop
lods
jge
out
fidivrs
lock
mov
nop
in
test
mov
adc
adc
fimuls
xchg
xchg
test
xor
push
jmp
mov
adc
xorl
rorb
in
mov
mov
out
ja
jmp
mov
xor
int3
jb
xor
xor
sub
cmp
test
pop
sub
adc
jle
xchg
sarl
jns
ja
mov
mov
or
mov
fdivl
adc
mov
lahf
jb
add
dec
push
jg
lret
sub
lret
stos
lret
mov
orb
sub
es
outsl
mov
stc
adc
inc
fstpt
stos
call
mov
lock
daa
adc
ds
jns
pop
cltd
mov
jle
cli
lcall
test
mov
pop
repnz
dec
pop
cmpsb
jo
sub
push
cli
sbb
add
mov
fildll
adc
jmp
jmp
lahf
and
mov
sbb
pusha
aas
push
mov
push
mov
push
arpl
out
loopne
sub
xor
mov
and
jns
dec
xchg
push
popa
mov
jle
pop
cltd
and
xor
mov
iret
sbb
add
scas
daa
fmul
pop
cmpsb
sub
sbb
cmpsl
sub
add
or
mov
mov
xor
insb
mov
xchg
popa
adc
pop
mov
sti
movl
int
adc
jne
cmp
jb
add
ret
or
pop
cld
dec
dec
sub
mov
xchg
or
or
adc
int3
shlb
aas
mov
insl
fwait
pop
adc
cmp
xchg
std
cli
mov
lahf
dec
pop
sub
xchg
adc
push
push
imul
lock
mov
inc
mov
repz
aad
loop
xlat
out
inc
push
out
mov
fs
jmp
push
jg
in
push
adc
xor
out
cmp
or
cltd
sub
lcall
les
jo
jmp
and
pusha
pop
sub
insl
dec
mov
addl
cs
mov
cmp
sbb
pop
inc
inc
mov
lods
sbb
jne
js
adc
xor
mov
mov
aad
les
lods
lock
cwtl
push
idivl
pop
fsts
and
or
sub
fisttpll
fbld
xchg
xlat
movsl
rorb
dec
xor
orb
gs
mov
xchg
sub
mov
dec
push
lret
scas
inc
or
gs
sub
cmp
xchg
push
mov
dec
cmp
push
scas
in
cmc
pop
ja
mov
xchg
loopne
push
mov
and
and
push
cli
sub
mov
lret
mov
dec
lret
ret
mov
ja
pop
in
mov
jae
mov
push
jb
mov
mov
mov
rol
in
ret
call
pop
sbb
lret
call
mov
int
cmp
pop
push
sbb
jmp
stos
aam
shrb
xchg
sub
out
int
and
inc
cmc
xor
lock
out
jg
imul
push
iret
data16
dec
jns
mov
and
mov
es
mov
adc
xlat
ja
xor
loopne
jle
outsl
loope
bound
sub
insl
call
mov
and
push
sbb
sub
pop
mov
mov
pop
in
mov
rolb
or
push
xor
adc
jmp
xor
and
add
aam
and
jmp
sqrtps
in
pop
mov
fstps
out
fstpt
or
not
xor
cmpsb
sub
mov
shll
sub
cmp
sub
cmpsl
nop
ljmp
cmp
subb
shlb
and
mov
and
xchg
enter
out
inc
xchg
aas
imul
jg
cmp
clc
iret
add
cmp
inc
arpl
ljmp
popf
push
lods
jg
mov
xchg
or
out
inc
or
pop
pop
stos
arpl
add
pop
shll
cwtl
cltd
lret
dec
xor
push
cmp
add
mov
adc
jle
jle
pop
cmp
push
adc
cli
sbb
and
cmp
jecxz
cmp
les
das
dec
adc
push
mov
cmp
xchg
and
mov
rclb
mov
mov
jp
test
push
dec
mov
xor
dec
in
lock
xor
dec
std
jecxz
out
lods
mov
cli
mov
mov
xchg
mov
jbe
sarb
mov
lahf
pop
mov
ja
ret
pop
pop
dec
inc
outsb
push
or
dec
lahf
mov
sbb
inc
push
mov
loope
xchg
cmpsb
dec
ds
or
or
dec
lret
push
cmp
mov
mov
inc
aas
inc
mov
jns
jbe
mov
xor
arpl
dec
test
dec
adc
dec
arpl
and
lahf
repz
sub
maxps
pusha
gs
mov
inc
and
rolb
jmp
push
ret
shrl
jecxz
jp
lea
pop
dec
lock
fcompl
cmp
xchg
xor
stos
lods
sbb
notl
mov
out
push
push
sub
mov
popa
test
loopne
dec
addr16
loop
adcb
inc
jp
mov
push
movsb
into
inc
xchg
xchg
scas
fidivl
inc
jl
sub
mov
pop
push
fbstp
jbe
std
popa
lods
out
iret
or
gs
jmp
fistpll
mov
fxch
icebp
xor
testb
mov
aam
aaa
and
xchg
je
and
neg
mov
push
std
xor
rorl
push
ret
out
xor
mov
xchg
scas
push
pusha
lcall
inc
aam
jle
scas
mov
cmp
orb
mov
and
jae
repz
pop
mov
in
jp
sub
data16
jae
ret
mov
mov
arpl
repnz
mov
cwtl
icebp
or
ret
test
inc
out
pop
adc
push
jo
out
pushf
jge
push
adc
scas
lea
cli
daa
je
xchg
aad
popf
sahf
lock
sbb
dec
in
ret
dec
ljmp
sbb
leave
stos
popf
sbb
es
add
push
popa
ds
imul
loopne
jns
cmp
xchg
dec
cmp
push
outsl
pop
xor
lahf
sbb
cmp
sbb
mov
jle
mov
notb
repnz
movb
outsb
out
enter
shlb
inc
cmp
fwait
inc
xchg
js
push
rolb
in
lods
dec
sbb
mov
enter
subb
jge
les
mov
shrl
fnstcw
sbb
or
jno
cmp
call
cmp
std
xor
mov
sub
mov
sub
ja
in
pop
inc
pop
jmp
ljmp
data16
std
aaa
xchg
aad
mov
mov
push
call
xor
sub
sbb
add
pop
xor
call
cltd
icebp
pop
add
in
add
pop
outsb
imul
ss
inc
dec
sbb
sub
pop
cltd
fildl
adc
or
mov
jmp
icebp
push
roll
xchg
xchg
mov
leave
jno
cld
mov
mov
lods
push
mov
or
call
loopne
push
pop
jmp
lret
aam
pop
jbe
sub
fwait
jb
flds
mov
lahf
outsl
and
or
pusha
ja
inc
or
out
push
xchg
xlat
aam
loopne
sub
cmpsl
cmp
push
mov
or
lods
fisttpl
xor
and
mov
lods
ljmp
dec
jmp
cs
pop
lret
mov
repnz
xchg
popf
lea
rcl
inc
push
jge
les
shrb
pop
loope
mov
jb
mov
aam
loope
inc
push
les
insl
push
mul
adc
leave
push
fimuls
int
sarl
sbb
add
lcall
inc
dec
cmpsb
aas
dec
pop
add
dec
rol
and
scas
pusha
mov
rclb
push
aad
push
xor
dec
and
rcl
pop
xlat
pop
jg
xchg
mov
outsb
adc
push
mov
in
pop
ret
cwtl
clc
or
sbb
sub
pop
rolb
mov
mov
or
ret
scas
sti
jne
loopne
xlat
jp
adc
xchg
outsl
sarl
sub
pop
testl
ret
sbb
daa
je
lds
mov
inc
mov
outsb
lahf
out
or
daa
leave
add
insl
outsl
ret
sub
hlt
xlat
mov
cmc
mov
and
mov
adc
sbb
pop
aas
popf
repz
js
les
fs
dec
pop
test
dec
xchg
pushf
or
bound
loopne
sbb
aaa
cmp
jle
fisttps
xchg
jno
flds
stc
jg
mov
outsb
push
addr16
ffree
aam
add
push
xchg
xor
jbe
push
cld
aas
sbb
ret
add
daa
dec
xchg
adc
aad
fimuls
sbb
pusha
cmc
inc
mov
cwtl
into
mov
jle
jecxz
and
popf
clc
mov
mov
and
sar
inc
out
xchg
inc
stos
in
nop
push
fisttpll
js
scas
bound
jl
or
jns
mov
jne
sub
shrb
lods
pop
sbb
gs
cld
sbb
lret
pop
and
or
pop
dec
pushf
jne
dec
add
pop
add
push
or
inc
or
ja
outsb
outsb
dec
movsb
mov
stc
jo
mov
je
sti
lahf
sarb
pop
addr16
pop
mov
stos
ret
inc
inc
inc
rcrb
push
idivb
ret
cld
and
cmp
xor
ret
fcmovu
push
popa
inc
aad
pop
inc
push
fiadds
popa
mov
pop
adc
mov
jg
sbb
ljmp
xor
xchg
loopne
push
pop
outsl
idivl
fcoml
adc
dec
xchg
ja
sub
out
xchg
outsb
ljmp
daa
xorl
inc
mov
inc
subl
nop
sti
pop
lods
icebp
das
mov
aad
ljmp
xor
incl
mov
dec
inc
adc
xchg
and
push
push
sub
and
js
in
adc
push
push
sbb
insb
imul
in
mov
jno
add
push
pop
sbb
int
jno
pop
and
cmp
negb
dec
cmpl
lods
fisubrl
mov
arpl
cmp
pusha
loop
or
sahf
dec
inc
lea
xchg
das
sbb
outsb
mov
dec
sub
in
sahf
enter
aas
aas
pop
nop
mov
ds
mov
ficompl
and
lock
and
sbb
or
ret
push
push
jns
ja
out
mov
pop
lret
addr16
ret
jno
add
mov
and
loop
jo
mov
lcall
cs
xor
cmp
jne
int3
iret
vpaddusb
pushf
leave
insl
fincstp
or
ds
mov
negl
mov
inc
lods
pop
sub
lahf
sbb
push
cmpsl
sub
daa
imul
cmp
in
mov
roll
outsl
mov
pop
sbb
jp
aas
push
andl
pop
rol
jg
push
xchg
cwtl
frstor
dec
xchg
jb
adc
cmpsb
aaa
lret
mov
test
mov
xor
je
arpl
es
inc
in
sbbb
adc
stos
adc
jecxz
mov
ror
inc
xor
sbb
dec
cmpl
jo
xchg
stos
add
and
js
or
xor
loopne
mov
push
out
in
cmp
inc
ljmp
hlt
in
ret
xor
dec
xchg
data16
xchg
repnz
int3
jmp
cwtl
dec
fimull
aad
push
pop
cmpsb
sbb
fsubrs
push
cmpsl
cmpsl
mov
ficompl
mov
rorb
sbb
mov
into
stc
imul
add
les
adc
push
nop
or
mov
out
or
mov
jno
cmp
mov
fwait
add
or
jns
movsl
cltd
push
jbe
push
mov
cmp
cmp
test
cld
mov
and
jo
enter
inc
repz
lds
jg
fisttpll
fstpl
lcall
lds
jp
xchg
mov
push
add
push
shl
sub
into
cmc
cmp
int3
stos
jnp
loope
push
add
adc
pop
mov
das
or
ficoms
std
xchg
ljmp
in
sbb
push
jne
dec
test
or
in
mov
das
jns
push
cwtl
xchg
adc
dec
enter
shl
dec
xchg
shl
inc
test
cmp
inc
cmpsl
mov
add
pusha
jno
push
sarb
or
pop
out
add
add
and
lea
jne
ret
notb
and
cld
xchg
dec
xchg
leave
xchg
enter
daa
dec
mov
mov
jp
jbe
fldt
fidivs
mov
dec
pushf
mov
push
push
arpl
cmp
inc
popa
or
push
sti
mov
imul
pop
mov
and
aad
pop
and
out
call
movsb
pushf
ret
incb
ljmp
jae
dec
mov
cli
mov
std
or
cmp
mov
or
cmp
add
or
inc
inc
gs
pop
popl
lods
mov
cltd
cmp
pop
insl
sub
inc
jmp
sarl
or
jmp
mov
mov
mov
add
js
out
or
outsl
arpl
pop
repnz
adc
sbb
in
and
aam
les
mov
pushf
xchg
xlat
pop
bound
adc
dec
sub
push
cmp
sub
xor
and
js
adc
dec
in
jge
dec
mov
aas
jl
outsb
jg
lcall
add
mov
sub
sub
push
fmuls
xor
hlt
jge
pusha
ljmp
imul
stos
adc
dec
adc
fiadds
ret
xor
xchg
cmp
push
hlt
adc
xlat
and
dec
or
js
flds
dec
cld
dec
pop
lea
add
or
movsl
stos
adc
inc
and
mov
sahf
mov
jnp
bound
jbe
in
mov
vandnps
pusha
inc
and
sub
test
cmp
mov
movsl
push
pop
imul
daa
js
test
sub
lods
testl
stos
stc
push
mov
mov
enter
dec
mull
push
inc
je
mov
mov
xor
jg
fiadds
sub
and
push
mov
pop
cmp
cmp
pusha
inc
mov
inc
or
in
push
add
mov
popa
mov
or
pop
popl
cmp
mov
loope
sub
in
jecxz
push
xchg
mov
sbb
jge
push
push
jl
inc
sti
fs
jbe
cli
enter
cmp
movsl
cmp
jmp
sarb
push
lea
push
ss
ss
sar
mov
sbb
mov
pop
sbb
inc
fcmovnb
fs
mov
xlat
js
jnp
call
jne
iret
pop
std
sahf
rcrb
pop
in
sbb
sub
std
mov
mov
add
mov
adc
and
mov
cmpsb
ljmp
push
test
fstps
addl
add
and
push
mov
iret
and
jne
mov
insb
push
jae
dec
xchg
fisttps
or
cmp
repz
mov
pop
push
cmp
mov
xor
loopne
adc
cmpsl
inc
icebp
sbb
add
mov
js
leave
or
int3
aad
pusha
cmp
call
mov
mov
out
sti
stos
pushf
adc
inc
mov
or
adc
lret
push
lds
push
icebp
push
lods
jnp
dec
popa
fcomps
scas
pop
out
or
add
jb
push
mov
fldenv
frstor
test
push
fsts
shl
pop
int3
int
mov
inc
xchg
testb
xor
mov
stc
in
loope
and
dec
pop
pop
sub
jne
cwtl
adc
xchg
fldcw
cmc
add
inc
ds
ret
out
cmpl
in
adc
outsl
je
inc
lds
pop
andl
movsl
fwait
push
cmp
push
xor
jecxz
rclb
std
addr16
and
or
add
fwait
cld
leave
outsb
lret
fs
xchg
mov
sub
add
movb
xor
movsl
jp
cmpsb
add
movsb
jne
add
loope
push
rcrb
les
jge
mov
mov
pop
ror
jno
or
out
push
xor
pop
lcall
sbbl
cmp
push
loope
xchg
test
fisttpl
sub
int3
jo
jp
xor
pop
xchg
std
loopne
cltd
xchg
push
jo
dec
fwait
enter
mov
subl
add
push
js
fistl
or
sub
dec
adc
rol
adc
incl
xchg
and
mov
xchg
test
mov
shlb
cmp
lds
mov
mull
bound
push
cmp
mov
ret
adc
enter
leave
jo
cmp
jno
jae
inc
jge
pusha
add
mov
out
adc
pop
xchg
xchg
test
jp
mov
jno
xchg
ficoms
in
hlt
dec
scas
cld
xchg
mov
dec
xchg
mov
jecxz
cmp
int
fstps
push
adc
sbb
mov
xlat
xchg
push
inc
fnsetpm(287
pop
mov
stc
mov
jbe
push
xchg
sti
std
xchg
in
sbbl
sti
xchg
cmp
adc
insb
xchg
cli
add
pop
mov
std
movsb
sub
test
loope
not
push
call
mov
lret
sti
aam
jo
pop
cmp
cwtl
std
stos
divl
sbbl
xor
test
lcall
jge
pop
in
rcrb
sub
ret
lret
scas
xlat
xchg
pop
jmp
fsub
mov
xchg
mov
pusha
in
mov
sahf
lea
fbld
mov
mov
addr16
mov
arpl
mov
js
sbb
lret
js
cmp
jo
push
inc
jmp
loope
sahf
dec
cmp
mov
popa
int3
xlat
pop
mov
push
jo
in
mov
pop
add
lods
test
jnp
sub
mov
pop
add
das
daa
jne
adc
push
fiaddl
dec
testb
mov
fdivrp
insl
pop
lods
gs
dec
sub
cmp
jae
ret
scas
pop
pop
adc
adcb
iret
or
repz
stc
push
mov
cmp
sahf
movl
ss
jge
sub
out
out
jbe
push
pop
xor
sub
jne
rcll
mov
aas
cltd
xor
aam
add
pop
sarb
cmc
das
jge
cmp
ret
addr16
insl
fidivs
fucomp
sbb
sbbl
lea
jp
addr16
dec
divl
scas
xor
fidivrs
imul
pop
test
or
fucompp
push
shl
dec
mov
adc
lret
cmp
orl
or
xlat
add
jle
mov
inc
xchg
sbb
cwtl
inc
divb
shlb
push
stos
scas
arpl
leave
aad
sub
push
in
cmp
inc
xchg
imul
jmp
cmp
jmp
stos
stos
jg
add
in
scas
sbb
mov
aaa
mov
or
mov
in
jo
aas
lcall
out
xlat
and
inc
cmpsl
xchg
repnz
jmp
lret
pushl
into
shlb
ror
clc
shrl
push
inc
pop
jge
loopne
sbb
cli
jmp
hlt
inc
lock
cwtl
sbb
sbb
andb
mov
jae
into
xchg
inc
xchg
popa
fidivl
push
cmpsl
lods
sbb
inc
and
pop
cmc
cltd
cli
popf
or
fildll
or
dec
adc
movsl
stos
mov
cmpsb
push
mov
inc
ljmp
jns
sti
stc
ds
sarl
and
iret
jle
inc
sbb
jmp
adc
sbb
push
rcrl
filds
push
sbb
arpl
fld1
lret
not
mov
dec
and
mov
movhps
mov
mov
add
jmp
cmp
roll
dec
push
lahf
dec
aam
mov
inc
push
sbb
repnz
ss
call
sub
pop
sub
shrl
mov
inc
dec
mov
sub
outsl
push
push
jne
push
jae
shlb
repnz
insl
sub
cmc
push
cmc
pop
insl
xchg
test
xchg
jno
pop
mov
sbb
test
adc
jne
xchg
push
movsb
mov
rcrb
push
daa
or
es
mov
sbb
xchg
jns
lds
sub
fsts
adc
gs
push
je
shll
xor
mov
or
xchg
add
stc
imulb
inc
popa
loopne
cli
aam
push
xor
jmp
push
cmpsl
stc
cmp
mov
push
mov
push
cltd
inc
aad
cmp
out
and
aad
test
cmc
cmp
fcompl
lods
in
sbb
dec
outsl
pop
jp
js
mov
add
gs
in
loop
cld
int3
pop
push
loope
das
sub
push
fsts
xchg
jne
mov
es
xchg
mov
pop
test
movsb
outsl
xor
xor
sbb
push
rclb
loopne
sahf
pushf
enter
pop
sti
push
pop
sub
xchg
insb
and
fcompl
test
push
je
jl
out
ret
jns
cmpsb
dec
sub
mov
popa
aam
lahf
jne
aaa
cmp
sub
out
out
ret
or
lret
mov
pop
mov
ficoml
addb
sub
jns
mov
leave
jp
out
pop
xchg
xchg
cli
pop
fwait
sub
or
not
popf
jo
jge
imulb
and
into
push
dec
shld
dec
aaa
mov
push
adc
out
test
sub
ja
fstl
jmp
xor
scas
insb
popf
or
pop
fdivr
inc
adc
leave
hlt
out
jp
xorb
aas
inc
mov
scas
pop
sahf
mov
xchg
mov
and
dec
fstpt
cmp
jle
mov
mov
cmp
add
leave
jg
dec
or
aad
ret
shr
in
leave
push
ja
pusha
gs
jl
push
scas
cmc
sub
mov
dec
pop
jbe
cmpsb
lret
insb
test
lret
lret
inc
insb
xchg
fldl
je
inc
lds
xchg
mov
daa
cmp
mov
and
sbbl
dec
fnstenv
dec
lea
fadds
pop
jmp
ret
add
sbbl
fwait
scas
dec
adc
xor
gs
and
js
pop
add
push
cmpsb
andb
mov
push
xor
sub
mov
push
push
shll
sub
mov
shll
jg
mov
pop
test
xor
dec
inc
add
les
mov
xchg
xchg
lea
fwait
push
mov
test
pop
imul
ds
push
add
lcall
push
jecxz
pusha
dec
iret
mov
inc
mov
push
inc
xlat
adc
pop
stos
jo
mov
xorb
mov
sbb
dec
sbb
and
mov
mov
jg
out
push
test
lret
xchg
std
inc
and
movsb
dec
xor
imul
test
outsl
je
xor
pop
stc
inc
mov
jno
clc
flds
xchg
push
mov
xlat
pusha
movsb
lret
scas
faddl
jg
sbb
ja
repz
inc
xchg
mov
ret
in
dec
jnp
aam
test
out
out
cmp
addr16
inc
push
mov
arpl
movsb
inc
mov
cmpsb
outsb
mov
in
mov
shlb
xor
xchg
jp
mov
fisubrs
mov
jecxz
popa
out
pop
sti
push
sarb
xchg
xchg
sbb
call
lret
adc
pop
jg
sub
outsl
jno
dec
into
mov
icebp
sub
cmp
dec
dec
cmp
arpl
loope
or
ret
fcompl
cmp
jae
sub
xor
stos
cwtl
rcrl
ret
aad
leave
dec
add
cli
in
add
add
add
clc
dec
pop
push
daa
aam
lahf
ja
test
in
sbb
pop
adc
imul
mov
xchg
pop
dec
xlat
jb
jo
or
hlt
add
sbb
push
mov
jo
out
pop
adc
or
push
xchg
or
or
xor
decl
jl
pop
mov
inc
stc
or
outsb
inc
insb
ret
divl
jge
popa
jp
stos
and
ljmp
div
stos
repnz
shrb
pop
js
cmp
jb
sbb
fdivl
adc
xor
mov
ror
push
inc
jmp
jmp
aad
pop
movsl
popa
adc
or
adc
fs
xchg
xchg
cwtl
ret
ds
jecxz
ret
jp
jns
lods
cwtl
dec
stc
push
dec
adcb
ss
xor
add
add
pop
daa
or
or
data16
add
inc
sub
add
sti
aad
jl
jbe
je
movl
adc
mov
out
out
dec
clc
pushf
sub
fmuls
pusha
outsb
lret
in
out
xlat
adc
lock
adc
mov
mov
adc
dec
int
sahf
adc
lahf
pop
lret
je
pop
mov
sbb
cli
xlat
loope
sti
addr16
repz
xor
jb
repnz
hlt
pop
inc
xchg
jge
nop
jecxz
pusha
imull
mov
adc
jmp
test
ja
inc
sarl
jle
lods
in
inc
jnp
jo
jbe
mov
xchg
inc
mov
je
ja
ret
dec
sahf
cmp
fmul
popf
cmp
cmp
mov
movsb
popa
sub
pusha
testb
jnp
mov
nop
imul
lea
push
mov
xchg
xchg
shll
ds
mov
inc
sbb
pop
xchg
stc
xor
inc
leave
outsl
mov
or
sbb
xchg
mov
movsb
dec
cmp
push
pop
dec
loop
push
lret
movsb
popa
mov
in
and
dec
add
insb
popf
or
xchg
sub
lea
repnz
mov
mov
cmp
push
shll
jp
adc
sub
icebp
pop
pop
ja
cmovae
sub
loope
and
adc
mov
push
push
rorl
into
in
jmp
fisttpll
outsb
sbb
sub
insl
aad
sahf
xchg
clc
jbe
mov
fdivp
shr
mov
es
add
cmp
loope
testl
scas
mov
ljmp
aaa
in
fwait
add
cmp
in
shrl
xchg
sbb
mov
adc
inc
ret
add
vmovaps
mov
and
adc
orb
lret
jmp
in
mov
repnz
stc
push
sbb
xchg
inc
sub
pop
sub
add
dec
xchg
pop
pop
outsb
pop
cs
mov
add
cmp
jns
data16
cmp
dec
loope,pt
bound
xchg
jb
sub
dec
pop
sub
outsl
fwait
insb
mov
gs
cwtl
js
push
je
out
xor
pop
mov
scas
cmpsb
sbb
jmp
fadds
push
mov
testb
cmpsl
and
sbb
sti
cmp
adc
pushf
jnp
mov
jle
mov
and
movd
aad
lock
cltd
out
lods
or
fldt
add
jnp
adc
clc
lock
hlt
add
cli
lds
lds
inc
gs
test
sbb
out
inc
sbb
fwait
inc
setns
ret
xchg
dec
das
pop
dec
pusha
cmp
popa
imulb
loopne
idivl
mov
ret
hlt
fdivs
out
adc
sbb
cmp
es
xchg
inc
out
std
icebp
jge
add
aaa
push
das
sti
ret
imul
dec
add
or
pop
insl
cwtl
imul
fsubl
out
pop
test
mov
out
adc
daa
sahf
test
inc
dec
loope
and
xchg
cmpsl
andl
dec
push
js
push
mov
arpl
xor
cltd
in
sbb
dec
mov
test
push
pusha
sbb
push
xchg
lcall
xor
ss
add
sub
scas
shrl
xor
push
cmp
xor
pusha
adc
fmul
xor
or
jno
movsb
inc
imul
inc
ja
inc
ret
inc
out
insb
ret
sub
std
clc
sbb
inc
cltd
xor
call
adc
and
xor
in
sti
pop
sbb
je
xor
fildl
fsubrs
mov
pop
sarl
iret
mov
scas
sub
scas
popa
sahf
cmp
cmpl
cmp
pop
add
jnp
pushl
xor
mov
inc
adc
sbb
cpuid
sbb
push
js
pop
xchg
jno
cmpb
imul
into
testb
adc
pushf
inc
imul
hlt
mov
and
js
pop
in
mov
dec
mov
mov
xlat
mulb
push
add
in
mov
push
dec
insl
jne
sub
dec
lahf
ljmp
mov
cwtl
jnp
xlat
cmc
add
cmp
pop
shlb
push
rolb
jecxz
push
nop
arpl
hlt
jmp
jnp
fwait
sbb
cltd
pop
or
jl
in
mov
mov
cmp
push
lds
xchg
xor
icebp
cs
or
pusha
push
addr16
out
dec
mov
and
gs
dec
stos
xchg
imul
inc
sbbb
ret
gs
pop
mov
push
pop
pop
idivl
lods
sub
imul
loop
ja
xlat
icebp
dec
cmp
add
mov
or
loope
adc
jg
jp
test
popf
adc
iret
mov
ret
push
cmc
lret
mov
lahf
out
sbb
leave
xor
fidivrs
push
test
addr16
xor
xchg
cmpb
test
cmp
call
ss
mov
mov
jl
ljmp
into
out
mov
dec
jp
mov
daa
inc
dec
dec
pop
icebp
mov
mov
or
add
xchg
decb
cmp
inc
dec
out
imul
mov
fsts
adc
xchg
mov
stc
int3
ljmp
adc
mov
jns
mov
ljmp
scas
imull
popa
cli
sbb
mov
jge
sbb
xchg
icebp
sub
mov
or
clc
ja
out
cmp
pop
xchg
add
mov
nop
dec
lds
sbb
adc
loope
les
xchg
cmc
leave
addr16
mov
cmp
inc
mov
gs
sbb
xor
and
test
or
cmp
xchg
pushf
hlt
pop
jg
mov
negl
sar
adc
inc
out
mov
out
inc
ret
or
ja
cli
add
add
pop
stos
roll
repnz
add
push
jnp
mov
mov
mov
xor
pusha
adc
xor
mov
cli
in
push
pushf
iret
pop
add
ja
xchg
lret
jle
mov
sub
push
movsbl
scas
mov
xchg
rcr
cmpsl
cmc
aad
fwait
mov
mov
xchg
xchg
mov
mov
cmpsb
inc
ss
mov
push
aaa
ret
add
or
sbb
nop
hlt
fucomip
or
xor
scas
cmp
into
lcall
mov
sbb
push
negl
loopne
lock
jns
mov
or
dec
mov
xchg
jge
in
inc
xchg
or
push
std
xor
outsl
daa
loop
adc
shll
ds
mov
jecxz
repz
out
mov
lods
outsl
sti
dec
je
push
andb
loop
xchg
dec
stc
lock
xchg
cmp
fwait
cmpsl
or
fs
mov
xchg
cmp
movsb
xorb
cmp
ljmp
dec
mov
jg
nop
outsl
sbb
adc
ret
popa
dec
jb
sub
test
lcall
dec
rorl
cmp
mov
pushf
cmp
mov
icebp
mov
test
aad
add
dec
push
sub
outsb
ljmp
jl
rcrl
ja
into
adc
arpl
adc
pushf
shl
aas
xchg
fstl
in
adc
lds
hlt
dec
xchg
xor
or
push
fnstsw
adc
xlat
xorb
sahf
dec
push
mov
andl
in
adc
fcoml
pop
dec
dec
and
add
xor
in
lcall
ret
mov
mov
mov
test
notb
dec
lret
aam
insb
inc
test
repz
pop
idivb
xor
cld
jbe
sbb
fnstcw
or
sarb
inc
cs
add
add
mov
jge
push
push
movsb
daa
and
sbb
push
mov
aam
pusha
out
mov
and
mov
outsb
jmp
test
sub
rcrl
inc
icebp
push
outsb
icebp
popw
icebp
xchg
or
nop
mov
in
gs
mov
or
insl
movsb
cltd
iret
push
lret
jge
add
mov
mov
adc
je
popf
dec
or
push
mov
dec
add
and
mov
xor
inc
cs
pop
fcmovnb
test
xchg
jp
xor
std
in
jb
loopne
and
inc
pop
add
push
rorb
rcl
or
leave
cmc
sbb
ret
cmp
add
addb
fldl
push
cmp
stos
cmp
mov
inc
dec
stos
fistpll
dec
ror
cmpsl
das
mov
movlps
sbb
repz
add
stos
flds
dec
mov
scas
or
xlat
mov
lods
or
mov
imul
xor
jno
pop
int
or
and
loop
push
adc
sbb
aam
or
cmp
cmpsb
jmp
add
addb
stos
je
lods
sbb
js
jo
imul
aas
scas
mov
add
mov
mov
mov
dec
pusha
adc
scas
jg
cli
ret
dec
jp
scas
jnp
lods
cmc
sub
ficompl
arpl
int3
jnp
pop
aad
es
call
call
xchg
mov
pop
ret
repnz
in
or
mov
pusha
bound
shl
rolb
and
testb
inc
or
fwait
insl
adc
or
addb
aaa
test
cwtl
lock
jge
adc
adcl
mov
mov
popa
lcall
push
insb
mov
sbb
sti
shlb
ljmp
or
push
xchg
xor
pop
mov
subb
dec
pop
lea
into
shl
mov
cmp
jge
push
dec
xchg
lret
sbb
sub
outsl
add
mov
sahf
pop
and
push
add
inc
lcall
fnstenv
mov
pusha
int3
lds
ja
push
dec
xor
imul
cmp
movsb
out
insl
add
mov
jl
mov
jns
lret
int
loope
or
mov
push
add
dec
dec
leave
xchg
push
push
fmull
insb
xchg
xchg
adcl
adc
add
scas
jns
ds
loope
je
ljmp
jle
shlb
aas
mul
shlb
test
jnp
jb
cmp
dec
jne
or
in
mov
dec
fdivl
insb
repz
sub
push
cltd
or
rcl
inc
dec
pushf
ljmp
and
push
lea
cli
sti
popf
cmc
negb
or
orl
std
adc
xor
xor
adc
adcb
stc
out
xor
pop
mov
stos
test
push
dec
lea
loope
pop
sahf
push
mov
add
mov
rcl
sub
aas
movsl
iret
test
int3
mov
inc
cli
sarl
fldt
inc
lea
and
sbb
fmul
cmc
jl
mov
ljmp
cmp
ja
cmp
mov
pop
pop
jns
pop
and
test
loop
mov
mov
loopne
leave
add
cwtl
pop
cmpsl
loop
and
int3
mov
sub
out
mov
out
inc
add
and
sub
fisttpll
mov
xchg
sbb
or
adc
xor
pop
fsubl
adc
mov
mov
stc
sahf
dec
lods
notl
push
or
shl
adc
inc
sub
hlt
test
andl
out
push
pop
stos
adc
dec
pusha
in
test
push
jno
dec
push
push
pop
adc
adc
xor
hlt
and
inc
push
jge
xchg
dec
dec
xor
lcall
movsb
insb
xor
aaa
movsb
shr
rdmsr
mov
jne
pop
add
aad
mov
out
xor
xor
vphsubbw
popl
push
pop
icebp
mov
sbb
mov
sbb
xchg
movl
aas
lods
sbb
fucomi
mov
and
iret
mov
ja
loope
ja
jns
outsb
inc
shll
and
dec
lret
clc
jnp
in
dec
mov
addr16
cmpsl
lea
pop
and
cld
mov
iret
and
hlt
test
test
pop
popa
clc
dec
bound
rcr
cli
rorl
and
sbb
inc
and
and
and
jle
pop
insl
mov
pop
lds
aas
mov
cmc
xchg
add
ret
and
adcl
stc
xor
fldenv
dec
aas
push
es
mov
pusha
and
stc
inc
inc
jnp
or
cmp
mov
les
enter
push
lock
push
sar
imul
sbb
jg
popa
lods
ds
jp
cs
insl
cli
ret
leave
xlat
es
jle
push
mov
sub
mov
lods
sbb
mov
leave
rorb
test
call
shlb
dec
jmp
test
jle
aas
dec
mov
jl
insb
mov
inc
dec
mov
mov
mov
nopl
sub
int
ja
or
fnstenv
sub
pop
push
hlt
cmpsl
pop
neg
mov
or
arpl
dec
push
loope
sub
push
jns
lahf
sub
sti
xchg
out
popa
mov
loopne
cs
inc
adc
add
fimull
cmp
mov
mov
and
push
loope
ja
fiaddl
std
jo
fdivs
push
sub
fimuls
push
fcoms
mov
repnz
pop
sub
mov
xchg
stos
mov
mov
mov
lret
xor
cmpsb
mov
cmp
outsb
push
xor
cmp
xchg
daa
ja
jae
bound
pop
outsl
cltd
outsl
mov
fstpt
in
sbb
inc
rcl
mov
fiaddl
pop
xor
xchg
bound
filds
nop
stc
test
cmp
fistpl
subl
fsubr
jg
mov
mov
xchg
or
mov
cltd
jbe
mov
mov
in
mov
movsl
ja
rcr
cld
das
leave
or
mov
mov
push
movd
pop
mov
das
xorl
push
gs
xor
outsl
ret
mov
sub
sub
call
sub
test
call
pop
jae
sub
ret
add
shlb
icebp
sub
roll
mov
leave
mov
out
xchg
mov
dec
push
jne
icebp
adc
push
sub
push
mov
popf
mov
out
lret
cmp
pushf
pop
lods
and
into
popf
and
addl
filds
cld
push
ljmp
inc
daa
fcmove
xchg
push
ds
or
in
lods
or
icebp
mov
sub
xor
mov
mov
xchg
xchg
dec
out
scas
jno
clc
ds
std
leave
out
sbb
cmp
mov
xor
xor
pop
cmp
add
jne
jo
es
push
movsb
adc
test
mov
inc
stc
cmpsl
adc
lcall
lods
dec
pop
or
push
mov
cmp
out
movsl
adc
in
xchg
aam
xor
popf
xchg
int
add
aas
ficompl
movsb
fstl
clts
test
pop
push
mov
rorl
pusha
leave
fiaddl
jle
push
in
insl
and
pop
rcrb
inc
mov
xchg
mov
pop
pushf
and
push
mov
roll
movsl
xor
pop
cmp
xchg
fsubs
mov
in
mov
jns
ret
pop
mov
push
aam
push
pop
daa
lret
mov
nop
sub
gs
sub
mov
imul
mov
xchg
movsl
pushw
or
mov
pop
repz
sar
sarb
add
sbb
fstps
je
sarl
popf
fnstenv
leave
scas
cmp
std
insb
jmp
sub
sub
fstps
lods
lcall
xchg
cmp
pushf
adc
lods
loop
push
push
negl
fld
inc
push
mov
insb
and
cld
mov
push
bnd
mov
fstp
lcall
mov
popa
aaa
aad
cmpsl
idiv
mov
psllq
sbb
xor
rcr
mov
pop
popa
lret
jl
repz
sub
jnp
sub
mov
jmp
aad
insb
aas
xchg
inc
dec
sub
jne
or
int3
subl
inc
sub
mov
rorb
mov
sub
adc
add
ret
dec
add
add
cmp
adc
scas
and
sbb
loopne
test
mov
cmp
insl
dec
xchg
sahf
jle
or
xor
loopne
sti
cmpsb
in
lea
pop
lahf
faddl
movsb
test
mov
jo
fcoms
xchg
add
imul
inc
pop
pop
xor
add
aas
je,pn
roll
arpl
jno
inc
mov
cmpsl
jnp
test
mov
mov
outsb
mov
fistps
inc
pusha
cmpl
fdivrs
cli
cmp
adc
out
mov
cmp
stos
out
xchg
outsl
xchg
inc
scas
lret
and
cmpsb
daa
push
lods
testb
mov
ja
outsb
jmp
ds
ficoms
int3
mov
and
cld
jo
and
push
sbb
into
call
cmpsl
inc
sub
ret
or
test
dec
dec
mov
jbe
fiadds
shl
mov
push
pop
or
sub
cmc
stos
int3
mov
push
fcomi
cs
adc
hlt
mov
inc
dec
test
dec
ss
adc
or
test
shr
iret
mov
idivl
xor
add
pop
jb
rclb
cmc
movsb
loope
arpl
xchg
daa
int
iret
out
das
imul
and
add
adc
lret
les
pop
sahf
jno
out
pop
mov
mov
movsl
int3
push
adc
mov
repz
or
cmp
shr
adc
pop
mov
sub
aad
daa
fldcw
inc
lret
mov
jg
push
sbb
adc
insb
test
sahf
negb
fildll
mov
movsb
cmp
push
cs
xchg
push
mov
jae
pop
mov
xchg
or
cmp
es
mov
mov
inc
mov
add
inc
sub
pop
mov
sbb
cs
imul
mov
mov
call
mov
insl
jle
mov
inc
dec
mov
jle
lods
pop
jbe
popa
sub
inc
sub
test
mov
add
in
sbb
sub
sbb
outsl
dec
out
jecxz
mov
pop
sarl
add
pop
popa
jne
leave
mov
mov
loop
pop
fistpll
insb
and
fnstenv
sbb
mov
xchg
inc
mov
fsubr
sbb
add
call
pop
daa
int3
jns
xlat
push
push
sbb
or
sti
test
xchg
or
movb
mov
xchg
sti
adc
or
adcl
mov
ret
lods
lcall
push
inc
shrb
add
shrb
xlat
lret
mov
xchg
outsl
popf
inc
mov
inc
sub
pop
pusha
cmp
and
jecxz
add
inc
in
mov
dec
divl
dec
repnz
outsb
rol
add
lock
lods
xchg
push
adc
jmp
mov
push
cwtl
divl
cmp
push
testb
and
loopne
hlt
add
push
add
xchg
adcb
xlat
mov
int
or
jg
dec
test
add
sbb
dec
sti
in
inc
mov
dec
hlt
aas
push
fsubrl
mov
mov
imul
inc
dec
sub
mov
jp
lcall
scas
xchg
mov
hlt
push
add
xor
mov
pop
push
mov
es
gs
jnp
test
jl
addr16
lcall
mov
stos
mov
outsl
or
in
mov
lahf
pushf
mov
inc
and
push
popa
and
cmp
fs
aam
adc
sahf
aaa
sub
movsb
enter
dec
scas
rclb
cwtl
ds
pop
ljmp
xchg
std
add
push
test
add
xchg
in
inc
xchg
in
adc
push
stos
outsl
sbb
nop
add
inc
sahf
cmp
cwtl
cmpsl
sbb
pop
xchg
xchg
jecxz
jle
vminpd
push
fadds
imul
incb
adc
pop
ud2
data16
push
test
mov
mov
lds
xchg
aam
hlt
mov
into
subps
data16
or
adc
add
add
int3
test
pop
add
sbb
pop
iret
out
jnp
ret
pop
subb
xchg
and
lods
hlt
cmp
jae
xchg
dec
sahf
and
push
outsb
mull
xlat
xchg
mov
ja
repz
clc
push
cmpsb
mov
aam
mov
sbb
jp
sub
push
icebp
pusha
movsl
out
adc
xchg
sarl
les
.byte
xchg
data16
